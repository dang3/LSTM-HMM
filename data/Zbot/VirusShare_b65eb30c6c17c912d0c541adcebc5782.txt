pushl
add
sub
jmp
jmp
or
cmc
imul
mov
xchg
insb
dec
adc
inc
push
rcl
sub
and
and
jle
aam
adc
and
push
push
loop
cmp
cmp
jae
lcall
std
call
jle
adc
out
cmp
and
adc
jle
jle
jae
enter
mov
sub
lcall
aam
dec
in
fnsave
push
and
aam
add
xchg
loop
and
cmp
cmp
dec
sub
cmp
jnp
std
sbb
ljmp
jle
mov
aaa
inc
and
addr16
and
inc
cmp
fidivl
lcall
movsb
jg
mov
fisttpl
push
loop
and
pop
out
mov
sbb
push
mov
imul
enter
fcmovnbe
fisubrl
add
shl
add
repnz
mov
ljmp
addr16
jle
fsubrl
rorb
add
jae
inc
imul
loop
sbb
sub
sbb
mov
mov
add
rolb
fstpl
cmp
cmp
inc
imul
loop
adc
scas
mov
pop
mov
addr16
push
mov
popa
imul
or
adc
enter
loop
jo
mov
pop
lea
and
insl
pop
sub
or
jne
shrl
jae
lea
pop
inc
fistpl
or
popa
mov
cmpsb
inc
push
sub
xlat
xchg
scas
cmp
adc
add
mov
sub
insb
mov
mov
out
adc
ret
mulb
mov
xchg
sbb
pop
sub
inc
outsl
mov
mov
ret
push
or
cwtl
add
xchg
lods
adc
and
mov
sub
inc
jne
jbe
pop
enter
test
push
cmp
xor
xor
popa
jo
pop
imul
lods
insb
fwait
mov
push
ljmp
sbb
mov
pushf
mov
test
or
sbb
xorl
sbb
and
mov
xchg
cmp
pop
shrl
jne
jle
and
ret
xchg
mov
pop
rcl
pop
fwait
adc
fbld
mov
mov
add
sub
dec
pop
sub
mov
cmpsl
sub
or
and
sbb
push
cmp
cs
incb
mov
fstl
and
fidivrl
negb
inc
test
scas
mov
and
outsb
imul
icebp
inc
fcmovne
mov
lcall
xor
adc
push
imul
lcall
mov
scas
inc
das
ja
cmp
adc
jae
sub
push
inc
mov
xlat
dec
pop
imul
or
mov
mov
in
mov
cmp
movsb
decl
int
mov
or
xor
imul
int
push
int
fildl
cmpsb
sbb
imul
jle
ss
rorl
dec
push
inc
sub
pop
ret
subb
add
lret
imul
lock
cmc
xorl
xorb
ret
jns
or
loopne
mov
jle
and
outsb
mov
insl
lods
xor
int3
out
out
or
std
arpl
out
pop
sbb
mov
push
push
lods
daa
daa
mov
mov
inc
xlat
pop
push
enter
inc
mov
adc
imul
ror
add
mov
or
jne
pop
xor
mov
negl
aam
push
lret
lds
mov
lea
lcall
sub
mov
cmp
xor
aaa
out
lea
addr16
jne
jns
scas
push
push
loope
out
pop
das
mov
push
add
cld
xchg
aam
add
scas
jne
enter
hlt
jl
sbb
push
jp
repz
arpl
int
into
in
outsl
lea
rorb
or
lcall
pop
mov
cmp
jae
divl
mov
sbb
inc
dec
sbb
negl
jo
mov
icebp
negl
dec
cmp
bswap
lea
xor
aad
inc
push
rep
loopne
jae
das
mov
std
or
push
imul
inc
in
lcall
cld
outsb
mov
jge
dec
cmp
jo
add
in
add
mov
sbb
mov
roll
cmp
push
out
outsb
push
pop
insb
mov
adc
sbb
jmp
push
dec
sbb
mov
cmp
sub
arpl
or
sub
dec
mov
push
pop
pushl
lea
push
lea
push
push
push
jge
lret
leave
ret
out
adc
adc
mov
xchg
out
std
insb
lea
je
mov
pop
mov
sub
pusha
or
mov
insl
mov
insl
pop
hlt
pop
push
xchg
mov
pop
add
rcrb
pop
and
mov
mov
ds
sub
lret
dec
sbb
push
mov
adc
jbe
sbb
popa
lcall
pop
push
lahf
mov
nop
sbb
sub
jmp
jle
push
sbb
adc
popf
xchg
flds
cltd
sbb
int
pop
outsl
xchg
popf
add
arpl
dec
fs
lods
arpl
xlat
lcall
inc
test
adc
ss
jnp
aam
adc
xlat
cmp
jle
xchg
ljmp
or
inc
jmp
loopne
vpmaxub
add
xchg
mov
rcrl
roll
xor
cmp
xchg
jle
jb
divb
cmp
shlb
int
xor
lcall
inc
imul
out
mov
lcall
push
cltd
ss
jnp
dec
add
inc
ss
aad
dec
setbe
insb
push
sbb
rcll
lods
aam
and
fbstp
cwtl
or
in
or
or
ss
mov
inc
jmp
jb
es
xchg
js
jle
outsb
jae
jae
inc
ja
adc
pop
aaa
dec
and
imul
adc
xchg
sbb
shl
fsubs
sbb
in
xchg
mov
sbb
or
repnz
pop
in
jae
xlat
inc
jae
dec
popa
aam
dec
ljmp
test
push
and
int3
es
pand
sti
lea
cli
cmp
adc
mov
or
loop
and
lods
mov
std
pusha
inc
push
jge
xchg
imul
pop
adc
sbb
jbe
mov
adc
es
xor
mov
add
add
mov
pop
loop
mov
pop
jae
xor
mov
push
pop
lods
imul
sbb
mov
xor
mov
xor
movsl
jmp
xor
cld
icebp
sub
mov
xchg
hlt
rolb
inc
imul
adc
add
and
mov
shl
pop
hlt
xor
or
mov
mov
add
xlat
add
add
test
sub
mov
push
pop
ljmp
push
push
call
add
lds
push
jl
lcall
inc
sub
add
add
inc
lret
jnp
cmp
lods
cwtl
xor
mov
insl
cmp
dec
loopne
push
in
add
addr16
pop
xor
sub
addl
and
cmp
inc
testl
orl
test
orl
jle
cmpsl
push
lcall
jno
xchg
mov
push
cmp
adcl
inc
loop
loop
lcall
dec
xor
sbb
add
enter
jae
sbb
fsubp
inc
test
inc
in
nop
cmp
out
lcall
sahf
add
dec
jnp
jle
mov
out
sbb
pop
ret
aam
cmpl
push
sbb
mov
sbb
out
fimuls
bound
xchg
or
mov
test
add
cmp
xchg
xchg
jnp
aad
push
mov
mov
hlt
inc
xchg
popa
inc
out
jne
push
aad
in
adc
cltd
xchg
jecxz
cmp
add
and
pop
sbb
push
jg
mov
or
mov
xor
daa
mov
push
clc
pop
jb
sbb
stos
rolb
jae
pop
cs
pop
outsl
mov
nop
mov
lcall
xlat
sub
or
and
dec
insl
ficompl
dec
clc
xor
or
sub
push
imul
add
movsl
arpl
imul
pop
pop
aam
inc
enter
xchg
sub
int
cs
jae
inc
xor
inc
sbb
mov
cmp
mov
push
xor
sahf
mov
int
aam
sub
outsl
cli
dec
insl
sbb
xchg
daa
jp
pop
sub
push
dec
cltd
jb
xor
xor
dec
pop
jae
or
mov
mov
lods
aad
jp
pusha
movsl
loop
mov
call
or
jo
sub
mov
icebp
sbb
push
dec
mov
lret
mov
out
mov
fisttpll
test
cmpsb
pop
xor
cmpsb
dec
add
dec
sbb
jb
mov
xchg
fsubs
jae
std
cmpsb
jge
lret
mov
ret
mov
xorl
iret
int
or
js
push
mov
div
aam
or
lea
and
add
mov
jae
pushf
pop
and
out
mov
mov
pushf
ds
dec
sbb
outsl
repz
sub
decl
adc
jno
ljmp
xchg
add
cmpsb
ret
mov
je
jp
jbe
rorl
mov
and
icebp
mov
mov
xor
mov
xor
bound
outsb
aam
int
xor
and
xchg
inc
stc
push
imul
fsub
cmp
or
int3
lahf
subl
fwait
sarl
and
int
fstpl
rcl
lea
sarl
jmp
xchg
fstps
xchg
lahf
es
push
cwtl
jo
ss
decb
into
cmp
cs
sti
inc
imul
lods
cmp
daa
in
jle
sbb
push
add
push
or
sbb
scas
dec
jne
push
pop
and
sbb
adc
push
xor
mov
pop
jb
jo
aam
cmc
xchg
push
xor
popa
xlat
sub
jle
incb
cmp
dec
stos
inc
imul
mov
sub
xor
cmpsl
jecxz
adc
mov
and
shl
cmc
insb
and
addr16
rorb
cmp
fs
in
mov
rcrb
cltd
mov
mov
mov
mov
mov
push
fistps
div
arpl
clc
repz
fiadds
notb
push
lock
out
jl
test
push
and
sub
adc
push
mov
cmp
cmp
loopne,pt
add
jb
aam
sub
pop
mov
pop
cwtl
dec
or
lret
add
lods
push
in
insb
int
add
popf
lret
inc
lret
pop
lds
in
xor
add
cmpsb
push
int
pop
cmp
sub
aaa
enter
jbe
pop
xchg
divb
in
clc
pop
xchg
xchg
xor
sbb
ja
lret
push
and
or
cmpsb
aam
pop
lcall
pop
shll
add
adc
mov
and
shl
mov
add
adcb
lret
xchg
inc
rcrl
data16
cmpl
xchg
stc
and
faddl
jae
mov
mov
sbb
sbb
push
fisttpl
jo
insb
mov
push
or
inc
push
insb
in
lret
push
enter
subl
aam
mov
adc
or
stos
addb
sarb
test
pop
out
insb
out
nop
sub
jo
repnz
sbb
adc
lods
aam
mov
leave
sahf
pop
xor
pop
push
cwtl
cmp
cwtl
xor
loop
icebp
mov
imul
xlat
or
or
add
add
subl
andb
adc
aad
sar
lds
sbb
out
cwtl
cmp
jnp
cmp
or
cld
mov
add
jle
mov
and
mov
add
int
push
or
xor
sub
sbb
cmpsl
push
lret
int
and
enter
cld
pushl
adc
loopne
aas
enter
jbe
lods
pop
jl
sbb
sarb
lock
xchg
sarb
adc
or
mov
pop
fs
repnz
add
test
jnp
lea
jo
push
pop
jae
jle
xor
filds
lcall
sbb
aad
sub
jecxz
cltd
pop
jae
pusha
es
mov
mov
dec
push
dec
xchg
rcll
or
repnz
push
cmpsl
and
shrl
mov
mov
add
xor
jo
insl
out
test
push
out
notb
pop
int
mov
jo
push
push
xchg
daa
es
ljmp
out
push
clc
adc
cmp
xor
mov
dec
in
scas
mov
push
repnz
fldl
stos
adc
xor
and
test
lcall
cmp
jle
lds
lea
in
adc
push
int
cmp
outsb
mov
jo
rorb
or
inc
inc
jbe
cmp
xor
dec
ds
pushf
mov
daa
or
es
lods
dec
sbb
mov
jmp
testb
daa
cs
dec
pop
sub
dec
aad
cltd
push
or
lret
gs
or
jae
or
jns
in
inc
add
dec
mov
mov
sbb
push
aas
hlt
shll
xchg
test
xchg
mulb
sbb
jae
rorl
frndint
ret
es
push
jb
pop
pop
xor
cmp
mov
mov
xor
ret
fnsave
pop
push
xchg
cs
sub
lcall
sbbb
jle
pop
cmp
jge
add
pop
sbb
jae
rcrb
sub
cmpsb
push
sbb
cmp
inc
add
push
xor
andl
push
pop
std
mov
mov
or
and
nop
scas
sbb
lock
and
add
mov
outsl
jne
push
sub
xlat
push
or
lret
repnz
adc
cmp
add
sub
adc
mov
or
lods
add
cmpsl
imulb
jo
insl
pop
push
push
pop
mov
add
cmpb
push
pop
cltd
sub
movsb
cld
cmp
sub
sub
daa
xor
dec
inc
inc
sub
dec
pop
sub
loopne
sub
xchg
loope
in
and
dec
cltd
xor
sbb
cltd
lods
sbb
xor
add
loop
shrb
xor
xchg
fs
cvtpi2ps
jle
lea
inc
and
outsl
jne
add
enter
mov
sbb
hlt
mov
xor
mov
adc
loopne
ja
xor
rcr
jno
jnp
mov
std
pusha
ljmp
pop
jae
and
jl
and
sbb
jo
mov
sub
xchg
or
ficoml
gs
push
or
mov
shrl
xlat
pop
xor
std
mov
aad
xor
cmp
pusha
xchg
xchg
mov
xor
push
push
jl
cmp
test
sub
int
or
xchg
xor
or
push
xchg
clc
andl
sbb
push
and
loop
xchg
jmp
fwait
mull
loopne
testb
mov
push
fstpl
adc
jae
or
xchg
adc
test
adc
data16
sub
nop
ss
out
jg
movsl
jbe
sbb
sbb
add
gs
jae
mov
jno
sub
pusha
add
xorl
jecxz
cmp
aam
arpl
test
cmpsl
or
gs
lcall
adc
pop
mov
mov
ret
xchg
ficoms
cmpsl
xor
push
jo
mov
xchg
push
xor
icebp
push
sbb
adc
add
pushf
stos
push
xlat
push
into
loopne
test
push
addr16
cmpsl
enter
cmp
cs
bound
daa
sbb
jae
ret
inc
cwtl
or
push
es
mov
push
negl
dec
enter
and
xchg
push
lret
add
mov
fcomps
mov
cld
dec
mov
and
cmp
out
mov
imul
imul
sbb
jbe
inc
add
pop
fxch
inc
in
push
nop
repnz
loop
mov
xchg
gs
das
adc
push
mov
adc
out
jb
loopne
loopne
pop
idivb
addb
pop
andl
mov
xor
xchg
rcl
mov
dec
mov
jns
or
add
mov
mov
scas
sbb
xor
jnp
pop
push
in
loopne
inc
stos
stos
cmp
pop
push
xchg
fistl
out
lea
pusha
ret
rorl
loope
dec
sahf
je
push
ret
mov
adc
or
xchg
inc
xor
push
lea
push
pop
dec
aad
dec
mov
cmp
push
es
mov
push
es
mov
mov
cltd
dec
in
adc
or
or
push
int
push
das
cltd
or
inc
and
lods
xchg
and
shll
icebp
cmp
sbb
fs
shll
icebp
xor
adc
inc
sub
subl
xchg
mov
and
out
xor
test
js
int
jb
add
mov
rclb
cmp
enter
pop
rcrl
loope
cmp
fcmovnb
cli
xor
push
mov
scas
sbb
pop
mov
jo
pushf
push
push
xchg
inc
jnp
push
lcall
or
mov
shlb
cmp
out
push
popa
xor
dec
ficompl
loopne
cmp
mov
mov
popa
xor
or
nop
lcall
sub
xor
ficomps
frstor
pushf
or
push
jno
add
jne
mov
push
aaa
ljmp
jp
lret
mov
scas
add
stos
mov
mov
inc
out
mov
push
dec
arpl
mov
pop
and
sbbl
xchg
and
test
repnz
xchg
pushf
jae
adc
sbb
rcll
sbb
jns
loop
rclb
out
xchg
lcall
or
stos
fwait
rcrb
lods
dec
cwtl
lret
adc
mov
add
add
mov
std
push
aam
and
scas
sbb
pop
nop
ret
rolb
jae
test
add
xor
mov
xor
loope
inc
sbb
inc
out
fisubl
add
ljmp
movsl
inc
lret
cmp
cwtl
js
rclb
sub
rorl
xor
cmpsb
push
lea
addl
push
mov
push
jae
pop
sbb
sbb
frstor
and
jae
rcl
sbb
cmp
xor
push
stc
adc
xor
push
jae
dec
cmp
pop
ret
shrb
je
or
pop
rorb
push
or
loop
cmp
rcrl
adc
xor
ds
mov
stos
loope
mov
pop
jae
add
sahf
adc
leave
out
test
jae
inc
ret
sbb
rclb
add
mov
xorl
cmp
ljmp
or
mov
movl
jl
sbb
jno
inc
ret
xchg
lret
aad
ss
xor
push
mov
call
lea
lcall
daa
jo,pt
jae
push
push
aam
xor
and
or
push
gs
jb
lcall
inc
or
mov
stos
mov
sub
rcrl
lods
outsb
ljmp
jecxz
rcrb
ret
add
daa
ljmp
mov
add
decl
jmp
mov
mov
in
add
or
cmp
push
jmp
rorl
lcall
pop
sbb
push
push
adc
add
call
jge
shrb
mul
sarl
sbb
jo
adc
cmp
adc
or
mov
push
lods
sub
pop
call
pushf
test
jo
lret
pop
adc
jg
into
es
pop
cli
das
jbe
mull
jo
mov
sarb
test
mov
inc
mov
xlat
mov
daa
lahf
push
and
fcompl
adc
inc
les
jo
aaa
inc
xchg
jecxz
lods
cmpsb
lcall
xor
jl
push
or
jb
dec
aad
add
jo
inc
or
fists
xor
testb
sbb
inc
xchg
push
loopne
cltd
outsl
int3
roll
push
inc
sub
into
test
or
mov
jle
es
mov
and
clc
lods
mov
push
cmp
inc
xor
out
push
rcrb
cmpl
mov
xlat
ljmp
adc
nop
xor
sbb
in
push
test
xchg
adc
push
mov
insb
pop
add
push
cmovge
lea
xchg
jmp
push
push
mov
popa
or
sbb
add
or
or
pop
ror
shrb
add
mov
scas
jmp
lcall
jae
pop
pop
or
push
sbb
mov
cmpsl
sbb
xlat
popa
das
add
or
jg
dec
inc
jnp
push
lret
data16
push
sub
push
jb
nop
and
jb
mov
scas
repnz
adc
imulb
mov
stos
outsl
jg
rolb
dec
sub
into
jmp
out
mov
lock
jp
repz
sbb
mov
xor
dec
push
or
push
in
icebp
iret
push
xor
inc
and
aas
xchg
and
fnstcw
iret
stc
nop
add
nop
fwait
cli
jo
adc
das
in
xor
popa
mov
sbb
push
leave
adc
add
leave
add
sub
xchg
sbb
aam
push
or
mov
xlat
popa
ret
daa
inc
orl
mov
lret
sub
pop
push
pop
sbb
mov
xor
movsl
jns
data16
sbbb
sub
mov
add
dec
out
popa
push
stc
xchg
cmp
cs
es
jbe
mov
sbb
xor
add
nop
loopne
subl
add
ljmp
adc
sub
cmp
jl
mov
out
inc
repz
xor
loopne
xor
out
or
push
leave
clc
mov
cwtl
cmp
adc
iret
jae
mov
add
sbb
push
adc
testb
lods
inc
lods
popa
mov
in
mov
pop
inc
adc
int
cmp
addl
pop
in
push
pop
frstor
jbe,pt
call
add
xchg
adcl
leave
inc
int
aam
push
mov
inc
cmp
mov
int
push
inc
and
dec
in
sub
or
jp
push
data16
push
daa
lcall
mov
cmp
jp
dec
jb
push
enter
inc
lods
inc
push
or
mov
xchg
int
xor
mov
stc
push
adc
or
cmp
mov
test
sub
aam
sub
mov
mov
int
arpl
lock
enter
push
outsb
daa
leave
push
in
ljmp
adc
mov
clc
mov
push
jmp
add
fildl
mov
dec
shll
sub
lret
pop
push
jmp
movb
xchg
sub
icebp
enter
mov
cwtl
testb
sbb
je
push
lods
inc
mov
mov
daa
data16
testb
mov
add
inc
jns
dec
pop
loope
mov
xor
push
scas
mov
sbb
enter
cs
mov
mov
jecxz
inc
into
adc
rol
outsb
jle
xor
ret
sbb
xchg
sbb
pop
es
jae
xlat
ret
rclb
jb
ljmp
rcl
push
addl
cs
ret
test
cld
lret
adc
mov
jo
into
xor
cmpsl
sub
or
sub
dec
or
push
xchg
std
sbb
xor
mov
mov
sbb
idivb
sub
add
fidivs
sbb
adc
xchg
sub
inc
inc
mov
pop
lea
adc
rcll
sbb
sbb
movsl
cmp
sbb
outsb
dec
shll
cltd
enter
mov
add
dec
push
das
repz
xor
pushf
jb
jg
insl
sbb
cmpsl
push
xor
test
inc
cs
jno
sahf
jne
cltd
push
mov
sbb
mov
mov
add
adc
xor
sub
lret
mov
in
cmpsl
out
test
cmp
in
mov
lcall
int
xchg
push
xor
sbb
stos
xchg
ret
enter
andb
cs
lock
lea
jecxz
dec
jp
push
sbb
addr16
inc
and
add
loop
mov
push
mov
add
add
fadds
push
push
mov
inc
jb
out
mov
out
shlb
dec
test
test
mov
int
xor
scas
mov
lret
sbb
push
test
testb
pusha
leave
inc
push
or
test
repnz
jo
test
lods
jns
mov
xor
or
in
cmp
test
mov
inc
roll
sbb
shrl
inc
loopne
arpl
sbb
or
inc
fs
aad
sbb
lcall
lods
mov
sub
mov
add
xor
shlb
fucomp
rcrb
leave
lcall
bound
das
ja
orl
lret
daa
push
push
pop
push
rcrb
or
mov
shr
aam
mov
pop
in
imul
and
lcall
mov
xchg
mov
xor
inc
inc
int
mov
iret
aam
pop
pop
sbb
pop
push
rcrb
mov
xchg
inc
scas
mov
negb
js
dec
cmp
add
xchg
sbb
stos
xor
int
fsubrs
cmpsb
loopne
or
dec
int
cmp
cmp
xchg
push
lcall
movl
aad
aam
and
push
das
imul
push
bound
add
and
jae
lea
mov
push
xchg
inc
xchg
xor
cmp
and
sub
test
les
int3
scas
inc
cmp
ljmp
out
adc
push
cmp
jmp
aad
or
shlb
inc
scas
mov
sub
jmp
sti
xchg
insb
call
ljmp
dec
ss
push
adc
incl
adc
dec
fsubs
mov
pop
jno
xchg
mov
in
push
xchg
mov
cli
hlt
scas
sbb
jmp
jb
inc
jge
push
in
nop
lret
loope
je
pusha
adc
push
inc
sub
popa
aam
into
xor
enter
popa
sbb
push
mov
mov
mov
shl
fdivrs
sbb
loop
pop
mov
adc
inc
std
aad
xor
jp
jne
mov
inc
mov
jo
scas
les
jno
popl
sbb
movb
dec
mov
jbe
sbb
arpl
sbbb
sbb
add
stos
mov
dec
mov
cmc
fwait
add
inc
sub
sbb
imul
adc
testb
cmp
push
sub
jno
scas
lcall
shlb
outsb
lods
es
sbb
mov
pusha
and
mov
push
cmp
mov
mov
fsubrs
sbb
push
push
aaa
push
imul
mov
and
push
add
inc
jae
dec
sub
andl
ss
lods
mov
push
js
pop
ljmp
and
push
imul
and
loopne
ret
ret
cltd
push
popf
cmp
push
sarb
xchg
cwtl
loop
out
lahf
mov
mov
clc
jl
int
mov
jle
jae
mov
jae
and
in
inc
sbb
int
sub
inc
jo
dec
cmpsb
or
or
hlt
adc
pop
aam
xchg
test
push
xor
into
adc
push
push
and
stos
out
aam
sbb
cmpl
loop
rcrl
insl
imul
add
xor
mov
jg
idivb
push
mov
push
mov
add
into
adc
cld
pop
xor
jmp
popa
inc
aam
scas
or
jno
es
js
add
pop
loop
push
rol
shll
stos
out
sbbb
cmp
lret
outsb
inc
cmp
fldl
or
jae
movl
cltd
sbb
in
ljmp
cltd
push
lods
mov
jl
mov
mov
ljmp
hlt
loop
es
xor
add
ss
mov
jnp
ljmp
xor
cwtl
lcall
fimuls
out
lea
mov
jo
sbb
pusha
sub
mov
scas
dec
aas
jae
add
in
adc
orl
dec
mov
pop
cmpsl
loop
push
addr16
sub
jmp
scas
cltd
sub
cld
jnp
lea
dec
rcrb
js
cwtl
xchg
dec
add
push
aaa
push
lret
jb
fcomps
mov
push
scas
into
jo
pop
into
pop
notb
xor
mov
adc
mov
adc
jae
or
or
add
lcall
push
cmp
mov
daa
dec
stos
pop
setae
cmp
lcall
mov
loope
xchg
addl
sbb
push
add
sbb
push
rclb
push
xchg
pushf
xor
rcrb
out
stos
inc
sbb
mov
cmp
mov
sub
mov
insl
push
ret
pop
dec
mov
xchg
mov
shlb
or
and
popf
inc
int
mov
jno
sub
in
or
fiaddl
push
fs
push
add
jo
stos
mov
sar
cli
scas
or
lock
mov
mov
call
or
fisubl
aas
dec
inc
add
icebp
push
enter
xchg
jp
ja
sbb
cld
push
sub
jmp
add
ss
fimuls
sahf
mov
lahf
add
and
inc
pusha
shlb
mov
in
mov
cmpsl
iret
xchg
dec
loope
xor
push
or
mov
nop
cmp
cmp
inc
and
insb
sbb
mov
add
sarl
add
scas
jg
push
pop
cmp
movl
in
push
xlat
loop
mov
and
in
xor
sub
roll
es
loope
repnz
add
fimull
add
neg
movsl
aam
jb
cltd
aam
and
int
lods
jo
lock
pop
xchg
mov
cmpsl
rclb
sbb
jge
inc
or
cmp
lods
add
jg
mov
mov
adc
sbb
ret
pop
mov
xchg
orl
insl
adc
mov
and
das
lcall
dec
sarb
cld
jmp
inc
sub
lcall
push
or
aaa
or
or
test
ret
push
xor
xchg
xchg
mov
cmp
mov
cmpsl
test
shlb
push
bound
enter
push
mov
push
int
mov
mov
aad
leave
sub
test
adc
call
jbe
push
and
gs
add
leave
lcall
inc
adc
dec
das
and
add
loopne
leave
pop
jne
xchg
mov
daa
xchg
xor
cmpsb
push
cmp
sub
or
loopne
jae
adc
mov
jo
xchg
int
ljmp
cs
in
jae
mov
pop
test
adc
rorl
cli
pop
test
mov
cmpsl
and
dec
ljmp
pop
push
sbb
out
repnz
push
std
jns
add
mov
or
scas
sahf
stos
push
dec
in
inc
xor
pusha
inc
iret
subb
fsubrs
in
repnz
push
dec
add
sbb
sbb
add
adc
ljmp
inc
pop
incl
xor
mov
push
lock
fiadds
or
mov
imull
xor
inc
mov
pop
push
testl
pop
jno
cs
mov
sti
in
jno
adcb
loopne
add
or
mov
dec
fwait
scas
pop
sbbb
mov
or
mov
cli
es
std
adc
cli
add
adc
outsl
mov
adc
add
mov
push
push
jo
das
call
pop
mov
in
adc
pop
mov
inc
mov
mov
dec
insb
shrb
aam
test
mov
jg
push
push
push
sbb
leave
test
loope
pop
push
lock
jae
add
insl
ds
insb
in
or
jo
mov
inc
test
add
daa
fs
lret
inc
arpl
push
or
nop
mov
mov
pushf
dec
popa
push
sbb
pop
jbe
int
in
dec
fidivrl
test
sbb
jo
inc
int3
roll
lcall
in
xor
inc
add
lahf
sbb
fisubrl
sbb
or
jo
cmp
in
nop
sbbl
pop
jno
mov
aad
in
imul
sbb
mov
sarl
pusha
jb
mov
and
rorb
add
mov
aaa
and
cs
mov
shlb
lcall
enter
inc
cmp
flds
mov
test
mov
mov
jb
adc
and
inc
cltd
cmp
inc
push
and
mov
cmpsl
pop
push
xor
aaa
xlat
xor
mov
cvtps2pi
imul
add
adc
pop
inc
lea
xchg
pop
in
loopne
out
pop
outsb
cmp
push
or
cltd
and
push
inc
repnz
leave
outsl
jo
sbb
sbb
adc
adc
push
lea
cmp
xchg
lcall
mov
and
bound
push
cs
and
roll
adc
add
mov
push
cmp
aam
xor
mov
push
cmpsb
push
xchg
dec
or
fiadds
incb
inc
mov
mov
push
add
sub
mov
mov
loopne
push
mov
rclb
das
pop
cli
mov
in
or
sbb
in
adc
sub
xchg
cli
fstps
cmp
add
in
rorl
add
adc
adc
rcll
ja
or
and
xor
mov
pop
inc
and
ljmp
jmp
cmp
aad
int3
dec
dec
sbb
adc
jmp
dec
dec
inc
pop
mov
and
lock
sti
mov
jne
outsl
add
mov
pop
pop
pop
sbb
ds
cld
xor
or
mov
fldcw
out
stos
out
lds
sub
dec
sub
xchg
sti
and
dec
clc
push
jb
fnstenv
dec
aad
int3
fadds
and
xchg
and
push
jmp
and
enter
mov
cmp
stos
mov
xchg
sub
das
rorb
jmp
iret
sbbb
bound
mov
subb
xor
mov
sub
cmp
cld
and
adc
inc
cld
sti
or
sbb
ja
cmp
cmpsb
dec
mov
andb
jae
xchg
rcrl
gs
out
xor
mov
dec
jae
jp
add
data16
fiaddl
mov
mov
xchg
adc
push
add
insl
cmpsl
mov
mov
out
idivb
test
jo
mov
loop
lds
push
les
xor
mov
push
mov
mov
insb
cmp
ljmp
push
aam
loop,pn
jle
mov
test
push
scas
mov
orl
fidivs
xor
or
cmp
jnp
in
pop
scas
cltd
pop
inc
pop
cltd
sbb
cltd
jb
mov
orb
aas
jne
dec
nop
stos
sbb
leave
sub
jne
adc
mov
xor
mov
sbb
mov
cs
mov
push
adc
into
add
stc
cmp
jne
aam
fisttps
fstpl
mov
and
aam
cmp
mov
add
loopne
dec
ds
jb
pop
rclb
cmc
adc
sub
push
test
add
aaa
sub
test
xor
scas
ret
push
mov
xchg
stos
adc
adc
add
sbb
loope
addl
lret
pop
test
mov
xor
test
jg
adc
push
lret
dec
xor
pop
dec
sub
and
lds
inc
inc
sub
std
gs
jbe
mov
inc
int
loop
pop
and
mov
rclb
rcrb
cmp
scas
dec
nop
addl
inc
xor
ljmp
cli
arpl
or
adc
inc
icebp
aam
mov
ja
inc
cld
xchg
push
imul
ja
scas
ds
jmp
addb
loop
jo
enter
loop
add
aam
pop
loopne
push
dec
mov
sbb
test
loopne
pop
bound
inc
into
adc
imul
xor
enter
push
push
push
rorb
popa
jg
ficompl
pop
shrl
cltd
dec
cmp
aam
xchg
mov
lret
mov
in
inc
xchg
sub
data16
cmp
mov
aam
lea
inc
ret
mov
push
sub
or
jb
mov
pop
test
and
es
inc
sarl
adc
pop
mov
add
and
out
add
mov
hlt
mov
or
mov
lea
add
out
faddl
push
cltd
xor
insb
mov
add
push
scas
sbb
int3
adc
sbb
sbb
and
add
inc
stos
dec
cltd
or
xor
or
jae
lcall
cmpsl
cli
jb
xlat
xor
adc
mov
enter
lret
jo
mov
xchg
stos
adc
cltd
pop
mov
or
sub
jb
mov
test
fdiv
loop
xchg
add
jae
add
aad
stos
jne
into
mov
or
ret
mov
shlb
and
sbb
adc
scas
xchg
pushf
adc
push
or
jne
lcall
xchg
adc
scas
mov
dec
cld
scas
add
adc
dec
mov
notb
mov
add
jns
xor
dec
mov
push
and
xor
jg
stos
les
flds
mov
cmp
inc
test
jge
and
mov
imul
pop
mov
adc
roll
loopne
and
int
adc
cmp
daa
dec
adc
or
sahf
shlb
xor
mov
mov
mov
sbb
mov
je
add
push
push
push
pop
mov
mov
pop
bound
pop
add
addr16
in
loop
jns
adcl
add
pop
or
adc
cmp
mov
and
add
pop
aam
pusha
jb
pop
fildl
xchg
mov
std
add
push
mov
xchg
jo
add
rolb
sbb
or
loope
inc
movsl
enter
push
or
orb
in
cmp
mov
adc
xor
jmp
out
mov
je
mov
jmp
call
jb
shl
sub
jne
xor
inc
icebp
and
std
mov
inc
sub
xor
xor
in
pop
add
xor
movsl
xor
sub
hlt
jo
lcall
or
or
mov
cltd
test
sub
dec
test
pop
push
jbe
adc
xchg
mov
xchg
aad
cmp
or
push
int3
push
scas
lcall
addb
out
orl
sub
stos
mov
cmpsb
scas
lods
xchg
mov
popa
enter
fcomps
enter
orl
sub
xor
xchg
insl
lods
push
push
push
pop
scas
add
mov
jne
neg
sti
push
aam
sub
call
scas
mov
mov
mov
or
in
cwtl
jg
lcall
les
adc
sbb
inc
mov
add
test
or
xlat
out
mov
inc
test
sbb
mov
cmp
or
add
push
or
add
test
sub
xchg
rcrb
adc
ficoms
popf
dec
movl
dec
xchg
out
add
incl
jae
pushf
mov
xor
and
or
fistpll
adc
and
sbb
mov
push
push
dec
subl
sub
ljmp
xchg
xchg
or
stos
js
pusha
jb
pop
adc
jo,pt
or
sbb
dec
in
mov
add
jo
jae
pop
int
sbb
sub
es
stos
iret
adc
inc
xor
scas
aaa
push
loopne
out
jle
cmp
add
lds
or
pop
lock
mov
lea
push
fbld
rcrl
rolb
rcll
aam
pop
cmp
stos
iret
aad
add
mov
mov
cmpsl
lret
xchg
mov
inc
test
push
mov
or
jne
push
fbld
lds
or
out
adc
mov
lea
cmp
jno
mov
loope
ljmp
cmpsl
lea
sbb
jb
rcl
sub
mov
rcll
ljmp
push
pop
movsl
shrb
add
enter
test
mov
push
pop
mov
sub
orb
lcall
mov
decl
fisubl
jo
add
sysret
es
movb
xchg
stos
shll
push
ljmp
call
push
or
lods
roll
rolb
add
add
xchg
add
or
mov
xchg
mov
pop
addr16
push
push
popa
outsl
mov
add
sarl
shlb
or
or
aaa
push
inc
clc
push
daa
add
push
push
xchg
push
loop
pop
sub
push
dec
stos
or
adc
sub
xchg
mov
mov
sub
adc
iret
adc
sbb
sahf
fnstcw
or
add
jae
out
cld
loopne
jae
mov
xchg
inc
cs
xor
jae
call
pop
adc
sbb
xor
push
add
mov
mov
andl
jecxz
inc
loope
shrl
push
add
dec
mov
lds
inc
fwait
xchg
ljmp
sbb
and
jl
lcall
sbb
cmp
jo
in
sub
shll
aad
jb
mov
lods
or
mov
hlt
sub
fstl
push
out
xorl
xor
sahf
mov
aam
in
mov
push
lea
cltd
add
dec
or
adc
aad
sbb
push
sbb
clc
ds
scas
out
inc
pop
fidivl
inc
scas
and
push
scas
add
inc
bound
add
inc
adc
out
loope
mov
cmp
pop
xor
mov
sbb
jo
into
inc
and
nop
sub
nop
adcl
push
or
sub
mov
push
out
loopne
adc
pop
add
pop
mov
dec
mov
inc
jl
sbb
and
jmp
in
jns
mov
xchg
and
jae
push
hlt
popa
push
mov
push
in
test
cmp
xchg
cmp
popf
cmp
int
adc
xor
pop
addr16
and
enter
cltd
js
push
shlb
cmp
xchg
stos
mov
int
lret
or
xor
xchg
xor
mov
jnp
mov
xchg
daa
push
cmpsl
inc
xor
jge
inc
jmp
sub
jo
or
jmp
dec
and
mov
fdivrs
outsl
lds
adc
idiv
mov
mov
imul
and
add
or
dec
popf
incb
cmp
into
adc
mov
add
sub
jg
call
sub
add
ds
inc
sbb
add
mov
pop
jo
dec
popa
mov
inc
lcall
add
cli
sub
sub
adc
test
push
int3
test
or
pushf
push
xor
popf
shr
das
ffree
addr16
jmp
push
add
xor
push
mov
sbb
cltd
popf
sbb
cmpsb
xchg
pop
scas
sbb
xchg
rcll
scas
adc
repz
xor
int
push
inc
ret
push
pusha
add
mov
push
imul
cmp
dec
jecxz
adc
inc
in
cmp
pop
pop
aaa
cmp
test
call
xchg
in
pop
lock
rcrl
jbe
inc
sbb
daa
ljmp
push
add
sbb
js
jb
cmpsl
jae
je
rorb
mov
pop
rolb
into
in
cmp
dec
pop
and
cmp
scas
testb
addb
sbb
add
mov
dec
popa
mov
popa
adc
cmp
adc
lret
xchg
popa
sbb
mov
xor
mov
leave
mov
sbb
scas
enter
adc
rcr
jmp
xchg
aad
fcoml
or
sub
xor
pop
jae
push
lret
test
xor
lcall
test
jl
jae
push
lret
and
fs
or
mov
les
jp
jb
cmp
out
loopne
cmp
test
cmpsb
ljmp
sub
mov
enter
sarl
stc
or
daa
sbb
hlt
loop
sbb
or
or
in
xchg
in
testl
loope
test
mov
jle
sahf
mov
mov
insb
ss
fidivrs
fs
add
and
fstps
sub
or
mov
xor
jo
mov
or
je
adc
push
inc
aam
or
subl
push
mov
movlps
fsubl
loopne
int3
or
fildll
push
add
adc
sbb
jb
nop
incl
pusha
or
sub
cmp
icebp
int
ret
lods
push
or
push
and
inc
aas
mov
mov
and
push
push
mov
les
jo,pn
dec
sbb
mov
pop
lea
cmpsl
inc
aam
pop
into
call
pop
dec
push
mov
mov
cmp
and
mov
dec
inc
daa
stos
adc
hlt
sbb
xor
faddp
push
cmpsl
pop
xchg
movsl
pop
jge
sbb
inc
xor
push
loope
cs
or
xor
cltd
or
and
insl
in
or
scas
mov
pop
xchg
adc
sub
lods
add
inc
rclb
inc
xor
xor
mov
ljmp
test
or
les
shll
lea
push
into
shll
stos
enter
shrb
in
adc
test
or
sub
cwtl
or
push
lahf
ljmp
sbb
push
xlat
lcall
roll
jmp
mov
cmp
shll
aam
xor
in
xchg
sub
cltd
xor
es
fdivrl
leave
subl
stos
jb
inc
sub
sub
inc
adc
ret
inc
xchg
test
sbb
push
add
inc
icebp
sub
sbb
dec
adc
out
sbb
popf
and
pop
les
pop
into
add
cmova
sets
or
adc
add
adc
cld
xchg
icebp
push
rolb
fsts
push
xor
or
sub
xor
das
xchg
imul
rorl
ljmp
mov
push
mov
mov
cmp
jge
and
pushf
gs
and
fwait
sub
call
add
pop
stc
repnz
push
push
popa
cmpsl
jo
push
push
push
pop
mov
orl
pop
mov
lret
test
inc
pusha
add
dec
xchg
push
inc
idivb
dec
adc
sbb
mov
nop
jne
in
lret
jp
dec
xchg
fwait
repz
add
cmp
add
ss
inc
popa
inc
mov
inc
jae
andb
inc
call
push
or
andl
cltd
pushf
je
jge
fisubrl
mov
int
fucomi
aaa
add
inc
cmpsb
movsb
adc
insb
nop
add
sub
or
pop
pop
mov
lret
jmp
mov
push
adc
sahf
xchg
fs
outsl
lret
add
repz
into
mov
add
sbb
enter
mov
mov
pusha
sbb
jae
ljmp
xchg
fsts
jmp
sub
and
test
scas
cld
into
mov
sbb
out
loopne
pop
mov
jo
jo
adc
jmp
add
jo
aaa
mov
imul
mov
rclb
sbb
mov
lret
loope
call
xor
setns
xor
xor
fs
hlt
pop
cltd
jo
sbb
push
xor
mov
sbb
jmp
pop
cmp
mov
xor
push
pop
scas
add
xor
jb
cmp
mov
shl
in
ror
test
pop
or
mov
rcrb
xor
and
push
imul
outsl
inc
test
push
xchg
lret
aam
aam
xchg
lcall
sbbb
cmp
in
ror
subb
cmp
shll
imul
aaa
push
inc
cmpsb
fnstcw
xorb
xacquire
sbbb
mov
sbb
or
jno
mov
jp
rcrb
adc
add
jo
call
mov
xor
fisttps
gs
inc
loopne
xchg
mov
orb
xchg
movb
stos
and
lds
int
movsb
lcall
in
repnz
adc
or
xchg
pop
push
mov
sub
mov
mov
adc
lahf
fwait
rcll
add
jae
test
inc
mov
fsubrs
cltd
xchg
ljmp
sbb
adc
test
mov
ret
popa
in
pusha
sub
into
rorb
xchg
mov
push
xchg
mov
pop
xor
xorb
lret
loopne
sbb
repnz
jle
mov
xchg
dec
mov
pusha
enter
fcmovu
push
or
aaa
add
in
adc
xchg
cmpsl
inc
and
pop
cltd
mov
pushf
pop
int3
mov
loopne
sbb
jno
cmp
and
dec
or
sbb
stos
inc
cwtl
sbb
mov
adc
popa
ret
in
andl
pop
xchg
adcl
pop
popa
or
push
dec
sub
cmp
xor
xchg
pop
pop
scas
and
adc
jecxz
rolb
push
mov
add
loop
xchg
lea
xor
add
orb
addl
loopne
lds
in
pushw
pushf
pop
xchg
in
and
ss
test
cwtl
sub
xor
pop
mov
xchg
subl
in
pushf
test
cmp
xor
sub
xor
push
orl
mov
sub
outsl
test
pop
test
jle
and
mov
rcr
data16
xchg
in
xchg
in
cmp
inc
rcrb
push
inc
imul
into
jo
adc
ja
or
lcall
push
push
call
and
ljmp
jge
pop
jae
cs
mov
ds
pop
fs
test
adc
pop
or
or
rolb
push
and
sbb
push
sarl
cs
fildll
cmc
mov
shlb
test
subb
push
icebp
inc
into
in
adc
mov
sub
insl
fistps
gs
add
cmp
pop
mov
cmpb
into
stos
xchg
loopne
shr
jge
scas
ret
or
xorb
dec
loopne
movsl
pop
cmpsl
add
loop
adc
jmp
adc
sti
cs
dec
mov
xor
pusha
jo
flds
cmpsb
xchg
fisubl
fldenv
cmp
add
and
inc
outsb
sub
jp
sub
sbb
es
push
and
out
xchg
mov
jge
inc
mov
adc
add
in
mov
enter
add
xchg
mov
inc
loopne
hlt
push
dec
add
cmp
es
int
add
push
add
dec
lret
out
cld
sahf
and
aad
sbb
test
mov
jb
nopl
inc
mov
xor
int
sbb
es
mov
cmp
push
lea
mov
xor
je
loopne
loopne
jmp
stos
cmp
push
lea
scas
aam
cld
xor
out
xchg
adc
ret
lahf
in
cmpsb
or
cmp
clc
pop
ljmp
lods
lret
adc
jge
dec
hlt
sbb
aam
mov
out
movsl
enter
mov
push
adc
add
add
loopne
sub
shrb
jl
fs
push
test
icebp
sub
pop
adc
lcall
incb
jnp
add
dec
push
sbb
add
dec
push
add
mov
ljmp
xor
or
push
add
js
mov
dec
cmp
in
jl
push
cs
mov
sub
xlat
test
jb
rclb
add
rclb
scas
xor
cmp
lea
adc
xor
int
sub
fldcw
xor
stc
sub
add
sub
fcomps
loope
call
add
int3
fs
add
inc
lea
push
ret
pop
cmp
gs
gs
inc
xor
mov
mov
mov
push
popa
push
adc
sbb
fldl
mov
pop
in
sbb
fs
sub
push
mov
gs
push
insl
mov
adc
add
movlps
inc
fcmovnb
loopne
xor
test
xchg
sub
xor
dec
es
sub
inc
lea
and
sbb
inc
pop
jae
hlt
cmp
cwtl
cmp
mov
in
add
pop
test
hlt
sbb
enter
in
fucom
jb
shrl
jecxz
call
jmp
dec
cltd
xor
test
cmpsl
cmc
pop
test
lcall
push
mov
dec
loope
add
cmp
jae
cmp
leave
cmp
mov
in
inc
xchg
lds
cmp
sahf
daa
add
xchg
loop
jle
inc
sub
adc
xchg
push
mov
lcall
pop
adc
or
adc
mov
es
and
shll
ret
xor
int
push
push
push
movsb
xor
data16
gs
hlt
dec
das
jns
dec
xchg
jae
jle
clc
ljmp
or
subb
iret
cmp
mov
and
jecxz
xor
ljmp
inc
lret
pop
movsl
jp
fsubp
pusha
sub
inc
mov
ror
fcoml
mov
cli
xchg
or
xor
mov
scas
inc
fildl
push
aas
adc
pop
mov
push
mov
bound
enter
xorb
jbe
mov
mov
repnz
mov
leave
dec
pusha
mov
sbb
call
loop
es
adc
repnz
mov
mov
inc
pop
mov
insl
mov
in
xchg
xchg
xchg
int
or
test
pop
xor
add
adc
inc
mov
jl
sbb
dec
push
jbe
mov
pop
test
cmpsb
rcrb
insb
es
lea
iret
push
mov
cmp
add
xor
adc
rcl
insb
xchg
aad
pop
dec
jae
enter
ljmp
jbe
inc
subb
je
or
jno
and
or
jo
shlb
lcall
leave
sbb
push
fucom
lea
sbb
scas
adc
lcall
cwtl
pusha
and
loope
push
xchg
push
iret
push
lcall
ljmp
cltd
and
or
jmp
rorb
out
jle
mov
xchg
sarl
jo
pop
test
sbb
hlt
mov
cmp
cmpsb
add
add
cmpb
and
cmp
sub
jo
pop
into
inc
rcll
sahf
mov
push
xlat
leave
addr16
push
inc
data16
lods
sti
fidivrs
push
add
test
push
mov
or
gs
sbb
hlt
push
adc
inc
aam
push
fdiv
pop
xchg
xor
enter
addb
adc
pusha
in
push
mov
xor
loope
hlt
test
negb
ljmp
mov
stos
adc
das
in
mov
cs
add
movb
ret
call
sbb
dec
test
adc
lcall
mov
int
subb
sbb
push
jp
inc
mov
cmc
enter
sbb
adc
mov
mov
insl
addb
outsl
and
jae
test
cmpsl
mov
xor
cltd
dec
xor
add
mov
fs
pusha
or
out
cwtl
push
jbe
ret
xor
addr16
xor
nop
ret
push
dec
insb
adc
in
xchg
jne
mov
sbb
and
mov
lret
xchg
stos
fmulp
and
push
into
inc
out
popa
xchg
sbb
cmp
ret
or
fdivrl
pop
cmpsb
add
js
xchg
and
mov
and
sbb
pushl
push
and
and
cmpsb
dec
lea
in
pop
inc
es
mov
cmp
dec
adc
je
fdivrs
xor
popa
mov
mov
aam
roll
cmp
pop
orl
mov
cmpsb
enter
int
lods
cmp
scas
inc
pop
xchg
in
add
push
inc
inc
xchg
ljmp
aam
mov
out
lcall
lods
addl
loop
push
sbb
and
int
push
sub
inc
adc
mov
xor
aad
or
sbb
rclb
adc
fbld
scas
dec
mov
leave
gs
sub
xor
or
in
sbb
jb
sub
and
sbb
push
js
and
inc
or
jae
enter
inc
adc
xchg
mov
mov
push
mov
xchg
loopne
repnz
ljmp
push
mov
gs
mov
add
dec
das
out
notl
push
lea
jmp
fs
cmc
xchg
pop
inc
push
cli
mov
jp
outsl
or
enter
or
mov
xor
iret
add
out
fstl
in
add
mov
or
sub
sbb
roll
dec
inc
mov
add
arpl
pop
scas
call
push
mov
imul
xchg
call
push
sub
xchg
fs
mov
push
pop
push
cmpsl
jecxz
inc
loopne
push
add
sbb
rorl
and
inc
jnp
push
mov
push
pop
shr
cs
jb
data16
push
cmpsb
pop
imul
sub
pop
xchg
xor
cmpsl
pushf
mov
lcall
push
into
adc
loope
movsb
sbb
pop
ret
rorb
push
cld
or
mov
ljmp
or
ss
sub
into
enter
mov
cmp
push
push
test
adc
loop
xlat
nop
jp
dec
adc
pop
cmc
xchg
and
push
sbb
pop
or
ljmp
jb
or
xchg
mov
sub
adc
push
inc
mov
ds
inc
popa
test
add
jecxz
xchg
leave
jne
push
xchg
fisubrs
mov
mov
add
stos
push
outsb
aas
jge
or
lcall
cmp
gs
xchg
nop
rcll
jb
sub
rcl
loop
push
sbb
mov
pusha
loop
inc
pop
leave
push
sbb
pop
mov
and
pop
addl
fistpll
btsl
test
jmp
push
call
cmp
push
cmp
mov
jae
adc
cltd
or
jmp
add
push
lcall
jo
repnz
sub
xor
out
arpl
pop
add
push
push
sub
or
sbb
pop
or
mov
and
push
sub
or
pop
bound
mov
adc
xchg
mov
cld
ja
lret
lds
out
int
push
mov
add
fadds
dec
jns
xor
into
or
lcall
jle
jmp
into
lea
xor
lcall
push
popf
fistl
cs
push
pop
sbb
xorb
clc
push
ljmp
mov
loop
mov
inc
add
sbb
jo
xchg
fmuls
xor
mov
push
push
push
lods
adc
pop
notb
add
ljmp
xor
lcall
pushf
cmpsl
push
shl
loopne
push
jae
jnp
lcall
adc
xlat
pop
cmp
stos
pop
push
jmp
lcall
aam
lea
mov
fs
add
popa
xor
inc
cmp
cmp
roll
mov
push
cwtl
add
adc
es
push
pop
inc
lods
mov
mov
stos
sbb
push
ret
fimuls
sti
mov
jle
cli
cmpsb
add
dec
xchg
jae
dec
in
cli
xor
ret
jle
in
pop
xchg
ret
or
dec
dec
pop
cmp
je
inc
jae
xor
pop
xor
inc
shll
testb
das
pop
inc
or
mov
ss
adc
lcall
jb
test
jae
shr
loope
adc
push
and
cmp
push
in
xchg
out
ljmp
mov
in
and
mov
sub
add
imul
mov
add
cmpsb
out
pop
xor
pop
addb
in
push
inc
cmp
je
scas
add
jecxz
dec
xor
loopne
stos
mov
fwait
lea
xor
in
push
cld
sbb
cltd
xor
fs
cld
repz
into
inc
cmp
sbb
sub
enter
les
pop
push
jae
mov
outsl
xor
lods
cmp
shll
xorb
mov
inc
cli
lods
pop
rorl
clc
adc
add
inc
mov
sbb
sub
mov
adc
fsub
cmp
push
test
sbb
xchg
xor
test
aam
push
testl
mov
cmp
jmp
jl
mov
mov
mov
sarb
shlb
mov
jo
sbb
loop
leave
in
jae
ret
dec
in
xchg
adcb
leave
jmp
imul
mov
xchg
cmp
and
and
scas
mov
push
movsb
jbe
das
orb
adc
cmp
enter
cmp
adc
and
testb
dec
js
jae
in
inc
cmp
inc
int
push
xor
or
pop
fsubrl
sbb
adc
mov
or
or
sbb
std
push
cmp
or
cld
mov
stos
cmp
xchg
jae
lret
push
lock
data16
rcll
es
xor
ljmp
adc
cmpsl
hlt
movsl
ja
xchg
and
jle
cmp
xor
inc
jae
call
loop
jp
je
jae
mov
icebp
jbe
lret
push
scas
stos
dec
cmp
adc
rcl
and
mov
mov
dec
xor
jnp
mov
fdiv
mov
mov
pusha
mov
outsl
addl
lret
or
dec
add
mov
out
xchg
push
lea
or
sti
mov
lea
sub
push
or
push
sub
loop
and
cmp
mov
sbb
sub
sub
aad
repz
pop
cmp
or
mov
xchg
clc
ret
sarb
jno
add
cmp
lea
adc
xchg
fwait
and
xchg
jns
int
das
lcall
cs
pop
mov
aam
jae
sbb
inc
pop
out
fisubl
outsb
adc
inc
mov
movsl
lret
mov
ret
scas
inc
inc
sub
dec
jle
outsb
movsl
or
inc
fistps
gs
test
jbe
push
movsl
xor
xchg
push
mov
hlt
push
repz
fldenv
int
rolb
dec
cmp
and
adc
adc
inc
sbb
int
push
add
add
adc
mov
inc
push
jp
pop
fsts
sbb
jbe
pop
mov
subb
nop
nop
adc
add
sub
xchg
push
mov
sub
mov
jbe
dec
push
je
loop
and
xor
repz
add
push
ret
aam
xchg
mov
dec
cmp
cld
inc
lea
dec
bound
cmpsb
out
xlat
adc
aam
add
xor
fs
jg
cmp
inc
in
push
shlb
cs
adc
shrl
push
jmp
mov
cmp
xchg
enter
pop
and
shrb
jo
mov
add
inc
clc
jle
mov
jo
aam
mov
sub
idivl
lcall
sbb
add
fsubl
dec
cwtl
sbb
movsb
adc
mov
scas
mov
in
inc
pushf
mov
adc
jl
mov
pushf
adc
fs
mov
xor
mov
jns
imul
lods
inc
das
pop
pop
test
test
mov
fs
sbb
mov
xor
xchg
lahf
cmp
jl
hlt
push
fsubrl
push
aaa
testl
imul
testl
lcall
xorl
data16
in
daa
pop
xor
aas
or
xor
jecxz
pushf
add
mov
jb
out
sbb
test
addl
push
xor
lods
or
int
mov
jle
in
push
int
push
push
pop
mov
stos
mov
add
inc
xor
ja
push
test
jle
push
popf
les
lret
jbe
push
mov
enter
pop
cmp
out
insb
inc
push
or
call
ret
add
nop
lcall
push
xor
xadd
and
cmp
cli
push
add
adc
lahf
xor
jns
or
std
pop
int
clc
mov
and
jmp
jmp
push
fmuls
in
mov
sub
or
shll
push
out
aas
push
rorl
add
pop
sbbb
testb
push
loopne
movsl
sub
push
shlb
aam
cmc
sbbl
imul
or
es
sub
mov
ja
xor
sbb
xlat
or
jo
or
push
sbb
or
and
pop
jne
sub
sub
data16
dec
add
dec
popa
push
pop
inc
xor
sub
xor
add
mov
pop
cmp
addr16
add
fs
ljmp
push
adcb
shlb
ljmp
mov
loopne
add
sar
sbb
mov
nop
sbb
stos
leave
xchg
jecxz
inc
in
push
cmpsl
push
inc
pop
std
cmp
mov
add
adc
stos
mov
sbb
lret
jno
push
pop
push
shl
dec
es
loope
cmp
xor
mov
cmp
add
aam
jae
or
adc
xchg
imul
xor
hlt
lcall
mov
popa
cltd
test
stos
push
sbb
adc
jns
inc
das
mov
push
or
pushf
icebp
std
pusha
push
mov
repnz
imul
dec
adc
imul
dec
mov
lcall
xchg
popf
call
imulb
add
push
dec
xchg
test
mov
xchg
loopne
pop
cmp
mov
loop
inc
dec
cmpsb
into
xchg
push
ljmp
jbe
pop
push
loop
jge
test
sub
test
jg
xlat
push
xor
sbb
dec
xchg
or
inc
lods
mov
out
lcall
mov
xchg
and
ret
ljmp
fcoml
push
jmp
and
gs
sbb
je
iret
push
enter
dec
pushf
orb
pop
scas
jg
icebp
add
ret
inc
dec
jns
dec
pop
addr16
pop
cmp
pop
cmp
aad
jno
or
adc
xor
xchg
and
ret
mov
loopne
loopne
push
jae
sub
or
inc
cmpsb
jb
add
mov
or
lock
push
arpl
call
cmp
adc
add
ret
lods
mov
or
or
orb
add
dec
push
ret
inc
mov
pop
dec
sbb
adc
popa
ret
sahf
out
add
and
cwtl
lret
loop
cli
fiaddl
lret
das
out
dec
test
sbb
sbb
cmc
xor
inc
fwait
loopne
jecxz
mov
and
sbb
int
push
jno
into
inc
cmpsl
xchg
or
mov
jo
bnd
ret
dec
add
xchg
stos
xchg
sbb
and
pop
mov
adc
jae
xor
mov
mov
loop
mov
hlt
jle
stos
xchg
xorb
sbb
test
sub
push
cmp
xchg
popf
mov
test
enter
mov
lock
js
lea
testl
lods
xchg
pop
mov
cltd
xchg
adc
mov
jge
les
shl
dec
mov
lcall
aad
inc
hlt
pop
push
sbb
iret
xor
mov
mov
cmp
inc
or
dec
test
test
js
sub
xchg
fdivl
adc
or
cmpsb
push
mov
inc
jbe
pop
inc
orl
aam
icebp
mov
xor
add
add
in
cwtl
out
add
loope
sbb
mov
sbb
loope
scas
mov
into
hlt
inc
lahf
mov
sub
mov
push
sub
fsub
outsb
mov
test
sbb
bound
lret
xor
jo
mov
mov
inc
mov
in
jp
cmp
pop
cmp
xor
jo
pop
mov
jmp
out
and
inc
mov
rolb
enter
jmp
cs
mov
cmp
mov
movsb
adc
dec
pop
mov
xchg
and
jae
adc
xchg
sahf
aam
int
jae
xchg
xchg
and
fldt
inc
sbb
jns
mov
bnd
inc
mov
fwait
push
or
lods
push
stos
mov
jp
push
mov
push
and
inc
aaa
mov
push
loop
pop
cmpl
or
lret
push
cltd
cmpb
xchg
ficoml
or
adc
and
dec
push
out
xchg
fdivr
mov
and
sbb
adc
mov
jge
push
in
test
imul
rol
mov
rclb
jge
xor
jge
movsl
pop
mov
inc
adcl
xlat
pop
test
add
cmp
lahf
jle
negb
test
ja
xchg
movsl
add
jle
push
mov
test
cmp
cmp
xchg
loope
adc
xchg
mov
inc
add
cwtl
jb
cltd
or
add
push
xchg
adcl
lcall
cmpsl
leave
into
rorl
or
imul
sub
insb
add
stos
inc
mov
push
pop
and
cmpsb
xor
popf
inc
sbb
mov
add
xchg
stos
jo
and
outsb
mov
test
orl
push
outsl
and
pop
into
jae
pop
push
sub
jne
push
daa
rolb
cld
mov
pop
mov
scas
or
cmpsb
loop
add
aaa
jae
jo
add
inc
and
ret
dec
incl
xchg
iret
sbb
pushf
pop
mov
mov
or
mov
loopne
sbb
xlat
imul
and
adc
call
dec
xchg
aas
xchg
lea
push
cmp
lcall
xor
or
faddl
sbb
mov
add
jae
ret
or
dec
cmp
push
fs
test
mov
or
pusha
test
icebp
enter
aam
xlat
cs
sbb
cltd
mov
dec
xor
mov
jb
push
or
jp
xor
pop
xor
lret
add
test
mov
scas
or
sub
lock
lret
les
jo
xchg
subb
popa
repz
test
lret
dec
sbb
int
and
push
xor
cltd
loopne
xchg
sbb
cmp
lcall
mov
ss
push
push
jae
mov
or
mov
pop
pop
xor
fsubl
test
enter
popf
cmp
inc
mov
cmp
shlb
data16
inc
push
cmp
push
pop
das
inc
adc
jl
mov
and
xor
jbe
out
mov
xor
adc
cli
mov
push
and
push
mov
inc
ja
fwait
sti
rcll
xor
mov
rcl
inc
push
or
and
xor
add
mov
inc
out
roll
int3
ror
pop
push
pop
cs
mov
or
mov
repz
xor
ja
sub
rolb
cmp
xor
pusha
out
and
fdivl
add
and
test
xor
stos
sbb
fcmovb
add
or
add
fistps
lcall
mov
or
xchg
neg
or
sbb
ret
pop
ficomps
push
adc
pop
add
lcall
and
das
jne
sbb
mov
or
xor
jo
add
in
add
mov
repnz
pop
rcl
cld
dec
sub
xchg
leave
aam
negl
and
sub
mov
mov
cmpsb
push
xchg
fabs
add
dec
inc
in
enter
cmp
shrl
sbb
adc
mov
fbstp
das
pop
jae
in
mov
sub
aas
aam
push
xchg
out
outsl
push
es
shlb
insb
stos
inc
into
mov
leave
adc
hlt
and
shll
add
fstpt
dec
lret
push
push
nop
xor
outsl
addr16
jb
sbb
xlat
mov
test
icebp
push
cmpl
mov
sub
inc
subb
xor
and
mov
movsl
cs
ret
out
jb
cmpb
adc
mov
sbb
xchg
mov
lds
rcl
add
out
and
sub
icebp
in
or
mov
popa
mov
mov
cmpsl
or
and
jl
sbb
mov
sti
out
pop
pusha
mov
insl
mov
add
mov
or
push
push
sub
lcall
mov
sub
adc
push
lods
xor
scas
lret
sub
and
sub
in
dec
iret
add
xchg
sbb
pusha
xor
push
out
inc
or
add
andb
dec
mov
pop
inc
ja
inc
lods
mov
or
or
stc
mov
cli
pop
sti
mov
andb
lret
jge
or
fisttpll
lds
testl
ljmp
push
mov
push
add
add
mov
push
push
pop
lcall
stos
call
add
sub
sub
sbb
mov
mov
sbb
loop
enter
or
mov
lods
push
lock
mov
dec
addl
iret
xor
lea
push
sahf
incl
lods
ljmp
aas
sub
ret
sub
int
or
out
loope
shlb
xor
cmp
cmp
nop
stos
scas
mov
and
gs
pop
cmpsl
or
jb
imul
jb
sub
outsl
mov
pushf
in
and
jo
jecxz
insl
mov
push
nopl
push
sbb
mov
push
int
lcall
je
sub
adc
out
stos
mov
cltd
sub
jl
dec
xchg
test
int3
or
rorl
xor
mov
cmp
cmp
dec
cmp
subl
push
iret
xchg
js
loopne
lock
xorl
and
pop
push
mov
sub
push
adc
data16
adc
lods
adc
mov
push
mov
adc
imul
scas
and
jo
subl
in
stos
mov
and
test
pop
cltd
sub
sub
dec
add
sbb
ja
push
scas
push
xchg
xchg
ss
mov
inc
test
add
repnz
inc
lds
mov
jecxz
xor
xorl
cltd
or
dec
dec
jo
adc
sub
lret
cmp
sbb
shlb
ret
or
loopne
je
mulb
jbe
paddusb
push
xchg
lock
lcall
xor
in
cmc
dec
int
in
outsb
iret
cli
call
cmpsl
pop
jl
ret
inc
mov
out
cs
push
lock
in
or
orl
mov
in
push
pop
inc
pushw
mov
lretw
inc
scas
mov
add
add
and
dec
jne
jb
xchg
adc
inc
mov
add
xor
push
into
cmp
cwtl
pushl
lock
scas
loop
es
in
mov
mov
add
pop
out
aam
mov
xor
mov
addb
and
pop
imul
sbb
adc
test
inc
pop
stos
jle
loopne
pop
andl
cmp
dec
adc
subl
and
jb
idivb
test
jge
mov
loop
mov
iret
inc
mov
xlat
pop
sbb
rclw
iret
lds
add
dec
fadds
outsb
outsb
sbb
lcall
mov
lock
out
lcall
mov
scas
sub
add
ds
adc
enter
or
cmp
enter
imul
sub
aad
pop
inc
fld
add
ret
cmc
xor
movsl
mov
cmp
push
loope
lods
xor
in
leave
call
adc
call
or
and
adc
or
push
add
jo
adc
hlt
mov
lret
dec
fwait
sbb
mov
add
mov
add
adc
cmp
xchg
cli
loope
jno
and
pop
out
xor
lret
pusha
and
inc
xchg
test
jo
inc
lea
aam
sbb
cmp
lahf
and
gs
add
lea
xor
mov
xchg
push
inc
icebp
mov
jmp
sbb
sbbl
jmp
pusha
hlt
xor
sbb
test
pop
mov
push
test
cmpsl
mov
test
mov
fnstsw
dec
cmpsl
sbb
dec
scas
and
inc
sub
test
cmp
stos
mov
jo
mov
or
sahf
inc
fiaddl
sbb
pushf
leave
mov
inc
nopl
inc
add
sbb
insb
sahf
cmp
shl
iret
sbbl
pop
dec
inc
mov
add
call
fwait
in
mov
add
or
inc
fs
sbb
pushf
shll
and
and
in
mov
or
push
shrl
jne
mov
push
sbb
icebp
push
xor
jmp
shll
add
ljmp
jb,pt
mov
mov
adc
sbb
inc
test
push
pusha
dec
int
xor
ret
lea
mov
fwait
xchg
or
leave
int3
add
xor
cmc
lret
sbb
xchg
adc
jne
orl
xor
mov
mov
mov
dec
loope
aad
mov
das
inc
rcrl
jmp
mov
popa
leave
cmp
call
int
lcall
add
nop
add
and
add
stc
xor
fs
mov
or
daa
iret
sub
and
test
jmp
nop
leave
gs
in
or
and
jb
inc
cmp
push
cmp
into
sub
mov
stos
jns
fsubl
jle
and
enter
jg
imul
mov
sbbb
xchg
mov
roll
in
sub
xor
inc
jmp
mov
rcr
gs
dec
cmpsb
sub
xor
addr16
sub
mov
add
add
es
or
out
xchg
adcl
or
or
cwtl
sarb
sbb
xor
outsb
iret
push
cmp
dec
pusha
jne
pushf
or
fcmovnbe
sub
lock
mov
cmp
adc
test
sub
or
xchg
into
sub
mov
loope
dec
insb
adc
add
xchg
orl
lret
jl
ljmp
lret
mov
test
cmc
fsts
fsts
xchg
dec
pop
inc
popf
push
xchg
ss
inc
dec
mov
inc
pop
mov
sbb
push
jo
lret
cmpsl
add
insl
cs
sbb
aas
push
sub
xchg
mov
inc
mov
xchg
lret
push
add
shll
mov
scas
or
sbb
stos
adc
sbb
push
pop
cmp
mov
dec
cwtl
dec
sahf
jns
or
repnz
xor
lret
sbb
sbb
test
sbb
xor
inc
pusha
push
or
inc
mov
mov
cwtl
push
es
pushf
jo
fwait
mov
mov
jno
cmp
rcrl
sbb
fiaddl
js
inc
sbb
push
adc
loop
rcrl
int
shlb
add
fisttpll
add
rcll
sbb
loopne
cmpsb
mov
adc
orb
xchg
clc
mov
shll
jo
add
sub
or
xorl
mov
mulb
pop
mov
sbb
xchg
sub
jg
jo
sub
mov
test
int
and
push
outsb
test
jb
xor
xor
pop
and
pop
dec
mov
sub
dec
sbb
ret
in
add
and
lret
xchg
push
ret
pop
jge
xchg
ljmp
sub
leave
test
xchg
stos
loop
les
ljmp
jb
inc
xor
adc
pop
and
loope
cltd
jb
imul
xor
jno
jle
das
rcrb
addl
in
cmc
adc
push
jo
jbe
cmp
loope
xchg
imul
dec
nop
mov
fimull
jns
shrb
insl
sbb
pop
sbb
cmp
inc
ret
sub
push
pusha
ja
and
aam
push
add
sub
gs
in
ljmp
sub
mov
inc
fdivrl
xlat
das
popa
ljmp
lock
lcall
push
inc
pop
dec
outsb
int
inc
shlb
and
add
and
add
or
push
mov
test
add
fidivs
bswap
add
sub
mov
loope
xor
xor
fcoml
add
push
sub
adc
adc
inc
add
push
add
xchg
lock
insb
add
dec
push
enter
pop
inc
xchg
mov
mov
jb
dec
mov
sub
or
outsl
or
adc
or
in
sub
mov
loopne
and
gs
pushf
push
xchg
rcrl
xor
xchg
add
mov
push
sub
or
inc
sbb
mov
jae
inc
subl
adc
lods
push
fisubrs
add
pop
pop
xchg
mov
sbb
xor
inc
add
adcl
sub
or
ss
mov
add
enter
adc
in
push
ficompl
add
int3
loope
push
or
sbb
dec
xchg
push
mov
scas
cmp
pop
push
inc
xor
in
push
in
xor
adc
xor
ret
lret
fsubrp
sub
jno
add
or
enter
add
cmc
adc
xchg
xor
sbb
inc
mov
or
dec
jbe
pop
xor
mov
xor
inc
outsb
jae
xchg
push
rclb
xor
mov
jne
add
or
cmc
dec
add
add
or
stos
mov
inc
mov
in
sub
or
mov
pop
fisubrl
dec
mov
cltd
inc
xor
jbe
loopne
or
loop
enter
push
sbb
jo
adc
dec
in
ret
lea
cmp
mov
dec
adc
lcall
pop
add
in
scas
sub
inc
lods
shlb
leave
aam
add
pop
mov
loop
movsb
flds
movsl
xor
out
mov
outsl
cmp
xor
dec
adc
push
inc
stos
dec
cmpsb
aas
loope
add
push
xor
out
leave
pop
test
scas
inc
cmp
ja
clc
mov
add
or
jnp
enter
test
adc
fdivr
jmp
or
pop
cmp
cmp
adc
out
sub
mov
repnz
xor
call
stos
add
xchg
push
sub
test
and
mov
push
dec
cs
leave
inc
ss
inc
push
jno
inc
loopne
int
add
mov
inc
xor
cmp
scas
lret
push
sbb
xchg
test
rclb
scas
lahf
sbb
cli
push
adcw
enter
dec
inc
scas
inc
subl
and
cmp
inc
loopne
mov
ret
in
arpl
es
xlat
cmp
fldl
out
xor
add
xor
test
ljmp
mov
xchg
out
add
pop
jne
out
enter
inc
int
cmp
movsb
cltd
jb
dec
div
jl
and
push
scas
xchg
mov
cmp
and
jb
cmp
gs
push
in
nop
jmp
mov
dec
pop
gs
xchg
and
aaa
pushf
dec
inc
movsl
test
adc
stc
rcl
add
sub
sbb
adc
or
arpl
adc
add
jnp
jae
push
inc
xor
sub
movsl
mov
test
jb
sbbb
ret
test
call
cmpsb
mov
lods
add
lcall
out
or
mov
jp
gs
add
add
cmp
ret
xlat
scas
mov
insl
and
xor
mov
cltd
lret
sbb
mov
jmp
dec
lock
dec
jmp
or
sub
add
push
cmpl
mov
sbb
inc
fs
add
and
sbb
cmc
insb
aam
push
push
cmpsl
lock
les
cli
aaa
lcall
jmp
ds
aas
push
dec
inc
sub
adc
inc
sbb
out
sub
push
inc
ljmp
dec
gs
xchg
jmp
gs
jae
mov
into
inc
sbb
lahf
cmp
or
imul
pop
jae
pop
sbb
adc
adc
lcall
add
and
int
or
inc
cltd
mov
je
dec
popa
ljmp
ret
rolb
push
cmp
xchg
and
or
daa
mov
mov
or
cs
and
mov
xchg
mov
mov
push
mov
cmpsb
xchg
mov
fadds
sub
cwtl
test
inc
cs
stos
cmp
test
add
sbb
rolb
sbb
enter
lahf
pop
inc
dec
mov
pop
adc
add
push
xlat
mov
xchg
add
xchg
scas
sub
xor
sbb
mov
and
pop
mov
xor
popa
nop
ret
mov
jne
mov
mov
add
fwait
sub
add
or
dec
pop
push
xor
leave
adc
jo
push
pop
ds
cmpsl
dec
cmpsl
or
addl
aaa
mov
loopne
xchg
aas
xorb
add
adc
adc
pop
loopne
inc
inc
sahf
lret
jo
xor
js
and
cltd
fdivr
sahf
adc
enter
lret
lcall
pusha
das
jb
lock
scas
popa
icebp
jae
nop
and
inc
popa
or
imul
cmp
add
subb
test
xor
fildll
mov
subl
dec
fcoml
inc
mov
xchg
in
ret
test
lret
lcall
negb
enter
lret
je
ljmp
daa
lcall
loopne
inc
sarb
test
dec
fwait
pop
mov
nop
mov
lcall
mov
xor
mov
jb
jb
pop
sub
dec
loopne
pop
imul
push
push
mov
sbb
mov
sahf
nop
loop
inc
push
sbb
aas
xor
fimuls
add
and
outsl
xchg
ljmp
and
pminsw
dec
push
or
adc
xchg
xchg
mov
or
or
fcmove
push
pop
sarb
lds
out
add
cli
jecxz
xor
inc
add
adc
add
lods
jb
xor
inc
es
mov
add
sbb
cmp
or
mov
pusha
pushf
std
pop
test
mov
mov
mov
or
adcl
jbe
xchg
popa
pop
scas
xchg
lcall
sbb
jo
rcll
push
and
or
and
out
push
xlat
or
fs
mov
inc
int
fiaddl
rolb
pushf
sub
sarl
cltd
movsl
cmp
mov
add
shrl
xchg
popa
test
pop
and
out
sbb
pop
sub
mov
mov
push
pop
jle
popa
stos
out
out
adc
orl
pop
loope
daa
push
pop
ds
dec
mov
ret
adc
sub
or
adc
push
add
fisttpll
mov
lcall
leave
push
cmp
lock
cmp
rorb
test
mov
aad
lods
mov
push
inc
jmp
push
push
push
out
shrl
shrl
popa
out
not
mov
lcall
sbb
jb
jl
cmp
out
inc
cld
mov
repnz
mov
mov
or
rolb
out
les
jb
cs
jmp
gs
loopne
add
enter
popa
enterw
jecxz
mov
dec
lea
cmp
int3
sub
push
cmc
sbb
mov
fs
mov
cli
inc
shlb
js
lret
in
roll
add
and
sbb
shl
nop
pop
add
test
aad
pop
lds
inc
push
adcb
dec
or
dec
adc
adc
jnp
inc
xor
pushf
ret
enter
adc
sbb
gs
jecxz
cmp
pop
jno,pn
push
push
jp
xor
dec
insb
sub
push
sub
fdiv
push
pop
orb
inc
cmpsb
push
aaa
jno
inc
cmpsb
sbb
sub
out
add
inc
push
sbb
mov
outsl
inc
popf
enter
sysexit
mov
inc
roll
xchg
enter
dec
add
push
jae
iret
subb
pushf
ds
js
push
sbb
and
adc
or
cmpsb
test
lds
inc
cmp
inc
xchg
lret
xor
mov
or
sarl
inc
test
mov
pop
xor
cmp
das
dec
orl
jecxz
into
test
pop
ret
rorb
or
sub
or
sahf
and
subb
push
push
sti
enter
sbb
or
jo
inc
and
or
pop
adc
mov
gs
inc
addb
adc
popa
sub
mov
jo
cmpsb
push
arpl
aam
into
adc
mov
xor
cmp
aam
popf
or
sti
lret
pop
or
scas
or
mov
push
testl
test
adc
jbe
std
mov
pop
decl
cwtl
out
pusha
cmpsb
pop
push
out
mov
jbe
lds
jl
mov
js
lods
js
sub
les
adc
mov
ja
jl
inc
and
addr16
xor
clc
pop
js
out
xchg
dec
cmp
movsl
sti
jo
pop
inc
jnp
js
jae
xchg
add
jae
ret
xor
out
lea
push
out
push
in
xor
ret
icebp
mov
xor
pop
sub
lock
mov
cmpb
out
stos
mov
xchg
add
xchg
and
pusha
sub
lcall
adc
jl
xor
scas
push
je
ljmp
aas
test
and
xchg
dec
addr16
and
push
push
addr16
shl
loopne
cwtl
or
xor
cmc
nop
test
adc
push
xor
mov
xor
inc
pop
adc
iret
and
add
mov
xor
or
in
sub
jbe
dec
xor
or
ret
inc
popf
loope
mov
add
call
xchg
sbb
test
addb
push
lcall
pusha
int
pop
mov
or
sub
rclb
cmp
xchg
scas
adc
movb
jb
mov
push
xchg
test
test
xor
cmp
jno
rorb
jb
sbb
mov
jecxz
cmpsb
shl
mov
data16
xchg
fsubp
add
push
lea
sub
bound
adc
push
in
jne
rcrb
rcll
js
push
pop
adc
subl
lret
mov
ret
scas
xor
xchg
add
or
test
movsl
lods
inc
adc
or
ljmp
mov
mov
fimuls
mov
inc
popa
ret
nop
sub
mov
stos
sub
sub
imul
mov
aaa
or
bound
lock
adc
adc
inc
mov
aaa
outsl
xchg
add
leave
adc
push
gs
push
enter
sub
add
imul
mov
je
add
sbb
out
fdivl
and
pop
mov
sub
add
cmp
sub
sbb
bound
lret
add
mov
push
mov
mov
clc
push
dec
push
sbb
inc
add
sbb
add
jle
xchg
xor
mov
xchg
sbb
scas
add
add
fsubr
outsl
sbb
push
data16
dec
mov
and
dec
ljmp
outsb
ret
push
dec
add
or
inc
stos
dec
add
adc
add
sub
dec
aam
cmp
jg
lcall
xor
sbb
and
mov
pop
push
add
ja
push
mov
xchg
mov
es
add
sub
outsl
in
pop
sub
mov
dec
scas
call
xchg
add
insl
add
fnstsw
arpl
cltd
mov
mov
ret
lea
xor
pushf
and
stos
or
sub
xchg
push
lahf
lea
adc
call
cmpsb
and
popa
jo
sti
push
and
imulb
jmp
add
cwtl
lcall
mov
xchg
mov
pop
cmpsb
mov
push
insb
ja
or
jp
cmpl
xchg
or
subb
pushf
sub
inc
pusha
xchg
lea
test
cmpsb
push
sbb
insb
jle
ljmp
rcl
aam
xor
xchg
pop
adc
pop
inc
jns
adc
cmp
dec
rorl
push
push
mov
dec
mov
and
mov
and
cmp
pop
stc
cli
scas
ret
push
cmpb
lods
sbb
test
xchg
mov
cld
dec
jmp
jb
addr16
dec
mov
cmpl
lret
pop
mov
test
sbb
cmpl
adcb
cmp
mov
push
mov
push
cmpsb
aas
fdivs
adc
dec
cmp
ret
nop
imul
xor
cmpsb
rolb
add
jmp
lret
push
pop
roll
sub
add
push
cli
out
mov
icebp
mov
lock
mov
in
sub
cltd
cmp
xor
mov
inc
mov
jo
xchg
sbb
dec
jb
out
in
xchg
stos
push
mov
cmp
cmc
lahf
cmp
mov
or
sbb
enter
or
outsl
dec
testl
lea
sub
lahf
sbb
cs
xor
jne
pop
sbb
movsb
test
push
imul
hlt
fmulp
ret
xlat
das
ss
or
xchg
jl
push
pop
in
pop
sub
xchg
sub
inc
stos
inc
pop
or
mov
add
or
pop
int
jne
dec
popa
test
pop
lcall
inc
adc
roll
dec
cmp
dec
out
les
push
cmp
xor
loope
mov
dec
xchg
push
jge
cmp
inc
es
in
xor
cmp
cli
mov
dec
hlt
fcmovu
and
test
ljmp
addr16
xor
mov
push
pop
sbb
dec
les
xchg
leave
adc
in
push
sbb
jb
test
sarl
es
and
mov
cltd
push
xchg
ret
in
fsubrs
push
push
jb
mov
push
push
push
out
jl
dec
inc
push
xchg
adc
xor
cltd
add
fs
pop
aam
sub
pop
adcb
movb
inc
cltd
test
cwtl
or
jae
aam
lret
xchg
ret
add
jne
cs
test
test
gs
or
dec
pop
test
insl
adc
xchg
jb
and
shlb
or
pop
cwtl
push
dec
dec
ss
cmp
jg
cmp
push
mov
and
aas
add
bound
pop
push
insb
jo
add
jbe
ja
pop
or
or
fmulp
and
fnstcw
fs
into
add
adcb
adc
cli
push
mov
adc
loope
andb
lcall
cmp
or
cld
flds
add
into
ret
adc
sbb
xchg
inc
aam
xorb
mov
push
sub
lcall
add
mov
loopne
daa
mov
pusha
adc
adc
mov
sbb
push
fildll
pop
jp
add
or
jne
dec
xchg
and
jnp
cmpsl
out
fs
lcall
xor
shrl
mov
jno
cld
imul
inc
adc
jnp
sub
mov
call
sbb
test
adc
sub
ljmp
ret
sbb
into
hlt
enter
cmp
and
shll
adc
lret
push
push
push
cmp
cmp
push
daa
dec
in
add
pop
mov
push
inc
and
adcl
sbb
cmp
in
gs
push
testb
stos
cmp
dec
mov
inc
jae
add
sub
cmpsb
pop
adc
lods
das
loopne,pn
subl
dec
cmpsb
lea
push
and
test
cmpb
cmc
test
cmp
dec
jmp
or
cmp
sbb
dec
rcrl
and
stos
add
sti
jae
mov
cmc
aam
and
pop
pusha
jb
lcall
cmp
mov
cmp
xor
inc
add
in
dec
mov
loopne
push
mov
data16
dec
or
scas
pop
push
int3
ljmp
mov
cmp
mov
rorl
add
loopne
lcall
rcrb
mov
xchg
push
pop
xchg
fildl
push
pop
pop
xor
popf
leave
push
sub
stos
jmp
daa
add
inc
ljmp
add
jg
sub
sub
pushl
sbb
add
add
mov
add
xor
add
incb
insb
aam
jmp
pop
adc
xor
sbb
xor
stos
jle
mov
in
or
pop
aam
push
rsm
loopne
push
iret
adc
stos
out
pop
sahf
pop
add
cmp
cltd
mov
cs
pop
xchg
xorl
ljmp
or
jle
lods
jbe
out
xor
pop
dec
cmp
xor
insl
js
addl
or
scas
dec
popa
mov
xchg
shll
rcrl
or
sub
notl
jge
enter
jp
push
int
pop
adc
sbb
out
mov
nop
mov
and
push
cmp
push
sub
inc
and
lcall
adc
ljmp
jmp
dec
pop
das
adc
sub
test
gs
cmp
cltd
xor
mov
test
sbb
loopw
pusha
push
adc
sahf
aas
add
int
and
das
jo
pushf
test
iret
addl
test
pop
notb
pushf
pop
shll
and
daa
stos
arpl
pop
and
loope
push
mov
cmc
orl
fisubrl
lcall
cltd
sub
jb
jae
push
int
hlt
push
or
shll
popf
sbb
xchg
sub
push
push
sub
push
mov
in
pop
test
lcall
push
popa
jp
or
push
test
es
mov
ret
dec
lock
mov
cmp
test
push
jo
lret
enter
ret
subl
test
jge
enter
adc
sbb
mov
ret
inc
push
into
aad
dec
adc
addr16
adc
std
pop
jo
fildll
jmp
mov
add
jg
icebp
ja
add
test
mov
or
xor
mov
add
stc
imul
jmp
scas
cmp
push
xor
cmpsb
lret
mov
in
sbb
insl
mov
js
das
icebp
push
jae
and
mov
mov
inc
xor
inc
jno
imul
sub
aam
aam
clc
sub
mov
push
sbb
push
push
and
jae
adc
dec
scas
mov
fmuls
aam
mov
sub
adc
scas
out
pop
cmp
enter
or
and
xchg
push
lcall
mov
xor
in
notl
push
pop
lods
fwait
in
int3
xchg
ljmp
sub
sub
icebp
divl
loopne
jae
xchg
push
cltd
push
mov
dec
fcoml
ret
or
dec
xchg
pushf
ja
mov
sti
int
inc
cmp
popf
dec
cmpsl
sbb
adc
sbb
inc
cmp
in
fs
mov
lret
jo
jnp
js
add
inc
es
mov
adc
adc
mov
push
add
fldenv
ret
pop
ret
subl
sub
out
sahf
lcall
inc
cwtl
xchg
sub
mov
adc
ja
pop
dec
xchg
sbb
push
std
stos
lret
or
pop
addb
add
icebp
stos
push
in
push
inc
loop
or
adc
xchg
clc
rclb
cmovl
nop
mov
scas
and
int
out
pusha
enter
pop
push
es
pusha
dec
bsf
adc
pop
pop
push
rcll
xchg
imul
mov
popf
stos
pop
shll
or
out
rclb
das
mov
jecxz
pusha
pop
sbb
inc
hlt
push
cmc
xchg
lods
sub
or
cmp
cltd
iret
or
xor
push
ds
xor
sar
mov
sub
push
mov
push
push
loopne
or
add
fisubl
lcall
push
cs
adc
aas
out
inc
pop
push
sub
repz
pop
mov
hlt
bound
push
adc
sbbb
mul
out
push
into
sub
nop
std
jae
cmpsl
or
mov
inc
or
lea
adc
dec
xchg
loope
pusha
xor
push
cltd
stos
push
push
call
stos
or
loope
adc
ret
add
loop,pt
push
mov
and
cmp
inc
sbb
mov
sarb
cmp
rol
push
cmpsl
pop
xor
cmp
cmp
or
push
outsl
aad
cmpsb
ret
xchg
imulb
data16
xor
jge
pop
mov
mulb
jl
loope
loope
shrl
cwtl
dec
jle
aad
lcall
cmpb
add
adc
mov
aaa
imul
lret
lods
cmp
xor
shrb
pushf
cmp
in
call
rcrb
pushf
jecxz
ror
xchg
xorl
pushf
jno
jne
movl
fs
xor
out
cltd
xor
jecxz
inc
cmpsb
and
test
subl
sbb
sub
add
aam
xchg
inc
and
fwait
dec
scas
inc
pop
mull
cmp
push
jmp
cltd
sbb
jmp
test
push
xchg
push
mov
mov
loopne
pop
mov
aaa
inc
push
scas
dec
adc
add
es
sub
clc
add
xchg
sub
incb
mov
add
xchg
mov
lcall
scas
not
push
adcl
xor
xchg
inc
jae
test
or
sub
fildl
or
push
enter
lods
cli
pushl
inc
scas
mov
push
lret
xchg
pop
or
sbbb
into
setp
int
jg
or
lcall
cmp
add
leave
mov
int
pusha
into
xchg
lods
test
js
sbb
jle
push
stos
inc
fnstenv
jle
pop
cltd
or
xchg
shrl
push
sbb
scas
xor
xchg
or
icebp
jns
fadds
int3
aas
inc
cmp
push
push
mov
int
jp
cmp
test
jb
clc
jb
repnz
sbb
push
and
or
int
xor
js
fcoml
and
out
cwtl
or
enter
xor
sub
into
add
adc
add
xor
xadd
add
mov
push
dec
and
jns
add
sbb
dec
sbb
pop
xor
fs
testl
test
inc
jae
mov
mov
ret
sbb
adc
push
jle
orb
test
mov
mov
push
jae
rcl
into
adc
inc
jo
stc
xor
cmpsb
add
aaa
dec
cwtl
data16
add
inc
imul
inc
xor
push
push
gs
aas
aam
and
mov
cmp
inc
cmp
cmp
xor
jo
jno
ljmp
lea
push
and
out
lods
out
jo
adc
insb
dec
je
mov
leave
jg
mov
dec
fwait
push
sbb
jo
jp
insl
stos
icebp
or
mov
xlat
jb
lret
cmp
lods
cltd
repnz
sbb
jae
cmp
sbb
xlat
in
add
enter
cltd
mov
sti
xchg
inc
cmp
mov
push
imul
pop
push
inc
hlt
inc
mov
and
roll
cmp
xor
into
push
adc
dec
hlt
push
push
push
aaa
mov
test
mov
adc
sub
pushf
jmp
mov
je
into
mov
xlat
mov
pushf
lahf
and
cmp
mov
mov
mov
js
cmc
dec
xchg
inc
or
js
cmp
scas
ret
xlat
shl
sahf
mov
movsl
enter
push
shll
or
add
add
rorl
xor
pop
cltd
and
or
sub
sbb
inc
popa
rolb
add
xor
loopne
cmc
js
mov
push
jne
sub
xor
mov
xchg
xchg
sbb
decl
cli
ret
ljmp
pop
mov
add
inc
pop
pop
mov
ds
push
das
out
sbb
add
pop
pop
fadds
test
cmc
push
pop
pop
divb
aad
jns
adc
xchg
xor
test
sub
and
mov
push
insl
and
pop
stc
sahf
shrb
adc
xchg
push
clc
ljmp
pushf
aam
pop
mov
aas
jae
rolb
xchg
jae
out
insb
pushf
xor
add
xor
push
or
jns
or
int
jb
push
adc
aam
ret
xchg
xchg
test
cwtl
mov
sub
scas
xchg
lret
sub
cli
pop
cmc
adc
push
loopne
add
adc
mov
and
xor
and
push
xchg
mov
ret
push
outsl
lahf
cmp
push
or
lcall
lret
push
out
sbb
cmpsl
inc
mov
iret
bound
mov
push
loope
mov
sbb
pop
adc
cmp
in
inc
es
push
dec
xchg
mov
push
int
inc
shrl
push
push
sbb
test
jbe
test
into
xchg
imul
dec
xor
imul
sbb
pop
ja
in
lret
push
push
or
das
dec
subl
test
scas
sub
gs
add
push
in
pusha
push
insb
cmp
outsl
popa
loopne
jmp
xchg
sbb
sub
nop
mov
dec
jmp
lret
xchg
mov
pop
jle
jae
cmp
cs
sbb
sub
and
les
int3
pop
lods
test
fisttpl
jb
sbbb
data16
das
test
enter
shlb
sbbl
in
mov
jmp
mov
push
clc
or
in
imul
inc
pop
aam
sub
dec
fistpl
jp
or
iret
inc
jno
loope
pop
mov
inc
lret
add
xor
sar
mov
xlat
xchg
inc
add
sbb
adc
xchg
rcl
pop
stos
or
or
popa
inc
inc
fs
sub
mov
inc
or
jo
xor
and
add
bound
jmp
xor
xchg
loope,pn
xchg
andl
cmp
loopne
adc
pop
adc
push
sub
sub
lds
fs
cs
xchg
adc
sarl
out
aam
xchg
shl
enter
jnp
mov
iret
inc
or
subl
add
mov
adcl
into
inc
or
leave
cli
sbb
mov
push
pushf
pop
pop
sbbb
push
adc
hlt
jo
and
mov
scas
push
push
rclb
push
bound
sbb
out
push
adc
inc
pusha
imul
fadds
add
js
lcall
push
pop
cmp
sbb
pop
dec
fwait
jp
jp
inc
inc
imul
sbb
xor
inc
jecxz
js
clc
dec
or
imul
or
mov
cmp
or
inc
xor
push
add
stc
xor
xorb
sbb
daa
dec
xor
loope
adc
push
popf
or
xor
js
enter
test
dec
es
sbbb
cs
mov
lock
add
popf
pop
popa
stos
imul
adc
nop
rolb
push
rcrl
pop
push
rcrb
push
test
in
mov
adc
dec
les
stos
or
or
push
push
or
aam
xor
xchg
test
shr
and
dec
fdivrs
jb
inc
js
aas
pop
mov
icebp
mov
adc
sbb
pop
movsl
cmc
test
mov
sub
mov
cwtl
or
cwtl
fmul
orl
sbbl
add
mov
adc
mov
pop
popa
enter
cmpsb
roll
scas
lcall
jg
cmpsb
xor
roll
add
ds
sarb
xor
or
sbb
lds
mov
cwtl
push
xchg
fsub
stos
pop
mov
mov
jle
xlat
xor
adc
xchg
lahf
aam
or
push
in
or
mov
rolb
xchg
mov
jae
loopne
je
xor
adc
lock
xor
cltd
gs
adc
pop
sbb
inc
xor
in
scas
fcmove
xchg
enter
jbe
aad
sub
rcrl
adc
dec
mov
pop
xor
xchg
jae
test
push
sub
xchg
xorl
adc
dec
cmp
lcall
punpckhbw
enter
mov
fistpll
mov
aam
pushl
inc
jmp
pop
add
adc
xchg
push
int
dec
jg
ffree
incl
mov
loop
mov
call
or
add
int3
adc
call
outsl
xor
fisttps
aas
outsb
int
fdivl
mov
fistps
adc
or
scas
pusha
repnz
std
out
pop
call
mov
mov
sbb
sbb
clc
out
push
jp
mov
out
mov
test
mov
add
mov
mov
out
lcall
pop
inc
or
push
jmp
jg
mov
fcoml
mov
mov
add
call
sbb
in
das
cmp
rcrl
add
in
add
xchg
xorl
out
fdivr
data16
in
mov
es
lea
bound
aaa
negl
in
int3
and
xor
lock
jmp
and
cltd
mov
mov
ljmp
pushf
inc
mov
neg
pop
jl
add
lock
adc
icebp
aad
adc
and
sahf
mov
sub
fbstp
inc
std
ja
aas
lock
dec
adc
sub
ljmp
out
outsl
into
lods
adc
dec
into
sbb
xchg
sub
into
std
out
jmp
jnp
fs
les
movsl
pushl
or
cwtl
mov
xlat
aad
mov
mov
out
fdivrl
test
imul
cmp
and
pop
jno
shll
add
loope
in
or
pusha
push
add
sbb
mov
inc
pop
and
movsl
sarb
and
jmp
call
jb
std
mov
adc
lcall
add
scas
out
inc
stos
iret
lock
dec
loop
cmp
outsb
cmp
es
movsl
popf
sti
stos
test
jae
mov
dec
jns
out
add
cmp
mov
xor
je
xor
test
mov
jg
cs
mov
or
stos
adc
out
fildll
enter
or
sbb
or
dec
orb
jnp
loop
cmp
or
sarl
test
sbb
lcall
add
std
cs
mov
pop
lods
mov
mov
lahf
sti
mov
adc
add
ret
das
ret
outsl
cmpsb
imul
xor
or
lcall
popa
cltd
jb
lret
inc
sarl
dec
lcall
push
incl
shrb
jp
push
les
push
pop
sbb
inc
pop
fdivr
jae
pushl
test
and
sbb
out
icebp
rol
sub
pop
push
mov
pop
aas
stos
mov
adc
sub
push
cmp
stos
ss
negl
mov
gs
adc
jo
scas
adc
ja
incl
sbbl
ds
out
adc
outsl
mov
int
and
out
lret
mov
mov
gs
fs
fwait
pop
icebp
jle
decl
insb
pushf
xor
sbb
fistl
clc
pushl
mov
jecxz
jae
jae
push
sub
cli
lods
mov
cmpb
xlat
call
sahf
jno,pn
jp
hlt
nop
fidivs
scas
sub
in
or
mov
in
incl
std
insb
sbb
push
jmp
push
insb
pop
xchg
jle
cld
xor
jmp
mov
jg
sbb
jg
and
addr16
jb
mov
call
push
adc
fistpll
out
sbb
xor
aam
insl
in
jge
clc
pop
inc
cld
leave
mov
mov
pushf
xchg
and
mov
js
mov
pop
movsl
xchg
xchg
nop
ror
std
nop
addr16
enter
pop
mov
mov
lret
cmp
pop
int
sarb
cs
hlt
das
popl
mov
lods
cld
sbb
fsubl
mov
jmp
pop
sub
dec
add
add
es
jo
cmp
mov
faddl
xchg
stos
mov
out
and
fistps
cmp
pop
xor
jnp
ret
imul
push
xor
icebp
cwtl
sub
jo
ds
incb
xchg
loope
lods
popa
xchg
aas
jae
adc
mov
push
andl
push
pop
sti
outsb
and
mov
sar
movsb
mov
movsl
xlat
push
pop
jns
or
out
jecxz
movl
mov
mov
mov
call
divl
mov
loop
in
aas
shrb
addl
and
mov
add
sbb
jmp
sbb
mov
cmp
lret
jmp
add
popf
sbb
lret
cmp
out
jo
ja
hlt
cmc
pushf
push
inc
add
ja
cmp
push
decl
scas
push
or
mov
testl
xchg
jmp
cmpsb
cmp
mov
fistps
popf
sbb
imul
lds
inc
nop
inc
sarb
sbb
gs
lret
adc
mov
out
mov
xchg
sbb
pushl
xchg
out
loopne
dec
xor
xor
xor
loop
mov
mov
fwait
cmp
push
int
or
stos
inc
mov
sub
lret
jg
movsb
inc
cmp
scas
jae
or
sbb
std
popf
sti
stos
dec
dec
push
loope
cmp
test
dec
fdivr
ret
outsl
jnp
mov
test
ficomps
in
pop
cmpsl
xor
lods
out
pusha
push
roll
ja
jmp
adcb
repnz
mov
dec
sar
cmp
mov
outsl
xchg
es
fwait
out
je
and
cmpsl
out
jg
hlt
push
and
xlat
fdivs
or
dec
movl
cmp
sbb
ja
adc
sbb
cs
leave
std
jbe
or
loop
add
sbb
jg
jg
int3
call
add
push
xchg
dec
js
std
out
icebp
mov
cmp
call
sahf
push
scas
roll
mov
pop
fs
mov
jmp
outsb
cli
cmp
lods
add
xlat
loopne
add
sbbl
iret
pop
dec
inc
mov
jle
cmpsl
jg
addr16
fimull
ja
loope
ljmp
adc
aam
xor
cld
pop
test
pop
ja
inc
inc
hlt
sti
push
mov
mov
jno
ss
pop
mov
decl
xor
add
int
inc
ret
sub
mov
outsl
adc
out
mov
mov
call
jg
cld
jae
xchg
pusha
sbb
push
pop
outsl
mov
into
std
rcr
call
xchg
popa
sub
and
inc
push
loopne
mov
sub
dec
push
dec
cld
outsb
lock
fimuls
sti
je
lods
int
call
jmp
sbb
inc
aad
popl
jbe
ljmp
sbb
mov
lds
sub
jg
jecxz
ljmp
xorb
bnd
push
clc
ret
js
stc
outsl
mov
and
cld
decl
and
outsb
or
stc
dec
xor
enter
sbb
mov
lret
jge
out
pop
jne
or
pop
cwtl
rolb
daa
pop
test
jmp
and
out
mov
shr
xor
cmpsl
jg
aas
xor
mov
int
cmp
imul
jnp
pop
lds
sbb
fadd
imul
jnp
push
cld
mov
test
or
add
inc
add
xor
cmp
pop
rcrb
xchg
sbb
scas
pushf
pop
leave
jmp
sar
pop
push
pushl
mov
es
mov
mov
dec
mov
xorb
cmc
xchg
dec
mov
imul
mov
aaa
out
data16
iret
movsb
aaa
pushf
aaa
lods
xor
push
and
clc
into
std
xchg
adc
pop
inc
cld
lds
pop
mull
sbb
cld
adc
out
sarl
and
int
mov
clc
cmp
add
push
and
dec
call
mov
sub
clc
out
xchg
jae
shlb
lods
leave
dec
cmp
sbb
fistpl
sti
xor
or
pop
bnd
mov
aaa
aaa
fistpll
in
movl
icebp
es
fcmove
sti
jge
imul
loopne
sub
in
clc
ficomps
pop
pop
sbb
dec
pop
orb
mov
ja
add
or
xchg
jo
aaa
pop
ja
stos
cmp
push
and
push
incb
and
sbb
loope
xchg
mov
mov
les
movsb
les
lcall
mov
or
out
pop
pop
cli
movsb
insl
push
dec
mov
es
dec
ljmp
cli
into
loop
sahf
add
add
and
pop
outsl
ja
push
idivb
subb
ja
mov
in
dec
popa
jecxz
icebp
pop
jle
aad
sbb
sub
movb
fcomi
dec
out
mov
mov
test
mov
stos
adc
xchg
mov
rorl
cmp
nop
fwait
std
ja
in
cmc
add
and
repz
push
xlat
sti
in
cwtl
adc
xchg
mov
loope
mov
fnsave
inc
ljmp
jle
sbb
ja
clc
call
jo
mov
ds
aaa
sub
push
iret
mov
jne
mov
dec
adc
outsl
adc
lock
cmp
arpl
call
aas
mov
mov
popa
dec
jne
push
cs
mov
fwait
pushf
pop
fadds
mov
adc
cwtl
xor
icebp
dec
and
xlat
pop
mov
loopne
cld
pop
out
shlb
mov
cmp
sub
mov
mov
cld
out
outsb
mov
cmp
sbb
ljmp
adc
mov
sub
outsl
jge
dec
dec
fimull
loope
sub
ss
and
mov
cmp
orl
jge
jb
dec
ss
jp
psubsb
mov
pop
fisubl
out
inc
stos
add
out
mov
hlt
jle
xor
in
pop
fs
push
lea
mov
shrl
lods
out
es
fildl
push
inc
loope
lds
decl
fisubrs
jbe
mov
sbb
add
seto
movsb
mov
dec
in
and
mov
pop
cmp
in
xor
pop
fistpll
sbb
je
imul
cwtl
mov
jnp
pop
loope
clc
sahf
push
shll
mov
jg
mov
leave
int3
arpl
jecxz
xchg
imul
mov
test
push
push
mov
aas
xorl
jae
idivl
mov
ret
jmp
icebp
xchg
fadds
test
repz
stos
mov
sti
ffreep
mov
test
test
jnp
add
jge
clc
cmpsl
inc
jnp
jle
fs
cmp
xchg
out
js
ja
push
mov
pop
data16
shl
jge
pop
mov
sbb
sbb
sbb
cmp
ljmp
adc
xchg
xchg
and
shrl
mov
lods
cmp
insl
fdivr
mov
sbb
mov
lock
aas
mov
pop
push
ret
push
repz
xlat
mov
scas
sub
jg
inc
xchg
popf
lcall
scas
xchg
shlb
mov
in
mov
xchg
push
push
lret
hlt
dec
cmp
inc
aad
sbb
inc
andb
jp
test
cmc
sub
jg
and
cli
xchg
js
pop
fnsave
pop
mov
ja
fsubl
push
push
push
pop
cmp
jne
dec
mov
push
call
sbbl
gs
cmp
pop
add
ffreep
sbbl
mov
cmpsb
dec
sarb
mov
loope
imul
test
mov
enter
xlat
call
jle
cmp
mov
jnp
aaa
adc
push
les
xor
sti
inc
decb
dec
lcall
pop
andl
xchg
xchg
xchg
stos
pop
mov
jo
xchg
or
testb
je
out
sar
loopne
mov
roll
les
test
sub
fdivs
and
ja
adc
notl
loopne
aas
xor
mov
jae
xchg
push
icebp
ret
add
inc
ss
and
pop
movsb
xchg
lahf
adc
mov
dec
lods
shlb
std
mov
dec
scas
add
xchg
mov
daa
js
cmc
rcrb
sbb
xchg
jge
ja
adc
pop
mov
aad
mov
movsb
and
and
into
pop
enter
or
in
jecxz
and
imul
bound
push
pop
jecxz
cmpsb
sbb
jns
mov
and
pushf
sti
das
pushf
bound
call
dec
hlt
loope
dec
out
call
xchg
mov
mov
push
mov
mov
dec
clc
pop
fdivr
jge
jle
mov
es
lods
xor
mov
mov
mov
stc
jnp
fistps
jmp
mov
fstpl
nop
push
ds
jmp
into
or
jns
mov
popf
in
jp
inc
inc
out
jg
xchg
dec
insl
or
sarb
ja
inc
loop
fisubs
push
mov
aaa
xor
mov
jp
inc
mov
jg
rcrb
mov
xchg
mov
inc
fs
and
mov
out
or
test
xchg
cld
pmaxsw
xchg
jne
into
stos
sub
in
lods
enter
test
mov
cmp
pop
popa
cli
adc
adc
cs
ds
pop
loop
fistpll
lcall
xor
push
sahf
push
dec
int3
xor
popa
dec
jb
js
cltd
sbb
jecxz
dec
data16
loop
lret
std
pop
cmp
mov
fwait
pop
lds
stos
jbe
in
pop
pop
insb
shlb
cli
pusha
mov
insb
out
add
call
fwait
cmc
xchg
and
sbb
sbb
mov
ficomps
mov
ja
push
dec
inc
insb
mov
mov
and
mov
test
or
fucomp
sub
or
xor
std
pop
mov
pushl
sub
out
mov
mov
adc
or
cmp
pop
in
mov
call
shl
js
sub
inc
lea
or
or
test
sub
dec
jmp
hlt
arpl
push
test
adcl
xchg
pop
jl
clc
push
neg
jg
bound
xchg
not
jg
jo
or
cld
lahf
sti
jmp
or
xchg
fdivrl
ja
das
fldcw
andb
cmp
adc
mov
ja
incl
call
add
mov
sub
pushf
mov
scas
xchg
lods
jno
mov
cli
fistpll
add
jnp
inc
test
insl
fdiv
clc
hlt
jbe
in
lods
push
sub
xchg
or
and
in
dec
jge
jb
test
int
dec
fucomip
lock
hlt
mov
push
sub
adc
call
addb
mov
jnp
ja
sbb
pop
int
push
cmp
pop
outsl
pusha
fadds
lahf
dec
jno
addr16
ljmp
arpl
je
pop
mov
xchg
mov
scas
fucomp
jg
lods
inc
repnz
sub
arpl
jge
jo
insl
pop
loopne
repz
ret
inc
icebp
call
jne
inc
adc
popf
sti
pop
andl
xorb
xor
sbb
test
popa
lods
pop
test
push
in
mov
xchg
push
ljmp
imull
fiaddl
in
fldcw
bound
sbb
lahf
fistpll
sub
lods
cli
stos
es
xchg
adc
mov
into
xor
pop
jp
pop
inc
mov
loope
ja
xchg
jb
push
cmpsl
inc
insl
ljmp
pop
mov
jnp
mov
dec
into
push
stos
jl
das
pop
push
xchg
inc
adc
or
pushl
xchg
sbb
jmp
pop
movsb
dec
out
dec
xor
call
lods
adc
adc
enter
add
stos
sti
xor
add
or
shll
adc
xchg
loop
clc
fildl
cwtl
xor
pop
mov
jl
fs
adc
jo
dec
aam
aas
out
push
insl
pop
loope
idivl
xchg
shl
mov
lcall
fwait
movsl
pop
loope
lret
addr16
les
lock
jg
sub
xchg
sbb
movsb
shlb
push
jae
icebp
pop
rolb
xor
cld
call
jmp
test
add
pushl
call
nop
movsb
movsl
cmp
lahf
add
jae
push
in
aam
sbb
inc
pop
lock
mov
xchg
sbb
xchg
jno
pop
popl
jae,pn
xor
pop
stos
clc
decl
std
ljmp
fisttps
outsl
adc
dec
sub
adc
in
rorl
push
add
and
jp
jo
fnstenv
dec
cmc
dec
mov
and
pop
jge
dec
mov
xchg
lods
pop
adc
cmp
hlt
jp
je
mov
pop
pop
out
mov
bound
jg
fistpll
int3
mov
into
mov
lock
incl
pusha
sbb
xchg
in
push
outsl
shl
out
or
inc
adc
gs
lcall
fadd
pop
insl
subb
ds
lock
push
int
mov
inc
push
jmp
add
jg
adc
movsl
es
test
mov
repz
add
pop
out
loop
idiv
cmp
call
lods
sti
inc
sti
test
adc
cmp
cmpl
xor
jmp
mov
mov
in
je
in
xor
mov
mov
nop
lret
mov
cmpl
cld
pop
out
incl
das
mov
test
imul
jle
xchg
mov
je
aad
mov
icebp
scas
outsb
xchg
mov
cmp
dec
int
mov
loope
ja
ret
mov
daa
xchg
shrb
mov
aas
roll
out
test
hlt
mov
das
leave
adc
test
or
shl
in
jae
pop
inc
lods
cltd
xor
in
loopne
hlt
stc
ja
clc
iret
test
cmp
sarb
std
adc
push
lock
xor
sub
mov
jmp
cmc
mov
mov
js
push
xor
idiv
jg
push
jae
aas
mov
shrl
outsb
ret
add
sbb
xor
arpl
pop
daa
cli
fstl
jbe
loop
jae
out
cli
in
std
int3
cmpsl
aaa
mov
gs
nop
or
push
bound
push
mov
and
jb
imul
cmpsl
pop
push
stos
push
out
push
cmp
aas
pop
nop
mov
out
ja
aas
pop
inc
mov
jmp
push
orb
lahf
adc
fists
lods
cld
faddl
ficoms
popf
clc
aad
jp
cwtl
sub
daa
mull
movsl
xchg
dec
pop
je
dec
cli
decl
pop
xchg
ja
push
repnz
adc
neg
pop
sahf
out
test
dec
scas
popa
lret
xchg
mov
mov
xor
fistpll
inc
rcrb
div
xorb
jmp
sbb
push
leave
push
xchg
loope
mov
pop
loope
jae
sbb
out
adc
insl
push
cld
loope
fcoml
and
xor
hlt
jns
mov
arpl
out
or
mov
filds
pop
xor
push
clc
int
sbb
mov
xchg
rorb
lahf
sub
pushl
out
iret
or
in
aad
mov
fs
adc
lock
out
add
repz
mov
jbe
jg
clc
push
jmp
mov
cwtl
or
cld
lods
adc
jbe
and
idiv
sbb
movsb
sti
stos
jns
inc
mov
sbb
hlt
push
lret
xor
xchg
aas
repnz
inc
pop
call
mov
out
jnp
std
loope
lret
push
out
mov
ja
loop
loopne
push
xchg
ret
push
stos
xchg
cmp
ja
lock
fwait
mov
pop
jp
push
cmp
jmp
cs
push
mov
cltd
xchg
cmp
jle
ret
cmp
inc
mov
and
mov
sub
out
es
sub
pop
cmp
jecxz
rorb
fistpll
out
ljmp
cli
sarl
call
popa
add
mov
decl
aad
adc
movsl
daa
rorb
sub
leave
int3
sbb
mov
fistpll
decl
clc
lds
iret
mov
jg
cmp
mov
imul
and
mov
mov
add
fbld
inc
fildll
jg
das
pop
adc
fisttpl
cmp
inc
js
sbbb
negl
std
xor
std
pop
pushf
ret
fisubrl
loopne
icebp
rcrb
fistpll
dec
data16
jmp
ja
out
jns
fdivs
mov
out
add
mov
decl
out
mov
test
mov
popf
add
pop
mov
cmp
sub
xor
and
xchg
fwait
push
lcall
mov
and
sarb
fildl
or
pop
into
jge
mov
cmp
sti
cmpsl
dec
pop
pusha
xchg
sarl
sub
movsb
xor
push
fildll
cld
pop
xor
or
jl
popa
fdiv
sti
inc
xchg
mov
cmp
pop
rorb
je
jmp
out
stos
pop
in
loop
ror
sub
std
xlat
jecxz
push
mov
add
pop
mov
pushl
out
mov
nop
mov
shrb
xchg
lds
inc
sarb
mull
rorb
int
sbb
xor
pushl
aaa
out
sub
add
mov
sbb
adc
add
fcmovbe
jg
out
mov
ja
adc
mov
rorl
pusha
push
pop
in
xlat
int
mov
cmc
out
adc
out
das
testb
mov
cmp
pop
pop
xchg
pop
mov
and
mov
fmuls
dec
std
out
jns
push
incl
daa
mov
js
adc
and
sbb
mov
incl
xchg
cmpsb
mov
orb
aas
pop
cmpl
mov
jg
xchg
dec
mov
mov
inc
es
cli
xchg
cwtl
out
dec
out
dec
mov
inc
xchg
movsb
add
cmc
ds
rorl
add
and
aas
sbb
sub
ljmp
xchg
push
jbe
scas
jge
adc
xor
lods
or
outsl
gs
or
and
aam
cmp
ja
inc
xor
pop
fsubrl
pop
cwtl
add
mov
movsb
mov
sbb
decb
lret
xor
xchg
xor
arpl
push
cmpsl
ljmp
inc
fidivrs
xchg
insb
mov
neg
jo
por
dec
shrb
decb
cs
mov
call
addl
loopne
dec
cld
xchg
add
cmp
ljmp
test
jmp
fstl
fwait
jmp
xchg
xor
movsl
sbb
push
out
aas
push
pushl
xchg
and
add
and
or
loop
in
pop
pusha
ret
into
jo
out
inc
jmp
pop
stc
xchg
jg
call
add
jle
xor
pop
lock
mov
cmp
sahf
mov
push
xchg
call
mov
pop
loope
adc
jl
jb
fmull
aam
aaa
js
outsb
psrld
test
loope
outsl
ss
dec
mov
or
adc
shl
aas
ljmp
mov
dec
adc
mov
xchg
jp
idivb
iret
inc
iret
cmpb
dec
push
push
jbe
sbb
jge
out
std
clc
xor
repz
enter
js
sub
and
daa
xor
mov
cwtl
in
sub
daa
mov
push
mov
pop
fiadds
test
lret
push
pushf
adc
xchg
incb
xchg
sub
movsb
in
into
js
pcmpgtd
das
fdivs
mov
repz
dec
mov
add
stc
fdiv
adc
out
pop
xor
mov
ja
in
shlb
adc
sbb
scas
inc
jge
loop
outsb
in
pop
push
sbb
call
daa
and
call
cmp
jns
jmp
int3
pop
imul
jmp
fistl
ja
pop
mov
dec
ret
lret
adcl
adc
adc
inc
push
mov
add
bound
sbb
mov
push
inc
call
hlt
lods
mov
mov
jecxz
add
lret
mov
imul
out
out
jne
daa
mov
sbb
mov
icebp
pushl
inc
sarl
shrl
daa
jg
mov
add
push
stos
pop
adc
insl
imul
call
call
cli
aad
ret
sti
fbstp
xchg
cmp
pop
jne
testb
mov
pop
lret
sbb
js
loope
ss
add
mov
je
out
ficomps
movsb
inc
add
arpl
fs
mov
mov
call
mov
scas
mov
xchg
pop
test
scas
mov
mov
inc
in
mov
inc
fdivrs
lock
cmpsb
push
sbb
push
add
pop
pop
push
loope
js
cmpsl
inc
das
movsl
sub
subb
lret
scas
out
jg
call
clc
xor
inc
cli
aad
mov
adc
or
aas
add
in
out
adc
stos
mov
imul
xlat
and
cmp
mov
pop
int
sub
adc
adc
xor
shlb
loopne
and
loope
jmp
adc
pop
cs
mov
sarb
cmp
out
filds
pop
pushl
inc
mov
push
fisubrs
sbb
sub
shrl
decl
fdivrs
idivl
push
or
inc
or
lds
sahf
inc
leave
test
mov
inc
cmpsl
insl
adc
jb
fwait
pop
or
mov
bound
push
cld
pop
dec
hlt
pop
sub
lea
mov
jns
std
sub
stos
dec
aaa
pop
or
and
idiv
push
addr16
test
inc
jl
xchg
pop
stos
in
jl
frstor
in
cld
push
and
subl
sti
mov
jmp
adc
rorb
divb
push
lods
mov
xor
cmpsl
or
xchg
and
push
out
jg
jg
repnz
test
bound
push
fs
pop
in
jge
pop
push
push
cmp
xor
clc
insl
fimull
cmpl
lret
negl
xchg
xor
test
insl
xchg
cmp
in
aas
add
enter
mov
add
jno
arpl
dec
pop
mov
dec
adc
fiadds
and
or
sbb
dec
mov
fldl
incl
sbb
jne
xchg
scas
xorl
das
negl
xchg
out
fsubs
and
js
pop
shll
stc
ja
rorb
inc
negb
push
dec
ret
ja
or
xchg
pop
bnd
jnp
mov
enter
pop
push
jmp
lahf
aad
xchg
xor
and
sarb
sti
xchg
sti
pop
call
stos
mov
inc
ja
mov
inc
or
and
mov
xchg
fdivl
outsb
rol
xor
test
xlat
mov
inc
and
in
sti
sbbb
jg
add
aas
aaa
mov
adc
js
add
cld
add
movsb
pop
divps
in
pop
cli
cmpsl
mov
scas
mov
and
and
sub
xchg
ret
jb
test
mov
and
and
and
push
std
pop
sub
pop
pop
test
out
mov
lret
scas
clc
push
push
xor
sbb
pop
popl
out
dec
sbb
sbb
push
cmp
inc
int
mov
jg
add
clc
addr16
stc
inc
loop
jg
clc
aad
ljmp
arpl
inc
jno
aam
clc
push
jae
adc
rcll
mov
xchg
mov
fstp
push
iret
nop
jecxz
leave
xor
testb
or
jl
cmp
xchg
cmp
lea
and
xor
hlt
push
loop
jbe
shrl
push
in
inc
jp
add
arpl
jae
jnp
rcr
push
int
aad
cmp
pop
cmp
xchg
inc
addl
aas
adcl
xchg
nop
push
test
andl
jg
es
and
rclb
cmpb
jp
daa
xor
jp
fnstsw
and
xchg
mov
inc
daa
sub
push
mov
inc
shrl
sbb
outsb
loope
sbb
lock
scas
lds
add
lods
sbb
mov
jo
sahf
add
xchg
nop
out
jnp
mov
mov
rcll
testl
je
jg
fldcw
xlat
ud0
test
scas
cmp
cld
mov
fistps
sbb
fs
subb
adcl
add
cmpsl
testb
and
adc
sbb
jb
scas
aas
clc
mov
cs
es
filds
mov
push
sbb
sub
nop
mov
test
iret
or
decl
push
fldcw
arpl
mov
bsr
stos
clc
push
push
sub
clc
jg
sub
xor
and
pop
mov
add
jle
mov
testb
or
nop
cmp
xchg
jnp
xlat
sub
movb
push
mov
dec
test
xchg
cmovge
xor
daa
aas
scas
dec
mov
mov
clc
jae
cli
jae
out
xor
repnz
shrl
mov
mov
add
adc
or
fdivr
jnp
lock
pop
das
xor
sti
jne
in
test
call
into
std
inc
test
in
add
or
lcall
lock
enter
pop
pop
mov
test
mov
inc
inc
and
kortestw
inc
ljmp
add
push
jp
ret
push
or
fucomp
mov
stc
outsl
fistps
loopne
jbe
imul
jnp
fstpl
jg
fistps
shl
gs
cli
pusha
jnp
add
out
cmp
lds
pop
iret
cmpsb
movsb
loopne
mov
or
push
inc
lret
mov
sar
and
xor
lods
push
mov
push
pop
adc
sbb
cmp
jl
sarb
popf
sub
inc
icebp
push
leave
push
movsl
aaa
mov
subl
insl
jns
in
jae
xchg
jecxz
decl
pop
or
sub
iret
ja
arpl
ljmp
inc
jmp
loop
in
repnz
dec
adc
sti
xchg
fcoml
outsl
inc
cmp
ret
hlt
mov
in
or
aad
push
xor
loopne
sbb
insb
insb
add
and
cmpb
mov
adc
stos
dec
mov
rcll
pop
jnp
lret
push
and
clc
das
je
push
push
insl
loopne
insb
mov
sub
mull
sbb
pusha
inc
push
lods
fistpll
add
ret
push
jbe
loopne
data16
out
fstl
dec
or
xor
subl
sbb
div
sbb
les
jo
aad
xor
pop
and
mov
jns
movsb
lock
sarb
cmp
sub
or
mov
xlat
pop
dec
cmp
jmp
mov
fsub
push
cs
or
jle
fidivl
xor
insb
mov
test
and
out
sbb
fisubrl
mov
sbb
movsb
jge
push
mov
in
pop
cmc
loope
negb
cmp
and
dec
inc
xor
xorb
mov
or
mov
in
mov
pop
and
les
idiv
loop
fmul
dec
aaa
decb
inc
push
test
sbb
push
push
mov
cmc
cltd
sbb
js
mov
xor
iret
ss
sub
es
mov
call
js
cmpsb
ss
lock
sbb
cmc
cmc
xor
xor
iret
ljmp
mov
lret
repz
call
mov
jge
push
lcall
orb
in
jo
sbb
into
outsl
lds
cs
shl
sbb
fimuls
outsl
in
lret
rcll
fnstsw
in
mov
and
or
pop
xor
jns
cmpsl
lcall
insb
add
sbb
ss
inc
dec
mov
fiadds
clc
out
inc
mov
xlat
iret
rclb
ret
insl
fistpl
add
hlt
jge
cmp
sbb
aad
sbb
mov
mov
mov
jo
jg
push
mov
add
add
fstpl
inc
push
outsl
cmp
stos
add
mov
lods
femms
jg
pop
xor
pop
add
jno
call
jmp
add
rcrl
nop
out
cmp
add
lock
mov
or
dec
jo
subl
push
or
lds
outsl
push
mov
sub
je
add
add
shll
sbb
xchg
push
jno
into
out
fwait
lret
aas
into
jmp
dec
pop
and
cli
into
inc
mov
loopne
xor
and
dec
es
sbbl
ret
subl
es
add
add
bound
insb
push
add
lock
dec
lea
fadd
add
mov
sub
and
adc
pop
repz
call
into
mov
aas
xchg
hlt
in
jecxz
sbb
pop
psrad
shll
mov
das
fwait
add
xchg
mov
das
mov
clc
sar
sbb
int3
dec
xchg
pop
jecxz
decl
bound
cmp
icebp
or
pop
xor
daa
xchg
xchg
mov
fbld
mov
pushf
cmpl
or
jae
sub
inc
mov
mov
decb
push
mov
cmp
sarb
mov
xchg
scas
mov
pop
inc
pop
mov
cmc
add
out
mov
lock
icebp
pop
in
pushl
push
popa
iret
lcall
inc
ficoml
add
xchg
adc
cs
pop
push
jp
jne
push
mov
adc
loopne
inc
fstl
push
push
call
push
clc
adc
xchg
lea
popa
mov
inc
hlt
dec
jae
hlt
mov
jg
sbb
mov
call
pop
jns
push
jns
sbb
xor
add
pushl
into
lea
cs
test
aam
xor
pop
leave
or
mov
fdiv
add
mov
stos
test
mov
enter
gs
shl
push
pop
cmp
aad
xor
push
jnp
push
push
nop
ficomps
adc
or
jg
jle
fdivrs
add
xchg
clc
iret
std
lahf
xor
and
jb
leave
sahf
lcall
ljmp
adc
sarl
pushf
add
add
cmp
mov
pop
outsl
sub
lds
xor
into
mov
lods
sbb
xchg
mov
mov
idivb
les
stos
add
xlat
loop
cld
out
pop
test
inc
inc
add
pop
fsubrp
cmpsl
jns
mov
mov
inc
movsb
hlt
lahf
es
lods
inc
xchg
incb
fwait
mov
ret
or
dec
xorb
or
ffree
mov
sbb
sub
push
mov
jns
jmp
sbb
inc
pop
gs
cmp
imul
jg
cmp
mov
cmp
popf
sti
aas
xor
rcll
jb
inc
stos
push
out
out
out
stos
out
push
lret
repz
push
mov
inc
ds
clc
push
mov
rcpps
mov
fsts
dec
std
pop
xor
mov
dec
call
ds
decl
jecxz
mov
outsl
jnp
sbb
arpl
inc
icebp
daa
mov
adc
adc
xchg
fsubrl
fwait
push
stc
mov
test
mov
aas
push
icebp
fnstsw
lcall
and
ficompl
mov
subb
jge
cmp
mov
iret
repz
fisubrl
jp
loop
gs
js
sub
or
pop
out
pop
rclb
dec
cmp
fcmovnbe
iret
gs
ret
jb
ja
mov
xchg
dec
test
jne
add
mov
pushf
fidivrl
sbb
das
lods
jno
pop
mov
add
push
cltd
xlat
push
stos
outsb
jmp
cmc
frstor
cmp
insl
movsb
jg
pop
mov
pop
jp
add
pop
adc
fisubl
outsl
out
mov
xchg
sti
fcomip
jle
xlat
inc
mov
mov
inc
das
mov
xchg
fdivrl
xchg
mov
and
fdivp
clc
enter
mov
cwtl
in
dec
mov
push
data16
ds
mov
xchg
inc
clc
inc
mov
or
and
and
adcb
leave
xor
pop
mov
in
lods
or
jmp
addr16
dec
push
aaa
fsubrs
inc
loope
imul
pop
jb
xor
rcrl
mov
into
sti
cmp
sbb
mov
dec
ret
out
add
xor
adc
jno
pushf
sti
outsb
add
mov
ljmp
mov
pop
shrb
mov
cli
addr16
and
idivb
inc
jecxz
adc
out
dec
aas
xchg
scas
lahf
loopne
xchg
cmp
mov
sar
or
mov
stc
sbb
scas
adc
lods
enter
xchg
inc
cld
cmove
js
cmp
outsl
sbb
jg
jg
pop
iret
push
jo
cltd
repnz
pop
push
mov
push
call
dec
jecxz
cli
sub
daa
mov
xor
pop
pop
xchg
pop
call
decl
inc
adc
and
lret
ljmp
daa
inc
daa
jecxz
pop
sub
movsb
loope
push
inc
pop
outsl
pop
jle
call
xor
cld
pop
add
lcall
shlb
lds
push
bound
xor
jns
jb
into
mov
sti
out
inc
or
mov
jp
xchg
ss
jp
dec
shlb
shl
mov
inc
push
jg
decl
sub
stc
sub
pop
inc
loope
ljmp
push
jg
sub
pop
call
jno
sti
jp
ret
out
xorb
testb
out
pop
pop
push
fisttps
cmpl
in
mov
dec
aaa
mov
push
je
lods
xor
push
out
lcall
out
xor
sbbb
outsl
out
cmp
jns
add
lock
push
add
xchg
adc
ret
jle
clc
mov
sub
mov
mov
repz
xcrypt-ofb
cmpsl
out
jge
sahf
mov
mov
jg
and
ret
sbb
mov
mov
fs
or
lret
insb
mov
lret
pop
add
lahf
xor
js
ds
js
pop
adc
loop
xor
jae
aas
loope
rcrl
mov
push
rcll
xor
repz
ficoml
push
aas
push
fcoml
test
fcomp
jge
rcrl
rep
aam
cmpsl
mov
xchg
xchg
outsl
inc
loopne
dec
mov
shlb
mov
fs
and
jbe
and
pop
fcomps
pusha
or
xchg
nop
mov
sar
mov
orl
arpl
std
mov
mov
push
test
push
lds
cltd
adc
js
push
ret
aad
std
mov
hlt
fiadds
inc
leave
hlt
inc
cltd
sub
das
cli
call
push
xor
sub
push
sbbb
mov
push
std
ret
mov
sbb
push
pop
outsb
or
xchg
xor
add
loop
data16
loop
lock
cmp
cmp
mov
inc
or
pop
in
aad
gs
imul
pop
aas
cmp
cld
daa
jo
lods
jne
jbe
mov
add
data16
push
add
sub
dec
mov
and
fistl
loop
xchg
xor
inc
fiadds
lock
iret
mov
hlt
nop
sub
or
stos
sub
jl
test
ss
fidivrs
fistpll
adc
pop
js
inc
in
cmc
aas
fdivrp
or
sub
push
in
sti
mov
bsr
adc
addb
cmp
sarl
sti
inc
loop
aas
test
iret
incb
out
pop
sbb
jmp
ds
je
dec
xchg
mov
push
loop
sub
push
or
lock
mov
scas
sub
inc
mov
test
jl
popa
pop
or
adc
fadd
xor
jl
mov
ja
lret
push
mov
int3
push
fistpll
stc
xor
add
mov
push
and
push
lock
sbb
mov
add
cmp
test
xlat
ljmp
adc
pop
scas
jle
mov
stos
notl
js
mull
inc
mov
push
fwait
jecxz
adc
outsb
lock
jae
pusha
fbld
adc
fistps
cld
or
clc
jmp
cmp
scas
xchg
orb
jns
out
pusha
push
loop
adc
aad
inc
stos
jnp
nop
imul
pop
cld
and
pop
fdivrp
pop
mov
in
add
cmp
mov
jge
or
xchg
cltd
pop
mov
pusha
mov
sti
adc
int3
iret
sub
test
push
aam
out
mov
mov
lock
add
lods
mov
dec
aad
sbb
and
ja
test
in
sbb
push
aas
mov
push
iret
mov
xchg
pop
sti
sbb
sarl
sbb
lahf
push
arpl
xor
inc
xor
cmpsl
pop
test
pop
shl
and
popa
xchg
lock
cld
jb
sbb
in
ja
addr16
jg
incl
ljmp
movsl
int3
push
mov
jg
xor
or
cmp
ret
sub
jg
test
cmc
or
adc
iret
ret
jl
sti
inc
jge
mov
mov
lahf
inc
int3
call
cmp
call
decl
cmp
add
lea
xlat
sub
jns
xor
mov
fcoms
popa
aaa
sbb
popl
push
or
add
insl
and
daa
adc
dec
loopne
xor
sub
outsl
adc
cmc
aaa
mov
add
add
fistps
outsb
in
insb
divl
add
cmp
popa
or
cmpsb
dec
and
mov
add
jg
dec
std
stc
xor
jnp
pushf
inc
push
negl
adc
cmp
jg
fwait
out
lods
cltd
andl
jle
pusha
inc
or
pop
fucomp
out
lock
idiv
jo
popa
mov
dec
stos
or
cwtl
sub
pop
sub
fldt
daa
cmpsb
mov
cmpsb
xor
jle
push
push
xchg
mov
daa
lcall
out
pop
lcall
lods
aam
test
sbb
lds
mov
and
jne
mov
daa
lock
add
gs
fs
pop
int3
or
stos
arpl
sub
out
mov
xchg
mov
mov
fdivl
jg
pop
loope
fidivrs
ss
and
shl
lret
cld
pop
xchg
lds
or
insb
jp
daa
hlt
pop
fwait
mov
punpcklwd
and
outsb
mov
and
xchg
or
insb
cmp
addr16
sbb
jmp
sbbb
sbb
fsub
loope
aas
sti
popa
outsb
or
or
rcrl
mov
push
ffreep
add
inc
andl
lea
inc
je
cld
ret
mov
mov
or
mov
cmp
loopnew
lcall
jmp
sbb
fdivrl
mov
fnstenv
clc
addb
aas
sti
jg
add
inc
cmp
sti
insl
jbe
stc
add
dec
cmp
and
and
out
leave
in
pop
mov
sub
adc
lock
insb
cs
lea
mov
nop
or
mov
pop
in
mov
icebp
fnstcw
dec
bound
mov
call
arpl
sarl
daa
pop
jbe
sbb
aaa
adc
lods
mov
pop
and
jg
je
add
dec
fmuls
push
cwtl
jp
pop
rol
cwtl
lods
jle
push
cli
aad
out
sub
leave
rcrl
xchg
cmp
push
es
jg
cli
mov
gs
inc
push
lods
in
test
jae
dec
inc
loope
in
jae
ud2
cli
out
jge
sbbl
and
inc
adc
std
pop
mov
push
and
mov
pop
sbbb
out
aaa
mov
xchg
test
pop
xchg
mov
push
loope
xlat
xchg
jae
mov
xor
pop
stos
int
push
inc
call
mov
addl
incb
cmpsb
mov
negl
jns
xor
push
mov
ja
mov
pop
lock
mov
imul
adc
pop
sahf
adc
add
and
xor
mov
std
lods
ljmp
test
mov
rolb
data16
test
fstpl
ret
mov
add
inc
and
clc
xor
lahf
sti
mov
jae
test
xchg
ret
aad
mov
inc
test
call
and
sub
popf
lahf
mov
jne
cld
sbb
xchg
xchg
push
cmpsb
fadds
push
push
push
addr16
sub
aas
loope
jo
lahf
insb
fnstsw
dec
fimuls
push
test
xor
inc
jl
jecxz
inc
test
jecxz
fnsave
mov
dec
push
and
add
xchg
sbb
inc
xor
imulb
xchg
add
call
mov
xlat
cmp
mov
cmpsl
aaa
fsubr
jno
in
hlt
sub
adc
inc
in
fldt
ljmp
lds
push
cli
lahf
mov
jns
pop
push
pop
in
in
pop
xor
xor
jle
jne
xchg
push
push
inc
push
mov
jp
or
test
ja
mov
sub
push
add
bswap
mov
bound
pushf
pop
out
pop
cmp
je
push
aad
negl
mov
xchg
sbb
test
or
push
add
popf
ljmp
sbb
loop
dec
loope
jne
ret
lahf
mov
andl
imul
je
je
loopne
mov
pop
shll
and
das
lds
rcr
arpl
fucom
inc
sbbb
fwait
sub
push
inc
cli
xor
sahf
xchg
dec
dec
mov
les
mov
ljmp
das
ljmp
je
pop
and
pop
dec
lahf
ds
rcrb
add
shrb
sbb
jg
cmc
lahf
xor
cwtl
call
out
shr
les
sbb
xchg
iret
push
int
and
mov
pushf
sub
cld
dec
enter
mov
jle
mov
mov
adc
pusha
imul
lret
sub
lahf
inc
lock
repz
pushf
xor
in
lahf
inc
lods
rcl
mov
jle
add
popf
mov
out
push
pop
sub
sub
push
jle
xchg
or
sahf
sbb
or
test
xor
incl
mov
aaa
jmp
adc
int
insl
negb
lret
cs
xor
shl
cmpsl
filds
sub
inc
push
cmp
notl
dec
adc
push
mov
sbb
dec
out
push
cld
mov
aaa
mov
mov
push
xor
adc
push
mov
test
lock
cmp
addr16
test
cmc
dec
xchg
dec
ja
pushf
call
loope
or
test
and
inc
movsb
ret
ret
dec
push
cmpsl
or
popaw
jge
jp
adc
lods
in
cmpl
jae
pop
pushf
jnp
dec
cmp
cmpsb
or
les
icebp
mov
cld
sub
add
dec
add
mov
ljmp
cmp
sbb
int3
popl
lods
jae
adc
das
mov
sbbl
inc
ljmp
outsl
lock
pop
adc
clc
dec
in
insb
adc
cld
shl
lock
cli
pop
dec
jge
mov
sarb
inc
cmp
pushf
out
decl
mov
and
aaa
aas
add
pop
cli
or
push
add
cmpsl
vmread
inc
lods
mov
mov
aas
inc
dec
cmp
xchg
ret
subl
sbb
xchg
push
jg
cwtl
lds
push
mov
int3
or
icebp
cmp
insb
xchg
mov
push
scas
outsb
ja
pop
test
sbb
adc
cmc
rol
imul
daa
xor
mov
int
jecxz
ja
cmp
push
ljmp
mov
jo
push
aas
mov
sbb
or
push
loopne
mov
xchg
xchg
int3
lcall
add
notl
icebp
jg
test
jp
jo
test
decl
dec
jns
lahf
hlt
adc
lcall
idivl
mov
into
mov
and
into
mov
scas
xchg
or
lret
inc
add
mov
dec
mov
sti
cs
jae
mov
outsb
pop
test
pop
stc
icebp
pop
cmc
iret
clc
inc
hlt
movsl
xlat
stc
pop
les
cld
out
hlt
ljmp
adc
mov
and
lahf
xor
repnz
into
cli
pop
push
jl
in
xor
cli
cwtl
inc
pushf
std
adc
fstpt
mov
jns
cmp
pop
push
xchg
jb
cld
jg
sbb
cmp
mov
aad
ss
push
insl
inc
or
jle
stos
fdivr
jo
fcoml
test
outsb
add
xor
lds
adc
iret
mov
sbb
rclb
sub
popf
pop
lret
jg
dec
or
pop
test
cmp
fisttpl
or
inc
dec
jmp
sbbl
test
sbb
xor
pop
cmpsb
call
roll
dec
mov
fisubs
adc
jecxz
jge
add
add
sbb
dec
sarb
mov
faddl
xchg
xor
jbe
pop
and
bound
lods
and
stos
sbb
mov
mov
or
movsb
lcall
push
arpl
ljmp
rcll
nop
sub
test
xchg
sarl
js
imul
sbb
push
mov
adc
xchg
es
push
push
lcall
push
stc
push
arpl
mov
mov
add
push
pop
pop
ds
lods
or
jmp
xchg
xchg
cmpsb
mov
pop
and
loope
mov
ljmp
std
out
add
mov
dec
repnz
mov
cli
ffreep
mov
test
mov
adcl
pushl
cli
inc
popf
push
es
or
push
cmpsl
outsl
mov
in
mov
xchg
daa
mov
insb
lcall
dec
popf
mov
cwtl
std
fisttpl
sbb
icebp
push
jne
push
rcl
mov
xor
test
xchg
icebp
mov
inc
mul
lock
sbb
xchg
rcr
ljmp
pop
cmp
inc
jnp
jbe
inc
in
sub
push
dec
mov
adc
push
xor
cmpsl
mul
inc
jmp
xor
push
into
inc
add
ret
sti
lea
fwait
shrb
sub
aaa
add
cltd
xor
or
cmp
mov
aam
dec
add
js
lahf
mov
or
sarl
rcrb
in
data16
cmpsl
xor
pushl
inc
jecxz
jecxz
test
or
dec
in
lcall
aam
lods
int
sbb
mov
outsb
imul
xchg
ljmp
cmp
imul
lea
pop
repz
enter
pop
ss
lahf
pop
jo
out
movsl
ret
sti
mov
cli
cmc
gs
inc
aaa
outsb
push
test
ja
mov
inc
push
pop
mov
fdivr
popa
cmp
pop
cmpb
pop
jne
mov
daa
xor
roll
scas
enter
rorb
loop
jecxz
aam
push
mov
mov
adc
fnstsw
cld
dec
hlt
pop
cli
les
or
sub
jae
enter
mov
dec
mov
and
push
cmc
adc
or
pop
add
aam
call
mov
mov
xchg
push
popa
sbb
pushf
mov
loopne
les
cwtl
aaa
mov
or
jg
jle
adc
pop
inc
out
mov
sti
cwtl
push
fsubrl
lods
push
pop
mov
mov
fists
pop
loope
ljmp
dec
xchg
jg
sbb
mov
filds
gs
out
cmp
idivl
xchg
xchg
pop
mov
dec
aad
inc
test
testl
dec
fdivrl
mov
mov
cli
movsl
sbb
pushf
daa
mov
push
sbb
incb
int
mov
mov
mov
sarl
mov
out
mov
inc
push
dec
sub
shr
jae
cmp
jns
inc
idivl
adc
fadd
push
xchg
cmp
sti
and
scas
ja
pop
cmpsl
mov
out
jno
xor
jo
sbb
pop
dec
sub
push
in
and
stc
pop
xor
rcll
sub
xchg
test
icebp
or
cli
into
push
mov
jg
mov
idiv
pop
lret
stc
xor
sub
lock
imul
and
das
cmc
dec
push
lahf
sbb
xchg
or
in
js
out
xchg
jnp
mov
sti
lods
pop
jle
clc
and
cmp
int
addr16
setge
int
mov
jg
clc
sahf
xchg
xlat
dec
jecxz
mov
dec
lret
inc
les
aad
in
jle
stc
inc
aad
push
icebp
mov
mov
sbb
pop
xchg
or
pop
fbstp
into
dec
lods
rorl
icebp
movsb
lcall
ret
out
xor
outsb
mov
movsb
xchg
pop
les
out
dec
mov
test
lock
xchg
mov
popf
dec
fwait
outsb
xchg
sub
les
ja
std
sub
add
mov
mul
mov
outsb
jp
shlb
adc
adc
jge
push
mov
test
and
fistpll
daa
leave
dec
xchg
fwait
jecxz
repnz
shll
negl
lret
mov
ffreep
jecxz
sub
and
push
xchg
pop
mull
out
push
jnp
stos
lods
add
je
jmp
stos
inc
adc
test
ret
jne
in
adc
outsl
loopne
lock
mov
rcrb
lret
mov
idivl
mov
pop
lea
add
pop
lods
xlat
jg
pop
call
call
clc
idiv
ljmp
das
and
out
lea
leave
pop
jp
pop
xor
negl
out
dec
testb
das
mov
imull
inc
call
or
push
jmp
sub
mov
inc
repnz
aas
stos
jg
imul
lcall
dec
add
ja
ficoms
jae
or
sarl
mov
sub
call
cmpl
orl
dec
or
xor
jg
std
ljmp
es
cmp
sub
test
adc
cmpsb
cmp
sbb
or
loope
cmpsl
ret
les
mov
lock
jns
or
push
lock
xor
inc
mov
arpl
or
rorl
jp
ficoml
mov
cmp
pop
fdiv
cmp
std
mov
adc
inc
outsl
jl
pop
lds
sub
and
lock
fldcw
pusha
nop
out
les
cmp
or
cwtl
movsb
mov
xchg
xor
adc
jne
jg
mov
push
test
popf
jo
stc
fistps
test
cmp
loope
mov
sub
add
mov
mov
jge
dec
iret
mov
jns
rcr
cmp
or
test
ret
lret
dec
mov
insl
mov
cmp
push
loop
dec
je
pop
js
dec
std
add
ret
mov
lret
and
mov
add
pop
sub
xchg
inc
decl
sub
movsb
icebp
push
idivb
xorl
inc
ja
inc
push
dec
or
cmp
or
movsl
dec
mov
stc
mov
jmp
sub
fidivrs
pop
std
out
cmp
sbb
fistps
mov
int3
jnp
cli
addr16
fisttps
addr16
mov
fsts
ljmp
fildl
ljmp
mov
or
ja
jns
mov
call
push
adc
mov
lods
iret
insl
pop
fstl
xchg
aas
test
imul
or
cmpsb
cmp
cld
idiv
and
and
lahf
push
pop
pop
mov
clc
arpl
sbb
adc
nop
push
jmp
pop
stos
jge
adc
stos
fisubl
pop
and
aas
and
inc
shl
sub
pop
mov
push
cmp
ret
clc
ja
add
popa
icebp
jnp
lahf
nop
je
push
sti
dec
lods
xlat
pushf
clc
aaa
lret
ret
adc
insl
shll
push
mov
or
std
inc
or
ss
jp
push
loop
cli
movsb
flds
mov
mov
pop
cmpsl
adc
cmp
fdivr
or
lcall
test
lahf
jle
stc
jecxz
sbb
popf
cmpsb
push
pop
in
and
stos
cli
jg
jmp
mov
sub
fildll
sub
add
jle
pop
imul
jecxz
or
pcmpgtw
icebp
jbe
aam
loope
sub
imul
ss
adc
mov
cmp
mov
call
push
jmp
outsb
adc
movsb
cmp
inc
cmc
sbb
incl
add
rcrl
mov
adc
lahf
inc
aaa
mov
jge
clc
in
cld
filds
stc
mov
imul
idivl
fiadds
call
cmpb
jmp
gs
sar
cmpsl
loopne
inc
clc
jae
inc
jl
mull
inc
lock
daa
iret
leave
pop
lds
jg
outsl
xor
cwtl
pop
jecxz
es
mov
cltd
imul
jg
cmpsb
sub
decl
testl
dec
mov
mov
stc
add
aam
sti
dec
out
dec
pop
inc
xchg
fstpl
test
sbb
repnz
xchg
in
imul
decb
test
setle
out
pop
movsl
jp
cmp
pop
lea
incb
inc
xchg
or
add
or
cmpsb
cmp
xchg
cmp
push
cmp
call
out
pop
mov
mov
aad
add
cmp
je
pop
cli
mov
test
mov
mov
lds
add
lea
xlat
ja
pop
int3
icebp
and
pop
loope
xchg
pop
sub
add
clc
leave
add
subb
xchg
lods
gs
add
mov
xchg
rorw
cwtl
sti
scas
xchg
jno
ss
sbb
jns
jb
jmp
mov
mov
hlt
loope
les
dec
inc
rol
aas
jmp
mov
daa
call
lods
enter
cld
iret
fdivrl
cltd
and
jo
mov
ja
ss
inc
call
das
repz
mov
loopne
jmp
adc
push
and
clc
jge
mov
pushl
in
addr16
bound
and
stc
sub
push
mov
cmp
jnp
sbb
scas
xchg
xchg
icebp
lahf
sti
mov
pop
sub
mov
or
loope
pop
and
out
pop
ljmp
aad
jge
mov
clc
outsl
xor
xchg
jne
adc
mov
cmp
dec
lcall
xchg
add
dec
lock
pop
test
push
test
out
pop
popf
jnp,pn
xchg
fdivrl
icebp
imul
push
inc
push
pop
or
jmp
jmp
rolb
sbb
cmp
andl
sbb
flds
mov
aas
outsl
fidivrl
inc
out
dec
cltd
pushl
daa
push
imul
orb
cmp
xchg
movsl
jb
mov
addr16
cld
xchg
sti
xor
je
testb
jbe
xlat
fwait
xor
pop
fdivr
xor
pop
or
sar
mov
jae
lods
sbb
aaa
xchg
test
dec
xor
std
scas
add
mov
lods
fs
adc
sti
out
sarb
push
adc
out
sbb
pop
push
mov
call
cmpl
outsb
push
test
sbb
movsb
sbb
jg
ljmp
xchg
cmp
rep
xchg
add
insb
rcl
enter
lock
das
cmpsb
mov
cmp
cmpsb
mov
inc
mov
lods
push
adcb
dec
xchg
cmp
aad
jo
lock
pop
insb
clc
pop
sbbl
jle
mov
decb
xor
push
xchg
mov
roll
pop
xor
movsl
xchg
aas
nop
jge
mov
sbb
adc
or
mov
pop
cs
mov
or
stc
dec
inc
mov
aas
sbb
pcmpgtd
call
loope
mov
mov
or
mov
cmpsl
xlat
add
push
inc
into
mov
cltd
mov
jmp
testl
ss
jecxz
fcos
fwait
and
stc
inc
sub
add
xlat
cmp
icebp
or
dec
out
loope
jno
cld
testl
adc
loopne
outsb
das
mov
loopne
data16
jne
sbb
gs
inc
xchg
dec
cli
sbb
mov
cs
jmp
popa
fcoml
lcall
mov
mov
mov
inc
out
fidivs
rcrb
loop
shrb
xchg
rcrb
fdivl
pop
add
mov
mov
mov
stos
jae
outsl
js
lcall
xchg
fisttps
in
sub
addr16
lahf
xorl
test
daa
adc
out
fcompl
mov
pop
add
jecxz
jg
inc
and
hlt
pop
push
js
lret
scas
test
pushl
lds
popf
jp
cmp
jecxz
jmp
cld
sub
out
pop
xchg
stos
ret
cmp
cwtl
push
aaa
lds
imul
cwtl
add
pop
insl
hlt
cmp
pop
sarl
test
mov
mov
sbb
mov
fstps
sbb
lahf
rcrl
and
mov
mov
out
jl
and
insl
loop
stos
bound
mov
mov
mov
inc
int3
sub
aas
insl
loopne
je
bound
mov
hlt
inc
cmpb
dec
mov
jg
add
push
clc
arpl
leave
add
push
jae
mov
shrl
mov
sub
mov
mov
mov
cmovnp
aam
dec
inc
or
cld
nop
inc
leave
in
fdivs
std
lds
loop
call
shl
inc
sub
push
xchg
in
sbb
cmpsb
cmp
std
xchg
das
pop
mov
gs
mov
lcall
cmp
scas
jmp
add
inc
loope
sub
int3
fnstenv
pop
xchg
fadds
adc
xchg
cli
jo
rorl
add
cmc
pop
jmp
jae
dec
mov
push
jne
pop
test
jns
lahf
sub
lock
mov
inc
mov
repz
adc
std
pop
test
inc
lock
adc
ja
cli
cmpsb
lods
cmp
mov
cmpsl
pushf
xchg
repnz
mov
mov
pop
loope
mov
rcrb
pusha
idiv
and
js
fsts
fmuls
sub
dec
jb
xor
addb
add
test
lahf
dec
call
test
loopne
imul
or
inc
sti
das
imulb
pop
jecxz
pop
dec
inc
rorb
jle
cli
push
sar
or
hlt
mov
lcall
and
xor
sbbl
repnz
xchg
dec
std
add
sub
int3
mov
mull
add
adcl
jne
outsb
xor
mov
lock
dec
fnstenv
sti
jg
adc
jge
mov
sub
push
gs
mov
rorb
bound
xchg
pop
fildl
push
inc
in
test
xlat
dec
rol
or
fwait
add
jo
arpl
ficoms
or
dec
fdivl
xchg
dec
cmpsl
idiv
pop
mov
push
cmp
cmp
xor
js
or
add
rcll
fdivr
pop
mov
lods
sbb
imul
imul
sbb
or
cmpsb
aaa
xor
jg
jae
aad
loopne
ja
in
pop
decl
mov
sti
dec
std
mov
xlat
les
mov
andl
cmp
push
cmpsb
jnp
mov
dec
scas
mov
lahf
push
lret
outsb
jo
aam
push
movsb
adc
mov
add
push
push
dec
push
mov
dec
inc
loope
mov
loopne
jg
mov
clc
xchg
fwait
movsb
mov
in
addr16
popa
fldcw
pop
adc
cmp
push
mov
mov
pushl
sub
fistpll
ds
sbb
lea
lahf
add
and
push
inc
jae
ret
push
push
inc
iret
dec
mov
es
dec
mov
mov
adc
pushf
xchg
rorl
adc
and
shlb
or
incl
xchg
mov
pop
mov
pop
inc
test
sub
push
adc
push
pop
jmp
rolb
pop
mov
sbb
dec
push
jle
fisubl
ljmp
ror
fwait
dec
xor
das
rclb
ljmp
ja
sbb
std
addr16
or
add
in
adc
in
cld
xchg
cli
jne
inc
das
lcall
insb
data16
xchg
dec
lds
call
insl
inc
jp
jnp
mov
jns
imul
test
lret
test
imul
faddp
inc
into
cmc
pop
or
and
mov
decl
mov
mov
insl
pop
sub
or
or
ffreep
lods
stos
mov
ja
outsb
mov
cmp
clc
ja
xchg
adc
repz
insl
js
daa
aam
pop
jne
js
jmp
jbe
add
icebp
aas
pushf
test
cmpsl
insb
xchg
xchg
dec
mov
xchg
daa
pushw
pushf
mov
jne
jl
mov
mov
aam
andb
std
mov
adc
mov
leave
popa
iret
push
adc
add
std
aas
pop
ds
lret
icebp
imul
mov
xchg
xchg
insb
jo
aas
ljmp
js
inc
fcmovbe
adc
cmp
clc
out
mov
lds
cmpl
pop
out
mov
aas
and
push
aam
xor
jmp
lods
mov
or
or
fs
ss
xor
sbb
fsubl
mov
jg
hlt
jmp
inc
aas
or
fnstcw
jle
aas
push
hlt
imull
mov
ja
pop
xlat
xor
nop
aad
in
mov
mov
imul
call
out
faddl
add
repnz
or
mull
jbe
outsb
jecxz,pt
jmp
iret
sar
js
inc
pop
push
test
sar
jnp
nop
pop
out
sbb
int
push
jb
push
negb
push
popl
inc
jle
clc
lahf
movsb
mov
push
bound
jl
cltd
push
xchg
std
inc
cmp
jmp
pop
pusha
add
mov
dec
add
test
ljmp
jne
mov
xchg
cmpsb
movsl
sub
sub
push
inc
std
jmp
rcl
dec
jno
xchg
dec
ljmp
nop
and
imul
jp
aas
sub
mov
hlt
jmp
repnz
das
jle
adc
dec
enter
or
sbb
movsb
lcall
test
pop
ret
iret
fmuls
icebp
lock
out
push
and
rep
dec
insb
int3
sub
xor
cli
fldl
out
imul
adc
fidivrs
repnz
shll
mov
jg
mov
jl
pop
sbb
jge
jp
sti
ja
dec
ret
arpl
mov
decb
roll
xchg
test
adcl
mov
adc
imul
xchg
jl
and
icebp
jp
enter
pop
popf
jae
mov
test
outsb
sar
loope
daa
rorb
or
clc
fwait
scas
inc
inc
orl
jp
jmp
rolb
push
lahf
insb
cmpl
call
pushf
ljmp
pop
lret
lret
and
push
push
addr16
jg
push
lahf
push
pop
pusha
jo
ret
shl
lcall
incl
or
fs
dec
es
lahf
add
ja
loopne
sbb
call
cmc
mov
jb
das
xchg
mov
fabs
rcrl
loope
jg
xchg
lcall
sahf
jp
lods
adc
pop
sub
out
push
mov
stos
cli
and
xor
mov
adc
adc
aam
dec
fmuls
ljmp
aas
xchg
push
push
clc
sahf
fwait
out
xchg
mov
ret
inc
inc
push
mov
cmp
mov
fstps
into
sub
jae
rcr
or
pop
addr16
add
nopl
push
pop
jge
lock
adc
push
cli
dec
push
les
add
mov
pushl
jbe
or
add
xor
lahf
std
add
sti
push
or
aad
sbb
int
sbb
jne
outsl
ja
dec
fs
jmp
in
incl
cmp
mov
movsl
fcmovnbe
scas
push
lahf
push
lock
lods
aaa
aam
decl
std
movb
arpl
mov
stc
lahf
sarl
jmp
nop
push
mov
fucomi
es
xchg
inc
or
mov
inc
paddq
xchg
xchg
rcrb
pop
clc
sarl
xchg
unpcklps
inc
sub
add
add
stc
adc
jb
popf
mov
mov
std
jmp
pop
cs
adc
loopne
imul
andb
inc
add
fsubrl
cmpsb
push
pop
loopne
mov
scas
push
lds
sbb
mov
push
sbb
sub
mov
arpl
ja
mov
sbb
outsb
jl
es
movsl
insl
pushl
pop
daa
mov
sub
dec
push
mov
dec
loop
aad
ja
pop
cmp
or
daa
jns
inc
push
add
clc
and
popa
stos
pop
je
inc
cmp
les
adc
test
jne
jg
pop
pop
inc
js
jg
jmp
xchg
cld
pop
push
ljmp
inc
movsl
xchg
or
or
enter
js
loope
ret
ja
mov
stos
aaa
test
ja
fistl
dec
mov
pop
add
pop
das
dec
hlt
stos
xchg
or
test
pop
push
cli
jae
movsl
lock
mov
mov
mov
jecxz
xchg
jne
test
mov
sahf
fwait
sub
pop
movsb
jmp
outsb
mov
lea
pushf
mov
dec
push
sbb
scas
push
mov
mov
leave
mov
push
xor
sub
jnp
jnp
mov
mov
roll
mov
and
rcrl
ja
addr16
push
add
adc
jg
push
xchg
sbb
cmp
insb
mov
mov
mov
lahf
das
fcoml
mov
and
nop
mov
cld
cmc
pop
ldmxcsr
stos
out
push
popf
std
imul
jmp
sub
arpl
roll
stos
ret
jmp
adc
imul
outsb
push
push
hlt
xor
aas
inc
gs
mov
cld
push
or
insb
sti
mov
pop
ljmp
adc
inc
call
xor
sbb
aad
call
or
xchg
lret
cmp
ljmp
jecxz
mov
in
jge
cmp
fwait
adc
icebp
mov
loopne
push
call
cmp
and
jg
adc
sti
lret
push
dec
adc
cmc
mov
test
rorl
ret
lds
out
daa
mov
sbb
daa
inc
or
dec
cwtl
loopne
and
aaa
or
aam
xchg
or
sti
and
jle
cli
aas
cmc
out
dec
or
icebp
movsb
nop
lds
cld
into
jge
dec
xchg
xor
push
mov
and
lcall
mov
add
imul
mov
push
stc
pop
adc
push
data16
add
decl
clc
iret
and
sbb
xlat
mov
ss
bnd
dec
xor
hlt
lahf
stos
aas
inc
dec
xchg
inc
push
ja
aam
xchg
aas
negb
or
cmpsb
mov
inc
mov
or
scas
sti
mov
stos
outsl
cmp
push
gs
fistpll
xchg
ficomps
mov
xor
insb
pop
idiv
idiv
ret
pop
jecxz
lock
rcrl
mov
fcmovne
add
adc
mov
sbb
cmp
clc
adc
in
insb
mov
mov
pop
fsubrs
xchg
std
cli
ja
lahf
mov
or
push
test
out
fldt
mov
hlt
xor
mov
faddl
loop
in
out
pop
ss
or
cmp
aad
test
mov
cmp
aam
mov
scas
or
cmp
xchg
ret
and
aam
lods
lds
lock
dec
jo
pop
test
or
incl
stc
call
sbb
loop
idivl
jmp
cmp
ret
cwtl
pop
or
mov
fidivrs
inc
pop
mov
mov
rorl
inc
addl
add
cmp
mov
ljmp
or
or
clc
mov
or
insl
mov
daa
lock
add
add
and
push
jns
enter
mov
pop
push
sarb
arpl
mull
push
inc
add
dec
fcompp
inc
ljmp
pop
xchg
sub
loopne
aam
push
xor
push
stos
xlat
stos
data16
aas
push
decl
jle
stos
cltd
je
fisttpl
lret
xor
cld
cmp
lcall
xchg
adc
xlat
dec
jmp
repnz
movsl
dec
lahf
jmp
mov
aam
insb
sub
and
or
popl
out
gs
pop
rolb
popf
sbb
sti
xchg
or
insb
cld
push
incb
out
cld
pop
dec
out
or
lods
push
mov
dec
xor
dec
aam
xchg
xor
lds
inc
sbb
xor
adc
cmp
test
cmp
adc
hlt
pop
inc
adc
in
cli
inc
les
jb
or
add
jg
sub
push
into
xchg
xor
jg
xchg
insb
bound
loop
push
stos
inc
sbb
inc
adc
lock
out
pop
rol
movsb
popf
lahf
fimuls
arpl
imulb
or
mov
rorb
sub
iret
clc
aas
jmp
add
or
lods
out
out
fisubl
dec
mov
or
js
push
pop
out
mov
inc
std
pop
leave
clc
jmp
mov
lahf
jno
adc
cli
sbb
mov
adc
loope
ds
roll
push
ljmp
test
mov
xor
je
aad
aas
loopne
dec
popf
es
arpl
pop
aaa
sbb
cmc
out
adc
rcrb
shlb
sahf
and
clc
inc
mov
cmp
pop
stos
ret
pushl
fldcw
sbb
push
mov
mov
aaa
movsl
sti
sub
inc
adc
mov
shll
xchg
in
enter
loope
ret
loope
adc
psraw
decb
subl
sbb
cmp
cld
inc
mov
stos
cmp
mov
pop
push
aas
mov
push
jae
jnp
loopne
cmc
push
pop
push
hlt
xchg
sbb
lock
and
cmp
daa
sbb
add
sarb
sahf
iret
icebp
pop
sbb
cmp
pop
jg
out
push
das
push
divl
mov
fnstsw
jmp
adc
in
lret
shrl
imul
mov
aas
mov
mov
inc
int
sbb
push
in
inc
sub
lds
cltd
xor
es
pushl
loop
sbb
lea
popf
sti
ds
pop
mov
xor
cltd
add
notb
pushf
jle
pop
mov
les
sub
mov
fdivp
daa
xchg
cltd
dec
pop
xchg
sti
fisttpll
cmpsb
dec
ja
mov
sub
pop
sub
dec
push
fisubs
fnstcw
enter
es
pop
test
xorb
jg
xor
scas
arpl
test
add
jnp
insb
inc
adcb
test
jnp
or
insb
in
iret
mov
dec
and
mov
inc
sti
or
mov
mov
mov
addr16
push
movb
cmp
add
mov
arpl
sub
ret
jmp
clc
sbb
cmp
and
push
adc
es
arpl
jo
notb
fstl
scas
clc
adc
fistps
adc
andl
cld
push
ljmp
js
loop
add
push
js
pop
dec
inc
mov
outsl
xor
pop
int
jmp
xchg
inc
insl
jp
adc
sbb
iret
lds
cmp
fnstsw
pusha
in
shr
add
idivl
test
es
out
fldt
push
push
jp
hlt
pop
shll
push
movsl
jp
mov
push
mov
inc
mov
jecxz
jbe
mov
stc
sbb
test
call
fistps
mov
test
push
stos
mov
add
lcall
push
push
into
sbb
sbb
aas
and
ret
std
cltd
dec
sahf
daa
xchg
imul
cltd
iret
adc
cmp
xor
faddl
imul
pop
jne
jl
dec
pushf
sub
std
or
repnz
pop
mov
mov
arpl
or
jecxz
pop
mov
fstpt
call
les
sub
add
mov
pop
icebp
test
ret
cmpb
jge
outsl
loopne
std
add
push
push
and
sbb
jne
mov
dec
dec
push
dec
dec
dec
sti
outsb
push
ljmp
jl
xor
and
push
push
pop
mov
aam
dec
cmp
jge
push
and
cmp
jge
dec
mov
imul
lcall
lret
push
cmp
jnp
cld
jecxz
add
pop
ja
bound
dec
faddl
inc
cmp
push
sub
incl
or
mov
arpl
bsr
pop
icebp
pop
movsb
jle
cld
js
dec
mov
ret
test
adc
out
push
add
dec
sbb
mov
testl
stos
fdivrl
cmc
jecxz
nop/reserved
sbb
gs
dec
xlat
pusha
sbb
incb
cmp
std
and
jg
adc
ret
mov
pop
and
push
pop
jbe
and
imul
incl
mov
add
in
inc
sbb
aas
mov
cmpsb
imul
cmp
inc
fbld
push
lds
adc
gs
mov
add
int3
mov
testl
mov
ret
loope
in
cli
aad
xchg
jmp
and
incb
lods
xchg
sub
data16
jbe
fnstcw
je
adc
or
or
clc
arpl
mov
dec
iret
stc
inc
push
mov
add
es
adc
lahf
push
inc
lods
adc
fsubrs
push
test
pushf
test
adc
dec
add
jae
xchg
add
cmp
and
push
mov
push
jl
sti
movsb
pop
mov
call
rorb
lcall
pop
sub
fsubrp
clc
pusha
mov
rcll
enter
shlb
in
in
pop
sbb
pop
xchg
ds
add
mov
lret
mov
lahf
call
or
lret
call
and
jbe
mov
jmp
lock
fstpl
sbb
in
inc
dec
scas
call
mov
adc
xor
fistpll
and
nop
add
and
scas
mov
and
mov
or
dec
loop
xchg
gs
adc
aaa
popa
shr
push
or
sub
xor
inc
ljmp
xchg
xor
pop
push
in
fisttps
sti
nop
gs
mov
cs
sub
jp
push
cmc
mov
pop
inc
mov
mov
fisttps
mov
adc
and
pop
lods
pusha
sbb
loope
lock
leave
lods
dec
cmpl
es
es
call
push
mov
les
cs
adc
cmpsl
loopne
in
fs
lcall
fdivrl
cmp
pop
push
pop
sub
or
mov
fcoms
or
and
jmp
lock
dec
std
cmpb
inc
adc
aas
dec
in
test
pop
xchg
adc
pop
fdiv
fisubrs
in
loopne
mull
pop
outsl
lock
jmp
fimuls
shrb
push
cmp
cwtl
iret
xlat
push
sub
ss
pop
push
lock
pop
movsl
or
push
sarb
testl
ret
call
adc
loopne
ljmp
decl
stos
daa
shlb
adc
add
dec
adc
shrl
es
xor
push
loop
xlat
xchg
adc
cld
sti
jae
sbb
flds
jb
inc
call
js
push
pop
and
cwtl
mov
adc
aad
xor
les
enter
insl
shlb
sub
gs
cmp
out
xor
lea
and
pushw
cmpsl
idivl
bnd
mov
lahf
adc
sub
stos
add
fldcw
pop
pop
lock
cmp
mov
dec
std
scas
das
add
loop
shl
dec
lock
inc
fisttps
out
push
cld
out
cmp
aas
inc
xor
jnp
shll
mov
in
setl
jp
mov
das
cmc
jecxz
adc
push
jb
cmp
pop
push
cmp
jbe
push
xor
xchg
or
pop
leave
pop
icebp
lahf
sti
xchg
pusha
xorb
mov
push
sub
mov
outsb
pop
fisubs
xor
adc
iret
and
fistpl
mov
add
dec
lret
push
sbb
fnstenv
setae
jnp
mov
xchg
aad
out
std
pop
add
sbbl
inc
sub
or
repnz
and
ja
aas
jb
dec
pop
or
shrl
sub
es
lea
mov
xchg
cmp
aas
negl
inc
jns
cmp
fcoml
mov
push
mov
mov
enter
push
lahf
test
ret
aas
cmp
cmpsb
iret
or
mov
cmpl
mov
cmp
or
mov
enter
jg
addl
les
inc
addb
or
sub
out
inc
fucomi
add
dec
pusha
xor
jl
mov
andl
stos
clc
sbb
cmp
mov
xor
adc
test
xchg
mov
mov
inc
mov
gs
call
or
cli
and
cmpsl
hlt
cli
mov
subb
fisubrs
roll
movsb
mov
mov
int
lds
hlt
pop
jg
stos
mov
mov
mov
fmuls
aas
cmp
lods
clc
push
outsl
lds
jnp
popf
dec
or
sub
xchg
movl
push
cmp
inc
adc
adc
sarl
jmp
je
xchg
mov
mov
jnp
mov
stos
subb
mov
cmc
jbe
mov
or
push
xchg
or
sub
std
adc
daa
xor
cmp
add
imul
cmp
adc
inc
jge
sub
mov
xchg
imul
push
std
pusha
mov
pop
inc
sbb
scas
jg
inc
pushf
jno
std
mov
pop
add
mov
mov
test
cmpsl
push
sub
les
rorl
cmpsb
pop
pop
incb
xor
decl
jp
ret
xchg
sbb
pop
jp
mov
jb
pop
cwtl
mov
mov
xchg
jae
adc
dec
lea
cmp
add
and
js
cmpsb
and
mov
bound
test
push
jno
gs
pop
sub
daa
push
lock
mov
fldt
les
das
jge
xlat
fmull
sbb
fisttpl
sbb
inc
mov
pop
adc
rol
push
mov
xor
clc
clc
aad
inc
add
icebp
inc
xor
sub
pop
xlat
add
mov
mov
sub
ss
or
iret
push
ljmp
dec
inc
rcr
adc
dec
push
sub
xchg
add
and
push
push
filds
xchg
call
jns
push
cmp
pop
xlat
aam
push
ret
add
mov
aas
punpckhbw
push
add
cwtl
aaa
or
popa
pop
xchg
or
jb
icebp
cli
cld
dec
hlt
xchg
sub
add
cmpsb
inc
call
sbb
mov
pop
adc
adc
adc
sub
mov
addb
xor
cmp
add
mov
sbb
push
test
cld
pop
inc
int
das
dec
xor
loop
or
pop
adc
outsb
fwait
and
lea
jae
push
add
aas
mov
mov
inc
add
adc
and
lcall
sub
pop
ljmp
jae
addr16
enter
add
cmp
movsl
sbb
dec
adc
sub
pop
inc
addb
fcmovu
add
stos
xor
fs
sub
xchg
cmp
test
push
pusha
or
dec
adc
icebp
ss
mulb
add
mov
xor
inc
fcompl
out
push
mov
mov
adc
xor
mov
int3
jns
mov
or
push
jae
es
inc
imul
cmp
pop
mov
cmc
je
adc
push
cli
pop
xor
inc
cmovne
out
push
xchg
mov
xchg
mov
sub
ljmp
add
inc
lcall
or
push
orb
push
sbb
push
push
mov
mov
lods
push
cmpsl
jae
sbb
stc
outsl
fnstenv
lret
mov
fnstenv
fs
enter
out
scas
xchg
mov
adc
cmpsl
push
xchg
insb
xchg
add
int
lcall
arpl
enter
jmp
adc
sbb
orb
pushf
xor
adc
add
test
and
mov
sbb
mov
cmp
xlat
into
inc
jbe
fildl
notl
xchg
into
adc
pop
cmpsb
and
sbb
adc
lret
or
ljmp
mov
lcall
inc
imul
and
xchg
adc
add
subb
pop
mov
add
xchg
push
xor
mov
bound
das
jmp
aam
mov
xor
xor
mov
filds
or
clc
and
push
aam
hlt
push
loopne
add
xor
jns
mov
push
xor
or
cmpsb
lds
add
push
jmp
dec
mov
push
sub
sahf
sbb
pop
inc
cmp
and
adc
mov
mov
cmpsb
xor
sbb
push
xor
push
movl
pop
notb
push
xlat
xchg
dec
push
insb
mov
lcall
pop
loop
or
push
xchg
rclb
sbbl
mov
add
add
or
jecxz
inc
adc
inc
push
jb
lret
xor
and
inc
add
mov
add
jns
cmp
mov
aas
mov
xchg
pop
mov
loopne
xor
xor
push
popf
sbb
mov
inc
adc
test
ljmp
dec
out
imulb
mov
ljmp
dec
jne
add
mov
imul
sbb
pop
xor
shlb
out
gs
ja
xor
cmp
add
test
lods
xchg
pop
rcll
mov
xor
inc
and
xor
out
or
cmp
or
jg
and
das
shrl
subb
sbb
inc
jnp
inc
fs
bound
adc
cmp
in
in
enter
mov
or
lcall
hlt
loop
sbb
sbb
jo
pop
and
sysenter
cmp
sbb
add
jb
or
sub
mov
cltd
mov
or
inc
xchg
imulb
dec
popf
fistpl
jecxz
cwtl
push
cmpb
mov
es
stos
ret
mov
dec
lahf
aam
and
push
push
loop
sub
mov
jne
jle
and
sub
rcll
loope
push
jnp
jo
ja
cmp
inc
shlb
lods
mov
pop
ror
scas
dec
pushf
mov
xchg
int3
push
aad
cmc
add
jmp
mov
add
rcl
jle
pop
aad
lcall
lcall
push
test
xchg
imul
idivb
adc
xchg
xor
jne
jno
rcrb
jmp
push
xchg
push
pop
mov
jle
lcall
mov
cld
xor
inc
retw
fisubs
andl
sub
rorl
xor
ss
popa
loopne
push
faddl
loope
cmpsl
mov
imul
jae
add
mov
not
adc
cmp
mov
inc
rclb
and
jo
push
stos
repz
in
push
imulb
sbb
and
mov
aam
ljmp
jne
mov
pop
mov
xchg
mov
push
xor
xchg
jl
cmpsb
out
in
mov
lcall
mov
stos
sarb
lock
or
xor
dec
add
int3
leave
mov
fdivrp
adc
pop
mov
aam
enter
mov
push
mov
fxch
shrb
clc
into
push
rorl
dec
pop
xor
push
adc
cmp
jge
pop
xchg
test
out
loope
loopne
push
negb
scas
and
mov
int
rorl
rorb
pusha
xor
stos
cmp
xchg
xchg
sub
gs
fsubrl
daa
addr16
sbb
scas
mov
mov
insl
loop
arpl
mov
mov
out
rolb
mov
gs
sub
sub
outsb
movsl
pop
sbb
mov
cmpsl
pop
mov
sbbl
lods
fwait
jnp
inc
add
jae
add
push
ds
xchg
sahf
int
inc
imul
pop
xchg
dec
xor
decl
mov
dec
cmpsb
cmpb
push
mov
movsl
jb
lea
push
inc
cs
or
adc
push
mov
ret
ljmp
cmp
push
jo
mov
pop
int
sbb
bound
sbb
sub
xchg
mov
pop
inc
push
xor
out
push
dec
sbb
andl
int
jae
cmc
lea
cmp
cmpsb
sub
xchg
ss
loope
and
or
aam
pop
insb
adc
ret
mov
add
rcrb
pop
test
test
mov
test
in
sub
pushf
inc
jg
jmp
sbb
imul
mov
es
popf
shlb
out
adc
push
push
aas
and
stos
jb
adc
add
daa
or
dec
and
rclb
mov
cld
add
enter
ja
ud2
cs
inc
addr16
and
adc
push
int
sub
cmp
das
adcb
or
push
pop
out
pop
adc
push
lcall
adc
dec
fistpll
xlat
in
popf
js
rolb
xor
xchg
adc
push
xor
or
mov
sub
cltd
inc
and
jne
pop
xlat
sbb
lcall
adc
xchg
mov
adc
adcl
push
mov
jmp
enter
adc
mov
add
push
mov
cmp
adc
popa
out
enter
andl
and
es
or
pop
rclb
out
adc
xlat
adc
sarb
mov
mov
cmp
rclb
pushf
jg
push
mov
cmp
inc
pop
pop
push
pop
xchg
xchg
sarl
mov
and
lahf
adc
jae
sahf
adc
out
cltd
fildll
mov
add
add
inc
add
dec
out
jle
xchg
xor
lock
into
repnz
dec
leave
in
mov
xchg
in
mov
xor
movsl
in
rcrl
sbbb
xor
xchg
js
mov
xorl
subl
pop
rolb
gs
push
xchg
lock
pusha
outsb
adc
jecxz
and
xchg
dec
out
pop
inc
jnp
popa
test
js
sbb
add
idivb
xchg
imul
addb
cltd
jb
xchg
call
mov
mov
xor
and
out
or
in
lock
lret
mov
decl
mov
mov
rolb
cmp
lods
jno
sub
push
repz
movsl
pop
push
push
sbb
out
xor
int3
mov
push
call
add
out
cltd
sub
push
push
cmpsb
mov
dec
xorb
push
xchg
shl
cmp
xchg
push
mov
in
mov
adc
cwtl
adc
ljmp
xchg
in
dec
scas
xchg
pushf
add
jmp
mov
jl
enter
jecxz
roll
dec
aam
daa
lcall
aam
lret
lea
or
sahf
enter
lret
ror
and
xor
push
adc
lods
mov
and
mov
mov
pop
aaa
mov
mov
shrb
ret
pop
push
xchg
fisubrl
popf
loope
sbb
push
jo
and
adc
mov
js
test
push
mov
jle
xor
mov
xchg
add
xchg
inc
cmp
lea
out
and
aam
ret
test
mov
stos
mull
adc
sti
sbb
cmp
push
pop
daa
call
jns
push
scas
out
sub
insl
lds
sub
pop
mov
stos
arpl
inc
mov
push
push
je
xor
add
inc
push
rolb
mov
andb
js
inc
rcll
mov
aad
adc
pop
loopne
sahf
rorl
pop
sub
sbb
pop
sub
ret
mov
sbbb
mov
push
inc
fildl
mov
add
mov
jnp
std
daa
adc
ret
mov
mov
sahf
stc
out
jns
or
pushf
inc
dec
and
dec
mov
addb
push
push
jge
pushw
push
and
add
xor
or
push
cld
inc
mov
dec
int3
dec
pop
jp
cmp
ret
pop
push
rorb
cmp
andl
push
rcrb
xchg
jb
popa
mov
jmp
mov
pop
sbb
inc
jmp
es
rcrl
xchg
inc
mov
imul
cmp
out
add
sbb
jecxz
push
arpl
mov
jbe
cmp
add
test
cmp
sub
add
pop
sub
jb
dec
cltd
lcall
in
adc
sbb
push
cmpsb
or
mov
addl
push
sub
lret
inc
rorl
and
orl
rorl
gs
sub
out
lret
ret
rclb
mov
inc
pusha
mov
mov
xor
pop
push
sbb
shlb
js
pusha
jb
push
cs
shlb
cmpb
fimull
shl
dec
xchg
sub
roll
sub
test
mov
ror
lcall
mov
lret
mov
xor
lret
es
sbb
test
adc
stc
mov
adc
int3
jle
insl
cmpsb
out
or
idiv
lret
cmc
xor
add
adc
cwtl
sbb
inc
inc
and
add
fs
nop
or
add
mov
xchg
data16
adc
xchg
mov
fwait
xor
or
mov
push
into
inc
inc
clc
jecxz
mov
xor
cltd
dec
sbb
push
insl
mov
push
or
sbb
or
cmp
ss
lahf
and
bound
test
pop
cs
gs
xor
or
andl
add
sub
aam
hlt
cmp
js
fadds
fiadds
mov
xor
sbb
inc
push
mov
push
push
fists
sub
mov
arpl
lods
and
xchg
test
and
cmp
xchg
loopne
sub
add
fisttps
or
pop
sub
mov
add
xchg
sub
mov
popa
adcb
adc
dec
pop
ret
std
pop
add
jl
push
xchg
add
sub
sbb
and
rcl
pop
jle
outsb
inc
cli
sub
fcoml
xor
lea
insl
cmpsl
push
ret
mov
xor
popa
and
in
add
cmp
rorb
push
mov
add
or
das
mov
aam
lcall
icebp
movsb
add
in
pop
add
add
push
add
or
into
addr16
push
cmp
push
mov
push
cmpsb
test
enter
out
jo
jb
pop
sub
lret
test
xlat
dec
nop
loope
andl
imul
mov
cmp
mov
adc
mov
jo
push
push
xchg
leave
inc
mov
fidivrs
inc
hlt
xchg
cmpb
mov
pop
in
icebp
xor
inc
adc
add
adc
or
and
pushf
aam
pusha
jp
inc
xor
lock
cmp
xchg
int
outsb
push
leave
mov
jo
cmp
dec
cli
std
gs
stos
or
fisubs
adc
out
push
mov
rolb
test
sbb
cmp
adc
ds
cs
loope
xor
mov
jo
pusha
jnp
inc
jae
orl
jnp
add
push
xchg
push
test
mov
stc
sbb
or
orl
push
push
xlat
xchg
jmp
mov
jae
in
cmp
adc
pop
insb
aad
popf
jae
cmp
cmp
jo
add
xlat
orl
xor
shl
rclb
xchg
sbb
clc
loopne
ret
js
cmp
dec
add
arpl
adc
xor
add
imul
insl
stos
adc
ds
or
subl
ja
add
inc
sub
mov
dec
fmuls
inc
xchg
dec
xchg
and
cmp
test
int3
cmp
lret
iret
mov
cli
mov
mov
dec
adc
add
cmp
enter
push
cs
push
push
or
mov
rorl
cmpsl
sub
adc
mov
adc
sub
dec
insl
mov
out
inc
es
cld
lods
sbb
nop
mov
fidivl
push
and
adc
pushl
push
ss
mov
add
mov
mov
cmp
mov
sbb
xor
add
lock
sbb
pop
push
leave
cltd
test
lahf
adc
or
lret
mov
sub
mov
sbb
lock
imul
xor
add
mov
sbb
adc
push
xchg
jmp
mov
adc
in
push
loopne
adc
xor
test
adc
icebp
mov
lock
sub
cmpsl
or
mov
cmp
push
ljmp
cmp
ret
into
dec
ss
pop
lods
bnd
add
xor
add
mov
cmp
dec
loope
je
cmp
xchg
and
or
jo
xchg
mov
in
xor
push
pop
mov
inc
xchg
push
push
adc
add
lea
mov
jmp
insl
imul
sbb
cmpl
push
aas
and
hlt
mov
lea
das
sbb
notl
jae
nop
mov
into
in
sub
xchg
or
mov
cltd
dec
and
xlat
pop
outsl
js
hlt
aad
rorl
cmp
js
xor
mov
push
int
popf
scas
inc
scas
mov
add
add
pop
push
sub
mov
lods
xor
dec
or
movsl
rcrl
adc
cmp
inc
cmp
lock
xchg
xchg
inc
and
mov
out
inc
push
push
add
inc
in
adc
loopne
andl
out
scas
sbb
dec
mov
or
js
rcrb
dec
add
inc
leave
add
jo
sti
pop
mov
pop
popf
in
xor
adc
or
mov
loope
rorb
adc
adc
inc
inc
add
or
push
adc
int
ret
lret
mov
or
jbe
subb
aam
xchg
xor
jo
jo
push
add
or
add
lcall
mul
mov
lcall
loope
mov
movsb
sub
add
outsl
scas
add
sub
jbe
or
add
push
adc
push
jmp
and
mov
jmp
decb
shl
scas
popa
sbb
fisttps
adc
lock
push
int
popf
cmp
mov
xor
pop
add
test
outsl
int
out
rclb
clc
fiaddl
movl
rorb
mov
push
lock
out
sbb
pop
in
les
push
je
ror
rcrb
pop
gs
jno
sbb
pop
push
fistpll
adc
and
adc
sbb
dec
jle
pop
pop
mov
dec
jo
hlt
mov
rcrb
adc
mov
add
aas
xor
or
cmp
sbb
xor
dec
into
push
ja
jae
add
add
dec
cmp
aam
test
push
inc
mov
push
xor
mov
mov
inc
cmpsl
adc
lock
shl
jp
sub
xchg
sub
dec
xchg
cmp
inc
in
test
adc
outsb
xchg
mov
pop
dec
test
jb
xor
cmpsl
stos
cmp
stos
mov
add
iret
fisttpll
pop
xor
hlt
jge
pop
cmp
mov
and
shl
sub
xor
xor
rcrl
mov
xor
mov
addb
stos
sbb
mov
sbb
push
add
push
into
popa
call
xchg
pop
or
pop
sub
dec
andps
bound
or
fs
loop
sahf
jg
mov
add
and
mov
jne
cmp
inc
jae
sbb
add
inc
or
aad
jb
or
or
jl
cmpsb
pop
in
shr
inc
jno
into
jb
inc
inc
xor
and
stc
js
mulb
inc
cmp
inc
scas
push
push
xor
and
push
rorb
test
cmp
ror
adc
xor
jle
sbb
in
pop
arpl
in
inc
sub
cld
adc
and
cmc
fistpll
aam
xchg
mov
call
mov
xor
xor
xchg
stos
sbb
mov
int
dec
adc
mov
push
in
es
and
mov
sbb
cmp
push
add
enter
into
add
adc
pusha
mov
das
cmp
inc
cmp
adc
jne
push
decl
rorl
fsubl
push
inc
push
icebp
ret
out
and
mov
mov
mov
or
into
mov
das
test
add
nop
push
mov
daa
and
mov
in
es
adc
shrb
and
into
ja
andl
dec
mov
jnp
and
pop
adc
xor
scas
inc
and
push
dec
test
mov
outsb
push
push
sub
adc
inc
test
xorl
dec
cmp
dec
lods
xchg
push
inc
push
or
lcall
stos
je
sub
mov
cmp
cmp
adc
push
sub
jbe
in
mov
xor
gs
icebp
rolb
aad
push
dec
cltd
jb
fisubrl
push
cwtl
orb
fwait
xlat
cmc
test
xchg
or
sbb
add
jbe
pop
push
mov
push
or
bound
xchg
fnstsw
pusha
xor
mov
push
test
xchg
xchg
pusha
adc
sahf
inc
inc
into
push
xchg
aad
fnstenv
sub
push
roll
mov
ret
jp
push
xchg
jae
sbb
mov
movsl
push
or
shl
in
pop
jae
insb
mov
sub
sti
orb
cmpsb
dec
addr16
leave
subb
mov
sub
mov
ficoml
xor
or
adc
xchg
jmp
scas
cmpsb
jbe
clc
jb
ja
or
xchg
xchg
scas
sbb
xor
lcall
mov
push
and
add
push
mov
test
ja
sbb
fs
roll
retw
pop
adc
and
sbb
out
stos
mov
push
lods
sub
lcall
bound
ljmp
test
or
xchg
sbb
add
loopne
enter
push
sub
jp
add
stos
mov
cmp
mov
xor
sub
pop
mov
xor
jo
adc
std
dec
sets
xor
insb
nop
push
sub
jge,pn
sub
aas
call
mov
adc
fsubl
test
fstps
lahf
pop
mov
push
pusha
vpcmpeqb
int
adc
sub
les
sbb
in
shl
push
push
insb
xor
sbb
mov
call
in
pop
and
gs
fimuls
cs
sbb
rorb
jb
or
push
leave
inc
or
sbb
push
and
inc
loopne
add
jb
cmp
push
sbb
aam
test
pushf
or
hlt
sbb
jle
sub
jb
push
loope
adc
pop
cwtl
rorb
faddl
pop
xchg
pusha
mov
mov
adc
add
dec
loopne
daa
mov
daa
adcb
dec
push
pushf
jbe
push
jae
cmp
andb
cmp
cwtl
mov
add
hlt
adc
sbb
pop
mov
adc
test
divb
add
sbb
cs
mov
jmp
xchg
pop
mov
adc
mov
out
cmpsb
jle
and
cmpsb
push
cmp
and
mov
fimuls
xor
pop
imulb
test
mov
enter
loope
jo
cmpsl
cmp
xchg
sbb
loope
sub
push
loop
cmc
cwtl
test
mov
loop
mov
jo
shlb
sbb
ret
sti
cmp
push
cltd
xor
sbb
loope
add
xchg
dec
mov
inc
shlb
into
push
cmp
push
loop
xor
inc
pop
mov
adc
js,pn
xor
mov
and
xchg
cmp
pop
jae
inc
and
mov
push
inc
mov
popa
enter
inc
inc
pop
inc
xor
aad
leave
xor
dec
vmwrite
push
das
or
mov
mov
inc
popa
jo
mov
loope
xchg
ret
leave
pop
sbb
lret
and
rolb
aam
and
lea
test
daa
sbb
stos
sbb
into
jge
mov
push
cwtl
mov
jmp
mov
push
push
hlt
ret
test
push
icebp
lcall
add
jg
mov
sbb
sub
mov
fisttps
shrl
or
fldcw
in
outsb
fwait
cmp
inc
test
push
adc
cmpsb
lcall
mov
push
lea
adc
pop
aam
mov
push
xor
pop
inc
push
pop
jae
push
cwtl
and
jp
pop
push
cmp
in
leave
roll
cmp
sbb
jle
int
jmp
movsb
movsl
cmp
sbb
icebp
into
pop
into
push
mov
out
push
nop
imul
out
adc
adc
jmp
push
mov
inc
int
xor
jo
fiadds
push
outsb
xor
dec
cmp
ror
cmp
sbbl
aad
push
into
test
popa
js
pop
adc
push
push
and
add
adc
inc
int
mov
xor
pusha
jbe
lock
rcr
daa
add
add
jge
loope
in
xchg
mov
lods
adc
inc
orl
or
sar
out
mov
adc
push
mov
sbb
ret
dec
adc
add
cmpsl
cwtl
dec
mov
and
mov
push
aam
cmc
lret
sahf
faddl
pop
out
jae
or
xor
mov
jl
jo
addr16
mov
enter
das
adc
dec
inc
imul
cmp
dec
cmp
cmp
out
scas
int
mov
inc
sbb
imul
test
push
lcall
xor
cld
xor
cltd
loopne
inc
xor
add
sbb
cs
cmp
int
xlat
or
ficoml
lcall
jb
pushl
push
pop
mov
lret
push
inc
xchg
adc
jg
roll
add
aam
fildll
pop
call
dec
cmpsb
data16
mov
dec
mov
icebp
pusha
adc
xchg
or
jns
mov
addb
aam
insb
mov
mov
orl
test
shlb
jo
lods
int3
lock
or
or
repnz
push
pusha
pop
adc
or
pop
dec
and
adcl
jp
or
popa
jnp
ljmp
and
orl
std
cmp
leave
jae
sbb
push
sbb
or
pop
push
inc
leave
xor
leave
aad
cmp
jge
mov
lcall
addb
or
cmp
enter
jno
cmp
rolb
arpl
pop
mov
pop
cmpsb
inc
jecxz
add
pop
adc
mov
lcall
cmp
mov
scas
jp
sub
outsl
orl
mov
sbb
lcall
mov
mov
sbb
mov
inc
insb
ds
mov
hlt
sbb
mov
leave
in
push
mov
movsb
rclb
cwtl
sub
out
loope
shlb
and
hlt
cmp
cld
movaps
addl
or
mov
andl
xor
divb
adcl
or
xchg
dec
mov
cmp
sub
test
xlat
daa
add
add
dec
adc
js
xor
cltd
or
mov
unpckhps
je
jle
dec
lret
ret
enter
pusha
enter
jb
mov
fsubl
or
xchg
imulb
sbb
js
xchg
xor
test
push
push
mov
mov
or
sub
sbb
test
mov
and
jo
or
jle
sar
pop
xor
movsl
adc
adcb
push
mov
negl
repz
add
das
or
mov
adc
enter
subl
je
mov
cmp
add
pop
sbb
aam
xchg
inc
out
sub
and
ret
xchg
mov
mov
mov
imul
dec
ret
scas
ret
sbb
and
adc
pop
add
nop
xorl
and
jnp
dec
aam
inc
inc
xorb
sbb
xchg
cltd
in
jecxz
sbb
mov
aad
addr16
ljmp
push
xchg
xchg
adc
imul
push
das
inc
lcall
jp
enter
push
mov
push
adc
sbb
loopne
fwait
insb
push
or
cmp
add
push
dec
sub
inc
cmp
dec
xchg
test
loop
add
sbb
sub
lcall
adc
or
loope
stos
mov
sbbb
gs
in
dec
mov
and
ret
ss
push
rcrl
ficomps
int3
inc
inc
mov
es
test
or
scas
adc
cmpsl
and
stos
cmpb
or
cmp
js
lea
jae
and
add
mov
pop
cmp
xchg
sub
test
sti
ret
adc
loopne
jecxz
mov
push
mov
cmp
mov
leave
jb
inc
lds
stos
xor
repz
inc
into
push
scas
xlat
mov
je
inc
mov
fiaddl
out
inc
mov
inc
lods
loopne
rorb
iret
adcl
popf
sub
jo
out
add
mov
rolb
cmp
xchg
sub
clc
ret
add
arpl
add
imul
push
cmp
nop
outsb
sub
mov
lret
fcompl
js
inc
cmp
andl
adc
add
mov
das
sbb
fmuls
xor
sub
mov
push
push
xor
and
sbb
jge
stc
adc
fistl
mov
je
mov
push
pop
dec
adc
dec
loopne
roll
addl
xor
push
push
add
sbb
leave
mov
pop
in
inc
xchg
inc
fldl
xlat
cltd
push
roll
scas
jbe
dec
out
cmp
adc
mov
jb
sbb
out
test
dec
mov
out
inc
lods
enter
inc
sub
xchg
mov
xchg
xchg
xchg
out
push
sbb
insl
es
push
cmpsb
jge
sub
dec
mov
hlt
push
jne
ficomps
testb
push
mov
cs
leave
mov
inc
xor
pop
cmpsb
xor
es
jb
sahf
xchg
pusha
jnp
nopl
jb
xchg
push
sbb
sbb
jle
sbb
mov
adc
mov
loope
and
sub
stos
clc
popa
movsb
andb
mov
stc
adc
xchg
xchg
xor
adcb
mov
or
add
enter
pop
or
test
and
popa
sub
add
enter
ret
stos
or
andb
xor
aad
mov
push
cltd
mov
sbb
dec
push
sub
int3
mov
fcmovnb
negb
nop
and
cli
add
sbb
sub
sub
xorl
add
sbb
test
in
rcll
push
mov
mov
into
xlat
adc
or
xchg
icebp
or
inc
clc
cmc
int3
and
sbb
fisubrl
ret
sub
enter
add
mov
sub
sarb
inc
scas
xor
dec
sub
insl
stc
push
movntps
adcb
mov
sti
inc
pop
adc
sub
dec
mov
sub
add
arpl
xchg
push
lock
daa
lret
arpl
or
add
or
shll
in
pop
loopne
cli
fiaddl
xor
mov
mov
aam
or
push
daa
or
faddl
jo
insl
faddl
cmp
lcall
out
pusha
jb
add
cs
cmp
ljmp
lret
xor
lcall
loope
cmc
popa
dec
push
loop
and
or
pop
xor
mov
mov
add
adc
adc
ljmp
data16
inc
add
sub
fstpl
mov
or
xor
adc
push
scas
popa
mov
or
loopne
scas
notb
pop
push
xchg
sahf
js
loopne
popa
cmc
adc
js
mov
imul
cmp
inc
inc
dec
add
mov
shlb
lret
mov
adc
out
into
shll
pop
je
jo
mov
mov
aad
testb
xchg
or
dec
cld
in
cmp
push
xchg
loope
push
mov
fildl
mov
add
fstpl
sub
mov
push
jle
scas
imul
sbb
xlat
push
xchg
jg
js
adc
les
and
daa
mov
pop
push
dec
popf
xchg
aam
jnp
inc
test
cmp
sahf
cwtl
or
pusha
test
adc
pop
push
shrl
inc
test
pop
in
cmpsl
ljmp
add
and
or
ret
fistpll
sbb
mov
loope
test
inc
push
call
xorl
mov
mov
mov
popf
mov
mov
test
adc
insb
cli
outsl
int
add
and
cmpsl
cmp
jno
int3
add
push
jg
inc
adc
add
sub
sbb
adc
sbb
xor
push
les
add
mov
push
xchg
pop
stos
xchg
jne
dec
decl
xchg
push
dec
fidivl
fs
inc
xchg
addr16
sub
add
bound
lock
mov
jle
mov
push
cs
inc
dec
push
and
aad
pusha
loop
jl
arpl
dec
inc
pop
pop
loop
push
jp
aam
sbb
cmc
xchg
jmp
sbb
sub
out
dec
out
sbb
inc
xchg
push
sbb
add
push
sub
sbb
and
jnp
inc
cmp
lods
fisubrs
jp
popf
mov
inc
mov
rclb
sbb
dec
xor
xchg
fadds
dec
adc
sub
add
roll
stos
xchg
jns
and
jo
cmp
cltd
shll
stos
sub
push
cmp
cwtl
or
sub
push
inc
cmp
in
push
push
jne
add
jo
mov
in
mov
push
add
fldl
or
xor
and
push
xchg
xchg
push
mov
dec
scas
sbb
push
add
inc
aam
sub
mov
push
enter
add
lret
notb
test
xor
and
pop
es
jne
aaa
or
lcall
add
fmull
imul
leave
push
fbld
out
cs
push
xchg
cmp
imul
cmp
mull
cmp
sbb
xlat
adc
mov
lcall
cmp
push
add
mov
jge
and
push
inc
jo
adc
mov
pop
je
mov
mov
xor
push
pop
sbb
dec
push
sbb
das
mov
dec
mov
push
loope
pop
sbb
xchg
sub
addr16
lea
or
inc
xor
add
shl
aas
mov
cmp
enter
lods
mov
mov
jae
pop
out
push
xor
sbb
aaa
and
sub
adc
pop
std
mov
loopne
xor
shl
xor
and
cmp
jecxz
xchg
push
arpl
out
stc
out
push
dec
cmp
in
or
sub
and
cltd
xor
mov
test
and
loope
popa
jb
dec
jne
enter
mov
jmp
inc
clc
popa
arpl
cwtl
add
add
xor
loop
jmp
inc
scas
push
xchg
sbb
aad
dec
int
loopew
push
call
mov
dec
repnz
and
cmc
sbb
movsl
adc
sbb
loopne
ret
dec
adc
and
jb
jo
cmp
jbe
xor
jne
cmpsb
pushf
sub
push
or
das
push
mov
std
pop
xorb
lea
mov
push
test
mov
xchg
xor
inc
inc
ret
sbbl
mov
xor
sbb
pop
inc
ret
test
sbb
dec
mov
cs
pop
popf
push
xchg
jmp
push
inc
adcl
loope
jg
inc
mov
test
or
aam
mov
sarl
add
repnz
movhps
add
adc
xor
arpl
subl
stos
and
lock
or
aas
xchg
or
leave
push
jae
adc
pop
imul
jb
ficompl
and
push
orb
stos
mov
sub
pop
out
imul
dec
stos
xchg
xchg
lods
fs
gs
cltd
lods
add
cmp
cmp
popa
stos
inc
push
sub
adc
mov
adc
or
or
stos
in
pop
fs
push
pop
int
inc
or
mov
adc
and
mov
repnz
dec
gs
loop
jnp
inc
add
ret
test
bound
jge
dec
rorb
xor
pop
add
js
push
or
loopne
repnz
sub
adcl
loop
orl
dec
mov
repz
xor
imul
shlb
and
js
ficoms
fnstcw
in
sbb
mov
shrl
mov
test
test
rcrb
jb
int
add
cmp
imul
sbb
mov
push
loope
push
inc
xchg
pusha
scas
and
sbb
cwtl
and
or
push
test
or
mov
xor
push
iret
add
pop
jne
popf
call
inc
xor
orb
jae
cmpsb
push
adc
or
cmp
sbb
add
adc
adc
add
and
xor
in
fiaddl
es
das
pop
sbb
pushf
lcall
pop
dec
inc
popa
mov
enter
adc
xor
loopne
jmp
mov
or
sub
mov
mov
lahf
push
and
outsl
fists
int
push
dec
mov
jae
push
push
inc
jle
movsl
sub
xor
or
popa
arpl
xor
in
jb
push
jae
mov
cmp
pop
mov
sub
test
paddusw
or
ljmp
or
push
push
add
popa
shlb
jp
lret
pusha
jb
stos
xor
lcall
jae
mov
push
cs
push
xor
mov
adc
push
pop
mov
add
mov
shrl
mov
or
mov
adc
mov
movsl
jb
and
xchg
enter
xchg
and
push
push
scas
cwtl
roll
pop
popa
inc
fs
and
push
roll
mov
xor
fistpl
or
cmp
pop
xor
push
rcll
andl
push
mov
jl
lret
pop
repz
adc
rcr
push
int
inc
jp
aam
test
push
stos
jns
inc
nop
and
xchg
mov
jmp
nop
lock
jns
push
push
push
jmp
fists
mov
mov
jno
and
mov
iret
pusha
hlt
inc
je
dec
jg
es
jnp
ret
dec
roll
push
xchg
sub
mov
cmp
ds
inc
scas
pushf
sbb
push
sub
insb
xchg
rorl
shlb
push
sub
dec
sar
rorb
mov
and
dec
jb
sbb
add
mov
pop
xchg
mov
mov
or
add
loop
mov
add
mov
add
sbb
inc
push
adc
add
clc
icebp
mov
hlt
rolb
jne
sti
imul
outsb
push
dec
sub
mov
adc
daa
pop
clc
push
cmp
adc
test
mov
adc
jp
or
push
pop
push
lahf
and
hlt
cmc
outsl
adc
ljmp
add
dec
subb
and
mov
jns
sbb
fistpll
fwait
cmc
and
mov
out
sub
in
ret
xchg
lret
xchg
bound
add
and
or
jae
mov
jge
jb
addb
adc
mov
ret
cmc
enter
inc
imul
inc
and
popf
push
xor
jg
inc
fisubl
das
arpl
inc
dec
in
shll
pop
xchg
adc
add
lret
cltd
cmpsb
negl
repnz
in
insb
inc
test
loope
orl
push
loope
pusha
fs
mov
int
js
sub
popa
test
sbb
ficomps
adc
out
push
lods
call
xor
push
sbb
stos
imul
stos
inc
or
or
dec
inc
dec
cltd
push
push
mov
cmc
adc
rolb
inc
mov
sbb
add
pop
fldt
inc
push
jecxz
mov
inc
cltd
aad
aad
jo
int
mov
jb
sbb
fldt
adc
xchg
add
inc
cmp
cmp
pop
inc
das
sahf
jp
add
js
ret
ljmp
and
mov
push
outsb
ss
hlt
mov
push
je
shll
jmp
xchg
and
push
shrb
in
pop
xor
pushf
xchg
int
mov
cmp
pusha
mov
mov
push
out
xchg
mov
add
pop
and
sbb
adc
or
ret
lods
lock
daa
stos
clc
push
jp
push
dec
test
or
and
ljmp
xor
dec
andl
pop
push
icebp
mov
rolb
scas
sbb
out
push
pushf
jnp
or
out
rcrl
shl
add
cmc
cmpsb
fbstp
subl
xchg
sub
sub
outsl
xchg
and
push
adc
out
clc
cld
push
mov
sub
mov
or
push
add
out
dec
repnz
mov
enter
roll
push
mov
push
or
add
jg
inc
mov
daa
incb
cltd
xor
rorb
pop
sbb
orl
mulb
sub
shl
and
sub
push
push
mov
xor
push
mov
mov
add
pop
xor
sub
or
cmp
enter
xor
jno
jo
scas
mov
icebp
push
jo
or
hlt
xchg
and
dec
push
xor
mov
mov
mov
shrl
mov
lahf
daa
mov
add
loope
js
out
ss
gs
mov
or
inc
ds
xchg
sbb
adc
push
jle
loope
in
mov
pop
loopne
loopne
icebp
idiv
stos
loope
cld
hlt
test
push
popf
lcall
dec
sbbb
xor
ss
aad
xchg
shrl
sbb
push
xor
jmp
inc
push
mov
inc
in
lcall
or
jmp
xchg
shlb
dec
jle
test
out
add
mov
add
cwtl
or
scas
mov
sbb
jae
push
repz
popl
inc
out
mov
cmpsb
out
out
mov
cltd
or
shlb
adc
subl
push
mov
leave
gs
cltd
movsl
inc
jnp
iret
fs
inc
xorb
les
sub
sub
lahf
loop
mov
fcomps
stos
push
xchg
lret
add
push
cltd
jns
add
push
ljmp
mov
jae
int3
enter
or
sbb
xchg
lock
push
dec
xchg
repnz
ds
add
xor
decl
outsb
mov
shrb
shlb
sub
insb
fstpl
fadds
inc
mov
jnp
in
cmp
push
jnp
loop
or
mov
sub
pop
mov
nop
mov
repz
xchg
insl
mov
mov
xchg
rcrl
mov
jp
mov
fldcw
xor
fdivrl
ja
call
in
sbb
push
int
mov
lahf
scas
sub
in
das
aas
scas
add
lret
xchg
sbb
rolb
xchg
add
push
lods
push
mov
clc
pop
ljmp
dec
test
or
inc
add
xlat
loopne
aad
inc
int
and
adc
sbb
loop
and
xchg
dec
mov
cwtl
push
jb
jns
mov
aas
dec
daa
rorb
test
sub
jb
add
scas
addl
sbb
mov
pushf
jae
push
movsl
lods
sbb
inc
pop
es
test
dec
dec
gs
data16
adc
test
xchg
popa
rorb
inc
xor
mov
push
test
stos
add
xor
pminub
xchg
jnp
xchg
sub
fnstcw
nop
ret
cmp
mov
ret
sbb
cmp
fldcw
add
xor
add
pop
addb
enter
push
add
or
mov
cmp
lret
or
pop
ss
push
loop
loop
cmp
dec
fsts
subl
push
loope
cld
aaa
sub
imul
in
cltd
or
mov
repnz
and
cs
adcl
rolb
adc
dec
push
lret
cs
push
push
pop
mov
push
scas
stc
dec
pusha
mov
mov
fsubs
sub
add
stos
sbbb
mov
fisubl
add
andl
nop
jecxz
jb
movsl
call
sub
add
pusha
sbb
push
inc
scas
incb
mov
movsl
add
push
int
mov
pop
push
push
pushf
dec
sub
popa
stos
ret
jmp
jb
adc
fnsave
sub
adc
push
sbb
test
adcb
mov
inc
and
push
arpl
rorb
add
push
cmp
cmp
lea
pusha
or
adc
xchg
and
data16
popa
jb
sbb
sub
dec
and
mov
cli
das
sub
daa
pop
push
xor
cwtl
fimull
cmc
mov
call
jp
dec
xchg
push
pop
call
adc
and
or
loopne
cmp
lret
addb
add
push
sbb
mov
add
add
out
les
mov
stos
sbb
xchg
shl
enter
pushf
das
clc
or
nop
mov
push
cmp
lds
aaa
dec
mov
loope
inc
out
or
xchg
jae
lret
push
and
adcl
mov
shll
sub
cmp
cmp
lcall
push
inc
jge
call
cmp
push
add
inc
sbb
pushf
cwtl
loopne
mov
enter
add
scas
hlt
or
xchg
into
or
dec
sbb
push
xor
xor
xor
in
dec
xchg
jecxz
cmp
adc
pop
or
loop
push
mov
sbb
test
xor
push
dec
fldenv
mov
dec
iret
shr
pop
pusha
cmp
pop
mov
xor
pop
adc
arpl
add
dec
out
xchg
sbb
push
sbb
lcall
fildl
mov
enter
inc
out
or
out
and
jmp
push
nop
mov
je
je
mov
out
js
mov
add
and
mov
xchg
test
cwtl
or
xor
mov
xor
aam
or
mov
jnp
xor
ret
add
aas
pop
xor
test
subb
repnz
mov
mov
mov
nop
cmp
mov
enter
or
inc
iret
gs
pop
nop
rcrb
sarb
push
out
xor
pop
add
cltd
add
push
cmp
test
dec
in
loopne
mov
push
push
mov
je
ljmp
enter
xor
sbb
push
jns
imul
adc
adc
pop
cmp
sbb
out
cmp
test
xlat
jecxz
mov
mov
xchg
sub
add
into
inc
in
frstor
push
xor
sub
mov
mov
pushf
movsl
sub
popf
in
xchg
jb
push
cmp
mov
or
inc
push
add
rolb
sub
addb
push
stc
push
and
stos
in
test
dec
in
sahf
push
popa
ret
popf
push
push
mov
mov
shll
and
xchg
sar
rorl
jp
int3
add
push
add
pop
mov
in
cmp
fucomp
sub
add
jle
aad
xlat
or
xor
int
or
adc
adc
pop
mov
pop
out
xor
push
adc
es
sub
sbb
imul
stos
add
mov
dec
into
fs
fcom
daa
stos
dec
in
int3
xchg
fsubl
adc
test
jae
orb
add
mov
push
push
lcall
cwtl
mov
popf
cmp
mov
adc
aam
jae
hlt
test
pop
rclb
scas
mov
push
loop
andl
adc
aas
adcl
jmp
fcmovnb
cld
cmp
fs
push
lret
adc
in
addl
fists
ds
lcall
push
mov
fwait
pop
shr
je
stos
ret
push
push
inc
jae
and
shrb
mov
sub
pop
adc
lcall
cs
fldt
movsb
js
imul
vpunpcklwd
push
pushf
ret
inc
aad
cmp
mov
and
cmpsb
and
jmp
sbb
adc
js
or
add
call
adc
push
sbb
dec
mov
push
adc
scas
dec
cmpsb
out
mov
cs
push
or
ficompl
pop
stc
fxch
push
xor
pop
or
mov
xor
nop
and
inc
mov
add
fnstsw
add
mov
jb
and
adc
out
int
sbb
fsubl
push
mov
xor
dec
adc
jo
jo
or
movsl
popa
cmp
sub
push
das
andb
push
mov
int
lcall
scas
out
or
mov
push
mov
pop
rorb
adc
cmp
xchg
sub
or
rolb
sbb
cmp
dec
adc
and
mov
test
mov
js
pop
add
xor
xchg
xchg
mov
cmpsb
adc
mov
nop
jecxz
fptan
xor
inc
test
roll
fs
into
mov
pusha
test
cmp
jno
add
mov
sti
mov
inc
push
jbe
enter
outsb
in
iret
aam
adc
into
shlb
pop
not
push
mov
out
jmp
xor
cmp
hlt
js
lret
or
push
pusha
jnp
ljmp
outsb
scas
mov
or
into
jno
ret
xor
xchg
xchg
jecxz
pop
scas
mov
add
inc
xchg
xor
push
stos
lock
ljmp
add
enter
repnz
xor
add
adcb
imul
mov
sbb
popa
adc
lds
sarb
and
jp
test
ss
cld
aaa
lahf
add
push
imul
enter
dec
lods
bound
call
push
aad
xor
push
push
sub
stos
or
out
rorb
and
xor
mov
inc
adc
aam
jmp
add
out
popa
mov
and
add
mov
pop
xchg
stos
cltd
popf
jbe
mov
and
push
dec
push
and
mov
add
pusha
stos
dec
jnp
loopne
pushf
and
or
xlat
arpl
dec
in
fs
push
scas
push
mov
cmp
pop
fisubrl
js
push
adc
pop
xor
or
icebp
inc
dec
aam
repz
inc
cmp
dec
pop
ret
cmc
push
cmc
pop
cmp
cs
adc
fisubl
rclb
or
mov
adc
or
js
imul
pop
pop
loopne
loope
lea
arpl
pop
je
and
xor
pop
add
sub
adc
adc
xchg
out
mov
sbb
adc
std
cmp
add
inc
or
xchg
leave
xchg
lods
ss
or
add
int
js
cmp
sarb
pop
cmpsb
or
leave
add
inc
mov
pop
jo
lcall
xor
pop
mov
sbb
mov
test
inc
ret
xlat
out
pop
add
adc
push
loop
repnz
sbb
test
or
xor
cwtl
mov
push
pop
cmpb
in
mov
call
or
mov
add
test
and
jge
sbb
mov
sbb
popf
adc
jae
scas
sbb
xchg
arpl
andl
js
pavgb
divl
mov
adcl
out
es
xchg
cmpsl
dec
pop
lea
xchg
out
mov
and
inc
in
cmc
or
lock
es
jecxz
push
mov
lahf
mov
nop
and
xor
jg
xchg
lcall
data16
or
aas
or
daa
mov
push
sbbl
sbb
sub
adc
or
pop
pusha
lahf
mov
push
xchg
dec
sbb
pop
lea
out
xchg
or
add
push
add
pushf
arpl
les
adc
sbb
stos
in
daa
pop
xor
stos
enter
fisttpl
xchg
add
daa
int3
push
int
sbb
adc
xor
int
pop
sarl
mov
push
jae
pop
dec
sub
sbb
aas
sbb
lcall
xor
loop
loope
aam
xchg
mov
loopne
mov
dec
cs
test
stos
fidivrs
xor
fldt
ja
jnp
stos
sub
dec
sbb
mov
lea
testl
test
out
adcl
imulb
dec
push
cltd
pop
sub
int
inc
stos
cld
adc
andl
arpl
or
inc
test
addr16
sub
aad
mov
repz
or
jae
sub
push
test
popa
sub
add
int3
pop
test
out
stos
jbe
xchg
movsb
sbb
mov
into
icebp
orb
add
or
loopne
push
ret
pop
and
jae
add
cmp
mov
xchg
imul
loopne
daa
xchg
loop
or
xchg
mov
push
sbb
out
lcall
daa
aam
shlb
or
notl
push
test
pusha
add
mov
lods
popf
inc
jbe
lea
pop
js
mov
sub
test
adc
icebp
xor
push
test
in
icebp
cltd
stos
cmp
adc
cmp
andl
pushf
enter
dec
cmp
addl
pushf
sub
push
sub
sub
clc
or
pop
and
jb
mov
aam
mov
loopne
shr
pop
ljmp
mov
xor
mov
dec
inc
cmp
xor
scas
dec
lock
mov
cmp
mov
xor
sub
xchg
push
xor
jb
addl
jnp
cmc
xor
test
dec
out
in
inc
enter
mov
orb
push
scas
call
aas
xchg
push
scas
pop
test
xor
jae
dec
dec
std
jns
loope
push
nop
out
dec
stc
enter
ss
jae
inc
sub
push
imul
push
sub
push
sbb
rcll
xor
insb
fcoms
in
cmp
pop
shl
addb
fstpl
add
push
xor
int
jae
dec
xchg
push
jnp
out
add
mov
fsubrp
push
add
fwait
pop
or
mov
ror
fnstcw
cmp
stos
cmpsb
test
aad
cmp
in
popa
repnz
inc
push
loope
push
mov
in
int
pop
inc
mov
xor
inc
adc
mov
mov
sub
sbb
out
jb
push
add
pop
xchg
hlt
loopne
adc
pop
test
pop
rclb
testl
fmull
cmp
aad
cmp
add
jle
ja
or
jle
jp
out
pusha
cmp
xchg
sub
shrb
add
adc
add
push
inc
negl
push
int3
dec
add
push
inc
shll
or
mov
loopne
stos
lds
ret
test
add
dec
sbb
adc
mov
add
add
xor
push
lods
or
mov
sti
addb
cld
cld
std
test
dec
push
movsb
sbbl
inc
or
jg
and
cmpsb
adc
and
adcl
jo
pop
adc
dec
loope
insb
pop
fst
out
mov
hlt
xchg
push
sbb
push
stos
fiadds
sub
inc
sbb
mov
push
sbb
pop
out
xchg
adc
pop
add
jo
mov
push
mov
cmp
in
loop
pop
ljmp
fldenv
pop
andl
xchg
or
cld
push
mov
mov
push
fidivrl
cmp
mov
sub
cmpsb
cmp
cmc
jmp
pop
sub
negl
adc
and
std
push
mov
fyl2x
lds
sub
out
int
lret
sbb
and
sub
inc
dec
jo
inc
nop
repz
nop
lret
inc
xchg
mov
pop
jnp
loopne
push
cmp
cmp
adc
jbe
add
mov
repnz
gs
enter
sub
or
or
mov
lods
test
mov
scas
scas
in
fdivrs
mov
andb
dec
mov
popa
shl
or
xor
sub
xlat
pop
adc
hlt
popa
jo
add
xor
pop
rcrb
out
jecxz
jo
pop
add
int
sbb
sbb
aas
inc
push
or
push
ret
xchg
lret
xor
add
xor
jg
or
aam
cmp
push
and
add
dec
or
inc
adc
in
test
sahf
mov
adc
aam
in
xor
add
or
pop
add
adc
adc
sub
pop
mov
inc
inc
outsl
inc
xor
aad
xor
sbb
sbb
sub
pop
mov
aam
ljmp
add
hlt
dec
mov
fwait
cld
inc
das
push
mov
out
arpl
mov
mov
js
aaa
rorl
or
fstpt
sbb
cmp
and
add
push
xor
push
loopne
sbb
ljmp
pusha
add
add
out
adc
pop
mov
in
sbb
sbb
mov
sub
enter
mov
fimuls
pop
sub
ret
mov
ja
xchg
add
dec
inc
fldt
mov
cwtl
aad
dec
inc
xor
arpl
push
or
push
pop
add
out
xor
in
rcr
jo
mov
mov
repz
movsl
sub
fs
cwtd
push
push
mov
fnstenv
push
jge
xchg
andl
push
lods
xor
test
cmp
imul
jp
call
xchg
test
cltd
sbb
adc
sbb
imul
jo
es
negl
je
or
or
inc
xor
and
in
and
sub
es
push
cmp
in
lds
mov
sbb
sub
test
in
push
cwtl
xor
or
add
arpl
push
inc
aam
aam
cmc
shrb
or
sti
cmp
dec
in
ror
lret
jp
sbb
add
subb
push
fisttps
js
push
xlat
jne
andl
or
push
cmp
xchg
lcall
xor
push
push
or
pop
mov
push
aad
into
and
dec
sbb
cs
xor
adc
in
adc
push
mov
or
sbb
loopne
cmp
pop
leave
mov
xchg
sbb
cwtl
std
adcl
push
sbb
xor
repz
mov
sub
mov
add
push
sub
jo
jp
add
inc
cmp
addr16
jge
loope
sahf
andb
jmp
les
push
adc
in
adc
cmp
hlt
push
xchg
sub
push
sbbb
inc
sbb
mov
lcall
or
mov
aam
cs
push
cwtl
lock
cmp
mov
xor
and
push
adc
inc
insb
cmp
pop
lcall
add
mov
mov
sub
mov
incb
push
mov
ljmp
fdivr
imul
hlt
roll
andl
lahf
mov
pop
mov
dec
ljmp
popa
sbb
mov
out
enter
rcrb
jo
std
cmpsl
je
xchg
add
jle
cli
in
rorb
add
jae
add
loopne
mov
sub
insb
repz
test
ja
stos
add
push
sbb
sub
stos
inc
in
inc
jne
and
adc
cs
scas
jb
jae
mov
addb
or
pop
gs
test
inc
mov
push
and
xor
push
push
jne
push
push
pop
pop
sbb
lcall
push
pop
sbb
pop
mov
out
inc
xchg
inc
scas
sub
int
sbb
pop
jle
loop
test
mov
cmp
add
mov
enter
jb
pusha
js
cmp
test
push
jne
aam
jl
test
mov
sub
mov
pusha
push
js
cmp
icebp
or
sbb
inc
mov
sbb
movsl
fwait
shl
push
dec
jle
enter
popa
sub
and
xchg
jae
fnstsw
lahf
or
push
add
xchg
jge
jbe
xor
sub
shl
mov
cltd
add
test
cs
int
add
setl
pop
push
aas
mov
add
push
push
test
mov
enter
push
add
mov
cmp
ds
stos
loopne
sub
cmp
and
sbb
arpl
addb
or
mov
testl
pushf
lcall
xchg
or
arpl
fwait
push
mov
insl
and
mov
jnp
push
or
mov
dec
in
rcll
xchg
cmp
add
or
add
push
movsb
mov
mov
lcall
inc
mov
or
inc
push
mov
sbb
lods
fsubs
jo
stos
or
mov
sub
add
xor
aam
add
push
mov
adc
push
int
pop
leave
cmp
push
js
xchg
xor
ja
xor
cmp
or
mov
sbbb
and
popa
rcrb
movsl
mov
cmp
xchg
or
jb
dec
leave
pushf
jo
sub
or
push
leave
inc
outsl
add
lret
negl
scas
jbe
dec
push
cmp
or
push
add
adc
faddl
and
adc
and
pop
xor
lcall
inc
loope
scas
jae
lods
leave
iret
into
adc
pushf
loope
adc
add
xchg
add
sbb
lods
cmpsb
popf
out
cmpsl
fimull
stos
cltd
xor
stos
sbb
mov
mov
cmp
inc
adc
out
push
subl
push
xor
or
mov
lcall
dec
in
dec
daa
insb
dec
icebp
mov
add
cld
inc
fcmovnb
mov
lcall
xchg
leave
and
mov
pop
testb
ljmp
into
mov
pop
cmp
test
and
jle
cmp
popa
xor
test
pusha
aaa
ret
cmp
mov
fstl
pop
or
push
int
inc
pusha
cmpsb
data16
int
sbbl
loope
inc
nop
dec
imul
mov
mov
lahf
loope
mov
push
xchg
mov
add
fwait
je
sbb
leave
ret
cmp
jno
sbb
stos
ljmp
icebp
push
cld
dec
adc
rcrl
adc
mull
pop
push
jp
jae
out
jb
or
fstl
std
fwait
or
sti
sub
sbb
xchg
roll
mov
inc
loope
sbb
or
cs
outsl
sub
cmp
aam
enter
or
enter
add
or
inc
sbb
xor
mov
adc
test
andb
addb
in
push
inc
push
sbb
inc
fisttpll
sarb
add
jbe
adc
xor
fisubs
inc
cs
inc
movsl
hlt
gs
scas
push
dec
xchg
cmp
shll
daa
or
jb
lods
pushf
hlt
rol
addl
dec
lahf
addr16
push
inc
xor
mov
adc
pop
insb
stos
popl
inc
xchg
or
adc
ja
push
inc
int
sbb
into
aad
add
pop
lea
xchg
xchg
xor
stos
mov
testb
push
inc
lods
lds
aaa
out
add
adc
or
add
rcrb
lods
into
nop
lret
push
shl
orb
sbb
mov
ds
cmp
pop
mov
and
or
lods
push
mov
add
inc
xor
ret
xor
nop
mov
xor
xchg
lds
repz
popa
fldenv
or
ret
push
testb
dec
add
enter
push
xor
lea
iret
push
push
pop
fsubl
mov
out
add
ljmp
mov
xorb
adc
xchg
xlat
pop
sub
in
cmp
sub
xor
les
inc
push
sbb
outsl
cltd
push
add
dec
adc
push
mov
jp
mov
test
xorl
lret
repnz
or
pop
push
lcall
push
out
and
pop
pushf
imul
sbb
dec
popa
mov
add
andb
inc
push
hlt
mov
add
sbb
inc
xor
adc
shlb
push
mov
sub
sbb
rcll
rcrl
add
xchg
add
pop
bt
push
dec
mov
push
sbb
push
in
mov
enter
add
cwtl
push
sub
adc
pop
leave
int3
jg
jne
mov
sub
xchg
push
mov
adc
push
test
add
add
mov
add
or
int3
push
dec
or
mov
pop
inc
mov
add
push
sub
popa
loop
leave
mov
nop
ror
nop
cmp
sti
mov
loopne
push
out
cmc
subl
sub
scas
pop
bound
popa
sub
sbb
outsb
or
or
sbbb
sub
add
inc
lea
cmp
inc
addb
fistpl
adc
in
sub
xor
and
cmpl
xchg
inc
xchg
test
fs
popf
mov
adc
fldt
add
cli
ljmp
enter
inc
xchg
scas
popl
jo
xlat
pop
mov
pop
mov
testb
orl
sub
cs
or
ljmp
mov
mov
mul
and
pop
pop
les
sbb
inc
mov
cwtl
add
out
shrl
push
loope
mov
add
xor
fwait
push
ret
jae
ja
mov
dec
popa
out
fcoms
aad
aam
xchg
into
gs
push
xor
stc
pop
loop
cmp
sub
mov
mov
and
jo
in
popf
dec
rorl
push
pop
cli
sub
dec
fs
mov
push
mov
out
ret
mov
and
dec
and
mov
sbb
lret
dec
test
ljmp
clc
mov
lahf
xchg
inc
scas
pop
cmp
mov
xchg
and
out
call
fcmovu
orl
adc
dec
es
test
push
push
jmp
pop
icebp
ret
cmp
sbb
loop
clc
lods
into
mov
cmpl
push
pop
in
add
imul
push
cli
mov
test
add
inc
ftst
aaa
les
jb
in
xor
inc
ret
mov
xchg
cmp
fwait
test
adc
shlb
jp
cld
lret
inc
mov
stos
mov
cltd
cmp
inc
cmpsb
pop
roll
clc
mov
inc
cs
fnstsw
les
jge
jg
popa
sub
adc
sub
mov
mov
adc
add
adc
test
int
mov
inc
mov
xor
add
dec
mov
leave
iret
push
mov
mov
in
add
dec
add
ds
sbb
or
or
dec
push
cmpsb
or
repz
and
sbb
sub
add
sbb
loopne
sbb
mov
cmpsb
aad
loop
sbb
xor
jae
sbb
jae
add
mov
and
and
pop
negb
int3
dec
xchg
imul
dec
rclb
pop
loope
add
dec
out
jo
pop
add
push
rolb
gs
test
andl
jecxz
jnp
push
idivl
fnstcw
dec
xchg
fs
jo
push
sub
pusha
jno
jae
sub
inc
mov
add
adcb
ss
mov
shlb
dec
adc
scas
sbb
jae
xor
xchg
test
dec
mov
sub
cmc
jns
mov
ret
xor
sbb
xor
cmpsb
push
mov
or
add
and
mov
jo
sbb
push
xor
jb
ret
ret
loopne
ret
das
push
and
adc
jo
pop
cmpb
pop
rolb
sbbb
or
pop
push
pop
rcll
mov
xorl
lods
jp
push
push
icebp
dec
push
loope
shll
cmp
xor
sbb
aam
dec
in
mov
xor
leave
hlt
sbb
mov
xor
mov
xor
xchg
cmpsb
mov
adc
xor
lcall
or
and
fldenv
fs
mov
or
enter
or
sbb
stos
insb
test
mov
inc
xchg
jno
test
sbbb
aad
cmpsb
sbb
shld
add
and
enter
dec
xor
fadds
add
aam
lcall
in
xchg
sub
loope
mov
std
or
aam
xor
andb
or
js
fsubr
data16
adc
mov
rcrl
mov
mov
sub
push
jb
repnz
cmp
jns
mov
sbb
push
nop
icebp
cmp
mov
push
add
cmpsb
xor
sbb
jo
cmp
jb
subb
pop
in
jp
push
lcall
adc
dec
mov
jl
xlat
fs
loop
mov
add
nop
and
push
orb
stc
pop
lcall
insl
enter
fiaddl
jb
and
mov
mov
rorb
mov
and
adc
push
lsl
shll
test
push
lods
rclb
and
mov
jg
cltd
push
sub
add
cmp
xchg
jno
leave
push
xchg
pop
adc
lret
and
out
cmp
fs
rcrl
inc
add
outsl
lods
sbb
dec
ds
pusha
pop
add
dec
into
inc
cmp
sbb
pushf
jge
xorb
sbb
in
xchg
or
sbb
dec
cmp
in
imul
mov
jo
test
xchg
push
aaa
leave
loopne
cmp
push
push
add
loope
or
lret
add
add
push
jb
pop
inc
mov
popa
jb
addr16
testb
enter
inc
add
loope
sub
push
lret
push
add
jae
adc
out
inc
out
fcmovnu
xor
in
pop
jg
ljmp
jbe
leave
in
sbb
sub
scas
push
xchg
sub
test
or
inc
mov
js
rcrl
or
roll
push
xchg
movsb
push
orb
jp
scas
stos
sbb
insb
jb
leave
sub
sub
shrb
jbe
mov
sbbl
insb
add
test
xor
mov
and
pop
inc
add
inc
cmpsb
sahf
adc
mov
mov
mov
jno
dec
inc
add
add
push
push
add
mov
les
call
in
lods
and
cmpsl
push
fnstcw
ss
pop
inc
cmp
sbbb
mov
or
loop
inc
lea
pop
ljmp
or
and
sbb
push
inc
sbb
xor
or
arpl
sub
cmp
jnp
ret
lret
mov
gs
adc
or
inc
fcomps
lock
jae
and
sub
addl
cmp
rolb
jbe
push
sbb
or
addl
sbb
fistps
test
jmp
and
xchg
mov
or
popa
lcall
dec
mov
mov
imul
or
das
int
or
jns
push
in
push
xor
xor
sbbb
cltd
call
sbb
gs
adc
inc
in
ret
mov
rolb
test
cltd
enter
push
addb
jb
ficomps
add
sahf
push
rclb
or
mov
es
mov
add
mov
aam
cmpb
notl
push
jae
into
jae
je
push
jo
loopne
mov
cmp
mov
mov
dec
sbb
dec
mov
and
pushf
cli
in
or
and
or
arpl
xor
loop
sbb
or
icebp
mov
stos
inc
iret
inc
mov
cmp
loopne
sbb
lods
add
sub
add
sub
adc
mov
xchg
add
push
clc
stos
push
test
push
fs
xor
lret
lret
mov
push
in
out
xor
in
in
jo
mov
push
mov
dec
loopne
and
lock
enter
jae
xor
insb
sbb
inc
sub
lods
cmp
jmp
adc
push
inc
xchg
inc
and
cmp
cld
mov
fmull
shll
sub
ljmp
add
or
mov
or
xchg
add
cli
aas
outsl
push
add
sub
dec
cmp
adc
xor
jbe
xor
push
mov
test
sub
inc
jnp
inc
sbb
push
or
popa
sub
enter
cmp
cltd
popa
pop
and
mov
mov
dec
adc
push
push
xor
push
sbb
xchg
imul
enter
sahf
push
jbe
orb
inc
or
pop
inc
jp
mov
sub
or
aad
ljmp
js
and
cwtl
jae
inc
sbb
rclb
cmovae
iret
cmp
pop
scas
and
sbb
mov
mov
inc
stc
dec
ljmp
in
sub
les
cmp
ret
shl
cmp
in
movsb
xor
lea
add
pop
hlt
stos
cltd
enter
das
and
xchg
aad
syscall
push
sub
call
cld
dec
add
fcomip
jecxz
xor
sbb
repnz
mov
jo
mov
lds
push
shrl
js
lahf
add
in
sbb
sbb
push
sub
mov
add
lret
mov
add
push
pusha
and
dec
or
sub
daa
xor
mov
xchg
sub
adc
out
push
push
xor
icebp
shrb
or
dec
adc
cwtl
out
push
jb
dec
mov
xor
scas
cltd
dec
jne
dec
xor
push
add
or
push
cmp
push
scas
enter
pop
shlb
adc
mov
es
dec
adc
jecxz
in
in
ljmp
push
movsb
iret
testb
adc
adc
pop
inc
frstor
add
and
sbb
dec
xor
dec
mov
add
push
decl
pop
jecxz
cmp
pop
test
data16
rorl
and
mov
mov
and
test
add
int
add
xchg
enter
push
xchg
jmp
lret
addb
int3
push
add
adc
test
mov
adc
sbb
out
cmp
jmp
jae
dec
sbb
mov
inc
loopne
cmp
ljmp
insl
xor
add
inc
or
enter
inc
cmpsb
push
scas
jge
mov
adc
pop
xor
and
fwait
pop
jne
mov
xchg
hlt
pop
dec
push
jo
inc
in
aas
add
pusha
push
test
clc
lahf
fisubs
test
mov
add
push
push
mov
es
loope
outsl
clc
out
jecxz
cltd
dec
sbb
xor
outsb
ret
mov
lcall
sub
into
addr16
rorb
outsb
jae
xor
or
cmpsl
lods
jae
sub
sub
fwait
adc
xchg
enter
cmp
push
mov
inc
and
push
loopne
add
sarb
push
scas
lcall
push
dec
aam
jl
dec
xor
add
loope
loopne
pusha
lret
dec
xchg
mov
test
or
incb
loop
mov
lods
xor
sbb
adc
push
add
or
enter
out
mov
and
jmp
stos
sbb
push
iret
jg
mov
push
xor
lahf
arpl
add
push
icebp
daa
bnd
popa
ret
loop
mov
mov
inc
pushf
aad
xlat
dec
push
add
movsl
xor
int
or
loope
ret
jle
lds
add
mov
push
imull
sub
jno
orl
sbb
add
fimull
stos
orb
sbb
and
insb
stc
push
movsb
sub
popa
xor
and
xor
adc
addr16
dec
ss
loopne
mov
cmp
les
dec
iret
add
out
gs
clc
inc
mov
pop
xchg
or
ljmp
cmpsl
xchg
add
mov
cwtl
jnp
jg
add
mov
sub
pop
sbb
lock
sub
dec
mov
fisubs
sahf
and
sarb
outsl
jp
push
movsl
iret
xor
push
jg
fisttps
stc
cltd
dec
sub
pushw
inc
fndisi(8087
jae
adc
pusha
push
icebp
jp
andb
pop
out
adc
adc
mov
mov
add
mov
cmp
pop
push
xchg
loop
arpl
inc
cs
pop
pop
loop
pusha
enter
stos
repz
nop
dec
lea
pop
mov
sbbb
dec
push
or
andb
add
lret
pop
sub
stos
fwait
imulb
mov
imul
jmp
jle
mov
test
dec
inc
jnp
cltd
mov
add
xor
enter
adc
and
fimuls
scas
jo
jp
sub
stos
or
mov
mov
adc
cwtl
test
xchg
add
xchg
push
add
addr16
add
jle
cmpsb
loopne
int
jbe
mov
xor
loopne
cmp
mov
pop
adc
sub
rorl
add
xchg
add
push
adc
push
xor
jno
pop
mov
loope
push
out
adc
cs
xchg
add
leave
andl
in
in
ja
roll
inc
imul
or
lret
xor
add
pushf
cmp
push
pop
sbb
push
mov
xor
test
adc
enter
dec
shll
jle
push
sub
add
mov
mov
jo
push
push
daa
cmpsb
xor
mov
mov
pop
sbb
and
sbb
imul
push
test
push
sbb
jg
ret
cmp
mov
loope
pop
out
movsb
scas
push
shlb
mov
xchg
incl
lret
pop
fs
scas
adc
shlb
jecxz
outsl
enter
decl
insb
sub
add
sbb
movl
shll
lret
fsubrs
imul
adc
mov
mov
push
mov
add
movsl
inc
scas
push
adc
and
or
loopne
rolb
push
cmp
icebp
mov
push
push
sub
pop
cmc
leave
ret
dec
popf
and
fisttpl
cmc
cmp
aad
jae
rcll
lret
cld
cmp
sbb
addl
xchg
es
adc
jmp
and
sbb
dec
ss
cltd
dec
popa
enter
cmp
sbb
jo
out
pop
xor
pop
xor
and
cmovp
sahf
sbb
mov
sbb
ret
nop
lcall
test
mov
jb
mov
sbb
xor
dec
shrl
xor
addr16
enter
stos
popf
push
rcrb
mov
ret
mov
addl
push
inc
rcl
icebp
mov
lea
push
in
stos
and
cmp
pop
or
jbe
clc
xchg
push
test
adc
data16
cltd
lock
adc
push
enter
in
push
jo
xor
push
shr
add
dec
cmp
adc
lea
inc
sbb
jo
fbstp
jo
push
test
push
or
or
rcrl
ret
adc
push
nop
xchg
les
push
cmp
xchg
subl
mov
test
int3
xor
cmp
mov
sbb
inc
test
sti
cmp
mov
xchg
add
nop
roll
adc
jne
add
and
jbe
add
rcr
fistpll
push
push
lcall
xchg
add
pusha
sub
push
inc
mov
mov
push
xchg
xchg
arpl
dec
faddl
sbb
sbb
mov
into
inc
mov
sbb
pushf
or
dec
push
js
push
sub
xor
add
out
cmp
in
push
aam
loop
cs
es
test
mov
add
jae
sub
int
mov
out
or
push
loopne
ja
lret
mov
mov
jne
es
add
popf
inc
in
cmpsl
xor
out
xrelease
mov
syscall
insl
cmp
fwait
push
xor
push
cs
stos
cmpsb
xor
or
dec
les
push
push
or
and
addb
pop
mov
pop
xchg
aaa
outsb
mov
mov
push
sbb
mov
sub
pusha
js
ret
fcomip
adc
sbb
dec
dec
daa
and
shr
mov
cmp
mov
add
pop
in
sarl
cmpsl
cmc
sbb
cmc
mov
sub
add
lcall
fwait
mov
xor
jo
mov
xchg
xchg
rolb
mov
sub
repz
data16
or
pop
push
lret
jne
loopne
mov
mul
ljmp
cltd
mov
ss
cmp
test
push
lcall
sbb
inc
stos
mov
or
enter
shl
mov
adc
mov
cmc
pop
add
or
jno
push
cltd
lret
inc
mov
ja
xchg
aad
inc
jae
xchg
and
mov
pop
adc
enter
lret
push
mov
xchg
or
ret
push
rolb
loopne
imul
in
and
dec
push
mov
jae
mov
insl
into
push
add
push
popa
sub
mov
push
rcrb
xchg
sbb
sub
pop
push
push
sbb
loope
pop
or
cmp
dec
loop
lret
sbb
lods
cmovle
lock
clc
jg
cmp
rorb
sub
or
jbe
ljmp
sbb
mov
leave
roll
xor
mov
pop
inc
rcl
std
and
sbb
sub
cmpsb
jo
das
adc
clc
scas
pop
in
cmpsb
aam
lcall
fnstcw
adc
sbb
loop
stc
iret
lret
push
hlt
mov
xorb
in
pop
fcmove
add
outsb
push
fwait
sbb
sbb
sbb
or
fidivs
icebp
mov
push
popf
and
pop
in
xchg
xchg
sbbl
mov
xchg
sub
incl
insb
sub
add
adc
add
add
mov
mov
add
push
aam
mov
sbb
fadds
fistpl
inc
pushl
sbb
adc
inc
ret
sbb
add
xchg
aaa
js
negb
xchg
push
fstl
or
jmp
sub
xor
sbb
inc
loopne
aad
outsb
and
andl
scas
test
movsl
push
mov
xchg
mov
lds
xchg
mov
mov
clc
inc
and
xchg
cmc
nop
mov
dec
sub
bextr
ss
les
sbbl
ss
hlt
sub
sbb
pop
push
popf
hlt
in
xchg
jne
cltd
push
jae
inc
int3
hlt
xor
pusha
andb
inc
dec
jle
push
sub
push
rcll
add
add
xlat
rcl
lcall
hlt
clc
out
cmp
pusha
push
mov
or
sub
xor
push
mov
sbb
aas
addl
pop
lahf
jns
inc
es
test
loopne
dec
cmp
ret
insl
aaa
xchg
xor
shrb
jo
mov
mov
sbb
cmp
add
cs
test
jmp
in
cmp
cmpsl
or
loope
cmp
fnstenv
mov
push
add
cmp
jae
adc
cld
push
pop
add
push
dec
es
and
loopne
andl
cmp
push
rorl
add
jmp
mov
orb
xor
cmp
or
jo
ss
push
cwtl
xor
pop
xor
push
cmp
ds
add
enter
aam
cwtl
dec
mov
sub
inc
or
outsl
stos
push
movsl
enter
adc
xorb
ret
das
or
insl
decb
add
mov
scas
push
inc
xchg
mov
mov
cmp
add
dec
add
adc
fnop
add
in
subb
rorb
dec
mov
mov
add
mov
pop
das
xor
mov
sub
paddb
add
sbb
mov
sbb
jne
xor
inc
in
movb
int3
rcl
or
sbb
xor
add
xchg
push
lret
sub
pop
adc
aam
lea
daa
jb
or
fwait
push
adc
and
cmpsl
mov
pop
subl
inc
add
cwtl
mov
cmp
pop
jb
xor
jl
loop
mov
jbe
mov
add
inc
mov
ja
jo
push
dec
cmp
cmp
push
inc
xor
rcr
pop
sbbl
lods
jp
cltd
loope
scas
jmp
mov
pop
mov
pop
mov
rorb
push
mov
adc
push
int
mov
pop
ds
push
inc
mov
repnz
sbb
test
das
mov
mov
mulb
int
add
xchg
push
frstor
test
xor
sbb
xchg
or
dec
push
push
jae
adc
jno
out
lea
sub
loope
or
add
stos
add
test
or
fimull
mov
xchg
xchg
or
jo
mov
flds
lcall
add
es
lret
insl
mov
jae
loop
pusha
test
add
inc
dec
xorb
or
je
xchg
xor
or
mov
inc
adc
push
pushf
stos
scas
lods
testb
movsl
sbb
lcall
dec
gs
adc
out
mov
mov
xchg
test
xor
mov
into
aam
out
mov
test
cmpsl
lea
test
out
ret
adc
sub
push
pusha
push
mov
fwait
push
inc
xor
xchg
mov
xor
ret
pop
sbb
xor
sub
jge
adc
dec
and
xor
fcoms
xor
inc
sub
dec
stos
cmp
sbb
sbb
xorb
inc
ss
push
jno
adc
cmp
mov
xchg
sub
in
arpl
jo
ljmp
mov
add
nop
rcl
es
push
lret
sbb
pusha
lcall
sbb
pop
mov
mov
popa
mov
pop
mov
sahf
and
push
aaa
sbb
sbb
cmp
add
cmc
xchg
or
sub
sbb
xor
and
in
lea
mov
lock
cmp
sbb
pusha
xchg
push
add
dec
push
lds
add
inc
push
cmp
adc
loopne
push
and
out
loopne
or
xor
outsb
sbb
rol
cmp
jne
sbb
push
jno
jb
stos
es
mov
sub
pusha
or
mov
mov
jg
out
and
xor
and
add
push
mov
and
xor
sub
or
fnstcw
loope
jp
mov
xchg
or
cwtl
jb
aas
jns
or
push
into
mov
sbb
mov
xor
cmp
mov
mov
arpl
mov
jge
jb
repnz
add
mov
add
push
out
push
mov
jecxz
add
loop
add
push
aad
pop
push
lods
cmp
push
jle
insl
dec
sub
hlt
add
jae
loop
inc
jnp
xlat
xchg
out
lcall
or
sub
and
in
orl
jp
cmp
shrb
mov
cmpsl
add
fs
jl
adc
and
xor
loop
nop
mov
mov
mov
mov
inc
jp
sbb
cltd
fsts
inc
stos
adc
push
sbb
mov
add
push
es
jbe
out
inc
aaa
loopne
inc
sub
add
andl
pop
adc
lret
insb
jb
mov
jo
sub
push
cmp
jb
sbb
sub
jo
inc
xchg
xchg
inc
adc
and
push
stos
dec
jp
sub
xchg
pop
cmp
test
cmp
push
add
or
popa
jno
xchg
jae
lret
jge
cmp
rcll
push
cmp
inc
add
push
rclb
scas
fwait
imul
push
cmpsl
scas
and
cltd
shlb
xchg
je
lock
scas
jge
sbb
mov
rol
adc
or
push
add
xchg
xorl
adc
sub
mov
sbb
je
test
pop
cmp
inc
mov
sbb
xor
inc
andl
addb
shufps
xor
or
push
cmp
aam
adc
mov
or
ret
dec
xchg
dec
push
xor
daa
rcll
lret
sbb
jo
loopne
xchg
cmpsb
out
inc
push
sbb
add
out
push
in
fwait
sub
loopne
das
mov
cld
xchg
inc
shll
jmp
inc
into
fbstp
lcall
mov
lret
fwait
jge
rolb
pop
inc
call
jb
in
inc
and
sbb
cmp
adc
decl
jb
shrb
mov
test
xor
adc
and
dec
in
aad
push
or
cmp
inc
loope
jno
adc
mov
xor
stos
jg
sub
and
pushf
cmp
push
sbb
push
xchg
lea
scas
jp
jno
addb
mov
testl
push
call
and
popa
cli
mov
xchg
pop
rolb
mov
scas
add
call
lcall
mov
rorl
sbb
cmp
shl
cmp
es
popa
in
enter
cs
in
clc
jae
cmp
push
xchg
loopne
xchg
or
add
dec
push
or
cmpsb
aas
sub
nop
pushf
mov
and
push
or
pop
das
cmpsb
test
cmp
inc
imul
pushf
xor
mov
adcl
jo
jo
mov
pop
fs
and
xchg
add
leave
and
cltd
mov
mov
ss
xchg
add
enter
or
int3
rolb
pusha
adc
or
push
xchg
add
inc
add
adc
inc
sarl
push
ficompl
dec
stos
cmp
dec
repnz
inc
inc
sub
sbb
adc
and
fsubr
loope
sbb
sbb
test
push
sub
mov
xchg
xor
cmp
add
sbb
int3
adc
push
mov
cmp
jg
xor
movsl
das
or
and
les
pop
test
test
fsub
pusha
xor
orb
into
inc
fmull
pop
pop
inc
es
add
scas
push
in
mov
mov
inc
mov
add
in
push
lahf
mov
sbb
mov
mov
jl
sub
xorl
and
ss
push
push
pop
or
movl
das
pop
notb
jno
xor
and
fbld
test
push
lods
and
sub
pop
pop
sahf
adcl
inc
and
test
aad
push
inc
ret
sbb
xor
cmp
jg
js
xor
jmp
and
cltd
test
mov
jnp
push
hlt
shrb
mov
add
add
jge
pop
or
sbb
rcll
fdivrs
aaa
pop
testb
mov
in
xor
xor
add
pop
add
ds
add
inc
js
out
orb
in
dec
scas
fsts
fimull
add
lock
jne
fsubrl
aad
mov
mov
inc
mov
testb
xchg
loop
sub
popa
aam
test
or
cmp
test
pop
mov
jge
es
xchg
mov
xor
jo
jg
push
pop
loopne
push
ds
adc
les
ret
lret
add
orl
push
loopne
dec
or
add
sbb
aam
fiaddl
imull
int
adc
cmpsb
sbb
mov
jb
cwtl
adcb
inc
rorl
jae
jb
cmp
pop
mov
dec
out
cld
add
sub
cs
xchg
cmc
les
or
sub
rorl
sbbl
sarb
ficompl
lock
push
cwtl
incl
and
mov
sbb
xor
hlt
int3
sub
xor
xchg
ret
mov
dec
je
cmp
pop
les
add
jb
adc
pushf
ret
xchg
cmp
sahf
add
pop
fbld
mov
and
cli
cli
jns
xor
add
pop
mov
in
push
hlt
inc
inc
ud1
cmp
jns
gs
call
inc
aam
ret
mov
add
adc
out
push
imul
iret
inc
ljmp
pop
cmp
and
js
or
lret
adc
inc
pusha
push
xor
jae
xor
inc
cmpsl
mov
rorl
int3
in
popa
loop
adc
rolb
call
ss
add
dec
jle
addr16
jb
sub
out
mov
dec
push
pop
ret
and
mov
test
enter
pop
fstl
scas
jle
jb
ljmp
mov
pop
xor
loopne
add
lcall
mov
jns
fldenv
inc
jle
sub
in
or
and
cmp
loop
cmp
sarb
jl
aam
mov
das
lret
push
mov
push
cltd
mov
scas
xchg
bsr
in
push
jbe
cltd
dec
into
adc
in
adc
enter
xchg
ret
lret
lahf
push
add
push
sub
test
cmpsl
shl
xor
lock
ror
sbb
jb
push
add
movsl
gs
adc
xor
lahf
lret
xor
dec
xor
stos
adc
dec
popa
ret
inc
pop
rclb
test
or
push
sub
sub
sub
lret
lret
iret
xor
and
pop
jp
add
leave
push
pop
mov
push
adc
in
or
cmp
xchg
loope
cmc
imul
stc
push
xchg
inc
loopne
mov
push
sub
cmp
fisubs
xor
pop
sbb
scas
add
or
mov
sbb
and
mov
test
lcall
pop
jb
or
mov
ds
mov
or
pop
in
ja
aaa
cmp
xor
and
adc
add
add
xor
and
fadds
mov
imul
jo
inc
int
inc
sbb
xor
mov
mov
cmp
pop
adc
jp
enter
or
inc
mov
addb
mov
orl
or
mov
add
scas
push
test
fisubl
out
push
fiadds
addl
fisttpl
cwtl
orb
loopne
adc
bswap
inc
ljmp
mov
subl
lcall
xchg
adc
add
lds
sbb
add
or
pop
scas
fwait
test
add
ret
rcrl
xor
lock
mov
push
adc
cmp
add
js
jno
test
pushf
test
add
dec
inc
lock
pop
jo
xlat
jmp
cmp
mov
cmp
cltd
nop
mov
sarb
push
loopne
cld
int
pop
sbb
roll
jmp
faddp
in
shl
sbb
lcall
addb
pop
mov
lret
mov
cmp
ret
push
loope
sub
push
adc
cmp
inc
popa
inc
mov
fistpl
hlt
loop
lea
adc
push
lcall
xor
pop
or
xchg
dec
or
mov
sbb
add
mov
stos
adc
xchg
stos
pop
bound
jne
pop
jl
ljmp
ljmp
mov
push
addl
pop
adc
outsl
test
mov
mov
add
xchg
test
lahf
or
push
adc
rclb
dec
jge
call
xchg
pusha
mov
mov
orl
mov
lcall
sub
xchg
and
dec
sbbb
daa
imul
jnp
jne
cmp
ret
push
lock
or
cmp
addl
add
lret
sbb
test
rcrb
int
sub
je
into
loop
pop
cmpsb
aaa
rcr
xchg
mov
enter
push
je
push
jno
jb
sub
mov
scas
stos
sbb
addb
fptan
les
test
fcmovb
fcmovbe
xchg
mov
popa
push
inc
in
sub
adc
out
loopne
cmp
js
dec
roll
lcall
mov
adc
lods
mov
adc
or
rcrb
xchg
jb
in
outsb
xor
pop
test
cmpsb
lahf
ret
add
xor
adc
lcall
mov
in
jl
inc
lock
xor
inc
mov
push
xor
clc
inc
sub
cmpsb
xorb
add
push
adc
fadds
adc
lahf
pop
xchg
sub
xor
xchg
movsb
dec
sbb
or
lret
clc
sbb
add
xchg
ljmp
call
pop
loopne
mov
mov
popa
jae
adc
enter
push
and
push
shrl
add
inc
es
sbb
jmp
cmp
ret
cld
jb
je
add
cwtl
mul
mov
inc
popa
jo
nop
mov
cmc
xchg
jae
ret
sub
mov
adc
pop
testb
push
sbb
mov
xor
mov
mov
aaa
add
or
push
lret
push
push
lcall
orb
push
cmp
sbb
imull
clc
pushf
xor
pop
dec
cmpsl
sub
sub
mov
and
cwtl
xor
add
in
sbb
xchg
add
scas
inc
out
nop
add
aas
repnz
andb
pop
scas
push
pop
pusha
enter
sub
stos
inc
and
aam
jb
mov
inc
outsb
repnz
insb
jb
adc
jae
test
jle
xchg
sahf
inc
loop
or
dec
test
hlt
clc
cs
push
push
push
pop
shll
xor
fmuls
pop
mov
dec
sub
jb
pop
or
or
divb
popf
pop
stos
rolb
fimull
jb
push
lock
call
in
rorb
fadds
scas
mov
xor
xchg
loope
dec
add
and
add
leave
loopne
icebp
mov
xchg
mov
ja
es
imul
pushf
js
sbb
push
add
fldt
or
jbe
sbb
lds
popa
and
mov
sbb
pusha
sbb
pop
mov
add
sub
das
rorb
sbb
mov
mov
dec
xor
jmp
inc
adc
mov
cmp
insb
cmp
add
inc
cmp
lahf
adc
push
inc
outsl
xor
add
lock
jmp
add
lods
jecxz
inc
cmp
ds
sbb
push
shll
and
cmp
add
and
cmc
add
jp
nop
std
stos
ret
hlt
jnp
mov
push
push
cltd
mov
adc
inc
sbb
sbbb
ror
andl
jne
scas
mov
lea
inc
sbb
leave
shll
iret
cmp
jae
loope
xor
mov
pusha
push
sahf
fiaddl
xor
ljmp
movsl
mov
mov
adc
adc
gs
sbb
xchg
dec
sub
xor
lcall
sub
xlat
cli
push
stos
cltd
test
lret
or
mov
sbb
test
scas
add
rcrl
or
rclb
notb
daa
pop
aad
inc
cmp
and
lret
leave
sti
mov
lcall
ret
daa
bnd
adc
data16
outsb
and
mov
hlt
jmp
jo
out
mov
or
push
aam
ss
sbb
push
mov
adc
mov
cmpsl
push
test
push
sti
xchg
daa
das
inc
pop
popf
sbb
push
adc
pop
inc
and
jl
popa
cld
adc
lods
cmp
outsl
push
or
jmp
inc
add
cmp
add
loop
lret
enter
mov
mov
add
cmpsl
xchg
xchg
cs
or
push
xor
scas
popf
test
xlat
inc
and
orb
arpl
adc
jb
push
pop
pop
adc
cmp
jo
test
inc
out
cmp
out
bound
adc
or
push
inc
cld
aaa
mov
ljmp
std
mov
dec
dec
insb
jmp
cmp
pushf
push
stos
cmp
cmpsb
test
dec
orl
lods
sub
jo
mov
push
pop
ljmp
push
sahf
xchg
std
jae
xor
hlt
shlb
mov
sub
mov
sbb
or
inc
int
sbbb
push
push
popf
and
xchg
stos
xor
and
cmp
add
push
xlat
dec
lea
rcrb
add
ret
xor
add
cmp
ret
push
xchg
ret
gs
add
mov
push
pop
aam
lea
ret
lahf
jecxz
test
sbb
xchg
cwtl
or
xorl
mov
sub
cld
gs
jnp
rorl
cwtl
inc
imul
xchg
mov
and
popf
add
mov
or
fwait
cli
xor
sbb
sbb
push
or
add
push
or
lods
sbb
xchg
les
xchg
mov
orl
lret
dec
les
mov
movsb
mov
push
adc
adc
out
jae
xor
dec
push
push
cmp
xchg
mov
icebp
sbb
push
addb
adc
in
movsl
mov
adc
int
js
clc
popf
idivb
ret
xchg
nop
in
inc
jnp
addb
imul
and
push
mov
shrl
sbb
mov
fs
lret
sub
je
cmpb
fldcw
out
push
flds
lcall
cmp
sahf
es
sbb
ds
inc
subl
fimull
sbb
sbb
lcall
fdivrs
sub
in
loop
cmc
es
popa
js
mov
in
std
dec
push
inc
rcl
dec
mov
pushf
mov
mov
js
xchg
pop
sahf
aas
and
pop
add
xchg
out
adc
lock
xchg
mov
notl
jo
out
inc
mov
mov
mov
int3
shlb
out
pop
push
mov
sub
enter
ljmp
rcl
mov
int
xor
sar
enter
push
lds
aam
pop
cltd
test
and
add
adc
fdivp
and
pop
and
mov
inc
add
fs
out
loope
pop
cmp
xor
jge
add
stos
or
cmp
orb
jb
mov
fs
enterw
call
loop
hlt
jle
or
pop
and
jae
inc
mov
ja
popa
jo
lret
gs
jo
xor
dec
into
mov
sub
les
sahf
dec
scas
mov
xchg
cwtl
pop
add
scas
push
lret
push
inc
sbb
je
adc
and
add
clc
jno
sub
loope
and
pop
push
xchg
in
and
gs
mov
mov
imul
loop
mov
add
sahf
xor
inc
push
inc
cld
xchg
dec
mov
nop
or
xor
imul
rol
pop
xchg
stos
or
shrb
adc
xchg
lods
sbb
and
xor
je
jae
scas
enter
rcl
push
jl
mov
mov
in
lahf
pop
push
mov
or
.byte
gs
pushl
add
sub
jmp
jmp
or
cmc
imul
mov
xchg
insb
dec
adc
inc
push
rcl
sub
and
and
jle
aam
adc
and
push
push
loop
cmp
cmp
jae
lcall
std
call
jle
adc
out
cmp
and
adc
jle
jle
jae
enter
mov
sub
lcall
aam
dec
in
fnsave
push
and
aam
add
xchg
loop
and
cmp
cmp
dec
sub
cmp
jnp
std
sbb
ljmp
jle
mov
aaa
inc
and
addr16
and
inc
cmp
fidivl
lcall
movsb
jg
mov
fisttpl
push
loop
and
pop
out
mov
sbb
push
mov
imul
enter
fcmovnbe
fisubrl
add
shl
add
repnz
mov
ljmp
addr16
jle
fsubrl
rorb
add
jae
inc
imul
loop
sbb
sub
sbb
mov
mov
add
rolb
fstpl
cmp
cmp
inc
imul
loop
adc
scas
mov
pop
mov
addr16
push
mov
popa
imul
or
adc
enter
loop
jo
mov
pop
lea
and
insl
pop
sub
or
jne
shrl
jae
lea
pop
inc
fistpl
or
popa
mov
cmpsb
inc
push
sub
xlat
xchg
scas
cmp
adc
add
mov
sub
insb
mov
mov
out
adc
ret
mulb
mov
xchg
sbb
pop
sub
inc
outsl
mov
mov
ret
push
or
cwtl
add
xchg
lods
adc
and
mov
sub
inc
jne
jbe
pop
enter
test
push
cmp
xor
xor
popa
jo
pop
imul
lods
insb
fwait
mov
push
ljmp
sbb
mov
pushf
mov
test
or
sbb
xorl
sbb
and
mov
xchg
cmp
pop
shrl
jne
jle
and
ret
xchg
mov
pop
rcl
pop
fwait
adc
fbld
mov
mov
add
sub
dec
pop
sub
mov
cmpsl
sub
or
and
sbb
push
cmp
cs
incb
mov
fstl
and
fidivrl
negb
inc
test
scas
mov
and
outsb
imul
icebp
inc
fcmovne
mov
lcall
xor
adc
push
imul
lcall
mov
scas
inc
das
ja
cmp
adc
jae
sub
push
inc
mov
xlat
dec
pop
imul
or
mov
mov
in
mov
cmp
movsb
decl
int
mov
or
xor
imul
int
push
int
fildl
cmpsb
sbb
imul
jle
ss
rorl
dec
push
inc
sub
pop
ret
subb
add
lret
imul
lock
cmc
xorl
xorb
ret
jns
or
loopne
mov
jle
and
outsb
mov
insl
lods
xor
int3
out
out
or
std
arpl
out
pop
sbb
mov
push
push
lods
daa
daa
mov
mov
inc
xlat
pop
push
enter
inc
mov
adc
imul
ror
add
mov
or
jne
pop
xor
mov
negl
aam
push
lret
lds
mov
lea
lcall
sub
mov
cmp
xor
aaa
out
lea
addr16
jne
jns
scas
push
push
loope
out
pop
das
mov
push
add
cld
xchg
aam
add
scas
jne
enter
hlt
jl
sbb
push
jp
repz
arpl
int
into
in
outsl
lea
rorb
or
lcall
pop
mov
cmp
jae
divl
mov
sbb
inc
dec
sbb
negl
jo
mov
icebp
negl
dec
cmp
bswap
lea
xor
aad
inc
push
rep
loopne
jae
das
mov
std
or
push
imul
inc
in
lcall
cld
outsb
mov
jge
dec
cmp
jo
add
in
add
mov
sbb
mov
roll
cmp
push
out
outsb
push
pop
insb
mov
adc
sbb
jmp
push
dec
sbb
mov
cmp
sub
arpl
or
sub
dec
mov
push
pop
pushl
lea
push
lea
push
push
push
jge
lret
leave
ret
out
adc
adc
mov
xchg
out
std
insb
lea
je
mov
pop
mov
sub
pusha
or
mov
insl
mov
insl
pop
hlt
pop
push
xchg
mov
pop
add
rcrb
pop
and
mov
mov
ds
sub
lret
dec
sbb
push
mov
adc
jbe
sbb
popa
lcall
pop
push
lahf
mov
nop
sbb
sub
jmp
jle
push
sbb
adc
popf
xchg
flds
cltd
sbb
int
pop
outsl
xchg
popf
add
arpl
dec
fs
lods
arpl
xlat
lcall
inc
test
adc
ss
jnp
aam
adc
xlat
cmp
jle
xchg
ljmp
or
inc
jmp
loopne
vpmaxub
add
xchg
mov
rcrl
roll
xor
cmp
xchg
jle
jb
divb
cmp
shlb
int
xor
lcall
inc
imul
out
mov
lcall
push
cltd
ss
jnp
dec
add
inc
ss
aad
dec
setbe
insb
push
sbb
rcll
lods
aam
and
fbstp
cwtl
or
in
or
or
ss
mov
inc
jmp
jb
es
xchg
js
jle
outsb
jae
jae
inc
ja
adc
pop
aaa
dec
and
imul
adc
xchg
sbb
shl
fsubs
sbb
in
xchg
mov
sbb
or
repnz
pop
in
jae
xlat
inc
jae
dec
popa
aam
dec
ljmp
test
push
and
int3
es
pand
sti
lea
cli
cmp
adc
mov
or
loop
and
lods
mov
std
pusha
inc
push
jge
xchg
imul
pop
adc
sbb
jbe
mov
adc
es
xor
mov
add
add
mov
pop
loop
mov
pop
jae
xor
mov
push
pop
lods
imul
sbb
mov
xor
mov
xor
movsl
jmp
xor
cld
icebp
sub
mov
xchg
hlt
rolb
inc
imul
adc
add
and
mov
shl
pop
hlt
xor
or
mov
mov
add
xlat
add
add
test
sub
mov
push
pop
ljmp
push
push
call
add
lds
push
jl
lcall
inc
sub
add
add
inc
lret
jnp
cmp
lods
cwtl
xor
mov
insl
cmp
dec
loopne
push
in
add
addr16
pop
xor
sub
addl
and
cmp
inc
testl
orl
test
orl
jle
cmpsl
push
lcall
jno
xchg
mov
push
cmp
adcl
inc
loop
loop
lcall
dec
xor
sbb
add
enter
jae
sbb
fsubp
inc
test
inc
in
nop
cmp
out
lcall
sahf
add
dec
jnp
jle
mov
out
sbb
pop
ret
aam
cmpl
push
sbb
mov
sbb
out
fimuls
bound
xchg
or
mov
test
add
cmp
xchg
xchg
jnp
aad
push
mov
mov
hlt
inc
xchg
popa
inc
out
jne
push
aad
in
adc
cltd
xchg
jecxz
cmp
add
and
pop
sbb
push
jg
mov
or
mov
xor
daa
mov
push
clc
pop
jb
sbb
stos
rolb
jae
pop
cs
pop
outsl
mov
nop
mov
lcall
xlat
sub
or
and
dec
insl
ficompl
dec
clc
xor
or
sub
push
imul
add
movsl
arpl
imul
pop
pop
aam
inc
enter
xchg
sub
int
cs
jae
inc
xor
inc
sbb
mov
cmp
mov
push
xor
sahf
mov
int
aam
sub
outsl
cli
dec
insl
sbb
xchg
daa
jp
pop
sub
push
dec
cltd
jb
xor
xor
dec
pop
jae
or
mov
mov
lods
aad
jp
pusha
movsl
loop
mov
call
or
jo
sub
mov
icebp
sbb
push
dec
mov
lret
mov
out
mov
fisttpll
test
cmpsb
pop
xor
cmpsb
dec
add
dec
sbb
jb
mov
xchg
fsubs
jae
std
cmpsb
jge
lret
mov
ret
mov
xorl
iret
int
or
js
push
mov
div
aam
or
lea
and
add
mov
jae
pushf
pop
and
out
mov
mov
pushf
ds
dec
sbb
outsl
repz
sub
decl
adc
jno
ljmp
xchg
add
cmpsb
ret
mov
je
jp
jbe
rorl
mov
and
icebp
mov
mov
xor
mov
xor
bound
outsb
aam
int
xor
and
xchg
inc
stc
push
imul
fsub
cmp
or
int3
lahf
subl
fwait
sarl
and
int
fstpl
rcl
lea
sarl
jmp
xchg
fstps
xchg
lahf
es
push
cwtl
jo
ss
decb
into
cmp
cs
sti
inc
imul
lods
cmp
daa
in
jle
sbb
push
add
push
or
sbb
scas
dec
jne
push
pop
and
sbb
adc
push
xor
mov
pop
jb
jo
aam
cmc
xchg
push
xor
popa
xlat
sub
jle
incb
cmp
dec
stos
inc
imul
mov
sub
xor
cmpsl
jecxz
adc
mov
and
shl
cmc
insb
and
addr16
rorb
cmp
fs
in
mov
rcrb
cltd
mov
mov
mov
mov
mov
push
fistps
div
arpl
clc
repz
fiadds
notb
push
lock
out
jl
test
push
and
sub
adc
push
mov
cmp
cmp
loopne,pt
add
jb
aam
sub
pop
mov
pop
cwtl
dec
or
lret
add
lods
push
in
insb
int
add
popf
lret
inc
lret
pop
lds
in
xor
add
cmpsb
push
int
pop
cmp
sub
aaa
enter
jbe
pop
xchg
divb
in
clc
pop
xchg
xchg
xor
sbb
ja
lret
push
and
or
cmpsb
aam
pop
lcall
pop
shll
add
adc
mov
and
shl
mov
add
adcb
lret
xchg
inc
rcrl
data16
cmpl
xchg
stc
and
faddl
jae
mov
mov
sbb
sbb
push
fisttpl
jo
insb
mov
push
or
inc
push
insb
in
lret
push
enter
subl
aam
mov
adc
or
stos
addb
sarb
test
pop
out
insb
out
nop
sub
jo
repnz
sbb
adc
lods
aam
mov
leave
sahf
pop
xor
pop
push
cwtl
cmp
cwtl
xor
loop
icebp
mov
imul
xlat
or
or
add
add
subl
andb
adc
aad
sar
lds
sbb
out
cwtl
cmp
jnp
cmp
or
cld
mov
add
jle
mov
and
mov
add
int
push
or
xor
sub
sbb
cmpsl
push
lret
int
and
enter
cld
pushl
adc
loopne
aas
enter
jbe
lods
pop
jl
sbb
sarb
lock
xchg
sarb
adc
or
mov
pop
fs
repnz
add
test
jnp
lea
jo
push
pop
jae
jle
xor
filds
lcall
sbb
aad
sub
jecxz
cltd
pop
jae
pusha
es
mov
mov
dec
push
dec
xchg
rcll
or
repnz
push
cmpsl
and
shrl
mov
mov
add
xor
jo
insl
out
test
push
out
notb
pop
int
mov
jo
push
push
xchg
daa
es
ljmp
out
push
clc
adc
cmp
xor
mov
dec
in
scas
mov
push
repnz
fldl
stos
adc
xor
and
test
lcall
cmp
jle
lds
lea
in
adc
push
int
cmp
outsb
mov
jo
rorb
or
inc
inc
jbe
cmp
xor
dec
ds
pushf
mov
daa
or
es
lods
dec
sbb
mov
jmp
testb
daa
cs
dec
pop
sub
dec
aad
cltd
push
or
lret
gs
or
jae
or
jns
in
inc
add
dec
mov
mov
sbb
push
aas
hlt
shll
xchg
test
xchg
mulb
sbb
jae
rorl
frndint
ret
es
push
jb
pop
pop
xor
cmp
mov
mov
xor
ret
fnsave
pop
push
xchg
cs
sub
lcall
sbbb
jle
pop
cmp
jge
add
pop
sbb
jae
rcrb
sub
cmpsb
push
sbb
cmp
inc
add
push
xor
andl
push
pop
std
mov
mov
or
and
nop
scas
sbb
lock
and
add
mov
outsl
jne
push
sub
xlat
push
or
lret
repnz
adc
cmp
add
sub
adc
mov
or
lods
add
cmpsl
imulb
jo
insl
pop
push
push
pop
mov
add
cmpb
push
pop
cltd
sub
movsb
cld
cmp
sub
sub
daa
xor
dec
inc
inc
sub
dec
pop
sub
loopne
sub
xchg
loope
in
and
dec
cltd
xor
sbb
cltd
lods
sbb
xor
add
loop
shrb
xor
xchg
fs
cvtpi2ps
jle
lea
inc
and
outsl
jne
add
enter
mov
sbb
hlt
mov
xor
mov
adc
loopne
ja
xor
rcr
jno
jnp
mov
std
pusha
ljmp
pop
jae
and
jl
and
sbb
jo
mov
sub
xchg
or
ficoml
gs
push
or
mov
shrl
xlat
pop
xor
std
mov
aad
xor
cmp
pusha
xchg
xchg
mov
xor
push
push
jl
cmp
test
sub
int
or
xchg
xor
or
push
xchg
clc
andl
sbb
push
and
loop
xchg
jmp
fwait
mull
loopne
testb
mov
push
fstpl
adc
jae
or
xchg
adc
test
adc
data16
sub
nop
ss
out
jg
movsl
jbe
sbb
sbb
add
gs
jae
mov
jno
sub
pusha
add
xorl
jecxz
cmp
aam
arpl
test
cmpsl
or
gs
lcall
adc
pop
mov
mov
ret
xchg
ficoms
cmpsl
xor
push
jo
mov
xchg
push
xor
icebp
push
sbb
adc
add
pushf
stos
push
xlat
push
into
loopne
test
push
addr16
cmpsl
enter
cmp
cs
bound
daa
sbb
jae
ret
inc
cwtl
or
push
es
mov
push
negl
dec
enter
and
xchg
push
lret
add
mov
fcomps
mov
cld
dec
mov
and
cmp
out
mov
imul
imul
sbb
jbe
inc
add
pop
fxch
inc
in
push
nop
repnz
loop
mov
xchg
gs
das
adc
push
mov
adc
out
jb
loopne
loopne
pop
idivb
addb
pop
andl
mov
xor
xchg
rcl
mov
dec
mov
jns
or
add
mov
mov
scas
sbb
xor
jnp
pop
push
in
loopne
inc
stos
stos
cmp
pop
push
xchg
fistl
out
lea
pusha
ret
rorl
loope
dec
sahf
je
push
ret
mov
adc
or
xchg
inc
xor
push
lea
push
pop
dec
aad
dec
mov
cmp
push
es
mov
push
es
mov
mov
cltd
dec
in
adc
or
or
push
int
push
das
cltd
or
inc
and
lods
xchg
and
shll
icebp
cmp
sbb
fs
shll
icebp
xor
adc
inc
sub
subl
xchg
mov
and
out
xor
test
js
int
jb
add
mov
rclb
cmp
enter
pop
rcrl
loope
cmp
fcmovnb
cli
xor
push
mov
scas
sbb
pop
mov
jo
pushf
push
push
xchg
inc
jnp
push
lcall
or
mov
shlb
cmp
out
push
popa
xor
dec
ficompl
loopne
cmp
mov
mov
popa
xor
or
nop
lcall
sub
xor
ficomps
frstor
pushf
or
push
jno
add
jne
mov
push
aaa
ljmp
jp
lret
mov
scas
add
stos
mov
mov
inc
out
mov
push
dec
arpl
mov
pop
and
sbbl
xchg
and
test
repnz
xchg
pushf
jae
adc
sbb
rcll
sbb
jns
loop
rclb
out
xchg
lcall
or
stos
fwait
rcrb
lods
dec
cwtl
lret
adc
mov
add
add
mov
std
push
aam
and
scas
sbb
pop
nop
ret
rolb
jae
test
add
xor
mov
xor
loope
inc
sbb
inc
out
fisubl
add
ljmp
movsl
inc
lret
cmp
cwtl
js
rclb
sub
rorl
xor
cmpsb
push
lea
addl
push
mov
push
jae
pop
sbb
sbb
frstor
and
jae
rcl
sbb
cmp
xor
push
stc
adc
xor
push
jae
dec
cmp
pop
ret
shrb
je
or
pop
rorb
push
or
loop
cmp
rcrl
adc
xor
ds
mov
stos
loope
mov
pop
jae
add
sahf
adc
leave
out
test
jae
inc
ret
sbb
rclb
add
mov
xorl
cmp
ljmp
or
mov
movl
jl
sbb
jno
inc
ret
xchg
lret
aad
ss
xor
push
mov
call
lea
lcall
daa
jo,pt
jae
push
push
aam
xor
and
or
push
gs
jb
lcall
inc
or
mov
stos
mov
sub
rcrl
lods
outsb
ljmp
jecxz
rcrb
ret
add
daa
ljmp
mov
add
decl
jmp
mov
mov
in
add
or
cmp
push
jmp
rorl
lcall
pop
sbb
push
push
adc
add
call
jge
shrb
mul
sarl
sbb
jo
adc
cmp
adc
or
mov
push
lods
sub
pop
call
pushf
test
jo
lret
pop
adc
jg
into
es
pop
cli
das
jbe
mull
jo
mov
sarb
test
mov
inc
mov
xlat
mov
daa
lahf
push
and
fcompl
adc
inc
les
jo
aaa
inc
xchg
jecxz
lods
cmpsb
lcall
xor
jl
push
or
jb
dec
aad
add
jo
inc
or
fists
xor
testb
sbb
inc
xchg
push
loopne
cltd
outsl
int3
roll
push
inc
sub
into
test
or
mov
jle
es
mov
and
clc
lods
mov
push
cmp
inc
xor
out
push
rcrb
cmpl
mov
xlat
ljmp
adc
nop
xor
sbb
in
push
test
xchg
adc
push
mov
insb
pop
add
push
cmovge
lea
xchg
jmp
push
push
mov
popa
or
sbb
add
or
or
pop
ror
shrb
add
mov
scas
jmp
lcall
jae
pop
pop
or
push
sbb
mov
cmpsl
sbb
xlat
popa
das
add
or
jg
dec
inc
jnp
push
lret
data16
push
sub
push
jb
nop
and
jb
mov
scas
repnz
adc
imulb
mov
stos
outsl
jg
rolb
dec
sub
into
jmp
out
mov
lock
jp
repz
sbb
mov
xor
dec
push
or
push
in
icebp
iret
push
xor
inc
and
aas
xchg
and
fnstcw
iret
stc
nop
add
nop
fwait
cli
jo
adc
das
in
xor
popa
mov
sbb
push
leave
adc
add
leave
add
sub
xchg
sbb
aam
push
or
mov
xlat
popa
ret
daa
inc
orl
mov
lret
sub
pop
push
pop
sbb
mov
xor
movsl
jns
data16
sbbb
sub
mov
add
dec
out
popa
push
stc
xchg
cmp
cs
es
jbe
mov
sbb
xor
add
nop
loopne
subl
add
ljmp
adc
sub
cmp
jl
mov
out
inc
repz
xor
loopne
xor
out
or
push
leave
clc
mov
cwtl
cmp
adc
iret
jae
mov
add
sbb
push
adc
testb
lods
inc
lods
popa
mov
in
mov
pop
inc
adc
int
cmp
addl
pop
in
push
pop
frstor
jbe,pt
call
add
xchg
adcl
leave
inc
int
aam
push
mov
inc
cmp
mov
int
push
inc
and
dec
in
sub
or
jp
push
data16
push
daa
lcall
mov
cmp
jp
dec
jb
push
enter
inc
lods
inc
push
or
mov
xchg
int
xor
mov
stc
push
adc
or
cmp
mov
test
sub
aam
sub
mov
mov
int
arpl
lock
enter
push
outsb
daa
leave
push
in
ljmp
adc
mov
clc
mov
push
jmp
add
fildl
mov
dec
shll
sub
lret
pop
push
jmp
movb
xchg
sub
icebp
enter
mov
cwtl
testb
sbb
je
push
lods
inc
mov
mov
daa
data16
testb
mov
add
inc
jns
dec
pop
loope
mov
xor
push
scas
mov
sbb
enter
cs
mov
mov
jecxz
inc
into
adc
rol
outsb
jle
xor
ret
sbb
xchg
sbb
pop
es
jae
xlat
ret
rclb
jb
ljmp
rcl
push
addl
cs
ret
test
cld
lret
adc
mov
jo
into
xor
cmpsl
sub
or
sub
dec
or
push
xchg
std
sbb
xor
mov
mov
sbb
idivb
sub
add
fidivs
sbb
adc
xchg
sub
inc
inc
mov
pop
lea
adc
rcll
sbb
sbb
movsl
cmp
sbb
outsb
dec
shll
cltd
enter
mov
add
dec
push
das
repz
xor
pushf
jb
jg
insl
sbb
cmpsl
push
xor
test
inc
cs
jno
sahf
jne
cltd
push
mov
sbb
mov
mov
add
adc
xor
sub
lret
mov
in
cmpsl
out
test
cmp
in
mov
lcall
int
xchg
push
xor
sbb
stos
xchg
ret
enter
andb
cs
lock
lea
jecxz
dec
jp
push
sbb
addr16
inc
and
add
loop
mov
push
mov
add
add
fadds
push
push
mov
inc
jb
out
mov
out
shlb
dec
test
test
mov
int
xor
scas
mov
lret
sbb
push
test
testb
pusha
leave
inc
push
or
test
repnz
jo
test
lods
jns
mov
xor
or
in
cmp
test
mov
inc
roll
sbb
shrl
inc
loopne
arpl
sbb
or
inc
fs
aad
sbb
lcall
lods
mov
sub
mov
add
xor
shlb
fucomp
rcrb
leave
lcall
bound
das
ja
orl
lret
daa
push
push
pop
push
rcrb
or
mov
shr
aam
mov
pop
in
imul
and
lcall
mov
xchg
mov
xor
inc
inc
int
mov
iret
aam
pop
pop
sbb
pop
push
rcrb
mov
xchg
inc
scas
mov
negb
js
dec
cmp
add
xchg
sbb
stos
xor
int
fsubrs
cmpsb
loopne
or
dec
int
cmp
cmp
xchg
push
lcall
movl
aad
aam
and
push
das
imul
push
bound
add
and
jae
lea
mov
push
xchg
inc
xchg
xor
cmp
and
sub
test
les
int3
scas
inc
cmp
ljmp
out
adc
push
cmp
jmp
aad
or
shlb
inc
scas
mov
sub
jmp
sti
xchg
insb
call
ljmp
dec
ss
push
adc
incl
adc
dec
fsubs
mov
pop
jno
xchg
mov
in
push
xchg
mov
cli
hlt
scas
sbb
jmp
jb
inc
jge
push
in
nop
lret
loope
je
pusha
adc
push
inc
sub
popa
aam
into
xor
enter
popa
sbb
push
mov
mov
mov
shl
fdivrs
sbb
loop
pop
mov
adc
inc
std
aad
xor
jp
jne
mov
inc
mov
jo
scas
les
jno
popl
sbb
movb
dec
mov
jbe
sbb
arpl
sbbb
sbb
add
stos
mov
dec
mov
cmc
fwait
add
inc
sub
sbb
imul
adc
testb
cmp
push
sub
jno
scas
lcall
shlb
outsb
lods
es
sbb
mov
pusha
and
mov
push
cmp
mov
mov
fsubrs
sbb
push
push
aaa
push
imul
mov
and
push
add
inc
jae
dec
sub
andl
ss
lods
mov
push
js
pop
ljmp
and
push
imul
and
loopne
ret
ret
cltd
push
popf
cmp
push
sarb
xchg
cwtl
loop
out
lahf
mov
mov
clc
jl
int
mov
jle
jae
mov
jae
and
in
inc
sbb
int
sub
inc
jo
dec
cmpsb
or
or
hlt
adc
pop
aam
xchg
test
push
xor
into
adc
push
push
and
stos
out
aam
sbb
cmpl
loop
rcrl
insl
imul
add
xor
mov
jg
idivb
push
mov
push
mov
add
into
adc
cld
pop
xor
jmp
popa
inc
aam
scas
or
jno
es
js
add
pop
loop
push
rol
shll
stos
out
sbbb
cmp
lret
outsb
inc
cmp
fldl
or
jae
movl
cltd
sbb
in
ljmp
cltd
push
lods
mov
jl
mov
mov
ljmp
hlt
loop
es
xor
add
ss
mov
jnp
ljmp
xor
cwtl
lcall
fimuls
out
lea
mov
jo
sbb
pusha
sub
mov
scas
dec
aas
jae
add
in
adc
orl
dec
mov
pop
cmpsl
loop
push
addr16
sub
jmp
scas
cltd
sub
cld
jnp
lea
dec
rcrb
js
cwtl
xchg
dec
add
push
aaa
push
lret
jb
fcomps
mov
push
scas
into
jo
pop
into
pop
notb
xor
mov
adc
mov
adc
jae
or
or
add
lcall
push
cmp
mov
daa
dec
stos
pop
setae
cmp
lcall
mov
loope
xchg
addl
sbb
push
add
sbb
push
rclb
push
xchg
pushf
xor
rcrb
out
stos
inc
sbb
mov
cmp
mov
sub
mov
insl
push
ret
pop
dec
mov
xchg
mov
shlb
or
and
popf
inc
int
mov
jno
sub
in
or
fiaddl
push
fs
push
add
jo
stos
mov
sar
cli
scas
or
lock
mov
mov
call
or
fisubl
aas
dec
inc
add
icebp
push
enter
xchg
jp
ja
sbb
cld
push
sub
jmp
add
ss
fimuls
sahf
mov
lahf
add
and
inc
pusha
shlb
mov
in
mov
cmpsl
iret
xchg
dec
loope
xor
push
or
mov
nop
cmp
cmp
inc
and
insb
sbb
mov
add
sarl
add
scas
jg
push
pop
cmp
movl
in
push
xlat
loop
mov
and
in
xor
sub
roll
es
loope
repnz
add
fimull
add
neg
movsl
aam
jb
cltd
aam
and
int
lods
jo
lock
pop
xchg
mov
cmpsl
rclb
sbb
jge
inc
or
cmp
lods
add
jg
mov
mov
adc
sbb
ret
pop
mov
xchg
orl
insl
adc
mov
and
das
lcall
dec
sarb
cld
jmp
inc
sub
lcall
push
or
aaa
or
or
test
ret
push
xor
xchg
xchg
mov
cmp
mov
cmpsl
test
shlb
push
bound
enter
push
mov
push
int
mov
mov
aad
leave
sub
test
adc
call
jbe
push
and
gs
add
leave
lcall
inc
adc
dec
das
and
add
loopne
leave
pop
jne
xchg
mov
daa
xchg
xor
cmpsb
push
cmp
sub
or
loopne
jae
adc
mov
jo
xchg
int
ljmp
cs
in
jae
mov
pop
test
adc
rorl
cli
pop
test
mov
cmpsl
and
dec
ljmp
pop
push
sbb
out
repnz
push
std
jns
add
mov
or
scas
sahf
stos
push
dec
in
inc
xor
pusha
inc
iret
subb
fsubrs
in
repnz
push
dec
add
sbb
sbb
add
adc
ljmp
inc
pop
incl
xor
mov
push
lock
fiadds
or
mov
imull
xor
inc
mov
pop
push
testl
pop
jno
cs
mov
sti
in
jno
adcb
loopne
add
or
mov
dec
fwait
scas
pop
sbbb
mov
or
mov
cli
es
std
adc
cli
add
adc
outsl
mov
adc
add
mov
push
push
jo
das
call
pop
mov
in
adc
pop
mov
inc
mov
mov
dec
insb
shrb
aam
test
mov
jg
push
push
push
sbb
leave
test
loope
pop
push
lock
jae
add
insl
ds
insb
in
or
jo
mov
inc
test
add
daa
fs
lret
inc
arpl
push
or
nop
mov
mov
pushf
dec
popa
push
sbb
pop
jbe
int
in
dec
fidivrl
test
sbb
jo
inc
int3
roll
lcall
in
xor
inc
add
lahf
sbb
fisubrl
sbb
or
jo
cmp
in
nop
sbbl
pop
jno
mov
aad
in
imul
sbb
mov
sarl
pusha
jb
mov
and
rorb
add
mov
aaa
and
cs
mov
shlb
lcall
enter
inc
cmp
flds
mov
test
mov
mov
jb
adc
and
inc
cltd
cmp
inc
push
and
mov
cmpsl
pop
push
xor
aaa
xlat
xor
mov
cvtps2pi
imul
add
adc
pop
inc
lea
xchg
pop
in
loopne
out
pop
outsb
cmp
push
or
cltd
and
push
inc
repnz
leave
outsl
jo
sbb
sbb
adc
adc
push
lea
cmp
xchg
lcall
mov
and
bound
push
cs
and
roll
adc
add
mov
push
cmp
aam
xor
mov
push
cmpsb
push
xchg
dec
or
fiadds
incb
inc
mov
mov
push
add
sub
mov
mov
loopne
push
mov
rclb
das
pop
cli
mov
in
or
sbb
in
adc
sub
xchg
cli
fstps
cmp
add
in
rorl
add
adc
adc
rcll
ja
or
and
xor
mov
pop
inc
and
ljmp
jmp
cmp
aad
int3
dec
dec
sbb
adc
jmp
dec
dec
inc
pop
mov
and
lock
sti
mov
jne
outsl
add
mov
pop
pop
pop
sbb
ds
cld
xor
or
mov
fldcw
out
stos
out
lds
sub
dec
sub
xchg
sti
and
dec
clc
push
jb
fnstenv
dec
aad
int3
fadds
and
xchg
and
push
jmp
and
enter
mov
cmp
stos
mov
xchg
sub
das
rorb
jmp
iret
sbbb
bound
mov
subb
xor
mov
sub
cmp
cld
and
adc
inc
cld
sti
or
sbb
ja
cmp
cmpsb
dec
mov
andb
jae
xchg
rcrl
gs
out
xor
mov
dec
jae
jp
add
data16
fiaddl
mov
mov
xchg
adc
push
add
insl
cmpsl
mov
mov
out
idivb
test
jo
mov
loop
lds
push
les
xor
mov
push
mov
mov
insb
cmp
ljmp
push
aam
loop,pn
jle
mov
test
push
scas
mov
orl
fidivs
xor
or
cmp
jnp
in
pop
scas
cltd
pop
inc
pop
cltd
sbb
cltd
jb
mov
orb
aas
jne
dec
nop
stos
sbb
leave
sub
jne
adc
mov
xor
mov
sbb
mov
cs
mov
push
adc
into
add
stc
cmp
jne
aam
fisttps
fstpl
mov
and
aam
cmp
mov
add
loopne
dec
ds
jb
pop
rclb
cmc
adc
sub
push
test
add
aaa
sub
test
xor
scas
ret
push
mov
xchg
stos
adc
adc
add
sbb
loope
addl
lret
pop
test
mov
xor
test
jg
adc
push
lret
dec
xor
pop
dec
sub
and
lds
inc
inc
sub
std
gs
jbe
mov
inc
int
loop
pop
and
mov
rclb
rcrb
cmp
scas
dec
nop
addl
inc
xor
ljmp
cli
arpl
or
adc
inc
icebp
aam
mov
ja
inc
cld
xchg
push
imul
ja
scas
ds
jmp
addb
loop
jo
enter
loop
add
aam
pop
loopne
push
dec
mov
sbb
test
loopne
pop
bound
inc
into
adc
imul
xor
enter
push
push
push
rorb
popa
jg
ficompl
pop
shrl
cltd
dec
cmp
aam
xchg
mov
lret
mov
in
inc
xchg
sub
data16
cmp
mov
aam
lea
inc
ret
mov
push
sub
or
jb
mov
pop
test
and
es
inc
sarl
adc
pop
mov
add
and
out
add
mov
hlt
mov
or
mov
lea
add
out
faddl
push
cltd
xor
insb
mov
add
push
scas
sbb
int3
adc
sbb
sbb
and
add
inc
stos
dec
cltd
or
xor
or
jae
lcall
cmpsl
cli
jb
xlat
xor
adc
mov
enter
lret
jo
mov
xchg
stos
adc
cltd
pop
mov
or
sub
jb
mov
test
fdiv
loop
xchg
add
jae
add
aad
stos
jne
into
mov
or
ret
mov
shlb
and
sbb
adc
scas
xchg
pushf
adc
push
or
jne
lcall
xchg
adc
scas
mov
dec
cld
scas
add
adc
dec
mov
notb
mov
add
jns
xor
dec
mov
push
and
xor
jg
stos
les
flds
mov
cmp
inc
test
jge
and
mov
imul
pop
mov
adc
roll
loopne
and
int
adc
cmp
daa
dec
adc
or
sahf
shlb
xor
mov
mov
mov
sbb
mov
je
add
push
push
push
pop
mov
mov
pop
bound
pop
add
addr16
in
loop
jns
adcl
add
pop
or
adc
cmp
mov
and
add
pop
aam
pusha
jb
pop
fildl
xchg
mov
std
add
push
mov
xchg
jo
add
rolb
sbb
or
loope
inc
movsl
enter
push
or
orb
in
cmp
mov
adc
xor
jmp
out
mov
je
mov
jmp
call
jb
shl
sub
jne
xor
inc
icebp
and
std
mov
inc
sub
xor
xor
in
pop
add
xor
movsl
xor
sub
hlt
jo
lcall
or
or
mov
cltd
test
sub
dec
test
pop
push
jbe
adc
xchg
mov
xchg
aad
cmp
or
push
int3
push
scas
lcall
addb
out
orl
sub
stos
mov
cmpsb
scas
lods
xchg
mov
popa
enter
fcomps
enter
orl
sub
xor
xchg
insl
lods
push
push
push
pop
scas
add
mov
jne
neg
sti
push
aam
sub
call
scas
mov
mov
mov
or
in
cwtl
jg
lcall
les
adc
sbb
inc
mov
add
test
or
xlat
out
mov
inc
test
sbb
mov
cmp
or
add
push
or
add
test
sub
xchg
rcrb
adc
ficoms
popf
dec
movl
dec
xchg
out
add
incl
jae
pushf
mov
xor
and
or
fistpll
adc
and
sbb
mov
push
push
dec
subl
sub
ljmp
xchg
xchg
or
stos
js
pusha
jb
pop
adc
jo,pt
or
sbb
dec
in
mov
add
jo
jae
pop
int
sbb
sub
es
stos
iret
adc
inc
xor
scas
aaa
push
loopne
out
jle
cmp
add
lds
or
pop
lock
mov
lea
push
fbld
rcrl
rolb
rcll
aam
pop
cmp
stos
iret
aad
add
mov
mov
cmpsl
lret
xchg
mov
inc
test
push
mov
or
jne
push
fbld
lds
or
out
adc
mov
lea
cmp
jno
mov
loope
ljmp
cmpsl
lea
sbb
jb
rcl
sub
mov
rcll
ljmp
push
pop
movsl
shrb
add
enter
test
mov
push
pop
mov
sub
orb
lcall
mov
decl
fisubl
jo
add
sysret
es
movb
xchg
stos
shll
push
ljmp
call
push
or
lods
roll
rolb
add
add
xchg
add
or
mov
xchg
mov
pop
addr16
push
push
popa
outsl
mov
add
sarl
shlb
or
or
aaa
push
inc
clc
push
daa
add
push
push
xchg
push
loop
pop
sub
push
dec
stos
or
adc
sub
xchg
mov
mov
sub
adc
iret
adc
sbb
sahf
fnstcw
or
add
jae
out
cld
loopne
jae
mov
xchg
inc
cs
xor
jae
call
pop
adc
sbb
xor
push
add
mov
mov
andl
jecxz
inc
loope
shrl
push
add
dec
mov
lds
inc
fwait
xchg
ljmp
sbb
and
jl
lcall
sbb
cmp
jo
in
sub
shll
aad
jb
mov
lods
or
mov
hlt
sub
fstl
push
out
xorl
xor
sahf
mov
aam
in
mov
push
lea
cltd
add
dec
or
adc
aad
sbb
push
sbb
clc
ds
scas
out
inc
pop
fidivl
inc
scas
and
push
scas
add
inc
bound
add
inc
adc
out
loope
mov
cmp
pop
xor
mov
sbb
jo
into
inc
and
nop
sub
nop
adcl
push
or
sub
mov
push
out
loopne
adc
pop
add
pop
mov
dec
mov
inc
jl
sbb
and
jmp
in
jns
mov
xchg
and
jae
push
hlt
popa
push
mov
push
in
test
cmp
xchg
cmp
popf
cmp
int
adc
xor
pop
addr16
and
enter
cltd
js
push
shlb
cmp
xchg
stos
mov
int
lret
or
xor
xchg
xor
mov
jnp
mov
xchg
daa
push
cmpsl
inc
xor
jge
inc
jmp
sub
jo
or
jmp
dec
and
mov
fdivrs
outsl
lds
adc
idiv
mov
mov
imul
and
add
or
dec
popf
incb
cmp
into
adc
mov
add
sub
jg
call
sub
add
ds
inc
sbb
add
mov
pop
jo
dec
popa
mov
inc
lcall
add
cli
sub
sub
adc
test
push
int3
test
or
pushf
push
xor
popf
shr
das
ffree
addr16
jmp
push
add
xor
push
mov
sbb
cltd
popf
sbb
cmpsb
xchg
pop
scas
sbb
xchg
rcll
scas
adc
repz
xor
int
push
inc
ret
push
pusha
add
mov
push
imul
cmp
dec
jecxz
adc
inc
in
cmp
pop
pop
aaa
cmp
test
call
xchg
in
pop
lock
rcrl
jbe
inc
sbb
daa
ljmp
push
add
sbb
js
jb
cmpsl
jae
je
rorb
mov
pop
rolb
into
in
cmp
dec
pop
and
cmp
scas
testb
addb
sbb
add
mov
dec
popa
mov
popa
adc
cmp
adc
lret
xchg
popa
sbb
mov
xor
mov
leave
mov
sbb
scas
enter
adc
rcr
jmp
xchg
aad
fcoml
or
sub
xor
pop
jae
push
lret
test
xor
lcall
test
jl
jae
push
lret
and
fs
or
mov
les
jp
jb
cmp
out
loopne
cmp
test
cmpsb
ljmp
sub
mov
enter
sarl
stc
or
daa
sbb
hlt
loop
sbb
or
or
in
xchg
in
testl
loope
test
mov
jle
sahf
mov
mov
insb
ss
fidivrs
fs
add
and
fstps
sub
or
mov
xor
jo
mov
or
je
adc
push
inc
aam
or
subl
push
mov
movlps
fsubl
loopne
int3
or
fildll
push
add
adc
sbb
jb
nop
incl
pusha
or
sub
cmp
icebp
int
ret
lods
push
or
push
and
inc
aas
mov
mov
and
push
push
mov
les
jo,pn
dec
sbb
mov
pop
lea
cmpsl
inc
aam
pop
into
call
pop
dec
push
mov
mov
cmp
and
mov
dec
inc
daa
stos
adc
hlt
sbb
xor
faddp
push
cmpsl
pop
xchg
movsl
pop
jge
sbb
inc
xor
push
loope
cs
or
xor
cltd
or
and
insl
in
or
scas
mov
pop
xchg
adc
sub
lods
add
inc
rclb
inc
xor
xor
mov
ljmp
test
or
les
shll
lea
push
into
shll
stos
enter
shrb
in
adc
test
or
sub
cwtl
or
push
lahf
ljmp
sbb
push
xlat
lcall
roll
jmp
mov
cmp
shll
aam
xor
in
xchg
sub
cltd
xor
es
fdivrl
leave
subl
stos
jb
inc
sub
sub
inc
adc
ret
inc
xchg
test
sbb
push
add
inc
icebp
sub
sbb
dec
adc
out
sbb
popf
and
pop
les
pop
into
add
cmova
sets
or
adc
add
adc
cld
xchg
icebp
push
rolb
fsts
push
xor
or
sub
xor
das
xchg
imul
rorl
ljmp
mov
push
mov
mov
cmp
jge
and
pushf
gs
and
fwait
sub
call
add
pop
stc
repnz
push
push
popa
cmpsl
jo
push
push
push
pop
mov
orl
pop
mov
lret
test
inc
pusha
add
dec
xchg
push
inc
idivb
dec
adc
sbb
mov
nop
jne
in
lret
jp
dec
xchg
fwait
repz
add
cmp
add
ss
inc
popa
inc
mov
inc
jae
andb
inc
call
push
or
andl
cltd
pushf
je
jge
fisubrl
mov
int
fucomi
aaa
add
inc
cmpsb
movsb
adc
insb
nop
add
sub
or
pop
pop
mov
lret
jmp
mov
push
adc
sahf
xchg
fs
outsl
lret
add
repz
into
mov
add
sbb
enter
mov
mov
pusha
sbb
jae
ljmp
xchg
fsts
jmp
sub
and
test
scas
cld
into
mov
sbb
out
loopne
pop
mov
jo
jo
adc
jmp
add
jo
aaa
mov
imul
mov
rclb
sbb
mov
lret
loope
call
xor
setns
xor
xor
fs
hlt
pop
cltd
jo
sbb
push
xor
mov
sbb
jmp
pop
cmp
mov
xor
push
pop
scas
add
xor
jb
cmp
mov
shl
in
ror
test
pop
or
mov
rcrb
xor
and
push
imul
outsl
inc
test
push
xchg
lret
aam
aam
xchg
lcall
sbbb
cmp
in
ror
subb
cmp
shll
imul
aaa
push
inc
cmpsb
fnstcw
xorb
xacquire
sbbb
mov
sbb
or
jno
mov
jp
rcrb
adc
add
jo
call
mov
xor
fisttps
gs
inc
loopne
xchg
mov
orb
xchg
movb
stos
and
lds
int
movsb
lcall
in
repnz
adc
or
xchg
pop
push
mov
sub
mov
mov
adc
lahf
fwait
rcll
add
jae
test
inc
mov
fsubrs
cltd
xchg
ljmp
sbb
adc
test
mov
ret
popa
in
pusha
sub
into
rorb
xchg
mov
push
xchg
mov
pop
xor
xorb
lret
loopne
sbb
repnz
jle
mov
xchg
dec
mov
pusha
enter
fcmovu
push
or
aaa
add
in
adc
xchg
cmpsl
inc
and
pop
cltd
mov
pushf
pop
int3
mov
loopne
sbb
jno
cmp
and
dec
or
sbb
stos
inc
cwtl
sbb
mov
adc
popa
ret
in
andl
pop
xchg
adcl
pop
popa
or
push
dec
sub
cmp
xor
xchg
pop
pop
scas
and
adc
jecxz
rolb
push
mov
add
loop
xchg
lea
xor
add
orb
addl
loopne
lds
in
pushw
pushf
pop
xchg
in
and
ss
test
cwtl
sub
xor
pop
mov
xchg
subl
in
pushf
test
cmp
xor
sub
xor
push
orl
mov
sub
outsl
test
pop
test
jle
and
mov
rcr
data16
xchg
in
xchg
in
cmp
inc
rcrb
push
inc
imul
into
jo
adc
ja
or
lcall
push
push
call
and
ljmp
jge
pop
jae
cs
mov
ds
pop
fs
test
adc
pop
or
or
rolb
push
and
sbb
push
sarl
cs
fildll
cmc
mov
shlb
test
subb
push
icebp
inc
into
in
adc
mov
sub
insl
fistps
gs
add
cmp
pop
mov
cmpb
into
stos
xchg
loopne
shr
jge
scas
ret
or
xorb
dec
loopne
movsl
pop
cmpsl
add
loop
adc
jmp
adc
sti
cs
dec
mov
xor
pusha
jo
flds
cmpsb
xchg
fisubl
fldenv
cmp
add
and
inc
outsb
sub
jp
sub
sbb
es
push
and
out
xchg
mov
jge
inc
mov
adc
add
in
mov
enter
add
xchg
mov
inc
loopne
hlt
push
dec
add
cmp
es
int
add
push
add
dec
lret
out
cld
sahf
and
aad
sbb
test
mov
jb
nopl
inc
mov
xor
int
sbb
es
mov
cmp
push
lea
mov
xor
je
loopne
loopne
jmp
stos
cmp
push
lea
scas
aam
cld
xor
out
xchg
adc
ret
lahf
in
cmpsb
or
cmp
clc
pop
ljmp
lods
lret
adc
jge
dec
hlt
sbb
aam
mov
out
movsl
enter
mov
push
adc
add
add
loopne
sub
shrb
jl
fs
push
test
icebp
sub
pop
adc
lcall
incb
jnp
add
dec
push
sbb
add
dec
push
add
mov
ljmp
xor
or
push
add
js
mov
dec
cmp
in
jl
push
cs
mov
sub
xlat
test
jb
rclb
add
rclb
scas
xor
cmp
lea
adc
xor
int
sub
fldcw
xor
stc
sub
add
sub
fcomps
loope
call
add
int3
fs
add
inc
lea
push
ret
pop
cmp
gs
gs
inc
xor
mov
mov
mov
push
popa
push
adc
sbb
fldl
mov
pop
in
sbb
fs
sub
push
mov
gs
push
insl
mov
adc
add
movlps
inc
fcmovnb
loopne
xor
test
xchg
sub
xor
dec
es
sub
inc
lea
and
sbb
inc
pop
jae
hlt
cmp
cwtl
cmp
mov
in
add
pop
test
hlt
sbb
enter
in
fucom
jb
shrl
jecxz
call
jmp
dec
cltd
xor
test
cmpsl
cmc
pop
test
lcall
push
mov
dec
loope
add
cmp
jae
cmp
leave
cmp
mov
in
inc
xchg
lds
cmp
sahf
daa
add
xchg
loop
jle
inc
sub
adc
xchg
push
mov
lcall
pop
adc
or
adc
mov
es
and
shll
ret
xor
int
push
push
push
movsb
xor
data16
gs
hlt
dec
das
jns
dec
xchg
jae
jle
clc
ljmp
or
subb
iret
cmp
mov
and
jecxz
xor
ljmp
inc
lret
pop
movsl
jp
fsubp
pusha
sub
inc
mov
ror
fcoml
mov
cli
xchg
or
xor
mov
scas
inc
fildl
push
aas
adc
pop
mov
push
mov
bound
enter
xorb
jbe
mov
mov
repnz
mov
leave
dec
pusha
mov
sbb
call
loop
es
adc
repnz
mov
mov
inc
pop
mov
insl
mov
in
xchg
xchg
xchg
int
or
test
pop
xor
add
adc
inc
mov
jl
sbb
dec
push
jbe
mov
pop
test
cmpsb
rcrb
insb
es
lea
iret
push
mov
cmp
add
xor
adc
rcl
insb
xchg
aad
pop
dec
jae
enter
ljmp
jbe
inc
subb
je
or
jno
and
or
jo
shlb
lcall
leave
sbb
push
fucom
lea
sbb
scas
adc
lcall
cwtl
pusha
and
loope
push
xchg
push
iret
push
lcall
ljmp
cltd
and
or
jmp
rorb
out
jle
mov
xchg
sarl
jo
pop
test
sbb
hlt
mov
cmp
cmpsb
add
add
cmpb
and
cmp
sub
jo
pop
into
inc
rcll
sahf
mov
push
xlat
leave
addr16
push
inc
data16
lods
sti
fidivrs
push
add
test
push
mov
or
gs
sbb
hlt
push
adc
inc
aam
push
fdiv
pop
xchg
xor
enter
addb
adc
pusha
in
push
mov
xor
loope
hlt
test
negb
ljmp
mov
stos
adc
das
in
mov
cs
add
movb
ret
call
sbb
dec
test
adc
lcall
mov
int
subb
sbb
push
jp
inc
mov
cmc
enter
sbb
adc
mov
mov
insl
addb
outsl
and
jae
test
cmpsl
mov
xor
cltd
dec
xor
add
mov
fs
pusha
or
out
cwtl
push
jbe
ret
xor
addr16
xor
nop
ret
push
dec
insb
adc
in
xchg
jne
mov
sbb
and
mov
lret
xchg
stos
fmulp
and
push
into
inc
out
popa
xchg
sbb
cmp
ret
or
fdivrl
pop
cmpsb
add
js
xchg
and
mov
and
sbb
pushl
push
and
and
cmpsb
dec
lea
in
pop
inc
es
mov
cmp
dec
adc
je
fdivrs
xor
popa
mov
mov
aam
roll
cmp
pop
orl
mov
cmpsb
enter
int
lods
cmp
scas
inc
pop
xchg
in
add
push
inc
inc
xchg
ljmp
aam
mov
out
lcall
lods
addl
loop
push
sbb
and
int
push
sub
inc
adc
mov
xor
aad
or
sbb
rclb
adc
fbld
scas
dec
mov
leave
gs
sub
xor
or
in
sbb
jb
sub
and
sbb
push
js
and
inc
or
jae
enter
inc
adc
xchg
mov
mov
push
mov
xchg
loopne
repnz
ljmp
push
mov
gs
mov
add
dec
das
out
notl
push
lea
jmp
fs
cmc
xchg
pop
inc
push
cli
mov
jp
outsl
or
enter
or
mov
xor
iret
add
out
fstl
in
add
mov
or
sub
sbb
roll
dec
inc
mov
add
arpl
pop
scas
call
push
mov
imul
xchg
call
push
sub
xchg
fs
mov
push
pop
push
cmpsl
jecxz
inc
loopne
push
add
sbb
rorl
and
inc
jnp
push
mov
push
pop
shr
cs
jb
data16
push
cmpsb
pop
imul
sub
pop
xchg
xor
cmpsl
pushf
mov
lcall
push
into
adc
loope
movsb
sbb
pop
ret
rorb
push
cld
or
mov
ljmp
or
ss
sub
into
enter
mov
cmp
push
push
test
adc
loop
xlat
nop
jp
dec
adc
pop
cmc
xchg
and
push
sbb
pop
or
ljmp
jb
or
xchg
mov
sub
adc
push
inc
mov
ds
inc
popa
test
add
jecxz
xchg
leave
jne
push
xchg
fisubrs
mov
mov
add
stos
push
outsb
aas
jge
or
lcall
cmp
gs
xchg
nop
rcll
jb
sub
rcl
loop
push
sbb
mov
pusha
loop
inc
pop
leave
push
sbb
pop
mov
and
pop
addl
fistpll
btsl
test
jmp
push
call
cmp
push
cmp
mov
jae
adc
cltd
or
jmp
add
push
lcall
jo
repnz
sub
xor
out
arpl
pop
add
push
push
sub
or
sbb
pop
or
mov
and
push
sub
or
pop
bound
mov
adc
xchg
mov
cld
ja
lret
lds
out
int
push
mov
add
fadds
dec
jns
xor
into
or
lcall
jle
jmp
into
lea
xor
lcall
push
popf
fistl
cs
push
pop
sbb
xorb
clc
push
ljmp
mov
loop
mov
inc
add
sbb
jo
xchg
fmuls
xor
mov
push
push
push
lods
adc
pop
notb
add
ljmp
xor
lcall
pushf
cmpsl
push
shl
loopne
push
jae
jnp
lcall
adc
xlat
pop
cmp
stos
pop
push
jmp
lcall
aam
lea
mov
fs
add
popa
xor
inc
cmp
cmp
roll
mov
push
cwtl
add
adc
es
push
pop
inc
lods
mov
mov
stos
sbb
push
ret
fimuls
sti
mov
jle
cli
cmpsb
add
dec
xchg
jae
dec
in
cli
xor
ret
jle
in
pop
xchg
ret
or
dec
dec
pop
cmp
je
inc
jae
xor
pop
xor
inc
shll
testb
das
pop
inc
or
mov
ss
adc
lcall
jb
test
jae
shr
loope
adc
push
and
cmp
push
in
xchg
out
ljmp
mov
in
and
mov
sub
add
imul
mov
add
cmpsb
out
pop
xor
pop
addb
in
push
inc
cmp
je
scas
add
jecxz
dec
xor
loopne
stos
mov
fwait
lea
xor
in
push
cld
sbb
cltd
xor
fs
cld
repz
into
inc
cmp
sbb
sub
enter
les
pop
push
jae
mov
outsl
xor
lods
cmp
shll
xorb
mov
inc
cli
lods
pop
rorl
clc
adc
add
inc
mov
sbb
sub
mov
adc
fsub
cmp
push
test
sbb
xchg
xor
test
aam
push
testl
mov
cmp
jmp
jl
mov
mov
mov
sarb
shlb
mov
jo
sbb
loop
leave
in
jae
ret
dec
in
xchg
adcb
leave
jmp
imul
mov
xchg
cmp
and
and
scas
mov
push
movsb
jbe
das
orb
adc
cmp
enter
cmp
adc
and
testb
dec
js
jae
in
inc
cmp
inc
int
push
xor
or
pop
fsubrl
sbb
adc
mov
or
or
sbb
std
push
cmp
or
cld
mov
stos
cmp
xchg
jae
lret
push
lock
data16
rcll
es
xor
ljmp
adc
cmpsl
hlt
movsl
ja
xchg
and
jle
cmp
xor
inc
jae
call
loop
jp
je
jae
mov
icebp
jbe
lret
push
scas
stos
dec
cmp
adc
rcl
and
mov
mov
dec
xor
jnp
mov
fdiv
mov
mov
pusha
mov
outsl
addl
lret
or
dec
add
mov
out
xchg
push
lea
or
sti
mov
lea
sub
push
or
push
sub
loop
and
cmp
mov
sbb
sub
sub
aad
repz
pop
cmp
or
mov
xchg
clc
ret
sarb
jno
add
cmp
lea
adc
xchg
fwait
and
xchg
jns
int
das
lcall
cs
pop
mov
aam
jae
sbb
inc
pop
out
fisubl
outsb
adc
inc
mov
movsl
lret
mov
ret
scas
inc
inc
sub
dec
jle
outsb
movsl
or
inc
fistps
gs
test
jbe
push
movsl
xor
xchg
push
mov
hlt
push
repz
fldenv
int
rolb
dec
cmp
and
adc
adc
inc
sbb
int
push
add
add
adc
mov
inc
push
jp
pop
fsts
sbb
jbe
pop
mov
subb
nop
nop
adc
add
sub
xchg
push
mov
sub
mov
jbe
dec
push
je
loop
and
xor
repz
add
push
ret
aam
xchg
mov
dec
cmp
cld
inc
lea
dec
bound
cmpsb
out
xlat
adc
aam
add
xor
fs
jg
cmp
inc
in
push
shlb
cs
adc
shrl
push
jmp
mov
cmp
xchg
enter
pop
and
shrb
jo
mov
add
inc
clc
jle
mov
jo
aam
mov
sub
idivl
lcall
sbb
add
fsubl
dec
cwtl
sbb
movsb
adc
mov
scas
mov
in
inc
pushf
mov
adc
jl
mov
pushf
adc
fs
mov
xor
mov
jns
imul
lods
inc
das
pop
pop
test
test
mov
fs
sbb
mov
xor
xchg
lahf
cmp
jl
hlt
push
fsubrl
push
aaa
testl
imul
testl
lcall
xorl
data16
in
daa
pop
xor
aas
or
xor
jecxz
pushf
add
mov
jb
out
sbb
test
addl
push
xor
lods
or
int
mov
jle
in
push
int
push
push
pop
mov
stos
mov
add
inc
xor
ja
push
test
jle
push
popf
les
lret
jbe
push
mov
enter
pop
cmp
out
insb
inc
push
or
call
ret
add
nop
lcall
push
xor
xadd
and
cmp
cli
push
add
adc
lahf
xor
jns
or
std
pop
int
clc
mov
and
jmp
jmp
push
fmuls
in
mov
sub
or
shll
push
out
aas
push
rorl
add
pop
sbbb
testb
push
loopne
movsl
sub
push
shlb
aam
cmc
sbbl
imul
or
es
sub
mov
ja
xor
sbb
xlat
or
jo
or
push
sbb
or
and
pop
jne
sub
sub
data16
dec
add
dec
popa
push
pop
inc
xor
sub
xor
add
mov
pop
cmp
addr16
add
fs
ljmp
push
adcb
shlb
ljmp
mov
loopne
add
sar
sbb
mov
nop
sbb
stos
leave
xchg
jecxz
inc
in
push
cmpsl
push
inc
pop
std
cmp
mov
add
adc
stos
mov
sbb
lret
jno
push
pop
push
shl
dec
es
loope
cmp
xor
mov
cmp
add
aam
jae
or
adc
xchg
imul
xor
hlt
lcall
mov
popa
cltd
test
stos
push
sbb
adc
jns
inc
das
mov
push
or
pushf
icebp
std
pusha
push
mov
repnz
imul
dec
adc
imul
dec
mov
lcall
xchg
popf
call
imulb
add
push
dec
xchg
test
mov
xchg
loopne
pop
cmp
mov
loop
inc
dec
cmpsb
into
xchg
push
ljmp
jbe
pop
push
loop
jge
test
sub
test
jg
xlat
push
xor
sbb
dec
xchg
or
inc
lods
mov
out
lcall
mov
xchg
and
ret
ljmp
fcoml
push
jmp
and
gs
sbb
je
iret
push
enter
dec
pushf
orb
pop
scas
jg
icebp
add
ret
inc
dec
jns
dec
pop
addr16
pop
cmp
pop
cmp
aad
jno
or
adc
xor
xchg
and
ret
mov
loopne
loopne
push
jae
sub
or
inc
cmpsb
jb
add
mov
or
lock
push
arpl
call
cmp
adc
add
ret
lods
mov
or
or
orb
add
dec
push
ret
inc
mov
pop
dec
sbb
adc
popa
ret
sahf
out
add
and
cwtl
lret
loop
cli
fiaddl
lret
das
out
dec
test
sbb
sbb
cmc
xor
inc
fwait
loopne
jecxz
mov
and
sbb
int
push
jno
into
inc
cmpsl
xchg
or
mov
jo
bnd
ret
dec
add
xchg
stos
xchg
sbb
and
pop
mov
adc
jae
xor
mov
mov
loop
mov
hlt
jle
stos
xchg
xorb
sbb
test
sub
push
cmp
xchg
popf
mov
test
enter
mov
lock
js
lea
testl
lods
xchg
pop
mov
cltd
xchg
adc
mov
jge
les
shl
dec
mov
lcall
aad
inc
hlt
pop
push
sbb
iret
xor
mov
mov
cmp
inc
or
dec
test
test
js
sub
xchg
fdivl
adc
or
cmpsb
push
mov
inc
jbe
pop
inc
orl
aam
icebp
mov
xor
add
add
in
cwtl
out
add
loope
sbb
mov
sbb
loope
scas
mov
into
hlt
inc
lahf
mov
sub
mov
push
sub
fsub
outsb
mov
test
sbb
bound
lret
xor
jo
mov
mov
inc
mov
in
jp
cmp
pop
cmp
xor
jo
pop
mov
jmp
out
and
inc
mov
rolb
enter
jmp
cs
mov
cmp
mov
movsb
adc
dec
pop
mov
xchg
and
jae
adc
xchg
sahf
aam
int
jae
xchg
xchg
and
fldt
inc
sbb
jns
mov
bnd
inc
mov
fwait
push
or
lods
push
stos
mov
jp
push
mov
push
and
inc
aaa
mov
push
loop
pop
cmpl
or
lret
push
cltd
cmpb
xchg
ficoml
or
adc
and
dec
push
out
xchg
fdivr
mov
and
sbb
adc
mov
jge
push
in
test
imul
rol
mov
rclb
jge
xor
jge
movsl
pop
mov
inc
adcl
xlat
pop
test
add
cmp
lahf
jle
negb
test
ja
xchg
movsl
add
jle
push
mov
test
cmp
cmp
xchg
loope
adc
xchg
mov
inc
add
cwtl
jb
cltd
or
add
push
xchg
adcl
lcall
cmpsl
leave
into
rorl
or
imul
sub
insb
add
stos
inc
mov
push
pop
and
cmpsb
xor
popf
inc
sbb
mov
add
xchg
stos
jo
and
outsb
mov
test
orl
push
outsl
and
pop
into
jae
pop
push
sub
jne
push
daa
rolb
cld
mov
pop
mov
scas
or
cmpsb
loop
add
aaa
jae
jo
add
inc
and
ret
dec
incl
xchg
iret
sbb
pushf
pop
mov
mov
or
mov
loopne
sbb
xlat
imul
and
adc
call
dec
xchg
aas
xchg
lea
push
cmp
lcall
xor
or
faddl
sbb
mov
add
jae
ret
or
dec
cmp
push
fs
test
mov
or
pusha
test
icebp
enter
aam
xlat
cs
sbb
cltd
mov
dec
xor
mov
jb
push
or
jp
xor
pop
xor
lret
add
test
mov
scas
or
sub
lock
lret
les
jo
xchg
subb
popa
repz
test
lret
dec
sbb
int
and
push
xor
cltd
loopne
xchg
sbb
cmp
lcall
mov
ss
push
push
jae
mov
or
mov
pop
pop
xor
fsubl
test
enter
popf
cmp
inc
mov
cmp
shlb
data16
inc
push
cmp
push
pop
das
inc
adc
jl
mov
and
xor
jbe
out
mov
xor
adc
cli
mov
push
and
push
mov
inc
ja
fwait
sti
rcll
xor
mov
rcl
inc
push
or
and
xor
add
mov
inc
out
roll
int3
ror
pop
push
pop
cs
mov
or
mov
repz
xor
ja
sub
rolb
cmp
xor
pusha
out
and
fdivl
add
and
test
xor
stos
sbb
fcmovb
add
or
add
fistps
lcall
mov
or
xchg
neg
or
sbb
ret
pop
ficomps
push
adc
pop
add
lcall
and
das
jne
sbb
mov
or
xor
jo
add
in
add
mov
repnz
pop
rcl
cld
dec
sub
xchg
leave
aam
negl
and
sub
mov
mov
cmpsb
push
xchg
fabs
add
dec
inc
in
enter
cmp
shrl
sbb
adc
mov
fbstp
das
pop
jae
in
mov
sub
aas
aam
push
xchg
out
outsl
push
es
shlb
insb
stos
inc
into
mov
leave
adc
hlt
and
shll
add
fstpt
dec
lret
push
push
nop
xor
outsl
addr16
jb
sbb
xlat
mov
test
icebp
push
cmpl
mov
sub
inc
subb
xor
and
mov
movsl
cs
ret
out
jb
cmpb
adc
mov
sbb
xchg
mov
lds
rcl
add
out
and
sub
icebp
in
or
mov
popa
mov
mov
cmpsl
or
and
jl
sbb
mov
sti
out
pop
pusha
mov
insl
mov
add
mov
or
push
push
sub
lcall
mov
sub
adc
push
lods
xor
scas
lret
sub
and
sub
in
dec
iret
add
xchg
sbb
pusha
xor
push
out
inc
or
add
andb
dec
mov
pop
inc
ja
inc
lods
mov
or
or
stc
mov
cli
pop
sti
mov
andb
lret
jge
or
fisttpll
lds
testl
ljmp
push
mov
push
add
add
mov
push
push
pop
lcall
stos
call
add
sub
sub
sbb
mov
mov
sbb
loop
enter
or
mov
lods
push
lock
mov
dec
addl
iret
xor
lea
push
sahf
incl
lods
ljmp
aas
sub
ret
sub
int
or
out
loope
shlb
xor
cmp
cmp
nop
stos
scas
mov
and
gs
pop
cmpsl
or
jb
imul
jb
sub
outsl
mov
pushf
in
and
jo
jecxz
insl
mov
push
nopl
push
sbb
mov
push
int
lcall
je
sub
adc
out
stos
mov
cltd
sub
jl
dec
xchg
test
int3
or
rorl
xor
mov
cmp
cmp
dec
cmp
subl
push
iret
xchg
js
loopne
lock
xorl
and
pop
push
mov
sub
push
adc
data16
adc
lods
adc
mov
push
mov
adc
imul
scas
and
jo
subl
in
stos
mov
and
test
pop
cltd
sub
sub
dec
add
sbb
ja
push
scas
push
xchg
xchg
ss
mov
inc
test
add
repnz
inc
lds
mov
jecxz
xor
xorl
cltd
or
dec
dec
jo
adc
sub
lret
cmp
sbb
shlb
ret
or
loopne
je
mulb
jbe
paddusb
push
xchg
lock
lcall
xor
in
cmc
dec
int
in
outsb
iret
cli
call
cmpsl
pop
jl
ret
inc
mov
out
cs
push
lock
in
or
orl
mov
in
push
pop
inc
pushw
mov
lretw
inc
scas
mov
add
add
and
dec
jne
jb
xchg
adc
inc
mov
add
xor
push
into
cmp
cwtl
pushl
lock
scas
loop
es
in
mov
mov
add
pop
out
aam
mov
xor
mov
addb
and
pop
imul
sbb
adc
test
inc
pop
stos
jle
loopne
pop
andl
cmp
dec
adc
subl
and
jb
idivb
test
jge
mov
loop
mov
iret
inc
mov
xlat
pop
sbb
rclw
iret
lds
add
dec
fadds
outsb
outsb
sbb
lcall
mov
lock
out
lcall
mov
scas
sub
add
ds
adc
enter
or
cmp
enter
imul
sub
aad
pop
inc
fld
add
ret
cmc
xor
movsl
mov
cmp
push
loope
lods
xor
in
leave
call
adc
call
or
and
adc
or
push
add
jo
adc
hlt
mov
lret
dec
fwait
sbb
mov
add
mov
add
adc
cmp
xchg
cli
loope
jno
and
pop
out
xor
lret
pusha
and
inc
xchg
test
jo
inc
lea
aam
sbb
cmp
lahf
and
gs
add
lea
xor
mov
xchg
push
inc
icebp
mov
jmp
sbb
sbbl
jmp
pusha
hlt
xor
sbb
test
pop
mov
push
test
cmpsl
mov
test
mov
fnstsw
dec
cmpsl
sbb
dec
scas
and
inc
sub
test
cmp
stos
mov
jo
mov
or
sahf
inc
fiaddl
sbb
pushf
leave
mov
inc
nopl
inc
add
sbb
insb
sahf
cmp
shl
iret
sbbl
pop
dec
inc
mov
add
call
fwait
in
mov
add
or
inc
fs
sbb
pushf
shll
and
and
in
mov
or
push
shrl
jne
mov
push
sbb
icebp
push
xor
jmp
shll
add
ljmp
jb,pt
mov
mov
adc
sbb
inc
test
push
pusha
dec
int
xor
ret
lea
mov
fwait
xchg
or
leave
int3
add
xor
cmc
lret
sbb
xchg
adc
jne
orl
xor
mov
mov
mov
dec
loope
aad
mov
das
inc
rcrl
jmp
mov
popa
leave
cmp
call
int
lcall
add
nop
add
and
add
stc
xor
fs
mov
or
daa
iret
sub
and
test
jmp
nop
leave
gs
in
or
and
jb
inc
cmp
push
cmp
into
sub
mov
stos
jns
fsubl
jle
and
enter
jg
imul
mov
sbbb
xchg
mov
roll
in
sub
xor
inc
jmp
mov
rcr
gs
dec
cmpsb
sub
xor
addr16
sub
mov
add
add
es
or
out
xchg
adcl
or
or
cwtl
sarb
sbb
xor
outsb
iret
push
cmp
dec
pusha
jne
pushf
or
fcmovnbe
sub
lock
mov
cmp
adc
test
sub
or
xchg
into
sub
mov
loope
dec
insb
adc
add
xchg
orl
lret
jl
ljmp
lret
mov
test
cmc
fsts
fsts
xchg
dec
pop
inc
popf
push
xchg
ss
inc
dec
mov
inc
pop
mov
sbb
push
jo
lret
cmpsl
add
insl
cs
sbb
aas
push
sub
xchg
mov
inc
mov
xchg
lret
push
add
shll
mov
scas
or
sbb
stos
adc
sbb
push
pop
cmp
mov
dec
cwtl
dec
sahf
jns
or
repnz
xor
lret
sbb
sbb
test
sbb
xor
inc
pusha
push
or
inc
mov
mov
cwtl
push
es
pushf
jo
fwait
mov
mov
jno
cmp
rcrl
sbb
fiaddl
js
inc
sbb
push
adc
loop
rcrl
int
shlb
add
fisttpll
add
rcll
sbb
loopne
cmpsb
mov
adc
orb
xchg
clc
mov
shll
jo
add
sub
or
xorl
mov
mulb
pop
mov
sbb
xchg
sub
jg
jo
sub
mov
test
int
and
push
outsb
test
jb
xor
xor
pop
and
pop
dec
mov
sub
dec
sbb
ret
in
add
and
lret
xchg
push
ret
pop
jge
xchg
ljmp
sub
leave
test
xchg
stos
loop
les
ljmp
jb
inc
xor
adc
pop
and
loope
cltd
jb
imul
xor
jno
jle
das
rcrb
addl
in
cmc
adc
push
jo
jbe
cmp
loope
xchg
imul
dec
nop
mov
fimull
jns
shrb
insl
sbb
pop
sbb
cmp
inc
ret
sub
push
pusha
ja
and
aam
push
add
sub
gs
in
ljmp
sub
mov
inc
fdivrl
xlat
das
popa
ljmp
lock
lcall
push
inc
pop
dec
outsb
int
inc
shlb
and
add
and
add
or
push
mov
test
add
fidivs
bswap
add
sub
mov
loope
xor
xor
fcoml
add
push
sub
adc
adc
inc
add
push
add
xchg
lock
insb
add
dec
push
enter
pop
inc
xchg
mov
mov
jb
dec
mov
sub
or
outsl
or
adc
or
in
sub
mov
loopne
and
gs
pushf
push
xchg
rcrl
xor
xchg
add
mov
push
sub
or
inc
sbb
mov
jae
inc
subl
adc
lods
push
fisubrs
add
pop
pop
xchg
mov
sbb
xor
inc
add
adcl
sub
or
ss
mov
add
enter
adc
in
push
ficompl
add
int3
loope
push
or
sbb
dec
xchg
push
mov
scas
cmp
pop
push
inc
xor
in
push
in
xor
adc
xor
ret
lret
fsubrp
sub
jno
add
or
enter
add
cmc
adc
xchg
xor
sbb
inc
mov
or
dec
jbe
pop
xor
mov
xor
inc
outsb
jae
xchg
push
rclb
xor
mov
jne
add
or
cmc
dec
add
add
or
stos
mov
inc
mov
in
sub
or
mov
pop
fisubrl
dec
mov
cltd
inc
xor
jbe
loopne
or
loop
enter
push
sbb
jo
adc
dec
in
ret
lea
cmp
mov
dec
adc
lcall
pop
add
in
scas
sub
inc
lods
shlb
leave
aam
add
pop
mov
loop
movsb
flds
movsl
xor
out
mov
outsl
cmp
xor
dec
adc
push
inc
stos
dec
cmpsb
aas
loope
add
push
xor
out
leave
pop
test
scas
inc
cmp
ja
clc
mov
add
or
jnp
enter
test
adc
fdivr
jmp
or
pop
cmp
cmp
adc
out
sub
mov
repnz
xor
call
stos
add
xchg
push
sub
test
and
mov
push
dec
cs
leave
inc
ss
inc
push
jno
inc
loopne
int
add
mov
inc
xor
cmp
scas
lret
push
sbb
xchg
test
rclb
scas
lahf
sbb
cli
push
adcw
enter
dec
inc
scas
inc
subl
and
cmp
inc
loopne
mov
ret
in
arpl
es
xlat
cmp
fldl
out
xor
add
xor
test
ljmp
mov
xchg
out
add
pop
jne
out
enter
inc
int
cmp
movsb
cltd
jb
dec
div
jl
and
push
scas
xchg
mov
cmp
and
jb
cmp
gs
push
in
nop
jmp
mov
dec
pop
gs
xchg
and
aaa
pushf
dec
inc
movsl
test
adc
stc
rcl
add
sub
sbb
adc
or
arpl
adc
add
jnp
jae
push
inc
xor
sub
movsl
mov
test
jb
sbbb
ret
test
call
cmpsb
mov
lods
add
lcall
out
or
mov
jp
gs
add
add
cmp
ret
xlat
scas
mov
insl
and
xor
mov
cltd
lret
sbb
mov
jmp
dec
lock
dec
jmp
or
sub
add
push
cmpl
mov
sbb
inc
fs
add
and
sbb
cmc
insb
aam
push
push
cmpsl
lock
les
cli
aaa
lcall
jmp
ds
aas
push
dec
inc
sub
adc
inc
sbb
out
sub
push
inc
ljmp
dec
gs
xchg
jmp
gs
jae
mov
into
inc
sbb
lahf
cmp
or
imul
pop
jae
pop
sbb
adc
adc
lcall
add
and
int
or
inc
cltd
mov
je
dec
popa
ljmp
ret
rolb
push
cmp
xchg
and
or
daa
mov
mov
or
cs
and
mov
xchg
mov
mov
push
mov
cmpsb
xchg
mov
fadds
sub
cwtl
test
inc
cs
stos
cmp
test
add
sbb
rolb
sbb
enter
lahf
pop
inc
dec
mov
pop
adc
add
push
xlat
mov
xchg
add
xchg
scas
sub
xor
sbb
mov
and
pop
mov
xor
popa
nop
ret
mov
jne
mov
mov
add
fwait
sub
add
or
dec
pop
push
xor
leave
adc
jo
push
pop
ds
cmpsl
dec
cmpsl
or
addl
aaa
mov
loopne
xchg
aas
xorb
add
adc
adc
pop
loopne
inc
inc
sahf
lret
jo
xor
js
and
cltd
fdivr
sahf
adc
enter
lret
lcall
pusha
das
jb
lock
scas
popa
icebp
jae
nop
and
inc
popa
or
imul
cmp
add
subb
test
xor
fildll
mov
subl
dec
fcoml
inc
mov
xchg
in
ret
test
lret
lcall
negb
enter
lret
je
ljmp
daa
lcall
loopne
inc
sarb
test
dec
fwait
pop
mov
nop
mov
lcall
mov
xor
mov
jb
jb
pop
sub
dec
loopne
pop
imul
push
push
mov
sbb
mov
sahf
nop
loop
inc
push
sbb
aas
xor
fimuls
add
and
outsl
xchg
ljmp
and
pminsw
dec
push
or
adc
xchg
xchg
mov
or
or
fcmove
push
pop
sarb
lds
out
add
cli
jecxz
xor
inc
add
adc
add
lods
jb
xor
inc
es
mov
add
sbb
cmp
or
mov
pusha
pushf
std
pop
test
mov
mov
mov
or
adcl
jbe
xchg
popa
pop
scas
xchg
lcall
sbb
jo
rcll
push
and
or
and
out
push
xlat
or
fs
mov
inc
int
fiaddl
rolb
pushf
sub
sarl
cltd
movsl
cmp
mov
add
shrl
xchg
popa
test
pop
and
out
sbb
pop
sub
mov
mov
push
pop
jle
popa
stos
out
out
adc
orl
pop
loope
daa
push
pop
ds
dec
mov
ret
adc
sub
or
adc
push
add
fisttpll
mov
lcall
leave
push
cmp
lock
cmp
rorb
test
mov
aad
lods
mov
push
inc
jmp
push
push
push
out
shrl
shrl
popa
out
not
mov
lcall
sbb
jb
jl
cmp
out
inc
cld
mov
repnz
mov
mov
or
rolb
out
les
jb
cs
jmp
gs
loopne
add
enter
popa
enterw
jecxz
mov
dec
lea
cmp
int3
sub
push
cmc
sbb
mov
fs
mov
cli
inc
shlb
js
lret
in
roll
add
and
sbb
shl
nop
pop
add
test
aad
pop
lds
inc
push
adcb
dec
or
dec
adc
adc
jnp
inc
xor
pushf
ret
enter
adc
sbb
gs
jecxz
cmp
pop
jno,pn
push
push
jp
xor
dec
insb
sub
push
sub
fdiv
push
pop
orb
inc
cmpsb
push
aaa
jno
inc
cmpsb
sbb
sub
out
add
inc
push
sbb
mov
outsl
inc
popf
enter
sysexit
mov
inc
roll
xchg
enter
dec
add
push
jae
iret
subb
pushf
ds
js
push
sbb
and
adc
or
cmpsb
test
lds
inc
cmp
inc
xchg
lret
xor
mov
or
sarl
inc
test
mov
pop
xor
cmp
das
dec
orl
jecxz
into
test
pop
ret
rorb
or
sub
or
sahf
and
subb
push
push
sti
enter
sbb
or
jo
inc
and
or
pop
adc
mov
gs
inc
addb
adc
popa
sub
mov
jo
cmpsb
push
arpl
aam
into
adc
mov
xor
cmp
aam
popf
or
sti
lret
pop
or
scas
or
mov
push
testl
test
adc
jbe
std
mov
pop
decl
cwtl
out
pusha
cmpsb
pop
push
out
mov
jbe
lds
jl
mov
js
lods
js
sub
les
adc
mov
ja
jl
inc
and
addr16
xor
clc
pop
js
out
xchg
dec
cmp
movsl
sti
jo
pop
inc
jnp
js
jae
xchg
add
jae
ret
xor
out
lea
push
out
push
in
xor
ret
icebp
mov
xor
pop
sub
lock
mov
cmpb
out
stos
mov
xchg
add
xchg
and
pusha
sub
lcall
adc
jl
xor
scas
push
je
ljmp
aas
test
and
xchg
dec
addr16
and
push
push
addr16
shl
loopne
cwtl
or
xor
cmc
nop
test
adc
push
xor
mov
xor
inc
pop
adc
iret
and
add
mov
xor
or
in
sub
jbe
dec
xor
or
ret
inc
popf
loope
mov
add
call
xchg
sbb
test
addb
push
lcall
pusha
int
pop
mov
or
sub
rclb
cmp
xchg
scas
adc
movb
jb
mov
push
xchg
test
test
xor
cmp
jno
rorb
jb
sbb
mov
jecxz
cmpsb
shl
mov
data16
xchg
fsubp
add
push
lea
sub
bound
adc
push
in
jne
rcrb
rcll
js
push
pop
adc
subl
lret
mov
ret
scas
xor
xchg
add
or
test
movsl
lods
inc
adc
or
ljmp
mov
mov
fimuls
mov
inc
popa
ret
nop
sub
mov
stos
sub
sub
imul
mov
aaa
or
bound
lock
adc
adc
inc
mov
aaa
outsl
xchg
add
leave
adc
push
gs
push
enter
sub
add
imul
mov
je
add
sbb
out
fdivl
and
pop
mov
sub
add
cmp
sub
sbb
bound
lret
add
mov
push
mov
mov
clc
push
dec
push
sbb
inc
add
sbb
add
jle
xchg
xor
mov
xchg
sbb
scas
add
add
fsubr
outsl
sbb
push
data16
dec
mov
and
dec
ljmp
outsb
ret
push
dec
add
or
inc
stos
dec
add
adc
add
sub
dec
aam
cmp
jg
lcall
xor
sbb
and
mov
pop
push
add
ja
push
mov
xchg
mov
es
add
sub
outsl
in
pop
sub
mov
dec
scas
call
xchg
add
insl
add
fnstsw
arpl
cltd
mov
mov
ret
lea
xor
pushf
and
stos
or
sub
xchg
push
lahf
lea
adc
call
cmpsb
and
popa
jo
sti
push
and
imulb
jmp
add
cwtl
lcall
mov
xchg
mov
pop
cmpsb
mov
push
insb
ja
or
jp
cmpl
xchg
or
subb
pushf
sub
inc
pusha
xchg
lea
test
cmpsb
push
sbb
insb
jle
ljmp
rcl
aam
xor
xchg
pop
adc
pop
inc
jns
adc
cmp
dec
rorl
push
push
mov
dec
mov
and
mov
and
cmp
pop
stc
cli
scas
ret
push
cmpb
lods
sbb
test
xchg
mov
cld
dec
jmp
jb
addr16
dec
mov
cmpl
lret
pop
mov
test
sbb
cmpl
adcb
cmp
mov
push
mov
push
cmpsb
aas
fdivs
adc
dec
cmp
ret
nop
imul
xor
cmpsb
rolb
add
jmp
lret
push
pop
roll
sub
add
push
cli
out
mov
icebp
mov
lock
mov
in
sub
cltd
cmp
xor
mov
inc
mov
jo
xchg
sbb
dec
jb
out
in
xchg
stos
push
mov
cmp
cmc
lahf
cmp
mov
or
sbb
enter
or
outsl
dec
testl
lea
sub
lahf
sbb
cs
xor
jne
pop
sbb
movsb
test
push
imul
hlt
fmulp
ret
xlat
das
ss
or
xchg
jl
push
pop
in
pop
sub
xchg
sub
inc
stos
inc
pop
or
mov
add
or
pop
int
jne
dec
popa
test
pop
lcall
inc
adc
roll
dec
cmp
dec
out
les
push
cmp
xor
loope
mov
dec
xchg
push
jge
cmp
inc
es
in
xor
cmp
cli
mov
dec
hlt
fcmovu
and
test
ljmp
addr16
xor
mov
push
pop
sbb
dec
les
xchg
leave
adc
in
push
sbb
jb
test
sarl
es
and
mov
cltd
push
xchg
ret
in
fsubrs
push
push
jb
mov
push
push
push
out
jl
dec
inc
push
xchg
adc
xor
cltd
add
fs
pop
aam
sub
pop
adcb
movb
inc
cltd
test
cwtl
or
jae
aam
lret
xchg
ret
add
jne
cs
test
test
gs
or
dec
pop
test
insl
adc
xchg
jb
and
shlb
or
pop
cwtl
push
dec
dec
ss
cmp
jg
cmp
push
mov
and
aas
add
bound
pop
push
insb
jo
add
jbe
ja
pop
or
or
fmulp
and
fnstcw
fs
into
add
adcb
adc
cli
push
mov
adc
loope
andb
lcall
cmp
or
cld
flds
add
into
ret
adc
sbb
xchg
inc
aam
xorb
mov
push
sub
lcall
add
mov
loopne
daa
mov
pusha
adc
adc
mov
sbb
push
fildll
pop
jp
add
or
jne
dec
xchg
and
jnp
cmpsl
out
fs
lcall
xor
shrl
mov
jno
cld
imul
inc
adc
jnp
sub
mov
call
sbb
test
adc
sub
ljmp
ret
sbb
into
hlt
enter
cmp
and
shll
adc
lret
push
push
push
cmp
cmp
push
daa
dec
in
add
pop
mov
push
inc
and
adcl
sbb
cmp
in
gs
push
testb
stos
cmp
dec
mov
inc
jae
add
sub
cmpsb
pop
adc
lods
das
loopne,pn
subl
dec
cmpsb
lea
push
and
test
cmpb
cmc
test
cmp
dec
jmp
or
cmp
sbb
dec
rcrl
and
stos
add
sti
jae
mov
cmc
aam
and
pop
pusha
jb
lcall
cmp
mov
cmp
xor
inc
add
in
dec
mov
loopne
push
mov
data16
dec
or
scas
pop
push
int3
ljmp
mov
cmp
mov
rorl
add
loopne
lcall
rcrb
mov
xchg
push
pop
xchg
fildl
push
pop
pop
xor
popf
leave
push
sub
stos
jmp
daa
add
inc
ljmp
add
jg
sub
sub
pushl
sbb
add
add
mov
add
xor
add
incb
insb
aam
jmp
pop
adc
xor
sbb
xor
stos
jle
mov
in
or
pop
aam
push
rsm
loopne
push
iret
adc
stos
out
pop
sahf
pop
add
cmp
cltd
mov
cs
pop
xchg
xorl
ljmp
or
jle
lods
jbe
out
xor
pop
dec
cmp
xor
insl
js
addl
or
scas
dec
popa
mov
xchg
shll
rcrl
or
sub
notl
jge
enter
jp
push
int
pop
adc
sbb
out
mov
nop
mov
and
push
cmp
push
sub
inc
and
lcall
adc
ljmp
jmp
dec
pop
das
adc
sub
test
gs
cmp
cltd
xor
mov
test
sbb
loopw
pusha
push
adc
sahf
aas
add
int
and
das
jo
pushf
test
iret
addl
test
pop
notb
pushf
pop
shll
and
daa
stos
arpl
pop
and
loope
push
mov
cmc
orl
fisubrl
lcall
cltd
sub
jb
jae
push
int
hlt
push
or
shll
popf
sbb
xchg
sub
push
push
sub
push
mov
in
pop
test
lcall
push
popa
jp
or
push
test
es
mov
ret
dec
lock
mov
cmp
test
push
jo
lret
enter
ret
subl
test
jge
enter
adc
sbb
mov
ret
inc
push
into
aad
dec
adc
addr16
adc
std
pop
jo
fildll
jmp
mov
add
jg
icebp
ja
add
test
mov
or
xor
mov
add
stc
imul
jmp
scas
cmp
push
xor
cmpsb
lret
mov
in
sbb
insl
mov
js
das
icebp
push
jae
and
mov
mov
inc
xor
inc
jno
imul
sub
aam
aam
clc
sub
mov
push
sbb
push
push
and
jae
adc
dec
scas
mov
fmuls
aam
mov
sub
adc
scas
out
pop
cmp
enter
or
and
xchg
push
lcall
mov
xor
in
notl
push
pop
lods
fwait
in
int3
xchg
ljmp
sub
sub
icebp
divl
loopne
jae
xchg
push
cltd
push
mov
dec
fcoml
ret
or
dec
xchg
pushf
ja
mov
sti
int
inc
cmp
popf
dec
cmpsl
sbb
adc
sbb
inc
cmp
in
fs
mov
lret
jo
jnp
js
add
inc
es
mov
adc
adc
mov
push
add
fldenv
ret
pop
ret
subl
sub
out
sahf
lcall
inc
cwtl
xchg
sub
mov
adc
ja
pop
dec
xchg
sbb
push
std
stos
lret
or
pop
addb
add
icebp
stos
push
in
push
inc
loop
or
adc
xchg
clc
rclb
cmovl
nop
mov
scas
and
int
out
pusha
enter
pop
push
es
pusha
dec
bsf
adc
pop
pop
push
rcll
xchg
imul
mov
popf
stos
pop
shll
or
out
rclb
das
mov
jecxz
pusha
pop
sbb
inc
hlt
push
cmc
xchg
lods
sub
or
cmp
cltd
iret
or
xor
push
ds
xor
sar
mov
sub
push
mov
push
push
loopne
or
add
fisubl
lcall
push
cs
adc
aas
out
inc
pop
push
sub
repz
pop
mov
hlt
bound
push
adc
sbbb
mul
out
push
into
sub
nop
std
jae
cmpsl
or
mov
inc
or
lea
adc
dec
xchg
loope
pusha
xor
push
cltd
stos
push
push
call
stos
or
loope
adc
ret
add
loop,pt
push
mov
and
cmp
inc
sbb
mov
sarb
cmp
rol
push
cmpsl
pop
xor
cmp
cmp
or
push
outsl
aad
cmpsb
ret
xchg
imulb
data16
xor
jge
pop
mov
mulb
jl
loope
loope
shrl
cwtl
dec
jle
aad
lcall
cmpb
add
adc
mov
aaa
imul
lret
lods
cmp
xor
shrb
pushf
cmp
in
call
rcrb
pushf
jecxz
ror
xchg
xorl
pushf
jno
jne
movl
fs
xor
out
cltd
xor
jecxz
inc
cmpsb
and
test
subl
sbb
sub
add
aam
xchg
inc
and
fwait
dec
scas
inc
pop
mull
cmp
push
jmp
cltd
sbb
jmp
test
push
xchg
push
mov
mov
loopne
pop
mov
aaa
inc
push
scas
dec
adc
add
es
sub
clc
add
xchg
sub
incb
mov
add
xchg
mov
lcall
scas
not
push
adcl
xor
xchg
inc
jae
test
or
sub
fildl
or
push
enter
lods
cli
pushl
inc
scas
mov
push
lret
xchg
pop
or
sbbb
into
setp
int
jg
or
lcall
cmp
add
leave
mov
int
pusha
into
xchg
lods
test
js
sbb
jle
push
stos
inc
fnstenv
jle
pop
cltd
or
xchg
shrl
push
sbb
scas
xor
xchg
or
icebp
jns
fadds
int3
aas
inc
cmp
push
push
mov
int
jp
cmp
test
jb
clc
jb
repnz
sbb
push
and
or
int
xor
js
fcoml
and
out
cwtl
or
enter
xor
sub
into
add
adc
add
xor
xadd
add
mov
push
dec
and
jns
add
sbb
dec
sbb
pop
xor
fs
testl
test
inc
jae
mov
mov
ret
sbb
adc
push
jle
orb
test
mov
mov
push
jae
rcl
into
adc
inc
jo
stc
xor
cmpsb
add
aaa
dec
cwtl
data16
add
inc
imul
inc
xor
push
push
gs
aas
aam
and
mov
cmp
inc
cmp
cmp
xor
jo
jno
ljmp
lea
push
and
out
lods
out
jo
adc
insb
dec
je
mov
leave
jg
mov
dec
fwait
push
sbb
jo
jp
insl
stos
icebp
or
mov
xlat
jb
lret
cmp
lods
cltd
repnz
sbb
jae
cmp
sbb
xlat
in
add
enter
cltd
mov
sti
xchg
inc
cmp
mov
push
imul
pop
push
inc
hlt
inc
mov
and
roll
cmp
xor
into
push
adc
dec
hlt
push
push
push
aaa
mov
test
mov
adc
sub
pushf
jmp
mov
je
into
mov
xlat
mov
pushf
lahf
and
cmp
mov
mov
mov
js
cmc
dec
xchg
inc
or
js
cmp
scas
ret
xlat
shl
sahf
mov
movsl
enter
push
shll
or
add
add
rorl
xor
pop
cltd
and
or
sub
sbb
inc
popa
rolb
add
xor
loopne
cmc
js
mov
push
jne
sub
xor
mov
xchg
xchg
sbb
decl
cli
ret
ljmp
pop
mov
add
inc
pop
pop
mov
ds
push
das
out
sbb
add
pop
pop
fadds
test
cmc
push
pop
pop
divb
aad
jns
adc
xchg
xor
test
sub
and
mov
push
insl
and
pop
stc
sahf
shrb
adc
xchg
push
clc
ljmp
pushf
aam
pop
mov
aas
jae
rolb
xchg
jae
out
insb
pushf
xor
add
xor
push
or
jns
or
int
jb
push
adc
aam
ret
xchg
xchg
test
cwtl
mov
sub
scas
xchg
lret
sub
cli
pop
cmc
adc
push
loopne
add
adc
mov
and
xor
and
push
xchg
mov
ret
push
outsl
lahf
cmp
push
or
lcall
lret
push
out
sbb
cmpsl
inc
mov
iret
bound
mov
push
loope
mov
sbb
pop
adc
cmp
in
inc
es
push
dec
xchg
mov
push
int
inc
shrl
push
push
sbb
test
jbe
test
into
xchg
imul
dec
xor
imul
sbb
pop
ja
in
lret
push
push
or
das
dec
subl
test
scas
sub
gs
add
push
in
pusha
push
insb
cmp
outsl
popa
loopne
jmp
xchg
sbb
sub
nop
mov
dec
jmp
lret
xchg
mov
pop
jle
jae
cmp
cs
sbb
sub
and
les
int3
pop
lods
test
fisttpl
jb
sbbb
data16
das
test
enter
shlb
sbbl
in
mov
jmp
mov
push
clc
or
in
imul
inc
pop
aam
sub
dec
fistpl
jp
or
iret
inc
jno
loope
pop
mov
inc
lret
add
xor
sar
mov
xlat
xchg
inc
add
sbb
adc
xchg
rcl
pop
stos
or
or
popa
inc
inc
fs
sub
mov
inc
or
jo
xor
and
add
bound
jmp
xor
xchg
loope,pn
xchg
andl
cmp
loopne
adc
pop
adc
push
sub
sub
lds
fs
cs
xchg
adc
sarl
out
aam
xchg
shl
enter
jnp
mov
iret
inc
or
subl
add
mov
adcl
into
inc
or
leave
cli
sbb
mov
push
pushf
pop
pop
sbbb
push
adc
hlt
jo
and
mov
scas
push
push
rclb
push
bound
sbb
out
push
adc
inc
pusha
imul
fadds
add
js
lcall
push
pop
cmp
sbb
pop
dec
fwait
jp
jp
inc
inc
imul
sbb
xor
inc
jecxz
js
clc
dec
or
imul
or
mov
cmp
or
inc
xor
push
add
stc
xor
xorb
sbb
daa
dec
xor
loope
adc
push
popf
or
xor
js
enter
test
dec
es
sbbb
cs
mov
lock
add
popf
pop
popa
stos
imul
adc
nop
rolb
push
rcrl
pop
push
rcrb
push
test
in
mov
adc
dec
les
stos
or
or
push
push
or
aam
xor
xchg
test
shr
and
dec
fdivrs
jb
inc
js
aas
pop
mov
icebp
mov
adc
sbb
pop
movsl
cmc
test
mov
sub
mov
cwtl
or
cwtl
fmul
orl
sbbl
add
mov
adc
mov
pop
popa
enter
cmpsb
roll
scas
lcall
jg
cmpsb
xor
roll
add
ds
sarb
xor
or
sbb
lds
mov
cwtl
push
xchg
fsub
stos
pop
mov
mov
jle
xlat
xor
adc
xchg
lahf
aam
or
push
in
or
mov
rolb
xchg
mov
jae
loopne
je
xor
adc
lock
xor
cltd
gs
adc
pop
sbb
inc
xor
in
scas
fcmove
xchg
enter
jbe
aad
sub
rcrl
adc
dec
mov
pop
xor
xchg
jae
test
push
sub
xchg
xorl
adc
dec
cmp
lcall
punpckhbw
enter
mov
fistpll
mov
aam
pushl
inc
jmp
pop
add
adc
xchg
push
int
dec
jg
ffree
incl
mov
loop
mov
call
or
add
int3
adc
call
outsl
xor
fisttps
aas
outsb
int
fdivl
mov
fistps
adc
or
scas
pusha
repnz
std
out
pop
call
mov
mov
sbb
sbb
clc
out
push
jp
mov
out
mov
test
mov
add
mov
mov
out
lcall
pop
inc
or
push
jmp
jg
mov
fcoml
mov
mov
add
call
sbb
in
das
cmp
rcrl
add
in
add
xchg
xorl
out
fdivr
data16
in
mov
es
lea
bound
aaa
negl
in
int3
and
xor
lock
jmp
and
cltd
mov
mov
ljmp
pushf
inc
mov
neg
pop
jl
add
lock
adc
icebp
aad
adc
and
sahf
mov
sub
fbstp
inc
std
ja
aas
lock
dec
adc
sub
ljmp
out
outsl
into
lods
adc
dec
into
sbb
xchg
sub
into
std
out
jmp
jnp
fs
les
movsl
pushl
or
cwtl
mov
xlat
aad
mov
mov
out
fdivrl
test
imul
cmp
and
pop
jno
shll
add
loope
in
or
pusha
push
add
sbb
mov
inc
pop
and
movsl
sarb
and
jmp
call
jb
std
mov
adc
lcall
add
scas
out
inc
stos
iret
lock
dec
loop
cmp
outsb
cmp
es
movsl
popf
sti
stos
test
jae
mov
dec
jns
out
add
cmp
mov
xor
je
xor
test
mov
jg
cs
mov
or
stos
adc
out
fildll
enter
or
sbb
or
dec
orb
jnp
loop
cmp
or
sarl
test
sbb
lcall
add
std
cs
mov
pop
lods
mov
mov
lahf
sti
mov
adc
add
ret
das
ret
outsl
cmpsb
imul
xor
or
lcall
popa
cltd
jb
lret
inc
sarl
dec
lcall
push
incl
shrb
jp
push
les
push
pop
sbb
inc
pop
fdivr
jae
pushl
test
and
sbb
out
icebp
rol
sub
pop
push
mov
pop
aas
stos
mov
adc
sub
push
cmp
stos
ss
negl
mov
gs
adc
jo
scas
adc
ja
incl
sbbl
ds
out
adc
outsl
mov
int
and
out
lret
mov
mov
gs
fs
fwait
pop
icebp
jle
decl
insb
pushf
xor
sbb
fistl
clc
pushl
mov
jecxz
jae
jae
push
sub
cli
lods
mov
cmpb
xlat
call
sahf
jno,pn
jp
hlt
nop
fidivs
scas
sub
in
or
mov
in
incl
std
insb
sbb
push
jmp
push
insb
pop
xchg
jle
cld
xor
jmp
mov
jg
sbb
jg
and
addr16
jb
mov
call
push
adc
fistpll
out
sbb
xor
aam
insl
in
jge
clc
pop
inc
cld
leave
mov
mov
pushf
xchg
and
mov
js
mov
pop
movsl
xchg
xchg
nop
ror
std
nop
addr16
enter
pop
mov
mov
lret
cmp
pop
int
sarb
cs
hlt
das
popl
mov
lods
cld
sbb
fsubl
mov
jmp
pop
sub
dec
add
add
es
jo
cmp
mov
faddl
xchg
stos
mov
out
and
fistps
cmp
pop
xor
jnp
ret
imul
push
xor
icebp
cwtl
sub
jo
ds
incb
xchg
loope
lods
popa
xchg
aas
jae
adc
mov
push
andl
push
pop
sti
outsb
and
mov
sar
movsb
mov
movsl
xlat
push
pop
jns
or
out
jecxz
movl
mov
mov
mov
call
divl
mov
loop
in
aas
shrb
addl
and
mov
add
sbb
jmp
sbb
mov
cmp
lret
jmp
add
popf
sbb
lret
cmp
out
jo
ja
hlt
cmc
pushf
push
inc
add
ja
cmp
push
decl
scas
push
or
mov
testl
xchg
jmp
cmpsb
cmp
mov
fistps
popf
sbb
imul
lds
inc
nop
inc
sarb
sbb
gs
lret
adc
mov
out
mov
xchg
sbb
pushl
xchg
out
loopne
dec
xor
xor
xor
loop
mov
mov
fwait
cmp
push
int
or
stos
inc
mov
sub
lret
jg
movsb
inc
cmp
scas
jae
or
sbb
std
popf
sti
stos
dec
dec
push
loope
cmp
test
dec
fdivr
ret
outsl
jnp
mov
test
ficomps
in
pop
cmpsl
xor
lods
out
pusha
push
roll
ja
jmp
adcb
repnz
mov
dec
sar
cmp
mov
outsl
xchg
es
fwait
out
je
and
cmpsl
out
jg
hlt
push
and
xlat
fdivs
or
dec
movl
cmp
sbb
ja
adc
sbb
cs
leave
std
jbe
or
loop
add
sbb
jg
jg
int3
call
add
push
xchg
dec
js
std
out
icebp
mov
cmp
call
sahf
push
scas
roll
mov
pop
fs
mov
jmp
outsb
cli
cmp
lods
add
xlat
loopne
add
sbbl
iret
pop
dec
inc
mov
jle
cmpsl
jg
addr16
fimull
ja
loope
ljmp
adc
aam
xor
cld
pop
test
pop
ja
inc
inc
hlt
sti
push
mov
mov
jno
ss
pop
mov
decl
xor
add
int
inc
ret
sub
mov
outsl
adc
out
mov
mov
call
jg
cld
jae
xchg
pusha
sbb
push
pop
outsl
mov
into
std
rcr
call
xchg
popa
sub
and
inc
push
loopne
mov
sub
dec
push
dec
cld
outsb
lock
fimuls
sti
je
lods
int
call
jmp
sbb
inc
aad
popl
jbe
ljmp
sbb
mov
lds
sub
jg
jecxz
ljmp
xorb
bnd
push
clc
ret
js
stc
outsl
mov
and
cld
decl
and
outsb
or
stc
dec
xor
enter
sbb
mov
lret
jge
out
pop
jne
or
pop
cwtl
rolb
daa
pop
test
jmp
and
out
mov
shr
xor
cmpsl
jg
aas
xor
mov
int
cmp
imul
jnp
pop
lds
sbb
fadd
imul
jnp
push
cld
mov
test
or
add
inc
add
xor
cmp
pop
rcrb
xchg
sbb
scas
pushf
pop
leave
jmp
sar
pop
push
pushl
mov
es
mov
mov
dec
mov
xorb
cmc
xchg
dec
mov
imul
mov
aaa
out
data16
iret
movsb
aaa
pushf
aaa
lods
xor
push
and
clc
into
std
xchg
adc
pop
inc
cld
lds
pop
mull
sbb
cld
adc
out
sarl
and
int
mov
clc
cmp
add
push
and
dec
call
mov
sub
clc
out
xchg
jae
shlb
lods
leave
dec
cmp
sbb
fistpl
sti
xor
or
pop
bnd
mov
aaa
aaa
fistpll
in
movl
icebp
es
fcmove
sti
jge
imul
loopne
sub
in
clc
ficomps
pop
pop
sbb
dec
pop
orb
mov
ja
add
or
xchg
jo
aaa
pop
ja
stos
cmp
push
and
push
incb
and
sbb
loope
xchg
mov
mov
les
movsb
les
lcall
mov
or
out
pop
pop
cli
movsb
insl
push
dec
mov
es
dec
ljmp
cli
into
loop
sahf
add
add
and
pop
outsl
ja
push
idivb
subb
ja
mov
in
dec
popa
jecxz
icebp
pop
jle
aad
sbb
sub
movb
fcomi
dec
out
mov
mov
test
mov
stos
adc
xchg
mov
rorl
cmp
nop
fwait
std
ja
in
cmc
add
and
repz
push
xlat
sti
in
cwtl
adc
xchg
mov
loope
mov
fnsave
inc
ljmp
jle
sbb
ja
clc
call
jo
mov
ds
aaa
sub
push
iret
mov
jne
mov
dec
adc
outsl
adc
lock
cmp
arpl
call
aas
mov
mov
popa
dec
jne
push
cs
mov
fwait
pushf
pop
fadds
mov
adc
cwtl
xor
icebp
dec
and
xlat
pop
mov
loopne
cld
pop
out
shlb
mov
cmp
sub
mov
mov
cld
out
outsb
mov
cmp
sbb
ljmp
adc
mov
sub
outsl
jge
dec
dec
fimull
loope
sub
ss
and
mov
cmp
orl
jge
jb
dec
ss
jp
psubsb
mov
pop
fisubl
out
inc
stos
add
out
mov
hlt
jle
xor
in
pop
fs
push
lea
mov
shrl
lods
out
es
fildl
push
inc
loope
lds
decl
fisubrs
jbe
mov
sbb
add
seto
movsb
mov
dec
in
and
mov
pop
cmp
in
xor
pop
fistpll
sbb
je
imul
cwtl
mov
jnp
pop
loope
clc
sahf
push
shll
mov
jg
mov
leave
int3
arpl
jecxz
xchg
imul
mov
test
push
push
mov
aas
xorl
jae
idivl
mov
ret
jmp
icebp
xchg
fadds
test
repz
stos
mov
sti
ffreep
mov
test
test
jnp
add
jge
clc
cmpsl
inc
jnp
jle
fs
cmp
xchg
out
js
ja
push
mov
pop
data16
shl
jge
pop
mov
sbb
sbb
sbb
cmp
ljmp
adc
xchg
xchg
and
shrl
mov
lods
cmp
insl
fdivr
mov
sbb
mov
lock
aas
mov
pop
push
ret
push
repz
xlat
mov
scas
sub
jg
inc
xchg
popf
lcall
scas
xchg
shlb
mov
in
mov
xchg
push
push
lret
hlt
dec
cmp
inc
aad
sbb
inc
andb
jp
test
cmc
sub
jg
and
cli
xchg
js
pop
fnsave
pop
mov
ja
fsubl
push
push
push
pop
cmp
jne
dec
mov
push
call
sbbl
gs
cmp
pop
add
ffreep
sbbl
mov
cmpsb
dec
sarb
mov
loope
imul
test
mov
enter
xlat
call
jle
cmp
mov
jnp
aaa
adc
push
les
xor
sti
inc
decb
dec
lcall
pop
andl
xchg
xchg
xchg
stos
pop
mov
jo
xchg
or
testb
je
out
sar
loopne
mov
roll
les
test
sub
fdivs
and
ja
adc
notl
loopne
aas
xor
mov
jae
xchg
push
icebp
ret
add
inc
ss
and
pop
movsb
xchg
lahf
adc
mov
dec
lods
shlb
std
mov
dec
scas
add
xchg
mov
daa
js
cmc
rcrb
sbb
xchg
jge
ja
adc
pop
mov
aad
mov
movsb
and
and
into
pop
enter
or
in
jecxz
and
imul
bound
push
pop
jecxz
cmpsb
sbb
jns
mov
and
pushf
sti
das
pushf
bound
call
dec
hlt
loope
dec
out
call
xchg
mov
mov
push
mov
mov
dec
clc
pop
fdivr
jge
jle
mov
es
lods
xor
mov
mov
mov
stc
jnp
fistps
jmp
mov
fstpl
nop
push
ds
jmp
into
or
jns
mov
popf
in
jp
inc
inc
out
jg
xchg
dec
insl
or
sarb
ja
inc
loop
fisubs
push
mov
aaa
xor
mov
jp
inc
mov
jg
rcrb
mov
xchg
mov
inc
fs
and
mov
out
or
test
xchg
cld
pmaxsw
xchg
jne
into
stos
sub
in
lods
enter
test
mov
cmp
pop
popa
cli
adc
adc
cs
ds
pop
loop
fistpll
lcall
xor
push
sahf
push
dec
int3
xor
popa
dec
jb
js
cltd
sbb
jecxz
dec
data16
loop
lret
std
pop
cmp
mov
fwait
pop
lds
stos
jbe
in
pop
pop
insb
shlb
cli
pusha
mov
insb
out
add
call
fwait
cmc
xchg
and
sbb
sbb
mov
ficomps
mov
ja
push
dec
inc
insb
mov
mov
and
mov
test
or
fucomp
sub
or
xor
std
pop
mov
pushl
sub
out
mov
mov
adc
or
cmp
pop
in
mov
call
shl
js
sub
inc
lea
or
or
test
sub
dec
jmp
hlt
arpl
push
test
adcl
xchg
pop
jl
clc
push
neg
jg
bound
xchg
not
jg
jo
or
cld
lahf
sti
jmp
or
xchg
fdivrl
ja
das
fldcw
andb
cmp
adc
mov
ja
incl
call
add
mov
sub
pushf
mov
scas
xchg
lods
jno
mov
cli
fistpll
add
jnp
inc
test
insl
fdiv
clc
hlt
jbe
in
lods
push
sub
xchg
or
and
in
dec
jge
jb
test
int
dec
fucomip
lock
hlt
mov
push
sub
adc
call
addb
mov
jnp
ja
sbb
pop
int
push
cmp
pop
outsl
pusha
fadds
lahf
dec
jno
addr16
ljmp
arpl
je
pop
mov
xchg
mov
scas
fucomp
jg
lods
inc
repnz
sub
arpl
jge
jo
insl
pop
loopne
repz
ret
inc
icebp
call
jne
inc
adc
popf
sti
pop
andl
xorb
xor
sbb
test
popa
lods
pop
test
push
in
mov
xchg
push
ljmp
imull
fiaddl
in
fldcw
bound
sbb
lahf
fistpll
sub
lods
cli
stos
es
xchg
adc
mov
into
xor
pop
jp
pop
inc
mov
loope
ja
xchg
jb
push
cmpsl
inc
insl
ljmp
pop
mov
jnp
mov
dec
into
push
stos
jl
das
pop
push
xchg
inc
adc
or
pushl
xchg
sbb
jmp
pop
movsb
dec
out
dec
xor
call
lods
adc
adc
enter
add
stos
sti
xor
add
or
shll
adc
xchg
loop
clc
fildl
cwtl
xor
pop
mov
jl
fs
adc
jo
dec
aam
aas
out
push
insl
pop
loope
idivl
xchg
shl
mov
lcall
fwait
movsl
pop
loope
lret
addr16
les
lock
jg
sub
xchg
sbb
movsb
shlb
push
jae
icebp
pop
rolb
xor
cld
call
jmp
test
add
pushl
call
nop
movsb
movsl
cmp
lahf
add
jae
push
in
aam
sbb
inc
pop
lock
mov
xchg
sbb
xchg
jno
pop
popl
jae,pn
xor
pop
stos
clc
decl
std
ljmp
fisttps
outsl
adc
dec
sub
adc
in
rorl
push
add
and
jp
jo
fnstenv
dec
cmc
dec
mov
and
pop
jge
dec
mov
xchg
lods
pop
adc
cmp
hlt
jp
je
mov
pop
pop
out
mov
bound
jg
fistpll
int3
mov
into
mov
lock
incl
pusha
sbb
xchg
in
push
outsl
shl
out
or
inc
adc
gs
lcall
fadd
pop
insl
subb
ds
lock
push
int
mov
inc
push
jmp
add
jg
adc
movsl
es
test
mov
repz
add
pop
out
loop
idiv
cmp
call
lods
sti
inc
sti
test
adc
cmp
cmpl
xor
jmp
mov
mov
in
je
in
xor
mov
mov
nop
lret
mov
cmpl
cld
pop
out
incl
das
mov
test
imul
jle
xchg
mov
je
aad
mov
icebp
scas
outsb
xchg
mov
cmp
dec
int
mov
loope
ja
ret
mov
daa
xchg
shrb
mov
aas
roll
out
test
hlt
mov
das
leave
adc
test
or
shl
in
jae
pop
inc
lods
cltd
xor
in
loopne
hlt
stc
ja
clc
iret
test
cmp
sarb
std
adc
push
lock
xor
sub
mov
jmp
cmc
mov
mov
js
push
xor
idiv
jg
push
jae
aas
mov
shrl
outsb
ret
add
sbb
xor
arpl
pop
daa
cli
fstl
jbe
loop
jae
out
cli
in
std
int3
cmpsl
aaa
mov
gs
nop
or
push
bound
push
mov
and
jb
imul
cmpsl
pop
push
stos
push
out
push
cmp
aas
pop
nop
mov
out
ja
aas
pop
inc
mov
jmp
push
orb
lahf
adc
fists
lods
cld
faddl
ficoms
popf
clc
aad
jp
cwtl
sub
daa
mull
movsl
xchg
dec
pop
je
dec
cli
decl
pop
xchg
ja
push
repnz
adc
neg
pop
sahf
out
test
dec
scas
popa
lret
xchg
mov
mov
xor
fistpll
inc
rcrb
div
xorb
jmp
sbb
push
leave
push
xchg
loope
mov
pop
loope
jae
sbb
out
adc
insl
push
cld
loope
fcoml
and
xor
hlt
jns
mov
arpl
out
or
mov
filds
pop
xor
push
clc
int
sbb
mov
xchg
rorb
lahf
sub
pushl
out
iret
or
in
aad
mov
fs
adc
lock
out
add
repz
mov
jbe
jg
clc
push
jmp
mov
cwtl
or
cld
lods
adc
jbe
and
idiv
sbb
movsb
sti
stos
jns
inc
mov
sbb
hlt
push
lret
xor
xchg
aas
repnz
inc
pop
call
mov
out
jnp
std
loope
lret
push
out
mov
ja
loop
loopne
push
xchg
ret
push
stos
xchg
cmp
ja
lock
fwait
mov
pop
jp
push
cmp
jmp
cs
push
mov
cltd
xchg
cmp
jle
ret
cmp
inc
mov
and
mov
sub
out
es
sub
pop
cmp
jecxz
rorb
fistpll
out
ljmp
cli
sarl
call
popa
add
mov
decl
aad
adc
movsl
daa
rorb
sub
leave
int3
sbb
mov
fistpll
decl
clc
lds
iret
mov
jg
cmp
mov
imul
and
mov
mov
add
fbld
inc
fildll
jg
das
pop
adc
fisttpl
cmp
inc
js
sbbb
negl
std
xor
std
pop
pushf
ret
fisubrl
loopne
icebp
rcrb
fistpll
dec
data16
jmp
ja
out
jns
fdivs
mov
out
add
mov
decl
out
mov
test
mov
popf
add
pop
mov
cmp
sub
xor
and
xchg
fwait
push
lcall
mov
and
sarb
fildl
or
pop
into
jge
mov
cmp
sti
cmpsl
dec
pop
pusha
xchg
sarl
sub
movsb
xor
push
fildll
cld
pop
xor
or
jl
popa
fdiv
sti
inc
xchg
mov
cmp
pop
rorb
je
jmp
out
stos
pop
in
loop
ror
sub
std
xlat
jecxz
push
mov
add
pop
mov
pushl
out
mov
nop
mov
shrb
xchg
lds
inc
sarb
mull
rorb
int
sbb
xor
pushl
aaa
out
sub
add
mov
sbb
adc
add
fcmovbe
jg
out
mov
ja
adc
mov
rorl
pusha
push
pop
in
xlat
int
mov
cmc
out
adc
out
das
testb
mov
cmp
pop
pop
xchg
pop
mov
and
mov
fmuls
dec
std
out
jns
push
incl
daa
mov
js
adc
and
sbb
mov
incl
xchg
cmpsb
mov
orb
aas
pop
cmpl
mov
jg
xchg
dec
mov
mov
inc
es
cli
xchg
cwtl
out
dec
out
dec
mov
inc
xchg
movsb
add
cmc
ds
rorl
add
and
aas
sbb
sub
ljmp
xchg
push
jbe
scas
jge
adc
xor
lods
or
outsl
gs
or
and
aam
cmp
ja
inc
xor
pop
fsubrl
pop
cwtl
add
mov
movsb
mov
sbb
decb
lret
xor
xchg
xor
arpl
push
cmpsl
ljmp
inc
fidivrs
xchg
insb
mov
neg
jo
por
dec
shrb
decb
cs
mov
call
addl
loopne
dec
cld
xchg
add
cmp
ljmp
test
jmp
fstl
fwait
jmp
xchg
xor
movsl
sbb
push
out
aas
push
pushl
xchg
and
add
and
or
loop
in
pop
pusha
ret
into
jo
out
inc
jmp
pop
stc
xchg
jg
call
add
jle
xor
pop
lock
mov
cmp
sahf
mov
push
xchg
call
mov
pop
loope
adc
jl
jb
fmull
aam
aaa
js
outsb
psrld
test
loope
outsl
ss
dec
mov
or
adc
shl
aas
ljmp
mov
dec
adc
mov
xchg
jp
idivb
iret
inc
iret
cmpb
dec
push
push
jbe
sbb
jge
out
std
clc
xor
repz
enter
js
sub
and
daa
xor
mov
cwtl
in
sub
daa
mov
push
mov
pop
fiadds
test
lret
push
pushf
adc
xchg
incb
xchg
sub
movsb
in
into
js
pcmpgtd
das
fdivs
mov
repz
dec
mov
add
stc
fdiv
adc
out
pop
xor
mov
ja
in
shlb
adc
sbb
scas
inc
jge
loop
outsb
in
pop
push
sbb
call
daa
and
call
cmp
jns
jmp
int3
pop
imul
jmp
fistl
ja
pop
mov
dec
ret
lret
adcl
adc
adc
inc
push
mov
add
bound
sbb
mov
push
inc
call
hlt
lods
mov
mov
jecxz
add
lret
mov
imul
out
out
jne
daa
mov
sbb
mov
icebp
pushl
inc
sarl
shrl
daa
jg
mov
add
push
stos
pop
adc
insl
imul
call
call
cli
aad
ret
sti
fbstp
xchg
cmp
pop
jne
testb
mov
pop
lret
sbb
js
loope
ss
add
mov
je
out
ficomps
movsb
inc
add
arpl
fs
mov
mov
call
mov
scas
mov
xchg
pop
test
scas
mov
mov
inc
in
mov
inc
fdivrs
lock
cmpsb
push
sbb
push
add
pop
pop
push
loope
js
cmpsl
inc
das
movsl
sub
subb
lret
scas
out
jg
call
clc
xor
inc
cli
aad
mov
adc
or
aas
add
in
out
adc
stos
mov
imul
xlat
and
cmp
mov
pop
int
sub
adc
adc
xor
shlb
loopne
and
loope
jmp
adc
pop
cs
mov
sarb
cmp
out
filds
pop
pushl
inc
mov
push
fisubrs
sbb
sub
shrl
decl
fdivrs
idivl
push
or
inc
or
lds
sahf
inc
leave
test
mov
inc
cmpsl
insl
adc
jb
fwait
pop
or
mov
bound
push
cld
pop
dec
hlt
pop
sub
lea
mov
jns
std
sub
stos
dec
aaa
pop
or
and
idiv
push
addr16
test
inc
jl
xchg
pop
stos
in
jl
frstor
in
cld
push
and
subl
sti
mov
jmp
adc
rorb
divb
push
lods
mov
xor
cmpsl
or
xchg
and
push
out
jg
jg
repnz
test
bound
push
fs
pop
in
jge
pop
push
push
cmp
xor
clc
insl
fimull
cmpl
lret
negl
xchg
xor
test
insl
xchg
cmp
in
aas
add
enter
mov
add
jno
arpl
dec
pop
mov
dec
adc
fiadds
and
or
sbb
dec
mov
fldl
incl
sbb
jne
xchg
scas
xorl
das
negl
xchg
out
fsubs
and
js
pop
shll
stc
ja
rorb
inc
negb
push
dec
ret
ja
or
xchg
pop
bnd
jnp
mov
enter
pop
push
jmp
lahf
aad
xchg
xor
and
sarb
sti
xchg
sti
pop
call
stos
mov
inc
ja
mov
inc
or
and
mov
xchg
fdivl
outsb
rol
xor
test
xlat
mov
inc
and
in
sti
sbbb
jg
add
aas
aaa
mov
adc
js
add
cld
add
movsb
pop
divps
in
pop
cli
cmpsl
mov
scas
mov
and
and
sub
xchg
ret
jb
test
mov
and
and
and
push
std
pop
sub
pop
pop
test
out
mov
lret
scas
clc
push
push
xor
sbb
pop
popl
out
dec
sbb
sbb
push
cmp
inc
int
mov
jg
add
clc
addr16
stc
inc
loop
jg
clc
aad
ljmp
arpl
inc
jno
aam
clc
push
jae
adc
rcll
mov
xchg
mov
fstp
push
iret
nop
jecxz
leave
xor
testb
or
jl
cmp
xchg
cmp
lea
and
xor
hlt
push
loop
jbe
shrl
push
in
inc
jp
add
arpl
jae
jnp
rcr
push
int
aad
cmp
pop
cmp
xchg
inc
addl
aas
adcl
xchg
nop
push
test
andl
jg
es
and
rclb
cmpb
jp
daa
xor
jp
fnstsw
and
xchg
mov
inc
daa
sub
push
mov
inc
shrl
sbb
outsb
loope
sbb
lock
scas
lds
add
lods
sbb
mov
jo
sahf
add
xchg
nop
out
jnp
mov
mov
rcll
testl
je
jg
fldcw
xlat
ud0
test
scas
cmp
cld
mov
fistps
sbb
fs
subb
adcl
add
cmpsl
testb
and
adc
sbb
jb
scas
aas
clc
mov
cs
es
filds
mov
push
sbb
sub
nop
mov
test
iret
or
decl
push
fldcw
arpl
mov
bsr
stos
clc
push
push
sub
clc
jg
sub
xor
and
pop
mov
add
jle
mov
testb
or
nop
cmp
xchg
jnp
xlat
sub
movb
push
mov
dec
test
xchg
cmovge
xor
daa
aas
scas
dec
mov
mov
clc
jae
cli
jae
out
xor
repnz
shrl
mov
mov
add
adc
or
fdivr
jnp
lock
pop
das
xor
sti
jne
in
test
call
into
std
inc
test
in
add
or
lcall
lock
enter
pop
pop
mov
test
mov
inc
inc
and
kortestw
inc
ljmp
add
push
jp
ret
push
or
fucomp
mov
stc
outsl
fistps
loopne
jbe
imul
jnp
fstpl
jg
fistps
shl
gs
cli
pusha
jnp
add
out
cmp
lds
pop
iret
cmpsb
movsb
loopne
mov
or
push
inc
lret
mov
sar
and
xor
lods
push
mov
push
pop
adc
sbb
cmp
jl
sarb
popf
sub
inc
icebp
push
leave
push
movsl
aaa
mov
subl
insl
jns
in
jae
xchg
jecxz
decl
pop
or
sub
iret
ja
arpl
ljmp
inc
jmp
loop
in
repnz
dec
adc
sti
xchg
fcoml
outsl
inc
cmp
ret
hlt
mov
in
or
aad
push
xor
loopne
sbb
insb
insb
add
and
cmpb
mov
adc
stos
dec
mov
rcll
pop
jnp
lret
push
and
clc
das
je
push
push
insl
loopne
insb
mov
sub
mull
sbb
pusha
inc
push
lods
fistpll
add
ret
push
jbe
loopne
data16
out
fstl
dec
or
xor
subl
sbb
div
sbb
les
jo
aad
xor
pop
and
mov
jns
movsb
lock
sarb
cmp
sub
or
mov
xlat
pop
dec
cmp
jmp
mov
fsub
push
cs
or
jle
fidivl
xor
insb
mov
test
and
out
sbb
fisubrl
mov
sbb
movsb
jge
push
mov
in
pop
cmc
loope
negb
cmp
and
dec
inc
xor
xorb
mov
or
mov
in
mov
pop
and
les
idiv
loop
fmul
dec
aaa
decb
inc
push
test
sbb
push
push
mov
cmc
cltd
sbb
js
mov
xor
iret
ss
sub
es
mov
call
js
cmpsb
ss
lock
sbb
cmc
cmc
xor
xor
iret
ljmp
mov
lret
repz
call
mov
jge
push
lcall
orb
in
jo
sbb
into
outsl
lds
cs
shl
sbb
fimuls
outsl
in
lret
rcll
fnstsw
in
mov
and
or
pop
xor
jns
cmpsl
lcall
insb
add
sbb
ss
inc
dec
mov
fiadds
clc
out
inc
mov
xlat
iret
rclb
ret
insl
fistpl
add
hlt
jge
cmp
sbb
aad
sbb
mov
mov
mov
jo
jg
push
mov
add
add
fstpl
inc
push
outsl
cmp
stos
add
mov
lods
femms
jg
pop
xor
pop
add
jno
call
jmp
add
rcrl
nop
out
cmp
add
lock
mov
or
dec
jo
subl
push
or
lds
outsl
push
mov
sub
je
add
add
shll
sbb
xchg
push
jno
into
out
fwait
lret
aas
into
jmp
dec
pop
and
cli
into
inc
mov
loopne
xor
and
dec
es
sbbl
ret
subl
es
add
add
bound
insb
push
add
lock
dec
lea
fadd
add
mov
sub
and
adc
pop
repz
call
into
mov
aas
xchg
hlt
in
jecxz
sbb
pop
psrad
shll
mov
das
fwait
add
xchg
mov
das
mov
clc
sar
sbb
int3
dec
xchg
pop
jecxz
decl
bound
cmp
icebp
or
pop
xor
daa
xchg
xchg
mov
fbld
mov
pushf
cmpl
or
jae
sub
inc
mov
mov
decb
push
mov
cmp
sarb
mov
xchg
scas
mov
pop
inc
pop
mov
cmc
add
out
mov
lock
icebp
pop
in
pushl
push
popa
iret
lcall
inc
ficoml
add
xchg
adc
cs
pop
push
jp
jne
push
mov
adc
loopne
inc
fstl
push
push
call
push
clc
adc
xchg
lea
popa
mov
inc
hlt
dec
jae
hlt
mov
jg
sbb
mov
call
pop
jns
push
jns
sbb
xor
add
pushl
into
lea
cs
test
aam
xor
pop
leave
or
mov
fdiv
add
mov
stos
test
mov
enter
gs
shl
push
pop
cmp
aad
xor
push
jnp
push
push
nop
ficomps
adc
or
jg
jle
fdivrs
add
xchg
clc
iret
std
lahf
xor
and
jb
leave
sahf
lcall
ljmp
adc
sarl
pushf
add
add
cmp
mov
pop
outsl
sub
lds
xor
into
mov
lods
sbb
xchg
mov
mov
idivb
les
stos
add
xlat
loop
cld
out
pop
test
inc
inc
add
pop
fsubrp
cmpsl
jns
mov
mov
inc
movsb
hlt
lahf
es
lods
inc
xchg
incb
fwait
mov
ret
or
dec
xorb
or
ffree
mov
sbb
sub
push
mov
jns
jmp
sbb
inc
pop
gs
cmp
imul
jg
cmp
mov
cmp
popf
sti
aas
xor
rcll
jb
inc
stos
push
out
out
out
stos
out
push
lret
repz
push
mov
inc
ds
clc
push
mov
rcpps
mov
fsts
dec
std
pop
xor
mov
dec
call
ds
decl
jecxz
mov
outsl
jnp
sbb
arpl
inc
icebp
daa
mov
adc
adc
xchg
fsubrl
fwait
push
stc
mov
test
mov
aas
push
icebp
fnstsw
lcall
and
ficompl
mov
subb
jge
cmp
mov
iret
repz
fisubrl
jp
loop
gs
js
sub
or
pop
out
pop
rclb
dec
cmp
fcmovnbe
iret
gs
ret
jb
ja
mov
xchg
dec
test
jne
add
mov
pushf
fidivrl
sbb
das
lods
jno
pop
mov
add
push
cltd
xlat
push
stos
outsb
jmp
cmc
frstor
cmp
insl
movsb
jg
pop
mov
pop
jp
add
pop
adc
fisubl
outsl
out
mov
xchg
sti
fcomip
jle
xlat
inc
mov
mov
inc
das
mov
xchg
fdivrl
xchg
mov
and
fdivp
clc
enter
mov
cwtl
in
dec
mov
push
data16
ds
mov
xchg
inc
clc
inc
mov
or
and
and
adcb
leave
xor
pop
mov
in
lods
or
jmp
addr16
dec
push
aaa
fsubrs
inc
loope
imul
pop
jb
xor
rcrl
mov
into
sti
cmp
sbb
mov
dec
ret
out
add
xor
adc
jno
pushf
sti
outsb
add
mov
ljmp
mov
pop
shrb
mov
cli
addr16
and
idivb
inc
jecxz
adc
out
dec
aas
xchg
scas
lahf
loopne
xchg
cmp
mov
sar
or
mov
stc
sbb
scas
adc
lods
enter
xchg
inc
cld
cmove
js
cmp
outsl
sbb
jg
jg
pop
iret
push
jo
cltd
repnz
pop
push
mov
push
call
dec
jecxz
cli
sub
daa
mov
xor
pop
pop
xchg
pop
call
decl
inc
adc
and
lret
ljmp
daa
inc
daa
jecxz
pop
sub
movsb
loope
push
inc
pop
outsl
pop
jle
call
xor
cld
pop
add
lcall
shlb
lds
push
bound
xor
jns
jb
into
mov
sti
out
inc
or
mov
jp
xchg
ss
jp
dec
shlb
shl
mov
inc
push
jg
decl
sub
stc
sub
pop
inc
loope
ljmp
push
jg
sub
pop
call
jno
sti
jp
ret
out
xorb
testb
out
pop
pop
push
fisttps
cmpl
in
mov
dec
aaa
mov
push
je
lods
xor
push
out
lcall
out
xor
sbbb
outsl
out
cmp
jns
add
lock
push
add
xchg
adc
ret
jle
clc
mov
sub
mov
mov
repz
xcrypt-ofb
cmpsl
out
jge
sahf
mov
mov
jg
and
ret
sbb
mov
mov
fs
or
lret
insb
mov
lret
pop
add
lahf
xor
js
ds
js
pop
adc
loop
xor
jae
aas
loope
rcrl
mov
push
rcll
xor
repz
ficoml
push
aas
push
fcoml
test
fcomp
jge
rcrl
rep
aam
cmpsl
mov
xchg
xchg
outsl
inc
loopne
dec
mov
shlb
mov
fs
and
jbe
and
pop
fcomps
pusha
or
xchg
nop
mov
sar
mov
orl
arpl
std
mov
mov
push
test
push
lds
cltd
adc
js
push
ret
aad
std
mov
hlt
fiadds
inc
leave
hlt
inc
cltd
sub
das
cli
call
push
xor
sub
push
sbbb
mov
push
std
ret
mov
sbb
push
pop
outsb
or
xchg
xor
add
loop
data16
loop
lock
cmp
cmp
mov
inc
or
pop
in
aad
gs
imul
pop
aas
cmp
cld
daa
jo
lods
jne
jbe
mov
add
data16
push
add
sub
dec
mov
and
fistl
loop
xchg
xor
inc
fiadds
lock
iret
mov
hlt
nop
sub
or
stos
sub
jl
test
ss
fidivrs
fistpll
adc
pop
js
inc
in
cmc
aas
fdivrp
or
sub
push
in
sti
mov
bsr
adc
addb
cmp
sarl
sti
inc
loop
aas
test
iret
incb
out
pop
sbb
jmp
ds
je
dec
xchg
mov
push
loop
sub
push
or
lock
mov
scas
sub
inc
mov
test
jl
popa
pop
or
adc
fadd
xor
jl
mov
ja
lret
push
mov
int3
push
fistpll
stc
xor
add
mov
push
and
push
lock
sbb
mov
add
cmp
test
xlat
ljmp
adc
pop
scas
jle
mov
stos
notl
js
mull
inc
mov
push
fwait
jecxz
adc
outsb
lock
jae
pusha
fbld
adc
fistps
cld
or
clc
jmp
cmp
scas
xchg
orb
jns
out
pusha
push
loop
adc
aad
inc
stos
jnp
nop
imul
pop
cld
and
pop
fdivrp
pop
mov
in
add
cmp
mov
jge
or
xchg
cltd
pop
mov
pusha
mov
sti
adc
int3
iret
sub
test
push
aam
out
mov
mov
lock
add
lods
mov
dec
aad
sbb
and
ja
test
in
sbb
push
aas
mov
push
iret
mov
xchg
pop
sti
sbb
sarl
sbb
lahf
push
arpl
xor
inc
xor
cmpsl
pop
test
pop
shl
and
popa
xchg
lock
cld
jb
sbb
in
ja
addr16
jg
incl
ljmp
movsl
int3
push
mov
jg
xor
or
cmp
ret
sub
jg
test
cmc
or
adc
iret
ret
jl
sti
inc
jge
mov
mov
lahf
inc
int3
call
cmp
call
decl
cmp
add
lea
xlat
sub
jns
xor
mov
fcoms
popa
aaa
sbb
popl
push
or
add
insl
and
daa
adc
dec
loopne
xor
sub
outsl
adc
cmc
aaa
mov
add
add
fistps
outsb
in
insb
divl
add
cmp
popa
or
cmpsb
dec
and
mov
add
jg
dec
std
stc
xor
jnp
pushf
inc
push
negl
adc
cmp
jg
fwait
out
lods
cltd
andl
jle
pusha
inc
or
pop
fucomp
out
lock
idiv
jo
popa
mov
dec
stos
or
cwtl
sub
pop
sub
fldt
daa
cmpsb
mov
cmpsb
xor
jle
push
push
xchg
mov
daa
lcall
out
pop
lcall
lods
aam
test
sbb
lds
mov
and
jne
mov
daa
lock
add
gs
fs
pop
int3
or
stos
arpl
sub
out
mov
xchg
mov
mov
fdivl
jg
pop
loope
fidivrs
ss
and
shl
lret
cld
pop
xchg
lds
or
insb
jp
daa
hlt
pop
fwait
mov
punpcklwd
and
outsb
mov
and
xchg
or
insb
cmp
addr16
sbb
jmp
sbbb
sbb
fsub
loope
aas
sti
popa
outsb
or
or
rcrl
mov
push
ffreep
add
inc
andl
lea
inc
je
cld
ret
mov
mov
or
mov
cmp
loopnew
lcall
jmp
sbb
fdivrl
mov
fnstenv
clc
addb
aas
sti
jg
add
inc
cmp
sti
insl
jbe
stc
add
dec
cmp
and
and
out
leave
in
pop
mov
sub
adc
lock
insb
cs
lea
mov
nop
or
mov
pop
in
mov
icebp
fnstcw
dec
bound
mov
call
arpl
sarl
daa
pop
jbe
sbb
aaa
adc
lods
mov
pop
and
jg
je
add
dec
fmuls
push
cwtl
jp
pop
rol
cwtl
lods
jle
push
cli
aad
out
sub
leave
rcrl
xchg
cmp
push
es
jg
cli
mov
gs
inc
push
lods
in
test
jae
dec
inc
loope
in
jae
ud2
cli
out
jge
sbbl
and
inc
adc
std
pop
mov
push
and
mov
pop
sbbb
out
aaa
mov
xchg
test
pop
xchg
mov
push
loope
xlat
xchg
jae
mov
xor
pop
stos
int
push
inc
call
mov
addl
incb
cmpsb
mov
negl
jns
xor
push
mov
ja
mov
pop
lock
mov
imul
adc
pop
sahf
adc
add
and
xor
mov
std
lods
ljmp
test
mov
rolb
data16
test
fstpl
ret
mov
add
inc
and
clc
xor
lahf
sti
mov
jae
test
xchg
ret
aad
mov
inc
test
call
and
sub
popf
lahf
mov
jne
cld
sbb
xchg
xchg
push
cmpsb
fadds
push
push
push
addr16
sub
aas
loope
jo
lahf
insb
fnstsw
dec
fimuls
push
test
xor
inc
jl
jecxz
inc
test
jecxz
fnsave
mov
dec
push
and
add
xchg
sbb
inc
xor
imulb
xchg
add
call
mov
xlat
cmp
mov
cmpsl
aaa
fsubr
jno
in
hlt
sub
adc
inc
in
fldt
ljmp
lds
push
cli
lahf
mov
jns
pop
push
pop
in
in
pop
xor
xor
jle
jne
xchg
push
push
inc
push
mov
jp
or
test
ja
mov
sub
push
add
bswap
mov
bound
pushf
pop
out
pop
cmp
je
push
aad
negl
mov
xchg
sbb
test
or
push
add
popf
ljmp
sbb
loop
dec
loope
jne
ret
lahf
mov
andl
imul
je
je
loopne
mov
pop
shll
and
das
lds
rcr
arpl
fucom
inc
sbbb
fwait
sub
push
inc
cli
xor
sahf
xchg
dec
dec
mov
les
mov
ljmp
das
ljmp
je
pop
and
pop
dec
lahf
ds
rcrb
add
shrb
sbb
jg
cmc
lahf
xor
cwtl
call
out
shr
les
sbb
xchg
iret
push
int
and
mov
pushf
sub
cld
dec
enter
mov
jle
mov
mov
adc
pusha
imul
lret
sub
lahf
inc
lock
repz
pushf
xor
in
lahf
inc
lods
rcl
mov
jle
add
popf
mov
out
push
pop
sub
sub
push
jle
xchg
or
sahf
sbb
or
test
xor
incl
mov
aaa
jmp
adc
int
insl
negb
lret
cs
xor
shl
cmpsl
filds
sub
inc
push
cmp
notl
dec
adc
push
mov
sbb
dec
out
push
cld
mov
aaa
mov
mov
push
xor
adc
push
mov
test
lock
cmp
addr16
test
cmc
dec
xchg
dec
ja
pushf
call
loope
or
test
and
inc
movsb
ret
ret
dec
push
cmpsl
or
popaw
jge
jp
adc
lods
in
cmpl
jae
pop
pushf
jnp
dec
cmp
cmpsb
or
les
icebp
mov
cld
sub
add
dec
add
mov
ljmp
cmp
sbb
int3
popl
lods
jae
adc
das
mov
sbbl
inc
ljmp
outsl
lock
pop
adc
clc
dec
in
insb
adc
cld
shl
lock
cli
pop
dec
jge
mov
sarb
inc
cmp
pushf
out
decl
mov
and
aaa
aas
add
pop
cli
or
push
add
cmpsl
vmread
inc
lods
mov
mov
aas
inc
dec
cmp
xchg
ret
subl
sbb
xchg
push
jg
cwtl
lds
push
mov
int3
or
icebp
cmp
insb
xchg
mov
push
scas
outsb
ja
pop
test
sbb
adc
cmc
rol
imul
daa
xor
mov
int
jecxz
ja
cmp
push
ljmp
mov
jo
push
aas
mov
sbb
or
push
loopne
mov
xchg
xchg
int3
lcall
add
notl
icebp
jg
test
jp
jo
test
decl
dec
jns
lahf
hlt
adc
lcall
idivl
mov
into
mov
and
into
mov
scas
xchg
or
lret
inc
add
mov
dec
mov
sti
cs
jae
mov
outsb
pop
test
pop
stc
icebp
pop
cmc
iret
clc
inc
hlt
movsl
xlat
stc
pop
les
cld
out
hlt
ljmp
adc
mov
and
lahf
xor
repnz
into
cli
pop
push
jl
in
xor
cli
cwtl
inc
pushf
std
adc
fstpt
mov
jns
cmp
pop
push
xchg
jb
cld
jg
sbb
cmp
mov
aad
ss
push
insl
inc
or
jle
stos
fdivr
jo
fcoml
test
outsb
add
xor
lds
adc
iret
mov
sbb
rclb
sub
popf
pop
lret
jg
dec
or
pop
test
cmp
fisttpl
or
inc
dec
jmp
sbbl
test
sbb
xor
pop
cmpsb
call
roll
dec
mov
fisubs
adc
jecxz
jge
add
add
sbb
dec
sarb
mov
faddl
xchg
xor
jbe
pop
and
bound
lods
and
stos
sbb
mov
mov
or
movsb
lcall
push
arpl
ljmp
rcll
nop
sub
test
xchg
sarl
js
imul
sbb
push
mov
adc
xchg
es
push
push
lcall
push
stc
push
arpl
mov
mov
add
push
pop
pop
ds
lods
or
jmp
xchg
xchg
cmpsb
mov
pop
and
loope
mov
ljmp
std
out
add
mov
dec
repnz
mov
cli
ffreep
mov
test
mov
adcl
pushl
cli
inc
popf
push
es
or
push
cmpsl
outsl
mov
in
mov
xchg
daa
mov
insb
lcall
dec
popf
mov
cwtl
std
fisttpl
sbb
icebp
push
jne
push
rcl
mov
xor
test
xchg
icebp
mov
inc
mul
lock
sbb
xchg
rcr
ljmp
pop
cmp
inc
jnp
jbe
inc
in
sub
push
dec
mov
adc
push
xor
cmpsl
mul
inc
jmp
xor
push
into
inc
add
ret
sti
lea
fwait
shrb
sub
aaa
add
cltd
xor
or
cmp
mov
aam
dec
add
js
lahf
mov
or
sarl
rcrb
in
data16
cmpsl
xor
pushl
inc
jecxz
jecxz
test
or
dec
in
lcall
aam
lods
int
sbb
mov
outsb
imul
xchg
ljmp
cmp
imul
lea
pop
repz
enter
pop
ss
lahf
pop
jo
out
movsl
ret
sti
mov
cli
cmc
gs
inc
aaa
outsb
push
test
ja
mov
inc
push
pop
mov
fdivr
popa
cmp
pop
cmpb
pop
jne
mov
daa
xor
roll
scas
enter
rorb
loop
jecxz
aam
push
mov
mov
adc
fnstsw
cld
dec
hlt
pop
cli
les
or
sub
jae
enter
mov
dec
mov
and
push
cmc
adc
or
pop
add
aam
call
mov
mov
xchg
push
popa
sbb
pushf
mov
loopne
les
cwtl
aaa
mov
or
jg
jle
adc
pop
inc
out
mov
sti
cwtl
push
fsubrl
lods
push
pop
mov
mov
fists
pop
loope
ljmp
dec
xchg
jg
sbb
mov
filds
gs
out
cmp
idivl
xchg
xchg
pop
mov
dec
aad
inc
test
testl
dec
fdivrl
mov
mov
cli
movsl
sbb
pushf
daa
mov
push
sbb
incb
int
mov
mov
mov
sarl
mov
out
mov
inc
push
dec
sub
shr
jae
cmp
jns
inc
idivl
adc
fadd
push
xchg
cmp
sti
and
scas
ja
pop
cmpsl
mov
out
jno
xor
jo
sbb
pop
dec
sub
push
in
and
stc
pop
xor
rcll
sub
xchg
test
icebp
or
cli
into
push
mov
jg
mov
idiv
pop
lret
stc
xor
sub
lock
imul
and
das
cmc
dec
push
lahf
sbb
xchg
or
in
js
out
xchg
jnp
mov
sti
lods
pop
jle
clc
and
cmp
int
addr16
setge
int
mov
jg
clc
sahf
xchg
xlat
dec
jecxz
mov
dec
lret
inc
les
aad
in
jle
stc
inc
aad
push
icebp
mov
mov
sbb
pop
xchg
or
pop
fbstp
into
dec
lods
rorl
icebp
movsb
lcall
ret
out
xor
outsb
mov
movsb
xchg
pop
les
out
dec
mov
test
lock
xchg
mov
popf
dec
fwait
outsb
xchg
sub
les
ja
std
sub
add
mov
mul
mov
outsb
jp
shlb
adc
adc
jge
push
mov
test
and
fistpll
daa
leave
dec
xchg
fwait
jecxz
repnz
shll
negl
lret
mov
ffreep
jecxz
sub
and
push
xchg
pop
mull
out
push
jnp
stos
lods
add
je
jmp
stos
inc
adc
test
ret
jne
in
adc
outsl
loopne
lock
mov
rcrb
lret
mov
idivl
mov
pop
lea
add
pop
lods
xlat
jg
pop
call
call
clc
idiv
ljmp
das
and
out
lea
leave
pop
jp
pop
xor
negl
out
dec
testb
das
mov
imull
inc
call
or
push
jmp
sub
mov
inc
repnz
aas
stos
jg
imul
lcall
dec
add
ja
ficoms
jae
or
sarl
mov
sub
call
cmpl
orl
dec
or
xor
jg
std
ljmp
es
cmp
sub
test
adc
cmpsb
cmp
sbb
or
loope
cmpsl
ret
les
mov
lock
jns
or
push
lock
xor
inc
mov
arpl
or
rorl
jp
ficoml
mov
cmp
pop
fdiv
cmp
std
mov
adc
inc
outsl
jl
pop
lds
sub
and
lock
fldcw
pusha
nop
out
les
cmp
or
cwtl
movsb
mov
xchg
xor
adc
jne
jg
mov
push
test
popf
jo
stc
fistps
test
cmp
loope
mov
sub
add
mov
mov
jge
dec
iret
mov
jns
rcr
cmp
or
test
ret
lret
dec
mov
insl
mov
cmp
push
loop
dec
je
pop
js
dec
std
add
ret
mov
lret
and
mov
add
pop
sub
xchg
inc
decl
sub
movsb
icebp
push
idivb
xorl
inc
ja
inc
push
dec
or
cmp
or
movsl
dec
mov
stc
mov
jmp
sub
fidivrs
pop
std
out
cmp
sbb
fistps
mov
int3
jnp
cli
addr16
fisttps
addr16
mov
fsts
ljmp
fildl
ljmp
mov
or
ja
jns
mov
call
push
adc
mov
lods
iret
insl
pop
fstl
xchg
aas
test
imul
or
cmpsb
cmp
cld
idiv
and
and
lahf
push
pop
pop
mov
clc
arpl
sbb
adc
nop
push
jmp
pop
stos
jge
adc
stos
fisubl
pop
and
aas
and
inc
shl
sub
pop
mov
push
cmp
ret
clc
ja
add
popa
icebp
jnp
lahf
nop
je
push
sti
dec
lods
xlat
pushf
clc
aaa
lret
ret
adc
insl
shll
push
mov
or
std
inc
or
ss
jp
push
loop
cli
movsb
flds
mov
mov
pop
cmpsl
adc
cmp
fdivr
or
lcall
test
lahf
jle
stc
jecxz
sbb
popf
cmpsb
push
pop
in
and
stos
cli
jg
jmp
mov
sub
fildll
sub
add
jle
pop
imul
jecxz
or
pcmpgtw
icebp
jbe
aam
loope
sub
imul
ss
adc
mov
cmp
mov
call
push
jmp
outsb
adc
movsb
cmp
inc
cmc
sbb
incl
add
rcrl
mov
adc
lahf
inc
aaa
mov
jge
clc
in
cld
filds
stc
mov
imul
idivl
fiadds
call
cmpb
jmp
gs
sar
cmpsl
loopne
inc
clc
jae
inc
jl
mull
inc
lock
daa
iret
leave
pop
lds
jg
outsl
xor
cwtl
pop
jecxz
es
mov
cltd
imul
jg
cmpsb
sub
decl
testl
dec
mov
mov
stc
add
aam
sti
dec
out
dec
pop
inc
xchg
fstpl
test
sbb
repnz
xchg
in
imul
decb
test
setle
out
pop
movsl
jp
cmp
pop
lea
incb
inc
xchg
or
add
or
cmpsb
cmp
xchg
cmp
push
cmp
call
out
pop
mov
mov
aad
add
cmp
je
pop
cli
mov
test
mov
mov
lds
add
lea
xlat
ja
pop
int3
icebp
and
pop
loope
xchg
pop
sub
add
clc
leave
add
subb
xchg
lods
gs
add
mov
xchg
rorw
cwtl
sti
scas
xchg
jno
ss
sbb
jns
jb
jmp
mov
mov
hlt
loope
les
dec
inc
rol
aas
jmp
mov
daa
call
lods
enter
cld
iret
fdivrl
cltd
and
jo
mov
ja
ss
inc
call
das
repz
mov
loopne
jmp
adc
push
and
clc
jge
mov
pushl
in
addr16
bound
and
stc
sub
push
mov
cmp
jnp
sbb
scas
xchg
xchg
icebp
lahf
sti
mov
pop
sub
mov
or
loope
pop
and
out
pop
ljmp
aad
jge
mov
clc
outsl
xor
xchg
jne
adc
mov
cmp
dec
lcall
xchg
add
dec
lock
pop
test
push
test
out
pop
popf
jnp,pn
xchg
fdivrl
icebp
imul
push
inc
push
pop
or
jmp
jmp
rolb
sbb
cmp
andl
sbb
flds
mov
aas
outsl
fidivrl
inc
out
dec
cltd
pushl
daa
push
imul
orb
cmp
xchg
movsl
jb
mov
addr16
cld
xchg
sti
xor
je
testb
jbe
xlat
fwait
xor
pop
fdivr
xor
pop
or
sar
mov
jae
lods
sbb
aaa
xchg
test
dec
xor
std
scas
add
mov
lods
fs
adc
sti
out
sarb
push
adc
out
sbb
pop
push
mov
call
cmpl
outsb
push
test
sbb
movsb
sbb
jg
ljmp
xchg
cmp
rep
xchg
add
insb
rcl
enter
lock
das
cmpsb
mov
cmp
cmpsb
mov
inc
mov
lods
push
adcb
dec
xchg
cmp
aad
jo
lock
pop
insb
clc
pop
sbbl
jle
mov
decb
xor
push
xchg
mov
roll
pop
xor
movsl
xchg
aas
nop
jge
mov
sbb
adc
or
mov
pop
cs
mov
or
stc
dec
inc
mov
aas
sbb
pcmpgtd
call
loope
mov
mov
or
mov
cmpsl
xlat
add
push
inc
into
mov
cltd
mov
jmp
testl
ss
jecxz
fcos
fwait
and
stc
inc
sub
add
xlat
cmp
icebp
or
dec
out
loope
jno
cld
testl
adc
loopne
outsb
das
mov
loopne
data16
jne
sbb
gs
inc
xchg
dec
cli
sbb
mov
cs
jmp
popa
fcoml
lcall
mov
mov
mov
inc
out
fidivs
rcrb
loop
shrb
xchg
rcrb
fdivl
pop
add
mov
mov
mov
stos
jae
outsl
js
lcall
xchg
fisttps
in
sub
addr16
lahf
xorl
test
daa
adc
out
fcompl
mov
pop
add
jecxz
jg
inc
and
hlt
pop
push
js
lret
scas
test
pushl
lds
popf
jp
cmp
jecxz
jmp
cld
sub
out
pop
xchg
stos
ret
cmp
cwtl
push
aaa
lds
imul
cwtl
add
pop
insl
hlt
cmp
pop
sarl
test
mov
mov
sbb
mov
fstps
sbb
lahf
rcrl
and
mov
mov
out
jl
and
insl
loop
stos
bound
mov
mov
mov
inc
int3
sub
aas
insl
loopne
je
bound
mov
hlt
inc
cmpb
dec
mov
jg
add
push
clc
arpl
leave
add
push
jae
mov
shrl
mov
sub
mov
mov
mov
cmovnp
aam
dec
inc
or
cld
nop
inc
leave
in
fdivs
std
lds
loop
call
shl
inc
sub
push
xchg
in
sbb
cmpsb
cmp
std
xchg
das
pop
mov
gs
mov
lcall
cmp
scas
jmp
add
inc
loope
sub
int3
fnstenv
pop
xchg
fadds
adc
xchg
cli
jo
rorl
add
cmc
pop
jmp
jae
dec
mov
push
jne
pop
test
jns
lahf
sub
lock
mov
inc
mov
repz
adc
std
pop
test
inc
lock
adc
ja
cli
cmpsb
lods
cmp
mov
cmpsl
pushf
xchg
repnz
mov
mov
pop
loope
mov
rcrb
pusha
idiv
and
js
fsts
fmuls
sub
dec
jb
xor
addb
add
test
lahf
dec
call
test
loopne
imul
or
inc
sti
das
imulb
pop
jecxz
pop
dec
inc
rorb
jle
cli
push
sar
or
hlt
mov
lcall
and
xor
sbbl
repnz
xchg
dec
std
add
sub
int3
mov
mull
add
adcl
jne
outsb
xor
mov
lock
dec
fnstenv
sti
jg
adc
jge
mov
sub
push
gs
mov
rorb
bound
xchg
pop
fildl
push
inc
in
test
xlat
dec
rol
or
fwait
add
jo
arpl
ficoms
or
dec
fdivl
xchg
dec
cmpsl
idiv
pop
mov
push
cmp
cmp
xor
js
or
add
rcll
fdivr
pop
mov
lods
sbb
imul
imul
sbb
or
cmpsb
aaa
xor
jg
jae
aad
loopne
ja
in
pop
decl
mov
sti
dec
std
mov
xlat
les
mov
andl
cmp
push
cmpsb
jnp
mov
dec
scas
mov
lahf
push
lret
outsb
jo
aam
push
movsb
adc
mov
add
push
push
dec
push
mov
dec
inc
loope
mov
loopne
jg
mov
clc
xchg
fwait
movsb
mov
in
addr16
popa
fldcw
pop
adc
cmp
push
mov
mov
pushl
sub
fistpll
ds
sbb
lea
lahf
add
and
push
inc
jae
ret
push
push
inc
iret
dec
mov
es
dec
mov
mov
adc
pushf
xchg
rorl
adc
and
shlb
or
incl
xchg
mov
pop
mov
pop
inc
test
sub
push
adc
push
pop
jmp
rolb
pop
mov
sbb
dec
push
jle
fisubl
ljmp
ror
fwait
dec
xor
das
rclb
ljmp
ja
sbb
std
addr16
or
add
in
adc
in
cld
xchg
cli
jne
inc
das
lcall
insb
data16
xchg
dec
lds
call
insl
inc
jp
jnp
mov
jns
imul
test
lret
test
imul
faddp
inc
into
cmc
pop
or
and
mov
decl
mov
mov
insl
pop
sub
or
or
ffreep
lods
stos
mov
ja
outsb
mov
cmp
clc
ja
xchg
adc
repz
insl
js
daa
aam
pop
jne
js
jmp
jbe
add
icebp
aas
pushf
test
cmpsl
insb
xchg
xchg
dec
mov
xchg
daa
pushw
pushf
mov
jne
jl
mov
mov
aam
andb
std
mov
adc
mov
leave
popa
iret
push
adc
add
std
aas
pop
ds
lret
icebp
imul
mov
xchg
xchg
insb
jo
aas
ljmp
js
inc
fcmovbe
adc
cmp
clc
out
mov
lds
cmpl
pop
out
mov
aas
and
push
aam
xor
jmp
lods
mov
or
or
fs
ss
xor
sbb
fsubl
mov
jg
hlt
jmp
inc
aas
or
fnstcw
jle
aas
push
hlt
imull
mov
ja
pop
xlat
xor
nop
aad
in
mov
mov
imul
call
out
faddl
add
repnz
or
mull
jbe
outsb
jecxz,pt
jmp
iret
sar
js
inc
pop
push
test
sar
jnp
nop
pop
out
sbb
int
push
jb
push
negb
push
popl
inc
jle
clc
lahf
movsb
mov
push
bound
jl
cltd
push
xchg
std
inc
cmp
jmp
pop
pusha
add
mov
dec
add
test
ljmp
jne
mov
xchg
cmpsb
movsl
sub
sub
push
inc
std
jmp
rcl
dec
jno
xchg
dec
ljmp
nop
and
imul
jp
aas
sub
mov
hlt
jmp
repnz
das
jle
adc
dec
enter
or
sbb
movsb
lcall
test
pop
ret
iret
fmuls
icebp
lock
out
push
and
rep
dec
insb
int3
sub
xor
cli
fldl
out
imul
adc
fidivrs
repnz
shll
mov
jg
mov
jl
pop
sbb
jge
jp
sti
ja
dec
ret
arpl
mov
decb
roll
xchg
test
adcl
mov
adc
imul
xchg
jl
and
icebp
jp
enter
pop
popf
jae
mov
test
outsb
sar
loope
daa
rorb
or
clc
fwait
scas
inc
inc
orl
jp
jmp
rolb
push
lahf
insb
cmpl
call
pushf
ljmp
pop
lret
lret
and
push
push
addr16
jg
push
lahf
push
pop
pusha
jo
ret
shl
lcall
incl
or
fs
dec
es
lahf
add
ja
loopne
sbb
call
cmc
mov
jb
das
xchg
mov
fabs
rcrl
loope
jg
xchg
lcall
sahf
jp
lods
adc
pop
sub
out
push
mov
stos
cli
and
xor
mov
adc
adc
aam
dec
fmuls
ljmp
aas
xchg
push
push
clc
sahf
fwait
out
xchg
mov
ret
inc
inc
push
mov
cmp
mov
fstps
into
sub
jae
rcr
or
pop
addr16
add
nopl
push
pop
jge
lock
adc
push
cli
dec
push
les
add
mov
pushl
jbe
or
add
xor
lahf
std
add
sti
push
or
aad
sbb
int
sbb
jne
outsl
ja
dec
fs
jmp
in
incl
cmp
mov
movsl
fcmovnbe
scas
push
lahf
push
lock
lods
aaa
aam
decl
std
movb
arpl
mov
stc
lahf
sarl
jmp
nop
push
mov
fucomi
es
xchg
inc
or
mov
inc
paddq
xchg
xchg
rcrb
pop
clc
sarl
xchg
unpcklps
inc
sub
add
add
stc
adc
jb
popf
mov
mov
std
jmp
pop
cs
adc
loopne
imul
andb
inc
add
fsubrl
cmpsb
push
pop
loopne
mov
scas
push
lds
sbb
mov
push
sbb
sub
mov
arpl
ja
mov
sbb
outsb
jl
es
movsl
insl
pushl
pop
daa
mov
sub
dec
push
mov
dec
loop
aad
ja
pop
cmp
or
daa
jns
inc
push
add
clc
and
popa
stos
pop
je
inc
cmp
les
adc
test
jne
jg
pop
pop
inc
js
jg
jmp
xchg
cld
pop
push
ljmp
inc
movsl
xchg
or
or
enter
js
loope
ret
ja
mov
stos
aaa
test
ja
fistl
dec
mov
pop
add
pop
das
dec
hlt
stos
xchg
or
test
pop
push
cli
jae
movsl
lock
mov
mov
mov
jecxz
xchg
jne
test
mov
sahf
fwait
sub
pop
movsb
jmp
outsb
mov
lea
pushf
mov
dec
push
sbb
scas
push
mov
mov
leave
mov
push
xor
sub
jnp
jnp
mov
mov
roll
mov
and
rcrl
ja
addr16
push
add
adc
jg
push
xchg
sbb
cmp
insb
mov
mov
mov
lahf
das
fcoml
mov
and
nop
mov
cld
cmc
pop
ldmxcsr
stos
out
push
popf
std
imul
jmp
sub
arpl
roll
stos
ret
jmp
adc
imul
outsb
push
push
hlt
xor
aas
inc
gs
mov
cld
push
or
insb
sti
mov
pop
ljmp
adc
inc
call
xor
sbb
aad
call
or
xchg
lret
cmp
ljmp
jecxz
mov
in
jge
cmp
fwait
adc
icebp
mov
loopne
push
call
cmp
and
jg
adc
sti
lret
push
dec
adc
cmc
mov
test
rorl
ret
lds
out
daa
mov
sbb
daa
inc
or
dec
cwtl
loopne
and
aaa
or
aam
xchg
or
sti
and
jle
cli
aas
cmc
out
dec
or
icebp
movsb
nop
lds
cld
into
jge
dec
xchg
xor
push
mov
and
lcall
mov
add
imul
mov
push
stc
pop
adc
push
data16
add
decl
clc
iret
and
sbb
xlat
mov
ss
bnd
dec
xor
hlt
lahf
stos
aas
inc
dec
xchg
inc
push
ja
aam
xchg
aas
negb
or
cmpsb
mov
inc
mov
or
scas
sti
mov
stos
outsl
cmp
push
gs
fistpll
xchg
ficomps
mov
xor
insb
pop
idiv
idiv
ret
pop
jecxz
lock
rcrl
mov
fcmovne
add
adc
mov
sbb
cmp
clc
adc
in
insb
mov
mov
pop
fsubrs
xchg
std
cli
ja
lahf
mov
or
push
test
out
fldt
mov
hlt
xor
mov
faddl
loop
in
out
pop
ss
or
cmp
aad
test
mov
cmp
aam
mov
scas
or
cmp
xchg
ret
and
aam
lods
lds
lock
dec
jo
pop
test
or
incl
stc
call
sbb
loop
idivl
jmp
cmp
ret
cwtl
pop
or
mov
fidivrs
inc
pop
mov
mov
rorl
inc
addl
add
cmp
mov
ljmp
or
or
clc
mov
or
insl
mov
daa
lock
add
add
and
push
jns
enter
mov
pop
push
sarb
arpl
mull
push
inc
add
dec
fcompp
inc
ljmp
pop
xchg
sub
loopne
aam
push
xor
push
stos
xlat
stos
data16
aas
push
decl
jle
stos
cltd
je
fisttpl
lret
xor
cld
cmp
lcall
xchg
adc
xlat
dec
jmp
repnz
movsl
dec
lahf
jmp
mov
aam
insb
sub
and
or
popl
out
gs
pop
rolb
popf
sbb
sti
xchg
or
insb
cld
push
incb
out
cld
pop
dec
out
or
lods
push
mov
dec
xor
dec
aam
xchg
xor
lds
inc
sbb
xor
adc
cmp
test
cmp
adc
hlt
pop
inc
adc
in
cli
inc
les
jb
or
add
jg
sub
push
into
xchg
xor
jg
xchg
insb
bound
loop
push
stos
inc
sbb
inc
adc
lock
out
pop
rol
movsb
popf
lahf
fimuls
arpl
imulb
or
mov
rorb
sub
iret
clc
aas
jmp
add
or
lods
out
out
fisubl
dec
mov
or
js
push
pop
out
mov
inc
std
pop
leave
clc
jmp
mov
lahf
jno
adc
cli
sbb
mov
adc
loope
ds
roll
push
ljmp
test
mov
xor
je
aad
aas
loopne
dec
popf
es
arpl
pop
aaa
sbb
cmc
out
adc
rcrb
shlb
sahf
and
clc
inc
mov
cmp
pop
stos
ret
pushl
fldcw
sbb
push
mov
mov
aaa
movsl
sti
sub
inc
adc
mov
shll
xchg
in
enter
loope
ret
loope
adc
psraw
decb
subl
sbb
cmp
cld
inc
mov
stos
cmp
mov
pop
push
aas
mov
push
jae
jnp
loopne
cmc
push
pop
push
hlt
xchg
sbb
lock
and
cmp
daa
sbb
add
sarb
sahf
iret
icebp
pop
sbb
cmp
pop
jg
out
push
das
push
divl
mov
fnstsw
jmp
adc
in
lret
shrl
imul
mov
aas
mov
mov
inc
int
sbb
push
in
inc
sub
lds
cltd
xor
es
pushl
loop
sbb
lea
popf
sti
ds
pop
mov
xor
cltd
add
notb
pushf
jle
pop
mov
les
sub
mov
fdivp
daa
xchg
cltd
dec
pop
xchg
sti
fisttpll
cmpsb
dec
ja
mov
sub
pop
sub
dec
push
fisubs
fnstcw
enter
es
pop
test
xorb
jg
xor
scas
arpl
test
add
jnp
insb
inc
adcb
test
jnp
or
insb
in
iret
mov
dec
and
mov
inc
sti
or
mov
mov
mov
addr16
push
movb
cmp
add
mov
arpl
sub
ret
jmp
clc
sbb
cmp
and
push
adc
es
arpl
jo
notb
fstl
scas
clc
adc
fistps
adc
andl
cld
push
ljmp
js
loop
add
push
js
pop
dec
inc
mov
outsl
xor
pop
int
jmp
xchg
inc
insl
jp
adc
sbb
iret
lds
cmp
fnstsw
pusha
in
shr
add
idivl
test
es
out
fldt
push
push
jp
hlt
pop
shll
push
movsl
jp
mov
push
mov
inc
mov
jecxz
jbe
mov
stc
sbb
test
call
fistps
mov
test
push
stos
mov
add
lcall
push
push
into
sbb
sbb
aas
and
ret
std
cltd
dec
sahf
daa
xchg
imul
cltd
iret
adc
cmp
xor
faddl
imul
pop
jne
jl
dec
pushf
sub
std
or
repnz
pop
mov
mov
arpl
or
jecxz
pop
mov
fstpt
call
les
sub
add
mov
pop
icebp
test
ret
cmpb
jge
outsl
loopne
std
add
push
push
and
sbb
jne
mov
dec
dec
push
dec
dec
dec
sti
outsb
push
ljmp
jl
xor
and
push
push
pop
mov
aam
dec
cmp
jge
push
and
cmp
jge
dec
mov
imul
lcall
lret
push
cmp
jnp
cld
jecxz
add
pop
ja
bound
dec
faddl
inc
cmp
push
sub
incl
or
mov
arpl
bsr
pop
icebp
pop
movsb
jle
cld
js
dec
mov
ret
test
adc
out
push
add
dec
sbb
mov
testl
stos
fdivrl
cmc
jecxz
nop/reserved
sbb
gs
dec
xlat
pusha
sbb
incb
cmp
std
and
jg
adc
ret
mov
pop
and
push
pop
jbe
and
imul
incl
mov
add
in
inc
sbb
aas
mov
cmpsb
imul
cmp
inc
fbld
push
lds
adc
gs
mov
add
int3
mov
testl
mov
ret
loope
in
cli
aad
xchg
jmp
and
incb
lods
xchg
sub
data16
jbe
fnstcw
je
adc
or
or
clc
arpl
mov
dec
iret
stc
inc
push
mov
add
es
adc
lahf
push
inc
lods
adc
fsubrs
push
test
pushf
test
adc
dec
add
jae
xchg
add
cmp
and
push
mov
push
jl
sti
movsb
pop
mov
call
rorb
lcall
pop
sub
fsubrp
clc
pusha
mov
rcll
enter
shlb
in
in
pop
sbb
pop
xchg
ds
add
mov
lret
mov
lahf
call
or
lret
call
and
jbe
mov
jmp
lock
fstpl
sbb
in
inc
dec
scas
call
mov
adc
xor
fistpll
and
nop
add
and
scas
mov
and
mov
or
dec
loop
xchg
gs
adc
aaa
popa
shr
push
or
sub
xor
inc
ljmp
xchg
xor
pop
push
in
fisttps
sti
nop
gs
mov
cs
sub
jp
push
cmc
mov
pop
inc
mov
mov
fisttps
mov
adc
and
pop
lods
pusha
sbb
loope
lock
leave
lods
dec
cmpl
es
es
call
push
mov
les
cs
adc
cmpsl
loopne
in
fs
lcall
fdivrl
cmp
pop
push
pop
sub
or
mov
fcoms
or
and
jmp
lock
dec
std
cmpb
inc
adc
aas
dec
in
test
pop
xchg
adc
pop
fdiv
fisubrs
in
loopne
mull
pop
outsl
lock
jmp
fimuls
shrb
push
cmp
cwtl
iret
xlat
push
sub
ss
pop
push
lock
pop
movsl
or
push
sarb
testl
ret
call
adc
loopne
ljmp
decl
stos
daa
shlb
adc
add
dec
adc
shrl
es
xor
push
loop
xlat
xchg
adc
cld
sti
jae
sbb
flds
jb
inc
call
js
push
pop
and
cwtl
mov
adc
aad
xor
les
enter
insl
shlb
sub
gs
cmp
out
xor
lea
and
pushw
cmpsl
idivl
bnd
mov
lahf
adc
sub
stos
add
fldcw
pop
pop
lock
cmp
mov
dec
std
scas
das
add
loop
shl
dec
lock
inc
fisttps
out
push
cld
out
cmp
aas
inc
xor
jnp
shll
mov
in
setl
jp
mov
das
cmc
jecxz
adc
push
jb
cmp
pop
push
cmp
jbe
push
xor
xchg
or
pop
leave
pop
icebp
lahf
sti
xchg
pusha
xorb
mov
push
sub
mov
outsb
pop
fisubs
xor
adc
iret
and
fistpl
mov
add
dec
lret
push
sbb
fnstenv
setae
jnp
mov
xchg
aad
out
std
pop
add
sbbl
inc
sub
or
repnz
and
ja
aas
jb
dec
pop
or
shrl
sub
es
lea
mov
xchg
cmp
aas
negl
inc
jns
cmp
fcoml
mov
push
mov
mov
enter
push
lahf
test
ret
aas
cmp
cmpsb
iret
or
mov
cmpl
mov
cmp
or
mov
enter
jg
addl
les
inc
addb
or
sub
out
inc
fucomi
add
dec
pusha
xor
jl
mov
andl
stos
clc
sbb
cmp
mov
xor
adc
test
xchg
mov
mov
inc
mov
gs
call
or
cli
and
cmpsl
hlt
cli
mov
subb
fisubrs
roll
movsb
mov
mov
int
lds
hlt
pop
jg
stos
mov
mov
mov
fmuls
aas
cmp
lods
clc
push
outsl
lds
jnp
popf
dec
or
sub
xchg
movl
push
cmp
inc
adc
adc
sarl
jmp
je
xchg
mov
mov
jnp
mov
stos
subb
mov
cmc
jbe
mov
or
push
xchg
or
sub
std
adc
daa
xor
cmp
add
imul
cmp
adc
inc
jge
sub
mov
xchg
imul
push
std
pusha
mov
pop
inc
sbb
scas
jg
inc
pushf
jno
std
mov
pop
add
mov
mov
test
cmpsl
push
sub
les
rorl
cmpsb
pop
pop
incb
xor
decl
jp
ret
xchg
sbb
pop
jp
mov
jb
pop
cwtl
mov
mov
xchg
jae
adc
dec
lea
cmp
add
and
js
cmpsb
and
mov
bound
test
push
jno
gs
pop
sub
daa
push
lock
mov
fldt
les
das
jge
xlat
fmull
sbb
fisttpl
sbb
inc
mov
pop
adc
rol
push
mov
xor
clc
clc
aad
inc
add
icebp
inc
xor
sub
pop
xlat
add
mov
mov
sub
ss
or
iret
push
ljmp
dec
inc
rcr
adc
dec
push
sub
xchg
add
and
push
push
filds
xchg
call
jns
push
cmp
pop
xlat
aam
push
ret
add
mov
aas
punpckhbw
push
add
cwtl
aaa
or
popa
pop
xchg
or
jb
icebp
cli
cld
dec
hlt
xchg
sub
add
cmpsb
inc
call
sbb
mov
pop
adc
adc
adc
sub
mov
addb
xor
cmp
add
mov
sbb
push
test
cld
pop
inc
int
das
dec
xor
loop
or
pop
adc
outsb
fwait
and
lea
jae
push
add
aas
mov
mov
inc
add
adc
and
lcall
sub
pop
ljmp
jae
addr16
enter
add
cmp
movsl
sbb
dec
adc
sub
pop
inc
addb
fcmovu
add
stos
xor
fs
sub
xchg
cmp
test
push
pusha
or
dec
adc
icebp
ss
mulb
add
mov
xor
inc
fcompl
out
push
mov
mov
adc
xor
mov
int3
jns
mov
or
push
jae
es
inc
imul
cmp
pop
mov
cmc
je
adc
push
cli
pop
xor
inc
cmovne
out
push
xchg
mov
xchg
mov
sub
ljmp
add
inc
lcall
or
push
orb
push
sbb
push
push
mov
mov
lods
push
cmpsl
jae
sbb
stc
outsl
fnstenv
lret
mov
fnstenv
fs
enter
out
scas
xchg
mov
adc
cmpsl
push
xchg
insb
xchg
add
int
lcall
arpl
enter
jmp
adc
sbb
orb
pushf
xor
adc
add
test
and
mov
sbb
mov
cmp
xlat
into
inc
jbe
fildl
notl
xchg
into
adc
pop
cmpsb
and
sbb
adc
lret
or
ljmp
mov
lcall
inc
imul
and
xchg
adc
add
subb
pop
mov
add
xchg
push
xor
mov
bound
das
jmp
aam
mov
xor
xor
mov
filds
or
clc
and
push
aam
hlt
push
loopne
add
xor
jns
mov
push
xor
or
cmpsb
lds
add
push
jmp
dec
mov
push
sub
sahf
sbb
pop
inc
cmp
and
adc
mov
mov
cmpsb
xor
sbb
push
xor
push
movl
pop
notb
push
xlat
xchg
dec
push
insb
mov
lcall
pop
loop
or
push
xchg
rclb
sbbl
mov
add
add
or
jecxz
inc
adc
inc
push
jb
lret
xor
and
inc
add
mov
add
jns
cmp
mov
aas
mov
xchg
pop
mov
loopne
xor
xor
push
popf
sbb
mov
inc
adc
test
ljmp
dec
out
imulb
mov
ljmp
dec
jne
add
mov
imul
sbb
pop
xor
shlb
out
gs
ja
xor
cmp
add
test
lods
xchg
pop
rcll
mov
xor
inc
and
xor
out
or
cmp
or
jg
and
das
shrl
subb
sbb
inc
jnp
inc
fs
bound
adc
cmp
in
in
enter
mov
or
lcall
hlt
loop
sbb
sbb
jo
pop
and
sysenter
cmp
sbb
add
jb
or
sub
mov
cltd
mov
or
inc
xchg
imulb
dec
popf
fistpl
jecxz
cwtl
push
cmpb
mov
es
stos
ret
mov
dec
lahf
aam
and
push
push
loop
sub
mov
jne
jle
and
sub
rcll
loope
push
jnp
jo
ja
cmp
inc
shlb
lods
mov
pop
ror
scas
dec
pushf
mov
xchg
int3
push
aad
cmc
add
jmp
mov
add
rcl
jle
pop
aad
lcall
lcall
push
test
xchg
imul
idivb
adc
xchg
xor
jne
jno
rcrb
jmp
push
xchg
push
pop
mov
jle
lcall
mov
cld
xor
inc
retw
fisubs
andl
sub
rorl
xor
ss
popa
loopne
push
faddl
loope
cmpsl
mov
imul
jae
add
mov
not
adc
cmp
mov
inc
rclb
and
jo
push
stos
repz
in
push
imulb
sbb
and
mov
aam
ljmp
jne
mov
pop
mov
xchg
mov
push
xor
xchg
jl
cmpsb
out
in
mov
lcall
mov
stos
sarb
lock
or
xor
dec
add
int3
leave
mov
fdivrp
adc
pop
mov
aam
enter
mov
push
mov
fxch
shrb
clc
into
push
rorl
dec
pop
xor
push
adc
cmp
jge
pop
xchg
test
out
loope
loopne
push
negb
scas
and
mov
int
rorl
rorb
pusha
xor
stos
cmp
xchg
xchg
sub
gs
fsubrl
daa
addr16
sbb
scas
mov
mov
insl
loop
arpl
mov
mov
out
rolb
mov
gs
sub
sub
outsb
movsl
pop
sbb
mov
cmpsl
pop
mov
sbbl
lods
fwait
jnp
inc
add
jae
add
push
ds
xchg
sahf
int
inc
imul
pop
xchg
dec
xor
decl
mov
dec
cmpsb
cmpb
push
mov
movsl
jb
lea
push
inc
cs
or
adc
push
mov
ret
ljmp
cmp
push
jo
mov
pop
int
sbb
bound
sbb
sub
xchg
mov
pop
inc
push
xor
out
push
dec
sbb
andl
int
jae
cmc
lea
cmp
cmpsb
sub
xchg
ss
loope
and
or
aam
pop
insb
adc
ret
mov
add
rcrb
pop
test
test
mov
test
in
sub
pushf
inc
jg
jmp
sbb
imul
mov
es
popf
shlb
out
adc
push
push
aas
and
stos
jb
adc
add
daa
or
dec
and
rclb
mov
cld
add
enter
ja
ud2
cs
inc
addr16
and
adc
push
int
sub
cmp
das
adcb
or
push
pop
out
pop
adc
push
lcall
adc
dec
fistpll
xlat
in
popf
js
rolb
xor
xchg
adc
push
xor
or
mov
sub
cltd
inc
and
jne
pop
xlat
sbb
lcall
adc
xchg
mov
adc
adcl
push
mov
jmp
enter
adc
mov
add
push
mov
cmp
adc
popa
out
enter
andl
and
es
or
pop
rclb
out
adc
xlat
adc
sarb
mov
mov
cmp
rclb
pushf
jg
push
mov
cmp
inc
pop
pop
push
pop
xchg
xchg
sarl
mov
and
lahf
adc
jae
sahf
adc
out
cltd
fildll
mov
add
add
inc
add
dec
out
jle
xchg
xor
lock
into
repnz
dec
leave
in
mov
xchg
in
mov
xor
movsl
in
rcrl
sbbb
xor
xchg
js
mov
xorl
subl
pop
rolb
gs
push
xchg
lock
pusha
outsb
adc
jecxz
and
xchg
dec
out
pop
inc
jnp
popa
test
js
sbb
add
idivb
xchg
imul
addb
cltd
jb
xchg
call
mov
mov
xor
and
out
or
in
lock
lret
mov
decl
mov
mov
rolb
cmp
lods
jno
sub
push
repz
movsl
pop
push
push
sbb
out
xor
int3
mov
push
call
add
out
cltd
sub
push
push
cmpsb
mov
dec
xorb
push
xchg
shl
cmp
xchg
push
mov
in
mov
adc
cwtl
adc
ljmp
xchg
in
dec
scas
xchg
pushf
add
jmp
mov
jl
enter
jecxz
roll
dec
aam
daa
lcall
aam
lret
lea
or
sahf
enter
lret
ror
and
xor
push
adc
lods
mov
and
mov
mov
pop
aaa
mov
mov
shrb
ret
pop
push
xchg
fisubrl
popf
loope
sbb
push
jo
and
adc
mov
js
test
push
mov
jle
xor
mov
xchg
add
xchg
inc
cmp
lea
out
and
aam
ret
test
mov
stos
mull
adc
sti
sbb
cmp
push
pop
daa
call
jns
push
scas
out
sub
insl
lds
sub
pop
mov
stos
arpl
inc
mov
push
push
je
xor
add
inc
push
rolb
mov
andb
js
inc
rcll
mov
aad
adc
pop
loopne
sahf
rorl
pop
sub
sbb
pop
sub
ret
mov
sbbb
mov
push
inc
fildl
mov
add
mov
jnp
std
daa
adc
ret
mov
mov
sahf
stc
out
jns
or
pushf
inc
dec
and
dec
mov
addb
push
push
jge
pushw
push
and
add
xor
or
push
cld
inc
mov
dec
int3
dec
pop
jp
cmp
ret
pop
push
rorb
cmp
andl
push
rcrb
xchg
jb
popa
mov
jmp
mov
pop
sbb
inc
jmp
es
rcrl
xchg
inc
mov
imul
cmp
out
add
sbb
jecxz
push
arpl
mov
jbe
cmp
add
test
cmp
sub
add
pop
sub
jb
dec
cltd
lcall
in
adc
sbb
push
cmpsb
or
mov
addl
push
sub
lret
inc
rorl
and
orl
rorl
gs
sub
out
lret
ret
rclb
mov
inc
pusha
mov
mov
xor
pop
push
sbb
shlb
js
pusha
jb
push
cs
shlb
cmpb
fimull
shl
dec
xchg
sub
roll
sub
test
mov
ror
lcall
mov
lret
mov
xor
lret
es
sbb
test
adc
stc
mov
adc
int3
jle
insl
cmpsb
out
or
idiv
lret
cmc
xor
add
adc
cwtl
sbb
inc
inc
and
add
fs
nop
or
add
mov
xchg
data16
adc
xchg
mov
fwait
xor
or
mov
push
into
inc
inc
clc
jecxz
mov
xor
cltd
dec
sbb
push
insl
mov
push
or
sbb
or
cmp
ss
lahf
and
bound
test
pop
cs
gs
xor
or
andl
add
sub
aam
hlt
cmp
js
fadds
fiadds
mov
xor
sbb
inc
push
mov
push
push
fists
sub
mov
arpl
lods
and
xchg
test
and
cmp
xchg
loopne
sub
add
fisttps
or
pop
sub
mov
add
xchg
sub
mov
popa
adcb
adc
dec
pop
ret
std
pop
add
jl
push
xchg
add
sub
sbb
and
rcl
pop
jle
outsb
inc
cli
sub
fcoml
xor
lea
insl
cmpsl
push
ret
mov
xor
popa
and
in
add
cmp
rorb
push
mov
add
or
das
mov
aam
lcall
icebp
movsb
add
in
pop
add
add
push
add
or
into
addr16
push
cmp
push
mov
push
cmpsb
test
enter
out
jo
jb
pop
sub
lret
test
xlat
dec
nop
loope
andl
imul
mov
cmp
mov
adc
mov
jo
push
push
xchg
leave
inc
mov
fidivrs
inc
hlt
xchg
cmpb
mov
pop
in
icebp
xor
inc
adc
add
adc
or
and
pushf
aam
pusha
jp
inc
xor
lock
cmp
xchg
int
outsb
push
leave
mov
jo
cmp
dec
cli
std
gs
stos
or
fisubs
adc
out
push
mov
rolb
test
sbb
cmp
adc
ds
cs
loope
xor
mov
jo
pusha
jnp
inc
jae
orl
jnp
add
push
xchg
push
test
mov
stc
sbb
or
orl
push
push
xlat
xchg
jmp
mov
jae
in
cmp
adc
pop
insb
aad
popf
jae
cmp
cmp
jo
add
xlat
orl
xor
shl
rclb
xchg
sbb
clc
loopne
ret
js
cmp
dec
add
arpl
adc
xor
add
imul
insl
stos
adc
ds
or
subl
ja
add
inc
sub
mov
dec
fmuls
inc
xchg
dec
xchg
and
cmp
test
int3
cmp
lret
iret
mov
cli
mov
mov
dec
adc
add
cmp
enter
push
cs
push
push
or
mov
rorl
cmpsl
sub
adc
mov
adc
sub
dec
insl
mov
out
inc
es
cld
lods
sbb
nop
mov
fidivl
push
and
adc
pushl
push
ss
mov
add
mov
mov
cmp
mov
sbb
xor
add
lock
sbb
pop
push
leave
cltd
test
lahf
adc
or
lret
mov
sub
mov
sbb
lock
imul
xor
add
mov
sbb
adc
push
xchg
jmp
mov
adc
in
push
loopne
adc
xor
test
adc
icebp
mov
lock
sub
cmpsl
or
mov
cmp
push
ljmp
cmp
ret
into
dec
ss
pop
lods
bnd
add
xor
add
mov
cmp
dec
loope
je
cmp
xchg
and
or
jo
xchg
mov
in
xor
push
pop
mov
inc
xchg
push
push
adc
add
lea
mov
jmp
insl
imul
sbb
cmpl
push
aas
and
hlt
mov
lea
das
sbb
notl
jae
nop
mov
into
in
sub
xchg
or
mov
cltd
dec
and
xlat
pop
outsl
js
hlt
aad
rorl
cmp
js
xor
mov
push
int
popf
scas
inc
scas
mov
add
add
pop
push
sub
mov
lods
xor
dec
or
movsl
rcrl
adc
cmp
inc
cmp
lock
xchg
xchg
inc
and
mov
out
inc
push
push
add
inc
in
adc
loopne
andl
out
scas
sbb
dec
mov
or
js
rcrb
dec
add
inc
leave
add
jo
sti
pop
mov
pop
popf
in
xor
adc
or
mov
loope
rorb
adc
adc
inc
inc
add
or
push
adc
int
ret
lret
mov
or
jbe
subb
aam
xchg
xor
jo
jo
push
add
or
add
lcall
mul
mov
lcall
loope
mov
movsb
sub
add
outsl
scas
add
sub
jbe
or
add
push
adc
push
jmp
and
mov
jmp
decb
shl
scas
popa
sbb
fisttps
adc
lock
push
int
popf
cmp
mov
xor
pop
add
test
outsl
int
out
rclb
clc
fiaddl
movl
rorb
mov
push
lock
out
sbb
pop
in
les
push
je
ror
rcrb
pop
gs
jno
sbb
pop
push
fistpll
adc
and
adc
sbb
dec
jle
pop
pop
mov
dec
jo
hlt
mov
rcrb
adc
mov
add
aas
xor
or
cmp
sbb
xor
dec
into
push
ja
jae
add
add
dec
cmp
aam
test
push
inc
mov
push
xor
mov
mov
inc
cmpsl
adc
lock
shl
jp
sub
xchg
sub
dec
xchg
cmp
inc
in
test
adc
outsb
xchg
mov
pop
dec
test
jb
xor
cmpsl
stos
cmp
stos
mov
add
iret
fisttpll
pop
xor
hlt
jge
pop
cmp
mov
and
shl
sub
xor
xor
rcrl
mov
xor
mov
addb
stos
sbb
mov
sbb
push
add
push
into
popa
call
xchg
pop
or
pop
sub
dec
andps
bound
or
fs
loop
sahf
jg
mov
add
and
mov
jne
cmp
inc
jae
sbb
add
inc
or
aad
jb
or
or
jl
cmpsb
pop
in
shr
inc
jno
into
jb
inc
inc
xor
and
stc
js
mulb
inc
cmp
inc
scas
push
push
xor
and
push
rorb
test
cmp
ror
adc
xor
jle
sbb
in
pop
arpl
in
inc
sub
cld
adc
and
cmc
fistpll
aam
xchg
mov
call
mov
xor
xor
xchg
stos
sbb
mov
int
dec
adc
mov
push
in
es
and
mov
sbb
cmp
push
add
enter
into
add
adc
pusha
mov
das
cmp
inc
cmp
adc
jne
push
decl
rorl
fsubl
push
inc
push
icebp
ret
out
and
mov
mov
mov
or
into
mov
das
test
add
nop
push
mov
daa
and
mov
in
es
adc
shrb
and
into
ja
andl
dec
mov
jnp
and
pop
adc
xor
scas
inc
and
push
dec
test
mov
outsb
push
push
sub
adc
inc
test
xorl
dec
cmp
dec
lods
xchg
push
inc
push
or
lcall
stos
je
sub
mov
cmp
cmp
adc
push
sub
jbe
in
mov
xor
gs
icebp
rolb
aad
push
dec
cltd
jb
fisubrl
push
cwtl
orb
fwait
xlat
cmc
test
xchg
or
sbb
add
jbe
pop
push
mov
push
or
bound
xchg
fnstsw
pusha
xor
mov
push
test
xchg
xchg
pusha
adc
sahf
inc
inc
into
push
xchg
aad
fnstenv
sub
push
roll
mov
ret
jp
push
xchg
jae
sbb
mov
movsl
push
or
shl
in
pop
jae
insb
mov
sub
sti
orb
cmpsb
dec
addr16
leave
subb
mov
sub
mov
ficoml
xor
or
adc
xchg
jmp
scas
cmpsb
jbe
clc
jb
ja
or
xchg
xchg
scas
sbb
xor
lcall
mov
push
and
add
push
mov
test
ja
sbb
fs
roll
retw
pop
adc
and
sbb
out
stos
mov
push
lods
sub
lcall
bound
ljmp
test
or
xchg
sbb
add
loopne
enter
push
sub
jp
add
stos
mov
cmp
mov
xor
sub
pop
mov
xor
jo
adc
std
dec
sets
xor
insb
nop
push
sub
jge,pn
sub
aas
call
mov
adc
fsubl
test
fstps
lahf
pop
mov
push
pusha
vpcmpeqb
int
adc
sub
les
sbb
in
shl
push
push
insb
xor
sbb
mov
call
in
pop
and
gs
fimuls
cs
sbb
rorb
jb
or
push
leave
inc
or
sbb
push
and
inc
loopne
add
jb
cmp
push
sbb
aam
test
pushf
or
hlt
sbb
jle
sub
jb
push
loope
adc
pop
cwtl
rorb
faddl
pop
xchg
pusha
mov
mov
adc
add
dec
loopne
daa
mov
daa
adcb
dec
push
pushf
jbe
push
jae
cmp
andb
cmp
cwtl
mov
add
hlt
adc
sbb
pop
mov
adc
test
divb
add
sbb
cs
mov
jmp
xchg
pop
mov
adc
mov
out
cmpsb
jle
and
cmpsb
push
cmp
and
mov
fimuls
xor
pop
imulb
test
mov
enter
loope
jo
cmpsl
cmp
xchg
sbb
loope
sub
push
loop
cmc
cwtl
test
mov
loop
mov
jo
shlb
sbb
ret
sti
cmp
push
cltd
xor
sbb
loope
add
xchg
dec
mov
inc
shlb
into
push
cmp
push
loop
xor
inc
pop
mov
adc
js,pn
xor
mov
and
xchg
cmp
pop
jae
inc
and
mov
push
inc
mov
popa
enter
inc
inc
pop
inc
xor
aad
leave
xor
dec
vmwrite
push
das
or
mov
mov
inc
popa
jo
mov
loope
xchg
ret
leave
pop
sbb
lret
and
rolb
aam
and
lea
test
daa
sbb
stos
sbb
into
jge
mov
push
cwtl
mov
jmp
mov
push
push
hlt
ret
test
push
icebp
lcall
add
jg
mov
sbb
sub
mov
fisttps
shrl
or
fldcw
in
outsb
fwait
cmp
inc
test
push
adc
cmpsb
lcall
mov
push
lea
adc
pop
aam
mov
push
xor
pop
inc
push
pop
jae
push
cwtl
and
jp
pop
push
cmp
in
leave
roll
cmp
sbb
jle
int
jmp
movsb
movsl
cmp
sbb
icebp
into
pop
into
push
mov
out
push
nop
imul
out
adc
adc
jmp
push
mov
inc
int
xor
jo
fiadds
push
outsb
xor
dec
cmp
ror
cmp
sbbl
aad
push
into
test
popa
js
pop
adc
push
push
and
add
adc
inc
int
mov
xor
pusha
jbe
lock
rcr
daa
add
add
jge
loope
in
xchg
mov
lods
adc
inc
orl
or
sar
out
mov
adc
push
mov
sbb
ret
dec
adc
add
cmpsl
cwtl
dec
mov
and
mov
push
aam
cmc
lret
sahf
faddl
pop
out
jae
or
xor
mov
jl
jo
addr16
mov
enter
das
adc
dec
inc
imul
cmp
dec
cmp
cmp
out
scas
int
mov
inc
sbb
imul
test
push
lcall
xor
cld
xor
cltd
loopne
inc
xor
add
sbb
cs
cmp
int
xlat
or
ficoml
lcall
jb
pushl
push
pop
mov
lret
push
inc
xchg
adc
jg
roll
add
aam
fildll
pop
call
dec
cmpsb
data16
mov
dec
mov
icebp
pusha
adc
xchg
or
jns
mov
addb
aam
insb
mov
mov
orl
test
shlb
jo
lods
int3
lock
or
or
repnz
push
pusha
pop
adc
or
pop
dec
and
adcl
jp
or
popa
jnp
ljmp
and
orl
std
cmp
leave
jae
sbb
push
sbb
or
pop
push
inc
leave
xor
leave
aad
cmp
jge
mov
lcall
addb
or
cmp
enter
jno
cmp
rolb
arpl
pop
mov
pop
cmpsb
inc
jecxz
add
pop
adc
mov
lcall
cmp
mov
scas
jp
sub
outsl
orl
mov
sbb
lcall
mov
mov
sbb
mov
inc
insb
ds
mov
hlt
sbb
mov
leave
in
push
mov
movsb
rclb
cwtl
sub
out
loope
shlb
and
hlt
cmp
cld
movaps
addl
or
mov
andl
xor
divb
adcl
or
xchg
dec
mov
cmp
sub
test
xlat
daa
add
add
dec
adc
js
xor
cltd
or
mov
unpckhps
je
jle
dec
lret
ret
enter
pusha
enter
jb
mov
fsubl
or
xchg
imulb
sbb
js
xchg
xor
test
push
push
mov
mov
or
sub
sbb
test
mov
and
jo
or
jle
sar
pop
xor
movsl
adc
adcb
push
mov
negl
repz
add
das
or
mov
adc
enter
subl
je
mov
cmp
add
pop
sbb
aam
xchg
inc
out
sub
and
ret
xchg
mov
mov
mov
imul
dec
ret
scas
ret
sbb
and
adc
pop
add
nop
xorl
and
jnp
dec
aam
inc
inc
xorb
sbb
xchg
cltd
in
jecxz
sbb
mov
aad
addr16
ljmp
push
xchg
xchg
adc
imul
push
das
inc
lcall
jp
enter
push
mov
push
adc
sbb
loopne
fwait
insb
push
or
cmp
add
push
dec
sub
inc
cmp
dec
xchg
test
loop
add
sbb
sub
lcall
adc
or
loope
stos
mov
sbbb
gs
in
dec
mov
and
ret
ss
push
rcrl
ficomps
int3
inc
inc
mov
es
test
or
scas
adc
cmpsl
and
stos
cmpb
or
cmp
js
lea
jae
and
add
mov
pop
cmp
xchg
sub
test
sti
ret
adc
loopne
jecxz
mov
push
mov
cmp
mov
leave
jb
inc
lds
stos
xor
repz
inc
into
push
scas
xlat
mov
je
inc
mov
fiaddl
out
inc
mov
inc
lods
loopne
rorb
iret
adcl
popf
sub
jo
out
add
mov
rolb
cmp
xchg
sub
clc
ret
add
arpl
add
imul
push
cmp
nop
outsb
sub
mov
lret
fcompl
js
inc
cmp
andl
adc
add
mov
das
sbb
fmuls
xor
sub
mov
push
push
xor
and
sbb
jge
stc
adc
fistl
mov
je
mov
push
pop
dec
adc
dec
loopne
roll
addl
xor
push
push
add
sbb
leave
mov
pop
in
inc
xchg
inc
fldl
xlat
cltd
push
roll
scas
jbe
dec
out
cmp
adc
mov
jb
sbb
out
test
dec
mov
out
inc
lods
enter
inc
sub
xchg
mov
xchg
xchg
xchg
out
push
sbb
insl
es
push
cmpsb
jge
sub
dec
mov
hlt
push
jne
ficomps
testb
push
mov
cs
leave
mov
inc
xor
pop
cmpsb
xor
es
jb
sahf
xchg
pusha
jnp
nopl
jb
xchg
push
sbb
sbb
jle
sbb
mov
adc
mov
loope
and
sub
stos
clc
popa
movsb
andb
mov
stc
adc
xchg
xchg
xor
adcb
mov
or
add
enter
pop
or
test
and
popa
sub
add
enter
ret
stos
or
andb
xor
aad
mov
push
cltd
mov
sbb
dec
push
sub
int3
mov
fcmovnb
negb
nop
and
cli
add
sbb
sub
sub
xorl
add
sbb
test
in
rcll
push
mov
mov
into
xlat
adc
or
xchg
icebp
or
inc
clc
cmc
int3
and
sbb
fisubrl
ret
sub
enter
add
mov
sub
sarb
inc
scas
xor
dec
sub
insl
stc
push
movntps
adcb
mov
sti
inc
pop
adc
sub
dec
mov
sub
add
arpl
xchg
push
lock
daa
lret
arpl
or
add
or
shll
in
pop
loopne
cli
fiaddl
xor
mov
mov
aam
or
push
daa
or
faddl
jo
insl
faddl
cmp
lcall
out
pusha
jb
add
cs
cmp
ljmp
lret
xor
lcall
loope
cmc
popa
dec
push
loop
and
or
pop
xor
mov
mov
add
adc
adc
ljmp
data16
inc
add
sub
fstpl
mov
or
xor
adc
push
scas
popa
mov
or
loopne
scas
notb
pop
push
xchg
sahf
js
loopne
popa
cmc
adc
js
mov
imul
cmp
inc
inc
dec
add
mov
shlb
lret
mov
adc
out
into
shll
pop
je
jo
mov
mov
aad
testb
xchg
or
dec
cld
in
cmp
push
xchg
loope
push
mov
fildl
mov
add
fstpl
sub
mov
push
jle
scas
imul
sbb
xlat
push
xchg
jg
js
adc
les
and
daa
mov
pop
push
dec
popf
xchg
aam
jnp
inc
test
cmp
sahf
cwtl
or
pusha
test
adc
pop
push
shrl
inc
test
pop
in
cmpsl
ljmp
add
and
or
ret
fistpll
sbb
mov
loope
test
inc
push
call
xorl
mov
mov
mov
popf
mov
mov
test
adc
insb
cli
outsl
int
add
and
cmpsl
cmp
jno
int3
add
push
jg
inc
adc
add
sub
sbb
adc
sbb
xor
push
les
add
mov
push
xchg
pop
stos
xchg
jne
dec
decl
xchg
push
dec
fidivl
fs
inc
xchg
addr16
sub
add
bound
lock
mov
jle
mov
push
cs
inc
dec
push
and
aad
pusha
loop
jl
arpl
dec
inc
pop
pop
loop
push
jp
aam
sbb
cmc
xchg
jmp
sbb
sub
out
dec
out
sbb
inc
xchg
push
sbb
add
push
sub
sbb
and
jnp
inc
cmp
lods
fisubrs
jp
popf
mov
inc
mov
rclb
sbb
dec
xor
xchg
fadds
dec
adc
sub
add
roll
stos
xchg
jns
and
jo
cmp
cltd
shll
stos
sub
push
cmp
cwtl
or
sub
push
inc
cmp
in
push
push
jne
add
jo
mov
in
mov
push
add
fldl
or
xor
and
push
xchg
xchg
push
mov
dec
scas
sbb
push
add
inc
aam
sub
mov
push
enter
add
lret
notb
test
xor
and
pop
es
jne
aaa
or
lcall
add
fmull
imul
leave
push
fbld
out
cs
push
xchg
cmp
imul
cmp
mull
cmp
sbb
xlat
adc
mov
lcall
cmp
push
add
mov
jge
and
push
inc
jo
adc
mov
pop
je
mov
mov
xor
push
pop
sbb
dec
push
sbb
das
mov
dec
mov
push
loope
pop
sbb
xchg
sub
addr16
lea
or
inc
xor
add
shl
aas
mov
cmp
enter
lods
mov
mov
jae
pop
out
push
xor
sbb
aaa
and
sub
adc
pop
std
mov
loopne
xor
shl
xor
and
cmp
jecxz
xchg
push
arpl
out
stc
out
push
dec
cmp
in
or
sub
and
cltd
xor
mov
test
and
loope
popa
jb
dec
jne
enter
mov
jmp
inc
clc
popa
arpl
cwtl
add
add
xor
loop
jmp
inc
scas
push
xchg
sbb
aad
dec
int
loopew
push
call
mov
dec
repnz
and
cmc
sbb
movsl
adc
sbb
loopne
ret
dec
adc
and
jb
jo
cmp
jbe
xor
jne
cmpsb
pushf
sub
push
or
das
push
mov
std
pop
xorb
lea
mov
push
test
mov
xchg
xor
inc
inc
ret
sbbl
mov
xor
sbb
pop
inc
ret
test
sbb
dec
mov
cs
pop
popf
push
xchg
jmp
push
inc
adcl
loope
jg
inc
mov
test
or
aam
mov
sarl
add
repnz
movhps
add
adc
xor
arpl
subl
stos
and
lock
or
aas
xchg
or
leave
push
jae
adc
pop
imul
jb
ficompl
and
push
orb
stos
mov
sub
pop
out
imul
dec
stos
xchg
xchg
lods
fs
gs
cltd
lods
add
cmp
cmp
popa
stos
inc
push
sub
adc
mov
adc
or
or
stos
in
pop
fs
push
pop
int
inc
or
mov
adc
and
mov
repnz
dec
gs
loop
jnp
inc
add
ret
test
bound
jge
dec
rorb
xor
pop
add
js
push
or
loopne
repnz
sub
adcl
loop
orl
dec
mov
repz
xor
imul
shlb
and
js
ficoms
fnstcw
in
sbb
mov
shrl
mov
test
test
rcrb
jb
int
add
cmp
imul
sbb
mov
push
loope
push
inc
xchg
pusha
scas
and
sbb
cwtl
and
or
push
test
or
mov
xor
push
iret
add
pop
jne
popf
call
inc
xor
orb
jae
cmpsb
push
adc
or
cmp
sbb
add
adc
adc
add
and
xor
in
fiaddl
es
das
pop
sbb
pushf
lcall
pop
dec
inc
popa
mov
enter
adc
xor
loopne
jmp
mov
or
sub
mov
mov
lahf
push
and
outsl
fists
int
push
dec
mov
jae
push
push
inc
jle
movsl
sub
xor
or
popa
arpl
xor
in
jb
push
jae
mov
cmp
pop
mov
sub
test
paddusw
or
ljmp
or
push
push
add
popa
shlb
jp
lret
pusha
jb
stos
xor
lcall
jae
mov
push
cs
push
xor
mov
adc
push
pop
mov
add
mov
shrl
mov
or
mov
adc
mov
movsl
jb
and
xchg
enter
xchg
and
push
push
scas
cwtl
roll
pop
popa
inc
fs
and
push
roll
mov
xor
fistpl
or
cmp
pop
xor
push
rcll
andl
push
mov
jl
lret
pop
repz
adc
rcr
push
int
inc
jp
aam
test
push
stos
jns
inc
nop
and
xchg
mov
jmp
nop
lock
jns
push
push
push
jmp
fists
mov
mov
jno
and
mov
iret
pusha
hlt
inc
je
dec
jg
es
jnp
ret
dec
roll
push
xchg
sub
mov
cmp
ds
inc
scas
pushf
sbb
push
sub
insb
xchg
rorl
shlb
push
sub
dec
sar
rorb
mov
and
dec
jb
sbb
add
mov
pop
xchg
mov
mov
or
add
loop
mov
add
mov
add
sbb
inc
push
adc
add
clc
icebp
mov
hlt
rolb
jne
sti
imul
outsb
push
dec
sub
mov
adc
daa
pop
clc
push
cmp
adc
test
mov
adc
jp
or
push
pop
push
lahf
and
hlt
cmc
outsl
adc
ljmp
add
dec
subb
and
mov
jns
sbb
fistpll
fwait
cmc
and
mov
out
sub
in
ret
xchg
lret
xchg
bound
add
and
or
jae
mov
jge
jb
addb
adc
mov
ret
cmc
enter
inc
imul
inc
and
popf
push
xor
jg
inc
fisubl
das
arpl
inc
dec
in
shll
pop
xchg
adc
add
lret
cltd
cmpsb
negl
repnz
in
insb
inc
test
loope
orl
push
loope
pusha
fs
mov
int
js
sub
popa
test
sbb
ficomps
adc
out
push
lods
call
xor
push
sbb
stos
imul
stos
inc
or
or
dec
inc
dec
cltd
push
push
mov
cmc
adc
rolb
inc
mov
sbb
add
pop
fldt
inc
push
jecxz
mov
inc
cltd
aad
aad
jo
int
mov
jb
sbb
fldt
adc
xchg
add
inc
cmp
cmp
pop
inc
das
sahf
jp
add
js
ret
ljmp
and
mov
push
outsb
ss
hlt
mov
push
je
shll
jmp
xchg
and
push
shrb
in
pop
xor
pushf
xchg
int
mov
cmp
pusha
mov
mov
push
out
xchg
mov
add
pop
and
sbb
adc
or
ret
lods
lock
daa
stos
clc
push
jp
push
dec
test
or
and
ljmp
xor
dec
andl
pop
push
icebp
mov
rolb
scas
sbb
out
push
pushf
jnp
or
out
rcrl
shl
add
cmc
cmpsb
fbstp
subl
xchg
sub
sub
outsl
xchg
and
push
adc
out
clc
cld
push
mov
sub
mov
or
push
add
out
dec
repnz
mov
enter
roll
push
mov
push
or
add
jg
inc
mov
daa
incb
cltd
xor
rorb
pop
sbb
orl
mulb
sub
shl
and
sub
push
push
mov
xor
push
mov
mov
add
pop
xor
sub
or
cmp
enter
xor
jno
jo
scas
mov
icebp
push
jo
or
hlt
xchg
and
dec
push
xor
mov
mov
mov
shrl
mov
lahf
daa
mov
add
loope
js
out
ss
gs
mov
or
inc
ds
xchg
sbb
adc
push
jle
loope
in
mov
pop
loopne
loopne
icebp
idiv
stos
loope
cld
hlt
test
push
popf
lcall
dec
sbbb
xor
ss
aad
xchg
shrl
sbb
push
xor
jmp
inc
push
mov
inc
in
lcall
or
jmp
xchg
shlb
dec
jle
test
out
add
mov
add
cwtl
or
scas
mov
sbb
jae
push
repz
popl
inc
out
mov
cmpsb
out
out
mov
cltd
or
shlb
adc
subl
push
mov
leave
gs
cltd
movsl
inc
jnp
iret
fs
inc
xorb
les
sub
sub
lahf
loop
mov
fcomps
stos
push
xchg
lret
add
push
cltd
jns
add
push
ljmp
mov
jae
int3
enter
or
sbb
xchg
lock
push
dec
xchg
repnz
ds
add
xor
decl
outsb
mov
shrb
shlb
sub
insb
fstpl
fadds
inc
mov
jnp
in
cmp
push
jnp
loop
or
mov
sub
pop
mov
nop
mov
repz
xchg
insl
mov
mov
xchg
rcrl
mov
jp
mov
fldcw
xor
fdivrl
ja
call
in
sbb
push
int
mov
lahf
scas
sub
in
das
aas
scas
add
lret
xchg
sbb
rolb
xchg
add
push
lods
push
mov
clc
pop
ljmp
dec
test
or
inc
add
xlat
loopne
aad
inc
int
and
adc
sbb
loop
and
xchg
dec
mov
cwtl
push
jb
jns
mov
aas
dec
daa
rorb
test
sub
jb
add
scas
addl
sbb
mov
pushf
jae
push
movsl
lods
sbb
inc
pop
es
test
dec
dec
gs
data16
adc
test
xchg
popa
rorb
inc
xor
mov
push
test
stos
add
xor
pminub
xchg
jnp
xchg
sub
fnstcw
nop
ret
cmp
mov
ret
sbb
cmp
fldcw
add
xor
add
pop
addb
enter
push
add
or
mov
cmp
lret
or
pop
ss
push
loop
loop
cmp
dec
fsts
subl
push
loope
cld
aaa
sub
imul
in
cltd
or
mov
repnz
and
cs
adcl
rolb
adc
dec
push
lret
cs
push
push
pop
mov
push
scas
stc
dec
pusha
mov
mov
fsubs
sub
add
stos
sbbb
mov
fisubl
add
andl
nop
jecxz
jb
movsl
call
sub
add
pusha
sbb
push
inc
scas
incb
mov
movsl
add
push
int
mov
pop
push
push
pushf
dec
sub
popa
stos
ret
jmp
jb
adc
fnsave
sub
adc
push
sbb
test
adcb
mov
inc
and
push
arpl
rorb
add
push
cmp
cmp
lea
pusha
or
adc
xchg
and
data16
popa
jb
sbb
sub
dec
and
mov
cli
das
sub
daa
pop
push
xor
cwtl
fimull
cmc
mov
call
jp
dec
xchg
push
pop
call
adc
and
or
loopne
cmp
lret
addb
add
push
sbb
mov
add
add
out
les
mov
stos
sbb
xchg
shl
enter
pushf
das
clc
or
nop
mov
push
cmp
lds
aaa
dec
mov
loope
inc
out
or
xchg
jae
lret
push
and
adcl
mov
shll
sub
cmp
cmp
lcall
push
inc
jge
call
cmp
push
add
inc
sbb
pushf
cwtl
loopne
mov
enter
add
scas
hlt
or
xchg
into
or
dec
sbb
push
xor
xor
xor
in
dec
xchg
jecxz
cmp
adc
pop
or
loop
push
mov
sbb
test
xor
push
dec
fldenv
mov
dec
iret
shr
pop
pusha
cmp
pop
mov
xor
pop
adc
arpl
add
dec
out
xchg
sbb
push
sbb
lcall
fildl
mov
enter
inc
out
or
out
and
jmp
push
nop
mov
je
je
mov
out
js
mov
add
and
mov
xchg
test
cwtl
or
xor
mov
xor
aam
or
mov
jnp
xor
ret
add
aas
pop
xor
test
subb
repnz
mov
mov
mov
nop
cmp
mov
enter
or
inc
iret
gs
pop
nop
rcrb
sarb
push
out
xor
pop
add
cltd
add
push
cmp
test
dec
in
loopne
mov
push
push
mov
je
ljmp
enter
xor
sbb
push
jns
imul
adc
adc
pop
cmp
sbb
out
cmp
test
xlat
jecxz
mov
mov
xchg
sub
add
into
inc
in
frstor
push
xor
sub
mov
mov
pushf
movsl
sub
popf
in
xchg
jb
push
cmp
mov
or
inc
push
add
rolb
sub
addb
push
stc
push
and
stos
in
test
dec
in
sahf
push
popa
ret
popf
push
push
mov
mov
shll
and
xchg
sar
rorl
jp
int3
add
push
add
pop
mov
in
cmp
fucomp
sub
add
jle
aad
xlat
or
xor
int
or
adc
adc
pop
mov
pop
out
xor
push
adc
es
sub
sbb
imul
stos
add
mov
dec
into
fs
fcom
daa
stos
dec
in
int3
xchg
fsubl
adc
test
jae
orb
add
mov
push
push
lcall
cwtl
mov
popf
cmp
mov
adc
aam
jae
hlt
test
pop
rclb
scas
mov
push
loop
andl
adc
aas
adcl
jmp
fcmovnb
cld
cmp
fs
push
lret
adc
in
addl
fists
ds
lcall
push
mov
fwait
pop
shr
je
stos
ret
push
push
inc
jae
and
shrb
mov
sub
pop
adc
lcall
cs
fldt
movsb
js
imul
vpunpcklwd
push
pushf
ret
inc
aad
cmp
mov
and
cmpsb
and
jmp
sbb
adc
js
or
add
call
adc
push
sbb
dec
mov
push
adc
scas
dec
cmpsb
out
mov
cs
push
or
ficompl
pop
stc
fxch
push
xor
pop
or
mov
xor
nop
and
inc
mov
add
fnstsw
add
mov
jb
and
adc
out
int
sbb
fsubl
push
mov
xor
dec
adc
jo
jo
or
movsl
popa
cmp
sub
push
das
andb
push
mov
int
lcall
scas
out
or
mov
push
mov
pop
rorb
adc
cmp
xchg
sub
or
rolb
sbb
cmp
dec
adc
and
mov
test
mov
js
pop
add
xor
xchg
xchg
mov
cmpsb
adc
mov
nop
jecxz
fptan
xor
inc
test
roll
fs
into
mov
pusha
test
cmp
jno
add
mov
sti
mov
inc
push
jbe
enter
outsb
in
iret
aam
adc
into
shlb
pop
not
push
mov
out
jmp
xor
cmp
hlt
js
lret
or
push
pusha
jnp
ljmp
outsb
scas
mov
or
into
jno
ret
xor
xchg
xchg
jecxz
pop
scas
mov
add
inc
xchg
xor
push
stos
lock
ljmp
add
enter
repnz
xor
add
adcb
imul
mov
sbb
popa
adc
lds
sarb
and
jp
test
ss
cld
aaa
lahf
add
push
imul
enter
dec
lods
bound
call
push
aad
xor
push
push
sub
stos
or
out
rorb
and
xor
mov
inc
adc
aam
jmp
add
out
popa
mov
and
add
mov
pop
xchg
stos
cltd
popf
jbe
mov
and
push
dec
push
and
mov
add
pusha
stos
dec
jnp
loopne
pushf
and
or
xlat
arpl
dec
in
fs
push
scas
push
mov
cmp
pop
fisubrl
js
push
adc
pop
xor
or
icebp
inc
dec
aam
repz
inc
cmp
dec
pop
ret
cmc
push
cmc
pop
cmp
cs
adc
fisubl
rclb
or
mov
adc
or
js
imul
pop
pop
loopne
loope
lea
arpl
pop
je
and
xor
pop
add
sub
adc
adc
xchg
out
mov
sbb
adc
std
cmp
add
inc
or
xchg
leave
xchg
lods
ss
or
add
int
js
cmp
sarb
pop
cmpsb
or
leave
add
inc
mov
pop
jo
lcall
xor
pop
mov
sbb
mov
test
inc
ret
xlat
out
pop
add
adc
push
loop
repnz
sbb
test
or
xor
cwtl
mov
push
pop
cmpb
in
mov
call
or
mov
add
test
and
jge
sbb
mov
sbb
popf
adc
jae
scas
sbb
xchg
arpl
andl
js
pavgb
divl
mov
adcl
out
es
xchg
cmpsl
dec
pop
lea
xchg
out
mov
and
inc
in
cmc
or
lock
es
jecxz
push
mov
lahf
mov
nop
and
xor
jg
xchg
lcall
data16
or
aas
or
daa
mov
push
sbbl
sbb
sub
adc
or
pop
pusha
lahf
mov
push
xchg
dec
sbb
pop
lea
out
xchg
or
add
push
add
pushf
arpl
les
adc
sbb
stos
in
daa
pop
xor
stos
enter
fisttpl
xchg
add
daa
int3
push
int
sbb
adc
xor
int
pop
sarl
mov
push
jae
pop
dec
sub
sbb
aas
sbb
lcall
xor
loop
loope
aam
xchg
mov
loopne
mov
dec
cs
test
stos
fidivrs
xor
fldt
ja
jnp
stos
sub
dec
sbb
mov
lea
testl
test
out
adcl
imulb
dec
push
cltd
pop
sub
int
inc
stos
cld
adc
andl
arpl
or
inc
test
addr16
sub
aad
mov
repz
or
jae
sub
push
test
popa
sub
add
int3
pop
test
out
stos
jbe
xchg
movsb
sbb
mov
into
icebp
orb
add
or
loopne
push
ret
pop
and
jae
add
cmp
mov
xchg
imul
loopne
daa
xchg
loop
or
xchg
mov
push
sbb
out
lcall
daa
aam
shlb
or
notl
push
test
pusha
add
mov
lods
popf
inc
jbe
lea
pop
js
mov
sub
test
adc
icebp
xor
push
test
in
icebp
cltd
stos
cmp
adc
cmp
andl
pushf
enter
dec
cmp
addl
pushf
sub
push
sub
sub
clc
or
pop
and
jb
mov
aam
mov
loopne
shr
pop
ljmp
mov
xor
mov
dec
inc
cmp
xor
scas
dec
lock
mov
cmp
mov
xor
sub
xchg
push
xor
jb
addl
jnp
cmc
xor
test
dec
out
in
inc
enter
mov
orb
push
scas
call
aas
xchg
push
scas
pop
test
xor
jae
dec
dec
std
jns
loope
push
nop
out
dec
stc
enter
ss
jae
inc
sub
push
imul
push
sub
push
sbb
rcll
xor
insb
fcoms
in
cmp
pop
shl
addb
fstpl
add
push
xor
int
jae
dec
xchg
push
jnp
out
add
mov
fsubrp
push
add
fwait
pop
or
mov
ror
fnstcw
cmp
stos
cmpsb
test
aad
cmp
in
popa
repnz
inc
push
loope
push
mov
in
int
pop
inc
mov
xor
inc
adc
mov
mov
sub
sbb
out
jb
push
add
pop
xchg
hlt
loopne
adc
pop
test
pop
rclb
testl
fmull
cmp
aad
cmp
add
jle
ja
or
jle
jp
out
pusha
cmp
xchg
sub
shrb
add
adc
add
push
inc
negl
push
int3
dec
add
push
inc
shll
or
mov
loopne
stos
lds
ret
test
add
dec
sbb
adc
mov
add
add
xor
push
lods
or
mov
sti
addb
cld
cld
std
test
dec
push
movsb
sbbl
inc
or
jg
and
cmpsb
adc
and
adcl
jo
pop
adc
dec
loope
insb
pop
fst
out
mov
hlt
xchg
push
sbb
push
stos
fiadds
sub
inc
sbb
mov
push
sbb
pop
out
xchg
adc
pop
add
jo
mov
push
mov
cmp
in
loop
pop
ljmp
fldenv
pop
andl
xchg
or
cld
push
mov
mov
push
fidivrl
cmp
mov
sub
cmpsb
cmp
cmc
jmp
pop
sub
negl
adc
and
std
push
mov
fyl2x
lds
sub
out
int
lret
sbb
and
sub
inc
dec
jo
inc
nop
repz
nop
lret
inc
xchg
mov
pop
jnp
loopne
push
cmp
cmp
adc
jbe
add
mov
repnz
gs
enter
sub
or
or
mov
lods
test
mov
scas
scas
in
fdivrs
mov
andb
dec
mov
popa
shl
or
xor
sub
xlat
pop
adc
hlt
popa
jo
add
xor
pop
rcrb
out
jecxz
jo
pop
add
int
sbb
sbb
aas
inc
push
or
push
ret
xchg
lret
xor
add
xor
jg
or
aam
cmp
push
and
add
dec
or
inc
adc
in
test
sahf
mov
adc
aam
in
xor
add
or
pop
add
adc
adc
sub
pop
mov
inc
inc
outsl
inc
xor
aad
xor
sbb
sbb
sub
pop
mov
aam
ljmp
add
hlt
dec
mov
fwait
cld
inc
das
push
mov
out
arpl
mov
mov
js
aaa
rorl
or
fstpt
sbb
cmp
and
add
push
xor
push
loopne
sbb
ljmp
pusha
add
add
out
adc
pop
mov
in
sbb
sbb
mov
sub
enter
mov
fimuls
pop
sub
ret
mov
ja
xchg
add
dec
inc
fldt
mov
cwtl
aad
dec
inc
xor
arpl
push
or
push
pop
add
out
xor
in
rcr
jo
mov
mov
repz
movsl
sub
fs
cwtd
push
push
mov
fnstenv
push
jge
xchg
andl
push
lods
xor
test
cmp
imul
jp
call
xchg
test
cltd
sbb
adc
sbb
imul
jo
es
negl
je
or
or
inc
xor
and
in
and
sub
es
push
cmp
in
lds
mov
sbb
sub
test
in
push
cwtl
xor
or
add
arpl
push
inc
aam
aam
cmc
shrb
or
sti
cmp
dec
in
ror
lret
jp
sbb
add
subb
push
fisttps
js
push
xlat
jne
andl
or
push
cmp
xchg
lcall
xor
push
push
or
pop
mov
push
aad
into
and
dec
sbb
cs
xor
adc
in
adc
push
mov
or
sbb
loopne
cmp
pop
leave
mov
xchg
sbb
cwtl
std
adcl
push
sbb
xor
repz
mov
sub
mov
add
push
sub
jo
jp
add
inc
cmp
addr16
jge
loope
sahf
andb
jmp
les
push
adc
in
adc
cmp
hlt
push
xchg
sub
push
sbbb
inc
sbb
mov
lcall
or
mov
aam
cs
push
cwtl
lock
cmp
mov
xor
and
push
adc
inc
insb
cmp
pop
lcall
add
mov
mov
sub
mov
incb
push
mov
ljmp
fdivr
imul
hlt
roll
andl
lahf
mov
pop
mov
dec
ljmp
popa
sbb
mov
out
enter
rcrb
jo
std
cmpsl
je
xchg
add
jle
cli
in
rorb
add
jae
add
loopne
mov
sub
insb
repz
test
ja
stos
add
push
sbb
sub
stos
inc
in
inc
jne
and
adc
cs
scas
jb
jae
mov
addb
or
pop
gs
test
inc
mov
push
and
xor
push
push
jne
push
push
pop
pop
sbb
lcall
push
pop
sbb
pop
mov
out
inc
xchg
inc
scas
sub
int
sbb
pop
jle
loop
test
mov
cmp
add
mov
enter
jb
pusha
js
cmp
test
push
jne
aam
jl
test
mov
sub
mov
pusha
push
js
cmp
icebp
or
sbb
inc
mov
sbb
movsl
fwait
shl
push
dec
jle
enter
popa
sub
and
xchg
jae
fnstsw
lahf
or
push
add
xchg
jge
jbe
xor
sub
shl
mov
cltd
add
test
cs
int
add
setl
pop
push
aas
mov
add
push
push
test
mov
enter
push
add
mov
cmp
ds
stos
loopne
sub
cmp
and
sbb
arpl
addb
or
mov
testl
pushf
lcall
xchg
or
arpl
fwait
push
mov
insl
and
mov
jnp
push
or
mov
dec
in
rcll
xchg
cmp
add
or
add
push
movsb
mov
mov
lcall
inc
mov
or
inc
push
mov
sbb
lods
fsubs
jo
stos
or
mov
sub
add
xor
aam
add
push
mov
adc
push
int
pop
leave
cmp
push
js
xchg
xor
ja
xor
cmp
or
mov
sbbb
and
popa
rcrb
movsl
mov
cmp
xchg
or
jb
dec
leave
pushf
jo
sub
or
push
leave
inc
outsl
add
lret
negl
scas
jbe
dec
push
cmp
or
push
add
adc
faddl
and
adc
and
pop
xor
lcall
inc
loope
scas
jae
lods
leave
iret
into
adc
pushf
loope
adc
add
xchg
add
sbb
lods
cmpsb
popf
out
cmpsl
fimull
stos
cltd
xor
stos
sbb
mov
mov
cmp
inc
adc
out
push
subl
push
xor
or
mov
lcall
dec
in
dec
daa
insb
dec
icebp
mov
add
cld
inc
fcmovnb
mov
lcall
xchg
leave
and
mov
pop
testb
ljmp
into
mov
pop
cmp
test
and
jle
cmp
popa
xor
test
pusha
aaa
ret
cmp
mov
fstl
pop
or
push
int
inc
pusha
cmpsb
data16
int
sbbl
loope
inc
nop
dec
imul
mov
mov
lahf
loope
mov
push
xchg
mov
add
fwait
je
sbb
leave
ret
cmp
jno
sbb
stos
ljmp
icebp
push
cld
dec
adc
rcrl
adc
mull
pop
push
jp
jae
out
jb
or
fstl
std
fwait
or
sti
sub
sbb
xchg
roll
mov
inc
loope
sbb
or
cs
outsl
sub
cmp
aam
enter
or
enter
add
or
inc
sbb
xor
mov
adc
test
andb
addb
in
push
inc
push
sbb
inc
fisttpll
sarb
add
jbe
adc
xor
fisubs
inc
cs
inc
movsl
hlt
gs
scas
push
dec
xchg
cmp
shll
daa
or
jb
lods
pushf
hlt
rol
addl
dec
lahf
addr16
push
inc
xor
mov
adc
pop
insb
stos
popl
inc
xchg
or
adc
ja
push
inc
int
sbb
into
aad
add
pop
lea
xchg
xchg
xor
stos
mov
testb
push
inc
lods
lds
aaa
out
add
adc
or
add
rcrb
lods
into
nop
lret
push
shl
orb
sbb
mov
ds
cmp
pop
mov
and
or
lods
push
mov
add
inc
xor
ret
xor
nop
mov
xor
xchg
lds
repz
popa
fldenv
or
ret
push
testb
dec
add
enter
push
xor
lea
iret
push
push
pop
fsubl
mov
out
add
ljmp
mov
xorb
adc
xchg
xlat
pop
sub
in
cmp
sub
xor
les
inc
push
sbb
outsl
cltd
push
add
dec
adc
push
mov
jp
mov
test
xorl
lret
repnz
or
pop
push
lcall
push
out
and
pop
pushf
imul
sbb
dec
popa
mov
add
andb
inc
push
hlt
mov
add
sbb
inc
xor
adc
shlb
push
mov
sub
sbb
rcll
rcrl
add
xchg
add
pop
bt
push
dec
mov
push
sbb
push
in
mov
enter
add
cwtl
push
sub
adc
pop
leave
int3
jg
jne
mov
sub
xchg
push
mov
adc
push
test
add
add
mov
add
or
int3
push
dec
or
mov
pop
inc
mov
add
push
sub
popa
loop
leave
mov
nop
ror
nop
cmp
sti
mov
loopne
push
out
cmc
subl
sub
scas
pop
bound
popa
sub
sbb
outsb
or
or
sbbb
sub
add
inc
lea
cmp
inc
addb
fistpl
adc
in
sub
xor
and
cmpl
xchg
inc
xchg
test
fs
popf
mov
adc
fldt
add
cli
ljmp
enter
inc
xchg
scas
popl
jo
xlat
pop
mov
pop
mov
testb
orl
sub
cs
or
ljmp
mov
mov
mul
and
pop
pop
les
sbb
inc
mov
cwtl
add
out
shrl
push
loope
mov
add
xor
fwait
push
ret
jae
ja
mov
dec
popa
out
fcoms
aad
aam
xchg
into
gs
push
xor
stc
pop
loop
cmp
sub
mov
mov
and
jo
in
popf
dec
rorl
push
pop
cli
sub
dec
fs
mov
push
mov
out
ret
mov
and
dec
and
mov
sbb
lret
dec
test
ljmp
clc
mov
lahf
xchg
inc
scas
pop
cmp
mov
xchg
and
out
call
fcmovu
orl
adc
dec
es
test
push
push
jmp
pop
icebp
ret
cmp
sbb
loop
clc
lods
into
mov
cmpl
push
pop
in
add
imul
push
cli
mov
test
add
inc
ftst
aaa
les
jb
in
xor
inc
ret
mov
xchg
cmp
fwait
test
adc
shlb
jp
cld
lret
inc
mov
stos
mov
cltd
cmp
inc
cmpsb
pop
roll
clc
mov
inc
cs
fnstsw
les
jge
jg
popa
sub
adc
sub
mov
mov
adc
add
adc
test
int
mov
inc
mov
xor
add
dec
mov
leave
iret
push
mov
mov
in
add
dec
add
ds
sbb
or
or
dec
push
cmpsb
or
repz
and
sbb
sub
add
sbb
loopne
sbb
mov
cmpsb
aad
loop
sbb
xor
jae
sbb
jae
add
mov
and
and
pop
negb
int3
dec
xchg
imul
dec
rclb
pop
loope
add
dec
out
jo
pop
add
push
rolb
gs
test
andl
jecxz
jnp
push
idivl
fnstcw
dec
xchg
fs
jo
push
sub
pusha
jno
jae
sub
inc
mov
add
adcb
ss
mov
shlb
dec
adc
scas
sbb
jae
xor
xchg
test
dec
mov
sub
cmc
jns
mov
ret
xor
sbb
xor
cmpsb
push
mov
or
add
and
mov
jo
sbb
push
xor
jb
ret
ret
loopne
ret
das
push
and
adc
jo
pop
cmpb
pop
rolb
sbbb
or
pop
push
pop
rcll
mov
xorl
lods
jp
push
push
icebp
dec
push
loope
shll
cmp
xor
sbb
aam
dec
in
mov
xor
leave
hlt
sbb
mov
xor
mov
xor
xchg
cmpsb
mov
adc
xor
lcall
or
and
fldenv
fs
mov
or
enter
or
sbb
stos
insb
test
mov
inc
xchg
jno
test
sbbb
aad
cmpsb
sbb
shld
add
and
enter
dec
xor
fadds
add
aam
lcall
in
xchg
sub
loope
mov
std
or
aam
xor
andb
or
js
fsubr
data16
adc
mov
rcrl
mov
mov
sub
push
jb
repnz
cmp
jns
mov
sbb
push
nop
icebp
cmp
mov
push
add
cmpsb
xor
sbb
jo
cmp
jb
subb
pop
in
jp
push
lcall
adc
dec
mov
jl
xlat
fs
loop
mov
add
nop
and
push
orb
stc
pop
lcall
insl
enter
fiaddl
jb
and
mov
mov
rorb
mov
and
adc
push
lsl
shll
test
push
lods
rclb
and
mov
jg
cltd
push
sub
add
cmp
xchg
jno
leave
push
xchg
pop
adc
lret
and
out
cmp
fs
rcrl
inc
add
outsl
lods
sbb
dec
ds
pusha
pop
add
dec
into
inc
cmp
sbb
pushf
jge
xorb
sbb
in
xchg
or
sbb
dec
cmp
in
imul
mov
jo
test
xchg
push
aaa
leave
loopne
cmp
push
push
add
loope
or
lret
add
add
push
jb
pop
inc
mov
popa
jb
addr16
testb
enter
inc
add
loope
sub
push
lret
push
add
jae
adc
out
inc
out
fcmovnu
xor
in
pop
jg
ljmp
jbe
leave
in
sbb
sub
scas
push
xchg
sub
test
or
inc
mov
js
rcrl
or
roll
push
xchg
movsb
push
orb
jp
scas
stos
sbb
insb
jb
leave
sub
sub
shrb
jbe
mov
sbbl
insb
add
test
xor
mov
and
pop
inc
add
inc
cmpsb
sahf
adc
mov
mov
mov
jno
dec
inc
add
add
push
push
add
mov
les
call
in
lods
and
cmpsl
push
fnstcw
ss
pop
inc
cmp
sbbb
mov
or
loop
inc
lea
pop
ljmp
or
and
sbb
push
inc
sbb
xor
or
arpl
sub
cmp
jnp
ret
lret
mov
gs
adc
or
inc
fcomps
lock
jae
and
sub
addl
cmp
rolb
jbe
push
sbb
or
addl
sbb
fistps
test
jmp
and
xchg
mov
or
popa
lcall
dec
mov
mov
imul
or
das
int
or
jns
push
in
push
xor
xor
sbbb
cltd
call
sbb
gs
adc
inc
in
ret
mov
rolb
test
cltd
enter
push
addb
jb
ficomps
add
sahf
push
rclb
or
mov
es
mov
add
mov
aam
cmpb
notl
push
jae
into
jae
je
push
jo
loopne
mov
cmp
mov
mov
dec
sbb
dec
mov
and
pushf
cli
in
or
and
or
arpl
xor
loop
sbb
or
icebp
mov
stos
inc
iret
inc
mov
cmp
loopne
sbb
lods
add
sub
add
sub
adc
mov
xchg
add
push
clc
stos
push
test
push
fs
xor
lret
lret
mov
push
in
out
xor
in
in
jo
mov
push
mov
dec
loopne
and
lock
enter
jae
xor
insb
sbb
inc
sub
lods
cmp
jmp
adc
push
inc
xchg
inc
and
cmp
cld
mov
fmull
shll
sub
ljmp
add
or
mov
or
xchg
add
cli
aas
outsl
push
add
sub
dec
cmp
adc
xor
jbe
xor
push
mov
test
sub
inc
jnp
inc
sbb
push
or
popa
sub
enter
cmp
cltd
popa
pop
and
mov
mov
dec
adc
push
push
xor
push
sbb
xchg
imul
enter
sahf
push
jbe
orb
inc
or
pop
inc
jp
mov
sub
or
aad
ljmp
js
and
cwtl
jae
inc
sbb
rclb
cmovae
iret
cmp
pop
scas
and
sbb
mov
mov
inc
stc
dec
ljmp
in
sub
les
cmp
ret
shl
cmp
in
movsb
xor
lea
add
pop
hlt
stos
cltd
enter
das
and
xchg
aad
syscall
push
sub
call
cld
dec
add
fcomip
jecxz
xor
sbb
repnz
mov
jo
mov
lds
push
shrl
js
lahf
add
in
sbb
sbb
push
sub
mov
add
lret
mov
add
push
pusha
and
dec
or
sub
daa
xor
mov
xchg
sub
adc
out
push
push
xor
icebp
shrb
or
dec
adc
cwtl
out
push
jb
dec
mov
xor
scas
cltd
dec
jne
dec
xor
push
add
or
push
cmp
push
scas
enter
pop
shlb
adc
mov
es
dec
adc
jecxz
in
in
ljmp
push
movsb
iret
testb
adc
adc
pop
inc
frstor
add
and
sbb
dec
xor
dec
mov
add
push
decl
pop
jecxz
cmp
pop
test
data16
rorl
and
mov
mov
and
test
add
int
add
xchg
enter
push
xchg
jmp
lret
addb
int3
push
add
adc
test
mov
adc
sbb
out
cmp
jmp
jae
dec
sbb
mov
inc
loopne
cmp
ljmp
insl
xor
add
inc
or
enter
inc
cmpsb
push
scas
jge
mov
adc
pop
xor
and
fwait
pop
jne
mov
xchg
hlt
pop
dec
push
jo
inc
in
aas
add
pusha
push
test
clc
lahf
fisubs
test
mov
add
push
push
mov
es
loope
outsl
clc
out
jecxz
cltd
dec
sbb
xor
outsb
ret
mov
lcall
sub
into
addr16
rorb
outsb
jae
xor
or
cmpsl
lods
jae
sub
sub
fwait
adc
xchg
enter
cmp
push
mov
inc
and
push
loopne
add
sarb
push
scas
lcall
push
dec
aam
jl
dec
xor
add
loope
loopne
pusha
lret
dec
xchg
mov
test
or
incb
loop
mov
lods
xor
sbb
adc
push
add
or
enter
out
mov
and
jmp
stos
sbb
push
iret
jg
mov
push
xor
lahf
arpl
add
push
icebp
daa
bnd
popa
ret
loop
mov
mov
inc
pushf
aad
xlat
dec
push
add
movsl
xor
int
or
loope
ret
jle
lds
add
mov
push
imull
sub
jno
orl
sbb
add
fimull
stos
orb
sbb
and
insb
stc
push
movsb
sub
popa
xor
and
xor
adc
addr16
dec
ss
loopne
mov
cmp
les
dec
iret
add
out
gs
clc
inc
mov
pop
xchg
or
ljmp
cmpsl
xchg
add
mov
cwtl
jnp
jg
add
mov
sub
pop
sbb
lock
sub
dec
mov
fisubs
sahf
and
sarb
outsl
jp
push
movsl
iret
xor
push
jg
fisttps
stc
cltd
dec
sub
pushw
inc
fndisi(8087
jae
adc
pusha
push
icebp
jp
andb
pop
out
adc
adc
mov
mov
add
mov
cmp
pop
push
xchg
loop
arpl
inc
cs
pop
pop
loop
pusha
enter
stos
repz
nop
dec
lea
pop
mov
sbbb
dec
push
or
andb
add
lret
pop
sub
stos
fwait
imulb
mov
imul
jmp
jle
mov
test
dec
inc
jnp
cltd
mov
add
xor
enter
adc
and
fimuls
scas
jo
jp
sub
stos
or
mov
mov
adc
cwtl
test
xchg
add
xchg
push
add
addr16
add
jle
cmpsb
loopne
int
jbe
mov
xor
loopne
cmp
mov
pop
adc
sub
rorl
add
xchg
add
push
adc
push
xor
jno
pop
mov
loope
push
out
adc
cs
xchg
add
leave
andl
in
in
ja
roll
inc
imul
or
lret
xor
add
pushf
cmp
push
pop
sbb
push
mov
xor
test
adc
enter
dec
shll
jle
push
sub
add
mov
mov
jo
push
push
daa
cmpsb
xor
mov
mov
pop
sbb
and
sbb
imul
push
test
push
sbb
jg
ret
cmp
mov
loope
pop
out
movsb
scas
push
shlb
mov
xchg
incl
lret
pop
fs
scas
adc
shlb
jecxz
outsl
enter
decl
insb
sub
add
sbb
movl
shll
lret
fsubrs
imul
adc
mov
mov
push
mov
add
movsl
inc
scas
push
adc
and
or
loopne
rolb
push
cmp
icebp
mov
push
push
sub
pop
cmc
leave
ret
dec
popf
and
fisttpl
cmc
cmp
aad
jae
rcll
lret
cld
cmp
sbb
addl
xchg
es
adc
jmp
and
sbb
dec
ss
cltd
dec
popa
enter
cmp
sbb
jo
out
pop
xor
pop
xor
and
cmovp
sahf
sbb
mov
sbb
ret
nop
lcall
test
mov
jb
mov
sbb
xor
dec
shrl
xor
addr16
enter
stos
popf
push
rcrb
mov
ret
mov
addl
push
inc
rcl
icebp
mov
lea
push
in
stos
and
cmp
pop
or
jbe
clc
xchg
push
test
adc
data16
cltd
lock
adc
push
enter
in
push
jo
xor
push
shr
add
dec
cmp
adc
lea
inc
sbb
jo
fbstp
jo
push
test
push
or
or
rcrl
ret
adc
push
nop
xchg
les
push
cmp
xchg
subl
mov
test
int3
xor
cmp
mov
sbb
inc
test
sti
cmp
mov
xchg
add
nop
roll
adc
jne
add
and
jbe
add
rcr
fistpll
push
push
lcall
xchg
add
pusha
sub
push
inc
mov
mov
push
xchg
xchg
arpl
dec
faddl
sbb
sbb
mov
into
inc
mov
sbb
pushf
or
dec
push
js
push
sub
xor
add
out
cmp
in
push
aam
loop
cs
es
test
mov
add
jae
sub
int
mov
out
or
push
loopne
ja
lret
mov
mov
jne
es
add
popf
inc
in
cmpsl
xor
out
xrelease
mov
syscall
insl
cmp
fwait
push
xor
push
cs
stos
cmpsb
xor
or
dec
les
push
push
or
and
addb
pop
mov
pop
xchg
aaa
outsb
mov
mov
push
sbb
mov
sub
pusha
js
ret
fcomip
adc
sbb
dec
dec
daa
and
shr
mov
cmp
mov
add
pop
in
sarl
cmpsl
cmc
sbb
cmc
mov
sub
add
lcall
fwait
mov
xor
jo
mov
xchg
xchg
rolb
mov
sub
repz
data16
or
pop
push
lret
jne
loopne
mov
mul
ljmp
cltd
mov
ss
cmp
test
push
lcall
sbb
inc
stos
mov
or
enter
shl
mov
adc
mov
cmc
pop
add
or
jno
push
cltd
lret
inc
mov
ja
xchg
aad
inc
jae
xchg
and
mov
pop
adc
enter
lret
push
mov
xchg
or
ret
push
rolb
loopne
imul
in
and
dec
push
mov
jae
mov
insl
into
push
add
push
popa
sub
mov
push
rcrb
xchg
sbb
sub
pop
push
push
sbb
loope
pop
or
cmp
dec
loop
lret
sbb
lods
cmovle
lock
clc
jg
cmp
rorb
sub
or
jbe
ljmp
sbb
mov
leave
roll
xor
mov
pop
inc
rcl
std
and
sbb
sub
cmpsb
jo
das
adc
clc
scas
pop
in
cmpsb
aam
lcall
fnstcw
adc
sbb
loop
stc
iret
lret
push
hlt
mov
xorb
in
pop
fcmove
add
outsb
push
fwait
sbb
sbb
sbb
or
fidivs
icebp
mov
push
popf
and
pop
in
xchg
xchg
sbbl
mov
xchg
sub
incl
insb
sub
add
adc
add
add
mov
mov
add
push
aam
mov
sbb
fadds
fistpl
inc
pushl
sbb
adc
inc
ret
sbb
add
xchg
aaa
js
negb
xchg
push
fstl
or
jmp
sub
xor
sbb
inc
loopne
aad
outsb
and
andl
scas
test
movsl
push
mov
xchg
mov
lds
xchg
mov
mov
clc
inc
and
xchg
cmc
nop
mov
dec
sub
bextr
ss
les
sbbl
ss
hlt
sub
sbb
pop
push
popf
hlt
in
xchg
jne
cltd
push
jae
inc
int3
hlt
xor
pusha
andb
inc
dec
jle
push
sub
push
rcll
add
add
xlat
rcl
lcall
hlt
clc
out
cmp
pusha
push
mov
or
sub
xor
push
mov
sbb
aas
addl
pop
lahf
jns
inc
es
test
loopne
dec
cmp
ret
insl
aaa
xchg
xor
shrb
jo
mov
mov
sbb
cmp
add
cs
test
jmp
in
cmp
cmpsl
or
loope
cmp
fnstenv
mov
push
add
cmp
jae
adc
cld
push
pop
add
push
dec
es
and
loopne
andl
cmp
push
rorl
add
jmp
mov
orb
xor
cmp
or
jo
ss
push
cwtl
xor
pop
xor
push
cmp
ds
add
enter
aam
cwtl
dec
mov
sub
inc
or
outsl
stos
push
movsl
enter
adc
xorb
ret
das
or
insl
decb
add
mov
scas
push
inc
xchg
mov
mov
cmp
add
dec
add
adc
fnop
add
in
subb
rorb
dec
mov
mov
add
mov
pop
das
xor
mov
sub
paddb
add
sbb
mov
sbb
jne
xor
inc
in
movb
int3
rcl
or
sbb
xor
add
xchg
push
lret
sub
pop
adc
aam
lea
daa
jb
or
fwait
push
adc
and
cmpsl
mov
pop
subl
inc
add
cwtl
mov
cmp
pop
jb
xor
jl
loop
mov
jbe
mov
add
inc
mov
ja
jo
push
dec
cmp
cmp
push
inc
xor
rcr
pop
sbbl
lods
jp
cltd
loope
scas
jmp
mov
pop
mov
pop
mov
rorb
push
mov
adc
push
int
mov
pop
ds
push
inc
mov
repnz
sbb
test
das
mov
mov
mulb
int
add
xchg
push
frstor
test
xor
sbb
xchg
or
dec
push
push
jae
adc
jno
out
lea
sub
loope
or
add
stos
add
test
or
fimull
mov
xchg
xchg
or
jo
mov
flds
lcall
add
es
lret
insl
mov
jae
loop
pusha
test
add
inc
dec
xorb
or
je
xchg
xor
or
mov
inc
adc
push
pushf
stos
scas
lods
testb
movsl
sbb
lcall
dec
gs
adc
out
mov
mov
xchg
test
xor
mov
into
aam
out
mov
test
cmpsl
lea
test
out
ret
adc
sub
push
pusha
push
mov
fwait
push
inc
xor
xchg
mov
xor
ret
pop
sbb
xor
sub
jge
adc
dec
and
xor
fcoms
xor
inc
sub
dec
stos
cmp
sbb
sbb
xorb
inc
ss
push
jno
adc
cmp
mov
xchg
sub
in
arpl
jo
ljmp
mov
add
nop
rcl
es
push
lret
sbb
pusha
lcall
sbb
pop
mov
mov
popa
mov
pop
mov
sahf
and
push
aaa
sbb
sbb
cmp
add
cmc
xchg
or
sub
sbb
xor
and
in
lea
mov
lock
cmp
sbb
pusha
xchg
push
add
dec
push
lds
add
inc
push
cmp
adc
loopne
push
and
out
loopne
or
xor
outsb
sbb
rol
cmp
jne
sbb
push
jno
jb
stos
es
mov
sub
pusha
or
mov
mov
jg
out
and
xor
and
add
push
mov
and
xor
sub
or
fnstcw
loope
jp
mov
xchg
or
cwtl
jb
aas
jns
or
push
into
mov
sbb
mov
xor
cmp
mov
mov
arpl
mov
jge
jb
repnz
add
mov
add
push
out
push
mov
jecxz
add
loop
add
push
aad
pop
push
lods
cmp
push
jle
insl
dec
sub
hlt
add
jae
loop
inc
jnp
xlat
xchg
out
lcall
or
sub
and
in
orl
jp
cmp
shrb
mov
cmpsl
add
fs
jl
adc
and
xor
loop
nop
mov
mov
mov
mov
inc
jp
sbb
cltd
fsts
inc
stos
adc
push
sbb
mov
add
push
es
jbe
out
inc
aaa
loopne
inc
sub
add
andl
pop
adc
lret
insb
jb
mov
jo
sub
push
cmp
jb
sbb
sub
jo
inc
xchg
xchg
inc
adc
and
push
stos
dec
jp
sub
xchg
pop
cmp
test
cmp
push
add
or
popa
jno
xchg
jae
lret
jge
cmp
rcll
push
cmp
inc
add
push
rclb
scas
fwait
imul
push
cmpsl
scas
and
cltd
shlb
xchg
je
lock
scas
jge
sbb
mov
rol
adc
or
push
add
xchg
xorl
adc
sub
mov
sbb
je
test
pop
cmp
inc
mov
sbb
xor
inc
andl
addb
shufps
xor
or
push
cmp
aam
adc
mov
or
ret
dec
xchg
dec
push
xor
daa
rcll
lret
sbb
jo
loopne
xchg
cmpsb
out
inc
push
sbb
add
out
push
in
fwait
sub
loopne
das
mov
cld
xchg
inc
shll
jmp
inc
into
fbstp
lcall
mov
lret
fwait
jge
rolb
pop
inc
call
jb
in
inc
and
sbb
cmp
adc
decl
jb
shrb
mov
test
xor
adc
and
dec
in
aad
push
or
cmp
inc
loope
jno
adc
mov
xor
stos
jg
sub
and
pushf
cmp
push
sbb
push
xchg
lea
scas
jp
jno
addb
mov
testl
push
call
and
popa
cli
mov
xchg
pop
rolb
mov
scas
add
call
lcall
mov
rorl
sbb
cmp
shl
cmp
es
popa
in
enter
cs
in
clc
jae
cmp
push
xchg
loopne
xchg
or
add
dec
push
or
cmpsb
aas
sub
nop
pushf
mov
and
push
or
pop
das
cmpsb
test
cmp
inc
imul
pushf
xor
mov
adcl
jo
jo
mov
pop
fs
and
xchg
add
leave
and
cltd
mov
mov
ss
xchg
add
enter
or
int3
rolb
pusha
adc
or
push
xchg
add
inc
add
adc
inc
sarl
push
ficompl
dec
stos
cmp
dec
repnz
inc
inc
sub
sbb
adc
and
fsubr
loope
sbb
sbb
test
push
sub
mov
xchg
xor
cmp
add
sbb
int3
adc
push
mov
cmp
jg
xor
movsl
das
or
and
les
pop
test
test
fsub
pusha
xor
orb
into
inc
fmull
pop
pop
inc
es
add
scas
push
in
mov
mov
inc
mov
add
in
push
lahf
mov
sbb
mov
mov
jl
sub
xorl
and
ss
push
push
pop
or
movl
das
pop
notb
jno
xor
and
fbld
test
push
lods
and
sub
pop
pop
sahf
adcl
inc
and
test
aad
push
inc
ret
sbb
xor
cmp
jg
js
xor
jmp
and
cltd
test
mov
jnp
push
hlt
shrb
mov
add
add
jge
pop
or
sbb
rcll
fdivrs
aaa
pop
testb
mov
in
xor
xor
add
pop
add
ds
add
inc
js
out
orb
in
dec
scas
fsts
fimull
add
lock
jne
fsubrl
aad
mov
mov
inc
mov
testb
xchg
loop
sub
popa
aam
test
or
cmp
test
pop
mov
jge
es
xchg
mov
xor
jo
jg
push
pop
loopne
push
ds
adc
les
ret
lret
add
orl
push
loopne
dec
or
add
sbb
aam
fiaddl
imull
int
adc
cmpsb
sbb
mov
jb
cwtl
adcb
inc
rorl
jae
jb
cmp
pop
mov
dec
out
cld
add
sub
cs
xchg
cmc
les
or
sub
rorl
sbbl
sarb
ficompl
lock
push
cwtl
incl
and
mov
sbb
xor
hlt
int3
sub
xor
xchg
ret
mov
dec
je
cmp
pop
les
add
jb
adc
pushf
ret
xchg
cmp
sahf
add
pop
fbld
mov
and
cli
cli
jns
xor
add
pop
mov
in
push
hlt
inc
inc
ud1
cmp
jns
gs
call
inc
aam
ret
mov
add
adc
out
push
imul
iret
inc
ljmp
pop
cmp
and
js
or
lret
adc
inc
pusha
push
xor
jae
xor
inc
cmpsl
mov
rorl
int3
in
popa
loop
adc
rolb
call
ss
add
dec
jle
addr16
jb
sub
out
mov
dec
push
pop
ret
and
mov
test
enter
pop
fstl
scas
jle
jb
ljmp
mov
pop
xor
loopne
add
lcall
mov
jns
fldenv
inc
jle
sub
in
or
and
cmp
loop
cmp
sarb
jl
aam
mov
das
lret
push
mov
push
cltd
mov
scas
xchg
bsr
in
push
jbe
cltd
dec
into
adc
in
adc
enter
xchg
ret
lret
lahf
push
add
push
sub
test
cmpsl
shl
xor
lock
ror
sbb
jb
push
add
movsl
gs
adc
xor
lahf
lret
xor
dec
xor
stos
adc
dec
popa
ret
inc
pop
rclb
test
or
push
sub
sub
sub
lret
lret
iret
xor
and
pop
jp
add
leave
push
pop
mov
push
adc
in
or
cmp
xchg
loope
cmc
imul
stc
push
xchg
inc
loopne
mov
push
sub
cmp
fisubs
xor
pop
sbb
scas
add
or
mov
sbb
and
mov
test
lcall
pop
jb
or
mov
ds
mov
or
pop
in
ja
aaa
cmp
xor
and
adc
add
add
xor
and
fadds
mov
imul
jo
inc
int
inc
sbb
xor
mov
mov
cmp
pop
adc
jp
enter
or
inc
mov
addb
mov
orl
or
mov
add
scas
push
test
fisubl
out
push
fiadds
addl
fisttpl
cwtl
orb
loopne
adc
bswap
inc
ljmp
mov
subl
lcall
xchg
adc
add
lds
sbb
add
or
pop
scas
fwait
test
add
ret
rcrl
xor
lock
mov
push
adc
cmp
add
js
jno
test
pushf
test
add
dec
inc
lock
pop
jo
xlat
jmp
cmp
mov
cmp
cltd
nop
mov
sarb
push
loopne
cld
int
pop
sbb
roll
jmp
faddp
in
shl
sbb
lcall
addb
pop
mov
lret
mov
cmp
ret
push
loope
sub
push
adc
cmp
inc
popa
inc
mov
fistpl
hlt
loop
lea
adc
push
lcall
xor
pop
or
xchg
dec
or
mov
sbb
add
mov
stos
adc
xchg
stos
pop
bound
jne
pop
jl
ljmp
ljmp
mov
push
addl
pop
adc
outsl
test
mov
mov
add
xchg
test
lahf
or
push
adc
rclb
dec
jge
call
xchg
pusha
mov
mov
orl
mov
lcall
sub
xchg
and
dec
sbbb
daa
imul
jnp
jne
cmp
ret
push
lock
or
cmp
addl
add
lret
sbb
test
rcrb
int
sub
je
into
loop
pop
cmpsb
aaa
rcr
xchg
mov
enter
push
je
push
jno
jb
sub
mov
scas
stos
sbb
addb
fptan
les
test
fcmovb
fcmovbe
xchg
mov
popa
push
inc
in
sub
adc
out
loopne
cmp
js
dec
roll
lcall
mov
adc
lods
mov
adc
or
rcrb
xchg
jb
in
outsb
xor
pop
test
cmpsb
lahf
ret
add
xor
adc
lcall
mov
in
jl
inc
lock
xor
inc
mov
push
xor
clc
inc
sub
cmpsb
xorb
add
push
adc
fadds
adc
lahf
pop
xchg
sub
xor
xchg
movsb
dec
sbb
or
lret
clc
sbb
add
xchg
ljmp
call
pop
loopne
mov
mov
popa
jae
adc
enter
push
and
push
shrl
add
inc
es
sbb
jmp
cmp
ret
cld
jb
je
add
cwtl
mul
mov
inc
popa
jo
nop
mov
cmc
xchg
jae
ret
sub
mov
adc
pop
testb
push
sbb
mov
xor
mov
mov
aaa
add
or
push
lret
push
push
lcall
orb
push
cmp
sbb
imull
clc
pushf
xor
pop
dec
cmpsl
sub
sub
mov
and
cwtl
xor
add
in
sbb
xchg
add
scas
inc
out
nop
add
aas
repnz
andb
pop
scas
push
pop
pusha
enter
sub
stos
inc
and
aam
jb
mov
inc
outsb
repnz
insb
jb
adc
jae
test
jle
xchg
sahf
inc
loop
or
dec
test
hlt
clc
cs
push
push
push
pop
shll
xor
fmuls
pop
mov
dec
sub
jb
pop
or
or
divb
popf
pop
stos
rolb
fimull
jb
push
lock
call
in
rorb
fadds
scas
mov
xor
xchg
loope
dec
add
and
add
leave
loopne
icebp
mov
xchg
mov
ja
es
imul
pushf
js
sbb
push
add
fldt
or
jbe
sbb
lds
popa
and
mov
sbb
pusha
sbb
pop
mov
add
sub
das
rorb
sbb
mov
mov
dec
xor
jmp
inc
adc
mov
cmp
insb
cmp
add
inc
cmp
lahf
adc
push
inc
outsl
xor
add
lock
jmp
add
lods
jecxz
inc
cmp
ds
sbb
push
shll
and
cmp
add
and
cmc
add
jp
nop
std
stos
ret
hlt
jnp
mov
push
push
cltd
mov
adc
inc
sbb
sbbb
ror
andl
jne
scas
mov
lea
inc
sbb
leave
shll
iret
cmp
jae
loope
xor
mov
pusha
push
sahf
fiaddl
xor
ljmp
movsl
mov
mov
adc
adc
gs
sbb
xchg
dec
sub
xor
lcall
sub
xlat
cli
push
stos
cltd
test
lret
or
mov
sbb
test
scas
add
rcrl
or
rclb
notb
daa
pop
aad
inc
cmp
and
lret
leave
sti
mov
lcall
ret
daa
bnd
adc
data16
outsb
and
mov
hlt
jmp
jo
out
mov
or
push
aam
ss
sbb
push
mov
adc
mov
cmpsl
push
test
push
sti
xchg
daa
das
inc
pop
popf
sbb
push
adc
pop
inc
and
jl
popa
cld
adc
lods
cmp
outsl
push
or
jmp
inc
add
cmp
add
loop
lret
enter
mov
mov
add
cmpsl
xchg
xchg
cs
or
push
xor
scas
popf
test
xlat
inc
and
orb
arpl
adc
jb
push
pop
pop
adc
cmp
jo
test
inc
out
cmp
out
bound
adc
or
push
inc
cld
aaa
mov
ljmp
std
mov
dec
dec
insb
jmp
cmp
pushf
push
stos
cmp
cmpsb
test
dec
orl
lods
sub
jo
mov
push
pop
ljmp
push
sahf
xchg
std
jae
xor
hlt
shlb
mov
sub
mov
sbb
or
inc
int
sbbb
push
push
popf
and
xchg
stos
xor
and
cmp
add
push
xlat
dec
lea
rcrb
add
ret
xor
add
cmp
ret
push
xchg
ret
gs
add
mov
push
pop
aam
lea
ret
lahf
jecxz
test
sbb
xchg
cwtl
or
xorl
mov
sub
cld
gs
jnp
rorl
cwtl
inc
imul
xchg
mov
and
popf
add
mov
or
fwait
cli
xor
sbb
sbb
push
or
add
push
or
lods
sbb
xchg
les
xchg
mov
orl
lret
dec
les
mov
movsb
mov
push
adc
adc
out
jae
xor
dec
push
push
cmp
xchg
mov
icebp
sbb
push
addb
adc
in
movsl
mov
adc
int
js
clc
popf
idivb
ret
xchg
nop
in
inc
jnp
addb
imul
and
push
mov
shrl
sbb
mov
fs
lret
sub
je
cmpb
fldcw
out
push
flds
lcall
cmp
sahf
es
sbb
ds
inc
subl
fimull
sbb
sbb
lcall
fdivrs
sub
in
loop
cmc
es
popa
js
mov
in
std
dec
push
inc
rcl
dec
mov
pushf
mov
mov
js
xchg
pop
sahf
aas
and
pop
add
xchg
out
adc
lock
xchg
mov
notl
jo
out
inc
mov
mov
mov
int3
shlb
out
pop
push
mov
sub
enter
ljmp
rcl
mov
int
xor
sar
enter
push
lds
aam
pop
cltd
test
and
add
adc
fdivp
and
pop
and
mov
inc
add
fs
out
loope
pop
cmp
xor
jge
add
stos
or
cmp
orb
jb
mov
fs
enterw
call
loop
hlt
jle
or
pop
and
jae
inc
mov
ja
popa
jo
lret
gs
jo
xor
dec
into
mov
sub
les
sahf
dec
scas
mov
xchg
cwtl
pop
add
scas
push
lret
push
inc
sbb
je
adc
and
add
clc
jno
sub
loope
and
pop
push
xchg
in
and
gs
mov
mov
imul
loop
mov
add
sahf
xor
inc
push
inc
cld
xchg
dec
mov
nop
or
xor
imul
rol
pop
xchg
stos
or
shrb
adc
xchg
lods
sbb
and
xor
je
jae
scas
enter
rcl
push
jl
mov
mov
in
lahf
pop
push
mov
or
mov
stos
jae
push
in
add
jb
pop
and
mov
cmp
cmp
movsl
ljmp
sub
add
stos
leave
sub
jns
enter
inc
cmp
ret
jnp
pop
stos
mov
dec
push
pop
mov
pop
inc
mov
mov
sbb
aaa
clc
sub
outsl
andl
mov
inc
daa
xor
push
or
roll
push
xor
and
push
iret
pop
adc
fildl
inc
test
lret
push
and
aaa
fstl
test
popa
and
xchg
outsl
jecxz
test
aad
rorb
or
xor
in
popa
adc
enter
mov
mov
adc
mov
shll
add
add
adc
xchg
lret
icebp
add
and
test
test
out
daa
sub
mov
mov
push
jmp
nop
and
dec
add
addb
andl
xor
or
cmc
add
cltd
jno
dec
test
mov
loopne
xchg
sar
out
xor
push
push
inc
test
jo
movsl
pop
into
rolb
jg
mov
inc
lock
fisttpll
push
hlt
mov
push
sbbl
inc
and
push
dec
sbb
mov
adc
cwtl
sbb
lcall
loop
sarb
in
xor
jle
add
xlat
rcrl
and
into
loop
adc
inc
xor
xchg
sub
adc
pop
test
adcb
loopne
xlat
mov
cmp
lock
push
inc
cmp
push
xchg
sbb
inc
pushf
sub
jb
test
pop
jmp
sub
loope
inc
push
xlat
sbb
add
mov
loope
xor
loopne
lcall
ljmp
dec
cmp
xchg
orl
xor
adc
inc
push
xor
xor
popa
leave
xlat
push
push
mov
push
loope
add
xchg
insb
stos
add
cmp
loopne
add
adc
lods
mov
add
sarb
jns
jbe
mov
fbstp
lcall
sub
dec
inc
sbb
add
sub
dec
sbb
sub
push
lcall
dec
mov
inc
sbb
cmpsb
pop
mov
lret
add
inc
dec
inc
sub
adc
adc
sub
sbb
sub
mov
push
aad
inc
dec
pop
sub
sub
dec
mov
or
dec
cwtl
add
or
add
add
sub
push
andl
aam
jge
inc
push
inc
xor
sub
addb
inc
jg
push
push
add
inc
je
sub
or
test
in
jae
mov
nop
mov
mov
cmp
leave
mov
cmpsb
in
scas
es
imul
and
push
test
push
mov
in
loop
loop
in
push
fsubs
add
cs
push
jp
popa
mov
mov
sub
stc
orl
xchg
jne
jle,pt
das
sbb
pop
int3
dec
inc
mov
int
mov
xorps
faddl
push
jnp
mov
pop
adc
in
js
testl
test
and
pop
or
xchg
leave
xchg
fdivl
test
add
or
pop
cmpsb
test
popf
dec
es
andb
sbb
sbb
daa
sbb
mov
icebp
jo
ret
iret
stos
test
push
inc
adc
dec
addr16
loop
adc
xchg
mov
dec
ret
mov
stos
sub
stos
adc
adc
and
shlb
sub
push
sub
cwtl
push
xor
or
nop
loope
es
lret
inc
int
sub
xor
mov
lret
xchg
mov
or
ds
mov
cwtl
push
cmp
mov
mov
mov
sbb
jmp
lret
adc
push
add
in
inc
das
negl
dec
sub
popf
mov
gs
lods
popa
sub
loopne
loop
adc
xor
mov
inc
add
pop
andl
push
lcall
arpl
xchg
dec
and
sbb
inc
adc
push
aas
outsl
sbb
xor
inc
push
mov
inc
sbb
adc
and
cmpsl
xchg
jg
insl
cld
sbb
cmp
scas
push
lcall
inc
call
add
movsl
sub
mov
ror
scas
xchg
mov
mov
inc
std
and
adc
add
les
pusha
push
jne
je
add
add
mov
sub
cmp
pop
cmp
jne
push
push
xor
push
loopne
lock
pop
pop
pop
jge
and
push
pop
call
popl
jecxz
inc
adc
jae
add
sbb
mov
jbe
fcmovnbe
inc
add
les
je
add
xchg
in
add
jl
push
add
sbb
pop
pop
sub
pop
out
jg
mov
cmpb
push
cwtl
adc
loopne
inc
adc
mov
call
add
scas
or
and
enter
lds
push
ret
data16
and
push
cmp
insb
aam
adc
add
mov
and
or
cmpsl
jmp
pop
add
push
inc
adc
push
inc
test
lahf
lret
testb
push
push
ficompl
and
mov
sbb
pushf
dec
inc
cmp
dec
fsubs
ljmp
ja
sub
in
jo
xchg
add
push
or
adcl
ror
push
movsl
xchg
adc
stos
cmpsl
ljmp
cmp
pop
xorl
push
js
inc
inc
scas
inc
aad
sub
test
jo
mov
popa
pop
loop
test
cmp
cs
mov
mov
jp
xor
insb
rcrl
in
enter
adc
loopne
add
hlt
sub
out
xchg
loopne
cmp
jae
popf
add
sbb
dec
mov
mov
jae
les
repnz
scas
hlt
pop
jnp
lcall
xchg
inc
mov
inc
push
sahf
or
in
ljmp
inc
mul
add
and
out
cli
pop
sbb
cmp
or
pop
pop
or
sbb
push
inc
daa
sub
inc
es
cmpl
loop
ljmp
jb
stc
sahf
sub
mov
and
pushf
push
inc
and
mov
out
imul
enter
cmc
or
movsb
pop
push
lea
loop
out
push
js
add
sahf
pusha
or
add
rcrb
add
and
mov
mov
sub
test
inc
popa
enter
cwtl
adc
adc
add
inc
fmull
ret
add
pop
and
stos
push
dec
push
lock
mov
jo
les
in
sbb
pop
cmc
lret
mov
cmp
lret
es
mov
ds
sub
cmp
dec
dec
cmp
aad
sub
xor
jge
inc
mov
sarl
scas
xchg
rcll
lock
add
js
xor
cmp
sbb
mov
add
mov
push
sub
je
push
popa
add
pop
jae
inc
mov
dec
push
inc
xor
dec
xchg
mov
loope
adc
loopne
push
je
sbb
enter
mov
mov
sbb
cmp
mov
lret
ljmp
pop
push
mov
ss
data16
push
ljmp
call
aam
or
int
aas
aaa
mov
and
test
or
cltd
lret
cmp
data16
mov
pop
sbbl
sbb
cwtl
push
mov
stc
add
aad
inc
int
repnz
dec
aad
loope
inc
inc
std
stos
into
xchg
sub
mov
cmp
ljmp
mov
pop
add
int3
jae
sbb
out
dec
and
ret
xchg
imul
enter
and
roll
lcall
andl
push
sbb
enter
leave
inc
mov
sub
push
xchg
jo
jo
push
sub
push
js
jle,pt
negb
xchg
cmc
jb
ljmp
cmp
loope
mov
cmp
and
sub
pop
stos
fucomp
ds
push
push
int
xchg
jo
cmpsl
pop
cmp
jb
jae
rcll
out
or
jmp
inc
pop
jo
xor
cmp
mov
mov
mov
outsl
pop
hlt
les
cmp
iret
xor
jbe
lret
mov
sub
adc
and
add
and
or
mov
inc
lcall
ret
orb
rcrl
test
sbb
sbb
xchg
sub
jmp
push
or
shlb
iret
add
dec
sbb
and
enter
add
mov
test
mov
gs
lds
jb
and
jle
test
mov
lret
mov
jbe
call
push
or
push
andb
movsb
jbe
adc
push
jp
repnz
xchg
add
inc
in
das
push
inc
aad
ljmp
add
sbb
and
jnp
dec
subl
mov
rorb
push
ret
std
lret
loope
cltd
roll
sub
sbb
pusha
sub
popf
xor
mov
jle
fisttpl
pop
inc
cmp
lret
loopne
sub
pop
or
mov
clc
xor
shrb
lods
add
mov
into
xchg
sub
or
mov
andl
aam
push
js
daa
daa
xor
push
xor
and
inc
cmpsb
sub
jl
lcall
mov
adc
pop
popa
shrl
hlt
pop
pop
jno
push
int
push
jnp
xor
adc
mov
mov
test
or
or
adc
ret
cmp
repz
xchg
and
and
xor
aaa
out
jo
mov
int
sahf
mov
rclb
pop
add
mov
and
rclb
cs
adc
push
test
adc
push
add
push
out
test
lahf
hlt
stos
popf
or
pop
iret
mov
icebp
daa
aaa
push
add
adc
inc
inc
pop
push
push
or
subl
dec
dec
jp
pop
ss
fisttps
push
dec
add
cmp
add
sub
mov
roll
jmp
mov
mov
jno
clc
fs
jo
std
inc
popa
and
and
pusha
add
stc
xchg
rcl
and
cmp
xlat
lods
xor
push
mov
adc
fcmove
inc
and
call
push
nop
and
mov
sub
mov
inc
inc
mov
or
adc
mov
sub
lcall
shrb
cmp
ja
xor
fs
push
cmpsb
enter
cmp
inc
lcall
repz
lods
inc
js
pop
xchg
cmc
push
jo
jae
cmp
dec
cwtl
or
lret
cmp
addr16
lock
sub
stos
jp
lock
test
fidivrs
fildl
mov
in
jo
ficoml
rcrb
xchg
mov
rorb
or
inc
jae
push
test
loopne
pop
nop
mov
int3
lcall
xchg
jecxz
mov
push
addr16
or
adc
and
stos
cmp
push
orl
push
cmp
mov
lods
push
sbb
test
lods
xor
test
in
dec
push
dec
cs
enter
push
out
add
enter
sub
sub
or
xchg
sub
mov
inc
aam
inc
xor
cld
adc
cmp
push
add
add
pop
cmp
pop
xchg
and
out
popf
data16
test
orb
scas
mov
rorl
and
add
int
sbb
jo
xchg
popf
xlat
pushf
stos
adc
xchg
mov
lods
jae
dec
push
popa
and
bound
add
mov
mov
xor
das
mov
xor
loopne
int3
iret
jno
inc
cltd
lret
sti
mov
push
jnp
cmp
sub
xchg
add
push
ret
pop
int
push
push
push
jle
fmuls
xchg
or
xchg
mov
jb
loopne
sbb
test
jae
in
add
sub
leave
pop
hlt
sub
adc
lods
cmpsl
cmpsb
jo
cmp
das
add
jb
and
imul
aad
ret
xchg
adc
pop
xchg
sub
loopne
xlat
enter
push
and
push
lds
jo
inc
mov
dec
ds
xorl
sub
lret
test
out
popa
loopne
nop
mov
add
js
pusha
and
rorl
or
mov
sub
inc
js
jb
loope
insb
pop
pop
test
push
xor
sbb
push
mov
add
stos
jb
xchg
xchg
inc
push
pop
cmpsb
push
mov
push
add
rcrb
sbb
and
rorl
push
pusha
push
cmp
push
loopne
xor
rol
test
stc
jne
xchg
jmp
loop
in
lock
outsl
pop
and
repnz
cmpsb
stos
lds
push
mov
and
xchg
loope
xchg
cltd
push
jmp
xchg
cmp
jb
or
xchg
pop
stc
add
fucomi
lret
mov
ljmp
pop
xor
xor
push
and
inc
or
add
mov
sahf
nop
sti
cmp
sbb
mov
orb
xor
adc
inc
push
sub
jg
in
push
xchg
mov
mov
push
addl
and
mov
or
daa
add
inc
out
cmpsl
jnp
pushf
mov
jbe
inc
pop
adc
adcl
sub
aas
cld
bound
mov
push
and
std
inc
add
rorl
inc
dec
jmp
popf
cli
sub
cltd
movsb
into
xchg
mov
sbb
jo
scas
imul
mov
ret
aam
out
sti
mov
cltd
call
mov
je
stc
and
or
es
cmpsb
push
push
lcall
or
dec
mov
xlat
negl
stc
inc
cmp
push
pop
push
cmp
rcll
setp
or
pop
xor
popf
js
dec
popa
or
mov
pop
add
scas
push
add
mov
loop
in
iret
cmpsl
adc
testb
pop
lods
and
ret
push
mov
cmp
mov
scas
call
popl
cmp
mov
aas
adc
mov
in
push
out
sub
mov
mov
xor
es
sbb
and
test
call
add
cltd
out
sub
cmpb
mov
mov
shlb
movb
pushf
jle
mov
add
sub
dec
loopne
add
cmp
sti
lret
push
cmp
adc
mov
js
adc
repz
xchg
enter
pushf
int
subb
cmp
enter
mov
mov
mov
shlb
mov
incl
into
nop
jae
jae
dec
enter
mov
ret
and
popl
xchg
add
loopne
movl
xchg
outsl
ss
adc
sbb
cmpsl
data16
or
shr
rcll
test
testl
pop
popf
loope
push
mov
push
mov
rcll
jecxz
inc
inc
in
xor
push
or
andb
outsl
loop
rcrl
insl
dec
das
ret
jo
pushl
or
mov
fwait
mov
mov
pop
push
ss
adc
jae
push
dec
add
fdivs
push
notb
repnz
shll
push
jge
enter
dec
inc
nop
mov
xchg
jno
sbb
adc
sbb
pop
and
push
int
and
or
sub
push
pushf
jp
jle
or
pushf
cld
out
or
dec
xchg
mov
pusha
test
push
sub
add
std
and
push
add
and
andl
push
sti
jl
out
xor
xchg
push
les
sbb
mov
aam
xchg
imul
repz
inc
sub
mov
lock
pop
push
movsl
add
sbb
mov
jmp
dec
adc
mov
stos
cmp
cmp
hlt
cmc
lret
rorl
lret
cmp
fwait
sub
xchg
nop
mov
dec
push
jae
jnp
xchg
dec
dec
xor
pusha
lret
neg
mov
pop
gs
jmp
mov
sbb
cltd
push
and
add
jns
sbbl
sbb
mov
nop
fwait
dec
imul
lods
nop
rorl
adc
call
int
enter
rcrb
mov
inc
or
or
add
or
xor
push
pushf
loopne
movsl
push
jecxz
mov
and
xchg
mov
test
xchg
dec
push
dec
loopne
dec
and
cmp
push
es
pop
loop
pop
add
ret
jo
sub
or
ja
mov
lock
ljmp
mov
push
loop
adc
dec
icebp
mov
outsb
int
sub
mov
adc
idivb
inc
cwtl
or
jg
sub
add
inc
es
sub
lods
add
jb
cmp
jle
mov
in
lea
push
adc
jne
data16
bound
or
lret
jbe
push
mov
cs
dec
mov
push
cmp
pop
das
pop
roll
add
mov
inc
aaa
das
jns
enter
jle
pop
movntq
out
mov
loope
ret
push
pop
es
dec
dec
mov
ficompl
mov
adc
and
imul
mov
add
jb
adc
jl
push
cwtl
ret
or
jb
loope
enter
jb
test
rolb
adc
sub
adcb
jg
inc
scas
inc
add
xchg
push
loop
stos
or
loop
mov
int3
push
aam
inc
jecxz
xor
or
or
sbb
movsb
xor
jmp
fdivrl
xor
jmp
daa
and
and
inc
in
jno
sti
jbe
xchg
add
and
push
es
leave
adc
inc
adc
sub
hlt
or
add
mov
leave
scas
jmp
iret
movsl
cmp
pushf
xlat
pushf
bound
loop
push
lret
es
stos
jo
lret
inc
jae
add
mov
push
nop
mov
js
mov
add
xchg
and
mov
lret
pop
xorb
js,pn
mov
cmp
sbb
movsb
xor
in
loope
cmp
cmp
jp
enter
mov
js
stos
cmp
inc
sub
dec
popf
dec
adc
xchg
dec
adcl
xchg
subb
sbb
jo
mov
pop
push
jns
sub
or
or
or
sub
dec
xor
js
out
call
sub
mov
xlat
mov
icebp
xchg
fnstsw
fistl
mov
xchg
or
inc
mov
sub
inc
adc
jae
cmp
xchg
cld
sub
mov
sub
push
out
mov
mov
lods
or
call
test
push
and
push
inc
push
push
iret
pop
adc
ja
sub
xchg
add
push
in
enter
fcmovnu
push
stos
dec
sbb
lock
push
pusha
dec
or
mul
loop
pusha
sub
scas
jge
out
push
jbe
loope
icebp
jae
les
adcb
jbe
cwtl
rclb
out
pop
nop
and
sbb
pop
test
mov
xchg
mov
ret
sbb
jp
ljmp
xor
push
or
stos
sub
leave
inc
in
mov
xor
jle
inc
mov
aam
sub
add
lcall
gs
sbb
ret
aaa
jno
cmp
rol
inc
cwtl
or
sahf
shrb
push
push
mov
and
out
inc
movsl
cmp
js
arpl
sub
adc
test
cs
mov
mov
js
fimuls
addl
push
jae
stos
int3
sbb
or
mov
mov
adc
repz
inc
nop
pop
lret
jae
test
lret
xchg
xor
inc
hlt
add
add
jnp
push
cmp
xor
xchg
sub
icebp
push
or
in
pop
gs
addr16
jbe
sbb
sbb
push
xor
sub
push
xchg
sub
add
scas
xchg
into
or
out
inc
scas
inc
sbb
dec
and
mov
bnd
sbb
pop
rcll
ja
adc
mov
fs
mov
int
dec
aad
xor
mov
mov
loop
pop
inc
in
add
cmp
test
out
aam
aam
and
std
in
popa
test
xor
add
ficoml
dec
in
and
jbe
in
or
mov
out
xchg
call
ds
arpl
shrl
ret
call
outsl
or
flds
xor
notl
fists
pop
or
adc
inc
idiv
pushl
inc
add
push
xchg
push
mov
inc
pushf
orl
mov
sub
inc
les
push
cmpsb
mov
test
sbb
out
hlt
push
test
daa
jle
push
and
sub
xchg
fwait
daa
jae
ret
add
lahf
outsb
jle
push
sbb
pop
popf
mov
mov
fidivrl
mov
push
dec
inc
stos
mov
xchg
hlt
stos
jo
sub
inc
sub
add
lock
add
cmp
test
and
sub
xchg
loop
mov
push
dec
daa
sbb
add
push
jl
shl
ljmp
pop
dec
sbb
je
stos
adc
stos
jo
add
repnz
shlb
test
mov
jno
dec
rep
cmp
push
scas
sahf
or
add
xor
cmpsb
mov
mov
rcrl
pusha
mov
dec
sbb
mov
dec
push
push
jp
out
mov
xor
lcall
push
shrb
adc
inc
add
inc
and
test
push
mov
bound
test
cmp
mov
adc
pop
jo
mov
mov
cmpsb
push
adc
dec
xor
inc
lahf
jecxz
inc
scas
push
xchg
imul
mov
mov
and
xchg
fsubl
mov
mov
lods
pop
add
lcall
lds
push
jl
sub
add
sub
ja
imull
xchg
or
adc
sbb
or
push
xor
sub
pushf
add
loopne
arpl
add
rcl
or
aaa
push
popa
das
pop
mov
xor
notl
xchg
and
mov
ret
push
mov
fwait
test
and
cmp
in
sarl
xchg
xchg
mov
xlat
lcall
fldenv
inc
mov
test
add
paddq
data16
sub
lcall
outsl
mov
pop
cmpsb
ljmp
xchg
call
add
enter
push
xchg
mov
arpl
push
mov
fsubrs
sub
divb
es
shll
push
inc
cs
adc
add
dec
xchg
lods
adc
add
test
add
push
sub
jno
adc
ret
rcrl
pop
ds
mov
xchg
mov
subb
inc
test
or
jns
adc
cs
leave
cmp
mov
push
and
adc
cs
cmp
es
out
loope
scas
mov
push
push
icebp
rolb
jmp
mov
mov
sbb
mov
loopne
dec
loope
jp
sbb
ret
push
cmp
xor
or
xchg
adc
lock
pop
mov
pop
mov
sub
imul
add
movsl
js
sbb
mov
mov
enter
xor
fmull
add
or
sbb
test
and
dec
inc
push
ret
cmp
dec
pusha
sub
cmpsl
and
ret
jl
lea
add
mov
leave
aad
js
adcb
cmp
and
push
js
and
fwait
repz
dec
cmp
cs
jae
add
push
lcall
fbld
xchg
fadds
sbb
cs
icebp
xchg
mov
push
xchg
xor
or
dec
ljmp
rcrb
ss
add
sbb
xor
repz
sub
divb
out
mov
mov
fidivl
push
or
mov
push
adc
add
pop
or
call
ljmp
inc
cmpb
enter
das
sub
pop
loop
adc
pop
sub
or
mov
rorl
sbb
andl
xchg
sub
or
lcall
lea
ljmp
jl
out
adc
jl
jo
mov
mov
arpl
sub
jecxz
fmul
xchg
jmp
xor
inc
pop
push
xchg
repnz
nop
rolb
lcall
dec
mov
push
lcall
add
rol
stc
cmp
xchg
mov
push
ss
int
push
cmp
in
nop
xor
or
lret
pop
adc
nop
push
xor
and
subl
jae
scas
ss
xor
out
insl
pop
push
cmpsb
jb
dec
adc
sub
in
or
xchg
sub
push
xor
movsl
xor
pop
aad
adc
inc
into
mov
jmp
in
fcomi
push
xor
jo
scas
cli
push
cmp
jmp
inc
push
sub
je
cmpsb
jo
jne
pop
incl
clc
std
cltd
call
or
inc
into
nop
bound
or
lods
pop
in
pop
or
push
mov
push
xchg
andb
gs
and
mov
cs
roll
sbb
stos
add
mov
aam
cmp
daa
inc
insb
and
xchg
insb
loopne
cmp
cs
lcall
jmp
dec
mov
ja
mov
push
xor
lods
ret
in
dec
xlat
pop
inc
xchg
imul
and
mov
jae
mov
push
fs
xor
mov
mov
ret
sub
and
lock
popf
das
dec
add
mov
test
les
cmp
lahf
sub
js
movsb
outsl
push
jns
dec
sub
hlt
add
les
repz
cmc
jae
jbe
adc
ss
mov
mov
adc
pop
mov
inc
in
js
or
inc
adc
rolb
imul
dec
add
push
repnz
jmp
or
sbb
into
pop
icebp
and
mov
in
xor
in
scas
mov
cld
adc
aas
jnp
clc
inc
add
popf
pop
push
loope
add
add
mov
xor
sbb
data16
and
iret
rol
loope
inc
jecxz
xchg
add
add
test
cmc
cmpsb
sbb
inc
jne
shl
jb
jb
push
adc
in
dec
sbb
mov
jo
test
sbb
mov
adc
cmp
sbb
lods
mov
push
insl
cmp
add
loope
mov
sti
lret
sarb
fiadds
jb
loope
cmp
repz
cmp
lahf
ffree
std
mov
bound
cmp
push
adc
mov
lods
inc
mov
sub
fistpll
adc
cmp
mov
dec
sbbl
test
add
xorl
movsb
mov
jnp
loope
mov
mov
or
or
adc
mov
and
fs
mov
or
sahf
xchg
cmpsb
out
push
sub
cld
cmc
xor
jbe
add
test
scas
push
xchg
idivl
sub
mov
adc
or
inc
dec
cmpsl
inc
aam
and
or
jmp
inc
fmuls
andb
stos
xchg
aad
lcall
scas
test
fisubl
popa
pop
push
inc
xchg
stos
pop
and
loopne
push
rcll
call
ret
andb
mov
leave
sbb
ret
mov
ret
push
jg
pop
push
xchg
repnz
loope
cmpsb
pop
jo
mov
mov
stc
mov
adc
cwtl
lret
pushf
xchg
mov
mov
pop
xor
inc
cwtl
mov
lds
lret
jmp
pop
and
push
sbbl
jb
lock
aad
out
sbb
mov
add
inc
mov
push
sbb
or
jle
ret
nop
or
mov
xchg
bound
add
mov
adcl
xchg
jle
xchg
test
sub
je
and
and
rclb
and
push
daa
stos
xchg
subl
into
shl
inc
jnp
add
pop
sbb
stos
sbb
jmp
push
push
jo
pop
xchg
inc
cltd
test
jb
popa
in
fcmovnb
or
pop
cwtl
xlat
push
pop
cmpl
loop
mov
lods
and
ret
lds
loop
add
enter
xor
test
rcll
pusha
push
out
sbb
scas
jo
or
fwait
xchg
mov
aam
dec
lods
push
sbb
sbb
jo
xchg
cltd
inc
lret
and
idivb
je
sbb
pusha
xchg
jge
xchg
loopne
stos
adc
hlt
stos
mov
dec
or
xor
push
cmp
test
mov
xor
shr
mov
push
scas
cltd
dec
das
sub
inc
stos
js
add
jl
mov
ja
pusha
mov
jp
rorl
aam
add
cwtl
loop
xor
sub
mov
adc
push
mov
rclb
pop
xor
add
inc
popa
add
scas
popf
mov
adc
jno
sub
lods
ret
repnz
or
shlb
jae
jb
and
js
sbb
pop
out
sub
or
std
inc
dec
jo
lea
mov
ret
adc
daa
test
decl
add
iret
ret
mov
jo
mov
inc
nop
cld
inc
cmp
pop
mov
clc
orl
sub
inc
rcll
mull
or
push
hlt
push
push
sbb
dec
lock
dec
aaa
adc
in
jecxz
or
inc
movsl
repnz
les
dec
push
or
pusha
sbb
faddl
rcr
mov
add
add
mov
dec
xchg
fcompl
sti
adc
test
das
shlb
push
out
and
or
leave
out
inc
jb
sub
outsl
rclb
fucomi
push
xchg
push
loop
jae
xchg
ret
add
push
ss
test
and
sbb
push
lods
aaa
inc
add
inc
movsl
sti
pop
jno
push
mov
movsl
dec
roll
enter
cmp
daa
inc
push
add
es
test
aam
xchg
cmp
mov
scas
notb
and
scas
add
mov
cmp
inc
adc
int3
mov
jg
mov
sbb
sbb
xlat
dec
jo
push
jnp
and
pop
enter
pop
lea
sub
dec
inc
mov
loopne
add
xor
xchg
lea
fidivl
adc
inc
mov
mov
or
add
adc
outsl
adc
stos
add
xor
mov
orb
pusha
cmp
aad
subl
inc
jle
pushf
stos
and
enter
jo
and
add
inc
pop
mov
ret
lds
orb
ss
cmpsl
nop
push
inc
cwtl
push
jne
sbb
jne
push
mov
dec
cmp
inc
ja
scas
out
loope
or
xor
or
or
adc
jge
pushf
adcl
mov
add
xor
mov
inc
inc
xor
cmp
test
iret
add
jo
mov
js
ret
add
lret
cli
add
mov
adc
or
jo
xor
fildll
add
sahf
xchg
stos
pop
xchg
popf
in
jo
lea
arpl
or
and
mov
lret
cmp
mov
xor
mov
mov
cmp
mov
out
inc
ret
sbb
test
mov
incb
adc
ss
das
mov
outsb
sbb
add
add
out
aam
scas
jne
jbe
sbb
sahf
push
cwtl
mov
ret
mov
enter
cmp
adc
sbb
sbb
jo
inc
fwait
ret
faddl
xchg
iret
push
das
inc
xchg
xchg
dec
addb
adc
out
dec
add
cld
mov
inc
rorb
add
push
mov
mov
xchg
mov
pop
or
adc
repnz
shlb
push
ret
adcl
jle
xor
or
sub
jo
inc
scas
sbb
xchg
xlat
or
stos
push
and
cmp
pushf
sub
pop
pop
mov
sub
mov
test
push
test
pop
sbb
loopne
test
lret
in
enter
scas
scas
jo
sub
pusha
ret
or
cmp
loope
adc
inc
push
jb
pop
ljmp
jns
jb
push
test
fwait
jp
test
shrb
mov
lods
cltd
repz
sub
fcoms
cmpsl
and
test
dec
sub
xchg
add
pusha
test
mov
xlat
xor
xor
xor
jg
pop
jmp
filds
xchg
out
sbb
lea
cmp
pop
push
das
sti
xchg
out
leave
test
mov
inc
gs
sbb
in
add
and
jae
sub
adc
adc
pop
inc
orb
call
out
lret
xchg
lret
pusha
lock
xchg
jl
add
test
add
orl
fmull
aam
test
imul
push
mov
scas
outsb
pop
in
jo
or
or
addr16
lret
push
leave
roll
imul
test
adc
inc
das
adc
aad
and
aas
xchg
inc
cmpsl
push
push
xor
dec
fbld
je
cmp
jle
mov
jp
jbe
pusha
ss
imul
push
sub
add
mov
xchg
pop
mov
dec
sarl
aam
pop
add
jp
xchg
dec
or
add
inc
rolb
sub
jp
sub
jae
mov
ljmp
or
dec
cltd
adc
add
or
daa
fnsave
mov
ficoml
mov
vfrczps
sub
ret
pusha
and
xchg
out
roll
negl
sub
sbb
lret
fimull
imul
push
or
rclb
and
push
add
pop
fcompl
xor
or
sbb
adc
push
push
fs
pop
and
stos
test
popf
inc
inc
mov
and
rclb
xchg
sub
or
add
mov
jno
and
sbb
sbb
fidivrl
jmp
cwtl
and
xchg
jle
out
dec
push
popa
cmp
sti
test
pushf
or
test
xchg
xchg
sub
data16
sbb
or
nop
jecxz
in
adc
sub
pop
or
test
cmp
lcall
imul
cmpsl
add
popa
or
mov
ret
inc
push
loope
mov
pop
lahf
in
push
out
and
mov
inc
jns
adc
and
pusha
jo
sub
dec
xchg
jle
add
test
ljmp
shrb
in
add
loopne
adc
xchg
jb
orb
and
enter
mov
jns
cmovl
xchg
into
pop
cmp
adc
stos
les
xchg
cmpsl
insl
scas
add
jae
inc
and
jae
test
call
pop
inc
in
mov
sub
mov
shlb
pop
adc
jmp
xchg
pop
cmp
dec
je
cltd
mov
rorl
dec
xor
jne
push
shll
aam
adc
push
loop
ret
rolb
sub
add
aam
add
xchg
or
adc
jmp
inc
fnstsw
scas
jo
dec
add
mov
mov
xlat
sbb
dec
lret
stos
adc
add
loop
loope
jb
stos
pop
xchg
shl
add
mov
and
jb
cmp
cmpsl
mov
insb
adc
lods
rolb
call
adc
sbb
push
stc
out
jmp
mov
push
push
pop
push
lds
jo
push
xor
in
push
xchg
add
add
das
push
adc
cmp
dec
popa
inc
imul
iret
loope
pop
jnp
xchg
push
mov
mov
out
popa
jbe
rcll
push
inc
imul
inc
lds
mov
pop
int
mov
loope
and
add
push
or
daa
lcall
sbb
or
aam
mov
jl
and
scas
fstpt
xchg
fcomps
xor
dec
cmp
sub
sbb
add
add
cmpsb
inc
rclb
inc
ja
nop
adc
es
inc
xchg
rclb
mov
xchg
in
dec
orb
xor
cmpsl
ret
setle
xor
and
pop
mov
adc
push
pushf
jp
out
nop
sub
mov
jp
test
pop
mov
add
imul
pop
mov
mov
xchg
jae
push
aam
negl
or
jo
or
or
and
inc
xor
mov
add
add
in
push
inc
add
push
ljmp
repnz
pop
sar
lds
add
cli
jg
sub
addr16
add
shll
out
mov
xchg
cmp
xchg
cmp
xor
cmp
or
divl
adc
xor
insw
xor
push
ss
sbb
xchg
dec
cmp
fisubl
cwtl
xor
ret
sub
cmp
xor
movb
jne
ret
out
dec
xrelease
adc
sbb
pop
icebp
jge
cmp
mov
aam
adc
jo
xchg
aad
in
xchg
mov
push
in
sub
sub
adc
xchg
test
loop
xchg
mov
mov
int
les
pusha
xor
leave
mov
add
mov
sub
add
aad
cmpsl
inc
addb
mov
xchg
dec
outsb
mov
xor
ja
test
test
pushf
loope
pusha
repz
imul
xor
aad
pop
je
sbb
addb
or
ret
dec
scas
js
shl
cmpsb
push
loopne
pop
mov
mov
inc
loop
add
cmp
outsl
mov
mov
adc
sbb
dec
adc
pushf
add
fcompl
loop
add
imul
iret
shlb
and
push
xchg
ret
inc
jnp
push
lods
cmp
cmpsb
adc
add
cli
lret
sub
push
and
orb
or
pushf
call
loop
loopne
enter
xchg
lods
fldl
out
push
fwait
mov
push
in
xor
sbb
mov
and
sub
add
push
cmp
pushf
mov
push
inc
in
push
aaa
sbb
jge
stos
loopne
or
sbb
jecxz
xor
cmp
loopne
imul
xlat
adc
dec
sbb
sub
sub
shr
mov
icebp
push
add
push
push
lcall
mov
jne
hlt
push
fistps
push
push
or
loope
fists
push
jecxz
mov
add
mov
and
clc
std
shll
inc
sub
in
stc
lods
loope
xor
andl
or
xchg
mov
mov
cmc
jb
xor
hlt
push
mov
bound
cmp
sbb
mov
int3
rcl
xor
add
xchg
pop
adc
mov
mov
mov
scas
xlat
pop
adc
popa
add
fs
dec
es
add
cmp
and
ret
jno
mov
loopne
add
jo
jo
or
icebp
inc
or
mov
sbb
sbb
rcl
je
inc
divb
jb
pop
mov
jb
cli
xchg
add
out
mov
push
ljmp
mov
and
or
cmp
or
outsb
int3
mov
sub
leave
push
push
nop
subl
scas
add
sub
pushf
mov
out
mov
adc
cmp
test
and
mov
or
sti
jp
or
xchg
and
mov
add
lcall
and
fcomps
into
inc
add
xchg
sbb
cmp
sub
add
jge
mov
push
add
test
xchg
int3
fsubl
shl
mov
adc
imul
cmp
or
daa
daa
mov
ljmp
pop
xchg
jo
loop
fldln2
pop
cmp
mov
jp
mov
fbld
cs
xor
or
orb
sbb
adc
fisubrl
fs
add
data16
jns
pop
mov
pusha
jo
pop
mov
dec
mov
imul
inc
or
jne
sub
addl
imul
leave
rcr
push
push
addl
dec
or
in
addr16
cmpsb
ficompl
not
dec
rolb
or
adc
add
aam
imul
add
nop
mov
mov
imul
dec
je
cltd
es
lea
cmc
mov
outsb
and
add
sbb
imul
aam
mov
dec
mov
cmp
popa
test
cltd
mov
sub
push
lock
push
movsl
sbb
pop
and
ror
fnsave
lret
ret
push
mov
push
or
call
mov
jb
xchg
inc
jae
or
jl
inc
xor
jge
adc
sub
sbb
xlat
enter
jns
push
cs
mov
and
xor
pop
cwtl
andb
test
xchg
aaa
add
cmp
pusha
testl
in
movsb
cmp
mov
fwait
addr16
jmp
sbb
sbb
xchg
pop
mov
mulb
cmp
mov
sub
dec
adc
jmp
xchg
sbb
lds
ss
jle
enter
sahf
and
xchg
or
pop
add
pop
nop
mov
xor
sbb
adc
cltd
dec
push
and
rcrb
jo
movsb
inc
mov
cs
shlb
movsb
mov
lea
pop
insl
scas
or
xchg
loopne
aam
rcr
pop
sbb
sub
push
add
scas
push
inc
aad
inc
lret
cwtl
push
icebp
sarl
popf
leave
in
out
mul
data16
jo
mov
xchg
mov
int
test
stos
jo
inc
xor
ja
push
xchg
test
testl
fsin
xchg
push
pusha
mov
clc
lock
movsl
fistps
hlt
mov
dec
clc
and
das
inc
les
xchg
push
pushf
mov
rorl
test
push
into
add
inc
push
movsl
dec
js
jmp
out
sub
aam
movb
add
dec
mov
cmp
or
push
int
mov
mov
test
xor
push
lret
fs
xchg
mov
cmp
jle
and
int
ljmp
data16
out
inc
iret
dec
popf
sub
push
add
cmpl
lret
aam
cltd
mov
add
and
inc
das
clc
sub
mov
or
aam
xchg
jns
lds
arpl
mov
in
enter
sub
ds
addr16
xchg
cmp
add
jb
rcrb
xorb
mov
add
inc
lods
add
jl
or
inc
mov
push
pop
jecxz
jge
xor
adc
pop
rorl
jns
pop
cmp
add
cmp
std
mov
and
inc
mov
add
jmp
jmp
jbe
lret
bound
push
cmpsb
mov
jae
call
test
ja
dec
sub
sbb
addr16
add
and
mov
call
pusha
cmpsb
pop
icebp
mov
sub
pop
std
add
cmp
shrl
and
mov
shll
dec
lock
out
call
lret
push
xor
and
sub
push
movsl
js
stc
scas
in
cmpsl
mov
add
or
inc
jge
mov
aad
lcall
test
jp
pusha
cltd
test
sub
xchg
push
rol
mov
or
jo
or
aaa
adc
push
mov
or
enter
xor
or
test
pop
stos
fiaddl
add
sub
mov
sub
inc
dec
int
outsl
ljmp
add
ss
aas
mov
cmp
stos
ja
inc
mov
aam
mov
rcl
pop
cmpsl
xchg
xor
lret
sbb
aas
or
xchg
jns
cmp
out
push
inc
cmp
sub
adc
push
in
lea
scas
sub
or
fbld
jmp
jge
add
jle
fnstsw
loop
inc
mov
push
das
dec
xor
mov
add
fs
pushl
stos
bound
push
hlt
inc
es
loope
fidivrl
loope
rclb
mov
test
add
nop
lods
lea
jns
xchg
mov
sbb
push
dec
lea
aam
xchg
xchg
and
in
sub
pop
xor
lock
add
addr16
nop
mov
push
mov
add
dec
je
aam
rolb
insb
rcll
sub
add
or
inc
pop
adcb
dec
pusha
aam
sub
add
loopne
pop
add
pop
lock
pop
push
push
cmpsl
lret
mov
std
popf
outsl
push
mov
xor
fstpt
addr16
push
loope
popf
call
and
sbb
xchg
and
mov
dec
daa
stos
or
sub
inc
into
push
je
or
cmp
xor
iret
nop
or
lods
clc
into
loope
int
call
js
out
aam
jno
hlt
cmpsl
ret
inc
test
adc
in
std
sbb
test
and
lcall
lds
add
test
notl
scas
push
sbb
orb
scas
imul
mov
sbb
pushf
nop
jmp
jo
xor
mov
xor
mov
or
mov
lcall
mov
out
cmp
lahf
rorb
mov
and
loopne
and
stos
out
sbb
mov
sbb
jecxz
test
stos
pusha
xor
pop
dec
js
push
sub
ljmp
push
cld
push
or
inc
enter
jb
push
stos
push
xchg
xlat
or
sub
data16
or
lea
push
ret
xchg
add
in
bound
jb
lret
cmp
add
adc
or
cmpsl
add
scas
push
mov
xchg
dec
jae
jp
pop
pop
sub
mov
mov
inc
sti
loop
pop
loope
ljmp
orb
gs
push
cmpsl
mov
push
mov
insb
test
gs
cmp
push
ja
and
jle
or
push
aaa
loope
les
add
add
sbb
shr
andl
jne
insl
sbb
adc
dec
stc
lods
bound
arpl
jo,pn
xor
xor
sbb
inc
adc
test
pop
addr16
pop
jl
adc
inc
mov
sbb
lods
dec
addr16
inc
stos
push
es
jae
pusha
cmp
mull
xor
or
xor
add
mov
insb
sbb
dec
loop
pusha
js
mov
cltd
sub
les
inc
xchg
ret
aam
nop
ljmp
jp
loop
pop
inc
lea
lods
ljmp
push
pop
sbb
and
shlb
or
insb
mov
adc
and
xorb
mov
push
lret
inc
aam
pop
imulb
push
adc
movsl
rolb
add
sub
push
push
cmp
sbb
loope
add
pop
pushf
xor
jo
jle
fdivrs
dec
mov
jae
leave
cmp
jl
std
jne
push
lret
or
outsb
fcmovnb
adc
pop
mov
in
test
mov
ljmp
in
mov
sbb
shrl
xchg
cmp
push
add
xor
pusha
jb
hlt
add
add
in
cwtl
push
in
aas
push
aad
pop
xlat
mov
add
push
mov
add
test
adc
shl
pusha
rcll
xor
adc
cltd
add
xchg
ret
fs
lcall
nop
xchg
jb
jo
es
insb
mov
mov
push
scas
mov
test
inc
and
add
adc
mov
leave
mov
and
push
or
ret
out
push
sub
and
sbb
mov
sbb
lcall
or
jle
stos
cmp
jp
adc
adc
enter
test
imul
adc
cmp
and
or
loope
cmp
and
test
jne
and
pop
jae
xor
inc
inc
xchg
orl
jb
mov
test
mov
aam
adc
push
mov
out
or
sbb
loope
jns
xor
sub
insl
fldl
cs
loopne
add
pop
pusha
jo
and
cmpsb
add
cmpsl
push
dec
or
test
pop
adc
mov
add
add
mov
pushf
fwait
mov
outsl
bound
mov
xlat
sbb
mov
add
sbb
loop
in
adc
aam
mov
or
shlb
and
mov
xor
subb
icebp
inc
je
inc
mov
pop
cs
push
cmp
or
es
int3
pop
inc
sbb
push
in
inc
daa
add
lds
call
inc
inc
mov
subb
add
xor
push
or
fistps
fidivl
inc
ljmp
repnz
cmpsb
clc
in
jne
inc
jg
dec
push
mov
scas
fldl
rclb
cmpb
jae
xor
xor
inc
and
stc
andb
clc
gs
sti
pop
outsl
inc
sahf
cmpb
stos
xor
lcall
cwtl
xor
sahf
cwtl
fisttpl
jl
inc
xor
jns
jp
or
je
cmp
mov
inc
or
dec
shll
rclb
sbb
add
cld
adc
subb
adc
cmp
dec
and
push
bound
push
push
jmp
add
loop
xchg
add
fldl
daa
scas
test
shr
jecxz
or
aad
jbe
adcb
add
ret
jg
sbb
cltd
add
and
leave
sub
push
xor
outsb
cmp
inc
pushf
and
gs
sub
xchg
xor
push
lret
push
ret
mov
les
mov
xchg
cmp
mov
sbb
xchg
test
je
adc
ret
or
test
lretw
adc
and
xor
jmp
xchg
out
pusha
xor
add
ret
mov
ret
orb
push
in
push
push
mov
jne
adc
adc
int3
push
xchg
xchg
add
sbb
stos
popf
push
adcb
cmpsb
push
pop
insl
adc
mov
nop
add
addl
fidivl
adc
xchg
shll
xchg
and
das
loop
adc
cmpsb
xor
inc
push
mov
lds
jb
jo
test
lcall
daa
ret
addr16
dec
lret
push
mov
rcrb
mov
push
mov
shlb
mov
add
fwait
cld
pop
and
aaa
sbb
lcall
sti
daa
lea
cmp
dec
xor
sub
xor
xchg
aaa
stos
pop
mov
add
xchg
int
and
pop
out
test
xchg
sarb
pop
sbb
pop
imul
aam
mov
push
daa
insl
dec
lea
or
sub
stos
inc
bound
and
and
push
xchg
mov
push
pop
xchg
cmp
mov
outsb
mov
mov
sub
loop
inc
rcrl
lcall
mov
es
push
shll
fists
insl
shll
dec
xchg
push
outsb
sbb
outsb
xor
xor
sub
mov
insl
cmp
inc
fcoml
movsb
sbb
add
mov
sbb
mov
stos
cmp
inc
dec
mov
pop
loop
adc
mov
test
pop
mov
mov
pop
fbstp
pop
mov
mov
inc
add
loop
rdpmc
lahf
or
add
dec
mov
xor
push
shrl
dec
xchg
popf
jne
cmp
lea
fsts
inc
push
std
push
adc
sbb
push
loop
mov
push
push
pop
mov
mov
adc
inc
xchg
add
mov
cmpsb
pop
push
test
loop
stos
imul
sbbl
mov
sarl
add
sbb
push
xchg
jmp
jge
mov
sbb
dec
jae
test
pop
mov
pop
inc
jae
shl
xchg
push
fstps
jb
or
cs
stos
ret
sbb
and
js
in
ret
rcrb
sbb
or
in
mov
cmp
lret
push
sti
ret
cmp
pop
xchg
sbb
out
add
mov
lret
and
inc
insl
jno
dec
mov
pushf
into
inc
jmp
adcb
cwtl
xchg
je
mov
cmp
fnstcw
sub
aam
stos
pop
sbb
loopne
xor
mov
and
push
push
inc
pusha
enter
addr16
xor
add
cmp
add
sub
adc
xor
inc
cmpsl
xchg
push
pop
stos
add
in
xchg
jl
jne
sub
leave
add
mov
negb
sbb
pop
xchg
push
rcll
cld
rcr
add
andl
je
sbb
or
cmpsl
or
jb
mov
std
inc
xor
push
sbbl
test
out
sti
call
push
int
sub
mov
adc
rcrb
xchg
mov
push
scas
fs
fwait
mov
pop
pop
test
aad
les
out
inc
scas
or
add
hlt
push
or
stos
dec
xchg
xorl
in
int
mov
insb
ret
add
or
inc
or
packsswb
cmp
je
stos
xchg
shlb
jecxz
dec
push
mov
das
mov
cwtl
hlt
shrb
aad
test
lds
pop
cld
orl
adc
push
mov
lret
jno
or
pop
push
mov
lods
je
test
xor
jno
cmp
out
test
sub
call
dec
stos
push
xchg
mov
rcll
mov
mov
rcrl
call
sbb
mov
push
add
out
jb
test
lahf
dec
mov
jo
cld
add
add
cmpsl
sahf
mov
inc
movsl
movsb
gs
xchg
add
push
lds
jae
sbb
mov
inc
mov
xchg
push
jnp
jbe
je
movsb
into
lea
mov
lds
and
popf
xor
xchg
adc
pop
mov
push
je
push
push
leave
mov
loope
aad
repnz
ret
adc
std
loopne
push
cmp
fwait
add
in
dec
lret
mov
pop
loopne
pop
roll
jge
loopne
pop
iret
inc
xchg
xlat
dec
cwtl
mov
sub
data16
in
rcl
xorl
mov
add
sub
push
psubusw
outsl
les
in
adc
aas
cmc
mov
mov
mov
mov
cmp
movsb
inc
xchg
push
jae
sub
imul
jbe
pop
xchg
ret
xchg
mov
push
cltd
dec
aad
xor
push
mov
sbb
outsb
push
pop
add
lret
lods
js
pop
cmp
inc
add
jge,pt
mov
divl
and
imul
adc
or
mov
sbb
add
push
fcompl
cltd
add
sbb
into
inc
cmp
xchg
test
pop
das
sub
in
push
xchg
jae
jo
or
xchg
call
xchg
leave
jg
inc
adc
cmp
mov
or
aad
sbb
inc
xor
jae
cmp
xchg
fwait
dec
push
xor
xchg
stos
inc
xchg
iret
or
pusha
jge
mov
sahf
push
dec
lret
add
mov
cmp
stc
lock
xchg
push
fidivrl
xchg
es
sbbl
or
add
andb
lret
dec
mov
push
out
add
push
das
stos
scas
mov
jnp
pusha
mov
adc
mov
xchg
mov
jb
add
loopne
xchg
xchg
or
or
lahf
mov
xchg
push
loopne
cmp
push
mov
andl
scas
mov
nop
imul
xchg
ret
lock
aas
addr16
test
push
out
addl
ljmp
cltd
clc
mov
adc
push
xor
fcom
fisubs
adc
stos
push
in
cmp
leave
mov
orl
in
pop
add
add
adc
xchg
test
ljmp
fdiv
mov
jbe
cmc
testb
cmp
icebp
mov
xor
push
or
sub
cmp
mov
data16
add
mov
hlt
push
push
dec
push
hlt
xchg
test
add
aam
pop
xor
pop
inc
sub
sbb
test
ds
fadd
sub
xlat
dec
jo
aam
or
loope
push
mov
cld
out
and
xor
xchg
popf
out
push
xchg
inc
push
cwtl
mov
adc
jo
stos
and
or
enter
push
sub
mov
shrb
inc
adc
or
das
lcall
or
xchg
call
loope
loopne
sbb
shlb
cld
scas
lock
and
sub
add
adc
jmp
loope
inc
add
sub
lret
jge
call
js
adc
xchg
jnp
sar
sbb
scas
call
push
lahf
jno
xchg
add
adc
jp
adc
mov
add
xchg
lds
or
pop
gs
sbb
sbb
adc
cmp
mov
pusha
in
adc
cmc
sbb
js
push
addb
aad
xlat
mov
xchg
sbb
fsubrs
jo
mov
and
cmp
lcall
adc
lea
orl
xlat
and
jb
push
inc
xor
adc
addl
pop
cmpsb
dec
pop
ret
stos
cmp
test
push
in
nop
in
inc
mov
rol
xor
sbb
popa
xchg
mov
adc
js
test
xor
sbbb
xchg
test
sbb
in
jae
loopne
push
inc
xchg
leave
jno
loope
popa
shlb
mov
jb
xor
mov
xlat
or
push
dec
jae
xchg
mov
pop
enter
cmp
pop
rorb
or
and
jle
int3
test
add
in
sub
out
dec
xor
andl
gs
push
aaa
add
mov
jo,pn
mov
test
loopne
iret
enter
aad
testl
xchg
xorl
mov
ret
xchg
js
test
stos
push
sub
inc
push
xor
shlb
or
loopne
push
xor
mov
pop
repz
test
cmp
jb
mull
push
sbb
mov
cs
xor
cmp
dec
dec
sbb
xor
pop
and
test
fsubl
pop
cltd
push
inc
mul
pop
popa
jb
es
add
mov
add
cld
sbb
and
icebp
ret
mov
adc
aaa
in
mov
rep
or
ret
jle
cmpsl
dec
inc
adc
sbbb
inc
lahf
test
dec
dec
add
iret
adc
je
lea
push
or
and
dec
add
decb
or
add
cmp
mov
cmpsw
jno
sarl
fcompl
mov
les
adc
push
repz
rolb
push
push
mov
das
lcall
loope
dec
cmp
xchg
ret
test
mov
add
aas
sbb
fisubl
push
adc
in
xchg
cmp
cmpsb
das
pop
imul
js
scas
and
mov
add
stc
sbb
mov
push
mov
in
pop
lret
out
test
mov
and
cmp
push
xchg
add
lret
sbb
cmp
dec
je
popa
call
out
test
js
and
popa
aad
sbb
les
rcrl
xlat
push
popa
jns
loope
jno
syscall
or
push
cmp
add
cmp
pop
std
rolb
xor
xlat
jno
sub
cmpsb
loopne
add
loop
das
xchg
das
add
jmp
mov
and
add
push
outsb
cmp
sub
sub
pop
xor
mov
push
mov
xlat
loopne
push
add
imul
addr16
cmpsl
pop
scas
arpl
add
and
add
jae
mov
ljmp
sub
jnp
xlat
inc
push
cmp
or
xor
mov
lcall
and
or
add
flds
in
xchg
and
scas
rorl
xchg
mov
xchg
adc
add
mov
cmp
je
test
jo
ret
add
cmp
xor
cmp
dec
adc
ss
cmp
jl
out
es
mov
sbb
add
pop
stos
inc
scas
sub
es
mov
mulb
scas
xlat
pop
jae
xchg
xor
sbb
xor
lods
pop
ja
cmp
inc
and
das
fwait
push
and
inc
sub
rorb
mov
xchg
rcrb
push
mov
pop
test
inc
int
insl
stos
test
jecxz
outsl
sbb
loope
xchg
xor
jno
loop
jl
addb
xor
jp
xchg
sub
push
sarl
addr16
stos
push
shll
and
xor
mov
cwtl
add
adc
add
mov
mov
jle
add
rcrb
or
into
push
in
push
adc
or
rclb
adc
sbb
inc
add
gs
loopne
mov
sub
jo
inc
or
and
outsl
insb
mov
mov
seta
push
push
add
add
and
rcrl
incb
sub
push
fcoml
cmpsl
shl
add
mov
jae
sbb
mov
inc
add
test
push
call
ret
shl
je
nop
push
repz
jo
fiadds
push
cmpsb
lret
mov
js
or
push
sbb
enter
xchg
push
push
pushf
add
xor
mov
jecxz
sbb
sub
mov
cmp
jmp
ret
push
cmp
add
ret
jecxz
push
xor
lcall
inc
nop
xchg
lea
mov
int
jb
xchg
add
dec
pop
and
ret
leave
inc
xchg
push
pusha
jo
imul
pushf
jae
insb
aam
cltd
ret
push
xor
or
int
adc
std
mov
sub
mov
or
fwait
or
and
mov
jb
mov
iret
push
jae
or
xor
int
jnp
xor
inc
loope
pop
dec
cmp
xchg
loope
sbb
stos
and
jne
mov
add
into
out
cmp
push
mov
adc
rolb
push
rclb
bound
sti
mov
mov
and
adc
mov
in
mov
fsub
dec
jne
sub
loope
ljmp
pushf
jmp
icebp
ret
mov
mov
inc
lods
jmp
lret
adc
xchg
rcl
dec
cmp
lret
orb
leave
mov
das
into
jge
push
cltd
dec
cmpsl
or
adc
int
push
push
sub
push
aas
popa
jp
sbb
insl
cmp
test
push
xor
leave
adc
lcall
icebp
jo
pop
scas
cmp
jnp
out
sbb
and
pop
mov
pop
stc
xchg
loop
jae
push
xor
cmp
jae
jo
and
fcoms
rcrl
test
mulb
popa
jo
inc
cwtl
sbb
push
shl
leave
inc
shrb
inc
inc
cs
and
lcall
mov
mov
xor
xor
movsl
mov
xchg
and
xor
lcall
ficoms
mov
inc
testl
or
test
outsb
xchg
and
loopne
insl
pop
int
js
std
js
pop
pop
int
push
and
sub
dec
mov
inc
movsl
cwtl
enter
icebp
in
xor
test
insl
fsubrl
and
stos
sbb
mov
dec
pusha
test
push
cmp
inc
insl
jmp
leave
inc
int
mov
and
xor
rcll
stos
pop
scas
lret
adc
mov
adc
subb
out
and
xchg
loope
cmp
outsl
dec
ds
add
insb
sarl
xchg
xor
add
sub
push
aam
sbb
into
jno
or
xchg
jb
cltd
fidivl
popa
mov
cs
push
adc
or
push
das
dec
inc
jae
les
in
je
lea
jg
cmp
mov
pop
push
sub
ds
in
adc
fsubrl
ljmp
mov
dec
loope
in
lahf
pop
in
leave
push
hlt
push
xchg
shlb
and
nop
mov
mov
push
dec
push
cmp
inc
andl
xchg
into
inc
add
outsl
inc
xchg
push
add
call
inc
mov
hlt
adc
push
pushf
jo
mov
cmp
out
pop
sub
or
and
ret
ljmp
call
mov
inc
xchg
ret
push
and
and
into
adc
or
mov
int3
shll
pusha
push
aas
ljmp
les
fs
aad
pusha
and
les
shrl
sbb
loope
and
xlat
and
pop
xchg
mov
invd
mov
mov
into
xor
xchg
xor
sub
orl
rolb
pop
cmp
sub
cmp
adc
jae
popa
je
out
push
inc
cwtl
xor
lcall
jb
es
movsl
lret
pusha
and
test
mov
sub
push
inc
adc
loopne
adc
fadds
out
xor
fmul
and
sub
push
sub
or
test
jo
inc
in
push
xor
out
push
cmpsl
pop
fidivrl
push
adc
nop
ret
fimuls
push
mov
jno
jle
out
sbb
mov
mov
push
mov
jle
sub
add
dec
pop
div
fists
or
fisubrs
int
xor
mov
fisubrs
mov
pop
xor
sti
add
ret
xchg
int
cltd
movsl
testb
inc
or
or
dec
push
and
cld
cmc
inc
icebp
mov
mov
stc
loop
pop
push
movl
das
lcall
cmp
mov
lds
cs
movsl
aam
test
fucomip
and
push
cltd
ret
jo
pop
push
ret
je
mov
nop
lcall
repz
jnp
ja
or
push
stos
add
inc
xor
push
adc
loop
dec
js
mov
daa
jb
add
test
jb
test
dec
sbb
inc
xchg
xchg
enter
pop
hlt
aas
je
icebp
sbb
into
mov
jle
pop
push
ljmp
pusha
adc
cmp
add
jnp
adc
push
xor
xchg
mov
jp
add
xchg
pop
jno
loop
xchg
jae
cwtl
or
sbb
aas
push
xchg
mov
outsb
adc
or
in
or
inc
xor
cwtl
loop
xor
pop
scas
xor
cmp
sub
subps
cmp
push
fsubrl
add
in
dec
es
inc
mov
lret
inc
mov
ret
ljmp
enter
or
cltd
dec
test
xlat
add
or
xor
add
push
sub
mov
jg
or
mov
shl
or
sbb
push
push
fs
sbb
add
xor
or
cs
add
in
add
pop
xor
jno
xlat
inc
jmp
xlat
outsb
nop
mov
rcll
out
lret
add
lods
rolb
add
icebp
add
and
inc
stos
inc
out
or
enter
cmp
dec
inc
cmp
ljmp
cmc
push
xlat
pop
jnp
sahf
aas
enter
enter
outsb
xchg
or
cmp
add
or
mov
mov
stc
mov
inc
loop
push
mov
cwtl
jbe
and
cmp
adc
cmpsb
dec
lfs
and
pop
sub
pop
rorl
in
rorb
fs
mov
inc
inc
mov
or
popf
xor
movsl
mov
int3
cmp
cs
push
dec
enter
mov
cmp
add
inc
cltd
js
and
mov
jo
xchg
test
sub
in
addr16
ret
cltd
dec
xchg
and
sti
and
adc
stos
ljmp
cmpsb
out
and
pop
jnp
out
loope
rcl
jg
fistl
cmp
push
das
lcall
mov
jae
enter
xor
inc
adc
jne
jle
xchg
add
pop
xor
enter
cltd
loopne
mov
xor
hlt
cltd
das
xlat
or
pusha
jno
repnz
push
or
add
xor
xchg
push
cmp
cmp
rcll
pushf
or
ret
cmp
xor
sub
jo
andb
insb
push
ret
cmpsl
lock
or
mov
mov
sub
cmp
popa
jb
test
push
add
ljmp
push
cs
adc
pop
scas
sbb
xorb
lret
mov
test
inc
cmp
jecxz
xchg
or
les
aaa
mov
popf
clc
out
mov
cmp
xchg
pop
movsb
test
imul
xor
push
lea
add
stos
cwtl
dec
push
orl
test
mov
fistps
jae
xor
mov
adc
lahf
inc
pusha
xor
push
pop
fistpll
sub
cmp
or
stos
mov
cmp
and
dec
mov
push
fstps
cmpsb
std
mov
jg
std
ret
sub
inc
icebp
sbb
sub
nop
xchg
mov
push
push
movl
jecxz
cmpb
jno
xor
cmc
push
and
mov
lahf
jne
cmp
inc
and
push
jo
jae
mov
mov
sbb
adc
enter
stos
cmp
push
pushf
mov
or
add
icebp
push
dec
cmp
inc
xor
stos
jae
and
jge
adc
mov
popf
jo
addb
push
andl
or
pop
js
lcall
orl
stos
and
mov
sub
xchg
mov
sbb
inc
add
pop
mov
jno
adc
push
pop
xchg
jb
push
es
cmp
dec
addl
notl
xchg
adc
dec
add
cmp
cmpsb
push
fdiv
pop
and
lds
add
nop
add
rorl
stos
and
sarl
xor
and
add
js
jo
iret
lahf
out
sbb
add
mov
test
xor
push
iret
inc
and
xlat
pop
aad
in
inc
inc
mov
mov
int
sub
mov
inc
inc
adc
mov
sub
push
out
jge
inc
stos
dec
or
fistpll
jb
xchg
rcrl
movb
or
adc
negl
mov
adc
mov
fs
cli
data16
addr16
jae
test
add
push
mov
mov
in
xor
pop
inc
repnz
sbb
inc
addb
icebp
sub
mov
call
movl
call
cli
int3
pop
out
mov
fdivl
lea
push
loopne
cmp
adc
add
adcb
and
aad
test
ret
inc
loopne
in
adc
cmp
push
xor
jb
jns
sub
test
pop
add
push
sub
inc
das
gs
mov
orl
inc
ja
popf
adc
and
push
add
lahf
dec
arpl
call
ret
sbb
inc
test
mov
sbb
xchg
in
push
push
mov
pushf
and
sbb
add
cmp
push
add
repnz
xorb
sbb
mov
js
rcrb
int
lret
sti
jnp
jo
jo
dec
jno
and
scas
jo
lcall
nop
sahf
jle
mov
pushf
pop
xchg
sbb
sbb
inc
cmp
xor
xchg
jnp
sub
xchg
add
sbbl
cmpsl
pop
push
sbb
cmp
out
icebp
add
enter
cmc
ret
addl
out
popa
rclb
sti
daa
cmpsb
ret
cs
stos
pushf
add
lcall
cmpsb
lcall
jo
push
pop
sub
add
jmp
cmp
andl
lahf
stc
lea
or
push
xchg
sub
bndldx
idivl
and
fsubrs
cltd
jae
pushf
rcll
xchg
jge
add
inc
ss
leave
cmp
push
sub
loopne
je
shlb
lcall
and
adc
cmp
add
imul
lock
sbb
push
mov
sub
xor
push
sbb
fs
sbb
cmp
sahf
cmpsb
sub
sub
cli
sarb
or
jns
test
sub
mov
inc
sbb
mov
push
aad
clc
mov
add
pop
aas
mov
inc
or
ret
add
outsb
push
pop
push
aad
sbb
or
push
sti
lret
add
dec
inc
rcll
mov
add
inc
jnp
lcall
fsubl
data16
mov
mov
mov
enter
or
add
lea
into
pusha
iret
shlb
add
jle
sub
orl
decl
mov
lret
je
sub
jo
xor
ss
subb
add
add
ret
or
in
sbb
mov
or
inc
orb
in
push
test
push
add
aaa
mov
loop
out
out
jb
cmp
aam
cmpsb
ljmp
mov
and
test
call
xor
adc
push
mov
push
es
xchg
stos
iret
leave
xor
xor
test
push
in
jne
lcall
test
ret
addb
insb
ret
das
aad
fs
cs
test
into
dec
enter
jge
pop
sbb
test
adc
or
push
cs
shlb
xchg
rorl
push
enter
sub
dec
inc
and
pop
dec
subb
xor
stos
push
dec
cltd
add
jnp
mov
pop
lret
and
jle
push
add
xchg
pop
jg
cmp
add
subb
push
imul
push
scas
push
adc
add
xchg
ljmp
mov
sarl
cmpsb
in
sbb
verr
test
inc
add
xlat
dec
mov
loopne
loope
lret
dec
in
cmp
les
sub
addr16
ret
lds
dec
clc
ja
cltd
or
and
into
clc
cs
pop
pop
xchg
je
dec
test
lret
inc
sbb
push
cmp
xlat
jne
xor
adcb
dec
adc
fxch
sbb
test
push
adc
scas
mov
imul
and
scas
retw
in
shll
js
aad
fisttpll
dec
push
pushf
daa
rol
pusha
loopne
aaa
out
mov
push
mov
enter
mov
or
gs
and
and
pushf
mov
shl
in
add
aad
test
xor
lcall
ds
jbe
dec
cmp
call
dec
bound
adc
in
inc
rorl
xchg
aaa
jp
jo
add
push
popa
jb
add
xor
data16
mov
int3
ficoml
add
xchg
xorb
lret
xor
popa
rclb
xor
dec
add
test
sbb
and
inc
insl
push
pop
sub
in
or
jecxz
loopne
mov
mov
sub
xchg
push
or
add
adc
jno
xchg
js
inc
and
xchg
xchg
push
dec
push
stos
sbb
xchg
loope
jp
nop
mov
sbb
pop
jbe
dec
and
loopne
jno
push
and
test
xchg
sbb
pop
movsb
fisubrs
push
mov
dec
inc
inc
cmp
iret
sbb
sar
push
test
xchg
rcll
cmpsb
push
scas
sbb
mov
enter
adc
orl
mov
or
int
mov
test
xchg
enter
mov
cmp
xor
add
adc
inc
mov
mov
or
into
or
push
sbb
popa
stos
inc
pop
cmp
insb
inc
push
jb
cmp
std
mov
add
dec
mov
in
sbb
cmpsb
loopne
ds
dec
push
jo
adc
jae
flds
ret
jo
push
or
inc
lea
jae
or
lret
stc
or
add
xor
sub
xor
mov
ret
xchg
jo
test
pusha
orl
push
lds
pusha
cmp
test
ret
in
adc
mov
pop
adc
stos
sbb
jl
shlb
push
xor
mov
xor
leave
jle
rcll
push
xchg
or
dec
push
andb
xchg
jo
rolb
stos
sbb
mov
pop
daa
sbb
cmpsl
sub
ret
loope
push
sub
xchg
push
loope
inc
sbb
push
xor
push
loope
loop
sub
and
rcrl
test
push
inc
xchg
or
push
into
loope
sbb
cmp
pop
mov
mov
sbb
pop
rolb
pop
xor
jo
pop
adc
dec
sub
xchg
loope
popl
filds
cs
icebp
addb
inc
xorb
push
push
test
sbb
popf
mov
into
add
jns
cs
inc
xchg
imul
push
subb
negb
adc
aam
pop
dec
adc
mov
loope
add
mov
shll
sarb
push
xchg
loope
daa
jmp
lret
cmp
nop
lea
push
hlt
fcmovbe
data16
push
lret
clc
xchg
add
rcrb
mov
sbb
test
push
dec
push
jns
es
ljmp
cld
out
rclb
mov
aam
cmp
sbb
call
lods
out
push
daa
int
mov
inc
das
movsl
aas
sarb
add
test
add
cmc
add
mov
push
or
push
mov
sbb
cmp
out
cmp
fiaddl
sbb
xor
enter
lahf
push
scas
add
adc
sbb
test
enter
andb
addr16
adc
mov
push
or
add
dec
sbb
std
pop
sub
mov
jo
mov
xchg
and
xchg
or
adc
sub
adc
ror
adc
jl
cmp
push
paddb
lock
test
push
xchg
or
add
js,pn
or
pop
sub
xor
in
aam
xlat
mov
test
pop
roll
popa
add
data16
insb
xor
lcall
leave
add
inc
pop
int3
pop
imul
push
pop
xor
ret
add
cmp
outsb
cmp
or
or
lock
inc
lahf
xorl
jne
cmp
dec
gs
je
out
push
or
adc
mov
add
sub
test
mov
ljmp
jle
sub
sbb
xchg
xor
addr16
and
cmp
cmp
or
pop
inc
add
jge
adc
enter
xchg
stos
push
jo
call
pusha
add
cmp
in
xchg
pop
aam
dec
xchg
xor
xchg
imulb
add
sti
cmp
or
push
enter
and
jbe
sub
xlat
out
rorb
sub
insl
cmpb
and
sub
cmp
shlb
inc
stos
jb
inc
shrb
in
popa
std
lock
inc
inc
xchg
dec
push
mov
push
out
outsl
stos
push
add
mov
je
rclb
xchg
xor
adcb
ljmp
je
push
mov
sub
push
push
gs
or
cmp
jb
xchg
loopne
mov
or
mov
ficoms
in
das
std
pop
clc
shrb
push
fdivr
push
push
add
scas
add
stos
inc
lcall
cwtl
movb
mov
sub
stc
jle
pop
cmpsb
and
sub
mov
inc
out
pop
lahf
add
addl
jp
enter
adc
jo
pop
add
lea
dec
cmp
pavgb
and
clc
lcall
adc
dec
xchg
cmpl
xor
inc
and
add
inc
test
xchg
dec
dec
shlb
sub
xor
cmp
jb
xor
in
repz
sub
adc
mov
push
loope
nop
jecxz
in
out
push
and
sbb
adcl
inc
pop
loopne
push
sub
aam
adc
pop
in
xchg
cmp
sbb
and
and
push
add
sub
imul
mov
out
in
pop
adc
lds
dec
jecxz
add
stos
jle
stos
xchg
lret
push
in
push
imul
loop
je
nop
sub
add
push
loope
psrlq
inc
es
test
add
push
test
cmp
pushw
push
xorb
add
push
mov
push
sbb
inc
inc
jno
or
add
negl
adc
hlt
cmpsb
add
xchg
and
and
sbb
push
orl
sub
push
add
xor
shl
lds
enter
jno
outsb
xorl
xorb
stc
dec
dec
shll
push
imul
pop
adc
jp
and
mov
or
lret
mov
inc
je
sbb
gs
dec
add
popf
and
inc
aad
enter
test
lea
mov
int
mov
outsb
mov
jp
lods
jmp
push
adc
mov
sub
push
mov
sbb
add
and
pushf
rcrb
xchg
inc
or
jp
xor
repnz
mov
sbb
out
cld
test
out
cld
pop
aam
insl
cmc
or
sbb
out
inc
sbb
gs
mov
sbb
out
ret
add
rcrb
fstl
add
enter
sbb
inc
inc
loope
loope
les
xor
add
or
add
lret
out
push
repz
pop
in
xchg
or
jle
jecxz
add
and
sbb
or
mov
cmp
enter
in
in
ss
or
subl
adcl
ret
test
dec
mov
and
jmp
int
sti
ja
or
test
sbb
jb
xor
push
mov
loopne
inc
leave
add
mov
pusha
cmpsb
mov
pop
movb
jo
lret
or
inc
loope
push
adc
sub
rolb
and
lret
xchg
rcll
int
adc
inc
inc
xor
jb
sub
add
jne
icebp
clc
sarb
lods
lea
and
adc
push
mov
push
loop
sbb
xor
enter
test
aad
push
cmpsl
in
sbb
inc
xchg
addr16
inc
sbb
test
ja
into
rolb
adc
add
test
xlat
es
lret
sub
mov
or
stos
xchg
test
cmp
adc
mov
jae
out
cmp
in
adc
test
adc
push
cmpsb
out
mov
pusha
push
add
mov
icebp
outsl
out
add
out
shll
loop
xchg
sbb
inc
sbb
gs
loopne
jo
pop
jae
xchg
jno
test
or
push
or
data16
stos
lea
call
mov
loopne
leave
xor
xor
mov
arpl
sub
and
xor
dec
add
lcall
mov
add
pop
push
inc
dec
mov
pop
je
leave
xchg
add
or
xor
popa
je
dec
sbb
outsl
xchg
inc
add
mov
loopne
push
inc
cwtl
and
pop
mov
stos
add
addb
push
dec
lock
orb
mov
xor
mov
mov
icebp
adc
push
cmp
es
pusha
or
sti
dec
scas
test
and
xchg
bound
xor
enter
rolb
aaa
or
pop
in
jb
pop
cmpsb
inc
cmp
movsb
adc
inc
jl
insb
or
sub
mov
xor
pop
adc
push
test
cmp
mov
xor
lcall
or
cmp
ret
mov
jo
pop
mov
inc
or
sbb
add
inc
push
lcall
dec
xchg
add
cmp
add
xchg
ljmp
in
and
mov
enter
xchg
jbe
dec
xchg
push
xchg
jae
mov
pop
push
xor
sbb
ss
sti
push
faddl
mov
pop
mov
jae
xor
les
ret
adc
dec
into
add
ljmp
sub
push
pop
jb
or
and
or
bound
loop
xor
vmptrld
pop
inc
movsl
movb
mov
mov
arpl
orl
fwait
cltd
loop
or
or
push
mov
mov
and
add
add
bound
mov
sarl
je
les
cmp
sbb
and
and
adc
xlat
jo
cmpsl
inc
dec
pop
adc
or
mov
sub
push
add
cs
cmpsl
adc
lret
mov
add
or
adc
lds
or
cmc
outsl
or
jmp
mov
gs
rcrb
push
mov
test
sub
mov
rcrb
jns
cmpsl
sbb
add
push
dec
mov
mov
push
adc
ret
arpl
fists
cmp
and
mov
inc
cmpsl
adc
adc
cld
mov
decl
mov
fdivr
sub
sahf
or
int3
mov
shlb
mov
dec
int
mov
fistl
lods
pop
out
jecxz
sub
dec
xor
xor
loopne
cmp
sub
gs
orb
stos
pop
shrb
add
mull
add
jnp
dec
shlb
push
enter
push
add
xor
push
sbb
sbb
stos
pop
inc
xor
negl
lcall
adc
sub
push
in
dec
aam
adc
adc
dec
push
andl
add
sbb
mov
lods
xchg
inc
icebp
push
in
test
dec
test
jmp
push
movsl
add
sub
add
ljmp
jo
mov
xor
pusha
dec
push
lea
mov
mov
jae
mov
add
jge
enter
mov
cltd
mov
mov
daa
cmp
popa
xor
mov
add
xchg
xchg
roll
cmp
pop
or
xorl
loopne
aad
leave
sbb
jb
popa
aas
or
addl
out
lahf
xor
xchg
sbb
mov
orl
dec
popa
push
roll
testl
movsl
pop
neg
mov
cmpsb
out
adc
mov
push
out
fimull
push
mov
aas
push
aam
imul
push
jo
mov
shrb
or
loope
fs
and
test
cmp
in
sbb
sub
test
add
jg
cli
stos
sub
nop
mov
cmp
xchg
repz
sbb
push
aam
or
and
adc
loop
pop
add
adc
mov
add
outsl
ss
dec
pop
testb
pushf
xor
push
cmp
jecxz
mov
lret
pop
mov
push
mov
popa
cmpsl
scas
xchg
or
pop
mov
add
xor
ret
pushf
pop
lods
lcall
jae
push
mov
jb
pop
shl
xchg
jmp
data16
push
push
and
add
cwtl
addl
int
sub
je
pop
add
inc
negb
dec
dec
aam
test
adc
and
enter
loopne
add
cmp
sub
fistl
popf
test
mov
and
mov
jle
loop
sub
jb
inc
in
out
dec
lock
fmull
xchg
push
push
shlb
sub
or
add
dec
inc
add
push
mov
cmp
enter
mov
mov
nop
ja
das
test
sbb
adc
ljmp
sbb
inc
cmpsl
fsubrl
adcb
xchg
mov
test
pushf
mov
cmp
mov
ljmp
and
or
jo
pushf
dec
sbb
push
add
sbb
leave
add
inc
add
xchg
inc
in
sub
push
jb
and
xor
mov
push
gs
push
and
jno
push
push
js
shrb
add
sub
test
mulb
mov
mov
or
mov
dec
xor
inc
adc
rolb
and
decb
mov
nop
mov
out
je
insl
mov
sbb
rcl
aam
out
cmpsb
push
sub
insb
push
push
ret
outsb
push
cs
add
push
and
scas
mov
cli
sub
enter
enter
ret
shll
scas
jp
add
add
dec
shlb
pop
inc
imul
xorb
pop
in
fisubs
push
lods
hlt
pop
lret
enter
cmp
or
adc
add
mov
adc
push
pop
or
popf
test
test
xchg
jne
jo
push
popf
aaa
xchg
insl
mov
orl
sub
jp
add
add
cwtl
and
mov
xchg
rcrb
loopne
lock
cmc
push
out
rorb
dec
inc
adc
adc
sbb
cwtl
adc
and
add
push
xchg
push
dec
aam
lods
out
xor
inc
adc
imull
and
adc
and
cmpsb
or
push
mov
xor
pop
xor
pop
push
ror
fs
push
mov
add
ljmp
in
loope
nop
sarl
dec
push
and
sbb
into
or
adc
and
push
ljmp
inc
subl
xor
daa
rcl
dec
test
xchg
mov
hlt
xor
les
jae
push
sbb
in
lcall
add
and
subb
fcmovnb
sbb
pop
dec
stc
popa
lret
outsl
fstpt
sub
leave
sbb
andb
mov
ja
pusha
nop
inc
push
pop
xchg
nop
xorb
sbb
rol
xor
xor
js
movsb
filds
xor
or
pop
and
and
test
mov
flds
xchg
fs
dec
stc
lock
sub
cmc
sub
cmp
pop
jae
jo
inc
xor
xchg
jae
inc
sbb
dec
adc
cltd
cs
push
out
js
loop
sbb
xor
xor
dec
aas
lret
fs
pop
xlat
pop
std
adc
cmpsl
pop
xchg
arpl
es
cmp
pop
jmp
cmc
cmc
mul
jns
divb
pop
dec
es
adc
push
pop
pop
rorl
lods
sub
add
mov
inc
loopne
jbe
pop
push
sbb
add
rolb
lock
loopne
mov
nop
rol
jl
cmp
pop
xchg
push
cmp
mov
insl
ljmp
es
loopne
subb
fwait
jo
pop
push
inc
cmp
sbb
cmpsl
jge
ficoml
adc
cmpsb
xor
push
aad
adc
push
stos
xor
lds
jp
inc
out
jle
call
adcl
mov
and
test
popl
inc
pop
aaa
lcall
imul
stos
sbb
cmpb
sbb
or
ret
test
xor
jo
xlat
jle
pop
lret
int
push
xor
adc
test
daa
push
addr16
jp
xchg
push
adc
push
scas
pop
sub
imul
and
push
adc
jo
pop
and
or
cmpsb
mov
inc
cmp
mov
inc
xor
push
or
rcrl
adcb
pop
push
lahf
pop
je
and
mov
xchg
add
lret
movsl
js
add
jle
jnp
add
xor
gs
mov
aaa
push
shrb
in
adc
sbb
xchg
loop
mov
lcall
cmpb
mov
test
pop
add
dec
mov
imul
sti
test
dec
rolb
mov
es
mov
testb
jb
adcl
adc
sbb
sbb
aad
add
pop
sysexit
xor
add
jle
jae
subb
cs
aas
mov
mov
push
jnp
jb
mov
push
push
push
in
dec
xor
xchg
jp
pop
es
notb
jb
es
lods
jp
adcb
xor
push
push
fisttpll
outsl
mov
daa
pop
es
lods
dec
push
xchg
mov
shll
sub
jmp
lock
or
cltd
js
out
and
pop
imul
push
fimuls
cs
fwait
cmp
dec
in
cmp
cmpsb
fdiv
rcrl
ret
sub
shll
push
icebp
add
sbb
xchg
inc
je
cmpb
aad
adc
lcall
cmp
inc
lds
add
adcb
jae
xchg
jnp
pop
pusha
adc
test
inc
mov
int3
push
js
xchg
or
pop
jb
ret
add
loop,pt
ficoms
enterw
and
or
add
push
add
xchg
xor
mov
xchg
lcall
sbb
push
push
pushf
cmpsb
mov
jle
jo
inc
push
cld
daa
insb
mov
enter
sahf
pusha
lcall
out
push
cmp
mov
rorb
pusha
jp
insl
mov
cltd
lret
xchg
imul
lfs
rorb
cli
push
xchg
sub
add
cmp
gs
and
inc
xchg
mov
cmp
mov
push
fisubrs
inc
add
in
mov
mov
jo
std
xchg
pop
add
sbb
es
and
xor
cmp
nop
pop
inc
xor
out
into
ret
out
lcallw
in
or
add
cmp
mov
out
pop
icebp
or
inc
xor
scas
loopne
sbb
xorl
pop
in
fwait
jne
adc
add
lret
ss
loop
push
jne
inc
pop
push
jmp
loopne
or
cmc
out
insb
push
push
roll
sbb
jno
jo
enter
push
inc
adc
lods
mov
push
inc
push
inc
and
adc
inc
push
movsl
mov
jp
jno
ret
add
mov
and
add
cmp
and
jmp
pop
adc
adc
add
push
pop
int
xchg
and
push
or
add
xor
pop
mov
lret
jne
pop
rol
sti
push
adc
enter
xchg
sub
es
test
lret
sbb
or
call
sub
fwait
push
mov
test
jo
xor
int
or
pop
xchg
push
and
rclb
scas
sbb
subb
cmp
ret
dec
lock
mov
ret
xchg
pop
jne
dec
into
nop
mov
or
push
add
push
lea
in
or
cmp
push
jo
sub
pusha
addb
call
call
mov
mov
and
xor
repz
inc
lock
cmp
or
add
imul
or
inc
lcall
jbe
dec
or
xchg
sub
jge
into
adc
and
or
cmp
cwtl
pop
pop
dec
mov
cmpsl
movsb
adc
rcrb
pop
adc
mov
fstpl
daa
push
icebp
roll
mov
adc
sbb
js
or
outsb
sub
loop
adc
pop
or
paddusb
incl
stos
jge
cmp
and
dec
cmc
sbb
ret
mov
sbb
add
xchg
lret
adc
in
call
push
xchg
or
xchg
les
mov
mov
add
fisubrs
lcall
cmp
add
or
pusha
out
inc
stos
or
jle
and
shlb
jmp
loope
add
mov
stos
push
jo
fsubr
and
je
call
icebp
dec
mov
pop
test
pop
cmp
test
ret
pop
push
inc
xchg
xor
or
inc
xchg
or
jo
mov
xchg
lock
pop
jecxz
push
cwtl
or
cmp
jle
outsb
sub
xor
in
cmp
inc
push
or
add
push
jnp
sbb
movsb
pop
adc
sbb
add
jmp
adc
add
mov
popf
lods
fisubl
fisubrl
and
push
js
mov
not
rorb
stos
push
sbb
add
add
scas
sbb
adc
scas
pop
stos
lret
add
adc
jo
push
test
mov
in
scas
aam
push
cmc
mov
pusha
mov
lds
jne
fs
nop
loop
out
or
sbb
pop
rclb
jmp
and
icebp
int
adc
pop
and
sbb
mov
sub
xor
cltd
sarl
dec
mov
cmp
or
pop
out
push
movsb
fwait
jae
mov
push
sub
inc
movsb
bound
jle
sub
stos
push
int
cmp
xchg
fsubs
sbbl
in
and
incl
sub
inc
insb
loopne
inc
dec
and
testl
enter
cwtl
add
adc
and
or
in
inc
pusha
push
add
gs
repz
cmp
push
lret
mov
pop
push
cmp
or
test
dec
stos
ret
and
jecxz
push
fcompl
rcrb
cmc
sbb
lret
in
jno
rcr
jg
add
add
inc
mov
dec
xor
dec
sbb
pop
int
out
xor
add
les
xchg
out
dec
add
iret
push
xor
push
lea
inc
mov
cmpb
lea
pusha
ret
lcall
outsb
xor
push
ret
iret
sbb
xchg
add
mov
test
bound
inc
lds
ret
shr
shrl
xchg
xchg
sub
out
mov
in
push
jl
and
xchg
sti
fs
and
mov
test
ss
aam
aas
push
or
cmpsl
pop
mov
sub
push
outsb
ret
pop
sub
add
ret
add
xlat
jne
sbb
cltd
add
push
es
xor
add
sbb
cmpsb
inc
jp
cmpsb
add
and
sbb
rcll
mov
push
test
add
push
xchg
jnp
add
lret
add
mov
pop
adc
xlat
dec
inc
push
or
stos
pmulhw
shlb
mov
jae
cmp
jge
xor
inc
cmp
xor
xchg
push
xchg
mov
pop
aad
cwtl
mov
pop
data16
cmp
jecxz
pop
xor
dec
scas
pop
sbb
daa
shlb
or
push
mov
out
iret
and
add
and
std
cmp
pop
int
or
stos
sub
pop
dec
sub
adc
je
add
mov
xor
aaa
push
and
jo
loope
or
pop
jno
dec
andb
push
arpl
jae
jo
add
mov
enter
push
sub
mov
lret
jp
mov
in
sahf
test
in
cmc
dec
sbb
and
push
pop
add
adc
and
sub
rorl
test
loopne
mov
popa
rolb
and
jmp
in
stos
sbb
push
ror
lock
push
sbb
mov
or
pushf
leave
movsb
addb
mov
dec
sbb
sub
adc
add
leave
popa
jb
out
xor
fstpt
push
sbb
icebp
faddl
dec
xor
or
xchg
dec
push
dec
loopne
into
pop
and
pop
cltd
je
jp
jb
loopne
inc
pushf
ret
push
pushf
sub
int
inc
in
cmp
xchg
jmp
push
push
pop
cs
xchg
test
pushf
or
xor
pusha
orb
mov
push
enter
cld
xlat
xchg
xchg
mov
mov
stos
push
inc
fs
stc
jbe
xchg
jae
icebp
leave
inc
cmpb
cltd
daa
add
mov
pop
addr16
jmp
sub
mov
jae
and
add
out
scas
inc
nop
jns
scas
ljmp
enter
mov
aam
mov
scas
cmp
adc
enter
sub
call
adc
cltd
push
sub
adc
das
mov
push
cmp
and
xchg
xor
repz
flds
std
xor
test
push
dec
add
dec
test
out
repnz
pushf
jb
push
xor
fiadds
cmp
notb
filds
lds
cmp
sub
sub
loope
lock
mov
adc
addb
sub
sbb
adcb
test
push
cmp
nop
pop
fwait
cmp
pop
xchg
lods
stc
pusha
push
pop
mov
mov
ret
fisttpll
mov
test
and
push
xchg
pop
gs
mov
jne
lcall
adc
jo
add
adc
sbb
or
scas
push
sub
mov
mov
push
enter
in
shll
fistl
int
loop
ljmp
das
cmp
addr16
inc
sahf
andb
xchg
addr16
enter
subb
pop
push
and
sbb
cmp
sti
dec
xorb
xor
sub
jae
popa
push
lods
icebp
sbb
adc
inc
out
mov
adc
dec
ds
loop
loop
mov
push
add
nop
push
cmp
std
sbb
mov
stc
ret
enter
lcall
dec
stos
jo
jo
das
mov
jne
and
loope
adc
and
dec
cwtl
jo
test
jno
sbb
lds
inc
int
test
xor
cmp
movsb
int
and
loop
in
xor
outsl
mov
stos
lea
inc
std
fwait
add
enter
jle
push
push
pushl
rcrb
nop
sub
idiv
inc
cmp
pop
shll
mov
xchg
sahf
addl
sbb
add
iret
jnp
push
push
das
add
popf
mov
dec
inc
test
mov
xlat
or
inc
jle
mov
and
adc
jg
and
mov
and
lock
in
xor
add
sti
dec
popa
mov
gs
fimull
or
dec
les
inc
sbb
adc
and
test
ljmp
mov
enter
sbb
pop
cmpsb
sbb
and
sahf
push
insb
mov
push
sbb
es
loopne
xchg
leave
lods
nop
pushf
pop
sbb
inc
sti
ds
cwtl
mov
shlb
test
inc
scas
dec
test
stos
and
lea
sbbl
sbb
mov
or
dec
push
popa
push
and
repnz
pop
ret
mov
int
aaa
aad
sub
jbe
aas
dec
xor
sub
or
cmpsb
jo
in
add
inc
and
push
in
fs
xchg
or
mov
push
rorb
scas
pop
xchg
mov
or
ljmp
das
nop
xchg
add
ja
pop
mov
jnp
inc
jnp
icebp
push
mov
xchg
mov
loopnew
enter
push
int
or
dec
push
and
sub
push
push
cmp
fisubrl
ljmp
gs
out
mov
hlt
rcrb
lea
lcall
jo
loopne
jg
mov
enter
imul
add
insb
dec
into
test
xor
add
aad
sub
mov
cld
pop
xor
xor
out
cld
dec
cmp
push
add
xchg
orl
inc
test
inc
insb
jns
xor
add
mov
inc
imul
mov
enter
aam
outsb
jno
enter
jne
jo,pn
dec
xchg
cmp
inc
adc
add
and
xchg
rcrb
rcll
sub
testl
jns
popa
push
push
jne
adc
rorl
and
adc
sbb
sbb
mov
imul
mov
pop
xor
adc
jb
adc
jb
push
jnp
xchg
mov
fs
daa
or
addb
subb
add
inc
push
pop
test
or
jns
push
pop
test
and
bound
dec
adc
mov
pop
not
imul
pop
sub
dec
es
mov
pop
xor
mov
outsb
repz
inc
stos
divb
pop
out
adc
addl
cltd
lahf
mov
or
xchg
jge
popf
jo
lods
aaa
add
jb
sbb
sub
fbstp
cmp
loopne
and
push
daa
sub
hlt
outsl
push
in
leave
xor
sub
sbb
fwait
cmp
push
test
sbb
insb
ret
scas
leave
gs
daa
push
xor
pop
pop
jl
xchg
cmp
ja
mov
add
jo
add
out
xor
ss
add
adc
pop
test
lret
cmpsl
mov
push
xor
add
stos
stos
push
push
xor
fxtract
xor
or
loope
imul
int
pop
push
lock
jp
rcl
adc
push
adc
setns
xchg
loope
xor
mov
inc
mov
mov
popa
adc
mov
mov
push
cmpsb
fiaddl
data16
in
dec
insb
adc
xor
or
andb
cmp
cmp
sbb
or
sub
ljmp
inc
loopne
mov
lea
xchg
test
scas
push
inc
cld
fwait
cmc
xchg
mov
subb
nop
sub
lea
cltd
dec
push
cwtl
or
and
adc
stos
jo
addl
pop
fidivl
sub
mov
cs
out
mov
sbb
in
or
cltd
and
xor
pop
in
pop
dec
mov
stos
add
add
ret
and
xor
test
and
xor
loopne
jle
aam
pop
push
rorb
sbb
jns
sub
loop
inc
in
push
sub
pop
roll
inc
loope
outsl
test
mov
sar
aaa
cmp
sti
dec
orl
pop
pop
xchg
push
mov
es
jecxz
jge
xor
jle
adc
and
push
push
cmc
pop
mov
lea
cmp
push
dec
sbb
pusha
xor
adc
ret
cmp
sbb
and
gs
add
xchg
int
mov
xchg
add
or
test
sbb
pop
add
roll
scas
push
cmp
dec
or
hlt
enter
cmp
or
mov
hlt
sub
add
push
sbb
rcll
pop
shll
add
repnz
out
cmp
and
test
push
or
jne
nop
jmp
jb
jo
or
xorb
loop
sbb
test
jo
mov
push
mov
adc
jo
out
aaa
inc
in
push
dec
mov
xor
popa
lret
gs
mov
push
xlat
xor
xchg
gs
out
and
inc
jg
push
int
xchg
call
lret
adc
aad
inc
adc
movsb
xorb
call
adc
pop
mov
inc
lcall
mov
inc
cmpsb
aam
ss
int3
mov
pop
mov
and
pop
pop
push
mov
jle
cltd
mov
or
jp
stos
outsl
add
xor
mov
push
and
jnp
addl
sbb
jmp
aas
addl
es
lahf
int
xchg
nop
lret
adc
sub
out
pop
mov
push
push
rolb
push
xor
adc
jge
loope
xorb
fbld
adc
push
in
ja
inc
pushf
jb
sbb
cmc
sbb
lcall
adc
std
jmp
lock
aaa
and
inc
fs
inc
and
inc
pusha
mov
int3
jle
daa
inc
lds
sbb
mov
adc
adc
popa
js
inc
in
enter
jo
lods
imul
rcrl
inc
mov
loopne
mov
and
ljmp
adc
cli
cmp
dec
jo
in
inc
jl
push
aad
in
loope
mov
inc
push
testl
jae
sbb
adc
jecxz
popa
ret
pop
int3
or
mov
test
inc
scas
xor
sub
pop
out
add
cmp
mov
mov
enter
adc
inc
shrb
mov
cmp
aaa
loope
cli
jmp
push
cmp
loopne
sbb
in
loope
faddl
jmp
stc
sti
dec
push
and
push
mov
or
addb
sbb
mov
push
mov
dec
add
adc
mov
aad
mov
sbb
loop
jae
scas
xchg
push
iret
pop
aam
and
push
js
push
sbb
sarl
mov
out
jecxz
hlt
in
lcall
push
push
xchg
cmp
mov
fsubr
or
imul
adc
mov
mov
insb
push
rcrb
xchg
add
daa
out
mov
cwtl
sbb
ficoml
push
shll
lret
xchg
cmp
mov
ss
scas
inc
xchg
sub
in
inc
nop
mov
pop
jmp
cmc
mov
xorl
push
hlt
ror
sbb
pushf
sub
dec
cltd
mov
test
jb
sbb
xchg
lcall
ds
test
add
inc
iret
gs
lea
cmp
es
xchg
cmc
sub
sbb
cld
testl
dec
nop
sub
jl
cmpsl
lcall
dec
push
cmpsb
pop
inc
pop
pop
rorl
mov
or
push
add
lret
inc
lret
lea
push
jne
adc
in
es
cmp
add
jo
sub
jnp
jno
in
test
xchg
fnstenv
cmp
cmp
loop
mov
out
mov
loop
jge
cmpsb
inc
cmp
xor
lock
sbb
add
int3
sbb
dec
adc
push
sbb
push
sbb
add
stos
aad
xchg
cmp
jge
and
ret
popa
xor
or
and
xchg
stos
sbb
push
add
mov
adc
stos
in
xchg
and
movsl
sub
jae
es
push
dec
pop
xchg
mov
sub
in
popa
push
test
xchg
lea
sub
xchg
xor
mov
hlt
cmp
add
xchg
lret
lcall
inc
int3
add
push
or
inc
test
push
mov
pop
lcall
xchg
mov
nop
ret
add
mov
cmp
stos
xor
sub
les
or
add
push
lock
and
jl,pt
enter
add
sbb
sub
into
and
pop
lds
mov
sbbl
jb
and
or
js
xor
adc
daa
cmc
testb
test
mov
aam
loope
add
in
jle
add
adc
push
in
es
xor
push
pop
std
add
jb
fstps
mov
aaa
mov
sub
mov
mov
inc
fs
fidivs
les
add
xor
loop
scas
mov
pusha
dec
inc
or
xlat
sbb
ljmpw
cmp
push
loop
mov
mov
sbb
mov
popa
aam
pop
sbb
add
adc
push
mov
xchg
in
jb
int
push
je
cmp
pop
inc
and
inc
xor
or
add
call
add
in
xchg
cmp
mov
rorb
into
pop
mov
popf
mov
jae
sbb
xor
cltd
mov
repz
add
or
call
push
lods
push
and
popf
add
stc
aas
push
shl
sbb
push
pop
loop
stos
or
sub
cwtl
fmull
add
inc
enter
jp
jmp
enter
gs
dec
pop
inc
lcall
xchg
std
ss
push
es
push
test
scas
cld
mov
subb
fiaddl
xor
xchg
or
stos
push
dec
push
cmp
ja
lea
jae
inc
insb
dec
das
fsub
push
sbb
aam
inc
push
lret
lock
shlb
sbb
enter
mov
sbb
jmp
mov
loope
jb
mov
or
xor
aad
pop
loope
cltd
pushf
and
cmp
push
push
and
pusha
mov
cwtl
and
pop
iret
mov
lret
adc
or
fmul
push
and
mov
cltd
mov
xchg
or
mov
loop
cmp
and
fs
ja
addb
cmp
stos
aam
jl
add
out
xchg
mov
cmp
xchg
lret
icebp
xor
lcall
inc
sbb
inc
add
sbb
add
mov
cmovo
loopne
decb
adc
add
loopne
shr
ljmp
mov
js
jae
lret
add
in
adc
psllq
xor
sbb
push
xor
add
enter
call
mov
nop
leave
clc
bound
lods
ret
andl
fsubp
jb
push
sub
out
test
jl
mov
loopne
jno
jp
sub
shlb
mov
data16
push
outsl
or
jecxz
adc
cmp
push
out
xchg
and
mov
roll
imul
pop
push
add
aad
subl
mov
sub
fdivl
adc
jmp
cwtl
inc
popa
or
loopne
mov
scas
adc
lock
pushf
and
or
scas
testb
jecxz
adc
dec
dec
inc
cs
and
xchg
mov
andl
ret
pushf
lahf
xchg
cmp
fwait
cwtl
jo
pop
cmp
lcall
scas
pop
rclb
leave
js
mov
mov
and
and
fisubrl
sbbl
sbb
adc
add
sbb
dec
jl
aad
flds
jecxz
je
loope
mov
sub
cmp
aad
and
push
sub
or
xchg
sub
rcll
or
inc
scas
pushf
std
outsl
sub
sbb
cltd
jb
fstpl
sbb
lcall
add
out
push
jo
inc
cmpl
popf
stos
mov
adc
out
hlt
call
sbb
push
imul
push
xchg
aam
pop
loope
jge
sub
sub
pop
inc
roll
push
adc
adc
dec
and
and
mov
jmp
aad
aam
jp
out
out
mov
push
ljmp
lahf
popa
arpl
jp
and
lret
push
and
inc
add
cmp
cmp
orb
rolb
cmp
xor
mov
and
loope
inc
ljmp
inc
add
loopne
testb
sbb
adc
dec
mov
fisubl
stc
mov
rcrb
add
adc
inc
inc
add
xchg
inc
aad
notb
or
or
pop
popa
mov
and
enter
push
mov
testb
jo
push
mov
mov
js
aad
int3
push
sub
mov
lcall
test
lret
in
mov
adc
es
sbb
xlat
lods
aas
aam
xchg
and
push
and
mov
sbb
leave
cmp
mov
push
xchg
cmp
jo
cli
jp
cmp
fistl
sub
push
rorl
sbb
outsl
sbb
add
fwait
inc
std
dec
cltd
push
adc
or
lea
pusha
sub
repz
das
sahf
stos
pushf
cmpsl
dec
out
mov
adc
out
push
roll
xchg
adc
addb
or
into
cmp
lea
adc
add
mov
out
sbb
push
inc
clc
xor
adc
inc
xlat
and
js
inc
mov
dec
lods
inc
sbb
add
pop
cs
cs
das
inc
cmpsb
xor
cltd
push
push
into
inc
jle
cmp
mov
push
arpl
sbb
pusha
mov
ficomps
enter
pusha
pop
in
mov
test
lret
push
imul
xor
mov
pop
pop
sbb
inc
jno
xchg
push
xor
jle
sub
call
xchg
shrb
fdivr
ficoms
sbbl
xchg
pushf
ret
cltd
sbb
ret
cmp
fs
les
push
pop
gs
pop
nop
jae
add
mov
push
cli
cwtl
and
lret
push
shl
mov
cmp
lahf
movsl
das
sub
loopne
mov
ds
lret
test
addl
int
stos
out
mov
adc
pop
jnp
enter
imul
or
icebp
jmp
ljmp
mov
pop
out
lea
addl
lret
xor
push
mov
stos
pop
out
dec
push
add
and
pusha
push
rcl
fs
ficompl
imul
pop
ds
mov
add
cmp
mov
jb
leave
jge
decb
jmp
loopne
xor
test
adc
adc
or
or
pop
daa
mov
int3
loope
cli
cmp
dec
xchg
repz
nop
into
push
es
es
add
enter
divb
xor
sbb
add
cmp
mov
pop
jno
adc
xchg
cmpsb
jo
sub
jl
jae
mov
test
mov
idivb
inc
push
pop
roll
mov
and
mov
jno
dec
push
into
inc
sbb
sbb
into
fwait
mov
and
packuswb
bound
nop
pop
loope
jo
xchg
lcall
jge
adc
and
jo
add
and
gs
aad
push
dec
xor
jae
push
dec
adc
shrb
inc
xor
leave
add
adc
and
xor
push
fnstenv
cmp
jae
rol
mov
shrl
mov
inc
jne
mov
push
imul
in
subl
js
push
jae
pusha
sbbl
push
add
xlat
or
fs
mov
xlat
mov
mov
clc
pop
and
adc
mov
mov
fcom
and
test
jno
and
nop
in
add
movl
push
arpl
push
loope
mov
andb
push
push
sub
cmp
add
jecxz
xor
pop
cmp
and
mov
push
mov
repnz
push
loopne
iret
inc
mov
test
cmp
xlat
fsubrs
jmp
int
nop
push
xlat
adc
inc
sub
or
pusha
or
nop
mov
pop
mov
sbb
add
test
test
pop
cmp
test
push
lea
ds
xor
gs
test
and
pop
test
mov
adc
mov
jg
xor
sbb
stos
xchg
loop
pop
int
adc
jle
xor
xchg
inc
inc
sub
inc
sbb
subb
test
sbb
mov
mov
cmp
inc
jb
fs
lock
cs
cmpsl
clc
cwtl
mov
push
push
mov
cmp
hlt
enter
and
jnp
add
push
cltd
jle
pushl
or
imul
test
inc
sbb
cmp
in
shrl
mov
out
xchg
jne
pusha
push
lds
mov
sbb
sbb
and
xchg
sub
adc
out
push
pusha
inc
xor
add
daa
sbb
sbb
pop
scas
xchg
fiaddl
jle
add
fidivl
lcall
repz
fcmove
xchg
pop
pop
seto
nop
leave
xchg
mov
xor
jno
xor
cmp
lcall
sbb
and
push
pop
movsl
push
lret
add
mov
fstl
xchg
inc
pop
repz
lock
xorb
adc
mov
pushf
sub
mov
lret
add
orb
lret
add
rcll
dec
sub
dec
push
les
adc
popa
mov
inc
je
sub
cmc
aas
aam
sbb
fs
xchg
in
inc
inc
pushf
testb
push
mov
push
pop
mov
pop
daa
add
push
jae
sbb
dec
mov
push
test
stc
push
cltd
enter
adc
in
add
mov
mov
cmp
fisttpl
inc
xchg
stos
adc
adc
test
or
shrb
push
daa
sbb
test
mov
adcb
test
ret
in
mov
mov
test
pop
leave
inc
popf
push
sbb
in
mov
xor
loopne
mov
and
pop
add
or
xchg
dec
push
pop
and
xchg
xchg
pop
popa
popf
inc
scas
or
aam
stos
jp
cli
ret
lea
in
aaa
jmp
cmp
test
xor
out
and
push
dec
pushf
or
xchg
or
and
inc
cltd
inc
or
idivb
cmp
stc
nop
mov
cltd
mov
mov
jae
stos
add
xchg
xor
mov
adc
test
or
pop
loop
jo
xor
cmp
cmp
and
adc
inc
stc
sbb
dec
in
cmp
sbb
lret
iret
mov
pop
push
and
int3
xor
or
mov
push
ds
or
test
ljmp
mov
cmpsl
ljmp
ljmp
leave
mov
pop
fstpt
inc
cmpsl
push
xlat
pop
sbb
enter
in
or
inc
adc
andl
stos
ror
rcll
sub
sbb
outsl
or
pop
jae
pushf
lds
and
add
dec
pop
jb
mov
clc
sbbb
mov
lds
dec
cmpb
out
sbb
sub
pusha
xchg
mov
dec
mov
ret
aad
push
pop
lods
add
pop
mov
mov
ljmp
rol
sbb
push
jp
mov
loop
sub
aad
adc
push
sbb
push
inc
adc
loope
mov
int3
nop
push
xchg
cvtpi2ps
jns
xchg
mov
fwait
stos
add
dec
lock
shrl
out
add
push
enter
mov
pushf
sub
scas
adc
jo
jl
out
sub
add
push
fisubl
and
push
pop
sbb
popa
enter
xor
mov
or
js
shlb
nop
icebp
popa
sub
in
stc
mov
pop
mov
sub
jo
xor
dec
inc
cmp
fisubl
pop
pop
mov
add
xchg
gs
mov
xchg
sahf
xor
push
mov
aad
cmp
sbb
cmp
xorl
inc
out
loope
rol
adc
jle
cltd
lcall
add
xchg
xchg
push
cmp
dec
xor
fisubrs
jo
outsb
cmp
push
xchg
mov
dec
sub
push
inc
jecxz
push
push
add
push
mov
sahf
rorl
addb
fisubrl
jecxz
test
push
scas
js
sub
loopne
sbb
enter
movaps
jno
dec
cmp
adc
xor
sub
sbb
xor
leave
mov
add
mov
mov
cld
ret
jo
and
xor
mov
jb
pushf
dec
cmp
out
rcll
imul
push
xchg
sbb
cltd
or
fists
subl
and
adc
into
xchg
insb
adc
add
sbb
xchg
aam
push
adc
into
icebp
rclb
cmpsl
stc
push
test
push
pop
cmpsl
xchg
jp
ret
or
in
lahf
loope
imul
aad
mov
sub
cmp
enter
push
jne
adc
dec
sbb
add
cwtl
or
das
rcll
orb
pop
ficoms
scas
dec
cmp
shlb
or
xchg
push
pop
adc
add
sub
sub
ret
push
mov
mov
jb
add
pushf
cmp
nop
and
inc
ret
aad
sbb
or
xor
inc
mov
std
push
mov
in
dec
xchg
jb
into
adc
rorl
sbb
ja
jno
ret
cmpsb
push
push
add
aam
cmp
sbb
fadds
xchg
clc
lods
cmp
lcall
mov
mov
and
in
adc
jb
or
add
scas
pop
add
or
jo,pn
xchg
xchg
inc
int3
xor
dec
std
mov
sub
das
ljmp
cmp
dec
add
and
mov
stos
call
sbb
scas
mov
add
and
inc
push
sbb
inc
dec
adc
stos
popf
mov
pushf
mov
leave
mov
lea
cmp
mov
cmpb
sbb
pushf
push
fmuls
mov
push
jle
pop
rcrb
and
sbb
cmp
or
je
flds
testl
scas
push
mov
arpl
mov
mov
out
shlb
data16
daa
cmp
stc
ljmp
movsb
gs
inc
aad
rclb
in
test
inc
add
add
mov
test
dec
mov
inc
lds
push
hlt
rsqrtps
clc
filds
sub
mov
das
shr
add
sbb
cmp
adc
sbb
jo
add
adc
add
mov
iret
mov
push
mov
adc
push
or
and
dec
xchg
in
inc
adc
dec
sub
mov
ficomps
scas
call
leave
mov
mov
cmp
push
sbbb
sahf
ljmp
adc
ret
call
out
or
inc
fldl2e
lods
mov
pushf
add
int3
enter
cwtl
mov
pop
mov
mov
and
xchg
and
mov
or
into
xor
and
pop
lock
gs
jnp
pop
test
roll
push
sub
pop
ss
xor
in
mov
push
ja
dec
jb
ret
cld
sbb
ljmp
shrl
xor
pop
xor
inc
lahf
shrl
push
inc
mov
inc
cmp
int
adc
enter
in
mov
pop
adc
add
fldl
aam
inc
xor
in
ret
and
sub
sbb
and
es
loopne
dec
cwtl
test
test
loopne
mov
aam
jae
lds
xchg
add
lret
gs
out
mov
push
loope
inc
cmpsb
outsb
add
or
sbb
test
sbb
es
ret
pop
lret
pusha
mov
cmpl
mov
jl
ret
mov
in
mov
push
out
shrl
ret
test
pop
rcr
enter
sbb
jb
pop
push
cmc
stos
jae
cmc
and
jns
out
add
je
scas
sbb
addb
and
test
imul
js
mov
aam
or
add
test
push
adcl
stos
push
sub
push
cwtl
xor
pushf
add
jp
xchg
mov
mov
push
rolb
ret
mov
aas
add
clc
pushl
in
pop
in
or
jne
push
les
sbb
iret
subl
cmp
mull
pop
in
xchg
dec
dec
movsb
mov
sbb
jb
pop
aam
xor
sub
and
jp
xchg
xor
sub
cwtl
and
cwtl
sub
inc
enter
pop
cli
mov
cmc
lret
or
cmp
fisttps
rorl
sub
mov
xchg
dec
pop
je
sub
xchg
cmp
pop
add
jecxz
scas
das
fwait
add
call
scas
lcall
andl
xchg
xor
xchg
lds
mov
pushf
sbbb
xchg
mov
or
test
subl
jp
das
xchg
ret
adc
inc
das
mov
pop
or
xchg
or
mov
cmpsl
outsl
mov
sbb
cmp
stc
cmp
mov
inc
ss
cmp
xor
and
or
cmpsl
dec
or
cmp
inc
dec
inc
pusha
ss
loop
sbb
cs
shlb
xchg
add
pop
sahf
jb
xor
aas
int
xchg
sbb
sub
cmp
xchg
cmp
aad
ret
mov
out
mov
cs
sbb
clc
mov
dec
pop
fwait
inc
int
in
push
pop
xchg
scas
sbb
int3
out
sbb
mov
dec
inc
inc
jne
jno
stos
add
pushf
mov
cmp
sub
sub
sub
add
push
mov
roll
dec
or
inc
in
into
adc
sahf
andb
mov
or
push
mov
ret
testl
lret
xchg
and
xchg
or
sahf
ret
mov
sbb
mov
test
push
outsb
adc
enter
aaa
push
ror
dec
jle
movsb
mov
cmp
and
mov
fcoml
das
lret
cmp
inc
sub
sbb
ret
out
rorl
addr16
add
xor
jmp
xchg
or
and
js
cmc
pop
and
mov
mov
out
js
jle
push
mov
aam
inc
cmp
pop
aad
ret
mov
je
je
push
add
cmp
or
mov
sbb
sbb
fdivrl
int3
jbe
mov
inc
cmp
and
cmp
mov
lods
push
xchg
jae
mov
pushf
fisubrs
adcb
cltd
and
cmp
cmpsb
inc
cs
push
jb
dec
xchg
add
ljmp
lods
add
pop
es
xor
push
xlat
pop
jae
or
xlat
sbb
jno
popf
lea
inc
test
mov
mov
test
adc
mov
xchg
push
push
rol
mov
ja
sbb
or
jo
subb
fidivl
lret
or
and
mov
bound
icebp
cmp
outsb
pand
js
push
hlt
adc
hlt
data16
jb
add
int3
jmp
and
test
adc
js
int3
or
jnp
xchg
pop
xchg
adc
nop
cmp
and
sub
sub
sbb
out
mov
sbb
cmp
or
lods
test
jo
clc
enter
out
add
xlat
jge
push
add
jl
or
xorb
inc
ds
aad
popf
enter
xor
rcrb
cmp
cmpsb
inc
mov
dec
sub
or
inc
es
inc
mov
daa
sbb
lcall
cmc
subb
push
sbb
mov
out
shlb
mov
nop
xchg
popf
xchg
sbb
ret
xlat
add
push
sbb
mov
add
cmp
xchg
pop
das
fwait
sub
ret
push
mov
loope
jno
pushf
ret
add
xor
orl
pop
cld
scas
pop
pop
push
adc
test
jnp
or
int3
imul
adc
pushf
in
sbb
jae
lock
fstpl
push
ljmp
lods
mov
push
test
pop
push
jne
pop
xchg
sbb
iret
sahf
popa
jb
inc
mov
je
mov
add
and
jns
aaa
sbb
test
addl
mov
and
setne
or
or
fists
test
pop
sub
scas
ja
mov
push
int
sub
sbb
mov
sbb
test
mov
orl
mov
push
sub
sub
dec
push
jl
push
dec
mov
mov
cs
jp
pop
mov
mov
cwtl
sub
in
scas
mov
mov
sbb
xor
and
loope
mov
pop
stc
cmpsl
aam
lret
cltd
and
jge
adcl
pop
jmp
rorb
xchg
adc
sbbl
jae
sub
push
loopne
stos
and
dec
cmp
lds
jb
jb
mov
mov
inc
loope
cmp
out
push
cltd
pop
adc
in
enter
mov
mov
pop
scas
push
xlat
xchg
sarb
dec
jae
xlat
sbb
sbbb
test
pop
rorb
sbb
test
sbb
sub
pop
movsl
js
dec
add
loopne
push
test
mov
cwtl
xchg
add
sbb
insl
fists
add
pop
fldl
push
sti
jb
or
cs
fcoml
mov
dec
jo
popa
ret
jne
lds
mov
or
and
loope
sbb
sbb
sti
sub
mov
cmp
nop
enter
or
arpl
xor
testb
cli
mov
cs
stos
test
xor
jb
push
cmp
jb
jp
sub
jmp
inc
ja
cmp
js
leave
dec
dec
mov
out
push
cmp
mov
fadd
push
fs
bound
fisubrs
rclb
sub
xor
sub
push
cmp
pop
add
test
inc
push
xchg
leave
sbb
mov
or
or
jb
push
sbb
cmp
jp
fisttps
and
cmp
imul
cmp
cmp
lret
pusha
enter
sar
das
jnp
push
fwait
stos
data16
pushf
mov
pop
mov
and
mov
jmp
adc
test
lods
lret
xchg
or
jmp
push
popf
ss
dec
sbb
sbb
adc
push
inc
cmpsl
mov
jle
mov
mov
addb
jnp
add
andb
aad
lds
xchg
pop
cs
in
pop
int
xchg
or
sbb
scas
in
xchg
or
repnz
add
fwait
lods
ljmp
ds
push
add
adc
cwtl
enter
mov
push
sub
mov
jl
xchg
lret
xor
fs
repnz
xor
in
test
loope
lods
inc
adc
scas
add
add
or
pop
aad
arpl
push
adc
loope
mov
scas
std
out
test
mov
test
lods
arpl
adc
scas
jb
dec
ljmp
push
add
loop
or
lahf
and
filds
or
add
and
loop
push
push
cmp
mov
xchg
inc
push
jg
leave
adc
mov
dec
push
push
pusha
aam
sub
pop
pop
mov
mov
add
xor
lret
shl
cmp
push
testl
push
cmp
lret
mov
sub
jo
jge
loop
adc
cwtl
add
and
cs
push
jne
and
enter
dec
push
xor
push
or
sub
xchg
sub
pop
aam
mov
or
daa
jns
push
push
add
mov
in
gs
cmp
sub
add
pop
sbb
cmc
mov
shlb
or
xchg
rclb
out
mov
sti
mov
pop
jo
loope
push
mov
scas
jbe
std
std
push
mov
mov
push
into
and
imul
xorl
inc
in
in
repz
popf
inc
adc
sub
mov
mov
cmp
dec
sbbb
adc
xor
mov
call
mov
pop
and
mov
xchg
jl
add
cmpsl
add
faddl
adc
into
xor
rcrb
push
ljmp
pusha
orb
pushf
add
or
push
fmuls
jp
pop
daa
dec
push
pop
lahf
jo
aad
in
push
das
adc
lcall
lcall
iret
push
pusha
or
cmp
call
stos
mov
adc
scas
and
lcall
femms
pop
nop
xorl
mov
sbb
xchg
cmp
adc
xor
mov
push
add
mov
sbb
nop
mov
movsb
mov
pop
mov
pop
cmp
pop
mov
adc
sbb
pusha
push
add
push
daa
stos
out
fistps
leave
xor
push
popf
daa
and
decl
cmc
push
es
push
arpl
mov
dec
dec
inc
cltd
jo
xor
push
jo
enter
out
popa
ret
inc
push
test
int
ret
ljmp
push
sub
out
and
testb
rcl
imul
and
and
mov
cmp
les
xchg
add
push
add
jbe
jp
subl
loopne
xchg
adcl
inc
in
pop
cmp
lahf
jae
push
cmp
xchg
inc
subl
jae
sbb
xorl
nop
cmp
adc
dec
xchg
sub
pop
cmpsb
scas
popf
dec
nop
lcall
push
test
push
subl
ret
and
sbb
or
xor
xchg
sbb
cmp
loope
xor
pusha
mov
imul
xchg
jecxz
mov
pop
and
lahf
xchg
jmp
or
js
lcall
dec
fistpl
dec
scas
push
loopne
cmpsb
mov
dec
daa
inc
imulb
mov
xchg
cmp
out
lea
in
pop
xor
add
loope
lea
enter
clc
gs
xor
xorb
ja
and
out
negb
stos
mov
enter
fs
imulb
push
icebp
fidivl
dec
es
in
aaa
inc
es
cwtd
inc
aaa
xchg
mov
incl
rorb
xor
xchg
add
cmp
iret
push
add
iret
add
enter
aam
out
loopne
dec
negb
fcmove
jno
pop
sbb
adc
int
gs
pop
xor
add
pop
xor
mov
add
mov
add
out
jle
sub
jnp
adc
xchg
mov
jns
sub
jae
or
xor
mov
pop
add
mov
stc
push
inc
push
arpl
in
or
mov
xchg
scas
add
popa
test
mov
cwtl
fs
and
dec
add
push
mulw
cltd
mov
add
mov
int3
bt
mov
or
out
repz
mov
sbb
lea
push
inc
cmp
or
mov
adc
push
cmpsb
pop
or
jmp
and
imul
pop
push
pop
lods
shr
xor
inc
add
sbb
or
xchg
and
pop
jbe
sbb
inc
cs
icebp
out
in
sub
sbb
jge
lcall
and
adc
shrl
cwtl
and
or
mov
cwtl
or
shl
mov
in
push
loopne
imulb
add
and
inc
enter
mov
mov
xchg
lcall
push
scas
push
scas
inc
xchg
leave
in
or
dec
inc
cmpsb
push
aam
cli
and
test
std
lret
adc
testb
and
cmp
out
lcall
xor
xor
ret
add
push
adc
pop
cmp
and
xchg
mov
sub
leave
add
and
loopne
and
dec
add
mov
xor
push
addl
icebp
add
dec
cltd
and
sbb
in
mov
push
mov
mov
xor
ljmp
xchg
lret
jae
push
cmp
rorl
adc
or
mov
test
mov
jnp
cltd
xor
addl
push
or
xchg
pop
sub
mov
jae
enter
enter
scas
mov
ud2
and
cmpsl
pop
inc
fs
lret
sub
das
loopne
rorb
adc
movsb
into
and
inc
inc
cmp
mov
jecxz
push
add
push
mov
jne
mov
adc
lret
pop
aad
push
mov
test
pop
push
mov
rorl
mov
mov
addb
aam
fbstp
sub
jo
lcall
add
and
ljmp
and
add
sub
xor
daa
cli
sbb
pop
adc
cli
push
sbb
pop
and
mov
data16
popa
sub
push
bnd
loopne
jo
sahf
or
scas
xor
inc
sub
pop
jo
test
lret
sti
or
imul
mov
pop
mov
mov
adc
push
adc
add
sub
mov
pusha
mov
add
xchg
push
sar
push
xor
daa
push
cmp
jbe
push
cmp
push
inc
and
bound
mov
jb
popf
cmpsl
mov
push
xor
pop
or
lods
sbb
cmp
mov
addr16
mov
sub
mov
mov
loop
mov
jmp
adc
or
and
push
dec
add
xor
or
cs
out
in
xchg
test
push
push
pop
push
mov
scas
popl
mov
mov
push
jp
daa
sub
shlb
lods
gs
mov
add
loopne
push
sbb
fwait
mov
pop
xchg
cs
shll
push
add
aam
imul
cmp
pop
and
addl
cmp
or
mov
jb
adc
movsb
aam
dec
inc
xchg
jae
xchg
test
add
inc
mov
in
add
in
leave
lret
push
int
adc
push
shll
adc
xchg
xor
adc
sub
xchg
leave
xchg
ret
jo
push
mov
enter
dec
cmc
dec
mov
push
mov
in
aas
ficoms
or
jo
dec
xchg
add
sbb
loope
cmp
loopne
test
aam
cmp
push
xorl
cltd
push
xchg
xchg
lcall
jnp
lcall
das
add
mov
dec
jbe
adc
sbb
adcl
shlb
dec
stos
adcl
or
mov
add
sti
mov
adc
enter
loope
fdivrs
jnp
int
jo
addr16
push
fwait
sub
push
xchg
cld
xor
mov
push
mov
inc
pushf
add
xor
in
cmp
jne
clc
push
ret
pop
xchg
sub
xor
push
in
popa
imul
andb
add
aaa
inc
into
sbb
decb
rcll
mov
movntq
cmp
cmp
ret
mov
cmpsb
sub
pop
xchg
fwait
mov
stos
adc
jo
cmc
jle
mov
mov
pop
cmpsl
jns
cmp
push
and
or
int3
xchg
fistpl
popa
out
xchg
das
jge
rorl
push
or
imulb
cld
push
xor
shlb
mov
ja
sub
xchg
and
jecxz
clc
inc
xchg
in
je
push
sbb
inc
ret
ljmp
or
push
and
loop
push
sbb
aam
inc
inc
mov
sbb
xchg
pop
cli
push
xchg
add
add
or
pop
add
add
jb
xchg
jnp
lds
inc
sub
or
xchg
pop
aam
adc
xor
sbb
out
mov
lcall
ss
outsb
or
mov
dec
aam
leave
out
sub
cs
sbb
arpl
cmp
rolb
add
and
cmp
and
inc
cwtl
ds
inc
inc
mov
jo
aas
out
pop
mov
dec
cmp
or
dec
cmp
adc
gs
cltd
adc
mov
inc
xor
jns
xor
subl
in
adc
fnstsw
add
pusha
in
add
pop
ficompl
or
adc
pushf
adc
adc
or
pop
pop
mov
xor
call
ljmp
or
xchg
or
loopne
sub
adcb
popa
rclb
cmp
add
repnz
in
rolb
popa
and
setl
cmp
adc
enter
push
pop
inc
jo
add
xchg
xchg
loop
cmpl
sbb
das
loop
dec
or
popa
sub
jle
mov
pusha
dec
dec
and
xchg
in
push
rcll
subps
or
les
clc
out
mov
xchg
and
push
inc
push
idivl
push
call
daa
pushf
loope
push
mov
rolb
jae
mov
push
sbb
cs
adc
pop
pop
imul
ret
ljmp
subb
cmp
mov
rorl
cs
out
inc
xor
leave
sbb
push
shrb
xor
pop
cmpsb
loopne
xchg
mov
pop
test
push
and
xchg
cmpsb
test
ja
sbb
dec
add
xor
push
jp
xor
jae
xchg
fsubrp
adc
or
rcrb
sub
lds
push
insl
push
mov
push
push
pushf
in
pop
enter
cltd
dec
dec
sub
pushf
add
xor
pop
sub
lret
or
ret
pop
jns
pop
jae
push
jae
inc
mov
inc
push
and
xor
mov
push
into
adc
daa
sbb
xchg
xor
pop
cltd
fbstp
pop
sbb
and
sbb
jb
jle
icebp
out
inc
cmpsb
adc
pushf
adc
sbb
pushf
cs
xchg
xor
push
lcall
in
cwtl
loope
jl
mov
sbb
lds
mov
aas
inc
dec
pop
in
ljmp
inc
imul
ret
incb
std
cwtl
in
imul
mov
jp
mov
enter
jo
ret
mov
clc
clc
nop
push
rclb
test
js
jns
std
push
or
mov
cltd
aaa
out
add
or
dec
push
fld
imul
cmp
push
cltd
cmp
orb
repz
mov
sub
dec
sbb
jno
rcrl
xor
fcoms
xchg
scas
mov
rol
in
cmp
out
pop
out
adc
push
add
xchg
sbb
pop
cmp
or
adc
mov
cmpsb
xor
leave
mov
cs
aam
add
mov
loopne
adc
into
daa
mov
jmp
ds
leave
mov
test
pop
add
insb
pop
sbbl
cmp
sub
loope
jmp
es
inc
ljmp
jp
cld
loopne
pop
es
aam
mov
sbb
jb
jbe
push
scas
outsl
dec
orb
mov
xor
ljmp
cmpsl
test
in
mov
push
jbe
enter
and
int3
movsl
rclb
pop
scas
adc
add
xor
fdivp
enter
jmp
and
push
jl
xchg
dec
xchg
and
pushw
fiadds
xlat
add
jne
pop
push
xor
inc
jl
xor
sbb
enter
iret
sbb
lret
mov
adc
jo
jb
jo
xor
push
sub
push
push
or
test
sbb
outsb
pushf
leave
add
shl
sti
mov
inc
imul
arpl
loopne
scas
xchg
pop
cmp
push
mov
test
sar
fists
loope
gs
lea
xor
test
popa
xor
dec
pop
and
mov
adc
or
out
pop
add
cs
int3
aam
cmp
clc
xor
out
mov
mov
mov
mov
add
push
xchg
test
ljmp
pop
ret
or
in
sub
xor
add
nop
pop
inc
or
jbe
push
in
cwtl
cmp
pushf
mov
inc
mov
icebp
fsubrp
push
sub
lds
ret
cli
lea
aam
fisubl
cmp
push
sbb
lret
jnp
push
sahf
lcall
mov
data16
and
mov
inc
cmc
mov
xor
mov
es
cmp
popf
add
push
inc
jne
and
jp
jae
cmp
inc
adc
push
push
into
in
mov
mov
decl
push
push
nop
push
sbb
adc
sbb
pop
fmuls
lcall
adc
adc
shlb
push
or
xor
adc
xor
addl
fisubrs
enter
push
cmpsl
mov
mov
dec
push
jae
movsl
xchg
mov
adc
or
dec
ret
out
sbbl
sbb
cmp
push
pop
aas
in
push
push
jo
in
in
sbb
stos
xor
inc
pop
cmp
pushf
lcall
popa
inc
mov
jae
sub
jae
cwtl
icebp
sub
enter
dec
dec
mov
cmpsb
sub
test
mov
add
out
push
mov
inc
add
jle
inc
xchg
cmp
xor
xor
xchg
ret
inc
or
or
std
or
pusha
movsb
and
pop
call
pusha
in
pop
add
scas
orl
mov
cli
inc
scas
push
adc
inc
mov
add
push
lcall
adc
xor
das
add
add
push
cmp
lods
xchg
sub
pop
mov
enter
out
aad
or
mov
push
mov
xor
scas
add
ja
pushf
andb
and
in
enter
test
sti
int
jo
lds
mov
out
mov
inc
jecxz
ss
pop
adc
rorb
test
pop
dec
jnp
push
pop
xorb
xor
xchg
sub
add
fiadds
ja
cmp
cmp
movsl
in
movsl
popa
jo
and
es
add
sub
push
daa
push
push
std
push
jb
and
clc
or
or
or
inc
gs
inc
rcll
xor
adcl
lcall
pushf
js
sbb
push
mov
hlt
enter
pop
mov
adc
in
rorl
ret
sbb
in
xor
push
pop
jae
enter
loopne
and
lods
ret
xor
inc
leave
add
add
xlat
stos
and
mov
jb
aad
pop
cltd
loope
mov
jbe
push
cmp
or
mov
and
adc
and
pop
into
xchg
aam
xchg
mov
xor
in
push
lods
cs
pop
sub
mov
sbb
je
sbb
pop
mov
add
push
or
test
jo
fwait
int3
jo
mov
mov
add
mov
dec
xor
xor
push
cmpl
jo
xchg
stos
jle
lret
jo
sub
pop
sbb
shrb
dec
cmp
popa
sub
cwtl
icebp
sub
movsl
leave
mov
mov
mov
lds
out
push
mov
test
cli
sbb
test
sub
adc
jbe
aad
pop
add
push
push
out
enter
insb
xchg
adc
ja
inc
icebp
imul
add
or
push
mov
cmp
add
aas
mov
mov
call
push
mov
test
pop
data16
test
je
shr
adc
add
pop
mov
rolb
xchg
mov
xlat
ljmp
mov
cmp
ds
add
test
mov
rcl
inc
dec
shlb
or
scas
and
aam
sub
adc
mov
mov
jo
leave
and
cmpsb
mov
add
jecxz
or
ljmp
mov
xchg
stos
enter
fstpl
or
stc
mov
or
or
xchg
cmp
cmpsb
xor
mov
lea
sbb
inc
sub
imul
inc
pop
xor
nop
or
pop
mov
add
or
pusha
add
cs
cmp
aam
adc
and
shl
cmp
fstl
sub
cmp
fildl
enter
pop
xor
inc
mov
add
sti
out
push
mov
dec
out
push
loopne
push
jae
sbb
or
sub
imul
sahf
adc
push
push
and
sub
or
dec
cmpsl
mov
cltd
sbb
push
jnp
aam
out
andw
sbb
push
inc
sbb
sbb
rcll
adc
ljmp
inc
add
sahf
dec
sub
sub
aad
pop
ret
out
into
adc
inc
xor
cmpsb
hlt
or
push
mov
add
ret
push
jae
and
add
inc
push
scas
push
sti
cmp
gs
and
enter
inc
or
push
pop
push
pop
push
xchg
sub
test
adcb
adc
data16
push
jo
push
mov
adcl
cmp
pop
rcrl
mov
sbb
out
ret
adc
rcrb
outsb
inc
pusha
test
lcall
jae
mov
mov
ds
notl
loopne
mov
fs
push
adc
stos
out
and
mov
xchg
call
push
push
gs
jmp
loop
nop
add
movsl
jnp
loope,pt
mov
pop
cmp
xor
fcoml
js
xchg
mov
add
rcl
jns
movsl
cvtps2pd
xor
mov
sbb
xor
fwait
enter
je
mov
aaa
ljmp
lea
or
rcl
or
jo
and
out
push
mov
shlb
push
rorl
or
ljmp
xchg
pushf
orl
dec
push
sub
popa
xor
or
cmpl
sbb
pop
into
push
loope
mov
and
cmp
sub
lret
mov
push
dec
inc
loopne
mov
cwtl
cmpb
ret
push
cmpl
or
call
sub
test
iret
mov
sbb
push
aam
aaa
pusha
add
pusha
inc
or
lcall
pop
mov
add
adc
lret
or
mov
xchg
mov
gs
int3
rorl
nop
xchg
or
add
popa
dec
inc
aad
cmpsb
fcmovnb
pop
xor
mov
push
jae
inc
icebp
fisubrl
sbb
xorb
mov
mov
mov
ds
daa
loop
orl
inc
add
flds
and
inc
imul
xor
push
test
bound
in
add
loopne
push
inc
lock
sti
dec
inc
popf
mov
clc
cmpsb
dec
sub
inc
add
rcll
stc
dec
jne
stc
pop
movsl
sub
mov
xchg
stos
loop
and
clc
dec
inc
mov
cmp
pop
faddl
mov
mov
adc
and
or
popf
ss
push
sub
pop
dec
mov
mov
xchg
repz
or
xchg
daa
xor
ret
xor
inc
cwtl
inc
sub
int
sbb
and
xor
xchg
add
jmp
rolb
add
inc
hlt
cmp
roll
push
push
fidivrl
jmp
xchg
or
daa
sti
rclb
repnz
dec
dec
xchg
sbb
push
and
mov
or
cltd
mov
sbb
insl
cli
pop
loope
sbb
cltd
cmp
and
mov
jge
mov
mov
jp
mov
push
and
cmp
or
jge
dec
fs
stos
and
in
jo
xor
cs
stos
sub
pop
sub
push
cmp
insb
iret
adc
in
arpl
and
dec
xchg
and
jle
cmpsl
and
ds
mov
push
cwtl
pop
inc
xchg
int3
aam
rclb
dec
out
in
lret
scas
pop
lahf
lcall
push
mov
jno
mov
fwait
jbe
push
pop
xlat
mov
add
out
jmp
push
adc
in
mov
ljmp
fwait
and
add
pusha
lret
mov
jo
xchg
out
loop
loopne
inc
pop
jp
lods
mov
es
and
adc
in
aad
jbe
shlb
and
imul
out
fwait
loop
sub
jb
sub
sub
push
add
leave
rorb
inc
lcall
xlat
aam
xor
dec
add
cmpsb
jmp
and
xor
pop
xchg
xor
xor
shlb
in
xor
cmp
dec
push
cld
xchg
shl
jle
mov
sbb
and
pop
adc
mov
sub
roll
loopne
push
sbbl
push
loopne
inc
add
jo
adc
cmpb
scas
es
adc
or
lret
andl
push
sub
sub
lock
or
or
test
rolb
jb
enter
mov
mov
ret
gs
in
lahf
inc
xor
or
subl
xorl
or
nop
mov
ja
enter
inc
dec
prefetch
sbb
in
xor
push
sub
sub
pop
dec
or
cltd
mov
stos
pop
lds
cmp
test
dec
sub
push
loop,pn
cmp
cltd
or
in
subl
aad
lcall
push
mul
xchg
inc
pop
sub
jge
fwait
ret
adc
test
int
cmp
xor
cli
mov
orb
mov
les
push
addb
rorl
stos
mov
sbb
test
fidivrl
lcall
mov
xor
mov
adc
adc
imul
dec
inc
imul
mov
or
ss
adc
inc
cwtl
mov
add
inc
cmp
in
cmp
cmp
fists
lret
inc
mov
lret
rcrb
mov
es
dec
xchg
mov
inc
jmp
push
pop
les
xchg
jae
jo
add
jne
jecxz
stos
stos
adc
lds
jp
dec
xchg
mull
xchg
cmpsb
sub
pushf
add
jle
rclb
dec
idiv
out
pop
sbb
stos
cmp
packssdw
insl
pop
adc
push
insb
lret
or
lcall
sub
xor
jae
adcb
push
jo
into
rcr
sbbl
sub
ljmp
xchg
nopl
jae
adcl
pop
jb
xorl
sub
pop
jbe
dec
insl
mov
lds
jg
push
mov
cld
push
and
mov
stos
jo
xor
int
lds
popa
xor
xchg
cwtl
add
inc
lea
loope
push
mov
mov
adc
sbb
cmpsl
mov
xchg
pop
scas
add
dec
mov
cmpsb
jge
sbb
sbb
push
rcrb
jae
sbbl
jecxz
mov
jle
cmpsl
or
and
cltd
and
push
cmp
mov
lcall
out
aaa
imul
mov
popa
loopne
sub
or
push
xchg
sub
outsl
jmp
xor
xchg
rcll
push
sahf
mov
lods
leave
or
sub
inc
xchg
mov
scas
add
stos
inc
dec
cmp
test
mov
jo
insl
outsl
ret
inc
add
mov
push
nop
xor
dec
into
inc
dec
push
imul
lock
jne
sti
shll
add
popa
rclb
pusha
out
mov
add
addl
sbb
and
stc
pop
push
cmp
add
lret
or
xchg
pusha
mov
mov
lock
test
aaa
mov
lcall
call
test
sub
orl
xor
in
aam
jne
lret
shlb
and
cmp
fs
xchg
xchg
jae
mov
popa
ret
aam
in
out
jecxz
fisttps
enter
loope
enter
push
fsin
out
mov
sub
in
test
cwtl
pop
adc
xlat
dec
push
add
pusha
lret
and
xorb
es
jge
loop
jae
push
push
inc
js
add
pop
mov
fs
sub
cmpsb
xchg
inc
jo
inc
push
out
enter
jecxz
inc
subl
push
sub
mov
in
aad
shrb
mov
cmc
outsb
and
xchg
push
pop
sbb
rclb
add
testl
inc
dec
pop
loop
push
or
mov
lods
xorb
lock
int3
and
adc
mov
aas
add
mov
add
out
mov
je
rclb
adc
jo
inc
xor
push
jo
or
cmpsb
in
sub
lock
arpl
lret
pop
xchg
push
loope
fcmovnu
int3
orl
add
xchg
jo
and
mov
ficompl
es
push
add
lock
mov
add
sbb
imul
and
push
ret
push
mov
inc
cmp
xchg
sbb
pop
push
pop
jo
divb
adc
enter
out
dec
xor
jb
push
jle
push
sbb
movsb
ret
jp
adc
inc
push
das
push
inc
add
rcrb
mov
lret
out
add
out
jle
addb
addr16
enter
repz
insl
inc
or
xchg
jbe
js
xchg
roll
adc
lcall
mov
loope
and
push
cmp
subb
sub
hlt
repz
int
ret
dec
mov
pop
mov
ljmp
mov
test
cwtl
sub
xchg
jo
pushf
jp
jnp
jo
xor
sub
add
addl
lock
pusha
lea
loop
mov
xor
inc
shll
cmc
pusha
add
dec
mov
push
cwtl
xor
ljmp
sbb
pop
loop
add
mov
cmpsb
negb
fisubs
push
add
push
imul
test
mov
subb
call
add
repnz
inc
loope
sbb
loopne
xchg
in
leave
xchg
roll
fwait
mov
inc
cmp
jb
xor
cmpsb
push
inc
xor
pop
loopne
adc
rcl
or
sbb
or
inc
lds
push
adc
sbb
xchg
std
mov
pusha
nop
popa
repz
add
mov
cmp
dec
or
mov
pop
mov
test
scas
dec
inc
add
sbb
test
shrl
sbb
fucomp
aaa
mov
enter
push
inc
dec
out
mov
jl
aam
adc
xor
push
dec
insb
leave
inc
pop
cmpsl
dec
mov
xchg
ret
xchg
aad
add
adc
xchg
mov
popa
and
adc
adc
fwait
or
in
cmp
call
outsb
push
adc
lea
enter
mov
mov
jmp
inc
sbb
ljmp
cmpsl
xor
mov
test
xchg
testl
jg
loopne
adc
xchg
popl
out
pop
or
cs
and
ret
aam
cmp
int3
or
cmp
cwtl
ljmp
mov
cs
sbb
mov
push
cmp
mov
cmp
add
pop
mov
or
pop
jbe
push
push
cmp
xchg
jle
jae
mov
push
sahf
aam
mov
int
outsb
popl
loope
xor
add
xchg
ret
cmp
jnp
dec
loope
push
fdivl
sub
and
xor
mov
mov
inc
dec
into
test
pop
mov
push
dec
sbb
cli
roll
out
inc
cs
jnp
es
jae
pop
add
push
cmpsb
or
arpl
js
ja
aad
xor
cli
outsl
push
cmp
dec
ret
cmpsb
push
cwtl
test
loop
add
adcl
add
cmp
subb
sbb
mov
add
push
mov
inc
xchg
jae
mov
jo
into
popa
fidivl
xchg
test
xor
jle
adc
mov
lock
xor
ss
popa
push
adc
data16
pop
mov
fs
inc
mov
jae
sbb
mov
pop
faddl
lcall
jg
hlt
outsl
mov
test
aaa
loopne
add
clc
dec
sbb
dec
dec
sar
lods
call
dec
jecxz
jl
jge
int3
cwtl
xor
jo
ret
das
shl
daa
jb
xchg
es
xchg
stos
push
xlat
ja
cmp
das
stos
sbb
idivb
push
out
sbb
add
data16
inc
pcmpeqd
inc
and
test
or
adc
stos
push
push
xchg
xchg
es
stos
or
xor
or
cmp
mov
pushf
mov
adc
scas
mov
sub
popa
lret
cwtl
jo
sbbb
aad
sbb
mov
popa
or
xor
int
mov
je
in
lods
pop
rolb
and
data16
xchg
jp
dec
cltd
push
push
inc
int
xor
adc
cmp
sub
es
cmp
js
ljmp
push
sbbb
cmp
int3
xor
in
add
lds
nop
imul
sub
ds
adc
mov
test
jb
push
sbbl
loope
adc
dec
push
fwait
push
loope
hlt
fisubrl
xor
xchg
xchg
xchg
push
popf
cmp
mov
mov
dec
mov
insb
hlt
addr16
cmp
in
std
data16
aam
cmp
dec
pop
loopne
pop
leave
divb
add
add
sbb
mov
xor
sbb
push
lret
xor
adc
fsubrs
xchg
jae
es
sbb
adc
loopne
push
mov
mov
pusha
pop
mov
loop
nop
or
or
sbb
dec
pop
enter
xor
mov
loopne
push
pop
idivb
mov
lahf
lahf
mov
subl
or
pop
mov
nop
push
lea
xor
xor
mov
jo
call
lea
push
add
dec
mov
les
or
mov
or
or
roll
push
adc
push
push
push
adc
inc
insb
jmp
int
add
inc
popf
mov
icebp
jae
popa
xor
mov
or
sub
jne
test
lock
in
xor
push
sub
std
fs
mov
add
push
push
into
popa
mov
xor
and
cmp
pop
xchg
jns
add
or
push
pushf
add
sbb
push
mov
pop
aad
xchg
inc
jne
or
les
xor
fnsave
cwtl
jb
mov
fwait
imul
xchg
fstps
adcb
pop
adc
xor
rorl
enter
cld
inc
pop
lock
sahf
cmpsl
enter
sbb
mov
rcll
in
xchg
sahf
mov
dec
mov
in
mov
dec
push
lret
fs
pop
outsb
jae
sub
addb
push
subl
dec
cmp
loope
addl
mov
jg
cmp
mov
xlat
push
daa
mov
fdiv
inc
push
lock
add
xchg
add
or
inc
pushf
enter
pop
in
in
inc
shll
push
add
cs
push
xchg
out
mov
in
sti
push
addr16
out
sbb
push
das
xchg
lret
adc
rorb
aam
add
lcall
pop
test
xor
test
sub
dec
scas
sbb
ret
je
push
xor
pop
xchg
cmc
loope
and
sub
xchg
mov
repz
inc
aam
xor
xor
cmp
pusha
dec
pop
jbe
lods
push
adc
and
adc
or
and
shrl
subl
or
push
xchg
mov
add
ljmp
jb
cmp
cmpsb
test
aas
cld
push
mov
inc
scas
push
or
push
ret
cld
adc
stos
shll
sbb
ljmp
mov
adc
int
dec
sti
inc
xor
ficompl
data16
push
hlt
lods
icebp
mov
cmpsb
test
mov
inc
into
push
outsb
dec
cmp
sbb
call
mov
inc
lea
aam
shrl
push
push
push
sbb
es
xchg
jnp
mov
sub
jnp
mov
test
or
mov
icebp
jo
ffree
sbb
adc
inc
aad
fadds
xor
pop
jg
lret
and
inc
add
mov
lahf
iret
xor
stos
lret
dec
push
mov
jl
jmp
cmpsb
pop
inc
fs
push
cwtl
dec
inc
test
in
fmul
pop
cmp
das
or
jb
xchg
enter
or
js
ret
arpl
push
hlt
loop
push
pop
shlb
lds
pushf
rcrl
inc
inc
cwtl
pop
push
lret
inc
les
sbb
push
or
enter
or
mov
sbbb
subl
pop
inc
cmp
movsl
pop
mov
push
loope
daa
out
pop
aad
push
push
int
cwtl
pushf
ret
adc
sub
dec
cmp
or
mov
add
je
sub
add
add
cmp
cli
mov
mov
rcrb
cwtl
dec
or
addr16
mov
mov
xor
lret
xchg
jecxz
fs
cmp
push
add
hlt
xor
repz
or
sub
mov
je
repnz
push
inc
xlat
xchg
nop
shlb
and
rorb
dec
mov
testb
xor
fiaddl
xchg
and
inc
mov
loopne
enter
sub
out
push
adc
mov
sub
dec
popf
pushl
jno
cmpsb
add
add
push
xchg
fwait
push
cmp
mov
call
mov
dec
inc
cmp
jge
or
add
testl
pop
inc
cmp
cmp
sub
or
lcall
unpckhps
xor
push
adc
repnz
sub
mov
sub
aas
adc
xor
seto
jo
pop
xchg
loope
and
je
icebp
pop
lret
cmpl
xchg
xchg
or
pusha
idiv
mov
nop
or
or
sub
out
fwait
cmpsl
push
popa
and
push
or
and
sbb
xor
mov
inc
add
cmp
push
or
cmc
add
je
or
lret
push
ja
and
sub
insb
xor
jb
lds
and
loopne
push
stos
push
adc
inc
xor
aad
jo
shl
inc
cli
xor
add
inc
dec
mov
pop
add
jle
add
rcrl
bound
sbb
dec
push
mov
pop
aam
test
jae
mov
push
mov
cltd
inc
shl
in
fst
cmp
sub
mov
mov
ljmp
adc
cmpsl
push
inc
incb
gs
mov
pop
inc
cmp
shl
sbb
mov
push
ja
sahf
xchg
gs
jo
mov
sub
push
pop
lret
inc
xor
enter
and
mov
repnz
add
test
popa
sub
mov
cmp
aad
cmp
inc
mov
xchg
stos
sbb
es
jbe
mov
lret
rolb
stos
dec
into
sub
addr16
and
mov
push
and
fcmovbe
cmc
cmp
fs
and
aam
iret
xchg
mov
mov
jg
loope
cmpsb
lcall
enter
adc
or
adc
dec
push
inc
pop
adc
xor
adc
enter
sub
cmpb
cmp
mov
data16
push
sbb
sub
jb
out
test
push
sub
inc
mov
sbb
xchg
push
sub
int3
or
sbb
push
dec
adc
pop
cmp
add
test
data16
and
jnp
lods
insb
lret
lret
inc
lret
stos
mov
push
add
jne
xor
jne
xor
les
push
xchg
cmp
fmull
inc
sbb
sbb
push
mov
ja
or
add
scas
clc
test
das
test
fildll
mov
adc
push
es
xor
mov
jo,pt
fistl
dec
pop
cmp
lcall
and
das
and
cld
jb
dec
mov
push
in
fs
push
ret
jne
push
xchg
pushf
ret
in
mov
adc
and
andb
lahf
out
int
ret
pushf
int3
dec
push
push
stos
push
fsts
push
jmp
push
or
bound
mov
xor
xchg
aas
test
mov
add
in
pop
sarl
push
adc
cmp
inc
fcomps
je
and
xchg
in
cwtl
insl
add
lcall
mov
xchg
lret
cmp
loop
xchg
adc
lcall
ja
and
bound
pop
adc
out
pop
js
cltd
push
cmp
shl
xor
sub
cmp
in
insb
pop
adc
push
stc
lahf
xchg
gs
sbb
add
dec
push
adc
xorl
pop
sbb
jb
test
pushf
mov
push
cmp
cmp
repnz
add
adc
inc
jnp
gs
in
xchg
fistpl
in
cmp
push
sbb
cli
mulb
push
jne
mov
cli
ret
loopne
shl
cli
pop
out
or
scas
pop
leave
xlat
add
cmp
inc
xor
add
pop
cmc
pop
pushf
xor
test
mov
iret
mov
in
xlat
inc
push
cmp
pop
mov
push
stos
aas
repz
pop
ds
icebp
sbb
and
les
sbbl
adc
subb
xchg
mov
mov
loopne
leave
and
arpl
cmc
inc
mov
sbb
das
orl
mul
bound
mov
mov
dec
add
mov
ja
and
das
stos
xchg
mov
sbb
mov
jae
push
stc
xchg
inc
jb
cmp
pop
fimuls
roll
lret
sub
cs
loopne
xchg
xlat
sub
inc
pop
xor
xchg
and
loopne
mov
jne
loop
fcompl
and
jnp
lret
inc
mov
dec
dec
xchg
push
jecxz
negb
mov
mov
dec
jne
stos
adc
and
jo
xchg
lock
jo
ret
loop
stos
pop
loope
scas
iret
add
enter
mov
or
andl
insb
insl
and
cmp
inc
mov
ret
adc
cmpl
fmuls
pop
in
popa
xor
or
jno
push
or
cmp
xchg
mov
inc
aad
loopne
add
jnp
cs
adc
xchg
push
sbb
inc
xor
lods
dec
add
xlat
sub
subb
mov
lcall
jle
push
add
nop
or
xor
orl
xor
and
xor
jl
sbb
or
out
sbb
push
inc
xor
shlb
add
sub
fnstsw
push
movl
cmp
pushf
fstl
jl
xor
call
aas
add
sbbl
mov
inc
pop
mov
sbb
mov
lds
int
jmp
mov
push
or
push
push
adc
and
daa
into
xor
or
dec
sbb
test
mov
push
sbb
out
aas
add
in
adc
mov
mov
enter
mov
lds
std
mov
jp
std
iret
mov
les
push
push
add
xorb
stc
out
repz
rcl
xor
xor
loope
pop
enter
out
adc
push
inc
stos
add
call
add
mov
lcall
ss
imul
mov
or
nop
and
ret
aad
mov
push
mov
sbb
sahf
mov
add
in
jge
cmp
lahf
add
pop
push
add
inc
inc
cmp
and
lcall
cld
movsb
test
pop
inc
push
lret
fisttpl
cld
andl
adc
popf
stos
lcall
into
or
movsb
jb
pop
out
int3
imul
add
pop
or
xor
sbb
roll
jle
adc
xlat
push
roll
xchg
mov
dec
push
in
loop
mov
or
or
push
or
loope
les
inc
sbb
sbb
jo
test
push
mov
inc
in
aam
pop
pop
movsb
pop
addb
push
xlat
shlb
aaa
sbb
int
shl
pop
iret
mov
push
push
pop
adc
jo
jnp
aas
mov
outsb
enter
cmp
xor
stos
andb
xchg
sbb
ljmp
xchg
dec
adc
fs
jae
cmp
mov
push
cmp
jae
jb
xor
call
cwtl
jae
sub
jno
dec
das
sub
mov
push
add
out
push
mov
inc
mov
and
sarl
add
dec
inc
hlt
push
test
xchg
shrl
jno
scas
sub
into
and
add
dec
adc
mov
jmp
push
inc
or
stc
mov
test
daa
es
stos
push
dec
push
jae
rclb
and
enter
lock
push
jg
push
icebp
dec
inc
dec
movl
test
mov
pop
insl
ss
cli
ret
inc
mov
push
xor
xlat
addb
sub
jg
cli
outsb
sub
add
dec
aad
inc
fisubl
or
std
pop
aam
mov
in
cld
cmp
mov
fimull
out
push
jle
xchg
cmc
stos
shlb
xor
fadd
sub
in
and
test
ret
dec
call
pop
and
out
aaa
dec
jae
mov
call
cmp
lret
xor
push
popa
enter
push
pop
mov
bound
enter
into
shrb
jnp
or
je
mov
sub
or
int
rolb
xchg
les
dec
jns
cmpsl
push
adc
push
mov
inc
fs
les
dec
mov
mov
sbb
jg
mov
fs
cmpb
push
shrl
ret
inc
cmpsb
addb
loop
loope
mov
dec
sbb
inc
les
xor
shll
mov
movl
les
mov
pushf
mov
scas
push
fisttpll
dec
push
outsb
in
pusha
xchg
push
scas
dec
cs
std
pop
shlb
arpl
xchg
mov
mov
add
and
in
ret
leave
test
sub
cwtl
xor
mov
lcall
sbb
loope
shlb
adc
sub
mov
stos
xor
adc
inc
push
xor
cs
or
fwait
adc
cmp
sub
sbb
gs
inc
cmp
pop
not
and
add
mov
adc
xchg
sbbb
aam
insl
test
push
popa
add
in
add
pop
add
jnp
mov
mov
mov
push
jne
ljmp
test
jo
jo
push
sub
push
sbb
cmp
shlb
sub
cmc
cmpsb
loop
pop
xchg
inc
andl
add
jb
imul
push
sbb
pop
and
call
aad
into
dec
xor
jl
add
cwtl
sarl
addb
sbb
mov
inc
push
or
dec
pop
add
cs
add
or
fnstsw
or
lret
sub
add
or
faddl
cmpsb
sub
mov
rcrl
lods
xchg
int
loopne
sbb
inc
push
push
scas
stos
pop
jl
scas
mov
push
inc
push
mov
xchg
inc
test
jbe
cmp
pop
pop
xor
xlat
aam
push
pop
and
cmpsl
subb
insb
jne
scas
mov
pusha
and
movsb
push
sub
add
out
in
xor
aaa
addr16
or
test
xchg
test
adc
mov
ljmp
push
mov
xorl
adc
cmp
pop
and
mov
pop
push
mov
lret
xor
sub
pop
ds
xchg
int
aaa
lock
inc
mov
cwtl
dec
cs
lea
push
push
cmp
add
pop
jnp
jl
cmp
enter
mov
jb
mov
and
and
mov
cltd
and
shlb
or
test
mov
dec
es
xor
icebp
xorb
xchg
bound
dec
sub
rcll
cmp
push
push
push
cmc
loop
push
clc
mov
testb
test
xor
lock
or
jbe
pop
mov
inc
pop
mov
popf
mov
and
or
mov
mov
adc
jle
add
bound
or
cmp
inc
cmp
adc
jge
mov
imul
sbb
and
sbb
lods
cld
push
cmpsl
cmpsb
push
sbb
shlb
pop
jnp
gs
test
sbb
xchg
and
stos
xor
jb
mov
daa
push
adc
push
aam
xchg
jns
mov
scas
aas
flds
aaa
push
gs
sbb
sub
jp
cmp
out
movsb
mov
push
and
sub
or
push
push
mov
inc
fwait
cmpsl
mov
js
enter
imul
mov
push
imul
add
jl
dec
dec
pop
push
insb
jno
repz
jp,pt
jmp
and
sahf
mov
mov
sub
imul
mov
cmp
sbb
out
push
xchg
sti
sbb
sbb
mov
insl
or
js
pop
call
out
dec
pusha
push
pop
add
ficoml
dec
push
or
mov
ret
sbb
lods
out
inc
shll
stos
mov
jecxz
jecxz
test
pop
shll
je
dec
mov
fstl
cwtl
lret
aam
aam
push
das
stos
mov
push
mov
scas
mov
mov
es
mov
shlb
jo
xlat
and
jp
add
dec
scas
nop
dec
xchg
leave
add
cmpsl
ds
xor
mov
xchg
sbb
fwait
add
shlb
push
add
inc
cmpsb
dec
in
xlat
or
jp
rol
inc
stos
xor
mov
aam
inc
inc
mov
pushf
jp
jp
inc
in
adc
pop
inc
mov
cmp
orb
mov
stc
cmpsb
adc
pop
or
pop
nop
mov
out
push
mov
adc
sub
xor
inc
fcompl
adc
ret
test
hlt
mov
lds
pop
jno
jb
mov
adc
adc
sbb
pusha
sub
aad
hlt
shrb
hlt
sbb
mov
push
xor
icebp
push
sbb
mov
sub
rcrb
add
sbb
ret
push
hlt
shll
mov
incl
cs
jb
mov
dec
ret
adc
test
aam
stos
pop
inc
sbb
pop
add
mov
lret
mov
jge
xor
xchg
scas
adc
mov
xchg
mov
jo
jb
cmp
data16
cmp
add
jne
xor
push
cmp
pop
xchg
sub
mov
sub
loope
sbb
dec
lcall
std
hlt
sub
scas
mov
lock
cmp
or
std
lcall
jae
add
mov
stos
dec
out
sbb
inc
mov
xchg
ljmp
push
mov
stc
fdivrs
add
sub
arpl
faddl
push
xchg
xchg
cmp
jns
icebp
sbb
dec
in
js
jae
jo
rcll
inc
shr
push
xor
pop
push
push
pusha
in
outsl
mov
inc
orl
ret
add
in
push
adc
push
push
xchg
pop
inc
test
dec
push
dec
push
dec
fimuls
jae
test
sub
test
lahf
or
mov
cs
sub
inc
pushf
push
add
mov
out
adc
call
loopne
xchg
or
jle
sub
cmp
inc
adc
sbb
and
fnstenv
add
mov
or
ret
mov
push
adc
pop
js
pushf
aam
je
ret
sahf
movsb
xor
cmp
stc
jne
mov
push
mov
repnz
mov
or
inc
shr
gs
jmp
int3
addb
pop
push
movsl
pop
cwtl
add
dec
pop
mov
dec
sbbw
mov
mov
nop
jmp
mov
cmp
sbb
sbb
cmp
sbb
and
lock
xor
mov
arpl
lret
icebp
mov
pushf
aam
sub
aad
sbb
mov
dec
sbb
lcall
stos
das
aad
jae
fs
sbb
stos
dec
mov
clc
pop
inc
add
push
inc
cmp
mov
or
aad
xor
aad
fldcw
pop
dec
inc
int
or
mov
mov
mov
test
adc
movb
mov
xor
push
push
dec
repz
xor
dec
pop
sbb
mov
mov
pop
out
les
pop
mov
xor
adc
aas
adc
dec
popa
shl
jnp
pop
cs
push
xor
mov
sub
push
fbld
and
push
pop
nop
add
push
mov
cs
push
jae
adc
jle
and
out
pop
add
inc
mov
and
sbb
jae
xor
in
push
add
or
jb
out
outsb
shlb
add
int
cmp
or
fdivs
mov
push
sahf
adc
jo
pop
shlb
jle
lods
cli
stos
push
mov
incb
mov
out
push
adc
and
sub
pusha
and
iret
testl
nop
mov
or
xor
loop
je
push
xchg
cmp
icebp
xchg
rorb
sbb
add
push
adc
dec
inc
scas
daa
jo
mov
ret
dec
push
dec
cmp
add
mov
sbb
orb
and
mov
lcall
std
cmp
mov
xor
filds
cli
cmp
mov
cmp
bound
shll
fs
and
sub
sbb
push
xor
pop
xchg
fldl
sub
mov
in
lds
pop
loop
divl
and
pushf
cmc
mov
out
in
shrl
mov
pop
inc
sub
call
sub
cmp
vsqrtpd
mov
daa
roll
and
dec
push
aam
xor
les
or
or
mov
cs
xchg
and
lret
jp
add
and
mov
cltd
sub
sub
scas
push
rorb
pop
mov
aam
mov
sub
adc
sub
shlb
daa
into
sbb
or
out
and
and
leave
xchg
mov
xchg
adc
push
sub
das
test
scas
ror
xor
scas
test
inc
mov
adc
push
ret
push
test
sarl
addb
ret
push
jp
xchg
ret
jno
int
test
adc
pop
xchg
pop
sbb
pop
xchg
inc
sbb
dec
aam
ret
inc
xor
and
or
ljmp
dec
inc
push
add
sbbb
cmp
mov
lret
sbb
mov
adc
xchg
addl
jmp
adc
les
or
jb
sub
ja
or
pop
loopne
cmp
add
out
call
jp
push
sub
adc
push
adc
push
xor
xor
icebp
orb
popf
mov
push
sub
inc
push
mov
pop
sbb
stc
pop
pop
push
cmp
lcall
call
jae
cmp
add
orb
insl
daa
bound
mov
addl
xor
out
loop
jp
popa
add
ret
mov
jae
sbb
dec
push
jno
adc
add
sbb
xchg
inc
cmp
sbb
dec
add
dec
ud0
mov
arpl
jl
add
orb
inc
pop
jne
dec
test
adc
add
divb
push
add
sbb
cmpsb
sub
mov
push
ffree
and
test
cmpsb
shrb
cmp
xor
mov
push
xor
xor
fsubl
jo
sbbb
in
sub
aam
in
fwait
xchg
jecxz
lret
aad
iret
int
jo
stos
xchg
loope
jno
xor
xor
and
jbe
or
adc
jmp
sbb
inc
cmp
mov
dec
push
and
hlt
adc
or
jno
mov
ljmp
jmp
xor
pop
pop
out
lock
daa
dec
xor
add
sbb
xor
cwtl
add
cmp
xor
mov
jp
mov
add
out
sub
push
sbb
arpl
adc
cmp
test
sbb
stos
sub
and
loopne
pushf
pop
mov
xor
jnp
xor
push
into
mov
pop
inc
scas
outsl
das
jecxz
rolb
stos
xchg
ss
mov
std
inc
add
pop
in
sbb
mov
and
notl
sub
shll
xchg
push
test
ret
int
cmp
insb
or
inc
xchg
stos
adc
xchg
pusha
pop
repnz
sub
es
xlat
insl
dec
cmp
adc
inc
repnz
loop
dec
push
test
mov
mov
xchg
addl
mov
addb
push
ret
add
test
add
sbb
xor
mov
xlat
shl
jae
adc
loope
imul
sbb
adc
or
xchg
add
push
pop
sbb
outsb
nop
iret
scas
push
pop
pop
jp
test
loopne
add
inc
je
decl
int3
mov
push
inc
mov
inc
inc
adc
inc
call
pusha
imul
xchg
or
xor
sbb
add
inc
daa
sbb
inc
inc
dec
enter
adc
jo
andb
xorl
or
call
push
mov
arpl
push
inc
push
dec
add
pop
test
sar
and
lds
cmp
cmp
xchg
inc
xchg
mov
mov
dec
push
pop
sub
out
aam
add
xor
mov
in
lcall
jno
xchg
fcoml
pop
stos
or
fisubs
cmp
add
insb
sbb
or
xor
dec
lock
js
rcr
inc
daa
iret
or
ret
cltd
cmp
out
icebp
rolb
adc
adc
into
xchg
enter
outsl
xor
mov
sbb
cmp
mov
cmp
jns
dec
cs
jl
push
xor
je
sbb
pop
jb
push
fyl2xp1
in
sbb
push
add
add
mov
pop
jae
push
daa
add
inc
push
arpl
ret
cmp
inc
mov
mov
add
push
scas
add
popl
pop
push
call
lcall
and
mov
xlat
loopne
xorb
ja
sbb
add
popa
fdivl
dec
test
sub
mov
enter
xchg
mov
sbb
aas
leave
lea
adc
add
andb
sbb
add
dec
adc
dec
inc
daa
addr16
js
add
push
mov
mov
or
jno
out
imul
add
lahf
xlat
cmc
lcall
les
xchg
sub
add
enter
sub
test
lcall
lea
xchg
add
pop
push
int
scas
push
sub
nop
leave
push
jne
push
sbb
out
ljmp
shlb
push
jo
xchg
mov
add
sub
fstpt
push
xor
insb
stos
fwait
mov
jns
and
ljmp
mov
push
jmp
test
push
xor
rorb
dec
push
dec
adc
sub
sub
push
jge
jae
cltd
ljmp
pop
popa
pop
or
ds
cmp
mov
pop
stos
mov
shrb
jae
js
push
pop
add
cmp
sbb
cmp
xor
mov
jle,pt
inc
push
out
frstor
push
push
xchg
sub
gs
push
xchg
test
mov
enter
add
loop
lock
jp
xchg
mov
xchg
adcl
mov
jle
test
sbb
fcomp
push
inc
mov
jl
rorb
mov
push
loope
inc
pminub
sbbb
fucomp
and
hlt
push
lods
jae
scas
mov
jp
fs
int
loope
sbb
ret
and
mov
cmpsb
and
cmp
out
add
dec
lret
adc
hlt
and
mov
sbb
ret
push
addr16
inc
sbb
dec
les
cmpsb
push
outsb
xchg
enter
jb
in
push
js
cld
stos
push
inc
popf
mov
cmp
pop
and
les
mov
inc
push
cmp
xchg
xchg
lea
test
push
bound
add
xchg
push
xor
rol
mov
xchg
inc
loopne
xor
sub
scas
ret
inc
loope
subl
adc
jb
sbb
insb
lock
mov
cmp
jo
cmpsl
or
aad
jmp
push
out
outsb
pop
cs
dec
cmpsb
pop
xchg
mov
cli
cmp
pop
in
ror
mov
sti
dec
scas
mov
insb
aaa
orl
mov
imul
inc
mov
push
push
enter
mov
in
sarl
pusha
loopne
pop
cmp
push
das
std
cs
outsb
xchg
cli
pop
imul
add
sub
xor
add
mov
stos
push
or
adc
jp
movsb
lock
add
inc
inc
sbbb
repz
add
jg
push
int3
iret
sub
inc
idivb
bound
or
stos
dec
xchg
add
push
adc
push
dec
push
movsl
addb
xchg
sub
sbb
cmpsb
push
xchg
int
sub
pop
cwtl
sub
inc
xor
adc
xchg
mov
test
and
insb
addr16
and
dec
pop
and
int
dec
pop
push
jp
add
adc
aam
fdivl
loope
add
aam
sub
xor
push
pushf
or
cs
outsl
push
push
xor
mov
push
add
xchg
lret
xchg
and
loope
add
arpl
sbb
sti
rolb
and
push
popa
jo
mov
jo
or
inc
es
testb
jnp
pushf
or
cltd
mov
jns
gs
aad
mov
es
and
ret
add
mov
xchg
push
pop
xor
aad
andl
sti
pusha
add
push
sbb
cli
mov
int
pop
es
loop
sbb
sarl
mov
orb
mov
loopne
jne
lea
mov
pop
pushf
mov
call
iret
cmp
mov
push
jmp
fcmovnb
enter
inc
inc
pushf
add
sbb
sbb
cs
enter
sub
xchg
xchg
and
gs
push
inc
pop
mov
sub
add
mov
adc
push
push
pushf
sbb
inc
cmc
or
inc
jne
and
int
inc
callw
cli
add
mov
iret
pop
mov
dec
push
add
fdivr
xchg
jb
mov
mov
or
add
adcb
sub
mov
test
inc
aad
mov
fldt
iret
and
pop
xchg
fwait
xor
push
das
inc
inc
inc
adc
dec
add
lock
mov
lock
decl
pop
repnz
push
lds
cltd
pop
push
popf
push
mov
mov
lcall
pop
sub
sbb
add
add
push
inc
add
lods
sti
adc
cmpsb
add
xor
std
or
pop
push
lret
loopne
jbe
hlt
loop
loope
jne
pop
mov
daa
mov
stos
push
pop
adc
js
subb
sarb
mov
and
sub
dec
and
mov
das
push
test
sti
push
loopne
inc
daa
mov
ret
rcl
push
sbb
popf
test
jb
push
out
pop
xchg
leave
push
and
jecxz
adc
lcall
loopne
decl
cs
push
or
cmpsb
inc
int
dec
enter
mov
stc
ljmp
add
jg
push
rclb
rorl
cmpsl
mov
lret
mov
or
test
jbe
add
rclb
in
ljmp
mov
stos
or
add
out
push
call
jo
jno
ljmp
inc
aas
imul
dec
ss
sbb
sub
inc
cmpsl
cmpl
or
aaa
inc
nop
cmpl
aad
dec
mov
sub
adc
jb
mov
cmp
movl
push
insl
jo
push
adc
inc
das
sbb
dec
lods
push
sbb
xchg
jmp
and
dec
es
sub
lcall
cs
add
lods
mov
push
es
rcrb
pop
adc
mov
test
adc
cmp
xor
and
pop
ds
add
xchg
imul
mov
or
push
in
movsb
xchg
insb
or
fs
mov
out
movsl
or
xor
inc
es
shrb
inc
cmp
iret
jae
sub
mov
pop
lret
outsb
lea
adc
bound
inc
cwtl
rclb
push
sbb
loope
xor
dec
fildl
lds
inc
mov
nop
sub
inc
ja,pt
pop
scas
mov
fbstp
orb
pop
sbb
cmp
or
inc
int
lret
xor
aad
cmp
stos
xor
call
jp
test
cmp
cmpsb
cmp
mov
jmp
je
and
rolb
adc
mov
pushf
ret
icebp
xchg
mov
enter
xchg
xchg
pusha
xor
out
sbb
mov
das
sub
add
cmp
push
mov
mov
push
and
xor
sub
call
xchg
roll
roll
push
inc
or
push
push
pop
test
in
sarb
mov
adc
sbb
jmp
sbb
lock
movsb
sbb
add
out
or
push
popf
outsl
jp
loopne
test
add
ljmp
jl
pop
jne
into
xchg
or
out
and
test
ss
adc
dec
scas
sub
ret
cmp
mov
mov
jb
add
adc
popa
jo
push
fdiv
push
or
add
sub
stos
fimuls
mov
sbb
pushf
orl
push
popf
icebp
call
stos
and
xchg
out
dec
nop
push
sbb
cmp
int3
push
ret
cld
add
push
in
add
scas
jo
jg
adcb
icebp
sbb
adc
mov
or
cmp
push
jg
rcl
adc
jae
sub
addr16
stos
lods
adc
mov
and
stos
mov
and
aad
sub
fwait
push
popa
adc
cmp
add
add
dec
jns
and
push
add
call
sbb
inc
adc
add
dec
add
inc
mov
dec
nop
cmp
inc
pushf
push
adc
mov
add
mov
mov
cmp
mov
movsl
test
and
pusha
popa
push
cmp
decb
dec
inc
aam
mov
fisttpl
xchg
lret
enter
adc
push
add
pop
out
faddp
push
popa
mov
xor
ljmp
cmpsl
mov
mov
jo
ret
orl
loopne
pop
es
xchg
jb
mov
dec
je
inc
push
cwtl
mov
and
and
cmp
mov
icebp
decb
push
cmp
mov
jne
cltd
push
jp
or
adc
fs
xor
scas
mov
lds
xchg
ja
test
scas
or
mov
add
rorl
insb
repz
enter
mov
xchg
and
jo
pop
pop
cwtl
lcall
and
sub
inc
mov
rclb
int
mov
movsl
mov
push
inc
cltd
pop
shlb
incl
mov
rolb
pop
and
adc
loopne
push
pop
sbb
or
insb
ljmp
sahf
jle
or
lock
jp
inc
xchg
ret
jp
out
fiaddl
and
ja
push
scas
dec
fmull
sub
cwtl
mov
popa
jle
orl
lds
sbb
stc
adc
fs
shrb
fwait
add
dec
add
xchg
shll
inc
in
es
iret
xchg
cmp
xor
cmpsb
mov
adcb
xorb
lea
insl
mov
and
in
jb
jl
daa
adc
jb
dec
xchg
data16
adc
pop
mov
and
mov
sub
and
sbb
push
mov
xchg
loop
gs
or
xor
iret
movsb
jmp
or
mov
push
or
pushl
jb
arpl
in
xor
call
add
xchg
mov
xchg
loope
xchg
icebp
xor
jo
jo
out
insl
or
jmp
push
pushf
push
sbb
sbb
or
sub
sbb
cmpsl
pop
adc
mov
add
jb
stos
mov
inc
add
clc
enter
lahf
and
out
jno
mov
rclb
sbb
and
fmull
sub
inc
mov
cmc
or
iret
push
cmp
inc
add
push
subl
or
loop
call
xchg
das
hlt
or
add
data16
jnp
sti
xor
add
rcr
mov
jmp
cmp
adc
loop
push
mov
pop
xchg
cmp
out
inc
adc
sub
cwtl
int
out
inc
subl
add
jb
pop
sbb
pop
xchg
jl
jo
pushf
lret
add
pop
inc
aad
loop
dec
sub
nop
mov
mov
rorb
xchg
dec
mov
push
xor
add
xor
xlat
or
add
jae
mov
mov
xor
sub
jo
fldl
mov
dec
ds
aad
pop
mov
push
aad
jb
mov
out
loopne
cmp
cs
test
jo
add
push
cmpsl
xchg
pop
sbb
xor
cwtl
sub
cwtl
sub
push
mov
add
push
cmpsb
punpckhwd
inc
gs
xchg
mov
mov
shrl
arpl
jne
add
inc
xchg
xorl
outsl
aad
xor
lock
xchg
or
hlt
jmp
dec
dec
or
sbb
repnz
sub
pop
cltd
sub
and
ds
sub
cmp
push
jno
mov
cmp
jp
rolb
loopne
and
loope
inc
lock
mov
jg
je
ss
mov
inc
sub
lcall
mov
ret
push
cmpb
jge
sub
loopne
inc
imul
mov
xchg
dec
pop
mov
into
mov
cmp
stos
jle
iret
sbbb
push
jmp
push
push
jp
and
sbb
ljmp
mov
ja
mov
add
loopne
adc
add
lds
ds
xchg
or
jae
ret
bound
emms
stc
sub
scas
int
loopne
sub
lds
ret
xor
push
xor
xchg
add
jge
loopne
loopne
xor
adc
insl
or
andl
bound
pop
cmp
sbb
daa
xchg
arpl
pop
inc
cwtl
shrb
mov
mov
add
data16
jae
push
add
xchg
js
sub
aam
xor
mov
mov
xchg
jmp
inc
aaa
adc
data16
sbb
stos
push
or
sub
pushf
jo
test
sbb
mov
mov
mov
leave
push
push
rcrl
adc
push
add
das
lods
pop
push
mov
outsl
test
or
flds
ret
add
mov
pop
xchg
idivb
cltd
lcall
or
mov
aam
loopne
xchg
or
xor
daa
gs
pop
mov
jbe
inc
scas
cltd
adc
sbb
push
push
mov
stc
mov
sbb
inc
sahf
cmp
mov
mov
mov
sbb
xchg
or
loope
faddl
xor
inc
pop
std
adc
scas
adc
inc
mov
subb
das
mov
sub
xchg
lret
popa
rolb
dec
cltd
or
cmp
lret
jp
dec
outsl
pusha
xor
adc
sub
pop
adc
add
jmp
gs
gs
lret
ljmp
cs
insb
add
push
mov
add
sub
xor
add
adc
lods
and
adc
jg
jno
add
inc
gs
push
dec
outsl
arpl
gs
popa
outsb
fs
outsl
ljmp
dec
outsb
outsw
jb
popa
je
outsl
outsb
adc
push
popa
imul
sbb
gs
adc
imul
outsl
jne
arpl
insb
bound
sbb
jae
je
fcomi
in
popa
cmp
jb
xor
adc
imul
aaa
outsb
push
imul
imul
push
arpl
mov
outsl
insl
jo
cmp
jb
test
sbb
jae
insl
push
outsl
ja
push
fstpt
mov
jae
or
aad
fwait
std
lods
je
push
jne
jne
push
pop
insb
ja
fistps
popf
sub
jae
imul
push
outsl
dec
std
lcall
jp
popa
push
jae
push
mov
out
inc
imul
or
outsl
push
lods
pop
jnp
adc
js
jne
xchg
push
outsb
lds
pop
imul
sub
imul
imul
jns
insb
popa
adc
inc
adc
pop
popa
mov
dec
jo
lcall
insb
in
mov
push
pop
push
jo
inc
cmp
cmovnp
out
inc
outsl
outsl
jae
xor
jo
add
jbe
cltd
gs
xor
dec
jo
mov
sub
push
push
insl
imul
sti
out
inc
data16
mov
outsb
jne
push
dec
dec
xchg
jne
jns
out
xchg
popa
int3
sbb
ds
xor
dec
push
popa
or
pop
popa
lods
cwtl
cs
sbb
test
pop
mov
inc
adc
fldl
in
mov
push
jns
fcmovnbe
jbe
cmp
mov
icebp
jecxz
mov
insb
int3
jb
mov
mov
jg
sbb
arpl
mov
arpl
rclb
ja
mov
fs
imul
sub
inc
adc
sub
add
push
sbb
cmpsb
inc
jb
popf
out
mov
aaa
pop
jns
popa
jbe
dec
jb
sti
pusha
out
int3
mov
jns
popa
mov
or
adc
insb
fcomi
inc
fs
jne
mov
jo
arpl
push
xor
push
dec
lcall
movsb
push
ret
and
loope
mov
repz
xchg
rcrb
int
sbb
dec
jp
int3
test
dec
jge
testl
jge
loope
mov
and
cwtl
jae
add
gs
lea
insb
sbb
insb
js
arpl
adc
imul
mov
adc
push
lcall
imul
pusha
cmpsl
pop
jo
or
mov
fadd
call
push
das
outsb
dec
popaw
in
mov
bound
js
push
dec
jo
adc
mov
jb
jb
das
lea
shlb
cmpsl
es
insb
stos
pop
or
sbb
mov
outsl
ja
jo
sbb
mov
xchg
mov
xchg
jae
or
dec
dec
sub
fwait
mov
inc
mov
mov
repz
mov
data16
inc
sub
jne
clc
or
mov
jbe
sub
aam
push
jns
push
mov
repz
push
push
shrb
or
pop
adc
cli
xchg
mov
gs
inc
daa
je
int3
xor
pusha
inc
jb
popf
andb
jae
cmc
sbb
dec
inc
dec
xor
push
add
in
stc
sahf
inc
orl
xchg
scas
movb
inc
test
fstpt
jecxz
jge
stos
fnsave
ja
cmp
insb
insb
bound
jns
repz
lret
adc
rcrl
imul
ljmp
inc
adcl
je
sbb
xchg
jb
mov
and
ljmp
out
jb
fstpl
scas
push
lods
sbb
jle
fs
insb
daa
int3
bound
into
es
xchg
js
insb
jne
icebp
xchg
push
jle
or
xor
dec
outsl
or
loopne
fcmove
inc
inc
rorb
mov
mov
xchg
push
sub
jl
fsts
pop
pop
jo
inc
inc
inc
add
push
subl
es
cmp
pushf
dec
ljmp
jnp
jle
pop
outsl
inc
sub
jo
ret
inc
pop
adc
inc
push
imul
sbb
dec
insl
arpl
ficomps
or
pop
mov
jge
xchg
rolb
je
push
mov
pop
lods
les
clc
sub
push
imul
push
sbb
mov
xlat
es
or
xchg
cltd
bound
sbb
inc
sbb
cli
js
test
adc
inc
aas
enter
dec
add
hlt
addr16
inc
loopne
sidtl
add
add
in
lcall
or
adcb
inc
jge
mov
add
add
or
push
pop
fbstp
sub
jg
das
push
aaa
mov
pop
add
push
add
add
mov
test
add
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
jmp
xlat
mov
jb
or
mov
stos
mov
pop
lea
or
loop
popa
sbb
jb
mov
jmp
pop
sub
and
into
popa
imul
lds
idivb
pop
outsl
xchg
pop
into
int3
addl
and
pop
mov
fstl
pop
xchg
mov
fldenv
inc
test
cmc
cmc
push
mov
fsubrs
lret
sub
outsl
push
ljmp
mov
push
jne
bound
and
xchg
sbb
dec
idivl
lret
ja
insl
and
or
sti
sahf
and
cmpsb
sahf
fcmovb
mov
in
bnd
xchg
or
sub
movsl
and
mov
cld
ficompl
mov
rcll
and
jno
inc
adc
jg
mov
mov
in
iretw
add
cmp
test
test
sbb
les
rcrl
mov
mov
mov
xchg
ljmp
clc
les
loop
imul
insl
stos
xorb
or
sub
jne
mov
out
test
pushf
jp
repnz
xorb
mov
xchg
lret
les
pusha
pop
test
repz
fwait
rcl
in
lcall
movsl
jl
sbb
test
lahf
movsl
ret
loope
jmp
push
mov
scas
mov
es
sub
imul
scas
jecxz
xchg
lods
sub
add
repz
pop
xchg
sub
mov
jl
mov
int
push
dec
lods
push
jge
mov
stos
mov
xchg
or
jno
mov
ja
loopne
iret
out
filds
int
mov
rorb
xchg
sbb
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
rolb
add
add
add
add
add
add
test
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
in
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
popa
add
and
dec
add
outsb
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
add
add
add
and
push
add
imul
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
imul
data16
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
jne
jb
and
dec
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsb
add
add
js
add
add
add
add
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
outsb
add
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
add
add
roll
add
add
add
aam
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
insb
gs
dec
inc
jne
jns
add
dec
jae
outsb
jne
