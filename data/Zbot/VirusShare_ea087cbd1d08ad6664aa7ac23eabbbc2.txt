push
mov
sub
movl
movl
lea
mov
movl
mov
and
mov
mov
sub
add
mov
lea
mov
mov
and
mov
mov
and
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
sub
imul
mov
movl
mov
push
mov
push
call
add
push
push
push
push
call
cmp
jne
movl
movl
mov
or
mov
sub
add
mov
mov
sub
imul
mov
call
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jl
movl
movl
mov
push
mov
push
call
add
lea
mov
mov
add
mov
cltd
idiv
add
mov
movl
mov
or
add
mov
sub
mov
jmp
push
push
call
add
movl
cmpl
jl
mov
push
mov
push
call
add
mov
pop
ret
int3
int3
push
mov
sub
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
movl
mov
add
mov
cltd
idiv
mov
jmp
movl
movl
mov
and
imul
mov
lea
mov
mov
mov
sub
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
movl
movl
mov
sub
mov
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
or
imul
mov
cmpl
jne
movl
lea
mov
mov
and
mov
imul
mov
mov
or
mov
add
cltd
idiv
add
mov
jmp
call
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
call
movl
mov
imul
mov
movl
mov
cmp
jg
call
jmp
call
call
movl
lea
mov
mov
mov
sub
mov
mov
add
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jl
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
call
movl
movl
lea
mov
mov
mov
add
mov
call
call
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jne
movl
mov
and
imul
mov
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
movl
mov
and
add
imul
mov
movl
cmpl
jl
mov
add
mov
cltd
idiv
add
mov
mov
sub
mov
lea
mov
movl
mov
mov
and
mov
add
cltd
idiv
imul
mov
jmp
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
mov
mov
add
mov
call
movl
mov
add
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
mov
and
add
mov
lea
mov
lea
mov
mov
mov
mov
add
add
mov
jmp
call
mov
pop
ret
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
movl
movl
mov
add
mov
jmp
movl
movl
movl
mov
or
imul
mov
mov
cmp
jl
movl
lea
mov
mov
mov
add
mov
movl
mov
imul
add
mov
jmp
movl
cmpl
je
movl
mov
or
mov
add
cltd
idiv
add
mov
movl
mov
or
imul
mov
movl
movl
mov
or
mov
add
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
cmpl
jne
movl
mov
add
mov
call
movl
movl
mov
sub
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
movl
movl
mov
sub
mov
sub
mov
push
call
mov
movl
mov
push
mov
push
call
add
push
mov
push
call
mov
movl
movl
mov
or
imul
add
mov
call
movl
mov
cmp
jl
mov
push
mov
push
mov
push
call
add
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
imul
mov
jmp
call
mov
push
mov
push
mov
push
call
add
push
call
add
shl
push
push
push
push
call
mov
movl
cmpl
jae
call
movl
movl
movl
mov
or
mov
add
cltd
idiv
imul
mov
call
push
call
add
mov
mov
mov
rorl
mov
xor
mov
mov
mov
movl
cmpl
jg
movl
cmpl
jl
movl
mov
push
mov
push
mov
push
call
add
movl
lea
mov
mov
mov
imul
add
mov
movl
mov
sub
add
mov
jmp
movl
movl
mov
push
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
call
add
mov
push
mov
push
call
add
jmp
movl
movl
lea
mov
lea
mov
movl
mov
mov
or
mov
mov
sub
add
mov
movl
lea
mov
lea
mov
mov
mov
mov
imul
mov
sub
mov
movl
mov
sub
mov
sub
mov
mov
sub
mov
movl
mov
and
sub
add
mov
mov
add
mov
jmp
push
call
mov
movl
mov
push
mov
push
mov
push
call
add
mov
mov
mov
push
mov
push
push
push
mov
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
lea
mov
mov
mov
mov
add
imul
mov
mov
imul
imul
mov
jmp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jl
movl
mov
add
mov
cltd
idiv
mov
movl
lea
mov
mov
and
mov
sub
mov
call
movl
mov
sub
mov
sub
mov
jmp
movl
lea
mov
lea
mov
movl
mov
add
mov
mov
cltd
idiv
mov
lea
mov
mov
and
mov
mov
add
imul
mov
mov
imul
mov
sub
mov
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
mov
and
add
add
mov
mov
pop
ret
int3
push
mov
sub
movl
movl
mov
add
mov
movl
mov
add
mov
cltd
idiv
mov
mov
cmp
je
lea
mov
mov
mov
add
mov
sub
mov
mov
add
mov
cltd
idiv
add
mov
mov
sub
mov
sub
mov
call
movl
lea
mov
mov
and
mov
add
mov
sub
mov
lea
mov
lea
mov
mov
mov
mov
add
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
mov
sub
mov
cmpl
je
movl
mov
add
mov
jmp
movl
mov
imul
mov
call
mov
add
mov
movl
cmpl
je
movl
movl
movl
mov
and
imul
mov
lea
mov
mov
mov
or
add
add
mov
jmp
movl
cmpl
jne
movl
mov
add
mov
jmp
movl
movl
mov
add
mov
cltd
idiv
mov
movl
mov
and
mov
sub
imul
mov
movl
mov
add
mov
cltd
idiv
imul
mov
call
movl
lea
mov
mov
mov
add
add
mov
call
movl
mov
add
add
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
cmpl
je
movl
lea
mov
mov
mov
imul
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
or
mov
sub
mov
call
movl
lea
mov
mov
mov
sub
mov
jmp
movl
movl
movl
mov
add
mov
cltd
idiv
add
mov
call
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
je
call
movl
movl
mov
sub
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
movl
mov
or
add
mov
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
mov
add
mov
movl
lea
mov
mov
and
mov
imul
mov
jmp
movl
movl
mov
mov
movl
movl
mov
imul
mov
movl
mov
sub
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
movl
movl
mov
imul
add
mov
mov
add
mov
cltd
idiv
imul
mov
mov
add
mov
cltd
idiv
imul
mov
mov
and
mov
add
cltd
idiv
imul
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jl
movl
movl
mov
or
sub
mov
sub
mov
jmp
movl
movl
movl
mov
and
add
mov
cmpl
jg
call
call
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
movl
movl
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
add
mov
call
jmp
jmp
movl
movl
lea
mov
mov
mov
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
or
add
mov
movl
cmpl
je
call
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
movl
mov
imul
mov
sub
mov
jmp
movl
lea
mov
mov
mov
sub
mov
sub
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
xor
je
movl
movl
mov
add
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
call
movl
lea
mov
mov
mov
sub
mov
sub
mov
mov
sub
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
and
mov
mov
add
add
mov
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
jmp
movl
mov
push
call
add
call
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
mov
sub
imul
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
call
movl
movl
lea
mov
mov
mov
add
mov
call
call
movl
movl
lea
mov
mov
mov
or
sub
mov
movl
lea
mov
mov
and
mov
add
mov
mov
pop
ret
int3
int3
push
mov
sub
movl
cmpl
jl
movl
movl
mov
add
imul
mov
call
jmp
movl
movl
mov
cmp
jg
movl
movl
lea
mov
mov
and
mov
sub
mov
movl
movl
mov
add
mov
cltd
idiv
mov
jmp
movl
movl
lea
mov
mov
mov
imul
mov
call
call
movl
movl
mov
and
imul
add
mov
call
call
movl
movl
mov
and
mov
and
sub
mov
call
movl
movl
mov
or
imul
mov
sub
mov
lea
mov
mov
and
mov
mov
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
sub
mov
movl
mov
add
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
cmpl
jne
call
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
jmp
movl
lea
mov
mov
mov
and
imul
imul
mov
movl
cmpl
je
call
jmp
lea
mov
mov
mov
sub
add
mov
call
movl
lea
mov
lea
mov
mov
mov
and
mov
imul
mov
movl
lea
mov
mov
mov
imul
mov
sub
mov
movl
mov
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
movl
lea
mov
mov
mov
sub
mov
sub
mov
call
movl
mov
add
mov
cltd
idiv
mov
movl
mov
and
mov
add
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
imul
mov
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
mov
add
mov
sub
mov
jmp
movl
movl
mov
imul
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
add
mov
lea
mov
lea
mov
mov
mov
or
mov
mov
or
sub
mov
sub
mov
movl
movl
mov
add
mov
cltd
idiv
add
mov
lea
mov
mov
add
mov
cltd
idiv
mov
mov
and
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jl
movl
movl
lea
mov
mov
mov
and
mov
sub
mov
cmpl
jg
movl
lea
mov
mov
and
mov
imul
imul
mov
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
and
add
add
mov
movl
movl
mov
and
add
imul
mov
jmp
call
jmp
movl
movl
lea
mov
mov
mov
or
imul
add
mov
movl
mov
add
mov
cltd
idiv
mov
movl
mov
sub
imul
mov
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
mov
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
xor
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
jmp
int3
int3
push
mov
push
mov
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
jmp
jmp
jmp
jmp
lods
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
addb
add
xor
add
push
xor
add
add
add
pop
xor
add
add
sbb
add
outsb
xor
add
add
mov
add
sahf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
jbe
inc
jb
cmp
push
arpl
gs
push
popa
insl
jo
gs
jb
je
outsb
cmp
pop
outsb
imul
outsb
gs
xor
cs
insb
add
add
push
imul
insb
insb
outsl
arpl
add
add
add
inc
inc
inc
sub
cmp
xor
add
add
lcall
inc
add
inc
add
add
add
add
add
add
push
xor
add
xor
add
xor
add
add
xor
add
xor
add
add
fidivl
add
in
xor
add
xor
add
add
add
add
addb
add
xor
add
push
xor
add
add
add
pop
xor
add
add
sbb
add
outsb
xor
add
add
mov
add
sahf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
add
add
inc
bound
addr16
jb
jae
outsb
je
pop
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
insl
jae
cs
insb
add
popa
bound
add
jae
jb
outsb
add
insl
jae
arpl
cs
insb
add
lds
pop
arpl
js
je
testb
gs
je
dec
add
arpl
inc
imul
pop
arpl
imul
imul
arpl
insb
outsb
add
pop
pop
addr16
popa
imul
cmp
pop
imul
insl
add
gs
jae
jb
popa
je
gs
add
mov
pop
popa
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
test
pop
pop
jo
pop
insw
outsl
fs
cwtl
add
jae
je
popa
jo
pop
je
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
mov
pop
outsl
outsb
gs
je
in
add
js
gs
pop
push
gs
add
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
dec
sbb
add
add
add
dec
jecxz
push
pop
xor
movlps
cli
or
add
cli
add
dec
adc
sbbl
xor
lcall
cmp
push
add
dec
sbb
or
pop
add
shll
and
push
js
mov
jnp
clc
lret
adc
negb
popa
cs
cmp
xor
adc
les
pop
adc
fs
jp
sbb
outsb
xchg
cld
popa
sub
rcll
adc
aaa
add
fisubrl
outsl
inc
jg
push
sub
mov
sub
scas
add
pop
sub
ret
shlb
dec
int3
ljmp
xor
add
xchg
push
xchg
mov
sub
or
and
mov
fmuls
dec
imul
adc
push
out
and
ss
adc
or
fsubl
dec
push
or
fstl
ret
mov
dec
out
ret
push
call
cwtl
or
test
hlt
shlb
stos
mov
data16
or
or
push
xchg
sub
inc
lret
ret
mov
pop
enter
loop
and
cmp
inc
adc
pushf
inc
or
call
sub
xchg
pop
push
xchg
jl
ds
and
mov
clc
lcall
and
or
cltd
push
push
pop
xchg
push
sti
cmp
inc
xor
inc
push
or
fsubrs
cld
mov
add
adc
adc
add
xor
bound
out
inc
aam
adc
xchg
mov
pushf
xchg
gs
ret
xchg
sbb
jbe
xor
dec
add
or
inc
push
bound
pop
lods
and
add
cmp
or
adc
push
call
outsb
dec
stos
andb
push
xchg
add
bound
adc
mov
loop
push
into
inc
les
push
mov
aam
or
leave
and
jne
shrb
lret
sbb
or
push
test
sahf
mov
int3
or
push
pop
jb
sub
pop
adc
outsb
add
int3
cmc
pop
test
les
aam
scas
aaa
mov
fs
ja
push
bound
cmp
dec
dec
sbb
and
adc
fsubl
cld
mov
add
outsb
pop
dec
or
or
jmp
inc
pop
rclb
outsb
sahf
dec
pop
lret
sub
ret
out
and
sbb
outsl
pop
pop
cli
rolb
xchg
cmpsb
push
xchg
xchg
bound
push
mov
jle
sub
ret
push
adc
sbb
xchg
stos
push
mov
mov
movsb
movsb
fdivl
inc
ret
or
sub
and
pop
jb,pn
xor
push
xchg
push
push
or
call
xchg
xchg
les
ds
and
mov
cmp
push
adc
cmp
enter
or
scas
cwtl
sbbl
or
xchg
mov
jle
push
mov
jnp
stos
cmp
lock
fs
inc
rorb
sub
sub
push
sub
pop
and
femms
ret
and
scas
dec
push
push
dec
inc
push
fmuls
adc
push
mov
dec
mov
inc
cs
adc
sub
roll
or
jle
add
mov
push
adc
lcall
cmp
sbb
imul
adc
mov
add
and
pop
xchg
ret
cmpsb
adc
or
adc
push
xchg
xchg
add
cmp
lret
movsl
xor
jl
rolb
jb
push
mov
add
sub
mov
mov
clc
add
dec
lods
mov
cld
cmp
mov
xchg
push
pop
and
lock
mov
bound
mov
mov
adc
mov
add
mov
sbb
shll
xchg
out
fmul
mov
iret
sbb
xchg
dec
mov
cmpb
push
imul
xchg
and
lret
sbbb
jle
cmp
add
inc
and
test
mov
push
stos
pop
jno
jnp
into
add
dec
iret
lods
dec
outsl
cmpsb
or
out
jl
or
mov
mov
and
add
jae
dec
imul
cmpb
dec
loope
dec
mov
leave
js
and
mov
aam
loope
pop
fimuls
add
adc
mov
cmp
lret
mov
daa
inc
xor
ja
adc
sub
pop
nop
push
ret
add
mov
and
cmp
xchg
lcall
sbb
je
push
aaa
in
sub
ss
adc
lea
popf
jmp
rolb
push
lea
sahf
mov
in
iret
push
fwait
or
xchg
jecxz
add
bswap
xchg
dec
xor
ret
sbb
push
insl
jb
xchg
and
daa
sbb
inc
inc
jg
mov
xor
sub
call
inc
xor
and
movaps
pop
adc
aas
fnstenv
cmpl
imul
popa
add
mov
sarb
bound
jle
cmpsb
jle
test
fs
jle
fs
jle
lods
jle
fs
jle
fs
jle
fs
dec
fs
xchg
sbb
lahf
je
mov
adc
mov
out
std
mov
loope
std
mov
stc
xor
mov
repz
jecxz
out
std
std
out
std
enter
lret
std
int3
out
std
iret
out
std
shl
pop
std
shl
or
shl
or
add
fnstenv
repz
cli
repz
push
pop
mov
repnz
div
ud1
repz
jmp
dec
mov
out
repz
mov
jecxz
jno
loope
arpl
in
es
mov
inc
aam
sub
scas
add
push
jle
jl
insl
mov
mov
xor
les
mov
add
insb
clc
mov
fildll
adc
fimull
mov
mov
mov
fwait
dec
pop
cmp
adc
push
cs
ss
and
sub
mov
sbb
sbb
les
and
jge
dec
imul
pop
dec
aam
pop
jo
jl,pn
or
jl
xor
or
ss
test
xorl
inc
out
loope
shlb
inc
jmp
xchg
dec
call
je
jae
mov
addl
outsb
mov
sbb
mov
nop
inc
ljmp
mov
cmpsb
clc
shl
clc
jmp
test
jmp
loop
out
stc
stos
in
lods
scas
xchg
scas
lods
xchg
scas
mov
mov
call
xchg
mov
in
xchg
mov
loop
mov
loopne
mov
loope
mov
out
mov
sti
xchg
mov
call
mov
jp
and
mov
ds
ds
xor
lret
stc
loop
jecxz
stc
int
cmp
jecxz
stc
iret
jecxz
stc
shl
xchg
aad
xchg
fsub
test
fninit
test
fsubp
lcall
jecxz
stc
loope
cltd
stc
loop
sahf
stc
in
lahf
stc
out
pushf
stc
call
jecxz
stc
ljmp
stc
in
jecxz
stc
in
jecxz
stc
out
jecxz
stc
repz
stc
fwait
adcb
or
icebp
repnz
cmc
ljmp
cmp
and
mov
and
loop
clc
mov
es
lea
sub
and
clc
and
clc
and
sub
xchg
sub
clc
test
das
clc
lcall
clc
cwtl
loop
clc
cltd
loop
clc
sahf
loop
clc
lahf
loop
clc
pushf
loop
clc
popf
loop
clc
xchg
loop
clc
xchg
loop
clc
nop
loop
clc
stos
loop
clc
stos
loop
clc
test
inc
clc
test
loop
clc
scas
loop
clc
lods
loop
clc
lods
loop
clc
mov
loop
clc
mov
loop
clc
cmpsb
loop
clc
cmpsl
loop
clc
movsb
loop
clc
movsl
loop
clc
mov
loop
clc
mov
out
inc
xor
push
inc
in
call
push
inc
loopne
push
inc
int3
clc
push
inc
in
push
inc
sar
inc
clc
clc
pop
pinsrw
lods
lds
xchg
ret
inc
lds
cmpxchg
inc
mov
or
mov
sbb
sahf
test
inc
mov
jns
mov
lds
icebp
rorl
mov
dec
out
mov
std
inc
jmp
icebp
inc
cmp
icebp
inc
cmp
icebp
inc
cmp
icebp
add
mov
icebp
jnp
or
or
ret
jmp
icebp
jg
icebp
push
jmp
icebp
jns
lret
jmp
icebp
jb
into
cmp
les
cmp
dec
fnstsw
lcall
pushf
fldl
cltd
fldl
sahf
fiadds
xchg
fldl
pushf
fnsave
xchg
fisttpll
fisttpll
nop
fidivs
movsb
fisttpll
xchg
fisttpll
xchg
fimuls
mov
push
jl
fs
xchg
mov
cli
mov
lcall
xchg
mov
adc
inc
les
add
adc
push
sbb
pop
push
ljmp
push
lock
push
or
and
pop
and
pop
sbb
pop
adc
pop
sub
loop
sub
pop
pop
push
loopne
sub
adc
push
out
daa
push
in
sub
push
xchg
pop
mov
rorl
stos
mov
repnz
mov
ret
mov
movl
push
repnz
xchg
test
scas
mov
scas
icebp
lret
icebp
nop
mov
lods
repnz
mov
icebp
mov
mov
icebp
xchg
mov
fdiv
xchg
mov
fdivp
xchg
mov
fdiv
xchg
mov
shl
cltd
mov
shl
fwait
mov
icebp
popf
mov
aam
lahf
mov
lret
mov
enter
into
icebp
loope
iret
repnz
sub
repnz
popf
frstor
xchg
test
mov
test
fnsave
lods
rcrb
call
push
mov
pop
jmp
fs
subl
pop
out
lea
pop
addb
pop
mov
hlt
pop
mov
imulb
mov
clc
pop
addb
sar
cmp
icebp
stos
lret
movsb
icebp
push
movsl
icebp
imul
icebp
dec
jmp
icebp
jmp
test
jmp
sti
stos
icebp
in
jmp
icebp
shr
lods
icebp
xlat
jmp
icebp
aam
scas
icebp
ljmp
lock
mov
mov
xor
shlb
jl
ss
ss
jl
ss
enter
leave
ss
ss
jl
push
into
and
push
enter
jnp
ficoml
pop
fistl
fcoml
pop
fstl
pop
ficoms
pop
fists
pop
out
push
xor
loopne
stc
idiv
fcomps
sti
cld
fisubl
std
jo
aaa
push
popf
decb
fnstsw
push
fsubl
jecxz
out
in
push
jl
xor
jl
adc
push
xchg
jmp
jecxz
aas
jmp
pop
mov
in
jl
data16
pop
jbe
out
sbb
icebp
add
bnd
data16
data16
push
sub
in
lock
add
or
sarl
pop
lds
xchg
or
jle
mov
adc
mov
adc
and
outsb
mov
and
lds
mov
test
push
inc
test
pop
lds
pop
lds
nop
and
ljmp
imul
pop
pop
imul
pop
or
fadd
and
shlb
mov
xlat
mov
scas
inc
aad
sbb
lret
push
jecxz
jmp
leave
jecxz
test
int3
clc
xor
ret
lods
insl
rol
outsl
icebp
mov
icebp
iret
stos
icebp
scas
mov
cli
icebp
stos
imul
dec
scas
fnstsw
and
stos
mov
es
in
lock
ds
je
lock
sub
test
dec
repnz
imul
pop
pop
add
test
pop
test
or
stc
roll
pop
cmp
cmp
clc
cmp
nop
push
das
cmp
or
dec
mov
mov
mov
movsl
dec
fadd
pop
fxch
pop
xchg
fmulp
pop
jnp
sbb
xchg
movsb
aam
in
aad
or
pop
clc
push
int3
and
push
ret
push
shlb
push
pop
mov
dec
push
or
push
shlb
loope
fwait
data16
cwtl
data16
cltd
data16
sahf
in
lahf
data16
pushf
out
popf
callw
jmpw
ljmpw
jl
data16
jl
in
jl
data16
jl
out
jl
data16
data16
jl
data16
data16
data16
jl
data16
jl
data16
idivl
clc
jl
data16
jl
data16
or
dec
adc
xchg
mov
dec
frstor
dec
frstor
movl
stos
pop
mov
stos
pop
inc
add
lods
push
mov
scas
pextrw
mov
adc
stos
adc
stos
out
adc
test
adc
test
adc
lds
sbb
mov
sbb
mov
sbb
cmpsb
sbb
lds
and
fimull
and
fmuls
iret
ret
fimuls
es
daa
sub
rorb
sub
rorb
sub
sub
das
xor
lret
xor
enter
leave
xor
into
xor
aaa
cmp
ret
cmp
rorb
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
xor
mov
into
xor
mov
iret
xor
lds
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
lds
inc
lds
popl
test
inc
lds
popl
scas
popl
lods
popl
lods
vpcmov
lds
dec
lds
dec
lds
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
arpl
leave
popl
ret
into
orb
es
mov
sbb
adc
fcmovnu
xchg
cltd
loop
inc
xchg
fsubp
push
clc
bswap
clc
loope
ret
subl
movntq
sub
adc
jmp
cmpsb
cltd
loop
inc
xchg
out
insl
je
jnp
mov
jmp
jg
call
popl
out
mov
in
xchg
ret
loop
mov
inc
outsl
jmp
in
lods
loop
adc
inc
adcl
ret
js
movsb
jecxz
mov
mov
xchg
out
push
cmpsb
inc
in
cmp
or
and
int3
fistl
inc
or
dec
inc
ds
inc
mov
dec
and
pop
push
sbb
add
xchg
push
push
xchg
push
dec
insl
ds
and
push
and
push
and
dec
adc
jnp
and
bound
sbbb
cmp
dec
cmp
or
jnp
adc
mov
fisttpl
and
add
inc
adc
xchg
es
sarb
daa
and
mov
lcall
adc
jae
sahf
dec
addr16
and
imul
stos
xchg
orb
inc
cmp
outsl
pop
mov
xchg
add
mov
sub
and
add
inc
adc
xchg
dec
std
ds
mov
repz
imul
sbb
jne
flds
xchg
jbe
ja,pt
mov
jns
ret
pusha
adc
outsb
popa
dec
lret
mov
addr16
and
or
xchg
xor
cmp
or
mov
add
cltd
test
adc
fcmovne
and
test
mov
add
rep
imul
pop
fcomi
and
push
negb
jge
fs
pop
outsl
bound
cmp
push
xor
inc
dec
push
push
inc
inc
pop
push
sahf
adc
jo
push
jae
and
insb
out
aas
cmc
jmp
pop
ljmp
scas
insb
cltd
loope
inc
push
sub
es
cltd
adc
or
jbe
or
pop
and
push
ret
ljmp
lea
call
adc
xchg
dec
mov
hlt
mov
fimuls
rol
test
or
push
add
ret
jecxz
sub
jle
push
scas
mov
cmp
adc
sarb
sub
stos
into
or
push
ds
dec
adc
adc
pop
pop
xchg
daa
pushf
sub
pop
pop
xchg
adc
mov
cltd
fisttpl
jbe
or
mov
xor
push
xchg
hlt
mov
mov
adc
jb
and
inc
inc
sbbl
adc
add
cmp
or
pop
dec
and
jp
xchg
or
in
inc
pop
mov
adc
icebp
sarl
adc
sbb
pop
mov
adc
xchg
mov
add
adc
lret
adc
mov
xor
xchg
leave
jmp
enter
sub
or
adc
fnop
push
inc
mov
push
scas
adc
out
xchg
cwtl
mov
and
pop
mov
adc
in
adc
iret
fwait
xacquire
sbb
xor
pusha
push
pop
mov
jle
or
mov
pop
nop
and
fcmovbe
adc
sbb
js
std
dec
nop
mov
sub
lods
cs
adc
lret
into
aam
mov
leave
adc
enterw
loope
mov
dec
sbb
inc
add
inc
add
xchg
inc
xor
mov
and
push
das
daa
lcall
nop
jae
sbb
cli
adc
sti
stos
int3
aam
mov
sub
ljmp
inc
iret
dec
mov
jno
adc
subb
adc
or
ljmp
cltd
outsb
cmp
push
xchg
or
adc
cmpsb
mov
cltd
clc
pop
mov
adc
sbb
scas
pop
pop
pop
xchg
jecxz
push
xor
mov
or
fsubrs
aam
roll
adc
fcmovnu
or
sbb
and
lret
imull
rol
mov
pop
pop
decl
ret
fcmovb
adc
xchg
xor
mov
xor
or
test
dec
and
mov
dec
clc
inc
push
sbb
lahf
adc
xor
xlat
mov
mov
adc
and
adc
mov
jg
mov
bound
inc
mov
push
das
stos
adc
push
mov
xchg
scas
mov
inc
rorl
mov
outsl
adc
je
clc
ds
push
pop
mov
in
lock
jmp
mov
lret
cs
outsb
sub
pop
test
push
adc
add
mov
adc
pop
mov
adc
loope
dec
cmp
push
fldcw
inc
dec
sar
adc
rcl
and
imul
shrb
xchg
dec
lods
mov
lret
je
cmp
rolb
xor
mov
jp
mov
sarb
adc
lea
or
cs
xor
mov
inc
adc
xor
pop
sub
popf
lcall
mov
sti
outsb
mov
js
adc
in
xchg
mov
adc
js
dec
and
push
xchg
add
fs
scas
dec
enter
test
push
cltd
adc
adc
es
xchg
push
adc
stos
sub
lret
and
adc
pop
inc
cwtl
xor
or
adc
nop
sub
cwtl
icebp
and
inc
jecxz
jp
adc
mov
mov
enter
out
data16
adc
dec
loopne
insb
or
ret
loop
sub
loopne
and
jecxz
push
dec
lcall
movsb
mov
mov
pop
ret
and
fiadds
fnstsw
adc
in
mov
cs
dec
add
inc
pop
xchg
ljmp
adc
push
stos
bound
or
cmp
push
mov
int3
iret
scas
or
adc
mov
xor
adc
adc
cltd
adc
mov
jns
ret
setno
inc
mov
icebp
and
fsubs
xchg
pop
inc
mov
mov
push
sbb
sbbb
or
xchg
jb
mov
hlt
ficomps
inc
jb
nop
pusha
sbb
adc
rorl
call
xchg
enter
jne
add
pop
addr16
mov
or
cli
or
adc
cmp
jo
jb
orl
dec
inc
inc
adc
lahf
loop
and
push
xor
les
adc
stc
mov
cli
in
fsubrl
xchg
add
jae
js
adc
in
ret
push
test
popa
xchg
xor
ficoms
sub
xchg
inc
pop
cmp
lcall
jns
imul
repnz
xor
lret
jbe
enter
mov
inc
scas
out
mov
xchg
mov
movsl
mov
jmp
add
sub
lcall
xorb
adc
cmp
mov
add
xor
in
pop
mov
mov
and
mov
stos
test
out
add
lahf
inc
cmp
gs
push
dec
test
cmc
xlat
sbb
and
lods
pop
in
adc
inc
xchg
cmpsl
push
or
fs
dec
add
lret
push
fmull
or
mov
cmp
push
push
shrl
ret
js
out
jns
subb
ljmp
add
fs
cmpsb
fsubr
mov
dec
xchg
mov
scas
pushw
dec
sbb
mov
int3
fildl
cwtl
aam
clc
add
fstps
les
into
mov
fistpll
lods
sbb
or
add
dec
or
lahf
sub
inc
out
and
jl
int
fwait
test
sbb
inc
jle
inc
jmp
add
ret
sbb
cli
fists
inc
or
mov
mov
cmp
mov
testb
cwtl
cs
push
gs
pop
insb
cld
mov
std
cmp
add
cmovbe
mov
rorl
mov
mov
pop
mov
lret
pop
jne
add
in
mov
adc
add
or
add
aam
lods
lods
imul
call
push
outsl
fistps
or
pop
sub
ret
jne
sbb
adc
push
hlt
add
dec
and
lcall
shl
xlat
pop
test
movl
or
adc
dec
push
pusha
sbb
push
or
out
pushf
dec
ljmp
mov
jbe
subl
jnp
mov
cmp
push
arpl
cmp
les
mov
jb
repnz
imul
mov
xor
and
les
imul
push
out
addr16
mov
mov
jno
cld
in
int
dec
lcall
push
popf
cli
sbbl
aaa
or
mov
fsubrp
leave
cmp
or
mov
addr16
into
les
pop
scas
adc
dec
movsb
les
adc
jno
push
inc
jne
or
push
cmp
insb
insb
push
push
jl
pop
cmc
jne
inc
cmpl
sbb
and
inc
hlt
sbb
or
imul
mov
adc
js
les
xor
push
push
xchg
and
jg
jno
inc
xor
push
push
sub
fcompl
das
dec
or
push
rcr
mov
cmp
inc
fwait
push
lcall
xchg
inc
insb
push
daa
pop
and
adc
or
adcl
sub
test
or
xor
outsb
addr16
pop
les
pop
push
ret
jbe
in
and
jno
push
jge
cmp
stc
xchg
into
frstor
jnp
test
xor
and
in
dec
mov
lret
loop
sti
push
push
inc
cmpsl
cmp
push
pusha
cmp
stos
mov
cld
inc
and
shl
fnstcw
cmp
add
dec
loop
stos
pop
iret
mov
and
stos
imul
in
xchg
in
popw
xchg
xlat
adc
push
mov
xchg
xchg
cmp
clc
iret
adc
sbb
xorl
loop
jb
lahf
and
push
test
test
inc
mov
pop
fiaddl
popf
ret
jo
cmpsb
cmp
jb
dec
arpl
jns
outsl
cld
xchg
ret
inc
nop
xchg
jne
imul
cmp
xor
scas
in
push
mov
and
enter
xlat
loop
jb
or
pop
cmp
mov
in
loop
movsb
pop
loop
call
mov
les
xchg
cmpsl
ret
cld
test
cmp
xchg
or
cmp
cs
lods
cmp
clc
out
js
cmpsb
xchg
in
mov
and
and
aam
mov
loop
jb
and
sub
sub
loope
mov
and
imul
sub
xchg
xchg
jns
adc
loop
inc
xchg
sbb
cmp
sub
push
pop
adc
cli
jb
push
mov
and
mov
ret
cmpsl
shrl
cmc
les
ret
shrl
xchg
aaa
aad
cmp
outsb
cmpb
add
xchg
mov
xbegin
mov
push
and
add
loop
jb
push
and
aad
loop
shlb
in
jp
jp
scas
or
add
arpl
push
and
lds
cmp
cmp
xchg
icebp
xchg
cmp
lret
mov
and
mov
and
jecxz
push
fsubrl
cmpsl
mov
jb
mov
iret
cli
jo
fisubl
loop
imul
hlt
mov
add
ret
imul
sbb
test
cmp
xchg
mov
imul
pushf
mov
ret
jo
mov
xchg
sti
loop
jb
clc
and
cwtl
mov
cmp
loop
enter
and
xchg
gs
scas
fwait
imul
cmp
int
xchg
out
mov
cmp
pop
xchg
cmp
js
out
lds
clc
adc
loop
jb
or
mov
sahf
inc
push
les
sub
test
cmp
test
test
xchg
lret
insl
push
cmp
sub
xchg
pop
pop
clc
cmp
orl
sti
push
push
inc
sbb
add
jecxz
mov
pop
js
inc
add
inc
adc
xchg
adc
addr16
pop
in
ljmp
dec
pop
fisttpl
and
or
adc
inc
dec
cmp
push
out
mov
push
xchg
or
sbb
and
sub
ret
adc
cmp
fstpt
and
or
inc
cmp
out
addr16
negb
and
add
jnp
aam
adc
dec
fnstsw
cmc
sub
mov
adc
push
movsb
inc
and
or
xchg
push
aam
mov
xor
add
dec
fidivrs
iret
and
push
inc
lret
pop
lock
mov
dec
mov
fisubl
mov
mov
and
or
xchg
push
shll
popa
mov
pop
add
add
xor
gs
loope
call
mov
mov
mov
xchg
outsb
xor
fstpt
jg
sub
jle
loope
addl
jns
mov
add
push
xchg
cld
in
pop
insb
outsb
ret
inc
adc
mov
or
adc
inc
cmp
cli
mov
pop
loopne
scas
add
xchg
jmp
push
xchg
aad
ret
icebp
cmp
push
ret
fstl
jl
cmp
fildl
fcoml
fidivrl
inc
fmuls
pop
and
add
xchg
stc
push
xchg
xchg
pop
adc
daa
adc
pop
cmp
ret
test
dec
cmpsl
fistl
and
or
xchg
add
inc
xor
jp
ficompl
and
add
xchg
ret
push
xchg
ja
pop
ds
and
pop
arpl
insl
adc
call
and
sub
push
xlat
inc
loope
jbe
sbbb
inc
push
xchg
lods
dec
sahf
mov
shr
jb
ret
lods
adc
outsb
mov
fldt
mov
in
int3
and
or
inc
cmp
fadds
jns
sbb
fsts
adc
xchg
pop
dec
pop
andb
mov
jne
pop
mov
ret
adc
sbb
dec
mov
fisubrs
adc
mov
inc
pushf
cmp
push
pop
sahf
and
add
mov
dec
mov
mov
adc
adc
dec
iret
fildl
mov
lret
loopne
sti
xchg
or
inc
jns
test
pavgw
lahf
add
xchg
push
push
xchg
inc
dec
lds
xchg
and
mov
mov
in
adc
outsb
rorb
or
mov
jmp
or
pop
push
in
inc
adc
or
and
add
xchg
sbb
inc
adc
xchg
pusha
dec
lret
ds
and
pop
nop
out
ret
pop
adc
mov
and
stos
or
xchg
jo
or
push
ret
mov
js
in
popl
xchg
out
xorb
test
outsb
jbe
ljmp
jp
in
or
outsl
cmp
mov
mov
and
add
xchg
dec
push
xchg
mov
jo,pt
je
mov
sub
dec
push
ret
in
adc
fisttpl
mov
pushf
shll
sahf
xchg
stos
push
clc
inc
sarb
adc
pop
mov
add
into
push
xchg
sub
mov
jmp
mov
inc
pop
mov
cltd
outsb
pop
dec
pand
and
push
push
inc
sub
jl
cmp
jno
xor
fists
adc
decb
ds
and
lret
pop
leave
pop
rcll
mov
mov
and
or
inc
cmp
rclb
cmp
testl
inc
adc
xchg
in
mov
mov
pop
pop
add
ret
cmp
xchg
outsb
add
fistpl
and
lret
xchg
mov
cmp
inc
cltd
mov
pop
add
pop
push
xchg
push
dec
jno
and
mov
test
dec
adc
popa
add
cld
dec
cmp
pop
outsb
stos
dec
lret
and
or
xchg
add
inc
adc
iret
stos
lcall
xor
push
xchg
inc
push
xchg
add
ds
and
lahf
mov
ret
pop
adc
and
or
inc
pop
cmp
int
enter
push
and
add
xchg
inc
push
xchg
les
jle,pt
ja
fs
pop
sbb
outsb
push
dec
sub
cmp
mov
mov
xchg
repnz
adc
xchg
cmp
inc
rorl
add
xchg
and
sbb
adc
xchg
ret
lods
and
mov
enter
insl
gs
and
add
test
inc
mov
pusha
mov
add
sbb
xor
adc
xchg
mov
mov
call
mov
ret
xchg
adc
outsb
push
data16
add
or
xchg
sub
inc
sbb
fisttpl
cwtl
add
xchg
imul
mov
ds
and
push
mov
xor
mov
fistl
out
or
push
cmc
cmp
mov
add
jle
mov
gs
push
or
pop
imul
inc
addl
dec
xor
and
cmp
div
xchg
dec
cld
add
xor
push
cmp
mov
mov
push
jge
pop
dec
adc
ret
mov
loope
sbb
lret
push
lock
pop
add
jmp
sbb
insl
mov
aam
inc
fiaddl
hlt
cltd
sub
sub
cli
imul
push
outsl
ret
arpl
pop
xor
mov
dec
imul
stos
push
mov
ret
cmpw
cmp
aam
dec
jns
add
sbb
cwtl
xchg
push
jns
bound
cs
loopne
and
scas
sbb
fwait
mov
push
adc
cmpb
push
stos
mov
add
leave
and
add
loop
test
dec
lock
icebp
add
dec
xor
lds
xor
xor
int
cmp
cmc
lcall
pop
sbb
mov
arpl
repnz
pop
add
mov
push
rorl
aad
jle
pop
mov
and
popf
lret
mov
xor
add
js
testb
adc
jno
mov
mov
and
push
cmp
fadd
mov
inc
pop
cld
mov
pop
ljmp
aam
push
push
push
and
in
mov
add
or
ja
ret
sahf
stc
cli
repnz
mov
mov
std
sbb
jb
enter
mov
test
clc
inc
fs
xchg
adc
adc
mov
std
dec
push
sti
push
iret
sbb
push
ja
aad
jl
pop
fldcw
inc
cmpsb
jb,pn
pop
imul
ss
lret
and
and
xchg
inc
jge
add
hlt
xchg
sahf
push
adcl
ja
sbb
add
loop
or
rcr
or
ljmp
sbb
inc
sub
dec
call
mov
repz
jecxz
push
scas
push
lahf
add
aas
sbb
mov
lahf
mov
inc
jb
negb
sti
sbb
xor
mov
arpl
imul
xor
adc
adc
jp
and
add
or
dec
mov
ja
scas
sub
sbb
aam
dec
repz
sbb
in
inc
pushf
push
jecxz
fildl
push
lcall
xchg
repz
add
inc
test
jle
mov
mov
addr16
mov
popf
dec
rorl
sbb
inc
sub
movsl
mov
les
es
lods
mov
cmp
inc
sbb
xchg
add
xchg
mov
div
enter
dec
test
hlt
jae
aad
sbb
addr16
enter
adc
cmpl
push
cmpsl
outsb
mov
mov
cmp
inc
lcall
dec
and
decl
fs
dec
aad
mov
lods
sbb
aam
test
jl
xor
aas
in
sub
fisubrs
xor
cld
add
aaa
cmpsb
enter
stos
mov
fdivrs
add
add
int
in
jg
sbb
jbe
in
das
inc
pop
int3
lea
mov
fildll
lret
add
push
fldt
sbb
add
add
das
pop
jae
sbb
adc
stc
jge
rclb
mov
add
repz
sbb
insl
xlat
or
jnp
pop
jmp
jp
mov
adc
mov
mov
leave
dec
lods
popa
in
sti
sbb
cmpsl
sbb
sti
es
push
xchg
inc
add
mov
aam
mov
sbb
int
adc
lds
scas
xchg
pushf
lret
fwait
mov
ret
sub
jmp
pop
ret
and
inc
xor
shl
test
pop
cmp
dec
imul
stc
les
fs
pushf
add
nop
popa
xor
test
sub
push
ds
or
adc
xchg
ret
dec
fdivrl
lret
xchg
mov
dec
adc
jno
lret
xchg
add
inc
sarb
loope
dec
or
jmp
xchg
sub
cltd
xchg
sub
ds
xor
mov
ret
jl
subb
inc
fstpt
mov
cli
test
or
int
mov
imul
and
add
xchg
repnz
xchg
mov
and
mov
aad
pop
int
ret
add
dec
jne
sub
mov
and
xchg
mov
cmp
outsl
cld
and
add
xchg
int3
push
xchg
aam
ret
jmp
ret
rcll
dec
fistpl
dec
das
mov
push
inc
mov
cmp
rolb
adc
inc
adc
xchg
imul
mov
push
pop
or
ret
mov
dec
std
mov
xchg
cmp
faddl
arpl
or
les
loop
adc
xchg
dec
dec
mov
mov
pop
cli
sbb
ficoms
out
outsb
ret
fcmovnu
and
test
sub
scas
cmp
pop
pop
repnz
add
xchg
test
stc
xchg
cmp
outsb
and
mov
test
pop
add
jg
loop
adc
push
ret
into
and
or
inc
in
loop
jp
mov
add
xchg
push
push
xchg
lea
bound
jecxz
ret
mov
dec
fldt
mov
inc
push
and
or
xchg
push
jp
les
mov
movsb
das
mov
ret
push
xchg
ljmp
pop
sbbl
push
and
or
inc
cmp
in
jg
imul
pop
add
adc
jmp
daa
xor
lret
push
pop
xlat
mov
outsb
inc
dec
rcr
and
fisttpll
stc
xchg
adc
cmp
leave
cmp
add
dec
push
xchg
lods
dec
jo
dec
and
xor
ret
mov
dec
clc
mov
leave
add
bound
ret
adc
sbb
cwtl
inc
adc
xchg
repnz
test
hlt
and
mov
mov
push
jmp
sti
adc
outsb
testb
test
and
nop
out
inc
dec
inc
mov
sti
pop
inc
add
xchg
inc
push
xchg
pop
dec
movsb
or
mov
in
ret
pushf
adc
push
cmp
in
mov
iret
cmp
or
inc
sub
mov
mov
push
xchg
or
and
mov
pusha
dec
pop
ret
cmp
jle
and
and
xchg
push
test
adc
outsb
daa
mov
pop
mov
xchg
push
push
xchg
dec
dec
cs
jne
sub
ficompl
or
mov
dec
mov
push
xchg
xchg
pop
push
mov
sub
pop
or
add
js
mov
mov
sub
pop
call
push
xorl
xchg
clc
push
and
data16
rorb
push
add
xchg
push
xchg
lods
and
mov
ret
xor
outsb
outsb
dec
rcr
pop
and
sub
or
pop
push
cmp
insl
cmp
fildll
imul
xchg
xchg
repz
mov
xor
or
dec
mov
sbb
shrl
mov
sahf
and
mov
push
daa
inc
loope
popf
xor
insb
and
add
xchg
xor
sub
ljmp
pop
inc
xchg
ret
xchg
adc
ja
je
movsb
and
mov
mov
fistps
and
add
xchg
fs
xchg
orl
mov
dec
xor
push
ret
add
dec
aaa
fcmovnu
and
push
push
inc
test
jns
dec
jae
xor
pop
and
add
dec
mov
mov
and
and
shll
mov
sbb
and
or
sbb
shlb
add
adc
xchg
orb
adc
adc
scas
pop
rcl
mov
inc
jge
cmpsb
push
push
inc
movsb
cmp
xchg
pop
or
add
inc
adc
xchg
mov
push
ds
and
mov
sti
ret
jl
and
dec
in
mull
and
sub
xchg
fstl
inc
add
mov
xchg
and
add
xchg
xchg
push
xchg
cld
dec
mov
mov
jb
lret
out
adc
and
or
xchg
jae
ret
inc
pop
cmp
lods
lahf
aas
mov
mov
lcall
mov
ret
test
aas
outsb
mov
and
fimull
cmpsl
xchg
dec
push
in
inc
xchg
xchg
stos
pop
cmc
mov
pop
mov
add
pop
push
xchg
xchg
and
mov
ret
loop
popa
inc
and
or
xchg
pop
push
movl
mov
jb
sbb
push
xchg
test
mov
pop
lret
mov
arpl
es
adc
xchg
adc
push
inc
and
out
sbb
inc
sbb
push
cltd
mov
aas
sbb
add
addr16
dec
loope
lock
dec
in
dec
jae
sbbb
out
cmp
call
pop
rorb
jb
jmp
daa
add
aam
add
push
sub
ja
sbb
jae
mov
push
stos
mov
repz
mov
dec
cmp
loop
sbb
and
inc
cmp
popa
sbb
es
cs
pusha
mov
movsl
pop
add
jp
or
push
test
push
pop
pop
bndstx
xchg
inc
xor
push
and
inc
inc
add
push
stos
mov
adcb
nop
push
push
mov
inc
jecxz
mov
cmpsl
push
xchg
cmc
inc
and
add
mov
jnp
push
imul
dec
jb
sbb
aam
mov
sbb
sub
inc
flds
rorb
jnp
or
xchg
fldenvs
cmp
testb
out
aas
int
cld
daa
inc
loopne
push
js
cli
lcall
pop
mov
negl
xchg
add
outsb
push
shlb
xchg
xor
push
pushf
jp
push
fiadds
and
adc
cmp
dec
sbb
sbb
cli
sbb
and
das
dec
cmp
jbe
mov
sbb
xorl
popa
gs
jl
sti
sbb
icebp
cmp
aad
pop
lret
shlb
mov
adcl
out
add
mov
add
dec
popf
imul
mov
add
insl
mov
mov
adc
int3
in
fs
je
enter
add
xlat
mov
pop
rorb
lods
xchg
dec
push
rclb
lock
mov
sbb
rorb
inc
push
add
xor
pusha
hlt
inc
iret
mov
rcll
pop
jl
cwtl
dec
into
sbb
adc
and
fs
test
mov
lahf
out
mov
testb
lahf
xchg
test
lahf
cmpsb
test
mov
sub
adc
push
popf
and
insb
js
xor
jl
xor
jle
xor
loopne
xchg
pop
pushf
fisubl
aaa
mov
mov
int3
jbe
cmp
hlt
jne
aas
add
out
aad
jge
jnp,pt
in
fisttpll
pop
mov
add
scas
sbb
mov
xchg
cli
and
jae
addb
pop
je
mov
pop
add
daa
das
dec
je
cmc
call
mov
mov
stc
fs
call
and
pusha
scas
call
mov
inc
mov
and
push
imul
dec
je
dec
add
movsb
les
stc
sbb
outsb
and
sbb
ja
jle
add
inc
repnz
es
divb
push
inc
pop
movsb
int
or
push
or
pop
lds
dec
sti
call
cmpsb
pop
add
push
test
adc
jns
pop
push
xchg
jnp
popf
sbb
jns
enter
stos
xor
cmp
mov
xchg
aaa
dec
lcall
loope
lock
xchg
push
sbb
jae
jmp
push
lahf
mov
ret
mov
les
mov
ficoml
and
mov
test
add
mov
xor
add
test
lret
sub
imul
dec
push
mov
jg
sbb
mov
pushf
push
add
add
std
fwait
loopne
sbb
adc
push
xchg
enter
aaa
outsb
pop
lcall
into
insb
adc
inc
call
hlt
cmp
xchg
sbb
sub
mov
jmp
add
je
xchg
xchg
or
inc
jb
push
pop
add
add
push
fdivrl
bound
aas
jle
bound
mov
cmpsl
mov
sbb
push
inc
xor
xchg
sbb
pusha
imulb
sbbl
imulb
inc
inc
stos
jns
or
lock
lahf
je
fldl
pop
dec
mov
mov
enter
inc
mov
jo
fwait
idivl
arpl
add
out
popa
adcl
nop
shrb
add
pop
add
fisubrl
movsl
out
mov
mov
dec
dec
rclb
cmp
shrb
out
sbb
lods
push
loope
mov
mov
stos
sub
add
push
stos
mov
movsl
push
xchg
sbb
sbb
cwtl
pop
add
test
fcomps
add
lods
adc
imul
jbe
dec
sbb
jecxz
jo
les
xor
sub
adc
mov
sbb
and
flds
cld
xorl
push
mov
ja
xchg
rcrb
mov
insl
sbb
dec
int
pop
add
adc
subb
pop
jle
ficompl
int3
add
fnstcw
sbb
adc
dec
jo
add
pop
or
mov
push
adc
fstpl
mov
add
and
push
fs
and
mov
mov
test
add
dec
lcall
cmp
lock
mov
cmpsl
cmp
add
inc
ret
pushf
ret
ret
sti
adc
outsb
call
and
inc
xchg
leave
add
lret
inc
adc
ds
int
orb
fcmovne
and
lods
or
xchg
mov
cmp
outsl
mov
sbb
add
loop
and
or
pop
or
and
mov
pop
push
aas
cs
push
and
push
pop
xchg
in
sbbl
incl
cmp
sbb
rclb
mov
adcb
fdivrl
xorl
pop
sub
or
cmp
sbb
xor
pop
add
js
and
and
das
out
rcrb
jl
dec
aad
mov
movlhps
movnti
add
xor
sbb
jnp
cld
aas
dec
sbb
jne
dec
and
lea
sbb
inc
in
hlt
dec
mov
inc
loop
push
mov
sub
mov
xchg
mov
mov
add
dec
or
cltd
in
ret
add
sbb
sbb
dec
pusha
pop
push
popa
sbb
iret
mov
push
mov
enter
ret
inc
loope
cmp
in
xor
sub
inc
jno
cmp
repnz
or
in
and
inc
inc
add
loopne
mov
lcall
mov
js
pop
outsb
rcrb
pop
mov
mov
cmpb
and
into
add
adc
ja
inc
ficoms
mov
push
cmpb
sbb
nop
inc
mov
lret
fcoms
cs
mov
stos
inc
subl
insl
and
push
push
and
ds
pusha
lcall
in
outsb
mov
out
jl
jb
push
fsubs
loopne
xchg
outsl
addb
mov
les
cmp
popf
mov
sub
stos
xor
jmp
mov
pusha
sub
mov
aaa
dec
mov
cltd
push
mov
xor
cmp
cmpsl
jecxz
pop
pop
aaa
outsb
lock
inc
jo
adc
mov
pop
sub
push
dec
sbb
jo
inc
dec
jns
je
push
or
sub
insb
pop
and
rcll
call
push
adc
jae
push
jne
mov
out
dec
jns
cli
sbb
push
rcll
xchg
ja
or
mov
push
mov
jl
roll
adc
cwtl
push
sub
cmp
pop
imul
iret
push
and
bnd
imul
jg
xor
cmpb
mov
dec
cmp
sub
pop
dec
pop
dec
cmp
pop
adc
cmp
push
sub
pop
dec
outsl
daa
pop
inc
and
push
fs
call
sbb
pushfw
and
inc
and
mov
das
bound
test
sbb
outsb
and
addr16
or
sub
loop
dec
gs
rorb
jnp
jae
adc
jmp
sti
or
push
pop
gs
push
mov
jns
sbb
aas
mov
pushf
bound
or
inc
lret
mov
je
loope
aaa
inc
imul
call
in
cmp
rorb
dec
push
xchg
push
shrl
sbb
js
xor
sbb
pop
aas
js
push
push
push
adc
xchg
sbb
xor
jo
sub
push
sub
pop
sbb
pusha
pusha
jns
insl
fs
cmp
popa
inc
mov
addr16
fstpl
bound
add
loope
outsb
push
loope
mov
lea
jnp
rorb
mov
mov
push
add
into
cmp
push
fwait
adc
xchg
std
xorb
and
inc
inc
lds
cmp
pop
or
mov
shrl
or
add
ja
jbe
cmp
pop
jmp
outsl
jne
pop
movl
loopne
imul
xor
das
inc
adc
xor
adc
mov
dec
and
jbe
sub
mov
push
add
mov
push
ja
ds
jle
out
sbb
inc
jne
inc
add
pop
inc
dec
or
dec
dec
add
push
dec
push
dec
push
sbb
and
push
or
sbb
adc
popa
adc
jns
imul
outsl
xor
xchg
nop
jne
jle
push
and
lea
sub
push
or
imul
cltd
popa
add
jns
xchg
fsubrs
incb
push
int
sub
xchg
aam
mov
push
jb
and
jg
es
push
or
js
ljmp
jns
jp
clc
add
sar
cmp
add
jl
push
dec
sbb
jne
les
push
pusha
and
and
xor
inc
jbe
dec
stc
outsb
inc
adc
cmp
cmp
sbb
add
xor
cwtl
insb
cs
es
pop
add
imul
pop
insb
aaa
out
cmpsb
jns
cmpsb
and
in
mov
adc
and
popf
and
imul
aad
mov
aam
cmpsb
sub
js
pop
dec
inc
inc
daa
jge
and
je
or
add
leave
stos
call
xchg
push
push
fmuls
jp
dec
sub
mov
add
bound
push
sub
jp
cmp
pop
push
sub
inc
aaa
outsl
pushw
push
ds
jle
push
cmp
ljmp
add
add
pop
fisubs
mov
cmp
jne
cmp
dec
mov
add
cwtl
dec
cmc
lret
dec
inc
loopne
xor
jo
mov
sub
sub
xor
and
pop
adcl
or
pop
inc
adc
sub
or
jne
cmp
je
cmp
add
adc
dec
or
lcall
push
or
insl
jnp
push
add
jg
inc
fwait
adc
add
shll
push
inc
inc
mull
mov
jecxz
adc
stc
stos
pop
sub
pop
cs
cwtl
cmpsb
sarb
mov
lret
sub
pusha
or
dec
xchg
enter
pop
sahf
mov
int3
mov
cmp
rorb
xor
and
mov
sub
bound
and
push
sbb
push
sub
or
lea
jns
outsb
cmp
cmp
out
frstor
stos
inc
and
arpl
sbb
cli
cs
inc
dec
addb
dec
mov
data16
pop
dec
adc
in
add
xchg
daa
sbb
mov
int
push
es
data16
sub
pop
inc
push
pop
jl
aad
test
and
mov
jp
and
xor
and
inc
dec
pop
inc
subb
mov
mov
lock
out
fxam
stc
test
out
mov
mov
sti
mov
mov
sbb
sbb
pop
adc
jp
stos
enter
rclb
arpl
into
sti
fcmove
cld
nop
repz
sti
dec
iret
repnz
ds
add
dec
or
mov
inc
adc
xor
rcll
adc
aad
movsb
mov
lods
mov
clc
and
lcall
repnz
stos
loope
jecxz
loop
out
lret
mov
lcall
lock
mov
mov
dec
or
pusha
js
sbb
xchg
fdivl
loop
mov
mov
movsl
lcall
int3
mov
shlb
nop
and
xor
and
and
jb
and
jns
inc
dec
je
pusha
rclb
xor
cmp
and
dec
cmp
int
cmp
ret
fwait
rol
dec
vshufps
test
push
xor
mov
fdivrl
mov
add
inc
dec
rclb
sbb
add
pop
adc
jb
sbb
push
std
and
add
dec
sbb
add
scas
mov
in
fmul
sbb
dec
mov
imul
xor
stc
mov
std
mov
cld
cld
lret
jmp
repz
dec
push
out
repz
clc
jmp
and
xchg
rcl
fnop
movsl
lret
cmp
add
vcmppd
sti
sar
movsl
fst
mov
sbbl
icebp
mov
out
mov
out
iret
mov
in
push
xchg
call
dec
add
push
jle
mov
xor
popa
xor
cmp
xor
int
xor
or
rcrb
insb
jg
jle
jne
jb
lret
sub
cltd
clc
push
or
jle
jge
subb
movsb
stos
call
mov
add
call
rolb
int3
push
cmp
and
jae
xor
mov
adc
or
call
faddl
js
clc
adc
or
inc
out
dec
lock
cmpsb
idiv
push
jp
icebp
repz
ss
and
je
jle
push
bound
mov
js
xor
inc
and
and
gs
addr16
outsb
push
imulb
jbe
divps
sbb
aad
adc
jge
sbb
js
test
inc
and
ss
and
outsl
addr16
jne
pop
jge
adc
inc
jl
push
push
xchg
pop
cs
sbb
lahf
pushf
push
adc
cwtl
rcrl
mov
fcoms
popf
sahf
fidivrs
out
out
repz
sbb
loopne
std
cli
cmc
mov
in
into
dec
lock
pop
mov
add
jns
cli
in
mov
adc
clc
dec
adc
mov
adc
decb
push
and
call
jecxz
mov
pop
cwtl
les
icebp
pusha
or
add
sbb
push
sbb
sbb
ret
xor
inc
push
xor
inc
add
fmuls
add
xchg
or
or
loopne
fwait
int3
ret
ja
in
icebp
dec
ret
adc
xor
and
insl
pop
xor
dec
and
sub
add
add
call
mov
cmc
in
out
inc
cli
mov
cmp
dec
add
pextrw
inc
inc
add
inc
scas
stos
mov
mov
hlt
mov
sbb
mov
ret
lds
outsl
out
xor
je
sbb
adc
dec
mov
nop
repnz
lods
dec
repz
mov
cld
mov
cltd
les
xchg
xchg
mov
rol
repnz
popf
popa
adc
xor
add
dec
pop
aaa
add
roll
call
push
inc
sbb
mov
or
inc
lock
xor
sbb
mov
and
jbe
xor
or
ja
add
xchg
fldz
rcll
mov
sbb
pop
repnz
add
push
bound
aas
pop
dec
rcrb
cwtl
and
push
xor
mov
fcompl
lcall
ds
jae
jp
pop
cmp
das
push
push
xor
jns
jge
and
sub
xor
mov
jl
sub
into
cmpsl
add
lods
lods
in
out
xorb
inc
cmc
fdivrl
adcb
aas
jp
cmp
pusha
cmp
or
sbb
add
push
pop
sbb
add
push
push
sbb
push
push
push
xchg
or
jp
sub
or
cwtl
cmp
sub
in
jno
cmp
mov
adc
jp
aad
mov
add
sti
in
out
hlt
std
stc
dec
shl
in
in
mov
and
lret
into
pop
pop
ficoms
ret
jmp
fdiv
mov
adc
pop
sub
or
pop
bound
je
inc
sbb
lds
cmp
pop
inc
call
add
or
shlb
dec
jl
adc
and
popa
sbb
ds
xor
pop
pop
sub
cmp
es
cmp
mov
adc
shl
mov
xchg
out
and
mov
mov
mov
lahf
cltd
jp
sbbb
inc
xor
pop
aaa
jge
gs
cli
in
loop
test
popa
xor
insb
jno
and
das
sub
push
test
dec
mov
in
cli
mov
push
outsb
testb
dec
inc
add
push
sbb
push
and
jns
test
clc
aaa
jg
push
pop
pop
orl
andb
sub
test
mov
lods
xor
mov
push
and
fildl
pop
sahf
rcl
xchg
imul
lds
mov
mov
lods
out
cmp
inc
lcall
lea
fists
int3
mov
mov
test
lret
int
nop
rol
fcmovne
mov
sbb
sub
out
repnz
mov
lods
ljmp
adc
mov
jle
outsb
cmp
imul
or
imul
jae
pop
pop
jg
cli
push
push
pop
push
dec
fsts
add
jns
enter
lock
int
ljmp
lock
aam
subl
or
pusha
aas
sub
and
xchg
rcl
cmp
into
loopne
sub
push
adc
inc
lahf
xor
loopne
push
adc
sbb
xor
pop
sbb
cltd
push
adc
out
clc
bound
jmp
sbb
cltd
lret
flds
loopne
cmc
idivl
arpl
xor
and
lea
push
cltd
xor
hlt
sahf
sub
test
push
fcmovb
aaa
test
sub
jae
orb
call
jno
cmp
dec
sti
adc
les
bound
push
in
dec
ror
add
nop
xchg
mov
lea
pop
fs
ds
push
xor
xor
sub
cmp
push
fs
js
cmpsl
jle
jge
xor
shrb
dec
jne
push
mov
pop
fxch
orl
test
hlt
xchg
push
int3
cmp
into
mov
negl
xchg
ljmp
fcmovu
xor
add
lahf
pop
into
loope
jl
sub
xor
movsl
push
nop
nop
mov
inc
xchg
mov
mov
in
mov
lcall
mov
neg
pusha
mov
out
dec
aas
and
iret
jl
inc
cmp
mov
push
into
pop
pop
clc
xchg
imul
jnp
es
dec
vmovddup
int3
fisubs
insb
imul
xor
mov
add
push
gs
fildl
mov
xor
lock
test
xchg
sahf
xor
lahf
adc
lods
cmc
es
aam
mov
cltd
or
and
ret
movb
test
mov
mov
mov
aam
push
addl
fcmovb
loope
test
adc
lret
jge
add
sub
jge
push
bound
adc
sbb
dec
dec
or
push
cmp
push
dec
adc
xor
clc
iret
sahf
pushf
adc
leave
mov
inc
cmpsl
mov
mov
repz
mov
mull
jno
ljmp
leave
xchg
cmpsb
add
sub
pushf
aad
xor
add
or
adc
jnp
add
int3
lret
and
ret
add
pop
sbb
dec
push
or
or
inc
or
cmp
dec
and
push
inc
insl
push
adc
inc
xor
jno
sub
pop
add
dec
clc
mov
in
mov
mov
add
lds
stc
inc
std
sbb
lret
cmp
inc
xor
je
pop
add
sub
inc
or
sbb
pop
dec
push
push
add
inc
sbb
and
sbb
sbb
adc
pop
ret
xchg
xchg
rclb
mov
jp
aas
lcall
xor
pop
or
inc
mov
mov
out
in
fwait
mul
sbb
xor
rcll
cmp
add
push
jnp
sbb
xor
pop
repnz
add
pop
rolb
jb
xor
xchg
out
int3
jae
fsubr
push
sbb
mov
fst
dec
cwtl
aad
adc
xlat
out
stc
sub
xchg
pop
cmp
cmp
xor
sub
leave
and
mov
fwait
int
lcall
xchg
mov
xchg
xor
aas
dec
je
push
push
inc
dec
push
inc
push
sbb
adc
jnp
repnz
pop
dec
pop
test
push
dec
clts
xor
pop
sub
scas
push
adc
pop
ret
pop
repnz
pop
jp
push
aad
imul
cli
dec
adc
pop
push
addr16
or
test
push
sahf
cmpb
fs
push
bound
push
inc
mov
incl
pop
call
and
sub
jl
daa
sbb
std
mov
xlat
popa
and
cltd
or
andl
lcall
adc
push
stos
call
jle
and
insb
pusha
sbb
dec
push
shll
inc
inc
jnp
jecxz
cmp
int
sbb
mov
fcmovnu
xchg
fucomi
mov
loopne
mov
call
xchg
lahf
add
mov
mov
out
mov
mov
jmp
popf
out
cli
test
movsb
mov
sbb
popa
mov
stos
icebp
mov
mov
cld
cmpsl
test
les
lds
rorb
xchg
mov
mov
idivl
sbb
out
mov
ljmp
movsb
scas
fistpll
stos
fdiv
andb
ret
xchg
xchg
add
lahf
enter
int
popf
mov
xchg
aaa
xorb
test
out
mov
inc
mov
mov
pop
xchg
add
scas
out
mov
jo
lea
loopne
mov
fiadds
popf
fmul
pop
xchg
fmull
aad
in
inc
cmc
hlt
mov
mov
cwtl
inc
mov
jno
mov
mov
ljmp
pop
out
pop
dec
je
clc
dec
pop
ds
dec
or
push
add
loope
dec
push
inc
adc
or
insb
push
aaa
jge
add
js
cmp
inc
inc
sub
cmp
addr16
je
fs
push
add
inc
ret
std
cmp
push
dec
or
mov
inc
add
add
add
cmp
sbb
jbe
mov
sti
add
or
repz
jne
xchg
jle
rclb
mov
fistpl
pop
sbb
mov
mov
mov
lock
mov
dec
mov
and
not
movsb
fucom
mov
sti
into
repnz
dec
test
insl
mov
sub
rcll
aam
or
mov
fldl
ret
sbbl
in
sbb
pop
mov
not
dec
mov
out
push
inc
das
mov
js
push
adc
push
or
push
dec
pop
sub
shrl
dec
inc
mov
adc
inc
xor
aaa
sbb
clc
cli
xor
mov
nop
lret
xchg
cwtl
rolb
clc
xlat
sbb
jmp
xlat
aam
ret
jmp
lds
aad
mov
rol
ror
mov
lahf
mov
jbe
adcl
pop
mov
add
push
xchg
stc
mov
add
mov
in
stos
jbe
sbb
cmp
test
cmp
jne
repz
mov
fneni(8087
mov
pusha
notl
jmp
cmp
mov
in
enter
sbb
mov
js
inc
mov
imul
popa
adc
push
inc
inc
push
adcb
arpl
and
imul
cli
pop
je
push
jle
mov
insb
pop
adc
jae
xor
es
sbb
sbb
jnp
dec
inc
mov
and
rclb
in
popa
and
xchg
popf
cmp
mov
mov
mov
fisubl
pop
scas
mov
cwtl
fisttpll
adcb
outsl
sub
xchg
add
xor
sub
fidivrl
outsl
cmp
cltd
gs
dec
jb
test
insb
dec
sub
push
jg
ja
jns
push
cmp
fs
inc
dec
push
mov
sub
inc
sbb
bswap
add
mov
test
mov
cli
adc
orb
xchg
mov
mov
add
lock
nop
les
xchg
xchg
dec
int
call
xchg
add
mov
cmp
or
xor
fcmovnu
fstps
xchg
lcall
movsb
stc
xchg
loope
mov
mov
pop
lret
enter
rolb
popf
cltd
xorl
sub
fstpl
mov
adc
or
lock
add
es
jl
push
jp
popa
push
dec
gs
sbb
mov
jl
out
in
imul
or
ret
imul
wbinvd
lock
insb
inc
mov
dec
fistpl
sti
shlb
cli
test
xchg
mov
mov
mov
lock
rcll
xlat
jae
cli
add
lret
cltd
pop
lds
rorl
test
lds
les
test
leave
fildl
icebp
loop
inc
mov
mov
in
sbb
out
mov
sti
add
lods
mov
cmpsb
xchg
cmc
mov
jp
dec
dec
inc
push
sbb
imul
sbb
cs
pop
jp
or
pop
dec
or
outsl
adc
push
sub
push
pop
aas
pop
cmp
cmp
xor
sbb
jl
and
into
cmp
xor
ja
push
inc
xchg
push
push
loopne
jl
cmc
mov
popf
fstps
mov
into
leave
scas
cli
mov
mov
movl
mov
sti
mov
mov
fs
scas
fisubrs
lock
mov
mov
jl
in
pushf
test
leave
mov
test
xchg
test
das
ret
in
mov
lcall
icebp
stos
push
sbb
in
mov
idivl
lods
lods
pop
std
mov
bnd
mov
mov
mov
cld
stos
test
dec
add
dec
push
jae
dec
dec
push
jnp
pop
pop
mov
icebp
test
es
cmp
jo
dec
imul
insb
mov
inc
arpl
dec
push
inc
push
push
lret
jl
pop
pusha
push
sbb
dec
outsb
sbb
arpl
add
jno
bndldx
jns
sbb
jp
das
arpl
in
push
imul
inc
pop
js
jg
dec
aaa
dec
cmp
xor
sahf
inc
or
lock
inc
pop
push
sub
push
pop
jbe
add
push
dec
mov
imul
xor
jge
test
add
fiadds
xchg
icebp
add
roll
xchg
pop
lds
mov
cmp
xor
xchg
xchg
add
fdivr
xchg
add
nop
mov
nop
cld
lock
call
std
les
mov
dec
fstpl
dec
xor
add
push
xor
stc
in
cmp
aaa
dec
inc
lret
xor
loop
das
xor
push
sub
or
js
pusha
jl
jmp
arpl
js
stc
inc
dec
push
or
pop
in
jle
subb
and
ficoms
inc
adc
je
jl
in
sbb
pushf
sbb
xchg
inc
mov
dec
std
add
enter
or
pop
movsb
sub
xor
scas
aaa
out
lcall
push
pop
pop
mov
call
je
ret
dec
inc
ds
sub
cmp
addr16
push
ss
push
and
xor
sub
xor
cli
push
push
dec
popa
push
cmp
adc
and
sub
imul
xor
fiaddl
subb
shll
bound
int3
push
outsb
pop
out
outsb
in
imull
daa
mov
adc
xchg
pop
push
add
inc
out
dec
jb
je
sub
push
pop
mov
sbb
sub
or
push
aas
mov
dec
and
push
mov
xchg
xor
cwtl
mov
pop
xor
cmpsb
inc
sub
ret
cmp
pop
jbe
sbb
jle
fildll
sbb
adc
cwtl
or
dec
push
mov
xchg
in
fistl
leave
shrb
or
nop
leave
lret
or
xor
dec
test
rolb
arpl
sub
push
outsb
outsb
lods
push
into
adc
lret
add
cltd
and
jle
and
push
gs
outsb
outsb
xor
and
or
mov
imul
xor
lret
andb
sub
loope
loopne
add
cs
insb
push
es
and
insb
and
js
adc
cs
jo
adc
cwtl
ja
lea
push
push
xchg
sbb
and
mov
adc
adc
imul
push
mov
jns
outsl
sbb
adc
sub
pop
lret
cmp
cmp
fs
add
mov
popf
clc
loopne
push
daa
popa
cmpsl
sti
and
ss
mov
dec
inc
jle
cmp
inc
sub
xor
push
aas
xor
leave
fs
cmp
ret
push
jbe
push
sub
outsb
pop
mov
push
sbb
adcl
pop
sub
xchg
mov
mov
xchg
pop
push
neg
fs
dec
inc
out
xchg
or
xchg
inc
jb
pop
xchg
sub
jbe
xchg
xor
clc
inc
pop
sub
jnp
test
lods
inc
adc
lds
fsub
or
ss
push
stc
mov
pop
jl
imul
emms
mov
pop
xchg
cmp
xor
push
or
mov
sbb
sub
sbb
rcrb
dec
sbb
popa
pusha
into
lret
arpl
nop
movsb
ss
fildll
push
and
and
test
pop
push
mov
push
mov
lcall
mov
dec
rclb
cwtl
push
gs
out
leave
xchg
or
inc
outsl
rolb
fsubrl
push
ret
les
clc
push
cmp
inc
sarb
sbb
xchg
dec
jne
cwtl
cmpsb
cwtl
fwait
inc
lret
cli
add
sbb
mov
mov
dec
lea
push
mov
mulb
jne
jnp
xchg
js
addr16
rcll
xchg
mov
pop
add
femms
sbb
or
xchg
insb
popa
dec
sahf
dec
jo
pushf
inc
or
or
js
loop
push
add
sub
rorl
and
cmp
gs
add
or
jnp
jne
sub
je
scas
sbb
imul
sbb
ret
sbb
jae
and
dec
data16
adc
cli
shrb
push
push
sub
adc
jbe
outsl
clc
es
std
loop
mov
dec
or
aad
gs
pop
jo
push
and
outsl
out
add
mov
dec
adc
insb
ds
jo
ret
jb
pop
outsb
jp
push
fildl
mov
dec
dec
das
add
inc
sub
dec
insb
xor
cmp
into
js
or
dec
notl
jo
add
arpl
adc
getsec
mov
jae
lret
inc
popa
jbe
sub
dec
and
push
sub
inc
cmpl
sbb
push
push
cmpsl
lods
mov
inc
pop
sbb
cmp
sub
mov
push
lods
mov
cmp
mov
into
cmp
sbb
ds
xchg
xor
pop
sbb
cmp
xchg
ret
and
jl
xor
and
push
repnz
sub
and
cltd
push
punpckhdq
or
sbb
mov
add
js
xor
jns
cli
fs
mov
adc
jns
xor
mov
aaa
sub
mov
popf
inc
jo
call
lods
xchg
cmp
jl
sub
add
outsb
push
shl
pop
icebp
fs
clc
cs
pop
inc
in
jae
mov
mov
cmp
pop
insb
jb
mov
test
pop
cld
sub
rcll
and
mov
or
sti
mov
adc
je
lret
pop
jb
ljmp
repnz
lods
mov
jbe
stc
jmp
mov
and
cmp
mov
rorl
mov
test
and
inc
pop
ret
adc
add
loop
mov
mov
pop
or
mov
sub
loopne
add
xchg
inc
inc
sub
jle
out
sbb
and
sbb
jb
incl
adc
mov
xorl
adc
mov
xchg
scas
in
or
cmp
je
leave
or
xorb
sub
ret
mov
and
lock
add
cmc
add
inc
call
jno
rorl
test
loopne
lcall
jb
push
adc
lods
sbb
add
pop
pop
sub
push
sbb
pop
dec
call
adc
push
pop
inc
nop
ret
pop
sar
mov
xchg
pop
sbb
int
std
xor
sbb
cmp
test
cs
imul
sub
and
push
jb
jg
or
scas
movsl
divl
mov
call
int3
in
or
popa
mov
jmp
fstpl
add
mov
ds
sti
jb
push
add
inc
jle
sbb
les
add
stc
in
cmpsl
pop
lock
push
mov
ret
pop
push
call
addb
mov
xchg
jmp
push
xchg
add
cmp
mov
pushf
cmp
nop
adc
xor
sbb
adc
idivb
mov
adc
mov
inc
push
and
sbb
dec
pop
dec
push
push
rcrb
pop
dec
jbe
adc
lock
mov
mov
xchg
push
adc
xor
mov
in
xchg
adc
pushf
mov
cmp
inc
push
cltd
xor
inc
adc
js
inc
and
and
cld
or
add
dec
in
jno
mov
pop
adc
ss
lock
lret
bound
jns
sub
shll
roll
test
pop
or
push
jg
push
pop
xchg
push
cld
je
add
mov
push
add
ss
or
push
xchg
in
adc
sub
insb
ret
and
and
int3
adc
mov
mov
and
sbb
dec
sub
inc
dec
jmp
cmp
push
inc
je
imul
sub
bound
mov
sub
jmp
or
lret
in
sbb
sbb
mov
in
push
cmp
adc
lea
jne
mov
test
adc
adc
stos
push
arpl
js
xchg
ret
and
mov
loope
inc
jne
nop
sbb
or
sbb
xchg
xchg
aas
imul
ret
xchg
inc
sbb
mov
jp
and
insb
xor
jbe
sub
inc
daa
xchg
sbb
adc
adc
incb
sub
push
xchg
fs
xlat
jbe
fldt
test
mov
outsb
test
jge
sbb
jmp
sbb
push
add
inc
dec
rorb
cmp
or
dec
ja
sbb
jns
cmp
lcall
loopne
sti
inc
sub
stos
lcall
dec
insb
sbb
mov
popa
test
push
pop
test
gs
mov
ffreep
or
xor
aas
inc
cmp
xor
sbb
inc
or
ja
stc
sub
sbbb
inc
icebp
sbb
jp
cmp
insb
xchg
mov
inc
push
mov
mov
or
xchg
mov
mov
or
bnd
add
dec
aad
sbb
or
enter
cmp
dec
imul
xchg
or
jb
popf
sub
lea
mov
icebp
shl
pop
mov
xor
add
lahf
in
xor
push
lret
mov
test
pop
lea
sub
fs
adc
jns
add
and
mov
push
or
mov
push
push
bound
mov
push
mov
sahf
mov
mov
loop
xor
lcall
js
gs
push
sbb
and
sahf
dec
xor
mov
sbb
test
xor
adc
mov
mov
add
fwait
repnz
dec
and
mov
xor
mov
adc
and
test
cmp
jo
and
hlt
mov
xchg
cmp
mov
dec
mov
mov
jnp
jmp
incb
enter
leave
popa
arpl
add
mov
movsb
mov
call
xor
movsl
push
and
xor
mov
daa
inc
clc
push
dec
push
test
call
push
ja
lret
daa
xor
push
add
jp
cld
sbb
push
leave
test
rol
call
add
jmp
dec
imul
jbe
cmp
jo
clc
pop
mov
xchg
cwtl
call
les
push
jmp
mov
mov
lock
push
pop
mov
jmp
cmc
xchg
and
mov
cmp
inc
clc
pop
leave
push
call
jo
pop
sbb
je
out
pushl
lcall
repnz
fs
and
mov
or
push
push
sbb
ljmp
add
cs
push
push
in
inc
push
mov
push
xchg
bound
or
pushf
and
daa
jecxz
scas
adc
mov
lret
or
leave
addr16
push
or
mov
pop
scas
lret
pop
mov
js
stos
push
push
push
out
lss
lret
or
sbb
rorl
cmp
cmp
inc
stc
inc
cltd
or
inc
outsb
or
inc
leave
lods
ret
mov
cmp
mov
cli
incl
ret
rorl
sarl
xor
das
ret
stos
cmpsl
mov
add
mov
push
add
test
rcl
add
xor
repnz
push
add
gs
xlat
cmpsl
clc
xchg
add
lret
fistl
int
mov
lcall
out
outsb
and
inc
cwtl
pushf
jbe
int3
lret
int3
or
pushf
xchg
jmp
mov
and
int3
shlb
pop
lret
xchg
sarl
movsb
inc
jnp
cmpsb
inc
mov
call
call
in
and
and
ret
call
mov
je
adc
mov
add
mov
addr16
out
push
or
cmpsl
mov
jae
movb
mov
mov
dec
mov
shr
pop
mov
fdivr
int
shld
inc
adc
push
test
fcmovb
fcomi
jae
sti
ds
clc
jne
xchg
loopne
and
push
cmp
sbb
sti
jno
add
jae
jmp
lock
xor
xor
sbb
add
inc
xchg
mov
inc
push
sbb
add
popf
subl
cmp
jmp
daa
pop
cmp
or
and
dec
shlb
sahf
cmpb
pop
iret
inc
jmp
sarl
addl
dec
jo
or
add
and
xchg
pop
aam
sub
or
xchg
nop
icebp
sbb
push
and
fidivl
sub
mov
sub
and
adc
loopne
and
lock
lahf
inc
push
iret
rol
or
faddl
add
bnd
or
aaa
ljmp
dec
mov
or
and
xchg
mov
add
push
push
xchg
repnz
xchg
xor
push
sub
fwait
jae
and
inc
push
cmc
inc
cmp
add
loopne
mov
or
bound
push
and
pop
sub
fsubl
cmp
jge
inc
jp
sahf
xor
sahf
adc
inc
test
fwait
jge
or
push
lret
loope
cmp
push
xchg
inc
pop
aas
cmp
xor
push
nop
adc
mov
call
push
xlat
inc
pop
mov
sbb
push
stc
dec
sub
pop
popa
sub
leave
sub
lock
outsl
jmp
cmp
lcall
shlb
jmp
adc
xor
inc
testl
dec
adc
in
adc
into
dec
dec
cmpl
adc
mov
dec
sbb
lahf
inc
std
dec
jne
vmwrite
jecxz
pop
jmp
xchg
jbe
add
push
inc
test
adc
stc
jae
call
inc
mov
movsb
mov
sub
bnd
inc
or
or
cmp
enter
enter
jns
sub
push
sbb
and
call
sub
gs
and
pop
mov
adc
outsb
pop
adc
or
ss
rol
ret
and
sbb
dec
push
sti
es
fimuls
and
std
test
cltd
cmp
and
jno
aas
mov
cvtpi2ps
scas
imul
mov
jl
adc
popa
je
psubw
lods
push
sub
add
nop
cs
dec
shrl
es
pushf
in
sbb
push
ret
jnp
push
adc
xchg
inc
adcb
mov
cmc
mov
inc
addr16
xor
pop
pusha
ret
add
orl
push
xor
xchg
es
int3
pop
fwait
and
jg
aam
pushf
add
inc
xchg
vmwrite
adc
xchg
inc
mov
mov
loop
inc
pop
jmp
adc
rcrb
aam
sbb
daa
push
movsb
cmp
dec
push
pop
pop
mov
dec
mov
or
inc
or
leave
fcoms
inc
call
outsb
rcl
cs
popa
and
leave
das
scas
out
jmp
mov
pop
ljmp
dec
jp
add
add
push
test
das
shl
jb
add
jmp
pop
pushf
mov
leave
push
hlt
clc
mov
push
or
imul
es
ret
rcr
xchg
aas
push
lock
xor
mov
fs
and
or
or
xchg
mov
sub
mov
pop
push
or
mov
cmpsb
or
adc
fildll
and
mov
ja
loopne
xchg
out
cld
cmpsb
add
insl
xchg
inc
cmp
inc
clc
aaa
stc
adc
into
push
lock
pop
js
addr16
pop
xor
mov
and
push
pop
mov
sbb
pusha
jbe
adc
mov
mulb
sbb
push
push
repnz
push
fsubrs
movsb
cli
push
call
pop
sub
gs
aaa
inc
add
mov
popf
cmc
inc
lods
nop
push
add
test
gs
fsubrs
cli
jmp
popa
jne
or
push
pushf
jle
push
inc
mov
testb
mov
and
or
push
push
adc
in
cs
mov
out
test
mov
jmp
sbb
repnz
ds
add
out
inc
cmpsl
sbb
inc
cmp
insb
add
pushw
xor
cmpsl
push
jmp
add
inc
test
pop
pop
inc
mov
in
mov
ret
mov
dec
mov
cld
cmp
cwtl
inc
mov
mov
cmp
leave
jb
subb
xorb
sbb
mov
out
dec
popa
dec
inc
ljmp
or
pop
sbb
pop
mov
inc
add
pop
es
pop
scas
push
int
sub
push
sahf
call
dec
ret
xor
add
insb
std
hlt
jo
scas
pop
xchg
mov
aaa
sub
out
gs
push
cmp
repnz
shrb
mov
push
mov
pop
mov
pop
pop
push
push
adcb
pusha
cld
mov
add
xchg
rcrl
pop
dec
sbb
ds
push
pop
mov
imul
sbb
adc
xor
cltd
les
push
clc
rcrb
mov
aas
shrb
cwtl
mov
call
js
mov
push
adc
pop
cwtl
push
mov
and
gs
clc
orb
pop
pop
inc
pop
loop
ret
inc
push
mov
jne
adc
or
push
idivl
daa
ret
sbb
push
add
into
mov
lock
add
dec
imulb
mov
scas
sub
or
sub
push
push
xor
cld
xchg
mov
cs
rcrb
imul
daa
mov
xchg
sub
sahf
cmp
fsubrl
sub
movsl
aam
sub
pop
xlat
sar
push
mov
imul
sub
divps
sahf
shlb
nop
xchg
mov
push
xchg
pop
cld
lret
ss
rcrl
rolb
call
lea
out
adc
mov
jmp
bound
cs
mov
sub
and
dec
xchg
push
cld
shr
xorb
in
mov
or
imul
push
fs
mov
sub
adc
imul
push
cmp
cmpsb
in
test
lret
inc
or
out
xchg
rcrb
push
jae
cwtl
lcall
xor
jo
or
add
and
push
sub
bound
dec
push
mov
lea
sbb
lcall
dec
jmp
pop
popw
call
jg
or
or
lcall
push
fnstenv
imul
and
jne
rcl
push
pop
out
push
cmp
pop
jns
loope
pop
push
jmp
inc
movl
andl
ror
insl
jbe
repz
mov
pop
andb
out
add
int3
inc
push
mov
sbb
lahf
ret
lahf
pop
inc
imul
mov
clc
fsubs
push
fcomps
nop
dec
ds
xchg
repnz
xchg
adc
pop
mov
inc
xor
jmp
xlat
sbb
movsb
fwait
pop
out
add
stc
and
cli
shr
inc
sbb
push
adc
rcll
adc
cld
inc
sub
js
sti
mov
dec
imul
inc
sarl
add
jbe
repnz
movsb
jo
sub
sub
lock
mov
or
cltd
test
dec
je
inc
out
mov
xor
cmpl
push
jl
xchg
or
pushf
into
aam
push
in
mov
xor
sti
arpl
adc
mov
clc
dec
sbb
adc
jne
testb
push
xchg
cmp
test
js
aas
data16
push
mov
hlt
enter
rcll
jmp
add
in
scas
push
lock
dec
mov
xchg
ljmp
insb
dec
inc
mov
pop
ja
rol
sbb
or
mov
icebp
cvtpi2ps
sbb
jne
xchg
leave
in
hlt
js
jbe
adc
pop
add
mov
fs
mov
addb
inc
leave
testl
movsl
mov
sbb
ror
sbbl
push
stc
lahf
cmp
adc
rcll
mov
sub
insb
pop
jle
push
scas
hlt
dec
and
jae,pt
test
or
in
jno
jb
rcr
push
adc
or
pusha
std
loopne
shlb
adc
mov
push
mov
sub
ljmp
sbb
mov
mov
sbb
inc
enter
cmp
in
sti
or
mov
addb
cwtl
stos
mov
lcall
call
inc
loope
push
stos
bound
or
push
pop
cmp
pop
jle
ud2
adc
jmp
nop
push
into
mov
jne
and
xchg
jmp
sub
cmpsl
sub
inc
pop
lods
adc
adc
fisubl
pushf
push
xchg
and
pop
or
mov
pop
cs
push
sub
call
into
pop
test
cmp
push
add
push
into
pop
cmp
bound
or
or
ds
decl
imul
test
testb
adc
es
cmpb
clc
inc
ret
pop
repnz
into
in
inc
push
or
adc
into
mov
adc
jb
cmp
mov
cmpps
adc
lock
loopne
bound
or
mov
adc
pop
push
mov
or
jb
adc
nop
pushf
shll
adc
inc
ljmp
and
pop
sub
mov
dec
or
sahf
inc
inc
testb
cmp
inc
ret
test
cmp
xor
mov
mov
adc
adc
jb
inc
notb
call
adc
adc
and
and
inc
repnz
lock
fldcw
mov
das
pop
outsb
push
scas
hlt
dec
dec
jmp
pop
mov
dec
push
push
or
pop
sbb
adc
mov
xchg
rol
xor
cmp
nop
pop
pop
pusha
inc
inc
dec
enter
push
es
lret
dec
pop
out
jae
adc
lret
or
xchg
mov
xlat
or
mov
cmp
xor
cltd
or
jns
or
ret
inc
jne
js
sbb
xor
jne
pop
adc
out
sub
push
push
pop
dec
push
jbe
hlt
mov
cmp
aas
sbb
sbb
outsb
sub
xor
add
fdivrs
pop
jp
xchg
das
mov
add
or
jmp
jbe
cmp
xor
inc
and
push
adc
loopne
mov
lahf
nop
sbb
or
sbb
push
mov
pop
or
lcall
notl
ljmp
xor
jmp
inc
imul
sub
mov
mov
sti
lcall
repz
pop
cmp
cmp
jns
pop
inc
or
icebp
mull
out
out
push
insl
mov
or
push
cmp
push
sub
pop
ljmp
mov
in
addb
mov
outsl
idiv
pop
out
and
mov
pushf
cmp
cmp
decl
loop
decb
cmp
xchg
ljmp
inc
test
popa
inc
mov
inc
in
inc
mov
aaa
ret
scas
mov
lldt
repnz
jge
jp
sub
decl
sbb
cmp
pop
inc
rol
shll
outsb
movb
cmp
mov
sbb
or
fiadds
xor
mov
insl
add
ret
aaa
mov
mov
mov
aas
adc
cmp
sbb
xchg
or
dec
adc
xchg
push
lock
and
stc
pop
fsubs
fdiv
cmp
insl
cs
jbe
sarb
aam
lret
add
test
test
xor
jb
xchg
adc
xchg
or
addr16
inc
push
jp
ss
xchg
sbb
or
inc
inc
ja
mov
jb
adc
rolb
pop
testb
js
xor
in
jne
in
xchg
rolb
mov
mov
mov
add
pop
lcall
and
ret
xor
jnp
cwtl
xor
movsb
lret
in
les
push
jle
adc
sub
push
into
lea
outsl
loop
test
popf
lea
jae
in
fidivrs
ljmp
mov
sti
pop
mov
xor
jne
mov
pop
xchg
adc
and
ret
test
push
xor
or
or
push
call
jmp
push
and
xor
dec
add
inc
repnz
sbb
andl
xor
inc
adc
lock
fcoms
fimull
test
xor
es
mov
orb
or
out
imul
insb
pop
cli
xor
sbb
daa
push
mov
pop
sub
or
iret
and
add
pop
inc
sti
pop
dec
adc
imul
insb
ja
sbb
mov
adc
pop
std
mov
xor
lahf
jl
insb
cltd
loopne
jp
fdivrs
test
frstor
mov
mov
out
dec
ds
mov
lods
insb
gs
inc
loopne
dec
push
mov
je
out
add
bnd
adc
and
and
mov
push
mov
mov
mov
lock
dec
or
lahf
mov
aaa
dec
cmc
popa
jo
mov
sbb
xchg
ss
or
cwtl
or
jbe
sti
or
rclb
mov
sbb
push
aam
pop
jnp
sbb
cmp
adc
cli
xchg
out
xchg
xchg
ljmp
add
ficoms
inc
fistl
lcall
or
shrb
jb
jmp
les
jmp
or
adc
jle
ss
add
cwtl
or
sti
adc
mov
bound
sub
inc
dec
or
mov
jle
adc
xor
subl
fneni(8087
ljmp
adc
mov
lahf
adc
imul
add
subl
shrd
and
in
mov
sti
or
out
mov
mov
push
repz
fcomi
ret
push
pop
dec
xor
test
mov
dec
add
push
cmp
push
ljmp
int3
mov
adc
rcrl
pop
adcb
in
mov
cmp
decb
cmp
or
rorl
pop
mov
inc
fwait
outsb
mov
lods
add
cmp
cmpsl
cmp
loopne
movsl
ficoml
and
add
loope
pop
sub
outsb
or
push
mov
mov
imul
inc
orb
adc
mov
push
shlb
test
jp
fwait
adc
pop
ret
sbb
or
cltd
stc
cmp
adc
mov
dec
or
xor
pmaxsw
es
out
and
mov
pop
mov
mov
add
mov
pop
enter
icebp
iret
aam
add
pop
ret
out
leave
sub
push
rorl
xchg
and
or
xchg
ja
inc
inc
or
dec
mov
jp
sub
arpl
pop
int
fcompl
add
loop
mov
aaa
xor
iret
iret
adc
inc
mov
jbe
ja
mov
pop
jae
mov
inc
sbb
repz
xor
sbb
jle
adc
jb
and
push
pop
aam
xchg
jmp
xchg
push
pop
out
lret
jecxz
lock
loopne
or
jle
xchg
push
push
and
data16
push
pop
push
and
sbb
es
dec
add
es
js
pop
and
pop
pop
pop
ljmp
pop
inc
outsb
sarb
imul
ret
bound
jmp
sub
push
notb
call
mov
scas
add
test
aam
sub
movsb
lcall
dec
roll
dec
bound
or
mov
mov
cmp
sub
std
or
inc
mov
or
xchg
inc
inc
push
clc
dec
mov
xchg
popf
mov
testl
adc
adc
lds
jo
xchg
sbb
les
mov
sub
shll
call
enter
shrb
mov
hlt
sbb
arpl
cmp
repnz
insl
cmp
xor
sub
sti
sub
jge
imul
mov
out
sbb
sbb
add
aas
clc
or
push
fcoml
fisttpl
sbb
aad
enter
and
jb
adc
and
call
sub
push
mov
and
inc
adc
adc
push
call
sub
ret
outsb
mov
pop
push
fimull
call
xor
mov
push
sbb
push
out
pop
mov
add
cli
pop
dec
ljmp
and
cmpl
adc
sbb
xchg
sub
iret
mov
call
aaa
ret
push
cmc
add
gs
or
sub
ljmp
or
adc
ficoms
dec
mov
cs
inc
adc
loop
xlat
dec
push
or
aaa
arpl
out
and
add
inc
dec
xchg
fmuls
jg
lcall
jne
shlb
cli
les
mov
into
mov
iret
loopne
add
push
push
mov
enter
dec
dec
cmp
pushf
xchg
xchg
xchg
or
inc
ficoms
jg
push
filds
adc
pusha
test
rol
pop
fsubrl
push
mov
add
add
cmp
push
sub
mov
jp
addb
inc
lahf
ja
inc
or
xor
cld
or
imul
movsb
imul
nop
push
lret
sub
cs
push
lcall
fisttpll
ret
dec
or
and
imul
or
rcrl
xchg
pop
push
xor
cli
call
mov
imul
or
cs
xchg
lret
push
test
ret
call
jle
or
push
adc
cmp
clc
or
push
pop
inc
sbb
xorl
sub
orl
push
and
bound
push
inc
xor
sub
mov
mov
mov
push
les
cwtl
mov
outsl
inc
push
or
sbb
dec
addr16
inc
add
xchg
inc
cwtl
fs
add
inc
lahf
inc
mov
push
sarb
gs
push
adc
packssdw
xlat
xor
add
or
adc
add
and
mov
adc
dec
stc
and
mov
popa
cmp
movups
xchg
ret
push
adc
mov
push
and
inc
add
call
mov
imul
mov
push
shrb
ret
gs
ljmp
push
mov
inc
add
adc
push
lock
or
jg
jbe
and
sti
and
mov
cmp
shll
pushf
inc
das
mov
gs
addb
sbb
mov
xor
cltd
int3
jp
lds
or
xor
xchg
lret
adc
xor
sbb
push
dec
ds
xlat
dec
mov
inc
mov
push
push
mov
push
dec
fcoms
xchg
sahf
push
pop
in
xchg
inc
push
cmc
push
imul
sub
xor
fwait
pop
dec
dec
leave
dec
lcall
and
inc
xchg
jno
mov
add
mov
stos
push
push
mov
mov
cli
xchg
xchg
sub
enter
imul
jmp
mov
or
jle
push
fldenv
or
shl
adcl
mov
pop
push
andl
mov
daa
dec
sub
lcall
call
fsts
sbbl
cmp
adc
or
jb
jmp
ds
jmp
adc
into
mov
aas
push
sub
add
xor
adc
push
mov
sbb
cmp
dec
sbb
je
or
add
pop
pop
add
pop
std
or
dec
or
fsubrl
into
cltd
adc
sahf
mov
lcall
cmp
dec
rcl
dec
mov
pop
dec
aas
pop
xchg
fadds
sub
arpl
and
sub
call
mov
cmpb
cmpl
adc
adc
dec
icebp
popf
lcall
sbb
cltd
int3
test
mov
sub
int3
pop
daa
add
xchg
imull
popl
lret
in
fadd
mov
sub
or
mov
mov
out
stos
jne
sub
sub
cmpsb
std
sbb
pop
sub
in
dec
add
lret
sub
sti
cmp
subb
mov
add
sbb
in
push
fistpll
push
mov
ss
pop
adc
orb
or
inc
or
jo
jb
loopne
pop
jge
loope
inc
fdivrl
in
pop
int3
cmp
mov
mov
nop
push
adc
jno
stc
adc
out
or
hlt
fstpl
cmp
dec
rcrb
orb
pop
xchg
and
or
or
out
adc
sbb
mov
add
inc
dec
push
jo
call
movsb
loopne
rol
push
popa
fmuls
mov
push
sbb
cmc
mov
cmp
inc
jl
push
adc
jl
es
push
and
ljmp
dec
mov
inc
or
pop
aaa
or
sahf
jns
ret
aam
ret
pop
add
cmp
dec
fistps
sbb
inc
bound
cmp
sbbb
fisubs
test
and
test
out
adc
ret
xor
in
ret
inc
inc
push
outsb
inc
pop
jmp
mov
cmpsb
inc
nop
inc
dec
adc
pop
lahf
pop
es
sub
mov
cmp
mov
ror
mov
icebp
int
adc
sub
or
inc
and
leave
cmp
pop
xor
mov
cwtl
cwtl
adc
fisubs
adc
mov
enter
add
inc
sbb
add
push
jbe
cli
adc
inc
dec
lea
fistl
and
pop
cwtl
repnz
push
adc
fstpl
dec
adc
iret
pop
je
je
inc
jb
imul
sbb
add
mov
push
jae
inc
movsl
adc
sbb
mov
inc
mov
sbb
jg
outsl
jno
xchg
fs
and
sub
jecxz
jno
divl
test
adc
sbb
dec
repnz
sbb
or
pop
push
push
dec
in
adc
pushf
imul
je
rclb
out
adc
jmp
inc
fs
ds
inc
pushf
dec
or
push
ret
ret
frstor
jg
repnz
mov
hlt
dec
jg
jle
mov
xchg
cmp
xchg
or
mov
ret
js
xchg
inc
fsubrl
or
xchg
inc
fsubl
inc
lret
cmpl
mov
cmp
in
lods
cli
push
pop
fmuls
dec
lea
ret
pop
fimuls
dec
aam
dec
sbb
push
dec
or
mov
adcl
pop
mov
into
je
push
xor
mov
adcl
cltd
lods
aas
mov
push
arpl
rcr
sub
adc
ret
and
push
jns
inc
xchg
stos
in
add
int3
cmp
xor
dec
push
ret
sub
mov
mov
data16
add
xor
and
mov
or
inc
pop
mov
jae
repz
mov
sbb
inc
stos
inc
inc
add
pop
pop
adc
mov
push
push
add
cmpsb
mov
mov
push
repnz
shll
mov
test
cmp
mov
data16
jmp
jp
jle
cltd
sub
sbb
xchg
inc
lds
outsl
out
push
sbb
pop
ret
ret
fptan
mov
push
mov
rcrb
daa
les
js
cli
addl
lfs
mov
or
mov
addl
in
cmp
dec
jnp
scas
cs
cmpl
or
jmp
jmp
ret
sbb
sbb
sbb
call
jge
ss
xchg
cwtl
inc
mov
inc
sbb
ds
sub
jne
sub
sbb
or
test
jecxz
jl
adc
jne
fdivr
imul
loop
inc
leave
dec
shrb
inc
xchg
dec
cmp
cmpl
and
mov
mov
mov
rcl
cwtl
sarl
sbb
mov
and
dec
rorb
test
incb
ja
sbb
xor
sub
push
ja
pop
or
je
cmp
pusha
sbb
adcb
enter
and
pop
loope
add
mov
enter
lret
or
jne
or
or
testl
imul
ret
and
sahf
push
push
dec
mov
imul
fistpll
cld
push
and
inc
cmpsl
inc
dec
ljmp
jno
popf
xchg
inc
outsl
push
xchg
pop
jg
and
mov
ss
jle
cmp
push
ret
ss
inc
dec
cmpsb
int3
add
clc
negl
pop
call
or
fidivs
add
cmpsl
jbe
cmp
xchg
dec
push
inc
push
ds
es
xchg
adc
dec
dec
ret
je
sbb
xor
or
in
add
pop
dec
push
mov
pop
adc
sub
inc
or
cmp
pop
cmp
mov
sbb
jo,pn
push
faddl
jg
xorb
and
push
ds
or
sbb
repnz
push
sub
inc
dec
sbb
xchg
adc
fidivs
repnz
push
mov
aad
jecxz
loope
fs
or
inc
js
push
iret
faddl
sbb
push
mov
cmp
outsl
rcl
cmp
out
jl
sub
sub
add
push
repz
cli
cmp
mov
add
les
push
add
push
push
xor
mov
fildl
xor
inc
gs
mov
pop
repnz
push
jp
sub
hlt
mov
add
out
sub
ficoms
out
pop
pop
insb
mov
xor
ret
call
xor
mov
and
sub
jl
push
sbb
mov
push
xor
sbb
arpl
push
ljmp
add
cmp
out
lret
or
push
cmp
xchg
stos
mov
adc
int
push
or
insb
jl
sbb
lock
jle
sub
inc
add
add
jae
jl
dec
cmp
lar
push
subb
jne
loope
bound
sbb
stc
adc
xchg
test
lods
subb
pop
push
adc
add
into
mov
inc
clc
je
cmc
jno
outsl
mov
mov
shll
xor
callw
testb
out
jmp
stc
test
dec
repnz
or
std
call
xor
jne
mov
in
sub
fcmove
pop
sbb
jo
add
cmp
mov
movb
in
es
adc
into
call
lock
flds
sub
fisubrs
jecxz
mov
mov
inc
push
inc
jns
and
je
sub
repnz
mov
sub
mov
outsb
dec
rorl
or
aaa
pop
pop
leave
movsb
xor
cld
mov
inc
inc
inc
sbb
mov
sbb
adc
push
daa
inc
fmull
adc
pop
add
test
mov
mov
sbb
jae
insb
mov
push
cli
cmp
jb
cmp
stc
aad
subl
repnz
insl
sub
test
loop
cwtl
cltd
mov
mov
mov
mov
scas
push
push
mov
or
mov
pop
les
inc
mov
mov
stos
pop
add
loop
and
lock
adc
movsb
outsb
dec
jno
jo
mov
or
lret
jle
jle
pop
rcrl
dec
and
pop
push
fs
mov
pop
mov
xchg
inc
jae
inc
adc
fisubl
sub
push
jge
push
jle
jne
push
dec
loope
and
fsubs
lahf
cmc
ds
push
push
sub
imul
ret
repz
hlt
pushf
push
lea
aam
sti
push
inc
xchg
adc
sub
addb
adc
add
sahf
dec
stc
add
lahf
cmp
pop
enter
mov
mov
adc
movsl
imul
mov
jo
adc
lcall
xor
int3
imul
mov
imul
mov
movsl
daa
pop
lahf
hlt
push
pusha
dec
or
and
cmp
and
int
push
mov
imul
cmp
jmp
out
push
inc
push
cmp
xchg
aas
aam
xchg
andb
sub
sti
movsb
mov
add
or
or
fdivrl
push
icebp
or
out
mov
push
add
ret
or
mov
inc
push
je
push
punpckldq
pop
sub
imul
pop
dec
out
int
repz
push
aaa
and
fistpll
sahf
lcall
push
ss
fisttps
mov
xor
mov
pop
mov
in
cmc
mov
pop
lcall
les
pop
ss
jle
stc
jne
jle
mov
dec
das
andl
repz
repnz
or
cltd
gs
ds
dec
repnz
jo
mov
cmc
loopne
subb
mov
gs
add
mov
sbb
jb
dec
xchg
or
push
adc
xchg
mov
pop
lcall
mov
es
ret
mov
adc
pushf
xchg
inc
cmp
bound
insl
sarb
and
adc
dec
pop
outsl
and
pop
loop
pop
shlb
add
int3
scas
mov
pop
mov
in
leave
cmp
dec
or
mov
sarb
sti
or
test
leave
xor
sub
sbb
mov
cmp
test
outsb
rol
cmp
fcompl
call
hlt
cltd
imul
sbb
out
test
rcll
js
sbb
inc
cmp
pop
shlb
mov
rolb
or
ds
inc
shrb
sbb
pusha
push
loop
push
pop
push
dec
cmp
ljmp
rcr
sub
test
cmp
mov
cwtl
cmpsb
mov
xor
stc
push
dec
pop
popa
aad
or
pop
cmpsb
sar
out
in
xchg
and
push
inc
jne
in
stos
adc
ds
mov
mov
jmp
sbb
testb
in
pop
pop
mov
or
into
jecxz
js
loopne
add
mov
adc
notb
mov
adc
popf
rcrl
ja
pop
jnp
ljmp
rcll
enter
push
cmpsl
mov
movsl
out
sbb
and
and
adc
or
cmp
pop
xchg
ret
jno
xorl
sahf
jmp
js
call
and
push
fdivl
jo
aad
aas
dec
or
push
sbb
mov
stc
cs
ret
sub
dec
jmp
xor
in
xorb
out
inc
inc
in
xchg
subb
add
ds
call
adc
and
loop
push
add
orps
ficoml
lods
push
mov
or
xchg
and
push
icebp
dec
adc
and
or
or
lahf
cmp
nop
or
push
leave
push
call
and
in
add
pop
pop
pop
and
enter
sbb
fs
jo
ds
dec
inc
add
mov
mov
dec
cmp
mov
sbb
leave
pop
inc
and
mov
xor
jb
cltd
jb
bound
xor
dec
gs
outsl
or
xor
lcall
sbbb
and
xchg
test
dec
divl
push
leave
inc
imul
insb
dec
pop
push
add
mov
jno
out
cmp
sbb
push
cmp
pop
out
clc
push
enter
adc
ret
xorb
call
push
iret
test
test
arpl
inc
hlt
cltd
fisubrs
outsb
xor
cwtl
jp
mov
sub
jmp
pop
loop
repnz
fmull
or
lea
xor
into
cmp
adc
sbb
mov
sahf
and
mov
sub
cwtl
scas
ds
mov
lock
inc
jo
sub
lret
cmp
mov
in
xchg
cwtl
xlat
push
cld
mov
dec
push
pop
or
das
jmp
lock
out
push
lea
xchg
les
lret
enter
mov
movl
inc
in
inc
xor
cltd
sbb
dec
push
pusha
insl
mov
fcompl
xlat
dec
cmc
cmp
lea
sbb
es
cmpsl
cli
mov
out
mov
jp
outsl
mov
mov
cltd
xchg
test
sub
shlb
jl
sbb
ret
dec
fwait
mov
and
je
fildl
sbb
sti
push
adc
outsl
dec
push
push
xchg
outsb
call
adc
pop
clc
sti
mov
subb
dec
pop
stc
leave
hlt
mov
daa
sub
adc
je
pusha
test
xor
icebp
mov
push
sub
xchg
cwtl
mov
jne
sahf
push
sub
out
xchg
xchg
sbb
and
ficoms
push
push
pop
aad
inc
sbbl
adcb
inc
insb
dec
popa
sbb
les
add
push
movsl
xor
add
in
sub
addr16
mov
inc
movmskps
shr
push
test
or
mov
mov
adc
cmp
clc
pop
sub
shlb
aad
or
sbb
test
mov
adc
jbe
push
hlt
sub
enter
enter
sbb
aam
inc
mov
cmp
cmp
dec
xor
push
sbb
add
or
sub
jne
into
sbb
inc
dec
mov
fs
mov
cld
adc
dec
dec
scas
push
adc
cmpsb
adc
and
out
push
rcrb
lahf
in
lods
or
or
mov
jl
shrl
jno
mov
sub
or
sti
cs
push
jge
xor
pushf
and
push
imul
sbbb
add
inc
stc
test
inc
mov
into
inc
outsb
data16
test
adc
jmp
inc
pop
fnsave
cmp
js
decl
sub
mov
mov
std
or
scas
pop
mov
dec
push
clc
sub
add
jno
jle
hlt
sahf
xchg
je
sub
and
pop
adc
sbb
mov
add
xor
jmp
adc
add
sbb
or
lret
or
add
push
jge
mov
pop
or
adcb
dec
mov
sti
repz
sbb
push
sbb
mov
aaa
inc
mov
repnz
cmpsb
inc
xor
sbb
adc
inc
stos
or
sub
ret
pop
and
push
push
push
test
inc
arpl
mov
lock
sti
jle
mov
fldl
jo
dec
mov
mov
sbb
mov
je
jp
lahf
jae
mov
inc
les
nop
add
mov
imul
dec
sbbl
jae
push
and
icebp
in
add
pusha
adc
or
into
popa
cmpsl
dec
xchg
pop
sbb
dec
add
xchg
mov
popa
js
and
ror
push
sbb
loopne
inc
jecxz
push
inc
cmp
cmp
add
mov
lcall
notl
ret
sbb
lret
mov
mov
out
mov
push
xchg
call
dec
scas
ret
gs
jo
jns
lcall
push
push
inc
xor
mov
mov
pop
das
and
mov
mov
mov
jg
std
js
sbb
inc
lret
neg
ss
mov
adc
push
mov
jnp
push
outsb
fs
bound
idivb
pop
lods
mov
fimull
push
or
test
rcrl
leave
pop
adc
iret
fnsave
ja
or
inc
inc
and
cmp
iret
popw
jg
pop
test
mov
es
cmpsb
lcall
adc
outsl
push
nop
repz
pop
pop
inc
adc
or
outsl
jae
fisttps
fs
and
or
dec
or
xchg
adc
stos
lea
dec
mov
inc
ja
lods
lods
push
add
sub
in
xlat
lret
loop
call
mov
loop
or
and
aam
scas
inc
push
xchg
les
or
in
adc
lcall
hlt
dec
and
ds
fildl
test
jbe
shrl
sbb
int3
cmp
xor
xchg
fwait
incl
and
in
jne
fstpt
addr16
sub
mov
test
push
dec
adc
add
inc
dec
ds
xor
fdivs
lea
dec
fmull
dec
rolb
adc
and
pop
mov
and
sbb
xchg
push
mov
and
inc
pop
push
cld
dec
cmp
or
aas
push
mov
stc
shrl
and
adc
test
or
xor
aam
cmp
out
pop
inc
and
pop
daa
add
jb
test
imul
mov
inc
pop
shlb
jbe
push
mov
mov
xchg
mov
mov
insb
push
sbb
mov
inc
sbb
mov
dec
in
dec
mov
mov
push
lods
jne
sub
stc
rclb
ret
push
and
mov
jbe
push
fadd
xchg
jge
in
or
jnp
enter
insb
addr16
stos
xor
dec
inc
sub
daa
mov
adc
loopne
aaa
add
xchg
nop
loope
xchg
mov
push
inc
push
rcrl
lea
push
xchg
pushl
lret
mov
pop
ljmp
lock
pop
mov
popf
sub
push
pusha
dec
out
das
sbb
dec
pop
pop
adc
std
sbb
xor
mov
aas
xchg
mov
sub
jmp
ds
push
dec
or
mov
pop
jo
stos
pop
je
sahf
adc
inc
in
cli
lret
dec
inc
cwtl
das
inc
daa
gs
mov
jbe
repnz
pop
dec
loope
stc
loopne
jae
xchg
testl
xchg
push
cmp
mov
push
orb
fcompl
pop
xor
mov
mov
je
repnz
cltd
rorl
add
mov
mov
inc
add
xchg
das
pushf
push
add
jae
jge
insl
xor
dec
pop
test
lods
cmp
stos
and
inc
push
pop
mov
pop
sysenter
aam
adc
pop
push
sahf
fcmovnb
lahf
push
xchg
test
inc
mov
je
lods
cmp
xchg
bswap
add
inc
push
repnz
imul
ret
js
mov
push
frstor
push
or
sub
aaa
and
xor
iret
in
jmp
dec
push
mov
sbb
mov
inc
cwtl
jg
and
push
pop
repz
jne
and
cmp
mov
hlt
lahf
test
sub
test
or
fidivrl
xchg
lret
xchg
addl
outsb
outsl
js
pop
es
bound
test
or
pop
mov
pop
jmp
call
push
mov
adc
adc
mov
mov
fdivp
pop
jo
call
or
adc
cmp
sbb
shrb
xchg
call
in
pop
adc
sbb
loop
mov
ljmp
outsl
pop
scas
dec
or
mov
add
inc
sub
mov
outsb
cmp
xchg
hlt
xlat
dec
aaa
pusha
pushf
add
xchg
iretw
adc
shlb
rdpmc
or
into
pop
jg
scas
pop
jne
cmpsb
inc
sbb
push
and
push
inc
testb
dec
xchg
loop
push
into
and
ficoml
ret
cmp
xchg
adc
pop
adc
jbe
mov
push
xor
icebp
les
loop
nop
aam
icebp
outsb
mov
dec
pop
into
ficomps
jmp
fdiv
sbb
leave
adc
fsubl
sbb
sbb
repnz
xchg
sub
ret
test
push
inc
mov
sub
push
push
mov
in
cmpsb
pushf
dec
or
ja
push
aaa
adc
jmp
xor
mov
gs
inc
dec
add
xchg
shrl
fs
cmp
mov
jl
lret
or
or
dec
or
or
jp
xchg
sub
hlt
dec
insl
data16
mov
lods
push
add
dec
call
pop
mov
dec
nop
into
mov
dec
xchg
push
test
xor
roll
jl
dec
sub
pop
pop
addb
sbb
cmpsb
and
out
fiaddl
xchg
faddl
cli
rclb
sub
or
fs
sbb
bound
xor
sahf
adc
pusha
sti
out
sub
sub
insb
adc
inc
xor
mov
ss
jecxz
xchg
stos
cmp
ror
outsb
sub
movsl
fidivl
inc
xchg
inc
lahf
sbb
xor
and
mov
and
cmp
mov
xchg
push
orl
add
pop
mov
pop
repnz
mov
sbb
lods
ds
jle
lret
call
jmp
adc
loop
sbb
sub
inc
orl
cs
mov
jae
push
rcrl
cwtl
dec
pushl
jmp
push
pop
ljmp
sbb
push
cli
mov
jb
inc
jecxz
sub
push
dec
push
push
adc
sub
or
push
je
fldl
xorb
xchg
pop
dec
mov
mov
sbb
inc
xor
inc
stos
or
or
movsb
or
fsubr
push
mov
mov
fstl
mov
jo
insl
mov
lods
popf
sarl
arpl
inc
or
add
and
mov
push
mov
push
mov
pop
and
das
push
or
addr16
mov
xorl
push
scas
push
mov
int3
je
sbb
xor
pop
and
jb
pop
std
pop
push
jo
into
cmp
inc
psubsw
test
in
dec
out
fnstenv
add
add
cltd
push
arpl
insb
mov
test
and
in
cmpsb
cltd
push
cmp
add
jmp
mov
and
nop
addb
inc
add
mov
xchg
pop
cmpsb
pop
xchg
sbb
lds
sbbl
fs
out
xor
in
pop
dec
inc
stos
cmp
sbb
push
mov
faddl
test
loop
add
adc
sub
lahf
dec
add
mov
mov
sbb
xor
imul
xorl
push
repnz
sbb
cli
inc
mov
movsb
mov
test
add
pop
scas
add
mov
sarl
cmp
sub
mov
dec
mov
cld
in
gs
ret
xor
gs
pop
dec
and
lock
sbb
cmp
daa
xchg
xor
mov
cmp
or
xchg
adc
push
lret
mov
adc
mov
clc
push
mov
or
add
lret
leave
popa
xor
imul
aam
pop
cmp
mov
fdivp
mov
das
test
fisttps
cwtl
add
push
xor
cmp
cmp
call
imul
sbb
insl
jnp
adc
xchg
fstl
lret
sbb
adc
push
mov
mov
out
aad
xor
cmp
shlb
lahf
aaa
xchg
and
cmp
adc
cld
gs
cmp
insb
into
mov
dec
inc
popf
xor
dec
push
fsubrl
aam
ss
add
dec
add
stos
or
dec
or
dec
fcoml
idivb
icebp
es
ret
dec
test
ss
sub
icebp
dec
jno
push
pop
mov
test
sbb
mov
pop
lods
cmp
mov
pop
mov
das
ljmp
clc
push
cltd
sub
dec
jns
xor
pop
lea
cmp
jo
cmpsl
dec
sbb
cmp
cmp
pop
inc
inc
outsb
ljmp
popa
in
mov
jl
sub
stos
aad
outsl
popf
insb
mov
adc
and
xchg
inc
rcrb
out
or
je
xor
adc
mull
jnp
cmpl
and
mov
push
inc
sub
arpl
adc
sbb
jnp
lea
cmp
testl
add
push
mov
fstpt
jb
out
lods
push
daa
insb
in
or
aas
push
adc
inc
pop
mov
mov
add
nop
and
push
sti
dec
xchg
bound
jmp
mov
xchg
gs
or
ret
cmp
adc
push
inc
xor
mov
test
mov
cltd
adc
imul
cmp
pop
inc
int3
add
adc
call
sub
insl
mov
repnz
mov
mov
popa
xlat
test
out
pop
xor
sahf
cmpsl
prefetch
test
jns
dec
add
push
dec
dec
inc
mov
ud2
scas
jmp
sbb
test
push
and
push
and
inc
sbb
push
fistpll
fwait
and
icebp
ja
push
cwtl
jp
inc
sbb
fwait
sbb
enter
rcrl
xor
or
testb
push
clc
sub
rcl
jo
push
mov
cmp
clc
and
xor
dec
inc
ss
inc
enter
adc
jg,pt
xchg
lds
adc
stos
sub
and
dec
and
jg
out
pop
cltd
push
mov
push
loop
mov
or
cmp
ret
icebp
or
push
enter
loope
sahf
adc
aas
jle
jge
mov
mov
popf
push
out
into
or
sub
adc
and
outsb
mov
imul
cmc
adc
mov
cmc
shl
cmp
popa
inc
xchg
fsubrs
iret
sub
sbb
jl
push
lcall
lret
xchg
jmp
mov
xchg
jl
mov
call
xchg
push
ret
lds
nop
leave
bound
and
sbb
cld
out
dec
mov
out
leave
inc
cmp
sbb
ja
dec
inc
or
ret
or
out
or
sub
jmp
cmp
add
jge
push
iret
dec
mov
into
je
or
mov
sub
and
xorb
pop
imul
xor
cmpsl
ss
inc
mov
in
xchg
mov
dec
loop
mov
pop
xchg
jle
adc
aad
push
push
mov
mov
inc
outsl
or
adc
jb
jle
sarb
xchg
xor
loop
repnz
add
test
cli
cmp
jg
insl
lcall
jbe
adc
popf
sbb
cltd
mov
cmpsb
lcall
loop
gs
or
add
jno
jbe
fs
sbbb
loop
jecxz
imul
jno
aaa
inc
leave
mov
pop
clc
cmpsb
shlb
push
or
xor
xchg
pop
mov
xchg
jno
cmp
sbb
or
imul
jge
and
cmp
xor
int
repnz
add
outsb
mov
popf
mov
int
ret
clc
repz
cmp
push
and
sbbl
ja
xchg
inc
push
or
pop
push
add
adc
pop
cmp
mov
xchg
mov
push
in
xor
pushf
or
mov
jl
cld
mov
arpl
orl
iret
xchg
fistl
and
insb
lea
pusha
lahf
and
ret
daa
ret
daa
dec
mov
leave
push
lcall
daa
dec
mov
add
fnstenv
push
jb
and
push
mov
push
xchg
add
or
imul
push
adc
dec
or
adc
sbb
push
sbb
jbe
cmp
dec
cmp
jmp
inc
repnz
jecxz
adc
dec
xchg
mov
ljmp
cmp
je
cmp
push
or
scas
mov
sbb
cmp
jle
js
push
dec
inc
jnp
inc
pop
fcoml
push
sahf
mov
cld
dec
orl
imul
xchg
sbb
sbb
into
cmp
add
loopne
sub
jge
adc
mov
inc
pop
and
mov
shl
and
rol
pushf
aas
imul
int3
mov
add
jne
jnp
sbb
aas
dec
pop
sub
bound
add
push
xchg
cmpsb
mov
sarb
mov
lock
cmp
mov
and
or
and
or
mov
subb
mov
es
fwait
cmp
ret
pop
mov
mov
ds
jo
shr
repnz
or
aad
xlat
pop
movsl
xor
push
lcall
aas
push
and
and
fldcw
push
add
add
or
jecxz
in
dec
cwtl
jmp
adc
dec
dec
pop
adc
bound
les
movsl
shll
sub
mov
mov
mov
jae
and
sub
fbld
inc
add
test
inc
jb
leave
xchg
fcmovnbe
dec
adc
outsb
into
cmp
movsb
test
arpl
negl
sub
xor
xor
xchg
rolb
jb
pop
push
push
jb
sahf
mov
pop
gs
in
pop
fidivrs
int3
call
jmp
dec
push
or
pusha
imul
ljmp
pmulhuw
out
cmp
ss
mov
fmul
ret
ds
es
cld
push
movb
xor
or
cwtl
movsl
daa
xor
pop
syscall
mov
data16
xchg
jge
dec
lahf
fcomps
sub
mov
cmp
jnp
testl
movsb
hlt
outsl
jle
sahf
mov
in
xchg
lret
mov
or
xchg
xorb
adcb
jne
aas
mov
pop
jge
adc
push
pop
andb
inc
jg
dec
push
lcall
dec
adc
mul
mov
mov
push
adc
into
pop
xchg
out
out
ret
mov
sahf
sub
push
in
ret
pop
dec
in
sub
cmpl
sbb
or
and
shll
push
mov
das
push
mov
mov
sbb
mov
scas
sbb
fst
or
push
clc
and
sub
fcmovb
add
jmp
popw
or
xor
repz
enter
and
test
xchg
repz
insl
add
push
lret
adc
nop
cs
and
sbb
leave
insl
mov
or
je
adc
out
xor
cmp
pusha
and
pop
lcall
movsb
ja
in
or
out
sub
cmp
arpl
sub
enter
jo
pop
push
sbb
push
inc
push
lret
pop
mov
pop
loope
push
jp
fbstp
or
popa
mov
call
int
push
sub
imulb
cmp
jb
inc
inc
ret
sbb
inc
pop
push
andb
push
push
popf
pop
aad
call
jmp
je
mov
inc
pop
leave
or
fldenv
inc
outsl
aas
pop
push
int3
pop
stos
mov
in
add
add
adc
ficomps
xchg
sbb
and
mov
jno
popa
xor
dec
scas
jecxz
js
cmp
jb
push
add
test
cmp
ja
aad
and
dec
jae
out
leave
int3
cli
push
pop
jge
mov
push
aad
int3
adc
dec
sarl
adc
sbb
jns
sti
push
pusha
shll
insl
inc
sub
arpl
push
rorb
or
ljmp
outsb
pop
xor
pop
xchg
movsl
les
and
je
pop
repnz
leave
cmp
adc
push
dec
cmp
add
and
pop
enter
lcall
ret
mov
outsl
or
bound
jl
pusha
mov
push
push
push
cltd
leave
mov
lock
popf
push
mov
push
dec
cli
aaa
push
adcl
xchg
insl
stos
out
push
cwtl
addb
adc
inc
and
test
bound
cmp
scas
sbb
loopne
or
fsubs
inc
andl
cwtl
add
sbb
lock
jns
jb
sub
add
or
adc
pop
outsl
daa
pop
xor
fisubs
das
sub
inc
sub
dec
scas
stos
pop
pushf
inc
sub
xor
inc
lods
and
xor
rclb
decl
inc
push
in
xchg
adc
push
dec
jge
push
lods
mov
sbb
inc
dec
lea
repz
addb
mov
cmpsb
ja
mov
mov
jbe
repz
mov
stos
and
push
adc
pop
adc
cmp
push
ss
shrb
fiadds
push
dec
ljmp
xlat
ljmp
into
fndisi(8087
mov
lahf
out
xchg
mov
cmp
dec
in
or
ret
sub
pusha
hlt
xchg
mov
cmc
push
adc
stos
xchg
addb
lahf
sbb
nop
xchg
lahf
push
stc
adc
sbb
fcoms
lcall
sbb
ret
dec
cmc
mov
inc
pushf
cli
xchg
sub
dec
inc
jne
inc
scas
inc
out
cmpsb
call
int
popa
fmull
or
cmp
jmp
sbb
call
outsl
aaa
subl
orb
xor
mov
or
inc
and
call
cmp
cli
inc
fnsave
out
nop
pop
jb
sub
mov
xor
or
push
outsb
cmp
and
gs
daa
insb
sbb
pusha
filds
mov
repnz
pop
dec
imul
popl
add
jnp
cs
dec
repnz
cmc
lds
push
je
shr
sub
andb
adc
stos
jmp
shlb
and
jmp
xchg
push
dec
adc
cltd
daa
in
pusha
xor
nop
scas
jg
inc
enter
repz
jecxz
cmp
sarb
and
negl
pushf
cmp
in
and
jnp
or
add
sub
adc
fiaddl
or
adc
sub
inc
lcall
jmp
test
jp
sbb
addr16
cs
mov
aas
bound
cmpsl
sbb
push
sub
push
addr16
repnz
lret
mov
xchg
mov
ds
fs
add
adc
mov
push
je
and
sti
popa
cs
repz
lahf
pop
adc
and
invd
inc
sbb
add
arpl
jmp
arpl
rcl
test
mov
pop
sub
rolb
or
inc
movsb
add
or
xor
lock
cmpsb
enter
ds
inc
js
punpckhbw
leave
jle
inc
dec
repz
mov
add
push
in
pop
or
in
sti
das
js
mov
jecxz
xchg
xor
faddl
push
mov
mov
imulb
inc
dec
or
sub
pop
push
out
xor
adc
rcll
sbb
pop
arpl
jmp
and
mov
sub
cmp
aaa
push
insl
mov
push
cmp
xchg
xchg
add
sbb
push
in
mov
push
dec
enter
push
lahf
ja
repnz
sub
dec
cld
xor
mov
nop
jo
orb
mov
hlt
sub
into
in
sbb
fadds
xlat
mov
and
xchg
nop
sub
cs
add
in
or
jnp
inc
or
xor
sbb
clc
add
popf
mov
mov
dec
in
cmp
dec
lods
int3
mov
jge
sarl
inc
sbb
push
jnp
jo
inc
push
sub
popa
add
out
mov
adc
fstl
cld
das
pop
test
xchg
jl
pop
inc
mov
icebp
cmp
aas
jno
scas
sbb
ja
daa
mov
or
sbb
jp
mov
lock
lock
js
lret
jnp
inc
jmp
adc
jb
daa
orb
push
and
ucomiss
dec
push
cmp
je
sbb
push
xchg
jp
imul
mov
cmpl
push
or
mov
sub
adc
xor
scas
mov
cwtl
aad
mov
cwtl
das
jge
or
dec
xchg
in
rcrl
sbb
pop
push
dec
or
pop
dec
mov
sti
das
lock
sub
pushf
or
push
dec
inc
or
movsb
xchg
inc
imul
cwtl
add
stos
inc
adc
mov
push
jp
jb
call
icebp
mov
and
enter
and
mov
jge
cs
fistpll
mov
inc
dec
inc
push
xlat
and
add
pop
or
jg
and
inc
pop
adc
xchg
or
imull
or
push
into
sbb
push
rcrb
call
cli
pop
loope
push
pop
jo
jmp
mov
testb
mull
xor
nop
shll
mov
xchg
mov
add
add
cmp
sbb
sbbl
sbb
mov
jae
ficomps
jle
dec
dec
mov
push
std
setle
xchg
test
clc
mov
or
gs
call
push
neg
pop
pop
mov
or
call
and
stc
jmp
clc
insb
mov
dec
dec
scas
jb
call
xchg
movsl
pop
and
les
mov
adc
adc
dec
scas
xor
push
bound
pushf
cmpsl
push
shlb
dec
inc
aad
psubsb
ds
cmpsl
add
je
rcrb
inc
dec
jns
jbe
ja
inc
cmp
outsb
push
inc
push
sbb
mov
xchg
cmp
pop
sbb
dec
gs
xchg
lahf
cli
adc
frstor
add
or
mov
mov
push
sbbl
inc
loopne
xchg
inc
jbe
sub
pop
jmp
outsl
sub
out
int3
xor
mov
xchg
fs
mov
and
or
add
jle
bound
je
xor
cmp
push
mov
xchg
adc
lcall
ds
push
or
mov
jge
subb
sbb
mov
adc
inc
push
mov
call
mov
jl
or
ds
xchg
xor
mov
sub
and
int
adc
fadd
lret
aas
cmp
call
rorl
imul
mov
push
adc
cwtl
mov
rclb
cwtl
ljmp
stos
movsb
dec
mov
sub
fildll
popa
or
sub
nop
mov
pop
pop
xchg
je
cmp
notb
adc
mov
insb
setnp
rcr
insb
jbe
and
lea
pop
xchg
bound
mov
jo
call
mov
jp
enter
ja
adc
shrb
cmp
fbld
add
dec
sbb
xor
mov
add
loope
jo
xchg
pop
into
add
movb
lahf
sbb
clc
insl
jnp
xchg
into
xor
mov
push
repnz
in
lahf
and
sarb
and
xchg
push
outsl
lret
adc
icebp
cmp
and
pop
es
repnz
or
out
das
jae
mov
lea
fmuls
push
repnz
sub
repnz
test
push
pop
and
push
mov
loopne
or
inc
call
lcall
jle
push
sub
inc
sbb
inc
xchg
data16
gs
jecxz
or
popf
sub
shlb
ds
out
test
adc
insb
jg
es
push
pop
sbb
dec
inc
adc
aad
adc
or
or
sbb
sub
pop
sbb
cs
mov
test
inc
aaa
and
xor
subl
call
jb
mov
int3
adc
push
stos
xchg
cmpsb
pop
les
mov
clc
jp
cmp
repnz
and
jle
sub
loop
mov
jns
inc
push
or
mov
or
and
enter
inc
or
push
sbb
mov
inc
sbb
and
sbb
call
and
sbb
loop
or
int3
les
or
pop
push
lock
mov
imul
push
or
in
push
dec
adc
jo
pop
repz
or
push
dec
pop
and
lock
popf
fcmovnbe
sbb
and
pop
xchg
sub
jmp
pop
adc
aaa
adc
call
jmp
or
and
sbb
pop
add
dec
ret
das
push
lcall
or
js
jno
xchg
sub
mov
cs
enter
sbb
dec
sub
xor
paddusb
ficompl
inc
js
mov
pop
sub
and
aad
jp
cmpsb
adc
loopne
adc
cmpsb
cmpsl
imul
pop
pop
xchg
mov
sbb
xchg
inc
xor
push
mov
cmp
and
push
dec
lds
sub
in
jno
push
cltd
in
dec
sub
and
sbb
stos
or
sbb
push
cli
daa
mov
ljmp
ja
xchg
jo
sub
or
stc
int
mov
sub
or
aaa
out
and
cmp
add
lea
nop
dec
xor
xchg
fxch
pop
sub
pop
lret
inc
jp
dec
push
sbb
sub
fmul
bound
fs
or
or
sub
lcall
push
ss
and
lret
mov
gs
push
inc
and
pop
into
push
mov
mov
lahf
test
pop
insl
scas
mov
jne
bound
cmp
sub
dec
dec
sub
inc
push
ret
in
push
mov
outsl
adc
mov
popa
sbbl
dec
or
out
repnz
fwait
cmp
sub
cmp
inc
push
add
lea
adc
pop
pop
or
dec
fwait
xor
ss
imul
inc
inc
and
push
outsb
out
dec
out
pop
shll
push
jl
frstor
pop
push
test
add
imul
mov
or
adc
sbb
mov
xor
sbb
and
loop
insl
rcrb
mov
adc
lds
mov
or
fists
push
mov
pop
int
mov
inc
xchg
fsubs
cmp
pop
xor
rcll
pop
sub
adcl
fidivrs
xor
leave
call
aaa
pop
cld
imul
sahf
loope
pop
popf
fnstenv
cmp
push
push
xchg
aam
jle
xor
lods
scas
xor
mov
adc
pop
rclb
adc
mov
gs
add
and
in
push
imull
xchg
frstor
fucomi
sbb
lds
dec
dec
mov
arpl
fldcw
out
and
sbb
inc
sub
fsubrs
lea
lock
push
adc
inc
inc
inc
lret
incb
push
lcall
movsb
sub
or
xchg
test
mov
cmp
cmpb
lahf
mov
cwtl
fnstsw
roll
adc
cs
mov
sub
xor
or
adcb
orl
jmp
push
sbb
and
sbb
bound
rclb
dec
push
out
xor
cwtl
je
add
mov
sbb
jbe
ret
pop
adc
xchg
dec
int3
and
aaa
pop
sub
mov
cltd
call
imul
dec
std
ret
ja
mov
incl
rcrb
or
push
lea
jecxz
xor
shl
dec
xor
adc
repz
and
adc
mov
jp
adc
mov
sub
sbb
loop
push
adc
jne
sbb
lods
lret
push
clc
ss
popa
inc
mov
push
out
mov
and
lock
lret
addr16
mov
jo
mov
jns
je
sahf
xor
das
or
dec
repnz
fcoms
mov
lock
jmp
ja
xchg
jmp
rcrl
pop
shl
test
in
dec
fildl
mov
jmp
or
mov
cmp
test
cld
jmp
mov
add
inc
jo
pop
jns
jo
pop
cmp
insb
xchg
inc
loop
jle
cmp
jne
gs
push
fistpl
mov
pop
and
and
inc
xchg
in
rol
adcl
add
clc
movsb
xlat
xchg
icebp
fcmovu
xor
xor
insb
jbe
lahf
or
inc
push
mov
repnz
add
push
popa
test
jo
das
mov
cwtl
xlat
repz
jle
test
lods
insb
ljmp
inc
imul
pop
cmp
cltd
and
sbb
push
and
sti
imulb
orl
stos
inc
fnstsw
pop
js
add
dec
js
and
cli
xor
add
inc
sbb
xchg
sbb
notb
pop
setg
insb
add
and
fimull
and
rcl
push
mov
nop
xor
pusha
xchg
shll
scas
mov
and
xchg
pavgb
rorb
pop
pop
inc
mov
fsubl
adc
scas
pop
inc
clc
jp
mov
add
or
mov
cli
mov
and
xor
cmpb
push
dec
push
jne
push
lods
decl
fildl
dec
xor
pop
add
daa
mov
cmp
jmp
jmp
and
mov
inc
aas
adc
push
lea
nop
sub
hlt
adc
dec
jg
fstps
cmp
int3
pop
sahf
cltd
fs
js
xor
call
cmp
es
mov
cmp
inc
inc
push
sti
sub
mov
dec
jne
pop
mov
push
imul
mov
adc
push
pop
orb
add
xchg
xchg
push
mov
in
sub
mov
imul
cltd
or
lea
pop
adc
mov
test
pop
xor
in
adc
movsb
or
fs
pop
addl
cmp
xor
loop
mov
gs
pop
xchg
mov
filds
pop
or
rorl
push
lea
push
mov
jle
mov
jg
outsb
scas
imulb
sub
push
or
lcall
sbb
and
fdivs
sub
lcall
movsw
outsb
pop
cmp
in
inc
test
jo
jno
nop
mov
hlt
xlat
pop
jl
dec
inc
sbb
enter
pop
pop
pop
or
loop
in
cltd
and
xchg
pop
loope
or
cld
dec
test
rorb
sbb
pusha
pop
out
push
shlb
rcl
js
push
sbb
sub
xchg
and
lcall
scas
xchg
or
rclb
push
push
pop
and
sbb
sbb
sub
insl
and
xlat
and
cmp
inc
jl
mov
sub
mov
jg
add
fdivrl
arpl
push
les
or
adc
and
sbb
and
and
jmp
cmpb
mov
ret
mov
cld
cwtl
lds
pop
repz
adc
mov
jecxz
std
push
cmpb
int
jge
pop
movsl
in
dec
adc
mov
mov
sbb
adc
xor
adc
pop
dec
sbb
std
mov
rcrl
or
inc
neg
cmp
sbb
push
sarl
je
and
add
add
das
push
xor
sub
add
cmc
ljmp
jno
jle
or
xchg
pop
mov
mov
inc
mov
push
push
xchg
pop
jnp
cmpsl
imul
xor
adc
mov
sbb
mov
mov
jbe
repz
test
pop
cld
sub
pop
push
frstor
dec
or
mov
test
arpl
mov
bound
dec
xchg
mov
jl
dec
xchg
cmp
or
inc
xchg
ja
pop
adc
push
stos
xlat
ljmp
leave
stos
popf
mov
and
and
pop
stc
push
pop
adc
lahf
cmp
adc
add
scas
jmp
mov
imulb
sti
lock
jb
pushf
jb
out
iret
sbb
xor
sub
sarb
add
das
add
imul
pop
cld
inc
or
iret
or
mov
push
out
mov
adc
mov
jb
pop
mov
out
pop
test
or
out
inc
lret
aam
push
xchg
xchg
add
push
mov
inc
testl
inc
les
outsb
shrb
inc
enter
mov
or
fisttps
test
adcl
adc
ds
lods
test
cmp
pop
pextrw
and
out
or
dec
push
pop
pop
and
sbb
or
jl
pop
inc
in
pop
ss
and
xchg
pop
sbb
cmpsb
addr16
cltd
ficompl
jg
pop
sub
roll
loop
inc
xlat
fisubl
lock
inc
cs
int
mov
sbb
xchg
cmp
xchg
mov
add
fmull
fistps
lock
jg
adc
xchg
cltd
orb
and
cmp
in
std
jge
adc
sub
dec
pop
shll
outsl
mov
inc
and
jo
outsb
daa
lcall
ror
mov
pop
mov
cmp
or
xor
cs
push
inc
mov
dec
push
ret
cwtl
outsl
jmp
jns
xchg
clc
arpl
push
jl
ret
insl
mov
inc
xor
inc
loope
mul
push
cmp
sub
je
js
push
pop
mov
add
and
adc
orl
mov
xchg
sub
out
inc
sbb
jae
dec
dec
orl
pop
fcoml
cmc
fmulp
addps
xchg
loopne
or
dec
fidivrs
jnp
adc
mov
aaa
setno
cmp
cld
pop
cmc
inc
mov
inc
insl
mov
test
shll
arpl
or
aam
mov
pop
dec
fistpll
add
mov
psrlw
fidivs
mul
inc
ja
stos
jp
jnp
push
iret
push
xchg
nop
dec
jle
xchg
fimuls
ret
inc
mov
nop
rcrb
aam
push
outsb
push
xchg
stc
or
add
push
loop
pop
mov
ret
jl
testb
dec
rsqrtps
nop
fs
dec
lock
loop
ljmp
in
or
outsl
mov
dec
or
leave
out
hlt
test
idivb
inc
push
out
and
notb
call
mov
fwait
or
add
lock
enter
mov
cs
xor
shlb
mov
jne
sbb
adc
lret
imul
fmuls
ja
cli
mov
jo
iret
sahf
cmp
pushf
sbb
scas
lock
adc
jle
mov
lcall
push
mov
into
adc
push
add
inc
lret
mov
in
or
mov
cmp
loopne
cltd
jl
mov
popf
push
in
fdivrl
aaa
pop
dec
test
and
jmp
inc
fs
je
cltd
jae
out
jge
addl
jae
icebp
or
adc
stos
mov
inc
shrb
add
jmp
pushw
mov
and
xchg
add
xchg
pop
out
cli
pop
repnz
mov
es
fwait
sub
lcall
mov
and
and
orb
jo
cmpsb
push
and
pop
dec
in
adc
jbe
repnz
push
insb
and
xchg
in
fildl
pop
in
push
sbb
and
push
lock
clc
add
sub
adc
ret
pop
add
and
add
mov
nop
inc
ja
xor
inc
sub
cwtl
decl
inc
inc
pop
xor
lea
jmp
pop
mov
xor
pop
lret
xlat
inc
add
dec
mov
push
push
dec
inc
call
mov
dec
lock
pop
out
movd
ret
xchg
pop
or
fs
dec
stos
test
nop
mov
xorb
mov
dec
cmp
aam
add
xor
pop
sbb
loopne
and
add
test
mov
adc
push
and
mov
push
int3
add
push
lret
sub
mov
rol
and
shld
pop
or
outsl
adc
inc
test
or
filds
sub
cmp
push
cltd
xorl
pop
out
cmp
or
imul
adc
les
lcall
repnz
inc
mov
imul
icebp
jb
mov
adc
fwait
popa
cmpsb
mov
dec
bnd
lret
fwait
pop
sbb
dec
outsl
pop
cmp
dec
fwait
bound
cmpsb
aad
fmul
repnz
lock
push
rolb
mov
mov
and
pop
sbb
push
pop
or
stos
push
js
cmpsl
push
add
cmp
pop
sarb
mov
or
lret
mov
rol
pop
arpl
scas
cli
insb
or
sarl
cmp
xor
mov
cmp
mov
std
int3
jecxz
or
sbb
aam
push
inc
push
fimull
xchg
dec
out
push
lods
add
mov
xchg
push
or
and
cmp
push
arpl
sub
enter
out
push
inc
loopne
add
cld
jb
sbb
pop
mov
pop
dec
mov
pop
rolb
lock
add
lret
repz
and
sub
push
jne
adc
inc
xorb
movsl
cmp
mov
inc
xor
mov
xor
adc
and
sub
pop
push
inc
xchg
cmpsb
adc
sub
outsl
add
mov
dec
daa
test
dec
cmp
adc
and
cmp
sbb
mov
fmull
ljmp
scas
or
inc
out
adc
push
and
icebp
sub
sub
test
pusha
pusha
cmp
jns
pop
add
daa
add
sar
xchg
push
fadd
add
push
movsb
adc
addr16
adcb
nop
sbb
xchg
xor
mov
cmp
stos
inc
fcoms
and
fisttps
clc
js,pt
pop
pop
imul
xchg
add
pop
ror
sbb
mov
or
adc
cmpsb
pop
or
and
jo
imul
adc
imul
pop
push
jmp
shlb
fdiv
mov
loopne
and
loop
push
pop
adc
ret
test
rcrl
inc
mov
insl
test
cmp
adc
push
aas
sbb
inc
lret
nop
sbbb
sbb
xchg
test
mov
xor
sub
and
adc
hlt
xor
and
shr
bound
jp
sbb
pop
jb
fucomip
push
imul
outsb
inc
pop
aad
sbb
add
inc
test
mov
sbb
dec
repnz
out
adc
pop
or
sub
cmp
stos
pop
loope
in
movzwl
or
adc
push
call
testl
add
incl
movsb
or
adc
shl
cld
jle
clc
and
and
outsl
hlt
add
bnd
pop
repnz
xor
lea
xor
xchg
inc
and
xchg
xchg
sbb
adc
bnd
imul
sbb
jns
xchg
xor
jle
loopne
sbb
xor
push
jo
into
sub
xchg
ret
cmp
cmp
icebp
mov
pushf
fiaddl
cmp
pop
inc
rolb
push
jg
pop
out
insb
addr16
nop
pop
sbb
dec
orb
xor
or
xor
adc
clc
pop
mov
xchg
loopne
clc
push
int3
cld
mov
push
xchg
int3
xchg
pop
push
cmp
addr16
mov
push
xchg
call
push
je
stos
jp
mov
out
roll
negb
mov
lods
addl
std
das
push
rep
cld
fisttpl
dec
or
pop
sbb
xchg
and
lahf
sti
xchg
pop
dec
aad
negb
ds
rcll
sar
mov
push
push
dec
push
mov
mov
or
js
pusha
das
pop
dec
in
and
fwait
ret
das
data16
and
jle
je
inc
js
arpl
and
xor
mov
mov
jne
ds
push
sar
shrb
fisttps
sub
pop
xor
jle
loop
decb
adc
cmpl
mov
dec
push
sbb
sbb
add
mov
push
adc
adc
setge
mov
pop
out
shrb
mov
in
cmpl
jecxz
and
jg
inc
inc
sbb
rorl
and
ret
ret
movsb
lock
adc
enter
call
dec
sbb
fdivl
xchg
mov
push
fidivs
jno
lock
popa
lods
daa
and
in
invd
shrb
test
or
paddw
mov
ret
je
scas
mov
outsl
les
subb
jno
jge
test
out
mov
mov
out
das
and
fs
push
sbb
adc
push
sbb
mov
mov
ljmp
pop
pushw
mov
pop
mov
cmp
sub
or
ficoms
mov
jbe
fmulp
nop
out
ret
or
cmp
mov
jae
addr16
sahf
or
push
and
xchg
dec
push
out
adc
in
fldcw
pop
xor
out
test
data16
rorl
lret
xor
jecxz
xchg
jmp
or
xchg
mov
sti
xlat
jecxz
addr16
cmp
lcall
lret
xor
and
sbb
enter
rol
sarb
or
jl
pop
and
jecxz
or
call
adc
outsl
ljmp
mov
jae
mov
inc
cmp
loop
adc
cmp
vmread
xlat
xor
pop
rcrl
cvtps2pd
sub
or
std
es
jnp
out
jne
sub
fidivrl
mov
xchg
sub
or
mov
pop
and
lea
mov
or
pop
push
out
and
cmp
out
xor
rorl
xchg
xchg
addr16
mov
leave
add
mov
jno
mov
mov
pop
push
roll
and
push
sbb
mov
jl
rcrl
les
push
bound
adc
pop
sub
popf
cli
lcall
mov
xor
and
jb,pn
in
jno
insb
dec
repnz
leave
inc
mov
inc
ret
ja
jge
movsb
pop
aas
mov
add
mov
xchg
push
xor
out
adc
sahf
push
adc
nop
mov
xor
inc
pusha
sbb
cltd
sahf
inc
mov
pop
or
sbb
push
dec
jl,pt
push
xor
mov
aas
test
lds
inc
std
decb
push
xchg
fldz
mov
pop
sbb
push
push
cmp
push
inc
push
or
iret
sbbb
scas
cs
loopne
push
mov
pop
iret
adc
add
sbb
and
outsb
pop
mov
out
mov
in
ljmp
pop
loop
cmp
inc
pop
cmp
xor
outsb
mov
or
dec
fidivl
jle
and
push
pop
mov
iret
lahf
or
sti
mov
js,pn
sbb
and
cs
mov
xor
test
push
lods
and
es
push
push
inc
imul
sbb
pop
inc
lock
and
stos
sub
inc
sub
outsb
mov
push
sbb
and
mov
popf
filds
push
call
repz
push
clc
mov
icebp
vminsd
or
lret
mov
mov
das
xchg
scas
scas
cmp
cmp
scas
pop
adc
mov
mov
and
dec
jl
lahf
push
and
pop
subl
test
sbbb
cmp
xor
push
ficomps
lret
cmp
fildl
lock
mov
iret
and
xchg
sti
jg
int3
cmp
jmp
pop
inc
gs
push
mov
sub
xor
imul
pop
leave
mov
std
cmp
imul
insb
xchg
sti
add
insb
mov
inc
cmp
mov
inc
jg
arpl
sbb
icebp
mov
mov
cld
outsb
lods
stos
pop
sbb
xlat
or
dec
xchg
sub
mov
xor
sbb
push
mov
push
sub
fisttpl
and
pop
push
mov
inc
lods
pop
pop
hlt
arpl
out
add
push
repnz
jbe
push
add
scas
shr
int3
sub
cmp
push
push
aam
clc
adc
xchg
adc
test
adc
mov
cmp
mov
les
or
jl
pop
and
outsl
movsb
arpl
test
out
mov
daa
mov
xor
pop
in
test
outsb
in
mov
push
or
push
imul
inc
lret
add
stc
or
dec
cmp
push
push
mov
outsb
or
adc
cwtl
cmp
movsb
mov
push
test
sahf
inc
mov
js
int3
jae
push
call
lods
cmpl
dec
call
lods
sar
rclb
xchg
mov
cmpsb
pop
pop
popa
inc
and
and
cmp
add
pop
std
cli
push
inc
dec
pop
cmpsl
movsb
adc
popa
fs
sub
mov
psubsb
adc
or
xor
int
cmp
cwtl
test
mov
call
sbbl
popf
into
pop
pop
call
test
xchg
pop
insb
mov
repnz
test
xchg
repnz
or
and
subps
inc
sbb
add
and
adc
arpl
outsb
jg
imul
sub
push
or
pop
push
stos
insb
jb
fisubrs
mov
insb
add
cs
cmpsl
jmp
iret
aaa
popa
enter
mov
jnp
popa
sbb
ja
sbb
pop
fwait
push
call
insl
push
in
push
mov
sti
inc
sarl
fstps
jbe
nop
adc
loop
in
adc
fimull
mov
push
cmp
push
sbb
mov
xor
mov
or
push
incl
dec
repz
push
push
cmp
cmpsb
cmpsl
mov
push
in
adc
lcall
pop
inc
mov
ret
and
inc
test
pop
adc
repnz
add
inc
adc
dec
jo
lods
push
push
mov
push
call
mov
aas
xor
sub
or
fistps
or
sbb
je
push
lcall
inc
lods
rolb
int
jp
nop
push
out
into
or
adc
dec
lds
pop
rclb
aaa
adc
jns
pop
mov
adc
sbb
push
mov
inc
push
lock
mov
test
and
test
cmpl
jnp
cmp
es
pushf
xchg
cltd
inc
add
movsb
dec
cmp
or
jle
int3
sbb
cmp
and
xor
insl
mov
js
cwtl
mov
cli
sbb
mov
mov
xchg
cli
sbb
repnz
js
pop
dec
and
rclb
scas
jp
mov
or
xchg
fs
test
sar
test
and
movsb
pop
dec
inc
sti
cwtl
xchg
xchg
ds
xchg
int3
cs
mov
mov
push
dec
cld
iret
inc
mov
inc
aad
adc
push
mov
aas
add
mov
aas
jne
mov
out
add
push
hlt
shll
add
call
mov
push
sub
add
sub
and
clc
orb
or
lock
sub
fimuls
dec
cmp
sub
inc
and
insb
out
adc
inc
jmp
xor
jmp
sbb
outsb
lock
add
and
sbb
inc
and
loopne
sahf
and
xchg
sub
pushf
sbb
lahf
outsb
out
or
pop
out
test
pop
xor
cmp
xchg
jl
mov
pop
test
push
mov
or
nop
popf
jne
jp
add
and
xchg
out
xchg
mov
sbb
cmp
ret
mov
push
mov
push
adc
sbb
sub
jl
pop
orb
push
sub
sbb
pop
jmp
or
int
inc
rorl
and
mov
push
or
subl
xchg
xor
mov
out
mov
cli
inc
mov
mov
and
push
call
pop
pop
and
sbb
and
push
pop
in
sbb
aam
push
cmpl
ret
ss
ss
es
adc
les
inc
cmp
out
out
dec
and
jmp
or
out
xchg
pusha
push
out
push
test
out
jp
mov
cmp
test
fwait
je
ljmp
dec
outsl
or
cmpsb
jbe
and
add
jge
adc
inc
push
or
push
xchg
adc
testl
inc
pop
movsbl
adc
inc
push
in
sbb
sub
fstpl
pop
clc
adc
push
popf
xchg
pop
decb
dec
pop
repnz
cmp
mov
mov
int3
lcall
or
xchg
inc
xor
xchg
cmc
cmp
jo
dec
leave
sbb
bound
add
pop
and
insl
inc
testl
mov
pop
out
xchg
fdivl
pop
or
data16
call
xchg
dec
int
imul
and
div
push
or
pop
or
jp
xor
aad
incb
add
mov
adc
cwtl
xor
inc
pop
push
subb
push
iret
pop
push
fiadds
push
pop
mov
lahf
jbe
mov
mov
mov
sarl
xor
fiadds
push
clc
adc
jbe
divps
int
je
cs
out
aaa
subl
jecxz
pop
loop
push
push
mov
push
sahf
icebp
pop
push
inc
popa
push
push
fildl
enter
push
fnstsw
lods
jb
and
xchg
or
lods
add
addb
adc
cmpsb
sub
or
push
xor
cmp
add
mov
cltd
push
push
mov
mov
xor
or
lods
aas
out
lcall
test
popf
mov
mov
stc
pop
sub
addb
adc
fstps
lods
add
inc
aam
data16
dec
cltd
or
iret
ret
jns
add
scas
push
mov
xchg
dec
pop
mov
rcrl
and
add
ror
pop
inc
mov
push
or
mov
dec
mov
aas
test
dec
dec
xor
fildll
inc
shlb
stos
imul
pop
adc
pop
popa
iret
outsb
addb
pop
jnp
pushf
cmp
test
sti
jmp
mov
push
std
xor
fstpl
ret
cmc
jns
and
cmp
mov
dec
fwait
sub
fisubl
jns
mov
pusha
test
sub
mov
call
loopne
nop
jp
mov
outsl
inc
ljmp
push
adc
mov
xor
push
in
jp
and
cmp
js
stc
sbb
sub
ret
aad
and
movsb
mov
or
or
pop
aam
test
push
and
cs
or
test
jns
pusha
xor
and
test
sbb
rorl
decb
int3
inc
mov
dec
or
fidivrl
inc
xchg
aam
push
nop
jne
cld
xchg
test
iret
xor
and
rcl
or
or
cmp
jecxz
dec
push
aam
xlat
in
mov
mov
aas
scas
push
sub
stos
cmpsb
xor
or
pusha
pop
jbe
nop
and
aad
mov
push
xor
fistpl
fdivrs
cs
imul
andl
cmc
inc
cmpsb
repz
call
ret
mov
ficoms
sbbb
dec
aaa
cmp
fcmovu
cmp
push
jno
add
hlt
xor
xor
inc
sub
rcrb
sub
insl
mov
into
insb
leave
sub
add
fs
push
xchg
sub
mov
sbb
fsubp
dec
or
outsl
fidivl
inc
cmp
nop
and
aad
out
push
xor
test
inc
mov
es
in
jb
inc
hlt
and
sub
lock
sbb
orb
jg
mov
cld
push
in
pusha
clc
test
or
xor
cli
and
arpl
jae
xchg
outsb
inc
sbb
or
out
inc
dec
call
add
movsb
out
iret
xor
xchg
imul
mov
adc
or
lret
and
or
xchg
and
or
in
lea
xchg
daa
mov
imul
sahf
add
push
mov
push
push
inc
in
add
mov
ficoml
call
jmp
and
roll
leave
repnz
push
es
pop
push
xchg
test
and
mov
test
add
sub
mov
push
orl
mov
cmc
stos
orl
daa
push
xor
push
aaa
add
icebp
jb
pop
rorb
inc
xor
andb
pop
pop
inc
pop
mov
or
xchg
xlat
fcoms
sbbb
dec
mov
fadd
lcall
mov
push
shll
xlat
cmp
call
inc
xchg
in
add
adc
xchg
fadds
xor
pusha
bound
arpl
outsl
or
call
repnz
fisubl
aaa
les
ds
mov
jbe
enter
jo
lods
fs
js
jecxz
sub
out
int3
dec
je
jl
mov
cmp
iret
jl
insb
call
leave
clc
add
inc
pop
push
jnp
arpl
mov
mov
inc
add
sub
pop
je
push
rol
mov
xor
sbb
popa
xor
not
pop
ja
stos
and
scas
sbb
mov
imull
imul
push
jnp
push
in
push
cltd
mov
jmp
mov
nop
jp
stos
and
dec
pop
test
xchg
ret
or
xchg
inc
inc
gs
test
call
out
jnp
push
lods
iret
or
int3
mov
cmp
repnz
mov
popf
xchg
call
dec
sbb
test
test
stc
pushw
or
push
fs
das
addb
sahf
and
or
repnz
ret
push
outsb
test
enter
mov
cli
mov
mov
mov
jl
xlat
xor
cmpsb
lds
push
popf
dec
dec
pushl
sub
dec
dec
sar
mov
xchg
rorb
ljmp
fdiv
mov
sub
mov
push
enter
in
daa
mov
insb
push
mov
dec
jp
sub
or
sbb
dec
ret
test
jb
lods
notb
leave
dec
lds
sbb
mov
mov
add
fs
mov
mov
call
pop
inc
in
repnz
orb
xlat
ret
repnz
push
test
into
cmp
test
mov
xchg
rolb
imul
addr16
filds
push
mov
stos
div
aas
xor
adc
in
sbb
in
dec
adc
repnz
js
or
add
fimull
jle
mov
ja
jne
bound
sbb
sahf
and
pop
pop
insl
fisttps
jecxz
sub
inc
inc
or
lods
icebp
inc
out
cmpsb
pop
ljmp
out
inc
jns
or
loop
data16
inc
inc
adc
jecxz
pop
inc
fadds
xchg
je
pop
jo
pop
loop
adc
xchg
jmp
pop
jl
jne
sbb
and
add
cmp
in
pop
call
xchg
inc
mov
xchg
and
push
pop
outsl
mov
dec
jl
add
cs
mov
test
leave
and
xchg
pop
pop
cli
adc
or
xor
pop
mov
jno
adc
mov
adc
xchg
or
faddl
outsl
or
pop
add
lods
jne
xor
cwtl
fmul
lret
cmp
shl
movsl
fld
ljmp
ret
hlt
mov
and
and
and
stc
pop
clc
call
jb
sti
mov
adc
pop
ret
repz
pop
loope
outsb
shl
xchg
or
sub
jp
xor
decl
dec
push
icebp
enter
push
cmp
ljmp
mov
dec
push
or
mov
or
sbb
lret
cwtl
call
jnp
mov
and
fidivrl
pushf
mov
movsl
xor
outsl
jp
int3
cld
addr16
dec
fistl
in
sbb
fcomps
sbb
jne
push
mov
sbb
xchg
pop
jecxz
adc
lret
mov
inc
in
je
cmpsb
push
incl
mov
mov
mov
or
xchg
fsubrs
out
adc
mov
add
mov
xor
enter
jg
fisubl
pop
xor
xor
div
mov
dec
adc
push
sub
sbb
fcoms
mov
test
adc
add
pop
divl
mov
enter
xchg
je
and
lret
xchg
mov
dec
fcomps
add
out
incb
mov
xchg
icebp
bound
cmp
dec
push
repnz
push
mov
jne
or
jmp
push
xor
add
mov
dec
rorb
adc
adc
es
jne
cmc
xchg
pusha
pop
stos
xor
xor
fwait
cmp
and
jge
shl
stc
fs
ja
adc
add
mov
les
push
xchg
int
mov
and
test
icebp
pop
enter
out
scas
dec
repz
pop
inc
lods
or
pop
inc
mov
inc
sbbl
add
sub
rorl
cmpsb
cmp
xchg
jno
out
fcomp
arpl
pop
push
xor
scas
mov
dec
sub
testl
xor
mov
and
dec
subb
dec
xchg
push
cmpsl
aaa
dec
popa
loopne
xchg
lea
clc
sub
jge
cmp
and
call
enter
fmull
and
addr16
push
pmovmskb
push
jmp
call
xor
push
dec
sub
popa
mov
sub
stos
mov
mov
ds
shlb
inc
lock
or
sub
cmp
xor
or
push
push
xor
push
jp
mov
gs
aas
cmp
adc
dec
inc
cs
movsb
adc
sub
and
subb
imul
cwtl
js
or
xor
call
and
sti
adc
cmp
les
inc
pop
pop
adc
mov
cli
shlb
push
jg
call
hlt
or
mov
inc
mov
in
or
mov
ljmp
xor
sbb
push
sti
push
mov
es
dec
mov
and
push
add
repnz
fdivl
dec
jns
es
lcall
push
ja
test
lods
jns,pt
into
xchg
lcall
jmp
ss
pop
pop
in
fisubs
cmp
or
inc
movsb
xlat
mov
or
test
pop
mov
mov
sbb
sub
imul
pop
jae
or
cltd
sbb
aaa
sub
mov
jmp
pop
stos
push
loopne
inc
pop
clc
jle
mov
or
bnd
xor
in
cs
stc
or
or
push
sbb
jb
and
mov
pop
jl
sub
push
shlb
sub
enter
push
sbb
add
fsubrl
jmp
inc
sahf
mov
movsl
sahf
jge
je
imul
or
ret
or
push
jg
mov
outsb
mov
inc
adc
inc
leave
or
incb
push
lcall
js
jne
out
xorb
adc
cs
int3
inc
xor
inc
testl
test
jl
or
in
shlb
fdiv
bound
mov
clc
pop
adc
mov
sbb
push
leave
cmp
ret
fld
out
dec
lea
fwait
icebp
xlat
or
add
stos
or
sti
fstps
les
cwtl
xor
push
lock
out
jge
jns
mov
pop
sbb
and
loope
and
jbe
imull
lahf
int3
xorb
cmp
push
gs
adc
pop
ret
inc
add
add
mov
loop
mov
mov
cmp
testl
or
push
push
movsb
iret
in
jl
lods
push
in
sub
rcll
iret
in
stos
and
sbb
mov
shrb
aam
and
pop
inc
aas
hlt
mov
enter
inc
mov
inc
sbb
cld
imulb
push
dec
jp
jmp
cmp
je
arpl
push
mov
rcrl
fdivl
mov
mov
call
or
mov
test
lcall
jge
sub
mov
xchg
addl
nop
imul
out
mov
mov
out
and
jbe
in
xchg
or
push
iret
mov
mov
js
add
lods
mov
jge
mov
adc
movb
mov
and
or
lahf
jge
fcomps
ja
jp
shlb
mov
ja
push
pop
push
mov
mov
add
pusha
cs
push
cwtl
lods
icebp
faddp
sbb
movsl
jmp
fwait
cli
ljmp
clc
mov
or
dec
dec
mov
sub
and
inc
ja
call
mov
mov
dec
add
push
js
gs
int3
inc
mov
jle
shll
repz
pushf
mov
test
decb
jmp
cmp
jns
pause
inc
xor
pop
jno
jnp
cmp
aas
adc
jmp
pop
out
add
dec
jmp
je
xchg
inc
pop
lea
lods
mov
bound
pop
mov
fildl
xor
pushf
inc
jmp
ljmp
movsb
jne
lcall
cmp
outsb
jecxz
into
jo
in
leave
dec
and
lcall
loopne
mov
xchg
insb
adc
and
lods
int3
ds
dec
sbb
pop
in
xor
enter
aad
dec
or
mov
inc
or
js
aaa
ljmp
scas
push
and
sub
lcall
mov
push
or
frstor
cmp
mov
and
repnz
cmp
lea
mov
pop
pushf
call
pop
je
add
mov
adc
pushf
icebp
pop
push
in
nop
xchg
adc
push
fdiv
push
push
sub
push
push
add
sub
mov
gs
push
test
mov
scas
lods
leave
call
mov
mov
cmpb
lret
and
cmp
mov
xor
push
jno
cmp
push
or
add
mov
xchg
jecxz
push
ss
sbbl
cmp
outsb
sbb
lods
sbb
jbe
aam
mov
push
mov
imul
adc
or
cmp
mov
imul
sub
insl
xor
cltd
call
ret
popa
mov
imul
out
sbb
jae
lock
add
push
inc
sbb
imul
rolb
out
adc
sub
cmpsl
sbb
cwtl
pop
sbb
jne
sbb
imul
jl
push
xchg
out
jb
and
mov
sbb
push
ljmp
mov
sbb
adc
ret
push
adc
push
rorb
or
push
or
fmull
pop
lret
xor
jb
repnz
stos
out
xchg
fnstcw
mov
test
mov
dec
pop
mov
aad
inc
rcrb
xchg
and
sarb
aaa
adc
and
cmp
and
test
orb
sub
push
pop
lea
daa
xchg
aad
into
dec
push
xchg
xor
dec
pcmpeqd
cli
mov
dec
add
push
dec
cmp
mov
ds
adc
in
add
cltd
loopne
dec
or
add
pop
pop
ljmp
sbb
push
xor
or
and
pop
repnz
pop
pop
jl
adc
inc
push
data16
ja
dec
push
in
mov
cmc
call
xor
jns
cltd
push
notb
inc
mov
jne
mov
shlb
and
pop
pop
cmpsb
and
or
push
mov
and
xor
xchg
popl
dec
cmp
pushf
push
mov
int3
pop
sbb
adc
sbb
dec
fcompl
cli
mov
hlt
outsl
cmc
adc
movsl
cmp
stos
and
loopne
xor
arpl
cli
pop
or
ds
movsb
and
push
and
popf
mov
fwait
jno
jb
xadd
or
jno
ljmp
repz
dec
pop
sbb
das
lcall
fdivrl
xchg
adc
xchg
xor
data16
cs
xor
pushf
stos
add
in
mov
sbbl
jle
scas
lret
push
dec
and
std
stos
cli
adc
out
or
push
jmp
sub
and
push
pop
xchg
clc
push
push
jno
inc
lods
push
out
pop
test
mov
add
fprem
stos
or
insb
out
inc
mov
out
pop
mov
dec
cwtl
or
test
mov
scas
loop
aaa
xor
mov
and
push
popf
xchg
jl
adc
test
jno
sbb
mov
xchg
inc
or
jg
ljmp
hlt
mov
adc
clc
out
push
stos
xor
xlat
sbb
xor
fcomps
imul
addr16
cmp
push
jno
add
mov
imul
icebp
cmp
xchg
and
fstps
sbb
push
dec
jno
mov
pop
add
stc
jo
cltd
sub
popl
inc
lea
call
repnz
rcrl
or
lds
xchg
mov
hlt
mov
cmpsb
aas
sbb
adc
mov
cmp
add
sbb
dec
or
mov
repnz
rcrb
je
jg
addr16
pop
cmp
push
pop
adc
dec
ucomiss
dec
mov
cmp
fwait
out
cs
hlt
pop
push
aaa
orl
jo
cs
sahf
test
push
aaa
nop
pop
xor
mov
xchg
mov
dec
lret
mov
lds
call
and
pop
or
clc
add
or
or
test
or
jmp
add
xchg
xor
call
pop
and
subb
pop
push
adc
and
jge
jp
jl
mov
mov
lret
ja
fsubs
es
lea
xor
pop
test
push
insl
inc
or
jmp
push
push
adc
push
xlat
push
inc
fildl
jle
outsl
push
lahf
push
es
push
xor
xchg
add
ret
icebp
lock
ds
push
xchg
sbb
cli
add
xchg
rolb
test
mov
cmc
imul
lea
imul
sub
pop
leave
xchg
outsb
fidivrs
outsl
outsl
xor
fs
ror
inc
add
dec
push
test
ret
sbb
lea
fwait
and
insb
dec
lcall
out
xor
test
pop
mov
push
inc
xor
mov
pop
xchg
iret
pop
movsl
sbb
and
pusha
outsl
outsb
sub
es
push
cmp
loop
dec
mov
in
adcb
cmp
loop
sbb
xlat
cmp
popf
and
jg
adc
je
inc
adc
in
sub
pushf
int3
or
adc
sbb
add
dec
dec
or
test
adc
pop
jo
stos
adc
call
sbbl
arpl
cld
gs
inc
pop
mov
das
loop
inc
jb
lods
cmpl
mov
sbb
test
dec
mov
fldl
push
jle
in
sub
shlb
fldcw
test
and
push
and
aam
mov
stos
push
adc
lea
ja
inc
dec
outsb
pop
mov
popa
inc
outsb
in
rorl
fs
or
adc
addr16
sbb
fidivl
and
das
shlb
jmp
insb
lods
repz
sub
mov
movb
cmp
inc
pop
mov
pop
out
cvttps2pi
adc
in
jbe
gs
lret
inc
mov
out
add
adc
sbb
sbb
imul
sbb
sub
cmp
add
inc
jae
and
jle
repz
dec
call
divl
enter
or
inc
xor
pop
stos
add
lea
sub
push
mov
rolb
cld
jl
fcmovne
adc
lret
dec
push
pop
jmp
dec
jle
mov
xchg
movsb
pop
or
push
mov
cmp
lret
cmc
adc
movsb
mov
loopne
xor
adc
arpl
fidivl
jb
mov
sahf
xchg
add
es
arpl
or
and
mov
or
inc
sub
data16
jbe
pop
ds
cmpsb
dec
rcrl
push
or
rcll
pop
sbb
nop
mov
inc
in
and
fs
pop
xchg
pop
sbb
les
jns
xchg
addr16
test
fs
and
or
or
ret
mov
sbb
xchg
pop
int3
leave
and
add
xchg
lock
push
jge
cmc
sub
pop
aaa
out
outsl
cmp
inc
dec
ret
int
pop
and
dec
adc
loope
mov
or
push
mov
insb
mov
pusha
cli
shr
fstpl
in
add
adc
pop
xchg
pop
scas
call
sbb
rolb
pop
push
mov
mov
lea
ret
sbb
into
push
cmpb
mov
rcrl
inc
add
adc
in
push
xorb
sbb
xchg
xchg
push
adc
sub
shrb
or
dec
or
lea
in
adc
mov
push
sub
sub
mov
cltd
icebp
add
and
mov
rcr
sahf
sub
test
icebp
sbb
mov
mov
inc
pop
jp
inc
ret
aam
and
ss
xchg
add
imul
lcall
dec
jle
mov
aam
cmc
push
xchg
fmull
push
inc
push
cs
sbb
mov
mov
push
xchg
ret
cmc
adc
adc
js
dec
sbb
int
out
or
push
fidivrs
lds
std
mov
lds
mov
mov
call
sub
mov
sub
cli
mov
nop
dec
xchg
ret
jno
inc
dec
ficompl
enter
and
xchg
cwtl
out
push
inc
and
enter
into
pop
push
lds
push
in
outsb
testl
scas
adc
push
es
mov
push
sub
cmpsb
push
enter
pop
adc
add
add
mov
test
dec
fdivs
mov
xor
mov
or
aam
mov
imul
scas
pop
add
and
popf
jb
sbb
xor
into
cmpl
cmp
inc
xor
mov
pop
mov
mov
xchg
pusha
les
cmc
stc
setae
sbb
daa
pop
cmp
mov
sbb
pop
push
mov
sti
aad
mov
or
dec
xchg
pop
push
pop
jg
ds
inc
sbb
adc
jl
lea
inc
jle
mov
or
mov
jl
hlt
and
cld
jg
or
negb
add
xor
call
loope
clc
out
fs
dec
in
dec
imul
insl
pusha
xchg
and
out
lret
call
call
pop
lret
push
adc
xor
sbb
adc
shlb
jle
out
cli
int3
in
push
fsubrs
shll
or
or
sub
bound
xchg
pop
push
lea
inc
loop
je
or
sbbb
iret
xchg
or
push
and
adc
xor
hlt
jae
add
inc
push
in
or
and
cmc
jl
jb
jae
add
aad
or
aad
cwtl
mov
ret
mov
jmp
rorb
lods
xor
push
gs
xchg
mov
jbe
cmp
leave
into
fs
incb
in
bound
jmp
cli
sbb
pop
xchg
sarl
sub
les
sub
jl
ret
scas
mov
ljmp
in
mov
loopne
mov
data16
inc
les
push
mov
in
adc
sbb
mov
cmpsb
lock
or
fldenv
orl
fcoms
mov
repnz
fs
push
in
test
fiadds
fisttpl
enter
call
cwtl
pop
or
and
call
push
ror
xor
cltd
in
push
scas
fsubs
ret
sub
mov
call
lret
xchg
inc
xchg
mov
mov
lret
jle
cld
sub
ja
test
jb
mov
rorb
jp
push
int3
hlt
and
pop
shr
jnp
or
lock
jge
sub
inc
cltd
ret
mov
sbb
inc
fidivl
push
arpl
dec
and
mov
mov
scas
push
call
fcompl
inc
dec
rcll
push
cmp
mov
pop
push
or
test
mov
inc
or
or
incb
ret
dec
stos
fndisi(8087
or
out
jge
push
adc
lods
sbb
jle
add
test
or
add
or
sahf
cmp
es
std
inc
ljmp
lods
sbb
xchg
xchg
std
lock
testb
pop
loope
or
fsubrp
repnz
and
and
ficomps
pop
mov
pop
aad
ds
scas
mov
jmp
adc
insb
in
mov
pop
addl
in
or
sub
call
sub
jle
shlb
cwtl
in
fbld
xchg
adc
sbb
iret
hlt
inc
pop
or
std
cld
and
adc
mov
fstl
and
out
cmp
addr16
std
loope
call
sbb
les
adc
mov
popa
rorb
icebp
adc
dec
inc
fidivrl
mov
pop
rcrl
les
or
les
pop
sbb
jo
je
add
push
test
adcb
push
addr16
xchg
fcompl
or
cmp
ds
insb
cmc
cli
lods
cltd
dec
fldl
test
fadds
cmp
mov
inc
push
roll
dec
push
dec
push
sbb
aaa
mov
cltd
cs
popf
ss
push
mov
xchg
xor
mov
pop
xchg
sbb
mov
ds
cmpsb
and
or
add
mov
inc
scas
mov
call
mov
jmp
xchg
xchg
clc
dec
xchg
or
push
or
aas
jecxz
inc
adc
sbb
insl
add
fiadds
and
mov
insl
loop
jl
lock
jno
jb
push
mov
pop
xchg
or
dec
sbbb
mov
add
nop
mov
sbb
add
or
or
adc
mov
mov
pushf
je
aas
sbb
sub
mov
inc
cmp
stos
pushf
or
cs
data16
jl
insb
sbb
sbb
sbb
sbb
out
hlt
sarb
and
adc
ficomps
mov
or
sub
add
pusha
mov
lock
dec
mov
test
pop
sbb
je
shll
fwait
cltd
jg
ret
popa
popa
je
mov
dec
enter
call
sbbl
and
pop
mov
cmp
pop
js
pop
dec
xchg
enter
arpl
fmul
data16
aas
dec
lea
push
or
ret
cmp
arpl
sbbb
fdivl
fisubs
xchg
addb
and
mov
jne
cwtl
cmpsl
dec
jne
addr16
mov
xchg
lods
jp
addr16
mov
dec
les
jle
push
lret
aam
dec
dec
and
mov
pusha
stc
jb
push
rolb
jmp
test
cld
or
rcl
adc
push
cmp
imul
sub
pushf
sub
jo,pn
sub
ficoml
into
mov
jbe
mov
mov
inc
inc
add
data16
xchg
daa
mov
mull
push
mov
push
add
jnp
push
pop
je
sub
loop
in
fstl
sub
adc
push
or
aaa
sbb
xchg
jo
mov
or
dec
jo
sub
loopne
js
adc
scas
sub
addb
jmp
push
hlt
dec
dec
or
inc
lock
mov
push
adc
clc
cli
andl
cmp
dec
cmp
movsl
arpl
lret
in
lods
subb
call
push
pop
sbb
mov
jne
add
mov
inc
push
xchg
cli
mov
scas
es
rcll
jmp
fisttpl
scas
test
or
repz
jmp
fistpll
push
out
cmpsb
or
fiaddl
out
dec
lods
sti
pop
pop
test
inc
xor
ljmp
scas
call
in
or
or
sub
dec
lret
call
and
and
mov
mov
and
dec
push
push
jnp
ds
cmp
jne
sub
js
orl
push
inc
push
sbb
dec
sbb
or
leave
or
ds
pop
sbb
mov
jae
inc
xor
ljmp
adc
sub
push
and
cmpsb
addr16
inc
add
shr
ret
adc
leave
jg
pop
or
cmp
inc
mov
inc
and
dec
mov
jg
dec
sahf
xchg
mov
add
xchg
mov
cli
mov
mov
adc
lahf
mov
dec
adc
sbb
jmp
jb
jne
pop
pop
xchg
fists
shrb
push
pop
and
adc
sub
xor
sub
mov
mov
xlat
jnp
or
push
sub
add
pop
movsl
add
xchg
jae
and
inc
mov
lahf
mov
push
out
pop
jne
pop
cmp
insb
dec
call
xor
mov
ret
jbe
and
sbb
push
adc
orb
push
cmp
ja
movsb
lods
mov
push
mov
cmpsl
clc
test
push
sti
stos
mov
and
push
sarb
or
repnz
fcompl
call
test
mov
sub
dec
inc
inc
std
jmp
or
sbb
push
es
mov
mov
adc
dec
sbb
and
cld
mov
call
inc
push
fs
push
add
ss
jne
cs
aaa
push
jp
iret
rcrl
call
int3
xchg
cmp
mov
adc
mov
mov
std
xlat
loop
std
mov
int
mov
inc
mov
adc
das
adc
sbb
cli
mov
add
add
daa
add
or
adc
test
push
mov
cmp
xchg
xchg
repnz
out
pop
test
mov
add
int3
pop
ret
xor
mov
adc
in
or
stos
xchg
mov
xchg
xor
dec
jl
das
lahf
call
mov
rorb
dec
push
lock
adc
push
adcb
stos
adc
xchg
inc
sub
xor
sahf
call
ret
mov
jb
and
rorl
dec
adc
ss
movsb
add
ja
das
pushf
mov
sbb
inc
adc
in
fisttpl
dec
movsb
inc
ss
dec
cli
and
add
mov
cmp
pop
mov
jns
call
mov
dec
push
js
leave
xlat
stc
psllq
mov
sbb
outsl
fcom
push
adc
push
call
movsl
out
cli
mov
jg
push
daa
dec
daa
dec
test
dec
xor
stc
cmp
pop
aas
je
mov
popf
clc
arpl
lock
adc
insb
jno
pop
imulb
push
ss
lods
pop
xor
fsubl
pop
adc
mov
test
push
out
adc
sbb
sbb
repnz
adc
mov
orl
repnz
outsl
and
hlt
push
push
mov
lock
adc
ret
cmp
mov
es
into
adc
or
mov
mov
sub
sbb
insb
sub
add
rcll
adc
loop
std
sbb
imul
pop
pusha
push
mov
xor
enter
push
pop
pop
into
lcall
and
aam
xor
mov
sbbl
pop
or
mov
sbb
adc
mov
repnz
adc
push
pop
dec
jbe
jp
dec
leave
push
cs
lods
sub
push
orl
pop
dec
or
icebp
outsb
mov
add
outsb
gs
outsl
or
xchg
ficoml
into
test
hlt
xchg
jge
loope
movsb
fnstcw
push
stc
int3
and
adc
rorl
dec
loop
add
leave
sti
push
push
dec
enter
or
dec
adc
jns
addl
cli
adc
hlt
add
bound
cmp
rolb
mov
int
ljmp
push
mov
daa
pop
bound
daa
aas
es
push
neg
mov
dec
sets
mov
add
inc
jmp
pmaddwd
jge
sbb
mov
mov
imul
sbb
mov
fldl
mov
mov
lret
clc
xor
outsb
aas
lods
mov
mov
push
adc
mov
xor
dec
adc
int
insb
dec
add
pop
lret
mov
mov
add
mov
jbe
sbb
dec
dec
pusha
push
or
outsl
add
iret
cwtl
add
or
add
icebp
aas
add
or
adc
inc
add
lret
add
adc
inc
or
sbb
jo
scas
iret
imul
sarb
fisttpll
jo
cltd
addr16
sbbb
es
inc
ret
popf
loope
outsb
ret
inc
sbb
pop
cmp
xor
inc
fwait
push
mov
rclb
mov
cmp
push
mov
push
nop
pusha
dec
insl
sbb
cld
and
mov
add
mov
push
mov
xchg
inc
pop
push
rcrb
add
jne
mov
pop
int3
xchg
sub
sbb
cmp
add
and
mov
pop
or
aaa
out
pushf
push
mov
inc
jge
cmp
pushf
cmp
and
pop
jne
sbb
push
ss
rorl
mov
ss
repnz
pop
sub
add
add
inc
aam
insl
jmp
adc
dec
leave
xor
addr16
adc
sahf
push
imul
mov
loope
imul
pop
push
or
mov
inc
cmp
ss
push
inc
outsb
mov
add
jge
and
inc
mov
sub
subb
sti
and
jge
scas
rclb
xchg
inc
mov
fdivr
adc
pop
shll
testl
test
and
adc
xor
jge
and
jb
insl
push
add
dec
outsl
sbb
fs
dec
cmpsb
mov
push
push
mov
icebp
loopne
xlat
pop
cmc
add
and
pop
adc
lock
adc
dec
dec
cltd
pop
sub
xchg
call
mov
jmp
sbbb
sub
and
pop
jle
adc
call
mov
jecxz
jge
push
icebp
jb
push
aam
adc
add
jle
stos
fs
in
std
je
xor
sti
jle
push
cmp
push
sbb
ret
pusha
es
fs
jecxz
and
jmp
jo
repnz
add
or
es
les
mov
xorb
inc
fwait
or
call
idivb
das
or
mov
push
mov
mov
popa
outsb
add
xor
mov
push
push
pop
and
imul
in
push
test
add
and
adc
pop
inc
movsl
pop
mov
push
mov
xor
push
push
shlb
test
jne
int
icebp
push
adc
mov
in
cmp
jae
mov
pop
push
mov
jmp
aaa
xchg
repz
mov
xlat
jecxz
outsb
xor
cmp
fdivl
jb
and
mov
call
xchg
js
out
jg
mov
inc
adc
cmp
lret
insb
mov
mov
movsb
sahf
push
jmp
into
pop
test
xchg
pop
scas
adc
or
cli
mov
leave
mov
insb
jp
lds
cmp
xlat
or
lock
nop
ds
lock
popf
lods
fidivs
cmp
sahf
dec
ja
mov
jne
into
ja
lock
sub
sub
out
push
or
pop
scas
xor
rcrl
cmp
jecxz
test
and
jmp
xor
jbe
add
xchg
dec
push
cmp
add
ret
pop
aas
clc
fcomps
pop
sarl
lret
in
cld
add
divb
adc
sub
test
sbb
pushf
ja
pop
sbb
rcrb
pop
cltd
call
adc
testl
mov
push
add
jle
inc
add
xor
lahf
stos
movsl
test
mov
in
add
repz
insb
or
test
mov
jnp
add
pop
cld
push
bound
pop
cmpl
sbb
mov
pop
daa
pop
cwtl
subb
test
inc
pop
pop
fucom
cwtl
jle
mov
ror
and
fwait
xchg
repnz
sub
adc
lock
or
xchg
inc
ljmp
lock
sbb
fwait
mov
pop
xchg
std
fsubrl
jge
add
xor
sub
cmc
cmp
call
mov
xchg
sub
nop
and
pop
adc
xor
lcall
punpckhwd
xchg
out
add
push
jns
mov
mov
jp
dec
sbb
repz
mov
sub
sub
dec
xor
in
cmc
jp
xchg
sbb
lods
push
jnp
ljmp
ljmp
jb
xor
xchg
ljmp
stos
adc
push
pop
and
and
and
sbb
mov
push
sti
add
icebp
pushf
sbb
add
ja
mov
cld
sbbl
jnp
add
adc
jmp
sbbb
or
sbb
mov
dec
or
mov
push
int3
pop
lods
orb
lea
lcall
mov
cmp
arpl
test
aam
xchg
add
or
mov
or
inc
mov
and
jbe
data16
adc
outsl
xchg
push
sbb
lods
pop
cmp
pop
xchg
add
sbb
icebp
cmp
lret
lret
dec
and
fcomps
xchg
lods
push
lcall
push
pop
popa
push
add
mov
ret
push
pop
or
mov
and
jne
stos
std
cmp
mov
sub
adc
cmp
inc
or
xchg
pop
push
sub
inc
lret
pop
adc
push
push
jge
or
or
sub
nop
inc
dec
jo
push
loop
pop
sub
cwtl
inc
jp
mov
pop
pushf
shr
dec
dec
dec
aas
jmp
sbb
mov
inc
adc
iret
pusha
push
mov
cmpb
push
cmp
inc
add
mov
pop
pop
mov
out
adc
rcl
push
mov
jmp
xor
mov
or
mov
aam
xchg
xor
adc
cmp
push
outsl
sub
xlat
in
sbb
nop
sbb
or
mov
cmp
jne
and
or
jno
sbb
lcall
jmp
or
cld
sbb
xor
sbb
enter
adc
and
insl
dec
jne
adc
lea
xor
stos
mov
movsl
aam
and
cld
nop
pop
enter
in
pop
mov
pop
addr16
and
adc
leave
push
xorb
scas
xor
mov
mov
inc
jle
mov
jecxz
push
hlt
mov
adcl
jl
enter
std
mov
sarl
sahf
mov
cmp
jp
std
leave
inc
sbb
das
jne
xor
pop
inc
push
cs
dec
add
mov
test
push
icebp
cmp
in
adc
out
cmp
jb
rcr
push
cmpb
mov
mov
stos
adcl
jecxz
mov
mov
mov
pop
sub
add
test
fwait
repz
lcall
clc
mov
cmpsb
add
lret
addb
jbe
inc
push
xor
pop
es
movsl
add
push
push
adc
arpl
pop
mov
xor
pop
dec
popf
shrl
cmpsl
mov
mov
std
sbb
ret
mov
stos
int3
adc
pushf
xchg
mov
adc
xchg
std
aas
stos
or
popa
cmpsb
or
mov
int3
and
lcall
push
jbe
enter
or
add
mov
fldt
outsb
sub
shr
jae
jnp
mov
rclb
pop
inc
lea
push
pop
lods
punpcklbw
invd
fbstp
jne
or
addr16
push
pushf
js
push
sbb
pop
jbe
push
scas
adc
fildll
mov
xchg
cli
lcall
test
pop
sub
enter
std
adc
add
out
sub
pop
lock
mov
ds
add
sub
mov
pop
imul
orb
and
sub
push
lret
or
popf
imul
cmovae
push
out
mov
mov
inc
fdiv
lea
pop
or
in
sti
shl
scas
sub
loop
test
cmp
sbb
adc
cvtpi2ps
sbb
les
adc
inc
sbb
mov
imul
jl
adc
repz
in
inc
in
dec
insb
or
inc
aad
mov
push
jl
and
and
sahf
inc
jnp
fwait
mov
add
or
xchg
sbb
mov
or
push
cmp
inc
jle
mov
sub
clc
xor
aam
mov
xor
xor
adc
inc
cli
lcall
push
push
int3
out
paddw
out
mov
aas
mov
sbb
and
or
jge
les
pop
sahf
inc
clc
push
sbb
inc
push
outsl
movsl
lods
das
push
sub
outsl
shrl
pop
mov
push
pusha
mov
repnz
pop
xor
adc
andl
fwait
mov
sbb
xor
xor
pushf
sbb
inc
mov
ret
add
sbb
pusha
mov
xor
cmp
inc
dec
aam
add
push
ljmp
add
lods
dec
in
sbb
daa
daa
mov
adc
dec
dec
test
ret
mov
push
test
out
addb
addr16
ljmp
adc
shr
filds
xchg
xchg
adc
cli
mov
or
and
jmp
mov
and
hlt
in
adc
popf
push
adc
outsb
aam
xor
dec
cwtl
faddp
lods
addr16
jo
add
sarl
or
call
sub
push
and
or
pop
xor
push
or
mov
add
add
sub
and
mov
adc
mov
pop
mov
pop
adc
ret
adc
push
push
dec
movsl
aam
cld
mov
push
fucomip
add
push
lret
lret
lods
fisubrl
call
xchg
jge
repnz
adc
sbb
test
jo
mov
jns
out
out
stc
push
rolb
loope
call
dec
test
sub
mov
dec
mov
mov
sub
into
out
or
or
test
add
aaa
cmp
mov
mov
mov
mov
dec
cmp
push
push
loopne
add
cmpsb
cmp
es
adc
lcall
in
in
ja
jae
andl
int3
lods
out
pmaxsw
insl
jo
and
or
loope
lds
and
cwtl
mov
xchg
mov
adc
or
mov
dec
mov
sub
or
sbb
fsubp
push
les
dec
sbb
sub
clc
jno
icebp
adc
or
and
jmp
rolb
sar
adc
pop
lds
orl
loopne
into
cmc
push
dec
inc
adc
ret
fbstp
sti
int
inc
push
imul
xor
leave
push
aam
insl
out
xchg
outsb
adc
pushf
add
nop
and
loop
and
xor
xor
dec
or
inc
outsb
or
daa
out
dec
imul
sbb
push
sbb
fscale
arpl
push
push
outsb
dec
mov
push
mov
sbb
inc
clc
sbb
pop
push
push
setno
mov
dec
or
sub
cltd
jns
cmpsl
stos
add
or
movsb
dec
or
ret
mov
rcrb
out
iret
inc
push
sbbb
push
fidivrs
enter
adc
cmc
outsb
dec
aam
lods
adc
push
lds
cli
inc
inc
push
cmp
push
movsl
xchg
lods
movsb
inc
pop
or
pop
out
xchg
rorb
lea
adc
sub
jae
mov
mov
xchg
inc
jns
add
push
jbe
add
add
mov
addr16
mov
bound
data16
inc
mov
into
pop
dec
or
inc
add
icebp
aas
jnp
lock
cmp
stos
push
mov
mov
inc
push
inc
jmp
fisubrl
pop
push
pop
adc
cli
pop
jmp
les
out
inc
lock
cmp
mov
add
sbb
je
add
faddl
xchg
sbb
in
mov
cmp
inc
adc
sbb
adc
ljmp
inc
clc
imul
add
rclb
mov
mov
sub
ljmp
nop
pop
or
fdiv
mov
cmpsb
sti
repz
inc
test
enter
xchg
and
ljmp
sbb
ja
mov
hlt
sub
and
gs
sub
addr16
rcrb
pop
jg
lock
sbb
insl
in
add
lods
adc
sbb
mov
ljmp
call
xchg
or
jo
clc
push
loop
adc
push
jne
inc
cmpsb
sbb
lock
cmp
aas
xlat
xchg
mov
call
mov
jbe
hlt
fisttpl
test
sub
jecxz
pop
into
std
and
lods
jmp
dec
xchg
int
aad
shll
inc
pushf
xchg
dec
sbb
mov
int3
and
js
lret
and
dec
cld
mov
push
sbb
mov
jge
push
std
addr16
jge
scas
adcb
ror
pushf
pop
inc
push
jl
in
insb
adc
pop
mov
xor
xor
pop
xchg
mov
push
add
lock
mov
cmp
ljmp
adc
xor
or
sbb
or
pop
mull
repnz
pop
imul
inc
jbe
mov
data16
jmp
fcoml
das
pop
ljmp
mov
sbb
cmpsb
push
test
xor
push
inc
adc
or
push
js
pop
fisubs
rclb
in
adc
push
aad
out
int3
xor
push
ret
mov
js
add
sbb
push
sub
leave
mov
mov
int3
adc
mov
mov
clc
xor
outsb
test
repnz
and
and
bound
mov
adc
push
add
adc
movsb
nop
xchg
add
add
adc
andb
xlat
and
push
fildll
mov
movsl
jb
dec
in
and
dec
mov
rcrb
stos
aaa
or
jmp
sti
mov
dec
ret
mov
dec
or
jbe
dec
fildll
pop
je
dec
or
sbb
push
ds
shl
subb
or
pop
int3
shr
adc
cwtl
std
je
sahf
fdiv
in
leave
adc
or
or
in
or
adcb
stos
push
mov
xor
xchg
xchg
add
push
dec
outsl
rcll
lahf
stos
push
shlb
popf
lret
ljmp
rorb
jns
xor
inc
mov
adc
inc
daa
fwait
int3
pop
push
mov
leave
leave
frstor
and
lcall
addr16
mov
sbb
mov
and
xchg
enter
mov
inc
pop
jl
into
push
es
cmpsb
pop
cmpl
ret
xchg
loope
adc
push
aaa
cmp
mov
adc
jg
hlt
fmull
jge
ret
cmc
jne
and
and
sahf
add
cmp
aas
cmp
dec
lock
jg
cmp
stos
sub
inc
xor
dec
js
cmp
and
aad
aam
push
sahf
movsl
fidivrl
addr16
jecxz
pop
insl
int
mov
sbb
in
pop
pop
mov
adc
push
adc
xchg
mov
push
xchg
or
sbb
cs
ficompl
lea
mov
out
push
ret
outsb
add
add
ret
push
lcall
data16
inc
adc
and
or
ss
cmpsl
or
mov
push
cmpsb
xchg
sti
fidivrs
mov
test
adcb
adc
dec
dec
pop
dec
dec
int3
adc
into
icebp
or
into
icebp
push
inc
adc
add
scas
fcmovne
or
cmp
mov
inc
repnz
mov
sbb
sub
jp
pop
and
das
mov
scas
fwait
mov
dec
mov
sub
or
and
cmc
mov
xor
dec
jb
pop
add
aas
or
cmc
pop
sbb
jle
cmp
xor
jbe
loopne
jae
or
imul
jo
data16
mov
adc
out
adc
mov
clc
adcl
adc
pop
sbb
out
xor
or
sub
jae
imul
bound
insb
pop
je
test
pop
add
and
sbb
xor
xor
push
repz
xlat
jo
pushf
jo
nop
sub
or
push
inc
push
or
mov
mov
dec
mov
cmp
xchg
pop
mov
adc
jb
cmp
pop
mov
call
pmulhuw
fmulp
out
ljmp
jno
add
lea
inc
imul
xchg
push
sub
adc
rclb
push
lahf
outsb
push
call
imul
jp
mov
negl
dec
lret
bound
in
or
mov
pop
mov
sbb
scas
add
shr
addr16
cmp
jnp
xorb
sahf
adc
sub
insb
out
mov
rorb
cld
dec
leave
aad
mov
imul
and
fisttpll
call
out
sbb
mov
dec
push
and
push
mov
fwait
jmp
push
sub
daa
pop
pop
popw
rcll
xchg
daa
movsb
or
dec
fidivrs
out
xor
xor
dec
push
add
shll
and
sar
dec
mov
xchg
je
inc
cmp
push
insl
fidivs
dec
test
xchg
jge
jb
inc
xchg
add
mov
add
push
ss
sub
shll
mov
out
addr16
mov
lret
in
cmc
xchg
js
and
pop
mov
decl
movsb
mov
or
ret
not
or
jmp
inc
jg
jle
dec
and
orb
mov
add
imul
popf
ss
sub
aad
sarb
sub
xorl
mov
in
and
or
xchg
sbb
call
mov
out
mov
in
andb
mov
sbb
cmp
neg
add
nop
pop
mov
dec
inc
cmp
pop
in
lods
cmp
sbb
mov
lret
addl
lea
lcall
mov
xor
je
dec
xor
xchg
xlat
jl
and
pop
cmc
out
adc
cmp
out
jp
adc
jmp
int3
lret
push
in
notl
pop
cmp
sbb
pop
inc
addb
bound
and
incb
jae
pop
sbbb
scas
push
mov
loopne
out
daa
stos
movsb
jae
xor
xor
push
out
cwtl
jl
xchg
out
lock
int
icebp
adc
imul
and
dec
ret
mov
pop
jle
cmp
je
in
xchg
andl
xor
or
xchg
fs
loopne
popa
inc
fistl
cmp
mov
out
clc
sub
jle
test
pop
sub
cmpsl
je
lcall
and
loope
or
adc
popa
push
pop
out
push
pop
mov
repnz
mov
adc
adc
xchg
jp
jns
inc
adc
or
or
sahf
mov
inc
js
push
adc
cmpsb
or
sub
fadds
sahf
push
enter
call
push
xchg
inc
into
inc
xor
negb
out
push
call
xor
push
and
ds
jge
inc
jnp
aam
push
xor
mov
pop
adc
jne
cmc
movsl
and
adc
addl
aas
adc
fwait
mov
jge
mov
cmp
or
scas
jns
mov
addr16
push
cmp
decb
sub
xchg
sti
adc
and
into
push
out
inc
cmc
mov
fisubs
mov
popa
dec
mov
jmp
out
imul
inc
and
dec
pop
add
aas
xchg
or
shll
pop
fisubs
cltd
xor
push
add
add
and
push
mov
pop
xor
popf
xchg
adc
loopne
mov
cld
cs
sbb
adc
popa
push
das
pop
pop
add
cwtl
and
push
add
jno
popa
cmp
and
xchg
or
dec
xchg
or
test
and
lods
xor
mov
pop
imul
xchg
or
or
mov
inc
dec
popa
fwait
loope
adc
cmp
and
xchg
lret
test
dec
test
sub
cmp
popa
and
dec
sti
dec
roll
mov
ret
pop
mul
les
pop
das
add
int3
leave
xlat
cmpsb
xchg
test
dec
dec
je
sub
mov
or
dec
push
es
mov
mov
arpl
fistl
sahf
movsl
push
or
loopne
mov
adc
movsb
xor
pop
xchg
pop
dec
mov
lods
jnp
push
xchg
pop
mov
ret
xchg
scas
sbb
dec
lods
dec
fdiv
xor
loope
fiadds
or
or
shrl
push
out
or
and
dec
mov
sub
push
mov
push
adc
push
stos
mov
cmp
aad
xchg
xor
rclb
xchg
and
push
incb
idivl
subl
aad
inc
sarb
jl
aas
rorb
mov
aam
push
and
cs
xor
outsb
adc
xor
add
mov
je
fimull
das
sbbl
cli
add
add
xchg
ret
mov
cld
fadds
stos
stos
mov
fwait
inc
rcrb
jnp
fcompl
cmp
out
sbb
sbb
roll
inc
dec
push
inc
loope
pop
sbb
inc
lds
mov
jecxz
ja
out
adc
dec
dec
loop
xchg
adc
push
cmp
adc
es
dec
jmp
call
movsb
inc
or
inc
inc
mov
das
mov
jmp
jmp
mov
adc
and
push
push
mov
mov
lret
sti
clc
pop
mov
pop
and
sub
mov
sub
lahf
loop
fwait
sbb
jp
jge
push
jbe
cmp
adc
outsl
pop
ds
mov
notl
outsl
mov
inc
xor
rcrl
jb
in
test
and
inc
outsb
pop
adc
loop
inc
and
mov
mov
pop
inc
es
insb
cwtl
js
sub
adc
mov
cmc
adc
and
arpl
add
popa
mov
pop
inc
or
repnz
and
mov
xchg
or
push
inc
pop
and
pop
and
clc
mov
scas
aad
push
mov
and
push
xchg
stc
push
sahf
adc
xor
das
leave
sub
or
aas
mov
fbld
loope
outsl
out
mov
stos
push
pusha
je
repnz
push
inc
sub
adc
lcall
testl
inc
jb
or
add
out
movb
es
test
sbb
lods
popa
fstpt
mov
push
cmp
lds
leave
data16
ja
aas
push
or
mov
sahf
push
ret
sbb
js
out
xchg
inc
lret
jb
das
sbb
inc
icebp
ffree
push
sbb
cmp
or
jmp
das
push
dec
mov
pusha
sbb
adc
cltd
cmp
loopne
add
jae
icebp
dec
movsb
sub
mov
lret
insl
lahf
rclb
fs
dec
call
and
sbb
mov
sti
popa
outsl
inc
gs
lret
jb,pn
sbb
inc
dec
dec
xchg
jg
mov
pop
test
sub
test
enter
es
sbb
shl
test
push
or
or
mov
repz
cmpsl
enter
pop
sbb
rcll
outsb
add
call
jno
or
cmp
pop
pop
pop
sub
jno
mov
in
xchg
jge
popa
loope
repz
inc
lock
nop
scas
fldt
inc
inc
das
jge
lods
sbb
pop
nop
dec
repnz
lods
stc
jl
aaa
cmp
cmp
add
cmp
adcb
sahf
sbb
add
ds
decl
mov
pop
jmp
lret
aaa
inc
bound
add
push
jp
cmpsl
push
dec
lret
jbe
jl
add
jbe
jp
dec
sub
sar
xorl
jb
fidivs
add
xchg
push
and
mov
mov
jae
push
xchg
inc
call
jle
sub
aam
cmp
nop
into
sub
test
fiaddl
add
insb
add
mov
mov
pushf
pop
or
stc
roll
movsb
pop
ljmp
jno
xorb
out
xchg
jno
inc
adc
imul
jae
and
mov
stc
adc
repnz
je
movsb
dec
cmp
xlat
push
daa
cmp
jge
mov
or
cmp
jne
ret
adc
out
push
call
loop
mov
addr16
out
add
imul
jg
add
fsubrl
test
dec
daa
enter
lea
mov
xchg
popa
out
inc
or
mov
fwait
ljmp
cmp
xorl
repnz
xchg
in
iret
mov
outsb
mov
out
enter
xchg
mov
dec
fadds
hlt
filds
jecxz
outsb
sahf
jns
lock
inc
jge
mulps
daa
pop
dec
repnz
inc
lret
inc
outsb
rcrb
inc
push
xchg
xor
addr16
inc
sbb
adc
les
add
pop
adc
js
cmpsb
pop
pop
cmp
or
lret
add
adc
out
stc
xchg
fisubs
pushw
add
das
aam
xor
test
sbb
dec
xchg
adc
cmp
push
push
adc
inc
xor
sub
fiaddl
neg
mov
mov
ds
adc
jmp
add
dec
mov
and
pop
dec
stos
xchg
mov
sbb
daa
push
out
or
mov
pushf
into
daa
dec
mov
test
mov
out
jmp
xor
aaa
inc
mov
mov
mov
movsb
sbb
xor
xchg
inc
adcl
inc
cmpsb
sbb
bound
imul
xor
cs
adc
arpl
icebp
pop
shr
cmp
fwait
xor
pop
fdivr
imul
addr16
pop
cmp
fadds
sub
push
out
dec
repnz
adc
loopne
or
push
test
leave
xor
dec
and
adc
add
fld
fists
xor
mov
push
lea
inc
lcall
test
add
add
jb
xor
lea
adc
aaa
push
movsb
mov
xchg
xchg
ret
and
inc
lret
xchg
fbld
dec
nop
inc
bound
cmp
mov
iret
inc
out
mov
sub
push
inc
inc
xor
jb
sbb
push
and
mov
mov
xor
mov
shl
sub
and
xlat
and
sub
sub
dec
push
inc
dec
inc
pop
cmp
ficompl
adc
push
push
rcrb
jecxz
xchg
mov
mov
inc
or
and
stos
xor
and
sub
add
dec
pop
ret
in
aaa
push
inc
inc
cmp
pop
das
rcrl
adc
jo
add
ret
fsubs
or
call
test
jle
jg,pt
je
add
nop
xchg
into
pop
xchg
mov
aaa
imul
icebp
jecxz
push
lea
rol
imul
add
push
mov
mov
adc
add
cltd
inc
adc
jbe
ljmp
aaa
ret
or
lds
clc
mov
and
xlat
sahf
inc
cltd
mov
xchg
jne
and
jns
out
adc
cltd
call
call
pop
mov
push
cwtl
ret
pushf
in
inc
cwtl
lcall
and
mov
ficoms
xor
cmp
pusha
jmp
push
dec
gs
add
adc
fildl
dec
pop
adc
xor
shrb
cmpsb
xchg
sub
dec
cmc
push
push
dec
stos
jb
or
loop
call
push
es
or
das
gs
negb
jl
inc
jge
xchg
fmuls
stos
or
inc
mov
mov
adc
inc
ret
sbb
loopne
adc
mov
mov
push
pop
adc
rorb
ds
push
loope
mov
sti
dec
xlat
int3
bound
cwtl
push
add
xor
outsl
ficompl
movsb
pushf
cmp
push
into
decb
dec
add
jl
jl
xchg
sub
mov
dec
push
sub
push
int3
jp
insl
mov
outsl
or
mov
cmp
sahf
push
popa
or
jae
push
push
jle
fcmovnu
pusha
negb
sti
and
jecxz
sbb
push
add
roll
mov
jb
cmp
fwait
add
adc
jnp
shrb
and
pop
loopne
adcb
xchg
xor
test
cmp
or
push
test
divl
sti
aam
sbb
js
addr16
mov
lods
scas
cmc
addr16
movsl
hlt
push
sbb
jae
sub
enter
dec
ret
int3
push
mov
pop
add
in
mov
call
jp
and
call
pop
pop
loopne
mov
mov
lock
dec
jne
mov
fdiv
ss
insb
ret
mov
pop
mov
cmpsb
pop
push
or
push
cmp
xchg
jns
out
test
ret
mov
cmp
addr16
xorl
test
ret
clc
push
icebp
mov
es
gs
xchg
stos
jle
sub
and
cmp
outsl
mov
ljmp
leave
clc
xchg
push
out
inc
aas
push
data16
pop
or
gs
out
repnz
push
push
into
or
cs
out
push
sbb
pop
or
imul
repnz
or
jae
mov
pop
jmp
add
jmp
inc
push
lea
mov
sbb
jl
cmp
std
jp
scas
dec
push
stc
xlat
jb
inc
or
ror
fmuls
adc
pop
push
mov
leave
loopne
and
sbb
xor
mov
sti
inc
push
popa
push
call
popa
pushf
stos
add
in
add
cmp
out
jl
jns
pop
mov
adcb
jl
scas
cwtl
mov
dec
inc
shl
sub
les
int
dec
lea
cld
pop
add
mov
pop
mov
movl
aaa
sub
dec
add
mov
sub
pop
pushf
scas
dec
lret
ret
and
out
std
shrb
or
xchg
or
loopne
push
dec
or
pop
inc
scas
mov
sahf
adc
dec
mov
jns
nop
pop
loop
dec
jo
inc
outsb
les
push
mov
push
jae
push
inc
out
push
mov
push
es
hlt
fchs
cmpsb
cmp
inc
xchg
push
sub
or
data16
jns
or
xor
rcrb
push
add
inc
into
pop
adcb
mov
inc
xor
or
ret
in
das
mov
adc
sbb
xchg
lea
mov
movlps
dec
loop
push
push
scas
and
or
mov
inc
jno
add
gs
xor
push
jmp
push
notl
mov
sbb
push
outsl
icebp
bswap
and
xor
cmp
or
xchg
adc
rorl
popa
xchg
adc
mov
inc
and
addb
inc
dec
mov
pusha
sub
and
test
dec
fimuls
cmpsl
rcll
bound
sub
dec
push
std
mov
adc
push
push
enter
sub
popf
pop
dec
adc
rcr
and
in
loopne
sub
mov
ss
sbb
das
addr16
or
adc
lods
add
inc
pushf
ret
fstpt
in
xchg
inc
sub
mov
sub
push
jg
jbe
xor
adc
push
into
dec
sahf
jns
sub
sbb
shll
push
jns
cld
add
or
cmp
negl
adc
jp
int
dec
nop
imul
jno
xorl
repnz
or
imul
ljmp
data16
call
pop
xorb
ds
mov
inc
inc
mov
cltd
jmp
icebp
int
fisubrl
mov
add
in
push
sbb
pusha
in
mov
mov
xlat
xor
aam
xlat
jbe
adc
mov
fwait
mov
push
push
push
sti
aad
sbbl
jbe
loop
loope
sti
push
fwait
inc
sbb
adc
mull
mov
or
adc
adcb
js
fmuls
and
pop
mov
stos
xor
mov
sub
sbbl
mov
mov
fwait
cmp
push
jle
negl
add
in
sbb
lret
xchg
movsb
call
pop
aas
out
pop
dec
mov
adc
fadds
push
inc
popf
dec
and
aaa
adcl
xor
dec
or
xchg
sahf
or
inc
and
mov
subb
mov
sbb
push
sub
sbb
jg
jns
daa
sub
arpl
filds
dec
sbbb
arpl
xchg
inc
or
je
pop
xchg
sbb
jo
cmc
stos
call
push
adcb
movsl
sbb
insb
push
push
mov
and
push
push
push
inc
inc
mov
push
adc
jl,pn
ret
push
cmovl
adc
je
data16
pop
adc
gs
or
cmp
add
and
cmp
xchg
repz
jo
and
xlat
addl
mulb
jo
aaa
jmp
push
cmp
sahf
jmp
leave
mov
or
cmp
loope
test
mov
call
idivb
adc
lock
push
popa
sub
xchg
fiaddl
xor
pop
or
and
jmp
jae
xor
xchg
or
sub
ljmp
outsl
mov
or
push
fstpt
in
xchg
shll
cli
cs
dec
add
or
add
lcall
jne
mov
dec
xchg
shrl
inc
or
fdivs
jns
and
dec
sbb
setno
loope
loopne
sub
inc
mov
cmp
fists
dec
repnz
int
cld
cmp
push
adc
xchg
cmp
fs
stc
cmovo
dec
iret
mov
dec
add
loop
addl
fwait
cmovp
or
mov
cmp
push
cmp
adc
or
adc
cmp
pop
add
jg
pop
and
pop
dec
mov
mov
fs
icebp
ss
push
push
pop
pop
pop
cmc
fldl
fcoms
dec
pop
xor
jae
adc
jl
insl
dec
mov
call
cmpsl
jge
nop
or
lret
in
add
shrb
js
lods
lods
push
sti
test
mov
and
jne
loope
ficomps
int3
sub
ret
jb
dec
insl
and
jle
pop
inc
mov
xchg
push
or
imul
rcl
cld
bound
lcall
aaa
cmpl
pop
inc
out
xchg
aad
mov
mov
dec
xor
mov
fwait
aad
sub
add
or
or
bnd
mov
sub
cmp
std
test
sub
ljmp
js
pop
jb
shr
xor
subl
aaa
xchg
out
cmpsb
inc
mov
notl
xor
push
pop
jbe
test
cmp
or
jnp
cmp
xlat
ljmp
notl
mov
gs
push
movsl
gs
outsb
adc
scas
sarl
outsl
and
rcll
push
or
jp
cmp
ds
push
jbe
mov
sub
push
pop
pop
dec
mov
adc
nop
adc
push
outsb
xor
sbb
loop
push
lcall
loope
xlat
int3
xor
nop
push
fs
mov
cs
or
insl
or
jge
lds
sbb
mov
out
insb
jmp
ret
push
cmp
or
movsl
cs
and
adc
call
adc
add
cmp
jl
sarl
adcb
movsb
fisttpll
inc
or
in
adc
fbld
jl
sbbl
xor
movb
sub
push
js
xor
fwait
lahf
sbb
mov
mov
add
sahf
sub
push
xchg
or
add
cmp
icebp
mov
cmp
ficompl
xor
xlat
cld
fimuls
inc
jno
inc
and
in
call
call
outsl
or
cmp
popf
mov
insb
add
inc
xchg
dec
add
cmovb
sub
jl
mov
aam
push
sbb
add
jg
xchg
mov
jmp
scas
cmp
jp
je
xor
orps
cmp
xchg
es
call
cmpsb
push
fxch
orl
cmc
addb
push
lret
push
dec
outsb
xchg
push
cmp
push
sbb
lret
roll
dec
fucomp
fildl
shlb
xchg
add
jne
ret
mov
fidivrs
pusha
sbb
sbb
mov
cmp
pop
daa
dec
add
dec
add
repz
push
lret
outsl
cld
xor
adc
or
sbb
xor
popa
out
add
sbb
mov
or
mov
inc
push
push
or
fnstsw
xchg
cld
mov
mov
cltd
ds
mov
sub
pop
mov
jg
or
mov
adc
push
mov
outsl
sub
cmp
das
insl
or
mov
mov
cmp
out
loope
jge
das
es
fldl
pop
testb
or
movhps
aas
cmp
push
add
les
icebp
xor
js
cld
ljmp
sti
and
push
ljmp
lret
jmp
jne
frstor
xchg
sub
dec
mov
jnp
or
xchg
and
push
xchg
movsl
pop
dec
mov
outsl
mov
aas
xor
es
or
push
dec
dec
gs
sbbb
inc
pop
cmpsl
jmp
push
imul
loop
adc
and
adc
loope
pusha
loopne
and
adc
xchg
mov
and
ja
dec
mov
inc
mov
xchg
mov
pop
jo
xor
dec
dec
xchg
nop
mov
push
pop
jo
mov
int3
repnz
ret
ret
mov
mov
mov
loop
adc
adc
call
xor
mov
mov
jg
loop
outsb
sbb
lret
jnp
les
or
test
cmp
mov
inc
mov
or
outsb
dec
jno
int3
or
mov
in
mov
nop
or
out
outsl
and
sub
or
add
sbb
jl
adc
jge
mov
push
and
inc
dec
mov
xlat
in
sub
push
mov
inc
mov
sbb
arpl
jmp
jg
push
push
dec
mov
call
out
inc
jae
out
jne
aas
sub
cmp
mov
add
xchg
nop
popa
stos
sub
dec
xchg
testl
jo
add
inc
push
flds
bnd
inc
fcompl
popf
jg
iret
negb
add
xchg
repnz
or
stos
xorb
mov
imul
sbb
push
mov
and
call
pop
dec
xchg
jb
mov
dec
mov
add
cli
movsb
cs
into
cld
js
inc
add
jbe
mov
add
mov
push
outsb
pusha
pop
hlt
es
push
outsb
mov
adc
pop
or
sbb
xor
adc
mov
jmp
lahf
sub
jnp
mov
out
cmp
mov
pop
jecxz
cmp
jns
pop
orl
or
xchg
xor
cmp
pop
push
sub
and
and
xor
sub
ret
push
out
xchg
data16
xchg
cmp
cmpsb
cmovbe
pop
push
dec
les
adcb
push
enter
or
jb
loop
pop
or
push
inc
adc
mov
stos
movsb
push
fucomip
add
loopne
popa
test
or
stos
dec
adc
and
jp
sahf
sbb
mov
pop
mov
dec
cmp
inc
jne
mov
and
xchg
mov
sarl
inc
xchg
xchg
mov
xor
enter
sbb
mov
jecxz
int
xor
adc
aas
out
lret
inc
dec
daa
dec
mov
inc
loop
sub
imul
mov
xchg
mov
fwait
xchg
inc
aaa
lcall
pop
movsb
pop
cmpxchg
xor
lock
xchg
sbb
sbb
push
inc
push
sub
outsl
fdivl
aad
loopne
mov
inc
xor
ljmp
addr16
loopne
mov
adc
mov
mull
xchg
xchg
gs
push
xchg
xor
xor
jge
sbb
mov
push
and
loop
adc
daa
or
pop
and
adc
inc
out
jle
pop
mov
imul
leave
daa
xchg
call
sub
and
jle
lods
enter
andl
jae
rorb
cli
or
xchg
sub
cmp
repnz
pop
xchg
push
stc
mov
scas
add
in
mov
cmp
dec
mov
mov
in
setbe
add
jecxz
push
loopne
rclb
dec
repnz
sub
fildl
push
sbb
mov
mov
add
mov
repnz
and
es
out
call
clc
jmp
mov
comiss
out
sbb
hlt
and
inc
xor
add
in
adc
sti
or
mov
es
ret
inc
push
lock
or
pop
and
fists
outsl
and
pop
jns
or
dec
ljmp
ret
push
stos
stos
or
lods
jbe
out
fdivrl
pusha
jle
push
push
loop
sub
push
popf
push
sbb
sub
movsb
rcr
fdivrs
ret
popf
and
aad
out
jb
lret
dec
cmpl
pop
loop
mov
and
idivl
xor
jb
addr16
xchg
gs
pop
mov
cld
adc
mov
out
je
xorl
mov
enter
pop
cld
jg
and
add
cmp
int3
gs
mov
inc
rclb
cmp
ret
cltd
ds
loope
pop
adc
xchg
pop
and
not
fdivs
mov
out
mov
addr16
pushf
fdivs
jnp
or
add
push
inc
cmp
xor
or
out
shld
pop
push
and
mov
dec
push
idiv
cld
das
or
xchg
pop
bound
imul
into
icebp
or
push
jge
movb
test
jg
and
arpl
add
loop
mov
inc
cmc
pop
inc
les
or
mov
aas
loopne
dec
and
aaa
jbe
cmp
push
cld
pop
adc
es
lea
ret
xchg
inc
mov
mov
and
jb
pop
mov
test
dec
shlb
dec
lret
pop
push
dec
push
andl
and
add
les
pop
sub
or
testb
pusha
ret
fisubrs
sbb
cld
nop
mov
pop
and
or
inc
rcll
lret
xchg
enter
add
dec
jmp
jp
inc
ret
aas
in
pop
in
fucomp
cwtl
cli
cmpsb
out
inc
xor
in
mov
ljmp
neg
test
cwtl
lret
fstpt
inc
adc
mov
push
stc
loop
push
push
dec
in
mov
test
mov
mov
mov
mov
imul
cmp
cli
aaa
fimuls
pop
xchg
mov
mov
push
out
sub
dec
and
or
jne
sub
mov
orl
adc
sbb
push
sahf
jg
mov
mov
inc
cmc
fsubl
js
cmpl
fmuls
xor
jecxz
cmp
movsb
jne
pop
jb
pusha
or
sbb
jecxz
or
xor
sahf
sbb
testl
fmuls
or
jo
rcrb
in
push
lds
aas
push
xchg
mov
andb
or
je
xchg
dec
jecxz
std
add
aas
push
dec
mov
inc
add
mov
and
lea
mov
test
inc
icebp
mov
fidivrs
pop
outsl
lock
data16
adc
in
test
negl
push
ret
lret
sarl
mov
jb
add
dec
stos
xchg
and
push
push
mov
and
clc
inc
lcall
gs
test
xchg
mov
inc
nop
or
cmpsl
and
sbb
rclb
fisubl
mov
jb
loope
cmp
pop
add
mov
aas
cli
pop
dec
inc
std
push
shll
mov
cmp
notl
or
std
cwtl
xchg
jns
jae
rolb
notl
mov
imulb
dec
xor
pusha
or
ljmp
inc
call
pop
pop
mov
fsub
sub
or
je
je
jno
and
pop
sub
inc
inc
andl
aas
xchg
lcall
inc
movsl
cmp
push
xor
mov
lea
shrl
mov
push
mov
addl
mov
in
fcmovnb
sbb
lea
xorl
and
dec
adc
ret
mov
fmull
movsb
outsb
fwait
push
push
pop
fisttpl
mov
cs
mov
push
data16
adc
add
mov
inc
fwait
lds
cmp
adc
stc
jne
mov
es
pop
outsl
adc
insb
cmp
jae
les
pop
ss
and
xor
push
cmp
pop
gs
lock
sub
call
xchg
mov
add
imul
adc
data16
xor
sbb
dec
inc
bnd
add
jmp
or
pop
push
xchg
inc
dec
sbb
jg
and
sub
sbb
push
pop
addr16
jl
and
sub
adc
jb
mov
nop
std
pop
decb
repnz
sub
xor
push
repz
pop
push
mov
scas
xorl
repz
cwtl
lret
bound
daa
call
add
cld
loopne
test
adc
push
pop
icebp
clc
insl
pop
cmp
out
mov
callw
mov
dec
push
pusha
push
adc
and
push
mov
out
rcll
nop
iret
aam
jg
imul
repz
push
pushl
adc
push
jno
in
les
mov
cli
push
test
ret
or
fwait
and
movsl
fsubs
call
mov
pop
stc
sbb
and
call
orb
dec
adc
fisttps
call
sub
insb
push
cmc
mov
xchg
xlat
xor
push
pop
xchg
clc
fsubs
xor
data16
fsubrl
out
mov
adc
and
xor
sub
daa
daa
or
dec
sbb
and
mov
sub
pop
cmp
bound
lock
pop
inc
insl
je
xchg
adc
jmp
loopne
cmc
or
movsl
pop
push
clc
mov
and
js
addr16
fmuls
in
push
push
dec
adc
testb
mov
out
inc
aas
dec
add
arpl
sbb
mov
push
les
pop
cli
add
push
inc
cmc
pop
push
pop
out
sbb
pop
jno
std
mov
mov
pop
jae
int3
mov
movsb
shll
int
mov
mov
jo
xor
push
and
pop
inc
inc
fimuls
mov
mov
cli
outsb
add
js
lret
outsb
dec
in
add
rorl
outsb
push
mov
push
add
mov
je
and
cwtl
adc
insl
icebp
push
stos
out
rcrl
scas
loope
stc
test
aam
shrb
icebp
outsb
dec
push
ret
mov
call
push
push
add
ret
mov
call
mov
mov
divb
stos
jo
sub
cmpsb
out
sbb
pop
xchg
pop
add
rol
dec
pop
movsl
adc
inc
push
adc
test
loopne
enter
fs
lock
data16
sub
insl
leave
xor
dec
dec
adc
stc
jne
add
adc
cli
adc
mov
lahf
repnz
into
loope
mov
notl
push
dec
pop
cmp
in
mov
daa
enter
mov
push
nop
jp
fbld
lods
outsb
and
lock
mov
add
xchg
outsb
sbb
or
sbb
ljmp
jmp
jb
xchg
ret
std
xor
xchg
push
mov
loopne
jne
xchg
mov
xor
dec
lcall
xor
inc
fbstp
cs
insl
inc
shl
add
jl
push
insb
add
cmp
sbb
ljmp
inc
jo
cmp
das
mov
scas
lea
test
jl
or
jmp
fmull
mov
or
jne
or
call
add
fnsave
roll
xchg
push
mov
pop
pop
scas
and
dec
jae
mov
mov
jmp
mov
or
daa
sbb
repnz
test
sahf
xchg
pop
push
cli
idivb
sbb
cmpsb
inc
pop
ja
fmull
pop
scas
repz
test
cmp
sub
push
mov
cmc
jo
adc
mov
mov
lahf
clc
arpl
xchg
cmc
ja
mov
mov
xchg
and
lret
aas
call
mov
fdivl
mov
jg
and
fimull
jmp
in
pop
pop
outsl
sub
dec
adc
gs
out
push
lds
cmp
rcrl
bound
dec
shrl
ljmp
leave
clc
outsb
shll
mov
mov
jbe
dec
insb
sbb
es
sti
pop
ljmp
ja
lock
jo
pop
outsb
mov
jo
and
out
adc
cmp
and
clc
imul
xorb
and
jmp
aas
daa
jne
xchg
inc
fwait
roll
sbb
push
xor
dec
ljmp
fistps
cwtl
dec
stc
loopne
mov
adc
js
inc
or
mov
xchg
or
dec
mov
aaa
cmpl
pop
mov
add
out
shlb
loop
pusha
movsl
inc
mov
or
add
jp
popf
dec
ja
mov
mov
add
inc
sbb
fsubs
adc
sub
adc
push
push
test
int
sbb
or
cmpl
les
jl
fdivrs
movsb
jne
ja
rcll
stos
lret
inc
sbb
cmp
xlat
xor
push
je
mov
call
das
clc
aaa
lcall
mov
sbb
stos
adc
or
sarl
inc
lea
inc
sub
sub
or
sbb
push
lods
inc
and
add
scas
imull
ja
addl
pop
push
jno
je
je
xchg
rorb
popa
icebp
or
je
cs
dec
cmc
cs
xlat
xor
jmp
lret
clc
iret
and
and
add
adc
inc
inc
dec
fwait
jno
xor
and
mov
lock
adc
out
test
cmp
adc
mov
jo
ret
jecxz
pop
and
loopne
pusha
je
pop
sbb
adc
pop
and
pop
mov
adc
push
ss
shrb
jle
div
dec
insl
cmp
mov
push
jo
dec
sub
xor
sahf
jl
fidivrl
dec
mov
and
sbb
dec
enter
and
xor
jmp
fsubrp
mov
neg
mov
mov
cs
jbe
or
xchg
pop
rcr
and
mov
push
cmpsb
adc
cmp
fldt
jae
call
out
imull
sub
xor
adc
lret
fdiv
ja
fimull
dec
rclb
xchg
cmpsl
adc
aam
pop
movsl
adc
outsb
rcrb
mov
jge
loopne
addl
out
out
xlat
jge
inc
lods
mov
dec
dec
xchg
mov
subb
sub
sbb
scas
or
cltd
fistps
mov
xor
stos
sub
fbstp
or
jne
das
sbb
inc
into
fimull
ja
sub
and
das
cmpsb
xlat
push
jl
jge
or
fisttps
pop
in
fisubrl
mov
sub
cmp
cwtl
mov
push
sbb
movsb
xor
dec
push
mov
sbb
mov
sar
outsb
and
mov
push
dec
pop
mov
into
xor
mov
mov
and
pop
jno
ja
mov
lods
rcrl
adc
shlb
mov
or
cltd
and
je
push
add
push
push
dec
adc
push
cmp
iret
fimuls
ja
and
mov
xor
aad
jno
and
cld
inc
ja
sbb
mov
mov
or
ret
or
lea
jp
and
fwait
push
imul
ret
das
ds
leave
je
and
in
or
fiaddl
cltd
inc
enter
sahf
testb
sbb
insl
aas
pop
mov
adc
les
jle
lahf
inc
gs
dec
add
jns
mov
cmp
xchg
pop
inc
pop
inc
adc
xchg
mov
pop
pop
call
neg
mov
addb
aam
inc
lcall
outsl
or
mov
cltd
aaa
or
inc
or
leave
ja
inc
sbb
adc
jle
push
loop
pop
jmp
pop
adc
adc
xor
xor
ffree
sub
inc
cmp
jge
notl
call
js
push
es
add
xorb
not
dec
iret
xchg
cmpsl
das
aad
jns
dec
pop
adc
pop
dec
add
inc
sub
mov
ret
mov
xchg
mov
nop
subb
in
dec
jae
subb
in
jle
into
xchg
shl
cmp
and
jmp
pop
lahf
mov
sbb
jl
cmp
dec
jl
cli
sbb
inc
movsl
inc
push
fbstp
xchg
push
clc
sub
mov
cmp
ficoms
out
mov
jbe
mov
fwait
xorl
fsubs
jbe
loop
or
jb
and
push
push
enter
stos
adc
dec
and
into
repnz
xor
test
cli
adc
flds
dec
inc
jb
xchg
pop
xchg
loopne
adc
fwait
pop
mov
pop
jne
jle
sbb
in
fcoms
mov
sbb
outsl
adc
lcall
mov
imul
or
or
pop
xor
ljmp
jge
fldt
mov
sub
stc
push
cmp
sub
inc
cli
jmp
out
or
lret
repnz
outsl
dec
fnstsw
cmp
cmpsl
and
push
pushl
psrad
adc
inc
iret
push
arpl
mov
xor
xor
cmp
in
jb
sbb
jo
mov
sub
sbb
cmp
mov
push
inc
test
pop
jnp
push
push
xor
sbb
aaa
pop
shlb
out
imul
cli
inc
fadds
push
fcomps
xor
fmull
mov
outsl
dec
sbb
cmp
or
push
sub
pop
adc
add
push
and
add
mov
pop
call
and
stos
add
std
lock
mov
adc
xchg
add
sub
and
mov
mov
mov
inc
pop
push
dec
cmpl
stos
repnz
cmp
imul
or
cmp
xchg
pop
mov
je
test
push
adc
sub
or
lcall
xchg
sub
mov
jge
add
mov
jne
push
pop
stos
dec
jo
in
jecxz
xchg
jmp
dec
enter
xchg
mov
and
sbb
jb
pop
or
mov
outsb
or
dec
xor
repz
ja
mov
fisubs
in
mov
inc
pushf
push
push
hlt
inc
outsl
je
add
and
inc
pop
or
out
repz
cmp
loope
repnz
push
pushf
mov
xor
mov
fwait
mov
sub
clc
setns
mov
popa
jae
loop
mov
sbb
xor
call
pop
sbbl
dec
mov
scas
cmpsl
aad
fldl
jbe
pop
int
mov
add
ss
in
pop
insb
mov
mov
mov
mov
repz
sahf
mov
or
lds
push
dec
sbb
js
mov
xlat
lret
test
xchg
ret
cmp
ret
pop
jae
xchg
sbb
gs
mov
and
or
scas
mov
mov
aad
in
fwait
bswap
push
push
shrb
mov
aaa
fdivrp
sub
push
inc
pop
outsb
cmp
mov
cmpsl
test
xor
adc
add
sub
pop
sahf
jmp
cmpsl
push
mov
dec
cwtl
dec
dec
pop
mov
xorl
inc
push
add
in
sahf
pop
jmp
push
std
sub
or
fnstcw
or
inc
xor
jnp
rclb
push
pop
mov
xor
pop
repnz
pop
add
lret
cmp
mov
icebp
aas
popa
hlt
inc
inc
add
jb
dec
dec
pop
loop
cli
test
add
call
dec
inc
pop
enter
lods
xchg
in
jae
adc
call
hlt
jp
imul
mov
inc
mov
or
je
stos
xchg
jne
push
xor
enter
pop
and
inc
adc
pop
mov
je
sub
inc
push
outsl
push
aas
push
or
add
outsb
and
or
inc
fidivl
in
aas
pop
cmp
or
enter
call
push
shrb
xchg
mov
jecxz
jne
push
or
or
dec
ljmp
bound
push
push
sti
push
sbb
arpl
cmc
inc
adc
add
push
aas
inc
xchg
add
cmp
xlat
dec
out
fwait
mov
cltd
push
xchg
add
jecxz
cmp
xchg
sbb
pop
push
ret
sub
out
ljmp
or
xor
push
stos
pop
dec
call
stc
add
divps
negl
inc
out
jnp
js
dec
cmp
xchg
adc
cmp
imul
push
dec
push
jl
pop
fcoml
jo
mov
pop
mov
add
dec
adc
mov
adc
dec
gs
leave
dec
repz
push
mov
jb
sbb
aas
push
xchg
outsl
push
xor
mov
scas
pop
into
roll
arpl
and
xor
mov
and
sbb
dec
mov
mov
fs
lock
lea
fsubs
stos
movsl
cs
outsb
ljmp
mov
inc
lds
pop
aad
scas
pop
push
call
ret
in
mov
mov
mov
push
or
cmp
adc
test
ss
mov
sbb
pop
fmuls
pushf
mov
fs
dec
inc
or
cmp
cmp
dec
mov
scas
repnz
xor
xlat
jge
push
mov
ja
insl
into
in
sub
mov
jo,pt
jns
xor
and
out
iret
into
jns
cmpsl
inc
jns
stos
into
imul
mov
leave
or
lds
test
xor
fisttpll
push
and
mov
jle
movsb
and
dec
adc
scas
imul
xorl
rcrl
sbb
cmp
dec
cs
add
mov
cmp
sti
sbb
pop
dec
add
sub
add
in
enter
push
push
add
jge
and
in
aas
push
mov
mov
adc
call
enter
jns
jae
test
insb
enter
push
or
pop
std
dec
dec
adc
pop
in
cmp
loop
in
adc
push
inc
xor
fisttpll
jno
jle
inc
ret
sub
xchg
sahf
pop
fdivr
dec
cmp
inc
pop
mov
sbb
cmp
mov
mov
lret
lds
sbb
cmp
mov
fdiv
lret
stos
popa
mov
inc
jmp
movsl
and
mov
xchg
cmpsb
cld
std
jno
stc
inc
ret
movb
dec
daa
mov
inc
imul
pop
sub
pusha
mov
les
mov
stos
or
je
xlat
int
hlt
or
or
push
inc
lahf
mov
sbbb
cltd
es
mov
mov
and
pop
and
jecxz
cld
ret
ss
dec
or
lods
cltd
sbb
gs
mov
cmp
xor
adcl
xlat
es
xor
sbb
mov
adc
xor
xchg
jmp
mov
push
loopne
dec
push
stos
outsb
sti
dec
rcll
push
or
gs
jb
stos
dec
fldcw
adc
mov
mov
insl
adc
sub
dec
xor
inc
int
jge
lret
jns
sub
rolb
adcb
and
inc
test
add
xor
push
adc
push
adc
ss
data16
jns
push
jecxz
aam
add
and
dec
inc
xor
push
mov
int3
pop
push
push
sbb
mov
or
push
sbb
xchg
outsl
jp
cld
js
pop
mov
add
int3
ret
pop
jnp
adc
pop
xchg
ret
cltd
mov
ljmp
sbb
dec
and
and
mov
and
fsubs
inc
mulb
mov
push
aas
cmp
dec
cmp
cmp
jo
mov
call
test
stos
adc
lret
out
outsl
adc
rcll
add
add
jbe
adcb
sub
push
loope
fsubr
bound
and
adc
push
jbe
les
call
or
aaa
mov
inc
fbstp
rorb
mov
arpl
add
lret
and
sbb
pop
fstpl
and
mov
mul
dec
pusha
pop
lock
mov
add
xor
inc
loope
pusha
mov
push
mov
out
shlb
outsl
cmp
mov
xor
mov
repnz
and
pop
nop
lock
add
pop
repnz
subb
out
pop
xor
mov
push
mov
repz
lods
mov
or
stos
in
mov
inc
jo
repnz
dec
int
lcall
movsb
insb
clc
xchg
inc
and
jo
out
jp
mov
cmp
mov
jl
and
sub
outsb
pop
jmp
or
sbb
push
dec
cmpsb
pop
std
push
adc
lcall
dec
cmp
bound
mov
adc
mov
xor
dec
mov
loope
mov
push
xchg
imul
push
call
xchg
out
xchg
dec
loope
or
inc
jo
fdivr
push
mov
or
inc
inc
shlb
insb
sbb
enter
mov
xchg
imul
std
pushf
and
xchg
dec
sbb
cmp
hlt
fadds
sub
pusha
psubsb
adc
push
push
adc
fldcw
push
push
push
les
sub
scas
cmp
sub
push
shrb
jno
pop
and
xor
lahf
or
int3
and
and
fmull
inc
mov
xchg
repz
mov
sbb
sbb
jb
or
add
sbbl
mov
test
jle
xor
adc
or
xor
cmpsl
imul
inc
lds
in
mov
push
into
stos
or
aas
push
adc
rcll
jp
inc
stos
xchg
int
ljmp
push
lcall
push
ret
xor
pop
js
mov
sbb
dec
sub
call
lret
adc
pop
push
xor
lret
or
pop
fdivrs
mov
cmp
idivl
push
data16
sub
push
mov
lret
push
stos
int
data16
sub
push
push
movb
cmp
pop
sbb
xor
sub
mov
xchg
cmp
sbb
inc
push
icebp
adc
imul
xor
lahf
fsub
or
mov
sub
gs
cmc
adc
mov
push
xor
sub
cli
mov
cmp
xor
jb
mov
sar
cmpsb
adc
imul
addr16
push
shlb
pop
imul
sti
or
nop
add
adc
push
sub
xchg
sbb
xchg
add
sbb
sub
mov
dec
hlt
pop
pop
enter
pop
add
and
sti
out
movsb
in
sbb
outsb
pushf
sbbl
sub
push
loope
shll
mov
sub
inc
add
xor
pop
jp
enter
xlat
in
inc
bound
cmp
mov
sub
in
insl
leave
mov
fldl
in
stc
xchg
push
sub
not
and
shll
xchg
sub
cmp
jb
fsubrs
add
add
leave
and
inc
push
sbb
fwait
sbb
push
orb
movsl
sub
scas
std
shl
sub
mov
push
lods
in
stos
scas
js
ss
bound
or
or
inc
mov
leave
xlat
push
test
fmuls
add
inc
fidivrl
mov
add
cwtl
dec
repnz
push
cmp
mov
push
jae
cmp
xor
xchg
pusha
lock
iret
jg
jg
outsl
push
adc
es
adc
pop
add
mov
or
movsl
inc
mov
insb
add
sbb
xor
cmp
and
xchg
push
mov
sub
jns
ljmp
sahf
and
pop
out
inc
cmp
and
inc
xchg
pop
jns
adc
cmp
push
inc
xor
mov
sub
adc
xor
in
cmp
movsb
mov
dec
cli
sub
nop
inc
dec
push
lock
popa
xchg
pop
inc
inc
mov
jl
call
add
push
roll
cmp
inc
test
mov
xor
push
or
lds
xor
notb
shlb
call
cmp
xor
fbstp
mov
inc
ss
push
popf
push
xor
or
inc
andl
add
movsl
mov
push
add
push
cmp
popa
xor
sub
jae
cmp
pop
adc
pop
pop
sbb
in
mov
sub
pusha
lock
push
fisttpll
dec
popa
stc
sub
cmc
sahf
adc
sbb
fdivp
out
adc
and
pop
adc
cli
push
mov
add
mov
out
sub
xchg
pop
xor
jmp
sarl
dec
push
dec
mov
dec
sbb
rep
movsb
iret
push
push
arpl
pop
outsb
inc
cwtl
xchg
dec
push
jae
aas
sbb
lret
cli
ret
inc
and
hlt
adc
ja
jmp
inc
add
adc
lods
mov
mov
scas
push
mov
xchg
mov
lret
push
popw
popf
push
data16
xchg
sub
sbb
adc
insb
jb
fimuls
push
inc
adc
mov
incb
or
push
mov
lea
in
sub
jo
fistl
sub
jae
lea
xchg
or
loope
push
fistps
pushf
clc
sub
cmp
xchg
movsl
jmp
loope
inc
push
mov
mov
inc
call
mov
xchg
incb
fisttpl
inc
and
mov
fs
dec
push
cmovp
imull
sub
cmp
adc
push
jle
add
mov
or
add
jne
xchg
sbb
or
pop
sub
cmp
jmp
mov
pop
rcrl
or
ljmp
or
or
js
imul
adc
inc
test
dec
pusha
jo
loopne
ret
mov
mov
in
or
dec
loopne
fwait
ror
call
icebp
push
ret
scas
sub
pop
inc
stos
push
pop
sbb
jmp
popa
mov
pop
sub
sbb
jmp
ljmp
or
call
out
daa
xchg
push
pop
push
inc
xchg
jmp
inc
movsb
sub
lret
fwait
and
mov
pop
push
out
sbb
inc
or
jnp
xchg
mov
into
adc
adc
add
mov
dec
jmp
pop
or
xchg
xor
jb
lret
cmp
or
cmp
in
pop
repnz
mov
mov
jae
pop
or
rcll
ds
enter
sbb
xor
sarb
inc
cmp
adc
xchg
fcoms
mov
hlt
mov
cli
adc
jae
cmp
fadds
sbb
inc
or
das
cli
pop
lods
dec
scas
clc
xor
mov
adc
sarl
sbb
insl
fcompl
or
pop
pop
jb
lret
je
adc
xchg
add
repnz
xchg
cmp
in
or
repnz
pop
test
mov
pop
push
fsubrs
dec
sub
cmp
call
fdivrl
in
push
and
jns
and
ret
push
xorb
into
aaa
arpl
mov
rclb
and
push
or
enter
les
mov
cmp
shlb
xor
inc
push
push
add
dec
lret
add
sbb
or
rclb
mov
out
push
add
aas
push
push
push
rorb
icebp
xchg
mov
xor
rcrl
add
loop
cmp
ljmp
xchg
sbb
sub
push
xchg
into
push
mov
fstpl
lock
sarb
cld
insb
push
movsl
adcb
mov
movsl
sub
xchg
or
add
xor
mov
mov
lds
or
mov
sbb
cmp
add
lahf
pop
addl
push
adc
pop
ljmp
or
pushf
fsts
xchg
mov
fstpt
xor
ret
das
push
inc
cmp
jge
es
or
test
adc
clc
lcall
leave
push
mov
lock
enter
fwait
rcll
jnp
lods
mov
mov
and
pop
or
aam
push
cmp
jmp
dec
loope
push
mov
push
jg
xor
xor
add
mov
outsl
and
pop
les
mov
in
outsl
addr16
mov
call
ret
fnsave
inc
and
pusha
push
adc
stos
clc
sbb
or
je
adc
inc
aas
push
adc
mov
mov
push
pop
push
sbb
leave
push
lock
xor
inc
mov
and
cmp
push
push
jg
adc
jp
rclb
outsb
adc
movsl
insl
sahf
rcr
idivl
pop
adc
ja
sub
cs
lods
mov
pushf
inc
mov
fwait
daa
cltd
dec
dec
inc
imul
mov
fnstsw
add
jecxz
mov
jmp
ret
sbb
mov
inc
cmpsb
push
lahf
icebp
add
sbb
lock
pop
jne
and
mov
and
push
dec
movl
jae
mulb
add
icebp
push
inc
push
lea
jp
sbb
or
inc
mov
or
lock
push
movsb
mov
jno
loop
dec
or
dec
and
mov
popl
cmp
jmp
lock
mov
inc
sbb
push
cmp
or
cmp
mov
int
aad
insb
gs
sbb
fs
pop
stos
add
inc
adc
loop
mov
sbb
mov
xor
and
push
xchg
mov
or
cmp
int3
xor
sub
or
sbb
pop
sbb
and
sub
add
loope
adc
inc
or
add
outsl
and
inc
in
psadbw
push
xchg
call
adc
mov
fimuls
mov
cld
cltd
pop
push
xor
cwtl
movsb
inc
lahf
dec
cmp
adc
cltd
pop
fadd
adc
cld
or
dec
call
adcl
movsb
add
mov
or
repnz
pop
or
push
adc
les
dec
xchg
push
add
pop
icebp
push
pop
cmp
push
mov
sub
test
mulb
add
dec
sub
xchg
sub
or
xchg
push
or
inc
dec
jmp
js
and
subl
sub
pop
invd
shrl
mov
xchg
dec
lret
or
ret
adc
nop
add
jno
test
mov
lret
mov
cmp
adc
or
jae
sbb
sarl
pop
push
sbb
adc
xchg
clc
int3
pop
adc
jae
loope
xchg
inc
mov
adc
repnz
ljmp
xor
cli
push
cmpsb
pushf
inc
add
fsubrp
adc
xor
loopne
outsl
clc
mov
mov
mov
out
dec
clc
jg
sub
push
mov
sub
or
mov
mov
push
clc
mov
scas
aas
mov
mov
xchg
mov
insl
cltd
lds
pop
std
in
jns
jnp
call
mov
lahf
add
push
lret
xchg
adcb
xor
sbb
sbb
mov
pop
js
test
fsubs
xchg
mov
mov
lret
push
ret
testb
lock
pushf
add
cmp
mov
imul
and
and
adc
test
dec
pop
loop
pop
xor
and
jecxz
inc
out
into
insb
sbb
xchg
outsb
stc
das
fisttpl
ret
ret
ret
sarb
xchg
in
add
movsl
sahf
pop
lock
push
dec
call
jns
push
cmp
mov
push
mov
and
sbb
push
hlt
pop
es
sbb
pop
out
hlt
adc
iret
adc
xchg
fsts
jp
mov
jle
pop
call
aaa
idivb
je
shrb
and
xor
or
aas
and
sub
nop
in
adc
dec
sbb
pusha
clc
push
or
adc
in
in
jne
aad
push
xlat
push
shll
xchg
jge
add
sbb
sbb
and
inc
mov
movsl
cld
inc
insl
adc
cld
add
cmpsl
add
in
cmpsl
sbb
fldl
call
dec
incl
movsb
mov
pop
lds
stc
mov
das
jbe
xchg
or
stos
mov
mov
pop
je
dec
popf
push
push
mov
cmc
mov
mov
inc
pop
cmp
call
mov
loop
loop
inc
js
add
xlat
clc
sbb
fs
push
jnp
and
sbb
fnstsw
repnz
jp
dec
filds
roll
cli
push
mov
pop
mov
push
sahf
fs
repnz
inc
xor
pop
addb
lret
imul
les
imul
add
pop
push
add
push
rolb
dec
push
mov
mov
outsl
mov
adc
stos
ret
jmp
addl
pop
test
add
testb
mov
dec
imul
adc
push
add
xchg
sbb
mov
lcall
imull
sbb
das
cmp
loop
daa
cmc
push
mov
sti
cwtl
xchg
cmp
add
insl
jge
pop
dec
xor
roll
inc
or
sbb
test
mov
shlb
lea
leave
xor
test
aad
sbb
das
enter
or
fucomi
sbb
stos
and
hlt
addl
das
mov
lds
jle
add
jmp
sbb
or
adc
ss
xor
adc
mov
xor
adc
gs
aas
xchg
add
movsb
shll
add
cmp
inc
pop
inc
pop
pop
in
pop
fmull
in
pusha
lds
adc
or
add
imul
ret
nop
loope
jge
inc
push
jp
rcr
mov
int
repz
test
pop
js
enter
xor
jnp
mov
jb
ret
movsb
push
sub
and
sub
dec
and
arpl
push
js
mov
inc
call
or
dec
inc
mov
das
jbe
lock
ret
pop
dec
and
mov
jbe
cmp
and
adc
sahf
push
pop
sub
clc
xor
mov
sub
outsb
fs
adc
dec
shll
sub
movsb
mov
imul
cmp
or
adc
dec
adc
inc
xor
in
add
mov
mov
ja
mov
ljmp
sarl
ja
shr
std
adc
movsl
mov
dec
in
and
aaa
fwait
ja
js
cwtl
gs
popf
xor
outsl
stos
out
stos
into
lds
in
movsb
jg
xchg
mov
sti
cmp
mov
jge
leave
insl
inc
xchg
mov
sub
adc
jl
adc
cmp
loopne
dec
push
jp
push
inc
das
fwait
xor
fisttpll
xchg
xor
int
into
push
inc
xchg
xor
dec
dec
les
in
lock
cltd
xchg
negl
cmp
push
lock
call
jecxz
push
adc
fistl
divb
or
lret
cmp
or
inc
sub
pop
dec
ljmp
adc
test
jmp
inc
sbb
jb
mov
loope
clc
inc
hlt
mov
sub
cmpsl
fs
ret
cs
or
or
stos
and
dec
stos
jb
add
inc
xor
cmp
adc
test
or
call
push
je
mov
sbb
cwtl
leave
push
jo
out
loopne
inc
adcb
pop
call
inc
mov
adc
xlat
jecxz,pt
fnstenv
dec
mov
mov
cmp
lret
mov
dec
lret
mov
adc
ljmp
jg
adc
ret
jo
push
inc
mov
dec
mov
mov
xor
cmp
incl
and
add
movsb
and
rcl
cwtl
inc
jnp
sub
mov
and
out
mov
sbbl
shl
inc
dec
fstl
xor
test
add
adc
popa
add
es
mov
sahf
jmp
andl
pop
scas
mov
xchg
sbb
mov
ss
sbb
push
mov
sbb
psadbw
ljmp
pop
mov
stos
test
fimuls
ret
pop
or
jbe
cmp
or
out
push
ljmp
and
bound
dec
mov
push
pop
fdivl
pop
or
std
inc
push
cld
iret
fwait
gs
in
inc
add
mov
fs
fiaddl
pop
lcall
mov
ficoml
adc
in
insb
cmp
cmp
push
sbb
or
scas
lds
mov
je
pop
dec
rorb
bound
sti
cli
sbb
loope
sub
and
out
mull
push
lea
push
repz
loope
adc
mov
xor
fisttpl
out
mov
sbb
inc
std
orb
incl
xchg
mov
pop
mov
sub
mov
inc
push
pop
daa
addb
in
sbb
pushf
and
mov
mov
dec
mov
ss
cmp
xor
mov
xchg
std
sub
outsb
adc
ret
shlb
sbb
cmp
pop
aam
mov
mov
or
jle
arpl
sarl
lods
push
fldcw
add
imul
adc
fsubs
mov
loop
and
in
mov
mov
xor
mov
lds
movsb
mov
inc
mov
inc
clc
repnz
repnz
rolb
dec
insl
lret
outsb
pop
add
fstpt
or
mov
lcall
mov
mov
dec
fwait
dec
cli
or
xchg
inc
mov
aad
les
pop
xor
cmpsl
fbld
stos
xor
sbb
pop
imul
or
cli
fldt
xchg
vpshld
mov
xor
imul
dec
dec
or
mov
fistpl
imul
jmp
pop
fs
adc
inc
and
les
in
cltd
push
pop
mov
daa
cli
inc
rol
mov
popf
outsl
inc
enter
or
add
sub
xlat
push
popl
push
cld
rclb
cmpsb
add
lret
mov
or
enter
mov
mov
jno
lds
jmp
scas
notb
dec
inc
adc
sbb
sub
inc
xchg
add
dec
loopne
sub
repz
adc
rcl
call
dec
data16
xor
sbb
mov
popa
arpl
fidivrl
bound
push
and
mov
xchg
push
xor
sub
aad
mov
dec
in
jnp
aas
aad
insb
in
xor
inc
movsl
arpl
cmp
sbb
aad
sub
adc
leave
pop
cmpsb
fdiv
dec
clc
jb
rorl
adc
lock
mov
hlt
repnz
inc
pop
dec
mov
pop
xchg
push
in
jmp
stos
inc
push
or
push
mov
fdivs
push
nop
dec
adc
sbb
jp
sub
movsb
aaa
xor
sub
jg
push
dec
leave
fcmovb
pop
mov
loop
rcr
aas
sbb
cmpsl
push
fbld
push
pop
ss
add
inc
nop
dec
bound
xchg
push
jmp
adc
pop
or
or
jno
lods
sbb
stc
in
dec
gs
mov
stos
jge
xlat
int
adc
dec
xor
xor
sahf
inc
outsb
adc
cmp
std
and
cmp
pop
inc
negl
adc
dec
xchg
js
sub
sbb
xchg
ja
shrl
xchg
sub
pop
clc
xchg
hlt
jp
xchg
sarl
jle
das
cwtl
scas
stc
loopne
movsl
push
jne
sbb
mov
std
push
adc
ja
adc
cmp
mov
inc
add
clc
mov
lahf
xor
hlt
jb
daa
dec
notl
xacquire
js
pop
push
sbb
sub
jge
inc
das
psubsb
jge
out
mov
adc
and
mov
push
loop
jmp
int3
and
ss
mov
push
sub
out
int
push
lret
test
or
mov
hlt
pop
mov
xchg
inc
out
in
jge
xor
jge
cmc
in
or
cld
mov
andl
or
repnz
sub
rcrb
lcall
scas
mov
popf
pop
jno
push
jns
inc
mov
inc
adc
test
or
mov
adc
popa
scas
fidivrs
add
loope
repz
loop
inc
jmp
jbe
or
pop
lock
mov
nop
andb
dec
cli
add
adc
shrb
in
leave
popa
mov
sahf
push
adc
stos
cmp
mov
sti
les
cmp
add
scas
gs
imull
cld
jb
decb
imul
pop
dec
lods
xor
bound
or
stc
lcall
dec
mov
pop
test
push
ficoml
add
lea
jnp
outsb
or
jecxz
inc
mov
sti
xchg
imul
inc
sbb
push
mov
std
or
mov
cmpsb
push
mov
fsts
jne
inc
or
pushf
inc
cs
xchg
aam
add
lcall
xchg
or
pop
outsl
jbe
sub
mov
pop
push
cmp
xchg
inc
std
imul
shrl
sbb
imul
ret
pop
repnz
pop
sbb
fs
xchg
dec
iret
pop
mov
loope
hlt
leave
mov
stos
bnd
jp
mov
xlat
jg
push
jnp
sub
sbb
inc
scas
add
push
xor
daa
cmp
mov
enter
pop
out
jne
icebp
xchg
mov
and
lret
stos
sahf
sti
fildll
adc
push
jae
inc
outsb
xchg
cs
lahf
pop
cmp
loopne
ja
data16
sub
and
lock
push
mov
fucomi
cmp
xchg
fistpll
enter
fsubrl
jo
inc
test
sarb
jns
leave
std
or
and
pop
cli
jp
loop
inc
jecxz
ds
inc
pusha
or
mov
loope
xchg
cmc
pop
loope
inc
inc
out
mov
xchg
sub
dec
or
mov
shrl
lea
sahf
pop
test
adc
sbb
add
jl
mov
movsl
fs
call
imulb
cltd
je
lahf
loop
fwait
jne
clc
lock
sub
adcl
in
int
repz
sub
imul
imul
and
testl
mov
aam
mov
dec
jmp
and
insl
dec
mov
inc
xor
out
mov
add
rcl
pop
out
or
push
and
fmuls
mov
or
gs
cmp
cmp
and
adc
xchg
outsl
je
xchg
pop
mov
mov
out
push
shlb
dec
cmp
jbe
hlt
loop
pop
sub
test
mov
pop
add
stos
push
cmp
jbe
add
adcl
ret
push
dec
test
stos
push
cmp
pop
and
mov
add
pop
or
testb
dec
adc
insb
mov
adc
dec
xchg
push
sub
mov
insl
fisttps
pop
sub
pop
push
daa
pushf
push
clc
daa
adc
daa
adc
push
adc
loope
idiv
sti
cmp
push
lea
mov
sti
inc
imul
call
mov
xor
cmpsb
pop
jmp
push
adc
ficoms
clc
insl
dec
mov
mov
pop
mov
or
xor
push
in
sbb
or
sub
mov
iret
rorl
and
push
jno
cld
push
xlat
push
stos
jb
and
xchg
int3
lret
mov
and
movsl
addr16
outsl
loope
and
pop
mov
jbe
jnp
jno
lret
adc
adc
sbb
cmpsl
adc
popa
or
jmp
and
push
in
andl
loop
mov
pop
cltd
pop
sub
dec
mov
in
fmuls
pop
aaa
inc
xchg
hlt
lcall
sbb
fwait
jmp
xor
sbb
jne
inc
jb
into
inc
dec
dec
mov
lea
dec
inc
popf
mov
loop
test
push
shl
aaa
clc
xchg
add
jmp
mov
outsl
cltd
sbb
mov
and
mov
xchg
and
cmp
mov
rolb
jp
dec
push
push
arpl
mov
dec
adc
ja
pop
in
and
xchg
inc
dec
sub
adc
clc
or
sub
into
pop
or
inc
cmp
std
insb
pop
push
lret
inc
cs
rcr
xchg
adc
xor
fwait
lret
or
adc
outsb
inc
xchg
and
inc
cld
xor
xchg
mov
stos
dec
mov
fucomip
pop
pushw
sbb
jbe
mov
push
pop
data16
mov
loopne
adc
mov
push
test
aam
fcoms
mov
jge
adc
loope
dec
push
mov
cmc
into
pop
sbb
sbb
and
xor
or
sbb
pushf
inc
movsl
jae
pop
push
mov
xchg
xchg
loope
sbb
pusha
sbb
sbb
out
nop
mov
imul
shll
ds
sub
cmp
mov
jecxz
push
je
mov
into
or
dec
pop
mov
pop
mov
mov
jne
or
out
add
cmp
cs
fcoml
das
cmp
jge
jl
pop
rcrb
inc
call
mov
push
or
scas
icebp
cmp
nop
mov
jne
rorl
mov
add
jo
cmp
cmovb
shrl
es
or
aas
push
sti
loope
mov
add
and
push
pop
test
pop
icebp
adc
push
jno
inc
inc
or
cli
adc
jb
fcoml
ja
sub
movsb
push
lret
call
adc
shrl
pop
jns
cs
lret
adc
outsl
push
sbb
or
push
pop
adc
xor
xchg
fbstp
insb
jb
ss
and
jmp
xor
add
jl
popf
cmp
mov
pop
mov
popf
pop
stc
in
push
dec
add
in
pop
idivl
cmpsb
mov
insb
push
fwait
ret
cmp
and
leave
pop
fisubrs
cmp
lahf
sbb
cmpsl
mov
enter
adc
fiaddl
loope
or
movsb
add
dec
int3
in
std
or
mov
test
test
ja
gs
nop
call
and
shrl
movsl
jmp
dec
movsl
cs
in
push
mov
and
icebp
cmpsb
or
les
test
or
and
or
jnp
mov
xchg
mov
enter
loopne
test
outsl
and
cmpb
push
ss
cmp
push
inc
xchg
cmp
inc
loope
pop
call
cmpsb
xchg
das
and
jp
cli
pop
bound
movsl
push
add
xchg
push
and
mov
dec
pop
cli
out
fstpl
fimuls
adc
faddl
add
pop
sbb
pop
das
or
movsl
adc
sub
dec
and
or
mov
rorb
jne
shll
pop
fwait
sub
fsubs
or
daa
mov
add
xchg
xor
pop
push
push
lret
adc
cmp
out
imul
sub
bound
push
notb
add
xor
scas
pop
bound
jnp
or
xor
fiaddl
ror
push
pop
add
xor
jb
fwait
scas
push
rolb
mov
mov
jo
jl
xchg
push
lea
dec
or
idiv
movsl
cld
in
rclb
jg
call
repnz
fsts
xor
add
cld
sub
mov
adc
out
pop
or
out
xchg
xchg
push
adc
icebp
lahf
mov
and
push
and
mov
test
push
pusha
push
xor
and
mov
test
push
jb
shr
fwait
cmp
cld
dec
or
and
adc
imul
cmp
jl
inc
repnz
pop
cmpsb
mov
sti
movsb
lcall
inc
xor
aas
pop
sub
or
fnstsw
pop
enter
fdivp
mov
xchg
fcmovb
ljmp
xchg
cs
push
lods
jge
cmp
loope
call
jg
cwtl
mov
js
call
mov
adc
fcoms
scas
xorl
add
or
adc
mov
xchg
and
cmpsb
testl
pop
shlb
or
mov
and
push
popf
sbb
dec
rol
imul
inc
mov
or
mov
inc
xor
les
clc
out
adc
je
lds
icebp
cltd
fld
psubsb
ss
cmc
cmc
aas
fadd
add
icebp
lahf
sub
fldcw
lcall
push
fcmove
cmpsl
ret
popf
adc
add
adc
das
xchg
push
mov
push
push
lock
stc
enter
jo
sbb
call
outsl
lret
push
loop
nop
dec
mov
jmp
rcrl
shl
lods
jo
aam
dec
adc
pushf
jg
or
aas
ss
push
ret
add
sub
dec
or
and
das
push
ljmp
mov
loop
dec
cmp
cli
popa
arpl
into
dec
roll
pop
adc
add
pop
sub
add
adc
xor
dec
push
push
fisubrs
or
fmull
xor
inc
in
jge
xor
mov
push
ljmp
mov
aaa
or
jno
es
dec
je
inc
push
ljmp
hlt
pop
shrl
je
pushf
repnz
sahf
mov
xor
adc
test
push
shl
pop
inc
popf
aas
fisttps
mov
adc
xchg
xor
dec
imul
dec
xor
sarb
dec
xchg
mov
lods
cltd
xchg
sbb
push
pop
clc
add
adc
hlt
sub
push
adc
inc
push
mov
cmp
fsubrl
pop
or
push
sbb
call
mov
jmp
push
sub
addr16
push
es
inc
cmpsl
jecxz
push
gs
mov
and
outsl
cmp
xor
or
testl
fidivrs
decb
fs
pushf
mov
movsl
cld
and
inc
out
adc
pop
pop
fs
enter
aaa
lea
cli
push
pop
cmp
pop
aam
sbb
std
mov
inc
or
or
pop
pop
outsb
jo
jp
imul
cmp
mov
in
orb
mov
fldenv
das
dec
loop
jge
mov
push
ja
xor
call
mov
stos
pop
sarl
push
int
add
mov
push
sub
rcrb
push
data16
addr16
cmp
and
aam
mov
cmpl
inc
nop
xor
jns
pop
imul
and
cmp
js
cmp
mov
ds
inc
fistl
lret
or
out
mov
pop
xor
pop
cli
pop
jle
and
sub
xchg
lds
hlt
pushf
pop
outsb
addl
stos
adc
fdivr
enter
ret
mov
clc
js
and
cmp
wbinvd
cwtl
xchg
xor
orl
push
mov
and
cmp
sub
daa
ja
push
push
sub
adc
xlat
daa
inc
and
fsts
negl
and
jb
mov
jns
ficomps
incb
leave
sub
lock
cmpsb
test
jo
cmp
xchg
ret
aad
sub
push
ret
xor
imul
inc
jle
mov
cmc
fwait
jae
stos
insb
es
outsl
xchg
sahf
jmp
setle
inc
inc
js
insb
clc
and
pop
sub
mov
aas
cmp
and
flds
add
imull
jno
pop
push
cmp
iret
addr16
xor
mulb
pop
and
push
cmp
and
scas
shrl
sti
pop
sbb
imul
out
dec
leave
cli
adc
inc
sbb
cwtl
push
xor
add
mov
inc
cli
xor
adc
inc
sub
sbb
pusha
dec
xchg
mov
jmp
push
pop
push
jbe
dec
sub
mov
jle
cmp
movsb
or
loop
xor
jb
pop
mov
fwait
jno
add
cmp
cmp
sbb
lea
or
xor
cmpsb
jg
or
repz
test
dec
xchg
dec
or
movsl
inc
or
inc
or
push
and
in
inc
adc
out
loope
push
xchg
jo
jne
insl
push
xor
xchg
stos
mov
or
cltd
sbb
sti
jmp
cs
ret
mov
pop
push
mov
xchg
adc
cmp
inc
cmp
adc
rcrb
fdivrs
push
and
xor
dec
jb
xor
fimull
adcl
popf
cmp
mov
repnz
cmpsl
pop
sub
cmp
sub
push
cmp
call
add
outsb
icebp
sbb
mov
and
and
imul
or
scas
jmp
push
leave
push
cs
xor
mov
mov
cs
or
bound
mov
mov
push
call
bound
pop
push
jmp
push
or
add
push
add
fiaddl
sbb
or
pop
popf
mov
lcall
sbb
cld
out
dec
or
adc
pop
xchg
lea
and
push
jle
push
or
xor
xor
outsb
push
adc
scas
push
sub
sarb
jl
mov
sarb
int3
push
adc
mov
bound
imul
decb
movsl
sarl
les
ds
bound
sub
mov
movb
das
testb
sbb
inc
push
jl
clc
xor
or
push
fwait
cmp
push
jo
cmp
cmp
or
sub
push
test
rcll
insb
divb
cmp
jmp
cmp
mov
imul
inc
imul
adc
mov
das
mov
test
add
dec
and
xor
mov
or
mov
stos
ja
je
push
push
pop
push
pop
sbb
mull
push
daa
mov
mov
pop
lret
int3
icebp
fadd
and
and
mov
repz
push
decl
dec
push
mov
mov
sbb
mov
push
sarb
add
and
hlt
dec
and
cmp
adc
dec
push
or
dec
addr16
repnz
loopne
cmp
ret
fwait
call
stc
sti
sub
mov
lret
in
test
daa
add
repnz
icebp
daa
stos
dec
fcompl
push
sbb
xchg
sub
bound
dec
dec
decb
dec
xchg
notb
fldenv
fsubp
dec
pop
mov
sbb
enter
mov
or
cli
sbbb
adc
call
mov
aas
psubusb
outsl
divl
and
call
in
clc
jbe
and
xchg
pop
loopne
fst
repnz
js
mov
fsts
add
jbe
sub
in
sti
xor
add
pop
push
or
nop
pop
inc
cli
fistpll
ffree
pop
in
mov
sbb
jo
movsb
cmp
aas
pop
in
and
inc
pop
nop
jbe
push
bound
loop
jmp
and
mov
pop
jge
and
pop
aad
xchg
add
idivl
push
imul
dec
pop
jb
test
and
jo
sub
call
cli
pop
lcall
mov
add
push
adc
push
add
or
sub
mov
inc
pop
arpl
xchg
dec
xchg
ss
pop
ret
add
sbb
xchg
decl
sbb
cwtl
xor
bound
lret
xor
loopne
test
inc
pop
dec
add
enter
jno
out
jp
sub
mov
scas
mov
ds
pop
xchg
es
loop
pop
mov
dec
cmp
imul
push
and
xor
cwtl
lret
inc
cmpsb
adc
jb
jg
or
xor
adc
xlat
pop
repnz
js
insl
nop
xchg
push
sub
pusha
jg
mov
jno
dec
out
insl
jmp
xchg
in
dec
cmp
pop
rclb
xor
mov
or
lcall
repnz
push
mov
int3
adc
dec
mov
cmp
test
addr16
jno
icebp
inc
push
shll
mov
movsb
add
pushw
and
lahf
aad
insb
cmp
xor
repz
cmpsb
into
pusha
gs
loope
sub
int3
jbe
sub
mov
cs
icebp
inc
addr16
xchg
adcb
mov
xor
out
push
cmp
add
dec
loopne
sti
or
and
cmpsl
ret
scas
push
xor
and
pop
inc
repnz
cmp
mov
insb
pop
out
std
and
sbb
xchg
push
mov
sbb
pop
roll
sbb
cmp
lahf
pushf
inc
adc
pop
jp
ds
les
mov
jo
cld
dec
lock
xor
stos
aam
leave
mov
push
pop
xchg
pop
jl
pop
mov
mov
xorb
dec
xor
pop
jnp
mov
xchg
fildll
enter
nop
mov
daa
jo
add
dec
in
nop
nop
les
mov
add
cmp
lahf
cmp
ret
cmp
mov
mov
cmp
repnz
test
imul
jmp
fsubrs
je
jnp
or
adc
fwait
mov
testb
mov
hlt
mov
dec
mulb
std
scas
dec
push
push
into
add
or
mov
xchg
xchg
cmp
pop
inc
adc
xor
push
jl,pt
and
adc
fistl
sbb
dec
and
arpl
rorl
out
mov
push
push
loopne
ss
arpl
or
xchg
into
mov
ljmp
repnz
mov
pop
cmp
push
mov
sbbb
js
or
filds
insl
ss
or
or
mov
lcall
xor
cmp
mov
sub
or
xchg
push
push
sbb
mov
adc
push
cmp
mov
fisttpl
inc
ljmp
xchg
scas
mov
pop
sub
movsb
dec
or
jae
mov
pop
fidivl
and
adc
xchg
out
test
out
cmp
mov
and
add
inc
adc
xchg
fisttpl
lods
xchg
pusha
push
test
sbb
push
mov
pop
and
add
xchg
xor
inc
adc
sub
add
pop
and
or
outsb
push
dec
adc
push
and
push
push
ret
adc
jo
mov
cld
hlt
inc
loop
push
jns
xor
cmp
add
int3
mov
pop
add
subb
mov
add
xchg
movsb
push
xchg
pushf
icebp
shlb
push
in
or
xlat
jb
mov
pop
lods
and
jg,pn
sbb
cmp
mov
pop
insb
es
or
inc
dec
cmp
jle
mov
add
push
xor
mov
or
sbb
in
sub
dec
bound
ret
lock
testb
loopne
xchg
ds
pop
xchg
or
inc
fsubrl
adc
xchg
mov
repz
and
pop
cmp
pushf
sub
stos
xchg
sbb
xor
adc
mov
push
mov
sub
adc
inc
push
dec
dec
or
ret
mov
sahf
or
cmp
mov
sbb
push
cltd
adc
adc
outsb
push
dec
test
push
adc
or
hlt
push
xchg
in
inc
mov
adc
ds
push
inc
jecxz
or
jl
mov
rcll
and
or
loop
movsb
pushf
adc
cltd
adc
dec
lock
xchg
clc
mov
fistl
fisubl
pop
rorb
xchg
adc
xchg
push
dec
sbb
dec
and
mov
pop
cmp
ret
adc
outsb
ss
and
and
pop
or
inc
mov
fsubs
dec
inc
push
clc
and
pop
call
aam
ret
fcmovne
and
mov
mov
inc
cmpl
mov
pop
xchg
adc
pop
dec
mov
xchg
inc
xchg
and
lods
pop
sbbl
adc
cs
mov
out
mov
add
loop
lret
into
add
and
dec
sbb
push
and
inc
or
and
and
mov
inc
adc
ds
popa
pop
push
and
aad
enter
sub
mov
stos
repnz
andl
addb
mov
ds
lret
dec
inc
push
je
cmp
fs
sub
inc
adc
push
dec
sbb
pop
pop
ret
push
or
inc
dec
or
cmp
jb
xor
push
sbb
ret
push
adc
inc
pop
add
mov
or
clc
in
mov
repnz
add
xchg
aam
ret
lcall
or
and
stos
adc
inc
inc
or
cwtl
xchg
ficoms
inc
cmp
je
bound
add
shrb
fs
xor
push
fildl
mov
dec
dec
and
or
push
cmp
jb
xor
aam
lcall
mov
subb
and
inc
insb
enter
outsb
data16
and
inc
pop
in
and
dec
xchg
inc
mov
cmc
or
mov
xor
aad
ret
sbb
shrl
xchg
mov
push
xor
mov
test
fstpt
popf
xchg
sarl
or
ret
or
xor
jne
mov
mov
movsb
mov
xchg
in
stos
inc
in
cmp
mov
and
add
inc
adc
xchg
jbe
cmp
outsb
and
mov
sub
push
ret
dec
adc
push
dec
inc
fistpl
push
and
and
or
xchg
fs
sub
and
push
add
push
adc
xchg
test
adc
outsb
call
and
nop
or
xchg
cwtl
push
into
inc
cmpb
mov
pop
lods
and
add
adc
xchg
lcall
mov
jbe
pusha
adc
push
and
adc
push
xchg
sbb
inc
add
inc
cmp
and
xor
and
add
and
inc
adc
dec
pop
adc
inc
mov
decb
mov
adc
and
or
xchg
movsb
push
ljmp
rorb
add
xchg
mov
lock
mov
clc
ds
and
mov
xchg
ret
mov
mov
dec
sbb
and
cmp
jb
and
push
sub
bound
inc
mov
dec
and
add
ds
xchg
ss
js
and
sbb
push
adc
or
add
xor
push
decb
or
push
loopne
and
ljmp
rorb
enter
rol
and
or
add
push
xchg
pop
dec
sbb
orl
push
sub
mov
shll
push
sub
bound
sbb
push
or
stc
xor
inc
cmp
or
outsb
sub
sub
xor
mov
cmp
and
or
xchg
pop
push
adc
or
dec
sbb
and
ljmp
rorb
enter
cmp
mov
adc
xchg
in
stos
inc
in
cmp
mov
and
add
inc
adc
xchg
jbe
cmp
outsb
and
mov
sub
push
ret
dec
adc
icebp
dec
dec
adc
ds
xor
arpl
and
jl
xor
ret
xor
push
outsb
cmp
fildl
and
inc
or
imulb
inc
adc
ds
test
nop
pop
lret
adc
outsb
fmull
and
or
inc
aam
lcall
nop
and
add
inc
adc
xchg
outsb
dec
and
data16
mov
adc
dec
ret
push
adc
pop
dec
cmp
and
mov
sub
and
or
xchg
insb
push
and
sbb
pop
or
incb
sbb
out
mov
lock
outsb
clc
dec
fcmovnb
and
orb
xchg
mov
inc
lock
mov
add
adc
xchg
mov
andb
mov
cmp
jb
ret
jo
pop
outsb
js
push
fildl
mov
dec
dec
and
or
or
inc
jo
sub
mov
pop
cmp
sbb
add
adc
inc
adc
inc
dec
ds
mov
or
fucomi
and
lods
or
xchg
xchg
push
fisubl
pushf
cmp
sbb
push
xchg
adc
jg
mov
xchg
mov
cmc
inc
mov
decl
rolb
iret
xchg
leave
push
xchg
rorl
mov
movsl
out
test
inc
aas
xor
fwait
add
fnstsw
jge
or
es
add
jge
pop
xchg
mov
aam
ror
subl
in
sub
sub
les
inc
cld
mov
adc
and
mov
and
dec
sub
or
leave
cmpsl
nop
in
in
inc
pop
sbb
rol
push
lock
pop
in
mov
jb
rcrl
call
dec
outsb
push
xchg
mov
and
imul
adc
xor
add
jl
test
sub
and
imul
add
mov
pusha
inc
push
or
add
push
shlb
cmc
test
imul
es
xor
dec
insb
or
cmp
add
add
adc
inc
jnp
adc
or
call
mov
sahf
cmp
push
addr16
adc
mov
xchg
stc
ret
in
sbb
inc
pushf
test
mov
and
hlt
push
mov
adc
fcomi
sbb
adc
sbb
sub
insl
jl
stos
adcb
das
and
add
loop
adc
add
dec
aaa
or
sbb
push
jnp
or
data16
aaa
and
cmp
and
fbstp
je
xchg
das
std
xor
push
imul
cmpsl
mov
inc
call
lret
inc
sub
pop
aad
cs
and
and
ljmp
aaa
test
mov
jl
std
adc
jnp
and
or
jmp
movsb
scas
adc
xor
inc
stos
mov
outsl
or
out
push
and
xor
dec
cmp
mov
jge
pop
insb
xor
jge
add
inc
inc
inc
ret
or
cmp
dec
fs
and
pop
dec
std
push
sbb
lock
lds
mov
jb
mov
mov
sbb
int
sub
mov
cmpb
mov
mov
imul
mov
xor
push
cmp
pushf
and
insb
pop
push
and
rclb
jb
cmpsb
pop
inc
mov
push
dec
sub
mov
call
les
xchg
push
or
push
xchg
test
mov
mov
adc
mov
xor
scas
out
int
sbb
and
xchg
sbb
ficoms
mov
fistpl
and
fistpl
and
ret
fs
enter
dec
incb
adc
jle
int3
mov
push
xchg
je
jecxz
outsl
inc
ja
nop
fisubl
das
inc
insb
mov
push
pusha
enter
mov
mov
stc
loope
xchg
adc
mov
aad
jb
inc
cmp
jecxz
fwait
aad
mov
mov
ds
or
inc
mov
mov
nop
jl
push
push
or
aaa
xchg
inc
sahf
jnp
ja
dec
insl
fs
lea
hlt
adc
adc
adc
inc
push
mov
loope
popf
or
xchg
loope
lds
push
mov
mov
jmp
pop
les
sti
ljmp
adc
aaa
mov
push
add
adc
add
int3
divb
in
inc
ss
popl
mov
xor
negl
jg
adc
divl
sub
adcb
icebp
pop
loopne
mov
out
enter
test
cs
enter
cmp
out
adc
dec
push
cli
pop
test
mov
enter
pop
imull
add
sbb
movsl
and
dec
pop
or
mov
jmp
ret
inc
cmc
es
ret
inc
fwait
sti
mov
jo
mov
hlt
add
out
outsb
adc
in
lret
push
icebp
in
or
in
push
sub
add
test
sub
lcall
pop
inc
xchg
ds
pop
jo
movsl
sbb
icebp
js
cs
loopne
sub
loope
es
out
and
lea
ds
js
out
outsb
je
enter
or
dec
mov
push
jne
pop
enter
daa
pop
imul
ret
insb
inc
adc
mov
xor
inc
leave
stc
cmc
and
ds
out
ficoml
or
cmc
mov
and
call
mov
cmp
ljmp
adcb
adc
js
add
in
and
bound
cmp
data16
shlb
mov
xchg
push
dec
xor
adc
sbb
sbb
xchg
jnp
arpl
testl
into
sub
dec
adc
test
xchg
cmp
and
pop
hlt
or
dec
test
inc
xor
adcb
adc
loop
je
loopne
inc
jp
dec
lods
jl
nop
or
inc
mov
xor
jne
not
mov
out
adc
inc
movsl
add
and
in
icebp
xchg
stos
add
fsubrp
and
ss
mov
insl
notl
sub
and
popf
and
lock
sbb
inc
inc
sarl
push
adc
xchg
xchg
outsl
test
mov
js
or
adc
dec
xchg
pop
imul
dec
cs
inc
xchg
and
jo
xor
and
fstps
and
push
and
out
push
xchg
dec
push
sub
jbe
cmp
jle
push
inc
jbe
push
cmp
xor
add
adc
pushf
add
test
pop
pop
sub
pusha
or
testb
fidivl
lock
pop
outsb
xchg
cmp
and
les
bound
xchg
dec
fisubs
push
and
adc
outsb
lock
adc
or
bound
inc
sbbb
mov
add
cmp
pop
sub
outsb
mov
ljmp
push
xor
cmp
js
jb
add
orl
mov
lock
mov
or
punpckldq
data16
jl
icebp
adc
mov
outsb
mov
fcomp
aam
mov
cld
repnz
push
mov
inc
movsb
and
mov
or
dec
or
push
add
push
xchg
nop
dec
out
ds
mov
clc
mov
jge
fs
insb
adc
xor
adc
and
call
sub
pop
adc
ret
push
adc
dec
sahf
fistl
ret
or
imul
pop
inc
cmp
loope
inc
xor
hlt
pop
or
dec
sub
out
xchg
mov
test
dec
js
and
or
push
and
mov
imul
outsb
stos
dec
mov
xchg
adc
xchg
mov
sbb
inc
add
or
add
bound
ds
hlt
mov
push
ret
je
push
push
or
ds
adc
in
inc
mov
mov
and
add
cmp
push
inc
adc
adc
mov
cltd
inc
inc
into
and
sub
pusha
fs
test
rcrb
flds
jmp
add
dec
nop
je
push
add
inc
in
dec
cmpsb
adc
and
mov
push
inc
pop
push
push
ret
adc
sub
dec
mov
pop
enter
xchg
insl
ficoms
push
ret
jo
sub
es
or
add
inc
push
insb
lret
mov
add
push
outsb
cmp
lock
sbb
and
and
ret
mov
push
fildl
or
shlb
cld
xchg
pop
in
add
or
loopne
jne
mov
push
xchg
outsb
dec
sub
push
and
mov
bound
add
or
xchg
clc
push
les
xchg
lret
mov
jl
es
inc
inc
and
add
xchg
adc
cmp
adc
fsubrs
inc
adc
ds
pop
pop
es
and
mov
add
enter
mov
push
xchg
js
xor
es
push
in
jp
xor
loopne
jb
mov
js
or
outsb
hlt
inc
cmp
push
inc
sbb
or
and
stos
or
mov
aam
jle
mov
enter
push
lret
or
or
xchg
jns
fs
jmp
add
or
sysenter
add
pop
repz
cmc
out
adc
sub
or
pop
adc
shrb
pop
inc
int3
enter
jae
and
inc
pop
cmp
add
mov
fs
jns
cmp
test
xchg
ret
cmpsb
adc
or
adc
push
xchg
xchg
add
imul
dec
push
outsl
inc
pop
scas
mov
jle
inc
sbb
sbb
stos
insb
imul
sub
les
sbb
scas
push
or
testb
pop
arpl
jo
add
cmc
mov
aas
push
push
cli
rcrl
push
mov
pop
push
dec
xor
je
sub
jb
ss
iret
jae
jmp
dec
repnz
outsl
insb
mov
dec
inc
popa
mov
dec
inc
daa
sahf
push
inc
outsb
sbb
aam
cmp
mov
cmp
or
ss
pop
test
outsl
outsl
adc
jo
inc
xchg
jae
cs
scas
sub
scas
test
movb
push
ds
push
imul
mov
pop
and
lds
mov
cmp
push
cmp
adc
mov
add
loop
add
stos
cmpl
xor
mov
stos
lock
jb
cmp
pop
mov
mov
cmp
repnz
push
sbb
repnz
jno
jae
mov
mov
rcll
std
repnz
and
jl
xchg
add
fcomps
rcl
ja
addl
jo
mov
mov
push
adc
jle
jne
imul
idivl
push
adc
add
and
add
insb
xor
out
jo
jne
outsb
lret
fimull
jae
lods
dec
push
js
push
fdivrs
push
adc
inc
cmp
lret
cmp
and
sub
movsb
jne
mov
orl
cs
or
lods
jle
push
lds
or
or
and
add
mov
xor
inc
push
ds
mov
pusha
test
sbb
dec
pop
or
push
leave
jbe
inc
sub
mov
push
ror
jmp
mull
lea
dec
xchg
daa
jmp
adc
test
outsl
dec
sbb
push
arpl
push
and
fsts
push
xchg
fsubs
xorl
popa
mov
imul
or
pop
cltd
aaa
push
test
add
shlb
jmp
sbb
mov
jae
bound
rorb
rcrw
push
jne
cmp
inc
inc
sbbl
jl
mov
dec
jmp
pop
add
cwtl
ret
xchg
and
add
outsl
imul
add
pushaw
xor
or
sahf
push
outsl
loop
shr
add
shrl
int3
lcall
xor
push
ficoml
fmuls
subb
jmp
repnz
push
xor
into
adc
sbb
movl
scas
movsl
dec
xor
andl
and
xor
scas
into
and
pop
outsl
int
jecxz
xchg
inc
add
mov
stc
ficomps
push
push
bound
rolb
fisubrs
popaw
cli
int3
popa
pop
loopne
add
xor
mov
fisttpl
adc
mov
sbb
ljmpw
push
dec
push
push
stos
addr16
adc
xor
inc
push
je
add
jp,pt
pop
xor
adc
cld
dec
inc
add
add
inc
insb
lea
cmp
cmp
aas
divl
add
dec
arpl
shrl
pop
mov
dec
sbb
shr
idivb
mov
jbe
or
test
out
aas
rcrl
sbb
decl
cmp
mov
pop
mov
push
je
and
leave
dec
pop
insl
push
cs
std
add
pop
cmp
mov
inc
mov
daa
lea
xor
sahf
push
fisubs
andl
lahf
hlt
sub
sub
jnp
pop
clc
clc
fldcw
cwtl
sub
and
ret
enter
movsb
es
pop
lcall
cmp
xchg
adc
outsb
mov
cmpsb
mov
fucomip
xor
leave
xchg
and
lds
inc
cmpsl
cmp
push
push
mov
call
mov
dec
scas
push
mov
mov
rolb
xchg
rorb
dec
adc
cmp
in
inc
push
flds
xchg
jmp
lods
jl
jp
out
dec
dec
outsb
push
stos
outsb
lods
fs
xor
fs
or
jo
cmpl
mov
push
lret
pop
mulb
add
bound
mov
insb
xchg
mov
and
xchg
sub
push
movsb
or
pop
cltd
nop
dec
dec
dec
cmp
pushf
and
dec
lods
add
push
adc
lret
test
mov
xorb
dec
subl
push
pop
cmp
inc
pop
pop
mov
dec
fimuls
cmp
mov
lret
add
cltd
aas
pop
icebp
mov
sub
dec
jno
scas
repz
xorl
cli
js
push
lret
fbstp
jp
sub
push
imul
or
js
outsl
cmp
mov
xor
ficoml
leave
add
add
dec
or
pop
pop
clc
xor
dec
dec
rorb
xchg
cs
imul
inc
outsb
mov
xchg
pusha
sbb
xchg
mov
cmpb
cs
mov
jl
fldenv
xor
push
push
pop
mov
addr16
and
sbb
fcompl
xor
repnz
inc
xchg
js
movsb
and
mov
inc
xchg
arpl
jne
mov
mov
sbb
xor
push
lret
cmp
and
and
pop
int
cmp
bound
sbb
and
test
outsl
mov
jge
mov
inc
sbb
in
mov
sbb
test
jnp
in
mov
inc
jns
aas
or
aas
adc
jae
dec
loopne
mov
sbb
add
sbb
pushf
je
das
mov
sti
push
mov
rcrb
adc
call
adcb
dec
dec
cs
pop
enter
fsub
dec
gs
scas
gs
dec
push
shrb
fs
mov
cld
mov
xchg
and
push
roll
push
jnp
out
iret
sbb
leave
ficoms
and
add
lret
jb
in
push
pop
clc
push
fidivl
inc
and
pop
push
xchg
loop
rcrl
ss
mov
scas
push
push
sub
push
ds
and
sbb
and
xorl
inc
into
sbb
sub
popf
cmp
frstor
xor
int
pop
xchg
push
pop
sub
dec
inc
dec
in
dec
push
add
mov
cmp
add
shlb
push
jae
sub
sbb
xchg
add
scas
iret
sahf
leave
push
cmp
push
repz
jno
mov
xchg
mov
shrb
loopne
fsts
inc
dec
push
and
mov
and
inc
dec
nop
xchg
and
ss
sub
inc
and
pavgb
or
jle
xchg
adc
int
add
dec
adc
sub
cltd
cs
or
cmp
mov
jns
imul
insb
lcall
pop
jb
inc
fimull
cmp
dec
aam
push
sub
insb
cld
xor
jno
and
push
jo
sbb
inc
add
bnd
filds
pop
jnp
jmp
jnp
xchg
mov
ss
movsb
cmp
push
or
xchg
push
sbb
jbe
push
push
aas
push
clc
mov
ja
imul
subb
jnp
int
adc
add
push
imul
sbb
mov
lods
lods
inc
mov
outsl
jb
ds
stos
movsb
and
int3
adc
push
mov
mov
inc
or
pop
incl
xor
test
jb
and
dec
dec
lods
test
sub
or
ret
adc
cmp
popl
jo
rcll
mov
or
xor
xorl
add
shlb
push
out
outsl
jo
das
mov
mov
mov
jp
mov
js
xchg
pushf
int3
fmuls
test
dec
imulb
nop
push
lods
dec
inc
push
ds
mov
push
sub
enter
push
cltd
subl
fs
xor
test
imul
jecxz
sub
cmpb
pop
jge
and
adc
out
lret
push
adc
xchg
test
push
xchg
daa
popf
xchg
dec
cli
pop
dec
sub
scas
inc
insb
jbe
mov
or
xchg
mov
pop
dec
adc
push
inc
ds
ret
push
push
insb
dec
pushf
pop
push
or
ret
sbb
dec
dec
pop
or
rorb
push
mov
xor
sbb
arpl
xor
mov
arpl
or
pop
inc
cmp
in
dec
mov
xchg
dec
push
outsb
xor
push
cltd
out
and
push
ja
shrl
fwait
mov
or
ja
divl
pop
outsb
jl
pop
in
mov
fdivr
lods
dec
adc
sub
pop
into
mov
sub
ds
xchg
pop
roll
or
push
mov
cs
inc
in
lods
insb
pop
and
xchg
cmpsl
xor
xor
add
mov
push
add
iret
out
cmp
lods
pop
inc
movsl
movsb
push
cli
push
insl
mov
inc
xchg
out
push
or
cmp
jbe
andb
push
sahf
test
mov
daa
inc
bound
dec
repnz
inc
outsb
push
add
jge
dec
addr16
inc
push
mov
sub
jnp
sahf
imul
xor
or
inc
mov
arpl
subb
enter
or
sbb
fmull
dec
dec
dec
push
push
insl
push
pop
or
clc
adc
adc
insl
or
inc
js
sub
fs
sbb
sub
dec
call
movsb
mov
mov
push
mov
push
lods
fisubrl
insl
out
sti
pop
adc
sub
and
push
out
xchg
jecxz
cwtl
out
cmp
cmp
xor
xchg
jbe
fmuls
push
and
inc
aaa
jo
sub
leave
ljmp
imul
push
xor
jecxz
sbb
jb
test
xor
nop
cmc
sbb
sbb
fisttpl
mov
mov
aam
mov
movsb
fidivs
bound
mov
dec
jl
jg
cltd
testb
push
and
pop
sarl
pop
pop
enter
dec
inc
test
ja
dec
or
or
cmpsb
mov
insb
loope
and
fs
adc
out
xchg
pop
sub
clc
jl
push
outsl
dec
adc
roll
mov
xchg
cmp
sub
outsl
push
push
ds
sub
cwtl
repnz
inc
call
sbb
pop
push
cmp
push
je
cmp
inc
popf
lret
setp
cmp
sub
or
sub
xchg
mov
mov
jp
cmp
push
jbe
sbb
pushf
clc
pop
mov
mov
scas
push
xchg
jge
inc
lahf
pop
pop
push
out
cld
mov
xchg
dec
sub
push
repz
sbb
mov
pop
mov
subb
inc
es
in
jno
inc
repnz
jb
adc
shr
mov
leave
sarl
sahf
lds
lcall
std
js
pop
mov
mov
or
pop
pop
out
lods
cmp
pop
xchg
out
insb
daa
dec
loop
lahf
stos
mov
je
jae
data16
repnz
pop
push
loopne
jb
fisttpll
rolb
fstps
add
cmovle
inc
add
orl
in
push
or
mov
in
bound
pop
adc
and
std
lods
mov
insb
push
xlat
cmp
mov
les
xchg
push
cltd
loope
jp
dec
in
add
add
inc
int
push
dec
sbb
dec
mov
xchg
xor
inc
or
dec
jl,pn
cld
sub
aad
push
inc
bound
out
cs
jle
cmovnp
mov
push
lret
or
mov
lret
sbb
adc
out
aaa
call
ret
outsl
cli
rol
push
lret
add
jp
fldl2t
adc
dec
in
lods
mov
jp,pn
add
loopne
cltd
es
mov
ret
sub
add
sbb
pop
push
add
stos
pop
subb
adc
stos
es
adc
nop
or
adc
decb
ret
adc
pop
inc
xorb
cmp
dec
or
add
push
cmp
xor
jmp
cli
xor
fbld
push
outsl
repz
adc
out
enter
push
mov
mov
xor
repz
clc
dec
or
mov
dec
push
xor
push
push
out
mov
add
popa
lcall
popa
lock
orb
shlb
or
push
mov
inc
lods
arpl
dec
fldt
out
jmp
or
aas
or
mov
fsubrp
orl
or
xchg
add
int3
xor
sub
into
mov
pop
xlat
data16
std
or
adc
test
sbb
mov
xor
adc
cmp
div
cltd
jmp
sbb
das
lods
pop
movsb
fdivp
test
mov
add
adc
or
push
or
sbb
jmp
fcmovb
mov
fdivr
add
push
pop
rorl
xchg
pusha
jb
rcl
lcall
mov
push
pop
push
xchg
orb
imul
mov
sbb
push
cld
inc
imul
pop
sbb
fldl
in
mov
ret
mov
sub
sbb
jp
inc
mov
and
test
ret
sub
stc
sbb
and
std
push
lods
out
dec
xchg
adcl
sbb
or
scas
mov
pop
push
jnp
daa
xchg
ret
or
jmp
cmc
sahf
xchg
ja
in
jge
or
mov
lods
adc
add
pop
lea
jne
pop
push
cmp
stos
neg
pop
lods
push
cmp
sbb
imul
flds
inc
loope
imul
sub
push
sti
js
mov
lods
cmp
cmc
shlb
cmp
mov
call
mov
pop
pop
scas
add
ds
call
sbb
jno
inc
xchg
pop
pusha
bnd
orl
or
and
add
and
sub
cmp
sbb
mov
cmpsl
push
mov
inc
rol
nop
rcl
mov
jo
cmp
data16
cld
pop
add
rcl
fwait
sub
push
enter
fsubrs
push
sub
fwait
sbb
pop
pop
push
sbb
xchg
dec
cmpsb
pop
mov
cmpsb
xchg
test
sub
mov
xchg
xor
and
movsl
hlt
xor
hlt
mov
dec
stos
js
dec
mov
pop
sbb
outsl
and
sbb
mov
and
sti
add
lock
adc
push
push
jle
xchg
push
mov
imul
and
dec
cwtl
adc
test
sbb
sbb
adc
ss
inc
push
orl
mov
xor
pop
sarb
cli
pop
lcall
insb
daa
imul
inc
gs
xchg
bound
and
jp
sbb
movsb
mov
fisttpll
lods
adc
add
add
lock
shll
sub
pop
cmp
sti
cmpsl
mov
xor
push
dec
iret
cli
add
add
or
in
jbe
shrl
call
frstor
bound
pop
sbb
inc
sbb
cmp
ja
or
test
adc
clc
adc
sbb
jle
dec
adc
xor
jo
cmp
pop
setge
jbe
aad
call
packuswb
gs
pop
ret
mov
jle
xchg
fwait
cmpsb
mov
int3
shlb
addr16
sti
rolb
jp
jns
sbb
and
fdivrl
sbb
jae
push
dec
xor
ja
lret
xor
sbb
dec
pop
out
je
test
leave
pop
push
sub
xchg
cs
stc
cmpsb
and
inc
xchg
enter
add
rcrl
roll
in
sbb
gs
inc
or
dec
outsb
ja
xlat
ret
in
jge
adc
push
fcomp
fwait
and
cmp
mov
test
loope
es
out
adc
shrb
push
cmp
scas
rol
fiaddl
pushf
dec
mov
mov
push
out
aad
icebp
dec
sbb
stc
or
imul
adc
mov
xchg
je
lcall
mov
fiadds
dec
sbbb
mov
leave
sbb
fstpt
xor
dec
in
add
cld
es
push
add
xchg
fwait
add
dec
push
jno
lea
int
sbb
rcrb
and
xchg
xchg
and
ucomiss
nop
dec
push
cmp
ret
jmp
sub
cmp
pop
add
inc
aaa
push
rol
dec
push
in
lcall
adc
ret
push
xchg
push
xchg
sbb
pop
adc
pop
dec
add
add
pop
sub
mov
sub
cli
dec
push
adc
xchg
sbb
mov
dec
push
jo
ret
js
pusha
add
jecxz
ret
adc
or
cmp
inc
mov
mov
imul
push
ljmp
jbe
loopne
mov
push
adc
jecxz
jmp
bound
xchg
pop
arpl
lods
inc
dec
mov
decb
jmp
push
movsl
push
in
xor
icebp
push
int
add
jecxz
adc
jns
jmp
mov
add
std
test
mov
loop
dec
sti
adc
fwait
ret
std
or
inc
roll
insl
xchg
cmp
mov
sbb
faddl
add
out
mov
sarb
cmp
ret
out
push
and
jo
dec
inc
out
aas
ljmp
mov
push
sti
or
sbb
jbe
adc
cltd
repnz
mov
xchg
cld
mov
mov
rorl
push
test
mov
loope
mov
adc
test
jp
cmp
xor
imul
or
out
call
and
dec
or
mov
andb
psubd
ljmp
fidivrl
mov
mov
sub
push
aad
fsubs
test
inc
push
ja
mov
hlt
and
lock
pop
adcl
hlt
aas
push
nop
jmp
sar
mov
adc
adc
dec
add
add
mov
sub
mov
outsb
cmpsb
imul
insl
cmpb
dec
call
adc
cwtl
mov
test
cwtl
ss
or
mov
or
push
clc
ret
jecxz
jno
add
call
sub
cmp
loope
ds
adc
xchg
mov
mov
adc
jb
cmp
cmp
xchg
fistl
call
jo
or
sub
fcoms
shlb
sets
sbb
enter
leave
lret
sbb
in
mov
das
lods
sub
mov
xchg
aam
push
adc
arpl
mov
mov
or
cmp
and
pop
inc
ljmp
fsubrs
xor
clc
or
mov
test
jmp
xchg
clc
inc
cmp
mov
in
push
cmp
jae
jb
or
add
outsl
stc
and
or
cmp
lods
xor
or
clc
stos
outsl
dec
insb
rol
mov
sbb
xchg
in
mov
ret
and
push
mov
inc
mov
lahf
and
dec
cltd
imul
sbb
mov
leave
mov
or
add
mov
movb
dec
outsl
inc
jnp
cmp
test
outsb
sbb
adc
add
addb
out
inc
fnstcw
inc
cli
dec
jp
leave
mov
sbb
xchg
dec
jno
cmp
stc
mov
fiadds
punpckhbw
xchg
ja
lret
adc
and
dec
sbb
pop
popa
lret
shl
into
push
out
ss
lahf
mov
cs
cmpsl
icebp
inc
sbb
and
ret
cmp
xchg
push
add
mov
scas
adc
cmpsl
cmp
leave
dec
xor
pop
aas
out
lods
jmp
pop
filds
sub
cmp
dec
ds
add
sub
pop
fs
mov
popf
pop
mov
sbb
or
adc
xor
xchg
pop
movsb
ljmp
and
jae
loope
rorb
sbb
sub
rcrl
pushf
adc
sbb
sub
outsl
pop
call
jnp
pop
or
mov
mov
pop
movsb
lret
mov
xchg
sbb
es
sti
fcmovnu
pop
or
ret
movsl
nop
add
or
sbb
popa
lcall
jae
push
dec
lods
je
push
pop
push
mov
lret
add
outsb
rcrl
mov
sbb
fcmovne
int
fidivs
dec
jle
in
push
or
or
int3
jmp
insl
xor
mov
push
insb
adc
testb
outsl
call
sub
ds
dec
jp
xchg
movb
jmp
add
clc
cld
xor
xor
push
or
and
inc
xor
push
push
sbb
std
ds
std
je
icebp
mov
push
jle
xchg
out
push
sbb
and
or
mov
icebp
jl
pop
push
fs
add
push
xchg
sub
rcl
dec
jae
dec
adc
jo
call
push
cli
cltd
lods
repz
arpl
jg
adc
push
in
xchg
mov
xor
cmp
mov
cmc
ret
fwait
xorb
inc
push
insb
test
xlat
inc
add
xchg
gs
dec
inc
cli
xor
adc
lea
fiadds
or
mov
addr16
ret
pop
out
xorl
fs
inc
in
incb
pcmpeqw
inc
sbb
sbb
in
push
and
ss
cld
inc
adc
mov
dec
addr16
fs
iret
pop
xor
mov
pusha
push
and
cmp
clc
sti
ss
push
cmp
stos
push
popf
or
rcrl
or
dec
and
sbb
ds
int3
mov
movsb
enter
cmp
dec
outsb
mov
xchg
or
ret
jg
xor
push
push
or
outsb
pop
adc
out
and
jp
mov
mov
mov
xor
add
push
adc
stos
aaa
push
mov
ljmp
in
add
das
jbe
inc
adc
xchg
or
sbb
cmc
inc
std
adc
popa
clc
inc
loopne
sahf
push
repz
sbb
xor
jb
ret
sub
dec
add
jns
call
lock
aaa
arpl
loop
pop
xor
lods
mov
add
jne
and
mov
add
and
movsl
faddl
sub
inc
jnp
mov
call
rorl
push
mov
inc
in
nop
or
dec
pop
sbb
sbb
cmp
stc
daa
mov
in
sarl
mov
jno
cmp
rcll
inc
mov
add
mov
and
pop
jo
icebp
mov
jmp
xor
mov
mov
divb
mov
add
inc
lea
push
pop
cwtl
dec
mov
inc
adc
or
pop
lock
mov
push
jns
lahf
pushf
lock
or
or
pop
xor
loop
dec
add
ds
dec
push
fsubp
jmp
addb
pop
xchg
push
inc
pop
jno
jae
jb
sbb
ljmp
add
add
sub
aam
xchg
popf
je
decb
iret
repz
sbb
imul
pop
mov
xlat
movsb
mov
or
sub
pop
jmp
xor
or
cld
and
cwtl
add
cmp
call
pop
add
add
hlt
int
xlat
bound
xor
cmc
int
or
loope
pop
in
and
notl
mov
fisttpll
mov
add
pop
inc
lock
jge
out
pushf
jecxz
xor
or
int3
ljmp
or
cwtl
jle
es
push
cld
cmp
jmp
add
inc
insb
pushw
out
inc
sbb
push
add
or
and
enter
pop
and
pop
loop
pop
cld
xchg
sbb
in
xor
adc
inc
ja
scas
adc
inc
inc
fnstcw
dec
or
dec
adc
and
repz
pop
pop
jmp
or
pop
inc
add
jmp
enter
loopne
cmp
in
fwait
rolb
negb
inc
pop
test
ret
mov
dec
cmp
jbe
dec
js
daa
fisttpll
scas
jle
add
push
jg
push
mov
push
in
jae
adcb
imul
roll
push
cltd
out
push
cmpsl
mov
mov
push
cli
push
push
andl
or
dec
xor
inc
pop
fstl
add
iret
in
jp
mov
mov
rep
lea
clc
popa
add
sub
aam
fwait
stc
xchg
shll
sub
pop
or
jmp
out
xchg
jae
mov
adc
dec
pop
dec
jg
mov
test
addb
push
adc
dec
adc
decl
mov
adc
ds
dec
mov
jo
pop
mov
inc
xchg
std
dec
dec
out
mov
xor
mov
add
dec
fnstsw
dec
dec
jbe
loop
jg
rorb
loop,pn
cmp
and
sbb
add
inc
psllw
mov
add
pop
push
outsl
dec
dec
xor
aam
shrb
xor
pop
xor
xor
sbb
inc
out
call
shlb
aad
mov
add
insb
scas
mov
xor
loope
sub
inc
mov
call
mov
inc
pop
xor
repnz
pop
xorb
inc
sahf
dec
inc
test
not
lcall
sub
cmp
cmc
xor
jne
test
or
js
test
adc
cmpl
add
imul
jne
or
movsb
or
sahf
rcrb
inc
mov
jno
ja
pusha
add
and
hlt
xor
and
pop
or
xchg
lret
clc
call
xchg
push
xchg
jb
and
xchg
in
dec
insb
xchg
cltd
movsb
dec
adc
sbb
push
nop
bound
inc
dec
pop
push
jb
mov
xchg
mov
inc
or
push
mov
push
push
pop
cmp
fisttpl
imul
adc
cmp
inc
outsl
mov
mov
sti
mov
sqrtps
fidivs
push
daa
and
inc
insb
cmp
sbb
int3
push
dec
dec
push
push
ret
subl
rolb
push
out
call
xchg
sbb
dec
sub
mov
cmpsb
stos
adc
inc
and
jmp
xchg
pop
loope
in
pop
mov
aaa
or
xlat
out
cmp
mov
aaa
sub
pop
pusha
sbb
add
jno
mov
dec
js
ret
xchg
ja
dec
pop
rclb
add
aad
mov
dec
mov
leave
jb
xchg
and
sbb
or
rorl
xor
pop
sbb
dec
cli
mov
push
jl
stos
inc
inc
push
fsubr
int3
in
mov
lahf
add
test
add
sub
shrl
outsl
in
mov
add
mov
push
cli
leave
mov
add
or
mov
ds
lret
test
sbb
cwtl
xchg
or
dec
aas
pop
mov
rorb
pop
jp
push
sub
pop
and
and
cmc
add
aad
fwait
cmp
dec
dec
mov
push
or
add
mov
inc
ret
jb
or
lea
in
fs
sbb
inc
enter
mov
cmp
lods
add
mov
adc
dec
xchg
xor
or
adc
add
jle
iret
inc
inc
mov
push
stos
pop
push
or
xor
jne
cmp
pop
sbb
xchg
arpl
aas
dec
add
cltd
cltd
dec
inc
lret
mov
inc
push
jnp
push
or
addl
out
bound
pushf
jg
out
add
push
jo
cld
xlat
mov
adc
push
jne
pop
cld
inc
repnz
clc
xor
out
pop
pop
mov
pop
and
scas
js
xchg
or
or
or
cltd
call
add
bound
inc
movsl
es
inc
mov
jecxz
jbe
lcall
inc
movsb
adc
or
sbb
sbb
lret
stc
std
bound
or
mov
mov
push
push
lea
cs
aad
inc
jmp
or
or
mov
in
fwait
mov
adc
je
pop
in
inc
or
sub
test
xor
adc
call
or
push
sbb
push
or
dec
add
sti
fdivrp
or
and
insb
xor
sbb
stos
and
adc
push
mov
test
call
pop
or
dec
cmc
rclb
inc
pop
pop
js
dec
jge
inc
pop
and
dec
xchg
cmc
dec
stos
pop
xor
pop
out
imul
clc
filds
pop
push
sbb
shlb
push
pop
aaa
xchg
pop
scas
sub
or
mov
and
cmp
shlb
push
outsb
mov
adc
mov
and
mov
out
xchg
or
rclb
notl
out
ja
rcrl
enter
pop
cltd
fisttps
add
or
and
mov
ljmp
jle
enter
lret
push
jb
xor
jno
lcall
data16
push
mov
sahf
xor
ss
sub
aad
fidivs
sbb
cwtl
add
imull
sub
add
fiaddl
and
lods
xchg
je
pop
jge
hlt
mov
inc
repnz
in
rcl
adc
shl
cld
iret
inc
cld
sub
xchg
scas
out
xchg
iret
lret
into
add
pop
aaa
xchg
push
jo
sub
jnp
xlat
imul
or
pop
daa
shlb
add
call
cmpsl
push
imul
xchg
mov
rclb
fs
cltd
push
repnz
notb
adc
pop
push
sub
pop
rcl
adc
dec
add
pop
sbb
jge
xchg
lea
mov
mov
fs
into
aaa
xor
cltd
es
jo
jmp
movsl
sbb
aaa
cwtl
xchg
mov
push
add
sub
insb
orl
cmp
pop
rol
seto
lods
mov
loop
mov
jl
push
cli
mov
decb
or
movsb
pop
or
sbb
fisttps
pop
mov
movsb
mov
or
dec
xchg
add
or
cmp
cld
inc
ja
add
rcrl
push
cmp
inc
mov
dec
mov
loop
das
and
hlt
data16
push
outsb
clc
jb
aad
push
pop
cmp
mov
dec
push
adc
lret
mov
hlt
rcl
cmp
imul
filds
mov
scas
adc
mov
sbb
subb
or
loop
cld
dec
add
int
pop
ret
pop
dec
ds
cld
xor
mov
lock
lds
cmpsl
sub
mov
fisubrl
sbb
sub
inc
loop
sub
cmp
push
in
cmp
xchg
push
dec
adc
out
orl
xchg
or
fidivrl
lds
outsb
add
idivb
data16
sbb
push
lcall
out
and
inc
pop
cwtl
movsl
lock
push
js
mov
xor
xrelease
pop
repz
push
dec
es
lret
add
dec
or
pop
push
sub
and
andl
sbb
cmp
dec
or
addr16
int3
rclb
push
adc
or
push
nop
js
or
bound
mov
icebp
mov
shrl
or
mov
jb
push
je,pn
cvtpi2ps
ret
push
aas
inc
pop
test
mov
cmc
mov
jne
jge,pt
push
in
imul
add
ja
dec
push
jg
adc
xor
inc
in
pop
or
movl
push
jne
adc
mov
popa
push
fwait
lahf
lods
fildl
add
add
adc
sarl
ret
fmuls
dec
movsl
in
in
repz
ds
pop
hlt
or
subl
mov
add
sub
fdiv
cmp
add
mov
mov
rcrl
scas
in
pop
push
clc
adcl
cmc
ds
fists
shl
cmp
sbb
xchg
xor
hlt
inc
dec
push
leave
xorb
mov
mov
sub
mov
scas
or
jb
clc
ss
xor
pop
fwait
adc
or
dec
dec
xchg
jno
push
nop
adc
cs
mov
out
fidivrs
or
arpl
scas
pusha
push
mov
imul
fs
xchg
add
cs
and
in
call
lods
in
or
inc
and
lods
xchg
pop
jb
adc
add
jmp
mov
inc
fists
rcrl
push
ficompl
movsl
es
ljmp
sbb
ljmp
loope
dec
cwtl
push
xor
pop
mov
fisubrs
cmp
mov
fcomp
insb
mov
pushf
sbb
shrl
aaa
clc
pop
scas
subl
pop
mov
adc
pop
xlat
xchg
cmc
mov
popl
and
shl
cmp
inc
cwtl
mov
xor
andl
insb
out
or
sahf
loopne
movsb
inc
inc
call
inc
xchg
or
or
sbb
cld
les
dec
mov
mov
stc
into
xlat
cs
insb
and
mov
xchg
adc
mov
xor
lods
fisttpll
xorb
gs
push
cltd
movsl
mov
insb
adc
adc
mov
lret
sbb
outsb
bound
jns
jecxz
jecxz
xor
ret
sbb
int3
push
clc
ljmp
adc
out
pushf
or
data16
jmp
sbb
in
inc
add
push
outsb
sbb
int
sub
rorb
fs
inc
jmp
dec
push
jg
adc
push
sbb
jmp
cmpsl
cmp
mov
dec
push
add
sbb
in
ss
rclb
mov
sub
outsb
jp
jnp
cld
cmpsl
jns
stos
sub
movsl
enter
sbb
sub
ds
xchg
rolb
jno
clc
fdivrs
nop
incl
xor
pop
pop
sbb
movsl
pop
ja
dec
sbb
xor
inc
adcb
rorl
sbb
xchg
lea
imul
inc
movsb
test
mov
lret
lods
ds
inc
jno
loop
dec
pop
adc
or
push
out
push
mov
push
bound
dec
lret
rcrb
je
xchg
addr16
pop
xchg
dec
cmpb
cmp
outsl
adc
push
dec
cli
or
push
cmp
add
dec
mov
pop
cmpsb
dec
bound
dec
push
sti
sbb
pop
sub
or
das
and
lahf
cmpsl
aad
jmp
test
pop
mov
daa
testb
pop
xor
cli
arpl
jp
cmpxchg
ret
cmp
movsl
test
pop
sti
push
fcom
rcr
add
jle
adc
arpl
dec
push
add
or
mov
adc
xor
mov
stos
popa
cld
call
mov
cmp
xchg
cli
lea
je
sbb
stos
pop
sahf
scas
in
out
dec
and
pop
mov
mov
mov
xchg
fmuls
adc
add
xor
cwtl
add
xchg
bnd
clc
adc
jno
lret
push
mov
cmp
stos
mov
int3
xchg
add
and
je
push
jb
sbb
mov
push
cli
xchg
ljmp
xchg
hlt
psubusb
aam
sbb
inc
addr16
jle
cs
scas
cmc
push
push
jecxz
inc
pop
add
into
daa
aam
int
mov
inc
inc
add
mov
call
sbb
pop
movsb
inc
ret
bound
sub
inc
push
lahf
nop
pop
xchg
sbb
iret
push
xor
inc
stos
mov
repnz
inc
sbb
ds
nop
and
and
out
push
sub
push
pop
and
push
cmp
in
outsl
es
ret
sbb
scas
std
xchg
or
fs
in
bound
mov
jbe
and
push
mov
mov
stc
imul
insb
ds
into
nop
push
call
xor
mov
and
sar
adc
cmp
mov
xchg
push
stos
sbb
jne
pop
jb
sub
clc
js
into
adc
xchg
pop
push
scas
mov
std
xor
fcmovbe
not
cs
int
dec
mov
pushf
sub
test
int
and
pop
cmpsb
cltd
mov
cmp
push
ds
push
dec
iret
dec
hlt
cmp
pop
mov
cmpl
push
push
filds
pop
cmp
aaa
add
dec
xchg
xchg
jns
call
pop
aad
shl
mov
jb
and
je
fsubrl
push
dec
jle
or
xchg
dec
cmpsb
insb
and
loop
xor
mov
mov
cltd
sete
adc
stos
push
push
cmp
inc
adc
orl
test
leave
sub
shrb
adc
pop
push
sbb
push
flds
or
test
push
mov
sub
xchg
or
sub
xor
inc
jecxz
cltd
es
loope
int3
inc
sub
in
inc
andl
push
test
add
pop
or
ret
sub
shlb
mov
jbe
inc
stos
sahf
mov
loopne
std
test
inc
pop
mov
fsubrp
xlat
rep
xor
adc
pop
repnz
arpl
lahf
ret
cmpsb
adc
cmp
push
popa
push
or
and
fstl
insb
xor
sbb
add
xchg
mov
je
dec
mov
add
in
sbb
dec
ljmp
push
jmp
pop
ret
mov
int3
enter
aam
push
pop
adc
sahf
int
inc
cld
adc
out
xchg
adc
push
test
cmp
and
mov
fimuls
sbb
sub
cs
push
dec
mov
jne
fdivl
add
dec
pop
pop
loope
cs
leave
aad
mov
add
push
add
pop
cmp
jnp
cmpsb
pop
sqrtps
pop
outsb
jne
pop
cwtl
stos
aad
xor
push
pushl
push
fs
mov
dec
mov
sub
dec
popf
and
or
arpl
xorl
icebp
or
xor
xlat
adc
xchg
cmp
xchg
pop
lds
cmp
stc
lcall
adcl
xchg
pop
addr16
xchg
xor
addr16
mov
sub
sub
dec
push
js
jns
or
push
jg,pn
stos
in
hlt
int3
in
insb
lret
addr16
fiadds
cs
adc
mov
insl
add
pop
push
push
push
ja
out
xor
jp
fsub
lcall
clc
mov
out
inc
les
cld
movq
mov
sbb
mov
xor
add
fwait
clc
sti
pusha
jmp
je
mov
and
push
ficoml
cld
sbb
fisubrl
mov
data16
jns
inc
jb
add
xor
mov
js
mov
xchg
nop
jbe
mov
or
aam
hlt
shll
add
cltd
leave
and
xchg
bound
lahf
add
ret
in
xlat
or
rcrb
sub
movl
or
inc
pop
daa
mov
in
ds
push
arpl
push
clc
mov
outsb
lea
ja
and
xchg
popf
and
mov
push
push
dec
xor
pop
xchg
pushf
test
lea
cmp
rcr
inc
fs
mov
pop
adc
or
int3
out
sbb
dec
imul
mov
repz
ret
adc
lret
push
addl
mov
ljmp
inc
push
out
push
jl
pop
dec
cmp
add
ljmp
dec
add
xchg
cltd
dec
rcrb
rcrl
push
mov
mov
arpl
adc
int3
dec
push
pop
add
pusha
out
jmp
adc
add
mov
mov
mov
jbe
and
and
sub
pushf
sarl
pop
dec
dec
sub
mov
loop
in
outsl
mov
sub
shlb
pop
and
inc
push
and
pop
outsb
ret
mov
outsl
or
sub
inc
lods
push
pop
jbe
push
xchg
mov
idivl
push
adc
jo
push
clc
pushf
push
clc
js
inc
add
inc
add
xchg
into
inc
push
or
inc
pop
xorb
stc
add
dec
scas
sbb
sbb
jae
imul
jmp
mov
leave
xchg
out
xchg
xor
clc
lock
jae
sub
fimuls
sub
or
ja
and
mov
imul
and
inc
dec
push
dec
push
inc
add
fwait
pop
dec
push
repnz
dec
cmpb
dec
je
adc
inc
push
push
dec
dec
bnd
pop
dec
jno
inc
dec
enter
pop
push
cmovns
pop
hlt
mov
jbe
sub
into
or
aad
xchg
jns
iret
iret
xchg
sub
mov
push
mov
outsl
push
dec
xchg
subl
mov
lods
mov
xor
fwait
dec
cmp
add
sahf
roll
inc
inc
cmp
sub
sub
pushf
fisubrl
dec
jmp
inc
dec
sub
rorb
push
insb
mov
dec
fwait
sbb
dec
sbb
or
sbb
jne
in
add
fcomi
cmp
outsl
add
cltd
jle
dec
push
add
cmp
mov
inc
fs
cmpl
mov
or
shlb
lret
and
xchg
pop
fsts
into
push
enter
arpl
sbb
dec
push
push
adc
or
leave
in
mov
js
cmovs
popa
inc
and
or
shr
dec
xor
imul
mov
push
mov
out
lds
sarb
aaa
inc
and
cmpl
sub
cmp
push
aas
clc
dec
popa
out
or
xchg
add
push
inc
jae
cmp
je
and
shll
loopne
mov
scas
inc
js
in
mov
xor
pop
inc
imul
out
insl
sbb
mov
in
sbb
xchg
bound
jmp
inc
out
and
add
add
xor
add
or
cmp
popf
out
push
push
fistl
pusha
adc
cltd
mov
sbb
std
cmp
leave
sbb
aam
xor
push
push
cmpsb
push
adc
mov
or
mov
cld
sub
add
repnz
pop
push
lods
lcall
imul
or
xor
add
push
cmp
mov
or
xchg
insb
lock
les
or
jo
xchg
push
lahf
rcrb
xor
inc
addr16
out
hlt
cli
and
push
mov
and
xor
xchg
sbb
and
pop
push
push
imul
cli
push
adcl
or
add
mov
ja
aaa
and
dec
cmp
aam
xchg
push
sub
in
jmp
jp
cmp
lods
in
sbb
scas
or
xor
sub
mov
int
dec
and
or
and
mov
inc
mov
outsb
imul
decl
jno
jnp
das
add
ja
pop
inc
jbe
sbb
adc
mov
js
sbb
jle
add
ds
push
cmp
adc
pop
sub
je
mov
sahf
icebp
sahf
jle
jo
pop
inc
jecxz
adc
pop
xchg
cmp
add
mov
jb
push
xchg
adc
aas
mov
inc
sub
repnz
adc
adc
adc
pop
mov
pop
sub
dec
test
xor
add
std
cld
imul
cmp
sub
call
inc
or
add
dec
sbb
je
inc
sub
lret
pop
inc
sahf
inc
or
shrl
cmp
xchg
pop
or
jae
push
repz
sub
adc
es
dec
loop
sbb
or
shlb
ljmp
inc
inc
dec
or
ret
in
fiaddl
jno
cld
or
jae
dec
arpl
mull
in
gs
inc
sub
dec
leave
xchg
fs
adc
jecxz
loope
jno
clc
adc
addr16
mov
mov
xchg
ljmp
in
ret
mov
rolb
call
imul
xor
jns
test
into
nop
add
inc
das
sub
mov
xor
in
pop
ljmp
add
lret
dec
adc
sbb
jl
xor
bound
adc
movsb
or
inc
outsl
jae
testb
inc
adc
stos
xchg
dec
insb
lret
adc
or
iret
ljmp
push
fistpll
sbbl
imul
in
push
pop
jo
xor
cmc
push
outsl
fdivl
cmp
mov
aaa
push
ret
dec
inc
xchg
jle
not
sti
sbb
mov
sti
or
xor
cmp
psrad
dec
cltd
decb
mov
pusha
pop
mov
int3
pop
pop
adc
les
pop
mov
es
inc
cmpsl
wrmsr
pop
lods
pop
cmp
test
cltd
leave
bound
push
mov
cmp
les
adc
push
out
xlat
push
jmp
popa
and
insb
pop
push
mov
cmp
jmp
sti
sub
lcall
cmp
pop
xchg
mov
xchg
push
pop
sub
mov
fstl
sub
jne
cli
sub
lret
sbb
clc
xchg
stos
or
adc
inc
ds
enter
and
or
xchg
cmp
lahf
push
dec
std
aam
pop
data16
inc
dec
dec
js
and
pop
push
sbb
sub
call
pop
shld
sbb
mov
mov
add
mov
sbb
push
pop
inc
mov
inc
ljmp
mov
add
or
xchg
ds
dec
pop
test
test
sbb
push
cmp
mov
pop
insl
pop
inc
push
mov
xor
ss
adcb
call
mov
pop
or
sbb
xchg
cmp
cltd
pop
push
cli
or
xor
popf
mov
lret
push
rorl
jno
pop
test
inc
sub
adc
cmp
stos
push
iret
dec
repnz
adc
jns
xor
in
pop
into
loopne
and
movsl
sbb
lea
cwtl
or
or
pop
and
orb
pcmpeqw
cmp
pop
mov
sti
and
jbe
and
cltd
mov
imul
mov
jbe
icebp
pop
loope
pop
ret
and
and
adc
jnp
divb
push
and
inc
stos
jb
and
repz
inc
add
add
or
sahf
andb
sbb
xor
adc
movsl
lock
decl
cmpsb
fs
popa
pop
gs
add
sbb
mov
iret
out
jno
add
push
xor
push
push
scas
outsb
pop
or
fbstp
xor
xchg
xchg
loopne
stc
xor
xchg
mov
out
inc
faddp
cmc
test
dec
xor
adc
iret
dec
xor
mov
repnz
popa
addb
jp
inc
xchg
rcr
je
push
dec
imul
or
outsl
sub
testl
adc
ret
fsub
das
push
sub
xor
divl
jle
jmp
les
cmp
add
sbb
notl
pop
sub
push
xchg
mov
sti
pop
loopne
push
cmp
jmp
lods
hlt
dec
adc
dec
push
js
mov
inc
push
dec
out
scas
aad
movsb
leave
cld
mov
and
pop
cmp
adc
mov
lret
jp
mov
inc
xchg
mov
clc
cmpl
push
push
cmpsl
add
fwait
push
gs
std
sarl
sbb
sbb
inc
lods
out
push
xchg
cltd
cmp
mov
push
mov
cmp
mulb
adc
xchg
add
dec
xor
out
repnz
je
js
iret
rcl
iret
inc
rclb
repz
adc
loope
sbb
ret
add
and
adc
pop
inc
adcb
pop
xchg
sbb
or
divps
and
in
daa
pop
jmp
roll
jge
mov
pop
fs
dec
outsl
fidivrs
push
shrl
xor
mov
mov
pusha
sbb
fwait
push
mov
xlat
mov
test
rcrl
jmp
jp
push
in
testb
mov
mov
mov
notb
or
sbb
lret
mov
mov
pop
or
dec
mov
sti
xchg
push
stos
hlt
ds
call
push
xchg
fstps
out
fisttpll
mov
pop
test
arpl
add
pop
xor
xor
push
fabs
or
xchg
mov
ss
sbb
adc
loope
inc
jne
call
jl
call
dec
adc
mov
pop
mov
dec
dec
cmp
add
ljmp
je
insl
jl
pop
adc
aad
push
adc
ja
or
out
sbbl
sahf
test
push
int3
je
mov
lock
retw
xor
cld
or
jge
dec
popl
loop
or
jmp
js
and
adc
mov
lods
mov
push
movsl
jne
xor
sub
xchg
inc
adcl
testl
popf
jecxz
inc
pop
clc
sub
mov
int
in
add
lods
add
xor
and
fisttps
mov
push
or
inc
sbb
mov
sub
inc
je
push
or
repz
dec
inc
add
sbb
lret
dec
jae
addb
adc
lods
fstps
mov
pop
cmc
and
frstor
bound
jmp
filds
mov
or
jg
lahf
or
xchg
jb
mov
push
ja
jns
shll
jmp
jle
jo
clc
ret
adc
push
ficomps
ret
pusha
or
jl
gs
push
inc
les
sbb
sub
subl
inc
push
fs
and
fidivs
cmp
fildl
adc
mov
cltd
add
xor
inc
or
push
rolb
inc
xchg
and
adc
ja
dec
sub
fdiv
and
inc
test
in
iret
jnp
inc
mov
sbb
lret
movsb
sub
or
add
mov
aad
frstor
adc
into
call
push
jno
lret
das
mov
shl
sub
movl
les
push
jb
sub
clc
pop
add
js
xor
jp
mov
jecxz
arpl
pop
sub
push
sarl
mov
or
dec
nop
fwait
cmp
xor
ds
pop
inc
dec
sub
push
ljmp
pop
jo
jne
cli
push
mov
sbb
xchg
push
push
cmp
addr16
jo
xchg
cmp
lret
les
sbb
testl
imul
enter
outsl
repnz
push
sahf
jbe
rcrl
mov
add
inc
add
jg
sub
pusha
mov
daa
jle
lcall
pop
mov
dec
cs
lea
mov
sbb
jb
out
stos
fs
inc
insb
push
outsb
nop
sahf
mov
lock
jns
and
lret
lock
push
xor
push
dec
inc
and
add
mov
inc
add
scas
add
or
xor
test
mov
nop
dec
jbe
jecxz
jb
adc
jne
sub
or
mov
inc
and
mov
push
sub
adc
push
dec
shll
imull
cs
jne
int
test
mov
jmp
sub
dec
adc
mov
mov
test
mov
test
push
add
add
sbb
mov
jmp
data16
repnz
lods
ret
mov
jae
xlat
sbb
inc
in
adc
and
inc
sub
test
xchg
and
mov
movsb
negl
adc
fdivrl
shlb
aas
sarl
adc
add
push
sub
jae
jl
nop
fdivs
sbb
inc
and
mov
inc
scas
cmp
pusha
push
pop
rorl
repz
or
or
dec
in
pop
xor
jb
xor
mov
fistl
inc
cmp
nop
test
lcall
jae
pop
fsts
add
dec
and
ret
mov
pop
pop
xchg
movsl
out
push
push
push
inc
or
xor
je
jbe
inc
xchg
popf
dec
lea
ss
adc
push
mov
in
mov
pop
ficoms
or
xchg
fnstsw
xorl
fwait
cmpsl
push
arpl
scas
in
nop
pop
xor
mov
je
ja
cli
and
mov
nop
mov
ds
iret
pop
adc
or
idivb
hlt
mov
xchg
clc
fstps
xchg
pop
push
das
ficomps
int
mov
pop
cmp
std
scas
lret
mov
mov
fldcw
pop
sub
out
sub
xor
mov
mov
xlat
xor
jmp
ds
sub
fdivrs
push
jg
adc
adc
cwtl
add
fwait
repz
fsubr
lock
inc
rcrl
inc
hlt
shlb
push
adc
jb
sub
push
jp
fadds
add
add
add
push
in
xchg
lcall
or
xor
loope
and
adc
adc
xor
dec
rorl
jnp
icebp
add
gs
mov
pop
movzwl
rorb
mov
ficoms
scas
pop
push
lock
or
jo
icebp
test
xchg
pop
aad
je
cmp
jge
dec
inc
jae
scas
or
movsb
pop
inc
cmp
outsl
inc
mov
jg
cmp
movsb
loopne
imul
mov
loop
sbb
and
adc
jne
pop
add
mov
push
xchg
add
jge
push
lock
inc
inc
mov
outsb
jne
cmpsl
outsb
aas
mov
jne
mov
inc
fnsave
leave
mov
inc
or
out
mov
xchg
jmp
jo
jecxz
dec
mul
or
addr16
or
push
push
and
cltd
jmp
ja
mov
adc
nop
mov
out
dec
sub
inc
add
lahf
ds
xchg
sbb
mov
inc
andb
dec
test
aad
push
or
xchg
cmp
lock
dec
icebp
inc
mov
mov
scas
pusha
and
add
in
mov
out
sub
gs
sbb
loopne
and
xor
fwait
adc
mov
call
pop
lods
ret
sti
pushaw
pop
repnz
ds
xchg
sbb
inc
mov
push
sahf
int3
inc
push
and
imul
pop
pop
cmp
push
jae
les
pop
jo
jb
push
sahf
xchg
adc
and
imul
pop
pop
adc
sbb
ljmp
sbb
pop
push
es
dec
xchg
push
jnp
sbb
adc
pop
pop
cmp
cmp
sub
dec
sbb
mov
addl
rcrb
or
cld
push
les
pusha
notb
leave
mov
push
daa
inc
and
xor
rorb
ret
and
loop
xchg
std
outsb
xchg
push
push
push
sub
pop
and
inc
es
lahf
and
pop
enter
std
jno
xorl
jo
repnz
shrb
inc
dec
hlt
inc
sti
xchg
add
fbstp
push
dec
ret
inc
lock
sti
out
outsl
cli
les
lods
sbb
loop
fmuls
test
outsl
xchg
adc
frstor
jno
inc
bswap
sbb
into
pop
add
mov
insl
jl
xor
movsb
or
inc
xlat
inc
fiadds
imul
fs
mov
ret
ja
movsl
dec
adc
push
sub
movsl
cwtl
cwtl
adc
cmpsb
jne
sub
enter
and
jmp
into
les
sub
sbb
pop
xor
pop
fs
sub
or
cmp
adc
sarl
add
dec
push
cld
test
xor
lcall
lret
mov
pop
nop
adc
inc
push
leave
push
push
mov
xchg
repnz
mov
dec
mov
bound
je
and
sub
jl
lret
cmpsb
sbb
das
sub
push
jb
sub
and
loope
jb
lahf
dec
je
repz
jg
push
push
je
or
scas
cmpl
push
mov
pop
popa
insl
les
xchg
sbb
jbe
cmp
xchg
popa
mov
dec
ficomps
jecxz
or
stos
and
pop
pop
fnstsw
add
cmp
psubb
and
jne
rorl
in
scas
dec
jae
loopne
add
ja
inc
mov
inc
cmp
icebp
adc
push
mov
mov
enter
movsb
call
xchg
sub
fisubl
test
or
mov
repnz
adc
pop
mov
or
popf
int
push
push
orb
sbb
jle
shl
jno
sub
jecxz
xchg
shrb
call
mov
mov
or
jb
es
shrl
movsl
cmc
subl
out
jb
push
les
dec
fmull
fsub
rcrl
inc
or
nop
nop
arpl
pop
mov
mov
in
push
in
mov
adc
push
cmp
mov
inc
mov
je
mov
out
jb
fwait
int
rcl
mov
sub
and
orl
and
pop
sbb
dec
push
dec
cmp
inc
enter
mov
insb
pop
push
jmp
rcr
sub
pop
xor
mov
sub
cmp
pop
adc
icebp
popf
sbb
repz
dec
xor
cmp
add
push
insb
cmp
fs
fidivrl
popf
jo
fsubrp
or
pop
sub
cmpsb
xchg
es
aam
incb
push
dec
inc
xchg
outsb
cmp
cli
ret
xchg
push
push
mov
loop
orb
pop
pop
adc
orl
lahf
jne
and
cmp
push
jmp
jo
rorl
xorb
sbb
cmp
lret
in
sub
dec
xor
jle
repz
mov
push
add
jne
stc
sbb
sub
loopne
sbb
jns
and
xchg
lahf
inc
and
mov
negl
bound
loop
pop
pop
jo
aaa
in
lret
mov
pop
push
loope
pop
pop
push
dec
push
icebp
pushf
or
mov
dec
inc
xchg
inc
dec
sub
fs
xor
and
add
sub
daa
imul
cs
iret
push
cmp
jb
aaa
lcall
pusha
push
aam
jae
dec
jg
mov
add
cmp
jo
adc
dec
insl
mov
jo
arpl
adc
cmp
add
inc
pop
scas
or
push
addr16
shlb
inc
std
daa
out
push
jb
pop
xchg
mov
addr16
notl
push
pop
loope
and
out
das
insb
push
dec
and
dec
stc
cs
cs
call
and
lods
push
xchg
call
fisttpll
lcall
sbb
sub
xor
dec
sub
sbb
mov
push
dec
imul
push
pop
mov
ss
push
adc
dec
cmpsb
mov
mov
push
ss
mov
gs
xchg
sbb
xor
mov
in
push
cmp
into
lret
fistl
into
arpl
sbb
sbb
adc
lds
dec
fmull
mov
ljmp
push
or
leave
call
pop
mov
xor
movsl
adc
lahf
enter
stos
adc
lds
add
push
pop
fs
scas
fdivrs
sahf
mov
aaa
addl
shrb
ret
fidivrs
sub
int3
rclb
dec
or
ljmp
lea
jb
dec
sbb
mov
popa
mov
stos
arpl
adc
nop
inc
dec
into
aas
in
inc
dec
gs
mov
dec
sub
cmp
push
or
adc
lahf
in
sahf
mov
push
cmp
xlat
inc
pop
ja
fwait
je
dec
mov
inc
mov
popa
sahf
fbstp
ja
inc
test
mov
mov
pop
fs
fiaddl
dec
cmp
add
push
stos
bound
dec
jg
outsb
mov
test
aaa
add
pop
add
xor
pop
sub
fcoml
clc
inc
call
jle
pop
in
mov
cli
jbe
xchg
sub
and
jb
pop
push
jo
push
dec
jo
int3
xchg
push
mov
push
js
push
dec
add
sbb
data16
push
pop
push
repnz
mov
imul
mov
in
pop
nop
add
mov
mov
ftst
les
jle
add
popf
inc
mov
stc
js
aam
imul
xchg
add
and
lret
inc
add
jecxz
loopne
inc
push
push
push
movsb
daa
sub
adc
bound
shrl
cltd
pop
push
xor
cltd
testb
jge
sbb
mov
mov
cwtl
jne
fwait
sub
nop
dec
mov
push
ss
scas
pop
jl
int
popf
cmpsb
clc
imul
adc
les
pop
scas
jle
xor
ss
sub
or
inc
sbb
enter
add
inc
sub
pop
push
and
ljmp
mov
hlt
fistpll
xchg
mov
pop
call
cltd
cmpsl
lods
dec
adc
mov
adc
pop
mov
sbb
xor
push
jl
fcompl
inc
xlat
test
fsubs
pop
into
popl
push
cli
cmc
xchg
das
mov
lea
adc
pushf
jmp
fistps
cwtl
mov
in
add
icebp
and
sbb
xor
xor
outsl
xchg
jae
mov
sub
mov
fbstp
int3
nop
xor
das
mov
fmull
add
dec
cmp
dec
pop
adc
dec
jb
bound
js
lea
inc
mov
enter
mov
push
gs
std
mov
mov
ja
cwtl
push
inc
jns
inc
sahf
xor
in
cmp
addr16
lds
in
push
jno
xlat
add
in
dec
inc
mov
scas
in
mov
fwait
xchg
mov
sbb
and
iret
mov
pop
hlt
ret
mov
sub
scas
jne
mov
aam
movsl
movsb
and
mov
push
mov
inc
jg
jmp
imul
dec
pop
orb
imul
or
enter
mov
sbbl
into
inc
mov
rclb
mov
fldenv
decl
push
orl
sbb
scas
push
push
inc
scas
sbb
enter
pop
lret
mov
jg
and
mov
popf
insb
add
push
add
inc
add
push
inc
rol
or
rol
or
stos
push
cld
pop
pop
sbb
sbb
push
mov
std
fsubr
test
and
movl
jg
push
and
jmp
loope
in
loop
adc
andl
push
imul
push
or
ja
leave
fadd
insl
jmp
jle
in
and
lret
push
pop
inc
cmp
sti
pop
xor
adc
mov
xor
scas
dec
push
add
dec
stos
aaa
xchg
dec
ret
mov
mov
ficomps
jle
adc
iret
ret
frstor
sbb
jecxz
sbb
jl
ret
mov
mov
mov
sub
add
lcall
fiaddl
roll
cvtdq2ps
dec
insb
insb
and
or
push
lahf
or
xor
xchg
sbb
cltd
in
xor
or
jb
and
and
cli
aas
out
or
sbb
add
xchg
xchg
sub
fcomp
and
mov
scas
push
dec
and
aad
stos
xchg
xor
and
sbb
in
cs
lea
fimull
xchg
setns
inc
xor
lret
mov
mov
ret
dec
lcall
mov
inc
xor
sbb
dec
lock
inc
gs
movsl
push
addl
mov
mov
cmpsl
out
push
adc
add
ret
xor
cld
mov
sbbb
hlt
or
pop
fnstenv
pop
in
fiaddl
mov
pushf
adc
cmc
or
lea
sub
repnz
fs
cmp
insl
pop
pop
dec
in
iret
xlat
sbb
bound
push
stos
rcll
imul
dec
insb
out
clc
call
push
mov
leave
dec
xchg
in
nop
jae
mov
mov
fldt
adc
sub
icebp
sbb
jo
mov
push
xor
out
and
rcll
xlat
push
push
out
cmpl
mov
cmp
jp
hlt
sbb
leave
adc
and
cmp
or
or
neg
dec
cmp
in
mov
mov
mov
xchg
push
dec
mov
add
cmp
and
mov
rcll
xchg
jbe
jae
fcoms
push
pop
or
cmp
mov
or
inc
outsl
add
mov
jle
int
dec
inc
test
sbb
mov
lret
add
clc
callw
mov
int
or
call
push
js
js
dec
dec
add
mov
pop
pop
mov
jmp
movsb
ret
mov
stos
jle
fwait
xchg
bound
dec
or
xchg
adc
dec
lods
int3
or
lret
add
fistps
jmp
icebp
mov
and
jle
das
movsb
scas
jl
push
or
aad
inc
call
and
adc
js
push
mov
ljmp
in
in
mov
cmc
sbb
dec
mov
jnp
xchg
lahf
dec
mov
push
inc
sbb
xor
mov
sbb
jno
or
pop
cmp
mov
dec
shll
fwait
test
add
mov
gs
aam
addr16
mov
dec
lahf
mov
mov
stos
lahf
mov
aas
jmp
xchg
push
fs
push
jmp
inc
cmp
fistpl
pop
jnp
iret
ja
mov
pop
cs
dec
lea
adc
or
inc
inc
ss
inc
dec
sbb
movsb
mov
sub
mov
inc
fldt
push
xchg
inc
into
push
faddl
gs
aam
sbb
cld
rcrb
int3
jne
inc
push
jecxz
ret
in
inc
faddl
dec
ret
add
inc
sbb
or
popf
js
test
int3
adc
mov
pop
push
add
loope
call
pop
ds
mov
mov
mov
icebp
leave
mov
cwtl
lock
xchg
lods
data16
insb
adc
adc
ret
xchg
xchg
adc
xlat
rcrl
std
imul
dec
sbbb
mov
cs
mov
pop
sub
mov
push
orb
test
ds
and
add
mulb
mov
test
xchg
cmpsl
jg
sbbl
ss
addl
sub
lcall
pop
repz
adc
mov
pop
dec
xchg
repnz
adc
pop
adc
mov
and
jl
dec
mov
inc
jnp
xchg
mov
sub
cwtl
mov
mov
jne
daa
sbb
pop
adc
push
sbb
test
out
xchg
ja
jmp
or
sbb
inc
test
xor
test
sbb
imul
pop
cmp
jmp
int
mov
push
clc
dec
loop
jne
out
test
je
or
inc
push
and
or
aaa
test
push
insb
and
nop
xchg
inc
fcoms
sbb
or
lret
faddl
adc
ljmp
add
and
jb
cmp
inc
sahf
outsb
xor
subl
pop
or
stos
and
in
ja
add
cmp
and
je
xorb
daa
xchg
sub
pop
xor
xchg
mov
stc
ficomps
clc
stos
pop
dec
movsl
pop
adc
aas
fimull
and
push
inc
xchg
or
add
pop
inc
fcompl
mov
add
or
mov
add
and
addb
pop
and
push
mov
insb
adc
je
mov
test
or
add
jmp
pop
or
add
jecxz
mov
out
inc
lcall
mov
adc
scas
cmp
cmp
imul
and
sub
dec
pop
shlb
jb
pop
and
add
or
sbb
jbe
inc
cld
jge
rolb
add
out
test
ror
aaa
lods
loop
jb
jns
divl
imul
lock
xor
out
icebp
psubsw
push
xor
mov
inc
adcb
mov
rcll
gs
hlt
ret
pop
xchg
clc
or
fldt
loopne
cmp
xchg
in
sbb
jmp
add
mov
inc
js
jmp
xchg
inc
jmp
sbb
cmc
adc
jmp
cmp
dec
adc
mov
inc
shrl
or
rorb
dec
out
jmp
mov
inc
bnd
mov
ror
jae
and
pop
sbb
push
inc
sbb
or
jno
jbe
jl
pop
and
lret
loop
hlt
push
mov
dec
add
push
idivl
pusha
cmc
push
cltd
dec
xchg
in
sbb
mov
divl
push
cmp
out
loope
jnp
push
cmc
or
enter
les
cmp
cld
jno
xchg
pop
loope
adc
sub
stos
mov
xchg
fwait
push
pop
jo
and
xchg
xchg
fdivp
add
cmp
je
in
ret
xorb
je,pt
push
mov
out
rcll
ds
jnp
adc
pop
push
or
inc
sahf
mov
push
data16
dec
xor
push
jae
pop
lock
pop
adc
cltd
fsubs
mov
pop
lock
xor
jae
ret
mov
push
push
adc
mov
leave
or
test
push
pop
pop
int3
out
enter
fmuls
imul
mov
mov
push
sbb
aad
lds
add
roll
cmp
call
mov
fs
mov
cltd
pop
jmp
push
pop
movsl
push
test
or
fcoms
sub
add
jae
pop
xor
mov
push
add
out
pop
ret
add
cmp
fwait
leave
scas
pop
jmp
sub
es
insl
push
jns
push
or
dec
pop
cmp
rorl
jbe
and
shrl
or
pop
xchg
dec
and
lock
enter
mov
or
and
jmp
es
into
jo
mov
or
sub
lret
push
rorb
orb
or
lret
popa
jle
sub
mov
jmp
jne
mov
push
and
mov
lock
imul
std
lock
inc
adc
fadd
mov
mov
aad
lcall
aaa
repnz
jbe
mov
xchg
sbb
xchg
push
in
push
lcall
leave
rcl
xchg
add
int3
push
xchg
push
rcl
cmpxchg
mov
mov
inc
clc
inc
fsubl
push
xor
mov
adc
dec
dec
arpl
sahf
mov
cmp
pushf
push
movsl
orl
jo
mov
dec
mov
xor
add
icebp
int
jb
push
ds
cmp
repz
fstps
mov
mov
pop
or
jecxz
rorb
movsb
into
push
dec
dec
icebp
dec
sbb
pop
mov
push
loop
addr16
repz
adc
imul
hlt
cmc
jns
leave
cmpsl
push
fcomip
imul
sub
mov
or
repz
push
clc
or
mov
cltd
cs
sub
hlt
sti
push
mov
push
mov
xchg
loop
pop
inc
rcr
pop
mov
sbb
inc
xorl
notb
push
mov
iret
out
mov
dec
imulb
and
ja
cmc
mov
popf
mov
loope
pmuludq
sub
dec
stos
mov
filds
pop
inc
jns
push
sub
mov
push
call
pop
lahf
mov
sti
das
jecxz
rcrb
mov
daa
jb
mov
jae
sub
movsb
or
mov
or
sub
mov
call
mov
mov
sbb
and
inc
mov
mov
xchg
scas
sbb
das
dec
pushf
push
dec
jmp
sbb
mov
or
ffree
xchg
sbb
repz
lods
dec
insb
mov
cmpsl
je
out
testl
mov
dec
mov
inc
jne
int3
imul
lret
dec
outsb
add
add
xchg
repz
xchg
mov
mov
mov
adc
fcmovbe
aaa
pusha
add
mov
jb
or
push
xor
pop
adc
andb
mov
iret
faddl
sbb
orl
sbb
mov
je
push
xchg
pop
dec
pop
call
in
pop
sub
pop
movsl
out
adc
inc
fcoms
or
sahf
in
lahf
shr
jne
shrb
and
mov
arpl
sub
lret
add
insl
pop
and
outsl
mov
xor
jp
rolb
iret
out
ja
sub
push
jmp
and
mov
dec
jne
enter
nop
cmp
or
les
add
outsl
loopne
mov
leave
lcall
test
mov
scas
adc
repnz
mov
cld
mov
mov
push
nop
sbb
lds
das
cmp
mov
dec
xor
pop
std
pop
inc
xchg
fists
sub
push
cld
xchg
pop
sbb
inc
lret
pop
sbb
sbb
mov
por
cmp
xor
mov
inc
fistpl
push
testl
test
xlat
and
out
test
jle
mov
xchg
stos
adc
xlat
stc
pusha
xchg
pop
xchg
push
sub
dec
nop
mov
shr
cmp
cltd
loopne
xor
xchg
pop
testb
sbb
les
icebp
jbe
sahf
or
repnz
insl
cs
or
stc
inc
addr16
in
stc
jb
mov
mov
in
pop
pop
mov
and
stos
cmp
daa
mov
mov
int
pop
in
dec
mov
outsb
shll
push
dec
pushw
ds
sbb
jp
imul
pop
leave
jb
jo
mov
mov
sahf
insb
pop
and
mov
push
add
leave
push
xor
in
ret
adc
je
and
dec
push
cmpsb
or
gs
xor
adc
rorb
mov
fwait
lock
or
in
add
lods
xchg
dec
mov
repz
stos
dec
xor
repnz
mov
pop
xlat
or
cli
into
es
and
xlat
adc
or
cwtl
sbb
fidivl
pop
mov
ja
and
negl
add
xchg
push
ficoms
out
mov
inc
push
push
inc
lret
mov
loop
aas
pop
mov
dec
inc
or
or
xor
pop
test
sti
sbb
aam
or
mov
sbb
inc
xchg
push
inc
adc
in
adc
push
lcall
shll
inc
xchg
jne
push
cmp
xor
rcll
mov
pop
lock
adc
scas
and
push
loop
cli
push
cld
mov
repnz
gs
xor
cwtl
pop
push
enter
rcll
jae
leave
or
push
clc
call
js
xchg
mov
mov
xor
mov
inc
jo
push
daa
push
dec
popa
pop
sub
repz
scas
xchg
push
sub
sbb
lahf
in
test
jge
fwait
push
inc
inc
cmp
xlat
push
sub
push
fldl
pop
xor
hlt
stos
hlt
inc
test
outsl
sbb
mov
xor
add
and
jmp
and
add
fnsave
sbb
mov
das
jle
add
push
cmp
mov
or
out
gs
dec
xchg
fcoml
mov
dec
cltd
cmp
pop
sbb
dec
mov
out
ret
icebp
daa
pop
inc
pushf
fs
inc
or
dec
and
xor
inc
outsl
movsl
lds
push
jmp
inc
xchg
lds
gs
jnp
ja
and
dec
inc
movsl
inc
icebp
inc
sbb
inc
call
orl
mov
mov
adc
inc
or
cmp
xchg
aas
lret
dec
repnz
cwtl
subb
sbb
ds
ds
dec
jns
not
sub
scas
or
add
lcall
add
mov
out
mov
dec
insb
or
insb
pop
ss
int3
cltd
daa
pop
fnsave
test
fucom
pmaddwd
xchg
out
jnp
in
inc
dec
out
shrl
add
adc
addl
sahf
gs
sub
cmp
fmulp
int3
ret
inc
decb
add
pop
pop
mulb
adc
push
dec
ja
cmp
mov
sbb
mov
popa
inc
inc
dec
push
sub
loopne
mov
pop
cmc
mov
mov
pop
add
sbbl
jbe
sub
test
push
lock
shrl
fsubs
outsb
fsub
jne
push
push
cmp
mov
imul
testl
jbe
adc
aaa
add
mov
pop
mov
xchg
popa
dec
or
push
and
es
jle
dec
xor
push
outsl
mov
loope
in
loopne
or
popf
cmp
sbb
adc
add
adc
cmpsb
arpl
cmp
dec
fldcw
inc
pushf
pop
sbb
adc
cmpl
and
dec
adc
call
hlt
dec
fs
mov
cli
add
lea
ret
push
xchg
repnz
cltd
or
orb
fisubs
outsb
jns
cltd
mov
xchg
or
lahf
push
and
add
push
popf
push
sarl
jae
xchg
sub
mov
sub
ret
std
push
sbb
push
push
mov
outsb
push
xchg
and
jno
push
decb
pop
call
and
push
mov
xor
inc
ret
adc
out
sbb
outsl
inc
mov
or
mov
icebp
pop
mov
iret
imul
push
xchg
mov
xchg
lret
lret
mov
pop
cli
pop
cmp
pop
loop
inc
pop
sarb
push
adc
pop
repnz
popf
test
inc
cltd
pusha
xchg
add
mov
xchg
adc
or
cmp
test
dec
lods
jle
mov
and
push
pop
mov
push
sbb
repnz
aas
decl
enter
sbb
jle
movsl
in
cmc
jg
loope
cmp
sbb
pop
push
cmp
or
shll
mov
add
stos
dec
or
add
insb
or
notb
loopne
and
cmp
loop
stos
mov
popf
adc
or
or
adc
pop
jno
cltd
inc
mov
imull
fsts
lods
push
pop
shrb
iret
pop
dec
fstpt
mov
sbb
out
mov
add
call
scas
ffree
enter
xchg
mov
or
cmp
add
xchg
pop
xchg
lcall
xchg
or
xchg
orl
push
rcrb
push
jle
add
ficomps
movsl
adc
mov
push
mov
aas
dec
shrb
pop
adc
xchg
sub
sbb
xchg
xchg
lret
or
or
xor
push
pop
lret
mov
sbb
sub
dec
scas
dec
mov
lcall
movl
jmp
and
xchg
fnstenv
lock
jl
jmp
jno
outsl
adc
mov
sub
fmuls
loope
sub
outsl
cmp
lcall
jp
mov
test
loopne
pop
jge
sub
lahf
das
xor
call
jnp
in
adc
inc
ss
fcomip
cmpl
dec
dec
aaa
push
jp
enter
test
and
test
ret
mov
or
push
sbb
ftst
cmp
mov
push
xchg
mov
xchg
je
and
sbb
push
nop
pop
sbb
or
ret
and
and
xchg
push
aam
sti
and
adc
xchg
in
push
sbb
and
into
push
mov
or
push
jmp
mov
push
enter
cmp
mov
int
pusha
popa
imulb
or
out
pop
in
dec
mov
adc
xchg
sarb
cmp
adc
xor
sub
cmp
push
insb
push
popf
aas
inc
pop
aam
je
mov
mov
mov
mov
mov
jne
loop
nop
pop
cmp
mov
jg
hlt
int3
das
pop
mov
push
mov
hlt
add
aas
mov
lods
xchg
inc
mov
daa
enter
add
mov
icebp
add
outsl
sub
lcall
mov
add
mov
std
jl
xchg
pop
out
fsubr
jg
icebp
scas
cmp
ds
in
inc
mov
adc
loope
or
imul
push
push
fdiv
inc
in
sbb
mov
and
push
or
cmp
sub
pop
dec
sbb
or
loope
lods
in
or
push
push
cwtl
imul
cmp
sbb
loop
aam
dec
add
inc
fstpt
lret
cltd
dec
sub
test
fstl
jge
or
je
gs
pop
cmp
enter
popa
out
jg
scas
cli
adc
int3
dec
mov
sub
mov
into
dec
rcrb
ljmp
mov
jg
in
push
ja
push
ret
in
test
dec
pop
repnz
cmp
imul
orl
sub
outsl
cmp
and
repnz
push
lret
and
sbb
add
pop
inc
xor
dec
jne
push
jb
mov
or
inc
add
lcallw
jl
cmp
adc
dec
and
js
pop
or
mov
dec
jno
sbb
frstor
inc
adc
or
call
add
in
or
sub
dec
cmp
dec
sbb
mov
dec
mov
lods
addr16
sub
addl
or
add
push
mov
sti
fwait
and
or
aam
lea
je
lret
imul
enter
imul
clc
jne
mov
push
push
xor
xchg
mov
aad
popa
lret
in
jo
pop
cmp
xor
jae
icebp
cmc
adc
or
sub
push
hlt
cltd
dec
das
clc
fwait
xor
sbb
leave
sbb
sbb
cmp
add
mov
xorb
add
sbb
scas
xchg
daa
enter
add
fistpll
push
shll
clc
imulb
pop
adc
add
lret
shlb
les
jmp
and
arpl
sub
enter
repz
insl
add
pushf
cmp
fdivrl
mov
rcrb
mov
pop
mov
fabs
cmp
cwtl
aaa
jbe
mov
pop
les
add
je
add
mov
push
imul
xchg
roll
movsl
mov
mov
xor
pusha
fidivs
xchg
outsl
jg
lea
fsubrs
outsl
jle
jl
pusha
daa
mov
add
pop
into
dec
imul
jecxz
nop
testl
jmp
and
pop
push
daa
movsb
loop
jno
pop
push
stc
mov
fs
xchg
andb
add
or
jge
jge
xchg
mov
xchg
inc
push
pop
pushf
or
pxor
ja
shrb
jbe
mov
aas
dec
imul
lret
out
aaa
jle
and
ror
sbb
push
inc
imul
bound
cwtl
stos
lea
push
inc
orb
pop
into
mov
mov
and
adc
clc
pop
lret
adc
fdiv
and
and
subb
cmp
push
mov
push
push
dec
or
xor
dec
or
imul
push
jmp
adc
test
push
pop
lret
adc
pop
testb
lret
imul
jo
out
jmp
and
push
fisubs
cmp
adc
cmpsb
cmp
mov
adc
aas
ds
loopne
and
stos
mov
aaa
push
stos
add
inc
fs
sub
cmp
cmp
dec
ror
mov
stos
or
dec
les
cmc
cmp
mov
mov
clc
pop
clc
jbe
shrw
clc
fiadds
sti
sbb
gs
in
bound
imul
sub
aas
call
xchg
iret
cmpb
pop
clc
mov
dec
mov
jnp
repnz
notb
sbb
xlat
in
and
xor
xchg
push
add
mov
lahf
in
int
repz
das
es
jle
xor
dec
bswap
inc
cmpsl
ret
and
jle
jne
sbb
int3
sbb
dec
shl
ds
xchg
add
jae
pop
ret
xchg
add
movsb
sub
leave
mov
lret
jns
sub
and
fldl2e
push
pop
shll
mov
insb
aad
in
stc
cmp
pop
or
testl
lret
mov
dec
sbb
sub
or
clc
inc
inc
sub
adc
lock
push
out
iret
sbb
push
xlat
or
fildll
fsubr
xchg
pop
mov
orl
dec
mov
stos
mov
sbb
sbb
je
ss
fsubrl
jns
mov
dec
hlt
pop
and
dec
mov
add
push
or
lahf
push
and
adc
cld
add
movsl
jl
leave
cmp
mov
lds
and
xor
cwtl
insb
iret
inc
and
xchg
in
sbb
sub
lret
aaa
dec
pop
push
gs
sar
and
mov
mov
or
push
xor
jns
and
bound
inc
in
sbb
fbld
sub
push
jp
xor
popf
mov
push
fildl
rol
xchg
jo
ja
bswap
cltd
lea
lret
xor
popa
mov
sbb
ror
stc
insl
lds
rcrb
and
movb
mov
push
call
push
shl
addl
lock
sarl
sub
je
int
cmc
xchg
mov
xor
jno
mov
push
fcmove
js
jae
shlb
lods
mov
dec
lcall
xor
ficoms
add
call
adc
push
lret
or
sbb
leave
pop
push
mov
cld
nop
enter
xchg
mov
and
mov
adc
cmp
pop
adc
and
pop
fadds
adc
fldt
pop
xchg
push
cmp
les
sub
cltd
sub
pop
add
sub
push
push
js
or
push
mov
je
nop
notb
or
xor
or
mov
and
pop
adc
jo
sbb
dec
dec
mov
add
mov
sub
inc
loopne
lods
inc
pop
ret
jne
xchg
adc
xchg
ds
fisubs
xor
loop
cmp
or
test
ds
mov
icebp
adc
pop
ds
inc
pop
leave
rcrl
sti
adc
les
loop
andb
jl
fidivs
mov
mov
push
in
ss
icebp
loop
cmp
clc
leave
rcl
add
xlat
insb
and
inc
push
xchg
xchg
mov
sub
jns
imul
clc
adc
repz
out
repnz
mov
mov
mov
scas
icebp
inc
outsb
int
scas
inc
adc
movsl
fcomps
les
push
add
enter
mov
nop
cmovle
inc
pusha
sbbb
mov
adc
mov
or
pop
adc
and
or
bound
movsb
lret
rcrb
jmp
mov
pop
insl
pop
shl
pop
mov
inc
jle
mov
pop
lcall
mov
add
add
xor
ljmp
cmp
sbb
and
rclb
inc
rclb
sbb
dec
rorb
cmp
add
imul
pop
add
imul
repz
clc
jge
leave
sbbl
push
fstps
stos
push
jmp
sub
ss
aas
mov
sti
pushf
dec
es
lods
jne
aas
mov
jne
mov
in
jne
aas
cld
jne
xor
cmp
or
pop
lret
sbb
outsb
sti
sub
jle
cmp
push
jecxz
stc
push
jecxz
stc
jecxz,pn
stc
jecxz,pt
stc
into
jecxz
stc
fsubp
pushf
stc
out
jecxz
stc
jecxz
stc
mov
int3
stc
sahf
jecxz
stc
scas
jecxz
clc
mov
and
ds
jbe
xor
jp
ss
xor
jle
xor
jle
xor
jle
xor
jle
xor
jle
xor
jle
xor
jle
xor
jle
xor
jle
xor
jle
xor
jle
xor
jle
push
push
cmp
push
sbb
cmp
cs
dec
aad
lahf
pop
aad
lahf
insb
aad
lahf
jl
outsb
lahf
mov
sahf
lahf
pushf
aad
lahf
lods
aad
lahf
mov
aad
lahf
into
lahf
in
aad
lahf
cld
aad
lahf
or
push
cmp
insl
push
inc
sub
xchg
in
cs
cld
push
out
cld
push
out
cld
cs
cld
ds
cld
into
out
cld
fsubp
pushf
cld
out
out
cld
out
cld
mov
int3
cld
sahf
out
cld
scas
out
cld
mov
and
sub
ds
cld
push
out
cld
push
out
cld
cs
cld
ds
cld
into
out
cld
fsubp
pushf
cld
out
out
cld
out
cld
mov
int3
cld
sahf
out
cld
scas
out
cld
mov
and
sbb
push
cmp
ds
dec
jne
aas
pop
jne
aas
insb
jne
aas
jl
outsb
aas
mov
aas
pushf
jne
aas
lods
jne
aas
mov
jne
aas
fdivl
aas
in
jne
aas
cld
jne
aas
or
push
aas
sbb
push
mov
cs
dec
test
pop
test
insb
test
jl
outsb
iret
mov
mov
lods
test
iret
int3
test
iret
faddl
dec
cld
test
iret
pop
xchg
cmp
dec
int
adc
pop
test
test
jbe
inc
pusha
push
mov
cmp
mov
hlt
in
mov
cld
shlb
nop
es
push
xor
xor
cmpsl
add
xor
insb
pop
out
lods
dec
out
lods
jle
jl
outsb
out
lods
sahf
out
scas
mov
xchg
xchg
mov
sbb
cmp
jl
popf
push
push
push
sahf
pop
push
dec
lahf
pusha
push
inc
lahf
push
aad
mov
jb
pop
inc
bound
sub
lds
inc
mov
jle
xor
jg
xor
jle
xor
jle
xor
jle
xor
jle
push
add
inc
xlat
and
xchg
lret
mov
out
mov
cmp
es
jl
jo
addr16
pop
repnz
add
push
adc
jnp
dec
sbb
jns
in
jae
stos
xor
cmp
clc
aad
adcl
and
jo
inc
repz
test
out
sarb
ljmp
jae
cmp
jno
push
push
jo
dec
pinsrw
xchg
call
lret
cmp
lret
cmp
js
xor
dec
aas
and
ljmp
in
add
cmp
xlat
pop
sbb
iret
imul
aas
mov
stc
cld
outsb
insb
dec
incb
push
cld
adc
pop
cld
sub
addr16
es
cld
cmp
jnp
lret
cld
shl
cld
fsubp
cltd
cld
aam
mov
cld
clc
out
cld
mul
sar
out
cld
lcall
cld
scas
out
cld
movsb
out
cld
mov
std
pop
dec
and
adc
cmp
jbe
cmp
das
jne
aas
cmp
aas
cld
jne
push
cld
add
dec
cld
sbb
push
cld
push
out
cld
sub
imul
out
cld
xor
jg
into
out
cld
out
cld
shl
popf
cld
call
out
cld
cld
out
cld
mov
out
cld
sahf
out
cld
xchg
out
cld
mov
out
cmp
sbb
adc
ja
sub
aas
xor
aas
cmp
jne
aas
pop
jne
aas
imul
aas
xorl
xchg
jne
aas
test
lea
mov
stos
aas
pop
jne
push
adc
xchg
jl
xchg
lahf
jmp
in
sbb
cwtl
je
cmp
js
xor
jl
xor
jle
xor
jle
xor
jle
xor
loopne
cmp
je
cmp
js
test
mov
iret
mov
shr
nop
aad
jb
cmp
outsb
inc
pop
add
sub
lahf
test
cmp
cmp
jg
leave
mov
out
std
xchg
out
std
lahf
xor
cld
loop
jae
jnp
xor
daa
mov
lds
fwait
sub
sub
xor
outsb
sub
xlat
arpl
andnps
xchg
and
jle
ja
into
int
cmpsl
jb
std
xor
sub
mov
pop
insl
sub
sub
stos
rcrl
enter
in
je
push
scas
aaa
cld
dec
sbb
adc
push
pop
in
test
cmp
xchg
and
push
in
mov
sbb
jae
xchg
dec
jmp
push
mov
mov
fstps
mov
lock
cwtl
int
cmpsl
rorl
sti
out
stos
add
pop
andl
in
xchg
ja
jmp
mov
and
jo
cmp
jbe
cmp
jle
pusha
in
sbb
fcomps
and
jge
repnz
popf
push
push
push
sahf
sub
mov
test
pop
push
sbb
fstpt
shlb
xchg
push
xor
shll
ficompl
xchg
xor
push
adc
and
adc
cmpsl
clc
pushl
add
cmp
scas
push
hlt
ds
int
xor
insl
mov
leave
jb
or
test
push
int3
out
jl
adc
fwait
jo
dec
mov
inc
iret
dec
cmp
faddl
cmp
or
fsubrs
cltd
aas
loope
mov
lea
jmp
xor
cmpsb
fsubrs
mov
in
dec
inc
daa
push
adc
lahf
add
xchg
je
daa
rorb
lds
imul
xchg
add
sbb
aam
jae
pop
das
inc
xor
jo
fnstsw
inc
add
dec
add
mov
jmp
into
repnz
mov
imul
cmp
je
cmp
js
xor
xchg
jne
fcmovnbe
lahf
rcl
lahf
rcl
fstpl
or
hlt
pop
addr16
daa
je
ja
cwtl
int
cmpsl
loop
int3
out
lods
repz
jbe
js
mov
andb
jg
leave
push
fwait
daa
fnstenv
jle
lcall
stc
loopne
iret
stc
pop
les
ss
jl
movsl
rcrb
push
xor
sarl
adc
in
clc
insb
and
cmp
iret
andl
enter
sti
push
adc
adc
mulb
dec
dec
addb
invd
ds
pop
test
ja
add
call
dec
cmp
mov
aaa
in
je
cmp
inc
sbb
sbb
jl
jmp
sti
jmp
iret
cmpsb
and
daa
fimull
inc
dec
sub
inc
rcl
ljmp
mov
es
fwait
andl
cltd
aas
gs
inc
shrl
jecxz
repnz
jle
leave
lret
fwait
inc
stos
int
mov
jg
lds
insb
repz
dec
adc
add
iret
lods
inc
xchg
push
test
ret
jb
inc
xchg
xchg
jmp
pop
jl
pop
sbb
js
sub
jl
pusha
jno
fstl
lds
iret
out
jmp
call
cmp
pushf
loope
and
lock
aam
adc
out
inc
leave
and
notb
mov
jne
aas
cmpsl
inc
cmpb
mov
test
les
icebp
andl
and
shr
xchg
jl
roll
lahf
sub
mov
jns
or
push
xor
scas
cmp
mov
mov
push
xor
push
xor
imul
ss
cmp
jb
sahf
data16
xchg
mov
xchg
stos
call
cld
cld
insb
and
add
fwait
in
pop
jo
leave
scas
cltd
into
lock
and
iret
jo
and
cmp
fildl
cmp
shll
cmp
sbb
xchg
cmp
xchg
xchg
mov
mov
pop
outsl
aad
fldenv
mov
mov
inc
scas
cmp
push
aam
push
test
inc
dec
iret
into
aad
iret
aad
cmpsb
sar
aad
rcrl
and
jp
add
js
dec
push
and
lock
inc
das
push
leave
xchg
jl
push
sub
jno
add
jb
cmp
jo
sahf
clc
pop
cmpsb
inc
js
and
push
in
xor
mov
fcoml
sub
jp
push
mov
daa
sarb
ss
or
nop
dec
fs
shl
and
adc
push
ds
mov
dec
scas
cmp
sub
mov
xor
jbe
sbb
and
js
jnp
jb
mov
pushf
sub
dec
jg
mov
sbb
enter
cmp
cmp
bound
mov
pop
es
inc
les
loope
lret
and
inc
sbb
js
push
ds
jp
xor
js
xchg
mov
scas
xor
and
aaa
mov
ret
loope
jbe
scas
movsb
add
mov
sub
ss
push
data16
insb
aaa
imull
das
cmp
dec
addb
leave
and
in
daa
mov
inc
jne
fadds
inc
sub
dec
outsl
cli
push
aas
pop
xchg
or
and
sbb
pop
dec
fnstenv
or
sub
or
mulb
jo
fisubl
loopne
mov
cmp
jnp
jne
out
mov
cli
aad
iret
fwait
aad
lret
movsl
aad
das
pop
adc
dec
add
push
hlt
mov
loop
stos
cmp
mov
dec
xor
adc
cmpsb
adc
loope
push
cmp
push
loope
mov
out
cld
cmp
inc
sub
rcll
and
push
jle
add
fidivl
ret
push
or
inc
push
lret
jecxz
dec
xor
jae
jbe
outsb
mov
popf
and
pop
mov
mov
inc
bound
xchg
mov
add
and
ljmp
call
addr16
ja
or
sbb
test
fidivs
cmp
repnz
jp
data16
lock
and
xchg
cwtl
mov
clc
mov
sbb
jge
inc
hlt
push
jns
dec
lods
sub
psubusw
out
test
leave
stc
xchg
sar
mov
and
inc
and
jl,pt
xchg
in
in
mov
out
mov
lcall
cmp
and
cmp
xor
insb
jb
jbe
sbb
adc
jb
mov
dec
xor
mov
add
pop
pop
aam
ds
test
push
jne
in
subb
aas
push
mov
adc
loope
mov
leave
push
stos
jbe
mov
jne
push
or
inc
lcall
inc
jae
jp
cwtl
mov
mov
dec
add
sti
pusha
mov
xor
jo,pn
pop
clc
dec
xor
sbb
jbe
xchg
clc
mov
sbb
data16
inc
daa
pop
aam
fcomps
jge
and
mov
push
adc
mov
and
fidivs
push
or
lahf
xlat
dec
sbb
fstpt
jno
dec
inc
dec
call
sub
xchg
sub
aas
popf
jne
aas
shll
es
and
idivb
pop
fstps
jmp
push
rorl
mov
jl
lods
xor
dec
xor
dec
mov
jecxz
stc
push
repz
push
repnz
jl
lret
inc
je
movl
push
je
push
jb
adc
shr
lcall
stc
pop
ret
pop
cltd
dec
jecxz
mov
jno
jge
insb
repz
stc
shl
mov
stc
std
jecxz
aas
xchg
xor
and
mov
pop
cmp
popa
fxch
arpl
push
xchg
xor
dec
inc
inc
cli
movsb
ret
stc
mov
cmp
add
inc
dec
or
push
pop
mov
cld
gs
cld
jno
jno
in
insl
sahf
mov
aad
xchg
jo
daa
rorb
inc
mov
cmp
mov
jmp
lods
pop
stc
test
lahf
cltd
test
cmp
sahf
or
popf
sub
aas
mov
mov
mov
and
notb
aas
add
cmp
cli
push
mov
or
fisubrl
lods
repz
or
push
push
and
scas
push
pop
xchg
aad
xchg
jo
hlt
stos
adc
add
dec
stos
or
aam
add
iret
test
lds
loope
pop
push
fs
and
leave
mov
mov
iret
test
or
push
dec
cltd
ja
daa
in
movsb
ret
sub
fsubrl
sub
dec
sahf
rol
jecxz
daa
jbe
or
pop
sbb
sbb
ja
xchg
lock
and
shr
rcll
dec
and
das
jo
cmp
sub
jle
aam
mov
ret
notl
and
mov
lock
test
add
sahf
pop
sbb
push
test
es
aad
cmpsl
loop
adc
dec
in
inc
clc
ds
xchg
fadds
test
xor
jbe
es
sub
roll
xor
ficoml
xor
jecxz
ret
ss
sbb
jl
popf
and
pop
pop
popa
xchg
dec
loope
mov
mov
cmp
jae
pop
fs
std
xabort
clc
cmp
xlat
push
sbb
lret
add
pop
loopne
ds
ret
mov
adc
pop
and
stos
outsl
mov
shll
sub
mov
pop
daa
dec
ret
inc
cld
xchg
push
and
loopne
bound
popf
or
out
mov
push
push
mov
jmp
cli
clc
or
sbb
js
xchg
xor
data16
lahf
loope
cs
push
pop
inc
pop
xlat
and
das
xor
popf
xchg
mov
sbb
mov
jmp
fcmovne
into
nop
dec
mov
fisubs
cmp
jb
or
inc
push
arpl
and
out
stos
or
inc
subl
cmc
jle
mov
mov
mov
out
mov
push
push
mov
xorl
insb
call
mov
cld
xor
sbb
inc
rcrb
bound
mov
jle
stos
mov
ljmp
jecxz
inc
roll
insb
es
test
popf
and
lock
call
push
popl
movl
incl
jg
mov
xor
dec
mov
imul
cmp
bnd
das
cmp
push
das
clc
jge
push
shrl
mov
mov
stc
cs
xor
sub
std
pushf
mov
mov
xor
andl
les
cmp
jno
sub
je
sti
jae
push
mov
out
mov
cld
or
ret
jl
xchg
ret
stos
pushf
sti
push
mov
inc
cmp
adc
cmp
ffreep
lock
adc
div
xchg
sub
mov
lock
lock
in
dec
xchg
sub
xchg
ret
and
pop
cmp
mov
dec
add
jo
mov
mov
xchg
dec
sub
iret
iret
xchg
lea
sbb
fstps
mov
mov
jp
fadds
adc
push
unpcklps
push
sti
push
xlat
and
or
loop
mov
fs
adc
es
sbb
das
mov
pusha
mov
and
shlb
add
xor
add
pushf
mov
nop
xchg
fdivs
sbb
dec
push
lcall
mov
add
push
mov
stc
and
dec
addr16
add
ret
pop
clc
inc
dec
stos
lods
push
jae
pusha
inc
scas
and
dec
push
and
loopne
ret
fcmovbe
test
and
pusha
push
mov
std
lcall
pop
and
pop
cmp
mov
hlt
ljmp
in
shll
pop
lds
and
ds
jnp
leave
nop
push
xor
fiadds
repz
jmp
add
or
notb
cld
mov
enter
test
xchg
mov
add
cmp
loop
push
dec
or
ret
iret
rolb
dec
or
clc
and
sbb
cmp
sbb
cwtl
and
fcmovbe
test
iret
rolb
out
ja,pn
xchg
js
shrl
jnp
je
movsl
xor
jle
xor
pop
and
mov
xor
jmp
insb
sub
test
mov
cld
out
lahf
lcall
xor
and
subb
and
xchg
mov
lcall
add
ret
repz
jg
sbb
lahf
fs
mov
orb
leave
leave
dec
cmp
fldenv
int
or
push
js
mov
push
enter
icebp
test
leave
sbb
pusha
dec
mov
jl
and
fs
lret
sub
xchg
ret
shl
or
cmp
xchg
into
aam
aas
in
and
mov
ficomps
fxtract
fsubrs
xor
cmpsl
int
out
aaa
mov
sub
rorl
add
sahf
xor
push
push
xchg
popa
add
cltd
leave
mov
stc
pushl
clc
es
push
mov
xor
pop
cmp
push
mov
add
jbe
sahf
xchg
cs
les
xchg
lcall
nop
xchg
daa
ds
xchg
cld
cmc
ja
ds
inc
sbb
push
pop
repz
xchg
sbb
mov
add
jecxz
pop
cmpsb
xchg
mov
fsubs
dec
add
sbb
and
sbb
xlat
inc
sbb
mov
push
sbb
lret
pop
sub
xor
sbb
sbb
clc
sub
jb
jne,pt
shlb
shl
xchg
andb
sbb
in
jmp
push
dec
or
mov
or
inc
dec
and
adc
mov
xor
inc
inc
jp
xlat
jle
loope
mov
adc
or
sub
ret
inc
lret
in
push
call
push
push
xor
dec
xchg
fs
lea
cmp
dec
call
add
lret
test
and
push
jo
insb
jae
mov
pop
mov
add
imul
cmp
xor
xlat
es
loopne
shll
and
mov
aas
inc
sub
iret
inc
xchg
and
add
inc
insb
and
xchg
cs
dec
subb
sarb
sub
xor
dec
aas
jle
movsl
inc
in
mov
and
mov
bound
sub
push
pusha
sub
inc
xchg
or
dec
cmpsl
int
sahf
xchg
loopne
fcmovnb
xor
bound
xchg
xchg
mov
adc
shl
ror
aaa
nop
ret
cmp
dec
roll
addb
fwait
xchg
fldcw
stos
stos
jmp
or
pop
clc
pop
popa
jp
and
daa
cmc
adc
jp
or
stc
cmpsb
inc
cmp
xchg
push
daa
adc
mov
mov
and
int
push
pusha
into
loopne
jmp
test
jg
into
subl
mov
xchg
cmpsl
dec
int3
fcmovu
mov
mov
pop
nop
pop
mov
cmp
sub
xchg
movsl
adc
dec
mov
mov
shrb
popf
push
pop
xchg
mov
adc
adc
leave
inc
push
mov
mov
sbb
inc
into
cmp
fsub
cmp
int3
lahf
mov
shlb
mov
push
cmpsb
cmp
add
jg
and
clc
lods
psraw
pop
jo
cmp
xchg
xor
out
mov
lret
aas
je
and
xchg
lret
lock
cmp
aas
push
inc
pop
js
jae
lcall
lock
fidivs
int
mov
popf
sub
and
js
dec
scas
popf
daa
fisttps
jo
sbb
lods
outsl
popw
in
std
mov
mov
xchg
shl
in
stos
ss
rcr
ljmp
adc
xchg
rcrb
ret
fs
outsb
push
xor
adcl
aas
dec
cli
add
nop
not
pop
inc
dec
dec
cbtw
pusha
push
inc
cmp
aas
fadd
iret
cld
test
lret
xchg
popw
cmp
push
fsts
subl
repz
mov
repz
out
test
mov
les
lods
jbe
inc
popa
stc
ss
and
bound
mulb
cld
fnstcw
cmp
push
sti
pop
iret
inc
adc
aad
jle
loop
sub
lods
ror
repnz
and
add
aad
ss
push
mov
adc
sbb
std
jl
jbe
inc
add
jno
leave
es
mov
cmp
out
scas
mov
sub
push
inc
xchg
fcoml
push
in
cmp
jo
jge
cmp
jno
sub
out
std
inc
in
std
push
insb
push
stos
lcall
mov
mov
test
add
adc
xlat
int
jae
add
add
add
mov
add
fwait
add
mov
or
add
cmpsl
jl
push
jae
xor
add
jae
pushl
add
hlt
xor
addr16
add
jbe
in
addr16
inc
mov
push
or
sbb
rcll
inc
add
lock
add
jae
sbb
jne
or
ja
test
mov
add
out
ss
cmp
mov
push
in
mov
cwtl
loopne
push
addr16
cmp
clc
inc
inc
mov
inc
mov
xor
inc
and
push
cwtl
push
cld
xchg
adc
add
ja
test
verr
jae
jge
mov
cld
outsl
clc
dec
jne
fcos
add
jae
jne
cmp
outsl
fwait
jl
addr16
dec
xchg
adc
ret
mov
adc
jb
in
xor
and
add
and
andl
dec
movsl
pop
data16
nop
push
lock
cwtl
loopne
push
addr16
cmp
clc
inc
inc
mov
inc
add
repz
jae
call
jp
dec
adc
mov
add
xchg
add
loopne
pop
addr16
adc
mov
scas
mov
and
in
adc
jnp
pop
imul
mov
push
or
xor
and
add
mov
mov
lahf
or
clc
push
arpl
je
fs
mov
or
jo
cmp
mov
push
and
jp
in
inc
or
adc
add
push
adc
and
mov
add
jae
and
cwtl
mov
rorb
cld
aaa
mov
cwtl
loopne
andl
mov
es
push
movsl
mov
cwtl
mov
in
es
in
add
sti
jae
push
out
ss
add
cli
orl
cwtl
add
and
cmp
mov
add
dec
add
incb
jae
lcall
dec
add
addr16
inc
cmp
orl
bound
fwait
mov
mov
cmp
arpl
lcall
dec
add
addr16
inc
dec
cli
orl
push
add
addr16
cmp
mov
mov
jl
mov
aas
add
addr16
add
addr16
ret
push
mov
add
shlb
inc
addr16
or
clc
inc
sub
data16
pop
sbb
jg
js
ljmp
cld
addr16
dec
roll
jmp
jp
cmp
push
fistl
imul
out
xchg
orl
clc
jne
fs
lea
pop
clc
ss
jnp
and
push
or
push
jo
add
enter
jae
cld
addr16
or
shl
inc
jmp
in
push
cld
and
clc
jbe
fs
or
adc
xchg
outsl
clc
add
fs
ja
and
pop
and
in
xor
xlat
mov
push
add
addr16
add
jae
pop
push
mov
jae
jae
inc
inc
rolb
xlat
arpl
adc
add
add
aam
fldpi
add
pop
flds
ja
inc
sub
jmp
lret
mov
leave
sarl
call
dec
jae
add
jge
add
push
fwait
jbe
ja
mov
xor
out
fwait
mov
xor
pop
mov
std
add
adc
ret
and
call
mov
jb
mov
jl
mov
jl
pop
mov
inc
outsl
popa
push
and
je
adc
pop
jb
adc
add
fs
push
adc
adc
sbb
adc
insb
arpl
pop
outsl
jb
and
popa
and
gs
and
popa
je
add
add
je
and
imul
pop
add
add
or
add
pop
insb
add
add
addr16
add
add
addr16
add
add
addr16
add
add
add
add
sbb
mov
or
outsb
pusha
subb
sbb
cli
xor
xor
lret
cmp
push
test
push
insl
cmp
outsb
in
xchg
push
inc
cmp
jge
clc
xor
sbb
jmp
mov
add
cmp
daa
or
push
mov
test
leave
ret
fmuls
xchg
addb
call
clc
scas
mov
shll
push
push
std
xchg
rol
call
mov
push
sub
scas
jbe
adc
or
fdivrl
je
test
adc
inc
scas
push
fcmovnb
out
add
lea
pop
ret
sbb
ficompl
dec
ss
mov
inc
mov
or
imul
inc
inc
in
loopne
int
adc
cmc
subl
or
mov
inc
adcl
in
test
push
addr16
nop
add
cmpsb
test
pop
ja
push
outsb
sahf
mov
iret
xchg
cld
or
cli
lods
decb
sarb
out
pusha
negb
iret
cmpsl
cmp
in
fiadds
add
push
dec
jp
scas
cs
pushf
adc
mov
push
inc
mov
cwtl
sbb
sbb
cmpsl
or
inc
mov
cmp
adc
push
test
push
pushf
xor
mov
sahf
inc
jecxz
stos
dec
xchg
add
outsl
adc
rcrb
inc
sbbl
pushf
jb
cmpsl
push
es
push
or
cld
icebp
pop
pop
iret
fstl
dec
fwait
imulb
fildll
push
pushf
xor
sbb
test
inc
dec
test
xchg
mov
loopne
add
es
mov
mov
mov
inc
ret
int
in
or
push
sbb
jp
lret
fistl
sub
adc
sbb
jle
or
repnz
adc
mov
pop
push
lods
xchg
cli
mov
cmpsl
jns
icebp
mov
lahf
mov
inc
sbb
scas
adc
xor
clc
pop
xor
xor
frstor
aas
xchg
and
xchg
dec
sub
cmp
sbb
lds
test
enter
xor
ds
sbb
aas
inc
in
adc
push
push
mov
add
sti
push
fcomps
mov
scas
mov
mov
jno
les
mov
fisttpl
dec
test
ja
subl
jns
mov
ljmp
outsb
inc
cmp
out
inc
mov
mov
lret
mov
outsb
mov
jbe
mov
sbb
test
leave
mov
xchg
into
fisttpl
mov
pop
jb
in
cmpsl
and
ss
push
dec
or
jb
xor
mov
leave
icebp
fcomi
es
dec
fisttps
ds
or
cli
fsubrp
into
jo
inc
lods
jl
inc
cltd
dec
inc
pop
xchg
mov
jmp
dec
or
xchg
pushf
jno
inc
inc
jb
sbb
push
stos
add
xor
jp
aad
sub
and
pushf
lock
lret
inc
push
dec
or
add
ret
or
and
sti
ljmp
xchg
sarb
sub
add
mov
dec
push
fdivl
inc
sarb
xchg
mov
or
rcrb
adc
cltd
cmp
mov
or
xchg
mov
inc
lds
pusha
add
outsb
dec
arpl
mov
xchg
cmp
dec
loop
pop
jmp
lahf
xor
pop
jae
loope
pop
mov
mov
push
aas
add
bswap
mov
xor
in
lahf
lret
aas
mov
inc
jge
add
add
add
push
add
add
add
addb
add
add
add
xor
add
add
add
or
add
add
pusha
mov
add
add
add
add
