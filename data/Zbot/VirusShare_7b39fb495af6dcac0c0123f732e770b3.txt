lcall
add
add
out
or
sahf
adc
ret
and
mov
pop
ret
inc
and
insb
ja
pop
pop
leave
ret
pop
ret
and
adc
adc
ret
mov
ret
nop
dec
pop
adc
and
pop
pop
add
and
imul
dec
adc
dec
dec
and
sti
ja
sub
and
and
dec
or
and
adc
jg
incl
and
adc
sbb
and
adc
insb
sbb
adc
and
sbb
add
and
mov
and
add
sti
inc
inc
nop
adc
push
in
mov
adc
or
push
adc
inc
mov
and
adc
and
xor
adc
sub
add
sbb
sub
outsb
cmp
and
outsb
ret
int3
adc
and
dec
mov
mov
and
clc
mov
adc
fimull
inc
pop
and
add
fsts
and
cmpsb
mov
add
pop
enter
es
inc
push
and
add
insb
jb
add
adc
fisubl
lcall
inc
fbld
mov
loopne
pop
mov
and
movsb
pusha
fcmovne
jp
cltd
and
and
mov
dec
add
dec
cli
jmp
adc
inc
add
addb
fcmovnu
jbe
and
sub
and
adc
adc
sub
ja
inc
or
inc
inc
push
addb
mov
and
dec
mov
dec
adc
test
add
pop
and
and
add
adc
and
test
data16
insl
out
pop
nop
cmp
imul
into
mov
adc
cwtl
adc
add
test
lcall
dec
inc
dec
add
and
push
and
std
adc
adc
adc
and
and
pop
sub
adc
les
movsb
andb
push
inc
mov
pusha
or
mov
mov
pusha
jbe
mov
push
dec
sbb
adcb
lods
pop
sbb
nop
mov
mov
sbb
int3
mov
add
xor
push
inc
mov
push
mov
pushw
mov
cli
fadd
or
or
xor
dec
and
inc
xor
adc
ret
xor
lcall
mov
add
add
mov
cmp
push
and
or
data16
and
add
inc
adc
sbb
push
adc
lods
test
inc
je
add
shll
call
imul
sub
or
ds
and
or
add
out
add
loopne
push
shrb
sbbl
inc
loopne
into
sbb
xabort
inc
xchg
scas
sbb
dec
orb
sub
pop
mov
rcrb
add
mov
and
sahf
cltd
dec
movb
pop
sub
sub
mov
pusha
xor
loopne
lcall
repnz
xchg
mov
sahf
jbe
pusha
dec
pusha
add
jle
call
or
xor
hlt
push
dec
cld
xor
add
push
imul
mov
add
sub
movsb
add
mov
and
out
push
pop
roll
xchg
and
pop
inc
pusha
pop
add
mov
cs
jle
cs
cmp
push
mov
inc
movsl
int3
ss
mov
mov
rolb
mov
sbbb
cltd
insl
je
movsb
mov
adc
fadds
jl
out
mov
jle
test
or
data16
in
int3
loopne
js
push
outsb
or
nop
xchg
push
subl
jo
movb
ljmp
out
fcompl
testb
testb
add
jnp
orb
je
sar
pop
sbb
rolb
xchg
lcall
je
dec
push
xchg
xor
pushf
inc
in
sbb
mov
push
inc
mov
inc
rclb
cli
popa
push
subl
add
mov
leave
icebp
aam
fcoms
or
xchg
test
push
or
push
insb
mov
pusha
sub
cwtl
into
lods
lcall
int3
xchg
and
or
pusha
adc
sub
xor
sub
pop
test
xor
adc
fmulp
scas
or
dec
push
cwtl
and
pop
xor
push
pop
repnz
test
fcmove
or
pusha
pop
cmp
adc
cwtl
test
add
scas
xchg
pusha
clc
or
enter
fsubr
jno
adc
orb
mov
cs
push
cmp
mov
sbb
lcall
push
nop
add
xchg
adc
jp
test
adc
mov
mov
add
lods
and
je
shll
push
pop
adc
push
andw
mov
or
ds
ror
sub
js
or
and
add
sbb
xor
add
pop
gs
push
daa
pop
sbb
pop
cwtl
push
sub
xor
loop
push
test
xor
add
mov
push
js
jo
in
inc
aam
sub
xor
or
adcb
call
ret
add
xchg
ss
int3
pop
mulb
pop
xor
dec
add
adc
movsb
cltd
ret
mov
dec
dec
inc
in
stos
pusha
movd
push
adc
flds
xor
lret
mov
sub
pusha
cmp
icebp
hlt
xor
sub
loopne
mov
dec
jbe
je
push
add
xor
test
loop
popa
xchg
jp
dec
add
add
fcomp
lods
ret
outsb
push
and
in
mov
push
xchg
xor
lahf
mov
pop
subl
cmp
cmp
xchg
add
pusha
scas
push
xor
and
nop
test
addr16
dec
fs
adc
mov
jmp
adc
push
xchg
mov
pop
inc
push
or
shlb
push
js
and
sbb
loop
adc
dec
js
mov
pop
sbb
mov
cwtl
add
jbe
add
dec
add
fisubl
xor
sub
addb
xor
popa
mov
inc
into
shl
pop
or
ss
xorl
fidivrs
aam
test
push
movsb
push
popa
jbe
pusha
lods
push
stos
mov
sub
testb
cwtl
inc
ljmp
cwtl
rorl
or
adc
xchg
ret
js
ficoms
push
testb
mov
push
xchg
xor
lods
fdivs
and
pop
lods
add
and
pop
int3
stos
test
cltd
test
mulb
rcrb
cwtl
rcr
call
and
jl
je
and
xchg
ret
push
inc
xchg
pushf
mov
push
add
test
cmp
dec
sub
hlt
mov
enter
fadds
ror
in
loopne
xchg
xchg
or
and
fmull
adc
jo
adc
xchg
into
nop
in
scas
ret
xchg
lcall
cltd
lret
lret
add
sbb
sti
iret
push
cmp
in
jne
in
inc
sahf
test
cs
adc
xor
ljmp
rol
lock
hlt
push
sbb
xlat
imul
push
fsub
pusha
lret
lcall
fdivrl
dec
lret
in
jl
je
dec
loop
mov
fmulp
sub
adc
or
add
call
inc
addl
inc
inc
lret
add
xor
inc
and
sub
sub
mov
ret
push
subl
inc
mov
sub
sub
add
ret
push
sbb
int3
mov
cmpb
push
cwtl
add
cmp
or
pop
add
or
pop
xchg
or
or
or
rorb
and
xchg
loopne
add
mov
cmp
packssdw
mov
js
test
test
cld
inc
inc
push
push
in
xor
add
test
or
cwtl
enter
xor
push
aad
inc
xchg
add
dec
or
sub
xorb
pop
or
jl
adc
inc
fcomps
nop
sbb
sbb
dec
jp
ret
push
dec
cmp
sahf
lcall
cmpsl
add
adc
xorb
sub
pop
and
and
ret
add
pop
adc
shl
add
sub
lock
pushf
mov
adc
repnz
sbb
sub
mov
cmp
clc
addb
mov
out
out
push
inc
add
dec
or
add
sub
jle
in
sub
xor
xor
mov
adc
cmp
pop
fmull
sbb
lret
and
and
orl
enter
ss
adc
or
jmp
jl
cmpb
bound
mov
into
dec
daa
js
ljmp
dec
sbb
nop
push
ret
push
push
into
inc
cwtl
pop
inc
jp
sbb
xor
scas
stos
cmp
rolb
mov
fsubl
fsub
sbb
cltd
imul
sahf
nop
nop
popf
pusha
add
sbb
sbb
stos
pushfw
inc
inc
lods
adc
pushf
dec
inc
dec
jo
or
push
dec
enter
aam
add
push
cmpsl
or
in
and
mov
mov
pop
push
xor
jne
jo
insb
add
xchg
cwtl
mov
xchg
or
push
and
cld
ficoml
push
in
pusha
jl
stos
mov
add
add
js
and
adc
mulb
mov
in
repnz
addb
addb
or
or
push
scas
insb
jle
add
inc
sbb
clc
es
push
jnp
pop
cmpb
les
dec
cld
inc
mov
pop
push
out
repnz
adc
dec
cmc
mov
xor
int3
sbbb
pop
pop
mov
pop
fldenv
push
add
cs
add
mov
push
push
add
popa
shlb
push
push
cmp
mov
mov
testb
pusha
adc
enter
add
outsb
scas
pop
aad
add
cmp
test
jno
or
sub
pop
rcrb
movl
jno
xchg
mov
data16
fisubrs
mov
or
orl
sub
rolb
jno
or
bound
sub
add
mov
sahf
push
repnz
syscall
or
ss
js
js
pop
stos
pop
outsb
and
into
jp
dec
bound
push
mov
js
loop
and
cmpsl
push
pop
scas
sbb
push
dec
adc
push
adc
pop
inc
cld
and
pop
mov
adc
xor
into
icebp
mov
inc
insb
push
push
outsb
les
test
push
xchg
sbb
or
mov
and
lods
orb
xor
or
mov
xor
xor
mov
or
cwtl
mov
cmp
clc
push
adc
pushf
adc
cmp
add
ret
in
loopne
xchg
and
lcall
add
movsb
inc
push
enter
sarb
or
xor
inc
les
cli
and
out
or
inc
mov
flds
push
nop
popa
add
add
sub
or
rorl
enter
or
rolb
push
adc
sbb
adc
adc
fcoml
or
addb
cs
ja
cmpsl
mov
inc
int3
push
jb
and
jecxz
mov
aam
sbb
clc
xor
enter
and
sbb
inc
xchg
testb
ret
mov
js
stos
mov
push
xchg
rorb
push
insb
rolb
pusha
scas
jbe
int3
sbb
data16
add
adc
or
fdivl
push
adc
and
in
or
roll
pop
or
test
jno
mov
daa
dec
cmp
add
push
mov
dec
push
or
aad
inc
lods
shlb
inc
add
dec
mov
mov
enter
sbb
pushf
jl
into
fdivs
inc
jnp
lock
jl
jnp
fsubr
push
push
mov
mov
dec
nop
adc
dec
out
mov
xorb
inc
mov
or
xchg
and
lods
cmpsb
push
and
es
push
sbb
and
incl
and
and
add
sub
scas
inc
adc
mov
out
add
mov
neg
inc
push
and
jmp
push
mov
jae
inc
cld
add
movl
adc
jle
std
aas
and
jle
dec
mov
or
stc
mov
mov
rorb
out
cmp
xor
mov
mov
jbe
or
sub
js
pop
fsubl
xrelease
mov
and
rcrl
fiadds
idivb
sbb
xor
roll
xor
sti
jnp
sbb
jle
xor
add
mov
cmp
pusha
data16
dec
mov
ds
outsl
out
jbe
not
adc
dec
jb
add
add
outsb
xchg
and
lea
sbb
push
or
mov
mov
out
cld
push
cmp
cld
sbb
add
sbb
fidivs
jg
fiaddl
xor
aaa
mov
xchg
adc
fcompl
pop
outsb
in
mov
mov
add
fmulp
ja
sahf
mov
data16
adc
call
sahf
cwtl
jecxz
add
mov
inc
cmp
pusha
pop
data16
js
inc
cmp
push
js
iret
popa
and
adc
notl
test
adc
inc
xorl
daa
lock
xor
mov
pusha
push
adc
add
imulb
fstl
or
add
mov
iret
sbb
xchg
adc
add
neg
dec
cld
clc
jo
imul
adc
or
inc
adc
in
cmp
in
shrl
mov
out
mov
fisttps
out
rcr
inc
fsts
and
fadds
fistpll
xchg
sbb
push
add
dec
lock
lods
pop
fnstsw
fcomps
fistps
stc
push
enter
or
inc
push
fisubrl
daa
mov
push
xor
sbb
add
movsb
add
loope
pop
cmpsb
mov
into
stos
cld
ljmp
push
out
ficomps
fdiv
jge
inc
mov
adc
fildl
gs
movsb
cmp
sbb
shl
mov
stos
fs
add
out
sub
or
push
cwtl
loopne
push
aam
or
pusha
clc
mov
jle
sbb
push
cld
sbb
inc
shlb
cli
icebp
rcrl
mov
in
or
in
pusha
xorb
fisubrs
mov
jecxz
add
fcmovnbe
or
jecxz
xchg
rol
loope
mov
dec
mov
ret
dec
aad
or
push
push
mov
mov
or
hlt
mov
mov
imulb
rclb
add
jmp
and
dec
sbb
mov
in
jg
movsb
les
xor
and
aam
rcr
hlt
fiaddl
fsubrs
pusha
cltd
mov
jmp
test
ja
mov
maskmovq
notl
ja
inc
or
inc
cmp
and
add
push
cs
das
push
pop
cmp
or
fsubrl
sub
adc
pop
push
mov
mov
push
push
outsl
sub
call
and
rcl
pop
sub
nop
nop
adc
add
push
mov
gs
int
xlat
and
sub
xlat
inc
xchg
mov
lcall
cmp
xchg
xchg
fdiv
xchg
push
imul
pop
xor
hlt
sub
push
movsb
es
dec
pop
loopne
add
ret
int3
push
add
xor
outsb
pop
lahf
sub
mov
or
adc
jp
inc
fsts
movsb
add
mov
mov
dec
dec
push
xchg
les
shr
sti
dec
sub
mov
pushf
and
ret
xchg
adc
inc
movhlps
outsl
add
sbb
ret
cmp
clc
jle
clc
adc
and
jo
cmp
shll
fcom
pop
xor
xchg
out
add
cwtl
into
mov
mov
add
pusha
pop
or
push
mov
mov
mov
clc
mov
push
mov
rorb
daa
add
rclb
data16
lcall
pusha
and
jbe
adc
mov
mov
xchg
fcoml
cld
bsf
cmp
jg
call
dec
sbb
pop
test
and
fadd
clc
sub
mov
idivb
sbb
ss
sti
sbb
setl
or
sub
xor
insb
fiaddl
sti
pop
jp
mov
enter
pop
cmp
add
int3
push
ss
rorb
stos
sbb
sbb
in
sub
xchg
push
mov
out
sbb
icebp
push
cli
dec
push
push
call
mov
sub
daa
lods
adc
cmp
dec
les
jg
cmp
push
fdiv
aas
xlat
dec
sbb
icebp
loopne
stos
mov
ret
loopne
imul
shll
dec
and
add
sar
and
inc
shlb
test
adc
popa
hlt
pusha
mov
sub
test
rolb
sub
lret
pusha
out
dec
mov
ret
push
push
adc
add
mov
sub
mov
sub
int3
bound
aam
ret
aas
mov
jle
add
addr16
adc
mov
daa
loopne
add
pop
scas
mulb
pop
xlat
and
xchg
inc
or
testb
notl
shl
aaa
aam
fildl
jg
clc
add
pop
sbb
dec
add
inc
popl
in
insl
cmp
sbb
adc
aam
inc
mov
add
cmc
jbe
pop
adc
into
xchg
pop
clc
jmp
add
and
push
stos
in
notl
and
add
aam
insb
fcmovne
into
add
xchg
push
lds
jecxz
xadd
pop
in
js
dec
in
inc
sti
mov
and
cwtl
clc
arpl
mov
sbb
int3
sub
cmovg
sub
pop
bndstx
pop
push
in
push
adc
popa
dec
sbb
xchg
mov
cmp
faddl
rorl
pop
loop
pop
add
sub
add
cmpsb
or
fimull
push
mov
dec
cmp
cwtl
sub
int
push
add
push
loopne
inc
je
les
mov
mov
pop
loopne
addb
jmp
xor
pop
push
add
and
inc
orb
push
loopne
clc
add
aam
repnz
dec
adcl
cmc
jecxz
inc
inc
ficomps
adc
mov
push
add
xchg
cmp
stc
test
pop
inc
sti
stos
add
jno
jp
std
inc
mov
ret
and
push
mov
loopne
aam
les
loopne
aam
aam
lock
loopne
mov
in
sbb
fisttps
adc
loop
jbe
loope
or
adc
mov
nop
sbb
mov
clc
and
adc
or
xor
mov
dec
push
fimull
xlat
cmpsl
dec
jl
iret
inc
test
mov
add
jae
mov
adc
dec
mov
dec
sbb
jo
adc
or
addl
xor
mov
icebp
push
clc
push
adc
add
roll
insl
adc
mov
out
imul
mov
push
dec
pop
fs
pop
outsl
mov
add
and
popa
cltd
jns
rol
scas
lret
dec
mov
xor
mov
jne
cmp
xchg
movhps
js
negl
xchg
mov
mov
pop
pop
cmp
cmpsl
arpl
fisubs
or
ja
add
jg
sub
cld
out
out
scas
in
and
mov
and
inc
cmpsb
jb
in
adc
add
xchg
push
in
inc
push
sar
adcb
cmp
test
test
loope
pop
push
sub
jmp
inc
jp
shlb
shr
adc
sub
icebp
xor
mov
cmp
jae
add
std
ret
mov
in
sbb
shrl
pop
cli
dec
shlb
and
bound
ret
ss
add
xor
xchg
lcall
add
add
mov
clc
push
xor
test
out
stos
mov
pusha
loope
push
push
push
mov
ret
stos
push
push
fsts
add
jp
fimuls
jae
rcrb
cmp
dec
sarb
hlt
ljmp
add
aaa
sub
push
sti
sbb
jl
lcall
sarb
or
jge
push
clc
xlat
sbb
loop
fs
cmp
mov
fcom
push
out
mov
loope
push
add
cmc
sbb
push
pop
flds
ds
fldl
cmp
icebp
test
mov
push
les
cmpsb
int3
xor
xorb
mov
shll
mov
int3
adc
cmc
ds
inc
or
test
aas
sbb
adc
pop
push
in
xor
xchg
fidivl
jle
push
sub
push
cmp
fmull
pop
sarb
xor
add
test
add
dec
cmp
xor
push
mov
clc
loopne
int3
icebp
push
int3
add
xchg
inc
lods
int
jge
sbb
nop
adc
sbb
mov
test
loop
jb
push
pushf
mov
pop
push
int3
sub
jmp
pop
das
push
addb
mov
mov
jb
xlat
mov
add
test
mov
jp
jno,pn
aam
and
push
cmpsl
push
mov
adc
enter
and
adc
idivl
sti
mov
mov
cld
mov
dec
mov
rcr
dec
cmpsb
add
sub
xor
add
jbe
lock
jns
inc
in
bnd
mov
or
test
dec
dec
jne
stos
sub
mov
pop
aas
shrb
lea
push
pushl
push
pop
mov
push
lea
push
call
xor
outsl
adc
add
fldenv
std
mov
xchg
neg
pop
inc
dec
imul
ret
daa
or
pop
arpl
and
cld
push
dec
or
aaa
sbb
inc
mov
dec
add
fldt
shrb
lret
pop
jge
sbb
jne
cmp
push
orb
and
inc
mov
inc
mov
inc
pop
cmpsl
add
cmp
push
mov
mov
xor
jecxz
cmp
inc
bound
jmp
fninit
fwait
xor
test
pop
jmp
add
inc
sub
sbb
mov
sbb
in
mov
xorb
fsubl
jmp
add
add
adc
inc
pop
jl
pop
sbb
dec
loop
hlt
sbbl
mov
sbb
push
mov
cmc
sub
inc
xchg
xor
xchg
add
lods
sti
psubq
pushf
dec
inc
jmp
jmp
push
mov
cld
sbb
or
testl
repz
or
je
adc
jmp
hlt
adc
fistps
mov
mov
xor
pop
or
pop
ret
nop
loopne
fldcw
andb
cmp
scas
mov
fs
hlt
data16
mov
xor
or
or
fs
incb
sub
jmp
jmp
dec
outsb
bound
int3
mov
loopne
mov
fsubl
push
sub
fisttpl
mov
mulb
repnz
fldcw
sbb
rcll
adc
mov
repnz
sbb
lret
inc
shlb
xor
xlat
mov
or
inc
lcall
cmp
xchg
mov
xor
and
pusha
pusha
aas
daa
xor
lods
xchg
xor
push
nop
push
ljmp
mov
dec
out
and
or
outsl
movsl
push
jle
adc
dec
mov
dec
prefetchw
mov
nop
or
fs
mov
push
mov
daa
ret
in
xchg
daa
jbe
lea
into
dec
fnstsw
shll
popl
sbb
mov
in
and
sbb
add
insb
test
fwait
bound
sbb
cli
ret
sub
aad
push
in
je
js
pusha
xor
lods
repnz
fwait
pop
sbb
sbb
sbb
mov
ret
arpl
lock
adc
test
rolb
and
jb
mov
shll
loope
add
add
xchg
add
fiaddl
mov
icebp
cmp
push
add
sub
cmp
in
xchg
cmp
loopne
mov
jns
inc
pxor
sbb
aas
aas
loope
roll
push
and
and
outsb
xchg
pop
pop
and
mov
jo
xor
mov
lcall
inc
push
cltd
pop
lds
add
push
pushf
js
popf
outsl
push
jne
add
je
fiaddl
dec
cli
mov
shlb
sbb
sarb
out
shrb
mov
add
jl
mov
add
dec
jo
movsl
mov
add
ret
outsb
cmp
jle
or
ja
rcr
jns
adc
xor
xlat
ret
call
cwtl
icebp
pop
cmp
cmp
jl
stos
popa
add
ficompl
enter
push
int
popa
xor
jge
add
out
add
clc
rcrl
push
test
sbb
and
and
mov
add
and
call
mov
lea
sub
cmpsl
loopne
andl
pusha
ret
out
test
dec
sub
shrl
cmpl
es
jp
inc
jge
adc
aaa
push
nop
or
add
cli
rorb
mov
push
or
out
test
fisttpll
xchg
cmp
push
xor
minps
ficoml
mov
f2xm1
ja
adc
sbb
push
mov
xor
sub
fmuls
test
fbld
int
xchg
jbe
push
mov
sbb
and
add
sub
sbb
pop
and
daa
or
clc
enter
es
daa
push
xor
jno
lcall
or
inc
rcll
pusha
repnz
adc
movsb
add
test
pushf
mov
mov
loop
adc
dec
int3
sub
ficoml
inc
jb
cmp
or
adc
ret
fiaddl
sarl
pop
jo
or
arpl
aam
pop
test
sub
cmp
out
adc
es
sarb
inc
inc
inc
adc
jl
orl
andl
pop
inc
inc
adc
dec
or
pop
mov
jl
mov
cwtl
mov
inc
ss
cli
call
mov
lret
xlat
sub
adc
lea
rclb
mov
xchg
lahf
call
shr
add
cs
sbb
in
sub
add
enterw
mov
js
push
or
popf
sbb
test
pop
jge
jne
cmp
mov
mov
or
lds
dec
add
jg
or
push
push
mov
es
pop
lock
rclb
xor
addl
icebp
jo
mov
stos
xor
dec
mov
cmp
inc
or
cmpl
mov
sub
test
je
dec
loopne
dec
stos
mov
cmp
arpl
in
jmp
cmp
xor
lock
or
sub
xor
push
mov
pop
gs
roll
jle
fstl
xor
test
dec
dec
pop
popa
fadd
pop
jo
popf
arpl
in
sbbl
mov
and
lret
loopne
mov
or
pop
mov
and
push
inc
lock
jmp
cmp
std
int
sbb
popa
adc
sbb
addr16
in
loopne
sarl
mov
push
mov
inc
cmp
loop
lret
hlt
push
cs
hlt
sbbb
mov
inc
andl
push
lods
rclb
pop
xor
sub
out
shr
xor
jecxz
out
pop
jle
inc
or
xor
mov
fnstenv
mov
or
push
add
add
lods
mov
sub
mov
and
push
sbb
fucomp
cli
lock
in
sub
in
bnd
pop
and
pop
jmp
out
rclb
loopne
jmp
adcb
cli
call
and
inc
aam
aaa
ret
xchg
inc
aam
inc
es
or
jne
xchg
pop
loopne
add
add
inc
and
test
clc
add
and
mov
xrelease
cmp
pop
add
push
xchg
scas
add
jne
mov
push
inc
ret
popl
mov
cli
cld
jecxz
int
add
jp
mov
loop
and
insl
outsl
and
or
rolb
aam
fiadds
sbb
stos
xchg
fldl
sbb
aad
mov
push
dec
mov
je
pop
ljmp
pop
aas
or
mov
repnz
mov
xor
mov
mov
xchg
clc
fcmovnb
jns
stc
shl
sub
jle
cld
jecxz
cmp
into
sbb
dec
inc
cmp
xor
xchg
push
mov
loopne
pop
fmull
lock
clc
leave
mov
test
rcll
dec
pusha
roll
mov
js
or
cmpsb
and
jae
lock
push
jnp
shlb
mov
push
sbb
jp
mov
adc
pop
add
cltd
adcl
ss
xor
dec
dec
clc
xchg
sbb
cli
push
aas
test
mov
mov
mov
pop
jp
repnz
push
mov
ja
mov
rolb
mov
out
push
xchg
mov
or
scas
in
in
mov
push
and
rcll
add
outsb
and
dec
adc
add
mov
sbb
lds
cmp
les
mov
push
mov
imulb
sub
xor
ljmp
adc
xchg
dec
test
add
adc
insb
rol
idivb
adc
ljmp
cmpl
ret
xchg
and
cmpsl
adc
jge
orb
inc
jbe
mov
and
mov
in
xchg
and
fiadds
pop
loopne
push
ljmp
inc
stos
dec
mov
push
mov
cmp
xor
test
inc
loopne
cld
jp
dec
shll
add
in
icebp
jo
xchg
daa
mov
in
js
push
inc
jmp
ljmp
lods
or
outsb
cmp
jmp
and
jg
std
shll
push
and
push
add
xchg
in
fiadds
das
fistpll
test
xor
and
and
or
stos
movaps
out
dec
shrd
xor
shlb
and
jb
adc
hlt
adc
pop
imul
and
call
dec
xor
add
mov
jge
rolb
jge
rolb
cli
lods
cmc
lret
inc
out
loopne
in
push
ffreep
jbe
into
xchg
sahf
je
pusha
xor
je
pop
inc
imul
movsb
inc
pusha
cmp
jmp
sub
repnz
js
sbb
sbb
dec
jne
insb
sbb
imul
jecxz
fidivrl
loopne
pop
repz
cmpsl
fnstenv
mov
or
jns
xchg
cmc
lock
jg
mov
xor
push
enter
xchg
in
jae
push
nop
call
or
jne
cmp
in
clc
sbb
adc
xchg
mov
in
loopne
fildll
lock
pop
sahf
dec
mov
insb
test
adc
xor
in
daa
and
mov
leave
hlt
and
mov
cld
icebp
mov
loope
xchg
jns
pop
mov
fcoml
int3
or
add
pop
or
add
dec
test
inc
mov
sub
and
add
xor
push
inc
mov
pop
push
jl
add
in
es
das
out
aam
or
cs
inc
ss
shll
inc
adc
cmp
in
lods
mov
out
movsl
push
ret
hlt
dec
fdivl
fadd
loopne
add
adc
sbb
lcall
inc
adc
sub
lock
js,pn
add
cmp
cld
dec
add
adc
jmp
xor
in
push
fmuls
dec
lock
pop
test
inc
cmp
jne
ret
imul
ljmp
adc
je
add
les
lock
fbstp
xchg
xlat
dec
adcb
daa
cmp
jp
ss
roll
cli
or
sbb
push
cli
shrb
sbb
lods
adc
loope
pushf
sub
inc
jl
push
sbb
adc
inc
jno
js
mov
in
decl
xchg
int3
hlt
push
fsubs
in
sbb
xor
push
add
stos
std
and
inc
idiv
rcrb
pushf
cmp
arpl
fsub
push
loop
add
lock
ret
cmp
sbb
lahf
or
mov
push
inc
mov
jp
imul
loopne
repz
dec
aam
testl
rcrb
jae
jmp
xor
lcall
sbb
xor
dec
pop
in
xor
or
sbb
pop
push
in
dec
or
adc
sti
mov
pop
mov
cmp
mull
or
idivl
xchg
inc
outsl
add
cmc
push
inc
jb
xchg
or
mov
inc
xchg
lods
sub
insb
shlb
jae
inc
sbb
in
mov
mov
loope
repz
cmp
dec
out
mov
mov
stos
stos
pop
xor
mov
inc
sti
rol
mov
and
adc
cs
jns
mov
cli
add
add
push
adc
adc
addb
sahf
mov
mov
sub
xlat
add
xor
pop
gs
push
cld
mov
loop
repnz
das
test
xlat
pop
cmpsb
ljmp
push
pop
jp
icebp
cltd
test
out
and
xor
mov
bound
loop
adc
cli
sub
adc
and
sbb
cli
mov
add
pushf
sbb
out
dec
cld
inc
js
or
out
lcall
mov
jl
fiadds
aam
mov
cwtl
push
dec
xor
int3
pop
cld
push
sbb
clc
push
cs
insl
adc
jecxz
add
mov
shl
pushl
aam
xor
sbb
pop
hlt
cmpsl
ds
ret
out
ja
jecxz
adc
jl
or
xchg
or
mov
orb
add
out
add
ret
sbb
shl
add
sbb
sbb
inc
add
sbb
jle
sarl
and
inc
jnp
sub
jno
inc
stos
mov
pop
mov
xorl
dec
je
add
sbb
and
hlt
pop
icebp
and
add
inc
dec
pop
fdiv
jecxz
lods
jge
cwtl
out
push
pop
xor
mov
outsb
lock
daa
sbb
add
cmp
sub
sub
mov
andb
xchg
mov
cmpsb
lret
inc
cld
sbb
in
jo
cmp
inc
call
rcll
ret
jae
in
sub
ss
add
xchg
push
or
sti
jmp
jbe
repz
clc
mov
shlb
xor
push
lods
out
test
icebp
jg
or
test
xchg
loopne
mov
mov
arpl
aaa
icebp
pop
call
cli
pop
bound
andl
shlb
adc
xchg
fwait
xchg
insl
mov
mov
pop
js
adc
call
and
xor
in
lcall
dec
sarb
jnp
and
adc
dec
pushf
xchg
and
sbb
add
xor
ja
sbb
ficoms
dec
inc
ret
add
pop
and
inc
iret
rcr
sub
add
and
dec
inc
mov
ret
rcll
loopne
push
loop
adc
cmp
rorb
jmp
ss
cmc
mov
mov
test
cmp
mov
sbb
clc
lods
xchg
dec
jmp
add
jb
pop
mov
mov
jbe,pn
inc
inc
xor
xor
ret
test
lds
jmp
jne
dec
xchg
test
js
jo
xor
lock
mov
in
sub
das
mov
jp
pop
inc
or
js
or
mov
daa
inc
jae
movsl
or
push
iret
sub
cmp
lcall
xor
fcomip
push
add
sar
popa
xchg
stos
mov
jle
mov
push
out
loope
lds
repz
outsb
mov
dec
sbb
shr
mov
loopne
loop
fnstenv
mov
sbb
loop
push
xchg
add
inc
mov
cmp
push
mov
inc
sbb
push
pop
jp
inc
and
aaa
es
add
adc
sbb
mov
add
test
cs
mov
add
cld
xchg
stos
aas
ljmp
pop
jne
xchg
xor
insb
negb
add
mov
mov
pop
clc
inc
mov
jmp
je
jp
inc
shrb
fiadds
das
mov
push
mov
loopne
add
test
xchg
idiv
or
pop
test
pushf
loopne
lds
jp
out
and
loope
adc
xchg
insl
ret
mov
push
fdivs
cld
hlt
jmp
xchg
and
loope
push
int3
and
push
mov
lcall
fimuls
cmp
adc
or
sbb
out
and
out
out
mov
jb
add
mov
jmp
inc
jae
xor
clc
cwtl
roll
xchg
push
cmp
and
sbb
xor
mov
cmpsl
clc
mov
ror
mov
sub
jnp
clc
iret
ret
push
pop
push
rolb
arpl
popa
xor
push
or
add
sub
xorl
aam
and
xor
iret
pop
cmc
xchg
jecxz
xor
test
jne
test
lcall
ret
xor
shl
js
stos
in
and
inc
test
mov
xchg
test
mov
sub
and
fucomip
pop
fdivrl
les
jae
dec
out
add
nop
pushf
ds
jnp
and
inc
stos
and
cmp
and
clc
sbb
push
fwait
mov
add
pop
mov
sub
jbe
in
xchg
jmp
dec
xchg
or
dec
adc
and
sub
add
pop
inc
rcrl
lea
push
push
or
mov
pop
push
lea
push
xchg
fnsave
fsubr
sahf
xor
mov
push
cmpl
jbe
or
cmp
mov
jo
jnp
pop
sub
push
in
xchg
loopne
add
jb
out
add
sbb
inc
xor
stos
push
jl
sbb
lock
adc
paddb
test
jae
inc
lods
adc
outsl
xor
jle
cmp
repz
push
pop
dec
test
pop
jo
mov
sub
xor
sar
fidivl
jbe
or
aad
jle
xlat
mov
fcomps
shlb
cltd
fldcw
ja
sub
fidivrl
push
les
push
cld
clc
aad
pop
dec
adc
into
xchg
insb
ljmp
stos
dec
dec
add
ror
add
push
add
loop
inc
add
mov
xor
and
and
inc
xor
xor
add
pop
fldl2t
jno
push
sbb
stos
jne
ror
cmp
shlb
add
jp
pop
fsts
test
addr16
push
mov
cli
fucomi
pushf
lea
cmpsl
pop
jl
mov
unpckhps
or
dec
or
in
out
xchg
adc
add
insb
push
fidivrs
lea
sbb
xchg
into
clc
hlt
into
ficompl
cmp
test
add
push
inc
cmpsb
loop
add
inc
test
push
je
push
fsubr
push
sub
mov
mov
sbb
test
jecxz
push
jb
add
loope,pt
loop
in
or
pop
in
push
fmuls
rcrb
add
clc
sub
outsl
jnp
roll
and
xor
push
pop
mov
rclb
jo
dec
cld
into
sub
and
push
ja
push
add
popf
dec
dec
icebp
xchg
sbb
pop
inc
and
pusha
jnp
xchg
shl
xchg
and
xor
sub
cmc
in
popf
xor
sub
sub
aas
out
ret
cld
test
mov
dec
je
inc
sub
pusha
ror
fidivrl
repz
pusha
cmp
clc
cwtl
jl
dec
clc
mov
mov
xchg
mov
lret
cltd
xchg
clc
add
add
xchg
ret
stos
inc
xor
inc
roll
lock
divl
jbe
adc
addb
or
das
or
jecxz
roll
sbb
ljmp
out
sbb
jle
push
clc
or
pop
mov
clc
mov
xor
push
pop
outsl
ret
mov
lock
mov
xchg
dec
icebp
push
jmp
sub
hlt
mov
test
lods
loop
fld
mov
sbb
jmp
push
push
js
jno
lock
xor
lret
lret
adc
lahf
xor
mov
orl
cmp
adc
add
daa
icebp
adc
xor
sbb
push
js
jns
sbb
cmc
xchg
mov
xor
jge
addr16
movsb
and
or
lea
rorl
call
cmp
je
dec
cmp
inc
jno
cltd
into
push
sbb
les
and
or
sarl
xorl
fstl
cld
inc
push
adc
xchg
ret
mov
xchg
sub
jo
fimull
lahf
xchg
sub
mov
add
push
jecxz
inc
jmp
nop
mov
icebp
or
and
ret
or
test
jnp
sub
inc
ret
lods
loopne
ret
sbb
loopne
into
mov
in
and
adc
pop
cmc
adc
jp
fnstenv
adc
adcl
mov
cmp
dec
repnz
xor
loope
mov
rol
test
je
xchg
stos
ret
mov
xchg
inc
jae
into
rcrb
js
mov
lods
mov
sub
loop
add
pop
mov
xchg
cmp
in
cli
adc
xor
xchg
add
loop
xor
sbb
rcrb
add
xor
loopne
add
sub
push
and
jno
stos
js
xor
aaa
mov
out
mov
or
out
incl
push
xor
sub
push
int3
lea
int
fnsave
clc
push
out
sub
dec
cmp
mov
sbb
adc
mov
add
push
loop
lcall
sub
mov
cmp
jecxz
pxor
outsb
mov
cmpxchg
xlat
sbb
mov
add
xor
pop
mov
mov
data16
add
in
or
add
or
xor
insb
adc
fdivl
je
icebp
std
in
push
punpckhbw
das
adc
adc
ljmp
adc
adc
adc
xchg
add
dec
adc
push
cmp
test
xchg
and
aad
mov
cmp
and
movsb
mov
mov
push
add
mov
adc
adc
mov
jmp
xor
sub
hlt
adc
test
mov
shlb
scas
and
xor
mov
jmp
cmp
sbb
mov
mov
inc
xlat
cmp
mov
mov
jecxz
push
out
mov
cltd
les
xchg
mov
shlb
lret
lods
or
or
push
cmp
sbb
push
stos
add
mov
fcomps
xchg
sub
inc
outsl
push
xchg
cs
cmpb
mov
inc
add
cwtl
mov
ja
sbb
adc
cld
add
jmp
or
and
push
pushf
add
pop
dec
movsl
push
sbb
faddl
cli
aam
into
or
daa
mov
outsb
loope
cmpsb
insl
cmp
xchg
lods
psllq
cmp
pop
mov
jnp
xchg
or
push
jl
das
lock
dec
loop
push
mov
cmc
insb
pop
mov
in
loopne
push
and
loopne
das
lods
mov
fimuls
jcxz
inc
or
sub
dec
in
jbe
push
pusha
mov
push
add
aad
into
push
cld
test
pushf
jge
int3
or
in
adc
xor
roll
aaa
and
sbb
sub
ljmp
sbb
int
xchg
pop
or
jo
jge
adc
mov
jmp
push
push
subl
cmc
pop
mov
inc
jg
sahf
push
aam
ljmp
add
js
xchg
loopne
test
mov
ja
outsl
in
push
push
cmp
jnp
xor
addl
push
mov
push
pop
mov
dec
inc
int3
or
movsb
and
jmp
cmp
mov
inc
and
mov
and
sub
and
test
cmc
mov
fidivl
insb
cmpb
sbb
cld
add
dec
add
mov
add
jge
jmp
dec
movsb
dec
movsb
pop
inc
cwtl
cmp
or
ds
insl
popf
xor
cli
adc
bound
clc
and
jnp
sub
and
in
sbb
jmp
clc
inc
jb
fldt
aas
xor
or
push
push
call
mov
push
rolb
fwait
dec
loopne
rol
pop
add
sbb
cmp
cmp
xchg
add
or
push
outsb
ret
sbb
gs
mov
mov
shrl
jo
mov
mov
jne
aaa
rorb
and
jbe
aaa
je
mov
and
cmp
lret
xor
pop
jp
xchg
sub
sbb
or
movsl
push
movsl
mov
adc
cmp
xor
lea
enter
sahf
fisttpl
test
cltd
mov
fcoms
in
push
mov
push
jbe
fstp
push
aaa
pop
inc
cmp
jns
sbb
or
imul
push
xor
loopne
nop
add
lds
popa
pop
pop
xor
xor
or
daa
roll
push
inc
clc
xor
jecxz
sbb
movsl
roll
push
jmp
jns
xor
dec
sti
in
add
cmp
sbb
cmp
adc
mov
jle
cmp
das
mov
dec
cmp
jbe
mov
adc
js
fisubl
adc
fs
inc
outsb
and
in
imul
jg
das
mov
ja
out
fnstenv
jecxz
lahf
inc
inc
push
ret
and
stc
pusha
dec
loopne
push
nop
js
pop
add
pop
loop
rcrl
rcrl
dec
lahf
adc
fisubrs
xchg
loopne
dec
sar
mov
rclb
scas
push
fstpt
testb
add
inc
loopne
fs
icebp
stos
cmovs
into
pop
dec
sub
inc
or
fcmovbe
fisubs
je
jb
hlt
fldenv
shll
loopne
cmc
pop
jns
int
xchg
or
mov
stos
push
loopne
sub
ret
jne
dec
add
sbb
sub
mov
sbb
mov
fwait
mov
sbb
insb
dec
adc
push
inc
fwait
in
lahf
dec
dec
sbb
fucomp
xorb
imul
mov
push
mov
mov
in
jp
ret
xor
nop
inc
sbb
mov
pusha
lock
add
sahf
add
icebp
mov
ret
jne
rorb
clc
pop
daa
scas
addr16
scas
mov
out
mov
dec
cli
aam
inc
fsubl
lods
jno
pop
int3
test
xchg
std
sbb
out
ret
pop
add
nop
inc
sbb
cltd
sbb
and
cmp
js
cmp
and
outsl
add
loopne
loopne
jle
hlt
movlps
into
mov
jns
inc
les
rolb
xchg
add
sbb
dec
in
test
add
sahf
decb
addl
sub
add
add
add
pop
test
test
sub
outsb
pop
jle
jge
call
or
shlb
cmp
add
or
icebp
xor
or
pushf
enter
testl
mov
shll
add
mov
pop
xchg
rclb
and
lock
xlat
mov
add
and
dec
mov
pusha
add
xlat
pop
adc
in
aam
divb
stos
cs
or
adc
aad
sbb
inc
orl
jmp
daa
icebp
and
xor
mov
sbb
fcmovbe
jo
repz
or
loop
bound
mov
clc
sbb
lahf
cmp
dec
xchg
jge
dec
pusha
xlat
lock
ss
jl
mov
or
push
mov
popf
mov
cmp
jle
mov
and
cmpb
mov
or
jmp
push
xor
xchg
inc
sbb
adc
or
or
pop
cwtl
push
sub
adc
jmp
jnp
and
mov
sbbl
xchg
xchg
sahf
adc
aas
fs
push
xor
add
mov
xor
adc
xor
inc
push
xor
into
push
cli
clc
jmp
pop
cmp
popa
clc
mov
test
addr16
stos
or
cltd
add
jbe
movsb
jb
ja
mov
ja
add
roll
mov
cmp
or
imul
jl
icebp
outsb
inc
lea
push
clc
push
call
icebp
or
push
push
test
int3
sbb
popa
mov
loopne
orb
lret
or
push
or
fdivr
mov
sbb
dec
jecxz
jp
dec
and
and
or
push
out
mov
popf
xor
jo
je
testb
jbe
cmc
and
xchg
dec
cmp
loope
mov
sbb
ret
add
pop
lea
mov
test
out
push
dec
inc
mov
adc
add
xchg
jmp
lret
fisttps
xchg
sbb
pop
dec
xlat
mov
dec
cmp
ds
stc
push
popa
nop
call
sub
and
rcl
imul
adc
inc
mov
outsl
test
xchg
add
mov
scas
and
push
mov
daa
ja
pop
add
or
mov
es
fwait
ret
pop
adcb
lret
cmp
out
lds
dec
pop
inc
iret
cmp
in
inc
lret
push
xor
dec
xchg
fnsave
push
jbe
pop
xchg
pop
and
int3
add
push
enter
je
test
icebp
add
lcall
push
push
jp
mov
xor
rorb
inc
ds
pop
xlat
dec
out
sub
sti
ficoml
std
pop
mov
xor
xor
enter
jg
adc
or
mov
pop
ljmp
sub
fcoms
mov
pop
test
cld
inc
movsb
inc
rolb
out
in
icebp
jno
outsb
jno
shlb
fs
cmp
aam
aam
mov
shll
daa
in
mov
loope,pt
push
mov
ds
inc
test
pop
hlt
push
add
push
adc
loopne
xchg
outsb
and
jnp
xorb
mov
gs
xchg
hlt
cmp
jbe
das
jo
mov
lret
pop
gs
insb
shlb
jae
js
stc
in
or
xchg
add
push
out
xor
inc
xchg
adc
cltd
in
pop
out
js
sub
outsl
and
push
cli
fadds
push
out
jne
cmp
in
imul
push
mov
repnz
add
leave
cmp
scas
fildll
or
stos
add
int3
mov
and
add
adc
dec
jl
in
jo
pop
inc
pop
jg
inc
inc
push
xor
pop
test
jbe
mov
or
icebp
das
outsb
rorb
inc
dec
sbb
or
dec
cmpxchg
add
cs
or
pop
pop
sti
jmp
cmpsl
lods
pop
daa
sbb
insl
adc
add
fcomps
ss
fwait
insl
xchg
cld
xor
or
inc
mov
mov
dec
dec
adc
adc
add
adc
push
out
add
outsl
fdivs
mov
sbb
add
inc
cmp
mov
insl
leave
enter
int
or
lock
push
clc
in
push
fs
pusha
mov
add
and
add
push
mov
or
and
add
lahf
sub
outsb
cmp
add
adc
clc
pop
sub
cltd
and
fistl
lcall
insb
mov
pushf
incb
xor
subb
ss
mov
pop
xor
sub
cmpsb
push
xor
mov
cmpsb
xor
inc
out
xor
fiadds
mov
or
cmp
or
or
add
jbe
push
test
ja
inc
dec
cmp
push
test
push
insb
sbb
mov
fwait
pop
dec
and
cmp
add
loopne
test
cmp
movsl
into
daa
fldl
repz
add
les
xchg
and
in
jnp
inc
or
imull
and
test
sbb
adc
pop
mov
insb
sbb
adc
inc
movsb
pop
or
fimull
xchg
push
mov
mov
leave
ret
jo
mov
jae
call
decl
pusha
xchg
arpl
inc
mov
jne
sub
inc
or
pop
adcb
rcrl
std
data16
jno
sub
int
movb
les
and
add
ret
push
inc
push
outsb
xchg
es
scas
add
mov
out
ret
sbb
sarl
inc
jae
les
cwtl
ds
mov
or
or
pop
mov
add
push
in
lods
lret
inc
sbb
inc
ret
fimull
push
pop
adc
cli
dec
fcom
sbb
mov
outsb
sbb
xlat
sub
sub
in
rcl
popa
pushf
mov
sbb
leave
js
xchg
cli
aam
es
add
and
outsl
xchg
add
xor
loop
in
jp
xor
and
test
mov
and
inc
and
es
leave
inc
in
sbb
test
inc
and
xor
add
mov
ret
sub
xchg
ja
or
pop
rorl
xchg
stos
sbb
sub
fsubr
push
les
jae
lcall
jecxz
pop
adcb
stc
xchg
out
fdivl
sbb
arpl
sub
hlt
lret
sbb
add
pusha
xor
js
popa
pushf
jo
mov
fwait
lods
iret
lcall
and
ljmp
pop
mov
dec
jecxz
imul
sbbb
sbb
lock
dec
or
dec
out
enter
mov
stos
mov
push
lcall
or
and
pop
jae
inc
cli
cmp
mov
pushf
lret
lahf
add
in
movl
inc
and
or
pop
addb
pusha
data16
je
lods
cmpsb
rorb
in
push
rcll
xchg
add
adc
cmpsb
outsb
xchg
mov
adc
divl
xlat
cmpsb
psubsb
inc
add
in
pop
int
mov
add
mov
mov
mov
xchg
inc
adc
clc
call
or
adc
movb
xchg
mov
roll
mov
jl
push
pop
aam
jp
repnz
pop
or
rcrl
fdivr
out
and
xchg
fadd
addr16
jno
sbb
push
imul
sti
pushf
in
mov
or
in
or
cmpsl
fdivrs
cmpsb
test
aaa
push
pop
and
or
or
jns
fidivrs
cli
add
loopne
mov
cmp
sub
mov
and
int
addl
add
push
or
lahf
lock
fstps
int3
rorl
popf
jne
sub
inc
shll
adc
fldcw
insl
lahf
mov
or
inc
arpl
mov
xor
sbb
mov
fsubrs
iret
xor
adc
inc
cmp
fdivs
sub
addl
lret
and
push
aam
sbb
add
icebp
test
rclb
ret
add
lock
pop
add
and
int
xor
sbb
mov
iret
inc
cmpsl
pop
daa
pop
js
loope
add
or
adc
insb
xor
fsubl
lods
mov
jb
push
aam
insb
in
jo
pop
ljmp
cld
push
jo
sahf
lock
inc
pop
movsl
adc
mov
pop
js
pop
movsb
in
add
pop
jb
push
int3
in
testl
mov
and
int3
iret
adcl
lcall
lret
aas
add
cmp
lcall
or
pusha
jae
stos
jg
and
fsqrt
es
xor
jo
sub
das
repz
pop
sub
add
xor
stos
xchg
arpl
sarb
pop
pop
cmpsb
mov
orb
push
mov
and
push
jg
fs
add
rcrb
push
std
mov
pop
push
lock
xor
xchg
hlt
jne
inc
inc
aaa
jge
xor
lods
lea
xorb
push
loope
jnp
popa
lea
inc
push
sub
out
lahf
in
in
sbb
inc
add
popa
jo
sub
fstps
sub
lods
adc
aas
pop
inc
jl
ds
push
or
pushaw
cld
dec
jp
sbb
flds
add
add
jo
insb
adc
lock
ret
enter
adcb
sub
fucomip
fildl
and
sbb
adc
inc
and
stos
push
clc
jmp
adc
in
shlb
daa
sub
into
scas
movsb
adc
cmp
mov
add
sbb
sbb
xor
pusha
add
sub
pop
and
add
jns
shr
adc
sbb
lds
and
add
mov
inc
cmc
fldl
xlat
push
nop
push
mov
outsb
mov
sarb
sti
hlt
daa
fs
test
iret
repz
loopne
call
sub
push
add
mov
out
subl
ss
mov
enter
mov
addb
xchg
ret
and
out
outsl
movsb
cmp
mov
adc
push
leave
clc
xchg
rclb
outsb
xchg
out
dec
loop
sub
popf
push
pop
dec
or
pop
ret
xchg
adc
lods
shlb
sbb
xorl
fsubrs
or
popa
adc
or
adc
je
sub
outsb
in
and
jno
inc
pop
mov
jae
loope
addb
je
jmp
dec
mov
cmpl
lods
and
js
pop
push
lret
mov
inc
jl
das
rorb
ret
mov
xchg
mov
mov
sbb
nop
push
or
ret
lea
pop
add
add
pop
xchg
jae
lock
movsb
pop
bound
nop
cmp
mov
ror
and
dec
push
adc
decb
mov
add
test
sub
adc
adc
xchg
lock
cltd
repnz
push
mov
xlat
push
mov
enter
add
mov
or
stos
pop
ret
sbb
dec
jo
pop
dec
sub
pop
lcall
int3
neg
inc
idivb
pop
cmp
mov
inc
scas
call
inc
inc
and
add
sbb
inc
dec
xchg
mov
aaa
jmp
pushf
movsb
and
fs
cli
jbe
decl
inc
jmp
jle
mov
jecxz
sbb
add
pop
add
fiaddl
xchg
xor
cmp
popf
fdivrl
jg
and
in
mov
and
fstps
add
jns
xlat
pop
cmpsb
cmp
roll
inc
sbb
out
lret
mov
push
pop
leave
jp
mov
lods
pop
or
movsb
rcr
mov
pushf
jno
fidivrs
sub
sbb
mov
inc
or
mov
loopne
scas
push
inc
adc
add
cld
mov
add
pop
sbb
mov
cs
nop
adc
gs
xchg
out
adc
push
mov
in
adc
js
push
mov
mov
dec
sbb
fstpl
addr16
inc
mov
je
xor
cmp
stc
push
cmp
cmp
rorl
push
ret
jmp
and
je
movsb
shlb
pop
pop
aaa
inc
clc
jmp
imul
mov
mov
xor
movsl
out
adc
push
push
pop
push
mov
mov
adc
mov
sub
add
mov
gs
ja
lods
adc
pop
orl
sbb
pop
shlb
xlat
sbb
xchg
popa
mov
jge
iret
mov
xor
lret
push
sub
sbb
aaa
mov
aam
les
in
bound
loopne
mov
adc
scas
test
jne
push
fdivrl
add
repz
js
movsl
mov
filds
fcmovne
rorb
sub
scas
pop
add
shrb
and
cmp
loopne
jo
mov
test
pop
push
xchg
sub
sbb
ljmp
xor
jle
pop
roll
xchg
rorb
push
cld
dec
adc
jnp
sbb
call
dec
xlat
push
xor
je
pop
xor
pop
dec
lock
mov
inc
sbb
xor
loop
mov
sbb
je
loopne
pop
mov
mov
pop
inc
scas
adc
neg
leave
and
add
sbb
mov
es
push
stc
pop
sbb
add
mov
and
jmp
ljmp
cmp
pop
xor
push
stos
fneni(8087
push
clc
ret
mov
pop
lcall
sbb
rorb
sbb
insl
add
sbb
and
jae
push
loopne
xor
aad
sub
das
pop
fcomps
jecxz
jmp
hlt
mov
jge
dec
and
inc
jmp
adc
push
xchg
daa
cmp
lock
call
jl
pusha
adcl
cmp
addb
pop
sbb
or
or
push
sbb
xchg
jmp
sub
mov
ret
dec
or
xor
pop
repz
push
add
inc
inc
fadds
pop
inc
lea
mov
dec
and
mov
push
loopne
mov
push
mov
mov
inc
push
lods
jmp
push
push
jmp
sub
or
bound
and
mov
mov
sbb
inc
xchg
and
or
mov
test
clc
adc
add
adc
sub
adc
cmp
mov
sbb
or
das
jecxz
shll
or
jo
xor
push
int3
jp
adc
neg
adcb
xor
repnz
jne
rcrb
dec
movsb
mov
in
xor
cmp
dec
dec
aam
hlt
add
orl
pusha
add
mov
stos
int3
shrl
push
sub
mov
add
mov
test
pusha
arpl
add
push
ljmp
mov
rolb
dec
ljmp
xor
stos
mov
movsb
out
andl
mov
roll
xor
dec
pop
cmp
rcrb
roll
push
movsl
or
jo
cmp
into
loope
ss
or
add
or
push
cli
cmc
cmpsb
push
inc
loope
dec
and
aaa
std
adc
mov
xchg
mov
mov
or
pop
mov
mov
call
lret
iret
xchg
xchg
fcmovb
pop
shlb
rclb
rolb
icebp
testb
or
xchg
pop
repz
and
inc
or
ror
cs
push
push
call
add
push
int
repz
mov
test
xchg
addb
rol
push
ret
xor
add
cltd
ret
lret
add
and
addb
add
test
mov
out
ds
sbb
add
pushf
or
rorb
dec
mov
push
pop
xlat
dec
cli
dec
clc
fnstenv
push
fimull
cmpsb
in
lea
mov
lods
mov
aas
mov
add
jmp
shlb
mov
loopne
sarb
divb
pop
add
dec
sub
popf
push
clc
mov
fldt
sub
jb
mov
shr
fwait
cmpsb
ds
mov
aaa
cltd
xor
not
and
insb
lods
aas
or
aas
inc
pop
add
fmul
das
loopne
pop
mov
pushf
cli
xchg
lods
mov
in
adc
xchg
or
sbb
jp
or
lods
mov
mov
daa
icebp
xor
cmc
mov
dec
icebp
push
sarb
bound
lret
bound
dec
loopne
fcoml
ljmp
ret
lods
inc
mov
push
adc
out
add
js
inc
add
ja
mov
rorb
pop
aad
sub
xor
and
mov
and
cs
push
dec
mov
push
xchg
dec
js
lea
and
add
push
mov
aaa
in
jo
cmp
notl
in
test
or
add
rorb
inc
enter
fwait
lret
push
je
addb
push
ret
enter
mov
jnp
xchg
mov
xchg
push
cmpl
adc
sbb
movsb
hlt
ret
pop
dec
test
push
mov
mov
sub
push
jle
xor
stos
cs
mov
inc
repnz
imul
mov
and
sub
or
inc
inc
dec
cmp
dec
push
in
js
aam
sub
fs
stos
inc
sub
in
push
add
mull
mov
sub
jp
outsb
dec
je
call
cmc
scas
inc
mov
test
pop
sub
ljmp
cmpsb
sbb
or
mov
xor
sub
cmc
jno
add
mov
sbb
add
jae
les
xor
inc
push
push
push
mov
push
push
xor
enter
jb
jb
movsb
xor
je
push
mov
mov
xlat
mov
ljmp
adc
arpl
cmp
rorl
cld
ljmp
stos
lahf
add
adc
lret
into
out
mov
and
mov
sbb
xchg
adc
sub
lds
xchg
mov
sahf
fadds
ret
cmp
loope
push
addr16
pop
ja
out
and
loope
xor
pop
xor
pop
loopne
sbb
jne
int3
into
in
enter
adc
adc
add
xlat
lret
dec
xchg
push
push
dec
repz
pusha
or
push
ljmp
les
out
je
mov
xchg
lods
mov
shrb
jne
sbb
mov
pop
in
clc
out
xor
sbb
repnz
out
pusha
cmpsb
adc
jbe
arpl
cli
mov
xchg
int3
enter
movsb
lret
lock
loope
pop
dec
jle
xchg
lsl
add
movsl
and
jge
ljmp
ljmp
aam
add
test
shrl
and
loope
mov
outsl
loop
mov
lock
test
mov
add
cwtl
nop
sbb
arpl
add
sbb
and
inc
add
in
lret
mov
mov
addl
mov
cmpsl
pop
cmp
jne
mov
cmpb
push
insb
mov
add
add
sar
add
push
push
cmp
ficoml
mov
xchg
inc
stos
lret
or
sbb
enter
mov
ja
xor
jbe
dec
adc
js
adc
push
and
jae
pop
lock
test
lea
shrb
pop
repnz
ds
jae
add
push
inc
dec
in
push
mov
pushf
pop
and
adc
xor
test
cmp
pop
repz
and
aam
fdivrs
fstl
mov
add
out
rcl
mov
sbb
jno
call
adc
xor
cmp
aam
fwait
cmp
push
clc
push
std
enter
iret
xor
in
push
incb
xchg
les
add
adcb
xchg
or
sbb
adc
daa
das
icebp
sahf
les
sbb
or
test
xchg
inc
and
test
les
jne
xor
jmp
pop
mov
push
jne
loope
lock
mov
rcrl
popf
orl
loopne
jmp
sbb
lock
shr
ss
popa
mov
or
movsl
cs
pop
cmp
hlt
lds
sbb
pop
lock
in
clc
icebp
or
cwtl
inc
mov
and
gs
shlb
adc
jg
add
pushf
outsl
int
test
ja
sub
or
or
mov
sbb
pushf
incb
sbb
js
inc
shlb
stos
push
movl
pusha
dec
in
sbb
cld
pop
outsl
loope
jle
aam
add
xorl
push
dec
in
xor
adc
push
jno
adcl
pop
mov
push
test
xor
mov
aas
fldcw
iret
pop
out
ja
jge
mov
fisubs
xor
cs
inc
push
xor
add
sbb
pop
in
and
sbb
fldl
adcl
mov
faddl
add
loope
imul
sub
addr16
add
scas
xor
or
rolb
mov
mov
test
add
sbb
rol
fs
loopne
ret
push
and
xchg
mov
shrl
add
push
pop
rolb
iret
xorl
pop
mov
lcall
je
mov
push
fildl
in
scas
sub
mov
pop
inc
cmp
mov
or
or
pop
mov
aas
mov
call
xor
orl
sub
jmp
mov
inc
xchg
mov
and
xor
in
mov
add
pop
rolb
or
rcr
sbb
cli
add
lods
jmp
ds
cld
clc
repz
loopne
aam
rorl
or
lock
sti
cmpl
adc
loop
aaa
insb
dec
outsl
sti
jae
fs
inc
outsl
roll
pop
or
inc
lods
xlat
xchg
lods
dec
inc
loop
addb
dec
aas
out
push
sub
add
push
dec
mov
mov
in
jno
das
cmp
jnp
scas
movsb
jae
es
mov
shrl
xchg
push
inc
add
mov
pop
clc
das
inc
dec
ret
push
testb
mov
or
stc
pusha
dec
sub
or
sbb
fcomps
sub
xchg
lock
xor
inc
push
ljmp
outsb
imul
or
arpl
jnp
jbe
js
ret
notl
push
jle
sub
xor
or
add
jbe
jbe
cmpsb
mov
loope
aas
mov
repnz
jmp
ret
gs
std
push
push
ljmpw
cmp
or
dec
psubb
pop
js
repz
icebp
ds
add
jl,pt
add
jl
mov
insl
ret
add
cmp
imul
outsl
xchg
add
dec
xor
sub
push
xor
xchg
lds
and
xchg
add
xchg
fsub
and
cmpsb
or
imul
ret
jmp
in
pop
push
push
sarb
mov
pop
cmp
ljmp
out
mov
mov
stos
jns
call
or
and
adc
inc
call
movsl
pop
hlt
inc
pop
inc
call
call
sbb
scas
hlt
cld
xchg
push
push
ja
xor
inc
jecxz
cmpsb
fildll
sub
adc
xor
sbb
cmp
fdivs
and
pop
cmp
add
adc
sbb
inc
sub
inc
int3
mov
test
or
cmc
insl
hlt
dec
or
fnstsw
and
pop
int3
inc
xor
or
push
negl
loopne
add
sub
jecxz
fists
inc
cmpsb
fcomps
xor
push
xchg
mov
cmp
roll
mov
sbb
pop
jp
fbstp
and
cmp
and
add
ss
lods
cmc
mov
push
xchg
xchg
pop
pop
adc
popf
lods
call
out
xor
xchg
ret
js
fiadds
into
fadds
or
ret
je
leave
je
mov
lret
xlat
dec
xor
pop
mulb
sbb
xchg
xchg
fcomps
cmp
xchg
add
or
insb
insl
jl
mov
ret
add
and
push
xor
test
push
cld
lock
and
and
add
outsb
popa
and
pop
sbb
cmp
cmc
loopne
fildll
test
jb
add
ljmp
and
xor
lcall
push
incl
jmp
test
ja
aas
addb
loopne
add
daa
iret
test
rol
mov
enter
add
stos
mov
in
mov
nop
data16
jecxz
jne
add
ret
xchg
jae
inc
je
adc
pop
jo
sti
dec
mov
arpl
jne
leave
cltd
sahf
add
sbb
gs
push
lods
daa
cmpsl
mov
loop
popf
push
dec
jecxz
push
inc
cmc
aaa
xor
sub
lcall
cs
push
inc
adc
pop
movsb
mov
add
sbb
pushf
aaa
xor
cltd
and
or
and
push
pushf
xchg
or
or
sbb
xchg
and
scas
or
sbb
push
mov
ret
mov
jne
jmp
fistpll
mov
iret
jb
push
in
movsb
rcrl
ljmp
outsb
shll
adc
pop
dec
jmp
icebp
cmpsb
movsb
push
mov
fisttps
int3
icebp
fcomip
clc
push
jne
xor
inc
jmp
or
ret
push
daa
inc
push
jp
and
orb
adc
mov
pop
adc
addl
insb
cmpsl
push
jns
add
test
mov
xor
pop
or
and
pop
xchg
jmp
dec
call
mov
inc
add
mov
cli
jg
js
inc
fcoml
lods
icebp
xchg
xchg
sti
clc
loopne
adc
cld
sub
mov
inc
out
cmpsb
or
ret
adc
aas
jmp
add
and
inc
add
jge
sarb
idiv
shll
mov
inc
add
add
mov
or
cli
es
out
cmp
add
cld
ljmp
fists
daa
xor
clc
pusha
mov
xchg
push
pop
sub
pushf
xchg
and
mov
stos
sti
adc
or
xor
jns
xor
xchg
fisubrl
lea
jp
push
movb
fmuls
mov
sarb
pop
sbb
js
add
pusha
or
mov
xor
adc
inc
adc
shlb
push
mov
sub
call
cld
ss
dec
add
add
clc
inc
jl
cmpsb
aaa
decb
xchg
sub
mov
mov
fsubrs
mov
ret
pop
sbb
sub
sbb
cmpsb
scas
ljmp
add
adc
lds
rcll
test
std
inc
sub
sub
adc
rorb
push
push
ret
jmp
mov
mov
jno
or
add
push
divb
aam
aam
cmova
cmp
enter
test
jbe
inc
dec
filds
xchg
dec
enter
push
sub
inc
and
push
sub
sbbb
inc
adc
scas
sub
xor
lock
add
push
sub
push
js
adc
add
cmp
idivb
pop
mov
sub
lcall
rcl
xor
pusha
xor
add
pop
movsl
add
pop
pop
inc
call
jnp
inc
add
jne
or
cmpsb
addr16
insb
cld
and
call
add
push
mov
mov
push
call
insb
es
sub
cld
mov
les
sub
ret
shrb
sarb
or
add
ficoms
push
aas
popf
pop
add
rcr
adc
mov
jle
dec
repnz
lea
ret
add
pop
sub
add
or
fsts
xor
sub
mov
or
adc
push
mov
mov
cmp
data16
ds
in
jge
popf
ret
sbb
add
push
loopne
adc
sbb
in
fisttpll
xchg
mov
adc
imul
test
loopne
add
pop
or
stos
ljmp
dec
test
pop
andb
and
and
call
vmovups
xchg
test
mov
inc
mov
inc
jge
sti
popf
push
ds
sub
push
add
adc
rcr
sub
test
sub
sub
idivb
inc
sbb
push
jo
lcall
push
outsb
push
or
sub
jb
loope
std
adc
fsubr
nop
add
cmp
inc
jl
adc
hlt
fs
lcall
ror
push
pop
jmp
xlat
jge
in
xchg
xor
in
and
outsl
pop
mov
outsl
dec
jbe
aas
sbb
das
adc
cmp
mov
jmp
in
movsb
cmpsb
sbb
lret
test
sbb
or
test
mov
cmpsb
nop
pop
sub
vunpcklpd
inc
pop
pop
sbb
or
xchg
xchg
sbb
or
mov
jmp
and
loope
or
ja
insl
sbb
fadd
fcoml
ds
add
scas
mov
dec
lods
xor
sub
sbb
adc
scas
push
pop
add
sbb
add
rclb
aad
addr16
add
sbb
inc
das
inc
arpl
sbb
dec
sub
inc
pusha
pop
xchg
mov
bound
cmpb
in
mov
nop
subb
xchg
data16
cmp
enter
sub
loop
rorb
cmp
cld
mov
jmp
adc
sbb
xchg
inc
push
loopne
cmp
mov
push
push
mov
or
movb
in
rcl
push
mov
call
push
loop
enter
or
or
mov
mov
cmp
mov
loope
dec
mov
push
nop
pop
aad
sub
jmp
add
push
push
aas
shlb
mov
sub
or
mov
cmc
and
mov
sub
inc
cmp
leave
iret
fnstsw
xor
repz
or
adc
sub
push
rclb
loope
xlat
jb
jg
adc
mov
mov
repnz
out
xchg
sbb
lea
pop
adc
jecxz
and
xchg
adc
shlb
cmpsb
mov
ds
add
xchg
pusha
cmp
push
sub
pop
sbb
xor
add
adc
scas
mov
fdivrs
xor
es
iret
add
mov
dec
xchg
es
ficoms
push
rcrb
sub
daa
or
dec
jo
cs
sarl
xchg
lret
js
mov
aam
adcb
cltd
shlb
adc
sub
dec
and
pop
fsub
sbb
popa
fistpll
stos
mov
cmp
adc
insl
cmp
outsl
fcomps
mov
lods
inc
mov
fs
add
add
add
jno
or
insl
imul
lods
pop
aam
popl
dec
mov
orl
push
jge
icebp
sub
sarb
fwait
addr16
xchg
pusha
xor
loopne
enter
mulb
les
les
loope
orb
andb
or
rorb
js
loop
jge
mov
mov
dec
xlat
add
jmp
jp
dec
cmp
call
iret
pop
js
shr
fmuls
and
icebp
hlt
int3
mov
lcall
inc
bound
pop
clc
xchg
lods
outsb
pushf
add
mov
into
mov
mov
bound
pusha
test
or
xor
fidivrs
add
xchg
push
fwait
inc
sbb
ss
dec
shll
or
insb
loopne
dec
aas
dec
add
xorb
xor
add
or
fwait
lds
pmaxub
jbe
sbb
mov
sbb
dec
stc
rol
mov
xchg
ret
int3
imul
pop
pop
sbb
je
jecxz
out
and
pop
xor
or
sub
xor
rcrl
push
push
lods
cmc
sahf
dec
in
jl
or
addr16
loopne
lods
movsl
push
inc
or
pusha
jg
mov
pop
mov
or
clc
pop
mov
adc
subl
or
add
or
xchg
push
pop
test
test
sbb
xor
add
sbb
mov
mov
xor
aam
xor
or
pusha
and
fiadds
fisubs
inc
stc
push
popf
jb
jg
or
push
in
jne
xchg
mov
adc
push
pop
add
mov
movsl
into
push
shlb
outsb
pop
dec
xor
push
rol
sti
or
inc
js
daa
xor
or
lret
out
loop
incb
lcall
push
sub
mov
sub
add
mov
pusha
xchg
int
lock
fwait
cmpsl
inc
test
loope
pop
push
xor
mov
pop
xchg
lods
push
lock
lods
in
xor
sub
pusha
nop
pushf
push
insl
insb
std
mov
pop
mov
hlt
imul
xor
jne
divb
adc
cmp
out
or
mov
orb
add
or
push
arpl
div
into
inc
shlb
add
lret
adcl
cmpsl
or
pop
fdiv
mov
in
imul
rolb
xchg
cmp
or
movsb
pushf
add
lea
faddl
cld
ss
mov
push
add
mov
mov
jo
and
mov
fbld
test
jmp
fstl
push
loop
inc
mov
fistps
xadd
fimull
addb
fisubs
push
and
adc
mov
cmp
in
pop
ficompl
pushf
push
ds
ret
in
adcb
or
in
in
push
lods
push
sbb
iret
mov
or
cmp
push
adc
jecxz
jae
cli
shlb
dec
xchg
jecxz
mov
add
ret
jg
and
jmp
cmp
xchg
jo
dec
lock
ret
and
shrb
xor
js
aas
and
jg
cld
cmpb
js
push
call
js
test
dec
sub
mull
adc
sub
insb
cmp
xor
cwtl
dec
arpl
push
les
dec
adc
inc
add
es
add
fistpll
call
cmp
popa
add
add
outsl
popa
jno
loopne
clc
xor
mov
into
test
cld
sbb
stos
mov
xor
rclb
pop
mov
and
xor
movsl
jo
xchg
dec
pop
or
je
test
daa
or
push
inc
hlt
xor
inc
fldl
pop
add
cmp
icebp
fimuls
les
lods
dec
and
lcall
dec
in
sahf
loopne
ja
cmp
push
inc
daa
rolb
cmp
mov
pop
adc
mov
sbb
clc
stos
incl
inc
sbb
push
sbb
sbb
jg
pushl
inc
sbb
sbb
xchg
mov
xchg
imul
lahf
inc
pop
out
mov
sbb
test
jb
clc
pop
add
pop
cmp
mov
push
ret
sbb
dec
rcrb
adc
mov
andl
js
jno
push
mov
js
xchg
fstpt
aam
idivb
cmc
fs
test
jp
mov
push
test
in
jno
pusha
xlat
and
lahf
fcmovbe
inc
pop
and
sub
pop
push
adc
rclb
imul
jge
and
push
stc
cli
jmp
cli
push
mov
cmpsl
lock
call
xchg
in
sbb
in
mov
mov
xchg
pop
add
cmovae
cld
dec
inc
lret
inc
in
ficomps
sbb
mov
pushf
jno
loopne
mov
fwait
xorb
lret
cmp
daa
mov
xchg
jg
xor
jmp
sbb
ret
sub
and
cmp
sub
inc
mov
fmuls
cmpl
inc
push
fsubrp
int
pcmpgtd
outsb
enter
arpl
xchg
jo
fcoml
mov
sub
push
sarl
dec
iret
popf
jb
jmp
std
popa
fs
sbb
inc
in
push
inc
xchg
sub
scas
mov
cmp
pop
ret
adcl
lds
pop
jno
cmp
add
sti
test
shrl
adc
lea
sub
dec
ret
shrl
imul
mov
and
jge
jl
inc
aam
xor
sub
push
xchg
jne
test
bound
leave
pop
stos
xchg
dec
leave
xorl
xchg
jecxz
xchg
sbb
and
shrl
push
lea
test
xor
fsubrp
dec
dec
or
cmp
mov
pop
cmp
roll
mov
sub
xor
push
add
fsubrs
cltd
push
mov
lret
lcall
inc
lea
xor
enter
push
shrb
add
leave
mov
fs
inc
sbb
xor
adc
scas
cmc
stos
jp
xchg
sbb
add
mov
push
cli
and
aas
in
imul
add
jb
dec
or
xor
pop
int3
in
add
xor
in
pop
call
addl
mov
mov
xchg
sbb
or
int3
jo
loope
das
adc
fsubr
cwtl
mov
xchg
mov
add
inc
es
mov
hlt
in
jp
xor
mov
mov
inc
out
test
imul
fists
dec
loope
and
or
fbld
mov
jne
push
inc
jno
xor
sar
enter
add
js
inc
xor
lods
and
xor
rolb
xor
loope
xor
push
loopne
adc
ja
les
xchg
xor
xchg
sub
rcrb
bound
push
cmp
add
pop
mov
lds
insl
dec
mov
bound
popa
sahf
add
pusha
sub
loopne
lods
sub
in
inc
sbb
push
dec
loop
add
rclb
std
cmp
repz
add
jg
sub
lret
ja
pop
testb
out
lods
pusha
add
mov
xor
imul
jmp
add
test
in
shrl
xchg
or
sub
and
aam
dec
xchg
inc
mov
nop
jo
mov
sbb
shrl
movsl
call
and
out
inc
add
test
out
dec
mov
sbb
and
mov
sub
sub
or
push
add
mov
jg
adcb
divb
jmp
pop
pop
sarb
push
push
mov
jno
roll
adc
and
mov
addr16
aas
sub
cmp
add
mov
push
pop
call
shll
dec
sbb
cli
push
rorb
mov
pop
or
inc
or
push
call
mov
xchg
and
andl
sbb
shl
inc
dec
mov
mov
mov
daa
inc
dec
ja
adc
add
inc
pop
fmull
sbb
test
sbb
gs
or
sub
push
ret
mov
sahf
addb
xchg
push
and
out
sysret
addl
mov
ret
dec
sub
adcl
add
mov
push
bound
sub
jmp
push
rcr
add
or
fstpt
dec
adc
xlat
fisubrs
aam
roll
jp
aad
jno
or
bound
jmp
or
pop
mov
dec
test
aad
inc
lock
jae
sbb
fwait
cmp
enter
lea
jb
scas
mov
rorb
mov
std
stc
sub
loopne
add
subb
lock
int
lds
jo
cld
popa
or
mov
lods
pop
add
mov
gs
pop
adc
roll
sub
xchg
adc
pop
out
movsl
stos
jne
popf
mov
cmpsl
repz
ja
bnd
mov
lods
roll
mov
je
mov
in
and
inc
lock
or
pop
ljmp
daa
mov
je
lcall
mov
adc
and
loopne
daa
pop
add
pusha
adc
and
push
in
and
and
loopne
ud2
cmovae
rolb
add
outsb
adc
cld
dec
cwtl
mov
popf
lahf
ret
push
sub
js
and
sbb
mov
lock
loope
cmc
sbb
add
and
punpckldq
sahf
xlat
xor
flds
xchg
xchg
iret
out
imul
test
cmp
scas
adc
inc
cld
hlt
adc
fstps
bound
mov
inc
imul
icebp
popf
js
test
mov
nop
js
test
xor
push
mov
outsl
add
jg
data16
inc
addr16
add
mov
cld
adc
dec
lock
cmpsb
ss
les
andl
cmpsb
add
mov
xchg
mov
into
xor
test
xor
push
sbb
cs
mulb
push
mov
int3
mov
or
inc
fwait
dec
push
inc
and
adc
and
popa
xchg
int
push
cmpsl
cld
rorb
mov
in
pop
and
dec
push
xchg
jp
add
mov
push
sbb
and
push
fdivs
loopne
ja
in
or
in
out
mov
adc
adc
or
and
ret
cmpsb
inc
or
sub
jge
adc
lock
jo
std
lahf
mov
dec
cmpsl
or
dec
push
xchg
test
stc
lock
clc
or
leave
and
popa
scas
dec
sbb
xor
pop
or
add
add
aam
dec
das
in
daa
bound
inc
aaa
stc
shll
out
cld
inc
add
add
dec
cld
dec
mov
mov
add
frstor
addr16
mov
call
ret
test
mov
xchg
mov
mov
xor
mov
test
stos
out
enter
loope
dec
aam
adc
iret
sahf
jmp
mov
sbb
sub
xchg
rcr
lahf
cld
stos
lods
lret
sbb
dec
cli
loop
icebp
sub
xor
and
insl
rcr
jge
addl
popf
rcl
or
andb
jno
stc
xchg
or
xor
jp
shl
andb
push
negb
mov
rolb
jecxz
into
inc
negb
testl
lock
adc
adc
dec
test
jno
cmp
mov
mov
jbe
les
sbb
daa
aaa
mov
or
in
jmp
xor
andb
xor
hlt
mov
mov
sbbl
int3
orb
repz
ret
xchg
js
xchg
daa
daa
js
xor
jmp
sbb
pop
sbb
pop
ss
je
repnz
ret
sbb
nop
ja
and
loopne
jmp
xor
in
push
scas
repnz
in
push
push
sub
mov
insl
mov
pop
je
sbb
lret
aam
mov
inc
sbb
stos
jae
lods
cmc
or
add
fistpll
push
jno
push
imul
outsb
or
inc
push
movsl
add
cmpsb
xchg
sar
jp
pop
aaa
fdivrs
add
icebp
dec
loope
nop
xor
mov
push
dec
mov
adc
out
and
add
adc
push
icebp
add
mov
push
movsl
mov
sbb
dec
inc
je
roll
js
es
adc
inc
je
sub
mov
out
inc
mov
sub
fwait
ss
sbb
sub
pop
adc
and
xchg
ljmp
dec
cmc
mov
popa
sbb
or
mov
mov
jo
or
adc
inc
sub
in
mov
cli
addr16
jg
push
in
push
call
pop
shrl
cmp
pop
add
mov
dec
loopne
xor
jl
lret
mov
pop
cmp
enter
push
mov
xchg
inc
loop
mov
das
inc
mov
sbb
dec
icebp
cmp
int
lea
mov
aaa
mov
inc
and
and
xlat
xchg
jecxz
sbb
push
xor
sub
push
mov
sbb
ret
ret
pusha
push
mov
jmp
loopne
push
dec
ljmp
push
dec
xchg
test
fistpll
adc
repz
out
xchg
test
js
addb
in
sub
cmp
add
mov
fildll
out
fs
adc
xchg
inc
or
loopne
js
sbb
jmp
mov
fsubs
inc
sub
loope
pop
pop
int
lea
loope
jmp
js
mov
xchg
pusha
xor
jo
mov
push
loopne
loop
sbb
insb
sarb
sbb
adc
es
in
leave
cltd
pop
or
mov
add
icebp
out
push
jecxz
shr
push
pop
pop
jg
invd
or
aad
iret
and
adc
and
lea
sub
mov
mov
jecxz
xor
jl
imul
sub
adc
and
mov
cmpl
mov
xchg
fsubrl
shrb
in
fildl
add
cmpsl
add
fnstcw
icebp
loope
cwtl
push
dec
mov
fildll
pop
ffree
outsb
pop
jle
das
test
or
bswap
js
aas
or
adc
xor
rolb
mov
add
ret
and
xor
sbb
rorl
lock
xor
sub
pop
addl
add
pop
jmp
ja
mov
nop
leave
pop
loop
pop
push
nop
or
sti
sub
sbb
jmp
pop
shr
js
add
sbb
imul
daa
je
xlat
and
add
inc
jl
rorb
xlat
shll
add
mov
xor
mov
daa
arpl
mov
not
daa
push
arpl
push
mov
or
jb
and
dec
mov
mov
loope
cld
sbb
xchg
mov
lea
pop
pusha
addl
cmp
pop
jl
xchg
and
push
mov
call
les
insl
mov
adc
aaa
jg
outsb
inc
dec
loope
outsb
and
adc
dec
js
add
test
xchg
imul
jle
subl
sarb
jnp
adc
aam
add
cmp
lods
je
out
imul
js
xor
xchg
push
adcb
adc
mov
xchg
outsl
popf
mov
enter
fstpt
sbb
outsl
sbb
add
adcl
pop
in
and
xor
pusha
les
push
jecxz
xor
mov
data16
mov
mov
rorb
jp
add
inc
js
pushf
cld
sub
cwtl
jno
scas
mov
ret
cmp
pop
dec
dec
sti
mov
jp
loope
add
jmp
pop
or
add
arpl
loop
inc
cmpsb
les
pop
cmp
and
and
scas
mov
pop
cmp
add
jns
push
test
or
adc
xor
jle
xor
push
push
shrb
push
outsl
dec
push
xorl
hlt
or
test
repnz
or
dec
pop
into
dec
xchg
loope
mov
ret
inc
xchg
clc
hlt
inc
inc
cmp
add
cmpsl
xor
dec
or
inc
out
fisubl
mov
adc
xchg
bound
lods
adc
lcall
lahf
nop
rcrl
adc
in
add
or
call
add
or
cmp
jl
out
les
push
add
add
pop
fs
loopne
cmp
int
lea
loope
jno
pop
in
adc
inc
shl
mov
dec
xor
push
push
xchg
push
push
pop
cld
push
mov
adc
add
push
outsb
iret
jne
call
push
mov
adc
sub
inc
mov
and
arpl
fdiv
mov
clc
dec
mov
decl
imul
add
push
add
pop
cmpsb
sbb
add
out
je
add
addb
cmc
lret
xchg
push
xchg
pusha
cmp
xorl
mov
test
popf
test
js
or
hlt
mov
push
add
ds
cmp
les
lods
mov
mov
flds
dec
pop
and
mov
jbe
push
mul
dec
call
jmp
mov
sub
cmp
push
ds
add
adc
mov
sub
dec
jmp
sub
pop
lret
lret
cmpsb
lods
or
daa
or
sbb
add
or
js
iret
dec
icebp
sbb
lods
dec
inc
dec
cs
or
sti
aam
sbb
sub
mov
mov
xor
adc
or
fdivrl
add
or
add
mov
test
xchg
inc
cmp
add
addl
loopne
pop
clc
jg
ret
jmp
or
mov
xor
push
add
sub
add
add
movl
loope
inc
dec
sub
das
cmp
repz
sahf
idivl
xchg
nop
sbb
outsl
lret
inc
sbb
mov
ja
fsubl
adc
mov
mov
dec
xchg
out
dec
icebp
cmp
add
sbb
mov
loopne
push
mov
or
addl
lds
mov
mov
jge
lcall
and
or
mov
cmpsl
mov
aaa
mov
mov
dec
and
sbb
fistl
jbe
xor
ja
stos
movsl
icebp
ret
mov
test
hlt
inc
cmp
jns
sbb
xchg
inc
mov
loop
xor
loop
or
sub
and
fs
sub
adc
inc
mov
cwtl
add
daa
cmp
lods
cs
xor
push
lock
inc
xchg
mov
loope
pop
lea
ljmp
inc
mov
and
xor
pop
or
pop
and
out
call
adc
adc
mov
loop
adc
incl
repnz
dec
jmp
clc
xchg
sub
clc
rcl
adc
pop
jnp
rolb
pop
cmp
call
ljmp
adc
inc
dec
push
rorb
mov
fistpll
fcoml
outsl
xlat
pop
sub
dec
test
call
or
shl
pop
fcoml
stc
sub
inc
std
filds
or
push
and
xor
sbb
mov
mov
loopne
dec
pop
jb
es
xchg
jge
loopne
in
imul
push
pop
popa
test
sub
lea
pop
cmp
rorb
pop
sub
fwait
sub
call
mov
cmp
das
call
popa
js
nop
test
xor
adc
mov
cmp
pop
and
cmc
shrd
xor
fisubrs
push
arpl
stos
dec
sub
popf
xor
inc
ret
ret
loopne
pop
xchg
mov
xchg
push
jmp
sbb
mov
xchg
filds
popa
dec
call
test
pusha
ret
pushf
adc
mov
outsl
sahf
mov
mov
cmpsb
ss
je
or
and
test
stos
mov
xor
or
cwtl
or
sbb
inc
mov
inc
rclb
xor
push
jbe
out
sbb
inc
push
pop
sbb
mov
in
add
lea
hlt
push
repz
cmp
lods
jp
cmpsb
aam
dec
movb
aas
cmova
add
cmc
jmp
mov
mov
push
fstpt
mov
xchg
jmp
sbb
out
test
daa
dec
aas
or
stos
cmp
xchg
ja
stos
movsl
ret
jecxz
aam
loop
jbe
mov
dec
push
add
push
in
test
sub
cmc
rcr
fnsave
inc
out
pop
and
push
pusha
fwait
pop
mov
imul
setbe
daa
mov
fsubrs
es
in
xor
dec
mov
and
add
in
cmp
inc
mov
pop
mov
mov
inc
inc
rcrb
sbb
call
dec
aad
lock
int
or
inc
push
out
xchg
and
decb
dec
test
inc
pop
cwtl
test
xor
js
jge
pop
movsl
call
sbb
fisubrs
arpl
add
jmp
push
andb
aam
sub
and
mov
in
sub
inc
inc
add
dec
loopne
lea
jmp
loopne
inc
jno
mov
popf
jmp
cmp
int3
push
mov
popf
fcoml
sbb
mov
push
call
mov
int3
xor
icebp
xchg
xor
jecxz
hlt
or
adc
mulb
or
adc
push
xchg
andl
lret
jnp
sbb
mov
aam
scas
loope
daa
ror
sbb
sarl
mov
xor
sub
mov
xor
imul
scas
push
rolb
inc
mov
mov
dec
mov
push
cs
jle
sub
xor
aam
mov
pop
enter
add
push
mov
xchg
in
and
sub
sarl
push
es
rcr
add
xchg
sbb
xchg
cmpsl
dec
inc
mov
ret
xor
pop
or
int3
add
das
sub
pushf
jle
rcr
dec
adc
rolb
or
ret
lret
and
mov
sub
sub
add
movsb
sub
aam
loop
push
pop
jp
cmc
lock
imul
rorb
and
xor
dec
or
jg
push
sbb
shrb
adc
repnz
aas
in
adc
sub
adc
inc
push
add
and
orb
mov
xchg
pop
nop
cs
push
adc
push
or
test
jb
pop
inc
dec
cmp
loop
inc
pop
int
in
popf
jmp
adc
popl
fs
cmp
or
sbb
add
stc
adc
popa
jmp
mov
xchg
xorb
cld
push
or
cmp
inc
cli
mov
or
mov
jne
mov
test
add
cmpb
aam
push
loop
xchg
mov
cwtl
xor
popa
js
nop
dec
int3
and
stos
faddp
mov
fs
xchg
dec
jg
roll
xchg
mov
rolb
in
adc
test
aaa
add
test
jge
mov
xchg
das
sub
loope
push
adc
dec
int
movb
mov
xlat
cltd
jge
dec
lret
out
push
jmp
out
mov
les
mov
xor
or
lcall
mov
sbb
lret
repnz
add
add
and
pop
pop
xor
aas
xor
or
push
add
inc
mov
push
push
clc
push
sarb
dec
push
pop
or
push
push
lock
and
sbb
stc
inc
lods
fstpt
inc
or
lods
pop
lcall
pop
inc
in
movsl
fldcw
add
imul
loop
cmc
call
mov
pop
push
pop
inc
mov
or
test
rclb
mov
fildl
jp,pn
or
sub
pop
lahf
in
push
adc
dec
inc
and
mov
mov
adc
orl
fcoms
mov
adc
mov
cli
dec
out
add
add
scas
mov
or
rorb
mov
and
lds
or
aam
sbb
and
lods
xor
inc
loope
or
hlt
xchg
shrb
fdivrs
rcr
or
lock
sbb
sbb
stos
dec
faddl
shlb
je
xlat
ret
lahf
push
mov
dec
lock
shrb
ljmp
xor
sbb
or
push
arpl
add
cmpsb
sbb
inc
xor
mov
dec
lret
add
mov
test
or
outsl
lods
orl
pop
jno
mov
or
xor
xor
stos
jne
push
movsb
dec
and
jo
push
popa
imul
sub
or
push
out
lahf
xor
jecxz
mov
mov
jmp
aad
adc
int3
sbb
add
lock
pop
cmp
jmp
jno
in
add
or
insl
shlb
icebp
shll
loop
inc
enter
in
jmp
ret
add
orl
push
lds
loopne
and
sbb
jo
mov
ss
in
shl
loopne
or
sahf
call
xorl
adc
ret
aas
push
mov
push
pusha
cld
cs
jb
sub
dec
test
popf
push
inc
shrl
icebp
push
hlt
scas
test
sub
or
or
fidivrs
xorb
jo
and
and
dec
and
push
or
add
rcrb
sub
push
pop
inc
inc
shr
inc
sbb
fidivl
xlat
lods
scas
mov
insb
cli
lds
mov
dec
repz
and
cmc
lret
insl
mov
add
xchg
xor
and
sub
lock
add
cmpl
xor
dec
adc
fmuls
adc
iret
jno,pn
addr16
loopne
dec
stc
and
sub
adc
or
loope
les
xor
sbb
stos
xchg
rorb
jl
jo
and
cmp
ret
rclb
bound
lds
mov
outsl
sub
fldl2t
mov
push
rol
dec
pop
mov
cli
rol
add
out
xchg
mov
outsl
daa
addl
adc
jne
scas
cmp
add
add
or
and
mov
cmp
inc
testl
roll
adc
inc
dec
out
or
rep
mov
imul
in
enter
test
fisubrs
xchg
or
push
lock
and
sub
pop
shr
push
or
mov
fwait
jo
sub
mov
jbe
sarb
adc
test
mov
call
mov
enter
jb
aam
mov
or
je
std
jo
mov
sbb
sbb
pop
scas
rep
loope
pop
push
mov
sbb
icebp
cs
push
int
bound
push
pop
lret
out
push
icebp
xorl
cmp
jo
adc
popa
xor
xchg
add
add
xchg
aam
cmp
cld
inc
mov
test
mov
or
dec
outsb
inc
sbb
sahf
je
mov
sbb
and
dec
div
jge
pop
call
adc
mov
movsb
imul
sbb
fsubrs
sub
clc
mov
mov
cmpb
xlat
das
push
push
jne
add
rclb
push
movsl
popa
nop
pop
clc
mov
cwtl
pop
insb
sbb
jb
add
loop
sbb
and
push
incl
or
jne
push
xchg
sbb
inc
xor
test
add
jecxz
arpl
jecxz
xchg
mov
filds
sbb
and
aam
pop
lds
jmp
ja
ficoml
subb
rolb
mov
jno
sbb
inc
enter
movsl
cmpsb
fsubl
rclb
mov
insl
mov
mov
lcall
sub
cmpsl
movb
cmp
mov
imul
push
jge
xor
fadd
mov
adc
inc
incl
jmp
lea
fstl
xor
or
cltd
lea
push
ss
adc
rcrl
cli
js
movsb
mull
mulb
orl
or
adc
out
les
push
ret
popa
mov
lea
test
outsb
xor
sub
mov
mov
xchg
subl
dec
add
and
adc
je
call
in
adc
push
fwait
sbb
inc
ja
xlat
xor
loope
lds
test
decl
add
outsb
and
jno
add
inc
sbb
inc
push
or
xor
add
sub
push
imul
jge
insb
push
or
jecxz
sbb
out
ret
sub
in
adc
adcb
fists
and
jo
mov
dec
push
jl
test
mov
mov
pop
mov
mov
add
adc
test
fdivp
daa
out
jo
mov
insb
dec
push
inc
movsl
inc
pop
iret
cmpsl
add
popa
mov
xor
push
jp
inc
lahf
cmp
loopne
das
pop
xchg
fwait
loope
scas
push
add
dec
clc
jge
fsubr
stos
rcr
lcall
das
dec
out
ret
jbe
lods
rclb
sar
movsb
movsl
or
xor
test
adc
test
add
and
outsb
mov
dec
in
pop
cmp
xor
jmp
cltd
in
call
mov
jae
add
cli
dec
test
jp
inc
add
mov
add
and
mov
icebp
mov
lock
cld
fcompl
add
xor
jl
lods
in
mov
add
imul
push
push
call
stos
pop
clc
rcrl
push
mov
orb
mov
call
adc
mov
shlb
push
add
cltd
fisubrs
jo
fildl
arpl
and
jecxz
mov
and
xlat
clc
xchg
mov
in
bound
repnz
in
icebp
js
jo
or
sarl
mov
das
imul
pop
or
ljmp
mov
decl
pop
shll
push
add
out
push
sbb
pop
mov
jae
xor
les
cmc
adc
div
inc
and
and
jecxz
mov
popa
lret
add
loope
add
es
add
fs
add
cmc
lret
into
xorb
sub
add
fisttps
jmp
ds
das
mov
add
jl
test
loop
daa
insb
add
icebp
fs
xchg
lods
shll
cld
jge
lahf
and
lock
jmp
ret
int3
xor
lods
sbb
addl
sub
lea
inc
jecxz
cltd
data16
xor
xor
add
fs
insl
loopne
xor
inc
adc
filds
out
add
add
mov
pop
ja
nop
scas
add
into
mov
xchg
mov
jecxz
incb
fdivrl
lock
loopne
out
loope
rorb
xor
decl
mov
add
xchg
sbb
pop
add
and
ud1
rcrb
sbb
rorb
or
pop
jge
push
xlat
inc
mov
cltd
dec
or
xchg
lds
xchg
ret
dec
loop
inc
cmpsb
or
orb
cmp
shl
aaa
or
push
mov
pop
js
mov
sbb
rolb
or
cmc
and
insl
xor
sbb
inc
in
mov
cltd
inc
add
sbb
or
sub
jb
mov
rolb
shrb
sarb
out
mov
cli
mov
or
fimull
aaa
dec
mov
ret
mov
dec
pop
lock
add
jmp
sub
pop
or
jo
sbb
push
add
cmp
adc
cmp
in
ret
xor
sub
in
xor
mov
cmp
mov
jb
in
or
or
pop
out
les
divl
in
ljmp
in
add
push
cli
cltd
mov
call
add
jo
sbb
mov
les
into
sub
subb
rcrb
lret
in
mov
sub
jo
push
incb
inc
fs
sub
imul
loop
incb
inc
inc
mov
ja
lcall
shrb
mov
enter
sbb
lcall
push
dec
repz
movsl
or
jb
shl
adc
sub
out
shrb
shlb
aad
cmpl
dec
dec
bound
lea
aad
add
adc
out
and
dec
daa
cmp
les
mov
jae
mov
mov
pop
dec
stc
shrb
popa
pop
pop
fiadds
fcomps
dec
pop
sbb
cmp
orb
dec
sarb
pop
test
loopne
adc
sbb
cmp
adc
add
pop
dec
nop
loope
ret
and
out
mov
jmp
lock
jp
push
cmp
xor
mov
test
jmp
cmp
sbb
mov
xchg
push
negl
shrb
push
outsb
mov
clc
negl
aas
pop
inc
mov
sbb
push
mov
ret
and
lock
adc
subb
sub
mov
cmp
xlat
shrl
cs
mov
xchg
xor
lods
stos
into
cmp
fsqrt
ja
pushf
shl
movsl
or
inc
arpl
add
and
add
xchg
lret
nop
pop
and
aam
adc
movsb
inc
cmpsl
insb
stos
ret
cli
or
inc
inc
mov
dec
inc
sub
js
cmc
xorl
arpl
es
and
in
xor
stos
mov
and
mov
rclb
and
addb
and
stc
call
lds
movsb
loop
les
cmc
mov
push
adc
dec
dec
or
jbe
call
dec
adc
icebp
orl
mov
ljmp
mov
or
xchg
jno
push
jo
ljmp
out
adc
jae
lret
fistpll
leave
insl
subl
enter
add
or
fadd
pop
xor
shll
adc
clc
mov
icebp
je
test
jmp
fimull
inc
ret
push
add
lods
lods
push
jecxz
jmp
xchg
shll
lods
testl
stc
push
mov
jle
add
out
mov
incl
fldt
mov
sub
mov
add
dec
fcomp
test
adc
xor
mov
aam
pop
mov
adc
xchg
push
ss
insl
push
jns
mov
push
cmpl
dec
and
mov
sbb
add
adc
test
push
mov
js
out
dec
js
xor
xchg
pop
jnp
mov
stos
lea
xchg
cmp
or
xchg
jecxz
aam
mov
xchg
adcb
adcl
out
adc
aas
call
cmp
sbb
aam
push
mov
adc
xchg
imul
add
xchg
out
mov
push
fildl
stos
daa
ljmp
outsb
xchg
roll
dec
aam
rorb
xchg
jne
adc
les
or
fcmovb
adc
jmp
ret
cwtl
js
add
clc
and
std
flds
inc
sub
faddl
sub
sbb
jmp
and
push
inc
and
jge
imul
loope
mov
dec
mov
adc
rorl
inc
and
roll
popa
loopew
fisubrl
adc
sub
cli
shrb
cs
decl
pop
shlb
aad
cli
xchg
mov
popf
and
xchg
clc
xor
cmp
pop
or
mov
aad
imul
test
push
add
xor
adc
pop
inc
inc
arpl
or
push
aaa
dec
mov
lods
cmpsb
pop
js
inc
mov
dec
and
sbb
add
pusha
inc
mov
or
lret
and
in
or
inc
push
scas
jb
adc
pavgw
cltd
add
cmp
lahf
rol
mov
loopne
fwait
and
shlb
insl
loope
push
cmp
mul
dec
insl
out
enter
dec
and
sub
adc
pusha
xchg
ss
stos
mov
add
ret
ss
aad
sub
xor
leave
jmp
mov
mov
and
pop
jne
ret
inc
cmp
push
fsin
call
bound
cltd
cmp
or
sbb
or
pop
adc
mov
cmp
jne
mov
sub
sbb
mov
rolb
test
loop
sub
xchg
lahf
repz
push
pop
add
fmuls
jl
jecxz
jne
lea
lcall
inc
rclb
lahf
inc
insl
add
inc
loop
ss
and
and
icebp
in
rcll
js
and
enter
sbb
mov
int
mov
inc
iret
ret
xorl
aam
sbb
cmpsl
add
dec
and
jnp
mov
cmp
push
sbb
adc
rcr
or
int3
enter
and
addl
cmc
popf
js
rolb
icebp
je
mov
imul
movsl
mov
stos
sbb
dec
fimuls
bound
add
mov
cmp
rcrl
mov
sub
or
rcrl
lahf
xchg
sbb
pusha
mov
xor
xor
dec
lock
jne
int3
push
cmpsl
cmp
or
jae
dec
xchg
pop
ret
inc
jmp
sbb
sti
pop
stc
sbb
pushf
add
mov
outsb
pop
mov
shl
sub
sbb
jae
mov
jae
adc
mov
sarb
iret
jp
add
outsl
jbe
lds
mov
xchg
cmpsb
imul
and
mov
pop
ret
jb
push
cmp
mov
fs
sub
push
dec
inc
dec
sbb
and
lock
leave
hlt
lock
incl
lods
and
add
xor
inc
mov
aaa
cmpsl
scas
xor
sar
neg
mov
jo
loope
subb
scas
mov
mov
stc
popl
mov
test
mov
leave
mov
fimull
jae
pop
dec
jno
push
test
mov
scas
xchg
out
pusha
lock
shll
mov
or
in
adc
push
sti
fildll
sbbb
and
pushf
xor
enter
lods
movsl
or
testl
mov
cmpl
sbb
cwtl
dec
test
push
cmp
aad
repz
int3
adc
mov
mov
xchg
in
jp
pop
fldl
jb
scas
mov
pop
add
pop
aas
clc
popf
mov
jne
out
popa
add
test
xchg
push
scas
cmpsb
icebp
xchg
cmc
outsb
loope
mov
jge
sbbb
mov
mov
loop
mov
jl
cld
mov
inc
pop
push
adc
ficompl
xchg
and
adc
bound
cltd
adcb
sti
gs
mov
repnz
ror
test
pusha
scas
dec
loope
sub
es
dec
mov
add
cs
cmpsl
jecxz
test
inc
dec
dec
or
mov
inc
decl
aam
dec
lods
adc
call
lods
mov
adc
dec
lods
push
fsubs
mov
inc
dec
rcrl
xchg
mov
aad
push
push
mov
xor
std
out
in
imul
shlb
cmp
sbb
mov
rcl
mov
sbb
xchg
outsl
inc
add
hlt
inc
cmp
or
dec
out
cmc
mov
add
and
jmp
test
jne
loop
ja
mov
pusha
push
test
stos
jnp
fistl
xchg
mov
jmp
clc
cmp
sub
inc
jl
insl
data16
push
lea
and
ds
jne
mov
mov
push
sbb
mov
add
ljmp
stc
mov
or
int
or
ficomps
movsb
push
rolb
stos
or
fdivs
sbb
das
shr
dec
cmp
cmp
stos
jl
add
jge
sarb
ja
jle
add
cmp
test
adc
or
imull
add
sbb
adc
and
jae
aaa
cld
outsb
or
mov
mov
fcom
imul
mov
inc
or
add
mov
lea
inc
inc
ja
xor
inc
sbb
stc
mov
mov
arpl
mov
test
xchg
and
mov
outsb
mov
inc
xor
aas
xchg
xor
dec
sbb
cli
mov
or
add
inc
sbb
test
int
jecxz
lahf
test
cmp
and
pop
sti
adc
shrb
or
cltd
in
pop
lahf
cwtl
or
dec
adc
dec
popl
inc
pop
xor
out
jmp
and
insb
push
pop
push
jae
aas
mov
aad
int3
addb
add
les
ror
dec
les
enter
ss
das
lret
mov
arpl
test
subl
or
sbb
xor
adc
rorl
fs
andl
or
pop
xchg
xchg
aam
mov
push
lret
xor
mov
inc
sub
push
sbb
xor
pusha
sub
or
sub
sahf
or
test
dec
mov
fucom
push
jbe
pop
or
or
je
stc
aaa
rorb
dec
ret
mov
push
push
mov
lret
or
rorl
shl
mov
orb
push
fildl
pop
push
nop
ret
xchg
fucomi
mov
or
xor
les
andb
or
rcrb
add
jns
fwait
scas
xchg
pop
adc
inc
adc
xchg
push
cmp
dec
add
dec
loopne
test
or
inc
and
sahf
scas
xchg
cmpsb
inc
jnp
aad
jo
fildl
mov
fdivr
jg
loope
lds
sub
cmp
test
jo
add
xchg
or
dec
add
int3
mov
mov
outsb
mov
xchg
push
imul
mov
or
ret
xlat
out
lea
imul
ja
imul
cmp
rcrb
and
adc
sbb
enter
dec
jmp
push
dec
add
cmp
test
je
xor
push
dec
mov
push
push
test
dec
cmpsl
push
idiv
call
ret
scas
fwait
std
icebp
mov
sbb
clc
pop
add
cli
test
push
cltd
fstpl
xchg
or
sbb
leave
sbb
loop
mov
xchg
ficoms
xchg
add
sub
pushl
add
in
pop
jo
push
xchg
hlt
insb
adc
lret
js
xchg
inc
dec
loope
dec
pusha
dec
jne
call
gs
cmp
cmp
pop
adc
test
push
les
ret
call
dec
xor
orl
rorb
shrl
pop
xchg
mov
push
mov
test
into
test
add
or
xchg
div
clc
ljmp
dec
pop
sbb
aas
sub
inc
and
in
or
cmpsl
sub
jno
sbbb
sbb
enter
ljmp
mov
sub
xor
test
subb
aam
inc
imul
mov
push
icebp
punpcklwd
mov
jmp
daa
cmp
iret
lock
ds
sbb
ret
pop
test
inc
scas
pavgb
xchg
mov
orb
jae
add
inc
dec
add
aaa
popf
add
or
sub
inc
pop
adc
ljmp
sbb
adc
or
addl
pusha
bound
loop
adc
xor
je,pn
cmp
pop
in
inc
and
imull
hlt
sarb
jecxz
mov
xorb
enter
icebp
shlb
xchg
mov
add
popa
sti
xchg
pop
test
rcrb
icebp
icebp
adc
hlt
jno
test
loope
adc
push
iret
pop
adc
fst
ret
mov
aam
mov
imul
das
les
addl
sub
xchg
add
stos
inc
imul
pop
or
xor
cmp
fsubl
mov
imul
jbe
cmp
lea
sub
mov
insl
loope
adc
int
cmp
cmp
js
jg
fdivrl
or
cmpl
ds
out
mov
xchg
hlt
sbb
add
adc
jne
mov
xor
mov
mov
adc
push
test
mov
mov
aaa
add
xor
rclb
js
bound
or
movsl
in
cmpsl
cwtl
and
dec
imul
sti
ss
sbb
and
xchg
push
mov
push
add
jns
mov
mov
lmsw
pop
add
aaa
add
or
sbb
sbb
call
es
fs
imul
push
pop
mov
mov
mov
pop
cli
pop
adcl
call
lea
or
test
sub
cmpsb
push
loopne
sbb
xchg
push
ds
movsb
adc
mov
fldenv
mull
add
int
rcl
cmp
xchg
scas
xchg
rolb
and
cwtl
in
xor
adc
xor
mov
sbb
jnp
mov
dec
into
movsl
mov
clc
popa
int3
stos
dec
xchg
xchg
push
mov
popa
test
pop
push
cmp
jl
push
xchg
and
pop
movsl
push
ret
pop
mov
sub
and
inc
faddl
jmp
add
adc
add
xchg
add
aam
mov
cltd
or
pushf
mov
xor
jp
and
jnp
repz
adc
imul
add
in
rcrb
inc
jmp
imul
pop
or
or
popf
test
test
lret
mov
adc
ss
dec
xor
jg
mov
pop
xchg
aas
popa
push
add
je
ljmp
shlb
mov
ret
testl
and
inc
and
sbbl
subl
jp
adc
roll
pop
jp
mov
add
mov
cmp
test
cmpsl
enter
pop
mov
xchg
stos
mov
mov
xchg
orb
shrb
into
fcomps
add
jge
push
wbinvd
mov
or
cmp
pop
aad
xor
xchg
sbb
add
jge
and
jg
or
xor
ret
push
or
test
mov
in
pop
ret
lcall
xchg
fs
pushf
add
out
stos
outsl
jl
ss
dec
pop
ffree
decl
rcll
mov
xor
test
jg
push
xor
fs
add
mov
stos
data16
and
mov
movsl
xchg
mov
icebp
ljmp
lcall
ljmp
xor
mov
mov
lret
clc
pop
pushf
sub
jmp
dec
inc
cld
xlat
ret
xchg
add
ret
cmc
pushf
add
mov
jle
xchg
add
add
push
adc
xor
mov
testb
mov
aam
sub
mov
push
jnp
push
fildll
lret
loope
lret
test
ljmp
lock
mov
adc
cmp
fildl
cs
icebp
rol
pop
add
adc
mov
sar
mov
add
lock
add
loopne
push
and
add
int
sub
scas
sbb
add
notl
inc
jb
add
mov
jne
sbb
lock
add
sbb
lahf
inc
ret
jp
push
hlt
xchg
jmp
cmpsl
in
or
jecxz
or
pusha
pop
sbb
jo
andb
inc
lods
add
adc
dec
jl
les
scas
adc
or
andl
push
cmp
adc
loope
add
adc
mov
xchg
stos
clc
xor
push
sub
pop
jns
rclb
in
xchg
pop
inc
add
test
inc
in
in
mov
adc
shrl
pusha
call
inc
rorb
cmpsl
imul
adc
adc
xor
sarb
dec
adc
dec
add
and
push
ret
shl
test
add
jg
and
xor
lea
jb
or
pop
add
rcl
std
mov
jo
jl
push
add
sub
inc
inc
adc
test
cmp
dec
rcrl
in
adc
out
sub
pop
idivb
add
loopne
cwtl
add
loope
aad
loope
nop
sbb
aaa
and
mov
data16
inc
push
add
incb
aaa
push
xchg
in
or
xchg
sbb
cmp
sbb
and
pop
pop
dec
rcrb
call
fs
shlb
ss
inc
add
fcoms
or
jmp
mov
testb
jle
dec
sub
js
jno
test
or
jl
fdivrl
jno
dec
mov
ror
and
imul
jge
and
es
std
push
jl
les
mov
and
or
data16
inc
std
insb
sbb
add
in
rolb
shr
jno
or
js
popa
and
pop
js
fsub
sbb
test
inc
fiaddl
inc
sub
push
fistl
add
rorb
add
add
or
and
aam
test
or
nop
pop
leave
adc
jbe
sti
adc
popa
add
in
adc
aas
cli
andl
dec
or
and
adc
in
or
fldl
aaa
xor
add
fdiv
jmp
cmp
mov
inc
fisubrs
lods
and
pop
sub
add
inc
out
and
gs
mov
mov
adc
imul
or
push
xchg
dec
popl
jb
pop
out
dec
subl
out
imul
arpl
iret
mov
pop
leave
insl
inc
mov
jne
inc
cmp
jbe
mov
sbb
or
insb
mov
add
or
clc
inc
cmc
ljmp
mov
dec
push
les
xchg
mov
jmp
repz
and
sbb
cmpsb
test
xchg
ret
sub
movsb
pop
mov
and
pusha
sbb
pusha
pop
inc
mov
orl
xchg
xor
jmp
inc
jnp
xchg
stos
and
shl
inc
sub
sbb
faddl
or
pop
ja
addr16
fnstcw
adc
subb
add
add
mov
pop
int
das
sub
inc
xor
inc
stos
cmc
mov
or
or
sub
cmovnp
repz
mov
scas
and
test
jg
sarb
mov
les
xor
fwait
mov
ret
loop
loopne
push
leave
rclb
lea
orl
jns
jmp
push
or
rolb
xchg
cs
sub
lea
mov
test
int3
dec
xor
add
adc
rolb
pusha
pop
lock
loop
sbb
inc
and
xor
sub
sbb
ret
test
insl
lods
enter
fs
add
sub
cmpb
imull
mov
ss
jmp
mov
xor
pop
bound
mov
mov
clc
sub
fucomip
xor
dec
dec
lret
add
inc
outsl
push
dec
or
cmp
push
sbb
jl
pop
pop
lods
inc
fsubrs
xor
inc
ljmp
lods
mov
push
stos
inc
push
push
sub
imul
jg
mov
and
fwait
mov
cmp
in
ss
xchg
fsub
es
and
or
sub
aad
cs
cli
mov
lea
pop
jno
and
invd
std
ljmp
mov
xor
je
lods
aaa
into
and
push
add
clc
repz
pop
fbstp
and
dec
imul
dec
mov
daa
das
adc
gs
pusha
faddl
pusha
and
push
arpl
icebp
fcomps
insl
cmp
fdivs
xor
cmpsb
cwtl
pop
fwait
and
xor
notb
cmp
or
loope,pn
mov
outsl
xor
frstor
ljmp
cmc
daa
or
jp
sbb
lahf
jo
add
cmpsb
ljmp
or
repnz
and
push
push
or
mov
xor
dec
mov
pop
add
add
pusha
sbb
and
ret
and
mov
push
data16
stos
pop
and
and
and
push
aam
or
cmp
dec
adc
mov
out
ds
jp
cmp
dec
cld
push
in
adc
lret
cltd
and
push
orb
shl
mov
enter
inc
call
lcall
sbb
pushf
mov
lock
inc
xchg
mov
cmp
sub
push
sbb
pop
push
cmp
adc
call
cli
xchg
mov
push
add
faddl
dec
out
cmpsb
xchg
in
sbb
dec
and
cltd
int3
xor
in
dec
cmp
pop
lods
mov
or
push
xchg
cmpb
xor
ret
data16
lds
repnz
repz
add
add
adc
jg
pop
xchg
sub
xchg
inc
jo
and
jbe
nop
jp
insl
bound
push
dec
loopne
fdivrl
xchg
dec
lods
andb
sub
test
pop
shl
dec
loope
les
and
or
aas
cmc
les
stc
mov
hlt
mov
sub
aam
enter
test
mov
or
rol
and
push
icebp
add
add
mov
aaa
pop
int
and
and
lret
cmp
dec
aad
add
add
nop
rcl
fbld
fimull
inc
add
sbbb
stos
dec
pusha
insb
mov
loopne
pop
leave
jp
sub
adc
jnp
mov
jo
mov
and
dec
fiaddl
mov
pop
lock
dec
notl
std
push
mov
or
dec
outsl
out
adc
adc
cmp
sbb
adc
pusha
hlt
push
push
push
push
les
int3
jp
fs
sbb
pop
movsb
xor
mov
inc
jae
mov
cwtl
les
daa
rclb
ret
outsb
fnop
pop
jecxz
mov
roll
pop
and
decl
add
mov
inc
mov
lcall
pop
inc
lea
inc
outsb
sbb
stos
pop
cmp
mov
and
adc
inc
add
mov
sbbl
or
ljmp
push
sub
jecxz
sbb
adc
insb
cmp
test
xchg
xor
into
add
movsl
ficoms
adc
outsl
clc
clc
xor
les
jno
sahf
and
adc
dec
adc
stos
push
pop
xchg
sbb
les
les
std
dec
iret
xor
pusha
and
xor
sti
push
add
sub
enter
int
mov
push
movsb
test
cmp
clc
jne
lret
cmp
cmpsb
inc
xchg
and
mov
lods
out
fs
inc
sbb
pop
cs
loope
xchg
cmp
gs
cwtl
jmp
mov
dec
nop
pop
inc
std
inc
out
stc
and
lock
mov
jns
xchg
and
inc
loop
add
jnp
sbb
or
adc
or
clc
push
adc
push
loopne
pusha
cmp
push
jne
and
xchg
push
sub
shrl
push
inc
push
sbb
sbbb
aam
divl
jno
add
jns
sbb
ret
jo
and
sarl
sub
int3
pop
or
fmull
data16
les
out
je
gs
test
jne
push
adc
test
sbb
pop
jbe
fimuls
aam
sar
sub
add
push
mov
sbb
iret
jo
or
add
add
icebp
adc
lea
cs
js
push
push
jae
cmpsl
adc
mov
add
mov
fnstsw
lock
movsb
adc
fcmovnbe
jo
inc
dec
sbb
add
jecxz
aam
push
pop
sahf
nop
add
jne
mov
aad
rcrb
xor
scas
push
push
add
ja
inc
sbb
imul
add
jae
adc
pop
add
ret
or
in
orb
mov
and
and
pusha
jnp
loopne
inc
or
xchg
or
or
stos
push
add
and
aad
ret
imul
add
and
aad
push
sbb
adc
dec
adc
pushf
mov
or
loopne
pusha
mov
sub
add
aad
add
and
test
daa
test
outsb
sbb
push
jnp
dec
roll
xchg
mov
rclb
fmull
jbe
scas
mov
add
inc
stc
scas
out
add
mov
mov
fdivrl
iret
or
push
lock
adc
cmp
icebp
xor
std
ds
inc
imul
add
inc
push
inc
cmp
roll
add
pop
dec
in
push
in
xor
xchg
imul
ljmp
or
loopne
and
mov
lret
sbb
mov
scas
gs
cmc
hlt
and
add
dec
dec
ret
xchg
adc
push
lret
mov
mov
inc
fs
jnp
in
dec
and
adc
push
movsb
aam
fs
sub
pushf
pushf
adc
pop
jg
lret
sbb
rcrl
pop
pushf
test
jb
sub
mov
lock
jp
jmp
movsl
cmp
pop
sub
sbb
mov
loop
es
xor
mov
pop
stos
push
lahf
sub
andb
orl
mov
pop
in
inc
xor
out
fwait
cli
ss
pop
data16
xchg
add
jmp
out
push
push
in
leave
ret
sbb
mov
mov
in
sbb
add
fisttps
jg
jb
pop
adc
sbb
mov
dec
jmp
xchg
or
jmp
fmuls
test
loope
cmp
cmp
popa
jno
pop
jmp
call
imull
fwait
sti
sub
shl
push
dec
mull
pusha
and
fs
dec
inc
mov
orl
imul
in
sbb
test
xchg
roll
jg
push
out
imul
sbb
enter
je
dec
adcb
sbb
imul
cmpsl
test
mov
push
mov
sub
loop
xor
xchg
push
push
jmp
jb
pusha
push
nop
mov
jge
es
lcall
mov
mov
insb
and
or
in
mov
cmp
add
ss
pop
nop
lcall
test
mov
sti
test
mov
sti
sbb
hlt
sbb
hlt
mov
mov
shr
xor
or
cmp
and
push
rol
push
scas
jae
orb
pop
mov
testl
aaa
jge
stos
idivb
jo
in
xchg
or
movsl
inc
out
sub
cmc
xchg
icebp
outsb
stos
jo
or
inc
into
dec
add
sbb
mov
mov
loope
rolb
cmp
pusha
out
jb
hlt
or
shl
push
xor
sub
test
or
mov
test
iret
in
pushf
ss
inc
leave
lock
int
cwtl
in
movsb
xor
andb
mov
dec
imul
movl
mov
cs
out
and
inc
pop
fmull
sub
xchg
xor
push
sub
xor
jo
jl
js
adc
sbb
cmp
xchg
lds
mov
pop
or
cmpsb
aas
add
loop
cmpl
movsl
push
push
sti
fsts
adc
dec
in
lock
pop
bound
popf
xor
js
fcmovnb
cmp
mov
or
es
sub
lods
add
call
adc
pop
scas
pop
adc
jne
rcrb
cmp
sarl
repz
add
cmc
jb
jbe
es
mov
int3
nop
mov
dec
shrb
test
and
loop
hlt
shr
or
add
loope
inc
lahf
aas
sbb
ret
or
es
mov
lahf
jne
sarl
push
cmc
cmp
adc
in
lcall
pop
dec
and
xor
or
out
stc
cmp
iret
and
movl
nop
xchg
xor
int3
mov
xor
dec
sbb
sub
sub
sahf
mov
lret
frstor
push
mov
dec
loope
and
cld
pop
add
sub
xchg
lock
xchg
pushf
cmp
xor
arpl
pop
jb
pop
in
push
test
je
or
dec
add
fcomps
or
pop
dec
ret
jno
imul
inc
dec
loopne
js
lahf
into
pop
and
xchg
push
ror
or
push
or
je
sub
inc
in
xchg
in
sbb
inc
sub
popf
in
jmp
outsb
popf
cmp
daa
lea
je
cmc
push
mov
and
inc
add
inc
cli
fs
xchg
call
sbb
mov
or
xchg
ret
icebp
mov
mov
xor
pop
inc
and
sbb
and
fidivl
jne
jl
test
adc
test
inc
cmp
cmp
jl
adc
sbbb
fcom
adc
and
lods
add
inc
add
decb
inc
jle
orb
jo
shlb
or
or
add
loope
xor
mov
outsl
flds
add
dec
add
jmp
xor
test
stc
add
dec
adc
and
cs
clc
and
inc
dec
fisubrl
gs
loope
cld
pop
rorb
and
negl
adc
dec
and
sub
jecxz
xor
or
cmp
call
aaa
jecxz
out
mov
in
pop
hlt
sub
mov
jge
inc
clc
dec
fidivrs
loope
call
int
sub
outsb
adc
jle
js
clc
or
jns
or
mov
dec
sub
into
lret
inc
int3
mov
adc
jmp
lea
test
icebp
cs
mov
imul
mov
mov
adc
nop
adc
bound
jg
push
dec
cltd
loopne
or
add
pop
adc
xorb
inc
mov
add
pop
jecxz
imul
movsb
push
jae
inc
sbb
rorl
xor
subb
loop
or
jae
sub
daa
ror
xlat
aad
xor
popa
push
jns
outsl
sbb
jge
mov
add
lods
sub
xchg
xor
and
add
and
and
mov
ret
xchg
jbe
add
mov
loop
adc
out
add
adc
mov
stos
sub
sub
cs
push
or
mov
call
test
je
xchg
adc
or
jno
xchg
add
add
add
or
insl
roll
push
daa
popa
enter
popa
loop
fwait
stc
in
mov
xchg
and
dec
sub
mov
xchg
jmp
hlt
jge
mov
fwait
mov
sub
stos
and
cld
push
push
inc
jle
xor
call
adc
xor
aaa
sub
arpl
pushf
or
jl
and
iret
fdiv
xor
add
xor
insl
dec
cmp
pusha
xor
insb
pop
outsb
add
inc
sbb
popa
mov
dec
popa
or
mov
push
mov
xlat
and
dec
loope
leave
mov
pop
ljmp
or
adcl
incl
mov
js
fistpll
inc
sbb
xchg
data16
cmp
test
pop
dec
mull
and
sbb
dec
sub
add
xchg
sarl
dec
jle
les
mov
add
inc
sub
out
es
jmp
mov
shll
push
mull
adc
mov
add
mov
or
jmp
push
testb
adc
testb
or
dec
dec
aam
insl
xchg
mov
fs
or
adc
jmp
xchg
mov
div
add
add
push
push
xchg
add
hlt
fsubl
mov
pop
or
sbb
pop
test
je
pusha
add
xor
sti
adc
aaa
push
xchg
out
mov
ljmp
sbb
sbb
push
cld
pop
push
fistl
rcrb
ret
jne
sub
cli
stos
lea
and
or
rclb
ds
mov
jae
ret
dec
jg
or
jae
jmp
loop
daa
jne
decl
jecxz
inc
divl
clc
ret
loope
mov
clc
push
xchg
sub
cmp
dec
movsb
and
les
invd
sbb
shlb
xor
shl
dec
fcmovnb
inc
sub
xor
lret
mov
hlt
repz
mov
mov
lds
sub
mov
stos
test
sbb
and
push
push
loopne
mov
loopne
shll
mov
and
xor
enter
hlt
lret
and
mov
lea
sub
sbb
aad
insl
adcb
cmpsb
gs
lods
clc
xchg
dec
cmpb
int3
mov
iret
stos
add
mov
jne
ss
add
lods
ljmp
pop
addl
pop
mov
stos
mov
jg
push
push
and
push
push
jno
mov
mov
mov
jo
int3
mov
push
inc
push
pop
push
cmp
inc
lret
mov
ja
mov
sbb
aad
mov
cmp
stos
pop
add
bnd
mov
rcrb
or
push
adc
add
or
add
or
fcomip
fwait
incl
cmp
icebp
mov
cld
pop
sbb
loope
imul
in
dec
je
inc
mov
xchg
ret
add
jl
or
adc
ret
out
out
pop
movsl
test
inc
jecxz
mov
xor
xchg
rcr
sub
fs
xchg
shr
fldt
push
cmp
dec
mov
imul
repnz
mov
mov
js
movsb
roll
iret
xor
push
and
sub
mov
push
cmp
mov
ret
jmp
sbb
arpl
and
movl
data16
call
sub
stc
add
adc
xchg
pop
pop
pusha
movsb
das
sub
mov
rcrb
jo
ret
cltd
cmc
fs
push
aaa
mov
outsl
ror
add
loope
add
dec
cmp
and
jbe
hlt
dec
icebp
push
test
or
popa
in
les
push
call
out
ljmp
add
repnz
add
pop
dec
push
repnz
pop
sbb
popa
cmp
test
mov
ja
push
pop
add
dec
dec
ret
std
ficompl
loop
test
pop
sbb
dec
stos
test
dec
push
scas
hlt
or
and
xchg
sub
rolb
inc
popa
inc
rclb
add
pop
lods
arpl
sbb
fimuls
roll
mov
xor
push
dec
sub
cmp
cmp
cli
ret
adc
mov
add
cs
fs
xchg
fdiv
or
int3
popa
stos
rcll
cmpsl
gs
test
push
adc
loope
jne
fmulp
sahf
xor
xchg
pop
and
fnstsw
jecxz
adc
lock
xchg
gs
shll
pop
add
mov
adc
sub
adc
inc
ret
fwait
icebp
sbb
adc
sub
loopne
sbb
mov
test
into
jge
inc
testl
xor
clc
das
lods
rolb
xor
add
cld
or
outsl
loope
mov
addb
movsl
cltd
cmp
or
pop
mov
shlb
sbb
addl
adc
leave
xor
sbb
leave
xchg
mov
xchg
icebp
sub
jmp
lock
push
ror
rolb
push
lahf
sub
loope
testb
xchg
test
nop
cmp
sarl
add
rclb
sbb
enter
xorb
mov
aad
sahf
out
orl
mov
sti
sub
and
cs
push
decb
cmp
mov
das
test
clc
inc
push
add
gs
push
or
lock
mov
adc
dec
sarb
inc
cld
xchg
xchg
xchg
push
or
xorb
mov
cwtl
sub
cmp
jmp
rcr
psubb
sbb
daa
mov
and
push
popf
test
xchg
add
lahf
jp
cwtl
shlb
lock
add
mov
out
jl
mov
fwait
sbb
dec
fbld
adc
add
shlb
pop
or
and
sbb
sarl
imul
add
inc
dec
inc
push
mov
popf
dec
mov
shll
loop
jmp
xor
add
xor
sbb
addr16
push
mov
add
bound
insb
mov
ret
mov
jb
and
rolb
mov
or
addr16
loopne
leave
sbb
sbbl
aaa
ss
cwtl
inc
mov
push
ret
xchg
add
adc
fisttpl
shlb
mull
add
bound
scas
test
adc
push
lock
cmp
mov
shrl
sub
xchg
and
clc
dec
and
dec
xor
xchg
mov
jmp
enter
xchg
cli
addl
mov
sarl
push
scas
je
xor
out
arpl
mov
cwtl
mov
xchg
loope
shlb
rcrb
and
cmp
ds
add
or
mov
add
out
push
and
pusha
pop
call
insl
sub
cmp
adc
fsubrl
push
test
nop
pop
sbb
fucomi
cwtl
and
inc
sbb
xorb
cmp
ja
sub
adc
pusha
xlat
or
inc
in
outsl
or
jns
and
or
ja
push
stc
aam
mov
push
imul
and
push
jb
loope
das
gs
dec
push
adc
sub
lock
repnz
jecxz
lahf
cmp
mov
out
test
lea
arpl
inc
and
int
and
lret
enter
repz
mov
adc
or
sti
and
xchg
fildl
mov
stos
andl
pop
add
mov
xor
xchg
enter
sub
cmpsl
fs
popa
pop
pop
rcr
call
loopne
push
push
stos
add
sbb
outsl
sub
arpl
cltd
push
icebp
inc
es
push
shlb
inc
inc
data16
lahf
fdivs
mov
ds
icebp
test
rolb
imul
pop
adc
xor
fsubl
cld
or
sub
jmp
rorb
pop
rcrl
popa
push
out
or
or
pushf
mov
std
jg
popa
rolb
popa
mov
aaa
and
inc
mov
pushf
sbb
test
or
add
push
xorl
add
fcom
sarb
lods
popf
fmuls
cld
mov
aam
loopne
loopne
je
in
in
adc
push
ds
ja
or
add
cld
sarl
out
cltd
cmp
xchg
jmp
add
arpl
xor
pop
add
ret
popf
xor
mov
add
add
add
and
aad
pushf
outsl
inc
repnz
or
incl
imul
push
mov
pop
ds
nop
orb
or
shlb
push
and
arpl
rsm
mov
fstpt
outsl
jecxz
add
xchg
adc
push
push
clc
push
push
in
call
sbb
loope
adc
test
pop
adc
mov
test
cmpsl
ds
jp
in
movsl
adc
call
xchg
fisttpl
icebp
jne
and
dec
cmp
test
add
cmp
jmp
pop
mov
hlt
or
loope
jo
rol
ds
jo
fadds
inc
outsb
inc
cmp
add
sub
xor
pop
and
and
adcb
ret
enter
lea
adc
add
in
ss
loopne
push
jmp
repnz
out
jns
xchg
xorb
test
rcrl
fiadds
mov
sti
mov
aad
cmpsl
mov
pop
daa
fdecstp
arpl
lcall
sbb
and
js
loop
mov
sbb
dec
leave
popf
lods
mov
push
loop
pop
and
or
sbb
jo
push
add
lret
int
push
cmp
or
mov
dec
and
mov
jp
ja
je
sbb
cmp
xchg
xchg
negb
out
inc
scas
daa
icebp
inc
cmp
pusha
roll
leave
and
or
push
jmp
push
out
fwait
inc
sub
adc
fiadds
adc
or
sbb
lahf
loope
xor
dec
js
enter
mov
xorb
or
inc
xor
negl
movsl
icebp
pop
sbb
add
xchg
or
push
sahf
add
inc
jge
cmp
push
les
xchg
add
repnz
mov
aas
adc
and
jecxz
sub
mov
in
lret
lds
mov
les
fsubrs
adc
push
sub
xchg
jno
shll
add
dec
jo
adc
inc
movsl
inc
pop
leave
sub
pop
mov
incb
mov
mov
xor
mov
sbb
mov
jbe
repnz
mov
cmp
mov
icebp
pop
cs
hlt
add
xor
pop
xchg
cltd
icebp
adc
flds
mov
rorb
xor
dec
call
pop
add
or
add
jge
xlat
push
adc
and
or
nop
or
cmp
cmp
jae
jnp
fstpl
xchg
and
sub
test
jecxz
adc
push
cmpsb
adc
lock
mov
mov
addr16
jae
ja
mov
pop
add
pop
dec
xlat
rorb
or
or
pandn
lock
dec
ficoms
sbb
push
push
or
lods
fwait
dec
orl
clc
insl
sub
aas
popa
cmp
jno
jecxz
and
push
dec
loope
adc
lods
xlat
popf
mov
add
mov
ret
inc
insl
pusha
xchg
mov
jo
addr16
js
add
mov
or
pop
cld
and
mov
pop
and
push
movb
fiaddl
add
xchg
mov
push
jmp
add
or
push
inc
fldl
push
add
js
sbb
cmpsl
movaps
cli
aad
out
add
push
xchg
inc
test
sbb
pop
jp
mov
dec
fistps
and
push
mov
and
push
fwait
push
sbb
sti
out
jmp
stos
js
inc
sbb
adc
hlt
jmp
js
rcrb
mov
popf
fldenv
mov
enter
iret
vmread
icebp
call
fnstenv
sarb
pushf
ds
out
push
dec
movsb
or
lret
add
sub
aad
xchg
inc
pop
mov
mov
test
adc
mov
shlb
nop
inc
xchg
jns
sub
movsb
int3
xchg
add
pop
pop
xchg
inc
mov
mov
scas
xchg
or
fisubrs
adc
pop
pushf
adc
shlb
and
xadd
jmp
jmp
sub
push
mov
mov
pop
pop
hlt
rorb
inc
push
loopne
jo
js
aam
sbb
xchg
push
or
shlb
outsb
xlat
mov
pop
out
xor
push
xchg
dec
or
outsl
xor
js
and
lods
je
cmpb
or
addb
mov
fs
fs
push
rcll
pop
mov
lcall
movsl
and
jle
out
inc
pop
cli
or
out
rcll
add
lret
sbb
imul
jle
cmp
out
pop
add
cmp
jmp
clc
jo
jle
adc
and
xor
mov
xchg
sbb
push
mov
push
test
mov
pop
shlb
popf
mov
iret
mov
inc
iret
adc
fstpt
dec
add
add
mov
mov
sbb
xlat
leave
mov
push
dec
minps
rorb
les
out
adc
out
xor
shlb
loop
insb
inc
fs
xchg
mov
adc
je
mov
add
mov
push
hlt
sbbl
rclb
xchg
call
add
nop
subl
xor
hlt
and
mov
test
push
xor
xchg
and
subl
les
ret
and
mov
cmp
push
xchg
and
test
add
in
xchg
mov
in
or
and
push
mov
adc
popf
or
inc
in
add
stos
adc
jmp
xchg
xor
fwait
test
inc
push
inc
fsubrs
lods
in
jl
incb
lcall
dec
cmp
cs
xchg
addl
inc
cmp
bound
inc
and
mov
jo
jle
fstpt
ljmp
fmuls
jne
fcomps
aaa
mov
jge
dec
add
xor
mov
push
add
push
popa
test
mov
adc
cmp
jge
ja
enter
and
sub
xchg
inc
es
mov
adc
gs
mov
addb
xorb
ja
outsl
dec
add
ret
xorb
push
mov
in
mov
and
dec
sub
hlt
adc
mov
fdivs
mov
addb
or
sbb
and
lock
loopne
sbb
xor
ljmp
sar
cmp
sbb
push
mov
insb
and
xor
cli
dec
sub
ja
cmp
bound
sahf
test
push
inc
repz
push
stc
filds
stc
mov
mov
push
add
add
enter
fadd
ds
xchg
and
push
es
data16
sub
ret
fnstcw
push
pop
adc
bound
xchg
sbb
lock
loope
jb
sub
scas
call
dec
inc
jmp
rorl
push
inc
dec
mov
add
out
jecxz
inc
test
into
push
or
inc
push
call
push
add
aad
dec
jmp
xchg
mov
push
fprem
pop
mov
js
sahf
lret
pop
pop
dec
pusha
fstpt
xchg
pop
mov
fists
daa
dec
bound
adc
mov
int
mov
adc
out
cltd
and
push
dec
sub
in
inc
sub
nop
push
test
pop
aad
pop
or
xchg
hlt
xchg
fistpl
cmp
out
fdivr
in
add
cld
ds
insb
xorl
add
ds
dec
inc
push
xchg
jo
adc
loop
mov
sbb
loop
inc
loope
mov
test
mov
dec
fisubs
out
adc
xchg
ret
mov
popa
adc
xchg
add
les
push
fsubl
jl
mov
mov
jb
imul
iret
lret
push
push
dec
jmp
clc
arpl
jge
add
pop
cmp
add
stos
fs
inc
call
out
xor
dec
faddl
or
lahf
bound
push
sbbb
sub
jnp
clc
imull
imul
or
gs
aam
loop
lahf
rolb
fisttpll
sbb
push
inc
pop
dec
decb
out
sar
adc
pop
call
dec
add
xor
clc
sub
jge
mov
xchg
dec
divps
inc
add
adc
ja
jmp
ret
mov
adc
bound
shrb
cld
dec
xchg
jo
stos
aas
add
mov
dec
and
cmp
arpl
iret
sti
cmp
xor
xor
andb
sahf
nop
loop
bnd
mov
adc
paddd
cli
es
mov
sbb
dec
mov
jnp
test
or
cmpb
xchg
or
pop
test
popf
push
out
call
movsl
xor
push
incb
or
sub
and
int3
ja
xor
loop
adc
nop
mov
inc
insl
pop
pop
push
adc
call
mov
inc
jp
testl
xor
add
mov
leave
jmp
enter
loope
and
cmp
sbb
push
and
aam
dec
rorb
adcl
ret
inc
popa
push
out
or
push
pushf
pop
mov
cmpsb
bound
mov
jg
or
addr16
stc
xchg
jo
push
pop
mov
rcl
enter
and
sbb
jne
mov
aam
push
cs
dec
cmp
rclb
mov
lea
push
sbb
add
pop
and
jmp
pop
mov
xchg
inc
cmp
adc
sbb
xor
cmc
xorb
and
mov
shll
push
adc
ljmp
lcall
fimuls
int
sbb
xchg
cltd
cmp
push
mov
or
bound
int
and
js
push
mov
ds
lahf
pop
nop
mov
js
loopne
sahf
mov
and
pop
and
mov
inc
fimuls
or
pop
mov
outsl
jo
or
push
and
addb
addb
or
in
pop
sarb
xor
enter
dec
mov
sbb
call
js
cmpsb
mov
adc
or
out
or
sti
pop
out
pop
adc
movsb
pusha
or
dec
mov
inc
ljmp
sub
sbb
inc
out
fs
mov
enter
mov
stos
jno
addb
sub
pop
sub
enter
mov
jo
loopne
outsl
jl
and
loope
sub
push
subb
cmp
xor
negl
cmp
sarl
add
cmp
ficoml
sysret
cmp
add
xorb
cmpsb
mov
subl
cmp
pop
adc
mov
pop
insb
sub
lret
shl
pop
or
push
or
push
cltd
jo
in
mov
loope
pop
jecxz
pop
or
mov
xlat
adc
dec
fisubl
fstps
dec
outsl
or
dec
sbb
addb
enter
mov
xorb
push
mov
mov
test
dec
inc
jbe
pop
not
adc
or
xchg
ljmp
mov
es
push
cmp
loop
or
popa
popf
out
fsubrs
inc
or
fcompl
call
imul
mov
test
arpl
inc
movsb
notl
mov
sbb
fs
pop
test
shlb
or
xor
add
add
add
and
arpl
mov
adc
lret
pop
fmull
mov
xor
scas
xchg
inc
test
testb
das
inc
dec
pop
jp
pop
les
jbe
cmp
imul
pop
or
push
mov
fildl
addb
sahf
arpl
movl
in
xor
das
dec
leave
xor
ljmp
push
jp
sub
shrb
mov
divb
inc
xchg
cmp
shlb
lret
int
add
mov
clc
fists
pop
push
dec
das
rcl
gs
inc
dec
or
cmp
adc
pusha
lret
xchg
out
outsl
push
or
and
sbb
push
push
lds
pop
cmp
insb
mov
in
sub
xor
roll
xchg
in
sahf
incb
loopne
sti
cwtl
enter
push
lock
outsl
push
mov
sbb
dec
popf
les
and
outsb
and
mov
adc
imul
jo
xchg
ljmp
cld
xlat
roll
inc
adc
loopne
adc
ret
out
xor
mov
mov
shlb
or
fucom
rol
xchg
mov
in
xorb
sarl
and
push
add
mov
lret
or
jecxz
fsubl
fiaddl
sarb
addl
pop
xor
pop
mov
or
jge
adc
add
dec
sbb
push
imulb
shlb
insl
roll
cmp
mov
inc
push
movsb
cmp
mov
mov
lahf
test
in
out
cmp
sbb
fwait
xor
or
pusha
shrb
jbe
xlat
ja
dec
nop
or
mov
xor
daa
mov
lcall
and
xchg
or
dec
and
nop
lea
cmp
rclb
fsubrs
and
or
mov
dec
andb
inc
add
les
xor
stos
inc
cmp
jp
xor
pop
push
movsb
mov
mov
std
cmpsb
inc
pop
add
xchg
or
clc
insb
or
add
hlt
adc
pop
hlt
and
out
ljmp
loopne
mov
out
jl
adc
jno
add
sbb
mov
and
mov
cmp
jbe
mov
fistps
push
movsb
les
shrb
or
inc
cmp
add
xor
jne
jne
pusha
cmp
cwtl
mov
adc
jmp
xor
scas
test
adc
in
sbb
xchg
push
xchg
sbb
push
rorb
cmp
adc
push
and
aad
arpl
jle
fimull
dec
add
stos
inc
loop
mov
sbb
loop
inc
inc
add
jmp
sbbl
out
or
xchg
add
in
push
js
or
imul
mov
sub
push
sarl
push
add
aas
test
lea
add
add
enter
or
push
ret
inc
dec
jge
xchg
out
mov
xchg
dec
push
mov
loopne
or
sub
cli
orb
movb
fldt
ljmp
aad
sub
lret
fdiv
movsb
add
and
mov
ficompl
sub
cmp
add
cs
sbb
cmp
repnz
lods
mov
inc
inc
push
cltd
icebp
leave
test
or
notl
sub
nop
jmp
nop
add
mov
mov
lahf
push
and
scas
pop
or
fs
mov
xchg
pusha
movsb
sub
mov
add
add
add
or
adcb
dec
cmpsb
testb
mov
add
adc
mov
add
cs
dec
push
push
push
add
test
mov
mov
mov
andb
xor
nop
test
xorb
adc
mov
push
sbb
pop
and
and
cmp
insb
int
mov
nop
and
inc
and
pop
and
or
mov
inc
mov
lods
cltd
pop
and
inc
sbbb
pop
or
fadd
cwtl
pop
pop
or
andb
les
scas
cmp
add
mov
cltd
and
mov
add
pop
and
insw
jae
and
adc
mov
or
add
sbb
and
shlb
push
add
mov
sbb
and
inc
sub
add
pop
addb
jo
rol
pop
xor
push
inc
adc
dec
fadds
lcall
mov
sbb
cmp
into
pusha
cmp
push
push
mov
dec
add
adc
xchg
adc
ret
or
jle
or
jbe
mov
sbb
out
jp
imul
xchg
dec
pop
scas
stos
dec
scas
inc
and
pusha
xchg
out
pushf
mov
pusha
clc
nop
push
xchg
push
pusha
or
lock
mov
pop
adc
cwtl
push
mov
push
ret
xor
add
fiaddl
sbb
and
mov
flds
cmpl
jle
add
cwtl
mov
or
add
or
mov
loop
inc
sbb
cmpsb
mov
adc
mov
and
bound
js
mov
loop
and
cmp
cltd
scas
xor
inc
inc
or
inc
and
jl
and
mov
orb
or
sbb
call
xlat
int3
into
and
mov
push
adc
mov
rcl
sub
and
inc
iret
enter
xor
pushf
inc
sahf
fadds
xor
pushf
les
jp
inc
mov
or
sbb
loope
xor
ss
shll
adc
push
inc
rcrl
lods
or
subb
add
mov
in
inc
lock
adc
pop
xor
sub
lcall
pop
xchg
xor
jno
push
jbe
ljmp
push
mov
pusha
and
ljmp
stos
xor
add
add
arpl
int3
movb
xchg
push
dec
push
aaa
xor
cmp
cwtl
inc
jo
clc
xor
ret
sbb
movl
cmp
inc
subb
loopne
push
fcompl
jp
and
ret
inc
fs
push
outsl
add
adc
push
inc
xor
inc
pusha
data16
sbb
pop
pop
xchg
adc
test
sub
test
or
sbb
inc
or
pusha
push
xchg
and
mov
int
cmp
es
jp
and
cwtl
popa
mov
adc
or
je
dec
pop
add
add
and
shll
mov
adc
addb
shll
mov
and
data16
xor
xor
pushf
or
inc
adc
or
es
es
test
pop
or
xchg
xor
add
cwtl
insb
or
and
add
fs
adc
adc
mul
sbbb
push
pusha
adc
cltd
jns
inc
ljmp
adc
in
push
lcall
pop
adc
rolb
or
into
ficoms
movsb
popf
popf
shrl
lods
add
cmp
and
or
lock
ret
scas
imul
cmp
mov
or
loop
orl
cmp
in
insb
popa
jae
outsb
cmp
fisubrl
inc
xchg
stos
ljmp
xor
or
add
lcall
orb
add
lods
in
dec
and
xchg
sahf
push
js
and
nop
adc
js
or
xor
rol
enter
or
test
xor
ljmp
test
push
adc
or
sbb
add
and
dec
les
sub
outsb
sub
bound
dec
sub
data16
enter
push
jne
insb
push
dec
int3
lcall
and
push
push
daa
test
fisubl
movsb
cmpsb
decb
cmp
test
xchg
mov
bound
add
cmpsb
sbb
andb
and
in
shr
or
stos
push
subb
sbb
mov
sahf
pop
sbb
js
add
rclb
ror
movsb
nop
dec
xor
or
sub
int3
pusha
mov
nop
fcomps
sub
inc
inc
or
push
test
rorb
mov
dec
sbbb
inc
jo
adc
stos
or
data16
cli
into
dec
fwait
orb
mov
mov
pop
or
lret
pushf
mov
fmul
andb
jo
and
in
fadds
loop
bound
rcll
add
bound
adc
cld
adc
ret
inc
cmp
adc
testb
adc
scas
inc
xor
int3
adc
shrb
lret
sbb
jb
adc
and
push
adc
mov
sub
adc
push
jo
or
ficoml
add
mov
cmp
test
push
mulb
clc
adc
cli
in
push
dec
cmpsb
xor
test
or
lods
cltd
sbb
jle
push
add
sbb
test
es
sub
push
cmp
jl
xor
cmp
adc
andb
add
and
add
enter
mov
jl
sbb
push
push
jmp
pop
or
in
popf
add
ret
sub
mov
lock
clc
movsb
add
adc
hlt
mov
pop
push
sbb
pusha
cmpsl
add
push
js
ljmp
fldcw
mov
push
addb
je
push
insb
jo
xor
mov
inc
inc
lea
or
mov
jb
loope
rcrl
adc
inc
and
adc
imul
cltd
push
mov
add
ljmp
cmp
retw
pop
shlb
dec
lret
add
add
sbb
andb
int3
or
or
or
rorb
sub
divl
bound
mov
or
mov
aam
movsb
ljmp
data16
in
lret
dec
loop
xor
mov
js
add
cmp
xchg
cmp
dec
lock
sub
scas
frstor
data16
jo
popa
push
sub
cli
push
push
add
push
dec
and
sub
adc
sub
ret
enter
push
mov
xchg
inc
and
fnsave
pop
faddl
sbb
push
loope
cmp
movsl
mov
out
mov
push
mov
jmp
mov
popa
rcrb
push
mov
dec
xchg
icebp
dec
xchg
inc
or
xorb
shll
cli
push
loope
add
push
bound
nop
pop
sbb
ret
out
sbbb
push
cmpl
and
xor
dec
shlb
in
push
into
or
cmpsb
push
ret
fsubs
loop
add
orl
aam
push
rcrb
inc
push
into
xchg
sub
pop
les
adc
mov
mov
inc
mov
push
insl
xor
push
push
and
xor
popf
cltd
push
pop
sub
or
les
fisubs
jbe
or
fmul
mov
mov
push
loop
mov
gs
or
push
mov
sub
mov
cmp
mov
enter
hlt
movsb
push
mov
imul
inc
inc
inc
sbb
xor
and
mov
scas
inc
pop
mov
rol
stos
push
push
shlb
adc
xor
xor
sbb
xchg
sub
mov
add
outsb
jl
mov
mov
bound
adc
loop
es
and
inc
clc
push
mov
pop
sub
adc
clc
in
push
lds
or
inc
sahf
xchg
mov
mov
ret
ljmp
subb
fadd
or
push
mov
fsts
and
dec
mov
add
mov
movaps
cwtl
push
xor
and
mov
cmp
pop
jle
xorb
jl
inc
inc
dec
js
or
hlt
adc
pop
xor
mov
mov
nop
out
cmpsb
dec
lcall
orb
int3
cmp
pusha
lods
adc
cmp
bound
or
push
inc
xor
cmp
js
dec
xor
dec
push
out
xchg
add
adc
cmp
data16
xor
in
int3
aad
mov
mov
ret
xor
sub
shl
int3
xor
adc
rcrb
loopne
pop
adc
cmp
mov
cmp
add
test
dec
or
or
ret
imul
js
jle
sbb
inc
sbb
mov
pop
and
add
cmp
lods
push
daa
cmp
cld
in
adc
xor
push
fdivs
ljmp
mov
ljmp
aam
add
mov
add
aas
adc
aam
and
clc
sarl
add
mov
call
and
fldt
add
pop
orb
jns
mov
js
push
sbb
add
call
or
adc
stos
repz
add
inc
xchg
mov
shrl
add
call
add
mov
test
addr16
adc
add
or
fiaddl
push
add
dec
add
mov
mov
push
add
lcall
dec
enter
push
push
test
outsl
call
loop
cwtl
insl
sub
add
pop
fldenv
fdivs
mov
mov
jle
adc
repz
add
bound
add
pop
lock
addr16
mov
add
sbb
inc
out
lret
sti
incl
cwtl
add
add
pusha
fildl
jne
adc
lea
jne
inc
xor
jg
add
fwait
mov
push
lea
outsb
xor
add
or
movl
xor
out
mov
adc
pop
add
mov
or
adc
add
pop
lock
clc
adc
cmp
pop
push
mov
test
das
clc
incl
or
call
add
or
cwtl
push
cmp
incl
in
bound
addb
sbb
and
inc
sbb
in
jg
pop
lock
add
lcall
mov
lock
out
outsl
push
testb
xor
or
fdivl
jae
lea
mov
fbld
push
scas
mov
and
add
lock
sub
add
orb
jo
xor
mov
pop
rcrb
mov
mov
or
jl
sub
jp
test
addr16
testb
sbb
loop
cmp
cmp
inc
adc
mov
mov
incl
cmpsl
sbb
cmp
jge
add
cmp
ficompl
dec
stc
cmp
mov
mov
and
and
or
fidivl
gs
ljmp
rorb
imul
mov
outsb
leave
jb
adc
sbb
push
ja
sub
aaa
mov
cmp
push
fwait
xchg
negb
daa
push
or
jl
sti
cmpsb
test
pop
outsb
mov
jle
pop
lcall
xchg
add
rclb
and
inc
jp
jge
mov
xlat
int3
xchg
subb
lods
add
dec
in
sbb
out
fdiv
mulb
bound
mov
jle
bound
fsts
inc
es
fimuls
nop
repnz
add
jg
testb
cmp
imul
add
cmpsl
adc
adc
je
sti
jne
inc
pop
jg
push
insb
add
add
push
ret
push
xor
mov
and
mov
inc
call
lock
rcrb
scas
call
mov
das
or
nop
push
mov
adc
popa
in
scas
clc
int
sbb
in
imul
and
and
into
jg
in
addps
and
aaa
push
sub
pushf
mov
movb
add
outsl
outsl
jp
outsb
or
and
aas
lock
xchg
mov
clc
sbb
sub
inc
rcrb
add
stos
dec
or
fs
into
xor
data16
push
inc
sahf
xchg
push
pop
dec
or
push
or
adc
es
shrl
jl
hlt
dec
add
or
jo
rolb
cwtl
pop
pop
pop
insb
mov
inc
std
nop
test
adc
add
adc
out
add
pop
mov
clc
cltd
xchg
cld
add
xchg
cmc
ljmp
sbb
sub
xor
and
adc
add
sub
shrl
adc
sub
jmp
jecxz
leave
je
sti
add
daa
scas
cs
lcall
orb
adc
mov
fists
inc
es
aam
pop
fld
mov
sysenter
xor
stos
push
xor
repz
xlat
push
int3
cmp
mov
or
lea
jmp
nop
and
mov
pop
or
add
inc
in
adc
add
call
aaa
cmp
cmp
in
add
sub
into
divb
repz
dec
add
add
mov
sahf
mov
lods
mov
dec
mov
sub
and
mov
sub
insl
clc
sbb
in
subl
enter
ret
cwtl
and
loope
xor
mov
jp
sub
enter
cld
cmpsl
mov
call
xchg
cmp
adc
in
out
movsl
mov
push
inc
ficoms
incb
hlt
dec
into
xor
xor
add
mov
cltd
mov
cltd
add
inc
lahf
jecxz
paddsb
mov
cmpsl
test
pushf
mov
add
pop
or
mov
pushf
clc
push
cmp
stc
mov
xor
mov
clc
and
mov
mov
mov
dec
sbb
xor
xor
test
jmp
pop
shrb
mov
aas
dec
add
push
jb
imulb
ss
jl
stc
rcll
push
inc
add
jle
dec
insb
negb
sbb
push
mov
or
gs
subl
jecxz
out
clc
pop
jp
mov
sbb
shlb
jg
test
mov
xchg
add
loopne
pop
mov
fisubs
nop
ror
sub
lcall
push
outsb
inc
inc
push
mov
pop
das
or
jge
jnp
add
cli
insb
mov
push
dec
pop
clc
push
and
outsb
xor
push
mov
push
enter
cmp
add
or
call
push
push
xchg
jae
hlt
mov
xlat
pop
mov
lock
mov
xchg
xchg
test
hlt
out
std
clc
rorb
inc
sub
mov
push
hlt
add
lock
mov
jbe
pop
xchg
maxps
add
push
mov
push
popa
xchg
cmpl
jle
repnz
or
mov
sbbb
imul
mov
inc
decb
mov
fs
fidivs
adc
and
xchg
mov
adc
xchg
dec
sub
push
mov
jnp
aaa
pop
roll
sub
data16
xor
idiv
gs
adc
insb
pusha
mov
mov
xor
pop
mov
push
sbb
test
push
xchg
xchg
sub
ljmp
add
cltd
push
add
test
into
mull
insb
sub
insb
xchg
cmp
into
push
jns
pop
dec
or
push
push
stc
pop
push
xorb
in
cwtl
outsl
adc
push
cmp
jmp
sub
aas
in
arpl
cmp
cmp
add
testb
outsl
filds
mov
adcb
cmp
sahf
sar
jg
adc
or
jecxz
fs
inc
or
add
cltd
ljmp
repnz
fldcw
push
add
inc
popf
adc
xchg
js
rorl
or
jge
rcrl
ret
jle
cmp
ret
jnp
mov
xchg
sbb
sbb
jnp
lahf
test
iret
add
mov
add
leave
push
push
clc
decl
lcall
push
dec
xchg
sub
and
pushf
push
lock
push
mov
shll
sbb
push
add
cwtl
mov
push
jbe
sahf
addb
sbb
mov
popf
or
dec
std
int
mov
cmp
pop
add
decl
out
clc
xchg
popf
push
add
jb
fs
je
orb
jp
dec
add
pop
adcl
popa
add
push
fidivs
lcall
in
jl
mov
imul
cld
pop
or
push
xor
out
jecxz
xchg
in
xor
or
adc
mov
cmp
jg
and
or
and
out
and
pop
andb
push
add
add
aam
lcall
bound
loop
and
aaa
outsl
mov
add
popl
xor
xchg
in
lahf
lods
fs
cmp
icebp
ds
sub
lods
xchg
shl
inc
cmp
xchg
fs
sub
aad
repnz
sarl
rcrl
sar
xor
ret
mov
dec
mov
mov
cmp
xchg
or
es
mov
ljmp
stos
lds
fldt
push
and
mov
ja
pop
mov
sahf
stc
cmp
mov
adc
jle
sbb
and
clc
or
adc
movsl
jb
cmc
call
xchg
es
push
imul
filds
mov
popf
rclb
inc
pop
sahf
xchg
in
jg
mov
fiadds
les
or
xorb
push
add
imul
outsl
xchg
shlb
out
imul
pop
cmp
repz
mov
inc
cwtl
jmp
inc
in
adc
scas
or
push
ret
insl
xchg
jmp
lods
std
jo
lods
je
xchg
xlat
iret
push
fisttpl
icebp
out
test
mov
adc
or
or
mov
inc
sti
lcall
mov
dec
pop
add
dec
fdiv
cmp
scas
outsl
outsl
ffreep
enter
add
dec
or
mov
lock
pop
incb
ret
cs
or
aad
cmp
shrl
dec
loopne
ja
pop
xchg
cltd
pop
int
add
pop
push
adc
xor
in
fbstp
cmp
push
insb
out
fst
push
adc
xchg
sti
xchg
loopne
fdivl
movsb
or
mov
mov
incl
mov
dec
or
pop
nop
mov
mov
repz
add
inc
push
ficompl
jl
rcrb
fldt
adc
push
mov
push
cld
cmp
xchg
test
loope
cmp
arpl
cmp
insl
pop
xchg
sub
xchg
dec
lds
xchg
into
cwtl
sub
mov
ds
dec
fs
cld
fs
or
sbb
lcall
daa
rcrb
jne
inc
stos
shll
push
mov
fucomp
mov
icebp
jb
pushf
mov
xor
or
or
ds
clc
lcall
xchg
cli
out
fldl2e
repz
addr16
mov
xor
imul
outsl
clc
inc
lods
cmp
enter
xabort
iret
data16
jg
adc
pop
jne
movsl
mov
pop
xchg
or
mov
sbb
rolb
mov
cmp
jle
mov
test
stos
hlt
add
lock
lock
xor
or
roll
inc
nop
pop
aad
fildl
popa
pop
adc
movsb
mov
cs
pop
add
pop
push
mov
hlt
cmp
adc
mov
fucom
rorl
cmp
xor
and
les
jp
push
push
mov
call
mov
mov
aad
movsl
mov
xchg
mov
adcb
jmp
clc
push
mov
add
sub
push
xchg
add
test
jg
shr
call
loop
popf
sbb
xor
sti
cld
sarb
adc
sahf
loopne
adc
add
mov
test
rcrb
cs
xchg
shrl
push
cwtl
pop
iret
sbb
ljmp
inc
out
push
fsubs
inc
nop
call
ljmp
clc
jg
dec
ret
es
push
loopne
cmpsl
mov
test
data16
cld
ljmp
xchg
add
hlt
xchg
inc
sbb
or
pop
sub
mov
in
or
cs
mov
pop
pop
sub
cld
sbb
fiaddl
cmp
arpl
mov
shll
add
rcl
call
cld
xor
add
xchg
pop
rcrb
sbbb
sbb
add
out
pop
mov
sahf
rclb
dec
loop
pushf
clc
mov
loopne
popf
mov
sub
and
mov
andb
fs
stos
icebp
inc
dec
mov
pop
jo
imul
add
and
or
adc
pop
xchg
movsl
out
inc
clc
aad
xor
jns
lods
push
add
dec
inc
jne
loop
pop
cmp
or
xchg
mov
push
lods
cmpsb
sbb
gs
jo
add
lcall
jb
mov
cli
aas
push
cmp
imul
pop
lds
jl
outsb
bound
adcb
jo
mov
sbb
or
fcomi
daa
and
lds
pop
jno,pn
jns
mov
or
cmpsb
add
add
stos
inc
outsl
dec
and
addb
pop
jl
and
bound
and
cmp
xlat
mov
mov
clc
xor
std
adc
lock
sbb
inc
mov
push
idivb
pusha
mov
xor
inc
push
movsb
add
cmp
push
add
addb
push
out
jg
mov
mov
iret
add
push
fldlg2
add
daa
pop
adc
xchg
jno
cs
cmp
arpl
inc
cwtl
rcrb
lcall
lcall
cld
test
subl
fisttpl
incl
jne
pushf
sub
test
mov
xchg
push
push
xor
cmp
out
jg
mov
scas
push
les
in
int3
jae
fnstsw
add
or
std
call
clc
std
pop
jmp
push
cmp
loope
mov
cs
std
mov
addb
adc
fiaddl
insb
call
pushf
lret
sbb
mov
popf
cmpsl
pop
mov
mov
xor
incl
push
out
dec
out
inc
mov
ss
adcb
sbb
daa
xchg
js
call
fimuls
pop
dec
lods
cli
dec
jge
insl
mov
jns
or
cmpsb
nop
lods
clc
lods
test
xchg
push
ret
adc
incl
sbb
inc
xor
pop
std
fs
testb
ja
jmp
xchg
xchg
fs
mov
fmuls
insl
jb
stc
orb
mov
call
sbb
mov
push
mov
xchg
and
adc
sbb
cmp
lcall
arpl
xor
add
nop
out
jle
pop
rorb
enter
push
fdiv
lahf
aaa
xchg
imulb
jmp
mov
xor
mov
and
sar
call
cmp
stos
cmpsb
jmp
cs
lret
sti
insl
inc
or
stos
adcl
outsl
ret
into
dec
bound
lcall
inc
popl
add
sahf
mov
enter
xchg
loopne
jns
xchg
push
mov
mov
or
aaa
push
out
adcb
sti
aam
jbe
lret
or
stc
aas
jmp
jl
sbbb
mov
and
add
xchg
ret
nop
test
imul
ljmp
dec
out
adc
in
orl
aad
ret
sub
cld
sbb
jecxz
xor
mov
divb
cld
dec
cmp
adc
lret
fdiv
push
mov
adc
call
and
push
shll
and
shl
cltd
xor
mov
inc
mov
pop
sbb
decl
repnz
bound
fidivrl
xchg
sbb
xlat
add
rolb
jb
jg
jo
int3
loope
add
in
adc
cmp
add
cmp
call
incl
ret
pop
mov
mov
aad
push
lods
mov
pushf
pushl
in
cmp
push
fwait
xchg
fdivs
mov
mov
shlb
fdivrl
clc
ljmp
andl
fs
sub
adc
int3
iret
xchg
adc
call
out
inc
push
jecxz
pop
stos
loopne
push
jb
sbb
pop
jl
add
test
sbb
test
jmp
jge
push
lahf
fbstp
daa
mov
or
xlat
out
icebp
in
sbb
push
cltd
in
lcall
jmp
or
pop
mov
dec
icebp
jl
mov
pop
data16
shlb
inc
es
mov
mov
mov
mov
push
or
adcb
cmp
ljmp
add
add
lret
cmp
shrb
paddb
fisttpll
push
mov
in
adc
pop
xchg
bound
mov
and
pop
popa
xlat
in
mov
sbb
cmp
test
into
cltd
into
repz
lcall
adc
fimull
cld
ret
xchg
pop
aad
stc
fisttps
xchg
cli
hlt
pushf
repz
in
subb
jmp
inc
pop
sub
pop
in
mov
sbb
add
mov
iret
call
lcall
into
mov
xchg
out
pop
mov
xchg
leave
sysenter
addr16
gs
cmp
jge
ljmp
mov
adc
mov
sahf
jb
imul
pushf
mov
outsl
ljmp
sub
jp
sbb
mov
jge
mov
or
mov
pop
lock
mov
mov
xor
shlb
sti
rcr
stc
xchg
leave
jnp
push
jo
nop
insl
stc
cmp
decl
inc
sbb
sub
fsubl
pushl
mov
mov
arpl
fistpl
mov
jne
or
lods
mov
cmp
scas
pxor
fisubrl
push
std
loop
mov
mov
lret
sbb
jo
adc
outsb
lcall
cmc
jmp
sbb
cld
xor
sbb
inc
sbb
es
ds
cltd
push
dec
push
mov
cs
sti
push
pop
dec
sti
iret
shll
cmc
cmp
jle
lahf
xor
pop
adc
xor
movsl
xlat
out
mov
mov
jl
xor
loopne
cmp
jne
test
int
cmpsl
lret
cltd
push
idivb
loop
jge
call
rcl
inc
adc
xor
js
outsl
sarl
lods
mov
xorl
call
inc
pop
shlb
jp
jge
sti
in
adc
insl
andb
mov
adc
fisttps
adc
dec
lea
cwtl
mov
dec
aaa
sbb
repz
iret
sti
inc
test
cmpsl
adc
call
add
movsb
pop
xchg
mov
daa
or
adc
fbld
or
sub
aad
lcall
in
dec
insb
ror
aaa
jbe
aaa
call
lahf
out
add
mov
sbb
decl
lea
cld
call
cmpsb
lea
out
mov
inc
adc
mov
xchg
cs
cmpsl
ljmp
jmp
fsts
icebp
cmp
mov
dec
addr16
lcall
mov
adc
pushf
out
enter
sub
stc
jae
and
call
fdiv
xchg
popf
adc
shl
cmp
and
sbb
or
shll
sbb
mov
dec
jle
stc
inc
xor
fstl
inc
xchg
sbb
or
and
cld
movsl
mov
jb
sti
inc
pop
jns
call
mov
rolb
ss
arpl
notl
lock
clc
aas
dec
cmpb
ljmp
sarb
inc
shl
ljmp
pop
inc
incb
dec
xor
cmp
loop
xchg
bnd
pop
sar
fldlg2
lcall
clc
shll
les
test
adc
jns
pop
test
imul
imul
jmp
cmp
ds
xchg
push
jae
jmp
sbb
xchg
or
ljmp
fsubl
jbe
sub
movsb
jmp
addr16
mov
adc
xchg
rclb
push
inc
stos
pushl
call
push
stc
scas
add
pop
into
sub
jmp
addr16
int
inc
mov
lcall
pop
bound
arpl
adc
jecxz
out
pushf
cmpsb
xchg
mov
xchg
out
pop
push
lods
or
adc
lret
outsb
xor
test
in
adc
adc
fmuls
xchg
insb
fidivl
mov
push
push
pop
mov
dec
dec
scas
jno
or
mov
stos
aad
out
cmp
pushl
test
pop
mov
into
cmp
orl
dec
xorl
loope
cmp
sahf
push
and
inc
shrb
dec
arpl
xchg
xrelease
jl
jmp
adc
ljmp
inc
or
mov
add
inc
es
sub
incl
cmp
nop
add
xor
mov
pop
add
push
pop
aad
fnsave
addb
cmp
dec
push
xor
out
out
dec
enter
fucom
fwait
hlt
xchg
cmp
dec
mov
cmp
fistpl
mov
incl
xchg
pop
inc
aaa
popw
sbb
aam
jg
mov
int
bound
cmpsl
mov
jnp
or
sub
and
popf
xor
or
movsb
dec
pushf
lcall
cmp
repnz
pop
jno
sub
sbb
or
dec
dec
aas
and
repz
std
call
add
cmp
popa
inc
out
sub
jge
and
adc
sbb
jp
jecxz
add
cmp
inc
mov
loopne
mov
fiadds
pop
jo
pushf
adc
mov
fwait
jmp
ss
cld
mov
pop
mov
enter
jb
adc
call
fildll
pushf
test
out
mov
mov
in
jp
xchg
dec
adcb
xor
pop
push
incl
cmp
inc
push
jnp
mov
pusha
scas
jb
xor
decl
dec
jg
in
test
mov
orl
enter
cmp
xor
ljmp
mov
dec
es
testl
cmp
les
repnz
jmp
or
jns
movsb
pop
jns
stos
pop
mov
jmp
sbb
mov
push
xor
and
push
adc
adc
jmp
cltd
incl
movsb
test
int3
loope
dec
mov
add
shlb
jb
pushl
jl
mov
imul
aaa
push
cmc
inc
test
mov
hlt
stos
into
sub
ljmp
lock
test
inc
mov
fcmovnu
xchg
pop
popa
leave
adc
xchg
insb
pop
out
jg
loopne
out
sub
dec
fisttpll
pop
fidivs
dec
mov
lahf
rcl
or
incl
inc
add
pop
nop
lahf
cli
jp
lods
lock
adc
in
lret
js
mov
mov
enter
outsb
je
movsl
add
xlat
ret
sub
test
leave
mov
sbb
pushl
or
rclb
adc
call
xchg
xor
call
idivl
lcall
sub
js
hlt
and
xor
pop
enter
xchg
arpl
fs
jl
cld
sarb
negb
pushl
cmp
xor
stos
data16
imul
scas
ljmp
cli
call
lea
or
lods
sub
xor
movsl
add
movl
hlt
xchg
adc
mov
mov
mov
mov
sbb
test
ljmp
push
add
lret
mov
pop
insl
sub
mov
push
cmp
pop
out
out
call
jae
sub
push
std
pop
and
inc
aas
subl
loope
pop
mov
jnp
dec
jno
gs
inc
lock
lock
jle
stos
mov
mov
xchg
pop
aam
stos
aaa
or
lcall
or
test
imul
ss
decl
arpl
xchg
fcoms
adc
dec
insl
gs
cmp
mov
das
cli
imul
xor
inc
cmc
lahf
ss
or
es
fdivrp
lahf
in
mov
and
stos
push
shrl
xchg
xor
fbstp
decl
cld
incl
pop
call
or
mulb
dec
dec
enter
cmp
pushl
dec
out
jle
and
jecxz
sahf
test
into
fstpt
xchg
xchg
dec
subb
mov
imul
mov
sub
ljmp
dec
mov
mov
sbb
ss
out
cli
bnd
mov
mov
push
insb
gs
aas
sbb
cli
inc
inc
int
andl
add
inc
aas
add
movsl
mov
add
arpl
mov
test
test
into
mov
dec
insl
add
fsubr
push
idiv
jmp
sahf
mov
jmp
mov
imul
loope
hlt
fsts
push
leave
pop
cld
mov
lcall
insl
scas
mov
lock
in
xorb
cli
pushl
std
sub
and
mov
and
lahf
enter
jbe
ljmp
nop
ja
sbb
jne
jmp
or
mov
sbb
iret
leave
fnstenv
cmp
mov
xchg
shrb
cmp
or
inc
sub
das
sar
mov
mov
sarl
cltd
int3
add
mov
fisubrl
jmp
adc
mov
mov
add
pop
mov
fnstcw
inc
incl
fisubl
test
push
cmpl
xchg
cwtl
fwait
push
cmpsl
imul
push
lock
mov
adc
jle
vcvtpd2dqy
popa
es
lock
incl
push
dec
sbb
ret
das
push
shlb
dec
sbb
push
jbe
push
incl
loopne
cmp
aas
mov
and
dec
push
imul
vpmaddwd
sti
aad
add
pushl
xlat
mov
fsubrs
int
es
push
das
popf
jmp
or
imul
mov
pushf
dec
mov
jno
inc
lods
add
frstor
hlt
out
aaa
sub
or
dec
xor
repz
incl
push
xchg
in
shrb
cmpl
aaa
xor
xchg
test
mov
imul
lcall
fwait
cmp
xchg
and
test
xlat
bound
decb
ret
mov
inc
lock
je
ljmp
aam
lds
lock
cmp
popa
mov
jmp
stos
insb
fucomip
pop
mov
sub
adc
inc
xor
popa
adc
sar
cmc
add
incl
sbb
and
jno
sub
cmc
imul
loop
jmp
pop
jo
cli
loop
mov
nop
pop
mov
out
push
jp
jmp
rcrl
cwtl
loope
ss
lock
out
fcoms
repnz
lods
xchg
pop
mov
lods
xor
adc
decl
mov
sbb
xor
xchg
dec
pop
pop
push
js
test
or
int3
and
jg
int
filds
out
xor
je
call
adc
sbbl
cmp
shll
adc
cmp
pushl
mov
xor
rclb
jne
push
sub
jb
push
lcall
xchg
js
xchg
jno
jb
iret
mov
inc
iret
incl
and
mov
xor
mov
push
mov
mov
inc
mov
int3
xor
mov
insb
icebp
ljmp
clc
in
jnp
push
cs
and
fwait
and
shrb
cmc
ljmp
scas
push
xchg
sbbb
fistpll
divl
gs
push
fstpt
jl
xchg
rdtsc
adc
adc
movsb
repnz
jne
xchg
mov
lock
mov
pop
xchg
push
mov
and
emms
mov
fsubl
ljmp
sub
jge
or
repnz
lret
outsl
dec
cmp
jnp
lcall
incl
add
pop
jo
cmp
push
mov
into
and
rcrb
dec
cli
test
ljmp
cmp
loope
cmpsl
jl
jmp
stos
add
dec
xlat
imul
cmp
and
out
cmp
fcomip
mov
push
jp
add
sbb
dec
and
cltd
addr16
xlat
mov
pop
jmp
ret
hlt
add
mov
decl
dec
jp
dec
arpl
hlt
sbb
and
ljmp
aad
imul
push
mov
xor
loop
sbb
testl
push
and
ds
jne
jg
ljmp
mov
scas
mov
pop
ja
dec
and
lahf
xorl
mov
call
mov
shl
in
and
cs
adc
lret
jl
cmpsb
add
std
or
adc
sub
dec
dec
push
xor
xor
sub
lret
jns
mov
inc
sub
mov
es
nop
or
adc
leave
xor
sub
and
shrb
or
add
mov
mov
mov
or
sahf
and
jne
imul
inc
jno
or
pop
hlt
adc
pop
ret
push
pop
adc
xchg
in
incl
push
jle
jg
pushl
xchg
xor
aad
rcrl
push
ret
aam
adc
sarl
dec
repz
mov
jle
fsubl
jg
test
dec
enter
pop
xlat
sub
mull
std
leave
xchg
pop
xchg
mov
add
hlt
loopne
ljmp
in
cmp
add
pop
jae
cltd
inc
pop
jmp
ljmp
push
mov
fwait
pop
mov
pop
outsl
fstl
pop
cs
and
ds
bound
mov
pusha
std
mov
fisubrs
mov
xchg
push
outsl
mov
jmp
add
push
inc
sub
mov
sub
jl
lcall
insb
xor
test
lret
inc
sbb
jae
repnz
mov
insb
cmpsb
mov
lods
iret
and
aas
xor
in
repz
xor
push
movsb
aas
ret
popf
out
inc
or
ja
inc
pop
pop
std
push
jecxz
pusha
jg
incl
ljmp
push
mov
pop
cmpsl
fs
decl
decb
push
mov
sarb
int
gs
jmp
out
xchg
adc
popf
push
fnstcw
cs
jmp
andl
mov
inc
mov
add
stos
fadd
push
test
insb
pushl
movl
lcall
filds
xchg
je
jmp
std
jge
fdivp
les
jae
enter
cmp
lcall
jl
jg
call
adc
out
jbe
push
mov
imul
mov
xor
cmp
das
adc
sbb
test
adc
xbegin
stos
push
testl
mov
out
jmp
or
out
and
lret
fsubrs
insb
popa
jb
fsubs
insl
add
cmpsb
push
std
decl
inc
bound
mov
mov
mov
incl
xchg
pop
and
je
pop
jo
lods
sarl
mov
xlat
mov
sub
inc
push
dec
int
lock
bound
push
mov
pop
pop
sbb
enterw
sti
dec
sub
mov
cmpl
js
dec
loop
fsubs
sbb
mov
dec
popf
dec
jae
icebp
call
mov
int
out
mov
repz
cmp
gs
pop
xchg
pop
xchg
int
fistps
cmpsb
pushf
sahf
icebp
mov
addr16
nop
aam
jp
xor
xchg
std
incl
mov
imul
jge
idivb
test
xor
sub
pushl
push
into
sarl
pop
xchg
xor
and
das
mov
sbb
push
jbe
pop
outsl
lahf
inc
mov
cmp
mov
push
bound
jb
test
jl
push
dec
add
push
cmp
or
dec
lea
inc
mov
sbb
or
pop
sub
mov
add
xchg
ja
in
cli
into
push
jg
add
inc
inc
cs
jg
aas
das
loopne
push
sbb
testb
addr16
xor
scas
nop
jg
sti
jmp
ficoms
sbb
sahf
dec
imul
inc
fcoms
inc
pop
mov
xor
jg
pusha
mov
push
inc
insl
rcr
dec
js
push
jg
icebp
jne
sar
lcall
aaa
dec
subl
xor
js
xchg
test
xor
daa
sarb
push
enter
ljmp
mov
pop
rcl
test
test
sbb
cmpsl
adc
push
jmp
popf
fs
cs
clc
std
dec
outsl
xchg
sbb
xor
rcrb
pop
ja
ret
adc
arpl
push
jg
mov
inc
popaw
push
push
leave
sbb
fs
ja
out
mov
lock
repz
fcoms
call
ds
stos
or
fistpl
cld
mov
movsb
jae
cmp
jmp
mov
mov
sbb
insb
inc
test
inc
jb
fimull
call
mov
ror
pop
cmp
repz
inc
dec
inc
pop
dec
lcall
call
pop
divb
gs
push
shl
sahf
xchg
inc
sub
inc
das
js
xchg
inc
test
incl
push
insb
stc
pop
sahf
jmp
or
in
cld
adc
lret
arpl
xor
dec
inc
sti
mov
test
ja
outsb
inc
imul
inc
popf
push
lahf
cltd
xor
icebp
sub
jmp
gs
pop
sarl
push
iret
sahf
pop
call
rcll
stos
xchg
adc
stc
or
int3
test
or
repz
adc
cwtl
xchg
mov
add
pushl
cld
cmpsb
lcall
mov
cmp
clc
dec
jp
popf
dec
cwtl
cmp
jmp
cmp
ds
sbb
fmuls
jp
hlt
in
sbb
lahf
pushl
cld
call
mov
stc
and
adc
dec
push
aam
es
ja
jmp
repnz
jo
roll
jp
popf
push
leave
stos
cs
imul
mov
pushl
lcall
enter
or
mov
jnp
jmp
shll
jno
xor
loop
dec
cmp
xchg
mov
ljmp
lcall
mov
xor
enter
and
movsl
jge
lea
loopne
inc
aas
lock
push
jno
icebp
imul
dec
sub
dec
xor
mov
inc
pusha
lret
push
in
and
inc
sbb
push
cmp
mov
cmp
hlt
cli
idivb
mov
mov
jmp
xor
leave
mov
pushl
in
cld
sbb
lcall
dec
bound
mov
sub
sete
fcoms
lcall
or
scas
call
sub
lahf
hlt
das
fnstcw
mov
cmp
xchg
out
fists
stos
dec
xchg
in
lock
fstp
xor
lods
and
pop
xchg
lahf
jae
mov
xchg
les
push
je
into
cmpsb
scas
mov
call
ret
jbe
std
scas
ret
sub
iret
out
sbb
ja
call
cli
dec
xor
dec
sub
jmp
repnz
mov
inc
in
shr
ss
inc
pushl
stos
jp
or
pop
cmp
gs
mov
outsb
jmp
fwait
inc
scas
jmp
lret
test
mov
fcomps
loope
push
test
jle
out
out
lea
sar
ljmp
scas
stos
ret
in
ja
jbe
mov
sbb
mov
jmp
inc
pminsw
ljmp
rol
fs
sub
cmp
negl
ret
ficoml
lcall
pop
aaa
dec
faddl
jnp
xorl
jge
stos
scas
xlat
pushl
loope
out
pusha
inc
cwtl
xchg
sbb
ss
push
mov
sti
daa
sbb
incl
jg
insl
xchg
cs
push
rol
push
sbb
call
call
cmp
mov
push
scas
mov
rclb
cmp
mov
mov
jmp
jmp
or
mov
test
jbe
fidivs
xchg
pop
push
lods
lcall
decl
or
loope
jge
mov
or
adc
fwait
out
cmc
or
jmp
aam
mov
loope
loopne
mov
test
sbb
into
jp
sub
imul
mov
and
insl
sub
xor
push
popf
cwtl
add
ljmp
push
cmp
dec
rcrl
je
je
sbb
out
jbe
subl
lahf
ljmp
lock
adc
out
in
jge
xchg
mov
xlat
xlat
mov
lcall
incl
jp
dec
insb
mov
lret
mov
gs
mov
push
sbb
filds
jo
scas
jns
je
adc
or
push
cltd
das
push
imul
xchg
jmp
jl
pop
xchg
rorb
pop
nop
imul
fwait
jmp
inc
dec
mov
mov
mov
adc
imull
out
mov
fsubrl
fdivs
cmc
mov
iret
xchg
mov
xlat
xchg
clc
cmp
jle
and
imul
test
lcall
jp
loope
scas
sbb
pop
fisubrl
jmp
xchg
add
lcall
call
sbb
push
aam
mov
inc
divl
enter
dec
mov
pop
inc
movsl
enter
sub
lea
mov
addr16
in
out
scas
jp
and
dec
clc
lods
cmpsb
call
mov
mov
mov
dec
repz
cltd
in
pop
lcall
mov
leave
mov
hlt
mov
sub
add
int3
mov
pop
adc
jl
sub
inc
stc
mov
je
ret
fnstsw
add
inc
or
mov
sbb
call
push
test
in
mov
dec
xlat
fs
or
cmp
insb
fcomip
call
or
mov
mov
movsb
xchg
dec
es
pop
daa
pop
jmp
jmp
cld
inc
insl
pop
adc
or
add
sub
roll
fisubs
addr16
fildll
fdivrp
push
mov
mov
mov
sti
out
lods
push
aas
jb
pop
mov
out
scas
test
or
call
fwait
rolb
inc
call
cmp
hlt
or
cwtl
dec
enter
call
jg
mov
dec
xor
adc
cmp
jge
cld
add
popa
sub
shr
nop
cmp
adc
lahf
loopne
or
or
rorl
nop
lret
mov
or
fdiv
mov
insl
push
dec
jp
stos
xchg
inc
pop
pop
push
push
xchg
jecxz
xor
pushl
sarl
xchg
xchg
push
lock
jne
sbb
lret
cwtl
aas
lcall
popa
out
fstl
fdivr
sub
mov
repnz
into
std
add
lea
sbb
pushl
test
bound
loopne
ret
fidivl
fadds
mov
mov
jae
test
pushl
fdivl
enter
xlat
mov
pop
sub
movsl
inc
adc
cmovge
cli
jmp
enter
xor
pushf
adc
cs
jmp
mov
clc
pushl
insb
add
mov
sbbb
shrb
lretw
decl
stos
inc
jmp
mov
lret
cmpsl
gs
imul
xchg
jg
outsb
push
dec
jge
mov
sbb
fmulp
cld
add
adc
push
mov
loop
stos
and
ds
sub
or
add
lret
and
insb
sbb
push
mov
sub
ljmp
cmp
sbb
push
sub
aas
aad
jb
hlt
hlt
mov
lahf
sbb
cmpsb
decl
js
pop
inc
dec
sar
mov
cmc
jbe
mov
or
and
pushl
push
aad
pushf
adc
cmc
std
aam
xor
jno
cmpsb
mov
ljmp
cli
ffreep
or
in
and
movsl
fiaddl
mov
fcmovu
add
stos
call
or
sub
out
idiv
decl
lcall
adc
repz
outsb
pushf
outsb
insb
sbb
fnstcw
fdivs
push
fsubs
xchg
adc
lret
dec
mov
pushf
cmc
test
outsl
sbb
fstpt
repnz
mov
pop
outsl
outsl
jmp
cs
ds
inc
incl
dec
dec
dec
push
jp
adc
jp
sahf
pop
xor
jg
test
call
pop
enter
add
jp
ds
mov
ja
mov
loop
in
repnz
push
mov
lret
pushl
or
add
jle
or
aad
pushf
jecxz
jp
cmpsb
cwtl
and
push
sahf
incl
jo
into
fs
cli
ror
icebp
cltd
sbb
inc
into
fwait
mov
std
pop
pop
or
mov
mov
mov
testl
sbb
push
stos
push
cltd
dec
ljmp
cltd
repnz
xchg
jnp
push
jnp
push
adc
sub
fwait
cltd
cltd
mov
mov
jno
cmp
and
inc
push
sub
sub
idiv
jmp
int
and
pushl
jge
aaa
pop
jp
push
jnp
mov
jg
jmp
aam
xchg
xchg
lock
shrb
enter
mov
out
lcall
add
cmp
mov
loopne
es
outsb
or
test
psubsw
ret
mov
or
addr16
add
ret
jmp
xchg
imul
xor
inc
sbbb
push
push
cmp
lcall
push
daa
notl
xchg
outsl
jnp
cmp
insl
ds
xlat
into
gs
sbb
in
jecxz
fsts
scas
mov
decl
in
push
push
dec
jo
out
cmp
je
inc
adc
lea
xchg
in
jmp
add
jl
leave
nop
xor
fwait
mov
lds
scas
inc
ja
add
test
call
repnz
or
mov
inc
arpl
fdivrl
push
repz
jae
aaa
std
inc
inc
mov
out
inc
mov
xchg
int3
add
mov
jmp
orl
test
popf
inc
test
mov
sub
xchg
pushl
jecxz
mov
pop
sti
mov
mov
lock
iret
sub
sar
cli
pop
xchg
lods
fpatan
movsl
xor
int
decb
lret
mov
adcb
jg
lea
sbb
fsubr
bnd
stos
mov
cmc
loopne
xchg
cld
fildll
add
mov
pushl
sti
sbb
es
fisubrs
mov
fstp
fildl
sarl
clc
lahf
jmp
out
ret
in
inc
mov
movsl
pushf
add
push
lcall
inc
jle
js
jmp
pop
add
jnp
lret
sbb
xorl
cmpsl
stc
push
out
adc
add
jmp
push
decl
sub
pop
mov
or
add
test
out
pop
sbb
pushl
lds
sub
add
or
cmp
or
push
xor
push
mov
js
repnz
or
addr16
jo
pop
loope
adc
pop
in
pop
fs
xor
mov
xor
loop
lods
push
mov
repz
in
out
cltd
inc
cmpl
cmp
aam
or
mov
in
pop
dec
test
std
out
loop
incl
sbb
ss
daa
and
loop
pusha
int
ljmp
push
mov
clc
mov
xchg
out
pusha
lcall
push
ljmp
jmp
sbb
dec
mov
cmp
sbb
inc
push
sub
xchg
jle,pn
das
sar
movsb
mull
imul
xchg
aas
xor
mov
je
out
jae
cmpsl
nop
in
mov
ret
cwtl
or
test
push
fmuls
mov
sub
inc
int
mov
sub
dec
sarl
cmp
stc
lret
bound
fsubl
pushl
sub
cmp
arpl
rol
stos
cld
mov
lcall
sub
cld
ljmp
ret
or
and
xor
iret
pop
sahf
and
or
sbb
in
pop
aad
xchg
int3
test
or
mov
pushl
int3
sti
add
and
adc
imul
mov
dec
sbb
cli
rcll
leave
rclb
and
fwait
sub
fistl
adc
shl
fnsave
decl
and
adc
fldl
leave
adc
or
xor
cmpsl
adc
ljmp
popf
jno
pushl
gs
xor
or
in
dec
mov
jecxz
es
sub
push
pushf
inc
ljmp
cwtl
stos
mov
lods
lock
popa
fistpl
cmp
dec
pop
sub
out
xchg
in
stos
lret
ljmp
sub
cmp
mov
dec
cmp
mov
scas
in
repz
test
call
in
stos
xchg
cmc
xor
aaa
pop
cli
arpl
jmp
test
mov
rdpmc
dec
add
stos
int3
arpl
pusha
jbe
xchg
popa
daa
pop
out
mov
data16
sbb
adc
ret
mov
dec
mov
addl
xchg
cmp
sbbl
jg
sbb
xchg
adc
orb
jmp
test
das
out
das
pop
shl
jnp
movsb
inc
rolb
push
in
pushf
push
stos
mov
stos
mov
cmp
dec
mov
fistps
loope
adc
push
sub
xor
pop
addl
stos
cmpsb
decl
ljmp
repnz
lret
test
iret
repz
je
cld
add
sarl
outsl
in
icebp
fs
incl
out
cld
insb
xchg
lods
pop
ss
push
into
pop
sbb
pop
sar
mov
in
jo
or
dec
xchg
addl
adc
cmp
roll
mov
mov
flds
mov
call
aaa
shr
mov
inc
fwait
lcall
popf
repz
mov
es
int3
jne
or
movsl
jl
mov
scas
repz
pop
ret
aaa
add
stos
add
push
loope
xor
repnz
mov
or
add
lods
mov
jmp
and
jmp
popa
xor
mov
lds
orl
xor
decl
jp
enter
jmp
jl
negb
sbb
movsl
pusha
lret
jle
ljmp
cli
lods
stc
incl
and
testl
addr16
popa
cmpsl
mov
lcall
add
cmp
std
hlt
dec
scas
cli
ja
inc
je
addb
imul
jmp
ret
in
xchg
mov
faddl
add
and
xor
inc
push
fmull
add
dec
imul
stos
call
push
mov
loop
rorb
mov
jns
add
decl
push
cltd
or
addr16
xchg
test
pusha
inc
xor
shlb
std
pop
inc
xchg
idivb
mov
mov
add
repz
push
test
mov
mov
incl
push
mov
sti
fidivl
int
fimuls
jp
sahf
jae
roll
cmp
cmp
call
cli
fisubrs
push
push
rorl
std
cmp
pop
dec
jb
mov
into
xor
adc
pop
stc
aas
inc
inc
pop
dec
jno
les
push
ss
adc
femms
jnp
pop
jmp
jno
and
add
testb
mov
pushf
xor
enter
aam
addr16
sbb
ljmp
mov
popf
ljmp
sub
jns
xor
bound
ljmp
xor
inc
fdivrl
sbb
imulb
fildl
int3
loope
test
incl
test
sbbl
test
mov
xor
jne
mov
loop
pushl
adc
inc
add
adc
cmp
jns
mov
outsb
inc
pop
sahf
pop
push
add
jbe
dec
sbb
and
jae
mov
mov
jecxz
lods
stos
decl
pop
add
into
jae
push
xor
jle
loope
scas
dec
pop
dec
cwtl
test
xchg
push
js
rorl
mov
popl
dec
and
xchg
enter
fs
mov
rcrw
mov
lock
sarb
aam
jp
andb
icebp
in
jns
xchg
int
gs
lcall
hlt
sub
and
loope
mov
es
or
aad
cmp
push
add
inc
mov
push
push
mov
push
fsubs
mov
sub
lock
jmp
mov
lret
cmp
aaa
int
pop
inc
test
mull
cmp
clc
xor
xchg
pushf
add
pop
mov
cmp
hlt
xchg
xchg
or
jmp
push
loopne
std
ret
push
inc
mov
mov
pop
mov
sbb
inc
push
jnp
movsl
or
push
or
cwtl
std
mov
test
out
push
popf
stos
xchg
ljmp
or
shll
jb
shll
and
mov
xor
dec
adc
or
lcall
adcb
mov
loope
fcmove
inc
pop
les
add
push
and
decl
cmpsl
movsb
dec
cmpsw
mov
dec
push
sub
in
fdivrl
adc
andl
mov
cmpsb
mov
bound
repz
or
push
loope
dec
into
cli
incl
mov
jmp
xchg
fdivl
sub
pop
fadds
je
push
movhlps
movsb
insb
outsl
clc
lcall
add
inc
inc
pop
cwtl
sbb
int
mov
cwtl
in
sub
adcl
lcall
bswap
divb
jns
cld
sbb
xor
push
inc
sahf
frstor
pop
jp
popa
rorb
leave
outsl
lret
rcr
dec
daa
sbb
or
loop
sbb
cmp
and
mov
or
decl
jp
test
xchg
mov
in
xchg
repz
repz
mov
mov
adc
dec
add
jg
jo
cmp
iret
leave
cld
dec
mov
outsb
aam
jmp
fcoml
insb
pop
jmp
add
xchg
std
jmp
cmp
jb
das
mov
mov
or
lods
jmp
push
leave
decl
sub
addr16
out
test
xor
cmp
push
loopne
mov
call
lcall
xchg
mov
outsl
pop
lret
std
dec
imul
iret
andb
repz
mov
decl
jp
mov
mov
mov
mov
jg
lods
push
push
sbb
mov
and
stos
out
pop
mov
add
jns
rolb
jno
lret
cmp
xchg
fstpl
movsb
scas
stc
xchg
dec
push
pop
mul
sbb
outsb
mov
leave
test
test
jne
out
pop
jl
dec
ja
cmc
enter
into
lock
dec
mov
ljmp
stos
clc
test
push
test
mov
mov
mov
mov
mov
cmp
push
xchg
inc
sub
ljmp
push
mov
pop
lods
mov
sbb
mov
iret
cmp
mov
ljmp
arpl
xchg
dec
inc
sub
das
lock
adc
sbb
insb
jns
mov
pop
cmp
aas
fchs
in
sti
shll
xchg
pop
sub
pop
xchg
pop
mov
inc
push
xor
repz
jmp
pusha
inc
lret
xchg
inc
sti
inc
ss
cmp
push
pop
mov
popa
cmp
decb
adcb
sub
testb
insl
or
ret
frstor
adc
call
in
lcall
sbb
inc
mov
int3
jge
cli
cmp
imul
mov
inc
lods
fisubs
setbe
push
mov
movsb
in
lret
lock
into
cmc
leave
ds
add
mov
icebp
sti
sub
out
sub
movsb
mov
inc
pusha
mov
adc
sahf
bswap
or
sahf
jg
jg
jmp
cltd
sub
inc
std
fiaddl
sbb
mov
adc
iret
adc
dec
addb
jo
sbbb
ret
jecxz
loop
decl
stos
xchg
mov
sub
bound
loope
push
adc
mov
scas
mov
pop
mov
mov
adc
popa
jmp
push
xor
pusha
pop
rcrb
lret
loope
loop
mov
xor
mov
bound
push
ret
ror
ljmp
xor
fidivrs
xchg
xchg
sbb
cmp
push
push
shlb
clc
pushl
sub
loope
sub
lahf
ljmp
mov
mov
sub
add
jmp
fsubrs
cmp
cmp
mov
add
ljmp
xchg
push
mov
cmp
insb
mov
dec
pop
cld
js
cmp
ljmp
dec
jecxz
or
or
movsl
adc
stc
in
mov
aaa
std
in
and
inc
cwtl
cmpsl
inc
sysenter
push
pop
ja
sbb
push
decl
lcall
jb
mov
fucomi
jecxz
shll
push
xlat
jecxz
xor
stc
mov
lcall
iret
mov
outsb
xchg
inc
push
pusha
and
lcall
std
and
add
cli
loope
sbb
mov
pop
out
pop
dec
roll
push
enter
jl
filds
ror
inc
adcl
jmp
rcrl
and
pushl
rcrb
xor
mov
rorl
sahf
cmp
cmp
push
test
pop
lods
sbb
shlb
xor
scas
repnz
loope
imul
adc
mov
inc
mov
xchg
jle
mov
mov
sub
mov
dec
repz
sub
repnz
popa
bound
push
in
jns
push
cld
popf
and
mov
pop
mov
imul
mov
lret
and
insb
lods
call
add
test
mov
std
xchg
shrb
inc
pop
add
pop
shl
xor
sbb
call
xchg
lret
jo
les
adc
mov
mov
dec
enter
add
ljmp
and
mov
leave
jo
push
gs
out
pop
pop
arpl
pop
mov
inc
sub
mov
jmp
adc
inc
mov
lds
inc
loopne
outsl
ret
rolb
inc
hlt
lcall
push
cmp
test
je
sub
sbb
aam
cmp
stos
filds
out
jl
and
lods
pop
ljmp
mov
xchg
divb
stos
repnz
popf
inc
mov
jmp
push
cmpb
cmp
incb
notb
call
xlat
cltd
xchg
mov
mov
rcrl
lcall
rorb
call
mov
fbstp
mov
cmp
xchg
push
mov
sarb
jmp
pusha
jnp
clc
hlt
mov
fsubl
lods
shl
mov
jo
push
pop
ljmp
int
inc
fs
xchg
in
and
cmp
call
outsb
aad
pop
dec
pop
fidivl
jmp
cli
notl
andb
orb
mov
xlat
in
inc
hlt
in
hlt
sti
in
jmp
aam
mov
nop
dec
cmp
sbb
addl
push
add
mov
and
lcall
add
inc
mov
xor
sahf
daa
xor
dec
xor
lahf
push
fcomip
jmp
and
ljmp
inc
push
push
dec
sbb
insb
pop
pop
scas
sbb
sub
pop
dec
jmp
ljmp
lret
sub
aaa
jo
xorl
popf
cmpsl
mul
sub
pop
fdivrs
jae
mov
lea
popa
dec
pop
orb
inc
repnz
int
pop
sub
sbb
sub
sbb
adc
mov
sbb
mov
xor
xchg
incl
test
cld
rclb
inc
daa
test
adc
or
or
sar
jns
xor
cmp
or
hlt
icebp
xchg
adc
xchg
lcall
xorb
mov
icebp
and
lret
push
jo
mov
mov
inc
dec
sub
add
fists
push
mov
dec
cli
add
xchg
test
jmp
or
rol
test
ret
inc
cmc
jmp
out
cmp
jae
int
call
stos
jl
sbb
xor
test
add
push
lds
repz
jae
cmc
lods
aam
pushf
ficompl
rol
and
jg
mov
ret
mov
and
enter
or
mov
xlat
out
sub
clc
fisttps
jp
mov
mov
push
repnz
gs
fwait
hlt
aaa
mov
push
test
call
sbb
rcl
movsb
imul
ds
cmpsl
orb
jmp
mov
cs
lock
ljmp
cs
push
dec
vmovdqa
movsl
call
mov
fisubrl
adc
gs
jo
mov
sbb
or
movl
mov
ljmp
in
stos
xor
repz
insb
xchg
mov
xor
scas
decl
fildll
loope
jl
xchg
popa
push
divl
mov
lcall
scas
je
mov
in
sbb
sub
lret
mov
rorl
jle
fcomip
jmp
insl
test
and
dec
sbb
jl
inc
sbb
dec
jl
ds
jns
push
call
push
daa
mov
mov
data16
push
xor
outsb
rcl
pop
jle
xchg
push
inc
das
mov
daa
mov
in
cmp
xchg
dec
xchg
pop
or
lahf
lahf
in
jecxz
jbe
call
mov
subl
cmpb
or
pop
fildl
mov
aad
fcomip
lcall
pop
cltd
mov
enter
pop
or
inc
outsb
mov
daa
add
lods
and
call
dec
cltd
or
stos
cmpsb
inc
scas
adc
cmp
xchg
ds
fbld
into
jns
jmp
mov
add
stos
xor
mov
insb
divl
dec
sbb
insl
mov
xchg
movsl
dec
mov
xor
mov
insb
jbe
sbbl
cmpb
jnp
push
cltd
push
add
loope
jnp
pushf
inc
out
xchg
andl
mov
ljmp
push
cmp
ljmp
test
xchg
pop
adc
mov
insl
xor
cmpsb
mov
pushl
push
lret
lcall
lock
mov
dec
push
mov
jg
fcomip
ljmp
ret
add
orl
xchg
sub
xor
push
mov
loop
inc
jno
jmp
xor
or
outsl
lds
or
nop
mov
iret
test
fwait
aam
clc
aas
pop
icebp
decl
push
push
sub
loope
es
sub
insb
jmp
mov
xchg
xchg
sub
sbb
xor
notb
repnz
test
mov
addl
lret
repz
dec
subb
insl
aam
movsl
sahf
inc
mov
les
jg
incl
dec
aas
cmp
push
and
jmp
fs
pop
cmp
inc
out
sar
loope
ret
push
mov
or
stc
sbb
and
stos
repz
ds
mov
push
jb
int
aaa
inc
inc
jae
sub
ret
jp
add
loopne
test
mov
outsb
adc
int
orl
pop
xor
sti
mov
pusha
call
js
jb
add
mov
jbe
push
in
mov
ja
mov
jge
mov
incl
jmp
aad
test
jmp
addr16
jg
push
cld
jg
repz
idiv
sub
jl
push
les
add
pushl
std
iret
sbb
shll
and
pushl
jmp
dec
inc
nop
fcmovu
inc
inc
sbb
in
xchg
dec
jl
ret
aad
mov
lcall
je
fwait
sub
adcl
ja
leave
push
inc
fisubl
lcall
leave
into
push
pop
xor
mov
stc
adc
pushf
push
xor
jmp
call
incl
jmp
inc
lahf
aad
cmp
hlt
or
xchg
lods
pop
dec
jmp
outsb
ds
xchg
mov
xor
and
jns
push
cmpb
les
stos
pop
int3
inc
inc
sahf
cld
mov
sub
push
popa
jmp
xor
add
and
mov
mov
and
mov
imul
jne
ss
inc
in
sub
xchg
sti
adc
cmc
mov
jp
cmp
pushl
pop
jg
mov
mov
push
xor
jno
add
push
sbb
lcall
ljmp
jecxz
jns
in
cld
push
dec
loope
xor
ret
arpl
pushl
out
cmpl
sub
pop
sbb
test
stos
bound
mov
mov
inc
or
ljmp
and
addl
sbb
lcall
hlt
mov
stos
cmp
scas
movsl
push
mov
scas
sub
test
mov
sbb
sti
cld
rolb
lcall
xor
repnz
mov
popl
xor
jb
out
pop
cli
dec
fwait
push
adc
test
movsl
in
sti
push
dec
push
mov
inc
mov
bnd
es
mov
pop
inc
sarb
insl
sbb
pushl
push
in
mov
cmpsb
xchg
outsl
arpl
shlb
lret
scas
clc
pushl
notb
pushf
insb
mov
jae
hlt
pop
dec
notb
pushl
dec
lahf
fisttpl
jmp
inc
dec
cmp
int
lock
push
shrl
mov
test
in
aam
je
jg
incl
adc
mov
push
repnz
jg
enter
and
dec
ficomps
mov
addr16
mov
push
fidivrl
pushf
inc
out
repnz
and
push
adc
call
mov
stc
xchg
sub
mov
daa
or
and
icebp
push
nop
cmp
inc
or
pop
jl
and
popa
inc
add
fstps
or
cmp
inc
test
out
call
orl
xchg
or
dec
ret
mov
cmp
daa
push
cld
pushl
add
inc
mov
xchg
jmp
lods
cli
sub
cmp
cmp
xchg
mov
incl
mov
push
out
adc
or
shrb
sbb
loopne
fsubp
mov
call
lock
cltd
fidivl
fimuls
xchg
ret
scas
cli
jmp
and
mov
int
shl
les
inc
sbb
lods
mov
xchg
out
fbld
andb
pop
int
mov
gs
xchg
test
imul
jle
xlat
test
or
repz
std
lret
mov
inc
popa
int
lcall
inc
inc
daa
inc
cmp
stos
or
int3
sub
hlt
shl
mov
inc
and
decl
mov
mov
lods
andl
sahf
fs
jae
pushf
incl
add
xor
add
lea
add
fsubl
int3
repz
push
push
pushf
adc
cltd
adc
mov
ret
out
add
xchg
stc
xor
push
bound
nop
jnp
dec
add
add
mov
gs
incl
ljmp
mov
add
add
addr16
ds
adc
adc
dec
pop
cmp
xor
push
mov
and
subb
jle
add
enter
daa
addb
iret
or
adc
mov
jmp
and
and
nop
mov
cmc
add
cs
mov
sbb
mov
dec
cltd
lea
movsb
out
cld
add
pushl
js
add
popf
adc
stos
dec
add
add
push
add
adc
inc
test
add
pop
adc
push
mov
add
call
and
add
sub
les
loope
jae
mov
hlt
add
call
xor
mov
xor
mov
sti
dec
push
adc
pop
add
cld
sarl
jle
aad
inc
dec
fisubrs
jb
adc
test
cwtl
rorl
aaa
add
add
jg
pop
test
push
inc
cwtl
cmp
lret
lcall
aaa
sbb
dec
rcrb
mov
mov
addr16
xchg
out
out
fnstenv
add
mov
mov
call
fcompl
mov
sbb
mov
dec
and
stc
rcrb
pop
mov
js
jg
pop
and
add
or
jo
mov
jmp
ret
jg
je
cs
push
movaps
mov
jno
sahf
jg
xorb
or
lods
push
fstl
outsl
ljmp
mov
mov
mov
mov
outsb
dec
lahf
xchg
stc
add
jmp
mov
hlt
test
pop
jmp
inc
xor
test
mov
or
inc
inc
in
add
ret
aas
inc
movsb
add
out
add
int3
ret
into
sbb
jo
cmp
push
mov
lcall
fcompl
fiaddl
or
sbb
pusha
data16
jb
decl
ja
call
dec
xlat
add
and
adc
xchg
mov
fistl
js
ds
frstor
push
jg
call
in
add
out
inc
add
shrb
shll
or
cld
inc
rclb
incl
nop
xor
out
pop
jecxz
add
fisttpll
cmp
test
adc
push
mov
and
mov
add
clc
add
icebp
add
loope
mov
dec
orb
repz
outsl
push
mov
jg
inc
dec
lock
xchg
jge
negb
push
cs
pusha
mov
sahf
movl
push
lds
repnz
dec
mov
fcmovu
xor
xchg
cmp
jmp
xchg
nop
mov
sbb
movsl
push
mov
mov
ljmp
adc
cmp
lds
xor
xor
cs
mov
rclb
xchg
fdivr
dec
add
add
and
mov
loopne
and
mov
mov
stos
mov
loope
call
jno
out
addl
jno
mov
cmp
insl
jo
sub
adc
xchg
push
roll
adc
jg
sbb
pop
adc
outsl
cli
pop
hlt
xchg
rdrand
popa
imul
mov
jnp
add
inc
dec
mov
adc
add
push
aam
shlb
jmp
sbb
add
sbb
mov
test
push
add
ret
sub
inc
stos
pop
mov
scas
pushl
mov
clc
lock
inc
cmp
jp
or
scas
xor
pusha
pop
mov
int3
push
cld
push
clc
adc
loopne
sbb
cmc
cmp
dec
adc
lahf
out
mov
cli
add
pop
loop
mov
aaa
push
out
fmuls
mov
cld
incl
ret
push
sti
fadds
mov
int3
add
dec
pop
inc
daa
out
cli
push
es
ret
ret
push
addb
push
loop
movsb
adc
cltd
roll
vfnmadd213pd
lcall
and
dec
push
jo
pusha
mov
mov
incb
cli
into
inc
out
adc
inc
mov
inc
aam
fisttpl
dec
dec
mov
call
push
xorl
divb
hlt
sub
les
loopne
stos
leave
mov
add
xor
push
shll
hlt
bound
pop
mov
add
lods
dec
cmp
in
int3
mov
pop
mov
loope
cmp
pushl
aas
pusha
pop
pop
in
or
xchg
sbb
push
rorl
inc
ljmp
jb
cmp
jne
push
repnz
icebp
adc
gs
push
cmp
push
scas
jmp
shll
xchg
stos
pop
push
loope
push
ret
fwait
jmp
mov
je
jbe
add
push
loopne
lock
or
mov
in
repnz
das
inc
xlat
ds
aam
pop
xchg
adc
nop
sub
mov
lcall
mov
sbb
movsl
push
cld
cmp
cmp
push
push
pop
scas
xor
int3
adc
sub
cmpsb
es
in
sbbb
jb
cli
fwait
sbb
push
xor
les
das
rcr
idivb
sub
mov
pop
sub
sahf
lahf
xchg
mov
cmp
inc
mov
jmp
scas
mov
sub
mov
push
sbb
add
fsub
into
test
push
hlt
mov
pushl
stos
pop
inc
int3
imul
mov
fimuls
xchg
roll
or
sbb
aam
cld
push
sahf
mov
jae
je
cmc
addr16
mov
roll
inc
push
dec
dec
fsubr
mov
imulb
pop
pushf
cmc
push
jge
pop
or
subl
sbb
and
test
cmp
and
sti
push
lret
cld
dec
adc
inc
xor
xchg
push
je
fucomi
adc
dec
xor
dec
scas
mov
push
out
in
jg
sbb
add
sub
mov
adc
sub
mov
inc
adcb
xchg
jo
test
push
into
ret
add
sbb
mov
sahf
jne
iret
dec
inc
mov
xor
test
xchg
push
xor
divl
cmp
mov
sbb
hlt
inc
mov
ss
cs
cwtl
push
dec
jmp
xchg
mov
sbb
add
loopne
rcll
lret
fs
mov
xor
andb
and
push
pop
mov
xchg
dec
test
inc
out
in
loopne
lods
mov
sub
es
add
sub
and
push
push
ds
je,pn
sbb
adc
push
lret
cld
add
dec
adc
pop
jl
out
add
or
push
je
and
clc
push
mov
sarl
hlt
adc
inc
lds
sbb
inc
repnz
out
sub
xchg
test
lea
add
out
add
insb
sbb
add
roll
lcall
add
nop
rclb
ds
jns
rcll
or
js
pop
bnd
call
or
scas
out
testb
xchg
ret
push
aas
pushf
lods
fst
mov
fisubs
pusha
nop
sub
ret
clc
inc
add
lods
mov
xor
or
enter
mov
loop
xchg
xor
jg
mov
addb
inc
ljmp
and
and
and
jp
cmpsl
insb
pop
pop
shl
idivl
dec
and
jo
mov
add
loopne
xchg
and
jo
int3
rol
xor
push
dec
aas
add
sar
sub
fmull
repz
mov
or
xchg
incl
inc
into
xchg
pop
cltd
and
cmp
es
jle
ljmp
adc
stos
ret
leave
dec
jl
mov
push
jns
adc
pusha
or
dec
xor
fcomps
mov
push
dec
fs
sbb
sbb
stos
inc
decl
adc
xorb
ret
loopne
add
incl
inc
add
ljmp
push
mov
bound
loope
lds
aad
jns
gs
sub
incl
mov
adc
add
pusha
adc
call
aaa
adc
pop
test
jle
xchg
jg
mov
pop
or
push
loopne
and
inc
movsb
sub
pop
mov
lock
sbb
test
or
jbe
mov
xchg
cmp
clc
decl
pushf
loop
testb
arpl
and
test
ja
push
mov
xor
nop
push
add
in
add
nop
xchg
xor
fptan
push
mulb
sbb
fsubl
in
push
outsl
inc
popf
repz
inc
mov
outsb
hlt
rcrb
mov
jne
mov
add
jmp
out
das
xor
pop
cld
int3
jmp
ret
jge
in
push
stc
lret
ret
mov
loope
mov
jl
hlt
enter
ret
in
and
mov
or
jnp
and
inc
cmpsl
push
add
adc
nop
or
add
xor
scas
mov
repz
push
adc
xor
dec
add
cld
shll
adc
and
mov
xor
outsb
mov
aad
cmp
xor
out
add
decl
add
xorb
add
sti
ja
pop
std
mov
mov
lds
out
jae
xor
out
jg
scas
flds
jb
add
vandnpd
jp
bound
in
sti
fistl
lea
or
mov
sti
mov
sbb
push
pop
mov
add
pop
stos
ret
in
dec
and
scas
cmp
pop
adc
icebp
jl
adc
daa
pop
fwait
xchg
jb
adc
imul
xor
adc
inc
sbb
ret
xchg
sub
mov
mov
loopne
adc
leave
push
lock
add
ljmp
out
or
cmp
xchg
inc
push
xchg
clc
pop
mov
sbbb
or
sbb
std
inc
dec
or
out
lahf
jb
test
movsb
sub
pop
data16
or
or
insl
add
push
out
iret
stos
mov
daa
mov
fiaddl
loop
xlat
jp
cwtl
sbb
jns
je
ffreep
xor
movsl
or
ljmp
push
bound
dec
xchg
pop
sub
sub
negb
clc
incl
dec
add
adc
lcall
mov
subb
cld
sbb
test
aam
and
loop
mov
imul
ret
pusha
pop
xchg
add
adc
or
pop
push
xorb
push
jge
jle
cmp
mov
push
ret
cmp
jg
sbb
data16
les
cmp
push
xor
mov
jp
add
mov
loopne
jg
dec
or
rclb
cmpl
add
mov
sub
cwtl
enter
cwtl
loopne
sub
inc
mov
pop
push
fmull
fsubs
dec
jge
mov
cmp
jo
xchg
push
fiaddl
push
inc
mov
sbb
and
mov
jmp
mov
push
loop
adc
and
test
mov
add
in
cmpsb
arpl
push
ret
push
pop
jae
lcall
adc
mov
mov
cmp
jns
lahf
enter
jp
mov
jnp
rolb
cwtl
add
xor
test
mov
lock
daa
jecxz
pop
jle
mov
dec
or
inc
and
inc
sti
sbb
sbb
outsb
outsb
xchg
cmp
aas
adcb
jecxz
xor
in
mov
adcl
test
pushl
mov
scas
out
cmp
push
add
lods
jp
inc
in
inc
ljmp
pop
pop
push
sbb
addb
jns
sbb
push
add
push
imulb
cmpsb
aaa
call
cmpsb
cmp
add
add
mov
test
adcb
sbb
xchg
enter
mov
pop
fdiv
push
and
jbe
pop
add
cs
cld
insl
or
adc
mov
add
out
faddl
loopne
popa
xor
mov
ljmp
into
sub
int3
sbb
es
cs
add
dec
push
inc
push
cmp
outsl
jo
test
pop
adc
pop
add
repz
jg
and
pop
sub
lcall
inc
cs
mov
pop
or
aaa
insb
xchg
fisttps
clc
loope
cmp
pop
inc
sbb
mov
pop
int
in
je
mov
lods
inc
popa
xor
push
loopne
sbb
xorl
dec
xchg
les
push
stc
test
fisubl
mov
cli
dec
gs
movsb
decb
xor
stos
fwait
xor
mov
sub
jne
and
xchg
push
cs
push
les
popf
in
xchg
push
inc
int3
das
stos
fdiv
add
xor
pop
sub
aaa
call
or
mov
test
cwtl
mov
adc
sti
mov
dec
push
cmp
ja
sub
cmpsb
sbb
xchg
jg
test
arpl
xchg
cltd
rclb
mov
out
or
mov
mov
xor
jb
cmp
je
dec
mov
aam
push
or
aam
add
repnz
sarl
aam
sub
dec
in
enter
out
rorl
mov
sbb
sbb
xor
ret
cmpsb
push
sti
mull
cld
inc
std
fisttps
mov
shl
mov
xor
fstp
mov
dec
xorb
cli
outsl
sahf
sarl
iret
sbb
push
add
addb
les
fsubrs
mov
sarb
and
test
out
xchg
mov
jnp
fnsave
mov
sbbl
push
xor
mov
test
and
pop
and
in
add
fnstsw
or
and
mov
dec
cmp
cmpsb
cwtl
sub
xchg
push
pop
sbb
ds
test
clc
enter
mov
sbb
push
mov
sahf
push
cmp
pop
push
pop
inc
enter
and
inc
lods
push
or
rorb
loop
xchg
pushf
mov
cmpb
pop
xchg
pop
in
lret
mov
mov
call
jp
mov
ret
or
movsb
cmp
mov
pop
push
outsl
stos
decb
addb
mov
test
int3
or
sub
push
push
xchg
call
cli
out
shl
jbe
dec
bound
cmc
jno
into
inc
cmp
push
sub
dec
in
xor
xchg
pusha
mov
jle
dec
cmc
xor
enter
aam
xor
fwait
xchg
loope
jne
pop
roll
movsl
subb
shrb
push
cmpsl
stos
jb
stos
dec
int
or
inc
sub
push
jmp
sub
movsb
fwait
fsubs
test
mov
bound
iret
enter
pop
call
xchg
inc
nop
je
add
mov
jmp
ss
cltd
inc
push
mov
test
fcomps
pop
cwtl
arpl
aaa
imul
lret
ljmp
xchg
daa
dec
sub
jno
sub
mov
out
cmpsb
jae
mov
xor
dec
test
and
icebp
arpl
scas
andl
inc
push
aas
stos
push
push
orl
cwtl
dec
fs
inc
cmpsl
xchg
test
push
dec
and
xor
in
dec
add
mov
adc
push
cwtl
sub
xchg
ret
ds
jge
add
mov
jp
testl
mov
dec
jecxz
cwtl
pop
scas
bound
inc
jg
cmp
mov
pop
repnz
push
mov
jnp
or
out
sub
xchg
insb
sub
ret
loop
lcall
cld
or
sbbb
int3
inc
pop
or
cs
jno
mov
adc
push
aam
xchg
cmp
mov
cli
clc
and
or
xlat
dec
adc
add
dec
popf
lods
ss
ja
mov
sub
mov
js
push
jl
push
mov
pop
outsb
enter
enter
div
or
mov
clc
leave
out
add
rorl
cmpl
loope
dec
inc
stos
popf
add
jle
lods
inc
add
adc
ljmp
je
jp
ffree
pop
adcl
jmp
adc
cwtl
sub
add
shll
mov
out
mov
mov
jecxz
ds
dec
push
ret
cmp
sub
fdivrs
in
jp
inc
movsb
dec
ljmp
call
inc
mov
cmp
out
mov
jae
mov
bound
outsb
add
dec
inc
xchg
fisubl
ja
xchg
pop
out
sbb
call
stc
add
add
test
sbb
incb
pushf
xor
dec
sub
stos
mov
stos
mov
cld
adc
or
mov
xchg
cmp
and
push
mov
out
pop
lcall
inc
push
pop
inc
inc
xchg
or
pop
or
mov
and
mov
mov
cli
loopne
ret
cs
mov
mov
cwtl
test
jl
inc
push
ret
out
imul
lea
xchg
xor
or
or
cs
cltd
push
rclb
xchg
mov
mov
ds
xchg
pop
sbb
or
add
dec
xor
loopne
or
cld
or
lds
es
lds
scas
dec
pop
lock
les
repnz
mov
ss
mov
hlt
xchg
scas
pusha
je
jmp
pop
inc
xor
aas
stc
movsb
je
sbb
lock
testb
enter
out
pop
mov
mov
andb
lcall
adc
cld
out
add
aas
inc
cmp
out
std
incl
add
mov
push
fs
lret
fnstsw
jno
xor
fs
nop
sub
mov
add
mov
les
xor
popw
jno
push
mov
adc
inc
test
add
clc
roll
sbb
cmpsl
pop
lock
loopne
jmp
fwait
ret
xlat
ret
stos
jo
and
fwait
clc
lret
lds
dec
or
cmp
rcrl
call
lock
fimuls
sbb
inc
sub
sbb
mov
call
outsb
movsb
or
mov
out
xor
pop
sbb
mov
test
in
sbb
andb
sbb
clc
jg
loop
lods
in
sub
in
sub
push
or
cwtl
dec
mov
out
clc
push
aam
and
push
mov
iret
jo
outsb
mov
testl
push
mov
sbb
push
xchg
push
rorl
xchg
xchg
adc
lods
or
aas
add
xchg
jl
mov
jmp
test
shll
push
dec
adcb
clc
fildl
shlb
add
roll
or
push
xor
push
pop
dec
add
data16
sub
lock
rolb
repnz
pushf
enter
fs
dec
outsl
inc
fmuls
mov
adc
push
into
mov
xchg
loope
imul
jl
cmpsl
inc
scas
mov
mov
and
stos
jg
test
sbb
and
pop
movsb
mov
out
lcall
repnz
jp
sub
dec
push
mov
cld
pop
sahf
imul
popa
push
mov
mov
fwait
push
mov
adc
xchg
and
stos
dec
rcrl
sahf
adc
ljmp
fstpl
andb
jl
sbb
xchg
call
cmp
sub
fistpll
negb
int
bound
cmpsl
inc
xor
mov
pop
insb
call
adc
adc
out
movl
push
mov
add
cld
test
push
into
push
cmc
mov
cmp
pop
add
lcall
ficoms
cmp
enter
cmc
mov
outsb
push
pop
xchg
adcl
add
push
movsl
rclb
or
clc
mov
test
test
mov
out
loop
daa
mov
enter
les
sbb
push
mov
fcomps
sbb
fcomps
rcr
dec
fsubrs
lcall
jmp
pop
add
imul
push
test
adcb
mov
mov
ljmp
lea
adc
mov
add
test
pop
xchg
inc
add
xor
mov
pushl
push
mov
fadd
and
jno
pop
pop
adc
cli
and
pop
enter
mov
inc
adc
push
loopne
cltd
inc
pushf
xor
int
or
ds
adc
call
rcrb
and
sahf
adc
push
pop
add
mov
popl
fisttpll
ss
rcr
popf
mov
ja
mov
xor
imull
mov
sub
adc
xor
adc
push
and
inc
lock
daa
mov
sub
xchg
clc
xchg
test
or
xchg
loopne
or
loopne
xchg
outsb
js
adc
sub
fcomip
lret
sub
movsb
ljmp
jg
lcall
xor
and
or
xor
es
loop
dec
jle
mov
add
es
stos
js
xorl
add
add
jle
std
ljmp
nop
cmp
ljmp
sub
repnz
scas
add
jecxz
ret
icebp
test
clc
inc
cmp
or
pop
dec
xor
inc
lods
xchg
inc
out
push
ficompl
add
dec
jecxz
fldenv
ret
add
xchg
inc
add
dec
or
jmp
pop
mov
imulb
cmp
sbb
pop
out
mov
pop
and
scas
pop
jne
jecxz
cld
stos
adc
sbb
es
cmc
inc
adc
adc
sbb
cmpsl
add
push
ret
mov
dec
mov
inc
lds
out
pop
je
int
and
sbbl
mov
or
push
dec
or
or
adc
test
out
shlb
dec
cmp
in
mov
sbbb
stos
test
mov
pusha
mov
call
daa
sbb
js
lock
incl
je
add
lea
pop
mov
jl
jb
cld
test
adc
wbinvd
fstpt
or
cmc
push
jecxz
mov
mov
cmp
xor
and
adcb
adc
or
fimull
jg
and
fimull
das
hlt
jg
addr16
popa
jmp
cli
jge
push
fs
movsb
sbb
fsubp
fcomps
mov
xor
call
cmpl
inc
repz
sbb
mov
mov
cmp
shrb
test
nop
inc
inc
arpl
sbb
test
in
imul
loop
mov
or
daa
rcll
adc
int3
sbbb
ss
out
fmuls
or
or
push
inc
lret
ss
pop
xor
arpl
push
pop
or
and
cmc
pop
gs
mov
movsb
rcrl
mov
sbb
mov
lds
jno
mov
int3
decl
jne
push
sarb
out
sub
cmp
idivl
pop
mov
mov
push
or
jb
sub
stos
sbb
jo
mov
push
sub
or
sub
cmp
setb
mov
mov
loopne
mov
mov
cmp
lds
shrb
mov
mov
and
ud0
dec
or
rolb
insl
pop
hlt
ret
add
fidivl
push
sub
cs
roll
jle
fwait
out
jg
add
es
out
sub
mov
adc
cwtl
data16
je
adc
sbb
inc
push
or
js
icebp
jb
push
pop
adc
mov
push
inc
cli
cmp
ficompl
cmp
dec
jno
jb
dec
cmp
test
outsl
cli
lods
xchg
inc
clc
jnp
sti
inc
pusha
cmp
imull
ljmp
xlat
shlb
int3
loopne
mov
je
push
lods
testb
int3
sub
movhps
cmp
push
mov
out
sbb
jo
inc
xchg
mov
mov
inc
mov
loope
add
or
jmp
mov
adc
shr
push
out
icebp
das
rorb
mov
orl
shrl
outsb
jl
mov
outsb
sub
shrl
cmpl
push
loope
pop
adc
jp
rorb
sbb
loope
ljmp
je
call
push
add
mov
cmp
das
jb
repnz
das
push
sub
icebp
mov
orb
pop
nop
andl
stc
bound
lcall
inc
into
mov
xchg
push
and
mov
outsb
loopne
ljmp
repnz
jp
lods
push
repnz
daa
fadd
fists
outsb
data16
jno
daa
int
movsb
jg
jl
or
loope
xchg
test
mov
mov
push
test
inc
lods
and
add
xor
loope
and
xor
pop
or
push
mov
sahf
mov
and
into
test
aaa
lods
movb
xchg
call
add
out
jg
test
jb
loop
jge
ret
roll
push
insb
mov
or
shrl
test
xor
mov
push
lock
and
mov
insb
into
je
aam
mov
add
jle
jp
pop
dec
subb
mov
insl
mov
test
fildl
mov
dec
adc
mov
jnp
adc
mov
pop
incl
test
fstpl
clc
imul
dec
pop
push
jnp,pn
nop
clc
jg
pop
or
mov
dec
mov
or
pushl
shl
or
notl
iret
mov
decb
sarb
and
jle
push
je
push
mov
xchg
xor
inc
cmpps
inc
arpl
addb
addr16
rcrb
pop
cmp
pop
stc
or
pushf
xchg
adc
pop
xchg
iret
sub
std
cmp
and
mov
add
mov
sbb
fidivs
test
or
repz
and
add
xchg
push
xor
cli
mov
push
subl
add
ret
ret
nop
clc
xorl
or
and
inc
mov
ljmp
stc
dec
imulb
outsb
mov
dec
sub
call
loopne
jmp
jne
push
les
imul
xor
mov
stos
scas
add
ret
scas
mov
jg
mov
or
les
arpl
fnstcw
add
fwait
xor
mov
aaa
cmp
add
shrl
shl
xor
xchg
or
ja
fisttpl
push
xchg
xchg
fidivrs
inc
and
xor
sub
clc
inc
ds
ret
cmp
pop
mov
mov
ljmp
sbb
enter
add
and
cmc
lock
adc
aam
enter
loop
leave
in
rcr
shlb
jl
out
pushf
fcmovbe
rclb
cmpsl
jg
adc
push
in
or
sbb
aad
in
lock
adc
lret
bound
mov
adc
adc
adc
or
xchg
out
clc
aaa
mov
inc
mov
sbb
pop
mov
xlat
xor
jmp
sub
and
pushf
pop
sbbb
and
push
sarb
ljmp
add
xor
in
pop
ret
push
in
sub
dec
test
out
aam
or
pop
cld
movsb
adc
mov
testb
mov
cmp
fs
dec
dec
jle
add
inc
pop
incl
jl
dec
sub
mov
cmpb
jno
sbb
mov
push
push
test
jne
rorb
adc
mov
and
xor
addr16
leave
addb
inc
adc
mov
push
out
aaa
je
movsb
addr16
fistpl
mov
lea
daa
mov
push
lods
les
std
push
sbb
jle
clc
mov
mov
inc
mov
and
jne
scas
cmp
mov
sub
insb
bound
out
ret
in
cs
xor
add
lcall
ss
and
test
cmpsl
ljmp
fcomip
out
or
adcl
cmp
roll
push
mov
mov
sub
push
push
push
fsubl
fadds
std
mov
mov
lret
jp
mov
shr
ret
rolb
add
add
inc
test
test
call
mov
fwait
dec
mov
adc
or
xchg
clc
pop
pop
lods
lods
mov
jnp
sub
adc
fisubrl
andb
jb
cmp
sahf
cmpsb
inc
sbb
lods
cmp
sub
push
adc
les
call
hlt
cltd
dec
lret
dec
and
or
cmp
cli
mov
adc
push
dec
aaa
push
aad
pop
in
sahf
cmp
sub
sub
pop
lods
ret
repnz
xor
xchg
dec
mov
cmpsl
or
shrb
fcomps
mov
jne
pop
lods
jl
orb
aaa
push
inc
pop
adcb
iret
sbb
mov
jge,pt
rol
cs
stos
pop
push
push
outsl
loopne
adc
or
jp
stos
pop
enter
add
cmpb
xchg
push
sti
out
test
fimull
sbb
out
insl
repnz
fidivrs
jl
dec
add
pushf
adc
pop
outsl
cmpsb
out
cmp
loope
adc
call
adc
mov
cmpsb
sub
jl
in
loop
jne
add
xor
sbb
dec
ss
aas
mov
push
inc
aam
pop
or
out
pop
cld
andl
xchg
cli
or
push
shl
lods
jecxz
add
scas
push
dec
insb
xor
adc
or
mov
iret
and
movb
lret
sub
sbb
aas
aam
arpl
add
and
lcall
and
lret
inc
dec
test
and
shl
add
adc
push
sbb
mov
jg
sub
roll
jp
fidivrs
in
es
in
xchg
fidivs
jle
dec
jo
inc
ds
push
cmp
ljmp
scas
subb
dec
aas
cld
sbb
clc
jns
pop
cmp
mov
adc
loope
aad
rcr
shlb
jne
sub
jbe
out
jp
sti
scas
lcall
mov
jle
sbb
rol
xor
sub
ret
outsl
dec
adc
rorb
jp
pop
or
sub
clc
cmc
mov
inc
sbb
enter
out
adc
or
aaa
fldl
push
push
pop
jmp
fidivs
jg
sub
cmp
mov
jge
test
xchg
sbb
mov
cs
and
and
jno
popa
fidivrl
mov
or
stos
loopne
stos
or
fs
sbb
std
pop
dec
cli
pop
mov
lea
xchg
mov
out
add
mov
mov
lret
std
mov
test
ljmp
push
cwtl
fwait
pop
rolb
arpl
in
sbb
pop
dec
in
aaa
push
pop
cld
sahf
inc
sub
cmp
or
jecxz
cmpsl
pop
notb
hlt
cwtl
push
and
mov
je
mov
fimuls
in
fwait
sbb
pop
push
idivb
push
jecxz
xorb
aad
mov
jae
adc
adc
imul
test
and
xorb
mov
jecxz
jg
add
lret
mov
pop
jmp
fsubl
std
pcmpeqw
sbb
dec
xor
cmpsb
inc
js
out
push
out
add
mov
add
or
add
jb
mov
test
fistpl
fs
inc
adc
fmuls
icebp
mov
xchg
ret
pushf
xorl
cmp
pop
call
mov
mov
mov
aas
sbb
cmc
scas
clc
jmp
add
inc
pop
adc
lret
add
loope
in
adc
iret
std
jg
fbstp
daa
xchg
mov
data16
loopne
out
test
enter
push
push
es
jecxz
insl
fistpll
stos
je
ja,pn
xchg
aas
push
mov
cmpsl
mov
dec
and
adc
push
xchg
or
mov
fdivr
or
mov
mov
out
inc
loopne
and
je,pn
ja
pop
and
adc
xchg
jmp
incl
cmp
sbb
or
cs
cmc
sub
adc
jnp
rorl
and
rcrb
xchg
xor
decl
xchg
call
xchg
adc
push
imull
sarl
xchg
xchg
sar
nop
jnp
push
mov
mov
test
sub
cmp
xor
in
xlat
cmp
mov
rolb
push
jb
mov
jg
mov
jl,pt
je
inc
add
outsb
dec
lock
mov
xchg
inc
out
cmp
pop
lods
pushf
mov
cmp
dec
inc
pusha
xor
adc
jle
cmp
shll
aad
cld
add
out
jp
lds
stos
or
push
je
sahf
mov
insl
aaa
cld
ljmp
call
mov
inc
sub
loopne
sub
jb
push
rcrb
ja
arpl
ja
int3
sarl
jg
sbb
test
add
push
scas
rorl
fidivrl
sbb
xchg
sub
dec
push
pop
mov
loop
hlt
jmp
and
test
sub
push
test
fs
mov
inc
push
out
or
outsl
mov
cwtl
add
in
nop
cmpsl
ss
mov
push
mov
jns
push
sbb
in
ret
mov
movsb
pop
add
cmpsl
lock
sub
inc
aam
mov
test
lock
ss
dec
or
lret
faddl
mov
jg
out
adc
cmpb
clc
stc
ret
lcall
add
mov
mov
xchg
out
adc
mov
outsl
push
jb
mov
and
rcll
daa
cmp
mov
mov
dec
add
pusha
repz
roll
xchg
ds
sbb
rolb
je
mov
lods
jl
lock
push
fsts
lods
mov
sbb
fistpll
adc
dec
jge
cwtl
jp
sub
mov
mov
and
xor
dec
mov
aad
jo
add
push
or
xchg
test
mov
leave
xor
jbe
fwait
push
inc
sahf
xchg
das
arpl
pop
mov
sub
mov
testl
jb
inc
pop
add
adc
dec
enter
and
xchg
inc
aas
imul
bound
pop
jle
cmp
mov
jmp
inc
filds
xor
mov
dec
pushl
jno
es
xchg
adc
add
mov
nop
gs
push
test
cltd
mov
test
les
loope
pop
lcall
bound
pop
adc
es
add
pop
aaa
std
adc
jle
sub
lea
hlt
adc
mov
jge
inc
and
clc
sbb
mov
inc
add
mov
adc
outsb
loopne
xchg
testl
mov
inc
fsubrp
cmpsb
push
push
arpl
mov
mov
std
mov
inc
push
lcall
dec
lcall
ss
mov
jge
fisubs
iret
add
movsb
add
cmp
mov
shlb
mov
jg
inc
xchg
sub
jmp
popf
adc
pusha
popa
sub
addb
rorb
and
mov
xor
mov
mov
out
mov
shrl
sub
pop
pop
lock
pop
mov
out
insb
mov
push
cmp
sbb
loop
xchg
test
push
in
jge
jo
test
jge
mov
pushl
aad
inc
jecxz
xor
jmp
and
push
rolb
mov
lret
std
add
push
sub
xchg
fistpll
cwtl
in
loopne
sub
mov
xchg
adc
mov
shl
dec
push
pop
pop
adcl
std
add
add
stc
xchg
incl
inc
data16
scas
int3
add
ds
test
mov
inc
mov
cld
dec
data16
aad
fwait
sub
xor
cmp
cmp
adc
sub
aad
sbb
loop
cwtl
adc
aas
dec
xchg
push
scas
jp
mov
dec
pusha
adc
xchg
insb
dec
inc
mov
inc
mov
mov
test
jge
pusha
psllw
adc
xlat
stos
cltd
popa
movsb
rep
insl
in
mov
adc
scas
cli
ljmp
aas
lds
ja
lea
loope
push
xchg
xlat
pop
outsl
incl
add
push
lock
adc
ljmp
js
cmp
in
jp
jo
push
inc
adc
test
jbe
test
push
lret
cld
incl
jle
push
shl
add
aad
int
add
lock
jns
es
mov
mov
popf
aaa
jecxz
pop
cs
push
test
push
mov
aad
fisttps
mov
push
adc
dec
faddp
add
ds
sbb
sbb
mov
and
outsl
push
in
mov
and
idiv
jg
aas
sahf
lahf
out
loopne
outsb
lods
mov
xor
or
outsb
fdiv
jle
cmpsb
mov
mov
mov
xchg
push
xchg
fisttpll
and
in
frstor
into
mov
fisubrl
jbe
xor
pop
jge
ja
icebp
xorb
mov
scas
clc
xlat
pop
add
dec
nop
rcrl
fimuls
inc
shl
mov
call
adc
popf
ss
or
fisttps
lock
xor
nop
and
das
nop
adc
add
mov
in
jl
ret
jecxz
rorb
notb
add
out
aam
and
sub
xor
mov
xchg
sub
cmp
fwait
xchg
xchg
or
push
jmp
mov
add
adc
aaa
or
mov
dec
jecxz
sbbl
and
xorb
sarb
cmp
cltd
mov
popa
sti
test
andnps
push
adc
add
sahf
pop
decl
js
inc
sub
xchg
jo
mov
push
mov
push
or
sarb
icebp
add
icebp
clc
add
lret
mov
sub
ficoml
popa
cmpsb
bound
std
outsl
cmpsl
push
aaa
cld
hlt
push
jl,pt
insb
push
pop
inc
and
adcb
data16
mov
cmp
pop
jno
inc
jl
popa
add
mov
shlb
mov
or
or
nop
mov
sbb
jge
xor
jb
cmpsb
mov
inc
adc
mov
add
insl
fmull
lods
ret
imul
scas
popa
mov
movsb
adc
adc
loopne
sbb
xchg
sbb
hlt
cmpsb
cmpsb
cmp
push
jp
int3
sub
sub
pop
loopne
loopne
jo
jle
sbb
sbb
mov
sbb
out
xchg
lcallw
mov
test
lds
mov
cld
xchg
bound
sbb
inc
mov
int3
xor
cmp
scas
mov
jmp
push
test
clc
lcall
adc
pop
cwtl
cltd
jnp
pop
jb
xor
mov
add
in
sub
jb
loop
aad
xor
jae
test
sbb
pushf
inc
hlt
fsubrs
icebp
push
loope
ret
leave
mov
fucomp
es
add
cmpsl
mov
fs
out
inc
add
cld
cmp
ds
pop
and
mov
dec
dec
cmpsl
dec
loopne
mov
stos
jecxz
call
adc
pop
pop
cwtl
or
cli
xchg
fisubrs
push
jg
mov
dec
test
fdivs
std
push
jmp
ja
jno
sub
popf
and
sbb
cmpsl
out
inc
into
mov
rcr
push
lret
or
lock
push
insl
and
sbb
and
lcall
sbb
icebp
or
test
mov
dec
dec
jecxz
mov
mov
icebp
decl
scas
or
stos
jo
sbb
fbld
xor
cli
lock
mov
push
and
aam
or
cmp
popa
mov
mov
inc
mov
cmpl
cmc
filds
sti
pop
das
scas
jno
push
push
jnp
aas
inc
pop
je
lret
fists
push
outsl
xlat
pop
lock
lock
pusha
enter
rorl
mov
and
ret
loopne
inc
movsl
push
push
jb
std
or
push
ds
cltd
ljmp
imul
sub
mov
xchg
mov
mov
push
push
xor
add
push
add
xor
mov
mov
jb
mov
stos
call
out
add
icebp
xchg
sbb
loope
add
xor
jecxz
mov
loope
aam
testb
stc
popa
lcall
jbe
dec
fisubs
clc
call
inc
fwait
pop
xchg
dec
insb
push
aas
and
mov
mov
jbe
mov
cmp
xor
pop
cmp
sbb
cltd
adc
pop
push
aaa
jl
ja
xor
mov
enter
xchg
loopne
cmp
call
add
add
lds
cmpsb
cmp
adc
or
lcall
ret
or
pop
ret
adcl
lea
mov
rclb
cld
idivb
nopl
stos
inc
cmp
adc
mov
fisubl
dec
jne
je
or
incl
add
mov
out
jmp
pop
inc
dec
sbbl
loopne
add
mov
jp
push
mov
push
stos
push
push
js
fs
enter
jo
mov
les
in
pop
cmpsl
call
inc
and
std
xor
int3
adc
adc
or
xchg
and
xlat
pop
add
in
repz
sti
daa
push
js
pusha
jae
lods
cmp
shrb
push
jl
add
clc
test
mov
push
lods
insl
jecxz
clc
xchg
sub
aas
adc
nopl
cmp
test
into
test
stos
mov
push
and
movsl
in
push
xchg
mov
scas
push
add
xchg
insb
rcrb
mov
push
roll
inc
push
loopne
dec
lods
mov
lds
scas
js
fiadds
mov
mov
sub
enter
test
fucomp
add
mov
cmc
sbb
dec
adc
cld
int
repnz
out
daa
out
push
fdivrp
or
es
sbb
shrl
and
add
mov
ss
pop
sub
and
jp
inc
lock
div
mov
call
out
push
lret
adc
mov
imul
mov
mov
cmp
and
sbb
fs
es
sub
pop
pop
jae
jg
leave
pop
test
icebp
or
jp
into
aaa
push
push
xlat
sbb
lods
dec
mov
mov
js
dec
mov
ljmp
push
in
jne
mov
or
jge
xor
pushf
push
lock
or
popf
sub
enter
cmc
dec
jle
int
stos
cmp
adc
xor
andb
in
popf
mov
dec
jne
jbe
incb
mov
add
outsb
mov
cmp
out
cmpsb
push
mov
dec
insb
idiv
cmp
add
add
xor
inc
je
xchg
cmpl
insb
in
push
sbb
mov
sbb
loopne
call
xor
inc
cmp
lods
aam
mov
inc
xor
cmp
outsb
std
and
nop
xor
out
sti
jp
and
push
clc
xchg
inc
push
lods
inc
adc
in
sub
and
sub
jmp
mov
pop
pminsw
mov
clc
adcb
cmpsl
jp
cltd
mov
mov
push
lods
test
mov
lock
out
pusha
lea
and
aam
movsl
add
arpl
daa
in
and
jmp
inc
pusha
sbbb
js
stos
push
pop
push
mov
xchg
inc
clc
fwait
and
mov
mov
shrl
ss
or
and
push
outsl
pop
push
in
out
add
out
call
xchg
addl
mov
cli
pop
rclb
lds
repz
and
hlt
sarl
sub
fsubl
fistpll
les
je
movsl
ljmp
roll
cwtl
mov
xor
outsb
inc
jo
shrb
inc
mov
add
push
out
in
cmp
mov
ljmp
clc
in
and
ja
mov
add
adc
push
imul
rcll
decl
sti
test
sbb
cmpl
fstpt
push
js
stc
loopne
push
xor
mov
aad
sbb
int
addr16
adc
adc
mov
test
sub
int3
pop
sub
adc
jmp
add
clc
push
push
jecxz
add
mov
test
out
enter
pop
mov
fimull
push
cld
mov
sysret
pop
inc
pop
fistpl
adc
push
pop
adc
pop
add
inc
roll
jle
lds
adcl
js
cwtl
mov
sbbb
clc
clc
jl
lock
movl
dec
insb
outsb
adc
std
xlat
cmpsl
pop
inc
nop
pop
and
in
push
mov
cs
aas
popa
and
push
sub
dec
add
inc
pop
mov
call
mov
ror
jo
sbb
mov
es
enter
jno
cmc
cs
xor
dec
mov
dec
mov
in
sti
sub
clc
lods
fdivs
pop
mov
shll
cmp
xchg
ret
hlt
inc
dec
cmp
inc
or
aam
dec
sbb
inc
and
push
clc
js
fnsave
adc
sbb
popf
jno
push
bnd
aad
pop
add
sub
out
call
les
push
test
loopne
cld
xor
lcall
std
das
into
adc
or
adc
jecxz
pop
bound
xchg
cmp
js,pn
sbb
pop
xchg
mov
loop
repz
inc
xorl
and
mov
push
stos
or
fisubs
mov
or
pop
add
mov
mov
lcall
rorl
xlat
xor
jl
pusha
pushl
adc
sub
xchg
stc
loope
xchg
lea
aaa
pop
mov
mov
push
stos
and
jle
repz
adc
les
sbb
sbb
and
mov
filds
rcl
int3
pop
adc
fdivl
cmp
jg
dec
insl
bound
cmp
xor
mov
jp
or
rcl
loopne
sbb
add
filds
or
gs
ss
lcall
jbe
mov
and
xchg
sub
fs
mov
lret
sbb
es
jecxz
nop
ljmp
orl
lock
adc
jno
repz
mov
add
mov
jp
and
mov
nop
add
rol
xchg
push
or
lock
sarb
adc
stos
xlat
jbe
jle
pop
xor
xchg
cs
add
fnstcw
jl
push
pop
popa
adc
fisttpl
std
fst
pop
inc
and
inc
pop
xchg
push
push
incb
push
inc
fs
hlt
mov
int3
cmpsb
jp,pt
mov
inc
out
mov
js
mov
mov
lock
sbb
insb
mov
lods
pop
shr
fisubrs
fidivl
and
repz
andb
push
pop
push
out
or
push
int
mov
and
and
ret
test
loopne
out
std
mov
mov
aas
lock
jle
mov
push
movsb
fs
hlt
dec
pusha
cmp
and
jg
pop
sbb
and
ret
lock
xchg
and
cmp
test
inc
hlt
repnz
xchg
fidivrl
lock
jns
add
aaa
mov
stos
rcl
imul
sub
popf
add
xor
push
inc
lret
xor
std
dec
adc
gs
mov
dec
fdivl
test
mov
xchg
loopne
jae
clc
test
out
xor
inc
xor
scas
push
outsb
jne
mov
pop
dec
fidivrl
les
jge
ljmp
pop
cmp
das
dec
sub
jp
int3
ds
sahf
leave
inc
clc
adc
scas
mov
sub
les
std
int3
cwtl
mov
add
xchg
cmp
aas
sbb
cli
ficoml
mov
jmp
jl
js
movsb
sbb
cli
ljmp
xlat
fmuls
cli
push
pop
repz
aaa
push
inc
pop
repnz
push
adc
and
pop
pop
inc
in
pop
hlt
inc
je
loopne
clc
cmpsl
jo
push
stos
jns
cmpsb
lds
das
inc
ret
pop
add
cmpsb
repnz
loopne
jno
sub
and
jp
insb
add
sarl
pop
cli
stos
data16
fbld
jo
add
in
push
popl
enter
lods
xorl
dec
xor
cmp
icebp
aam
lods
and
ljmp
and
mov
jmp
fcoml
cmp
mov
fmuls
cmpsb
dec
mov
in
hlt
incl
mov
stos
pop
inc
sub
cmp
and
inc
idiv
xchg
ret
or
andb
rolb
pusha
push
scas
sub
dec
cmp
pop
sbb
loopne
inc
jbe
call
dec
jne
sbb
sar
les
jne
aam
dec
call
xchg
test
push
xchg
hlt
dec
enter
ds
call
lods
cld
or
mov
push
xor
loop
arpl
jae
hlt
lcall
push
gs
js
add
push
jno
jmp
loope
inc
ret
adc
xchg
cmp
ds
push
and
jg
inc
pop
sahf
movsl
test
inc
xor
mov
into
add
lods
push
loop
nop
cmpb
ljmp
push
iret
and
cmp
pop
fisubl
push
and
jle
rolb
inc
outsl
pop
sbb
mov
xor
jb
jge
mov
mov
scas
pop
lock
dec
mov
repnz
mov
xchg
std
arpl
hlt
jge
lock
inc
dec
xor
jle
push
fidivrs
fnstcw
xor
popl
adc
cmp
add
cmp
mov
mov
or
xlat
out
pop
pusha
mul
inc
lods
int3
cs
add
mov
xor
sub
and
dec
loopne
and
mov
sub
or
push
cltd
js
mov
sub
into
mov
ja
xchg
ds
sahf
xchg
sahf
xor
pop
jmp
loopne
push
int
in
push
push
sbb
or
std
fs
movsb
xor
cmp
lea
dec
outsl
jne
ret
cmp
xor
mov
divb
jg
ljmp
pop
adcl
cwtl
push
shlb
call
mov
scas
mov
adc
xor
div
jmp
rorl
mov
lcall
dec
adc
mov
inc
out
pushf
out
popf
stos
dec
out
mov
or
dec
jl
aas
pop
xchg
mov
cmp
cmp
dec
enter
cli
icebp
in
fbld
push
js
sarb
enter
jp
inc
stc
or
js
jecxz
ret
push
add
xchg
xor
pop
xchg
sub
nop
or
mov
inc
cltd
mov
adc
mov
push
ret
sbb
gs
jno
fnsave
cld
fdivrs
stos
mov
test
dec
bound
push
and
pushf
or
js
lcall
dec
push
cmp
push
mov
mov
mov
fisttpll
xor
sub
je
lcall
adc
daa
xor
xchg
push
xchg
jmp
push
arpl
dec
data16
lods
or
add
mov
inc
xor
push
pop
cmc
jp
loopne
test
fsubs
jmp
push
lock
mov
shlb
decl
call
aaa
loop
sbb
mov
int3
add
xor
mov
jno
and
cwtl
pop
mov
fs
cmp
cmp
stc
fwait
inc
clc
pop
adc
sbb
data16
shrb
xor
bnd
mov
push
pop
push
or
push
mov
and
inc
or
outsl
inc
repnz
popa
add
adc
pop
dec
jmp
pop
mov
sbb
push
dec
jecxz
jge
repnz
adc
adc
cmp
outsl
mov
and
xchg
std
loopne
or
out
lret
mov
jno
popa
adc
out
lcall
call
mov
repnz
or
mov
adc
xchg
xor
movsb
xor
mov
divb
push
pop
fdivr
aas
and
test
je
inc
adc
ret
fsubs
mov
popf
pop
sub
pop
outsb
inc
cltd
incb
pop
call
ja
je
out
es
inc
das
jecxz
add
cmp
fldt
cmp
jp
cli
dec
mov
mov
xchg
rolb
and
xchg
pop
fs
imul
add
fdivrs
iret
add
ljmp
clc
ret
lret
jmp
jp
fisubrs
push
inc
out
adc
mov
jle
enter
int3
lahf
dec
dec
mov
sub
call
clc
dec
fadds
dec
loope
jmp
sub
and
xor
or
adcb
mov
in
ja
and
hlt
icebp
loop
cld
stos
sub
stos
mov
xor
shll
das
sub
mov
adc
movsb
mov
pop
std
lcall
ljmp
decl
loope
clc
or
xchg
pop
and
lret
popa
jmp
pop
cwtl
jmp
xchg
lahf
add
sbb
cmpsl
scas
je
add
pushf
fwait
ljmp
shl
push
enter
roll
mov
or
adc
or
inc
ds
nop
inc
dec
or
xlat
fisubrs
loope
pop
fsubrl
loopne
xlat
xchg
pop
sbb
incl
mov
hlt
inc
jns
pop
out
jo
xchg
icebp
imul
outsb
mov
gs
or
add
mov
int
add
jp
lods
or
out
ljmp
lret
insl
add
sbb
int3
mov
sbb
cld
inc
push
dec
sbb
inc
ljmp
cld
or
cmpl
lods
xor
mov
adc
leave
lods
inc
ljmp
fwait
outsb
mov
pop
je
inc
imul
and
add
sbb
js
bound
mov
push
xor
inc
std
jmp
pop
inc
jp
add
movsl
push
mov
je
adc
add
mov
test
scas
and
fldl
mov
cmp
mov
sub
pop
push
pop
shrb
std
inc
jl
cli
sbbl
stos
jo
ret
addb
cmp
inc
dec
push
in
call
das
test
pusha
inc
cmp
adc
out
nop
out
xor
add
fwait
ss
scas
dec
xchg
cmp
mov
sub
orb
ss
fildll
cmp
and
loope
cs
mov
loop
lcall
lret
pop
add
add
sahf
and
or
mov
aas
sub
lcall
xchg
adc
xchg
scas
fists
loop
stos
adc
add
daa
dec
sbb
fidivl
and
pushf
and
out
xchg
outsb
adcb
push
dec
fimuls
cwtl
pop
add
mov
sarl
jecxz
or
xor
shl
sbb
int3
pop
out
fldl
mov
lcall
and
sti
or
adc
mov
xor
cmc
push
pusha
rcll
cmp
sbb
lcall
cmc
push
lret
leave
out
dec
incb
sbb
cmp
into
call
into
rolb
and
out
aam
outsl
xor
cld
jmp
mov
or
pop
cmp
sbb
pop
mov
push
aaa
std
mov
loope
sub
jbe
test
jg
scas
dec
sbb
mov
add
hlt
mov
dec
jb
and
mov
mov
fwait
push
je
mov
clc
sub
lds
jno
ss
fimull
jmp
pop
hlt
or
sbb
mov
test
mov
loope
mov
mov
sbb
movsb
jecxz
xchg
out
mov
hlt
cmp
in
xor
mov
js
push
aas
dec
ja,pt
repnz
pop
push
bound
and
add
cmp
fists
das
call
add
and
push
imul
in
sbbb
je
in
inc
lret
jg
subb
pushl
repz
xchg
mov
nop
ret
lock
push
sbb
rolb
hlt
in
pop
and
aaa
sub
enter
xchg
cld
cmpsb
popf
jmp
out
scas
inc
pop
rorl
jne
inc
enter
lds
hlt
sbb
fisubl
add
push
sbb
adc
jp
fwait
outsl
test
int
inc
push
orl
xchg
int
sbb
aas
mov
js
outsl
aas
repnz
dec
icebp
push
scas
pop
or
push
adc
xchg
push
xchg
dec
xchg
cmpl
jno
outsl
nop
lock
inc
cmc
outsb
jecxz
enter
xchg
lock
mov
in
sbb
stc
or
outsb
icebp
xchg
xchg
sahf
xor
mov
scas
mov
xchg
loope
adc
push
push
fcomp
aam
daa
jbe
sti
inc
pushl
repnz
sbb
das
dec
cmp
sbb
mov
shrl
shrb
int
lret
or
outsb
fs
inc
cmp
jle
fcmovnu
mov
stos
lcall
and
push
cld
or
add
jbe
mov
and
es
pop
enter
add
dec
add
jb
pop
xchg
stos
sahf
pop
or
or
in
jle
sti
leave
and
test
or
jmp
orb
xchg
nop
test
jp
subl
adc
aad
daa
fidivrl
mov
sbb
sti
hlt
cmc
mov
in
lcall
shlb
inc
add
cld
mov
adc
mov
add
lcall
cmp
pop
xor
jb
pushl
inc
pushl
inc
mov
loop
push
pop
ss
lret
andl
sub
jmp
jecxz
push
push
imul
lods
sahf
push
push
dec
push
ja
loopne
mov
ret
xchg
mov
fcomi
push
lds
adc
adc
sub
call
sub
fisubl
insl
jnp
popa
fdivs
mov
adc
lcall
rcrl
aam
push
es
shlb
mov
cmp
imul
loop
outsb
dec
ret
sub
or
push
mov
mov
shrb
out
jo
push
mov
mov
pop
xor
push
pop
idiv
pop
rorb
mov
or
das
add
jecxz
ds
inc
cmp
mov
or
mov
mov
xor
call
cmp
pop
xchg
in
sub
inc
lods
push
lcall
push
adc
fidivl
mov
inc
ljmp
mov
sarb
sub
push
jmp
mov
sbb
mov
mov
cmpsl
mov
call
test
pmaxub
aas
js
mov
push
jbe
jl
mov
jmp
jae
jbe
out
lock
out
ficoml
mov
sub
add
sub
xchg
lock
dec
loopne
xchg
incb
cmp
push
ror
and
sahf
idivb
and
mov
add
cld
adc
adc
fdivrp
dec
or
mov
pusha
inc
jg
loopne
jp
and
push
rcrl
aas
adc
jle
pushf
xchg
mov
jle
mov
sahf
xchg
lods
fisubrl
std
leave
test
pop
mull
je
or
outsl
mov
jecxz
dec
int3
jl
lahf
sbb
stos
mov
adc
ret
sbb
jno
or
sub
sarl
inc
sbb
dec
jbe
fisubrs
cs
sub
add
push
je
je
bound
push
jo
call
push
aas
fcmovb
aaa
aas
outsl
lea
cli
inc
fcomip
jns
pop
dec
ljmp
das
adcl
orb
xor
push
jg
movsl
sbb
sub
sbb
hlt
call
mov
flds
xchg
dec
xor
out
leave
inc
lea
push
and
icebp
in
js
mov
pop
sti
inc
ret
xchg
clc
mov
mov
mov
decb
sbb
call
pop
call
popa
fnop
adc
std
pushl
fisubl
xchg
adc
insb
inc
decl
xor
iret
push
sub
inc
shlb
jo
inc
mov
adc
pop
mov
or
mov
into
xchg
pusha
hlt
push
in
mov
inc
sub
cmp
sub
mov
push
lods
in
sbb
mov
push
nop
fmul
je
push
into
movsb
cmp
push
das
jecxz
andb
sbbl
test
rcll
loop
inc
sub
push
dec
movsb
sub
int3
jo
mov
hlt
add
rcll
cmpsl
adc
roll
push
cmp
lret
std
cli
push
adc
mov
arpl
and
add
or
jmp
mov
jnp
mov
loop
push
adc
adc
sbb
inc
pop
cltd
pop
shrl
aam
jp
and
add
fisubrl
mov
pop
lea
cmpsb
aad
cmc
lahf
or
loop
fisubrs
or
xchg
stos
js
aas
mov
xchg
cmp
loope
sub
jo
sti
orb
jbe
mov
jnp
mov
or
loop
mov
jge
loope
mov
push
dec
cmp
and
fistps
mov
mov
rcr
js
out
loop
inc
inc
mov
les
adc
scas
mov
test
aam
nop
shl
out
pop
sahf
cmp
add
push
add
fcomip
xor
adc
mov
imul
cwtl
imul
mov
mov
cmp
ss
push
mov
sbb
push
enter
pop
cwtl
sbb
mov
out
or
sbb
sarb
jge
mov
and
cmp
cmp
dec
clc
xchg
loopne
pusha
mov
nop
test
add
sbb
rolb
dec
mov
mov
pop
mov
cmp
fwait
incb
mov
push
mov
pop
aad
dec
cmp
cmc
add
jmp
or
inc
xchg
mov
iret
xchg
imul
lods
cmp
or
jnp
sbb
mov
out
call
sbb
lcall
sbb
inc
inc
pop
fbstp
clc
sub
pop
dec
sbb
push
mov
jg
dec
ja
daa
inc
dec
sbb
dec
orb
mov
daa
jno
xor
stc
dec
pop
lock
and
decl
sub
or
xor
mov
decl
xchg
mov
add
stc
andb
fidivl
incl
int3
sbb
xchg
pop
jo
sub
and
dec
loope
jnp
mov
xor
mov
xor
push
xchg
add
xchg
adc
comiss
xchg
fistl
jmp
cwtl
cli
xchg
cli
ja
call
pop
xor
jle
lcall
mov
adc
mov
add
sbb
xchg
pop
pop
sbb
cmp
sbb
repnz
dec
or
aad
push
inc
sub
notb
adc
cmpsb
jnp
pop
jge
jge
scas
sbbb
add
mov
ljmp
adc
data16
jecxz
or
pop
jbe
loop
lcall
pop
inc
test
out
and
into
out
scas
pop
hlt
jns
testb
sbb
repnz
clc
sbb
sti
mov
jbe
sbb
add
sub
mov
xchg
add
leave
cmp
sbbb
adc
sahf
loop
hlt
xchg
xchg
mov
xchg
jle
mov
xchg
or
mov
call
insb
cmpsl
lock
mov
push
sbb
repz
inc
imul
data16
in
cwtl
jle
hlt
dec
test
and
inc
shrl
pop
fidivrl
push
ljmp
pop
cmp
mov
lret
lds
stos
sbb
dec
sbb
orb
push
mov
push
sbb
lcall
mov
jecxz
cwtl
lcall
sub
pminub
inc
and
ret
in
jge
xchg
inc
dec
mov
popf
ficomps
and
out
rclb
push
scas
andb
cmp
in
inc
cmc
or
ss
xor
cmp
mov
mov
icebp
je
pop
and
jmp
xchg
je
inc
rorb
pop
push
cmc
pushl
dec
push
mov
fcomp
mov
lea
imul
or
cli
dec
sbb
jecxz
cmp
mov
cmp
xor
sbb
sbb
lods
mov
cli
add
mov
icebp
pushl
cwtl
movsb
xor
ljmp
stos
pop
hlt
add
fs
shlb
mov
cs
mov
adc
data16
ja
int3
add
jg
and
ret
mov
inc
test
insb
xchg
out
in
es
xchg
leave
test
lock
xlat
mov
scas
or
ja
js
xchg
pop
xchg
xchg
jo
cmc
sbb
loop
sbb
push
jbe
jge
jo
loop
add
xchg
out
and
push
xchg
and
adc
mov
push
jg
inc
lret
fnstenv
cmc
fwait
or
sbb
push
mov
pusha
and
cmp
adc
cs
shlb
pop
cmpsb
dec
cmp
xchg
dec
adc
fwait
out
mov
sarb
aad
inc
inc
and
xchg
cmp
and
add
lds
cmp
ja
dec
jecxz
or
dec
leave
dec
push
adc
es
or
add
sub
enter
add
sbb
push
inc
shlb
inc
mov
aad
dec
push
mov
nop
hlt
in
pusha
cmp
jns
pop
push
cs
pop
push
imul
movsl
ss
idiv
sbb
jg
add
test
cmpsb
add
adc
mov
pop
xor
pop
mov
add
mov
mov
push
repz
dec
iret
inc
pop
mov
or
sub
cwtl
jo
or
sbb
push
xchg
test
fimuls
mov
sub
jle
mov
cmpsl
add
dec
jne
icebp
lret
lcall
and
dec
mov
shr
jg
test
aad
pop
ds
idivb
dec
pop
mov
fidivl
and
adc
dec
push
lock
pop
and
fdivrp
cmp
adc
lret
aas
sbb
mov
jbe
mov
std
mov
add
sub
mov
jp
inc
cmp
or
xchg
jecxz
xor
and
mov
xchg
int3
mov
into
add
out
rcrb
push
dec
mov
scas
add
pop
jne
mov
xorl
loopne
test
mov
dec
mov
std
popf
rcr
mov
sbb
cld
scas
call
inc
fistl
push
lods
adcl
cmp
push
cld
mov
mov
inc
imul
scas
dec
popa
popa
xchg
int3
xor
or
mov
mov
push
scas
inc
cmp
or
jle
jb
cmp
cld
fists
dec
push
outsb
and
mov
dec
jbe
inc
outsb
sti
cmp
repz
jecxz
mov
leave
cmp
je
jo
push
lret
xchg
and
rol
push
push
loopne
cmp
lcall
insl
pop
sbb
sbb
sbbl
loopne
add
jne
push
jmp
push
pop
mov
mov
pop
gs
cmc
fdivr
xchg
sbb
enter
sub
aaa
int3
aas
and
jne
cli
aam
cmpsl
shll
dec
cmp
fld
pusha
imul
cmc
pop
mov
or
enter
or
fimuls
daa
cmp
jg
sbb
cld
push
mov
scas
xor
je
push
and
movsb
daa
in
call
scas
mov
xlat
add
clc
add
aaa
sarb
shlb
xor
jmp
xor
inc
divb
flds
fdivs
pop
mov
xchg
add
mov
decl
imul
imul
add
sbb
xchg
xor
mov
push
push
cmpsl
data16
inc
push
add
nop
sub
unpckhps
inc
rcll
and
or
pushf
decl
fbstp
or
pop
ljmp
push
fbld
xchg
cwtl
das
ja
mov
sub
nop
adc
and
outsl
pop
icebp
insb
je
lds
rorb
dec
enter
sar
jbe
loopne
dec
fs
lret
jns
dec
xchg
add
ljmp
int3
dec
pushf
sub
or
cwtl
add
test
fiadds
fnstcw
aas
mov
adc
cmp
outsb
adc
mov
add
cmpsl
js
jno,pt
cmc
lods
das
ret
push
mov
mov
mov
pop
mov
pop
mov
inc
jne
test
xor
repz
cli
stos
inc
pop
rorb
int3
add
call
add
jno
pusha
xchg
pusha
fisttpll
cmp
std
pop
cmpsb
rorb
leave
mov
pop
aaa
push
ljmp
pop
dec
mov
insb
clc
mov
mov
jle
cmp
push
filds
jp
xor
push
unpcklps
in
mov
add
test
sbb
push
icebp
sbbb
jns
push
lcall
mov
xor
sarl
sbb
cltd
test
test
dec
decl
aaa
lock
aad
cwtl
jns
shrb
aam
ljmp
push
add
inc
cmp
cld
jmp
push
repz
mov
add
push
insb
pop
hlt
sbb
xchg
and
mov
test
test
sbb
jo
xchg
stos
shlb
lret
loope
icebp
cmp
arpl
mov
cmp
and
cmp
mov
imul
call
ret
insb
mov
pop
stc
outsb
and
jecxz
dec
hlt
and
inc
call
and
enter
adc
bound
add
je
daa
add
pop
and
inc
mov
mov
adc
hlt
daa
push
fiadds
jbe
pop
out
inc
mov
mov
outsb
loope
clc
push
stos
lock
and
cmp
push
dec
jecxz
stc
or
loop
test
push
jp
xchg
dec
push
dec
ret
sub
cmc
repnz
fnsave
mov
sub
es
or
movsb
jp
cld
insl
ds
cmpsb
rorb
mov
aad
in
sahf
jmp
je
inc
or
aaa
inc
test
fimuls
add
pop
in
dec
push
mov
dec
orl
mov
push
movsl
ror
subl
xchg
push
pop
daa
lods
fwait
xchg
mov
bnd
push
sbb
rcl
add
fmull
pop
lock
cmp
push
mov
or
leave
hlt
mov
xor
stc
fisubs
push
add
sub
xor
inc
pop
inc
mov
inc
push
add
add
lcall
xor
xor
icebp
fdivrp
movsb
xchg
mov
xor
sub
loop
dec
or
add
adc
cld
and
mov
dec
ret
les
decb
fwait
rcrb
pop
icebp
pushl
mov
jns
fldenv
and
hlt
stos
or
ljmp
push
rclb
dec
cli
aas
enter
stos
xor
dec
xor
lods
push
mov
add
sub
aas
lcall
cli
fwait
cmpl
and
xor
adc
add
pushl
shrd
shll
sbb
test
inc
or
and
sbb
jbe
push
adc
dec
xchg
xchg
enter
mov
icebp
popf
dec
add
call
jne
jle
ljmp
sbb
pop
lcall
xor
xchg
inc
or
push
pushf
ss
xlat
pop
sti
inc
or
push
xchg
push
in
mov
mov
or
pop
movsl
ss
rsm
lret
or
call
inc
or
stos
stos
mov
aam
stos
inc
and
xor
or
in
bound
enter
and
cmpsb
outsl
mov
push
gs
sub
ss
adc
loope
stc
int3
ljmp
iret
ret
cmpsl
imulb
call
push
and
or
loop
cmp
aam
push
adc
out
add
add
jb
add
inc
xor
xor
stos
mov
lcall
repz
subb
push
adc
sbb
add
fdivr
mov
div
das
inc
or
xor
sarl
jg
ja
and
add
sbb
and
pop
scas
push
add
pop
add
pop
and
sub
adc
nop
les
das
clc
les
mov
lcall
sub
sahf
xchg
cmp
and
xchg
mov
inc
jae
scas
les
add
insb
adc
adc
inc
loope
sbb
repnz
or
cli
lock
xor
aad
adc
pop
insl
jp
or
sbb
imul
xchg
xchg
mov
mov
out
fisubs
enter
insb
out
cwtl
fwait
pop
ss
pop
movsl
sbb
bound
mov
inc
jg
xor
adc
cmpb
lods
lods
xor
mov
inc
cmp
mov
dec
and
mov
ficompl
adc
push
push
add
cmp
mov
sarb
xchg
xchg
inc
movsb
push
or
mov
mov
add
or
jg
pusha
inc
addr16
mov
andb
sbb
cli
movsl
cmp
jecxz
js
pop
dec
push
icebp
cmpsl
xchg
ljmp
mov
dec
dec
pop
js
fsubrp
das
pop
ret
mov
dec
sub
mov
clc
push
cmpsb
ret
sti
sub
pop
or
pusha
or
incl
cmp
icebp
xchg
mov
fidivs
inc
dec
xchg
or
dec
repz
xor
mov
movsl
sbb
sbb
inc
push
mov
adc
push
pop
mov
jo
hlt
jne
push
stos
dec
inc
fisubs
ss
mov
jmp
icebp
lods
call
pop
jl
in
bound
add
sbb
movsb
outsl
fmuls
mov
mov
jb
leave
sbb
add
add
pushfw
inc
mov
pandn
movsb
jno
and
add
ret
jne
add
das
mov
mov
dec
shrb
dec
out
pusha
sub
rclb
dec
inc
jge
aas
pop
or
push
cld
and
into
int3
xor
fimull
or
add
and
xchg
add
and
adc
mov
jle
add
cwtl
mov
adc
inc
dec
sub
mov
out
rolb
fsub
shll
sbb
jle
jp
loop
mov
lock
dec
add
inc
lods
mov
enter
fistpll
xchg
push
std
inc
stc
and
xchg
mov
or
xor
xorb
fisubl
je
addl
jl
cmp
mov
adc
xchg
cltd
and
test
je
sbb
lret
cmp
clc
call
enter
setp
fmulp
jecxz
dec
jae
shll
push
mov
push
mov
sbb
out
pop
cmc
out
incl
scas
sahf
and
pop
xchg
inc
mov
xor
pusha
and
inc
add
call
ljmp
xchg
fwait
and
pop
dec
push
sbb
out
sar
dec
in
leave
mov
andl
jecxz
push
roll
and
scas
clc
sbb
and
push
aas
mov
pusha
mov
in
mov
stos
pusha
push
mov
pop
shrb
push
outsb
and
stos
mov
push
mov
xchg
out
roll
jns
andps
push
xor
xchg
and
std
nop
shl
cmp
inc
js
xchg
jns
ljmp
jne
repz
push
sub
mov
and
push
ja
cmpsl
dec
int3
cmp
adc
ja
clc
loop
mov
inc
js
icebp
sarl
sti
inc
testl
xchg
pop
ds
mov
clc
jg
js
andl
and
sbb
add
or
aam
aam
dec
clc
fildll
in
cmp
in
popa
and
ficompl
cli
std
shll
lahf
mov
and
fsubl
cmp
ss
fstps
ds
cwtl
pushf
cmp
and
mov
jbe
out
or
popf
shll
inc
ds
push
add
push
test
scas
lcall
push
push
or
in
mov
aam
sbb
adc
idiv
mov
sub
ja
jo
jne
push
shlb
aam
lock
fadds
enter
lds
repnz
adc
js
mov
aam
push
inc
mull
mov
push
jecxz
mov
cmc
fbld
hlt
filds
adc
cmpsb
pop
enter
push
and
outsl
cli
pop
vmptrst
call
test
cld
pop
jp
lds
mov
es
xor
sbb
popa
and
and
cmp
sbb
ret
loopne
add
int3
push
sti
xor
adc
movsb
mov
and
mov
stos
jl
jg
push
in
xchg
push
flds
mov
clc
cmp
leave
add
call
mov
cld
lret
cmp
xchg
ds
mov
cli
pop
aam
xor
ret
and
nop
inc
push
adc
cmc
mov
clc
cmp
pop
adc
movsb
xor
jmp
outsb
cmp
xor
mov
int3
gs
hlt
xchg
or
adc
clc
cmp
cwtl
notl
xchg
ljmp
pop
xchg
cmp
insb
cwtl
outsb
and
pop
lock
sub
cltd
cmp
mov
lds
stos
clc
loopne
mov
mov
ss
add
mov
rcrb
inc
pop
fsubs
pop
scas
fbld
insb
shrl
cmpl
mov
loopne
or
or
jb
decl
lock
push
outsb
ds
rolb
dec
push
es
outsl
clc
cmpsb
sub
sub
bnd
cmp
adcl
inc
sub
mov
lea
jno
pushf
outsb
mov
data16
repnz
sub
ss
adc
push
or
or
test
js
push
into
or
mov
mov
add
sbb
pop
and
sti
dec
cli
lahf
add
add
bound
jle
pop
xchg
push
push
or
out
sahf
mov
loopne
loopne
inc
pop
and
mov
xchg
jp
loope
movsb
add
mov
es
ljmp
or
lds
push
or
dec
cld
jbe
adc
lcall
xor
and
js
jmp
aas
mov
cmpsb
push
and
orl
shlb
mov
lcall
adc
adcb
push
ret
out
xor
movsl
pop
sbb
sub
xchg
ret
inc
fdivs
cld
test
add
pusha
dec
jae
dec
fiadds
cmp
pop
xor
add
add
mov
orb
ret
push
rclb
lods
rolb
daa
fldl
jle
and
bound
stc
and
ror
adc
aam
enter
jmp
in
fimuls
rorl
sahf
push
inc
fsubrs
pusha
inc
test
int
jmp
sbb
jp
add
or
xor
mov
or
xchg
xor
jns
test
adcb
arpl
and
loop
inc
cmp
inc
mov
push
and
add
data16
and
out
adc
push
jg
outsb
icebp
sti
out
add
aaa
jmp
sbb
cmp
sbb
adc
sahf
add
push
sarl
cmp
xchg
or
in
mov
xchg
repz
mov
add
inc
shll
xorb
pop
fists
push
sub
jo
push
pop
adc
jb
mov
add
punpckhdq
clc
loop
pop
loopne
out
adc
mov
paddsw
test
push
jmp
stc
nop
push
sub
dec
in
outsl
lds
cmp
xchg
scas
push
pushf
push
cmp
mov
ret
aaa
fbstp
clc
mov
jg
fstpt
adc
adc
cmpsw
imul
xor
xchg
jg
jle
jne
adc
pop
loopne
aaa
push
fistl
pop
and
faddp
and
xchg
insl
inc
pop
test
rcll
dec
sahf
inc
setle
movsl
xchg
pop
add
pop
mov
mov
fcomps
pop
adc
test
mov
mov
push
mov
imul
jle
lods
xorl
outsb
sub
sub
adc
fbstp
sbb
test
dec
and
fistpl
and
or
imul
repnz
call
pushw
lcall
out
fildll
or
or
popf
pop
add
lret
addb
mov
adc
fcos
inc
fsubs
jns
jns
gs
cld
mov
scas
popa
cli
test
out
add
xchg
mov
mov
sbb
cvtps2pi
clc
jge
mov
mov
test
lds
add
jecxz
repnz
mov
scas
adc
fisubrl
or
jns
ds
jl
rol
mov
pop
or
ret
push
rolb
dec
gs
scas
jbe
mov
jno
es
jecxz
add
call
adc
sub
mov
lods
fcmove
xchg
icebp
xor
movl
pushf
or
movsb
in
dec
scas
sub
push
and
pop
popl
scas
bound
dec
int
cwtl
hlt
leave
or
shl
gs
dec
cmpsb
insb
push
mov
pushf
js
sarb
jbe
xchg
add
mov
leave
mov
iret
rcr
test
js
call
push
jp
and
dec
mov
pop
jl
sub
add
iret
sub
int3
outsb
leave
insb
push
shll
lods
insl
movsl
mov
xchg
mov
ret
adc
insl
nop
xor
aas
xor
hlt
jo
add
fwait
inc
les
shrb
mov
mov
cmp
stos
mov
sub
inc
lds
dec
or
pop
inc
adc
pop
addr16
dec
jle
xorl
mov
iret
pushf
mov
add
fimuls
sahf
adc
iret
jbe
dec
mov
js
inc
sahf
repz
xlat
imul
outsl
js
pop
mov
mov
add
test
rep
jg
ja
enter
insl
in
insl
jl
add
push
mov
inc
ss
clc
xor
outsl
or
push
daa
mov
pop
push
inc
mov
fistps
pushf
push
add
dec
les
lock
aad
xor
lock
aam
lods
xor
mov
xor
sbb
pusha
and
mov
jmp
ja
rcrl
loopne
mov
push
divl
js
leave
add
jle
mov
outsl
inc
sub
clc
xchg
fcmove
and
or
xchg
test
dec
mov
dec
daa
arpl
xchg
sub
int3
gs
fstps
fiaddl
xor
jg
lret
test
iret
and
cli
inc
dec
nop
sbb
sub
inc
pop
stos
lock
out
push
push
data16
cld
fistpll
pop
mov
dec
push
pop
sbb
pop
xchg
add
ljmp
rorb
or
in
fcoms
insl
sub
testl
cmpsl
sti
aam
cmpl
mov
rcrl
cs
xor
hlt
stos
lcall
into
mov
push
test
push
lock
sub
or
sbbb
sbb
ds
das
xlat
add
pop
mov
ret
ret
and
add
push
pop
mov
cmpsb
cmp
mov
lahf
mov
lea
pop
test
jo
or
lcall
mov
push
mov
clc
jle
and
or
loop
sub
js
lock
inc
and
fsub
lahf
nop
pop
mov
decl
divl
shlb
add
call
cmp
push
and
or
fstl
cmp
daa
mov
pop
jmp
add
add
divb
sbb
or
lods
dec
cmp
and
jne
ret
je
pop
out
ja
mov
clc
idiv
lds
xchg
sub
dec
pop
sub
das
or
inc
call
movsl
cmp
inc
add
testl
aaa
fcomps
mov
xchg
mov
sub
xor
jmp
push
inc
pop
lods
cmp
lds
add
xchg
inc
test
pop
mov
adc
sbb
jno
mov
jg
pusha
in
cmc
out
push
or
rcl
stos
loop
cli
xor
dec
mov
fimuls
adc
sub
movb
mov
and
inc
in
mov
mov
xchg
lock
fnsave
dec
lret
ficoml
and
cld
fstl
aas
les
mov
or
outsb
add
add
mov
sti
movlps
and
std
sbb
add
mov
or
iret
inc
roll
popa
icebp
inc
pop
test
push
cld
cmpsb
sbb
fiaddl
cli
loopne
pushf
call
inc
adcl
fsub
das
sbb
repz
inc
add
js
jb
inc
rclb
xchg
pop
mov
push
push
mov
add
je
or
imul
pop
adc
fsub
mov
icebp
call
cmp
mov
add
push
sahf
mov
mov
pop
test
test
data16
xchg
sbb
jbe
inc
xchg
nop
xchg
dec
stc
je
push
ret
decb
or
pusha
or
jp
rclb
xor
mov
dec
and
arpl
fldl
mov
adc
shlb
insb
aas
or
push
mov
int3
shll
loope
jmp
orb
stos
jae
jle
jg
addb
jmp
dec
mov
jo
aaa
mov
lds
push
and
pop
push
jnp
lcall
loopne
loope
or
out
shll
pop
dec
push
push
mov
sub
jo
int
jns
insb
xor
test
jle
sub
pop
es
test
outsl
cli
inc
cli
stos
jns
sahf
fcoml
add
cld
or
sub
pop
je
repnz
enter
mov
xlat
sbb
mov
clc
out
jmp
jg
insl
mov
push
lcall
fidivl
stc
loope
push
sub
je
fidivs
aas
jle
dec
inc
mov
sbb
jge
.byte
.byte
loopne
lcall
add
add
out
or
sahf
adc
ret
and
mov
pop
ret
inc
and
insb
ja
pop
pop
leave
ret
pop
ret
and
adc
adc
ret
mov
ret
nop
dec
pop
adc
and
pop
pop
add
and
imul
dec
adc
dec
dec
and
sti
ja
sub
and
and
dec
or
and
adc
jg
incl
and
adc
sbb
and
adc
insb
sbb
adc
and
sbb
add
and
mov
and
add
sti
inc
inc
nop
adc
push
in
mov
adc
or
push
adc
inc
mov
and
adc
and
xor
adc
sub
add
sbb
sub
outsb
cmp
and
outsb
ret
int3
adc
and
dec
mov
mov
and
clc
mov
adc
fimull
inc
pop
and
add
fsts
and
cmpsb
mov
add
pop
enter
es
inc
push
and
add
insb
jb
add
adc
fisubl
lcall
inc
fbld
mov
loopne
pop
mov
and
movsb
pusha
fcmovne
jp
cltd
and
and
mov
dec
add
dec
cli
jmp
adc
inc
add
addb
fcmovnu
jbe
and
sub
and
adc
adc
sub
ja
inc
or
inc
inc
push
addb
mov
and
dec
mov
dec
adc
test
add
pop
and
and
add
adc
and
test
data16
insl
out
pop
nop
cmp
imul
into
mov
adc
cwtl
adc
add
test
lcall
dec
inc
dec
add
and
push
and
std
adc
adc
adc
and
and
pop
sub
adc
les
movsb
andb
push
inc
mov
pusha
or
mov
mov
pusha
jbe
mov
push
dec
sbb
adcb
lods
pop
sbb
nop
mov
mov
sbb
int3
mov
add
xor
push
inc
mov
push
mov
pushw
mov
cli
fadd
or
or
xor
dec
and
inc
xor
adc
ret
xor
lcall
mov
add
add
mov
cmp
push
and
or
data16
and
add
inc
adc
sbb
push
adc
lods
test
inc
je
add
shll
call
imul
sub
or
ds
and
or
add
out
add
loopne
push
shrb
sbbl
inc
loopne
into
sbb
xabort
inc
xchg
scas
sbb
dec
orb
sub
pop
mov
rcrb
add
mov
and
sahf
cltd
dec
movb
pop
sub
sub
mov
pusha
xor
loopne
lcall
repnz
xchg
mov
sahf
jbe
pusha
dec
pusha
add
jle
call
or
xor
hlt
push
dec
cld
xor
add
push
imul
mov
add
sub
movsb
add
mov
and
out
push
pop
roll
xchg
and
pop
inc
pusha
pop
add
mov
cs
jle
cs
cmp
push
mov
inc
movsl
int3
ss
mov
mov
rolb
mov
sbbb
cltd
insl
je
movsb
mov
adc
fadds
jl
out
mov
jle
test
or
data16
in
int3
loopne
js
push
outsb
or
nop
xchg
push
subl
jo
movb
ljmp
out
fcompl
testb
testb
add
jnp
orb
je
sar
pop
sbb
rolb
xchg
lcall
je
dec
push
xchg
xor
pushf
inc
in
sbb
mov
push
inc
mov
inc
rclb
cli
popa
push
subl
add
mov
leave
icebp
aam
fcoms
or
xchg
test
push
or
push
insb
mov
pusha
sub
cwtl
into
lods
lcall
int3
xchg
and
or
pusha
adc
sub
xor
sub
pop
test
xor
adc
fmulp
scas
or
dec
push
cwtl
and
pop
xor
push
pop
repnz
test
fcmove
or
pusha
pop
cmp
adc
cwtl
test
add
scas
xchg
pusha
clc
or
enter
fsubr
jno
adc
orb
mov
cs
push
cmp
mov
sbb
lcall
push
nop
add
xchg
adc
jp
test
adc
mov
mov
add
lods
and
je
shll
push
pop
adc
push
andw
mov
or
ds
ror
sub
js
or
and
add
sbb
xor
add
pop
gs
push
daa
pop
sbb
pop
cwtl
push
sub
xor
loop
push
test
xor
add
mov
push
js
jo
in
inc
aam
sub
xor
or
adcb
call
ret
add
xchg
ss
int3
pop
mulb
pop
xor
dec
add
adc
movsb
cltd
ret
mov
dec
dec
inc
in
stos
pusha
movd
push
adc
flds
xor
lret
mov
sub
pusha
cmp
icebp
hlt
xor
sub
loopne
mov
dec
jbe
je
push
add
xor
test
loop
popa
xchg
jp
dec
add
add
fcomp
lods
ret
outsb
push
and
in
mov
push
xchg
xor
lahf
mov
pop
subl
cmp
cmp
xchg
add
pusha
scas
push
xor
and
nop
test
addr16
dec
fs
adc
mov
jmp
adc
push
xchg
mov
pop
inc
push
or
shlb
push
js
and
sbb
loop
adc
dec
js
mov
pop
sbb
mov
cwtl
add
jbe
add
dec
add
fisubl
xor
sub
addb
xor
popa
mov
inc
into
shl
pop
or
ss
xorl
fidivrs
aam
test
push
movsb
push
popa
jbe
pusha
lods
push
stos
mov
sub
testb
cwtl
inc
ljmp
cwtl
rorl
or
adc
xchg
ret
js
ficoms
push
testb
mov
push
xchg
xor
lods
fdivs
and
pop
lods
add
and
pop
int3
stos
test
cltd
test
mulb
rcrb
cwtl
rcr
call
and
jl
je
and
xchg
ret
push
inc
xchg
pushf
mov
push
add
test
cmp
dec
sub
hlt
mov
enter
fadds
ror
in
loopne
xchg
xchg
or
and
fmull
adc
jo
adc
xchg
into
nop
in
scas
ret
xchg
lcall
cltd
lret
lret
add
sbb
sti
iret
push
cmp
in
jne
in
inc
sahf
test
cs
adc
xor
ljmp
rol
lock
hlt
push
sbb
xlat
imul
push
fsub
pusha
lret
lcall
fdivrl
dec
lret
in
jl
je
dec
loop
mov
fmulp
sub
adc
or
add
call
inc
addl
inc
inc
lret
add
xor
inc
and
sub
sub
mov
ret
push
subl
inc
mov
sub
sub
add
ret
push
sbb
int3
mov
cmpb
push
cwtl
add
cmp
or
pop
add
or
pop
xchg
or
or
or
rorb
and
xchg
loopne
add
mov
cmp
packssdw
mov
js
test
test
cld
inc
inc
push
push
in
xor
add
test
or
cwtl
enter
xor
push
aad
inc
xchg
add
dec
or
sub
xorb
pop
or
jl
adc
inc
fcomps
nop
sbb
sbb
dec
jp
ret
push
dec
cmp
sahf
lcall
cmpsl
add
adc
xorb
sub
pop
and
and
ret
add
pop
adc
shl
add
sub
lock
pushf
mov
adc
repnz
sbb
sub
mov
cmp
clc
addb
mov
out
out
push
inc
add
dec
or
add
sub
jle
in
sub
xor
xor
mov
adc
cmp
pop
fmull
sbb
lret
and
and
orl
enter
ss
adc
or
jmp
jl
cmpb
bound
mov
into
dec
daa
js
ljmp
dec
sbb
nop
push
ret
push
push
into
inc
cwtl
pop
inc
jp
sbb
xor
scas
stos
cmp
rolb
mov
fsubl
fsub
sbb
cltd
imul
sahf
nop
nop
popf
pusha
add
sbb
sbb
stos
pushfw
inc
inc
lods
adc
pushf
dec
inc
dec
jo
or
push
dec
enter
aam
add
push
cmpsl
or
in
and
mov
mov
pop
push
xor
jne
jo
insb
add
xchg
cwtl
mov
xchg
or
push
and
cld
ficoml
push
in
pusha
jl
stos
mov
add
add
js
and
adc
mulb
mov
in
repnz
addb
addb
or
or
push
scas
insb
jle
add
inc
sbb
clc
es
push
jnp
pop
cmpb
les
dec
cld
inc
mov
pop
push
out
repnz
adc
dec
cmc
mov
xor
int3
sbbb
pop
pop
mov
pop
fldenv
push
add
cs
add
mov
push
push
add
popa
shlb
push
push
cmp
mov
mov
testb
pusha
adc
enter
add
outsb
scas
pop
aad
add
cmp
test
jno
or
sub
pop
rcrb
movl
jno
xchg
mov
data16
fisubrs
mov
or
orl
sub
rolb
jno
or
bound
sub
add
mov
sahf
push
repnz
syscall
or
ss
js
js
pop
stos
pop
outsb
and
into
jp
dec
bound
push
mov
js
loop
and
cmpsl
push
pop
scas
sbb
push
dec
adc
push
adc
pop
inc
cld
and
pop
mov
adc
xor
into
icebp
mov
inc
insb
push
push
outsb
les
test
push
xchg
sbb
or
mov
and
lods
orb
xor
or
mov
xor
xor
mov
or
cwtl
mov
cmp
clc
push
adc
pushf
adc
cmp
add
ret
in
loopne
xchg
and
lcall
add
movsb
inc
push
enter
sarb
or
xor
inc
les
cli
and
out
or
inc
mov
flds
push
nop
popa
add
add
sub
or
rorl
enter
or
rolb
push
adc
sbb
adc
adc
fcoml
or
addb
cs
ja
cmpsl
mov
inc
int3
push
jb
and
jecxz
mov
aam
sbb
clc
xor
enter
and
sbb
inc
xchg
testb
ret
mov
js
stos
mov
push
xchg
rorb
push
insb
rolb
pusha
scas
jbe
int3
sbb
data16
add
adc
or
fdivl
push
adc
and
in
or
roll
pop
or
test
jno
mov
daa
dec
cmp
add
push
mov
dec
push
or
aad
inc
lods
shlb
inc
add
dec
mov
mov
enter
sbb
pushf
jl
into
fdivs
inc
jnp
lock
jl
jnp
fsubr
push
push
mov
mov
dec
nop
adc
dec
out
mov
xorb
inc
mov
or
xchg
and
lods
cmpsb
push
and
es
push
sbb
and
incl
and
and
add
sub
scas
inc
adc
mov
out
add
mov
neg
inc
push
and
jmp
push
mov
jae
inc
cld
add
movl
adc
jle
std
aas
and
jle
dec
mov
or
stc
mov
mov
rorb
out
cmp
xor
mov
mov
jbe
or
sub
js
pop
fsubl
xrelease
mov
and
rcrl
fiadds
idivb
sbb
xor
roll
xor
sti
jnp
sbb
jle
xor
add
mov
cmp
pusha
data16
dec
mov
ds
outsl
out
jbe
not
adc
dec
jb
add
add
outsb
xchg
and
lea
sbb
push
or
mov
mov
out
cld
push
cmp
cld
sbb
add
sbb
fidivs
jg
fiaddl
xor
aaa
mov
xchg
adc
fcompl
pop
outsb
in
mov
mov
add
fmulp
ja
sahf
mov
data16
adc
call
sahf
cwtl
jecxz
add
mov
inc
cmp
pusha
pop
data16
js
inc
cmp
push
js
iret
popa
and
adc
notl
test
adc
inc
xorl
daa
lock
xor
mov
pusha
push
adc
add
imulb
fstl
or
add
mov
iret
sbb
xchg
adc
add
neg
dec
cld
clc
jo
imul
adc
or
inc
adc
in
cmp
in
shrl
mov
out
mov
fisttps
out
rcr
inc
fsts
and
fadds
fistpll
xchg
sbb
push
add
dec
lock
lods
pop
fnstsw
fcomps
fistps
stc
push
enter
or
inc
push
fisubrl
daa
mov
push
xor
sbb
add
movsb
add
loope
pop
cmpsb
mov
into
stos
cld
ljmp
push
out
ficomps
fdiv
jge
inc
mov
adc
fildl
gs
movsb
cmp
sbb
shl
mov
stos
fs
add
out
sub
or
push
cwtl
loopne
push
aam
or
pusha
clc
mov
jle
sbb
push
cld
sbb
inc
shlb
cli
icebp
rcrl
mov
in
or
in
pusha
xorb
fisubrs
mov
jecxz
add
fcmovnbe
or
jecxz
xchg
rol
loope
mov
dec
mov
ret
dec
aad
or
push
push
mov
mov
or
hlt
mov
mov
imulb
rclb
add
jmp
and
dec
sbb
mov
in
jg
movsb
les
xor
and
aam
rcr
hlt
fiaddl
fsubrs
pusha
cltd
mov
jmp
test
ja
mov
maskmovq
notl
ja
inc
or
inc
cmp
and
add
push
cs
das
push
pop
cmp
or
fsubrl
sub
adc
pop
push
mov
mov
push
push
outsl
sub
call
and
rcl
pop
sub
nop
nop
adc
add
push
mov
gs
int
xlat
and
sub
xlat
inc
xchg
mov
lcall
cmp
xchg
xchg
fdiv
xchg
push
imul
pop
xor
hlt
sub
push
movsb
es
dec
pop
loopne
add
ret
int3
push
add
xor
outsb
pop
lahf
sub
mov
or
adc
jp
inc
fsts
movsb
add
mov
mov
dec
dec
push
xchg
les
shr
sti
dec
sub
mov
pushf
and
ret
xchg
adc
inc
movhlps
outsl
add
sbb
ret
cmp
clc
jle
clc
adc
and
jo
cmp
shll
fcom
pop
xor
xchg
out
add
cwtl
into
mov
mov
add
pusha
pop
or
push
mov
mov
mov
clc
mov
push
mov
rorb
daa
add
rclb
data16
lcall
pusha
and
jbe
adc
mov
mov
xchg
fcoml
cld
bsf
cmp
jg
call
dec
sbb
pop
test
and
fadd
clc
sub
mov
idivb
sbb
ss
sti
sbb
setl
or
sub
xor
insb
fiaddl
sti
pop
jp
mov
enter
pop
cmp
add
int3
push
ss
rorb
stos
sbb
sbb
in
sub
xchg
push
mov
out
sbb
icebp
push
cli
dec
push
push
call
mov
sub
daa
lods
adc
cmp
dec
les
jg
cmp
push
fdiv
aas
xlat
dec
sbb
icebp
loopne
stos
mov
ret
loopne
imul
shll
dec
and
add
sar
and
inc
shlb
test
adc
popa
hlt
pusha
mov
sub
test
rolb
sub
lret
pusha
out
dec
mov
ret
push
push
adc
add
mov
sub
mov
sub
int3
bound
aam
ret
aas
mov
jle
add
addr16
adc
mov
daa
loopne
add
pop
scas
mulb
pop
xlat
and
xchg
inc
or
testb
notl
shl
aaa
aam
fildl
jg
clc
add
pop
sbb
dec
add
inc
popl
in
insl
cmp
sbb
adc
aam
inc
mov
add
cmc
jbe
pop
adc
into
xchg
pop
clc
jmp
add
and
push
stos
in
notl
and
add
aam
insb
fcmovne
into
add
xchg
push
lds
jecxz
xadd
pop
in
js
dec
in
inc
sti
mov
and
cwtl
clc
arpl
mov
sbb
int3
sub
cmovg
sub
pop
bndstx
pop
push
in
push
adc
popa
dec
sbb
xchg
mov
cmp
faddl
rorl
pop
loop
pop
add
sub
add
cmpsb
or
fimull
push
mov
dec
cmp
cwtl
sub
int
push
add
push
loopne
inc
je
les
mov
mov
pop
loopne
addb
jmp
xor
pop
push
add
and
inc
orb
push
loopne
clc
add
aam
repnz
dec
adcl
cmc
jecxz
inc
inc
ficomps
adc
mov
push
add
xchg
cmp
stc
test
pop
inc
sti
stos
add
jno
jp
std
inc
mov
ret
and
push
mov
loopne
aam
les
loopne
aam
aam
lock
loopne
mov
in
sbb
fisttps
adc
loop
jbe
loope
or
adc
mov
nop
sbb
mov
clc
and
adc
or
xor
mov
dec
push
fimull
xlat
cmpsl
dec
jl
iret
inc
test
mov
add
jae
mov
adc
dec
mov
dec
sbb
jo
adc
or
addl
xor
mov
icebp
push
clc
push
adc
add
roll
insl
adc
mov
out
imul
mov
push
dec
pop
fs
pop
outsl
mov
add
and
popa
cltd
jns
rol
scas
lret
dec
mov
xor
mov
jne
cmp
xchg
movhps
js
negl
xchg
mov
mov
pop
pop
cmp
cmpsl
arpl
fisubs
or
ja
add
jg
sub
cld
out
out
scas
in
and
mov
and
inc
cmpsb
jb
in
adc
add
xchg
push
in
inc
push
sar
adcb
cmp
test
test
loope
pop
push
sub
jmp
inc
jp
shlb
shr
adc
sub
icebp
xor
mov
cmp
jae
add
std
ret
mov
in
sbb
shrl
pop
cli
dec
shlb
and
bound
ret
ss
add
xor
xchg
lcall
add
add
mov
clc
push
xor
test
out
stos
mov
pusha
loope
push
push
push
mov
ret
stos
push
push
fsts
add
jp
fimuls
jae
rcrb
cmp
dec
sarb
hlt
ljmp
add
aaa
sub
push
sti
sbb
jl
lcall
sarb
or
jge
push
clc
xlat
sbb
loop
fs
cmp
mov
fcom
push
out
mov
loope
push
add
cmc
sbb
push
pop
flds
ds
fldl
cmp
icebp
test
mov
push
les
cmpsb
int3
xor
xorb
mov
shll
mov
int3
adc
cmc
ds
inc
or
test
aas
sbb
adc
pop
push
in
xor
xchg
fidivl
jle
push
sub
push
cmp
fmull
pop
sarb
xor
add
test
add
dec
cmp
xor
push
mov
clc
loopne
int3
icebp
push
int3
add
xchg
inc
lods
int
jge
sbb
nop
adc
sbb
mov
test
loop
jb
push
pushf
mov
pop
push
int3
sub
jmp
pop
das
push
addb
mov
mov
jb
xlat
mov
add
test
mov
jp
jno,pn
aam
and
push
cmpsl
push
mov
adc
enter
and
adc
idivl
sti
mov
mov
cld
mov
dec
mov
rcr
dec
cmpsb
add
sub
xor
add
jbe
lock
jns
inc
in
bnd
mov
or
test
dec
dec
jne
stos
sub
mov
pop
aas
shrb
lea
push
pushl
push
pop
mov
push
lea
push
call
xor
outsl
adc
add
fldenv
std
mov
xchg
neg
pop
inc
dec
imul
ret
daa
or
pop
arpl
and
cld
push
dec
or
aaa
sbb
inc
mov
dec
add
fldt
shrb
lret
pop
jge
sbb
jne
cmp
push
orb
and
inc
mov
inc
mov
inc
pop
cmpsl
add
cmp
push
mov
mov
xor
jecxz
cmp
inc
bound
jmp
fninit
fwait
xor
test
pop
jmp
add
inc
sub
sbb
mov
sbb
in
mov
xorb
fsubl
jmp
add
add
adc
inc
pop
jl
pop
sbb
dec
loop
hlt
sbbl
mov
sbb
push
mov
cmc
sub
inc
xchg
xor
xchg
add
lods
sti
psubq
pushf
dec
inc
jmp
jmp
push
mov
cld
sbb
or
testl
repz
or
je
adc
jmp
hlt
adc
fistps
mov
mov
xor
pop
or
pop
ret
nop
loopne
fldcw
andb
cmp
scas
mov
fs
hlt
data16
mov
xor
or
or
fs
incb
sub
jmp
jmp
dec
outsb
bound
int3
mov
loopne
mov
fsubl
push
sub
fisttpl
mov
mulb
repnz
fldcw
sbb
rcll
adc
mov
repnz
sbb
lret
inc
shlb
xor
xlat
mov
or
inc
lcall
cmp
xchg
mov
xor
and
pusha
pusha
aas
daa
xor
lods
xchg
xor
push
nop
push
ljmp
mov
dec
out
and
or
outsl
movsl
push
jle
adc
dec
mov
dec
prefetchw
mov
nop
or
fs
mov
push
mov
daa
ret
in
xchg
daa
jbe
lea
into
dec
fnstsw
shll
popl
sbb
mov
in
and
sbb
add
insb
test
fwait
bound
sbb
cli
ret
sub
aad
push
in
je
js
pusha
xor
lods
repnz
fwait
pop
sbb
sbb
sbb
mov
ret
arpl
lock
adc
test
rolb
and
jb
mov
shll
loope
add
add
xchg
add
fiaddl
mov
icebp
cmp
push
add
sub
cmp
in
xchg
cmp
loopne
mov
jns
inc
pxor
sbb
aas
aas
loope
roll
push
and
and
outsb
xchg
pop
pop
and
mov
jo
xor
mov
lcall
inc
push
cltd
pop
lds
add
push
pushf
js
popf
outsl
push
jne
add
je
fiaddl
dec
cli
mov
shlb
sbb
sarb
out
shrb
mov
add
jl
mov
add
dec
jo
movsl
mov
add
ret
outsb
cmp
jle
or
ja
rcr
jns
adc
xor
xlat
ret
call
cwtl
icebp
pop
cmp
cmp
jl
stos
popa
add
ficompl
enter
push
int
popa
xor
jge
add
out
add
clc
rcrl
push
test
sbb
and
and
mov
add
and
call
mov
lea
sub
cmpsl
loopne
andl
pusha
ret
out
test
dec
sub
shrl
cmpl
es
jp
inc
jge
adc
aaa
push
nop
or
add
cli
rorb
mov
push
or
out
test
fisttpll
xchg
cmp
push
xor
minps
ficoml
mov
f2xm1
ja
adc
sbb
push
mov
xor
sub
fmuls
test
fbld
int
xchg
jbe
push
mov
sbb
and
add
sub
sbb
pop
and
daa
or
clc
enter
es
daa
push
xor
jno
lcall
or
inc
rcll
pusha
repnz
adc
movsb
add
test
pushf
mov
mov
loop
adc
dec
int3
sub
ficoml
inc
jb
cmp
or
adc
ret
fiaddl
sarl
pop
jo
or
arpl
aam
pop
test
sub
cmp
out
adc
es
sarb
inc
inc
inc
adc
jl
orl
andl
pop
inc
inc
adc
dec
or
pop
mov
jl
mov
cwtl
mov
inc
ss
cli
call
mov
lret
xlat
sub
adc
lea
rclb
mov
xchg
lahf
call
shr
add
cs
sbb
in
sub
add
enterw
mov
js
push
or
popf
sbb
test
pop
jge
jne
cmp
mov
mov
or
lds
dec
add
jg
or
push
push
mov
es
pop
lock
rclb
xor
addl
icebp
jo
mov
stos
xor
dec
mov
cmp
inc
or
cmpl
mov
sub
test
je
dec
loopne
dec
stos
mov
cmp
arpl
in
jmp
cmp
xor
lock
or
sub
xor
push
mov
pop
gs
roll
jle
fstl
xor
test
dec
dec
pop
popa
fadd
pop
jo
popf
arpl
in
sbbl
mov
and
lret
loopne
mov
or
pop
mov
and
push
inc
lock
jmp
cmp
std
int
sbb
popa
adc
sbb
addr16
in
loopne
sarl
mov
push
mov
inc
cmp
loop
lret
hlt
push
cs
hlt
sbbb
mov
inc
andl
push
lods
rclb
pop
xor
sub
out
shr
xor
jecxz
out
pop
jle
inc
or
xor
mov
fnstenv
mov
or
push
add
add
lods
mov
sub
mov
and
push
sbb
fucomp
cli
lock
in
sub
in
bnd
pop
and
pop
jmp
out
rclb
loopne
jmp
adcb
cli
call
and
inc
aam
aaa
ret
xchg
inc
aam
inc
es
or
jne
xchg
pop
loopne
add
add
inc
and
test
clc
add
and
mov
xrelease
cmp
pop
add
push
xchg
scas
add
jne
mov
push
inc
ret
popl
mov
cli
cld
jecxz
int
add
jp
mov
loop
and
insl
outsl
and
or
rolb
aam
fiadds
sbb
stos
xchg
fldl
sbb
aad
mov
push
dec
mov
je
pop
ljmp
pop
aas
or
mov
repnz
mov
xor
mov
mov
xchg
clc
fcmovnb
jns
stc
shl
sub
jle
cld
jecxz
cmp
into
sbb
dec
inc
cmp
xor
xchg
push
mov
loopne
pop
fmull
lock
clc
leave
mov
test
rcll
dec
pusha
roll
mov
js
or
cmpsb
and
jae
lock
push
jnp
shlb
mov
push
sbb
jp
mov
adc
pop
add
cltd
adcl
ss
xor
dec
dec
clc
xchg
sbb
cli
push
aas
test
mov
mov
mov
pop
jp
repnz
push
mov
ja
mov
rolb
mov
out
push
xchg
mov
or
scas
in
in
mov
push
and
rcll
add
outsb
and
dec
adc
add
mov
sbb
lds
cmp
les
mov
push
mov
imulb
sub
xor
ljmp
adc
xchg
dec
test
add
adc
insb
rol
idivb
adc
ljmp
cmpl
ret
xchg
and
cmpsl
adc
jge
orb
inc
jbe
mov
and
mov
in
xchg
and
fiadds
pop
loopne
push
ljmp
inc
stos
dec
mov
push
mov
cmp
xor
test
inc
loopne
cld
jp
dec
shll
add
in
icebp
jo
xchg
daa
mov
in
js
push
inc
jmp
ljmp
lods
or
outsb
cmp
jmp
and
jg
std
shll
push
and
push
add
xchg
in
fiadds
das
fistpll
test
xor
and
and
or
stos
movaps
out
dec
shrd
xor
shlb
and
jb
adc
hlt
adc
pop
imul
and
call
dec
xor
add
mov
jge
rolb
jge
rolb
cli
lods
cmc
lret
inc
out
loopne
in
push
ffreep
jbe
into
xchg
sahf
je
pusha
xor
je
pop
inc
imul
movsb
inc
pusha
cmp
jmp
sub
repnz
js
sbb
sbb
dec
jne
insb
sbb
imul
jecxz
fidivrl
loopne
pop
repz
cmpsl
fnstenv
mov
or
jns
xchg
cmc
lock
jg
mov
xor
push
enter
xchg
in
jae
push
nop
call
or
jne
cmp
in
clc
sbb
adc
xchg
mov
in
loopne
fildll
lock
pop
sahf
dec
mov
insb
test
adc
xor
in
daa
and
mov
leave
hlt
and
mov
cld
icebp
mov
loope
xchg
jns
pop
mov
fcoml
int3
or
add
pop
or
add
dec
test
inc
mov
sub
and
add
xor
push
inc
mov
pop
push
jl
add
in
es
das
out
aam
or
cs
inc
ss
shll
inc
adc
cmp
in
lods
mov
out
movsl
push
ret
hlt
dec
fdivl
fadd
loopne
add
adc
sbb
lcall
inc
adc
sub
lock
js,pn
add
cmp
cld
dec
add
adc
jmp
xor
in
push
fmuls
dec
lock
pop
test
inc
cmp
jne
ret
imul
ljmp
adc
je
add
les
lock
fbstp
xchg
xlat
dec
adcb
daa
cmp
jp
ss
roll
cli
or
sbb
push
cli
shrb
sbb
lods
adc
loope
pushf
sub
inc
jl
push
sbb
adc
inc
jno
js
mov
in
decl
xchg
int3
hlt
push
fsubs
in
sbb
xor
push
add
stos
std
and
inc
idiv
rcrb
pushf
cmp
arpl
fsub
push
loop
add
lock
ret
cmp
sbb
lahf
or
mov
push
inc
mov
jp
imul
loopne
repz
dec
aam
testl
rcrb
jae
jmp
xor
lcall
sbb
xor
dec
pop
in
xor
or
sbb
pop
push
in
dec
or
adc
sti
mov
pop
mov
cmp
mull
or
idivl
xchg
inc
outsl
add
cmc
push
inc
jb
xchg
or
mov
inc
xchg
lods
sub
insb
shlb
jae
inc
sbb
in
mov
mov
loope
repz
cmp
dec
out
mov
mov
stos
stos
pop
xor
mov
inc
sti
rol
mov
and
adc
cs
jns
mov
cli
add
add
push
adc
adc
addb
sahf
mov
mov
sub
xlat
add
xor
pop
gs
push
cld
mov
loop
repnz
das
test
xlat
pop
cmpsb
ljmp
push
pop
jp
icebp
cltd
test
out
and
xor
mov
bound
loop
adc
cli
sub
adc
and
sbb
cli
mov
add
pushf
sbb
out
dec
cld
inc
js
or
out
lcall
mov
jl
fiadds
aam
mov
cwtl
push
dec
xor
int3
pop
cld
push
sbb
clc
push
cs
insl
adc
jecxz
add
mov
shl
pushl
aam
xor
sbb
pop
hlt
cmpsl
ds
ret
out
ja
jecxz
adc
jl
or
xchg
or
mov
orb
add
out
add
ret
sbb
shl
add
sbb
sbb
inc
add
sbb
jle
sarl
and
inc
jnp
sub
jno
inc
stos
mov
pop
mov
xorl
dec
je
add
sbb
and
hlt
pop
icebp
and
add
inc
dec
pop
fdiv
jecxz
lods
jge
cwtl
out
push
pop
xor
mov
outsb
lock
daa
sbb
add
cmp
sub
sub
mov
andb
xchg
mov
cmpsb
lret
inc
cld
sbb
in
jo
cmp
inc
call
rcll
ret
jae
in
sub
ss
add
xchg
push
or
sti
jmp
jbe
repz
clc
mov
shlb
xor
push
lods
out
test
icebp
jg
or
test
xchg
loopne
mov
mov
arpl
aaa
icebp
pop
call
cli
pop
bound
andl
shlb
adc
xchg
fwait
xchg
insl
mov
mov
pop
js
adc
call
and
xor
in
lcall
dec
sarb
jnp
and
adc
dec
pushf
xchg
and
sbb
add
xor
ja
sbb
ficoms
dec
inc
ret
add
pop
and
inc
iret
rcr
sub
add
and
dec
inc
mov
ret
rcll
loopne
push
loop
adc
cmp
rorb
jmp
ss
cmc
mov
mov
test
cmp
mov
sbb
clc
lods
xchg
dec
jmp
add
jb
pop
mov
mov
jbe,pn
inc
inc
xor
xor
ret
test
lds
jmp
jne
dec
xchg
test
js
jo
xor
lock
mov
in
sub
das
mov
jp
pop
inc
or
js
or
mov
daa
inc
jae
movsl
or
push
iret
sub
cmp
lcall
xor
fcomip
push
add
sar
popa
xchg
stos
mov
jle
mov
push
out
loope
lds
repz
outsb
mov
dec
sbb
shr
mov
loopne
loop
fnstenv
mov
sbb
loop
push
xchg
add
inc
mov
cmp
push
mov
inc
sbb
push
pop
jp
inc
and
aaa
es
add
adc
sbb
mov
add
test
cs
mov
add
cld
xchg
stos
aas
ljmp
pop
jne
xchg
xor
insb
negb
add
mov
mov
pop
clc
inc
mov
jmp
je
jp
inc
shrb
fiadds
das
mov
push
mov
loopne
add
test
xchg
idiv
or
pop
test
pushf
loopne
lds
jp
out
and
loope
adc
xchg
insl
ret
mov
push
fdivs
cld
hlt
jmp
xchg
and
loope
push
int3
and
push
mov
lcall
fimuls
cmp
adc
or
sbb
out
and
out
out
mov
jb
add
mov
jmp
inc
jae
xor
clc
cwtl
roll
xchg
push
cmp
and
sbb
xor
mov
cmpsl
clc
mov
ror
mov
sub
jnp
clc
iret
ret
push
pop
push
rolb
arpl
popa
xor
push
or
add
sub
xorl
aam
and
xor
iret
pop
cmc
xchg
jecxz
xor
test
jne
test
lcall
ret
xor
shl
js
stos
in
and
inc
test
mov
xchg
test
mov
sub
and
fucomip
pop
fdivrl
les
jae
dec
out
add
nop
pushf
ds
jnp
and
inc
stos
and
cmp
and
clc
sbb
push
fwait
mov
add
pop
mov
sub
jbe
in
xchg
jmp
dec
xchg
or
dec
adc
and
sub
add
pop
inc
rcrl
lea
push
push
or
mov
pop
push
lea
push
xchg
fnsave
fsubr
sahf
xor
mov
push
cmpl
jbe
or
cmp
mov
jo
jnp
pop
sub
push
in
xchg
loopne
add
jb
out
add
sbb
inc
xor
stos
push
jl
sbb
lock
adc
paddb
test
jae
inc
lods
adc
outsl
xor
jle
cmp
repz
push
pop
dec
test
pop
jo
mov
sub
xor
sar
fidivl
jbe
or
aad
jle
xlat
mov
fcomps
shlb
cltd
fldcw
ja
sub
fidivrl
push
les
push
cld
clc
aad
pop
dec
adc
into
xchg
insb
ljmp
stos
dec
dec
add
ror
add
push
add
loop
inc
add
mov
xor
and
and
inc
xor
xor
add
pop
fldl2t
jno
push
sbb
stos
jne
ror
cmp
shlb
add
jp
pop
fsts
test
addr16
push
mov
cli
fucomi
pushf
lea
cmpsl
pop
jl
mov
unpckhps
or
dec
or
in
out
xchg
adc
add
insb
push
fidivrs
lea
sbb
xchg
into
clc
hlt
into
ficompl
cmp
test
add
push
inc
cmpsb
loop
add
inc
test
push
je
push
fsubr
push
sub
mov
mov
sbb
test
jecxz
push
jb
add
loope,pt
loop
in
or
pop
in
push
fmuls
rcrb
add
clc
sub
outsl
jnp
roll
and
xor
push
pop
mov
rclb
jo
dec
cld
into
sub
and
push
ja
push
add
popf
dec
dec
icebp
xchg
sbb
pop
inc
and
pusha
jnp
xchg
shl
xchg
and
xor
sub
cmc
in
popf
xor
sub
sub
aas
out
ret
cld
test
mov
dec
je
inc
sub
pusha
ror
fidivrl
repz
pusha
cmp
clc
cwtl
jl
dec
clc
mov
mov
xchg
mov
lret
cltd
xchg
clc
add
add
xchg
ret
stos
inc
xor
inc
roll
lock
divl
jbe
adc
addb
or
das
or
jecxz
roll
sbb
ljmp
out
sbb
jle
push
clc
or
pop
mov
clc
mov
xor
push
pop
outsl
ret
mov
lock
mov
xchg
dec
icebp
push
jmp
sub
hlt
mov
test
lods
loop
fld
mov
sbb
jmp
push
push
js
jno
lock
xor
lret
lret
adc
lahf
xor
mov
orl
cmp
adc
add
daa
icebp
adc
xor
sbb
push
js
jns
sbb
cmc
xchg
mov
xor
jge
addr16
movsb
and
or
lea
rorl
call
cmp
je
dec
cmp
inc
jno
cltd
into
push
sbb
les
and
or
sarl
xorl
fstl
cld
inc
push
adc
xchg
ret
mov
xchg
sub
jo
fimull
lahf
xchg
sub
mov
add
push
jecxz
inc
jmp
nop
mov
icebp
or
and
ret
or
test
jnp
sub
inc
ret
lods
loopne
ret
sbb
loopne
into
mov
in
and
adc
pop
cmc
adc
jp
fnstenv
adc
adcl
mov
cmp
dec
repnz
xor
loope
mov
rol
test
je
xchg
stos
ret
mov
xchg
inc
jae
into
rcrb
js
mov
lods
mov
sub
loop
add
pop
mov
xchg
cmp
in
cli
adc
xor
xchg
add
loop
xor
sbb
rcrb
add
xor
loopne
add
sub
push
and
jno
stos
js
xor
aaa
mov
out
mov
or
out
incl
push
xor
sub
push
int3
lea
int
fnsave
clc
push
out
sub
dec
cmp
mov
sbb
adc
mov
add
push
loop
lcall
sub
mov
cmp
jecxz
pxor
outsb
mov
cmpxchg
xlat
sbb
mov
add
xor
pop
mov
mov
data16
add
in
or
add
or
xor
insb
adc
fdivl
je
icebp
std
in
push
punpckhbw
das
adc
adc
ljmp
adc
adc
adc
xchg
add
dec
adc
push
cmp
test
xchg
and
aad
mov
cmp
and
movsb
mov
mov
push
add
mov
adc
adc
mov
jmp
xor
sub
hlt
adc
test
mov
shlb
scas
and
xor
mov
jmp
cmp
sbb
mov
mov
inc
xlat
cmp
mov
mov
jecxz
push
out
mov
cltd
les
xchg
mov
shlb
lret
lods
or
or
push
cmp
sbb
push
stos
add
mov
fcomps
xchg
sub
inc
outsl
push
xchg
cs
cmpb
mov
inc
add
cwtl
mov
ja
sbb
adc
cld
add
jmp
or
and
push
pushf
add
pop
dec
movsl
push
sbb
faddl
cli
aam
into
or
daa
mov
outsb
loope
cmpsb
insl
cmp
xchg
lods
psllq
cmp
pop
mov
jnp
xchg
or
push
jl
das
lock
dec
loop
push
mov
cmc
insb
pop
mov
in
loopne
push
and
loopne
das
lods
mov
fimuls
jcxz
inc
or
sub
dec
in
jbe
push
pusha
mov
push
add
aad
into
push
cld
test
pushf
jge
int3
or
in
adc
xor
roll
aaa
and
sbb
sub
ljmp
sbb
int
xchg
pop
or
jo
jge
adc
mov
jmp
push
push
subl
cmc
pop
mov
inc
jg
sahf
push
aam
ljmp
add
js
xchg
loopne
test
mov
ja
outsl
in
push
push
cmp
jnp
xor
addl
push
mov
push
pop
mov
dec
inc
int3
or
movsb
and
jmp
cmp
mov
inc
and
mov
and
sub
and
test
cmc
mov
fidivl
insb
cmpb
sbb
cld
add
dec
add
mov
add
jge
jmp
dec
movsb
dec
movsb
pop
inc
cwtl
cmp
or
ds
insl
popf
xor
cli
adc
bound
clc
and
jnp
sub
and
in
sbb
jmp
clc
inc
jb
fldt
aas
xor
or
push
push
call
mov
push
rolb
fwait
dec
loopne
rol
pop
add
sbb
cmp
cmp
xchg
add
or
push
outsb
ret
sbb
gs
mov
mov
shrl
jo
mov
mov
jne
aaa
rorb
and
jbe
aaa
je
mov
and
cmp
lret
xor
pop
jp
xchg
sub
sbb
or
movsl
push
movsl
mov
adc
cmp
xor
lea
enter
sahf
fisttpl
test
cltd
mov
fcoms
in
push
mov
push
jbe
fstp
push
aaa
pop
inc
cmp
jns
sbb
or
imul
push
xor
loopne
nop
add
lds
popa
pop
pop
xor
xor
or
daa
roll
push
inc
clc
xor
jecxz
sbb
movsl
roll
push
jmp
jns
xor
dec
sti
in
add
cmp
sbb
cmp
adc
mov
jle
cmp
das
mov
dec
cmp
jbe
mov
adc
js
fisubl
adc
fs
inc
outsb
and
in
imul
jg
das
mov
ja
out
fnstenv
jecxz
lahf
inc
inc
push
ret
and
stc
pusha
dec
loopne
push
nop
js
pop
add
pop
loop
rcrl
rcrl
dec
lahf
adc
fisubrs
xchg
loopne
dec
sar
mov
rclb
scas
push
fstpt
testb
add
inc
loopne
fs
icebp
stos
cmovs
into
pop
dec
sub
inc
or
fcmovbe
fisubs
je
jb
hlt
fldenv
shll
loopne
cmc
pop
jns
int
xchg
or
mov
stos
push
loopne
sub
ret
jne
dec
add
sbb
sub
mov
sbb
mov
fwait
mov
sbb
insb
dec
adc
push
inc
fwait
in
lahf
dec
dec
sbb
fucomp
xorb
imul
mov
push
mov
mov
in
jp
ret
xor
nop
inc
sbb
mov
pusha
lock
add
sahf
add
icebp
mov
ret
jne
rorb
clc
pop
daa
scas
addr16
scas
mov
out
mov
dec
cli
aam
inc
fsubl
lods
jno
pop
int3
test
xchg
std
sbb
out
ret
pop
add
nop
inc
sbb
cltd
sbb
and
cmp
js
cmp
and
outsl
add
loopne
loopne
jle
hlt
movlps
into
mov
jns
inc
les
rolb
xchg
add
sbb
dec
in
test
add
sahf
decb
addl
sub
add
add
add
pop
test
test
sub
outsb
pop
jle
jge
call
or
shlb
cmp
add
or
icebp
xor
or
pushf
enter
testl
mov
shll
add
mov
pop
xchg
rclb
and
lock
xlat
mov
add
and
dec
mov
pusha
add
xlat
pop
adc
in
aam
divb
stos
cs
or
adc
aad
sbb
inc
orl
jmp
daa
icebp
and
xor
mov
sbb
fcmovbe
jo
repz
or
loop
bound
mov
clc
sbb
lahf
cmp
dec
xchg
jge
dec
pusha
xlat
lock
ss
jl
mov
or
push
mov
popf
mov
cmp
jle
mov
and
cmpb
mov
or
jmp
push
xor
xchg
inc
sbb
adc
or
or
pop
cwtl
push
sub
adc
jmp
jnp
and
mov
sbbl
xchg
xchg
sahf
adc
aas
fs
push
xor
add
mov
xor
adc
xor
inc
push
xor
into
push
cli
clc
jmp
pop
cmp
popa
clc
mov
test
addr16
stos
or
cltd
add
jbe
movsb
jb
ja
mov
ja
add
roll
mov
cmp
or
imul
jl
icebp
outsb
inc
lea
push
clc
push
call
icebp
or
push
push
test
int3
sbb
popa
mov
loopne
orb
lret
or
push
or
fdivr
mov
sbb
dec
jecxz
jp
dec
and
and
or
push
out
mov
popf
xor
jo
je
testb
jbe
cmc
and
xchg
dec
cmp
loope
mov
sbb
ret
add
pop
lea
mov
test
out
push
dec
inc
mov
adc
add
xchg
jmp
lret
fisttps
xchg
sbb
pop
dec
xlat
mov
dec
cmp
ds
stc
push
popa
nop
call
sub
and
rcl
imul
adc
inc
mov
outsl
test
xchg
add
mov
scas
and
push
mov
daa
ja
pop
add
or
mov
es
fwait
ret
pop
adcb
lret
cmp
out
lds
dec
pop
inc
iret
cmp
in
inc
lret
push
xor
dec
xchg
fnsave
push
jbe
pop
xchg
pop
and
int3
add
push
enter
je
test
icebp
add
lcall
push
push
jp
mov
xor
rorb
inc
ds
pop
xlat
dec
out
sub
sti
ficoml
std
pop
mov
xor
xor
enter
jg
adc
or
mov
pop
ljmp
sub
fcoms
mov
pop
test
cld
inc
movsb
inc
rolb
out
in
icebp
jno
outsb
jno
shlb
fs
cmp
aam
aam
mov
shll
daa
in
mov
loope,pt
push
mov
ds
inc
test
pop
hlt
push
add
push
adc
loopne
xchg
outsb
and
jnp
xorb
mov
gs
xchg
hlt
cmp
jbe
das
jo
mov
lret
pop
gs
insb
shlb
jae
js
stc
in
or
xchg
add
push
out
xor
inc
xchg
adc
cltd
in
pop
out
js
sub
outsl
and
push
cli
fadds
push
out
jne
cmp
in
imul
push
mov
repnz
add
leave
cmp
scas
fildll
or
stos
add
int3
mov
and
add
adc
dec
jl
in
jo
pop
inc
pop
jg
inc
inc
push
xor
pop
test
jbe
mov
or
icebp
das
outsb
rorb
inc
dec
sbb
or
dec
cmpxchg
add
cs
or
pop
pop
sti
jmp
cmpsl
lods
pop
daa
sbb
insl
adc
add
fcomps
ss
fwait
insl
xchg
cld
xor
or
inc
mov
mov
dec
dec
adc
adc
add
adc
push
out
add
outsl
fdivs
mov
sbb
add
inc
cmp
mov
insl
leave
enter
int
or
lock
push
clc
in
push
fs
pusha
mov
add
and
add
push
mov
or
and
add
lahf
sub
outsb
cmp
add
adc
clc
pop
sub
cltd
and
fistl
lcall
insb
mov
pushf
incb
xor
subb
ss
mov
pop
xor
sub
cmpsb
push
xor
mov
cmpsb
xor
inc
out
xor
fiadds
mov
or
cmp
or
or
add
jbe
push
test
ja
inc
dec
cmp
push
test
push
insb
sbb
mov
fwait
pop
dec
and
cmp
add
loopne
test
cmp
movsl
into
daa
fldl
repz
add
les
xchg
and
in
jnp
inc
or
imull
and
test
sbb
adc
pop
mov
insb
sbb
adc
inc
movsb
pop
or
fimull
xchg
push
mov
mov
leave
ret
jo
mov
jae
call
decl
pusha
xchg
arpl
inc
mov
jne
sub
inc
or
pop
adcb
rcrl
std
data16
jno
sub
int
movb
les
and
add
ret
push
inc
push
outsb
xchg
es
scas
add
mov
out
ret
sbb
sarl
inc
jae
les
cwtl
ds
mov
or
or
pop
mov
add
push
in
lods
lret
inc
sbb
inc
ret
fimull
push
pop
adc
cli
dec
fcom
sbb
mov
outsb
sbb
xlat
sub
sub
in
rcl
popa
pushf
mov
sbb
leave
js
xchg
cli
aam
es
add
and
outsl
xchg
add
xor
loop
in
jp
xor
and
test
mov
and
inc
and
es
leave
inc
in
sbb
test
inc
and
xor
add
mov
ret
sub
xchg
ja
or
pop
rorl
xchg
stos
sbb
sub
fsubr
push
les
jae
lcall
jecxz
pop
adcb
stc
xchg
out
fdivl
sbb
arpl
sub
hlt
lret
sbb
add
pusha
xor
js
popa
pushf
jo
mov
fwait
lods
iret
lcall
and
ljmp
pop
mov
dec
jecxz
imul
sbbb
sbb
lock
dec
or
dec
out
enter
mov
stos
mov
push
lcall
or
and
pop
jae
inc
cli
cmp
mov
pushf
lret
lahf
add
in
movl
inc
and
or
pop
addb
pusha
data16
je
lods
cmpsb
rorb
in
push
rcll
xchg
add
adc
cmpsb
outsb
xchg
mov
adc
divl
xlat
cmpsb
psubsb
inc
add
in
pop
int
mov
add
mov
mov
mov
xchg
inc
adc
clc
call
or
adc
movb
xchg
mov
roll
mov
jl
push
pop
aam
jp
repnz
pop
or
rcrl
fdivr
out
and
xchg
fadd
addr16
jno
sbb
push
imul
sti
pushf
in
mov
or
in
or
cmpsl
fdivrs
cmpsb
test
aaa
push
pop
and
or
or
jns
fidivrs
cli
add
loopne
mov
cmp
sub
mov
and
int
addl
add
push
or
lahf
lock
fstps
int3
rorl
popf
jne
sub
inc
shll
adc
fldcw
insl
lahf
mov
or
inc
arpl
mov
xor
sbb
mov
fsubrs
iret
xor
adc
inc
cmp
fdivs
sub
addl
lret
and
push
aam
sbb
add
icebp
test
rclb
ret
add
lock
pop
add
and
int
xor
sbb
mov
iret
inc
cmpsl
pop
daa
pop
js
loope
add
or
adc
insb
xor
fsubl
lods
mov
jb
push
aam
insb
in
jo
pop
ljmp
cld
push
jo
sahf
lock
inc
pop
movsl
adc
mov
pop
js
pop
movsb
in
add
pop
jb
push
int3
in
testl
mov
and
int3
iret
adcl
lcall
lret
aas
add
cmp
lcall
or
pusha
jae
stos
jg
and
fsqrt
es
xor
jo
sub
das
repz
pop
sub
add
xor
stos
xchg
arpl
sarb
pop
pop
cmpsb
mov
orb
push
mov
and
push
jg
fs
add
rcrb
push
std
mov
pop
push
lock
xor
xchg
hlt
jne
inc
inc
aaa
jge
xor
lods
lea
xorb
push
loope
jnp
popa
lea
inc
push
sub
out
lahf
in
in
sbb
inc
add
popa
jo
sub
fstps
sub
lods
adc
aas
pop
inc
jl
ds
push
or
pushaw
cld
dec
jp
sbb
flds
add
add
jo
insb
adc
lock
ret
enter
adcb
sub
fucomip
fildl
and
sbb
adc
inc
and
stos
push
clc
jmp
adc
in
shlb
daa
sub
into
scas
movsb
adc
cmp
mov
add
sbb
sbb
xor
pusha
add
sub
pop
and
add
jns
shr
adc
sbb
lds
and
add
mov
inc
cmc
fldl
xlat
push
nop
push
mov
outsb
mov
sarb
sti
hlt
daa
fs
test
iret
repz
loopne
call
sub
push
add
mov
out
subl
ss
mov
enter
mov
addb
xchg
ret
and
out
outsl
movsb
cmp
mov
adc
push
leave
clc
xchg
rclb
outsb
xchg
out
dec
loop
sub
popf
push
pop
dec
or
pop
ret
xchg
adc
lods
shlb
sbb
xorl
fsubrs
or
popa
adc
or
adc
je
sub
outsb
in
and
jno
inc
pop
mov
jae
loope
addb
je
jmp
dec
mov
cmpl
lods
and
js
pop
push
lret
mov
inc
jl
das
rorb
ret
mov
xchg
mov
mov
sbb
nop
push
or
ret
lea
pop
add
add
pop
xchg
jae
lock
movsb
pop
bound
nop
cmp
mov
ror
and
dec
push
adc
decb
mov
add
test
sub
adc
adc
xchg
lock
cltd
repnz
push
mov
xlat
push
mov
enter
add
mov
or
stos
pop
ret
sbb
dec
jo
pop
dec
sub
pop
lcall
int3
neg
inc
idivb
pop
cmp
mov
inc
scas
call
inc
inc
and
add
sbb
inc
dec
xchg
mov
aaa
jmp
pushf
movsb
and
fs
cli
jbe
decl
inc
jmp
jle
mov
jecxz
sbb
add
pop
add
fiaddl
xchg
xor
cmp
popf
fdivrl
jg
and
in
mov
and
fstps
add
jns
xlat
pop
cmpsb
cmp
roll
inc
sbb
out
lret
mov
push
pop
leave
jp
mov
lods
pop
or
movsb
rcr
mov
pushf
jno
fidivrs
sub
sbb
mov
inc
or
mov
loopne
scas
push
inc
adc
add
cld
mov
add
pop
sbb
mov
cs
nop
adc
gs
xchg
out
adc
push
mov
in
adc
js
push
mov
mov
dec
sbb
fstpl
addr16
inc
mov
je
xor
cmp
stc
push
cmp
cmp
rorl
push
ret
jmp
and
je
movsb
shlb
pop
pop
aaa
inc
clc
jmp
imul
mov
mov
xor
movsl
out
adc
push
push
pop
push
mov
mov
adc
mov
sub
add
mov
gs
ja
lods
adc
pop
orl
sbb
pop
shlb
xlat
sbb
xchg
popa
mov
jge
iret
mov
xor
lret
push
sub
sbb
aaa
mov
aam
les
in
bound
loopne
mov
adc
scas
test
jne
push
fdivrl
add
repz
js
movsl
mov
filds
fcmovne
rorb
sub
scas
pop
add
shrb
and
cmp
loopne
jo
mov
test
pop
push
xchg
sub
sbb
ljmp
xor
jle
pop
roll
xchg
rorb
push
cld
dec
adc
jnp
sbb
call
dec
xlat
push
xor
je
pop
xor
pop
dec
lock
mov
inc
sbb
xor
loop
mov
sbb
je
loopne
pop
mov
mov
pop
inc
scas
adc
neg
leave
and
add
sbb
mov
es
push
stc
pop
sbb
add
mov
and
jmp
ljmp
cmp
pop
xor
push
stos
fneni(8087
push
clc
ret
mov
pop
lcall
sbb
rorb
sbb
insl
add
sbb
and
jae
push
loopne
xor
aad
sub
das
pop
fcomps
jecxz
jmp
hlt
mov
jge
dec
and
inc
jmp
adc
push
xchg
daa
cmp
lock
call
jl
pusha
adcl
cmp
addb
pop
sbb
or
or
push
sbb
xchg
jmp
sub
mov
ret
dec
or
xor
pop
repz
push
add
inc
inc
fadds
pop
inc
lea
mov
dec
and
mov
push
loopne
mov
push
mov
mov
inc
push
lods
jmp
push
push
jmp
sub
or
bound
and
mov
mov
sbb
inc
xchg
and
or
mov
test
clc
adc
add
adc
sub
adc
cmp
mov
sbb
or
das
jecxz
shll
or
jo
xor
push
int3
jp
adc
neg
adcb
xor
repnz
jne
rcrb
dec
movsb
mov
in
xor
cmp
dec
dec
aam
hlt
add
orl
pusha
add
mov
stos
int3
shrl
push
sub
mov
add
mov
test
pusha
arpl
add
push
ljmp
mov
rolb
dec
ljmp
xor
stos
mov
movsb
out
andl
mov
roll
xor
dec
pop
cmp
rcrb
roll
push
movsl
or
jo
cmp
into
loope
ss
or
add
or
push
cli
cmc
cmpsb
push
inc
loope
dec
and
aaa
std
adc
mov
xchg
mov
mov
or
pop
mov
mov
call
lret
iret
xchg
xchg
fcmovb
pop
shlb
rclb
rolb
icebp
testb
or
xchg
pop
repz
and
inc
or
ror
cs
push
push
call
add
push
int
repz
mov
test
xchg
addb
rol
push
ret
xor
add
cltd
ret
lret
add
and
addb
add
test
mov
out
ds
sbb
add
pushf
or
rorb
dec
mov
push
pop
xlat
dec
cli
dec
clc
fnstenv
push
fimull
cmpsb
in
lea
mov
lods
mov
aas
mov
add
jmp
shlb
mov
loopne
sarb
divb
pop
add
dec
sub
popf
push
clc
mov
fldt
sub
jb
mov
shr
fwait
cmpsb
ds
mov
aaa
cltd
xor
not
and
insb
lods
aas
or
aas
inc
pop
add
fmul
das
loopne
pop
mov
pushf
cli
xchg
lods
mov
in
adc
xchg
or
sbb
jp
or
lods
mov
mov
daa
icebp
xor
cmc
mov
dec
icebp
push
sarb
bound
lret
bound
dec
loopne
fcoml
ljmp
ret
lods
inc
mov
push
adc
out
add
js
inc
add
ja
mov
rorb
pop
aad
sub
xor
and
mov
and
cs
push
dec
mov
push
xchg
dec
js
lea
and
add
push
mov
aaa
in
jo
cmp
notl
in
test
or
add
rorb
inc
enter
fwait
lret
push
je
addb
push
ret
enter
mov
jnp
xchg
mov
xchg
push
cmpl
adc
sbb
movsb
hlt
ret
pop
dec
test
push
mov
mov
sub
push
jle
xor
stos
cs
mov
inc
repnz
imul
mov
and
sub
or
inc
inc
dec
cmp
dec
push
in
js
aam
sub
fs
stos
inc
sub
in
push
add
mull
mov
sub
jp
outsb
dec
je
call
cmc
scas
inc
mov
test
pop
sub
ljmp
cmpsb
sbb
or
mov
xor
sub
cmc
jno
add
mov
sbb
add
jae
les
xor
inc
push
push
push
mov
push
push
xor
enter
jb
jb
movsb
xor
je
push
mov
mov
xlat
mov
ljmp
adc
arpl
cmp
rorl
cld
ljmp
stos
lahf
add
adc
lret
into
out
mov
and
mov
sbb
xchg
adc
sub
lds
xchg
mov
sahf
fadds
ret
cmp
loope
push
addr16
pop
ja
out
and
loope
xor
pop
xor
pop
loopne
sbb
jne
int3
into
in
enter
adc
adc
add
xlat
lret
dec
xchg
push
push
dec
repz
pusha
or
push
ljmp
les
out
je
mov
xchg
lods
mov
shrb
jne
sbb
mov
pop
in
clc
out
xor
sbb
repnz
out
pusha
cmpsb
adc
jbe
arpl
cli
mov
xchg
int3
enter
movsb
lret
lock
loope
pop
dec
jle
xchg
lsl
add
movsl
and
jge
ljmp
ljmp
aam
add
test
shrl
and
loope
mov
outsl
loop
mov
lock
test
mov
add
cwtl
nop
sbb
arpl
add
sbb
and
inc
add
in
lret
mov
mov
addl
mov
cmpsl
pop
cmp
jne
mov
cmpb
push
insb
mov
add
add
sar
add
push
push
cmp
ficoml
mov
xchg
inc
stos
lret
or
sbb
enter
mov
ja
xor
jbe
dec
adc
js
adc
push
and
jae
pop
lock
test
lea
shrb
pop
repnz
ds
jae
add
push
inc
dec
in
push
mov
pushf
pop
and
adc
xor
test
cmp
pop
repz
and
aam
fdivrs
fstl
mov
add
out
rcl
mov
sbb
jno
call
adc
xor
cmp
aam
fwait
cmp
push
clc
push
std
enter
iret
xor
in
push
incb
xchg
les
add
adcb
xchg
or
sbb
adc
daa
das
icebp
sahf
les
sbb
or
test
xchg
inc
and
test
les
jne
xor
jmp
pop
mov
push
jne
loope
lock
mov
rcrl
popf
orl
loopne
jmp
sbb
lock
shr
ss
popa
mov
or
movsl
cs
pop
cmp
hlt
lds
sbb
pop
lock
in
clc
icebp
or
cwtl
inc
mov
and
gs
shlb
adc
jg
add
pushf
outsl
int
test
ja
sub
or
or
mov
sbb
pushf
incb
sbb
js
inc
shlb
stos
push
movl
pusha
dec
in
sbb
cld
pop
outsl
loope
jle
aam
add
xorl
push
dec
in
xor
adc
push
jno
adcl
pop
mov
push
test
xor
mov
aas
fldcw
iret
pop
out
ja
jge
mov
fisubs
xor
cs
inc
push
xor
add
sbb
pop
in
and
sbb
fldl
adcl
mov
faddl
add
loope
imul
sub
addr16
add
scas
xor
or
rolb
mov
mov
test
add
sbb
rol
fs
loopne
ret
push
and
xchg
mov
shrl
add
push
pop
rolb
iret
xorl
pop
mov
lcall
je
mov
push
fildl
in
scas
sub
mov
pop
inc
cmp
mov
or
or
pop
mov
aas
mov
call
xor
orl
sub
jmp
mov
inc
xchg
mov
and
xor
in
mov
add
pop
rolb
or
rcr
sbb
cli
add
lods
jmp
ds
cld
clc
repz
loopne
aam
rorl
or
lock
sti
cmpl
adc
loop
aaa
insb
dec
outsl
sti
jae
fs
inc
outsl
roll
pop
or
inc
lods
xlat
xchg
lods
dec
inc
loop
addb
dec
aas
out
push
sub
add
push
dec
mov
mov
in
jno
das
cmp
jnp
scas
movsb
jae
es
mov
shrl
xchg
push
inc
add
mov
pop
clc
das
inc
dec
ret
push
testb
mov
or
stc
pusha
dec
sub
or
sbb
fcomps
sub
xchg
lock
xor
inc
push
ljmp
outsb
imul
or
arpl
jnp
jbe
js
ret
notl
push
jle
sub
xor
or
add
jbe
jbe
cmpsb
mov
loope
aas
mov
repnz
jmp
ret
gs
std
push
push
ljmpw
cmp
or
dec
psubb
pop
js
repz
icebp
ds
add
jl,pt
add
jl
mov
insl
ret
add
cmp
imul
outsl
xchg
add
dec
xor
sub
push
xor
xchg
lds
and
xchg
add
xchg
fsub
and
cmpsb
or
imul
ret
jmp
in
pop
push
push
sarb
mov
pop
cmp
ljmp
out
mov
mov
stos
jns
call
or
and
adc
inc
call
movsl
pop
hlt
inc
pop
inc
call
call
sbb
scas
hlt
cld
xchg
push
push
ja
xor
inc
jecxz
cmpsb
fildll
sub
adc
xor
sbb
cmp
fdivs
and
pop
cmp
add
adc
sbb
inc
sub
inc
int3
mov
test
or
cmc
insl
hlt
dec
or
fnstsw
and
pop
int3
inc
xor
or
push
negl
loopne
add
sub
jecxz
fists
inc
cmpsb
fcomps
xor
push
xchg
mov
cmp
roll
mov
sbb
pop
jp
fbstp
and
cmp
and
add
ss
lods
cmc
mov
push
xchg
xchg
pop
pop
adc
popf
lods
call
out
xor
xchg
ret
js
fiadds
into
fadds
or
ret
je
leave
je
mov
lret
xlat
dec
xor
pop
mulb
sbb
xchg
xchg
fcomps
cmp
xchg
add
or
insb
insl
jl
mov
ret
add
and
push
xor
test
push
cld
lock
and
and
add
outsb
popa
and
pop
sbb
cmp
cmc
loopne
fildll
test
jb
add
ljmp
and
xor
lcall
push
incl
jmp
test
ja
aas
addb
loopne
add
daa
iret
test
rol
mov
enter
add
stos
mov
in
mov
nop
data16
jecxz
jne
add
ret
xchg
jae
inc
je
adc
pop
jo
sti
dec
mov
arpl
jne
leave
cltd
sahf
add
sbb
gs
push
lods
daa
cmpsl
mov
loop
popf
push
dec
jecxz
push
inc
cmc
aaa
xor
sub
lcall
cs
push
inc
adc
pop
movsb
mov
add
sbb
pushf
aaa
xor
cltd
and
or
and
push
pushf
xchg
or
or
sbb
xchg
and
scas
or
sbb
push
mov
ret
mov
jne
jmp
fistpll
mov
iret
jb
push
in
movsb
rcrl
ljmp
outsb
shll
adc
pop
dec
jmp
icebp
cmpsb
movsb
push
mov
fisttps
int3
icebp
fcomip
clc
push
jne
xor
inc
jmp
or
ret
push
daa
inc
push
jp
and
orb
adc
mov
pop
adc
addl
insb
cmpsl
push
jns
add
test
mov
xor
pop
or
and
pop
xchg
jmp
dec
call
mov
inc
add
mov
cli
jg
js
inc
fcoml
lods
icebp
xchg
xchg
sti
clc
loopne
adc
cld
sub
mov
inc
out
cmpsb
or
ret
adc
aas
jmp
add
and
inc
add
jge
sarb
idiv
shll
mov
inc
add
add
mov
or
cli
es
out
cmp
add
cld
ljmp
fists
daa
xor
clc
pusha
mov
xchg
push
pop
sub
pushf
xchg
and
mov
stos
sti
adc
or
xor
jns
xor
xchg
fisubrl
lea
jp
push
movb
fmuls
mov
sarb
pop
sbb
js
add
pusha
or
mov
xor
adc
inc
adc
shlb
push
mov
sub
call
cld
ss
dec
add
add
clc
inc
jl
cmpsb
aaa
decb
xchg
sub
mov
mov
fsubrs
mov
ret
pop
sbb
sub
sbb
cmpsb
scas
ljmp
add
adc
lds
rcll
test
std
inc
sub
sub
adc
rorb
push
push
ret
jmp
mov
mov
jno
or
add
push
divb
aam
aam
cmova
cmp
enter
test
jbe
inc
dec
filds
xchg
dec
enter
push
sub
inc
and
push
sub
sbbb
inc
adc
scas
sub
xor
lock
add
push
sub
push
js
adc
add
cmp
idivb
pop
mov
sub
lcall
rcl
xor
pusha
xor
add
pop
movsl
add
pop
pop
inc
call
jnp
inc
add
jne
or
cmpsb
addr16
insb
cld
and
call
add
push
mov
mov
push
call
insb
es
sub
cld
mov
les
sub
ret
shrb
sarb
or
add
ficoms
push
aas
popf
pop
add
rcr
adc
mov
jle
dec
repnz
lea
ret
add
pop
sub
add
or
fsts
xor
sub
mov
or
adc
push
mov
mov
cmp
data16
ds
in
jge
popf
ret
sbb
add
push
loopne
adc
sbb
in
fisttpll
xchg
mov
adc
imul
test
loopne
add
pop
or
stos
ljmp
dec
test
pop
andb
and
and
call
vmovups
xchg
test
mov
inc
mov
inc
jge
sti
popf
push
ds
sub
push
add
adc
rcr
sub
test
sub
sub
idivb
inc
sbb
push
jo
lcall
push
outsb
push
or
sub
jb
loope
std
adc
fsubr
nop
add
cmp
inc
jl
adc
hlt
fs
lcall
ror
push
pop
jmp
xlat
jge
in
xchg
xor
in
and
outsl
pop
mov
outsl
dec
jbe
aas
sbb
das
adc
cmp
mov
jmp
in
movsb
cmpsb
sbb
lret
test
sbb
or
test
mov
cmpsb
nop
pop
sub
vunpcklpd
inc
pop
pop
sbb
or
xchg
xchg
sbb
or
mov
jmp
and
loope
or
ja
insl
sbb
fadd
fcoml
ds
add
scas
mov
dec
lods
xor
sub
sbb
adc
scas
push
pop
add
sbb
add
rclb
aad
addr16
add
sbb
inc
das
inc
arpl
sbb
dec
sub
inc
pusha
pop
xchg
mov
bound
cmpb
in
mov
nop
subb
xchg
data16
cmp
enter
sub
loop
rorb
cmp
cld
mov
jmp
adc
sbb
xchg
inc
push
loopne
cmp
mov
push
push
mov
or
movb
in
rcl
push
mov
call
push
loop
enter
or
or
mov
mov
cmp
mov
loope
dec
mov
push
nop
pop
aad
sub
jmp
add
push
push
aas
shlb
mov
sub
or
mov
cmc
and
mov
sub
inc
cmp
leave
iret
fnstsw
xor
repz
or
adc
sub
push
rclb
loope
xlat
jb
jg
adc
mov
mov
repnz
out
xchg
sbb
lea
pop
adc
jecxz
and
xchg
adc
shlb
cmpsb
mov
ds
add
xchg
pusha
cmp
push
sub
pop
sbb
xor
add
adc
scas
mov
fdivrs
xor
es
iret
add
mov
dec
xchg
es
ficoms
push
rcrb
sub
daa
or
dec
jo
cs
sarl
xchg
lret
js
mov
aam
adcb
cltd
shlb
adc
sub
dec
and
pop
fsub
sbb
popa
fistpll
stos
mov
cmp
adc
insl
cmp
outsl
fcomps
mov
lods
inc
mov
fs
add
add
add
jno
or
insl
imul
lods
pop
aam
popl
dec
mov
orl
push
jge
icebp
sub
sarb
fwait
addr16
xchg
pusha
xor
loopne
enter
mulb
les
les
loope
orb
andb
or
rorb
js
loop
jge
mov
mov
dec
xlat
add
jmp
jp
dec
cmp
call
iret
pop
js
shr
fmuls
and
icebp
hlt
int3
mov
lcall
inc
bound
pop
clc
xchg
lods
outsb
pushf
add
mov
into
mov
mov
bound
pusha
test
or
xor
fidivrs
add
xchg
push
fwait
inc
sbb
ss
dec
shll
or
insb
loopne
dec
aas
dec
add
xorb
xor
add
or
fwait
lds
pmaxub
jbe
sbb
mov
sbb
dec
stc
rol
mov
xchg
ret
int3
imul
pop
pop
sbb
je
jecxz
out
and
pop
xor
or
sub
xor
rcrl
push
push
lods
cmc
sahf
dec
in
jl
or
addr16
loopne
lods
movsl
push
inc
or
pusha
jg
mov
pop
mov
or
clc
pop
mov
adc
subl
or
add
or
xchg
push
pop
test
test
sbb
xor
add
sbb
mov
mov
xor
aam
xor
or
pusha
and
fiadds
fisubs
inc
stc
push
popf
jb
jg
or
push
in
jne
xchg
mov
adc
push
pop
add
mov
movsl
into
push
shlb
outsb
pop
dec
xor
push
rol
sti
or
inc
js
daa
xor
or
lret
out
loop
incb
lcall
push
sub
mov
sub
add
mov
pusha
xchg
int
lock
fwait
cmpsl
inc
test
loope
pop
push
xor
mov
pop
xchg
lods
push
lock
lods
in
xor
sub
pusha
nop
pushf
push
insl
insb
std
mov
pop
mov
hlt
imul
xor
jne
divb
adc
cmp
out
or
mov
orb
add
or
push
arpl
div
into
inc
shlb
add
lret
adcl
cmpsl
or
pop
fdiv
mov
in
imul
rolb
xchg
cmp
or
movsb
pushf
add
lea
faddl
cld
ss
mov
push
add
mov
mov
jo
and
mov
fbld
test
jmp
fstl
push
loop
inc
mov
fistps
xadd
fimull
addb
fisubs
push
and
adc
mov
cmp
in
pop
ficompl
pushf
push
ds
ret
in
adcb
or
in
in
push
lods
push
sbb
iret
mov
or
cmp
push
adc
jecxz
jae
cli
shlb
dec
xchg
jecxz
mov
add
ret
jg
and
jmp
cmp
xchg
jo
dec
lock
ret
and
shrb
xor
js
aas
and
jg
cld
cmpb
js
push
call
js
test
dec
sub
mull
adc
sub
insb
cmp
xor
cwtl
dec
arpl
push
les
dec
adc
inc
add
es
add
fistpll
call
cmp
popa
add
add
outsl
popa
jno
loopne
clc
xor
mov
into
test
cld
sbb
stos
mov
xor
rclb
pop
mov
and
xor
movsl
jo
xchg
dec
pop
or
je
test
daa
or
push
inc
hlt
xor
inc
fldl
pop
add
cmp
icebp
fimuls
les
lods
dec
and
lcall
dec
in
sahf
loopne
ja
cmp
push
inc
daa
rolb
cmp
mov
pop
adc
mov
sbb
clc
stos
incl
inc
sbb
push
sbb
sbb
jg
pushl
inc
sbb
sbb
xchg
mov
xchg
imul
lahf
inc
pop
out
mov
sbb
test
jb
clc
pop
add
pop
cmp
mov
push
ret
sbb
dec
rcrb
adc
mov
andl
js
jno
push
mov
js
xchg
fstpt
aam
idivb
cmc
fs
test
jp
mov
push
test
in
jno
pusha
xlat
and
lahf
fcmovbe
inc
pop
and
sub
pop
push
adc
rclb
imul
jge
and
push
stc
cli
jmp
cli
push
mov
cmpsl
lock
call
xchg
in
sbb
in
mov
mov
xchg
pop
add
cmovae
cld
dec
inc
lret
inc
in
ficomps
sbb
mov
pushf
jno
loopne
mov
fwait
xorb
lret
cmp
daa
mov
xchg
jg
xor
jmp
sbb
ret
sub
and
cmp
sub
inc
mov
fmuls
cmpl
inc
push
fsubrp
int
pcmpgtd
outsb
enter
arpl
xchg
jo
fcoml
mov
sub
push
sarl
dec
iret
popf
jb
jmp
std
popa
fs
sbb
inc
in
push
inc
xchg
sub
scas
mov
cmp
pop
ret
adcl
lds
pop
jno
cmp
add
sti
test
shrl
adc
lea
sub
dec
ret
shrl
imul
mov
and
jge
jl
inc
aam
xor
sub
push
xchg
jne
test
bound
leave
pop
stos
xchg
dec
leave
xorl
xchg
jecxz
xchg
sbb
and
shrl
push
lea
test
xor
fsubrp
dec
dec
or
cmp
mov
pop
cmp
roll
mov
sub
xor
push
add
fsubrs
cltd
push
mov
lret
lcall
inc
lea
xor
enter
push
shrb
add
leave
mov
fs
inc
sbb
xor
adc
scas
cmc
stos
jp
xchg
sbb
add
mov
push
cli
and
aas
in
imul
add
jb
dec
or
xor
pop
int3
in
add
xor
in
pop
call
addl
mov
mov
xchg
sbb
or
int3
jo
loope
das
adc
fsubr
cwtl
mov
xchg
mov
add
inc
es
mov
hlt
in
jp
xor
mov
mov
inc
out
test
imul
fists
dec
loope
and
or
fbld
mov
jne
push
inc
jno
xor
sar
enter
add
js
inc
xor
lods
and
xor
rolb
xor
loope
xor
push
loopne
adc
ja
les
xchg
xor
xchg
sub
rcrb
bound
push
cmp
add
pop
mov
lds
insl
dec
mov
bound
popa
sahf
add
pusha
sub
loopne
lods
sub
in
inc
sbb
push
dec
loop
add
rclb
std
cmp
repz
add
jg
sub
lret
ja
pop
testb
out
lods
pusha
add
mov
xor
imul
jmp
add
test
in
shrl
xchg
or
sub
and
aam
dec
xchg
inc
mov
nop
jo
mov
sbb
shrl
movsl
call
and
out
inc
add
test
out
dec
mov
sbb
and
mov
sub
sub
or
push
add
mov
jg
adcb
divb
jmp
pop
pop
sarb
push
push
mov
jno
roll
adc
and
mov
addr16
aas
sub
cmp
add
mov
push
pop
call
shll
dec
sbb
cli
push
rorb
mov
pop
or
inc
or
push
call
mov
xchg
and
andl
sbb
shl
inc
dec
mov
mov
mov
daa
inc
dec
ja
adc
add
inc
pop
fmull
sbb
test
sbb
gs
or
sub
push
ret
mov
sahf
addb
xchg
push
and
out
sysret
addl
mov
ret
dec
sub
adcl
add
mov
push
bound
sub
jmp
push
rcr
add
or
fstpt
dec
adc
xlat
fisubrs
aam
roll
jp
aad
jno
or
bound
jmp
or
pop
mov
dec
test
aad
inc
lock
jae
sbb
fwait
cmp
enter
lea
jb
scas
mov
rorb
mov
std
stc
sub
loopne
add
subb
lock
int
lds
jo
cld
popa
or
mov
lods
pop
add
mov
gs
pop
adc
roll
sub
xchg
adc
pop
out
movsl
stos
jne
popf
mov
cmpsl
repz
ja
bnd
mov
lods
roll
mov
je
mov
in
and
inc
lock
or
pop
ljmp
daa
mov
je
lcall
mov
adc
and
loopne
daa
pop
add
pusha
adc
and
push
in
and
and
loopne
ud2
cmovae
rolb
add
outsb
adc
cld
dec
cwtl
mov
popf
lahf
ret
push
sub
js
and
sbb
mov
lock
loope
cmc
sbb
add
and
punpckldq
sahf
xlat
xor
flds
xchg
xchg
iret
out
imul
test
cmp
scas
adc
inc
cld
hlt
adc
fstps
bound
mov
inc
imul
icebp
popf
js
test
mov
nop
js
test
xor
push
mov
outsl
add
jg
data16
inc
addr16
add
mov
cld
adc
dec
lock
cmpsb
ss
les
andl
cmpsb
add
mov
xchg
mov
into
xor
test
xor
push
sbb
cs
mulb
push
mov
int3
mov
or
inc
fwait
dec
push
inc
and
adc
and
popa
xchg
int
push
cmpsl
cld
rorb
mov
in
pop
and
dec
push
xchg
jp
add
mov
push
sbb
and
push
fdivs
loopne
ja
in
or
in
out
mov
adc
adc
or
and
ret
cmpsb
inc
or
sub
jge
adc
lock
jo
std
lahf
mov
dec
cmpsl
or
dec
push
xchg
test
stc
lock
clc
or
leave
and
popa
scas
dec
sbb
xor
pop
or
add
add
aam
dec
das
in
daa
bound
inc
aaa
stc
shll
out
cld
inc
add
add
dec
cld
dec
mov
mov
add
frstor
addr16
mov
call
ret
test
mov
xchg
mov
mov
xor
mov
test
stos
out
enter
loope
dec
aam
adc
iret
sahf
jmp
mov
sbb
sub
xchg
rcr
lahf
cld
stos
lods
lret
sbb
dec
cli
loop
icebp
sub
xor
and
insl
rcr
jge
addl
popf
rcl
or
andb
jno
stc
xchg
or
xor
jp
shl
andb
push
negb
mov
rolb
jecxz
into
inc
negb
testl
lock
adc
adc
dec
test
jno
cmp
mov
mov
jbe
les
sbb
daa
aaa
mov
or
in
jmp
xor
andb
xor
hlt
mov
mov
sbbl
int3
orb
repz
ret
xchg
js
xchg
daa
daa
js
xor
jmp
sbb
pop
sbb
pop
ss
je
repnz
ret
sbb
nop
ja
and
loopne
jmp
xor
in
push
scas
repnz
in
push
push
sub
mov
insl
mov
pop
je
sbb
lret
aam
mov
inc
sbb
stos
jae
lods
cmc
or
add
fistpll
push
jno
push
imul
outsb
or
inc
push
movsl
add
cmpsb
xchg
sar
jp
pop
aaa
fdivrs
add
icebp
dec
loope
nop
xor
mov
push
dec
mov
adc
out
and
add
adc
push
icebp
add
mov
push
movsl
mov
sbb
dec
inc
je
roll
js
es
adc
inc
je
sub
mov
out
inc
mov
sub
fwait
ss
sbb
sub
pop
adc
and
xchg
ljmp
dec
cmc
mov
popa
sbb
or
mov
mov
jo
or
adc
inc
sub
in
mov
cli
addr16
jg
push
in
push
call
pop
shrl
cmp
pop
add
mov
dec
loopne
xor
jl
lret
mov
pop
cmp
enter
push
mov
xchg
inc
loop
mov
das
inc
mov
sbb
dec
icebp
cmp
int
lea
mov
aaa
mov
inc
and
and
xlat
xchg
jecxz
sbb
push
xor
sub
push
mov
sbb
ret
ret
pusha
push
mov
jmp
loopne
push
dec
ljmp
push
dec
xchg
test
fistpll
adc
repz
out
xchg
test
js
addb
in
sub
cmp
add
mov
fildll
out
fs
adc
xchg
inc
or
loopne
js
sbb
jmp
mov
fsubs
inc
sub
loope
pop
pop
int
lea
loope
jmp
js
mov
xchg
pusha
xor
jo
mov
push
loopne
loop
sbb
insb
sarb
sbb
adc
es
in
leave
cltd
pop
or
mov
add
icebp
out
push
jecxz
shr
push
pop
pop
jg
invd
or
aad
iret
and
adc
and
lea
sub
mov
mov
jecxz
xor
jl
imul
sub
adc
and
mov
cmpl
mov
xchg
fsubrl
shrb
in
fildl
add
cmpsl
add
fnstcw
icebp
loope
cwtl
push
dec
mov
fildll
pop
ffree
outsb
pop
jle
das
test
or
bswap
js
aas
or
adc
xor
rolb
mov
add
ret
and
xor
sbb
rorl
lock
xor
sub
pop
addl
add
pop
jmp
ja
mov
nop
leave
pop
loop
pop
push
nop
or
sti
sub
sbb
jmp
pop
shr
js
add
sbb
imul
daa
je
xlat
and
add
inc
jl
rorb
xlat
shll
add
mov
xor
mov
daa
arpl
mov
not
daa
push
arpl
push
mov
or
jb
and
dec
mov
mov
loope
cld
sbb
xchg
mov
lea
pop
pusha
addl
cmp
pop
jl
xchg
and
push
mov
call
les
insl
mov
adc
aaa
jg
outsb
inc
dec
loope
outsb
and
adc
dec
js
add
test
xchg
imul
jle
subl
sarb
jnp
adc
aam
add
cmp
lods
je
out
imul
js
xor
xchg
push
adcb
adc
mov
xchg
outsl
popf
mov
enter
fstpt
sbb
outsl
sbb
add
adcl
pop
in
and
xor
pusha
les
push
jecxz
xor
mov
data16
mov
mov
rorb
jp
add
inc
js
pushf
cld
sub
cwtl
jno
scas
mov
ret
cmp
pop
dec
dec
sti
mov
jp
loope
add
jmp
pop
or
add
arpl
loop
inc
cmpsb
les
pop
cmp
and
and
scas
mov
pop
cmp
add
jns
push
test
or
adc
xor
jle
xor
push
push
shrb
push
outsl
dec
push
xorl
hlt
or
test
repnz
or
dec
pop
into
dec
xchg
loope
mov
ret
inc
xchg
clc
hlt
inc
inc
cmp
add
cmpsl
xor
dec
or
inc
out
fisubl
mov
adc
xchg
bound
lods
adc
lcall
lahf
nop
rcrl
adc
in
add
or
call
add
or
cmp
jl
out
les
push
add
add
pop
fs
loopne
cmp
int
lea
loope
jno
pop
in
adc
inc
shl
mov
dec
xor
push
push
xchg
push
push
pop
cld
push
mov
adc
add
push
outsb
iret
jne
call
push
mov
adc
sub
inc
mov
and
arpl
fdiv
mov
clc
dec
mov
decl
imul
add
push
add
pop
cmpsb
sbb
add
out
je
add
addb
cmc
lret
xchg
push
xchg
pusha
cmp
xorl
mov
test
popf
test
js
or
hlt
mov
push
add
ds
cmp
les
lods
mov
mov
flds
dec
pop
and
mov
jbe
push
mul
dec
call
jmp
mov
sub
cmp
push
ds
add
adc
mov
sub
dec
jmp
sub
pop
lret
lret
cmpsb
lods
or
daa
or
sbb
add
or
js
iret
dec
icebp
sbb
lods
dec
inc
dec
cs
or
sti
aam
sbb
sub
mov
mov
xor
adc
or
fdivrl
add
or
add
mov
test
xchg
inc
cmp
add
addl
loopne
pop
clc
jg
ret
jmp
or
mov
xor
push
add
sub
add
add
movl
loope
inc
dec
sub
das
cmp
repz
sahf
idivl
xchg
nop
sbb
outsl
lret
inc
sbb
mov
ja
fsubl
adc
mov
mov
dec
xchg
out
dec
icebp
cmp
add
sbb
mov
loopne
push
mov
or
addl
lds
mov
mov
jge
lcall
and
or
mov
cmpsl
mov
aaa
mov
mov
dec
and
sbb
fistl
jbe
xor
ja
stos
movsl
icebp
ret
mov
test
hlt
inc
cmp
jns
sbb
xchg
inc
mov
loop
xor
loop
or
sub
and
fs
sub
adc
inc
mov
cwtl
add
daa
cmp
lods
cs
xor
push
lock
inc
xchg
mov
loope
pop
lea
ljmp
inc
mov
and
xor
pop
or
pop
and
out
call
adc
adc
mov
loop
adc
incl
repnz
dec
jmp
clc
xchg
sub
clc
rcl
adc
pop
jnp
rolb
pop
cmp
call
ljmp
adc
inc
dec
push
rorb
mov
fistpll
fcoml
outsl
xlat
pop
sub
dec
test
call
or
shl
pop
fcoml
stc
sub
inc
std
filds
or
push
and
xor
sbb
mov
mov
loopne
dec
pop
jb
es
xchg
jge
loopne
in
imul
push
pop
popa
test
sub
lea
pop
cmp
rorb
pop
sub
fwait
sub
call
mov
cmp
das
call
popa
js
nop
test
xor
adc
mov
cmp
pop
and
cmc
shrd
xor
fisubrs
push
arpl
stos
dec
sub
popf
xor
inc
ret
ret
loopne
pop
xchg
mov
xchg
push
jmp
sbb
mov
xchg
filds
popa
dec
call
test
pusha
ret
pushf
adc
mov
outsl
sahf
mov
mov
cmpsb
ss
je
or
and
test
stos
mov
xor
or
cwtl
or
sbb
inc
mov
inc
rclb
xor
push
jbe
out
sbb
inc
push
pop
sbb
mov
in
add
lea
hlt
push
repz
cmp
lods
jp
cmpsb
aam
dec
movb
aas
cmova
add
cmc
jmp
mov
mov
push
fstpt
mov
xchg
jmp
sbb
out
test
daa
dec
aas
or
stos
cmp
xchg
ja
stos
movsl
ret
jecxz
aam
loop
jbe
mov
dec
push
add
push
in
test
sub
cmc
rcr
fnsave
inc
out
pop
and
push
pusha
fwait
pop
mov
imul
setbe
daa
mov
fsubrs
es
in
xor
dec
mov
and
add
in
cmp
inc
mov
pop
mov
mov
inc
inc
rcrb
sbb
call
dec
aad
lock
int
or
inc
push
out
xchg
and
decb
dec
test
inc
pop
cwtl
test
xor
js
jge
pop
movsl
call
sbb
fisubrs
arpl
add
jmp
push
andb
aam
sub
and
mov
in
sub
inc
inc
add
dec
loopne
lea
jmp
loopne
inc
jno
mov
popf
jmp
cmp
int3
push
mov
popf
fcoml
sbb
mov
push
call
mov
int3
xor
icebp
xchg
xor
jecxz
hlt
or
adc
mulb
or
adc
push
xchg
andl
lret
jnp
sbb
mov
aam
scas
loope
daa
ror
sbb
sarl
mov
xor
sub
mov
xor
imul
scas
push
rolb
inc
mov
mov
dec
mov
push
cs
jle
sub
xor
aam
mov
pop
enter
add
push
mov
xchg
in
and
sub
sarl
push
es
rcr
add
xchg
sbb
xchg
cmpsl
dec
inc
mov
ret
xor
pop
or
int3
add
das
sub
pushf
jle
rcr
dec
adc
rolb
or
ret
lret
and
mov
sub
sub
add
movsb
sub
aam
loop
push
pop
jp
cmc
lock
imul
rorb
and
xor
dec
or
jg
push
sbb
shrb
adc
repnz
aas
in
adc
sub
adc
inc
push
add
and
orb
mov
xchg
pop
nop
cs
push
adc
push
or
test
jb
pop
inc
dec
cmp
loop
inc
pop
int
in
popf
jmp
adc
popl
fs
cmp
or
sbb
add
stc
adc
popa
jmp
mov
xchg
xorb
cld
push
or
cmp
inc
cli
mov
or
mov
jne
mov
test
add
cmpb
aam
push
loop
xchg
mov
cwtl
xor
popa
js
nop
dec
int3
and
stos
faddp
mov
fs
xchg
dec
jg
roll
xchg
mov
rolb
in
adc
test
aaa
add
test
jge
mov
xchg
das
sub
loope
push
adc
dec
int
movb
mov
xlat
cltd
jge
dec
lret
out
push
jmp
out
mov
les
mov
xor
or
lcall
mov
sbb
lret
repnz
add
add
and
pop
pop
xor
aas
xor
or
push
add
inc
mov
push
push
clc
push
sarb
dec
push
pop
or
push
push
lock
and
sbb
stc
inc
lods
fstpt
inc
or
lods
pop
lcall
pop
inc
in
movsl
fldcw
add
imul
loop
cmc
call
mov
pop
push
pop
inc
mov
or
test
rclb
mov
fildl
jp,pn
or
sub
pop
lahf
in
push
adc
dec
inc
and
mov
mov
adc
orl
fcoms
mov
adc
mov
cli
dec
out
add
add
scas
mov
or
rorb
mov
and
lds
or
aam
sbb
and
lods
xor
inc
loope
or
hlt
xchg
shrb
fdivrs
rcr
or
lock
sbb
sbb
stos
dec
faddl
shlb
je
xlat
ret
lahf
push
mov
dec
lock
shrb
ljmp
xor
sbb
or
push
arpl
add
cmpsb
sbb
inc
xor
mov
dec
lret
add
mov
test
or
outsl
lods
orl
pop
jno
mov
or
xor
xor
stos
jne
push
movsb
dec
and
jo
push
popa
imul
sub
or
push
out
lahf
xor
jecxz
mov
mov
jmp
aad
adc
int3
sbb
add
lock
pop
cmp
jmp
jno
in
add
or
insl
shlb
icebp
shll
loop
inc
enter
in
jmp
ret
add
orl
push
lds
loopne
and
sbb
jo
mov
ss
in
shl
loopne
or
sahf
call
xorl
adc
ret
aas
push
mov
push
pusha
cld
cs
jb
sub
dec
test
popf
push
inc
shrl
icebp
push
hlt
scas
test
sub
or
or
fidivrs
xorb
jo
and
and
dec
and
push
or
add
rcrb
sub
push
pop
inc
inc
shr
inc
sbb
fidivl
xlat
lods
scas
mov
insb
cli
lds
mov
dec
repz
and
cmc
lret
insl
mov
add
xchg
xor
and
sub
lock
add
cmpl
xor
dec
adc
fmuls
adc
iret
jno,pn
addr16
loopne
dec
stc
and
sub
adc
or
loope
les
xor
sbb
stos
xchg
rorb
jl
jo
and
cmp
ret
rclb
bound
lds
mov
outsl
sub
fldl2t
mov
push
rol
dec
pop
mov
cli
rol
add
out
xchg
mov
outsl
daa
addl
adc
jne
scas
cmp
add
add
or
and
mov
cmp
inc
testl
roll
adc
inc
dec
out
or
rep
mov
imul
in
enter
test
fisubrs
xchg
or
push
lock
and
sub
pop
shr
push
or
mov
fwait
jo
sub
mov
jbe
sarb
adc
test
mov
call
mov
enter
jb
aam
mov
or
je
std
jo
mov
sbb
sbb
pop
scas
rep
loope
pop
push
mov
sbb
icebp
cs
push
int
bound
push
pop
lret
out
push
icebp
xorl
cmp
jo
adc
popa
xor
xchg
add
add
xchg
aam
cmp
cld
inc
mov
test
mov
or
dec
outsb
inc
sbb
sahf
je
mov
sbb
and
dec
div
jge
pop
call
adc
mov
movsb
imul
sbb
fsubrs
sub
clc
mov
mov
cmpb
xlat
das
push
push
jne
add
rclb
push
movsl
popa
nop
pop
clc
mov
cwtl
pop
insb
sbb
jb
add
loop
sbb
and
push
incl
or
jne
push
xchg
sbb
inc
xor
test
add
jecxz
arpl
jecxz
xchg
mov
filds
sbb
and
aam
pop
lds
jmp
ja
ficoml
subb
rolb
mov
jno
sbb
inc
enter
movsl
cmpsb
fsubl
rclb
mov
insl
mov
mov
lcall
sub
cmpsl
movb
cmp
mov
imul
push
jge
xor
fadd
mov
adc
inc
incl
jmp
lea
fstl
xor
or
cltd
lea
push
ss
adc
rcrl
cli
js
movsb
mull
mulb
orl
or
adc
out
les
push
ret
popa
mov
lea
test
outsb
xor
sub
mov
mov
xchg
subl
dec
add
and
adc
je
call
in
adc
push
fwait
sbb
inc
ja
xlat
xor
loope
lds
test
decl
add
outsb
and
jno
add
inc
sbb
inc
push
or
xor
add
sub
push
imul
jge
insb
push
or
jecxz
sbb
out
ret
sub
in
adc
adcb
fists
and
jo
mov
dec
push
jl
test
mov
mov
pop
mov
mov
add
adc
test
fdivp
daa
out
jo
mov
insb
dec
push
inc
movsl
inc
pop
iret
cmpsl
add
popa
mov
xor
push
jp
inc
lahf
cmp
loopne
das
pop
xchg
fwait
loope
scas
push
add
dec
clc
jge
fsubr
stos
rcr
lcall
das
dec
out
ret
jbe
lods
rclb
sar
movsb
movsl
or
xor
test
adc
test
add
and
outsb
mov
dec
in
pop
cmp
xor
jmp
cltd
in
call
mov
jae
add
cli
dec
test
jp
inc
add
mov
add
and
mov
icebp
mov
lock
cld
fcompl
add
xor
jl
lods
in
mov
add
imul
push
push
call
stos
pop
clc
rcrl
push
mov
orb
mov
call
adc
mov
shlb
push
add
cltd
fisubrs
jo
fildl
arpl
and
jecxz
mov
and
xlat
clc
xchg
mov
in
bound
repnz
in
icebp
js
jo
or
sarl
mov
das
imul
pop
or
ljmp
mov
decl
pop
shll
push
add
out
push
sbb
pop
mov
jae
xor
les
cmc
adc
div
inc
and
and
jecxz
mov
popa
lret
add
loope
add
es
add
fs
add
cmc
lret
into
xorb
sub
add
fisttps
jmp
ds
das
mov
add
jl
test
loop
daa
insb
add
icebp
fs
xchg
lods
shll
cld
jge
lahf
and
lock
jmp
ret
int3
xor
lods
sbb
addl
sub
lea
inc
jecxz
cltd
data16
xor
xor
add
fs
insl
loopne
xor
inc
adc
filds
out
add
add
mov
pop
ja
nop
scas
add
into
mov
xchg
mov
jecxz
incb
fdivrl
lock
loopne
out
loope
rorb
xor
decl
mov
add
xchg
sbb
pop
add
and
ud1
rcrb
sbb
rorb
or
pop
jge
push
xlat
inc
mov
cltd
dec
or
xchg
lds
xchg
ret
dec
loop
inc
cmpsb
or
orb
cmp
shl
aaa
or
push
mov
pop
js
mov
sbb
rolb
or
cmc
and
insl
xor
sbb
inc
in
mov
cltd
inc
add
sbb
or
sub
jb
mov
rolb
shrb
sarb
out
mov
cli
mov
or
fimull
aaa
dec
mov
ret
mov
dec
pop
lock
add
jmp
sub
pop
or
jo
sbb
push
add
cmp
adc
cmp
in
ret
xor
sub
in
xor
mov
cmp
mov
jb
in
or
or
pop
out
les
divl
in
ljmp
in
add
push
cli
cltd
mov
call
add
jo
sbb
mov
les
into
sub
subb
rcrb
lret
in
mov
sub
jo
push
incb
inc
fs
sub
imul
loop
incb
inc
inc
mov
ja
lcall
shrb
mov
enter
sbb
lcall
push
dec
repz
movsl
or
jb
shl
adc
sub
out
shrb
shlb
aad
cmpl
dec
dec
bound
lea
aad
add
adc
out
and
dec
daa
cmp
les
mov
jae
mov
mov
pop
dec
stc
shrb
popa
pop
pop
fiadds
fcomps
dec
pop
sbb
cmp
orb
dec
sarb
pop
test
loopne
adc
sbb
cmp
adc
add
pop
dec
nop
loope
ret
and
out
mov
jmp
lock
jp
push
cmp
xor
mov
test
jmp
cmp
sbb
mov
xchg
push
negl
shrb
push
outsb
mov
clc
negl
aas
pop
inc
mov
sbb
push
mov
ret
and
lock
adc
subb
sub
mov
cmp
xlat
shrl
cs
mov
xchg
xor
lods
stos
into
cmp
fsqrt
ja
pushf
shl
movsl
or
inc
arpl
add
and
add
xchg
lret
nop
pop
and
aam
adc
movsb
inc
cmpsl
insb
stos
ret
cli
or
inc
inc
mov
dec
inc
sub
js
cmc
xorl
arpl
es
and
in
xor
stos
mov
and
mov
rclb
and
addb
and
stc
call
lds
movsb
loop
les
cmc
mov
push
adc
dec
dec
or
jbe
call
dec
adc
icebp
orl
mov
ljmp
mov
or
xchg
jno
push
jo
ljmp
out
adc
jae
lret
fistpll
leave
insl
subl
enter
add
or
fadd
pop
xor
shll
adc
clc
mov
icebp
je
test
jmp
fimull
inc
ret
push
add
lods
lods
push
jecxz
jmp
xchg
shll
lods
testl
stc
push
mov
jle
add
out
mov
incl
fldt
mov
sub
mov
add
dec
fcomp
test
adc
xor
mov
aam
pop
mov
adc
xchg
push
ss
insl
push
jns
mov
push
cmpl
dec
and
mov
sbb
add
adc
test
push
mov
js
out
dec
js
xor
xchg
pop
jnp
mov
stos
lea
xchg
cmp
or
xchg
jecxz
aam
mov
xchg
adcb
adcl
out
adc
aas
call
cmp
sbb
aam
push
mov
adc
xchg
imul
add
xchg
out
mov
push
fildl
stos
daa
ljmp
outsb
xchg
roll
dec
aam
rorb
xchg
jne
adc
les
or
fcmovb
adc
jmp
ret
cwtl
js
add
clc
and
std
flds
inc
sub
faddl
sub
sbb
jmp
and
push
inc
and
jge
imul
loope
mov
dec
mov
adc
rorl
inc
and
roll
popa
loopew
fisubrl
adc
sub
cli
shrb
cs
decl
pop
shlb
aad
cli
xchg
mov
popf
and
xchg
clc
xor
cmp
pop
or
mov
aad
imul
test
push
add
xor
adc
pop
inc
inc
arpl
or
push
aaa
dec
mov
lods
cmpsb
pop
js
inc
mov
dec
and
sbb
add
pusha
inc
mov
or
lret
and
in
or
inc
push
scas
jb
adc
pavgw
cltd
add
cmp
lahf
rol
mov
loopne
fwait
and
shlb
insl
loope
push
cmp
mul
dec
insl
out
enter
dec
and
sub
adc
pusha
xchg
ss
stos
mov
add
ret
ss
aad
sub
xor
leave
jmp
mov
mov
and
pop
jne
ret
inc
cmp
push
fsin
call
bound
cltd
cmp
or
sbb
or
pop
adc
mov
cmp
jne
mov
sub
sbb
mov
rolb
test
loop
sub
xchg
lahf
repz
push
pop
add
fmuls
jl
jecxz
jne
lea
lcall
inc
rclb
lahf
inc
insl
add
inc
loop
ss
and
and
icebp
in
rcll
js
and
enter
sbb
mov
int
mov
inc
iret
ret
xorl
aam
sbb
cmpsl
add
dec
and
jnp
mov
cmp
push
sbb
adc
rcr
or
int3
enter
and
addl
cmc
popf
js
rolb
icebp
je
mov
imul
movsl
mov
stos
sbb
dec
fimuls
bound
add
mov
cmp
rcrl
mov
sub
or
rcrl
lahf
xchg
sbb
pusha
mov
xor
xor
dec
lock
jne
int3
push
cmpsl
cmp
or
jae
dec
xchg
pop
ret
inc
jmp
sbb
sti
pop
stc
sbb
pushf
add
mov
outsb
pop
mov
shl
sub
sbb
jae
mov
jae
adc
mov
sarb
iret
jp
add
outsl
jbe
lds
mov
xchg
cmpsb
imul
and
mov
pop
ret
jb
push
cmp
mov
fs
sub
push
dec
inc
dec
sbb
and
lock
leave
hlt
lock
incl
lods
and
add
xor
inc
mov
aaa
cmpsl
scas
xor
sar
neg
mov
jo
loope
subb
scas
mov
mov
stc
popl
mov
test
mov
leave
mov
fimull
jae
pop
dec
jno
push
test
mov
scas
xchg
out
pusha
lock
shll
mov
or
in
adc
push
sti
fildll
sbbb
and
pushf
xor
enter
lods
movsl
or
testl
mov
cmpl
sbb
cwtl
dec
test
push
cmp
aad
repz
int3
adc
mov
mov
xchg
in
jp
pop
fldl
jb
scas
mov
pop
add
pop
aas
clc
popf
mov
jne
out
popa
add
test
xchg
push
scas
cmpsb
icebp
xchg
cmc
outsb
loope
mov
jge
sbbb
mov
mov
loop
mov
jl
cld
mov
inc
pop
push
adc
ficompl
xchg
and
adc
bound
cltd
adcb
sti
gs
mov
repnz
ror
test
pusha
scas
dec
loope
sub
es
dec
mov
add
cs
cmpsl
jecxz
test
inc
dec
dec
or
mov
inc
decl
aam
dec
lods
adc
call
lods
mov
adc
dec
lods
push
fsubs
mov
inc
dec
rcrl
xchg
mov
aad
push
push
mov
xor
std
out
in
imul
shlb
cmp
sbb
mov
rcl
mov
sbb
xchg
outsl
inc
add
hlt
inc
cmp
or
dec
out
cmc
mov
add
and
jmp
test
jne
loop
ja
mov
pusha
push
test
stos
jnp
fistl
xchg
mov
jmp
clc
cmp
sub
inc
jl
insl
data16
push
lea
and
ds
jne
mov
mov
push
sbb
mov
add
ljmp
stc
mov
or
int
or
ficomps
movsb
push
rolb
stos
or
fdivs
sbb
das
shr
dec
cmp
cmp
stos
jl
add
jge
sarb
ja
jle
add
cmp
test
adc
or
imull
add
sbb
adc
and
jae
aaa
cld
outsb
or
mov
mov
fcom
imul
mov
inc
or
add
mov
lea
inc
inc
ja
xor
inc
sbb
stc
mov
mov
arpl
mov
test
xchg
and
mov
outsb
mov
inc
xor
aas
xchg
xor
dec
sbb
cli
mov
or
add
inc
sbb
test
int
jecxz
lahf
test
cmp
and
pop
sti
adc
shrb
or
cltd
in
pop
lahf
cwtl
or
dec
adc
dec
popl
inc
pop
xor
out
jmp
and
insb
push
pop
push
jae
aas
mov
aad
int3
addb
add
les
ror
dec
les
enter
ss
das
lret
mov
arpl
test
subl
or
sbb
xor
adc
rorl
fs
andl
or
pop
xchg
xchg
aam
mov
push
lret
xor
mov
inc
sub
push
sbb
xor
pusha
sub
or
sub
sahf
or
test
dec
mov
fucom
push
jbe
pop
or
or
je
stc
aaa
rorb
dec
ret
mov
push
push
mov
lret
or
rorl
shl
mov
orb
push
fildl
pop
push
nop
ret
xchg
fucomi
mov
or
xor
les
andb
or
rcrb
add
jns
fwait
scas
xchg
pop
adc
inc
adc
xchg
push
cmp
dec
add
dec
loopne
test
or
inc
and
sahf
scas
xchg
cmpsb
inc
jnp
aad
jo
fildl
mov
fdivr
jg
loope
lds
sub
cmp
test
jo
add
xchg
or
dec
add
int3
mov
mov
outsb
mov
xchg
push
imul
mov
or
ret
xlat
out
lea
imul
ja
imul
cmp
rcrb
and
adc
sbb
enter
dec
jmp
push
dec
add
cmp
test
je
xor
push
dec
mov
push
push
test
dec
cmpsl
push
idiv
call
ret
scas
fwait
std
icebp
mov
sbb
clc
pop
add
cli
test
push
cltd
fstpl
xchg
or
sbb
leave
sbb
loop
mov
xchg
ficoms
xchg
add
sub
pushl
add
in
pop
jo
push
xchg
hlt
insb
adc
lret
js
xchg
inc
dec
loope
dec
pusha
dec
jne
call
gs
cmp
cmp
pop
adc
test
push
les
ret
call
dec
xor
orl
rorb
shrl
pop
xchg
mov
push
mov
test
into
test
add
or
xchg
div
clc
ljmp
dec
pop
sbb
aas
sub
inc
and
in
or
cmpsl
sub
jno
sbbb
sbb
enter
ljmp
mov
sub
xor
test
subb
aam
inc
imul
mov
push
icebp
punpcklwd
mov
jmp
daa
cmp
iret
lock
ds
sbb
ret
pop
test
inc
scas
pavgb
xchg
mov
orb
jae
add
inc
dec
add
aaa
popf
add
or
sub
inc
pop
adc
ljmp
sbb
adc
or
addl
pusha
bound
loop
adc
xor
je,pn
cmp
pop
in
inc
and
imull
hlt
sarb
jecxz
mov
xorb
enter
icebp
shlb
xchg
mov
add
popa
sti
xchg
pop
test
rcrb
icebp
icebp
adc
hlt
jno
test
loope
adc
push
iret
pop
adc
fst
ret
mov
aam
mov
imul
das
les
addl
sub
xchg
add
stos
inc
imul
pop
or
xor
cmp
fsubl
mov
imul
jbe
cmp
lea
sub
mov
insl
loope
adc
int
cmp
cmp
js
jg
fdivrl
or
cmpl
ds
out
mov
xchg
hlt
sbb
add
adc
jne
mov
xor
mov
mov
adc
push
test
mov
mov
aaa
add
xor
rclb
js
bound
or
movsl
in
cmpsl
cwtl
and
dec
imul
sti
ss
sbb
and
xchg
push
mov
push
add
jns
mov
mov
lmsw
pop
add
aaa
add
or
sbb
sbb
call
es
fs
imul
push
pop
mov
mov
mov
pop
cli
pop
adcl
call
lea
or
test
sub
cmpsb
push
loopne
sbb
xchg
push
ds
movsb
adc
mov
fldenv
mull
add
int
rcl
cmp
xchg
scas
xchg
rolb
and
cwtl
in
xor
adc
xor
mov
sbb
jnp
mov
dec
into
movsl
mov
clc
popa
int3
stos
dec
xchg
xchg
push
mov
popa
test
pop
push
cmp
jl
push
xchg
and
pop
movsl
push
ret
pop
mov
sub
and
inc
faddl
jmp
add
adc
add
xchg
add
aam
mov
cltd
or
pushf
mov
xor
jp
and
jnp
repz
adc
imul
add
in
rcrb
inc
jmp
imul
pop
or
or
popf
test
test
lret
mov
adc
ss
dec
xor
jg
mov
pop
xchg
aas
popa
push
add
je
ljmp
shlb
mov
ret
testl
and
inc
and
sbbl
subl
jp
adc
roll
pop
jp
mov
add
mov
cmp
test
cmpsl
enter
pop
mov
xchg
stos
mov
mov
xchg
orb
shrb
into
fcomps
add
jge
push
wbinvd
mov
or
cmp
pop
aad
xor
xchg
sbb
add
jge
and
jg
or
xor
ret
push
or
test
mov
in
pop
ret
lcall
xchg
fs
pushf
add
out
stos
outsl
jl
ss
dec
pop
ffree
decl
rcll
mov
xor
test
jg
push
xor
fs
add
mov
stos
data16
and
mov
movsl
xchg
mov
icebp
ljmp
lcall
ljmp
xor
mov
mov
lret
clc
pop
pushf
sub
jmp
dec
inc
cld
xlat
ret
xchg
add
ret
cmc
pushf
add
mov
jle
xchg
add
add
push
adc
xor
mov
testb
mov
aam
sub
mov
push
jnp
push
fildll
lret
loope
lret
test
ljmp
lock
mov
adc
cmp
fildl
cs
icebp
rol
pop
add
adc
mov
sar
mov
add
lock
add
loopne
push
and
add
int
sub
scas
sbb
add
notl
inc
jb
add
mov
jne
sbb
lock
add
sbb
lahf
inc
ret
jp
push
hlt
xchg
jmp
cmpsl
in
or
jecxz
or
pusha
pop
sbb
jo
andb
inc
lods
add
adc
dec
jl
les
scas
adc
or
andl
push
cmp
adc
loope
add
adc
mov
xchg
stos
clc
xor
push
sub
pop
jns
rclb
in
xchg
pop
inc
add
test
inc
in
in
mov
adc
shrl
pusha
call
inc
rorb
cmpsl
imul
adc
adc
xor
sarb
dec
adc
dec
add
and
push
ret
shl
test
add
jg
and
xor
lea
jb
or
pop
add
rcl
std
mov
jo
jl
push
add
sub
inc
inc
adc
test
cmp
dec
rcrl
in
adc
out
sub
pop
idivb
add
loopne
cwtl
add
loope
aad
loope
nop
sbb
aaa
and
mov
data16
inc
push
add
incb
aaa
push
xchg
in
or
xchg
sbb
cmp
sbb
and
pop
pop
dec
rcrb
call
fs
shlb
ss
inc
add
fcoms
or
jmp
mov
testb
jle
dec
sub
js
jno
test
or
jl
fdivrl
jno
dec
mov
ror
and
imul
jge
and
es
std
push
jl
les
mov
and
or
data16
inc
std
insb
sbb
add
in
rolb
shr
jno
or
js
popa
and
pop
js
fsub
sbb
test
inc
fiaddl
inc
sub
push
fistl
add
rorb
add
add
or
and
aam
test
or
nop
pop
leave
adc
jbe
sti
adc
popa
add
in
adc
aas
cli
andl
dec
or
and
adc
in
or
fldl
aaa
xor
add
fdiv
jmp
cmp
mov
inc
fisubrs
lods
and
pop
sub
add
inc
out
and
gs
mov
mov
adc
imul
or
push
xchg
dec
popl
jb
pop
out
dec
subl
out
imul
arpl
iret
mov
pop
leave
insl
inc
mov
jne
inc
cmp
jbe
mov
sbb
or
insb
mov
add
or
clc
inc
cmc
ljmp
mov
dec
push
les
xchg
mov
jmp
repz
and
sbb
cmpsb
test
xchg
ret
sub
movsb
pop
mov
and
pusha
sbb
pusha
pop
inc
mov
orl
xchg
xor
jmp
inc
jnp
xchg
stos
and
shl
inc
sub
sbb
faddl
or
pop
ja
addr16
fnstcw
adc
subb
add
add
mov
pop
int
das
sub
inc
xor
inc
stos
cmc
mov
or
or
sub
cmovnp
repz
mov
scas
and
test
jg
sarb
mov
les
xor
fwait
mov
ret
loop
loopne
push
leave
rclb
lea
orl
jns
jmp
push
or
rolb
xchg
cs
sub
lea
mov
test
int3
dec
xor
add
adc
rolb
pusha
pop
lock
loop
sbb
inc
and
xor
sub
sbb
ret
test
insl
lods
enter
fs
add
sub
cmpb
imull
mov
ss
jmp
mov
xor
pop
bound
mov
mov
clc
sub
fucomip
xor
dec
dec
lret
add
inc
outsl
push
dec
or
cmp
push
sbb
jl
pop
pop
lods
inc
fsubrs
xor
inc
ljmp
lods
mov
push
stos
inc
push
push
sub
imul
jg
mov
and
fwait
mov
cmp
in
ss
xchg
fsub
es
and
or
sub
aad
cs
cli
mov
lea
pop
jno
and
invd
std
ljmp
mov
xor
je
lods
aaa
into
and
push
add
clc
repz
pop
fbstp
and
dec
imul
dec
mov
daa
das
adc
gs
pusha
faddl
pusha
and
push
arpl
icebp
fcomps
insl
cmp
fdivs
xor
cmpsb
cwtl
pop
fwait
and
xor
notb
cmp
or
loope,pn
mov
outsl
xor
frstor
ljmp
cmc
daa
or
jp
sbb
lahf
jo
add
cmpsb
ljmp
or
repnz
and
push
push
or
mov
xor
dec
mov
pop
add
add
pusha
sbb
and
ret
and
mov
push
data16
stos
pop
and
and
and
push
aam
or
cmp
dec
adc
mov
out
ds
jp
cmp
dec
cld
push
in
adc
lret
cltd
and
push
orb
shl
mov
enter
inc
call
lcall
sbb
pushf
mov
lock
inc
xchg
mov
cmp
sub
push
sbb
pop
push
cmp
adc
call
cli
xchg
mov
push
add
faddl
dec
out
cmpsb
xchg
in
sbb
dec
and
cltd
int3
xor
in
dec
cmp
pop
lods
mov
or
push
xchg
cmpb
xor
ret
data16
lds
repnz
repz
add
add
adc
jg
pop
xchg
sub
xchg
inc
jo
and
jbe
nop
jp
insl
bound
push
dec
loopne
fdivrl
xchg
dec
lods
andb
sub
test
pop
shl
dec
loope
les
and
or
aas
cmc
les
stc
mov
hlt
mov
sub
aam
enter
test
mov
or
rol
and
push
icebp
add
add
mov
aaa
pop
int
and
and
lret
cmp
dec
aad
add
add
nop
rcl
fbld
fimull
inc
add
sbbb
stos
dec
pusha
insb
mov
loopne
pop
leave
jp
sub
adc
jnp
mov
jo
mov
and
dec
fiaddl
mov
pop
lock
dec
notl
std
push
mov
or
dec
outsl
out
adc
adc
cmp
sbb
adc
pusha
hlt
push
push
push
push
les
int3
jp
fs
sbb
pop
movsb
xor
mov
inc
jae
mov
cwtl
les
daa
rclb
ret
outsb
fnop
pop
jecxz
mov
roll
pop
and
decl
add
mov
inc
mov
lcall
pop
inc
lea
inc
outsb
sbb
stos
pop
cmp
mov
and
adc
inc
add
mov
sbbl
or
ljmp
push
sub
jecxz
sbb
adc
insb
cmp
test
xchg
xor
into
add
movsl
ficoms
adc
outsl
clc
clc
xor
les
jno
sahf
and
adc
dec
adc
stos
push
pop
xchg
sbb
les
les
std
dec
iret
xor
pusha
and
xor
sti
push
add
sub
enter
int
mov
push
movsb
test
cmp
clc
jne
lret
cmp
cmpsb
inc
xchg
and
mov
lods
out
fs
inc
sbb
pop
cs
loope
xchg
cmp
gs
cwtl
jmp
mov
dec
nop
pop
inc
std
inc
out
stc
and
lock
mov
jns
xchg
and
inc
loop
add
jnp
sbb
or
adc
or
clc
push
adc
push
loopne
pusha
cmp
push
jne
and
xchg
push
sub
shrl
push
inc
push
sbb
sbbb
aam
divl
jno
add
jns
sbb
ret
jo
and
sarl
sub
int3
pop
or
fmull
data16
les
out
je
gs
test
jne
push
adc
test
sbb
pop
jbe
fimuls
aam
sar
sub
add
push
mov
sbb
iret
jo
or
add
add
icebp
adc
lea
cs
js
push
push
jae
cmpsl
adc
mov
add
mov
fnstsw
lock
movsb
adc
fcmovnbe
jo
inc
dec
sbb
add
jecxz
aam
push
pop
sahf
nop
add
jne
mov
aad
rcrb
xor
scas
push
push
add
ja
inc
sbb
imul
add
jae
adc
pop
add
ret
or
in
orb
mov
and
and
pusha
jnp
loopne
inc
or
xchg
or
or
stos
push
add
and
aad
ret
imul
add
and
aad
push
sbb
adc
dec
adc
pushf
mov
or
loopne
pusha
mov
sub
add
aad
add
and
test
daa
test
outsb
sbb
push
jnp
dec
roll
xchg
mov
rclb
fmull
jbe
scas
mov
add
inc
stc
scas
out
add
mov
mov
fdivrl
iret
or
push
lock
adc
cmp
icebp
xor
std
ds
inc
imul
add
inc
push
inc
cmp
roll
add
pop
dec
in
push
in
xor
xchg
imul
ljmp
or
loopne
and
mov
lret
sbb
mov
scas
gs
cmc
hlt
and
add
dec
dec
ret
xchg
adc
push
lret
mov
mov
inc
fs
jnp
in
dec
and
adc
push
movsb
aam
fs
sub
pushf
pushf
adc
pop
jg
lret
sbb
rcrl
pop
pushf
test
jb
sub
mov
lock
jp
jmp
movsl
cmp
pop
sub
sbb
mov
loop
es
xor
mov
pop
stos
push
lahf
sub
andb
orl
mov
pop
in
inc
xor
out
fwait
cli
ss
pop
data16
xchg
add
jmp
out
push
push
in
leave
ret
sbb
mov
mov
in
sbb
add
fisttps
jg
jb
pop
adc
sbb
mov
dec
jmp
xchg
or
jmp
fmuls
test
loope
cmp
cmp
popa
jno
pop
jmp
call
imull
fwait
sti
sub
shl
push
dec
mull
pusha
and
fs
dec
inc
mov
orl
imul
in
sbb
test
xchg
roll
jg
push
out
imul
sbb
enter
je
dec
adcb
sbb
imul
cmpsl
test
mov
push
mov
sub
loop
xor
xchg
push
push
jmp
jb
pusha
push
nop
mov
jge
es
lcall
mov
mov
insb
and
or
in
mov
cmp
add
ss
pop
nop
lcall
test
mov
sti
test
mov
sti
sbb
hlt
sbb
hlt
mov
mov
shr
xor
or
cmp
and
push
rol
push
scas
jae
orb
pop
mov
testl
aaa
jge
stos
idivb
jo
in
xchg
or
movsl
inc
out
sub
cmc
xchg
icebp
outsb
stos
jo
or
inc
into
dec
add
sbb
mov
mov
loope
rolb
cmp
pusha
out
jb
hlt
or
shl
push
xor
sub
test
or
mov
test
iret
in
pushf
ss
inc
leave
lock
int
cwtl
in
movsb
xor
andb
mov
dec
imul
movl
mov
cs
out
and
inc
pop
fmull
sub
xchg
xor
push
sub
xor
jo
jl
js
adc
sbb
cmp
xchg
lds
mov
pop
or
cmpsb
aas
add
loop
cmpl
movsl
push
push
sti
fsts
adc
dec
in
lock
pop
bound
popf
xor
js
fcmovnb
cmp
mov
or
es
sub
lods
add
call
adc
pop
scas
pop
adc
jne
rcrb
cmp
sarl
repz
add
cmc
jb
jbe
es
mov
int3
nop
mov
dec
shrb
test
and
loop
hlt
shr
or
add
loope
inc
lahf
aas
sbb
ret
or
es
mov
lahf
jne
sarl
push
cmc
cmp
adc
in
lcall
pop
dec
and
xor
or
out
stc
cmp
iret
and
movl
nop
xchg
xor
int3
mov
xor
dec
sbb
sub
sub
sahf
mov
lret
frstor
push
mov
dec
loope
and
cld
pop
add
sub
xchg
lock
xchg
pushf
cmp
xor
arpl
pop
jb
pop
in
push
test
je
or
dec
add
fcomps
or
pop
dec
ret
jno
imul
inc
dec
loopne
js
lahf
into
pop
and
xchg
push
ror
or
push
or
je
sub
inc
in
xchg
in
sbb
inc
sub
popf
in
jmp
outsb
popf
cmp
daa
lea
je
cmc
push
mov
and
inc
add
inc
cli
fs
xchg
call
sbb
mov
or
xchg
ret
icebp
mov
mov
xor
pop
inc
and
sbb
and
fidivl
jne
jl
test
adc
test
inc
cmp
cmp
jl
adc
sbbb
fcom
adc
and
lods
add
inc
add
decb
inc
jle
orb
jo
shlb
or
or
add
loope
xor
mov
outsl
flds
add
dec
add
jmp
xor
test
stc
add
dec
adc
and
cs
clc
and
inc
dec
fisubrl
gs
loope
cld
pop
rorb
and
negl
adc
dec
and
sub
jecxz
xor
or
cmp
call
aaa
jecxz
out
mov
in
pop
hlt
sub
mov
jge
inc
clc
dec
fidivrs
loope
call
int
sub
outsb
adc
jle
js
clc
or
jns
or
mov
dec
sub
into
lret
inc
int3
mov
adc
jmp
lea
test
icebp
cs
mov
imul
mov
mov
adc
nop
adc
bound
jg
push
dec
cltd
loopne
or
add
pop
adc
xorb
inc
mov
add
pop
jecxz
imul
movsb
push
jae
inc
sbb
rorl
xor
subb
loop
or
jae
sub
daa
ror
xlat
aad
xor
popa
push
jns
outsl
sbb
jge
mov
add
lods
sub
xchg
xor
and
add
and
and
mov
ret
xchg
jbe
add
mov
loop
adc
out
add
adc
mov
stos
sub
sub
cs
push
or
mov
call
test
je
xchg
adc
or
jno
xchg
add
add
add
or
insl
roll
push
daa
popa
enter
popa
loop
fwait
stc
in
mov
xchg
and
dec
sub
mov
xchg
jmp
hlt
jge
mov
fwait
mov
sub
stos
and
cld
push
push
inc
jle
xor
call
adc
xor
aaa
sub
arpl
pushf
or
jl
and
iret
fdiv
xor
add
xor
insl
dec
cmp
pusha
xor
insb
pop
outsb
add
inc
sbb
popa
mov
dec
popa
or
mov
push
mov
xlat
and
dec
loope
leave
mov
pop
ljmp
or
adcl
incl
mov
js
fistpll
inc
sbb
xchg
data16
cmp
test
pop
dec
mull
and
sbb
dec
sub
add
xchg
sarl
dec
jle
les
mov
add
inc
sub
out
es
jmp
mov
shll
push
mull
adc
mov
add
mov
or
jmp
push
testb
adc
testb
or
dec
dec
aam
insl
xchg
mov
fs
or
adc
jmp
xchg
mov
div
add
add
push
push
xchg
add
hlt
fsubl
mov
pop
or
sbb
pop
test
je
pusha
add
xor
sti
adc
aaa
push
xchg
out
mov
ljmp
sbb
sbb
push
cld
pop
push
fistl
rcrb
ret
jne
sub
cli
stos
lea
and
or
rclb
ds
mov
jae
ret
dec
jg
or
jae
jmp
loop
daa
jne
decl
jecxz
inc
divl
clc
ret
loope
mov
clc
push
xchg
sub
cmp
dec
movsb
and
les
invd
sbb
shlb
xor
shl
dec
fcmovnb
inc
sub
xor
lret
mov
hlt
repz
mov
mov
lds
sub
mov
stos
test
sbb
and
push
push
loopne
mov
loopne
shll
mov
and
xor
enter
hlt
lret
and
mov
lea
sub
sbb
aad
insl
adcb
cmpsb
gs
lods
clc
xchg
dec
cmpb
int3
mov
iret
stos
add
mov
jne
ss
add
lods
ljmp
pop
addl
pop
mov
stos
mov
jg
push
push
and
push
push
jno
mov
mov
mov
jo
int3
mov
push
inc
push
pop
push
cmp
inc
lret
mov
ja
mov
sbb
aad
mov
cmp
stos
pop
add
bnd
mov
rcrb
or
push
adc
add
or
add
or
fcomip
fwait
incl
cmp
icebp
mov
cld
pop
sbb
loope
imul
in
dec
je
inc
mov
xchg
ret
add
jl
or
adc
ret
out
out
pop
movsl
test
inc
jecxz
mov
xor
xchg
rcr
sub
fs
xchg
shr
fldt
push
cmp
dec
mov
imul
repnz
mov
mov
js
movsb
roll
iret
xor
push
and
sub
mov
push
cmp
mov
ret
jmp
sbb
arpl
and
movl
data16
call
sub
stc
add
adc
xchg
pop
pop
pusha
movsb
das
sub
mov
rcrb
jo
ret
cltd
cmc
fs
push
aaa
mov
outsl
ror
add
loope
add
dec
cmp
and
jbe
hlt
dec
icebp
push
test
or
popa
in
les
push
call
out
ljmp
add
repnz
add
pop
dec
push
repnz
pop
sbb
popa
cmp
test
mov
ja
push
pop
add
dec
dec
ret
std
ficompl
loop
test
pop
sbb
dec
stos
test
dec
push
scas
hlt
or
and
xchg
sub
rolb
inc
popa
inc
rclb
add
pop
lods
arpl
sbb
fimuls
roll
mov
xor
push
dec
sub
cmp
cmp
cli
ret
adc
mov
add
cs
fs
xchg
fdiv
or
int3
popa
stos
rcll
cmpsl
gs
test
push
adc
loope
jne
fmulp
sahf
xor
xchg
pop
and
fnstsw
jecxz
adc
lock
xchg
gs
shll
pop
add
mov
adc
sub
adc
inc
ret
fwait
icebp
sbb
adc
sub
loopne
sbb
mov
test
into
jge
inc
testl
xor
clc
das
lods
rolb
xor
add
cld
or
outsl
loope
mov
addb
movsl
cltd
cmp
or
pop
mov
shlb
sbb
addl
adc
leave
xor
sbb
leave
xchg
mov
xchg
icebp
sub
jmp
lock
push
ror
rolb
push
lahf
sub
loope
testb
xchg
test
nop
cmp
sarl
add
rclb
sbb
enter
xorb
mov
aad
sahf
out
orl
mov
sti
sub
and
cs
push
decb
cmp
mov
das
test
clc
inc
push
add
gs
push
or
lock
mov
adc
dec
sarb
inc
cld
xchg
xchg
xchg
push
or
xorb
mov
cwtl
sub
cmp
jmp
rcr
psubb
sbb
daa
mov
and
push
popf
test
xchg
add
lahf
jp
cwtl
shlb
lock
add
mov
out
jl
mov
fwait
sbb
dec
fbld
adc
add
shlb
pop
or
and
sbb
sarl
imul
add
inc
dec
inc
push
mov
popf
dec
mov
shll
loop
jmp
xor
add
xor
sbb
addr16
push
mov
add
bound
insb
mov
ret
mov
jb
and
rolb
mov
or
addr16
loopne
leave
sbb
sbbl
aaa
ss
cwtl
inc
mov
push
ret
xchg
add
adc
fisttpl
shlb
mull
add
bound
scas
test
adc
push
lock
cmp
mov
shrl
sub
xchg
and
clc
dec
and
dec
xor
xchg
mov
jmp
enter
xchg
cli
addl
mov
sarl
push
scas
je
xor
out
arpl
mov
cwtl
mov
xchg
loope
shlb
rcrb
and
cmp
ds
add
or
mov
add
out
push
and
pusha
pop
call
insl
sub
cmp
adc
fsubrl
push
test
nop
pop
sbb
fucomi
cwtl
and
inc
sbb
xorb
cmp
ja
sub
adc
pusha
xlat
or
inc
in
outsl
or
jns
and
or
ja
push
stc
aam
mov
push
imul
and
push
jb
loope
das
gs
dec
push
adc
sub
lock
repnz
jecxz
lahf
cmp
mov
out
test
lea
arpl
inc
and
int
and
lret
enter
repz
mov
adc
or
sti
and
xchg
fildl
mov
stos
andl
pop
add
mov
xor
xchg
enter
sub
cmpsl
fs
popa
pop
pop
rcr
call
loopne
push
push
stos
add
sbb
outsl
sub
arpl
cltd
push
icebp
inc
es
push
shlb
inc
inc
data16
lahf
fdivs
mov
ds
icebp
test
rolb
imul
pop
adc
xor
fsubl
cld
or
sub
jmp
rorb
pop
rcrl
popa
push
out
or
or
pushf
mov
std
jg
popa
rolb
popa
mov
aaa
and
inc
mov
pushf
sbb
test
or
add
push
xorl
add
fcom
sarb
lods
popf
fmuls
cld
mov
aam
loopne
loopne
je
in
in
adc
push
ds
ja
or
add
cld
sarl
out
cltd
cmp
xchg
jmp
add
arpl
xor
pop
add
ret
popf
xor
mov
add
add
add
and
aad
pushf
outsl
inc
repnz
or
incl
imul
push
mov
pop
ds
nop
orb
or
shlb
push
and
arpl
rsm
mov
fstpt
outsl
jecxz
add
xchg
adc
push
push
clc
push
push
in
call
sbb
loope
adc
test
pop
adc
mov
test
cmpsl
ds
jp
in
movsl
adc
call
xchg
fisttpl
icebp
jne
and
dec
cmp
test
add
cmp
jmp
pop
mov
hlt
or
loope
jo
rol
ds
jo
fadds
inc
outsb
inc
cmp
add
sub
xor
pop
and
and
adcb
ret
enter
lea
adc
add
in
ss
loopne
push
jmp
repnz
out
jns
xchg
xorb
test
rcrl
fiadds
mov
sti
mov
aad
cmpsl
mov
pop
daa
fdecstp
arpl
lcall
sbb
and
js
loop
mov
sbb
dec
leave
popf
lods
mov
push
loop
pop
and
or
sbb
jo
push
add
lret
int
push
cmp
or
mov
dec
and
mov
jp
ja
je
sbb
cmp
xchg
xchg
negb
out
inc
scas
daa
icebp
inc
cmp
pusha
roll
leave
and
or
push
jmp
push
out
fwait
inc
sub
adc
fiadds
adc
or
sbb
lahf
loope
xor
dec
js
enter
mov
xorb
or
inc
xor
negl
movsl
icebp
pop
sbb
add
xchg
or
push
sahf
add
inc
jge
cmp
push
les
xchg
add
repnz
mov
aas
adc
and
jecxz
sub
mov
in
lret
lds
mov
les
fsubrs
adc
push
sub
xchg
jno
shll
add
dec
jo
adc
inc
movsl
inc
pop
leave
sub
pop
mov
incb
mov
mov
xor
mov
sbb
mov
jbe
repnz
mov
cmp
mov
icebp
pop
cs
hlt
add
xor
pop
xchg
cltd
icebp
adc
flds
mov
rorb
xor
dec
call
pop
add
or
add
jge
xlat
push
adc
and
or
nop
or
cmp
cmp
jae
jnp
fstpl
xchg
and
sub
test
jecxz
adc
push
cmpsb
adc
lock
mov
mov
addr16
jae
ja
mov
pop
add
pop
dec
xlat
rorb
or
or
pandn
lock
dec
ficoms
sbb
push
push
or
lods
fwait
dec
orl
clc
insl
sub
aas
popa
cmp
jno
jecxz
and
push
dec
loope
adc
lods
xlat
popf
mov
add
mov
ret
inc
insl
pusha
xchg
mov
jo
addr16
js
add
mov
or
pop
cld
and
mov
pop
and
push
movb
fiaddl
add
xchg
mov
push
jmp
add
or
push
inc
fldl
push
add
js
sbb
cmpsl
movaps
cli
aad
out
add
push
xchg
inc
test
sbb
pop
jp
mov
dec
fistps
and
push
mov
and
push
fwait
push
sbb
sti
out
jmp
stos
js
inc
sbb
adc
hlt
jmp
js
rcrb
mov
popf
fldenv
mov
enter
iret
vmread
icebp
call
fnstenv
sarb
pushf
ds
out
push
dec
movsb
or
lret
add
sub
aad
xchg
inc
pop
mov
mov
test
adc
mov
shlb
nop
inc
xchg
jns
sub
movsb
int3
xchg
add
pop
pop
xchg
inc
mov
mov
scas
xchg
or
fisubrs
adc
pop
pushf
adc
shlb
and
xadd
jmp
jmp
sub
push
mov
mov
pop
pop
hlt
rorb
inc
push
loopne
jo
js
aam
sbb
xchg
push
or
shlb
outsb
xlat
mov
pop
out
xor
push
xchg
dec
or
outsl
xor
js
and
lods
je
cmpb
or
addb
mov
fs
fs
push
rcll
pop
mov
lcall
movsl
and
jle
out
inc
pop
cli
or
out
rcll
add
lret
sbb
imul
jle
cmp
out
pop
add
cmp
jmp
clc
jo
jle
adc
and
xor
mov
xchg
sbb
push
mov
push
test
mov
pop
shlb
popf
mov
iret
mov
inc
iret
adc
fstpt
dec
add
add
mov
mov
sbb
xlat
leave
mov
push
dec
minps
rorb
les
out
adc
out
xor
shlb
loop
insb
inc
fs
xchg
mov
adc
je
mov
add
mov
push
hlt
sbbl
rclb
xchg
call
add
nop
subl
xor
hlt
and
mov
test
push
xor
xchg
and
subl
les
ret
and
mov
cmp
push
xchg
and
test
add
in
xchg
mov
in
or
and
push
mov
adc
popf
or
inc
in
add
stos
adc
jmp
xchg
xor
fwait
test
inc
push
inc
fsubrs
lods
in
jl
incb
lcall
dec
cmp
cs
xchg
addl
inc
cmp
bound
inc
and
mov
jo
jle
fstpt
ljmp
fmuls
jne
fcomps
aaa
mov
jge
dec
add
xor
mov
push
add
push
popa
test
mov
adc
cmp
jge
ja
enter
and
sub
xchg
inc
es
mov
adc
gs
mov
addb
xorb
ja
outsl
dec
add
ret
xorb
push
mov
in
mov
and
dec
sub
hlt
adc
mov
fdivs
mov
addb
or
sbb
and
lock
loopne
sbb
xor
ljmp
sar
cmp
sbb
push
mov
insb
and
xor
cli
dec
sub
ja
cmp
bound
sahf
test
push
inc
repz
push
stc
filds
stc
mov
mov
push
add
add
enter
fadd
ds
xchg
and
push
es
data16
sub
ret
fnstcw
push
pop
adc
bound
xchg
sbb
lock
loope
jb
sub
scas
call
dec
inc
jmp
rorl
push
inc
dec
mov
add
out
jecxz
inc
test
into
push
or
inc
push
call
push
add
aad
dec
jmp
xchg
mov
push
fprem
pop
mov
js
sahf
lret
pop
pop
dec
pusha
fstpt
xchg
pop
mov
fists
daa
dec
bound
adc
mov
int
mov
adc
out
cltd
and
push
dec
sub
in
inc
sub
nop
push
test
pop
aad
pop
or
xchg
hlt
xchg
fistpl
cmp
out
fdivr
in
add
cld
ds
insb
xorl
add
ds
dec
inc
push
xchg
jo
adc
loop
mov
sbb
loop
inc
loope
mov
test
mov
dec
fisubs
out
adc
xchg
ret
mov
popa
adc
xchg
add
les
push
fsubl
jl
mov
mov
jb
imul
iret
lret
push
push
dec
jmp
clc
arpl
jge
add
pop
cmp
add
stos
fs
inc
call
out
xor
dec
faddl
or
lahf
bound
push
sbbb
sub
jnp
clc
imull
imul
or
gs
aam
loop
lahf
rolb
fisttpll
sbb
push
inc
pop
dec
decb
out
sar
adc
pop
call
dec
add
xor
clc
sub
jge
mov
xchg
dec
divps
inc
add
adc
ja
jmp
ret
mov
adc
bound
shrb
cld
dec
xchg
jo
stos
aas
add
mov
dec
and
cmp
arpl
iret
sti
cmp
xor
xor
andb
sahf
nop
loop
bnd
mov
adc
paddd
cli
es
mov
sbb
dec
mov
jnp
test
or
cmpb
xchg
or
pop
test
popf
push
out
call
movsl
xor
push
incb
or
sub
and
int3
ja
xor
loop
adc
nop
mov
inc
insl
pop
pop
push
adc
call
mov
inc
jp
testl
xor
add
mov
leave
jmp
enter
loope
and
cmp
sbb
push
and
aam
dec
rorb
adcl
ret
inc
popa
push
out
or
push
pushf
pop
mov
cmpsb
bound
mov
jg
or
addr16
stc
xchg
jo
push
pop
mov
rcl
enter
and
sbb
jne
mov
aam
push
cs
dec
cmp
rclb
mov
lea
push
sbb
add
pop
and
jmp
pop
mov
xchg
inc
cmp
adc
sbb
xor
cmc
xorb
and
mov
shll
push
adc
ljmp
lcall
fimuls
int
sbb
xchg
cltd
cmp
push
mov
or
bound
int
and
js
push
mov
ds
lahf
pop
nop
mov
js
loopne
sahf
mov
and
pop
and
mov
inc
fimuls
or
pop
mov
outsl
jo
or
push
and
addb
addb
or
in
pop
sarb
xor
enter
dec
mov
sbb
call
js
cmpsb
mov
adc
or
out
or
sti
pop
out
pop
adc
movsb
pusha
or
dec
mov
inc
ljmp
sub
sbb
inc
out
fs
mov
enter
mov
stos
jno
addb
sub
pop
sub
enter
mov
jo
loopne
outsl
jl
and
loope
sub
push
subb
cmp
xor
negl
cmp
sarl
add
cmp
ficoml
sysret
cmp
add
xorb
cmpsb
mov
subl
cmp
pop
adc
mov
pop
insb
sub
lret
shl
pop
or
push
or
push
cltd
jo
in
mov
loope
pop
jecxz
pop
or
mov
xlat
adc
dec
fisubl
fstps
dec
outsl
or
dec
sbb
addb
enter
mov
xorb
push
mov
mov
test
dec
inc
jbe
pop
not
adc
or
xchg
ljmp
mov
es
push
cmp
loop
or
popa
popf
out
fsubrs
inc
or
fcompl
call
imul
mov
test
arpl
inc
movsb
notl
mov
sbb
fs
pop
test
shlb
or
xor
add
add
add
and
arpl
mov
adc
lret
pop
fmull
mov
xor
scas
xchg
inc
test
testb
das
inc
dec
pop
jp
pop
les
jbe
cmp
imul
pop
or
push
mov
fildl
addb
sahf
arpl
movl
in
xor
das
dec
leave
xor
ljmp
push
jp
sub
shrb
mov
divb
inc
xchg
cmp
shlb
lret
int
add
mov
clc
fists
pop
push
dec
das
rcl
gs
inc
dec
or
cmp
adc
pusha
lret
xchg
out
outsl
push
or
and
sbb
push
push
lds
pop
cmp
insb
mov
in
sub
xor
roll
xchg
in
sahf
incb
loopne
sti
cwtl
enter
push
lock
outsl
push
mov
sbb
dec
popf
les
and
outsb
and
mov
adc
imul
jo
xchg
ljmp
cld
xlat
roll
inc
adc
loopne
adc
ret
out
xor
mov
mov
shlb
or
fucom
rol
xchg
mov
in
xorb
sarl
and
push
add
mov
lret
or
jecxz
fsubl
fiaddl
sarb
addl
pop
xor
pop
mov
or
jge
adc
add
dec
sbb
push
imulb
shlb
insl
roll
cmp
mov
inc
push
movsb
cmp
mov
mov
lahf
test
in
out
cmp
sbb
fwait
xor
or
pusha
shrb
jbe
xlat
ja
dec
nop
or
mov
xor
daa
mov
lcall
and
xchg
or
dec
and
nop
lea
cmp
rclb
fsubrs
and
or
mov
dec
andb
inc
add
les
xor
stos
inc
cmp
jp
xor
pop
push
movsb
mov
mov
std
cmpsb
inc
pop
add
xchg
or
clc
insb
or
add
hlt
adc
pop
hlt
and
out
ljmp
loopne
mov
out
jl
adc
jno
add
sbb
mov
and
mov
cmp
jbe
mov
fistps
push
movsb
les
shrb
or
inc
cmp
add
xor
jne
jne
pusha
cmp
cwtl
mov
adc
jmp
xor
scas
test
adc
in
sbb
xchg
push
xchg
sbb
push
rorb
cmp
adc
push
and
aad
arpl
jle
fimull
dec
add
stos
inc
loop
mov
sbb
loop
inc
inc
add
jmp
sbbl
out
or
xchg
add
in
push
js
or
imul
mov
sub
push
sarl
push
add
aas
test
lea
add
add
enter
or
push
ret
inc
dec
jge
xchg
out
mov
xchg
dec
push
mov
loopne
or
sub
cli
orb
movb
fldt
ljmp
aad
sub
lret
fdiv
movsb
add
and
mov
ficompl
sub
cmp
add
cs
sbb
cmp
repnz
lods
mov
inc
inc
push
cltd
icebp
leave
test
or
notl
sub
nop
jmp
nop
add
mov
mov
lahf
push
and
scas
pop
or
fs
mov
xchg
pusha
movsb
sub
mov
add
add
add
or
adcb
dec
cmpsb
testb
mov
add
adc
mov
add
cs
dec
push
push
push
add
test
mov
mov
mov
andb
xor
nop
test
xorb
adc
mov
push
sbb
pop
and
and
cmp
insb
int
mov
nop
and
inc
and
pop
and
or
mov
inc
mov
lods
cltd
pop
and
inc
sbbb
pop
or
fadd
cwtl
pop
pop
or
andb
les
scas
cmp
add
mov
cltd
and
mov
add
pop
and
insw
jae
and
adc
mov
or
add
sbb
and
shlb
push
add
mov
sbb
and
inc
sub
add
pop
addb
jo
rol
pop
xor
push
inc
adc
dec
fadds
lcall
mov
sbb
cmp
into
pusha
cmp
push
push
mov
dec
add
adc
xchg
adc
ret
or
jle
or
jbe
mov
sbb
out
jp
imul
xchg
dec
pop
scas
stos
dec
scas
inc
and
pusha
xchg
out
pushf
mov
pusha
clc
nop
push
xchg
push
pusha
or
lock
mov
pop
adc
cwtl
push
mov
push
ret
xor
add
fiaddl
sbb
and
mov
flds
cmpl
jle
add
cwtl
mov
or
add
or
mov
loop
inc
sbb
cmpsb
mov
adc
mov
and
bound
js
mov
loop
and
cmp
cltd
scas
xor
inc
inc
or
inc
and
jl
and
mov
orb
or
sbb
call
xlat
int3
into
and
mov
push
adc
mov
rcl
sub
and
inc
iret
enter
xor
pushf
inc
sahf
fadds
xor
pushf
les
jp
inc
mov
or
sbb
loope
xor
ss
shll
adc
push
inc
rcrl
lods
or
subb
add
mov
in
inc
lock
adc
pop
xor
sub
lcall
pop
xchg
xor
jno
push
jbe
ljmp
push
mov
pusha
and
ljmp
stos
xor
add
add
arpl
int3
movb
xchg
push
dec
push
aaa
xor
cmp
cwtl
inc
jo
clc
xor
ret
sbb
movl
cmp
inc
subb
loopne
push
fcompl
jp
and
ret
inc
fs
push
outsl
add
adc
push
inc
xor
inc
pusha
data16
sbb
pop
pop
xchg
adc
test
sub
test
or
sbb
inc
or
pusha
push
xchg
and
mov
int
cmp
es
jp
and
cwtl
popa
mov
adc
or
je
dec
pop
add
add
and
shll
mov
adc
addb
shll
mov
and
data16
xor
xor
pushf
or
inc
adc
or
es
es
test
pop
or
xchg
xor
add
cwtl
insb
or
and
add
fs
adc
adc
mul
sbbb
push
pusha
adc
cltd
jns
inc
ljmp
adc
in
push
lcall
pop
adc
rolb
or
into
ficoms
movsb
popf
popf
shrl
lods
add
cmp
and
or
lock
ret
scas
imul
cmp
mov
or
loop
orl
cmp
in
insb
popa
jae
outsb
cmp
fisubrl
inc
xchg
stos
ljmp
xor
or
add
lcall
orb
add
lods
in
dec
and
xchg
sahf
push
js
and
nop
adc
js
or
xor
rol
enter
or
test
xor
ljmp
test
push
adc
or
sbb
add
and
dec
les
sub
outsb
sub
bound
dec
sub
data16
enter
push
jne
insb
push
dec
int3
lcall
and
push
push
daa
test
fisubl
movsb
cmpsb
decb
cmp
test
xchg
mov
bound
add
cmpsb
sbb
andb
and
in
shr
or
stos
push
subb
sbb
mov
sahf
pop
sbb
js
add
rclb
ror
movsb
nop
dec
xor
or
sub
int3
pusha
mov
nop
fcomps
sub
inc
inc
or
push
test
rorb
mov
dec
sbbb
inc
jo
adc
stos
or
data16
cli
into
dec
fwait
orb
mov
mov
pop
or
lret
pushf
mov
fmul
andb
jo
and
in
fadds
loop
bound
rcll
add
bound
adc
cld
adc
ret
inc
cmp
adc
testb
adc
scas
inc
xor
int3
adc
shrb
lret
sbb
jb
adc
and
push
adc
mov
sub
adc
push
jo
or
ficoml
add
mov
cmp
test
push
mulb
clc
adc
cli
in
push
dec
cmpsb
xor
test
or
lods
cltd
sbb
jle
push
add
sbb
test
es
sub
push
cmp
jl
xor
cmp
adc
andb
add
and
add
enter
mov
jl
sbb
push
push
jmp
pop
or
in
popf
add
ret
sub
mov
lock
clc
movsb
add
adc
hlt
mov
pop
push
sbb
pusha
cmpsl
add
push
js
ljmp
fldcw
mov
push
addb
je
push
insb
jo
xor
mov
inc
inc
lea
or
mov
jb
loope
rcrl
adc
inc
and
adc
imul
cltd
push
mov
add
ljmp
cmp
retw
pop
shlb
dec
lret
add
add
sbb
andb
int3
or
or
or
rorb
sub
divl
bound
mov
or
mov
aam
movsb
ljmp
data16
in
lret
dec
loop
xor
mov
js
add
cmp
xchg
cmp
dec
lock
sub
scas
frstor
data16
jo
popa
push
sub
cli
push
push
add
push
dec
and
sub
adc
sub
ret
enter
push
mov
xchg
inc
and
fnsave
pop
faddl
sbb
push
loope
cmp
movsl
mov
out
mov
push
mov
jmp
mov
popa
rcrb
push
mov
dec
xchg
icebp
dec
xchg
inc
or
xorb
shll
cli
push
loope
add
push
bound
nop
pop
sbb
ret
out
sbbb
push
cmpl
and
xor
dec
shlb
in
push
into
or
cmpsb
push
ret
fsubs
loop
add
orl
aam
push
rcrb
inc
push
into
xchg
sub
pop
les
adc
mov
mov
inc
mov
push
insl
xor
push
push
and
xor
popf
cltd
push
pop
sub
or
les
fisubs
jbe
or
fmul
mov
mov
push
loop
mov
gs
or
push
mov
sub
mov
cmp
mov
enter
hlt
movsb
push
mov
imul
inc
inc
inc
sbb
xor
and
mov
scas
inc
pop
mov
rol
stos
push
push
shlb
adc
xor
xor
sbb
xchg
sub
mov
add
outsb
jl
mov
mov
bound
adc
loop
es
and
inc
clc
push
mov
pop
sub
adc
clc
in
push
lds
or
inc
sahf
xchg
mov
mov
ret
ljmp
subb
fadd
or
push
mov
fsts
and
dec
mov
add
mov
movaps
cwtl
push
xor
and
mov
cmp
pop
jle
xorb
jl
inc
inc
dec
js
or
hlt
adc
pop
xor
mov
mov
nop
out
cmpsb
dec
lcall
orb
int3
cmp
pusha
lods
adc
cmp
bound
or
push
inc
xor
cmp
js
dec
xor
dec
push
out
xchg
add
adc
cmp
data16
xor
in
int3
aad
mov
mov
ret
xor
sub
shl
int3
xor
adc
rcrb
loopne
pop
adc
cmp
mov
cmp
add
test
dec
or
or
ret
imul
js
jle
sbb
inc
sbb
mov
pop
and
add
cmp
lods
push
daa
cmp
cld
in
adc
xor
push
fdivs
ljmp
mov
ljmp
aam
add
mov
add
aas
adc
aam
and
clc
sarl
add
mov
call
and
fldt
add
pop
orb
jns
mov
js
push
sbb
add
call
or
adc
stos
repz
add
inc
xchg
mov
shrl
add
call
add
mov
test
addr16
adc
add
or
fiaddl
push
add
dec
add
mov
mov
push
add
lcall
dec
enter
push
push
test
outsl
call
loop
cwtl
insl
sub
add
pop
fldenv
fdivs
mov
mov
jle
adc
repz
add
bound
add
pop
lock
addr16
mov
add
sbb
inc
out
lret
sti
incl
cwtl
add
add
pusha
fildl
jne
adc
lea
jne
inc
xor
jg
add
fwait
mov
push
lea
outsb
xor
add
or
movl
xor
out
mov
adc
pop
add
mov
or
adc
add
pop
lock
clc
adc
cmp
pop
push
mov
test
das
clc
incl
or
call
add
or
cwtl
push
cmp
incl
in
bound
addb
sbb
and
inc
sbb
in
jg
pop
lock
add
lcall
mov
lock
out
outsl
push
testb
xor
or
fdivl
jae
lea
mov
fbld
push
scas
mov
and
add
lock
sub
add
orb
jo
xor
mov
pop
rcrb
mov
mov
or
jl
sub
jp
test
addr16
testb
sbb
loop
cmp
cmp
inc
adc
mov
mov
incl
cmpsl
sbb
cmp
jge
add
cmp
ficompl
dec
stc
cmp
mov
mov
and
and
or
fidivl
gs
ljmp
rorb
imul
mov
outsb
leave
jb
adc
sbb
push
ja
sub
aaa
mov
cmp
push
fwait
xchg
negb
daa
push
or
jl
sti
cmpsb
test
pop
outsb
mov
jle
pop
lcall
xchg
add
rclb
and
inc
jp
jge
mov
xlat
int3
xchg
subb
lods
add
dec
in
sbb
out
fdiv
mulb
bound
mov
jle
bound
fsts
inc
es
fimuls
nop
repnz
add
jg
testb
cmp
imul
add
cmpsl
adc
adc
je
sti
jne
inc
pop
jg
push
insb
add
add
push
ret
push
xor
mov
and
mov
inc
call
lock
rcrb
scas
call
mov
das
or
nop
push
mov
adc
popa
in
scas
clc
int
sbb
in
imul
and
and
into
jg
in
addps
and
aaa
push
sub
pushf
mov
movb
add
outsl
outsl
jp
outsb
or
and
aas
lock
xchg
mov
clc
sbb
sub
inc
rcrb
add
stos
dec
or
fs
into
xor
data16
push
inc
sahf
xchg
push
pop
dec
or
push
or
adc
es
shrl
jl
hlt
dec
add
or
jo
rolb
cwtl
pop
pop
pop
insb
mov
inc
std
nop
test
adc
add
adc
out
add
pop
mov
clc
cltd
xchg
cld
add
xchg
cmc
ljmp
sbb
sub
xor
and
adc
add
sub
shrl
adc
sub
jmp
jecxz
leave
je
sti
add
daa
scas
cs
lcall
orb
adc
mov
fists
inc
es
aam
pop
fld
mov
sysenter
xor
stos
push
xor
repz
xlat
push
int3
cmp
mov
or
lea
jmp
nop
and
mov
pop
or
add
inc
in
adc
add
call
aaa
cmp
cmp
in
add
sub
into
divb
repz
dec
add
add
mov
sahf
mov
lods
mov
dec
mov
sub
and
mov
sub
insl
clc
sbb
in
subl
enter
ret
cwtl
and
loope
xor
mov
jp
sub
enter
cld
cmpsl
mov
call
xchg
cmp
adc
in
out
movsl
mov
push
inc
ficoms
incb
hlt
dec
into
xor
xor
add
mov
cltd
mov
cltd
add
inc
lahf
jecxz
paddsb
mov
cmpsl
test
pushf
mov
add
pop
or
mov
pushf
clc
push
cmp
stc
mov
xor
mov
clc
and
mov
mov
mov
dec
sbb
xor
xor
test
jmp
pop
shrb
mov
aas
dec
add
push
jb
imulb
ss
jl
stc
rcll
push
inc
add
jle
dec
insb
negb
sbb
push
mov
or
gs
subl
jecxz
out
clc
pop
jp
mov
sbb
shlb
jg
test
mov
xchg
add
loopne
pop
mov
fisubs
nop
ror
sub
lcall
push
outsb
inc
inc
push
mov
pop
das
or
jge
jnp
add
cli
insb
mov
push
dec
pop
clc
push
and
outsb
xor
push
mov
push
enter
cmp
add
or
call
push
push
xchg
jae
hlt
mov
xlat
pop
mov
lock
mov
xchg
xchg
test
hlt
out
std
clc
rorb
inc
sub
mov
push
hlt
add
lock
mov
jbe
pop
xchg
maxps
add
push
mov
push
popa
xchg
cmpl
jle
repnz
or
mov
sbbb
imul
mov
inc
decb
mov
fs
fidivs
adc
and
xchg
mov
adc
xchg
dec
sub
push
mov
jnp
aaa
pop
roll
sub
data16
xor
idiv
gs
adc
insb
pusha
mov
mov
xor
pop
mov
push
sbb
test
push
xchg
xchg
sub
ljmp
add
cltd
push
add
test
into
mull
insb
sub
insb
xchg
cmp
into
push
jns
pop
dec
or
push
push
stc
pop
push
xorb
in
cwtl
outsl
adc
push
cmp
jmp
sub
aas
in
arpl
cmp
cmp
add
testb
outsl
filds
mov
adcb
cmp
sahf
sar
jg
adc
or
jecxz
fs
inc
or
add
cltd
ljmp
repnz
fldcw
push
add
inc
popf
adc
xchg
js
rorl
or
jge
rcrl
ret
jle
cmp
ret
jnp
mov
xchg
sbb
sbb
jnp
lahf
test
iret
add
mov
add
leave
push
push
clc
decl
lcall
push
dec
xchg
sub
and
pushf
push
lock
push
mov
shll
sbb
push
add
cwtl
mov
push
jbe
sahf
addb
sbb
mov
popf
or
dec
std
int
mov
cmp
pop
add
decl
out
clc
xchg
popf
push
add
jb
fs
je
orb
jp
dec
add
pop
adcl
popa
add
push
fidivs
lcall
in
jl
mov
imul
cld
pop
or
push
xor
out
jecxz
xchg
in
xor
or
adc
mov
cmp
jg
and
or
and
out
and
pop
andb
push
add
add
aam
lcall
bound
loop
and
aaa
outsl
mov
add
popl
xor
xchg
in
lahf
lods
fs
cmp
icebp
ds
sub
lods
xchg
shl
inc
cmp
xchg
fs
sub
aad
repnz
sarl
rcrl
sar
xor
ret
mov
dec
mov
mov
cmp
xchg
or
es
mov
ljmp
stos
lds
fldt
push
and
mov
ja
pop
mov
sahf
stc
cmp
mov
adc
jle
sbb
and
clc
or
adc
movsl
jb
cmc
call
xchg
es
push
imul
filds
mov
popf
rclb
inc
pop
sahf
xchg
in
jg
mov
fiadds
les
or
xorb
push
add
imul
outsl
xchg
shlb
out
imul
pop
cmp
repz
mov
inc
cwtl
jmp
inc
in
adc
scas
or
push
ret
insl
xchg
jmp
lods
std
jo
lods
je
xchg
xlat
iret
push
fisttpl
icebp
out
test
mov
adc
or
or
mov
inc
sti
lcall
mov
dec
pop
add
dec
fdiv
cmp
scas
outsl
outsl
ffreep
enter
add
dec
or
mov
lock
pop
incb
ret
cs
or
aad
cmp
shrl
dec
loopne
ja
pop
xchg
cltd
pop
int
add
pop
push
adc
xor
in
fbstp
cmp
push
insb
out
fst
push
adc
xchg
sti
xchg
loopne
fdivl
movsb
or
mov
mov
incl
mov
dec
or
pop
nop
mov
mov
repz
add
inc
push
ficompl
jl
rcrb
fldt
adc
push
mov
push
cld
cmp
xchg
test
loope
cmp
arpl
cmp
insl
pop
xchg
sub
xchg
dec
lds
xchg
into
cwtl
sub
mov
ds
dec
fs
cld
fs
or
sbb
lcall
daa
rcrb
jne
inc
stos
shll
push
mov
fucomp
mov
icebp
jb
pushf
mov
xor
or
or
ds
clc
lcall
xchg
cli
out
fldl2e
repz
addr16
mov
xor
imul
outsl
clc
inc
lods
cmp
enter
xabort
iret
data16
jg
adc
pop
jne
movsl
mov
pop
xchg
or
mov
sbb
rolb
mov
cmp
jle
mov
test
stos
hlt
add
lock
lock
xor
or
roll
inc
nop
pop
aad
fildl
popa
pop
adc
movsb
mov
cs
pop
add
pop
push
mov
hlt
cmp
adc
mov
fucom
rorl
cmp
xor
and
les
jp
push
push
mov
call
mov
mov
aad
movsl
mov
xchg
mov
adcb
jmp
clc
push
mov
add
sub
push
xchg
add
test
jg
shr
call
loop
popf
sbb
xor
sti
cld
sarb
adc
sahf
loopne
adc
add
mov
test
rcrb
cs
xchg
shrl
push
cwtl
pop
iret
sbb
ljmp
inc
out
push
fsubs
inc
nop
call
ljmp
clc
jg
dec
ret
es
push
loopne
cmpsl
mov
test
data16
cld
ljmp
xchg
add
hlt
xchg
inc
sbb
or
pop
sub
mov
in
or
cs
mov
pop
pop
sub
cld
sbb
fiaddl
cmp
arpl
mov
shll
add
rcl
call
cld
xor
add
xchg
pop
rcrb
sbbb
sbb
add
out
pop
mov
sahf
rclb
dec
loop
pushf
clc
mov
loopne
popf
mov
sub
and
mov
andb
fs
stos
icebp
inc
dec
mov
pop
jo
imul
add
and
or
adc
pop
xchg
movsl
out
inc
clc
aad
xor
jns
lods
push
add
dec
inc
jne
loop
pop
cmp
or
xchg
mov
push
lods
cmpsb
sbb
gs
jo
add
lcall
jb
mov
cli
aas
push
cmp
imul
pop
lds
jl
outsb
bound
adcb
jo
mov
sbb
or
fcomi
daa
and
lds
pop
jno,pn
jns
mov
or
cmpsb
add
add
stos
inc
outsl
dec
and
addb
pop
jl
and
bound
and
cmp
xlat
mov
mov
clc
xor
std
adc
lock
sbb
inc
mov
push
idivb
pusha
mov
xor
inc
push
movsb
add
cmp
push
add
addb
push
out
jg
mov
mov
iret
add
push
fldlg2
add
daa
pop
adc
xchg
jno
cs
cmp
arpl
inc
cwtl
rcrb
lcall
lcall
cld
test
subl
fisttpl
incl
jne
pushf
sub
test
mov
xchg
push
push
xor
cmp
out
jg
mov
scas
push
les
in
int3
jae
fnstsw
add
or
std
call
clc
std
pop
jmp
push
cmp
loope
mov
cs
std
mov
addb
adc
fiaddl
insb
call
pushf
lret
sbb
mov
popf
cmpsl
pop
mov
mov
xor
incl
push
out
dec
out
inc
mov
ss
adcb
sbb
daa
xchg
js
call
fimuls
pop
dec
lods
cli
dec
jge
insl
mov
jns
or
cmpsb
nop
lods
clc
lods
test
xchg
push
ret
adc
incl
sbb
inc
xor
pop
std
fs
testb
ja
jmp
xchg
xchg
fs
mov
fmuls
insl
jb
stc
orb
mov
call
sbb
mov
push
mov
xchg
and
adc
sbb
cmp
lcall
arpl
xor
add
nop
out
jle
pop
rorb
enter
push
fdiv
lahf
aaa
xchg
imulb
jmp
mov
xor
mov
and
sar
call
cmp
stos
cmpsb
jmp
cs
lret
sti
insl
inc
or
stos
adcl
outsl
ret
into
dec
bound
lcall
inc
popl
add
sahf
mov
enter
xchg
loopne
jns
xchg
push
mov
mov
or
aaa
push
out
adcb
sti
aam
jbe
lret
or
stc
aas
jmp
jl
sbbb
mov
and
add
xchg
ret
nop
test
imul
ljmp
dec
out
adc
in
orl
aad
ret
sub
cld
sbb
jecxz
xor
mov
divb
cld
dec
cmp
adc
lret
fdiv
push
mov
adc
call
and
push
shll
and
shl
cltd
xor
mov
inc
mov
pop
sbb
decl
repnz
bound
fidivrl
xchg
sbb
xlat
add
rolb
jb
jg
jo
int3
loope
add
in
adc
cmp
add
cmp
call
incl
ret
pop
mov
mov
aad
push
lods
mov
pushf
pushl
in
cmp
push
fwait
xchg
fdivs
mov
mov
shlb
fdivrl
clc
ljmp
andl
fs
sub
adc
int3
iret
xchg
adc
call
out
inc
push
jecxz
pop
stos
loopne
push
jb
sbb
pop
jl
add
test
sbb
test
jmp
jge
push
lahf
fbstp
daa
mov
or
xlat
out
icebp
in
sbb
push
cltd
in
lcall
jmp
or
pop
mov
dec
icebp
jl
mov
pop
data16
shlb
inc
es
mov
mov
mov
mov
push
or
adcb
cmp
ljmp
add
add
lret
cmp
shrb
paddb
fisttpll
push
mov
in
adc
pop
xchg
bound
mov
and
pop
popa
xlat
in
mov
sbb
cmp
test
into
cltd
into
repz
lcall
adc
fimull
cld
ret
xchg
pop
aad
stc
fisttps
xchg
cli
hlt
pushf
repz
in
subb
jmp
inc
pop
sub
pop
in
mov
sbb
add
mov
iret
call
lcall
into
mov
xchg
out
pop
mov
xchg
leave
sysenter
addr16
gs
cmp
jge
ljmp
mov
adc
mov
sahf
jb
imul
pushf
mov
outsl
ljmp
sub
jp
sbb
mov
jge
mov
or
mov
pop
lock
mov
mov
xor
shlb
sti
rcr
stc
xchg
leave
jnp
push
jo
nop
insl
stc
cmp
decl
inc
sbb
sub
fsubl
pushl
mov
mov
arpl
fistpl
mov
jne
or
lods
mov
cmp
scas
pxor
fisubrl
push
std
loop
mov
mov
lret
sbb
jo
adc
outsb
lcall
cmc
jmp
sbb
cld
xor
sbb
inc
sbb
es
ds
cltd
push
dec
push
mov
cs
sti
push
pop
dec
sti
iret
shll
cmc
cmp
jle
lahf
xor
pop
adc
xor
movsl
xlat
out
mov
mov
jl
xor
loopne
cmp
jne
test
int
cmpsl
lret
cltd
push
idivb
loop
jge
call
rcl
inc
adc
xor
js
outsl
sarl
lods
mov
xorl
call
inc
pop
shlb
jp
jge
sti
in
adc
insl
andb
mov
adc
fisttps
adc
dec
lea
cwtl
mov
dec
aaa
sbb
repz
iret
sti
inc
test
cmpsl
adc
call
add
movsb
pop
xchg
mov
daa
or
adc
fbld
or
sub
aad
lcall
in
dec
insb
ror
aaa
jbe
aaa
call
lahf
out
add
mov
sbb
decl
lea
cld
call
cmpsb
lea
out
mov
inc
adc
mov
xchg
cs
cmpsl
ljmp
jmp
fsts
icebp
cmp
mov
dec
addr16
lcall
mov
adc
pushf
out
enter
sub
stc
jae
and
call
fdiv
xchg
popf
adc
shl
cmp
and
sbb
or
shll
sbb
mov
dec
jle
stc
inc
xor
fstl
inc
xchg
sbb
or
and
cld
movsl
mov
jb
sti
inc
pop
jns
call
mov
rolb
ss
arpl
notl
lock
clc
aas
dec
cmpb
ljmp
sarb
inc
shl
ljmp
pop
inc
incb
dec
xor
cmp
loop
xchg
bnd
pop
sar
fldlg2
lcall
clc
shll
les
test
adc
jns
pop
test
imul
imul
jmp
cmp
ds
xchg
push
jae
jmp
sbb
xchg
or
ljmp
fsubl
jbe
sub
movsb
jmp
addr16
mov
adc
xchg
rclb
push
inc
stos
pushl
call
push
stc
scas
add
pop
into
sub
jmp
addr16
int
inc
mov
lcall
pop
bound
arpl
adc
jecxz
out
pushf
cmpsb
xchg
mov
xchg
out
pop
push
lods
or
adc
lret
outsb
xor
test
in
adc
adc
fmuls
xchg
insb
fidivl
mov
push
push
pop
mov
dec
dec
scas
jno
or
mov
stos
aad
out
cmp
pushl
test
pop
mov
into
cmp
orl
dec
xorl
loope
cmp
sahf
push
and
inc
shrb
dec
arpl
xchg
xrelease
jl
jmp
adc
ljmp
inc
or
mov
add
inc
es
sub
incl
cmp
nop
add
xor
mov
pop
add
push
pop
aad
fnsave
addb
cmp
dec
push
xor
out
out
dec
enter
fucom
fwait
hlt
xchg
cmp
dec
mov
cmp
fistpl
mov
incl
xchg
pop
inc
aaa
popw
sbb
aam
jg
mov
int
bound
cmpsl
mov
jnp
or
sub
and
popf
xor
or
movsb
dec
pushf
lcall
cmp
repnz
pop
jno
sub
sbb
or
dec
dec
aas
and
repz
std
call
add
cmp
popa
inc
out
sub
jge
and
adc
sbb
jp
jecxz
add
cmp
inc
mov
loopne
mov
fiadds
pop
jo
pushf
adc
mov
fwait
jmp
ss
cld
mov
pop
mov
enter
jb
adc
call
fildll
pushf
test
out
mov
mov
in
jp
xchg
dec
adcb
xor
pop
push
incl
cmp
inc
push
jnp
mov
pusha
scas
jb
xor
decl
dec
jg
in
test
mov
orl
enter
cmp
xor
ljmp
mov
dec
es
testl
cmp
les
repnz
jmp
or
jns
movsb
pop
jns
stos
pop
mov
jmp
sbb
mov
push
xor
and
push
adc
adc
jmp
cltd
incl
movsb
test
int3
loope
dec
mov
add
shlb
jb
pushl
jl
mov
imul
aaa
push
cmc
inc
test
mov
hlt
stos
into
sub
ljmp
lock
test
inc
mov
fcmovnu
xchg
pop
popa
leave
adc
xchg
insb
pop
out
jg
loopne
out
sub
dec
fisttpll
pop
fidivs
dec
mov
lahf
rcl
or
incl
inc
add
pop
nop
lahf
cli
jp
lods
lock
adc
in
lret
js
mov
mov
enter
outsb
je
movsl
add
xlat
ret
sub
test
leave
mov
sbb
pushl
or
rclb
adc
call
xchg
xor
call
idivl
lcall
sub
js
hlt
and
xor
pop
enter
xchg
arpl
fs
jl
cld
sarb
negb
pushl
cmp
xor
stos
data16
imul
scas
ljmp
cli
call
lea
or
lods
sub
xor
movsl
add
movl
hlt
xchg
adc
mov
mov
mov
mov
sbb
test
ljmp
push
add
lret
mov
pop
insl
sub
mov
push
cmp
pop
out
out
call
jae
sub
push
std
pop
and
inc
aas
subl
loope
pop
mov
jnp
dec
jno
gs
inc
lock
lock
jle
stos
mov
mov
xchg
pop
aam
stos
aaa
or
lcall
or
test
imul
ss
decl
arpl
xchg
fcoms
adc
dec
insl
gs
cmp
mov
das
cli
imul
xor
inc
cmc
lahf
ss
or
es
fdivrp
lahf
in
mov
and
stos
push
shrl
xchg
xor
fbstp
decl
cld
incl
pop
call
or
mulb
dec
dec
enter
cmp
pushl
dec
out
jle
and
jecxz
sahf
test
into
fstpt
xchg
xchg
dec
subb
mov
imul
mov
sub
ljmp
dec
mov
mov
sbb
ss
out
cli
bnd
mov
mov
push
insb
gs
aas
sbb
cli
inc
inc
int
andl
add
inc
aas
add
movsl
mov
add
arpl
mov
test
test
into
mov
dec
insl
add
fsubr
push
idiv
jmp
sahf
mov
jmp
mov
imul
loope
hlt
fsts
push
leave
pop
cld
mov
lcall
insl
scas
mov
lock
in
xorb
cli
pushl
std
sub
and
mov
and
lahf
enter
jbe
ljmp
nop
ja
sbb
jne
jmp
or
mov
sbb
iret
leave
fnstenv
cmp
mov
xchg
shrb
cmp
or
inc
sub
das
sar
mov
mov
sarl
cltd
int3
add
mov
fisubrl
jmp
adc
mov
mov
add
pop
mov
fnstcw
inc
incl
fisubl
test
push
cmpl
xchg
cwtl
fwait
push
cmpsl
imul
push
lock
mov
adc
jle
vcvtpd2dqy
popa
es
lock
incl
push
dec
sbb
ret
das
push
shlb
dec
sbb
push
jbe
push
incl
loopne
cmp
aas
mov
and
dec
push
imul
vpmaddwd
sti
aad
add
pushl
xlat
mov
fsubrs
int
es
push
das
popf
jmp
or
imul
mov
pushf
dec
mov
jno
inc
lods
add
frstor
hlt
out
aaa
sub
or
dec
xor
repz
incl
push
xchg
in
shrb
cmpl
aaa
xor
xchg
test
mov
imul
lcall
fwait
cmp
xchg
and
test
xlat
bound
decb
ret
mov
inc
lock
je
ljmp
aam
lds
lock
cmp
popa
mov
jmp
stos
insb
fucomip
pop
mov
sub
adc
inc
xor
popa
adc
sar
cmc
add
incl
sbb
and
jno
sub
cmc
imul
loop
jmp
pop
jo
cli
loop
mov
nop
pop
mov
out
push
jp
jmp
rcrl
cwtl
loope
ss
lock
out
fcoms
repnz
lods
xchg
pop
mov
lods
xor
adc
decl
mov
sbb
xor
xchg
dec
pop
pop
push
js
test
or
int3
and
jg
int
filds
out
xor
je
call
adc
sbbl
cmp
shll
adc
cmp
pushl
mov
xor
rclb
jne
push
sub
jb
push
lcall
xchg
js
xchg
jno
jb
iret
mov
inc
iret
incl
and
mov
xor
mov
push
mov
mov
inc
mov
int3
xor
mov
insb
icebp
ljmp
clc
in
jnp
push
cs
and
fwait
and
shrb
cmc
ljmp
scas
push
xchg
sbbb
fistpll
divl
gs
push
fstpt
jl
xchg
rdtsc
adc
adc
movsb
repnz
jne
xchg
mov
lock
mov
pop
xchg
push
mov
and
emms
mov
fsubl
ljmp
sub
jge
or
repnz
lret
outsl
dec
cmp
jnp
lcall
incl
add
pop
jo
cmp
push
mov
into
and
rcrb
dec
cli
test
ljmp
cmp
loope
cmpsl
jl
jmp
stos
add
dec
xlat
imul
cmp
and
out
cmp
fcomip
mov
push
jp
add
sbb
dec
and
cltd
addr16
xlat
mov
pop
jmp
ret
hlt
add
mov
decl
dec
jp
dec
arpl
hlt
sbb
and
ljmp
aad
imul
push
mov
xor
loop
sbb
testl
push
and
ds
jne
jg
ljmp
mov
scas
mov
pop
ja
dec
and
lahf
xorl
mov
call
mov
shl
in
and
cs
adc
lret
jl
cmpsb
add
std
or
adc
sub
dec
dec
push
xor
xor
sub
lret
jns
mov
inc
sub
mov
es
nop
or
adc
leave
xor
sub
and
shrb
or
add
mov
mov
mov
or
sahf
and
jne
imul
inc
jno
or
pop
hlt
adc
pop
ret
push
pop
adc
xchg
in
incl
push
jle
jg
pushl
xchg
xor
aad
rcrl
push
ret
aam
adc
sarl
dec
repz
mov
jle
fsubl
jg
test
dec
enter
pop
xlat
sub
mull
std
leave
xchg
pop
xchg
mov
add
hlt
loopne
ljmp
in
cmp
add
pop
jae
cltd
inc
pop
jmp
ljmp
push
mov
fwait
pop
mov
pop
outsl
fstl
pop
cs
and
ds
bound
mov
pusha
std
mov
fisubrs
mov
xchg
push
outsl
mov
jmp
add
push
inc
sub
mov
sub
jl
lcall
insb
xor
test
lret
inc
sbb
jae
repnz
mov
insb
cmpsb
mov
lods
iret
and
aas
xor
in
repz
xor
push
movsb
aas
ret
popf
out
inc
or
ja
inc
pop
pop
std
push
jecxz
pusha
jg
incl
ljmp
push
mov
pop
cmpsl
fs
decl
decb
push
mov
sarb
int
gs
jmp
out
xchg
adc
popf
push
fnstcw
cs
jmp
andl
mov
inc
mov
add
stos
fadd
push
test
insb
pushl
movl
lcall
filds
xchg
je
jmp
std
jge
fdivp
les
jae
enter
cmp
lcall
jl
jg
call
adc
out
jbe
push
mov
imul
mov
xor
cmp
das
adc
sbb
test
adc
xbegin
stos
push
testl
mov
out
jmp
or
out
and
lret
fsubrs
insb
popa
jb
fsubs
insl
add
cmpsb
push
std
decl
inc
bound
mov
mov
mov
incl
xchg
pop
and
je
pop
jo
lods
sarl
mov
xlat
mov
sub
inc
push
dec
int
lock
bound
push
mov
pop
pop
sbb
enterw
sti
dec
sub
mov
cmpl
js
dec
loop
fsubs
sbb
mov
dec
popf
dec
jae
icebp
call
mov
int
out
mov
repz
cmp
gs
pop
xchg
pop
xchg
int
fistps
cmpsb
pushf
sahf
icebp
mov
addr16
nop
aam
jp
xor
xchg
std
incl
mov
imul
jge
idivb
test
xor
sub
pushl
push
into
sarl
pop
xchg
xor
and
das
mov
sbb
push
jbe
pop
outsl
lahf
inc
mov
cmp
mov
push
bound
jb
test
jl
push
dec
add
push
cmp
or
dec
lea
inc
mov
sbb
or
pop
sub
mov
add
xchg
ja
in
cli
into
push
jg
add
inc
inc
cs
jg
aas
das
loopne
push
sbb
testb
addr16
xor
scas
nop
jg
sti
jmp
ficoms
sbb
sahf
dec
imul
inc
fcoms
inc
pop
mov
xor
jg
pusha
mov
push
inc
insl
rcr
dec
js
push
jg
icebp
jne
sar
lcall
aaa
dec
subl
xor
js
xchg
test
xor
daa
sarb
push
enter
ljmp
mov
pop
rcl
test
test
sbb
cmpsl
adc
push
jmp
popf
fs
cs
clc
std
dec
outsl
xchg
sbb
xor
rcrb
pop
ja
ret
adc
arpl
push
jg
mov
inc
popaw
push
push
leave
sbb
fs
ja
out
mov
lock
repz
fcoms
call
ds
stos
or
fistpl
cld
mov
movsb
jae
cmp
jmp
mov
mov
sbb
insb
inc
test
inc
jb
fimull
call
mov
ror
pop
cmp
repz
inc
dec
inc
pop
dec
lcall
call
pop
divb
gs
push
shl
sahf
xchg
inc
sub
inc
das
js
xchg
inc
test
incl
push
insb
stc
pop
sahf
jmp
or
in
cld
adc
lret
arpl
xor
dec
inc
sti
mov
test
ja
outsb
inc
imul
inc
popf
push
lahf
cltd
xor
icebp
sub
jmp
gs
pop
sarl
push
iret
sahf
pop
call
rcll
stos
xchg
adc
stc
or
int3
test
or
repz
adc
cwtl
xchg
mov
add
pushl
cld
cmpsb
lcall
mov
cmp
clc
dec
jp
popf
dec
cwtl
cmp
jmp
cmp
ds
sbb
fmuls
jp
hlt
in
sbb
lahf
pushl
cld
call
mov
stc
and
adc
dec
push
aam
es
ja
jmp
repnz
jo
roll
jp
popf
push
leave
stos
cs
imul
mov
pushl
lcall
enter
or
mov
jnp
jmp
shll
jno
xor
loop
dec
cmp
xchg
mov
ljmp
lcall
mov
xor
enter
and
movsl
jge
lea
loopne
inc
aas
lock
push
jno
icebp
imul
dec
sub
dec
xor
mov
inc
pusha
lret
push
in
and
inc
sbb
push
cmp
mov
cmp
hlt
cli
idivb
mov
mov
jmp
xor
leave
mov
pushl
in
cld
sbb
lcall
dec
bound
mov
sub
sete
fcoms
lcall
or
scas
call
sub
lahf
hlt
das
fnstcw
mov
cmp
xchg
out
fists
stos
dec
xchg
in
lock
fstp
xor
lods
and
pop
xchg
lahf
jae
mov
xchg
les
push
je
into
cmpsb
scas
mov
call
ret
jbe
std
scas
ret
sub
iret
out
sbb
ja
call
cli
dec
xor
dec
sub
jmp
repnz
mov
inc
in
shr
ss
inc
pushl
stos
jp
or
pop
cmp
gs
mov
outsb
jmp
fwait
inc
scas
jmp
lret
test
mov
fcomps
loope
push
test
jle
out
out
lea
sar
ljmp
scas
stos
ret
in
ja
jbe
mov
sbb
mov
jmp
inc
pminsw
ljmp
rol
fs
sub
cmp
negl
ret
ficoml
lcall
pop
aaa
dec
faddl
jnp
xorl
jge
stos
scas
xlat
pushl
loope
out
pusha
inc
cwtl
xchg
sbb
ss
push
mov
sti
daa
sbb
incl
jg
insl
xchg
cs
push
rol
push
sbb
call
call
cmp
mov
push
scas
mov
rclb
cmp
mov
mov
jmp
jmp
or
mov
test
jbe
fidivs
xchg
pop
push
lods
lcall
decl
or
loope
jge
mov
or
adc
fwait
out
cmc
or
jmp
aam
mov
loope
loopne
mov
test
sbb
into
jp
sub
imul
mov
and
insl
sub
xor
push
popf
cwtl
add
ljmp
push
cmp
dec
rcrl
je
je
sbb
out
jbe
subl
lahf
ljmp
lock
adc
out
in
jge
xchg
mov
xlat
xlat
mov
lcall
incl
jp
dec
insb
mov
lret
mov
gs
mov
push
sbb
filds
jo
scas
jns
je
adc
or
push
cltd
das
push
imul
xchg
jmp
jl
pop
xchg
rorb
pop
nop
imul
fwait
jmp
inc
dec
mov
mov
mov
adc
imull
out
mov
fsubrl
fdivs
cmc
mov
iret
xchg
mov
xlat
xchg
clc
cmp
jle
and
imul
test
lcall
jp
loope
scas
sbb
pop
fisubrl
jmp
xchg
add
lcall
call
sbb
push
aam
mov
inc
divl
enter
dec
mov
pop
inc
movsl
enter
sub
lea
mov
addr16
in
out
scas
jp
and
dec
clc
lods
cmpsb
call
mov
mov
mov
dec
repz
cltd
in
pop
lcall
mov
leave
mov
hlt
mov
sub
add
int3
mov
pop
adc
jl
sub
inc
stc
mov
je
ret
fnstsw
add
inc
or
mov
sbb
call
push
test
in
mov
dec
xlat
fs
or
cmp
insb
fcomip
call
or
mov
mov
movsb
xchg
dec
es
pop
daa
pop
jmp
jmp
cld
inc
insl
pop
adc
or
add
sub
roll
fisubs
addr16
fildll
fdivrp
push
mov
mov
mov
sti
out
lods
push
aas
jb
pop
mov
out
scas
test
or
call
fwait
rolb
inc
call
cmp
hlt
or
cwtl
dec
enter
call
jg
mov
dec
xor
adc
cmp
jge
cld
add
popa
sub
shr
nop
cmp
adc
lahf
loopne
or
or
rorl
nop
lret
mov
or
fdiv
mov
insl
push
dec
jp
stos
xchg
inc
pop
pop
push
push
xchg
jecxz
xor
pushl
sarl
xchg
xchg
push
lock
jne
sbb
lret
cwtl
aas
lcall
popa
out
fstl
fdivr
sub
mov
repnz
into
std
add
lea
sbb
pushl
test
bound
loopne
ret
fidivl
fadds
mov
mov
jae
test
pushl
fdivl
enter
xlat
mov
pop
sub
movsl
inc
adc
cmovge
cli
jmp
enter
xor
pushf
adc
cs
jmp
mov
clc
pushl
insb
add
mov
sbbb
shrb
lretw
decl
stos
inc
jmp
mov
lret
cmpsl
gs
imul
xchg
jg
outsb
push
dec
jge
mov
sbb
fmulp
cld
add
adc
push
mov
loop
stos
and
ds
sub
or
add
lret
and
insb
sbb
push
mov
sub
ljmp
cmp
sbb
push
sub
aas
aad
jb
hlt
hlt
mov
lahf
sbb
cmpsb
decl
js
pop
inc
dec
sar
mov
cmc
jbe
mov
or
and
pushl
push
aad
pushf
adc
cmc
std
aam
xor
jno
cmpsb
mov
ljmp
cli
ffreep
or
in
and
movsl
fiaddl
mov
fcmovu
add
stos
call
or
sub
out
idiv
decl
lcall
adc
repz
outsb
pushf
outsb
insb
sbb
fnstcw
fdivs
push
fsubs
xchg
adc
lret
dec
mov
pushf
cmc
test
outsl
sbb
fstpt
repnz
mov
pop
outsl
outsl
jmp
cs
ds
inc
incl
dec
dec
dec
push
jp
adc
jp
sahf
pop
xor
jg
test
call
pop
enter
add
jp
ds
mov
ja
mov
loop
in
repnz
push
mov
lret
pushl
or
add
jle
or
aad
pushf
jecxz
jp
cmpsb
cwtl
and
push
sahf
incl
jo
into
fs
cli
ror
icebp
cltd
sbb
inc
into
fwait
mov
std
pop
pop
or
mov
mov
mov
testl
sbb
push
stos
push
cltd
dec
ljmp
cltd
repnz
xchg
jnp
push
jnp
push
adc
sub
fwait
cltd
cltd
mov
mov
jno
cmp
and
inc
push
sub
sub
idiv
jmp
int
and
pushl
jge
aaa
pop
jp
push
jnp
mov
jg
jmp
aam
xchg
xchg
lock
shrb
enter
mov
out
lcall
add
cmp
mov
loopne
es
outsb
or
test
psubsw
ret
mov
or
addr16
add
ret
jmp
xchg
imul
xor
inc
sbbb
push
push
cmp
lcall
push
daa
notl
xchg
outsl
jnp
cmp
insl
ds
xlat
into
gs
sbb
in
jecxz
fsts
scas
mov
decl
in
push
push
dec
jo
out
cmp
je
inc
adc
lea
xchg
in
jmp
add
jl
leave
nop
xor
fwait
mov
lds
scas
inc
ja
add
test
call
repnz
or
mov
inc
arpl
fdivrl
push
repz
jae
aaa
std
inc
inc
mov
out
inc
mov
xchg
int3
add
mov
jmp
orl
test
popf
inc
test
mov
sub
xchg
pushl
jecxz
mov
pop
sti
mov
mov
lock
iret
sub
sar
cli
pop
xchg
lods
fpatan
movsl
xor
int
decb
lret
mov
adcb
jg
lea
sbb
fsubr
bnd
stos
mov
cmc
loopne
xchg
cld
fildll
add
mov
pushl
sti
sbb
es
fisubrs
mov
fstp
fildl
sarl
clc
lahf
jmp
out
ret
in
inc
mov
movsl
pushf
add
push
lcall
inc
jle
js
jmp
pop
add
jnp
lret
sbb
xorl
cmpsl
stc
push
out
adc
add
jmp
push
decl
sub
pop
mov
or
add
test
out
pop
sbb
pushl
lds
sub
add
or
cmp
or
push
xor
push
mov
js
repnz
or
addr16
jo
pop
loope
adc
pop
in
pop
fs
xor
mov
xor
loop
lods
push
mov
repz
in
out
cltd
inc
cmpl
cmp
aam
or
mov
in
pop
dec
test
std
out
loop
incl
sbb
ss
daa
and
loop
pusha
int
ljmp
push
mov
clc
mov
xchg
out
pusha
lcall
push
ljmp
jmp
sbb
dec
mov
cmp
sbb
inc
push
sub
xchg
jle,pn
das
sar
movsb
mull
imul
xchg
aas
xor
mov
je
out
jae
cmpsl
nop
in
mov
ret
cwtl
or
test
push
fmuls
mov
sub
inc
int
mov
sub
dec
sarl
cmp
stc
lret
bound
fsubl
pushl
sub
cmp
arpl
rol
stos
cld
mov
lcall
sub
cld
ljmp
ret
or
and
xor
iret
pop
sahf
and
or
sbb
in
pop
aad
xchg
int3
test
or
mov
pushl
int3
sti
add
and
adc
imul
mov
dec
sbb
cli
rcll
leave
rclb
and
fwait
sub
fistl
adc
shl
fnsave
decl
and
adc
fldl
leave
adc
or
xor
cmpsl
adc
ljmp
popf
jno
pushl
gs
xor
or
in
dec
mov
jecxz
es
sub
push
pushf
inc
ljmp
cwtl
stos
mov
lods
lock
popa
fistpl
cmp
dec
pop
sub
out
xchg
in
stos
lret
ljmp
sub
cmp
mov
dec
cmp
mov
scas
in
repz
test
call
in
stos
xchg
cmc
xor
aaa
pop
cli
arpl
jmp
test
mov
rdpmc
dec
add
stos
int3
arpl
pusha
jbe
xchg
popa
daa
pop
out
mov
data16
sbb
adc
ret
mov
dec
mov
addl
xchg
cmp
sbbl
jg
sbb
xchg
adc
orb
jmp
test
das
out
das
pop
shl
jnp
movsb
inc
rolb
push
in
pushf
push
stos
mov
stos
mov
cmp
dec
mov
fistps
loope
adc
push
sub
xor
pop
addl
stos
cmpsb
decl
ljmp
repnz
lret
test
iret
repz
je
cld
add
sarl
outsl
in
icebp
fs
incl
out
cld
insb
xchg
lods
pop
ss
push
into
pop
sbb
pop
sar
mov
in
jo
or
dec
xchg
addl
adc
cmp
roll
mov
mov
flds
mov
call
aaa
shr
mov
inc
fwait
lcall
popf
repz
mov
es
int3
jne
or
movsl
jl
mov
scas
repz
pop
ret
aaa
add
stos
add
push
loope
xor
repnz
mov
or
add
lods
mov
jmp
and
jmp
popa
xor
mov
lds
orl
xor
decl
jp
enter
jmp
jl
negb
sbb
movsl
pusha
lret
jle
ljmp
cli
lods
stc
incl
and
testl
addr16
popa
cmpsl
mov
lcall
add
cmp
std
hlt
dec
scas
cli
ja
inc
je
addb
imul
jmp
ret
in
xchg
mov
faddl
add
and
xor
inc
push
fmull
add
dec
imul
stos
call
push
mov
loop
rorb
mov
jns
add
decl
push
cltd
or
addr16
xchg
test
pusha
inc
xor
shlb
std
pop
inc
xchg
idivb
mov
mov
add
repz
push
test
mov
mov
incl
push
mov
sti
fidivl
int
fimuls
jp
sahf
jae
roll
cmp
cmp
call
cli
fisubrs
push
push
rorl
std
cmp
pop
dec
jb
mov
into
xor
adc
pop
stc
aas
inc
inc
pop
dec
jno
les
push
ss
adc
femms
jnp
pop
jmp
jno
and
add
testb
mov
pushf
xor
enter
aam
addr16
sbb
ljmp
mov
popf
ljmp
sub
jns
xor
bound
ljmp
xor
inc
fdivrl
sbb
imulb
fildl
int3
loope
test
incl
test
sbbl
test
mov
xor
jne
mov
loop
pushl
adc
inc
add
adc
cmp
jns
mov
outsb
inc
pop
sahf
pop
push
add
jbe
dec
sbb
and
jae
mov
mov
jecxz
lods
stos
decl
pop
add
into
jae
push
xor
jle
loope
scas
dec
pop
dec
cwtl
test
xchg
push
js
rorl
mov
popl
dec
and
xchg
enter
fs
mov
rcrw
mov
lock
sarb
aam
jp
andb
icebp
in
jns
xchg
int
gs
lcall
hlt
sub
and
loope
mov
es
or
aad
cmp
push
add
inc
mov
push
push
mov
push
fsubs
mov
sub
lock
jmp
mov
lret
cmp
aaa
int
pop
inc
test
mull
cmp
clc
xor
xchg
pushf
add
pop
mov
cmp
hlt
xchg
xchg
or
jmp
push
loopne
std
ret
push
inc
mov
mov
pop
mov
sbb
inc
push
jnp
movsl
or
push
or
cwtl
std
mov
test
out
push
popf
stos
xchg
ljmp
or
shll
jb
shll
and
mov
xor
dec
adc
or
lcall
adcb
mov
loope
fcmove
inc
pop
les
add
push
and
decl
cmpsl
movsb
dec
cmpsw
mov
dec
push
sub
in
fdivrl
adc
andl
mov
cmpsb
mov
bound
repz
or
push
loope
dec
into
cli
incl
mov
jmp
xchg
fdivl
sub
pop
fadds
je
push
movhlps
movsb
insb
outsl
clc
lcall
add
inc
inc
pop
cwtl
sbb
int
mov
cwtl
in
sub
adcl
lcall
bswap
divb
jns
cld
sbb
xor
push
inc
sahf
frstor
pop
jp
popa
rorb
leave
outsl
lret
rcr
dec
daa
sbb
or
loop
sbb
cmp
and
mov
or
decl
jp
test
xchg
mov
in
xchg
repz
repz
mov
mov
adc
dec
add
jg
jo
cmp
iret
leave
cld
dec
mov
outsb
aam
jmp
fcoml
insb
pop
jmp
add
xchg
std
jmp
cmp
jb
das
mov
mov
or
lods
jmp
push
leave
decl
sub
addr16
out
test
xor
cmp
push
loopne
mov
call
lcall
xchg
mov
outsl
pop
lret
std
dec
imul
iret
andb
repz
mov
decl
jp
mov
mov
mov
mov
jg
lods
push
push
sbb
mov
and
stos
out
pop
mov
add
jns
rolb
jno
lret
cmp
xchg
fstpl
movsb
scas
stc
xchg
dec
push
pop
mul
sbb
outsb
mov
leave
test
test
jne
out
pop
jl
dec
ja
cmc
enter
into
lock
dec
mov
ljmp
stos
clc
test
push
test
mov
mov
mov
mov
mov
cmp
push
xchg
inc
sub
ljmp
push
mov
pop
lods
mov
sbb
mov
iret
cmp
mov
ljmp
arpl
xchg
dec
inc
sub
das
lock
adc
sbb
insb
jns
mov
pop
cmp
aas
fchs
in
sti
shll
xchg
pop
sub
pop
xchg
pop
mov
inc
push
xor
repz
jmp
pusha
inc
lret
xchg
inc
sti
inc
ss
cmp
push
pop
mov
popa
cmp
decb
adcb
sub
testb
insl
or
ret
frstor
adc
call
in
lcall
sbb
inc
mov
int3
jge
cli
cmp
imul
mov
inc
lods
fisubs
setbe
push
mov
movsb
in
lret
lock
into
cmc
leave
ds
add
mov
icebp
sti
sub
out
sub
movsb
mov
inc
pusha
mov
adc
sahf
bswap
or
sahf
jg
jg
jmp
cltd
sub
inc
std
fiaddl
sbb
mov
adc
iret
adc
dec
addb
jo
sbbb
ret
jecxz
loop
decl
stos
xchg
mov
sub
bound
loope
push
adc
mov
scas
mov
pop
mov
mov
adc
popa
jmp
push
xor
pusha
pop
rcrb
lret
loope
loop
mov
xor
mov
bound
push
ret
ror
ljmp
xor
fidivrs
xchg
xchg
sbb
cmp
push
push
shlb
clc
pushl
sub
loope
sub
lahf
ljmp
mov
mov
sub
add
jmp
fsubrs
cmp
cmp
mov
add
ljmp
xchg
push
mov
cmp
insb
mov
dec
pop
cld
js
cmp
ljmp
dec
jecxz
or
or
movsl
adc
stc
in
mov
aaa
std
in
and
inc
cwtl
cmpsl
inc
sysenter
push
pop
ja
sbb
push
decl
lcall
jb
mov
fucomi
jecxz
shll
push
xlat
jecxz
xor
stc
mov
lcall
iret
mov
outsb
xchg
inc
push
pusha
and
lcall
std
and
add
cli
loope
sbb
mov
pop
out
pop
dec
roll
push
enter
jl
filds
ror
inc
adcl
jmp
rcrl
and
pushl
rcrb
xor
mov
rorl
sahf
cmp
cmp
push
test
pop
lods
sbb
shlb
xor
scas
repnz
loope
imul
adc
mov
inc
mov
xchg
jle
mov
mov
sub
mov
dec
repz
sub
repnz
popa
bound
push
in
jns
push
cld
popf
and
mov
pop
mov
imul
mov
lret
and
insb
lods
call
add
test
mov
std
xchg
shrb
inc
pop
add
pop
shl
xor
sbb
call
xchg
lret
jo
les
adc
mov
mov
dec
enter
add
ljmp
and
mov
leave
jo
push
gs
out
pop
pop
arpl
pop
mov
inc
sub
mov
jmp
adc
inc
mov
lds
inc
loopne
outsl
ret
rolb
inc
hlt
lcall
push
cmp
test
je
sub
sbb
aam
cmp
stos
filds
out
jl
and
lods
pop
ljmp
mov
xchg
divb
stos
repnz
popf
inc
mov
jmp
push
cmpb
cmp
incb
notb
call
xlat
cltd
xchg
mov
mov
rcrl
lcall
rorb
call
mov
fbstp
mov
cmp
xchg
push
mov
sarb
jmp
pusha
jnp
clc
hlt
mov
fsubl
lods
shl
mov
jo
push
pop
ljmp
int
inc
fs
xchg
in
and
cmp
call
outsb
aad
pop
dec
pop
fidivl
jmp
cli
notl
andb
orb
mov
xlat
in
inc
hlt
in
hlt
sti
in
jmp
aam
mov
nop
dec
cmp
sbb
addl
push
add
mov
and
lcall
add
inc
mov
xor
sahf
daa
xor
dec
xor
lahf
push
fcomip
jmp
and
ljmp
inc
push
push
dec
sbb
insb
pop
pop
scas
sbb
sub
pop
dec
jmp
ljmp
lret
sub
aaa
jo
xorl
popf
cmpsl
mul
sub
pop
fdivrs
jae
mov
lea
popa
dec
pop
orb
inc
repnz
int
pop
sub
sbb
sub
sbb
adc
mov
sbb
mov
xor
xchg
incl
test
cld
rclb
inc
daa
test
adc
or
or
sar
jns
xor
cmp
or
hlt
icebp
xchg
adc
xchg
lcall
xorb
mov
icebp
and
lret
push
jo
mov
mov
inc
dec
sub
add
fists
push
mov
dec
cli
add
xchg
test
jmp
or
rol
test
ret
inc
cmc
jmp
out
cmp
jae
int
call
stos
jl
sbb
xor
test
add
push
lds
repz
jae
cmc
lods
aam
pushf
ficompl
rol
and
jg
mov
ret
mov
and
enter
or
mov
xlat
out
sub
clc
fisttps
jp
mov
mov
push
repnz
gs
fwait
hlt
aaa
mov
push
test
call
sbb
rcl
movsb
imul
ds
cmpsl
orb
jmp
mov
cs
lock
ljmp
cs
push
dec
vmovdqa
movsl
call
mov
fisubrl
adc
gs
jo
mov
sbb
or
movl
mov
ljmp
in
stos
xor
repz
insb
xchg
mov
xor
scas
decl
fildll
loope
jl
xchg
popa
push
divl
mov
lcall
scas
je
mov
in
sbb
sub
lret
mov
rorl
jle
fcomip
jmp
insl
test
and
dec
sbb
jl
inc
sbb
dec
jl
ds
jns
push
call
push
daa
mov
mov
data16
push
xor
outsb
rcl
pop
jle
xchg
push
inc
das
mov
daa
mov
in
cmp
xchg
dec
xchg
pop
or
lahf
lahf
in
jecxz
jbe
call
mov
subl
cmpb
or
pop
fildl
mov
aad
fcomip
lcall
pop
cltd
mov
enter
pop
or
inc
outsb
mov
daa
add
lods
and
call
dec
cltd
or
stos
cmpsb
inc
scas
adc
cmp
xchg
ds
fbld
into
jns
jmp
mov
add
stos
xor
mov
insb
divl
dec
sbb
insl
mov
xchg
movsl
dec
mov
xor
mov
insb
jbe
sbbl
cmpb
jnp
push
cltd
push
add
loope
jnp
pushf
inc
out
xchg
andl
mov
ljmp
push
cmp
ljmp
test
xchg
pop
adc
mov
insl
xor
cmpsb
mov
pushl
push
lret
lcall
lock
mov
dec
push
mov
jg
fcomip
ljmp
ret
add
orl
xchg
sub
xor
push
mov
loop
inc
jno
jmp
xor
or
outsl
lds
or
nop
mov
iret
test
fwait
aam
clc
aas
pop
icebp
decl
push
push
sub
loope
es
sub
insb
jmp
mov
xchg
xchg
sub
sbb
xor
notb
repnz
test
mov
addl
lret
repz
dec
subb
insl
aam
movsl
sahf
inc
mov
les
jg
incl
dec
aas
cmp
push
and
jmp
fs
pop
cmp
inc
out
sar
loope
ret
push
mov
or
stc
sbb
and
stos
repz
ds
mov
push
jb
int
aaa
inc
inc
jae
sub
ret
jp
add
loopne
test
mov
outsb
adc
int
orl
pop
xor
sti
mov
pusha
call
js
jb
add
mov
jbe
push
in
mov
ja
mov
jge
mov
incl
jmp
aad
test
jmp
addr16
jg
push
cld
jg
repz
idiv
sub
jl
push
les
add
pushl
std
iret
sbb
shll
and
pushl
jmp
dec
inc
nop
fcmovu
inc
inc
sbb
in
xchg
dec
jl
ret
aad
mov
lcall
je
fwait
sub
adcl
ja
leave
push
inc
fisubl
lcall
leave
into
push
pop
xor
mov
stc
adc
pushf
push
xor
jmp
call
incl
jmp
inc
lahf
aad
cmp
hlt
or
xchg
lods
pop
dec
jmp
outsb
ds
xchg
mov
xor
and
jns
push
cmpb
les
stos
pop
int3
inc
inc
sahf
cld
mov
sub
push
popa
jmp
xor
add
and
mov
mov
and
mov
imul
jne
ss
inc
in
sub
xchg
sti
adc
cmc
mov
jp
cmp
pushl
pop
jg
mov
mov
push
xor
jno
add
push
sbb
lcall
ljmp
jecxz
jns
in
cld
push
dec
loope
xor
ret
arpl
pushl
out
cmpl
sub
pop
sbb
test
stos
bound
mov
mov
inc
or
ljmp
and
addl
sbb
lcall
hlt
mov
stos
cmp
scas
movsl
push
mov
scas
sub
test
mov
sbb
sti
cld
rolb
lcall
xor
repnz
mov
popl
xor
jb
out
pop
cli
dec
fwait
push
adc
test
movsl
in
sti
push
dec
push
mov
inc
mov
bnd
es
mov
pop
inc
sarb
insl
sbb
pushl
push
in
mov
cmpsb
xchg
outsl
arpl
shlb
lret
scas
clc
pushl
notb
pushf
insb
mov
jae
hlt
pop
dec
notb
pushl
dec
lahf
fisttpl
jmp
inc
dec
cmp
int
lock
push
shrl
mov
test
in
aam
je
jg
incl
adc
mov
push
repnz
jg
enter
and
dec
ficomps
mov
addr16
mov
push
fidivrl
pushf
inc
out
repnz
and
push
adc
call
mov
stc
xchg
sub
mov
daa
or
and
icebp
push
nop
cmp
inc
or
pop
jl
and
popa
inc
add
fstps
or
cmp
inc
test
out
call
orl
xchg
or
dec
ret
mov
cmp
daa
push
cld
pushl
add
inc
mov
xchg
jmp
lods
cli
sub
cmp
cmp
xchg
mov
incl
mov
push
out
adc
or
shrb
sbb
loopne
fsubp
mov
call
lock
cltd
fidivl
fimuls
xchg
ret
scas
cli
jmp
and
mov
int
shl
les
inc
sbb
lods
mov
xchg
out
fbld
andb
pop
int
mov
gs
xchg
test
imul
jle
xlat
test
or
repz
std
lret
mov
inc
popa
int
lcall
inc
inc
daa
inc
cmp
stos
or
int3
sub
hlt
shl
mov
inc
and
decl
mov
mov
lods
andl
sahf
fs
jae
pushf
incl
add
xor
add
lea
add
fsubl
int3
repz
push
push
pushf
adc
cltd
adc
mov
ret
out
add
xchg
stc
xor
push
bound
nop
jnp
dec
add
add
mov
gs
incl
ljmp
mov
add
add
addr16
ds
adc
adc
dec
pop
cmp
xor
push
mov
and
subb
jle
add
enter
daa
addb
iret
or
adc
mov
jmp
and
and
nop
mov
cmc
add
cs
mov
sbb
mov
dec
cltd
lea
movsb
out
cld
add
pushl
js
add
popf
adc
stos
dec
add
add
push
add
adc
inc
test
add
pop
adc
push
mov
add
call
and
add
sub
les
loope
jae
mov
hlt
add
call
xor
mov
xor
mov
sti
dec
push
adc
pop
add
cld
sarl
jle
aad
inc
dec
fisubrs
jb
adc
test
cwtl
rorl
aaa
add
add
jg
pop
test
push
inc
cwtl
cmp
lret
lcall
aaa
sbb
dec
rcrb
mov
mov
addr16
xchg
out
out
fnstenv
add
mov
mov
call
fcompl
mov
sbb
mov
dec
and
stc
rcrb
pop
mov
js
jg
pop
and
add
or
jo
mov
jmp
ret
jg
je
cs
push
movaps
mov
jno
sahf
jg
xorb
or
lods
push
fstl
outsl
ljmp
mov
mov
mov
mov
outsb
dec
lahf
xchg
stc
add
jmp
mov
hlt
test
pop
jmp
inc
xor
test
mov
or
inc
inc
in
add
ret
aas
inc
movsb
add
out
add
int3
ret
into
sbb
jo
cmp
push
mov
lcall
fcompl
fiaddl
or
sbb
pusha
data16
jb
decl
ja
call
dec
xlat
add
and
adc
xchg
mov
fistl
js
ds
frstor
push
jg
call
in
add
out
inc
add
shrb
shll
or
cld
inc
rclb
incl
nop
xor
out
pop
jecxz
add
fisttpll
cmp
test
adc
push
mov
and
mov
add
clc
add
icebp
add
loope
mov
dec
orb
repz
outsl
push
mov
jg
inc
dec
lock
xchg
jge
negb
push
cs
pusha
mov
sahf
movl
push
lds
repnz
dec
mov
fcmovu
xor
xchg
cmp
jmp
xchg
nop
mov
sbb
movsl
push
mov
mov
ljmp
adc
cmp
lds
xor
xor
cs
mov
rclb
xchg
fdivr
dec
add
add
and
mov
loopne
and
mov
mov
stos
mov
loope
call
jno
out
addl
jno
mov
cmp
insl
jo
sub
adc
xchg
push
roll
adc
jg
sbb
pop
adc
outsl
cli
pop
hlt
xchg
rdrand
popa
imul
mov
jnp
add
inc
dec
mov
adc
add
push
aam
shlb
jmp
sbb
add
sbb
mov
test
push
add
ret
sub
inc
stos
pop
mov
scas
pushl
mov
clc
lock
inc
cmp
jp
or
scas
xor
pusha
pop
mov
int3
push
cld
push
clc
adc
loopne
sbb
cmc
cmp
dec
adc
lahf
out
mov
cli
add
pop
loop
mov
aaa
push
out
fmuls
mov
cld
incl
ret
push
sti
fadds
mov
int3
add
dec
pop
inc
daa
out
cli
push
es
ret
ret
push
addb
push
loop
movsb
adc
cltd
roll
vfnmadd213pd
lcall
and
dec
push
jo
pusha
mov
mov
incb
cli
into
inc
out
adc
inc
mov
inc
aam
fisttpl
dec
dec
mov
call
push
xorl
divb
hlt
sub
les
loopne
stos
leave
mov
add
xor
push
shll
hlt
bound
pop
mov
add
lods
dec
cmp
in
int3
mov
pop
mov
loope
cmp
pushl
aas
pusha
pop
pop
in
or
xchg
sbb
push
rorl
inc
ljmp
jb
cmp
jne
push
repnz
icebp
adc
gs
push
cmp
push
scas
jmp
shll
xchg
stos
pop
push
loope
push
ret
fwait
jmp
mov
je
jbe
add
push
loopne
lock
or
mov
in
repnz
das
inc
xlat
ds
aam
pop
xchg
adc
nop
sub
mov
lcall
mov
sbb
movsl
push
cld
cmp
cmp
push
push
pop
scas
xor
int3
adc
sub
cmpsb
es
in
sbbb
jb
cli
fwait
sbb
push
xor
les
das
rcr
idivb
sub
mov
pop
sub
sahf
lahf
xchg
mov
cmp
inc
mov
jmp
scas
mov
sub
mov
push
sbb
add
fsub
into
test
push
hlt
mov
pushl
stos
pop
inc
int3
imul
mov
fimuls
xchg
roll
or
sbb
aam
cld
push
sahf
mov
jae
je
cmc
addr16
mov
roll
inc
push
dec
dec
fsubr
mov
imulb
pop
pushf
cmc
push
jge
pop
or
subl
sbb
and
test
cmp
and
sti
push
lret
cld
dec
adc
inc
xor
xchg
push
je
fucomi
adc
dec
xor
dec
scas
mov
push
out
in
jg
sbb
add
sub
mov
adc
sub
mov
inc
adcb
xchg
jo
test
push
into
ret
add
sbb
mov
sahf
jne
iret
dec
inc
mov
xor
test
xchg
push
xor
divl
cmp
mov
sbb
hlt
inc
mov
ss
cs
cwtl
push
dec
jmp
xchg
mov
sbb
add
loopne
rcll
lret
fs
mov
xor
andb
and
push
pop
mov
xchg
dec
test
inc
out
in
loopne
lods
mov
sub
es
add
sub
and
push
push
ds
je,pn
sbb
adc
push
lret
cld
add
dec
adc
pop
jl
out
add
or
push
je
and
clc
push
mov
sarl
hlt
adc
inc
lds
sbb
inc
repnz
out
sub
xchg
test
lea
add
out
add
insb
sbb
add
roll
lcall
add
nop
rclb
ds
jns
rcll
or
js
pop
bnd
call
or
scas
out
testb
xchg
ret
push
aas
pushf
lods
fst
mov
fisubs
pusha
nop
sub
ret
clc
inc
add
lods
mov
xor
or
enter
mov
loop
xchg
xor
jg
mov
addb
inc
ljmp
and
and
and
jp
cmpsl
insb
pop
pop
shl
idivl
dec
and
jo
mov
add
loopne
xchg
and
jo
int3
rol
xor
push
dec
aas
add
sar
sub
fmull
repz
mov
or
xchg
incl
inc
into
xchg
pop
cltd
and
cmp
es
jle
ljmp
adc
stos
ret
leave
dec
jl
mov
push
jns
adc
pusha
or
dec
xor
fcomps
mov
push
dec
fs
sbb
sbb
stos
inc
decl
adc
xorb
ret
loopne
add
incl
inc
add
ljmp
push
mov
bound
loope
lds
aad
jns
gs
sub
incl
mov
adc
add
pusha
adc
call
aaa
adc
pop
test
jle
xchg
jg
mov
pop
or
push
loopne
and
inc
movsb
sub
pop
mov
lock
sbb
test
or
jbe
mov
xchg
cmp
clc
decl
pushf
loop
testb
arpl
and
test
ja
push
mov
xor
nop
push
add
in
add
nop
xchg
xor
fptan
push
mulb
sbb
fsubl
in
push
outsl
inc
popf
repz
inc
mov
outsb
hlt
rcrb
mov
jne
mov
add
jmp
out
das
xor
pop
cld
int3
jmp
ret
jge
in
push
stc
lret
ret
mov
loope
mov
jl
hlt
enter
ret
in
and
mov
or
jnp
and
inc
cmpsl
push
add
adc
nop
or
add
xor
scas
mov
repz
push
adc
xor
dec
add
cld
shll
adc
and
mov
xor
outsb
mov
aad
cmp
xor
out
add
decl
add
xorb
add
sti
ja
pop
std
mov
mov
lds
out
jae
xor
out
jg
scas
flds
jb
add
vandnpd
jp
bound
in
sti
fistl
lea
or
mov
sti
mov
sbb
push
pop
mov
add
pop
stos
ret
in
dec
and
scas
cmp
pop
adc
icebp
jl
adc
daa
pop
fwait
xchg
jb
adc
imul
xor
adc
inc
sbb
ret
xchg
sub
mov
mov
loopne
adc
leave
push
lock
add
ljmp
out
or
cmp
xchg
inc
push
xchg
clc
pop
mov
sbbb
or
sbb
std
inc
dec
or
out
lahf
jb
test
movsb
sub
pop
data16
or
or
insl
add
push
out
iret
stos
mov
daa
mov
fiaddl
loop
xlat
jp
cwtl
sbb
jns
je
ffreep
xor
movsl
or
ljmp
push
bound
dec
xchg
pop
sub
sub
negb
clc
incl
dec
add
adc
lcall
mov
subb
cld
sbb
test
aam
and
loop
mov
imul
ret
pusha
pop
xchg
add
adc
or
pop
push
xorb
push
jge
jle
cmp
mov
push
ret
cmp
jg
sbb
data16
les
cmp
push
xor
mov
jp
add
mov
loopne
jg
dec
or
rclb
cmpl
add
mov
sub
cwtl
enter
cwtl
loopne
sub
inc
mov
pop
push
fmull
fsubs
dec
jge
mov
cmp
jo
xchg
push
fiaddl
push
inc
mov
sbb
and
mov
jmp
mov
push
loop
adc
and
test
mov
add
in
cmpsb
arpl
push
ret
push
pop
jae
lcall
adc
mov
mov
cmp
jns
lahf
enter
jp
mov
jnp
rolb
cwtl
add
xor
test
mov
lock
daa
jecxz
pop
jle
mov
dec
or
inc
and
inc
sti
sbb
sbb
outsb
outsb
xchg
cmp
aas
adcb
jecxz
xor
in
mov
adcl
test
pushl
mov
scas
out
cmp
push
add
lods
jp
inc
in
inc
ljmp
pop
pop
push
sbb
addb
jns
sbb
push
add
push
imulb
cmpsb
aaa
call
cmpsb
cmp
add
add
mov
test
adcb
sbb
xchg
enter
mov
pop
fdiv
push
and
jbe
pop
add
cs
cld
insl
or
adc
mov
add
out
faddl
loopne
popa
xor
mov
ljmp
into
sub
int3
sbb
es
cs
add
dec
push
inc
push
cmp
outsl
jo
test
pop
adc
pop
add
repz
jg
and
pop
sub
lcall
inc
cs
mov
pop
or
aaa
insb
xchg
fisttps
clc
loope
cmp
pop
inc
sbb
mov
pop
int
in
je
mov
lods
inc
popa
xor
push
loopne
sbb
xorl
dec
xchg
les
push
stc
test
fisubl
mov
cli
dec
gs
movsb
decb
xor
stos
fwait
xor
mov
sub
jne
and
xchg
push
cs
push
les
popf
in
xchg
push
inc
int3
das
stos
fdiv
add
xor
pop
sub
aaa
call
or
mov
test
cwtl
mov
adc
sti
mov
dec
push
cmp
ja
sub
cmpsb
sbb
xchg
jg
test
arpl
xchg
cltd
rclb
mov
out
or
mov
mov
xor
jb
cmp
je
dec
mov
aam
push
or
aam
add
repnz
sarl
aam
sub
dec
in
enter
out
rorl
mov
sbb
sbb
xor
ret
cmpsb
push
sti
mull
cld
inc
std
fisttps
mov
shl
mov
xor
fstp
mov
dec
xorb
cli
outsl
sahf
sarl
iret
sbb
push
add
addb
les
fsubrs
mov
sarb
and
test
out
xchg
mov
jnp
fnsave
mov
sbbl
push
xor
mov
test
and
pop
and
in
add
fnstsw
or
and
mov
dec
cmp
cmpsb
cwtl
sub
xchg
push
pop
sbb
ds
test
clc
enter
mov
sbb
push
mov
sahf
push
cmp
pop
push
pop
inc
enter
and
inc
lods
push
or
rorb
loop
xchg
pushf
mov
cmpb
pop
xchg
pop
in
lret
mov
mov
call
jp
mov
ret
or
movsb
cmp
mov
pop
push
outsl
stos
decb
addb
mov
test
int3
or
sub
push
push
xchg
call
cli
out
shl
jbe
dec
bound
cmc
jno
into
inc
cmp
push
sub
dec
in
xor
xchg
pusha
mov
jle
dec
cmc
xor
enter
aam
xor
fwait
xchg
loope
jne
pop
roll
movsl
subb
shrb
push
cmpsl
stos
jb
stos
dec
int
or
inc
sub
push
jmp
sub
movsb
fwait
fsubs
test
mov
bound
iret
enter
pop
call
xchg
inc
nop
je
add
mov
jmp
ss
cltd
inc
push
mov
test
fcomps
pop
cwtl
arpl
aaa
imul
lret
ljmp
xchg
daa
dec
sub
jno
sub
mov
out
cmpsb
jae
mov
xor
dec
test
and
icebp
arpl
scas
andl
inc
push
aas
stos
push
push
orl
cwtl
dec
fs
inc
cmpsl
xchg
test
push
dec
and
xor
in
dec
add
mov
adc
push
cwtl
sub
xchg
ret
ds
jge
add
mov
jp
testl
mov
dec
jecxz
cwtl
pop
scas
bound
inc
jg
cmp
mov
pop
repnz
push
mov
jnp
or
out
sub
xchg
insb
sub
ret
loop
lcall
cld
or
sbbb
int3
inc
pop
or
cs
jno
mov
adc
push
aam
xchg
cmp
mov
cli
clc
and
or
xlat
dec
adc
add
dec
popf
lods
ss
ja
mov
sub
mov
js
push
jl
push
mov
pop
outsb
enter
enter
div
or
mov
clc
leave
out
add
rorl
cmpl
loope
dec
inc
stos
popf
add
jle
lods
inc
add
adc
ljmp
je
jp
ffree
pop
adcl
jmp
adc
cwtl
sub
add
shll
mov
out
mov
mov
jecxz
ds
dec
push
ret
cmp
sub
fdivrs
in
jp
inc
movsb
dec
ljmp
call
inc
mov
cmp
out
mov
jae
mov
bound
outsb
add
dec
inc
xchg
fisubl
ja
xchg
pop
out
sbb
call
stc
add
add
test
sbb
incb
pushf
xor
dec
sub
stos
mov
stos
mov
cld
adc
or
mov
xchg
cmp
and
push
mov
out
pop
lcall
inc
push
pop
inc
inc
xchg
or
pop
or
mov
and
mov
mov
cli
loopne
ret
cs
mov
mov
cwtl
test
jl
inc
push
ret
out
imul
lea
xchg
xor
or
or
cs
cltd
push
rclb
xchg
mov
mov
ds
xchg
pop
sbb
or
add
dec
xor
loopne
or
cld
or
lds
es
lds
scas
dec
pop
lock
les
repnz
mov
ss
mov
hlt
xchg
scas
pusha
je
jmp
pop
inc
xor
aas
stc
movsb
je
sbb
lock
testb
enter
out
pop
mov
mov
andb
lcall
adc
cld
out
add
aas
inc
cmp
out
std
incl
add
mov
push
fs
lret
fnstsw
jno
xor
fs
nop
sub
mov
add
mov
les
xor
popw
jno
push
mov
adc
inc
test
add
clc
roll
sbb
cmpsl
pop
lock
loopne
jmp
fwait
ret
xlat
ret
stos
jo
and
fwait
clc
lret
lds
dec
or
cmp
rcrl
call
lock
fimuls
sbb
inc
sub
sbb
mov
call
outsb
movsb
or
mov
out
xor
pop
sbb
mov
test
in
sbb
andb
sbb
clc
jg
loop
lods
in
sub
in
sub
push
or
cwtl
dec
mov
out
clc
push
aam
and
push
mov
iret
jo
outsb
mov
testl
push
mov
sbb
push
xchg
push
rorl
xchg
xchg
adc
lods
or
aas
add
xchg
jl
mov
jmp
test
shll
push
dec
adcb
clc
fildl
shlb
add
roll
or
push
xor
push
pop
dec
add
data16
sub
lock
rolb
repnz
pushf
enter
fs
dec
outsl
inc
fmuls
mov
adc
push
into
mov
xchg
loope
imul
jl
cmpsl
inc
scas
mov
mov
and
stos
jg
test
sbb
and
pop
movsb
mov
out
lcall
repnz
jp
sub
dec
push
mov
cld
pop
sahf
imul
popa
push
mov
mov
fwait
push
mov
adc
xchg
and
stos
dec
rcrl
sahf
adc
ljmp
fstpl
andb
jl
sbb
xchg
call
cmp
sub
fistpll
negb
int
bound
cmpsl
inc
xor
mov
pop
insb
call
adc
adc
out
movl
push
mov
add
cld
test
push
into
push
cmc
mov
cmp
pop
add
lcall
ficoms
cmp
enter
cmc
mov
outsb
push
pop
xchg
adcl
add
push
movsl
rclb
or
clc
mov
test
test
mov
out
loop
daa
mov
enter
les
sbb
push
mov
fcomps
sbb
fcomps
rcr
dec
fsubrs
lcall
jmp
pop
add
imul
push
test
adcb
mov
mov
ljmp
lea
adc
mov
add
test
pop
xchg
inc
add
xor
mov
pushl
push
mov
fadd
and
jno
pop
pop
adc
cli
and
pop
enter
mov
inc
adc
push
loopne
cltd
inc
pushf
xor
int
or
ds
adc
call
rcrb
and
sahf
adc
push
pop
add
mov
popl
fisttpll
ss
rcr
popf
mov
ja
mov
xor
imull
mov
sub
adc
xor
adc
push
and
inc
lock
daa
mov
sub
xchg
clc
xchg
test
or
xchg
loopne
or
loopne
xchg
outsb
js
adc
sub
fcomip
lret
sub
movsb
ljmp
jg
lcall
xor
and
or
xor
es
loop
dec
jle
mov
add
es
stos
js
xorl
add
add
jle
std
ljmp
nop
cmp
ljmp
sub
repnz
scas
add
jecxz
ret
icebp
test
clc
inc
cmp
or
pop
dec
xor
inc
lods
xchg
inc
out
push
ficompl
add
dec
jecxz
fldenv
ret
add
xchg
inc
add
dec
or
jmp
pop
mov
imulb
cmp
sbb
pop
out
mov
pop
and
scas
pop
jne
jecxz
cld
stos
adc
sbb
es
cmc
inc
adc
adc
sbb
cmpsl
add
push
ret
mov
dec
mov
inc
lds
out
pop
je
int
and
sbbl
mov
or
push
dec
or
or
adc
test
out
shlb
dec
cmp
in
mov
sbbb
stos
test
mov
pusha
mov
call
daa
sbb
js
lock
incl
je
add
lea
pop
mov
jl
jb
cld
test
adc
wbinvd
fstpt
or
cmc
push
jecxz
mov
mov
cmp
xor
and
adcb
adc
or
fimull
jg
and
fimull
das
hlt
jg
addr16
popa
jmp
cli
jge
push
fs
movsb
sbb
fsubp
fcomps
mov
xor
call
cmpl
inc
repz
sbb
mov
mov
cmp
shrb
test
nop
inc
inc
arpl
sbb
test
in
imul
loop
mov
or
daa
rcll
adc
int3
sbbb
ss
out
fmuls
or
or
push
inc
lret
ss
pop
xor
arpl
push
pop
or
and
cmc
pop
gs
mov
movsb
rcrl
mov
sbb
mov
lds
jno
mov
int3
decl
jne
push
sarb
out
sub
cmp
idivl
pop
mov
mov
push
or
jb
sub
stos
sbb
jo
mov
push
sub
or
sub
cmp
setb
mov
mov
loopne
mov
mov
cmp
lds
shrb
mov
mov
and
ud0
dec
or
rolb
insl
pop
hlt
ret
add
fidivl
push
sub
cs
roll
jle
fwait
out
jg
add
es
out
sub
mov
adc
cwtl
data16
je
adc
sbb
inc
push
or
js
icebp
jb
push
pop
adc
mov
push
inc
cli
cmp
ficompl
cmp
dec
jno
jb
dec
cmp
test
outsl
cli
lods
xchg
inc
clc
jnp
sti
inc
pusha
cmp
imull
ljmp
xlat
shlb
int3
loopne
mov
je
push
lods
testb
int3
sub
movhps
cmp
push
mov
out
sbb
jo
inc
xchg
mov
mov
inc
mov
loope
add
or
jmp
mov
adc
shr
push
out
icebp
das
rorb
mov
orl
shrl
outsb
jl
mov
outsb
sub
shrl
cmpl
push
loope
pop
adc
jp
rorb
sbb
loope
ljmp
je
call
push
add
mov
cmp
das
jb
repnz
das
push
sub
icebp
mov
orb
pop
nop
andl
stc
bound
lcall
inc
into
mov
xchg
push
and
mov
outsb
loopne
ljmp
repnz
jp
lods
push
repnz
daa
fadd
fists
outsb
data16
jno
daa
int
movsb
jg
jl
or
loope
xchg
test
mov
mov
push
test
inc
lods
and
add
xor
loope
and
xor
pop
or
push
mov
sahf
mov
and
into
test
aaa
lods
movb
xchg
call
add
out
jg
test
jb
loop
jge
ret
roll
push
insb
mov
or
shrl
test
xor
mov
push
lock
and
mov
insb
into
je
aam
mov
add
jle
jp
pop
dec
subb
mov
insl
mov
test
fildl
mov
dec
adc
mov
jnp
adc
mov
pop
incl
test
fstpl
clc
imul
dec
pop
push
jnp,pn
nop
clc
jg
pop
or
mov
dec
mov
or
pushl
shl
or
notl
iret
mov
decb
sarb
and
jle
push
je
push
mov
xchg
xor
inc
cmpps
inc
arpl
addb
addr16
rcrb
pop
cmp
pop
stc
or
pushf
xchg
adc
pop
xchg
iret
sub
std
cmp
and
mov
add
mov
sbb
fidivs
test
or
repz
and
add
xchg
push
xor
cli
mov
push
subl
add
ret
ret
nop
clc
xorl
or
and
inc
mov
ljmp
stc
dec
imulb
outsb
mov
dec
sub
call
loopne
jmp
jne
push
les
imul
xor
mov
stos
scas
add
ret
scas
mov
jg
mov
or
les
arpl
fnstcw
add
fwait
xor
mov
aaa
cmp
add
shrl
shl
xor
xchg
or
ja
fisttpl
push
xchg
xchg
fidivrs
inc
and
xor
sub
clc
inc
ds
ret
cmp
pop
mov
mov
ljmp
sbb
enter
add
and
cmc
lock
adc
aam
enter
loop
leave
in
rcr
shlb
jl
out
pushf
fcmovbe
rclb
cmpsl
jg
adc
push
in
or
sbb
aad
in
lock
adc
lret
bound
mov
adc
adc
adc
or
xchg
out
clc
aaa
mov
inc
mov
sbb
pop
mov
xlat
xor
jmp
sub
and
pushf
pop
sbbb
and
push
sarb
ljmp
add
xor
in
pop
ret
push
in
sub
dec
test
out
aam
or
pop
cld
movsb
adc
mov
testb
mov
cmp
fs
dec
dec
jle
add
inc
pop
incl
jl
dec
sub
mov
cmpb
jno
sbb
mov
push
push
test
jne
rorb
adc
mov
and
xor
addr16
leave
addb
inc
adc
mov
push
out
aaa
je
movsb
addr16
fistpl
mov
lea
daa
mov
push
lods
les
std
push
sbb
jle
clc
mov
mov
inc
mov
and
jne
scas
cmp
mov
sub
insb
bound
out
ret
in
cs
xor
add
lcall
ss
and
test
cmpsl
ljmp
fcomip
out
or
adcl
cmp
roll
push
mov
mov
sub
push
push
push
fsubl
fadds
std
mov
mov
lret
jp
mov
shr
ret
rolb
add
add
inc
test
test
call
mov
fwait
dec
mov
adc
or
xchg
clc
pop
pop
lods
lods
mov
jnp
sub
adc
fisubrl
andb
jb
cmp
sahf
cmpsb
inc
sbb
lods
cmp
sub
push
adc
les
call
hlt
cltd
dec
lret
dec
and
or
cmp
cli
mov
adc
push
dec
aaa
push
aad
pop
in
sahf
cmp
sub
sub
pop
lods
ret
repnz
xor
xchg
dec
mov
cmpsl
or
shrb
fcomps
mov
jne
pop
lods
jl
orb
aaa
push
inc
pop
adcb
iret
sbb
mov
jge,pt
rol
cs
stos
pop
push
push
outsl
loopne
adc
or
jp
stos
pop
enter
add
cmpb
xchg
push
sti
out
test
fimull
sbb
out
insl
repnz
fidivrs
jl
dec
add
pushf
adc
pop
outsl
cmpsb
out
cmp
loope
adc
call
adc
mov
cmpsb
sub
jl
in
loop
jne
add
xor
sbb
dec
ss
aas
mov
push
inc
aam
pop
or
out
pop
cld
andl
xchg
cli
or
push
shl
lods
jecxz
add
scas
push
dec
insb
xor
adc
or
mov
iret
and
movb
lret
sub
sbb
aas
aam
arpl
add
and
lcall
and
lret
inc
dec
test
and
shl
add
adc
push
sbb
mov
jg
sub
roll
jp
fidivrs
in
es
in
xchg
fidivs
jle
dec
jo
inc
ds
push
cmp
ljmp
scas
subb
dec
aas
cld
sbb
clc
jns
pop
cmp
mov
adc
loope
aad
rcr
shlb
jne
sub
jbe
out
jp
sti
scas
lcall
mov
jle
sbb
rol
xor
sub
ret
outsl
dec
adc
rorb
jp
pop
or
sub
clc
cmc
mov
inc
sbb
enter
out
adc
or
aaa
fldl
push
push
pop
jmp
fidivs
jg
sub
cmp
mov
jge
test
xchg
sbb
mov
cs
and
and
jno
popa
fidivrl
mov
or
stos
loopne
stos
or
fs
sbb
std
pop
dec
cli
pop
mov
lea
xchg
mov
out
add
mov
mov
lret
std
mov
test
ljmp
push
cwtl
fwait
pop
rolb
arpl
in
sbb
pop
dec
in
aaa
push
pop
cld
sahf
inc
sub
cmp
or
jecxz
cmpsl
pop
notb
hlt
cwtl
push
and
mov
je
mov
fimuls
in
fwait
sbb
pop
push
idivb
push
jecxz
xorb
aad
mov
jae
adc
adc
imul
test
and
xorb
mov
jecxz
jg
add
lret
mov
pop
jmp
fsubl
std
pcmpeqw
sbb
dec
xor
cmpsb
inc
js
out
push
out
add
mov
add
or
add
jb
mov
test
fistpl
fs
inc
adc
fmuls
icebp
mov
xchg
ret
pushf
xorl
cmp
pop
call
mov
mov
mov
aas
sbb
cmc
scas
clc
jmp
add
inc
pop
adc
lret
add
loope
in
adc
iret
std
jg
fbstp
daa
xchg
mov
data16
loopne
out
test
enter
push
push
es
jecxz
insl
fistpll
stos
je
ja,pn
xchg
aas
push
mov
cmpsl
mov
dec
and
adc
push
xchg
or
mov
fdivr
or
mov
mov
out
inc
loopne
and
je,pn
ja
pop
and
adc
xchg
jmp
incl
cmp
sbb
or
cs
cmc
sub
adc
jnp
rorl
and
rcrb
xchg
xor
decl
xchg
call
xchg
adc
push
imull
sarl
xchg
xchg
sar
nop
jnp
push
mov
mov
test
sub
cmp
xor
in
xlat
cmp
mov
rolb
push
jb
mov
jg
mov
jl,pt
je
inc
add
outsb
dec
lock
mov
xchg
inc
out
cmp
pop
lods
pushf
mov
cmp
dec
inc
pusha
xor
adc
jle
cmp
shll
aad
cld
add
out
jp
lds
stos
or
push
je
sahf
mov
insl
aaa
cld
ljmp
call
mov
inc
sub
loopne
sub
jb
push
rcrb
ja
arpl
ja
int3
sarl
jg
sbb
test
add
push
scas
rorl
fidivrl
sbb
xchg
sub
dec
push
pop
mov
loop
hlt
jmp
and
test
sub
push
test
fs
mov
inc
push
out
or
outsl
mov
cwtl
add
in
nop
cmpsl
ss
mov
push
mov
jns
push
sbb
in
ret
mov
movsb
pop
add
cmpsl
lock
sub
inc
aam
mov
test
lock
ss
dec
or
lret
faddl
mov
jg
out
adc
cmpb
clc
stc
ret
lcall
add
mov
mov
xchg
out
adc
mov
outsl
push
jb
mov
and
rcll
daa
cmp
mov
mov
dec
add
pusha
repz
roll
xchg
ds
sbb
rolb
je
mov
lods
jl
lock
push
fsts
lods
mov
sbb
fistpll
adc
dec
jge
cwtl
jp
sub
mov
mov
and
xor
dec
mov
aad
jo
add
push
or
xchg
test
mov
leave
xor
jbe
fwait
push
inc
sahf
xchg
das
arpl
pop
mov
sub
mov
testl
jb
inc
pop
add
adc
dec
enter
and
xchg
inc
aas
imul
bound
pop
jle
cmp
mov
jmp
inc
filds
xor
mov
dec
pushl
jno
es
xchg
adc
add
mov
nop
gs
push
test
cltd
mov
test
les
loope
pop
lcall
bound
pop
adc
es
add
pop
aaa
std
adc
jle
sub
lea
hlt
adc
mov
jge
inc
and
clc
sbb
mov
inc
add
mov
adc
outsb
loopne
xchg
testl
mov
inc
fsubrp
cmpsb
push
push
arpl
mov
mov
std
mov
inc
push
lcall
dec
lcall
ss
mov
jge
fisubs
iret
add
movsb
add
cmp
mov
shlb
mov
jg
inc
xchg
sub
jmp
popf
adc
pusha
popa
sub
addb
rorb
and
mov
xor
mov
mov
out
mov
shrl
sub
pop
pop
lock
pop
mov
out
insb
mov
push
cmp
sbb
loop
xchg
test
push
in
jge
jo
test
jge
mov
pushl
aad
inc
jecxz
xor
jmp
and
push
rolb
mov
lret
std
add
push
sub
xchg
fistpll
cwtl
in
loopne
sub
mov
xchg
adc
mov
shl
dec
push
pop
pop
adcl
std
add
add
stc
xchg
incl
inc
data16
scas
int3
add
ds
test
mov
inc
mov
cld
dec
data16
aad
fwait
sub
xor
cmp
cmp
adc
sub
aad
sbb
loop
cwtl
adc
aas
dec
xchg
push
scas
jp
mov
dec
pusha
adc
xchg
insb
dec
inc
mov
inc
mov
mov
test
jge
pusha
psllw
adc
xlat
stos
cltd
popa
movsb
rep
insl
in
mov
adc
scas
cli
ljmp
aas
lds
ja
lea
loope
push
xchg
xlat
pop
outsl
incl
add
push
lock
adc
ljmp
js
cmp
in
jp
jo
push
inc
adc
test
jbe
test
push
lret
cld
incl
jle
push
shl
add
aad
int
add
lock
jns
es
mov
mov
popf
aaa
jecxz
pop
cs
push
test
push
mov
aad
fisttps
mov
push
adc
dec
faddp
add
ds
sbb
sbb
mov
and
outsl
push
in
mov
and
idiv
jg
aas
sahf
lahf
out
loopne
outsb
lods
mov
xor
or
outsb
fdiv
jle
cmpsb
mov
mov
mov
xchg
push
xchg
fisttpll
and
in
frstor
into
mov
fisubrl
jbe
xor
pop
jge
ja
icebp
xorb
mov
scas
clc
xlat
pop
add
dec
nop
rcrl
fimuls
inc
shl
mov
call
adc
popf
ss
or
fisttps
lock
xor
nop
and
das
nop
adc
add
mov
in
jl
ret
jecxz
rorb
notb
add
out
aam
and
sub
xor
mov
xchg
sub
cmp
fwait
xchg
xchg
or
push
jmp
mov
add
adc
aaa
or
mov
dec
jecxz
sbbl
and
xorb
sarb
cmp
cltd
mov
popa
sti
test
andnps
push
adc
add
sahf
pop
decl
js
inc
sub
xchg
jo
mov
push
mov
push
or
sarb
icebp
add
icebp
clc
add
lret
mov
sub
ficoml
popa
cmpsb
bound
std
outsl
cmpsl
push
aaa
cld
hlt
push
jl,pt
insb
push
pop
inc
and
adcb
data16
mov
cmp
pop
jno
inc
jl
popa
add
mov
shlb
mov
or
or
nop
mov
sbb
jge
xor
jb
cmpsb
mov
inc
adc
mov
add
insl
fmull
lods
ret
imul
scas
popa
mov
movsb
adc
adc
loopne
sbb
xchg
sbb
hlt
cmpsb
cmpsb
cmp
push
jp
int3
sub
sub
pop
loopne
loopne
jo
jle
sbb
sbb
mov
sbb
out
xchg
lcallw
mov
test
lds
mov
cld
xchg
bound
sbb
inc
mov
int3
xor
cmp
scas
mov
jmp
push
test
clc
lcall
adc
pop
cwtl
cltd
jnp
pop
jb
xor
mov
add
in
sub
jb
loop
aad
xor
jae
test
sbb
pushf
inc
hlt
fsubrs
icebp
push
loope
ret
leave
mov
fucomp
es
add
cmpsl
mov
fs
out
inc
add
cld
cmp
ds
pop
and
mov
dec
dec
cmpsl
dec
loopne
mov
stos
jecxz
call
adc
pop
pop
cwtl
or
cli
xchg
fisubrs
push
jg
mov
dec
test
fdivs
std
push
jmp
ja
jno
sub
popf
and
sbb
cmpsl
out
inc
into
mov
rcr
push
lret
or
lock
push
insl
and
sbb
and
lcall
sbb
icebp
or
test
mov
dec
dec
jecxz
mov
mov
icebp
decl
scas
or
stos
jo
sbb
fbld
xor
cli
lock
mov
push
and
aam
or
cmp
popa
mov
mov
inc
mov
cmpl
cmc
filds
sti
pop
das
scas
jno
push
push
jnp
aas
inc
pop
je
lret
fists
push
outsl
xlat
pop
lock
lock
pusha
enter
rorl
mov
and
ret
loopne
inc
movsl
push
push
jb
std
or
push
ds
cltd
ljmp
imul
sub
mov
xchg
mov
mov
push
push
xor
add
push
add
xor
mov
mov
jb
mov
stos
call
out
add
icebp
xchg
sbb
loope
add
xor
jecxz
mov
loope
aam
testb
stc
popa
lcall
jbe
dec
fisubs
clc
call
inc
fwait
pop
xchg
dec
insb
push
aas
and
mov
mov
jbe
mov
cmp
xor
pop
cmp
sbb
cltd
adc
pop
push
aaa
jl
ja
xor
mov
enter
xchg
loopne
cmp
call
add
add
lds
cmpsb
cmp
adc
or
lcall
ret
or
pop
ret
adcl
lea
mov
rclb
cld
idivb
nopl
stos
inc
cmp
adc
mov
fisubl
dec
jne
je
or
incl
add
mov
out
jmp
pop
inc
dec
sbbl
loopne
add
mov
jp
push
mov
push
stos
push
push
js
fs
enter
jo
mov
les
in
pop
cmpsl
call
inc
and
std
xor
int3
adc
adc
or
xchg
and
xlat
pop
add
in
repz
sti
daa
push
js
pusha
jae
lods
cmp
shrb
push
jl
add
clc
test
mov
push
lods
insl
jecxz
clc
xchg
sub
aas
adc
nopl
cmp
test
into
test
stos
mov
push
and
movsl
in
push
xchg
mov
scas
push
add
xchg
insb
rcrb
mov
push
roll
inc
push
loopne
dec
lods
mov
lds
scas
js
fiadds
mov
mov
sub
enter
test
fucomp
add
mov
cmc
sbb
dec
adc
cld
int
repnz
out
daa
out
push
fdivrp
or
es
sbb
shrl
and
add
mov
ss
pop
sub
and
jp
inc
lock
div
mov
call
out
push
lret
adc
mov
imul
mov
mov
cmp
and
sbb
fs
es
sub
pop
pop
jae
jg
leave
pop
test
icebp
or
jp
into
aaa
push
push
xlat
sbb
lods
dec
mov
mov
js
dec
mov
ljmp
push
in
jne
mov
or
jge
xor
pushf
push
lock
or
popf
sub
enter
cmc
dec
jle
int
stos
cmp
adc
xor
andb
in
popf
mov
dec
jne
jbe
incb
mov
add
outsb
mov
cmp
out
cmpsb
push
mov
dec
insb
idiv
cmp
add
add
xor
inc
je
xchg
cmpl
insb
in
push
sbb
mov
sbb
loopne
call
xor
inc
cmp
lods
aam
mov
inc
xor
cmp
outsb
std
and
nop
xor
out
sti
jp
and
push
clc
xchg
inc
push
lods
inc
adc
in
sub
and
sub
jmp
mov
pop
pminsw
mov
clc
adcb
cmpsl
jp
cltd
mov
mov
push
lods
test
mov
lock
out
pusha
lea
and
aam
movsl
add
arpl
daa
in
and
jmp
inc
pusha
sbbb
js
stos
push
pop
push
mov
xchg
inc
clc
fwait
and
mov
mov
shrl
ss
or
and
push
outsl
pop
push
in
out
add
out
call
xchg
addl
mov
cli
pop
rclb
lds
repz
and
hlt
sarl
sub
fsubl
fistpll
les
je
movsl
ljmp
roll
cwtl
mov
xor
outsb
inc
jo
shrb
inc
mov
add
push
out
in
cmp
mov
ljmp
clc
in
and
ja
mov
add
adc
push
imul
rcll
decl
sti
test
sbb
cmpl
fstpt
push
js
stc
loopne
push
xor
mov
aad
sbb
int
addr16
adc
adc
mov
test
sub
int3
pop
sub
adc
jmp
add
clc
push
push
jecxz
add
mov
test
out
enter
pop
mov
fimull
push
cld
mov
sysret
pop
inc
pop
fistpl
adc
push
pop
adc
pop
add
inc
roll
jle
lds
adcl
js
cwtl
mov
sbbb
clc
clc
jl
lock
movl
dec
insb
outsb
adc
std
xlat
cmpsl
pop
inc
nop
pop
and
in
push
mov
cs
aas
popa
and
push
sub
dec
add
inc
pop
mov
call
mov
ror
jo
sbb
mov
es
enter
jno
cmc
cs
xor
dec
mov
dec
mov
in
sti
sub
clc
lods
fdivs
pop
mov
shll
cmp
xchg
ret
hlt
inc
dec
cmp
inc
or
aam
dec
sbb
inc
and
push
clc
js
fnsave
adc
sbb
popf
jno
push
bnd
aad
pop
add
sub
out
call
les
push
test
loopne
cld
xor
lcall
std
das
into
adc
or
adc
jecxz
pop
bound
xchg
cmp
js,pn
sbb
pop
xchg
mov
loop
repz
inc
xorl
and
mov
push
stos
or
fisubs
mov
or
pop
add
mov
mov
lcall
rorl
xlat
xor
jl
pusha
pushl
adc
sub
xchg
stc
loope
xchg
lea
aaa
pop
mov
mov
push
stos
and
jle
repz
adc
les
sbb
sbb
and
mov
filds
rcl
int3
pop
adc
fdivl
cmp
jg
dec
insl
bound
cmp
xor
mov
jp
or
rcl
loopne
sbb
add
filds
or
gs
ss
lcall
jbe
mov
and
xchg
sub
fs
mov
lret
sbb
es
jecxz
nop
ljmp
orl
lock
adc
jno
repz
mov
add
mov
jp
and
mov
nop
add
rol
xchg
push
or
lock
sarb
adc
stos
xlat
jbe
jle
pop
xor
xchg
cs
add
fnstcw
jl
push
pop
popa
adc
fisttpl
std
fst
pop
inc
and
inc
pop
xchg
push
push
incb
push
inc
fs
hlt
mov
int3
cmpsb
jp,pt
mov
inc
out
mov
js
mov
mov
lock
sbb
insb
mov
lods
pop
shr
fisubrs
fidivl
and
repz
andb
push
pop
push
out
or
push
int
mov
and
and
ret
test
loopne
out
std
mov
mov
aas
lock
jle
mov
push
movsb
fs
hlt
dec
pusha
cmp
and
jg
pop
sbb
and
ret
lock
xchg
and
cmp
test
inc
hlt
repnz
xchg
fidivrl
lock
jns
add
aaa
mov
stos
rcl
imul
sub
popf
add
xor
push
inc
lret
xor
std
dec
adc
gs
mov
dec
fdivl
test
mov
xchg
loopne
jae
clc
test
out
xor
inc
xor
scas
push
outsb
jne
mov
pop
dec
fidivrl
les
jge
ljmp
pop
cmp
das
dec
sub
jp
int3
ds
sahf
leave
inc
clc
adc
scas
mov
sub
les
std
int3
cwtl
mov
add
xchg
cmp
aas
sbb
cli
ficoml
mov
jmp
jl
js
movsb
sbb
cli
ljmp
xlat
fmuls
cli
push
pop
repz
aaa
push
inc
pop
repnz
push
adc
and
pop
pop
inc
in
pop
hlt
inc
je
loopne
clc
cmpsl
jo
push
stos
jns
cmpsb
lds
das
inc
ret
pop
add
cmpsb
repnz
loopne
jno
sub
and
jp
insb
add
sarl
pop
cli
stos
data16
fbld
jo
add
in
push
popl
enter
lods
xorl
dec
xor
cmp
icebp
aam
lods
and
ljmp
and
mov
jmp
fcoml
cmp
mov
fmuls
cmpsb
dec
mov
in
hlt
incl
mov
stos
pop
inc
sub
cmp
and
inc
idiv
xchg
ret
or
andb
rolb
pusha
push
scas
sub
dec
cmp
pop
sbb
loopne
inc
jbe
call
dec
jne
sbb
sar
les
jne
aam
dec
call
xchg
test
push
xchg
hlt
dec
enter
ds
call
lods
cld
or
mov
push
xor
loop
arpl
jae
hlt
lcall
push
gs
js
add
push
jno
jmp
loope
inc
ret
adc
xchg
cmp
ds
push
and
jg
inc
pop
sahf
movsl
test
inc
xor
mov
into
add
lods
push
loop
nop
cmpb
ljmp
push
iret
and
cmp
pop
fisubl
push
and
jle
rolb
inc
outsl
pop
sbb
mov
xor
jb
jge
mov
mov
scas
pop
lock
dec
mov
repnz
mov
xchg
std
arpl
hlt
jge
lock
inc
dec
xor
jle
push
fidivrs
fnstcw
xor
popl
adc
cmp
add
cmp
mov
mov
or
xlat
out
pop
pusha
mul
inc
lods
int3
cs
add
mov
xor
sub
and
dec
loopne
and
mov
sub
or
push
cltd
js
mov
sub
into
mov
ja
xchg
ds
sahf
xchg
sahf
xor
pop
jmp
loopne
push
int
in
push
push
sbb
or
std
fs
movsb
xor
cmp
lea
dec
outsl
jne
ret
cmp
xor
mov
divb
jg
ljmp
pop
adcl
cwtl
push
shlb
call
mov
scas
mov
adc
xor
div
jmp
rorl
mov
lcall
dec
adc
mov
inc
out
pushf
out
popf
stos
dec
out
mov
or
dec
jl
aas
pop
xchg
mov
cmp
cmp
dec
enter
cli
icebp
in
fbld
push
js
sarb
enter
jp
inc
stc
or
js
jecxz
ret
push
add
xchg
xor
pop
xchg
sub
nop
or
mov
inc
cltd
mov
adc
mov
push
ret
sbb
gs
jno
fnsave
cld
fdivrs
stos
mov
test
dec
bound
push
and
pushf
or
js
lcall
dec
push
cmp
push
mov
mov
mov
fisttpll
xor
sub
je
lcall
adc
daa
xor
xchg
push
xchg
jmp
push
arpl
dec
data16
lods
or
add
mov
inc
xor
push
pop
cmc
jp
loopne
test
fsubs
jmp
push
lock
mov
shlb
decl
call
aaa
loop
sbb
mov
int3
add
xor
mov
jno
and
cwtl
pop
mov
fs
cmp
cmp
stc
fwait
inc
clc
pop
adc
sbb
data16
shrb
xor
bnd
mov
push
pop
push
or
push
mov
and
inc
or
outsl
inc
repnz
popa
add
adc
pop
dec
jmp
pop
mov
sbb
push
dec
jecxz
jge
repnz
adc
adc
cmp
outsl
mov
and
xchg
std
loopne
or
out
lret
mov
jno
popa
adc
out
lcall
call
mov
repnz
or
mov
adc
xchg
xor
movsb
xor
mov
divb
push
pop
fdivr
aas
and
test
je
inc
adc
ret
fsubs
mov
popf
pop
sub
pop
outsb
inc
cltd
incb
pop
call
ja
je
out
es
inc
das
jecxz
add
cmp
fldt
cmp
jp
cli
dec
mov
mov
xchg
rolb
and
xchg
pop
fs
imul
add
fdivrs
iret
add
ljmp
clc
ret
lret
jmp
jp
fisubrs
push
inc
out
adc
mov
jle
enter
int3
lahf
dec
dec
mov
sub
call
clc
dec
fadds
dec
loope
jmp
sub
and
xor
or
adcb
mov
in
ja
and
hlt
icebp
loop
cld
stos
sub
stos
mov
xor
shll
das
sub
mov
adc
movsb
mov
pop
std
lcall
ljmp
decl
loope
clc
or
xchg
pop
and
lret
popa
jmp
pop
cwtl
jmp
xchg
lahf
add
sbb
cmpsl
scas
je
add
pushf
fwait
ljmp
shl
push
enter
roll
mov
or
adc
or
inc
ds
nop
inc
dec
or
xlat
fisubrs
loope
pop
fsubrl
loopne
xlat
xchg
pop
sbb
incl
mov
hlt
inc
jns
pop
out
jo
xchg
icebp
imul
outsb
mov
gs
or
add
mov
int
add
jp
lods
or
out
ljmp
lret
insl
add
sbb
int3
mov
sbb
cld
inc
push
dec
sbb
inc
ljmp
cld
or
cmpl
lods
xor
mov
adc
leave
lods
inc
ljmp
fwait
outsb
mov
pop
je
inc
imul
and
add
sbb
js
bound
mov
push
xor
inc
std
jmp
pop
inc
jp
add
movsl
push
mov
je
adc
add
mov
test
scas
and
fldl
mov
cmp
mov
sub
pop
push
pop
shrb
std
inc
jl
cli
sbbl
stos
jo
ret
addb
cmp
inc
dec
push
in
call
das
test
pusha
inc
cmp
adc
out
nop
out
xor
add
fwait
ss
scas
dec
xchg
cmp
mov
sub
orb
ss
fildll
cmp
and
loope
cs
mov
loop
lcall
lret
pop
add
add
sahf
and
or
mov
aas
sub
lcall
xchg
adc
xchg
scas
fists
loop
stos
adc
add
daa
dec
sbb
fidivl
and
pushf
and
out
xchg
outsb
adcb
push
dec
fimuls
cwtl
pop
add
mov
sarl
jecxz
or
xor
shl
sbb
int3
pop
out
fldl
mov
lcall
and
sti
or
adc
mov
xor
cmc
push
pusha
rcll
cmp
sbb
lcall
cmc
push
lret
leave
out
dec
incb
sbb
cmp
into
call
into
rolb
and
out
aam
outsl
xor
cld
jmp
mov
or
pop
cmp
sbb
pop
mov
push
aaa
std
mov
loope
sub
jbe
test
jg
scas
dec
sbb
mov
add
hlt
mov
dec
jb
and
mov
mov
fwait
push
je
mov
clc
sub
lds
jno
ss
fimull
jmp
pop
hlt
or
sbb
mov
test
mov
loope
mov
mov
sbb
movsb
jecxz
xchg
out
mov
hlt
cmp
in
xor
mov
js
push
aas
dec
ja,pt
repnz
pop
push
bound
and
add
cmp
fists
das
call
add
and
push
imul
in
sbbb
je
in
inc
lret
jg
subb
pushl
repz
xchg
mov
nop
ret
lock
push
sbb
rolb
hlt
in
pop
and
aaa
sub
enter
xchg
cld
cmpsb
popf
jmp
out
scas
inc
pop
rorl
jne
inc
enter
lds
hlt
sbb
fisubl
add
push
sbb
adc
jp
fwait
outsl
test
int
inc
push
orl
xchg
int
sbb
aas
mov
js
outsl
aas
repnz
dec
icebp
push
scas
pop
or
push
adc
xchg
push
xchg
dec
xchg
cmpl
jno
outsl
nop
lock
inc
cmc
outsb
jecxz
enter
xchg
lock
mov
in
sbb
stc
or
outsb
icebp
xchg
xchg
sahf
xor
mov
scas
mov
xchg
loope
adc
push
push
fcomp
aam
daa
jbe
sti
inc
pushl
repnz
sbb
das
dec
cmp
sbb
mov
shrl
shrb
int
lret
or
outsb
fs
inc
cmp
jle
fcmovnu
mov
stos
lcall
and
push
cld
or
add
jbe
mov
and
es
pop
enter
add
dec
add
jb
pop
xchg
stos
sahf
pop
or
or
in
jle
sti
leave
and
test
or
jmp
orb
xchg
nop
test
jp
subl
adc
aad
daa
fidivrl
mov
sbb
sti
hlt
cmc
mov
in
lcall
shlb
inc
add
cld
mov
adc
mov
add
lcall
cmp
pop
xor
jb
pushl
inc
pushl
inc
mov
loop
push
pop
ss
lret
andl
sub
jmp
jecxz
push
push
imul
lods
sahf
push
push
dec
push
ja
loopne
mov
ret
xchg
mov
fcomi
push
lds
adc
adc
sub
call
sub
fisubl
insl
jnp
popa
fdivs
mov
adc
lcall
rcrl
aam
push
es
shlb
mov
cmp
imul
loop
outsb
dec
ret
sub
or
push
mov
mov
shrb
out
jo
push
mov
mov
pop
xor
push
pop
idiv
pop
rorb
mov
or
das
add
jecxz
ds
inc
cmp
mov
or
mov
mov
xor
call
cmp
pop
xchg
in
sub
inc
lods
push
lcall
push
adc
fidivl
mov
inc
ljmp
mov
sarb
sub
push
jmp
mov
sbb
mov
mov
cmpsl
mov
call
test
pmaxub
aas
js
mov
push
jbe
jl
mov
jmp
jae
jbe
out
lock
out
ficoml
mov
sub
add
sub
xchg
lock
dec
loopne
xchg
incb
cmp
push
ror
and
sahf
idivb
and
mov
add
cld
adc
adc
fdivrp
dec
or
mov
pusha
inc
jg
loopne
jp
and
push
rcrl
aas
adc
jle
pushf
xchg
mov
jle
mov
sahf
xchg
lods
fisubrl
std
leave
test
pop
mull
je
or
outsl
mov
jecxz
dec
int3
jl
lahf
sbb
stos
mov
adc
ret
sbb
jno
or
sub
sarl
inc
sbb
dec
jbe
fisubrs
cs
sub
add
push
je
je
bound
push
jo
call
push
aas
fcmovb
aaa
aas
outsl
lea
cli
inc
fcomip
jns
pop
dec
ljmp
das
adcl
orb
xor
push
jg
movsl
sbb
sub
sbb
hlt
call
mov
flds
xchg
dec
xor
out
leave
inc
lea
push
and
icebp
in
js
mov
pop
sti
inc
ret
xchg
clc
mov
mov
mov
decb
sbb
call
pop
call
popa
fnop
adc
std
pushl
fisubl
xchg
adc
insb
inc
decl
xor
iret
push
sub
inc
shlb
jo
inc
mov
adc
pop
mov
or
mov
into
xchg
pusha
hlt
push
in
mov
inc
sub
cmp
sub
mov
push
lods
in
sbb
mov
push
nop
fmul
je
push
into
movsb
cmp
push
das
jecxz
andb
sbbl
test
rcll
loop
inc
sub
push
dec
movsb
sub
int3
jo
mov
hlt
add
rcll
cmpsl
adc
roll
push
cmp
lret
std
cli
push
adc
mov
arpl
and
add
or
jmp
mov
jnp
mov
loop
push
adc
adc
sbb
inc
pop
cltd
pop
shrl
aam
jp
and
add
fisubrl
mov
pop
lea
cmpsb
aad
cmc
lahf
or
loop
fisubrs
or
xchg
stos
js
aas
mov
xchg
cmp
loope
sub
jo
sti
orb
jbe
mov
jnp
mov
or
loop
mov
jge
loope
mov
push
dec
cmp
and
fistps
mov
mov
rcr
js
out
loop
inc
inc
mov
les
adc
scas
mov
test
aam
nop
shl
out
pop
sahf
cmp
add
push
add
fcomip
xor
adc
mov
imul
cwtl
imul
mov
mov
cmp
ss
push
mov
sbb
push
enter
pop
cwtl
sbb
mov
out
or
sbb
sarb
jge
mov
and
cmp
cmp
dec
clc
xchg
loopne
pusha
mov
nop
test
add
sbb
rolb
dec
mov
mov
pop
mov
cmp
fwait
incb
mov
push
mov
pop
aad
dec
cmp
cmc
add
jmp
or
inc
xchg
mov
iret
xchg
imul
lods
cmp
or
jnp
sbb
mov
out
call
sbb
lcall
sbb
inc
inc
pop
fbstp
clc
sub
pop
dec
sbb
push
mov
jg
dec
ja
daa
inc
dec
sbb
dec
orb
mov
daa
jno
xor
stc
dec
pop
lock
and
decl
sub
or
xor
mov
decl
xchg
mov
add
stc
andb
fidivl
incl
int3
sbb
xchg
pop
jo
sub
and
dec
loope
jnp
mov
xor
mov
xor
push
xchg
add
xchg
adc
comiss
xchg
fistl
jmp
cwtl
cli
xchg
cli
ja
call
pop
xor
jle
lcall
mov
adc
mov
add
sbb
xchg
pop
pop
sbb
cmp
sbb
repnz
dec
or
aad
push
inc
sub
notb
adc
cmpsb
jnp
pop
jge
jge
scas
sbbb
add
mov
ljmp
adc
data16
jecxz
or
pop
jbe
loop
lcall
pop
inc
test
out
and
into
out
scas
pop
hlt
jns
testb
sbb
repnz
clc
sbb
sti
mov
jbe
sbb
add
sub
mov
xchg
add
leave
cmp
sbbb
adc
sahf
loop
hlt
xchg
xchg
mov
xchg
jle
mov
xchg
or
mov
call
insb
cmpsl
lock
mov
push
sbb
repz
inc
imul
data16
in
cwtl
jle
hlt
dec
test
and
inc
shrl
pop
fidivrl
push
ljmp
pop
cmp
mov
lret
lds
stos
sbb
dec
sbb
orb
push
mov
push
sbb
lcall
mov
jecxz
cwtl
lcall
sub
pminub
inc
and
ret
in
jge
xchg
inc
dec
mov
popf
ficomps
and
out
rclb
push
scas
andb
cmp
in
inc
cmc
or
ss
xor
cmp
mov
mov
icebp
je
pop
and
jmp
xchg
je
inc
rorb
pop
push
cmc
pushl
dec
push
mov
fcomp
mov
lea
imul
or
cli
dec
sbb
jecxz
cmp
mov
cmp
xor
sbb
sbb
lods
mov
cli
add
mov
icebp
pushl
cwtl
movsb
xor
ljmp
stos
pop
hlt
add
fs
shlb
mov
cs
mov
adc
data16
ja
int3
add
jg
and
ret
mov
inc
test
insb
xchg
out
in
es
xchg
leave
test
lock
xlat
mov
scas
or
ja
js
xchg
pop
xchg
xchg
jo
cmc
sbb
loop
sbb
push
jbe
jge
jo
loop
add
xchg
out
and
push
xchg
and
adc
mov
push
jg
inc
lret
fnstenv
cmc
fwait
or
sbb
push
mov
pusha
and
cmp
adc
cs
shlb
pop
cmpsb
dec
cmp
xchg
dec
adc
fwait
out
mov
sarb
aad
inc
inc
and
xchg
cmp
and
add
lds
cmp
ja
dec
jecxz
or
dec
leave
dec
push
adc
es
or
add
sub
enter
add
sbb
push
inc
shlb
inc
mov
aad
dec
push
mov
nop
hlt
in
pusha
cmp
jns
pop
push
cs
pop
push
imul
movsl
ss
idiv
sbb
jg
add
test
cmpsb
add
adc
mov
pop
xor
pop
mov
add
mov
mov
push
repz
dec
iret
inc
pop
mov
or
sub
cwtl
jo
or
sbb
push
xchg
test
fimuls
mov
sub
jle
mov
cmpsl
add
dec
jne
icebp
lret
lcall
and
dec
mov
shr
jg
test
aad
pop
ds
idivb
dec
pop
mov
fidivl
and
adc
dec
push
lock
pop
and
fdivrp
cmp
adc
lret
aas
sbb
mov
jbe
mov
std
mov
add
sub
mov
jp
inc
cmp
or
xchg
jecxz
xor
and
mov
xchg
int3
mov
into
add
out
rcrb
push
dec
mov
scas
add
pop
jne
mov
xorl
loopne
test
mov
dec
mov
std
popf
rcr
mov
sbb
cld
scas
call
inc
fistl
push
lods
adcl
cmp
push
cld
mov
mov
inc
imul
scas
dec
popa
popa
xchg
int3
xor
or
mov
mov
push
scas
inc
cmp
or
jle
jb
cmp
cld
fists
dec
push
outsb
and
mov
dec
jbe
inc
outsb
sti
cmp
repz
jecxz
mov
leave
cmp
je
jo
push
lret
xchg
and
rol
push
push
loopne
cmp
lcall
insl
pop
sbb
sbb
sbbl
loopne
add
jne
push
jmp
push
pop
mov
mov
pop
gs
cmc
fdivr
xchg
sbb
enter
sub
aaa
int3
aas
and
jne
cli
aam
cmpsl
shll
dec
cmp
fld
pusha
imul
cmc
pop
mov
or
enter
or
fimuls
daa
cmp
jg
sbb
cld
push
mov
scas
xor
je
push
and
movsb
daa
in
call
scas
mov
xlat
add
clc
add
aaa
sarb
shlb
xor
jmp
xor
inc
divb
flds
fdivs
pop
mov
xchg
add
mov
decl
imul
imul
add
sbb
xchg
xor
mov
push
push
cmpsl
data16
inc
push
add
nop
sub
unpckhps
inc
rcll
and
or
pushf
decl
fbstp
or
pop
ljmp
push
fbld
xchg
cwtl
das
ja
mov
sub
nop
adc
and
outsl
pop
icebp
insb
je
lds
rorb
dec
enter
sar
jbe
loopne
dec
fs
lret
jns
dec
xchg
add
ljmp
int3
dec
pushf
sub
or
cwtl
add
test
fiadds
fnstcw
aas
mov
adc
cmp
outsb
adc
mov
add
cmpsl
js
jno,pt
cmc
lods
das
ret
push
mov
mov
mov
pop
mov
pop
mov
inc
jne
test
xor
repz
cli
stos
inc
pop
rorb
int3
add
call
add
jno
pusha
xchg
pusha
fisttpll
cmp
std
pop
cmpsb
rorb
leave
mov
pop
aaa
push
ljmp
pop
dec
mov
insb
clc
mov
mov
jle
cmp
push
filds
jp
xor
push
unpcklps
in
mov
add
test
sbb
push
icebp
sbbb
jns
push
lcall
mov
xor
sarl
sbb
cltd
test
test
dec
decl
aaa
lock
aad
cwtl
jns
shrb
aam
ljmp
push
add
inc
cmp
cld
jmp
push
repz
mov
add
push
insb
pop
hlt
sbb
xchg
and
mov
test
test
sbb
jo
xchg
stos
shlb
lret
loope
icebp
cmp
arpl
mov
cmp
and
cmp
mov
imul
call
ret
insb
mov
pop
stc
outsb
and
jecxz
dec
hlt
and
inc
call
and
enter
adc
bound
add
je
daa
add
pop
and
inc
mov
mov
adc
hlt
daa
push
fiadds
jbe
pop
out
inc
mov
mov
outsb
loope
clc
push
stos
lock
and
cmp
push
dec
jecxz
stc
or
loop
test
push
jp
xchg
dec
push
dec
ret
sub
cmc
repnz
fnsave
mov
sub
es
or
movsb
jp
cld
insl
ds
cmpsb
rorb
mov
aad
in
sahf
jmp
je
inc
or
aaa
inc
test
fimuls
add
pop
in
dec
push
mov
dec
orl
mov
push
movsl
ror
subl
xchg
push
pop
daa
lods
fwait
xchg
mov
bnd
push
sbb
rcl
add
fmull
pop
lock
cmp
push
mov
or
leave
hlt
mov
xor
stc
fisubs
push
add
sub
xor
inc
pop
inc
mov
inc
push
add
add
lcall
xor
xor
icebp
fdivrp
movsb
xchg
mov
xor
sub
loop
dec
or
add
adc
cld
and
mov
dec
ret
les
decb
fwait
rcrb
pop
icebp
pushl
mov
jns
fldenv
and
hlt
stos
or
ljmp
push
rclb
dec
cli
aas
enter
stos
xor
dec
xor
lods
push
mov
add
sub
aas
lcall
cli
fwait
cmpl
and
xor
adc
add
pushl
shrd
shll
sbb
test
inc
or
and
sbb
jbe
push
adc
dec
xchg
xchg
enter
mov
icebp
popf
dec
add
call
jne
jle
ljmp
sbb
pop
lcall
xor
xchg
inc
or
push
pushf
ss
xlat
pop
sti
inc
or
push
xchg
push
in
mov
mov
or
pop
movsl
ss
rsm
lret
or
call
inc
or
stos
stos
mov
aam
stos
inc
and
xor
or
in
bound
enter
and
cmpsb
outsl
mov
push
gs
sub
ss
adc
loope
stc
int3
ljmp
iret
ret
cmpsl
imulb
call
push
and
or
loop
cmp
aam
push
adc
out
add
add
jb
add
inc
xor
xor
stos
mov
lcall
repz
subb
push
adc
sbb
add
fdivr
mov
div
das
inc
or
xor
sarl
jg
ja
and
add
sbb
and
pop
scas
push
add
pop
add
pop
and
sub
adc
nop
les
das
clc
les
mov
lcall
sub
sahf
xchg
cmp
and
xchg
mov
inc
jae
scas
les
add
insb
adc
adc
inc
loope
sbb
repnz
or
cli
lock
xor
aad
adc
pop
insl
jp
or
sbb
imul
xchg
xchg
mov
mov
out
fisubs
enter
insb
out
cwtl
fwait
pop
ss
pop
movsl
sbb
bound
mov
inc
jg
xor
adc
cmpb
lods
lods
xor
mov
inc
cmp
mov
dec
and
mov
ficompl
adc
push
push
add
cmp
mov
sarb
xchg
xchg
inc
movsb
push
or
mov
mov
add
or
jg
pusha
inc
addr16
mov
andb
sbb
cli
movsl
cmp
jecxz
js
pop
dec
push
icebp
cmpsl
xchg
ljmp
mov
dec
dec
pop
js
fsubrp
das
pop
ret
mov
dec
sub
mov
clc
push
cmpsb
ret
sti
sub
pop
or
pusha
or
incl
cmp
icebp
xchg
mov
fidivs
inc
dec
xchg
or
dec
repz
xor
mov
movsl
sbb
sbb
inc
push
mov
adc
push
pop
mov
jo
hlt
jne
push
stos
dec
inc
fisubs
ss
mov
jmp
icebp
lods
call
pop
jl
in
bound
add
sbb
movsb
outsl
fmuls
mov
mov
jb
leave
sbb
add
add
pushfw
inc
mov
pandn
movsb
jno
and
add
ret
jne
add
das
mov
mov
dec
shrb
dec
out
pusha
sub
rclb
dec
inc
jge
aas
pop
or
push
cld
and
into
int3
xor
fimull
or
add
and
xchg
add
and
adc
mov
jle
add
cwtl
mov
adc
inc
dec
sub
mov
out
rolb
fsub
shll
sbb
jle
jp
loop
mov
lock
dec
add
inc
lods
mov
enter
fistpll
xchg
push
std
inc
stc
and
xchg
mov
or
xor
xorb
fisubl
je
addl
jl
cmp
mov
adc
xchg
cltd
and
test
je
sbb
lret
cmp
clc
call
enter
setp
fmulp
jecxz
dec
jae
shll
push
mov
push
mov
sbb
out
pop
cmc
out
incl
scas
sahf
and
pop
xchg
inc
mov
xor
pusha
and
inc
add
call
ljmp
xchg
fwait
and
pop
dec
push
sbb
out
sar
dec
in
leave
mov
andl
jecxz
push
roll
and
scas
clc
sbb
and
push
aas
mov
pusha
mov
in
mov
stos
pusha
push
mov
pop
shrb
push
outsb
and
stos
mov
push
mov
xchg
out
roll
jns
andps
push
xor
xchg
and
std
nop
shl
cmp
inc
js
xchg
jns
ljmp
jne
repz
push
sub
mov
and
push
ja
cmpsl
dec
int3
cmp
adc
ja
clc
loop
mov
inc
js
icebp
sarl
sti
inc
testl
xchg
pop
ds
mov
clc
jg
js
andl
and
sbb
add
or
aam
aam
dec
clc
fildll
in
cmp
in
popa
and
ficompl
cli
std
shll
lahf
mov
and
fsubl
cmp
ss
fstps
ds
cwtl
pushf
cmp
and
mov
jbe
out
or
popf
shll
inc
ds
push
add
push
test
scas
lcall
push
push
or
in
mov
aam
sbb
adc
idiv
mov
sub
ja
jo
jne
push
shlb
aam
lock
fadds
enter
lds
repnz
adc
js
mov
aam
push
inc
mull
mov
push
jecxz
mov
cmc
fbld
hlt
filds
adc
cmpsb
pop
enter
push
and
outsl
cli
pop
vmptrst
call
test
cld
pop
jp
lds
mov
es
xor
sbb
popa
and
and
cmp
sbb
ret
loopne
add
int3
push
sti
xor
adc
movsb
mov
and
mov
stos
jl
jg
push
in
xchg
push
flds
mov
clc
cmp
leave
add
call
mov
cld
lret
cmp
xchg
ds
mov
cli
pop
aam
xor
ret
and
nop
inc
push
adc
cmc
mov
clc
cmp
pop
adc
movsb
xor
jmp
outsb
cmp
xor
mov
int3
gs
hlt
xchg
or
adc
clc
cmp
cwtl
notl
xchg
ljmp
pop
xchg
cmp
insb
cwtl
outsb
and
pop
lock
sub
cltd
cmp
mov
lds
stos
clc
loopne
mov
mov
ss
add
mov
rcrb
inc
pop
fsubs
pop
scas
fbld
insb
shrl
cmpl
mov
loopne
or
or
jb
decl
lock
push
outsb
ds
rolb
dec
push
es
outsl
clc
cmpsb
sub
sub
bnd
cmp
adcl
inc
sub
mov
lea
jno
pushf
outsb
mov
data16
repnz
sub
ss
adc
push
or
or
test
js
push
into
or
mov
mov
add
sbb
pop
and
sti
dec
cli
lahf
add
add
bound
jle
pop
xchg
push
push
or
out
sahf
mov
loopne
loopne
inc
pop
and
mov
xchg
jp
loope
movsb
add
mov
es
ljmp
or
lds
push
or
dec
cld
jbe
adc
lcall
xor
and
js
jmp
aas
mov
cmpsb
push
and
orl
shlb
mov
lcall
adc
adcb
push
ret
out
xor
movsl
pop
sbb
sub
xchg
ret
inc
fdivs
cld
test
add
pusha
dec
jae
dec
fiadds
cmp
pop
xor
add
add
mov
orb
ret
push
rclb
lods
rolb
daa
fldl
jle
and
bound
stc
and
ror
adc
aam
enter
jmp
in
fimuls
rorl
sahf
push
inc
fsubrs
pusha
inc
test
int
jmp
sbb
jp
add
or
xor
mov
or
xchg
xor
jns
test
adcb
arpl
and
loop
inc
cmp
inc
mov
push
and
add
data16
and
out
adc
push
jg
outsb
icebp
sti
out
add
aaa
jmp
sbb
cmp
sbb
adc
sahf
add
push
sarl
cmp
xchg
or
in
mov
xchg
repz
mov
add
inc
shll
xorb
pop
fists
push
sub
jo
push
pop
adc
jb
mov
add
punpckhdq
clc
loop
pop
loopne
out
adc
mov
paddsw
test
push
jmp
stc
nop
push
sub
dec
in
outsl
lds
cmp
xchg
scas
push
pushf
push
cmp
mov
ret
aaa
fbstp
clc
mov
jg
fstpt
adc
adc
cmpsw
imul
xor
xchg
jg
jle
jne
adc
pop
loopne
aaa
push
fistl
pop
and
faddp
and
xchg
insl
inc
pop
test
rcll
dec
sahf
inc
setle
movsl
xchg
pop
add
pop
mov
mov
fcomps
pop
adc
test
mov
mov
push
mov
imul
jle
lods
xorl
outsb
sub
sub
adc
fbstp
sbb
test
dec
and
fistpl
and
or
imul
repnz
call
pushw
lcall
out
fildll
or
or
popf
pop
add
lret
addb
mov
adc
fcos
inc
fsubs
jns
jns
gs
cld
mov
scas
popa
cli
test
out
add
xchg
mov
mov
sbb
cvtps2pi
clc
jge
mov
mov
test
lds
add
jecxz
repnz
mov
scas
adc
fisubrl
or
jns
ds
jl
rol
mov
pop
or
ret
push
rolb
dec
gs
scas
jbe
mov
jno
es
jecxz
add
call
adc
sub
mov
lods
fcmove
xchg
icebp
xor
movl
pushf
or
movsb
in
dec
scas
sub
push
and
pop
popl
scas
bound
dec
int
cwtl
hlt
leave
or
shl
gs
dec
cmpsb
insb
push
mov
pushf
js
sarb
jbe
xchg
add
mov
leave
mov
iret
rcr
test
js
call
push
jp
and
dec
mov
pop
jl
sub
add
iret
sub
int3
outsb
leave
insb
push
shll
lods
insl
movsl
mov
xchg
mov
ret
adc
insl
nop
xor
aas
xor
hlt
jo
add
fwait
inc
les
shrb
mov
mov
cmp
stos
mov
sub
inc
lds
dec
or
pop
inc
adc
pop
addr16
dec
jle
xorl
mov
iret
pushf
mov
add
fimuls
sahf
adc
iret
jbe
dec
mov
js
inc
sahf
repz
xlat
imul
outsl
js
pop
mov
mov
add
test
rep
jg
ja
enter
insl
in
insl
jl
add
push
mov
inc
ss
clc
xor
outsl
or
push
daa
mov
pop
push
inc
mov
fistps
pushf
push
add
dec
les
lock
aad
xor
lock
aam
lods
xor
mov
xor
sbb
pusha
and
mov
jmp
ja
rcrl
loopne
mov
push
divl
js
leave
add
jle
mov
outsl
inc
sub
clc
xchg
fcmove
and
or
xchg
test
dec
mov
dec
daa
arpl
xchg
sub
int3
gs
fstps
fiaddl
xor
jg
lret
test
iret
and
cli
inc
dec
nop
sbb
sub
inc
pop
stos
lock
out
push
push
data16
cld
fistpll
pop
mov
dec
push
pop
sbb
pop
xchg
add
ljmp
rorb
or
in
fcoms
insl
sub
testl
cmpsl
sti
aam
cmpl
mov
rcrl
cs
xor
hlt
stos
lcall
into
mov
push
test
push
lock
sub
or
sbbb
sbb
ds
das
xlat
add
pop
mov
ret
ret
and
add
push
pop
mov
cmpsb
cmp
mov
lahf
mov
lea
pop
test
jo
or
lcall
mov
push
mov
clc
jle
and
or
loop
sub
js
lock
inc
and
fsub
lahf
nop
pop
mov
decl
divl
shlb
add
call
cmp
push
and
or
fstl
cmp
daa
mov
pop
jmp
add
add
divb
sbb
or
lods
dec
cmp
and
jne
ret
je
pop
out
ja
mov
clc
idiv
lds
xchg
sub
dec
pop
sub
das
or
inc
call
movsl
cmp
inc
add
testl
aaa
fcomps
mov
xchg
mov
sub
xor
jmp
push
inc
pop
lods
cmp
lds
add
xchg
inc
test
pop
mov
adc
sbb
jno
mov
jg
pusha
in
cmc
out
push
or
rcl
stos
loop
cli
xor
dec
mov
fimuls
adc
sub
movb
mov
and
inc
in
mov
mov
xchg
lock
fnsave
dec
lret
ficoml
and
cld
fstl
aas
les
mov
or
outsb
add
add
mov
sti
movlps
and
std
sbb
add
mov
or
iret
inc
roll
popa
icebp
inc
pop
test
push
cld
cmpsb
sbb
fiaddl
cli
loopne
pushf
call
inc
adcl
fsub
das
sbb
repz
inc
add
js
jb
inc
rclb
xchg
pop
mov
push
push
mov
add
je
or
imul
pop
adc
fsub
mov
icebp
call
cmp
mov
add
push
sahf
mov
mov
pop
test
test
data16
xchg
sbb
jbe
inc
xchg
nop
xchg
dec
stc
je
push
ret
decb
or
pusha
or
jp
rclb
xor
mov
dec
and
arpl
fldl
mov
adc
shlb
insb
aas
or
push
mov
int3
shll
loope
jmp
orb
stos
jae
jle
jg
addb
jmp
dec
mov
jo
aaa
mov
lds
push
and
pop
push
jnp
lcall
loopne
loope
or
out
shll
pop
dec
push
push
mov
sub
jo
int
jns
insb
xor
test
jle
sub
pop
es
test
outsl
cli
inc
cli
stos
jns
sahf
fcoml
add
cld
or
sub
pop
je
repnz
enter
mov
xlat
sbb
mov
clc
out
jmp
jg
insl
mov
push
lcall
fidivl
stc
loope
push
sub
je
fidivs
aas
jle
dec
inc
mov
sbb
jge
adc
sbb
inc
shrl
scas
push
loopne
cmc
adc
xchg
sbb
fwait
insb
orl
repnz
hlt
push
or
into
cmp
loop
ret
adc
xchg
add
sub
cmp
dec
test
mov
js
xor
xor
add
cld
inc
or
mov
cmp
mov
aam
js
pop
rol
mov
nop
in
pop
cmpsb
int
xor
jns
aas
mov
cld
loop
mov
inc
xchg
rclb
scas
mov
fdivr
add
pop
and
imul
bound
mov
imul
xor
scas
mov
jb
mov
add
les
jbe
int3
adc
movsb
fidivrs
lods
inc
mov
sbb
jmp
out
lahf
pushf
bound
fists
iret
mov
adc
cmp
hlt
sbb
enter
cli
setp
mov
push
icebp
or
lret
cli
aam
pop
outsb
incl
clc
movl
add
mov
cmp
add
cltd
xor
test
incl
test
mov
in
xchg
lods
test
inc
imul
cli
sbb
bound
lock
dec
sub
pop
dec
loopne
and
mov
add
mov
push
xor
sbb
iret
loope
mov
add
add
xchg
xor
mov
add
hlt
mov
iret
js
and
or
mov
or
lock
decl
mov
cld
ret
imul
sbb
add
inc
call
sbb
fisubrs
push
rcll
dec
inc
fmul
mov
aas
repz
adc
jg
add
ret
fistps
inc
test
andl
sbb
xchg
xchg
push
push
cmpsb
pop
into
aam
pop
jl
test
pop
mov
push
dec
sarb
mov
sar
aad
mov
shr
mov
add
inc
hlt
mov
mov
adc
mov
dec
lret
idiv
dec
add
hlt
pop
sbb
add
add
pop
mov
das
jp
or
mulb
repz
fcoms
into
and
xchg
mov
jae
and
jo
cmp
pop
cli
pop
sub
fildl
mov
mov
int
push
loopne
push
ret
or
in
jge
loopne
xor
xor
pop
cmc
es
cmp
cmp
mull
mov
push
inc
test
std
add
ret
movsl
xchg
call
stos
aas
push
xchg
sub
or
jp
push
jnp
ret
sub
dec
movsb
loopne
icebp
mov
scas
lods
stos
es
dec
data16
cld
lcall
fadds
movsb
or
aaa
add
push
repz
adc
out
icebp
int3
fnstcw
cmp
cmp
lcall
fst
pop
cld
jg
or
cltd
or
rcll
add
pushf
and
cwtl
ret
rorb
stos
add
push
push
fsubr
add
nop
or
add
test
sub
ss
or
inc
pushf
pop
cmp
jecxz
insl
cli
cs
stos
dec
lds
les
rsm
mov
lock
dec
sbb
push
ljmp
mov
stos
cmove
lods
les
fst
out
dec
pop
mov
enter
cmpb
aam
mov
out
adc
cmc
mov
insb
mov
sbbb
bound
mov
mov
ret
xorb
xorb
pop
lock
mov
hlt
cmp
ljmp
and
push
fsubrs
jns
mov
mov
or
xchg
mov
push
mov
adc
es
mov
out
jno
push
jno
setno
test
jp
shll
mov
in
pushf
inc
cmp
mov
mov
js
aas
mov
in
push
and
xchg
imul
outsb
inc
pop
mov
lock
or
outsb
dec
xchg
faddl
cmpsb
out
sub
jg
adc
sbbb
sub
bound
aaa
sub
cmp
add
addr16
ljmp
or
xchg
int3
or
cmp
ljmp
add
lock
enter
fiaddl
add
sub
add
push
cltd
mov
and
lds
mov
fcmovnu
cmp
fdivr
dec
xchg
test
or
adc
int
dec
xchg
aad
mov
jl
aam
into
ja
push
das
xor
sti
or
ss
push
xchg
in
pop
into
xchg
inc
pop
jno
xor
xrelease
or
and
mov
dec
leave
jmp
inc
xchg
jge
pop
push
shl
in
cmp
cltd
mov
mov
movsb
adc
xorb
flds
test
roll
jnp
sahf
mov
cmp
or
mov
push
ficompl
jecxz
loop
sub
mov
jle
movsl
mov
pop
addr16
daa
in
popa
mov
jp
shrb
mov
arpl
adc
mov
stos
scas
add
pop
bound
in
mov
lods
mov
sbb
mov
sub
inc
lcall
jae
push
sbb
cmpsl
test
add
or
fnstsw
ss
mov
testb
cli
fwait
mov
sub
shll
roll
xchg
lret
mov
or
lcall
mov
xchg
sbb
adc
fildl
and
cli
dec
jmp
xchg
xor
add
rol
mov
sar
mov
stos
push
loop
aam
ss
sbb
outsb
cwtl
aas
popf
js
xor
hlt
in
rcrb
xor
jns
pop
aas
fmul
mov
mov
cs
add
or
sarb
or
cmp
adc
sub
jg
or
push
movsb
add
mov
das
out
and
push
or
ljmp
sbb
fmuls
sbb
fistl
push
inc
fdiv
push
sub
nop
movntq
push
inc
dec
mov
mov
inc
dec
scas
push
pop
dec
sub
cmp
aaa
mov
pop
jb
adc
jnp,pn
out
call
or
mov
dec
fstl
push
dec
lret
sub
xchg
jo
std
outsl
cli
in
fnstcw
sbb
dec
push
hlt
mov
cltd
testl
fistpll
test
xchg
or
dec
add
dec
imul
dec
js
fiadds
jmp
arpl
xchg
rorl
and
loope
push
dec
in
and
sub
push
lret
inc
and
insl
xorb
sbb
ljmp
mov
add
pusha
rcl
pop
push
test
pop
push
loope
add
lahf
push
fldenv
pop
push
mov
adc
inc
lea
ss
xor
ljmp
push
mov
add
pop
mov
cmpsb
push
jp
aaa
les
fstpt
mov
pop
xlat
lods
dec
sarb
jbe
iret
xchg
decb
sub
lret
ds
std
stos
cmp
mov
cmp
stos
outsl
std
and
jl
imul
mov
xchg
bound
adc
dec
sarl
sbb
fchs
cmpsb
mov
divb
leave
popa
xor
pop
mov
pop
mov
cmp
sub
add
mov
insb
mov
cmp
mov
cmp
les
jno
xchg
jo
dec
insl
cmp
jo
push
out
dec
nop
dec
pop
xlat
mov
ret
mov
repnz
add
subb
into
iret
cmp
je
es
cmp
out
aam
cs
push
and
inc
daa
idivb
fdivrl
or
fdivrl
or
mov
cs
daa
pop
and
aam
out
clc
sbb
mov
lods
aas
insl
xchg
xor
mov
dec
cmp
rcrb
outsl
shlb
and
sub
rorb
cmp
int3
push
push
orb
adc
or
leave
loop
nop
pop
stc
cltd
aas
dec
fadd
je
lahf
jp
xchg
dec
add
sub
cld
movsb
jno
rorb
fidivl
mov
jl
push
push
and
ja
aas
mov
and
sub
xor
shrl
cmp
fcmovne
mov
das
adc
stc
add
mov
mov
paddd
rcl
cli
out
xchg
lcall
jae
shrb
sti
mov
mov
rcr
xor
loopne
in
mov
sbb
adc
mov
stos
dec
jbe
jbe
aaa
dec
pop
icebp
push
test
and
inc
xchg
fists
pop
mov
xor
jmp
inc
fidivs
xor
and
push
call
mov
inc
push
fstps
add
jp
adc
jo
cmp
push
mov
shll
idiv
ljmp
xchg
adc
cmpsl
cwtl
and
push
add
jecxz
clc
mov
sar
sub
cmp
xlat
pop
xchg
shrb
aad
push
ret
ret
mov
push
add
xor
cmp
fadd
call
add
or
or
fldt
cld
into
clc
inc
adc
sbb
iret
shlb
in
push
jb
lahf
xchg
mov
fldt
xor
sub
rcrl
sbbb
sub
cmp
dec
push
movsb
lcall
lds
scas
or
movsl
inc
xchg
icebp
add
mov
and
mov
push
pop
in
dec
cs
and
or
test
push
pushf
jno
xchg
mov
jne
rcrl
mov
inc
sti
mov
pop
push
adc
mov
aas
adc
scas
jo
sub
jnp
loopne
mov
jmp
cmp
cmc
push
xchg
in
push
dec
jl
add
pop
sub
in
imul
test
incb
out
adc
pop
in
roll
lock
int
std
xchg
sub
xorb
inc
sub
and
inc
shrd
push
out
adcl
push
je
mov
repnz
pop
call
cs
pop
add
xor
ss
xchg
cmpsb
add
icebp
or
push
shr
call
pop
mov
push
pop
xor
jo
or
jbe
inc
mov
stos
out
and
inc
dec
push
or
jp
ds
cld
mov
fidivs
lds
pop
mov
bound
mov
std
or
xchg
mov
inc
adc
adc
add
cmpb
sbb
cmp
js,pn
test
cmpsb
stos
dec
hlt
xchg
pusha
mov
hlt
xchg
ret
data16
push
mov
into
sbb
mov
lods
sub
inc
jecxz
movsb
xchg
inc
out
adc
sbb
lahf
dec
pop
inc
dec
pushf
movsb
enter
push
inc
xchg
mov
push
fistl
inc
ret
push
ja
out
and
jne
mov
or
icebp
aad
xor
add
loopne
test
fwait
aas
and
xor
test
add
nop
bound
mov
add
add
xor
or
adc
ljmp
xchg
inc
rcrb
lcall
incb
dec
vmread
pop
jb
imul
adc
cmp
ficompl
insb
pop
rolb
rolb
push
mov
sub
mov
cmpsb
leave
lret
and
mov
add
lods
cwtl
inc
jbe
out
push
add
gs
sbb
mov
pop
jno
mov
or
pop
xchg
shrl
jmp
cmc
and
sbb
in
rcl
ss
xchg
out
fdiv
std
das
repz
les
ret
adc
push
pop
adc
push
mov
nop
lret
sbb
aaa
jge
sahf
pop
or
inc
xor
or
das
dec
rcrb
mov
pop
mov
mov
mov
insl
mov
cmpsb
mov
data16
inc
jle
out
das
mov
repz
test
in
mov
call
inc
add
push
cmc
sbb
call
xchg
push
push
insl
adc
xor
xchg
sub
dec
and
inc
pushl
arpl
lods
stc
rcrb
sub
jp
xchg
jp
sarb
mov
scas
xor
insl
mov
fwait
icebp
jg
xor
insb
ror
cltd
and
loopnew
jmp
jge
mov
sarb
repnz
testl
jbe
mov
dec
push
cmpsb
push
pop
cs
inc
mov
dec
cli
inc
mov
ljmp
add
sti
adc
int3
and
sub
add
xchg
xchg
movsb
mov
int
adc
fs
lock
cli
sub
test
ffreep
dec
or
adc
fmuls
mov
out
or
enter
push
in
subb
loope
ljmp
cmp
movb
je
incb
pop
and
and
lahf
adc
xor
mov
add
xchg
sahf
sbb
add
add
pop
xor
iret
je
pop
mov
jo
dec
in
dec
rcr
inc
out
cmp
mov
test
dec
ljmp
fwait
out
dec
jnp
lods
shlb
xor
shr
dec
fdivr
mov
dec
ja
xor
adc
testl
das
or
jbe
ds
aad
mov
sahf
pushf
ret
push
mov
pop
xchg
notb
and
push
test
jg
mov
push
and
adc
jae
push
cwtl
loope
mov
or
ds
cli
or
mov
adc
adc
js
lahf
inc
sar
or
and
loopne
add
movsb
pushf
cltd
jl
ds
cmp
test
cmp
inc
sub
out
and
xchg
pusha
or
out
sbb
dec
clc
jg
movsb
sub
in
adc
xchg
jns
loopne
add
jb
sbb
push
stos
rclb
cmp
mov
mov
adc
sub
lock
or
add
jmp
outsb
mov
ja
cli
cwtl
bound
inc
pop
fstps
and
outsl
push
data16
sbb
mov
jge
cmp
inc
adc
ret
pop
sub
push
jmp
cmp
jbe
mov
pop
mov
mulb
mov
and
sbb
shll
rorl
cmp
in
jg
push
push
lret
cmp
xchg
nop
scas
clc
mov
mov
push
adc
js
call
test
xor
aad
mov
or
and
aas
cmp
add
mov
pop
adc
push
mov
dec
imulb
iret
push
mov
ret
inc
nop
insl
push
jb
out
and
lock
ret
imul
cwtl
adc
scas
jg
add
or
mov
xchg
popf
cmp
jmp
cld
inc
ja
fbld
inc
lret
lret
add
inc
jbe
jecxz
call
push
daa
int3
push
sbb
scas
lret
inc
push
clc
lods
add
rclb
add
sar
icebp
imulb
std
movsb
notb
inc
mov
scas
sub
fstp
inc
enter
sbb
dec
xor
inc
mov
or
mov
ss
xor
movb
aam
aas
or
scas
push
loopne
mov
jle
sbb
xchg
out
and
or
call
int3
das
xchg
fbld
and
xor
cli
add
xchg
sub
lds
call
ret
jmp
sbbb
dec
aad
jno
stos
mov
push
jecxz
lea
mov
mov
add
cmp
pushl
cli
bound
int3
imul
stos
mov
popa
add
test
aaa
fcmovb
jo
add
push
movsl
cmp
mov
lcall
iret
adc
test
movsl
cmc
inc
sbb
mov
adc
cs
dec
subl
push
and
fcomip
xchg
dec
mov
out
lock
inc
inc
pop
adc
push
dec
mov
push
cld
inc
loop
das
insb
mov
je
rcll
push
jecxz
xlat
aas
add
pop
ret
jmp
testb
mov
inc
int
jae
cmp
add
adc
inc
pop
push
mov
push
lds
pop
mov
push
inc
mov
mov
ja
dec
sub
xor
lcall
cmp
mov
add
scas
adc
inc
mov
add
push
xor
pop
loopne
xor
jbe
inc
push
or
push
out
lock
aam
adc
ret
movsl
push
push
stos
sbbb
rolb
adc
inc
loope
and
sub
and
inc
add
jp
shll
and
ss
mov
adc
hlt
xor
lock
ret
jno
insb
and
popf
or
lock
jbe
xor
and
dec
arpl
inc
outsl
mov
test
jne
sbb
pop
cwtl
cld
ljmp
mov
xchg
test
cld
xor
enter
mov
jle
cwtl
ja
incl
xchg
out
xor
jecxz
mov
xchg
neg
push
push
and
and
add
cmp
inc
sbbb
loop
push
lcall
or
outsl
fcomip
xchg
test
pop
inc
push
gs
bound
dec
inc
cmp
add
sub
or
aaa
aas
mov
push
mov
nop
cli
cmp
std
popf
clc
iret
dec
dec
call
mov
jo
xchg
and
adc
lods
loop
mov
push
adc
ror
xchg
dec
imul
inc
xchg
fimull
je
lock
pop
xor
loop
lcall
outsb
mov
ja
nop
repnz
in
stos
bound
mov
ljmp
push
loopne
stos
inc
or
jg
inc
xchg
jg
je
add
adc
dec
cmovae
sub
aam
jne
test
and
or
dec
sbb
bound
push
and
inc
loopne,pn
cld
inc
add
pop
fmul
stos
xchg
loopne
mov
xlat
mov
ja
je
add
fs
cs
rclb
mov
mov
fistpll
adc
outsb
pushf
push
sbb
mov
dec
cmpsl
push
fdivrs
xchg
sub
add
dec
and
adc
sbb
nop
push
pop
js
mov
outsl
pop
push
mov
or
xor
add
out
fistps
ud0
jmp
pop
std
adc
push
or
inc
or
ja
add
and
xor
xor
fidivl
inc
inc
js
add
xchg
mov
imul
add
xchg
mov
xchg
scas
stos
ret
and
mov
outsb
sub
and
sbb
jge
mov
pop
mov
add
mov
inc
add
lock
cs
decl
pusha
inc
sub
pop
inc
xchg
sahf
or
test
pop
pushf
add
in
push
mov
jbe
dec
pop
or
and
cmp
std
jmp
adc
in
mov
cmp
or
inc
stos
loope
inc
test
jne
jle
mov
lds
and
lods
pmaddwd
ss
out
lcall
inc
and
mov
test
or
mov
xchg
dec
fdivs
xchg
cld
xchg
sti
mov
xor
stos
dec
jl
inc
hlt
sbb
lods
and
je
aas
adc
inc
cwtl
xor
xchg
ret
clc
xchg
fisubl
loopne
dec
hlt
push
mov
adc
mov
aaa
mov
imul
add
inc
stos
sub
sub
fiadds
orl
or
into
nop
pop
adcl
in
mov
mov
out
cld
test
and
pop
or
icebp
leave
fistpl
faddp
movsl
lea
cmp
shr
push
les
inc
sbb
lcall
cld
dec
push
and
add
adc
lock
jb
pusha
cld
pop
and
fcmovb
aaa
nop
add
push
nop
loopne
aas
call
sbb
xchg
xchg
jge
les
aaa
rcr
clc
ret
push
shlb
jl
lcall
repz
adc
add
or
add
xchg
dec
xchg
ljmp
mov
cmpb
dec
mov
rcl
xchg
pop
decl
out
push
je
cmp
inc
or
loopew
jl
and
inc
mov
xchg
push
clc
mov
subb
adc
out
lea
cld
dec
sub
pop
xor
call
mov
rcrb
mov
push
pop
xchg
inc
sbb
test
cmp
dec
je
out
icebp
repz
push
clc
adc
jb
faddl
pushf
sbb
jae
out
dec
fs
data16
icebp
fwait
incl
movsb
mov
mov
jmp
scas
mov
mov
inc
rcr
cmc
sub
je
inc
aam
pop
enter
sbb
out
add
bound
xor
movsb
pop
into
incb
jns
adc
sub
repnz
and
push
shrl
aam
add
js
testl
outsb
js
dec
and
test
decl
test
inc
cmp
mov
jne
aas
jge
adc
scas
test
scas
and
xchg
iret
push
xlat
je
adc
ja
xchg
mov
test
mov
lock
cwtl
xchg
popa
inc
mov
add
notb
das
sbb
add
xchg
call
inc
aad
sub
movsb
ljmp
jo
pop
jb
cmp
pushw
add
cli
aaa
lock
adc
adc
pop
adc
xchg
mov
xorb
decb
fdivrl
mov
cwtl
sar
mov
ret
mov
repnz
dec
cld
test
lcall
mov
sub
push
or
repnz
icebp
add
dec
xor
andb
jmp
cld
cmp
and
sub
roll
dec
or
ja
ds
scas
ds
add
or
add
and
in
pop
pslld
ret
js
sbbb
mov
es
dec
sbb
hlt
scas
clc
push
scas
push
adc
insb
mov
cmp
push
cmpb
mov
mov
pop
stos
xlat
stos
pop
fcoml
adc
sub
scas
mov
or
clc
xchg
fidivl
mov
sti
jns
repz
scas
das
ret
sub
test
sbb
ljmp
and
cwtl
bound
pop
adc
lret
push
daa
cmp
insl
push
mov
in
push
xchg
adc
push
xchg
add
adc
sahf
jb
shr
imul
pop
jb
adc
je
add
xchg
mov
icebp
sbb
cmpb
rolb
jbe
push
lods
cs
pop
jmp
mov
lods
inc
je
nop
or
sub
dec
add
stos
enter
lcall
jecxz
shl
lret
iret
enter
rclb
sub
mov
sahf
and
shl
enter
negb
inc
test
sub
lahf
insl
into
nop
add
jb
pop
in
push
hlt
mov
dec
bound
pusha
adc
sub
fstpt
data16
pop
ret
adc
jnp
inc
pusha
jg
out
xor
call
adc
stos
sub
lock
sub
mov
aaa
std
repnz
bsr
test
inc
push
mov
lds
movsb
or
xchg
mov
aas
pop
test
jae
cmc
cld
ja
jecxz
or
ljmp
or
cmp
xorb
pop
clc
aaa
cs
adc
sahf
add
jl
dec
bound
sbb
je
push
jo
sub
adc
out
xchg
outsl
clc
xor
mov
sbb
and
movsb
mov
sbbl
ret
in
nop
mov
adc
mov
add
xchg
fcmovnbe
scas
mov
test
lcall
cld
sbb
pusha
pop
cld
mov
div
cmp
nop
ds
fsubrs
daa
ljmp
sbb
jnp
mov
lret
push
adc
mov
xchg
cld
dec
dec
mov
arpl
mov
mov
cmpsb
and
incl
arpl
mov
mov
sbb
push
or
jo
pop
cmp
adc
sub
jle
int3
ret
jo
ret
mov
daa
sbb
jg
push
cmp
mov
and
lock
std
sbb
jge
mov
inc
inc
in
mov
xor
and
and
mov
jg
sub
loop
decl
cmc
movsl
out
inc
xorl
out
jl
sbb
and
push
sub
movsb
cmpl
cmp
pop
rclb
pop
dec
push
test
sub
mov
mov
push
push
add
xchg
mov
add
add
mov
mov
int
stos
lds
jmp
ds
pop
stos
mov
insb
js
jl
addb
ret
and
decl
mov
push
cld
inc
stos
pop
or
mov
repnz
out
pop
fs
fistpll
and
push
xchg
out
addr16
incl
adc
mov
testb
push
xor
rclb
or
xchg
xor
std
decl
shlb
in
cmpsb
scas
mov
push
call
incl
ss
mov
clc
jb
enter
call
divb
cwtl
mov
addl
xchg
je
xlat
xchg
bound
sbb
inc
mov
in
test
jae
out
adc
lock
imulb
push
fwait
in
dec
jp
out
mov
daa
xor
scas
pop
mov
ffreep
adc
pop
jne
cmp
ss
jne
sub
outsb
test
into
cmpl
movsl
lcall
mov
icebp
dec
stos
push
dec
cwtl
pop
mov
fdivrs
icebp
cld
add
out
adc
adc
mov
out
sub
pushf
ds
add
dec
pop
adc
data16
sahf
shl
in
cmove
fnstcw
sub
xchg
or
dec
push
lahf
lahf
and
cwtl
bound
mov
cmp
jo
add
in
inc
or
sub
cltd
mov
jmp
pop
fbld
xchg
pop
in
xchg
ljmp
mov
or
jle
dec
pop
ss
je
jae
mov
pop
popa
cmp
xor
mov
dec
orb
add
jno
out
add
test
and
je
or
dec
outsl
and
test
xor
pushf
and
lret
imul
push
and
rcll
sbb
sub
repnz
shrw
adc
push
mov
pop
cld
mov
fs
ret
sbb
sbb
pop
icebp
xchg
push
fildl
or
sbb
add
adc
ljmp
adc
xchg
idivl
clc
xchg
fsubs
xchg
sub
sbb
pop
imul
xor
testb
in
sub
lock
mov
xor
dec
xchg
push
xchg
add
idiv
aas
sub
loopne
xchg
pushf
push
lods
lds
adc
les
inc
pop
std
mov
adc
loope
add
and
adc
xchg
cld
shrb
adc
xor
mov
jb
sbb
clc
pop
clc
clc
xor
push
inc
cmp
cmpsb
aaa
or
out
es
adc
imul
and
xchg
sti
jb
fisttpl
dec
mov
add
cmpl
imul
js
nop
sbb
das
push
inc
nop
sub
fstpl
fldl
pushf
sbb
sbb
scas
jbe
jge
mov
pop
lret
jno
xor
adc
inc
adcb
jo
push
jmp
or
out
cwtl
movsb
lret
jecxz
inc
dec
push
in
in
jge
dec
mov
inc
aad
inc
or
cld
ljmp
cmp
sbb
pop
adc
loop
repz
add
lret
and
sahf
push
cld
jg
addl
jne
pop
outsl
jp
add
or
mov
imul
sbb
dec
out
push
lret
push
cmp
dec
js
rcrb
in
decb
cmp
leave
adc
pop
data16
daa
sub
xlat
pop
in
call
mov
mov
cs
test
je
add
or
jne
xor
in
inc
js
bnd
inc
mov
decl
jnp
clc
jle
push
push
orb
mov
pop
std
and
mov
cmp
push
call
inc
clc
mov
dec
add
push
lahf
dec
cwtl
icebp
sbb
scas
sub
cli
decl
mov
shll
xchg
dec
lret
stos
mov
jne
mov
out
lahf
sub
add
repz
mov
add
test
popa
fcmovbe
add
sbb
mov
fxch
mov
xchg
lahf
inc
sbb
dec
pop
jl
pop
dec
xor
sub
sahf
inc
pop
mov
in
add
mov
sub
push
or
add
aad
stc
stc
sbb
loopne
xor
idivl
push
dec
pop
es
add
cmc
jp
sub
insl
stc
pop
mov
das
push
inc
imul
int3
push
mov
and
aad
shr
mov
pop
xchg
mov
pushf
jb
call
mov
inc
stos
sub
fwait
push
jb
push
notl
outsb
and
xor
data16
rclb
ja
lahf
mov
dec
pop
mov
or
and
insl
add
add
mov
inc
dec
cmp
jnp
push
mov
xor
lea
mov
adc
ljmp
orl
fcoms
aad
dec
push
push
mov
dec
add
sbb
addr16
xchg
adc
xchg
fmuls
shl
or
jmp
loopne
out
dec
push
inc
adc
push
lret
scas
xchg
jg
daa
mov
inc
cmpsb
mov
movsb
jp
or
sub
pop
or
dec
das
xor
cmp
mov
mov
mov
mov
ss
pop
jp
cmc
mov
add
scas
push
sbb
fidivrs
jno
push
sbb
inc
and
add
icebp
aas
jp
inc
mov
movsb
inc
repnz
loopne
mov
pop
ror
xor
and
mov
mov
fidivrl
or
sub
pop
aaa
xor
mov
sub
xlat
or
mov
out
shlb
or
iret
insb
fsubl
jecxz
push
push
lea
lock
mov
cmpsl
ss
insb
push
pop
stos
cmpsb
rorb
or
push
push
and
add
gs
and
inc
inc
popf
add
gs
lea
lds
lock
mov
jbe
xchg
pusha
push
mov
ljmp
les
inc
add
inc
icebp
xor
mov
dec
fcomps
or
dec
add
arpl
mov
cmp
cmp
push
outsl
xor
je
add
adc
enter
clc
sub
or
inc
dec
add
mov
inc
shlb
lods
stos
idiv
call
movsb
xor
je
cld
add
xor
mov
loope
mov
repnz
jo
jp
xchg
pop
or
cmc
add
imul
iret
arpl
cs
xor
stos
movsl
push
bound
inc
sbb
xor
cli
xchg
les
sub
je
or
cmc
cmpsb
inc
mov
lods
sbb
mov
dec
xor
mov
dec
mov
fildl
and
in
mov
incl
mov
xorb
add
or
clc
call
ret
add
in
inc
inc
cmp
dec
push
in
mov
loop
sub
pop
jmp
std
sbbb
cmp
das
adcb
addl
js
adc
rcl
shrb
call
push
sbb
rorl
cld
dec
dec
push
push
es
filds
xlat
sub
fnstsw
mov
pop
xchg
xchg
mov
pop
ljmp
mov
add
out
aaa
push
les
inc
in
add
lret
cmp
into
loop
fbstp
dec
jbe
mov
in
in
test
cwtl
adc
jg
ficoml
out
pushf
sti
xchg
ljmp
mov
push
mov
rcr
mov
xchg
roll
stos
jb
lock
test
push
mov
sbb
lret
stos
cmp
clc
sbb
idivb
lea
shlb
mov
movsb
je
cmp
dec
lds
xchg
xchg
and
xchg
mov
push
xor
mov
adc
pop
test
push
cltd
add
lods
add
xor
sub
xor
mov
cmpsl
cld
cs
es
loope
fs
movsb
rcrl
mov
jmp
add
or
sbb
ret
dec
cld
fldcw
std
divb
aam
push
fcomip
outsl
arpl
loope
pop
adc
mov
movsb
insb
lods
imul
or
lock
ja
bound
sbb
lock
dec
testl
rcl
dec
iret
push
pop
xor
inc
test
push
push
fdivrs
jl
mov
and
gs
pushf
mov
mov
outsl
loopne
mov
lods
lock
mov
jmp
add
xchg
sbb
loop
jp
stos
scas
pop
scas
and
loope
in
es
add
fcomp
jecxz
stos
push
sar
mov
and
lds
pop
push
add
mov
cld
pop
push
lds
push
jns
push
jmp
sub
pusha
les
fxrstor
add
pop
das
mov
mov
add
nop
inc
pop
faddl
aas
aaa
repnz
ds
loope
icebp
loopne
popf
mulb
xor
scas
cld
sub
cwtl
inc
rcrb
sbb
cwtl
push
cmpsl
movsb
cld
lcall
scas
and
sbb
scas
out
and
push
push
push
pushf
cld
mov
jmp
arpl
add
or
loop
jo
ret
ja
mov
outsl
pop
sub
ds
rorl
mov
loope
inc
pop
mov
dec
or
cmpsl
and
ret
out
push
clc
pop
mov
ret
sub
add
adc
ja
xchg
pop
sahf
mov
add
movsl
out
xchg
fdivl
jl
fwait
or
xchg
xchg
ret
sub
mov
mov
inc
and
jg
xchg
test
mov
fadds
rcrb
mov
loope
andl
jbe
dec
adcb
sti
xchg
add
out
fidivs
bound
test
mov
lods
popa
jge
adcb
test
jp
add
clc
push
jle
pop
call
mov
pop
mov
test
cs
mov
pop
repz
dec
dec
xor
pop
adc
dec
sub
xor
or
inc
adc
inc
or
add
clc
pop
push
mov
push
out
pop
fbld
shlb
loope
jecxz
rol
aaa
xor
add
pop
iret
or
mov
ss
or
mov
inc
xlat
pop
add
lock
mov
adc
test
xor
pop
bound
cmp
loope
fcomps
sbb
jle
dec
aas
hlt
mov
orb
xchg
out
fistpl
push
mov
xor
inc
aam
jns
push
pusha
or
std
mov
jno
mov
cmpsb
mov
mov
movsb
mov
adc
lahf
or
cmp
and
inc
ds
out
test
pop
add
push
lret
cld
popa
arpl
lret
out
inc
out
inc
lcall
and
sbb
std
jg
jl
cld
add
push
push
orb
cmpsl
push
sub
dec
inc
pop
lods
shrb
cli
cmp
orb
cmp
movl
roll
or
int3
and
test
push
or
pop
sbb
fidivs
or
mov
and
cmpsb
in
daa
xchg
cmpsb
dec
pop
mov
sarb
xchg
dec
mov
jmp
ds
es
aad
cmpsb
pop
fsub
test
adc
dec
mov
push
loopne
sub
jg
shrb
mov
pop
lcall
les
nop
out
popa
cld
inc
popf
aaa
sbb
cmpsb
pushf
inc
pop
jmp
insb
cltd
push
mov
inc
aaa
mov
ret
test
das
inc
jge
push
inc
sub
cmp
jmp
xor
pusha
les
or
cld
mov
add
inc
loop
test
incb
repz
jne
mov
rcll
pushl
loopne
cs
mov
jle
shll
lods
aad
jmp
fidivrl
pop
out
rclb
ss
dec
mov
outsl
in
dec
mov
xchg
xor
fstpt
xchg
rclb
dec
lahf
lret
scas
dec
insl
sar
push
inc
and
dec
orl
cmp
imul
dec
inc
ljmp
mov
lock
call
dec
ja
decb
dec
hlt
pop
sbb
inc
xchg
mov
loopne
jle
cmpsb
cmp
hlt
cmp
sbb
rolb
fldcw
daa
jmp
jle
adc
int
loope
ficoms
push
cld
sbb
nop
push
sub
pop
das
mov
xchg
mov
clc
rorb
js
movsl
mov
inc
pop
sbb
mov
cmp
decb
rclb
cmp
imul
pop
insl
inc
mov
pushf
cmpsb
pushl
mov
xchg
adc
ds
outsl
cli
mov
test
rcl
add
imul
incl
hlt
popf
push
fildll
or
pop
rorl
stos
mov
cmp
mov
push
mov
movsb
pop
out
sbb
ret
jg
js
adc
mov
add
ja
xor
cld
bound
xchg
mov
jbe
adc
incl
mov
pop
xor
movsb
leave
xor
std
push
in
push
lret
loopne
ret
fdivs
xchg
add
lods
faddl
ljmp
xchg
xchg
mov
xchg
nop
mov
leave
dec
mov
nop
sbb
jge
add
adc
movsb
inc
pop
fiadds
mov
sub
inc
pop
out
mov
pop
pusha
lcall
and
cmpsb
fildll
sub
mov
xchg
inc
pop
jae
js
and
push
arpl
fcmovb
pop
cmp
aad
xor
dec
jbe
cwtl
testb
cld
mov
outsl
dec
movsl
adc
push
pop
mov
and
sahf
add
xor
jecxz
fcompl
add
lds
cltd
pushf
test
xor
daa
hlt
push
mov
insb
sti
mov
sahf
sub
incl
push
bound
fisubl
out
js
adc
or
and
inc
setnp
add
pop
or
or
std
xchg
sbb
stos
stc
hlt
cli
in
xorl
mov
out
inc
or
dec
mov
dec
fidivrl
pop
push
js
and
dec
jg
inc
into
push
lods
jle
adc
outsb
rcll
or
pusha
ret
add
xchg
aam
adc
mov
stos
mov
cmp
mov
das
rcr
adc
inc
or
nop
faddl
outsb
push
add
mov
mov
inc
lahf
js
push
std
js
jle
push
repz
ljmp
shlb
sub
into
cmpsl
cs
cmpsb
jg
inc
mov
lcall
push
jae
push
xor
popf
jle
aaa
jnp
push
jl
adc
dec
loope
iret
add
or
data16
mov
fldl
ret
jo
xor
clc
add
lods
add
lret
hlt
dec
push
push
dec
lods
outsb
pop
setb
push
push
sub
cld
std
push
add
xlat
inc
cmp
je
in
call
shr
std
cmp
adc
sahf
add
or
push
pop
pusha
or
push
fsubrl
inc
pop
mov
mov
outsl
add
nop
cltd
loopne
mov
jp
push
scas
incb
pusha
mov
and
or
cmc
inc
ret
or
push
js
cmp
sub
lock
xchg
test
cli
pop
cmpb
rcr
loop
dec
lods
xor
sahf
lock
add
testb
push
sub
push
sub
negl
mov
mov
cmpsb
inc
stc
pop
loope
inc
inc
xchg
fmuls
mov
loopne
loope
xchg
xchg
dec
bound
adc
shll
pusha
mov
xor
rolb
int3
subb
sub
es
add
fadds
sarb
insb
add
mov
inc
mov
les
test
fldcw
das
push
mov
pop
dec
mov
loop
test
xchg
stos
mov
outsl
and
lahf
xchg
mov
jmp
add
xor
ss
dec
lds
jge
loop
clc
ds
inc
stos
daa
adc
pusha
pop
loop
mov
pop
inc
adc
push
fsubp
mov
or
pop
mov
dec
jge
or
xor
mov
sbbl
cmpsb
aaa
and
test
and
shlb
clc
roll
and
xchg
cmp
push
or
cwtl
incl
xchg
aam
cmp
inc
lods
xor
xchg
std
or
lahf
push
aas
cwtl
lret
ds
iret
jle
push
push
inc
fs
cld
jg
sti
and
inc
mov
lods
xchg
push
test
dec
lea
cli
bound
outsl
mov
lahf
add
sbb
mov
pushf
add
pop
xor
mov
inc
enter
rol
add
cmpsb
sub
repnz
jo
cs
cmpsb
mov
and
add
inc
push
daa
add
mov
push
fwait
add
je
mov
cmp
pusha
fnstsw
inc
push
rorl
aas
andl
push
mov
push
js
dec
arpl
andb
adc
mov
cmc
jg
xchg
fsubrl
orl
mov
and
push
enter
mov
movsl
or
push
or
stos
mov
adc
adc
jo
data16
outsl
mov
sub
mov
or
in
scas
add
idiv
fwait
mov
cs
shll
inc
dec
loope
inc
enter
xchg
jp
lock
sbb
sahf
dec
or
orl
or
in
add
inc
adc
leave
mov
adc
and
mov
sahf
xor
outsb
mov
pop
jmp
push
xor
ret
ljmp
insb
fs
loopne
sub
sahf
repz
pushf
icebp
out
adc
sahf
dec
inc
or
fs
mov
loope
stos
cs
cltd
das
mov
movsl
rcl
pop
ret
prefetcht1
lahf
cli
outsl
je
loopne
cmc
or
and
fdivrs
mov
orb
jecxz
inc
hlt
push
lahf
dec
out
mov
pop
loope
std
jno
push
clc
add
jne
mov
scas
shrb
mov
mov
fs
mov
fldl
repz
adc
js
scas
mov
ljmp
loopne
add
subb
mov
adc
mov
mov
add
xor
popf
fcmovnb
mov
add
pop
push
pop
cmp
mov
push
outsb
clc
out
add
mov
sbb
rcll
mov
insb
xchg
xlat
push
out
sub
pop
mov
loop
fstpt
aam
jg
mov
pop
sbb
adc
dec
cmp
mov
aad
lahf
into
pmulhw
cwtl
inc
test
jns
inc
jmp
mov
dec
push
test
xchg
push
push
jg
adc
mov
mov
nop
cli
mov
fcmovu
sbb
xor
hlt
filds
mov
pop
add
loop
andb
pop
movb
int3
inc
inc
into
jo
add
data16
add
notb
jg
push
jbe
test
fidivs
mov
ja
cmp
cmp
dec
adc
xchg
push
loopne
pop
test
addl
add
ss
ss
lds
xchg
push
xchg
lods
or
test
lea
pop
aas
jle
jb
push
in
sbb
adc
push
ds
mov
subb
dec
sbb
shll
addb
jg
bound
xchg
xchg
fwait
in
imul
mov
mov
push
pop
sbb
sbb
and
idivl
add
nop
loop
popa
pushf
adc
adc
push
sub
dec
adc
je
sbb
xchg
adc
mov
cld
push
add
cmp
fstl
ret
enter
negl
mov
sbb
push
call
add
in
pushf
fiaddl
aaa
sbb
mov
or
scas
dec
outsl
push
aam
mov
and
xchg
sub
incl
adc
and
adc
das
sar
je
jle
adc
loope
add
mov
rorb
data16
xchg
dec
add
mov
jle
es
add
mov
in
xorb
pop
movsb
mov
enter
pop
pop
sti
aas
movsb
pop
xchg
sbb
mov
mov
arpl
imul
jbe
mov
adc
fdivrp
mov
mov
fldenv
or
xchg
inc
stos
scas
adc
movsb
aas
cmpl
xchg
add
cmp
loop
adc
add
lcall
test
push
lods
divl
jecxz
mov
scas
pop
cmp
loope
ret
fsubrs
ljmp
push
popa
cmp
int3
cmp
mov
cmpsl
int3
mov
gs
int3
and
jle
addb
shrl
lods
hlt
test
add
popa
xor
frstor
call
iret
sbb
cwtl
iret
jmp
loopne
xchg
push
stos
ss
clc
fwait
loopne
mov
push
inc
cltd
jecxz
sahf
inc
pop
sbbb
pop
xor
cmp
sahf
adc
push
jmp
push
mov
loopne
inc
add
roll
dec
adc
and
fcmove
push
mov
mov
sbb
lock
jo
jl
xlat
dec
and
ret
add
push
sub
jg
das
push
ljmp
or
push
mov
ds
nop
and
mov
or
xchg
enter
js
sub
iret
lret
popl
and
inc
add
aaa
add
sub
rol
pop
or
pop
mov
adc
out
and
jg
fsts
or
pop
inc
jo
gs
push
mov
cmp
xchg
and
outsl
cs
jmp
add
sti
movsl
cmpsb
cmpsl
jp
pop
xor
add
fcos
scas
cli
xchg
add
addr16
fiadds
andl
js
pop
jbe
call
pop
ss
push
jbe
mov
and
ret
xor
aad
sbb
mov
js
cwtl
or
loopne
add
lcall
call
mov
mov
aas
push
loope
lahf
pop
ret
adc
subl
repz
mov
aaa
inc
mov
arpl
mov
push
cld
sbb
cmp
xor
inc
xor
test
adc
clc
cmc
sbb
jg
ds
mov
mov
dec
mov
mov
ret
movsb
mov
jo
dec
sbb
nop
add
jbe
fnstenv
xor
add
shlb
xor
mov
mov
add
inc
add
test
fdivs
je
mov
pop
pop
push
cmp
or
sub
mov
add
mov
incl
mov
jle
and
lock
test
mov
fnstcw
fldenv
sti
jle
xchg
decl
sub
dec
lock
add
adc
cmpb
ret
es
ljmp
inc
ja
adc
nop
mov
and
aaa
popf
sbb
cmp
inc
push
repnz
pop
sti
fsubrl
lds
sbbl
pop
sbb
icebp
scas
xor
inc
mov
loopne
or
or
mov
daa
imul
rcrl
dec
ljmp
and
lods
cld
mov
fsts
icebp
mov
idivl
push
and
mov
shrb
or
out
sub
adc
jbe
cmc
xor
insb
ds
cmp
loope
push
pop
arpl
mov
mov
test
push
jl
lods
inc
xchg
add
xchg
adc
std
div
inc
or
pop
out
push
sbb
jge
lret
mov
sub
call
std
inc
aam
movsb
cld
jb
fcomps
js
movb
cmpsb
stos
lock
sub
popa
xor
mov
loopew
xchg
pop
and
sbb
jo
sbb
loop
sarl
pop
jnp
outsl
dec
pop
cmp
enter
pusha
or
add
stc
cmp
outsb
xchg
mov
aaa
jb
orb
lret
int3
insb
cmc
push
fdivl
cli
in
and
lock
add
nop
push
mov
mov
xor
cmp
nop
cld
cmpb
pop
int3
clc
aad
lret
cltd
push
jns
add
pop
cli
sbb
xor
push
ret
dec
pop
adc
or
call
repz
inc
push
es
push
mov
repz
dec
xchg
sbb
push
mov
ja
negb
aas
std
dec
mulb
push
pushl
pushf
jl
movsl
popa
in
mov
sub
jno
ljmp
xchg
push
dec
icebp
jae
sub
or
mov
push
les
sbbb
ret
inc
adc
call
cs
xchg
mov
outsl
movsb
pop
cmpsl
mov
and
jnp
ljmp
fwait
outsb
cmp
sbb
xchg
dec
add
stc
adc
adc
sub
shlb
adc
popf
dec
sahf
pop
in
popf
ret
xor
lock
aad
xchg
bound
jns
ljmp
into
stos
xchg
push
cmp
jne
rcll
jo
lock
mov
in
cwtl
xchg
pop
sbb
or
fists
jecxz
inc
mov
adc
cmc
scas
sar
xchg
xor
mov
add
lods
inc
sbb
mov
cwtl
test
in
subb
push
and
fwait
call
inc
xlat
cmp
push
lret
inc
divb
cmpsb
loopne
pop
bound
jae
or
cld
adc
loope
mov
or
dec
xor
sahf
mov
pop
ja
xor
mov
loopne
dec
cli
andb
push
in
movsl
jg
xor
push
push
aas
loopne
enter
jo
xlat
addb
mov
insb
orb
scas
dec
scas
enter
pop
ds
add
cmp
sbb
mov
add
push
xchg
cs
mov
sub
rorb
ss
mov
jge
insb
ljmp
cmpb
out
cmc
popa
test
sbb
jbe
pop
inc
fcoml
cmp
loopne
xchg
scas
xchg
pop
xchg
ljmp
loopne
sbb
adc
adc
and
les
inc
shlb
cmp
push
adc
movsl
mulb
or
xchg
inc
adc
incl
movsl
test
sub
inc
shl
das
cmp
add
push
add
jg
and
data16
lcall
loopne
ret
rorb
fcmovnb
push
je
xchg
fdivrl
cli
lods
loop
mov
movsb
cwtl
leave
rorb
mov
xor
mov
dec
cld
jg
jl
iret
sub
icebp
jnp
cmpsb
and
sub
inc
cld
imul
mov
jmp
imul
test
fisubrs
inc
sub
js
lcall
jne
mov
add
push
inc
pop
push
sbb
pop
xor
push
cmpsb
sbb
iret
vpandn
out
in
and
adc
jne
out
push
mov
xor
mov
adc
or
adc
sbb
pop
sub
psrlq
lds
ljmp
pop
jae
mov
push
or
inc
xorb
sub
ret
dec
les
fstpt
mov
adc
jg
sbb
adc
xor
jg
test
rclb
add
cs
loop
outsl
addb
or
fcompl
movsl
scas
mov
mov
push
xor
idiv
mov
shll
pushf
imulb
cltd
dec
mov
mov
push
pop
js
aaa
pop
mov
repz
aaa
add
push
cmc
push
xor
or
into
push
and
sbb
call
cld
mov
mov
add
sbb
or
jecxz
jo
clc
or
scas
add
test
scas
jbe
or
sub
or
es
scas
jo
mov
xchg
push
mov
sbbb
lods
sub
mov
push
add
cs
jb
clc
outsb
sbb
mov
or
ljmp
xor
je
jae
cwtl
aas
adc
out
shlb
test
inc
xchg
fsubrl
jle
imul
lcall
aad
jle
jg
and
ret
jo
sarl
push
lock
push
test
cwtl
out
mov
dec
and
and
xor
fldz
jo
sub
les
jle
lock
rorl
push
sbb
std
xor
lods
bound
add
sbb
or
sbb
in
sub
dec
sbb
or
dec
idivl
les
add
cwtl
inc
mov
fcmovb
lods
ret
orb
adc
stos
mov
mov
subl
inc
in
inc
mov
rol
cmp
push
lret
push
test
add
fildll
loop
lcall
jp
mov
nop
pusha
mov
xchg
sbb
lcall
pop
and
loop
and
out
loope
jmp
movsb
lcall
cs
push
add
aaa
sub
lret
dec
aad
xchg
jmp
scas
cmc
andl
push
add
xor
incl
jl
insb
xor
adc
je
je
mov
icebp
pop
jmp
jnp
addb
and
enter
push
ja
mov
add
jl
out
cmpb
adc
cs
or
push
adc
mov
cmp
std
or
bound
lock
cmp
ret
daa
and
scas
ds
adc
mov
add
cmp
scas
inc
adc
fdivs
push
test
mov
xor
sbb
mov
cmp
jbe
sbb
or
call
loop
nop
mov
sbb
pop
jecxz
adc
pushl
mov
outsb
testb
jle
xor
dec
out
not
add
call
mov
inc
xchg
sbb
std
out
imul
loop
sarl
sub
scas
fdivr
sarl
aam
add
rorb
movsb
inc
mov
jg
adc
div
jmp
pusha
pop
pop
icebp
scas
jge
rolb
sbb
jge
js
mov
hlt
jg
pusha
or
addb
pop
mov
out
inc
mov
mov
adc
and
jle
adc
pop
xchg
mov
xchg
scas
bnd
or
sub
lods
push
das
and
mov
bound
inc
sub
xor
push
enter
decl
popf
and
mov
jp
ja
lcall
or
and
mov
adc
cmp
addr16
and
loop
test
leave
test
and
sub
mov
cmp
jp
pop
cmp
and
mov
incb
loope
sbbb
adc
xchg
stos
pop
push
xchg
popf
and
mov
stos
pop
aaa
inc
rcr
add
mov
imul
add
and
mov
jmp
gs
fmull
out
sub
sub
clc
lcall
jge
mov
push
push
add
les
push
out
mov
or
pop
gs
mov
sub
push
or
ss
and
mov
int
ds
cmp
adc
bound
mov
xorl
fcompl
adc
dec
and
test
cs
cmpsl
int
sub
movsb
ret
adc
bound
insb
push
adc
je
loopne
adc
push
scas
xor
lock
mov
lods
adc
out
inc
mov
lea
pop
std
mov
call
iret
insb
mov
lods
test
dec
push
jae
add
gs
inc
push
movsl
sub
std
mov
mov
adc
pushf
and
push
and
nop
mov
or
or
pop
test
mov
pop
sbb
negl
shr
inc
into
push
ljmp
mov
lods
sbb
jp
rcll
add
push
jo
jl
and
inc
les
pusha
mov
and
adc
cwtl
xchg
ficompl
rcll
inc
jo
rol
dec
jp
or
adc
add
sub
xchg
les
daa
mov
cs
mov
or
mov
push
roll
push
in
add
pop
ret
gs
xor
push
addb
outsb
ss
mov
cmp
mov
mov
jecxz
add
jo
dec
sub
das
clc
jne
test
cli
jo
int
sub
les
xchg
or
xor
push
sub
popa
imul
pushf
je
stos
add
mov
lahf
inc
dec
hlt
dec
pslld
arpl
sub
xor
sbb
push
push
mov
or
push
sub
and
pop
jg
adc
int3
je
in
jl,pn
movsl
or
add
inc
pop
outsb
scas
test
add
sub
push
mov
mov
cmp
pop
mov
je
push
mov
xlat
or
pop
in
mov
add
inc
rorb
and
test
sub
cmp
pop
aam
shll
subb
addl
cmp
stos
inc
into
or
and
and
inc
pop
shlb
adc
jbe
lock
sub
xchg
insl
mov
iret
or
ds
cli
inc
mov
mov
adc
inc
xor
incl
pop
xor
xchg
mov
mov
clc
push
or
inc
jnp
mov
shrb
out
add
xchg
mov
clc
cmp
dec
lcall
dec
lds
dec
es
test
lods
pushf
xchg
mov
add
push
pop
sbb
add
pop
adc
les
jg
xor
loopne
jns
das
xchg
shlb
adc
adc
fcomi
lods
push
fldl
lods
test
cmpsb
dec
movsl
adc
add
enter
lret
sub
ljmp
push
dec
push
lcall
adc
ss
and
mov
cmpb
cmpb
pusha
and
add
mov
fildll
cmp
fsub
xchg
sub
fisubrl
xchg
sbb
sbb
jge
lods
mov
lods
ficomps
mov
inc
inc
add
cld
rcll
mov
int
push
aas
cld
scas
les
xchg
pop
dec
add
pop
inc
dec
xchg
popf
dec
js
scas
test
add
pop
push
sbb
xor
call
andl
scas
mov
rorl
les
incl
inc
sbb
inc
fs
or
clc
ficoms
popa
adc
fwait
add
insl
jbe
or
jl
or
out
scas
pushf
or
inc
or
sbb
jg
bound
test
jns
mov
es
xchg
adc
cmpsb
push
loopne
inc
inc
int
xor
mov
mov
jmp
add
or
sbb
and
jg
movsb
mov
dec
push
call
fs
ret
add
or
jbe
xchg
ja
jle
dec
push
rcr
scas
aaa
je
pushf
pop
add
jae
ljmp
and
add
adc
lds
xchg
sbb
mov
or
pop
xchg
xchg
cmp
idiv
dec
std
mov
mov
idivb
sbbb
leave
and
add
push
dec
imul
out
dec
mov
ja
or
push
ficoml
lds
and
pop
push
mov
mov
or
adc
mov
cmp
mov
lds
push
or
xchg
fadds
cmp
dec
aam
jmp
or
mov
xchg
lcall
clc
jbe
or
mov
xchg
in
push
iret
xor
pop
add
adc
frstor
jp
sub
adcl
xor
mov
cmpsb
or
dec
lcall
les
cmpl
ret
dec
ret
stos
cmp
or
lcall
mov
in
push
bound
mov
sbb
adc
enter
stos
std
lahf
add
mov
inc
scas
mov
pop
cmc
mov
add
pop
inc
cmp
cwtl
and
loope
xor
int3
cli
add
pop
aam
mov
popa
andb
mov
cmp
xorb
adc
cmp
or
mov
ja
push
fsts
xchg
adc
outsl
pusha
mov
push
movsb
add
inc
ss
clc
decl
in
popf
out
xchg
xchg
sbb
sbb
jbe
fs
ss
or
inc
sbb
lahf
outsl
sbb
sub
fcomip
lea
xor
sub
mov
push
and
fisubrs
add
and
cli
xchg
jo
cld
loopne
and
fbstp
push
sub
insb
lea
aaa
xchg
bound
es
mov
sub
idivb
mov
push
movsl
sti
dec
fldcw
mov
test
jne
sub
inc
push
jle
in
pop
mov
mov
fisttpl
sbb
pop
lock
lcall
dec
cmpsb
imul
cmp
cmpsb
or
mov
test
icebp
shll
jle
insb
and
insb
fidivrl
add
andb
push
ss
cmpsb
stos
mov
sbb
lock
or
adc
add
pop
or
daa
std
and
repz
mov
lods
test
jl
orl
data16
pusha
js
jo
dec
push
sub
inc
roll
leave
add
xlat
into
jg
or
fs
push
call
xor
add
add
push
cld
inc
fcmovb
cmp
xchg
out
test
ret
jl
mov
insb
icebp
js
push
push
fwait
movsl
dec
fisubs
cmp
xchg
pop
xchg
or
mov
mov
pop
mov
pushf
mov
or
cmpsb
add
insb
pop
lcall
pop
or
pop
jecxz
outsb
andl
mov
dec
popf
add
test
cmpsb
sub
xor
les
jl
mov
les
lcall
jl
loopne
jge
mov
jge
pushl
loop
add
andb
cwtl
js
mov
popf
add
test
pop
add
addr16
dec
aaa
jmp
inc
mov
adc
cmp
dec
sbb
repz
add
adc
jg
adc
mov
cwtl
pop
popl
cltd
dec
adc
fidivrs
scas
cmp
adc
scas
xor
lods
add
cs
enter
pop
pop
es
or
ret
dec
ds
mov
sarb
cmpsb
xchg
das
ss
push
lret
ficomps
mov
dec
jnp
jge
cli
sbb
cmp
mov
ret
mov
and
popf
stos
and
jo
cmpsb
add
pusha
shlb
mov
mov
cmc
push
add
pop
dec
ret
cli
add
cwtl
stos
xchg
loop
add
jge
pop
movsb
cmp
sbb
push
arpl
test
incb
mov
mov
aas
adc
sub
jnp
push
jmp
aas
push
xor
mov
out
push
mov
dec
js
js
lret
mov
es
iret
dec
subl
repnz
fst
push
jl
pop
test
mov
jg
xchg
inc
scas
mov
pop
es
inc
clc
or
or
cs
test
je
mov
outsb
mov
dec
fists
mov
adc
add
jbe
mov
call
mov
fbld
inc
sti
push
les
mov
call
pop
clc
cmovle
call
scas
inc
ljmp
inc
dec
inc
add
sahf
pop
adc
or
jo
lea
adc
ss
jo
sub
or
add
cmp
xchg
outsl
inc
pop
mov
mov
addb
xchg
outsl
or
and
pop
and
enter
clc
or
adc
push
mov
cli
adc
ljmp
pusha
xchg
hlt
add
xchg
push
test
mov
inc
mov
dec
fwait
or
das
xchg
mov
sbb
out
clc
push
add
ljmp
js
out
std
mov
adc
call
andb
xchg
pop
or
ud1
pop
pop
jecxz
push
push
bound
sub
push
ficoms
jb
inc
movsl
fs
rorl
cli
scas
cmp
subl
pop
pusha
sub
fisttpll
mov
sbb
adc
adc
dec
xchg
and
inc
cld
imul
sbb
movsl
fildll
xchg
jle
pop
andb
leave
cwtl
push
cmp
jge
add
sbb
in
adc
fildll
cs
or
stos
dec
xor
fldt
pop
fimuls
jb
lcall
faddp
pop
cmpb
insb
dec
dec
mov
scas
ds
adc
xor
xchg
addr16
mov
or
pop
jno
jp
clc
inc
pop
add
std
pusha
cwtl
cltd
adc
cmp
rorb
lahf
cmp
cmpsb
push
leave
jmp
or
push
inc
scas
jno
push
ret
or
or
cli
inc
aaa
aaa
sbb
in
cmp
and
outsl
sub
roll
push
in
xchg
in
jno
pop
push
mov
or
ljmpw
sbb
sbb
inc
es
and
jle
dec
ret
outsb
into
sbb
lods
xchg
incl
decl
push
and
and
mov
add
jo
adc
or
push
inc
cwtl
or
pop
leave
es
dec
fimuls
mov
push
push
fwait
rorl
cmp
or
jnp
push
cld
aad
in
mov
lds
push
sbb
push
loop
test
in
or
or
js
mov
loop
incb
mov
scas
jle
std
call
add
push
push
dec
and
outsb
pop
lods
mov
cltd
fiaddl
movsb
es
movsb
xchg
adc
mov
arpl
pop
mov
fs
and
lcall
jo
and
xor
add
aaa
call
aas
and
push
cli
repnz
mov
test
call
push
out
mov
push
lahf
notb
arpl
jne
xchg
out
icebp
fwait
data16
jns
popf
jne
insb
pusha
xchg
adc
enter
aad
dec
add
adc
or
inc
movsl
and
and
adc
icebp
call
xor
dec
cmp
incb
pop
icebp
add
cmp
shlb
mov
mov
jo
and
fstl
fmuls
arpl
sub
sub
test
call
sbb
pop
loopne
or
push
icebp
outsb
shlb
js
dec
inc
xchg
scas
inc
fmull
and
mov
sbb
rcll
ljmp
inc
aam
setl
cli
or
dec
push
test
cmp
or
jo
in
popf
push
out
js
cmpb
leave
pop
sub
cwtl
jns
inc
mov
fwait
js
bt
fcompl
sub
ret
in
insl
adcb
das
cltd
js
cs
add
jo
insb
push
out
xchg
fcmovnu
adc
data16
cmc
xor
inc
sahf
dec
xor
push
sub
test
bound
imul
lret
loope
in
data16
sbb
rorb
push
sbb
aam
add
add
out
ret
mov
incl
pop
add
test
dec
fmulp
adc
jg
ffreep
or
cmp
mov
shll
andl
rolb
dec
mov
imul
and
pushf
xor
adc
mov
mov
fistps
pop
mov
mov
pop
jmp
pusha
or
xchg
mov
test
gs
push
mov
sti
stos
dec
mov
push
push
or
jle
pop
lret
and
dec
and
fcomps
in
dec
jle
add
or
rolb
mov
mov
push
sbb
movsb
stos
ss
out
adc
cmpb
sbb
ret
fwait
or
sub
adc
mov
sub
add
cmpsb
mov
in
push
pop
movsl
inc
fmuls
jno
add
dec
mov
sbb
mov
stos
adc
les
cmpsb
push
push
add
call
jnp
out
clc
pop
pop
call
stos
jbe
mov
inc
lods
ss
roll
jle
xor
xor
orb
adc
adcl
add
lahf
mov
scas
cmp
fsubs
insb
jbe
dec
mov
pop
fcompl
clc
sub
nop
adc
pop
mov
ljmp
lock
pop
cmpb
inc
bound
dec
dec
test
cltd
std
inc
int
ja
mov
dec
lods
sub
jp
or
or
pusha
bound
loopne
dec
push
xor
adc
cwtl
push
push
adc
mov
or
dec
cmp
outsb
cmp
aad
xor
cli
outsl
mov
mov
sub
add
filds
daa
jne
mov
enter
shlb
filds
bound
add
imul
mov
adc
push
jl
xchg
loop
jae
sub
out
jecxz
or
xor
inc
cld
cld
jb
adc
adc
jns
bound
xchg
lock
fbstp
stos
inc
sub
push
adc
frstor
adc
xor
js
cli
push
mov
mov
lods
or
adc
decl
enter
enter
lcall
xor
fmuls
mov
adc
push
xlat
or
xchg
push
sub
sbb
mov
or
mov
add
andb
add
pand
and
orb
pop
and
push
jno
fnsave
test
xchg
adc
xchg
nop
xor
mov
pushl
add
mov
pusha
inc
mov
mov
inc
add
jl
aas
push
push
mov
sub
cmpsb
or
hlt
lcall
aad
adc
stc
cltd
fbstp
sub
jnp
mov
xchg
jno
in
and
decb
xor
aam
xor
cli
dec
mov
push
testb
xor
stos
push
movsl
int
loop
js
push
lods
into
cltd
sbb
in
cltd
cmp
sub
push
pop
fcoms
js
push
push
insb
or
lea
cli
repnz
and
mov
pusha
pusha
outsb
push
push
enter
mov
inc
xchg
outsl
and
inc
inc
pusha
mov
sub
add
rcr
movsl
call
sbb
sbb
test
out
addr16
lcall
mov
stos
int3
mov
inc
dec
arpl
cwtl
cltd
cmpsl
mov
js
loopne
rorb
push
dec
jp
fbstp
cmpsb
cmpb
sub
or
popf
test
mov
shrl
mov
inc
mov
pop
lods
push
sti
shlb
inc
sbb
jg
loop
fmul
lea
pop
mov
roll
adc
mov
push
faddp
leave
inc
insb
adc
cmp
cli
sbb
add
pop
inc
movsb
push
ja
cld
js
das
test
add
icebp
xchg
inc
jle
add
sub
push
pop
insb
push
fadds
ja
inc
mov
lds
stc
push
inc
lds
ds
fs
push
aad
call
push
pop
in
enter
ds
js
cmpsb
mov
xor
lods
and
mov
int
xchg
dec
imul
incl
stos
pop
mov
cmp
dec
dec
or
dec
cld
scas
aaa
adc
adc
xchg
xchg
ljmp
jl
push
repnz
xor
aas
mov
ds
mov
add
mov
hlt
xchg
dec
cwtl
outsl
mov
cld
sbb
add
and
mov
jo
adc
int
fdivrp
push
adc
jl
js
aas
push
jge
add
ljmp
push
and
push
fwait
test
pop
out
sbb
mov
push
cmp
add
mov
out
aam
pop
outsb
xchg
enter
sub
inc
and
mov
add
scas
cmp
bound
inc
adc
scas
mov
push
aam
lock
xchg
cltd
repnz
and
dec
jg
mov
popf
mov
pop
adc
mov
adc
sbb
xchg
inc
or
std
inc
push
mov
cltd
and
ljmp
mov
and
clc
pop
xor
nop
stos
mov
jle
xor
lds
mov
push
adc
or
jecxz
imul
lock
and
push
clc
xchg
jmp
in
cmp
xor
pusha
push
pushf
push
xchg
lahf
lret
pop
sub
gs
fs
jbe
mov
gs
addr16
sbb
aam
mov
decl
add
pop
daa
xchg
loope
adc
adc
xchg
ljmp
inc
mov
lods
lret
insl
jle
in
or
xor
inc
pushf
movsb
mov
mov
outsb
jne
dec
loop
pop
jnp
mov
enter
in
clc
sbb
fs
or
into
lock
mov
insl
filds
inc
rcr
mov
dec
jae
mov
sbb
pop
into
fiadds
clc
orl
push
adc
push
push
push
iret
aam
cmpsl
int3
xchg
repnz
lock
add
cmp
add
adc
adc
mov
xchg
ljmp
pop
insb
inc
outsb
repnz
rolb
jo
inc
dec
add
hlt
sarl
xor
ja
jg
adcb
and
mov
dec
pop
nop
inc
sti
push
fxch
repz
sti
fisubs
in
les
sti
out
imulb
mov
jb
bound
add
pop
or
cmp
lods
dec
jne
cli
lock
push
xchg
es
je
lcall
ljmp
lock
ret
sub
dec
or
lahf
call
loopne
loope
jle
add
mov
insb
add
clc
jns
pop
jne
dec
or
add
sahf
xchg
cmp
out
cmp
push
push
into
roll
test
inc
pushl
jno
add
clc
push
dec
xchg
xor
test
dec
add
call
push
mov
sbb
push
jp
mov
push
jg
aas
xor
stc
mov
cmpsb
shld
les
mov
jno
nop
rclb
or
sub
xor
xor
nop
or
inc
movsb
mov
add
or
call
scas
outsl
xor
sbb
lods
out
insb
nop
mov
sbb
movsb
add
ljmp
cs
enter
pop
mov
out
lods
lock
xchg
pmullw
sbb
sub
out
jbe
cmc
fisttps
mov
pop
dec
mov
das
orb
sub
add
sub
adc
adc
outsb
mov
jecxz
mov
ljmp
or
loope
add
push
mov
adc
dec
sar
ret
je
sbb
test
rcr
data16
or
enter
pop
faddl
jg
mov
data16
inc
or
sbb
xchg
sub
add
cmc
push
std
dec
js
aam
push
imul
movsl
push
push
add
inc
mul
jo
ret
popf
cmp
mov
in
loop
int3
test
mov
outsb
dec
mov
jbe
cs
xchg
inc
dec
add
pushf
pop
ret
negl
mov
push
scas
stos
cmpsl
inc
add
mov
aaa
add
pop
std
test
jo
adc
jo
lock
bound
dec
ds
xor
inc
sar
clc
xorb
jb
call
and
std
mov
add
pop
scas
rcll
xchg
test
push
popl
enter
adc
dec
ja
jge
xchg
mov
and
pop
push
lds
mov
into
rol
jb
es
divb
lock
mov
inc
xchg
shll
addb
les
into
fidivl
ret
adc
sub
jmp
jmp
adc
add
movsl
cltd
std
test
jbe
ret
fimuls
scas
inc
sub
mov
ss
addr16
in
mov
cmc
shr
xchg
mov
cwtl
mov
movsb
adc
and
and
mov
jnp
push
xor
lcall
add
xchg
sub
testb
inc
test
test
lock
in
add
mov
stc
das
inc
push
xchg
data16
nop
out
div
jg
adcb
adc
aam
lock
add
pop
or
fisttps
mov
push
xchg
std
mov
lock
js
ljmp
fisubrs
xor
insb
cli
cmpsl
add
jle
sub
push
movsl
push
sub
repz
add
repnz
int
lods
xor
pushf
mov
adc
iret
jle
push
outsb
mov
hlt
sbb
lea
and
ljmp
call
push
cmp
les
pushf
stos
xchg
mov
push
loopne
xor
sub
gs
mov
pop
lea
adcb
cwtl
mov
add
outsl
sub
mov
cmc
fxch
roll
call
adc
icebp
mov
dec
ret
clc
stos
loope
xor
ficoms
test
jmp
push
lods
mov
les
ljmp
std
mov
in
mov
repz
mov
inc
pop
or
cwtl
mov
jb
loop
add
loopne
stos
hlt
push
mov
push
stos
or
cli
pusha
shrl
jmp
test
outsl
pop
sub
sub
adcl
js
adc
int
loopne
xchg
test
jo
dec
pushf
fs
mov
popa
test
lock
jbe
cli
add
addl
adc
repnz
cld
add
std
or
in
nop
clc
imul
outsl
into
mov
and
imul
icebp
xchg
lahf
xchg
sub
inc
testl
adc
jp
lretw
push
xor
pusha
ret
incl
xchg
sbb
testb
mov
std
int3
jmp
inc
mov
outsb
fnstcw
outsl
adc
dec
xchg
inc
mov
cltd
xchg
call
lcall
mov
xor
or
xchg
cwtl
cli
outsl
fsubs
lds
push
nop
mov
or
lcall
cli
mov
push
sub
adc
pop
lds
add
xor
nop
fwait
sbb
and
je
add
jg
popf
arpl
lods
jmp
bound
call
adcb
cmp
inc
lcall
lahf
lahf
inc
loopne
mov
jo
lcall
sahf
pop
in
fsubs
pop
xor
jmp
cmp
mov
push
es
hlt
inc
ds
rorl
lods
mov
inc
xchg
stos
test
fs
jp
nop
xchg
or
icebp
pop
lods
out
mov
ficoml
jne
add
and
jmp
out
fsubrs
or
nop
sbb
dec
and
jbe
pop
fdiv
fiaddl
lods
incb
clc
test
dec
in
or
fwait
aad
imul
cwtl
bound
inc
lcall
shlb
out
ds
cmpsb
add
push
adc
call
mov
jb
or
aam
aam
push
push
icebp
xorb
dec
add
mov
and
cmp
xor
dec
mov
mov
xchg
cs
test
stos
ficoms
jle
pop
dec
lock
pop
mov
pusha
push
jmp
add
sub
lods
sub
xor
dec
notb
jl
xchg
add
and
les
jp
decb
mov
pop
out
pushf
cmp
imul
sbbb
sbb
sub
mov
in
cltd
repz
mov
mov
ret
insb
fdivrp
push
mov
jge
xor
pop
pop
aad
aas
jge
out
ja
insl
fld
inc
sub
in
mov
cmp
ss
test
mov
loope
adc
jb
enter
mov
test
jg
add
and
addr16
fmull
dec
test
stc
imul
adc
les
mov
sub
and
leave
fs
mov
je
ljmp
add
or
xor
jb
mov
loop
fwait
orb
mov
xchg
outsb
fcomip
push
inc
bound
lds
dec
test
ds
add
pushf
push
mov
imul
push
rol
nop
mov
ret
xor
jg
popa
fiaddl
dec
push
ret
cld
and
ret
push
mov
ljmp
or
in
out
clc
add
lds
adcb
aaa
jge
aaa
aas
mov
mov
inc
lock
fdivrs
jnp
ret
or
cwtl
stos
hlt
cmp
jge
fidivs
mov
xchg
push
pusha
aaa
cld
jg
add
mov
iret
xor
dec
das
daa
aam
pop
add
add
mov
pusha
jmp
mov
or
sbb
test
sub
lods
rcrl
push
loop
aaa
adc
clc
subb
adc
sub
fnsave
sarb
mov
jg
push
repnz
inc
mov
cmpb
icebp
pushl
cwtl
sbb
fs
cwtl
je
hlt
sbb
scas
mov
xlat
cmp
jl
push
ss
and
hlt
stos
or
daa
adc
mov
sub
push
xchg
jns
lock
repz
bound
mov
int3
cmc
dec
adc
fiadds
out
mov
mov
pop
mov
hlt
aaa
or
jp
mov
mov
hlt
in
cmp
cmpsb
jmp
sbb
or
insl
pop
push
or
mov
loope
push
jle
or
popf
or
outsl
dec
call
add
pusha
mov
es
dec
sbb
ljmp
fwait
shr
sbb
lahf
rcrb
insb
lcall
mov
dec
push
add
mov
sbb
shrl
or
in
jle
sub
out
add
inc
lock
loope
ret
inc
jp
dec
push
cmpsl
xor
xor
mov
std
imulb
hlt
xchg
jecxz
fcmovbe
add
jne
cmc
pop
bound
xchg
jb
jmp
push
ret
and
lds
outsb
clc
outsl
or
mov
inc
nop
add
sar
xchg
jl
pop
test
leave
mov
lock
cltd
rolb
inc
js
mov
andl
cmpb
sub
pop
mov
scas
mov
sbb
stc
xlat
cmc
adc
inc
loope
rorb
jmp
mov
adc
inc
push
pop
sti
shlb
std
dec
mov
fwait
dec
sar
syscall
add
dec
or
cs
loop
loopne
leave
lcall
fwait
mov
dec
mov
aam
aam
pusha
adc
sub
ficoms
jb
adc
cld
inc
jnp
mov
mov
mov
dec
or
lcall
jge
movsb
pusha
xchg
pop
icebp
lret
nop
cs
cmpsl
adc
or
jle
sbb
test
jg
xor
jo
clc
mov
cwtl
icebp
jmp
cmp
dec
push
mov
fsubrs
clc
jg
push
xlat
or
mov
adc
decl
cmc
mov
dec
jmp
push
sub
sbb
test
cmp
popa
imul
popa
inc
test
ret
pop
jle
lock
pop
rcr
lock
ljmp
outsl
incb
loope
sbbb
inc
push
es
xor
adc
fiaddl
fldenv
fists
or
ss
repnz
or
pop
enter
out
jo
push
xchg
sub
adc
ret
test
add
ffree
call
shr
cmp
pop
pusha
inc
data16
add
push
ficoml
fisttpll
int3
cmp
test
fdivp
or
in
scas
int3
mov
loopne
adc
or
mov
xorl
incl
mov
les
imul
push
add
mov
mov
ret
and
push
mov
arpl
and
add
es
or
mov
cld
out
lods
pop
ljmp
mov
adc
daa
jo
add
lret
jg
xor
sub
mov
cli
movsb
xchg
into
adc
in
jmp
and
mov
insl
orb
sub
fcmovb
mov
dec
mov
ds
subb
mov
test
dec
sbb
cmp
cmp
dec
lcall
mov
mov
iret
pop
mov
mov
call
jg
push
mov
jns
xorb
xchg
add
imul
lea
andl
call
xlat
and
and
xchg
sbb
xor
sub
ret
sub
andl
lret
push
or
jge
orb
pop
sbb
push
popa
mov
mov
jecxz
cld
push
adc
mov
aam
and
ja
pop
test
jns
cmp
sub
or
inc
mov
jge
jmp
out
nop
dec
ds
cmp
mov
loopne
push
and
push
lods
xchg
imul
xor
call
bound
mov
inc
jge
mov
movsb
push
xor
fadd
xchg
mov
enter
mov
sahf
adc
mov
subb
xchg
les
cmpsl
jo
leave
lock
push
cltd
dec
or
push
hlt
mov
or
inc
in
mov
inc
mov
sub
adc
clc
icebp
dec
bndldx
fdivrl
push
mov
dec
sbb
xchg
pop
addr16
rcrl
or
test
lods
and
stos
dec
shrl
movsb
mov
fmull
test
sbb
xchg
leave
sub
sbb
dec
or
es
mov
inc
cmpsb
dec
add
or
inc
mov
jge
sub
bound
xor
ljmp
xor
mov
or
mov
jecxz
push
inc
cs
adc
punpcklwd
jge
bswap
rolb
or
les
mov
pop
mov
jo
lret
cmp
lahf
jp
int
mov
jmp
or
mov
mov
aas
and
insb
push
incb
pop
icebp
push
and
and
adc
outsb
outsb
std
pavgb
lock
jp
xor
pop
push
fiadds
add
stos
sbb
incl
or
sbb
orb
ljmp
fsubrl
xor
outsb
out
sbb
pop
xchg
sub
lock
sbb
xchg
enter
cmpb
imul
dec
xor
xor
cld
inc
pop
loope
lock
sbb
pop
or
les
dec
cli
imul
push
sbb
imul
loop
nop
sub
les
inc
aaa
push
test
add
das
cmp
cmp
and
jae
in
cbtw
int3
in
xchg
adc
jg
or
pop
adc
fildl
loope,pt
pop
cmc
or
fcompl
sbb
popf
out
push
mov
xor
test
and
jle
add
mov
adc
aam
nop
aam
pop
mov
popa
pushl
add
pop
cmpsl
lods
lea
stos
test
shlb
jp
jg
cmp
inc
enter
cwtl
in
xor
sbb
fcomps
repnz
sbb
pop
ljmp
mov
fisttpl
loopne
adc
js
pop
cli
cmpsb
bound
int
dec
rorl
lods
js
mov
in
add
add
leave
test
rclb
data16
es
fcomps
lds
test
push
sub
ljmp
cmp
nop
xor
flds
lock
add
not
rcl
inc
jge
insb
cmp
xchg
icebp
dec
lds
pusha
call
push
aam
stos
ja
add
rorb
sub
pop
inc
push
inc
sub
jg
add
sub
pop
incl
sub
mov
lock
and
sbb
lret
aas
sub
pop
adc
pop
cmp
aad
xor
test
loop
mov
xchg
ret
mov
sub
rcll
sbb
mov
das
cltd
add
ss
in
or
jl
cmp
jb
fs
jbe
mov
sbb
sbbb
int
mov
mov
jae
xor
jle
xor
repnz
ficompl
ss
rolb
mov
jns
mov
push
mov
addb
mov
pop
jp
es
mov
jmp
ss
shlb
cli
arpl
pop
mov
jl
mov
shll
pop
mov
ljmp
imul
fcoms
inc
loope
pop
sub
out
andb
push
cmpsb
inc
mov
jge
inc
mov
jmp
repz
notl
out
in
xchg
cmp
add
add
adc
mov
lret
je
sub
stos
add
or
bound
ret
mov
inc
shl
sbb
push
add
and
push
jecxz
adc
aam
lahf
dec
sahf
sub
pop
fnstsw
mov
jmp
ljmp
in
or
inc
pusha
jle
pop
cli
add
jg
test
xor
sbb
and
mov
scas
and
inc
cmp
mov
mov
push
dec
loop
clc
stc
fs
sbb
pop
pop
lret
xlat
pop
rol
in
xchg
sbb
js
ret
or
add
mov
mov
jl,pn
lock
bound
rcr
push
call
mov
jne
mov
into
cmp
jl
cmp
call
out
repz
repz
inc
xlat
and
jle
ror
mov
mov
fistl
cld
push
xor
or
push
cld
outsl
mov
and
mov
jno
jle
push
jg
or
dec
stos
inc
or
pop
xor
jo
lcall
add
mov
sbb
call
fcom
pop
jl
ret
dec
mov
adc
rcr
mov
je
xchg
lods
test
push
and
out
pop
lock
xchg
or
ret
std
pop
mov
cwtl
inc
dec
dec
es
adc
and
xchg
testl
jg
or
xchg
aad
movsb
add
dec
mov
push
jle
lcall
popa
cmp
adc
sti
sbb
xlat
and
test
xorl
mov
fbld
popa
rorb
pop
lock
push
lahf
and
mov
aad
js
mov
popf
jb
pop
subb
jp
shl
push
push
cmc
jg
ret
and
enter
fidivl
mov
jnp
xchg
xor
mov
cmp
into
sahf
mov
lcall
bound
mov
adc
icebp
dec
and
fldt
mov
es
lds
jns
jl
in
insl
cmp
mov
ss
inc
push
js
pop
inc
xchg
cltd
cld
mov
jp
icebp
xchg
dec
xchg
lock
lcall
xchg
mov
lods
clc
ljmp
cmpsb
out
fmull
dec
push
cmp
notl
stos
lahf
add
add
inc
mov
jno
scas
adc
or
lahf
inc
loopne
mov
add
adc
cmc
push
jl,pt
push
add
mov
xor
fwait
inc
mov
sbb
clc
wrmsr
sub
pop
aam
inc
mov
ficoms
outsl
adc
add
test
fwait
jle
mov
scas
shr
push
movsb
xchg
ds
or
and
xchg
lods
test
ret
sbb
mov
addb
and
outsb
pop
clc
incl
iret
leave
add
jo
add
xor
jl
lods
cld
lret
test
test
lahf
les
pop
test
lods
test
sub
cltd
imulb
mov
jl
movsb
test
mov
sub
jg
xor
jl
inc
and
lods
xor
sbb
or
aad
fs
out
icebp
sub
pop
dec
adc
ljmp
test
sbb
dec
lods
push
add
les
sarb
icebp
insl
sub
lds
add
outsl
mov
jg
clc
mov
xorl
add
inc
inc
mov
push
mov
xor
shll
testb
fidivrl
pushf
mov
mov
shl
push
out
fstpl
pop
xor
repz
nop
adc
sub
jecxz
outsl
adc
adc
add
fisttpll
and
ret
shrb
fbld
or
push
repz
mov
sub
jbe
sti
sbb
ret
dec
add
nop
insb
mov
jbe
mov
testl
dec
jae
mov
lcall
int
push
push
cmp
les
dec
cmp
pop
insb
and
sub
adc
leave
push
mov
cmp
dec
fdivp
pop
test
and
inc
mov
xlat
test
pop
xchg
xor
lcall
decb
aam
rorl
ljmp
or
push
scas
or
aaa
loopne
dec
test
mov
cmpb
stc
and
xchg
rcrb
mov
add
mov
and
mov
inc
sarb
int
pop
aam
out
subl
push
and
jbe
aam
call
cmp
and
push
or
mov
subps
xchg
je
faddl
xchg
js
cmovno
and
or
sub
arpl
dec
xor
pushl
and
adc
cmp
das
cmc
adc
inc
adc
jl
icebp
inc
cltd
jecxz
cmp
cmp
add
cmp
add
jmp
or
dec
mov
js
sarl
subl
ja
adc
pushl
or
mov
dec
adc
adc
fdiv
stos
adc
adcl
sbb
aas
adc
inc
inc
adc
mov
stc
mov
cmp
mov
scas
dec
call
ja
into
sbb
mov
scas
ljmp
push
add
pop
push
adc
incb
hlt
xchg
scas
push
xchg
test
pop
jmp
or
xor
shlb
test
cmp
dec
sti
stc
pop
mov
outsb
setns
imul
push
xor
sarb
stc
bound
sub
dec
cmpl
movsl
mov
push
imul
insb
outsl
mov
sub
loop
dec
and
clc
insl
loop
loope
dec
loop
xor
mov
adc
mov
mov
ret
lret
subb
cmpsb
and
aas
push
sbb
mov
iret
test
out
les
dec
push
sbb
mov
mov
sbb
sub
push
push
popa
mov
inc
mov
je
mov
ljmp
scas
ss
jo
inc
mov
mov
cmp
push
and
js
cld
sub
mov
pop
cli
loop
imul
scas
push
and
incl
dec
pop
mov
and
ljmp
nop
inc
xchg
shrl
ret
mov
call
sti
mov
inc
cmp
mov
cmp
xorb
andl
aad
addr16
inc
jbe
sti
outsl
and
mov
rclb
out
je
jne
add
sbb
inc
sbb
aam
add
and
ljmp
decb
jno
or
add
mov
sbb
and
cld
xor
cmp
and
push
sub
mov
test
dec
adc
lahf
rcrb
mov
mov
cmp
cmpsl
mov
and
sub
push
test
mov
pop
je
out
out
sub
mov
out
fldt
ds
stos
dec
scas
test
cmp
xchg
jae
mov
mov
int
flds
push
and
rcrl
sub
pop
cmc
fimull
inc
cs
sbb
adc
rcl
add
je
adc
add
in
aas
hlt
daa
cli
lock
andb
adc
cmp
pop
jb
std
mov
cmp
jbe
dec
out
jp
or
xor
or
mov
and
xor
sahf
pushf
adc
push
loope
jecxz
mov
add
adc
or
push
jg
push
mov
xor
aam
xor
ds
and
push
aas
filds
add
pop
push
mov
pop
std
insl
push
cmpsb
bound
jp
push
arpl
or
xor
shl
ljmp
ss
sbb
es
mov
adc
push
das
dec
movsl
mov
decl
scas
int3
js
mov
push
add
mov
mov
push
and
push
xor
xor
mov
mov
sub
mov
push
adc
and
std
mov
icebp
decl
xor
push
je
pop
jecxz
sub
std
rorl
aas
movsl
ret
xor
mov
push
xor
push
mov
mov
clc
movl
hlt
mov
movsl
lret
cs
je
push
enter
mov
inc
xchg
rcrl
test
push
push
sub
daa
jecxz
ljmp
js,pn
and
icebp
jmp
mov
stc
roll
xor
jp
mov
clc
stos
jge
lds
aad
cmp
jle
mov
into
inc
iret
add
in
pop
cmp
orl
out
or
jmp
aaa
mov
inc
out
xacquire
jg
mov
shr
xchg
dec
or
icebp
scas
and
and
mov
sub
scas
jecxz
fdivr
push
test
fildll
cmpsb
adc
andl
and
lret
add
lock
mov
test
lock
add
mov
mov
pop
bound
mov
ljmp
nop
dec
dec
mov
mov
sub
dec
cld
lcall
inc
mov
enter
mov
aam
insl
sbb
and
stos
orl
iret
sarb
xor
sub
fsubrs
mov
inc
out
js
movl
testb
mov
sti
lock
js
inc
or
cmpsb
xchg
movsl
pop
jo
pop
out
inc
dec
es
mov
and
test
or
sbb
mov
adc
pop
mov
sub
xor
push
inc
pop
xor
adc
add
cmpsb
dec
push
mov
lcall
add
push
test
mov
bound
mov
mov
lea
inc
aas
push
or
in
lds
mov
in
popl
mov
loop
dec
push
push
loope
adc
push
outsl
in
inc
fiaddl
push
sub
fisubrl
sbb
push
sub
cmpsl
lock
push
xchg
frstor
inc
jp
shrl
mov
jecxz
mov
scas
add
and
popf
or
stos
add
mov
pop
adc
add
mov
or
inc
xchg
sbb
fwait
lods
add
or
fwait
hlt
push
add
mov
cmp
mov
inc
sbb
add
fsub
inc
call
lea
iret
icebp
fwait
xchg
bound
sar
loope
dec
pop
ljmp
mov
jbe
cmpsb
push
xchg
aam
testl
adc
mov
les
lock
mov
test
inc
mov
sbb
enter
ret
inc
mov
push
mov
into
cmp
mov
mov
shrl
adc
call
push
cmpsl
scas
xor
and
test
ret
push
inc
sbb
lahf
ret
mov
cmpsb
cmp
out
js
push
cmp
sbb
scas
in
dec
or
sbb
and
cmp
fs
sbb
mov
lds
fs
pusha
cld
shlb
repz
add
xor
aam
push
into
jno
call
and
jecxz
push
roll
sub
pop
push
push
mov
ja
call
adc
and
jb
dec
subb
and
mov
into
shlb
mov
clc
push
fcmovbe
outsl
jle,pt
push
mov
int
rcl
sbb
shll
popf
sbb
dec
ja
jecxz
das
push
pushf
sbbb
shll
enter
test
out
pop
add
inc
sub
adc
jo
lds
mov
push
mov
xchg
clc
fidivrl
dec
mov
mov
jp
mov
sbb
subb
cmp
add
adc
mov
inc
stos
out
shll
shlb
xchg
std
dec
sub
ficompl
adc
jle
jg
rcl
lcall
stos
dec
cwtl
mulb
dec
incl
push
rolb
add
add
jo
push
fildll
rorb
call
sbb
or
cld
add
js
ds
popf
fcomip
adc
sub
in
adc
inc
decl
sti
jmp
xor
xchg
test
inc
fnsave
jmp
shll
insb
push
mov
xchg
orl
mov
jb
ds
pusha
add
sub
jp
sarl
mov
fmul
jmp
add
xor
popf
or
add
xor
out
es
dec
mov
and
nop
inc
out
cmpsl
fadd
xchg
cmpsl
aam
jmp
mov
cwtl
pop
inc
inc
push
sub
jl
add
dec
aas
mov
sbbb
scas
jecxz
insl
jge
inc
push
int
xchg
insb
xor
shll
mov
mov
fs
clc
fcomip
in
sub
out
subb
inc
cmp
into
fsts
sti
xor
inc
or
mov
jge
outsl
scas
pushl
lahf
incl
ss
mov
and
mov
in
test
pop
adc
sub
int3
shlb
sub
js
push
cs
and
bswap
cmp
push
sbb
aam
push
mov
mov
push
dec
popa
std
call
pop
push
dec
and
ss
sbb
ljmp
xchg
sub
daa
pop
sub
movsb
or
scas
gs
ja
rorb
rol
dec
outsb
sbb
in
mov
push
cs
cli
mov
sbb
adc
test
clc
icebp
fisttps
fmull
stos
xchg
add
or
in
ljmp
cld
psubusb
jne
mov
icebp
mov
and
xchg
push
cmp
pusha
jno
out
fimull
pop
and
mov
cld
incl
xorb
jne
push
inc
leave
mov
or
aas
add
cs
adc
sbb
dec
cwtl
outsb
lock
or
stc
adc
add
xchg
jbe
sub
je
mov
inc
loope
pop
sbb
dec
mov
sbb
xlat
xor
push
out
pop
mov
sub
and
pop
jecxz
popa
data16
repnz
adc
lods
dec
jecxz
sbb
sub
std
cmp
xlat
fiadds
xchg
movsl
push
push
add
pop
sar
or
push
cmp
xchg
cwtl
jo
dec
sbb
out
xchg
or
jne
cmp
and
out
lock
jne
das
cld
sbb
xor
push
add
in
mov
js
leave
test
jl,pt
sub
push
stos
cmp
cltd
mov
aad
addl
dec
pop
push
add
or
sbb
sahf
arpl
cmpsl
mov
lock
inc
inc
sub
std
xchg
shr
fsub
and
pop
subb
loop,pn
or
fidivs
and
out
sar
mov
xchg
jmp
nop
lods
cmp
push
mov
mov
pop
ds
push
mov
add
mov
sub
shrl
push
rorb
ficomps
jbe
mov
dec
push
jecxz
sar
push
pop
js
sahf
jle
aam
nop
adc
lods
mov
and
xor
add
xlat
mov
pop
xor
mov
cmpsb
int3
divps
call
pop
outsl
fistps
lods
sbb
dec
and
xchg
sbb
fcompl
inc
loop
ss
xor
lods
test
sbb
add
dec
mov
sub
scas
mov
pop
test
add
sub
adc
mov
in
outsl
inc
and
push
lods
aam
sub
mov
fisubl
xchg
subb
jle
mov
decl
push
add
aad
add
loopne
jl
mov
cli
int3
ficompl
cltd
insl
lret
add
and
dec
inc
or
add
and
je
out
xchg
clc
stos
ds
or
shlb
adc
sub
push
lahf
or
hlt
jae
rcrl
jno
and
call
rol
aaa
lock
xchg
into
cld
andl
mov
aad
add
faddp
jg
aas
jle
bnd
pop
popa
push
mov
mov
inc
ds
faddl
ret
cmpsl
dec
dec
xchg
mov
cli
mov
inc
or
bound
add
or
or
pop
dec
mov
cli
fbstp
mov
sbb
jg
sub
mov
mov
sub
sub
add
lock
lock
popa
and
loope
jl
cld
cld
mov
movsb
ret
ret
mov
pop
pop
mov
jp
out
int
add
icebp
call
pop
pop
push
mov
inc
sub
ror
mov
cmp
push
fwait
sbb
mov
and
decl
into
pusha
clc
pop
clc
pushf
cmp
adc
aaa
je
pop
push
push
jb
inc
xchg
cld
in
mov
lock
lods
lods
mov
jp
lds
add
in
ficomps
xor
or
test
push
jle
adc
push
push
push
pusha
or
xchg
jne
shll
pop
and
adc
mov
pop
inc
roll
xchg
jg
stos
out
mov
xchg
rolb
dec
xor
jg
ja
pop
roll
mov
push
ret
add
sub
filds
mov
adc
inc
add
add
hlt
les
mov
sahf
jle
sarl
sub
xchg
pop
fldl
mov
clc
xor
or
xchg
sahf
xor
enter
add
cmp
aam
ret
sbb
push
iret
adcb
stc
pop
lods
mov
dec
inc
xchg
sub
loop
pop
adc
push
jmp
jmp
sbb
inc
adc
fcompl
addb
mov
inc
or
fwait
xor
lock
pop
mov
cld
mov
jb
sbbb
ret
xchg
push
fmull
cli
leave
into
mov
inc
jbe
cmp
cwtl
pusha
sbb
xchg
push
mov
jmp
dec
push
loope
enter
sbb
mov
mov
and
mov
loopne
sbb
push
cs
ja
rcll
mov
movsb
add
ds
push
mov
cmp
adc
loop
sub
stos
cmp
test
dec
dec
sub
jmp
xchg
push
stos
dec
ljmp
jb
adc
push
loopne
sub
mov
jbe
lcall
lret
incl
mov
int
mov
mov
scas
jb
lret
pop
insl
repz
pop
add
sbb
lcall
lods
lds
sub
jne
and
fs
cltd
clc
pusha
xor
hlt
push
push
iret
data16
aad
ffree
stc
push
xchg
adc
sub
or
scas
adc
jne
insb
add
push
add
mov
test
imul
dec
jmp
mov
data16
decb
sbb
imulb
fimull
addr16
mov
lret
jae
ljmp
movlps
push
pop
lret
orb
mov
mov
add
inc
js
mov
pop
loopne
mov
inc
lods
sbb
xor
out
jne
jg
les
mov
lret
pushf
cli
rol
sub
inc
push
mov
cmp
lds
push
clc
sub
lods
data16
pushf
and
xlat
aas
pop
sub
cld
push
xchg
lods
jp
add
sub
jg
jge
jb
xchg
cmp
mov
xlat
sub
mov
xlat
loope
xor
test
divb
sbb
add
mov
mov
mov
test
cld
jg
test
outsb
sahf
cmpsl
mov
pop
hlt
fs
aaa
xor
shll
inc
and
inc
sahf
lahf
test
loope
add
cmp
clc
aad
shlb
mov
jb
enter
enter
loopne
lcall
movsb
xchg
adc
aam
pop
sub
outsl
push
movsb
pop
sub
jg
mov
in
iret
sub
mov
inc
push
cli
das
push
sbb
or
push
xchg
test
inc
shll
mov
xchg
and
inc
pop
sti
loope
aas
cmpsb
xor
add
adc
por
mov
jle
or
inc
popa
call
push
mov
inc
lcall
cmpsl
les
inc
ret
fisttps
fwait
xor
test
xchg
jae
ret
das
shrl
sbb
dec
dec
inc
jbe
pop
outsb
test
fcos
dec
adc
mov
add
sub
and
adc
stos
jo
out
adc
pop
sub
dec
imul
mov
push
test
jns
aaa
stos
xlat
sbb
xor
jg
dec
mov
repz
out
pop
ja
sbb
xchg
ljmp
push
outsl
out
loopne
aas
push
test
sbb
scas
ficoml
adc
push
adc
mov
push
mov
mov
pushf
mov
or
jle
xchg
cmpsl
sub
ljmp
nop
jge
mov
orb
mov
inc
pop
adc
mov
fisubrl
into
inc
fdivr
or
pushf
popf
cmp
sbb
mov
fs
add
in
popf
dec
je
dec
dec
xlat
ja
fucomp
ret
push
outsb
adc
cmp
or
or
imul
leave
or
fcmovnb
rcrl
scas
mov
jo
or
iret
test
gs
sub
fmul
or
in
lahf
icebp
dec
jl
scas
jmp
add
cld
inc
pop
lock
aas
and
add
cld
mov
es
sub
mov
pop
mov
test
enter
imul
test
mov
minps
push
mov
call
mov
cmpsb
mov
in
fbld
jb
cmp
insb
and
and
mov
outsl
hlt
lea
sbb
and
dec
mov
mov
cld
dec
push
test
add
jbe
sbb
pop
loopne
lret
std
pop
sahf
or
xor
stos
cmpsl
cmp
int
hlt
test
and
int
mov
sarb
add
cld
push
sbbl
sbb
jg
bound
imul
imul
adc
test
push
push
xor
jo
xchg
das
pushl
insb
cli
es
dec
mov
push
cwtl
punpckldq
icebp
add
jo
lods
mov
xor
fiaddl
js
xchg
sub
xor
mov
lods
and
addl
decl
cmp
xchg
aam
sub
adc
lock
jl
mov
jo
cmp
cwtl
repz
popa
sarl
in
sbb
cld
sbb
lret
mov
loop
out
jmp
cmc
hlt
or
xchg
mov
test
mov
pop
call
or
mov
dec
mov
imul
inc
insb
jl
jbe
mov
in
add
adc
mov
mov
and
adc
in
jl
inc
pop
outsl
mov
cmp
clc
xor
dec
and
movsl
xchg
dec
and
dec
adc
clc
mov
jmp
sbb
pop
cli
loop
and
call
repz
fildll
jp,pt
subb
mov
loop
dec
pop
xchg
mov
pushf
data16
mov
loopne
rcrl
mov
xchg
mov
or
fistpll
popf
clc
insb
or
enter
fdivrp
cwtl
or
add
ja
sahf
and
and
adc
adc
scas
clc
mov
into
cld
pop
inc
in
pop
xchg
push
jp
push
bound
add
sti
out
decl
lock
outsl
adcl
sub
or
add
orb
push
bound
mov
push
std
mov
sahf
rcll
xchg
rolb
mov
push
js
fcmovnb
outsl
adc
jp
aam
jp
cmp
fildll
into
xor
js
dec
pusha
xchg
cmp
int3
cld
repz
jl
icebp
pushl
out
mov
mov
das
adcl
cmp
fucomp
and
sbb
push
inc
pop
jo
xchg
mov
popa
ss
cld
jmp
jo
insb
testb
lcall
lea
jecxz
ret
out
inc
jae
push
int
mov
cld
stos
cmpsb
dec
jnp
sbb
cmpsb
xor
sbb
into
cmp
sahf
inc
adc
fs
or
sahf
clc
mov
push
sbb
dec
sub
andb
push
les
jbe
out
inc
int3
or
pop
bound
into
xchg
cmp
fsub
repnz
adcb
push
fildl
mov
mov
inc
or
je
sbb
jge,pn
jnp
mov
lahf
mov
int
or
js
imulb
jmp
cmp
aad
adc
xor
pop
and
mov
enter
mov
mov
lret
dec
mov
lock
jp
scas
push
mov
pusha
cmp
push
popa
and
push
xlat
sarb
jg
sbb
jp
fsubs
push
fidivrl
mov
orb
lret
and
ds
mov
mov
mov
add
inc
pushf
inc
and
ss
sti
pop
ljmp
icebp
out
mov
or
add
out
jno
adc
sbb
push
call
adc
xchg
mov
sbb
xchg
aad
adc
cmpsb
cwtl
xor
inc
xor
sbb
pop
mov
in
pop
adc
or
lahf
fnclex
lcall
pop
mov
xchg
out
xchg
mov
jns
cmpsl
sbb
out
xchg
rol
mov
xchg
mov
call
inc
mov
je
xchg
adc
ss
push
push
jg
pop
insl
mov
add
lcall
and
jne
inc
and
mov
pop
sbb
sarb
in
inc
add
rcr
mov
andb
mov
mov
nop
out
adc
mov
aam
movsl
jb
or
cmp
mov
pop
pop
add
pop
test
fildll
pusha
inc
popa
mov
rol
push
cmp
inc
aad
subb
gs
lods
lret
and
xor
xchg
icebp
fildll
call
dec
sbb
adc
cmp
or
filds
shl
dec
xchg
cmp
or
or
fimull
or
mov
es
or
je
pop
shrb
aaa
gs
lcall
sbb
pop
popa
mov
mov
jle
sub
inc
das
cmp
cmpsb
xchg
jbe
cli
enter
mov
les
in
xlat
mov
jg
ficomps
roll
adc
icebp
or
inc
and
movb
aaa
std
test
pop
mov
cwtl
sbb
lock
loope
js
and
gs
add
cmp
mov
outsl
xor
fadds
data16
pop
xchg
fldcw
xchg
or
cwtl
mov
stc
jne
loopne
mov
adc
push
push
lock
popf
sar
lock
lods
xchg
jno
cli
arpl
adc
scas
cltd
push
or
sbb
ret
hlt
je
sub
sbb
stos
adc
aam
and
xor
pop
mov
fimuls
cmp
ret
cmp
mov
or
push
jae
clc
jg
sbb
dec
sub
sub
jp
and
mov
add
or
pop
add
sbbb
mov
lock
sub
or
hlt
sti
hlt
mov
imul
dec
sub
shrl
mov
xchg
mov
loopne
fcmovb
sub
loope
sarb
mov
loopne
in
pop
or
scas
add
rcrb
push
xor
into
fnstenv
push
inc
cs
std
test
dec
jmp
mov
xor
scas
test
dec
jp
fcoml
or
cwtl
push
ret
push
fnstsw
mov
test
jle
mov
inc
adc
jb
pop
cmpsb
mov
mov
lret
sbb
je
add
jp
adc
enter
orb
shrl
std
jg
icebp
mov
jbe
stc
or
xchg
pop
out
cmp
mov
icebp
or
lcall
inc
xchg
jo
pop
add
mov
je
cld
ljmp
add
add
roll
mov
adc
inc
shr
inc
and
aad
adc
mov
mov
nop
adc
xchg
inc
cmp
inc
push
and
cmp
ljmp
aam
jnp
or
cld
out
or
cmc
ss
pop
stos
test
aaa
adc
bound
jecxz
ret
cld
sub
leave
xor
pushl
cmp
pop
xchg
sbb
data16
mov
add
mov
cmpsb
add
add
inc
mov
adc
xor
push
mov
loope
out
aaa
ljmp
or
add
sub
scas
mov
cmpl
adc
incb
pop
stos
mov
sbb
jne
adc
xchg
out
adc
add
push
daa
xchg
fwait
cld
outsb
loope
iret
ficomps
mov
pop
std
xchg
rorl
xor
inc
xor
push
ds
add
or
and
mov
lcall
mov
mov
mov
dec
sahf
cmp
mov
leave
incb
adc
nop
shll
pop
push
movsb
lds
ds
add
add
pop
sub
movsl
sub
mov
inc
popa
xor
pusha
enter
sub
rcll
stos
mov
mov
cwtl
pop
leave
test
add
pop
addr16
inc
decl
sub
pop
or
jle
fistps
mov
xchg
and
pop
ljmp
notb
jecxz
divl
pop
out
incb
and
ds
adc
dec
add
call
jb
stc
sub
jl
dec
jle
or
and
pop
cld
pop
test
orb
ljmp
jl
xchg
and
imul
lcall
push
xchg
sub
cli
fidivl
lsl
pop
cmpsl
sub
push
pop
xlat
test
clc
and
std
push
addb
mov
or
mov
xor
leave
imul
rolb
dec
mov
xor
mov
test
out
popf
xchg
imul
add
mov
jle
adc
jo
adc
mov
sbb
sub
stos
sub
inc
ret
adc
addr16
push
sub
add
cmp
mov
sbb
mov
mov
jge
pop
mov
lods
push
fimull
clc
xchg
pop
push
sub
jae
fmul
xor
rcrb
aas
jnp
and
cmp
sbb
and
sbb
mov
lahf
xor
inc
loopne
inc
fistpl
fnstcw
js
orb
or
out
pop
xor
mov
jecxz
adc
xorb
repz
mov
adc
sti
mov
scas
aam
mov
repz
fwait
daa
xor
outsl
xchg
jne
xchg
sub
pop
cld
call
bound
addr16
fwait
enter
dec
and
in
addr16
lcall
fcoml
test
or
or
sbb
arpl
lcall
mov
insb
orl
outsb
jl
jns
add
or
cwtl
inc
inc
fistpll
cli
inc
inc
add
mov
and
insw
add
pushl
jmp
adc
adc
out
out
mov
ss
push
idivl
pop
dec
sub
or
inc
ljmp
jmp
push
jb
jp
sbb
xchg
incb
add
xadd
imul
out
dec
and
or
cli
mov
pushf
sbb
adc
sub
mov
es
arpl
add
adc
inc
inc
cmpsl
inc
out
jnp
dec
or
pop
jmp
aad
cld
fwait
cmp
add
mov
stc
xor
lods
test
push
mov
fbld
loopne
ja
mov
xor
sub
cld
xchg
insb
test
or
lds
sbb
sub
mov
hlt
xlat
cwtl
cmp
cld
jecxz
mov
pop
jp
mov
xor
fdivp
xorl
mov
cld
rorb
xor
push
push
xorl
sbb
xchg
mov
loope
and
inc
shlb
or
lods
scas
dec
ret
mov
jmp
xlat
or
jbe
int
loopne
push
fwait
clc
or
jecxz
ret
ja
loopne
mov
sub
push
push
pushf
xchg
in
push
hlt
daa
mov
les
xchg
in
lahf
inc
mov
jmp
xchg
shll
xchg
loope
sub
adc
mov
fimuls
loopne
lret
inc
push
std
push
push
in
or
pop
jecxz
aas
push
js
push
lods
push
shlb
sbb
and
mov
mov
cmp
cli
in
lcall
mov
daa
pop
das
jns
aam
mov
movsb
pop
add
cmc
lods
repz
lock
in
fidivrs
sub
fiaddl
rcrb
test
ljmp
pop
test
daa
clc
add
xlat
jns
mov
adc
mov
loopne
lods
pop
es
nop
clc
dec
add
and
dec
loopne
mov
sbb
cltd
jl
cltd
ljmp
jo
push
push
mov
mov
add
xchg
out
ret
sub
adcb
pop
sbb
cmpsb
rcrb
mov
sbb
or
hlt
ljmp
mov
fucompp
into
mov
mov
shlb
add
mov
aam
mov
adc
push
or
lea
or
push
and
in
adcb
arpl
in
lahf
scas
test
dec
ss
loopne
pop
pop
insb
stc
test
mov
scas
sub
or
rcrb
test
jg
pushf
mov
add
das
dec
push
pop
out
rcrb
sub
or
and
adc
loope
loopne
mov
xor
aaa
inc
cmpsl
push
jb
jo
jbe
rorl
aad
fisubrs
adc
push
andb
pushf
and
mov
jbe
cmpsb
xchg
insb
and
hlt
xor
pop
in
or
dec
xor
cltd
sub
out
int
add
mov
call
les
mov
insb
aas
push
or
cmp
and
jne
adc
push
out
hlt
pop
jp
mov
xor
fsubl
cwtl
int
loopne
into
mov
jo
mov
jo
and
lret
out
mov
cld
out
mov
push
loop
mov
jno
xor
shlb
xchg
and
adc
test
push
in
push
or
je
outsl
inc
bound
aaa
adc
dec
leave
fidivs
sbb
aas
lcall
je
lods
or
mov
push
jecxz
inc
cld
mov
insb
add
mov
pop
add
push
icebp
mov
jg
cmpsb
add
cmpsl
mov
test
je
xor
push
pop
pushl
iret
inc
aaa
or
pop
popf
or
in
xor
fisubrs
jg
add
sbb
insb
iret
fistl
daa
iret
xor
call
hlt
pop
xor
jecxz
ljmp
jge
daa
mov
mov
test
push
pop
pop
fdivr
loope
loopne,pn
xor
cmpsl
xor
mov
insb
adc
jb
dec
cld
outsl
and
add
sbb
sar
aas
push
addb
in
icebp
inc
jnp
sbb
enter
sbb
es
daa
inc
test
test
outsb
xchg
add
cmp
loop
or
push
fnstsw
add
sti
mov
ret
call
mov
dec
xchg
pop
jg
mov
xchg
add
xor
adc
or
aam
ss
sub
pop
les
aam
fcmovnb
lahf
add
and
pop
int3
rol
rolb
sbb
mov
shll
add
mov
loopne
das
mov
andb
mov
fdivs
test
call
adc
cmp
sub
xor
js
sbb
das
cmp
push
cli
fdivrl
pop
pop
add
push
jg
cmp
stos
in
add
das
mov
cmp
cmp
adc
push
das
add
fcomps
and
mov
push
pop
add
cmpsb
add
mov
sti
mov
cmp
xchg
sbb
sub
pop
or
lret
dec
or
and
jnp,pn
shlb
fadds
call
and
jbe
xor
insb
jb
push
cmc
and
decl
mov
push
push
sarb
xchg
pop
add
cmpb
test
jo
cmp
mov
xchg
mov
es
mov
pop
jnp
xor
push
or
movsb
lods
dec
push
das
and
shlb
jo
clc
or
or
dec
movsl
cmp
mov
pop
jg
shlb
loop
sbb
sub
and
jbe
xchg
sub
out
dec
das
stos
into
push
dec
jl
or
and
pop
mov
or
jmp
daa
jns
shl
loope
ljmp
mov
pop
test
cld
outsl
js
cld
jb
mov
and
xchg
lock
push
sbb
inc
popa
inc
icebp
ja
jle
popf
out
dec
incl
sbb
ja
popa
fwait
xor
jle
add
mov
test
pop
xlat
rcll
add
js
dec
popa
sub
rclb
mov
add
pop
testl
cs
pop
das
pop
push
inc
loope
js
dec
inc
sbb
mov
scas
xor
imul
xchg
mov
adc
xlat
sub
arpl
dec
inc
rclb
mov
mull
inc
inc
stos
push
inc
sub
or
in
sub
dec
nop
mov
cmp
mov
sbb
or
cmp
inc
adc
or
pop
jne
ds
pop
testl
es
xor
lret
inc
cmp
dec
push
push
cmp
sub
pop
xor
jbe,pt
add
mov
mov
and
push
push
sub
push
fisubrl
out
orps
or
add
pop
mov
clc
out
clc
rclb
cmp
scas
int3
inc
loop
adc
incl
test
in
push
subb
xchg
shrb
setp
jl
pusha
cmp
mov
loope
mov
sub
aam
loop
and
mov
loopne
leave
push
addr16
lret
dec
and
movsl
push
mov
xchg
hlt
jno
dec
and
test
shl
int3
dec
or
cli
sbb
inc
sahf
inc
xchg
mov
push
jmp
ljmp
jo
mov
clc
cmp
pushf
sbb
jno
xchg
and
scas
clc
push
loopne
add
stc
in
push
add
or
or
aad
dec
push
cmc
aaa
cmp
fildl
push
jno
mov
add
push
subb
ficompl
inc
fisubs
daa
test
fdivs
hlt
mov
or
add
push
jns
insb
stos
push
fsubl
sarl
dec
lret
cmp
push
sbb
pop
or
cmp
inc
lret
clc
push
lahf
hlt
dec
ds
clc
sub
and
addr16
or
pusha
adc
and
jg
stos
pop
sbb
dec
cli
mov
dec
test
shlb
jg
jo
cltd
xor
cmpsl
pop
and
sub
cmpsb
push
ror
inc
lret
xchg
andl
cmp
inc
pop
jne
lfs
mov
mov
and
and
icebp
mov
mov
ljmp
xor
cmpsb
xor
or
pop
pushl
sbb
stos
push
jmp
jne
cmp
leave
xchg
es
nop
test
jg
lahf
mov
sub
movl
xor
pop
mov
jmp
ret
jb
xlat
cmpsb
mov
popa
push
clc
in
adc
movsl
add
fcmove
add
push
xchg
call
dec
cld
lea
insb
mov
jbe
lock
call
inc
xorb
sub
mov
jo
mov
pusha
add
cli
nop
in
rclb
cmc
in
call
loop
xor
dec
ljmp
xchg
nop
out
leave
adc
inc
and
sub
rcr
mov
pop
fs
cld
ficoml
insb
icebp
pop
daa
mov
daa
and
fbld
sub
stc
mov
and
dec
mov
jmp
push
add
push
sub
leave
xchg
jl
mov
mov
inc
or
adc
inc
loop
jae
xor
dec
dec
adc
mov
in
sub
cmc
pop
hlt
ljmp
pop
testb
pop
mov
icebp
fdivrs
cmc
lods
lods
cli
sbb
jecxz
push
movsb
push
push
rorl
std
add
bound
test
push
loop
lock
in
testb
lcall
cld
ret
or
dec
out
out
fiadds
sbb
push
ja
cmp
cmp
rolb
mov
push
sbb
xchg
cmp
int3
ja
stos
xchg
add
pop
ret
cmp
shlb
xlat
out
test
sbb
push
stos
pop
std
incl
mov
dec
mov
gs
mov
sub
outsl
and
mov
push
lock
or
int3
addr16
add
sbb
ljmp
shrb
jl
dec
adc
fisubrs
shl
add
sub
sub
imul
sbb
enter
jg
nop
xchg
jb
fdivrs
mov
int
mov
and
xor
jle
adc
pop
cmpsl
dec
dec
js
jne
lds
sub
xchg
inc
test
imul
pop
lock
sub
sbb
inc
or
and
daa
or
push
add
push
and
call
cltd
mov
ljmp
jae
enter
gs
ret
jl
ret
out
pushf
push
stos
sbbb
orb
adc
les
inc
and
mov
test
das
xor
sub
inc
push
ss
inc
pop
and
dec
inc
punpckhbw
xlat
mov
push
fidivs
adc
insb
mov
push
mov
cmp
mov
es
decl
xchg
mov
xchg
and
xchg
mov
movsl
loopne
or
loopne
test
cmp
mov
inc
jne
clc
cmpsb
subl
push
xor
iret
stos
ljmp
lock
dec
xor
xchg
js
xchg
into
lret
shlb
iret
jb
and
xchg
mulb
test
xchg
rclb
dec
mov
sbb
lock
add
repnz
into
inc
movb
xchg
inc
hlt
lret
xchg
shlb
test
mov
inc
sub
inc
and
dec
pop
loopne
test
push
inc
leave
je
icebp
sub
sbb
sbb
adc
movsl
lods
jl
pop
movsl
adcb
adc
push
pop
les
jl
mov
sbb
fwait
cmpsb
daa
daa
push
mov
mov
inc
aas
ja
lret
mov
xor
jbe
xchg
adc
sub
inc
loopne
pushl
les
rorl
dec
sub
or
add
ret
push
jbe
xchg
or
push
ret
push
and
outsl
or
sub
sti
cmp
shrl
inc
jp
inc
mov
jbe
jecxz
leave
sub
addl
jg
inc
fisttps
sbb
jle
test
shl
push
in
stos
lock
decb
incb
jns
xchg
cmp
inc
mov
sbb
mov
jno
xor
inc
subl
xchg
icebp
test
or
or
lods
fdivr
mov
add
enter
mov
cld
ja
pop
adc
sub
lcall
in
jmp
push
xchg
inc
pop
push
pop
imul
incl
ret
cmp
in
mov
sar
pushl
test
xor
dec
push
push
jne
rolb
add
add
scas
clc
mov
filds
daa
in
push
rorb
pop
mov
adc
fcoms
cmpsb
pop
insb
push
sbb
test
mov
aad
dec
dec
test
xor
or
jp
test
pop
pushl
ret
std
mov
inc
fs
mov
in
clc
nop
inc
xor
or
dec
mov
loopne
scas
mov
mov
push
faddl
bound
adc
sbb
and
mov
jmp
fsubrl
mov
adc
push
mov
mov
andl
lahf
cmp
sahf
push
jge
hlt
into
cmpsb
stos
xor
test
sarb
movsb
cmpsl
popa
jno
or
cmp
or
aad
std
je
arpl
pop
add
test
int
call
ret
pop
mov
dec
inc
cmp
sbb
and
adc
lcall
stos
and
ss
ds
xchg
gs
mov
mov
add
dec
sub
aaa
pop
test
jo
and
scas
sar
mov
mov
inc
adc
jge
xchg
and
data16
fnstcw
jae
and
push
clc
sub
cmp
je
adc
pop
aad
xor
dec
movsb
test
cmp
push
sbb
pusha
xchg
jae
aas
out
or
mov
ljmp
mov
and
xor
inc
xlat
mov
insb
mov
and
lds
mov
addr16
shr
jl
push
popa
imul
js
push
stos
call
loop
ja
adc
jb
insb
jno
stos
pushf
out
jg
add
jl
dec
leave
push
or
jle
fucom
inc
cld
ljmp
rcl
in
xchg
cmc
lcall
jp
mov
xchg
in
dec
cld
or
sti
push
out
mov
pushl
mov
jbe
inc
mov
adc
and
scas
aaa
mov
loopne
add
lret
and
lcall
jo
les
scas
mov
scas
cmpsb
push
mov
sub
or
ss
outsb
adc
ljmp
pop
sub
loope
mov
sbb
dec
and
inc
pop
adc
jo
mov
xor
pushf
fsub
pusha
out
nop
and
jecxz
inc
lock
sbb
cmp
jl
dec
ljmp
sub
stos
cltd
jecxz
mov
iret
push
loope
xor
testb
ss
cli
out
movsl
dec
jecxz
fadd
xor
or
fstpl
mov
sub
dec
sbb
js
or
in
push
lock
jmp
xchg
mov
int3
roll
and
js
daa
pop
and
adc
inc
inc
int3
jno
clc
mov
xlat
sub
inc
jo
pusha
test
call
mov
aas
dec
lahf
jl
dec
cmpsl
dec
dec
ljmp
xor
jecxz
sarl
jg
outsb
jo
shrb
out
cmp
fdiv
je
sar
lea
xor
sub
ficoms
fwait
lea
out
sbb
cltd
push
and
sub
aam
add
push
inc
cld
dec
jg
or
movsl
push
std
dec
cld
add
xchg
mov
scas
adc
adc
mov
pusha
mov
scas
rcr
sar
int
flds
xchg
push
jne
inc
rorl
pop
out
cmp
ja
clc
icebp
cmpsl
mov
mov
fbstp
fldenv
add
mov
add
scas
mov
test
jns
clc
fstpl
sub
inc
xor
das
push
movsb
pop
xchg
imul
clc
xchg
mov
sub
xor
jecxz
mov
dec
popf
dec
std
jl
js
loopne
mov
adc
icebp
xchg
add
fwait
clc
add
jl
adc
lock
js
dec
add
pushf
xor
push
sub
or
jg
stc
mov
les
mov
loop
iret
mov
add
or
ficompl
dec
pushf
sbb
cmp
jl
xchg
cwtl
fs
rorb
mov
cs
adc
lock
js
pop
push
xor
cs
icebp
xor
nop
add
pop
jge
inc
sub
call
xor
incl
dec
inc
inc
jl
fsubrs
cmp
data16
movsb
adc
sub
cmp
add
and
xlat
fdivrs
inc
fwait
or
lret
adc
test
jno
pop
ljmp
push
clc
add
inc
jge
cmpsl
lock
in
or
inc
sub
dec
mov
push
je
sub
ret
jnp
lret
jecxz
inc
xorl
shlb
loop
and
add
aad
sub
jp
aam
dec
imul
adc
rcr
push
jp
arpl
insb
inc
pop
lret
adc
add
cmc
dec
mov
sbb
sbb
jle
hlt
push
jle
fisubrl
mov
dec
je
shl
xchg
insb
ja
mov
add
sub
dec
push
cli
mov
pop
mov
mov
pop
xor
fdivr
cld
mov
repnz
test
cmpsl
in
lds
or
inc
arpl
push
sbb
aaa
add
xlat
pop
seto
xchg
lcall
xor
add
xor
sub
daa
xor
mov
ret
and
and
inc
rcll
inc
and
ret
fdiv
fbld
pusha
inc
pop
ss
mov
roll
out
incb
adc
push
xchg
sbb
push
lcall
frndint
xor
cld
cli
test
movsb
jo
xlat
inc
aam
sbb
imul
call
pop
rorl
pop
lods
repnz
sahf
adc
add
mov
sbb
push
jb
das
fisubs
dec
dec
andl
movsl
mov
fstl
movsb
cmp
mov
xchg
sbb
and
movsb
sarb
dec
ret
test
incb
mov
cmp
lods
popf
je
fildll
add
inc
adc
scas
add
mov
xor
movsl
sbb
outsl
mov
push
andb
fcoms
out
in
lahf
outsb
fbld
aam
lock
in
stos
aas
clc
pop
enter
insb
aas
adc
push
jae
hlt
pop
ficoml
lcall
adc
pop
dec
mov
popf
dec
test
cmp
decl
hlt
xchg
or
mov
add
sbb
mov
mov
icebp
and
loope
push
outsl
in
fcomps
clc
mov
cmp
fmull
xchg
sar
daa
mov
push
sub
js
or
add
in
mov
ds
ficompl
mov
xchg
outsb
stc
mov
adc
es
pop
cmpsb
cmp
out
inc
sub
sub
add
fs
mov
out
and
fwait
aas
mov
jg
mov
lock
hlt
das
clc
pop
test
cmp
lds
pusha
adc
ja
in
xchg
mov
sbb
push
pop
into
inc
sub
dec
incl
sahf
add
fldt
add
cld
push
enter
fsubp
decl
pop
popa
js
inc
loopne
ss
push
or
inc
mov
je
mov
inc
add
clc
in
cmp
push
xor
fidivl
or
mov
dec
xchg
sub
inc
pop
sub
mov
scas
mov
cmp
mov
les
sbb
cs
inc
cld
loope
incl
mov
sub
test
or
scas
adc
jbe
popa
mov
mov
cmpsl
push
fidivs
dec
add
mov
loope
fs
jle
adc
xlat
inc
testb
sbb
ljmp
sub
dec
xlat
xor
push
jmp
aam
pop
test
shrb
jle
pusha
xor
sub
inc
cli
xchg
es
dec
lods
cld
adc
test
es
jne
adc
and
dec
bound
js
icebp
lds
mov
loope
mov
pop
test
pop
mov
aad
adc
call
push
and
mov
inc
mov
pop
xchg
adc
lds
sar
icebp
push
lahf
imull
fimuls
fucom
cld
pop
sub
out
adc
and
sbb
jo
test
inc
fadds
push
int
movsb
jb
push
mov
dec
repnz
jno
pop
inc
sti
and
scas
xchg
mov
cwtl
jb
jge
inc
or
mov
fcoml
and
mov
mov
jge
sub
loopne
mov
ljmp
aad
push
addl
lods
pusha
test
aas
setnp
mov
push
push
push
xchg
mov
ret
jmp
mov
jne
add
jp
jl
idivb
mov
loope
test
jmp
notb
repz
test
outsb
lock
stos
inc
clc
loopne
or
popf
lret
dec
sub
pop
bound
jb
mov
cmp
rolb
mov
xor
lock
cmpb
xchg
push
sahf
popa
cmc
push
mov
inc
pop
test
int3
addr16
or
or
stos
punpckldq
jnp
xor
mov
ds
out
mov
negb
push
mov
cwtl
hlt
jo
ljmp
add
mov
lahf
insl
xor
pushf
lea
adc
shlb
adc
mov
sbb
dec
or
icebp
aad
push
hlt
and
pop
mov
inc
and
xor
clc
aaa
lret
inc
insl
mov
and
daa
mov
xchg
ss
xor
push
das
lret
push
xchg
adc
sbb
cmp
dec
cwtl
sarb
xor
jmp
mov
adc
cli
pop
sahf
cmp
push
pusha
lods
daa
push
xlat
add
aam
pusha
inc
fidivrs
add
and
dec
dec
mov
aad
loope
je
pop
cwtl
adc
leave
push
out
pop
pop
sub
cld
lahf
and
in
iret
out
jg
out
in
mov
dec
inc
and
cwtl
addr16
pusha
imul
leave
cltd
sahf
jle
dec
adc
insb
cld
aaa
adc
pop
jge
sbb
push
and
mov
push
mov
fimuls
scas
daa
adc
mov
test
std
lock
in
xchg
jle
sarb
scas
mov
adc
push
or
fiadds
clc
pop
cmc
call
add
pop
add
ret
xlat
sbb
push
push
pop
daa
idivb
ljmp
cmp
xor
call
or
mov
adc
push
dec
add
or
subl
std
loopne
stc
add
or
mov
xor
pusha
aad
int
push
fwait
push
dec
mov
clc
or
xor
outsl
pushl
and
pop
int
jbe
cld
sub
jbe
sbb
ss
pop
sbb
dec
sbb
xor
fnstcw
lods
ljmp
call
movsb
aaa
mov
mov
rclb
dec
lret
and
push
clc
jmp
sub
nop
and
enter
mov
xchg
or
xchg
out
outsb
xchg
inc
pop
mov
mov
mov
bound
adc
test
test
adc
cmc
subl
test
in
sub
xchg
mov
xchg
and
jnp
mov
loope
addr16
call
xchg
testb
dec
jns
jbe
outsl
rcrl
xchg
adc
mov
add
or
test
jecxz
or
mov
sbb
and
jp
xor
mov
lcall
cmc
dec
push
and
lcall
jecxz
mov
and
faddp
js
pop
mov
adc
dec
push
clts
cld
scas
mov
sub
dec
aaa
sub
inc
add
fcomps
inc
test
mov
push
daa
mov
int
aad
mov
jo
lock
cwtl
inc
aaa
jge
xor
push
sbbl
into
add
out
cli
push
add
sub
inc
adc
loope
loopw
clc
sbb
sbb
pop
mov
add
add
mov
mov
jg
jle
faddl
pushf
lret
out
dec
int3
adc
cmp
push
loopne
mov
aas
adc
test
or
lock
sub
imul
cltd
lea
add
mov
shrl
sbb
jg
push
lods
sbb
inc
and
shlb
mov
bound
and
or
hlt
jle
push
fneni(8087
jmp
das
inc
lock
mov
mov
mov
add
push
mov
add
and
or
push
pushl
nop
sub
jmp
test
lcall
dec
cmp
shl
dec
loopne
push
xlat
leave
mov
loopne
push
sub
stos
push
and
cmp
popa
cmp
in
add
and
jnp
cmp
mov
daa
popf
inc
adc
scas
pop
dec
dec
push
pop
jo
bound
and
fstpl
or
or
nop
push
clc
es
add
call
mov
lock
add
xor
mov
xor
ficoms
pusha
sub
inc
jae
jg
push
stc
push
jo
jl
cld
inc
dec
mov
and
jecxz
cmpl
push
add
fsubp
jns
and
cmc
mov
xor
cmpsl
scas
ljmp
add
inc
sti
in
sbb
mov
adc
cmp
inc
movsb
push
push
xchg
adc
stos
nop
ljmp
lret
add
pushf
jo
mov
and
jo
mov
sub
cmp
inc
int3
and
dec
ja
in
scas
rcrb
or
dec
xchg
ffreep
pop
cmp
out
dec
or
ret
or
fwait
xchg
iret
test
adc
pop
pop
mov
mov
xchg
jb
in
nop
fwait
es
push
xor
pop
rorb
and
inc
jle
sub
adc
pop
mov
sub
mov
aad
fninit
jmp
movb
push
adc
sbb
dec
jb
nop
andb
dec
std
dec
or
push
sbb
xor
and
movsb
cmp
in
pop
test
mov
jl
pop
pop
ret
cmp
clc
arpl
fcmovu
mov
roll
stos
or
add
mov
xchg
hlt
sbb
loope
xor
add
movnti
jae
sbb
test
add
sub
pop
sub
jnp
sub
cmp
in
imul
push
out
jnp
adc
lcall
iret
add
sbb
and
pop
cmpsl
ret
ljmp
arpl
outsb
lea
and
insb
repnz
pop
adc
lahf
test
mov
addr16
inc
pop
jbe
add
jg
push
test
aam
sub
add
outsl
lcall
push
add
cwtl
pop
les
call
jae
inc
pusha
orb
mov
adc
add
insl
pusha
add
pop
xchg
out
inc
pop
stos
dec
clc
lret
clc
out
push
call
jp
cs
mov
pop
dec
xchg
adc
je
ljmp
gs
nop
jbe
cltd
mov
cmp
mov
sbb
in
je
add
or
mov
cld
aaa
mov
mov
mov
push
sub
ret
xor
movsb
stos
dec
inc
ds
mov
int
jp
jmp
shll
push
rolb
push
fidivs
jmp
rolb
inc
cmp
and
sti
fstl
adc
inc
lock
movl
sbb
xor
pop
push
dec
add
ljmp
add
add
mov
andb
pop
mov
arpl
arpl
das
scas
push
sti
icebp
and
mov
mov
js
jns
test
adc
in
mov
pop
mov
loopne
sbb
mov
shll
icebp
pop
pushf
cmp
push
cmp
add
mov
mov
dec
push
push
mov
outsb
repz
js
adc
jg
push
jbe
sarl
test
test
enter
icebp
xchg
orb
sub
imul
ljmp
roll
inc
mov
adc
pop
xchg
cmpsl
idivl
adc
push
push
xchg
jnp
mov
test
mov
in
std
fcomip
cmp
pop
xor
sbbb
push
adc
jnp
lods
sti
jecxz
add
push
shlb
jge
bound
shlb
pop
js
xchg
les
in
push
js
loope
xor
inc
call
xor
cmp
les
xor
mov
pop
jb
mov
lahf
mov
call
push
xor
popa
les
add
insl
sub
xchg
mov
mov
and
incl
push
adc
sub
iret
stc
mov
mov
outsl
cwtl
jp
sbb
and
push
adc
cmpsb
test
add
cmp
push
jb
decl
clc
xor
push
add
fldenv
and
and
cmpl
mov
in
xor
int3
sbb
push
rcll
icebp
mov
or
nop
in
push
jbe
cmp
dec
shrb
mov
pushf
insb
mov
jmp
jmp
sub
jg
pop
popa
or
or
js
popf
lock
xorl
ret
push
dec
sub
shlb
faddl
add
xchg
cmpsl
jp
pop
pop
incl
call
xor
pop
es
cld
rcrl
pop
push
je
push
cmc
xor
sbb
notb
pop
unpcklps
fistpl
jp
outsl
cld
mov
cmp
add
push
js
in
mov
xchg
clc
rorb
sbb
inc
adc
dec
pop
or
mov
add
push
lock
cmp
jle
sbb
cmpsl
jl
sbb
pop
insl
mov
or
inc
xchg
push
cld
cmp
lcall
lcall
mov
cwtl
pop
shl
push
fsubrs
psllw
pop
lcall
stos
jp
das
xor
movsl
jo
hlt
mov
xchg
jb
loop
adc
jp
inc
aam
ljmp
fwait
pop
pop
push
or
dec
subb
in
fidivl
and
popf
dec
sub
mov
mov
sbb
inc
fnstenv
les
imul
aas
push
adc
lea
pop
ss
aad
cltd
mov
or
jns
cwtl
mov
aam
nop
inc
adc
sbb
adc
ficoms
jo
jg
mov
lods
cmp
jge
xchg
xchg
sub
xor
mov
sub
mov
push
clc
xor
mov
adc
mov
xchg
mov
xchg
pop
and
sbb
cmpsb
xchg
xor
dec
xchg
ss
ljmp
adc
pop
stc
mov
int
cmp
daa
push
dec
inc
fldt
fiaddl
test
cwtl
jns
pop
cmp
lcall
inc
jp
add
test
loop
outsb
clc
in
adc
enter
nop
push
cmp
aas
sub
test
push
or
es
xchg
xor
push
push
sbb
insl
icebp
dec
jmp
js
sub
or
sub
inc
sub
lcall
sub
cltd
inc
jmp
rorb
pop
into
lock
push
lds
xor
les
outsl
adc
popf
mov
js
xorl
push
testb
and
add
scas
mov
fsubrp
aaa
cmp
insb
add
inc
in
push
mov
incl
cmp
roll
add
cmp
mov
lcall
adc
xchg
int
pop
iret
jae
out
push
and
jae
inc
xchg
lahf
jle
pop
adc
sub
push
iret
sub
cwtl
mov
cwtl
sub
xlat
jns
lcall
mov
sar
or
sti
aam
pop
lahf
pusha
stos
sti
sub
mov
lds
mov
and
imul
scas
inc
xor
jp
adc
xor
dec
sub
inc
je
push
loope
xchg
bound
inc
sbb
push
mov
in
pop
cs
jmp
inc
lcall
dec
shll
aas
clc
aam
cmpsb
push
sub
add
sbb
dec
and
sti
decl
mov
add
aaa
jo
adc
shr
out
aas
out
push
aam
rol
mov
cltd
jnp
test
add
lock
and
jb
sub
jp
adc
lahf
add
in
test
xchg
cs
inc
pop
jp
sub
and
lret
jmp
jecxz
shlb
mov
mov
inc
std
mov
pop
mov
mov
ds
out
out
stos
jo
or
lds
and
mov
out
adc
mov
jmp
adc
mov
jecxz
std
leave
adcb
aam
fcoml
mov
or
std
xor
inc
cli
jns
inc
push
mov
cmp
xchg
aam
aam
andb
or
cld
mov
xor
int3
lods
pop
stos
or
rcrb
fbld
push
bound
pop
jmp
bound
xchg
dec
movsl
nop
push
or
inc
and
jmp
fistl
lock
sub
add
xlat
jge
adc
loope
sbb
out
ss
cltd
adc
test
mov
aam
push
adc
inc
test
ljmp
xor
rcrb
mov
movsl
sbb
incl
or
adc
sbb
xchg
jge
lock
mov
mov
push
cmp
xor
jnp
push
pop
sub
lcall
sub
adc
pop
xchg
adc
pop
inc
dec
inc
or
punpcklwd
ds
dec
push
mov
popf
test
in
and
clc
in
cmc
test
es
or
pop
and
push
mov
pop
repnz
and
mov
mov
cld
mov
rcrl
dec
std
rclb
outsb
jne
lret
dec
jg
mov
cmp
stc
xor
mov
in
iret
cmp
push
mov
mov
mov
adc
cwtl
iret
cmp
xchg
daa
in
push
add
lock
mov
add
push
sub
inc
ja
in
fcoml
mov
cmp
push
nop
pop
mov
mov
mov
fildl
cli
pop
shl
and
adc
push
add
inc
imul
sbb
add
pop
xchg
jp
mov
adc
lcall
sbbl
sbb
mov
adc
add
je
rol
loopne
pop
mov
add
rolb
inc
pop
xor
add
adc
mov
or
add
fsubl
mov
or
adc
cmpb
sub
cld
add
sub
adc
xor
scas
adc
push
cmp
pop
insb
and
cmc
lahf
out
mov
mull
inc
cli
int3
inc
push
mov
mov
divb
xchg
repnz
int3
inc
mov
or
pop
aas
jp
and
rorl
scas
mov
mov
sti
lods
push
pushf
fs
jp
mov
inc
add
pop
and
push
ror
mov
jle
lods
add
and
mov
call
pop
mov
or
xacquire
cmp
xchg
pop
dec
fisubrl
add
xchg
gs
mov
fisubrl
subl
adc
es
cmp
lock
fsubrs
clc
incl
cmp
cld
mov
orl
popa
sbb
cmp
add
mov
push
push
inc
push
or
push
js
aad
cmp
push
inc
aam
outsb
adc
dec
ret
push
aaa
xlat
insb
adc
jecxz
clc
add
dec
jnp
adc
cmp
and
sub
and
xchg
int3
cs
jle
add
push
ljmp
pushf
add
test
mov
dec
mov
ficomps
int
nop
sbb
or
lock
jo
fdivs
or
mov
jg
bound
push
xchg
or
xor
add
mov
or
sub
or
mov
mov
mov
jecxz
mov
xchg
mov
xchg
call
movsb
stos
mov
scas
mov
add
icebp
cmp
add
jb
add
fisttpl
lock
mov
and
push
icebp
jg
nop
mov
jb
cs
mov
subl
jne
lock
mov
or
push
adc
cmp
xchg
dec
out
sbb
test
lcall
in
jnp
enter
aam
mov
adc
mov
or
adc
pushl
popf
lahf
les
adc
add
int
outsl
cli
jmp
scas
inc
test
xchg
pop
push
adc
jmp
out
lock
mov
outsl
pop
sbb
pop
push
cmp
ds
fcoms
xor
aas
jle
pusha
popf
mov
ds
push
in
aam
push
sub
call
gs
add
insb
fs
iret
jp
push
lock
leave
dec
sbb
inc
stc
pop
sub
add
add
jl
into
or
iret
sub
jmp
adc
les
icebp
xchg
mov
lret
ljmp
mov
aad
movb
ljmp
mov
mov
ds
add
sub
push
dec
aas
push
loop
stc
xchg
xorl
xchg
fcomps
mov
xchg
inc
jg
fwait
mov
inc
dec
fists
out
jecxz
stos
push
insb
fisttpll
js
call
cmpsb
inc
inc
push
aam
and
das
lock
bound
add
xchg
call
ret
test
cmp
or
pop
mov
les
push
mov
repz
xchg
push
xchg
and
mov
cmpl
dec
push
cwtl
and
adc
jno
or
insb
popa
aas
sub
dec
shll
xor
or
ljmp
add
insb
enter
add
pop
push
dec
loopne
enter
icebp
adc
mov
incl
enter
and
mov
pop
filds
mov
jge
sbbl
dec
sbb
sar
pop
loopne
stos
or
and
inc
jl
or
xchg
cmpsl
or
ret
add
adc
lret
jecxz
pushf
mov
leave
lock
into
cltd
lahf
add
mov
lret
rdtsc
mul
cltd
add
aad
and
push
movsb
insb
je
adc
mov
repz
inc
nop
push
push
pop
clc
xlat
ret
inc
testb
cmp
mov
data16
stos
jb
or
xchg
lds
xor
je
sbb
cmp
and
imul
or
js
clc
cmp
adc
lock
lds
add
add
xchg
roll
lahf
loop
jl
add
inc
sub
pop
jb
mov
inc
or
inc
xchg
mov
sbb
dec
loope
stos
lahf
test
mov
out
test
push
pusha
outsb
mov
jbe
mov
fwait
fwait
loop
test
xchg
out
les
mov
xor
faddl
lret
shl
cmp
jg
mov
cmp
or
xchg
dec
call
add
outsl
subb
in
dec
cld
outsb
es
es
rorb
pop
enter
mov
insb
push
inc
in
fnstsw
and
scas
data16
mov
hlt
fbstp
mov
dec
adc
adcl
mov
adc
mov
outsb
lods
pop
add
ret
jmp
call
cmp
add
lret
sti
ja
add
add
add
push
mov
jecxz
cmc
inc
xchg
stos
scas
push
call
or
incl
xor
and
imul
push
mov
xchg
pop
adc
sti
ja
fs
adc
call
dec
call
pop
out
ljmp
sbb
mov
mov
data16
mov
push
add
jb
ret
jns
push
add
mov
das
js
adc
repnz
push
add
push
sbb
and
dec
sti
nop
stos
xor
je
sbb
std
and
pusha
rcrb
je
outsl
or
jge
out
test
or
dec
outsb
xchg
push
or
mov
aad
pop
sbb
push
sahf
out
sbb
orb
sub
xor
adc
imul
fistpl
mov
mov
mov
add
gs
add
mov
push
adc
xorb
xchg
inc
cmp
xchg
jbe
push
iret
and
ret
or
push
sub
insl
mov
lea
add
aas
icebp
sbb
pop
iret
push
test
dec
ficoml
push
je
icebp
xchg
addb
pop
cmp
aad
sbb
sbb
adc
sbb
cmp
sub
fadd
push
push
sbb
movsb
jg
leave
repnz
into
into
xor
sahf
mov
xchg
les
ljmp
ljmp
xchg
adc
js
pop
jle
xchg
mov
mov
mov
and
add
ds
test
jle
sub
lds
sub
push
cmp
outsb
sbb
dec
or
and
les
dec
inc
movsb
loop
fisttpl
push
ja
push
inc
decb
sub
mov
inc
fdiv
xchg
push
mov
and
sbb
mov
fwait
add
movsb
inc
lock
cld
push
sbb
loopne
ret
fsubs
ficomps
mov
popa
add
cmp
lds
xor
nop
jno
movsb
push
ret
dec
bound
js
in
push
outsb
mov
push
or
or
dec
lock
pop
or
fsubrp
sub
mov
mov
ds
and
sarb
icebp
sub
add
fimull
pop
mov
jge
cmpsb
mov
xor
lret
loope
xor
enter
shll
incl
icebp
loop
adc
and
movsl
adc
mov
mov
mov
and
insb
int
ret
jbe
add
and
add
out
add
xchg
data16
loop
mov
push
push
outsl
cmp
ljmp
fstl
cmp
enter
mov
stos
fcomps
inc
sbb
mov
jg
xchg
or
add
and
dec
pop
sbb
cmp
loop
ficoms
cld
pop
add
push
enter
sbb
aam
pushf
arpl
sbb
mov
daa
enter
cmc
mov
mov
aas
inc
mov
out
ljmp
negb
push
pop
jo
out
mov
push
fs
and
ret
sbb
fbld
mov
add
icebp
push
mov
fadds
mov
test
mov
cs
call
arpl
scas
aad
add
inc
xchg
movsb
push
mov
div
xchg
in
test
inc
or
bnd
out
mov
jge
out
mov
mov
and
loop
ret
mov
push
enter
clc
out
xchg
jl
add
fs
ljmp
or
aam
jl
sar
or
in
in
cmovb
push
add
clc
adc
adc
mov
add
jl
out
dec
xorb
je
and
jns
leave
mov
adc
sub
out
lods
jle
jne
inc
out
cmpsl
cli
inc
lods
in
stc
ljmp
divb
insl
faddp
sbb
loope
xor
cmpw
jb
pop
sbb
mov
test
push
lcall
pop
push
mov
test
xchg
sub
jmp
adc
pop
je
lret
sub
hlt
inc
and
mov
push
mov
insl
incl
push
mov
es
loope
add
shll
pop
bswap
cmc
adcb
loop
xor
mov
mov
test
mov
add
and
ja
pop
mov
sahf
jno
in
mov
fisttpll
out
push
and
push
xchg
mov
xor
xor
lea
add
pop
mov
sbb
jg
inc
clc
inc
in
das
cs
sub
cmpb
add
mov
call
mov
push
xorb
sti
pop
in
or
testl
jg
loop
lods
dec
fcomip
push
fwait
stc
shrb
test
push
pop
js
add
mov
sub
add
cs
push
cmp
add
cmpsb
or
jmp
or
jecxz
pushl
sub
pop
or
bswap
cwtl
jo
mov
bound
int3
fdivr
incl
add
inc
mov
repnz
cmpsl
data16
and
inc
mov
push
mov
mov
in
loop
test
dec
cltd
xor
jo
cmp
or
xor
add
adc
cmp
xor
mov
insb
mov
popf
push
ds
adc
imul
mov
out
sub
jb
scas
dec
imul
cmp
fildl
das
je
push
inc
bound
shrb
pop
insl
roll
cmp
movsb
xchg
inc
loope
mov
popa
dec
out
loope
inc
repz
ret
xor
mov
dec
cli
jg
popf
test
fldt
push
xchg
push
scas
inc
in
icebp
adc
sub
mov
and
jb
and
jle
jne
ljmp
cwtl
insb
inc
stos
mov
dec
ret
inc
or
mov
hlt
mov
add
xor
dec
jnp
xchg
loop
test
or
push
out
ds
push
cld
or
mov
add
pushf
adc
cld
jmp
lahf
imulb
push
fs
or
hlt
adc
xchg
and
sub
mov
and
movsb
add
cmp
jo
sub
es
mov
ljmp
and
dec
aaa
leave
shll
mov
clc
call
add
mov
fwait
cltd
in
imul
xlat
cs
push
gs
mov
mov
adc
inc
lcall
jno
mov
add
adc
lods
test
mov
cmp
fidivrs
out
rol
mov
das
test
jle
sub
mov
out
jp
shlb
in
xchg
je
add
dec
fstps
cli
aad
mov
jle
orl
xor
pop
je
or
inc
xchg
clc
mov
cld
dec
sbb
loopne
rcll
loop
shrb
cmpsb
lcall
fildll
mov
adc
add
fs
push
jge
xor
inc
mov
cwtl
add
adc
stos
lods
xchg
pop
int3
ds
pop
push
mov
es
inc
dec
test
push
scas
jb
inc
mov
sti
jg
sahf
arpl
jbe
cmp
push
inc
mov
mov
cmp
push
jnp
push
test
dec
loop
ja
push
mov
push
inc
je,pn
mov
jecxz
xor
inc
shrl
lods
dec
cmp
decl
mov
xchg
push
push
test
jae
data16
sbb
ret
push
jno
pop
repnz
test
push
push
popa
pop
rorb
xlat
bound
jbe
adc
stos
loopne
push
mov
inc
mov
js
stos
inc
jo
cli
popa
shlb
test
inc
lock
and
add
or
mov
xor
lds
mov
aaa
add
jnp
cmpsb
cli
nop
sbb
push
pop
push
adc
xor
cs
fwait
dec
fs
cvtps2pd
jg
add
sub
cmp
mov
fiaddl
fs
int3
ds
ret
and
push
cmc
leave
push
fs
inc
cmp
scas
adc
negb
pop
mov
ljmp
addb
adc
push
ficompl
test
push
nop
mov
mov
das
push
adc
xchg
rcll
sbb
outsl
xor
lock
add
sbb
ret
icebp
out
adcb
pusha
scas
and
and
scas
cmp
add
mov
dec
jne
in
mov
jnp
je
xchg
sarb
rolb
fnstsw
inc
pop
test
sub
and
enter
incl
sar
aam
lcall
les
xor
movsl
xlat
push
js
dec
loopne,pt
test
pop
fs
add
lret
sbb
jmp
orl
xor
inc
sub
inc
inc
js
or
mov
push
pop
das
cmp
mov
dec
add
push
xorb
jp
ss
cmpb
sbb
and
das
adc
dec
cld
scas
mov
cmp
fs
jg
test
testb
adcb
bound
into
es
cmp
dec
sbb
movsb
or
or
mov
mov
int3
aad
add
inc
xor
call
adc
ljmp
fiadds
mov
xor
ret
mov
jnp
and
movl
jecxz
adc
add
data16
pop
adc
mov
jmp
mov
sbb
pop
out
sbb
loopne
mov
pushl
loop
std
pop
lock
stc
in
repz
sbb
les
sahf
leave
or
sub
sbb
jmp
push
inc
pop
or
adc
push
movsl
mov
in
jg
arpl
int3
out
xchg
jmp
mov
in
push
jne
push
mov
pop
mov
std
sbb
or
push
mov
mov
cli
cltd
and
sbb
mov
cmp
sub
cmp
pop
inc
aam
inc
fs
test
mov
hlt
lods
jbe
sar
decl
dec
add
adc
add
icebp
sub
add
dec
out
dec
repz
fs
jmp
or
inc
loop
es
in
jae
lock
sbb
and
test
or
push
icebp
fbld
inc
sbb
push
push
and
adc
mov
mov
adc
incl
std
xor
into
inc
cmp
add
xchg
jecxz
xor
js
negb
pushl
jb
jg
enter
imul
sar
push
into
push
pop
loop
or
adc
out
sbb
mov
push
out
outsl
data16
mov
cld
clc
or
xchg
stos
pop
or
test
mov
cs
jae
repz
adc
xor
sbbl
jp
call
sbb
inc
xlat
pop
into
or
lahf
into
mov
lret
cmp
jg
pop
mov
push
sbb
decl
ret
push
mov
out
faddl
fs
dec
xchg
adc
add
popf
mov
xchg
mov
push
bnd
mov
and
call
and
rorb
sti
cmp
push
incl
mov
stos
jecxz
and
pusha
and
pop
es
outsl
lret
fxch
fdivs
movsl
pop
push
in
jne
jo
pop
add
dec
push
or
dec
add
or
test
outsl
ljmp
les
dec
stos
test
aam
jg
inc
mov
mov
adc
xchg
push
gs
xchg
add
inc
jecxz
les
dec
cmc
jnp
nop
jge
and
or
call
or
add
iret
arpl
mov
ja
rcrb
test
lret
or
push
test
pusha
shrb
cli
push
xor
scas
xchg
shrl
arpl
cmc
mov
std
aas
js
lock
push
adcb
push
testb
ljmp
int3
fcmove
hlt
stos
test
idiv
sti
cs
dec
mov
repnz
ds
mov
stos
decl
push
cmp
pusha
popf
cmpsl
add
inc
sar
stc
fstps
add
mov
test
adc
and
movsb
mov
push
shl
rorb
mov
cmp
pushf
mov
fsubrs
and
push
and
pop
or
mov
mov
inc
jae
cld
incl
cs
xorl
js
cli
mov
faddl
pop
dec
fwait
jo
xor
and
mov
pusha
enter
inc
cs
jg
add
and
cli
mov
repnz
and
or
lret
mov
and
loope
sbb
xlat
dec
out
leave
pop
add
push
inc
push
dec
pushf
mov
roll
daa
gs
xchg
mov
icebp
popa
or
and
cli
mov
ja
rclb
or
sub
bound
lock
inc
xorb
pop
mov
insb
or
call
sbb
mov
pop
cwtl
adc
pop
ss
clc
call
nop
push
sub
xchg
and
push
add
mov
mov
ss
add
xchg
fs
inc
insl
adc
sbb
fdivs
inc
adc
and
mov
mov
fisttpl
or
jmp
or
and
xor
dec
mov
dec
popa
je
xor
js
dec
mov
fldl
loop
push
cli
ja
lods
out
mov
or
pop
add
icebp
add
push
sub
sbb
scas
sub
mov
out
mov
xor
jl
fcompl
pop
or
jne
movsl
mov
adc
mov
lret
cmp
mov
xchg
push
nop
xchg
and
mov
add
divb
adcl
jecxz
dec
push
cltd
sub
mov
mov
stos
pop
dec
jl
nop
sub
jae
js
xor
in
stos
inc
dec
xchg
pusha
dec
js
pop
jg
sub
out
mov
add
xor
outsl
aam
cwtl
inc
mov
les
dec
dec
dec
or
scas
push
popa
xor
push
std
cs
adc
dec
cmpsb
stos
incb
ficoms
or
lods
adc
and
negb
xchg
sbb
addr16
add
mov
std
or
in
mov
dec
and
cmp
mov
mov
outsb
stc
test
mov
out
mov
push
cwtl
push
and
lods
push
adc
aad
scas
xchg
and
stc
clc
add
test
add
insl
push
inc
dec
dec
sub
mov
sub
pop
jmp
add
and
int
decb
sbb
mov
rclb
jecxz
dec
xchg
dec
mov
adc
pusha
push
popa
add
mov
int3
push
cmpsb
adc
jno
popl
scas
add
mov
rclb
stos
sub
mov
stos
mov
xor
and
mov
jo
outsb
scas
or
std
call
sub
and
sti
fists
cld
mov
arpl
cmpb
movsl
hlt
push
push
mov
stos
rclb
movsl
cmc
out
inc
push
gs
xor
cs
adc
and
cli
es
xlat
or
adc
jecxz
sub
mov
inc
test
push
xor
in
fcom
jno
or
lock
sbb
aaa
or
aas
fisubrs
add
lahf
ds
iret
push
sbb
out
xchg
push
mov
dec
aam
jns
iret
les
or
in
fwait
mul
cli
dec
ret
inc
xchg
xchg
sbb
das
add
sub
out
push
mov
add
cmp
and
cmp
xchg
out
pop
into
imulb
stos
wrmsr
xor
and
fwait
and
fldt
push
jo
sub
mov
add
or
ljmp
inc
xchg
ds
rcrl
out
push
jo
inc
outsl
fs
and
test
test
inc
push
push
mov
ljmp
push
notb
and
stos
aam
mov
in
bound
xchg
les
lcall
add
xchg
dec
pop
mov
fstl
cmpsb
mov
and
out
jbe
test
fdiv
das
clc
shrb
jecxz
push
sahf
pusha
and
xchg
lcall
scas
inc
lods
fs
sub
inc
cmp
loopne
dec
outsb
outsb
jmp
mov
dec
hlt
xchg
push
xor
das
leave
inc
xchg
sub
inc
jl
pop
cld
cmpsl
and
jecxz
repnz
dec
movsl
pop
out
aad
fiaddl
pop
cltd
cmpsb
jg
push
push
pop
jp
mov
ret
dec
add
gs
ljmp
mov
pushf
rclb
pop
mov
pop
clc
xor
movsb
andb
jbe
jl
push
sub
inc
jo,pn
mov
outsl
sbb
dec
repz
cmc
push
inc
sub
cmp
push
out
into
cmp
lret
repnz
data16
cmpsl
inc
cmpsb
jns
dec
fimull
xchg
push
pop
or
hlt
adc
jg
lods
dec
xor
or
add
pusha
xchg
fsts
es
and
sub
sbb
lods
sub
or
test
fsubrs
mov
jnp
shrl
mov
add
neg
cmpsb
mov
pushf
popa
cli
inc
mov
pop
lods
inc
stos
ljmp
jo
mov
or
iret
stos
mov
test
mov
sahf
push
lods
fists
adc
mov
adc
lcall
scas
jae
negb
jecxz
or
cmpl
xchg
test
xchg
dec
shrb
and
int3
lret
movb
in
mov
push
mov
clc
inc
imul
stos
mov
test
aaa
fmul
test
sahf
sub
inc
outsb
ret
lock
or
mul
push
aas
or
xchg
adcb
mull
das
nop
mov
pop
cmp
mov
push
jne
rcrb
fisubl
es
sahf
inc
dec
xchg
and
jo
add
sbb
gs
pop
mov
fsubl
shll
mov
pop
xchg
in
mov
cmp
arpl
data16
push
cmpsl
xchg
adc
and
pop
pop
je
iret
loopne
pop
xor
ret
dec
sbbl
or
pusha
sbb
scas
or
mov
dec
rolb
jae
mov
jnp
cwtl
inc
pop
mov
push
jbe
or
push
fs
mov
es
dec
sbb
sbb
pop
icebp
mov
jle
mov
or
or
pop
insb
ljmp
mov
add
mov
loope
or
dec
xchg
rolb
mov
test
adc
xorl
push
jne
add
cmp
pop
iret
ja
inc
cmc
add
stos
sub
mov
sbb
call
test
call
jmp
fidivl
ds
sti
dec
mov
das
nop
cmp
rcll
dec
repz
mov
fiadds
ficoms
cmp
or
neg
push
mov
push
sbb
fcoml
mov
xor
xchg
mov
hlt
or
pusha
pusha
pop
cmpb
lods
fisubrl
adc
out
lds
bound
dec
lret
popa
mov
call
pop
dec
push
cmpl
test
outsb
jmp
mov
lret
mov
jo
popf
cld
jl
add
xor
inc
or
fdivr
adc
inc
sbb
xor
loopne
sub
add
dec
mov
pop
lock
add
lahf
shrb
add
stos
loopne
inc
and
cli
jg
jne
fisttps
sub
sub
push
ret
ret
inc
sbb
loop
or
fistpl
addb
add
insl
dec
inc
ret
adc
mov
inc
jb
jnp
jg
mov
inc
lds
xchg
jl
jg
sbb
cltd
decb
pushf
pop
icebp
dec
ret
xchg
inc
pop
test
lds
add
insl
and
fwait
push
and
push
ficoml
sub
add
dec
out
inc
ror
mov
jg
decl
sarl
fstpl
adc
add
and
sbb
xor
xchg
into
sti
lret
xchg
divl
push
push
jle
sub
movsl
mov
xchg
pop
movsb
bound
scas
mov
inc
inc
aad
cmp
jo,pn
adc
lret
push
stos
xor
jle
lret
mov
call
cmp
mov
adc
je
jg
add
pop
mov
mov
outsb
je
int
sub
xlat
pushl
or
inc
push
leave
pushf
cmpsl
pop
icebp
icebp
push
adc
out
icebp
or
cmpsl
loopne
daa
push
sbb
xchg
pop
sbb
paddusb
pop
data16
adc
in
fcmovb
push
loop
cmp
sbb
push
ss
pushf
inc
cs
xchg
enter
es
inc
shll
or
sbb
lahf
inc
cmp
in
mov
outsl
clc
mov
mov
sbb
stos
and
xchg
cmp
dec
xchg
cmc
add
rorb
push
adc
incb
push
cmp
jl
sub
cmp
pop
push
test
fs
hlt
add
loopne
push
xchg
fadds
inc
pop
hlt
call
cmpsb
inc
nop
in
mov
aaa
cmp
dec
mov
inc
xor
inc
add
jg
test
sub
clc
lock
pusha
in
inc
xor
cmp
add
dec
pop
pushf
icebp
or
or
hlt
clc
int3
and
push
cmp
incb
jmp
pop
rorb
frstor
mov
ficoml
mov
bound
inc
outsb
and
sub
punpcklbw
out
xchg
sbb
add
lods
pop
xor
inc
mov
jo
cmpb
pop
add
and
and
xlat
dec
mov
add
cltd
lods
int3
es
mov
cmovae
or
arpl
lahf
das
movsb
mov
pop
mov
sarb
cmpsb
push
xchg
add
xchg
scas
mov
inc
es
test
push
es
push
rcrb
sbb
xor
add
inc
loope
dec
inc
xor
push
add
pop
mov
test
cmpsb
push
sbb
adc
mov
push
lock
cmp
imul
cmp
mov
cmc
dec
dec
stos
push
aaa
fs
push
mov
or
aas
push
dec
push
sub
push
lea
push
push
sets
cmp
es
fnstsw
and
popf
add
decl
mov
addb
movsb
push
inc
repz
sub
lock
stos
call
cmp
in
dec
pop
jne
adc
mov
cld
jle
inc
ret
sbb
mov
ss
push
lcall
loopne
or
sbb
jg
jg
outsb
sub
or
and
sub
into
lret
pop
add
xchg
push
in
subb
mov
test
ljmp
push
cld
dec
xchg
mov
add
data16
dec
fisubrl
sbb
addr16
sbb
rclb
xchg
add
stos
inc
and
xor
cs
test
jg
ja
mov
xchg
cmp
pop
sbb
not
mov
mov
decl
push
sbb
sub
lods
xchg
xor
setb
enter
stos
push
mov
adc
and
add
xchg
lret
dec
jmp
mov
aas
call
cmpsb
mov
xor
add
fadds
cmp
jle
mov
xchg
outsl
pop
bound
leave
xor
dec
sub
mov
es
int
cmpb
in
pop
jno
jbe
pusha
dec
and
jno
shlb
jle
jle
sub
or
ds
icebp
xchg
lcall
dec
or
sarb
jl
jno
ficomps
shlb
js
enter
pop
test
mov
push
iret
dec
xchg
push
add
cmp
sarl
push
ja
push
push
cmp
das
jno
add
xchg
jg
orb
mov
stos
xchg
adc
push
inc
out
mov
hlt
pusha
sbb
mov
es
in
mov
ret
cmp
push
lods
mov
add
mov
in
xchg
rorb
sbb
and
fbld
sbb
fstpt
mov
adcb
out
inc
mov
ds
mov
sbbb
mov
out
mov
ljmp
in
jnp
adc
ds
lea
negb
push
std
mov
xor
mov
xor
addl
sahf
xchg
xchg
and
clc
adc
popa
into
lods
mov
mov
xor
mov
mov
dec
mov
cmp
clc
loop
mov
xor
or
ds
int
sub
mov
xor
jecxz
pop
sti
clc
mov
loopne
ljmp
aas
mov
xor
dec
ret
cmpsb
fldt
sub
flds
cmp
mov
hlt
inc
mov
clc
push
dec
or
lcall
rcll
clc
out
push
ljmp
push
xchg
jae
aaa
fisubl
cld
js
dec
mov
cs
jg
popa
and
mov
pop
test
nop
add
rcrl
orb
lcall
fcomi
inc
cwtl
and
xchg
out
mulb
sub
adc
or
add
cli
push
jp
roll
pop
sub
pop
mov
jle
incb
in
test
clc
scas
push
adc
fadds
jl
mov
mov
or
cmpsb
nop
shll
push
or
repnz
cmp
jle
cs
jecxz
out
fistl
dec
jg
dec
fsubl
push
cld
xlat
mov
fidivrl
jnp
div
inc
inc
jg
lcall
js
jns
fcoms
sbb
test
inc
add
mov
out
inc
pop
jo
jg
ss
or
push
and
mov
inc
data16
add
idivb
jbe
lahf
xchg
cmp
jae
and
pop
lret
dec
pushl
inc
xchg
jb
lret
pop
mov
dec
push
outsl
test
fisubs
arpl
pushf
push
outsb
data16
xor
or
movsb
add
fsubl
filds
or
test
sbb
jns
adc
lds
mov
scas
inc
cmp
sbb
inc
or
or
pop
cli
mov
ret
pop
add
gs
lds
clc
mov
dec
lods
data16
hlt
jo
jne
add
incl
sbb
int3
adc
push
int
push
movsl
and
mov
mov
add
adc
add
daa
lret
or
fcomip
rcll
jp
out
xchg
clc
add
mov
lcall
jmp
idiv
or
jl
dec
ja
aaa
xchg
std
out
add
mov
daa
out
mov
xchg
pop
jge
rolb
sbb
stos
test
and
ret
loope
xchg
cmp
es
and
pop
xchg
cli
imul
fwait
push
mov
stc
add
mov
and
call
lcall
daa
and
andb
xchg
fs
sub
call
movsl
mov
jl
lock
sub
dec
in
mov
loope
shlb
mov
cmp
scas
push
push
xchg
adc
push
mov
loop
dec
cmpsl
in
in
push
imul
loopne
cltd
push
sub
add
inc
push
loopne
hlt
notb
jg
sbb
push
in
add
bnd
outsl
nop
inc
mov
dec
xchg
or
add
add
or
fdivs
mov
mov
push
or
inc
clc
test
push
lds
popa
enter
dec
xchg
xchg
outsb
sbb
loope
in
inc
sbb
sub
or
stc
push
and
call
invd
adc
ret
inc
out
fs
clc
pop
stos
lea
or
es
sub
mov
push
ds
xor
ljmp
hlt
sub
daa
xor
clc
rcl
mov
adc
jle
cwtl
ret
sbb
mov
xchg
push
pop
dec
call
dec
cmp
xchg
jno
hlt
jg
push
sbb
popf
add
cmpb
js
out
add
lea
xchg
push
mov
mov
add
xor
jg
flds
movsb
add
movsl
fists
scas
pop
push
push
sub
insl
ja
cmpsb
nop
xor
aam
xor
cli
mov
mov
out
dec
pop
push
add
aad
mov
mov
hlt
call
std
aam
or
test
lret
daa
xchg
mov
xor
pusha
popa
roll
or
insl
clc
push
push
push
fwait
dec
lods
imul
adc
add
or
in
out
xchg
addb
jg
xlat
mov
and
es
adc
incb
push
movl
clc
les
dec
inc
cs
push
clc
decl
jg
lret
subb
add
sbb
pop
inc
push
or
mov
mov
adc
mov
test
insb
aam
clc
jg
mov
push
rorl
les
adc
idivb
clc
or
bound
test
ja
mov
and
jecxz
sarl
mov
test
ficoml
je
mov
jb
or
mov
jle
fs
mov
pop
fnsave
xchg
incl
add
sub
decb
pop
jg
fs
xchg
xchg
loop
xor
inc
xor
call
xchg
inc
pop
ret
ljmp
int3
loope
xlat
into
jns
push
adc
jecxz
cmp
insb
adc
insl
ja
icebp
shlb
in
inc
push
loopne
fisubl
lock
ljmp
ljmp
pop
in
popa
cltd
and
test
sub
ret
test
loop
inc
mov
loop
push
add
jae
roll
decl
aam
sub
add
lea
mov
cmc
loop
sahf
mov
imul
testb
mov
filds
rclb
bnd
dec
mov
sub
loopne
movsb
enter
push
dec
hlt
mov
push
ss
rclb
sub
push
sbbl
sbb
inc
sbb
test
xor
add
test
jno
xchg
push
adc
lcall
lcall
dec
loop
add
test
mulb
es
cwtl
fnstsw
out
cmp
jp
pop
aam
ja
jno
add
stos
loop
js
adc
dec
nop
sub
js
movsb
adc
sub
lcall
test
pop
movsb
add
mov
dec
and
mov
adc
mov
dec
inc
adc
sub
inc
jge
mov
cmp
mov
and
mov
or
jmp
inc
push
call
inc
insb
test
mov
fnstsw
adc
outsl
add
mov
inc
std
and
hlt
scas
mov
add
outsb
mov
mov
aas
inc
mov
in
jg
mov
xchg
sub
push
pop
inc
add
sub
out
andb
lcall
cwtl
sub
jne
mov
mov
adc
fists
rolb
lret
enter
push
test
sbb
add
cs
dec
pop
mov
jno
jp
stos
mov
or
loope
jp
sahf
add
in
add
clc
fiaddl
fs
add
stos
push
call
cmpb
xchg
and
sub
loopne
adc
fstpt
xchg
das
dec
jo
jle
dec
cwtl
push
push
add
outsl
shlb
push
je
push
mov
pushf
inc
pop
call
sar
outsl
jp
lock
pop
sbb
cmpsb
or
insb
ret
outsb
cli
jg
outsb
dec
lahf
xchg
je
repnz
or
cli
jbe
push
rcll
pop
cmpsb
ror
je
sahf
cmpsl
cmc
fcomip
enter
loopne
xor
mov
mov
outsl
clc
fistpll
jg
cmp
add
xor
sbb
loop
aas
test
enter
jecxz
add
pop
ljmp
add
cmp
cmp
cvtps2pi
xorl
loope
ds
loop
imul
fldt
push
inc
cmpsb
jle
inc
cmp
sbb
rclb
leave
mov
scas
inc
mov
bound
mov
mulb
inc
sbb
inc
repnz
jmp
lock
xchg
jmp
inc
imul
dec
jmp
lods
inc
push
fsubl
pop
mov
sub
xchg
xchg
xchg
push
jecxz
mov
adc
adc
mov
clc
stos
jle
dec
xchg
mov
lods
hlt
dec
adc
and
mov
pusha
mov
push
mov
pop
and
addr16
loop
sbb
hlt
cmp
lahf
and
or
inc
pop
add
mov
push
test
mov
cmp
mov
std
scas
jnp
jo
into
jl
lea
incl
push
sub
jb
cltd
outsb
stos
xor
fisubs
cld
pop
sahf
pop
xor
xchg
cld
mov
xchg
bound
fiadds
mov
arpl
adcb
fidivrs
lcall
inc
fildll
push
dec
lret
cmc
adc
stc
add
add
xor
test
cld
jl
in
bound
adc
mov
ljmp
xorb
sahf
push
push
enter
lds
mov
stos
and
xor
adc
push
sahf
xchg
movsb
mov
repz
push
cs
rcrl
xor
clc
pop
or
inc
adc
sbb
lret
outsb
rorl
rcl
xchg
fistpl
add
decl
mov
dec
cmp
xchg
lahf
pusha
lea
push
int3
inc
xor
pop
inc
xor
sbb
clc
call
dec
jmp
or
add
call
and
aaa
jno
xor
test
orl
shl
push
bound
dec
aam
sbb
mov
call
es
pop
jbe
xchg
lcall
cmp
jle
add
mov
sti
add
decl
mov
pusha
mov
xor
xor
imul
and
test
icebp
inc
loopne
fisttpl
lret
dec
inc
inc
into
mov
jbe
daa
and
loope
push
xlat
sti
jb
cwtl
pop
adc
and
fmull
adc
test
xchg
pop
cmp
loop
push
xchg
dec
clc
outsl
pop
addb
sbb
push
les
mov
sub
incb
lret
add
je
push
push
inc
cmc
sub
inc
in
add
andb
push
sbb
arpl
xor
clc
jg
ljmp
mov
mov
inc
push
push
push
iret
inc
pop
cli
idiv
mov
jne
fwait
nop
pop
jecxz
push
sub
out
pop
jecxz
push
test
jno
lcall
popl
outsb
inc
lea
in
mov
test
out
imul
mov
in
pop
cmp
add
mov
inc
test
and
je
mov
into
pop
inc
adc
dec
imul
xchg
dec
std
dec
mov
lret
dec
out
pushf
pusha
xchg
test
mov
pushf
scas
mov
pusha
add
push
push
inc
xlat
or
lea
test
testb
inc
lret
jo
mov
insb
gs
sidtl
aam
lock
cmp
jl
insb
daa
cmp
mov
sub
imul
and
xchg
loop
xor
movsl
out
push
dec
aas
insb
test
shrl
mov
ret
add
xchg
push
dec
dec
adc
cmp
out
repz
mov
hlt
ljmp
push
pop
fisubl
ret
incl
jmp
add
xor
movsb
cmp
jbe
sub
orb
sbb
lock
xor
xchg
repnz
stos
adc
test
mov
xchg
add
fimuls
lea
jbe
sub
xor
jl
les
dec
push
jb
xor
add
mov
lahf
adc
sbb
out
jb
inc
ljmp
xor
sbb
xchg
push
aam
shll
push
scas
les
outsl
fisubrs
add
mov
orb
xchg
fisubrs
repz
lods
cmp
or
stc
push
or
add
push
dec
ret
shlb
add
cmc
sbb
fisttpll
mov
es
pop
jg
jge
push
sub
push
xchg
and
xor
mov
add
mov
ret
add
das
out
sub
dec
fcompl
dec
pop
add
fmuls
mov
mov
inc
pop
shl
loope
inc
pushf
push
repz
pop
in
pop
xacquire
pop
inc
in
xchg
push
loopne
dec
jo
mov
push
and
mov
push
push
cltd
and
mov
jl
cld
mov
iret
pop
popa
add
xor
mov
rorb
sub
dec
or
inc
test
movl
adc
sub
loopne
jg
les
nop
cmpsb
pop
add
xor
scas
mov
lods
xlat
sbb
imul
mov
pushf
cmpsb
jp
or
xor
clc
cmp
lea
arpl
nop
sbb
aam
sub
push
int
mov
sarb
jb
cmpsl
outsb
adc
in
add
mov
insb
je
nop
sbb
ret
xorl
subl
mov
sub
add
inc
jl
push
sbb
xor
rol
fldcw
push
and
jbe
xchg
jno
mov
outsb
faddp
jg
push
xor
jne
add
cmpsb
or
inc
cmpsl
dec
dec
adc
jne
adc
jecxz
inc
int3
je
xor
adc
in
cmp
test
lods
pop
fs
ss
cmc
filds
shlb
push
aam
and
popa
loop
push
mov
pop
ljmp
mov
fadds
imul
shrb
xchg
imul
clc
outsb
adc
dec
jne
fldt
test
outsb
sbb
shlb
loop
test
inc
popa
sti
xor
fcomip
scas
notb
or
mov
loopne
push
std
mov
xchg
ret
and
mov
fiadds
lret
adc
lods
pop
inc
add
data16
pop
dec
jns
xor
andb
mov
push
enter
mov
xchg
dec
cmc
and
flds
cld
add
movsl
out
stc
test
cmpsb
pushw
pop
mov
push
adc
pusha
xchg
xchg
xor
out
and
adcb
add
mov
sub
jmp
add
or
pop
push
or
push
jbe
dec
sar
je
and
outsl
outsb
js
jbe
and
leave
push
insb
cltd
xchg
shlb
push
mov
hlt
clc
pop
int3
add
pop
pop
filds
out
or
ss
fbstp
and
adc
mov
mov
incb
stos
imul
mov
or
and
ljmp
rolb
mov
or
inc
fadds
pop
cld
mov
shll
mov
and
adc
or
lcall
jg
test
shrb
int
dec
pop
mov
aad
mov
inc
push
dec
mov
adc
push
sahf
xorb
loopne
ja
loop
pop
stc
les
rcrb
or
dec
dec
andl
mov
in
mov
cli
lea
jg
arpl
mov
jmp
stos
xchg
lock
push
xor
sub
inc
ja
mov
movb
jle
mov
pop
jp
jg
xor
loop
xor
insl
repz
movsl
shll
call
push
sbb
ret
dec
sbb
mov
ret
inc
add
pushf
sub
jmp
mov
data16
rcl
and
ja
xchg
rcrl
xor
movsl
mov
push
add
ljmp
inc
jo
or
jp
ja
repnz
mov
mov
into
cli
lock
xor
push
jb
test
ja
mov
add
add
push
data16
push
jbe
loopne
sub
aam
dec
push
inc
hlt
and
sbb
fcmove
and
push
pop
push
cmp
stos
cmp
mov
or
mov
movsb
xchg
movsl
popl
jecxz
sbb
pushf
xor
xchg
fidivs
je
fidivrl
adc
data16
repnz
lret
ljmp
lcall
and
push
sub
loopne
pop
dec
ret
aam
outsl
out
push
sub
sub
jno
adc
jl
mov
mov
lahf
add
test
sbb
push
sbbl
ud1
jmp
outsb
push
cmp
in
or
call
mov
ljmp
adc
mov
mov
push
adc
std
jle
lds
icebp
and
pop
mov
mov
dec
mov
dec
sbb
sbb
rcrl
aam
adc
subb
nop
test
mov
inc
rcll
adc
push
dec
dec
out
cltd
cli
movsl
inc
add
movl
decl
sub
jecxz
xchg
mov
lock
ret
cmp
push
mov
lret
mov
xor
inc
mov
lret
ret
inc
lods
bound
insb
hlt
jns
pop
mov
inc
incl
mov
add
cs
mov
mov
or
dec
scas
add
movsb
and
push
pop
adc
push
xchg
inc
inc
sub
jmp
and
xlat
daa
and
and
adc
imul
fs
jo
add
pop
mov
icebp
lret
shrb
sbb
ja
mov
push
push
jl
sahf
mov
sub
and
mov
push
push
je
inc
loop
movb
inc
xchg
xor
sbb
sahf
cmpsb
int3
loop
into
jg
test
sub
test
into
inc
test
shrb
fisubs
mov
add
cmpsl
dec
mov
cmp
inc
mov
or
push
add
mov
or
push
mov
jle
sbb
pop
push
lock
lea
mov
mov
loop
adc
sti
pop
je
xor
adc
adc
lds
imul
xchg
dec
push
faddl
xor
cli
nop
and
out
jbe
push
sub
xor
hlt
pop
cwtl
sbb
call
lahf
pushf
dec
mov
clc
and
mov
xchg
iret
push
frstor
mov
jle
call
sub
mov
jmp
lret
or
push
xchg
xor
jo
mov
mov
cld
nop
pop
mov
mov
mov
xor
repz
rcrl
mov
adc
mov
mov
inc
repnz
in
repz
dec
cmp
mov
icebp
cmc
lretw
outsl
or
xor
ljmp
loopne
js
dec
push
je
movsl
fwait
cmpsb
mov
adc
scas
push
sar
pop
push
mov
in
pop
rclb
push
imul
push
data16
dec
aas
sahf
sbb
sub
mov
cwtl
cli
pop
cmp
mov
das
andl
xchg
cmp
in
lret
dec
pusha
daa
nop
or
fmuls
or
aam
cli
lcall
popf
sbb
leave
and
into
aam
icebp
xchg
aad
add
inc
idivl
push
ljmp
dec
adc
out
aam
inc
mov
jg
xor
jle
data16
scas
test
sti
fsub
aad
xchg
nop
scas
jg
push
inc
inc
sub
fsubl
xchg
fldt
divb
fidivrl
imul
mov
and
int
pop
cmp
or
xchg
stos
scas
cli
jecxz
xor
adc
bound
push
add
sbb
mov
add
iret
ds
jb
xlat
stos
jmp
into
decb
inc
mov
sub
fsubrp
mov
inc
or
add
cli
dec
js
mov
dec
cs
inc
aas
mov
and
cmp
jno
and
fisubl
mov
clc
stos
inc
inc
cwtl
pop
rcrl
in
pop
jmp
test
xchg
loopne
mov
xor
daa
imul
shrb
icebp
ret
cmp
push
xchg
adc
mov
add
cld
add
das
and
pushw
xor
pop
pop
jno
dec
dec
loopne
ja
mov
shlb
int3
jne
push
xchg
pop
add
sub
pop
loope
dec
and
pop
testl
mov
or
cwtl
jmp
out
jp
and
add
push
mov
icebp
mov
pop
push
rolb
shl
mov
out
mov
mov
cmc
test
movsb
es
jl
cmp
xchg
test
jg
rcr
xor
aaa
cmc
nop
mov
lods
mov
pop
and
lcall
or
fsubrl
sub
xor
or
mov
in
or
es
mov
cmpsb
xchg
mov
sar
mov
adc
les
pop
lods
mov
dec
xor
sbb
mov
push
das
mov
inc
dec
mov
cld
push
pop
cld
decl
add
mov
sti
lock
movlhps
adc
jbe
sub
dec
mov
sbb
xchg
ja
test
cli
dec
lcall
enter
nop
jle
cld
pop
icebp
sarl
ret
popa
scas
or
xchg
cmpsl
fwait
and
push
push
xchg
sub
das
cmpsb
push
test
js
cmp
mov
dec
loop
xor
imul
lock
subb
ss
xor
faddp
jbe
loop
mov
jl
out
lahf
push
mov
xchg
mov
cmp
push
adc
je
cltd
or
rcrb
clc
arpl
lcall
faddl
bnd
pop
decl
dec
je
dec
pusha
pop
add
stos
ss
sti
lret
cli
or
and
or
inc
xchg
aad
mov
adcb
mov
int3
loopne
push
pop
mov
mov
jbe
sub
add
xchg
dec
xchg
xor
arpl
shlb
js
adc
and
jb
popa
mov
cmp
mul
test
xchg
pushf
dec
sti
cmpsb
test
sahf
inc
ja
loopne
jb
adc
pop
icebp
sbbb
jp
lcall
mov
clc
mov
inc
mov
xchg
pop
psubd
sub
jmp
test
add
sub
icebp
or
inc
dec
push
ja
rclb
call
test
jmp
inc
test
jb
mov
ljmp
add
mov
call
lock
in
mov
fs
lods
cmc
xchg
sub
and
incl
push
inc
sub
js
test
clc
fildll
xor
mov
pop
into
mov
cs
pop
mov
cmc
stos
and
adc
fdivr
mov
xchg
ss
test
insb
inc
adc
push
cmc
pop
jle
mov
and
pop
fcmove
xor
cmp
adc
adcb
sahf
in
inc
clc
lcall
clc
stos
mov
shlb
cld
sbb
adc
jo
jl
sub
push
push
xchg
imul
sbb
ficoms
push
inc
jecxz
adc
jecxz
in
xlat
pop
into
mov
jle
mov
fidivs
stos
aad
xor
and
cmp
movsl
sub
mov
addr16
cmp
dec
jno
data16
inc
repz
push
pop
add
sbb
sub
dec
out
shrl
inc
push
push
cmp
mov
sarb
xchg
add
xchg
nop
movsl
cmp
add
enter
jg
in
xchg
daa
mov
mov
rcl
push
mov
mov
add
or
aad
stos
pusha
mov
outsb
mov
dec
sarb
xor
push
add
push
mov
aad
cmpsl
mov
mov
cmpsl
insl
test
lcall
roll
inc
cld
adcb
inc
mov
aaa
or
data16
aas
nop
movsb
stc
shl
inc
ja
imul
or
xor
aaa
pusha
fdivs
icebp
aam
mov
add
stc
push
add
adc
jecxz
scas
or
lods
incb
mov
sbb
xchg
add
imul
adc
mov
mov
out
es
mov
ret
jle
adc
stos
popa
nop
pop
decl
xchg
push
jge,pt
ss
xchg
mov
jecxz
xchg
xchg
fwait
repz
ljmp
inc
mul
adc
mov
adc
adc
sti
push
loop
sbb
rorb
add
decl
mov
mov
cwtl
out
push
add
dec
lods
nop
pusha
xchg
sarb
cmp
mov
xor
jle
push
mov
stos
call
push
iret
mov
pop
adc
inc
test
mov
add
push
xor
mov
shlb
mov
mov
adc
add
inc
mov
push
call
mov
jnp
xchg
dec
inc
jb
cmp
incl
inc
mov
cmp
lods
inc
jmp
and
fs
adc
leave
loop
mov
pusha
filds
scas
mov
nop
dec
arpl
jg
push
movsb
mov
inc
cli
jmp
pop
into
push
fstp
and
adcl
lcall
call
mov
nop
and
pop
jo
jbe
sbb
jmp
int
inc
xor
movsb
insb
adc
mov
test
cwtl
es
fsubrs
push
loopne
pop
mov
sbb
cmpsb
sub
sub
imulb
pop
rorl
and
dec
dec
add
pop
dec
in
sbb
jl
aas
add
pop
inc
sbb
push
sub
xchg
ljmp
adc
cmp
cwtl
nop
pop
sbb
cwtl
leave
mov
mov
xor
fstpt
repnz
add
jecxz
push
rclb
mov
ss
jb
mov
add
cmpsl
test
dec
fs
les
mov
in
add
pushf
sbb
mov
incb
std
testb
cmp
into
sti
dec
movsb
leave
cld
insb
outsl
and
pop
loope
mov
jmp
aad
or
idivb
mov
mov
mov
add
cmp
lea
cmp
ds
cmp
mov
cmp
xor
cli
arpl
adc
dec
addb
scas
push
ret
xchg
jp
add
jg
inc
lahf
xor
xchg
jbe
inc
jo
or
stos
es
xor
in
cmpsl
mov
dec
test
data16
adc
ret
lcall
push
shll
cwtl
cmp
xor
cli
outsl
nop
popa
outsl
sbb
jecxz
mov
add
mov
inc
xchg
push
adc
push
dec
sub
notb
sbb
scas
mov
adcl
jno
and
adc
loop
push
les
mov
aam
jg
imul
call
cltd
jb
and
cwtl
ret
and
enter
es
fistps
out
addb
movb
xchg
imul
pop
lock
pop
movsl
push
les
cmc
mov
mov
mov
out
pop
test
les
fucomip
and
xchg
sub
adc
pop
pusha
sbb
mov
mov
imul
push
push
les
mov
repz
cld
or
adc
inc
pop
mov
cmpsb
and
pushf
or
leave
inc
mov
imul
in
stos
das
jnp
adc
loopne
sbbb
and
xor
pop
std
inc
les
xchg
mov
outsl
add
cmp
mov
dec
jg
fsqrt
add
hlt
or
push
dec
cwtl
test
add
pushl
cwtl
frstor
pop
push
push
dec
test
ja
dec
mov
xor
nop
mov
push
sub
call
loope
mov
push
sbb
ficoml
inc
or
ret
or
sbb
iret
or
addr16
ret
mov
lcall
xor
mov
in
mov
mov
in
dec
jb
xchg
arpl
add
cmp
push
jg
dec
cld
or
insb
add
cld
cmc
cmp
and
add
ret
push
inc
mov
cmp
sub
mov
jbe
icebp
mov
ret
and
ret
push
cli
inc
dec
sbb
mov
in
dec
inc
push
sub
mov
out
jle
cmp
cmc
jg
ret
push
ds
ss
ja
mov
fimull
rcrl
add
into
pusha
pop
arpl
or
sbb
mov
outsb
xchg
popf
adc
loopne
mov
sbb
or
dec
clc
sub
sbb
push
mov
fstpt
ljmp
push
out
shl
decl
jbe
loopne
or
inc
cmp
pop
sbb
sub
mov
pop
test
clc
mov
aaa
pop
stos
les
add
subb
test
mov
dec
out
dec
mov
and
push
xor
add
jecxz,pt
fdivrs
fwait
push
xor
mov
jbe
leave
push
fiadds
dec
pop
sbb
bound
ficoms
addl
out
jl
leave
mov
add
or
fs
lock
push
add
sti
mov
int3
sub
mov
cmp
ret
push
bound
xor
push
xchg
and
aaa
jge
inc
push
data16
pushf
data16
mov
pop
stos
push
mov
clc
cmpsb
lods
push
dec
fcoml
mov
ljmp
das
mov
pushl
lret
sub
out
lret
dec
sbb
les
sub
ds
adc
cmpsb
xor
movsb
js
in
push
cmpsb
mov
adc
adc
inc
ss
mov
mov
push
adc
lock
inc
push
pop
shlb
adc
adc
push
pop
pop
dec
cmp
or
xchg
das
jae
ljmp
cmp
stc
loopne
xchg
or
jne
dec
mov
scas
mov
ret
inc
idivl
xor
sub
adc
clc
jge
ss
xor
sbb
add
inc
test
movsl
push
xlat
sbb
mov
pop
mov
negb
jg
fcompl
mov
int
lret
pop
stos
push
cmc
jnp
lods
in
jns
xor
aaa
pushf
inc
ja
popf
pop
push
jae
pushl
or
or
ss
jbe
or
fwait
adc
fimull
mov
outsb
mov
mov
inc
std
rcl
mov
loop
mov
cmp
enter
and
lods
mov
add
sbb
loopne
sub
cmpsl
shrb
mov
outsb
clc
clc
dec
test
js
lods
xchg
jmp
and
dec
popa
lea
jno
negb
inc
dec
add
fdiv
add
ds
add
pop
push
sti
pop
cmp
daa
fs
mov
jle
hlt
fsub
cli
es
pop
sahf
jbe
jo
in
pop
stos
push
sub
push
or
jb
or
mov
pop
clc
rolb
add
fistl
mov
cmc
and
enter
mov
xor
push
movsb
inc
cmc
call
hlt
scas
fs
mov
or
call
or
push
xchg
inc
pushf
push
jle
aam
pop
push
mov
jg
adcl
and
daa
add
push
sub
inc
jnp
mov
es
jns
fstpl
pop
inc
mov
out
scas
xchg
fwait
jb
fimuls
push
jecxz
add
outsl
js
mov
mov
sahf
push
mov
or
mov
test
lahf
mov
ds
out
jge
mov
sub
movlps
jo
cwtl
mov
fldt
pop
arpl
and
int
and
testb
xchg
add
add
dec
jb
jl
insb
jle
arpl
push
mov
push
rorl
ret
add
or
cli
adc
subl
aad
enter
jbe
pop
clc
pop
push
xchg
cmp
sbb
jg
subb
and
sbb
js
push
sbb
sub
mov
mov
and
cli
popa
or
mov
pop
fwait
inc
pop
mov
icebp
jnp
movsl
mov
scas
rol
xchg
jne
dec
notb
or
add
es
sub
xorb
mov
das
clc
adcl
mov
push
xchg
jp
sar
push
fildll
lods
add
mov
pop
cmpsl
rcl
mov
and
sbbb
pop
inc
mov
call
mov
xchg
add
gs
fldcw
cld
sbb
or
decl
jl
pop
nop
cld
je
pop
pusha
xchg
repz
pop
adc
std
ja
xchg
add
stos
out
mov
and
pop
mov
cmpsb
push
adc
push
aas
xchg
call
cmp
clc
fwait
pop
lea
cld
enter
add
movsl
je
add
fmul
xchg
pop
mov
js
setg
mov
mov
rorb
fdivl
pop
lock
jae
cmp
fisubl
push
push
xchg
dec
fdivr
ljmp
arpl
inc
addl
push
loope
roll
push
push
mov
xchg
sahf
js
repz
call
cmpb
adc
jp
add
int
push
leave
sbb
out
es
aam
jmp
ret
xchg
pop
ss
add
sub
lods
sub
mov
addl
aad
adc
lods
ret
lods
xor
or
leave
lret
inc
mov
sbb
mov
inc
jl
inc
cmc
sub
add
and
or
or
cmp
sti
mov
pop
daa
lock
repz
lcall
mov
call
pop
and
sbb
cmp
es
pop
ljmp
outsb
jp
ja
add
jno
div
sub
sbb
push
cmp
mov
adc
dec
rcrb
or
cmpsb
sub
jp
jo
add
and
and
mov
dec
jmp
in
les
dec
adc
scas
pop
or
mov
test
pop
inc
lret
out
aam
lret
add
or
add
or
cmp
cmc
out
lock
icebp
dec
and
imul
push
adc
add
data16
shrl
lock
inc
dec
mov
pushl
xlat
mov
ss
push
ret
enter
xchg
sub
dec
idivb
bound
sub
xchg
test
or
inc
inc
movsb
in
enter
cmc
adc
clc
mov
out
adc
xor
dec
mov
and
das
loopne
sar
dec
xor
add
std
ja
fsubr
inc
cmp
ret
test
sbb
cltd
lea
add
in
rcll
xchg
cs
xchg
jb
das
sub
or
mov
adc
sub
jg
sbb
push
bound
pop
cld
adc
inc
push
inc
adc
cmp
pop
call
testb
notb
dec
outsl
sbb
je
aam
loope
stos
add
mov
mov
ljmp
fyl2x
or
xchg
push
and
xor
sub
loop
jo
push
aaa
adc
cmp
xchg
mov
out
push
cld
hlt
pop
adc
ljmp
inc
imul
inc
std
mov
das
cmp
lahf
xor
fisubrs
jmp
mov
call
mov
aas
ss
xor
mov
fsubl
faddp
inc
mov
jbe
jb
push
mov
out
clc
aaa
pop
xchg
push
test
addr16
lahf
or
call
in
into
mov
adc
cmpsb
sub
mov
mov
sub
jl
mov
dec
cmpsl
inc
jo
jg
lea
xorb
arpl
test
hlt
outsl
jmp
sub
or
mov
mov
push
stos
icebp
mov
bound
insl
hlt
test
add
xor
sub
fdivl
push
dec
dec
and
dec
pop
in
out
push
sarl
adc
daa
in
push
in
clc
inc
jo
rclb
xchg
push
sbb
jp
mov
or
aaa
inc
rolb
xor
test
xor
or
ret
aad
pop
pop
add
les
icebp
pop
adc
push
adc
mov
roll
dec
cmp
es
sbb
xchg
fadds
mov
sbb
jns
xor
jl
add
mov
adc
test
or
loopne
decl
fiadds
out
adc
pop
test
push
inc
std
jge
jns
or
or
popf
cmp
sti
jmp
add
sbb
adc
hlt
or
dec
mov
xchg
lcall
fisttps
inc
int3
gs
add
fistpll
sub
mov
fdivrs
pop
arpl
or
decl
jl
jns,pn
bound
push
sbb
add
sub
push
push
push
das
jb
jbe
dec
loopne
add
data16
sbb
jecxz
out
jecxz
xchg
sbb
push
cli
add
xchg
jge
cmpsb
or
cmp
vmovapd
or
jbe
sub
mov
ljmp
push
xor
dec
jge
stos
xchg
adc
stos
jne
incl
push
xchg
rclb
addr16
sbb
cmpsl
loop
sar
cmpsb
xchg
and
pop
push
pop
xchg
dec
push
movsb
les
mov
shll
jo
jg
aam
jecxz
dec
xorl
outsb
leave
mov
xchg
adc
ljmp
bound
lahf
lcall
cmp
pop
rclb
dec
push
or
rorb
dec
adc
add
out
mov
jg
test
or
add
jg
or
icebp
or
jae
scas
pop
iret
mov
jg
adc
mov
cltd
aam
cmpb
jge
sbb
push
lock
les
cmc
add
lods
inc
mov
fdivr
xchg
test
clc
enter
mov
inc
stc
shl
out
je
jno
push
ds
add
dec
sub
add
mov
ret
fiadds
and
ret
xchg
loop
les
outsl
mov
fpatan
sub
mov
xor
repz
dec
pcmpeqb
or
or
sbb
fimull
cwtl
sbb
pop
and
aam
cmc
call
adc
test
inc
and
fdivr
lea
mov
add
pop
std
ljmp
jae
add
cld
or
fldl
mov
cmpsb
call
or
jno
insb
out
lahf
into
inc
xchg
test
push
dec
cmpsl
mov
jl
push
cmp
pop
icebp
aad
pushf
push
xchg
dec
fxch
insb
push
adc
push
cwtl
inc
dec
pop
add
mov
sahf
fsubp
cmp
js
mov
fneni(8087
adc
fsubrl
outsb
cwtl
fsubp
sbb
stos
hlt
mov
and
scas
subl
daa
jo
cmpb
mov
xor
xchg
cmp
pusha
fiadds
push
cmp
jbe
rol
pop
adc
subb
fs
push
mov
neg
hlt
icebp
push
out
xor
inc
pop
xor
js
and
adc
xchg
cs
push
imull
lret
mov
and
adc
xor
inc
lock
pop
or
andb
sbb
test
jo
sub
shlb
sarb
sub
sti
das
dec
or
fdivs
in
mov
and
sbb
int3
mov
rcrb
test
cmp
hlt
xlat
test
outsb
mov
adc
jl
popl
adc
movsl
outsl
loopne
movsb
add
and
adc
add
sbb
sbb
jge
cmp
mov
and
sahf
and
push
test
insl
lcall
call
dec
and
popl
inc
push
repnz
and
cmp
outsb
and
sbb
hlt
aas
xor
shl
jg
imul
movsl
pop
inc
xchg
cmp
xchg
std
xor
out
loop
mov
arpl
xchg
mov
mov
mov
inc
adc
fs
inc
cli
fidivs
rcl
iret
je
dec
jp
or
jb
subb
mov
mov
inc
les
orb
in
cltd
clc
xor
mov
sbb
or
daa
dec
mov
mov
mov
aam
aaa
or
inc
lods
sub
cmp
ret
jbe
decl
push
cmp
aas
dec
cli
std
dec
xchg
js
inc
rep
lds
repz
mov
mov
sub
or
dec
mov
sub
lock
push
jns
std
stos
jg
mov
inc
ja
add
dec
jmp
mov
xchg
or
hlt
add
cwtl
stos
addb
mov
adc
cltd
push
pop
push
or
scas
lcall
mov
lods
adc
inc
jnp
lock
pop
or
add
ljmp
into
add
mov
sbb
pushl
jp
or
dec
gs
sub
call
mov
es
ficoml
jle
loopne
jg
fxtract
mov
sbb
jno
push
push
adc
sub
cld
data16
sar
aam
imul
inc
cmp
add
out
call
push
cs
or
fisubs
in
dec
ret
cs
and
nop
filds
pop
pop
shlb
push
mov
inc
and
lret
push
jno
lock
fs
arpl
in
call
mov
fadds
inc
add
aam
mov
mov
add
inc
jg
hlt
dec
stos
scas
mov
push
test
into
stos
ret
sar
mov
and
mov
mov
xor
shr
mov
sub
jne
and
jge
ljmp
xchg
cltd
lret
orb
pop
out
or
mov
and
icebp
xchg
mov
loopne
sub
cs
std
in
pop
cwtl
xchg
dec
pop
pop
les
into
es
sar
mov
or
pop
xor
dec
fsubr
mov
in
jbe
dec
mov
in
int3
lods
dec
mov
dec
leave
popa
icebp
xchg
shr
or
ja
mov
mov
lea
lock
xchg
push
fnstsw
xor
shrb
xchg
and
xor
mov
scas
push
loop
cli
push
mov
dec
out
cli
lock
enter
fimuls
sub
cwtl
dec
test
loop
xchg
jecxz
das
mov
push
pop
adc
in
jmp
jb
repnz
repz
add
sbb
xchg
add
cmp
adcb
ljmp
fisttpl
mov
mov
icebp
scas
lds
cmpb
mov
xlat
insb
cmpps
fcmovb
rol
dec
inc
mov
jmp
aad
das
mov
push
sbb
push
push
jl
lcall
add
pop
jo
and
mov
push
fists
hlt
add
dec
mov
pop
jae
xor
out
xor
adc
cli
iret
sub
cld
add
sbb
pop
add
psubd
fistpl
in
shlb
mov
jle
add
movsl
stos
mov
adcl
rorb
cmp
les
incb
jbe
icebp
mov
jns
int
test
jmp
mov
or
mov
dec
clc
dec
negl
stos
cmp
scas
pop
cmp
js
scas
pop
icebp
repz
std
inc
cltd
sar
aaa
mov
fwait
mov
sbb
fdivs
push
pushf
mov
fwait
or
xor
popa
xchg
or
fisttps
add
clc
xlat
mov
adcl
dec
lock
gs
mov
test
cmp
push
cltd
aad
test
pop
cmc
sub
xchg
xchg
sub
adc
pop
loopne
and
xchg
roll
sbb
inc
mov
aaa
insl
xor
cmp
call
ficoml
mov
pusha
xchg
mov
loope
cs
pop
lret
fiadds
cmp
mov
icebp
loope
enter
xlat
xlat
loope
push
scas
dec
roll
rorb
jp
and
add
dec
scas
bound
movsb
add
add
mov
das
and
adc
add
sahf
pop
adc
aad
ret
cmp
mov
add
mov
lcall
mov
sbb
or
loope
sarb
add
adc
xor
cmpsb
add
xchg
cmp
sarb
jp
dec
fs
pusha
xchg
int
adc
or
loopne
lret
push
sub
add
xor
dec
ficomps
or
icebp
xlat
jg
pop
inc
inc
hlt
lcall
mov
inc
mov
icebp
stos
ret
into
xor
push
outsb
jno
sbb
addr16
shll
pop
pop
ffree
push
add
jge
int3
adcb
sbb
inc
push
mov
stos
jmp
adc
and
data16
pop
or
jg
and
movsl
push
sub
xchg
sbb
xor
jle
inc
icebp
notl
mov
cmpsl
sub
sarl
xor
xchg
sub
sbb
adc
cmp
cld
jmp
pop
aaa
adc
sbb
jns
xchg
test
mov
mov
or
jp
add
ss
stc
enter
jecxz
or
xchg
rcr
mov
cmpb
shll
cmp
stc
mov
lock
in
inc
ficompl
sbb
int3
scas
mov
sbb
or
aas
adc
push
xchg
dec
scas
sub
push
insb
sub
mov
fimuls
jne
add
sbb
jg
call
pop
in
sbb
pushf
dec
stos
sbb
push
hlt
pushf
shlb
cmp
enter
and
lret
jbe
test
xor
xchg
and
cmpsb
dec
jmp
stos
push
orb
push
fbld
data16
mov
inc
and
dec
les
rcl
xchg
mov
repnz
in
add
and
adc
push
mov
shlb
ss
mov
roll
hlt
inc
data16
lock
mov
inc
push
jge
jbe
shlb
cmc
xor
lea
call
adc
cmp
int
jbe
dec
insl
sub
and
leave
mov
orb
mov
add
popf
ret
add
pop
add
dec
aam
mov
stos
or
sbb
xor
jae
inc
and
enter
xlat
xchg
xchg
fiaddl
cmp
pusha
or
leave
dec
lods
clc
stos
bound
lahf
adc
or
mov
and
rolb
cmc
fildll
add
xor
mov
test
in
inc
sub
adc
xor
xchg
std
adc
ljmp
clc
ret
inc
mov
addr16
sbb
out
int3
mov
jg
mov
repnz
sub
mov
add
lods
ds
xor
stc
icebp
or
popa
xchg
fsubrs
js
add
xchg
shrl
fistpl
mov
int3
push
ja
push
add
inc
loope
cmp
aad
xchg
ret
mov
scas
mov
mov
fisubl
mov
insl
ja
jg
cmc
ret
popa
cltd
lahf
rorb
not
xchg
setl
xchg
clc
stos
or
adc
jnp
sub
xchg
xchg
loope
adc
push
pop
pop
mov
cmp
mov
push
fdivrs
pushl
std
fisubrs
sub
or
aas
pop
pop
and
aam
lods
int3
ljmp
inc
or
in
and
aam
cs
das
scas
pop
mov
cmpl
arpl
daa
xor
pushf
cmovg
mov
xorb
pop
repz
test
clc
push
cli
push
cmpb
and
inc
push
and
add
das
test
test
adc
push
das
lock
adc
cld
in
int3
or
mov
add
sbb
movsl
incl
or
stc
adc
jnp
mov
push
xor
aaa
ficoml
roll
mov
inc
dec
add
cmp
bound
cs
aas
push
inc
out
lcall
xchg
mov
push
loop
out
cwtl
inc
das
adc
jne
das
fmull
popa
cmp
repz
addr16
icebp
popa
add
lock
inc
loop
add
dec
sub
ficomps
xor
and
dec
shlb
mov
jno
sub
sub
or
sub
lock
and
xor
cmpsb
in
ljmp
ss
bound
xchg
cmp
mov
orb
dec
pop
pushf
mov
or
enter
pop
sahf
enter
mov
adc
mov
push
stc
loopne
test
jp
mov
icebp
icebp
repz
jbe
aas
fidivrl
mov
cwtl
sub
mov
in
cmp
mov
les
or
jmp
lret
dec
popa
pop
adc
ror
mov
jecxz
ljmp
scas
push
or
ret
add
mov
sbb
call
xor
pop
pushf
dec
movsb
xchg
mov
fistl
xchg
imull
mov
das
stos
adc
repz
cmp
and
rcr
sbb
adc
ss
adc
mov
ljmp
mov
fs
daa
lods
neg
fsubr
inc
mov
push
scas
jp
pop
lcall
add
inc
hlt
adc
ljmp
lock
and
adc
dec
pop
xchg
add
jp
pushf
out
sbb
pop
mov
mov
cmpsl
push
dec
inc
mov
sub
jb
es
es
movb
xchg
ss
lret
dec
faddp
decb
test
cli
mov
cltd
rcll
adc
sbb
ret
daa
sbb
loope
cwtl
pop
iret
cmp
add
mov
sub
and
add
out
aam
cmp
adc
sbb
shll
test
cwtl
icebp
jns
inc
loop
dec
inc
inc
aas
sbb
mov
dec
xchg
jmp
pop
add
xchg
bound
hlt
xchg
nop
aas
out
push
mov
push
sbb
add
scas
inc
insb
jl
add
in
filds
pop
add
call
repz
gs
das
pusha
cmp
fs
cmp
je
aam
pusha
add
js
sbb
mov
sarb
rcrl
cmpsb
jo
imul
lock
dec
cmp
sar
and
or
sub
mov
add
xor
je
outsl
idiv
sub
jl
xchg
sub
call
lret
fistps
inc
push
and
ret
fisubl
mov
mov
add
lods
in
loop
outsl
aaa
insb
dec
cwtl
inc
adc
inc
pop
sub
push
push
xchg
dec
in
ja
push
scas
xchg
in
imul
dec
and
lea
or
cmpsb
mov
sub
aam
sti
push
sbb
jg
push
fwait
mov
lret
outsb
mov
pusha
jno
pop
or
lret
orb
pusha
mov
fldt
xor
fs
in
ss
xor
mov
xlat
mov
mov
scas
adc
pop
js
lea
nop
test
cmp
sbb
adc
out
push
test
std
xchg
repnz
adc
and
in
sbb
ljmp
dec
sbb
pop
std
aam
xchg
in
add
and
addl
push
cltd
ret
lock
ss
and
and
scas
xlat
aaa
or
mov
adc
negl
into
sub
or
sbb
mov
pushl
pusha
fdivl
push
cmp
ret
js
jo
mov
rolb
mov
add
test
adc
cmc
sarl
in
rolb
ljmp
xor
jp
jnp
arpl
mov
das
sbb
icebp
jmp
mov
push
push
call
outsl
jg
adc
popa
pop
cmp
jne
mov
push
rcl
add
pop
subb
sarb
icebp
repnz
adc
sbb
flds
pop
lods
sub
je
aas
dec
fadds
sbb
sub
push
push
cld
cmpb
imul
add
outsl
or
or
mov
cmpsb
jle
pushl
and
jae
inc
test
push
xchg
rcll
pop
inc
push
testb
pop
pop
or
add
adc
mov
or
cld
dec
adc
mov
pusha
popf
xor
dec
adc
jl
xchg
pushf
xor
push
es
push
cld
add
subl
dec
arpl
jbe
dec
dec
test
fisubrs
push
mov
inc
jno
jg
or
push
jbe
testb
fistpl
and
xor
push
movb
fiadds
push
mov
popf
add
or
mov
cmp
push
xor
test
or
pop
adc
popa
and
and
aaa
insb
cli
cmp
sbb
mov
xor
dec
mov
push
push
pop
std
jle
mov
out
xor
dec
cmp
mov
push
shrl
or
mov
inc
aaa
jmp
icebp
cwtl
es
icebp
filds
sub
adc
mov
mov
aad
add
jg
inc
or
ficomps
int
push
mov
gs
mov
js
mov
cmpsb
cs
mov
sub
xor
ja
test
fildl
adc
mov
mov
dec
xchg
popa
pop
jbe
cmp
and
cld
and
outsl
clc
jg
push
add
xchg
jo
clc
daa
adc
flds
pop
sbb
repnz
push
pop
jl
adc
aam
shrb
pop
stos
aad
test
stos
jo
mov
pop
xchg
jle
insb
jmp
lahf
rol
fs
push
pushf
hlt
outsl
cs
movl
mov
adc
in
std
push
repz
sarb
add
mov
sbb
out
sbb
aas
inc
and
and
sarb
add
fsub
fidivrs
add
and
mov
and
dec
dec
ja
fcmove
in
ficoml
jmp
adc
xorl
cmp
inc
ljmp
in
push
push
jo
stos
fmull
std
cmp
pop
mov
fisttpl
popa
add
sbb
loop
aaa
mov
aad
xchg
mov
cmp
cmp
clc
lds
out
pusha
push
dec
sbb
inc
loope
mov
add
mov
inc
aad
enter
adc
mov
sbb
pushf
sub
clc
das
call
or
mov
adcl
xchg
sbb
jnp
push
dec
test
add
xchg
test
add
fcompl
enter
and
pop
stc
pop
test
pop
xor
pop
call
call
sub
cmp
loopne
hlt
into
int3
jl
hlt
mov
jle
outsl
in
rol
call
sahf
pop
outsl
cmp
insb
xlat
sar
xchg
pop
dec
fsubl
movsb
ja
mov
nop
pushw
inc
mov
cmp
loope
mov
xor
inc
sub
mov
pop
push
data16
sub
inc
loopne
sbb
imul
adc
inc
mov
push
xchg
ror
fmull
mov
jp
add
mov
jo
lock
incl
inc
or
sub
and
out
pop
stc
push
fsubrs
dec
pushf
inc
pop
adc
cmp
dec
pusha
mov
sti
cmp
fmull
xchg
nop
lcall
movsb
xor
icebp
das
push
mov
je
push
jge
ljmp
or
mov
dec
xor
push
orl
push
mov
push
or
pop
fs
fs
mov
incb
lods
push
sbb
inc
mov
add
inc
sahf
loop
or
nop
mov
push
pop
mov
mov
enter
dec
ret
sub
push
xor
ljmp
xor
mov
sub
and
pop
jb
and
adc
add
stos
xor
or
je
mov
sbb
add
push
inc
test
or
outsl
push
mov
push
xchg
xchg
jo
cltd
jp
mov
or
in
insb
and
or
repnz
add
lret
rcrb
inc
pop
mov
jg
pop
push
paddusb
cld
pop
and
imul
std
sbb
les
insl
add
pop
or
stc
or
out
imul
fdivl
push
xchg
loopne
fistps
inc
sub
stos
mov
cmpsb
stos
inc
adc
push
inc
and
xor
movsl
push
addl
clc
icebp
test
stos
push
pop
mov
cmp
mov
sbb
pop
scas
nop
pop
ss
call
mov
dec
add
out
xorl
or
sbb
std
and
cmp
fistps
fnsave
lods
sbb
mov
mov
aas
xchg
hlt
lcall
jecxz
jmp
mov
les
adc
adcl
sbb
shl
mov
sub
addl
jnp
push
or
pop
mov
sbb
add
dec
aam
xor
and
stos
sub
lock
in
cmp
push
dec
and
xor
fcoms
inc
andb
jae
sub
and
pushf
fstps
pop
ja
insl
test
jl
call
or
push
clc
jne
xchg
pushf
inc
cltd
pop
inc
lods
inc
cmp
pop
add
incl
call
xchg
add
std
push
push
adc
pop
dec
or
push
mov
decl
psubsb
dec
mov
call
or
jge
imul
fdivr
jb
mov
stos
inc
fistl
pop
mov
jno
mov
adc
or
xchg
push
cmpl
or
cmp
pop
jb
bound
jge
inc
les
test
inc
jge
fs
add
add
fiadds
incb
shll
insb
je
push
rcl
mov
das
pop
in
push
movsb
inc
inc
mov
and
out
and
call
jl
mov
test
loopne
fwait
pop
mov
in
inc
pop
xchg
bound
loopne
cmpl
stos
out
repnz
andb
xchg
or
into
add
jb
fbld
loop
enter
pop
int
ret
dec
jmp
adc
shl
adc
aam
and
xor
out
sbbl
sbb
mov
decl
gs
test
dec
lock
pop
js
mov
pop
pop
sar
mov
ret
dec
dec
cld
gs
ljmp
ljmp
loope
call
into
push
pop
pop
sbb
mov
and
dec
jne
mov
mov
enter
loopne
inc
push
pop
and
adc
int
push
loop
int3
jb
xchg
shlb
xor
sbb
pop
mov
jno
shlb
fcomp
xor
cmc
data16
pop
shlb
cmp
sbb
mov
scas
mov
jmp
push
ss
mov
fstpt
inc
movsl
cwtl
daa
sbb
pop
sbb
mov
jno
add
mov
imul
pop
adc
bound
inc
or
dec
fsubrs
add
sbb
sub
rcll
movsb
dec
sbb
call
test
out
call
xchg
ret
push
hlt
inc
push
jne
or
sarl
dec
cmc
xchg
sub
inc
mov
aad
dec
push
mov
fmul
or
jae
sub
int
rolb
xchg
or
mov
mov
outsl
scas
movsb
repnz
pop
sahf
pushf
lret
incl
inc
imull
fldcw
sub
addl
mov
ret
fsts
add
pop
loop
sbb
es
in
mov
mov
and
ds
mov
push
aam
push
sbb
shlb
jg
mov
sub
fwait
or
imul
mov
fadds
dec
sub
sub
sub
sub
movsb
out
testl
jp
sbb
add
ficoml
scas
ss
mov
leave
cmpsb
sbb
fdivs
shll
xor
ljmp
lds
mov
inc
fsubl
sahf
testb
mov
loope
or
jae
mov
outsb
mov
sub
data16
out
mov
sub
scas
lods
aas
xor
rorl
rcll
repz
dec
scas
and
imul
and
mov
mov
inc
int
ja
inc
push
add
es
inc
pushf
sbb
ljmp
pop
pushf
jge
inc
negb
add
and
inc
repnz
fdiv
mov
or
ret
mov
xchg
loope
enter
dec
mov
fs
push
inc
mov
or
xchg
jle,pn
mov
adc
js
mov
dec
fisttpll
or
mov
xchg
jae
mov
jg
cwtl
sbb
adcb
xchg
push
icebp
pushl
cmp
loope
mov
adc
inc
test
shl
push
xchg
sub
xchg
decl
mov
loopne
lock
sbb
xor
push
jae
and
jmp
and
icebp
bound
popa
xchg
xlat
stos
int
cld
push
or
hlt
xor
sub
inc
roll
or
mov
jg
bound
xor
lods
daa
inc
xlat
jbe
cs
fildll
adc
push
jb
sub
lcall
test
push
xor
sub
test
mov
push
mov
or
jg
mov
pop
test
mov
adc
les
mov
or
ljmp
xchg
mov
ss
sbbb
pop
adc
test
jecxz
call
cmpsl
test
mov
cmp
and
dec
hlt
pushl
add
jp
pop
xchg
inc
mov
test
jg
call
jl
mov
add
cmp
inc
subb
sub
cmp
ss
shrb
push
mov
cmpsb
pop
pop
movsl
add
add
jle
sarb
adc
mov
inc
mov
js
stos
les
inc
inc
outsb
adc
stos
divb
push
jge
push
shr
jg
push
mov
cmp
lcall
jmp
shl
cmc
sbb
push
adc
inc
cld
xchg
lods
xor
imul
pop
incl
dec
repnz
js
das
pop
xchg
xor
aad
jl
addr16
mov
fsubs
adc
mov
and
jle
mov
mov
hlt
icebp
mov
pop
fisubrl
dec
add
xchg
cld
or
sbb
dec
mov
rorb
aad
sbb
mov
loopne,pt
add
add
orl
out
fmull
mov
call
xchg
ja
data16
mov
fbld
outsb
mov
shrb
test
fisubrl
and
jge
push
sbb
dec
add
pop
clc
mov
jo
mov
mov
pusha
and
xchg
lcall
dec
push
imul
scas
mov
sbb
cltd
loope
nop
dec
scas
push
jmp
ss
pop
dec
test
loop
dec
loopne
in
or
add
sub
sub
mov
xchg
cmpsl
and
sbb
repnz
std
stos
mov
repnz
idiv
pop
and
jmp
icebp
pusha
fs
sbb
mov
insl
jmp
or
push
fwait
sahf
stc
js
inc
mov
cli
inc
cltd
std
pop
orl
or
shl
sub
into
and
fwait
inc
in
in
fldcw
in
jae
inc
pop
pop
out
push
push
cmp
hlt
fisttps
test
xchg
mov
sbb
jp
test
mov
push
dec
sbb
jecxz
es
pop
adc
lods
lea
std
jmp
jo
test
xlat
cmpsl
inc
pop
out
shrb
push
and
xchg
fldt
jmp
lods
and
adc
lret
adc
xchg
les
orb
dec
inc
jg
cmc
and
cwtl
push
xor
clc
test
jl
inc
cmp
pop
outsb
or
mov
xchg
jle
aad
insb
icebp
es
jl
cmp
cmp
pop
cmc
faddp
shlb
add
cmp
mov
push
outsb
or
push
cmpsl
add
adc
inc
mov
scas
push
lea
jle
pusha
iret
xchg
mov
in
test
lahf
sbb
ret
mov
add
pop
cmc
decl
test
pop
add
jecxz
adc
test
stc
add
jb
add
nop
dec
sub
or
push
mov
dec
sbb
add
fistps
dec
add
sub
or
in
add
xchg
mov
sbb
decl
add
movsb
jb
jmp
jmp
inc
add
inc
jne
xchg
ss
sub
push
setbe
sbb
outsl
inc
mov
mov
out
movb
sar
xchg
lock
adcb
inc
jl
xchg
shl
imul
lcall
movsl
or
pop
ljmp
sbb
loopne
loopne
push
and
fisttpl
mov
mov
mov
je
int
pusha
and
insl
jge
mov
pushf
ret
mov
jne
xor
dec
testb
pop
jg
mov
mov
insl
add
lret
test
mov
xchg
or
inc
xor
outsb
popa
scas
xchg
push
repz
pop
xor
js
mov
dec
jecxz
cld
or
arpl
push
add
or
orb
shll
fmulp
mov
mov
sub
adcb
xchg
in
push
mov
add
dec
sbb
aaa
loope
push
aam
add
push
test
sti
sub
jo
daa
popa
mov
cmp
inc
pop
add
adc
das
mov
cmc
divb
push
incb
pop
jle
das
mov
sarl
inc
pushf
dec
sbb
scas
cmp
cmpsb
in
xor
js
push
xor
aas
xor
fwait
push
jmp
js
lcall
loopne
aas
and
bswap
mov
out
scas
sub
cmp
mov
sbb
or
inc
inc
jno
movsl
mov
in
cmp
add
pop
mov
lahf
push
addb
cltd
mov
push
mov
loope
adcb
sub
cmpsl
or
clc
shrb
dec
or
adc
pop
aam
mov
push
data16
dec
movsl
ret
add
mov
and
shlb
je
pop
mov
test
lcall
repnz
ret
fidivl
popf
xchg
pop
js
data16
fsubrs
aas
adc
inc
mov
dec
idivb
mov
cmp
inc
test
mov
clc
pop
pop
fimull
or
pop
mov
test
js
xchg
dec
and
lods
xchg
mov
int3
jmp
add
daa
aas
and
loope
daa
leave
inc
mov
adc
push
rcr
jle
and
xor
inc
outsl
push
inc
jg
cmp
adc
into
repz
sbb
addl
xor
dec
int3
ret
dec
outsl
stos
mov
decb
es
push
cltd
sub
push
daa
xor
loope
bound
push
lcall
sbb
sbb
mov
pushf
shll
mov
iret
sbb
icebp
call
shrb
lods
push
and
sbb
scas
inc
sbb
and
mov
xlat
jle
loop
lcall
add
or
inc
fbld
out
xchg
push
cmpsb
mov
cli
jg
mov
arpl
mov
inc
pushf
push
add
out
clc
inc
sahf
mov
jecxz
mov
test
xor
leave
add
bound
ljmp
movsb
cmp
jg
ret
test
add
adc
mov
lds
adcb
push
ret
rclb
mov
pop
in
int3
cwtl
and
ds
sbb
out
das
mov
cwtl
sbb
xchg
mov
xchg
out
push
lods
mov
dec
push
xor
loop
add
mov
cmp
mov
repnz
dec
sub
push
in
iret
cmp
arpl
pushf
icebp
out
movsl
clc
mov
adc
or
mov
test
pop
add
mov
pop
in
jl
pop
orb
mov
adc
inc
jbe
fidivl
sbb
sti
cli
test
fcmovbe
hlt
pop
pop
ljmp
jl
mov
insb
insb
std
fiaddl
repz
add
add
ret
jecxz
pop
sti
mov
push
jo
adc
dec
and
std
std
xchg
jno
mov
mov
inc
inc
sahf
dec
mov
push
rcrl
inc
sarb
loopne
clc
add
icebp
xor
cmp
xchg
decl
xchg
xor
cmp
aas
mov
mov
pop
movsb
outsb
sub
in
adcl
push
push
pop
mov
pop
mov
mov
in
mov
lods
in
fcom
jmp
fcoms
mov
stc
mov
or
and
sbb
das
xor
push
xchg
cs
mov
lock
sahf
outsb
aaa
das
rorb
or
push
icebp
rcrl
ljmp
xor
mov
int
sbb
rolb
lret
aaa
test
mov
mov
dec
out
cmp
repz
inc
pop
in
icebp
add
mov
xchg
xchg
or
fldl
or
jo
jmp
mov
mov
loope
or
mov
mov
test
sbb
aad
jbe
push
daa
mov
cmp
idivb
xchg
adc
and
incl
loope
jne
sub
icebp
sub
icebp
ret
lahf
mov
ljmp
jns
dec
pop
push
shlb
pop
pop
mov
sbb
sbb
test
add
and
andb
fs
add
dec
movsl
jg
sub
sbb
dec
inc
rcll
pop
add
leave
mov
jge
cmp
mov
movswl
push
enter
test
in
test
inc
cmp
bound
fiadds
mov
aad
push
push
sub
dec
dec
pop
adc
adc
je
push
cmp
jecxz
fistl
je
mov
outsl
out
nop
icebp
add
push
mov
cmp
add
pop
addr16
mov
mov
adc
inc
mov
es
or
jne
fstl
xor
cmpb
cmp
pop
sahf
shlb
pop
mov
test
cli
lock
loopne
jecxz
insl
decl
mov
sub
jmp
push
xor
ret
daa
cmp
test
sarb
dec
sbb
ror
outsl
and
cmpsb
xor
and
and
cmovne
outsb
xor
mov
sub
and
sub
and
xor
pusha
adc
add
in
daa
fcompl
or
sub
sbb
inc
mov
push
mov
push
sbb
pop
jne
push
sub
jo
add
push
ljmp
aas
jle
pop
mov
shrl
mov
mov
cs
aad
cmp
ds
cld
push
jl
jmp
and
pop
inc
jg
rorl
sbb
inc
inc
dec
dec
adc
cs
ss
pop
cmp
icebp
rorb
hlt
int3
fimuls
sub
in
cwtl
les
ds
mov
sub
cld
hlt
add
mov
out
fucomp
test
push
xchg
mov
nop
push
jne
cwtl
jns
sbb
in
xchg
sbbl
cmp
rcll
mov
inc
cmp
cmp
inc
inc
int
pop
les
outsb
gs
jne
mov
add
mov
and
sub
in
ret
shrb
js
in
insl
jle
test
push
rcll
pop
mov
sub
fmuls
cli
aaa
mov
adcb
sbb
shr
cmpsl
and
pop
stos
jnp
cmp
bound
aam
mov
int
add
test
data16
mov
es
js
push
incl
call
ja
mov
cmp
dec
pop
test
lods
cli
jmp
rclb
insl
decl
lock
mov
addr16
sbb
cs
and
xchg
push
push
les
adcb
test
popa
das
flds
dec
mov
mov
pop
sbb
call
push
es
sbb
loop
cli
je
jecxz
mov
jnp
cmpsb
add
lock
sub
push
loop
cmpsb
cmp
loopne
and
test
mov
fs
jg
jmp
nop
sub
lock
jb
adc
insl
mov
loop
cld
js
inc
lret
lock
mov
mov
stos
test
pop
mov
fcompl
push
push
jecxz
push
inc
insb
mov
jo
js
decl
mov
in
jl
dec
inc
pushf
mov
ror
or
ficomps
cli
mov
push
cld
push
jle
jl
xor
loope
xor
ret
xchg
incl
call
je
or
jo
sarl
xor
rcl
sub
fnstcw
ja
iret
mov
das
pop
in
out
xchg
xchg
dec
dec
shlb
lret
pop
sbb
icebp
icebp
sub
pop
adc
dec
push
push
sub
lcall
push
pushf
adc
lcall
adc
andb
or
leave
dec
call
and
icebp
int
push
movsb
pop
lcall
lret
jo
std
insb
sub
pusha
inc
xchg
mov
fisubrl
or
mov
xor
repnz
mov
push
shlb
std
inc
dec
clc
fcomip
jl
test
sbb
push
jmp
and
iret
rolb
inc
sbb
lock
push
mov
push
call
xchg
stc
aad
sbb
mov
mov
sbb
adc
test
cltd
xchg
icebp
fbstp
lods
adc
ja
repnz
int3
or
jmp
call
sbb
lods
shrb
inc
xor
int
adc
mov
push
xchg
or
dec
std
clc
ret
pop
fs
mov
outsl
inc
out
in
lret
call
xchg
sahf
or
aaa
daa
mov
loope
jp
push
std
cmpsb
incl
nop
add
clc
jns
jae
cs
cs
test
aam
push
sub
popf
adc
scas
negb
ds
mov
add
add
inc
mov
xor
hlt
lret
fnsave
pop
stc
fldl
add
push
pop
mov
cmp
dec
shll
loopne
mov
or
jns
sbbb
push
add
add
stos
cs
inc
cmp
pusha
subb
cmpb
lcall
cld
xorl
fildl
insl
pop
add
in
test
inc
cmp
sub
add
inc
adc
leave
enter
mov
nop
scas
jo
cmpsl
mov
inc
mov
mov
std
jg
lock
and
xchg
jbe
adc
and
faddl
push
sbb
clc
xor
pop
mov
push
pop
sub
in
cmc
mov
mov
imul
loopne
xchg
mulb
jmp
je
push
aam
in
icebp
add
sub
leave
test
push
push
cmp
inc
adc
es
cli
cli
insl
fcomps
cmp
xchg
mov
loopne
incb
loopne
xor
into
inc
dec
clc
and
daa
mov
je
int3
push
xchg
shl
mov
test
aam
clc
and
ljmp
pop
and
mov
and
or
or
and
fs
scas
push
cld
mov
orb
dec
shll
mov
fisttps
ret
movsb
adc
xchg
push
mov
mov
cltd
data16
mov
adc
outsl
jle
cmp
scas
ret
pusha
in
ret
pop
imulb
arpl
leave
pop
adc
add
call
addr16
and
sahf
insb
cld
nop
pop
lret
sub
inc
mov
xchg
sub
xchg
insb
outsb
and
int3
xchg
add
inc
pushf
imul
std
or
aam
fs
bound
loope
sub
std
ss
jmp
adc
nop
sbbb
and
sub
adc
cld
dec
inc
ljmp
out
inc
pop
jmp
or
mov
push
mov
loop
cld
and
adc
ret
out
scas
js
and
pop
inc
pop
and
mov
jmp
test
cltd
imulb
cmp
outsb
add
sub
or
adc
jge
cmpb
pop
pop
add
pop
inc
push
inc
lcall
push
movsl
inc
jbe
push
xchg
mov
xchg
push
inc
pop
push
jno
arpl
daa
cmp
loop
inc
imul
xchg
dec
clc
sbb
test
add
pop
sbb
jle
test
notl
sbb
jbe
arpl
add
jbe
out
arpl
iret
and
sbb
add
aam
hlt
das
ljmp
movsb
negb
loopne
and
ficoms
xchg
aaa
sub
lret
pop
fistpll
flds
adc
rcrl
lds
in
mov
cltd
mov
xchg
pop
pusha
inc
mov
and
xor
popf
sahf
jp
lahf
call
push
dec
popa
fildl
call
cwtl
dec
push
hlt
ret
fsts
test
andb
int3
add
inc
push
insl
enter
nop
outsl
jmp
cmp
test
or
jae
or
ror
jbe
add
adc
mov
dec
in
and
xchg
add
adc
int
jg
or
pop
mov
and
jo
popf
mov
xchg
add
and
add
insl
out
nop
add
xor
add
xchg
or
cltd
jl
xchg
outsb
andb
jno
lds
xchg
andb
mov
mov
out
sbb
stos
jg
pop
mov
mov
test
insl
or
mov
jp
hlt
icebp
stos
xchg
mov
mov
pop
movsl
sbb
jl
test
std
pop
mov
push
xorl
mov
or
test
sbb
jno
imul
or
faddl
fists
lcall
mov
dec
daa
dec
push
shll
ret
or
mov
push
loope
jle
add
fadds
inc
cmpsl
clc
push
arpl
shr
xor
lods
jl
push
mov
xchg
mov
fiaddl
loope
inc
and
pop
popa
daa
xor
icebp
add
loopne
push
subb
aad
dec
push
sub
out
dec
fwait
pop
sarb
into
push
bound
xlat
fsubs
call
xchg
mov
adc
or
adc
test
add
ret
jg
cs
xor
lret
or
cmp
xchg
stos
or
mov
jns
rorl
mov
or
jl
testl
mov
push
jecxz
shlb
push
cmpsb
xchg
ret
jecxz
mov
add
add
xchg
adc
or
inc
call
sbb
cwtl
mov
jns
leave
icebp
stos
mov
dec
dec
sub
xchg
inc
inc
sub
jp
repnz
in
fwait
cmp
mov
loopne
shll
test
js
std
xchg
out
mov
pop
aaa
divb
data16
add
xor
loopne
sbb
and
mov
push
mov
mov
xor
pop
mov
sbb
rcrb
dec
nop
push
pop
add
push
call
out
lret
test
loopne
fildll
push
out
js
jo
mov
cmpb
cmpl
fimull
shll
sub
lret
fcompl
lea
mov
or
ljmp
jecxz
and
adc
imul
or
das
adc
arpl
fisttpll
pop
sub
lods
xor
pop
addr16
rcrl
in
aas
nop
jo
jg
jle
outsb
arpl
sbb
bound
push
xorl
jnp
or
test
inc
std
jg
sub
adc
inc
lds
jo
pop
cltd
scas
sub
insb
lock
mov
popa
test
mov
mov
sahf
stc
nop
imul
mov
push
sarl
lods
push
jmp
push
je
mov
add
fsubrs
sub
cld
jl
cmovg
jg
movsb
aaa
sbb
adc
jnp
pop
push
fldz
nop
ret
popl
push
cwtl
mov
and
xchg
leave
lock
adc
jl
inc
pop
cmc
sbb
incb
lock
dec
in
xor
xlat
dec
xchg
adc
insl
jge
pop
dec
pop
js
lds
cs
dec
lods
mov
test
test
fcomps
pop
icebp
je
les
ljmp
daa
cmpsb
add
xor
call
adc
bound
loopne
movsb
sbb
roll
push
jl
mov
inc
cmc
out
decl
mov
sub
adc
pop
adc
loop
lods
mov
inc
dec
xchg
dec
jb
fistps
sahf
sub
adc
neg
push
dec
pushf
in
mov
stos
jne
std
inc
and
adc
dec
imul
cld
movsl
jl
shll
fbstp
push
nop
and
xchg
hlt
std
out
or
fmuls
cmc
mov
hlt
popa
fs
xchg
rorb
cwtl
fdivrs
push
jbe
fwait
push
ret
cwtl
movsl
and
and
mov
outsl
shll
sarb
lods
sub
inc
int3
sub
sub
jge
ljmp
fs
repnz
out
stc
adc
add
addb
pushl
roll
bound
inc
jno
rol
add
jmp
lret
cltd
mov
cli
lret
jle
push
jo
push
jo
hlt
sbb
or
add
jne
inc
or
loopne
dec
ljmp
cmp
jmp
push
jo
xor
pushf
or
dec
pop
pop
mov
push
inc
test
inc
cmc
xchg
adc
pop
cli
adc
jno
cld
mov
data16
cs
addb
clc
sub
mov
and
lods
cmp
sarb
insb
mov
dec
push
cltd
dec
call
sbb
lods
dec
add
aaa
test
add
add
add
pop
inc
loope
aaa
xlat
test
cs
outsl
mov
scas
out
fcomps
add
lock
cld
inc
pop
cmpsb
and
test
pop
roll
aaa
mov
cmc
pop
or
outsl
xchg
mov
sbb
jns
outsl
das
movsb
cs
ds
push
sbb
cs
mov
mov
mov
test
mov
adc
push
outsl
and
insl
xor
push
dec
pusha
nop
xchg
jle
jae
cmpsl
inc
leave
fs
ljmp
xchg
aad
cld
fbstp
daa
push
pop
push
sub
jb
mov
and
orl
ds
test
pop
bound
add
jg
lock
daa
or
aad
inc
adc
xchg
lods
incl
adcb
xchg
xorb
xchg
jo
rorl
cs
int3
leave
pushf
sbb
cmp
and
add
and
jns
adc
addr16
decl
sbb
imul
jecxz
adc
in
lea
jg
inc
fsub
or
incl
sbb
stos
icebp
pop
dec
sbb
mov
nop
icebp
push
jmp
hlt
and
cs
or
add
sub
push
out
cli
pop
mov
xor
out
popf
hlt
or
fcomip
aad
and
sbb
or
jecxz
movsb
in
xlat
and
fnstcw
les
sub
mov
sbb
loope
adc
sarb
mov
inc
add
pop
pop
loope
cmp
loopne
hlt
popa
pop
sbb
pop
add
or
cld
push
bound
inc
mov
clc
lcall
shlb
or
and
dec
add
push
jo
andb
or
jge
push
jo
cmp
push
fsubr
jne
test
add
xchg
and
es
mov
or
and
test
icebp
cmp
sub
cwtl
sub
popa
cld
aaa
xchg
lret
sbb
stos
mov
cs
das
ljmp
mov
pusha
or
and
dec
div
mov
pop
or
stc
test
jg
rcrl
jbe
out
adc
cmp
addb
test
loope
xor
mov
es
add
fs
out
movb
insl
lret
rclb
add
lahf
jle
arpl
sahf
xor
cmp
push
push
inc
lret
push
dec
clc
cmp
push
inc
xchg
fisttpl
mov
push
xlat
push
mov
sub
test
jg
inc
mov
rcr
sbb
xchg
add
sbb
mov
add
test
loope
add
ret
dec
cmp
dec
sub
call
sar
shrb
add
testl
shl
adc
incl
sbbb
mov
inc
jge
dec
mov
push
inc
pop
fldcw
add
adc
jl
mov
jecxz
xor
cmp
into
mov
ret
decl
pusha
pusha
nop
sub
lcall
jg
dec
hlt
jns
dec
jae
aaa
and
inc
daa
and
lock
sbb
mov
add
and
mov
js
and
and
es
fwait
and
data16
nop
inc
enter
popf
out
clc
sub
add
sbb
or
inc
shl
shlb
je
push
pop
dec
or
add
outsb
xchg
mov
enter
mov
xchg
sar
divl
lods
outsl
mov
in
stc
xchg
nop
mov
adc
das
cmp
and
push
nop
daa
icebp
xchg
push
or
pusha
ror
loopne
loopne
aad
js
nop
pushf
pop
mov
pop
jecxz
incl
cmp
dec
cwtl
outsb
loope
sar
repz
or
les
and
mov
subl
fsts
sub
stos
int
push
mov
outsb
dec
cltd
inc
jl
and
push
cmp
jg
xchg
sbb
andl
adc
push
cmp
int3
imul
and
fiadds
andb
lods
cld
push
test
mov
push
or
or
lcall
aad
pop
loope
stos
test
ss
nop
adc
aaa
add
cmp
and
in
mov
sub
inc
pop
jg
movsb
popa
out
add
and
add
stc
push
pop
sbbb
pop
push
jb
or
stc
mov
clc
jbe
loopne
cli
scas
push
lcall
cmp
or
icebp
data16
mov
mov
shr
scas
orb
jmp
push
xor
jmp
enter
cmp
outsl
or
inc
mov
lea
and
data16
push
shrb
lret
loop
cli
data16
and
mov
scas
pop
rcrb
call
lods
shlb
or
loop
loope
push
jmp
pop
nop
aam
sub
out
jp
pop
mov
cs
fs
test
sarl
mov
dec
cltd
inc
sub
xbegin
mov
xor
mov
xchg
add
in
in
inc
inc
push
loopne
test
mov
dec
insb
xchg
and
sub
adc
mov
shl
pop
push
dec
inc
daa
loop
xor
sbbb
ss
add
cld
scas
add
daa
pushf
and
mov
push
adc
stos
xor
or
xor
shlb
sub
stc
lcall
or
xor
jb
add
loope
jno
dec
sub
mov
lret
pushw
or
pushf
mov
lods
in
fnstcw
add
add
jecxz
jp
mov
adc
mov
mov
sahf
adc
js
jle
scas
cmpsb
aas
call
push
xchg
outsl
or
push
sbb
aam
and
adc
jg
inc
inc
scas
addb
fiaddl
test
aad
test
inc
dec
cmp
outsl
clc
aaa
push
jns
mov
xchg
adc
call
mov
roll
jbe
shrb
daa
aaa
or
and
les
cmp
nop
ret
dec
leave
js
jl
and
rorb
mov
in
adc
sbb
je
test
add
pop
icebp
pop
or
imul
mov
outsb
jg
rcll
cpuid
add
out
roll
mov
aaa
push
mov
sub
stos
lea
nop
in
inc
mov
fisttpll
ret
pop
hlt
call
loopne
mov
sub
lods
xchg
clc
les
stos
push
mov
add
or
cmp
or
push
test
dec
std
mov
std
movsb
cs
jo
hlt
inc
jmp
addr16
jecxz
clc
or
lcall
adc
add
mov
or
dec
adcb
out
mov
sub
jge
sub
cmc
pusha
fldl
push
cld
xchg
sbb
adc
add
pusha
jb
mov
popa
das
cs
and
cmp
loope
sub
test
or
jp
shlb
lds
enter
in
out
call
add
enter
dec
enter
mov
sbb
adc
fmulp
jge
stos
mov
test
or
dec
idiv
stos
test
pop
data16
test
test
add
adc
dec
add
add
js
test
ret
das
add
roll
mov
test
outsl
add
sar
ss
ret
lret
stos
dec
loopne
inc
aas
jmp
cs
daa
xchg
or
mov
mov
ret
push
lahf
mov
and
adc
ja
mov
lds
dec
cmpsl
out
xor
and
insb
pop
sub
ss
aaa
loopne
ds
pushf
jo
pushf
shl
xor
add
sub
and
std
daa
inc
test
adc
pusha
aas
jbe
pop
dec
or
test
ret
das
std
inc
jle
xchg
int3
adc
xor
sub
adc
rcrl
mov
pop
mov
jne
mov
in
jp
lock
in
pop
sarb
pop
sub
cmp
lock
lret
sub
roll
xchg
enter
adc
cmp
mov
dec
pop
ret
ss
adc
clc
pop
loopne
add
sbb
mov
cli
pop
sub
jb
mov
and
call
mov
popf
jo
cmpb
dec
mov
mov
js
jle
out
mov
pop
call
cltd
test
sub
pop
sub
pop
cmp
clc
push
adc
rolb
pop
in
sub
fildll
mov
add
adc
sbb
sub
and
cmp
xor
pop
and
pop
jo
add
add
dec
pop
sbb
push
push
add
jecxz
pop
jl
rorl
and
les
jmp
cmp
mov
rorl
roll
gs
sbb
mov
pop
cld
lea
xchg
pop
mov
adc
wrmsr
fisubrs
or
call
cmp
std
stos
mov
dec
cmpsl
addr16
and
mulb
xor
push
sbb
test
mov
ss
fcomip
decl
xchg
push
std
int
pushf
jnp
movsb
xor
xchg
pop
popf
inc
mov
cli
add
jae
push
or
lahf
sub
add
push
jns
fdivr
out
cmp
sbb
mov
clc
mov
cltd
in
and
xchg
inc
loope
jne
xor
shrb
mov
sar
aas
ljmp
pop
mov
cmp
mov
hlt
cmc
or
push
or
xor
sbb
call
add
and
mov
jo
loope
inc
sub
andb
mov
mov
movsb
sbb
dec
cmp
imul
popa
or
pop
test
xchg
add
adc
bound
xor
ja
pop
call
mov
add
xlat
cli
fildll
inc
sbb
lahf
shrl
and
and
xchg
test
ret
xlat
xchg
les
jl
inc
mov
adc
cltd
xorb
invd
push
dec
cmp
adc
sub
cltd
jp
inc
cwtl
les
xor
mov
negb
ljmp
and
jmp
inc
aaa
call
sbb
sub
scas
in
arpl
test
in
fs
and
xor
pop
xor
mov
pop
lock
sbbb
mov
push
bound
sub
imulb
call
sub
es
addb
pop
stc
add
add
cmp
or
sub
or
dec
lea
inc
aam
xchg
fsub
and
mov
cs
and
and
sub
incb
rcrl
fldt
cmp
lock
or
subb
ss
xchg
fs
mov
fmull
inc
cld
pop
jge
sbb
dec
ret
stos
in
in
ljmp
std
adc
mov
adc
mov
cmc
fbstp
sbb
sarl
sbb
leave
add
dec
or
aaa
cli
popa
cmc
sub
outsb
inc
push
movsb
push
lahf
sarb
cmpl
xchg
mov
inc
jne
cpuid
enter
add
inc
or
jb
xchg
sub
lock
xchg
and
lcall
mov
fiadds
jns
shl
jb
xor
cli
jp
in
in
push
movl
into
aas
sbb
sbb
or
test
rclb
xchg
sub
fiaddl
xchg
fiadds
mov
test
lret
leave
call
mov
push
fcomps
aam
hlt
pop
stos
outsb
or
adc
cmp
cld
sarb
inc
call
je
cltd
add
mov
andb
xor
sahf
sbb
popa
inc
sbb
jbe
mov
scas
xchg
cs
mov
daa
cs
addr16
cld
in
xchg
aaa
mov
call
jp
inc
and
xchg
mov
iret
push
and
call
jmp
shr
int3
cwtl
in
and
pushf
andl
mov
mov
push
sub
clc
push
fst
xor
mov
push
or
imul
shlb
scas
mov
loopne
xor
lret
inc
add
ds
neg
jle
sbb
negb
stc
leave
pusha
rclb
pop
test
jg
mov
ja
xor
xchg
imul
dec
ja
and
push
js
cld
cmpsb
mov
mov
shlb
mov
cmp
pop
stos
test
add
sahf
pop
aas
cmpb
cmp
out
into
sub
jecxz
cmc
pop
bound
and
into
icebp
sbb
jnp
and
hlt
push
incl
mov
cmpb
jle
aaa
inc
je
jp
les
imul
cs
adc
inc
mov
jl
and
push
jle
movsb
mov
incb
add
push
mov
ret
test
dec
xchg
push
es
int
rcll
or
test
cmpsb
jne
push
inc
arpl
mov
xor
jmp
adc
mov
insb
pop
sbb
popa
fs
clc
out
and
aad
dec
ds
mov
cmpsl
imul
and
pop
pop
mov
sbbb
adc
mov
out
mov
mov
divb
inc
enter
scas
fcoms
and
lahf
mov
pushf
pusha
sbb
lock
cmp
dec
or
shr
dec
mov
cmp
je
or
mov
pusha
cmpsb
incl
cld
subb
and
rcl
xor
test
and
push
lret
fisttpl
movsb
fbld
out
cwtl
mov
loopne
xor
inc
pushl
and
add
lods
fidivrs
mov
or
ljmp
add
adc
add
sub
xor
xlat
jmp
xor
dec
pusha
xor
sub
incb
and
rorb
sti
sub
out
jo
push
and
xor
in
rcrb
sbb
add
lock
mov
aaa
mov
ljmp
adc
fs
mov
sahf
out
sbbb
mov
push
pop
sub
push
dec
xorb
mov
xchg
cmp
outsl
outsl
pusha
repz
icebp
std
leave
mov
mov
inc
scas
rclb
mov
insb
inc
push
fisubs
cmp
cld
jmp
mov
push
clc
outsl
cli
cwtl
xor
pop
or
push
rorl
mov
push
push
jne
push
pop
frstor
mov
xchg
test
in
clc
xor
nop
fiaddl
inc
fcoml
out
jmp
pop
add
push
movsb
mov
jp
and
stc
pop
imul
loopne
cli
ja
dec
push
dec
in
pop
cmpsl
push
inc
mov
push
lret
mov
in
lahf
mov
and
mov
jbe
clc
decl
pop
add
call
mov
sbb
jbe
xor
sub
mov
call
testl
movsl
xchg
out
xchg
clc
or
inc
pop
aaa
inc
sti
js
imul
aad
sbb
push
jp
enter
push
dec
cmp
dec
jmp
std
dec
das
rclb
lods
pop
loope
sbb
dec
lret
jg
fsubrs
pop
add
push
mov
scas
jns
dec
fldt
xor
fwait
in
jbe
pop
popf
mov
pushf
jecxz
cld
or
push
xchg
imull
sub
cld
aaa
xchg
divb
jp
fwait
add
xchg
lret
jmp
cwtl
fs
xor
add
add
mov
dec
adc
fwait
hlt
cmp
rcrl
rdtsc
negb
mov
pop
mov
stos
jle
mov
in
stos
loop
inc
movb
mov
push
push
out
aam
ja
cmpb
dec
jl
in
cli
jmp
sub
repz
jae
in
scas
sahf
jbe
or
jo
push
jb
fistps
sbb
roll
add
je
cltd
addb
les
aam
sbb
mov
push
add
and
xchg
lods
sbb
add
mov
stos
fs
ljmp
mov
ss
jg
xchg
pop
lret
xchg
es
xlat
sub
stc
cmc
adc
filds
bswap
sub
pusha
test
xchg
xor
inc
es
clc
jns
test
add
insb
fiaddl
push
imul
fbld
popf
fstpl
cmp
mov
rcrb
mov
cs
ljmp
std
xchg
js
popf
dec
sbb
xchg
push
notb
ficoms
mov
cli
mov
dec
outsl
inc
jl
dec
cmp
bound
lcall
data16
out
das
mov
adc
sub
ret
xor
rcrb
or
cld
in
push
enter
inc
adc
movl
add
loope
daa
loopne
clc
cmc
pop
pop
cmp
add
add
mov
adc
add
mov
es
shlb
adc
nop
cmpsb
sub
jbe
loopne
ds
call
cld
jg
add
pop
inc
mov
push
leave
dec
pop
adc
xchg
adc
jl
or
insw
add
push
pop
and
pop
aas
mov
mov
mov
fs
inc
push
push
push
shrl
ljmp
xchg
and
shll
push
adc
or
jmp
jl
adc
jg
dec
incl
lcall
cmp
mov
inc
clc
les
stc
lcall
cmp
mov
pusha
mov
adc
adc
aad
or
loopne
aaa
pop
movsl
dec
mov
inc
popa
dec
or
leave
popa
cmp
ds
cld
dec
sbb
loope
sub
pop
mov
and
into
and
popa
jl
gs
in
or
scas
scas
out
leave
aas
imul
data16
push
je
mov
mov
push
sbb
movsl
xlat
pop
setno
roll
js
xchg
mov
adc
and
cmpsl
fcomip
dec
test
add
xchg
and
push
mov
mov
cmp
cmp
or
inc
rcrb
cli
inc
add
dec
pop
xchg
pop
pop
sbbw
sub
testb
test
dec
call
ret
and
lcall
std
das
std
lcall
test
sub
mov
xor
inc
add
xchg
cwtl
cmp
jp
push
adc
and
rcrb
lods
decl
inc
fs
std
inc
or
add
adc
add
lock
mov
mov
in
cmp
and
mov
inc
and
mov
pusha
lock
push
adcb
cli
and
imul
xor
out
aaa
dec
add
sub
mov
inc
fildll
gs
clc
insb
sbb
negb
andl
insl
rcrb
dec
mov
and
mov
cmp
insb
je
add
cs
mov
clc
inc
loop
lock
test
xor
mov
adc
cmp
test
xchg
fisubrl
sbb
mov
sub
jge
mov
stos
mov
jle
test
ret
adc
add
add
sbb
adc
adc
aaa
inc
or
mov
jle
in
fs
push
test
push
jl
enter
hlt
js
or
icebp
dec
or
dec
mov
push
jbe
mov
rorl
imulb
popl
std
sbb
std
mov
dec
push
les
setp
aas
push
sti
in
out
mov
cltd
outsl
push
mov
mov
shlb
movsb
mov
ficoml
mov
adc
jge
in
mov
call
mov
xor
pop
inc
lcall
popf
pop
or
cmpsb
imul
cli
outsb
add
adc
lret
data16
mov
adc
mov
lea
add
sbb
lock
lea
arpl
rolb
fmuls
mov
push
notl
mov
pushf
xor
mov
push
shl
sbbb
xchg
push
mov
pop
out
test
mov
mov
pop
daa
push
mov
fistps
push
int
sbb
out
push
subb
xlat
std
xor
cmp
push
or
call
sbb
adc
sub
sub
out
movsl
cs
in
add
test
add
pop
pop
out
nop
dec
push
mov
adcl
mov
add
movsb
in
jl
mov
and
arpl
adc
pop
xchg
dec
decl
lret
jbe
rcll
out
rolb
adc
adc
fs
addb
call
add
push
clc
insb
and
mov
sub
call
repnz
dec
fcmovnb
mov
loopne
decl
in
push
push
lods
adc
jmp
add
repnz
sub
xchg
cwtl
mov
mov
movsl
mov
and
imul
into
inc
lcall
lea
rclb
movsl
aad
xor
jl
or
lds
and
mov
adc
sub
bound
and
or
dec
movsb
es
jp
mov
xor
into
inc
jmp
and
xor
popa
mov
scas
adc
dec
jbe
and
loop
mov
xorb
iret
mov
int3
cmpb
icebp
addb
jns
inc
clc
stc
xchg
and
rcrl
fldl
cmpsb
es
ljmp
push
push
jns
cs
aaa
jmp
call
lock
mov
aaa
imul
hlt
pop
inc
mov
sbb
xor
pop
inc
test
cmp
or
add
add
sub
insl
incl
and
adc
ficomps
lret
cmp
lock
sarb
inc
dec
jb
pop
sahf
mov
cld
pop
jp
mov
cwtl
push
scas
pop
test
sub
movsb
push
push
icebp
orb
adc
adcl
std
rcr
and
add
rcrl
sub
in
inc
movsb
loopne
fisttpll
inc
les
lock
movsl
xor
ret
or
dec
jno
lods
decl
dec
sub
sahf
inc
orl
mov
in
push
loopne
mov
fisttps
and
cs
add
arpl
mov
xchg
lock
test
cmc
stos
jl
inc
adc
or
incb
popa
sar
xchg
clc
or
enter
pop
shl
repz
mov
pushw
xchg
aas
inc
mov
rcl
outsl
movsb
shr
xchg
mov
sbbl
xchg
mov
test
in
sbb
sbb
mov
mov
mov
mov
mov
sub
iret
or
adc
add
or
xchg
dec
out
sbb
mov
mov
sub
data16
nop
roll
or
dec
sbb
pop
or
pop
fsubrl
add
and
push
and
fsubp
adc
mov
pop
mov
adc
fiaddl
add
ret
ror
mov
data16
stc
inc
fcoml
jle
sbb
test
sbb
bound
or
stos
push
in
xchg
nop
jmp
out
cltd
scas
xor
sti
pop
cli
mov
mov
inc
dec
divb
inc
pop
clc
das
inc
arpl
in
shrl
repz
sarl
push
notl
sarb
or
cltd
stc
adc
fwait
mov
pop
sub
inc
enter
enter
bound
mov
test
cmpsb
jnp
mov
pop
shl
enter
jae
and
sti
aad
add
adc
mov
cmp
push
mov
add
insl
outsb
sbb
xor
dec
cs
icebp
add
adc
pop
lock
shl
pop
pop
sbb
ja
je
cld
shr
mov
lock
loope
sub
mov
mov
sarl
clc
mov
cmpb
sub
aas
iret
pop
adc
or
push
cmp
mov
filds
jo
add
out
or
lods
scas
jb
movsb
dec
test
inc
jge
ljmp
lds
stos
mov
outsl
dec
add
out
pop
push
mov
xor
cld
dec
test
insb
push
push
jbe
pop
jg
push
sbb
fsts
cmp
fiaddl
or
lods
or
or
bound
pop
sbb
adc
inc
mov
jmp
or
stos
int
push
pop
popa
sbb
adc
ljmp
aas
mov
xchg
cs
xchg
dec
fwait
sar
push
or
sti
imull
lret
dec
pop
loopne
in
lret
rcl
pop
cmp
scas
add
xchg
jge
jo
lock
push
aad
call
sbb
mov
cwtl
les
mov
or
push
adc
xor
mov
jns
arpl
add
into
lds
popf
pop
pop
adc
xchg
mov
les
mov
ret
sbb
mov
frstor
or
or
xor
adc
pop
mov
add
test
popa
mov
or
call
inc
call
push
xchg
xchg
cmp
mov
add
push
cmp
inc
cli
jmp
pop
mov
add
mov
incl
std
mov
xor
mov
es
sub
mov
mov
adc
aaa
sarl
loopne
sahf
imul
pop
mov
cld
fsubrl
out
in
icebp
ror
sti
in
sub
push
loopne
mov
push
and
mov
cmp
and
and
lods
jp
fdivr
or
mov
mov
adc
inc
dec
push
outsl
pushl
out
ja
add
sti
and
hlt
mov
dec
insb
ret
mov
sub
push
pop
mov
dec
sub
push
scas
xor
mov
jb
mov
adc
ljmp
ljmp
push
test
cmpsl
push
push
pop
mov
icebp
sbb
xor
fistpll
mov
movl
test
clc
or
cmp
rcrb
filds
aas
inc
fs
cmpsb
pop
test
aam
or
test
xor
cli
push
push
aam
inc
ljmp
inc
movl
adc
cmpsb
movsl
jmp
lock
inc
dec
repz
xlat
shr
popl
hlt
fistps
mov
insb
ficompl
sub
shlb
pop
sub
inc
cmp
inc
lcall
mov
sbb
fdivs
pop
push
jg
loope
lret
lods
xor
jmp
pusha
lret
fldenv
pusha
mov
out
cmp
add
test
add
les
mov
inc
inc
fildll
in
or
push
aam
mov
push
jb
pop
dec
mov
cmp
push
xchg
sbb
or
loopne
popf
clc
sbb
icebp
push
shrb
cld
outsl
icebp
pop
adc
and
dec
mov
xchg
mov
call
std
ret
insb
fildl
cld
xor
aas
test
xor
push
fisttpll
out
shlb
adc
fiaddl
dec
jge
adc
pusha
out
dec
or
push
mov
mov
ret
sub
push
xchg
fbld
outsl
jmp
mov
adc
jbe
push
shl
mov
mov
scas
mov
mov
mov
adc
fnstcw
movsb
aam
or
or
sar
incw
jle
or
cltd
lcall
jo
hlt
loope
jnp,pt
dec
ret
push
jnp
inc
cmpsl
pop
mov
jecxz
pop
and
push
sub
loopne
int3
add
xor
mov
inc
std
and
cs
out
loop
jg
cmp
mov
adc
cmp
jns
jns
clc
cli
ljmp
sbb
and
mov
push
fsubs
adc
js
mov
jno
call
jecxz
outsl
pop
rcrl
push
push
or
xor
sbb
test
jecxz
sbb
xor
sbb
cmp
jmp
mov
xchg
imul
fdivr
sbb
mov
je
jo
jge
push
inc
cmpsl
fmull
mov
imul
lret
sub
pusha
sub
or
mov
mov
rcll
mov
xor
push
pop
subl
in
icebp
out
mov
sarb
inc
cmp
and
jo
insb
inc
sbb
cmp
sbb
repnz
and
mov
add
scas
jnp
dec
or
add
into
shl
pop
nop
mov
les
jecxz
push
xlat
lods
neg
call
adc
lcall
aaa
mov
mov
cmp
xchg
jge,pn
xor
arpl
es
add
and
and
in
push
mov
imul
aad
push
cmp
xlat
push
lcall
push
inc
test
enter
into
mov
ret
dec
flds
mov
adc
rorb
inc
aas
cwtl
idivb
and
sahf
fisttps
mov
jl
jg
ret
add
icebp
or
cmp
xchg
mov
push
cli
mov
fisubrs
mov
aas
xor
in
sub
dec
inc
and
push
sub
testl
loopne
ss
jnp
test
mov
nop
xor
pop
or
or
sar
outsb
loopne
inc
push
pusha
int
push
and
pop
mov
scas
stos
and
mov
mov
je
push
int3
push
mov
leave
in
xor
push
cmp
sub
adc
fwait
xchg
mov
in
fbld
bound
cli
xchg
cltd
and
and
lock
adc
adc
je
loopne
pop
xlat
cmpsl
mov
push
push
inc
mov
ret
iret
adc
sbbl
fs
and
in
mov
mov
cmp
out
add
jp
cwtl
fisubs
mov
adcl
test
je
add
mov
lcall
dec
js
jl
test
ds
fisttpll
mov
jmp
jp
fisubrl
sahf
push
ret
xor
in
imulb
add
enter
push
mov
push
mov
pop
cmpsl
rcl
test
leave
jo
jo
jo
mov
lcall
and
mov
inc
mov
jle
cli
in
mov
fdivrl
addl
ret
ja
mov
mov
je
es
sbb
jb
shll
call
inc
lods
jb
mov
push
fstl
sub
jg
xchg
or
std
lock
lcall
xchg
int
and
decl
shl
shlb
and
ljmp
inc
pop
sbb
mov
push
push
lock
repnz
xchg
in
and
mov
push
mov
push
push
xchg
sbb
pop
movb
pop
dec
jl
arpl
push
ret
xor
lock
lock
xchg
cltd
jl
out
enter
nop
xchg
icebp
cmp
nop
xlat
fistl
lcall
pop
mov
incb
ss
mov
insl
push
fildll
lea
adc
push
notb
push
mov
jns
ss
push
shrb
pop
xchg
hlt
ret
inc
in
lock
out
sub
and
xchg
ja
xchg
out
add
add
sahf
push
or
sub
scas
xor
je
add
call
rolb
sbb
mov
cmp
imul
push
in
insl
sbb
test
jnp
insb
jecxz
lock
cwtl
sbb
into
insb
inc
or
pop
xor
movsb
testb
fwait
jle
lcall
pop
lods
cmp
add
mov
jno
push
orl
pusha
nop
xchg
imulb
in
das
pop
hlt
je
ret
xor
sbbb
and
pop
sbb
ss
fnstenv
push
insb
mov
lret
mov
add
add
icebp
out
les
jo
dec
fcoms
bound
lret
addl
add
ljmp
nop
es
movsb
into
or
loop
test
or
add
clc
cmp
test
push
sbb
imul
or
sti
inc
mov
pushf
test
mov
cli
stos
cmp
and
lea
sub
mov
xchg
xadd
push
mov
sub
ret
rol
bound
fs
adcb
insl
data16
or
adc
lods
callw
xchg
mov
loope
fs
mov
mov
push
bound
je
rolb
jnp
jo
mov
dec
add
xlat
dec
xor
mov
out
lcall
or
sub
ljmp
adc
fcoml
push
sahf
cld
sub
les
jg
pop
fwait
hlt
adc
nop
or
add
test
cmp
pop
clc
cmpl
and
inc
ret
cli
imul
or
mov
inc
and
pop
adc
ds
xor
add
sub
jle
mov
int
fcmovnu
mov
shll
lock
loopne
test
fisubs
lea
int3
ficomps
cwtl
aam
xor
loope
add
mov
std
scas
vmulps
add
xor
and
add
mov
mov
testb
mov
pop
jecxz
jle
enter
pop
lods
sysret
ss
lcall
mov
ds
int3
dec
mov
clc
packssdw
aas
pusha
and
adc
rorb
pop
add
fsts
dec
sbb
outsb
decl
xor
loop
xchg
addr16
xchg
push
cwtl
xorb
movsl
aaa
test
add
pushf
xor
loope
push
cld
incl
mov
jecxz
dec
inc
push
js
aaa
push
aam
sbbl
lcall
push
std
scas
add
mov
cltd
cmovns
adc
mov
jmp
ret
subb
or
pop
inc
dec
sub
and
adc
lcall
mov
pop
ret
ljmp
sub
icebp
inc
push
xorb
mov
pushf
adc
jmp
sub
test
mov
mov
mov
mov
jle
sub
or
push
out
lcall
lock
repz
pop
loopne
inc
out
jns
popa
cli
lods
inc
mov
add
mov
push
enter
push
pop
hlt
or
dec
pop
and
push
icebp
push
lods
sub
popf
sub
add
sub
mov
push
ljmp
enter
nop
lods
mov
and
inc
loop
incl
jbe
mov
jl
fld
cmp
xlat
scas
aas
xor
cmp
inc
insl
jb
hlt
mov
push
pop
lock
push
rcrl
addr16
in
xchg
ja
cmpsb
push
sub
push
push
xchg
out
sbbb
adc
das
xor
mov
pop
out
cmc
sarl
lcall
dec
pusha
in
add
out
mov
lea
push
add
mov
in
lds
cmp
mov
push
fs
sub
sti
mov
mov
or
ret
int
std
mov
pop
ret
pusha
jl
xchg
xor
xchg
clc
test
fisubl
iret
add
sub
inc
or
pop
ror
xchg
ret
xchg
es
mov
fsubs
cmpsb
jb
dec
mov
enter
imul
add
outsb
in
popa
mov
inc
xchg
sub
aaa
imul
out
lret
dec
aas
and
mov
jb
cmp
into
out
shll
or
cmp
hlt
out
call
fs
jbe
fsub
imull
mov
aad
mov
sbb
pop
dec
das
add
mov
imul
loopne
xchg
sti
das
clc
jecxz
add
mov
add
jg
xor
je
pop
push
cmp
es
push
adc
repz
cmp
fldl
decl
stc
test
test
ror
sub
xchg
aam
jmp
mov
gs
or
or
inc
and
pop
in
mov
out
out
push
xchg
push
dec
push
clc
int
mov
ja
rcr
clc
jae
and
pop
orb
sub
jp
cmpsb
push
fdivrl
fs
cltd
add
clc
mov
or
mov
stos
mov
cli
and
aam
jmp
dec
fcmove
jg
filds
mov
and
cmp
inc
idiv
test
roll
jl
mov
lods
js
inc
je
sbb
mov
aam
add
je
in
negb
pop
ss
enter
xchg
stos
rorb
stos
test
sarl
push
and
ds
call
movsb
dec
cmp
mov
sbb
pop
mov
pushf
mov
pop
cmpsb
jo
pop
or
pop
cmp
cwtl
push
pop
xchg
xchg
xchg
push
outsb
push
pop
sub
mov
incl
push
dec
and
xlat
sub
imul
and
cmp
sbb
sar
fistpl
xchg
push
push
sbb
outsb
enter
jp
add
cs
in
mov
shll
outsb
cmc
push
cmp
mov
sub
pop
mov
pop
push
subb
mov
adc
add
xchg
ja
push
scas
add
notl
aaa
cld
or
and
je
dec
cmp
push
imul
scas
ss
pop
arpl
std
aas
dec
cs
pop
inc
cmp
roll
les
sbb
jmp
pop
imul
hlt
or
jno
jl
sbbb
jns
test
mov
bound
sub
repz
gs
add
std
add
cmp
insb
inc
push
add
lret
and
mov
push
fsubs
sets
inc
icebp
add
pop
jns
mov
mov
dec
push
loop
xchg
fstpt
es
add
test
jge
or
pop
or
push
sti
dec
inc
test
dec
jmp
inc
mov
adc
stos
and
cmc
rorl
mov
lcall
aas
cmc
cmp
mov
icebp
add
sbb
mov
outsb
cmpsb
cwtl
mov
aad
jo
mov
push
aam
lcall
roll
cmp
push
ss
add
out
ret
add
jl
add
divps
and
aas
push
testb
rcl
outsl
nop
lods
incb
or
cmp
push
enter
mov
ret
loopne
adc
loop
and
xlat
xor
mov
jle
in
jbe
xchg
fstpl
sbb
jo
mov
adc
cld
pusha
dec
int3
push
mov
xchg
lea
jecxz
sub
inc
cs
cmpb
outsl
loope
push
fcomps
lret
jns
inc
jo
xor
adc
pop
scas
and
or
sbb
out
in
rol
divl
sbb
fmuls
in
aam
dec
std
xor
cmp
jl
sub
add
outsb
js
ljmp
push
xchg
fbstp
clc
and
outsb
ret
xlat
movsl
addr16
jecxz
mov
in
incl
jns
in
movl
rclb
mov
dec
les
jge
sarb
mov
fcoms
rcrb
or
in
outsb
int3
mov
jo
cmp
push
loopne
dec
sbb
lret
sbb
add
push
push
inc
jmp
add
js
cmp
loop
add
test
push
cmp
dec
in
sub
mov
push
jg
out
push
lock
pop
stos
mov
adc
adc
adc
int
push
sbb
jecxz
jae
add
pushf
aas
jle
daa
sbb
sub
adc
inc
pop
mov
js
adc
sbb
out
pop
sub
jp,pt
jge
sub
xchg
test
mov
ljmp
jo
ds
or
fldt
add
ja
xchg
xchg
imul
jb
inc
mov
adc
test
arpl
dec
cmp
sbb
outsb
push
pop
subl
mov
rcrl
nop
push
xlat
sbb
add
mov
mov
icebp
dec
cli
loopne
add
add
jbe
fsubrs
loopne
dec
sbb
cmp
mov
repz
lcall
int3
add
adc
je
sbbl
push
inc
cld
mov
in
int3
repnz
arpl
push
jg
mov
lds
jb
hlt
sahf
push
or
insb
push
or
pop
inc
push
and
xchg
fldenv
push
push
enter
sbb
inc
push
fldcw
pop
pop
aaa
std
adc
leave
fbstp
sbb
mov
fisubs
arpl
push
push
aas
nop
fisubrl
test
sbb
fs
ds
push
adc
mov
ja
dec
cmpsl
pop
jge
cwtl
dec
rorb
jl
ret
pop
jae
ss
or
faddl
lds
cltd
and
out
jg
in
lds
call
sar
push
cli
cmpsb
mov
push
fdivl
mov
cmpl
mov
lock
data16
popf
or
call
xchg
mov
movsb
cmp
cli
sbb
aaa
fnsave
fidivs
out
loope
cld
roll
pop
out
inc
loope
or
add
inc
mov
xchg
add
pop
sbb
dec
aaa
je
jmp
popa
mov
push
movsl
fnstenv
mov
repnz
inc
sub
fs
repnz
sub
push
jbe
push
pop
addl
inc
mov
pusha
cmp
testl
jmp
stos
ss
push
in
cmpsl
mov
pushf
dec
jge
jg
aaa
cwtl
sub
pushf
dec
rolb
dec
fs
mov
mov
scas
inc
and
scas
std
lahf
jg
mov
and
adc
mov
mov
adc
cs
es
add
adc
xor
lahf
pop
cld
cmp
les
sbb
xor
int
dec
pop
nop
add
add
sarl
mov
sbb
add
aam
adc
inc
sub
push
push
out
add
jmp
orl
dec
sbb
push
fmuls
arpl
test
dec
fs
mov
xor
inc
cmp
xchg
inc
iret
aaa
pusha
cwtl
push
mov
pushf
or
cmp
pushf
lcall
dec
fidivrl
icebp
push
test
jp
movsl
jecxz
aas
jp
fs
stos
jl
and
test
xchg
jg
inc
add
xor
iret
and
mov
jg
jne
sbb
cmpsb
sub
test
out
push
dec
sub
pusha
adc
add
pop
mov
xorb
mov
xchg
into
or
jg
icebp
sti
lods
jg
ret
std
out
push
sub
xor
int
loopne
adcb
pushf
adc
pop
push
push
hlt
push
xchg
clc
scas
fisubl
sub
sti
jb
ljmp
pop
xor
mov
dec
ret
pop
stos
ret
ret
dec
add
rcrb
sarb
and
dec
fs
daa
ja
idivl
adc
repnz
sub
sbb
ja
dec
lods
inc
cmp
js
bound
mov
jge
or
sahf
nop
mov
test
fstl
cltd
jg
andl
sbb
and
fnstsw
in
xor
inc
repz
sub
sbb
jl
orb
pop
fcoms
jmp
xlat
inc
add
movsl
add
outsl
test
cltd
ljmp
push
loope
add
xor
xchg
push
xchg
sbb
popf
aam
pop
sub
sbb
aam
push
daa
mov
jg
out
or
push
push
dec
mov
test
shrb
mov
aaa
clc
femms
inc
jae
sub
pop
addb
xor
xchg
orl
sbb
or
test
mov
scas
mov
lods
mov
cmp
rclb
hlt
xor
popa
shl
lahf
dec
mov
pop
fildl
dec
cmp
sbb
dec
loope
dec
lock
mov
and
lcall
insl
pop
or
and
cmc
cmpsl
jnp
pop
inc
xchg
adc
cmc
imul
push
je
sub
pusha
pop
push
add
scas
sbb
push
mov
xor
adc
clc
arpl
pop
add
ss
sub
loop
sub
cmp
aas
inc
mov
adc
fimull
les
pop
test
test
es
mov
mov
cmp
ljmp
mov
out
sarl
mov
cli
sti
scas
aad
mov
jmp
outsb
fistps
fs
js
imul
ja
mov
or
adc
cmpsb
sbb
test
sub
aaa
mov
sbb
push
in
xchg
lock
repz
outsb
out
ljmp
xor
pop
sti
xchg
push
push
aam
dec
adc
inc
xor
in
push
in
fs
dec
and
cmc
sub
pusha
sbb
mov
pop
test
call
inc
cmpsb
inc
js
rcrl
mov
imul
in
les
and
test
pop
sub
pop
adc
fcomip
orl
or
push
ds
rolb
sbb
inc
insb
je
sbb
mov
sub
imul
in
fcomp
test
aas
push
sub
sub
mov
adc
les
sub
sub
mov
add
std
popa
ss
not
cmp
inc
pop
mov
rcrl
push
mov
lods
or
ljmp
call
xchg
mov
adc
push
lds
add
inc
in
call
or
jbe
or
ljmp
dec
pop
fcmovb
cmp
jmp
add
insb
loopne
leave
test
inc
stc
ljmp
push
adc
jns
push
fwait
pop
dec
adc
add
sbb
adcb
inc
ljmp
push
in
xchg
sar
orb
sbb
or
in
imul
mov
pop
arpl
xchg
push
or
fcmovnbe
fildl
xchg
sub
xchg
test
clc
add
pusha
dec
mov
lret
pop
dec
mov
ljmp
push
in
xor
inc
push
je
inc
je
mov
hlt
jo
rcrb
pop
xlat
mov
xchg
fxch
push
loop
xlat
cli
aas
jmp
sub
adcb
js
mov
cwtl
test
mov
pushf
mov
imul
add
sub
xchg
sub
inc
adc
inc
inc
outsb
in
insb
mov
inc
add
xor
sbb
dec
add
add
cmpsb
push
scas
gs
pushf
add
push
fnop
xchg
sub
rcrl
ljmp
xor
mov
inc
fsubrs
int3
test
or
and
setle
adc
test
mov
inc
and
pop
xor
adc
xor
enter
push
movsb
and
int3
loopne
jbe
mov
or
dec
or
or
outsb
sub
and
push
in
mov
add
cltd
insl
repz
mov
xchg
xchg
add
and
aad
pusha
int
hlt
dec
xchg
adcb
or
jle
adc
mov
rorb
lods
and
or
int3
push
inc
adc
and
test
cltd
inc
popa
dec
xor
pop
or
xorb
or
mov
fisubl
xchg
adc
out
mov
int3
or
fimuls
in
ds
pushf
adc
sub
xor
test
lret
and
mov
pop
andb
sbbb
mov
and
shll
out
sbb
add
or
movsb
mov
data16
pop
pushf
sbb
into
or
enter
stos
sub
xor
out
and
cmp
stos
call
or
or
loop
aaa
pop
rclb
dec
mov
pop
mov
imul
mov
insw
inc
lods
and
clc
js
inc
sbb
orb
cmp
dec
or
inc
popa
movsb
push
out
in
nop
inc
pop
test
int3
fimuls
sahf
sub
movsb
cmp
xor
data16
and
or
cmp
push
pusha
sub
test
xchg
enter
test
nop
test
lods
dec
or
pop
add
push
add
mov
sbb
and
or
mov
test
nop
in
mov
into
test
cwtl
or
adc
pusha
xor
pop
or
fcoms
test
inc
outsb
rolb
fld
adc
and
push
sub
test
out
nop
push
push
into
testb
pop
push
and
mov
cmp
mov
sub
les
cmp
xchg
mov
cmp
sbb
int3
fcmove
cwtl
push
add
imul
les
mov
jp
mov
or
sahf
loop
dec
xorw
cmp
adc
push
xchg
and
adc
adc
adc
xchg
jecxz
je
sbb
adc
add
mov
int3
lcall
pushf
inc
popl
pusha
dec
mov
data16
dec
jl
push
xchg
test
rdpmc
cwtl
loope
cmp
rcrb
int3
pusha
btr
mov
mov
cmp
xchg
cltd
popf
push
nop
mov
mov
xor
ret
int3
mov
cmpsb
push
xor
shrb
xor
sbb
nop
iret
push
jbe
xchg
sbb
and
adc
jnp
add
ret
adc
out
mov
testb
xor
rolb
into
mov
roll
lcall
or
dec
cld
xchg
rcrl
sarb
dec
cli
push
or
inc
add
or
fmulp
sar
sbb
inc
jo
inc
pop
xchg
test
pushf
or
xor
adc
mov
add
inc
adc
jnp
fdivrs
and
sbb
lret
push
fcmove
dec
and
xchg
sbb
mov
or
cmp
pusha
or
jge
add
xor
mov
sub
dec
pusha
pop
xor
je
inc
mov
and
call
mov
and
pop
cmpb
cmp
inc
and
xor
data16
shl
int3
lcall
pop
xor
pop
adc
mov
cs
icebp
jne
movb
or
and
enter
adc
ss
jbe
jb
adc
add
pop
or
mov
nop
mov
ret
mov
push
cwtl
enter
dec
or
testb
stos
or
add
rcrb
mov
addb
xchg
mov
lret
mov
sbb
and
inc
and
mov
xchg
push
xor
pop
jbe
dec
pop
jl
adc
or
ror
enter
in
nop
or
imul
int3
loopne
jb
aaa
or
popa
jo
icebp
andb
push
mov
inc
daa
xchg
and
mov
adc
mov
inc
jae
pusha
scas
inc
xchg
sub
pop
xchg
mov
add
nop
out
in
stos
push
out
mov
fwait
pusha
jo
xor
dec
or
push
enter
dec
mov
or
sbb
push
push
bound
out
insb
andl
popa
addr16
pushf
dec
cmpsb
inc
adc
cltd
loopne
es
sub
cs
adc
rclb
push
inc
xor
bound
sahf
xchg
pushf
adc
bound
xor
cmp
ja
cmpb
cmp
js
add
and
push
xchg
xor
test
shll
push
add
lock
sub
ficompl
dec
add
jnp
jne
fisubrs
mov
or
or
nop
xor
mov
rolb
in
jle
inc
adc
gs
and
xchg
ret
sub
out
fdivrp
xor
shl
cmp
test
mov
shrb
ret
insl
enter
adc
jmp
scas
pushf
adc
add
push
test
push
paddusb
mov
inc
mov
sbb
xchg
and
cmpb
sbb
or
leave
mov
mov
pop
cmp
sbb
push
push
test
add
xor
and
sbb
das
dec
push
and
adc
les
push
test
in
into
xorb
fldl
lds
jp
shl
push
ss
outsb
and
mov
pusha
or
enter
jbe
fxch
xchg
jbe
mov
dec
and
push
mov
inc
jo
sbb
insb
jno
pushf
rcrb
repnz
in
inc
mov
dec
push
mov
addl
dec
inc
cwtl
pusha
push
xor
arpl
inc
add
push
pushf
nop
cmp
pop
or
in
inc
addb
mov
and
push
mov
pop
into
jle
pop
test
pushf
push
cs
scas
xchg
push
int
push
mov
xchg
jns
scas
dec
inc
rolb
jae
or
inc
xor
stos
and
push
add
xchg
inc
sub
cmpsl
adc
push
ds
enter
pop
and
nop
mov
dec
dec
data16
fs
push
cmp
and
in
dec
nop
add
jl
es
adc
or
enter
jbe
in
inc
subb
sbb
jb
dec
cmpsb
test
push
push
scas
adc
cwtl
mov
dec
orb
adc
jl
sbb
out
test
clc
push
dec
mov
push
or
add
push
and
push
adc
outsb
fiadds
adc
mov
or
xchg
or
jbe
shr
rolb
dec
shlb
fisubrs
loope
sahf
pusha
je
roll
mov
adc
andb
shlb
ss
aad
mulb
or
add
int
inc
add
and
fcoml
sti
inc
test
int
es
adc
inc
pop
or
xchg
lret
add
pushf
add
xor
shll
mov
or
lds
cmp
cmp
push
add
pushf
popf
inc
xor
mov
pop
dec
pop
adc
andb
and
dec
faddl
test
data16
inc
mov
out
cmpsb
mov
sub
data16
subb
or
sbbb
push
mov
sarb
pop
cmp
push
xor
scas
inc
mov
mov
ret
loopne
jo
hlt
leave
aam
aad
inc
fdivs
nop
xor
shl
sub
lods
arpl
test
shl
pop
xor
call
inc
add
shr
hlt
loop
push
insb
rolb
xchg
inc
sbb
stos
and
les
test
push
push
xchg
dec
data16
jb
and
sbb
data16
call
mov
xor
shl
fsubr
or
inc
lock
orb
inc
xor
xor
pop
xadd
cld
jb
mov
adc
push
xor
adc
dec
push
rorb
pushfw
adc
out
test
inc
pusha
push
nop
imul
dec
push
dec
sbb
int3
mov
push
dec
sbb
loop
ds
mov
dec
pusha
mov
cmp
inc
pop
cwtl
popf
push
mov
jl
in
mov
or
xor
mov
mov
sbb
mov
inc
dec
sbb
loopne
lret
gs
mov
add
inc
cwtl
dec
mov
jne
or
jo
leave
add
jb
incb
sub
fs
out
inc
dec
sub
sbb
stos
and
push
or
push
lret
and
outsl
or
es
pop
dec
push
cwtl
add
or
incb
cmpsb
cld
push
or
call
popa
adcb
pushf
cld
and
push
add
inc
ficompl
xchg
xor
cld
and
jmp
adc
sbb
fnstcw
cmp
push
add
push
ret
fdivrl
shrl
and
xchg
sbb
adc
mov
int3
add
cltd
xor
adc
add
shlb
and
decb
adc
and
xchg
ficompl
es
cmc
jp
or
into
int
xor
ss
xor
and
adcb
shrb
shlb
es
adc
mov
inc
loopne
jle
addb
mov
shrb
mov
loop
in
adc
jp
add
imul
cmp
push
loopne
mov
adc
lret
subb
push
fmuls
nop
adc
cltd
push
and
shlb
add
js
lea
push
mov
dec
popa
or
dec
into
dec
cltd
loopne
sbb
push
daa
xor
sub
addb
xor
push
cmp
ret
or
jae
add
adc
xchg
pop
mov
cmp
into
fiaddl
lods
sbb
pushf
and
aam
inc
xor
scas
popa
dec
ljmp
sbb
adc
dec
iret
push
push
xor
sub
movsb
test
mov
cmp
xor
pop
xchg
sbb
push
nop
push
mov
add
pushf
xchg
shl
sbb
sbbb
adcb
push
mov
mov
dec
inc
ret
arpl
and
sub
xchg
stos
pop
pop
xor
es
sub
cmp
loope
lea
js
lcall
dec
nop
in
popa
jo
fs
in
pop
add
xchg
xor
leave
and
or
mov
mov
inc
clc
xchg
mov
pushf
lods
sub
xchg
ret
cmp
nop
push
sub
sbb
les
dec
fisubrl
push
arpl
cmp
sbbl
xor
and
rclb
sbb
enter
fiadds
sub
inc
jb
mov
inc
add
xchg
mov
cwtl
cltd
sbb
cmp
or
pop
sbbl
push
cs
push
push
add
faddp
xor
cmp
push
aam
loopne
lds
pop
icebp
or
addl
loop
or
jb
lock
jbe
mov
mov
shlb
push
mov
popa
xchg
xchg
sbbl
add
ret
loope
xchg
pop
fdiv
in
mov
push
or
adc
and
or
loopne
shl
sbb
sbb
jb
orb
sbb
xor
sub
or
and
cmp
pusha
ret
dec
sbb
cmp
mov
ret
fisubl
ss
jno
sbb
push
add
cltd
popf
cltd
call
rorb
gs
push
mov
sbb
outsb
inc
loopne
sub
out
mov
leave
push
xlat
add
push
adc
lret
mov
das
add
mov
sub
push
arpl
and
sbb
or
popf
jo
mov
inc
or
test
nop
mov
jo
and
dec
outsb
or
or
rorl
ss
cmp
mov
imulb
xor
jbe
xor
test
adcb
dec
and
or
stos
xchg
fcoml
mov
lods
or
bound
addb
lea
xor
dec
push
stos
cmc
mov
loop
subb
or
xchg
push
xor
push
daa
out
and
pop
mov
push
mov
xor
inc
or
push
cmp
inc
jl
and
stos
insb
xor
dec
or
cmp
outsb
inc
adc
mov
pop
rorb
push
push
rorb
stos
add
mov
xor
test
into
pop
ret
and
pop
dec
jle
mov
and
adc
xchg
add
xchg
mov
cmpb
push
rorb
add
aam
call
mov
adcb
mov
xor
aaa
dec
sub
leave
jle
push
scas
pusha
sub
mov
xchg
lea
sbb
mov
add
push
inc
inc
adc
xor
pop
mov
sub
out
add
xchg
mov
arpl
and
add
pushf
je
cltd
icebp
xchg
subb
cli
test
add
test
leave
mov
sbb
jle
add
lret
ds
mov
data16
add
sub
pop
add
mov
add
or
call
inc
mov
cmp
push
into
pushf
lock
das
adc
clc
push
or
push
es
inc
sahf
negb
mov
inc
enter
push
shlb
test
mov
pop
and
mov
sbb
or
scas
push
mov
mov
jno
push
inc
add
jecxz
push
mov
or
stos
stos
subb
les
pushf
or
les
ret
mov
rorl
dec
incb
and
jb
mov
adc
xchg
or
mov
aam
or
shrb
into
int3
les
push
inc
shlb
jo
or
sub
xor
add
and
add
and
hlt
jo
add
cmpb
sahf
popf
les
inc
and
pop
incb
jp
les
and
mov
inc
scas
xchg
dec
add
lock
adc
in
lret
jmp
mov
in
or
cmp
and
fs
clc
loop
and
or
mov
idivb
sub
lods
jo
push
sbb
add
pop
mulb
adc
push
mov
movsb
add
popf
outsb
in
les
sub
jo
sub
adc
sbb
into
test
xchg
push
or
pop
sbbb
loop
sbb
loopne
mov
hlt
jb
push
pusha
cmpsb
cmc
mov
xor
cltd
mov
or
mov
movsb
sbb
pop
add
pop
nop
push
int3
mov
pop
dec
add
test
testb
pop
test
pushf
sbb
dec
push
leave
add
rcrb
mov
prefetchw
xchg
rolb
or
data16
inc
sbb
dec
sub
xor
xchg
fs
scas
jo
cwtl
negb
into
jp
pop
xchg
cltd
sbb
and
subb
jne
mov
lret
ret
js
sahf
pop
mov
and
push
inc
addb
or
inc
jp
fsubl
adcb
push
mov
mov
shlb
cmp
movsb
fidivrs
sub
jl
cmp
cltd
cli
push
xchg
cmp
dec
inc
inc
adc
adc
cli
cmpb
xchg
rcrb
push
cmpsl
sbbl
dec
bound
sbb
test
xor
rolb
cmpsb
sbbl
mov
push
mov
cmp
orb
pusha
shlb
insb
in
aam
clc
jle
xchg
push
or
adc
in
xchg
in
xor
pop
js
mov
add
test
inc
es
jo
mov
sub
fs
fmuls
jbe
jb
push
cwtl
xor
add
push
mov
nop
lret
pop
push
enter
xchg
push
faddl
xor
mov
pop
imul
outsl
cmp
mov
addb
xchg
mov
mov
cmp
ret
xchg
inc
mov
xor
jb
int3
pop
push
outsb
ret
shlb
or
in
addb
ljmp
add
xorb
push
dec
jo
or
push
jle
aam
aaa
sbb
and
push
xlat
loopne
test
cli
push
cmpsb
sbb
xor
sbb
push
arpl
mov
jle
ret
push
rorb
mov
or
mov
xchg
jb
in
jmp
add
and
push
jmp
adc
dec
jle
inc
mov
or
dec
cmp
pusha
popa
movsb
cs
pop
inc
dec
add
dec
adc
add
loopne
loopne
pusha
pop
pop
or
mov
sbb
mov
add
divb
mov
sbb
insl
jb
lret
int3
dec
dec
push
shrl
shll
push
pop
cli
notb
xchg
adc
jo
add
push
cwtl
addb
cltd
lods
pop
push
or
addl
mov
mov
adc
and
test
or
jle
xor
pop
jb
sub
sbb
loop
push
rol
jmp
loop
mov
sub
xchg
mov
sub
je
cwtl
in
scas
sub
ljmp
int3
push
or
mov
pop
test
adc
push
mov
or
push
ret
xchg
adc
inc
jns
add
sub
and
gs
add
or
push
push
adc
add
scas
cmpsb
jne
les
inc
dec
add
dec
dec
add
mov
add
push
push
inc
inc
add
push
add
push
add
push
add
mov
ds
repz
mov
push
mov
es
mov
cs
mov
out
pushl
dec
movsb
mov
add
flds
pop
mov
fiadds
inc
mov
inc
mov
dec
pop
ret
pop
out
imull
add
repz
pop
pop
les
incl
dec
icebp
push
ss
int
dec
repnz
repz
hlt
pop
cmc
pop
div
cld
mov
lds
data16
cld
add
es
mov
imul
cld
add
imul
into
leave
jmp
outsb
lret
jb
jbe
push
jo
xlat
insb
mov
push
jae
jne
ja
xor
push
jns
jle,pt
repz
jp
jp
int
repz
jl
jge
jg
jg
popa
test
gs
push
outsb
cli
jno
fildll
je
ja
xchg
lea
nop
ja
add
jnp
xchg
jnp
add
insb
dec
add
addb
stc
mov
pushf
incl
or
cltd
cltd
add
xchg
cmp
mov
sti
push
xchg
add
push
mov
xchg
add
xchg
fwait
add
loopne
add
mov
add
ss
push
int
insl
outsl
iret
push
sar
test
push
test
push
xchg
xchg
insb
ss
rorl
rorl
mov
xchg
rcrb
rolb
xchg
aad
mov
mov
xchg
xlat
xchg
push
xchg
xlat
push
xchg
fcoms
mov
pushf
shll
cltd
fcomps
cltd
ficompl
in
ja
sahf
push
mov
xchg
lcall
sub
jge
cltd
sahf
mov
repz
dec
sti
mov
pop
fisubs
cmpsl
fcoml
cmpsb
stos
out
cmpsl
jge
lods
filds
scas
mov
mov
insb
lahf
scas
mov
cs
mov
mov
mov
mov
mov
fwait
dec
int3
add
movb
int
aad
ret
call
cmp
dec
int3
ret
leave
inc
into
iret
repz
out
rcl
push
out
pop
jge
fstp
push
lret
repnz
in
in
push
es
mov
idiv
repnz
clc
add
stc
cli
xchg
push
rcrb
mov
in
xor
pop
jno
cmp
scas
dec
bound
add
pop
lret
pop
add
add
jmp
and
popa
pop
add
nop
xchg
xchg
xchg
xchg
xchg
xchg
ss
stc
call
movsb
stos
lods
lods
mov
mov
aas
add
sbb
daa
daa
das
xor
xor
aaa
cmp
cmp
jne
orb
and
dec
jbe
js
jl
addb
mov
popf
xchg
mov
jg
inc
fwait
add
cmpsl
test
mov
mov
mov
pop
in
inc
fwait
inc
inc
dec
dec
dec
dec
jae
jns
jge
addl
stc
mov
add
incl
cmpl
in
std
dec
xchg
add
mov
das
rorb
sbb
pop
imul
mov
pop
cmp
cmpsl
mov
les
lret
lret
lret
outsb
imul
aas
popa
sti
add
inc
stos
pop
mov
cmp
notb
jge
xchg
leave
lret
insl
push
in
cmp
mov
push
outsb
or
popf
pop
xor
cmpb
lcall
insw
or
cmp
mov
inc
popa
ja
jle
xchg
sbb
arpl
call
or
pushf
mov
mov
imul
in
aam
xor
popa
dec
fwait
pop
pop
popa
mov
scas
mulb
push
cmp
js
mov
jle
pop
add
xor
adc
popa
dec
fwait
jbe
mov
xor
arpl
pop
popa
dec
jbe
sahf
insl
pop
das
xchg
mov
cmp
shr
inc
fwait
dec
daa
xchg
mov
daa
jbe
add
dec
daa
xchg
sbb
add
fiaddl
es
lret
inc
fwait
dec
es
addl
shl
ret
fwait
inc
and
or
pop
pop
add
and
stc
fwait
outsb
add
xor
cmp
xchg
fimull
jnp
arpl
lods
and
std
or
xor
adc
adc
pop
sbb
add
jg
sub
sub
mov
sub
sub
sub
inc
push
push
push
push
pop
adc
aas
add
ficomps
add
js
dec
xchg
into
sbb
mov
into
add
add
jae
adc
and
inc
add
mov
rolb
and
add
xchg
incl
and
jo
and
testb
mov
pushl
add
mull
mov
xor
js
xor
cmp
in
jbe
ja,pn
subb
xor
add
int3
push
das
add
pop
xor
cmp
das
or
mov
xchg
orl
cmp
xor
jae
aaa
jae
pop
stc
and
add
sti
add
mov
add
into
pop
ret
cs
dec
mov
inc
push
insl
xchg
add
fsubrl
pop
add
add
add
mov
add
daa
add
ss
lahf
ss
add
inc
inc
push
dec
add
sbb
idivb
pop
pop
pop
push
jbe
push
add
stc
fildll
push
pusha
push
add
or
add
adc
outsb
jno
mov
jns
jl
je
jg
and
cmp
inc
cmpsb
lcall
push
cmpl
adc
add
pop
addr16
fbstp
dec
dec
inc
into
inc
dec
dec
add
dec
add
dec
add
aaa
xor
push
xor
dec
push
outsb
dec
push
pop
add
push
pop
pop
push
push
push
push
pop
push
push
push
pop
pop
outsl
mov
incl
pop
pop
pop
add
pusha
push
popa
pop
popa
add
mov
pop
pusha
push
pop
fs
arpl
es
imul
insb
add
jo
jo
jne
idivb
jp
jle
ja
aaa
ds
jnp
test
mov
add
jnp
push
cmpsb
stos
mov
dec
idivb
lea
or
add
je
push
ss
push
jae
jp
sbb
lds
mov
mov
les
cmp
or
adc
mov
push
or
in
insb
jle
push
adc
pmuludq
add
and
add
testb
xor
mov
mov
into
xchg
mov
pop
mov
mov
mov
inc
lea
nop
jns
into
jge
push
push
outsl
mov
push
sahf
push
pusha
test
push
lahf
movl
sbb
adc
ret
scas
and
fadds
xor
sub
mov
push
xor
sarb
push
adc
out
add
fnstcw
fucom
ds
and
jmp
in
repnz
testb
pop
rcrb
mov
push
out
testb
repz
add
or
idivl
test
lea
xchg
orb
test
dec
mov
popf
cltd
sahf
fisubrs
mov
add
sti
decl
lcall
add
stos
mov
lcall
data16
mov
mov
push
mov
mov
repz
mov
add
mov
mov
cwtl
add
sarl
mov
add
fsub
push
mov
in
mov
mov
mov
add
repz
add
add
ficompl
scas
filds
rcr
add
es
fcmovnbe
jle
out
jmp
lret
push
mov
fidivl
ret
mov
fimuls
jecxz
aam
roll
mov
mov
push
fucomp
shrb
in
push
push
in
cs
imul
ret
jmp
lock
ret
fisttpll
sub
leave
in
push
loop
enter
into
ljmp
mov
jmp
add
in
lock
out
out
mov
scas
mov
out
push
fcomi
push
aad
decb
mov
out
out
repnz
jmp
jecxz
ljmp
add
repnz
loope
in
idivb
jecxz
ror
icebp
mov
stc
repz
add
std
dec
ds
addb
repnz
enter
xor
add
insb
orb
rcrl
cmp
ss
ja
cld
pop
imul
or
cmp
std
adc
or
daa
sub
add
sub
pop
or
push
sti
push
adc
cmpsl
or
stos
lods
scas
lods
add
push
outsl
xchg
es
pop
sbb
leave
or
or
psubd
faddp
rolb
jbe
or
stos
cmp
mov
pop
mov
dec
or
add
or
or
pushf
sarl
lods
das
jbe
pop
dec
sbb
add
or
or
fdivs
pusha
lds
fadd
cmp
mov
adc
dec
jecxz
out
call
mov
push
loop
or
lods
or
fadd
cmp
dec
out
jbe
adc
mov
push
in
out
imul
push
daa
fadd
cmp
mov
mov
ret
std
ss
call
cmp
dec
sbb
sti
mov
daa
out
pop
or
mov
push
dec
lock
add
daa
pop
cmp
aaa
jae
fwait
pop
or
add
jg
bound
push
loope
loope
in
jmp
daa
mov
sub
or
jmp
addr16
push
cli
add
stc
jg
mov
imulb
pop
loope
sub
pop
dec
adc
push
mov
mov
nop
or
xor
xor
sub
or
cmp
jo
lcall
pop
adc
int
into
or
daa
into
das
jmp
inc
div
cld
cld
stc
fdivr
cmp
xor
jb
or
mov
das
clc
lods
lea
inc
fwait
pushf
cld
add
das
xchg
cmp
loop
pushl
inc
inc
popf
into
std
add
lahf
popf
inc
xchg
jnp
js
or
pushl
das
jbe
pop
pop
dec
fmuls
in
repnz
cmp
popf
cld
test
call
inc
jns
or
or
cmp
cmpsb
rorb
rorl
aad
flds
mov
in
lcall
mov
mov
xor
daa
aad
cmp
dec
imulb
ljmp
daa
fldcw
repnz
inc
cli
mov
loopne
int3
pushf
inc
aaa
repnz
jg
fmull
cmp
or
or
sub
inc
cli
mov
icebp
dec
sbb
popf
hlt
aaa
fsubl
xlat
jg
dec
sbb
pop
aam
xlat
sub
inc
cmc
scas
mov
fistpl
cmp
jg
bound
dec
push
fisubrl
fildl
mov
int
cmc
imul
cmp
sti
mov
xchg
mov
fidivrl
fcompl
repz
test
fimull
or
push
outsb
xor
mov
xor
cmc
add
mov
sub
pop
push
sbb
or
inc
fldl
faddl
fisubrl
in
mov
fstpt
push
add
movsb
or
xchg
sub
cmp
pop
mov
mov
jp
jl
or
in
push
cld
ret
mov
pop
sub
repz
insl
cmp
pop
adc
add
daa
movsb
imul
dec
cmp
pop
outsl
orb
or
xchg
mov
pop
push
popf
pop
push
jg
dec
xchg
insl
push
inc
mov
add
fnstcw
sub
mov
test
pop
jle
mov
mov
or
inc
das
cmp
fists
mov
daa
inc
or
cs
mov
inc
xor
loope
sbb
int
mov
scas
aaa
jno
cmp
add
pop
cs
add
test
cmp
adc
call
test
add
ret
int
rcr
add
push
mov
in
add
div
push
add
mul
mov
xor
mov
lcall
mov
or
fstp
add
in
fucom
pcmpeqd
lock
push
es
or
mov
mov
outsb
jle
adc
stos
cltd
mov
ja
scas
xor
push
pusha
iret
sub
data16
add
push
push
sbb
adc
add
add
push
fsubrs
or
push
or
ss
cmp
fwait
in
lahf
add
inc
push
sub
cs
int
fldt
xor
cmp
insb
ss
lcall
push
dec
push
add
dec
dec
push
dec
imul
push
jo
ja
and
insb
add
push
divb
ds
jge
fs
je
pusha
jns
inc
add
or
push
add
add
insb
add
pusha
add
fs
fcmovne
data16
je
push
push
outsb
outsl
jle
fwait
xchg
add
js
jp
add
jl
sbbb
rorl
or
mov
insb
jle
stc
mov
cmp
roll
cmp
fstpt
mov
add
xchg
add
xchg
add
insb
ss
int
movsl
add
add
add
add
mov
mov
mov
mov
cmp
add
mov
leave
or
ret
ret
ss
int
add
add
add
add
add
data16
insb
add
add
add
add
insb
ss
int
iret
add
add
add
add
int
mov
add
add
add
add
add
insb
fildl
faddl
fldl
fiadds
loopne
int
mov
loope
loop
jecxz
in
in
fldcw
call
add
ss
int
add
add
add
add
add
fldcw
push
add
cmc
add
fwait
int
mov
testl
cli
add
xor
cld
xlat
jge
mov
add
cltd
or
and
adc
add
jge
mov
add
pop
xor
addl
das
inc
dec
imul
dec
inc
das
das
inc
add
scas
std
mov
jbe
dec
dec
dec
add
add
jl
push
xchg
sub
xchg
sbb
inc
cmp
inc
inc
jae
pop
mov
nop
ja
jl
je
jl
jge
xchg
mov
adc
pop
push
add
pop
je
jbe
jbe
int
jg
jge
addl
xchg
test
jge
jle
jne
popa
adc
cmp
aas
and
jo
jle
mov
mov
mov
xorl
pop
pop
pop
pop
popl
jbe
pop
jb
jne
jbe
addb
sub
outsb
pop
jle
xchg
repnz
and
or
bound
test
or
mov
fisttps
push
pop
jle
adc
jne
ja
addb
xchg
sub
jl
cmpb
ja
jl
adc
xor
pop
mov
subl
jbe
mov
jle
ja
pop
inc
adc
fstl
jb
jbe
imul
jp
dec
sub
inc
mov
push
jbe
imul
ja
inc
adc
add
sbb
imul
imul
sub
ljmp
fdivr
pop
push
dec
dec
push
pop
pop
cmp
pop
dec
and
jge
dec
inc
pushf
dec
push
jbe
dec
daa
push
sbbl
addl
cmp
pop
mov
pushl
jb
inc
adc
jl
dec
push
push
mov
repz
imul
pop
pop
mov
xchg
xchg
inc
test
or
push
je
or
ds
mov
push
push
adc
insb
and
pop
shll
nop
pop
test
orl
mov
jle
push
push
or
jg
cmp
in
or
sbbb
mov
push
dec
es
push
pop
ja
nop
lea
jecxz
rcll
imul
jb
or
mov
imul
adc
outsb
jge
mov
ja
pop
mov
mov
dec
outsb
jl
subl
das
lock
cmp
insb
jnp
lret
xor
ret
inc
xor
mov
imul
jp
sbb
mov
or
jno
pop
and
push
and
mov
outsl
cmp
pusha
cli
dec
jbe
push
daa
push
xchg
adc
push
push
imul
mov
inc
cmp
lds
mov
cmp
stos
rorl
jl
mov
cwtl
jne
jle
mov
push
sub
cwtl
addb
mov
add
ja
je
jle
mov
stos
or
test
mov
xor
mov
je
pop
aam
xor
js
mov
pop
orl
mov
push
dec
jl
push
aad
push
je
fdivrl
jmp
bound
jge
sbb
shrl
xchg
cmp
sbb
mov
mov
mov
mov
pop
push
jbe
push
push
ja
jb
add
cmpsb
int
push
bound
cmpsb
flds
rcrb
popf
fiadds
xchg
push
lret
mov
gs
sbb
mov
push
jle
out
loopne
lods
mov
jge
or
ret
inc
andb
icebp
mov
jbe
pop
xor
roll
jb
xchg
jo
divb
pop
ja
jp
inc
mulb
shll
outsb
mov
jle
je
mov
jg
dec
xor
jg
push
outsl
add
adc
std
or
lahf
xchg
mov
add
sbb
das
test
scas
loopne
loopne
out
lock
data16
adc
add
orl
ficompl
adc
mov
or
into
test
or
mov
lods
push
cld
sbb
iret
cld
ja
jg
cli
cltd
jns
push
cltd
cltd
ja
cld
hlt
mov
cld
testl
or
iret
dec
insb
inc
lock
or
pop
cmp
decl
dec
mov
or
stc
in
jnp
stc
push
int3
int3
stc
push
out
iret
iret
int3
iret
cs
cld
out
repnz
or
das
aam
inc
add
out
mov
cltd
xchg
inc
push
add
jp
iret
add
add
inc
adc
das
xor
and
dec
mov
push
sbb
outsl
xor
daa
mov
nop
xchg
add
adc
jo
push
dec
sub
out
inc
jecxz
sahf
inc
xor
in
add
push
int3
mov
shlb
dec
in
push
push
fs
popf
out
cs
push
mov
in
mov
adc
add
cltd
add
sbb
jns
push
sbb
pop
cltd
insl
fwait
push
das
pop
das
add
mov
out
push
or
or
in
sbb
or
incl
pusha
das
ja
jg
fs
aaa
pop
jo
pop
or
jb
movsl
popf
mov
mov
dec
mov
scas
add
scas
ror
out
xor
rclb
or
sub
adc
xchg
push
dec
push
pop
aaa
and
hlt
and
add
add
daa
inc
add
mov
add
sub
add
ss
adc
push
pop
aaa
push
mov
pop
lock
push
push
xor
add
cmp
test
push
push
and
and
add
inc
popa
negb
inc
insl
add
dec
ja
dec
jle
push
and
add
push
inc
push
mov
in
and
push
dec
jns
push
cs
add
insl
imul
push
jnp
mov
dec
test
push
lcall
sub
pop
nop
jbe
mov
xor
add
pop
xchg
add
pop
jle
fcomi
xchg
add
push
arpl
sub
add
gs
in
mov
outsb
lcall
jno
add
jns
xor
shlb
xor
jp
ss
add
inc
jno
fldt
push
js
inc
jge
jle
inc
jle
add
mov
test
mov
push
mov
xorl
ljmp
lea
add
mov
xchg
inc
call
in
dec
xchg
lds
into
push
lahf
jbe
sahf
rolb
pop
movsl
roll
pop
stos
aam
sub
outsl
push
stos
fldl
cmpsl
les
scas
lods
insl
pop
into
mov
push
scas
ficoml
mov
push
cmpsb
decl
pushl
add
add
in
push
filds
jno
in
add
not
push
adc
leave
repnz
jg
push
ja
or
fiadds
popa
ret
addb
mov
aaa
insl
mov
push
nop
cltd
push
xchg
xchg
push
xchg
xchg
xchg
xchg
sbb
cwtl
es
cltd
outsb
xchg
ds
xor
cltd
pushf
lahf
add
test
aad
mov
es
mov
mov
add
test
lods
cmpsl
push
stos
test
stos
cmpsl
stos
cmpsb
pop
jl
jg
add
lods
cmpsb
push
mov
add
mov
jbe
dec
scas
push
mov
popa
into
mov
iret
mov
jbe
insl
ret
iret
mov
sarl
int
repz
mov
iret
mov
ret
mov
ja
fidivrl
lret
mov
push
push
rol
fldt
mov
iret
ret
scas
lds
int
mov
fcmovb
xor
lret
or
dec
pusha
push
int
in
fidivl
aam
ljmp
cwtl
mov
sbb
lahf
data16
out
mov
xchg
sahf
cli
mov
imul
fcomi
insl
jae
lret
leave
out
enter
int
fmul
push
ror
int
outsl
repz
rcr
shlb
ror
push
aam
add
fcmovu
fdivrl
fcmovbe
rcll
flds
in
outsb
out
roll
fstpt
loop
int3
fisttpl
jmp
mov
fstl
cli
loopne
in
push
in
add
fstp
add
loope
add
loop
scas
fldcw
in
push
jecxz
in
jmp
imul
inc
loop
add
jecxz
in
hlt
mov
stc
out
out
negb
xchg
es
add
mov
std
out
push
repnz
inc
je
fsubs
pop
fdiv
std
outsb
and
adc
out
lock
in
divl
out
loop
out
ljmp
push
lcall
add
repz
push
in
cli
punpckhbw
cmp
divl
mov
push
cld
hlt
addr16
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
cmp
adc
xchg
xchg
ss
push
and
jae
xor
fildl
jecxz
sahf
cmp
push
push
and
add
lock
imull
adc
fsts
fcom
xlat
sub
loopne
sub
cld
dec
ss
sub
fcom
rcr
rcll
fstl
scas
test
push
test
push
add
rcl
shrb
sub
rcll
xor
scas
test
add
mov
idivb
test
lret
sub
jnp
xchg
test
rorb
xchg
imul
push
outsb
test
lahf
scas
fdivrs
jbe
jne
mov
add
mov
pop
scas
pushf
jge
imul
and
and
popf
sti
or
jge
scas
ret
sub
jg
aaa
cltd
std
ljmp
sub
pop
sub
or
aas
outsb
out
fidivl
sub
cs
fcmovnu
inc
outsb
mov
pop
int
or
or
sbb
push
push
adc
add
insb
push
cmp
sub
or
outsb
sub
cwtl
std
lods
mov
or
sub
and
aaa
cmp
out
cmp
cs
mov
test
xor
aas
je
lods
std
stos
orb
in
incl
ds
sbb
aas
rcrb
cmp
jmp
stos
xchg
std
stos
jo
adc
sti
sti
mov
in
popa
pop
push
or
lahf
jo
ucomiss
push
xchg
fwait
sub
pop
sbb
fs
sti
in
jg
sti
sti
mov
mov
ds
stos
stos
sub
mov
jmp
mov
lcall
xchg
dec
adc
sub
jmp
pop
pop
pop
addr16
inc
cmp
enter
dec
pop
ljmp
outsl
adc
cwtl
loope
adc
sbb
cmp
push
add
pop
sub
cmp
cmp
sbb
sub
and
xor
loope
cwtl
sub
stos
dec
push
daa
mov
cmpsl
idivb
mov
ret
jecxz
out
imul
imul
notl
mov
stos
into
xor
lea
pmulhuw
lods
lret
stos
mov
call
stos
fisttps
pop
loope
jmp
sub
mov
mov
ror
xor
mov
data16
lds
add
xor
push
out
aad
xor
mov
sub
aaa
mov
addr16
mov
or
rol
out
mov
icebp
out
mov
into
mov
lds
icebp
jecxz
rcr
mov
or
inc
mov
jmp
les
mov
outsb
ror
data16
jecxz
mov
fucomi
xchg
sub
mov
js,pn
mov
fisubrs
cmc
out
sub
push
mov
mov
into
lds
les
add
aad
into
aad
out
or
fdivr
fidivrs
push
jmp
mov
ret
vpunpckhbw
fcmovu
adc
mov
iret
mov
adc
sub
fistps
ljmp
shll
mov
aam
test
cmpl
mov
rcrl
pop
adc
fs
mov
push
lock
movsl
test
inc
jb
movsl
fucom
out
mov
cmc
pop
out
jg
add
push
movsb
mov
mov
jae
push
push
inc
jae
call
in
mov
stos
testb
mov
idiv
push
icebp
lock
movsb
andl
ja
push
sub
push
insl
ja
fistps
shl
pop
in
das
clc
outsl
pop
enter
andb
and
sub
push
xor
out
pop
mov
js
mov
jns
dec
enter
clc
mov
add
in
sbb
or
pop
inc
ljmp
dec
push
or
scas
add
sub
movsb
leave
in
mov
mov
mov
mov
add
pushf
js
push
add
mov
xchg
insl
das
mov
mulb
mov
pop
adc
data16
mov
or
or
cmp
mov
sbb
push
cmp
out
push
adc
leave
pop
stc
clc
stc
loop
cmp
cli
sbb
arpl
push
mov
movsb
or
push
push
add
cmp
cmp
stc
in
stos
adc
sub
jmp
arpl
mov
mov
mov
sbb
xor
adc
sbb
notb
out
aas
mov
stc
insb
or
not
mov
mov
orl
cmp
clc
cld
sarl
cld
or
add
fistpll
in
fidivrs
pop
sub
mov
mov
je
clc
std
es
imul
leave
jnp
orb
out
push
out
sahf
int
push
add
and
mov
and
push
arpl
push
push
dec
and
add
std
cmp
push
std
sar
pop
add
push
das
cmp
mov
push
push
and
std
cltd
cld
or
mov
jp
and
pop
ja
cmp
add
pop
cld
xor
adc
adc
adc
push
pop
shrl
mov
adc
pop
jns
push
sub
add
or
mov
xchg
cs
add
inc
dec
jbe
enter
jg
dec
stc
and
pop
mov
sbb
pop
cmpsl
data16
adc
add
mov
sti
push
or
sub
or
imul
int3
sub
pusha
and
pusha
pop
ja
jge
mov
and
xor
sub
out
addb
xor
mov
stos
add
pop
mov
xlat
inc
mov
add
sub
mov
stos
add
xor
out
add
xor
aad
push
mov
das
add
orb
pusha
stos
push
or
rolb
xor
sti
cmpsb
cmp
push
aas
sbb
add
stc
out
outsl
pop
push
das
aas
add
push
nopl
ja,pt
mov
xor
sub
push
sub
cmp
dec
popf
mov
mov
push
das
cmp
push
push
pop
xchg
idivb
mov
cs
inc
cmp
dec
cmp
aas
jo
stc
stc
out
push
cmp
add
cmp
out
inc
push
dec
pop
ljmp
int
insl
mov
inc
cmp
push
pop
jae
pop
jae
pop
jbe
divb
jns
cmp
push
arpl
dec
push
popa
add
jae
fldt
inc
je
jne
inc
pop
jno
inc
pop
jge,pn
inc
push
jno
insl
jge
outsl
jo
insl
fstpt
andl
jo
nop
jecxz
pusha
sti
je
add
scas
mov
add
sub
in
jg
fnsave
cmp
aas
lahf
add
test
jno
mov
dec
insb
fldt
clc
nop
add
adcl
xchg
jno
outsb
add
inc
jns
add
mov
jne
inc
jge
insl
jmp
or
jg
inc
jbe
dec
push
test
fwait
incl
add
inc
mov
mov
addr16
fiaddl
shrl
add
insl
inc
push
xor
out
in
jg
nop
jle
xchg
outsb
push
add
cwtl
scas
sbbb
xchg
mov
fwait
add
fs
mov
or
push
push
push
mov
movsl
insl
scas
push
xchg
push
pop
xchg
cmpsl
push
xchg
test
fistl
xchg
pushf
scas
lcall
push
addr16
mov
mov
mov
insl
test
incl
jb
mov
mov
xchg
mov
out
addb
mov
mov
cmpsl
mov
fildll
sahf
mov
mov
add
scas
shlb
leave
mov
add
fbstp
mov
fdivs
xchg
pop
test
push
xchg
outsl
fwait
rorl
add
xchg
in
aaa
fcmovnb
lret
rcl
ljmp
pop
repz
lcall
mov
cs
jmp
divl
loopne
push
lock
xchg
stc
fcomi
pop
inc
add
dec
int
int3
subb
sti
cs
out
add
sub
add
hlt
nop
inc
add
push
data16
imulb
pop
mov
xchg
push
sub
pop
sti
ljmp
dec
push
fwait
popf
mov
popf
fwait
test
popa
xchg
mov
xor
sbbl
movsl
cmp
jbe
jge
outsb
push
xor
popa
dec
addr16
jle
mov
jmp
mov
mov
jno
dec
add
pop
pop
inc
outsb
ret
ss
pop
push
outsb
jbe
imul
pop
jbe
push
testl
dec
sbb
mov
std
fstpt
pop
popa
pop
push
pop
push
mov
push
addl
mov
push
push
fisubrs
loop
imul
fwait
or
mov
jae
mov
mov
fildl
jge
add
mov
adc
add
mov
imul
sarb
lahf
mov
imul
out
pop
push
enter
mov
mov
mov
mov
pop
or
enter
test
data16
mov
data16
adc
inc
aas
add
roll
stc
mov
mov
orl
mov
pop
dec
mov
add
xor
pop
decl
or
sub
and
mov
xor
or
add
mov
clc
repnz
pop
add
pop
lods
mov
mov
mov
sbb
cmpsl
nop
adc
xchg
gs
sbb
bound
dec
jmp
pop
leave
sbb
or
xchg
pop
push
jg
and
xchg
adc
or
dec
roll
cmp
pop
mov
inc
pop
push
add
push
add
adc
sbb
mov
mov
cmp
adc
xor
pop
mov
cmp
and
popa
cmp
pusha
add
jbe
add
cmp
ficoml
xchg
xchg
pop
add
pop
and
mov
inc
fildll
push
push
out
add
pop
cmp
incl
imul
outsb
outsb
pusha
add
bound
jae
add
imul
mov
outsb
sahf
push
push
mov
push
test
insb
ss
push
stos
pop
mov
mov
jmp
leave
push
add
test
xchg
xchg
jge
mov
inc
repnz
hlt
js
sahf
mov
add
adc
add
xchg
dec
repz
push
xchg
out
lcall
inc
rcl
xor
pushf
mov
and
shll
mov
mov
mov
mov
cmp
stos
lods
add
lds
out
mov
mov
sarb
add
aam
lret
mov
and
fld
mov
cmpsb
sub
sarl
push
popf
dec
outsb
pop
add
in
fadds
lock
repnz
jl
iret
repnz
add
cmc
filds
div
fsubp
add
cli
cmp
push
jecxz
in
call
pop
push
dec
subb
cli
jne
or
add
xor
pusha
arpl
xor
sub
mov
add
add
sub
sub
es
xor
xchg
adc
sub
inc
inc
loope
pop
add
dec
push
push
push
push
push
push
push
dec
dec
dec
dec
inc
inc
idiv
fisubs
sbb
cmp
add
inc
inc
inc
cmp
dec
lret
add
das
inc
add
in
out
sbb
or
or
push
add
cs
add
inc
push
sbb
push
dec
cs
jge
pop
push
sub
adc
or
ficoml
xor
pop
mov
jg
scas
fdivrs
adc
and
pop
add
repnz
add
push
das
push
push
push
add
push
push
adc
aas
ds
out
aas
push
adc
aas
adc
add
sbb
adc
lret
sti
femms
or
sbb
pop
push
fidivs
mov
mov
das
nop
nop
pop
lock
aas
andb
jg
push
xchg
xor
or
in
or
push
decl
dec
dec
push
push
jg
andb
pop
sbb
and
and
ljmp
xor
xor
sub
and
add
push
push
push
push
inc
push
push
je
sbb
cmpsb
add
jnp
xor
pop
adc
js
adc
mov
add
aaa
jge
push
cmp
sub
data16
sub
xor
bound
dec
in
and
pop
pop
pop
dec
pop
add
add
push
add
insb
sahf
mov
and
test
xchg
xchg
mov
adc
adc
inc
xor
pop
xor
mov
or
push
xor
add
xchg
push
insb
cmpsb
adc
jbe
mov
push
xchg
cwtl
cwtl
cmpsb
test
add
fists
cmp
add
xchg
arpl
lcall
sub
mov
adc
test
pop
xor
or
pop
push
xor
imul
sbb
add
add
xor
push
aaa
push
lcall
fs
aaa
jmp
mov
cmp
or
cmp
int
cmp
mov
sbb
push
inc
push
test
popf
add
inc
lcall
sbb
sub
mov
mov
sub
sub
sub
xchg
add
dec
cltd
dec
dec
cs
call
sub
sub
sub
push
sahf
add
pop
movsb
mov
sbb
cmp
push
das
push
mov
add
push
xor
push
pop
mov
mov
xor
xor
cmpsb
add
pop
movsl
add
pop
xor
fbstp
stos
ds
cmp
cmp
test
cmp
add
push
add
dec
dec
insb
cmpsl
add
dec
push
or
jne
imul
pop
jge
inc
push
add
dec
inc
insb
push
inc
outsb
mov
push
insb
fstps
imul
inc
outsl
mov
jne
outsl
fucomi
fdivs
push
jae
add
mov
ja
push
js
add
iret
aaa
int
mov
add
jne
add
jg
mov
jl
push
jge
add
pop
jle
add
add
xchg
out
outsb
mov
mov
lods
push
cmpb
add
orl
enter
mov
lret
push
mov
lds
popa
xchg
mov
jmp
mov
push
mov
imul
xchg
into
std
outsb
inc
pushfw
push
jge
iret
mov
jno
fnstsw
xchg
rcrl
xlat
add
es
aad
popa
jecxz
inc
add
faddl
jg
fnstsw
push
fneni(8087
add
adc
add
xchg
xchg
test
movsb
dec
lods
mov
movsb
mov
mov
cmpsb
stos
mov
pop
push
lea
mov
mov
mov
out
das
lock
into
cmpsb
push
sub
mov
push
test
sahf
mov
xchg
mov
lcall
fldt
mov
mov
add
es
mov
aaa
cmpsl
shl
ret
loope
loop
lret
out
imul
out
mov
mov
add
shrl
shr
rclb
mov
mov
xlat
repnz
inc
kxnorw
aad
xchg
mov
test
fdivs
fsubr
pop
ljmp
pop
popa
arpl
jl
call
lcall
bound
pop
pop
outsl
mov
inc
fsubrp
clc
lock
fcmovbe
mov
popf
xorb
push
jns
cltd
and
ljmp
ss
shl
in
fnstcw
pusha
pop
and
call
test
mov
lds
sub
repnz
stc
out
fnstcw
imul
jns
sbb
sbb
xor
ljmp
xor
cmp
out
xor
das
nop
jg
push
enter
pop
push
dec
or
std
jl
aaa
push
cmp
jmp
add
xchg
xchg
or
div
cmpb
pop
add
sbb
imul
pushf
test
loopne
aas
nop
fdivr
sub
push
sbb
cmpsb
mov
inc
cld
out
sub
out
xchg
inc
jns
push
fwait
decl
add
cld
out
cmp
jle
imul
xchg
xor
in
cmc
sbb
dec
loope
xchg
lea
mov
in
int
out
push
jo
decl
movsb
inc
addb
sbb
cmpsl
nop
out
push
pop
adcl
call
add
out
shl
aad
stos
xchg
subl
lahf
ja
fwait
lods
mov
fst
mov
cwtl
mov
jg
loopne
push
dec
jg
mov
repz
fdivrs
jb
pop
sbb
pop
out
jg
adc
push
dec
add
push
dec
dec
dec
dec
inc
inc
cmp
aas
shlb
adc
push
sbb
sbb
lret
not
cmp
sbb
push
data16
mov
or
adc
add
adc
push
pop
mov
pop
sub
and
and
and
les
xor
add
mov
cld
cld
mov
jnp
pop
testb
adc
ret
mov
fistpl
and
cld
add
les
adc
fbstp
and
std
idiv
insl
add
pusha
movlps
ret
and
in
negl
pop
idiv
add
lret
cld
pusha
add
xlat
push
mov
pop
shlb
xlat
push
in
std
sbb
rcrb
fwait
pusha
notl
rcrl
add
daa
pop
sti
rcrb
cmpsb
fdivrs
arpl
sub
lret
outsw
mov
mov
sarb
add
jbe
scas
rcrb
adc
sbb
push
push
pop
or
mov
loop
sbb
mov
aad
lods
filds
push
outsl
and
pop
sub
push
daa
or
or
add
xchg
int
mov
xlat
cmpsl
push
and
mov
mov
aas
mov
out
in
out
loopne
pop
into
loop
shll
add
test
jne
mov
lods
xor
sub
push
add
pop
pop
stc
and
cmp
loopne
jl
mov
mov
bound
or
iret
sti
mov
pop
loop
insb
aaa
xor
cmp
jb
fisubs
pop
pusha
xor
cli
inc
sub
or
in
xchg
dec
ret
popa
mov
mov
pusha
or
incb
sahf
inc
rorl
jg
lods
push
mov
dec
push
arpl
lahf
fnstenv
inc
mov
xor
test
mov
test
cmp
add
add
jg
add
orb
inc
ds
add
outsb
pop
inc
mov
add
daa
cmp
mov
pop
add
add
and
lea
and
and
add
add
pop
ja
js
ja
push
cltd
add
enter
xchg
or
push
cltd
xor
imul
xor
adc
fbstp
pop
xor
xchg
arpl
push
add
nop
inc
pop
out
mov
test
adc
enter
push
cmc
test
call
popa
push
in
jne
std
sub
or
les
les
push
dec
inc
fstp
out
add
psrlw
or
sub
das
outsl
cwtl
loopne
subl
fxch
fildll
das
inc
inc
loopne
add
adc
pop
scas
dec
rcrb
out
add
mov
inc
popa
ss
popl
pop
sarb
data16
xor
pop
loopne
outsl
xor
inc
inc
fs
test
xchg
sbb
mov
adc
adc
add
mov
add
aaa
add
push
push
fs
pushl
js
xor
cmp
jae
add
jae
jnp
add
das
add
add
add
add
add
sbb
push
xor
add
mov
push
mov
push
xor
jae
sub
jbe
inc
add
xchg
push
fidivs
pusha
add
push
ds
add
aaa
in
jmp
jns
push
and
add
dec
dec
add
push
dec
xchg
pop
pop
push
push
inc
insb
push
dec
outsb
adc
or
test
adc
add
adc
jae,pn
jbe
fistps
jle
add
dec
ss
inc
inc
test
outsb
or
dec
push
dec
add
pop
and
arpl
jno
push
pop
dec
outsl
jmp
outsb
add
out
addr16
pop
imul
add
add
xchg
cs
add
pop
add
add
add
push
cmp
sbb
mov
insl
sbb
negb
movsl
dec
sub
push
lods
dec
mov
mov
cmp
ss
adc
repnz
je
fcomip
pop
add
pop
rcrb
push
and
lret
popa
push
shrb
mov
push
jbe
mov
outsl
pop
xchg
add
push
add
outsl
aaa
or
jae
push
outsb
dec
iret
jae
jp
push
jnp
add
mov
roll
cmp
mov
push
bound
push
add
ja
outsb
jge
push
mov
sub
andl
jnp
mov
insb
lea
fldl
sbb
push
test
in
pushl
divb
in
xchg
push
icebp
xchg
outsb
add
outsl
adc
repz
test
add
pop
addl
xorb
xchg
jg
mov
lahf
add
fs
xor
add
push
add
jne
add
js
fildll
jb
outsb
jns
jl
add
jnp
sub
xorl
nop
out
ret
push
jp
push
pusha
fwait
je
jb
mov
movsl
notb
xchg
jle
loopne
add
mov
test
lds
add
data16
insl
imul
and
mov
cs
sbb
into
pusha
int
lods
mov
cmpsb
jle
mov
lods
loop
ds
test
xchg
push
popa
xchg
test
sahf
sahf
push
mov
push
add
dec
push
and
mov
in
sub
add
lcall
xchg
fiadds
push
push
fdivl
stos
push
pop
mov
mov
jae
inc
shlb
sbb
push
add
ficompl
fnclex
negb
leave
inc
lret
jle
xlat
aad
loopne
adc
ljmp
pop
insb
xlat
mov
mov
mov
lahf
mov
and
sub
xchg
mov
movsl
insw
mov
xchg
out
icebp
popf
push
rep
push
roll
push
mov
push
jmp
enter
ss
mov
add
ss
add
adc
mov
movsb
flds
aad
jmp
mov
insl
repz
sar
push
es
lret
pop
push
ret
pop
xlat
add
fcoms
fneni(8087
fbld
fstpl
into
jmp
add
out
cs
fwait
mov
add
sti
cld
add
jl
jnp
jns
pusha
lock
dec
dec
inc
inc
xchg
inc
dec
push
pop
bound
pop
push
dec
inc
inc
inc
push
jl
mov
loopne
jle
mulb
push
dec
dec
jl
and
pop
inc
or
scas
aaa
call
js
fistps
inc
add
lds
add
aaa
xor
ror
mov
add
cld
jmp
fs
pop
ja
pop
dec
dec
inc
inc
add
xor
cmpsb
scas
lret
pop
pop
adc
push
aaa
mov
fs
dec
push
or
fldt
or
or
pop
xor
incb
cmp
inc
dec
pop
pop
inc
sti
fwait
jae
xor
sub
xor
jo
test
mov
push
inc
or
aaa
lds
test
sub
pop
add
xorps
outsl
jbe
inc
inc
adc
mov
ss
dec
ficoml
mov
mov
add
aas
xchg
or
pop
xchg
dec
sub
mov
lea
inc
jo
fst
inc
pop
add
add
pop
xchg
lods
lods
pop
lret
mov
add
mov
add
cmc
fst
pop
add
add
xchg
mov
xchg
pop
adc
incl
fnsave
pop
sbb
xchg
mov
sub
push
mov
sbb
rcl
pop
idivl
in
jl
repnz
add
out
outsl
adc
sbb
shll
cld
cmc
test
getsec
out
enter
xchg
mov
xchg
idivb
adc
pusha
rcl
xor
mov
in
hlt
sti
out
fidivl
mov
xchg
mov
adc
push
rol
push
cmpsb
clc
jmp
lahf
cwtl
sbb
xchg
ljmp
lock
pop
or
sti
fcomps
jmp
xchg
pop
mov
pop
adc
jno
je
idiv
mov
fistpl
pop
pusha
mov
rcrb
jg
mov
adc
jae
jecxz
cli
stc
ljmp
cld
rolb
mov
adc
and
sbb
in
loop
pop
mov
xchg
cld
pop
inc
cmovge
les
cld
jg
sbb
loope
addr16
adc
out
mov
adc
add
and
and
cmp
cmp
out
mov
cmp
bound
pop
cmp
mov
pop
and
mov
cmovae
adc
lahf
and
or
xchg
mov
push
and
sbbl
lods
testb
outsl
movl
and
pop
adc
add
cs
sub
addb
push
ror
pop
xor
and
fwait
pushf
mov
mov
enter
adc
and
movsb
popa
jmp
pop
pop
pop
pop
insl
jnp
mull
sbb
sub
popa
pop
or
jg
ja
adc
push
stos
mov
or
jge
push
xchg
cmp
push
pop
adc
inc
push
outsb
outsl
jmp
pop
das
push
add
push
mov
push
dec
inc
inc
and
dec
and
push
add
fs
cmp
cs
sti
or
adc
enter
or
xor
pushf
inc
add
or
adc
rolb
push
inc
or
enter
pop
or
enter
outsb
adc
mov
ja
test
inc
adc
inc
and
and
jle
mov
mov
and
add
or
fistl
or
inc
inc
addb
enter
enter
flds
jle
inc
adc
insb
adc
lock
inc
or
jbe
or
push
adc
and
test
fdivrs
or
adc
add
add
mov
push
add
aam
enter
xchg
or
test
adc
xchg
jbe
and
push
andl
add
add
xchg
adc
inc
push
fildl
inc
push
or
addl
out
jbe
fmulp
adc
orl
or
and
nop
sbb
mov
xchg
enter
and
adc
add
mov
inc
fmuls
mov
inc
and
jo
clc
push
inc
add
push
or
cwtl
and
inc
adc
loopne
adc
or
loop
shrb
push
add
inc
loope
inc
push
and
add
dec
pusha
xchg
and
adc
push
inc
dec
push
popa
inc
int
inc
add
fisubl
data16
push
xor
or
lock
inc
and
cld
test
inc
or
adc
ss
or
sbb
or
and
dec
outsb
push
rolb
repnz
test
inc
or
adc
sub
sbb
jbe
data16
push
enter
pop
mov
addb
enter
adc
dec
add
out
in
add
scas
mov
add
loope
and
push
adc
push
adc
scas
inc
cmp
mov
inc
add
or
push
pushf
and
hlt
call
xor
inc
mov
xor
addb
dec
add
or
or
adc
push
rolb
dec
adc
pop
and
mov
add
or
int3
ljmp
enter
and
ljmp
ss
sub
popa
lods
mov
cli
enter
mov
popa
add
cmp
adc
sub
mov
sbb
push
aas
sub
nop
enter
dec
or
lds
test
or
or
mov
nop
adcl
or
push
sub
add
rcrl
cwtl
add
cmpsl
pop
std
out
incl
sti
in
pop
std
pop
mov
out
incb
jl
push
cld
in
jg
clc
xor
mov
ds
in
jnp
push
jle
jns
sahf
out
sti
jg
push
jmp
js
jle
incl
xor
jb
out
clc
cld
sbb
std
clc
out
mov
out
cmpsl
dec
cld
push
stc
push
sti
push
js
out
imul
ror
fimuls
add
mov
cli
into
xor
dec
outsb
in
pop
inc
fdivrp
push
divl
jle
push
pop
js
imulb
jge
jnp
repz
jns
push
jl
outsl
push
jbe
jmp
out
sahf
push
jge
pop
push
outsl
jp
popf
ret
imulb
jnp
pop
mov
iret
mov
jnp
jnp
into
fcompl
les
mov
decl
mov
jnp
outsl
stc
out
cmpsl
ds
jle
es
mov
clc
mov
in
popl
mov
push
jl
inc
stc
ds
xor
cmpsb
jbe
into
loop
ret
out
pop
push
sahf
cli
getsec
cltd
bnd
cld
pop
jge
dec
out
addr16
push
push
cmpl
mov
lahf
or
daa
out
daa
jle
cld
rcl
js
inc
pop
push
mov
sahf
mov
jle
outsb
out
mov
stc
pop
maxps
addr16
mov
out
push
mov
outsb
or
sti
ss
shr
fsubrl
iret
push
js
jns
out
jo
mov
mov
out
movsb
js
std
pop
push
out
pop
cmp
push
jl
lahf
mov
inc
call
iret
xchg
pop
mov
push
xchg
mov
lahf
std
pop
aaa
inc
aas
push
aaa
stc
jbe
js
jno
xchg
cld
inc
adc
jle
xchg
out
mov
fsubrp
mov
pop
popw
jp
es
cs
jne
sahf
pop
out
iret
mov
mov
jno
adc
cs
fistpll
jbe
out
loop
inc
pop
xchg
aaa
push
cld
mov
fbld
mov
iret
std
daa
in
dec
cmp
pop
jp
in
pop
icebp
fdivrl
ss
stc
xchg
push
mov
xchg
cmpsb
ret
out
cmc
add
out
adc
fcoms
lock
adc
jns
je
jge
jge
icebp
in
loopne
in
aas
ret
dec
mulb
roll
enter
ljmp
cli
cli
pusha
mov
pop
fwait
jb
movsl
mov
aaa
call
inc
jae
jmp
incl
cld
jle
movsb
in
shll
test
sub
je
xchg
ljmp
ljmp
xor
in
push
lahf
scas
inc
mov
pop
jp
int
mov
cltd
notl
add
imul
push
lods
add
xchg
push
lods
mov
test
ret
in
mov
test
mov
decl
int3
nop
fdivrs
xor
cmc
enter
pop
sub
push
andb
inc
pushf
add
inc
lds
pop
icebp
cmp
fwait
dec
fsubl
adc
pusha
and
and
jne
xor
aad
fstl
fs
stc
xor
jb
aaa
add
gs
mov
imul
incl
cmp
cltd
ret
cmc
outsl
mov
bound
test
lret
lret
loopne
decl
xlat
cmpsl
ljmp
sbb
adc
xchg
pop
test
or
xchg
orl
mov
out
cltd
inc
lahf
sahf
je
pop
test
jno
cmp
lret
mov
cmpsb
popa
sub
dec
sub
and
jp
shlb
dec
sbb
addr16
movsb
jno
pop
clc
pushl
inc
js
pushf
pop
push
arpl
push
push
mov
jbe
mov
mov
popa
add
lcall
arpl
icebp
mov
shlb
fldl
cwtl
xor
mov
ds
cmp
pushl
stos
test
and
jno
adc
cmpsb
sti
cmp
call
mov
mov
mov
pop
sti
push
xor
jge
out
sbb
jge
mov
lds
and
notb
inc
jo
es
leave
int
and
rcrb
movsl
repz
call
lret
cmp
xchg
ja
mov
imul
movsw
fisubrs
add
incl
xchg
xlat
jae
out
push
cmp
sub
sahf
jae
lods
shrl
jnp
adc
out
clc
incl
push
mov
add
lods
cmp
mov
dec
dec
daa
sub
sbb
add
fcoml
xchg
xorb
ljmp
clc
adc
ja
sbb
std
adc
rorb
repnz
push
jmp
ljmp
inc
sbb
and
xchg
bound
jbe
pusha
mov
jmp
pop
add
pusha
sbb
mov
addr16
and
xlat
mov
adc
and
add
test
mov
mov
mov
adc
sbb
mov
imul
movsb
mov
mov
nop
andb
xchg
enter
dec
or
ret
sbb
ja
jno
rcrb
push
andb
mov
mov
lret
cmp
jp
or
mov
and
jl
lcall
ds
dec
lods
sub
push
dec
and
loop
popa
mov
sub
into
pusha
aam
xchg
es
inc
inc
add
pop
xor
mov
pusha
bound
adc
int3
inc
xor
int3
push
cmpsb
dec
aad
int3
into
cmp
jb
rolb
pusha
shlb
mov
add
dec
cwtl
addb
enter
adc
mov
sbb
shlb
or
fcmovne
xor
add
js
or
xchg
jp
pusha
and
popf
sub
push
pusha
bound
cmp
out
lcall
cld
xorb
pop
rcrl
pop
or
mov
mov
cltd
sub
adc
fidivl
cwtl
mov
mov
ret
in
add
pop
dec
hlt
adc
push
push
addr16
shlb
bound
push
or
popa
cwtl
pusha
js
les
xor
adc
push
xchg
cltd
mov
jbe
imul
in
push
xor
or
sbb
add
add
cmp
adc
xchg
cmp
and
rolb
rol
cmpsl
lcall
sbb
push
cmpsb
incb
ret
cmp
mov
push
es
and
nop
push
push
out
push
lret
loope
sbb
clc
mov
push
shrb
xchg
out
xchg
les
pop
test
xchg
dec
rorb
mov
inc
int3
push
mov
cmp
add
push
jp
inc
push
imulb
inc
ret
adc
mov
mov
xor
nop
inc
test
mov
xor
mov
sbb
or
lret
cwtl
pop
xchg
jo
mov
gs
mulb
push
insb
or
pushf
jbe
jnp
test
into
and
or
call
movsl
inc
sub
data16
pop
pushf
outsb
pop
loopne
es
mov
cmpsb
pushf
dec
sbb
pop
call
mov
inc
fs
adc
ret
and
lock
cmp
dec
push
andb
mov
add
add
outsb
arpl
inc
gs
idivb
imul
push
gs
gs
xor
gs
outsl
fs
gs
inc
clc
mov
mov
or
inc
js
je
jb
push
jae
jb
gs
bound
inc
jbe
in
mov
ljmp
push
imul
jge
fidivrs
push
inc
jne
jb
inc
imul
jns
mov
les
insl
jo
mov
pop
sub
popa
es
outsb
data16
fdivs
push
inc
aad
popa
insl
and
pop
inc
outsb
mov
pop
outsb
and
jb
outsb
addr16
mov
nop
or
inc
in
xor
dec
bound
or
sub
push
je
pop
sbb
xor
jnp
outsl
insl
insl
lret
mov
dec
ljmp
adc
adc
gs
mov
mull
sbb
addr16
cmpb
inc
mov
fnstenv
push
outsb
insb
outsl
popa
fs
testb
push
gs
imul
sbb
cmpb
adc
in
and
stos
push
sub
fcmovb
imul
dec
xor
jo
inc
push
fldl
dec
adc
jne
inc
mov
add
inc
inc
insl
lret
inc
shlb
js
arpl
dec
gs
lahf
int
xchg
outsl
xchg
push
inc
add
add
jne
dec
movsl
add
out
sti
sbb
add
xchg
data16
mov
xchg
inc
push
add
shrb
jb
add
fcomps
in
adc
test
enter
mov
push
notb
test
add
fs
push
sbb
push
pop
push
xchg
popf
imul
mov
adc
dec
or
add
shlb
jnp
and
push
push
out
and
and
adcl
add
sahf
dec
rcll
or
jns
inc
out
popf
dec
repz
add
popw
shrb
push
insl
lahf
lock
or
dec
mov
xchg
adc
jo
jns
mov
aad
fwait
adc
sbb
cwtl
sub
call
mov
ds
push
mov
outsl
aas
mov
add
add
mov
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
xor
sbbb
add
jo
add
mov
add
add
adc
add
add
cmp
add
adc
add
cmp
add
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
xor
add
js
add
mov
add
add
add
xor
add
lock
sub
add
sbb
add
inc
add
sub
add
push
add
add
add
add
add
add
add
sub
add
or
addb
add
or
add
add
add
adc
add
or
add
add
add
add
add
add
add
pop
add
mov
add
or
add
add
pusha
and
call
add
add
add
add
add
dec
sub
add
add
add
add
add
sub
add
or
add
add
add
cmp
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
cmp
sub
add
or
add
add
push
dec
add
call
add
add
add
add
add
cmp
add
add
add
add
add
push
add
sub
add
or
add
popa
add
call
add
add
add
add
add
add
insb
add
push
add
add
add
add
add
add
jae
add
or
add
add
add
add
add
add
add
jle
add
add
add
add
add
add
test
add
mov
add
or
add
addl
add
add
or
add
mov
mov
add
or
add
add
add
popl
mov
add
or
add
add
add
add
mov
add
or
add
add
add
xchg
add
call
add
add
add
add
add
add
add
or
add
add
hlt
in
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
enter
add
add
or
add
add
add
mov
add
fcomps
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
cmp
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
adc
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
dec
add
add
insl
add
dec
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
jns
and
push
add
je
popa
add
add
add
arpl
popa
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
jb
popa
add
jns
and
push
add
jb
insl
add
add
add
and
add
add
insb
add
outsl
add
jns
jb
imul
je
add
push
add
add
arpl
add
add
add
add
je
and
push
add
add
add
and
inc
add
outsb
add
add
add
add
add
add
sub
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jae
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jns
and
dec
add
imul
add
and
inc
add
add
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
test
call
add
mov
add
jl
add
ret
call
add
shr
add
mov
add
fsubr
add
xchg
call
add
call
call
add
push
jmp
add
xor
add
add
add
inc
jmp
add
push
jmp
add
insb
jmp
add
jp
add
add
add
mov
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
insl
arpl
xor
fs
insb
add
insl
fs
xor
cs
insb
add
popa
addr16
insb
insb
add
jb
imul
add
outsb
je
jne
je
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
popa
addr16
outsb
insb
outsl
popa
add
add
jb
jne
jb
push
popa
insb
jne
push
add
inc
jb
jo
inc
inc
push
inc
fs
imul
jb
inc
outsl
outsb
je
js
