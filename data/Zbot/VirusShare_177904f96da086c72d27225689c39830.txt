stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
lea
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
add
jmp
stos
stos
stos
pop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
jmp
ret
std
sub
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
push
decl
ret
add
pop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
aam
add
jl
add
sub
add
cld
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
or
add
movsb
and
add
add
mov
and
add
add
and
add
add
mov
and
add
add
add
add
pop
and
add
and
add
and
add
and
add
and
add
add
pushf
and
add
and
add
and
add
add
add
and
add
add
add
inc
and
add
add
add
add
add
and
add
add
add
add
push
add
add
add
add
add
pop
and
add
add
add
add
add
add
mov
add
mov
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
or
add
movsb
and
add
add
mov
and
add
add
and
add
add
mov
and
add
add
add
add
pop
and
add
and
add
and
add
and
add
and
add
add
pushf
and
add
and
add
and
add
add
add
and
add
add
add
inc
and
add
add
add
add
add
fs
imul
add
repnz
imul
jb
je
arpl
add
roll
dec
gs
jo
jb
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
je
imul
bound
gs
add
rolb
insb
outsl
bound
inc
insb
popa
addr16
ret
gs
jne
jb
outsb
je
jb
arpl
jae
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
je
jb
jbe
push
jns
gs
add
insb
outsl
jae
dec
popa
outsb
fs
add
add
gs
outsl
jbe
inc
imul
jns
add
addl
jb
popa
je
inc
imul
jns
add
xchg
add
je
jne
jb
outsb
je
push
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
bound
gs
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
push
gs
imul
data16
je
je
dec
popa
outsb
fs
add
push
push
je
imul
inc
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
dec
inc
dec
xor
cs
insb
add
push
add
addr16
arpl
jo
inc
imul
jb
addr16
jne
jb
inc
imul
inc
insb
insb
push
outsb
jb
imul
jb
gs
lods
add
gs
insb
inc
bound
je
add
add
inc
jb
add
sbb
insb
imul
outsl
outsb
add
gs
popa
insb
insb
outsl
arpl
and
inc
js
jb
arpl
outsl
outsb
inc
add
mov
inc
push
add
inc
gs
gs
imul
inc
jb
addr16
imul
mov
push
push
gs
popa
addr16
outsl
js
add
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
push
dec
inc
dec
dec
xor
cs
insb
add
add
arpl
je
js
insb
imul
jb
gs
pop
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
or
inc
arpl
jb
gs
outsb
fs
jb
popa
jns
push
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
cwtl
push
cmp
in
xor
dec
add
js
add
fimull
cs
pusha
pop
rclb
test
mov
mov
adc
mov
les
mov
cmpsb
adc
out
ficoml
das
mov
lahf
iret
fbstp
and
es
xchg
adcl
cmpsl
jnp
xchg
push
scas
into
fld
fcompl
push
les
enter
in
sub
les
sub
shl
popa
add
stos
pop
sub
aaa
stos
sub
push
arpl
test
dec
mov
int3
orl
jbe
arpl
adc
xor
imul
dec
jno
outsb
jo
out
les
aas
jno
cmc
push
push
cmpsl
sbbl
cwtl
ja
in
cmp
test
icebp
cmp
pop
leave
dec
notb
nop
pop
push
ja
pop
add
inc
movsl
fistl
loopne
push
lret
test
stc
sub
sbb
cs
in
sbb
lea
addl
enter
jb
xchg
push
inc
jl
mov
in
mov
jl
mov
jb
jge
sti
sub
mov
xor
or
push
dec
sub
in
xchg
aaa
int
pop
cmp
push
pop
inc
sti
add
ret
repz
dec
insl
xchg
xchg
lahf
clc
fdivrp
jae
movsl
aad
or
mov
sbb
lock
xchg
xlat
dec
ljmp
fs
ss
enter
adc
sbb
or
adc
and
pop
jg
pop
jae
jcxz
mov
shll
mov
cmp
cmpsb
test
imul
loopne
cmp
inc
push
push
jb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
test
add
clc
data16
test
add
mov
or
add
addl
add
mov
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
scas
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jnp
jl
stos
stos
lods
add
cmpsb
test
mov
mov
mov
ret
ret
stos
leave
lret
int3
int3
into
rcl
in
rcl
shl
iret
iret
shl
into
int3
into
hlt
leave
leave
repz
mov
in
mov
mov
lods
stos
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
lret
rcl
cld
fcom
std
fcomp
xlat
xlat
aam
aam
rcl
sar
int3
int3
int3
aad
aad
ror
sar
ret
ret
mov
mov
scas
iret
movsb
movsl
movsl
xchg
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
scas
sbb
mov
jnp
mov
sar
mov
lret
leave
leave
call
rcl
aam
aam
xlat
fdivr
xlat
fcomp
call
dec
into
into
dec
int3
int
aad
aad
int
int3
mov
mov
mov
std
cmpsb
cmpsb
test
xchg
xchg
xchg
mov
pop
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
push
push
add
inc
add
push
add
push
or
or
sbb
push
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
int3
call
rcl
call
fcomp
fcom
call
aad
dec
int
dec
leave
lret
into
int
vshufps
sarb
mov
mov
cmpsb
test
jmp
cltd
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
aas
ds
sbb
push
das
push
or
push
xor
cmp
aaa
cmp
and
add
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
ror
call
aam
call
aad
dec
iret
sar
mov
inc
ret
mov
mov
ljmp
movsl
movsl
popf
pushf
sahf
cwtl
cwtl
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jge
jle
jle
jb
jo
arpl
mov
cmp
lea
inc
mov
outsl
outsl
jo
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
lret
lret
dec
leave
leave
inc
ret
mov
mov
ljmp
mov
cltd
call
xchg
xchg
xchg
xchg
xchg
lcall
lahf
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
jo
pop
pop
pop
or
jnp
xchg
lea
incb
jnp
jl
jl
jo
outsb
out
addr16
fdivs
je
jge
jle
js
jp
arpl
inc
inc
inc
cmp
pop
pop
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
popf
sahf
pushf
call
xchg
incl
xchg
xchg
mov
mov
xchg
mov
jp
jns
cs
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
mov
addb
decb
xchg
loope
jo
enter
mov
addl
addr16
cmp
es
jge
jg
lcall
shrb
lods
lods
sti
lods
lods
lods
stos
stos
lods
stos
stos
test
std
cltd
fwait
cltd
xchg
xchg
xchg
decl
jle
js
jp
jnp
jnp
mov
cwtl
movsb
mov
scas
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
incl
xchg
mov
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
mov
mov
or
push
xor
inc
dec
insl
insl
imul
test
fwait
lcall
fwait
fwait
lcall
mov
mov
mov
nop
lcall
test
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
mov
jnp
scas
cmpsb
stos
add
pop
adc
test
call
cltd
xchg
xchg
incl
xchg
decb
xchg
xchg
sahf
sahf
popf
std
movsb
mov
mov
in
xchg
nop
xchg
in
xchg
push
jne
cmovp
add
or
inc
sub
daa
push
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
xchg
std
mov
call
mov
test
lods
test
pushl
movsl
scas
mov
xchg
test
mov
xchg
lods
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
popf
cwtl
fwait
decl
mov
call
xchg
xchg
xchg
xchg
sahf
sahf
sahf
movsl
movsb
mov
mov
xchg
xchg
fstpt
jnp
push
push
push
outsl
dec
dec
dec
popaw
pusha
arpl
je
mov
jle
test
mov
mov
xchg
testl
mov
jmp
lahf
pushl
imul
mov
ss
mov
jbe
mov
cmpsb
mov
mov
stos
stos
mov
mov
add
shlb
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
xchg
xchg
fwait
lcall
sahf
lahf
sahf
mov
movsb
movsl
stc
cltd
lcall
nop
xchg
xchg
les
cltd
lcall
mov
stc
xchg
test
std
xchg
jb
lcall
jmp
inc
jge
mov
jnp
mov
jae
mov
outsl
ljmp
packuswb
stos
or
stos
or
mov
jge
mov
mov
lods
pushf
mov
movsb
mov
add
mov
add
pusha
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
popf
popf
jmp
sahf
sahf
call
xchg
xchg
decl
xchg
nop
call
cwtl
cltd
cld
cwtl
cltd
pushf
stc
sahf
lcall
pushf
xchg
xchg
insb
mov
xchg
pop
jge
xchg
dec
jns
fwait
cmp
push
pushf
pop
imul
movsl
adc
jmp
adc
lods
adc
lods
packuswb
lods
adc
mov
imul
adc
insb
mov
fwait
lods
mov
scas
lods
scas
movsb
movsb
movsb
sub
movsb
movsl
movsb
add
pop
pop
adc
mov
ljmp
pushf
call
pushf
pushf
lcall
movsb
movsl
jmp
mov
cwtl
decl
mov
decl
js
fwait
jo
lcall
call
cs
decl
adc
nop
or
xchg
add
pop
lcall
pop
pop
ljmp
sbb
mov
insl
pushl
push
outsb
mov
and
and
mov
aas
test
ret
xchg
lods
mov
scas
lods
mov
mov
movsb
movsl
add
pop
pop
adc
lods
mov
shlb
lcall
movsl
movsb
jmp
cmpsb
cmpsb
ljmp
test
lcall
jle
decl
dec
jo
mov
imul
mov
decl
or
incl
push
decl
add
xchg
add
xchg
add
lcall
ljmp
pop
outsl
pushl
sub
mov
sub
ret
sub
les
cmp
leave
inc
mov
scas
inc
mov
mov
movsb
mov
mov
add
push
push
adc
test
ljmp
lahf
jmp
test
ljmp
stos
lods
pushl
lods
scas
jmp
jo
decl
push
push
incl
or
add
push
incl
add
xchg
push
decl
add
xchg
add
fwait
add
lahf
add
add
scas
adc
mov
aaa
cmp
aaa
cmp
cmp
dec
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsb
movsl
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
movsb
cmpsl
ljmp
lahf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
ja
decl
push
decl
pop
incl
or
test
push
incl
add
popl
pop
call
add
mov
add
lods
add
pushl
cmp
int
call
inc
call
inc
nop
fmuls
call
dec
xchg
fimull
fisttpll
ficoml
call
test
mov
mov
movsb
movsb
movsb
arpl
mov
add
add
add
lcall
adc
jp
mov
test
popf
ljmp
mov
pushl
mov
pushl
mov
mov
mov
aaa
outsl
decl
sbb
nop
sbb
mov
pop
decl
pop
push
decl
add
xchg
add
pushf
add
add
cmpsb
add
test
popa
pushl
and
dec
inc
nop
call
push
xchg
call
push
lcall
push
pushf
ficomps
ficomps
jmp
pop
mov
jmp
pop
lahf
fadds
mov
cmpsl
jne
mov
mov
add
add
add
inc
inc
adc
js
mov
mov
popf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
je
xchg
and
and
callw
sbb
nop
or
decl
add
lcall
ljmp
add
mov
fs
mov
xor
ficompl
fisubs
fisubs
jmp
fs
in
cmpsb
jmp
addr16
call
push
scas
dec
mov
mov
mov
lahf
mov
add
add
add
inc
aas
adc
jp
xchg
cltd
call
sahf
pushf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
call
sbb
pop
call
pop
jmp
add
lods
add
mov
pushw
adc
roll
jmp
outsl
lods
jmp
outsl
lods
call
jae
jmp
mov
in
jae
in
jne
out
jbe
in
jae
jmp
mov
mov
cmpsl
test
lahf
mov
sahf
add
add
aas
aas
adc
outsb
js
mov
lcall
mov
pushl
mov
mov
mov
mov
scas
lcall
jo
mov
aaa
jne
lahf
xor
fwait
push
call
add
mov
add
stos
add
mov
popa
pushl
add
enter
fsts
jmp
ja
ljmp
in
jg
in
cmpl
push
xchg
push
cmpb
mov
inc
mov
stos
cmpsl
popf
popf
popf
daa
lahf
lahf
mov
add
add
add
add
ss
pop
pusha
push
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
inc
ret
ret
pushl
outsb
mov
lcall
jmp
aaa
ja
cltd
sbb
xchg
add
popf
add
movsb
add
test
add
mov
data16
mov
add
shll
mov
jmp
mov
push
pop
push
nop
ret
nop
sar
nop
push
xchg
push
xchg
clc
ret
out
mov
clc
lods
stos
stos
mov
sahf
pushf
xor
sahf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
sar
ret
ret
ret
ret
mov
jge
lcall
jg
stos
dec
test
movsb
xor
fwait
push
pusha
lcall
add
test
pop
ljmp
fs
mov
add
movl
mov
in
xchg
push
cltd
push
cltd
fwait
push
fwait
lret
fwait
enter
lret
cld
popf
into
sti
popf
into
sti
lcall
loopne
lret
mov
mov
sahf
mov
popl
cltd
cltd
cltd
add
add
add
cmp
add
cmp
jecxz
pusha
pusha
call
mov
mov
mov
sar
ret
inc
enter
mov
mov
ljmp
dec
xchg
movsb
sub
lcall
jmp
add
mov
mov
add
movl
jne
fiadds
out
lea
push
movsb
into
push
movsb
into
stc
test
cld
test
into
cli
test
iret
cld
test
sar
cmc
lahf
jmp
mov
dec
lret
mov
mov
sahf
lahf
sahf
dec
xchg
xchg
xchg
add
cltd
lcall
xor
sub
sub
inc
inc
inc
bound
push
xlat
jne
jo
mov
sarl
mov
ret
inc
ret
inc
leave
inc
ret
mov
cmpsl
jmp
mov
lods
dec
test
mov
add
movsb
add
lods
add
mov
arpl
mov
add
int3
add
fadds
je
ficoms
push
sahf
lret
lods
sar
sti
scas
aam
cld
mov
sti
mov
mov
std
mov
std
mov
cld
mov
std
mov
cld
mov
push
movsb
jmp
mov
dec
enter
mov
ficompl
xchg
xchg
or
add
add
xor
sbb
sbb
outsl
outsl
outsl
mov
aam
fsubr
aam
xlat
not
rcl
std
lret
int
dec
lret
leave
leave
lret
lret
mov
scas
jmp
push
mov
lods
cmp
jmp
add
mov
mov
add
rolb
outsb
call
add
loopne
je
jmp
jb
cld
lods
sar
cld
mov
cld
mov
fdivr
cld
mov
fdivr
mov
xlat
inc
std
mov
int
out
call
lret
into
mov
lahf
sahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
enter
in
pop
call
call
loope
fucom
fcomi
xlat
cli
aad
std
into
rcl
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
add
aad
jae
fldl
jne
in
js
in
xor
sti
mov
loopne
inc
loope
std
loope
std
fdivrp
inc
std
enter
enter
enter
std
lret
loope
cld
mov
lret
lret
mov
mov
xchg
adc
add
add
incb
incb
incb
hlt
div
or
in
in
pop
jmp
in
sub
in
in
dec
ljmp
xchg
call
call
fucomp
ret
mov
xchg
test
ja
movsb
adc
jmp
add
mov
fs
mov
add
int3
add
fadds
jb
loopne
jbe
jmp
inc
pushf
cld
mov
in
std
int3
jecxz
dec
in
dec
in
dec
loop
dec
loop
dec
loop
dec
loop
std
shl
std
shl
call
in
cld
out
mov
xlat
inc
out
test
cmpsb
mov
cwtl
xchg
add
add
add
std
incl
std
std
add
stc
testl
repnz
repnz
out
repnz
pop
out
repnz
cmp
out
in
pop
fnstsw
loope
mov
xchg
sti
sahf
and
lcall
add
lods
add
mov
fs
add
enter
roll
jno
fiaddl
jbe
in
jns
in
movd
cmc
pop
test
cli
mov
std
shl
dec
in
std
shr
shr
call
in
aad
xlat
call
std
fldl2t
fucompp
fucompp
cld
shl
push
ret
aad
in
fcos
lret
repz
test
xchg
xchg
xchg
and
cwtl
cwtl
add
std
cld
add
stc
add
sti
cli
add
div
or
shlb
sarb
negb
add
cmpsb
add
scas
add
mov
add
lret
add
roll
jno
fldl
ja
out
ja
out
sbb
cld
std
fldl2t
fldl2t
fucomi
fldl2t
fucomi
fsubr
fucomp
fucomp
std
fsubrp
std
fucomip
std
loopne
std
aam
push
ret
call
iret
iret
clc
lods
lods
stos
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loopne
add
mov
cwtl
repnz
ljmp
add
mov
add
into
add
aad
jno
filds
je
ljmp
sti
pop
cld
shl
jmp
out
fucomp
fucompp
std
fucomi
call
jmp
std
aam
cli
shl
sti
shl
clc
iret
fdivrp
stc
int3
fdivrp
cmc
ret
aad
out
mov
xlat
fcom
sti
mov
mov
cltd
cltd
lcall
cltd
cltd
add
xlat
add
leave
adc
lods
mov
lcall
add
mov
arpl
mov
add
rolb
outsb
call
add
add
ljmp
cld
cwtl
cli
leave
loope
sti
int3
loop
cli
fdivrp
test
sar
hlt
mov
into
push
mov
int3
jmp
mov
iret
std
jmp
shl
jmp
in
mov
mov
xchg
add
add
add
int
mov
mov
cmpsb
loopne
xor
pusha
ljmp
add
mov
add
int
jno
rorb
jbe
fistl
ja
loope
cmp
inc
cwtl
call
scas
lret
call
scas
enter
ret
cld
loopne
cli
fnsave
lock
int
fmul
iret
iret
shl
xlat
fcmovnb
out
loopne
in
in
test
out
out
popf
call
lret
lods
lods
lods
adc
test
cmpsl
add
rolb
ret
ret
popf
stos
aam
dec
cmp
sbb
cmpsb
sbb
jno
mov
js
mov
inc
test
ret
push
mov
lret
test
mov
out
mov
mov
lret
lret
rcl
int3
mov
iret
shll
xlat
aam
jg
jb
gs
in
out
out
jmp
div
sub
cmc
mull
repnz
icebp
sbb
fcmovnu
or
mov
int
mov
add
mov
sarb
mov
xchg
lock
xchg
ljmp
mov
sarb
test
mov
pushf
lret
mov
enter
int3
iret
addr16
rcll
rcl
dec
aad
aad
aam
xor
daa
fcomp
ficompl
fcmovu
ficoms
fsubp
loop
loopne
in
call
icebp
out
add
cli
cmc
add
std
cld
add
std
add
incl
mov
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
ret
inc
rol
xor
into
lret
daa
int3
ror
and
aad
sbb
rclb
rcl
aam
rcr
aam
rcr
xlat
add
fcmovnu
add
add
in
add
jmp
add
xlat
aam
std
incb
mov
mov
add
ret
vmovaps
mov
mov
push
rol
or
mov
add
int3
lret
add
roll
rcl
add
fcom
add
fcom
add
add
fsub
add
fildl
loope
loopne
jecxz
call
add
std
incl
std
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
les
ret
mov
mov
mov
ja
stos
test
test
xchg
xchg
pop
add
add
add
add
add
add
scas
scas
scas
adc
rol
mov
into
jmp
aam
cmc
aam
sar
iret
iret
iret
cli
int3
int
stc
int3
int3
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
iret
iret
into
xlat
aad
aad
call
rcl
dec
iret
int
lret
mov
mov
cld
stos
lods
stos
icebp
xchg
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
jae
je
gs
dec
inc
inc
cmp
sub
sub
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
int3
int3
call
rcl
call
rcl
dec
int3
int3
inc
rol
pushl
stos
stos
popf
popf
sahf
xchg
xchg
xchg
jmp
jno
xchg
push
push
adc
xor
add
add
add
add
addl
subl
imul
pop
pop
movsb
push
push
push
stos
push
push
push
pop
pop
cmp
aaa
cmp
outsl
jo
adc
mov
mov
sar
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
cltd
cltd
lcall
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
fwait
cltd
cltd
add
popf
xchg
cwtl
fcoml
addl
jmp
jns
sarb
jp
jnp
jnp
jae
je
push
push
push
cmp
jne
popf
pushf
pushf
mov
scas
scas
repz
lods
scas
sti
scas
scas
lods
std
test
pushf
popf
call
xchg
call
mov
scas
jmp
scas
scas
leave
cmpsb
cmpsb
cmpsb
cltd
je
jb
adc
adc
add
add
add
add
outsb
insl
outsl
pop
xchg
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
outsb
jo
mov
cwtl
cltd
cltd
lcall
lea
call
popf
lahf
ljmp
scas
std
mov
scas
mov
mov
mov
cmpsl
mov
addl
add
add
popa
popa
pop
or
scas
mov
movsl
sahf
movsl
decl
mov
call
popf
lahf
sti
sahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
imul
jle
subl
mov
mov
lcall
pushl
jo
mov
mov
mov
jnp
mov
lods
stos
insl
test
add
add
add
add
popa
or
mov
in
mov
xchg
call
cwtl
lcall
cwtl
cltd
cltd
fwait
lcall
xchg
xchg
jmp
xchg
lea
jecxz
orl
cld
xchg
pop
jle
sahf
dec
jnp
movsb
inc
jns
scas
ss
mov
jae
mov
insl
ljmp
sbb
mov
mov
mov
scas
scas
jle
movsl
mov
add
add
add
pusha
or
mov
in
movsl
test
lcall
mov
mov
decl
addb
xchg
jb
cld
xchg
pop
cmp
dec
jns
nop
cmp
nop
sub
xchg
sbb
cwtl
adc
mov
pop
push
pushl
sbb
mov
and
rcrb
mov
scas
scas
xchg
sahf
popf
lahf
adc
add
add
popa
pop
pop
or
mov
stos
mov
mov
ljmp
test
lcall
pop
jnp
mov
imul
sub
decl
adc
test
push
decl
add
xchg
add
pushf
add
cmpsl
or
jae
mov
das
jl
ret
xor
das
cmp
xor
dec
pop
xchg
inc
stos
mov
mov
mov
test
add
add
add
add
pop
or
movsb
test
cmpsl
mov
cmpsl
ljmp
mov
pushl
cwtl
mov
decl
xorps
test
push
incl
add
mov
push
call
add
movsl
add
mov
insb
inc
aaa
cmp
inc
mov
rolb
call
inc
mov
inc
xchg
fadds
call
popa
popf
inc
cmpsb
mov
mov
mov
mov
incl
add
add
popa
popa
pusha
or
sahf
mov
ljmp
mov
pushl
mov
ljmp
push
jge
mov
popa
call
push
pop
decl
push
call
add
cmpsb
add
scas
add
mov
dec
xchg
fstps
fistpl
fistps
jmp
pop
mov
fisubrs
dec
cmpsb
mov
ret
cmpsb
xor
add
add
dec
pop
jge
jnp
fwait
xchg
lcall
scas
scas
pushl
mov
mov
lcall
cs
sub
xchg
and
xchg
adc
xchg
add
lahf
add
add
scas
add
push
push
fisubl
jmp
insl
stos
jmp
outsb
stos
ljmp
out
jb
jmp
jns
call
test
std
mov
test
addb
add
dec
dec
dec
pop
outsl
outsb
insb
bound
lcall
mov
mov
mov
jmp
cmp
jmp
sub
xchg
or
pop
jmp
add
mov
inc
or
xchg
jmp
js
ljmp
push
test
push
xchg
fldenv
mov
push
cltd
fwait
cltd
add
sub
sub
push
push
dec
pop
gs
loopne
mov
mov
mov
ret
inc
mov
pushf
jmp
inc
cmp
lcall
ljmp
add
mov
adc
jmp
pop
mov
push
xchg
cwtl
push
cltd
clc
lcall
negb
inc
mov
stos
popa
lahf
mov
add
xor
xor
pop
pop
pop
push
fisttpl
mov
mov
rol
ret
ret
ret
pushl
pop
xchg
lods
dec
test
mov
add
test
pop
pushl
push
fldenv
cmp
jnp
push
mov
iret
cli
test
iret
std
stos
sar
cld
stos
sar
cli
cmpsb
int
out
dec
rol
stos
stos
stos
jne
pushf
sahf
or
add
add
dec
dec
push
aaa
je
je
stos
stos
test
out
iret
lret
cmc
lret
int3
int3
sti
lret
std
enter
mov
popa
ljmp
jmp
add
add
into
add
fiaddl
jbe
call
xchg
mov
std
mov
mov
cld
mov
xlat
sti
mov
ljmp
repz
lods
lods
mov
add
add
add
add
pop
or
aam
dec
loop
fsubp
fistps
fcmovnu
fcom
out
mov
addr16
cmpsl
sub
jmp
popa
mov
add
add
in
jl
repnz
mov
sti
loopne
inc
loopne
inc
loopne
inc
loopne
std
lret
std
lret
loope
std
out
mov
leave
divb
pushf
pushf
sbb
add
add
std
add
std
incl
jmp
or
out
in
sbb
in
jmp
call
out
xchg
mov
mov
mov
add
mov
arpl
rolb
dec
add
fldl
je
jmp
outsb
mov
sti
ret
std
iret
out
std
shl
call
in
std
aam
std
aad
call
call
push
enter
lret
sar
mov
mov
add
incb
std
incl
std
cld
pop
aad
aam
mov
pop
mov
popf
or
pop
pushl
add
rolb
jo
loopne
jbe
out
pop
mov
cli
mov
std
shl
std
fldl2e
std
fldl2e
cld
fsubr
xlat
jmp
std
xlat
out
std
aam
push
fdivr
loopne
xlat
sti
mov
popf
lahf
das
add
add
into
int
or
fs
mov
add
mov
add
roll
jno
loopne
ja
in
xor
cli
int
cli
lret
test
bnd
xlat
icebp
ret
std
out
sar
in
in
aam
in
jecxz
fsubrp
mov
stos
das
incb
aam
mov
jb
push
data16
mov
imul
sbb
lret
and
aad
test
loopne
lcall
mov
out
in
lret
mov
loope
mov
int3
leave
loopne
iret
mov
in
fcompl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
mov
ljmp
nop
fidivrl
andb
into
mov
les
rol
int3
insl
aad
iret
pop
ror
rorb
xlat
xlat
cmp
loopne
das
in
frstor
loop
lock
jmp
or
std
incl
std
std
add
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
rcl
aam
rol
adc
rcl
or
fnstsw
or
int
add
incb
std
std
add
add
add
int
shufps
or
int
int3
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
lcall
rol
enter
leave
enter
mov
ret
rol
mov
scas
mov
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
rcl
sar
into
int
std
mov
stc
mov
mov
sarl
gs
push
push
add
add
add
add
add
add
add
add
jb
jno
addr16
inc
inc
das
das
das
sub
and
add
add
mov
mov
cmpl
ret
dec
int
call
aam
dec
int
dec
enter
mov
lods
lcall
mov
push
add
add
add
add
je
jae
xchg
adc
bound
mov
push
insl
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
cwtl
lds
jae
daa
es
pop
add
add
jae
jb
fwait
xchg
fwait
mov
test
clc
xchg
or
test
push
dec
dec
inc
mov
popf
into
movsb
movsb
mov
sti
xchg
xchg
xchg
decb
mov
popf
lcall
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcl
stos
mov
mov
mov
cld
popf
pushf
sahf
cmc
lcall
mov
push
push
imul
jg
mov
xchg
testl
mov
mov
jo
mov
lods
lods
push
stos
lods
lods
add
add
add
test
lods
cld
xchg
xchg
xchg
call
lcall
cwtl
lcall
xchg
mov
loope
je
out
nop
bound
std
lcall
ljmp
and
mov
outsb
pushl
pushf
lods
lock
mov
imul
into
add
xchg
pop
scas
movsb
lods
test
sahf
sahf
sahf
jmp
movsl
call
push
js
nop
inc
jb
mov
imul
sbb
pop
call
or
ljmp
and
mov
sub
lds
xchg
mov
mov
subl
jne
push
mov
movsb
test
ljmp
scas
mov
sahf
xchg
decl
or
xchg
decl
pop
jmp
adc
shll
int3
ds
rolb
call
inc
mov
push
xchg
dec
cwtl
mov
mov
mov
movsb
mov
add
push
imul
cmpsb
mov
lods
pushl
mov
movsb
call
push
arpl
nop
push
pop
decl
add
mov
add
mov
push
xchg
fcompl
fistps
jmp
pop
movsb
jmp
data16
call
fwait
mov
test
cmpsl
cmpsl
pop
add
add
popa
popa
arpl
popf
fwait
fwait
cld
mov
mov
mov
mov
scas
lcall
jo
cltd
and
xchg
pop
pop
lcall
add
mov
push
jmp
outsl
stos
jmp
ja
in
jl
out
jle
out
jle
fstps
mov
and
add
add
adc
imul
mov
mov
mov
rol
mov
bound
lcall
add
ljmp
add
ret
pop
outsb
fisttpl
out
mov
hlt
xchg
cwtl
leave
clc
xchg
jmp
cmpsb
mov
cmpsb
cmpsb
sub
aas
inc
inc
adc
push
xchg
xchg
mov
inc
ret
ret
inc
mov
cwtl
ljmp
sbb
cmpsb
add
mov
fs
add
vmread
jmp
scas
push
cmpsl
into
cli
lods
iret
cld
scas
sar
sti
scas
sar
lods
sar
jmp
lret
mov
movsb
ds
std
add
xor
add
scas
mov
mov
aam
mov
aam
rcl
out
leave
enter
mov
jmp
arpl
les
imul
out
xchg
clc
mov
cld
mov
fdivr
inc
inc
std
ret
lock
ret
test
dec
addl
lods
add
jmp
or
jmp
in
outsb
fcomp
movsb
daa
outsb
ljmp
add
lret
fldl
jbe
out
aaa
xchg
sti
scas
std
int
call
in
std
shl
call
in
shl
push
fcos
aad
into
in
scas
scas
lods
popa
addl
add
std
incl
std
std
push
int3
int3
shrl
sahf
sbb
lods
add
mov
add
jecxz
js
cmc
push
cmpsl
cld
enter
aad
std
aad
cld
aam
cld
aam
stc
aam
push
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
imul
or
cmp
imul
in
mov
iret
bnd
ret
shl
out
rcl
call
scas
vsqrtpd
add
add
rol
mov
lods
xchg
and
shll
lret
mov
fdivrs
int3
adc
int3
outsl
fmul
rcrb
rcl
dec
in
loope
out
call
sbb
mov
mov
lods
arpl
mov
les
les
ret
ret
fisttpll
into
into
int
aad
push
std
incl
jg
jg
std
std
std
add
add
add
rol
std
std
incl
std
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
in
cwtl
pop
mov
lock
cmp
sbb
xor
jmp
cltd
mov
adc
push
pop
mov
push
ljmp
mov
jo
icebp
xchg
mov
into
push
sbb
add
inc
lods
dec
push
mov
inc
adc
int3
daa
sbb
cmp
divl
cli
fucomip
lds
fwait
push
mov
cmp
push
and
scas
pop
shlb
push
sbb
jg
cltd
int
js
movsb
out
push
mov
xor
and
sub
sub
mov
jle
insl
je
xchg
insb
inc
lods
ja
or
pop
dec
push
bound
mov
xchg
and
push
pop
push
cwtl
daa
stos
pop
outsb
jmp
pop
jg
int3
test
inc
arpl
dec
mov
jge
sbb
mov
arpl
xchg
dec
or
add
inc
test
aas
stos
push
nop
in
sti
xchg
fldl
jbe
sub
sub
cs
loop
push
mov
and
adc
jmp
mov
icebp
fildll
sub
push
jp
cmpsl
frstor
bound
inc
and
leave
mov
lret
xchg
orb
scas
cld
repnz
sbb
scas
pop
mov
ret
pop
push
mov
adc
dec
jge
popa
icebp
lahf
mov
cltd
and
int
pop
jne
loop
insl
scas
and
mov
enter
pop
cmp
repnz
fs
mov
mov
push
loope
jmp
in
loope
sub
faddl
adc
movsl
js
sub
mov
lret
out
cmp
or
stc
hlt
xchg
les
cli
adc
sahf
in
gs
add
push
or
push
fdivl
into
xchg
subb
cld
arpl
in
and
ds
push
pushf
jl
pop
dec
shll
pop
jae
mov
mov
and
loope
mov
repz
aam
in
mov
sub
add
out
iret
xchg
ficoml
push
inc
ret
dec
inc
xor
ret
pop
or
add
movsl
xor
ret
es
cmp
and
add
jbe
es
jo
test
in
sbb
mov
mov
std
pop
jbe
xchg
insl
mov
aad
ffreep
xchg
mov
fisubl
out
jecxz
notl
sahf
cmp
or
das
push
gs
dec
outsl
jmp
xchg
adcb
jle
out
std
add
mov
popa
dec
or
jmp
notl
rol
or
leave
sub
ds
lcall
subb
ror
popa
loop
shr
push
negb
pop
add
mov
test
jo
jle
jle
mov
jg
mov
cmp
pop
push
add
mov
imul
test
jl
ficoml
adc
andnps
adc
mov
rcl
mov
loopne
leave
mov
int
repz
adcb
call
pop
mov
scas
repz
jno
pop
or
add
add
sub
pop
or
push
push
xchg
inc
pop
mov
rcll
push
add
nop
jg
das
xor
add
mov
xor
inc
insl
and
fmuls
fcompl
les
mov
aaa
lahf
xchg
scas
sbb
and
outsl
or
out
lahf
inc
ja
sarl
in
cld
popf
gs
cwtl
jb
daa
enter
outsb
sbb
dec
jb
cld
mov
jmp
test
cmc
dec
mov
lcall
inc
cltd
dec
or
int3
xchg
inc
add
clc
pop
push
jne
shrb
in
lods
sub
test
lods
cs
xchg
sahf
movsl
jecxz
add
sbb
ficomps
fbstp
add
aam
cltd
xchg
sti
jg
lock
pop
xchg
and
sbb
rolb
mov
aam
sbb
enter
push
jno
cld
pop
or
mov
pop
or
ja
add
xchg
nop
pop
pop
into
test
sbb
sub
and
mov
mov
or
movsl
inc
or
add
mov
push
jns
das
in
inc
mov
cmpb
fldl
negl
push
test
jge
sarb
outsb
fwait
inc
test
jns
mov
mov
das
scas
mov
add
push
and
in
xchg
cmp
aam
or
and
jns
mov
mov
push
test
rcll
xchg
inc
icebp
dec
cmp
mov
dec
inc
mulb
or
clc
fwait
mov
mov
push
push
mov
add
or
out
cld
repnz
mov
mov
push
jge
xchg
inc
push
push
aam
loopne
in
adc
icebp
in
or
fidivs
mov
xchg
icebp
cmp
dec
lea
mov
imul
insb
inc
sub
mov
jb
dec
addb
outsb
add
pop
sub
mov
mov
mov
inc
insb
add
mov
adc
insl
jne
repz
mov
js
test
jns
adc
ss
in
xchg
ja
and
stos
je
adc
xor
pop
dec
loopne
cmp
lret
mov
pop
xor
enter
mov
inc
jbe
mov
mov
rcrl
dec
mov
cmpps
outsb
jo
insl
ja
out
add
push
inc
into
sub
dec
jae
inc
gs
or
nop
insb
add
and
int
outsb
pop
out
pop
jo
mov
in
dec
xchg
or
fcoms
dec
xchg
divl
or
and
cmp
add
mov
or
outsb
push
xor
lea
hlt
insl
cmpsl
lods
inc
out
add
cmp
cld
xchg
mov
aas
sbb
sbb
outsb
add
shlb
jnp
rcll
test
lcall
jnp
jb
pop
mov
xchg
adc
mov
std
dec
xor
jl
rorl
ds
int3
mov
mov
mov
mulb
fnsave
in
sub
in
ret
movsl
icebp
sub
fnstsw
cli
and
xchg
sarl
in
int3
arpl
inc
ljmp
cltd
or
fucomip
es
xor
montmul
cmpsb
test
sub
pop
adc
dec
loop
xor
imul
mov
fcmovnu
jno
repnz
cmp
das
clc
popa
inc
ret
pop
ja
push
lods
mov
loope
lret
lret
add
daa
push
jmp
jo
jo
stos
xchg
cmp
ret
and
adc
lods
inc
push
xor
inc
push
arpl
das
or
adc
push
scas
and
dec
dec
das
sahf
adc
lea
xchg
movsb
loopne
insl
push
jl
movsb
mov
sbb
add
push
inc
pop
or
inc
push
push
pop
cmp
int
fs
sub
mov
sbb
stos
adc
lods
add
dec
repnz
in
or
push
cli
pushf
fisubrs
les
ljmp
xchg
or
test
lret
xchg
std
cmp
push
cmpsb
cmp
mov
fiadds
jns
xor
cwtl
dec
test
fwait
xlat
fidivl
mov
clc
pop
subps
inc
jge
lods
scas
popa
jp
xchg
iret
xor
add
push
jmp
cmp
pop
movsl
pop
aad
mov
loopne
lods
inc
dec
add
test
sahf
push
xor
fldl
mov
mov
inc
ret
sub
hlt
bound
xchg
adc
arpl
and
inc
push
in
cmp
js
add
sbb
movsl
testb
jnp
add
dec
xchg
jge
pop
test
jno
cmp
adc
stos
xchg
mov
sbb
fisubs
mov
lock
add
mov
xchg
lahf
or
stos
inc
pushf
xchg
ljmp
jo
mov
dec
mov
inc
cmp
mov
bound
lods
inc
jne
fsubl
jae
pop
mov
stc
mov
insb
aam
out
test
inc
fistpl
push
in
lea
int3
arpl
sarb
aad
cld
xor
push
in
cld
lods
pop
idivl
jmp
or
lret
das
jbe
mov
and
mov
ret
imul
mov
testl
lds
dec
rclb
mov
adcl
jae
adc
in
test
ss
out
cmpsl
xor
icebp
enter
cwtl
adc
int3
data16
xchg
in
lret
xor
enter
push
jb
sbb
cmp
pop
cmc
and
add
xchg
lds
mov
scas
inc
iret
dec
mov
cmp
pop
and
mov
jl
bound
mov
inc
cmpl
in
add
pop
pop
hlt
mov
dec
in
test
mov
std
lods
pop
adc
das
shlb
jp
loope
ljmp
clc
out
das
stc
pop
pop
bnd
popa
clc
cltd
pop
mov
arpl
cwtl
sub
xchg
popf
inc
popa
clc
xor
aas
or
sub
jo
gs
js
xor
sub
mov
cld
sub
mov
or
dec
scas
loope
and
inc
fldt
inc
cmp
xor
mov
leave
inc
test
or
ret
jp
jg
insb
fs
mov
xchg
jnp
into
gs
adc
int3
aas
mov
inc
and
inc
cld
xchg
cmp
jns
dec
mov
jbe
insl
es
push
sbb
icebp
inc
inc
fiaddl
das
popf
xor
movsl
pop
notb
add
inc
fisubrs
lret
mov
fldl
into
rolb
popf
or
sti
xchg
loop
dec
add
je
inc
fldcw
inc
xor
movsl
daa
iret
cwtd
dec
inc
fnstcw
jae
pop
icebp
mov
xor
ds
dec
sbb
xchg
push
mov
movsb
out
mov
gs
out
xchg
xchg
imull
jo
sbb
mov
sbb
ds
call
sub
sahf
xor
in
addr16
xchg
adc
imull
call
or
adc
cltd
xor
add
jp
das
lock
ret
add
in
aad
aam
mov
push
fldcw
lcall
insb
gs
popf
jge
je
inc
sahf
decb
out
push
lods
sub
int3
arpl
les
mov
and
push
xchg
sub
and
popa
in
repnz
filds
dec
subl
add
shll
mov
jns
leave
lods
mov
jae
std
xchg
lret
sbb
into
dec
in
movsb
cmp
in
fcompl
add
xorl
cmpsb
cmp
shlb
mov
insb
pop
sahf
mov
dec
mov
nop
dec
jae
cmp
pop
sahf
xor
pushf
dec
fidivl
cmpsb
popa
stos
inc
fcmovu
sbbb
jb
clc
movsl
adc
out
test
push
jne
jg
sbb
cmpsb
cmp
stos
test
sub
sub
ret
ret
iret
outsl
nop
daa
popf
lock
loop
ss
add
mov
in
sbb
mov
in
sub
pushfw
pop
mov
mov
ds
push
pop
scas
inc
std
pop
out
add
inc
push
mov
sbb
push
mov
cli
mov
testb
scas
ds
inc
insl
jle
and
in
push
aas
inc
out
xlat
outsb
cli
fs
lock
jbe
stc
addr16
xor
cmp
imul
stos
mov
nop
daa
inc
lods
push
out
push
icebp
data16
das
inc
sub
xor
je
stc
push
mov
mov
push
call
push
push
pop
imul
mov
push
adc
mov
jnp
aaa
lahf
dec
out
pop
movsb
cmp
cmc
mov
pop
mov
sub
or
add
aam
sub
cmp
mov
mov
pop
sub
fnsave
adc
dec
sub
outsb
add
cltd
addl
clc
adc
test
rclb
pushf
xor
and
xlat
outsb
mov
loopne
cwtl
sarl
insb
add
jnp
dec
jl
and
dec
xchg
pop
or
sbbb
sub
inc
cmc
mov
mov
inc
inc
cld
xchg
mov
inc
push
cmp
outsl
je
pop
data16
mov
clc
out
ficoms
sbb
mov
movsb
in
aam
push
ljmp
int3
arpl
shl
ja
in
xchg
sbb
mov
aam
clc
call
mov
xor
jl
rcrl
cmp
push
cmp
jb
mov
ret
mov
add
arpl
shrb
pop
pop
sahf
mov
xchg
cs
jns
test
pop
out
lods
sahf
les
pop
inc
fsubl
push
mov
data16
leave
pusha
push
xlat
xor
lcall
xor
std
std
push
lods
out
nop
pop
sahf
mov
dec
jge
lahf
mov
and
cmpsb
or
sub
stc
mov
fnstcw
lock
loope
fiadds
or
dec
pop
cmc
jne
mov
test
or
mov
shrb
inc
stos
mov
stos
inc
mov
fimuls
iret
jge
push
mov
push
imul
add
pop
jne
dec
loopne
xchg
xor
pop
in
mov
adc
sbbl
loope
sbbl
rorl
sub
stos
bound
rcll
mov
xor
rclb
repz
sbb
mov
jno
stc
stos
inc
ficomps
out
mov
mov
and
inc
ret
lret
xor
inc
fcom
fidivl
cmc
push
call
mov
dec
lret
lcall
push
sub
and
rorb
out
sub
add
pusha
idivl
cmpsb
cmp
lock
test
filds
or
and
cmc
pop
outsb
or
pusha
sbb
jno
imul
std
pop
out
cs
arpl
sub
fists
and
push
jno
add
jge
pop
adc
or
aam
jne
sbb
repz
lret
daa
testb
cmpsl
xor
sub
out
aam
jo
xchg
sub
xchg
dec
loope
out
in
into
sbb
mov
ret
ret
aam
in
in
mov
push
jno
popf
fbld
out
lret
cld
or
stos
pop
sbb
pusha
idivl
jo
sub
pop
mov
imul
icebp
adc
ss
cltd
cmp
pop
and
cltd
iret
adc
mulps
or
push
sbb
andl
daa
mov
cmpsb
hlt
xor
and
inc
gs
ja
es
lret
fstps
enter
gs
fmull
lds
clc
pop
adc
cmpsb
mov
mov
fwait
or
push
loop
inc
ffree
xchg
push
jmp
jne
inc
addr16
in
sbb
outsl
push
mov
repnz
int3
mov
adc
sar
push
out
repz
mov
in
in
test
fsubrl
push
lret
inc
fcomp
das
fdivl
add
sbbl
loopne
pop
sbb
mov
mov
inc
fcomp
rolb
mov
cmp
sbb
sbbl
movsb
cmp
aam
mov
dec
pop
ss
mov
xchg
mov
ja
shrl
adc
fisttpl
push
sub
and
ljmp
jno
push
mov
pushf
shlb
daa
lret
bound
mov
add
dec
repz
cmp
mov
adc
mov
pop
outsb
pop
sub
aad
xchg
sbb
dec
sbb
fs
loop
cmp
out
daa
out
scas
das
movb
jno
and
js
testl
adc
lock
jae
sub
pop
inc
mov
fdiv
sub
sbb
mov
or
into
pop
loop
dec
in
pushf
jno
icebp
fcoms
fcomp
stos
jbe
repz
loope
arpl
loopne
xor
dec
add
jae
adc
cltd
push
push
icebp
dec
hlt
sub
scas
mov
push
cmpl
stc
ss
mov
dec
repz
jbe
out
lcall
sbb
pop
imul
pop
jns
loopne
xchg
inc
fsub
test
and
pop
inc
fsubs
cwtl
das
movsl
xchg
sbb
ds
bound
outsl
or
xchg
sub
loop
adc
insl
icebp
sti
clc
in
pop
pushf
xor
sbb
xchg
push
fnstenv
adc
clc
movsl
add
es
mov
imul
flds
or
ja
loopne
pop
scas
cmp
sti
xchg
aad
addr16
scas
push
arpl
xchg
iret
xor
mov
cli
sub
mov
loopne
movsl
adc
inc
xor
cmpsb
mov
mov
in
dec
xor
imul
bnd
pop
ret
aam
dec
push
in
js
sub
cltd
scas
cmp
push
jmp
mov
sub
repnz
xchg
dec
xor
lea
and
cmp
push
in
fs
pop
scas
jbe
je
or
push
popf
jne
add
sub
test
dec
add
pop
nop
mov
fnstcw
shlb
jge
mov
fmulp
data16
test
xor
imul
lret
bound
sti
cmpsb
cmp
push
dec
shlb
js
push
stos
mov
sbb
repz
jge
in
pop
scas
inc
dec
inc
adc
adc
mov
mov
jl
movq
enter
cmp
imull
jne
mov
ljmp
out
mov
jp
or
ret
notb
mov
inc
das
cmp
out
xchg
ja
iret
xor
push
jno
pusha
xlat
aad
and
lods
inc
mov
cmpsb
cmp
pop
mov
imul
aaa
adc
je
cmpsb
xlat
outsb
sbb
push
dec
xlat
movsb
cmp
leave
outsl
push
mov
sub
aam
and
add
xchg
lret
jp
xchg
aas
pop
inc
rclb
jns
add
jb
ljmp
adc
mov
mov
adcb
fisubrl
nop
push
daa
insb
add
arpl
jno
pop
idivb
es
dec
fdivl
and
popf
adcl
imul
xor
mov
cmpb
jno
inc
bound
test
lret
mov
imul
ss
pop
scas
mov
push
jno
mov
leave
sbb
hlt
mov
inc
aad
popf
add
ret
pop
and
andb
pop
sub
mov
dec
mov
add
pop
adc
out
pop
add
fucomip
test
cld
jl
repz
rol
and
and
xchg
sub
testb
aaa
adc
add
fs
push
fists
movsl
mov
mov
jl
fwait
jb
clc
popa
decl
out
inc
or
mov
inc
push
lods
xor
mov
jecxz
jp
xchg
sub
outsl
push
inc
dec
mov
outsb
push
into
dec
push
mov
dec
jno
xchg
xchg
push
xor
cmc
inc
inc
testb
pop
fs
lea
push
lods
hlt
aas
pop
out
jle
push
out
lahf
es
std
ds
fistl
mov
rorl
shlb
out
inc
fistpl
inc
ficompl
rolb
imul
inc
sti
das
sub
pop
repz
pop
pop
scas
bound
dec
loopne
cmp
mov
or
cld
andnps
inc
sbb
and
jmp
or
stos
mov
inc
sbb
lock
adc
mov
ret
fistl
mov
cld
pop
divb
xlat
jge
xlat
fisttpll
lahf
in
call
or
mov
popf
clc
inc
iret
pushw
adc
enter
xor
jnp
sbb
cmpsl
movsl
xchg
sub
enter
and
jnp
cld
mov
xor
in
fdivl
sbb
xchg
sub
int3
lds
aam
jle
mov
mov
filds
popf
jmp
xchg
sub
mov
cli
xchg
push
scas
inc
lods
mov
pop
into
les
inc
fs
and
mov
mov
dec
in
pop
repnz
adc
mov
push
jmp
in
or
in
push
push
jmp
lahf
pop
and
pop
orb
inc
xor
jb
push
movsl
test
lret
and
sub
or
add
fstps
jns
mov
lds
loopne
mov
xlat
dec
in
out
jmp
sub
mov
out
dec
loop
or
cmp
stc
nop
adc
pop
repnz
outsl
push
filds
cmpsl
fsts
test
add
dec
in
and
scas
mov
xchg
data16
dec
in
xchg
mov
sbbl
es
mov
push
jmp
rol
pop
mov
push
jmp
icebp
mov
mov
fs
push
out
push
test
pop
out
inc
fisubrs
jecxz
rcl
xor
insb
test
xor
shlb
xor
movsb
push
testl
lock
xchg
sub
mov
cmp
xchg
divb
adc
into
mov
pop
cmc
imul
pop
testb
dec
fnstenv
and
xchg
lods
inc
repz
xlat
mov
cmp
cmpl
inc
aam
mov
dec
xor
stos
inc
pop
ret
mov
pop
mov
js
or
lret
addb
jb
insl
setl
mov
push
mov
or
push
or
in
sbb
cmp
ss
pop
scas
inc
mov
xchg
cmp
lret
pop
cs
pop
fsubrs
push
movsl
adc
push
movsl
xlat
push
mov
fbstp
cs
sahf
shlb
rorl
inc
xchg
or
and
je
ret
andl
dec
loopne
mov
mov
iret
mov
push
mov
fisubrs
sbb
mov
imul
push
mov
icebp
inc
mov
pop
negb
sbb
addr16
mov
gs
push
push
xchg
push
das
aad
lea
lea
scas
es
fidivl
adc
xchg
xchg
sub
ss
sbbl
xchg
fidivl
and
call
test
lret
sti
mov
enter
hlt
xor
or
jge
sbb
cmp
pop
lock
mov
scas
and
stc
fdivl
into
outsl
add
pop
xor
pop
lret
push
lock
cs
inc
xlat
push
pop
xchg
dec
cmpsl
outsb
add
lds
ret
sbb
shl
shrb
jmp
or
out
add
imull
test
adc
mov
out
loope
ficomps
jp
xor
add
movsb
mov
or
cmp
sbb
arpl
out
mov
sub
dec
sbb
xor
shrb
mov
cmp
push
leave
mov
cwtl
outsb
and
mov
push
xlat
enter
inc
fwait
outsb
arpl
in
jns
mov
clc
cmp
stc
push
pop
jg
cmp
cmp
bound
jmp
jo
add
mov
adc
movsl
inc
jle
mov
jge
scas
pop
push
call
mov
inc
lods
rorl
sub
jle
imul
cmp
fwait
call
sbb
add
mov
mov
ljmp
jne
jb
lret
test
jmp
in
and
mov
pop
test
rorl
shrl
popf
cmp
lsl
jp
lock
lods
repz
gs
add
xchg
ss
pushf
add
cmpl
ja
pop
ret
and
insl
outsl
inc
sub
push
xchg
dec
pop
mov
push
mov
ret
xchg
ja
push
cmp
nop
in
pop
sbb
movsl
mov
ds
test
sbb
loop
ret
inc
adc
cltd
mov
sbb
jbe
inc
push
mov
pop
sub
pop
jno
out
and
mov
outsl
dec
sub
popa
pop
adc
outsl
pop
loope
xchg
int
ret
pop
sub
add
or
inc
int3
lock
jecxz
pop
repz
lcall
and
jb
inc
cmpsl
or
mov
ljmp
sbb
xchg
inc
inc
cmpsl
xchg
dec
in
shrl
ret
sub
xchg
in
movsl
in
into
gs
jno
cmp
inc
inc
imul
xchg
xchg
mov
jl
jb
and
jae
jl
stos
fidivs
movsb
add
adc
jo
and
fdivl
inc
sti
and
lea
jae
int3
arpl
sbb
cmpsl
pusha
movsb
push
divb
push
out
popf
mov
and
push
mov
cmp
add
push
pop
adc
pop
mov
pop
push
or
dec
xchg
je
inc
dec
mov
dec
mov
mov
ja
add
lret
or
aad
lock
lock
xchg
rcll
adc
cli
xchg
cs
fwait
pop
pop
mov
mov
rclb
sti
subl
and
sbb
pop
push
sahf
jns
call
fxch
pop
in
gs
and
adc
fisubrs
je
daa
add
mov
xor
ret
push
jp
in
push
add
ljmp
pop
cli
sub
mov
pop
rcrb
sbb
mov
xchg
call
hlt
sbb
fldpi
aam
sbb
mov
stos
outsl
shrl
and
jae
adcb
jge
les
pop
push
or
add
rcrb
sub
dec
jnp
cmp
aad
pop
xchg
sub
fsubrs
lea
nop
cmp
sarl
jp
and
ret
jg
rcll
fcom
jmp
xor
not
mov
lds
pop
cmc
pop
cmp
data16
push
pushf
xchg
sub
mov
cmp
fadds
inc
fst
test
imul
add
and
inc
add
inc
pop
idivb
mov
inc
or
ja
inc
shlb
xchg
fwait
xchg
aad
mov
pop
mov
mov
enter
add
push
repz
or
xchg
out
mov
arpl
mov
adc
popa
push
xlat
loop
es
ja
pop
hlt
fs
mov
divb
mov
call
jge
in
jle
add
and
adc
stos
repnz
cli
loop
sub
nop
aaa
mov
std
xchg
pop
aam
imul
push
std
push
ret
in
inc
sub
ja
push
push
inc
or
into
das
xor
gs
push
into
pop
aas
jecxz
mov
push
mov
sahf
cmp
fsubrs
in
fimull
xlat
repz
loopne
mov
jp
shll
stos
aaa
out
and
or
lcall
addr16
inc
adc
hlt
jno
xchg
stos
or
lods
imul
out
xor
stc
shll
xchg
sub
inc
test
push
pop
push
in
push
inc
jno
sub
jl
enter
adc
lcallw
inc
pop
inc
ficoms
or
cwtl
into
sti
imul
cmp
xchg
sbb
and
jl
and
hlt
pop
repnz
imul
inc
jns
je
data16
out
xchg
ss
inc
mov
add
fnstenv
and
dec
inc
xchg
cmp
mov
divps
pop
mov
ret
cmc
lcall
into
rcrb
sbb
pushf
hlt
add
xor
mov
mov
lods
xchg
or
or
cmp
lea
xor
mov
adc
sub
xchg
testl
and
add
mov
hlt
jb
addl
dec
gs
jp
aam
inc
pop
add
push
dec
lea
sbb
int3
sub
mov
gs
lret
lcall
lcall
jb
inc
in
cvtps2pd
aaa
sub
adc
lds
scas
popa
clc
loopne
push
aam
stos
sbb
mov
mov
lods
pop
sbb
sbb
mov
adc
popa
add
xchg
xchg
sbb
inc
mov
lods
push
jmp
mov
push
lods
xlat
clc
pop
int
cmp
and
sbb
sub
arpl
and
sub
push
in
cmpsb
adc
int3
mov
mov
scas
pop
dec
cltd
mov
lcall
fdivr
negb
inc
sub
sbb
sub
dec
inc
fwait
jl
mov
in
sbb
xor
jnp
es
out
xchg
scas
lods
mov
mov
mov
mov
out
mov
dec
push
push
mov
scas
mov
rcrb
jmp
nop
lods
rolb
mov
in
lahf
cmp
sti
push
mov
dec
pushw
push
rclb
pop
mov
mov
and
xchg
cld
xchg
sti
xchg
cmc
je
mov
flds
mov
sbb
jne
rorb
push
adc
cmpsb
push
jnp
add
mov
movsb
or
mov
das
mov
mov
inc
idivb
mov
jecxz
pop
jge
and
ljmp
cld
clc
scas
adc
inc
iret
jg
movsl
sbb
inc
mov
sub
mov
ret
hlt
mov
push
adc
ret
hlt
add
xchg
push
bsr
xchg
or
in
xchg
mov
push
cmc
scas
fwait
mov
insb
add
test
push
cmp
pushf
xor
test
outsl
aas
in
pop
push
jmp
dec
cli
repz
add
in
dec
push
imul
stos
mov
cltd
das
movsb
lds
xchg
lret
xor
sub
add
sbb
cmpsl
push
pop
adc
xchg
ss
pop
in
dec
sub
ds
iret
cmp
cmp
sub
dec
dec
pushl
pusha
cmp
pop
scas
jl
popf
cmpsb
adc
data16
in
mov
pop
ja
and
sbb
mov
mov
pusha
mov
enter
adc
sbb
bound
mov
pop
jg
pop
pop
repz
lret
mov
or
fcoml
mov
sbb
jnp
xchg
and
jecxz
jns
in
pop
mov
or
jl
mov
pop
dec
jecxz
leave
insb
adc
ds
push
and
xor
mov
incl
ljmp
xor
out
lods
cmp
jbe
inc
fisttpll
and
jl
ja
sti
xor
repz
xchg
test
subl
xchg
sub
mov
leave
data16
xor
stc
mov
cmp
jnp
sbb
lock
aam
mov
inc
jno
aaa
dec
jge
leave
ljmp
mov
mov
or
stos
cmp
ljmp
push
outsb
xchg
mov
fwait
pop
repnz
adc
adc
sbb
popa
pop
lahf
fisubrs
cltd
push
dec
lea
push
jle
std
rcrl
es
mov
scas
xor
hlt
pop
mov
inc
mov
mov
xchg
push
mov
mov
popf
xor
xor
mov
repnz
cmp
add
adc
and
jns
sub
dec
fisubl
rcrl
mov
sahf
call
add
xor
mov
shl
test
dec
cwtl
movsl
std
dec
sbb
scas
je
jl
and
xchg
ret
or
jg
xor
inc
inc
in
xlat
outsb
pop
loopne
ret
sub
clc
pusha
dec
dec
ss
stc
int
je
inc
faddl
push
mov
sbb
pushf
dec
std
adc
mov
into
mov
xchg
cmpsb
cmp
xchg
out
dec
daa
shrl
pushf
sub
imul
mov
xor
stc
dec
mov
testl
repz
jecxz
cmpsb
jmp
cmc
mov
sub
lahf
inc
cmpb
out
aas
fsubr
pop
sub
cmp
bound
pushf
adcb
into
pop
pop
sbb
lret
dec
mov
inc
ret
imul
xor
mov
jecxz
shr
scas
inc
pop
repz
jbe
and
lods
mov
adc
dec
pushf
dec
push
pop
mov
sbb
mov
ret
nop
lock
mov
pop
cmpsb
mov
pop
imul
mov
mov
pop
push
xchg
sti
fldt
xor
jno
mov
mov
push
and
int
sbb
cmp
shrl
or
add
orl
clc
pop
inc
dec
ss
cmp
xor
cmp
inc
fidivrl
cwtl
popf
inc
pop
stos
dec
aad
in
out
cmp
dec
fidivrs
xor
jbe
push
push
fidivrl
fldl
inc
xchg
inc
dec
mov
lods
and
sbb
inc
mov
and
push
mov
xor
inc
inc
push
sbb
dec
pop
dec
in
cmp
decl
xchg
and
xchg
fbld
sbb
pop
loopne
pop
or
cs
xchg
mov
out
negl
aas
xchg
scas
and
int
jo
adc
cmp
scas
lea
cmp
dec
movsl
and
and
inc
xchg
stc
add
sbb
xchg
movsl
inc
adc
scas
shrb
das
mov
movsb
hlt
arpl
in
shll
add
daa
mov
sub
in
and
dec
lock
push
in
sub
sub
mov
sarb
daa
cmp
push
js
popa
mov
aas
dec
pop
out
jle
mov
stc
in
repnz
cmp
pop
movsl
jae
push
adc
fucomip
cld
jae
andl
and
aam
stos
mov
lcall
mov
or
sbb
xchg
lock
es
clc
mov
and
mov
xchg
popf
lods
nop
ror
stos
add
cmpsl
popa
les
pusha
in
mov
jne
mov
pusha
nop
out
out
xor
test
addl
inc
ljmp
stc
cmp
pusha
neg
pop
cmpb
movsb
xor
jp
mov
jo
fidivrl
jae
xor
andb
adc
shlb
or
mov
sub
xor
andl
xor
loopne
jge
sbb
sbb
xlat
cmpsl
adc
pop
inc
adc
pop
push
add
popf
mov
stc
ljmp
rcrl
push
loopne
jbe
mov
insb
testl
pop
dec
in
mov
ds
das
testl
adc
dec
fisubl
sub
push
lods
xchg
insb
pop
ret
cld
nop
imul
jno
cmp
enter
dec
mov
mov
and
push
lods
nop
xchg
adc
mov
sti
push
cmp
cltd
in
repz
jg
cli
sub
or
pop
sbb
sub
push
cmp
insl
and
pusha
inc
outsb
ret
repz
mov
scas
sub
std
push
xchg
sub
push
insl
mov
out
xchg
push
fs
ljmp
jmp
adc
cmp
mov
add
mov
and
enter
int3
loopne
sub
fcmovnb
inc
mov
ljmp
imul
or
mov
dec
jbe
out
mov
adc
out
adc
xchg
mov
adc
stos
add
sbb
cwtl
stos
das
push
arpl
xor
pop
add
mov
push
jnp
push
cmp
ljmp
repz
sbb
cmpsb
dec
out
mov
jl
push
sbb
xchg
jae
aas
sub
xchg
cltd
mov
pop
mov
mov
std
jl
ret
xor
dec
cwtl
ret
cmp
xlat
jno
adc
push
cwtl
inc
cwtl
or
cs
sub
or
sbb
push
cmp
cmp
push
adc
jmp
sub
jg
mov
mov
dec
jo
xchg
mov
sbb
lods
xor
imul
cmpsb
je
out
sbb
cmpb
js
push
pop
and
pop
dec
push
dec
pop
or
repz
xchg
insl
cli
inc
push
mov
rolb
pop
fidivrs
adc
repnz
fsubrs
repz
cli
aas
out
pop
fwait
inc
xchg
adc
xchg
dec
mov
pusha
daa
and
ljmp
icebp
out
jecxz
movsl
lahf
cmpsl
je
mov
jge
test
sar
mov
jmp
std
push
into
mov
inc
add
test
pop
mov
sub
arpl
es
mov
inc
divl
or
imul
fs
fs
aas
int
mov
loopne
pop
lock
es
loope
pop
loope
ds
cmpsl
popa
js
repz
fistl
inc
adcb
sbb
or
xlat
cmp
out
rclb
mov
pop
xchg
and
loope
cmc
aas
lock
cmc
repnz
jns
pop
xor
mov
lcall
enter
fisttpl
imul
mov
sbb
aam
jmp
adc
fldenv
pushf
std
jg
push
sti
jns
adc
in
test
imul
pop
jl
int
cld
aas
movsb
mov
pop
out
clc
leave
sub
push
aas
cmp
xchg
fdivrp
xor
mov
fs
jns
add
xor
imul
clc
inc
clc
cmp
add
mov
push
xchg
mov
clc
pop
cmp
std
mov
jp
stc
mov
and
out
int
pop
xchg
leave
mov
lods
lea
push
sahf
loopne
outsb
push
loope
dec
pushf
add
shrb
outsl
pop
cmc
sahf
mov
sar
sub
scas
sub
mov
test
dec
add
out
stos
mov
pop
jb
repnz
sbb
and
leave
decb
push
jnp
adc
sub
out
pop
jo
rclb
cltd
lcall
jge
cmp
push
pop
inc
lret
dec
jecxz
arpl
aad
inc
test
mov
pop
mov
and
out
cmp
cltd
xlat
xor
rcr
xchg
mov
loope
orb
out
pop
ds
insl
pop
push
les
mov
cmovbe
add
cmpsb
lock
sub
movsb
adc
sahf
in
aaa
or
ret
daa
out
decl
cmpsl
sbb
mov
daa
jo
lods
test
mov
rorb
pop
xor
das
push
cmp
out
mov
cmpl
in
pop
aas
push
mull
push
movsb
daa
sub
imulb
cs
push
out
and
mov
loop
lods
pop
pop
pop
in
add
fadds
int3
dec
sub
jns
pop
fldt
addr16
jle
cmpsb
scas
aas
data16
lret
mov
inc
das
xor
lcall
sub
push
sbb
mov
insl
cmp
scas
jnp
push
scas
push
cmpsl
jb
lcall
sbb
in
dec
jns
push
insl
sbb
jge
fs
mov
xchg
sbb
outsl
jb
fcom
sub
xchg
pop
sub
jbe
sub
adc
dec
in
jmp
jge
in
bound
insl
mov
push
push
das
xchg
pop
inc
dec
iret
cmp
mov
sub
xlat
xchg
inc
ffree
clc
inc
popl
dec
icebp
mov
xor
stos
mov
dec
icebp
leave
pop
mov
sub
dec
ret
into
sub
out
std
inc
out
mov
or
xchg
cmp
mov
cmpl
lods
xchg
addr16
or
arpl
mov
test
pop
loop
jmp
or
loop
in
mov
je
or
outsl
inc
or
xchg
jb
in
sbbl
sti
out
sahf
xor
into
pop
push
ret
and
fidivl
fsubs
in
rcl
adc
inc
fnstcw
add
roll
daa
inc
sub
mov
jnp
push
jmp
xor
ret
and
es
hlt
ss
pop
shlb
or
insb
xchg
mov
mov
lcall
push
subb
icebp
cltd
fistps
out
fwait
out
inc
push
mov
out
xchg
outsl
jl
inc
cmp
mov
bound
cmp
xchg
pop
mov
pop
out
arpl
xchg
jno
loope
fcomps
adc
sbb
out
loop
mov
repz
dec
int
push
ljmp
pop
imul
xor
fcoms
addb
jb
cmp
pop
jg
and
push
jne
lret
cld
adc
jle
out
sub
fnstenv
rcrb
insb
subb
aaa
mov
inc
sub
jo
loop
arpl
icebp
inc
les
mov
jmp
out
popf
or
das
out
cli
xorb
xchg
dec
xlat
lret
sub
sbb
mov
xor
push
xor
sbb
and
jp
xor
push
in
pop
push
cld
cmp
add
sub
repnz
out
and
cmp
adc
pop
pop
sbb
gs
in
adc
push
ficoms
in
jno
push
xchg
mov
sub
mov
stos
sub
repz
fisubrl
mull
add
out
test
aaa
adc
scas
mov
push
dec
mov
pop
ljmp
push
lods
or
add
jns
aas
addr16
out
test
cmc
mov
bound
xchg
adc
mov
shl
push
xchg
push
dec
loopne
mov
pop
jmp
or
sbb
pop
lds
mov
jp
push
rcrl
add
aad
and
sbb
aad
cmp
jbe
ss
and
xchg
pop
mov
test
jmp
pop
movsl
xchg
lret
cli
sbb
loope
or
xor
scas
pop
jecxz
mov
leave
and
push
test
aas
jns
mov
cmp
sub
sti
add
inc
dec
fildll
jmp
ss
shl
push
and
inc
shrb
ficomps
std
popf
jge
dec
push
lds
mov
out
mov
sarb
xchg
fdivl
subl
and
leave
or
jg
fs
in
push
shrb
bound
cmp
stos
inc
push
pusha
push
sub
test
filds
sbb
test
cmp
mov
shll
xchg
mov
nop
pop
mov
ret
or
pusha
inc
mov
push
inc
loope
xorb
mov
es
in
jg
adcb
roll
je
stos
cwtl
sbb
lods
out
sbb
ror
sub
subl
mov
hlt
ljmp
ret
and
cmp
ret
cltd
int3
pop
adc
pop
out
stos
stos
scas
ret
fisttps
in
std
aas
mov
ss
cmp
lret
rcrl
jno
loopne
mov
outsb
hlt
arpl
sub
out
ljmp
and
push
adc
jg
push
aaa
sbb
fcoml
jbe
shll
pop
imul
mov
pop
or
std
sbb
inc
or
adc
fwait
lret
inc
pop
mov
icebp
stos
inc
dec
push
enter
cli
mov
push
dec
lret
pop
aam
push
lock
ja
dec
movsb
inc
push
jge
push
cmpsl
popa
push
test
jle
adc
dec
or
xor
scas
jns
sub
out
jbe
sub
and
push
aad
cmp
adc
repnz
in
jge
rcrl
jle
mov
push
out
dec
pop
xchg
jo
jb
mov
enter
sbb
sub
mov
push
mov
iret
daa
sub
push
xchg
ss
push
lea
mov
push
add
shlb
jb
iret
jmp
fimull
inc
mov
push
sub
fstpl
push
and
andb
lret
dec
mov
lods
sbb
push
out
insl
lods
jne
lds
aas
add
outsl
inc
dec
lret
pusha
cmp
ffreep
ja
mov
lcall
and
sub
add
test
jge
xchg
dec
cmp
rcll
lcall
pop
and
pop
add
mov
icebp
enter
lcall
sub
pop
pop
mov
out
jae
xlat
or
int3
pop
das
mov
ljmp
jg
xor
jmp
fldt
or
ss
mov
push
xor
adc
push
jge
movsb
adc
push
push
xchg
add
in
cmp
fwait
out
adc
das
mov
xchg
hlt
xor
pusha
mov
shrb
mov
pop
mov
add
xchg
test
out
mov
ret
repz
push
mov
pop
cmp
andb
cmp
dec
stos
mov
popa
sti
aam
fsubrl
xor
int
push
jl
lea
jg
sar
mov
nop
es
gs
out
ret
ljmp
pop
repz
dec
mov
out
popa
adc
and
jns
gs
lock
add
xchg
test
mov
sub
out
sbb
pop
out
inc
pop
jp
cmpsl
addr16
lock
mov
lret
pop
push
jp
hlt
mov
sub
notl
fdiv
pop
out
das
push
bound
push
je
in
in
jmp
jae
aam
xchg
xchg
lods
call
es
mov
arpl
scas
stc
push
in
and
push
mov
cmpsl
mov
shl
std
add
fstpl
sahf
negl
aaa
mov
add
lret
mov
movsl
in
js
mov
popa
mov
sti
call
fimuls
push
loopne
and
jp
negl
xchg
ret
lahf
push
sbb
pop
mov
lds
pop
ds
push
jo
enter
pop
cmc
int
loopne
xchg
jl
push
mov
lret
push
shrl
fdivs
xor
sbb
pop
hlt
push
das
jnp
lret
ret
push
mov
mov
adc
inc
fwait
jg
adc
repz
cmc
and
pop
fildl
mov
inc
fcoml
adc
int
loopne
adc
inc
bound
jbe
imul
jno
mov
cmc
cmpsb
jecxz
in
or
lea
mov
ficompl
sarb
mov
push
lods
jns
xor
add
insb
lods
jbe
out
pushf
lods
cmp
and
pop
dec
sti
lock
cs
inc
out
add
pop
outsb
push
push
fistpl
mov
lods
sub
pop
int
mov
xchg
nop
arpl
es
xor
pop
dec
xor
lahf
or
xor
popf
lds
mov
dec
rep
dec
ret
push
call
test
jne
pushf
mov
fwait
cmpsb
mov
mov
push
push
cmp
push
mov
cs
add
cld
push
cmp
pushf
cli
repz
shrb
imul
cli
int3
mov
les
int3
loop
out
jp
jmp
add
sarl
pushl
rorl
shl
push
xor
inc
mov
fs
xchg
mov
rcrl
mov
jmp
xorl
lds
dec
in
imul
adc
or
loop
inc
mov
je
add
xchg
negl
enter
push
pop
push
enter
int3
aaa
jo
xor
iret
jle
xlat
aas
jbe
cwtl
shr
addl
add
xacquire
dec
and
jns
mov
std
cmp
loope
daa
jecxz
repz
cmp
daa
mov
mov
popf
pop
dec
cmpsb
clc
jnp
jmp
ret
add
jg
mov
dec
push
mov
mov
cmp
mov
xor
daa
inc
push
push
jbe
lods
xchg
mov
enter
jg
cmpsb
cmp
call
or
mov
fsubrl
lahf
pop
pushf
in
imul
and
mov
pop
arpl
push
xor
adc
xor
jp
cmp
xor
cltd
jno
dec
xchg
cmp
imul
dec
mov
and
pop
loopw
sbb
and
or
ss
jno
mov
decb
scas
mov
mov
pusha
push
gs
cmp
sub
cmp
out
adc
dec
sub
dec
negb
ud2
jle
popf
scas
sub
jecxz
repz
dec
jecxz
xchg
add
test
divb
xor
jge
xchg
shrb
mov
push
out
dec
jno
inc
xchg
pop
pusha
outsb
sub
push
cmp
cmpsb
add
inc
pop
dec
dec
arpl
mov
dec
push
or
rorl
mov
mov
fcmove
out
mov
mov
adc
jb
aaa
movsb
and
pop
add
dec
les
mov
push
add
sahf
inc
xchg
push
jecxz
mov
adc
and
push
mov
out
xchg
sub
scas
notb
xchg
mov
pop
ljmp
ljmp
sbb
ds
pushf
lcall
mov
push
adcb
pusha
ret
jno
shl
mov
push
fcomps
add
popa
mov
pushf
mov
fdivrs
dec
ja
inc
push
inc
sbb
insl
add
daa
mov
pop
scas
jg
cmpsb
xchg
lods
in
test
cld
add
imul
dec
out
pop
shrl
xchg
jbe
add
fdiv
and
outsl
dec
repz
test
dec
mov
mov
xlat
outsb
xchg
xorl
xor
xor
xor
xchg
sbb
sub
dec
insb
mov
rep
into
xchg
call
mov
sbb
lahf
inc
pop
add
fldenv
cmp
dec
loop
subl
push
fadds
sub
jl
add
outsb
ds
xchg
data16
pop
mov
or
iret
and
mov
and
jb
int
sub
mov
mov
filds
dec
sbb
and
or
out
outsl
xor
ja
test
mov
pop
mov
pop
push
stos
dec
das
cmp
fnstenv
mov
jecxz
xor
mov
je
jp
jns
mov
hlt
fdiv
aas
mov
add
jo
fwait
leave
xchg
aaa
into
cmova
cwtl
xor
stos
xchg
adcb
psrlq
ror
hlt
or
test
fcompl
jl
pop
loop
fildll
mov
fcmovb
xor
pusha
dec
filds
fs
xlat
cmp
cmp
sahf
dec
sub
js
repz
enter
orb
pushf
push
ljmp
jno
add
jp
ja
push
mov
ret
popf
sbb
hlt
rcll
sbb
pop
daa
fidivs
and
mov
sti
aaa
inc
fsubrs
jecxz
sahf
cmp
test
mov
mov
jns
sbb
pushf
xor
shll
push
mov
adc
pop
and
adc
test
test
jae
mov
pop
pop
and
pop
popw
inc
fimull
adcb
push
mov
mov
push
pusha
cmp
sbb
gs
pop
cld
or
in
jmp
push
cmp
sbb
mov
lahf
push
arpl
nop
clc
add
fwait
ja
xchg
dec
scas
mov
leave
lahf
push
mov
or
xchg
pop
bound
and
pop
ret
insb
imul
dec
call
mov
push
mov
mov
dec
sub
mov
xchg
add
add
mov
popa
cmp
or
daa
mov
xchg
test
pusha
fsubr
push
addl
loope
insl
push
popf
popf
adc
sbb
dec
xchg
cmpsb
cmp
dec
sub
jbe
rcrl
add
mov
cmc
or
dec
cmpsl
fstpl
push
xchg
push
jl
cli
scas
mov
mov
mov
cltd
fldcw
adc
popf
or
mov
push
add
inc
pop
push
mov
sbb
cmp
aam
or
std
pop
or
pop
push
je
xor
dec
callw
ljmp
int3
sbb
insl
cs
ljmp
dec
or
jmp
or
cmp
ds
in
in
adc
insb
sbb
xchg
js
mov
mov
mov
mov
ret
in
test
clc
adc
aad
sub
in
and
sub
aas
divl
adc
sub
pop
dec
lcall
insb
clc
inc
arpl
shrl
inc
xchg
inc
xor
shll
push
loop
cmp
mov
sarb
lret
jnp
cmp
sub
aaa
or
push
push
push
push
je
cmc
pop
pop
push
cltd
pop
sbb
loopne,pt
ljmp
mov
dec
test
movsb
mov
out
sbb
mov
movsl
into
mov
inc
inc
mov
xchg
test
out
pop
lea
push
jp
scas
scas
loop
fbstp
int
fwait
aaa
sti
fildll
mov
outsl
imul
dec
pop
sbb
xchg
in
xchg
jne
inc
cmpsl
mov
inc
mov
or
popl
pop
outsl
orl
idivb
push
dec
aad
fwait
pop
cmp
add
scas
push
sti
fsin
stc
mov
ret
jnp
clc
jae
fdivrp
sahf
mov
sbb
movsb
rcrb
jo
sahf
inc
fcmovbe
pop
test
jecxz
popa
jnp
add
inc
std
sub
dec
rcl
mov
in
or
hlt
sbb
xchg
pop
jne
xchg
arpl
push
add
xor
sbb
cmp
jecxz
dec
adc
outsb
dec
fcomp
sub
out
ss
out
jecxz
stos
cmp
bound
pusha
pop
pop
xor
clc
std
xchg
sub
lret
add
or
sbb
and
cli
notl
fistpll
pop
mov
pushf
jle
xchg
xor
mov
xor
xchg
add
icebp
xchg
add
popa
mov
add
aas
xchg
orb
xor
or
xchg
xchg
push
or
gs
cmp
and
pop
lock
push
jo
mov
inc
loopne
jg
je
cltd
sub
inc
fs
add
inc
xor
das
adc
xchg
xor
lock
fldt
subl
push
or
mov
cli
sub
stos
insb
iret
pop
call
jb
and
lock
mov
pop
psrlq
out
xor
rolb
push
add
push
dec
pushf
push
lcall
std
or
cmp
or
in
mov
fstl
test
add
xor
add
adc
pop
daa
add
adc
int
ret
bound
or
lea
mov
movl
imul
and
inc
cmp
and
jae
dec
and
xchg
jge
or
divb
sbb
das
ret
push
or
jmp
sbb
sub
xor
mov
push
icebp
sub
arpl
cmp
out
outsb
sbb
lods
xor
sbb
cmp
popa
out
xchg
pusha
push
pop
sbb
sahf
aaa
out
cmp
sub
push
pop
mov
leave
fwait
in
sbb
xor
loope
int3
lret
jnp
and
test
pop
mov
repnz
dec
loop
dec
mov
shr
orb
cltd
inc
loop
jbe
mov
xchg
adc
or
insl
ficoml
sbb
sub
jae
cmc
shlb
jle
cmpsb
sub
mov
jge
out
xlat
cwtl
insl
sub
rol
mov
ret
or
add
sub
add
xorl
xchg
xchg
add
mov
fstl
ljmp
adc
push
mov
pop
arpl
inc
insl
cltd
mov
fisttpll
pop
adc
ret
aad
cmc
mov
inc
insl
out
lea
out
xchg
mov
fstpl
cltd
jns
push
stos
mov
xor
inc
mov
mov
add
pop
into
mov
jg
call
rcrl
int3
mov
xchg
xor
adc
leave
mov
int3
insl
ljmp
mov
dec
fnsave
xor
std
cmpsl
xchg
pop
push
mov
xchg
addb
ficompl
adc
cwtl
pop
sbb
mov
gs
sub
xchg
je
lods
sbb
cmpsb
enter
fs
and
xchg
mov
jp
mov
shlw
mov
out
in
repnz
ljmp
aad
or
mov
imul
inc
adc
and
pop
in
push
popa
clc
inc
fs
sub
dec
dec
xchg
loop
cmp
faddl
sbb
jmp
add
in
movsl
sbb
out
outsb
scas
loope
and
mov
sahf
jge
data16
imulb
das
leave
push
std
xchg
inc
cld
dec
in
or
push
pop
stos
je
push
jg
or
push
mov
xchg
mov
movsl
or
aam
popf
idivb
out
js
ret
pop
sbb
test
outsl
inc
and
cld
nop
call
daa
insl
sbb
in
popa
fsubrl
test
mov
nop
ffree
negb
pop
sbb
lret
movsl
sub
ds
dec
in
lahf
inc
fsubs
mov
shld
shrb
test
pop
imul
mov
and
int3
jge
out
stc
pop
leave
cld
push
jb
push
jecxz
stos
mov
add
mov
lods
inc
mov
jne
and
mov
ret
sbb
sbb
arpl
ss
jle
cli
xchg
lcall
push
aad
leave
test
mov
cmc
bswap
mov
mov
xchg
in
movsl
and
cwtl
dec
movsb
mov
push
jo
cld
sub
in
adc
add
orb
sbb
push
les
push
push
fcoml
pop
fmull
addl
push
sub
into
push
or
cmpsl
ja
pop
xor
orl
xchg
adc
test
mov
pop
movsl
jle
loopne
xchg
add
into
movsl
fmulp
test
je
push
out
xchg
insl
in
inc
icebp
push
or
mov
ret
mov
cld
shl
mov
adc
test
cmp
push
sub
int3
jecxz
lret
lret
insb
sub
into
mov
lea
rclb
fcomp
neg
test
adc
stc
dec
stos
sub
pop
jecxz
push
adc
orl
lods
ret
fs
sub
pop
cmp
dec
loope
or
in
das
xor
xchg
sub
sub
stos
inc
cmpl
leave
pop
pop
sub
dec
pop
jg
jno
je
popa
cmpsb
dec
imull
dec
out
test
cs
lds
mov
faddp
test
jae
sub
mov
jg
inc
pop
or
or
sub
mov
xchg
mov
and
jnp
add
lret
jno
popf
push
rcrl
add
popf
stos
dec
jne
mov
movsb
xchg
mov
jmp
add
out
pushf
out
orl
ljmp
mov
les
sub
stos
cmp
sarl
lock
fsub
arpl
imul
xrelease
xlat
loope
dec
fsubr
adc
jno
mov
cmpsl
dec
xorps
test
je
popa
pop
movsb
sti
lret
xchg
push
test
stc
push
mov
sahf
leave
mov
in
inc
je
mov
cld
outsl
outsl
jns
jno
nop
sbb
mov
test
adc
mov
mov
adc
mov
lahf
bnd
in
and
es
repz
pop
mov
mov
ja
add
cmpsb
or
adc
ror
cwtl
xorl
test
jecxz
daa
dec
ss
pop
divb
xchg
imul
lcall
and
pushw
mov
mov
lock
es
shr
fwait
imul
cmpsb
aas
popa
sbb
rclb
jbe
jno
jae
jecxz
xchg
sub
testb
push
adc
sbbl
ljmp
mov
dec
mov
mov
sarl
lcall
add
push
out
je
push
sub
int3
imul
push
pop
jns
jp
or
cmpsl
push
push
add
lea
shlb
dec
mov
or
mov
std
dec
mul
mov
int3
call
outsb
es
add
jle
mov
jno
inc
mov
jmp
jmp
cli
fnsave
mov
pushf
inc
sarb
cmp
insl
mov
xor
cli
jne
sbb
pusha
adc
and
adc
mov
test
cmp
push
or
dec
fmull
test
out
fwait
mov
out
cmpb
out
adc
std
enter
mov
mov
shl
add
jmp
lods
sub
adc
inc
mov
decb
in
rorl
jb
test
and
jb
jbe
add
ret
xor
cli
iret
ds
out
adc
push
out
fldenv
loopne
in
in
add
testl
sub
jmp
into
ljmp
in
and
add
xor
fnstenv
jp
ds
lods
data16
add
pop
mov
jbe
cmpsb
push
adc
imul
push
ret
mov
add
mov
mov
psubd
push
cmpsl
mov
in
mov
sbb
push
inc
adc
pop
fldl
cld
adc
dec
fwait
hlt
repnz
dec
leave
inc
ret
cli
outsl
int3
dec
popa
mov
sarl
xchg
fistpll
cmp
dec
ja
and
or
add
pop
addr16
insb
sub
std
pop
popa
dec
xor
xor
xchg
inc
xchg
jmp
les
test
add
call
dec
sub
loopne
call
inc
mov
sbb
or
lock
imul
mov
and
jg
sbb
mov
inc
es
ret
xchg
jbe
mov
push
sbb
jae
mov
lds
dec
mov
mov
std
shl
out
push
es
pop
stos
add
fs
ret
fxch
pop
inc
fnstcw
repz
mov
les
pop
repnz
add
ljmp
scas
mov
fldl
adc
xchg
call
or
lock
sti
insb
mov
pushf
lock
and
ss
enter
dec
jge
outsb
push
rep
dec
add
popf
cmpb
pop
jmp
rolb
push
add
shl
xchg
gs
pop
pop
out
repz
fildl
sbb
inc
adc
and
adcb
test
pop
call
push
mov
mov
les
xorb
scas
mov
sbb
mov
jb
insl
sub
mov
jle
sub
cmp
in
mov
pop
into
call
add
dec
out
mov
repnz
mov
mov
or
xchg
sbb
test
add
cmpsb
inc
rcll
pop
fs
sahf
addb
jne
mov
je
sub
jnp
cld
mov
mov
ficoml
adc
inc
mov
outsl
dec
xor
loope
mov
rep
repz
les
int
adc
push
inc
sbb
fucom
mov
sbb
sbb
lods
jmp
adc
int
repz
cmp
cmpsb
jmp
nop
xchg
mov
adc
push
test
jmp
outsl
push
mov
sbb
push
aam
dec
jmp
es
lahf
mov
cltd
scas
in
dec
and
pop
inc
pusha
lcall
xchg
cs
jne
sub
mov
lahf
cmp
inc
lret
jns
jmp
rorb
mov
das
sbb
dec
add
fucomp
sbb
sbb
loope
shrl
out
cmp
sub
jecxz
lock
xchg
mov
sbb
sub
push
pop
repnz
dec
insb
inc
cld
push
mov
xchg
mov
mov
push
add
jnp
nop
lods
mov
arpl
mov
xchg
pop
or
ja
sbb
dec
shrb
push
push
adc
sbb
jo
pop
xlat
cli
fs
scas
xchg
pop
xchg
out
imul
cli
add
xor
mov
and
adc
shll
add
mov
add
test
sub
pop
cmpsl
xlat
pushf
push
lods
and
pop
clc
sbb
movsb
jge
icebp
fs
xchg
sbb
nop
and
aad
jecxz
out
mov
aam
lcall
ja
arpl
xchg
jecxz
enter
shlb
arpl
pop
sub
cld
inc
add
loopne
iret
cmp
cmp
daa
add
popa
xor
jecxz
mov
pop
dec
data16
xchg
pop
rorl
and
pop
aam
add
out
imul
and
mov
mov
je
fdivs
call
divl
std
scas
cmp
popf
push
mov
push
xor
pop
in
rcll
cli
lods
xor
fildll
pusha
xchg
rcl
enter
rclb
jmp
insl
ljmp
mov
sub
lods
daa
fdivrl
mov
jb
je
adc
mov
xor
call
sarb
insb
push
divl
out
gs
lret
cli
or
test
dec
shl
jmp
pop
pop
pop
sarb
loope
xor
or
xor
arpl
xchg
adc
insb
dec
in
movsl
push
mov
cmc
mov
cli
mov
push
dec
push
jl
jno
fnstsw
pop
mov
inc
in
inc
loope
mov
dec
jmp
dec
shrl
mov
xor
outsb
hlt
mov
jae
mov
mov
and
out
mov
imul
iret
insl
repnz
lods
sbb
sub
cmp
mov
out
sub
mov
adc
mov
xor
insl
jg
xor
push
dec
ja
bound
mov
ss
popa
dec
arpl
or
fmuls
jbe
lahf
pusha
add
leave
jb
and
int3
inc
dec
mov
in
addr16
pop
mov
and
inc
enter
nop
mov
fstl
ret
mov
mov
inc
sbb
je
sbb
xchg
bound
movsl
and
adc
push
xchg
push
push
and
jge
ljmp
mov
adc
test
lea
insl
lods
mov
or
fdivrl
outsb
mov
jns
sahf
jb
mov
inc
int3
sarl
leave
loop
push
adc
cmpsb
in
xchg
ror
in
or
pop
cwtl
mov
fcompl
mov
cld
iret
and
or
jb
xor
ljmp
mov
jmp
sub
rorb
pop
mov
push
pushl
aaa
mov
insl
add
imul
adc
sahf
push
imul
fcmovu
loopne
xor
push
sbb
mov
sbb
fisttpl
sbb
jmp
inc
icebp
and
aad
push
ljmp
inc
pop
cld
adc
clc
mov
sub
push
mov
loop
stos
addr16
sbb
imul
mov
test
xor
test
in
push
mov
insl
or
das
cmp
cmp
out
mov
icebp
test
mov
ja
stc
rcrb
xchg
sbb
and
xchg
int
inc
aam
pop
fmull
mov
imul
push
bound
inc
push
out
loope
or
xchg
je
sbb
jl
rorb
xor
jecxz
imul
imul
add
in
and
fwait
out
xchg
mov
xchg
pop
fs
outsl
adc
hlt
mov
sbb
leave
xchg
icebp
arpl
mov
mov
xchg
or
icebp
ds
or
mov
pusha
in
and
xor
or
rorl
inc
cmp
pop
dec
push
in
sbb
cmp
imul
jns
jp
ret
ja
mov
les
inc
lcall
test
sub
test
movsl
jle
sub
push
mov
push
call
and
inc
fnstsw
pushf
test
lahf
xor
push
jmp
dec
sti
fwait
mov
jb
pop
jmp
jge
inc
int3
mov
mov
cltd
das
sub
in
push
outsb
inc
lret
mov
mov
rorb
hlt
mov
pop
sti
flds
sub
push
stos
or
sbb
gs
mov
bound
ljmp
cmp
daa
leave
xlat
mov
jmp
mov
enter
popf
ds
cmp
cmp
cmpsl
adcb
call
jno
shl
out
adc
mov
sarb
mov
lods
mov
lods
mov
popf
and
or
add
repnz
aas
rcrb
dec
jg
repz
mov
sarl
mov
int3
cmp
je
adc
dec
push
lret
ja
std
jb
int
fimull
lahf
or
and
mov
cmc
js
sarb
fcoms
hlt
push
popf
out
into
pop
sub
dec
cli
mov
bound
xchg
daa
push
dec
jge
nopl
into
xor
shr
imul
inc
push
aas
xor
aad
sbb
cmp
int3
or
or
pop
imul
pop
jo
push
mov
loop
outsb
cmp
add
aad
lea
jle
mov
icebp
mov
sub
cmp
xchg
pop
repz
testb
daa
arpl
pop
dec
or
or
nop
xchg
mov
gs
clc
rorl
add
in
aaa
mov
popa
aam
sub
repz
dec
pop
adc
inc
dec
pop
in
cli
sbb
fbstp
fisttpl
mov
cmp
rorb
sbb
jmp
fadds
ds
call
pushf
or
sub
fwait
outsl
dec
sbb
ficompl
hlt
ljmp
mov
ret
push
sahf
dec
outsl
mov
cwtl
in
mov
add
adc
ret
xchg
pop
push
cmp
sub
push
jmp
mov
jecxz
cmp
xor
imul
pusha
jb
and
jne
mov
or
dec
popa
xchg
dec
add
push
xlat
sub
rclb
mul
fbld
pop
adc
mull
iret
and
adc
lret
or
pop
out
jecxz
shrl
stos
aad
sub
pop
decb
setnp
xor
insl
push
add
or
adc
js
gs
mov
mov
pop
mov
sub
mov
clc
mov
sub
sub
je
movsl
pop
lea
cmp
pop
pop
jp
daa
aam
mov
inc
inc
outsb
sbb
dec
mov
fucompp
cmp
adcb
aaa
enter
popa
testb
lea
inc
adc
push
or
shrb
pop
fadd
pop
shll
aam
jl
sub
fidivs
lret
out
iret
aad
push
or
adc
pop
inc
xchg
iret
cs
mov
rclb
lods
inc
cltd
pop
pop
outsb
or
mov
push
arpl
sub
ud2
xor
lret
sbb
std
cmp
stos
jp
pop
or
shll
mov
jo
or
cmpsb
cmp
pusha
jnp
sub
pop
add
testb
mov
subb
rcr
aam
add
mov
xor
iret
push
test
xor
mov
aaa
sbb
xchg
les
fnstcw
push
or
jg
mov
cmp
fdivl
cmp
fistpl
rcrb
sub
cmpsb
pop
jbe
add
and
addr16
arpl
adc
push
stos
jno
pop
ja
leave
mov
jge
sub
int
hlt
dec
mov
sahf
push
and
pusha
cmpsl
lods
jp
scas
bound
xor
int3
jb
js
test
scas
and
rcrl
jne
cmpsl
and
lahf
push
sbbl
jmp
xchg
jns
mov
int
inc
clc
push
aad
xor
push
addr16
rcrb
sbb
jb
mov
int
sahf
ds
mov
aam
test
sub
add
rcll
je
lds
fisttps
and
mov
adc
inc
mov
clc
add
jbe
and
divl
repz
jle
stc
jle
cli
jecxz
add
ret
popl
push
test
int3
iret
xchg
mov
lret
movsb
mov
jle
sub
fisubl
jmp
sub
dec
add
out
mov
ret
xlat
in
movsb
cmp
and
into
fdivl
int
xor
cli
fwait
xor
push
fcomp
movsb
mov
adc
mov
daa
sub
pop
mov
popa
rol
pop
daa
dec
and
sarl
les
adc
pop
or
xor
adc
pop
xchg
mov
scas
test
es
sub
pop
xchg
hlt
insl
jmp
pop
jge
sbb
xor
sahf
shrb
gs
mov
lds
mov
mov
pop
out
adc
pop
sub
cmp
push
dec
lods
xor
pop
jo
lret
push
jns
loope
test
loop
pop
inc
pop
xorl
mov
js
cmp
sbb
sbb
add
jbe
out
mov
inc
push
gs
ja
mov
mov
fsubrp
xchg
jge
arpl
pop
mov
dec
add
jecxz
fs
aaa
testl
push
clc
inc
negl
push
in
insl
imul
call
mov
popa
push
mov
iret
xchg
int
sub
pushf
test
fnstcw
aam
lret
gs
cmpsw
scas
imul
fimull
repnz
jbe
pop
push
fstps
mov
pop
enter
xchg
hlt
roll
mov
ja
inc
popf
xor
and
push
out
dec
repnz
and
jp
jno
xorl
inc
lret
push
mov
mov
sti
mov
lods
inc
sub
mov
and
adc
cli
in
mov
sbb
xchg
fbstp
mov
iret
imul
push
and
pop
js
lret
xlat
outsb
std
xchg
push
sti
inc
lea
push
mov
sbb
cmp
dec
inc
mov
push
xchg
cmp
fisubrs
dec
popa
mov
xchg
jecxz
mov
enter
ljmp
in
push
pop
push
push
sub
mov
in
adc
adc
lods
lret
and
lcall
cmp
sbb
cmc
mov
lret
pushf
jecxz
push
lods
inc
loope
xchg
mov
loopne
mov
push
xchg
jb
jnp
jecxz
inc
stc
dec
cld
xchg
addr16
icebp
and
movl
daa
and
push
jo
daa
cli
test
sub
pop
adc
test
and
out
push
and
into
or
inc
cmp
mov
in
pop
sub
addr16
sub
ljmp
mov
nop
sbb
add
adc
mov
mov
aas
xor
push
pop
repnz
loopne
imulb
cmpsl
dec
sub
cmpsb
lock
shlb
push
aad
inc
xlat
out
sbb
mov
xlat
cwtl
decl
pushf
add
aam
out
lock
cmc
sarl
daa
pop
js
sbb
imul
clc
add
sub
sarl
lret
bound
jmp
pop
or
rcrl
mov
dec
pushf
jno
repnz
push
sub
jmp
test
lret
loope
push
jno
dec
jg
push
sti
cmp
shll
xchg
mov
ret
and
jge
mov
fcmove
js
cmc
bound
clc
push
sbb
aaa
dec
xchg
mov
shl
mov
push
cmp
test
add
lahf
cli
push
lea
xchg
fwait
es
shlb
xlat
fildll
mov
es
push
mov
mov
cld
xchg
sub
fwait
pop
push
movsl
mov
movsb
insl
add
jecxz
jb
pop
pop
jg
mov
xlat
lods
icebp
jnp
mov
and
cmp
sahf
xor
dec
repnz
lret
push
sub
push
pop
jbe
leave
stos
ja
int
int3
inc
rcl
lret
cs
jle
insb
add
xchg
mov
stos
xchg
in
or
push
push
mov
shrl
cmpsl
fcom
jmp
mov
xor
mov
cwtl
and
das
lret
stos
push
dec
scas
mov
ds
ljmp
pop
inc
fistl
in
push
inc
out
jb
jmp
in
pop
rol
jmp
pop
icebp
in
and
sarb
loopne
out
sbb
mov
adc
sub
lahf
daa
mov
lds
sub
sbb
lds
cmp
xchg
mov
xchg
popf
psrlq
icebp
cmp
rcrl
movsl
je
fwait
movsl
movb
and
in
fcoml
or
iret
bound
pop
fucomip
stos
in
les
gs
jmp
insl
sub
inc
stos
mov
sbb
sbb
ss
jl
xchg
push
xor
mov
jo
jo
daa
mov
inc
sahf
clc
jbe
sub
int3
mov
mov
into
cmpb
ljmp
int3
pop
bnd
in
xchg
xchg
insb
adc
stc
nop
pop
jbe
push
test
nop
int3
mov
mov
fdivrs
fstp
out
sti
inc
inc
loop
pop
leave
mov
add
jecxz
arpl
pop
mov
push
je
into
xor
addb
dec
mov
cmp
ds
mov
xor
xlat
mov
in
scas
xchg
pop
jnp
mov
xlat
addr16
lods
jmp
pop
adc
pop
aad
cmp
or
dec
xor
push
xor
scas
ficoms
lea
mov
pop
cmp
in
jecxz
mov
add
adc
mov
iret
out
inc
push
aam
arpl
jns
mov
push
mov
iret
xor
push
gs
mov
fcmovbe
in
cmp
xchg
add
jno
dec
jecxz
xchg
mov
xor
sbb
xchg
push
imulb
or
and
sub
dec
lock
xchg
pop
shrb
outsb
sbb
jae
push
mov
or
sub
dec
jo
mov
insb
push
in
pop
in
dec
xlat
mov
jo
shlb
mov
or
xor
outsb
inc
enter
ljmp
xorl
lods
in
in
aas
and
or
inc
add
insl
aad
rclb
je
xor
loopne
push
gs
rcl
arpl
out
mov
jmp
ja
pop
adc
mov
inc
and
fsubs
mov
sbb
jbe
ret
jnp
inc
insl
repnz
insb
std
fcmove
cs
shl
sbb
fisttpl
loopne
adc
loope
xor
aad
push
rcrb
pop
fcmovbe
out
fs
gs
bound
aad
cmp
and
jbe
mov
cli
in
in
xor
mov
repz
xchg
sbb
jns
out
mov
jne
and
dec
inc
or
xor
in
dec
fists
jg
into
testb
lds
shrb
into
pop
idiv
adc
lods
enter
add
cld
adc
sub
sbb
or
push
jne
movsl
dec
xlat
mov
leave
push
inc
jb
adc
xchg
ficomps
das
sbb
xorb
out
rclb
shlb
repz
insl
in
repnz
fists
add
adc
outsb
sbb
jmp
cmp
and
es
pop
icebp
nop
popa
lahf
jl
dec
adcb
pop
outsb
sbb
mov
cltd
loope
fucomi
inc
mov
inc
mov
daa
push
adc
out
xchg
movsl
ret
loope
cmp
aas
pop
mov
div
outsb
or
in
sbb
ret
push
pop
jns
rcrb
push
lea
jns
arpl
repz
dec
popl
lds
movaps
sbb
loop
xchg
mov
inc
out
xchg
push
pop
out
fdivrl
imul
sahf
int3
push
fninit
jnp
shlb
dec
sub
sbbl
mov
add
add
andl
sub
rorb
adc
pop
movsl
inc
gs
dec
dec
ja
mov
test
push
in
push
movb
sbb
mov
jg
pushf
daa
dec
adc
sub
inc
popl
sub
test
std
lahf
jmp
test
lret
mov
mov
imul
sub
rcrb
sbb
mov
mov
jnp
pop
jg
pop
loop
das
and
and
pmullw
inc
jg
sub
add
mov
cmp
das
loope
insl
jnp
cmp
pop
mov
add
sub
jne
lods
add
mov
test
sti
pushf
sub
xchg
je
inc
mov
call
cmp
sbb
and
gs
gs
inc
mov
cld
mov
or
dec
movsb
add
fdivs
xlat
pop
out
cld
mov
ja
fdivrs
cwtl
iret
sahf
or
sbb
cs
mov
fldl
sti
xchg
mov
lods
cmc
jno
fmuls
loopne
push
push
mov
xchg
jae
pop
imul
hlt
or
js
jl
mov
es
mov
lods
jb
mov
pusha
popf
push
or
and
xchg
cmp
dec
je
dec
push
mov
mov
cld
lds
test
cmpsb
adc
int3
ja
aad
pop
lcall
cmp
mov
or
pop
sbb
add
inc
stos
cltd
inc
cmp
testb
push
xchg
xchg
pusha
leave
fdivr
xchg
or
insb
fisttps
stos
push
in
jne
std
stos
mov
xlat
cmp
or
pop
xor
imul
or
mov
jae
fsubr
add
or
pop
sarl
add
mov
mov
sbb
mov
stos
shrl
adc
or
cmc
mov
int
addr16
in
test
push
nop
xor
mov
test
cmp
aas
push
push
pop
or
cmp
add
mov
nop
enter
subb
adc
gs
inc
and
andl
loop
movsb
cmp
imul
mov
and
test
pop
cmp
jb
push
xchg
mov
cmpsb
les
out
sbb
lret
loope
add
inc
dec
add
jl
adc
testl
stos
push
push
shlb
jbe
and
pop
insb
xor
jb
xchg
jg
lcall
gs
adcb
mov
enter
imul
dec
pop
sub
clc
cmp
or
pop
fsubrs
cli
inc
add
inc
mov
add
and
push
inc
mov
mov
jge
add
mov
xchg
cmp
add
and
and
mov
jno
shrl
jnp
mov
xchg
mov
inc
push
pop
adc
addr16
sti
test
jmp
scas
adc
andl
sbb
out
cli
xchg
push
aad
or
pusha
stos
loope
fstl
inc
jmp
jbe
cli
xor
and
sub
aaa
ret
cmpsb
sbb
test
sbbl
sbb
mov
push
fwait
daa
cli
mov
push
mov
loopne
adc
add
pop
popf
jnp
jno
mov
jns
clc
pop
jbe
cli
and
mov
push
or
jnp
mov
jmp
mov
dec
cmp
out
jbe
inc
push
xor
out
push
jnp
sbb
sbb
dec
push
xchg
sub
dec
gs
fisubs
rcrl
sbb
mov
fwait
xchg
pop
lock
cmpsl
es
push
enter
mov
jae
xchg
add
xorl
lret
and
mov
lahf
adc
adc
xchg
mov
and
cmp
sub
cmp
out
lods
xor
fisubl
cld
push
sbbl
push
xlat
scas
add
or
loope
add
sbb
push
mov
push
movsb
cmp
mov
bound
das
xchg
idivb
int
mov
sbb
sub
lods
pop
and
xchg
inc
add
jge
cmpsl
sub
cli
cli
mov
mov
fbstp
inc
mov
test
jb
pop
jne
sub
jae
shrl
adc
stos
xchg
mov
push
scas
add
xor
popa
es
pushf
sbb
imul
jo
leave
sub
cmp
lret
fmul
and
cli
cwtl
lods
xor
movsl
daa
or
mov
cmp
mov
orb
push
or
pop
sbb
inc
in
addr16
lods
push
pop
and
or
cltd
adc
leave
fsts
xlat
mov
dec
bound
imul
je
shrl
cld
push
mov
cmp
and
pop
pop
lret
insl
mov
data16
call
jp
lcall
das
cmp
popf
dec
fdivrs
sbb
push
out
in
jae
outsb
rorl
jle
mov
testb
lret
adc
adc
xor
mov
xchg
out
xchg
sbb
inc
fdivp
mov
jl
dec
lea
imul
rorl
cltd
insl
dec
adc
lret
bound
movsb
push
mov
mov
sti
xchg
fdivr
mov
loopne
xchg
and
mov
lock
inc
xchg
lcall
iret
lret
adc
xorl
xchg
pushf
sub
xlat
xor
push
into
stos
xor
sahf
sbb
jne
lret
dec
and
push
or
sub
pop
jae
mov
xchg
aad
inc
stos
hlt
scas
push
dec
jecxz
les
iret
cmc
out
mov
addr16
cmp
repz
jmp
inc
rorl
in
jle
mov
outsl
outsl
sbb
mov
daa
mov
stc
pop
add
aam
mov
insb
add
insl
add
into
int3
fmull
add
icebp
xor
mov
test
lret
leave
mov
cltd
imul
rcrl
lock
test
mov
bound
rcl
mov
cmp
adc
les
push
mov
cmp
mov
jg
and
cwtl
xchg
in
xor
fld
pop
jb
xchg
repz
push
test
push
mov
mov
jmp
aaa
sbb
imul
push
cmp
lds
jge
push
arpl
les
repnz
pop
xor
jb
and
push
aaa
stc
push
fwait
sar
mov
pusha
int
jecxz
mov
pop
rolb
fsubs
cltd
pusha
pop
lret
cltd
fidivs
mov
stos
inc
sti
test
dec
xor
fucom
outsl
xor
mov
dec
dec
or
push
sbb
dec
sub
pushf
loopne
lods
sub
add
inc
xor
out
jbe
mov
mov
sbb
cld
jge
sub
std
shlb
lock
dec
daa
imul
div
xchg
iret
adc
push
loop
pop
mov
ret
iret
addr16
pop
arpl
iret
push
pop
stos
mov
xor
dec
leave
test
pop
adc
adc
push
cmp
or
add
out
mov
dec
inc
cwtl
mov
ret
mov
pusha
mov
mov
scas
adc
stc
jecxz
inc
test
arpl
popa
leave
adc
leave
loope
int3
out
cmc
cmc
mov
call
fsub
popa
mov
stos
mov
pop
sub
xchg
out
sub
or
arpl
sub
lea
insb
call
cmp
lds
mov
push
push
lcall
es
int
ret
and
rclb
fisttpll
inc
in
jb
add
sub
lcall
sub
jo
lret
pop
mov
and
or
imul
pop
in
repnz
mov
jecxz
push
leave
fldcw
cwtl
scas
inc
xchg
dec
push
mov
xor
dec
inc
lret
jp
sarb
cltd
lahf
or
add
mov
repnz
xchg
das
sub
push
out
sub
mov
add
cli
hlt
mov
inc
dec
dec
lock
aaa
pop
popf
mov
dec
sbb
push
dec
xchg
bound
lcall
ret
push
cmp
cwtl
test
ss
xor
repz
mov
pop
add
and
push
imul
stos
xor
cmpsb
cmpsb
pop
push
dec
cmpsl
push
lea
xchg
je
loope
dec
cmp
notl
push
pop
addr16
push
out
jno
aaa
rorb
adc
scas
pop
push
mov
mov
fildl
push
pop
xor
repz
or
mov
jmp
and
loop
mov
rorl
mov
add
nop
cmp
inc
in
and
es
cmpb
and
stos
xor
stos
mov
xor
cli
or
out
addr16
hlt
aam
cs
adc
xchg
aas
mov
pop
mov
cmp
jl
in
out
adcb
call
sbb
outsb
popf
mov
das
mov
rclb
jmp
pushf
andl
fistpl
fiadds
in
sbb
call
dec
fs
repnz
cli
hlt
xchg
or
or
out
xchg
pop
jge
adc
jg
pop
mov
scas
call
add
bound
xor
cmpsl
push
ret
pop
mov
mov
ljmp
in
insl
and
das
fisubrs
test
fnstsw
inc
ljmp
or
out
stc
inc
clc
lahf
sub
dec
mov
mov
ss
sub
in
adc
cmp
push
xchg
cli
xor
dec
test
cmp
xchg
lret
jne
jae
or
insl
movhps
push
test
dec
lock
mov
ds
fwait
mov
ror
inc
mov
inc
dec
mov
inc
jae
cltd
test
add
inc
ret
xchg
mov
dec
mov
and
mov
push
push
pop
aaa
add
cmp
sub
outsb
xor
xorb
pop
int
fadd
test
xor
mov
adc
mov
mov
stc
jle
pop
adc
cs
cmp
es
pop
pop
out
call
or
inc
mov
push
cltd
ss
imul
add
mov
and
lahf
aaa
movsb
data16
aad
cwtl
loope
std
or
mov
push
add
mov
jge
mov
push
inc
jnp
add
pop
cmc
pop
call
fsubrs
lods
inc
pop
add
std
inc
loope
lahf
rolb
dec
adc
aam
call
cmp
pmaxub
or
mov
jp
mov
push
pop
hlt
lret
stos
jge
push
push
dec
shll
add
push
jbe
push
repnz
arpl
aas
mov
lahf
out
cmpb
mov
stos
movsb
arpl
mov
stos
das
mov
sbb
jbe
das
std
scas
les
jne
cmpsl
ds
jge
mov
add
mov
int
push
icebp
mov
inc
test
clc
xor
cmpsb
add
js
test
loopne
cmpsb
mov
adc
lret
rcrl
or
push
setle
or
das
lds
fisttps
sbb
mov
out
addr16
and
cwtl
lcall
jmp
mov
ja
data16
cmpsb
cwtl
insl
adc
or
arpl
ljmp
xchg
pop
sbb
sbb
int3
repz
cmp
add
push
out
pop
add
pop
dec
cwtl
and
mov
fwait
or
mov
pop
cmpsl
mov
add
xlat
push
popf
or
pop
mov
lahf
sbb
call
or
sti
mov
fiaddl
pop
dec
popa
outsb
add
inc
aam
sbb
inc
fcmove
adc
jmp
fidivs
mov
insl
pop
es
aad
inc
mov
loopne
and
mov
mov
pop
jle
pushf
or
add
sbb
sub
sbb
mov
lahf
jb
or
sub
mov
jg
mov
lret
mov
cld
dec
testl
ss
lods
sbb
dec
addr16
popf
sbb
cmpb
sub
mov
mov
fs
push
or
push
shlb
ja
pop
repnz
jns
iret
out
dec
dec
popf
lock
inc
idivl
into
dec
jecxz
inc
and
adc
mov
dec
adc
or
aam
xor
int3
les
xchg
mov
inc
adc
and
movsl
push
ljmp
xchg
repnz
test
clc
ds
mov
out
ficomps
aas
add
inc
andl
xchg
mov
repnz
pusha
imull
out
mov
pop
push
xchg
mov
xchg
stc
mov
mov
addr16
mov
faddl
dec
decl
scas
int3
nop
cmp
out
mov
jo
xlat
xor
pop
stos
dec
loop
out
outsl
dec
rol
mov
jnp
shlb
mov
or
inc
mov
xor
mov
mov
push
mov
inc
sarb
popa
add
pop
ja
cld
out
pop
cmp
loopne
cmp
imul
lea
inc
out
scas
mov
mov
xor
inc
push
sbb
xor
xor
aas
dec
mov
call
mov
lret
rcrb
sub
cmpsb
shl
mov
dec
sub
je
xchg
mov
aas
mov
mov
aad
xor
sub
test
fstpt
and
xchg
xchg
add
iret
cmp
lret
xchg
jge
xchg
xor
mov
sarl
inc
addr16
pop
cwtl
xor
or
enter
in
jne
and
xor
sub
and
dec
aam
loopne
dec
mov
sub
insl
add
aad
inc
out
jno
mov
hlt
fnstenv
sbbb
addb
pusha
les
add
ja
test
mov
pop
call
test
faddl
lock
cmpsl
sbb
js
fimuls
mov
out
cltd
inc
lds
xchg
adc
shrl
fstpt
mov
jne
cmp
push
int
ss
cwtl
xchg
lds
xchg
int
dec
or
jecxz
cmp
mov
mov
sub
clc
inc
fs
mov
mov
and
jle
xor
cmp
xor
js
jns
ret
pop
es
cmpb
jge
add
adc
xor
cmc
push
sbb
jnp
imul
ljmp
out
data16
test
mov
mov
fnstsw
sbb
xor
sbb
les
adc
mov
inc
mov
mov
xor
pop
loop
cmc
orb
pop
cmc
inc
lods
out
add
sbb
xchg
xor
jp
push
addr16
push
iret
push
iret
jle
lods
xor
fwait
xor
inc
call
jmp
pusha
jecxz
mov
lcall
adc
pop
ds
xlat
dec
pop
dec
mov
or
enter
stos
xchg
add
repnz
outsb
mov
cmp
push
jl
inc
push
lds
lahf
ud0
add
or
mov
mov
adc
idiv
or
rclb
push
and
add
rsqrtps
xor
fstp
xchg
lret
imul
scas
out
or
pusha
ret
stos
inc
xor
loopne
or
icebp
adc
sbb
orl
mov
pop
or
lret
adc
imul
sub
lcall
mov
iret
mov
sahf
ds
icebp
pop
cmp
in
lcall
xchg
jae
in
das
into
adc
lods
jo
push
jns
and
mov
xchg
lock
lret
mov
in
adc
cli
out
mov
add
push
dec
cmp
push
and
inc
mov
cmp
cmp
xchg
mov
test
lcall
xor
cmp
jb
cmp
xchg
mov
notb
mov
push
ret
xor
shl
inc
push
scas
xorl
fistps
out
mov
pushf
xchg
sub
sub
jb
sub
sbb
sti
dec
pop
push
js
xorl
xchg
push
mov
gs
mov
mov
int3
or
pop
mov
jbe
mov
fnstenv
mov
filds
pop
xchg
jl
and
or
popa
cmp
dec
add
loope
fdivrl
out
aam
xlat
mov
jle
aaa
push
mov
mov
popf
es
stc
dec
cwtl
movsl
sub
cmp
jmp
popa
testl
mov
insb
out
jbe
imul
xchg
pop
insb
pop
stos
out
push
jae
add
mov
mov
mov
pop
cli
sbb
and
rcl
rcrb
pop
pusha
mov
inc
xor
add
xchg
xchg
cs
pushf
mov
or
jg
rcrb
lret
and
mov
loope
inc
cmp
mov
push
sbb
jbe
sbb
jno
dec
mov
sbb
pop
and
pusha
jnp
daa
stc
popa
andl
cmp
mov
and
adcl
negb
jns,pt
in
xor
xchg
xor
sub
cmp
scas
mov
mov
dec
mov
jnp
mov
or
cmp
dec
xchg
mov
daa
mov
sbb
pop
insb
xchg
ss
insl
imul
int3
xor
add
rorl
pop
cmpsb
add
in
es
inc
test
ret
xor
add
dec
test
cmp
ja
lds
jne
push
mov
nop
arpl
xchg
sbb
aad
mov
mov
hlt
inc
inc
stos
and
xor
mov
xchg
and
add
clc
mov
andb
insl
push
mov
into
jns
push
inc
inc
cmpsl
lock
outsb
jl
cmpsb
fbstp
daa
std
dec
rcrb
cli
xchg
mov
loope
sub
push
fiadds
pusha
and
or
inc
es
and
pushf
test
or
pop
fwait
sub
stos
jmp
jnp
or
xor
imul
push
mov
jecxz
cli
push
inc
sbb
mov
ficoml
adc
sbb
imul
mov
int
insb
mov
arpl
adc
lcall
pop
icebp
lret
adc
sbb
icebp
jo
std
cltd
addr16
ret
rorl
adc
dec
xor
mov
in
sbb
lea
push
inc
out
adc
lret
lods
mov
or
xor
mov
add
mov
stc
popf
stc
aaa
add
mov
stc
xchg
aam
mov
fdivr
push
push
sub
mov
dec
mov
pusha
test
push
movsb
ljmp
push
cmp
lret
xor
cli
jb
jb
sub
xchg
sbb
js
adc
xor
sbb
ret
push
and
out
mov
out
add
mov
lock
ja
jne
js
pop
stos
sbb
in
call
xchg
icebp
mov
fisubrl
loop
dec
loope
inc
rcl
ds
and
push
xor
push
pop
fimuls
movsb
mov
imulb
leave
pop
sub
sub
push
pop
cmc
jo
xlat
xlat
popa
int
ret
mov
ficoms
fwait
loop
dec
and
inc
test
mov
fwait
lds
dec
or
jecxz
popf
je
sub
add
call
mov
and
ret
loopne
adc
int
lock
push
push
pop
sbb
push
xor
loopne
xor
sbbl
cmp
jg
jnp
jne
lret
mov
aad
aaa
xlat
and
call
jb
ja
pop
repnz
xor
cmp
test
js
mov
mov
adc
popa
sub
in
push
in
repz
insb
xor
sbb
in
sbb
and
cmp
mov
xchg
add
pusha
jecxz
add
mov
push
mov
aas
lods
call
sahf
inc
sbb
pushf
xor
jnp
xchg
sbb
repnz
movsl
mov
outsb
mov
pop
cwtl
push
sub
inc
and
inc
and
add
mulb
xor
shr
sti
fyl2xp1
popf
or
outsl
mov
lahf
add
roll
insb
insl
jae
lods
cmp
jge
jno
popa
arpl
popf
jmp
lds
mull
mov
xor
fs
dec
push
out
adc
cmp
adc
xorl
cmp
mov
pop
in
adc
push
inc
mov
ss
or
ja
mov
stos
dec
daa
xchg
scas
xchg
mov
add
lea
push
in
cmp
cmp
insb
rorl
mov
add
cli
dec
mov
cmp
pop
mov
movsl
mov
mov
mov
fnstcw
mov
cmpsb
loope
aad
imul
lods
ret
fst
jo
int3
cmpsb
enter
pop
and
insb
bnd
and
jne
icebp
nop
ret
dec
pminsw
je
jg
adc
and
sbb
xchg
jb
push
jne
inc
or
lahf
cltd
mov
sub
dec
iret
cmpsb
repz
call
leave
adc
jno
je
data16
mov
xchg
sub
xchg
xor
aam
mov
cmp
sahf
lcall
adc
pop
imulb
mov
pop
pop
hlt
mov
shrl
jo
repnz
ss
stos
xor
and
sub
gs
cmp
lea
test
shlb
pop
jecxz
clc
mov
jns
jl
xchg
mov
das
cltd
int
pop
ret
sbb
xor
jae
pusha
push
inc
lret
fimull
fnstsw
insl
stos
popa
fmull
xor
in
xorl
leave
leave
inc
push
lret
addr16
push
call
cmp
pusha
psrlw
dec
syscall
imul
dec
mov
leave
sub
lds
mov
cwtl
push
pushf
out
mov
sub
fs
fstpt
enter
adc
jbe
or
xor
adc
or
inc
lret
xlat
js
mov
sub
and
jns
pop
stos
cmp
xchg
daa
orb
rolb
stos
xchg
jle
fmul
leave
je
mov
iret
dec
sbb
or
push
dec
lahf
jno
push
jle
pop
pop
sbb
xchg
clc
jb
push
dec
adc
fldl
ret
rcl
sbb
in
sbb
cli
fwait
or
jnp
cld
pop
mov
xchg
test
inc
out
je
bound
cmpsb
jge
push
daa
popf
add
imul
pop
push
sbb
cmp
negl
dec
std
jg
aaa
xchg
lock
jns
inc
data16
out
cltd
xor
adc
jg
inc
sbb
inc
jle
xchg
and
cmp
mov
sub
mov
pop
mov
dec
fs
shll
mov
cwtl
jecxz
jnp
imul
pusha
push
sbb
ficomps
ja
mov
outsb
call
inc
frstor
lods
std
mov
xchg
push
xchg
stos
cmp
stc
jne
adc
ror
repz
in
sbb
sub
aaa
aas
pushf
sub
push
dec
lcall
and
iret
cli
xlat
in
or
sub
sub
add
jg
mov
lock
lcall
jbe
test
adc
jmp
popw
mov
dec
xchg
mov
lahf
test
rcll
cmp
xor
jno
ficompl
push
out
sti
pop
shlb
dec
and
adc
push
mov
das
lds
add
pop
dec
ss
xlat
addr16
fs
not
push
cld
push
sub
inc
mov
daa
insb
insl
xor
ret
insl
mov
sbbb
push
loop
nop
sub
pop
shll
fnstcw
jae
mov
push
lcall
push
or
nop
xor
notb
pop
cwtl
bound
mov
sbb
roll
mov
rorl
outsb
rcrl
stos
push
in
mov
cmpsl
add
in
push
ljmp
pusha
lods
xchg
add
sub
lahf
sbb
stc
mov
mov
jmp
cmp
mov
or
adc
ss
or
lea
jne
sub
sub
jmp
add
mov
std
xchg
test
js
test
insb
mov
dec
enter
push
addl
jecxz
sbb
mov
cmc
push
jl
jge
into
shrl
in
leave
mov
xchg
pop
repnz
add
mov
loope
nop
hlt
aam
dec
xchg
or
sbb
jg
or
int
data16
mov
mov
out
and
push
jp
cld
inc
test
pmuludq
test
enter
dec
test
adcb
fidivs
repz
sbb
aaa
jp
in
mov
jle
mov
adc
or
push
fistl
xchg
push
shl
inc
arpl
ret
leave
movb
sarl
clc
test
mov
mov
test
daa
mov
sbb
mov
mov
imul
lea
mov
ret
jp
adc
hlt
dec
das
das
push
pushf
ret
pop
movsl
loopne
mov
sub
inc
adc
add
mov
sahf
jecxz
stos
add
push
orl
xchg
jne
cmpsl
loop
add
mov
xor
or
push
aas
movsl
outsl
out
cld
and
inc
push
lcall
test
fdivl
rcll
pop
nop
fstpl
push
nop
sub
shll
inc
mov
mov
xchg
movaps
rcr
jno
lea
lods
and
cmp
mov
mov
xor
mov
mov
into
faddl
cli
or
mov
push
pusha
je
das
adc
insb
rclb
push
xor
int3
sub
add
cs
mov
loope
frstor
mov
inc
shl
jne
andb
pop
stc
adc
cld
or
stc
outsb
pop
inc
sbb
add
test
sbb
leave
xor
rcrb
xor
jecxz
stos
mov
push
scas
fsubrp
jp
push
adc
push
mov
mov
add
mov
sbb
fidivrl
jle
lahf
fs
mov
pop
mov
das
sarb
pop
or
fwait
push
repz
add
jbe
xchg
sub
cmpsl
dec
inc
jle
inc
imul
dec
pop
jne
jp
and
add
push
ss
outsl
add
lock
daa
mov
dec
xorl
cmp
inc
push
frstpm(287
ret
push
jecxz
scas
ret
mov
es
push
mov
into
out
xchg
mov
xchg
sub
mov
movsb
es
mov
lcall
jge
add
out
std
xchg
xor
sub
jno
pop
sub
dec
xchg
lea
mov
push
cli
adc
pusha
cmc
mov
gs
inc
lods
stos
cmpsb
loope
test
enter
js
inc
arpl
leave
int
jbe
jmp
xchg
or
fdivrl
jb
jne
test
std
cltd
subb
inc
and
mov
jae
mov
cli
into
test
jo
imul
testl
mov
inc
fidivrs
dec
test
repz
fdivrl
ss
fildl
cmpl
or
pop
xor
sbb
outsl
jbe
jb
cmp
mov
lret
pop
fisttps
out
mov
inc
std
imul
test
loop
push
dec
cltd
xor
inc
js
jno
cltd
daa
lcall
cmp
mov
lea
cltd
push
inc
ffreep
cmp
iret
jp
imul
inc
lret
adcb
add
sub
call
mov
pop
mov
push
inc
lret
and
push
pop
mov
cmp
cmpsb
sbb
fldl
mov
iret
cli
lret
lods
xlat
mov
pushf
xor
adc
xchg
mov
or
sub
xor
movsb
aad
js
fsts
loope
fadds
sbb
push
repz
xchg
push
stos
mov
xchg
lret
pop
add
scas
test
jl
shrl
inc
rclb
stc
push
mov
xchg
xchg
stos
fcoml
pop
out
ds
adc
jl
imul
shll
add
or
mov
aam
sub
inc
mov
push
push
mov
xchg
pusha
movsb
out
and
ret
insl
dec
inc
push
xchg
xchg
popf
shl
lea
lret
inc
ds
mov
call
lret
adc
push
call
jae
jns
lock
push
xchg
imul
sti
lock
decb
out
jp
push
movsl
dec
nop
sbb
into
scas
lods
inc
xor
testl
mov
add
sub
shlb
mov
push
add
adc
mov
push
mov
addr16
push
out
xchg
es
mov
pop
cmp
pushf
daa
fcomp
int
stc
call
xchg
icebp
sarb
in
das
repnz
dec
loop
mov
call
inc
xor
and
inc
fsubs
aam
mov
mov
adc
and
pop
in
sub
mov
hlt
icebp
test
ja
pop
cld
sub
add
mov
insl
add
mov
or
mov
mov
pusha
test
adc
cmp
imul
ss
push
push
sbb
fsubl
xor
push
sbb
arpl
cmp
adc
inc
push
pop
inc
gs
shrb
ds
icebp
iret
mov
or
jbe
push
sub
mov
fldenv
lods
mov
mov
lcall
push
sub
mov
test
jg
pusha
pop
mov
jo
aam
mov
shll
mov
jle
xchg
xchg
mov
nop
jae
repz
adcb
lahf
jno
test
adc
lods
arpl
or
cli
and
aaa
sub
xchg
das
loope
inc
sbb
mov
lret
pushf
jbe
add
test
repnz
mov
ja
xchg
or
cmp
sbb
inc
cmp
fxch
int
pop
mov
sub
jle
cmp
fwait
jno
push
inc
rclb
ljmp
xor
cmp
div
inc
loopne
mov
or
cmp
ljmp
popf
xor
inc
stc
xor
push
mov
fildl
idivl
scas
xlat
lods
fsubrs
testb
sbb
xor
xchg
ss
inc
cs
pusha
adc
repz
mov
pop
xor
mov
push
imul
testb
lods
xchg
adc
inc
jae
push
in
loope
push
aaa
jbe
lods
mov
adc
xchg
mov
dec
pop
mov
and
pop
stos
add
cmc
fs
lcall
sahf
lods
jmp
and
fdivrs
and
pushf
xor
loope,pt
adc
xor
xor
loope
subl
mov
lock
aam
cmc
mov
xor
xor
test
sub
fdecstp
lea
mov
shl
in
nop
mov
fcmovu
mov
repnz
in
add
add
push
test
and
subl
jmp
xchg
addr16
xchg
xor
jecxz
outsb
dec
cmp
in
shrl
pop
push
das
iret
jb
repnz
mov
loope
repnz
mov
or
push
imul
lea
mov
loopne
pushf
sar
hlt
popa
shll
lock
mov
imull
outsl
bound
mov
inc
pop
pushf
cli
fmuls
loop
clc
or
and
and
mov
les
push
mov
xchg
or
pop
loopne
lret
popa
cmp
mov
out
std
xorl
and
cmp
mov
hlt
psrld
pushf
xor
mov
test
lret
mov
rolb
inc
bound
or
ds
outsl
xchg
pop
and
jle
call
push
add
jmp
xchg
xchg
sbb
fmulp
adc
js
leave
sbbl
fcoms
xchg
enter
cmc
testl
movsl
mov
mov
retw
sti
arpl
gs
mov
test
inc
xlat
pop
int3
adcb
mov
sahf
imul
sbb
add
lea
xchg
lahf
or
inc
push
mov
js
fwait
sarb
mov
cmp
cmc
push
dec
pusha
or
dec
cmp
jl
sub
xchg
xor
pop
push
push
pop
insb
inc
dec
mov
jecxz
outsl
daa
pop
add
mov
dec
pop
imul
sub
pop
mov
andb
jl
lea
lret
repnz
stos
mov
push
push
mov
jb
and
xlat
pop
xchg
sub
jg
leave
mov
roll
out
popa
mov
repnz
mov
add
jae
pop
call
popf
adc
jns
mov
hlt
jae
stos
and
les
add
lahf
movsl
repnz
adc
aaa
mov
addr16
lret
cmc
enter
sub
cmp
ds
or
mov
jno
aaa
dec
lods
xchg
adcl
xchg
xchg
jno
push
call
push
pop
jo
dec
xchg
scas
out
outsb
xchg
dec
sbb
mov
mov
bound
repnz
xchg
rcrl
mov
insb
psadbw
cmp
jmp
xchg
or
push
cmp
int3
adc
jmp
icebp
mov
das
call
lea
fdivrs
call
and
jo
add
inc
cld
jnp
xor
loope
imul
add
movsbl
push
stc
rolb
popa
pop
jb
andl
xor
pop
inc
mov
dec
add
jge
jb
cmp
push
dec
pop
fwait
xor
stc
mov
push
imul
out
clc
jae
test
mov
sahf
xor
dec
mov
jge
pusha
pop
lret
add
in
es
clc
push
stos
mov
push
cwtl
mov
out
xchg
and
xor
inc
sbb
jecxz
mov
cmp
std
xchg
and
dec
repnz
sbb
mov
shr
lock
cwtl
add
call
lea
lods
push
out
push
iret
ds
sbb
pop
dec
sub
xchg
push
jo
ljmp
or
inc
sub
pop
mov
lock
incb
dec
in
push
adc
mov
inc
push
mov
mov
rcll
test
shll
add
js
xlat
mov
mov
iret
xor
loop
sti
jecxz
ljmp
cmp
filds
lahf
out
gs
jp
push
out
xor
or
pusha
or
rorl
jnp
cwtl
pop
mov
cltd
mov
push
push
xorb
or
xor
data16
mov
mov
push
jmp
pop
dec
movsb
int3
lock
cli
loop
mov
fwait
mov
hlt
sub
shrl
sub
xchg
pop
mov
sub
xor
jbe
not
mov
movsb
ret
and
pop
cmc
xor
cmpsl
jmp
mov
je
inc
push
movsb
stc
ljmp
out
mov
aam
xchg
pop
push
popa
outsb
inc
mov
fmuls
idivb
pop
jns
push
pushf
cli
push
inc
popa
jbe
push
in
in
fiadds
imul
icebp
mov
aaa
testl
out
data16
std
inc
jmp
lcall
or
out
dec
shlb
cmp
nop
addr16
push
sarl
adc
out
xor
ja
pop
ret
cmpsb
cmpsl
inc
adc
xlat
xchg
test
lods
call
and
cmp
mov
push
jne
and
sub
lahf
hlt
adc
roll
and
xchg
stos
jbe
push
mov
dec
ss
dec
lret
and
sub
mov
mov
fadd
add
loopne
mov
imul
dec
xchg
fwait
cs
push
sub
jmp
jo
adc
xor
fwait
cmpsl
test
push
cmpsl
fldl
or
mov
inc
int3
inc
test
sahf
jne
push
lods
les
xor
pop
je
arpl
adc
mov
test
test
fsts
lcall
jmp
and
ret
xor
pop
iret
lcall
and
adc
aas
aam
and
je
std
pop
repnz
xor
or
push
inc
ss
inc
inc
loopne
lret
push
rclb
push
sub
xlat
fimull
sahf
add
repz
mov
lret
sub
pop
shrb
mov
movsb
xchg
inc
jno
aas
cmpl
pop
cmp
in
pop
dec
loope
loope
cmpsb
in
dec
mov
push
or
das
faddl
dec
push
clc
nop
inc
movb
ja
pop
js
mov
inc
inc
daa
mov
out
icebp
testl
cmovns
jp
adc
fucom
xor
dec
test
or
in
dec
imul
dec
lock
push
movsb
or
xchg
sub
lods
in
add
sbb
imul
push
push
push
fadds
inc
sub
je
sub
ret
sub
lret
jbe
psrad
adc
mov
stos
jecxz
add
inc
xchg
or
xor
imul
mov
jae
adc
inc
mov
cmpsb
xchg
cmp
jmp
in
das
bound
mov
jae
fbld
xchg
fcmovnu
rorb
sub
iret
or
in
dec
mov
add
pop
cmpb
sub
adc
int3
cmp
jecxz
rorb
jno
aam
push
cmp
cmpsb
add
sbbb
sbb
xchg
sbbl
sbb
repz
inc
sbb
jp
das
jno
movsb
mov
adc
insb
orl
ss
int
mov
jg
push
pusha
imul
xorb
test
pop
push
mov
push
andb
push
cwtl
add
mov
inc
andb
adc
add
push
adc
jp
lods
or
jmp
inc
xchg
push
mov
push
add
stc
adc
push
sbb
aad
xchg
pop
sbb
pop
shrb
fcoml
mov
xchg
dec
pop
pop
dec
pop
jmp
out
cmpsb
mov
cmpl
mov
lret
mov
icebp
dec
jle
push
adc
lret
push
movsb
sbb
arpl
rolb
mov
xchg
fiadds
movntq
out
je
lock
stos
xchg
inc
sub
fcoml
mov
mov
sbb
fcomps
aaa
add
sub
sbb
in
push
adc
mov
mov
pop
dec
xchg
ja
in
subb
mov
divb
inc
pop
pmaxsw
mov
pusha
push
mov
loopew
fsubp
mov
fmull
jmp
mov
xor
xlat
pop
out
mov
adc
movsl
sbb
jno
fwait
jo
hlt
loope
jg
jl
inc
arpl
mov
push
sahf
mov
jecxz
mov
or
ja
sti
cmpl
das
test
or
pop
mov
pop
out
stos
cmc
pop
adc
add
test
fsubs
pusha
or
fidivl
fs
dec
or
cld
or
rclb
mov
cmpsb
in
fdivs
fs
and
test
or
call
sbbl
cld
les
xor
imul
sub
inc
fcmovnu
and
pop
pusha
stc
adc
hlt
pop
icebp
in
pop
mov
jp
loope
jl
push
sub
imul
cmp
push
mov
jg
lahf
pusha
sub
popa
fnstcw
jno
imul
bound
push
xchg
xorl
push
int3
repnz
jns
pop
ljmp
pushf
arpl
repnz
jecxz
out
test
mov
cmp
add
fisubs
or
mov
js
pop
incb
in
icebp
mov
data16
inc
cld
lahf
mov
bound
movb
lret
orl
jl
scas
add
cld
stos
ljmp
sbb
mov
jo
inc
addl
sub
and
mov
pusha
mov
inc
fdiv
out
dec
pusha
loop
cli
adc
adc
out
clc
push
or
mov
loopne
addb
mov
sub
pop
daa
mov
push
xor
mov
cmp
bound
iret
enter
rcrb
hlt
push
movsb
mov
les
stos
mov
stos
inc
in
aas
test
xor
add
icebp
jg
call
lret
imul
mov
mov
inc
pop
jmp
fidivs
ja
sub
mov
or
hlt
xchg
lds
call
sti
nop
xor
sbb
pusha
loopne
scas
adc
sahf
lods
gs
popa
cmp
jl
hlt
into
push
xchg
pop
fabs
dec
aam
icebp
shlb
daa
test
aaa
sbbl
testl
in
or
xchg
sbb
pusha
adc
jbe
aaa
mov
loopne
in
pop
test
or
aaa
aas
dec
imul
or
cs
cli
cwtl
xchg
cmp
mov
xchg
sub
mov
imul
mov
mov
ret
jbe
fsubrs
sub
push
fldcw
sub
fldcw
mov
dec
stc
lcall
mov
and
out
outsb
inc
test
inc
into
dec
and
mov
mov
rcr
pop
stc
xor
mov
adc
popf
add
or
ret
in
mov
mov
pushf
repz
sub
mov
xor
loope
leave
push
in
aas
arpl
xchg
and
sbb
repz
js
adc
and
test
repz
mov
dec
cmp
cmp
or
jecxz
xchg
xchg
das
jmp
sbb
pop
movsb
cwtl
std
das
subb
sbbl
and
ret
popf
js
inc
pop
cmpsl
ds
cs
insb
faddp
pop
adc
sbb
nop
test
dec
cmp
cmpsl
pop
scas
push
pushw
push
inc
mov
mov
out
das
imul
test
movsl
pop
pop
dec
sub
xchg
jo
lods
cmp
pop
xor
pop
mov
push
cwtl
js
add
xchg
insl
pop
mov
pop
push
cwtl
shlb
outsl
pop
push
adc
ja
imul
cvtpi2ps
jo
or
sti
roll
or
pop
outsb
mov
mov
ficoms
adc
js
fdivs
pop
je
mov
push
rol
dec
mov
into
sbb
inc
das
xchg
arpl
das
pop
cmpb
out
adc
or
add
test
shl
adc
in
das
adc
push
push
stos
mov
leave
adc
jnp
sarb
fs
popf
cmp
adc
fldcw
sbb
into
mov
pop
mov
in
xor
js
xor
or
decl
and
add
insb
and
dec
addr16
inc
je
xlat
mov
mov
arpl
pop
outsl
or
push
mov
sbb
add
mov
int3
insl
cld
into
or
pusha
stos
incb
cmp
xchg
cmpsl
das
mov
aas
inc
out
cld
out
loope
test
and
je
cmp
push
xchg
cmp
push
stc
xor
sub
or
jne
call
mov
pop
inc
gs
mov
jne
push
push
ffreep
or
les
lret
adc
stos
jne
scas
inc
addl
cmp
lret
in
mov
test
sbb
sarl
push
outsb
pop
cmp
aam
out
fcompl
test
inc
cmc
addr16
outsb
lahf
mov
stos
fsubr
fwait
rorb
adc
or
outsb
ds
adc
mov
pop
mov
push
loopne
subl
in
sub
jno
xchg
ret
sub
sbbl
lods
into
lahf
push
in
and
imul
xchg
mov
mov
arpl
arpl
popf
xor
aas
dec
add
arpl
test
stos
xchg
mov
lods
stos
push
shll
inc
fstpt
sahf
jl
cmc
movsb
addr16
push
dec
mov
fisubs
add
cs
fdivrs
or
in
adc
sub
ret
inc
movsl
push
in
imul
fimull
popa
and
leave
mov
jns
insb
xlat
ljmp
and
push
push
fsubrs
sbb
pop
pop
fsubl
stos
aaa
int
jo
push
fidivrl
jmp
ss
loope
rorb
es
icebp
push
mov
sub
inc
lret
cld
data16
xchg
cmpsb
xchg
outsb
mov
les
or
stc
daa
or
adc
xchg
jmp
into
movsl
sub
pop
xchg
sub
add
fsubs
sarl
lcall
sahf
and
roll
add
lret
xchg
xor
add
and
xor
xchg
gs
scas
pop
int3
repz
push
push
adc
xorb
inc
jmp
or
xor
push
insb
shrl
xchg
loope
jo
xor
adc
add
in
push
pop
fstpt
inc
out
lcall
ss
loopne
sbb
pop
cmp
mov
and
fadd
and
std
adc
idivb
dec
lds
adc
call
out
inc
or
pop
and
int
mov
xor
jge
leave
cmp
insl
aad
out
lret
popf
fidivl
dec
pusha
or
js
mov
mov
mov
pop
adc
subl
in
je
push
stos
adc
pop
imul
xor
test
aaa
into
int3
lret
mov
bound
mov
mov
insl
jne
lea
mov
mov
mov
cmp
jl
inc
pop
lret
cld
or
cli
lcall
scas
imulb
inc
ljmp
mov
mov
mov
dec
testl
jo
mov
arpl
movsl
movsl
fiadds
imull
scas
movsl
in
into
lock
add
sub
outsb
push
xchg
iret
movsl
cld
sub
ret
cwtl
int3
testl
pushf
cmc
adc
jecxz
fldl2t
pop
call
push
dec
sbbb
movsb
shlb
add
cwtl
stos
mov
dec
flds
stos
and
xor
or
mov
cmp
jnp
lea
aaa
pop
add
ret
inc
and
add
push
or
sbb
inc
fidivl
lds
ss
sbb
je
and
fistpll
add
les
push
fidivrs
dec
xchg
in
fidivl
cmpsb
sbb
jecxz
inc
mov
stc
sbb
jmp
shrl
int3
adc
stc
stos
cmpsl
icebp
into
xor
ds
push
in
dec
pop
pop
push
jl
mov
pop
outsb
fisubl
movsl
sarl
inc
jne
jmp
lahf
ss
sbb
inc
stc
ljmp
inc
aaa
adc
test
sbb
dec
jp
cmp
jle
mov
mov
scas
fsubl
push
lods
sbb
cmp
aad
cltd
ficomps
jnp
sub
aas
pop
xor
mov
int
in
stos
je
in
repz
xchg
insl
or
shl
push
jae
mov
pushf
cltd
fildl
cmp
cmp
lret
or
sub
mov
das
les
gs
or
dec
mov
jb
xor
sbb
aad
or
xor
shl
scas
call
aaa
fldenv
mov
push
call
divb
fildll
aaa
push
stos
lea
aas
leave
pusha
outsl
test
out
mov
loopne
inc
cmp
movsl
popf
roll
sub
push
jb
mov
pop
idivl
test
aad
push
cld
xchg
cltd
sbb
lods
jge
sbb
add
push
push
stos
enter
jno
aas
call
outsl
daa
xchg
in
cwtl
inc
push
cltd
in
mov
mov
mov
call
sbb
sahf
xor
xlat
mov
cmpsb
jno
fidivl
dec
xchg
xchg
cmp
enter
icebp
ret
inc
inc
test
mov
stos
jmp
inc
and
ficoml
scas
pop
mov
mov
mov
pop
xor
jmp
in
adc
inc
fiadds
sbb
lock
mov
add
roll
pop
addr16
cwtl
and
int
mov
das
pop
and
xor
mov
xchg
iret
xchg
adc
inc
mov
lahf
test
cmp
dec
pop
pop
sahf
rcrl
and
lods
xor
cmc
cmp
sbb
in
push
pop
or
js
pushl
push
es
lea
fldenv
lret
add
lret
add
popf
ss
xorl
and
xchg
adc
fdivrs
or
pop
subb
cltd
notrack
jl
fistpl
fwait
inc
cmp
mov
mov
mov
lea
imul
test
outsl
dec
jns
jge
sahf
xor
mov
fidivl
mov
jnp
addb
mov
mov
sbb
popa
negl
mov
movsl
inc
fbstp
fists
popf
stos
push
and
jle
inc
jl
inc
or
cs
sub
movsl
lahf
cs
push
xchg
dec
test
add
xchg
testl
pop
lds
jmp
xor
lods
std
xchg
fimuls
cmpsb
dec
shrl
dec
loopne
dec
in
imul
push
dec
mov
or
insl
pushf
pop
jnp
push
fstl
sbb
xor
fstl
adc
xor
inc
jmp
fwait
fwait
sti
inc
fistl
in
aaa
jae
cltd
mov
aam
rolb
xchg
loop
call
sbb
jae
sub
xor
sarb
sbb
popf
mov
xor
lahf
jb
cmpsl
bound
push
xchg
fsubl
xor
jge
int
sub
std
ss
lock
popf
xor
mov
jmp
cli
cmp
jno
xor
or
stc
and
imul
scas
add
jb
push
scas
fstpl
or
into
sarb
inc
repnz
movsb
mov
push
repz
cmp
call
adc
fisubrl
outsl
pop
jmp
in
xor
pop
popf
adc
add
dec
mov
addl
out
in
pop
mov
push
pop
cmp
jae
lods
dec
test
push
xchg
nop
adc
in
xchg
ss
sbb
aam
inc
pop
push
xchg
and
mov
andl
fdivrs
ds
mov
out
sti
push
xlat
inc
lods
hlt
xchg
inc
scas
lahf
sbb
sub
stos
and
and
dec
cs
add
lods
test
cmp
daa
cmp
jno
mov
adcb
inc
cmp
cld
lcall
fdiv
outsb
das
push
scas
mov
mov
or
sbb
sub
cmp
fwait
adc
lret
insb
pop
loop
xchg
xor
repnz
sub
das
insl
xor
mov
sbb
jne
sub
cmp
mov
pop
adc
mov
inc
jmp
fstpl
jae
dec
add
pop
fcoml
add
sbb
aaa
cmp
insl
cmp
inc
fimull
in
xchg
out
icebp
or
xchg
jp,pn
fwait
sti
sbb
sub
add
sti
xor
cmp
shlb
dec
xor
test
jle
jns
push
mov
sbb
mov
push
jmp
shll
inc
test
fnstsw
into
sbb
repz
xchg
les
repz
das
push
lahf
arpl
push
loop
das
adc
mov
cs
fidivrs
pop
pop
je
jecxz
push
nop
push
std
pop
scas
mov
push
and
jo
cltd
clc
outsl
mov
lds
mov
jbe,pt
pop
pop
lods
xchg
add
out
fsubl
jnp
mov
cmp
mov
outsl
cmpsl
notb
adc
mov
repnz
push
imul
loop
out
sahf
clc
xchg
cmp
clc
cli
inc
cmp
fadd
adc
lds
sbb
shlb
xchg
stos
in
fsubl
or
les
cmp
andb
pop
out
sbb
insl
jge
pop
ss
push
cmp
inc
jg
fsubr
stos
sub
pop
and
insb
mov
rcrl
repz
cmp
pop
cmc
mov
sub
xor
jmp
stc
sbb
mov
ficoml
cmp
inc
mov
ss
icebp
sti
shlb
fisubrl
mov
fcoml
pop
rolb
orb
aam
dec
popa
shl
dec
fcmovbe
hlt
lret
xor
adc
jg
pop
cli
inc
jmp
out
mov
jp
jp
inc
pop
sbb
push
call
cltd
pop
repnz
adc
add
popa
into
pop
outsb
xchg
cmc
dec
dec
xorb
dec
and
arpl
sub
and
lret
pop
sti
mov
aam
bound
xor
arpl
scas
mov
inc
add
or
add
hlt
adc
imul
shlb
incl
and
mov
xlat
insb
in
or
popa
mov
outsb
add
and
mov
add
lcall
pop
in
aaa
add
xchg
pop
insb
cli
lock
pop
or
in
in
sbb
andl
test
mov
dec
andl
sbb
mov
pop
mov
pop
and
iret
lcall
stos
mov
aas
repnz
xchg
dec
rcrl
jge
pop
jbe,pt
pushf
lods
fsub
mov
lahf
inc
xor
popa
push
sbb
push
movsl
add
xlat
jno
sti
sub
scas
inc
push
push
data16
inc
std
out
dec
mov
xchg
jmp
or
mov
iret
gs
dec
lahf
mov
and
add
push
sti
and
js
pop
mov
fstpl
stc
mov
ss
cmpsl
call
test
pop
repz
jl
cmp
stos
push
pushf
repnz
push
inc
inc
inc
es
jl
aas
pop
dec
jbe
mov
adc
inc
inc
pop
cmpb
ret
cmpsb
adc
lret
ficoml
inc
adc
xor
pop
movsb
cltd
jo
iret
popw
mov
das
xlat
xor
lahf
inc
jg
out
popf
xor
pusha
pop
jne
inc
ds
cmpsb
clc
aaa
insb
imul
out
lret
cmc
cld
jb
jae
and
fstpt
inc
push
fsubrl
fwait
inc
pop
in
out
lahf
pop
xchg
dec
les
jo
stc
xor
movsb
jge
fstl
sbbl
mov
xor
xchg
popl
lret
int
adc
lret
push
sti
jb
icebp
clc
dec
cmpsb
movsb
das
loopne
aad
xchg
sbb
ljmp
insl
jge
data16
ljmp
pop
push
mov
xchg
inc
repnz
inc
jmp
cwtl
int3
jle
xchg
out
inc
sbb
inc
jp
jbe
movsl
xor
in
test
push
and
push
movl
xchg
data16
mov
clc
aaa
or
cld
push
jb
das
aad
push
inc
inc
int3
mov
pop
push
fidivrl
data16
inc
loopne
mov
add
outsb
jae
add
adc
pushf
mov
in
cmp
outsl
and
xor
clc
pop
andl
inc
sar
or
test
adc
push
xchg
inc
xchg
sub
mov
xor
add
lods
lods
mov
out
repnz
cwtl
xor
inc
call
out
sbbl
lcall
xor
js
in
fildll
inc
aad
pushf
xchg
hlt
fcomp
js
shl
mov
popa
sbb
cld
xor
js
cmp
mov
aam
cwtl
add
xor
out
ret
icebp
out
das
push
repz
or
mov
insb
inc
scas
and
mov
pop
and
add
inc
nop
imul
mov
out
cmp
decb
daa
mov
cmp
xchg
sbb
jo
cld
sub
dec
and
mov
xor
jb
ljmp
push
ljmp
ljmp
andl
lcall
mov
loope
out
pusha
sub
aas
cs
nop
add
test
push
add
sbb
and
in
sbbl
pop
fbstp
mov
test
into
das
mov
js
xor
or
pop
adc
adc
and
decb
inc
xchg
cltd
call
push
mov
jno
inc
sub
in
dec
hlt
push
dec
mov
outsl
aam
mov
imul
dec
push
add
jbe
int
mov
inc
sbb
lahf
loopne
lahf
cmp
fadd
out
jns
mov
add
mov
test
adc
loopne
pop
cmp
aad
jne
je
sub
pop
int
jg
idivl
jne
outsl
xchg
popl
add
shrb
sub
or
inc
clc
repz
mov
mov
and
mov
notl
mov
dec
in
mov
cmp
nop
pop
daa
pop
or
cmp
pop
imul
fwait
ss
imul
sub
rcrl
inc
inc
jne
xchg
cmp
inc
shrl
inc
jno
sub
mov
push
push
das
adc
inc
fisubrl
test
andb
in
popa
aas
xor
pop
fiaddl
jns
adc
insb
pop
leave
mov
outsl
add
or
xor
inc
test
clc
jge
movsl
mov
pop
cmpsb
dec
clc
les
fcomp
jo
add
push
lret
test
cwtl
pop
pop
xchg
out
out
and
jecxz
sarl
jo
in
pop
xlat
xchg
call
insb
jmp
and
shlb
mov
add
insl
sbb
jbe
inc
xchg
inc
sbb
jns
mov
int3
dec
push
push
inc
adc
lret
pushf
or
or
cwtl
jl
ret
enter
mov
ret
dec
push
ret
clc
xchg
std
aam
and
call
movsb
insb
add
jae
pushf
or
xchg
add
mov
inc
lock
fsubl
outsb
fidivs
dec
lcall
push
push
inc
lahf
xchg
sbb
scas
pop
cs
add
dec
cmp
dec
test
test
jle
out
sub
sti
push
pop
or
mov
jbe
jle
cmpsl
popa
dec
out
sti
mov
push
mov
ss
pop
out
lods
inc
cmpsb
out
cmp
jmp
jo
pop
and
push
aad
adc
add
popa
xor
in
jno
lret
jnp
mov
out
add
bound
mov
lahf
inc
cs
jp
mov
mov
push
ret
hlt
ret
rorl
mov
mov
mov
mov
jnp
cmp
xor
inc
push
xchg
aaa
push
mov
sub
data16
pusha
or
mov
stc
pusha
xor
dec
add
testb
popf
jp
hlt
xor
sbb
sbb
mov
mov
clc
nop
out
adc
add
icebp
gs
hlt
pop
int3
cmpsb
or
cmp
aaa
cld
out
mov
stos
insb
lods
repz
xor
push
clc
ret
mov
ja
fiaddl
out
mov
dec
push
rcrb
out
js
aam
rcrb
jmp
dec
dec
mov
mov
lahf
pop
pop
daa
and
xor
inc
ja
out
and
ljmp
mov
mov
outsb
mov
cmp
addr16
std
and
mov
adc
cltd
jecxz
inc
pop
fisttpl
js
add
inc
push
rclb
int
cmpl
shlb
insb
adc
jbe
inc
inc
fnstenv
arpl
cmp
lods
jge
sub
repnz
rorl
lcall
loopne
jno
sbb
mov
mov
adc
mov
data16
pop
add
xor
xlat
ss
mov
lret
xor
rcr
loopne
ljmp
jp
fsts
add
xchg
sbb
into
xchg
xor
adcl
repnz
int
cmc
inc
mov
scas
inc
imul
fsubrs
sahf
jne
outsl
push
out
fdivl
jp
xor
mov
mov
adc
mov
mov
mov
lret
push
sbb
xchg
xor
fs
notl
push
adc
orl
mov
mov
dec
xor
in
sub
sbb
outsb
pop
xor
imul
js
jl
in
addr16
cmp
icebp
jo
xchg
roll
imul
fwait
jmp
stos
lcall
jb
std
xchg
pop
adc
pop
jns
or
cmpb
aam
push
cmp
push
sub
jne
inc
shlb
mov
enter
and
stos
push
lret
imul
mov
mov
lret
orl
xchg
fcoml
ret
mov
sbbl
cmp
pushf
ja
xchg
push
xchg
or
lcall
dec
and
movsl
pushf
push
xlat
mov
mov
mov
xchg
dec
pop
in
loop
and
fbstp
xchg
mov
outsl
fs
xorb
pop
fs
outsb
cld
loope
cs
adc
mov
flds
and
lods
shll
cmpsb
lods
sub
adc
imul
push
negb
add
xor
sub
leave
clc
inc
dec
lock
fcomp
nop
or
mov
rorl
and
into
mov
push
fstl
fprem
clc
or
inc
out
dec
insb
shlb
mov
imul
out
ja
xchg
jns
adc
leave
or
push
lea
inc
std
cmpsl
xchg
mov
mov
jmp
stos
in
push
out
test
jle
shl
push
mov
push
jecxz
and
mov
mov
lahf
mov
cmpsb
mov
sbb
cmp
sahf
fs
outsl
call
es
in
and
or
push
xor
push
mov
xlat
push
jne
mov
cmovae
adc
inc
pop
push
fdivs
or
mov
jl
mov
pop
outsb
es
mov
jne
jecxz
jg
pop
mov
mov
popf
push
int
mov
mov
mov
stos
out
fstl
int
fcoml
test
mov
mov
lock
out
mov
loopne
sahf
inc
cmp
dec
mov
outsb
mov
loopne
sub
push
outsb
inc
sbb
ret
jle
aad
loopne
sub
and
sar
mov
pop
call
sbb
outsb
adc
push
cld
dec
cli
insl
repnz
testl
sti
les
add
adc
dec
in
loopne
aam
lahf
fnstenv
movsl
das
insb
es
imul
mov
mov
or
pop
jno
push
mov
pop
push
and
sub
lcall
aaa
mov
add
mov
sbb
fstl
test
or
and
jge
std
outsb
xchg
js
fucom
push
leave
ja
mov
or
mov
mov
mov
mov
fmull
cmp
xorb
sti
xchg
sub
out
and
and
xchg
aam
inc
sbb
dec
lock
in
mov
outsb
ret
add
jl
fsubrs
movsb
das
add
test
pop
dec
sbb
adc
repz
inc
xchg
and
push
test
stos
and
push
data16
xchg
jle
push
in
je
stc
push
popf
lods
sbbl
fidivs
in
sub
mov
test
push
rdtsc
enter
pop
or
rcrl
mov
pop
aam
adcl
nop
inc
sbb
mov
xor
out
xchg
xor
and
aaa
jl
pop
jo
addb
cltd
gs
adc
nop
mov
jnp
inc
lods
fdivrs
dec
push
sti
inc
fstpl
xchg
add
imul
popf
fs
xchg
adc
sahf
adc
js
cmp
int
mov
cmp
sub
cmp
sbbl
sbb
popf
and
scas
cmpb
movsl
in
cltd
das
ret
shll
call
push
js
xor
cmp
sub
scas
fstps
cmp
adc
out
inc
fcmovu
jp
xchg
pop
sti
popa
mov
or
lahf
cltd
jo
push
pop
or
outsb
clc
jl
std
xchg
sub
mov
loope
push
pusha
pop
xchg
jno
or
mov
rcrl
outsb
adc
push
cmp
mov
or
rcll
add
jmp
mov
adc
popa
lea
dec
clc
les
jmp
cmp
fisttps
mov
jnp
mov
mov
cmp
push
adc
jg
xor
jae
adc
aaa
mov
movq
sbb
push
add
nop
loopne
or
scas
push
push
pop
loope
mov
jno
aas
movsb
jle
xchg
push
shrl
stos
cmp
into
hlt
xchg
in
fsubrl
leave
lods
or
enter
test
push
arpl
inc
aad
dec
shrl
pop
out
pop
fisubl
pop
push
jns
ret
popa
xor
arpl
push
push
or
dec
imull
fidivs
or
cld
pop
std
repnz
cmp
outsb
fdiv
loopne
bswap
pop
inc
jae
rolb
mov
mov
ficoms
and
outsl
push
lods
addb
cmp
sbb
sub
cmp
lods
cmp
mov
pushf
pushf
or
test
sti
push
icebp
sti
scas
call
xor
test
add
sub
jns
or
aas
mov
sbb
repz
cltd
outsl
mov
fs
inc
arpl
pop
pop
jmp
xchg
mov
sub
arpl
scas
sbb
push
aas
xor
add
jmp
sbbl
icebp
repnz
push
shrb
pusha
fsts
sarb
lret
sbbl
stos
sbb
enter
cltd
push
out
fdiv
add
or
jae
adc
jb
imul
sbb
cmp
pop
ss
cmp
xchg
int3
addr16
pop
lret
data16
adc
jo
mov
das
inc
je
clc
xchg
lcall
xor
sub
mov
cs
pop
push
ds
and
insb
rclb
cmp
add
push
sbb
daa
mov
pop
cmpl
dec
pop
add
mov
sub
push
movsl
aas
sbb
mov
mov
cmp
and
cli
mov
xlat
es
and
fcompl
leave
out
ficomps
or
lret
pusha
add
jge
scas
lods
out
or
cld
and
insl
leave
lahf
test
mov
pusha
lcall
mov
test
or
and
jg
mov
or
into
je
xchg
jp
sbb
push
das
fadd
stos
cld
scas
dec
imul
cmpsb
imul
xor
pop
rcl
loopnew
dec
testl
gs
push
movsb
adc
add
xchg
imul
dec
addr16
mov
adc
jbe
cltd
cmpsl
out
mov
cmp
sbb
jns
fwait
jo
sbb
icebp
pop
loopne
imul
int
push
iret
adc
int
add
iret
cmpsb
fwait
rclb
lcall
std
adc
xchg
aas
negl
cli
mov
jo
hlt
xchg
cmp
inc
das
sub
push
add
iret
imul
lods
scas
inc
sbb
push
cmp
bound
gs
xor
jl
incb
lcall
shlb
lahf
imul
sub
stos
pop
xchg
mov
leave
pop
jnp
lock
cltd
nop
mov
pop
sub
test
lret
iret
lea
push
dec
faddl
or
jle
dec
mov
ret
outsb
out
push
cmp
mov
push
adc
mov
inc
fdivrl
sbb
jl
divps
jge
test
fsts
mov
test
dec
sub
pop
fdivrl
sub
push
in
sub
and
dec
pushf
push
ljmp
lock
pop
scas
inc
stos
push
xchg
cld
out
popf
sbb
test
test
js
xchg
arpl
aas
push
mov
add
pop
fnsave
imull
adc
icebp
ds
shlb
or
cmp
in
lret
or
sub
aas
loop
icebp
sub
mov
ljmp
xor
sbb
or
inc
xchg
add
lods
or
enter
cwtl
fdivp
mov
xor
ljmp
fstps
xchg
adc
xchg
mov
push
hlt
into
sub
je
dec
cld
xchg
sti
pop
push
mov
push
sti
pusha
sbb
cmp
jle
aas
mov
add
sbb
fnstsw
sub
fiadds
pop
jno
int3
mov
jmp
sub
or
call
xor
pop
rcrb
mov
mov
cmp
sti
test
shl
mov
cmpsl
insb
adc
movb
rcrl
add
or
fistps
cmpl
push
pop
stos
and
mov
cmp
pop
mov
mov
cmp
sub
mov
cmp
push
fucompp
les
bound
popf
aas
xchg
push
into
jmp
les
and
xchg
and
mov
jmp
mov
push
inc
cmpb
sbb
movsb
aam
leave
pusha
loope
xor
lds
call
pusha
xchg
pop
dec
mov
mov
dec
shr
ret
aas
push
inc
push
subl
adc
lahf
fsubl
inc
das
ret
pop
ja
mov
aas
pop
cmp
and
pop
push
pop
shrl
lcall
push
shr
jne
insl
in
gs
inc
inc
xchg
cmp
iret
mov
mov
inc
jne
or
mov
pop
data16
mov
fstpl
subl
dec
sbb
dec
popa
out
in
aad
in
fcom
fistps
pop
xchg
or
xor
sahf
clc
aam
add
xchg
dec
lcall
mov
jo
sub
jno
push
fs
push
adc
mov
sub
dec
mov
lret
movsl
es
es
fcoml
sti
shl
repnz
pop
mov
lret
bound
ds
and
pop
popf
notl
push
outsb
adc
pop
xlat
fdivl
mov
out
mov
add
jns
or
ret
xchg
jne
leave
in
aad
inc
loop
imull
dec
in
xchg
cmp
jmp
iret
repz
mov
sbbb
push
cmpsb
and
xchg
fcmovnb
lcall
adc
add
nop
lret
mov
movsb
cmp
cli
adc
jno
cs
pop
std
mov
cmc
pusha
std
inc
lret
outsb
push
jge
sbb
jg
gs
mov
or
andl
test
jnp
data16
fdivrs
aad
push
mov
pushf
jge
pop
negb
dec
jle
fwait
push
pop
out
xchg
xlat
outsb
adc
jl
mov
add
pop
mov
xor
out
pop
inc
or
push
pushf
xchg
aas
add
inc
test
loop
xchg
lcall
out
mov
and
adc
into
aam
int3
xor
mov
jmp
shlb
xchg
sub
mov
mov
sbb
hlt
mov
insl
cs
icebp
test
shlb
inc
pop
not
outsb
out
lds
push
insb
popw
cltd
xor
rcrb
mov
mov
mov
jmp
adc
scas
jae
jb
scas
push
and
in
mov
lods
and
test
add
jb
inc
ss
out
lods
rorl
pop
mov
pop
cmpsl
push
pushf
sub
cwtl
pop
ud0
xor
je
out
lods
sbb
sti
xchg
test
lret
mov
adc
outsb
jb
push
stos
or
xor
outsb
add
push
dec
psadbw
add
push
dec
push
mov
jae
jbe
imul
cmpb
or
lods
jbe
xor
inc
mov
and
sbb
sub
insb
inc
xchg
aas
sbb
incb
mov
fs
call
ret
hlt
xor
jno
lcall
or
pop
xchg
sub
pop
mov
lods
hlt
mov
test
lret
mov
cltd
int
fidivrs
jle
fildl
adcb
mov
movsl
cld
rorb
mov
dec
sub
push
std
shl
pop
inc
fmuls
std
mov
push
jbe
fisubs
popl
mov
xchg
mov
push
sub
bound
out
call
test
arpl
inc
sbb
daa
xchg
mov
or
mov
movsb
fimuls
lods
test
sub
pop
into
adc
mov
das
cmp
mov
sub
or
addb
insb
sar
dec
dec
negw
inc
fmuls
pop
push
pop
dec
inc
mov
jge
inc
adc
mov
jne
sub
xchg
inc
aam
fdiv
cwtl
cmc
hlt
mov
ds
punpcklwd
insb
sbb
fs
daa
cltd
dec
fwait
jb
scas
dec
pop
pushf
pop
push
into
aaa
cmp
addr16
mov
add
int3
lret
xor
iret
fcmovnu
mov
mov
xor
pop
arpl
jne
mov
ret
loop
dec
out
js
rol
inc
cltd
ss
xor
xor
adcb
sub
push
adc
sub
push
stos
scas
dec
test
mov
test
out
mov
mov
mov
mov
or
sub
mov
mov
pop
adc
inc
mov
shll
movsb
pop
cmp
shrb
fwait
adc
jbe
icebp
das
xor
divb
mov
rcl
sbb
dec
mov
popa
fsubs
xor
imul
cld
and
dec
pop
cli
inc
cmpl
xchg
or
mov
sar
repz
pop
mov
add
stos
lea
neg
daa
xchg
fadds
xor
add
fiadds
push
mov
in
pushl
fs
pop
xchg
xchg
sub
sbb
repz
pop
loop
fcomps
mov
xor
inc
inc
sub
lret
lret
cli
sbb
lahf
in
xor
shll
loopne
push
insb
inc
jne
or
lret
pop
sbb
pop
pop
mov
or
xor
push
mov
scas
rep
mov
fs
in
aaa
hlt
fst
adc
mov
stos
fbstp
andb
iret
xchg
dec
mov
dec
loop
sbb
jnp
mov
sbb
xchg
cmp
dec
iret
mov
les
shrl
lods
jnp
mov
fdivrl
xor
adc
and
sbbl
xchg
flds
and
iret
sti
sub
or
loope
adc
mov
xor
enter
sbb
jbe
stos
mov
rcll
mov
addr16
dec
das
cwtl
loope
cli
push
icebp
pop
mov
adc
and
dec
dec
jl
test
xchg
popf
iret
gs
imul
push
fiadds
aas
lahf
cld
daa
jmp
mov
pop
movsl
lret
in
inc
add
jle
imul
int3
jo
push
jmp
pop
fcomip
outsl
sub
lea
cmp
cwtl
hlt
or
nop
jp
and
insl
ficoml
les
insl
shl
or
rep
test
lock
sub
push
dec
test
push
sbb
into
dec
xor
scas
cmp
pop
xor
int
push
ja
jecxz
mov
pop
mov
sbb
pop
xchg
in
and
negb
mov
sub
dec
adc
cmpsl
les
mov
inc
mov
out
out
mov
push
add
mov
mov
out
jmp
mov
adc
mov
pop
test
je
mov
testl
aad
fsub
mov
cs
mov
addl
jmp
ja
fidivs
ja
movsl
or
rol
icebp
jno
add
push
lea
sbb
xor
or
sub
aas
imul
xlat
sub
sti
in
or
je
fisttps
dec
lock
cmc
mov
push
je
outsb
sbb
lret
cmp
cmp
sub
divb
add
popf
lret
pop
mov
push
add
ret
cmpsl
icebp
dec
jmp
push
mov
xor
sub
push
add
lahf
fmull
dec
xor
fcoml
and
mov
inc
ljmp
insl
lods
pop
lock
xchg
push
and
xchg
xchg
cwtl
data16
andl
popa
and
aaa
out
cld
stc
gs
or
iret
xchg
sub
add
cmp
pop
dec
pop
xchg
push
out
jne
and
pop
push
sbb
xor
rcl
and
sbbb
xchg
jne
fs
cli
inc
lea
rorl
sub
insb
lcall
std
pop
sahf
xlat
jg
cli
out
stos
inc
out
js
addl
pushf
pushf
adc
dec
xchg
add
add
imul
stos
dec
insl
jae
lahf
jo
or
scas
add
mov
repnz
or
ss
cmp
pop
arpl
stos
js
out
lods
and
test
dec
xor
adc
push
and
mov
mov
test
adc
negb
cwtl
test
xor
inc
fcomps
shlb
inc
xor
jo
dec
add
rcrb
jle
in
pop
je
inc
sbb
jnp
loopne
fcompl
jns
jl
jle
lahf
cmp
adc
inc
icebp
inc
pop
pop
xchg
xlat
fcoml
push
mov
addl
pusha
inc
sbb
bound
rcl
test
inc
iret
stc
icebp
cmp
lock
movsb
dec
stos
lahf
stos
fsubrl
sbb
cli
rcr
push
fxch
test
js
bound
pop
scas
aam
aas
sti
adc
lds
js
test
or
test
pop
adc
cmp
cltd
inc
sub
mov
lods
je
or
adc
push
mov
add
bound
movsb
dec
push
cld
dec
imul
sbb
jb
fimull
adc
add
div
adc
movsl
mov
jl
idivl
cld
jg
inc
gs
and
or
jle
dec
add
mov
cmp
or
bound
cmp
mov
mov
adc
push
lahf
cmp
enter
or
push
adc
xlat
shlb
shll
fcoml
cs
mov
gs
mov
aas
cmp
test
cmp
pop
or
sub
add
arpl
fucomi
dec
fs
xor
in
out
dec
in
lds
data16
add
nop
inc
push
lahf
int3
mov
cmpsl
push
in
leave
mov
mov
in
daa
outsl
or
cmc
ja
adc
and
xchg
cmp
pushf
dec
fisttpll
jb
mov
jecxz
pop
jo
adc
ret
outsb
sbb
mov
jo
cmp
mov
add
xor
and
stos
xor
push
jb
add
mov
xchg
repnz
push
aas
and
or
push
xor
adc
enter
mov
pop
dec
add
xor
das
dec
hlt
enter
push
mov
ds
jge
aam
pop
repz
scas
ret
rcl
sarl
push
cli
inc
push
fbstp
popa
mov
out
push
rcrl
shl
jno
loopne
mov
inc
bound
mov
nop
jnp
stos
loop
movsl
scas
mov
add
es
push
inc
xor
in
fcmovu
ljmp
shl
outsb
add
mov
jle
nop
mov
inc
cmpsl
hlt
xchg
push
jo
mov
movsl
jl
dec
xchg
inc
adc
adc
jecxz
movsb
dec
jp
or
bnd
out
outsb
in
jno
push
cmpsl
cmpsl
shlb
sub
leave
lahf
repz
stos
rclb
in
sub
sbb
pushf
loope
jb
inc
rcll
jmp
inc
push
fwait
mov
lret
mov
repz
jmp
xchg
scas
push
jb
int3
fs
js
aam
scas
mov
inc
mov
movsl
jb
loop
imul
ret
movsl
xchg
xor
sbb
xor
jno
fisubrl
dec
push
xor
pusha
movsb
data16
jg
arpl
cmpsb
adc
mov
inc
jg
or
pop
ficoml
loopne
dec
loop
inc
and
or
movsl
lahf
mov
hlt
cmpsl
fmuls
cmp
shrl
cmp
xchg
addps
dec
out
xchg
add
sub
aam
mov
lea
imul
pop
stc
iret
sub
or
es
scas
mov
xor
inc
stos
cmp
adc
and
std
arpl
ret
xchg
sbb
xor
adc
or
cwtl
sbb
fbstp
test
std
xchg
mulb
jb
pop
cmpsb
outsb
in
jmp
jae
mov
nop
pop
cmp
adc
ss
adc
dec
dec
mov
pop
hlt
cmp
pop
add
xor
pop
mov
inc
xchg
mov
and
ret
mov
or
loopne
xor
loope
cli
push
int3
out
std
ja
mov
inc
fdivrp
cwtl
xchg
mov
sbb
adcb
push
in
add
pop
data16
shl
inc
pop
repz
xchg
push
test
cmp
es
xor
xor
xor
push
xchg
fs
or
out
nop
daa
sub
xchg
lods
test
call
clc
push
jecxz
or
mov
pusha
cmp
mov
push
lret
jl
push
in
adc
adc
jbe
fcoms
cmpsl
clc
mov
or
dec
xor
movsl
enter
jl
stos
cmp
mov
cmp
dec
shll
jge
dec
cmpsl
cmp
ret
ret
jo
push
popf
sbb
cmc
imul
pop
movsb
mov
stc
loop
or
cmp
popa
adc
push
dec
data16
in
mov
pop
dec
sub
test
add
enter
js
pushf
xor
jecxz
adc
sarl
add
fmuls
and
int3
inc
lods
mov
sub
xchg
arpl
sti
mov
mov
dec
sti
inc
pushf
test
int
lock
out
mov
stos
add
push
es
stos
lahf
pop
mov
xchg
lods
loop
sti
lock
imul
cmc
jmp
imul
icebp
sbb
lea
sti
sbb
stos
out
cmc
mov
dec
mov
dec
mov
inc
dec
cmp
into
jmp
in
inc
mov
xchg
fisubrs
dec
call
gs
sbb
push
inc
jmp
rol
dec
push
mov
xchg
inc
cmp
and
fnsave
mov
push
dec
pop
cmp
shr
lods
ljmp
out
mov
push
push
dec
xor
je
popa
mov
enter
push
test
xchg
jb
and
xchg
dec
out
jmp
imull
sub
lea
clc
lds
movsl
xor
jg
xchg
xchg
sub
cli
in
lahf
pop
dec
pop
inc
in
insl
shlb
cmp
jg
mov
push
or
mov
out
dec
xchg
inc
fs
loop
push
cltd
mov
pop
mov
stos
inc
lock
setge
lret
adc
pop
push
jo
fs
int
call
pop
cmpsb
movsb
repnz
cmp
imul
cmp
pop
out
push
iret
mov
jmp
inc
cmp
pop
outsb
adc
jbe
cltd
dec
cmp
push
inc
shll
push
adc
lods
mov
js
jg
xchg
dec
das
cmp
lds
lods
dec
addr16
sbb
mov
je
cs
cmp
sbb
mov
mov
lock
shll
insl
pop
jb
xor
mov
stos
dec
enter
jle
lock
cmpsl
jp
movsl
leave
test
jmp
cmp
jge
les
cmpsb
mov
xchg
stos
pop
call
jg
inc
int3
scas
movsb
add
xor
outsl
daa
xchg
test
mov
sbbb
je
mov
mov
or
push
cmp
jbe
mov
xchg
add
cmp
mov
add
and
outsb
and
push
int
or
stos
push
popa
pop
in
cwtl
mov
fwait
adc
test
outsl
xchg
aad
flds
daa
test
pop
adc
cmp
add
and
pop
cmpsb
sti
data16
and
sbb
dec
and
test
xor
sbb
movsb
in
shl
inc
mov
jp
jmp
dec
mov
out
fiaddl
rclb
lods
cmp
jne
mov
inc
and
jne
cmp
cwtl
cld
lods
js
jmp
jecxz
jno
insl
sahf
pop
scas
mov
sbb
outsb
mov
scas
pop
jmp
imul
daa
rol
rcrl
jp
inc
inc
enter
dec
lahf
stos
jge
icebp
adc
scas
dec
in
xchg
push
rcrl
hlt
out
mov
sbb
and
push
jle
pop
inc
sbb
fs
arpl
stos
add
add
xor
jns
jno
mov
mov
outsb
pop
outsb
movsb
js
js
sub
jp
in
lret
jecxz
push
xlat
ja,pn
jge
das
adc
mov
ret
imul
pop
iret
jae
lcall
pop
inc
mov
add
xchg
sahf
orl
adc
js
xlat
pop
fnstcw
lock
push
mov
mov
inc
test
cli
lds
test
cmovg
mov
call
xor
imul
xor
lcall
jns
sbb
xchg
xchg
iret
and
xor
cli
jnp
xlat
xchg
ljmp
xchg
sbb
hlt
add
pop
mov
push
xchg
dec
outsl
aaa
or
xchg
lods
push
insb
mov
sbb
inc
cwtl
sbb
inc
lods
jb
adc
test
lea
int
fsubrs
pop
lret
add
sub
pushf
or
xor
out
jno
mov
fbld
adc
test
ret
cmp
cmc
dec
shlb
nop
imul
ss
and
fs
push
addr16
and
xchg
ja
xor
ss
fldenv
fdivs
mov
mov
lods
sahf
es
je
pop
cmc
and
insb
add
inc
mov
xchg
jp
jnp
gs
insl
lea
cmc
cld
or
jns
cli
lcall
add
jne
adc
and
in
loopne
push
jo
inc
out
xchg
inc
mov
push
jmp
out
je
xchg
test
lret
int3
iret
lods
xchg
sbb
test
pop
fcompl
push
or
sub
mov
movsl
push
fwait
sub
lahf
frstor
leave
sbb
mov
call
call
es
fsubl
jae
inc
pushf
icebp
xor
pop
aad
dec
jb
mov
inc
pop
test
xor
stc
jae
or
adc
into
xchg
jb
jae
test
mov
sub
inc
leave
inc
in
scas
mov
mov
adc
repnz
push
les
jecxz
jbe
into
dec
pop
dec
in
push
xor
insl
add
push
popf
push
inc
push
aam
inc
addr16
and
mov
inc
shlb
xchg
inc
jg
ja
jmp
and
sub
push
daa
clc
xorl
jle
push
movsl
push
lahf
pop
adc
lret
test
pop
int3
lret
addr16
cltd
in
dec
arpl
xor
jnp
mov
push
cmp
add
and
xor
popf
insl
cmp
inc
lahf
push
pop
jg
mov
and
lret
push
popa
adc
ja
dec
mov
fistl
xor
lock
in
incb
add
xor
lock
adc
arpl
or
out
mov
cwtl
add
sahf
adc
add
jge
dec
mov
dec
lret
mov
in
lds
cmp
out
andl
inc
sub
inc
pop
jge
pop
push
iret
push
mov
pop
in
add
xchg
jl
in
ja
jge
xchg
scas
mov
cs
sbb
mov
mov
imul
jg
mov
mov
jg
xlat
loop
outsl
sub
dec
push
mov
fwait
sahf
repnz
push
mov
mov
xor
repnz
cmp
mov
xor
and
out
aaa
push
dec
adc
hlt
js
lods
les
mov
or
inc
scas
push
sti
sub
xor
push
cmp
icebp
sbb
mov
mov
stos
push
cwtl
aad
imul
repz
lcall
pop
mov
pop
dec
jmp
insl
int3
mov
les
hlt
in
xchg
in
clc
push
inc
cmpsb
push
pop
pop
cmpsb
in
mov
jae
loopne
xor
sbb
loope
in
es
sahf
and
int
ds
test
adc
icebp
xor
add
pushf
cli
lret
mov
push
sbb
ja
adc
lret
imul
cltd
pop
xchg
ss
jns
pop
ja
xchg
mov
je
cmc
test
push
and
mov
test
iret
int3
cmp
loope
sub
aam
push
movsl
mov
movd
mov
arpl
insl
pop
repz
inc
insl
add
ret
sbb
jbe
mov
mov
xchg
ds
or
dec
push
sbb
xorl
ljmp
lcall
sbb
adc
mov
int3
dec
dec
fs
xchg
add
push
mov
dec
pop
ret
sub
adc
stc
scas
out
scas
in
xchg
test
nop
into
mov
pop
in
xchg
cmpsb
mov
cmc
jecxz
rorl
int3
sbb
cmc
cmp
pusha
cli
mov
fs
mov
inc
paddb
push
clc
cmp
mov
fbstp
lds
jno
sub
mov
cld
pop
mov
lds
repz
ficoml
das
cmc
incl
int3
cld
inc
push
xor
mov
enter
mov
xchg
sarb
xlat
cmp
outsb
add
jbe
mov
mov
out
bound
inc
cld
aaa
hlt
std
jo
adc
inc
sti
out
es
pop
pop
out
cmp
lods
pop
lods
push
inc
int
mov
jmp
mov
or
mov
test
adc
pop
shrb
repz
and
out
pop
pop
addr16
mov
pusha
repnz
jge
fwait
mov
sub
jo
xor
scas
lock
stos
xchg
dec
adc
out
mov
cmpb
movsb
mov
pop
adc
cwtl
icebp
mov
cmp
dec
inc
mov
addr16
mov
and
std
add
fldl
fisubrl
xchg
add
push
hlt
aaa
xchg
xor
dec
jmp
test
fisttpll
fsubs
mov
stos
test
in
mov
inc
stos
roll
stos
andb
pop
push
mov
sub
daa
js
push
dec
je
jbe
sub
in
or
enter
pop
mov
lds
sub
add
cli
cmpsl
xor
cmpsb
andl
xor
cmp
inc
bound
push
pusha
enter
lods
inc
cmp
cmp
pop
inc
icebp
shlb
test
test
sbb
testb
push
insb
xlat
enter
incb
cwtl
add
movsb
pop
pusha
jo
push
sbb
add
adc
add
mov
fimuls
test
shlb
and
or
inc
stos
add
inc
mov
dec
call
test
mov
dec
in
adc
mov
mov
dec
aas
mov
xchg
fiaddl
loope
and
repz
loopne
push
movsl
lods
xchg
mov
sub
pop
sbb
cmc
lods
jno
mov
sbb
or
scas
int3
enter
fnsave
insb
mov
jle
out
movsl
cld
jae
fadds
inc
pop
shrb
lcall
mov
xlat
pop
rcr
xchg
mov
dec
scas
sub
push
js
push
dec
int3
les
pop
sub
dec
dec
cli
sbb
into
or
pop
push
test
shr
xor
loopne
mov
into
mov
das
mov
mov
cli
push
repz
dec
mov
sub
lods
jae
xor
xchg
in
mov
popf
sub
or
repz
outsb
dec
xor
xchg
mov
adc
call
cld
rclb
pop
dec
jae
jae
in
push
sbb
lods
sub
xchg
fidivl
xchg
ja
stc
nop
and
jb
sub
mov
fidivrs
xlat
fstpt
lahf
and
sub
cld
mov
and
push
lods
xor
es
pop
imul
push
lds
repz
pop
dec
cli
jge
ret
sbb
cmc
in
out
cltd
sbb
ret
push
xchg
jno
mov
mov
jne
inc
sahf
jns
test
mov
test
mov
loopne
and
fimuls
jne
lods
cmp
push
insl
cmpsb
cmp
in
loop
xor
jb
push
push
xchg
lods
lret
mov
lret
inc
negl
pop
mov
mov
push
sbb
mov
imul
sbb
add
stos
bound
lretw
jne
push
leave
rcl
cli
jne
fnstsw
fwait
jmp
lcall
out
movsb
pop
out
add
mov
in
test
mov
test
mov
inc
adc
jmp
jge
iret
cmc
je
scas
inc
cmpsl
arpl
inc
push
icebp
ja
xor
mov
mov
insl
xchg
leave
movsb
inc
mov
rclb
dec
and
dec
enter
cmp
or
je
dec
pop
cmp
ljmp
scas
fisttpl
test
inc
push
add
inc
fsubrl
lahf
push
addl
pop
cs
add
pop
scas
subb
lret
testl
push
aad
ds
mov
lret
mov
leave
aam
cltd
ret
arpl
cmp
sub
loopne
pop
mov
lahf
push
adc
test
jns
adc
jno
shrb
sbb
int3
xchg
outsl
daa
in
in
mov
in
pop
xor
fbld
or
xchg
push
jl
fs
sahf
push
jl
and
pushf
xchg
add
ja
cwtl
test
pop
jns
jp
mov
push
push
xchg
sbb
les
sub
or
aas
mov
lock
adc
in
xchg
pop
push
shrb
mov
leave
pop
ret
sbb
push
test
sti
xchg
adc
mov
mov
mov
popf
mov
sbb
mov
mov
dec
mov
pusha
int
int
jecxz
push
imul
subl
out
mov
inc
pop
cwtl
out
mov
and
pop
dec
cmp
pop
icebp
data16
xor
mov
xlat
xor
in
jge
addl
cmp
sbb
mov
mov
xor
mov
insl
sub
shr
insb
mov
fwait
push
scas
je
gs
leave
add
divl
push
repz
sub
mov
pop
jne
mov
mov
add
jnp
test
scas
push
fldt
cmpl
and
mov
mov
outsl
cld
mov
mov
or
jbe
lock
push
xlat
mov
jb
jecxz
adc
movsb
stos
ficompl
pushf
rcrl
fwait
pop
mov
lods
std
std
xchg
mov
ficoms
xor
and
sahf
data16
loopne
adc
sahf
dec
into
inc
xchg
sub
out
ret
sbb
cmp
pop
adc
or
dec
xor
orl
in
xor
sub
ja
aaa
test
push
mov
ret
mov
ret
add
pop
dec
lods
and
mov
sub
sbb
ds
xor
xchg
gs
das
int3
jl
adc
clc
xchg
dec
push
lock
dec
inc
dec
scas
aad
adc
cli
cli
or
mov
in
es
and
cli
inc
mulb
sub
fcomps
push
ss
mov
inc
mov
in
in
dec
in
dec
in
inc
cwtl
add
adc
add
aam
rcrb
jmp
mov
cwtl
std
cld
push
test
mov
push
mov
add
xchg
hlt
nop
lods
fadds
and
dec
insb
xor
stos
es
jmp
ja
cwtl
cmpsl
scas
inc
mov
insb
pop
loope
popf
pusha
inc
call
andl
addr16
xchg
mov
lods
xchg
insb
mov
movsl
push
mov
pop
xchg
int3
sub
lods
and
xchg
adc
pop
mov
fwait
xor
mov
addr16
inc
aaa
fs
mov
push
pop
rorb
inc
lahf
ss
enter
inc
pop
jae
ret
push
shrb
mov
nop
jle
xlat
pop
mov
pop
lds
lret
or
cmc
mov
pop
push
sahf
nop
stos
inc
ret
mov
in
dec
cwtl
fcmovbe
mov
inc
pop
sbb
mov
je
iret
jl
jle
mov
bound
xor
xor
mov
or
push
pop
dec
cmp
pop
adc
lea
stc
stos
inc
sub
inc
orl
fisttpll
shld
sub
jae
aaa
fldenv
imul
stos
inc
loop
sbb
js
sub
out
or
push
mov
cmp
jbe
adc
ljmp
cmp
pop
movsb
aam
push
mov
xchg
and
or
mov
xchg
or
dec
cmp
lock
cmpsb
ds
iret
data16
imul
lods
sub
out
insb
jecxz
inc
push
pushf
das
into
lea
sub
dec
xlat
ss
lahf
mov
fsubrs
adc
sub
mov
fisubs
jg
xchg
int3
je
mov
push
lret
jno
shll
out
add
push
dec
cwtl
or
outsb
fwait
ret
or
jg
rcrl
pop
adc
or
psrld
inc
test
mov
out
psubsw
lods
jmp
inc
cmp
mov
push
jo
push
rcrl
mov
adc
xchg
adc
cli
rcrl
push
cmp
pushf
das
jl
int3
cmp
push
jp
addl
jl
mov
jg
lods
push
mov
je
hlt
xlat
jp
int
mov
out
cmp
pop
jne
or
xor
and
dec
pop
inc
loop
rcrb
mov
push
shrb
arpl
sub
insb
push
test
dec
dec
fists
jne
pop
and
out
sti
mov
add
shll
add
cmp
pop
pcmpgtd
and
push
pop
dec
mov
mov
sub
add
es
imul
inc
test
xchg
dec
out
pop
mov
popf
ror
mov
stc
mov
xchg
lods
jge,pn
cld
dec
dec
subb
sub
mov
or
bound
mov
cld
call
lods
mov
testb
xchg
inc
jbe
lcall
xor
sub
sbbl
jbe
and
nop
fbld
add
sti
mov
test
fld
fiaddl
sub
xchg
aaa
sti
pop
lds
mov
loope,pt
arpl
sti
pop
lods
jb
inc
clc
and
scas
cmc
push
mov
jae
pop
les
or
mov
mov
test
lods
imul
mov
pop
movsl
jnp
pusha
lret
dec
add
pop
std
in
test
inc
imul
fidivl
pop
jge
scas
fldl
rorl
lahf
cmp
xor
outsl
hlt
test
and
ljmp
pop
cmpsl
mov
inc
fs
in
jp
das
divl
test
lods
and
push
xchg
fstps
fbld
imul
arpl
cmc
inc
and
inc
and
mov
mov
adc
sarb
sbb
add
cmp
sbb
sub
xchg
sbb
aas
jge
xchg
adcb
aaa
push
and
lcall
pcmpeqb
cmp
rcll
ucomiss
cmpl
dec
pop
pop
and
sbb
xchg
ss
pop
popa
scas
push
lret
and
mov
mov
add
mov
scas
mov
mov
bound
lea
dec
adc
dec
mov
xchg
or
out
sub
aas
test
inc
fsubrl
inc
cmpsl
jg
arpl
inc
mov
dec
out
test
cmp
in
mov
lods
repz
cmpsl
inc
jne
in
jns
into
mov
xchg
add
add
sub
jns
insb
ljmp
mov
xchg
incb
jne
dec
mov
and
sbb
addr16
incb
dec
repz
pop
adc
in
dec
jl
mov
mov
ja
mov
inc
enter
pop
imul
mov
mov
ljmp
pop
pop
daa
or
sarl
aas
or
pop
mov
mov
add
xor
lcall
push
call
jle
sahf
repz
fisubrl
push
cltd
and
scas
cld
jne
sub
pop
int3
cmpsb
xor
test
in
and
adc
addr16
movsl
dec
adc
insb
outsl
mov
dec
sbb
arpl
stc
push
pop
adc
dec
add
pop
push
fs
lret
sbb
mov
aad
and
dec
xchg
nop
cmp
int
in
sbb
call
xchg
push
loope
pop
sbb
scas
and
mov
xlat
lods
cli
out
stos
and
cmp
mov
jo
loop,pt
fwait
jecxz
mov
sbb
movsb
dec
xor
fcmovnb
jl
or
int3
xchg
mov
mov
std
es
ljmp
mov
pop
push
sub
ss
cs
imul
jne
cmp
cmp
scas
push
add
gs
jl
inc
scas
jmp
xchg
and
jg
add
cmpsb
test
add
sbb
lahf
push
cmp
in
cwtl
add
add
into
lds
xchg
adc
sbb
fnstcw
cmp
jl
mov
push
xchg
inc
push
std
dec
bound
sub
scas
repz
mov
enter
xor
xchg
sbb
pop
jl
cmpsl
jle
test
pop
jae
add
icebp
andb
mov
lods
xchg
push
icebp
pop
inc
out
cmpsb
fcomip
icebp
fcomps
rcll
pop
out
sub
jg
mov
sbbb
dec
test
aaa
jp
shll
popa
addl
in
pop
mov
adc
out
xor
sbb
ud1
or
cmpsl
inc
stc
nop
clc
mov
dec
ss
xchg
push
mov
lds
ss
sti
out
push
int
mov
popa
sbb
mov
insb
in
test
push
dec
movsb
push
fidivs
mov
inc
ficompl
inc
mov
repz
and
cmc
jl
scas
arpl
sbb
pusha
into
sub
outsl
add
mov
push
jge
mov
adc
adc
dec
xchg
out
and
cmp
mov
and
std
je
push
loope
test
sti
push
pop
dec
jmp
popa
clc
loope
insl
iret
sbb
ret
pop
int3
arpl
dec
mov
loope
inc
dec
mov
ucomiss
jae
mov
xchg
add
mov
cmc
sbb
mov
inc
or
mov
push
icebp
adc
adc
pop
cmc
jmp
movsl
lods
inc
call
rol
and
mov
daa
lcall
sub
es
lcall
cld
iret
clc
sbb
push
in
dec
mov
ret
and
mov
ret
vpextrw
lds
dec
ret
jb
repnz
imul
adc
dec
popa
pop
xor
cltd
sarl
and
popf
das
lds
and
xchg
roll
pop
fbstp
stos
jmp
hlt
out
insb
add
jp
adc
push
pushf
popa
cmp
ret
jmp
out
add
test
push
push
xchg
cltd
jnp
aas
sahf
das
jp
sub
aad
push
push
cmpl
imul
stos
mov
les
fs
pop
movsb
jnp
mov
cmp
lods
enter
push
ljmp
sub
mov
das
mov
mov
adc
ret
pop
mov
popa
cmp
adc
xor
rcrb
push
shll
imul
push
cmpsl
enterw
dec
sbb
mov
pop
lahf
adc
mov
jle
pushf
xor
addr16
mov
lcall
xor
bound
int
lds
mov
int
pop
scas
in
xchg
sbb
jp
inc
test
xor
fnsave
pop
push
mov
out
pop
aaa
xchg
mov
dec
jp
inc
jbe
test
enter
loop
lds
mov
ds
adc
pop
shrb
jbe
push
in
addr16
lret
int
add
xchg
adc
fldenv
push
aam
xor
and
push
sahf
pop
inc
jmp
scas
mov
dec
fiadds
mov
inc
mov
jno
movsl
es
mov
adc
das
xlat
sub
test
sub
inc
mov
lds
cwtl
xchg
mov
push
aaa
frndint
fucomip
mov
lret
xchg
xchg
hlt
addr16
cmp
mov
sub
cmpl
and
lret
cli
mov
and
cltd
and
stc
adcl
push
pop
movsl
fildll
lahf
or
lds
add
adc
in
xor
sarb
arpl
fsubp
ss
dec
inc
inc
fdivs
pusha
xchg
dec
dec
adc
rcrb
je
pop
sub
std
pop
add
sub
int3
jbe
xor
fistl
call
adc
mov
test
jne
lret
sbb
jecxz
decb
mov
pop
pop
aaa
in
outsb
icebp
dec
adc
push
out
xchg
or
cld
cld
xchg
das
movsl
sub
adc
lcall
stc
lea
outsb
pusha
negl
xor
loop
loop
hlt
add
xchg
cmp
pushf
push
jg
iret
mov
mov
xor
call
mov
loopne
lahf
fwait
call
and
or
xchg
and
ret
pushf
dec
shrl
mov
insl
jno
cs
cmp
adc
cli
sub
inc
pop
dec
imul
icebp
xor
and
add
jbe
pop
cmc
mov
test
fiaddl
mov
push
lahf
jmp
push
add
les
iret
xchg
int
pop
push
outsl
iret
int
pop
xchg
dec
and
mov
or
dec
push
fxch
nop
out
and
pop
in
mov
loopne
ss
ret
notb
es
push
pop
mov
fldenv
rcpps
inc
fs
jae
fwait
cmpsl
push
xchg
loop
dec
and
clc
adc
ljmp
outsl
sarl
dec
add
adc
sbbl
in
sbbl
mov
jns
pop
add
push
xchg
aaa
es
cmpsl
dec
mov
leave
fldl
int
xor
pusha
push
and
pop
insb
cmc
xchg
test
push
aas
cmp
aas
jbe
addr16
cmp
mov
sbb
pop
fcomi
incl
lods
mov
aam
mov
icebp
mov
test
adc
mov
xorl
mov
adc
or
fnsave
aam
inc
xchg
xor
stos
pusha
shlb
inc
add
fisubl
push
inc
cld
add
mov
xor
enter
icebp
cmpsb
out
mov
xchg
stos
pop
call
clc
or
imul
ds
xor
icebp
add
cmp
movsl
sbb
fldcw
hlt
or
data16
imulb
or
test
mov
daa
sahf
arpl
out
jnp
scas
cmp
inc
sti
fnsave
test
lahf
push
decb
dec
mov
adc
and
leave
ljmp
sbb
mov
jne
jle
fsubrl
cld
sbb
sub
sub
rclb
pop
hlt
cmc
imul
lahf
jnp
rorb
bnd
xor
jns
outsb
das
dec
das
mov
les
sbb
arpl
rcll
add
ds
fs
fdivs
mov
xor
cwtl
aaa
lahf
add
pop
shrb
mov
or
xor
pop
pop
rcrb
movsl
and
shll
ficomps
pop
cmp
loope
cmc
pop
and
aaa
mov
aaa
js
in
call
test
push
xchg
adc
sub
stc
cld
dec
cmp
addr16
stos
cwtl
sbb
sub
scas
mov
adc
push
fidivl
lret
jmp
xor
fcmovu
jbe
popf
addr16
lcall
xchg
inc
insl
testb
leave
add
adc
sbb
mov
mov
pop
jne
sarl
or
push
mov
insb
sub
jmp
pop
inc
and
repnz
and
les
movsb
ljmp
pushf
pop
jo
in
leave
jo
outsl
je
outsb
mov
push
in
push
pop
xor
in
add
fldl
in
inc
in
jp
cmp
mov
shrl
cmpsb
mov
stos
xchg
add
fbstp
mov
xor
dec
bnd
or
sarl
mov
push
outsl
subb
or
outsb
je
loopne
push
mov
ds
sahf
mov
cld
hlt
pop
cs
ljmp
pusha
data16
sbb
je
shl
pop
out
aaa
xor
aas
outsb
push
in
push
inc
inc
lret
arpl
push
and
sti
push
jb
out
shll
sarl
fcompl
mov
js
psrld
sahf
push
ja
fsubrl
add
sbb
in
inc
and
xchg
gs
stos
gs
test
bound
push
mov
sbb
cmc
lods
sub
stos
cmp
mov
test
int
inc
xchg
insl
add
ror
mov
lds
aad
aad
mov
orb
sub
pop
push
push
mov
data16
out
lahf
mov
fstpt
push
or
and
fisubrs
sub
add
test
xchg
push
hlt
stc
nop
jle
out
cld
inc
iret
pop
fwait
sti
cmpl
fnstenv
cltd
add
sbb
pop
lcall
sub
rcrb
adc
dec
jle
xor
jmp
mov
ds
xchg
call
or
ss
addr16
test
push
mov
fisubs
daa
mov
outsl
sub
and
jae
xor
fidivs
jmp
mov
cmc
sbb
jp
and
div
data16
mov
jge
jno
ss
mov
ret
or
sub
imul
mov
or
jmp
mov
mov
or
mov
xchg
test
pop
push
mov
fcomip
cli
repnz
mov
addr16
pop
cltd
inc
inc
stos
jbe
pop
outsl
pop
lods
xor
add
in
mov
fwait
push
cmp
fidivs
sub
pop
popa
into
mov
imul
mov
mov
lods
fmulp
xor
sti
jnp
pop
cmp
daa
lods
ds
test
aad
cmp
fadds
scas
push
pop
jnp
push
insl
sub
repnz
lret
lds
mov
add
es
adc
lea
cld
mov
mov
inc
test
sahf
out
bound
add
inc
xchg
and
in
in
xchg
sti
aad
mov
adcb
pop
in
inc
scas
fidivs
gs
insb
fmul
arpl
pop
cmp
ljmp
or
fsubp
fsubrl
std
mov
push
ss
sbb
sub
xlat
lods
dec
and
inc
aaa
lods
push
aas
pop
push
ljmp
cmc
insl
inc
call
in
jnp
cmp
or
mov
sbb
iret
xlat
scas
repz
test
stos
push
add
sahf
xchg
mov
pushf
cmp
andl
mov
rolb
rcrb
popa
xor
mov
mov
mov
mov
ret
pop
mov
xor
mov
mov
loopne
sub
rcrl
add
int
jb
stos
pop
pop
icebp
push
jbe
mov
pop
push
test
and
push
mov
mov
test
xchg
lcall
cmp
adc
pusha
ss
mov
cmp
dec
mov
jge
test
ds
pop
loop
mov
adc
mov
imul
mov
inc
mov
divl
mov
xchg
in
jne
insb
mul
add
std
push
insl
int
enter
sbb
pop
dec
repnz
repz
mull
or
push
xchg
cmp
das
inc
movsb
xchg
jp
shrb
adc
andb
call
inc
mov
repnz
ficoms
sub
add
fdivrl
shrb
mov
ds
cmp
loop
sub
xor
adc
mov
bnd
push
jne
xchg
call
fstpt
and
mov
cmp
push
sbb
popa
gs
repnz
xlat
push
pusha
add
or
mov
addr16
out
dec
roll
pushf
pusha
sub
stos
push
xchg
popa
jb
sbb
mov
pushf
or
push
icebp
or
cld
lea
mov
push
jne
jo
push
sub
in
xchg
push
test
loopne
cs
call
xchg
mov
lods
jns
out
addr16
enter
push
aas
sub
inc
jge
cmp
cwtl
dec
insl
je
xor
inc
jb
js
popa
dec
xor
inc
cmc
sub
cmp
mov
jle
mov
sahf
push
pop
lahf
adcb
push
in
mov
popf
stos
push
cmc
xchg
mov
sbb
insb
int3
aaa
aam
push
cld
fwait
sub
aas
adc
movsl
pop
sbb
flds
pop
mov
data16
push
cltd
jle
mov
cmp
xchg
cwtl
mov
popa
roll
bound
out
cld
into
filds
out
jp
jl
push
addb
cld
arpl
xchg
leave
inc
xlat
xor
negb
cli
fcomps
data16
pusha
pop
or
and
mov
aaa
xchg
add
sub
test
xlat
pop
mulb
int
mov
pushf
addr16
cli
daa
mov
add
inc
pop
mov
mov
jae
jl
or
cli
or
arpl
mov
sti
outsl
sti
jge
ficomps
jge
dec
rcll
mov
aad
pop
js
xor
out
cmp
mov
push
int
popa
xor
fnstcw
push
arpl
mov
movsb
mov
mov
push
sbb
adc
scas
inc
mov
jnp
pusha
sub
dec
dec
iret
jle
hlt
cwtl
mov
xorb
pop
data16
adc
iret
sub
jnp
cmp
data16
inc
mov
mov
jmp
adc
jmp
insl
mov
xchg
cmpsl
or
cmp
inc
daa
cld
push
mov
pop
movsb
int3
rclb
add
sbb
in
enter
leave
icebp
dec
popa
stos
cwtl
jo
add
imul
out
fbld
sbb
shrb
je
test
loop
or
add
fwait
xchg
mov
jne
sub
shr
push
test
jmp
loopne
aad
cmc
cmp
jo
cmpsl
xchg
aas
test
icebp
mov
aad
scas
inc
fwait
aaa
into
xchg
jl
frstor
mov
aas
mov
pop
mov
sbbb
mov
adc
add
pop
jbe
pop
inc
jnp
les
dec
sub
push
mov
xchg
mov
test
mov
movsb
and
and
mov
movsl
nop
xchg
mov
cmc
push
or
adc
hlt
aas
repnz
aas
pop
popa
mov
mov
xchg
iret
gs
pusha
cmp
or
jns
test
xchg
cs
in
int3
or
sbb
cwtl
sub
fistl
ss
frstor
imul
dec
xor
inc
divl
lret
inc
lods
mov
insl
sub
xchg
mov
sub
loop
aaa
mov
mov
sti
mov
dec
pop
fmull
out
bndstx
shr
cld
icebp
lea
mov
dec
adc
imull
aaa
cld
push
jbe
jg
shrb
popl
ljmp
repnz
repnz
fsubl
or
out
lock
mov
xchg
sub
lret
les
and
out
inc
lret
xor
imul
daa
mov
xchg
out
inc
mov
mov
lds
mov
loopne
xchg
push
cmp
pop
xor
xchg
sbb
stos
frstor
xor
cmpl
cs
jnp
out
xchg
icebp
movsl
cmp
lahf
jbe
fidivs
push
push
insl
movsb
inc
adc
mov
push
cmp
in
sbb
scas
lock
mov
add
dec
in
out
sti
cwtl
sub
add
lods
data16
pop
xchg
jnp
push
cmp
filds
test
mov
fbstp
sbb
leave
call
je
out
mov
pop
and
fwait
out
test
mov
shrb
fistps
js
adc
je
pop
mov
iret
mov
shll
adc
ficoms
adc
add
test
mov
jle
fisubrs
insl
mov
xchg
jl
outsl
sbb
mov
push
lods
inc
cwtl
addr16
int
addl
scas
xchg
test
push
ret
call
dec
out
sub
xchg
nop
jns
dec
xor
inc
and
in
shr
jnp
push
mov
xorb
mov
and
movsb
pop
leave
cmp
popa
scas
or
jmp
gs
notb
adc
sbb
leave
lods
sub
adc
mov
or
xchg
xchg
cmp
sub
out
inc
jl
stc
dec
pusha
into
jno
imul
test
cmc
pop
mov
dec
push
jb
push
jle
and
int
stc
sbb
aam
lahf
stos
cs
jg
dec
sub
scas
jo
mov
mov
aaa
cmpsb
cmp
test
je
fidivl
inc
pop
sub
repz
sbb
rcl
adc
ret
scas
negb
ficoml
dec
ds
mov
mov
sbb
mov
scas
push
xchg
js
aad
stc
test
sub
cmp
jbe
aad
les
sahf
pusha
xorb
imul
xchg
lret
xlat
clc
cwtl
repz
call
leave
int
fdivs
aas
jl
mov
pop
xlat
or
fnsave
addr16
mov
xchg
and
shll
mov
sub
inc
jecxz
je
mov
sub
xchg
popa
sarl
movsb
push
mov
push
and
daa
mov
lds
test
mov
sbb
test
lock
jbe
pop
cmc
sub
sbb
mov
jecxz
sahf
xor
mov
mov
popa
scas
shll
pop
adc
pop
fistpll
push
sti
ffree
rorb
divb
nop
jp
cmp
mov
mov
inc
imul
rorl
pop
rolb
jb
pop
adc
sbb
xor
jno
and
mov
pop
iret
fxch
repnz
ds
jecxz
gs
fistl
in
out
push
fs
mov
mov
mov
and
into
or
dec
insl
sbb
stos
out
cwtl
out
dec
inc
mov
repnz
inc
pushf
addb
adc
push
push
push
pop
std
xchg
sbb
mov
cmp
xchg
sub
fcmovu
lret
into
scas
adc
mov
js
add
xchg
push
xlat
leave
xchg
push
std
mov
xchg
in
push
dec
in
pop
xor
xchg
stos
and
cwtl
inc
adc
dec
sti
add
jmp
sbb
daa
inc
leave
mov
stos
leave
rorb
mov
inc
fwait
test
xlat
aad
push
or
popa
cltd
sbb
call
out
mov
xchg
mov
cmpsb
dec
ficompl
jns
lds
xor
in
adc
inc
push
mov
mov
mov
push
jb
sub
test
das
xchg
sub
mov
push
pushf
bound
or
push
aam
fdivs
pop
mov
jge
mov
in
cs
ss
sbb
xchg
mov
sub
add
scas
and
jmp
mov
dec
outsl
adc
outsb
and
repz
ret
je
or
push
imul
mov
xchg
ret
push
or
and
sub
cmpsb
in
xor
cmpsl
sti
xor
pop
lahf
das
insl
push
les
jb
out
mov
sahf
mov
jnp
add
lods
mov
inc
cltd
ss
popf
xchg
lock
dec
pusha
pop
fnsave
mov
mov
lock
or
mulb
dec
and
lea
add
orb
push
out
and
xor
adc
or
scas
arpl
out
insb
aaa
cmp
int
pusha
mov
leave
xlat
and
aas
sbb
adc
mov
mov
pop
loope
popf
out
xchg
push
loop
mov
push
nop
mov
push
sbb
cmpsl
add
fsubr
mov
cmp
dec
mov
inc
insb
dec
jle
mov
aad
int
push
lock
icebp
xlat
xor
je
push
orb
std
inc
aas
push
sbb
out
mov
in
jb
leave
testb
push
xor
sbb
pop
pushf
jmp
sbb
js
cmp
mov
sbb
cmp
leave
lods
mov
and
das
iret
jno
or
sarb
test
adc
add
mov
rol
fcmovu
jmp
adc
aas
dec
loope,pt
fldt
push
or
sub
xor
test
jno
loop
or
hlt
dec
in
xchg
push
sbb
movsb
fstps
loop
pop
push
push
into
pop
dec
mov
std
popa
xchg
insb
push
add
sub
enter
push
inc
push
xchg
add
push
dec
ror
pusha
pop
in
movsl
push
enter
pop
pop
lea
jmp
mov
push
iret
test
aas
into
push
out
inc
adc
sbb
gs
add
in
icebp
int3
es
push
mov
push
aaa
or
mov
rcll
in
ja
cltd
jle
dec
aaa
mov
cmc
popf
loop
add
mov
mov
aad
cmp
call
mov
xchg
push
fldl
add
fbstp
shl
int3
add
jg
sbb
xor
cmp
test
out
xchg
cmp
jo
inc
lret
sbbb
es
cmp
xor
shrb
fimull
inc
into
sub
or
pop
lock
adc
andb
fcoml
cmp
xchg
lods
leave
in
mov
inc
test
jb
jg
pop
sarl
mov
popf
xor
outsb
sbb
mov
jne
mov
inc
jmp
imul
sub
mov
jge
push
outsl
xor
mov
mov
out
daa
je
rcrl
aaa
test
out
into
sbb
add
pusha
dec
int3
leave
lock
and
pop
cld
ret
popf
sub
push
out
jnp
cmc
movsb
jg
push
movsl
xchg
pop
arpl
mov
push
repnz
repnz
orl
sbb
lea
jg
sub
lds
in
aas
push
mov
ja
fs
mov
add
int3
push
adc
pop
pop
hlt
repz
mov
xlat
pushf
stc
pop
jl
and
popf
xlat
lods
inc
inc
push
mov
pop
imul
jge
mov
popa
repz
sub
cmp
lea
les
insb
iret
mov
scas
aad
cmpsb
stc
test
jbe
jecxz
jl
stos
dec
jecxz
mov
jns
ret
shlb
in
jp
fdivrs
push
xchg
dec
cmp
dec
jge
clc
jg
rorb
mov
loope
dec
in
push
jle
pop
fildll
mov
mov
jmp
lock
cmpsl
rorb
out
lret
mov
call
pusha
xchg
jne
mov
loopne
sub
jecxz
cmc
out
adc
cwtl
mov
jae
sub
stos
inc
nop
sbb
sbb
movsb
mov
jo
jmp
pop
movsb
sbb
mov
iret
shrb
enter
fwait
xor
adc
mov
push
xchg
xchg
inc
or
cltd
iret
jl
shrl
mov
jo
cmp
xchg
mov
cmp
sbb
jns
mov
flds
sub
sub
stc
mov
inc
sbbb
pop
jne
xchg
out
xor
out
and
aad
dec
or
enter
mov
call
or
and
imul
fidivs
or
popa
rcrw
mov
push
push
fdiv
jmp
gs
or
push
dec
xor
bound
lcall
sbb
xor
leave
dec
dec
sub
fstpt
enter
nop
or
and
scas
lea
cmpsb
xchg
cmpsb
xchg
cwtl
cmp
mov
push
and
xchg
cmpsb
jae
aad
loopne
rorl
lods
and
xchg
sbb
mov
insb
inc
lret
iret
dec
popa
shrb
cmpsb
jns
dec
jecxz
outsl
mov
xchg
lret
rorl
inc
mov
js
flds
fdivrp
xor
mov
cld
out
inc
fwait
xor
lods
outsl
or
and
cmp
out
inc
insb
pop
push
out
jp
std
and
sub
sbb
xchg
and
dec
sarb
in
test
or
sbb
jo
mov
push
scas
fadd
jae
stc
adc
mov
int
stos
sub
mov
in
push
jg
lcall
adc
adc
push
popa
mov
xchg
cmp
lcall
lret
mov
loop
pop
pop
sbb
lds
fsubs
pop
imul
pop
aam
shl
outsl
lock
mov
sbb
dec
push
lret
sub
cltd
in
xchg
dec
xchg
mov
jge
inc
adc
lea
lock
sub
ror
sbb
add
add
adc
xchg
std
test
sub
psubw
mov
aam
and
mov
pop
xchg
in
lock
mov
cmp
movsl
insl
xor
xchg
ficomps
xor
mov
insb
jp
int3
stos
dec
or
movntq
push
sbb
popf
jo
push
hlt
xchg
movsb
xor
scas
mov
out
outsl
pop
and
loopne
dec
adc
sbb
aam
pop
jmp
mov
and
cli
data16
push
xchg
xchg
adc
mov
shlb
jge
mov
dec
mov
mov
popa
pop
xlat
adc
add
imul
lret
cmp
and
pop
enter
jecxz
push
les
iret
sub
add
dec
sbb
jp
xchg
sub
cli
addr16
cmp
sub
cmp
test
aam
xor
leave
cld
mov
repz
mov
ja
mov
mov
lea
jo
imul
or
and
and
imul
ja
enter
call
out
mov
js
ret
add
rclb
pop
cltd
js
lcall
inc
pusha
cmovp
iret
jnp
lret
xlat
pusha
movsl
push
in
lcall
insb
sti
divl
movsb
in
sub
gs
cmc
push
pop
mov
je
inc
decl
call
dec
repz
xchg
pop
lea
sub
jmp
fmuls
imull
js
test
push
into
dec
pop
adc
sbb
inc
fsubp
ja
pop
jbe
out
mov
sub
mov
add
insl
jle
mov
dec
pusha
pshufw
cmpsb
sub
imul
test
mov
xor
jnp
in
or
cmp
insb
or
aam
sbb
std
xchg
arpl
jb
cmc
test
push
movsb
jg
mov
and
insl
hlt
jmp
movsl
sti
add
jne
adc
inc
or
mov
in
cmp
out
jg
inc
lret
add
loope
mov
pop
push
rorl
fistps
das
xchg
and
lds
insb
movsb
stos
sbb
jnp
mov
or
sub
xchg
xchg
xor
jno
add
das
dec
je
icebp
and
notb
add
add
popa
aam
cmp
push
dec
push
pop
mov
ret
shlb
xlat
jecxz
lds
shll
mov
push
addr16
pop
mov
outsb
add
cmp
cmpsb
loope
lods
or
aad
mov
mov
ss
inc
mov
pop
jo
lahf
push
sub
or
lods
pop
in
cs
ja
pop
mov
add
fstpt
js
lret
push
inc
push
mov
movsb
ljmp
cmc
push
xchg
add
pmaxub
lock
add
cmc
cltd
jge
std
push
cmpl
xchg
push
dec
mov
cmpb
aad
fisubrs
inc
popf
pop
fcmove
mov
test
scas
bound
sbb
popf
cmp
sbb
cmp
shll
cmc
sbb
mov
jg
cmc
adc
mov
mov
mov
lret
mov
xlat
adc
cmp
js
add
popa
or
scas
ljmp
aad
or
test
js
jge
jecxz
jp
xchg
cmpsl
sbb
mov
fisubl
les
push
mov
loopne
jp
sbb
dec
inc
lods
pop
dec
test
pop
daa
out
push
loop
adc
int3
std
clc
xchg
andb
lds
pop
add
and
ds
and
pop
in
mov
jecxz
mov
adc
enter
and
push
inc
push
adc
cs
xchg
mov
jp
push
pop
and
dec
cli
jo
xor
sub
inc
push
cld
pusha
pop
out
sub
repz
in
les
in
and
into
mov
jle
aas
js
pop
add
fisubrs
out
fstl
imul
xchg
ss
adc
push
rol
cwtl
pop
fucomp
xchg
rolb
pop
pop
inc
loopne
lock
ret
pop
xchg
ja
dec
fcmove
rcl
cli
insl
inc
jae
subl
dec
cwtl
gs
adc
cltd
inc
movsb
and
pusha
bound
push
or
jle
dec
add
sbb
int
xor
gs
arpl
lock
loope
insb
xchg
imul
and
xchg
lods
dec
inc
test
shrb
xor
push
enter
jno
emms
mov
xlat
pop
je
sub
jle
sbb
mov
mov
mov
sub
pop
cmc
add
dec
or
movsb
pop
mov
pop
mov
int
ret
sub
addr16
push
push
ret
dec
add
cli
das
mov
add
sbb
int
pop
jnp
pushf
sub
mov
cltd
xor
xchg
imul
es
cmpsb
pushf
and
cwtl
aaa
sub
ja
cmp
stc
push
cmp
stos
stos
pushf
scas
das
sbb
daa
sub
js
subl
add
mov
test
lock
jns
push
cld
bound
loope
push
or
inc
cmc
add
sarb
flds
mov
pop
and
mov
push
lods
jle
mov
push
jne
xchg
xor
call
test
jge
divb
adc
xrelease
mov
adc
roll
popa
mov
cltd
scas
or
cmp
mov
mov
push
xchg
inc
and
loope
xor
inc
fwait
in
jae
and
adc
and
jne
sbb
js
popf
mov
das
mov
jle
fisubrl
sub
insb
pop
rcll
adc
adc
mov
leave
dec
add
lock
sbb
mov
ljmp
out
test
push
add
ljmp
mov
loope
inc
jmp
inc
lret
in
repnz
mov
je
jo
enter
jne
mov
and
pop
fisubrl
mov
jb
stos
gs
fstpl
push
jg
dec
mov
sbb
clc
das
in
fwait
lcall
push
aad
dec
add
gs
sub
stos
insb
sbb
outsb
outsl
add
fmuls
shll
rclb
dec
jp
push
pushf
dec
in
clc
dec
xchg
popf
stc
rep
inc
pushf
stos
or
lret
and
pop
pop
mov
jbe
test
or
into
icebp
mull
pop
shrl
aad
pop
push
mov
adc
jns
or
cmpsl
aad
mov
arpl
cs
ds
ljmp
sub
mov
fwait
add
mov
jbe
mov
int3
jno
popa
or
shlb
add
insb
aam
jae
es
mov
fcmovu
je
dec
jp
ljmp
dec
push
mov
fsubrs
jb
or
mov
ret
sub
mov
adc
gs
fwait
je
xchg
adc
inc
adc
mov
adc
inc
movsb
and
int3
inc
dec
out
lea
or
cltd
mov
fucomp
push
movsb
push
out
or
mov
jne
jae
xor
push
mov
pop
push
add
sub
mov
mov
xor
fldl
push
testb
jecxz
mov
or
hlt
lret
fldt
jle
lret
orb
in
popf
mov
repnz
push
out
scas
pusha
jp
pop
jp
or
inc
fidivrs
in
cmc
cltd
movsb
sahf
roll
incl
iret
jecxz
sub
fbld
into
pusha
sub
int
mov
es
push
pop
ret
cmpb
rcll
mov
jecxz
negl
icebp
shrb
pop
inc
jle
push
push
sub
shlb
lret
add
jge
add
jle
jns
insl
sahf
adc
insb
addr16
mov
mov
mov
sti
adc
push
outsl
sbb
fcomi
shr
fidivl
xrelease
scas
pop
dec
jns
mov
xchg
test
shlb
pop
inc
mov
push
push
jo
lcall
loop
cltd
lods
add
imul
xchg
lret
int3
jle
inc
pop
jge
adc
sbb
push
and
xor
in
popf
iret
ss
pushl
sub
mov
mov
dec
mov
jge
ret
test
mov
pushl
rclb
push
inc
xor
jno
imul
inc
pop
add
pop
cmpsl
pop
xor
pop
mov
stos
mov
add
sbb
out
sbb
fstps
clc
mov
dec
out
adc
push
lret
out
loopne
xchg
xchg
adc
mov
pop
push
add
loop
dec
in
mov
fdivl
sub
pop
fsubrl
out
lods
and
sub
je
jl
out
lock
rclb
test
mov
mov
in
movsb
adcb
movb
mov
mov
outsl
bound
sbb
cli
lret
iret
jle
xor
push
push
ret
std
andl
popf
jo
rol
subl
pusha
mov
sub
xchg
fidivrl
or
or
cmpb
pop
hlt
icebp
mov
jl
push
ret
and
sbb
arpl
aaa
mov
dec
inc
inc
and
cmpsb
js
sbb
jae
mov
mov
loope
in
test
adc
add
mov
iret
and
xor
movsb
and
sub
in
xorl
mov
daa
popl
aam
ret
and
cmp
std
push
popf
daa
jb
pop
sbb
popf
mov
pop
lds
lret
fwait
mov
test
lret
fwait
mov
fnsave
inc
cli
and
jb
mov
mov
dec
cmpsl
cwtl
or
xor
andl
xchg
and
iret
sahf
sub
fistpll
pusha
stos
out
mov
nop
cmp
sti
xchg
fnsave
outsb
or
cmp
pushf
ds
incl
jne
sub
xchg
cmp
popf
lods
xchg
or
pop
hlt
cltd
lret
xchg
push
adc
aam
jns
pop
push
jae
mov
push
jg
adc
and
xchg
popa
icebp
cmp
outsb
stos
fcomip
std
push
push
das
or
and
mov
js
das
pop
lods
push
xor
and
inc
fnsave
push
dec
pop
jp
sub
test
inc
mov
data16
or
lcall
fstpl
jne
dec
add
pop
rcrl
mov
out
pop
fcoms
jle
pop
std
sbb
xchg
bound
into
lcall
int3
jle
lods
pop
sub
mov
int
push
mov
pushf
and
movsl
cmp
movb
femms
shrl
pop
adc
or
in
ds
and
xchg
sub
testl
xchg
popa
adc
rolb
stos
hlt
cmp
pop
xchg
cmp
lods
mov
jno
xchg
sub
jg
das
ss
mov
jne
inc
adc
or
push
outsl
out
clc
or
sbb
es
popf
push
and
inc
and
leave
fcomps
and
or
out
in
pop
lods
fs
dec
and
sub
adc
or
mov
out
dec
or
lret
rorb
rcrb
daa
in
out
push
pop
dec
xor
push
test
push
out
jg
add
repz
into
and
push
pop
jb
int
mov
mov
inc
les
imul
out
push
test
in
mov
gs
dec
cli
push
xor
or
das
cmp
pop
aam
jl
adc
dec
pop
andl
and
test
leave
mov
xchg
push
rcl
jge
movb
cmpsb
cld
mov
xchg
jno
pop
les
cmc
mov
or
getsec
testl
or
push
mov
gs
lret
pop
sbb
movsl
add
jae
jbe
icebp
jno
call
and
mov
adc
ss
jle
push
divl
cltd
or
pop
sub
and
lahf
aad
pop
rcl
xor
add
jnp
sub
jne
mov
neg
sub
or
push
mov
push
dec
sub
jnp
shll
mov
test
pushf
fnstcw
pop
movsl
shl
test
in
not
ljmp
push
xchg
mov
mov
jbe
ljmp
movsb
pop
mov
inc
xchg
outsl
daa
mov
pusha
js
rcrb
push
pushf
shrl
sbb
mov
out
insb
mov
xchg
mov
leave
test
sbb
or
cmp
and
xchg
adc
jae
addr16
fpatan
adc
repz
rcrl
data16
jl
or
dec
pop
imul
push
iret
pop
in
push
jns
es
pop
adc
xor
cli
xchg
jb
nop
xchg
pop
scas
les
pop
notb
sahf
sldt
jle
xor
jnp
xchg
push
ljmp
lds
fidivs
fidivrs
lcall
cli
popf
fwait
adc
ljmp
jne
cmpsl
ret
fmul
rcrb
sub
adc
mov
aam
in
and
xchg
mov
hlt
daa
xorb
out
sahf
sub
into
and
dec
dec
cmp
or
pop
cmp
mov
shrb
cmp
repnz
jle
mov
lds
es
jg
inc
adc
jmp
addl
mov
inc
mov
sti
enter
lods
mov
repz
add
testl
popa
imul
aaa
pop
jl
pop
das
and
stos
jno
jnp
loop
cltd
roll
sti
push
inc
dec
push
addr16
pushf
test
sub
adc
mov
mov
sub
xchg
sti
push
dec
and
sub
in
adc
pop
je
xlat
lock
scas
out
fwait
pop
mov
push
cmp
cmpsl
ror
scas
inc
sti
lcall
jle
popf
xor
cmp
lea
mov
push
sbb
mov
sub
fcoml
lret
xchg
jp
aam
pop
movsb
jmp
push
cmpsl
pushf
or
scas
std
cmp
cltd
nop
lahf
jbe
add
and
and
iret
mov
adc
adc
iret
push
ss
push
adc
loopne
cmc
mov
jecxz,pn
dec
lcall
lea
push
cli
push
ss
sbb
enter
clc
fnstsw
and
push
push
pop
stos
in
jp
xchg
pop
or
cmp
ljmp
jmp
fbstp
pop
mov
pop
rorl
movsl
cli
adc
jp
cmpsb
gs
xchg
lret
scas
out
adc
pop
andl
hlt
jne
pop
push
xchg
push
inc
or
lcall
xchg
sti
dec
mov
xchg
mov
imulb
je
xor
xchg
add
lahf
scas
adc
xchg
out
sbb
into
loop
les
mov
adc
movb
inc
add
shlb
addr16
fisubs
iret
pop
cmp
scas
pop
loope
inc
push
fldl
mov
pop
movsb
test
lock
mov
outsb
fs
or
jp
mov
dec
outsb
arpl
add
pop
xor
dec
sbb
cmp
add
inc
jge
dec
data16
popa
pop
inc
outsb
test
mov
sbbl
loopne
xchg
push
daa
cltd
pop
cmpsb
jno
dec
add
out
int
fdivrs
push
pushf
jp
mov
test
jbe
pop
fdivl
out
rcl
fildll
mov
mov
push
popf
add
and
pop
xchg
xchg
sub
idivb
cmp
sarl
pop
rcll
xchg
shl
loop
stos
stos
dec
cmp
loope
jge
test
add
push
xchg
das
cmp
jl
fwait
lcall
fldenv
in
pop
sarb
xlat
pop
pop
out
jp
jns
sbb
std
inc
insl
es
sbb
or
mov
shl
leave
mov
mov
rclb
fildl
movsb
addl
jbe
cmp
xchg
les
insl
xorb
xlat
daa
jno
jns
shrb
sti
les
jns
ret
fwait
push
pop
icebp
movsb
pop
enter
fldcw
cmpsl
pop
jne
dec
push
sub
out
cmp
mov
in
dec
pop
out
out
lcall
jns
sub
mov
jne
mov
sti
and
xchg
outsb
idivl
push
and
fnsave
mov
out
sti
push
push
in
imul
sub
mov
decb
stos
mov
push
adc
and
jmp
loopne
push
popf
adc
or
call
nop
mov
popa
or
movsb
mov
push
mov
addl
pop
xchg
push
inc
test
out
or
inc
lock
cmp
sbbl
jnp
xor
sbb
iret
or
jmp
push
pusha
inc
xchg
gs
repnz
mov
jns
sbb
sarl
lea
sub
sbbb
mov
sbb
or
pop
mov
sbb
les
scas
test
mov
aaa
fs
lret
out
add
add
adc
fwait
mov
xor
inc
and
jbe
out
dec
jnp
and
push
mov
imul
inc
xchg
sbb
mov
stc
inc
cltd
xlat
add
mov
fwait
mov
pop
pusha
jl
push
mov
iret
mov
add
inc
fimull
movsl
arpl
rol
jmp
xor
ret
fidivs
or
mov
dec
pop
add
add
or
imul
mov
lret
push
hlt
mov
test
inc
inc
adc
in
cmpsl
dec
out
add
dec
pop
or
mov
dec
in
and
fisubl
sub
fcmovbe
in
add
inc
popa
mov
add
mov
outsl
jg
sub
pop
sahf
xor
fs
xchg
dec
xchg
test
int3
pop
dec
lret
push
jbe
into
cmpsl
jbe
sbb
adc
daa
mov
dec
xor
in
jl
test
add
leave
pop
stc
cld
sbb
jno
in
push
push
sub
adc
inc
mov
addl
xchg
xor
jnp
push
ror
xor
push
add
xchg
aaa
ja
or
sbb
adc
add
mov
insl
add
adc
mov
jbe
fstl
mov
insb
xchg
inc
fcmovnb
mov
stc
pushf
call
xchg
sub
xchg
movsb
dec
sbb
sti
dec
rcrl
jl
sbb
cmp
dec
mov
mov
jle
imul
cmp
sbb
mov
test
add
push
insl
or
cmpsl
hlt
andl
fs
and
pop
arpl
mov
pop
xchg
mov
inc
xchg
dec
add
cmc
mov
lods
mov
mov
xchg
inc
pushf
sbb
jae
or
sahf
aas
and
push
clc
adc
aaa
sub
and
addr16
push
or
xchg
testb
xor
dec
enter
fwait
loope
or
mov
dec
adc
and
stos
pop
lahf
pop
addr16
stc
dec
adc
jnp
xchg
repnz
inc
fcomi
leave
cmp
mov
dec
jecxz
mov
jmp
insb
jmp
mov
adc
mov
insb
lret
test
sarb
xchg
les
pushf
fldl2t
imul
or
outsl
stos
or
mov
fsubrp
mov
in
cmp
jne
aad
pop
inc
cld
clc
xchg
loopne
xchg
lods
and
xor
cwtl
pop
inc
hlt
scas
std
inc
test
out
ret
jp
out
dec
add
push
cmc
adc
and
mov
push
pop
mov
push
inc
iret
inc
sarb
andl
or
xor
xchg
dec
push
xchg
mov
xor
push
test
inc
inc
pop
inc
push
scas
lock
push
and
fdivl
imul
in
test
stos
mov
or
pop
add
jae
pushf
inc
call
out
pushf
cmc
jle
popf
xor
mov
mov
mov
push
mov
lock
dec
pop
or
adc
inc
dec
xchg
cmpl
fcomps
leave
xor
dec
add
std
mov
loope
shrb
cli
jne
cmp
cs
and
jne
push
cs
xchg
xor
sbb
movsl
pop
and
arpl
fsubrp
stc
leave
data16
aam
sub
push
push
mov
xchg
mov
xlat
xchg
arpl
fldl2e
cmpl
or
cmc
stos
ret
pop
pop
xchg
inc
outsl
dec
jle
js
in
rorb
mov
nop
push
int3
outsl
sub
sbb
arpl
pop
mov
sbb
mov
pop
ffreep
sbb
xor
ror
jecxz
rcrl
shrl
mov
jecxz
cmp
adc
mov
or
cmpsl
push
in
xor
cmp
pop
fdivs
enter
iret
push
fnstenv
xor
push
test
sbb
push
out
sbb
adc
aad
dec
testl
rcrl
dec
pop
mov
sbb
mov
cli
mov
jp
insb
sahf
mov
lahf
mov
out
out
mov
mov
scas
push
and
lret
mov
mov
mov
sahf
insl
cwtl
jnp
mov
out
arpl
dec
push
in
jae
mov
mov
stos
fcomps
mov
push
inc
ljmp
or
or
out
es
mov
or
push
xor
mov
xor
xor
stos
fadds
cmp
movsb
xchg
filds
aas
or
jg
add
pushf
cmc
test
mov
push
js
add
adcl
mov
mov
and
push
fs
sub
movsl
mov
push
xlat
jnp
movsl
lods
mov
cmp
popa
push
repnz
in
pop
sti
dec
int
adc
fs
sub
jae
cmpsb
ds
sbb
sbb
lods
xchg
mov
es
test
mov
adc
push
push
mov
pop
push
mov
pop
xchg
add
in
jo
mov
xchg
adcl
dec
cmp
stos
cmc
pop
test
push
shll
enter
xchg
xor
push
push
inc
test
leave
xchg
push
iret
and
outsl
clc
fbld
jp
rcr
sub
loop
cmp
xchg
sub
jl
cmc
sub
xchg
aaa
inc
or
mov
orb
dec
in
and
jb
sbb
push
repz
mov
cmc
test
mov
outsb
orb
pusha
fisubrl
mov
and
or
mov
loopne
icebp
ds
mov
push
stc
pop
cmp
fst
ret
add
aam
clc
stos
pushf
or
lods
ret
pop
filds
pop
mov
dec
or
sub
xchg
dec
daa
mov
call
lock
insl
mov
xchg
lock
out
pushf
xchg
inc
xor
mov
cmp
lahf
jbe
inc
mov
mov
push
imul
cltd
pop
outsb
push
cltd
dec
movsl
movsb
cmp
and
ficoms
jecxz
iret
inc
sahf
xor
movsb
and
mov
sbb
mov
lahf
pop
add
repz
lods
outsb
mov
sbb
aas
adc
pop
xchg
sub
jns
shrb
ret
and
mov
int3
mov
mov
fnstenv
fwait
cmpsb
out
cmpl
mov
lret
dec
addr16
imul
mov
push
adc
cld
gs
in
and
xor
adc
sub
mov
scas
xchg
pop
loop
pusha
mov
pop
dec
jb
lret
fbstp
mov
pop
mov
push
dec
stos
mov
stos
pushf
sbbb
ficoml
or
rolb
xor
das
push
popa
xor
lahf
fwait
cmpsl
imul
inc
imul
es
rcr
mov
mov
push
outsb
testb
mov
xchg
lods
sti
pop
and
push
push
cmp
fistl
fimuls
mov
add
std
inc
or
pop
fdivr
jb
xchg
out
jg
cwtl
mov
insl
fcoms
test
or
ds
xor
pop
fwait
jnp
push
pop
mov
mov
fsubp
std
movzwl
push
leave
pushf
iret
or
rcrb
mov
inc
sub
xor
jecxz
jb
mov
testl
mov
arpl
les
sub
jae
sbbb
push
mov
inc
push
sbb
fisubrs
inc
mov
ljmp
and
push
mov
jbe
adc
int3
or
lret
mov
sbb
repnz
cmp
pop
popf
cltd
add
insl
popf
test
sbb
aas
sbb
aad
or
clc
ficoml
adc
inc
mov
fstl
popf
xor
mov
add
in
loop
mov
fistps
mov
sbb
push
mov
mov
mov
sarb
fnsave
imul
pop
cld
xchg
dec
sbb
xchg
mov
sub
addr16
sbb
inc
flds
test
xchg
mov
or
push
cmp
out
cli
test
mov
sub
call
dec
xchg
jne
mov
fdivrs
xchg
pop
clc
das
push
stos
add
nop
daa
mov
mov
ret
xlat
pop
jl
sbb
xor
sbbl
sarl
call
push
icebp
pop
imul
sbb
js
sub
mov
jnp
cmp
lret
pop
dec
aad
cli
mov
lret
call
int
mov
lret
push
popf
ja
jge
inc
push
inc
nop
mov
sbb
sub
pop
sarb
arpl
pop
fldcw
mov
rol
pop
xor
inc
mov
stc
mov
fiaddl
mov
jae
sub
xor
cmpsb
inc
push
dec
pusha
xchg
loopne
xchg
test
xchg
ljmp
cmp
call
ret
pop
bound
or
cmp
sbb
rcrb
test
test
pop
test
jp
daa
int
pop
call
cmp
movsb
lods
repz
push
inc
add
sahf
cltd
test
mov
push
add
lds
mov
pop
pop
or
push
dec
xchg
rcrb
ds
xor
scas
inc
in
mov
pushf
lock
ljmp
cmp
jns
adc
dec
inc
pop
lahf
or
xchg
mov
outsl
xchg
cs
cld
pop
adc
mov
pop
mov
sbb
shll
jl
dec
gs
inc
add
jne
sub
inc
push
sub
cli
add
adc
and
sbb
ds
xor
push
test
dec
daa
shlb
cmpsb
sbb
pop
into
pop
fdivrp
jge
aad
int
stos
mov
lahf
mov
cmc
imull
cli
cvtps2pd
je
dec
or
movsb
push
mov
sub
adc
inc
jecxz
pop
push
loope
lock
mov
sub
pop
aad
xchg
mov
fidivs
push
fdivl
lcall
inc
pop
pusha
ret
inc
scas
and
sub
lcall
mov
jp
loopne
cmpsb
lea
add
xchg
clc
dec
adc
loop
sahf
xor
push
add
outsb
cmpsl
loop
out
dec
cmc
mov
jmp
jnp
out
push
popf
pop
stos
xchg
popa
mov
mov
cmp
pop
mov
add
jno,pt
arpl
adcb
test
shrl
sbb
daa
mov
jmp
xchg
xchg
and
lahf
push
jo
cmp
mov
fidivs
cmp
xchg
push
or
mov
outsb
mov
push
stos
pop
xor
int3
adc
jp
adc
sub
adc
xchg
sub
pop
push
xchg
sub
mov
mov
roll
shlb
lret
and
mov
mov
repnz
sub
or
mov
adc
add
out
cltd
das
cmp
fdivs
shll
sbb
aaa
ja
test
inc
call
shlb
call
popf
xor
mov
fstpl
lret
mov
push
dec
add
fnstsw
ja
fs
mov
cmp
jnp
dec
inc
and
xor
push
in
in
cmp
or
jae
fsubrl
mov
dec
sbb
ss
adc
push
pop
lahf
xor
add
mov
cmp
rolb
das
mov
movsl
pop
cmp
xchg
mov
mov
rol
mov
jge
mov
outsb
ss
add
mov
sub
push
mov
mov
pop
lock
movsl
cmp
ljmp
pop
lcall
loopne
mov
insl
nop
dec
loop
lds
cmpsb
mov
jnp
stos
lea
push
mov
pop
add
push
out
lods
imul
add
sub
stos
jp
cmp
fidivrl
dec
cs
xor
mov
xchg
cs
adc
xchg
xor
iret
pop
out
js
and
xor
enter
jmp
sbb
sbb
cmpsl
fistpl
fidivl
std
or
das
aad
xchg
pop
pop
cmpsl
jae
movsb
pop
jnp
outsb
shr
lcall
xchg
dec
sub
pop
fcomps
dec
dec
sub
cltd
and
sti
pushf
inc
fcmove
nop
gs
jnp
or
mov
pop
faddp
push
sbb
stos
movb
enter
movsb
or
sbb
xor
push
call
stos
or
stc
test
mov
mov
fs
daa
mov
aaa
or
or
dec
in
repz
ja,pt
das
add
mov
or
bound
addl
out
scas
popf
call
lcall
loop
in
je
shll
dec
loop
pop
orb
fs
xchg
shl
subb
and
mov
jge
cmp
pop
ret
mov
mov
je
mov
ror
pminsw
mov
adc
jle
aad
lcall
push
imul
or
sub
sahf
addb
ja
es
and
xchg
push
adcb
icebp
icebp
push
insb
sti
push
inc
sti
fwait
in
int
lcall
cwtl
jnp
sub
out
mov
add
daa
lahf
data16
dec
pop
pop
xor
xor
stos
ret
rol
jo
mov
pusha
jne
add
adc
ret
mov
xchg
mov
jle
xor
and
dec
pop
mov
xchg
add
jno
push
cmp
mov
in
mov
cli
and
push
in
loope
jb
ficoml
xchg
push
shlb
pushf
arpl
rcrl
fwait
dec
data16
jl
or
ss
je
adc
daa
mov
xchg
clc
jns
mov
xor
push
push
dec
sub
jns
cmpsl
push
jge
xchg
or
pusha
lock
cmp
mov
divl
aam
add
xchg
cmc
movsl
push
jne
rcll
pushf
inc
in
inc
pop
leave
push
in
in
fidivl
lock
fistl
ret
inc
in
les
dec
sub
dec
mov
addb
xchg
pop
jno
les
push
xchg
xor
movsb
push
das
jmp
sbb
sbb
sahf
dec
adc
ret
arpl
mov
lret
sbb
test
shl
inc
push
xor
adc
in
mov
in
mov
xor
or
ds
repnz
push
outsl
dec
scas
aad
sbbl
adc
rcrl
mov
movsb
inc
pop
lahf
orl
scas
adc
cwtl
arpl
inc
in
andb
jns
mov
mov
in
fidivrl
push
dec
popa
xchg
inc
fiadds
cmpsl
mov
stc
push
mov
cmovg
stc
pslld
aad
mov
jmp
jl
jmp
sub
lds
add
data16
inc
rcl
inc
in
les
lret
push
loop
idivb
push
pop
cmpsb
xchg
into
daa
push
or
mov
mov
fsubs
mov
out
xchg
sub
sub
xchg
mov
pop
sbb
subl
jecxz
ja
push
xor
fisttps
addr16
mov
aas
jno
ss
jge
shlb
pop
pop
or
stc
push
mov
pushf
cmpsb
adc
icebp
mov
xchg
cmpsb
push
mov
sub
or
jns
das
mov
ret
jmp
pushf
cli
push
push
fidivrl
test
add
xor
sub
push
inc
push
mov
pop
xor
dec
jg,pt
popl
and
icebp
pop
xchg
mov
mov
xor
andb
pop
insl
aaa
scas
call
adc
popf
icebp
inc
scas
test
loopne
sarl
xchg
xchg
shlb
dec
iret
mov
push
add
hlt
xchg
sarb
cmpsb
pushf
pop
ds
xchg
imul
nop
sub
pop
mov
push
jg,pt
inc
insl
push
and
cwtl
das
adc
mov
jge
jb
or
adc
mov
mov
sbb
fs
aaa
xchg
add
data16
inc
stos
push
int
cld
jle
xor
mov
pop
ja
mov
mov
xor
int3
and
stos
push
fiadds
pop
sysret
fnsave
xchg
lods
cmp
sub
lcall
dec
and
xchg
xchg
inc
into
enter
repnz
dec
sahf
movsl
mov
out
cli
or
mov
addb
je
jmp
aam
mov
add
or
shr
sub
cmc
sbb
xchg
cmpsl
mov
insb
mov
stos
mov
xchg
mov
ja
mov
sbb
out
lcall
ss
dec
adc
jge
xlat
or
pop
and
jnp
cmp
mov
test
sub
out
clc
sahf
jp
in
leave
jg
in
cmp
pop
movsb
aaa
mov
xchg
sbb
out
cmpsl
mov
pop
sarl
movsl
adc
and
into
dec
mov
dec
sbb
xchg
mov
xor
shr
mov
aad
dec
imul
add
vmwrite
cmp
pop
mov
xchg
adc
sahf
xor
pop
gs
push
stos
fadds
lret
adc
jns
mov
cmp
aad
cltd
test
das
daa
cmpsb
and
cmp
arpl
xlat
ljmp
xchg
fstps
dec
repnz
mov
cmp
mov
dec
jno
xchg
dec
sub
icebp
aaa
sbb
addr16
xchg
test
cmpsb
outsb
fnsave
std
cmp
and
js
adc
and
ds
int3
push
int3
pop
inc
pop
push
mov
jno
fisttpl
push
adc
xchg
sbb
mov
arpl
insb
fld1
je
sbb
xor
pop
xchg
sub
dec
sub
call
sub
out
cmp
and
jo
test
mov
add
inc
mov
mov
loope
ret
out
scas
sahf
clc
mov
lahf
push
int
ret
push
addr16
and
ss
daa
out
dec
inc
xor
inc
fwait
test
in
in
test
jmp
into
sbb
mov
xor
shlb
cmp
sub
lods
mov
add
push
aas
lods
mov
xlat
pcmpgtd
lcall
xchg
inc
mov
sahf
dec
pop
mov
mov
ret
subb
xchg
ret
repz
jmp
adc
aaa
iret
arpl
xlat
pop
dec
jmp
fsts
insb
ret
inc
or
fcmovb
inc
sbb
test
mov
jp
fwait
or
push
cmpsl
sub
mov
jae
fdivrl
push
mov
mov
adc
cmp
sahf
push
leave
cmc
imul
stos
and
push
outsb
leave
xchg
punpckhdq
rol
sbb
adc
jae
adcl
or
ror
bound
mov
sbb
push
add
aas
xchg
inc
in
cmp
pop
popf
insl
andb
adc
data16
sbb
pop
xor
xor
stos
jne
xchg
dec
mov
dec
fcmovne
mov
sub
insl
push
add
mov
add
cli
sbb
movsb
sub
cmp
je
add
into
std
gs
mov
push
and
cmp
jb
test
xorl
popf
inc
add
mov
daa
lods
inc
paddw
sarb
leave
pusha
dec
lcall
pop
call
xchg
mov
adc
sti
dec
jecxz
adc
ja
push
addr16
js
lds
sub
test
imul
mov
mov
or
push
fimull
xchg
inc
lret
sub
pop
int
sbb
lcall
and
comiss
dec
mov
jmp
testl
cmp
pop
xchg
dec
or
xor
jns
and
inc
movsb
mov
lods
negl
push
ja
aam
xchg
sbb
ret
inc
cmpl
pop
pop
dec
out
push
jecxz
in
mov
shl
mov
push
mov
xor
pop
fidivs
cltd
movsb
lahf
dec
mov
repz
push
pop
mov
shr
repnz
jle
mov
movsl
add
cmpb
ja
push
jmp
push
sbb
ret
sbb
jmp
jl
xorl
je
cli
push
leave
jge
or
mov
lret
andb
xor
repz
inc
movsl
adc
or
bound
jmp
inc
fstl
les
xchg
fs
cli
das
ret
orb
into
pop
push
call
xor
xor
das
jecxz
lret
loope
mov
cmpsb
ljmp
jp
push
push
out
jp
add
mov
ss
inc
and
ss
dec
xlat
rcrb
imul
mov
int
mov
mov
or
pop
mov
fsubr
das
sbb
jo
mov
sbbb
push
or
rcll
pushf
xchg
aas
push
mov
roll
mov
mov
xchg
jle
xchg
daa
nop
pop
lds
inc
insl
sbb
pop
or
data16
and
add
je
dec
and
cmp
fcomip
cmp
call
cmc
lea
push
fistl
ja
adc
fisttpl
add
push
in
and
fisttpl
xor
adc
addb
fwait
push
test
std
xchg
js
and
cld
cltd
sbb
inc
sbb
dec
push
jns
mov
insl
lret
and
or
sub
jle
sbbl
imul
outsl
divl
xchg
enter
add
xchg
xchg
mov
mov
push
pop
pop
dec
xchg
and
and
adc
push
sub
dec
dec
mov
sti
cmp
jnp
pop
push
dec
xchg
rcrl
aas
jmp
popa
ss
inc
aaa
ds
jbe
gs
xchg
push
stc
das
stos
daa
and
adc
not
inc
jle
dec
ss
pop
out
jno
mov
sbb
les
idiv
pop
mov
inc
pusha
xor
push
imul
and
dec
push
insb
mov
shll
xchg
mov
mov
fdivl
sbb
scas
ss
add
push
or
mov
jno
pop
cmp
mov
push
sub
push
popa
jns
adc
mov
outsb
add
xor
and
addr16
jae
and
in
fildl
out
xor
mov
jne
push
jmp
add
mov
xlat
mov
sbb
add
popa
jnp
inc
jbe
xchg
addl
test
scas
inc
push
sub
sub
pop
sarb
cmpsl
sub
cwtl
neg
lret
xorb
mov
cmp
jbe
or
ret
sub
mov
add
arpl
xchg
hlt
mov
dec
adc
pop
add
mov
daa
lcall
or
and
push
shrb
jecxz
jmp
dec
sti
sbb
loope
dec
inc
fstpt
int
mov
adc
push
and
mov
inc
repnz
adc
cmp
outsl
cs
fisttpll
dec
push
test
movsb
call
adc
cmp
std
jo
push
sarl
cs
mov
sub
push
inc
out
rcrl
lds
stc
insb
sbb
les
subb
sbb
xorl
enter
push
xlat
outsl
jnp
push
stos
inc
cmp
dec
dec
aaa
or
jno
xchg
nop
cmp
push
and
add
xlat
imul
dec
out
inc
lea
int
je
cmp
lret
and
push
clc
aas
fldenv
push
pop
push
sbb
push
out
fs
popa
sbb
out
cmpsb
mov
cs
test
inc
jle
jae
fisubl
insb
daa
fsubrs
mov
addr16
mov
ljmp
dec
jecxz
pop
in
cwtl
outsl
repz
or
testb
pop
adc
or
mov
pop
inc
push
nopl
out
int
and
jl
cmp
inc
daa
pop
sbb
std
xor
adc
or
test
cltd
jae
or
imul
mov
lcall
sub
test
decb
push
cmp
lret
sbb
sub
mov
pop
popa
and
test
xor
lea
ret
xchg
dec
out
popa
loope
in
pusha
push
nop
mov
pop
adc
lods
jl
mov
out
mov
cmp
out
sub
jbe
cs
xchg
out
das
ds
push
lods
movsb
jae
mov
scas
adc
add
mov
mov
shrb
jae
add
pushf
mov
mov
adcb
and
add
in
push
xchg
test
push
push
mov
cmp
adc
movsl
mov
test
mov
mov
mov
bound
aas
push
jecxz
push
adc
mov
out
mov
mov
dec
mov
faddl
cmpb
push
aad
sti
lret
fnsave
sbb
or
imul
repnz
xor
add
mov
test
stos
adc
jb
mov
es
adc
sti
test
dec
or
sbb
mov
or
insb
addr16
loop
inc
cmp
pop
loope
dec
xchg
push
in
jmp
andl
stos
fs
mov
aas
cmp
mov
mov
mov
cwtl
in
aas
loop
insl
push
popa
incb
jo
outsl
bound
or
rorl
push
mov
push
icebp
push
push
int
out
flds
mov
jae
movsl
pop
sub
pop
pop
ja
add
lcall
jno
xchg
xor
inc
cmp
arpl
cmpsb
stc
test
and
push
dec
fs
sub
adc
mov
sarb
gs
or
xchg
push
cmp
in
ja
pop
lcall
negl
dec
push
cwtl
lock
xchg
arpl
and
push
pop
stc
cmp
pop
dec
shlb
pop
push
jno
test
mov
sbb
fdivrs
fwait
movsl
mov
sub
mov
notb
cmp
xor
mov
mov
or
je
sbb
cmpsl
adc
add
cmp
rorb
and
dec
mov
lret
lcall
lea
add
cmp
or
jge
imul
imul
sub
movl
rcr
dec
push
outsl
mov
mov
xchg
xchg
add
cmpsl
xorl
test
pop
sub
adc
fistpll
and
mov
das
add
cmp
xchg
popf
lods
aas
adc
pusha
xor
cmp
aad
and
sarl
xchg
fnsave
jnp
sub
and
popf
daa
push
or
pop
jp
fwait
scas
mov
push
cwtl
imul
sub
push
push
arpl
sub
push
data16
cwtl
daa
fdivrp
movsl
rclb
pop
push
in
into
xchg
fsts
cmp
imul
add
xchg
scas
in
cmpsb
lcall
jns
sub
dec
shll
dec
xchg
sub
xchg
dec
test
xchg
mov
jecxz
and
test
jmp
xor
adc
inc
fwait
data16
sbb
gs
jo
test
mov
sub
imul
stos
inc
out
mov
and
pusha
iret
ss
addr16
cs
fcomps
push
xchg
dec
mov
fwait
or
xor
pop
push
aad
daa
pop
inc
or
jmp
lods
inc
and
bndstx
call
pop
rol
xchg
cmc
mov
xchg
popl
push
sub
jp
test
rclb
adc
out
or
icebp
dec
je
cmp
rolb
ret
je
pop
std
pop
shrb
and
push
push
call
add
ljmp
mov
lods
sbb
fxch
lcall
sub
in
in
or
repz
jne
arpl
cmp
out
loope
mov
scas
pop
lahf
or
adc
cltd
mov
sti
sarl
dec
insl
cmpsb
pop
or
adcl
loope
movsb
jecxz
int
decl
or
pop
movsb
pop
inc
dec
cmp
xor
test
inc
push
mov
scas
or
mov
or
or
adc
fmuls
xor
mov
in
adc
cld
push
insb
dec
sub
and
call
xchg
mov
je
cwtl
shll
jl
dec
mov
aad
and
pop
xchg
subl
pop
out
scas
popf
and
mov
sbb
sub
dec
adc
sbb
xor
insl
stos
lea
ja
push
pushf
adc
repnz
pop
fidivrl
movsl
lea
jl
loope
iret
loope
aas
adc
push
mov
mov
fsubp
dec
sub
outsb
loope
ret
hlt
fcoml
dec
xchg
dec
cmpsb
cmp
lret
loop
lcall
fiaddl
das
loope
insb
mov
mov
and
es
jae
cli
xchg
or
mov
enter
mov
xchg
dec
in
mov
out
rcrb
dec
lods
adc
in
aam
jge
icebp
icebp
sbb
testb
sti
out
add
lods
ret
dec
xchg
sub
mov
jp
jl
add
push
mov
ds
es
les
sahf
mov
add
mov
test
push
pop
push
inc
sarb
mov
movsl
fsts
xor
mov
mov
push
xchg
mov
testl
aad
sbbb
jle
fnsave
xchg
mov
add
jbe
popl
adc
imul
mov
mov
loopne
sbbb
scas
or
jnp
mov
sbb
sbb
movsb
stos
and
xor
subl
or
jge
testl
gs
adc
mov
out
out
test
int3
data16
jnp
stos
in
fs
fidivl
mov
pop
mov
mov
scas
adc
sarl
add
xchg
scas
mov
jle
and
fs
test
push
sub
jp
sbb
push
mov
inc
cli
mov
in
test
inc
test
imulb
test
xchg
sub
pop
add
adcl
cmp
and
xchg
sbb
aaa
jecxz
stc
jae
mov
fisubrs
test
aaa
shlb
movl
dec
dec
enter
jbe
dec
test
pop
fs
je
cmp
push
cs
cmp
shrb
sub
push
ss
mov
fsubrp
test
ljmp
inc
sbb
out
dec
or
xor
jnp
jbe
push
dec
jle
js
fstps
arpl
and
jl
outsb
sub
jl
add
ljmp
inc
and
xor
inc
and
sub
sahf
fcomi
push
dec
and
int
std
adc
jne
pop
fucomp
cmp
inc
dec
fimuls
push
mov
cmpb
jl
mov
sbb
shll
dec
mov
push
sbb
sbb
aas
or
sbb
pop
push
pop
cmp
outsl
xor
in
dec
add
and
xchg
cmc
mov
or
dec
cwtl
cmp
fwait
arpl
fisubl
sub
and
rorl
mov
add
dec
inc
and
mov
xor
mov
aad
je
int3
push
xchg
or
mov
pusha
add
push
push
out
rcpps
or
sbbb
xor
sbbb
pop
cmpsl
sarl
pop
inc
jle
mov
gs
jg
das
loop
adc
and
lods
decb
repnz
mov
fucomp
sbb
push
jg
ss
mov
dec
andl
sahf
inc
push
mulb
xor
fdivl
lds
mov
sub
dec
mov
sub
inc
flds
inc
ficomps
jnp
mov
push
mov
jle
negl
daa
sub
les
push
outsl
jp
mov
and
jge
and
push
xchg
imul
mov
push
sbb
icebp
jae
push
mov
pop
in
push
cltd
icebp
xlat
pop
insl
push
in
mov
popf
cmc
pop
icebp
dec
fwait
xor
adc
mov
dec
movsb
mov
or
stc
push
iret
jp
jbe
rclb
mov
cmc
lgdtl
loope
dec
dec
ret
push
ss
mov
and
xchg
dec
roll
aaa
sahf
cmp
lahf
pop
xchg
sub
cltd
cli
xchg
inc
iret
push
mov
sub
into
dec
mov
and
cltd
and
mov
mov
inc
clc
je
ljmp
adc
sbb
jns
sbb
and
bswap
lods
mov
leave
scas
aad
repnz
icebp
enter
ror
sbb
ret
bound
outsl
xchg
dec
les
test
movsl
outsb
lock
in
add
mov
xchg
xor
push
xchg
clc
push
mov
xor
testl
in
repnz
xchg
sbb
or
fsubrs
lret
cmp
cmp
push
mov
aad
sbb
mov
push
negl
outsb
hlt
movsl
icebp
cmp
daa
add
add
insb
lods
mov
add
inc
add
aaa
icebp
adc
jl
lret
icebp
mov
sub
and
arpl
jno
mov
mov
lods
adc
push
outsb
leave
sbb
mov
clc
xor
cwtl
xor
mov
pop
into
xorl
jmp
ja
rol
pop
cwtl
dec
incl
mov
out
test
xor
sub
aas
cmp
dec
inc
mov
inc
ljmp
cmp
add
push
aas
add
xor
enter
push
mov
outsb
in
incl
jecxz
and
adcl
sub
push
pop
mov
das
mov
ret
mov
lea
es
or
insb
dec
and
mov
int3
dec
dec
outsb
add
dec
fisttpll
ret
lret
mov
in
pop
push
sti
jno
pop
cmpsb
mov
loop
mov
mov
rclb
cmp
popa
cltd
negl
sbb
popa
les
nop
dec
pop
test
mov
lea
push
lahf
mov
mov
mov
xchg
mov
lods
cmp
and
pop
xchg
nop
decl
push
mov
outsb
adc
nopl
sub
or
lds
xchg
faddp
mov
or
and
mov
lds
pop
test
lcall
fs
fsubrl
push
mov
jg
xor
loop
unpcklps
vcvttsd2si
sbb
cltd
lret
rcrl
insb
mov
jne
fcmovne
and
daa
or
jae
push
jmp
add
pop
enter
jge
xlat
aam
push
in
jae
xchg
sar
out
imul
lret
cmp
xchg
data16
jb
jecxz
ret
or
or
stos
mov
jecxz
lods
stos
inc
insl
push
sbbb
leave
cltd
cwtl
inc
add
jmp
out
ret
addr16
mov
inc
fdivr
or
pop
pop
cmpsb
fidivs
pop
int3
into
gs
std
aas
shlb
dec
insb
jle
lock
lret
daa
ja
inc
in
pop
add
inc
jp
dec
icebp
pop
nop
inc
sbb
cmp
in
loope
push
xlat
mov
dec
mov
push
shll
jle
das
pop
out
stos
sti
out
in
pop
scas
mov
or
xchg
mov
rcrl
push
jmp
and
and
sub
mov
sub
sbb
or
push
and
jae
dec
inc
int3
sub
jbe
int
jecxz
inc
jge
scas
jae
jno
fchs
in
loop
sbb
pusha
or
add
fwait
test
aam
pop
stc
js
sub
xchg
mov
sbb
lods
xchg
pop
das
mov
inc
pop
add
in
adc
push
icebp
adc
out
mov
add
jbe
mov
push
sbb
mov
ret
push
xor
rol
sarl
sbbb
fisubrl
jnp
and
or
cmp
pop
xchg
outsl
fstps
faddp
lret
enter
mov
push
xchg
sub
mov
mov
sbb
mov
outsl
cmpsb
jge
cmpsb
jge
adc
fwait
pop
xor
fsubs
inc
sub
repz
fnstenv
int
idivb
sbbb
adc
and
xor
mov
es
and
jo
ss
nop
daa
adc
fcmovbe
xchg
dec
notl
cmp
addw
mov
push
sub
jns
mov
insl
jbe
lock
mov
addr16
lods
sub
lret
mov
in
nop
cmp
mov
outsl
mov
pop
cwtl
movsl
into
add
ds
dec
mov
repz
sbb
je
xor
xchg
sbb
lds
xchg
jge
je
sub
cmp
mov
pop
pushf
jmp
jle
mov
outsb
dec
popa
sbb
jge
xchg
hlt
pop
mov
scas
gs
pop
mov
popa
and
mov
imul
cmc
adc
push
aam
add
add
mov
lcall
popa
fwait
pushf
ljmp
outsb
lods
add
aas
or
fdivl
pop
stos
xchg
stc
rcl
mov
sub
loope
mov
mov
loopne
inc
in
push
push
mov
orb
dec
pop
sub
pop
xor
test
mov
sbb
lahf
sbb
and
and
sti
cs
inc
stos
mov
jmp
push
scas
mov
sub
mov
mov
pusha
xor
lods
add
mov
in
jecxz
mov
call
xor
push
ds
jl
test
stos
sarl
arpl
rol
xor
cld
cmp
push
not
jb
pop
mov
rclb
stc
or
dec
jmp
mov
push
sahf
jb
jno
cmp
xlat
pop
dec
shlb
call
add
ljmp
fldl
pop
cmp
lret
dec
rolb
pop
dec
adc
mov
out
jle
mov
enter
or
fiadds
enter
cmp
movsb
push
lds
ja
jp
adc
mov
pop
sbb
push
ret
repnz
mov
or
push
stos
push
mov
dec
pop
sbb
lret
cmp
mov
fnstenv
cmp
cmp
dec
stc
xchg
loop
mov
and
jae
aaa
mov
in
pop
movsl
loop
in
enter
add
repz
or
dec
sbb
and
or
adc
idivl
cmpsl
nop
int
or
lcall
gs
push
lea
inc
shrl
in
adc
loop
test
repnz
mov
mov
and
and
adc
inc
dec
in
das
mov
call
add
popf
xor
aad
xchg
lcall
inc
sbb
mov
sbb
pop
dec
mov
test
cs
rcr
push
lret
and
out
mov
mov
imulb
and
mov
data16
jae
loope
repz
or
stos
das
data16
push
add
push
add
popf
ficoms
mov
sbb
fldt
cmpsb
cli
je
dec
addr16
imul
inc
imul
fwait
pop
aam
or
adc
dec
xor
xchg
jl
sbb
lcall
push
inc
shrb
in
fs
push
int
sub
xor
mov
xchg
xor
push
pop
cmc
push
add
divl
add
mov
xor
test
xchg
enter
mov
jo
mov
sti
mov
cli
pushf
loop
cwtl
pop
xor
in
aaa
jno
ret
xor
les
xchg
and
scas
and
and
or
and
jge
jns
push
out
cmp
stos
jmp
cmp
mov
aad
fisubrl
dec
aaa
mov
adc
mov
cmp
sbb
mov
jo
jns
inc
adc
adc
es
sti
xchg
cmp
mov
dec
push
lods
pop
xchg
flds
popf
cs
lahf
sbb
pop
call
jae
stos
sbb
mov
ja
inc
pop
cmpsb
cmp
and
xor
stos
sub
sarb
rorl
mov
or
fmul
mov
or
mov
cli
mov
stos
loop
push
push
out
repnz
pop
xor
sbb
mov
shrb
mov
insb
jl
outsl
xchg
sbb
loope
aam
add
or
lret
lret
mov
enter
add
add
lret
loopne
pop
mov
adc
fmull
push
decb
push
movsl
or
push
fdivp
mov
aas
es
adc
push
add
daa
pushf
out
xlat
xchg
xchg
idivl
sub
ficomps
jecxz
decl
xor
iret
cmp
xor
bound
ret
filds
sub
cmc
add
shlb
mov
adc
ret
out
test
pop
adc
scas
rclb
xlat
jge
cmp
sub
lock
cmc
mov
adc
inc
jmp
fwait
loopne
xorb
inc
sub
mov
out
sbb
loopne
dec
mov
ljmp
addr16
or
mov
mov
add
sbb
movsb
sbb
testl
mov
sub
jno
add
mov
sub
dec
into
mov
int3
arpl
xchg
ret
jnp
enter
sbb
mov
idivb
xchg
out
aam
dec
out
fidivl
jmp
rcll
xor
enter
movsb
push
out
sbb
testb
add
xor
fsubrl
add
enter
addr16
mov
rolb
lods
imul
popf
into
jae
inc
cmp
jecxz
popa
xor
lret
frstor
mov
stc
adc
mov
jno
cltd
pop
or
adc
je
pop
outsb
loopne
mov
pop
aad
or
out
js
leave
std
sarb
xchg
sarl
cmp
cs
andb
outsb
hlt
inc
add
mull
in
mov
sbb
adc
pop
jne
test
mov
xchg
xlat
hlt
stos
imul
ljmp
call
sub
pop
cmp
xchg
sbb
incl
insb
push
insb
sbb
jle
or
imul
clc
and
fbstp
stos
mov
pop
push
insb
pop
sub
ss
sbb
jne
xor
dec
data16
cmp
push
out
mov
out
sub
inc
adc
pop
cs
add
lds
inc
pusha
fldt
pop
sahf
sarl
andb
mov
popf
insb
xor
fwait
or
mov
add
into
mov
xor
lods
inc
lods
jnp
inc
or
push
mov
stos
rorl
pusha
pop
mov
jne
mov
xchg
fimuls
lcall
inc
mov
inc
xorl
sbb
cmpl
out
push
add
into
xor
xor
cmpsl
fwait
xchg
fisubl
out
mov
in
rcrl
or
stos
mov
jae
popf
lods
aas
aad
negl
add
in
pop
lret
shl
cltd
iret
mov
dec
fsubr
movsb
gs
out
iret
pushf
mov
xchg
daa
and
add
sub
push
xor
loope
imul
orl
jb
enter
xchg
fsubs
fdivrl
arpl
mov
mov
jge
cmp
mov
mov
push
mov
fdivrs
dec
in
out
mov
xchg
sarl
cwtl
push
dec
or
cwtl
jae
enter
adc
cwtl
mov
outsb
test
clc
cmc
push
mov
dec
lods
xchg
adc
pop
cltd
jmp
cwtl
fmulp
mov
pop
in
js
icebp
sub
dec
ja
hlt
popa
mov
inc
gs
test
insl
xlat
sbb
inc
hlt
pop
jg
sbb
pop
popf
movsl
sbb
add
test
stos
dec
out
shr
nop
lcall
or
fs
push
jle
mov
lea
sub
aad
addl
or
fsubr
inc
push
xchg
test
cli
xchg
sbb
mov
dec
cmpsl
int
sub
inc
mov
lahf
jg
in
push
repnz
inc
shrb
push
mov
xchg
inc
lret
push
sbb
sub
dec
clc
in
mov
jmp
test
or
shrb
lea
cmp
xor
lods
mov
cmp
jae
dec
push
stc
fnsave
inc
ds
inc
out
mov
stos
adc
outsl
push
xor
sbb
lcall
pop
lcall
outsb
pushf
cli
mov
pop
mov
insl
pop
jbe
or
adc
dec
add
and
jb
hlt
mov
popa
pop
rolb
mov
mov
cs
sub
xor
jle
repz
adc
adc
sti
xlat
and
xchg
imul
xchg
pop
cwtl
hlt
loopne
mov
pop
sarl
shlb
fstpt
jae
pusha
fnstenv
scas
cmp
setne
cmp
iret
sub
sbb
mov
js
cli
pop
ss
out
jl
and
mov
lods
xor
jge
xchg
mov
fsubrs
rcrl
and
insb
inc
insl
inc
adc
mov
into
gs
bnd
lret
push
cwtl
xor
rorb
push
fidivl
dec
imul
icebp
sahf
stos
and
sub
pop
ja
cmp
out
cmp
cmp
popf
cmp
loopne
cs
and
pushf
div
ret
mov
out
pop
mov
sub
test
mov
sbb
mov
add
add
push
jo
adc
imul
stc
xchg
adc
mov
loopne
and
fimuls
mov
xor
cli
adc
adc
pop
inc
and
lret
lret
int
nop
pop
in
push
sub
mov
sub
xchg
shl
outsb
sarb
dec
inc
cltd
outsb
roll
mov
xchg
or
push
arpl
sbb
dec
sbb
stc
push
mov
pop
cmp
adc
dec
mov
push
adc
faddl
insb
or
inc
mov
incb
cld
lcall
aaa
xor
mov
js
or
imul
push
nop
leave
xchg
pusha
sbbl
pushf
sub
jo
dec
icebp
pop
out
out
mov
and
repz
cwtl
int3
shr
hlt
mov
push
jne
out
mov
xor
mov
cmpsb
sub
mov
add
fdivl
pop
inc
fmull
mov
aad
cmp
fdivl
push
add
push
xlat
jbe
subb
lcall
mov
sub
fiadds
pandn
insl
jnp
nop
shl
daa
mov
cmp
dec
sub
cltd
jmp
ja
mov
xchg
lds
cmp
outsb
sub
pop
lahf
jp
mov
pop
mov
mov
jo
gs
push
out
or
mov
add
sti
xchg
cmp
push
mov
jg
rorl
or
pushf
scas
mov
jae
dec
push
inc
push
out
xor
addr16
pop
adc
xchg
scas
je
mov
add
mov
movl
jmp
arpl
imul
rorl
jecxz
sub
fwait
repz
and
sbbb
xchg
xor
icebp
push
xor
lea
inc
and
loop
push
stos
stos
repnz
inc
lock
pop
test
js
fdivl
mov
cld
push
xlat
cltd
or
push
jns
ss
mull
jnp
and
int3
fisubrs
pop
jg
sub
xor
jge
inc
add
xorb
cwtl
adc
ret
daa
jp
test
dec
pushf
sub
imul
movsb
shr
test
fisubl
push
lods
and
push
adc
dec
mov
test
outsl
and
push
aad
adc
mov
sub
mov
stos
test
repnz
stc
jge
pop
mov
loope
xor
test
mov
cli
inc
sub
ret
push
ljmp
jno
push
push
les
mov
out
cmp
mov
xchg
in
les
sti
pop
imul
lods
dec
popa
jbe
dec
arpl
hlt
adc
or
add
popf
pop
cwtl
dec
into
aas
notl
add
inc
out
jne
adc
iret
aad
cmp
xlat
arpl
add
inc
mov
jns
dec
add
test
test
xchg
cmp
mov
add
mov
inc
shlb
mov
sahf
pop
lods
jo
mov
mov
and
aam
push
movsl
xchg
mov
or
pop
adc
or
insb
in
xchg
cs
or
add
pop
lods
mov
and
jnp
repnz
int
stos
ja
pop
pop
push
sarl
cld
das
in
repnz
fidivrs
push
mov
sbb
js
adc
sbb
jae
sbb
stc
push
insb
mov
or
in
inc
test
inc
fisubl
or
in
or
in
jg
jecxz
adc
gs
test
out
dec
sbb
in
hlt
mov
jo
lret
jmp
mov
sbb
ret
aad
adc
movsb
lea
mov
xor
jo
push
jl
mov
int3
or
pushf
xchg
ja
add
aas
jno
cmc
mov
dec
cmp
xchg
idivb
mov
repz
pop
or
jle
cltd
and
push
in
int
add
int
add
stos
push
mov
dec
add
rcr
inc
mov
xchg
xchg
sub
loop
das
mov
rcr
es
push
popa
leave
mov
je
fsubrp
aad
cld
mov
pop
xchg
xor
sub
inc
flds
ud1
fisttpll
or
lods
mov
in
dec
ror
and
fildll
lock
and
dec
cmpsb
pop
orl
sbbl
xchg
lret
adc
adc
inc
in
adc
push
daa
sbb
push
add
inc
sub
cmp
sub
arpl
xlat
mov
dec
pop
in
and
jae
jbe
jle
and
push
addr16
and
shrb
and
shrd
lret
jge
popa
sti
shl
and
shl
add
and
inc
or
inc
fnstcw
lret
cmp
push
cs
out
pusha
negl
sbb
add
ds
mov
leave
adc
shll
icebp
lret
lret
lods
or
arpl
dec
mov
sub
fimull
sub
cwtl
gs
mov
mov
movsl
dec
fidivrs
testb
test
sub
out
or
lahf
ss
cmp
incl
dec
and
int3
xor
into
jg
lock
adc
out
xchg
je
fs
and
clc
push
insb
arpl
cltd
push
rorl
xor
into
push
adc
ficomps
aad
mov
push
add
sub
arpl
pop
sti
add
mov
out
lea
mov
adc
xchg
adc
mov
ret
shlb
lds
pop
rcl
repnz
mov
in
rol
in
inc
mov
mov
mov
je
sub
jmp
fsts
std
sub
jecxz
jbe
aaa
call
cld
data16
je
rcr
fdivr
push
xchg
xor
push
out
push
sbb
sbb
out
stc
hlt
xorl
icebp
cmp
inc
jbe
lds
inc
shr
jno
shl
jbe
sbb
cmp
dec
jmp
mov
jb
lret
and
out
cmpl
lea
addl
add
pop
aas
daa
add
xchg
mov
stos
sbb
jo
mov
movl
push
or
jbe
sarl
xor
add
adc
mov
mov
pop
ret
jne
sub
sarb
shr
mov
fistpll
mov
popf
mov
sbb
aad
inc
pushf
xlat
push
push
jb
idivl
std
cmp
pop
scas
xchg
push
testb
movsl
sbb
jbe
xlat
fnstsw
in
jns
nop
popf
push
add
divb
das
mov
mov
ss
cmpsl
mov
sarl
mov
push
or
loopne
mov
inc
jb
jbe
mov
mov
int
nop
ja
popa
mov
stos
inc
dec
xor
ret
cmpl
dec
push
cmp
scas
jg
dec
out
loopne
jg
ucomiss
pop
pop
add
les
mov
mov
pusha
xchg
pop
push
leave
int
jl
lock
cwtl
pop
ret
ja
insl
andl
dec
mov
mov
addr16
mov
les
mov
lds
fbld
movsb
and
push
jno
je
add
cmpsl
push
inc
je
xor
dec
adc
lahf
in
push
hlt
lret
inc
imul
push
out
push
fucomp
mov
lods
icebp
in
and
mov
xor
shl
sub
and
lret
mov
lods
pop
inc
jg
or
xor
xchg
adc
flds
xchg
pop
jns
jo
cmpsb
les
bound
push
push
xor
mov
inc
arpl
lea
dec
mov
xchg
sub
push
push
adc
icebp
int3
cs
cmp
push
clc
gs
lds
ja
lret
and
out
arpl
in
out
notl
adc
out
pop
and
add
les
in
mov
pop
mov
jb
pop
shl
cmp
mov
ret
add
and
rcrl
mov
leave
sub
mov
insb
xor
push
popa
mov
adc
in
cmp
cltd
xor
es
push
cmp
pop
pop
and
cli
repnz
les
mov
mov
scas
int
mov
and
fldcw
scas
inc
jecxz
lods
adc
mov
popf
cli
sub
inc
pushf
mov
inc
lret
xor
xor
mov
pop
mov
jno
fwait
mov
rolb
pop
sbb
aam
push
jle
xchg
xchg
cltd
and
repnz
pop
mov
or
call
xorb
sub
xchg
fiaddl
test
sti
jbe
pop
mov
inc
cmp
repz
lods
jle
dec
mov
push
sbb
cld
sbb
lea
movsl
dec
cmp
stc
push
out
xchg
lods
xchg
pop
clc
and
aam
sahf
dec
add
mov
pop
ds
cmpsb
shr
xlat
jge
and
fs
and
dec
in
sbb
push
lods
dec
xor
sbb
pop
outsb
addr16
pop
pop
mov
mov
sbb
mov
pop
call
or
mov
add
aas
mov
pop
ret
ds
adc
inc
and
inc
insl
adc
or
mov
cli
or
push
jecxz
and
rorl
cmp
push
inc
sub
ficomps
inc
lods
mov
sbb
fsubrp
sub
cmp
sub
hlt
leave
lods
lcall
mulb
cmpsb
pop
push
xchg
pop
sbbl
push
aad
mov
adc
cltd
pop
data16
sub
push
mov
iret
inc
imul
test
sub
adc
mov
jbe
notl
dec
sbb
or
filds
jmp
push
out
inc
test
or
mov
stos
rclb
fdivs
imul
loop
xor
daa
xor
ret
cs
mov
cmp
decl
in
dec
mov
xor
jno
mov
test
mov
xchg
in
add
jmp
pop
cmp
enter
dec
mov
dec
icebp
cld
pop
cmpsb
cmp
mov
scas
mov
psubusw
in
add
xchg
inc
cltd
cmp
cli
pop
mov
ud0
jecxz
and
jecxz
dec
add
daa
xchg
or
cld
xor
add
ret
sub
push
push
sbb
fisttpll
cs
push
cmp
dec
test
cmp
fsubl
fwait
push
cmp
movsl
cmc
fidivrs
mov
out
jbe
invd
mov
mov
arpl
movsb
scas
call
sub
out
in
insl
jge
rclb
push
lea
pop
js
lea
out
xor
cld
mov
mov
lea
ret
movsl
cmc
xchg
mov
xchg
stos
mov
jmp
imul
mov
repnz
add
push
lds
sahf
outsl
sub
cs
push
mov
mov
int
cs
inc
jecxz
fs
mov
mov
ficoms
loop
fnstsw
hlt
arpl
push
call
call
push
push
adc
add
mov
add
sbb
mov
rorl
aaa
data16
push
fisubs
pop
xchg
das
ja
sbb
lods
cmpsl
sub
jmp
jne
imul
orb
push
sbb
pop
out
mov
pop
outsb
scas
in
mov
fcmove
jbe
cs
adc
stc
mov
mov
dec
mov
fidivs
nop
add
mov
fs
aad
sub
pop
inc
ret
and
pop
xchg
aam
adc
sbb
or
push
mov
mov
pop
pop
or
xor
movsb
push
aaa
jge
mov
ljmp
in
mov
mov
clc
jno
rcrb
out
je
sar
xchg
mov
enter
jl
mov
repz
push
ror
xor
push
push
push
inc
fiaddl
jae
cmp
pusha
in
into
xor
repnz
lea
add
flds
je
pushf
sbb
inc
or
jae
int3
inc
das
icebp
mov
arpl
fstps
mov
or
and
pop
sub
mov
dec
test
mov
into
test
movsl
push
push
pusha
testb
mov
push
lods
stos
xchg
sti
test
mov
xor
and
xchg
sub
pop
clc
movsb
cmp
jl
dec
fwait
div
cmp
std
loope
rcrl
and
cmc
dec
and
idivl
add
mov
dec
inc
pop
lock
loopne
push
int
cltd
shll
pop
cmp
and
pop
pmullw
or
ret
pop
iret
sar
push
xor
mov
std
dec
and
rcr
fldenv
movsl
rorl
loopne
jns
mov
shl
jmp
adc
and
add
cmp
out
inc
icebp
cmp
mov
mov
lcall
xor
into
sti
repz
xor
mov
scas
mov
mov
ss
jno
rorl
sbb
cs
pushf
sub
jb
into
jne
aas
aas
roll
and
pop
or
sbbb
sarl
cmp
mov
out
rcl
ret
aaa
mov
jne
in
in
aaa
ficoml
jb
push
cld
push
sub
pop
sbb
fsin
cli
pushf
pop
jmp
jno
xlat
mov
inc
sahf
cltd
xchg
shrb
jbe
cli
pushf
xor
nop
xchg
lret
aam
outsl
dec
jmp
fistl
xor
jp
inc
sbb
add
xchg
cmc
mov
addr16
mov
mov
xchg
loop
or
addr16
scas
inc
rcrb
pop
xchg
repz
mov
daa
mov
lods
popa
mov
cmp
loop
xchg
scas
rolb
fwait
xor
jecxz
cld
cltd
mov
ja
mov
sbb
in
dec
dec
inc
pop
sahf
xor
adc
ds
ret
dec
movsl
cmp
loopne
fnstsw
inc
stc
cmpsl
jno
fistl
jno
iret
sub
pop
jb
cmp
add
sub
bound
cwtl
enter
mov
push
popf
cwtl
jno
icebp
ss
dec
cmpsb
dec
push
js
popf
push
pop
inc
loop
mov
into
add
jo
xor
jae
push
cmpsl
mov
pop
jae
sub
xchg
or
pop
jae
jbe
call
sub
int
cltd
insl
aad
adcl
dec
jo
loopne
repz
jne
scas
cmp
mov
push
fcomps
lock
insb
scas
mov
ret
pop
mov
pop
movl
and
pop
xor
ja
push
fbstp
fwait
push
add
cld
mov
sbb
data16
aaa
ja
icebp
mov
and
push
call
pop
outsl
loop
enter
and
ss
ja
mov
jle
fs
mov
in
test
and
ljmp
push
inc
xor
lahf
push
into
pop
mov
stos
out
cmpsb
out
xchg
push
inc
lret
popf
popa
pop
cmp
lea
inc
pusha
enter
xor
aas
mov
les
sbb
shlb
push
or
out
jo
movsl
dec
jne
adc
fisubrl
mov
cld
mov
out
ljmp
mov
push
aaa
js
fisttps
push
xchg
popa
and
adc
xor
fidivs
incl
mov
jge
cmp
sub
xchg
xchg
jecxz
add
scas
insb
popf
xor
dec
mov
fsubl
fwait
imul
ficomps
adc
movsl
cli
mov
adcb
sub
scas
js
lods
pop
and
cmp
lods
fmull
jle
scas
cmpl
dec
fs
or
pop
repz
jbe
cs
xchg
pop
outsb
add
lret
push
push
pop
sub
subb
rcr
mov
outsb
sub
inc
pop
cmp
ret
push
icebp
mov
add
cmp
imul
ret
sub
fwait
or
iret
data16
in
paddusb
xor
cmp
pop
sub
dec
pop
jle
mov
rorb
add
adc
hlt
xor
lea
sub
xor
sti
fucomp
insb
paddusw
test
lods
inc
jbe
jne
in
andb
push
imul
or
bound
or
pop
or
inc
cltd
xor
jbe
jae
dec
dec
out
cmc
cmp
sahf
scas
cmp
push
pop
cmpsb
jb
iret
pusha
inc
fldt
insb
lret
xlat
cmp
fwait
mov
leave
xchg
add
ss
scas
xor
lods
push
push
out
pop
xchg
out
xor
mov
fisubl
push
out
js
add
push
test
fsubr
fidivrs
jb
repz
mov
adc
sbb
xor
sbb
mov
mov
xor
clc
sahf
push
xor
or
ret
scas
gs
mov
shrb
addr16
nop
addr16
stc
mov
mov
xchg
mov
and
ror
add
mov
xor
adc
cmpsb
xchg
test
inc
in
push
je
adc
cwtl
xchg
xchg
test
mov
mov
xor
sbb
push
insl
and
mov
mov
sbb
pop
xchg
mov
dec
pop
or
fwait
and
popf
fcoms
popa
mov
dec
and
cmc
repz
dec
arpl
shrb
lods
lods
mov
enter
lds
add
fcoml
xchg
out
xor
and
cwtl
andl
and
xchg
test
dec
sbb
add
mov
push
push
inc
mov
jmp
inc
mov
xchg
add
adc
mov
xchg
inc
aas
dec
and
imul
int
pop
push
jo
orb
adc
push
outsl
pushf
decl
xchg
sub
push
sahf
add
pop
sub
test
mov
mov
cwtl
daa
xchg
mov
mov
int
movq
lret
adc
sbbb
mov
rcrb
dec
insb
xchg
fidivrs
cs
mulb
lea
loopne
sbbb
lret
pop
pop
mov
sub
cmpsl
ja
jl
push
and
fucomi
xor
sub
pusha
mov
pop
cwtl
stos
mov
xor
pop
imul
inc
lods
cld
pop
pop
xchg
push
rclb
negb
mov
scas
jbe
push
rcrl
out
in
mov
add
and
movsl
xor
ds
xchg
mov
pop
mov
aas
mov
sbb
insl
add
cmp
int3
fs
or
cmpsb
cmp
mov
popa
jns
xchg
xchg
mov
mov
shl
stos
mov
xorl
lret
xor
sbbl
jg
cmp
fyl2xp1
mov
out
push
pop
rolb
pop
sub
xchg
test
push
push
jp
cmpl
mov
mov
aam
push
js
cmp
scas
push
insl
loope
mov
dec
add
mov
repnz
js
mov
lods
push
test
and
inc
into
rol
das
stc
mov
pop
in
call
loopne
dec
mov
lock
movsl
rcl
hlt
pop
mov
fstpl
icebp
je
add
faddp
enter
adc
xor
test
leave
in
mov
insl
mov
sbb
dec
imul
lahf
inc
mov
stc
xchg
or
scas
mov
aam
sub
mov
repnz
mov
imul
js
cmp
scas
movsb
cmp
cmc
xor
inc
ret
or
aaa
inc
mov
negl
jmp
in
push
mov
std
out
test
stos
pop
std
push
jg
mov
jmp
popf
es
add
cli
popa
pop
pop
cmp
mov
js
and
mov
adc
inc
scas
orl
add
cltd
std
pop
sbb
jnp
bound
xlat
flds
ljmp
call
push
shrb
fnstenv
and
xchg
ja
dec
xor
xchg
dec
mov
jecxz
in
push
shlb
adc
mov
icebp
movsl
push
test
sarl
ret
inc
mov
mov
adc
leave
test
loopne
outsl
xlat
popf
js
cwtl
cwtl
add
enter
aad
dec
imul
popf
inc
fisttps
jg
pop
xor
add
jmp
cmp
jp
in
inc
fs
and
mov
pop
cmpsl
mov
mov
popf
jp
dec
nop
lea
mov
and
xor
pop
cltd
pop
jp
inc
lcall
inc
fcompl
pusha
shrl
arpl
nop
gs
flds
js
fisubs
rorb
jns
xchg
mov
or
adc
ss
adc
or
lods
je
cmpb
fidivs
or
and
andl
mov
shrb
push
ret
lcall
mov
xlat
jp
sbb
fnstcw
js
dec
sahf
cmp
imul
in
test
xchg
push
sub
xchg
cmp
push
dec
loopne
add
inc
mov
fcmovne
xchg
jo
fildll
cmc
push
lock
inc
sahf
pop
mov
fcmovne
in
orl
xchg
lock
push
push
push
rsm
add
sub
out
dec
ficompl
adc
sub
jb
iret
pop
adcb
out
loope
fimuls
icebp
cmp
fidivrl
jle
dec
mov
popa
clc
out
les
pop
shlb
fimull
test
mov
pop
fwait
sti
jnp
sarb
mov
fidivrs
shrl
loope
mov
push
incl
xchg
rorb
pop
addr16
push
xor
jne
pop
out
and
mov
mov
mov
lret
jecxz
xchg
outsl
add
cmc
mov
mov
add
popa
je
jb
fcmovnbe
call
js
mov
or
push
xchg
adc
js
mov
int
pop
jp
outsb
mov
cwtl
mov
mov
hlt
mov
mov
inc
xor
cmp
cmc
mov
daa
pop
mov
inc
aad
sbb
mov
stc
rclb
imul
fsubrl
and
and
nop
daa
sub
mov
sarl
icebp
mov
xchg
xchg
aaa
lcall
inc
jecxz
popa
or
pop
inc
fisubrs
jns
ret
mov
out
lahf
and
push
in
jge
inc
fdivrl
mov
lods
stc
mov
int3
fbld
jb
and
xchg
mov
ss
push
mov
dec
imul
sahf
push
or
mov
cld
insl
push
shrl
jae
mov
loopne
out
pop
sub
dec
imul
addr16
test
jmp
dec
inc
pop
ret
dec
out
aam
pushf
jmp
or
jl
lcall
cmp
xchg
jae
and
mov
mov
adc
lock
test
jne
les
pop
lret
adc
std
jg
out
push
les
cmc
data16
shlb
push
loope
pusha
lcall
sbb
inc
cmp
and
jns
mov
cmp
iret
loopne
jnp
aaa
into
cmc
and
fcoml
push
ror
push
stc
ret
pop
insl
cwtl
lds
gs
push
inc
pop
test
mov
loopne
popa
jnp
test
imul
inc
jno
in
call
push
movsl
fstpl
loopne
push
fistl
arpl
dec
cmpsb
lea
in
xchg
mov
sbb
inc
lods
cli
cmp
fidivl
out
mov
fdivs
or
push
ficompl
in
sbb
cmp
rcrl
testb
pop
movsl
es
mov
dec
xchg
jp
loope
or
mov
mov
push
iret
xor
cli
and
mov
mov
mov
mov
jb
sbbl
mov
loope
adc
mov
pop
arpl
dec
jnp
mov
mov
jg
fcomps
inc
loop
xchg
ljmp
hlt
cmpsb
jb
mov
and
push
and
cmpsl
xor
add
fwait
xor
shrl
or
pop
cmpsl
ret
cmp
mov
push
sbb
loopne
inc
push
jecxz
outsl
mov
adc
cmp
addr16
add
push
jecxz
aam
mov
sti
and
add
mov
lea
inc
es
lods
fildl
loope
or
dec
push
pop
and
cmp
xor
sahf
lds
xor
mov
pop
cmpsl
sbb
dec
aas
xchg
sti
lock
lods
stos
mov
bndstx
cs
cld
mov
pop
adc
fwait
mov
and
lea
jns
cmp
adc
mov
sub
and
pushf
aaa
ficoml
test
mov
sbb
push
fmull
and
lret
jge
sbb
or
cmp
insb
jp
loopne
mov
cmpsb
dec
dec
mov
mov
fsubrs
dec
pop
pop
test
push
jb
jmp
dec
xchg
icebp
inc
ljmp
lahf
stos
cmp
adc
cld
ljmp
push
or
rcrl
fwait
add
sub
je
jbe
stc
jno
inc
pop
push
sbb
xchg
and
ror
mov
jl
jp
cmc
lods
test
add
ss
rorb
adc
mov
and
ret
fstl
or
test
dec
das
outsl
add
fwait
mov
daa
pop
push
test
mov
mov
imul
rorl
sbb
cmp
cwtl
inc
jo
jns
out
or
or
cmp
in
rcl
rolb
repnz
inc
rep
cmp
sarb
pusha
fldl
leave
ja
lret
or
xor
daa
outsl
sub
cmp
je
pop
lret
cmp
jge
dec
and
loope
ret
arpl
mov
fisubrs
cltd
jecxz
dec
dec
xlat
aad
outsl
nop
call
sbb
sub
sub
push
sub
pop
repnz
mov
fstpl
sbb
cmp
mov
pop
and
aam
ss
push
lock
fcomip
in
pop
out
pop
loop
mov
cmp
ljmp
push
movsl
push
movsl
jb
scas
cmp
cmpsl
dec
cli
push
dec
jecxz
cmovno
andl
stos
add
jmp
xor
cs
fnstenv
data16
bound
mov
mov
clc
or
adc
test
leave
mov
fstl
adc
nopl
push
xlat
adc
loop
xor
push
sub
lahf
or
sbb
push
movsb
es
cmp
stos
jns
push
nop
jnp
jo
pop
fwait
dec
movsl
adc
mov
dec
stos
jae
dec
pop
loope
push
scas
js
xor
loopne
int3
fs
or
cwtl
push
jmp
incb
sub
xchg
or
mov
mov
int3
dec
dec
in
std
das
mov
imul
adc
bound
mov
mov
imull
sahf
into
inc
cltd
add
out
and
movsl
xor
push
sub
shll
or
push
push
mov
dec
fbstp
push
mov
notl
mov
sbb
dec
out
int3
pop
push
ljmp
adc
xchg
daa
stos
sbb
mov
mov
cmp
fisttpll
xchg
or
sub
push
out
aam
adc
clc
ja
subl
jecxz
sti
outsl
lahf
dec
jae
jecxz
scas
mov
addr16
mov
pop
enter
stos
inc
lds
fxtract
pop
in
pop
pop
jp
and
in
popa
clc
push
leave
sub
xchg
jns
push
sbb
clc
jl
in
pop
movsl
sbb
movsb
fstpt
iret
or
dec
cmp
es
fwait
push
or
enter
mov
xor
and
and
mov
xchg
mov
mov
nop
shl
arpl
or
sbb
test
xorl
cmp
icebp
aaa
es
jne
mov
sbb
cld
outsl
cmp
not
hlt
fldenv
ljmp
inc
inc
or
sub
sarb
or
lds
cs
mov
in
repz
les
das
repnz
lods
inc
mov
xor
inc
scas
jb
loope
or
xchg
push
mov
loop
insb
scas
or
test
mov
mov
rol
and
mov
adc
outsl
daa
mov
pop
clc
xchg
sti
pop
sbb
dec
in
rcrl
stc
push
xlat
mov
ds
push
push
add
cmc
mov
adc
xchg
cmp
cmpb
daa
lods
sub
out
in
sbb
ficomps
fimuls
imul
int
xor
mov
stos
ljmp
out
inc
testl
loop
pop
mov
sbb
and
xor
cmp
inc
sbb
and
jbe
pop
movsb
jne
push
jae
mov
jbe
test
js
or
pop
cmp
sbb
cmp
divl
faddl
pop
repnz
and
ret
mov
loopne
inc
xchg
push
aad
pop
sub
pop
loop
jo
jbe
arpl
roll
test
jb
stos
stc
stos
leave
aaa
fsubs
mov
jae
mov
jg
fdivs
subb
fisubrs
and
inc
test
subb
fstpl
jne
into
cmc
sbb
add
sbb
sub
cmp
gs
push
cmp
xchg
loopne
xchg
adc
popf
aam
cs
cmp
into
mov
cld
aad
xor
fidivs
imul
pop
cmc
lcall
or
clc
cmp
lahf
lock
mov
pop
xor
movsb
mov
aad
adc
pop
test
inc
into
jno
das
stos
inc
scas
cmp
mov
push
ds
sbb
and
clc
dec
lods
push
popf
push
cli
sub
mov
fwait
hlt
leave
loopne
add
jge
jp
cmp
arpl
in
ja
sbb
jno
cmp
cltd
dec
push
aam
inc
fildl
ret
jbe
lret
jae
ljmp
fwait
xor
xchg
push
loopne
mov
jnp
ss
addr16
or
jmp
inc
sbb
or
sbb
popf
push
mov
xchg
fimull
lock
inc
fwait
mov
loop
rorl
hlt
push
mov
rorl
xor
mov
mov
lret
jge
cwtl
or
push
loopne
orb
dec
dec
out
jns
jmp
mov
jmp
fisttps
xchg
out
push
mov
imul
in
jg
mov
testb
pop
imul
add
sbb
insb
or
sbb
add
push
insl
iret
xor
push
in
cld
mov
pop
push
push
outsl
push
pop
xor
mov
aam
push
in
xchg
testb
inc
push
out
test
mov
or
fdivrs
add
jp
call
inc
and
push
loope
jae
aam
xor
daa
dec
sbb
call
jge
mov
outsl
inc
inc
add
idivl
nop
pop
stos
mov
dec
insl
sbb
icebp
insb
or
cmp
sub
xchg
cmp
fxch
mov
outsl
aam
mov
push
push
or
xor
mov
mov
or
push
sub
jb
add
jecxz
cmp
clc
sub
pop
out
xor
add
test
xchg
sub
sub
test
sub
sbb
dec
and
cmc
pop
out
pop
cwtl
aam
int3
xorb
bound
xchg
imul
stos
dec
jecxz
dec
leave
mov
sub
popa
mov
xor
cmpsl
in
dec
ds
sub
aas
and
test
dec
addr16
jns
arpl
movsb
loopne
call
cmp
pop
xchg
mov
mov
sbbl
sbb
add
dec
add
mov
cmpsl
mov
daa
cmp
in
xchg
inc
lret
testb
or
xchg
mov
out
push
jge
movsb
sbb
xchg
jo
xor
xchg
mov
inc
mov
push
mov
insl
out
outsb
sbb
cmp
and
inc
push
adc
ja
xor
les
ret
mov
enter
pop
inc
pop
mov
jge
fisubrs
pop
sbb
mov
push
jae
and
insl
jb
test
adc
rorb
roll
mov
imulb
gs
mov
shlb
mov
lahf
push
imul
shrb
adc
dec
and
aaa
sub
push
add
push
sti
jge
cld
daa
or
xchg
inc
inc
or
cmpsl
scas
pop
xchg
js
inc
mov
lret
dec
dec
jo
mov
ds
mov
adc
mov
jmp
jbe
cs
out
or
dec
in
push
add
add
cs
das
or
mov
push
dec
loopne
dec
xor
adc
inc
pop
aam
sbb
test
imul
or
pop
int3
fdivrs
stos
cmp
popf
es
das
or
leave
rolb
int
push
mov
out
jecxz
and
int3
xor
pop
stos
inc
leave
jp
dec
xchg
leave
xlat
sahf
loope
xchg
fdivl
pop
mov
and
in
lock
leave
sub
popf
lods
push
dec
push
mov
cmp
movsl
ds
push
and
dec
andb
repz
pusha
inc
loopne
in
lret
lods
ss
dec
mov
out
int3
xor
sbb
scas
xchg
xor
cmp
in
jo
mov
pop
cmc
fucomi
and
pop
push
daa
and
imul
in
testl
inc
push
scas
mov
pusha
cmp
jne
add
cs
sahf
push
adc
push
imul
add
xchg
repz
xor
push
lds
cmp
mov
mov
shlb
pushf
aad
ja
hlt
pushl
add
stos
and
jecxz
lret
push
jno
pop
mov
jmp
addb
pusha
cwtl
test
imul
xlat
rcl
repnz
fsubrs
lods
es
ret
mulb
and
jmp
sarl
mulb
or
xor
pusha
inc
pop
or
sbb
popa
cld
inc
inc
ficoms
idiv
xor
icebp
leave
pop
repz
lock
sbb
add
lds
push
js
xchg
mov
and
dec
fistpll
call
fs
clc
xor
cwtl
xor
jmp
out
sbb
mov
pushl
sub
cmp
jnp
dec
dec
pop
xor
fwait
movsl
repnz
jp
mov
scas
enter
dec
data16
mov
test
adc
cmpsl
push
rcr
pusha
xchg
cs
add
movsb
rcrl
sub
cmp
or
ds
or
lods
sub
aas
std
mov
pop
xor
loop
push
dec
loope
pop
adc
stc
je
shl
repnz
dec
insb
mov
cmp
mov
cmpsl
cmp
mov
fildll
ljmp
push
loopne
mov
gs
push
xchg
inc
mov
clc
ss
inc
lods
movsl
add
push
aas
iret
push
jno
dec
arpl
jo
sub
mov
or
es
les
clc
testl
jbe
pop
and
adc
add
jp
js
pop
jl
pop
mov
cmp
ret
xchg
mov
mov
clc
dec
push
ljmp
mov
outsl
and
fisubl
pop
xor
ret
test
outsb
jl
mov
imul
sub
pop
out
imul
mov
or
pop
test
sub
insl
ss
in
cmpl
mov
mov
or
lret
jb
push
mov
pushf
mov
shll
or
lods
cli
dec
cmp
xor
cltd
pop
je
pop
jo
dec
mov
jnp
cmp
insb
fisubrl
scas
loope
mov
mov
sbb
into
mov
subb
pop
cs
int
dec
xor
inc
inc
mov
das
dec
popf
mov
std
movsb
jge
fists
ljmp
pop
gs
mov
push
or
add
jb
outsl
mov
int3
aam
add
mov
pop
sbb
loopne
aaa
out
inc
loopne
jae
jle
and
int
add
les
xor
loop
outsl
sub
imul
inc
fs
repnz
cmp
add
xor
mov
inc
std
jns
sbb
jg
pushf
les
push
out
test
pop
out
fs
aam
movl
jmp
or
cmpsl
push
gs
xor
xor
sbb
data16
dec
inc
aaa
xchg
mov
cwtl
fsubrl
mov
stc
or
mov
fsubr
cs
stos
movsl
push
ja
mov
cli
mov
sub
sub
icebp
adcb
incl
push
nop
pop
std
lcall
mov
sti
and
mov
test
call
push
jno
jno
je
sbb
lods
and
gs
stc
out
sub
sbbb
dec
sub
push
jl
sbb
and
pop
ja
xchg
test
fwait
xor
push
jmp
mov
add
sbb
nop
sbb
jo
ret
popa
ja
jle
and
mov
adc
lahf
dec
dec
add
aaa
lods
push
in
les
xor
mov
test
add
push
mov
rcrb
mov
repnz
xchg
outsl
sarb
mov
out
mov
fistpl
in
xchg
sub
pop
sub
js
out
loop
int3
mov
sbb
inc
scas
jge
je
imul
test
in
pusha
aas
or
mov
adc
jne
push
xchg
lret
jne
pushf
insb
test
in
pushf
in
xchg
jno
mov
gs
dec
rcll
dec
aas
and
sbb
stc
pop
pop
jbe
mov
adc
xchg
mov
stos
inc
sub
xor
leave
int
sub
pusha
aam
push
fs
cs
xchg
xlat
mov
mov
pop
cltd
sbb
mov
cltd
sub
mov
lds
fwait
enter
popa
into
fs
xor
or
and
add
sbb
loop
xchg
and
mov
or
sub
call
adc
pop
test
lds
or
jle
int3
cmp
insb
jle
mov
cmpsb
xchg
and
mov
fisttpl
or
ss
out
mov
call
xchg
out
cmpb
inc
dec
sub
dec
cmpsb
lret
sti
fwait
icebp
sbb
scas
dec
push
loope
iret
jbe
cmc
scas
rorb
xor
repz
loopne
push
leave
xor
stc
push
repnz
lods
xorl
test
add
add
aad
jno
push
ljmp
jae
add
btc
jle
sahf
out
xchg
mov
mov
icebp
movsl
pop
aaa
movb
sbbl
out
jle
or
movsb
iret
sbb
xchg
dec
in
in
sbbl
add
out
mov
mov
cmp
jbe
dec
test
or
jno
or
jno
xor
jae
pop
fadds
xor
leave
leave
adcb
mov
popa
sbb
or
mov
lock
daa
arpl
and
mov
inc
andb
inc
inc
mov
and
xor
ret
orb
ficomps
fisubrl
mov
add
out
xor
cs
sbb
mov
inc
pop
dec
mov
adc
not
lret
jns
jnp
in
sbb
push
mov
cvttps2pi
lods
aas
testl
push
ljmp
mov
xchg
mov
jp
add
adc
push
fwait
sahf
cmpsb
or
pop
mov
sbb
adcb
loope
sub
testl
cmp
pop
xor
mov
push
out
mov
xor
arpl
shrl
je
push
push
pusha
icebp
dec
jbe
addr16
cmp
aam
xor
imul
out
adc
push
out
mov
icebp
in
lods
pop
insb
mov
sahf
lods
mov
xchg
xor
xor
add
or
popf
push
cmpsl
inc
shl
push
aaa
ds
cwtl
in
std
int3
cwtl
leave
mov
jne
pop
mov
cs
xchg
xchg
pop
sbb
out
andb
addr16
mov
loopne
push
lahf
insb
js
stc
shrb
inc
xlat
movsb
mov
mov
mov
setle
or
mov
ljmp
pop
and
mov
cmpsb
mov
out
enter
xor
lahf
dec
nop
jmp
in
or
adc
inc
cmp
inc
cli
into
cmp
jle
add
mov
popf
aaa
pop
into
mov
ror
add
xacquire
and
andb
xor
in
adc
and
xchg
lea
imul
pop
rclb
jge
shll
fbld
outsb
dec
das
shl
pop
fidivs
push
mov
xor
scas
mov
fstl
xor
ret
daa
in
adc
inc
movsb
das
insl
scas
dec
mov
adc
xor
adc
push
shlb
scas
xchg
or
imul
cmpsb
and
sahf
adc
push
insl
jne
ja
dec
and
aas
das
scas
sbbl
pop
sub
add
jno
leave
bound
roll
mov
or
divl
mov
inc
add
mov
add
adc
xor
xor
shrl
mov
movsl
subb
mov
mov
in
stos
scas
mov
movsl
loopne
fnstenv
out
andl
cs
out
inc
aad
and
cmp
pop
icebp
dec
adc
in
mov
inc
fisubrl
insb
fisttps
and
movzbl
fs
and
adc
add
fistpl
dec
jmp
adc
sbb
insb
imul
insb
mov
mov
addb
xor
cmp
cmc
sbb
pop
jne
movsb
inc
out
sub
inc
mov
dec
ficomps
lcall
xchg
mov
repnz
jecxz
pop
mov
rol
aad
pop
sbbl
sub
lcall
aad
jge
inc
jne
push
data16
test
adc
adc
lcall
push
call
lea
and
cmpsb
jo
push
push
scas
fbstp
mov
sub
fsubp
mov
int3
loopne
int
jmp
or
mov
fsubrl
and
add
add
cwtl
push
and
js
test
aad
js
fidivrl
popa
mov
sti
out
js
ficoms
scas
adc
test
test
ss
loopne
insl
jnp
in
ds
mov
xchg
outsl
repz
imul
and
lahf
fsubl
loope
loopne
jl
call
mov
divl
lods
cmp
dec
inc
mov
pusha
add
sub
inc
sub
pusha
rorl
add
sti
xor
shrl
shll
jmp
imul
incb
mov
cmp
int3
mov
and
fnstsw
or
jns
push
outsl
mov
mov
dec
bound
outsb
push
jg
imul
jbe
mov
mov
and
jno
mov
mov
jne
movsb
add
jle
mov
mov
pop
jmp
into
xor
jno
adc
dec
xchg
pop
dec
andb
in
push
sahf
sbb
jae
and
inc
call
and
icebp
adc
xchg
stos
and
dec
mov
int
bound
pop
xchg
int
enter
outsl
negl
js
jmp
mov
jae
test
jb
pop
js
sub
ret
hlt
add
andl
jmp
or
int
ja
or
or
push
mov
add
pop
jecxz
ljmp
ljmp
xchg
mov
lcall
in
dec
adc
ss
inc
arpl
cld
outsl
movsb
sbb
bound
add
xchg
adc
mov
dec
mov
mov
add
inc
popa
daa
call
mov
sbbl
ret
fdivp
aad
dec
repz
movsl
jge
cmp
arpl
add
jle
ret
pop
std
loopne
push
out
imul
push
pop
call
flds
dec
or
push
daa
xor
test
cmp
pop
sbbb
mov
xchg
insl
dec
in
ss
mov
pop
inc
inc
popf
std
fidivrl
dec
dec
cmpsb
nop
xchg
lret
ss
fmull
cld
aas
xor
or
scas
out
mov
loope
fiaddl
dec
loopne
and
into
xchg
push
push
stc
pop
adc
cwtl
push
fs
cmp
add
imul
xor
je
and
fwait
sub
jb
inc
jns
xchg
shl
sarl
rclb
mov
dec
cwtl
int3
xchg
inc
jne
ret
xchg
adc
ja
leave
mov
push
pop
cmp
cli
lock
hlt
adc
outsb
jle
movsl
sub
mov
adc
call
add
sbb
pop
pop
and
cli
mov
inc
lods
loopne
pop
pushf
push
into
lods
pop
sbb
pushf
aas
jb
and
push
aas
pop
cpuid
pop
rcrb
cld
daa
aad
push
mov
test
jge
cmp
inc
cmpsl
out
ljmp
cli
rorb
jmp
inc
fmull
xchg
sahf
mov
pusha
fmuls
dec
or
cltd
pop
lea
jbe
jge
and
scas
and
ss
iret
ss
adcb
es
pop
mov
jg
sub
les
mov
cmpsb
leave
push
inc
jl
pushf
stos
jbe
into
aas
xchg
xor
in
cmp
das
jge
push
cmp
inc
xlat
rcrb
test
nop
mov
xchg
inc
mov
push
daa
push
in
int3
xor
aam
js
inc
clc
js
out
xchg
out
mov
sbb
cmp
dec
jo
push
and
imul
nop
dec
test
adc
cmp
pop
mov
pop
or
cmp
fbld
mov
xchg
and
imulb
push
stc
fs
sbb
outsl
dec
cmp
imul
add
push
mov
mov
gs
mov
pop
cwtl
xor
and
push
sub
xor
clc
jns
in
movsl
jle
pop
mov
hlt
adc
inc
arpl
xchg
and
cmp
mov
imul
cld
call
add
lods
aas
stos
fstp
inc
fisttpl
sub
mov
pop
dec
xchg
sub
push
call
stos
fwait
dec
gs
js
push
sub
stc
movl
aaa
idiv
rcrb
xor
push
xchg
inc
jl
clc
invd
movsl
xchg
scas
imul
sbb
sub
push
fisubrl
fs
mov
adc
adc
mov
jnp
or
add
add
pusha
inc
stc
adc
test
mov
lea
out
xchg
mov
mov
std
xchg
out
or
mov
sbb
mov
outsl
jns
mov
les
add
sbb
cmp
sbb
sbb
push
pop
insb
fildll
or
xchg
aaa
pop
test
cmp
das
imul
inc
jg
in
mov
dec
mov
mov
xchg
or
enter
mov
rclb
jnp
movsl
jo
mov
lds
dec
lea
adc
int3
lea
aam
mov
push
cmp
ja
xchg
lea
mov
pop
jle
repz
mov
ficoml
nop
push
pop
cmp
nop
loop
cli
out
xlat
mov
xchg
movsb
aaa
xor
fsubr
mov
fnstenv
stc
fisubrs
dec
movsl
in
loopne
insl
add
jae
sbb
adc
cmp
cwtl
stos
insb
imul
add
inc
hlt
pop
sbb
ret
out
add
jecxz
lret
daa
or
push
cmp
fcoms
push
in
cmpsb
js
out
jmp
push
mov
ss
loopne
or
rorl
add
es
mov
or
mov
lahf
mov
xor
mov
mov
sbb
adc
hlt
xchg
adc
jb
shrb
mov
and
mov
push
xor
mov
sub
push
test
ror
das
std
push
lds
out
negl
or
jo
pop
mov
dec
mov
int
inc
sbb
popf
cli
mov
test
sahf
fs
fidivs
add
inc
jmp
push
xor
dec
std
xchg
mov
cmpsl
pop
in
mov
xchg
mov
rep
xor
int
pop
orl
dec
mov
iret
arpl
sti
inc
std
mov
sub
sub
mov
adc
jne
push
into
movsb
lock
jnp
fs
test
outsb
jo
sub
cmc
sbb
test
jecxz
lods
and
scas
or
int
xorb
frstor
mov
cltd
xchg
xor
inc
and
aas
xchg
xor
sbb
ret
pop
shl
xchg
cmpsb
and
jb
xlat
push
push
jne
cmp
test
fistl
mov
inc
sbb
jbe
add
push
scas
adc
push
adc
add
rcrb
cmp
xchg
mov
jp
mov
cltd
pop
in
dec
xor
mov
imul
hlt
mov
push
inc
push
gs
mov
pop
xor
push
mov
shrl
and
mov
adc
std
mov
cmp
mov
xchg
mov
push
add
scas
xchg
in
inc
xchg
adc
cmp
mov
aas
jmp
push
sub
add
ja,pn
jmp
mov
fdivl
insl
xchg
popf
mov
insb
cmp
inc
pop
adc
add
cmpsl
loop
outsb
push
mov
jmp
lea
add
and
lea
xchg
fiaddl
call
add
insb
cmp
pop
mov
dec
movsb
push
lods
inc
cmp
dec
aad
jecxz
sub
enter
negb
mov
lcall
push
mov
rdpmc
cld
inc
pandn
ljmp
sub
imul
loop
or
cmc
add
inc
xor
pop
jno
popa
or
mov
and
and
addr16
mov
add
outsl
jae
rorl
insl
sbb
sub
mov
cmc
out
pop
lock
jmp
stos
mov
cmpsb
int3
mov
mov
js
stos
jmp
inc
jl
jno
stc
add
mov
jae
dec
push
call
lcall
movsb
pop
into
es
xor
xchg
adc
data16
cmpl
mov
addr16
out
in
jecxz
add
pop
addr16
and
mov
inc
pop
add
push
nop
mov
xchg
sub
popl
jle
addr16
lods
mov
rcll
std
push
popf
xor
call
in
add
mov
push
js
and
cmp
or
jecxz
add
cli
xchg
stc
mov
cwtl
das
dec
jge
inc
mov
mov
cli
cs
mov
pop
insb
dec
nop
aad
add
scas
inc
fwait
inc
mov
imul
pop
movsl
popf
cmpsl
and
and
aaa
negb
movsl
cmpsl
inc
xchg
in
test
and
xor
cwtl
stos
repnz
mov
and
mov
daa
stc
jns
repnz
inc
mov
mov
push
push
subb
sub
mov
push
adc
dec
loop
xor
xlat
push
stos
pop
pop
scas
cmp
push
push
fwait
xor
push
hlt
and
leave
inc
mov
clc
push
xor
mov
mov
dec
les
xchg
add
push
and
adc
and
addr16
inc
inc
repz
sbb
sbb
cmp
outsb
sub
scas
and
and
or
lea
jg
xchg
mov
dec
inc
mov
iret
xor
pop
movsl
shl
or
mov
fistpll
iret
fisubrs
je
mov
mov
xor
inc
or
jae
int3
sti
fwait
subb
das
sbb
in
mov
iret
inc
inc
sbb
hlt
es
push
xchg
out
test
mov
fsubrp
push
notb
outsl
daa
adc
ja
shrb
jnp,pn
add
jbe
sbb
aam
addr16
cmp
push
mov
stos
and
pop
inc
sahf
push
cmp
jg
out
call
push
test
pop
cmp
mov
aam
test
mov
fsts
mov
les
push
lcall
je
jno
jmp
push
jmp
and
xchg
dec
call
sbb
cmp
mov
sub
xor
movsb
bound
test
add
add
mov
jge
addr16
int3
aaa
push
insl
inc
push
lcall
fnsave
fldt
out
xchg
push
cld
xchg
push
cmc
adc
ret
cli
xchg
mov
mov
xor
cmp
ljmp
fld
faddl
push
dec
fstpt
lods
sub
pop
pop
into
sub
cld
sbb
jl
mov
mov
cmp
inc
mov
jno
mov
in
inc
add
cltd
outsb
xchg
jb
and
mov
pop
sub
insb
mov
pop
sub
push
xor
mov
xor
shrb
mov
cmpsb
or
sbb
jno
and
cmp
gs
xor
lret
and
popf
stos
push
ds
stos
repnz
add
jae
sbb
sbb
inc
mov
nop
mov
xor
pop
es
cmp
imul
xchg
dec
pop
imul
hlt
sarl
xchg
sti
push
sub
xor
sbb
lret
arpl
lea
push
xchg
push
adcb
and
popf
je
shl
repnz
cld
xchg
and
sbb
andl
dec
push
xor
ret
in
cmp
jne
fs
push
inc
lcall
lea
mov
sbb
lds
mov
xchg
or
jge
fcomip
pop
popa
add
js
repnz
jb
sub
add
sub
xor
fnsave
xor
and
inc
test
jbe
pop
jg
add
les
or
mov
in
ret
pop
xchg
add
daa
sub
push
pushf
out
shrb
loope
loop
mov
stos
inc
push
push
mov
sbb
leave
mov
dec
fdivp
pushfw
xor
mov
lods
sub
aam
data16
test
mov
push
mov
ljmp
jno
add
cmp
add
mov
cmp
sqrtps
jecxz
sbb
pushf
mov
not
out
out
neg
mov
lret
push
cwtl
das
push
xchg
lcall
lock
inc
out
jns
in
ret
jb
js
add
aam
sbb
add
jnp
fidivs
xchg
in
mov
in
mov
mov
sbb
push
scas
pop
or
rcr
jne
pop
jno
test
jle
into
jb
add
fistl
out
movsl
stos
movsl
cmp
mov
ret
push
inc
adc
ror
fwait
stos
xor
push
inc
popf
pop
movsl
decl
mov
mov
loope
jl
imul
ds
push
stos
pushf
popa
fstpl
imul
loopne
ja
mov
push
or
xchg
jae
shlb
mov
enter
ficoml
dec
jge
aas
xor
icebp
cmc
or
or
mov
mov
push
pop
mov
in
mov
pop
mov
test
push
xor
addr16
mov
jno
push
ficoms
pop
xor
xchg
insl
popa
lahf
ss
out
xchg
jmp
mov
sbb
mov
mov
adc
fcomps
ss
sub
loopne
dec
jge
cmp
push
or
arpl
jecxz
jnp
mov
jg
pop
inc
fmul
pop
enter
mov
cmp
outsl
xlat
xor
iret
jg
push
mov
add
scas
sub
or
jb
or
pop
stc
jns
lds
xor
imulb
mov
pop
jbe
adc
js
jmp
inc
xchg
data16
jae
inc
push
imul
fwait
inc
inc
mov
push
int
push
jmp
out
xor
pusha
aad
adc
add
xchg
mov
push
add
fldt
and
sbb
mov
out
gs
into
add
bound
fwait
mov
faddl
mov
std
das
cmp
pop
dec
pushf
testl
dec
imulb
cmp
popa
add
ss
daa
adc
mov
outsb
bound
and
push
mov
sbb
popf
jae
sub
jl
xchg
sub
stos
lahf
dec
and
aaa
int
push
mov
adc
jb
insb
inc
loopne
stc
pop
xchg
scas
xchg
cmpsl
mov
pop
aas
insl
push
fs
push
mov
sti
mov
jmp
mov
inc
push
cmp
inc
call
jle
in
orl
mov
orl
cmp
addr16
out
pop
nop
add
lret
mov
sbb
pop
loop
iret
sbb
fistpl
xor
sub
mov
xchg
xchg
repz
xchg
cmpsb
int3
jge
inc
sbb
dec
xorb
test
out
add
jg
add
cmpsl
test
out
adc
mov
mov
xchg
cmpsl
arpl
rolb
and
jbe
stos
inc
mov
pop
lds
push
push
and
mov
scas
clc
dec
adc
shll
js
and
iret
jecxz
mov
xchg
ljmp
inc
nop
inc
out
sti
sub
mov
jo
inc
xchg
adc
fadd
or
cli
leave
insb
adc
sarb
sub
dec
sbb
aam
cmp
adc
inc
inc
out
and
push
adc
adc
cmp
jne
ja
push
call
lret
inc
scas
push
mov
std
aad
fildl
pop
add
push
push
dec
sub
xchg
addl
jmp
xchg
stc
repz
fs
push
into
test
ljmp
cld
pop
hlt
mov
fbld
sub
and
mov
mov
mov
in
leave
and
cmpsl
push
jecxz
sarl
cmp
and
or
adc
jmp
popf
ss
mov
fisubs
lods
cmpsl
and
sub
int
push
sub
pushf
out
movsl
xchg
push
aaa
jns
xchg
push
mov
rorl
call
cmp
push
imul
inc
scas
jbe
ljmp
inc
pop
neg
dec
cmc
fsubr
sub
pop
xor
sahf
imul
out
out
outsb
lahf
bound
ljmp
lock
and
pop
push
outsb
xchg
pop
and
xor
inc
test
jl
lods
xlat
fucom
jb
adc
dec
loop
jg
ficomps
movsb
or
pusha
mov
cwtl
push
adc
ss
lods
sub
push
push
aaa
filds
xor
out
mov
add
mov
popa
xchg
dec
bts
fsubrl
repz
push
gs
ror
test
adc
inc
xor
fidivrs
roll
add
and
mov
fistpl
dec
movsb
testl
mov
xor
push
pushf
push
xchg
xchg
clc
push
jnp
mov
mov
sbb
sbb
mov
cmpsl
mov
movsb
xor
popf
cmp
out
xchg
mov
scas
cmpsb
test
stc
mov
cmp
push
inc
jbe
sub
popa
stos
call
cmp
mov
push
nop
mov
add
ret
jo
add
mov
fsubl
adc
xorb
push
mov
adc
pop
pop
and
jnp
xor
push
add
sarl
or
push
lea
inc
pop
pop
mov
cmp
clc
sbb
addr16
and
divb
mov
stos
add
lods
out
fdivl
in
push
in
incl
test
pusha
push
arpl
sbb
fldl
jnp
mov
in
xchg
ja
dec
shrb
shl
das
inc
daa
cmp
int3
cli
mov
mov
jmp
jp
jo
loope
rcrl
js
and
popl
lock
addr16
sbb
movb
in
pop
push
ret
mov
fs
out
outsl
test
xchg
sub
popf
lea
in
movb
dec
mov
gs
rorb
ss
mov
push
mov
je
test
dec
pop
rorb
cmp
jle
aas
jge
aaa
popf
nop
and
sub
jbe,pt
mov
adc
in
popa
inc
lea
test
lret
sahf
inc
stc
or
cmpb
and
adc
rcl
mov
mov
out
mov
push
testb
or
and
jb
fldenv
pusha
stos
in
pop
push
fcomp
rcll
mov
inc
popa
adc
mov
mov
or
stos
cmpsb
stc
pop
scas
in
test
mov
pop
out
mov
and
sbb
ja
add
push
movsb
sub
mov
mov
sub
push
pop
jp
inc
dec
in
ljmp
mov
inc
mov
dec
pop
mov
add
in
int
sahf
xor
movsb
adc
insb
sbb
mov
pop
test
aaa
repz
pop
call
sub
mov
movsb
and
jno
jle
fmuls
adc
mov
lock
shrb
cmpsl
jge
adc
add
ds
lret
rcrb
add
cmpsl
mov
je
mov
lods
lret
dec
sub
in
add
jecxz
push
xchg
popf
sbbl
xor
je
aad
fs
loopne
xchg
in
mov
hlt
mov
mov
in
ret
ss
dec
bnd
and
add
lods
jp
pop
sub
stos
out
imull
sub
aad
shrb
pop
scas
mov
fs
push
xor
jae
and
pop
xchg
and
movl
iret
cmp
out
sti
dec
jg
mov
mov
cmp
sar
mov
mov
lock
pop
push
inc
xor
xor
sarb
in
cmp
cltd
out
leave
repz
mov
inc
lret
stos
ds
dec
arpl
cmpsb
pop
pop
mov
nop
jp
outsl
and
cmpsb
dec
cmpsl
push
pop
jle
leave
xchg
pop
arpl
movb
jns
nop
addr16
shr
cmp
mov
cld
pop
out
cmp
mov
jbe
dec
aas
frstor
jb
sti
mov
adc
lock
sti
addl
inc
push
cmc
in
shrb
out
enter
pop
imul
in
aas
loopne
mov
decb
inc
rorl
jne
enter
cmp
pop
mov
pop
inc
scas
inc
mov
lahf
sub
leave
pusha
cld
pop
int
and
ss
call
mov
xor
les
addl
je
push
push
and
shl
add
and
mov
test
pop
sub
jecxz
repnz
sbb
lods
sub
xor
stos
and
push
insl
cmpsl
in
cld
push
sub
repz
cmp
in
mov
jbe
sub
fs
jg
cltd
add
adc
push
cmpsl
in
test
cld
outsl
jmp
int
nop
mov
xchg
mov
xchg
mov
jle
jp
mov
stos
shr
inc
lea
push
insl
stc
rolb
ret
inc
fildll
std
mov
fbstp
jle
cmp
push
pop
shrb
mov
scas
pop
mov
and
pop
cmc
mull
imul
aam
xchg
clc
cwtl
xchg
push
negl
pop
pop
dec
cltd
stos
xor
jnp
loopne
addr16
inc
ret
test
push
ficoml
mov
fsubrp
fistps
imul
cld
mov
jae
lods
cmpsl
sbb
dec
imul
or
mov
jecxz
cltd
lahf
and
stos
sub
fidivs
scas
out
pop
insl
or
sub
iret
add
xorb
jle
xor
push
out
xor
inc
and
mov
sbb
ret
adc
push
and
fmull
out
dec
and
cmp
jno
sbb
mov
mov
push
adc
hlt
pop
mov
mov
inc
sahf
sbb
outsb
inc
test
cmpsl
outsl
adc
mov
in
cmpsb
sub
sbb
jbe
pusha
and
and
pop
cmc
mov
lahf
in
call
into
mov
arpl
sub
pop
add
mov
xchg
in
mov
les
cmpsl
jo
movsb
cmp
jnp
pop
xor
aaa
lret
push
jno
and
or
data16
lods
inc
or
test
sbb
push
popf
and
xchg
xor
ja
push
dec
sbb
pop
cmpsl
insb
jle
cmp
dec
dec
clc
sarl
das
dec
clc
cmp
cmp
call
and
push
dec
pop
pop
pop
xlat
cmp
lods
sbb
shll
lret
cwtl
push
inc
add
push
cli
das
sbb
pop
xor
cmp
mov
aaa
xchg
xchg
ljmp
insl
mov
out
mov
xchg
loopne
cmp
xlat
mov
test
fisttpll
sbbl
test
idivb
js
xchg
mov
cltd
movsb
adc
lock
clc
cld
outsl
mov
jg
scas
insb
xchg
push
push
inc
push
lcall
into
xchg
rep
sbb
and
pusha
add
mov
sahf
cmp
or
pop
cmp
ret
adc
dec
into
sub
adc
cmp
push
mov
cltd
xor
gs
fdivl
fidivl
stos
xchg
repz
fdivp
andl
arpl
jp
mov
bound
into
sbb
adc
jnp
int
adc
mov
mov
push
shll
decl
jb
inc
pop
jmp
faddl
das
les
dec
sahf
insl
test
inc
mov
fcoms
push
add
xor
jbe
xor
xchg
aad
cmp
jns
out
out
test
loop
stc
cmpsb
in
xor
pop
inc
xlat
push
cmc
or
xchg
xor
adc
pop
cmp
xorl
sbb
imul
shl
std
sub
inc
sub
xor
xchg
dec
mov
sbb
icebp
jnp
xor
mov
pushf
mov
sub
cwtl
pop
mov
push
and
jno
scas
data16
fmull
adc
out
inc
and
inc
pop
or
sub
mov
pop
push
sbb
flds
imul
ja
adc
inc
stos
jne
pop
adcl
pop
xchg
pop
lret
cmpsl
movsb
cmp
cld
popa
loop
jb
dec
sahf
out
xor
xlat
stos
les
rcrl
jbe
nop
xchg
push
outsl
add
aam
mov
push
jo
test
aam
fs
pop
push
orl
and
mov
mov
popa
mov
xchg
sub
add
into
xorb
dec
mov
pop
cmp
aam
repnz
bound
cli
lea
jnp
scas
jg
push
mov
aas
jge
sti
fwait
ja
mov
in
pop
popf
stc
mov
lea
dec
outsl
or
scas
hlt
fs
mov
xor
mov
dec
popl
push
or
xchg
push
push
mov
push
fldcw
lods
and
mov
hlt
ss
or
loopne
jae
insl
sub
sbb
iret
adc
stc
gs
push
xchg
dec
movsl
out
or
insl
ret
mov
jecxz
xchg
ficompl
je
fistpl
cmpxchg
inc
push
inc
idiv
add
and
and
clc
xor
xchg
inc
data16
fdivr
inc
aas
hlt
jb
sarl
ror
inc
movsb
hlt
push
and
subl
pop
les
pop
jno
inc
std
mov
out
dec
jbe
mov
sbb
or
cmp
cmp
into
out
adc
adc
je
sbb
sbb
aas
mov
decl
loop
push
out
inc
and
add
xchg
jb
mov
hlt
insl
fstp
ljmp
movsl
pushf
sbb
fs
in
mov
jl
in
imul
push
int
xor
repnz
dec
data16
jns
pushl
mov
pop
rol
in
addr16
xor
or
push
out
daa
mov
lods
dec
inc
cwtl
cmc
jmp
out
inc
inc
or
sub
fisttps
inc
iret
xchg
and
movb
daa
lcall
sub
les
push
outsl
insb
xchg
dec
cmp
push
cmp
mov
jo
mov
fcoms
cld
sub
iret
cltd
xchg
iret
fpatan
stos
sub
pop
stc
and
adc
dec
loope
setle
leave
add
movsb
mov
clc
mov
or
pop
pushf
les
inc
jns
daa
les
xor
les
adc
fs
rcrl
ss
and
enter
aaa
stos
lds
or
aas
push
stc
dec
jnp
fsubl
sti
xchg
imul
decl
dec
xlat
xchg
add
shr
xchg
sub
push
scas
dec
pusha
add
xchg
pop
ss
push
sarl
pop
dec
adc
test
pop
mov
and
mov
out
adc
push
aad
test
pop
ja
pop
adc
test
stos
push
fldenv
add
ss
scas
ret
loop
cltd
dec
inc
or
leave
fwait
mov
in
pop
and
cmpsb
push
jle
inc
mov
push
add
add
mov
in
sbb
movsb
sbb
out
test
jno
push
lahf
inc
movsb
rolb
and
cmp
mov
test
push
jg
mov
cwtl
pop
add
dec
les
push
hlt
addr16
das
mov
sahf
mov
and
aad
or
addr16
pop
xchg
testb
lcall
mov
imul
push
xchg
push
es
cltd
cmc
push
fdivrl
sbb
lcall
cli
clc
jae
sbb
stos
pop
shrb
inc
out
das
jno
in
pusha
xchg
sbb
mov
out
sub
add
push
dec
push
cmp
and
mov
and
ret
cmc
or
roll
loopne
or
in
popf
push
shr
repz
pop
out
fcoms
js
mov
inc
jge
sub
popa
cltd
andb
sbb
dec
push
shrl
mov
adc
dec
add
lahf
push
dec
scas
jb
gs
mov
bound
inc
pop
mov
lds
pop
enter
push
test
jbe
and
das
mov
inc
pop
scas
fidivrs
fdivrs
imul
movsb
faddl
jecxz
mov
mov
out
fiaddl
ds
idivl
lods
sbb
icebp
and
pushf
xor
sbb
inc
stc
and
pop
lcall
int
cmp
xchg
push
jmp
xchg
add
lahf
ds
cmpb
fdiv
aas
adc
cmpsb
and
mov
and
pop
notl
andl
add
frstor
and
jno
clc
jae
sbb
jbe
mov
out
dec
jno
pop
test
cmp
fdivl
mov
cli
push
mov
mov
imul
push
popf
xchg
int
add
mov
inc
mov
sub
enter
dec
mov
fdivrp
xor
mov
inc
repz
imul
addr16
xchg
mov
xor
icebp
popa
pop
test
outsl
push
cmpsl
rorl
aaa
daa
shr
imul
aam
lret
push
cltd
add
test
ja
outsl
test
dec
push
movsl
jle
cmpb
adc
push
movsl
lock
lods
ja
fstpt
push
jg
cmp
mov
aad
rcll
mov
pop
inc
dec
arpl
nop
pop
sub
jmp
sub
push
or
inc
push
xchg
in
sbb
idivl
andb
and
adc
andb
pop
jne
call
pop
subl
xor
insl
call
es
pop
mov
xor
aam
jne
stos
cmp
cmp
dec
leave
inc
xchg
sbb
jmp
xorl
cmp
jecxz
inc
lds
or
adc
mov
mov
pusha
jp
or
pop
dec
sub
pop
das
lea
addl
sahf
loop
add
xlat
sub
mov
bound
mov
mov
mov
adc
add
ja
jg
xchg
outsl
and
mov
jae
push
dec
cmp
je
push
jmp
movsb
gs
pop
stc
test
ret
mov
popa
cmp
popa
lock
mov
mov
ljmp
mov
mov
pop
cli
int
cmp
xchg
fwait
cmp
fnstsw
idiv
cmp
mov
dec
xchg
daa
cmp
or
cmp
add
stc
addr16
loopne
or
and
pusha
jns
in
mov
inc
test
ja
adc
loope,pn
xor
xchg
inc
imul
inc
sbb
movsl
jae
xchg
dec
and
loop
into
jmp
ss
out
sti
xor
sub
sub
into
ror
xchg
inc
mov
push
add
fsubrs
out
and
pause
sub
sbb
mov
dec
call
icebp
pop
out
movsb
cmp
xchg
sti
push
scas
addb
shlb
cwtl
jmp
jo
daa
bound
inc
xlat
inc
inc
mov
inc
call
shll
not
scas
jl
clc
inc
dec
mov
sbb
or
negb
sbb
add
nop
sbb
pop
push
out
dec
out
inc
sub
bound
mov
out
xchg
pop
dec
loope
pop
pushf
sbb
out
jno
jb
jl
ja
movsl
mov
fisubrs
lret
push
mov
pop
enter
mov
sbb
stos
mov
jbe
or
lret
divb
fmull
popa
push
xchg
imul
mov
cs
cmc
int
scas
std
add
xchg
pushf
and
xchg
in
enter
in
xchg
inc
sbb
mov
pop
dec
call
inc
push
repnz
dec
or
add
pop
and
push
jmp
mov
movsl
fadds
and
std
ret
stc
cltd
dec
dec
dec
sbb
into
fdivrl
outsb
xor
push
shll
hlt
sar
jo
xchg
add
test
xchg
xor
mov
lret
cmp
push
incb
in
jno
loop
mov
add
daa
pop
icebp
xchg
and
push
outsb
rorb
cmp
add
aam
int3
sbbl
push
jmp
or
pusha
cmp
out
add
aam
mov
testl
mov
faddl
movsb
stos
jns
leave
push
test
subl
pop
pop
jp
stos
lods
xchg
pop
aam
dec
mov
sarb
push
push
addb
imul
adc
sub
sti
lea
or
into
xchg
repnz
out
cmp
fdivrl
in
cmc
pop
push
dec
imul
lods
inc
push
mov
pop
sbbl
sub
dec
scas
std
in
das
rcrb
jge
fstps
ss
or
cmpsb
mov
fisubrl
vpsrad
jno
sub
or
xor
and
inc
xchg
cs
dec
mov
xchg
sub
sub
stc
nop
and
mov
inc
pop
scas
xor
call
cs
es
xchg
fbld
dec
push
in
aam
mov
jns
lods
xchg
cs
imul
push
daa
xchg
les
xchg
mov
fisttps
xor
repz
scas
loopne
stos
sarb
xor
pop
xor
loopne
push
push
popf
cmc
push
mov
loopne
mov
pop
add
in
scas
fimull
or
sbbl
cmp
das
jno
ss
int
mov
fnsave
into
lea
nop
pop
jne
pop
aad
and
jge
repnz
sbb
rcll
pop
xor
lds
mov
pop
enter
popf
adc
adc
push
mov
mov
xor
aad
jp
jbe
cs
adc
cwtl
or
cmp
mov
jne
mov
dec
shlb
sub
divb
in
les
lret
fs
imul
sbb
jo
or
add
inc
movsb
jl
aad
cmp
mov
xchg
out
addr16
ffree
out
sbb
mov
jne
or
pop
mov
ret
gs
hlt
mov
mov
jno
pop
arpl
xchg
fimuls
out
call
lods
inc
mov
or
aaa
dec
aas
ret
mov
fadds
xchg
fidivrl
out
dec
pop
xchg
dec
xor
bound
add
dec
xchg
in
int3
outsl
aaa
mov
pop
pop
dec
xchg
ljmp
mov
pop
mov
and
push
or
dec
and
je
inc
xchg
lea
jae
push
adc
and
int3
adc
outsl
lret
jecxz
cltd
popa
xchg
enter
int3
lret
aaa
mov
ret
lcall
jne
jecxz
jae
or
lcall
mov
movsb
int3
loopne
gs
jecxz
mov
sti
addb
arpl
inc
inc
rorl
leave
jb
ds
and
mov
jge
insb
scas
fidivs
jp
insb
jnp
sbb
xchg
sub
daa
pushf
jg
mov
mov
outsb
fldt
cmp
cwtl
and
je
jmp
cmp
cld
subb
push
std
cltd
cmpsl
ds
xor
decl
call
into
push
loopne,pn
and
aad
fisttps
mov
xchg
adc
jle
xor
js
aaa
shrl
rolb
ret
hlt
mov
lock
orb
adc
pushf
cmp
enter
lcall
jo
les
jp
mov
lods
out
cmp
dec
aad
imul
enter
out
mov
inc
xlat
pop
and
sarl
subb
mull
insb
sti
sbb
xor
mov
shll
xchg
imul
daa
outsb
cld
shll
test
testl
cld
push
xor
aam
fdivl
add
enter
jp
lcall
xchg
mov
js
cld
jnp
loope
and
mov
mov
andb
pop
jl
add
dec
sub
aas
mov
push
sbb
mov
add
lods
lahf
mov
cmp
ret
adc
lods
outsl
xchg
test
scas
jmp
andb
mov
fcompl
or
cli
pop
cli
add
mov
fcmovbe
jge
dec
iret
xchg
sub
push
loope
subb
mov
push
add
mov
notb
and
int
scas
rcl
pop
lods
and
cmpsb
scas
movsl
jg
dec
pop
xor
pop
mov
out
jp
pause
pop
rorb
movsb
insb
dec
xchg
jnp
mov
cwtl
mov
xor
fdivs
or
pop
cmpsb
es
cmp
lods
and
jbe
push
push
inc
jbe
xlat
cmpsl
dec
jae
clc
cwtl
stc
or
das
dec
push
or
ret
mov
stc
repnz
es
sbb
mov
rcrb
push
mov
loope
cmp
push
mov
mov
mov
mov
bound
add
int3
fmull
aam
leave
xchg
adc
adc
and
repnz
jg
xchg
sub
jns
pop
int
rol
aam
out
and
and
lods
mov
push
fcoml
dec
cmp
enter
jl
fwait
lahf
inc
push
jne
jne
pop
xor
fs
test
imul
mov
fdivl
fcompl
and
inc
mov
mov
cltd
push
add
enter
mov
mov
movsb
mov
std
push
mov
sbb
adc
sti
jge
loopne
test
sbb
arpl
test
push
lcall
xor
push
int
clc
in
mov
stc
sbb
xchg
and
sub
sbb
aam
fwait
dec
out
mov
xor
pop
insl
rorb
popf
loopne
mov
adc
cltd
cs
ficomps
lods
addr16
ds
cmp
xlat
sarl
mov
jno
inc
popf
aaa
inc
ret
sub
cmp
mov
mov
adc
lea
aam
or
int3
ficoms
cmpsb
pop
xchg
fdivl
sbbl
and
pop
cwtl
cmp
psubsw
std
add
jmp
insb
rcrb
mov
in
mov
mov
jbe
imul
js
popf
xlat
pop
sarb
push
in
fistpll
adc
mov
xor
or
out
clc
ja
das
push
and
fdivr
push
test
sub
int
xor
push
sub
xchg
decb
inc
scas
inc
mov
test
stos
int3
dec
fstpl
sti
stos
add
stos
cmp
xchg
mov
mov
out
sub
push
cmp
ljmp
imulb
cs
pop
dec
add
mov
out
test
or
and
cwtl
sahf
mov
push
lods
push
sub
leave
sbb
mov
mov
push
movsl
mov
int
push
aam
sbb
xorb
mov
lret
lret
dec
push
dec
mov
push
insb
mov
imul
add
es
dec
or
les
pop
cmpsb
fmuls
out
mov
mov
cmc
pop
movsb
or
mov
enter
mov
adc
icebp
jns
jl
sti
sub
push
jb
repnz
sbb
outsb
mov
movsl
xlat
mov
inc
clc
insb
adc
daa
inc
loopne
daa
out
jge
inc
aaa
or
xor
pop
pop
push
mov
add
push
and
mov
sub
in
lods
adc
arpl
mov
jns
pushl
test
sub
roll
and
shll
xchg
lods
orl
adc
cltd
jno
jecxz
cmp
negb
mov
cmpsl
xchg
sub
es
cmp
cmc
and
xor
mov
ljmp
mov
jle
js
sahf
inc
hlt
movsl
adcl
rorb
push
pop
bnd
adcb
in
clc
add
out
jae
sahf
or
hlt
ss
stc
pop
fsubr
mov
pusha
movsl
idivb
out
push
jmp
nop
jmp
mov
jne
test
dec
mov
add
daa
xchg
jnp
pop
test
add
fidivs
sub
leave
cwtl
sbb
push
mov
in
mov
icebp
sbb
push
mov
std
mov
jmp
icebp
sub
jne
mov
ljmp
fisttps
or
mov
test
cwtl
cmp
shlb
mov
adc
xlat
into
cwtl
out
xchg
sub
and
sti
mov
fsubs
jge
test
arpl
faddp
inc
mov
add
out
test
jg
imul
pop
and
add
sub
imul
dec
in
mov
push
xchg
ficoml
fsubrp
jno
push
mov
xchg
mov
insl
push
pop
dec
dec
adc
add
inc
stos
sub
xlat
xchg
sbb
sbb
out
dec
mov
xor
jmp
push
test
fimull
xor
dec
repnz
fidivs
and
cltd
cmp
jmp
mov
dec
or
jbe
imul
jge
add
add
pop
mov
and
sub
loope
pop
shrb
or
adc
lds
push
rcll
pop
dec
jbe
icebp
add
mov
add
bound
ss
xor
decb
xchg
cmpsl
lods
jno
or
aas
lret
pop
inc
mov
adc
push
rcr
jns
out
pop
repz
push
and
shrb
and
setg
xor
cmpsl
pop
dec
xchg
decb
lahf
xor
sub
cwtl
loop
iret
and
jmp
hlt
and
pop
inc
cmpsl
ds
push
sbb
insb
nop
mov
hlt
pop
stos
mov
jbe
or
lods
sub
inc
xor
fisubrl
inc
aaa
shr
cmpsb
pop
cmp
jno
das
mov
sti
xchg
out
addr16
pushf
or
inc
ds
popf
stc
pop
and
stos
jns
sbb
xchg
cmpsl
adcl
cmc
fisubl
not
insb
sti
ljmp
xchg
jae
aaa
and
mov
push
fnstcw
loope
xchg
xchg
mov
dec
dec
mov
jo
jge
mov
jne
jno
sbb
jb
jno
mov
movsb
xlat
lcall
aaa
inc
mov
inc
dec
and
mov
addl
and
nop
jae
aam
pop
cmpsb
and
inc
pop
jmp
or
inc
xor
dec
mov
bound
sbb
xor
sarb
inc
push
fwait
jno
sbb
cmp
jbe
rclb
mov
movsl
out
into
mov
inc
push
push
mov
adc
arpl
lcall
adc
insb
push
pushf
outsb
dec
popa
pop
clc
pop
push
fldt
adc
ss
pusha
add
pop
incb
and
roll
inc
push
clc
push
inc
fisubl
xchg
and
sahf
mov
xchg
add
mov
sub
lahf
mov
int3
pop
and
lret
outsb
ret
mov
xor
and
fistpl
mov
jmp
lret
jp
out
scas
dec
adc
dec
xchg
sti
pushf
mov
gs
scas
hlt
sub
cmp
stos
add
sbb
fdivl
test
and
mov
out
shr
mov
pusha
inc
jmp
cmpsl
jle
lret
cmp
jne
xchg
sbb
int
int3
inc
divb
adc
jmp
sbbb
out
cmpl
adc
add
into
xor
xchg
outsl
test
xor
std
dec
mov
pop
mov
push
sarb
sti
xor
clc
sbb
fsubp
cmp
bound
lahf
out
mov
out
sahf
shld
mov
inc
fcom
aas
dec
sbb
scas
leave
xor
mov
lret
fildll
push
loopne
ret
xlat
stos
sub
xor
pcmpeqb
jl
in
js
movsl
rcr
push
cmc
lds
xchg
je
push
jb
enter
mov
xchg
aam
imul
mov
ss
jb
sub
jnp
les
cmp
sub
xchg
outsb
icebp
repz
and
movsb
sbb
pop
cmpl
push
enter
gs
mov
pusha
aaa
push
in
push
jb
mov
or
lret
jo
cmp
pop
js
pop
adc
lahf
jb
aas
xchg
sub
fcmovb
loop
repz
cmpsl
imul
dec
cmp
mov
ret
mov
jae
adc
outsl
jle
inc
add
lcall
test
cld
movsl
adcb
sub
cmp
cmp
mov
inc
cmp
out
xchg
into
data16
jge
jne
and
jnp
adc
pop
and
pushf
scas
cmpsb
jnp
ror
fcoml
ljmp
xchg
lock
jno
adc
sbbb
in
inc
jb
push
leave
fistpl
xlat
add
mov
add
je
sahf
in
mov
jne
int3
arpl
and
jecxz
ljmp
movsl
mov
loope
or
scas
ret
or
sub
jns
fmuls
cmp
pop
nop
push
mov
push
mov
mov
xor
mov
jns
cmp
aas
xor
mov
test
inc
push
hlt
leave
add
enter
dec
rolb
add
sbb
ljmp
push
inc
fs
jbe
push
loope
xchg
loop
or
jge
mov
clc
cli
xor
push
jg
hlt
jl
mov
popf
pop
js
dec
loopne
mov
mov
pop
mov
gs
cmpsl
xchg
nop
and
mov
push
dec
push
mov
dec
mov
int3
cmp
push
push
mov
inc
cmp
sbb
movsb
movsl
mov
sarb
jg
inc
in
inc
fs
ds
pop
mov
sbb
insb
mov
mov
stc
cld
jmp
inc
popa
pop
movq
sbb
jo
movsb
and
xchg
cmp
add
dec
aam
sbb
popa
or
insb
jb
mov
sbb
dec
xor
mov
cltd
dec
arpl
mov
in
fsubs
movsl
cmp
jl
inc
outsb
mov
nop
clc
fstpt
dec
pop
fisubs
stos
mov
imul
mov
jle
push
mov
mov
clc
adc
sti
cmp
xorb
lock
arpl
dec
adc
inc
inc
pop
insl
dec
scas
fimuls
jl
dec
jl
push
pop
cmp
jp
clc
inc
xor
cmp
jno
cmp
mov
test
dec
mov
shl
push
pop
aad
sub
mov
and
pop
incb
pop
sti
dec
pop
aam
aam
mov
pushf
ljmp
xor
inc
out
xchg
xlat
enter
cltd
test
cmpsb
lock
incb
and
mov
cmp
imul
iret
std
pushf
iret
loope
cli
or
cs
mov
sbb
inc
inc
cmp
push
jno
cmp
push
arpl
and
or
sbb
leave
nop
sti
in
push
sub
mov
push
stos
addb
sbb
jnp
fnstsw
les
push
inc
dec
iret
mov
lret
sbb
jae
inc
lods
repz
pop
into
ljmp
repnz
dec
dec
lock
or
mov
pushf
pop
push
mov
mov
pop
sub
mov
out
enter
sbb
dec
jl
orb
int3
lahf
dec
cmp
pop
mov
or
sub
mov
stc
mov
shl
mov
xlat
cli
pushf
mov
dec
fdivrl
inc
in
jmp
ss
aam
jp
adc
lret
mov
daa
sub
mov
aas
cmp
mov
ss
push
testb
gs
push
hlt
and
pop
xchg
mov
lret
test
lcall
sbb
cmp
sbbb
pop
daa
adc
jmp
test
sub
aad
fimull
cmpsl
mov
fidivl
and
xchg
mov
sub
pop
xchg
in
xchg
pop
enter
imul
xor
dec
lahf
push
inc
aad
es
inc
fadds
ljmp
push
fisttpll
fs
int3
mov
je
adcb
xchg
scas
cs
and
jns
adc
pop
mov
add
lahf
jnp
loope
cmp
adc
leave
cltd
negl
sbb
popf
push
sbb
mov
jbe
sub
jo
cmpsb
and
xor
pop
shrl
sarb
sbb
xchg
nop
into
fs
notb
pushf
arpl
and
lahf
mov
sbb
jne
push
icebp
lds
xor
mov
push
insl
add
out
je
cs
nop
stos
mov
lods
inc
or
push
arpl
fisubrl
stc
or
insl
sbb
outsl
insl
mov
inc
sti
push
or
mov
lret
lds
cmpsl
testb
sbb
pusha
mov
inc
push
bound
mov
dec
inc
fs
hlt
in
jbe
xchg
adc
xor
icebp
in
mov
pop
mov
add
mov
mov
dec
fcom
jmp
sub
mov
fidivs
mov
dec
push
addl
xor
mov
push
imul
pushf
stos
mov
enter
shr
std
adc
out
lret
sarl
sarl
jl
inc
out
fidivs
bswap
je
cli
inc
popa
fdiv
xchg
xchg
sub
adc
pop
pop
mov
cmpsb
adc
cmpsb
ds
lret
lds
adc
stos
mov
adc
in
inc
dec
push
scas
inc
sbb
pushf
xor
test
ja
lods
fistl
inc
adc
fwait
pop
jo
mov
push
in
mov
movsl
adc
movsb
xor
outsl
roll
lea
cmc
add
in
or
inc
lcall
push
mov
ljmp
mov
iret
in
jae
push
lcall
xor
xorb
sub
adc
inc
nop
mov
inc
pop
jmp
sub
mov
fcmovnb
scas
push
iret
addr16
mov
push
addl
push
push
stos
jl
lea
movl
push
stos
mov
mov
ret
and
inc
mov
fnsave
jbe
cmp
mov
lret
xor
cmp
jb
ret
mov
xor
and
popa
push
inc
loop
or
stc
sbb
inc
jo
aas
pop
cltd
dec
sahf
inc
adc
pushf
jl
cld
mov
stc
push
aad
mov
adc
fnsave
shrb
in
add
addl
lds
mov
fst
or
xlat
movsl
fbstp
enter
xchg
dec
movsl
dec
fiadds
fsts
pop
jmp
dec
jo
inc
push
ds
daa
mov
xchg
mov
leave
fstpt
pop
sub
lds
and
test
mov
rorl
cmc
or
inc
adc
xchg
sub
ret
sbb
lods
mov
push
movsb
test
into
pusha
jae
loop
scas
dec
jecxz
and
push
cltd
hlt
or
sbb
push
popf
adcb
dec
dec
sbb
sub
addr16
cmp
xchg
adc
mov
sbb
xchg
xor
dec
addr16
and
sbb
insl
inc
sbb
lods
popf
scas
mov
hlt
fwait
push
lret
inc
sub
stc
je
enter
icebp
xlat
cmpl
pop
and
dec
loop
fs
or
xchg
cmc
int3
ds
popf
cmp
or
andb
icebp
call
imul
andb
push
lret
lea
xor
dec
cmpsb
cmp
inc
or
mov
mov
rcrb
push
rcl
xor
in
mov
incb
pop
sbb
sbb
jb
cmp
xlat
xchg
outsl
xchg
adc
sub
call
cmc
ja
and
ljmp
mov
rcr
sbb
mov
xlat
push
in
je
pmaxub
xchg
jae
jge
popa
repnz
mov
jecxz
aas
cs
dec
xor
pusha
xlat
sarb
xor
rorb
popf
cld
jecxz
movsl
pop
sbb
mov
push
or
adc
dec
aaa
cli
jp
daa
shll
jge
daa
xchg
mov
push
loopne
cmp
push
loope
add
pushf
das
shlb
les
leave
in
les
mov
mov
lahf
popf
sub
xlat
push
cli
lahf
jge
or
mov
testb
xlat
cmpsb
jnp
and
enter
xchg
or
ret
movsb
loopne
faddp
jne
adc
cltd
pop
js
movsl
jae,pn
inc
movsl
dec
inc
pop
clc
mov
clc
sbb
cmp
xor
pop
dec
iret
in
xchg
inc
sub
pop
jge
fimuls
mov
push
arpl
and
cltd
fisubrs
mov
loopne
fcoml
mov
dec
mov
mov
push
push
ret
and
pushf
sub
sahf
jne
leave
xor
adcl
xchg
mov
push
popa
cwtl
das
xchg
jns
inc
decl
movsb
jecxz
insl
mov
fcoms
pop
mov
out
cmp
lods
xor
jmp
outsl
daa
scas
scas
jns
dec
testb
decl
inc
xchg
or
ret
repnz
addr16
adc
aas
dec
mov
mov
dec
call
mov
jns
lahf
mov
dec
in
test
out
mov
jb
cmp
push
mov
aam
sbb
outsl
rcrb
out
lock
flds
or
sbb
cmp
push
xchg
pop
popa
or
mull
roll
in
lea
or
dec
xorl
insl
out
xchg
sub
mov
xchg
sub
inc
push
lahf
sbb
out
mov
std
loop
dec
dec
inc
aas
imul
out
insb
or
insb
scas
xchg
adc
jnp
int
ljmp
popf
push
inc
sti
pop
jnp
in
ljmp
mov
fprem1
fiaddl
repnz
inc
gs
pop
rcr
adc
mov
inc
or
cld
cmp
jge
imul
imul
push
setg
fstpl
fs
fsubr
data16
mov
add
imul
out
pop
or
mov
and
test
jecxz
jle
dec
or
sbb
pop
out
pop
and
xor
mov
jmp
mov
jge
sar
xor
inc
faddl
sub
aas
adc
outsl
jge
cmp
or
cs
push
rol
fsts
jns
subl
idivl
pop
js
jb
jle
add
js
nop
das
movsl
fisubl
stos
mov
push
mov
add
jnp
jo
sbb
cltd
push
stos
or
cmp
pop
cmpsb
mov
imul
xlat
iret
jo
jg
icebp
pop
cmc
and
imul
inc
xor
orl
mov
imulb
insb
sub
fstl
xchg
cmpsb
in
mov
xor
mov
sbb
xchg
insb
add
push
xchg
mov
and
ret
bound
jg
mov
out
mov
clc
sahf
inc
cmpsl
and
push
dec
inc
xlat
inc
inc
fadds
out
fs
cmc
xchg
shrl
sbb
fwait
jno
test
or
jo
add
popf
das
rcl
faddl
cmpsl
dec
fcom
pop
push
sub
test
pop
and
test
dec
movsb
cmp
fsubr
pop
pop
sub
mov
dec
inc
sahf
mov
ret
xchg
pusha
repz
xor
pop
xor
cltd
jo
int
not
shl
xor
xchg
pop
pop
dec
pop
in
aad
dec
push
jmp
mov
push
push
jae
rolb
push
rcl
and
pop
sub
pushf
cld
insb
or
jb
push
fstpt
sub
mov
mov
sub
mov
in
mov
xchg
sub
shl
jnp
loope
xchg
sti
fwait
or
push
cmpsb
in
mov
out
lds
faddl
nop
dec
jecxz
sub
movsl
iret
pop
push
nop
out
andb
test
pop
push
ret
jo
std
dec
mov
loope
and
xchg
inc
mov
mov
inc
loop
outsb
add
or
push
pop
inc
shll
add
fstpl
fbstp
or
xor
clc
nop
push
fwait
push
jb
js
loop
pop
adc
int
sbb
push
jmp
or
jo
ret
adc
push
mov
mov
lcall
inc
add
js
imul
aas
adc
clc
shrb
enter
push
mov
movsl
out
lcall
aas
mov
aam
repz
fidivrl
lahf
ja
mov
int
jecxz
outsb
out
mov
in
mov
mov
cmpsl
mov
sbb
cmpb
icebp
cmc
scas
aas
or
cmp
fbld
push
mov
cltd
pop
outsb
lahf
pushf
pop
shll
pop
subps
mov
in
and
dec
pop
stos
add
inc
jecxz
iret
cltd
cmpb
mov
jb
fldenv
adc
mov
test
daa
inc
dec
in
icebp
cltd
in
push
fs
jmp
test
insl
lret
adc
dec
test
fstpl
or
dec
sahf
sbb
test
call
dec
gs
pop
cltd
add
adc
mov
int
xchg
popf
je
cli
push
jae
xor
mov
imul
popa
adc
mov
sti
mov
push
push
push
mov
aad
and
aad
in
pop
xchg
jbe
mov
push
adc
rcrb
popa
popf
loopne
lods
cmc
cmp
imul
into
pop
or
adc
into
adcl
pop
les
or
in
pop
out
test
lret
jbe
pop
sti
setp
out
in
inc
sub
lret
and
pop
jo
mov
xchg
mov
push
sbb
push
xor
call
cs
inc
loop
jo
in
sbb
stc
xchg
xchg
xor
push
dec
inc
mull
scas
lea
aas
push
pop
lret
les
jle
cmpsb
call
aaa
into
and
add
push
mov
jae
push
or
popa
pushf
jns
into
adcb
scas
out
gs
xchg
or
lock
call
bound
jnp
mov
mov
sbb
call
push
xchg
sahf
cmc
mov
inc
ljmp
shlb
popf
or
lea
nop
dec
push
pop
dec
loop
jae
rclb
dec
pop
pop
push
loopne
daa
ret
int3
aam
adc
out
cmc
pop
pop
mov
fdivp
test
push
and
mov
icebp
or
out
sbb
dec
xor
cwtl
ret
xor
inc
push
in
sub
mov
adc
pop
rclb
mov
cmp
stos
call
hlt
jnp
int
jne
call
inc
push
cltd
mov
dec
loopne
jnp
test
aad
xor
jbe
inc
mov
test
scas
std
jo
cmp
mov
cvttps2pi
insl
in
fiadds
add
enter
sti
inc
repnz
lret
push
dec
xlat
mov
xchg
cmpsl
dec
cmpsl
xor
test
xchg
push
fadds
sbb
jle
and
cmc
push
inc
push
or
jecxz
pop
adc
arpl
mov
enter
jno
pop
pop
int3
pop
push
lea
aas
into
inc
in
test
lods
xor
call
in
jecxz
push
mov
sbb
push
and
adc
mov
sub
jne
cli
sbb
inc
test
jne
dec
pop
sahf
xchg
jp
ss
scas
insb
outsb
jge
pop
int
inc
repz
popa
mov
leave
pop
xor
call
sti
sahf
orb
jecxz
out
ret
movsl
loope
in
stos
xor
aam
jbe
fsubr
pop
sar
fwait
pusha
sbb
inc
lods
push
and
idivl
mov
jl
add
xor
aam
dec
adc
inc
lea
ret
xlat
bound
mov
mov
seta
sbb
leave
das
cltd
jo
sbb
into
cltd
inc
rolb
and
and
testl
idivl
orb
jae
imul
mov
cli
push
xchg
or
xorl
adc
lods
lods
jne
xor
es
icebp
popa
mov
mov
lret
fistps
jmp
and
sub
imul
fiaddl
fmuls
sub
inc
aam
addb
mov
jg
ljmp
fcomps
add
add
out
xor
out
int
into
arpl
add
jmp
loopne
lea
int3
add
add
sahf
rorl
out
xchg
adc
push
xor
mov
adc
pop
dec
xchg
xchg
pop
pushf
push
or
frndint
mov
popa
clc
dec
out
int3
and
pop
mov
dec
jecxz
cmpsb
out
cmp
fisttps
mov
mov
xor
pop
dec
out
mov
sbb
and
lret
loop
stos
repz
mov
or
notb
aam
or
stos
leave
or
fistps
shlb
movsl
shlb
dec
test
push
jne
test
xchg
das
cmpsl
ss
mov
adc
xchg
xchg
jno
lret
jnp
mov
popa
fdivl
ja
push
divl
cmpsb
cmp
xlat
test
xor
loopne
sub
in
xchg
add
adc
inc
pusha
fadd
stos
adc
push
scas
push
mov
js
lock
lods
mov
sbb
lcall
cmp
and
mov
pop
jge
push
ficomps
daa
mov
outsl
mov
fisubs
add
sub
and
xchg
jns
jmp
jle
fidivrs
jmp
lcall
and
xor
scas
xchg
push
insl
stc
xorl
cld
stc
add
dec
popf
jp
cmpsb
imul
cmpsl
imul
jno
mov
push
mov
adc
icebp
or
mov
push
aas
inc
and
push
mov
aad
into
push
xor
outsb
xor
and
dec
mov
sbb
ds
inc
jo
mov
adc
mov
xlat
mov
mov
rclb
outsb
ss
iret
push
and
ja
inc
add
icebp
mov
les
imulb
inc
ficoml
mov
jns
into
enter
mov
addr16
loop
jge
xchg
sub
push
imul
out
add
dec
sbb
push
cmc
add
adc
fdivrp
mov
jbe
das
rclb
sbbb
pop
adc
sbb
xor
js
dec
ficoml
call
or
sbbl
popf
test
iret
pop
jl
fwait
insb
mov
addl
xchg
lea
xor
out
adc
mov
pop
push
inc
adc
push
das
inc
aad
jb
aad
adcb
fs
sahf
mov
lret
adc
imul
roll
nop
daa
mov
mov
rcrb
stos
mov
dec
mov
js
add
jecxz
scas
movsb
mov
lret
repz
cmp
fnstcw
scas
das
mov
xchg
jne
jnp
call
pop
push
xor
pop
data16
iret
mov
sub
fcompl
pushf
movsb
mov
mov
das
lahf
test
rorb
pop
ja
rorb
pop
push
pop
jae
push
test
ja
pop
lods
and
leave
push
cmpsl
dec
inc
mov
xchg
inc
mov
jno
cmp
cmc
jbe
mov
sbb
cld
dec
inc
adc
xor
orb
pop
lret
pusha
in
and
add
ss
out
insl
pusha
inc
fistl
or
dec
xor
push
xor
pop
enter
mov
cmc
jmp
negb
add
je
inc
popa
pop
in
and
fldl
mov
imul
scas
adc
mov
mov
mov
mov
mov
shll
sub
mov
bswap
push
sbb
xchg
pop
orl
pop
es
lods
mov
gs
add
in
mov
inc
loope
lock
mov
testl
sub
inc
pushf
imul
and
aas
imul
sbb
bound
mov
jmp
cmpsl
sti
and
push
sbb
xor
cmp
fmuls
hlt
test
inc
popa
movsl
jnp
jge
call
mov
in
inc
sti
fyl2xp1
pop
scas
in
push
cs
stos
test
adc
popf
and
dec
cld
or
cmp
popl
mov
mov
ljmp
out
ficomps
mov
in
aas
and
int
mov
push
lds
mov
push
mov
adc
xchg
add
test
sub
in
mov
dec
push
aam
pushf
inc
rcll
cli
mov
movsl
add
push
mov
mov
sahf
ds
call
mov
jmp
lds
fcoml
xor
out
xchg
lock
push
fwait
pop
popf
pop
adc
or
jbe,pn
dec
push
xchg
cmpsb
dec
inc
cmpsl
cmpsl
subb
or
stos
inc
xorb
gs
mov
sbb
xchg
ja
frstor
push
jbe
push
jbe
mov
jne
xchg
outsb
pop
mov
mov
xor
jbe
adc
inc
or
sti
jno
mov
jae
cmc
jbe
in
add
jb
pop
frstor
fwait
mov
inc
fs
incb
push
test
or
enter
dec
xlat
and
filds
push
fisubs
or
imul
aad
out
cmpb
pop
aaa
push
inc
jl
dec
add
pop
js
mov
xor
sarl
stos
and
mov
push
lock
mov
pop
mov
sbb
pop
push
pop
std
push
pop
adc
sbb
test
dec
mov
sbb
sub
sbb
lahf
arpl
pop
adcb
shl
mov
out
or
das
popl
arpl
sub
xor
inc
mov
pop
mov
cmp
lds
rorl
inc
xchg
stc
cmp
add
jno
icebp
cvtdq2ps
adc
mov
fsubrs
mov
aam
hlt
jno
aam
pop
out
mov
jo
frstor
and
test
ljmp
sub
sbb
sbb
and
call
mov
lcall
sti
adc
xor
sahf
movsb
cld
rorl
sub
or
leave
fdivl
jl
or
xor
cmp
push
repz
xchg
adc
testb
dec
insl
add
mov
mov
inc
insb
jae
mov
sbb
jg
jl
pop
sub
mov
clc
mov
call
ss
cmp
sub
orl
stos
ss
les
cld
jnp
test
or
push
addr16
insb
inc
mov
in
lea
mov
or
sub
stos
add
xor
push
sahf
push
mov
in
pushf
xchg
cmpsb
ljmp
enter
xchg
scas
jno
aas
call
pop
adc
cwtl
inc
jbe
insl
stos
pop
data16
jne
idivl
push
mov
je
add
repnz
outsl
xlat
scas
and
enter
mov
sbb
call
or
and
aas
jae
dec
xor
mov
push
shll
loopne
push
scas
sarb
fnstsw
daa
fs
xlat
dec
mov
je
cmpb
mov
inc
stc
addb
mov
mov
test
jmp
lcall
nop
xchg
mov
mov
sub
pushf
xor
int3
arpl
test
mov
lar
je
test
jmp
inc
sbb
mov
pop
jmp
inc
push
hlt
addr16
lock
repz
scas
xor
xchg
xchg
ret
pop
mov
jle
into
scas
loope
or
lods
leave
fmuls
cmc
mov
jecxz
sbb
fucom
les
repz
mov
mov
add
dec
xchg
and
adcl
test
push
mov
fsubrs
add
push
jbe
movsb
test
add
sbb
out
sub
adcl
shrl
pusha
jnp
insb
mov
clc
test
outsl
and
ret
gs
add
leave
sbb
aaa
push
shlb
xor
addr16
sarb
or
sub
int
pushl
jecxz
xlat
push
repnz
ja
les
js
cmp
ficompl
inc
and
or
cld
jno
out
xchg
xchg
mov
insb
jmp
stos
xchg
lock
push
cmc
mov
mov
lahf
int
xchg
shl
jl
ss
shll
test
pop
sbb
cli
xor
dec
sti
mov
cmp
imul
xlat
mov
testl
and
cmp
cmp
cltd
rolb
sbb
mov
push
stos
into
sub
shl
add
jmp
or
bound
mov
lcall
or
push
jae
outsl
test
scas
xor
lods
sub
pop
fwait
test
rorb
imul
sbb
je
xor
pop
dec
filds
imul
lahf
cmp
imul
mov
adc
enter
pop
adc
les
push
ds
inc
iret
push
inc
push
add
xor
shll
repnz
xor
push
xlat
outsl
push
in
pop
mov
aad
push
nop
mov
xchg
std
cld
outsl
jmp
push
in
rcl
cmp
xlat
pop
mov
or
pusha
insl
les
ljmp
jmp
mov
mov
push
jno
mov
mov
jne
adc
int
push
stos
inc
xchg
sbb
jae
call
stos
adc
pop
adc
fimull
shrb
sti
fwait
mov
movsl
cmp
repz
or
ds
imul
pop
push
jo
xchg
int3
out
push
sbbl
test
push
add
out
inc
adc
hlt
sbb
jb
sub
push
sub
push
jle
ficomps
mov
xchg
enter
mov
push
mov
insb
lea
into
inc
clc
sbb
in
popf
sarb
mov
jl
iret
xor
cmpsb
rorb
cwtl
mov
push
adc
xlat
pop
dec
xchg
mov
adc
in
jp
stos
aas
fistl
sbb
negb
add
stos
subb
cmpsb
nop
ret
inc
xchg
sbb
mov
outsl
cmp
mov
mov
inc
ss
repnz
push
xchg
pop
call
icebp
imul
push
dec
mov
imul
cmp
adc
jae
fcompl
je
dec
std
dec
addl
rorb
movsl
cltd
test
pop
adc
adc
adcb
sub
inc
cmp
inc
jle
movsl
rcrb
imul
jae
lds
scas
push
int3
inc
inc
mov
lret
iret
sbb
sub
je
fmull
cmp
std
xchg
xor
or
mov
cmc
mov
andl
les
adc
aad
rorb
inc
repz
das
jns
jb
xor
je
and
sub
mov
inc
jl
push
pop
test
pop
ja
pop
mov
dec
test
out
mov
hlt
adc
fsubrp
mull
mov
test
xchg
out
mov
loopne
gs
cmp
or
scas
and
mov
push
and
aam
cmc
push
repz
shrl
shlb
pop
in
aas
push
push
mov
mov
pop
ror
inc
sbb
jns
add
in
adc
or
inc
jg
mov
loope
pusha
and
stc
pusha
dec
push
push
std
lea
loopne
cld
or
sbb
leave
mov
cmp
push
jmp
outsl
adc
inc
xchg
or
mov
push
dec
add
fsubrs
sbb
add
or
sub
cmpsl
jecxz
pushf
dec
jmp
dec
pop
mov
jo
imul
xor
mov
imul
cmp
and
aaa
insb
jle
adc
xor
fists
inc
nop
cmpsl
cmp
shl
cmp
fisttpll
scas
push
fwait
andb
popf
push
arpl
in
adc
cmp
je
ficoml
xorl
adc
mov
pop
std
mov
fnstenv
out
dec
hlt
cmp
or
jnp
push
pushf
out
sti
int
mov
insl
or
pop
dec
xchg
mov
in
adc
dec
xor
rcrl
jne
lcall
xchg
xor
decb
rcrl
push
jp
jp
pop
sub
xor
inc
movsl
mov
inc
ja
arpl
sub
stc
ffreep
notb
add
inc
xlat
pop
or
lret
out
call
push
push
dec
push
test
insb
imul
pushf
shlb
in
test
jl
clc
add
fdivrl
sbb
mov
stos
adc
adc
lret
ljmp
mov
arpl
mov
xor
xchg
push
add
fistpl
or
cltd
mov
subb
cs
sub
or
insl
cmp
pop
xor
mov
push
or
xlat
sub
int
aam
jo
in
mov
add
stos
or
xor
sbbl
inc
adc
xor
in
repnz
pop
lock
add
cmp
push
insl
pop
pop
sbb
jg
stos
es
aad
pop
cli
mov
outsb
outsb
out
mov
or
mov
push
and
out
cmc
xor
mov
popf
xor
and
ss
jo
aas
xchg
inc
negl
push
adc
aaa
mov
cld
mov
fisttpll
xchg
rcrb
mov
sbb
xlat
and
icebp
push
jle
pop
mov
shrl
mov
xor
std
sub
les
fwait
xor
fldcw
lea
fwait
sti
xor
pop
mov
push
ret
adc
push
cli
mov
fsubr
mov
xor
out
mov
jo
imul
rcrl
push
mov
ss
stos
ds
and
notl
sub
mov
leave
and
push
inc
pop
xor
and
loop
lods
xlat
cmp
cmp
push
inc
or
stc
push
sbb
shll
sbb
jmp
jns
xor
push
test
jg
and
arpl
mov
sbb
push
sahf
sub
decl
jge
rolb
pop
movsl
fs
jp
dec
mov
mov
adc
ja
sahf
jno
cltd
and
sub
jle
push
lea
pop
mov
pop
movsl
lret
push
jg
xchg
or
lea
jp
xchg
xor
jae
cmp
adc
cmp
out
std
pop
jecxz
lock
inc
add
inc
setl
pop
into
dec
jmp
movsl
iret
jo
lret
fiadds
mov
xchg
test
mov
xor
add
jo
jge
ret
mov
mov
jne
es
or
and
dec
sub
adc
daa
mov
mov
fwait
jle
aad
test
gs
mov
mov
scas
shl
pop
xchg
fsubrp
lds
or
adc
pop
jae
fistl
fists
push
jge
sub
les
loopne
leave
sub
pop
mov
or
imul
into
sahf
fdivrs
sarl
adc
sub
les
fwait
xor
out
jmp
ljmp
xor
not
imul
or
push
scas
cli
xor
sbb
rcrl
fwait
cmp
jo
repnz
daa
mov
inc
f2xm1
adc
push
push
jo
adc
pushf
push
cli
or
test
sbb
aaa
ja
faddl
xor
lret
pop
dec
rorl
ret
mov
jge
cltd
test
add
nop
fs
out
inc
mov
pop
cmp
xor
mov
jnp
dec
sub
xchg
jg
pop
mov
pop
cmp
nop
dec
mov
mov
call
push
push
and
inc
pop
fistl
nop
sub
sbb
je
jp
daa
mov
ja
cmpsl
lods
pop
jb
enter
dec
inc
sub
dec
leave
movsb
cltd
xlat
repz
dec
loope
fwait
aam
sarl
jp
or
mov
test
lods
ss
mov
pop
pop
jl
mov
lock
outsb
addl
pop
adc
imul
xor
in
push
sub
loope
sbb
dec
pop
cmp
push
nop
es
aas
push
repz
out
sti
push
fnstenv
jo
inc
mov
inc
shrl
mov
cltd
std
sub
sbb
mov
aam
rorl
popf
stc
xchg
adc
push
inc
inc
jge
imul
imul
jb
ret
lods
loop
ljmp
stc
fldt
out
leave
cmp
std
cmp
mov
mov
and
ret
lret
hlt
push
lods
call
fstpl
js
mov
scas
call
popa
fisubrl
pop
jbe
cmp
ja
mov
lcall
push
dec
scas
adc
out
xor
push
fsubrl
jns
fmull
adc
and
jecxz
mov
in
push
outsl
jbe
xchg
pusha
mov
rclb
jno
mov
ret
xchg
add
sbb
sbb
scas
arpl
adc
xor
cmp
ds
in
orl
mov
adc
lock
inc
push
shrb
aaa
lds
stos
out
push
je
jb
mov
loop
inc
push
imul
lods
dec
cltd
adc
ja
andb
dec
and
xlat
arpl
inc
into
dec
stos
inc
cmp
push
pop
adc
leave
pop
aam
cs
icebp
popf
xchg
xor
adc
imul
jmp
subl
leave
sub
shrb
int3
test
jmp
mov
iret
popa
jge
mov
lods
shll
sub
scas
pop
xchg
mov
int3
stos
std
lock
xor
or
or
es
and
mov
cmpsl
cmp
pop
jge
test
stc
pushf
movsl
ds
sub
or
lcall
fwait
addr16
push
loopne
xlat
cmc
add
idivb
cmp
stc
pushf
jge
iret
mov
dec
fwait
repnz
mov
test
push
xchg
mov
imul
xchg
mov
sbb
mov
dec
adc
sbb
stos
cmp
xchg
scas
pusha
push
loope
pop
je
int
cmp
adc
xchg
jne
xor
aas
pop
and
fwait
in
mov
mov
mov
jns
scas
jae
pop
pop
mov
imul
icebp
pop
pop
daa
outsl
inc
jle
rcll
bound
je
scas
inc
movsl
cmpb
fs
jmp
popa
mov
lds
lret
cld
xor
popf
stc
sub
inc
mov
lods
sub
sub
lret
pop
sbb
mov
iret
push
in
jmp
mov
xor
xchg
hlt
mov
pop
ret
cwtl
add
sbb
xchg
enter
sbb
dec
mov
cmp
enter
loop
dec
add
lret
ds
or
cmpsl
out
or
jnp
icebp
subl
das
jmp
mov
mov
repnz
and
mov
jo
inc
jmp
mov
subb
insb
mov
cmp
movsl
enter
xor
mov
inc
fcos
and
lahf
outsb
rcrl
sub
gs
pop
in
js
pop
hlt
or
in
xchg
test
jle
mov
jmp
hlt
or
pushf
iret
sub
push
test
push
hlt
jbe
loope
fsubl
divl
push
lods
push
sbb
pop
loope
leave
fwait
add
sbb
mov
pop
icebp
or
das
js
add
dec
cld
pushw
sbb
and
pop
sahf
adc
ds
mov
inc
pushf
stc
xchg
jp
enter
fstpl
dec
adc
imulb
push
jno
or
cmp
stos
andb
and
xchg
imul
je
js
inc
inc
add
cltd
je
cmpsb
pop
fisubrs
adc
pushf
stos
es
mov
pusha
out
add
jb
xchg
lock
dec
dec
lcall
int3
push
push
push
popf
subl
dec
jecxz
and
cmp
xchg
mov
sbb
push
mov
jmp
xchg
pop
add
push
in
repz
push
insl
ds
push
lods
adcb
sahf
leave
out
roll
in
cltd
ret
dec
inc
mov
fidivl
jae
inc
jb
mov
sbb
sbb
into
xlat
mov
mov
cmp
or
dec
cmp
addl
sbb
gs
out
xchg
mov
push
xchg
rcl
ret
add
cli
xchg
lret
inc
loope
in
sbb
push
pop
cmp
bound
bnd
dec
cmpsb
fidivrl
cwtl
jne
or
addb
les
jmp
pusha
popa
stc
adc
ss
imul
lods
test
push
rclb
pop
xor
mov
and
mov
dec
cmp
shl
sub
jecxz
mov
push
movsl
add
or
fnsave
push
dec
je
mov
imul
int
add
pop
rep
jmp
fstl
imul
lods
lar
fnsave
shlb
pop
jg
jbe
and
mov
jo
xchg
mov
aaa
repnz
adc
imul
jnp
flds
jbe
das
mov
data16
dec
add
inc
sub
push
mov
adc
aam
cltd
sbb
sub
cmpsb
xor
je
sub
pop
adc
jle
enter
testl
loop
cs
lahf
es
jbe
bound
cmc
mov
mov
ret
imul
leave
and
mov
lret
xchg
outsb
loope
and
je
hlt
pop
popa
dec
xor
jnp
mov
sti
mov
mov
std
xor
jp
pusha
notl
jne
add
lcall
cmpsl
out
sub
insl
lock
inc
inc
mov
jg
add
lcall
mov
cmpsb
mov
jnp
sti
push
jnp
add
imul
xor
push
leave
mov
mov
mov
pop
push
or
mov
adc
rorb
mov
fisubl
cmpsb
pusha
sti
inc
dec
and
dec
push
inc
pusha
subl
fs
test
cmc
into
mov
sub
jmp
orl
adc
int3
xor
mov
mov
xchg
aas
cli
sub
dec
sbbb
ret
push
mov
mov
mov
push
xchg
sub
jecxz
cmpsb
jge
add
sbb
and
inc
push
ljmp
pop
ds
pop
cmc
pop
or
add
cmpl
cmpb
or
ja
or
mov
add
mov
scas
inc
sahf
in
add
jne
xchg
and
push
mov
inc
push
lods
jmp
icebp
xor
stc
or
adc
test
add
stos
inc
movsl
jl
lret
rcrb
jb
push
loope
add
mov
fdivr
mov
or
sub
push
stos
test
pop
lods
push
sub
dec
dec
sbb
mov
sarb
sbb
mov
dec
xchg
jle
lds
mov
popa
mov
inc
scas
pusha
jnp,pt
jo
xor
sbb
or
test
in
fstpl
cmp
enter
shl
ror
loop
dec
add
mov
sbb
mov
dec
cmp
add
in
andb
aad
push
in
pushl
das
sub
je
push
cwtl
xchg
jne
xor
pop
cmpsb
je
xchg
bnd
sub
sbb
in
scas
jbe
cmp
into
cld
pop
jne
sub
push
in
push
xchg
add
je
mov
sbb
movb
das
insb
mov
cmp
jo
mov
xlat
sbb
cmp
xchg
mov
inc
inc
mov
push
shl
test
and
or
jmp
mov
add
loop
lcall
sbb
in
mov
lock
hlt
mov
cmp
into
cmpsl
pop
lret
mov
fcmove
xchg
hlt
les
sub
mov
rcll
cmp
lods
add
enter
lds
jae
and
lods
xchg
inc
jle
fidivrs
dec
and
push
insl
je
lcall
add
add
sub
fwait
push
mov
push
mov
add
in
sub
mov
jno
mov
imul
mov
test
ret
xchg
fsubs
ficoms
cmp
xchg
add
jmp
std
scas
out
jg
add
cmp
mov
ret
pusha
pop
js
push
sub
inc
mov
mov
adc
fbstp
ds
lcall
das
push
dec
loopne
imul
ja
and
popf
ret
fiadds
push
popa
add
stos
sub
iret
push
jb
icebp
testl
out
cld
cld
hlt
adc
dec
mov
mov
ret
pop
jl
add
or
cmp
aad
add
inc
imul
idivb
xor
pop
adc
mov
iret
sub
jns
dec
stos
hlt
mov
cmp
es
sbb
std
cltd
ljmp
pop
fdivs
pop
push
or
cli
xor
es
xchg
cli
or
in
mov
insb
mov
push
rep
jg
jno
shrb
adc
adc
mov
fmul
sbb
fcoml
xor
mov
mov
or
mov
ja
and
mov
in
nop
ja
jmp
mov
fs
cmpsb
jle
fdivrs
mov
fwait
loopne
test
jnp
ljmp
out
jl
stc
adc
cmp
lret
push
test
es
cmpb
jle
mull
jg
inc
push
cli
test
and
bswap
jmp
ljmp
orl
cmp
inc
stc
mov
push
pusha
stc
nop
cs
mov
jg
arpl
mov
mov
test
and
stc
jge
mov
int3
ret
pop
call
sbb
fcoms
loop
sbb
pop
sub
or
in
jecxz
testl
xor
ljmp
mov
out
inc
xor
xchg
sub
push
mov
cmp
mov
and
cmp
add
push
roll
and
pop
arpl
aaa
mov
int
mov
mov
sub
loope
cmpsl
mov
aam
sub
pop
dec
add
mov
repz
cmpsl
mov
leave
cmp
rcrl
mov
mov
ret
sbb
mov
mov
mov
cmp
push
cmp
xchg
sub
cmp
pop
push
in
clc
fidivrs
jae
sbb
sbb
cwtl
pop
push
sub
inc
add
xchg
add
aam
and
sbb
test
jbe
mov
xchg
xchg
sub
add
sbb
and
push
and
mov
and
rcll
data16
scas
clc
inc
addl
pop
popf
imul
sbb
xor
lahf
xor
jo
mov
mov
sbb
cltd
fstpt
iret
mov
fsts
or
out
mov
fldt
jns
xor
dec
jne
xchg
data16
fwait
cs
mov
push
sbb
mov
xacquire
jne
test
sbb
cmc
dec
loop
pop
xor
iret
fwait
and
pusha
push
inc
fiadds
imul
xchg
mov
idiv
mov
cmc
ret
shr
xor
xchg
xchg
gs
xlat
cs
add
pop
jmp
or
fnstsw
add
scas
cmp
cmp
sti
sub
mov
xorb
adc
inc
mov
inc
xor
pusha
ror
lahf
idivb
es
and
js
test
push
mov
pop
inc
test
pushf
push
mov
loope
gs
mov
push
inc
xchg
mov
inc
sarb
mov
or
jmp
jecxz
aad
hlt
aas
pop
cmpb
mov
loop
add
icebp
adc
push
cmpsl
xchg
fnstsw
test
into
fmul
js
adc
loopne
jle
cltd
pop
test
aas
sbb
in
fdivrs
nop
pop
sbb
pop
out
dec
pushf
out
pop
shll
add
icebp
xchg
fistps
mov
xor
xor
test
rolb
mov
sbbb
out
lea
mov
ja
loopne
adc
mov
iret
sub
movsb
in
push
gs
or
mov
sahf
cltd
xchg
test
and
sbb
xor
sbb
icebp
mov
mov
shld
lret
jmp
dec
and
aaa
mov
and
xor
in
xchg
mov
add
ja
jge
leave
pop
pop
in
xchg
sub
lret
hlt
pop
je
aas
sbb
mov
mov
pop
mov
outsb
xlat
rorl
pushf
add
mov
mov
push
and
scas
in
aas
adc
hlt
mov
jne
test
call
xchg
or
dec
dec
les
mov
test
cwtl
push
outsl
imull
aas
inc
cmp
mov
ret
les
mov
pusha
loope
lret
jns
cltd
mov
add
scas
adc
popa
dec
outsl
mov
xchg
pusha
and
pop
pop
lret
cld
sub
jge
cwtl
sub
or
test
popf
aad
cmp
jmp
xchg
push
or
mov
cmpl
nop
shlb
sbb
mov
mov
dec
out
dec
xor
lahf
nop
mov
aad
xchg
js
lds
pop
push
mov
enter
rol
dec
cli
ds
gs
jg
inc
fldl
mov
push
sub
xchg
sbb
jo
daa
cli
pop
pop
xlat
out
imul
cmp
incb
sti
pop
out
adc
push
mov
fadd
and
cmpsl
inc
xchg
mov
lods
add
xor
aas
dec
adc
sbb
pop
xchg
push
jle
iret
outsl
mov
shrl
jg
xor
xchg
pop
aaa
mov
sbb
and
xchg
xabort
call
pop
imul
aad
loope
push
sti
xchg
add
lret
mov
or
push
jmp
push
mov
call
nop
or
xor
imul
inc
mov
dec
mov
push
inc
mov
outsb
cmp
inc
pop
std
adc
sbb
out
lret
test
dec
jbe
stos
xchg
jmp
xor
jae
push
push
pusha
dec
mov
movsb
sub
movsl
add
daa
inc
je
popa
xchg
ds
sbbl
inc
mov
or
insl
dec
enter
mov
test
mov
inc
xchg
sub
or
cmc
in
push
repz
arpl
mov
dec
mov
scas
sub
add
xor
adc
popa
add
jmp
aas
shlb
leave
and
sbb
test
ja
add
fisttps
push
ja
fisubrl
xchg
dec
inc
xchg
test
mov
push
repz
out
shlb
outsb
ret
bnd
lods
lahf
dec
dec
lahf
mov
xor
xchg
in
es
adc
fs
mov
inc
sbb
push
mov
js
add
call
jae
ficomps
dec
movsb
cmp
out
add
mov
call
sub
outsl
les
fs
mov
mov
daa
mov
sbb
subl
mov
mov
xor
mov
dec
int3
gs
outsl
mov
fdivr
jnp
sub
stos
addr16
pop
dec
lcall
loopne
sbb
cli
in
mov
or
adc
push
inc
push
mov
inc
andb
xchg
cwtl
mov
fcmovne
add
sub
lods
xor
test
orl
pop
daa
mulb
inc
dec
ret
and
adc
sti
jmp
jb
xchg
and
or
dec
pop
push
test
sub
fmuls
loop
xchg
mov
out
fisubrs
and
dec
mov
lock
testb
cltd
mov
and
and
inc
mov
movsl
leave
and
test
adc
or
mov
cwtl
jno
dec
imul
jns
dec
mov
adc
sub
adc
mov
bound
sbb
and
js
cmc
pusha
leave
and
stos
test
adc
or
notl
imul
fpatan
dec
mov
sbb
xchg
cs
mov
sbb
add
aam
mov
xor
mov
aam
push
lret
hlt
pusha
push
mov
aas
pop
jge
jnp
repz
add
in
adc
xchg
dec
stos
shll
xchg
sbb
cmp
cmp
dec
cwtl
mov
pusha
mov
mov
test
lcall
cli
mov
sub
dec
xor
shrb
cmpb
aad
xlat
cmp
divb
jno
mov
testb
enter
mov
ss
xchg
jmp
mov
out
sub
insb
xlat
mov
int
pop
iret
inc
dec
jge
test
imul
pop
jo
xchg
xchg
push
add
jbe
jge
push
adc
xchg
xchg
sbb
fs
int
lret
movsl
sahf
es
pop
mov
add
pop
xchg
sub
cmp
cmp
hlt
test
xchg
mov
pop
pop
stos
mov
sbb
sub
pop
lock
mov
jbe
ja
mov
sbb
mov
jle
sahf
rorb
or
arpl
mov
sbb
ret
mov
addr16
lods
xchg
adc
sbb
bound
aaa
into
push
adc
enter
outsl
or
jae
dec
lret
mov
leave
mov
movsb
push
xor
cmpsl
sarl
dec
andl
xor
arpl
push
push
lcall
inc
xlat
jl
mov
or
pop
adc
add
pop
repnz
lock
imul
cmp
test
sub
nop
pop
notl
ret
lahf
and
mov
popa
xchg
cmp
imul
inc
aas
lods
mov
mov
jecxz
test
outsb
js
cmp
scas
mov
rol
clc
call
xchg
mov
gs
loop
insb
stos
and
cld
xchg
mov
test
xor
bound
adc
inc
fmull
scas
arpl
js
mov
xor
ds
xor
mov
arpl
sub
jno
sub
iret
data16
xchg
das
hlt
fsubr
sti
int3
push
mov
in
rcr
mov
std
in
xchg
sub
or
sub
cltd
roll
add
loope
in
test
add
shrb
addl
femms
sbb
or
push
sub
mov
mov
int3
lods
sub
in
sub
out
or
repz
dec
mov
sub
cltd
jb
das
not
repnz
popf
push
sub
pop
adc
outsl
popa
clc
mov
dec
jg
adc
push
or
out
and
adc
inc
lock
lea
adc
stc
je
andb
mov
xchg
test
test
lock
imul
in
cld
repz
xor
scas
push
adc
jg
fadd
lock
aad
cli
jl
xor
push
call
dec
loope
mov
imul
int
or
gs
cs
or
mov
stos
shrl
cmp
icebp
mov
pop
jno
adc
and
ja
add
fistpl
and
or
adc
aam
sbbl
pop
cmpsb
imul
sahf
loope
cmp
out
ffree
sbb
xchg
outsb
cmp
int
cmp
ljmp
mov
sbb
inc
xchg
pop
xchg
xor
pop
inc
cld
pop
add
pusha
and
xchg
popa
cld
xor
pop
xor
fstps
sbbl
cmp
ret
arpl
jns
shrl
jnp
mov
lahf
rcrb
cmp
popf
xor
inc
pusha
and
pusha
sbbb
cmp
ds
jo
jb
or
dec
mov
jl
adc
sub
mov
insb
inc
fwait
mov
test
add
jbe
fnsave
mov
int
sti
pop
xchg
pop
ja
or
lds
adc
pushf
jmp
or
sub
insb
fwait
cmpsl
cmp
cmp
mov
loope
mov
int3
push
int3
arpl
std
repnz
dec
mov
enter
or
es
scas
add
push
icebp
testl
rcrb
or
mov
xchg
rclb
addr16
jmp
stc
sbb
adc
loope
inc
push
movl
lds
jl
loopne
dec
in
cmp
leave
movsl
out
stos
pop
inc
xlat
inc
xchg
in
sbb
cmp
push
cmpsb
jne
mov
add
cmp
popf
insb
mov
stc
jmp
fildl
or
and
cmp
pushf
test
cmpsb
xchg
mov
pop
add
fsubrs
inc
pop
divb
rcrb
mov
jge
inc
fsubs
es
mov
or
stc
insl
lcall
dec
jl
fisttpll
out
xlat
mov
mov
in
scas
insl
loopne
loop
imul
push
loope
ja
pop
cs
add
fs
xchg
adc
stc
pop
mov
lret
cmpsl
jns
shrb
adc
fidivrl
test
push
push
sub
scas
test
inc
ret
xor
adc
lcall
cmpl
mov
xchg
movsl
mov
mov
sub
iret
orb
jl
mov
filds
mov
ljmp
push
mov
jp
adc
jo
sbb
xor
aas
cmpsl
jne
pop
lods
lea
rcrb
xor
push
iret
push
or
mov
mov
fst
sahf
xchg
cs
jb
xchg
cvtdq2ps
add
stos
test
mov
pop
adc
sub
jecxz
fdivr
jae
fnstsw
in
insb
loopne
mov
dec
mov
bound
mov
cmpb
outsl
cs
xlat
or
leave
xchg
dec
mov
pop
repz
outsl
jge
rcll
and
pop
js
inc
mov
js
call
fldcw
test
popf
and
rol
push
imul
or
test
sar
sbb
roll
push
testb
push
pop
cmp
add
addl
push
insl
enter
or
ds
hlt
rep
loop
mov
sub
cld
dec
ret
outsb
in
jmp
adc
adc
add
mov
mov
xchg
adc
roll
lahf
xchg
lret
adc
xchg
adc
sbb
pop
repz
xchg
cmp
frstor
xor
pop
xor
mov
and
or
push
imul
clc
fwait
jg
pop
or
das
inc
sbb
mov
push
mov
enter
sbb
rcrl
push
jmp
aam
sahf
cltd
pop
int3
arpl
mov
outsl
daa
mov
mov
add
pop
nop
mov
sbb
adc
jge
iret
adc
aam
add
lcall
sub
cmp
int
lcall
mov
jge
cmpsb
push
lods
in
sub
fidivrs
mov
imul
lock
mov
dec
add
pop
scas
xchg
imul
movsl
fmuls
into
test
mov
mov
arpl
xchg
mov
test
jno
adc
push
jl
or
pop
fwait
lods
inc
ds
pop
int
test
xor
sub
loopne
mov
pushf
mov
addb
push
mov
sbb
and
add
inc
xlat
mov
stos
pop
cmc
fldt
gs
add
frstor
jmp
inc
cltd
lcall
pushf
das
rolb
mov
mov
stos
push
push
mov
int3
ret
or
in
and
daa
mov
push
mov
test
fucom
xor
xchg
pop
scas
les
xor
inc
movsl
int3
lahf
push
cmp
jns
jne
push
cmpsl
xchg
inc
sahf
dec
insb
and
mov
sbb
and
dec
fists
pop
cmp
and
fidivrl
js
inc
mov
jmp
or
sub
push
aas
inc
push
addr16
loopne
mov
push
xchg
gs
adc
je
sub
cmp
jbe
loopne
imul
jmp
pop
dec
subl
lret
xchg
add
jbe
xchg
mov
and
in
movsl
sahf
push
add
mov
in
in
mov
mov
mov
fbld
add
imul
inc
les
cmc
ds
jp
clc
add
aad
out
gs
enter
inc
add
inc
fs
push
xor
cmc
daa
dec
and
inc
cwtl
xchg
inc
stos
inc
arpl
pop
sbb
call
hlt
mov
aas
enter
cs
adc
arpl
loopne
xchg
popf
ss
push
add
int3
dec
inc
jb
adc
mov
xchg
or
mov
shll
outsb
shlb
aam
std
mov
fldl
xor
jno
mov
jns
cwtl
sub
ds
cmp
loope
cmp
add
inc
popf
lret
xor
popf
mov
xor
adc
ss
sub
sub
sub
test
dec
sti
xchg
clc
cmpsl
lret
sub
pusha
sbb
or
xchg
inc
pop
stos
xchg
test
jne
pop
mov
stos
mov
std
add
and
ja
ret
repnz
loopne
adc
dec
mov
adc
add
aam
sbb
pop
ja
iret
stos
mov
fucomi
mov
pop
cmc
stos
xchg
shrb
push
jnp
cmpsb
mov
test
imul
and
xchg
fsubrl
shlb
cmp
insl
add
out
inc
call
enter
jbe
out
push
daa
orl
jns
enter
imul
xchg
scas
ja
adc
inc
sbb
push
jp
iret
adc
jb
pop
imul
in
adc
sub
popf
stc
mov
aas
xchg
lds
and
test
xor
fildl
pop
arpl
ss
stos
cltd
aam
stos
xor
cmp
rclb
inc
leave
mov
dec
dec
dec
mov
lods
fcomip
les
fnsave
push
in
push
xchg
ds
lods
inc
lcall
mov
pop
cmp
adc
adc
pushf
push
aas
mov
pop
pop
lds
int
sbb
fsubr
dec
mov
mov
mov
mov
fwait
pop
xchg
fstl
fists
dec
out
std
pop
and
inc
sbb
clc
push
jmp
in
jo
iret
ss
cld
xchg
leave
push
push
push
add
in
sbb
jl
xchg
nop
fmull
clc
jne
out
jo
scas
push
out
dec
xchg
inc
std
xchg
jbe
in
sub
ss
test
int
sbb
jo
dec
pop
das
xchg
in
jg
xchg
pop
mov
push
xchg
out
out
add
dec
dec
lods
iret
jo
mov
cmp
push
adc
ret
cmpsl
mov
loop
push
adc
cmp
push
jno
cmp
xchg
xchg
and
movsl
int3
data16
push
popa
jae
sbb
mov
data16
jg
nop
cmp
mov
mov
xchg
xchg
int
insb
pushf
jg
ret
push
push
hlt
mov
and
lods
in
test
inc
adc
lea
mov
or
or
loope
out
imul
jl
cmc
sub
jle
add
xor
outsb
es
out
lret
pop
cld
scas
sbbb
pop
repnz
in
pop
jp
add
imul
xor
mov
jp
fbld
push
test
ja
dec
xor
test
insl
xor
mov
arpl
jle
lds
sbb
hlt
xchg
cld
popf
xor
xchg
push
mov
xchg
test
outsb
mov
mov
sub
enter
les
add
test
cs
push
add
lret
dec
in
xchg
xor
rcll
inc
stc
cmpsl
jne
stos
inc
mov
adc
inc
mov
cwtl
cs
inc
xor
or
cmp
push
xlat
pusha
popa
add
ret
aaa
cmp
sub
sti
rorl
cs
cmp
inc
loop
pop
shrb
gs
adc
mov
into
push
mov
in
dec
xor
jae
sbb
mov
leave
jp
out
sbb
stos
out
jns
roll
cmpsl
cwtl
test
cmc
jmp
mov
rorl
or
mov
add
idivl
lret
imul
xchg
shrl
hlt
arpl
mov
jne
pop
arpl
aam
mov
jg
je
sub
pop
lods
xchg
pusha
mov
fsubr
vucomiss
add
sub
jne
aaa
lock
cmpb
pushf
xlat
dec
inc
clc
inc
clc
in
cld
sub
test
inc
inc
fnsave
in
push
repnz
xlat
xchg
xlat
shll
xchg
dec
ror
ret
mov
loopne
loope
insb
sbb
notb
jmp
lds
or
add
and
mov
mov
divl
scas
cmc
aam
push
add
xchg
push
pop
mov
push
int
inc
xor
stos
mov
rol
cmpsb
pop
in
std
xor
and
or
lahf
ss
pop
or
push
mov
pop
sub
sbb
cmc
dec
sub
fcoms
in
adc
sti
sbb
icebp
and
clc
sti
inc
fistps
std
jo
ja
repz
jmp
mov
stos
cltd
std
test
adc
into
sub
sbb
out
movsb
add
lods
sbb
out
mov
cmpsl
and
in
sbb
pop
nop
cmpb
scas
dec
lcall
xchg
lcall
inc
push
jmp
pop
jne
sti
adc
imul
dec
test
movsb
sub
inc
movl
cwtl
test
rolb
pop
mov
inc
cld
hlt
jbe
call
lcall
lahf
sub
push
jl
es
mov
or
mov
out
out
and
insb
scas
mov
aam
test
mov
shll
push
out
jmp
push
cmpsl
push
adc
or
jmp
mov
mov
shlb
loope
cmpb
hlt
dec
mov
or
mov
popf
imul
icebp
or
cmp
das
jne
mov
int
stos
xor
and
mov
out
bound
hlt
mov
add
rcrl
bound
mov
call
movb
xchg
call
in
pop
push
mov
in
sbb
inc
push
push
xchg
movsl
sub
cmp
fimull
adc
not
in
mov
cltd
and
xor
hlt
add
push
sahf
and
sbb
add
xlat
push
faddl
testl
roll
in
mov
and
imul
add
xchg
mov
pop
sbb
vmptrld
out
xchg
xchg
int3
shlw
dec
mulb
mov
cmpsb
mov
add
xchg
pop
lods
jp
xor
cmp
imul
repz
jb
ret
out
arpl
mov
push
cwtl
das
lret
mov
mov
mov
ds
outsb
rclb
jp
cltd
and
clc
ror
push
es
ljmp
sbb
xor
ss
sub
sti
xchg
ds
xchg
xchg
sbb
dec
loop
push
xor
xchg
or
and
jp
inc
mov
rep
pop
test
enter
xor
push
mov
pop
stos
stc
das
dec
dec
scas
sbb
push
cmp
lea
mov
cmp
mov
out
mov
fistps
sar
xchg
mov
add
jge
ja
cmpsl
call
or
ja
cmp
xchg
aas
push
mov
or
pushf
push
lahf
out
mov
outsl
daa
icebp
mov
jno
pop
sbb
fs
insl
add
sbb
push
popf
mov
or
cmpl
xor
dec
push
out
call
adc
pop
pop
dec
int3
loope
xor
out
arpl
cmp
inc
pop
xor
fwait
mov
insb
and
add
or
push
jae
jge
inc
negl
jg
lret
push
fsts
movsb
test
repz
outsb
fdivrs
std
imul
push
mov
nop
jns
loop
add
sbb
loope
out
add
mov
cmpsl
fdivrl
movsl
sbb
test
sbbl
jge
mov
or
or
bound
lods
shrl
repnz
mov
ret
or
sbb
mov
mov
pop
push
lods
inc
mov
mov
jb
fstpl
mov
add
rclb
inc
pop
jbe
aas
inc
xchg
pop
dec
cmp
enter
shrl
or
jle
test
sarl
inc
lods
sbb
jecxz
decl
sbb
cmp
out
mov
mov
fimull
mov
loopne
int
pop
cmp
pusha
and
fidivs
jecxz
popa
subl
mov
jle
push
inc
mull
iret
pop
out
add
ljmp
pop
fisubl
jecxz
stos
add
jnp
mov
dec
in
xchg
cltd
test
cmpl
xchg
shr
popf
loop
iret
shlb
mov
and
ud1
push
stos
pop
or
dec
inc
insl
loope
mov
mov
dec
fs
shrb
ljmp
rcr
mov
jb
stc
pop
cmp
ret
mov
ljmp
and
test
push
mov
inc
mov
cmp
sbbl
loopne
insb
xchg
and
mov
or
icebp
insl
fnsave
arpl
test
xor
testl
pop
repz
xchg
in
push
clc
in
and
into
pusha
bound
sbb
imul
sub
mov
push
xor
pop
dec
jo
cmp
dec
popf
orb
insl
or
fsubrs
inc
jmp
cli
icebp
repz
leave
loope
imul
push
pop
inc
ret
lds
insl
mov
push
jmp
scas
pop
adc
lret
cmp
lahf
push
xor
in
xor
mov
mov
in
sbb
out
xchg
icebp
push
pop
inc
and
jp
stc
xchg
pop
sbb
sub
add
fldt
scas
fstpt
pusha
negb
pop
push
dec
xchg
imul
cltd
fidivrs
push
pop
ret
xchg
dec
sbb
push
or
pop
jns
xor
mov
inc
jmp
inc
xorl
imul
jmp
sti
cvttps2pi
mov
daa
fwait
stos
cmp
mov
imul
mov
adc
out
mov
and
bound
mov
dec
andl
mov
filds
sub
mov
and
sti
shlb
popa
dec
cmpl
ss
stos
sbb
adc
ds
xlat
push
sti
pop
out
sub
js
jbe
sbb
xor
inc
outsb
add
cmp
lea
das
cli
rcr
add
movsl
pop
pop
sub
inc
fwait
bound
inc
xchg
adc
jl
ja
clc
sub
lds
mov
cmp
dec
adc
xchg
push
mov
shlb
sub
sahf
pop
popf
icebp
and
push
xchg
dec
std
lds
pop
mov
lcall
sbb
mov
mov
lds
xchg
dec
jecxz
adc
les
outsl
ljmp
sub
rcl
xor
fdivrs
adc
adc
std
and
mov
imull
jle
and
popf
xchg
push
fwait
jbe
dec
sub
mov
mov
inc
out
sahf
xor
or
out
rorl
xchg
imul
lock
popa
data16
push
fidivs
enter
xchg
jg
rcll
push
add
dec
fiadds
loopne
fsub
out
out
push
xor
inc
pmaddwd
leave
mov
mov
or
ret
enter
and
stc
or
divps
fnsave
fwait
xor
push
loop
add
fstpl
push
and
pop
jg
pop
setp
sub
scas
mov
xor
jo
mov
push
mov
ret
cmp
dec
xchg
mov
sub
mov
scas
jle
sbb
inc
pushf
cmpsl
cmp
sbb
pop
loop
mov
das
cmp
mov
test
stos
inc
sti
cwtl
add
int
mov
inc
orb
gs
loope
ds
hlt
add
ret
ret
mov
dec
cmp
mov
dec
mov
aam
jecxz
mov
xchg
pop
lods
dec
mov
cmpsl
mov
add
cmp
ljmp
inc
push
fsubrp
ss
movsl
cmp
dec
aad
repnz
inc
ss
sbb
xchg
xor
pusha
test
lcall
push
in
rolb
in
bnd
mov
leave
mov
enter
jno
cmp
bound
in
mov
and
add
jns
xor
inc
mov
xchg
add
cmpsl
cmp
test
cwtl
fnstenv
sbb
fiaddl
push
cmpb
mov
mov
shlb
and
repz
in
popa
lret
pop
xchg
mov
jno
jg
xor
in
sbb
movb
jecxz
and
adc
fnstenv
je
repz
ret
testl
inc
xor
dec
xchg
xor
shll
mov
mov
dec
sub
xor
loopne
xlat
adc
mov
insl
mov
lahf
sub
mov
sbb
or
mov
out
scas
mov
scas
call
loopne
lahf
ss
je
imul
xchg
inc
pop
hlt
rcr
inc
rcrl
mov
call
or
push
aas
cmpsl
push
lods
mov
xor
sbb
aam
xchg
jmp
sbb
inc
jnp
jne
ljmp
xor
subl
cs
or
iret
arpl
add
mov
adc
negb
push
icebp
mov
jg
scas
adc
cltd
inc
stc
dec
in
xchg
ret
sub
iret
xchg
fnstsw
jmp
mov
flds
dec
pushl
and
dec
push
lcall
stc
loopne
mov
add
push
xchg
aam
pop
out
xchg
loope
mov
lahf
cmpsb
inc
ret
addr16
loope
jno
mov
popf
scas
aam
popa
inc
push
std
loopne
das
cmp
loope
sub
and
movsl
cmp
jbe
xchg
lret
call
and
cmpsl
mov
inc
and
test
sar
jb
sub
ss
lea
inc
roll
lock
enter
jecxz
adc
and
cmp
mov
pop
lock
jle
mov
adc
jnp
mov
scas
push
mov
fstpl
test
xchg
ss
subb
fildll
lods
imul
pop
push
lock
pop
jg
bound
mov
mov
mov
adc
fisttpll
pop
packssdw
xchg
and
inc
push
mov
inc
loop
fcomps
test
int
fistl
enter
scas
inc
sub
dec
add
or
pop
push
mov
repz
int
push
shrl
mov
out
add
dec
pop
xchg
jle
pop
ret
cmpsb
sub
inc
sub
adc
pmullw
cmpb
loop
lds
adc
adc
lret
call
call
mov
test
sbb
cs
je
jnp
or
js
lret
movsb
addr16
jp
mov
pop
insl
mov
pop
jecxz
mov
shr
in
test
or
mov
pop
sahf
in
cld
cmp
mov
bound
and
pop
dec
pusha
int
inc
mov
shll
cmc
pop
xchg
xchg
cmpsl
lret
nop
xor
jecxz
add
mov
enter
jbe
or
sti
stos
and
adc
or
jecxz
sub
inc
xchg
insl
decl
mov
mov
pop
mov
cltd
jg
test
je
test
jno
dec
test
shrb
mov
sub
adc
dec
push
hlt
dec
push
sbb
icebp
lods
mov
lret
daa
pop
mov
mov
or
push
xchg
fistps
cmc
andb
mov
sub
sbb
cmpl
mov
enter
loope
lcall
gs
xor
sbbl
inc
sub
push
xor
and
mov
ret
jmp
or
out
movsl
repnz
cmp
adc
lods
clc
into
shrl
jae
data16
enter
test
or
lds
testl
xor
repz
imul
mov
adc
dec
adc
and
xor
dec
sahf
or
rclb
loopne
fstps
stos
test
fisubrl
out
pop
in
decl
iret
sub
pop
ja
mov
pop
mov
rcll
add
mov
xchg
cs
cmc
xor
pop
xchg
les
notb
and
pop
mov
dec
mov
std
jl
int
mov
sti
jecxz
sti
xchg
mov
cltd
cwtl
and
cmp
mov
adc
jge
mov
dec
sahf
mov
frndint
xchg
pop
pop
mov
mov
jae
insb
jl
js
pop
mov
xchg
stos
rolb
xor
or
or
data16
rorb
push
cmpsl
mov
mov
fstl
jle
shlb
pushl
or
aas
adc
add
adc
pop
inc
pop
push
pop
mov
or
and
outsb
xor
clc
nopl
test
das
aas
push
jecxz
stos
cmc
scas
cmp
lret
push
jmp
xchg
ds
mov
pop
lock
pop
repz
mov
inc
push
mov
mov
push
mov
bndstx
fcmovbe
idiv
test
cmpsl
sti
inc
arpl
call
cmp
notb
sub
cmp
xor
sbb
adc
sbb
xchg
mov
pop
icebp
dec
xchg
add
nop
rcrb
lahf
dec
jl
imul
test
cmpl
lea
or
sbb
push
enter
push
mov
mov
mov
lock
sbb
jmp
sbb
xor
sub
or
and
int
insb
and
jns
lret
pop
mov
pop
outsb
test
xchg
shrb
mov
movhlps
push
mov
push
mov
cmpsl
jecxz
test
mov
xchg
and
movl
jle
repnz
je
and
inc
hlt
mov
push
mov
mov
testl
in
adcl
or
ja
insl
leave
in
insl
jge
fistpl
lea
pop
ja
icebp
pusha
sti
push
test
lcall
inc
jb
lock
jb
cmp
mov
sbb
aas
dec
roll
jge
shll
cmp
hlt
sbb
push
push
add
call
js
fcmovbe
pop
push
aas
or
outsl
cmovs
aam
mov
cmp
pop
sbb
pusha
shrl
lods
push
icebp
push
dec
lock
pop
cmp
fisubl
nop
inc
dec
mov
sbb
sbb
adcb
mov
xchg
xlat
cmp
push
in
adcb
outsb
inc
push
pop
lea
jmp
stos
lock
mulb
iret
add
sbb
inc
pusha
xchg
lea
dec
add
push
test
sbb
test
mov
dec
jo
add
sbb
jg
cld
add
mov
fdiv
int3
sbb
sbb
popa
sbb
dec
loope
hlt
clc
jns
in
ds
add
push
ds
push
lods
mov
insl
clc
pop
mov
adcb
or
mov
test
dec
inc
gs
das
or
jmp
insb
filds
mov
push
enter
mov
popf
adc
outsb
popa
mov
xor
inc
rcrb
mov
mov
in
insl
stc
push
jge
push
sahf
fucom
out
test
xchg
cld
ljmp
jne
push
arpl
clc
dec
insb
clc
out
fimull
dec
loopne
sarb
push
xchg
std
in
subl
sub
insl
cmp
sub
aas
add
jecxz
mov
adc
mov
cmp
nop
scas
in
test
scas
xchg
mov
or
mov
sub
mov
push
call
test
das
mov
mov
adc
gs
mov
mov
and
dec
ljmp
mov
xchg
ret
xchg
sub
pop
mov
rolb
or
ds
sub
mov
aaa
in
push
lea
cmp
scas
sub
in
out
sahf
sbb
mov
and
fildll
insb
add
pop
mov
sub
cmc
xchg
in
adc
pop
outsl
jae
add
jmp
cmc
mov
xor
aaa
push
mov
xor
rol
shlb
or
arpl
ret
adcb
movsb
jno
xlat
mov
lahf
stos
jne
fxch
fcompl
add
push
sti
mov
daa
je
or
test
fwait
push
sbb
leave
pusha
shl
cli
imul
xor
push
add
adc
cs
xor
dec
push
push
jne
pop
jl
out
loop
into
enter
xor
pop
lret
push
and
inc
cmpsl
aas
pushl
aas
js
sbb
inc
cltd
rclb
lds
test
sbb
xor
inc
ljmp
xor
adc
pusha
cltd
push
push
idivb
and
xchg
aam
pop
or
cmp
xchg
daa
jno
mov
push
mov
mov
mov
sub
ret
enter
in
mov
xchg
dec
stc
je
push
inc
mov
leave
loop
repz
and
arpl
jae
dec
and
mov
repz
lock
or
in
mov
ret
insl
mov
dec
push
sub
cmpsb
mov
sarl
pop
mov
stos
bound
stos
daa
imul
outsl
xorl
iretw
bound
push
outsb
or
repz
decb
aad
pop
andb
sbb
push
sti
seto
mov
in
mov
cmp
jo
imul
xor
je
in
leave
xor
jb
or
pop
xchg
dec
cmp
push
fnsave
lret
roll
pop
cmp
push
pusha
cmp
xchg
and
or
iret
int
xor
adc
adc
mov
mov
or
push
rcrl
shl
xchg
cmp
repnz
push
nop
test
fcoml
inc
aaa
jno
nop
adc
scas
jno
inc
mov
into
leave
jo
dec
aas
lret
mov
dec
mov
mov
inc
insb
xor
iret
ss
idivb
inc
stos
inc
scas
push
loopne
daa
xchg
mov
ret
jnp
pusha
pop
mov
cmp
movsb
icebp
movsl
sbb
cmp
and
adc
pop
or
mov
fmul
das
cli
out
movsb
pushf
and
aaa
push
cmp
subb
xchg
pushf
xor
xor
jge
jge
add
xchg
pop
mov
lcall
or
push
das
enter
pop
ret
bound
lock
xor
mov
xchg
mov
jns
test
mov
sbb
add
xchg
sbb
push
popa
jl
rolb
imul
sbb
outsb
leave
adc
cmpsl
add
sbb
push
out
cmp
fsubr
and
dec
push
stos
and
test
sbb
cmc
adc
dec
repz
lahf
sbbl
jmp
mov
push
jbe
push
mov
push
xchg
push
hlt
lret
add
or
sarl
push
jno
dec
mov
sahf
inc
shrb
xlat
into
ja
insb
pop
push
or
daa
out
lret
stc
mov
jno
sub
jle
mov
dec
test
cmc
push
rcl
xlat
fsts
stos
or
jnp
sbbb
add
lret
sbb
int
push
dec
fidivl
dec
out
loopne
adc
lods
xchg
adc
jp
mov
or
add
sar
push
mov
lods
cmpsb
cmp
sbb
rcrb
xchg
add
mov
adc
cltd
mov
fnstenv
or
out
pushf
xchg
sbb
fisttpll
inc
mov
jle
das
xchg
nop
iret
aam
sub
xchg
jnp
mov
jle
sar
push
imul
xor
xor
fbstp
push
xchg
popf
push
out
xor
pop
not
outsl
mov
pusha
pusha
testl
jle
or
scas
mov
sarb
loop
jne
cltd
loopne
lret
jno
dec
sub
or
pusha
hlt
dec
sbb
cs
aad
addr16
cmpsb
jecxz
mov
xor
rcrl
es
xor
sbb
out
cmc
jb
add
shl
adc
or
mov
stos
ljmp
sub
jge
les
loope
shrb
and
movsb
cmp
stos
loopne
or
cmpsl
ret
cli
ss
and
or
dec
inc
shrb
ret
outsb
mov
or
add
or
sbb
scas
insb
ds
xchg
lret
insb
pop
outsl
into
popa
ja
sahf
cmp
fisttpl
adc
lcall
adc
iret
lock
cmpsl
call
cmc
out
repz
pop
inc
rclb
push
sbb
std
cmp
adcl
jnp
or
icebp
pop
dec
xchg
sbb
mov
inc
loopne
fisubl
testl
xchg
cmp
xchg
push
test
cmpb
movsl
les
aam
pop
cs
sub
sahf
mov
cmc
jecxz
or
iret
mov
cmpsb
or
dec
mov
jne
stos
adc
cmp
inc
push
adc
fcomip
xor
mov
adc
dec
in
inc
mov
loope
imul
sti
cli
or
pop
sti
jp
add
jp
pushf
in
repz
sti
es
scas
add
in
loopne
cs
pop
in
or
arpl
cmp
out
sti
jno
push
subb
imul
jge
mov
pcmpgtw
pushf
pop
cmp
shrl
jae
repnz
icebp
xlat
xor
mov
adc
xchg
cli
paddsw
fsubr
mov
xchg
jns
push
cltd
and
add
xor
mov
push
jp
stos
jp
cld
xchg
pop
jl
push
out
cld
sbb
fneni(8087
mov
sti
dec
aam
out
ljmp
cmc
mov
xor
and
inc
push
sahf
inc
lods
mov
sti
mov
arpl
push
adc
rcll
outsl
outsl
mov
xor
sbb
test
int3
out
arpl
lods
mov
addr16
les
or
xchg
lock
sar
dec
fildll
cmc
lret
es
movsb
jno
and
mov
in
fmuls
adc
cmp
add
popa
rolb
lret
jb
jle
pushf
rclb
jnp
add
inc
mov
jo
and
popa
or
mov
or
cmp
insb
leave
push
pop
xchg
daa
je
push
cwtl
inc
xchg
scas
mov
push
xchg
int
leave
mov
xchg
and
or
adc
and
in
mov
out
loope
cmp
add
xor
mov
scas
jecxz
xchg
je
mov
out
adc
add
pop
xchg
data16
lret
xchg
xchg
adc
mov
add
push
in
sbb
sub
ss
push
add
jge
in
enter
mov
stos
lea
pop
stos
jns
ds
and
in
movsb
insb
std
dec
popa
mov
pop
imul
xchg
sub
mov
scas
jb
pop
inc
push
mov
sub
lds
and
dec
push
sub
push
mov
mov
cs
ret
dec
mov
iret
xchg
xor
xorb
fidivl
lcall
aam
pop
fucom
sub
stc
outsl
gs
lahf
cmp
sub
lods
lret
mov
aad
addl
aaa
sbb
xchg
xchg
in
mov
gs
sub
repnz
dec
into
add
push
push
clc
xorl
jl
sbb
cs
dec
pushf
or
sub
int3
arpl
pop
pop
mov
js
jle
pop
dec
xlat
outsb
cmp
dec
aaa
sbb
jl
sub
jb
add
mov
adc
gs
xchg
xchg
and
mov
ss
lock
inc
xchg
movsl
aam
addl
xchg
enter
lds
dec
jge
add
repnz
or
pop
testb
mov
pop
ss
push
sahf
push
fs
lock
fildll
aas
and
pop
comiss
inc
pop
push
push
shr
sar
enter
push
rcrl
stos
mov
pop
jb
fdivl
jnp
ds
cmp
stc
pushf
stc
andl
ljmp
dec
jl
mov
add
push
aaa
add
pop
andb
aaa
enter
adc
inc
push
popa
clc
xor
rorb
jg
or
pop
rcrb
arpl
mov
inc
in
aas
test
and
fwait
das
push
adc
lcall
jns
insb
ja
cmpl
lea
rcl
dec
sbb
add
jle
xor
pop
icebp
dec
in
mov
enter
sbb
rorb
out
dec
out
ficoml
xor
hlt
push
cwtl
jbe
or
or
rcll
lahf
nop
daa
adc
imul
inc
pop
and
repz
sub
dec
mov
fdivl
jmp
out
jg
and
mov
lcall
and
lods
dec
push
sub
pushf
mov
fsubs
stos
fdivrs
cs
push
jne
test
pop
lock
mov
xlat
jnp
or
jo
sbb
xchg
cmp
jb
and
sub
mov
dec
push
sub
mov
aam
sub
add
sub
push
add
je
loop
inc
lods
movsb
notl
pop
inc
stos
dec
out
cld
xchg
sub
lcall
daa
xor
sti
fwait
and
aam
lcall
push
sub
or
imul
xchg
insb
push
dec
or
repz
mov
test
dec
inc
ficomps
dec
dec
mov
mov
call
jb
enter
outsl
enter
xor
pushf
cmp
add
adc
or
ret
cltd
xor
push
lea
repz
outsb
shrl
xchg
popa
cmp
dec
daa
icebp
call
add
dec
loopne
not
adc
into
imul
loope
push
out
bound
mov
insb
mov
push
jp
jne
aas
dec
mov
cmp
adc
sti
jnp
int
mov
cmp
stc
cmpsb
pop
xchg
push
in
lea
add
int
push
popf
mov
mov
jmp
bound
ss
push
push
adc
mov
sbb
xlat
jge
lds
stos
push
sbb
or
imul
add
pop
xor
insl
gs
sub
push
scas
xchg
dec
add
das
aas
mov
jno
shll
js
outsb
int3
pop
insl
add
sahf
xor
jecxz
jmp
out
xchg
cmp
jecxz
adc
and
sbbl
cld
cmp
jns
lea
cld
into
int
lret
lret
push
and
fisubrl
pop
push
jmp
mov
cmp
fdivl
sti
scas
rclb
cmp
out
inc
cmc
lret
push
imul
or
leave
push
cmpsb
lock
dec
lds
clc
clc
cmpsl
fs
lods
push
mov
lods
mov
fwait
nop
daa
int
cmp
scas
call
xchg
pusha
and
add
les
dec
arpl
loope
add
aas
jne
push
popf
sub
or
lcall
es
sti
pop
leave
inc
lcall
adc
sub
jp
xor
dec
jmp
xchg
mov
adcl
movsl
sbb
int
sbb
int
aam
push
scas
stos
cmp
inc
inc
arpl
mov
pop
cwtl
xlat
call
loop
in
add
sti
sub
push
jecxz
rcrb
scas
fldl
mov
push
jle
ret
sbb
addb
jns,pt
push
push
jmp
pop
xchg
mov
inc
iret
int
mov
inc
push
jl
fcoms
sub
loopne
in
cmp
xor
pop
loop
and
sub
fs
sarl
sbb
lds
icebp
stos
push
xor
rorl
iret
dec
fcomps
arpl
cli
xchg
xor
mov
mov
negl
lods
in
or
sbbl
jmp
inc
ret
cmp
push
mov
inc
cltd
pop
push
stos
and
cmp
cmc
or
hlt
xchg
push
pop
adc
pop
dec
les
cltd
stc
insl
fmull
mull
int3
pop
ffree
fldl
push
paddb
movsb
pop
cmc
add
fimuls
inc
xchg
dec
inc
scas
test
divl
adc
lret
jb
xchg
xchg
adc
lret
pop
mov
push
or
cmp
iret
stos
and
loopne
daa
in
leave
fnstsw
insb
add
fsubrs
notb
lret
addb
std
dec
dec
push
jb
adc
mov
xor
cmp
fcmovnbe
dec
jl
push
xor
test
jnp
pop
insl
and
sbbl
cmc
bound
and
mov
push
xchg
pop
adc
xchg
add
pushf
test
adc
scas
push
xchg
test
shrb
stos
stos
dec
test
xlat
cmp
dec
pop
out
ds
das
mov
rcrl
push
mov
jne
mov
xchg
shll
fsubl
in
out
lea
jmp
jg
movsb
lock
mov
xchg
pop
cmp
or
add
mov
sub
mov
out
clc
fdiv
xor
xchg
test
push
sbb
mov
inc
icebp
into
es
repnz
fdivl
shlb
xlat
xlat
les
loope
xor
sbb
int3
mov
negl
dec
filds
and
test
jae
xchg
mov
data16
jae
pop
nop
int3
adc
add
pop
imul
icebp
fisubrl
or
ja
sbb
jnp
in
testb
push
adc
inc
push
pop
jp
fldl
inc
aaa
jmp
cmpsb
xchg
mov
lcall
fisttps
mov
jo
push
adc
addr16
push
fisttpll
icebp
xor
arpl
aam
push
jmp
pop
rcr
lods
jb
loop
mov
repz
pushf
pop
adc
out
mov
test
cmp
je
scas
clc
mov
decl
sarl
cwtl
sbb
mov
mov
mov
andl
adc
pop
cmp
aad
ja
add
sbb
push
outsb
push
movsl
les
pop
addr16
dec
cmc
int3
mov
pop
mov
xchg
sbb
mov
cmc
sbb
push
test
mov
imul
ds
arpl
shll
sarl
pushf
fstpt
pop
in
fsubs
mov
mov
iret
shlb
pop
stc
add
xor
test
fisttpll
mov
stc
xor
inc
xor
mov
push
push
push
push
inc
repnz
or
and
mov
fwait
lods
inc
fistpl
stos
pop
lcall
adc
es
add
loop
jl
mov
inc
pop
mov
jmp
sub
jo
in
repz
js
mov
repnz
rclb
fimuls
ret
lds
ss
dec
xchg
xchg
cmp
jg
test
js
imul
sahf
inc
dec
loopne
add
and
push
lret
mov
mov
cmp
out
and
iret
xor
add
and
imull
xor
push
ret
ljmp
dec
int3
mov
jbe
scas
test
sub
add
popf
mov
add
test
or
in
mov
insb
leave
in
enter
fsts
sbb
sbb
test
jecxz
ss
add
int
scas
cmp
ds
daa
test
or
rep
call
inc
add
cmpsb
imul
push
xlat
ja
insl
add
xchg
icebp
jecxz
or
into
in
mov
pop
daa
nop
jl
dec
sbb
dec
ss
jae
cmp
int3
ds
iret
out
inc
clc
jecxz
test
xchg
mov
int
adc
push
inc
push
cmpb
mov
add
aad
sub
movsl
xor
push
je
xchg
add
aaa
cmc
mov
pop
cmpsl
nop
add
push
hlt
fwait
jne
das
repnz
push
mov
pop
xor
push
ficomps
outsl
xlat
int3
leave
mov
fdivrs
pop
push
sub
pop
insb
outsl
shrb
fadds
lcall
jmp
rcrl
and
mov
lcallw
in
add
int3
fmuls
fwait
sbb
xchg
jg
jno
cmp
imul
xchg
cmp
loopne
call
mov
aad
das
aas
loopne
aas
pop
outsb
or
xor
push
sahf
xor
lret
add
adc
bound
loope
mov
ljmp
les
test
pop
dec
test
mov
sub
cltd
and
movsl
es
or
fwait
sbb
shr
mov
mov
test
aam
mov
sbb
adc
mov
mov
adc
mov
pop
add
or
mov
mov
cs
sbbb
cmp
out
and
sbb
ror
add
adc
repz
int
cs
jbe
jns
sub
in
fwait
mov
int3
jbe
lcall
fs
dec
enter
sub
xchg
mov
jle
add
xlat
xor
push
mov
hlt
rcrb
mov
pop
popf
emms
shlb
lods
outsb
shr
cmpsl
stos
out
in
sbb
fcomps
sub
push
adc
xor
cmp
sahf
jmp
pop
add
ret
daa
stos
testb
cli
mov
dec
push
and
stc
xor
seta
loop
push
xchg
mov
sti
inc
gs
fyl2xp1
test
mov
icebp
fdivrl
ret
jnp
adc
rorl
nop
daa
push
in
enter
xor
je
inc
lods
and
fstps
sub
out
inc
emms
xor
cmp
repz
fistpl
dec
xchg
xor
les
jle
add
inc
outsl
loopne
insb
popf
pop
ss
jno
ljmp
stos
stc
jmp
cs
jle
sub
data16
cmpsl
incl
sbb
mov
clc
xchg
push
shlb
mov
loope
les
aas
loopne
mov
in
fs
jno
cld
lcall
test
shll
pop
sbb
sbb
jae
mov
mov
rorl
mov
in
test
adc
out
cmp
cltd
xlat
call
movsl
popl
cmpsl
in
xor
sbb
leave
mov
bound
shll
or
sub
js
adc
scas
mov
imul
cli
lret
movsl
in
pop
xlat
inc
lret
xor
pop
mov
push
ret
fistpll
jg
sahf
inc
movsl
lds
jecxz
xor
into
sbbb
or
stos
inc
pusha
fadd
popa
jg
lods
mov
int
jns
jecxz
mov
inc
ds
push
dec
inc
push
dec
cs
mov
shll
out
sti
sahf
inc
shrl
in
daa
jbe
xchg
sar
pop
mov
and
jg
mov
push
es
ret
filds
dec
nop
inc
dec
jns
xchg
ds
mov
inc
sar
xchg
cmp
sbbb
shr
cmpsb
test
out
subb
test
leave
fldlg2
add
outsb
mov
and
loopne
jmp
scas
jbe
inc
or
jp
jge
and
xor
cltd
sbb
scas
mov
movsl
push
mov
mov
les
sub
push
loop
add
imulb
add
xor
add
xor
dec
xor
iret
cmp
sub
fsubrs
stc
lea
or
mov
push
in
loop
imul
cmp
stc
pop
fisttps
jo
push
test
loope
inc
cmp
inc
ret
insb
clc
ja
mov
xsha256
cmpsb
nop
pop
push
imul
out
jbe
fmuls
movsl
leave
orb
mov
out
push
inc
inc
adc
sub
aam
ds
stc
inc
pushw
test
add
push
mov
lret
outsl
lret
sub
jecxz
xor
pop
ja
pop
lea
dec
push
cld
xchg
mov
or
xchg
pop
jae
xor
and
js
push
push
cmp
cmc
enter
xchg
pop
ret
lods
mov
stos
jge
repnz
aam
loopne
sbb
lds
lods
out
push
cwtl
and
jne
and
or
arpl
cmp
cmp
test
sbb
insl
or
arpl
into
inc
shlb
out
popf
xor
sbb
dec
adc
jmp
push
test
xchg
mov
mov
cmp
fmul
dec
fidivl
loopne
cld
xchg
js
es
fiaddl
loop
shll
data16
mov
mov
out
sbb
and
hlt
ret
bound
push
jmp
lds
idivl
jmp
out
sub
sub
ret
add
pop
mov
mov
jae
aaa
fistpll
fistpll
adc
and
dec
sbb
test
sub
insl
test
inc
lea
adc
pop
dec
mov
inc
jnp
jmp
pop
std
sub
and
or
and
aas
lahf
xchg
xor
cli
jg
sub
pop
mov
int3
cli
jmp
sub
imul
ljmp
mov
mov
cmp
lea
andl
push
stos
mov
negl
leave
dec
xor
stos
sbbb
jg
or
push
hlt
mov
fisubl
in
mov
pop
add
stos
stos
ja
and
dec
divb
mov
mov
lret
mov
xor
cltd
flds
test
and
jb
pop
outsl
push
adc
add
dec
push
mov
mov
fwait
mov
cmp
mov
or
or
xchg
lahf
stos
repnz
enter
mov
xchg
int
shl
xchg
sub
adc
clc
jbe
pop
xchg
sub
imul
mov
push
pop
outsl
jl
loopne
test
jge
scas
addr16
loopne
mov
mov
xor
test
in
xchg
test
add
leave
mov
mov
push
test
pushf
dec
inc
fwait
or
dec
ljmp
popa
push
in
ret
pusha
loope
dec
add
fcomi
jmp
mov
dec
jae
inc
fcmovnbe
mov
mov
xor
cmp
scas
adc
pop
test
or
je
sub
notl
push
xor
lock
out
add
pushf
pop
push
cmp
or
mov
xchg
mov
pop
insb
scas
shrl
into
ret
jae
enter
test
arpl
fnsave
mov
inc
and
mov
imul
je
mov
sbb
in
rorb
clc
cmp
sub
mov
cs
sub
pop
cmp
sti
movsb
mov
push
jmp
add
jmp
sbbb
fadd
and
mov
out
jmp
xchg
cmp
es
ljmp
dec
jmp
xlat
iret
loop
sbb
push
dec
mov
mov
int3
jae
jle
int
cltd
stos
in
or
pop
daa
or
pop
mov
xor
enter
push
decb
xchg
or
aam
jne
mov
xor
lea
lret
leave
rorb
sbb
xor
std
xchg
adc
loope
fdiv
sub
adc
mov
mov
js
lds
mov
or
sub
pusha
mov
mov
xchg
pavgb
or
dec
pop
leave
dec
ret
pop
jnp
arpl
ja
loope
add
in
jb
ret
lret
loop
dec
dec
push
sarb
xchg
add
inc
pop
add
xchg
cmpsb
sbb
stc
aas
cmp
bswap
stc
in
fistps
mov
mov
sarl
in
icebp
or
push
mov
dec
jg
aaa
mov
or
cmp
loop
std
adc
jmp
sbb
ds
fadd
cmp
inc
mov
or
jecxz
into
xor
inc
sbbl
mov
scas
xchg
js
adc
loope
scas
adc
xor
outsb
pop
cs
cmp
pop
mov
imul
sub
sub
add
leave
pop
and
inc
out
xchg
xchg
in
push
jecxz
test
xchg
mov
and
cmp
cmp
pushf
xchg
dec
adc
in
sub
stos
dec
xorb
pop
pop
sbb
addr16
imul
adc
cmp
cmp
xor
cltd
cmp
sub
divl
repz
and
fldenv
adc
lock
or
cld
scas
mov
mulb
jo
stc
shr
cmp
pop
xchg
inc
outsl
lahf
test
and
int3
fnstenv
mov
pop
jne
push
stc
fstpl
daa
push
cli
pushf
scas
sub
cmpsl
mov
addl
std
dec
sarb
xor
and
out
fistpll
or
adc
sbb
int
rcrb
lahf
pop
cmpsb
std
and
add
das
imul
fdivrs
add
imul
dec
cmpsb
xchg
insl
xchg
dec
dec
in
or
cmp
jnp
aad
stos
mov
add
nop
popl
test
std
das
cmp
sbb
outsb
bnd
ficoms
jge
jbe
and
sbb
pop
into
shll
xor
xchg
or
les
iret
jb
bound
mov
cmp
sub
xlat
cmp
mov
mov
sub
push
cmp
push
out
pop
aaa
int3
push
in
jnp
ja
test
or
addr16
dec
mov
push
les
sbb
enter
pop
insb
sti
inc
push
das
int
loope
nop
or
or
rcrl
mov
sbbl
fistpll
lahf
mov
sub
int3
test
inc
mov
xchg
sub
mov
lds
das
pop
mov
sti
jge
jmp
jge
jno
xchg
test
dec
loop
ja
aaa
mov
repz
fdivrp
adc
loopne
lcall
jg
add
jge
and
xor
sub
movsl
jnp
xor
movsb
les
addb
mov
mov
shrb
aaa
add
xor
xchg
dec
mov
movsb
shrb
rcll
out
mov
xor
fbld
out
fwait
adc
and
sub
inc
cmp
lcall
jns
xchg
cmp
lahf
loope
dec
dec
subb
sub
in
push
inc
mov
mov
rcrb
div
icebp
inc
arpl
test
xchg
jmp
adcl
in
fdiv
lcall
jne
mov
mov
mov
pop
stos
cmp
adc
jne
ds
mov
and
or
mov
jne
mov
rcrb
jnp
gs
cmp
push
mov
decl
loope
dec
sar
cmpsl
dec
in
les
cmc
ljmp
daa
inc
stos
add
rcrl
xor
lock
loop
scas
aas
std
lock
adc
mov
cmpsb
xor
mov
out
xchg
sub
cmpsb
aad
shrb
std
jg
rcrb
push
add
out
push
dec
into
push
mov
push
add
stos
push
push
push
or
fxch
pusha
or
jo
adc
addr16
mov
jno
fstpl
xchg
mov
mov
insb
test
mov
xor
sbbb
cmp
pop
push
bound
xchg
daa
dec
sub
mov
imul
jno
inc
jns
mov
push
pop
mov
fwait
in
adc
dec
shrb
push
cmp
lds
insl
imul
mov
inc
mov
test
lret
ret
pop
mov
dec
data16
xor
shrl
add
popa
sbbb
sub
sti
mov
subl
push
andb
push
push
hlt
mov
add
loop
sub
sub
push
xchg
sub
ret
daa
dec
loop
or
mov
jns
js
jecxz
lcall
mov
lods
push
mov
fs
nop
ss
mov
cmp
pop
mov
data16
dec
div
xchg
iret
xchg
xchg
imul
mov
test
push
mov
xchg
or
in
jae
and
addr16
add
mov
mov
ds
push
inc
rcll
inc
fstl
mov
adc
mov
and
sub
aaa
call
aam
movsb
xor
push
mov
mov
jns
insb
rsm
sbb
imul
xchg
sub
dec
sahf
mov
repz
lret
testb
mov
sbb
xor
dec
dec
pop
jns
cmp
popa
repnz
mov
fdivl
cltd
xchg
or
pop
psrld
icebp
mov
xorb
mov
xchg
xlat
pop
sahf
and
push
subb
mov
loope
mov
pop
jge
data16
jecxz
mov
int
dec
sbb
insl
outsb
push
leave
push
inc
mov
mov
es
in
aam
shl
cmp
cmp
mov
movsb
inc
sub
add
outsl
push
inc
test
mov
fimuls
pop
mov
adc
mov
stc
inc
jp
xchg
movsl
mov
mov
and
xchg
pop
or
stos
test
and
xchg
jg
xchg
push
mov
enter
jg
xchg
and
lret
loop
enter
pop
imul
sahf
xor
mov
dec
add
push
add
sbbl
mov
mov
xor
push
mov
lcall
jl
mov
jmp
mov
jo
icebp
jo
or
xchg
mov
jmp
je
jecxz
nop
push
cmp
pop
lcall
stc
movsb
ja
cmc
inc
pop
in
add
adc
add
xchg
add
lahf
and
fstl
add
loop
jbe
cmpsl
add
xorl
push
sbb
decb
scas
jl
xchg
sbb
adc
xor
push
shr
pop
popa
data16
imul
and
mov
mov
icebp
adc
dec
and
jp
out
ret
lahf
mov
mov
imul
sub
jae
test
scas
pusha
clc
inc
push
mov
rorl
sti
test
cwtl
cld
fwait
dec
inc
ja
dec
push
push
icebp
or
cltd
sti
cli
xor
cmpb
divl
push
jo
adc
cmpsl
int
mov
adc
jle
mov
mov
pop
push
adc
or
arpl
pop
push
scas
mov
insl
xor
shrl
jmp
or
pop
sub
enter
push
push
mov
shlb
fwait
add
mull
push
mov
lds
adc
xchg
fnstsw
xor
dec
pop
insb
xchg
sahf
shll
int3
push
or
jae
mov
jg
fbld
mov
mov
loop
push
dec
mov
sti
mov
outsb
xchg
add
push
or
adcb
cmp
ljmp
mov
push
push
loop
push
xor
inc
mov
jg
push
mov
subl
xchg
push
push
jp
aad
icebp
mov
ret
pusha
and
xchg
sbb
into
xchg
ja
jg
aaa
scas
and
xchg
sub
inc
cld
mov
sbb
jge
cmp
imul
inc
xor
inc
fcmovne
jbe
inc
fsts
jb
jae
shrb
je
into
enter
xchg
mov
gs
inc
and
cmc
xor
xlat
jl
sbb
ljmp
icebp
xchg
add
imul
pop
lds
cli
adc
mov
sbb
sub
or
cs
or
and
and
xchg
pop
mov
pop
not
fdivp
sub
dec
mov
mov
jl
inc
leave
out
popa
jmp
jno
dec
ds
fs
out
and
jge
jae
jle
xor
adcb
push
xor
xor
add
movsl
mov
lahf
ss
rcll
fistpl
mov
mov
in
lea
sbb
cmp
cld
lock
jne
int
xor
or
hlt
or
pop
js
ss
in
jno
or
mov
imul
lahf
mov
lods
out
orb
dec
loopne
or
push
mov
pop
xchg
push
aam
mov
xor
xchg
jg
imul
ficoms
iret
daa
sub
mov
call
in
dec
shlb
popf
xor
decb
sbb
out
adc
lea
jbe
test
stos
je
shrb
push
repz
shll
arpl
jg
insb
or
dec
lods
bound
imul
xor
xchg
mov
addr16
clc
jl
outsl
pop
iret
and
mov
stos
jne
fmul
sbb
aam
inc
ret
sbb
mov
repz
dec
call
xor
cmc
and
adc
cwtl
fdivrl
push
jo
bound
les
inc
fisttpl
test
cli
je
shl
loopne
addl
into
sbb
inc
popa
push
sbb
cwtl
stos
inc
push
shrb
leave
jmp
jle
out
test
sbb
lcall
sbb
jb
and
lods
add
fisubs
sub
xchg
insl
std
dec
andb
in
sahf
dec
sti
pop
cmpsl
insb
jmp
jg
test
dec
out
ret
mov
pop
jl
frstor
pop
pop
dec
nop
gs
int3
outsl
mov
jge
jo
fcomp
ss
cli
xrelease
jge
insb
mov
repz
fidivs
sahf
test
les
aaa
lret
inc
add
adc
or
pop
push
or
aam
daa
inc
push
mov
test
lock
fistps
or
push
add
movsl
jge
pop
cmp
add
cli
jmp
inc
scas
jae
sbb
les
enter
sub
push
repz
pop
ds
outsl
loop
sbb
lret
add
jbe
imul
mov
mov
lcall
in
pop
or
pop
pusha
pushf
sub
push
or
cmpb
sub
push
lds
adc
and
je
cmp
jo
lret
out
push
cld
and
stos
ja
adc
lret
xchg
dec
dec
inc
mov
lahf
mov
ds
popf
shlb
dec
movzwl
data16
cltd
insb
roll
mov
push
inc
leave
enter
pop
es
xchg
cmp
sbb
daa
out
dec
hlt
xchg
add
loope
dec
movsl
cs
push
xor
pop
subb
pop
add
add
ljmp
and
sub
data16
jge
and
jp
addr16
inc
cltd
sbbb
add
andl
inc
lods
push
pushf
fisubs
cltd
push
cmp
jae
xor
cmc
adc
xor
mov
shr
cmp
ret
packssdw
mov
loopne
cmpsb
cwtl
sub
pop
pop
mov
popf
sbb
imulb
and
lods
push
lods
inc
testb
call
int3
movsb
adc
sub
and
pcmpeqw
arpl
dec
adc
adc
jo
cmp
pop
out
dec
imul
pusha
out
or
hlt
mov
xchg
xor
xor
sarl
out
pop
psubb
scas
and
repz
rcrb
mov
cmpsl
aad
and
out
and
cs
adc
mov
jbe
iret
cs
lret
out
mov
seta
icebp
sub
push
push
orb
or
aaa
fs
xchg
and
ljmp
sub
inc
inc
stc
inc
pop
adc
push
inc
pop
call
cmpsl
add
dec
loop
es
adc
int3
xchg
dec
sbb
and
inc
jo
cmp
push
into
jmp
icebp
dec
adc
xchg
jno
dec
stos
push
push
or
jb
es
je
popa
into
jg
scas
xchg
dec
int3
mov
mov
mov
loopne
les
mov
ret
xchg
xor
pop
jno
dec
push
in
jle
and
out
testb
adc
xor
insl
and
and
xlat
xlat
mov
repz
cmpsb
les
push
adc
ffreep
ds
loopne
call
addr16
mov
jae
mov
or
clc
cli
sarl
cmc
xor
jne
mov
xchg
dec
test
pop
xor
inc
arpl
xchg
sub
sbb
stos
jne
jge
sbb
add
popf
jp
cwtl
test
push
fwait
xor
out
mov
dec
mov
scas
pop
push
adc
mov
insl
xchg
push
mov
sub
aam
ret
ret
sbb
sub
and
mov
addr16
xor
mov
into
out
xchg
dec
decl
nop
lods
xchg
stos
aaa
xchg
jno
inc
pop
out
cmpw
aas
repz
imul
inc
fnstcw
dec
scas
fptan
lea
cmpsl
aaa
loope
xchg
rcrb
mov
aad
xor
daa
in
push
call
and
aas
add
xlat
mov
mov
mov
sti
xor
jmp
or
pop
pop
test
mov
mov
fmul
sub
pop
in
adc
out
out
or
sub
out
sbb
pushl
dec
bound
add
sbb
add
mov
insb
pop
cmp
movsl
sbb
nop
or
add
int3
mov
adc
jp
mov
dec
mov
fmulp
xchg
pop
pop
jg
xchg
pop
jecxz
mov
xchg
xor
rolb
adc
lods
jb
jae
dec
imul
pop
pop
cmp
jle
ljmp
mov
fstl
add
xor
pusha
jp
popa
xor
std
lock
test
inc
adc
js
adc
call
push
inc
imul
pop
out
nop
and
and
imul
add
inc
sbb
xor
adc
cmpsb
ret
pop
out
xor
jb
aad
mov
inc
jno
xchg
fcoml
dec
cmp
call
pop
xchg
call
mov
pop
ss
or
mov
dec
mov
xrelease
test
adc
mov
xchg
mov
lock
mov
sbb
and
popa
iret
mov
nop
out
push
fists
cmp
xchg
rol
push
or
mov
rorb
add
mov
sahf
bound
ss
cs
ret
adc
std
rcrl
jne
xor
pop
inc
jo
adc
push
cmp
fs
adc
push
jnp
mov
arpl
scas
fs
loop
lock
xchg
add
xchg
es
int
rcrl
movsl
in
jbe
stc
or
paddsw
out
repz
dec
xor
mov
sbb
lcall
int3
insl
dec
ficomps
xchg
push
nop
or
jp
or
and
adc
push
sub
arpl
lea
pop
add
out
push
movsl
pop
dec
xchg
sbb
xchg
push
cmpsb
mov
ficoms
dec
push
push
cli
inc
scas
xchg
adc
xchg
xchg
adc
inc
cmp
dec
or
lods
fsubrl
test
push
in
dec
mov
and
push
mov
sub
sub
sub
xor
cmpsb
sahf
repnz
test
shrl
pop
and
xor
cmp
jg
pushf
lcall
outsb
push
mov
push
call
xchg
or
jg
xchg
xchg
inc
repz
rol
mov
lret
repz
mov
pop
iret
jmp
push
sti
mov
mov
jmp
xor
pop
xchg
pushf
xor
mov
out
call
in
sub
push
sahf
inc
out
jmp
shrl
es
sbb
out
xchg
mov
lods
sbb
addr16
mov
cmp
pop
add
mov
dec
mov
call
sbb
mov
dec
fisubrl
push
sbbl
jmp
mov
or
cmpsb
xchg
faddp
insl
fidivrl
lret
sbb
adc
jp
mov
popa
sub
loope
stos
adc
lods
mov
gs
popa
xchg
push
sub
fiaddl
and
aas
cwtl
in
pop
sbb
inc
and
mov
push
mov
push
push
insb
scas
sub
loop
sub
test
clc
jns
shrl
fsubrp
jmp
and
ret
loope
test
adc
sub
sub
dec
out
push
inc
inc
cmp
in
popa
adc
add
imul
std
nop
or
add
and
movsl
mov
cmp
push
and
xchg
imul
xor
mov
adc
add
enter
jle
xchg
pop
rcrl
inc
es
push
lcall
inc
arpl
shrb
test
lret
data16
mulb
mov
lock
rcr
xor
mov
mov
push
ret
sub
sbb
pusha
xchg
lds
mov
bnd
stos
pushf
out
cli
inc
sub
repnz
cmp
pushf
loop
or
mov
insb
das
call
cmp
cwtl
or
pop
mov
xchg
pop
imul
insl
or
push
sub
fcoml
cmp
push
push
push
orl
std
mov
loope
inc
jno
in
dec
add
pop
int3
fwait
or
lcall
call
mov
scas
mov
mov
adc
aas
rcl
outsl
mov
shl
ds
test
sbb
int
xor
insb
out
sbb
aam
push
js
or
mov
cmpsl
das
jle
movsb
dec
rorl
jecxz
jno
xor
or
sarl
arpl
imul
jne
sbb
jb
dec
jge
das
mov
test
add
das
push
or
aaa
mov
cmp
pop
cmp
mov
ffreep
pop
adc
push
mov
movsl
out
icebp
push
sbb
mov
scas
pusha
mul
mov
loop
inc
jle
fs
pop
inc
sbb
xchg
mov
sub
mov
sub
test
cmp
sub
addr16
pop
icebp
jl
add
push
add
enter
ret
ss
dec
icebp
stos
psadbw
notl
push
and
push
insb
push
cltd
lock
das
add
or
test
lods
inc
gs
mov
fchs
cmpsl
jno
mov
mov
inc
std
rcrb
pop
lods
mov
movsb
iret
mov
add
stc
push
cmp
sbb
fwait
test
shl
mov
adc
xchg
cmpsb
rorb
mov
push
fisttps
int3
sub
fistl
icebp
adc
add
fs
add
addr16
sub
inc
cs
and
arpl
rcll
adc
sub
add
jo
imul
mov
rclb
aaa
xchg
jp
pop
jg
mov
lcall
add
call
xchg
mov
mov
lret
cmp
mov
pop
inc
in
xchg
and
mov
cld
outsl
daa
sub
xchg
mov
das
repnz
dec
xchg
test
fwait
add
or
xor
test
fidivrs
je
xor
and
push
pop
popf
shll
insl
std
rcrb
inc
mov
mov
jbe
pop
das
pushf
sub
cld
sub
and
pop
mov
xor
mov
inc
fnstsw
fisubl
iret
pop
sub
imul
dec
in
cld
xchg
stos
negl
push
jbe
sahf
ja
mov
push
lret
fldl
push
xchg
sub
mov
xchg
cld
xchg
dec
repz
xchg
push
xchg
mov
shl
push
sar
mov
xadd
push
mov
daa
adc
xchg
and
mov
lds
pusha
insl
push
sarl
or
movsl
out
cmpsl
sub
add
push
ss
out
pop
sbb
push
je
sbb
imul
fldcw
xorl
sub
or
push
jmp
inc
loope
mov
push
push
lea
ss
or
adc
sbb
inc
pop
sarl
xchg
repnz
and
jmp
test
ds
pop
lods
inc
mov
push
add
or
fsubs
jns
fdivrp
ljmp
mov
fs
sbb
dec
cmc
scas
dec
add
xlat
push
sub
mov
inc
adc
inc
cmp
xlat
mov
mov
xor
test
pop
out
imul
popf
adc
xor
out
clc
mov
mov
daa
cmp
xchg
out
cmpsl
fwait
test
fisttpll
mov
pop
sahf
xchg
shrl
jae
adc
movb
out
sbb
xor
dec
adc
jp
sub
inc
and
inc
cmp
cmp
add
jo
sahf
jbe
cmp
pop
sub
movsb
ds
aaa
ja
sub
cmp
xchg
push
mov
xchg
sub
jns
push
inc
mov
jbe
fmulp
fimull
mov
xchg
out
lahf
push
cltd
in
pop
cmc
dec
insl
rcll
in
mov
int
pop
repz
movsb
lret
jne
xchg
jbe
out
jg
test
iret
addr16
sarl
xor
decb
push
int3
xchg
dec
ljmp
mov
xor
subl
psrad
fistps
dec
imul
dec
and
dec
push
xor
out
or
inc
je
subl
sub
lds
ret
in
cs
lods
xor
rol
mov
push
or
and
pop
jae
movsb
and
in
cmpsb
outsb
aas
dec
xchg
jp
or
mov
pushf
sbb
mov
inc
pop
inc
pop
lret
push
pop
bt
jge
loop
out
pop
xchg
sub
lahf
mov
in
adc
addl
out
push
lods
xor
popa
insl
or
jb
inc
movsb
out
mov
pop
dec
call
std
xor
gs
in
ja
lds
xchg
mov
adc
adc
add
add
sarl
sbb
data16
pop
jle
cmpl
or
sub
inc
aad
add
inc
rolb
fsubl
dec
popa
add
cli
fwait
or
ret
pop
int3
adc
and
and
push
popl
aad
and
and
dec
and
push
imul
xor
mov
ret
into
sbb
iret
arpl
sbbl
aas
clc
sahf
sub
push
push
jb
subb
pop
sbb
imul
push
mov
mov
repnz
jmp
mov
push
xlat
sbb
arpl
xchg
fnstcw
dec
inc
enter
mov
mov
pop
push
repnz
or
xor
mov
mov
fmulp
inc
sbb
dec
mov
add
outsb
test
mov
add
push
jle
bnd
insb
and
xlat
je
repz
pushf
cltd
sub
inc
cmpsb
and
js
ret
jae
and
enter
sbb
cmpb
gs
mov
sub
cmpsb
adc
add
sub
inc
jl
les
mov
lahf
xor
insb
imul
and
inc
ss
cmp
shl
dec
xchg
jp
into
pop
shl
outsb
fadd
and
stos
mov
lods
dec
adc
jae
sbb
push
insl
push
jmp
add
or
imulb
push
sti
inc
shr
movsl
stos
mov
leave
sarl
lret
es
mov
jo
arpl
sub
mov
vmovmskpd
mov
cld
mov
pop
mov
mov
mov
cmp
mov
push
test
inc
das
mov
sub
and
mov
arpl
jne
cs
lcall
cli
mov
arpl
xchg
fs
or
imul
mov
bound
pushf
or
scas
out
mov
jmp
cmp
xchg
xor
mov
xlat
lods
and
lret
jnp
xchg
dec
sbb
rorb
and
sub
ret
jnp
sbb
nop
loopne
test
mov
iret
data16
push
mov
mov
lods
addr16
mov
les
cld
pop
inc
mov
dec
inc
or
outsb
mov
shll
gs
loop
push
daa
aam
fisubs
or
fisttpll
jg
or
sbbl
lods
test
mov
pop
int
cmc
arpl
adcl
inc
pop
jp
pop
and
add
test
and
imul
pop
cwtl
call
mov
in
mov
xchg
stos
or
pop
xchg
add
lock
dec
mov
je
cmp
pop
jno
adc
cmpsl
dec
sbb
mov
fldenv
sbb
cmp
or
repz
adc
push
fadds
sub
gs
push
pop
insl
scas
aam
fdivp
fnsave
repz
xchg
loopne
push
loopne
sbb
jbe
call
sub
aas
push
cld
mov
test
mov
fidivrl
rorb
mov
adc
mov
out
xchg
mov
movsl
ds
add
hlt
lds
call
jp
aam
pop
mov
add
int3
int3
pushl
bound
pusha
and
mov
pusha
xchg
mov
out
in
clc
xor
sub
inc
cld
xchg
pop
bnd
addr16
push
push
inc
adc
pop
movd
bound
int
sbb
ret
add
loope
movsb
popf
pop
repnz
loop
and
cmp
xchg
jp
mov
push
cmp
lds
in
push
scas
fcoms
bound
push
stos
cli
int3
sub
jg
push
sbb
inc
push
insl
std
xor
hlt
cmp
lods
fadd
sub
call
dec
leave
pusha
jl
add
inc
dec
je
sahf
xor
jge
dec
stos
cmp
adc
sti
xchg
pushf
and
mov
fidivrl
and
adc
jmp
mov
jo
or
repz
push
shll
push
clc
in
in
clc
dec
jo
out
imul
dec
pop
testb
jge
xor
lret
cli
xor
sub
dec
ja
shr
stc
cwtl
iret
out
enter
jmp
and
jb
push
jmp
mov
out
mov
pop
mov
rcll
or
sub
call
or
pop
enter
mov
inc
bound
fldt
mov
and
pop
sahf
es
add
xchg
adc
ss
mov
dec
ljmp
push
ret
loope
repnz
lret
ffree
jnp
pop
pop
pop
adc
cmpsl
jo
mov
adc
sub
outsl
jle
in
stos
mov
pop
stos
lea
mov
shlb
lods
cmpsl
out
icebp
lods
inc
and
lret
dec
mov
subb
push
outsl
fsubl
or
jnp
pop
mov
daa
ds
sub
stc
rol
mov
int3
mov
jns
fwait
pop
sbb
add
adc
mov
mov
and
and
lock
inc
repnz
pop
push
aas
outsb
inc
cs
pop
int3
rcrl
shl
ret
mov
sub
test
dec
loopne
addl
popf
into
repnz
mov
pop
lcall
dec
bound
mov
lret
mov
test
daa
pop
adc
jle
mov
jg
jb
xchg
mov
mov
lret
ljmp
jne
cmpsb
repz
jbe
subl
sbb
shll
mov
mov
fnclex
push
xchg
dec
cmp
fwait
xor
mov
int3
and
inc
and
cwtl
xlat
push
idivb
mov
ds
rcrl
push
call
dec
sbb
push
ljmp
repz
sub
mov
dec
aam
xchg
push
lea
fdivs
mov
cmp
fcmove
andl
mov
add
ret
std
inc
inc
fs
cmp
ljmp
inc
mov
cmp
in
or
dec
push
fdivl
xchg
sub
ds
mov
out
loopne
call
mov
inc
push
xor
mov
push
jo
jg
inc
xchg
movsl
dec
dec
push
mov
jp
pop
inc
cltd
push
out
aaa
push
pop
shlb
inc
cltd
fcomi
loope
lret
in
stos
sbb
out
fildl
sub
and
test
jle
movsl
iret
fistpll
stos
scas
bound
cltd
dec
inc
xor
inc
test
ficomps
lcall
jbe
dec
mov
mov
out
push
les
stos
test
lds
mov
iret
push
int3
and
jmp
sarb
int3
pop
mov
repnz
cmpsl
cld
ret
cmc
fsubrp
mov
sub
fidivs
test
dec
or
sbb
xor
pop
mov
xor
lea
inc
flds
leave
pop
rol
test
mov
jnp
pusha
subb
aam
call
and
pushf
xor
aaa
aad
ljmp
mov
mov
adc
xlat
and
mov
shr
scas
mov
fnstenv
cld
inc
incb
jecxz
or
push
mov
sarb
in
or
aas
nop
loope
cltd
clc
cmp
sbb
adc
repz
jecxz
cmpsl
mov
cmp
pushf
out
insl
in
scas
ret
call
dec
mov
jp
int3
arpl
adc
cmp
pop
pop
mov
mov
fidivs
adc
dec
jp
cmp
imul
cli
leave
movsl
push
adc
jae
jp
mov
test
std
push
xchg
in
xor
mov
mov
rcrl
fdiv
fwait
sti
insl
je
inc
mov
clc
iret
cmp
test
and
stos
mov
fnstcw
or
ret
int
cmc
jg
adc
xchg
add
cs
lret
fsubrs
sti
addr16
pop
hlt
imul
popl
ljmp
out
pop
xchg
push
jmp
xchg
repz
mov
jp
or
xchg
xchg
std
or
jno
idivl
sarl
ret
push
xor
popa
lods
int
jae
dec
mov
lea
pop
scas
cmp
pop
enter
dec
insl
cld
cmp
mov
dec
fwait
test
stc
push
rolb
and
popa
scas
cmp
stc
mov
loop
ja
add
fnstenv
lods
repnz
hlt
jge
stc
mov
mov
xor
pop
push
dec
push
repnz
jo
ds
ret
test
mov
inc
sbb
jl
lock
jle
or
stos
xchg
jp
mov
and
loop
dec
test
mov
leave
sbb
lods
cmp
addr16
xchg
add
jae
jns
inc
movsl
into
and
lea
daa
stc
adc
imul
mov
jecxz
add
movsb
jb
sbb
pop
scas
out
sbb
cmpsl
es
sub
repz
divb
outsb
aaa
inc
pop
in
cmp
dec
fisubrs
dec
dec
out
cmp
insl
jb
rol
push
dec
rclb
jmp
lcall
outsl
outsl
add
xchg
jo
dec
mov
outsl
inc
mov
daa
repnz
int3
hlt
or
addl
cld
test
mov
push
sbb
mov
push
xlat
cld
fiaddl
int
js
push
into
movsl
add
call
push
pop
push
lcall
xor
mov
in
inc
or
xchg
pop
shlb
pop
push
sbbb
dec
mov
jmp
push
ljmp
cli
jle
add
cmpsl
pop
clc
enter
bound
jno
mov
je
es
cmp
cmp
push
and
dec
test
mov
lock
jns
dec
jmp
stc
ror
push
mov
fs
push
out
jbe
jecxz
std
outsb
add
lahf
mov
xchg
fbstp
xor
push
daa
and
mov
dec
cmp
sbb
lea
inc
jns
aaa
leave
mov
addl
xchg
jae
out
add
mov
das
adc
mov
mov
movsb
mov
mov
aas
xor
fwait
insl
mov
ja
testb
fldenv
mov
jl
push
out
aas
adc
xchg
fdivs
push
lds
jg
mov
jb
arpl
aas
sbb
mov
shl
fwait
std
shrl
pop
mov
sub
mov
and
lock
push
cltd
test
xlat
pop
xchg
icebp
scas
jo
or
not
loopne
insb
sti
stos
mov
fadds
cwtl
jne
loop
cmp
add
jb
movsb
dec
ss
repz
adc
lret
or
je
xorl
lahf
xchg
xchg
leave
mov
cmp
aam
dec
or
jle
push
inc
stos
and
adc
adc
pop
and
fsubl
xchg
ds
jmp
data16
sub
mov
ja
cld
add
mov
jecxz
ljmp
movsb
int3
dec
decb
jge
mov
fstps
cmpsb
cmp
sti
into
loope
inc
shl
jno
test
ret
scas
mov
mov
jmp
xor
jb
mov
lcall
push
mov
xchg
xor
iret
mov
es
lahf
hlt
loop
mov
cmp
js
mov
push
test
inc
cmp
lock
push
shrb
wrmsr
dec
dec
loop
xchg
xchg
jnp
out
inc
arpl
loopne
in
xor
cmp
or
xor
lds
mov
sbb
rorb
lock
mov
add
roll
cmc
pop
aam
pushf
ljmp
sub
out
test
outsl
and
lock
out
pushf
sub
add
jbe
xchg
fs
jne
movsb
and
jl
int
push
test
das
pop
xlat
or
test
cmp
roll
sub
loopne
pop
out
bound
xchg
mov
fidivrs
fcomi
or
shr
push
cmp
in
lods
or
push
sbb
xchg
jo
aad
mov
adc
jg
ja
rcl
mov
cmpsb
lret
xlat
mov
cmp
jl
fidivs
movsl
loop
pop
daa
adc
scas
inc
mov
pop
mov
xchg
arpl
and
push
sub
inc
mov
push
in
push
jne
push
std
cs
xchg
insb
sub
ret
rcll
cmp
call
xchg
out
lods
mov
lods
fildl
xor
cs
add
arpl
int
stc
nop
dec
ljmp
test
repz
mulb
jg
mov
cld
or
and
jb
cmpsl
scas
pop
es
test
cld
xor
subl
pop
sub
loop
cmp
in
adc
lods
shlb
shrb
shll
push
in
push
mov
and
lea
pop
imul
inc
xlat
adc
repnz
or
mov
jmp
jg
jle
sub
jb
lret
jno
popf
add
or
sub
cmp
jno
mov
ja
daa
xlat
imul
xchg
inc
int
js
loopne
xor
push
notb
mov
out
pop
paddsb
popa
add
add
xor
mov
dec
dec
pop
adc
jecxz
xchg
jmp
xor
decb
in
fildl
cmp
ljmpw
mov
push
mov
lcall
adc
push
stc
notl
and
leave
push
andb
xchg
fnstenv
in
xchg
sub
popa
call
ffree
cmp
xchg
cmc
bound
jnp
out
xchg
inc
xor
sub
in
push
daa
mov
cmpl
xor
decb
roll
movsl
cmp
lods
mov
test
adc
xor
repz
pop
dec
out
outsb
movsb
inc
dec
stos
ljmp
inc
imul
sbb
js
cmpb
popa
push
pop
mov
pop
push
mov
and
outsb
repz
adc
leave
fnsave
pop
ds
shr
mov
inc
cmpsb
mov
sbb
out
cld
pushf
sti
dec
clc
xchg
daa
lcall
inc
add
es
leave
imul
int3
push
movsl
mov
push
jp
fsin
sbb
xor
movsb
addr16
pop
and
lock
rcll
pop
inc
or
pop
cmp
mov
gs
or
scas
jl
iret
push
mov
pop
mov
fs
clc
and
loope
nop
shlb
xchg
dec
pop
pop
ljmp
push
lret
fisubrs
inc
add
jbe
stos
loope,pt
xchg
ljmp
imul
ljmp
jns
mov
jmp
and
repnz
stos
inc
xchg
inc
xor
ds
xor
push
inc
mov
in
pop
jmp
cmpsb
inc
fisttpll
inc
mov
push
shl
mov
pop
repnz
xor
jbe
jp
adcl
into
je
icebp
notl
cmpsb
mov
outsl
adc
ret
mov
adc
mov
aas
jg
pusha
sub
push
ret
jnp
in
ret
andb
push
mov
sti
jns
xor
sbb
ret
cmp
sub
xlat
rcrb
stc
je
in
loop
loope
notl
imul
fdivs
cmp
fnstcw
or
sbb
pop
sub
lea
or
scas
sbb
add
repnz
sbb
lods
xchg
push
adc
push
and
scas
jb
jmp
fnstsw
push
cltd
push
in
or
es
jmp
imulb
ss
dec
test
xor
jg
mov
xrelease
pop
int
fcoms
push
in
fisubrs
dec
scas
inc
mov
jae
jecxz
and
add
lahf
adc
rcl
add
sub
mov
stos
in
aad
add
lock
xchg
inc
cmp
in
inc
sub
ds
in
ss
dec
roll
fcmovnbe
loope
ljmp
cmp
inc
and
xchg
jbe
push
mov
stos
aad
hlt
ret
repz
xor
add
loope
xchg
dec
das
cld
nop
lea
xor
fisubrs
mov
in
and
or
adc
cltd
inc
mov
lea
dec
mov
push
rcl
mov
push
xor
les
adc
shlb
mov
in
sub
dec
adc
mov
scas
cmp
movsl
and
movsb
adc
cmp
cmp
xchg
adc
pop
push
ret
arpl
add
sbbl
pop
mov
sbb
pushf
test
jmp
dec
xlat
es
jb
ss
repnz
insb
and
jb
aas
cmp
imul
jne
icebp
push
cmp
mov
sbb
pop
push
mov
mov
rcrb
les
jmp
add
adcl
dec
xchg
pop
lea
cmc
pop
jne
dec
adc
ljmp
pushf
subb
pop
sbb
adc
jp
ss
cli
mov
scas
in
test
movsb
pop
inc
out
mov
fldt
dec
xor
mov
xor
mov
jge
sub
aad
xchg
pop
insl
mov
adc
mov
jbe
cmpsl
sub
scas
pop
dec
pop
jecxz
cmc
jno
inc
xchg
inc
xchg
push
sbbb
arpl
cltd
insb
xchg
xchg
xchg
mov
adc
pop
hlt
sbb
loopne
loopne
dec
movsb
mov
mov
incl
jg
xchg
lods
popl
ss
pop
hlt
mov
js
popf
test
les
imul
or
test
shrl
and
inc
add
pop
cmp
or
jo
mov
push
fnstcw
subb
flds
clc
adc
lret
pop
push
cmc
sbb
push
sbb
les
je
scas
add
sarb
add
xchg
testb
ds
test
aaa
int
stc
and
aam
sub
mov
jmp
vorpd
mov
jne
xlat
pop
popa
mov
aas
lods
inc
pop
sbb
jno
push
fnsave
adc
cmp
push
mov
pop
leave
das
ret
enter
lds
in
jo
inc
xchg
inc
xlat
add
es
jecxz
inc
icebp
push
xlat
aas
shrl
dec
scas
xchg
fbld
mov
jns
enter
into
jo
and
xchg
adc
jae
mov
add
mov
sub
mov
pop
add
outsb
pop
sub
stos
xchg
std
cmp
repz
movsl
out
push
into
and
sub
mov
gs
std
ret
inc
repz
xor
shrb
imul
mov
lret
bound
or
lret
cld
out
xchg
aam
insl
mov
pop
or
push
movsb
jo
fnsave
sub
sub
pop
push
mov
sub
lds
js
pop
outsl
mov
stos
xchg
xchg
sbb
mov
rcll
popa
sub
xchg
inc
mov
lock
cmp
push
adc
sbb
add
scas
mov
popa
inc
cmc
dec
scas
std
mov
mov
fwait
mov
mov
push
ss
dec
arpl
loop
push
cmp
adc
fs
jp
imul
lock
xchg
jno
ret
scas
ret
les
mov
in
test
and
add
dec
xor
push
ficoml
aaa
mov
lret
and
iret
data16
adc
push
rolb
daa
adc
pop
sub
int3
inc
rol
jne
dec
dec
std
jb
pop
mov
lds
aad
dec
movl
aam
rep
inc
orb
cmp
sahf
mov
sbb
or
pop
pusha
or
sub
or
or
push
movsb
xor
loop
test
lock
rcrl
cmpsb
jb
sub
or
dec
add
push
xchg
pop
loopne
push
cli
jl
int
hlt
stos
aas
rclb
notb
add
lret
mov
sub
jo
jbe
out
adc
add
xchg
stc
imul
xchg
lret
and
mov
sub
stc
xlat
pop
add
or
ret
cmpsl
imul
stc
insl
sub
or
lock
fmul
mov
int3
cmp
fwait
in
add
pmullw
arpl
loop
aad
notb
pop
or
mov
shll
sub
ss
in
xlat
cmp
cli
movsl
or
out
mov
pop
and
leave
rorl
push
pop
cmpsb
hlt
outsl
arpl
mov
call
and
sub
and
and
mov
jg
fs
add
fcmovnbe
outsl
mov
jg
hlt
insb
rcrl
or
mov
push
sahf
out
gs
repnz
and
dec
insl
mov
xor
mov
xor
or
repnz
nop
xchg
sbb
xchg
dec
inc
push
push
add
jne
fyl2x
pop
addr16
bound
jp
inc
enter
das
push
xor
and
pop
lods
jns
sti
pop
inc
sub
mov
sti
nop
insb
les
imulb
outsb
xor
in
mov
pop
ret
outsl
xchg
lock
mov
scas
in
das
icebp
inc
in
faddl
icebp
stos
stc
jmp
inc
push
pop
pusha
testl
push
sub
popa
pop
cmp
xchg
sub
pushf
stc
sar
sbb
jle
mov
js
jecxz
pop
jge
pop
ret
daa
lret
mov
fimuls
xchg
test
not
rcll
fcompl
scas
jne
adc
sahf
mov
mov
ss
push
jo
fs
out
mov
jmp
adc
jae
xlat
rcll
xor
dec
mov
mov
inc
jae
repz
lods
push
adc
call
mov
fs
push
mov
leave
pop
mov
push
inc
bound
pop
mov
inc
outsb
mov
lahf
stos
xor
add
mov
sbb
mov
add
cmpsl
jns
xchg
jnp
lahf
mov
adc
mov
xchg
pop
mov
sbb
into
loopne
int
cmp
or
insb
aad
push
ret
adc
and
ds
push
in
jg
test
adc
sbb
pop
enter
js
and
aaa
xorl
sbb
stos
shlb
xchg
in
pop
mov
dec
aam
pushf
dec
scas
je
jp,pn
mov
lds
insb
inc
aad
dec
mov
fstpt
ret
aam
nop
push
movsl
test
mov
pop
cltd
insb
shll
std
mov
mov
cli
sub
or
or
cld
outsw
bnd
pop
cmp
add
sahf
push
add
xlat
pop
cmp
arpl
stos
sub
subl
inc
lds
jnp
xchg
hlt
mov
pop
cmp
adc
jne
pop
sarb
push
pop
ja
sub
imull
jmp
xchg
mov
cwtl
pusha
sbb
ficomps
push
out
push
rol
sbb
call
roll
push
sti
repnz
or
push
jmp
dec
mov
shr
mov
xchg
mov
out
jns
inc
jle
js
mov
ret
mov
mov
stc
fbstp
mov
jge
pop
xchg
loop
loopne
das
or
xor
jl
nop
jl
adcl
popf
pop
loop
mov
js
jne
mov
add
lahf
push
cs
adc
lahf
sbb
in
inc
decb
int
inc
repz
int3
and
push
mov
adc
stc
jecxz
add
adc
int
gs
dec
pop
mov
shr
test
or
push
cmp
ret
lds
mov
and
push
fnsave
ss
jmp
jno
push
cli
dec
popf
les
jnp
mov
sub
lahf
fsubrs
insl
stc
and
mov
mov
push
sbb
push
add
lea
testb
outsl
or
pop
outsl
and
testl
mov
mov
clc
jne
cmpsb
mov
push
fcompl
push
inc
fldl
aaa
push
mov
mov
mov
cwtl
jg
mov
jl
or
push
inc
outsl
lret
cmp
pop
add
jae
mov
xchg
rcll
mov
jl
add
and
test
loope
xor
inc
mov
push
rcr
orl
pop
adc
mov
packssdw
mov
jmp
sahf
add
data16
arpl
insb
jecxz
sbb
adc
outsb
out
cmp
popa
jb
iret
pop
movsb
ja
leave
inc
cmpsl
lret
pop
ficoml
mov
add
pop
mov
aam
lods
xorb
add
loope
mov
push
jnp
inc
out
cli
icebp
shrb
div
inc
arpl
hlt
mov
idiv
imul
jge
xor
sahf
fdivs
call
push
icebp
jne
mov
repz
in
stc
mov
fistpll
push
pop
cmp
push
xor
mov
add
push
movsl
mov
add
cmp
adc
pop
push
dec
outsb
mov
imul
jmp
out
jge,pt
insb
and
loopne
mov
das
mov
add
inc
loope
xchg
test
inc
dec
jecxz
movsb
cmp
xchg
out
dec
enter
shll
dec
push
xchg
jns
add
xor
mov
std
jmp
ret
fbstp
in
push
cmpsl
dec
cmc
std
and
xchg
or
sti
pop
xchg
in
pop
lret
lahf
mov
mov
cs
lahf
mov
std
jno
mov
inc
ficompl
jg
and
mov
ja
mov
out
insb
fists
cmp
pusha
push
jnp
aas
inc
mov
mov
push
dec
or
fcomps
repz
pop
mov
or
fisubrl
mov
cmovb
jle
inc
lret
lret
xchg
cmc
imul
faddl
inc
adc
fwait
mov
loope
dec
pop
in
ret
add
lahf
mov
jge
pop
icebp
test
outsb
test
pop
popf
xor
icebp
out
jmp
outsl
xor
in
scas
or
push
adc
mov
mov
sbb
daa
push
pusha
push
add
ja
sbb
xchg
lods
mov
testl
sub
push
insl
and
lret
or
shr
push
or
jp
ss
shrl
ds
sti
arpl
pusha
add
push
push
or
dec
push
jge
lret
data16
popl
or
clc
push
mov
and
mov
pop
ret
fdivr
test
dec
pop
ror
xchg
scas
int
cmp
in
dec
dec
in
sub
cmp
sbb
in
bound
sbbb
dec
in
loope
or
xchg
xchg
in
dec
movsl
jge
pusha
aaa
cmp
dec
ret
stc
xchg
dec
enter
mov
xchg
jmp
xor
mov
cli
inc
jmp
push
les
fcompl
jg
dec
stc
in
push
popf
push
adc
xlat
lret
sti
cmc
push
fiadds
jno
lret
mov
cmpsl
push
dec
mov
hlt
addr16
pop
cli
adc
test
lcall
shrl
pop
ret
mov
insb
inc
rclb
or
inc
sti
and
xchg
addr16
xlat
mov
xlat
mov
test
fwait
lods
pop
jl
rcr
ret
lret
bound
push
push
xchg
jg
lods
mov
incl
dec
mov
mov
movsb
inc
push
pop
dec
push
jnp
orl
inc
lahf
fwait
cs
iret
hlt
push
xlat
bound
xor
dec
sbb
cmp
out
in
inc
popf
lahf
push
cmp
faddl
push
push
pop
icebp
dec
gs
cmp
sti
mov
loopne
mov
push
data16
cli
mov
aam
in
into
sub
add
rclb
les
inc
push
shrb
fs
mov
add
inc
fcoml
or
cs
add
mov
stc
popf
and
xchg
push
add
mov
sbb
scas
xchg
fs
cmp
data16
pop
je
inc
inc
lods
and
mov
or
jb
and
dec
sbb
jns
out
inc
adc
addr16
and
aas
jnp
hlt
push
test
cld
in
cmc
jg
mov
mov
and
ret
in
jmp
aaa
iret
fistl
leave
loope,pt
mov
mov
int3
imul
mov
inc
mov
fstps
xor
fsubl
or
fistpll
adc
and
stos
les
aad
int3
sub
outsl
jns
aad
inc
adc
shr
mov
dec
add
test
das
mov
mov
sbb
mov
into
mov
jge
and
push
xlat
xchg
jb
loopne
adc
leave
and
mov
push
testb
pop
adc
daa
adc
jmp
adc
fmuls
mov
cld
jle
dec
sub
bound
in
push
push
cmp
and
in
pop
mov
inc
mov
flds
push
loope
or
insl
xchg
sbb
out
pop
int
mov
push
jmp
iret
add
lret
mov
aam
scas
adc
testb
and
xor
mov
fs
jno
fwait
xor
sbb
inc
jo
inc
cli
shlb
test
cmp
pop
pop
stos
sub
and
inc
mov
jb
stos
addb
jno
pop
mov
or
sub
pop
mov
jo
sub
pop
imul
stos
xchg
cmp
add
push
push
clc
popl
popa
out
inc
xchg
sub
add
lcall
mov
add
int3
in
sbb
idivl
enter
ds
push
in
mov
test
ret
gs
scas
orb
mov
out
sahf
sbb
push
adc
xor
sbb
inc
mov
push
ret
popf
je
dec
leave
jmp
or
idivl
ret
out
nop
addr16
test
je
pop
out
test
and
aas
fimull
dec
jo,pn
cltd
lods
ljmp
lret
add
mov
dec
mov
sub
mov
dec
and
arpl
mov
test
jo
mov
dec
maskmovq
notl
xor
xor
insl
sub
mov
sub
push
inc
pushf
adc
pop
lahf
mov
mov
fisubs
cmp
mov
mov
pushf
dec
inc
jp
cmp
hlt
and
pusha
mov
mov
push
shl
dec
mov
scas
fadd
pop
fdivrl
inc
aam
cmp
int
data16
es
xor
push
sahf
xchg
cmpb
scas
enter
dec
or
pop
movl
jns
movb
xchg
mov
shlb
nop
xchg
sub
fdivl
add
aas
aaa
jnp
daa
sbb
arpl
stc
outsl
sub
jnp
sahf
sarb
xlat
jmp
or
adc
scas
fwait
xor
jle
sbb
fiadds
xchg
add
or
hlt
lock
cmp
xchg
adc
stos
lcall
adc
push
xor
js
jg
divb
add
pop
jnp
xor
call
or
mov
loopne
xchg
and
xchg
sbb
int3
insl
inc
subl
out
or
insb
mov
xor
sbb
xlat
outsl
sub
jb
push
cmpsl
jnp
sbb
je
stos
lret
sti
lret
loopne
out
xchg
jb
or
fsubrs
scas
es
push
add
aam
cmpsb
add
ja
adc
and
lret
push
mov
adc
fsub
daa
push
call
mov
mov
repnz
xchg
xchg
lcall
cld
lea
and
push
sub
jnp
mov
daa
inc
inc
js
outsb
add
add
lds
xor
or
into
es
inc
ljmp
inc
lods
hlt
xchg
popf
popa
xchg
mov
fnstenv
and
xchg
add
mov
push
ja
iret
rcrl
mov
js
mov
inc
in
mov
adc
xchg
cmp
push
mov
stos
jb
push
push
jno
cmp
in
sahf
loope
stc
lock
push
xchg
lahf
nop
jne
pushf
cmpsb
mov
out
test
dec
cmc
mov
or
adc
cld
adc
jmp
or
adc
aas
dec
push
xor
mov
sub
adc
mov
aad
loop
dec
mov
pop
imul
adc
int
into
jno
gs
mov
hlt
lds
mov
test
int3
lahf
addb
dec
pop
inc
arpl
shll
dec
nop/reserved
mov
cltd
jae
mov
add
les
mov
hlt
adc
push
fsubs
xchg
push
pop
shrl
pop
stc
mov
dec
adc
cmc
mov
gs
aam
aaa
xchg
mov
or
pop
or
rorl
jno
adc
stos
xchg
rcr
loopne
jns
std
inc
in
mov
clc
xchg
xor
lock
add
ret
and
imul
loopne
mov
loop
arpl
jo
or
ds
aaa
stos
xor
push
outsl
xchg
adcl
cli
stos
xor
fcoml
push
out
adc
xor
fsts
in
jmp
sub
out
test
stc
xchg
push
mov
out
xchg
xor
pusha
jle
or
jle
test
xor
in
enter
push
or
jge
xorl
clc
ret
xchg
add
xchg
ja
cmp
fucomi
insb
pcmpgtb
jno
xchg
cs
sbb
lcall
dec
fs
mov
push
adc
xor
sbb
push
lret
call
mov
cmp
xchg
inc
and
inc
loop
jmp
inc
inc
lods
into
rol
bound
roll
in
hlt
jae
dec
cli
testb
outsl
sub
push
cmp
pushl
ss
popa
adc
xchg
cmp
imul
push
xlat
sarb
push
imul
cmp
dec
repz
jp
and
mov
xor
push
repnz
mov
pop
nop
push
shr
fisubl
and
push
push
inc
or
xchg
mov
add
mov
xchg
cli
lods
dec
push
adc
lds
inc
sub
xlat
mov
ljmp
stc
je
sub
push
iret
push
ret
ret
mov
add
mov
pop
daa
inc
and
sub
push
mov
inc
lods
push
cmpsl
push
test
insb
and
fisttpl
std
das
and
shll
daa
mov
sbbl
xchg
fidivrs
add
loopne
jne
mov
addr16
lret
mov
inc
enter
dec
or
outsl
push
shrl
jbe
repnz
loopne
or
outsl
lock
cltd
out
xchg
cmp
cltd
xor
xchg
sbb
enter
cli
in
test
pop
xchg
xor
xchg
xor
mov
or
mov
insl
or
mov
lods
mov
test
out
pop
dec
mov
mov
jnp
and
pop
mov
cmp
add
xchg
dec
shr
cmp
into
movsl
aaa
mov
jb
xacquire
dec
pop
pusha
jne
pop
fwait
gs
divl
shrb
cwtl
mov
push
repnz
icebp
dec
stc
fsubr
sub
popf
incl
in
cmp
pop
pop
repz
pop
xchg
jbe
lods
fidivs
out
mul
mov
iret
xor
daa
inc
pop
sbb
sbb
ja
inc
call
hlt
or
data16
inc
das
mov
or
inc
sbb
int
lock
mov
shr
xor
add
loope
pop
loope
loopne
ret
sub
shl
xlat
sub
adcl
fsubrp
ljmp
push
inc
fsubr
jne
xchg
jge
jo
or
test
adcl
lea
push
cmp
scas
loop
aaa
fwait
mov
rolb
shlb
or
sub
mov
inc
test
fimuls
fdiv
pop
aam
lds
and
pop
pop
nop
arpl
lcall
inc
pop
pop
sub
scas
movsl
call
or
jp
aad
sti
push
cwtl
sbbb
mov
cli
dec
orl
sbb
or
sub
push
jne
xchg
out
lret
es
push
jae
xor
fidivrl
push
push
in
adc
shll
sbb
mov
pop
incl
icebp
insb
ljmp
pushf
sti
add
lret
cmpsb
xor
movsb
lods
push
fidivl
popf
cmp
push
mov
mov
jge
mov
sbb
gs
or
fisubs
pop
adc
jmp
call
xchg
movsb
cmp
jmp
or
xor
or
inc
daa
into
in
and
cmp
jle
fcompl
nop
jge
jae
add
sub
mov
into
jno
sub
xor
stos
jbe
jns
mov
lea
mov
adc
fs
mov
pop
fsub
sbb
lods
jmp
push
es
pusha
add
popf
jb
imulb
pop
push
and
xor
lods
mov
rorl
dec
dec
cmpsl
repnz
jne
mov
and
push
loopne
in
inc
sbb
dec
dec
shlb
xlat
and
rorb
add
shrl
xchg
sub
insl
add
xchg
es
push
push
xchg
inc
pusha
cld
mov
mov
add
sub
sbb
xchg
mov
in
sbb
cwtl
testb
adc
dec
cmp
enter
inc
sub
addb
sahf
test
and
or
mov
inc
fldt
inc
cwtl
outsl
inc
stos
mov
nop
lods
xchg
jo
inc
std
push
sbb
xchg
cmp
push
push
and
fstpt
xchg
test
mov
scas
insl
mov
int3
inc
add
push
mov
lock
aam
lds
pop
out
mov
xchg
or
cmp
pop
cwtl
iret
gs
aas
mov
jo
in
pop
mov
mov
lods
sarb
mov
jmp
cld
pop
stc
inc
inc
adc
ljmp
flds
sub
fsts
jle
dec
sbb
test
mov
enter
push
mov
and
ja
clc
nop
sub
jmp
push
sbb
pop
cmpsl
mov
test
mov
test
fs
ss
vpcmov
pusha
pusha
les
pop
xlat
mov
les
rorb
xchg
sti
enter
and
adc
movsl
and
cltd
ja
push
cs
lret
adc
and
das
push
notl
out
sbb
push
inc
sbb
mov
int
in
cltd
or
sub
jbe
mov
repnz
and
jns
sub
mov
gs
shrb
pop
cmc
dec
fcmovnb
and
imul
mov
push
test
int
arpl
sub
cmp
out
lret
icebp
lcall
cmpsb
add
inc
imul
adcl
lods
jns,pn
popf
into
jecxz
mov
cltd
loope
mov
xor
test
or
stos
jmp
sub
dec
insb
ja
mov
or
cs
or
cmpsb
nop
out
pop
mov
cmp
repnz
stc
sbb
movb
push
xchg
bound
fistpl
add
and
inc
popa
mov
stos
pop
test
cmp
push
mov
push
in
push
adc
sti
and
cmpsb
jge
scas
jne
cwtl
mov
stos
repnz
sub
mov
hlt
and
aad
fdivrs
mov
cmpsb
mov
push
jae
pop
jg
mov
xor
xor
mov
jecxz
dec
mov
call
sbb
add
xor
mov
jnp
push
dec
pusha
sub
add
pop
mov
xchg
sbb
or
dec
fstpt
sti
inc
add
fadds
imul
icebp
mov
and
sub
dec
add
mov
add
push
push
cmp
out
jge
fsubr
mull
sbb
mov
push
sti
and
ret
mov
jns
test
jl
and
stc
mov
xchg
dec
mov
fiadds
inc
or
mov
xor
and
aas
or
lcall
scas
fisubrl
or
pop
ret
push
imul
orl
ja
test
aam
sbb
mov
or
and
mov
mov
inc
pop
fbld
icebp
js
mov
pop
mov
push
movsl
fstpl
sub
add
sbb
data16
sbb
stc
sub
insl
mov
lahf
add
roll
sub
icebp
jbe
imul
shl
sbb
mov
mov
add
pop
push
lock
testl
and
push
inc
mov
out
push
jg
je
jo
and
inc
gs
addr16
or
ret
xor
fcmovnu
sbb
adc
lea
sti
imul
inc
xor
cmp
sbbl
mov
and
gs
roll
fdivl
stc
cmp
aam
cmp
cmp
dec
pop
xor
inc
lock
push
pop
lahf
ss
adc
int3
cld
ljmp
cli
test
sbb
outsl
inc
arpl
movsl
mov
mov
add
nop
push
gs
jae
mov
in
div
lret
dec
test
jne
dec
fld
pop
or
not
mov
adcl
scas
int3
and
pop
outsl
cmp
lcall
cmp
pushf
lea
sbb
out
or
cmp
mov
mov
cmc
fnstenv
mov
popf
cmpsl
and
and
lahf
xchg
shrl
cwtl
dec
push
inc
xchg
lock
incl
or
lret
int3
rorl
into
fldpi
iret
sbb
pop
or
addr16
out
sahf
xor
push
outsl
xchg
lret
nop
daa
outsb
dec
push
lret
in
fdivl
push
xchg
cmp
ja
cltd
and
sti
subb
icebp
sbb
jne
orl
sbb
add
cmp
lahf
or
rorb
fsubl
psubw
jg
jl
out
incb
dec
loope
or
stc
push
stos
push
sbb
push
out
xor
pusha
inc
pop
icebp
cmpsb
iret
mov
loopne
xorb
mov
and
xchg
xchg
mov
sahf
mov
lock
xor
cli
out
lcall
push
out
pop
repz
push
push
sti
daa
push
mov
jae
jbe
sub
into
jle
gs
popa
lahf
sti
aaa
hlt
pusha
sub
xchg
pop
pop
cmp
out
in
adc
push
and
incl
cwtl
push
sbb
cmpl
jb
in
and
mov
cmp
idivb
out
jb
mov
aas
sub
scas
inc
stos
cli
xchg
mov
jbe
mov
repnz
or
lret
push
insl
loop
int
mov
and
or
stos
mov
pop
xchg
mov
add
sbb
call
jae
pop
sbb
enter
lds
sub
les
mov
sub
jnp
dec
insl
xchg
push
call
ror
jmp
and
lahf
jl
inc
cmp
mov
pop
push
int
adc
cmp
fcmovb
inc
or
adc
sub
das
mov
jmp
or
inc
movsb
dec
jnp
jno
mov
xchg
xor
mov
pop
sarb
sub
mov
std
dec
outsl
mov
adc
sub
in
inc
cli
lret
pop
pop
fs
mov
xchg
clc
mov
fldl
mov
or
mov
std
imul
pop
sar
cltd
std
xor
push
add
lret
jmp
xor
mov
inc
data16
jmp
fdivl
mov
mov
daa
lret
adc
cmpsb
stos
pop
lret
iret
xor
sti
push
ljmp
pushf
xlat
push
int
adc
jo
mov
and
mov
adc
xor
lahf
mov
notb
xchg
mov
movsb
daa
repz
imul
orb
in
scas
mov
dec
sub
push
rcr
sbb
lock
dec
stos
in
gs
dec
lret
lcallw
mov
mov
mov
push
jl
xchg
outsb
cli
dec
pop
sub
lock
or
cmpsb
movsl
rcrl
pushf
mov
stos
ret
loope
jecxz
js
cmp
pop
pop
push
dec
and
in
push
outsb
mov
enter
lods
dec
push
mov
lds
sbb
loope
jge
test
punpcklwd
sub
jp
adc
mov
mov
hlt
lahf
mov
daa
jo
fdivr
and
push
lods
repz
je
mov
test
mov
mov
aad
scas
mov
mov
add
int
cmp
pop
push
pop
out
xor
inc
lods
jnp
mov
xor
mov
movsb
add
aam
je
dec
mov
or
imul
cmpsl
call
xlat
mov
mov
or
cmp
dec
jle
pusha
mov
dec
out
jp
shl
out
xor
or
pop
mov
mov
jecxz
mov
pop
loope
lds
mov
or
cli
xchg
je
push
scas
faddl
jne
test
inc
faddl
aad
cmp
cmc
fsubrl
mov
mov
fwait
leave
xchg
sub
in
adc
inc
jge
fsubs
aaa
aas
into
inc
mov
mov
out
bswap
mov
xor
mov
ror
cltd
in
orb
pop
popf
int
xlat
leave
sbb
pop
mov
mov
dec
xchg
fmuls
enter
lahf
add
fnsaves
mov
jmp
xor
xchg
arpl
int3
arpl
sbb
ds
mov
jb
xchg
inc
popa
clc
push
subl
sbb
out
cltd
in
scas
and
and
cmp
mov
or
adc
cld
insb
jne
inc
cmp
mov
jle
mov
cmp
cmp
mov
push
jecxz
adc
and
or
jg
mov
xchg
scas
or
adc
inc
xchg
jle
xchg
fimull
cmp
push
push
gs
cmp
add
ret
mov
test
test
cmpsl
loope
test
pushf
mov
and
push
loop
mov
ret
daa
xchg
add
out
inc
add
jno
pop
movsb
pop
loopne
push
xchg
imul
xor
sub
insl
rep
cmp
dec
scas
xor
cmp
mov
xor
stos
or
cmpsl
lods
mov
jle
push
fnstsw
mov
xor
sbbb
rcrl
test
sub
in
cmp
stos
add
jne
fisubrl
mov
test
cmp
sahf
das
stos
or
hlt
mov
imul
jb
add
mov
and
mov
int
out
decl
bound
daa
std
dec
in
push
and
jae
call
xchg
jg
mov
dec
int3
mov
mov
mov
xchg
cmpsl
sbb
sub
outsl
sti
in
xor
inc
arpl
les
xchg
adc
push
inc
shlb
cmc
movsb
ja
dec
adc
xchg
outsb
rorb
stos
pop
cmp
push
push
dec
jecxz
mov
lret
jp
lock
mov
adc
adc
add
leave
out
xchg
jmp
icebp
int3
jmp
fdivs
addr16
mov
or
cld
rep
shrl
insb
stc
adc
jne
mov
js
mov
pop
mov
cmc
xchg
ret
lret
cltd
sahf
sub
cmpsb
push
in
sbb
push
cmc
push
repnz
fucomp
xor
or
jg
les
scas
les
mov
adc
loop
pop
loop
insl
mov
add
jge
mov
mov
jle
dec
imull
aaa
inc
or
les
int3
adc
mov
push
mov
add
adc
cmpl
dec
mov
xchg
mov
in
into
enter
mov
dec
and
adc
push
leave
loop
stos
lcall
xchg
xchg
xor
jp
or
and
jle
add
cwtl
jg
mov
add
mov
inc
mov
pop
and
mov
sarl
sbb
cs
mov
fcmovne
dec
out
jp
xorl
add
adc
iret
out
lcall
outsb
std
enter
mov
pusha
cmc
pushf
repnz
jg
mov
mov
ret
push
or
cs
xchg
xchg
sub
jmp
test
push
jno
sbb
arpl
ja
ljmp
jns
dec
sub
mov
imul
test
mov
push
push
and
mov
test
in
repz
cltd
jne
sbb
add
mov
mov
dec
sub
inc
pushf
fwait
and
cld
adc
repnz
jg
mov
jmp
inc
ds
and
push
pop
xchg
jnp
adc
and
adc
dec
and
push
loop
pop
out
xorl
sub
dec
dec
pop
xorb
sub
call
lcall
loope
mov
pop
pop
and
mov
jne
push
divl
and
adcb
cs
push
mov
inc
jbe
inc
mov
sti
cs
cs
out
fsubl
and
jns
bound
test
stos
je
arpl
inc
into
ja
testb
cmp
cmpsb
loop
fisubl
push
or
push
test
or
popf
or
inc
movsl
jne
pop
xchg
mov
xorb
mov
jg
out
rorb
repz
and
stc
lea
mov
xchg
sub
adc
jo
lock
xchg
aaa
jl
sbb
pop
and
leave
mov
ret
stos
push
jb
jns
xchg
xchg
dec
mov
xlat
cmp
das
in
das
push
inc
add
cmp
repz
push
cs
mov
enter
lret
fcoms
fnstcw
xchg
mov
pop
out
bound
inc
roll
mov
imul
out
xor
push
mov
bound
xchg
cmpsb
lds
fnstcw
jbe
int
shll
push
mov
pop
mov
stc
add
rolb
ss
xchg
sub
shl
mov
in
inc
repz
push
mov
push
pop
ficoms
into
popa
ret
mov
call
mov
mov
out
fwait
add
sub
sbb
shl
cmp
push
adcb
cmp
dec
mov
sti
xchg
rcll
sarb
push
sqrtps
jo
xor
jne
jl
aaa
mov
popa
icebp
xor
ja
add
xchg
iret
outsb
mov
sbb
xchg
lret
stc
pop
push
fistps
sub
push
in
lods
mov
push
and
jo
mov
mov
inc
imul
mov
pop
int3
jnp
lret
icebp
pop
inc
popf
out
test
fbld
roll
mov
xchg
cli
icebp
mov
movsl
dec
adc
xor
ret
fistpl
or
mov
and
loopne
lret
and
es
ficomps
popa
clc
inc
inc
pop
inc
bound
mov
filds
int
pop
dec
mov
xchg
addr16
dec
mov
adc
pusha
addb
inc
jl
adc
cli
sbb
insb
cmpsb
xchg
or
in
sar
je
lahf
inc
lret
loop
pop
mov
cmp
cmp
fwait
insb
shl
jns
imul
mov
mov
stos
mov
fnsave
repz
imul
pop
cmovnp
hlt
adc
adc
xor
dec
bound
xchg
mov
jae
pop
push
and
jl
lahf
mov
and
sarb
pop
in
xor
cmp
in
sub
les
out
jne
pop
out
fwait
sti
sub
lret
mov
and
dec
out
aam
jl
loopne
shr
push
sub
test
cmc
stc
loopne
bndldx
jl
jmp
dec
push
mov
pop
stc
iret
jb
movsl
adc
stos
pop
jns
and
test
pop
mov
xor
aaa
das
add
xor
lods
mov
mov
test
fnstcw
push
cli
pop
jmp
cmp
stc
nop
in
clc
inc
mov
sbb
mov
loop
or
sub
jnp
adc
cmp
cmp
lahf
sub
test
xchg
jle
jnp
mov
sahf
repz
adc
in
inc
push
push
cmp
push
insl
inc
cmp
imul
fnstsw
rorl
or
jne
pop
test
add
std
lret
xchg
cs
pop
inc
pop
pop
sbb
ret
or
mov
mov
sar
cmp
sub
mov
jae
jnp
mov
add
inc
mov
push
push
sahf
xor
inc
and
pop
popf
adc
dec
popf
fs
dec
xchg
stc
xchg
push
data16
es
shll
cmp
cltd
mov
or
sbb
push
adc
cmpsl
push
lods
cmpb
cmpsl
xor
std
sahf
or
sti
mov
fisubl
adcb
jl
imul
popf
mov
push
rcr
lods
push
test
cli
and
push
mov
fadd
xchg
and
scas
inc
push
filds
fnsave
pop
jne
inc
fldenv
lret
inc
arpl
ficoms
fstpt
push
inc
popf
mov
dec
mov
rcrl
mov
push
or
out
mov
sarl
mov
inc
push
in
mov
dec
push
das
add
push
mov
mov
jl
adc
mov
sbb
jb
movsb
andl
icebp
cmc
fdivrl
mov
lcall
or
daa
jle
clc
movlps
mov
clc
test
arpl
insb
push
sbb
xlat
movsb
inc
and
test
mov
scas
and
or
scas
ljmp
iret
lods
lea
sbb
pop
sbb
in
cmp
xor
pop
nop
in
mov
pop
test
shrl
orl
xor
adc
lods
fucomp
test
jne
mov
test
stc
fsubrl
icebp
inc
in
push
mov
push
lods
and
int3
inc
xor
mov
cmp
jb
fdivs
pop
ds
or
fldenv
jge
lcall
inc
arpl
add
inc
cmp
sbb
xor
cmc
mov
outsl
add
rcrb
mul
pop
in
sbb
int3
movsb
iret
bound
imul
xor
stc
js
jle
aaa
mov
hlt
addr16
pop
mov
mov
jae
add
andl
cmp
in
cmp
lret
pop
xchg
int3
frstor
or
test
out
ss
aaa
daa
sub
aam
arpl
shl
xchg
sbb
js
xchg
sbb
fwait
sub
jp
push
mov
shll
push
scas
test
lea
rcll
xor
mov
int3
fildl
ret
push
xor
or
jns
pop
or
pop
enter
in
out
mov
enter
add
test
jecxz
cmpsb
stos
ficoml
xor
hlt
add
mov
pop
ror
push
pushf
push
pop
out
pushf
xorb
fldcw
xchg
int
movl
add
add
insl
fisubrl
fstpl
mov
mov
push
sub
lea
mov
adc
mov
loope
fldcw
xor
sbb
insb
mov
sbb
ds
sub
pop
xchg
movsb
add
inc
pop
xor
inc
pusha
jns
lcall
loop
sub
pusha
or
dec
mov
add
push
ret
pop
or
rcrl
lea
jne
mov
out
mov
stc
pusha
out
scas
adc
dec
mov
decl
imul
aam
dec
push
pop
adcb
lock
jge
add
mov
sti
aam
jmp
adc
rorl
inc
push
pop
xor
ss
pop
add
pop
inc
fildl
mov
dec
movb
mov
rolb
mov
inc
test
dec
push
rcrb
scas
mov
sub
sbb
mov
imul
inc
add
pop
pop
lahf
xlat
and
aaa
mov
or
sub
les
leave
and
mov
movsb
jp
mov
fmuls
fistps
mov
rorb
jno
inc
push
mov
arpl
into
push
push
jne
adc
add
jge
lcall
xor
in
hlt
mov
push
mov
jle
jb
jge
mov
aaa
stos
es
push
fsubrs
ret
lea
push
divl
add
aaa
enter
pop
cmp
xor
imul
adc
xor
ljmp
mov
jns
rep
jecxz
lret
mov
outsl
mov
scas
jo
repz
mov
add
push
or
add
cmpsb
jns
sub
sub
je
push
int
int
push
add
xchg
test
cmp
jp
ljmp
lods
mov
and
xlat
sub
movsl
cmp
inc
fmull
sub
mov
addl
sub
cmp
test
pop
shrl
les
mov
out
fsubs
fsubrl
mov
daa
scas
fdivs
adc
imul
sbbl
pushl
dec
jmp
pop
loop
lock
and
xchg
sbb
mov
mov
mov
stos
cmp
xchg
int
dec
pushl
adc
mov
xor
pop
sub
pop
scas
jg
mov
inc
or
test
jg
in
stos
cltd
mov
ss
add
jb
fsub
add
outsl
mov
and
mov
cwtl
push
popf
lret
test
gs
rcrb
and
dec
andl
adc
cmp
sub
les
ds
fldt
lock
cmp
pop
insl
mov
sarb
mov
imul
inc
mov
xchg
insb
stos
cli
jg
and
stc
and
push
mov
inc
andb
call
sbb
in
stc
or
sub
sbb
pop
pop
cmp
sub
mov
mov
push
adcb
xor
fisubs
sub
dec
cmp
movsl
xor
mov
push
lret
cld
js
lcall
popa
adc
ss
cmp
push
jmp
add
flds
sub
andb
fucomi
sub
mov
push
inc
daa
outsl
xchg
mov
push
jecxz
pop
push
dec
fisubs
loop
das
cmp
clc
xchg
xchg
mov
sbb
fmull
xchg
das
or
cmpsb
mov
sbb
shrl
aad
loope
cmp
mov
out
sbb
adc
hlt
cwtl
divl
sbb
mov
test
adc
insl
stc
or
das
cmpb
nop
scas
add
mov
cmp
push
repz
fs
stos
push
push
mov
imul
adc
jp
or
in
aam
fisubs
rcl
jp
adc
pop
icebp
test
lret
cld
push
dec
xor
int
sub
mov
mov
aad
sub
bound
fs
mov
or
lret
jns
cmp
pop
dec
push
ds
leave
mov
cmp
sbb
scas
add
loopne
rorb
mov
cmp
nop
rcrl
jmp
enter
jae
ss
sbb
add
stc
testb
xchg
pop
adc
jle
mov
cmp
and
sbb
mov
xchg
imul
mov
mov
cmpsb
pop
jecxz
ds
stc
loopne
das
pop
cltd
pusha
ds
call
mov
or
outsl
xor
out
out
add
out
outsb
stos
daa
or
xchg
push
pop
out
decb
movsb
add
sub
iret
pop
cmp
inc
out
push
in
pop
add
insb
inc
lds
daa
add
dec
jle
sbb
mov
stos
repz
sbb
lods
icebp
mov
dec
movsb
mov
loope
repz
hlt
xor
repnz
inc
dec
adc
test
sbb
cmpsl
sbbl
push
push
and
xlat
test
or
clc
in
test
out
mulb
dec
rorb
or
sbb
adc
mov
stos
jmp
jp
aas
test
out
xor
fcmovbe
rorl
jge
jge
jle
jge
sbb
sbb
xor
arpl
add
in
mov
add
ficoms
pop
test
mov
rcrl
push
js
aas
repnz
loop
repz
dec
mov
imul
ljmp
cs
xchg
mov
dec
cmp
mov
xadd
std
inc
xchg
cmp
sub
pop
fbld
push
add
pop
fsubs
mov
inc
xor
fisubrs
daa
jle
mov
lahf
sbb
fs
aam
pop
xchg
jae
lods
mov
pop
sahf
fdivp
iret
jl
iret
std
in
push
or
lods
add
push
int
mov
stc
or
arpl
jle
popf
mov
jae
and
mov
lock
push
push
imul
insb
inc
mov
stc
lea
mov
cmp
pop
push
xchg
sub
stos
enter
push
lods
jae
cmpsl
push
mov
add
fsts
push
dec
mov
mov
dec
shlb
xor
sahf
bound
mov
aas
lret
xchg
add
test
addr16
ss
sub
in
test
sbb
mov
dec
gs
test
mov
jmp
sub
push
loope
or
hlt
pop
test
jnp
mov
scas
das
mov
ss
idivb
jge
sub
cmpsb
push
push
gs
outsb
push
mov
cs
jno
xor
xchg
hlt
xchg
push
les
dec
imul
adc
jns
gs
xchg
mov
sahf
push
jno
xchg
inc
cltd
dec
and
xchg
fildl
sbb
lods
cmp
xchg
mov
mov
call
add
pop
mov
ds
into
fidivs
out
notl
pop
std
cltd
adcb
aad
jecxz
inc
pop
popa
dec
cwtl
sbb
mov
roll
stc
dec
adc
jge
lods
mov
jb
scas
ret
mov
dec
gs
pop
mov
mov
push
insl
movl
int3
cmc
xor
jb
fs
lock
xchg
xchg
fdiv
lret
push
inc
loopne
test
xor
dec
repz
mov
out
jmp
inc
in
in
or
adc
mov
test
pop
je
out
dec
lods
fsubs
jg
popa
sub
adc
or
jle
adc
adc
cmp
shll
cmp
rcl
enter
jle
dec
pop
xchg
sub
lcall
cmpsb
dec
hlt
repz
inc
jle
adc
mov
loopne
ficompl
lret
cmpsb
in
jns
enter
mov
sbb
pop
ret
jecxz
dec
cmc
pop
in
rclb
getsec
out
ret
das
jbe
pop
push
push
pop
push
aaa
fucom
nop
mov
jle
sbb
pop
cltd
pushf
mov
jle
lods
mov
xchg
pop
pusha
mov
ficoms
mov
or
das
out
or
dec
cmp
xchg
or
sub
push
lahf
push
xor
xor
push
inc
jns
mov
test
jo
aaa
pop
leave
jne
stos
xchg
push
mov
dec
shll
pop
sarl
xchg
jp
adc
and
cmpsb
cwtl
mov
mov
xchg
sti
lds
pop
mov
mov
insl
in
mull
lcall
sbb
jge
cltd
or
mov
dec
pop
jne
add
cmovl
push
test
or
inc
subl
sahf
or
adc
mov
cmpsb
mov
fdivrl
push
rcll
hlt
mov
mov
pop
dec
cmpb
xor
add
aaa
pop
mov
cmp
repz
mov
pop
mov
das
lock
inc
repnz
push
xchg
jge
out
fwait
dec
xor
sbb
in
repnz
dec
sahf
sbbb
add
cmc
jno
jbe
sbb
xchg
fnstcw
push
fadds
inc
inc
push
add
pop
ja
and
loopne
pushl
add
mov
mov
dec
cld
les
movsb
adc
dec
dec
inc
or
pop
adc
push
push
into
loope
mov
fs
cld
mov
xchg
cmp
arpl
xchg
and
inc
popa
cmp
jg
iret
and
pop
jo
icebp
xor
fmuls
js
cmp
div
cmp
fsubr
inc
xchg
les
stc
sub
ljmp
sahf
test
js
lods
stos
xchg
mov
dec
cmpsl
ret
loope
xor
xchg
xor
scas
mov
hlt
stos
or
xlat
sbb
add
push
repz
push
or
mov
xor
dec
in
xor
clc
mov
cmp
stos
xor
pushf
dec
fucomi
dec
imul
repz
xchg
outsb
inc
adc
pop
inc
inc
xlat
imul
pop
mov
adc
inc
lods
popa
in
addr16
shrb
cmpsl
cwtl
int
sbb
cmp
mov
or
xchg
std
fadd
jge
cld
dec
call
cld
in
movsb
mov
pop
xor
and
insb
pushf
loop
sti
in
pop
push
repz
inc
lods
inc
sbb
mov
sub
in
jo
int
pop
jmp
mov
mov
out
xor
in
or
aaa
mov
mov
testb
jns
ret
pop
sub
pop
sub
mov
and
shlb
sbb
mov
pushf
mov
test
dec
scas
xchg
movsb
jge
iret
shl
and
add
into
cmp
idivl
aam
add
in
std
cmp
jae
mov
sbbl
or
and
mov
loopne
cwtl
test
mov
mov
sarb
test
mov
xchg
and
xor
pop
ret
testl
fsts
stos
ss
jnp
inc
test
insb
das
pop
ret
xor
jb
rcl
sbb
int
movsl
imulb
cltd
test
loop
mov
dec
jne
gs
xchg
out
out
push
mov
ss
mov
test
push
enter
lret
lea
aas
lods
mov
test
das
loop
and
int
mov
hlt
arpl
es
incb
inc
mov
out
adc
adc
adc
adc
jbe
adc
xchg
dec
rorl
jle
xchg
sub
mov
dec
call
mov
iret
cmp
mov
mov
roll
rclb
pop
in
sub
add
inc
jae
sub
mov
jecxz
rcr
aam
mov
sub
aaa
adc
jmp
mov
and
sti
stc
mov
int3
outsl
ss
jno
dec
pop
xchg
cmp
sbb
mov
adc
aam
out
push
add
ret
pop
ljmp
add
cmp
shrb
and
ss
out
cmp
pop
mov
sub
xor
ds
aas
sbb
pop
xchg
add
lea
movsb
out
popa
dec
push
stos
aas
or
cmp
fwait
test
inc
fadds
loope
in
xchg
pop
pop
mov
ucomiss
std
push
aad
aad
lods
pop
fdivrl
or
pop
cmp
push
pop
dec
add
cmp
movsb
cmp
sbb
stos
sub
xor
aas
push
shr
jg
xlat
hlt
pop
mov
aas
or
and
outsb
aam
cmpsb
xor
aam
pop
add
or
and
sub
pop
aaa
mul
mov
sbb
push
mov
cmc
fistl
xchg
les
mov
mov
xchg
sub
sar
jp
out
adc
lret
and
push
stos
rol
test
out
push
enterw
mov
je
and
in
movsb
mov
mov
mov
cmpsl
stos
fstps
mov
lret
xor
jo
test
jge
sbb
fdivrs
cli
es
out
adcl
cwtl
or
and
mov
sti
stos
dec
push
lds
test
cmp
dec
pop
mov
adc
in
sub
arpl
add
sbb
idivb
add
push
popl
sbb
in
pop
cmp
shll
jns
mov
sub
cltd
ret
mov
sub
mov
sbb
nop
adc
hlt
dec
xchg
mov
or
pop
xor
ss
xchg
popa
sbb
push
push
jmp
and
jb
jo
mov
in
test
sbb
rclb
dec
stos
daa
sbb
repnz
jns
insb
mov
test
pop
lret
and
popa
push
lret
lret
inc
inc
push
fcoms
arpl
jbe
cmp
push
hlt
jnp
ljmp
neg
xchg
iret
or
push
sub
pop
jne
fimuls
cwtl
jp
cmpsl
inc
or
lcall
dec
outsl
sbb
sub
pushf
xchg
xor
fwait
sub
aad
jle
testb
fwait
jns
push
and
or
fidivl
dec
adc
cmc
mov
popa
stc
xor
mov
les
adc
xchg
dec
sub
repz
add
mov
outsb
push
clc
sbb
inc
aaa
mov
push
mov
into
cli
out
xor
cs
and
push
scas
je
bound
aam
in
jmp
notb
test
lcall
shrl
push
insb
adc
mov
ja
fst
scas
test
or
pop
test
andl
xchg
sub
add
test
add
int
xchg
add
addr16
or
sub
daa
fnsave
scas
testl
mov
adc
adc
dec
aad
xor
mov
pushf
aas
outsl
fbstp
rcrb
clc
adcb
mov
xchg
rcrl
sub
push
push
cmp
adc
add
push
leave
lea
arpl
test
test
push
jo
mov
cld
pusha
test
lahf
test
sbb
and
add
adc
sub
mov
cmp
inc
inc
pop
inc
gs
push
loopne
cmpsb
mov
fcmovne
sub
push
icebp
sub
rol
pop
dec
int
jge
dec
testb
cmp
repz
cmpsl
pop
add
test
and
rolb
and
cmp
ljmp
dec
out
push
dec
mov
in
add
push
jecxz
cmp
pop
jno
pop
jge
psrld
cmc
inc
adc
dec
addr16
add
rcll
es
push
testb
out
ret
les
jp
and
jl
sbb
into
xchg
push
pop
inc
pop
outsb
icebp
enter
and
inc
dec
dec
fisubs
mov
lock
mov
sub
insb
shrb
push
jb
xchg
mov
mov
push
inc
inc
jmp
or
movsl
icebp
or
andb
adcl
shll
sahf
shr
mov
lods
imul
inc
xchg
jbe
or
in
lret
add
fxsave
bound
or
test
shrl
mov
clc
adc
clc
pop
int3
or
or
popf
or
mov
arpl
stos
andl
jns
sti
insb
notb
xchg
int3
and
in
lea
push
call
adc
pop
pop
icebp
mov
cmp
jno
push
call
push
ljmp
xor
dec
les
ss
lret
push
or
dec
sbb
cmp
jbe
fucompp
push
cmpl
pop
test
out
dec
aam
flds
add
out
and
jecxz
mov
ss
outsl
push
or
mov
out
or
inc
hlt
or
test
lahf
adc
notl
packuswb
negl
je
sbb
adc
fistl
fldt
cmp
dec
xchg
dec
mov
int
dec
dec
dec
push
and
push
mov
sahf
jns
enter
mov
adc
adcb
stos
sbb
iret
loope
pop
shrb
sub
and
stc
mov
pop
cmpsl
push
xchg
or
push
shrl
cmp
lahf
pop
dec
mov
jo
dec
in
jp
push
mov
ret
aad
mov
or
aas
adc
push
push
or
push
loope
lock
movsb
mov
loop
add
inc
mov
loopne
sub
lea
jmp
jb
mov
push
leave
je
sti
mov
pop
add
mov
jb
mov
out
decl
or
push
push
movsl
insb
add
mov
sub
push
imul
or
in
shl
and
je
shll
push
adc
cmpb
pop
xor
add
call
in
out
sbb
into
fcompl
fcoml
orb
stos
or
mov
sbb
push
cs
js
fdivrs
ret
insl
outsb
scas
mov
cltd
or
lods
jmp
insb
enter
adc
xchg
pop
int3
outsl
push
sti
or
outsb
dec
sti
cmovns
out
ds
sahf
cmpsb
nop
or
ljmp
inc
push
push
hlt
lret
xchg
add
loopne
dec
cwtl
and
and
sub
inc
cmc
cmp
push
data16
addr16
dec
push
loop
cmp
add
dec
push
icebp
mov
sub
pop
mov
add
sbb
push
or
add
mov
push
ret
jne
push
mov
test
lds
or
pop
adc
xor
fidivs
imul
adc
sub
push
loop
mov
add
jae
loopne
dec
sarb
push
in
cmpsl
idivb
out
imul
jno
bound
pop
daa
std
ror
and
mov
sbbb
fsubrp
xor
fsubr
xchg
rclb
xchg
fninit
jae
out
or
cmp
push
jmp
or
out
clc
sub
fdivl
mov
ret
pop
pop
pop
cld
xchg
pop
lds
cmp
jecxz
xchg
cmp
cmc
lahf
negb
ret
jbe
adc
or
in
mov
sbb
mov
leave
mov
ficoms
and
call
rolb
jnp
shlb
cmp
aas
dec
rorl
or
lea
fdiv
aaa
fldenv
inc
adc
es
dec
int3
out
push
test
and
lods
cmp
stos
push
inc
popf
cmpsl
icebp
ror
mov
push
dec
xchg
xor
in
and
dec
bound
adc
sub
stos
jne
adc
stos
mov
ret
jnp
stos
pop
mov
lea
sub
int
xorb
dec
je
lock
push
adc
and
lret
in
xchg
and
jbe
add
dec
data16
push
pop
mov
dec
in
cmp
stos
out
push
mov
mov
repz
mov
roll
aad
jnp
adc
test
je
stos
sbb
aam
xchg
or
arpl
cs
in
xchg
subl
iret
enter
mov
int
aam
cli
mov
mov
addr16
lds
cwtl
nop
sub
mov
pop
inc
push
les
imul
movsb
xorb
mov
jge
jae
dec
mov
xchg
xchg
and
ljmp
jle
out
mov
mov
mov
std
data16
push
push
add
test
fnsave
and
push
insb
sti
and
push
insb
mov
and
repnz
cmp
and
add
xor
jecxz
jp
insl
mov
rcrb
jmp
mov
jb
sbb
jp
ja
test
cld
xchg
sbb
je
outsl
add
cmp
adc
lds
es
in
xchg
or
flds
sarb
dec
xlat
adc
rorb
ss
mov
loopne
jno
repnz
stc
push
inc
jo
jmp
pushf
jbe
mov
and
and
or
sub
jns
push
cltd
push
pushf
or
xchg
ljmp
orps
jb
mov
mov
repnz
xchg
out
les
sahf
sub
add
or
inc
inc
stc
arpl
dec
mov
pop
imul
xor
xchg
scas
push
insl
shl
mov
mov
cmp
int3
negb
mov
icebp
ljmp
mov
push
cmp
or
jbe
mov
fidivs
jecxz
int3
cmpsl
xchg
jmp
lahf
shlb
sbb
sbb
sub
inc
cmpsl
test
pop
xchg
stc
mov
mov
sub
fisubrs
push
test
in
jne
or
jnp
lock
jl
inc
loope
add
jae
es
jbe
push
xchg
stos
inc
push
xlat
fadds
xchg
pop
dec
pop
jmp
outsb
push
mov
push
lea
cmp
push
mov
push
leave
jb
mov
push
inc
fldl
iret
data16
push
jmp
sbb
xchg
nop
jae
or
mov
hlt
adc
push
jp
mov
sbb
test
push
insl
and
sbb
pop
lahf
mov
cli
and
jg
mov
sub
or
cltd
or
les
cmp
loop
mov
or
scas
std
fwait
pop
gs
xchg
push
inc
enter
sbb
lret
pop
and
or
lea
popa
xor
push
and
insl
or
lcall
loop
cmp
or
mov
lods
xchg
dec
and
fidivrs
xor
leave
cmpsl
sbb
pop
push
enter
testl
lahf
cmc
push
jae
shll
inc
scas
inc
inc
mov
inc
adc
inc
into
pop
out
hlt
ret
mov
mov
mov
sub
mov
push
out
test
fisttpl
rcrl
shll
fdivl
repnz
lret
jp
sti
dec
push
mov
adc
mov
add
pop
imul
jo
out
stos
test
xchg
or
int
jbe
sub
inc
pop
popf
adc
ror
dec
fistpll
jae
test
iret
jns
div
xlat
outsb
and
adc
xchg
ret
ss
shr
pop
mov
ja
dec
mov
sub
out
cmp
or
adc
mov
xor
out
mov
mov
xor
mulb
rcrl
dec
mov
sahf
xchg
out
xchg
cwtl
lret
dec
testb
cwtl
les
xor
sbb
adc
mov
mov
pop
mov
lret
jae
std
pop
cmc
mov
sbb
sahf
inc
cltd
cmp
cmp
pop
lds
xchg
sbb
or
inc
cmpsb
sub
int3
ret
fdivs
dec
pop
inc
sahf
add
pop
out
mov
pop
out
sahf
fsubrl
mov
mov
jmp
fimuls
cmp
cmpsl
cmpsb
lock
cmp
cs
push
cmp
pop
xchg
es
stos
icebp
mov
sti
enter
adc
xchg
inc
xchg
adc
jne
push
adcl
rorb
and
sti
movsl
jecxz
popa
adc
jno
jmp
addl
imul
xchg
outsl
add
jmp
aaa
test
fadds
mov
or
adc
inc
sbb
leave
je
je
notl
imul
and
filds
push
jl
sub
dec
pop
repnz
jbe
mov
sahf
push
aad
mov
jle
int3
aaa
mov
lcall
adc
fnstsw
lahf
mov
jle
aaa
popa
imull
add
dec
push
jle
adc
xchg
mov
repnz
movsb
sbb
push
stc
lcall
in
mov
arpl
and
icebp
adc
repz
out
aam
pop
shrb
jbe
xchg
xchg
cmp
rcrb
mov
fsubrs
inc
sahf
mov
xor
arpl
adc
add
push
xor
and
scas
sbb
idiv
pop
inc
out
dec
cwtl
jns
shrb
sub
addr16
sbb
sub
loope
out
mov
pop
fmuls
add
rcrb
rclb
fsub
ficompl
hlt
pop
adc
cmp
push
jne
cmp
jbe
adc
pop
loopne
inc
mulb
clc
insl
into
push
je
cmp
mov
popf
lock
dec
std
sti
push
test
scas
lret
mov
or
cmp
and
fsubs
insl
pop
cmp
fisubrl
or
inc
cwtl
or
test
cmp
mov
movntq
and
inc
popa
out
add
or
mov
cmp
inc
mov
xchg
or
sbb
sbb
jno
std
cmp
mov
and
cwtl
out
js
dec
mov
lahf
aaa
pusha
pop
cmc
sbb
fs
xchg
stos
int
dec
xor
fwait
sti
fs
je
fcomi
jnp
movsl
sub
lcall
sbb
shr
or
sbb
daa
add
add
dec
fwait
jb
rol
push
mov
mov
mov
shrd
or
or
jb
sub
add
stc
mov
lods
sub
negl
adc
imul
cpuid
imul
bound
fsubr
fisubs
popa
stc
fadds
test
adc
int3
arpl
cmp
xor
pushf
dec
les
inc
nop
in
fistl
or
or
and
loopne
lea
jmp
adc
inc
add
push
pop
jbe
ds
fcos
push
pop
pop
jg
cwtl
jg
cmp
inc
adc
stc
jbe
enter
cli
sahf
mov
gs
cmp
rcll
xchg
push
in
repz
jbe
mov
ds
mov
popa
ljmp
iret
popf
scas
std
jne
jns
push
aam
loop
data16
rcrl
xorb
cli
jecxz
sarl
nop
inc
inc
test
loopne
mov
adc
lea
add
xor
push
cltd
sub
jge
and
adc
stos
hlt
dec
pop
outsb
mov
rcl
imul
into
mov
add
cmp
mov
jge
sbb
icebp
sahf
imul
ss
cmp
stos
outsl
les
jno
repz
int
xor
sbb
dec
pop
mov
cmpsb
xchg
outsb
pop
aas
outsb
clc
xor
stc
nop
das
cwtl
add
ss
or
dec
fcoms
cmpsl
out
sbb
daa
shl
xchg
add
mov
lret
shl
cmp
dec
sbb
push
push
push
cmp
orl
adc
and
dec
popa
andb
aam
into
pop
testl
xchg
daa
mov
les
jne
cmpsl
jmp
push
movsl
push
sbb
mulb
mov
xchg
xchg
xor
iret
dec
and
cmp
dec
dec
popf
repz
push
movsl
cmpl
cld
pop
push
sub
adc
jb
xor
xchg
add
out
fistpl
mov
es
or
loope
nop
fsubrs
add
cmpb
pop
test
js
test
push
rclb
clc
sub
sub
loopne
sbb
cwtl
jne
cwtl
mov
cmpsl
cs
int
repnz
add
sbb
sbb
jae
cli
pop
mov
rcr
rcr
out
push
sbb
or
loope
cmp
repnz
lock
push
int
sahf
pop
jmp
sarl
shll
cmp
lock
sbb
lcall
xchg
xchg
test
out
or
cwtl
gs
sbb
xchg
cld
imul
inc
xchg
ljmp
shrb
push
jne
lcall
mov
fstp
push
inc
push
ljmp
ret
push
out
icebp
sbb
mov
cmp
nop
dec
fiaddl
xchg
push
popa
or
cmp
push
push
inc
or
cmpl
lods
inc
push
mov
mov
rclb
inc
or
mov
adc
xchg
dec
sbb
fmul
or
test
or
out
mov
jg
mov
aas
fadd
pop
sub
add
mov
stos
dec
adc
mov
ja
cmpsl
int
in
std
add
jo
dec
mov
call
add
aam
push
insl
test
add
lret
pop
and
test
mov
or
push
shlb
sbb
repz
inc
int
jns
insl
imul
test
shlb
fdivrl
sub
mov
mov
add
inc
push
es
jg
dec
loop
in
or
mov
jle
xor
insb
push
leave
andl
dec
into
dec
jecxz
jp
out
dec
lea
mov
aad
loop
xor
dec
sub
push
adc
cmpsw
push
inc
pop
movsb
data16
cmp
scas
scas
ret
mov
push
and
inc
in
push
lods
outsl
rcrb
repz
cmp
dec
mov
xchg
lods
in
or
push
arpl
popa
popf
aaa
out
jne
mov
adc
pop
out
inc
sbbb
shr
mov
jae
bound
cmp
add
cmc
sbb
imul
xor
in
dec
dec
cmpsl
xchg
into
mov
scas
lret
mov
mov
dec
fmuls
add
out
mov
and
inc
pop
fmuls
push
adc
nop
insl
adc
int3
sbbl
stos
mov
mov
dec
jle
jno
sarl
dec
stos
push
scas
push
mov
dec
call
or
push
mov
loopne
mull
imul
push
xor
lea
addl
sbb
mov
xchg
dec
push
mulb
lcall
mov
lahf
lock
int
pop
popa
clc
cmp
ljmp
push
std
push
ret
movsl
mov
loope
inc
and
jle
test
cmp
sub
rcl
bound
repnz
mov
ss
cmpsl
cmp
jge
mov
iret
dec
insl
and
dec
cmp
stos
rcll
out
test
loope
popa
ret
aad
in
xchg
push
addr16
adc
inc
inc
addr16
into
jecxz
sub
fisubrl
movsb
pop
rorb
push
fdivs
mov
or
sub
add
add
scas
movsb
cmp
mov
bound
nop
and
shll
mov
adc
in
sbb
jns
repnz
sub
inc
pop
imul
lock
out
cmp
int3
into
pop
int
int3
jmp
lea
std
stos
adc
arpl
push
xchg
cmp
ja
out
push
rorl
pusha
lahf
mov
rorl
es
insl
sub
cli
xchg
xchg
xor
dec
ror
fisttps
pop
add
dec
jl
sbb
test
into
hlt
push
fwait
mov
push
sub
stos
push
rcr
mov
add
and
in
jns
popa
fnstcw
shrb
dec
cmp
aam
inc
jge
popf
scas
out
xchg
aaa
lea
mov
and
jbe
mov
sbb
cmp
pop
lock
ss
jae
and
push
lahf
push
pop
cwtl
adc
mov
or
addb
xor
pop
ja
call
jle
rep
ljmp
aad
push
mov
sub
cld
popa
xor
cmp
cmp
sbb
loope
std
pop
inc
cli
stos
dec
dec
pop
es
rcl
in
ret
dec
cmp
or
or
lea
and
cmp
add
cs
outsl
mov
or
mov
mov
jns
mov
sti
hlt
mov
mov
add
fsubs
pusha
rolb
xlat
sub
dec
add
or
mov
jb
rcr
mov
pop
outsl
mov
pushf
scas
cmpsl
mov
pop
jno
lcall
call
subl
push
sbb
sub
add
js
mov
loopne
in
fcoms
repz
xor
jae
cmp
je
dec
cmp
leave
nop
inc
jmp
imull
mov
pop
shlb
aas
pop
pusha
stos
aam
add
pop
xchg
xchg
loope
leave
mov
mov
mov
push
jl
in
daa
movsb
xor
nop
iret
hlt
cmp
dec
lods
fnsave
adc
dec
ret
jno
enter
ljmp
push
sahf
or
mov
and
xor
fdivr
shll
mov
data16
mov
out
add
or
int
adc
addr16
mov
mov
test
insl
or
fldenv
lret
repz
lret
notb
or
cmp
xlat
push
icebp
xchg
clc
pop
cmp
xorb
int
inc
loop
or
cmp
xchg
test
push
and
inc
sar
repz
mov
mov
sbb
add
insb
jg
pop
cmp
iret
orb
mov
mov
sbb
test
das
mov
lahf
mov
lods
in
sbb
push
ret
aaa
jno
cli
xchg
mov
rorl
popa
inc
lock
mov
mov
rorb
pop
dec
es
out
mov
add
mov
addr16
ret
mov
movsl
out
pop
gs
mov
cmp
inc
xchg
sahf
iret
inc
mov
and
add
and
or
add
sub
ror
mov
sbb
ror
cmp
repz
scas
cmp
fs
dec
sbbl
sub
sbb
mov
jo
push
jle
cmp
lret
mov
and
xchg
mov
fistps
testb
mov
test
jg
inc
mov
mov
inc
ljmp
cld
scas
enter
gs
add
mov
rcrl
push
push
push
inc
or
popf
jo
pop
and
int
add
pop
jecxz
and
das
mov
mov
in
ja
mov
inc
fwait
sub
ds
lods
or
jmp
and
pusha
jne
pushf
lea
fldt
scas
loop
inc
data16
mov
imul
mov
in
dec
leave
mov
mov
shll
mov
pusha
sbb
and
push
mov
pop
mov
mov
lcall
ficomps
sbb
xchg
adc
negl
push
push
cli
push
inc
enter
outsl
sbb
mov
test
fimull
popf
fildl
mov
aam
or
lea
lods
push
int
mov
out
ja
sahf
loope
int
xchg
mov
push
cmp
and
pushf
and
les
mov
push
inc
dec
sbb
push
inc
sti
imul
cmp
ss
inc
sti
imul
push
pop
cmp
stos
clc
data16
jge
outsl
sub
adc
push
dec
hlt
lret
mov
fsubrl
ja
out
sub
mov
cwtl
scas
int3
das
ret
inc
jns
test
shll
mov
insb
loopne
sbb
mov
aam
les
fadds
fstl
lds
ja
sahf
lds
jno
and
and
adc
sub
and
outsl
loop
pop
dec
adc
cs
fs
push
pop
lds
movsb
ljmp
sbb
subl
mov
gs
icebp
xchg
into
push
bound
test
xchg
jo
lret
fldcw
jecxz
xchg
inc
cli
or
dec
push
pop
imul
stos
cmp
fsub
mov
sti
lods
mov
test
adc
sbb
sub
dec
mov
inc
push
mov
push
aam
xor
pop
cmp
jmp
push
imul
fsubrs
data16
popa
mov
lret
cld
mov
dec
push
mov
test
notb
in
or
fmulp
stc
adc
cmc
sub
sbb
jb
data16
loopne
jmp
lds
orb
or
jnp,pn
aaa
or
repz
adc
mov
xchg
add
repnz
shrb
hlt
xchg
in
push
faddl
mov
ljmp
xchg
xor
ret
fwait
sti
insl
adc
popf
inc
dec
shr
dec
sti
call
mov
or
jle
stos
scas
inc
scas
aaa
movsl
iret
je
jo
cmp
cltd
adc
out
div
and
or
dec
stos
sahf
add
mov
and
mov
enter
jns
add
hlt
ja
mov
jl
or
pop
lds
shll
js
ljmp
inc
xchg
jp
ja
aaa
icebp
push
fld1
ficoms
gs
mov
fwait
pop
movsl
shrl
inc
fstpl
ja
mov
mov
stc
out
add
clc
lahf
in
lret
mov
and
or
sub
push
inc
dec
loop
sarl
pop
mov
int
in
xchg
sbb
cmp
jge
icebp
fisubs
or
xor
lock
sbb
repz
fidivrl
xchg
jmp
out
sub
push
pushf
cli
and
lretw
or
push
add
gs
jmp
stos
add
xchg
cwtl
xchg
outsl
mov
orl
scas
and
mov
push
jo
pop
pop
iret
rcll
lods
cld
push
rcl
ss
pop
out
jnp
inc
imul
adc
sahf
stc
or
add
jb
jg
repnz
shrl
jecxz
rcl
sbbl
dec
movsl
cmp
fisttps
push
push
enter
ret
push
jmp
imul
push
leave
xor
mov
jo
popa
fs
insb
add
jnp
sub
sbb
cmpsb
jae
test
pop
mov
xor
ret
pop
dec
jecxz
pop
dec
jecxz
mov
pusha
not
pop
sub
xor
cmp
adc
fdivl
pop
xchg
ja
cmp
movsb
xchg
sbb
call
addl
sbb
jne
and
push
xchg
std
xchg
or
daa
sbbl
in
mov
jle
xchg
inc
xlat
add
jp
nop
xorl
or
mov
jbe
inc
data16
jp
push
mov
push
sub
or
or
sub
fwait
and
fdivr
or
repz
mov
fsubrp
je
dec
loope
jl
pop
aam
cmpl
jno
gs
push
mov
cmpb
pop
inc
mov
dec
or
test
flds
inc
push
cmc
cmp
xchg
pop
out
adc
nop
adc
xchg
out
and
cmp
jb
fistpll
outsb
inc
jno
jge
sub
out
sahf
inc
shrb
add
in
jb
or
mov
mov
pop
xorl
jno
lcall
lret
hlt
sub
nop
mov
fimuls
mov
ficomps
jmp
push
iret
push
lods
pop
repz
pop
dec
lea
add
aad
xchg
cmpsl
jns
push
pop
inc
or
icebp
cltd
cmp
push
lods
ss
push
ja
mov
mov
clc
sub
mov
push
cmpsb
repz
icebp
pop
in
mov
fisubrl
hlt
mov
pop
adc
push
test
popf
repz
mov
push
dec
les
mov
call
insb
xor
xchg
jg
jae
mov
and
mov
mov
push
inc
imull
mov
mov
mov
push
sbb
jecxz
sti
nop
mov
test
mov
loop
mov
cld
cmp
scas
hlt
popf
out
ret
dec
add
jo
push
out
inc
push
inc
or
idivb
xor
sahf
mov
xchg
nop
sub
mov
enter
daa
mov
popa
test
rcrl
mov
mov
repnz
adc
mov
sub
subl
insb
icebp
sbb
cmp
shrl
adc
mov
jb
rorb
jle
or
ss
popf
xor
mov
jne
and
fldt
cmp
push
outsb
lret
outsl
jl
push
xchg
hlt
mov
ljmp
nop
jae
insb
movsl
mov
xor
mov
shr
xchg
repz
ret
xor
sbb
inc
pop
mov
or
repnz
pop
adc
sbb
fildl
stc
stc
push
and
inc
mov
sub
int
pop
xor
sub
mov
and
xlat
arpl
cmp
sbb
adc
jbe
and
loopne
inc
int3
mov
adc
std
dec
sbb
dec
mov
push
sub
lcall
popf
pop
cmp
jle
adc
out
jecxz
sbb
cli
inc
dec
shll
mov
mov
or
ljmp
call
or
dec
mov
xchg
pand
cmp
pop
jp
push
sbb
pop
xchg
lea
mov
mov
in
fcmovnbe
cmpsb
imul
push
cld
push
push
push
adc
xchg
push
jmp
in
cli
jns
mov
cmpsl
sub
jno
push
sub
mov
inc
in
ljmp
sub
shrb
daa
arpl
cwtl
adc
insl
xor
cmp
add
jne
and
lahf
jb
adc
inc
sbb
inc
scas
les
hlt
inc
pushf
xchg
xchg
icebp
test
out
pop
cmpsl
shl
int
dec
fldt
adc
mov
and
jmp
lods
cmpsl
scas
scas
fistpl
mov
adc
lods
lret
sbb
jl
cli
fnstenv
addl
mov
int
push
or
out
aas
adc
lret
cltd
push
ret
lods
jns
xchg
lods
adc
sbb
imul
shrl
rorl
imul
sub
xorl
out
lds
sub
xchg
mov
hlt
lock
jle
in
rcl
ljmp
fwait
test
add
and
insb
stc
popf
les
or
sti
add
rol
sub
aaa
insl
xchg
shlb
mov
icebp
inc
inc
fnsave
mov
hlt
sbb
rolb
jg
jne
cmp
and
and
mov
ret
prefetch
bswap
mov
jp
enter
imul
hlt
push
call
add
and
shlb
xchg
rcrl
pop
cld
dec
mov
xchg
addl
inc
lods
xlat
mov
lret
jmp
call
mov
xor
mov
push
shlb
jp
jmp
xchg
insb
jecxz
divb
testb
push
mov
arpl
sub
loop
fldl2e
add
call
xchg
adc
pop
and
sub
scas
push
fcmovnb
pop
adc
or
xor
mov
inc
mov
in
mov
in
and
ret
call
or
stc
mov
or
lcall
sub
add
and
shr
pop
roll
test
xchg
and
fstpl
jae
insb
in
movsb
test
adc
leave
xlat
insb
jb
shll
shll
clc
mov
and
jecxz
mov
push
arpl
inc
inc
fdivl
loop
inc
mov
add
push
xlat
mov
mov
enter
mov
cltd
xchg
lret
jo
data16
cmp
mov
lahf
adc
push
lret
fdivs
dec
insl
mov
repnz
les
dec
pop
mov
popa
subl
in
outsb
push
inc
lds
inc
xchg
jb
jo
mov
mov
nop
or
dec
cmp
sbb
xchg
push
cmpsb
push
loope
sub
dec
movsb
and
pop
arpl
daa
cmp
pop
pushf
jae
andb
dec
push
andb
push
push
lds
xor
inc
mov
in
sbb
shll
les
cmp
xor
ret
mov
pop
and
shl
mov
fists
mov
and
lds
mov
orl
mov
aam
sbb
sub
xchg
push
sub
outsl
mov
sbb
shll
arpl
dec
fistps
aas
data16
pop
pop
repnz
nop
sbb
ds
cltd
int
jns
sub
xlat
jg
and
data16
jne
dec
addr16
enter
pop
mov
jl
ja
and
push
xorl
cs
mov
sti
xchg
out
adc
inc
pand
fnsave
or
movsl
pop
sti
xchg
dec
dec
cmpsb
ja
cmpsb
mov
sbb
clc
lea
ss
test
pushf
mov
mov
xchg
movsb
pop
mov
testb
xchg
mov
lahf
dec
mov
mov
ds
dec
push
nop
dec
jp
cmp
icebp
rolb
imul
dec
inc
mov
lret
test
push
cmp
sbb
cmp
jecxz
cmp
xchg
imul
pop
psubq
sahf
xor
lret
and
aaa
xor
mov
fs
fisttpll
dec
cmp
xor
arpl
shr
or
jg
mov
dec
mov
lods
sub
aad
or
pop
fwait
jecxz
icebp
cmp
dec
dec
mov
loope
mov
mov
fisttpl
sbb
pusha
mov
cltd
xor
or
mov
fsts
movl
push
cmc
lret
dec
and
clc
and
iret
push
cltd
mov
jg
test
enter
push
dec
dec
js
negb
adc
cmp
push
iret
loopne
fstl
sbb
cmpsl
and
push
fadd
subb
outsb
push
stc
lahf
pop
outsl
lds
out
jnp
xchg
dec
pop
xor
rorl
dec
jmp
push
ljmp
insl
shlb
imul
imul
mov
mov
mov
cmpb
mov
mov
mov
stc
enter
xchg
in
push
psubb
xor
andb
dec
adc
rcrb
repz
loope
jo,pt
adc
mov
mov
movsl
lds
xchg
pop
mov
sub
lods
ja
mov
fimull
js
jae
cmpb
sub
mov
sbb
inc
add
fists
outsl
add
jbe
test
cmpsb
mov
push
fidivs
hlt
xchg
pop
pop
out
jge
std
sbb
cli
mov
bound
repz
add
decb
mov
adc
popf
dec
pop
insb
ja
in
and
fbstp
lods
xor
les
fstps
jmp
mov
lcall
cmc
add
dec
push
movsb
inc
cmp
adc
icebp
test
ss
mov
pop
jae
enter
inc
push
testl
popf
test
leave
inc
popl
lods
sub
ljmp
sbb
popa
data16
mov
lods
inc
add
mov
cmp
dec
ljmp
sbb
outsb
lods
mov
adc
add
xchg
add
xor
cwtl
fcmove
or
sbb
dec
add
add
std
iret
push
std
mov
jge
pop
lock
js
repz
push
or
jp
xor
pushf
outsl
mov
rcl
je
mov
xchg
jecxz
js
dec
sbbl
dec
fisttpl
and
mov
or
sarb
out
xchg
cmp
dec
int3
loop
notl
mov
mov
ret
xchg
adc
xor
ds
push
xchg
fildl
je
flds
ficoms
dec
or
cld
xor
cmp
pop
mov
pop
mov
mov
fdivs
or
nop
adc
adc
gs
xchg
loop
les
add
pop
pop
mov
inc
out
pop
mov
imul
stos
inc
xlat
push
inc
xchg
pop
push
xorb
mov
jp
mov
xchg
int
cld
push
jae
push
outsl
lahf
aaa
leave
jns
ss
and
or
mov
aaa
inc
rcrl
data16
mov
cli
push
sub
aam
andl
nop
mov
add
inc
imul
scas
xor
mov
fucomp
gs
or
testl
mov
lods
and
xor
push
or
add
push
inc
adc
xor
cmp
popa
mov
loopne
add
lret
in
into
jg
popa
mov
jae
mov
repnz
mov
sbb
insb
dec
jecxz
xor
jmp
add
in
in
les
int
pop
mov
jg
and
loopne
out
sbb
cmp
es
ficompl
push
stos
inc
lea
jmp
jmp
out
dec
lods
add
mov
sahf
addl
jle
outsl
enter
mov
aam
jecxz
xchg
mov
mov
sub
js
dec
inc
jecxz
mov
ss
arpl
xchg
rcll
mov
into
mov
mov
jo
jae
mov
mov
ret
push
int3
aad
push
dec
pop
mov
int
popf
outsb
int
and
scas
jae
loope
es
jecxz
or
push
nop
add
test
xchg
cmc
repnz
mov
ds
aas
xchg
cmp
mov
cmp
lock
fwait
or
dec
lcall
or
cltd
cwtl
jne
push
cmpsb
mov
enter
popa
mov
cmpl
roll
mov
mov
fiadds
sub
lods
cmp
rolb
aam
adc
cmp
andb
cmc
mov
mov
loop
es
ds
pushf
in
nop
mov
adc
aam
sbb
cmp
sub
jae
lods
pushf
lret
je
mov
lods
add
mov
call
and
mov
inc
lea
pop
inc
add
lcall
cmpb
rorl
imul
es
pop
jo
jp
out
mov
adc
aaa
adc
imul
inc
pop
mov
in
outsb
xchg
lock
mov
jnp
xchg
pop
fcmovne
stc
sbb
cld
in
cmpsl
fs
repnz
dec
add
lahf
or
or
orl
test
fcomps
stos
imul
in
or
push
cmp
xor
scas
jg
pop
jno,pt
outsl
jle
fcomps
in
add
into
rclb
insl
add
and
push
push
mov
inc
and
mov
xchg
lods
sub
lods
push
inc
pop
add
xor
leave
les
pop
pop
insl
dec
push
add
outsl
int3
mov
testb
sub
cltd
stos
jb
in
xlat
pop
sub
int
fdiv
nop
mov
mov
leave
int
dec
sbb
lea
pop
adc
mov
mov
mulb
sahf
mov
outsb
loope
insl
cmp
repz
xchg
dec
lcall
inc
js
jnp
xchg
jge
rcr
mov
push
test
fs
jnp
bnd
dec
je
inc
movsb
or
pop
fisubrs
notl
mov
jb
xchg
popfw
xor
test
adc
enter
rolb
bound
cmc
dec
movsl
jno
dec
rol
nop
push
fdivrl
stc
ss
imul
mov
and
gs
inc
dec
dec
ja
ds
xorb
sahf
femms
mov
pop
movsb
nop
jae
dec
lahf
xchg
adc
inc
mov
dec
adc
arpl
mov
stc
cmc
shr
fisttpl
or
pop
imul
enter
jae
addr16
jl
xor
or
mov
sbb
sub
inc
pop
fdivl
lret
jge
sub
fs
loop
inc
scas
scas
dec
mov
xchg
gs
jg
mov
outsb
lahf
add
fiaddl
add
es
xor
sti
mov
lret
mov
ss
insl
push
add
dec
dec
pop
lcall
icebp
cmp
dec
sub
testb
xor
cs
cmp
in
and
fcomi
mov
iret
inc
gs
adc
mov
jle
rcrl
ret
pop
cmp
out
popa
fidivl
out
fidivrs
lret
bound
xchg
outsb
mov
movups
pop
sahf
adc
sbb
and
cmp
out
mov
push
xchg
pop
adc
shl
or
sbb
pop
mov
les
mov
jmp
xchg
fsub
mov
imul
add
fwait
pop
loopne
in
fmull
sbb
outsb
js
mov
pop
fistpll
cmpsl
ds
adc
lds
jbe
iret
xchg
xor
or
or
pop
cld
push
test
adc
enter
dec
mov
add
int
cmp
add
mov
cmp
in
loop
nop
aam
push
lcall
into
xchg
rorb
jns
int3
inc
mov
and
pop
std
jle
shrb
cld
cltd
xor
sbb
xchg
mov
mov
movsl
and
jl
pop
pop
sub
add
out
scas
cmp
jbe
cmp
mov
test
ljmp
mov
push
jne
cs
pusha
cmp
sbb
cmpsb
out
hlt
pop
sub
jg
lods
lea
fstl
xorb
fistl
in
jns
shrl
mov
in
jb
ja
scas
in
lods
inc
mov
sti
in
stos
mov
mov
or
xchg
sub
add
pusha
xor
dec
mov
cmpsb
loope
mov
lret
lock
push
dec
sub
subb
aad
std
push
ret
fsts
std
pop
add
sbb
gs
pusha
cmp
or
lods
dec
cmpsl
nop
jg
pop
fldenv
roll
je
stos
in
mov
mov
pusha
add
sbb
and
push
jmp
adc
test
sbb
mov
fdivrl
pop
cmp
jbe
addps
mov
sub
or
sbb
xor
jbe
jo
inc
loop
in
xchg
loope
in
repz
push
and
aad
cmp
cmp
in
xchg
adc
int3
cmc
or
jbe
push
imul
in
inc
scas
inc
loope
lret
inc
lret
in
mov
adc
dec
push
mov
loop
cmpsb
lea
mov
inc
aaa
push
gs
push
insl
inc
in
test
jg
int
jg
xor
and
inc
mov
nop
repnz
insb
or
jge
sub
sbb
or
scas
push
jo
pop
push
jae
mov
sub
fmuls
and
dec
xchg
mov
pusha
sbb
js
out
shll
and
push
call
or
pop
lahf
sbb
or
xlat
lea
sbb
pop
loope
mov
fwait
and
cmc
fidivrs
out
adc
outsl
adc
icebp
test
jbe
ret
push
xchg
xlat
fsubp
inc
icebp
icebp
lret
scas
push
dec
xchg
cmp
aad
movsl
or
scas
jnp
sub
cmp
pop
sahf
jns
pop
pushf
xor
adc
les
cli
mov
pop
jnp
pop
mov
iret
push
ss
cmp
in
in
stc
pop
scas
fcompl
jle
push
push
movl
inc
insl
sub
outsb
data16
fbld
mov
dec
xchg
jo
aad
fsubrp
sbb
mov
fs
pop
les
loopne
dec
mov
pop
aam
mov
ja
pushf
int3
arpl
mov
ljmp
addr16
arpl
mov
fcmovne
int
movsl
int3
or
xchg
lds
jge
shl
jbe
inc
pusha
notb
insb
subb
pop
jg
divb
rclb
ja
mov
fstp
ljmp
ss
xchg
clc
insl
sub
addr16
and
xchg
pop
ljmp
cmc
mov
lret
sbb
pop
pop
ds
jnp
shrb
imul
or
daa
or
dec
push
dec
inc
push
shld
adc
cli
inc
pop
xor
cltd
and
push
ret
sub
and
sub
in
notl
sub
cmpsb
movsb
dec
mov
repnz
fimuls
fimull
inc
scas
xchg
stos
push
dec
mov
cli
jns
cmpsl
pop
loopne
imul
inc
movsb
int3
arpl
mov
jne
insl
mov
cwtl
cmp
fimull
notl
dec
fcmovnbe
repnz
les
lcall
and
sub
add
inc
repnz
imul
add
sbb
push
sbb
adc
inc
xchg
mov
lods
jl
cs
into
ficoms
cld
jne
add
pop
notb
dec
out
fwait
test
push
out
push
sahf
push
dec
iret
int
add
jge
ret
insl
setg
adc
jnp
cli
dec
lahf
or
mulb
jl
pop
daa
cmp
push
int3
lcall
scas
mov
int3
mov
cmpsl
jmp
fldcw
icebp
ljmp
aaa
jae
test
je
inc
gs
insl
loop
push
fwait
pop
popf
stc
jl
adc
sbb
ficomps
hlt
cwtl
cmp
ds
mov
xchg
mov
sub
popa
xor
pop
js
mov
in
add
lds
inc
cmp
xchg
cmp
in
cwtl
cwtl
ss
repz
mov
or
repnz
test
cmp
sarb
sbb
dec
divb
cmp
dec
add
lahf
jno
cmpsl
out
pop
cmp
mov
enter
mov
add
and
add
adc
dec
mov
pop
int
cmp
jo
pop
jbe
sbb
sub
jp
bound
mov
or
push
cmc
lea
sub
inc
sbb
push
mov
mov
insl
aad
pop
idivb
jbe
add
adc
inc
std
cld
lea
mov
in
call
sub
mov
pop
repz
rcrl
add
mov
cmpb
roll
sbb
push
les
mov
pop
imul
jne
sub
fwait
xchg
mov
jl
add
or
fnstsw
jbe
push
fmuls
stos
pop
add
decl
fs
sbb
enter
sahf
loope
jnp
cli
pop
in
add
pop
xor
cltd
dec
ja
loope
jecxz
popl
sbb
sub
pop
mov
mov
adc
dec
cmp
loope
enter
dec
or
in
xlat
jns
aad
and
and
jg
js
mov
or
outsb
jmp
adc
fadds
clc
pop
int3
cmp
subl
out
inc
sbb
pop
loopne
xor
negl
mov
mov
push
and
ficoml
addb
xor
in
mov
inc
ja
pop
hlt
sti
rclb
mov
dec
subb
out
mov
aad
fwait
icebp
jnp
outsb
mov
pusha
test
inc
cmpps
decb
cmp
insl
loop
shl
inc
enter
gs
xchg
mov
xchg
cmp
sti
call
mov
and
and
pop
lock
push
push
ds
addl
out
cld
loope
sbb
aaa
cmp
sbbl
fs
push
movl
test
sti
pop
adc
es
stos
add
insl
icebp
jecxz
add
pop
aaa
hlt
jg
pop
adcb
pop
cmp
dec
addr16
scas
cwtl
cs
into
fiadds
mov
xlat
pop
or
or
add
pushf
jnp
cmp
xor
ret
or
pop
scas
icebp
arpl
sbb
xor
inc
jnp
or
in
push
add
sub
mov
fistpl
jle
fldt
jg
or
fdivs
push
sbbl
sbb
pop
mov
mov
and
outsl
arpl
or
loop
push
add
jmp
mov
cmp
in
out
add
shr
ds
rclb
xchg
xor
mov
aaa
popa
push
iret
lcall
into
mov
loopne
pop
xchg
jmp
int
and
inc
stc
inc
lock
out
mov
and
insb
clc
aam
add
jnp
sarl
adc
push
cmpsb
addr16
pop
pushf
repz
inc
cli
pop
sub
add
int3
jo
push
xlat
or
and
pushf
movsl
jg
into
mov
jo
or
mov
pop
sub
dec
dec
xor
lahf
sti
cwtl
lret
scas
out
sub
jmp
outsb
inc
xor
pop
mov
int3
pop
mov
lahf
loop
lods
dec
ljmp
mov
push
stos
inc
inc
jl
mov
in
fwait
add
xor
xor
leave
clc
mov
fs
jae
test
sar
cmc
rcrb
mov
jp
jl
daa
cmp
movsl
loope
in
jg
push
lds
adc
push
enter
sti
js
cmp
push
hlt
sahf
pop
dec
lods
int
xchg
xor
loopne
mov
loop
test
xchg
mov
addr16
or
in
out
out
pop
fistpl
in
jmp
ret
lods
jmp
in
add
lcall
and
push
fisttpll
sub
aam
and
daa
icebp
movsl
dec
mov
imul
mov
jns
pop
or
sub
call
movsl
inc
or
xor
inc
adcl
inc
mov
mov
ljmp
je
idivb
mov
cmp
mov
jle
xchg
movsb
insl
xchg
cmp
int
adc
dec
sub
test
cwtl
movsb
sbb
out
daa
xor
pop
fnstenv
into
or
imulb
dec
dec
ret
push
mov
pushf
stos
mov
lcall
sub
dec
stos
inc
push
aaa
repz
scas
jns
pop
xchg
adc
int
mov
mov
loopne
pushf
sahf
lods
dec
lcall
in
les
adc
dec
jge
daa
rorl
and
add
outsb
lahf
xor
pop
pop
aaa
lock
push
jnp
bound
mull
movsl
jo
jg
add
and
stos
jle
loope
or
dec
adc
fst
pop
cli
inc
jns
inc
outsb
out
jnp
int
add
inc
fidivs
aad
or
aam
push
pop
das
mov
add
inc
xor
push
and
xchg
mov
mov
jg
sti
mov
adc
sbb
jl
shl
add
mov
dec
shlb
mov
or
shrb
outsl
test
dec
mov
in
lea
mov
xlat
and
ja
cmp
movsb
jnp
loop
inc
stc
xchg
add
aas
pop
jne
push
dec
add
jp
clc
ficomps
scas
lea
jbe
mov
jle
and
test
adc
jg
or
adc
scas
shll
xlat
data16
pop
int
jae
stos
add
testb
ror
add
push
and
sbb
clc
push
jnp
in
dec
xchg
mov
shrb
je
mov
test
cmp
cmp
enter
jno
jnp
sub
loope
dec
lret
inc
push
mov
xor
arpl
push
sub
jmp
out
lret
push
in
mov
ftst
xchg
das
fadds
or
lcall
repz
pop
cmova
dec
lock
nop
xor
xchg
push
pop
xor
call
hlt
adc
jg
xchg
dec
cmp
imul
out
mov
insl
sub
sub
cmp
jp
test
fistl
popa
into
popf
sbb
xor
iret
mov
nop
push
push
push
insl
xor
pushf
xor
push
push
rsqrtps
les
rclb
clc
add
fs
ror
pop
add
mov
push
jmp
fcmovu
mov
movsb
xchg
mov
mov
les
leave
insl
push
in
adc
mov
xchg
inc
lcall
pop
aas
shll
cmp
xor
out
lret
scas
sub
jmp
in
std
int3
pop
imul
inc
int
xchg
sbb
push
push
mov
sub
sbb
adc
into
jb
inc
int3
arpl
or
cmp
sbb
dec
and
adc
mov
sbb
jne
jne
sbb
add
outsl
cltd
xchg
cmp
jge
sbbl
mov
cmpsl
or
lds
mov
int
in
mov
xchg
xor
fcomps
inc
push
outsl
jae
bound
mov
mov
out
stc
leave
into
and
xchg
out
out
sahf
inc
mov
movsb
movsl
shll
mov
dec
pop
cmpsl
sub
popa
add
dec
cmp
ret
sarb
cwtl
pop
lods
mov
mov
jmp
das
cmp
push
or
stc
mov
sbb
mov
xor
int3
fadds
push
sbb
nop
orl
js
stc
popf
mov
jo
push
mov
jle
lahf
scas
movb
cld
out
cmp
nop
push
ret
cs
cmpsl
insb
add
repnz
stc
into
dec
mov
ljmp
cmp
mov
test
or
pop
xchg
nop
ljmp
sbb
push
movsl
subl
mov
gs
enter
mov
jecxz
imul
cmpsb
stc
sahf
sub
stc
cmp
pop
fiadds
icebp
test
cli
push
inc
xchg
or
push
dec
int3
push
in
pop
lahf
fsts
jp
call
rcl
mov
pusha
mov
mov
nop
mov
add
dec
push
sub
out
pop
sbb
or
cmc
and
clc
imul
das
cmp
push
rol
nop
dec
aad
mov
and
iret
cmpsl
ret
lret
popf
fisubl
add
fmull
les
pusha
jge
sbb
dec
add
in
mov
mov
js
hlt
or
sub
mov
fdiv
shll
jle
in
xchg
pop
mov
cmpsl
mov
rol
popa
addl
mov
mov
add
inc
aam
icebp
repnz
pop
mov
jno
cmc
and
inc
pop
popf
and
xor
jg
xchg
sub
pushf
add
push
sub
inc
je
or
inc
push
fildll
int
mov
leave
jb
mov
arpl
inc
push
mov
scas
jecxz
xchg
mov
add
xchg
adc
ja
cmp
lcall
popa
hlt
lret
test
sahf
lods
ja
cmpsl
xchg
inc
cs
rcll
ds
cmp
mov
inc
repz
xor
test
movsl
adc
xor
xlat
push
lea
fstps
xor
inc
push
ret
dec
push
cmp
xor
cmpsb
rcll
out
cmp
dec
shll
or
outsb
adc
adc
add
imul
fdivl
int
mov
pop
mov
mov
lret
hlt
mov
hlt
xor
ljmp
jno
jb
mov
popf
add
pop
fsubs
add
les
je
mov
test
mov
loope
jmp
mov
and
or
mov
in
pop
call
mov
mov
pop
sbbl
sub
adc
pop
cmc
mov
outsb
fcomps
aaa
data16
mov
or
add
ss
outsl
push
sbb
cmp
fst
mov
lret
push
pop
pop
add
shrl
and
movsl
cmp
add
scas
imul
stc
sub
dec
aam
mov
arpl
pusha
imul
stos
rorb
rcr
push
inc
int3
test
pusha
push
in
inc
in
mov
insl
sbb
cmpl
rcrb
xchg
clc
bound
mov
cld
cld
dec
mov
mov
and
les
adc
adc
call
mov
or
push
xor
add
mov
sbb
aaa
add
sub
push
add
stos
mov
cwtl
je
stc
push
xor
and
push
mov
cmp
fld
pusha
fisttps
scas
inc
std
ret
sbb
loopne
in
adc
aad
mov
pusha
xor
gs
lods
popf
call
cltd
xor
stc
call
xorl
fsts
and
jne
adc
sarb
mov
xchg
or
lahf
or
aas
mov
popa
dec
fists
sub
aam
data16
inc
cs
mov
pop
and
xlat
dec
in
jae
imul
pop
add
jbe
inc
data16
and
in
fimull
push
ds
shrb
scas
out
leave
mov
ret
sbb
push
mov
out
aaa
jecxz
mov
sbb
cmp
hlt
cmpsb
cmpb
test
repz
andl
dec
mov
and
lahf
imul
xchg
and
cltd
std
mov
pop
sti
sbb
dec
ficompl
jecxz
xchg
imul
shll
popa
inc
shlb
jmp
test
push
pop
rclb
inc
sub
and
mov
fidivl
pop
sub
lods
ja
fwait
adc
shrb
adcl
dec
inc
rcrb
lods
aaa
negl
jns
scas
xchg
gs
cmpsb
ljmp
pop
cmp
jae
gs
in
lcall
inc
jno
jbe
sbbb
rclb
adc
mov
cmp
and
loope
jle
popf
cs
push
cmp
xor
sbb
addr16
in
lcall
adc
test
push
and
popa
push
sarl
lret
fistl
addr16
xor
mov
xor
stos
mov
pop
cli
jo
and
mov
cs
cmp
cmpb
pop
xchg
icebp
add
mov
std
into
addr16
call
cltd
fnstenv
sbb
into
leave
fs
shrb
push
sbb
jp
ja
push
cmpb
sarl
push
pop
int
add
mov
mov
or
out
mov
pop
inc
enter
popa
fucomip
iret
into
inc
rorb
xor
cmp
sub
jp
hlt
stos
rolb
stos
scas
mov
repnz
test
inc
mov
sbb
push
sbb
js
fwait
lods
dec
dec
adcb
aas
std
sahf
hlt
repnz
sahf
enter
movsl
pop
push
jb
cmpsb
mov
ret
fbstp
shrl
push
test
jno
rorl
cmc
rorl
jle
fadd
rcll
add
fwait
sub
add
mov
dec
fbld
fstps
cmpsb
inc
data16
into
xor
inc
cmp
or
out
or
pop
pop
in
lar
or
imul
xchg
imul
cmp
adc
and
or
rcrb
repz
xchg
sub
das
scas
inc
xchg
mov
mov
loope
test
or
cmpsl
add
aam
movsl
lret
mov
jp
leave
cmp
andb
pop
js
and
mov
ljmp
scas
push
pushf
jo
sar
dec
popl
or
in
leave
and
sub
test
fbstp
pusha
or
push
stos
push
pop
inc
loop
cmp
mov
mov
push
sbb
imul
mov
pop
ret
daa
ljmp
repz
jg
in
data16
dec
bound
divps
test
subl
jbe
out
dec
test
test
mov
sbb
scas
sub
cmp
jg
icebp
mov
ss
cmp
sbb
sub
pop
mov
fadd
dec
lret
xor
add
cmp
mov
mov
lea
push
movsl
dec
inc
pop
fnstenv
cwtl
ljmp
fstpt
mov
lods
pop
jne
pop
mov
jl
mov
loop
mov
sbb
dec
out
loopne
cs
int
xlat
ja
xor
mov
cmp
mov
mov
or
dec
popf
and
mov
outsl
stc
popf
sar
data16
jo
repz
in
add
lea
sub
xchg
push
movsl
enter
lcall
mov
addr16
cltd
pop
adc
and
nop
lahf
shll
jecxz
out
stos
mov
clc
mov
aaa
jp
pop
adc
adc
mov
xchg
out
je
sahf
lock
je
ret
sbbb
adc
out
add
ja
hlt
inc
popa
mov
lds
push
das
and
leave
test
js
push
ret
stos
adc
inc
insl
xchg
mov
push
mov
testl
sahf
jo
mov
pop
ret
xchg
xlat
ret
ret
push
test
stos
pop
jg
lods
adc
mov
or
fucomi
imul
inc
shl
dec
test
leave
sub
pop
pushf
xor
inc
notl
push
sbb
jle
movsl
scas
std
jae
fwait
push
mov
in
mov
sbbb
or
or
ret
daa
repz
jnp
repz
stc
inc
mov
add
aam
ficoms
or
cmpsl
jne
mov
fisubs
lret
addr16
and
xchg
jecxz
ljmp
lahf
ss
outsl
xor
ss
insb
rorl
shll
xor
in
push
dec
scas
orl
loopne
popf
xchg
movsb
sbb
inc
pop
jno
and
call
idivb
stos
pop
cmp
ret
adc
mov
dec
xor
scas
scas
xchg
inc
addr16
jl
bound
mov
sahf
xor
xor
test
dec
sub
and
mov
cmp
std
inc
fidivl
aad
dec
xchg
adcl
ljmp
cs
enter
jmp
sbb
mov
mov
mov
push
xchg
mov
nop
fstpt
mov
cmp
push
jnp
out
xchg
iret
ss
push
pop
in
lock
jne
lret
mov
jnp
out
scas
stos
pop
xor
sub
rclb
dec
dec
in
xor
fsubrp
push
xor
dec
adc
xor
fwait
jmp
andb
cmpsl
test
push
sub
adc
mov
jne
xor
lods
inc
fstpt
pop
stc
nop
cmp
jnp
inc
dec
fsubrl
add
lret
mov
mov
in
add
je
ret
shl
jne
or
sub
outsl
push
lret
sti
aaa
testb
mov
jae
stos
mov
insb
mov
les
bnd
mov
cli
jne
popf
push
in
xchg
mov
inc
lods
pop
aaa
call
pop
outsl
in
mov
add
scas
xor
pushf
iret
test
jge
dec
enter
es
sub
dec
xor
push
inc
dec
add
sti
dec
aaa
adc
or
lds
push
cmp
jo
cs
in
int
pop
scas
cmp
jb
lea
mov
sbb
mov
das
jecxz
rcrl
nop
pop
fildl
loop
shrb
popa
push
lock
jo
dec
loope
xchg
mov
and
repz
sbbb
testb
ret
pop
xor
pop
push
dec
adc
jecxz
fs
call
fs
testl
repz
xor
insb
jl
lahf
push
jmp
bnd
dec
lods
adc
cmpsl
inc
inc
dec
out
cs
sbb
fdivl
cld
ja
outsb
addr16
jg
inc
sbb
or
jge
xchg
sub
mov
push
icebp
fucomip
test
lret
lds
mov
sub
enter
pushf
mov
ja
and
cld
cmp
jl
mov
push
xchg
adc
popf
mov
stos
jns
repnz
mov
pop
pop
dec
pusha
pushf
or
lcall
jg
addl
fisubrs
jo
stc
cli
rcr
in
mov
cwtl
scas
or
pop
aas
mov
jo
sub
insb
sbb
mov
xchg
sub
mov
pop
inc
daa
addr16
cwtl
sub
xor
inc
inc
repnz
jmp
sub
insb
xor
mov
ret
jns
and
cs
xlat
call
or
push
dec
aam
and
dec
imull
outsb
sbb
loopne
fiaddl
pop
mov
inc
ljmp
xlat
insb
pop
and
inc
aad
mov
enter
jecxz
clc
adc
cmpsb
sbb
ds
jge
test
repz
jmp
push
pop
pop
lahf
mov
popa
sub
ret
addr16
rol
mov
rcr
jle
repnz
out
sahf
sahf
sbb
adc
mov
loopne
mov
addr16
ficomps
or
jp
sbb
icebp
push
or
pop
mov
rcll
test
cmp
mov
aam
jg
jne
out
clc
inc
xor
sub
sub
sub
xlat
daa
outsl
or
mov
call
std
lods
jbe
js
dec
dec
or
imul
adc
dec
cmpsb
clc
cmp
mov
xchg
scas
dec
outsb
rorb
movsl
push
jmp
cmp
clc
divl
sub
mov
pop
dec
mov
jnp
shll
pusha
inc
ficomps
ds
adcl
xor
cmp
mov
push
fucomp
outsl
in
outsl
int3
or
divb
stc
mov
nop
daa
or
aaa
mov
shl
jg
nop
ds
sbb
test
std
mov
insb
das
push
imul
mov
lahf
jo
dec
adc
into
gs
sahf
std
ja,pn
in
pop
inc
pop
mov
jne
push
lahf
dec
nop
xchg
cwtl
or
lret
nop
ss
adc
pop
outsb
sbb
pop
mov
xlat
sub
ret
xor
adcl
and
pop
lret
xchg
arpl
out
ficoms
xor
add
dec
add
mov
sub
and
rorl
push
fwait
cmpsb
jecxz
mov
faddl
in
mov
gs
push
xchg
test
iret
pop
mov
inc
fadd
mov
or
mov
mov
dec
mov
ret
mov
hlt
dec
inc
sbb
sub
or
inc
aaa
xchg
les
flds
in
mov
xor
movl
mov
clc
sbb
adc
icebp
jb
out
idiv
sub
cwtl
scas
inc
lret
mov
pcmpeqb
mov
cli
inc
sub
xor
xchg
push
ds
daa
xchg
cmp
pop
xor
addr16
es
jge
adc
pushl
xchg
mov
pop
jno
je
cmp
idiv
cmp
mov
jmp
in
imul
mov
es
push
fwait
cmpsl
mov
insl
aam
shll
pop
push
or
ret
dec
push
sub
fwait
xchg
test
fimull
imull
scas
in
popf
push
loopne
shl
mov
jno
lea
inc
or
adc
insb
push
mov
insb
push
insl
imul
iret
popf
test
xor
jnp
sbb
ror
pop
data16
std
sub
daa
loop
stc
rorb
es
jns
and
sub
push
and
fucomi
dec
mov
add
and
test
sbb
push
push
sbb
adc
fmuls
lret
pushf
ret
xchg
shll
pushf
shr
push
shr
aas
dec
push
mov
sbb
push
data16
aas
mov
sub
jp
pop
and
shrl
cmp
jno
ljmp
or
jp
daa
adc
pop
push
fsubrp
push
inc
pushf
or
arpl
and
cmp
movsb
mov
xor
sti
out
lret
mov
push
enter
mov
ljmp
xchg
mov
imul
jnp
inc
dec
out
sub
lea
mov
aaa
dec
pusha
pop
js
dec
dec
xchg
test
popf
shl
dec
pop
sub
mov
mov
daa
xor
mov
scas
mov
lcall
xchg
fiadds
push
jbe
xor
xchg
mov
loopne
idivl
jbe
pop
mov
les
jbe
sub
xor
and
xchg
and
mov
push
out
xchg
inc
repz
in
adc
gs
inc
hlt
int3
jge
mov
loope
xor
mov
out
imul
dec
and
int
out
scas
dec
mov
cltd
dec
es
jecxz
jo
cmpsl
dec
jmp
mov
sbb
les
adc
mov
hlt
or
sbb
pop
inc
orl
mov
aas
mov
dec
mov
cwtl
sbb
fld
mov
mov
jno
xchg
rorl
idivl
imul
pop
shrl
xchg
pop
mull
xchg
fidivrl
inc
sbb
push
leave
mov
xorl
pop
enter
or
shll
cwtl
dec
pop
aad
das
shlb
sbb
xchg
inc
xchg
dec
add
mov
jns
loopne
fstl
xor
test
scas
push
loopne
lcall
add
push
test
ret
mov
cmp
rcr
out
adc
mov
ds
mov
xor
lds
mov
std
jo
fidivrs
aad
adc
out
movsb
sub
rcrb
out
out
outsb
sti
cmp
daa
sub
or
xchg
or
xchg
test
lcall
rol
orb
test
jnp
aas
sub
pop
mov
push
pushf
sub
push
cmp
daa
imul
mov
out
aad
je
stos
insl
add
lret
xlat
mov
cs
pop
jno
push
jne,pn
outsl
push
lcall
sub
cwtl
add
add
iret
mov
push
sbb
add
cmp
pop
loop
ds
imul
mov
mov
adc
imul
repnz
add
add
add
mov
test
push
repnz
fcos
mov
cmc
and
and
xor
mov
mov
mov
data16
pop
push
sbb
out
fs
scas
call
mov
sahf
clc
and
mov
cwtl
pusha
push
inc
fnstenv
xchg
test
mov
lea
loop
imul
arpl
add
dec
push
xor
movsl
xor
movsl
jne
test
outsb
sub
mov
or
dec
add
sub
out
pop
into
push
lds
fs
ljmp
das
test
mov
adcb
in
mov
pushf
mov
sbb
mov
nop
or
push
nop
hlt
sbb
dec
fwait
std
lds
mov
pusha
in
mov
inc
leave
and
jg
mov
mov
je
and
xor
pop
push
in
mov
mov
dec
addl
fwait
jg
leave
jge
sub
mov
jl
or
stos
nop
out
pop
push
xchg
inc
test
insl
mov
ret
cmp
orl
push
cld
je
std
adc
adc
cmp
sbb
pop
jb
xor
lods
out
test
lahf
or
in
mov
into
push
lods
mov
add
je
daa
sub
aaa
idivl
ss
jmp
xchg
std
push
rorl
xchg
popf
xor
lret
adc
adc
pop
cld
jno
mov
icebp
or
mov
push
test
mov
lret
popa
mov
lock
push
add
add
jae
pop
mov
loop
sbb
mov
stos
lret
loope
jb
and
jnp
lahf
mov
pop
cli
sbbl
push
xchg
or
aad
jnp
sbb
inc
mov
bswap
arpl
ljmp
into
icebp
dec
jns
bound
and
xchg
cmpsl
nop
jo
mov
add
xorl
iret
js
add
stos
cmp
pop
outsl
fists
cmc
test
pop
je
repz
cmp
es
cmp
fwait
sti
ficoml
inc
out
cmp
jg
jg
dec
outsb
scas
xor
mov
lods
dec
pop
movsb
dec
rcrb
sub
sbbb
movsb
sbb
mov
mov
sbb
sub
mov
out
repz
dec
ret
out
fs
add
sahf
pop
nop
test
testl
dec
or
nop
and
sbbl
xchg
push
push
out
xchg
outsl
jmp
test
cmpsl
adc
sub
mov
mov
mov
out
shrb
push
ljmp
fdivrl
fbld
cld
and
adc
es
push
xchg
jle
jno
mov
sub
mov
int3
lret
jmp
push
lahf
inc
out
arpl
push
sbb
cs
in
mov
push
add
push
adc
jmp
pop
inc
push
cmp
pusha
xchg
mov
nop
sub
data16
cltd
imul
xchg
lods
add
cld
jl
or
orb
fwait
pop
loop
or
ror
das
mov
jnp
fistl
cmp
pop
sbb
mov
jle
sub
mov
cs
xlat
sti
fnsave
pop
dec
and
icebp
inc
lret
pop
je
pop
repz
fnsave
sar
add
sti
pop
sub
leave
das
push
lahf
sbb
fistps
int
adc
inc
jo
push
into
int
ljmp
and
inc
xor
jecxz
lock
ljmp
jne
pop
sub
push
mov
rcrb
mov
cmc
mov
ret
mov
pop
addr16
ret
cs
int
pusha
js
or
sbb
out
add
jl
call
test
jno
mov
dec
xchg
add
loop
mov
xchg
scas
in
xchg
test
push
jno
sbbb
cmp
xor
pop
xor
jecxz
sti
pop
pop
ds
xchg
and
vmaxpd
loope
and
leave
and
and
sbb
loope
es
insb
jle
les
cld
rol
aad
xchg
fstpt
lahf
and
mov
or
mov
leave
or
push
jnp
inc
fwait
add
cmpsl
sbb
loope
fwait
aad
add
test
and
enter
lods
sub
fsubs
movsl
mov
test
not
bound
leave
cmp
push
fwait
insb
stos
fisubrl
cmp
xor
sbb
push
push
cli
push
jo
imul
sbb
loop
xchg
movsl
mov
xor
or
cld
lcall
jne
out
icebp
sbb
test
adc
add
xor
lods
xchg
dec
sahf
adc
divl
aam
mov
outsl
aad
mov
or
mov
mov
stos
and
sahf
xor
stos
lds
sub
iret
arpl
add
dec
fs
cmp
repz
dec
int3
pop
push
out
add
lock
loopne
inc
out
mov
jmp
adc
mov
rclb
xlat
mov
gs
aaa
dec
cmp
xor
xor
inc
mov
hlt
inc
inc
sbb
lret
stos
jge
xchg
vucomiss
push
pop
add
fldt
bound
sub
dec
mov
mov
inc
mov
imul
pop
jne
fildl
pop
loopne
cmpsl
fbstp
mov
or
loope
or
mov
jae
inc
fimull
pop
mov
shrl
pop
hlt
pushf
lock
daa
jge
in
test
adc
mov
mov
data16
ss
int3
out
aam
sub
enter
and
popf
idivl
add
lret
cs
lods
mov
aam
mov
imul
ljmp
fwait
or
mov
add
xor
push
imul
stos
stos
fsubrp
sub
out
pop
rclb
add
call
push
mov
jb
outsl
in
cld
sarb
jnp
dec
push
decb
ror
inc
mov
in
test
push
stos
fstl
mov
pop
or
es
dec
test
push
mov
int
jmp
push
jbe
pop
insl
cmp
sbb
push
add
mov
mov
lea
jne
push
cmc
mov
pop
fstpt
dec
pop
sub
sbb
xchg
mulb
movsb
or
or
inc
and
pop
iret
pop
push
push
jg
ret
mov
or
nop
inc
es
test
dec
enter
inc
and
inc
push
rclb
fdivr
test
jns
ss
fwait
leave
push
in
mov
cld
jno
pusha
inc
or
out
add
cmp
fidivrs
mov
sbb
stos
pop
js
fsubrs
enter
dec
cmpsb
mov
jle
dec
or
lds
add
rcrl
je
ret
aad
cmp
mov
in
outsb
shll
je
cwtl
rcrl
rolb
mov
push
or
rorb
dec
mov
in
test
lock
push
sti
addb
mov
dec
jge
out
jo
mov
lcall
ret
xor
xchg
imul
pop
mov
in
or
pop
mov
fchs
ja
xor
mov
xchg
out
jbe
jp
sbb
mov
sub
xchg
xchg
pop
addr16
mov
nop
dec
mov
mov
leave
push
into
sarl
lods
jmp
out
xor
fdivrl
dec
push
cmp
pop
dec
xchg
pushf
scas
mov
lods
insb
jle
mov
test
mov
aas
pop
xor
aaa
inc
pushf
lret
das
lret
test
sbb
inc
out
xor
divb
test
xlat
mov
sub
jne
pop
sbb
pusha
jnp
popa
popl
mov
stos
das
shlb
incb
out
dec
aad
or
popf
mov
scas
imul
shlb
fidivrl
xor
mov
inc
in
mov
lock
aam
push
xchg
mov
sbb
sbb
fidivs
add
push
test
into
jb
sbb
and
or
andl
fsts
fwait
mov
into
jne
in
mov
int3
movsl
lods
outsb
pop
mov
into
cmp
insl
xor
and
push
push
and
pushf
ss
mov
mov
and
dec
inc
mov
aaa
hlt
inc
movsb
push
pop
fisubs
ljmp
les
or
sahf
jns
mov
and
imul
push
mov
sbb
aas
subb
imulb
dec
mov
movsl
xchg
mov
cmp
ficoml
dec
pop
imul
push
push
add
mov
aaa
imul
test
out
pop
cmp
and
repz
fs
push
xchg
xor
cmpsb
fisubs
or
cld
jne
dec
sti
pop
dec
cmp
movsb
je
xlat
mov
insl
pop
ficoml
rorl
je
xchg
dec
gs
out
sbb
xchg
cmc
or
movsb
dec
fadds
shlb
stc
iret
xchg
loope
mov
xchg
test
fadds
inc
and
xor
enter
jmp
leave
fsub
arpl
pop
je
mov
jo
xchg
lds
movsl
sbb
out
cmc
ja
in
in
inc
xchg
sarb
jmp
inc
popa
mov
in
inc
sub
out
test
fcom
fidivrs
mov
cmp
fs
pop
stos
add
es
mov
mov
sbb
outsl
mov
fcompl
jno
mov
mov
lahf
adc
inc
arpl
sarb
mov
inc
scas
dec
mov
push
call
in
into
enter
pop
xorb
int3
sbb
cmp
mov
fdivrl
pop
daa
mov
popf
leave
pusha
mov
push
mov
hlt
mov
add
loopne
js
ljmp
or
jge
and
pop
inc
out
es
jmp
mov
repnz
movsb
sbb
mov
movsb
cli
jbe
bound
cmc
ss
bound
std
out
xlat
sbb
push
stos
cmp
idiv
push
je
pop
or
sub
movsl
in
popa
cmpsb
lock
loop
add
stos
cwtl
sub
out
test
jae
mov
inc
dec
dec
sbb
xor
sub
mov
xor
push
incb
arpl
mov
fisttpll
xchg
add
lods
pushaw
outsb
lods
adc
sub
fs
and
jbe
inc
or
jne
scas
xchg
or
dec
cmp
and
mov
cmp
mov
cmp
ljmp
aad
movsb
or
nop
xchg
sub
hlt
pop
xor
ror
cmp
icebp
dec
dec
shl
ret
cmp
add
pop
or
addr16
cmpsb
jns
call
dec
test
nop
lcall
fsts
repnz
xor
popa
sbb
pop
stos
or
jl
sub
push
mov
aas
and
ljmp
push
pop
imul
lock
leave
dec
jmp
push
ds
fiadds
push
test
int
call
add
subb
movsl
xor
jb
test
cltd
sbb
clc
enter
cmpsl
or
mov
cltd
sub
mov
mov
sbbl
pop
push
sahf
in
mov
js
lock
out
aad
ja
cs
or
dec
jecxz
popa
mov
inc
das
lea
ljmp
adc
sar
inc
pop
ss
push
cs
mov
loope
fcomps
cwtl
sbb
push
fwait
sbb
iret
xor
call
push
jmp
outsl
nop
mov
or
sbb
mov
and
imul
cmp
push
xorb
addr16
add
es
mov
je
cmp
jo
insb
int
dec
jecxz
jne
insb
xor
push
mov
test
rcrb
and
shll
or
mov
out
mov
mov
lods
aaa
mov
movsl
inc
xlat
insl
jns
mov
cmp
or
hlt
jne
sub
inc
mov
add
std
and
repnz
in
jl
pusha
aas
stos
jne
jg
xor
fisubl
jl
dec
movsb
mov
lahf
dec
imul
or
or
add
push
jge
fbstp
in
jo
cwtl
and
xchg
fildl
inc
fs
push
out
inc
or
in
cld
loope
add
out
outsb
adc
int
leave
jno
jmp
jecxz
inc
mov
mov
push
push
test
mov
out
xor
pop
ds
mov
dec
mov
rolb
mov
test
add
popa
mov
mov
cmpsl
popf
xor
sti
scas
cmp
inc
mov
fnstcw
sbbl
arpl
xchg
outsb
daa
or
inc
std
incl
dec
cmp
adc
mov
dec
loope
add
setl
jae
xchg
jno
and
jae
or
inc
js
mov
cmp
pop
jecxz
test
in
cld
lods
rorl
xchg
and
rcll
jbe
and
loopne
in
add
or
mov
inc
add
or
sbb
pop
pop
ficoml
sbb
cmp
jg
xchg
js
sbb
mov
mov
jae
cmp
xor
inc
js
movl
dec
mov
stos
lea
xchg
sbb
pop
inc
fcomps
jb
jge
loope
nopl
push
dec
lahf
adc
lcall
mov
daa
ljmp
pop
stos
jb
lret
mov
mov
xor
shlb
cmc
andl
push
and
sub
and
pop
into
shrb
in
insb
xor
std
daa
mov
test
inc
xor
loop
pop
pop
out
imul
mov
mov
inc
out
test
jne
push
jg
arpl
out
adc
jge
in
test
jmp
add
fcoms
dec
mov
xchg
ffree
leave
pop
cmp
xchg
adc
and
rolb
and
add
sbbl
cmp
cmp
inc
push
leave
loopew
mov
add
adc
shll
cmp
das
jnp
jns
xchg
lcall
cwtl
add
cmpsb
mov
sub
mov
mov
les
stos
pop
and
pop
mov
lea
movsb
test
in
or
and
adc
cmpsl
movsl
arpl
mov
pop
int3
fiadds
and
jno
or
jmp
xchg
daa
mov
scas
out
es
out
repz
pop
pusha
lods
imul
mov
jp
inc
cltd
int
fwait
add
sti
inc
test
testl
mov
sub
loop
sub
stos
stos
push
in
pop
xor
push
popf
push
lods
imul
push
int
bound
dec
lcall
mov
pushf
or
xchg
addr16
aam
test
cs
movsb
pop
imul
sub
mov
xor
pop
mov
sbb
pop
add
iret
and
dec
and
lret
adc
cmpb
cmp
push
mov
jae
dec
out
jb
xchg
shlb
xchg
cmp
das
aas
push
dec
out
addr16
mov
push
xor
in
test
aam
mov
jle
out
push
jl
daa
mov
fidivrl
loopne
sub
dec
add
push
pusha
enter
adcb
push
pop
fnstsw
stos
popa
push
dec
es
pop
mov
outsb
push
fldenv
lret
cmc
mov
addr16
pop
decb
push
popf
and
inc
in
mov
out
sbb
add
mov
jg
push
jno
adcb
mov
mov
dec
shr
sarl
sbb
dec
xchg
scas
dec
sahf
mov
lock
and
scas
addl
mov
lods
lahf
imul
cmp
cmp
sbb
in
sub
ss
imul
pushl
inc
ss
xchg
xchg
push
ja
inc
add
sbb
mov
or
scas
sub
adc
lahf
xchg
repnz
pop
in
push
sarl
out
jle
pop
imul
pop
add
sub
xchg
mov
mov
push
sub
jl
mov
out
xchg
rcl
repz
je
mov
repz
aam
test
jle
xlat
sbb
fstl
fisttps
xor
data16
notb
addb
nop
mov
and
mov
sbb
and
mov
mov
int
mov
sbb
out
and
or
test
in
push
scas
adc
shrb
mov
push
xchg
add
call
iret
jp
inc
lods
jo
je
inc
int
mov
xchg
jg
jg
mov
mov
fstpl
xor
xchg
xchg
and
xorb
inc
repnz
xchg
push
inc
mov
sbb
outsl
or
add
jae
dec
cltd
or
cmp
cmpsb
push
outsb
cmpsb
repz
nop
stos
outsl
insl
fbstp
cmp
scas
hlt
mov
and
adc
sahf
fs
mov
xchg
mov
mov
sti
sahf
pop
jbe
lret
inc
fdiv
xlat
and
jno
pop
aas
lock
push
mov
jbe
jb
cmc
aad
imul
fildll
lret
xchg
jecxz
add
push
push
push
iret
xchg
inc
pop
repz
cmc
inc
mov
cmp
jecxz
push
inc
daa
je
xchg
jmp
jb
in
mov
cmpsl
fnsave
std
inc
sub
iret
mov
jbe
imul
sbbb
and
sti
js
add
insl
out
pushl
push
or
iret
cwtl
in
jnp
inc
cmp
mov
out
imul
or
mov
inc
pop
int3
sub
cmp
adc
adc
lods
jmp
shr
jge
push
scas
inc
push
or
insl
adc
pop
jp
movntps
fstpl
sahf
mov
and
xor
sbb
nop
test
test
xchg
iret
cmp
dec
shr
push
add
shll
and
imul
jo
aaa
rcr
es
inc
aaa
hlt
lds
adc
push
mov
cmpsb
lods
das
mov
mov
cmc
add
ja
aam
js
cmpsb
lods
inc
mov
sbb
mov
xchg
ret
pop
inc
xor
mov
loope
pop
inc
mov
out
subb
pop
lret
jl
cltd
lods
xchg
addr16
ss
adc
mov
and
pop
leave
ljmp
ds
xor
add
jmp
cmp
mov
xor
dec
jecxz
xor
push
in
shrb
sbb
mov
mov
js
insb
pop
jnp
mov
cmp
dec
aad
pop
sub
dec
movsb
imul
imulb
sub
pop
das
jno
ror
xchg
std
inc
rclb
shrl
lcall
pop
jb
insl
lea
aas
or
mov
lret
sbb
sbb
loop
int3
dec
mov
pusha
adc
ret
jbe
js
and
lods
xchg
loop
frstor
jle
das
cmp
jl
movsl
in
push
pop
in
lock
xor
dec
jns
out
dec
pop
jge
pop
movsl
jl
push
jmp
dec
fwait
push
cmp
sub
xchg
in
aad
decl
in
ja
dec
xchg
les
mov
shlb
and
test
push
insb
push
aaa
popa
add
jl
pop
sub
ljmp
pushf
xorb
add
lods
lods
jo
push
sub
xchg
cmpsb
xchg
xchg
jle
lret
xlat
repz
jge
imul
sbb
mov
mov
in
arpl
arpl
cld
mov
mov
in
pusha
stos
push
iret
add
bound
xor
dec
stos
in
or
fwait
pop
dec
xchg
dec
push
fdivrs
nop
jnp
scas
xlat
push
xlat
out
jo
inc
mov
add
sub
int
ffree
push
push
repz
adc
xchg
or
dec
loope
mov
inc
popa
cmp
inc
gs
inc
xlat
leave
adc
das
jge
inc
movl
add
add
xor
mov
adc
pop
jmp
or
mov
nop
sbb
mov
push
sub
sub
cmpsb
adcl
dec
fs
xchg
pop
push
xor
add
mov
fstpt
mov
mov
push
jo
xor
jnp
test
hlt
xor
pop
lea
dec
enter
or
push
sub
xorl
decl
push
or
mov
mov
imul
call
in
sub
leave
jp
xchg
nop
fidivs
loop
popf
test
outsb
popf
mov
das
adc
mulb
scas
into
pop
sahf
xor
stos
cmp
mov
repz
mov
loop
orb
xchg
pop
lods
and
add
aad
lods
pop
adc
jl
mov
jl
call
in
pop
pushf
jb
out
ljmp
fdivrl
mov
sub
ret
jae
inc
jmp
inc
into
gs
add
bound
xchg
dec
es
hlt
addr16
and
inc
test
mov
xchg
jle
imul
punpckhdq
pop
adc
ds
call
or
push
xlat
add
adc
pusha
mov
xor
fsubrl
push
in
xor
fstpt
iret
and
jl
lds
push
dec
jno
int
mov
test
lock
fs
lock
cmp
stos
scas
jae
imul
call
out
xchg
stc
or
push
dec
pop
sbb
mov
add
inc
mov
ss
dec
push
sbb
add
jge
inc
into
subl
pop
pmaddwd
push
mov
push
mov
nop
add
out
loop
xchg
addl
mov
fidivrl
mov
movsl
fildl
lcall
in
pusha
test
sub
or
jno
clc
lret
mov
fcmovnbe
cmp
cli
xor
add
jo
add
repnz
inc
adc
pop
or
mov
ret
add
rcrb
cwtl
mov
cltd
mov
cmp
stos
cli
jne
or
addr16
lock
stos
jno
fs
test
outsl
arpl
aas
into
nop
cwtl
out
aam
mov
push
sbb
aad
cmpsl
cli
mov
lock
mov
nop
movsb
fnsave
sub
rorl
leave
and
in
je
jne
xor
in
sbb
mov
loopne
dec
std
add
sub
cmp
jns
lods
loope
xor
push
sub
inc
jecxz
dec
mov
cmp
out
add
mov
fnstcw
xchg
rorl
pop
jecxz
test
and
popf
fnsave
dec
in
out
fadd
cmp
jae
jo
push
callw
sbb
jle,pn
lea
jp
adc
cld
jg
outsl
push
push
and
outsb
test
repnz
popa
xor
mov
data16
and
fsubl
xchg
push
daa
aam
insb
or
rolb
mov
je
add
nop
daa
sbb
jns
dec
fadd
add
or
mov
lret
mov
in
inc
dec
inc
xchg
pop
push
jb
inc
xchg
jmp
inc
mov
push
adc
pop
jg
testb
lahf
rcl
jmp
insl
mov
fildl
xor
mov
push
push
jns
cs
int3
push
mov
pusha
aas
repnz
cwtl
shl
lods
subl
lcall
ds
adc
adcb
fwait
into
addr16
aas
push
jmp
lock
pop
mov
push
xchg
lods
ja
out
cltd
hlt
xor
divb
mov
aas
mov
in
rol
loop
in
cmp
mov
or
in
push
xor
imul
enter
adcb
ja
xchg
lea
xchg
dec
dec
sub
dec
pop
mov
movsl
icebp
xor
jmp
arpl
rcll
gs
adc
or
sub
mov
ret
bound
jecxz
push
out
pop
push
push
and
fs
scas
in
dec
sbb
push
cltd
cld
push
inc
xor
xchg
scas
cwtl
lods
insl
ja
je
aas
push
imul
cwtl
mov
sbb
loop
push
xor
fidivrl
xor
push
xchg
adc
cmp
out
hlt
cmp
cmp
imul
dec
jbe
lahf
xorl
push
adc
cmp
xchg
pushf
and
out
cmpsl
add
fimull
scas
sti
push
rolb
push
inc
xor
sub
fwait
mov
movsl
int
pop
fs
cmpsl
pop
lods
mov
addr16
add
push
and
add
mov
inc
aam
mov
lock
mov
lods
es
push
mov
dec
cmp
cmpsb
lcall
push
jb
lock
int
fs
enter
std
mov
addr16
cli
or
sbb
adc
mov
loop
adcb
shlb
sbb
pop
pop
mov
loopne
enter
jbe
hlt
xchg
inc
test
lcall
jbe
mov
les
iret
fwait
test
add
lret
stc
or
inc
in
and
imul
push
mov
fldl2e
or
in
or
ds
dec
test
mov
movsl
jl
or
fabs
dec
out
add
popa
mov
jbe
or
daa
add
sub
test
xchg
jno
je
inc
aaa
int3
mov
mov
jge
out
sub
sahf
jbe
sbb
and
mov
mov
adcb
je
scas
loope
xchg
repz
clc
or
mov
and
movsb
xor
insl
test
lret
lock
popa
into
repz
adcb
std
out
cmp
cmp
repnz
sbbb
mov
dec
pusha
popf
fwait
cmpsb
cmpsb
adcl
push
test
xor
scas
xor
repz
adc
xor
mov
xchg
sti
js
rcl
mov
dec
or
fnstenv
jae
add
mov
jno
lahf
sbb
shrl
cltd
imul
add
push
add
or
popf
mov
pop
sbb
lea
std
cltd
and
adc
addr16
dec
dec
mov
mov
cmp
push
ds
mov
ja
and
mov
cld
and
fistpll
jg
mov
fisubs
sar
fcompl
pop
pop
icebp
test
xchg
add
js
or
movsl
push
push
mov
inc
stc
xor
sub
or
lcall
inc
cli
outsl
push
mov
outsl
and
jl
in
cmp
enter
or
inc
mov
outsb
jo
jl
mov
jb
or
fs
aam
mov
fbld
ret
popa
inc
clc
gs
adc
and
ljmp
data16
jl
xchg
mov
popl
test
inc
push
adc
leave
sbb
cmp
mov
fldcw
jl
js
arpl
jnp
add
inc
test
sti
leave
push
mov
pop
out
jle
push
sub
xchg
testb
shlb
aam
aaa
pop
pop
cmp
movsl
stos
in
faddl
sar
and
inc
mov
mov
adc
push
stos
push
lock
dec
dec
test
loope
jl
movsb
push
fwait
popw
fistps
in
pop
or
jb
mov
cmp
push
mov
scas
ret
sub
sbbl
push
imul
sbb
ret
enter
cmp
out
jo
add
mov
cmp
pop
adc
shrl
mov
mov
jmp
sbb
inc
stos
mov
or
movsl
adc
lret
das
dec
xchg
sbb
mov
adc
xor
push
mov
mov
jmp
pop
leave
xor
pop
push
cltd
mov
dec
inc
test
nop
aam
imul
lds
mov
fidivrs
test
and
xor
pop
shlb
mov
int
shrb
lods
dec
xor
insl
loopne
xchg
dec
movsl
dec
dec
lock
popf
jge
xor
push
inc
mov
push
pop
cli
stc
popf
push
in
sub
pop
dec
add
addb
xor
dec
or
and
sub
xor
mov
decb
inc
inc
xor
inc
cs
jmp
popf
insl
popa
xor
test
inc
bound
out
xor
add
xchg
xchg
dec
or
scas
filds
mov
ss
jb
lea
push
es
xor
jns
mov
add
mov
fmuls
fdivl
cmc
mov
xchg
cmp
sub
sbb
mov
fistps
rcr
jl
mov
fwait
pop
mov
jno
jnp
mov
mov
inc
fdivr
aam
jge
stos
pop
int3
fisubs
add
out
push
adc
push
add
movsl
cmp
insb
xchg
mov
xor
pop
hlt
pop
shrl
push
or
adc
mov
outsb
add
mov
mov
jg
mov
xor
sbb
mov
pushf
push
adcb
popa
ffree
ljmp
loopne
jo
or
pop
cmp
pop
loope
adc
jmp
jmp
push
sbb
mov
hlt
scas
inc
int3
mov
dec
dec
add
mov
adc
inc
cs
sub
lret
pop
pop
ss
push
inc
pop
faddl
push
aas
cmpsl
mov
mov
pop
fwait
je
data16
sahf
loopne
sarl
lcall
cmpsl
cmp
pop
mov
shll
cmp
scas
inc
dec
shrb
ret
roll
cmp
push
pop
orl
add
xchg
xchg
adc
mov
sbb
arpl
data16
jl
mov
add
fnstsw
nop
jno
testl
adc
ljmp
mov
cwtl
mov
xchg
ret
xchg
loop
adc
aaa
jb
xchg
push
and
ret
lret
notl
mov
loope
adc
cmp
jne
mov
pop
ss
fnsave
movsl
ja
lcall
sahf
jae
rolb
xchg
pop
rsqrtps
or
mov
push
mov
mov
lea
mov
adc
jb
clc
inc
stos
push
inc
xor
sub
cmp
out
lods
stc
mov
repz
xor
fiadds
push
repz
sbb
sbb
cmp
add
xchg
lods
inc
add
jbe
cmpsl
jecxz
and
fs
fidivl
loopne
push
xor
addl
cmp
sub
inc
clc
sbb
push
in
sarl
dec
and
negl
out
ljmp
inc
cmpsl
and
cmpsb
in
and
subl
cmp
test
add
int3
lret
adc
mov
fildl
dec
icebp
pusha
cmpsb
out
in
xchg
scas
cwtl
or
mov
mov
data16
mov
ds
push
cld
xchg
sub
add
lret
sub
rcrl
inc
mov
je
push
data16
bnd
xor
lds
jp
pop
pop
shll
test
in
adc
cwtl
pop
add
push
mov
pop
lea
inc
dec
push
xchg
sub
mov
ret
mov
push
aad
daa
mov
jg
dec
es
push
scas
mov
mov
push
push
xor
leave
mov
sti
sti
sub
rcrb
outsb
loop
mov
push
and
ss
jl
cltd
xor
add
in
repnz
inc
scas
push
mov
dec
dec
mov
xchg
scas
sub
mov
cwtl
dec
pusha
popf
ror
lds
cmpsb
fwait
dec
mov
aad
out
aad
cmp
scas
scas
mov
insl
sbb
fbstp
mov
sbb
cmpl
fwait
in
xchg
jge
andb
test
or
mov
push
testb
or
jmp
sub
mov
push
mov
movsb
mov
fidivrs
mov
shrl
pop
cmp
dec
mov
mov
pop
iret
pop
pop
xchg
sub
pop
jnp
aam
cmc
pop
sahf
and
dec
outsl
inc
jnp
jae
pusha
or
xchg
cwtl
in
shrl
leave
inc
mov
stos
loop
cs
ds
mov
mov
dec
mov
pop
pusha
and
inc
les
sti
mov
mov
iret
mov
or
outsl
lock
cmp
clc
xchg
sbb
movsl
and
mov
push
andb
cmp
shl
stc
sbb
cmp
xchg
or
das
stc
out
cmpsb
mov
imul
add
sbb
jbe
mov
lret
inc
shl
je
stc
cs
popf
popa
jbe
jg
test
sub
jp
xor
ficomps
and
or
stos
pop
jmp
dec
addr16
jp
jo
jmp
or
lea
sbb
xor
imul
add
repz
xchg
pop
cltd
rclb
out
scas
fimull
in
jne
add
or
and
dec
mov
push
insb
push
lods
sub
xor
push
movsb
xchg
mov
lock
hlt
and
xchg
dec
shr
rcrl
icebp
addr16
and
push
inc
clc
ror
xor
sub
cpuid
jmp
popf
inc
leave
pop
aad
pop
in
dec
mov
sahf
jns
fstpt
fcompl
or
mov
fcom
ret
mov
push
iret
xchg
lds
cs
testl
dec
loope
ret
mov
aas
cmp
xchg
iret
data16
in
imul
loopne
fidivs
xchg
ret
push
xchg
cmp
inc
cmpsb
mov
imul
bound
jp
rclb
xchg
imul
lock
mov
lea
outsl
add
fadds
in
mov
jnp
dec
ds
jmp
mov
subl
sbb
sub
jno
in
les
push
cmpsb
inc
inc
mov
jno
sub
aas
jbe
aas
push
imul
add
cld
mov
pop
jnp
mov
mov
push
push
dec
std
data16
loope
sub
xor
dec
addl
movsl
iret
movsb
in
stos
mov
fnsave
ljmp
pop
pusha
mov
jecxz
cmp
test
mov
pop
fadds
popf
ja
in
sbb
push
popf
xor
fnsave
cltd
cmpsb
lock
mov
ret
test
hlt
aam
inc
sbb
xchg
mov
sub
test
jge
arpl
int
adc
shl
repz
fistps
and
jp
popa
mov
shlb
aam
sbbw
daa
pop
in
adc
insb
data16
or
imul
fisttpll
or
xlat
shl
lock
rclb
aam
mov
mov
pop
mov
ret
sub
pop
mov
insl
pushf
gs
push
push
mov
xor
push
imul
jb
aas
into
sub
sub
std
sbb
stos
inc
sbb
sub
cmp
sahf
subl
inc
stos
cmp
push
jbe
fsubs
push
mov
add
jl
out
jb
jmp
clc
jae
xor
fidivs
mov
ficoml
fcomps
xor
xor
dec
pop
jle
es
ret
mov
lods
push
shll
outsl
jecxz
popa
jl
push
repnz
repnz
subb
cmp
js
mov
and
lods
dec
jge
sbb
dec
ficoms
mov
cwtl
xor
mov
mov
mov
mov
mov
pop
pop
ja
or
add
add
xchg
sub
xchg
xchg
leave
xor
mov
mov
mov
xlat
stos
insb
loopne
mov
or
andl
cli
imul
outsl
daa
push
mov
call
sbb
test
pop
flds
insl
inc
out
test
jb
shrl
mov
cmp
or
mov
push
cmp
sub
mov
or
mov
or
sbb
mov
ss
mov
addl
push
or
jns
xchg
jno
fstpt
cmp
sbbl
shl
adc
pop
jl
sub
insl
je
cmpsl
rcrl
adc
cmp
add
jl
dec
aaa
in
push
out
fidivs
lock
mov
insb
sub
ja
fstpl
mov
pop
lods
in
mov
mov
sub
mov
jge
pop
mov
xchg
mov
std
mov
sub
cmpsl
dec
xor
stc
repz
ret
lods
or
inc
ljmp
fstps
and
mov
imul
xor
pop
dec
mov
aas
push
es
fildll
jne
arpl
or
mov
jp
rorb
lea
xchg
push
add
mov
scas
imul
mov
psubq
pop
sub
sub
js
js
fwait
cmp
sub
outsl
cmp
inc
mov
cmpsb
jecxz
cli
xchg
int
xor
add
movsl
cmc
push
mov
mov
inc
xchg
cmp
mov
or
push
jl
sub
in
out
adc
fistl
ss
and
cltd
mov
bound
ljmp
add
daa
inc
cmp
mov
sub
pop
pop
loope
sbb
and
loop
mov
sbb
pop
aad
mov
nop
sub
mov
mov
out
add
push
popf
jp
push
int
xor
mov
icebp
jne
mov
mov
outsl
scas
xor
outsl
sub
and
call
imul
insl
pop
add
xchg
pushl
out
leave
adc
jg
xchg
pop
cld
adc
pop
imul
pusha
mov
rcl
add
mov
imul
add
fidivl
jnp
lods
pusha
fsubr
sarl
xchg
addr16
rcl
ret
push
movsl
and
push
fidivl
andb
jge
cmc
inc
push
loop
or
inc
xor
mulb
scas
mov
stos
mov
push
mov
jb
and
dec
mov
adc
dec
or
jae
sbb
and
outsb
mov
push
xor
sub
pop
out
mov
jno
jmp
sbb
mov
nop
adc
ret
inc
shr
rcl
add
pop
jmp
cmp
xchg
adc
push
cli
xchg
sbb
push
inc
pop
and
and
push
adc
rol
inc
mov
xor
rcrb
mov
jmp
xchg
push
jns
out
push
aas
inc
sbb
leave
dec
outsl
xchg
add
rcrb
inc
adc
leave
repz
inc
arpl
mov
pop
pop
xchg
lret
cwtl
adc
mov
icebp
adc
mov
fidivrs
cmc
mov
call
dec
xlat
cmp
adc
add
xor
pop
mov
adc
in
cmpsl
in
push
arpl
aad
jl
nop
cmpsb
mov
lret
adc
addb
jl
decb
jecxz
mov
xchg
cmp
int3
adc
orl
dec
push
xor
and
test
fs
notb
pop
rol
inc
xor
lret
jnp
inc
gs
adc
mov
arpl
pop
mov
test
xchg
add
call
jno
jo
daa
test
sub
ja
movsl
daa
pop
je
jl
inc
sub
aaa
inc
decb
or
push
cmp
or
mov
sbb
xchg
push
mov
cmp
aam
mov
and
out
mov
ret
and
inc
sbb
lret
popa
fmul
pop
iret
or
mov
and
pop
lea
outsb
stos
in
into
inc
pop
xor
aas
mov
cs
ret
aas
in
imul
xchg
aad
sbb
adc
push
inc
xchg
add
xlat
mov
ret
sbb
lahf
imul
mov
cmp
cmp
cmp
fstps
loopne
lret
fdivrl
shrb
ret
cmp
sahf
mov
jg
stc
or
mov
dec
ja
out
mov
outsl
push
gs
sub
xor
nop
xor
or
scas
mov
je
scas
inc
out
xchg
in
lret
inc
add
jle
push
sahf
sub
jg
cmp
in
add
dec
jbe
fldl
div
dec
pop
out
jnp
jle
inc
lret
repz
pop
cltd
xchg
push
adc
lcall
lcall
ss
jl
cmp
aam
call
repz
push
movsb
add
cmpsl
xor
fnstenv
pop
dec
mov
notl
inc
ret
iret
sbb
frstor
pushf
xor
xchg
pop
add
inc
cld
popf
lods
mov
fs
addr16
fbld
loopne
arpl
cmpsb
xor
mov
adcl
mov
push
sbb
xchg
mov
std
popf
mov
dec
mov
jnp
dec
lret
fiadds
push
dec
int3
punpckhdq
out
xchg
add
je
and
mov
outsl
pop
mov
fisttps
int3
dec
aam
cwtl
outsl
loope
dec
mov
xchg
scas
sub
ss
enter
mov
lock
jne
daa
ret
rcll
cmp
inc
rol
cmp
jp
mov
gs
stos
fs
fnsave
sti
mov
ficompl
dec
rorl
cmp
hlt
ror
mov
dec
cmp
xchg
stos
dec
ljmp
and
aaa
push
xchg
out
lods
adc
sub
push
in
xor
push
out
shll
push
sbb
mov
je
mov
adc
adc
mov
fnstcw
xor
mov
pop
ss
hlt
mov
sbb
inc
adc
int
push
ja
test
sub
nop
pop
mov
mov
pop
loopne
leave
mov
inc
cs
ficompl
out
and
mov
dec
gs
mov
mov
pop
jnp
pop
pop
test
cwtl
jl
fisubs
mov
imul
mov
lahf
and
adc
add
or
lret
mov
xchg
addr16
jno
add
pop
xchg
mov
mov
mov
xchg
pop
xor
js
adcl
adc
xchg
push
lea
xchg
lret
inc
sub
lock
les
cmp
jle
jg
pusha
add
sbb
mov
jne
dec
xor
lret
jo
push
into
fstps
bound
stos
std
sbb
dec
xor
sbb
jle
jp
and
cmp
je
adc
movsl
xor
or
rcl
xchg
pop
pop
ret
filds
adc
fucomi
stc
or
lods
js
or
fs
pop
mov
inc
flds
inc
adc
jbe
rcl
adc
cmpsb
je
add
mov
iret
pop
imul
mov
mov
jns
iret
scas
jle
or
repz
aam
xchg
mov
xor
int3
pop
inc
int
shll
test
rorl
jo
inc
lods
repz
push
scas
call
hlt
jge
mov
push
push
aas
fdivrl
fbstp
xchg
fstpt
daa
inc
lret
in
or
or
sub
jae
adcb
pop
stos
js
or
mov
pusha
cli
pushf
into
orb
shll
mov
jbe
mov
sti
jns
jp
mov
mov
push
loope
rclb
xchg
adc
popf
int3
mov
inc
arpl
inc
jecxz
dec
daa
mov
pop
pop
dec
dec
pop
mov
enter
adc
clc
sbb
cmp
jge
mov
mov
adc
ds
xchg
leave
in
cli
dec
pop
adc
adc
out
push
sahf
xchg
sub
lds
fistps
pop
loop
or
xchg
in
movsb
inc
outsb
mov
bound
cwtl
mov
out
mov
mov
enter
push
icebp
dec
and
dec
cmpsb
inc
or
fdivrl
or
push
mov
mov
ljmp
jmp
movsb
out
fidivs
sti
dec
mov
cld
sbb
rorb
scas
pop
mov
lret
jae
int
sbb
aad
push
add
cwtl
xor
leave
loope
fildll
stc
mov
aas
in
fwait
pop
pusha
mov
cli
jbe
stos
mov
add
jae
test
jno
dec
lea
cmp
pusha
shrb
sbb
mov
loope
push
mov
and
in
pop
jmp
xorb
pushf
or
cmp
es
push
jns
mov
ret
loope
or
jns
xchg
fcomip
aad
aam
lahf
ret
jnp
lods
movl
adc
data16
mov
in
or
or
mov
inc
bound
push
mov
subb
iret
lret
inc
insl
mov
dec
mov
sub
pop
rcrl
pop
and
stc
add
sub
aaa
jmp
push
cmp
cmp
cmp
push
mov
jp
xchg
negl
outsb
xor
cmp
jo,pt
into
sub
popf
int
into
scas
mov
jge
mov
mov
dec
adc
or
loope
and
push
leave
loope
jae
insb
sub
lods
std
mov
lahf
inc
cmp
mov
mov
xchg
sti
sbbb
push
in
add
xchg
dec
mov
mov
call
mov
pushf
dec
loop
inc
pushf
inc
mov
push
push
das
insb
sub
loop
pop
xchg
movb
mov
sub
movsb
pop
cmp
mov
fmull
lret
cltd
movsb
sub
bound
inc
xor
cwtl
adc
or
cmpsb
scas
sub
js
adc
dec
jge
jb
shrb
xchg
mov
jns
loope
cli
or
or
shlb
out
xor
and
int3
push
incb
pop
into
mov
push
insl
xor
xor
int3
inc
aam
scas
or
clc
call
rcrl
fistps
clc
xacquire
xchg
dec
inc
rclb
pusha
and
jns
les
dec
int
add
test
outsl
xor
stc
leave
mov
test
out
push
mov
out
jmp
das
into
mov
push
jo
adc
ss
sub
ret
popa
sub
and
addr16
adc
inc
test
repnz
fnstsw
pcmpgtb
push
or
popa
ds
mov
push
jp
enter
xchg
lcall
aaa
mov
je
clc
add
add
sbb
int3
inc
dec
sarb
push
pop
sbb
mov
cmp
mov
stos
loopne
fsubrl
int3
cltd
mov
jle
push
fdivrp
xchg
dec
scas
outsb
add
popf
jb
hlt
jle
data16
xor
popf
aaa
push
shll
adc
ds
popa
adc
mov
fidivl
inc
ss
cli
or
jge
mov
mov
stos
into
jmp
mov
sbb
movsl
mov
pop
mov
xchg
jp
xchg
mov
movd
jg
imul
daa
mov
mov
push
push
push
shrb
mov
je
cli
or
iret
pop
mov
les
cld
addb
sub
inc
add
loop
push
loope
adc
int3
or
sahf
mov
andb
adc
xor
aaa
lods
mov
adc
ja
fdivs
inc
add
mov
jl
add
cmp
imul
in
sbb
testl
dec
push
popa
ljmp
xor
jno
push
gs
push
cs
pop
addr16
popf
fldenv
lcall
test
fsubrs
pop
iret
in
popa
gs
jae
mov
cmp
cmp
cli
push
dec
xchg
push
or
sbb
fildll
faddl
aas
xchg
popa
pop
psubsw
or
mov
imull
pop
dec
cld
loop
jno
adc
and
xchg
jns
dec
iret
pushf
lods
adc
stos
mov
xor
xchg
mov
xchg
mov
jmp
int3
sbb
xor
mov
jbe
ds
test
inc
enter
mov
je
xchg
xor
and
mov
sahf
rcrb
movsb
push
add
xor
imul
or
nop
jne
xchg
rcll
xor
out
xor
scas
mov
mov
lcall
cltd
call
xchg
cs
int3
add
cmp
mov
dec
pop
jl
jg
cli
aad
loope
lahf
pop
test
xchg
pop
and
adc
pop
inc
repnz
stos
sbb
mov
pop
xor
fsubrl
xchg
xor
arpl
mov
into
jo
mov
xor
mov
jecxz
jle
dec
xchg
sub
dec
scas
das
cmp
sub
cwtl
loopne
cld
xchg
mov
mov
les
insb
enter
xchg
mov
mov
mov
push
stos
mov
frstor
repnz
jno
cmp
arpl
push
mov
outsl
or
add
aaa
lret
rolb
and
pusha
lods
cs
pop
das
mov
rorb
dec
sbb
pushw
out
enter
adc
mov
inc
and
adc
xor
bound
pop
push
mul
lods
stc
pop
test
sub
jmp
mov
in
frstor
mov
shrl
push
fwait
outsl
notb
loop
add
lahf
rorl
mov
push
pop
and
lock
pushf
inc
icebp
pushf
pop
lahf
xchg
lds
pop
sbbb
jbe
repnz
xchg
shl
lret
lea
mov
add
test
in
rorb
loop
and
pop
push
inc
ret
mov
xchg
lahf
jecxz
cltd
add
jns
popa
mov
nop
fdivrs
lahf
iret
cmp
cmc
icebp
mov
add
imul
inc
cmpsl
jbe
mov
movsl
adc
fs
dec
imul
fwait
jmp
dec
jo
mov
bound
fdivs
mov
bound
out
test
subl
mov
scas
mov
pushf
aas
dec
push
stos
cmp
sti
sahf
popa
xor
add
inc
sbb
ffree
lock
pop
and
lcall
hlt
sahf
hlt
xor
enter
adcl
negb
in
lods
and
sahf
or
insl
cld
pop
jmp
cmpsb
test
aam
push
imul
aad
mov
jne
mov
addr16
daa
sub
dec
aad
push
inc
out
add
cld
mov
xchg
sbb
aas
pusha
filds
imul
mov
sbb
mov
ss
ret
pop
adc
jg
xchg
pop
imul
inc
ret
leave
push
not
and
int3
mov
std
imul
dec
push
movb
pop
jno
jl
jl
sub
out
pop
outsb
inc
or
fdivl
out
movl
inc
sbb
mov
fwait
jo
int
inc
xor
xor
mov
decb
lods
cmp
mov
and
loope
jnp
adc
sub
divb
pop
leave
mov
xchg
outsb
or
cmpsl
jnp
fadds
mov
xor
push
lahf
and
xchg
fsubp
fwait
and
add
ljmp
sbbb
adc
cmpsl
negl
fistps
into
gs
lcall
push
outsl
icebp
sbb
jmp
jo
scas
mov
or
or
mov
mov
imul
push
lahf
or
and
or
jl
repz
sub
lea
sbb
sub
icebp
mov
lcall
orl
repnz
xor
push
bound
sbb
sub
insl
lods
mov
xchg
lods
ljmp
sahf
pop
mov
adc
push
lods
push
shrl
push
xor
mov
aaa
into
leave
fcoms
mov
pop
adc
mov
imul
xor
fisttpll
lahf
push
stc
xsha1
cmpsb
mov
sub
mov
aas
nop
into
pop
mov
fs
cmc
mov
mov
inc
add
das
out
inc
lea
and
jle
push
mov
pushf
xor
sbb
push
sti
dec
repz
push
adc
push
stos
mov
xor
push
mov
testl
fcmove
imul
aam
pusha
ret
repnz
outsl
mov
xor
jno,pn
test
andl
dec
lcall
clc
push
rorl
dec
loope
loope
add
fnsave
fwait
push
addr16
sti
xchg
sub
stc
cmc
push
insl
shrb
rol
scas
cltd
sub
fs
inc
adc
sti
xchg
insb
data16
rorl
mov
sbbb
in
mov
push
or
ret
cmp
scas
imul
mov
test
dec
sahf
lahf
pop
or
mov
cmp
gs
mov
dec
sbb
xchg
addr16
jno
outsl
and
and
mov
push
fadd
dec
dec
movl
inc
sbb
clc
testl
cmp
xchg
sub
fdivp
jne
sbb
cli
stos
ret
data16
enter
js
mov
or
aas
fldenv
cmpsl
and
insb
js
dec
pop
fwait
dec
gs
insl
loopne
mov
loopne
dec
lahf
sbb
pop
repz
fmuls
mov
insl
add
or
sbb
clc
and
orl
jg
jne
xchg
xor
stos
in
in
test
pop
repnz
ds
sub
nop
daa
shrl
jg
int3
clc
decb
insb
out
pop
scas
mov
xchg
pusha
adc
dec
mov
fst
lock
dec
xchg
mov
cld
xchg
pop
dec
sbb
jp
int
push
addr16
in
test
in
out
out
jl
aas
movsb
shlb
xchg
mov
repz
pop
repnz
cli
iret
arpl
popa
es
aas
lods
inc
xor
xchg
loop
lret
in
pand
jns
or
push
push
popf
pop
shlb
push
cmp
mov
inc
dec
lahf
cld
sarl
adc
pop
inc
cwtl
or
cltd
adcl
push
lock
lahf
cmpsb
lods
adc
test
sbb
cmpsb
in
cli
pop
sahf
sub
sub
adc
mov
fdivr
cltd
push
pop
xor
sarb
fwait
cld
incl
mov
xor
jmp
loopne
sarl
fldenv
jo
add
pop
xchg
jle
add
mov
loope
cmpb
mov
call
mov
or
repz
sub
out
mov
xchg
xchg
mov
dec
jbe
cmc
div
scas
cmp
outsb
sub
div
or
jae
imul
or
cmp
sbb
xchg
lods
mov
mov
jnp
dec
push
sti
pop
ficoms
lahf
pop
cmc
mov
mov
cmpl
scas
adc
insb
push
mov
int3
iret
adc
mov
inc
inc
inc
in
jb
pop
sbb
scas
mov
cs
neg
mov
mov
mov
in
iret
jecxz
xchg
out
inc
push
push
aas
pop
mov
mov
xlat
adc
and
fnstsw
jbe
lret
lea
and
sti
push
ss
xchg
add
les
cmp
into
adcb
cmp
stos
jb
pop
aaa
sbb
sub
rol
sti
lret
mov
fstps
jl
jmp
test
daa
fnstsw
cwtl
out
rcr
push
sbb
push
pushf
dec
test
rcrl
add
mov
xchg
jo
sbb
ror
jns
and
dec
jne
cli
mov
xor
sahf
shl
fs
push
pop
adc
push
push
sub
push
ret
ror
out
xor
insl
fildll
adc
pop
cmp
dec
or
and
xchg
cmp
stc
or
adc
jp
mov
adc
cmp
and
imul
inc
or
jbe
std
adc
sub
into
vpunpckldq
add
adc
sub
sahf
cld
notb
insl
movsl
sbb
ror
mov
loop
lods
imul
ss
ja
sub
jns
stc
push
mov
mov
push
mov
cmc
cmp
sub
xchg
scas
pop
imulb
mov
lahf
push
pop
cwtl
push
pop
jae
shlb
push
dec
sbb
push
pop
pushf
jno
xchg
dec
pop
stc
popl
bound
loope
pop
sbb
or
sub
dec
dec
cmp
mov
jb
dec
dec
cwtl
and
cli
mov
push
aad
sbb
imull
sbb
notb
jg
loope
frstor
ret
adc
or
add
repz
mov
repz
or
add
mov
leave
fnsetpm(287
imul
jecxz
push
outsl
sub
es
jnp
dec
jae
push
imul
xchg
hlt
mov
test
mov
loope
push
inc
xchg
aas
inc
dec
xorl
aaa
dec
mov
bound
mov
sbb
fwait
lret
dec
push
popf
loopne
int
fiaddl
xor
jmp
jb
in
pushf
pop
in
cmp
adc
mov
mov
les
into
iret
lea
dec
ffreep
mov
cmp
dec
inc
bound
dec
sbb
enter
mov
mov
into
jle
iret
sbb
int3
or
or
dec
pop
inc
jo
push
out
or
push
xchg
clc
fsubl
jnp
push
inc
lea
mov
add
test
test
adc
jnp
aas
jmp
xor
pop
mov
and
mov
orl
mov
xor
adc
pushf
fs
and
adc
test
and
js
inc
test
jns
mov
lods
lcall
data16
rolb
sub
scas
mov
add
inc
jp
nop
xor
cld
lods
lds
shl
outsb
leave
dec
pop
pop
cmp
lds
out
sub
push
push
repz
mov
bound
fnsave
movsl
sub
add
je
pop
and
or
imul
mov
mov
xor
mov
xchg
push
lds
adc
das
int
lea
pop
ljmp
cmp
add
sub
loope
push
adc
out
pop
xchg
lret
repz
shll
mov
loope
jl
jmp
inc
mov
rcl
jo
xchg
or
sahf
fdivl
aas
xchg
sub
mov
add
lret
ret
shlb
jg
dec
pop
loopne
jns
inc
lods
lahf
xor
jne
stos
fisubrl
push
lahf
mov
sbb
in
fsubp
and
push
aas
testl
push
iret
test
add
push
dec
push
ret
mov
and
add
mov
pop
andb
sbb
inc
popa
scas
inc
xchg
out
pop
imul
int
cmp
lods
inc
pop
je,pn
pusha
inc
int3
arpl
pop
or
sbb
andb
jnp
sahf
xchg
add
pop
mov
cmc
xchg
push
adc
jno
fs
sahf
sub
dec
loopne
stc
dec
pop
mov
hlt
cmpsl
push
call
insb
movsl
mov
xor
repz
push
dec
push
xchg
fisttps
insl
mov
cmpsb
cmp
xchg
clc
mov
jnp
adc
sti
xchg
push
xrelease
sbb
mov
ret
je
or
mov
stos
adc
add
aad
push
call
cmp
movsl
add
or
and
inc
sti
or
fucomp
sub
loope
arpl
push
or
mov
repnz
stos
mov
jo
mov
pop
cmpsl
ds
test
sub
mov
rcll
cld
inc
je
mov
sub
cmpsb
or
push
pop
fdiv
mov
xchg
or
or
cmpsl
stc
xor
push
or
cmpb
inc
fcmove
pop
movsl
ret
cmp
aaa
cmpsb
add
lahf
mov
shrl
mov
inc
dec
lahf
cli
stos
dec
lcall
sbb
call
or
pop
scas
sub
int3
movsb
xor
add
xor
jnp
add
jmp
ficoml
nop
daa
iret
cmp
xor
and
xchg
mov
pop
fxtract
ds
icebp
mov
adc
jno
pusha
xsha256
cmpsb
xchg
in
cmp
ret
std
xchg
adc
dec
and
cmp
dec
fwait
cmpl
outsl
xchg
sub
add
dec
aad
adc
xchg
inc
mov
cmp
push
ret
int3
xor
cmp
ret
sub
in
sub
mov
mov
sbbl
mov
mov
and
imul
inc
dec
cmp
scas
jb
aas
data16
jno
lret
sarl
loopne
lods
xor
stc
push
je
ret
ret
fstpt
push
xor
dec
test
dec
mov
mov
cmpsl
pop
cmpsb
loope
mov
fnstenv
push
mov
dec
push
ja
cmpsl
ret
cmp
adc
shl
outsb
or
or
scas
push
ds
scas
lahf
sub
ljmp
leave
and
fwait
mov
adc
add
add
lahf
add
push
lods
push
jmp
addr16
hlt
xlat
jmp
incb
inc
bound
mov
sub
mov
or
add
and
aas
int
jbe
fildll
sub
xchg
outsb
cmp
and
xchg
xchg
xor
push
push
insl
lock
mov
jae
std
incl
sub
mov
dec
rclb
push
dec
fiaddl
fsubrs
das
inc
lods
mov
push
mov
cmp
out
add
rclb
xor
fcmovne
enter
aas
inc
scas
shl
sbb
rol
inc
test
iret
scas
popa
xor
cltd
inc
xchg
mov
push
push
add
xor
adc
jbe
in
cmpsl
pushf
xchg
lds
and
fsubr
add
sahf
inc
ds
out
dec
sbb
inc
mov
xchg
int3
xchg
pop
insl
shl
and
loopne
stos
stc
dec
fistpll
lret
push
lds
push
dec
sbb
xchg
ret
hlt
mov
xor
xchg
pop
imul
shrb
pop
clc
push
mov
insl
xchg
js
xor
push
mov
sub
mov
mov
cwtl
mov
cmpsb
sahf
lds
dec
mov
loope
push
sbb
push
stos
jae
repz
inc
sarl
pop
jnp
jb
mov
fcmovbe
sbb
rcl
push
add
lds
add
lret
mov
cmp
jmp
adc
scas
mov
cwtl
pop
sbbl
cmp
data16
fwait
dec
rcrb
call
cmp
loope
adc
ja
aad
aas
inc
into
mov
cs
adc
dec
or
mov
jae
lret
shlb
adc
mov
cmp
movsl
lea
mov
sbb
xchg
negl
xorl
or
insl
inc
ficoml
push
sub
push
pusha
pminub
insl
iret
jmp
notb
sub
aas
daa
pop
xlat
pop
xor
pop
jmp
mov
mov
xchg
dec
and
fidivs
scas
mov
in
or
add
jecxz
cmp
stc
test
cmp
jno
ficompl
rclb
add
xchg
cltd
push
ss
fidivs
fbld
mov
or
mov
clc
fnstsw
fldenv
mov
mov
scas
test
adc
mov
dec
jecxz
jle
call
scas
mov
adc
hlt
hlt
sti
pusha
sub
loopne
loopne
sub
pop
repz
add
mov
shlb
jp
aas
sarb
cmpb
pop
sub
lods
sbb
adc
mov
mov
lea
xchg
add
mov
lahf
divl
rcr
and
std
lods
outsl
out
loopne
cwtl
xchg
ret
lods
sub
dec
mov
fisubrs
loope
mov
mov
icebp
fwait
xor
out
cmp
mov
mov
out
add
adc
inc
int3
dec
mov
sbb
or
leave
js
test
es
scas
nop
jle
imul
xchg
cwtl
int3
xor
inc
sub
lret
jnp
pop
fcomp
adc
ds
rcr
push
test
fnstsw
push
das
cmpb
into
lcall
mov
icebp
nop
sub
aas
loope
sub
jnp
fs
pop
pushf
call
mov
add
inc
mov
push
fisubrl
push
call
mov
dec
fs
dec
loopne
cmp
std
test
mov
ds
inc
lcall
or
pop
insl
push
lds
cli
shll
mov
shlb
fwait
add
and
call
loope
inc
fstpl
divb
clc
jle
push
sbb
cmp
fstpl
inc
loope
push
pop
mov
jge
cmp
loop
mov
push
mov
push
xchg
scas
inc
push
subl
push
rcr
imull
loope
mov
rolb
stc
iret
pop
sub
dec
loop
push
xchg
push
shlb
sbb
into
and
inc
test
dec
inc
adc
imulb
jmp
out
lea
add
mov
mov
push
mov
cmp
ds
jecxz
mov
pop
push
xor
inc
stos
clc
jecxz
push
out
xchg
adcb
mov
mov
rorl
aas
jns
testl
test
sub
inc
lods
mov
jb
imul
test
push
jecxz
xor
nop
mov
sub
fistl
sbb
sub
repnz
dec
jp
mov
ss
daa
std
sbb
scas
sub
sub
repz
push
push
jecxz
mov
mov
addl
jecxz
push
mov
js
sub
push
add
sbb
je
adc
mov
xchg
std
bound
stos
xchg
inc
fs
bound
jns
mov
sbb
inc
fnstenv
push
dec
add
mov
out
mov
adc
xchg
pop
xor
add
out
inc
mov
add
jnp
jb
cmpsl
push
jmp
push
ljmp
xor
aas
pop
mov
andl
lcall
movsb
addr16
xchg
jmp
push
enter
testl
shl
adc
xchg
mov
dec
jecxz
mov
xchg
mov
fildll
fisttpll
jl
push
mov
xor
push
mov
push
fwait
and
xlat
cmc
xchg
out
add
sub
stos
sub
movd
dec
movsb
mov
push
fldt
lds
adc
mov
adc
xchg
iret
data16
pop
push
cmpsb
xchg
add
stos
insl
sub
push
lock
sahf
negl
repnz
stos
in
aad
ds
mov
jae
daa
stos
imul
mov
xor
pop
out
lock
ficomps
and
sub
mov
mov
pop
and
and
jae
inc
sub
shl
in
lods
cld
xchg
or
jb
or
movsl
sbb
test
add
mov
jl
aas
repz
cmp
fisttps
fimull
cmpb
mov
push
pop
aas
fisttpll
orl
int3
sub
test
fisttps
xchg
dec
add
push
aam
dec
fwait
je
xchg
lods
cld
and
fimull
sbb
xchg
scas
call
or
lahf
adc
js
stc
and
sarl
sbb
jl
ja
push
out
xor
jne
pop
out
cltd
mov
aaa
int3
fisubs
add
jp
jbe
adc
lds
mov
out
popf
push
add
daa
inc
clc
lods
or
lds
aad
jns
test
daa
mov
jbe
inc
addr16
xchg
xor
xchg
mov
sbb
jp
inc
xchg
cmpsb
xchg
xor
xor
iret
mov
imul
and
pop
loopne
rcrb
testl
sbb
push
dec
push
popa
mov
and
test
cmp
mov
das
jbe
pop
jg
xchg
dec
pop
adc
xor
call
scas
pop
in
outsl
push
xor
xor
notb
mov
pop
icebp
mov
sub
loopne
ret
inc
mov
jns
cmp
mov
fbld
push
test
mov
aas
stc
fs
loopne
and
daa
std
aas
imul
inc
stos
xchg
add
pop
lock
push
inc
mov
mov
test
xchg
jmp
cmpsl
popa
ja
inc
sti
xchg
jb
and
xor
mov
outsb
add
jl
or
dec
fs
mov
jne
aas
repnz
lret
jb
in
loopne
sbb
mov
mov
movsl
mov
and
loopne
dec
jecxz
sbb
pop
loopne
push
xchg
ja
push
test
push
fsubrp
xchg
cmc
lret
in
mov
mov
mov
andb
flds
sub
ljmp
mov
lcall
insl
jg
mov
roll
push
ss
pusha
notl
int3
pop
shll
inc
jle
stc
xor
push
inc
and
pop
cmpsl
xor
das
pop
les
cmp
aad
sbb
jle
sub
fstpt
divb
fwait
jno
cld
push
inc
sahf
sahf
push
cmp
mov
gs
ss
inc
movsb
std
jne
in
test
sbb
sarl
aad
insl
daa
fcomps
out
cmpl
dec
out
jg
and
fstps
ret
cmp
test
js
cs
pop
jb
mov
push
jge
pop
add
xchg
bound
movsb
xchg
mov
push
test
cmpsl
sub
out
and
loop
or
sbb
cld
or
dec
xor
das
cmp
mov
shlb
int3
arpl
test
addr16
or
push
mov
scas
adc
cmp
shll
out
std
cmc
mov
fsub
arpl
adc
lcall
sub
stos
inc
add
mov
cmc
sbb
xchg
orb
push
mov
fs
pop
rorl
mov
jmp
fwait
mov
cmpsl
cli
xor
addr16
push
jge
sub
jmp
xor
fdivrl
into
and
xchg
mov
adc
xchg
inc
aas
ret
xlat
jo
sbb
xchg
popf
xor
mov
ljmp
lret
iret
ds
scas
mov
push
sahf
adc
sti
movd
jns
jp
push
cmp
mov
mov
sub
xchg
adc
ret
rcrl
std
sub
inc
lret
rorl
mov
adc
jp
xorl
pop
rcl
repnz
in
push
cmp
xlat
outsb
mov
push
cmc
enter
and
pop
aaa
xchg
push
push
sub
cltd
std
int
xor
mov
jns
mov
push
pusha
inc
dec
dec
mov
call
insl
add
xchg
add
and
jmp
inc
aam
cs
imul
ja
outsb
test
dec
jmp
cli
pop
sti
adc
sarb
push
call
push
xchg
and
adc
mov
pop
in
push
cmp
pop
les
push
xor
dec
mov
xchg
dec
pop
out
aas
and
adc
pop
and
pop
adc
cmp
sbb
xor
push
cmpxchg
fists
or
scas
test
or
mov
ss
insb
and
cld
cmp
cmpsb
adc
sub
loope
ja
jg
push
out
sbb
jne
dec
dec
mov
jg
inc
popa
pop
fsubrl
push
je
cmc
mov
sbb
adc
cmp
cltd
cli
jmp
outsb
add
mov
jp
mov
out
adc
aad
jle
cwtl
dec
lcall
inc
push
stos
rcr
inc
rclb
lods
inc
cmp
dec
fnstcw
push
stos
mov
xchg
int
mov
test
dec
icebp
jmp
mov
ret
push
lods
hlt
adc
dec
cltd
jne
lahf
ss
out
lea
mov
ss
push
adc
xchg
sub
mov
jg
jle
fdivrl
sbb
add
xlat
mov
pop
sahf
cmp
movl
out
stos
pop
dec
pop
jns
fldcw
push
pop
imul
je
cmpb
ss
sahf
lods
jno
lods
rorb
and
andl
popa
ds
lock
lcall
push
push
add
mov
push
push
aad
cwtl
fisubs
sbb
or
cmp
andl
pop
push
es
nop
loope
mov
mov
hlt
sahf
loop
rcll
pop
mov
dec
cwtl
popa
movsb
imull
call
stc
repnz
inc
or
jb
es
xchg
scas
lds
cltd
jl
dec
call
cld
sbb
mov
out
js
out
push
xor
jp
xchg
sub
or
sbb
xorl
loop
xor
mov
movsl
sbb
daa
clc
imul
push
xchg
xor
and
loope
into
jbe
ss
xchg
lea
jmp
or
sub
jge
cmp
inc
cmc
imul
arpl
daa
lds
xor
dec
add
mov
xchg
add
mov
sahf
xchg
inc
and
imul
outsl
fistpll
push
call
in
dec
lahf
add
dec
movsl
and
cmp
jle
lods
sub
js
fwait
adc
xor
incl
out
mov
lahf
push
pushf
repnz
and
ficoms
subl
sbbb
ret
inc
jns
pop
insl
jge
mov
jb
adc
call
imul
xlat
sbb
lock
icebp
pop
sahf
xlat
dec
nop
or
hlt
pop
fbstp
jl
mull
mov
dec
iret
into
stc
in
xchg
adc
sbb
outsl
lock
add
sbb
and
cmp
push
xor
cmp
loop
popa
enter
les
and
push
or
mov
in
rclb
ss
out
insb
das
or
push
jg
cmovbe
into
xlat
sbb
dec
int3
jbe
int3
mov
addr16
adc
jno
adc
mull
jb
inc
or
cld
mov
shll
sub
iret
data16
lret
dec
lock
lret
jge
sub
sbb
inc
and
and
stc
jae
addr16
or
mov
mov
test
popa
rcll
push
ljmp
jno
dec
add
mov
pop
daa
out
jge
pop
xor
je
out
sahf
mov
pop
lods
mov
aam
rcl
xor
push
aam
and
cmpsl
cmpsl
ret
fdivr
adc
aad
mov
stc
xchg
sub
popa
xchg
jmp
inc
inc
insl
stc
insb
push
cmp
push
adc
incb
dec
sbb
push
dec
out
xchg
mov
push
lret
subb
inc
and
adc
xlat
push
insl
fdivrs
jb
mov
dec
cmp
jl
lea
fdivrs
pushw
push
dec
mov
in
fldl
push
adc
cmp
adc
iret
inc
adc
push
xchg
scas
jnp
push
jae
lea
lret
mov
ret
xor
in
pop
mov
push
lret
rorl
dec
lds
imulb
pop
popf
push
fsubrl
pop
repnz
es
iret
or
push
test
out
sub
push
test
jle
ret
xor
cmp
rorl
add
orl
scas
push
sub
ss
in
fidivl
xchg
popa
cwtl
push
mov
shll
jg
fsubs
aaa
mov
cli
sub
mov
pop
push
mov
jnp
mov
add
repnz
aam
adc
imul
xchg
xchg
mov
add
xchg
es
in
aaa
dec
aad
shrl
in
sub
push
leave
jbe
mov
lcall
loop
lea
jge
mov
or
repnz
stos
ljmp
test
pop
mov
dec
fnstsw
xchg
sahf
test
loope
and
cld
fbstp
xchg
lret
jb
fs
sub
cmp
mov
loopne
hlt
mov
push
and
jbe
les
lds
sbb
sub
js
hlt
aad
mov
call
and
int
pop
push
pop
inc
adc
lahf
int3
dec
inc
xchg
movsb
sub
pcmpgtd
xor
ljmp
subb
fwait
sbb
dec
les
aaa
lahf
out
cmpb
mov
aam
andb
sbb
insl
mov
shl
inc
popa
mov
mov
cmp
out
insb
pop
xchg
or
mov
je
sub
loope
dec
inc
mov
cmp
push
mov
mov
mov
cld
add
inc
fisttpll
pop
cmc
and
push
xor
test
push
enter
cmp
mov
rclb
sahf
sub
dec
stos
inc
adcb
sub
das
lret
add
iret
inc
ljmp
test
arpl
leave
fdivl
pop
jo
dec
mov
pop
mov
ret
sub
jp
dec
leave
ja
xlat
xchg
mov
pop
adc
jno
bswap
in
and
push
or
out
mov
xor
lret
daa
jbe
lods
xchg
jg
xor
xorl
nop
gs
ret
adc
pushw
inc
and
das
push
lods
xor
cwtl
ss
cmp
testl
push
sbb
mov
aad
testb
pop
shrl
inc
std
cmp
and
jae
pop
jb
lahf
and
arpl
testl
jl
push
and
adc
aad
rclb
push
xlat
imul
xor
repnz
data16
es
mov
pop
cmp
pusha
pop
inc
fucomi
lcall
gs
and
sub
push
in
testb
mov
pop
inc
mov
or
nop
adc
mov
outsl
scas
xchg
push
or
popa
inc
inc
out
das
pop
lods
cvtps2pd
cmp
fwait
adcb
mov
push
das
inc
popl
adc
pushf
decl
or
out
lods
inc
adc
mov
test
and
fwait
push
andb
xor
push
sbb
mov
test
adc
enter
rorb
mov
dec
je
movsl
xor
dec
in
cld
in
inc
fidivrl
out
cmp
pop
popa
jnp
sub
pop
cmpsl
popa
clc
fdivrs
mov
add
fistpl
cmp
leave
sub
lahf
popa
push
je
repnz
andl
adc
sarl
sub
lahf
push
cli
mov
inc
loopne
jbe
hlt
xchg
push
push
enter
dec
fisttpll
aad
inc
decb
cmp
push
out
dec
add
cmp
mov
push
push
mov
adc
push
jno
and
mov
inc
mov
test
sbb
xor
pop
add
fisubrl
insl
jge
mov
cmp
shrb
adc
cwtl
sub
mov
xor
pusha
sub
idivl
jge
adc
jnp
and
js
and
lea
nop
daa
jmp
jmp
sbb
je
shl
mov
inc
in
test
lods
insb
jle
mov
mov
jmp
sbb
jbe
jp
sbb
stc
dec
xchg
incb
popf
mov
mov
stos
dec
adc
sbb
stc
out
pop
loop
push
in
mov
daa
or
ficompl
mov
rclb
pushf
xor
dec
es
inc
in
dec
mov
or
ss
pop
arpl
lahf
cs
add
fildl
fcmovbe
aaa
add
fidivs
xchg
push
sti
cmp
sub
sbb
icebp
lret
sub
push
in
loopne
pusha
addb
pop
out
fcompl
push
cmp
jae
adc
jne
scas
and
push
add
adc
inc
rcrl
jmp
xchg
xchg
xchg
sub
ret
incb
jb
xchg
xor
fwait
in
mul
stos
mov
fisttpl
adc
xor
aam
and
ds
fildll
mov
stc
jo
cltd
cmpsb
cmp
pusha
scas
cmp
mov
repnz
je
adc
xor
rorl
xor
jnp
shr
in
push
dec
mov
xor
nop
pop
push
icebp
mov
jmp
lahf
jmp
push
jg
fildll
dec
cmp
mov
shlb
subb
in
or
fdivs
jmp
clc
push
xchg
sub
cmpsl
dec
push
sub
jl
rolb
jp
add
unpckhps
icebp
fisttpl
inc
movl
lret
mov
ficoms
pop
int3
pushl
out
jecxz
lahf
dec
push
push
shrb
add
insb
jmp
xchg
inc
imul
mov
hlt
cmc
pusha
scas
ret
lods
les
or
mov
xchg
pop
popa
loopne
repz
add
mov
mov
insb
test
xor
test
xchg
inc
in
aas
jecxz
jge
lea
clc
jg
out
xchg
and
int
cmc
dec
ret
push
sub
ds
xchg
xor
mov
sub
xchg
stos
aas
fwait
sub
int3
xor
jecxz
push
pop
imul
mov
push
iret
mov
lea
das
inc
push
inc
sti
sbb
mov
repnz
dec
test
adc
and
pop
sub
mov
rorb
aam
stc
loope
sub
lcall
outsl
pop
add
mov
push
addr16
iret
nop
imul
jg
andl
dec
push
xchg
xchg
lock
mov
sahf
pop
fucomip
sbb
xor
push
sub
jle
pop
in
inc
mov
pop
lock
fbld
xchg
mov
inc
inc
scas
out
push
out
cmp
pop
jae
mov
inc
mull
lods
jb
lcall
and
sub
mov
sarl
leave
xlat
popa
cwtl
jne
bound
cmpsl
xchg
mov
xchg
xor
and
dec
dec
pop
jl
lods
imul
insl
push
loope
jmp
jp
add
int3
outsl
jmp
inc
push
mov
insb
push
mov
pop
aad
int
jg
icebp
pusha
es
sbb
ds
pop
mov
into
mov
stos
adc
xchg
add
mov
test
sbb
dec
in
cmpsl
arpl
ss
hlt
fcoms
mov
add
mov
mov
xor
mov
mov
xor
cmp
xchg
lcall
hlt
sbb
das
jg
mov
push
lods
inc
aam
addr16
fdiv
and
fnstenv
pushf
xchg
and
mov
cmp
pop
in
xor
psllw
mov
dec
jmp
pop
in
add
sbb
sub
sbb
xchg
mov
and
decl
aas
sahf
and
shl
cmc
sbb
movntq
sbb
pop
dec
rcrb
pop
jle
and
movsl
out
and
scas
aad
fwait
adc
dec
outsb
dec
in
push
ljmp
pop
inc
jbe
lea
lret
dec
pop
mov
add
jp
mov
repnz
pop
insl
and
stos
cmp
leave
stos
or
lcall
out
test
push
xorb
loope
popf
push
dec
dec
sbb
mov
and
sbb
stc
dec
into
stos
push
cmc
test
push
loopne
mov
cld
es
imul
cmp
rcrl
stos
inc
outsl
testl
jle
xchg
dec
icebp
and
pusha
adc
pop
jmp
xor
andb
adc
inc
ret
repnz
fwait
push
cmp
insb
ljmp
jl
cmp
mov
sahf
jge
inc
js
jnp
push
jge
nop
call
inc
loop
xchg
adc
cmpb
jle
pshufw
loop
pushf
xor
mov
mov
inc
aad
fnstcw
test
movsb
lahf
inc
popa
rol
imul
ljmp
push
inc
imul
out
pop
mov
loopne
and
mov
pop
shl
int3
mov
in
imul
inc
in
aas
ds
int
pushf
aas
push
add
loop
call
imul
movsb
cld
or
add
jmp
mov
pop
inc
pop
scas
outsl
cli
movsb
xchg
pop
cmp
mov
stc
push
inc
cmp
lock
sbb
mov
xlat
adc
stos
mov
inc
pop
mov
add
adc
xchg
pop
jle
and
imul
pop
cmpxchg
outsl
xor
outsb
outsl
mov
pop
mov
fstpt
les
movsl
and
pop
inc
dec
fstpt
cmc
jno
das
dec
fiaddl
je
loopne
or
push
mov
imul
mov
in
andl
nop
xchg
fs
and
push
add
imul
movsl
movsb
inc
sbb
sub
push
sub
gs
cltd
das
push
xchg
popa
or
gs
popa
pop
cmp
jno
jne
sarb
fiadds
xchg
push
or
dec
add
lea
xchg
add
mov
adc
scas
mov
xor
aas
rcr
inc
mov
xor
mov
aad
and
fs
cli
cmc
inc
mov
fdivs
gs
test
movntq
cmp
sar
jae
repnz
sbbb
adc
sub
xlat
jb
push
mov
inc
fldcw
nop
mov
mov
jecxz
push
test
or
adc
sti
sbb
aaa
mov
or
pop
outsl
mov
inc
sti
dec
and
push
xor
xchg
cli
inc
cmpsl
dec
sub
xor
xlat
shll
lea
inc
add
imul
jae
cmp
pusha
cltd
sbbl
pop
call
test
int
jno
mov
es
cmp
dec
mov
lods
sub
fcom
out
or
test
sub
lods
lea
jo
sub
xchg
stos
mov
lcall
imul
pop
cmpsb
and
loope
dec
cmpsb
mov
mov
jne
lea
test
xor
sbb
inc
fisubl
bound
jg
mov
les
push
dec
pop
imul
movsb
sub
aad
rcrb
mov
das
adc
or
sub
popfw
inc
iretw
xchg
aas
add
jg
aad
push
daa
dec
jnp
dec
xchg
xchg
inc
add
fs
sahf
and
lds
imul
in
add
cwtl
int3
lods
sbb
add
jle
aaa
xchg
and
cmpsb
or
in
or
sub
mov
xor
inc
cmp
pop
int3
mov
int
shlb
pop
sbb
fistl
shrb
mov
out
popa
lods
stos
rcrb
out
fisttpll
addb
cltd
sti
and
pop
and
fisttpl
in
cmp
adc
jle
mov
mov
ret
rcr
add
lods
xor
fsubrl
orl
pop
icebp
inc
ss
mov
stos
lds
or
rcr
das
fldt
or
insl
jl
fwait
mov
addr16
mov
fucomip
stc
push
push
fcmovb
xchg
add
xchg
pop
cmp
loop
push
das
push
xor
mov
xchg
xor
rorb
sub
add
jecxz
scas
mov
fcomps
mov
jne
filds
dec
jp
movsl
cmp
inc
popa
and
pop
push
and
addb
andl
xchg
jo
push
jl
cmp
loopne
add
imulb
push
dec
mov
loope
xchg
push
cwtl
push
jno
mov
inc
mov
cmpsl
test
mov
fadds
cmp
fcmovnb
hlt
adc
lods
psadbw
lret
lret
cmp
dec
es
mov
mov
stos
std
ret
adc
popf
imul
fs
and
movsl
mov
mov
mov
mov
cmp
and
lock
fimull
and
lock
fnstcw
xchg
scas
imul
data16
clc
and
xor
ss
adc
test
in
shlb
mov
or
ds
mov
mov
js
xchg
or
nop
inc
push
mov
sbb
push
das
and
shl
rolb
leave
mov
cs
loop
ret
dec
sti
mov
mov
out
mov
pop
fwait
test
cmpsl
aaa
das
xor
sub
jge
in
pop
lock
inc
pushf
imul
push
mov
pushf
movsb
mov
push
mov
jp
out
push
test
fildll
pop
mov
js
mov
cmp
out
call
push
jmp
or
mov
mov
xchg
rcrl
push
out
mov
hlt
jecxz
bound
in
mov
shr
int
int
int
icebp
adc
dec
lret
cmp
ds
jnp
jge
out
pop
lock
xlat
mov
loope
cmpb
outsl
or
stc
adc
xor
pop
jge
cwtl
fwait
xor
dec
add
testb
jnp
jle
mov
into
xlat
cmp
push
jmp
inc
mov
dec
add
add
and
sbbb
and
mov
sbb
out
add
les
das
pop
or
out
mov
xor
stc
nop
or
dec
gs
mov
add
call
std
aad
loopne
xchg
popa
test
mov
dec
into
scas
ss
lcall
sub
and
xor
cltd
std
dec
fldcw
jae
xorb
in
dec
cmp
pop
neg
repnz
ret
push
sub
mov
dec
xchg
mov
in
pop
pfpnacc
cmp
dec
mov
out
adc
outsl
or
or
orb
cltd
adc
jle
pop
in
aad
out
xchg
adc
cmp
mov
loope
insl
push
mov
jno
scas
subl
mov
adc
mov
dec
mov
push
xchg
sub
mov
xor
ffreep
and
andl
jo
xor
dec
andl
pop
sbb
push
ds
ret
dec
into
mov
and
ret
daa
into
fcompl
leave
mov
out
pop
repz
cmp
dec
sub
push
ret
ret
mov
pop
cmp
imul
inc
popf
jbe
push
mov
sbb
dec
mov
fidivs
adc
leave
lods
fwait
cmpsb
cmp
inc
pop
les
pop
imul
test
dec
stos
cmpsb
in
jae
cs
mov
pop
dec
lods
clc
or
das
nop
fwait
xor
pusha
inc
sbb
in
nop
push
xor
mov
mov
rorl
add
xchg
or
call
mov
int
test
sbb
aad
negl
jb
std
popf
aam
adc
rdpmc
pop
arpl
add
pusha
dec
out
push
fsts
inc
jns
inc
cld
dec
adc
fmuls
les
in
lcall
xor
dec
in
lret
shrl
js
mov
xchg
lret
mov
fisubl
shl
negb
dec
ja
loope
lods
mov
repz
inc
xor
daa
and
clc
mov
js
into
jae
add
or
rclb
jbe
test
cmp
adc
popf
je
xchg
mov
inc
popf
mov
sahf
movsl
adc
cs
dec
jo
push
movsl
sbb
inc
sub
mov
and
lret
push
xor
shlb
fchs
cmp
xchg
sahf
push
aam
pusha
push
idivb
nop
fwait
xchg
fwait
sub
outsl
xor
scas
jl
cli
and
add
outsl
sbb
push
adc
cmpsb
mov
sub
fsubrs
xchg
xchg
cmp
sub
rcrl
mov
ret
outsl
pushf
popa
dec
test
xor
push
out
add
pushl
mov
insb
mov
sbb
jb
sub
cvttps2dq
dec
fistl
arpl
fstp
mov
push
jnp
lods
adc
mov
inc
imulb
scas
gs
push
dec
mov
lods
mov
xlat
in
mov
ret
inc
enter
out
dec
xchg
or
test
mov
sbb
sbb
int
push
ret
lods
mov
xor
and
inc
lret
in
jb
cmp
mov
adc
fbstp
add
xchg
adc
jnp
push
pusha
dec
je
xlat
pop
popa
enter
out
push
cwtl
cmpsl
idiv
mov
push
pop
pop
add
out
outsb
loope
inc
adc
lret
loop
sbb
popa
sti
mov
jg
pop
movsl
push
cmp
in
xor
inc
sbb
xchg
mov
shr
lcall
mov
loop
iret
adc
test
cli
push
mov
jb
imul
mov
dec
jp
and
jmp
scas
xor
jmp
mov
sbb
mov
push
call
or
jbe
and
adc
nop
jecxz
sbbl
pop
ficomps
push
sub
dec
daa
into
incb
dec
adc
popa
ret
push
imul
or
xchg
cli
push
cmp
notl
push
das
add
bound
imul
aad
movsb
in
lea
and
pop
jns
pop
and
mov
mov
mov
xchg
pusha
out
stos
jbe
push
jg
js
mov
fildll
sbb
mov
fbld
mov
test
inc
fsubs
data16
out
mov
js
jge
cmp
pop
aaa
fistpl
and
mov
push
subb
mov
stos
mov
adc
ds
shlb
mov
lret
pop
scas
jmp
jns
cltd
shl
xchg
cmpl
add
xor
fsubs
gs
push
out
test
mov
pop
adc
push
cltd
pcmpeqw
dec
iret
adcb
lock
stos
imul
cmp
js
sbb
adc
pop
fdivs
jecxz
or
xchg
jmp
mov
xor
hlt
loop
es
imul
lea
bnd
inc
push
insb
jl
add
xchg
mov
jmp
pop
mov
lods
js
xchg
cmpsb
cmp
scas
push
pop
imul
mov
in
decl
mov
aad
sbb
addb
pop
outsl
xor
negb
adc
es
adcl
push
arpl
into
dec
push
inc
dec
mov
cs
dec
clc
add
xor
out
ret
fisubrl
cmp
shlb
insb
jb
imul
dec
push
rcr
jae
and
mov
rcrl
adc
adc
das
xor
ds
outsl
mov
movsl
mov
inc
xor
jp
jmp
fisubl
inc
pop
mov
idivb
ret
repnz
int3
sbb
add
mov
insl
mov
adc
inc
mov
pop
mov
aas
aad
mov
mov
testl
loop
adc
cmp
push
sub
lcall
cli
jno
dec
sub
stc
mov
pushf
xor
cmove
les
int3
inc
stc
inc
std
in
les
inc
xor
outsl
rcrl
push
loopne
sbb
decb
rolb
imul
lock
jp
cmpsl
or
push
cmp
jg
dec
adcb
pop
mov
mov
add
push
mov
add
lods
sbb
ret
ret
pop
cmc
lods
clc
mov
cwtl
loope
dec
cs
add
imul
adc
out
arpl
arpl
cltd
xor
jne
popf
xchg
adc
sbbb
sbb
nop
push
and
subl
inc
cmp
push
repz
les
jb
cltd
mov
test
inc
fcoml
daa
cmpps
sub
cmp
or
mov
push
adc
lea
xor
push
push
sbb
mov
lock
fdivl
dec
pusha
and
jge
adc
pop
pop
hlt
push
xacquire
hlt
jnp
xor
jl
mov
cltd
je
sbb
xlat
xchg
sub
jns
dec
jmp
push
in
jge
into
loop
out
aam
ljmp
cmpsl
mov
cs
aam
cmp
jno
sbb
call
xchg
dec
mov
scas
pop
jbe
mov
movsl
imulb
mov
lods
mov
movsl
sti
daa
out
jl
les
sub
or
mov
lds
cmp
push
lcall
call
leave
sub
addr16
rcl
or
ja
lea
inc
dec
push
mov
hlt
lahf
stos
jmp
sarl
negl
mov
cltd
bound
jecxz
mov
fucom
mov
xchg
pop
lods
lods
and
fnstsw
icebp
pop
ja
dec
lods
mov
xchg
cmpsl
aas
mov
loopne
test
cmc
jnp
out
into
emms
pop
nop
add
or
shrb
xor
daa
cld
jp
mov
inc
fdivl
stos
out
fdivl
jge
pusha
pop
jp
or
or
bound
or
mov
dec
mov
cmp
rcrb
xlat
mov
sub
cmc
dec
dec
popa
mov
xchg
push
push
lahf
jne
lock
push
mov
cld
sti
dec
mov
adc
push
ljmp
popf
repnz
fsubrp
cmc
loop
mov
mov
cmp
dec
jmp
test
jge
xor
add
dec
mov
ret
ror
adc
sub
jnp
push
fxtract
and
pop
mov
out
pop
mov
fld
inc
rcrb
push
mov
hlt
cmp
fs
pop
addr16
fs
push
adc
inc
cmpsb
xor
pop
and
hlt
sti
sub
sub
dec
and
ret
add
jns
rolb
mov
nop
jbe
cmovs
mov
data16
loope
dec
pop
je
mov
into
sub
pop
xor
test
sbb
or
adc
pusha
orb
push
sub
and
shll
in
outsb
hlt
lret
mov
shrb
sbb
adc
mov
pop
ja
xchg
loope
je
scas
add
ds
push
sub
leave
xchg
std
rorl
mov
imul
mov
imul
sub
sbb
flds
scas
mov
ja
cwtl
xchg
dec
pushf
mov
imul
mov
xchg
xor
push
push
cli
movsl
das
dec
pop
jmp
fcompl
shrb
and
add
es
popf
cwtl
ja
jge
xchg
push
mov
movsl
ret
aad
push
cmp
mov
mov
sbb
arpl
fcmovb
imul
in
xchg
lods
rclb
shrl
cmpsb
dec
pop
je
push
cmp
pusha
cmpsb
mov
js
dec
pushf
pushf
pop
outsb
ret
or
iret
insb
inc
fcmovb
pop
jmp
sbb
sbbl
mov
sub
mov
push
pop
sub
enter
ss
movsb
adc
mov
popf
xchg
je
es
sar
sti
mov
push
les
int
aad
aad
jne
adc
popf
stos
mov
sub
xchg
jg
lea
xchg
fdivs
jne
fs
mov
movsb
cmp
mov
push
mov
mull
adc
movb
cmp
and
pop
addr16
jge
pop
add
mov
push
ret
test
sti
scas
test
lods
sbbb
lcall
mov
mov
ds
rcll
lahf
fdivrl
rorl
stos
gs
movsb
stc
aad
shl
inc
mov
js
dec
fimull
mov
cld
xchg
call
sar
outsl
mov
std
pop
push
out
push
mov
jne
pop
push
mov
fdivrl
cmc
adc
shrl
fucomi
push
push
xor
roll
dec
xchg
pusha
pushf
fidivs
push
outsb
add
adc
mov
and
sti
ss
das
adc
mov
sub
cmp
test
xchg
daa
dec
movsl
pop
icebp
push
push
enter
jg
test
clc
sahf
jb
sub
inc
pop
inc
inc
repz
jno
das
push
lock
ljmp
popa
dec
cmp
notb
pop
or
adcb
in
add
inc
jecxz
insb
or
xchg
fsubr
inc
mov
push
and
je
sub
iret
ret
xor
es
xchg
sbb
ss
shll
jl
pop
push
inc
lea
inc
fcmovnb
mov
xlat
outsb
fisttps
pop
shlb
xchg
cld
and
mov
dec
iret
fcomi
mov
lcall
pusha
jbe
sbb
subl
jp
xchg
dec
dec
adc
add
add
test
xchg
fs
inc
xchg
dec
push
dec
into
mov
dec
add
sub
push
das
jge
lds
xchg
cmp
fisttpll
add
fwait
mov
sbbl
cmp
push
repz
gs
je
test
adc
ss
mov
push
mov
xor
cli
push
mov
call
cld
insb
aas
push
mov
test
jns
cmp
sub
dec
fcomps
xchg
lahf
cmpsl
and
mov
cltd
xor
and
jne
add
hlt
lods
or
xchg
lods
jle
cli
xchg
inc
cmp
xchg
and
push
push
clc
scas
mov
fucomi
hlt
sbb
jo
out
out
aad
popa
aaa
in
sub
cmp
xor
arpl
loope
mov
repz
adc
push
ja
fildl
xor
icebp
int3
sub
dec
pop
in
xlat
cld
cli
data16
ret
cld
outsb
pop
cmp
addr16
dec
repz
mov
sarb
lahf
jo
sarl
pop
lahf
insl
bound
adc
xchg
dec
xchg
push
push
imul
leave
sti
mov
mov
inc
loop
cmp
outsb
es
push
mov
jne
popa
mov
mov
cmpsb
add
test
xlat
outsb
push
mov
mov
fmul
lret
jnp
outsb
sub
clc
xchg
sub
les
shll
loope
add
rolb
pop
push
jl
xlat
cs
incl
ficomps
arpl
xchg
xor
sub
mov
or
fnstenv
cmpl
pop
outsb
sub
xorl
mov
pushf
ss
xor
mov
cltd
jo
xor
mov
xor
dec
inc
stos
adc
jae
push
or
lods
cmpsl
mov
push
xor
jbe
adc
cmp
mov
es
pop
pop
lods
cmp
mov
cmp
orl
xor
sub
pop
pop
cmc
dec
dec
inc
cmp
nop
sti
mov
insb
shl
add
mov
xlat
clc
mov
adc
mov
mov
or
loopne
xor
sub
mov
call
dec
fs
push
out
mov
cmp
std
mov
pop
enter
sub
jbe
test
xchg
dec
pop
clc
mov
lcall
cmc
lea
adc
dec
nop
sti
mov
jl
inc
fs
loopne
bound
ret
add
or
sbb
dec
mov
imul
dec
es
mov
dec
push
mov
lods
outsb
mov
adc
test
push
push
in
lret
popf
xor
notb
xor
out
sub
loope
test
push
aam
enter
leave
cmpsb
xor
fnstcw
push
mov
sbb
and
mov
push
int3
stos
pop
jecxz
bound
pusha
inc
in
jbe
cwtl
cs
or
test
cmp
jmp
add
mov
sbb
sahf
sbb
jmp
jne
push
jmp
ljmp
mov
decb
xchg
movb
imul
hlt
subl
jle
test
dec
movsb
jecxz
movsl
xor
divb
lods
ds
in
inc
gs
outsl
push
and
aas
frstor
call
mov
mov
fcomps
mov
mov
iret
and
lock
pop
repz
adc
push
mov
shl
movsb
or
jmp
cmp
lret
hlt
cmp
icebp
mov
xor
jl
sarb
mov
fnsave
pop
sahf
add
cmpsl
and
cmovno
sbb
lret
shrl
cmc
loope
push
mov
imul
jecxz
inc
into
inc
mov
mul
into
in
sbb
popf
push
mov
mov
add
xorl
loopne
adc
or
fstl
lea
cli
add
inc
cwtl
or
cmp
inc
daa
outsb
mov
push
push
adc
mov
and
pop
inc
rcrl
lds
fucomip
std
sub
into
push
xor
gs
inc
aam
or
xchg
ret
repz
jle
mov
push
test
imul
out
cli
fistps
push
fidivl
or
mov
jne
push
mov
mov
pop
loop
shl
setg
jle
push
ljmp
jno
icebp
push
push
push
inc
lods
push
loope
stc
into
leave
ds
mov
dec
pop
push
pop
clc
mov
mov
push
add
loop
jmp
call
inc
cmp
pusha
mov
cltd
std
xchg
xchg
popa
stc
mov
aad
mov
xor
or
or
and
in
div
cmp
pop
lds
mov
add
sbb
jns
mov
loope
mov
inc
xor
fnsave
push
int
mov
bound
sbb
mov
clc
jne
sbb
and
bound
and
cmp
fcompl
sahf
imul
nop
pop
jmp
jne
xor
mov
stc
loop
or
xor
pop
into
loop
into
out
rorb
test
lea
cmp
sub
mov
out
dec
outsb
push
mov
shrb
rolb
lods
icebp
in
dec
ret
inc
jo
cmp
pop
cmp
or
dec
inc
pushf
cmc
ja
dec
decl
movsl
push
pusha
mov
ds
adc
xor
data16
inc
in
cld
jne
mov
lcall
in
leave
daa
mov
test
inc
fcoms
repz
les
ficomps
movsb
sbb
gs
mov
cs
mov
shrb
stos
int3
xchg
adc
hlt
je
xchg
mov
fiaddl
xor
stos
jle
lret
sub
and
jmp
cld
adc
add
std
cs
or
fstpt
pop
mov
in
out
adc
adc
dec
fs
xchg
sub
mov
clc
push
pop
xor
dec
mov
nop
daa
jmp
xchg
jmp
popa
into
mov
fwait
xor
push
jmp
push
insl
add
jns
imul
inc
ljmp
jge
aaa
into
adc
mov
retw
sahf
pop
xchg
inc
mov
loopne
xor
js
mov
dec
in
int
add
add
jecxz
fnstenv
inc
push
mov
out
in
xchg
mov
test
into
pusha
lds
inc
lret
sbb
imul
std
addr16
addr16
xchg
das
inc
js
mov
mov
fistpll
cmp
int3
scas
xchg
leave
mov
lcall
jl
mov
push
xor
dec
ss
movsb
out
mov
adc
ds
sub
dec
mov
dec
mov
cmp
pop
pop
sbb
dec
pop
outsb
fstpl
and
lcall
cmp
sub
in
cwtl
pop
iret
jbe
xor
sbb
pop
hlt
inc
xchg
mov
shll
pop
adc
jbe
jb
testb
hlt
xor
add
arpl
ret
cli
shl
loop
sbb
jecxz
mov
out
push
out
push
js
adc
shll
rolb
pop
sahf
in
test
fcoml
jp
repnz
pop
sub
dec
vpsrld
add
add
dec
xchg
xor
push
push
inc
in
scas
push
push
and
rcl
push
and
loopne
sub
inc
and
lods
das
jp
pop
jae
ret
popa
movsb
push
mov
inc
cmp
xchg
cmp
in
js
push
test
ja
push
mov
cmp
xor
xchg
int3
pop
out
into
gs
or
in
test
cld
fisubs
inc
add
imul
jecxz
mov
or
js
outsb
ds
fmull
inc
jnp
in
ficomps
cs
push
lods
ss
xor
in
pop
sahf
jb
iret
jg
cmc
adc
nop
xor
and
push
add
mov
jae
mov
roll
push
in
mov
mov
or
dec
mov
sub
stos
jg
sbb
adc
pop
mov
or
push
scas
ds
sbb
xchg
in
mov
pop
sahf
aaa
jbe
sbb
fsubl
xchg
push
cmp
xchg
stos
lahf
mov
aad
fnstsw
iret
mov
mov
mov
jl
pop
mov
test
inc
adc
je
push
push
jb
nop
in
adc
mov
or
xor
stc
push
addl
jno
les
shlb
std
jle
jge
fs
push
push
push
xchg
sub
mov
fwait
jbe
xchg
sbb
mov
mov
imul
scas
call
cwtl
mov
fldl
mov
scas
push
ljmp
dec
test
mov
mov
and
add
daa
xadd
and
test
dec
insl
dec
or
mov
je
mov
insb
pop
mull
pop
sbb
ret
sbb
inc
mov
push
fsubr
fmulp
pop
and
cld
mov
or
in
lods
jmp
mov
jo
test
pop
repnz
aaa
fwait
add
cmpsb
int3
rclb
pop
out
insl
cmc
pop
cmp
ror
push
pusha
pop
push
mov
cmpsl
insb
bndstx
cmp
adc
mov
pop
lock
cmp
push
push
ja
cli
fs
xlat
inc
or
ja
mov
cmpsb
mov
fisubrl
sbb
mov
stos
mov
mov
jne
gs
insl
sub
clc
push
outsb
lods
push
mov
lods
imul
lahf
ss
sbb
adc
inc
inc
data16
mov
fcompl
push
add
xorl
adc
jecxz
cld
repz
test
clc
adcl
das
push
popf
jle
cmc
sarl
pop
imul
push
inc
add
iret
movsl
xor
int
inc
pop
aam
scas
add
mov
repnz
dec
xchg
pop
into
fsub
cmp
xchg
or
jo
pop
jnp
dec
iret
mov
adc
and
sbb
movsb
cmp
in
mov
sub
ret
pop
mov
push
mov
lret
xchg
mov
lret
hlt
or
mov
aad
mov
dec
dec
xchg
mov
xchg
mov
popa
or
leave
enter
ljmp
mov
and
mov
sub
sub
cld
or
lret
sbb
jecxz
sbb
aad
das
repnz
push
push
lds
loope
int3
jecxz
xchg
mov
mov
scas
cmp
sub
stos
mov
mov
shl
and
xor
sarb
mov
es
jecxz
fs
push
call
int
outsl
push
int
xlat
repz
in
clc
mov
test
xor
adc
clc
or
fsubrs
fisubs
xor
lret
ret
push
push
popa
outsb
in
pop
and
cld
cmpsl
jne
shrl
fcomps
xor
push
xchg
mov
icebp
xor
cld
stc
dec
lcall
in
test
mov
push
dec
popa
lret
hlt
mul
sub
mov
sti
mov
sbb
fwait
pop
daa
cs
xor
mov
pop
ljmp
sub
lret
push
xchg
and
dec
and
fiaddl
cs
insl
adc
repnz
fmul
xor
repz
mov
lods
pop
lock
sub
out
shll
xor
fs
xor
fidivl
fistps
test
xchg
in
push
mov
aad
jp
jae
xor
enter
inc
mov
push
cmp
imul
stos
fisubl
shrb
jnp
mov
ljmp
aam
bound
scas
sysexit
dec
loop
push
fwait
das
mov
imul
dec
sbb
in
into
lahf
push
add
pop
ds
cli
shrb
push
ljmp
push
push
les
mov
adc
filds
fnstenv
in
sub
outsb
mov
into
mov
dec
faddl
pop
repnz
pop
repnz
xor
jb
lret
jb
stc
and
sbb
aas
loope
mov
into
add
xchg
sub
in
in
mov
sub
adc
mov
insl
cmp
sahf
jbe
push
inc
inc
jecxz
je
loope
pop
test
and
mov
add
cmp
mov
xchg
cs
xchg
testb
loope
sbb
or
sub
mov
mov
mov
pxor
xchg
fwait
xchg
mov
movd
hlt
dec
adc
movsb
movsl
mov
sub
testl
mov
xor
mov
pop
adc
add
jl
in
repz
arpl
xchg
iret
push
addb
jbe
call
xor
mov
loope
sti
add
add
pushf
mov
loopne
add
and
dec
stos
mov
xor
loop
repz
pop
sub
jle
cmpsb
ficoml
leave
and
push
add
xchg
ja
lahf
das
in
sbb
add
sub
cli
inc
dec
fbstp
xor
jo
bound
bound
mov
in
sub
pop
xor
bound
or
int
push
mov
insl
mov
fistl
mov
sub
jno
cmpsl
pop
xor
and
sbb
je
sahf
insb
add
out
jp
inc
rorl
sbb
push
lret
xor
mov
fadds
mov
cmp
jnp
xor
rcr
jns
cmp
pop
xchg
in
jle
or
sbb
daa
mov
shll
pop
mov
sub
dec
stc
pop
sub
inc
pop
jnp
add
and
faddl
push
jbe
mov
gs
xchg
popa
sub
addb
pop
push
pop
and
cld
mov
sbb
arpl
orl
push
insb
mov
jecxz
imull
daa
pop
xchg
add
dec
dec
fldl2e
lahf
push
cli
inc
div
adc
xchg
jg
aad
test
lret
call
inc
adc
dec
inc
sbb
ficompl
rorb
sbb
sbb
dec
xchg
addr16
in
adcl
or
stos
mov
cmp
outsl
adc
push
mov
data16
insl
out
jge
iret
or
mov
cli
dec
pop
and
int
adc
and
out
popa
fmuls
nop
dec
sub
push
pop
insl
or
xchg
cmp
or
lock
mov
ljmp
add
mov
jne
mov
push
rcll
xchg
je
repnz
leave
adc
data16
leave
insl
add
ss
aaa
in
xchg
ljmp
mov
or
leave
or
cs
fsub
pop
jle
je
cmpsb
shr
push
jnp
inc
mov
outsl
mov
pop
ror
push
cmp
rcrl
xchg
fmuls
mov
stos
bound
or
add
mov
lea
aas
inc
xchg
movq
xchg
mov
stc
xor
movsb
dec
loopne
dec
dec
jne
or
clc
or
cs
or
out
dec
jecxz
repz
jo
xor
pushw
cwtl
mov
push
bound
lret
fidivrl
cmp
in
dec
stc
ficoms
fwait
pop
cmp
dec
mov
ljmp
jno
xchg
imul
popf
mov
roll
push
stc
or
xchg
xlat
jno
mov
mov
test
inc
inc
inc
adc
call
shrl
jae
cmpsl
icebp
pop
imul
inc
test
jb
inc
data16
xchg
aad
push
sub
pop
test
mov
inc
out
push
popf
mov
mov
popa
jg
test
arpl
or
mov
insb
cmp
mov
daa
xchg
add
sub
popf
sti
enter
leave
xlat
jl
jecxz
push
hlt
aas
mov
in
fwait
add
push
das
je
aad
xor
daa
xorl
insb
cmc
ret
fsubs
adc
outsl
push
repnz
sub
lds
pop
imul
xchg
mov
mov
repz
lods
popa
sbb
insl
adc
lds
pop
hlt
cltd
xchg
es
jmp
and
enter
pop
cli
xchg
andl
pop
aaa
or
add
pop
sub
out
xchg
pop
mov
std
lds
negb
jl
and
call
add
sub
fwait
mov
pop
nop
daa
xchg
les
add
lods
test
xchg
inc
and
sbb
shlb
or
mul
cli
sub
test
jp
aaa
lods
adc
rcrl
sbb
ret
pop
cmc
jo
jg
ja
and
add
or
sbb
sub
outsl
fucom
pushf
and
mov
cmp
lds
inc
leave
ret
lret
fldenv
shlb
mov
or
inc
out
push
mov
pop
cmp
mov
jle
mov
mov
rorl
fisubs
mov
xchg
xchg
mov
xor
lock
lcall
repz
das
or
sbb
push
sub
or
cwtl
fs
xchg
mov
mov
je
lret
push
push
fcmovnbe
xchg
leave
popf
bound
push
pop
or
jle
and
and
fs
ss
negb
adc
inc
fldt
into
jae
sti
enter
sbb
cs
sbb
in
inc
sahf
ljmp
addr16
daa
push
ljmp
std
in
lods
cmpsb
ret
std
or
sbb
jbe
jge
sbb
das
xchg
adc
xchg
ret
les
mov
pushf
cmp
fwait
mov
fistl
mov
loopne
cltd
mov
mov
insb
jbe
addr16
fsts
jno
pop
sti
int3
mov
out
int
sbb
inc
out
sbbb
push
push
mov
dec
aad
gs
mov
sbbl
pop
xchg
adc
fwait
xchg
push
daa
in
add
or
jge
xchg
scas
in
dec
cmp
dec
test
mov
xorl
mov
cmp
jl
pop
adcl
jp
mov
ja
enter
add
xchg
jle
pop
je
adc
xchg
sub
sub
and
mov
pop
ja
inc
sarl
sbb
movl
and
rolb
lock
arpl
jmp
in
out
test
xlat
stos
xchg
pop
fnsave
mov
mov
sti
pop
aaa
add
outsb
cltd
insl
repz
cmp
cmpsb
mov
add
es
stos
lahf
daa
enter
orl
movsb
sbb
mov
loope
cmpsb
pop
fadds
in
inc
cmpsl
jecxz
lahf
lea
addl
push
lahf
or
xlat
std
jns
into
repnz
cmp
push
or
icebp
push
daa
lods
inc
daa
mov
push
sbb
mov
jecxz
sub
lret
bound
enter
int3
jmp
sub
enter
push
les
jae
data16
movsb
ret
jo
mov
ror
xchg
mov
xchg
inc
xor
cmp
add
ss
pop
andl
mov
add
sti
enter
pushf
test
daa
pushf
mov
jno
sub
inc
and
shll
loop
jle
xor
stos
and
daa
cmp
aad
popf
cmc
lcall
xor
inc
xchg
outsb
lock
pop
mov
aaa
mov
mov
xor
pop
adc
gs
sbb
hlt
or
lahf
sbbl
lock
sbb
jmp
aam
in
and
loop
sub
test
addr16
xchg
sub
data16
imul
fisubrl
in
inc
popa
insl
lea
subb
cmp
leave
inc
fwait
push
frstor
cs
notl
ljmp
sti
or
jmp
dec
out
jae
mov
outsb
jge
pop
mov
stos
xor
push
test
sbb
aad
or
lds
sti
jb
dec
mov
inc
and
and
sti
push
xorl
hlt
rolb
or
ja
fsubl
int
cld
rcll
mov
mov
pop
lods
xor
jg
fwait
sub
int3
cmp
add
repnz
mov
xchg
inc
fstl
lret
mov
xor
hlt
iret
je
inc
test
mov
lods
xchg
shll
xor
push
je,pn
sub
popf
daa
inc
push
icebp
ds
adc
cmp
jle
shrl
mov
sub
xchg
out
cwtl
jecxz
dec
fs
movsb
cmp
mov
inc
lret
cwtl
fldenv
and
dec
dec
shlb
nop
lcall
mov
push
test
cld
sbb
dec
sbb
mov
shl
shl
das
adc
aas
lds
inc
ljmp
jno
lods
mov
sbb
out
dec
mov
repz
dec
xor
mov
jmp
icebp
aad
or
outsb
loop
in
mov
imul
mov
fldl
add
lret
test
or
cld
dec
aaa
iret
mov
push
ljmp
jno
addr16
xchg
rorl
int3
repz
in
xor
pop
fidivl
sbb
lock
out
int
jne
adc
jae
in
cli
sbb
not
mov
out
adc
clc
lods
sbb
cmpsl
mov
jns
jmp
sub
push
xchg
dec
pop
das
inc
xchg
pop
dec
pop
push
test
dec
aas
mov
mov
adc
fsubs
and
repnz
sub
mov
lcall
idivl
repz
and
cld
cmpsl
into
es
inc
cltd
push
std
fdivr
push
shl
sbbl
sub
daa
pop
jnp
divl
xlat
push
lds
push
fdivrs
outsb
popf
and
ficompl
lea
jne
jmp
insb
jle
pop
mov
push
scas
mov
push
sub
jo
adc
int3
out
notb
fst
icebp
ror
or
dec
xchg
mov
mov
hlt
cmp
repz
mov
dec
call
lret
popa
movsb
dec
adc
das
inc
stc
sahf
push
test
dec
jg
pop
xlat
addr16
repnz
sbb
cmp
hlt
out
mov
cmp
fwait
cmpsl
sub
pop
data16
out
sahf
pop
push
out
xchg
fldenv
dec
mov
sub
sbb
fwait
pop
daa
add
pop
add
xchg
roll
pop
popa
and
sbb
cmp
testl
js
push
fsubrs
inc
loopne
mov
lea
repz
xchg
adc
jmp
stos
aas
repz
cmp
pop
push
mov
mov
push
and
nop
push
repz
inc
out
insb
xchg
outsb
std
insb
xchg
les
push
stc
inc
or
cmpsb
jecxz
imull
sbb
into
inc
mov
xchg
adc
push
jne
sub
and
push
inc
gs
subb
scas
out
call
sub
pop
jnp
adc
mov
xchg
xchg
sub
mov
scas
stos
inc
fucomi
xor
outsb
cmp
int
ret
adc
inc
lods
outsl
mov
int
sbbl
cld
stc
nop
bound
cmpsl
es
in
ljmp
push
sub
lret
jnp
popa
add
push
mov
nop
cmp
clc
dec
out
jb
inc
lret
jbe
or
xor
push
mov
inc
es
inc
and
pop
jge
jecxz
int
mov
cmp
popf
mov
and
adcb
cmp
sub
sub
adc
mov
sbb
sub
mov
xchg
inc
es
incb
arpl
and
cs
hlt
push
fcoml
cmpsb
out
es
test
jp
repz
inc
es
in
adc
test
xor
test
mov
out
jmp
inc
leave
subb
xchg
mov
xor
xor
mov
fwait
xor
mov
adc
leave
das
jp
imul
jl
cmpsb
adc
inc
sub
mov
mov
sub
dec
sbb
add
loop
cwtl
out
cld
cmp
orb
mov
popf
mov
push
repnz
mov
daa
aas
in
lret
sbb
xor
mov
popa
enter
jno
stos
cmp
das
pop
cmp
sub
clc
sub
mov
insb
mov
les
scas
mov
fwait
mov
dec
mov
testb
or
pop
rorl
dec
push
sbb
in
jp
sbbb
loopne
je
dec
push
adc
loopne
out
dec
repnz
mov
pop
mov
int
jno
mov
and
int
fwait
add
sbb
arpl
movsb
inc
xchg
mov
sti
xchg
lcall
fldenv
add
add
test
xchg
jp
push
lcall
push
inc
xorb
cwtl
sbb
push
sbb
pop
repnz
pop
sub
ds
imul
int
push
mov
jecxz
adc
cmp
pushf
xor
mov
ret
aad
and
popf
xor
pop
dec
mov
movsl
stos
cmp
jp
out
rcr
mov
aad
popa
mulb
les
xlat
dec
dec
sbb
or
in
and
notl
test
ret
ljmp
cmp
mov
mov
cmpsl
lcall
mov
pop
inc
out
andb
jno
mov
enter
xchg
sbb
jne
loopne
in
out
cld
xlat
xchg
test
cmp
xchg
pop
sub
shlb
or
insb
add
adc
inc
jecxz
xchg
mov
idivl
xchg
daa
stc
shlb
mov
sub
sub
sbb
insb
ljmp
lods
arpl
cltd
pop
test
lods
add
std
cmp
dec
out
inc
loope,pt
sbb
ljmp
or
adc
pop
mulb
outsl
jno
aam
mov
dec
or
clc
vprotw
sti
out
sbbl
xchg
adc
insb
inc
rclb
jno
rolb
fucomip
xor
xor
loopne
lock
jae
push
mov
aaa
into
pop
les
lret
loope
fildl
ret
fdivrl
loopne
xchg
pop
out
sbb
mov
popa
test
sbb
mov
fimuls
mov
scas
inc
int
pusha
popf
add
xor
jmp
fnstsw
xor
jns
es
rcr
and
ret
push
aas
stc
test
ret
shr
mov
outsb
cmp
push
js
mov
xor
jnp
pop
cmp
push
dec
pop
rcll
roll
iret
dec
xor
fnstcw
push
mov
xor
loope
sub
inc
push
jp
ja
int3
arpl
pop
ljmp
sub
int
cmp
int
add
mov
jb
adc
test
movsb
mov
aad
sti
xchg
pop
jecxz
adc
stos
mov
xor
sub
inc
icebp
push
mov
jb
icebp
into
xlat
cmpsb
sar
nop
add
adc
das
rorl
mov
dec
icebp
xchg
pushf
movsl
rolb
pmaxub
loopne
jle
mov
test
mov
mov
dec
jp
inc
ljmp
jno
cmp
inc
fistps
loop
popa
mov
mov
orb
adc
lea
mov
jecxz
out
ret
fsubs
adc
out
aam
mov
inc
imul
ret
xchg
insb
mov
pop
xor
push
out
cmp
inc
jb
cmc
out
stos
ret
inc
shlb
push
jl
mov
sbb
jg
lcall
adc
rol
adc
pusha
mull
lock
leave
dec
xchg
jle
lcall
cmc
push
jg
out
lret
xor
fisubrs
push
shlb
sbb
ds
loop
and
cmp
dec
hlt
stc
xor
and
sarb
inc
push
fcos
aad
sub
loope
repz
ret
pop
inc
lcall
and
loopne
aas
push
ret
sub
xchg
xor
jne
inc
sbb
xchg
outsb
or
xlat
push
cmpsb
cs
out
pop
movl
movsl
pop
cmpl
insb
or
mov
dec
sti
xchg
lea
mov
push
hlt
iret
ret
daa
inc
pop
imul
and
and
cmp
push
test
out
imull
pusha
leave
jbe
adc
xchg
negb
mov
jp
sbb
outsl
jns
jnp
nop
dec
out
or
adc
and
nop
daa
repnz
xor
rorb
xchg
jbe
mov
ss
in
xchg
lods
and
int
inc
jbe
xchg
imul
iret
fiaddl
mov
dec
xlat
rcrl
in
addb
outsl
test
cmp
inc
or
js
or
and
jmp
in
jg
mov
sbb
test
mov
xorb
mov
aad
mov
cmp
insb
and
test
in
xlat
sbb
push
andl
repnz
sbb
repnz
inc
sub
fwait
push
jns
fwait
cltd
outsb
lcall
dec
loop
adcb
cmp
dec
outsl
mov
gs
in
fcoml
xchg
inc
stos
andl
push
mov
push
daa
mov
pop
pop
xchg
mov
jle
sub
pop
daa
mov
jno
stc
pop
fistpll
mov
cmp
xchg
xor
fisubrl
xorl
push
flds
icebp
add
sbb
enter
inc
out
inc
lret
and
lock
int
dec
add
and
fs
test
fcos
xchg
add
sbb
jecxz
add
cs
adc
rcr
test
pop
sub
dec
sbb
jo
out
pop
push
xor
inc
xor
xchg
jo
das
mov
lret
sub
jmp
add
je
hlt
push
fwait
test
imul
pop
xor
xchg
pop
fildl
cmpsl
mov
addr16
aas
into
or
popa
mov
inc
lods
xchg
fdiv
movsl
push
pop
dec
clc
loope
inc
lods
push
jae
fidivs
enter
push
repnz
dec
arpl
adc
lahf
shl
ret
sbb
push
ret
mov
sub
lock
daa
inc
jl
mov
lods
adc
cwtl
xchg
mov
test
loop
call
add
aas
push
pop
and
in
jo
xor
sbb
dec
dec
adc
push
and
mov
mov
hlt
test
dec
int
test
inc
push
lahf
dec
fsubrl
bound
push
aaa
lret
cld
inc
xor
test
pop
jnp
fldt
fcomps
mov
fidivrl
movsl
sub
ss
mov
push
shll
push
xchg
jno
push
xchg
cltd
fsubrs
cwtl
or
popf
pop
daa
enter
cmc
out
xor
out
test
adc
lret
stos
or
mov
aas
andl
cmp
add
mov
push
test
insl
test
dec
sbb
jmp
or
in
mov
pop
jne
insb
or
push
add
std
inc
and
enter
jp
inc
push
test
mov
and
movsl
les
adc
mov
push
xchg
mov
push
test
iret
pmulhw
lret
mov
jmp
adc
cmpsl
cltd
xchg
jns
xchg
push
andb
jge
mov
add
repnz
push
jge
xor
sbb
mov
inc
std
mov
xor
xchg
out
lcall
fs
push
icebp
mov
popa
and
or
push
fdivrs
jg
mov
in
and
jp
and
mov
xchg
sub
fsubrs
cli
add
mov
out
adcl
add
into
hlt
dec
xor
inc
add
xchg
mov
stos
mov
pusha
mov
cwtl
outsl
mov
icebp
add
call
mov
lcall
cmc
out
jae
leave
fsubrl
mov
in
fcomp
je
ds
addb
mov
and
pop
in
cli
xchg
aas
mov
inc
in
das
push
pop
xchg
roll
jp
push
fcmovnb
mov
stc
pop
add
mov
testb
push
lret
or
in
xchg
sub
stos
or
xchg
or
xor
out
inc
enter
imul
add
lret
pop
lahf
inc
inc
xchg
lock
add
pop
icebp
or
xchg
pop
shll
ret
hlt
jecxz
je
sbb
pusha
push
add
gs
in
lret
xchg
ds
cmp
dec
cmpl
xlat
outsb
in
pop
dec
mov
imul
mov
out
aas
push
mov
imul
arpl
mov
or
and
add
stos
pop
cltd
ljmp
movsb
cmp
add
mov
jns
pushf
std
push
out
test
pop
mov
xchg
sub
hlt
mov
mov
stc
jmp
shlb
out
test
cmp
fidivrs
fbld
lcall
mov
mov
adc
sbb
mov
xchg
mov
inc
xchg
es
inc
mov
xchg
mov
iret
out
push
mov
lahf
mov
cmpsb
cmp
test
jge
mov
jno
repz
cld
dec
adc
add
mov
sti
xchg
pop
jg
es
pop
pop
std
xchg
sarb
cmp
jb
mov
popa
rcr
mov
push
es
je
lret
mov
xor
scas
dec
mov
test
sub
sub
cmc
xchg
mov
fisttps
cmpsb
xchg
mov
pop
push
dec
hlt
clc
shlb
cmp
pop
sub
adc
add
dec
pop
and
pop
int3
ss
stos
pop
in
mov
mov
add
mov
dec
insb
shl
xchg
int3
repz
cmp
jbe
dec
sbb
push
and
sub
ss
mov
xor
jle
test
int
sbb
or
je
sub
jnp
mov
or
sahf
xor
xchg
jb
mov
dec
inc
adc
add
inc
jnp
lcall
movsb
pop
jne
cwtl
stos
test
sbb
jbe
sub
scas
jl
pop
mov
inc
inc
adc
jns
jmp
bound
push
sub
data16
sti
mov
push
mov
pop
mov
mov
pusha
idivl
push
sub
ds
inc
sbb
mov
hlt
mov
andl
std
cli
std
dec
iret
push
add
inc
mov
jne
rcrl
xrelease
pushf
icebp
mov
jmp
adcb
push
popf
stos
cmp
pushf
imul
fwait
sti
dec
adcl
es
insl
fcmovne
dec
dec
test
sti
pop
test
aaa
clc
je
sub
add
cmp
xchg
rcrb
dec
sub
xor
repz
push
push
lret
xlat
ss
and
je
sub
adc
mov
ja
shll
ret
test
mov
outsl
fistpll
fidivrs
fwait
test
inc
mov
xor
in
bound
cmp
or
push
adc
add
pop
add
or
repnz
test
test
xchg
push
fs
aas
mov
xchg
add
hlt
in
bound
pop
pop
repnz
add
fs
jns
pop
in
adcl
or
add
shll
push
in
xchg
xchg
cmpsl
test
icebp
fxch
jno
cli
cli
xchg
sub
sbb
pop
icebp
subl
sub
movsl
jg
xlat
lcall
xor
jo
cld
lock
sub
and
pop
icebp
sub
jo
clc
cmc
xchg
sub
sub
dec
add
repnz
fdivs
pop
je
sub
jg
push
pop
hlt
int
jae
jnp
xchg
and
movsl
jae
mov
mov
xchg
mov
sbb
cmp
movb
and
pop
test
les
add
sub
cmpb
out
and
pop
popa
push
ljmp
adc
or
mov
lods
pusha
mov
aas
std
jns
or
or
jbe
es
lods
mov
in
stos
leave
popa
imul
movsb
sbb
jo
mov
sbbb
mov
push
movb
addb
add
out
adc
push
cs
lea
pop
xor
push
in
movsb
repz
xlat
add
loope
out
mov
int3
jae
out
xchg
push
sub
outsb
add
mov
ss
fnstcw
in
ret
ffreep
loop
cmc
loop
daa
scas
addr16
cltd
into
popa
inc
shll
cltd
sbb
int3
arpl
cmp
stos
xchg
xchg
sbb
sbb
adc
out
and
jmp
imul
cmp
scas
movsb
stos
cmp
into
cs
scas
inc
fstpl
aas
cmp
ds
inc
pop
js
cltd
cmc
cmp
push
lret
idivb
pushf
sub
pop
mov
add
das
mov
jae
es
mov
arpl
adc
adc
dec
stc
sbb
jb
pop
push
xchg
jl
cmp
in
and
int
mov
out
push
daa
adc
and
inc
fs
sub
jmp
and
movsb
adc
xchg
push
scas
je
shlb
push
in
std
sub
mov
pop
lret
mov
pop
lret
aad
jmp
out
repnz
call
add
jb
mov
cmp
jecxz
out
adc
in
bound
xchg
pop
dec
jp
divb
or
mov
sti
addb
xor
adc
xchg
mov
sbb
test
xchg
js
mov
shll
lret
mov
dec
fs
cwtl
mov
fs
lods
sbb
mov
sub
lret
frstor
pop
xchg
push
iret
faddl
mov
shr
mov
fnstsw
dec
stos
jno
or
mov
rolb
ficoml
fisttpl
lods
fsubrl
cwtl
jmp
xchg
int
out
pop
dec
cmp
scas
push
cmp
imul
inc
out
test
orb
or
cld
lock
jp
mov
sub
outsl
cld
xchg
mov
ret
push
sbb
mov
int3
cmp
in
in
enter
test
movsl
lret
jmp
mov
sbb
stos
and
jbe
or
fdivrl
aaa
jg
movsb
push
or
xor
inc
push
mov
jmp
in
sahf
cld
jne
popf
bound
xor
aas
mov
sbb
rorb
jbe
lods
or
dec
sbb
bound
imulb
cmp
push
adc
cmpsl
hlt
addr16
dec
push
mov
popa
inc
add
insb
scas
repz
ja
inc
jg
mov
leave
dec
dec
je
iret
cmp
push
test
movsb
inc
mov
sbbb
test
sti
imul
fsubl
jno
mov
and
pop
sub
rcr
lcall
orb
nop
iret
fstpt
sar
mov
addr16
mov
imul
sub
mov
out
fbld
stos
lahf
and
cwtl
xchg
scas
push
mov
add
sbb
enter
xor
ds
and
cmp
mov
push
push
cmc
sbb
leave
xchg
test
fidivl
insb
mov
ja
jl
xlat
imul
outsl
mov
hlt
pop
push
push
mov
shll
insl
repnz
ret
mov
mov
jmp
xor
xor
fmull
dec
dec
sub
aas
mov
pop
or
andl
adc
je
jb
adc
outsl
xchg
clc
adc
icebp
outsb
popa
xor
pop
or
jno
ja
or
jb
movsl
rcrb
in
mov
test
bound
std
push
add
xchg
js
xchg
loope
dec
out
enter
daa
leave
int
es
xor
js
movsl
xor
js
je
outsl
imul
add
sbb
pop
mov
xlat
outsl
mov
mov
inc
pop
std
mov
test
test
andl
mov
mov
inc
roll
daa
jb
fldenv
mov
mov
mov
sti
xchg
xchg
mov
sub
lahf
bnd
or
loopne
sub
in
xor
outsb
in
add
fwait
test
into
jl
int
movsb
cmp
inc
popa
cld
push
not
mov
pusha
push
adc
dec
cmp
enter
pop
std
movsl
mov
push
mov
into
inc
add
popa
cmp
or
je
mov
adc
icebp
xor
bound
lods
and
outsl
sbbb
add
stc
xor
mov
test
imul
scas
mov
adc
mov
pushf
xchg
jmp
or
out
pop
dec
lcall
or
add
jbe
and
and
dec
sti
pop
inc
xor
push
nopl
test
inc
pop
fiaddl
sub
sub
fstpl
mov
inc
push
mov
leave
std
xlat
shrl
out
stos
pop
shl
jne
iret
data16
jmp
push
outsl
jecxz
xchg
sbb
fldt
mov
lret
add
adc
loopne
sub
repnz
frstor
cmp
push
cli
adc
lds
pop
pop
mov
test
mov
movsl
ljmp
int3
fidivrs
inc
and
pop
stos
or
js
bnd
push
repnz
gs
and
int
inc
loop
stos
pushf
xor
xchg
mov
or
or
or
adc
jne,pn
lods
aaa
rcrb
mov
xor
cmp
mov
rcrl
roll
out
sbb
leave
push
push
xlat
ret
loope
call
je
pop
xor
dec
lcall
lret
cmp
repz
lcall
cltd
jae
insb
call
xchg
or
xchg
push
fsubr
fildll
repnz
gs
sti
pop
jl
fisubs
inc
imul
or
xchg
and
insb
mov
mov
cmp
sbb
jge
sbb
ret
jnp
mov
push
addr16
mov
pop
lds
mov
lcall
cmpsb
cmp
mov
inc
pop
jle
sub
mov
mov
mov
dec
pop
les
outsb
test
jl
jne
aad
pop
add
gs
xor
fucomi
jb
aam
mov
xchg
jno
sub
adc
xor
es
xchg
xor
dec
or
mov
fsubrl
scas
push
pop
sbb
fs
cmpb
mov
pop
arpl
dec
xor
inc
push
mov
push
mov
stos
fidivrs
mov
push
lods
nop
fcoms
out
sub
into
xchg
insl
outsb
dec
pop
lods
sbb
push
mov
int3
jno
xor
or
in
dec
in
and
xchg
loopne
mov
leave
lahf
add
pushf
jl
jg
adc
adc
mov
jge
cwtl
lret
std
inc
ret
push
popf
lods
daa
mov
fsubr
dec
jge
daa
es
enter
mov
int
inc
fsubp
outsl
rcrl
test
xor
inc
movsl
lahf
ss
into
xlat
int
mov
or
push
jb
mov
or
cmp
dec
aas
inc
fdivs
lret
push
jne
or
insl
cmp
call
and
jge
movsl
mov
fistps
test
jns
mov
sbb
jnp
push
xor
xchg
xchg
mov
outsl
cmp
std
wbinvd
test
ds
xor
adc
pop
es
addb
add
cli
fistl
or
into
int
sub
repz
testl
fldt
pop
fidivs
sbb
sub
push
stc
add
scas
sar
push
sub
out
dec
cmc
mov
or
sub
and
fstpt
ret
xchg
push
mov
pop
divb
js
fs
jge
push
mov
arpl
iret
pop
je
mov
pop
adc
jns
scas
or
out
test
dec
jns
idivb
fiadds
xchg
mov
icebp
ja
xlat
push
sbb
in
out
aas
adc
je
jle
and
hlt
mov
inc
xchg
jo
add
es
cwtd
sbb
in
cmpl
mov
dec
pusha
dec
addb
movsb
xor
pop
xor
pop
cld
cmpsl
hlt
mov
mov
inc
aam
jbe
insl
cs
xchg
sbb
inc
pop
mov
sbb
sbb
stos
test
sbb
cwtl
jne
push
mov
or
dec
mov
addl
daa
jmp
out
and
test
add
movsl
jl
sub
test
jnp
aam
mov
scas
mov
rcrb
fsubr
xor
dec
xor
xchg
inc
pop
jge
jmp
pop
sbb
mov
xor
pop
mov
fucomp
sub
and
jecxz
stos
dec
add
push
loop
rcrl
xchg
push
mov
adcb
ret
aas
dec
es
pusha
loope
loope
mov
movsl
icebp
in
or
mov
push
enter
dec
or
push
mov
adc
bound
les
fimuls
mov
xchg
loop
mov
repz
and
int
pop
fs
bound
mov
movsb
repnz
or
outsb
aaa
inc
pop
ss
sbb
dec
jle
mov
psubq
icebp
scas
jmp
and
imul
push
mov
push
jns
iret
pusha
add
push
jecxz
xchg
enter
test
fnsave
arpl
add
adc
jb
imul
imul
sub
adc
cmp
adc
or
clc
pop
shll
sub
lret
push
sbb
or
xor
add
inc
cmpsl
dec
mov
jne
push
jne
mov
mov
add
shl
insb
xchg
dec
rclb
jnp,pt
jo
test
or
pop
dec
fxch
jno
cmp
jecxz
pop
sarb
push
add
aaa
mov
sti
mov
dec
jno
pop
pop
ffreep
lret
or
mov
add
imul
xor
stos
andb
pushf
int3
xchg
cmpl
mov
insb
rcr
stos
cmp
jns
movsl
cmpsb
jae
push
hlt
add
or
or
push
and
push
cmp
mov
fs
mov
push
ss
jecxz
sub
lea
mov
fsub
mov
jge
inc
scas
loopne
loopne
out
cmp
popf
addr16
inc
mov
inc
out
fwait
pop
sub
xchg
mov
mov
xchg
sub
in
pop
hlt
insb
push
cli
or
add
adc
xchg
sub
mov
out
mov
add
rcrb
add
in
pop
popa
mov
pop
add
xor
fisttps
enter
ds
push
xchg
pop
hlt
pop
jp
je
mov
xchg
mov
sbb
pop
inc
mov
ret
stc
mov
iret
mov
mov
adc
push
and
sbb
push
iret
stos
ficompl
lea
xchg
lock
lret
mov
jb
ss
lcall
dec
popa
mov
pop
cli
addr16
sub
and
nop
cmp
inc
js
and
insl
orl
jae
mov
mull
jg
and
fcomi
ja
stc
loop
es
add
in
cwtl
filds
xchg
inc
mov
push
hlt
scas
aas
and
and
mov
cmpsb
and
xchg
icebp
push
out
mov
inc
loope
scas
dec
inc
addb
push
push
cli
jae
sbb
scas
inc
repnz
mov
push
fcmovnbe
subb
fisubl
push
xlat
xchg
dec
insl
in
rolb
or
mov
fwait
and
lcall
xor
ficoms
jecxz
call
xchg
adc
jbe
xchg
clc
test
jns
idivb
xor
add
and
hlt
mov
daa
xchg
in
jp
std
pushf
jno
lahf
lods
xor
ja
inc
and
adc
shl
mov
add
rclb
cmpsb
jmp
std
ss
imul
or
push
cli
jo
xchg
clc
sub
add
push
fcompl
push
add
dec
dec
push
jge
jmp
popf
xchg
test
mov
cmp
cmpsl
loope
mov
sbb
jp
sbb
xor
mov
jecxz
js
mov
lds
call
inc
inc
out
stos
and
pop
mov
ss
xor
push
arpl
popf
push
sahf
shll
mov
insl
mov
add
cmc
and
stos
xor
scas
test
mov
je
xor
push
int3
mov
push
mov
lock
scas
mov
sti
xchg
push
lock
mov
mov
scas
xchg
inc
ds
mov
repz
jno
sbb
adc
mov
pop
inc
out
sub
mov
stc
popf
in
jb
mov
enter
lahf
mov
jge
adc
inc
test
push
lock
and
cmpsl
jmp
xlat
adc
notl
sub
pop
add
bound
int3
stc
xor
enter
sbb
push
ret
xchg
ror
repnz
and
and
call
mov
mov
sahf
mov
inc
out
or
add
push
sub
mov
jmp
sub
adc
mov
jae
add
xchg
ljmp
outsl
xchg
arpl
notb
fidivrl
repz
xchg
out
testl
cmp
imul
adc
mov
mov
stos
jo
sbb
cmp
mov
inc
or
pop
pusha
dec
insb
xor
mov
push
jnp
jecxz
loopne
arpl
xor
test
cmp
enter
je
in
nop
and
aaa
mov
test
jl
ficomps
dec
pop
cmp
out
nop
sub
in
aas
inc
call
aam
sahf
adc
std
in
dec
xor
jno
sbb
insb
mov
stos
pop
mov
rcl
sarb
lds
insb
adcb
lea
add
out
dec
dec
cmp
jns
sbb
ss
popf
ljmp
test
mov
push
cmpsl
jo
add
sbb
gs
mov
mov
insl
mov
mov
loop
push
sub
std
lock
es
cs
lcall
jns
mov
pop
shll
xor
ret
mov
fimull
subb
xchg
icebp
adcb
pop
cmp
push
or
out
mov
sbb
jo
shrl
pop
mov
insb
add
insl
mov
clc
mov
pop
les
mov
and
xchg
push
ss
dec
cmp
xchg
sti
add
sub
je
std
or
adc
test
pop
sbb
cld
pusha
jns
out
jnp
push
inc
and
fs
call
icebp
mov
adc
ljmp
addr16
lidtl
ljmp
push
sbb
popa
pop
xchg
add
pop
cwtl
cli
rorb
pop
add
lds
lock
imul
imul
mov
or
adc
dec
adc
cmp
inc
hlt
lcall
add
cli
cltd
jb
ljmp
mov
repz
xor
mov
cmc
mov
push
popa
xor
leave
arpl
jno
bound
sbb
mov
mov
pop
push
enter
repnz
ret
stos
inc
cmc
arpl
push
push
jo
sbb
mov
mov
add
jg
outsb
add
add
mov
int3
ds
test
and
push
or
scas
adc
popa
pop
lea
rdpmc
jnp
popf
mov
pop
cmp
mov
loope
pop
lock
cmp
adc
ja
mov
jl
stos
in
dec
bound
sbb
shl
pop
sbb
lret
jb
fisubl
and
sub
jl,pt
outsl
sub
fwait
sub
sub
sub
ds
scas
addr16
imul
stos
ret
fucomip
ret
roll
lret
xchg
and
add
pop
sub
mulb
jmp
inc
test
inc
mov
and
sub
xchg
pop
add
cwtl
outsl
ja
add
test
jns
pop
dec
fsub
sarl
push
pusha
inc
fistps
pop
sub
orb
adc
mov
cmp
lret
scas
inc
mov
mov
or
cmpb
dec
rclb
in
jb
dec
sub
xor
mov
jns
cmpsb
movsl
subb
rcr
jns
xchg
outsl
jne
adc
clc
jns
inc
addr16
imul
push
out
or
cmpsl
ffree
call
test
lods
pop
lret
adc
xchg
mov
lea
stc
dec
inc
push
xchg
add
adc
ret
dec
movsb
xchg
mov
mov
jge
and
pop
mov
adc
je
push
sahf
fdiv
mov
lods
mov
test
call
mov
ret
test
inc
cmp
push
add
pop
mov
dec
std
jbe
sbb
lret
inc
pop
adcb
aaa
std
mov
bound
mov
or
jae
clc
pop
lcall
gs
pop
inc
aas
adc
cs
je
les
mov
cld
dec
inc
jecxz
jae
test
lods
in
inc
jmp
xor
fs
je
out
divb
mov
mov
les
mov
fists
addr16
push
jns
fisttps
mov
pop
movsl
sbb
xor
xchg
jg
mov
jmp
sub
dec
out
into
fldcw
lret
sbb
and
fs
andl
rclb
loope
jne
and
add
addr16
out
jl
lret
jo
out
fldln2
lods
repnz
pop
xor
mov
sbb
bound
jne
cltd
pop
daa
inc
adc
or
cmpsb
les
rolb
insl
cmp
push
jg
mov
add
push
mov
xchg
repz
jb
sub
push
xor
push
insl
xchg
sub
jno
sbb
push
popa
cmpsb
fsubrl
inc
lods
aaa
xchg
add
mov
jo
arpl
dec
xor
xchg
sahf
and
stc
imul
or
leave
jae
mov
adc
pop
dec
lds
fdivrs
insb
dec
pop
cltd
inc
push
add
popf
je
mov
lock
cld
mov
shll
rcl
addr16
out
vxorps
repnz
das
push
in
fwait
mov
je
ss
jae
insl
push
xchg
sahf
mov
jecxz
and
rorb
pop
outsb
pushf
cs
mov
je
lock
aas
dec
and
adc
add
xlat
cmp
inc
jge
aas
cmpsl
cmp
lock
orl
cmpsl
cmpsb
movsb
adc
shll
jno
gs
xchg
and
add
adc
testb
mov
cld
sub
mov
lock
xlat
clc
lret
dec
repnz
std
sbbb
testl
mov
fidivrs
mov
sub
lcall
es
push
sbb
dec
les
sub
add
inc
in
out
push
push
mov
push
or
jae
daa
mov
push
sbb
sub
imul
sub
stos
jo
setle
test
mov
shrb
shrl
dec
clc
out
or
fisttpll
sub
add
gs
or
add
push
jmp
sub
push
cmp
orb
mov
lahf
ss
sbb
adc
or
push
fwait
lcall
xor
std
dec
inc
leave
out
mov
jns
xor
dec
shlb
into
cmp
inc
les
xchg
jo
inc
test
icebp
imul
pop
pop
ret
hlt
push
in
leave
adc
jns
paddsw
jge
pop
lahf
mov
sbb
mov
xor
fs
push
and
adc
lahf
ret
push
xchg
addr16
push
es
cli
cmpsl
inc
fs
sub
pop
pop
push
icebp
inc
jnp
loop
movsl
shll
ja
mov
mov
out
dec
mov
and
dec
mov
ret
pop
or
sbb
jne
push
xor
pusha
pop
pop
inc
jl
sbb
adc
xchg
out
and
movsl
cmp
mov
pop
push
imul
cmp
imul
js
pop
xlat
jnp
mov
das
fcmovb
mov
stc
lods
imulb
xchg
cs
pop
hlt
outsb
mov
pop
sub
jne
xor
in
out
sbb
add
mov
and
aas
andb
pop
bound
in
lcall
jmp
cli
dec
out
in
loope
pop
add
or
shl
jns
js
add
push
movsl
push
pop
cld
xchg
mov
pushf
cli
add
fwait
xor
xchg
xchg
mov
imul
add
popa
inc
xlat
xchg
xor
inc
add
pop
mov
xor
decb
addr16
xor
adc
xor
add
je
subb
imul
sbb
sub
push
mov
in
lcall
sub
fwait
xor
dec
loope
jecxz
push
jmp
popf
daa
mov
lea
inc
push
add
sahf
das
mov
and
daa
cmpsl
mov
or
std
xchg
in
pop
orb
cmp
in
adc
mov
cmpsb
mov
dec
in
xor
mov
xor
mov
mov
sahf
test
test
push
cmp
repz
mov
ret
jmp
cmp
pop
lods
cli
dec
fucomip
test
pusha
mov
addr16
daa
push
mov
nop
cmpsb
ds
mov
jg
mov
cmp
add
jp
push
lahf
mov
add
mov
jno
cmp
lds
mov
inc
fnstsw
into
outsb
add
mov
mov
push
cwtl
shrb
push
insb
add
push
and
xor
aas
sub
dec
pop
addb
sbb
lahf
outsb
add
je
pop
out
mov
jbe
loopne
add
fs
xchg
mov
fldcw
or
pop
divb
jl
cmp
iret
mov
cmp
or
xchg
inc
pop
fdivl
sbb
pop
out
loopne
xchg
sub
jb,pn
pusha
stc
mov
sub
sbbb
int
jge
mov
pop
call
or
jp
jno
xor
jo
sbb
fadd
movsb
cmp
cld
aas
sub
out
xor
pop
and
jo
xchg
sub
test
test
fimull
mov
mov
fnsave
ja
not
lahf
ss
es
push
mov
outsl
jo
mov
ret
clc
push
and
inc
rep
inc
and
inc
lret
mov
enter
mov
push
out
aad
lods
push
push
outsb
add
pop
test
mov
jae
inc
xlat
push
mov
push
in
lds
cmp
mov
out
xor
or
pop
cmc
insl
adc
mov
sarl
add
push
jbe
mov
xlat
in
int
add
push
in
je
call
cmp
shrb
mov
ja
es
scas
cmp
cmp
pop
inc
fsubrs
push
sub
dec
scas
xchg
sub
aad
mov
inc
repnz
xsha1
cmpsb
dec
lods
push
mov
aad
lret
aam
jge
pushf
xor
sub
xlat
fcoms
lods
or
dec
loope
sub
mov
sbb
mov
insl
or
xor
sbb
lcall
mov
mov
fldl
or
nop
daa
pop
sub
pusha
cmp
mov
jle
mov
ss
fstps
pop
xor
insl
mov
sub
pop
inc
stc
je
dec
loope
test
or
cs
out
dec
mov
leave
scas
ret
shrb
dec
push
jmp
ljmp
scas
inc
pusha
xor
push
mov
inc
fldcw
into
gs
mov
fidivl
es
push
cs
pop
les
push
add
inc
fstps
jnp
inc
lret
sti
aam
lock
fidivl
sbb
clc
jecxz
mov
int
and
test
or
cld
aaa
dec
jecxz
sub
cmpsl
pop
mov
in
mov
add
adc
inc
mov
mov
push
cmp
sub
mov
fst
testb
adc
push
fisttps
mov
sbbb
push
xchg
push
popf
enter
push
out
test
xchg
sub
out
sbbb
xor
gs
mov
jnp
pop
movsb
cmp
lcall
rcrl
xchg
popl
daa
jbe
int3
arpl
mov
lock
xchg
inc
fcmovnb
mov
xor
addb
je
es
push
and
js
aam
leave
stos
sbb
mov
sbbl
xchg
sub
and
stos
ret
data16
xchg
push
jbe
addb
inc
leave
fs
daa
cltd
pop
into
mov
cmp
iret
imul
lcall
adc
imul
cltd
push
pop
cmc
mov
imul
cltd
jo
xor
mov
jne
or
fwait
push
mov
enter
rorl
jl
xchg
jle
stos
inc
jmp
daa
mov
push
sub
mov
dec
in
cltd
xor
sub
jno
clc
cmpsl
ds
in
out
sbb
fidivl
scas
dec
leave
test
cld
push
ss
sbb
lahf
shlb
dec
movsb
clc
push
lods
sub
dec
xor
jnp
loop
inc
cltd
mov
iret
addr16
xlat
cwtl
lock
and
jb
je
out
push
aas
xchg
pop
sahf
pusha
lea
mov
rcll
push
adc
jl
add
xchg
call
pop
xchg
sub
xchg
xchg
sub
xchg
outsl
push
pop
xchg
mov
nop
mov
mov
ret
mov
xchg
pushf
adc
mov
outsl
push
xchg
mov
adc
test
rorb
daa
mov
mov
sbb
lcall
xchg
in
cmc
mov
nop
jbe
mov
pop
mov
xchg
repz
and
std
and
arpl
pop
mulb
std
push
call
js
add
dec
sar
imul
xor
scas
inc
lret
lcall
sub
div
mov
mov
mov
fstpt
sbb
cmp
sbb
sub
jbe
jg
pop
cmc
pop
sahf
clc
int3
xor
pusha
mull
inc
stc
je
mov
adc
pop
icebp
popa
out
dec
jecxz
test
push
mov
fidivl
rclb
xchg
clc
pinsrw
push
in
aaa
adc
leave
test
scas
lds
push
imul
sbb
sbb
fchs
testl
sub
repz
fbstp
jge
subl
jb
add
xchg
and
inc
out
les
pop
cmc
mov
push
or
dec
mov
jmp
lcall
push
out
dec
loopne
jle
test
inc
lahf
addr16
popa
lcall
mov
push
out
fnsave
in
cmp
sbb
mov
nop
daa
pop
lods
mov
mov
ss
pop
mov
loopne
out
scas
cmc
mov
xor
insl
push
mov
mov
loopne
dec
push
lahf
jecxz
int
lds
cwtl
push
lods
pop
out
loopne
sub
pop
addr16
fsts
mov
mul
sbb
mov
push
mov
inc
out
mov
mov
aad
flds
mov
iret
rcrb
mov
push
mov
xor
sbb
jmp
cmc
mov
sub
scas
sub
jge
sbb
mov
pop
ret
dec
cltd
movsl
pop
or
adc
repnz
inc
shll
jno
mov
movsl
insl
stc
sbb
test
call
add
insl
mov
sub
add
sbb
stos
jbe
adc
pop
data16
pop
pop
cmp
ret
add
sahf
xor
adc
mov
xor
cmc
lcall
repz
mov
mull
in
stc
xor
jge
sti
xchg
xor
mov
call
ret
jl
push
bound
push
inc
cmpl
cs
xchg
or
and
fs
cmp
fdivrl
xchg
sbbl
pop
xor
js
dec
out
sub
inc
xlat
adc
aaa
fsub
xor
clc
das
movsb
cmp
cmp
mov
in
and
leave
ficoml
adc
rcrl
aad
sti
pop
repnz
cmc
mov
or
lcall
out
mov
je
add
mov
jno
push
push
aaa
jmp
xchg
fistl
mov
out
and
adc
pop
call
dec
mov
aam
push
leave
push
repnz
jne
insb
inc
ret
mov
fisttps
inc
mov
js
push
rcrl
lock
xlat
lea
fsubrp
lea
mov
pop
adc
stos
jl
out
dec
mov
and
fidivrl
fmull
or
addr16
sahf
mov
xchg
xor
in
add
sub
aam
or
and
push
lret
pop
add
pop
repz
xchg
mov
xor
push
call
cmp
popa
pop
xchg
andl
gs
ja
mov
movsl
push
addl
insb
xchg
mov
adc
cmc
mov
xor
test
arpl
jle
bound
out
xchg
jmp
or
fst
loopne,pn
loopne
jae
shrb
sub
cs
sub
push
in
movsb
inc
dec
jecxz
leave
inc
out
cmp
push
les
adc
ss
sbb
daa
pushf
stos
adc
fcompl
into
inc
jl
jo
ret
dec
mov
mov
push
jge
pusha
lret
push
fisubs
addps
pushf
test
sbb
aaa
dec
push
mov
cmp
pop
out
mov
jl
pop
xor
sbbl
or
scas
mov
adc
out
fdivl
jmp
mov
lds
das
mov
adc
dec
iret
lcall
jmp
enter
jmp
scas
inc
or
sub
jge
in
sbb
aas
bound
call
lret
adc
dec
scas
ret
push
call
mov
xchg
adc
jg
xorb
or
cmc
add
shr
call
enter
push
fdivrl
loope
inc
jae
stc
add
cmp
adc
mov
repz
adc
lcall
repz
lods
or
push
int3
std
sub
or
add
pop
and
call
mov
sub
pusha
or
sbb
pop
or
scas
dec
and
pop
or
pop
jns
add
pop
xor
pop
outsb
call
mov
jle
sbb
aaa
imul
adc
push
int
outsb
out
jmp
nop
sub
data16
cld
xor
and
inc
outsb
rclb
inc
sbb
ss
bound
cli
adcb
rol
mov
or
dec
mov
xor
add
mov
negl
jecxz
sbb
cmp
clc
pop
cmp
test
std
pop
or
iret
mov
push
push
stos
jp
add
sbb
xchg
sub
and
cmc
xor
inc
mov
iret
push
cltd
insl
ljmp
cs
jbe
ret
dec
pop
add
cmpsl
cmp
adc
add
pop
jns
push
cli
sti
cmp
and
test
xor
add
fbstp
int3
inc
sub
cmp
cmpb
stos
notb
or
out
les
adc
movsb
sbb
add
add
xor
jns
jecxz
adc
ret
lock
shlb
adc
jmp
icebp
xor
or
aad
sbb
les
cld
adc
push
lods
leave
shll
fucomip
add
lret
ror
data16
or
sub
call
jl
push
movsl
aad
movb
popf
xchg
mov
mov
push
cmp
mov
pop
mov
mov
fs
ja
pop
cmp
and
sub
add
pop
mov
sub
mov
addr16
lret
icebp
leave
test
iret
inc
fmulp
lea
fdivrs
pop
mov
nop
jnp
cli
xchg
addr16
rol
xchg
cmpsb
repnz
mov
incl
icebp
or
mov
mov
sbb
pop
add
xchg
mov
pop
or
std
das
xchg
test
inc
lcall
insl
sub
int
jbe
mov
pop
xor
sbbl
nop
cmc
sahf
test
mov
and
or
sub
pusha
andl
adcl
inc
divb
xor
and
sub
pop
sbb
push
add
xchg
scas
bound
mov
mov
mov
jmp
push
inc
leave
xor
out
inc
pushf
jno
movsb
pop
call
add
stos
push
mov
outsb
mov
or
outsb
mov
je
pop
shll
cmp
mov
xchg
mov
mov
in
gs
cmp
xchg
mov
sbb
in
mov
push
ret
inc
ficompl
sbb
cmpsl
mov
das
cli
xchg
jl
push
adc
dec
in
mov
in
imul
or
cmp
popa
loopne
cmp
ljmp
push
or
ljmp
jg
enter
lock
xor
filds
lock
push
mov
inc
fs
aaa
mov
loope
jae
pushf
stos
in
test
sbb
stc
adc
fimull
data16
mov
ret
fidivs
repnz
orb
into
orl
pop
mov
arpl
lret
sbb
inc
lds
hlt
xor
mov
cmc
leave
arpl
jmp
je
pop
jle
mov
sti
push
cld
int
lret
aam
pop
and
mov
fnstenv
outsb
cltd
xchg
pop
ljmp
and
stc
xchg
mov
or
adc
add
loop
gs
push
cmpsb
inc
into
adc
xchg
cs
jae
push
cmc
sub
or
bound
xchg
sahf
sub
add
or
or
sti
xchg
pop
jge
jl
rorb
out
je
es
lea
cmpsb
jbe
jecxz
adcl
sub
push
fcmovnbe
dec
leave
cmp
or
inc
add
push
jno
clc
and
cmp
push
pop
rorb
daa
sbb
xchg
pop
mov
scas
mov
cli
icebp
in
xchg
xchg
lret
mov
jle
cli
xchg
add
loop
push
fdivl
pop
bound
dec
push
iret
xor
lock
loope
or
dec
lcall
pop
rcrl
jbe
in
lcall
mov
push
mov
and
pop
lret
cmp
fidivrs
sub
and
jg
shrb
test
fimuls
xor
or
push
jg
dec
fs
cmp
inc
xchg
sbb
xor
add
sti
ss
mov
leave
xchg
fidivl
ljmp
cmp
shll
imul
mov
inc
leave
cli
cld
imull
and
lret
cmp
xchg
or
and
loop
icebp
imul
cwtl
inc
es
pop
mov
add
add
xchg
lock
pop
aam
ret
cmpsl
pop
mov
fsubp
cmp
orl
push
rcll
lds
fstpt
inc
pop
iret
push
movsb
sarl
addb
cmovg
fcompl
test
testl
loopne
jmp
cmpsl
in
sbb
cmpsl
outsb
mov
mov
mov
js
or
lds
mov
pushf
jg
mov
jne
pop
xchg
mov
rorl
jo
push
js
dec
shlb
xor
mov
es
repz
xor
lods
orb
push
inc
inc
jb
pop
dec
push
ds
jg
jae
fdivl
pop
aaa
leave
xor
push
fbstp
or
pop
jg
cmpsl
bound
pop
ljmp
test
sbb
jmp
test
icebp
add
out
jg
push
ret
fidivrs
push
into
xchg
call
mov
aam
pop
out
jge
mov
in
add
or
lock
test
lret
out
ret
fisubs
loopne
mov
push
paddusb
fdivl
popf
mov
jno
in
or
jge
xchg
les
jbe
out
sbb
mov
mov
movsl
inc
add
orb
push
add
sbb
adc
sbb
xchg
push
xchg
xchg
insb
adc
inc
lea
adc
popf
das
add
pop
mov
xchg
inc
add
push
sbb
mov
repz
dec
das
mov
sar
les
sbb
test
out
mov
push
cmp
jns
jns
je
push
in
pop
sub
mov
or
pop
adc
lock
sub
push
movhps
mov
in
orl
dec
lds
lock
mov
push
out
outsb
xchg
call
movsl
imul
mov
clc
adc
das
repnz
xchg
popa
test
or
dec
mov
sbbl
cmp
leave
in
and
out
in
aas
icebp
shlb
or
into
adc
movsb
mov
test
cmpl
imul
sbb
or
dec
mov
enter
jns
and
push
js
bound
and
jno
jno
pop
mov
rcrl
les
adc
mov
movl
repnz
cmp
mov
adc
add
imul
lds
pop
imulb
lret
repnz
push
add
mov
add
mov
mov
dec
out
aam
or
add
hlt
xor
mov
sbb
int3
testb
sbb
and
push
cmc
push
mov
lsl
xchg
mov
sub
push
mov
insb
push
out
int3
pop
mov
jmp
test
or
dec
or
jne
ja
popa
cmp
sbb
pop
mov
sub
cmp
stc
in
loopne
inc
mov
movsb
shlb
call
mov
mov
pushf
push
add
pop
mov
stc
pusha
cmpb
pop
leave
mov
in
fidivl
xchg
arpl
syscall
xchg
cmp
mov
mov
cli
xor
xor
loop
add
jnp
add
fcompl
jmp
mov
adc
out
pop
xlat
lret
shl
cs
loopne
loop
mov
or
jne
aaa
adc
jnp
lcall
enter
leave
fisttpl
out
scas
cmpsb
jbe
mov
les
sbb
pusha
xor
insl
xchg
sub
adc
xchg
pushl
les
daa
mov
mov
sbb
ja
mov
mov
movsb
mov
push
inc
in
pushf
mov
xor
cmp
jbe
into
jo
mov
mov
jnp
movsl
push
mov
movsb
mov
mov
test
pop
cmc
stos
nop
test
int
loope
jle
jnp
fimuls
std
frstor
movsb
bound
mov
ja
mov
aad
jne
mov
hlt
sub
mov
dec
sarl
das
les
lahf
pop
mov
cmp
dec
lahf
or
sbb
lcall
test
ss
jecxz
arpl
and
lea
push
push
cmp
imul
lahf
bound
adc
pop
adc
mov
and
mov
imul
lahf
jb
loopne
jbe
sbb
pop
mov
fidivl
push
cmp
movsl
js
push
dec
cmp
test
sub
cmp
and
cmp
sub
js
xchg
dec
popa
loopne
push
inc
insb
add
inc
push
rorb
push
incl
stc
mov
into
pop
mov
addr16
clc
inc
int
xchg
jle
lret
icebp
add
fs
mov
jle
adc
cmp
mov
dec
test
test
sbb
cmpl
jo
sub
pop
outsb
loopne
dec
push
daa
in
inc
insl
cmpl
adc
pop
pop
mov
pop
dec
imulb
push
xchg
inc
xorl
jo
js
or
mov
mov
rcrb
in
jnp
lods
xor
lss
sub
jle
repnz
jmp
or
fildll
cmpb
push
adc
arpl
xor
xor
jmp
or
pop
mov
mov
pusha
cli
fcoms
mov
jns
mov
aas
and
std
xchg
cmpsl
xchg
lahf
xchg
test
test
mov
outsl
mov
add
jns
adc
inc
clc
sbb
leave
sbb
add
pop
dec
les
sbb
in
xor
adc
push
xchg
or
dec
xchg
or
call
mov
addr16
je
test
jne,pt
lahf
dec
sbb
cltd
lahf
inc
jmp
cmpsl
scas
push
icebp
mov
stos
js
or
pop
iret
stos
xchg
das
int
add
jp
push
inc
enter
inc
add
fildl
out
add
adc
ljmp
pop
sub
gs
ss
push
aas
loop
jmp
pop
lods
call
mov
sub
or
lcall
xchg
sbb
jne
iret
jmpw
dec
aas
or
inc
pop
sbb
or
dec
mov
dec
sahf
das
fdivr
inc
mov
call
jne
adc
adc
xchg
pop
push
pop
jns
pop
test
xchg
in
dec
mov
bnd
xchg
outsb
xchg
stc
pop
jl
xor
dec
mov
je
and
sahf
jl
push
inc
or
sbb
scas
and
xor
je
gs
add
dec
mov
jg
clc
and
lahf
repz
imul
jo
movsb
pop
movsb
inc
mov
pop
call
lds
pushf
cmp
sub
xorl
or
sub
jns
out
sub
push
adc
mov
adc
out
aaa
dec
dec
divl
push
mov
dec
addb
push
xchg
nop
mov
aaa
mov
scas
arpl
push
mov
testb
mov
fists
pop
inc
xchg
mov
mov
mov
subb
cmpsb
cmp
divl
add
xchg
mov
dec
repz
fbstp
lds
cmp
pop
and
negb
pushf
xchg
mov
mov
push
jnp
jl
sub
adc
push
mov
dec
or
mov
push
dec
sbb
cmc
scas
xchg
cmpb
mov
xchg
call
les
loop
sbb
or
cmp
jecxz
ds
xchg
jle
fs
inc
lods
mov
hlt
arpl
jnp
add
dec
mov
fwait
insb
dec
mov
push
xor
lea
push
aad
lcall
jecxz
jae
mov
push
push
hlt
clc
jle
out
mov
xchg
clc
xlat
lea
sub
in
mov
inc
fisubrl
and
mov
and
inc
divb
enter
cmp
inc
mov
cmp
jae
mov
loopne
mov
push
in
or
xchg
sbb
repz
cmp
add
or
imul
or
mov
loop
inc
mov
and
scas
popa
dec
popa
pop
out
xchg
sub
add
xchg
lea
call
fists
fsts
in
movsl
cmp
mov
frstor
xor
fs
push
dec
xchg
dec
adc
xchg
cmpsl
ds
adc
xor
or
add
dec
pusha
hlt
pop
ds
sahf
inc
lahf
shlb
jo
wrmsr
jmp
loop
mov
repz
lds
jb
lds
faddl
jl
mov
pushl
test
jecxz
rcl
lcall
xchg
xchg
mov
popa
popa
clc
xchg
mov
cmp
add
leave
pop
and
mov
inc
leave
mov
icebp
ja
arpl
or
push
in
sub
in
mov
sub
mov
sbb
xor
mov
dec
mov
outsl
sub
rorl
or
rclb
lret
mov
std
inc
fildl
cmp
xor
and
sbb
xor
addr16
jno
dec
mov
inc
jne
adc
enter
es
xor
or
pop
cltd
lret
and
sub
nop
mov
adc
rcrl
or
mov
jb
sbb
dec
mov
lods
out
int3
sar
fildl
cmpsb
aas
icebp
add
mov
mov
mov
adc
mov
jmp
push
shrl
push
rol
sub
sbb
mov
insb
inc
adc
dec
sbb
inc
mov
in
das
shl
mov
sarb
fxch
inc
int3
adc
outsl
int3
push
mov
mov
jecxz
ja
mov
stos
inc
and
jle
mov
jnp
sbb
lods
inc
cltd
adcb
lret
cmpsl
pop
jge
pop
out
repnz
jecxz
out
in
pushf
cmpl
ds
outsb
jae
dec
mov
dec
loope
movsb
clc
push
es
dec
iret
and
jns
or
xchg
jmp
inc
adc
in
push
mov
stc
jge,pn
mov
popa
adc
aas
inc
jl
pop
cwtl
and
cs
push
rcll
ljmp
outsl
push
sub
cmp
xor
sbb
xor
leave
pusha
push
xchg
jmp
adc
pop
pop
or
data16
mov
xor
push
std
jns
jmp
sub
in
jo
or
push
xchg
jne
adc
push
adc
pop
aam
dec
add
loopne
pushf
xchg
xchg
and
sbb
fwait
jne
mov
mov
ds
int3
cmp
jge
loopne
mov
or
or
push
cmp
imul
and
roll
xor
fsubrp
ss
sub
push
jne
call
push
pop
cld
add
arpl
lret
pusha
mov
push
shll
inc
mov
mov
sub
out
cmp
nop
add
loope
xchg
sbb
test
movsb
pop
jae
jb
mov
mov
in
cmpsl
in
mov
mov
pop
dec
cwtl
inc
std
leavew
fldenv
fs
ds
sbb
jae
jle
pop
jae
pop
pop
xchg
jl
cmp
mov
mov
std
or
movsl
popl
adc
mov
movsl
rorl
out
push
repnz
stc
mov
je
add
xor
jge
jp
in
sahf
jnp
sbb
cmp
and
negl
xor
lcall
jo
mov
std
dec
ret
movl
or
or
pop
cltd
xor
add
dec
mov
out
inc
mov
or
out
pop
cltd
xorb
sti
and
js
lea
repz
add
sub
push
testl
arpl
test
mov
dec
repz
push
dec
stos
xor
lods
pusha
ret
test
xor
rclb
mov
shrl
sbb
cmovl
push
jl
cmc
sbb
subl
icebp
mov
dec
or
imul
sub
or
or
mov
lea
push
inc
xchg
je
fisttpll
xor
insl
aas
loop
fs
adc
bound
je
aaa
add
fwait
fildl
lock
pushf
mov
add
mov
push
mov
and
hlt
sub
mov
xor
cmpsl
rcll
popf
lret
iret
bound
xchg
mov
lea
ja
mov
lea
mov
negb
cmpsb
push
cmpsl
repz
and
sub
data16
push
addr16
cmp
pusha
idivl
fucom
pop
add
stos
inc
rcrb
xor
xor
cmp
jge
add
sbb
dec
test
sbb
dec
adc
cwtl
das
push
lret
and
jg
je
insb
cmpsb
xchg
push
popf
mov
and
sbb
adc
imul
sahf
mov
mov
fidivrs
adc
insl
add
xor
xchg
test
inc
ljmp
pop
ds
lea
jge
jge
stos
scas
mov
fwait
jecxz
xor
rol
mov
montmul
cmpsb
pop
mull
mov
sub
lcall
or
push
dec
lcall
mov
adc
gs
inc
fmuls
mov
mul
fsts
inc
lret
sub
adc
repz
and
inc
mov
xor
push
mov
mov
ljmp
mov
and
xchg
push
sarb
out
xchg
jl
and
jno
mov
add
mov
fstl
jbe
xor
enter
sub
insb
test
ja
cmpsb
repz
loopne
xchg
sahf
add
imul
shlb
adc
and
and
dec
jg
inc
mov
call
test
mov
shrb
push
das
push
icebp
dec
dec
mov
jnp
push
popf
push
add
fisubl
or
adc
xor
xchg
jge
jmp
aad
pop
lea
leave
repz
aaa
push
popa
stos
testb
jle
pop
fildll
add
lds
test
xor
jo
push
in
cltd
pop
mov
cmp
or
js
out
test
jecxz
outsb
push
mov
cmp
push
xor
jne
scas
sti
sub
loope
sbb
rcrb
pop
or
push
and
inc
repz
arpl
jno
pop
xchg
sub
insl
ret
push
mov
adc
iret
dec
popf
mov
sbb
push
in
mov
add
stc
adc
repnz
test
stos
or
aas
in
fisubs
pop
inc
mov
call
orl
adc
into
incl
mov
mov
sbb
dec
mov
je
jl
test
sbb
xor
pop
xchg
dec
or
out
dec
mov
inc
jecxz
mov
arpl
dec
in
and
lret
movsl
pop
lea
add
push
cmp
mov
dec
pop
ljmp
add
clc
nop
xchg
inc
push
in
test
push
sub
mov
push
sub
xor
xlat
int3
pop
aaa
xchg
cmp
into
negl
fbstp
mov
and
fstpt
movsb
repnz
lcall
sub
scas
pop
mov
stc
jg
cli
in
mov
mov
mov
fst
mov
and
sahf
cmp
ds
add
arpl
aad
outsl
and
popa
sub
push
int3
dec
xchg
mov
jle
push
xchg
xor
lods
xor
stc
push
pop
lds
cld
js
mov
mov
add
cltd
push
pusha
adc
insb
lea
ficoms
xchg
adc
outsl
or
insb
fiaddl
sbb
mov
dec
adc
cmc
jne
lods
sub
clc
mov
mov
test
aad
fsubs
sub
mov
sar
dec
fidivl
fs
push
fcompl
outsb
inc
outsl
into
gs
pop
insl
add
add
mov
adc
xchg
sub
sub
lcall
mov
cmpsb
add
cmp
sub
adcb
lret
adc
loope
pop
testl
loope
pop
repz
push
mov
inc
mov
xor
insl
or
sti
inc
hlt
mov
cmpsb
or
popa
mov
cwtl
sti
inc
sub
sbb
jns
xchg
mov
cmpsl
repz
sarb
roll
sti
adc
fs
cmp
or
mov
push
pop
sti
mov
pop
push
dec
pop
hlt
jp
hlt
pusha
pop
imul
cmc
mov
inc
adc
test
iret
mov
movsl
adc
sub
insl
jo
daa
scas
jnp
mov
and
xor
lods
shlb
iret
mov
test
inc
cmpsb
push
push
scas
ja
mov
int
inc
ja
jle
push
imull
mov
push
cli
pop
test
xchg
mov
in
inc
outsl
idiv
callw
icebp
jmp
stc
mov
dec
adc
les
xchg
mov
addr16
sti
ret
adc
orb
sarl
in
leave
fldenv
and
cmc
pop
data16
jl
clc
pusha
jne
add
repz
adc
in
bound
pop
add
mov
in
xchg
fiadds
cli
out
push
ret
repz
jle
loopne
nop
cmp
mov
test
pop
add
fdivs
jne
sbb
jmp
std
cld
arpl
cmp
movsl
fs
mov
fldl
negl
test
clc
jge
in
nop
cmp
idivl
mov
mov
pop
add
fnstenv
jbe
sbb
shll
int
add
add
cmp
lods
gs
cmp
jo
cld
ds
inc
jmp
lret
push
xchg
aaa
cmp
adc
fiaddl
dec
imul
popa
jle,pt
mov
loop
in
test
das
cmpsb
stc
inc
or
push
std
adcb
cld
and
push
ljmp
xchg
pop
mov
frstor
lret
xchg
nop
or
xchg
mov
addr16
mov
mov
push
loopne
pop
test
fistl
sarb
mov
aad
loope
jno
dec
adc
push
mov
jno
into
ds
jle
or
fdiv
popa
out
jg
loope
cmc
push
push
call
incl
dec
push
and
jge
test
outsb
outsl
push
add
jns
mov
sub
inc
int3
mov
add
jle
in
mov
adc
xlat
arpl
fcoms
fnstsw
mov
pop
lock
mov
push
push
add
loopne
inc
divb
push
lock
pop
out
fnstsw
add
cs
fdivrl
fnstenv
loopne
in
divb
jae
rolb
icebp
add
test
ljmp
ja
loope
mov
out
jl
cmc
data16
fistpll
loope
sub
mov
jns
iret
mov
fs
and
xchg
jne
mov
movsl
loope
mov
mov
das
stos
jecxz
loope
movsb
stc
lods
push
shl
daa
push
pop
roll
jno
mov
mov
out
pop
sti
pushf
std
loope
fwait
enter
shll
ja
xor
mov
dec
xor
insl
in
or
js
je
push
lea
ret
out
push
mov
fnstsw
aaa
test
cs
xchg
nop
in
fnstcw
movsl
xor
enter
and
subb
add
clc
xor
mov
ret
push
push
pushf
cmp
mov
push
call
cmp
pop
dec
sub
mov
sti
pop
xor
mov
rclb
sub
mov
call
popa
mulb
inc
stos
sub
cmp
xchg
and
mov
cmpsb
cli
in
js
in
mulb
mov
mull
es
mulb
sub
movsb
stc
ds
cld
call
popa
cmc
and
les
enter
and
cmc
mov
mov
dec
pop
sahf
in
cmc
mov
mov
out
addr16
and
sub
xor
jmp
popa
clc
adc
in
test
xor
or
insl
jl
enter
loopne
rolb
pop
inc
pushf
xor
ret
scas
add
adcl
out
mov
mov
cmp
jbe
pop
mov
out
loop
sbb
sub
enter
sbb
or
or
ja
push
mov
sub
enter
pop
mov
or
addr16
jecxz
push
mov
das
lahf
lret
subb
sub
sahf
inc
sti
xor
clc
cwtl
xor
out
push
cli
imul
mov
jl
mov
insl
xor
shl
add
sar
in
inc
push
mov
jnp
scas
mov
stos
xor
fdiv
inc
or
or
test
jecxz
test
mov
and
mov
mov
inc
ds
jo
pop
int
arpl
rorb
jecxz
xchg
cmp
repnz
xor
xor
push
ja
add
stc
data16
in
xor
aad
movsb
sub
aad
adc
notb
and
sub
adcb
sub
fisubrl
nop
cmp
adc
cli
gs
cmp
xor
xlat
adc
jecxz
fldt
pop
push
xchg
sahf
inc
jl
mov
cmp
daa
stos
mov
stos
ss
out
push
cld
xchg
inc
pop
cli
aam
adc
out
lret
pop
into
xchg
movsl
bnd
mov
lods
out
jno
jl
int
js
push
push
add
lret
loop
lea
cmpsl
sub
gs
lret
jmp
out
and
imul
aam
jb
pop
add
test
jo
cmp
jge
mov
mov
jle
imull
xchg
in
shll
push
es
lahf
xor
xchg
push
stc
sbb
fs
pop
add
pushl
loopne
aam
pop
stc
cwtl
inc
push
dec
xor
adc
cmpsl
dec
and
mov
outsl
in
jnp
mov
nop
arpl
fs
xor
sbb
sbb
mov
aas
pushf
xchg
stos
test
iret
pop
clc
int3
inc
mov
pop
sub
inc
mov
test
mov
mov
ja
add
inc
outsb
mov
dec
scas
repz
dec
mov
mov
popf
imul
xchg
std
lds
roll
call
and
test
pop
mov
cmpsl
adc
mov
aad
xchg
ret
movsl
xor
call
and
inc
lods
xchg
inc
xchg
inc
adc
push
adc
dec
push
cmpsb
xor
pop
stc
in
mov
inc
cli
fs
mov
fdivrl
scas
adc
push
xchg
test
mov
addl
xor
xor
dec
jl
mov
xchg
and
insl
pop
test
jae
ret
xchg
inc
je
sub
and
fs
cltd
in
inc
in
std
pop
xchg
insb
ljmp
jno
pop
and
mov
dec
xchg
mov
scas
xlat
test
dec
inc
or
jne
insb
sub
adc
adc
mov
adc
xlat
popa
pusha
sub
dec
jne
xlat
jp
clc
xchg
les
cwtl
cmc
mov
dec
loope
or
mov
test
mov
mov
ret
stos
mov
cmp
test
and
mov
mov
test
sahf
pop
mov
es
fnstsw
or
nop
cmp
pop
push
cli
test
mov
push
movb
mov
test
sub
movsl
push
lret
movsb
add
fwait
gs
pop
stc
jae
push
add
push
clc
pop
push
pop
cli
fadds
das
movsb
test
dec
pop
mov
cmpsb
insl
add
sub
cld
pop
cli
mov
cmp
daa
dec
jbe
dec
sbbl
cmp
mov
mov
dec
mov
or
shr
jbe
cld
add
mov
pop
push
xor
mov
and
pop
xchg
cltd
sbb
xor
fadds
popa
nop
cmc
ret
rol
mov
push
orl
cli
sbb
inc
cmc
nop
cmp
mov
mov
dec
movsb
lds
sub
dec
adc
push
cmp
fwait
repnz
cmp
fsubs
test
adc
iret
cltd
mov
fildl
jnp
fdivrl
insl
add
jmp
adcb
mov
cmc
jmp
repnz
and
cmp
stos
xor
stos
sub
mov
mov
lods
mov
in
addr16
mov
hlt
pop
nop
pop
pop
roll
loope
add
lods
xor
and
iret
fwait
cmp
test
xchg
pusha
repnz
cwtl
sub
lock
out
movsl
lock
adc
mov
cwtl
das
push
push
adc
icebp
mov
shl
loop
pop
jmp
pop
into
sar
mov
stos
jle
mov
outsb
hlt
inc
xchg
mov
xchg
scas
xor
mov
shr
scas
xor
std
cmp
add
push
adc
insb
mov
mov
test
add
adc
xchg
cmp
inc
add
aad
jle
mov
mov
add
rorb
and
fs
into
mov
cmp
mov
scas
insl
call
cli
mov
dec
loop
or
and
iret
mov
pop
sti
lods
cmpb
stc
mov
cltd
add
push
add
shll
adc
push
lods
ds
pop
scas
sysexit
int3
inc
call
lock
push
repz
or
and
cmp
mov
shrl
push
add
aad
inc
pop
jmp
ljmp
pop
sbb
and
inc
pop
cli
jl
pop
mull
shlb
shll
shrb
sub
ja
dec
or
outsb
pop
clc
je
xchg
sbb
ds
add
cmpsb
sbb
rolb
data16
jnp
out
dec
mov
jl
outsb
add
imul
shll
push
dec
jb
loop
lahf
pop
add
sbb
cmpsb
icebp
dec
test
sbb
dec
insl
cmc
in
pop
add
jmpw
repz
loopne
xlat
jns
not
jge
repz
xchg
xchg
adc
push
add
pop
aad
add
fisubrl
out
mov
pusha
das
dec
mov
xchg
std
pop
dec
fisttps
into
clc
lods
sub
mov
mov
jmp
addr16
mov
add
mov
repz
roll
clc
lods
add
imul
sbb
std
scas
pop
add
adcb
push
or
dec
push
fadds
cmp
fidivrl
or
and
lcall
aad
jns
aad
leave
xchg
cwtl
repnz
mov
out
in
les
adc
inc
inc
fidivrl
xor
fdivs
push
movsb
dec
int3
mov
mov
js
adc
rolb
popa
mov
jbe
lcall
push
and
xchg
inc
mov
xchg
inc
lret
fdivrs
or
imul
out
add
and
cmp
cmp
sarb
mov
icebp
and
lods
lock
mov
stc
rcpps
call
and
nop
inc
ds
in
push
sub
cld
xchg
fdivrl
in
sub
ljmp
es
pop
pusha
inc
std
fs
jo
mov
add
lahf
fisubs
shlb
orl
cmp
sub
inc
or
cmp
lea
dec
adc
xor
dec
mov
jb
mulb
sub
imul
mov
test
fiaddl
xchg
cltd
pop
clc
lods
shlb
lcall
cmc
lods
cs
popa
mov
cmp
xchg
jne
lds
add
inc
int
or
out
sub
and
mov
cmp
xlat
jmp
repz
fwait
xchg
jo
adc
rorb
ss
sub
mov
cmpsb
bswap
push
xor
sbb
mov
inc
mov
mov
push
rorb
rcl
cmpb
ja
sub
test
addr16
cmp
test
jo
mov
mov
faddl
sub
scas
std
das
mov
mov
pop
leave
rcl
mov
push
or
pusha
daa
xchg
push
shrl
xlat
loopne
fidivrl
stc
loopne
mov
xor
into
lds
ret
push
pop
adc
jns
sbb
loopne
fidivl
fsts
xchg
cmp
sbb
in
dec
cs
bound
mov
inc
sub
adc
data16
add
sub
push
jne
dec
cltd
andl
shr
out
jo
or
ud1
pop
scas
hlt
pop
cmpsl
mov
mov
mov
fwait
leave
mov
nopl
aaa
movsl
ja
sbb
stos
pop
lret
mov
jl
sbb
popa
clc
stos
out
imul
xchg
push
test
xor
daa
hlt
pop
sbb
push
roll
dec
xor
lds
loopne
popf
mov
cmpsb
or
xor
das
mov
nop
fs
xor
pop
add
push
mov
push
subl
add
daa
mov
es
push
test
js
pusha
mov
jbe
aam
jns
and
ret
push
pop
cmpsb
sub
inc
push
adc
rcll
mov
push
push
fnstenv
cltd
rorl
mov
imul
lds
mov
adc
lds
cmpsb
pop
sbb
mov
cmp
xchg
sub
mov
push
neg
test
faddl
adc
ffree
dec
test
arpl
or
das
dec
fcmovbe
test
lea
xchg
loop
es
icebp
arpl
addr16
xchg
out
or
adc
sbb
push
mov
add
repz
ret
add
sub
cltd
inc
sarl
sbb
faddl
mov
xor
test
enter
or
mov
repnz
daa
into
cmp
adc
xor
dec
fdivrs
mov
in
sbb
dec
or
add
aam
jle
sbbl
lret
xchg
inc
loopne
push
clc
gs
mov
rcll
into
loopne
mov
mov
std
pop
stos
mov
loopne
sub
negl
mov
mov
mov
and
xchg
add
jecxz
push
mov
pop
jmp
popa
inc
orl
repnz
shlb
mov
mov
xchg
jo
roll
outsb
out
jnp
inc
adc
arpl
jecxz
sbb
mov
push
xor
lret
bound
push
jmp
mov
inc
or
fcoml
aad
mov
call
and
add
fcoml
imul
add
cmp
sub
adc
jl
jnp
push
jl
push
fiaddl
into
jle
mov
xchg
cmp
mov
fiadds
std
push
cli
pop
pop
out
mov
pslld
aas
repz
xchg
in
in
push
mov
push
test
pop
repz
add
fsts
or
push
lods
daa
ds
mov
cmp
dec
jecxz
and
xchg
push
repnz
and
jnp
shlb
stos
add
int3
xchg
sbb
and
imul
test
les
jl
call
pop
idivl
cmp
loope
ljmp
shll
mov
mov
inc
adc
into
adc
jp
outsl
call
xchg
jnp
push
lods
mov
in
jo
scas
xor
fs
pop
inc
cmpsb
sub
imul
pusha
sbb
call
shl
insl
ljmp
xor
cs
mov
aad
dec
add
repnz
mov
add
inc
pop
cli
pop
hlt
test
mov
mov
xchg
inc
adc
cmp
push
aas
cwtl
mov
sbb
fistl
or
out
fcmovb
scas
leave
jb
in
jne
popa
addb
jbe
inc
out
loope
xchg
xchg
cmp
jge
cmc
das
in
int3
xchg
clc
bound
and
sti
or
sub
test
repnz
iret
aam
xchg
jb
rorl
in
pop
cmp
pushf
lret
and
outsb
scas
adc
jmp
neg
js
aaa
int
cmpsb
cmp
insl
ss
or
adc
sbb
aam
xchg
stos
push
cli
and
rorl
or
mov
paddusb
cmp
in
jno
sub
push
pop
std
ja
fstpt
out
xchg
jp
loope
into
arpl
rcrl
dec
or
push
dec
rclb
sub
add
stc
pop
mov
mov
push
lods
cmp
mov
cmp
int3
cs
add
cmc
xchg
sbb
clc
call
enter
mov
mov
fcmovb
mov
sbbl
cmpsb
mov
inc
or
mov
push
mov
pushf
or
sbb
or
test
pop
sbb
mov
lahf
ss
mov
mov
lods
adc
int3
and
sbb
cmp
std
bound
xor
xor
movsl
aas
dec
int
cld
bound
mov
mov
push
jno
dec
adc
test
jns
inc
push
aaa
movsl
jb
xchg
inc
insb
dec
or
cld
pop
aad
add
aas
or
aad
and
sbbb
hlt
jne
out
push
popf
fldl
or
sub
inc
push
and
cmpsl
sub
ffree
inc
pop
cmpsb
or
inc
or
lock
inc
mov
add
mov
pushf
fs
popf
iret
movsl
cs
popa
mov
add
in
jbe
and
or
int3
xchg
push
pop
insb
divb
movsb
fs
adc
inc
sub
pop
or
mov
bound
pop
add
enter
punpckhbw
daa
andl
pop
test
dec
adc
push
sub
xor
aam
loop
icebp
out
jno
lods
pop
lret
cmpsb
sub
pop
cmp
mov
push
cli
gs
scas
or
stos
inc
data16
xor
les
mov
data16
cwtl
mov
enter
push
mov
push
inc
mov
push
clc
repz
mov
sarb
pop
lds
pop
cwtl
inc
dec
add
lcall
sbbl
xchg
push
or
test
mov
add
pop
les
je
xchg
inc
mov
mov
or
inc
mov
mov
les
xor
sub
or
insl
fwait
pop
jle
jns
jg
mov
inc
adc
scas
inc
push
xchg
aas
sub
pop
int
cmp
mov
imul
push
bnd
and
adc
rcl
mov
adc
inc
jno
mov
mov
xchg
inc
xchg
cmp
dec
jae
sub
psrlq
cmp
xchg
push
add
lea
nop
ds
aas
push
lods
cltd
mov
mov
push
insl
mov
mov
aad
jle
ja
arpl
loopne
jl
jle
ret
hlt
jns
inc
lods
cmc
nop
daa
daa
iret
loope
cmp
xchg
mov
push
add
mov
dec
leave
or
jne
jmp
inc
or
sbb
xor
pop
add
mov
cs
and
test
mov
mov
xchg
aaa
push
test
mov
inc
orl
sbb
sbb
pop
xor
sbb
mov
lods
stos
xor
inc
jno
mov
test
or
pop
lcall
leave
clc
mov
daa
xchg
scas
stos
xor
icebp
pop
shlb
call
push
xchg
jo
inc
xor
ret
and
js
movsb
add
mov
mov
pop
pop
adc
xor
mov
push
icebp
sbb
jno
inc
or
addr16
pusha
fsubs
cmpsb
fists
sub
pop
add
jmp
cmp
int3
push
jno
lahf
xor
pop
neg
sub
faddl
sarl
roll
lock
mov
inc
fmull
cmpsl
andb
pop
push
sahf
cmp
mov
push
push
pop
lods
insl
jmp
xchg
out
sbb
jne
popf
jp
jl
out
xchg
jecxz
xchg
inc
or
fbld
orb
add
loopne
push
cld
sti
rep
xor
arpl
daa
stos
xor
mov
and
mov
inc
or
xlat
out
jo
dec
jmp
sub
cmp
cltd
outsl
push
scas
cs
js
rclb
sbb
enter
or
cmp
xchg
inc
fstps
pop
fstl
pop
imul
push
rcrl
insb
out
icebp
lods
sub
roll
outsb
ss
arpl
cmpsl
jno
push
cli
lock
inc
or
in
mov
mov
mov
fmul
xchg
adc
and
nop
in
sub
pop
adc
lea
pop
xchg
mov
xor
xchg
pop
test
stos
lret
inc
mov
fcmove
xchg
cli
in
xor
adc
sahf
inc
cltd
xor
addr16
std
gs
jbe
mov
xor
push
les
mov
orl
sarl
les
lods
cwtl
mov
add
push
testl
jno
dec
mov
and
jmp
pop
add
or
cmp
push
test
popfw
xchg
jp
lret
or
push
lret
pop
add
dec
je
mov
mov
inc
ljmp
push
xchg
test
push
push
lods
xchg
cmp
sub
or
mov
cmp
pop
cmp
lea
pop
imul
xor
mov
mov
jmp
call
jno
hlt
aad
xchg
fld
xchg
pushf
int
sub
leave
jmp
lcall
jp
repz
mov
mov
fisttpl
xchg
xchg
cmp
or
jp
aas
mov
sbb
push
cli
sbb
push
push
dec
cmp
push
pop
mov
fxch
test
cmp
jg
into
mov
mov
cmpsb
adc
jo
sbb
push
mov
dec
push
cmp
sub
mov
daa
jmp
jge
jno
jns
imul
xchg
or
and
jg
cmp
nop
jecxz
cmpsb
das
adc
jl
stos
dec
xlat
jg
mov
outsl
outsb
add
mov
stos
flds
inc
sbb
pushf
xchg
cmp
lret
and
dec
or
and
cmpsl
dec
cmp
jns
adc
subl
push
js
adc
sbb
xor
test
outsb
adc
xchg
add
pop
sbb
sub
dec
pop
jmp
stc
aas
xchg
fisttpl
iret
push
js
orl
mov
mov
xchg
sub
fcoml
loop
sbb
add
mov
and
mov
pop
inc
mov
orb
fildl
cmc
addr16
pop
nop
out
repz
mov
jp
push
jge
add
ljmpw
pop
sahf
aas
xor
mov
pop
and
inc
jno
or
mov
mov
mov
lods
cwtl
cmp
add
fwait
test
dec
pop
inc
cmpsb
xchg
inc
int
mov
lods
sub
fwait
ds
mov
add
push
movsb
xor
adc
mov
fbld
jg
sub
xchg
imul
xchg
jbe
imul
and
xor
dec
sbb
fildl
sbb
mov
int
pop
add
sbb
xchg
cmp
sub
xchg
leave
cmpsl
lods
cs
adc
orl
stos
or
cmp
and
insl
sbb
cmp
cmp
sbb
jle
and
mov
sub
les
std
fs
lahf
aas
movsl
repz
push
and
or
sub
and
lods
xor
sarb
and
and
add
xor
hlt
fiadds
int
jecxz
addr16
push
mov
fldl
aam
or
jp
lahf
outsb
in
std
int3
xor
data16
adc
pop
scas
xor
in
xchg
and
push
cli
cwtl
lods
and
xor
push
es
inc
pop
push
inc
or
cmc
pop
inc
andb
pop
xchg
test
mov
mov
pop
ffree
xchg
into
mov
push
fistps
or
imul
add
aad
popf
icebp
fs
jl
in
ljmp
je
mov
push
mov
xchg
lahf
rcll
jns
sub
jle
pop
std
mov
rcrb
pushf
mov
into
gs
push
dec
adc
and
xor
pop
aaa
in
cmp
ret
aas
xchg
cmp
add
enter
leave
xchg
adc
fsub
loop
rolb
jns
mov
and
push
jae
sbb
pop
mov
shrw
mov
lcall
pop
sarl
bound
enter
inc
cmc
popf
aaa
mov
xchg
xchg
mov
cmp
push
mov
mov
mov
sbb
es
mov
mov
push
sti
push
iret
arpl
shr
adc
dec
inc
loop
and
sub
xchg
repz
mov
lock
adc
dec
arpl
mov
mov
cmp
adc
dec
leave
mov
sub
sbb
or
sbb
aam
jp
adc
xchg
inc
adc
dec
out
push
outsb
enter
fiaddl
ffreep
or
nop
push
xor
ret
sti
pop
popf
cmp
ret
push
jne
add
push
test
mov
xchg
test
mov
call
cmp
cltd
cmp
and
ljmp
or
inc
les
int
cmp
jp
inc
adc
bound
sbb
pop
mov
je
xlat
sbbb
push
add
outsb
sahf
cmp
negb
mov
loop
jecxz
filds
into
mov
fsubrs
sbb
xchg
or
push
sbb
insl
xor
pop
lret
push
push
add
out
jb
lcall
xorb
decb
das
xlat
jg
es
sub
shll
xchg
adc
sbb
fildl
add
sub
roll
jno
or
pop
mov
mov
mov
je
pusha
cmpsl
sub
loop
xchg
ds
jl
leave
adc
push
sub
lret
and
rol
leave
xchg
push
push
mov
mov
lods
pusha
in
fadd
lcall
pop
in
outsl
xor
lahf
inc
adc
mov
mov
sbb
int
insl
shll
mov
pop
fs
imul
aaa
es
push
aad
aas
sub
pop
in
sbb
push
mov
dec
mov
jl
jno
mov
imul
loop
sbb
mov
int
fwait
push
cmc
pop
out
sbb
sbb
jns
push
dec
in
scas
push
ret
mov
inc
adc
jns
cmp
mov
mov
popf
lea
jmp
iret
or
idivb
cmpsl
imul
jo
pop
jge
push
call
ds
pop
mov
stos
and
or
clc
xor
lcall
stos
xor
imul
jecxz
pop
int3
mov
pusha
jmp
jg
xor
test
cmp
ret
pusha
in
pop
pushl
fistpl
faddl
xor
mov
in
inc
stos
sub
add
and
xchg
mov
and
inc
or
push
mov
out
lock
jb
push
pop
in
scas
xorl
loop
ja
cwtl
cli
adc
aaa
ret
pushf
arpl
mov
mov
roll
imul
mov
mov
sbb
je
shrb
mov
mov
dec
adc
mov
xor
daa
mov
lcall
xor
mov
add
hlt
pop
push
lea
jmp
mov
and
daa
mov
mov
stos
movsl
sbb
xchg
mov
xchg
cmp
ja
xchg
outsb
lock
fcmove
xchg
dec
aam
sbb
cwtl
aaa
enter
outsb
adc
je,pt
cmp
and
outsl
push
mov
ljmp
insl
hlt
mov
shlb
lcall
lret
mov
loop
xor
and
jno
test
in
rorb
jns
movb
push
mov
jmp
xor
enter
clc
pop
aam
inc
cltd
in
lret
addr16
arpl
ror
mov
mov
sbbl
xchg
cmp
mov
lods
repnz
cmp
out
lds
sub
sbb
pop
fisubs
lods
push
xchg
cli
push
xor
or
sub
popl
fidivrs
xchg
cld
or
loop
jns
out
insb
es
cmp
add
mov
cli
push
dec
into
fistpll
and
pushf
data16
pop
iret
mov
fstpl
mov
and
jmp
cli
or
add
fisubl
ja
imul
jno
aaa
rolb
mov
in
push
test
repz
lods
cld
pop
notb
sbb
ljmp
push
outsb
add
sub
cmp
lret
leave
mov
jl
out
push
pop
addb
xchg
iret
xor
out
je
and
push
xchg
je
imul
mov
lods
pop
stc
out
jne
nop
mov
mov
mov
jg
inc
mov
jl
movsl
cmc
sbb
roll
add
data16
pop
daa
mov
test
lret
sbb
dec
adc
dec
push
imul
xchg
mov
stos
cmpsb
arpl
sbb
iret
jae
mov
or
mov
pop
ss
call
cli
repz
das
movsb
into
xchg
icebp
ds
xchg
inc
in
or
pusha
shll
mov
dec
adc
cmp
xor
test
pop
or
popa
out
je
and
out
cs
out
mov
and
cmpsb
add
dec
xadd
out
hlt
sbb
aam
jecxz
test
add
icebp
aam
out
xor
and
es
cs
push
pusha
push
popa
in
jb
mov
data16
xchg
mov
repnz
jecxz
cli
popa
sbb
aam
fisttps
jle
or
mov
addr16
outsb
jmp
mov
fstps
lret
pushf
aad
and
mov
in
xor
sub
cltd
sub
aam
push
dec
mov
pop
and
cmp
in
aas
pop
stc
mov
lcall
and
xor
inc
xlat
xor
push
pop
cmc
xchg
jl
stc
nop
sub
dec
pop
scas
orb
andl
push
ljmp
jno
js
adc
lret
fwait
xor
int3
in
lods
inc
push
out
dec
in
inc
lret
bound
insb
add
jmp
and
out
sahf
pop
out
aas
sbb
and
pop
insb
mov
mov
frstor
push
loope
cltd
adc
jg
bound
and
mov
ds
mov
repz
fnstenv
sub
pop
jge
mov
rclb
dec
add
xor
push
and
imul
call
test
lret
sti
sbb
dec
insl
lods
inc
lahf
outsb
dec
in
ror
repnz
adc
addb
and
pop
sahf
xchg
data16
cwtl
mov
pop
jmp
inc
fstpt
or
jl
pop
stc
lea
lcall
and
xor
inc
xlat
xor
mov
cmc
xchg
jl
fsqrt
stc
nop
sub
lcall
dec
mov
int3
shll
push
ljmp
jno
ja
adc
lret
lret
jmp
inc
sbb
aas
lret
bound
insb
add
jmp
and
in
sahf
push
out
aas
sbb
and
pop
imul
jnp
fsubl
or
das
jg
popa
xor
mov
sbbb
mov
mov
repz
fnstenv
sub
pop
jl
mov
iret
adc
dec
add
xor
push
and
imul
call
test
outsl
push
clc
leave
adc
dec
sbb
dec
insb
lods
inc
sahf
insl
dec
in
mov
imul
adc
addb
inc
gs
sahf
xchg
gs
xchg
mov
mov
ljmp
jl
pop
stc
mov
lcall
and
xor
inc
xlat
xor
push
test
test
jl
fdivr
stc
nop
sub
lcall
dec
mov
int3
shlb
push
ljmp
jno
jbe
adc
leave
cltd
xor
lret
inc
sbb
dec
in
ds
bound
insb
add
jmp
and
in
sahf
adc
aaa
and
pop
push
inc
fidivrl
or
add
pusha
xor
mov
sbbl
push
push
pop
repz
sub
jo
sub
pop
jnp
mov
into
adc
dec
add
xor
push
and
imul
jmp
cmpsb
lds
test
es
sbb
dec
imul
pushf
mov
imul
adc
addl
or
xchg
mov
mov
call
or
jl
pop
arpl
mov
lea
mov
xor
inc
xlat
xor
push
test
cmc
test
jl
xlat
clc
stc
nop
sub
lcall
dec
mov
int3
iret
lahf
insl
shl
push
ljmp
jno
jne
adc
enter
leave
jmp
dec
in
cmp
insb
add
jmp
and
jecxz
sahf
adc
test
push
ss
pop
imul
popa
clc
or
add
pop
xor
mov
sbbb
mov
mov
repz
daa
fnstenv
daa
jp
pop
jp
mov
adc
dec
lcall
xor
push
and
insb
push
jno
jmp
movsl
ret
jo
cmc
adc
dec
sbb
dec
imul
out
mov
ljmp
bound
lahf
xchg
bound
mov
out
inc
fdivl
or
jge
pop
arpl
mov
fwait
mov
and
das
add
xor
push
adcb
andl
adc
idiv
nop
sub
fwait
xor
dec
pop
scas
jnp
mov
int3
int
xlat
outsb
shr
push
ljmp
jno
jae
adc
xchg
xor
enter
sbb
dec
out
cmp
bound
insl
add
mov
add
mov
shl
sahf
adc
test
mov
push
mov
jl
fsubs
or
add
pop
das
and
mov
aas
mov
mov
hlt
add
es
pop
js
mov
lret
adc
dec
sbb
insl
push
outsl
push
jmp
movsb
shll
lds
test
inc
pop
xor
dec
lods
inc
cltd
imul
in
mov
ljmp
pusha
or
xchg
mov
mov
out
inc
fdivl
push
arpl
xchg
pushf
mov
and
sub
dec
mov
testb
jge
aad
stc
nop
daa
negl
scas
jp
mov
int3
int3
popf
xlat
outsb
iret
in
push
ljmp
jno
jb
adc
lds
lods
inc
sbb
dec
out
cmp
bound
add
jmp
and
loopne
sahf
adc
test
mov
test
mov
in
mov
faddl
lcall
and
scas
cmpb
mov
mov
hlt
add
fnstenv
and
testl
sti
lret
mov
std
sbb
lret
dec
push
insl
push
outsb
push
jmp
mov
les
test
inc
push
xor
inc
lods
inc
cwtl
push
lret
jmp
insl
add
or
cmpl
pop
or
xchg
mov
mov
in
inc
fdivl
out
cmp
cli
xchg
pushf
mov
and
sub
inc
fsubrs
dec
mov
testb
jge
aam
stc
nop
negb
scas
jns
mov
int3
lret
pushf
xlat
outsb
into
in
push
ljmp
jno
jno
adc
les
lods
inc
pop
call
lret
bound
insl
add
mov
cmpb
pop
sahf
adc
test
mov
data16
mov
in
mov
fildl
lcall
and
scas
jg
mov
mov
hlt
add
fnstenv
and
adc
testl
cli
lret
cld
sbb
dec
sbb
push
jmp
mov
ret
adc
inc
adc
lods
inc
xchg
addr16
out
mov
insl
add
or
cmpl
pop
stos
inc
xchg
mov
mov
in
inc
fdivl
add
arpl
test
pushf
mov
and
sub
inc
fsubrs
dec
mov
testb
jge
shl
stc
nop
and
inc
pop
scas
js
mov
int3
lret
outsb
int
push
ljmp
jno
jo
adc
ret
xchg
xor
inc
push
out
out
cmp
bound
insl
add
mov
cmpb
pop
sahf
pavgb
mov
addl
xchg
jl
aad
clc
push
fiaddl
lcall
and
lods
jle
scas
into
mov
hlt
add
fnstenv
and
push
jne
mov
enter
leave
mov
sti
sbb
dec
sbb
insl
dec
insb
push
jmp
mov
ret
repz
enter
inc
xchg
dec
out
mov
jmp
or
cmpl
or
nop
scas
es
jecxz
inc
fdivl
add
jle
push
arpl
test
pushf
mov
and
sub
inc
fsubrs
dec
pop
idivb
mov
stc
nop
and
fwait
xor
inc
pop
scas
ja
mov
int3
leave
lcall
sbb
cmc
mov
cmp
adc
ret
enter
inc
adc
aaa
lret
bound
insl
add
mov
cmpb
sahf
push
fildll
mov
addb
test
jl
aam
clc
add
daa
jg
pop
sub
mov
lods
jge
scas
int
push
dec
pop
hlt
add
fidivl
and
push
je
cmpsb
je
xor
mov
stc
sbb
insl
dec
imul
insl
hlt
mov
rclb
icebp
adc
enter
inc
xchg
fs
out
mov
arpl
mov
add
or
cmpb
mov
cmp
lea
mov
enter
inc
fnsave
add
jle
push
fs
adcl
xchg
mov
sub
inc
fsubrs
dec
mov
idivb
fdivl
sahf
jge
shl
cli
xchg
and
fwait
xor
mov
int
cwtl
xlat
outsb
lret
jmp
in
cmc
mov
cmp
or
adc
rcll
inc
adc
dec
out
ss
arpl
insl
add
mov
cmpl
mov
bound
in
mov
stc
add
add
pop
sub
mov
stos
jnp
lods
int3
mov
hlt
pop
pop
jl
push
jb
nop
movsb
jb
xor
mov
int
sbb
outsb
dec
imul
mov
adc
inc
adc
leave
inc
popa
scas
inc
xchg
bound
xchg
mov
fs
outsb
add
cmp
lea
pop
or
mov
pusha
inc
add
jg
push
fs
adcl
aam
and
xlat
cmc
mov
fldcw
dec
mov
idivl
jae
popf
jle
iret
out
cli
xchg
and
pushf
xor
inc
sbb
jbe
ss
xchg
fsubrs
out
jmp
jmp
lea
ds
outsl
lea
leave
shl
inc
adc
push
out
xor
arpl
outsb
add
mov
fimull
lahf
or
stos
inc
push
sub
enter
inc
shll
add
add
pop
and
pop
push
sub
mov
test
lret
cld
int3
pop
cmc
std
sbb
jge
push
jo
nop
mov
ret
pop
scas
hlt
les
int
pop
fsubrs
addr16
jmp
push
lea
adc
out
or
sub
rdpmc
lret
scas
inc
xchg
popa
push
call
in
outsl
push
in
in
xorl
mov
mov
inc
mov
lret
cld
inc
dec
fs
jg
pop
sahf
test
and
aaa
and
inc
mov
clc
jnp
fdivl
pushf
jg
into
in
cli
xchg
pop
lock
xor
inc
sbb
jne
ss
xchg
fnstenv
in
jmp
ljmp
push
adc
daa
mov
fisubrs
call
fs
push
test
xorl
fldt
mov
pusha
jge
fldt
iret
stc
add
add
pop
push
daa
and
cmpsl
jns
fsubrs
lret
pop
idiv
sbb
jb
sbb
stc
nop
mov
rcll
bnd
mov
int
push
fnstenv
gs
jmp
imul
or
mov
xchg
sub
xor
aas
pop
scas
inc
pusha
push
jmp
loop
jo
in
in
xorl
or
mov
lret
inc
jmp
sti
jle
pop
sahf
sbbl
mov
and
inc
fisubrl
inc
mov
clc
jp
fdivl
fwait
jg
int
cli
xchg
push
out
popf
xor
inc
sbb
je
ss
xchg
fnstenv
in
jmp
jmp
jb
imul
lret
scas
inc
psraw
adc
int3
arpl
outsl
push
gs
xorl
fisubrl
mov
pop
jl
fldt
into
stc
call
add
sbb
and
cmpsb
ja
fsubrs
leave
pop
idiv
sbb
jae
sbb
dec
insl
cli
xchg
lahf
outsb
pushf
xor
sarl
inc
adc
jo
fs
in
xchg
testl
adc
sub
or
lret
cmp
pop
push
jmp
loope
jo
loop
in
test
es
push
lods
inc
mov
lret
inc
fisubrs
std
jmp
cld
jge
pop
sahf
sbbl
mov
fisubl
inc
mov
clc
js
fnsave
jg
lret
jmp
xchg
sbb
aas
sbb
jb
aaa
into
ret
jo
jecxz
in
adc
testl
imul
lret
scas
inc
push
fists
adc
int
bound
outsl
push
arpl
lea
or
or
daa
mov
pop
jnp
fsubrl
arpl
roll
sbb
and
movsl
jne
fsubs
pop
idiv
sbb
je
sbb
dec
insb
sti
xchg
sahf
insb
pushf
xor
mov
cmp
inc
adc
jo
arpl
xchg
testl
jmp
or
cmp
dec
lea
lea
jo
loopne
out
test
add
mov
xchg
lret
fprem
dec
fildll
sti
jmp
std
jl
pop
sahf
jg
test
iret
mov
mov
fisubl
rclb
popa
clc
jbe
fidivs
xchg
jg
leave
ljmp
sbb
ds
iret
rcll
in
adc
testl
imul
mov
or
das
into
gs
das
outsl
push
popa
sub
mov
lea
aad
mov
or
sub
pop
jp
int3
fs
std
iret
add
sbb
and
movsb
jae
fsubs
pop
div
sbb
jne
pop
jle
dec
imul
popf
push
xor
mov
rolb
fnstenv
bound
xchg
arpl
mov
mov
lods
out
xchg
sub
or
cmp
dec
mov
jmp
fildll
xchg
decl
movsb
test
inc
test
lret
clc
dec
loopne
stc
call
jl
push
popf
jge
test
sahf
and
iret
lock
fldenv
inc
rcrl
pusha
divl
jbe
xchg
jle
ljmp
sbb
sbb
outsb
nop
cmp
rorl
out
adc
testb
ss
mov
mov
leave
mov
fistl
or
iret
popaw
sub
in
test
or
push
sub
rcrb
pop
pop
jp
fisubrs
int3
gs
std
int
fwait
push
test
push
pop
and
mov
rclb
pop
div
pop
fbstp
adc
std
xchg
pushf
push
sbb
in
inc
push
fnstenv
popa
pop
out
xchg
popa
testl
in
xchg
sub
push
xor
aaa
pop
mov
mov
jmp
fisubrs
out
xchg
decb
movsb
test
inc
andl
popa
testl
sub
jnp
push
popf
jl
test
popf
and
into
out
mov
fldenv
inc
rcrl
pusha
divl
fbstp
xchg
jle
jmp
pushf
xor
cmp
mov
rol
mov
outsl
shl
out
adc
testb
xor
xchg
sub
fidivl
out
cs
pushaw
sub
add
mov
mov
mov
or
add
es
inc
fisubrs
lret
gs
cld
int3
add
std
sbb
and
mov
ret
rclb
pop
div
push
fbstp
adc
adc
fwait
addr16
xor
mov
cmp
aas
or
pop
out
xchg
pusha
testl
in
xchg
sub
add
mov
mov
jmp
out
xchg
std
mov
adcl
andb
aad
dec
loopne
imul
jg
dec
addr16
jp
push
popf
jnp
test
out
mov
fldenv
inc
rcrl
pusha
divl
fbstp
xchg
jle
xchg
sbb
pushf
xor
cmp
mov
cmp
sarb
loopne
out
adc
testb
xor
stos
xchg
leave
mov
mov
or
push
out
sub
outsb
add
mov
mov
mov
or
add
sub
push
and
inc
fisubrs
lret
sti
lret
add
cld
sbb
sbb
and
mov
ret
hlt
rcrl
adc
jle
inc
push
pushf
xor
mov
cmp
ds
jo
pop
pop
out
nop
pop
mull
sub
pop
inc
sbb
cmp
and
outsb
mov
dec
fsubrs
or
add
mov
fwait
lret
and
inc
and
jecxz
jbe
xchg
or
hlt
in
xor
or
scas
outsl
enter
mov
mov
lea
incb
aaa
sahf
ficomps
lds
int
cmp
cmpsb
mov
test
sahf
aam
push
loop
mov
in
add
push
mov
data16
rcll
push
movsl
push
mov
or
mov
cmp
or
cmpsb
into
adc
int
jno
mov
xor
cwtl
sbb
inc
jne
scas
lahf
aaa
or
mov
add
imul
fidivs
int
mov
and
repz
cmp
mov
subl
push
loopne
jmp
mov
push
in
mov
inc
ss
and
mov
mov
mov
fdivr
mov
jne
mov
pop
jns
es
aaa
sbb
in
nop
or
and
in
insb
and
mov
and
jp
mov
mov
add
push
or
lea
mov
adc
inc
ljmp
pop
xchg
notl
int
dec
ffree
outsl
jp
test
or
in
orb
or
inc
jecxz
xor
jno
adc
push
sbb
xor
mov
loopne
mov
sbb
cmp
mov
or
loopne
push
pop
je
fidivrs
pusha
dec
xor
mov
andl
dec
or
aam
nop
aam
xchg
lretw
jns
xchg
xlat
mov
popf
ret
aad
xor
int
sti
ljmp
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
insl
imul
and
pop
and
xor
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
inc
dec
mov
out
std
aad
std
mov
ljmp
nop
movsb
add
