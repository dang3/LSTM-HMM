outsb
mov
fstl
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
dec
adc
loop
int3
and
mov
test
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
sub
mov
sarl
leave
mov
mov
pusha
call
add
dec
stos
pusha
cli
test
repnz
dec
sbb
ljmp
xchg
xchg
in
lret
vmovlpd
lock
stos
xlat
cli
or
sub
or
sti
roll
fwait
mov
shrl
mov
add
iret
cmp
sbb
pop
jl
xlat
inc
mov
push
cmp
sbb
nop
sti
mov
fs
sti
repnz
outsb
insl
sub
push
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
and
inc
adc
xlat
or
cmpl
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
daa
xchg
das
dec
lret
sti
mov
icebp
cld
push
xchg
dec
in
aam
fsubrs
pop
out
mov
push
jo
jge
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
int3
ret
hlt
pop
push
dec
mov
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
lock
push
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
mov
add
push
pop
push
pop
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
sub
cmp
jne
mov
pop
ret
inc
nop
out
push
mov
and
imul
fucom
push
jnp
mov
fsubr
push
push
loope
and
movsl
or
cli
out
shlb
enter
mov
stos
push
loopne
aam
inc
jb
int3
sbb
mov
popa
outsl
pop
push
stos
xchg
mov
ss
ret
push
pop
clc
sbb
sub
pushl
pop
lods
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
and
add
test
add
and
add
add
and
add
and
add
and
add
and
add
add
adc
add
push
and
add
add
add
add
jl
add
stos
and
add
and
add
add
fisubs
add
cwtl
and
add
add
add
add
sbb
add
or
add
outsb
and
add
and
add
and
add
add
xchg
add
inc
and
add
and
add
add
jl
add
hlt
and
add
add
add
and
add
and
add
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
add
add
in
add
nop
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
adc
add
push
and
add
add
add
add
jl
add
stos
and
add
and
add
add
fisubs
add
cwtl
and
add
add
add
add
sbb
add
or
add
outsb
and
add
and
add
and
add
add
xchg
add
inc
and
add
and
add
add
jl
add
hlt
and
add
add
add
and
add
and
add
add
add
add
imul
je
imul
push
add
das
add
outsb
fs
je
insl
push
add
add
je
jb
jbe
push
jns
gs
add
gs
add
fs
imul
add
add
inc
gs
outsl
imul
jbe
jae
add
fs
outsl
outsb
jae
insb
gs
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
inc
jbe
outsb
je
add
insb
jae
jb
outsb
push
add
add
je
imul
bound
gs
add
icebp
add
imul
jb
je
arpl
add
jae
inc
outsl
jo
inc
imul
insb
outsl
jae
dec
popa
outsb
fs
gs
add
popa
jo
imul
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
insb
gs
jae
dec
jne
gs
add
fs
outsl
outsb
jae
insb
gs
add
rolb
dec
gs
jo
gs
jb
jns
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
push
dec
inc
dec
xor
cs
insb
add
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
arpl
inc
jae
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
outsb
fs
push
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
add
inc
push
inc
jae
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
add
inc
jb
dec
jae
add
inc
push
push
push
dec
push
cs
insb
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
imul
jae
inc
outsl
jb
push
dec
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
or
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jp
jp
stos
lods
lods
add
cmpsb
cmpsb
push
mov
mov
mov
lret
lret
int
rcl
in
rcl
shl
iret
ror
hlt
into
int3
into
hlt
leave
leave
repz
mov
mov
mov
stos
lods
lea
fwait
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
leave
leave
not
rcl
cld
fcom
std
xlat
xlat
xlat
aad
dec
rcl
dec
into
into
aam
aam
rcl
sar
mov
mov
iret
movsb
mov
mov
cs
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
scas
sbb
mov
jnp
mov
sar
dec
lret
iret
iret
sar
aam
fcom
xlat
call
xlat
fdivr
aam
dec
int
dec
into
int3
call
aam
dec
int
inc
rol
mov
mov
scas
std
cmpsl
cmpsb
cmpsb
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
push
push
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
int3
int
rcl
sar
fcom
xlat
fcom
fdivr
aam
aam
into
int
dec
lret
int
int
inc
mov
mov
ljmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
push
imul
fs
inc
sbb
push
push
sub
push
sbb
cmp
cmp
cmp
cmp
adc
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
sarl
enter
iret
ror
call
aam
call
aad
call
rcl
inc
leave
leave
inc
inc
mov
mov
ljmp
movsl
mov
xchg
cwtl
cwtl
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
jno
jle
jl
jle
jg
jb
jo
popa
popa
bound
cmp
inc
inc
mov
jo
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
dec
leave
leave
dec
leave
inc
ret
ret
mov
mov
scas
lods
scas
jmp
lcall
xchg
xchg
xchg
xchg
xchg
cltd
lcall
aas
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
jo
pop
pop
pop
or
pusha
nop
mov
xchg
xchg
xchg
incb
jnp
idivb
jmp
outsl
outsb
out
push
push
ret
jle
jns
js
arpl
inc
inc
inc
cmp
pop
sbb
adc
prefetch
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
test
sahf
sahf
popf
call
test
decl
xchg
xchg
sahf
mov
mov
mov
js
jp
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
incl
mov
std
mov
jge
jo
jo
jne
je
jle
jle
addb
xchg
push
cmp
ss
jle
cmp
movsl
movsl
movsb
shrb
lods
stos
sti
lods
lods
lods
lods
stos
lods
test
test
std
fwait
lcall
mov
jg
js
js
jl
jp
mov
cwtl
movsl
movsl
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
test
sbb
add
add
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
mov
xchg
push
push
aaa
push
femms
xor
inc
dec
insb
insl
insl
jl
xchg
leave
fwait
fwait
lcall
lcall
mov
mov
mov
mov
nop
lcall
cmpsl
movsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsl
movsb
movsb
addr16
jl
lods
test
add
pop
adc
cmpsl
scas
call
lcall
incl
mov
xchg
xchg
xchg
pushf
pushf
popf
std
movsb
movsl
movsl
stc
mov
xchg
xchg
in
nop
nop
in
xchg
push
jne
push
cmovp
or
inc
daa
sub
push
dec
dec
dec
data16
jno
xchg
xchg
rclb
xchg
xchg
std
nop
decb
xchg
xchg
lcall
cmpsb
cmpsb
ljmp
lods
pushl
mov
test
mov
xchg
scas
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cltd
lcall
mov
decl
nop
nop
xchg
xchg
xchg
sahf
sahf
sahf
movsl
movsl
movsl
test
test
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
pop
popa
popa
jne
je
mov
jle
test
mov
mov
xchg
testl
lea
jmp
mov
mov
pop
mov
aaa
jle
mov
ja
mov
movsb
mov
mov
mov
stos
stos
lods
mov
mov
add
mov
pop
pusha
adc
mov
ljmp
popf
decl
xchg
nop
call
xchg
xchg
call
cwtl
lcall
mov
movsb
movsb
std
mov
lcall
mov
xchg
aad
cwtl
lcall
lea
stc
xchg
test
std
xchg
je
fwait
imul
ljmp
jnp
mov
je
mov
insl
ljmp
adc
stos
or
stos
or
pushl
mov
mov
pushf
mov
movsb
movsb
add
mov
add
pusha
adc
mov
ljmp
popf
call
xchg
xchg
lcall
pushf
popf
lcall
pushf
pushf
lcall
xchg
xchg
call
xchg
xchg
call
cwtl
lcall
lcall
popf
mov
xchg
imul
xchg
dec
js
lcall
popf
push
imul
mov
adc
test
ljmpw
adc
lods
adc
mov
imul
adc
insb
mov
lcall
lods
scas
lods
scas
mov
mov
mov
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
pushf
sahf
lcall
mov
mov
call
nop
decl
addl
xchg
ja
cltd
jb
cltd
bound
call
sub
decl
adc
nop
or
call
add
cltd
add
sahf
pop
pop
jmp
sbb
mov
outsb
pushl
jo
mov
and
and
mov
inc
cmp
xchg
lods
mov
scas
lods
mov
sahf
lahf
lahf
add
add
add
add
add
pop
pop
adc
lods
mov
shll
pushf
sahf
pushf
jmp
cmpsb
cmpsl
jmp
test
ljmp
pushf
popf
decl
pop
ja
mov
decl
popa
decl
adc
pop
incl
push
incl
add
popl
pop
call
add
lahf
add
test
popa
pushl
es
mov
sub
mov
sub
inc
sub
das
jg
enter
enter
enter
sarl
mov
mov
movsl
add
push
adc
test
ljmp
lahf
jmp
test
stos
ljmp
mov
ljmp
mov
mov
mov
incl
or
or
addb
addb
incl
push
decl
add
nop
add
xchg
add
lcall
jmp
adc
mov
aaa
cmp
cmp
into
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsb
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
sahf
fwait
popf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
mov
mov
popa
decl
adc
mov
pop
decl
pop
push
incl
add
mov
push
call
add
sahf
add
mov
add
lods
add
pushl
cmp
dec
inc
call
inc
call
dec
nop
fmuls
fmuls
fisttpl
fisttpll
fsts
call
test
std
mov
mov
mov
lahf
lahf
or
add
add
add
add
inc
dec
adc
jl
movsl
popf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsl
decl
sbb
nop
pop
pop
decl
adc
mov
push
decl
pop
call
pop
jmp
add
test
pusha
pushl
and
nop
call
push
cwtl
fcoms
ficoml
fistl
fistps
ficoms
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
lahf
sahf
or
xchg
xchg
xchg
add
inc
adc
js
sahf
cltd
sahf
jmp
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
jbe
pop
call
and
xchg
pop
arpl
xchg
sbb
popl
push
call
add
mov
add
lods
add
mov
fs
mov
xor
fldenv
fbld
fisubs
in
test
in
cmpsb
jmp
gs
call
push
mov
into
mov
mov
mov
lahf
mov
add
add
add
inc
inc
adc
je
cltd
xchg
lcall
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
lcall
call
sbb
pop
call
pop
jmp
add
stos
add
mov
pushw
adc
roll
fsubl
jmp
jo
jmp
outsl
lods
jmp
jb
jmp
jae
jmp
scas
out
jne
in
jne
out
je
jmp
mov
mov
cmpsl
cmpsb
lcall
lahf
add
jg
cmp
insb
outsl
js
mov
sahf
pushf
pushf
pushl
mov
mov
mov
mov
mov
movsl
scas
lcall
xor
lahf
cmp
mov
xor
lcall
lcall
add
mov
add
mov
pushl
add
leave
sbb
ficoml
jmp
ja
jmp
jge
in
xorb
repnz
hlt
test
push
test
ljmp
mov
test
cmpsl
sahf
pushf
popf
daa
sahf
mov
sahf
add
add
add
pusha
add
xor
push
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
rol
pushl
outsb
mov
fwait
cmp
movsl
inc
jle
mov
ss
fwait
pop
call
add
movsb
add
test
pop
ljmp
add
mov
add
call
daa
cmp
movsw
ljmp
out
mov
push
sar
xchg
sar
nop
ret
push
xchg
ret
push
xchg
push
xchg
push
pop
in
mov
fidivl
clc
lods
stos
stos
mov
popf
popf
xor
popf
popf
add
add
add
cmp
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
inc
ret
inc
mov
jl
lcall
dec
cmp
dec
cmp
xor
popa
lcall
add
cmpsl
add
stos
add
mov
arpl
mov
add
enter
fdivs
mov
out
mov
out
xchg
cltd
push
lcall
negb
clc
pushf
int3
cld
lahf
int
cli
lahf
int
cld
lcall
loopne
int3
inc
mov
mov
mov
lahf
mov
xchg
add
add
add
aaa
aaa
add
cmp
dec
jecxz
pusha
pusha
call
mov
mov
mov
sar
inc
mov
ljmp
dec
jg
lods
push
xchg
scas
dec
xchg
mov
push
pop
lcall
add
stos
add
mov
popa
mov
add
leave
add
rorb
fiadds
out
mov
push
movsb
int3
push
cmpsb
int
imull
iret
sti
cmpsb
into
cli
test
sar
cld
stos
iret
cld
cmpsl
sar
negl
int3
dec
leave
int3
std
mov
mov
lahf
sahf
lahf
dec
xchg
xchg
xchg
add
fwait
fwait
add
add
add
xor
sub
sub
inc
inc
inc
bound
push
xlat
jae
jno
mov
sarl
mov
ret
dec
leave
inc
rol
mov
cmpsb
jmp
mov
scas
dec
xchg
mov
add
jmp
add
mov
fs
mov
add
int3
add
xlat
add
adc
out
pop
test
cmc
sahf
lret
cli
lods
aam
cli
mov
sti
mov
cli
mov
mov
mov
std
mov
cld
mov
std
mov
mov
push
movsb
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
add
dec
dec
outsl
outsb
jo
cwtl
lcall
aam
fsubr
aam
fdiv
iret
rcl
std
lret
into
int
leave
leave
leave
dec
lret
leave
leave
lret
inc
enter
scas
jmp
push
mov
stos
jle,pt
mov
add
lods
add
mov
arpl
mov
add
iret
add
fadds
je
fiadds
jne
jmp
jb
cli
lods
sar
std
mov
fcos
cld
mov
fcos
cld
mov
fdivr
cld
mov
xlat
inc
mov
lret
jmp
mov
call
leave
int
mov
mov
xchg
or
add
add
xor
xor
add
pop
or
enter
jecxz
pop
call
call
loope
fsub
fcmovnu
fdiv
fsqrt
xlat
xlat
std
int
into
mov
imul
jmp
add
mov
popa
mov
add
lret
call
add
fldl
jne
in
ja
out
xor
cld
mov
loopne
inc
loope
std
loopne
inc
fdivrp
std
std
leave
std
leave
fdivrp
std
enter
lret
loopne
sti
mov
enter
into
mov
mov
xchg
adc
add
add
incl
std
incl
std
incl
repnz
or
in
in
pop
jmp
out
sub
out
in
dec
jmp
jmp
out
jecxz
out
fucomp
ret
stc
lods
jo
cmpsl
cmp
mov
add
test
pusha
pushl
add
lds
imul
add
xlat
add
loopne
ja
jmp
inc
pushf
sti
mov
in
cld
lret
std
int3
out
std
into
in
dec
jecxz
dec
jecxz
dec
loope
shl
shl
std
shl
std
shl
cli
out
mov
inc
ret
ret
cmpsl
test
xchg
xchg
xchg
sbb
cltd
cltd
add
std
add
std
incb
idiv
testb
repz
repz
out
icebp
lock
in
icebp
out
cmp
out
out
pop
fnstsw
loop
lds
xchg
sti
mov
add
pop
ljmp
add
rolb
dec
add
add
fildl
jne
in
jp
jmp
jle
negb
sti
mov
cld
iret
out
std
iret
in
std
shr
shl
call
jecxz
call
call
std
jmp
fld1
std
shl
push
ret
aam
in
leave
lret
stos
stos
test
xchg
xchg
xchg
and
xchg
cwtl
add
std
cli
add
std
testl
hlt
cmc
hlt
or
shll
sarl
negb
add
cmpsb
add
scas
add
mov
add
lret
add
rolb
jno
faddl
jne
out
jns
in
sbb
sti
loopne
cld
xlat
call
fldpi
fldl2e
std
fucomp
fucomi
fucomp
jmp
in
fucomip
std
fucomip
std
shl
push
ret
call
ror
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsl
outsb
outsb
add
add
add
loopne
add
mov
xchg
stos
jl
repnz
and
sahf
add
cmpsl
add
mov
mov
add
int3
add
aad
jae
loopne
jae
ljmp
cld
mov
std
shl
std
fsubrp
std
fucomp
fucomi
fucomi
call
call
std
shl
cld
shl
sti
iret
loop
test
cmc
ret
xlat
out
mov
jmp
rcr
fcom
fdivr
mov
mov
lcall
add
add
add
xlat
add
mov
sahf
jmp
sub
mov
add
mov
mov
add
rolb
outsl
fadds
je
loop
jp
call
xor
sti
enter
lret
loope
cli
idivl
sar
repz
sar
lock
int3
ljmp
jmp
ret
sar
jmp
fsub
cmc
fsubrp
mov
mov
xchg
add
add
add
int
add
mov
movsl
loopne
xor
jmp
add
mov
addr16
mov
add
int3
push
jno
rorl
jmp
sbb
ljmp
jmp
scas
leave
std
loop
cld
fidivs
neg
mov
leave
ljmp
rcr
fmulp
xlat
shl
aad
out
loop
jmp
call
popf
jmp
leave
lret
lods
lods
adc
cmpsb
test
add
ret
mov
ret
mov
stos
aam
dec
cmp
sbb
test
imul
and
js
mov
inc
xchg
ret
push
stc
lret
test
mov
out
mov
mov
leave
lret
int3
rcl
int3
mov
iret
shll
fcom
jg
jb
gs
jecxz
out
call
xor
div
mulb
repnz
lock
fstp
or
mov
int
mov
add
mov
sarb
mov
xchg
lock
xchg
ljmp
mov
sarb
test
mov
mov
cmpsl
mov
mov
leave
lret
jp
int3
into
addr16
iret
rclb
rcl
dec
aam
aad
rcl
aad
aad
fsubs
ficompl
fneni(8087
fcoml
fucom
loop
loopne
jecxz
out
jmp
jmp
in
add
sti
testb
sti
add
incl
std
incb
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
rcll
ret
inc
ret
xor
into
lret
ror
and
aam
sbb
aam
iret
aad
or
push
rcr
xlat
add
fcmovnu
add
add
in
add
in
jmp
lret
add
std
add
mov
add
ret
mov
rol
sub
mov
mov
push
ret
or
leave
movb
mov
add
aad
add
xlat
aad
aam
aad
aam
aam
add
fsub
add
aam
add
loop
add
fstp
add
out
add
icebp
lock
std
std
add
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
mov
mov
stos
test
dec
cmpsl
test
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
jmp
aam
cmc
rcl
sar
into
iret
iret
cli
int
int3
stc
lret
lret
mov
mov
iret
lods
lods
stos
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
iret
rcl
xlat
xlat
aad
aad
aad
ror
sar
iret
int
dec
lret
mov
mov
cld
stos
stos
lods
icebp
xchg
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
jae
jne
gs
dec
inc
inc
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
int3
int3
call
rcl
call
rcl
dec
int3
lret
inc
rol
pushl
test
cwtl
xchg
xchg
jmp
jo
xchg
adc
add
xor
add
add
add
add
addb
test
jns
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
jo
adc
mov
mov
ret
mov
vshufpd
mov
mov
test
lcall
xchg
xchg
xchg
fwait
lcall
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
fwait
cltd
cltd
add
pushf
cwtl
cwtl
fcoml
addb
jge
jl
jns
jns
jnp
jnp
jnp
jns
je
jb
push
push
push
cmp
je
sahf
sahf
pushf
mov
scas
scas
rep
scas
lods
sti
lods
scas
scas
std
test
cmpsl
std
sahf
pushf
popf
call
xchg
call
mov
lods
jmp
lods
lods
leave
movsl
movsb
movsb
cltd
je
jae
adc
adc
add
add
add
add
outsb
outsl
insl
pop
nop
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsl
jo
mov
lcall
std
mov
call
sahf
lahf
ljmp
stos
scas
std
mov
mov
stc
mov
mov
cmpsb
movsb
movsl
pop
addb
add
add
add
pusha
or
scas
mov
movsl
sahf
movsl
decl
lea
call
lahf
lahf
sti
sahf
mov
lcall
push
push
jo
pop
pop
outsl
insl
outsl
outsb
xchg
subl
nop
xchg
lock
nop
lcall
mov
mov
xchg
mov
dec
mov
mov
mov
out
scas
stos
insl
stos
stos
test
add
add
add
popa
or
mov
in
mov
nop
call
cwtl
lcall
cwtl
lcall
popf
popf
cli
xchg
xchg
xchg
jmp
xchg
lea
jecxz
orb
xchg
imul
popf
dec
jp
movsb
inc
js
scas
aaa
js
scas
sub
pop
outsl
ljmp
sbb
mov
mov
scas
scas
jle
movsl
mov
add
add
add
pop
or
mov
lcall
popf
popf
jmp
mov
cwtl
decl
addl
cld
cwtl
pusha
cmp
dec
jp
xchg
cmp
nop
sub
xchg
sbb
cltd
punpcklbw
sahf
punpcklbw
cmpsl
adc
insb
pushl
sbb
mov
and
pop
mov
scas
scas
xchg
sahf
sahf
lahf
adc
add
add
popa
popa
pop
or
stos
mov
stos
mov
mov
ljmp
cmpsl
test
decl
cmp
mov
arpl
mov
pop
decl
or
mov
push
decl
add
pushf
add
cmpsb
or
jb
mov
das
jle
les
jg
leave
xor
lret
xor
xchg
inc
stos
mov
scas
mov
movsb
test
test
pusha
pop
popa
or
movsl
test
jmp
mov
pushl
mov
jmp
jb
mov
pop
decl
or
test
decl
add
xchg
add
mov
add
mov
insb
inc
ss
inc
mov
into
inc
mov
rolb
call
inc
xchg
fmuls
call
popa
popf
inc
test
stc
mov
mov
mov
incb
add
add
popa
pop
pusha
or
lahf
mov
ljmp
mov
pushl
mov
test
call
sbb
mov
pop
decl
add
xchg
add
lahf
add
cmpsl
add
scas
add
jne
iret
dec
xchg
call
pop
pushf
fistpl
jmp
pop
mov
jmp
pop
mov
dec
cmpsl
mov
ret
cmpsb
xor
add
add
dec
pop
jl
jl
pushf
xchg
cwtl
jecxz
sahf
mov
pushl
mov
mov
lcall
sub
lcall
and
call
pop
lcall
add
mov
arpl
mov
xor
fsubl
jmp
insl
test
in
stos
call
jb
out
jno
call
cmpsl
mov
shrl
cmpb
add
add
dec
pop
outsl
outsl
insb
bound
lcall
mov
mov
mov
jmp
cmp
lcall
sub
xchg
or
pop
jmp
add
mov
fs
or
xchg
jmp
jns
ljmp
push
test
push
xchg
fldenv
mov
push
lcall
add
sub
push
push
dec
pop
gs
loopne
mov
mov
mov
ret
mov
pushf
jmp
inc
cmp
lcall
ljmp
add
mov
push
ja
fbld
in
nop
sar
xchg
ret
push
cltd
push
xchg
stc
lcall
notb
mov
lods
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
xchg
cmpsl
jmp
dec
test
mov
add
test
pusha
pushl
addr16
add
fsubs
cmp
hlt
mov
into
stc
stos
iret
sti
test
sar
lods
sar
cli
test
call
mov
stos
jne
popf
sahf
or
add
add
dec
dec
dec
aaa
je
jb
stos
test
int
lret
cmc
leave
lret
leave
leave
leave
std
enter
mov
bound
mov
add
mov
arpl
rolb
dec
add
fiaddl
jbe
jmp
xchg
std
mov
std
mov
xlat
cld
mov
xlat
mov
sar
ljmp
repz
scas
lods
mov
add
add
add
add
or
aad
dec
loope
jecxz
fsubp
fistps
fcmovnu
fsubr
shlb
cmpsl
sub
pusha
ljmp
add
lret
call
add
or
repnz
mov
std
loop
std
enter
leave
dec
loopne
dec
loope
std
out
mov
lret
mov
xchg
pushf
sahf
pushf
sbb
add
add
std
add
incb
ljmp
jmp
jmp
ljmp
xchg
mov
mov
mov
add
mov
inc
add
iret
add
faddl
jne
call
insb
mov
cld
ret
std
shl
shl
shl
call
out
xlat
out
std
xlat
call
push
xlat
fcmovne
sar
mov
mov
mov
add
add
incl
incb
cld
incb
aad
aad
mov
pop
xchg
sahf
or
ljmp
add
add
roll
outsl
fiadds
jne
out
pop
mov
stc
mov
shl
std
fsubr
std
fsubr
cld
fldl2t
cld
fsub
std
sti
aad
push
enter
rcl
sti
mov
popf
sahf
das
add
add
int3
int
or
arpl
lods
add
mov
add
add
loope
ja
out
xor
stc
lret
loopne
clc
leave
cmc
bnd
bnd
lock
in
aad
in
aam
in
shl
jecxz
fsubr
leave
mov
das
std
add
add
add
aam
push
mov
jae
or
insb
inc
sbb
int
jge
sub
sti
loopne
pushf
clc
loop
mov
out
in
lret
mov
lret
ror
ffreep
sarb
jecxz
ficompl
in
call
rorb
mov
add
stos
stos
stos
add
xchg
mov
ljmp
fidivrl
jle
rol
lods
mov
mov
ret
nop
rol
jge
int3
insl
aad
int
rcl
rorl
xlat
fdivrs
fisubrs
jecxz
fisubs
loop
lock
in
in
or
std
add
add
add
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
rcl
rclb
sarl
or
loopne
or
int3
int3
add
std
std
incb
std
add
add
add
int
pinsrw
or
int
int3
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
fwait
add
rol
enter
leave
leave
mov
rol
mov
scas
scas
mov
stos
stos
lods
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
lods
add
mov
jmp
aad
aam
rcl
sar
iret
iret
int
mov
mov
sarl
gs
pop
pop
add
add
add
add
add
add
add
add
jae
jb
addr16
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
rcl
dec
iret
iret
inc
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
jae
jae
xchg
adc
arpl
mov
addr16
jb
popa
bound
pusha
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
xchg
lds
jae
daa
and
add
add
add
jb
je
pushf
xchg
pushf
mov
test
mov
xchg
or
addb
dec
push
push
inc
mov
popf
into
mov
lahf
mov
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
movsb
test
test
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
popf
sahf
sahf
cmc
cltd
cwtl
cwtl
in
test
imul
jg
mov
xchg
testl
xchg
mov
jb
mov
scas
lods
push
lods
lods
lods
add
add
add
scas
test
xchg
xchg
xchg
lcall
cltd
fwait
lcall
cltd
lcall
mov
loope
je
out
xchg
bound
std
pushf
inc
jbe
cmpsb
ss
scas
sub
pushl
sbb
aaa
jge
mov
mov
imul
into
add
xchg
pop
scas
movsl
lods
test
sahf
sahf
lahf
jmp
movsb
cmpsb
call
jle
mov
decb
xor
mov
popa
call
or
mov
sbb
pushl
es
shll
inc
inc
test
rcrb
subl
jae
push
mov
movsl
cmpsl
cld
test
scas
scas
pushl
mov
decl
or
xchg
decl
pop
jmp
adc
ret
dec
ds
rolb
call
inc
mov
aad
xchg
dec
lcall
movsb
mov
add
push
imul
cmpsb
lahf
movsb
cld
scas
scas
scas
pushl
mov
movsl
call
push
arpl
nop
sbb
popl
pop
call
add
lods
add
mov
push
xchg
fstpl
loopne
mov
jmp
movsl
call
pushf
mov
mov
mov
test
cmpsl
pop
add
add
bound
adc
popf
fwait
fwait
cld
mov
mov
mov
mov
scas
lcall
jo
cwtl
and
call
add
add
mov
xor
out
mov
jmp
mov
lock
out
jle
fistpl
mov
and
add
add
dec
adc
imul
mov
mov
mov
ret
mov
fs
cmpsb
inc
jle
mov
add
pop
pushl
outsb
fmull
out
mov
push
xchg
push
cwtl
enter
jmp
movsl
inc
mov
movsl
sub
aas
aas
aas
adc
push
xchg
mov
mov
inc
sarl
ljmp
sbb
cmpsb
add
mov
gs
add
adc
ljmp
stc
stos
sar
sti
scas
sar
sti
lods
sar
std
scas
sar
jmp
leave
inc
mov
movsl
ds
incb
xor
add
mov
mov
rcl
mov
aad
rcl
out
lret
cli
mov
mov
jmp
add
ret
add
aad
jae
out
xchg
testl
std
rcr
std
rcr
std
rcr
icebp
mov
ret
in
test
addb
add
add
in
jmp
out
call
inc
loope
in
fisubl
movsb
outsl
ljmp
add
int3
add
fiadds
ja
out
aaa
xchg
cli
mov
cld
int
std
shl
call
in
call
out
std
shl
push
enter
int
scas
scas
scas
popa
cmpb
std
incb
std
push
int
shrb
mov
add
mov
add
loop
jns
cmc
push
movsl
std
loope
out
aam
std
aam
cld
aam
cli
shl
push
leave
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
les
mov
add
mov
or
fistps
cmp
imul
out
mov
into
repnz
loope
leave
aam
jmp
fcmovu
scas
push
lcall
add
popf
lods
xchg
dec
and
ret
int3
lret
ja
mov
fdivrs
lret
adc
int
fxch
rcrb
rcl
dec
jecxz
loopne
out
call
sbb
rol
add
mov
cmp
mov
lods
push
mov
mov
ret
mov
lds
ret
ror
fstp
fisttps
int3
int3
into
or
aam
push
std
incl
addl
add
stos
std
std
add
rol
incb
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
leave
scas
imulb
scas
add
cmp
inc
negl
dec
fnstsw
add
mov
sbb
in
cmpxchg
clc
out
cmp
push
dec
sahf
lds
inc
fwait
lea
cwtl
imul
push
iret
lods
inc
stos
lret
icebp
add
mov
mov
jle
jae
adcb
fwait
inc
inc
mov
enter
jo
out
ret
les
sub
mov
and
sbb
and
mov
negb
xchg
js
xchg
xlat
cmp
or
mov
shlb
fildll
addr16
sbb
mov
jg
jbe
cli
int3
sti
pop
lcall
fdivrl
shlb
mov
and
test
xor
sub
jne
jbe
push
mov
movsb
mov
roll
addr16
popf
pop
clc
and
mov
cmp
shl
dec
or
clc
div
clc
shlb
ficoms
cmp
adc
inc
adc
sti
push
push
sbb
dec
mov
test
rcll
lods
hlt
das
mov
or
dec
push
mov
sbb
xchg
add
test
mov
mov
sti
push
push
stos
mov
push
sub
int3
aam
fwait
dec
xchg
lcall
inc
inc
mov
adc
pop
cld
jmp
idiv
pop
pushf
xchg
adcb
test
scas
jb
popf
repz
shll
push
or
xchg
dec
dec
jno
adc
inc
xor
inc
adc
cwtl
push
ret
fistpll
pop
sbb
sub
add
xchg
in
cmpb
xchg
sbb
xchg
loopne
cmp
dec
out
push
bound
lret
push
lods
adc
xlat
xchg
pop
mov
insb
adc
pop
or
sbb
int3
mov
lahf
fnstsw
inc
les
ret
mov
jg
cmp
mov
sub
mov
mov
mov
inc
adc
xor
jge
out
stos
xchg
arpl
pushf
pusha
mov
mov
testl
push
sarl
and
push
ret
hlt
push
and
dec
fdivrs
mov
cltd
xor
rorl
stos
lret
add
adc
mov
pop
add
or
ljmp
pop
add
add
adc
data16
test
in
inc
popf
cmp
or
jg
leave
add
sub
mov
scas
aam
cmc
push
inc
or
fcmovnu
mov
call
xchg
jo
test
cltd
xchg
sub
enter
lret
mov
fsubl
pop
add
mov
scas
mov
ds
lods
outsb
pop
insl
out
pop
int
fdivrp
dec
fimull
add
and
pop
or
ljmp
adc
push
das
mov
push
dec
dec
adc
adcb
adc
push
in
inc
in
dec
stc
lea
pushf
xchg
adc
inc
or
and
mov
lods
inc
or
inc
std
pusha
lret
add
or
adc
jge
mov
lods
push
mov
popa
jmp
test
ss
insb
pop
push
mov
ret
mov
into
push
sbb
dec
fs
dec
cmc
sub
sbb
inc
out
mov
jns
call
lods
inc
mov
lret
mov
fldl
sbb
dec
sti
adc
cmpb
cmpsb
mov
call
clc
mov
out
fsts
jns
bound
pop
jbe
push
and
jle
or
fs
bound
shlb
xchg
adc
icebp
mov
inc
mov
sti
push
mov
dec
pop
mov
mov
addr16
sbb
mov
or
push
addr16
out
jg
sbbl
fcmovnu
sub
sti
jmp
lahf
adc
cmp
test
inc
ja
xchg
ja
mov
xor
push
enter
and
inc
jg
mov
mov
xchg
sti
das
imul
xlat
jg
xchg
aas
pop
jmp
imul
mov
pop
or
ud0
push
divb
jo
or
filds
inc
lcall
data16
sub
scas
ret
ret
adc
dec
addr16
fcompl
jno
pop
xor
push
pop
mov
in
xor
loope
push
sub
push
mov
stos
fimuls
subb
movsb
cmpxchg
mov
sub
arpl
icebp
int
cli
jl,pn
and
xor
add
orl
out
inc
lahf
xchg
or
pop
arpl
aad
aam
outsl
jno
lret
into
cmpsl
repz
insb
sub
mov
mov
sub
mov
xor
pop
jg
in
movsb
rcrl
shlb
sar
repz
push
push
push
or
pop
rorl
lock
mov
popf
mov
xchg
inc
or
push
cld
pushl
lret
or
dec
mov
jne
push
mov
lea
testb
lods
enter
dec
insb
mov
jp
jno
push
push
mov
stos
das
bound
int
mov
in
das
int3
fcmovbe
push
lock
mov
dec
cmc
add
jae
and
xchg
repz
sub
sbb
test
xor
shll
sub
repz
dec
es
pop
adc
sub
jecxz
outsl
addr16
xchg
fistpll
js
fldcw
popl
mov
jno
out
cwtl
push
mov
out
scas
arpl
fidivrs
mov
aas
lcall
hlt
in
sub
inc
jge
jno
popa
lcall
mov
push
jl
push
lods
push
popf
mov
iret
jne
icebp
cmpsb
lock
enter
inc
out
xchg
xchg
cs
xchg
or
dec
mov
rcl
repz
repnz
imul
cwtl
mov
push
in
shlb
insl
cwtl
inc
fmulp
mov
cld
sbb
mov
sbb
rcrl
mov
outsl
test
lret
cld
mov
add
sbb
mov
xor
push
test
ficompl
pop
rolb
push
js
in
and
inc
add
pop
cltd
and
add
mov
test
in
and
mov
cld
inc
add
dec
xchg
and
rcrb
xlat
pusha
mov
push
jnp
in
and
fnsave
add
and
repz
push
push
sub
cmpb
ss
dec
xchg
mov
xor
xor
lea
dec
scas
push
loopnew
aad
loop
out
xchg
add
mov
push
adc
fsubrs
leave
pusha
sub
dec
in
dec
out
orb
andl
and
and
daa
ds
ret
leave
lds
int3
addr16
cmp
mov
add
xor
mov
les
mov
pop
out
lock
xchg
jnp
ret
mov
sub
sub
das
push
xchg
pop
inc
in
jge
lds
nop
test
mov
add
adc
and
dec
mov
mov
ficompl
or
push
mov
sub
adc
cmp
xor
shlb
adc
and
cwtl
das
cmp
pop
mov
nop
lret
adc
jecxz
xor
dec
add
mov
outsl
dec
in
push
adc
repz
mov
inc
sti
dec
in
push
imul
mov
mov
rorb
out
inc
repz
ds
inc
les
mov
mov
lret
int3
and
push
pop
inc
ficoml
in
jno
jno
js
add
popa
jecxz
mov
sbb
mov
cmp
arpl
testl
pop
aad
push
or
test
into
dec
jns
dec
lods
and
push
rcl
push
jns
sbb
shlb
test
push
lds
movsl
adc
aaa
sub
gs
mov
daa
adc
adc
xor
push
call
mov
jge
arpl
jnp
rcrl
add
dec
loopne
and
push
xor
gs
out
xchg
adc
int
adc
fucom
ret
stc
dec
loopne
testl
flds
pop
sahf
jae
fnsave
repnz
int
js
push
aam
inc
mov
xchg
sub
aas
xchg
sub
rorb
mov
loopne
outsl
loopne
es
add
popa
je
and
sub
jne
lock
jno
or
push
add
fs
sti
sbb
into
gs
cmpb
jae
or
xor
and
popa
cmpsb
pop
pop
scas
pop
pusha
xchg
dec
add
das
mov
pusha
mov
or
movsb
fildll
push
add
aad
mov
pop
repz
aad
rorl
mov
pop
repnz
sbb
addb
inc
icebp
cmp
xlat
xor
in
add
decb
adc
add
lods
jp
popa
jp
aaa
xchg
mov
cmpsb
ss
scas
adc
push
sbb
add
sbb
push
or
aad
mov
lret
adc
sub
jmp
nop
jbe
mov
lods
xchg
cmp
mov
cld
xchg
jl
pop
push
ljmp
jl
or
ret
fs
jmp
xchg
sub
xchg
ds
ret
pop
xchg
sub
mov
pop
in
add
push
pop
pop
mov
pop
testb
int
addr16
mov
mov
mov
ret
hlt
and
mov
jno
pop
mov
negb
loop
imul
add
lret
mov
mov
shrl
add
mov
movsb
mov
movsl
cmp
cmp
outsb
mov
fdivl
lods
mov
pop
mov
ret
lret
xchg
cltd
xor
lea
dec
into
gs
push
mov
jg
jbe
pop
dec
icebp
mov
dec
dec
cli
in
lds
xor
fwait
xor
push
xchg
insb
or
pop
xchg
call
popa
clc
jns
test
ret
mov
mov
insl
lds
pusha
test
out
mov
sbb
outsl
push
out
cmp
pop
outsb
adc
pop
aas
dec
mov
iret
push
inc
add
clc
icebp
inc
inc
fidivs
mov
cmp
xchg
push
out
test
xlat
outsb
or
push
call
lcall
sub
sar
in
and
icebp
xchg
adcl
mov
or
cmpsb
inc
sub
test
pop
repnz
pushf
dec
in
push
pop
scas
push
push
pop
icebp
test
int3
push
movsl
xor
or
dec
sub
shlb
xor
mov
fidivl
mov
cs
imul
imul
stos
inc
loope
cmpsb
cmp
pop
xor
inc
stos
les
int3
ljmp
inc
sub
xchg
and
xchg
cli
xor
out
cmp
mov
fimuls
aad
gs
test
mov
lock
stos
inc
mov
dec
jecxz
insl
mov
xchg
sub
xlat
jno
add
mov
mov
ljmp
and
scas
test
push
adc
rcr
out
jecxz
inc
mov
fists
mov
cs
mov
jo
xlat
aas
jno
cmp
iret
ret
nop
je
in
add
aaa
fidivrs
loop
xchg
sub
add
xchg
pop
jecxz
nop
mov
inc
fadd
leave
push
out
add
jno
gs
into
adc
push
add
xor
mov
call
sub
dec
sbbb
pop
popf
xor
pop
or
dec
jne
push
mov
js
addb
push
sbb
inc
dec
ror
gs
outsl
lods
inc
pmaxub
mov
mov
mov
adc
mov
xor
jge
add
fs
add
push
cmp
fs
out
push
fucomp
adc
call
aas
push
out
xor
pop
jns
sbb
adc
push
xchg
adc
xor
in
mov
adc
sub
jne
pusha
add
sbb
ss
push
add
fs
dec
hlt
mov
cmp
lret
cmp
dec
mov
int
pop
sarb
stc
inc
fisubrl
pop
adc
xchg
andb
sbb
pop
call
mov
or
ret
hlt
hlt
repnz
sbb
out
lock
and
insl
rcr
mov
loope
and
out
mov
out
imul
sbb
lods
adc
jb
into
es
sahf
xor
mov
into
gs
call
pop
popf
icebp
fbstp
mov
fnsave
insl
add
fmull
jle
or
jno
scas
rclb
lods
inc
in
push
in
in
testb
sub
in
sbb
jnp
imul
fnstcw
in
sbb
rcrl
xor
jb
pop
out
jmp
test
inc
xlat
add
push
call
ret
movsb
adc
add
arpl
cli
sub
mov
imul
bnd
subb
or
jae
out
movsb
cmpsb
jmp
push
jmp
lock
sbb
mov
andb
mov
inc
gs
add
pusha
mov
stc
adc
adc
sbb
jnp
or
sbb
jns
mov
fsubl
lock
cmp
aam
mov
sbb
mov
cld
shlb
mov
roll
mov
call
push
inc
fidivrs
xsha256
cmpsb
xlat
push
shlb
js
jb
das
lea
mov
cli
inc
push
popf
xor
dec
ret
test
push
ret
pop
mov
js
out
add
xchg
bound
scas
sbb
push
fwait
cmp
stos
imul
in
xor
sub
out
popa
clc
and
cwtl
xchg
ss
cmpsb
cmp
jge
dec
or
push
xor
pop
push
push
or
addr16
or
jge
xchg
sub
pop
adc
mov
mov
sahf
and
outsl
xchg
ss
hlt
test
mov
sub
jp
es
in
xchg
xchg
sub
clc
out
insl
mov
hlt
mov
ret
insb
add
adc
test
outsl
push
icebp
clc
xchg
sub
adc
gs
fs
popf
xor
testb
popa
dec
lret
bound
pop
adc
ss
jns
stos
ret
pop
push
adc
js
shrl
mov
das
repz
das
pushf
adc
dec
cmpsl
mov
mov
shrl
lret
hlt
mov
mov
loopne
push
in
fnstenv
in
cmp
in
fidivl
push
fnsave
popf
xor
leave
lahf
ss
cmpsb
into
gs
fidivs
and
aaa
push
xchg
jecxz
das
jns
jb
push
xchg
sub
popf
xor
jbe
pop
dec
popa
fbstp
insl
testl
arpl
gs
and
push
in
pop
orb
stos
cmp
fsubl
push
ljmp
jno
lret
inc
cmp
out
test
fbstp
in
push
xchg
inc
cmp
insl
add
cmpsb
jp
push
imul
cmp
add
jae
fwait
xor
mov
pusha
clc
dec
push
call
xchg
mov
fidivs
or
mov
ret
and
and
fs
pop
out
sub
and
push
mov
mov
je
adc
inc
cmp
push
stc
nop
in
sub
dec
push
jl
cmp
shlb
addr16
repnz
sarl
pusha
testl
jae
stc
pop
cs
movsl
xor
mov
mov
mov
pop
in
or
test
or
push
lods
lahf
movsl
test
lcall
sub
xchg
into
pop
dec
xchg
pop
aad
cmc
pop
jae
out
ds
pop
push
stc
push
ds
aam
daa
mov
push
cmp
orl
sti
aas
imul
jmp
jbe
add
in
add
inc
fadds
or
adc
mov
dec
pop
rorl
mov
call
insb
scas
push
inc
fmuls
repz
jmp
mov
cmp
cmp
insb
test
loop
nop
popf
stos
addr16
lds
out
jae
and
out
ficoms
cmc
das
inc
fldenv
mov
ljmp
sub
dec
mov
ljmp
cmp
fstl
xchg
insb
mov
adc
test
pop
cmc
sbb
not
addr16
fstpl
pop
jbe
pop
xor
mulb
gs
jo
jae
inc
movsl
jno
std
in
inc
sub
jl
sbb
aas
pop
cs
aas
cli
leave
lods
xlat
add
xor
inc
jo
push
call
cmp
hlt
push
das
movb
add
xor
sbb
sahf
xor
movsb
cmp
adc
cmp
jbe
pop
fsubs
mov
mov
and
lahf
mov
enter
or
cli
and
leave
mov
and
mov
pop
dec
dec
xchg
mov
ror
cmpsb
dec
inc
clc
lret
add
call
leave
adc
or
inc
stos
inc
jb
inc
shll
jp
cmp
inc
jo
jno
cltd
xlat
xor
insb
icebp
jns
xchg
jne
jge
cmp
imul
and
lods
adc
bound
es
aad
pop
xor
test
add
dec
push
cs
inc
sub
cld
xchg
lods
xchg
cmp
mov
xchg
and
xor
dec
insl
xor
lea
sub
scas
fldcw
fwait
mov
xchg
fists
lret
add
pop
rcrl
arpl
mov
xchg
shrb
xor
sbb
jmp
mov
add
pop
sub
push
cmp
cs
pop
add
or
repz
jl
dec
mov
scas
inc
add
test
daa
and
add
ficoml
pop
cmc
inc
sti
mov
fsubrl
and
cmpsl
stos
pop
lock
sbb
ror
inc
ret
jmp
add
lods
sbb
jp
scas
cmp
imul
mov
and
insl
inc
and
sbb
dec
and
and
mov
dec
pop
dec
fnsave
xchg
popa
push
das
fidivrl
repz
dec
bound
flds
push
aaa
and
dec
xchg
jns
pop
inc
fs
inc
nop
std
jnp
orb
adc
out
lret
or
jecxz
sub
sub
ss
xor
stc
nop
lret
pop
in
xor
sub
mov
jb
inc
inc
std
mov
adc
je
cmp
push
sti
sub
and
rolb
push
out
cmpsb
lock
or
and
mov
and
inc
out
mov
sbb
add
cmc
movsb
and
out
sbb
divl
cs
iret
xchg
xorl
cmp
rorl
mov
rol
fldenv
and
into
mov
sbb
and
pop
andb
cmp
in
fs
pop
call
xor
scas
fisubl
ljmp
and
mov
mov
mov
bound
iret
ds
xchg
add
in
testb
movsb
mov
pusha
mov
xlat
push
loopne
sbb
jecxz
ljmp
jae
inc
xchg
ljmp
lret
daa
mov
sti
loope
ror
sarl
in
mov
shrl
and
xorb
ljmp
orl
xor
clc
xchg
xchg
pushf
cmp
pop
in
test
aam
stos
jecxz
dec
dec
je
and
cmp
pusha
xor
mov
and
cs
mov
pushf
ret
adc
loope
sti
in
dec
bound
xor
out
and
or
cmp
xchg
or
xor
push
outsl
test
cmp
popf
shl
dec
xchg
dec
xchg
xchg
out
out
test
scas
shll
gs
ss
sbb
adc
push
das
jmp
stos
sbb
aad
cmp
or
call
xor
shll
mov
fidivl
cmpsb
hlt
fistpll
outsb
jge
or
add
push
mulb
movsb
sub
mov
rorb
mov
jne
mov
fcoml
push
sti
xchg
test
das
arpl
imul
adc
sbb
cs
aas
fidivl
mov
addr16
push
insb
jle
sahf
cmp
lods
sub
pop
sahf
mov
and
sub
mov
xchg
ss
mov
cmpsl
mov
mov
das
pop
xchg
xor
stos
std
cmp
inc
cs
add
push
call
pop
imul
jb
rorb
xchg
mov
sahf
scas
mov
ficoml
mov
outsb
ja
std
xchg
into
cwtl
cmc
mov
mov
push
xchg
mov
inc
subb
outsl
push
andb
jle
and
out
jmp
loope
jge
ja
lds
les
in
xchg
push
jbe
xchg
jl
pop
mov
dec
jne
mov
cltd
adc
inc
mov
or
add
or
cmp
inc
jg
mov
int
mov
stos
mov
cmp
adc
stos
xor
xchg
nop
mov
mov
sub
hlt
pop
aam
pop
dec
mov
aam
lock
mov
cmp
imul
lock
into
mov
push
fcmovne
fucomp
into
adc
dec
mov
or
xor
mov
or
fscale
fwait
xor
sti
fisubl
mov
xchg
mov
jae
push
jecxz
cmp
mov
or
mov
lea
and
jnp
imul
in
jae
add
cmp
adc
and
rol
adc
loope
ljmp
sub
mov
pop
mov
les
addr16
mov
mov
lods
ficoms
test
cmp
push
rorl
gs
pop
hlt
stos
cwtl
xor
push
hlt
cmc
sbb
or
and
cld
mov
shll
shl
cmpsb
mov
fnstenv
add
adc
mov
inc
cltd
xor
push
fidivs
arpl
jp
and
cs
pop
out
call
push
imul
sub
sub
cmpsb
cmc
push
call
pop
or
ja
mov
movsl
and
push
mov
repz
outsl
push
test
divl
inc
mov
jae
in
sbb
out
scas
push
into
mov
ss
imull
mov
andl
mov
jl
enter
out
out
out
adc
cwtl
pop
jo
nop
xchg
insl
lgs
fdivrl
pushf
mov
xchg
leave
add
lahf
shl
sbb
dec
hlt
add
mov
popa
and
mov
roll
cld
mov
mov
adc
outsb
in
sbb
inc
pop
cmc
mov
mov
adc
pop
xchg
or
mov
mov
ljmp
inc
out
lods
lock
jg
push
sub
cmpsb
mov
push
xchg
xchg
cmp
popf
ljmp
lds
and
adc
and
xchg
stc
cltd
inc
sub
jmp
fistps
jge
test
mov
ret
fisubrl
lock
clc
and
loope
cmp
js
push
pop
dec
in
inc
and
inc
cmc
and
inc
xor
sub
insl
or
dec
loope
inc
inc
xor
fcoml
push
push
add
ffreep
repz
bound
pop
dec
jle
call
and
sbb
mov
mov
mov
addr16
dec
movsb
faddl
lret
adc
pop
adc
pushf
in
cmp
cmp
xor
push
push
add
add
das
cwtl
outsl
cmpsl
sti
dec
loope
leave
mulb
out
je
lock
mov
cmp
xchg
stc
mov
sti
push
movsl
leave
sarl
popa
aaa
pushf
mov
lock
add
insl
xchg
cmpsl
mov
aas
insl
hlt
xor
hlt
mov
xor
sub
insb
cmp
rclb
cs
pop
xchg
rclb
mov
jnp
push
cmp
jmp
or
out
call
fldl
shl
adc
fdivl
or
mov
push
repz
add
pushf
loop
in
mov
xor
lds
ds
insl
xor
arpl
dec
inc
rorb
mov
mov
or
mov
dec
mov
jg
gs
jle
test
jg
jg
xchg
je
mov
or
and
insb
xor
pop
popa
subl
add
xchg
inc
lods
push
sub
dec
in
rorb
mov
out
and
loopne
movsl
jge
lock
jno
ret
add
inc
call
inc
inc
dec
test
out
ficoms
push
int
repnz
cwtl
vandps
inc
ds
jo
mov
mov
fsts
pop
inc
shrl
jnp
dec
dec
mov
lcall
dec
add
fwait
sub
dec
mov
and
inc
adc
enter
sbb
js
lods
enter
dec
sbb
int
pushf
insl
into
push
jl
jge
xlat
jbe
sbbl
iret
mov
add
pop
fildll
ds
dec
ret
lret
sub
cmp
sbb
and
je
icebp
lret
mov
ret
cs
mov
add
dec
mov
xor
lds
dec
dec
imul
xor
nop
sub
xchg
xchg
push
push
mov
jno
inc
into
fsubr
mov
mov
mov
int
push
decl
jb
jg
mov
int
push
lock
xchg
sub
cwtl
cmp
or
outsl
inc
xor
xchg
ja
movsl
repz
mov
add
out
push
scas
lcall
mov
jno
pop
cmp
ja
xchg
daa
cmp
ljmp
adc
push
sti
decb
cmp
ret
mov
xor
or
fldl
inc
shl
rolb
jns
out
fdivs
insb
nop
ret
popf
mov
jl
into
gs
hlt
xchg
js
jg
xor
imul
xchg
lock
lock
push
daa
movsl
push
loopne
mov
or
in
pop
pop
mov
cmp
sub
xlat
dec
pushf
xor
outsl
or
js
inc
stos
cli
xchg
pop
loop
fwait
outsl
jb
scas
lea
push
mov
std
pop
ds
or
jl
mov
jg
add
sbb
ljmp
mov
cmovp
mov
daa
sarb
pop
cld
fwait
add
push
call
stos
xlat
shll
mov
sub
mov
imul
je
imul
jbe
pop
cmpsb
out
mov
lds
mov
ret
xor
repnz
imul
and
cmpsb
mov
inc
out
out
lods
out
rcll
je
pop
or
test
sbb
fs
shll
or
loopne
out
ss
addr16
dec
shrl
adc
push
xchg
loopne
aad
sbbl
repz
xlat
xor
stc
testl
push
popf
xchg
outsl
les
xchg
jle
mov
sbb
imul
mov
xor
add
in
pop
inc
sbb
clc
sbb
fstl
in
jl
push
dec
cmpsl
xchg
movsl
mov
xor
or
popf
insl
insl
xor
jg
xchg
mov
les
pop
fdivl
pop
insb
rcl
repz
loopne
cli
lds
push
mov
mov
lret
jbe
or
add
xchg
rcll
pop
nop
cmp
xlat
pop
or
xchg
pop
bound
sub
lds
xchg
add
xchg
iret
push
rcrl
mov
cmp
in
push
inc
mov
dec
cwtl
lahf
cmpsl
ds
fmul
jl
push
cmp
jbe
and
stos
xchg
fs
pushf
addr16
pushf
sbbl
push
add
jne
cmp
test
sbb
sub
dec
loope
das
add
mov
and
mov
pop
and
in
lahf
lds
movsl
fidivs
inc
xor
and
jmp
je
mov
ret
cltd
js
mov
aam
jle
xchg
jmp
popf
xor
or
mov
add
loop
repnz
inc
adc
or
push
fsubp
mov
sbb
inc
inc
fdecstp
cld
out
sbb
clc
or
in
or
xchg
rorb
in
ret
mov
ret
xchg
in
sbb
mov
pcmpeqw
lcall
cmp
push
lcall
in
add
movsl
fdivrl
roll
xchg
movsl
test
outsb
sub
pop
gs
mov
es
scas
lcall
out
fildl
push
js
cmp
out
pop
scas
inc
or
mov
dec
sbb
mov
xchg
or
pop
mov
ljmp
rolb
ljmp
xlat
cli
mov
test
cltd
xorb
rol
or
aas
mov
jns
push
mov
out
adc
bound
jmp
or
shlb
ret
sbb
inc
movsb
imul
dec
jae
subb
mov
ja
cmp
nop
mov
push
xchg
push
test
pop
negb
jns
psubb
mov
or
les
push
cmpsl
jns
stc
in
test
xor
rol
movsl
shll
add
mov
or
imul
les
jnp
ficompl
xor
shrl
cwtl
rorl
pop
repz
push
pop
mov
les
cmc
lcall
mov
fnstenv
adc
xchg
jb
jae
fsts
loopne
lock
adc
push
fildll
or
jmp
xor
or
out
test
idivb
adc
rorl
lret
out
std
out
pop
out
mov
or
lret
inc
mov
add
xchg
push
loopne
xor
lea
adc
cmpsl
dec
xlat
sbb
mov
aas
loop
lods
pop
ret
push
mov
inc
popa
xlat
daa
gs
ss
sub
dec
lcall
lahf
fidivl
ljmp
enter
add
sbb
mov
gs
mov
mov
adc
je
lret
add
rcl
out
pop
das
fdivs
sbb
lcall
lea
rorb
repnz
and
imul
xchg
mov
sahf
ljmp
dec
dec
and
iret
subl
in
adc
int3
arpl
aad
cld
pushf
pop
repnz
sbb
xchg
jo
or
shl
sbb
and
inc
data16
js
push
in
stc
lods
pop
mulb
das
or
lock
and
xchg
cmp
mov
fs
fsts
inc
fistl
push
jmp
cmpsl
lret
cld
enter
mov
imul
mov
int3
ficompl
leave
pusha
jge
scas
xchg
xor
sbbl
jno
decb
in
pop
pop
inc
les
out
ss
aaa
icebp
popa
ja
cmp
inc
xlat
inc
push
and
bound
sbb
xor
jae
test
xor
mov
rolb
insb
lcall
xchg
sahf
int3
arpl
scas
add
stc
aad
jns
mov
fwait
mov
adcl
loopne
add
pop
movsl
rorl
pusha
loopne
xor
add
sbb
ds
lcall
push
jnp
jl
test
sub
test
or
lahf
add
push
in
mov
lock
xlat
and
add
mov
test
out
int
dec
mov
shlb
ret
pop
adc
dec
hlt
sti
xchg
jmp
or
mov
ljmpw
loope
jnp
outsl
dec
test
in
inc
xchg
jg
jp
sahf
pop
dec
rcrl
xchg
inc
jno
mov
push
popf
xor
js
xchg
inc
mov
out
xchg
and
rcll
es
xchg
mov
cmp
push
rcr
jbe
and
loop
cli
dec
in
cmpsb
ljmp
mov
pop
scas
mov
stc
nop
push
mov
lods
and
daa
jnp
xchg
cmp
pop
lods
iret
fnstcw
ljmp
adc
and
inc
sbbl
out
aam
mov
cli
xchg
push
xchg
sub
cmp
push
lods
out
ja
ret
call
out
and
daa
je
lret
jno
pusha
popa
cmp
dec
lcall
mov
cmp
xor
mov
push
cmpsl
ds
push
push
mov
cli
push
xchg
out
ss
push
push
jno
dec
scas
andl
pop
push
push
bound
test
mov
mov
or
stos
push
lods
xchg
push
sub
pop
pop
xchg
in
sbb
push
popf
inc
mov
jbe
andb
das
pop
mov
aad
gs
das
in
sub
dec
aaa
fcoms
stos
or
insb
mov
xor
pop
lods
repz
jl
out
call
test
iret
insl
add
push
das
movb
dec
in
jne
inc
cmpsl
imulb
sub
pop
sti
dec
mov
jnp
out
mov
or
dec
cmp
cs
cli
into
mov
pop
into
lea
jne
jbe
cmpsb
dec
mov
pop
sahf
xchg
iret
sti
int
sbb
popa
mull
dec
stos
sti
outsb
dec
jle
mov
outsl
mov
cwtl
sbb
and
xchg
fdivrs
push
pop
xor
test
andb
mov
adc
in
adc
add
dec
jmp
aas
les
pop
das
jne
push
xor
xchg
and
hlt
aaa
and
loope
aam
dec
inc
dec
imul
daa
movb
lock
dec
bound
lock
xor
xor
in
fwait
push
mov
cmp
xor
mov
xor
pop
jns
loop
inc
lcall
or
jmp
clc
sub
mov
xchg
inc
fstl
fs
loop
jno
sbb
cmp
xor
aad
mov
imull
push
mov
mov
jbe
aad
nop
shrb
std
xchg
repz
sbbl
jns
testl
mulb
mov
cs
in
popf
cs
dec
sub
scas
mov
add
xchg
and
cli
aad
mov
cmp
mov
pusha
adc
sbb
dec
and
pop
push
out
lds
add
push
push
mov
stos
mov
icebp
sub
mov
sbb
dec
fistpll
test
pop
rcr
adc
fs
insb
cld
mov
cltd
push
imul
mov
jbe
mov
sbb
in
lods
cmp
add
push
out
push
dec
jl
lcall
lcall
push
sub
cmp
xorb
dec
lods
xchg
or
pop
repz
adc
jge
dec
icebp
test
push
xchg
xchg
rol
popf
xor
mov
ja
push
outsl
and
in
pusha
pushf
push
addb
std
clc
jae
sahf
xchg
mov
cmp
mov
adc
pop
jmp
xorl
jb
jo
or
or
cmc
xor
sub
cwtl
inc
or
mov
ror
xor
inc
int
les
arpl
lea
dec
sahf
ja
addb
test
ss
leave
adcl
bound
sahf
xor
test
aas
cmpsb
frstor
push
fstl
mov
call
jecxz
fwait
cmpsl
cld
sub
out
jmp
cmp
mov
idiv
cmp
and
pop
addr16
pop
scas
test
dec
xor
mov
add
mov
add
icebp
iret
out
jmp
mov
xchg
cmpsl
push
mov
addr16
xor
loop
bound
inc
dec
test
dec
jne
lods
cmp
sti
mov
outsl
rclb
leave
rorb
dec
sub
std
sahf
loopne
addr16
cmp
xor
notl
popa
add
sbb
adc
scas
inc
and
mov
gs
rorb
iret
sub
call
cmp
pop
pusha
adc
push
xchg
shrl
adc
sbb
lds
clc
sahf
shrb
add
subl
fsubs
data16
lret
xchg
add
jl
data16
add
stos
iret
clc
mov
inc
sbb
arpl
into
pop
ja
adc
aad
gs
fsub
ret
vpmuludq
fs
and
test
fstpt
ljmp
jge
pop
shr
aam
xchg
insb
scas
adc
or
jbe
mov
adc
mov
std
jo
add
add
nop
dec
leave
into
sub
mov
cmp
mov
inc
leave
xchg
inc
mov
add
es
data16
lret
inc
add
fisubrs
ret
cmp
cwtl
jmp
movsb
cmp
repz
xor
popf
xchg
ficomps
outsl
arpl
jne
psllw
dec
rcrl
and
push
add
push
xor
fcomp
in
push
mov
fildl
popa
clc
push
popa
fdivl
dec
jecxz
mov
jl
ljmp
repnz
gs
lods
dec
mov
imul
outsl
pop
mov
jp
inc
fisttpl
sbb
jl
out
cmpsl
sahf
cmp
andl
in
push
push
xor
nop
mov
insb
mov
shrl
fcoms
cmp
xor
sbb
cmc
cmp
cmp
and
adc
sahf
icebp
daa
dec
lds
push
popa
adc
add
imul
in
xor
xchg
rep
adc
imul
sbb
test
pop
pop
test
mov
jb
jecxz
stc
and
subb
and
lods
std
sub
aas
push
and
add
jg
adc
inc
test
loopne
fidivs
xor
dec
dec
jbe
sbb
add
cmpsl
jns
jnp
mov
xchg
test
pop
pop
hlt
mov
mov
loope
cmpsb
jmp
push
movsl
test
sub
xchg
das
loopne
pop
jmp
icebp
cmp
movsb
push
or
xchg
sub
pop
add
sti
xor
inc
add
or
jecxz
popa
and
lods
dec
mov
scas
test
or
fwait
test
ja
push
jecxz
jecxz
gs
ds
adc
lea
test
aaa
push
cs
stos
adc
mov
andl
inc
cmpl
and
jno
rcrl
mov
xchg
pop
mov
fldl
or
cs
call
subw
push
rolb
aaa
pop
sub
daa
inc
std
and
push
fdivrs
mov
std
lea
enter
test
jmp
or
sahf
repz
shrb
sub
sub
divl
push
out
mov
and
outsb
adc
push
sbbb
loop
nop
daa
daa
mov
sbb
jns
fwait
xor
adc
lods
jp
test
mov
outsl
daa
pop
sbbl
or
push
xor
add
and
cwtl
pop
in
jp
aam
aad
out
call
cld
mov
ud0
push
xlat
in
dec
and
mov
mov
iret
jbe
cli
xor
bound
cmpsl
mov
cmc
dec
sub
sub
aas
imul
cltd
add
fwait
mov
sub
dec
and
das
pop
mov
jns
jmp
add
mov
jb
push
add
jne
push
push
sahf
push
xor
cmc
insl
subl
cltd
xor
push
leave
mov
out
inc
cmp
jb
cmp
cltd
iret
data16
sub
icebp
and
stos
insl
cmpsl
ds
int
cmp
cli
cmp
xchg
lahf
push
shll
pop
clc
inc
xchg
imul
mov
pop
outsl
loop
and
mov
mov
cmpsb
adc
repz
dec
add
hlt
hlt
fsubrp
scas
mov
hlt
in
inc
arpl
ret
push
popf
test
and
add
inc
fldcw
mov
sub
je
imul
popf
imul
lcall
sbb
pusha
addr16
cmp
dec
in
pushf
pop
divb
jg
mov
sub
sbb
dec
fwait
in
pusha
mov
jmp
cmp
adc
xchg
xchg
adc
out
cmpsb
mov
das
and
xchg
in
pushf
jbe
cld
or
in
cmp
sub
call
cli
aad
hlt
jno
in
sbb
mov
aas
fwait
pop
jecxz
hlt
arpl
aad
cmp
mov
test
push
cmp
lods
std
test
pop
xchg
sub
stos
fcmovbe
dec
mov
jle
fdivrl
cmpsl
sub
call
add
jo
sbb
push
sti
or
ror
jae
outsb
jae
cmp
pop
jo
or
mov
cmpb
xchg
notl
repnz
rorl
jmp
lret
push
jo
or
das
mov
sbb
lahf
pop
pop
leave
cmp
push
addr16
test
sub
dec
je
pop
ror
int
cmp
pushf
push
test
sbb
add
sbbl
hlt
fcomps
adc
pushf
cmpsb
testl
in
pop
lods
inc
aaa
lret
nop
push
cmp
xlat
mov
popa
cld
inc
and
icebp
gs
stos
cmpsb
fldpi
pop
enter
ret
mov
pop
scas
ss
jno
scas
xchg
dec
stos
jno
movsb
call
push
int
xchg
mov
out
out
rclb
out
cld
mov
sbb
or
inc
mov
lea
popa
push
out
push
or
hlt
inc
jo
fidivrs
outsl
aas
int
mov
cmove
push
sub
in
xchg
or
cmpsb
roll
inc
dec
jnp
leavew
addb
ljmp
xchg
pop
add
cmp
sub
ljmp
lods
rcrb
mov
cmp
jp
popa
jno
pusha
mov
adc
pop
popa
sub
stos
mov
or
mov
cmp
mov
mov
push
ss
lret
xchg
cs
test
pop
inc
divb
clc
sbb
subb
adc
fnsave
das
movsl
jnp
cltd
or
cmpsl
mov
popf
mov
push
jle
sub
data16
and
inc
les
cltd
divl
aad
or
stc
pop
movsl
insw
xor
ss
rcrb
cmc
mov
decb
test
sbb
aad
adc
lock
xchg
dec
jge
adc
fdivrs
ffreep
in
xchg
sbb
mov
int3
ljmp
mov
cwtl
das
mov
lea
stos
mov
inc
xlat
sub
push
leave
pop
mov
push
std
pop
xchg
mov
insl
cmpl
pushf
jne
xor
mov
gs
shrl
jg
sar
loop
and
push
jecxz
or
xchg
add
aaa
xchg
jle
add
cmp
subl
dec
pop
xchg
sarl
mov
iret
rcrb
scas
sbb
sbb
in
sbb
movsb
push
pusha
mov
add
inc
pop
repz
push
mov
loop
lods
mov
fisubs
push
in
inc
fwait
dec
lds
into
inc
xchg
cmc
andl
xlat
pop
inc
lods
lret
clc
inc
inc
stos
dec
lods
inc
jp
loope
insb
mov
lods
mov
jns
and
mov
cmp
and
das
stos
fisubl
adcl
notb
fidivl
fdivrs
rsm
jle
cld
mov
xchg
cs
shll
adc
int
push
jb
sarb
and
xchg
jo
pushl
mov
insl
sub
adc
sbb
lods
mov
hlt
xor
lea
add
bound
into
mov
pop
mov
es
pop
neg
rorl
and
push
xor
andl
mov
pop
dec
mov
jge
add
and
test
mov
lcall
nop
mov
cmp
aam
in
push
mov
hlt
inc
in
dec
popf
sbb
nop
xor
fwait
add
bound
repz
pop
push
mov
fst
cmc
in
cmp
stc
pop
jmp
push
xchg
aad
loop
ret
outsl
pop
mov
mov
pusha
out
xchg
jbe
mov
and
xchg
mov
push
xor
cmpsb
add
fcompl
lods
inc
push
popf
fxch
cmp
bound
ljmp
cmc
sbb
inc
out
sbb
imul
mov
insb
add
test
jb
shl
hlt
lods
stc
xchg
or
xor
inc
jnp
data16
jmp
fdivl
mov
std
dec
jge
jg
lret
sbb
hlt
push
or
int3
dec
or
dec
jo
jnp
rclb
imul
sti
loop
and
adc
aaa
mov
iret
cmc
push
push
pop
lret
xlat
lea
insb
adcl
add
call
mov
pop
xchg
lcall
sub
mov
push
aad
loopne
mov
and
fstl
mov
lret
into
sti
shll
xlat
nop
and
rcrl
in
arpl
aad
xor
insl
sbb
cwtl
jae
and
sti
int
fists
out
mov
imul
insl
mov
les
in
test
mov
pop
prefetchw
cmp
orl
repz
mov
push
test
jecxz
cli
xchg
add
mov
pusha
mov
in
jns
movsb
test
sbb
mov
shl
add
push
rcrl
sbb
sbbl
or
adc
enter
movb
jl
adc
xchg
stc
add
out
xchg
sbb
or
xor
mov
jno
inc
inc
add
inc
fmull
xor
push
in
pop
mov
push
out
xchg
xchg
push
adc
or
mov
push
or
pop
adcb
mov
jo
aas
loope
mov
sub
xchg
dec
or
rclb
fwait
movsb
sti
push
jnp
xchg
inc
xchg
push
jmp
adc
xchg
jo
stos
clc
mov
mov
in
jbe
std
imul
scas
xchg
push
push
loope
mov
dec
fwait
popf
inc
push
sub
jne
mov
sarb
scas
add
mov
lcall
push
ret
xchg
js
imulb
mov
aaa
mov
arpl
xchg
mov
aaa
leave
xchg
mov
mov
int3
notb
ss
jnp
mov
imul
lds
xor
repz
cmp
lret
rolb
ljmp
adc
call
cmpsl
roll
adc
testl
mov
jnp
push
ljmp
inc
scas
sub
sub
test
or
mov
push
sbb
movsl
ret
add
test
adc
cmc
clc
fs
adc
mov
arpl
out
mov
sub
pop
bound
jp
pop
mov
movsb
js
add
pop
push
adc
cmp
cmp
cmpsb
idivb
push
ljmp
icebp
or
pop
sub
lods
mov
xor
out
aam
addr16
loop
scas
lcall
dec
xchg
ss
and
cmpsl
dec
aas
es
xchg
dec
les
xor
pushf
sti
cmpsb
mov
add
xchg
int3
mov
aad
stos
mov
xor
decl
mov
or
out
popl
shl
loopne
pop
xlat
es
aam
mov
add
in
shlb
andb
jo
pop
scas
mov
cmpsb
add
cmp
pop
push
hlt
imul
or
sub
or
fstl
repnz
hlt
cmpsl
mov
inc
out
inc
xor
enter
out
add
outsb
es
jecxz
int3
push
call
mov
out
inc
rclb
jp
add
movb
mov
add
add
cmpsb
pop
xor
aaa
pop
push
rcrb
cmp
sbb
inc
ret
sub
inc
mov
pop
in
cmp
fisubl
mov
int3
sub
imul
add
and
fisubrs
std
sub
gs
mov
xchg
dec
loopne
and
rcrl
mov
int3
loope
pop
shrl
cs
addb
pop
inc
add
lea
in
orl
out
cmpsl
testl
loope
in
jae
and
xor
add
in
push
cmp
adc
fs
outsb
mov
jl
jo
mov
dec
push
mov
pop
movsl
cmp
pop
dec
lock
add
shl
sbbl
movsb
push
mov
aas
lret
push
and
lret
lar
scas
lods
and
cwtl
and
xor
sub
adc
push
sbb
lods
push
mov
repnz
jp
cmc
cmp
cmp
jg
call
mov
pop
fdivr
movsl
aas
rorl
pop
repz
mov
push
cs
xor
or
cld
cmpsl
mov
adc
test
jl
push
test
push
push
inc
or
shrb
int
pop
adc
fcmovu
mov
sti
cmp
mov
into
mov
shrl
lahf
js
cwtl
ja
ds
mov
pop
std
dec
xchg
push
addr16
std
pop
sub
decb
and
addl
pop
dec
inc
in
insl
mov
adc
push
iret
int
fiaddl
and
fistl
or
pop
mov
fwait
sub
cmp
shlb
sub
mov
jg
das
gs
xor
pop
cmpsl
cmp
and
push
adcb
or
test
or
mov
outsb
into
mov
push
jo
add
sarl
sub
test
mov
xor
jno
lea
enter
popf
adc
daa
inc
outsb
pop
pop
adc
or
cmp
ret
pop
dec
xchg
cmpsb
cmpsl
mov
mov
imul
jo
enter
lahf
or
adc
mov
push
xchg
int3
xor
and
fmull
add
rol
sti
or
addr16
mov
pop
mov
push
sarl
lret
adc
add
dec
sar
mov
add
gs
push
enter
cltd
sbbl
sbb
sbb
dec
call
sub
mov
ret
push
fs
loop
inc
sbb
stc
add
cs
pop
lock
push
std
stos
lds
scas
adc
jno
mov
aam
lret
mov
inc
sbb
push
call
int3
cwtl
outsl
push
lret
pop
lods
xor
or
std
sahf
or
icebp
sbb
sbb
inc
rcll
mov
data16
ljmp
dec
popa
orl
add
bound
sbb
mov
sbb
addr16
pop
into
mov
add
cmp
sub
mov
fsubrs
test
add
or
sahf
sub
leave
xor
mov
cmp
icebp
cmp
inc
scas
jmp
mov
out
pop
lret
adc
push
and
out
mov
jmp
push
out
jb
push
and
adc
stos
sahf
fcomps
jo
sub
pop
mov
xchg
mov
out
int3
pop
adc
pop
ljmp
sbb
fcomp
test
imul
rorb
push
ja
jmp
adc
inc
int3
fs
mov
mov
fimuls
clc
or
xor
mov
psrlq
ljmp
cmp
and
imul
pop
aas
ds
mov
mov
sub
test
cmp
or
push
push
fs
stc
repnz
loope
push
loopne
adc
rcl
movsb
mov
mov
xchg
or
ret
jge
xor
scas
inc
fmul
jl
orb
push
mov
pop
push
femms
shrb
or
mov
and
testl
ss
int
inc
jge
test
mov
xor
mov
mulb
xchg
cmpsb
pop
push
mov
mov
mov
addr16
scas
pop
jle
dec
xchg
xchg
xchg
xchg
insl
rorl
pop
and
test
ror
xchg
bound
push
iret
lcall
sahf
cld
cmp
inc
or
mov
loop
pop
push
cmp
ds
sbb
jne
mov
add
mov
repz
dec
lret
adc
lea
push
sbb
mov
inc
lcall
addr16
loope
adc
mov
dec
adc
mov
repz
cld
lods
gs
xchg
adc
mov
pop
cmpsb
in
es
pop
and
ja
lods
ljmp
pusha
cmp
mov
dec
xor
cmp
sarl
stos
in
sbb
xchg
popa
cmp
cli
out
andb
adc
js
ss
push
jge
fistps
push
insl
lret
movsl
das
or
mov
push
xchg
bnd
sbb
jg
mov
jg
push
std
xchg
inc
gs
bound
sub
mov
cmpsl
xchg
adc
lahf
or
fs
jns
mov
fsubl
pop
pop
icebp
lea
in
or
xchg
aas
push
xchg
push
movsb
loope
in
mov
mov
fwait
lea
ljmp
or
adc
push
or
data16
shrb
imulb
mov
dec
out
mov
mov
out
add
mov
dec
aad
aad
roll
int
enter
or
aaa
movd
xchg
add
fcomps
ss
or
add
cmpsl
jle
inc
pop
ljmp
mov
xchg
mov
int
jb
jle
test
mov
shrb
mov
jne
fldcw
push
sahf
and
mov
lret
pop
inc
fstpt
xchg
in
outsl
mov
inc
insb
mov
adc
in
mov
dec
mov
cmpsb
mov
fucom
add
sub
push
clc
cmp
popa
mov
cmp
jecxz
or
push
push
in
xchg
imul
sub
xor
jae
jge
pop
pop
imul
pop
imul
mov
jo
jne
mov
shr
fcoms
cmp
shll
push
loopne
sahf
lret
and
inc
and
xchg
dec
in
js
stc
and
imul
inc
loopne
mov
or
cmpsb
adc
shll
fisttps
pushf
pop
mov
and
and
mov
jge
mov
and
fs
add
mov
out
ret
xor
dec
dec
cld
and
or
ds
jle
xchg
jo
mov
stos
idivb
aad
leave
pusha
cld
fdivrs
jl
je
and
inc
pop
cmp
jae
sbb
xchg
negl
adc
mov
mov
mov
lods
push
push
std
mov
out
xchg
popf
subl
and
xor
push
sub
push
lods
test
adc
mov
pushf
stos
push
outsl
and
push
cmp
sti
sahf
and
adc
push
xchg
pushf
js
pop
iret
nop
insb
and
mov
fwait
sbb
mov
pusha
mov
xor
and
out
cmp
dec
add
rolb
or
jbe
xchg
sub
xchg
xor
sub
loop
and
stos
es
andl
arpl
push
pop
repnz
pop
aam
ret
cld
into
pop
fisubrl
mov
imul
in
aas
xchg
adc
jmp
out
pusha
fistpll
test
cmovo
je
xor
adc
xchg
cltd
jmp
popf
xor
mov
xchg
call
dec
add
data16
jg
aam
push
subl
scas
inc
cwtl
cs
sti
enter
sub
pop
data16
jo
hlt
push
jbe
rcl
in
or
mov
push
imul
icebp
cmp
and
cmc
fmuls
mov
sub
popf
test
dec
lret
repz
xchg
add
sbb
pop
int3
pop
sub
sbb
cmp
fwait
int
clc
frstor
lret
jns
inc
fwait
fwait
outsb
icebp
test
sbb
pop
sarb
repnz
cmp
dec
add
dec
lahf
and
push
push
aaa
push
in
outsb
jnp
adc
insb
popf
sbbl
arpl
shl
daa
addl
sub
xchg
push
pop
mov
stc
push
jmp
jl
cltd
adc
out
js
fwait
adc
mov
nop
movsb
loope
dec
mov
dec
dec
inc
xlat
xorb
sbb
jae
dec
push
mov
insb
andl
sbb
xor
je
cwtl
jne
mov
or
mov
dec
mov
inc
clc
xchg
cltd
sbb
cld
sbb
addr16
int3
arpl
adc
int
inc
mov
mov
rcl
dec
pop
mov
inc
xor
divb
push
lods
inc
pop
aad
sub
dec
cmc
add
mov
xchg
inc
or
js
mov
pop
pop
stc
push
fcomi
or
inc
in
jae
jnp
xor
push
montmul
cmpsb
inc
stos
mov
adc
stos
jp
stc
mov
test
pop
jb
pop
push
pop
call
sub
cwtl
push
js
adc
cltd
fnsave
inc
dec
mov
xor
xlat
mov
push
lock
cmp
xchg
mov
pop
pop
int
push
push
mov
test
fidivs
adc
push
lods
inc
xor
paddb
mov
adcl
xchg
and
loop
out
xchg
pop
sbb
les
mov
das
out
lock
andb
stc
ds
cmp
cmp
xor
or
dec
pop
outsl
inc
cld
or
mov
mov
aam
push
xchg
lea
inc
fidivrl
cmp
sti
addr16
adc
inc
inc
adcb
ljmp
adc
fimuls
sbb
sub
repnz
push
clc
jmp
test
add
inc
xor
fucomp
pop
xor
sub
int
mov
mov
test
xchg
movsl
movsl
jno
mov
arpl
loopne
fsubs
push
mov
ret
addr16
and
test
repz
nop
or
stos
pop
adc
sbb
imul
cmpsl
nop
mov
pop
fidivl
testb
scas
xchg
sub
fstl
mov
pop
ret
pop
rcll
xchg
insb
aas
push
outsl
cmpb
adc
cltd
cmpsb
incb
cmpsl
xor
lock
or
ret
xorl
in
pop
cld
jbe
and
shll
cli
test
mov
push
stos
mov
push
insb
push
cmpsb
inc
rolb
cli
mov
sysret
inc
lds
fwait
xchg
push
mov
rorl
pop
or
je
and
push
inc
iret
xchg
inc
or
add
push
lods
test
mov
push
cmpsb
or
cmp
jo
lret
and
ret
sub
shrb
and
and
test
xchg
data16
xchg
stos
inc
ret
jbe
ret
xor
jbe
loopne
jno
push
sub
decl
sbb
lret
xchg
and
or
adc
addr16
mov
test
daa
xchg
insl
leave
popf
cmp
xlat
cltd
xor
in
pop
jae
mov
std
js
xchg
and
imul
sub
icebp
jae
hlt
movsb
adc
sbb
icebp
mov
mov
jp
jb
inc
mov
pop
int
push
mov
sarl
dec
push
cmpl
inc
sbb
ja
nop
bound
jns
sahf
and
mov
mov
insl
push
mov
push
cld
jle
ds
cmp
pop
out
insb
in
sbb
cmpsl
push
cmp
into
add
call
push
sub
fildl
mov
sahf
test
test
mov
ret
scas
popa
clc
frstor
stc
sub
insb
popa
sbbl
imul
lods
std
jp
insb
data16
adc
xor
mov
iret
jp
inc
fwait
mov
sub
mov
ja
rcrb
mov
xor
mov
jb
adc
mov
les
push
mov
and
add
ds
pop
out
mov
jbe
mulb
hlt
mov
andl
mov
sub
or
mov
lcall
push
mov
sbb
xchg
dec
repnz
test
cmpsb
mov
mov
dec
lock
cli
cmc
ret
mov
mov
jg
fiadds
sbb
out
rorl
scas
jno
mov
dec
jle
fcompl
js
jno
std
fwait
loopne
icebp
fsubrp
ret
gs
xchg
adc
dec
loope
in
cwtl
push
pop
dec
mov
jle
aam
rcl
out
fcoms
push
clc
in
fldl
loope
sahf
bound
fistpll
clc
and
je
xor
mov
jbe
cli
cs
out
les
sub
stc
pushf
pop
mov
dec
aaa
clc
push
fistpll
xor
inc
sub
add
mov
inc
leave
mov
jecxz
mov
mov
icebp
push
lahf
push
inc
fwait
rorb
mov
inc
std
adc
jns
mov
dec
arpl
ret
pop
popa
push
in
pop
cwtl
out
jno
es
cwtl
xorl
cmpsb
push
cmc
sub
pop
divl
xlat
cs
test
adc
jb
mov
stc
and
mov
mov
rcrl
cmp
mov
ja
mov
lret
mov
mov
push
xor
adc
leave
or
mov
push
and
aam
push
cld
loopne
stc
mov
imul
adc
jl
lcall
dec
lods
dec
xchg
mov
lret
xor
xchg
pop
imul
in
aaa
xchg
scas
fsubrs
jl
bound
cltd
jge
inc
popf
xor
jb
xor
and
xchg
xor
lcall
jl
out
popf
aad
xor
add
push
lods
mov
ror
rolb
std
adc
rcrl
dec
fisttps
mov
sar
push
cmc
mov
pop
ds
in
lods
inc
cmc
outsl
addl
sahf
xchg
rcl
ds
fdivs
xchg
xor
sbb
push
filds
or
stos
lcall
push
out
cmp
sbb
add
aaa
into
bound
and
pop
test
std
and
mov
and
mov
ja
xchg
xlat
mov
jp
lea
add
dec
push
cmp
test
mov
shl
inc
cmc
dec
test
cwtl
repnz
and
dec
clc
sub
mov
sbb
jg
dec
cmc
push
test
lahf
in
xlat
xchg
ljmp
mov
enter
pmaxub
add
xor
nop
xchg
daa
inc
and
pop
aad
inc
addl
or
test
mov
jle
dec
jns
mov
mov
add
cs
xchg
sub
outsb
scas
jb
imul
adc
xchg
dec
sbb
mov
jl
lock
pop
loopne
push
imul
shl
ss
filds
mov
fstl
int3
fisubl
xchg
mov
inc
outsl
mov
ret
pop
inc
and
jl
jae
add
stc
je
ficoml
lret
sti
xchg
mov
push
pop
mov
dec
js
mov
push
test
lods
orb
jo
insl
sub
insl
inc
stc
lea
jecxz
loope
mov
mov
inc
mov
ljmp
jbe
or
fcom
or
movsb
mov
test
xor
sub
ret
and
jb
jo
mov
inc
in
jno
mov
dec
adc
mov
fucomp
push
hlt
adc
movsl
js
pop
mov
or
in
pop
sahf
sti
iret
xchg
mov
into
and
mov
lds
mov
xchg
jl
pop
icebp
inc
loopne
sbb
arpl
call
jmp
dec
xor
rorb
jg
aas
imul
cmpsl
fs
scas
mov
scas
lcall
lock
ret
jnp
jmp
lret
sub
loope
xchg
push
aam
shrl
ljmp
jo
sbb
and
test
pusha
mov
in
fisttps
sbb
dec
shll
add
pop
sbb
call
push
xorb
sub
adc
jp
mov
mov
cmp
push
add
xchg
ret
mov
into
dec
or
sub
cmp
inc
out
aam
mov
pop
in
cltd
testl
lock
lret
inc
movsl
in
or
cmp
jmp
adc
idivb
jae
mov
xchg
jns
loope
adc
adc
xorl
je
add
or
and
ror
cs
fwait
xor
pop
adcb
add
jb
pop
testl
dec
xchg
xchg
push
jmp
adc
repz
decl
and
divb
stos
cld
push
xor
inc
lods
mov
in
jbe
cmp
adc
in
mov
jle
adc
xchg
mov
inc
fstl
call
shlb
pop
js
out
sbbb
test
adc
sbb
pop
ret
xchg
pop
aad
fcompl
bound
mov
push
cmp
imul
dec
pop
and
mov
andb
and
or
scas
cmp
movsl
in
pop
push
add
inc
mov
aaa
int
sti
or
cwtl
iret
sbb
pop
popa
push
scas
dec
push
xorl
lock
push
sub
sbb
mov
mov
mov
daa
aad
sbb
pop
push
nop
mov
gs
imul
inc
loop
inc
push
fisttps
cld
fcoml
fwait
jne
sbb
push
andl
adc
lods
xor
sbbl
xchg
push
dec
cltd
mov
xchg
and
sbbl
pop
jmp
xor
cmp
adc
jae
adc
mov
jle
hlt
jecxz
dec
mov
xchg
pop
shrl
push
movsl
fsub
adc
cmp
in
mov
xlat
cmp
sarb
dec
nop
daa
cmp
pop
imul
insl
cmpsb
fcmovnb
pop
andb
fldcw
loop
xchg
insl
xor
repz
shrb
mov
add
imul
jmp
movsl
clc
pop
adc
int3
jno
inc
mov
imul
setb
mov
aad
repnz
mov
cmp
or
xchg
imul
es
loope
jecxz
pop
test
sahf
mov
out
xchg
and
xchg
adc
fisubl
mov
fildll
add
enter
icebp
mov
mov
iret
pusha
xlat
sbb
mov
stos
insb
in
push
in
imul
cmpsl
insb
mov
pop
lock
test
es
jge
movsb
mov
sbb
xchg
or
pop
dec
es
jle
mov
popa
das
mov
adc
sbb
ret
push
add
pushf
xor
add
jo
test
mov
ret
xchg
dec
and
and
ss
xchg
imul
mov
add
push
scas
add
xor
cld
jo
pop
pushf
lods
fcoml
loopne
xor
xchg
cmp
std
cwtl
mov
sbb
jbe
call
mov
aas
push
out
adc
inc
mov
mov
mov
xchg
lods
inc
test
hlt
in
das
cmpsb
mov
push
js
cmp
push
movb
loopne
out
pop
sbb
je
pop
jle
loope
imul
pop
xor
pop
cmp
test
stos
add
adc
and
jb
imul
aam
jecxz
inc
leave
or
and
push
push
push
jae
cmpl
fs
fidivl
mull
enter
lds
cs
clc
lds
xor
sbb
rcrl
pop
iret
dec
stos
fidivl
adc
mov
pop
addr16
clc
repz
xor
out
push
cmpsl
cld
rcl
out
xor
aad
test
cmp
jl
add
in
xchg
cwtl
xor
dec
mov
loop
push
in
and
push
mov
leave
add
outsb
dec
mov
pop
sub
mov
gs
mov
fstps
mov
in
gs
pop
push
xchg
outsb
les
mov
dec
inc
cs
cs
sub
out
rcrl
add
xor
or
push
push
mov
inc
stc
in
adc
data16
fdivl
fwait
sub
test
sarb
dec
dec
in
lret
outsb
sbb
add
mov
mov
inc
cltd
mov
or
es
subl
testb
lds
pusha
test
cmp
cmp
inc
lods
das
movsl
cld
cmp
psrad
xchg
pcmpgtd
test
lcall
sub
or
sub
xchg
ja
rep
adc
lods
hlt
jle
out
mov
cld
mov
inc
loope
mov
nop
push
bswap
cld
mov
test
scas
ret
lods
jnp
mov
mov
jnp
int
mov
testl
out
mov
or
outsb
mov
lods
fdivs
pop
testl
ja
or
jge
push
inc
or
aam
dec
pusha
sub
inc
aas
dec
xchg
jo
push
dec
jge
xor
jne
insb
pop
movsb
lds
lods
mov
mov
js
jmp
decb
scas
jo
in
movsb
inc
lea
outsl
jg
xchg
jo
mov
fcomi
or
lock
outsb
test
pop
cmpsb
push
add
jb
addr16
pop
xor
hlt
push
insb
je
fnstenv
fdivl
out
repnz
pusha
or
lds
xor
insl
mov
push
push
sbb
bound
lret
and
insl
dec
xor
cmp
xor
or
inc
dec
xor
fistps
int3
inc
sub
sarb
or
mov
cmp
into
xchg
lock
and
or
push
pop
insb
or
cmpsb
mov
pushf
mov
call
imul
jmp
sbb
cmp
addr16
scas
ret
je
stos
adcl
cwtl
mov
in
test
mov
or
mov
push
clc
rol
mov
fisubs
inc
into
arpl
ljmp
repnz
xchg
xor
sub
or
cltd
int
and
mov
xlat
jl
rcrb
pusha
popf
pop
fucomi
xor
lods
inc
les
cmpsl
shlb
and
enter
push
test
xor
push
inc
mov
pop
sbb
cld
ret
aam
inc
add
leave
pusha
movsl
sub
jbe
adc
icebp
dec
je
push
out
js
rol
and
ljmp
push
sub
jp
dec
pushf
sbb
sti
test
jnp
push
iret
xchg
out
jge
inc
cmp
jmp
movsl
fcoms
jnp
cmc
lods
adcl
sti
jmp
fidivl
gs
rorl
mov
mov
xor
clc
mov
aam
div
xlat
pop
sbb
mov
dec
sahf
mov
jge
inc
js
xor
adc
inc
push
hlt
out
xor
xor
pop
jbe
fcmovnb
std
out
jb
pop
stos
inc
dec
inc
adc
in
dec
add
add
mov
lods
or
mov
or
ljmp
into
lea
mov
and
out
mov
add
push
pop
sbb
rorb
add
adc
pop
inc
xchg
sub
lret
ljmp
popf
stc
insb
pop
inc
popf
jns
jae
lahf
sbb
push
shll
add
xor
lret
subb
cs
add
mov
in
arpl
ljmp
xchg
xor
sbb
sahf
repz
aaa
loope
imul
mov
pop
lret
out
leave
cmp
pushf
into
movsl
lock
sbb
sbb
movsb
pop
leave
mov
sti
mull
arpl
popf
mov
out
sub
adc
inc
hlt
inc
pop
es
pop
xor
and
out
pop
cmp
or
loop
pushl
test
mov
and
inc
fs
test
out
pop
bsf
or
mov
dec
xchg
mov
dec
pop
les
loop
cmp
cmp
test
or
adc
flds
outsb
mov
push
sbb
xchg
sub
stos
mov
sub
repz
nop
ds
daa
mov
jb
ret
xchg
gs
jl
je
dec
sbb
or
inc
jo
jne
xlat
xchg
fcmovb
testl
ret
call
out
fsubrp
out
daa
add
sub
test
and
add
sbb
insl
roll
pop
pop
mov
sbb
sub
popf
cmp
lret
sub
movsl
cmp
or
fidivl
idiv
mov
test
xchg
mov
movsl
cmp
int
mov
scas
aas
mov
adc
shrb
mov
mov
pop
mov
movsl
sbb
add
mov
mov
test
pushf
scas
fcoml
arpl
jp
lods
and
sbb
aam
push
out
jge
aad
maxps
and
inc
push
pop
jo
adc
test
es
cltd
mov
add
rol
testb
dec
xchg
clc
jp
stos
sub
addr16
xchg
inc
lods
mov
lea
xchg
dec
out
ret
xchg
and
faddl
call
enter
pop
outsb
int3
mov
jl
pop
rcrl
ds
cwtl
sub
lock
pop
mov
dec
jmp
pusha
lcall
stc
cmp
xchg
jbe
iret
inc
clc
mov
stos
mov
lret
sub
jmp
pop
outsl
in
incb
jp
and
xor
insl
sarl
add
mov
pop
sbb
cmp
sub
idivb
cs
pop
sbb
es
sbb
data16
les
inc
push
movsl
jle
fists
cwtl
das
cmp
cmpsl
lret
mov
mov
les
inc
fistpl
push
shl
mov
adc
insl
loopne
cwtl
bound
cmc
pop
or
dec
xlat
or
daa
sub
insb
pop
scas
push
lock
fnstcw
xchg
scas
or
loopne
dec
stos
or
es
stos
xchg
dec
inc
loope
je
roll
pop
icebp
pop
mov
icebp
ss
rsm
out
pop
loopne
sbb
arpl
mov
scas
xorb
fucomip
cmp
or
and
lcall
fstl
xchg
cli
sub
repz
dec
adc
js
mov
outsl
decl
mov
cmpsb
or
jg
cmp
into
sahf
sub
jge
dec
push
adc
xor
sub
stos
jo
sbb
mov
or
push
adc
xor
cmp
and
inc
stos
ja
fs
mov
add
in
pop
jns
fisubrl
scas
and
mov
gs
xor
decl
lock
lock
arpl
lret
cmpsl
xlat
jne
insl
in
aaa
or
pop
cmp
add
jge
sbb
push
sarb
rolb
es
mov
or
pusha
jnp
mov
push
out
out
cmp
movsl
in
sub
dec
jne
popf
mov
jecxz
mov
mov
seto
cmpsb
shlb
add
call
in
lret
movsb
inc
fimuls
scas
gs
shr
push
sbb
hlt
sbbl
jmp
lahf
sub
lock
int
mov
xor
push
call
jo
mov
push
and
jge
pop
daa
roll
jmp
sbb
ljmp
jno
push
int
js
das
pop
icebp
mov
enter
lock
movsl
mov
je
xchg
sub
shrb
cmp
sub
pop
xchg
sahf
shll
mov
ret
shl
cwtl
jae
pop
dec
mov
inc
loopne
mov
sbb
test
lret
pop
scas
mov
shll
xchg
in
shrb
jo
mov
stos
inc
push
dec
fstps
ret
xchg
and
and
imull
cmc
mov
jns
aam
push
push
jb
inc
pop
ds
out
and
ja
rolb
bound
ja
cmp
pop
adc
ljmp
mov
sti
add
imul
lods
push
pop
ret
inc
and
in
test
xor
and
push
jae
mov
jecxz
out
fcomps
scas
es
mov
sbb
inc
rcrl
sub
mov
shl
dec
notl
inc
lret
mov
scas
mov
mov
mov
jno
cmp
addr16
lds
and
xor
or
xor
popf
mov
iret
leave
test
popa
mov
lcall
icebp
push
and
cmp
jbe
inc
test
and
dec
push
push
std
dec
pop
das
cmp
push
stc
lret
sub
into
int
sub
lods
add
lock
xchg
pushf
bound
add
xor
cli
xchg
lret
movsl
xor
loope
push
repz
dec
mov
pushf
cltd
push
icebp
or
xchg
aad
mov
adc
push
ljmp
jmp
fistps
rclb
in
inc
jnp
add
es
lahf
ss
xorb
xor
sub
shll
or
mov
imul
iret
pusha
ss
ret
push
xchg
lock
daa
jno
lahf
push
cmp
shll
and
mov
test
xlat
cs
mov
into
pop
cmc
lcall
jl
pop
fisubrl
das
insl
inc
push
jnp
andl
cltd
fs
mov
mov
data16
int
daa
int3
mov
mov
cs
mov
xchg
jl
mov
mov
pop
or
jns
add
mov
ficompl
jge
cmp
sahf
xor
xchg
inc
push
data16
jbe
xor
or
ljmp
je
jo
adc
mov
add
mov
out
fmulp
sub
es
cmc
adc
sahf
hlt
and
pop
mov
ficompl
dec
cmp
aam
cmpsb
xlat
xor
pop
lock
jl
cmp
mov
mov
xor
lds
dec
cmp
jl
dec
loop
mov
adc
jb,pn
adc
push
movsb
xchg
mov
in
xchg
sbb
frstor
cmp
push
jl
enter
js
aam
cwtl
clc
mov
and
call
int
stos
sbb
arpl
cmp
shll
les
push
stc
jno
cld
or
add
iret
test
sbb
inc
push
shll
rcll
fnsave
and
andb
inc
fbstp
orl
pusha
push
lahf
and
mov
or
mov
fbstp
lock
dec
inc
or
lods
dec
push
movsb
hlt
mov
and
outsb
test
and
and
jp
outsb
repz
or
fwait
mov
jle
lds
sbb
jge
icebp
lods
test
or
ja
jns
fildll
mov
xor
inc
int
aaa
fnstsw
inc
insb
mov
push
sbb
and
xchg
or
push
cmpsl
xchg
xchg
sbb
div
mov
sub
jg
aad
sahf
enter
jae
jb
cmp
jne
inc
cmp
mov
cmp
push
sbb
int
int3
rolb
repz
dec
scas
or
push
add
or
push
and
fdivrl
cmp
xor
sub
addr16
dec
add
add
inc
into
and
nop
push
fmull
sahf
add
sbb
xchg
jb
jmp
scas
jmp
sub
adc
add
mov
mov
movsb
add
pop
or
arpl
xor
sar
js
mov
sarl
mov
or
mov
pop
test
lcall
xor
arpl
je
jno
call
stos
pop
inc
decl
xor
jb
mov
mov
in
adc
cwtl
ja
sti
mov
in
push
sub
sbb
in
pop
mov
incl
loop
loope
nop
dec
inc
mov
inc
aas
mov
add
ret
sti
cmp
psubusb
jge
mov
in
add
xor
cmpsl
ret
loope
dec
jecxz
call
loop
push
adc
ret
imul
daa
add
xchg
push
mov
nop
sti
and
dec
arpl
psrad
shll
movsl
lea
daa
pop
hlt
mov
stc
jge
bsf
sbb
mov
cmpsb
or
lock
sar
add
out
mov
or
clc
xchg
jnp
mov
hlt
pop
cmp
mov
or
mov
fdivrl
jle
sub
jns
outsl
mov
cmp
outsb
push
dec
cmc
mov
pop
loope
push
bound
jge
fs
pop
lods
mov
fnstenv
jnp
hlt
mov
cmp
add
cmp
pop
ja
mov
cmp
cmp
and
mov
out
inc
int
aam
aam
mov
data16
xor
mov
cwtl
pop
dec
pop
push
out
lea
ds
pop
shrl
aas
movsl
cmp
aam
iret
lds
jge
mov
aam
push
sbb
push
mov
push
sbb
lcall
cld
adc
adc
imul
sub
ljmp
fisttpl
mov
mov
int3
cmp
xchg
enter
fdivs
out
pushl
dec
adc
adc
insl
or
in
iret
sti
sub
std
mov
popa
stos
inc
dec
jge
or
out
enter
mov
cltd
xchg
stc
mov
imul
mov
insl
loope
movsl
in
pop
ja
add
scas
mov
in
shrl
cmp
cmp
xor
mov
add
cmp
mov
enter
roll
shlb
inc
popa
mov
outsl
jmp
jle
test
lds
and
pop
or
outsb
fwait
cwtl
fs
cs
and
dec
addl
popl
sub
in
fdivrs
movsb
push
xchg
andl
in
mov
movsl
daa
xchg
dec
xchg
mov
push
sub
xor
cmp
push
jecxz
pop
hlt
test
cld
xchg
push
lret
sub
push
adc
lock
jecxz
mov
jo
jmp
sbb
mov
xlat
mov
jecxz
inc
jmp
add
mov
jge
or
xchg
pop
loop
in
add
fdivr
adc
adc
les
lcall
out
fbstp
loope
dec
loop
push
or
lret
xchg
stos
inc
sahf
insb
je
arpl
fs
sbb
mov
cmp
jnp
cltd
ret
movsl
add
lock
sbb
es
pop
mov
ds
lret
xchg
stos
push
rcrb
push
adc
sbb
mov
cli
add
icebp
sbb
or
mov
cmp
lds
decb
test
cmp
cwtl
lods
sbb
cltd
stos
pop
push
sbb
xchg
jno
mov
sbb
fadds
push
jns
sub
pop
push
and
lcall
arpl
mov
arpl
add
sub
xor
loope
inc
push
mov
dec
ror
sub
add
fisubrs
xchg
mov
adc
adc
cmpsb
xor
push
int
mov
push
xchg
shll
or
ja
sub
in
push
stos
inc
or
jle
sahf
imul
mov
subl
popa
sub
mov
dec
push
fldenv
mov
xor
rcll
fdivp
aas
mov
mov
sbb
test
xchg
dec
xchg
add
cmpsb
and
jmp
push
xchg
aad
or
loopne
dec
in
or
xchg
mov
clc
cmp
mov
or
pop
out
out
out
lea
lret
xchg
bnd
in
cltd
sbb
movsb
mov
jg
cli
mov
ljmp
xchg
adc
mov
dec
imul
cmp
and
xor
and
xlat
repz
cmpb
fstpl
push
lds
mov
jp
rclb
sbb
pop
pop
mov
popf
or
mov
pop
push
hlt
clc
cmp
aad
and
push
or
xchg
cwtl
add
jge
jmp
cwtl
or
mov
jb
pop
mov
idivb
lods
inc
je
jp
outsb
lret
xchg
popa
cmc
incb
xor
and
cmpsl
jle
cli
lea
cs
sub
jle
es
sarb
lret
out
sti
ljmp
dec
push
mov
mov
fldenv
pop
xor
xor
bound
pop
rorb
mov
lds
pop
popa
add
rolb
lods
cltd
inc
sbb
jp
aam
mov
filds
or
ds
dec
ds
dec
leave
iret
fdivrl
jecxz
imul
mov
jbe
push
push
jne
mov
push
pop
filds
repz
shlb
ret
scas
out
pusha
inc
cmpsl
hlt
mov
adc
pop
cmpsb
xchg
xor
movsl
cmpb
fisttpl
testl
out
add
mov
aad
nop
pop
pusha
enter
push
mov
mov
cli
lods
mov
outsb
shrb
lret
inc
orb
sbb
rcl
dec
ss
fwait
bnd
cmp
mov
or
pop
adc
lahf
fidivrl
mov
and
ror
sbb
xor
dec
filds
into
inc
mov
stos
aas
xchg
pop
fwait
lret
jge
mov
cld
cwtl
push
shll
xchg
xchg
mov
add
call
cmp
fisttps
stos
fnsave
out
xor
add
xchg
push
es
in
insb
xorb
mov
rcl
sahf
push
inc
push
in
rclb
jecxz
inc
sub
lods
sbb
fidivs
mov
scas
fdivp
sbbl
push
movsb
cmp
movsb
adc
jp
dec
cmp
mov
mov
aad
mov
push
outsb
jb
sarb
stc
nop
aad
enter
pop
into
sbb
lods
inc
insb
cmp
in
mov
or
aaa
push
fdivs
push
mov
pop
fdivl
imul
cmp
mov
pop
mov
fstpl
add
hlt
js
add
push
or
adcl
pop
pop
lods
int
jg
push
loop
xlat
daa
xchg
push
inc
sahf
stos
dec
pushf
cmp
xor
popf
ljmp
jecxz
mov
push
cmp
xlat
fsubrp
adc
repz
and
inc
test
neg
mov
rcrl
lds
mov
mov
push
push
pop
sub
test
xchg
sbb
dec
lret
addr16
cmp
mov
cmp
mov
call
mov
aam
xchg
decl
lods
andb
shrb
ret
jne
out
mov
or
cmp
call
xor
in
loope
inc
fisttpll
cmc
or
rorb
cli
dec
or
mov
adc
les
mov
or
adc
lahf
sbb
inc
or
adc
xor
push
cmpsl
loop
and
push
or
and
xchg
dec
imul
push
fwait
sti
fdivrl
fisubrl
pop
cwtl
orl
and
jecxz
mov
stos
roll
mov
stc
add
sub
sub
xor
scas
mov
ret
fildll
stos
sbb
ret
xor
xchg
sub
fisubrl
push
pushf
and
mov
jb
fwait
inc
mov
pusha
pop
cmpsb
pop
je
pop
scas
sub
iret
jo
ficompl
imul
andb
nop
jns
rol
dec
das
pop
lock
aaa
inc
mov
cmp
popf
jae
adc
test
dec
dec
out
inc
xlat
loope
insl
add
inc
jp
mov
mov
les
loope
test
jae
xor
cs
and
loope
mov
popl
mov
divb
mov
and
sub
jecxz
and
jle
jecxz
sbb
pop
outsl
pop
popa
cld
imul
aaa
sub
fidivrs
push
push
notb
nop
jne
mov
xchg
out
lret
scas
fcmovbe
sbb
stos
rolb
lds
jb
mov
pop
sbb
fnsave
pop
cmp
push
fucom
cmp
or
xlat
jmp
rcr
xchg
insb
jle
mov
daa
xor
arpl
aam
daa
inc
sub
dec
jle
jmp
push
dec
inc
idivl
xchg
repnz
dec
outsb
aas
jbe
adc
mov
lea
sub
popf
pop
loopne
adc
adc
cwtl
jae
popa
dec
and
fidivs
push
cmp
mov
mov
sbb
dec
scas
les
cmp
adc
aas
clc
xchg
jg
mov
adc
inc
inc
shll
cmpsl
arpl
cmp
movsl
iret
adc
enter
add
imul
cld
ja
lods
insb
cwtl
xor
jae
cmp
pop
stc
pop
fisubl
test
out
mov
or
and
out
xorl
ds
mov
hlt
cmp
mov
roll
lods
inc
movsl
js
into
sub
ret
test
fildl
fcomip
test
jmp
jmp
pusha
test
aam
data16
xorb
mov
js
push
jne
jns
add
mov
xorl
loop
shrl
out
or
inc
test
arpl
repz
pop
mov
je
or
outsb
jno
daa
mov
int
test
pop
pop
inc
cld
sbbb
in
or
lahf
mov
add
push
push
jge
iret
mov
or
mov
mov
repz
fs
inc
dec
inc
bound
aad
push
add
push
stc
movsb
xlat
ss
mov
loop
add
int3
pop
xor
pop
stos
shl
jp
push
and
sbb
push
out
ds
xchg
pop
jno
and
shll
es
and
jp
lods
shlb
insb
jle
imul
repz
cmp
jne
dec
add
cmc
lock
xchg
int3
push
dec
jmp
xor
mov
insl
aad
push
push
jno
pushf
lods
fisubrs
add
scas
xor
xor
adc
push
and
pop
push
loop
aad
call
test
mov
mov
pusha
das
jp
and
xchg
repnz
and
adc
inc
into
xor
sbb
cltd
xchg
xchg
cmp
insl
sbb
jbe
std
stos
loope
dec
xlat
inc
pop
xor
ss
xor
cmp
lock
sarl
popf
xchg
arpl
mov
loopne
jbe
scas
jo
js
movsb
aad
fistl
xchg
test
leave
add
sbb
inc
movsb
or
test
add
rcrl
inc
sub
sub
sub
add
dec
dec
repz
cmp
jnp
xor
sub
xchg
jp
cld
leave
stos
clc
in
jge
sub
sbb
cvtdq2ps
lods
inc
fcomps
push
lods
mov
ror
cmp
dec
sub
xor
bound
inc
pop
push
lods
push
jge
lock
aam
out
jmp
scas
icebp
lock
adc
mov
mov
xor
mov
insl
mov
jnp
mov
adc
scas
aam
aaa
ficompl
leave
addr16
pop
lock
cmpsl
ds
mov
lret
sbb
push
jne
adc
loopne
insl
jae
xor
int3
jo
repnz
dec
add
pop
cmc
and
hlt
mov
test
lahf
sub
jb
imul
sqrtps
cmp
test
jle
in
dec
add
and
cmp
mov
gs
lret
inc
dec
mov
jg
ficoml
and
mov
ds
test
mov
aas
xorl
mov
data16
push
mov
fcomi
or
popa
or
and
mov
add
mov
mov
mov
mov
xor
sti
lcall
and
sbb
mov
movsl
mov
ljmp
repnz
ror
push
sub
pop
out
cmp
adc
nop
lods
jbe
mov
bswap
dec
out
cld
cmpsl
or
and
lea
push
push
or
imul
push
jne
and
ljmp
xor
inc
mov
xchg
sbb
mov
mov
lret
in
adc
push
call
mov
outsl
ret
mov
sub
outsb
shrb
ja
inc
xchg
testl
mov
or
push
das
pop
mov
nop
dec
fdivs
mov
ss
into
mov
iret
push
add
pop
cmpsb
mov
push
leave
js
push
mull
sbb
inc
mov
sub
xchg
out
clc
dec
loopne
sbb
inc
inc
dec
ljmp
push
repz
push
ret
jecxz
hlt
mov
add
sbb
jge
int
lcall
inc
pop
push
int
mov
xor
test
test
in
lret
xchg
jnp
js
fs
xchg
and
sbb
dec
mov
sahf
jno
bswap
and
mov
bound
mov
mov
pop
xor
or
shl
or
stos
xchg
ljmp
and
add
mov
fists
mov
and
fdivl
adc
mov
inc
aam
out
mov
add
inc
icebp
mov
jbe
lret
cmp
cli
test
test
in
sbbb
pop
and
xchg
loope
or
mov
fildl
or
lods
mov
push
test
and
js
inc
es
sub
stc
inc
enter
or
jae
cmpsb
dec
shlb
adc
cmp
imul
push
jle
and
es
inc
inc
fidivs
sar
nop
cmpsb
pop
test
pop
stc
aas
sub
push
and
nop
loope
inc
das
into
cwtl
iret
icebp
jo
dec
pop
xor
jnp
ss
gs
fcompl
adc
sbb
and
push
insl
xchg
pop
jnp
mov
mov
sti
dec
mov
and
out
dec
hlt
scas
fs
lea
cmp
scas
mov
shlb
icebp
dec
pop
arpl
gs
inc
xchg
in
inc
and
or
dec
into
stos
shrb
jg
in
leave
pushf
shrb
inc
sub
add
ret
cmc
mov
int
mov
in
test
jae
pusha
mov
in
pop
dec
incl
mov
test
nop
adc
push
andl
or
mov
xor
and
les
ljmp
mov
std
cmp
sbb
inc
mov
inc
lds
cmp
sbb
dec
scas
xchg
xchg
mov
je
mov
lods
dec
lret
shlb
and
mov
popa
out
arpl
aad
sbb
outsb
cmp
mov
and
je
repz
jmp
cmp
pop
stc
xchg
jb
add
scas
testb
cmp
or
mov
cmpb
jl
cmp
lahf
inc
pop
jmp
aaa
daa
mov
scas
and
mov
out
test
gs
add
out
shrb
mov
inc
rorl
sbb
lea
sub
dec
lret
cmp
dec
xchg
pop
xchg
sub
repz
int3
cmp
test
or
mov
jge
mov
jp
or
cmp
ja
outsb
gs
push
push
xchg
add
daa
cmpsl
dec
xor
push
nop
dec
add
mov
popf
daa
rorb
cld
daa
pusha
repz
adc
cs
ja
negb
xchg
popl
insb
mov
inc
pop
jbe
icebp
sbb
and
jl
loope
insl
adc
add
cmp
jb
xchg
les
mov
nop
dec
jmp
dec
loopne
or
mov
sub
iret
pop
loope
cmp
scas
mov
pop
stc
int3
imul
lret
in
test
int3
arpl
or
rcpps
push
mov
jno
mov
ljmp
test
xor
fsubs
or
and
sub
jnp
pusha
iret
arpl
fldenv
and
es
jns
mov
jg
sub
stos
in
pop
andb
iret
imul
adc
shll
adc
lea
add
les
outsb
and
shll
ss
adc
mov
xor
pop
in
fdivrl
mov
into
push
mov
stos
daa
scas
fdivl
sub
xor
pop
mov
cmp
push
sarb
imul
pushf
jb
mov
cmp
mov
xor
sbb
mov
mov
jecxz
in
test
in
pop
sub
inc
popf
cltd
out
fwait
xchg
cmp
xchg
cmp
push
xor
repnz
push
or
fs
movsb
fwait
sub
xor
xor
std
mov
xor
lahf
negb
add
aas
testb
jmp
dec
cmp
jle
push
scas
and
test
sbb
lret
xchg
mov
cld
out
and
mov
sbb
adc
aaa
and
mov
aam
mov
fidivl
mov
lcall
inc
dec
enter
out
ds
rcll
adc
ds
push
pusha
popa
pop
in
pop
mov
push
fldln2
ret
hlt
push
popa
xor
lcall
pop
jl
cmpsb
insl
and
dec
or
fsubs
dec
dec
pusha
adc
xchg
xchg
mov
loope
push
aad
push
xor
inc
pop
dec
in
pop
cmp
mov
and
xchg
shll
or
inc
dec
jecxz
aaa
or
test
adc
lret
loop
sbb
ja
jb
decb
inc
std
pop
xlat
outsb
push
sbb
les
push
dec
in
daa
push
leave
pop
fsubrs
jle
push
in
mov
call
lret
push
in
mov
jae
and
fstpt
xchg
pop
ja
mov
jmp
jnp
das
xchg
cmp
xchg
dec
rcrb
or
or
aad
pop
cltd
insb
or
pop
popf
xchg
inc
iret
outsb
xchg
repnz
hlt
stos
fs
test
in
std
dec
shlb
mov
mov
add
xor
sub
add
sbb
jne
mov
in
push
aaa
push
push
shlb
aas
inc
gs
jne
setl
mov
jne
in
push
fdivr
into
xchg
fisttpll
popa
xor
mov
mov
cld
imul
xor
test
mov
push
push
call
push
daa
xchg
add
jecxz
cltd
test
mov
pop
push
xor
or
out
scas
dec
pop
out
lcall
jl
and
xchg
dec
jo
cmp
cli
scas
sub
push
scas
lds
les
push
adc
dec
lea
xor
xchg
or
mov
jle
nop
mov
rcr
aad
adc
mov
add
inc
sub
sub
scas
and
pop
vpsubusb
mov
fsubs
fisttps
xchg
cmp
cmp
jmp
lds
fdivrs
xchg
nop
pushf
fwait
imul
cmp
stc
mov
push
outsl
lods
mov
mov
xlat
pop
cmp
adc
mov
or
pop
jo
push
dec
and
xor
xchg
xchg
jo
clc
pop
and
movsb
in
mov
nop
cmp
addb
xchg
ss
pop
push
andb
enter
xchg
inc
stos
and
mov
mov
dec
jle
mov
pop
les
les
sub
mov
mov
push
in
sub
je
push
mov
pop
mov
out
hlt
je
leave
push
outsl
loop
arpl
cmp
test
and
inc
arpl
jae
jle
dec
mov
mov
das
mov
pop
imul
popa
mov
in
mov
jbe
fdivs
pop
popa
ss
repz
neg
mov
fwait
pop
std
lods
mov
mov
push
mov
mov
dec
imul
fisttps
sahf
add
add
stos
push
dec
push
jo
inc
enter
sarl
cmp
adc
pop
aaa
jbe
or
stos
cmp
inc
mov
and
nop
addr16
fnsave
push
mov
jno
mov
sarb
jmp
sub
sub
in
lea
in
xor
das
push
mov
ds
ds
jecxz
and
bound
fisttpll
insb
fucomp
push
pop
jecxz
or
pop
out
and
dec
sub
dec
rcll
sbb
push
adc
sub
enter
arpl
fstps
adc
cld
or
es
jle
sbbb
mov
and
push
std
mov
divl
pop
xchg
scas
lea
loopne
cmp
pop
sarl
insb
and
cmpsl
shrl
add
in
mov
test
xorb
xchg
push
shll
jecxz
sub
int
int
mov
stos
pop
pop
les
sub
or
pushf
in
aad
cltd
scas
sahf
xor
div
aaa
into
and
xchg
in
mov
sbb
push
sbb
or
addl
pop
mov
push
adc
dec
lcall
insb
gs
inc
pop
les
enter
mov
in
inc
rcl
out
inc
jbe
fisubrl
mov
aas
jnp
dec
daa
call
movsl
mov
xchg
cli
add
sub
bound
mov
or
push
popf
dec
fsubrl
aas
inc
enter
and
push
cli
and
repz
jmp
mov
and
inc
addr16
daa
ud2
inc
adc
pop
mov
fcomip
fimull
out
out
mov
scas
nop
sbbl
scas
xlat
mov
adc
enter
ljmp
mov
adc
nop
fadds
rolb
fmulp
xchg
sbb
and
je
push
cmpsb
cmc
sbb
pxor
lret
orb
sbb
mov
sbb
inc
and
sti
arpl
data16
dec
push
jecxz
hlt
cmp
icebp
xor
jae
cmp
lahf
les
xchg
mov
mov
lahf
testb
or
pop
xchg
int
pop
cmc
jp
xchg
shlb
sbb
fnstsw
pushf
aas
ds
pop
mov
jge
nop
pop
push
mov
dec
aas
mov
lcall
cmc
inc
stos
xor
jecxz
imul
pushf
insl
xchg
add
add
fs
lahf
lcall
mov
xor
std
cli
xchg
jmp
popf
pop
inc
fimuls
iret
jno
enter
dec
jnp
mov
outsl
jbe
data16
bound
imul
addb
and
mov
ljmp
lret
andb
add
leave
mov
inc
stos
xchg
enter
cmpsl
push
jmp
mov
push
inc
mov
push
jmp
add
jo
push
mov
scas
xchg
out
int3
cmpsl
xor
adcb
inc
mov
jmp
or
pop
repz
add
adc
cmp
mov
pop
cmp
xlat
cmp
movsl
cmp
fstl
out
nop
add
mov
xor
fsubl
xchg
mov
mov
test
adc
cmp
imul
adc
sub
xchg
dec
jne
sbb
cmp
sbb
pop
and
fidivrs
aas
mov
pop
jmp
xor
insl
push
push
adc
inc
sti
hlt
inc
push
jmp
into
loop
pop
inc
push
fsubrs
popa
fdivrs
and
test
stos
sbb
and
out
pop
jnp
lods
jo
xchg
pop
dec
cmpsl
mov
aad
and
out
addr16
xor
sbbl
xchg
sbb
ret
pop
cmp
push
imul
mov
ljmp
aas
or
pop
mov
fwait
loopne
adc
cld
mov
enter
inc
stos
repz
xor
sahf
dec
out
ret
xor
int
xor
in
xor
and
out
loopne
mov
icebp
fs
loope
fsubr
js
in
ret
jnp
xor
aaa
dec
xchg
ret
in
jecxz
xchg
imul
out
sbb
inc
pop
inc
nop
outsb
fld
inc
fdivp
stc
fidivrs
pop
fsubr
lea
sahf
xchg
inc
mov
aas
sbb
aam
into
mov
hlt
xadd
or
arpl
sub
int3
and
icebp
pop
jno
out
xor
fimull
xchg
shll
mov
popa
fisubrs
cmp
mov
add
pop
lcall
dec
xchg
lea
bound
in
or
mov
cld
sti
sbb
push
cmp
xchg
dec
sbb
and
inc
pop
hlt
inc
jg
repz
jnp
jge
jns
fildl
outsl
jge
bound
sbb
shl
sbb
popa
movsl
mov
pusha
addb
mov
mov
sti
add
cmp
repz
mov
mov
jb
leave
ja
inc
arpl
xor
int3
decb
or
jmp
loope
mov
ss
xchg
movsb
xchg
mov
add
push
mov
mov
clc
push
mov
cld
je
test
dec
jmp
cmp
addl
in
or
aas
push
inc
add
loopne
mov
push
cmp
mov
cmp
jb
dec
cld
cmc
pop
sub
int3
mov
mov
inc
cmp
aad
bnd
mov
xchg
dec
stos
mov
jne
int3
lret
jg
pop
inc
enter
test
mov
add
je
mov
dec
loop
jo
dec
sbb
pop
dec
jl
mull
pop
insb
lret
insl
or
stos
mov
insb
jle
xor
push
push
aas
pop
lahf
jg
push
xchg
push
ja
mov
and
out
dec
dec
inc
in
jne
pusha
loop
jp
cmp
and
test
mov
std
sub
outsl
push
cli
dec
cwtl
push
add
ficomps
inc
mov
push
push
adc
jmp
sub
jns
mov
inc
mov
inc
jmp
icebp
pop
and
aas
shr
mul
pop
sub
pop
repnz
int
jl
out
cltd
xchg
mov
cwtl
loope
pop
cmpsl
jecxz
addr16
cmp
test
mov
mov
stc
mov
pop
dec
insl
sub
mov
mov
sbbl
or
pusha
std
fcoml
jg
xchg
and
test
push
and
adc
gs
cmc
cmp
test
lret
pop
std
fidivs
sub
cmp
or
es
gs
jns
test
les
adc
jl
xlat
fcoms
and
and
cmpsb
sbb
xor
pop
jnp
incb
cwtl
jg
adc
mov
shr
adc
cmc
xorb
fs
pop
or
ss
mov
dec
inc
push
jmp
mov
adc
inc
dec
mov
jge
call
in
push
push
push
jecxz
shrl
aam
sahf
test
lock
jmp
loope
push
cld
xchg
test
repz
adc
daa
cld
nop
dec
mov
jb
ss
ds
loopne
push
mov
pushl
cmp
mov
jns
mov
popaw
jmp
or
cld
mov
repnz
or
mov
arpl
xor
ja
insl
mov
dec
push
mov
popa
push
sub
jl
inc
sti
inc
adc
lahf
inc
add
cmpsl
std
inc
in
or
ret
jo
xor
jl
fidivrs
jmp
negl
daa
or
int3
mov
pop
push
mov
iret
mov
dec
es
movl
mov
xlat
bound
lock
mov
dec
loope
mov
icebp
arpl
ds
insl
lods
inc
scas
sub
add
adc
aam
mov
cmpsb
adc
fdivrs
push
cmp
les
and
test
test
into
cld
xor
loopne
jno
inc
xor
lods
sbbl
mov
es
pop
or
test
inc
pop
xor
push
add
mov
pop
dec
outsl
gs
mov
les
repnz
push
mov
rcl
mov
sub
dec
xchg
push
mov
loopne
sub
pushf
rorl
cmc
test
std
mov
jno
in
les
fstps
jge
mull
int
outsb
sub
xchg
xchg
push
inc
scas
and
sbb
xchg
std
pop
insl
test
jae
imul
enter
shl
mov
push
push
data16
out
movsb
jo
sbb
add
sarl
loopne
test
push
repz
in
in
mov
adc
mov
cld
lea
bound
mov
les
neg
test
sub
add
enter
sub
mov
mov
in
mov
or
pushf
arpl
aam
sbbb
sub
mov
in
sub
add
jge
xlat
scas
fs
test
xchg
mov
fistps
aam
jns
fwait
stos
dec
pop
repz
ljmp
mov
daa
xbegin
jns
or
mov
loopne
jo
fisubs
hlt
jne
add
add
andl
xchg
incb
stos
jns
out
cld
scas
xor
pop
lcall
ja
pop
sbb
pop
pop
cmp
ret
test
scas
xchg
rol
out
cs
push
mov
push
mov
pop
loop
mov
mov
sbb
mov
jnp
sbb
enter
xchg
push
mov
inc
js
cmp
cli
adc
and
xlat
test
sbb
sti
outsb
add
add
stos
and
das
xor
xor
lea
mov
rclb
mov
add
stos
jb
into
movsl
push
lods
cmpsl
cmp
imul
imul
push
mov
mov
sub
imul
mov
xor
mov
test
ja
or
add
lret
jp
rep
clc
testl
mov
sub
cmp
fdivrl
rorb
and
add
into
pop
dec
addr16
xchg
cltd
cli
fs
out
sbb
in
add
mov
sbbb
add
cs
lcall
seto
mov
mov
dec
loope
jecxz
sub
push
fisubl
xchg
jp
in
stos
mov
cmp
jecxz
add
add
or
aaa
inc
sbb
nop
enter
ss
sti
pop
push
ljmp
call
outsb
cmpsl
outsb
pushf
test
out
cmc
pop
or
test
sbb
pop
jge
ficomps
sbb
push
add
in
add
mov
in
int
int
xor
pop
push
lods
mov
movsb
cmp
es
jl
popf
pop
call
pop
sbb
addr16
mov
mov
fildll
aaa
dec
mov
loope
out
lock
pop
or
lret
in
je
mov
push
repz
cmpsl
mov
mov
nop
call
orb
xor
mov
or
shll
sub
jp
repnz
fwait
inc
cld
jg
imul
dec
jecxz
add
ds
test
inc
pop
repnz
insl
and
das
into
jmp
andl
and
pop
daa
mov
jbe
les
fiadds
sub
push
lods
jbe
popa
orl
fnstcw
out
leave
pusha
and
fadds
icebp
dec
loop
sbb
jp
lock
push
jns
out
and
daa
pop
mov
jg
in
mov
icebp
loop
rorb
cmc
mov
sub
mov
popl
pop
cmc
pop
xlat
sbb
or
das
mov
jl
mov
js
push
popl
pop
aaa
add
push
xchg
icebp
rcl
ja
ljmp
jmp
fidivrs
stos
cs
push
push
mov
in
setbe
xchg
adc
out
inc
lret
int
add
inc
cld
clc
mov
dec
cs
arpl
or
push
or
jno
sbb
lahf
push
fidivs
icebp
insb
shll
lds
cmpsl
xorb
pop
xchg
gs
pop
and
mov
popl
adcl
aas
xor
or
int
fwait
test
push
test
cmp
pop
mov
rcr
mov
sbb
sub
jl
ret
mov
sbb
or
jae
adc
fisubrl
jmp
cld
stos
shrl
ror
lods
push
scas
sub
xchg
mov
lret
adc
sahf
rolb
into
in
push
push
push
test
aad
inc
ja
mov
cmpsb
cmc
adc
xchg
mov
ja
scas
outsl
std
mov
add
jnp
cmp
dec
ss
jns
subb
shll
jns
add
sbb
lods
push
jbe
or
in
out
test
cmp
mov
test
ds
push
in
cmp
pop
test
dec
add
testb
sbb
outsb
sbb
ds
mov
out
xor
imul
sbb
mov
mov
xor
cmpsb
pop
repnz
sub
mov
pop
inc
jo
cmp
mov
pop
fwait
mov
call
aad
repnz
rcrl
repnz
cli
dec
mov
jg
sbb
xor
lcall
mov
fdivs
cmp
or
or
jg
jae
lcall
xchg
adc
inc
into
xchg
ja
aam
mov
mov
or
pop
cmpsl
ret
pushf
mov
jbe
mov
scas
jns
add
loopne
out
inc
dec
mov
mov
insl
mov
subb
xchg
sbb
dec
mov
xchg
cld
xchg
inc
or
fiaddl
xor
xchg
xor
inc
push
xlat
in
repz
ljmp
mov
mov
fistpl
mov
xlat
jg
and
test
enter
xchg
cmp
popa
dec
loop
sub
mov
push
je
movsb
jbe
mov
adc
and
xor
hlt
les
notb
movsb
mov
fstps
adc
mov
add
addl
std
cmp
xor
inc
mov
das
outsb
sbb
lahf
mov
pop
jg
add
sahf
fs
jae
lret
pushf
scas
cld
sbb
push
js
negb
fistl
lock
lds
push
lahf
add
loop
ret
adc
mov
jecxz
inc
cmp
cli
and
outsb
scas
add
and
rcr
aas
inc
aas
push
mov
add
mov
or
aad
sub
and
inc
inc
inc
test
pop
repnz
mov
inc
arpl
add
gs
lock
cmp
insl
add
testb
imull
stos
mov
sarb
xchg
pop
mov
adcl
cmp
es
xor
xor
and
repnz
push
ja
mov
ret
inc
cli
mov
or
adc
cmpsb
xor
call
or
dec
dec
add
sbb
test
pop
lcall
and
or
push
rclb
insl
icebp
je
in
int
shl
cmp
cmp
ss
fsubrl
mov
inc
js
add
mov
sti
cmp
lds
in
les
cmp
mov
int3
stc
push
jae
loope
mov
test
insl
addr16
adc
mov
mov
in
rcrb
mov
xchg
mov
dec
scas
mov
inc
jbe
jge
pop
leave
xor
dec
pusha
mov
lock
cmp
repnz
loop
xor
sub
fstpt
cld
push
push
outsb
mov
insb
xlat
or
test
adc
mov
pop
in
ret
jbe
or
aad
fsubr
xchg
sbb
cmp
outsb
mov
fsubr
mov
loope
mov
int
pop
mov
sbb
jecxz
lock
add
rorl
xchg
pop
test
aam
orl
sub
mov
test
dec
pop
sub
push
pop
jg
xchg
fstpl
push
cwtl
scas
inc
inc
push
cmpsb
int
jmp
loopne
sub
push
mov
mov
iret
mov
test
add
sub
scas
pop
xchg
adc
sub
push
jne
xchg
outsb
xchg
sbbl
addr16
imul
fs
fiaddl
pop
fwait
lahf
sbb
jno
shlb
mov
xchg
lods
mov
and
js
faddl
mov
shlb
add
inc
popf
sub
fs
jle
aas
mov
mov
sub
push
mov
xchg
aad
fucomi
psraw
ljmp
mov
in
pop
testb
adc
mov
ret
jp
out
hlt
fwait
adc
and
push
xor
push
testb
or
add
mov
mov
jo
xchg
pop
imul
lods
movsb
xchg
nop
popa
int
les
ja
push
xchg
or
mov
addr16
pop
dec
cmp
mov
data16
cli
test
mov
adc
xor
popa
jno
lea
sar
or
sbb
xor
imul
je
push
mov
sbb
jne
clc
icebp
pop
stos
push
fimuls
out
dec
arpl
js
jmp
mov
push
lcall
ja
lret
dec
mov
imul
clc
lods
enter
push
out
call
dec
sub
cvtdq2ps
daa
mov
lret
and
popa
shlb
ja
and
int
add
xor
call
mov
stos
inc
add
jmp
lds
iret
pop
xor
push
lock
mov
xchg
cld
insb
shrb
xor
jge
xor
ja
jnp
sbb
movl
pop
jo
mov
je
or
call
xchg
stc
repz
lods
xchg
in
mov
fidivl
shl
push
out
rcr
lods
mov
int3
push
outsb
outsb
mov
ret
pop
xchg
jl
cld
incl
mov
dec
jg
jnp
pop
sub
sbb
push
add
add
insb
mov
js
add
adc
mov
and
push
inc
add
sarl
xchg
fnsave
aad
push
mov
push
mov
mov
mov
xchg
jne
lea
in
test
push
and
cmp
insb
ja,pn
mov
add
inc
ljmp
clc
ds
adc
out
arpl
push
push
adc
mov
fistl
sbb
xchg
dec
adc
cmc
jmp
jmp
dec
sbb
lods
xor
xchg
sub
rcl
push
xchg
movsl
jl
dec
jle
dec
mov
inc
sti
loope
jns
adc
das
mov
sbb
cmp
jo
inc
out
jbe
cmp
lods
push
pop
ja
fwait
cmpsl
sub
jns
or
jle
mov
out
xchg
shrb
mov
push
jo
jmp
shlb
outsl
and
dec
pop
xor
addr16
and
into
push
fldt
pop
dec
mov
jnp
mov
xchg
mov
inc
or
std
nop
sarl
and
jo
leave
dec
into
sub
jg
mov
xor
jns
js
lahf
xchg
jge
mov
ja
dec
rclb
leave
mov
push
adc
nop
sti
out
adc
adc
mov
jb
or
into
mov
in
sbbl
call
roll
lahf
pop
out
mov
jbe
cwtl
shlb
cmpsl
mov
dec
push
mov
ret
test
add
out
push
hlt
loop
adc
fbstp
and
imul
pop
and
and
out
pop
sahf
pop
aad
cmp
ja
les
xlat
push
and
cld
addr16
andl
push
out
adc
inc
jo
dec
mov
push
adc
add
test
dec
dec
inc
bound
and
stc
cs
test
mov
pop
jnp
inc
sub
dec
hlt
push
jle
jns
les
lods
mov
xchg
cmpsb
mov
sbb
mov
adc
cmp
es
mov
loopne
test
mov
movsb
push
or
mov
pop
es
outsl
jbe,pt
xor
cmp
pop
mov
sarb
jno
mov
movsb
jnp
jb
push
xchg
inc
dec
or
je
out
pop
in
sarl
dec
dec
adc
sti
mov
push
jp
push
paddw
sub
je
jno
nop
sub
or
dec
pop
pop
jecxz
add
lods
jno
int3
adc
or
pushf
dec
dec
mov
add
data16
stc
mov
push
fcmovb
out
cld
repz
stc
dec
mov
clc
sbb
roll
xor
in
hlt
sbb
inc
sub
mov
pop
sbb
ror
popf
imul
test
int3
cmpb
repnz
in
sub
stc
inc
add
sub
pop
jmp
loope
outsl
popf
xlat
jno
mov
add
mov
enter
mov
inc
ret
sbb
xchg
insl
jge
cmpsl
fldenv
and
sbb
popa
xchg
xchg
call
cmpl
das
push
mov
enter
movsl
mov
dec
sub
adc
jl
mov
je
adc
dec
mov
mov
mov
les
in
movsl
dec
mov
push
push
pmulhw
pop
sbb
push
or
mov
in
mov
mov
aad
cmp
dec
neg
jae
popf
xor
jmp
shll
push
push
xor
aad
iret
shll
lods
mov
pop
add
aad
mov
test
fistl
clc
shlb
mov
mov
popa
push
daa
cmp
or
xchg
xchg
lea
xchg
sub
js
fstl
push
cmpsl
xor
push
sub
decl
push
add
pushf
test
ljmp
scas
inc
cwtl
mov
push
cmp
iret
inc
scas
jne
push
push
cwtl
adc
or
xchg
mov
or
jne
ss
aam
mov
das
hlt
cmp
sahf
vphaddsw
test
in
cmpsb
ds
fcomps
imul
cwtl
dec
adc
xlat
imul
sbb
jno
lret
and
cmovns
mov
mov
cmpsl
inc
in
fimull
inc
std
inc
pop
mov
push
bound
mov
pop
sub
rcrl
sub
out
and
mov
push
dec
fdivrp
push
das
push
mov
and
insl
cld
xchg
in
xor
pop
push
or
dec
pop
shlb
mov
jle
jmp
test
arpl
stc
sbb
pop
enter
add
aaa
jo
fildl
stos
mov
sbb
push
lcall
and
daa
sahf
lods
sub
mov
xchg
or
push
add
jno
test
lods
aaa
into
ficomps
push
or
cmp
and
pushf
outsl
rcll
sub
jl
sub
mov
mov
out
jno
fmulp
enter
xor
dec
lret
in
scas
inc
jne
ja
mov
inc
repz
jmp
rcll
mov
push
pop
adc
adc
lcall
jg
sahf
lods
loop
push
in
rolb
adc
pop
idiv
repnz
pop
nop
mov
lcall
cmpsb
jne
adc
stos
xor
lret
sub
xchg
push
add
int
gs
call
or
addr16
and
mov
xchg
inc
sbb
sahf
out
movsl
out
pushf
cmp
bnd
shl
push
imul
aam
ds
mov
pop
cmp
xor
xchg
mov
test
adc
adc
push
sar
std
sbb
mov
mov
push
mov
test
mov
das
cmp
loope
sbb
les
pop
mov
test
sbb
fiaddl
mov
fsubr
pop
cmpsb
cmpl
mov
or
cwtl
xchg
sti
push
roll
lock
sbb
inc
mov
jbe
mov
lahf
inc
mov
cmp
dec
loopne
mov
xlat
in
mov
add
rcr
rep
push
xchg
xchg
cltd
imul
add
inc
add
mov
mov
cmp
adc
imul
jl
movsb
sub
mov
in
test
and
mulps
jno
inc
push
inc
fnstenv
in
mov
and
sub
mov
out
addr16
test
das
inc
lcall
xchg
inc
push
inc
sbb
popf
aaa
pop
test
mov
in
or
cmp
testl
xorl
je
int3
lret
cmp
xchg
xor
mov
cmp
dec
fsubl
pop
bound
sahf
les
rorb
xchg
ficoms
xchg
ret
pop
hlt
jmp
jno
push
xor
lahf
imul
and
mov
mov
mov
sbbb
mov
pop
mov
or
mov
jg
xchg
inc
pusha
testl
mov
add
cs
xchg
aaa
je
push
mov
adc
in
vpaddusw
outsb
adc
cmp
jo
shl
mov
test
rcr
movsl
push
inc
into
in
jns
mov
jb
mov
cld
in
std
sub
jbe
pop
scas
add
pop
test
push
fnstcw
mov
jbe
pop
scas
in
lods
dec
dec
test
mov
jle
cmp
sub
mov
xchg
pop
lds
inc
push
sbb
jns
loop
add
push
pop
push
xchg
add
je
or
je
xor
ljmp
into
mov
lcall
push
jge
xor
cwtl
enter
ds
mov
or
push
enter
xor
cmpsb
adc
dec
lcall
sbb
xchg
push
in
les
iret
and
daa
jp
sarl
leave
push
fisubs
mov
js
and
out
call
sahf
mov
lds
sbb
ds
outsl
mov
cmc
inc
and
inc
int
fbstp
mov
dec
sti
sbb
mov
cli
je
push
or
ds
movhps
orb
das
daa
push
and
call
fwait
inc
repz
cmc
jns
cmpsb
test
orl
mov
mov
or
lea
add
mov
or
lods
mov
ljmp
ss
daa
inc
push
jl
pop
and
dec
mov
pop
shlb
test
or
fdivrl
mov
lea
dec
test
dec
shrb
aaa
lods
pop
mov
lock
xlat
and
sub
faddl
ss
sbb
pop
mov
hlt
addb
add
inc
sub
insl
fucomi
arpl
push
mov
inc
aas
dec
out
addr16
adc
sub
mov
mov
scas
push
ds
imul
pop
jno
push
sarl
adc
les
xor
add
mov
cmp
xor
test
test
mov
inc
pop
mov
filds
mov
inc
pop
outsl
xor
incl
dec
shl
daa
in
sti
push
lea
jecxz
cs
cmc
jno
iret
xor
pop
cmp
aaa
call
mov
data16
mov
fstpl
cmp
jmp
cmp
add
add
int3
xor
pop
sahf
imul
mov
fisttpl
cmp
and
fnsave
andl
push
and
sbb
xor
div
popa
rcrb
jg
lahf
aas
filds
lods
jge
pop
fcom
insl
or
xchg
lods
sub
xchg
jae
add
adc
fstps
xor
push
int3
repz
lcall
sub
std
and
int3
xchg
dec
cmp
cmpsl
push
fisubl
inc
fistl
into
or
xlat
repz
push
popa
xchg
in
out
sbb
in
sub
add
push
lods
adc
xor
sbb
loop
dec
in
pop
inc
xchg
mov
pop
cmp
inc
pop
jo
stos
jne
fsubs
int
shrb
insl
lea
cwtl
jno
rcrb
cmp
jbe
loopne
adc
addr16
xchg
push
fwait
push
push
cmp
test
and
mov
fidivs
push
sahf
push
movsb
repnz
sbb
inc
int3
jg
xlat
cltd
push
mov
stc
xor
jmp
xlat
loope
push
jmp
rorl
fs
cltd
or
shrb
lcall
and
iret
xor
jl
adc
popf
dec
out
cmpl
insb
insl
loopne
inc
sbb
xchg
or
in
mov
daa
lcall
push
clc
pop
adc
mov
jg
adc
in
xchg
mov
movsl
cmp
and
fidivs
mov
insb
jns
xor
lcall
fs
adc
shrl
shrb
mov
cmp
mov
cwtl
outsb
sbb
sbb
sub
popf
push
jle
shll
cwtl
das
push
enter
stos
mov
xor
popf
movsl
sbb
aas
outsb
test
push
out
push
xchg
pop
push
push
push
shll
enter
pop
jge
sub
loopne
jo
push
mov
xor
fsubs
pop
shl
scas
sahf
cmp
cmp
arpl
mov
jne
xor
push
jp
sub
call
pushf
adc
aaa
stos
ljmp
adc
sahf
aam
adc
xchg
sbb
xor
inc
cs
test
lahf
mov
rcrb
into
dec
mov
repnz
daa
cld
hlt
mov
or
in
and
push
xor
mov
jp
lods
sbb
sahf
or
xor
cmp
ja
sub
int3
fs
push
es
test
call
xchg
mov
mov
ja
jmp
mov
aaa
xchg
xor
sbb
mov
jb
enter
nop
outsb
xchg
lret
xchg
insb
aas
rcrb
or
jmp
fistpll
push
sbb
xchg
adc
mov
dec
das
call
jmp
insb
add
int3
add
sbb
jle
rcrb
cld
mov
cmc
sti
cmpsl
loop
dec
push
inc
popa
enter
push
ficoms
mov
outsl
jns
fadd
xor
mov
or
shl
incl
cmp
inc
xchg
testb
repnz
fnstenv
jbe
add
adc
outsb
arpl
cld
jne
out
inc
xchg
mov
fs
es
mov
lods
cmpb
xor
ljmp
lods
add
jno
fdivl
adc
faddl
rcll
jp
sub
adcb
rol
nop
dec
mov
jnp
push
enter
jbe
jecxz
or
mov
push
add
fldl
mov
out
lods
inc
mov
push
pusha
inc
filds
dec
in
mov
mov
push
push
mov
push
lret
sbb
out
test
aam
mov
mov
sbb
cld
dec
loop
addr16
mov
enter
or
xchg
mov
scas
dec
fwait
push
fisubrl
add
into
rorl
xchg
mov
dec
jo
xor
or
out
dec
cld
enter
roll
loopne
jne
push
sbb
test
scas
add
idiv
push
jo
aad
xor
jecxz
sbb
adcb
f2xm1
sbb
sub
in
sbb
outsb
test
jno
xor
add
cmpsl
or
sarb
int
and
inc
dec
es
aas
mov
stos
or
in
fsts
sbb
sbb
mov
loope
jno
cwtl
pop
xlat
cmp
in
hlt
pop
jae
pop
push
out
fucomp
mov
or
ret
fists
mov
xchg
fbstp
aas
stos
push
add
sbb
pop
xchg
sub
mov
or
sbb
inc
pop
inc
jo
insb
push
xchg
cmp
inc
aam
cmpsb
xor
pop
xor
je
sub
or
dec
mov
fnsave
lret
rorb
js
pop
xchg
fadd
jl
cltd
sub
lahf
mov
dec
and
jns
push
in
fs
pop
sub
je
xor
cmp
mov
jo
jecxz
loopne
and
les
repz
xchg
mov
push
popa
and
pop
insb
add
and
rclb
pop
lods
pushf
pop
fucomp
xor
xor
jo
xchg
clc
adc
push
lcall
sahf
ss
pop
sbb
in
lcall
js
stos
push
gs
lock
lods
mov
repz
or
mov
test
iret
xchg
or
pop
fsubl
cmp
test
data16
dec
cltd
pop
cs
arpl
scas
mov
jge
xchg
mov
mov
testl
js
jle
popa
jge
dec
jl
loop
push
popf
jns
xchg
in
testb
sbbl
mov
in
inc
push
adc
sti
mov
cmp
call
mov
scas
call
push
cmp
sub
daa
fstp
mov
or
leave
xchg
sbb
inc
js
sbb
js
sbb
sbb
out
or
adc
dec
das
and
push
inc
or
sarl
adcl
push
add
aas
mov
insl
jb
jno
pop
mov
iret
xchg
popf
mov
bound
ljmp
or
pop
jno
sahf
loop
lods
xor
and
add
out
lret
sub
rcrl
pusha
mov
adc
push
repnz
xchg
mov
cmpsl
pop
hlt
pop
nop
sbb
data16
icebp
andl
rol
adc
sub
aaa
jge
out
dec
jge
fcomps
cltd
out
popf
xor
jge
add
sub
xchg
bound
sub
xor
xchg
in
call
mov
ds
pushf
das
fcmovnbe
out
push
jno
mov
lahf
sub
dec
and
popf
fs
fdiv
pop
jnp
sub
dec
rorl
mov
cld
les
into
cwtl
movsl
add
aaa
iret
jecxz
adcb
cmp
stos
fsubrs
fnstcw
sbb
push
fsubp
ss
xchg
jae
insb
pushl
jmp
scas
les
jg
jp
adc
sub
pop
gs
push
mov
cmp
loope
popa
mov
fisttpl
fucompp
insb
xor
jge
xchg
test
pop
mov
ror
mov
scas
mov
jecxz
pop
testb
sub
fmuls
cmp
in
in
adc
cmp
fistps
mov
cmc
imul
rcll
movsl
js
push
aaa
push
ss
rcr
cs
out
int3
sub
jns
sbb
imul
adc
mov
mov
jl
xchg
xor
push
push
test
addr16
iret
orl
mov
push
xor
inc
fdivrs
fildl
sub
cli
rolb
in
or
inc
dec
pushf
jmp
sbbl
int
ret
inc
outsl
enter
xor
cmpsb
sub
jge
iret
xchg
xchg
stc
loope
push
xchg
add
mov
loopne
mov
cmp
xchg
adcb
mov
movsl
cmp
movsb
aaa
cld
mov
enter
addr16
mov
jns
aam
add
fwait
aas
dec
arpl
mov
pop
insb
xor
adc
andl
mov
push
popf
jmp
or
add
rcr
pop
ds
xlat
pop
cld
outsl
jnp
sub
pushf
dec
or
push
rcl
and
arpl
push
dec
jne
jmp
or
repz
and
cmp
inc
ret
fnsave
movsb
and
jmp
jle
cmp
cmp
outsb
loope
and
jnp
push
jnp
adc
test
outsl
fucomi
insl
out
es
aas
xchg
add
or
push
imul
mov
fs
cld
idivb
jg
mov
lock
lcall
cmp
clc
xchg
sahf
or
imul
jbe
xchg
push
mov
movsl
adc
jp
and
ljmp
orb
pop
sbb
leave
mov
jge
cmp
jo
mov
inc
mov
arpl
scas
sub
les
orb
jbe
aad
test
repnz
leave
out
repnz
inc
movsl
ja
jle
sbb
nop
add
mov
insb
and
dec
insl
inc
scas
adc
push
mov
mov
inc
in
stos
iret
mov
add
jge
push
and
fmull
fwait
cmp
xchg
xor
bnd
dec
mov
mov
lods
push
mov
jne
fucomp
les
rolb
fsubs
dec
add
mov
fildll
pop
fmulp
aad
lods
push
jae
cmpsl
xchg
xor
rcr
jle
out
sub
clc
movsb
sbb
jb
sub
pop
push
mov
push
and
jg
jle
inc
jae
pop
jmp
addl
mov
mov
jecxz
cs
push
add
xor
xchg
shrl
push
pop
push
jg
adc
insl
mov
adc
repnz
insl
inc
add
mov
inc
dec
and
in
jno
iret
data16
das
pushf
mov
mov
and
and
mov
inc
xchg
sub
pop
jmp
pushf
addr16
fwait
jmp
mov
lahf
in
push
leave
in
leave
jb
adc
in
outsw
dec
pop
test
jb
cmp
sub
xchg
mov
loop
cmp
in
sub
jg
xor
dec
jno
push
mov
mov
and
sbb
insb
mov
out
test
cmp
jo
shrd
push
mov
mov
shrl
push
jne
xchg
enter
subb
pop
sbb
enter
push
mov
push
cli
sbb
pop
outsl
xlat
scas
orl
pop
inc
fmuls
or
in
inc
cmp
test
gs
push
scas
add
arpl
mov
testb
sbb
ds
inc
jmp
out
jmp
gs
enter
jb
sbb
lret
mov
stc
cld
mov
enter
es
int3
fadds
aam
dec
aad
sub
fwait
sbb
int3
pop
test
shr
out
and
fucomp
fbld
or
jmp
or
and
mov
sbb
ds
outsl
test
add
aam
ljmp
les
inc
fwait
jmp
push
jp
ss
int3
sarb
nop
dec
test
addr16
xlat
out
inc
and
sub
divb
in
inc
imul
mov
jo
sub
mov
es
ret
mov
int
adc
vunpcklps
xchg
popa
clc
dec
jbe
dec
xor
fwait
test
out
jno
jmp
out
inc
fstps
jbe
jnp
pusha
test
mov
mov
mov
repnz
imul
jp
popl
fistpll
daa
mov
push
es
loop
inc
and
idiv
xchg
rep
push
push
sbb
sarl
and
in
sub
cmpsb
xchg
bound
dec
stc
aam
xchg
pop
pusha
jnp
popf
dec
gs
jno
adc
insb
fbstp
popf
push
adc
push
in
imul
enter
sub
push
in
inc
jmp
test
out
sub
xchg
push
ret
mov
bnd
sub
xchg
test
movsl
fidivs
lret
dec
fwait
xlat
jnp
test
sbb
sbb
lock
jmp
mov
inc
in
jno
loopne
ds
testb
mov
dec
js
notl
ficoml
lcall
gs
daa
pop
add
and
and
movsl
pop
xchg
and
lahf
lods
mov
xor
and
lock
mov
fisubrl
jo
movsb
fdivrl
dec
hlt
push
mov
cmp
and
cmp
in
fs
mov
shll
add
or
ss
stc
push
scas
adc
test
mov
or
mov
call
jle
mov
pop
xchg
add
add
cltd
jecxz
pop
sarl
jmp
mov
mov
cltd
sbb
push
mov
fs
mov
in
xor
std
mov
cs
rcrl
mov
aam
movl
mov
dec
push
sub
cmpsb
adc
fcmovbe
jns
daa
enter
push
lcall
pushf
jge
dec
push
insl
add
and
push
cmp
pop
fiadds
jmp
or
test
cmpb
leave
sbb
jnp
inc
xor
in
push
mov
pmaddwd
jg
sarl
js
ljmp
mov
out
notl
icebp
pop
arpl
scas
ficoms
push
clc
imul
mov
dec
add
out
cli
aas
xor
cld
std
loope
mov
les
cld
cmp
cwtl
pop
stc
das
repnz
cli
lret
fstpt
enter
es
mov
xor
mov
mov
and
icebp
fwait
xchg
pop
mov
jbe
hlt
jbe
pop
sbb
stc
and
stos
das
push
xlat
ror
fsubrs
xchg
mov
daa
dec
add
sti
or
jbe
inc
add
jae
fsub
mov
sub
add
sub
insl
mov
mov
fbld
add
shll
and
popf
pop
inc
and
xchg
xchg
mov
ds
lahf
mov
fistps
aam
inc
xor
adc
push
sub
or
sahf
subb
sahf
outsl
pop
push
mov
or
rol
rclb
xor
adc
imul
or
jl
xchg
arpl
xchg
push
cmp
cltd
call
push
xchg
inc
lcall
and
pop
lods
sbb
jae
into
sarl
dec
mov
imulb
std
mov
outsb
jp
mov
pop
shll
push
xchg
dec
mov
stc
nop
data16
iret
fs
movb
jmp
not
in
test
imul
movsb
call
subb
jae
data16
dec
enter
fwait
test
and
sahf
ss
ret
stos
jge
and
loopne
sbb
push
xor
fcom
push
or
cmpsb
xchg
or
jle
in
adc
cmp
out
aas
cmc
pop
sbbb
push
inc
inc
lcall
pop
inc
cmpsl
mov
outsl
das
mov
xchg
jnp
lods
jle
ss
mov
xchg
push
fsubrp
push
sub
mov
jbe
or
adc
lahf
or
das
xchg
sub
repnz
jae
fcomip
add
push
mov
repnz
shlb
add
jg
inc
dec
les
out
test
xlat
dec
or
sbb
lea
fcom
test
mov
or
and
fildl
es
and
add
imul
cmpsb
cmpsl
arpl
pop
sub
jmp
pop
jmp
cmp
ror
pop
pop
mov
lahf
jo
push
jl
test
fidivrl
jecxz
xorl
fs
loopne
xchg
mov
sbb
int3
outsb
mov
lahf
jp
enter
andb
imul
add
pop
aaa
sub
cmp
mov
loopne
inc
pop
movsl
cmp
mov
adc
dec
es
cmp
cld
dec
adc
pushf
ror
xchg
pusha
sarb
add
sahf
popf
scas
adc
loopne
and
xchg
push
mov
lds
or
stos
es
mov
jp
and
push
push
inc
add
inc
out
xchg
popa
in
push
or
imul
jecxz
jns
dec
loop
pop
sbb
mov
cmpsl
sbbb
scas
das
cmp
popa
rolb
cmpsl
mov
push
fucom
add
mov
xchg
mov
mov
icebp
pop
ret
adc
fdiv
lret
xorl
adc
sti
cmc
push
inc
inc
lret
lahf
adcl
or
mov
sbb
out
push
jmp
addl
xchg
aaa
and
add
push
int3
arpl
or
add
mov
or
ds
inc
mov
stos
jnp
adc
mov
sbb
nop
jnp
imul
mov
jge
mov
call
gs
iret
dec
dec
insb
sub
cmp
ret
sub
mov
jb
call
jns
mov
aaa
xor
inc
pushf
pop
xor
add
test
iret
mov
dec
push
in
jle
sti
mov
shlb
cmpsb
pop
shrl
mov
mov
inc
jns
shr
out
mov
push
andl
push
xchg
dec
pop
inc
jbe
ss
sub
lcall
mov
je
cmp
or
popf
sbb
or
pop
loopne
test
and
in
std
sub
clc
jmp
mov
cmp
push
inc
scas
jmp
sub
or
pushf
inc
or
sbb
cmpsb
rorb
dec
outsl
adc
mov
sub
imul
adc
ja
loope
int3
hlt
scas
ret
sti
cmpsl
xchg
jno
cvttps2pi
xchg
outsl
and
xchg
cmp
je
jbe
inc
ficomps
scas
test
pop
sbb
jmp
bound
mov
jb
mov
add
fldl2t
ret
xchg
xlat
xchg
cmp
sbb
popa
lahf
adc
fwait
or
call
stos
das
sbb
fistpl
jae
repz
push
mov
push
inc
inc
xchg
ds
nop
repz
mov
push
mov
shr
psllw
dec
sub
clc
add
rorb
dec
lods
ret
shrl
out
fisttps
arpl
adc
xchg
imul
aad
into
jno
add
fldcw
lods
nop
push
int
stc
into
jno
xor
jecxz
mov
loop
push
add
mov
cltd
add
lret
je
in
xchg
adc
dec
negl
jnp
leave
add
xchg
sbb
fdivrs
xor
frstor
sbbb
bound
shlb
mov
aam
cmp
repz
loopne
cli
sub
push
lret
loope
jge
jnp
push
in
mov
inc
je
ljmp
mov
out
xor
mov
lds
into
daa
cmc
dec
in
jp
jne
out
mov
les
lock
inc
leave
cltd
dec
pop
sbb
out
dec
rcrb
sub
pop
repz
sbb
or
cmp
cmp
mov
add
xor
fcoms
xchg
mov
or
cmpsl
jb
leave
ret
ljmp
arpl
xlat
pop
sti
dec
aaa
add
cltd
ret
or
xchg
mov
test
sbb
and
test
pusha
jp
inc
cld
loop
loope
mov
outsl
mov
sbb
stos
and
dec
ds
inc
xor
jbe
fiaddl
inc
or
or
stos
stos
pop
fcompl
adcb
xor
jle
add
push
nop
pop
imul
mov
push
add
jge
sub
sbb
sub
mov
or
sub
sub
ss
stc
inc
out
iret
pop
gs
cmp
inc
xchg
lock
movsb
stc
nop
push
mov
sbb
xor
in
jno
cmpsb
call
inc
insl
lds
mov
rcrl
add
scas
push
cmpsb
mov
sbb
scas
sbb
clc
nop
mov
gs
fs
inc
inc
fsubs
es
xchg
lret
ficompl
ror
xor
sub
rolb
sub
mov
addr16
inc
push
mov
sub
into
jnp
lds
jmp
les
movsb
fstpt
loopne
sbb
iret
xchg
pop
xchg
mov
xchg
mov
mov
mov
dec
mov
pop
ja
add
jmp
jp
sbb
adc
test
sarl
pop
xchg
mov
push
mov
mov
imulb
aaa
popa
dec
popa
xor
out
test
lods
mov
fidivl
rol
fistl
cmp
jne
add
or
mov
lods
in
and
ud0
inc
inc
in
push
sahf
add
insb
nop
sbb
repz
mov
and
dec
mov
es
sbb
shl
filds
dec
scas
les
and
pusha
loope
stos
jbe
dec
mov
rclb
add
jbe
aaa
jmp
lcall
and
into
shrb
or
cmpsl
mov
decl
aas
shll
or
pop
test
mov
sti
gs
push
add
sbbl
push
mov
inc
divb
and
push
pushf
pop
dec
cmpsl
jge
mov
mov
pop
jb
add
xor
push
ror
mov
dec
pop
out
push
jle
lahf
jb
xchg
idivl
fs
jb
mov
std
inc
stos
cwtl
mov
xor
xor
dec
pop
imul
leave
dec
pop
insb
jl
and
rcrl
enter
bound
lea
clc
shl
test
icebp
je
mov
inc
add
dec
push
jl
fwait
std
inc
and
or
lcall
scas
arpl
ljmp
sarb
push
sti
mov
inc
mov
fmull
sbb
fistpl
or
ja
mov
std
cltd
loop
add
lcall
inc
pop
cmp
pop
xor
inc
pop
lcall
and
out
insb
adc
mov
mov
cli
fstl
scas
or
sub
sar
stos
pop
xchg
pop
dec
lds
mov
xchg
sub
aad
and
cmpsb
cmp
push
add
push
testl
mov
add
xchg
push
push
jb
or
mov
mov
fisttpll
fldl
cmc
push
das
fucomp
mov
pop
pop
shl
lds
imul
mov
imul
add
mov
mov
icebp
mov
mov
jae
aaa
ret
or
orb
mov
shll
nop
mov
jae
cmp
sbb
pop
add
insl
lcall
lahf
aaa
lock
adcb
rorb
cwtl
push
add
add
fistl
mov
or
sbbb
dec
adc
push
sub
in
inc
xor
data16
mov
enter
sbb
jmp
xor
movsl
sbb
sbb
cld
jp
sub
cld
test
je
daa
sbb
jl
or
jge
in
xchg
pop
mov
bound
int
mov
ret
pop
cmp
js
out
test
mov
in
dec
adc
ficomps
lock
out
or
imul
addr16
scas
ret
jne
jo
jmp
xchg
das
into
cmc
or
pop
inc
sub
jno
fsubrl
push
dec
int3
and
lret
mov
cltd
loop
dec
dec
les
ja,pn
mov
dec
push
push
xor
fiaddl
fcomp
gs
pop
jae
nop
in
pop
cs
faddl
loop
inc
addl
adc
add
xor
into
adc
adc
insb
dec
fsubrp
mov
inc
add
push
inc
popa
das
and
pop
mov
mov
and
stos
jae
xor
imul
loope
mov
push
mov
mov
mov
push
fadd
cmp
xor
inc
xchg
test
mov
pop
roll
push
mov
push
lcall
arpl
dec
into
sti
xchg
inc
bndstx
jg
pop
jg
xchg
sub
cmp
inc
mov
xlat
xor
lret
push
and
je
jecxz
xchg
cmpsl
sub
rep
aas
push
dec
jae
imull
mov
mov
or
jge
inc
lret
cwtl
sbb
fisubl
inc
pop
imul
cmpsl
xor
pop
or
mov
cmp
pop
cmpl
xchg
scas
mov
dec
sbb
xor
rol
fwait
pop
xchg
push
push
outsl
out
bound
das
mov
loop
or
loopne
cli
adc
xor
aam
mov
fldl
out
pop
mov
dec
add
sub
pusha
insb
mov
mov
lret
mov
out
aaa
xchg
lret
adc
jbe
xor
enter
sbb
jns
add
je
inc
shll
xorl
sbb
orb
jb
movsb
pop
icebp
and
and
clc
jmp
into
cli
je
scas
jo
ja
cld
xor
cwtl
arpl
in
xchg
inc
loopne
dec
pop
and
mov
cmp
sbbb
jb
movsb
pop
pop
add
movsb
dec
add
mov
xchg
xchg
xor
loop
fsubs
fmuls
pop
inc
sbb
sahf
les
lock
inc
dec
movsl
pop
sub
push
jmp
ret
rcrb
mov
xor
int
inc
sub
ljmp
cmp
in
or
shl
xchg
stc
iret
mov
cmp
ja
jecxz
xor
pop
sub
jg
dec
int
movsl
jno
aad
lret
pop
mov
loop
in
testb
scas
das
xchg
inc
aad
mov
xor
addr16
loop
xchg
es
in
loopne
int
arpl
testb
mov
out
js
jbe
cmp
push
aam
xchg
push
cld
pop
repnz
pop
mov
mov
shll
dec
out
xor
dec
mov
mov
fdivrl
jp
out
jg
lods
inc
or
lea
xchg
mov
loopne
mov
sub
icebp
inc
stos
das
jae
dec
repz
inc
jnp
cmp
aaa
add
clc
loope
adc
mov
inc
aas
mov
fmull
pop
pop
cmpsl
adc
add
pop
scas
lretw
jbe
in
out
sarl
out
arpl
fadds
mov
repz
sub
sub
aam
insl
pop
sub
jae
xchg
push
push
and
in
mov
je
dec
push
in
push
or
fstps
repz
or
sub
dec
outsl
inc
add
and
mov
jp
and
dec
inc
sub
aam
pop
iret
adc
and
iret
xor
cmc
arpl
fwait
adc
xor
and
jp
sbb
xor
pop
arpl
adc
sahf
lds
incl
push
dec
in
ja
jmp
or
mov
stc
test
push
out
and
setns
inc
mov
std
js
in
xor
xchg
inc
push
xlat
imul
jns
leave
xchg
add
xchg
dec
or
cs
xchg
xchg
sbb
sub
pop
sub
dec
ds
test
jb
sub
mov
test
inc
sbb
scas
mov
sub
fidivrs
mov
jne
outsb
push
mov
mov
xlat
imul
data16
jbe
push
and
dec
cmpsl
test
or
fwait
mov
inc
inc
cmpsb
lock
dec
pop
add
stos
or
cwtl
cmpsl
mov
push
add
mov
add
shlb
imul
mov
int
pop
icebp
mov
lret
cmpsl
xchg
mov
out
and
mov
in
and
xchg
dec
insl
jle
inc
dec
pop
jbe
ss
pop
jae
out
pushf
pushf
mov
mov
and
jnp
nop
movsb
cmp
push
xchg
mov
fabs
pop
mov
hlt
fs
scas
mov
stos
repnz
daa
add
cmpsl
push
outsb
mov
int3
test
nopl
js
cli
stos
fsubrs
mov
xor
inc
testl
std
inc
lret
jne
inc
xchg
adc
and
rcll
mov
insl
sub
jp
imul
roll
push
jbe
push
mov
pop
jmp
imul
dec
jecxz
daa
jmp
pop
test
mov
sub
cmp
add
push
jne
xchg
ja
inc
in
mov
lods
lea
fwait
test
scas
sbb
jecxz
sub
cmp
xor
fldt
addr16
bound
mov
jle
or
cmp
xchg
aaa
jbe
mov
xor
mov
scas
inc
jp
push
inc
addr16
sub
mov
jbe
frstor
dec
aaa
cmpsl
xchg
xchg
cmp
mov
lock
mov
mov
mov
mov
out
sub
iret
ds
adc
clc
lret
xlat
or
or
lods
mov
sbb
mov
pop
scas
out
ds
shl
xor
adc
lret
cltd
xor
or
cmpsl
pop
pop
testl
mov
imul
jne
divl
lret
jp
sbb
popf
or
test
pushf
lods
incl
mov
pop
scas
sbb
pop
cmp
and
ja
movsl
lds
mov
xchg
xchg
cmp
jmp
jns
and
cmp
mov
push
sbb
and
ss
mov
push
int
mov
jno
fmulp
jne
loopne
mov
jns
outsl
outsl
xor
out
nop
into
cmp
sub
aad
cmp
xchg
fwait
push
push
icebp
add
testl
imul
in
sar
and
ds
jae
pop
mov
ss
pop
in
sbb
mov
or
mov
outsl
cmp
cwtl
inc
mov
call
mov
adc
mov
xor
push
xchg
icebp
cltd
mov
xor
sub
fst
insb
xchg
sbbb
orl
gs
push
lahf
sarl
mov
stos
shlb
out
jp
mov
idivl
movsb
jnp
fnsave
add
and
loop
das
cmpb
xor
xlat
cmp
in
cmp
popa
xor
xchg
ss
xor
mov
leave
hlt
loopne
test
sub
fldenv
int
sahf
jb
xchg
jmp
das
mov
pushl
adc
fwait
jmp
sub
xchg
dec
push
into
adc
add
mov
fldenv
adc
cmp
push
mov
fnsave
and
xchg
inc
dec
mov
aam
adc
aad
jl
mov
or
es
adc
pusha
and
out
mov
mov
call
cwtl
mov
mov
jecxz
testb
shrl
jge
addr16
jecxz
mov
ds
aaa
dec
xchg
aaa
cmp
push
inc
loop
addr16
mov
adc
and
mov
enter
pslld
pop
call
xor
in
cwtl
stos
mov
shlb
mov
stc
mov
sbbb
psubd
in
adc
xchg
sub
adc
dec
mov
cwtl
in
arpl
enter
jge
pop
ret
xchg
mov
jp
out
add
and
fstl
cmpsl
fcompl
out
xor
mov
out
xchg
pop
or
jp
push
sub
fwait
test
lret
sbb
leave
scas
mov
stos
sbb
sub
and
xor
bound
add
in
loope
push
ret
jg
push
cmp
pop
gs
fsubrs
lods
dec
fsubl
or
testl
pop
xchg
repz
fdivrl
or
lahf
push
hlt
add
sub
sub
push
insl
faddl
pop
inc
clc
dec
pop
fsubs
test
out
xchg
pop
sub
xchg
loope
mov
sahf
sar
iret
imul
xor
orb
aas
ss
das
int3
pop
cmp
jecxz
mov
lock
daa
inc
ja
add
xchg
cmpsl
loope
rclb
sbb
lret
ret
outsl
mov
shll
dec
push
push
lods
setle
mov
jl
mov
xor
sbb
sub
in
xor
jb
outsl
loop
fdivl
push
dec
push
shrb
ret
mov
out
push
lock
loope
lds
jge
dec
repnz
mov
scas
scas
imul
sbb
loop
hlt
push
lods
mov
imul
clc
mov
filds
pop
dec
iret
and
je
sub
out
shll
pop
sub
push
sub
fsubl
mov
dec
pop
inc
mov
in
aaa
test
cmpsl
lcall
jae
pop
lea
push
int3
and
sbb
xchg
lahf
jmp
pop
add
hlt
pop
jbe
jmp
and
pop
popa
mov
mov
data16
xor
mov
pop
push
test
or
mov
xchg
in
test
add
jmp
and
icebp
cltd
jg
fwait
lock
dec
addr16
es
jle
arpl
je
lock
fisttps
cmpsl
xor
and
sub
mov
icebp
outsb
es
shlb
jp
stc
je
lcall
fucomip
out
cli
int3
aam
int
mov
test
ds
xchg
ja
push
fdivs
inc
dec
fnsave
add
sbbl
jns
mov
push
stc
pusha
sub
mov
shl
lds
push
sub
add
hlt
mov
mov
dec
sub
xor
jmp
out
mov
es
cmc
mov
les
jns
ds
fwait
lcall
cmpsl
test
stos
mov
out
inc
jecxz
mov
dec
cmp
mov
lock
push
sahf
les
and
iret
inc
aas
mov
arpl
cmp
mov
xchg
pop
mov
jg
cmp
dec
push
not
xchg
sub
addr16
mov
lds
inc
pop
movaps
int
das
test
cmp
test
in
imul
ja
or
dec
add
divb
push
leave
pop
popa
test
out
aas
ja
test
scas
sbb
mov
adc
mov
outsl
inc
xchg
mov
fs
jno
jns
pop
mov
push
test
mov
xchg
mov
je
jmp
push
xchg
add
ds
cmpsb
or
sbb
in
loopne
clc
jmp
cmpsl
push
out
pop
inc
dec
aad
jle
and
sub
sbb
dec
clc
jae
aad
pop
cmpsl
fdivrp
flds
dec
jae
stos
test
pop
jecxz
mov
iret
jmp
xchg
xor
shlb
adc
data16
push
ret
pop
xorl
ss
loope
jmp
and
leave
mov
mov
pusha
cmp
xchg
std
stos
add
pusha
adc
hlt
inc
andl
push
xchg
mov
in
dec
loope
lock
push
in
fldcw
sub
mov
int
inc
dec
gs
push
jbe
mov
lods
jge,pn
sub
cmp
movsb
imul
or
out
ficomps
pusha
push
out
in
gs
cmp
push
loop
fld
ret
xor
bound
rcl
xchg
jmp
mov
xchg
scas
mov
sub
mov
sub
fmuls
test
sbb
xchg
xor
xlat
jb
mov
mov
rorb
xor
popa
lds
jmp
adc
dec
and
mov
pop
lock
cmp
out
mov
xchg
jno
xlat
outsb
mov
mov
mov
mov
cltd
push
sub
sub
cwtl
das
jecxz
js
sahf
dec
xor
popf
or
pop
mov
stos
inc
mov
and
clc
xchg
pop
fistpl
test
adc
jp
adc
mov
dec
jecxz
xor
mov
call
in
mov
cld
imul
cltd
mov
and
mov
cmc
mov
or
push
jae
pop
mov
xchg
sbb
movsl
in
int
adc
or
mov
fstp
push
pandn
int3
sub
fs
xchg
loope
sbb
mov
sbb
xor
xchg
shll
inc
push
ds
arpl
push
inc
push
push
inc
xor
mov
adc
xor
add
pop
mov
cli
in
sub
roll
icebp
mov
and
rcrb
andb
xchg
outsl
xor
les
cmp
fcomps
pop
cmp
inc
pop
inc
out
mov
in
xchg
dec
lea
jl
add
dec
popf
lods
js
inc
aas
rcr
and
mov
and
or
push
cli
js
lods
test
lret
sti
lock
cmp
iret
pop
fadds
mov
fcmovnu
rcr
pop
cmp
pop
iret
aad
sarb
shrl
fdivr
push
xchg
push
jo
jne
shlb
sub
mov
mov
and
lcall
xchg
imul
clc
lds
jo
popf
fildll
cmpsl
jl
stos
xchg
mov
jge
andb
jne
mov
movsl
imul
jno
push
sti
cmp
test
pop
ret
outsl
jae
push
sbb
mov
and
out
push
mov
adc
pop
push
sub
xchg
lret
xlat
repz
arpl
std
or
repnz
mov
cli
aas
jg
popf
inc
call
push
sbb
inc
rcrb
daa
adc
in
in
xchg
gs
mov
sub
mov
data16
outsb
mov
lock
test
daa
in
xorl
repnz
dec
fnsave
push
movd
jo
fwait
arpl
aad
outsl
lea
adc
xchg
movsl
inc
test
mov
or
mov
popf
xor
push
mov
jl
psubsb
in
std
ja
jmp
inc
rolb
add
adc
rorl
dec
inc
jnp
mov
mov
lods
add
inc
mov
shlb
movsl
imul
cltd
jl
cld
xor
sub
repz
loopne
jnp
frstor
jb
mov
inc
xlat
inc
pop
mov
out
sbb
xor
pop
inc
fisubs
sub
push
sub
mov
punpckhdq
sbb
out
inc
loope
rcr
test
aad
stc
pop
les
scas
or
push
insl
push
loope
pushl
fs
push
inc
add
xchg
mov
fnstsw
cmpsl
shll
insl
fiadds
hlt
or
mov
or
dec
adc
aaa
int
sbbb
lock
daa
loop
pop
sub
add
inc
ss
pop
insl
pushf
or
ds
fnstenv
push
sbb
pop
lock
cmp
shlb
fsubrl
leave
pusha
testl
iret
flds
jg
mov
inc
addr16
ds
aaa
cmp
dec
das
push
add
pop
outsl
xor
mov
adc
mov
arpl
sub
jmp
sub
push
popf
dec
or
insl
rcr
cmp
lods
mov
aas
or
mov
bsf
in
cs
pusha
xchg
out
sbb
add
je
aam
pop
loopw
sbb
inc
xor
ret
or
inc
fisttpl
es
lock
ds
add
ret
sub
and
mov
dec
jno
mov
or
mov
mov
and
movsl
ret
insb
cmpsl
jecxz
icebp
sub
icebp
into
outsb
popl
lods
cmp
mov
sub
fdivl
pusha
ret
pop
aam
push
xchg
xor
fdiv
out
xchg
adc
lea
mov
outsl
loope
pushf
lret
mov
sbbl
fdecstp
push
pop
push
sbb
xor
adc
push
jle
arpl
outsl
ds
add
and
cmp
in
ret
push
push
pop
push
mov
adc
fwait
inc
adc
mov
rolb
leave
lcall
pop
fstpt
xchg
xor
and
aam
xorb
int
mov
lret
push
and
xorb
add
psubusw
pop
fldcw
popa
inc
enter
mov
mov
cmp
push
les
push
jo
repz
xor
incb
sbbb
das
adc
jp
mov
jp
jbe
ds
cmp
pop
inc
stos
fsubrs
jbe
add
pushf
jae
or
sti
cmpsl
repnz
insb
ficoms
sub
dec
into
sbb
js
pop
push
mov
cltd
adc
pop
xlat
mov
aam
xor
jg
xchg
cmp
lea
dec
xchg
dec
rorl
sbb
lcall
pop
push
sbbb
in
pop
gs
xchg
push
inc
push
push
call
outsb
cmp
push
cwtl
jge
and
lods
lcall
shlb
jb
add
adcb
push
out
mov
xchg
xchg
les
mov
mov
data16
mov
jnp
cmp
push
push
imul
int3
jl
mov
cmp
inc
pop
mov
insb
mov
mov
ljmp
mov
ret
hlt
jne
push
loopne
lods
cmp
dec
push
test
inc
call
add
bound
pop
roll
movsl
add
mov
xor
inc
arpl
dec
jbe
fidivl
push
dec
mov
cmpsb
inc
dec
cld
mov
test
mov
sbb
rorb
es
out
push
mov
adc
jne
xchg
xor
cld
loop
mov
sbb
es
fbld
and
pop
or
jb
sub
sbb
in
cmp
push
pop
out
push
mov
adc
pushf
cmp
xchg
sbb
push
scas
push
pop
and
add
cmp
adc
leave
mulb
push
fnsave
push
dec
jnp
call
sbb
dec
or
jb
loop
jne
outsb
icebp
adc
aas
add
cmp
out
mov
shlb
and
pusha
sub
push
pop
push
dec
into
mov
int
out
lods
jmp
cmp
enter
mov
inc
nop
xor
adc
mov
icebp
xor
or
adc
icebp
in
insl
aaa
stos
pop
subb
inc
sub
xchg
mov
bound
mov
sbb
add
pop
aam
adc
add
out
fwait
dec
adc
inc
and
in
jmp
ficompl
xor
sbb
enter
mov
push
movb
sbb
lods
fldt
stc
nop
in
inc
xor
pop
mov
outsb
nop
shl
cmc
stc
mov
iret
push
sbb
mov
into
in
cmpl
dec
movsb
dec
lcall
fwait
push
fldenv
xchg
jae
gs
pop
mov
cwtl
insb
sbb
andb
cmp
test
or
lahf
dec
es
cmp
cmp
cltd
add
mov
dec
jno
movsb
pop
icebp
scas
lret
xor
insl
push
pop
push
insl
sbb
mov
mov
push
lea
mov
fs
jns
cmpsl
and
ret
int3
sbbl
add
mov
lods
stc
aaa
mov
xor
mov
jns
inc
lea
pop
ror
pushf
fnstenv
adc
push
lret
sti
xchg
js
test
mov
int3
outsb
lahf
das
out
pop
mov
xor
sbb
push
cmpsb
pop
xlat
xor
sub
es
mov
insl
cmp
fiaddl
mov
adc
pushf
mov
repnz
sub
cmp
jecxz
jg
popa
mov
sarl
loope
in
xchg
notl
lahf
adc
jb
mov
mull
xor
insb
vpcmpeqw
pop
or
test
xchg
xor
and
pusha
jecxz
jge
aaa
icebp
out
test
pop
push
test
inc
jbe
je
ficompl
sub
mov
mov
stc
sub
iret
ret
inc
rcr
dec
in
shr
addl
cmp
or
cmp
mov
cmp
push
out
push
les
insl
and
xchg
lahf
sub
in
icebp
or
lock
sub
xchg
addl
hlt
mov
lcall
cmp
jae
sbb
das
jmp
xchg
loope
sarl
mov
sub
psrad
dec
cmc
and
sbb
pop
add
mov
fisubrl
outsl
push
ljmp
outsl
loop
popf
rol
stos
adcl
mov
sbb
jno
cld
mov
xor
fadd
aam
push
sahf
jne
orb
pop
cld
jns
aam
pop
repnz
cs
xchg
into
je
stos
mov
xchg
push
dec
lret
pop
xchg
pop
mov
mov
sbb
out
stos
inc
jle
mov
or
in
cwtl
adc
xor
out
pop
repnz
pop
sub
pop
sub
mov
movsl
pop
leave
insb
mov
mov
jno,pt
out
add
loopne
dec
and
push
test
push
adc
cmpsb
orl
jbe
sarl
fistps
shll
sbb
jo
mov
mov
jl
xor
call
lock
lea
or
imul
repz
cmpb
adc
out
push
ja
call
test
aas
jno
mov
outsl
push
loop
jne
ljmp
mov
add
and
jnp
popl
movsl
add
mov
lcall
xchg
or
cmp
cmpl
push
ljmp
in
and
cmpsb
sbb
xchg
add
test
mov
enter
xchg
push
cmpsl
adc
push
pop
movsb
jle
das
das
dec
mov
ror
pop
mov
mov
pop
push
sahf
sub
shl
xchg
xadd
out
jns
dec
aam
push
or
xor
xchg
inc
pop
hlt
jae
push
mov
mov
mov
fldcw
inc
mov
test
cltd
or
mov
jo
and
mov
insl
xchg
cli
push
out
mov
mov
movd
mov
fiadds
xchg
movsl
cmp
testl
inc
mov
mov
scas
or
adc
and
inc
mov
dec
xchg
add
adc
inc
push
sub
xlat
data16
jns
in
jno
in
out
mov
hlt
das
xchg
jae
push
or
test
jns
adc
fcomp
notb
in
rorl
mov
mov
int3
xchg
orb
xor
cld
test
clc
pop
popf
mov
std
fucom
sbb
sub
cmp
sbb
mov
cmpsb
les
or
daa
imul
fadds
sbb
mov
cld
push
in
mov
or
inc
mov
out
bound
pop
mov
shll
xchg
mov
jnp
cwtl
dec
pop
xor
xchg
cmpsb
aad
pushf
dec
popa
jns
mov
decb
test
hlt
or
adc
and
xor
ffreep
mov
pop
push
mov
xor
cmp
cmp
push
mov
rcrl
das
cmpsl
lcall
fs
dec
stos
inc
addr16
out
pop
xor
inc
movsb
mov
outsb
mul
add
imul
std
aad
jg,pn
or
pop
lcall
scas
ret
pop
cmpl
and
int3
jmp
adcl
daa
pop
mov
mov
adc
xchg
cmp
dec
and
movsb
cltd
mov
inc
mov
test
leave
mov
xchg
out
adc
cli
sbb
sbbl
add
jae
dec
push
push
mov
cmp
sbb
jbe
pop
xor
cltd
cwtl
stos
mov
push
and
mov
xchg
lds
sbb
test
nop
cmpsl
ja,pt
or
mov
in
push
popa
pop
cmp
xchg
popa
mov
xlat
or
dec
and
ljmp
jl
or
mov
pop
aad
dec
sub
bound
pop
je
std
cltd
loop
push
test
or
aas
dec
fstpt
or
mov
and
arpl
lods
mov
shrb
fstpl
pushf
sahf
lods
cli
fcomps
or
mov
xsha1
cmpsb
dec
lcall
lahf
movb
push
add
aas
enter
inc
push
dec
sbb
pop
mulb
and
xchg
mov
or
cpuid
sbb
rolb
cmp
inc
arpl
int
jne
pop
xor
push
js
adc
std
dec
gs
in
or
test
lods
out
adc
mov
dec
lcall
in
mov
je
push
mov
sub
adc
or
insl
pop
cs
inc
push
aad
xlat
mov
int3
fcompl
xchg
pop
cltd
popf
pop
negb
mov
fcomps
in
inc
scas
pop
repnz
xor
mov
push
insl
popf
dec
stos
inc
dec
cli
cmp
fcomp
mov
pop
fildl
push
xchg
lret
pop
mov
mov
sbb
lret
enter
rorl
lret
das
int3
dec
mov
push
test
pop
les
jnp
insb
inc
jecxz
ja
loope
repz
scas
ja
mov
dec
pop
sahf
jg
daa
lcall
dec
and
sub
clc
push
mov
mov
push
imul
dec
daa
push
sub
push
xchg
imul
fdivl
lret
and
stos
xchg
inc
push
pop
add
add
andb
sbb
in
pop
pop
fucomip
inc
je
call
inc
jecxz
cwtl
adc
sub
shll
dec
dec
dec
aaa
and
push
cs
pop
add
cwtl
stc
xchg
bound
fiadds
adc
test
scas
xor
mov
mov
xlat
cltd
es
mov
push
test
mov
mov
imul
stos
adc
cwtl
or
pusha
pop
add
call
mov
ret
pusha
leave
in
or
scas
aad
and
divl
movsb
pop
stos
mov
or
cmp
mov
sub
pop
insb
inc
jge
stos
xchg
mov
jge
iret
fdivrs
xor
jle
outsl
fsubp
pop
rol
test
test
jmp
mov
jg
mov
jmp
aas
push
xchg
das
jae
jns
mov
ja
xor
push
mov
inc
push
mov
lret
xchg
rcrb
jmp
cmpl
in
pusha
mov
cmpsl
lret
pop
pop
push
clc
inc
xchg
and
and
and
orb
test
cmp
daa
dec
hlt
into
sub
jnp
xchg
mov
adc
rcr
pop
popf
ljmp
stos
or
popa
push
push
daa
pop
pop
mov
cmp
movsb
cmp
outsl
pusha
sbbl
xchg
push
jne
imull
stos
shll
dec
in
int
scas
inc
dec
scas
mov
int
cmp
jge
mov
xor
out
ss
mov
or
mov
fwait
in
rcrb
lret
cld
pop
loop
xchg
stc
dec
fildll
adc
push
push
rolb
mov
jne
mov
test
mov
xor
push
mov
push
push
fstl
call
mov
lahf
je
jbe
xor
iret
fs
loop
jae
push
je
pop
add
xor
add
pop
shlb
in
stos
outsl
arpl
arpl
xor
rol
inc
shll
jbe
push
daa
std
inc
push
stos
dec
fldcw
ja
fisubs
out
cwtl
or
add
lea
sub
test
inc
mov
jecxz
mov
out
mov
pop
test
int
enter
dec
push
addr16
sarb
nop
jnp
cmp
ljmp
clc
adc
jns
push
cli
stc
mov
sub
fsub
pop
push
sbb
xchg
repnz
arpl
iret
cli
push
fisubrl
ret
sbb
rorl
bound
or
ja
adc
stos
add
xchg
in
dec
pop
testb
loope
and
repz
pop
icebp
lds
add
aaa
cltd
outsl
out
dec
lret
shlb
or
sub
mov
inc
and
pop
adcb
push
mov
jmp
add
inc
insl
popa
cs
fistps
cmove
ret
subb
jo
stc
fstps
mov
sbb
insb
push
test
popa
clc
dec
lret
lock
add
push
dec
sbbb
mov
xchg
jecxz
lods
aam
bound
cmp
mov
sbbl
aam
mov
out
outsl
rorl
mov
mov
data16
out
in
sub
fnstenv
out
outsb
outsb
xchg
icebp
jmp
scas
adc
imul
jbe
stos
jbe
fcomps
cmpsb
pop
shlb
dec
push
movsl
add
hlt
sbb
int3
leave
push
mov
icebp
cmp
xchg
popf
sub
mov
inc
fists
push
leave
shll
loop
dec
cmp
imul
add
repnz
enter
imul
notb
cwtl
cld
adc
pop
pop
icebp
dec
inc
sarb
data16
pop
cmp
sub
cmp
nop
xlat
shlb
lcall
xor
mov
lahf
push
sbb
mov
mov
push
cmpsb
decb
fdivrs
and
inc
in
sbb
test
out
cmp
xor
sbb
jp
idivb
sti
pop
sub
mov
inc
and
rcl
and
jo
push
int3
dec
adc
arpl
rol
pop
mov
jnp
dec
and
adc
xor
push
mov
xor
cmp
xchg
fldl2t
pop
push
dec
in
sub
sarl
cmp
sub
mov
mov
xor
inc
mov
jle
lods
scas
pop
lret
jo
fcmovnu
push
gs
mov
fnstsw
stos
inc
sbb
std
push
jno
jg
add
lock
push
addr16
inc
jno
inc
int3
movsb
push
inc
lea
inc
in
or
xor
push
xor
pop
and
jmp
iret
add
out
pop
cmp
scas
ret
iret
int3
pop
jns
mov
adc
ds
pop
ss
push
out
icebp
scas
pop
inc
push
enter
cmp
es
je
inc
inc
push
jb
fnstsw
push
mov
aas
jmp
les
xchg
shrb
test
xchg
jge
mov
les
in
popa
clc
fmulp
lds
mov
pushf
inc
mov
xchg
mov
fisttps
andb
add
add
jmp
push
movsb
outsl
adc
imul
lods
cmpsl
xlat
outsb
inc
je
adc
orb
pop
add
cmpsl
clc
test
outsb
lds
or
inc
aad
aam
sub
out
insl
inc
pop
ret
pushf
push
cld
dec
ss
jno
imul
jl
sub
xchg
pop
shll
dec
and
jno
xchg
ss
pop
jecxz
nop
pop
ss
mov
inc
push
and
aas
cmp
stc
js
xchg
scas
arpl
test
mov
mov
sbb
jmp
mov
mov
push
test
inc
push
sub
test
push
push
xor
mov
inc
dec
pushf
int
into
sub
mov
jns
out
ja
test
mov
dec
push
out
scas
mov
mov
frstor
mov
add
inc
lods
jmp
xchg
mov
lock
add
imulb
mov
pop
mov
and
xorl
js
adc
call
orps
popa
xchg
push
inc
mov
sub
inc
xchg
sbb
lret
lock
out
xor
imul
leave
dec
or
movsl
lods
dec
mov
in
or
cmpb
out
add
xchg
sbb
push
jge
lret
adc
mov
and
movsl
adc
fistpl
out
fs
xchg
shrl
arpl
test
jno
out
or
cmp
std
cmp
and
je
movb
insb
add
xchg
pop
push
mov
jno
jae
test
stc
popf
cmp
scas
out
in
push
xlat
and
rcl
push
adc
loopne
sub
sub
mov
scas
jno
lods
jge
dec
es
or
cmpb
mov
mov
ret
cmp
pop
shlb
push
xchg
push
cwtl
pop
in
inc
movsb
fnsave
push
adc
pop
test
push
jnp
xchg
add
sbb
loopne
inc
fidivrl
in
stc
nop
fisubs
mov
movsb
jl
cmpsb
push
repnz
mov
inc
gs
insb
inc
ror
mov
dec
pop
jp
cmpsb
out
fmull
jb
bound
cwtl
adcl
aaa
push
jmp
movsl
mov
sbb
pop
lods
fs
pusha
jns
xor
lea
jecxz
or
int
xlat
aas
aam
push
push
pop
lea
aad
ss
xchg
cmp
pop
lahf
data16
or
cmp
sbb
test
jecxz
jo
xor
sub
cltd
inc
lret
xlat
out
xchg
call
sbb
nop
cmc
xlat
xchg
push
jge
mov
lcall
cwtl
inc
push
xorl
mov
mov
lods
ljmp
rcrl
push
add
adc
mov
rorb
aam
mov
mov
cmpsb
pop
mov
pop
pop
cmp
cmp
mov
orl
push
adc
push
hlt
inc
cmp
mov
sub
enter
ja
lea
dec
cld
scas
mov
pusha
jo
inc
mov
push
out
dec
in
add
divb
das
out
push
push
cwtl
enter
xor
pop
sti
push
mov
out
pop
or
int
ret
or
andb
aam
ss
pop
mov
lea
scas
inc
pop
adc
jecxz
mov
pop
pop
and
pop
xor
icebp
pop
insb
push
inc
xchg
adc
ret
fildl
adc
int
arpl
fdivs
mov
test
test
jp
adc
push
mov
in
inc
dec
jmp
ficomps
aad
fadds
jge
mov
xchg
std
inc
icebp
jmp
mov
insl
mov
and
repz
out
std
jo
ja
stos
shlb
cmp
add
mov
mov
pop
and
into
hlt
out
scas
mov
fs
xor
fsincos
shll
jo
or
lods
xchg
sub
and
xor
or
sbb
nop
es
data16
cwtl
pop
push
rcr
mov
or
call
inc
mov
popf
pop
mov
les
cmpsb
out
cmpsb
fwait
shrb
pop
in
loope
lret
ret
outsb
sbb
sahf
mov
mov
les
xlat
push
sub
lods
inc
xchg
dec
lea
ds
or
rcl
inc
xchg
xor
inc
sub
in
push
jmp
roll
mov
loopne
pop
xlat
test
adc
inc
cmpsb
mov
push
iret
cmp
daa
js
dec
sub
mov
movsb
inc
sub
in
sbbb
sub
std
mov
adc
push
sahf
xlat
scas
dec
data16
mov
push
and
add
push
jecxz
inc
stc
aas
ret
push
add
pop
fistps
or
stc
stc
sub
or
adc
pop
xchg
pop
or
mov
mov
xchg
lods
ds
cmpsl
fcmovu
iret
lds
cli
int
cmp
adc
push
cmp
repnz
sub
mov
xor
dec
push
mov
sub
cmp
ja
mov
jbe
cmpsb
push
dec
pushf
mov
and
push
sub
cld
ss
in
pop
mov
repnz
xor
dec
loopne
add
out
insb
addr16
mov
insl
jge
xlat
cmp
pop
cs
add
jnp
mov
int3
call
mov
int3
aas
ret
xchg
cmp
data16
aam
or
ds
pop
imulb
lds
cmc
jge
sub
test
lret
adc
lcall
push
flds
ret
pop
mov
push
jmp
out
movsb
insl
cli
fnstsw
xor
adc
sub
mov
xchg
sbb
cltd
mov
or
loopne
nop
in
push
inc
mov
lret
daa
add
lea
mov
push
stos
outsl
mov
xor
loopne
add
adc
arpl
ret
jb
pop
mov
pop
scas
les
fistl
clc
push
movsl
sbb
imul
subb
testl
pop
and
inc
mov
mov
and
sub
push
xor
and
lods
loopne
push
sub
sub
nop
imul
fsts
inc
push
xor
adc
mov
stc
mov
outsl
push
adc
dec
xchg
push
xor
or
mov
jns
mov
cli
jecxz
push
pop
icebp
fstl
sti
add
mov
lret
pop
sub
add
cmp
int
fildl
xchg
aaa
jae
mov
neg
jno
adc
fdivl
movsl
jmp
sub
movsb
lcall
cmp
dec
sbb
sub
cwtl
mov
dec
and
dec
xor
popa
pop
pop
mov
or
mov
loopne
cmp
sub
inc
pop
dec
adc
lcall
xchg
imulb
inc
add
sbb
xorl
jge
sub
inc
sub
out
std
dec
data16
xchg
imulb
outsl
sbb
push
jp
and
fwait
in
adc
rorb
fidivl
test
dec
scas
mov
mov
and
shlb
std
sarb
jle
push
daa
pop
rclb
inc
mov
push
fistps
push
movsl
enterw
xchg
aam
lret
push
arpl
add
mov
cmp
push
jbe
xchg
mov
dec
ret
mov
std
mov
in
sub
ds
xchg
mov
sub
mov
jmp
or
xor
icebp
sub
dec
int
nop
xlat
adc
mov
xor
sahf
std
imul
hlt
mov
inc
or
aaa
sahf
in
xor
insb
mov
ret
push
mov
mov
dec
sarl
mov
fs
add
mov
mov
jmp
or
pop
add
aaa
mov
scas
push
mov
cmp
push
imul
xchg
or
mov
jp
lea
push
pop
adc
ret
and
nop
cwtl
pusha
repnz
arpl
jle
lock
dec
ljmp
pop
mov
nop
pop
push
jmp
lea
and
mov
ds
fidivs
xchg
shrb
flds
push
mov
or
jne
inc
pop
push
outsb
inc
pop
ret
jnp
std
cmp
xchg
cmova
mov
fdivl
loopne
aam
mov
mov
push
popa
xor
and
in
fmull
insl
mov
or
dec
mov
inc
call
in
call
or
inc
lret
jl
jge
xor
sahf
pop
subl
sbbb
xlat
clc
cs
out
movsl
mov
stos
mov
dec
insl
fdivr
and
xchg
cmc
cmpsb
insl
fisubrs
inc
jo
stc
or
out
add
std
dec
pop
pop
or
xor
xchg
cs
imul
mov
adc
test
push
int
ret
lret
lea
std
jne
xor
bswap
cld
pop
jmp
adc
and
daa
lret
sub
xchg
sbb
mov
fprem
or
sub
jmp
xor
ss
adc
popa
lret
mov
sub
fistpll
leave
sahf
mov
data16
xor
lahf
xchg
mov
aad
and
mov
xchg
enter
push
mov
sbb
loop
add
and
pop
in
lahf
adc
jle
sbb
and
sti
imul
pop
mov
jl
add
and
lds
or
fcmovne
sbb
push
mov
adc
jnp
and
rol
faddl
ss
jnp
push
test
imul
cmp
ja
call
jecxz
xlat
orb
xor
lea
mov
and
daa
mov
jae
mov
adc
cli
mov
pop
mov
das
cmp
stc
fildl
adc
movsb
cmpsl
aam
adc
cs
sbb
xlat
cmp
fnstcw
inc
loopne
cltd
or
ss
cmp
test
sbb
mov
aam
mov
outsl
jp
jnp
call
pop
outsl
inc
adc
sarb
daa
fdiv
inc
fadds
pop
imulb
leave
jge
jmp
xor
cwtl
fwait
lods
xchg
add
jecxz
add
mov
loop
inc
push
mov
sub
xchg
aaa
lods
inc
andb
bound
dec
add
xor
pop
or
sub
dec
jne
idivl
jg
les
mov
or
push
add
push
insb
mov
mov
in
rcll
adc
ss
outsb
cltd
sbb
mov
imul
inc
ljmp
addr16
daa
in
jns
imul
int
push
fistpll
xor
or
loop
cli
xchg
test
imulb
sub
pop
loopne
pop
daa
push
sub
mov
es
pop
dec
out
cmpsb
push
pop
mov
rcll
das
cld
jae
jle
pop
mov
cmp
pop
sbb
stc
fsubr
sbbl
xchg
cmp
jno
cmp
jp
cmp
leave
adc
mov
mov
xchg
stos
test
pop
sahf
adc
out
mov
inc
pcmpgtb
xorb
mov
std
xchg
push
subb
psraw
pop
add
adc
adc
scas
push
fstl
shrb
pop
jo
mov
movsl
xchg
ficomps
cli
cmp
dec
pop
add
fdivrl
mov
dec
lods
arpl
rorl
std
pop
sahf
ljmp
push
imul
icebp
adc
sbb
in
push
loope
pop
cmpsb
xchg
cmp
mov
leave
test
inc
xor
nop
ljmp
popa
and
mov
outsb
subb
jmp
mov
sbb
rclb
inc
fisubrs
push
mov
je
jecxz
out
push
std
iret
add
int
lea
adc
popf
hlt
mov
std
pop
xchg
mov
dec
dec
ja
mov
shrl
dec
xchg
jl
pushf
sbb
push
mov
stos
inc
push
mov
leave
mov
roll
jbe
mov
lds
jge
bound
lcall
lahf
test
addr16
pusha
ss
jmp
jnp
push
cmpb
jb
sti
mov
adc
jb
adc
xchg
movd
mov
xor
adc
and
cmp
test
movsl
mov
inc
add
dec
test
data16
or
mov
pop
mov
push
sub
out
xor
cld
fwait
pop
orl
jmp
repz
adc
sbb
adc
inc
or
fs
lock
imul
dec
js
push
inc
ja
dec
ret
cwtl
in
pop
imul
cmp
mov
ljmp
imul
inc
push
je
lock
adc
jl
mov
adc
movsl
leave
xor
lods
xchg
fistpl
xchg
mov
pushf
cltd
mov
aam
xor
mov
mov
dec
jmp
pop
add
les
into
jns
mov
jg
and
xchg
test
and
lahf
cmpsb
and
ret
scas
jecxz
xor
ds
inc
in
es
mov
jns
dec
pop
adc
dec
fldt
shrl
mov
mov
jns
movsl
je
jbe
add
adc
or
sub
pop
xor
dec
jmp
add
cmc
inc
rolb
repnz
outsb
shl
adc
dec
in
mov
outsl
std
aam
cmc
imul
mov
add
push
mov
mov
fs
pop
mov
dec
mov
rcl
cltd
push
fwait
sti
mov
push
inc
fs
inc
or
cmp
jmp
dec
popa
andb
imul
insb
js
or
sarl
fs
xor
xor
int3
repnz
incl
jns
push
aaa
xchg
aad
mov
dec
test
in
inc
lods
scas
nop
data16
mov
mov
and
and
inc
cmpsl
xor
lods
ffreep
jecxz
dec
jne
jg
pop
lods
mov
mov
addr16
movb
fs
jne
hlt
fwait
mov
push
in
ret
lret
xchg
icebp
jl
mov
les
jg
mov
sbb
xchg
jge
iret
jmp
add
test
adc
mov
out
inc
or
pop
mov
loopne
add
jns
fs
adc
das
xor
nop
mov
push
dec
lods
jp
mov
repz
loope
cmp
icebp
je
or
xorl
sub
rolb
es
add
out
xchg
or
arpl
je
jne
sbb
pop
pop
mov
les
sbb
shlb
scas
cmpsb
add
fcoms
xchg
sub
decb
sti
rcrb
subl
movsb
in
insl
imul
jg
jp
mov
inc
mov
cmc
scas
push
aam
push
mov
scas
loopne
divb
sahf
sbb
adc
rol
adc
jne
adc
shlb
mov
push
sub
fs
rorb
xchg
outsb
jle
addr16
dec
or
sub
nop
in
nop
aaa
cli
in
jmp
add
out
fwait
or
mov
and
lret
ljmp
and
mov
and
stos
mov
and
pop
inc
or
pop
testl
push
xchg
dec
mov
sbb
adc
mov
orl
jg
xchg
adc
jge
es
mov
rol
ljmp
into
cmp
aad
push
jmp
and
orl
mov
js
cs
cmp
xor
mov
cs
shlw
or
sub
and
lret
aad
cmpsb
jne
sbb
push
jge
pop
pop
cmc
mov
cmpb
and
mov
inc
mov
and
push
cmpsl
xchg
shlb
mulb
and
pop
mov
fnsave
ds
mov
in
stos
shr
aad
out
jp
sti
dec
add
jl
out
sub
mov
test
outsl
ret
jns
fcoms
push
sbb
imull
scas
ljmp
lds
add
dec
mov
dec
gs
fbld
mov
xor
pop
stos
fs
insl
xchg
xor
push
pop
lcall
add
outsb
add
fmuls
adc
pop
push
loope
adc
pop
mov
mov
mov
enter
insl
pop
lret
lret
cmc
insb
and
pop
add
jo
loope
enter
cmpsb
pusha
enter
mov
fs
addr16
xor
fldt
dec
leave
inc
ss
push
ficoms
mov
xchg
lahf
iretw
xlat
mov
pop
and
inc
imul
stos
jmp
out
data16
inc
orl
ljmp
int3
pusha
pop
xor
in
ja
or
xor
movsl
out
sbb
mov
call
fldl
and
jg
cmpsb
insl
mov
or
shlb
popf
pushf
outsb
mov
xchg
sub
inc
pop
jbe
or
sub
push
jl
loopne
dec
dec
or
fcoms
es
or
int3
pushf
sub
in
test
into
lods
adc
xchg
gs
std
data16
mov
aam
lret
xchg
or
fsubrs
loope
int
cwtl
pop
repnz
mov
pop
repz
orb
adc
xor
ss
dec
cmc
out
ljmp
mov
ret
pop
in
inc
repnz
out
les
cltd
push
dec
ljmp
dec
mov
sub
loope
mov
pop
mov
xchg
pop
dec
sub
jo
or
out
inc
and
mov
outsl
fldcw
icebp
xchg
enter
mov
mov
les
jp
mov
mov
sub
notb
or
sbb
add
cmpb
pop
or
mov
push
call
pop
jne
inc
adc
mov
inc
inc
mov
jae
movsl
mov
test
mov
xchg
jge
xchg
faddl
add
std
sbb
lods
mov
push
pop
movsl
ss
daa
bound
mov
ljmp
jnp
mov
fsubr
jmp
pop
ss
mov
incb
push
cmp
mov
movsl
lret
push
push
addr16
pop
cmpsl
psubusw
xor
cmc
pop
ds
dec
data16
in
cmp
in
sti
fwait
pop
test
insl
sub
mov
mov
iret
mov
jae
mov
dec
pop
jmp
aas
xor
push
cli
inc
mov
pop
push
jmp
mov
not
and
or
inc
pop
jbe
lret
xlat
adc
cld
jecxz
mov
cmp
mov
cmp
push
push
inc
xchg
cwtl
scas
xchg
pop
hlt
push
scas
stos
jne
bound
sbb
mov
cltd
je
fdiv
mov
mov
push
andb
cmpsl
hlt
inc
shrb
leave
pop
cmp
imul
adc
cli
inc
in
jge
out
jo
imul
push
ljmp
push
ret
fbstp
cmpsl
in
and
xchg
lock
scas
in
sub
and
lds
cmpsb
dec
mov
pop
cmp
jge
mov
insb
sbb
push
inc
lea
dec
mov
cmp
inc
leave
insl
xor
mov
xor
pusha
dec
out
or
pushf
cmp
out
sahf
xor
andb
mov
jg
pop
mov
and
arpl
stos
pop
lcall
and
dec
jnp
in
sub
mov
pop
int3
cmc
fcompl
mov
mov
int3
inc
inc
and
std
cmp
sub
in
mov
cs
nop
enter
jno
sbb
dec
mov
and
sub
dec
cmp
inc
push
inc
aam
mov
in
insb
jb
dec
daa
insb
fidivs
and
js
rclb
and
adc
sub
add
test
es
hlt
mov
xchg
mov
lcall
add
adc
pop
inc
out
push
push
loopne
push
dec
lods
inc
add
es
bound
mov
lods
jns
subb
add
pushf
int3
adc
out
lods
outsb
jp
ss
dec
jecxz
push
or
and
stc
push
sarb
popf
sbb
and
test
aad
xchg
dec
repnz
lea
scas
cmp
imul
jae
jne
loopne
outsb
inc
xchg
leave
shrb
add
cmp
mov
shl
sar
aam
dec
loopne
dec
ficoms
or
sub
addr16
das
xor
sub
pop
lods
mov
pop
inc
sub
pop
mov
imul
xchg
fildl
divl
mov
jbe
punpckldq
inc
push
cmp
into
int3
pop
int
jmp
mov
ja
add
stos
inc
fistpl
xchg
add
lahf
gs
test
pop
jb
jne
stos
xchg
loope
pop
dec
cmpsb
arpl
insb
imull
ljmp
rcrb
or
xchg
sbb
or
push
sbb
lock
inc
mov
scas
push
sbb
loope
and
cltd
add
repnz
filds
mov
pop
push
push
pop
push
push
fistpl
in
loop
mov
mov
cmp
loop
sbb
add
dec
sbb
dec
jecxz
lcall
or
mov
lret
jecxz
sahf
push
push
mov
fs
and
scas
test
mov
rcll
stos
inc
push
mov
popf
adc
leave
in
icebp
cli
popf
popa
sub
cli
stos
push
lcall
mov
xor
mov
es
sub
repnz
mov
xchg
rol
fmuls
test
loope
sarl
test
adc
mov
jno
or
mov
dec
or
mov
stos
cmpsl
ret
les
lods
inc
out
mov
pop
out
push
xchg
hlt
dec
add
pop
lods
and
lds
cli
repnz
nop
leave
and
jae
lds
push
pop
cli
xchg
addb
push
outsb
add
jno
pop
mov
cwtl
push
inc
popf
lea
arpl
xor
dec
out
push
dec
addr16
cmp
adc
call
in
leave
xor
out
fistl
xor
xchg
push
or
cmp
or
fs
mov
outsb
rcll
sub
push
mov
test
push
cmc
mov
inc
and
sbb
mov
mov
ret
repz
dec
cmpsl
cmp
out
out
shrb
pop
xacquire
xchg
push
rcll
or
stc
or
or
pop
or
pushf
bnd
sub
iret
sub
xchg
cltd
sbb
jg
inc
mov
cmpsl
jb
dec
repnz
inc
push
lock
js
sbb
testl
sub
add
jno
outsb
repz
jl
addb
adc
ds
lea
lcall
data16
das
add
inc
cmp
mov
or
punpcklwd
and
sbb
push
jmp
arpl
push
mov
sbb
pop
addr16
in
push
imul
inc
jecxz
jno
and
push
fiadds
jmp
push
out
mov
cmp
and
sub
es
jge
icebp
insb
mov
loopne
sub
adc
in
inc
xor
xchg
imul
mov
subb
in
test
ljmp
jmp
mov
mov
adc
test
jnp
daa
or
movsl
lock
iret
sub
fsubrs
pop
mov
insb
ret
jno
sahf
xor
addl
add
js
and
insl
mov
pop
cmp
int3
xchg
and
movsb
mov
adc
mov
add
loop
xchg
push
notl
adc
hlt
icebp
cmp
jbe
aaa
push
cmp
enter
test
jb
and
sbb
jp
xor
lret
jno
fstl
lcall
hlt
and
sub
filds
int
repnz
stos
add
mov
mov
popf
or
sub
xchg
pop
sub
movsl
cmp
or
ret
rcll
dec
fisttps
and
and
jnp
aas
push
dec
push
imul
jo
fistl
mov
aas
int3
addr16
jg
jg
pop
pop
mov
into
xchg
add
xchg
mov
insb
mov
cmpsb
or
adc
loop
out
inc
pushf
cli
push
sub
icebp
adc
scas
arpl
or
push
lea
test
dec
xor
scas
sar
repz
inc
idiv
sbb
mov
xchg
popf
fdivs
sar
mov
xor
sub
xor
ficoml
je
and
ja
xchg
mov
mov
mov
je
or
push
sti
or
movlps
xor
and
dec
push
lahf
inc
cli
xchg
adc
jge
ja
sbb
and
stc
pop
das
icebp
orb
lcall
pop
sbb
inc
pop
int
es
pop
out
addr16
jne
xchg
imul
mov
les
int3
push
or
or
ds
data16
xchg
mov
add
cwtl
mov
and
mov
rol
pushf
das
enter
cmp
sbb
pop
imul
in
and
daa
ljmp
push
and
inc
pushf
or
stos
inc
xchg
lret
js
cwtl
das
sbb
dec
lds
sbb
std
dec
dec
dec
outsb
aam
mov
int
lahf
arpl
icebp
mov
movsb
test
in
mov
mov
and
cltd
jge
sub
xchg
jns
loop
mov
mov
std
out
add
push
inc
stos
test
and
fldt
lock
cwtl
stos
mov
ret
xchg
imul
int3
bound
mov
push
mov
xchg
das
mov
cmp
jg
push
mov
jge
daa
xchg
pop
leave
stos
or
adc
lret
fmull
pop
jb
mov
dec
cmc
xchg
bound
ljmp
push
into
cmp
mov
add
or
and
xchg
data16
push
out
pop
xor
inc
cmpsl
rcll
inc
test
add
test
cmpb
bound
arpl
cwtl
outsl
xchg
or
mov
std
daa
outsl
fs
stos
mov
insl
xor
adc
xchg
andb
lods
cmc
scas
jbe
xor
cltd
mov
cmc
pop
pop
push
mov
add
and
rdmsr
aam
js
mov
or
mov
push
insb
xchg
fsts
xchg
cmp
push
mov
arpl
mov
xorl
xorb
pop
mov
scas
es
sti
pop
adc
out
and
in
clc
and
sub
jne
pop
sub
jbe
loop
mov
mov
dec
iret
in
cmpsl
push
lcall
mov
xor
stos
movsl
add
ret
fisttps
sub
int3
add
or
addl
jbe
hlt
divl
fiaddl
push
adc
gs
or
xchg
jge
popf
out
pushf
inc
cld
loop
dec
cmp
mov
outsl
pop
gs
dec
mov
popa
inc
cmp
fs
xor
xchg
aas
dec
mov
mov
jle
mov
cmp
out
adc
divb
imul
sbbb
out
fdivp
inc
mov
inc
xlat
in
mov
inc
aam
test
ljmp
movsl
cwtl
arpl
rorb
aam
sub
fidivl
sub
in
ljmp
es
adc
loope
cmp
xchg
push
xor
jp
je
pusha
lret
inc
enter
jbe
mov
shrb
rcll
ret
std
pop
lds
ret
push
add
and
aad
xchg
xor
sahf
inc
sahf
mov
mov
pushf
int
ljmp
jp
scas
test
imul
add
sub
test
mov
out
push
or
mov
cmpsl
xchg
pop
stos
fcmovb
int3
pop
cmp
je
aad
pop
mov
outsb
jns
sbb
insl
jge
cltd
sbb
jl
rorb
test
mov
sub
dec
aas
in
inc
pop
addr16
and
pop
outsl
lea
insl
andl
insl
mov
push
jmp
lahf
xor
idivl
mov
hlt
repz
add
andl
xchg
mov
push
clc
call
int3
stos
and
add
pop
lcall
mov
cmpsl
les
push
inc
stos
ljmp
mov
mov
xchg
into
out
test
hlt
mov
repnz
rorl
data16
cmpb
mov
xchg
stc
out
mov
scas
movsb
push
les
arpl
mov
cmp
mov
pusha
cmp
or
cmp
outsl
jnp
outsb
inc
fdivl
adc
push
inc
pop
leave
push
aad
int3
mov
push
clc
and
es
add
dec
jmp
and
ret
mov
add
adcl
and
push
inc
pop
imul
lds
dec
gs
push
popf
movsl
sub
fisubrs
popf
and
test
cmp
insl
jge
dec
mov
stos
jne
push
shll
lret
out
add
and
xor
ljmp
sub
dec
scas
in
test
xchg
scas
sub
mov
ljmp
lret
aam
ds
jle
scas
arpl
mov
out
in
fcoms
lods
cmpl
fcomps
outsl
push
mov
icebp
dec
test
loop
inc
dec
call
ljmp
jg
gs
ds
dec
pop
inc
mov
jo
adc
fucomip
xor
pop
les
test
incb
mov
lahf
cmp
and
push
jmp
cmp
in
out
lea
xchg
adc
push
adc
jg
je
int
outsl
daa
iret
fnstcw
push
add
imul
repnz
sbb
ljmp
es
and
push
mov
sub
dec
xchg
outsl
mov
fwait
jb
movsb
mov
inc
subl
sub
fwait
xor
insl
bswap
push
and
hlt
int
mov
daa
sbb
popa
adc
sub
ret
fbstp
dec
adc
or
into
sub
int3
sbb
push
addr16
scas
adc
pop
pop
cmp
ret
lcall
jbe
adc
fnstsw
scas
pushf
push
jmp
push
or
loop
in
push
mov
mov
or
outsl
inc
sbb
push
mov
adc
sbb
xchg
addr16
mov
xorl
ficompl
or
mov
push
scas
mov
sub
nop
pushf
xor
iret
add
int3
das
xchg
pop
in
mov
jecxz
dec
mov
js
or
sbb
pmaddwd
cmp
fidivrl
adc
push
and
arpl
int3
fstpt
enter
ds
xchg
ljmp
inc
popa
mov
lcall
mov
call
or
test
icebp
xor
mov
xchg
adc
cli
cmp
lahf
push
mov
and
shl
cmpsb
and
call
frstor
test
xor
mov
jle
mov
push
mov
dec
std
adc
loopne
psadbw
in
jbe
inc
sub
jl
inc
lret
and
movsl
mov
or
mov
xor
out
lock
dec
lock
aaa
mov
jmp
inc
cld
xor
jae
pop
scas
jb
js
test
add
push
cmpsb
mov
pop
fisubrs
push
int3
inc
sub
stc
or
test
icebp
pop
xchg
imulb
mov
stos
pop
inc
push
add
mov
or
fidivs
mov
adcl
mov
xchg
andl
pushf
scas
fwait
and
add
test
ds
mov
mov
loope
aam
xor
pop
out
jge
pop
dec
mov
add
pop
pusha
popa
cmp
movsb
in
mov
mov
mov
adc
repz
cmp
xlat
cs
ds
or
test
lods
mov
or
pop
mov
xor
into
jne
adc
in
negb
cld
push
es
push
sub
out
stc
in
lock
ret
cmp
sub
aad
mov
aad
push
outsb
fildll
xor
sahf
xchg
and
or
push
pop
xor
sbb
fmull
pop
push
jae,pt
jle
jnp
sbb
stos
hlt
mov
mov
sbb
out
xchg
fcoml
sub
push
pop
popa
push
lds
scas
dec
or
cmp
pop
sbbl
icebp
jne
sti
inc
cmp
adc
repz
rorl
mov
adc
jl
dec
arpl
mov
cwtl
loop
push
xchg
imul
sub
leave
out
dec
hlt
scas
fwait
bound
dec
mov
fcomps
loope
xchg
dec
fbld
lea
or
iret
ror
pop
lret
and
aam
stos
adc
je
ja
outsl
xchg
push
sub
enter
outsl
push
fidivrs
mov
sahf
and
f2xm1
lret
daa
arpl
popa
pusha
add
or
outsl
xchg
xchg
xchg
push
in
imul
adc
jg
xor
ljmp
movsb
int3
mov
adcl
mov
inc
fnstsw
xchg
js
adc
jb
adc
sbb
jne
imul
gs
lret
sub
mov
and
mov
adcl
rcrb
xchg
push
jle
out
jge
sub
lods
in
lcall
mov
pop
adc
mov
fisubrs
xchg
mov
int
cmp
out
add
lcall
loope
sub
sti
pop
push
add
popf
jge
jp
sbb
mov
add
push
push
cwtl
mov
mov
rcrl
outsb
lds
movsb
jl
xor
out
int
test
sbb
test
mov
jne
dec
cli
pushf
xor
mov
stos
iret
add
sub
xor
cwtl
cmc
mov
dec
gs
dec
mov
mov
mov
sbb
jle
in
add
dec
shrl
xchg
push
dec
mov
xorl
icebp
pop
subl
sahf
pop
add
cmp
cld
ret
push
adc
in
jbe
imul
movsb
cmp
mov
ret
add
dec
hlt
sub
lcall
fsubrl
pop
sti
leave
test
lds
aad
pop
push
or
or
jnp
in
jmp
cmp
rcrb
sbb
shll
push
in
or
xor
aas
fmul
jle
incl
and
dec
dec
das
mov
push
repz
cmp
int3
and
jno
bound
and
in
sbb
pop
cmp
leave
loope
mov
lcall
dec
aam
scas
jno
dec
push
pop
imul
pop
int3
pop
fwait
je
mov
cmpsl
mov
inc
scas
fstp
push
inc
icebp
and
push
sahf
mov
pop
insl
orl
hlt
adc
inc
xchg
sub
mov
rcll
mov
mov
stos
test
les
add
adc
cmp
dec
movsb
xor
fstl
das
inc
inc
add
push
shlb
xor
pop
decb
mov
or
sahf
and
push
adc
xor
push
insb
jecxz
pushf
cli
add
xor
push
inc
jbe
mov
xchg
adc
sbb
push
popa
jl
pop
mov
shl
inc
lcall
popf
xchg
iret
adc
cmp
xor
adc
xchg
iret
arpl
mov
arpl
fisubs
outsb
ljmp
jno
andl
xor
adc
es
clc
cli
jne
jle
nop
lock
movsl
add
mov
adc
mov
in
repz
cld
leave
sbb
xchg
call
stos
jne
push
out
and
lods
mov
test
lret
xor
js
pop
stos
out
mov
adc
pop
gs
or
add
push
aad
outsl
nop
inc
daa
ljmp
push
mov
loopne
and
or
cmp
push
inc
popa
xor
sarb
pusha
dec
cmp
pusha
repz
push
dec
iret
xlat
mov
aam
inc
shlb
sbb
js
loop
jecxz
push
mov
and
pop
pusha
cmp
lcall
loopne
inc
cmc
imul
fnstenv
clc
mov
out
mov
push
loopne
pushf
imul
cmp
jno
js
jno
xor
cmp
xchg
sub
cmpsl
mov
push
pop
pop
gs
sub
mov
rol
xchg
adc
aaa
pop
jns
dec
dec
out
and
lret
jecxz
jns
push
cmc
push
cmp
jp
outsb
dec
mov
clc
jbe
insb
or
and
and
sbb
hlt
mov
popf
mov
sahf
push
movsl
or
test
lret
pop
dec
shl
adc
sbb
xor
jns
mov
fstpl
pop
jg
mov
xchg
sub
push
mov
shlb
negl
sbb
xor
ja
and
imul
sbb
out
mov
int3
call
adc
addr16
push
vmovd
mov
pop
dec
dec
jmp
or
sbb
ljmp
icebp
lds
imulb
push
jmp
and
aas
xchg
idiv
jne
fistl
or
ret
lcall
and
daa
mov
data16
xchg
popf
cmpsl
push
push
adc
sbb
mov
push
adc
xchg
or
out
sub
inc
fiadds
mov
dec
test
inc
jle
dec
mov
mov
or
jp,pn
subl
pop
cmp
push
shlb
fsubr
addr16
xchg
add
lods
mov
inc
adc
hlt
mov
ljmp
mov
sbb
repz
sar
rolb
xor
or
fstps
sbb
jge
aam
into
pop
adc
or
scas
pop
dec
push
xchg
jne
ljmp
scas
cwtl
sub
ret
inc
shr
cld
mov
cmp
pop
cmp
jge
pop
jbe
or
or
pop
lahf
test
add
sbb
fmuls
cs
mov
out
cmpsl
inc
or
sbb
jl
xchg
mov
push
sbb
in
jmp
lahf
and
arpl
lret
or
jae
in
add
sub
ja
mov
arpl
cmp
inc
xchg
push
ficompl
in
push
ficomps
jl
das
xor
out
mov
fucom
jg
cwtl
pop
nop
mov
popf
fs
shl
add
sarb
or
cmpsb
ja
adc
ja
push
sbbb
sti
es
rcr
orb
cmp
xchg
xchg
aas
call
pop
add
xlat
push
mov
xor
pop
jb
add
scas
das
sbb
jae
mov
xchg
mov
inc
stos
adc
out
imul
add
loope
add
xchg
lcall
out
hlt
out
std
pop
fdivrs
mov
jle
add
inc
lock
inc
in
sub
xlat
aam
jge
or
sub
jne
pop
cmpsl
icebp
aas
pusha
shrb
lods
fwait
in
std
into
ss
cli
stos
mov
push
xor
dec
cltd
jno
push
pop
into
inc
dec
jge
cltd
aam
ja
ret
test
pop
repnz
pcmpgtd
dec
pop
lods
jle
std
enter
aaa
mov
mov
fdivl
fiadds
jl
push
clts
out
mov
pop
push
hlt
sbb
mov
ret
imul
xor
push
xchg
or
mov
mov
int
or
and
outsl
xchg
out
push
xchg
adc
add
jp
in
mov
pop
xor
xchg
rcr
mov
lss
in
enter
push
mov
aad
jmp
cmp
pop
mov
dec
xor
dec
pop
mov
pop
cmp
jmp
or
lcall
inc
call
and
test
or
jl
loop
ss
sbb
mov
and
lea
mov
sahf
add
xchg
test
pop
scas
es
mov
cmp
int
and
mov
jge
xchg
pop
outsb
lret
das
test
icebp
test
loopne
mov
out
hlt
cmp
clc
push
push
cmp
push
inc
or
xchg
scas
cmpsl
pop
push
adc
xchg
sub
xchg
aas
add
fisttpl
clc
lock
inc
xor
push
pushf
xor
loop
push
mov
pop
jns
sti
and
out
push
out
fmull
xor
and
cmc
pop
push
clc
nop
ljmp
arpl
in
imul
cmpsb
ljmp
int3
mov
imulb
imul
sarb
inc
sahf
insb
inc
dec
addr16
ds
add
sar
or
je
or
add
xor
pop
cmp
mov
cli
mov
inc
mov
or
jl
fwait
jmp
adc
divl
pop
out
arpl
cmp
dec
icebp
mov
push
inc
imul
add
jnp
cmp
mov
mov
jg
and
jmp
inc
mov
mov
dec
rolb
pop
in
sbb
sbb
das
inc
adc
add
fldl
and
xchg
popf
mov
dec
in
inc
testl
enter
pop
hlt
inc
push
aas
loop
jmp
dec
pushf
push
add
jnp
mov
lock
pop
movsl
out
sahf
rcl
loopne
pop
popa
jecxz
cmpsb
sbb
cmpsb
mov
popf
test
sub
js
lds
xchg
shlb
sahf
adc
xor
xor
xor
inc
popa
cwtl
push
sbb
fbstp
or
push
sub
mov
pop
test
dec
and
testl
add
jmp
int
fpatan
dec
mov
mov
mov
add
xor
std
dec
loopne
cwtl
ret
mov
hlt
lea
nop
adc
dec
mov
xor
sub
mov
mov
jnp
je
mov
stos
test
mov
movsb
jg
mov
xlat
mov
xor
lock
mov
pop
imull
outsl
repz
jg
cmp
add
lods
mov
ret
adc
clc
ret
stc
xor
pushf
gs
addl
dec
jmp
inc
arpl
arpl
icebp
mov
jg
fsubl
jl
test
fstl
mov
sbb
pop
movsl
es
cmpsl
pop
repnz
lret
pop
lahf
push
sbb
mov
jmp
shrb
or
ret
cmc
add
mov
adc
rorl
mov
or
xchg
xchg
xor
scas
xor
or
fcompl
xor
out
xchg
pop
jae
into
xor
jo
cmp
pop
xchg
adc
mov
andl
lcall
pop
xchg
lcall
into
mov
test
fildl
adc
mov
enter
lret
rorb
lock
dec
or
cmp
push
jecxz
and
pop
repz
and
sbb
inc
and
fisttps
movsl
adc
pop
aaa
lods
xor
int
push
enter
push
xor
cli
or
mov
popa
out
jl
std
add
mov
and
nop
ss
notl
sub
pop
sub
aas
loop
fwait
nop
loopne
push
dec
or
in
ds
push
lea
xchg
or
cmp
mov
lds
mov
jo
or
jecxz
and
outsb
inc
mov
popa
push
outsl
icebp
push
adc
das
notl
jl
add
mov
dec
out
cwtl
xchg
adc
das
mov
scas
mov
leave
loope
mov
xchg
lahf
inc
push
xlat
cwtl
cld
sbb
jle
iret
pslld
cld
inc
in
jge
je
jmp
sbb
stos
xchg
mov
insb
push
sti
lcall
or
pop
xor
mov
mov
addl
ret
add
and
scas
mov
shlb
jb
scas
mov
mov
adc
pop
sbb
xor
push
or
xlat
dec
pushf
lods
push
shr
add
out
or
fcompl
outsl
pushf
sti
mov
dec
inc
leave
inc
mov
dec
pushf
mov
out
and
dec
cmpb
cmp
das
cmp
stos
dec
pop
ljmp
push
das
jns
jns
push
mov
pop
ret
enter
aam
pop
icebp
jmp
inc
stc
mov
lcall
cmp
jmp
or
inc
sbbb
outsb
or
sbb
enter
mov
lock
and
mov
test
lods
push
dec
ljmp
mov
test
dec
rorb
or
mov
shll
insb
jle
and
dec
imul
mov
mov
data16
add
xchg
hlt
push
stc
enter
cmpsb
movsb
pop
jp
pop
mov
xor
inc
xchg
mov
and
cmpsl
xor
sub
mov
clc
lea
mov
lret
and
mov
push
pop
ds
jl
mov
mov
lcall
mov
pop
cmp
jl
xor
es
xor
and
adc
inc
punpckldq
cli
lea
cmp
lcall
insb
imul
xchg
mov
test
sbb
pop
jne
sbb
pop
and
ljmp
movsl
scas
adc
adc
ja
cli
imul
pop
adc
sarl
je
adc
xchg
hlt
insb
inc
popa
loope
dec
sbb
in
lds
pop
jns
add
dec
nop
xor
in
loopne
xchg
cmp
jge
leave
push
mov
mov
in
jge
loopne
mov
mov
iret
sbb
pop
movsb
lock
add
jns
stos
and
sbb
mov
fbld
test
add
push
mov
imul
loop
mov
insl
inc
push
scas
stc
outsl
lds
sbb
adc
mov
scas
fstl
or
adc
in
test
dec
jb
push
ja
scas
cmp
xlat
mov
mov
les
subl
jle
pushf
scas
fidivl
and
xchg
iret
stos
inc
pop
aaa
lds
push
mov
andb
stos
xrelease
sub
popf
pop
inc
fadds
sbb
insl
xlat
insl
adc
xchg
cmp
data16
cmp
das
dec
stos
or
inc
mov
cmp
jmp
sbb
pushf
mull
orb
out
lret
mov
out
xchg
add
popa
dec
scas
sbb
or
lods
lock
or
cmpsb
fnstcw
mov
sar
lahf
xchg
pop
test
or
les
pop
test
rcrl
orb
dec
jb
dec
push
sub
into
mov
js
jne
cmp
addr16
mov
jp
arpl
mov
lods
push
adc
clc
or
cmpsl
pop
call
pop
sub
cli
mov
pusha
jnp
adc
mov
repnz
mov
inc
enter
loopne
pop
lea
pop
inc
ss
std
test
les
sbbl
out
dec
add
imul
mov
or
jl
mov
xchg
push
dec
mov
scas
push
xlat
test
inc
stos
pop
fs
inc
adc
rclb
std
jg
and
xchg
add
add
es
sbb
scas
subl
in
xor
ds
add
aas
fwait
cmp
inc
push
jmp
push
push
mov
pop
fisubrl
xchg
mov
cmp
popa
sahf
mull
xchg
loop
lret
sub
popa
lea
sti
xor
adc
mov
add
fmul
push
xchg
arpl
stos
inc
movsl
sub
in
adc
test
mov
in
jnp
clc
or
test
jnp
dec
and
popf
push
bound
sbb
insb
or
sub
ljmp
mov
insb
gs
and
outsb
mov
imulb
pop
std
stos
es
pop
ljmp
push
sub
mov
out
xor
or
jge
cmp
jbe
insl
mov
push
ja
push
mov
out
in
scas
cs
jbe
lock
aad
adc
push
ret
pop
sub
lret
push
into
dec
data16
sub
jae
popa
bound
sbb
aaa
ficompl
inc
xor
xor
or
enter
cmp
mov
sub
push
loop
popf
xor
orb
mov
nop
dec
icebp
jae
fnstcw
add
sub
pop
or
in
jnp
fidivl
loop
lret
roll
or
jmp
lahf
iret
enter
xlat
or
lret
fstps
and
scas
inc
out
test
roll
mov
mov
adc
mov
loopne
cmp
or
cwtl
scas
mov
movsb
aas
fisttps
add
lds
aas
push
cmpsl
cli
jb
jbe
pop
or
add
sahf
mov
or
xchg
daa
test
dec
xor
scas
add
fmulp
bound
repz
data16
jmp
stos
sbbb
leave
push
jo
out
scas
and
pop
loop
mov
mov
sub
push
dec
dec
dec
mov
cmc
jge
cltd
pop
lock
in
cmp
ljmp
pop
mov
mov
mov
inc
cltd
sbb
sub
ficoms
cmc
sar
icebp
adc
sbb
mov
push
inc
arpl
stos
iret
or
repnz
mov
adc
sbb
mov
cmpb
mov
pushf
adc
xor
outsl
or
sbb
xchg
adc
or
ja
adc
jl
add
push
cmc
popf
fldenv
or
cmpsb
mov
fdivl
dec
pop
loope
loop
mov
clc
mov
cmp
mov
fwait
or
dec
push
or
and
insb
lcall
lods
adc
push
sub
jnp
cmp
pop
sub
fs
jnp
xor
out
adc
xchg
sub
arpl
out
xchg
scas
xchg
cmp
mov
fldenv
mov
push
push
fucomp
test
gs
mov
mov
add
int3
arpl
and
js
loope
in
bound
aad
inc
jmp
repz
jb
cli
cmp
sub
rolb
sbb
das
inc
push
js
and
inc
and
pop
push
inc
xlat
xchg
sbb
mov
mov
xor
fcmovne
dec
in
and
ret
xchg
mov
and
ret
lods
inc
jg
add
jl
mov
add
lcall
push
jne
adc
movsb
xchg
pushf
dec
inc
int3
adc
loop
repz
sub
mov
shl
sub
std
sub
shlb
or
mov
fdivl
jmp
fldenv
test
sbb
leave
mov
sub
lahf
stos
jge
ret
sbb
jp
mov
add
dec
dec
mov
jae
jno
add
imul
flds
loopne
dec
lods
xor
repnz
push
xor
cmp
pop
jmp
mov
adc
add
pop
xor
or
pop
out
ja
push
aam
mov
xchg
popa
cld
xchg
fimull
mov
lret
sub
bound
test
lret
xor
cmp
rolb
adc
mov
aaa
inc
movsb
pop
aas
es
loopne
xlat
xchg
cmp
jo
push
sub
clc
jg
mov
loop
daa
cwtl
push
movsl
shrl
pop
imul
xor
jbe
inc
in
sbb
cmpsl
and
cmc
mov
push
mov
or
cmp
sbb
fucomip
es
movsl
inc
out
lods
add
imul
scas
pop
mov
in
jns
and
scas
popf
pop
pop
ljmp
inc
adc
mov
push
jbe
leave
fs
sahf
subl
cld
xchg
movsb
repnz
scas
les
stc
cwtl
daa
add
arpl
pop
in
addl
jns
and
lahf
sarl
enter
xchg
jmp
mov
aaa
call
loop
cltd
and
shrb
in
das
pop
sahf
or
or
cs
mov
adc
std
push
lods
push
cli
cli
es
dec
pop
out
jmp
mov
add
and
push
cmp
dec
sahf
push
adc
imul
shlb
sub
scas
mov
jbe
fbstp
sub
mov
rclb
push
out
rolb
inc
pusha
fisttpll
and
mov
mov
shlb
push
cmp
mov
push
out
sbb
jne
push
decb
adc
or
sbb
mov
fdivl
lret
lahf
xor
and
mov
xor
int3
mov
bound
roll
in
inc
test
leave
xlat
xchg
jl
iret
aam
mov
dec
jmp
xor
clc
stos
mov
xchg
sub
out
sbb
inc
cmp
cmpsl
inc
sub
mov
dec
scas
jb
mov
fucomp
inc
pushf
cmp
xchg
bound
in
and
mov
ret
pop
lods
mov
pushf
ja
jmp
fsubrp
test
add
sbb
dec
ficomps
repnz
xor
fcom
or
push
jmp
add
xor
fsubr
mov
pop
cmpsb
cmp
xchg
sahf
fadd
mov
push
jecxz
and
mov
test
mov
push
mov
inc
loop
lods
ret
dec
push
jecxz
rorb
lock
mov
jnp
mov
loopne
add
or
sbb
push
and
movsl
cmp
addl
out
fisubl
adc
enter
xchg
jmp
or
jl
mov
pop
cli
jne
push
xor
xor
xchg
ficomps
adc
lods
mov
dec
push
pop
mov
mov
adc
pop
push
jo
sub
xchg
pop
xchg
cmp
jge
repnz
cmp
bound
inc
int
jnp
mov
pusha
pop
dec
test
icebp
pusha
inc
stc
ror
sub
into
cmpsb
subb
inc
fisubrs
mov
cmp
fldcw
arpl
das
jmp
inc
xchg
adc
or
fldt
sbb
fidivl
mov
mov
adc
push
aad
mov
and
and
mov
popa
inc
pop
les
push
jmp
loopne
enter
rcl
mov
mov
pop
mov
fdiv
ds
int
or
sti
mov
cmpsl
leave
out
xor
mov
loop
daa
int3
xchg
sbb
mov
les
jle
adc
pop
jmp
and
inc
mov
dec
rcll
jbe
push
cmp
ljmp
jno
insb
push
das
movsb
adc
inc
test
ja
mov
mov
jg
cwtl
stos
push
stc
das
test
mov
sbb
adc
or
fs
jne,pn
xchg
imul
cmovo
push
jne
adc
jae
lock
xchg
xchg
sub
jle
ss
inc
and
popa
mov
leave
push
inc
xor
insb
push
add
rsm
xor
das
das
out
jnp
nop
int
jae
mov
dec
lcall
cli
popa
inc
inc
jbe
push
test
es
pop
sbb
lds
push
cwtl
mov
and
lods
mov
mov
pusha
sti
es
loop
dec
jp
dec
int3
sar
std
in
pop
pop
aaa
jg
out
and
mov
mov
inc
aam
sbb
cmp
imul
push
nop
shrl
aaa
loope
add
outsb
add
je
das
cmpsb
and
xchg
and
add
xchg
hlt
mov
push
js
jno
add
mov
ljmp
repz
add
nop
push
mov
sahf
gs
push
xlat
cmp
cmp
add
jno
pop
xchg
sub
fbstp
or
adc
xchg
mov
xchg
shlb
push
mov
xor
mov
xor
in
sbb
scas
shr
loopne
sbb
lret
jb
mov
loop
lea
mov
jmp
or
jmp
dec
in
dec
fdivl
daa
cmpsl
mov
mov
cmpsl
jo
into
xchg
icebp
test
daa
ret
mov
inc
js
xchg
push
push
rclb
jmp
nop
cmp
aaa
pop
lret
fs
jp
and
xchg
sub
and
rcl
adc
push
int3
pop
xor
icebp
aaa
xor
test
fsubl
xchg
sahf
das
shll
scas
jg
std
sub
enterw
add
sbb
mov
int
jl
adc
stc
dec
andb
out
sti
xchg
ret
idivb
sbb
in
cli
jo
xchg
push
leave
ret
ss
outsb
push
enter
cs
mov
gs
stos
xor
jnp
and
add
insl
loopne
push
pop
insl
jge
pop
cmc
cwtl
jp
ret
sub
outsb
mov
add
and
arpl
push
sub
dec
lcall
shlb
in
mov
dec
mov
sub
mov
test
fldenv
push
and
imulb
xor
inc
mov
jae
adc
leave
and
subb
xchg
xor
mov
loope
adc
inc
mov
sub
ficoms
out
jbe
mov
sub
sub
pusha
sarb
out
out
inc
push
or
insl
mov
mov
lcall
movsl
sti
or
gs
jno
sub
mov
ret
xchg
test
shrb
nop
adc
or
movsl
mov
xlat
mov
push
sub
in
sbb
lcall
jbe
les
sub
pop
fucomip
mov
scas
inc
loop
lock
je
into
gs
fidivl
or
mov
xchg
dec
pusha
idiv
rcr
es
pop
jg
int3
outsl
mov
add
loopne
fwait
and
in
sti
or
dec
push
aas
ja
pop
shlb
fs
sbb
fucomp
sub
rcr
nop
jnp
dec
cld
sub
xchg
pushf
ror
out
dec
in
adc
jbe
mov
sbb
sub
loop
insl
cmc
inc
mov
in
ret
loopne
mov
inc
jmp
cmp
arpl
loope
cmpsl
jmp
bound
leave
fdivrl
jecxz
adc
sahf
mov
mov
pop
mov
mov
clc
xchg
stos
cmpsl
je
arpl
adc
cmp
lahf
cmpsl
xchg
fcmovu
mov
pusha
mull
lods
mov
stos
jo
mov
xbegin
dec
xchg
incb
sbb
inc
inc
jmp
pop
nop
cmp
inc
sub
sub
movsl
rol
arpl
push
repz
gs
into
adc
push
dec
mov
pop
sahf
mov
ret
xor
jnp
push
stos
and
and
push
mov
pop
lahf
mov
mov
push
adc
stos
xchg
lea
jbe
ret
cmp
jg
push
pushf
sbb
in
jno
fldl2t
add
mov
cmp
inc
mov
insb
and
fwait
push
call
lcall
inc
push
jb
insb
mov
pop
rorl
jle
ja
or
dec
inc
cld
inc
jg
jb
and
dec
sub
adc
cltd
repnz
add
sbbl
mov
aam
out
addb
cmp
mov
xor
rcrl
inc
mov
leave
mov
pop
jns
mov
sbb
and
test
add
mov
insb
flds
dec
ret
mov
les
imul
mov
call
jmp
or
out
stos
pusha
push
repnz
pop
loope
dec
icebp
lret
mov
faddl
nop
stos
lea
loop
sbb
out
mov
imul
cmp
xor
sti
movsl
int3
fidivrs
pop
lahf
push
dec
pop
sub
fwait
push
std
or
mov
insb
add
pop
fildll
jne
iret
in
shrl
movsl
mov
dec
add
push
ja
add
xchg
or
xchg
or
dec
push
lock
cmp
xchg
fdiv
lea
dec
into
mov
mov
out
and
pop
test
daa
mov
fdivrl
adc
in
ds
xchg
sbb
ja
push
pop
gs
jbe
aaa
jmp
add
pop
xor
aas
in
push
or
jno
std
adc
shr
icebp
lret
mov
add
dec
xlat
mov
mov
push
adc
jp
out
cmp
push
cmp
dec
push
lds
outsl
or
mov
mov
ret
mov
inc
and
outsb
cmp
push
aam
nop
push
xlat
xchg
lcall
and
out
outsl
sbb
loope
mov
dec
mov
push
xor
xchg
insb
inc
xor
lea
sbb
cltd
dec
testl
inc
ja
xor
sbb
xchg
sub
pop
out
pop
aaa
into
jno
jmp
pop
enter
mov
int3
arpl
aad
xchg
mov
xrelease
adc
dec
stc
add
sub
int
pop
test
ficompl
sbb
mov
mov
stos
and
iret
inc
lods
jne
imul
lods
outsl
jnp
pop
inc
lds
out
shll
cld
push
jno
sbbb
mov
pop
mov
in
mov
insb
sub
insb
in
xor
leave
jbe
and
mov
push
in
xchg
inc
mov
dec
jmp
mov
push
jmp
out
jmp
ljmp
jno
movsl
and
inc
and
je
aam
sub
jmp
pop
test
fcmove
insb
movsb
mov
mov
iret
or
ss
jl
jmp
xchg
pop
push
faddl
aaa
xor
sti
fwait
dec
pop
jmp
cltd
cmpsb
push
push
popf
xchg
inc
and
aas
hlt
push
lods
outsb
sub
push
js
mov
xchg
mov
push
lret
fidivrs
fucompp
ds
sbb
arpl
fxch
sub
dec
mov
dec
in
push
sub
jg
cmp
stos
jl
push
sub
push
popa
pop
pop
mov
pop
mov
lret
rorb
insb
push
out
div
or
jmp
xchg
jge
ret
sarl
mov
cltd
fiadds
add
push
in
sbb
mov
out
mov
out
xchg
dec
fists
mov
xor
cmpsl
ds
movsl
add
into
push
mov
test
jno
inc
pop
add
xchg
mov
cmp
jmp
rcl
out
push
mov
icebp
mov
mov
cmp
test
fadds
pop
pop
cmp
stos
mov
cld
fs
pop
shll
push
fs
pop
out
sub
sbb
idivb
fstpt
idiv
les
or
mov
cmp
mov
ret
stos
int
flds
repnz
jb
shlb
dec
push
sbb
inc
out
add
sbb
inc
xchg
dec
mov
xor
cltd
push
sub
or
xor
push
mov
mov
fildll
mov
ret
call
sbb
movsb
cmc
mov
aas
in
adc
fdivp
fsubp
add
ljmp
or
jmp
dec
ljmp
adc
cli
push
and
xor
test
dec
rorl
push
mov
jle
add
mov
pop
loopne
sub
addr16
mov
mov
pop
mov
imul
adc
decl
or
aam
jle
pop
adc
movsb
mov
mov
test
mov
addr16
mov
fisttpll
sarb
sbbl
mov
lahf
ss
mov
mov
inc
fisubrl
outsb
rcrl
dec
popa
cmp
das
jl
outsl
xchg
mov
adc
mull
jl
mov
aad
sub
jecxz
and
mov
test
push
jns
jne
push
icebp
loop
mov
mov
fisttpll
mov
add
loope
imul
xchg
xchg
pushf
jg
xor
pop
adc
repz
mov
push
aas
xor
push
jno
movsb
push
push
mov
mov
jae
cmp
loopne
mov
cmp
fnstcw
sbb
std
jle
cmpsl
mov
jge
dec
fists
push
in
fiaddl
pop
ljmp
test
aad
add
ds
pop
and
sub
lcall
and
ret
mov
shll
pop
gs
push
jne
xorb
repnz
movb
pop
les
rclb
out
sub
and
shrl
mull
les
sbb
in
subb
jp
hlt
stos
notb
jno
rcrl
dec
aam
mov
push
xchg
lods
mov
jbe
fildl
es
popf
lods
int3
inc
mov
filds
mov
xor
lods
mov
call
push
mov
or
adc
sub
fsubrp
dec
sub
movsl
lds
xchg
cs
dec
pop
adc
pop
add
cmpsl
pusha
out
push
xchg
enter
jp
ja
into
adc
jl
ds
adc
push
sub
mov
shll
add
loopne
lock
sahf
ss
shlb
pop
ss
or
imul
sub
xor
test
cwtl
stos
push
fs
int
call
insl
cmp
popf
lods
pop
mov
cwtl
push
add
add
xchg
cs
cmp
adc
lods
mov
aaa
dec
aas
sub
jle
and
push
push
test
aas
mov
repnz
mov
push
sub
push
aam
jecxz
mov
sbb
jns
ret
mov
lea
and
fstpt
inc
fsubrs
out
movsb
xchg
jno
adc
pop
addb
dec
loopne
push
aaa
inc
das
dec
fsubrl
pop
lahf
std
insb
or
int3
cltd
and
fwait
ds
fwait
rclb
in
js
push
cmp
lea
aas
xchg
scas
jbe
jge
enter
rol
pop
xchg
lea
and
pop
inc
cmp
lods
jmp
jge
mov
hlt
push
call
test
fisubs
jmp
loope
outsl
sbb
mov
lret
xchg
rclb
test
push
push
cs
pusha
sub
lcall
inc
stos
notl
insb
mov
hlt
push
push
ja
mov
fiadds
fdivrs
loopne
rcrl
push
rolb
mov
xchg
xchg
jns
dec
or
gs
mov
jecxz
outsb
aam
mov
imul
fisttps
mov
jns
stc
out
sub
in
test
ljmp
test
adc
jmp
or
arpl
push
int3
arpl
loop
ret
and
std
fdivl
pusha
jl
xlat
in
in
pusha
mov
lods
inc
dec
stos
ret
rcr
cmp
das
xor
push
inc
fstl
popf
push
not
fs
add
xchg
pop
outsl
mov
pop
xchg
in
lahf
adc
xchg
dec
cmpb
addl
jns
insl
pop
push
xchg
xor
mov
inc
mov
call
xor
pop
outsb
mov
or
add
nop
lret
sub
sbb
cmp
push
push
and
or
and
aaa
jbe
add
xorl
pop
mov
dec
sub
jle
dec
cmc
iret
adc
stos
dec
cmp
imul
sub
repz
ja
jle
in
push
testb
mov
clc
sub
jg
in
aad
fdivl
or
pop
in
adc
stc
std
sub
xor
sahf
test
cs
adc
data16
arpl
js
push
push
jl
cmp
outsl
mov
fcmovne
fs
push
movsl
sbb
mov
jg
xlat
add
cmp
jo
mov
nop
cmp
fldt
or
lods
cmp
mov
divb
adc
jbe
dec
or
xlat
cmp
cwtl
imul
sub
test
xchg
addr16
lahf
popa
push
imul
inc
dec
mov
pop
call
cld
sub
fwait
adc
or
das
pop
jmp
add
lods
lds
pop
xor
xchg
sub
cltd
xor
and
jge
mov
popfw
dec
or
inc
pop
jno
add
insb
xchg
sbb
insb
sub
movsb
imul
add
mov
mov
notb
mov
fwait
sbb
cltd
es
jno
or
dec
jecxz
cmc
dec
mov
push
mov
jae
sbb
add
xchg
push
add
movb
ds
mov
daa
mov
xchg
insl
inc
out
repnz
xchg
add
scas
sbb
jbe
xor
cmpsb
mov
sub
iret
mov
stos
mov
or
hlt
adc
dec
or
jb
fidivl
scas
mov
aam
or
mov
xor
aam
cmp
std
and
pop
mov
dec
aam
push
fisubrl
inc
fistpl
and
cmp
dec
sti
call
xchg
and
decl
and
add
fdivp
push
or
or
mov
movsb
xchg
cmc
rorb
es
aad
sbb
sbb
pop
dec
bound
ja
int3
push
aaa
mov
roll
cld
push
xor
aam
fildl
movsb
sbb
jns
or
out
mov
jecxz
push
adc
stos
mov
insl
mov
push
sub
test
insl
andb
das
mov
jmp
adc
or
lahf
jne
jns
push
xchg
popa
xor
sub
rorl
cmc
jne
shll
fwait
mov
or
pushf
xchg
and
mov
lods
dec
jnp
insb
inc
xchg
pushf
roll
mov
mov
cmpsl
in
repnz
inc
push
int
sbbb
pop
aam
sub
xchg
mov
lds
sbb
icebp
mov
ja
clc
out
push
dec
add
mov
jo
aaa
arpl
xor
push
lret
dec
mov
test
add
xchg
cmp
pop
sub
pop
lcall
mov
fdivrl
lret
lret
in
icebp
xchg
xchg
mov
pop
insl
adc
jbe
cmpsl
mov
inc
ja
jne
jo
fsubrs
sbb
xor
mov
out
repz
xor
jmp
jge
std
orb
add
xor
or
pop
imul
add
fidivrl
fidivrs
push
sub
leave
je
aad
in
lods
mov
in
cld
imul
jne
fwait
out
ja
mov
jae
daa
mov
outsb
icebp
add
test
inc
jno
in
in
das
enter
gs
or
test
fisubl
pushf
or
lds
sbb
xor
imul
lock
popf
scas
mov
sarb
jg
xchg
insl
les
xlat
pusha
loopne
jmp
jle
scas
hlt
mov
rolb
push
jl
fidivrl
loop
popa
sub
fdivl
rcrb
dec
fmuls
jbe
push
inc
in
fcomip
addr16
nop
inc
push
popa
out
out
mov
outsb
sub
data16
aas
pop
xlat
pop
cmp
push
dec
clc
out
mov
jmp
pop
or
seta
add
adc
push
xchg
sar
push
movsl
out
ret
js
sub
mov
inc
cs
cmp
fistps
mov
test
in
xor
mov
sub
scas
mov
push
jl
sbb
popa
push
adc
pop
fwait
cmpsl
pop
cmp
dec
xchg
pop
test
or
pop
pop
jne
xchg
jnp
leave
mov
sbb
sbb
mov
pop
or
lock
sbb
pusha
jle
fbstp
in
sub
in
jne
out
or
sbb
cmc
mov
daa
arpl
inc
lods
and
mov
adc
mov
fsubrl
dec
es
pusha
lret
mov
loopne
push
or
mov
push
inc
repnz
les
cwtl
add
xor
dec
push
or
lea
adc
or
xor
sbbb
push
add
in
mov
in
xor
iret
push
lock
int
dec
jns
jns
jp
movsw
int
push
js
leave
and
mov
push
out
in
add
and
inc
icebp
rcrl
mov
ss
jmp
cmc
int3
dec
fistl
popf
dec
xor
fisttpl
fwait
cmp
fidivrl
loope
xor
pusha
inc
test
cld
cmpsl
ret
sub
sub
xchg
sub
arpl
call
insl
add
sub
sarl
pop
push
int
sahf
fisttps
je
adc
test
and
testl
pop
cli
xchg
stos
hlt
pop
sbb
push
lods
std
push
xor
adc
pop
lods
mov
pop
cmpsb
xor
xor
jno
mov
das
mov
mov
jae
xor
js
xchg
mov
push
mov
push
jbe
loopne
gs
repz
adc
sbb
pop
fldcw
icebp
mov
sbb
push
scas
mov
dec
sub
pop
dec
add
lock
adc
stos
cmp
inc
aad
jbe
adc
jne
sub
adc
mov
mov
es
popf
add
inc
add
scas
push
lcall
mov
std
xor
or
loopne
ja
xor
push
push
ss
lods
mov
test
aad
adc
push
cmpsl
mov
mov
shrl
adc
or
dec
dec
pop
pushf
jle
sti
ja
push
insl
inc
cmp
ret
lahf
inc
xchg
cld
push
outsb
push
nop
push
leave
or
in
pop
jmp
imul
imul
fdivrs
popf
out
or
push
ret
sub
js
dec
fs
mov
and
pop
out
add
inc
xchg
cmpsb
enter
sbb
cmp
add
sub
or
lahf
jno
aas
adc
mov
push
nop
push
and
call
ja
shl
pop
hlt
pop
fisttpl
or
or
pop
xchg
daa
or
or
or
fwait
cmp
or
dec
jmp
bound
push
out
inc
and
je
add
or
imul
movsl
or
xor
lret
mov
mov
scas
and
pop
sub
rcr
jecxz
sti
cltd
mov
enter
or
cld
shll
push
ret
pop
addr16
dec
pop
push
pop
inc
push
aad
push
gs
test
and
fld
js
fsubrl
jp
std
jns
popa
jg
push
mov
cs
dec
push
xchg
pop
push
out
push
out
pop
jbe
mov
mov
pop
mov
lods
mov
in
dec
test
repz
fwait
sub
or
in
movsb
jnp
clc
mov
push
stos
jns
or
xchg
xor
sarl
rclb
or
jle
in
enter
int
mov
push
or
repz
mov
sbb
xchg
xchg
cwtl
hlt
cmp
fidivl
push
xor
imul
sbbb
push
fists
mov
mov
ja
push
sbb
fwait
add
mov
rcrb
fwait
mov
test
jp
inc
ljmp
sub
jle
inc
shll
jl,pn
divb
repnz
and
insb
add
imul
dec
lods
lahf
call
lcall
and
xor
add
shll
jnp
js
daa
out
cld
cmpsl
jp
lods
stos
jo
shrb
and
mov
lock
push
pminsw
fistl
repz
cmpsb
jno
xchg
jae
dec
or
nop
cmp
imul
jge
lea
or
cmp
clc
or
out
mov
mov
push
dec
int
xchg
subb
jo
mov
xchg
in
or
mov
arpl
sbb
push
gs
in
dec
ds
or
push
fidivrs
add
mov
in
mov
ret
mov
add
bound
fucompp
inc
adc
push
out
sahf
cmp
xor
xchg
aas
mov
pop
adc
enter
mov
lock
jae
addr16
xor
cmp
fistpl
loop
adc
stos
inc
fildll
imul
pop
mov
imul
mov
add
insb
mov
mov
jmp
or
scas
cmp
repnz
test
xor
mov
sbb
fdivl
ficomps
mov
lea
add
sbb
mov
mov
adc
jge
xor
sbb
xchg
in
xchg
pusha
xor
inc
inc
jge
adc
mov
adc
ja
fisubrs
cli
cltd
frstor
mov
les
outsb
in
push
lcall
ret
sub
cmp
call
scas
sbbb
dec
or
leave
iret
cmc
mov
pop
lock
sbb
sub
jl
dec
mov
daa
sub
inc
popf
inc
dec
bnd
or
push
test
dec
add
or
jb
les
daa
adc
jb
popf
outsb
bound
sbb
mov
or
and
add
xor
push
jle
arpl
aam
ret
or
push
fbstp
jl
mov
mov
je
cwtl
inc
in
mov
movsl
xchg
mov
pusha
cwtl
fsubrs
shll
loopne
jno
mov
les
dec
jge
push
outsl
xchg
jp
xor
cmp
ret
push
shlb
xchg
in
cmp
mov
or
push
mov
int
dec
xchg
xor
popf
in
adc
sbb
mov
mov
push
stos
je
mov
pop
sbb
in
xor
sbb
popf
js
aas
daa
mov
xor
rcr
faddl
sar
lahf
and
inc
adc
rcrb
mov
or
add
inc
dec
inc
jg
lods
insl
int3
popa
dec
scas
jge
sub
push
jo
pop
shlb
sbb
dec
arpl
mov
push
jge
xchg
cmpsl
fs
testb
popf
lea
xchg
lods
je
test
mov
pushf
pusha
idivl
out
fdivl
fiaddl
es
cli
insl
cwtl
sbb
loope
sub
lea
stos
mov
daa
mov
es
mov
sarl
jae
pusha
stos
mov
inc
into
jle
stos
andl
cmp
dec
inc
rol
js
lock
into
and
scas
test
insl
scas
push
jnp
xchg
dec
not
lock
ljmp
arpl
sbb
mov
daa
xor
mov
fsubl
mov
cmp
cmp
jmp
fisubl
lds
inc
lea
mov
xor
jne
clc
inc
mov
sbbb
inc
ficompl
or
pop
jnp
add
and
bnd
outsl
into
sub
clc
pop
dec
add
repz
or
lcall
inc
rcl
mov
pop
mov
or
test
cmp
jae
rclb
push
aam
xchg
sub
cmp
xchg
imull
lcall
daa
inc
popa
pop
ja
aas
jne
lods
push
in
dec
mov
aam
cmpsl
mov
daa
add
and
imul
xlat
cmc
outsb
clc
cmp
repz
cmp
push
push
divb
sbb
mov
and
loop
mov
outsl
add
sahf
dec
xchg
xor
popf
stos
mov
jge
xchg
and
jmp
add
ljmp
loop
pop
hlt
sbb
fldenv
mov
or
jnp
mov
push
dec
adc
pop
cmc
inc
push
inc
arpl
mov
dec
add
mov
sbb
leave
and
andb
adc
hlt
jecxz
adc
lods
in
stos
push
rolb
out
add
mov
push
aas
inc
nop
bound
xchg
xchg
lea
jle
movsl
xor
cmp
mov
inc
xlat
cltd
daa
inc
movsb
xor
aam
dec
jne
push
push
push
repz
jnp
es
add
cltd
sub
subb
push
adc
call
out
shrb
mov
mov
or
mov
and
cltd
data16
das
push
push
les
inc
stc
into
gs
mov
or
frstor
sti
dec
rcl
push
clc
cmp
fsubrs
fistpll
ret
inc
xlat
pop
repz
add
xchg
jmp
xlat
pop
mov
and
fdivp
add
and
call
out
xchg
movsl
adcl
test
or
and
mov
sarb
jo
jmp
roll
push
xchg
sbb
pop
jo
andl
sub
stc
into
daa
data16
cs
dec
sahf
sti
adc
jp
push
faddl
pusha
add
sahf
xor
ss
shlb
aad
push
push
jecxz
fstpt
sub
jmp
call
test
push
adc
shr
imul
fistps
std
mov
mov
add
push
mov
test
dec
add
addr16
xlat
add
xor
dec
es
mov
jns
out
inc
push
pop
jl
xor
xlat
das
xor
fdivl
shrb
lods
scas
inc
fisubs
mov
repnz
and
and
adc
and
ja,pt
ret
js
dec
divb
sbb
dec
xchg
xchg
leave
pop
xor
add
pop
repnz
fld
inc
push
jae
jp
xchg
popf
loopne
iret
mov
cmp
lock
aas
cmpb
push
push
cmp
lea
jae
lods
aaa
push
pop
rol
push
pop
cwtl
cwtl
add
lret
and
cmp
pop
cmp
shlb
add
mov
imul
fdivp
or
mov
mov
pop
jb
jnp
repz
lods
dec
test
fldcw
in
cmp
rolb
aam
dec
imul
test
scas
pop
lods
aas
fiadds
add
idiv
xchg
scas
fistpll
mov
cwtl
push
or
xchg
or
mov
daa
into
jle
aad
out
lods
sbbb
sub
in
icebp
jb
sti
or
xor
inc
loopne
lods
pushf
outsb
out
push
add
lds
push
add
lahf
sbb
cld
roll
je
negb
push
xchg
cmp
jae
daa
sub
and
pop
mov
mov
outsl
cmp
mov
pop
fildl
mov
pop
and
inc
pop
adc
out
pop
pop
addr16
adc
push
sbb
mov
adc
push
data16
xchg
jbe
jns
jg
mov
je
jp
mov
mov
dec
movsb
out
out
and
cmp
adc
dec
jp
out
scas
xlat
aaa
and
jp
call
xor
lcall
out
or
jge
push
mov
mov
int3
das
stos
or
call
inc
mov
xor
mov
add
aas
dec
pop
aad
lahf
sub
mov
mov
sub
arpl
scas
add
cli
lcall
sub
mov
mov
das
mov
mov
popf
xchg
mov
add
cltd
xor
jb
std
mov
mov
das
sti
or
loope
mov
xor
xor
inc
scas
nop
nop
in
cmp
stc
movsb
jecxz
ret
hlt
or
scas
push
xchg
sbb
sbb
add
jle
cmp
xor
test
pop
sbb
jge
jg
mov
mov
xchg
std
inc
push
cmp
xor
xlat
dec
xor
ret
inc
in
notl
push
adc
push
dec
std
push
jae
insl
add
popf
adc
ljmp
jmp
in
inc
xlat
xchg
pop
cmp
mov
ret
jge
rcr
mov
xor
xchg
mov
push
push
test
testl
bound
pop
pop
jmp
fsubrs
testl
push
enter
jbe
sbb
loop
enter
mov
xor
js
je
ret
daa
jle
pushf
and
xor
in
cmp
addl
sbb
sbb
cmp
jle
jmp
movsl
sbb
push
scas
pop
int3
add
mov
pop
or
jecxz
aad
cltd
cmp
inc
jge
lods
jmp
lret
mov
fisttps
fcompl
push
jp
sti
xor
icebp
dec
jo
mov
fstpt
aas
jmp
xlat
mov
pop
loopne
jb
jbe
or
jae
int
inc
push
adcb
pop
jnp
lock
divl
ljmp
cwtl
sub
inc
jnp
in
repz
cmovne
mulb
mov
sub
ret
xor
dec
mov
and
out
xchg
out
cld
ds
jp
orb
cmp
enter
jbe
scas
shrl
imul
mov
out
sti
xchg
repnz
pop
aas
mov
fisubrs
loope
jl
and
mov
ret
arpl
pop
rclb
jb
int3
fisubrs
and
or
and
dec
pop
int3
adc
stos
xchg
dec
pop
mov
inc
fbld
inc
imul
lock
je
daa
in
imul
xlat
pop
std
pop
pop
shll
sbb
aaa
les
mov
mov
xor
mov
mov
nop
shll
lods
mov
adc
scas
out
leave
inc
pop
cmpsl
jae
jb
inc
fldcw
mov
or
out
icebp
inc
idivb
imulb
sbb
repz
cmp
dec
sub
mov
xor
mov
cwtl
or
jne
xchg
jo
pushf
aad
xchg
add
out
rcll
icebp
fistl
pop
scas
mov
rorb
iret
leave
pop
enter
ret
jb
xchg
xor
scas
lea
push
or
sbb
push
cmp
fsubl
fcmove
pop
jp
dec
mov
push
adc
or
mov
nop
std
and
xchg
cli
inc
adcb
out
and
and
insb
sub
dec
fwait
mov
mov
das
push
sbb
int
jno
loope
fsub
jle
sub
mov
test
frstor
add
insb
mov
mov
call
scas
bound
int3
clc
push
xlat
mov
fcoms
mov
fstpl
pushf
shrb
in
cmp
ljmp
imul
and
loope
pop
mull
push
sbb
ret
xor
ret
pop
or
fistl
push
push
call
cmp
jp
ljmp
adc
pop
pop
sub
insl
or
mov
add
xchg
std
add
mov
or
mov
jne
jle
in
mov
sub
and
bound
js
lock
and
inc
scas
in
leave
sub
sub
pop
sbb
inc
orl
imul
imul
pop
out
mov
shrl
subb
jno
xor
cmpsb
cmp
xor
les
inc
lods
xchg
jns
pop
sahf
add
lock
and
es
shll
lds
adc
cmpsl
loopne
lods
mov
out
std
xchg
or
mov
cmp
mov
xchg
popf
xchg
mov
push
and
xchg
xor
mov
mov
mov
sub
paddusw
mov
mov
mov
shrl
sbb
push
es
ds
outsl
shl
mov
jns
lods
and
mov
xchg
sti
roll
dec
dec
dec
out
jl
jecxz
ds
jge
sub
add
sbb
roll
inc
dec
je
pop
aas
jno
out
sub
dec
ja
cwtl
repnz
aad
out
and
pop
and
xchg
cmpsl
mov
sub
jns
mov
out
int
and
dec
repnz
mov
lret
out
out
xor
xchg
mov
mulb
xor
ret
add
pop
mov
push
push
xlat
loop
or
loopne
mov
scas
aas
jge
xor
and
push
testb
cmp
jp
xchg
push
dec
mov
int
mov
lea
fists
jecxz
sahf
adc
rorb
sub
or
mov
sahf
sbbb
or
jmp
aad
fwait
push
scas
lods
mov
ret
pushf
sbbl
or
push
and
pop
pushf
adc
and
jns
lcall
push
push
jae
or
mov
pop
jno
cwtl
xchg
sub
gs
add
test
xor
or
pushl
fdivr
dec
push
lods
cld
les
inc
cwtl
xor
cmc
mov
arpl
jmp
push
sbb
lret
xor
std
cli
pop
pop
inc
int
adc
fmull
jp
xor
add
cmp
xor
mov
sti
adc
dec
stc
xchg
dec
inc
mov
orl
movsb
mov
ss
stc
sbb
mov
push
mov
mov
int3
arpl
pop
pop
mov
inc
push
and
pusha
je
or
pop
jns
mov
shrb
fdivrl
sub
imul
mov
pop
in
dec
frstor
cmp
add
out
and
insb
cmovns
jle
int3
push
xor
insl
or
insl
mov
aam
mov
pop
mov
test
scas
sbb
jmp
inc
jecxz
and
dec
shrb
test
mov
cltd
setl
mov
push
mov
stos
dec
fsubp
mov
fxch
dec
fadds
ror
sub
dec
add
ret
scas
and
xlat
mov
xor
xchg
xchg
mov
frstor
and
int3
dec
add
cmp
mov
pop
jecxz
arpl
lock
push
mov
jg
sub
roll
adc
mov
ss
push
lcall
notb
ss
adcl
movsl
jae
rclb
sbbl
ja
imul
and
dec
inc
inc
pop
stos
dec
lods
xor
adc
in
xchg
out
mov
mov
in
aaa
jl
es
std
push
popf
mov
dec
sub
ret
push
insb
test
shl
scas
aas
lcall
into
dec
and
adc
sbbb
subl
repz
hlt
inc
mov
sbb
popa
das
addr16
insl
pop
test
addr16
xchg
mov
push
jmp
ljmp
and
sarw
je
and
jle
push
or
fwait
ret
dec
or
popf
jp
stc
stos
mov
xor
push
pop
inc
sbb
pop
cmc
push
cmp
pop
adc
jno
mov
sub
xchg
fbstp
push
lea
aaa
jnp
call
ffree
jae
cld
push
push
in
dec
sbb
lds
in
inc
push
mov
loopne
push
inc
outsl
shll
mov
loopne
test
add
xor
sbb
enter
jns
js
out
and
mov
mov
fldcw
hlt
sti
lods
and
roll
pop
adc
push
fisubrl
les
lahf
push
mov
xchg
sbb
shrl
stos
scas
into
loop
stos
xchg
sub
cmc
cwtl
pop
add
add
add
addl
mov
mov
xchg
mov
icebp
hlt
mov
mov
adc
stos
mov
inc
push
gs
shl
pusha
pop
cmp
nop
dec
movl
sub
pop
xchg
adc
sahf
cli
inc
cmp
mov
or
ret
lock
dec
aam
dec
enter
adc
rcll
sub
fwait
out
jb
xor
jmp
dec
xchg
mov
xor
dec
adc
xor
out
push
pop
adc
sbb
shll
dec
sbb
inc
push
mov
fbld
hlt
cmpsb
lock
xor
or
pop
repz
mov
es
pop
les
mov
push
out
pop
enter
dec
pop
or
dec
pop
insl
cmp
cmp
shrb
inc
push
in
dec
xchg
push
das
dec
push
out
sar
xchg
add
inc
mov
shl
cmpsb
add
shrl
movsl
loopne
pop
je
inc
cli
stos
or
cmp
pop
xchg
mov
inc
icebp
loop
filds
add
xchg
cmpsb
std
jp
inc
and
cs
divb
bound
in
sub
aam
test
add
call
incb
xor
negb
shrl
cmp
dec
ss
dec
mov
mov
xor
push
or
jl
loopne
or
aaa
movsb
pusha
adc
add
add
xchg
test
fldt
push
xlat
mov
rclb
enter
lea
sahf
syscall
xchg
dec
cmp
xor
mov
push
jmp
and
sti
pop
cwtl
jb
lret
sbb
dec
or
and
and
inc
xorb
mov
pop
sbb
fstps
or
aas
cmpsb
add
fs
xlat
hlt
push
or
jle
jl
add
jg
sbb
jle
and
fisubrl
sbb
push
mov
lcall
push
insb
mov
rcrb
add
xlat
outsb
scas
sbb
xchg
or
movsl
lcall
out
jbe
mov
and
jmp
add
pminub
loopne
mov
loope,pn
movsl
das
cmp
add
loop
mov
xchg
inc
sub
mov
int3
add
insl
aaa
adc
jo
mov
ljmp
sub
lds
sub
mov
dec
fs
mulb
mov
fisubs
adc
push
lds
xchg
arpl
sub
push
test
in
or
xchg
dec
mov
lock
mov
stos
ffree
cmp
xchg
repz
sbb
push
or
jae
test
icebp
icebp
mov
in
mov
push
out
je
movsb
es
lods
out
push
fcoms
sahf
data16
mov
push
jp
push
nop
add
fildl
xor
mov
lret
and
jmp
mov
adc
adc
fnstcw
rorb
call
rcr
push
or
inc
loop
push
push
jg
orl
dec
scas
jp
adc
pusha
add
insl
fwait
xor
int3
xor
jmp
adc
cmpsb
and
stos
pop
out
pusha
jo
shrl
pop
out
test
lret
dec
pop
push
lods
inc
gs
jno
int
jo
push
sub
daa
cltd
cmpsl
push
add
jnp
jecxz
pop
lcall
xor
lret
mov
js
out
mov
pop
into
int3
rclb
mov
clc
mov
jb
aas
mov
xchg
push
das
xchg
push
mov
movsb
aam
lock
cmc
sub
push
adcl
sbb
ja
adc
or
dec
mov
lahf
push
or
mov
sub
pop
in
scas
dec
pop
in
jnp
aad
inc
sbb
in
adc
add
insl
aas
pop
sarb
adc
and
mov
cli
outsb
xorb
cwtl
cltd
push
sub
lahf
rol
sar
ret
jno
out
mov
test
push
out
sbb
call
loope
mov
test
cwtl
jp
or
push
dec
fiadds
cltd
loop
push
mov
popf
inc
clc
dec
jbe
mov
cmp
dec
mov
mov
hlt
cld
nop
mov
inc
mov
or
pop
jle
lea
xor
sbb
int3
mov
arpl
test
mov
xchg
repz
aad
scas
cwtl
mov
and
mov
into
sub
jmp
jo
sahf
push
jge
stos
mov
loopne
push
call
and
cs
movsb
xor
xchg
xchg
sub
fcmovb
loop
aas
mov
repnz
and
test
sbb
test
sbb
dec
and
shlb
ficoms
inc
test
int
mov
fbstp
leave
fstpt
pop
ja
xchg
jmp
push
jmp
cmpb
out
lods
pop
lods
out
icebp
subl
fwait
add
out
xchg
dec
xor
ss
push
xchg
out
hlt
std
dec
dec
das
pop
mov
sub
in
pusha
fdivrl
cltd
rolb
mov
lods
xchg
cwtl
out
inc
cmp
mov
out
cmp
push
loope
dec
fmulp
loop
movsb
cmp
add
dec
pop
mov
iret
mov
or
mov
movsb
adc
xchg
sbb
pop
test
lods
fisubl
xor
or
je
das
jns
sub
dec
xchg
gs
jnp
hlt
lods
mov
stos
inc
cmpsb
pop
rol
dec
lcall
inc
add
jecxz
mov
jmp
mov
pop
lcall
and
int3
movsl
dec
fists
pushf
cmp
jmp
or
sti
mov
cmp
adc
test
call
clc
nop
repz
pop
cli
jbe
shll
daa
push
ret
scas
cs
add
or
xor
mov
cs
pushf
sub
xchg
icebp
popa
neg
rolb
add
jno
arpl
cmp
shlb
pop
cmp
aad
cmp
jne
lret
xor
inc
decb
lods
sub
cli
jno
fsubrs
pusha
inc
pop
stc
mov
or
cmp
out
xor
adc
lods
ret
xor
fwait
sti
sub
inc
ds
stc
nop
xchg
jmp
inc
jmp
xchg
outsb
or
out
jle
jmp
cmp
cmpsb
cld
outsl
and
out
adc
loop
cli
xor
jns
loopne
sub
nop
rorl
fcoms
or
pop
outsb
sbb
pop
and
movsl
in
adc
iret
arpl
jnp
fsts
clc
fyl2x
fxtract
push
idivb
add
sbbl
sbb
ret
push
mov
inc
xor
sbb
das
insb
fnstsw
mov
dec
push
out
out
jbe
or
mov
popa
adc
mov
and
imul
pop
dec
xchg
xchg
xor
mov
neg
jne
pop
cmp
aad
sbb
dec
push
rorl
cmp
aas
dec
in
scas
movmskps
mov
out
dec
sbb
imul
daa
pop
sbb
cmc
inc
cs
cld
dec
enter
dec
in
dec
imul
icebp
mov
cmp
cmp
xchg
mov
leave
mov
push
inc
dec
test
inc
faddl
out
mov
inc
jecxz
pop
shl
push
out
lds
out
jno
int3
dec
in
ss
je
cmp
in
cli
xchg
fisttpl
push
jae
mov
push
or
mov
fcomp
leave
xchg
sub
cmpsb
lock
mov
jmp
cmp
dec
fcmovb
vpsubq
sub
popa
test
shl
dec
icebp
fsubp
jne
sahf
cmp
dec
shll
pop
fcoms
xor
fwait
push
jb
adc
xchg
inc
mov
push
mov
lea
cmpl
push
add
cmpsb
xor
inc
pop
and
pop
adc
pop
testb
and
nop
out
xor
movsl
les
push
rcl
cltd
stos
out
adc
mov
scas
popf
xchg
push
xor
dec
clc
dec
push
pop
bound
jmp
outsb
lcall
iret
dec
and
push
xor
test
popfw
jae
push
xchg
fisubs
ret
hlt
cmp
jbe
xchg
popf
adc
arpl
fisubs
ss
push
push
mov
lcall
bound
aam
push
pop
jle
fdivr
lahf
mov
dec
int
push
sbb
out
xchg
fwait
aam
loope
sbb
ds
jp
pop
push
lods
fwait
sbb
sahf
inc
jae
adc
popa
xchg
leave
or
ljmp
jbe
cmpsb
shrb
lcall
lods
data16
enter
xor
fcompl
mov
inc
xchg
jns
push
cs
cwtl
and
push
fldl
loop
into
ljmp
add
test
push
inc
pop
push
cmp
jae
movb
popf
leave
or
push
push
xchg
sub
fwait
ret
lahf
lds
or
sahf
or
xchg
lcall
mov
or
push
repnz
in
stc
pop
and
dec
test
xor
push
mov
bound
mov
xlat
lahf
sbb
push
adc
dec
test
fmuls
hlt
je
js
inc
cmp
data16
hlt
jb
dec
shll
xor
mov
jmp
js
or
xchg
insb
mov
sahf
das
fildll
test
scas
mov
out
daa
test
mov
xor
add
push
in
sbb
and
push
in
or
cmpsb
iret
mov
iret
call
pop
pop
xor
inc
cwtl
popf
les
arpl
hlt
mov
mov
xchg
mov
jnp
cmp
pop
mov
xchg
rorl
xchg
jns
movsl
je
iret
mov
mov
lock
jecxz
jl
sbb
mov
mov
adc
ret
fidivrl
and
xchg
movsb
movsb
mov
xor
push
jp
and
mov
sub
mov
insl
cmpsl
mov
jae
enter
mov
stos
mov
fbstp
icebp
mov
mulb
mov
test
loope
adcl
pop
pushf
addr16
sub
int3
dec
and
pop
cmpsb
mov
loopne
and
and
mov
inc
fbld
sbb
xor
enter
cmpsb
ds
sbb
xchg
or
cmp
pop
mov
dec
scas
aad
mov
cli
scas
sti
mov
xor
adc
adc
xchg
out
in
cmp
scas
mov
inc
iret
push
cmp
push
pop
mov
mov
xor
cltd
or
sahf
scas
sbb
push
aaa
pop
jno
jns
insl
add
jle
pop
test
mov
sub
in
lret
lea
arpl
dec
push
arpl
in
ja
and
jns
stos
and
push
mov
dec
daa
dec
jbe
arpl
push
stos
cmc
mov
cld
sbbl
xchg
call
outsb
sub
mov
dec
add
mov
add
pop
inc
sbb
pop
dec
inc
or
enter
dec
in
movsl
scas
mov
xchg
adc
or
test
iret
gs
dec
repnz
lcall
xchg
mov
sbb
insl
add
dec
rcr
fisttps
bnd
test
nop
out
push
jb
or
mov
mov
aaa
sbb
mov
pop
jmp
or
jle
xchg
and
mov
fcoml
push
pop
xor
and
dec
adc
ds
popf
sub
pop
mov
das
mov
mov
jecxz
pop
mov
xchg
mov
xchg
lods
mov
add
out
xchg
inc
fcomi
or
mov
and
mov
lcall
stos
test
and
jge
adc
gs
js,pn
mov
cmpsl
add
sbb
sub
xchg
std
xchg
bound
xchg
mov
push
icebp
and
pop
lcall
decb
dec
mov
xor
mov
icebp
popa
mov
hlt
push
mov
testl
dec
fnstcw
into
jmp
mov
cmc
jp
dec
repnz
mov
in
dec
and
xor
pop
inc
movsl
xor
addr16
je
add
test
movsb
je
pop
lds
loope
bound
xor
add
sub
outsb
add
movsb
or
cltd
cmp
and
mov
sub
mov
lret
iret
push
scas
and
lret
enter
xchg
addr16
sub
adc
pop
cli
xchg
dec
mov
in
pshufw
dec
mov
mov
dec
loopne
insl
cmc
adc
icebp
mov
fcmovnbe
dec
filds
std
pop
or
inc
jae
aad
shl
xor
adc
ss
jle
sbb
lock
imul
xchg
cs
dec
fs
movsl
or
pop
xorb
std
les
popf
insb
mov
lahf
out
ja
jmp
pop
loopne
inc
rcr
icebp
scas
inc
inc
aad
dec
inc
mov
mov
or
insl
jnp
addr16
lods
ds
mov
pop
mov
stos
mov
fsubrs
inc
pop
idivl
and
jne
cmc
call
filds
mov
xor
fisubrl
cltd
out
imul
xlat
push
xor
pop
out
sub
mov
hlt
mov
test
sbb
xlat
dec
xor
add
push
jmp
mov
xor
dec
mov
jne
adc
sbb
pop
add
fsts
movsl
sbb
sub
jb
sti
hlt
addr16
fcmovu
jae
jecxz
cs
dec
mov
jae
notb
add
popf
stos
push
dec
sbb
xchg
jbe
push
xlat
xor
cmp
fcoms
repz
sbb
inc
add
or
jmp
cltd
sbb
ljmp
mov
mov
fists
stos
mov
adc
call
test
inc
mov
mov
fstpt
fsubrl
dec
and
in
divb
imull
mov
loopne
add
lar
adc
ljmp
and
test
and
shr
sbb
mov
inc
jno
rcr
scas
fists
adc
das
inc
loop
scas
mov
cmp
pop
fldcw
mov
data16
or
adc
mov
push
mov
mov
add
xchg
adc
jg
int3
fdivp
jl
jg
hlt
rcrl
mov
sbb
hlt
and
test
dec
mov
call
sbb
jae
add
int
cwtl
push
imul
push
jge
sbb
sbb
mov
adc
pop
inc
pop
adc
popa
jbe
or
in
outsb
mov
xchg
adc
in
mov
sub
mov
popa
cmc
lcall
dec
adc
leave
insb
pop
sahf
popf
jmp
sub
sarb
sbb
jg
pop
and
adc
ss
je
cmpps
xchg
mov
aam
pop
sub
dec
aad
insb
jge
pop
xor
ds
push
add
adc
aam
xchg
sub
sub
adc
jecxz
sbb
dec
inc
add
jmp
mov
out
mov
bound
jmp
pop
jl
dec
jb
mov
imul
or
cltd
cmc
or
ljmp
sarb
push
jl
jne
clc
test
push
sub
addr16
repnz
pop
jne
pop
xchg
push
push
loopne
in
daa
adc
fidivrs
dec
add
push
sub
mov
push
cmp
xor
mov
filds
paddusb
testl
loopne
jbe
dec
out
les
enter
fwait
pop
notl
call
mov
je
hlt
push
leave
pop
inc
cwtl
loopne
inc
out
sbb
mov
sbb
push
sbb
xchg
shlb
inc
mov
clc
movsl
adc
push
pop
dec
push
stc
cmc
jp
dec
les
adc
and
popf
inc
icebp
dec
sti
mov
inc
addr16
out
bound
lret
sub
addb
les
data16
shll
aam
dec
add
insb
jne
in
xchg
add
loop
mov
lods
out
imul
mov
rcrl
popa
shlb
mov
scas
loop
push
sbb
out
adc
cmpsb
cwtl
aaa
mov
inc
xor
gs
enter
sub
mov
test
dec
xchg
sbb
sub
shrb
hlt
ss
aas
jae
out
pusha
jns
sbb
xchg
call
aam
dec
jecxz
jmp
push
add
xor
cmp
leave
pop
adc
sub
ret
adcb
cmp
aad
add
push
out
xchg
enter
cld
xchg
aad
fs
push
lahf
xlat
scas
jmp
mov
sbb
scas
ret
inc
lds
mov
addr16
into
in
and
loop
or
dec
add
popa
xor
inc
fstpt
inc
stc
xlat
xor
cld
adc
cmpsl
add
lea
jb
sbbl
mov
rcll
lock
sub
fcompl
cli
jnp
jg
cmp
lea
fxch
pop
dec
mov
push
loopew
sub
mov
sub
leave
pop
xor
rcl
sbb
pop
dec
clc
fisubrl
sub
xor
lods
cmp
and
mov
push
fnsave
mov
xor
dec
pop
inc
test
dec
cld
imul
repz
dec
hlt
movsb
gs
mov
push
push
sub
repz
jecxz
xor
adc
pushf
push
xor
push
dec
out
dec
sbb
outsl
cmp
inc
jb
pop
testb
sub
hlt
pop
ds
rcrb
imul
mov
lods
sub
xchg
and
icebp
lret
andb
add
jns
dec
lds
push
sub
insl
ds
dec
add
out
test
sbb
movsl
xor
test
hlt
mov
pop
pusha
movsb
dec
out
jge
mov
inc
repz
lea
xchg
and
jns
xchg
dec
das
lds
mov
mov
repnz
fwait
jg
or
clc
mov
inc
push
rorb
push
imul
xchg
lcall
xchg
dec
daa
cmpsl
ret
pop
insb
lcall
add
mov
addr16
nop
inc
push
mov
gs
dec
cmpsb
lock
shll
jecxz
push
adc
xchg
inc
fwait
movsb
push
adc
xor
push
int
mov
sbb
xchg
mov
mov
inc
out
and
sbb
cwtl
mov
stos
lea
sarl
xchg
addl
pop
xchg
mov
scas
sbb
pop
lock
jge
test
push
shl
imul
cmp
mov
mov
rol
jecxz
mov
push
aad
adc
lock
mov
ret
xchg
and
mov
mov
jne
jg
and
sbb
sub
dec
xchg
add
pushf
cmp
stos
scas
jnp
and
imul
xchg
fidivrs
fimuls
pop
pop
jnp
insb
inc
pcmpgtw
mov
pop
adc
cmc
gs
test
add
aad
fldt
movsl
mov
les
cltd
adc
fincstp
and
mov
incb
enter
and
test
jno
pop
lea
pop
inc
fidivl
lret
fsubl
scas
adc
xorb
cmp
ja
sub
out
jmp
dec
adcb
pop
jmp
xor
sti
leave
and
inc
mov
jo
sti
call
aaa
sbb
ds
adc
xor
mov
push
nop
jmp
xchg
daa
inc
sti
or
outsl
icebp
adcl
ret
adc
cmp
in
test
std
ret
frstor
or
in
adc
in
lcall
mov
add
les
sar
in
test
mov
imul
sbb
xor
push
shrl
arpl
pop
xchg
loopne
dec
mov
xchg
add
add
xchg
mov
add
lcall
les
push
gs
js
mov
fistl
in
mov
testb
lcall
mov
lret
jp
pop
xor
rolb
lfs
iret
jnp
jle
push
js
pop
out
icebp
ss
repnz
fs
sarb
es
jnp
fisttpll
popa
mov
mov
pop
xor
movsl
mov
in
fwait
cltd
addb
outsl
mov
out
out
dec
push
mov
or
pushf
ficompl
xorb
dec
mov
inc
mov
inc
test
push
jge
inc
mov
cmp
or
jle
je
adc
pushf
push
or
push
cmp
push
jae
mov
add
imul
jbe
imull
add
in
jle
jg
xchg
clc
rorl
repz
jle
dec
and
test
inc
fldl
sub
mov
inc
push
xor
adc
xor
and
loopne
inc
push
inc
lock
inc
out
inc
xlat
icebp
cmp
and
pop
push
mov
cmc
jns
popa
mov
loope
into
popf
insb
lret
mov
jb
jl
add
ret
dec
rep
xchg
xor
pop
mov
shrb
mov
add
add
test
fs
das
gs
clc
adc
stc
scas
scas
mov
jge
jo
inc
xlat
and
pop
out
xchg
pop
cmc
das
jp
pop
push
std
add
push
add
fldl2t
xsha256
cmpsb
xchg
fmulp
cmpsl
cwtl
mov
test
shr
sub
lahf
and
stc
sbb
add
repz
dec
jecxz
lods
into
xchg
jbe
out
in
and
dec
ds
jp
aad
mov
mov
sbb
jle
cmc
scas
inc
daa
sbb
shl
xchg
or
test
xchg
adc
xchg
add
popf
mov
fwait
and
rcrb
subl
push
xchg
mov
bound
cmpsb
outsl
jno
faddl
jbe
inc
xchg
xor
dec
cmp
push
lock
sub
inc
arpl
or
mov
pop
les
aam
cmp
rorb
jle
outsl
push
out
dec
leave
das
dec
or
xor
mov
pop
in
sbb
fs
mov
sbbb
test
mov
sub
movsb
pop
div
std
cmc
and
shrl
pop
insb
push
pop
pop
je
mov
out
sub
fbstp
lret
mov
mov
lcall
fsubrs
clc
and
pop
lods
fidivrl
mov
push
out
jne
jno
mov
mov
stos
add
dec
xor
mov
and
ror
cli
push
cld
mov
stc
popf
sub
bts
cwtl
repnz
adc
push
add
fadds
pop
testb
inc
and
enter
sbb
outsl
shll
mov
hlt
ja
mov
add
cmc
jle
push
mov
sti
pop
xor
insl
mov
xor
lahf
push
dec
phsubd
popf
shrl
inc
repz
shrb
in
cld
adcb
mov
mov
lahf
xor
stc
shlb
xchg
jge
dec
mov
jnp
mov
xchg
jno
mov
or
push
ds
push
push
scas
ljmp
cs
dec
popa
cwtl
repnz
movaps
push
or
mov
fstpl
data16
mov
notl
in
mov
xchg
sbb
xlat
sahf
cmp
xchg
dec
rorl
mov
pop
pop
xlat
insb
mov
push
paddb
adcl
les
sub
clc
ret
scas
sarb
incl
rol
push
jmp
cld
inc
inc
int3
ret
insl
sbb
fbld
mov
stos
pop
subb
iret
mov
push
js
lret
jg
and
popf
mov
jae
push
inc
leave
pop
subl
stos
insl
ljmp
leave
xchg
xor
pushf
sub
std
cltd
call
test
lods
sub
nop
pop
lret
or
jg
xor
mov
data16
push
pop
mov
push
and
jmp
aaa
pop
xor
or
sub
xchg
in
jl
add
inc
cmp
lcall
shll
rcrb
push
fistpll
clc
mov
and
sbb
mov
and
iret
ss
dec
inc
and
test
push
call
xor
jmp
insl
push
xchg
in
notb
sbb
sbb
or
and
adc
xor
hlt
cmp
jg
push
xchg
jne
js
jp
pop
loopne
and
aad
daa
iret
push
cmp
loopne
cltd
clc
mov
das
or
pop
jnp
push
sub
pushf
cmpsb
sub
std
lods
cmp
sub
cld
mov
aaa
cmp
add
mov
sti
sub
shll
inc
push
popf
clc
adc
fcomp
xchg
dec
ret
jbe
add
out
movsb
inc
adc
mov
out
int
lock
mov
out
jg
out
mov
mov
xor
or
and
add
mov
icebp
cmp
cmpsb
aas
mov
mov
dec
pop
push
ss
pop
lea
adc
lods
imul
nop
sbb
mov
mov
mov
out
sub
pop
inc
mov
cmc
and
je
adc
ds
dec
xchg
loope
cs
pop
jmp
or
add
pop
mov
out
cmp
adc
dec
add
cmp
cmpsb
into
pop
js
out
add
fbstp
test
jbe
in
cmpsb
cmp
jle
pop
mov
pop
inc
aaa
push
jae
je
stc
mov
incb
pop
or
adc
shlb
pop
cwtl
sub
mov
dec
mov
and
sbb
jbe
xor
xchg
popf
push
xor
cwtl
nop
lods
sbb
cwtl
pop
lock
sub
out
xchg
aaa
push
sub
dec
cld
dec
push
int
adc
xchg
sbb
push
stos
enter
xchg
push
cmp
xchg
cs
sub
dec
jo
pop
cli
clc
push
aam
test
jge
fiadds
test
sti
cltd
test
jne
inc
inc
jmp
xchg
sub
dec
lahf
xchg
or
add
xor
cmp
ss
jecxz
dec
pop
mov
pop
repnz
fcoms
push
jp
mov
mov
push
hlt
jge
aas
pop
or
call
push
out
and
dec
fwait
in
jne
jecxz
push
dec
lret
xor
arpl
fsubl
pop
fldl2t
xchg
loope
or
mov
ljmp
sbb
and
into
push
inc
cmp
aaa
ds
cld
movsb
dec
ds
vmovshdup
cmp
pop
int
cmp
pop
cltd
pop
ret
sub
std
and
je
fstl
adc
es
mov
loopne
dec
pusha
addb
mov
push
sub
gs
outsb
vmovdqa
sub
dec
mov
hlt
or
push
iret
push
adc
lahf
cmp
jnp
ja
jmp
push
fisttpl
jle
jb
frstor
mov
gs
sbb
ja
mov
jl
es
sbb
mov
dec
das
sub
mov
jns
mov
inc
cmc
ja
pusha
insl
add
pop
jae
fdivrs
push
cltd
mov
sbb
imul
fisttpl
std
sub
hlt
pop
jl
ja
cmp
aad
sbb
aas
aas
incl
aad
repz
cmp
push
lea
inc
xor
mov
xchg
xlat
clc
lret
dec
push
jge
push
xchg
sub
sub
sbb
mov
dec
das
cwtl
pop
or
add
shll
push
dec
std
xchg
inc
sbb
add
pop
cmp
and
stos
adc
or
sbb
shll
dec
inc
addr16
call
es
mov
nop
sub
fstpl
dec
add
dec
sti
jne
sbb
mov
add
pop
nop
jne
lock
repnz
mov
in
imul
mov
jno
pop
sub
sbb
and
das
sahf
lods
insb
pop
fucomp
or
xchg
adc
adc
xchg
and
pop
pusha
js
add
jnp
mov
into
bound
and
xchg
xor
dec
loopne
ror
test
clc
bound
lds
sbb
xchg
cmp
frstor
insl
sti
sub
incb
jge
pop
inc
movsl
scas
hlt
lea
inc
aam
out
das
adc
mov
cmp
pop
pop
xchg
movsb
or
das
inc
or
aas
push
arpl
mov
inc
cmp
push
jmp
dec
stc
pop
ja
mov
add
in
test
insb
or
cmp
sahf
sub
imul
daa
in
pop
icebp
cmp
xor
dec
jae
scas
mov
push
lods
push
in
adc
mov
div
dec
loop
cld
mov
add
sub
loope
imull
sub
push
dec
lock
call
xor
cmpsl
mov
jge
aad
xor
int3
mov
gs
mov
xchg
pop
mov
imul
in
pop
fwait
aas
jns
pop
hlt
in
dec
xchg
inc
sbb
xchg
inc
dec
push
sub
push
repz
imul
mov
push
pushf
in
repnz
mov
push
jbe
or
xchg
loop
mov
mov
or
mov
popa
jg
push
shrb
lock
pop
out
pop
cmp
fiaddl
lods
inc
insl
test
lahf
and
aas
addr16
push
hlt
lret
or
mov
adc
cwtl
dec
pop
test
pop
inc
mov
cmp
jae
inc
push
sub
sbb
fistpl
jecxz
sbb
sub
into
sahf
mov
ret
add
sub
mov
lahf
test
jo
andb
mov
or
bound
xor
xor
bound
inc
sahf
mov
lret
fsubl
shll
call
inc
inc
and
mov
cld
outsl
jge
or
or
push
cmp
and
push
inc
in
lock
out
inc
mov
fbld
mov
mov
into
sbb
loopne
pop
fwait
mov
ret
in
leave
and
mov
enter
stc
rcll
lret
xor
push
data16
fistl
jnp
jo
jmp
xchg
fistl
hlt
mov
cmp
adc
lret
addl
shlb
out
nop
lods
cmp
notl
pop
pop
lcall
dec
mov
xchg
lea
sbb
fists
push
std
mov
andl
jnp
out
int3
mov
sarb
lods
dec
push
push
imul
xor
add
dec
mov
shlb
add
xchg
jg
dec
xlat
inc
xor
pop
js
fldt
sbb
add
popa
or
mov
test
scas
scas
adc
iret
xchg
shl
testl
add
xchg
or
xchg
pushf
stc
cmpsb
loopne
data16
fadds
jg
ret
mov
pop
mulb
insb
jge
sbb
ja
in
nop
daa
jns
lock
test
iret
push
ds
push
jmp
das
jno
or
dec
push
jnp
or
push
icebp
decb
stc
add
xor
shll
pop
xlat
xor
jecxz
cmp
jmp
lock
xor
or
cmpsb
cli
cmpb
xlat
fbstp
xlat
sbb
insb
dec
mov
daa
cmp
mov
pop
pop
fidivl
push
jge
mov
fcomip
jne
mov
or
dec
adc
xchg
xchg
xor
or
mov
xchg
jg
mov
xor
push
xchg
or
jle
rcl
sar
fwait
mov
xchg
pop
bound
xor
mov
cmp
inc
sarl
xor
in
push
test
nop
fsubrp
cmpsl
cs
std
pop
mov
pop
cmp
mov
fcomp
outsb
iret
fwait
push
scas
xchg
sub
adc
push
mov
test
ljmp
notl
xchg
idivb
lahf
pop
lret
xlat
outsl
jge
out
in
mov
adc
jl
mov
push
testb
pop
xchg
repnz
sub
pop
bound
outsb
jl
sub
sbb
jbe
jno
jnp
mov
jg
addr16
fcmovnbe
mov
stos
jbe
popa
ja
dec
fcomp
ret
nop
adc
push
inc
inc
push
lea
stos
xor
sub
sahf
cmpsl
ds
movl
cmpsb
mov
xchg
sbb
hlt
in
dec
testb
movsb
setle
enter
sbb
enter
fldenv
mov
test
dec
mov
fwait
mov
cmp
jbe
lcall
test
xchg
stos
mov
movsb
enter
sahf
fs
imul
les
mov
add
sbb
cmp
xchg
mov
data16
cld
xchg
adc
pop
dec
js
data16
out
inc
fs
inc
xlat
leave
pop
and
push
popa
std
push
fcom
push
in
pushl
pop
sti
xor
and
push
cwtl
pop
je
daa
xchg
test
js
nop
ja
jae
mov
jl
cli
mov
cmc
sbb
cmp
sbb
dec
addr16
dec
hlt
loope
stos
fwait
mov
outsb
and
ret
xor
or
jl
in
shlb
mov
cld
push
cs
mov
fnsave
shrl
imul
cli
sbb
fstpt
push
rclb
cmp
push
shr
ja
add
and
enter
xchg
cmc
into
daa
mov
add
push
mov
mov
dec
enter
dec
dec
pusha
dec
test
sbb
jo
pop
mov
lds
sbb
pusha
rol
pop
fcmovne
mov
jne
cli
jae
xchg
pop
sahf
xchg
fidivrs
add
mov
das
in
push
arpl
imul
pop
lret
jne
outsl
loopnew
sub
cltd
dec
mov
in
add
clc
lock
cmp
loopne
fwait
jne
pop
xchg
xchg
test
into
add
aaa
jle
pop
ret
mov
pop
gs
inc
aaa
fsubs
jne
cs
in
inc
adc
sbb
mov
push
clc
sbb
scas
int
add
cmc
out
cs
lds
gs
sti
shrb
cmp
sub
shll
in
add
jbe
mov
sbb
sub
cltd
inc
div
mov
sbb
and
pop
notl
lock
jne
test
push
lret
add
xchg
inc
sub
aas
scas
mov
push
mov
ja
or
sti
fcmovb
push
push
std
out
push
sub
lock
movsl
xor
mov
sub
icebp
mov
fwait
stc
push
xchg
mov
jle
pop
mov
loop
mov
adc
imul
mov
gs
fnsave
or
adc
dec
in
inc
pushf
adc
arpl
xchg
jge
or
jg
inc
add
hlt
icebp
dec
sahf
stos
sub
dec
xor
adc
mov
sti
bound
stc
sarl
stc
adc
push
add
mov
push
inc
adc
adc
push
push
jge
movsl
insl
out
inc
push
fidivrl
jecxz
jl
loopne
jl
stos
sahf
mov
sbb
adcl
sbb
jno
xor
test
test
lahf
mov
inc
scas
xor
int3
sub
sub
lods
sub
shlb
aas
xchg
xchg
ljmp
testb
or
lods
subb
dec
mov
lcall
cmpb
data16
rcrb
pusha
sub
outsb
stos
push
push
mov
fsubl
sbb
cmp
sub
aam
fidivl
ss
push
outsl
jnp
add
or
push
outsl
jb
in
ret
jmp
imul
jg
adc
clc
inc
movsl
push
out
xchg
pop
stos
imul
js
jecxz
add
cwtl
pop
in
rcrb
lret
sbb
pop
out
cmp
sarb
daa
xor
lods
push
mov
xor
jmp
xchg
dec
xchg
pop
aam
loopne
mov
lret
and
out
cmp
pop
cs
inc
push
sahf
movsl
dec
arpl
push
and
dec
xor
pop
mov
dec
xor
lret
hlt
imul
push
leave
mov
cmp
ret
xchg
test
mov
mov
lret
xchg
pop
call
pop
fistps
xchg
loope
leave
sbb
mov
fistpll
mov
addr16
pop
js
pop
mov
mov
jnp
pop
fmul
xor
push
push
in
xchg
aaa
pop
xchg
cmpsl
jae
pop
mov
bound
cltd
pushf
icebp
pop
jns
ljmp
call
mov
imulb
sub
lret
out
icebp
addr16
lea
stc
or
sbb
mov
and
mov
cltd
inc
mov
mov
or
call
sti
mov
dec
sbbb
push
pop
jo
in
ljmp
inc
test
ret
jge
xor
imul
push
mov
xchg
insl
loopne
ss
sub
js
xadd
mov
xchg
jmp
mov
mov
iret
sub
int
mov
pop
out
jg
fstpl
pop
mov
in
test
cmp
clc
xchg
cld
pop
dec
loop
repnz
aad
push
or
dec
jecxz
das
pusha
negl
loope
in
jle
adc
lret
fildll
push
ljmp
pop
out
or
lea
inc
gs
in
int
ret
aaa
xor
inc
xchg
push
and
or
or
pop
inc
in
in
push
xchg
pop
les
cmpsl
shrb
scas
imul
cmpsl
jns
or
das
ret
sub
push
repz
mov
cld
bound
ja
inc
imul
push
es
cltd
dec
and
fs
fiaddl
aam
shrb
ss
mov
out
jo
and
cmp
xchg
pop
movsb
and
in
pop
and
jp
xor
inc
repnz
mov
pop
pop
hlt
cmc
pushf
data16
push
push
imul
mov
fdecstp
lea
fdivr
pusha
mov
pop
cmp
mov
out
jp
fwait
mov
pop
in
inc
rcll
xor
push
mov
jg
loope
fmuls
dec
mov
sbbb
call
adc
clc
outsl
imull
inc
mov
or
push
sets
leave
xor
push
outsb
fimuls
mov
pushf
push
xor
fnsave
ja
push
test
lret
sub
mull
adc
adc
ds
pop
pop
std
adc
fbld
dec
cmp
add
push
std
mov
push
xchg
pop
or
fldl
imul
sub
push
fdivrs
cmp
pop
or
mov
add
jbe
sbbl
or
or
xchg
jle
int
mov
leave
outsl
add
notl
adc
mov
pop
mov
cmp
aad
sbb
mulb
fiaddl
push
jmp
rclb
leave
shl
xor
add
bound
aaa
lret
cmpsl
imul
out
and
or
add
pop
in
ror
cmp
addr16
fistpll
mov
bound
sbb
inc
adc
pop
jmp
outsb
add
aaa
aam
and
lods
mov
inc
fdivl
xchg
fildl
xchg
fucomip
aaa
les
cmp
inc
in
jl
jp
loopne
aaa
sbb
and
popa
fsubrl
dec
lock
pop
cli
or
pop
xor
out
dec
jns
subb
popf
scas
xor
bound
imul
push
adc
popf
clc
push
add
divb
jo
jbe
dec
sub
cmpsl
mov
dec
fsts
popf
push
cmp
mov
je
or
mov
adc
pop
pop
lcall
dec
mov
lcall
stos
stos
jae
test
ror
outsl
popf
inc
cltd
mov
addr16
es
loope
fstpt
sub
leave
fs
gs
pop
cmp
test
fmuls
and
scas
stos
inc
pop
push
test
insb
fdivrs
cmp
daa
int3
rorl
stos
add
adc
cwtl
sbbl
cmp
mov
push
dec
add
shr
jne
mov
cmp
xor
or
cmpsl
outsb
inc
pop
xchg
dec
es
lret
adc
lea
rclb
shrl
and
cmp
adc
xchg
mov
addr16
fadds
test
cmp
cmp
or
add
xorl
out
cmp
xor
inc
bound
in
adc
add
aam
mov
and
push
lods
dec
sub
push
shll
mov
jmp
jae
aam
imul
ds
jo
mov
jge
sbb
mov
sbbl
ds
insl
out
lahf
and
orl
fwait
daa
and
int3
rclb
ss
inc
cmp
jmp
jle
mov
adc
lahf
js
ret
mov
sbb
cmp
daa
mov
outsb
xor
aas
shl
jae
stos
mov
insb
mov
lahf
in
repnz
loopne
fincstp
lds
adc
imul
mov
shlb
cmpsl
sbb
lret
dec
cltd
inc
pop
pushf
xchg
aaa
testl
jle
xchg
leave
jmp
push
lds
ret
test
dec
cmp
add
cmp
roll
out
sub
pop
rol
jno
sub
popf
scas
push
xchg
es
jne
mov
iret
xchg
je
push
xlat
cmpl
jne
push
shrl
cwtl
ljmp
popa
sub
add
gs
mov
loopne
out
adc
daa
adc
aaa
shrb
and
add
orl
int3
xchg
shll
mov
push
jno
test
sbb
cwtl
pop
repnz
xor
dec
mov
mov
insl
shlb
shlb
cmp
mov
jp
mov
mov
xor
mov
lods
sbb
test
stc
pop
push
rorl
xchg
xor
negb
cmp
repz
frstor
mov
test
inc
in
pusha
imul
adc
cmp
cmp
pop
adc
xor
lods
adc
jl
in
pop
lret
add
sbb
arpl
pop
dec
ss
movsb
sbb
addr16
mov
inc
xchg
adc
sbb
cwtl
shrl
or
jg
add
add
fiaddl
scas
test
jp,pn
push
and
incl
inc
adc
and
scas
out
xchg
xchg
jmp
sub
sub
push
ljmp
and
push
dec
pop
clc
jecxz
insl
lcall
std
jmp
shrb
repnz
cli
jno
adc
xlat
cmp
rcll
jle
cld
dec
add
pop
mov
lcall
push
mov
mov
lret
push
into
call
mov
fcomip
mov
pop
repz
push
xchg
ja
out
enter
jg
test
idivl
clc
into
push
popa
mov
fs
mov
add
cmpsl
adc
sti
test
jae
inc
movsl
mov
cmp
sbb
int3
jns
add
sbb
and
inc
cmp
in
pop
out
push
rorl
fcompl
ja
std
sbbb
jae
xchg
lahf
cmp
jno
and
jmp
pop
sbb
xor
xchg
mov
fstpl
mov
popf
stos
mov
call
xchg
ja
pop
aad
lock
sub
push
and
inc
push
fdivrl
pop
or
lods
inc
pop
pop
adc
dec
cmp
pop
push
cli
inc
fs
xchg
add
data16
cmp
push
adc
int
stos
cmp
dec
loop
sub
aam
mov
pop
jb
js
jne
cmp
or
cltd
pop
xchg
push
dec
mov
xor
dec
pop
repz
loopne
push
and
js
fwait
aas
sarl
subb
pop
insb
inc
dec
insb
sub
imul
pusha
je
rclb
popl
dec
push
mov
shrb
mov
jno
mov
cli
push
test
pop
push
mov
add
daa
int
and
push
push
xchg
ss
lahf
jno
push
loopne
fisubl
sub
xchg
jmp
inc
xor
fsubrs
pop
ja
lea
xchg
inc
rcrl
push
imul
cmpsl
push
and
inc
dec
mov
mov
pop
enter
es
cmp
shr
mov
nop
icebp
mov
pop
or
mov
enter
sbb
dec
dec
arpl
mov
cmp
decb
das
je
mov
imul
push
movsl
sbb
cmp
cmp
mov
adc
mov
xor
push
mov
sahf
clc
mov
mov
jecxz
movzwl
jmp
add
ss
push
inc
pusha
test
sub
cmp
jne
cmc
icebp
xor
movsb
addb
add
leave
inc
jmp
mov
les
jge
mov
xchg
imul
or
sbb
push
sbb
popf
mov
jp
pop
add
in
push
out
adc
stc
add
and
xchg
cmc
cmpsl
int3
mov
inc
cmc
shlb
cmpsb
les
out
loope
out
fidivl
mov
cmp
sahf
outsl
stos
pop
imul
xchg
scas
les
jp
inc
and
push
jae
aad
scas
adc
sti
or
loope
fisubs
jns
sahf
lret
sbb
out
subb
jp
popa
in
cmp
aad
adc
call
les
rcl
or
add
push
imul
imul
jmp
rorb
leave
int
xchg
mov
loop
adc
pop
daa
push
fucomi
movsb
mov
cmpsb
arpl
cmp
lock
lret
imul
xor
lock
mov
in
pop
ret
movsl
lret
scas
test
inc
inc
in
sbb
cltd
pop
imul
test
ret
je
add
in
pop
out
jg
movsb
cli
mov
rorb
push
push
ds
test
push
mov
dec
or
push
or
pop
ds
pusha
jmp
mov
sbb
jp
aas
push
add
rcll
jmp
inc
mov
mov
gs
xchg
loop
mov
pushf
or
xchg
int
lret
xchg
sub
adc
sub
add
push
and
repz
js
jae
mov
mov
dec
sub
aas
xor
int3
shl
xchg
push
xlat
loope
loope
add
and
push
jl
shrb
mov
xchg
jno
mov
or
mov
dec
in
pop
cmp
jecxz
shll
lret
fsubrp
sbbb
loopne
inc
out
js
incb
test
sub
sbb
idivb
sbb
mov
cmc
dec
cmp
lcall
jge
mov
pop
cmp
xor
notl
cmpsb
add
mov
push
stos
jge
sub
pop
insl
push
xor
xor
xchg
imul
xchg
aam
popf
sbb
mov
shrl
rol
dec
inc
repz
xchg
xor
shl
push
jnp
iret
jecxz
pop
test
mov
shlb
jo
sbb
and
lea
add
shrb
int
jle
out
adc
je
repz
nop
loopne
stos
xchg
rcr
lret
pop
das
sub
mov
aad
xor
xchg
test
jg
xor
lods
mov
and
aad
xchg
js
hlt
xchg
sub
fwait
xor
popf
push
mov
in
into
loope
test
in
push
push
or
cmp
mov
sbb
push
add
xor
mov
jg
cltd
bts
jns
mov
flds
xchg
push
sti
add
fcoml
mov
inc
cwtl
or
cmp
jecxz
mov
in
dec
push
cmpsb
cmp
fstps
movsl
mov
mov
push
inc
dec
out
mov
out
aas
jno
call
loop
jnp
rolb
cmp
loopne
sub
jnp
lods
icebp
inc
and
mov
ds
divb
cmpsb
pop
call
fcoml
mov
aas
sub
pusha
mov
in
ret
or
or
xchg
mov
js
aas
lods
cmp
movsb
add
xor
jnp
and
scas
call
lahf
lods
cmp
cmp
es
dec
xchg
test
notb
jmp
xchg
jo
lods
mov
adc
ret
cltd
xor
icebp
cwtl
lods
rclb
dec
test
mov
cmc
not
out
sub
xchg
test
lock
push
sub
imul
les
out
dec
pusha
xchg
xchg
dec
loop
mov
ja
jo
push
mov
andl
insb
aad
or
xchg
cld
or
cmpsl
out
add
arpl
xlat
dec
arpl
sbb
dec
sub
inc
out
sbb
dec
xchg
add
jbe
fwait
shrb
jne
sub
adc
rorb
mov
bound
int3
mov
cld
mov
lds
push
mov
pushf
fnstenv
pop
mov
cmc
pop
enter
xchg
iret
sbb
jl
inc
fidivs
mov
outsb
scas
jmp
push
jge
and
mov
jno
in
pop
out
xchg
in
lahf
decb
lret
imul
shlb
fdivp
lods
mov
mov
shl
xchg
lds
ja
aam
jbe
ret
loop
inc
dec
dec
nop
jle
and
lods
mov
mov
ss
in
stos
aaa
mov
sahf
cmp
xchg
das
out
mov
and
or
adc
inc
sbb
jl
in
stc
dec
pop
loopne
and
mov
loopne
movhps
shrl
jo
adc
les
insb
mov
in
or
es
push
in
push
sub
mov
push
push
outsb
and
scas
fnstenv
push
hlt
xchg
jmp
push
xor
xor
and
hlt
mov
xor
loopne
ja
xor
inc
gs
sbb
gs
mov
mov
pop
sub
cmp
dec
pop
movsl
push
xchg
pop
add
into
and
scas
aam
jae
lods
std
fwait
xor
xlat
cmp
mov
sbb
and
mov
lcall
inc
outsl
andl
mov
ss
in
push
nop
inc
dec
inc
test
mov
push
lods
mov
pop
and
shrb
dec
xor
arpl
xchg
clc
sahf
std
mov
call
sub
bound
lock
cld
xchg
in
test
cmc
pop
mov
lods
jmp
pop
sub
pop
sub
cli
or
aas
jno
pop
adc
mov
xchg
icebp
sbb
movsl
out
pcmpgtd
lahf
in
enter
testb
iret
push
das
repnz
loopne
vpunpcklqdq
popf
and
dec
pop
inc
jo
cmp
cs
dec
arpl
mov
adc
pop
add
daa
inc
inc
std
cwtl
mov
add
dec
pop
and
mov
int
aam
dec
mov
jp
insb
sub
imul
iret
addr16
sbb
insl
popa
testb
dec
bound
out
in
pop
mov
jle
hlt
out
test
push
sbb
idivl
push
sub
add
ss
shrl
mov
ja
or
std
stos
or
out
sub
jne
mov
pop
paddq
sbb
push
and
repz
hlt
xchg
jbe
sbb
fxch
out
inc
push
push
mov
fdivrs
je
mov
pop
loop
insl
inc
or
xlat
testb
xchg
dec
add
lock
rcrb
jle
scas
push
fstpl
mov
mov
adc
imul
push
int
addr16
icebp
pop
mov
js
jg
lock
inc
pop
sahf
js
sbb
adc
es
push
push
divl
xor
fmull
dec
aam
xlat
out
mov
dec
sahf
pop
or
inc
inc
out
or
dec
movsl
xlat
inc
mov
cmpsl
sbb
cltd
mov
dec
xchg
jns
mov
or
in
sub
xchg
inc
lea
out
dec
ljmp
inc
jecxz
mov
ljmp
dec
inc
cmc
enter
lcall
add
push
cs
push
repz
xchg
inc
add
test
mov
and
jnp
es
pop
inc
push
sbb
push
lret
sar
push
mov
fdivs
ljmp
sbb
dec
iret
push
mov
sbb
daa
sbb
cmpb
adc
dec
add
jb
xor
push
bound
xor
jmp
in
leave
call
xor
push
dec
mov
push
push
xor
inc
stc
push
lret
mov
aaa
xchg
adc
xchg
lea
jecxz
mov
loopne
imul
mov
lret
mov
leave
mov
das
cmp
jecxz
jno
imul
nop
daa
inc
sub
pop
shll
scas
push
adc
add
push
xor
jge
or
loop
mov
cmpl
gs
mov
ror
pop
outsl
xor
jns
mov
add
lock
insl
dec
xchg
sarb
shll
xor
leave
in
aas
pop
frstor
xchg
inc
lods
test
fchs
movsb
cmp
jnp
cmp
out
lea
shlb
xlat
movsb
dec
fisubrl
or
aaa
cmpsb
andb
jns
aaa
jae
in
jl
enter
push
mov
xlat
inc
pusha
lea
lahf
jbe
mov
je
sti
lret
mov
and
push
loope
add
add
stos
aaa
add
inc
or
inc
cli
icebp
pop
jno
decl
daa
jp
and
push
movsb
xor
add
add
push
pusha
push
dec
xchg
jne
lcall
cmpsb
ret
ror
push
imul
subl
mov
lcall
inc
clc
ss
adc
in
mov
loop
fdivrs
sbb
mov
out
jnp
icebp
pop
or
shr
adc
xchg
dec
in
mov
dec
sbb
mov
es
mov
sbb
aam
cli
cs
mov
xor
add
jno
cmp
sbb
mov
mov
into
dec
cmp
ret
hlt
popf
call
lods
sarl
cld
test
mov
push
pusha
in
jbe
clc
imul
aas
cli
cmp
ret
int
push
cmp
pop
bound
push
test
cmp
mov
adc
subb
popf
mov
dec
cmp
popf
or
jns
test
or
lods
dec
jecxz
daa
adc
and
gs
aas
push
push
push
sbb
leave
addl
movsl
mov
push
repnz
lret
pushf
fldcw
xchg
jg
dec
idivb
push
mov
iret
fmulp
das
mov
scas
ret
dec
mov
sbb
inc
push
and
mov
std
xor
andb
mov
es
outsb
rorl
mov
int3
mov
inc
add
sbb
inc
inc
sub
enter
jae
sub
es
mov
xchg
cmc
xchg
sti
fisubrl
cs
ret
hlt
and
frstor
cmp
xlat
and
mov
adc
cmp
adc
std
and
out
push
jne
in
or
jae
in
lods
sub
mov
das
inc
add
or
push
clc
loope
sub
repnz
andb
fdiv
nop
test
leave
pusha
loope
ljmp
mov
pop
jp
bound
hlt
imul
mov
lds
mov
cmp
adc
mov
cmpsl
in
mov
cmc
jp
cmp
gs
fisubrs
out
subb
push
pop
and
sbb
pop
mov
jne
test
mov
jmp
std
and
or
ds
sub
arpl
push
push
jb
int3
arpl
xor
ja
outsb
sbb
dec
lret
push
out
push
sbb
in
ja
clc
idivl
jne
shll
add
inc
js
test
mov
add
ret
call
idivb
xchg
jge
mov
xchg
bound
insb
jo
xor
ss
shrl
xchg
xlat
cmpsl
mov
mov
enter
sub
mov
inc
lock
mov
mov
push
lcall
cltd
test
xorb
xlat
je
addr16
dec
dec
jno
shll
adc
pop
test
out
pop
mov
and
push
loope
sbb
adc
dec
jle
cmpsb
in
insb
fwait
lret
test
scas
and
jg
pop
and
bound
xchg
jle
adc
adc
adc
push
adcl
dec
jp
ret
jno
mov
or
sarb
fdivrl
push
push
xor
and
das
fsubl
push
xchg
into
arpl
arpl
stos
outsl
les
rcr
nop
inc
out
xor
cmpsb
jge
or
movsl
jns
add
adcl
and
in
frstor
push
adc
ss
sub
xlat
pop
lcall
lea
popf
shll
lcall
sub
daa
sarl
cvtdq2ps
sub
push
lret
ret
sub
in
cs
pushf
pop
int
pushf
and
adc
cmc
xlat
adcl
sub
sub
xor
fsubl
pusha
lods
cmp
cwtl
out
int
ret
jne
sbb
ds
lods
outsl
push
je
add
or
adc
cmp
fsub
mov
jae
ret
mov
int
das
cld
mov
mov
sarb
addr16
dec
loop
jge
ret
fiadds
xor
mov
or
xchg
clc
mov
insl
add
jp
push
mov
mov
das
icebp
mov
bound
into
or
inc
xor
sbb
ret
fisttpll
pop
mov
cmpsb
push
out
sub
in
mov
cmp
les
movsl
mov
test
sbb
sbb
aam
loope
sbb
jecxz
fldenv
insb
jle
mov
fbld
lods
sbb
popf
in
dec
pop
cltd
andl
mov
out
loop
fistps
mov
and
jo
das
xor
std
jns
jnp
fiadds
mov
ret
sbb
clc
mov
cmp
icebp
js
jo
sub
clc
call
xchg
sub
xlat
push
pop
push
or
repz
add
aas
pop
mov
push
jl
mov
mov
adc
jg
lret
xchg
mov
cwtl
cwtl
out
jle
mov
jae
jg
xchg
jg
lea
sub
aad
dec
xchg
push
hlt
fwait
lock
in
out
outsb
orb
adcb
fstpl
fstpt
loopne
adc
sbb
cmp
dec
cmpsb
lock
hlt
scas
in
fs
adc
lret
popa
int
rcrb
out
call
fbstp
fmulp
add
fnstcw
mov
pop
ja
jmp
push
dec
scas
and
and
pop
lcall
sub
push
or
js
sti
pop
iret
lret
and
loope
sub
loope
xor
cmc
xor
loope,pt
rorl
js
stos
inc
pop
mov
push
lods
cmc
enter
adc
shlb
mov
inc
mov
call
fnstenv
adc
or
test
ret
and
ljmp
ljmp
inc
pop
call
sub
sub
or
or
imul
in
pop
mov
arpl
cmp
cli
jne
dec
sub
mov
fisttpll
cs
push
push
insl
loope
dec
stos
cmp
jle
sub
jge
bound
stc
adc
ret
mull
cmpsb
in
ja
or
inc
mov
jae
mov
sbb
lret
adc
test
and
mov
out
sbb
in
fmulp
cwtl
fildl
xchg
sub
cmc
add
adc
pop
lret
xchg
add
or
in
test
data16
inc
jp
push
sub
sti
xchg
sbb
mov
aaa
andb
call
or
movsl
mov
xor
ss
pop
xor
pop
out
call
xorl
pop
idivb
mov
mov
pushf
add
adc
fcoms
cmpsl
jo
imul
lret
and
jmp
sub
jp
int
pop
clc
dec
xchg
fs
addr16
std
lock
pusha
mov
scas
jo
mov
cld
mov
or
mov
scas
and
sub
sahf
add
mov
push
and
jae
in
push
push
js
jnp
jnp
subl
test
pop
rcrl
add
xchg
cmp
mov
sub
dec
add
call
push
fldcw
bound
mov
inc
int3
cmp
xchg
je
psrad
mov
test
das
sbb
insb
sbb
fcoms
sarb
insl
xchg
mov
mov
adc
andb
push
pop
aaa
dec
dec
ret
pop
jnp
push
xchg
out
pop
loop
inc
cmpsb
inc
and
stos
dec
frstor
sub
and
or
aaa
subl
adc
inc
fsubl
pop
xchg
std
lret
jmp
mov
cmpsb
dec
testl
es
out
js
fldpi
stc
cltd
jne
stc
pop
xor
scas
insl
xchg
add
cmp
test
outsl
pop
in
adc
push
mov
inc
jecxz
lahf
adc
inc
rcrl
pop
mov
mov
lret
lret
pusha
push
fsubrp
mov
and
lods
sub
push
inc
adc
in
test
ficompl
enter
jl
mov
cmpb
pop
and
ja
cld
xchg
repnz
dec
cwtl
movsl
mov
push
jns
and
inc
imul
lret
xchg
movsl
and
lods
jae
fsubrl
scas
out
movsl
sbb
into
pavgb
stos
outsl
icebp
add
dec
xchg
push
jmp
out
sub
xchg
popa
out
xchg
mov
mov
jbe
stos
mov
aam
aas
push
mov
pop
cmc
es
in
cltd
inc
jl
add
push
and
js
sti
mov
sub
jecxz
mov
jb
mov
cmp
push
lods
jne
jnp
xlat
xchg
sub
jge
stc
scas
jo
jb
cwtl
lods
loope
stc
popf
mov
cmpsl
jmp
xchg
fildl
rolb
cltd
mov
lret
jne
dec
xor
stos
sbb
dec
movsb
pop
leave
fdivs
icebp
sub
add
decl
pop
sti
jmp
xor
push
add
out
or
cltd
inc
arpl
dec
imul
push
jbe
mov
xor
pop
in
sbb
push
and
popf
xchg
outsb
std
xor
popf
cmp
in
test
test
sub
lret
fnstsw
shrl
jnp
jbe
jns
inc
jmp
jne
jmp
dec
int3
es
sbb
shrb
jg
xor
jbe
and
push
or
dec
adc
cmpsb
sub
div
sti
jg
popa
orl
adcl
roll
jo
xlat
xchg
adc
fiadds
xchg
add
or
sub
jge
sub
xchg
popa
clc
and
xor
push
addr16
inc
lods
loop,pn
mov
xor
xlat
faddl
sub
push
and
dec
fidivrl
lods
iret
stc
adc
fildl
scas
pop
jmp
xor
jnp
les
stos
mov
out
mov
stos
xor
push
fimuls
in
int3
sub
push
cmpsb
inc
push
lods
sti
jbe
scas
int3
push
jne
add
sbb
imul
fsubrl
or
in
divl
cs
enter
jns
push
adc
xor
mov
shll
lcall
cmp
je
outsl
mov
je
xchg
fwait
xchg
and
icebp
pop
mov
jge
push
push
or
ja
push
decl
icebp
sbb
aam
stos
insb
mov
dec
cmc
movsb
lret
dec
adc
sbb
inc
add
add
xchg
inc
dec
mov
mov
dec
es
jecxz
xor
shlb
push
jbe
cmp
jae
xchg
subb
jne
xor
out
jmp
jmp
mov
dec
cmc
popf
sahf
push
dec
fstpl
jg
mov
xchg
ja
adc
cmp
mov
fidivs
mov
repz
stos
outsb
loope
out
pushf
and
dec
ljmp
add
inc
pusha
cmpsb
repnz
pop
repz
add
xchg
or
mov
cmc
pop
imul
je
xchg
mov
leave
jno
pop
inc
fnstenv
aam
jge
push
in
jl
jne
lahf
lock
pop
scas
adc
mov
and
in
dec
cmp
sub
xor
push
mov
jecxz
push
shrl
ljmp
push
push
out
adcb
sub
sarl
sbb
mov
pop
daa
jg
hlt
mov
jp
jge
aam
jp
cwtl
out
fs
mov
shl
js
push
ret
add
les
jno
ljmp
push
inc
test
das
das
xor
sub
std
push
ljmp
jno
das
cld
sub
sbb
arpl
inc
push
mov
push
stos
xor
leave
lret
xchg
push
xor
dec
bound
dec
cmc
arpl
sub
les
shrb
mov
push
imul
std
clc
ja
subl
sbbb
or
push
mov
or
cmp
mov
pushf
sbb
push
outsl
push
and
adc
scas
and
or
push
stc
push
adcl
fbstp
imul
xor
dec
leave
movsl
cld
sub
lcall
or
and
xchg
jecxz
pop
adc
cmp
pop
idiv
mov
sub
push
mov
add
dec
icebp
cltd
dec
add
mov
outsb
and
inc
inc
pop
inc
add
mov
inc
out
cmp
ljmp
jb
xchg
jno
out
pushf
setg
das
adc
adcl
xchg
jbe
cmp
mov
aaa
jecxz
xor
iret
inc
xor
mov
inc
pushf
ljmp
fnstenv
ja
mov
push
pusha
or
ret
hlt
fcomps
add
push
or
or
rcrl
ja
aaa
inc
mov
push
icebp
ss
push
dec
mov
mov
pop
push
push
mov
pop
mov
mov
jge
add
adcb
pop
adc
mov
dec
add
filds
inc
pop
jmp
in
push
jbe
int3
mov
call
movsb
xchg
mov
loope
xchg
pushf
and
adc
arpl
xor
mov
bound
cmp
xchg
adc
loopne
mov
mov
or
das
mov
sub
jge
outsl
ret
or
inc
in
stc
loopw
add
mov
popa
mov
ficompl
sar
call
into
sbb
jne
scas
jno
push
cltd
xchg
xchg
ljmp
out
aas
sbb
mov
sbb
insb
xchg
jo
mov
dec
inc
lahf
cmc
or
inc
cmc
jnp
test
nop
pusha
aaa
mov
push
hlt
xchg
mov
or
pusha
int
adc
inc
lret
push
push
out
sub
pusha
mov
es
lret
fisttpll
push
mov
sub
testb
movsl
adc
test
and
xor
push
scas
sub
and
inc
iret
dec
dec
out
js
cmp
test
mov
sub
lods
mov
dec
add
je
ljmp
cmp
inc
sub
sahf
dec
mov
outsb
add
testl
sbbl
ljmp
sub
cmp
lret
cmp
es
jns
xor
in
orl
bound
jno
leave
push
repz
pop
fists
cmpl
pop
rorb
cltd
iret
cli
into
push
push
nop
pop
push
pop
jnp
popf
scas
rcrl
lock
and
pop
daa
and
mov
and
imul
notl
test
int
hlt
int3
arpl
daa
ljmp
push
stc
adc
jl
fldt
dec
sti
testb
ljmp
movsl
in
add
jnp
dec
add
pusha
fdivl
jmp
push
cmp
and
mov
stos
shrb
inc
xchg
sub
and
scas
sub
dec
and
dec
mov
push
xor
dec
mov
lods
mov
xchg
sar
jp
rcll
push
push
push
fnstenv
xchg
sub
push
rcrb
lret
aaa
mov
sbb
fcompl
mov
cmc
pop
push
pop
cmp
add
out
cli
ds
mov
insl
psubsw
push
xchg
jns
out
cmpsl
stc
inc
icebp
lahf
sub
sub
push
inc
push
mov
mov
stc
push
sbb
pop
xor
inc
push
fsts
jb
sub
push
mov
imul
aam
cwtl
xchg
jnp
lods
fcomps
mov
fcoml
pop
jle
xor
sub
in
cmpl
push
popf
jo
sub
adc
sbb
jno
test
adc
fldpi
subb
lds
mov
push
mov
lahf
push
in
jns
mov
in
iret
data16
movsb
add
mov
mov
fstpl
cltd
mov
jle
test
fnstenv
aaa
iret
inc
gs
out
in
call
xchg
shrb
lea
dec
pop
mov
xchg
jb
jbe
inc
fucomi
adc
cmpb
mov
je
mov
mov
cmp
rol
xchg
ljmp
es
and
aam
mov
lock
adc
pushf
pushf
scas
cli
mov
jg
cli
jecxz
ret
xchg
addr16
adc
ja
add
lahf
scas
loope
outsb
mov
fstpt
iret
scas
call
push
push
movsl
nop
mov
mov
in
push
mov
fdivs
adcl
adcb
sbb
mov
dec
push
and
je
les
out
dec
scas
jmp
sti
xchg
mov
fdivrs
mov
out
xchg
jle
jmp
jp
or
mov
in
incl
xor
xsha1
cmpsb
into
inc
sbb
test
out
push
jl
mov
arpl
std
pop
or
or
sub
pop
xchg
ret
mov
insb
adc
cmc
cmp
js
sub
shl
jge
dec
pop
xor
add
addr16
pusha
or
in
xor
outsb
sub
stc
ret
les
mov
repz
or
dec
out
jle
lret
sub
fwait
and
pop
dec
and
add
mov
push
jecxz
repnz
stc
and
sbb
jecxz
push
arpl
and
mov
fwait
jge
nop
andl
cmpb
dec
pop
push
fbstp
push
testl
mov
iret
daa
mov
push
sbbb
xchg
xchg
or
push
cmpsb
aad
lahf
mov
mov
push
rcrb
repnz
rcll
cld
in
testl
sub
ss
ljmp
adcl
in
rolb
inc
or
xor
imul
xchg
in
mov
jmp
pop
or
push
pop
mov
adc
out
mov
xchg
test
mov
out
or
mov
loop
mov
arpl
repz
popf
lds
sub
hlt
xchg
add
aad
cmc
adc
arpl
jns
aas
push
es
xchg
lea
sub
mov
repz
out
pop
mov
mov
cmpsb
xchg
repz
adc
mov
xchg
gs
sar
sarl
frstor
mov
push
mov
xchg
xchg
push
popf
or
mov
hlt
out
rcl
repnz
sub
mov
inc
jb
jnp
imul
rolb
cmpsl
outsl
mov
lds
nop
and
divb
pop
lcall
adc
cmpsl
xchg
jge
inc
sti
jbe
call
cld
insb
ret
pop
or
dec
cs
in
loope
mov
sbb
jno
pop
fldcw
push
mov
movsl
cmp
in
sbb
insb
nop
imulb
or
cli
movsb
add
aad
fbld
jno
mov
sub
fs
sahf
jl
mov
scas
es
aam
cmp
pusha
mov
pop
push
es
push
insl
mov
pushf
jmp
mov
sbb
sub
xrelease
add
adc
pop
sbb
scas
and
addl
fidivrs
push
adc
fsubrs
sub
jns
pop
cmp
push
mov
inc
shlb
int
int
cmp
mov
or
jmp
push
outsl
int3
out
xor
add
lods
jo
psubw
std
inc
je,pn
mov
fists
mov
rcrb
fwait
adc
inc
fidivl
cmp
cmp
jmp
push
pop
adc
cltd
and
xchg
sub
add
mov
inc
ljmp
dec
mov
lods
dec
imull
jbe
fstps
xchg
lcall
dec
std
mov
fwait
xor
add
cmp
xchg
jp
mov
fst
and
sub
movsb
repnz
mov
jmp
jno
in
andb
loop
mov
cmp
fcmovb
add
das
adc
sbb
lret
sarb
addr16
pop
outsl
bound
adc
add
xchg
dec
movsb
pop
adc
shrb
lods
pop
jno
daa
out
cmpsl
or
pop
xchg
xchg
cmc
js
mov
mov
fidivrs
push
or
aaa
mov
cwtl
jge
push
es
paddb
push
pushf
sub
xor
gs
jle
push
xchg
outsb
lods
dec
xchg
ja
dec
cmc
mov
adc
jg
scas
out
jne
fcompl
inc
cmp
rol
mov
ljmp
outsb
jg
push
arpl
sbb
fmull
or
ret
int3
xor
lock
fsubs
scas
xor
mov
lods
out
test
rcrl
push
add
xor
gs
lea
inc
call
shrl
shrb
mulb
dec
ficoms
xchg
dec
pop
and
je
frstor
cmpsb
mov
pop
mov
sbb
sahf
loope
dec
loop
pop
bound
mov
push
sub
ror
out
inc
sahf
sub
iret
and
push
leave
lods
insb
add
add
ljmp
sbb
cmpsl
inc
lods
xchg
mov
or
xor
cmp
test
andl
inc
sbb
cmp
add
push
xchg
jo
dec
xor
jns
sti
cmp
pop
stos
inc
push
test
cld
leave
push
addr16
lds
mov
pop
or
sub
aas
ret
fwait
and
push
popf
and
xor
inc
dec
jo
jg
ss
xchg
and
mov
pop
lock
xchg
es
sbb
mov
mov
andb
mov
mov
pop
dec
and
sti
jne
shrl
push
pushf
jmp
fdivp
out
push
shlb
or
cmp
sarb
cmp
ljmp
dec
into
stos
jbe
in
cmp
push
cs
adc
jbe
jp
loopne
std
lods
clc
hlt
cwtl
pop
fs
ss
mov
fisubrl
adcl
lds
cltd
in
mov
jo
xor
lret
xchg
lods
inc
xchg
es
sub
in
push
pop
lods
add
cmpb
stc
sbb
inc
dec
jl
xor
lret
and
call
lret
jb
mov
imul
jle
mov
inc
sbb
and
mov
xchg
cmc
js
mov
shl
jo
repnz
loopne,pn
xlat
pushf
dec
jmp
dec
mov
call
imul
pop
scas
dec
inc
adc
pop
loope
adc
jnp
mov
into
jo
mov
stc
popf
jno
inc
cli
fwait
repz
popf
cmpb
adc
test
lock
xor
adc
add
mov
xchg
inc
popa
in
or
jnp
add
adc
jge
sbb
ret
fwait
icebp
mov
mov
mov
push
mov
inc
xchg
adc
ret
and
jne
icebp
xor
and
into
fnstenv
incl
cmp
dec
pop
mov
jo
cmc
mov
in
inc
mov
insl
aas
add
sbb
mov
lock
and
mov
lahf
xchg
inc
stos
sarl
inc
clc
sub
inc
addr16
cwtl
bound
aad
out
xor
jl
push
sub
popa
jnp
dec
inc
sahf
sub
ret
std
lock
int3
fnsave
xchg
add
pop
xchg
mov
xchg
fs
sub
subl
mov
dec
fdivrs
pop
pop
mov
movsl
stc
jge
and
or
xchg
fwait
xor
push
pop
mov
pop
push
les
push
repnz
dec
push
ret
adc
cmp
cwtl
jnp
push
cwtl
test
xor
pop
nop
add
shll
subl
mov
mov
xchg
pop
mov
or
add
pop
inc
adc
push
daa
mov
aas
push
xorb
jb
fldcw
and
pusha
fsubrl
lret
cwtl
std
popl
ss
xor
rorl
fcmovbe
mov
out
lock
inc
pop
call
mov
out
mov
idivl
or
mov
insl
insl
dec
dec
mov
push
add
and
mov
stos
fidivrl
icebp
movsl
call
dec
sbb
jge
adc
xchg
or
push
inc
bound
sbb
inc
addr16
mov
lods
dec
mov
lock
jl
xor
mov
into
aam
add
push
jb
jp
cmpsl
stos
daa
in
bound
mov
mov
sbb
mov
lock
mov
test
xchg
in
push
or
scas
int
adc
mov
test
mov
add
push
lods
inc
sbb
mov
inc
xor
aaa
inc
inc
cmp
rcll
je
loop
fcomp
xchg
sti
loop
jbe
inc
rcrb
or
repnz
cwtl
mov
cmpsl
fwait
dec
call
or
add
aaa
push
ret
dec
mov
ds
arpl
aas
lds
dec
aad
popa
mov
fldl2e
call
pusha
cld
push
lret
and
pop
mov
pop
bnd
xor
push
push
scas
xorl
call
clc
jmp
sti
jle
sub
cmp
jo
outsl
lret
loope
stc
mov
pop
pop
mov
mov
push
sbb
adc
aad
shrb
inc
sbb
iret
dec
lret
xor
bound
insb
test
push
iret
xor
push
push
adc
lret
or
mov
and
mov
xor
mov
mov
mov
dec
iret
pop
cli
dec
in
cmpl
push
fdivrl
mov
mov
icebp
sbb
cmpb
mov
aam
mov
clc
stos
mov
xor
mov
subb
xchg
cs
xchg
sub
and
mov
loop,pt
mov
popf
mov
leave
pop
test
mov
aam
adc
shlb
rep
adcl
in
push
lret
cld
js
stc
lea
daa
ror
xor
repz
test
and
idiv
pop
ds
dec
sbb
adc
cwtl
xchg
pushf
test
mov
je
mov
inc
fildl
nop
bound
pop
ljmp
add
ds
mov
xlat
xchg
inc
ficomps
cmp
mov
bt
inc
sbb
enter
adc
in
inc
cmp
inc
fdivl
or
js
out
aas
push
ds
cmp
or
cmp
ds
shrb
leave
cltd
int3
sbb
insb
add
adc
pop
loop
push
fwait
jle
push
jb
inc
loopne
sbb
int3
shll
or
fst
or
in
daa
adc
pop
jbe
fmuls
or
out
aad
push
rcl
inc
bound
pop
iret
lahf
push
pop
push
lcall
outsl
adc
jne
hlt
cmp
lods
lods
inc
sub
dec
mov
dec
int
jp
das
fadds
jmp
imul
mov
vmaxss
dec
push
ds
fwait
sarl
test
sub
decl
mull
inc
arpl
rcrb
in
pop
insb
xchg
out
hlt
sbb
jnp
out
add
xor
fildll
in
push
push
fwait
push
mov
das
inc
ljmp
fwait
sbb
out
sbb
pop
imul
jno
inc
pop
stos
sbb
sbb
scas
lcall
out
clc
repz
mov
add
push
dec
xchg
lods
inc
addr16
push
gs
insl
jg
add
adc
lods
in
add
gs
add
repnz
add
xchg
xchg
scas
in
das
jg
add
sbbb
mov
test
mov
pop
shll
sub
add
inc
shl
ds
call
adc
mov
fchs
and
jb
mov
mov
push
cs
and
adc
adc
mov
jl
adc
xlat
lods
fstps
rcrb
sti
es
in
inc
mov
nop
loopne
dec
add
mov
sbb
pop
aad
mov
les
adc
pop
xchg
cmp
pop
lock
xorl
and
jb
jo
xchg
pushf
pop
addr16
adc
jp
mov
push
jne
pop
xor
push
xchg
mov
dec
lea
pop
scas
or
scas
push
ja
mov
les
andl
pop
cwtl
pop
lahf
rcrb
mov
dec
cmp
arpl
imul
shl
xor
lods
test
and
push
js
outsl
daa
jnp
sahf
lahf
outsb
pusha
inc
pop
icebp
push
inc
sbb
lods
iret
or
push
fnsave
cmpsb
lock
movsl
movsl
jl
mov
addb
jb
xor
insl
dec
inc
stos
inc
sbbb
cmp
mov
decl
push
iret
jge
out
mov
push
in
xchg
fdivrl
xchg
mov
mov
mov
cmp
out
add
push
ss
xchg
dec
insl
jle
stos
and
popf
js
push
push
pop
movsb
xor
push
or
pop
xor
stos
mov
mov
adc
mov
xlat
jmp
fsubrs
pop
and
pop
imul
pop
fwait
stos
in
stos
lea
inc
dec
aaa
sti
nop
aad
inc
leave
in
jne
push
in
xchg
cs
in
test
sarl
dec
pop
or
int3
mov
filds
test
xlat
daa
push
cmp
xchg
mov
cld
sub
in
cmpsl
dec
subl
insl
aad
js
loopne
jns
mov
inc
push
xchg
inc
addr16
push
and
adc
daa
inc
and
push
inc
jle
push
mov
adc
jbe
add
arpl
addr16
pop
cmpsb
outsb
rcrl
je
mov
pushf
adc
das
std
inc
std
jg
or
mov
push
pop
ljmp
ljmp
sbb
xchg
jnp
adc
cltd
insl
int3
fistl
xor
push
rclb
mov
inc
mov
xor
ja
aad
or
popa
fsts
mov
jp
cmc
arpl
outsb
inc
popa
mov
imul
sahf
and
fs
sbbl
pushf
out
cmp
rol
mov
test
sub
mov
movsl
ret
hlt
ret
sbb
ss
or
sbbb
clc
out
xor
ret
sub
mov
popf
sub
push
push
fidivl
inc
roll
dec
add
push
inc
jb
jo
dec
sbb
sbb
rcrl
mov
xchg
pusha
cltd
push
inc
mov
orb
imull
mov
shll
add
loope
daa
push
mov
push
xchg
xor
push
rclb
xor
arpl
loope
cmp
fcomps
aam
sbb
xlat
adc
sub
adc
mov
mov
jae
fs
xchg
cs
ficoms
aaa
into
mov
pop
xor
push
sub
sbbl
cmc
ss
dec
ret
push
jbe
shll
push
ljmp
and
cwtl
and
ja
cmp
mov
push
gs
mov
adc
push
shrl
mull
mov
fadd
inc
dec
sbbb
inc
inc
jecxz
pop
out
push
inc
test
xor
jmp
fwait
cld
movsb
je
fwait
cwtl
push
inc
cwtl
xchg
add
mov
or
lds
xchg
sbb
vmaxpd
cmp
insl
jge
pop
outsb
mov
fimull
iret
xor
push
data16
repnz
mov
push
dec
stos
sub
in
ds
orb
mov
pop
test
and
lods
mov
andl
insb
popa
repz
adc
out
or
imul
aaa
je
sbb
fstpl
mov
leave
mov
stc
lock
je
sbb
stc
add
jg
fs
cld
imul
orb
data16
sbb
fwait
jbe
icebp
in
sbb
cli
into
adc
pop
add
pop
lea
or
pushf
out
jae
xchg
aaa
sahf
idiv
loop
int
cltd
popl
add
adc
ror
push
sbb
pop
lret
popa
sbb
add
jae
in
jo
lret
bound
mov
inc
push
adc
push
dec
gs
lock
inc
imul
fisttpll
sub
adc
sbb
lcall
and
inc
mov
loopne
clc
adc
ret
in
xchg
sub
iret
sub
inc
add
int
movsl
dec
jno
in
dec
mov
lods
and
mov
shrb
pop
and
xor
xor
inc
fwait
xor
and
sahf
inc
stc
add
rol
jno
and
mov
xchg
loop
ret
xchg
jae
dec
or
loope
pop
mov
stc
or
dec
inc
arpl
dec
mov
mov
daa
nop
inc
jle
nop
daa
lods
imul
out
add
outsl
pushf
adc
into
ljmp
push
lock
push
xchg
out
popf
in
rcrl
xchg
push
mov
adc
stos
inc
movsb
pop
lret
outsb
jnp
or
dec
mov
inc
add
cmpsb
xchg
or
adc
insb
out
subl
cwtl
mov
arpl
pop
xlat
enter
mov
jle
cli
fcmove
add
fdivrl
add
int3
xchg
or
insl
push
jnp
sub
adc
mov
outsl
push
loop
lock
notb
jl
ret
cli
fiaddl
mov
outsl
addr16
sarl
cmp
insb
les
lahf
sub
call
lea
pop
lret
pop
lahf
inc
pop
nop
jae
xor
xchg
ss
push
shrl
cmpsb
mov
xor
pop
loopne
fisubrs
int
cltd
jbe
inc
mov
dec
sbb
ss
repnz
outsb
push
pop
dec
stos
testb
add
xor
pop
inc
sbb
pop
in
ss
push
mov
test
dec
ret
out
popa
adc
jmp
int3
dec
les
push
rclb
ja
sub
jnp
xor
jb
lcall
jmp
arpl
cmp
inc
cld
popa
cs
leave
push
das
je
pop
jmp
ljmp
test
sbb
ret
rol
add
mov
rolb
leave
xor
xor
inc
fcoml
mov
jg
stos
orl
mov
repz
pop
inc
out
mov
hlt
pop
cmpsl
insl
inc
pop
lcall
fs
int3
xchg
mov
outsb
popf
lods
stos
cmp
xchg
sbb
fsubrl
push
pushf
dec
pop
ss
adc
hlt
mov
add
cmp
cmp
pop
repz
hlt
cltd
or
out
into
sub
std
scas
cs
mov
cltd
stos
or
push
sbb
sub
faddp
enter
stc
shll
lea
in
scas
or
mov
sbb
adcl
xchg
movsb
dec
lods
xchg
cmp
clc
cltd
jno
add
loop
sar
addr16
ficoml
cmp
dec
dec
ret
mov
loop
fidivl
jl
clc
or
push
dec
jecxz
mov
lods
inc
push
mov
andl
inc
cld
sub
movsb
pusha
push
xchg
mov
or
dec
mov
les
aas
ja
ret
stos
mov
outsb
mov
les
and
sbb
rcrl
in
xchg
adc
shl
jo
sbb
mov
fmull
dec
push
sbb
ss
dec
pop
pop
bound
push
pop
adc
lahf
xchg
rol
inc
pop
repz
pop
push
mov
cvttps2pi
ret
jp
test
dec
int
subb
ss
sbb
int
aas
mov
in
loop
rcrb
shrl
mov
and
repnz
push
sti
shl
loop
fs
jo
rolb
push
insb
push
mov
bound
adc
dec
sbb
xchg
xchg
mov
fcoms
xchg
mov
xor
mov
push
lcall
movsb
jns
pop
push
jbe
ljmp
enter
test
mov
icebp
mov
scas
test
mov
dec
movsb
orl
sbb
stos
and
xor
loopne
lahf
pop
out
movsl
cmpsb
ds
ljmp
sbbl
cmp
or
in
in
jbe
iret
pop
movsb
jne
mov
sub
sub
dec
hlt
pop
mov
jecxz
sbb
push
and
int
mov
sub
cltd
push
call
jmp
add
xchg
cmpsb
mov
aad
sub
test
pusha
ss
bound
mov
xchg
and
inc
stc
adc
adc
xchg
mov
fsubs
mov
xchg
or
imul
test
sbb
mov
fcomp
jno
fldz
ret
cli
loope,pt
cmp
insb
sub
mov
int3
shrb
push
jmp
jp
or
add
cli
mov
sbb
std
xor
mov
pop
setg
xor
js
das
dec
ficomps
jns
ret
mov
out
mov
push
movsl
mov
jno
aam
cld
nop
mov
inc
fsub
mov
pusha
imul
decb
mov
add
jp
movsb
ljmp
mov
das
jmp
dec
pop
rcr
data16
scas
or
shlb
test
fisubrl
sti
adc
out
vpsllw
loop
push
ljmp
cmp
lret
lock
sbb
arpl
js
push
cltd
scas
subl
mov
jecxz
mov
mov
and
inc
mov
jnp
loope
pop
or
xchg
sub
push
mov
in
test
or
mov
sub
adc
xchg
dec
outsb
or
stc
test
jb
shrb
or
xor
ja
xor
jg
outsb
add
cmp
cvtdq2ps
jl
jmp
sbb
mov
jne
loopne
add
mov
xchg
adc
sbbl
xor
movsb
leave
ret
pop
sti
add
mov
cmp
cs
aas
push
mov
adc
shll
push
int3
pop
mov
ret
jbe
mov
add
mov
push
ret
sub
xor
sub
jne
inc
pop
scas
inc
dec
jge
jle
jb
outsb
lcall
mov
shr
lods
pop
sub
pop
jl
add
cmp
test
scas
test
icebp
rorb
adc
pushf
cmp
jmp
inc
loope
push
in
ss
subb
je
ja
das
loopne
cwtl
int3
pop
mov
push
idivb
repnz
out
pop
jmp
mov
sti
mov
pushf
mov
jg
mov
push
xlat
out
push
js
xchg
popf
or
outsl
jnp
or
pusha
add
or
out
pop
lock
dec
or
arpl
aam
dec
gs
mov
or
cmp
jo
jecxz
idivb
jae
andb
out
xor
sbb
xchg
mov
sub
jnp
shr
add
shrl
xchg
dec
mov
add
xchg
adc
jb
xchg
push
test
pop
arpl
int
insb
push
cmp
cld
sub
add
enter
test
cmc
loopew
mov
popf
jmp
jl
mov
jo
push
mov
sbb
pop
or
and
mov
ss
imul
fbld
mov
pop
xor
clc
sahf
adc
int3
adc
repz
ds
imull
stc
adc
dec
iret
fstpt
pop
sub
mov
sti
jne
add
mov
push
push
push
and
jge
mov
fstps
jle
lret
mov
mov
mov
add
ds
cwtl
out
movsb
sub
mov
out
enter
imul
fwait
in
out
cmpsb
cmp
jne
les
flds
lods
scas
push
sub
iret
sbb
sub
dec
insb
lahf
adc
jbe
sub
jae
imul
sub
jbe
xor
inc
mov
std
sub
stos
jl
out
dec
aas
test
loope
inc
hlt
mov
ds
jecxz
imul
add
or
pop
rcrb
xor
fimull
sub
pop
xchg
stos
push
push
cmp
add
sbb
pop
mov
adc
xchg
mov
fcompl
cmp
aas
popf
mov
xchg
jnp
adc
sahf
pop
cmp
imul
cmpsl
inc
cmpsl
lds
sbb
xlat
xchg
or
jo
cltd
das
mov
push
sahf
cmpsl
cmpsl
mov
mov
fwait
push
jp
lock
mov
aad
cmp
movsb
inc
les
sub
jle
jb
mov
frstor
adcb
add
jo
push
stc
sbb
movsl
sub
in
rcl
push
and
push
imul
push
mov
insl
fwait
ljmp
push
cmpsl
mov
sbb
loopne
imul
das
xchg
adc
mov
adc
mov
aaa
mov
push
insb
pop
aam
loope
rol
aas
mov
mov
xorb
pop
bound
or
cmp
insl
enter
adc
fcmovb
jle
popa
sub
xchg
lods
cmp
movsl
push
xor
or
clc
xor
int3
arpl
pop
jg
sub
shrl
insb
testb
cmp
insl
mov
sbb
call
dec
pop
cli
mov
mov
and
add
cli
mov
pushf
aam
cltd
cmpb
or
dec
mov
xchg
adc
scas
in
stos
pop
loop
lea
jae
inc
sub
add
fstl
jle
aad
push
push
test
mov
scas
pop
sub
cmpsb
sti
aad
inc
and
push
data16
fistps
addr16
dec
or
and
sti
mov
shrb
pushf
or
jp
sub
adc
sbb
mov
adc
es
sarb
xorl
arpl
cwtl
adc
inc
jnp
cs
movsl
jge
rcrl
ljmp
jae
inc
test
dec
call
lods
mulb
lods
cltd
test
lcall
add
mov
ret
in
fcmovne
mov
ficoml
faddl
into
and
cmp
sub
inc
push
cmp
into
cwtl
mov
mov
inc
mov
fwait
cld
or
adc
and
lret
fstpt
gs
fwait
push
xchg
inc
push
cmp
mov
aas
pop
pusha
mov
dec
aam
scas
adc
bound
push
fbstp
jbe
push
mov
mov
sahf
mov
inc
out
xor
pushf
lods
adc
push
mov
push
xor
lcall
cmp
pop
mov
dec
mov
test
je
addr16
dec
push
mov
data16
adc
aas
dec
and
sahf
pushf
into
in
ja
adc
and
scas
fdivl
into
cmp
test
test
das
int3
arpl
ds
jle
ljmp
lahf
jnp
rorl
das
jne
cmpsl
push
shrb
nop
into
mov
inc
add
std
les
jae
jp
ja
lcall
sahf
clc
xor
push
stos
cmpsl
adc
push
sub
enter
mov
pop
jns
int
cld
arpl
jecxz
dec
push
mov
int
insl
data16
cs
mov
jecxz
sub
or
mov
dec
decl
loope
mov
imul
mov
add
jmp
adc
push
sbb
mov
and
jg
in
push
jl
into
xchg
xchg
inc
adc
push
movsl
push
fwait
jmp
push
imulb
popf
pop
pusha
pop
sbb
outsb
repz
cmpb
hlt
aad
add
adc
sub
das
mov
adc
or
dec
in
fiaddl
jp
add
test
jge
inc
stos
jmp
jbe
loopne
add
xchg
divb
fidivrl
imul
js
sub
xchg
add
mov
das
inc
sbb
aad
nop
or
jmp
jp
mov
mov
mov
out
jmp
movsb
fisttpll
mov
cmp
cwtl
dec
imull
jb
pop
mov
sar
xchg
pop
jle
adc
sbb
cmp
mov
inc
and
mov
lea
and
and
or
adc
stc
popa
xchg
sbb
mov
mov
sbbb
nop
jmp
cltd
cs
out
mov
cmp
ds
adc
out
popf
stc
mov
rcl
jp
add
mov
imul
aas
xchg
xchg
push
test
jp
xor
inc
jg
int
arpl
xchg
jo
mov
roll
leave
cmp
jg
jg
push
add
out
xchg
xor
movsb
fucom
mov
dec
stos
jle
pusha
imul
shlb
sbb
mov
ss
stos
out
add
adc
addr16
clc
imul
dec
fbld
sti
xchg
dec
dec
pop
mov
imul
popa
cmp
gs
imul
xchg
icebp
cmp
shrb
xor
test
in
shl
cmp
jns
clc
sub
je
das
aas
xor
loope
xor
jge
mov
mov
pop
and
fsts
cs
cmpsb
jecxz
lret
add
add
aaa
sub
fs
jp
addb
jne
sbb
ja
loop
out
adc
jne
jno
adc
out
mov
inc
loop
xchg
pop
jle
mov
xchg
js
jg
repz
repnz
sarl
es
std
jg
xor
f2xm1
icebp
pop
fbstp
fsubs
leave
sub
dec
push
jmp
xor
sbb
xor
jecxz
cli
mov
sub
test
addr16
sbb
iret
jp
cmp
add
lahf
int
or
cwtl
arpl
push
xchg
pop
pushf
rcrb
add
dec
sbbl
and
mov
mov
aaa
loope
inc
and
sbb
mov
fs
mov
dec
pop
fstpl
dec
hlt
arpl
lock
sbb
jbe
cmp
lods
jae
cmc
sub
pop
das
jge
pop
out
or
jbe,pn
or
or
lahf
es
push
shlb
hlt
aas
rcrl
xor
movsl
fidivs
mov
jmp
into
gs
jle
add
scas
addr16
or
or
fiaddl
or
cmpsl
and
cli
pop
insb
pop
sahf
jg
sbb
adcb
pop
mov
xchg
mov
sti
jl
leave
imul
pop
xchg
xchg
imul
push
mov
cld
or
lea
mov
ja
ss
repz
adc
test
jecxz
out
dec
test
stos
push
cmp
push
and
outsb
xchg
sbb
sbbl
push
mov
fimuls
dec
mov
mov
or
xchg
jle
lds
and
pop
push
bnd
inc
mov
lock
hlt
dec
fs
loop
lcall
jns
inc
mov
sub
dec
dec
jne
mov
lret
scas
lea
pop
iret
lods
push
jge
fmull
push
push
out
cltd
jmp
xor
xor
pop
roll
clc
rol
insl
sub
imul
xchg
dec
jecxz
in
push
loope
sub
sti
inc
pop
sub
rorb
stc
lcall
enter
loopne
sbb
loop
nop
cmp
lahf
and
xor
test
fsubrs
xor
add
mov
push
filds
popa
xor
in
enter
in
imul
mov
mov
mov
stc
icebp
mov
mov
inc
sub
push
insl
enter
insb
mov
gs
outsl
inc
xor
push
int3
rorl
sub
dec
dec
lods
movsl
in
enter
add
add
insb
repnz
popa
dec
lret
and
shrb
jge
stc
push
xchg
add
gs
inc
test
xchg
or
mov
subb
inc
xchg
adc
dec
dec
mov
test
mov
push
sahf
pop
xlat
movsl
inc
fdiv
push
mov
lods
es
adc
flds
jns
push
daa
in
call
insb
sub
bnd
sbbb
mov
loope
lds
dec
sub
or
loope
dec
addr16
mov
int3
cmpb
int3
xor
sbb
jo
inc
sahf
push
mov
aad
xor
fcomi
push
xor
lret
push
jbe
cmpsb
cmp
cmp
movsb
cltd
xlat
lret
fldenv
sub
or
les
push
jge
fwait
ja
jecxz
pop
test
add
or
pop
add
lea
dec
jecxz
call
in
mov
dec
push
add
mov
mov
dec
testl
pop
xchg
jecxz
xor
mov
loop
subb
stc
lds
adc
cmp
xchg
bound
repnz
ret
sti
cmp
in
loopw
inc
divb
adc
nop
mov
les
push
shll
dec
js
jns
aad
in
and
cmp
xlat
insl
lret
decl
mov
rorl
add
sbb
data16
fwait
xor
mov
inc
inc
stos
mov
daa
mov
add
loop
mov
dec
outsl
aam
xchg
and
pop
lock
sbb
cmp
loop
cltd
orb
mov
dec
mov
pop
jle
inc
int3
push
fisubl
or
mov
testl
inc
and
lods
cmp
adcl
in
xor
jmp
mov
cld
mov
loope
jp
into
aad
fwait
dec
mull
rcl
pop
insb
xchg
daa
and
adc
addl
add
imul
mov
and
push
stos
sub
movsl
xchg
aaa
sub
mov
inc
int
leave
cli
orl
leave
xchg
addr16
xchg
outsb
ja
adc
icebp
pop
mov
imul
testb
sub
mov
fisttpll
push
popa
jb
push
mov
nop
daa
lahf
jge
cmpsb
jno
xchg
mov
pop
shl
add
sub
jns
push
pop
mov
leave
dec
cmpl
jae
push
mov
add
data16
popa
push
inc
lret
jbe
inc
and
mov
popa
mov
sbb
add
daa
ss
rcr
adc
sub
or
xchg
mov
fs
xchg
inc
iret
in
xchg
pushf
jae
xchg
pop
loope
pop
jns
cmp
shrl
or
mov
jle
mov
mov
fcompl
in
push
jmp
mov
dec
pop
mov
gs
mov
out
mov
push
push
out
sbb
xchg
adc
ds
xchg
pop
in
mov
mulb
or
lahf
push
repz
ljmp
inc
lock
jnp
adc
rcr
shrb
sub
fidivl
adc
inc
cwtl
and
adc
sub
add
pop
dec
cmpsb
cmp
lock
les
enter
mov
imul
sub
inc
cltd
mov
pop
cli
xchg
push
mov
subb
sahf
xor
jl
jns
pop
popf
sahf
inc
jmp
and
into
push
stos
lds
das
push
movsl
pusha
push
jnp
dec
push
jp
mov
dec
dec
lcall
mov
lods
sbb
sub
ds
push
mov
scas
in
in
jns
cmp
mov
test
call
sbb
mov
push
xchg
inc
xor
push
shrl
gs
mov
and
popa
mov
ljmp
pushf
repz
fwait
jbe
hlt
push
mov
fcompp
xor
out
and
pusha
lcall
jo
lds
push
lret
aad
and
rcl
push
mov
xchg
jp
scas
out
cmp
shrl
xchg
sarb
push
aaa
add
mov
jne
pop
leave
cmp
inc
cwtl
pop
pop
jo
cmp
inc
jae
fldenv
mov
lret
out
aaa
pushf
pop
inc
fmul
test
mov
xchg
insb
lds
lea
add
pop
popa
iret
lret
xlat
inc
push
in
cmpsb
les
sub
loop
pop
cmp
add
sbb
xchg
outsb
add
insb
push
lea
imul
jg
adc
sbb
dec
icebp
jnp
mov
sbb
lock
xchg
adc
popf
fstl
pop
add
pushf
dec
lods
fists
sti
push
dec
repnz
jmp
bound
or
cltd
dec
cld
test
outsb
jmp
fwait
shlb
cmp
jne
sti
jg
es
xchg
dec
jb
cmp
mov
mov
aaa
stc
dec
sbb
pop
shr
mov
xchg
cs
mov
movsb
push
mov
mov
test
dec
mov
adc
popl
scas
adcb
loope
out
lock
mov
mov
adc
pop
movsb
jge
adc
icebp
mov
dec
daa
push
movsb
inc
movsb
or
cmp
add
or
dec
ja
dec
push
jl
ficoml
out
loope
cld
leave
fldcw
leave
test
cmp
or
aas
mov
cmpsb
dec
mov
lret
jmpw
jns
pop
push
mov
loopne
fdivs
cs
out
dec
icebp
in
mov
ret
mov
sub
adc
xlat
mov
mov
cs
adc
mov
lret
aaa
stc
xor
xchg
push
xor
shrb
inc
lret
lret
cmp
cmp
push
cmc
adcb
sbb
dec
je
jns
ret
push
sub
xorb
mov
inc
lods
pushf
jae
es
daa
and
push
mov
adc
lea
popf
jo
add
dec
ljmp
insl
and
jo
pop
sbb
pop
pop
sarb
popl
mov
sub
sbb
sbb
ret
fbstp
push
cwtl
push
je
mov
sahf
mov
inc
inc
pop
xor
push
pop
les
inc
fisubrs
mov
bound
add
inc
push
gs
scas
shrb
xor
add
sti
cmc
sbb
pushf
or
or
js
inc
sub
xchg
add
test
mov
mov
in
xchg
jle
add
leave
xchg
stos
cmp
jge
mov
dec
jmp
mov
int3
jnp
divb
adcl
cmp
add
pop
lret
mov
mov
jbe
scas
stc
pushf
test
adc
lock
das
jae
pop
icebp
add
or
outsl
pop
adc
insl
sub
xlat
mov
cmpsb
cmp
xlat
or
pop
mov
xchg
sub
jle
mov
push
xor
or
movsl
dec
lods
mov
test
xlat
lods
mov
flds
adcl
xchg
mov
inc
push
out
push
dec
das
mov
jns
stc
inc
push
fwait
rclb
sub
mov
imul
cmp
fnop
push
insl
add
sbb
movsl
fsubrs
add
icebp
cmp
push
mov
push
or
xchg
decl
xchg
xchg
fbstp
mov
and
stos
or
pop
pushf
adc
ds
std
dec
adc
push
test
fwait
lahf
outsl
jnp
xor
xor
dec
lds
scas
lcall
push
call
sbb
mov
shr
stos
dec
adc
pushl
sti
dec
or
jne
int3
sbb
loopne
mov
xor
mov
ret
xor
mov
cmp
pop
lods
cmpl
inc
mov
or
std
fidivl
int
ret
movb
stc
adc
decb
jl
cmp
pop
cmp
and
shrl
sub
push
pop
mov
negl
cmc
int
nop
inc
mov
test
push
pop
jmp
sub
xor
jmp
aaa
pop
popa
cli
and
stc
or
jo
ds
jo
sub
scas
pop
bndstx
js
jo
jno
shll
dec
loopne
rolb
in
loopne
aam
fs
cmc
out
shl
pop
hlt
and
push
mov
add
imul
movsl
jnp,pt
sahf
stos
mov
lock
mov
cli
in
push
ljmp
pushf
arpl
mov
adc
stos
outsb
inc
pop
jmp
or
push
cmp
jne
and
mov
mov
xchg
cltd
decl
daa
mov
add
stc
sub
push
adc
mov
mov
or
fstpt
mov
repz
push
push
rcll
inc
add
cwtl
data16
jns
enter
sub
push
cmc
pop
pop
cmc
dec
clc
aam
mov
insl
scas
cmp
subb
xlat
pop
jb
sbb
mov
aam
rorb
mov
scas
adc
arpl
push
mov
push
fs
out
incl
rol
cmp
in
or
leave
mov
imul
dec
dec
push
jg
sbb
lret
or
push
imul
and
adc
inc
inc
imul
rol
sub
rcrb
inc
sbb
fmuls
jg
xchg
fildl
cwtl
shr
enter
in
jmp
mov
sarb
pop
xchg
rol
cmp
mov
push
jb
pop
mov
inc
add
dec
mov
lods
inc
mov
push
push
ror
xchg
mov
loopne
cltd
mov
mov
mov
popa
cmp
addl
je
jp
mov
ret
shlb
imul
add
gs
andb
sahf
gs
fildl
in
es
and
or
dec
mov
adc
xchg
and
in
dec
dec
leave
aad
sub
inc
cmc
push
push
leave
js
test
add
rcll
lahf
mov
pop
aad
lcall
ds
adc
cmc
mov
test
xchg
pop
in
mov
imul
dec
aam
ljmp
loope
movsl
cmc
and
sahf
pop
mov
in
sub
mov
cltd
cmovae
mov
push
aaa
inc
jmp
jbe
in
and
call
dec
shrb
mov
and
jo
jno
rcr
pop
mov
dec
pop
insb
in
sarb
hlt
ljmp
cmp
or
pop
cli
cmp
mov
dec
dec
leave
jmp
aam
add
ds
mov
and
inc
outsl
repnz
nop
fimull
mov
loop
mov
sbb
dec
fnstsw
sub
cltd
push
xor
sub
enter
dec
fstps
push
push
loopne
fnstenv
sbb
outsl
inc
test
out
pop
cltd
pop
lret
xchg
mov
rcl
loopne
lods
xchg
dec
ja
testl
xor
inc
test
lret
and
or
adc
xor
jl
imul
inc
push
adc
in
xor
xchg
out
test
frstor
mov
cmp
mov
cmovae
and
movsl
icebp
mull
xchg
addr16
loopne
dec
adc
jno
and
in
or
dec
add
leave
cmp
gs
fcoms
insb
lods
jecxz
adc
in
aas
mov
dec
mov
psubb
inc
shlb
dec
xor
mov
outsb
int
cmp
orl
cli
es
xchg
lods
out
adcl
inc
scas
sub
mov
sub
xor
jne
inc
sbb
push
shrl
push
mov
iret
jmp
andl
sub
mov
jns
sub
insl
mov
mov
popa
mov
sub
mov
jbe
sahf
movsb
xchg
ss
in
andb
xchg
sbb
and
pop
inc
and
cmp
arpl
push
jae
sahf
pop
mov
mov
or
inc
xchg
jo
add
lahf
cmc
xchg
mov
sub
push
jo
mov
mov
aas
push
lods
sbb
lahf
push
xchg
sbb
dec
int3
pop
fistps
dec
jp
daa
jnp
shll
fwait
je
and
clc
sub
push
popf
les
aas
popa
and
fcompp
xchg
roll
roll
or
xchg
xchg
add
ds
gs
xchg
sbb
mov
stos
mov
pushf
pusha
test
dec
mov
call
jecxz
outsl
adc
pop
fstps
jnp
dec
pop
enter
mov
shlb
int
cmp
clc
jne
dec
iret
xchg
jb
cmp
jecxz
cli
xchg
cmc
or
xchg
jne
sbb
xchg
sbb
repnz
loopne
popf
sarb
xchg
pop
dec
dec
aas
shll
testl
pop
adc
dec
mov
adc
pop
xorl
cmp
mov
sub
mov
les
daa
jle
cltd
jo
sub
dec
mov
dec
rcrb
subb
js
into
push
mov
leave
push
mov
pop
outsl
daa
fs
pop
cmp
mov
dec
into
sub
or
cmpsb
xchg
pop
pop
dec
cld
inc
je
pop
out
addb
sub
mov
std
sbb
insl
or
movsl
pop
lahf
mov
idiv
push
outsb
sbb
loopne
xchg
icebp
pop
fxch
ss
inc
test
inc
adcb
arpl
enter
sbb
jno
pushf
stos
xchg
adc
repnz
or
mov
cwtl
jl
jns
stos
in
lds
lods
inc
xchg
std
inc
addl
jmp
in
icebp
mov
pop
shll
push
loopne
outsb
out
ds
dec
lds
push
inc
shl
notl
pop
repnz
hlt
repz
clc
sub
js
sbb
cmpsl
filds
out
aad
jecxz
divl
call
dec
das
jo
or
and
add
mov
jno
pop
fwait
test
xor
and
lock
sub
dec
in
rclb
cmp
js
mov
sbb
pop
in
fs
push
int3
mov
cwtl
test
in
cli
sbb
lea
mov
mov
xor
cmp
sbb
dec
xchg
ljmp
ljmp
cltd
inc
pusha
mov
sbb
mov
out
jge
mov
rcrb
add
lahf
ret
mov
sbb
mov
add
inc
adc
and
xlat
outsb
mov
push
mov
dec
adc
pushf
xchg
xor
jmp
and
jle
jg
icebp
adcb
sti
xchg
cmpsb
xchg
addr16
push
ljmp
or
add
out
test
test
sti
mov
or
imul
push
mov
outsb
std
into
bound
in
sbb
push
sub
or
test
mov
test
push
sbb
out
packsswb
pop
push
add
add
es
scas
cmp
sbb
in
jbe
or
mov
dec
stc
pop
mov
pminsw
dec
lahf
xchg
add
adc
pop
lret
pop
jnp
inc
cmp
stos
pop
lods
push
push
out
gs
sbb
outsb
mov
es
cmp
arpl
dec
jae
jmp
mov
cwtl
stos
add
out
inc
jge
test
sub
xor
xor
push
push
sub
test
inc
sbb
pushf
pop
sbb
mov
pop
insl
adcb
jp
and
stos
addr16
pop
adc
flds
incl
mov
push
push
cmp
jns
sbb
ret
lcall
fildll
inc
cltd
int3
aaa
mov
xor
push
add
push
push
add
fwait
ds
jp
dec
scas
adc
fwait
pop
nop
jge
jo
mov
mov
mov
mov
pusha
inc
fiaddl
cmp
jae
mov
mov
push
adc
and
sub
mov
loop
mov
je
rcrl
fistpll
sub
inc
imul
movsl
cmp
adc
loope
cmp
test
or
dec
xor
mov
es
popa
inc
lds
cmp
cmp
pop
aas
push
rorb
pop
ja
test
data16
and
xlat
cmp
in
mov
pop
push
fldenv
fwait
into
cld
daa
cmp
inc
mov
dec
in
sub
and
push
pop
jns
jle
inc
das
xlat
scas
mov
jl
jg
xchg
jns
pop
test
jecxz
clc
or
push
sub
lock
push
out
or
push
push
dec
sbb
fidivs
xor
pop
roll
push
nop
test
jae
or
ss
mov
sbb
sub
test
popa
ljmp
mov
jg
push
sub
mov
inc
test
pop
dec
fistpl
jg
cmp
xlat
cmc
outsb
jo
ret
sub
and
rorl
push
fcmovbe
sbb
inc
xchg
add
dec
mov
pop
movsl
jl
pop
mov
pop
add
fsubs
clc
dec
fidivrl
mov
daa
add
cmpsl
adc
inc
or
or
pop
repnz
mov
and
jae
adc
pop
jbe
shl
xchg
das
ljmp
mov
gs
mov
mov
xchg
xor
rolb
mov
dec
imul
fmull
pop
and
xchg
xor
sub
mov
sbb
add
pop
sub
leave
ss
push
mov
mov
mov
dec
and
ss
arpl
icebp
xchg
pop
mov
rcll
rcrl
jno
adc
ret
sub
or
dec
daa
push
mov
sub
adc
sub
bound
ret
out
loopne
icebp
sbb
cmp
cmp
jnp
xlat
mov
aaa
lcall
and
inc
in
or
out
lea
ss
mov
add
psrlw
test
jge
dec
sub
sbb
dec
loopne
outsl
jnp
pop
inc
addr16
test
xor
mov
and
push
popf
out
rcr
in
jge
add
sub
push
mov
popa
mov
add
popa
jecxz
and
in
nop
mov
stos
cs
jb
ja
rcll
ret
or
lods
stos
inc
and
fisttpl
icebp
mov
bound
aas
mov
lahf
push
mov
lds
mov
repz
add
push
faddp
aaa
pop
jle
out
cli
ret
xor
sub
mov
inc
push
fdivl
push
mov
sbb
lods
lahf
stos
fimuls
xchg
sbb
in
mov
mov
mulb
icebp
dec
divl
icebp
lea
js
push
bnd
adc
sub
pusha
mov
jecxz
pop
or
les
sbb
popa
lret
divb
mov
je
lahf
jo
in
adc
lcall
and
lret
fcoml
in
xor
mov
fisttps
xchg
cmpsl
jp
lret
lock
aaa
sbb
jl
fucom
jg
mov
addr16
push
ljmp
out
cld
hlt
fcoms
mov
mov
adc
sbb
push
pop
popa
or
cmp
xchg
in
sub
xlat
mov
push
xchg
push
jne
je
out
out
cld
cpuid
shlb
add
mov
inc
jne
outsl
sub
mov
xchg
rolb
ds
sub
mov
push
test
mov
mov
xchg
push
xor
fs
pop
sahf
aas
push
ret
ss
pop
mov
cmp
outsb
mov
cltd
les
pop
repz
mov
leave
out
jp
or
lret
xlat
push
test
ret
mov
enter
sub
ljmp
mov
sahf
sti
fwait
xchg
clc
fmul
movsb
call
iret
mov
mov
sbb
sub
xchg
jp
mov
call
or
popa
dec
enter
push
sub
jo
mov
test
outsl
inc
shll
cmp
in
test
clc
mov
xchg
ret
hlt
mov
cmp
ret
es
aaa
hlt
jge
pop
xor
mov
cmp
or
add
push
cmpsb
les
and
or
shl
rol
push
fbstp
lea
xchg
test
cmpsb
fnstcw
jp
out
pushf
subb
insb
neg
clc
pop
scas
sbbb
sub
cwtl
pop
dec
xor
pop
stos
adc
fildl
aas
movsb
xchg
adc
mov
icebp
stos
push
jge,pn
add
sahf
pop
sbb
push
inc
outsl
negb
inc
aas
xchg
es
std
xor
jl
loopne
xchg
rcrl
sbb
pop
cmp
or
dec
push
sbb
inc
dec
cmpsb
popa
push
mov
mov
xor
pop
pop
imul
pop
jb
push
mov
loopne
inc
dec
cs
cmp
add
repz
imul
aad
ljmp
add
push
cld
push
and
int3
fwait
push
pop
repz
xchg
or
jl
xchg
scas
mov
mov
jmp
cmp
and
mov
mov
add
pop
cmpsl
je
sub
sbb
clc
sbb
test
sbb
or
fdivl
push
icebp
mov
in
stc
popf
jb
xchg
push
out
test
xor
lock
cmpsb
fmull
in
push
sub
mov
idiv
jmp
lock
iret
in
inc
repnz
cmp
sbb
add
fisubs
das
fidivs
icebp
movsb
sbb
lcall
outsl
jl
cmp
stos
add
out
push
xor
mov
out
out
test
inc
shrl
pop
addr16
outsl
lods
add
cmpsb
mov
pushf
fsubrs
or
xor
mov
push
jbe
mov
sbb
jcxz
iret
je
arpl
pop
scas
dec
or
mov
lods
mov
mov
xorb
inc
aam
jmp
pop
xchg
push
movsl
test
out
add
xor
hlt
mov
fs
jo
fildl
scas
ss
push
or
shrl
sbb
jecxz
push
mov
sub
iret
std
or
lret
inc
shlb
out
cvtdq2ps
inc
jnp,pn
xlat
xchg
jl
enter
cmpsb
fs
iret
inc
lock
mov
and
fisttps
xor
xchg
loopne
shll
mov
fldcw
int3
pop
push
inc
loope
push
imul
fs
pop
pop
mov
ret
notl
mov
xor
leave
lods
fldt
dec
adc
hlt
push
fs
ret
loope
cmpsb
adc
push
ret
sbbl
mov
cmp
data16
inc
movsl
jge
je
jbe
or
vmovaps
jge
int3
outsb
mov
adc
ss
xchg
or
mov
movl
mov
mov
sbb
sub
cmp
mov
mov
mov
clc
or
mov
xlat
pushf
daa
xor
fsubr
jmp
sbb
testl
dec
cmc
push
je
dec
mov
xlat
ja
add
inc
sub
fadds
mov
das
clc
lds
das
or
scas
imul
sbb
scas
repz
pushf
popa
out
pusha
xlat
or
pop
cmp
jl
mov
push
jmp
test
dec
xchg
sub
inc
fwait
mov
jb
sbb
mov
mov
loop
jo
and
cmp
loopne
pop
push
jp
iret
stos
xor
pushf
js
and
sti
push
pxor
adc
gs
aad
fstp
call
arpl
and
js
das
cmp
mov
xchg
add
mov
mov
cmp
adc
pop
adc
push
jle
fs
ret
adc
cmpsb
lock
adc
ret
add
inc
mov
les
or
mov
test
loopne
out
cli
movsl
fistpl
push
js
in
stc
popf
inc
xor
mov
stos
jmp
push
mov
int3
inc
push
into
pop
sti
jg
jecxz
lock
cmp
fwait
adc
pusha
ds
scas
fimull
inc
lods
adc
fcomp
insb
jne
int3
push
pcmpgtb
push
data16
out
out
push
icebp
sub
les
mov
and
xchg
test
loopne
loopne
push
arpl
pushf
es
dec
mov
inc
push
movsb
or
in
pop
call
nop
fistps
pop
movsl
adc
dec
adc
arpl
shrb
jnp
icebp
mov
pop
xchg
into
xchg
and
ret
cmc
mov
addr16
scas
dec
out
xchg
das
addr16
fldenv
into
out
in
loope
sbb
dec
dec
adc
sbb
pmuludq
xor
rorl
mov
xor
xor
out
inc
and
out
fnstsw
outsl
jb,pt
stos
add
add
cwtl
das
popa
mov
sub
insb
in
test
pause
push
push
loop
xchg
pushf
pop
cmpb
test
fisubs
pxor
enter
scas
mov
mov
mov
pop
adc
push
cld
in
std
sub
sub
push
mov
xchg
sub
add
lahf
repnz
push
xchg
dec
mov
enter
lods
mov
shl
push
add
inc
leave
mov
icebp
lcall
aad
into
cmp
cmpl
jno
das
mov
push
in
fcom
insl
add
and
xchg
xor
mov
dec
mov
xchg
in
test
cmp
push
enter
movsb
jle
xor
jns
xor
nop
stos
inc
in
sahf
or
mov
adc
sbb
cmp
or
mov
dec
dec
pop
aam
idivb
add
lods
outsl
fldt
add
andl
inc
lret
jno
xchg
mov
mov
mov
jg
stos
ja
test
jg
xor
cli
leave
in
mov
pop
jne
cmpsb
jmp
jnp
aad
adc
andb
in
nop
hlt
in
sbb
sbb
jle
pop
mov
sahf
or
mov
leave
adc
adc
repz
sub
mov
lahf
mov
fistl
mov
pushf
lea
sbb
jecxz
cmp
das
fisttps
lea
call
aam
dec
mov
fs
xchg
in
add
js
push
mov
je
pop
push
aas
lods
pop
mov
pop
pop
lock
pop
loopne
sub
lea
fs
lds
popf
and
popl
push
rcl
lcall
shlb
mov
test
je
lods
mov
cmc
pop
insl
hlt
dec
lahf
mov
enter
push
std
cs
shrb
or
dec
out
jnp
mov
and
cmp
xchg
add
dec
mov
jo
xorl
movl
xchg
xor
xor
loop
push
mov
sarl
dec
add
or
popf
pushf
pop
push
add
fwait
jmp
xor
mov
out
mov
mov
clc
inc
mov
mov
sbb
mov
xchg
pop
push
jmp
aaa
sbb
out
out
pop
out
xchg
xor
bound
xchg
xchg
mov
ret
test
add
outsl
loop
lahf
sbb
test
test
add
mov
clc
rorb
dec
add
dec
jbe
imul
pop
and
mov
les
out
pop
lcall
dec
and
cmp
mov
cmp
stc
inc
pop
imul
scas
scas
sub
scas
pop
inc
jg
inc
out
negl
xchg
and
jle
push
dec
xor
sbbb
pop
movsb
push
or
dec
psadbw
out
outsb
add
std
dec
clc
add
adc
inc
pop
mov
pop
bound
lahf
push
dec
adc
out
add
cmp
pop
test
fidivl
mov
xor
js
fwait
ret
jae
mov
js
clc
cmp
xchg
adc
fcmovnu
jb
and
test
icebp
cmpsl
dec
loope
cmp
mov
movsb
jecxz
jmp
pop
adc
xchg
sub
nop
andb
bound
add
out
sub
lods
mov
adcl
cmp
stc
pop
push
movsb
loopne
popa
cmp
add
jae
sbb
idivl
sti
stos
outsb
xchg
sbb
mov
int3
fiadds
push
sbb
int3
mov
shl
inc
or
inc
outsl
sub
push
mov
inc
xlat
pusha
pop
popa
das
pop
dec
sbb
movb
imul
push
push
std
adc
icebp
jb
push
jo
movsb
add
mov
xchg
dec
dec
adc
cmp
sbb
xchg
mov
mov
dec
pop
adc
push
mov
test
test
movsl
pusha
add
mov
adc
je
fadd
rol
jo
and
ljmp
xchg
sbb
jle
mov
addr16
in
sub
into
lcall
jns
push
jle
jmp
test
fstpt
mov
popf
jmp
in
clc
fwait
aaa
imul
jge
rcll
push
call
inc
mov
inc
enter
dec
jmp
sub
in
rolb
jbe
jp
xchg
enter
fwait
subb
or
lret
repnz
sub
sbb
lcall
inc
enter
jg
fcoml
mov
ret
scas
xchg
lds
movsb
mov
stos
movsl
inc
testl
psrld
xchg
js
pop
adc
dec
push
jmp
stos
or
cmp
mov
xlat
sub
mov
outsl
jmp
inc
xor
lock
or
ficomps
out
subb
pushf
ljmp
jp
pop
in
gs
pop
pop
inc
sbb
enter
or
insb
movsl
es
pop
mov
mov
mov
cmp
int3
arpl
repnz
xor
andl
loopne
xchg
and
mov
icebp
mov
in
repz
mov
fsubrs
in
add
xchg
cmp
shl
cs
xchg
std
lods
ret
fiadds
jae
fdivp
inc
test
mov
push
pusha
mov
sub
aas
dec
testb
pop
bound
xchg
jecxz
cmp
cmp
cmp
test
test
and
arpl
add
cmpsb
xor
adc
xor
lods
pop
je
and
and
adc
mov
lds
sub
fadd
dec
mov
out
in
repz
mov
in
lret
in
loope
push
shrb
adc
jnp
call
mov
mov
jecxz
out
xor
inc
rcl
and
pop
fnsave
adc
mov
jns
push
out
rcrb
adc
testb
sub
out
and
xchg
xor
dec
push
or
adc
sbb
push
jecxz
pop
subb
cmp
adc
mov
jne
mov
mov
xchg
jecxz
fwait
sti
xor
add
push
and
out
stos
sbb
test
sbb
pushf
xor
mov
sub
jle
mov
cmp
pop
insl
cmc
rcl
lds
jb
jp
jmp
stos
inc
adc
mov
push
mov
pop
je
jmp
cmp
jmp
xor
aas
pop
outsl
jno
scas
add
fisubs
out
mov
pmulhw
mov
stc
ds
mov
sub
cmc
pop
jge
jg
iret
add
and
push
push
add
pop
mov
cld
arpl
mov
gs
sbb
je
dec
pop
lret
stos
mov
cmpsb
sbb
faddp
cli
shr
jmp
sbbl
cmp
mov
cmp
inc
insl
mov
or
movsb
mov
push
pop
fnsave
fsubs
or
jb
sbb
ss
jne
or
gs
stos
mov
insl
cmp
inc
mov
xor
push
pop
mov
imul
call
mov
test
mov
adc
xchg
insl
dec
mov
andb
dec
adc
test
inc
or
jne
loop
dec
jno
orl
aas
stos
jecxz
xor
arpl
jmp
xchg
dec
repnz
fidivrl
ror
jl
into
xchg
fistpl
or
push
in
bnd
adc
mov
cwtl
push
pop
pop
mov
lret
shlb
lahf
and
test
adc
jp
in
mov
ficomps
push
add
incb
jge
dec
push
fwait
lods
movsb
mov
push
adc
shrb
test
cmpsl
inc
scas
fsubp
dec
adc
scas
pop
mov
add
ja
aas
cmp
jo
in
std
scas
inc
inc
mov
mov
mov
xchg
in
ja
lret
mov
xchg
mov
xchg
sub
push
mov
add
jbe
lods
rcrl
fidivrs
mov
xor
pop
shlb
dec
jge
out
cmpl
or
test
rcl
push
popa
mov
mov
xor
lock
lods
adc
aaa
mov
xor
out
mov
jl,pt
sub
sbb
lret
lcall
das
repnz
loope
lock
stos
xchg
sbb
mov
ficomps
rcr
push
bound
sub
into
pusha
andb
rorb
cli
inc
lea
fisttpll
lods
and
pop
push
cltd
popa
leave
and
and
idivb
mov
add
sub
test
mov
mov
xor
jnp
daa
xchg
dec
loopne
push
outsl
add
cmp
dec
inc
sbb
shrl
and
andl
nopl
adc
movsb
insb
mov
pop
dec
fisttpl
sub
push
adc
mov
adcl
mov
sbb
push
aad
mov
mov
cmc
mov
xchg
mov
sti
push
mov
pop
test
jl
daa
stos
scas
sbb
sahf
dec
in
jno
pushf
xor
mov
cltd
push
mov
xor
push
jo
aad
mov
mov
jno
mov
call
and
pop
fcompl
jp
sub
rcrb
xchg
pop
mov
sub
or
std
or
cld
and
mov
in
stos
jb
xlat
jg
loope
jne
clc
xor
lcall
dec
pop
gs
int3
movsb
pop
lret
in
jle
leave
fisttps
lds
pusha
fstpt
pushf
push
sub
fists
xlat
pop
adc
dec
jg
addb
inc
lahf
sbb
mov
stos
and
mov
aaa
mov
xchg
notb
inc
ficompl
cmp
scas
es
mov
js
bnd
fnstenv
dec
add
push
adc
push
xchg
fsubrs
xorl
mov
sbb
or
push
ss
sub
inc
lret
xor
fistl
push
or
insb
int3
lcall
lds
scas
ret
jns
mov
add
iret
jbe
or
adc
xor
mov
push
xchg
jge
sub
scas
cmc
cmp
dec
call
jg
mov
adc
aam
pop
sub
sub
jnp
lds
jnp
xor
enter
ds
sbb
and
mov
sbb
pop
jbe
out
mov
mov
sarb
scas
mov
test
xchg
les
push
pop
cltd
adc
fstp
pop
inc
push
pop
cmpsl
or
pop
in
xor
jp
fidivrl
in
out
fcoms
pop
xor
sbbb
xchg
test
int3
mov
xchg
and
xchg
inc
pop
shl
jo
ret
aam
mov
popf
fldt
sbb
jnp
jo
mov
adc
mov
jecxz
sti
and
push
lock
mov
inc
scas
inc
out
xorl
mov
iret
mov
subb
or
xchg
sti
aaa
cli
and
push
adc
mov
adc
sbb
imul
xor
in
push
insb
sub
cltd
jle
mov
dec
in
fisubl
cli
dec
add
push
mov
dec
push
test
lods
add
push
pop
push
jae
inc
sahf
xchg
sub
das
adc
add
lcall
std
push
mov
rol
std
mov
scas
rorb
mov
mov
sbb
xlat
pop
mov
xchg
test
cmc
cmp
xchg
ds
sub
rcll
pop
push
mov
cld
fidivs
out
jnp
and
inc
test
xchg
and
xor
lret
test
std
cld
push
mov
leave
andb
in
and
pop
sti
mov
arpl
or
bound
lods
xchg
or
dec
fs
test
push
pop
gs
add
dec
test
js
sub
push
test
not
mov
xor
lret
push
es
negb
push
add
sbb
mov
outsb
adc
push
arpl
dec
sbb
push
insb
lcall
cmpsl
mov
push
ds
nop
es
dec
addr16
lret
sub
fsubrp
mov
test
adc
mov
rclb
subl
out
and
lock
enter
sub
icebp
nop
aam
in
ss
call
pusha
mov
mov
adc
call
inc
xchg
fs
call
cmp
cmp
xor
xchg
cmpsb
push
in
adc
xor
dec
and
jg
sahf
mov
mov
jo
jbe
sbb
pop
inc
jbe
fimuls
pop
cmp
jl
scas
lcall
test
push
push
add
das
sahf
push
popf
adc
out
add
fldt
pop
fdivrl
pushf
test
adc
aam
add
dec
je
fsubs
daa
lcall
xor
jo
test
add
orb
mov
or
pop
mov
dec
imul
jne
out
popf
sbb
fwait
jbe
sti
inc
popa
fisttpll
je
xor
cmp
jns
ret
and
add
fwait
rol
cmpsb
add
adc
fmuls
mov
cmp
pop
mov
ljmp
cltd
xchg
shrb
mov
fisubl
adc
pop
cli
in
push
jmp
imul
faddl
rclb
and
aas
fwait
mov
adc
cmp
loopw
fcomi
or
and
movsl
sahf
test
mov
pop
add
loope
ret
shl
in
stc
xchg
mov
pop
mov
loope
sahf
nop
sub
lods
and
mov
lret
sti
addl
lret
les
and
ficoms
pop
adc
mov
lret
clc
dec
fs
xchg
lods
sbb
lret
dec
sub
ror
fmul
jecxz
fists
push
jo
or
xor
jb
loopne
lret
and
cmpsl
jg
fistpll
xchg
mov
hlt
fidivs
dec
mov
data16
cld
movsl
insl
rcl
adc
cmc
in
mov
rclb
daa
ss
pop
clc
push
push
repnz
push
daa
push
and
orb
add
mov
push
fdivrl
pop
cmp
cmp
add
mov
mov
jmp
test
xchg
jle
pop
inc
imul
out
lock
sub
push
rolb
cmp
cmp
sbb
popf
push
cmp
daa
inc
sbb
ret
lcall
ds
stos
xor
popf
push
imul
sbb
int
cltd
sbb
jo
mov
mov
dec
pop
and
pop
nop
inc
int3
jg
ds
sbb
mov
imul
pop
jno
ja
xchg
push
jle
jb
das
pushf
add
xchg
or
test
xor
pop
inc
inc
inc
repz
xchg
xor
xor
je
gs
in
fldcw
nop
mov
les
inc
push
pop
cmp
pop
inc
pop
adc
iret
andl
xor
fcoml
cmpb
testb
std
lea
adc
and
hlt
stos
ret
in
jp
sub
mov
in
popf
or
pushf
nop
adc
cmp
shlb
ret
adc
int3
aad
std
repnz
outsl
fldt
mov
fwait
nop
xchg
repz
or
add
test
test
mov
sub
aas
out
mov
lret
cltd
jecxz
push
adc
fwait
dec
pinsrw
cmc
jo
push
popa
sbb
xchg
sub
idivl
add
popa
ud2
mov
dec
stos
xchg
fsubrs
push
icebp
fildl
out
jge
inc
fcoml
push
jecxz
ss
push
imul
pushf
xor
xchg
mov
ljmp
push
push
push
lock
dec
dec
pop
mov
popa
or
jnp
lahf
adc
inc
mov
icebp
push
popa
lret
xchg
sub
testl
test
push
sahf
add
in
ret
in
push
or
push
in
mov
lret
push
mov
cwtl
mov
mov
lahf
ja
leave
or
cmp
dec
fistps
mul
pop
in
mov
std
in
int
outsl
rolb
inc
push
sbb
pop
mov
ficoml
fbld
inc
out
stos
jmp
lea
xor
or
in
push
inc
inc
pop
stos
cmp
dec
std
push
aas
push
rorb
loop
outsb
icebp
and
adc
sub
insb
sbb
jnp
add
sbb
fsubrl
shrl
test
lahf
lds
xchg
fistpl
outsl
mov
push
pushf
aam
shlb
rorb
shrb
cmp
fdivs
imul
sbb
push
push
inc
xor
daa
outsl
lods
popa
lcall
cmp
xor
sbb
lock
or
xor
aas
xor
dec
loopne
sub
loop
pop
arpl
cmpsb
jbe
pop
aam
push
xchg
stos
mov
pushf
fsubs
insl
sahf
lods
jmp
sbb
mov
rclb
loopne
das
or
mov
mov
outsl
mov
test
test
scas
xchg
mov
sub
mov
dec
lahf
jo
loopne
dec
sbb
push
lea
leave
sahf
int
mov
and
cmp
in
jae
test
imul
movsb
aam
jecxz
fistpl
les
in
inc
and
dec
rol
sbb
fs
mov
lret
push
mov
inc
out
cld
adc
out
js
insl
sti
push
cmpsb
ret
repz
cmp
mov
jmp
lret
shll
dec
jmp
pop
int3
sbb
mov
ljmp
test
xor
sbb
inc
xchg
jmp
hlt
bound
push
sahf
cld
leave
mov
mov
pop
minps
mov
fisubs
or
pusha
aad
sub
and
add
xchg
push
xor
test
roll
stos
xchg
popa
arpl
aaa
cmpsl
xor
popf
movsl
cld
scas
mov
jno
add
sub
ja
mov
add
lea
lds
pop
in
jle
cltd
push
sbb
subb
outsl
adc
dec
pop
xor
scas
jb
xchg
repnz
sbb
in
and
inc
gs
inc
je
mov
mov
pop
lds
rcll
sub
pop
lds
adc
pop
xor
pop
scas
pop
pop
gs
ds
addr16
sub
pop
pop
xlat
cld
xchg
pushf
jl
push
jae
sbb
lahf
mov
mov
fdivr
cwtl
add
adc
jecxz
push
pushf
mov
inc
mov
scas
fisttpl
lret
inc
push
mov
adc
leave
lea
out
mov
cld
add
inc
lods
adc
and
lret
mov
or
or
jns
outsb
std
adc
int3
fcoms
ss
mov
inc
inc
inc
popa
dec
ficoml
xchg
mov
clc
adc
push
jle
xor
scas
cs
lahf
stos
aas
sbb
cmc
xchg
ljmp
cmp
in
push
or
mov
mov
fwait
pop
rcl
xchg
sub
add
mov
subb
adc
jae
push
and
xor
outsl
inc
cmp
setno
jg
mov
ja
js
xchg
adc
cltd
lret
lret
in
das
in
mov
aaa
lods
out
mulb
xor
dec
xor
dec
inc
inc
jg
test
imul
mov
lret
aas
inc
ljmp
ja
push
or
sbb
sbb
dec
repz
add
xor
mov
std
bound
add
out
fidivs
pushl
jno
cld
xchg
pop
fistpl
sub
inc
cli
pushf
inc
push
pop
and
inc
sbb
cli
xchg
sub
dec
sbb
push
xor
rcll
fldenv
cmc
push
or
out
pop
xor
adc
xor
adc
inc
adc
lahf
lock
repnz
in
movsl
in
lret
xchg
stc
nop
mov
xchg
jmp
test
xchg
adc
test
and
cmp
repnz
rcr
sub
in
inc
enter
cmpl
dec
pop
les
cs
sbb
push
sub
in
push
jecxz
cmc
lret
data16
bound
movsl
adc
push
jmp
sbb
cmpsl
inc
in
add
sbb
xchg
enter
adc
shr
and
sti
test
stc
pop
sbb
imul
sub
or
push
gs
lock
ficoms
xor
fiadds
and
pop
sahf
nopl
sub
leave
fisubl
lret
je
adc
aad
or
jge
inc
lcall
fdivrs
repnz
mov
cli
pop
shll
leave
popa
push
push
jmp
cld
mov
repnz
mov
sbb
sbb
in
sbb
mov
dec
lret
add
xchg
scas
imul
mov
xchg
cmp
lahf
cmpsb
jl
xchg
aad
xor
cli
pop
clc
out
movl
jg
out
imul
pop
and
push
adc
xor
mov
pop
mov
push
lret
mov
add
fdiv
pusha
sub
imul
dec
adc
sub
sbb
sahf
lds
adc
jle
dec
push
add
inc
pusha
es
cmp
insl
and
ret
mov
lods
and
push
add
mov
outsb
out
push
mov
cmp
pop
hlt
ljmp
mov
jmp
cmp
cmp
aaa
xor
andl
shlb
xor
pop
out
pop
loope
jl
outsb
andb
scas
jne
leave
push
stc
mov
xor
dec
dec
adc
jl
pusha
add
mov
sbbl
adc
ds
push
pop
pop
aas
add
push
lods
ret
ja
xchg
pop
scas
dec
cmp
fsubr
lods
and
xor
ljmp
mov
flds
jbe
push
mov
adc
push
aam
push
inc
inc
mov
mov
fildll
test
mov
sbb
sbb
jns
bound
inc
int
mov
pop
cmp
pop
mov
push
or
jge
fyl2x
xor
les
pop
outsl
into
fisubs
lret
sub
add
daa
jb
adc
lods
jae
test
jno
adc
mov
lret
cli
enter
sbb
test
sub
das
sub
jbe
or
sti
packssdw
ja
mov
and
inc
add
loope
push
push
inc
and
and
inc
adcb
sub
mov
out
repz
bound
sahf
mov
sbb
rorb
and
les
jp
or
fsubrp
and
xchg
pop
inc
pushf
sub
gs
andb
sbb
cmp
fisttps
adc
sbb
sub
daa
add
fldcw
jle
cmp
ljmp
jb
mov
sbb
cmpsb
or
sub
or
les
cmc
cmp
cmpsb
rclb
gs
jnp
push
inc
movb
or
sbb
sbb
or
sub
mov
jns
pop
lods
dec
mov
push
and
movb
shl
mov
call
or
mov
clc
lcall
lret
inc
dec
int
ss
repnz
insb
fwait
and
push
or
subl
push
shlb
xchg
jmp
idivl
push
fcoml
fbstp
arpl
cmpsb
aam
and
pop
out
rolb
and
cmp
je
cld
inc
pop
movsb
mov
xchg
add
inc
push
call
jbe
addr16
and
xchg
out
fcmovne
mov
stos
mov
jp
ja
jge
mov
adc
int3
enter
mov
and
bound
lods
imul
pushf
or
adc
dec
gs
movsl
in
sub
and
outsb
jmp
std
xchg
xchg
es
aam
sbb
testl
push
fnsave
xchg
stos
sar
pop
dec
mov
shll
int
cwtl
inc
pop
or
enter
mov
mov
lret
jmp
pusha
aaa
mov
push
insl
pop
mov
adc
fmuls
xorb
or
int
xor
aam
sbb
aad
or
imul
pushf
inc
xchg
sbb
pushf
sarl
inc
mov
push
in
xor
cmpsb
fwait
mov
sub
dec
arpl
decb
cmp
jge
mov
push
mov
mov
outsl
or
aad
sub
andb
fidivl
xor
sbb
mov
fs
mov
xchg
add
jns
inc
cmc
dec
cli
sub
xchg
push
add
sbb
push
outsl
es
push
dec
int3
pop
add
call
xor
and
jle
in
push
loopne
xchg
hlt
xchg
push
and
adc
popf
push
push
sti
xchg
dec
roll
mov
dec
loope
call
pushf
or
lock
mov
sbb
outsb
lret
cmp
jecxz
enter
inc
insl
add
adc
pop
pusha
negb
and
jae
in
mov
shl
repnz
xchg
add
xor
ss
mov
es
inc
aad
mov
xchg
aas
cmp
xchg
loopne
movb
fwait
outsb
test
in
fnstsw
outsb
and
or
popl
iret
inc
xchg
sbb
jbe
jae
fs
cmp
push
adc
push
inc
add
sub
fisubs
inc
xor
lret
jns
flds
fwait
fwait
xor
mov
ja
stos
test
dec
pop
cmp
icebp
mov
aas
pushf
cli
repnz
mov
sub
and
dec
sbb
sti
shrl
test
fidivs
jmp
sti
xchg
pop
mov
inc
negl
mov
pop
and
cwtl
sti
and
or
out
psllq
fidivl
mov
mov
enter
cld
mov
xlat
out
lea
insb
dec
xchg
mov
xchg
loope
cs
mov
mov
in
sbb
dec
out
int
adc
sub
inc
rclb
xchg
fwait
stos
and
inc
mov
ja
fsubrl
xchg
outsb
sbb
repz
aam
ja
mov
cmp
jo
popa
out
xchg
xchg
xlat
repz
jbe
adc
lods
sbb
pop
sbb
cld
mov
cs
jbe
outsb
dec
mov
jge
mov
jg
cli
lret
inc
sub
cmp
daa
lret
bound
aas
dec
xchg
jle
xchg
sub
sbb
in
fwait
in
adcl
cmpsb
pop
je
lods
xor
dec
andb
inc
sahf
or
inc
es
xchg
push
mov
pop
dec
jne
mov
movsl
shr
out
dec
fs
cli
mov
sub
aaa
bound
scas
mov
sarb
xchg
jbe
sub
xchg
mov
data16
mov
add
addr16
out
popf
test
ds
xor
xchg
adc
xor
mov
xchg
pop
mov
cmpsb
cmp
fidivrs
aam
mov
push
lahf
inc
icebp
test
aad
sarl
pop
dec
and
ret
je
pop
fists
and
out
cmovp
jmp
rorb
notb
cmp
mov
or
push
cltd
lahf
test
sbb
jp
mov
adc
nop
push
mov
add
popf
xor
es
xchg
fdivp
lods
sbb
jne
xor
stos
ret
dec
and
jmp
inc
dec
lds
sti
ds
push
pop
scas
cmp
xor
dec
cmp
loope
and
jns
jne
shrl
test
xchg
sbb
dec
sub
sbb
or
and
fucomp
xor
inc
mov
mov
pop
jnp
loopne
sbb
ja
adc
rol
insl
lods
addr16
dec
pop
mov
jmp
xchg
fwait
sti
scas
cmp
xchg
sbb
imul
mov
repz
sbb
push
arpl
ret
adc
cld
mov
cmpsb
jb
sbb
or
lea
in
leave
or
xchg
movl
jno
inc
andl
pusha
add
xchg
out
dec
sub
add
or
mov
adc
les
out
dec
mov
sbb
lock
or
cmp
movsl
push
add
adc
lea
mov
iret
mov
jne
out
mov
fisubl
inc
mov
outsb
pop
dec
rorb
fstpl
xchg
cmp
pop
xchg
pop
in
dec
pop
arpl
insl
repz
dec
sahf
lcall
jae
sbb
fs
hlt
or
shlb
add
out
ret
sahf
xchg
dec
fs
stos
mov
cmpsl
add
scas
inc
push
mov
mov
mov
call
cmp
lret
mov
adc
testl
lret
mov
pop
xor
addb
xor
lahf
or
int3
test
es
mov
mov
fidivrs
sub
jle
fdivl
dec
adc
je
xor
dec
and
xor
xlat
push
pop
xchg
daa
leave
sahf
sub
jb
lods
push
mov
scas
pop
outsl
push
mov
mov
xchg
push
lcall
lcall
fimuls
xor
pop
loope
lahf
pop
sahf
popa
or
int3
fsubp
mov
andl
add
movsl
ret
jl
sbb
lcall
dec
dec
arpl
xor
cmp
aaa
sbb
aas
inc
stc
cmpsb
repnz
inc
aad
or
inc
int
xchg
int
mov
push
and
pop
and
pushl
dec
std
jo
dec
fstp
mov
adc
data16
popf
jle
xor
andb
ret
aaa
or
cltd
fsubs
lret
sbb
jo
ror
jp
notl
lret
mov
rol
movsl
repnz
inc
stos
lret
addr16
xlat
mov
scas
jno
in
push
shl
repnz
xlat
jns
mov
jg
xchg
lods
aaa
mov
inc
sbbb
mov
fadd
add
nop
out
orps
test
pop
mov
fcoml
jle
cmpsb
sarb
shl
xor
loopne
dec
imul
dec
aas
push
add
imul
and
dec
pusha
ljmp
loop
mov
aaa
or
mov
shll
or
mov
jo
lea
jo
xchg
mov
xchg
ljmp
insb
xor
xor
cwtl
stos
push
iret
out
mov
shrl
rorl
pop
mov
or
cmp
cmp
nop
fs
shl
xor
mov
rcrb
xchg
sbb
loop
movsb
cmp
enter
inc
std
in
sbb
aas
mov
cmpsb
mov
clc
aas
adc
pop
jecxz
sub
fnstsw
popf
stos
cmpsl
add
insb
roll
stos
inc
movsl
push
adc
cmp
jnp
fwait
jecxz
mov
or
nop
inc
loopne
mov
mov
shl
mov
push
gs
xchg
subb
sbb
inc
jle
es
insb
mov
aam
mov
inc
push
pop
test
inc
cld
fwait
imul
sarl
addl
xorb
push
imul
fucomip
mov
arpl
cmp
xchg
push
cmp
out
ss
pop
lds
out
cld
xlat
nop
xchg
aas
push
clc
sub
mov
mov
int
cmp
orl
in
adc
sub
xchg
pop
int3
shrl
dec
fildl
movsl
adc
repz
add
aad
and
or
repz
mov
adc
sbb
aam
xchg
push
mov
ss
ja
leave
and
and
jecxz
xor
into
mov
in
cli
cmp
mov
xlat
andl
dec
lahf
xor
pushf
das
add
and
mov
cwtl
lret
loop
pop
call
test
sbb
jmp
scas
lock
call
mov
loopne
sub
xor
jno
jp
popa
lods
test
jb
jle
adc
cmp
jnp
jge
ja
xchg
sahf
cltd
xor
sub
mov
cmc
jns
sub
push
popf
mov
mov
inc
fisttpl
ret
dec
adc
repz
scas
jo
push
sub
adc
jg
pushf
and
jg
push
in
test
and
mov
add
insl
sub
push
jno
mov
sub
jo
pop
sahf
adc
mov
loopne
or
jne
ret
into
xchg
pushl
icebp
or
mov
call
add
ret
add
mov
mov
cmpsl
iret
stos
test
cmp
shlb
jne
xor
shlb
std
popa
or
mov
sub
push
dec
hlt
aaa
divl
inc
movsl
jmp
fwait
aaa
jae
or
xchg
dec
cld
outsl
push
imul
pop
lahf
mov
push
arpl
jbe
mov
cmpsb
fwait
addr16
loope
xor
hlt
mov
jg
mov
ret
pop
lea
sub
mov
movsb
repnz
lret
or
mov
mov
or
lcall
ds
enter
inc
je
fdivs
jns
sti
popf
call
or
fwait
sub
ret
hlt
sub
push
mov
out
xchg
dec
fidivrs
pop
jnp
outsb
mov
jmp
rcrl
jp
aad
fbld
sub
cld
stos
clc
frstor
mov
shl
mov
cmp
jae
inc
sahf
lods
mov
cmpl
jle
dec
push
xchg
jg
aad
repnz
or
daa
dec
pusha
xor
lock
sbb
xor
mov
scas
mov
les
cli
xchg
mov
push
sbb
insl
sub
lcall
push
and
cmp
ss
in
cmpsb
insl
test
mov
sbb
jo
sbb
push
sub
ss
push
jae
add
fscale
dec
subb
mov
push
sbb
fmuls
adc
or
loope
movsl
ljmp
adc
fidivrs
xchg
dec
dec
mov
xor
pop
repnz
add
lcall
and
bound
pop
sti
les
mov
fisubrl
js
cld
cmp
fdivs
negb
jbe
add
jo
inc
cmpsb
test
int3
ss
pop
mov
xchg
push
ja
imul
pop
mov
mov
pop
and
mov
sbb
lock
mov
in
out
fdivs
pusha
push
push
std
cltd
fcmovne
add
popa
cmp
cld
jp
stos
icebp
gs
es
cld
xchg
push
pop
push
mov
insl
mov
add
sub
inc
imul
sub
mov
cmp
or
shl
in
and
insl
sub
ja
push
cs
mov
repnz
out
xchg
mov
or
rcrb
inc
fadds
pop
jmp
out
jmp
cmp
jb
push
call
fwait
test
add
call
add
xchg
pop
rclb
lea
mov
mov
neg
fldt
add
or
rol
mov
cwtl
mov
dec
dec
test
mov
mov
jmp
cmpsl
out
outsl
imul
sub
adc
adc
js
nop
lahf
inc
inc
shl
jge
inc
push
jg
push
mov
sbb
mov
outsb
pushf
lea
outsl
and
adc
cwtl
lods
xor
frstor
ljmp
push
mov
pop
dec
aaa
mov
sub
fiaddl
jecxz
into
xchg
int3
int
mov
inc
aaa
mov
jp
inc
bound
dec
mov
ret
cltd
test
shll
inc
add
mov
ja
sarl
sti
pop
add
stos
push
dec
mov
mov
lods
jmp
test
ret
call
test
xchg
ret
dec
and
imul
je
adc
daa
addr16
popf
cwtl
inc
mov
or
test
in
jae
and
fcoml
jbe
inc
push
jne
data16
xchg
mov
lods
xchg
xor
je
ficoms
and
xchg
lret
test
ret
inc
push
jecxz
test
push
gs
dec
push
outsl
lods
pop
jbe
int
or
adc
fwait
xor
or
fistpl
mov
xlat
sbbl
out
adc
movsl
or
inc
outsb
xchg
or
and
mov
mov
xor
xchg
mov
xchg
add
sbb
and
or
dec
mov
push
ss
fstpt
push
lret
push
orb
popa
and
pushf
cli
or
pop
add
subb
mov
xor
sgdtl
cmp
scas
arpl
lds
es
xchg
inc
mov
cwtl
cmp
xchg
mov
cmp
mov
or
or
in
testl
dec
leave
insb
and
sahf
pop
gs
hlt
sbb
lret
pop
lahf
gs
pushf
xor
stos
mov
jae
jmp
aaa
jb
cmp
jecxz
or
sti
lods
ljmp
and
fcmove
out
push
int3
push
adc
push
push
js
ret
shll
loopne
stos
out
adc
adc
jns
cmc
mov
mov
das
pusha
dec
dec
xor
cmp
movsb
lds
sub
stc
mov
popf
cs
pop
out
fldl
es
inc
add
outsb
fwait
aaa
clc
jle
out
fistl
lods
loop
outsb
aad
enter
daa
fbld
psubw
mov
imul
adc
inc
leave
cmp
xchg
jge
push
ljmp
mov
jb
out
lock
lahf
jns
dec
sbb
nop
dec
insl
push
cwtl
out
addr16
inc
mov
xchg
popa
and
sarb
inc
scas
jl
add
inc
into
decl
fadds
and
pop
pop
outsb
mov
pushf
xchg
jecxz
pop
cmp
data16
leave
push
sub
push
mov
xor
inc
jmp
lret
cmp
jno
mov
lcall
ja
jle
lcall
push
pop
cmc
adc
and
js
jnp
loope
xlat
and
mov
popf
jae
in
xchg
adc
mov
jg
mov
xchg
lret
lds
fistps
idivb
sbb
or
mov
mov
jmp
cmc
int3
xchg
mov
divl
inc
arpl
out
mov
daa
testb
sub
xchg
dec
pop
ss
xor
fidivs
xchg
add
pop
pop
mov
popf
in
inc
testl
bound
xor
mov
subb
dec
pop
mov
xlat
xchg
outsl
mov
repnz
xor
lret
lcall
in
orl
jle
mov
push
cmpb
adc
popa
sbb
repnz
fucomp
mov
cmpsl
aam
xchg
adc
decb
inc
in
les
inc
rorb
xor
jo
pop
push
insb
jnp
adc
push
and
sbb
and
cmp
push
mov
rcl
outsl
mov
inc
bound
mov
lcall
stos
mov
inc
adc
mov
pop
stc
clc
leave
cmp
lret
jnp
jb
mov
bound
jg
sbb
fs
ficoms
je
sbb
xor
into
push
xlat
call
dec
mov
dec
sub
aad
mov
lea
out
inc
pop
repnz
mov
dec
dec
mov
notl
dec
cmp
fbstp
movsl
pop
cmp
out
jge
dec
pop
rorb
cmp
rcrl
shl
lret
cmpsl
mov
pop
inc
sbb
xor
mov
fwait
push
loope
shrb
inc
jg
jnp
insb
mov
dec
sarb
outsl
cmc
ficompl
pop
push
movsb
cs
loopne
push
fs
sbb
out
inc
orl
push
pop
and
in
xor
adc
adc
sbb
in
out
sbb
lahf
xor
push
add
cmp
bound
push
imul
mov
xchg
xor
cmp
sbb
rorl
imul
cmp
xchg
mov
pop
iret
adcb
test
adc
cs
sahf
mov
call
cmp
lcall
gs
test
mov
call
shlb
xlat
cs
je
cmp
je
std
cld
fisubrl
mov
pop
inc
aas
outsl
pop
jae
and
push
mov
sub
add
add
test
sbb
ja
dec
in
mov
addr16
and
add
data16
pop
push
je
jns
pop
mov
add
jns
inc
popa
mov
pop
mov
cmp
aaa
out
mov
mov
stc
push
sub
insb
xchg
in
arpl
pop
adc
std
into
pop
push
fiaddl
lret
je
jmp
out
jmp
xchg
bound
fldt
adc
int
data16
pop
mov
andl
pop
cmp
dec
sub
stc
pop
je
adc
push
jl
out
pand
inc
adc
inc
fstl
nop
push
loopne
adc
loop
cmp
cmp
fisubrs
or
push
imul
ja
mov
lahf
mov
repnz
mov
into
mov
xor
jmp
dec
inc
ret
shll
xchg
outsb
fisubrl
add
or
lret
push
inc
or
std
xor
les
dec
mov
mov
push
in
jns
sbb
push
xchg
push
xchg
xchg
and
bound
add
rcl
fnsave
scas
notb
pop
cli
les
mov
push
roll
fdivrp
xlat
cli
icebp
sbb
jp
repnz
xchg
push
cltd
pop
dec
mov
inc
jge
aad
adc
pop
inc
out
jp
pop
outsl
jp
cmpsl
js
fsubrs
xchg
xchg
mov
push
imul
sbb
mov
ss
jne
ret
pop
sub
loope
dec
and
xor
jno
in
les
and
xor
shlb
pop
mov
dec
cld
jg
add
adc
jl
pop
lock
scas
xchg
xor
add
daa
in
outsl
ja
push
out
xchg
testb
pop
push
jmp
and
push
mov
loopne
and
rcll
aam
loop
icebp
adc
dec
repnz
or
stos
cli
push
sahf
xchg
mov
adc
push
sub
sub
dec
lock
and
int3
dec
mov
xor
push
fldl
fidivrl
adc
lret
or
scas
xchg
fcmovnb
push
leave
repnz
shlb
push
cwtl
pop
cmp
jge
mov
pop
jae
fs
pusha
xchg
lods
repz
adc
arpl
in
call
add
jno
cmc
stos
xchg
shl
das
sbb
mov
popa
push
jecxz
mov
pop
out
pop
sub
sub
rep
sub
jnp
mov
add
ret
xor
test
stos
in
cltd
push
scas
nop
cmp
push
rcl
test
sbb
mov
dec
jne
jns
pushf
mov
adc
adc
ljmp
pop
xchg
insl
mov
pop
andb
in
jne
cmp
test
lret
pop
sti
inc
lahf
idiv
pop
push
stos
or
mov
loopne
cmp
and
inc
adc
pop
nop
push
push
or
dec
jmp
mov
sub
clc
adc
jge
cmpsb
das
lret
stos
ror
lods
out
sti
mov
mov
popf
mov
popa
shl
fwait
js
lahf
stos
adc
adc
insl
mov
cwtl
mov
cltd
insl
add
nop
push
outsl
stos
mov
lahf
daa
sbb
mov
mov
in
jno
je
or
mov
adc
mov
xlat
insl
rcrl
xchg
dec
jno
test
mov
in
std
xor
sahf
js
sub
clc
push
pop
scas
mov
jecxz
je
and
add
jg
lock
dec
or
loope
ss
out
pop
cltd
jae
add
sti
outsb
andb
cmp
in
mov
sub
push
cmpsb
jp
pushf
xor
loope
xchg
jns
push
ret
in
out
ja
in
pop
sub
imul
sub
cmp
mov
fnstenv
mov
scas
and
shll
das
fstp
clc
push
xchg
scas
fsubl
pop
push
sbb
ret
jl
js
adc
mov
dec
dec
mov
popf
cmp
mov
or
cltd
pop
les
cmp
mov
cltd
dec
push
mov
js
adc
adc
xchg
sbb
ds
mov
dec
movsb
jbe
cltd
pusha
lods
inc
sub
mov
out
sti
and
and
mov
xor
inc
fcomps
xor
test
mov
jno
push
je
lahf
pop
shr
shrl
ja
outsl
xor
icebp
mov
xor
out
paddb
or
mov
jg
mov
and
cli
mov
sub
fnstsw
jno
fldenv
mov
sbbl
cld
fsub
push
mov
mov
cmp
in
push
hlt
xor
in
or
pop
or
cmpsl
xchg
xlat
adc
or
xor
xchg
call
fcomp
pop
xlat
xchg
pop
fldt
inc
cwtl
scas
jl
loopne
movsb
aaa
add
jne
loop
out
jo
data16
and
andl
jne
push
push
stos
ret
sbb
pop
push
sub
loopne
push
not
cmp
or
cs
jne
test
mov
rcrb
adc
sahf
jae
arpl
leave
outsb
clc
cli
das
jmp
call
ds
jo
mov
test
into
adc
jnp
cmpsb
les
push
xchg
out
ret
mov
mulb
push
xchg
xchg
pop
gs
pusha
or
inc
es
mov
mov
outsl
daa
or
in
sbb
scas
xchg
pop
jg
lahf
enter
in
mov
lahf
or
xchg
rorb
enter
inc
fs
mov
xor
lock
fwait
aad
sahf
mov
cmpl
mov
xchg
xor
mov
ret
jne
repz
mov
fldenv
pusha
mov
das
push
into
add
js
push
push
cmpsb
cltd
and
sti
jo
or
sbb
into
ret
adc
add
push
xchg
mov
xchg
sub
jae
aam
mov
adc
cld
test
jg
xlat
mov
in
xcrypt-ctr
cmpsl
push
icebp
pusha
lock
xchg
xchg
pop
cmp
popf
and
dec
inc
dec
inc
pop
and
xchg
fdivrl
xor
mov
in
adc
es
sbb
pop
dec
fidivrl
sbb
lods
push
cmp
lods
cmp
cmpl
adc
push
inc
pushw
nop
cwtl
mov
inc
mov
pop
call
test
push
int
daa
ljmp
push
fnsave
dec
mov
xor
pop
mov
sub
ficoms
out
fcomip
and
inc
data16
stos
test
sbb
adc
lahf
in
in
mov
push
mov
pop
test
int
mov
sbb
adc
outsl
or
pop
outsl
pop
daa
shlb
loopne
aam
ds
cmc
mov
in
pop
and
cs
add
sbb
enter
mov
dec
rolb
jns
aaa
mov
jbe
nop
into
add
data16
cltd
mov
and
xor
jle
aad
xchg
pop
adc
fidivl
out
cwtl
call
pop
lret
pop
mov
and
xchg
popf
stc
xchg
xor
test
push
scas
mov
push
leave
nop
sbb
inc
jnp
push
xchg
and
icebp
push
cld
cmp
js
push
out
daa
icebp
xchg
sbb
jne
xchg
jmp
inc
pop
je
repz
mov
bound
jmp
jp
or
rol
fs
loope
cwtl
adc
lea
pop
in
mov
rcl
pop
and
adc
int3
lahf
or
push
lea
or
pusha
lea
scas
ds
fs
or
testl
scas
jbe
fisttps
xlat
cmp
int
fnstenv
mov
jnp
mov
cmpsl
mov
das
inc
cmpsb
cmp
mov
movsl
insb
add
jbe
xchg
push
inc
mov
ja
adcl
dec
dec
sarl
stos
daa
pop
inc
ret
push
insb
add
or
popa
jb
or
push
rol
imul
and
dec
mov
push
add
insb
push
pop
sahf
sub
push
pop
mul
jle
pop
and
icebp
roll
dec
mov
mov
push
fucomip
clc
clc
pop
pop
notb
in
lock
jns
xor
aaa
add
inc
push
inc
xor
iret
xor
jnp
call
test
mov
mov
and
inc
cs
leave
pusha
adcb
dec
mov
imul
and
adc
adc
and
mov
stos
xchg
sub
fdivl
lahf
xchg
mov
xchg
mov
lcall
mov
jne
inc
pusha
xchg
std
paddw
jmp
mov
pushf
pop
dec
lahf
jmp
out
pop
subl
in
cmp
lods
imul
xchg
xchg
add
out
jb
add
inc
insl
int
pop
fcmovne
sahf
int
inc
out
ss
xchg
cmpsb
vshufpd
and
scas
inc
jle
pop
mov
mov
mov
jle
out
inc
fcompl
ret
pop
mov
int
out
mov
inc
test
xlat
notl
mov
jne
mov
lret
xchg
jne
cmp
aad
inc
xchg
pop
jae
pushf
and
cmp
in
adc
mov
mov
cmp
xchg
cmc
dec
js
pusha
pushf
mov
pop
mov
mov
pop
fstpt
or
dec
push
dec
jns
les
pop
jbe
jnp
pop
and
dec
cmp
rol
pop
shlb
enter
mov
and
inc
shl
mov
inc
mov
or
dec
push
das
jns
inc
sub
pop
addr16
dec
enter
sbbb
out
jle
push
fnsave
push
xor
test
push
cwtl
push
mov
sbb
jg
aad
pusha
leave
testl
rclb
mov
push
aas
jne
scas
sbb
mov
mov
ljmp
dec
aas
jle
ds
std
xchg
or
jmp
jle
filds
popf
shlb
loop
pop
mov
sub
pusha
and
dec
push
test
mov
xchg
stc
dec
add
push
jae
inc
in
testl
clc
test
outsl
rcrl
add
jmp
insb
or
popa
dec
aad
push
aad
call
ljmp
fsts
flds
scas
mov
sbb
push
xor
pop
pop
enter
sbb
xor
mov
out
scas
inc
adc
push
in
xor
xor
inc
mov
push
ss
aas
outsb
push
mov
and
mov
mov
lods
push
movsb
and
ds
aam
mov
mov
push
add
mov
lret
xchg
add
ret
lods
bnd
push
insl
mov
dec
or
pushw
mov
pop
inc
add
cli
mov
call
and
in
das
in
fwait
adc
push
push
es
loopne
test
enter
imul
sub
inc
inc
push
aaa
xchg
sub
push
add
dec
sub
test
mov
je
andl
movsl
push
shrb
leave
and
mov
mov
dec
pushf
cmp
pop
imul
fadds
mov
push
jp
adc
mov
lcall
inc
sbb
inc
xlat
or
or
and
pop
outsl
hlt
xchg
inc
faddp
push
jnp
push
xor
rol
mov
cmpsl
call
gs
fmull
mov
fisubl
lret
hlt
ret
and
inc
mov
clc
jo
fwait
xor
mov
pop
jne
dec
xor
std
cltd
adc
ja
sub
xor
jne
xor
fsubr
inc
inc
imul
popa
pop
loope
loop
cltd
adc
xor
repz
jl
dec
shll
pop
shrl
adc
sbb
and
xchg
ret
subl
int3
xchg
flds
or
lods
pop
mov
popa
and
imul
popa
xor
lcall
or
cwtl
push
clc
mov
stc
mov
rcrb
sbb
push
leave
dec
and
fdivr
adc
in
test
test
sar
daa
decb
inc
pop
jmp
lods
test
sbb
pop
sbb
ja
imul
in
mov
call
cltd
cmp
lcall
jne
sub
inc
int3
mov
pop
push
aas
imul
mov
and
ja
mov
out
xchg
dec
fldl
in
mov
cwtl
rcr
jae
xchg
pop
shlb
aam
xor
fldcw
jbe
lcall
inc
push
fmull
fs
jb
cld
mov
xlat
mov
cwtl
pop
jge
int
pop
jmp
jecxz
xchg
xchg
add
or
dec
cltd
push
sti
fildll
push
jae
mov
test
test
pushf
add
das
repnz
popf
sbb
xchg
daa
fsubrp
fs
jnp
cs
pop
loop
adc
jb
xor
jle
cmp
jp
jns
push
cmpsb
mov
out
lds
hlt
and
dec
daa
inc
jp
jb
xchg
mov
inc
mov
inc
inc
xor
ficompl
lock
clc
fldenv
push
pop
repz
ret
jmp
xchg
jnp
js
out
xchg
lea
adc
pop
jb
lea
cmpsl
adc
push
lcall
sbb
mov
xor
lahf
jle
lea
and
jl
and
sti
testb
jg
cmpl
adc
jne
test
push
jmp
jle
xor
sub
push
test
test
and
js
sbb
addr16
ss
xchg
cmpps
mov
lret
data16
pop
mulb
hlt
cli
xlat
xor
mov
xchg
add
mov
cwtl
push
dec
jb
sub
out
inc
sbb
mov
and
sti
or
ficoms
or
mov
push
xchg
push
fldcw
insl
adc
gs
mov
push
xor
sub
ret
push
jne
push
js
ds
rcrb
lahf
mov
aas
ljmp
mov
mov
into
mov
jne
jl
or
not
sarb
add
cmc
fcoms
mov
pop
jle
sbb
sarl
lret
out
inc
mov
pop
mov
sbb
es
jo
jae
rep
ljmp
cmp
lods
push
in
push
add
fs
insl
cmp
shrl
divb
push
testb
mov
popf
int3
dec
shr
jge
push
lods
loop
adc
sub
mov
sub
cmpsl
ret
orl
or
enter
test
mov
mov
fildl
push
add
mov
push
mov
stos
dec
loopne
mov
addr16
aas
sbbl
in
mov
nop
insb
or
fsubrs
mov
mov
mov
lahf
push
fs
sbb
popf
mov
cmp
imul
xlat
pop
data16
cmp
sub
pop
push
icebp
add
xchg
pop
adc
shll
shrl
inc
xlat
jp
pop
adc
and
or
out
negl
add
or
cmpsb
sbb
fdivrs
xchg
pop
inc
sbb
pop
or
scas
cmp
lcall
sahf
clc
jmp
mov
cmp
jmp
inc
outsb
in
xchg
push
push
or
pop
inc
lahf
push
rep
loope
loopne
cltd
push
and
jmp
lret
jne
push
out
inc
xchg
or
mov
adc
repnz
mov
push
arpl
xchg
imul
inc
mov
aad
adc
mov
push
pop
stc
rorb
shlb
or
inc
aam
sbb
ss
mov
push
pop
out
mov
shll
je
movsl
push
enter
daa
aaa
pop
adc
mov
push
ljmp
lods
lods
jb
adc
cld
or
xor
pop
or
nop
adc
inc
xor
ja
xor
jns
jns
cmp
push
ljmp
call
pop
add
cli
pushf
adc
stc
jmp
xorb
pop
add
and
bound
dec
fists
repnz
pop
dec
xchg
dec
scas
inc
xorl
scas
lock
xchg
push
in
or
pop
xor
inc
adc
mov
popa
in
mov
jg
add
and
test
jae
pop
das
rcll
dec
jecxz
inc
mov
sub
xor
mov
xor
test
lea
pushf
xchg
lods
int
das
fwait
push
insl
dec
icebp
xor
and
shlb
sub
in
pop
ret
jo
cmp
mov
and
insl
shrl
ljmp
mov
imul
add
xor
inc
push
xchg
jbe
arpl
pop
insl
and
addb
or
add
int3
or
pop
cmp
enter
or
push
pusha
mov
pop
testl
test
fiadds
cli
ja
adc
xchg
lahf
sub
add
mov
enter
jns
aad
jecxz
jle
sub
push
aam
dec
cs
mov
xchg
mov
xor
mov
loope
notb
mov
mov
cli
jne
xchg
js
dec
call
sbb
out
jp
scas
cmp
out
aam
jbe
sub
lds
sbb
mov
out
jae
sbb
jecxz
ja
out
pop
cmp
push
mov
insl
jne
adc
lock
ljmp
inc
inc
popa
mov
mov
mov
daa
mov
aas
pop
mov
insb
adc
lcall
cmp
jbe
stos
aas
mov
mov
dec
mov
mov
sbb
popf
dec
adc
xchg
inc
sub
out
mov
sub
aam
sub
xchg
es
sub
inc
shrl
pop
push
nop
iret
and
inc
xchg
loope
push
or
rclb
dec
fbld
aad
dec
inc
bound
movb
mov
hlt
cmp
xchg
out
lds
aad
in
in
xchg
sbb
shl
mov
into
ljmp
adc
mov
mov
sti
sbb
cmc
adc
fisttpl
andb
add
test
sub
enter
dec
mov
lret
push
aaa
push
xchg
mov
jmp
mov
movsb
aaa
and
pusha
pop
std
data16
outsb
mov
mov
push
dec
or
jl
gs
pop
out
xchg
es
push
loope
add
enter
push
ljmp
out
fsubrp
xchg
pop
adc
jb
movsb
sbb
pop
sbb
pop
mov
inc
mov
imul
mov
int3
daa
mov
insb
and
sahf
add
xchg
pop
or
jbe
dec
add
arpl
cmp
push
std
inc
addl
pop
push
sbb
and
sbb
push
mov
in
pop
gs
and
inc
sbb
mov
pop
out
pop
fldcw
push
lods
jbe
fidivs
push
ret
int3
xor
addps
ja
mov
incl
aam
sahf
nop
pushf
push
and
js
push
stos
lods
jecxz
adcl
iret
sub
ret
and
imul
pushf
aad
ret
xlat
jae
and
repnz
sti
cld
mov
ret
fisttps
lahf
insl
xor
movsb
gs
inc
mov
jp
loope
push
mov
or
arpl
adc
nopl
xchg
lret
jnp
jno
in
js
adc
and
xor
add
mov
or
bound
dec
mov
and
inc
iret
data16
sbb
sahf
in
test
inc
sbbl
sub
pop
inc
ja
dec
repnz
mov
cmp
jae
mov
push
sbb
adc
sub
imul
mov
push
mov
in
call
or
pop
sub
lcall
pusha
call
notl
mov
movsl
xor
or
xchg
ds
push
cltd
subl
adc
out
cmc
sbb
daa
rcrl
mov
idiv
cs
aad
jae
lret
outsb
dec
ljmp
sahf
push
jmp
jne
pusha
cmp
or
xchg
out
cmpsb
jecxz
out
test
xchg
ds
jae
mov
arpl
imul
xchg
and
mov
push
mov
xchg
cmp
ja
clc
add
cmp
cltd
test
push
icebp
out
push
lods
iret
sbb
sar
unpckhps
cmp
adc
js
ljmp
mov
pop
shlb
push
sub
mov
vpackssdw
enter
int
mov
push
lock
push
aas
push
popf
xchg
add
jl
popf
xor
movsl
testb
mov
test
rol
sbb
sbb
jbe
lahf
lods
bound
scas
outsb
fwait
jp
les
or
test
adc
sbbl
ret
pop
xchg
push
lods
fcoms
ss
dec
stos
add
rcll
in
mov
jb
shll
fidivrs
sub
leave
add
in
ftst
dec
and
imul
xor
bound
loop
int3
stos
mov
rol
mul
es
sub
pop
pushf
inc
cmp
dec
orb
rclb
rcrl
inc
inc
mov
sahf
sub
ljmp
jl
cmp
push
adc
pop
and
movsb
mov
mov
and
test
sub
bound
mov
inc
mov
test
xchg
cmp
inc
or
xor
mov
jb
inc
ficompl
xchg
fmull
jmp
xlat
lods
hlt
sub
xchg
pop
push
ljmp
lock
es
pusha
sbb
fidivs
cmpsb
ds
dec
xor
mov
xor
jns
pop
jne
xlat
orb
jae
push
out
adc
lods
add
ds
cmp
mov
jge
fiadds
sbb
aas
add
pop
test
sub
test
jmp
add
ss
add
sbbl
daa
jb
or
sub
in
pop
popf
and
jl
cmp
inc
mov
xchg
jne
xchg
idiv
out
stos
imul
or
aam
cmpsl
jecxz
sbbb
jg
loop
dec
insb
scas
js
mov
cs
lea
inc
nop
and
mov
mov
dec
sub
leave
adc
jae
ret
adc
les
scas
in
stos
or
pop
stos
jbe
test
and
push
mov
lret
out
rcrb
and
rorl
sarl
lcall
and
imul
lcall
mov
sbb
adc
ds
xchg
lods
xchg
les
movsl
movsl
inc
push
jnp
hlt
mov
dec
fsubl
dec
inc
push
cwtl
js
mov
dec
push
hlt
rcrb
test
pusha
clc
dec
sbb
out
rcl
mov
and
mov
mov
nop
sti
pop
fldcw
leave
pop
into
mov
lret
xchg
stos
push
je
mov
sbb
lcall
cwtl
sub
sbbb
pop
testb
inc
xchg
scas
je
aaa
xchg
jno
dec
popa
add
pusha
xchg
and
inc
andb
mov
mov
push
loope
push
je
shrb
lret
stos
loop
imul
scas
int
call
sbb
sub
pop
fists
sub
popl
jp
cmp
lret
pop
sbb
call
pop
imul
mov
push
sbb
out
outsl
daa
call
in
ficoml
fimull
testb
popf
scas
mov
sbb
clc
pop
in
aas
xchg
jp
iret
aad
fdiv
inc
ret
jle
pushf
cmpsl
cltd
push
aad
dec
lock
out
push
xchg
sbb
repz
addr16
fbstp
xorb
sub
stos
loope
push
imul
int3
xor
scas
loope
and
xchg
xchg
xor
pushf
lods
pop
cmp
cmp
jo
add
outsb
cmp
mov
or
imul
cmpsl
push
jbe
cmc
iret
jbe
xchg
mov
jne
add
icebp
adc
fcomps
jae
and
test
cs
xchg
jl
inc
cs
mov
es
sub
cmc
lahf
stos
aam
scas
out
movsl
loope
push
cmpsl
jo
call
add
mov
push
insl
mov
pop
call
add
mov
loop
sarb
mov
cmp
mov
xor
aad
sub
push
mov
repnz
sti
scas
push
dec
gs
pushw
fimull
call
sub
xchg
mov
test
fistpll
fucom
cld
in
adc
fldl
sbb
loop
sub
inc
iret
jecxz
gs
inc
adcb
dec
mov
jb
ds
pop
xchg
stos
or
or
mov
ret
fcmove
ret
sti
into
and
push
les
sbbb
stc
lret
stos
sub
out
fbstp
push
es
loopne
movsb
daa
leave
mov
ds
mov
fnsave
jle
mov
mov
push
sub
pop
lea
aam
xchg
or
mov
int3
push
das
shrl
jb
fcmovnu
inc
add
sbb
pop
sbb
cmp
stc
imul
pop
cmp
pop
shrl
jae
sub
ds
xlat
outsl
cmp
pop
stos
push
dec
add
sbb
insb
jl
push
ds
or
mov
repnz
jmp
lcall
scas
cmp
stc
and
jle
cs
mov
sbb
and
clc
lret
aad
mov
nop
cmpsl
mov
xor
popa
cmpsb
pop
pop
and
mov
sahf
arpl
iret
pop
xor
mov
out
add
sub
and
adc
adcb
cmp
adc
mov
adc
sub
cwtl
adc
add
das
cmp
lahf
xorl
cmp
add
xchg
mov
pop
and
cmpsl
repnz
mov
xchg
adc
mov
dec
cmc
aam
ss
in
and
xchg
je
hlt
ljmp
cmc
inc
sub
push
xchg
jo
in
mov
mov
push
inc
mov
mov
repnz
cmpsl
adc
fbstp
hlt
jg
arpl
fnstenv
mov
jp
shll
adc
xchg
mov
enter
and
adc
or
clc
bound
mov
lcallw
mov
data16
push
mov
leave
aaa
xchg
jo
sahf
lods
sbbb
dec
movsb
inc
dec
incb
test
mov
loop
sub
pop
in
iret
int3
xor
or
cmc
mov
fldcw
test
xor
dec
imul
iret
cmpsb
jmp
adc
std
jo
push
in
push
inc
or
cmp
dec
lahf
cli
js
cmp
pop
adcb
das
dec
cltd
rcrl
push
mov
aas
xchg
mov
aas
xchg
fs
push
sbbl
cmp
shr
data16
push
xrelease
mov
push
in
gs
or
sarl
mov
pop
addr16
es
mov
test
outsb
xchg
sub
xorl
xchg
mov
repnz
subl
dec
push
movsl
jg
push
dec
xor
sub
in
pop
in
dec
xor
outsb
test
xchg
filds
shll
or
loopne
cwtl
add
pop
cmp
inc
add
mov
xor
out
fldenv
scas
dec
mov
and
pop
fsubrs
es
xchg
subl
stc
xor
xor
ljmp
jno
jl
pop
das
test
mov
jno
add
push
jl
cmp
lods
xchg
out
push
inc
sbb
sbb
jne
cmp
sahf
ret
xlat
int
pop
loopne
mov
sub
xchg
pop
test
data16
pop
in
or
sub
fmul
fmull
popa
sahf
mov
push
xor
lahf
xor
jle
adc
bound
mov
xor
repnz
and
and
mov
in
das
push
or
and
clc
jae
inc
aas
rcl
inc
fprem
leave
pusha
ret
in
mov
xor
scas
popa
shll
repnz
mov
cmpsb
mov
pop
cmp
sbbl
pop
mov
mov
sbb
fcoms
outsl
push
xlat
jno
jns
or
sarl
mov
mull
stc
je
lahf
lds
jl
pop
outsb
pop
dec
mov
rcrl
in
xor
push
push
rol
daa
stc
leavew
fldenv
outsl
popf
sub
cmpsl
sbb
ret
stc
dec
jne
mov
xchg
push
test
sbb
test
pop
outsb
inc
pushf
imul
pop
or
ret
lret
or
bound
ret
stos
sub
in
out
sbb
mov
jge
rcr
mov
call
loope
push
push
mov
inc
filds
movsl
cmp
mov
lock
orl
mov
outsb
std
fsts
lds
mov
sbb
ds
lods
mov
adc
ds
push
enter
sub
ja
mov
and
mov
dec
std
adc
fbstp
pop
out
jne
je
ja
cs
adc
or
xlat
and
add
shl
or
pop
fbstp
lods
int3
addr16
or
cmp
test
pop
add
add
jns
lock
jmp
arpl
inc
std
in
pushf
and
push
in
notb
pop
mov
pop
repnz
sbb
insb
andl
cmc
dec
int3
test
pop
push
push
insb
inc
sbb
sub
dec
std
mov
push
shl
pop
in
insl
mov
push
mov
fmulp
inc
sbb
dec
loop
lock
push
push
cld
out
jae
pop
fistps
jae
cmp
int
pop
or
scas
jb
pop
aam
adc
xor
ja
mov
test
jg
mov
xchg
test
out
dec
sub
adc
and
inc
repnz
mov
mov
cmp
fidivrs
mov
lods
test
popf
cs
jnp
pop
adc
loopne
mov
sbb
loopne
ret
mov
rcll
fmul
dec
aam
dec
rorl
pop
jecxz
call
push
mov
lds
shr
mov
dec
out
dec
test
adc
cwtl
popa
push
push
pop
lahf
fmulp
pusha
or
rol
mov
scas
mov
shrb
mulb
adc
dec
pop
jo
lret
push
dec
loop
or
data16
movsl
or
inc
test
scas
cmp
dec
dec
rorb
es
movsl
loop
xchg
in
push
push
lds
aaa
xchg
les
cmpsb
push
sub
leave
icebp
test
ficomps
lods
or
lea
aam
pop
add
pushf
ljmp
jl
xor
bound
out
stos
or
clc
mov
ret
test
addr16
inc
rcr
mov
and
daa
pusha
popa
clc
fadd
ret
push
std
jg
das
mov
test
xlat
hlt
jno
jns
adc
in
aaa
aam
fstpl
mov
out
stos
dec
movsb
push
stc
movsl
hlt
std
sbb
dec
fisubrl
dec
ljmp
mov
je
lods
lcall
inc
or
xor
arpl
jno
mov
popf
lret
orb
test
cltd
int
mov
jmp
in
inc
add
repz
ret
fdivl
or
mov
mov
adc
xchg
or
adc
rolb
and
add
dec
sbb
lret
pushf
cmpb
or
popa
fimuls
xchg
shrb
je
mov
sbb
mov
lds
test
es
nop
cmpsb
xchg
push
fdivs
popa
clc
add
out
pop
jb
cmp
xor
sub
je
cmpsb
testb
test
jo
inc
das
mov
sbb
imul
call
xchg
inc
nop
out
sub
pop
jmp
test
stc
fidivs
dec
popf
mov
fxam
push
hlt
push
mov
cs
insb
jo
stos
mov
fidivrs
pop
pusha
and
out
inc
mov
popf
cmpsl
sti
cmc
gs
shrl
add
add
mov
lret
add
jmp
fstps
mov
inc
imul
int3
mov
sub
jo
push
adc
rorb
push
out
pop
lock
add
mov
pop
shrl
pop
fistpll
mov
movd
sbbb
or
enter
mov
loopne
add
push
out
xchg
leave
jns
imul
cs
add
sti
adc
xor
scas
jb
loope
imul
lock
or
jb
movsb
leave
addr16
cmp
aaa
push
xchg
cs
lahf
in
fildll
cmp
pop
inc
push
inc
sub
bound
sub
or
repnz
cmpsb
sub
pop
fdiv
push
sub
jmp
test
push
xor
mov
repz
dec
push
jb
push
movsl
imul
fs
shrl
and
cwtl
mov
lret
sub
mov
mov
pushf
jmp
lret
pop
scas
enter
mov
pop
sbb
jbe
aaa
xor
lret
mov
std
inc
xchg
add
je
rsqrtps
xchg
sub
mov
push
ret
inc
out
cmp
push
gs
cs
mov
jmp
push
mov
mov
inc
pop
jecxz
enter
push
push
mov
pop
fcmovnbe
sti
rclb
std
push
mov
add
das
jl
adc
mov
and
mov
jne
mov
dec
push
in
sub
cmp
adc
sahf
xlat
dec
push
movsl
jge
stc
cmp
clc
mov
in
mov
and
insb
add
inc
jbe
mov
xchg
add
aam
imul
popf
jno
sbb
lret
testb
mov
jp
mov
enter
lcall
js
push
movsb
xchg
movsl
ret
inc
cli
push
in
pop
test
cmpsb
arpl
lds
fimuls
pop
out
mov
xchg
shrb
adc
mov
or
cmp
jbe
fcmovne
adc
jg
cmp
test
leave
pusha
ror
inc
inc
push
mov
mov
test
loop
stos
stos
daa
mov
adc
inc
push
pop
cld
mov
sub
mov
shlb
loopne
test
imul
lds
xor
data16
cltd
lret
and
fimuls
int3
jg
out
mov
mov
sub
lds
mov
pop
inc
jp
jne
lea
fwait
enter
repnz
in
loope
mov
out
les
pop
jmp
loopne
pop
mov
sbb
add
cli
xor
movsl
sub
pop
cmp
inc
fs
out
addr16
aad
pop
ss
in
out
cs
clc
mov
outsl
loop
sbb
sub
jb
xchg
sub
jo
dec
sbb
into
mov
inc
subl
inc
es
sbb
dec
inc
lea
fdivl
push
hlt
ja
sbb
das
mov
mov
movsb
cmp
jecxz
hlt
lcall
add
outsl
testl
pusha
movb
das
repnz
fstpt
in
mov
sarb
je
push
inc
or
adc
icebp
sbb
int3
inc
das
adc
pusha
and
enter
mov
fdivl
stos
imul
jb
cwtl
lret
jle
mov
or
pop
push
inc
xchg
xor
lea
js
sub
cmp
push
mov
daa
aas
insl
cltd
mov
cltd
inc
and
imul
lock
add
out
mov
jbe
je
insl
sbbb
or
xchg
push
mov
pop
xor
xchg
mov
pop
insl
icebp
xor
cmp
loopne
adc
enter
ljmp
xlat
popf
push
mov
loop
testb
sbb
test
or
stc
mov
stos
data16
call
ljmp
shrb
inc
jecxz
loope
push
xor
sar
cmp
lret
addr16
push
cltd
rcrb
aas
mov
outsl
aad
add
pop
sbbb
or
sbb
push
in
pop
mov
xchg
cmp
scas
sub
shr
arpl
lret
mov
mov
push
mov
adc
push
les
je
ja
enter
sub
mov
push
jae
icebp
lcall
fldl
mov
mov
fsubrp
xchg
mov
push
rolb
in
repz
loopne
adc
adcb
sub
in
sub
push
or
fdivp
lahf
div
repz
lods
mov
mov
adc
out
js
adc
cld
push
aas
push
pop
dec
xchg
jns
popa
stos
push
sbb
in
jne
jns
add
sub
xchg
push
mov
out
fdivrs
cmp
sarb
jle
cmp
notl
cmp
pop
jp
stos
xchg
sbb
lret
int
sti
sbb
or
inc
sbb
js
scas
pop
add
add
sub
cltd
dec
cwtl
cs
in
pop
outsb
push
sahf
jbe
sbb
mov
int
cmp
repnz
cmp
orl
adc
mov
adc
or
sahf
mov
lods
push
pop
lret
fidivrs
jae
sbb
mov
cld
outsb
push
adc
decb
and
dec
outsb
jbe
jo
ret
aam
call
inc
inc
jbe
gs
mov
cmc
push
lods
cmp
adc
negb
dec
rorb
sbb
cmp
into
enter
repnz
dec
fs
mov
fwait
push
movsb
cmc
push
or
push
outsl
sub
aam
sbb
push
cmc
pop
push
mov
xchg
lods
inc
mov
ror
jge
jne
in
jecxz
popf
cli
push
imull
ret
mov
or
mov
call
sub
inc
iret
fstpt
mov
aaa
scas
or
dec
das
es
adc
cmp
push
popf
and
mov
jp
sub
dec
sub
stos
cs
inc
shr
push
inc
cmp
in
xor
cmp
mov
push
movsb
jl
das
cmpsl
testl
pop
sahf
mov
iret
cld
shlb
pop
sub
mov
into
xchg
arpl
adc
stos
js
pop
jae
cmpsl
cli
rcr
insl
fsts
push
and
cli
jae
mov
cmp
decl
xor
sub
imul
pcmpgtb
setns
xor
xchg
in
stc
scas
dec
and
shlb
into
dec
daa
inc
sub
pop
shrb
push
mov
std
xor
mov
lea
lahf
xor
mov
or
out
into
mov
stc
or
or
icebp
mov
mov
inc
pop
shl
sti
outsb
icebp
xchg
push
add
push
mov
pop
mov
cltd
je
popf
xor
jecxz
jo
and
adc
sbb
pushf
pop
push
push
fcoms
add
jb
cmp
int
out
stc
adc
push
pop
out
mov
pop
in
xor
jmp
idivb
jge
mov
mov
push
fldcw
dec
jp
cmp
push
add
cmp
pop
sub
adc
push
add
jg
mov
and
push
outsl
push
inc
in
in
pusha
lret
jo
sti
mov
xlat
ret
dec
stc
sahf
and
je
orb
adc
addr16
cmp
or
mov
cmp
mov
lret
and
push
test
mov
aas
or
shlb
xchg
sar
cltd
out
lds
mov
fsubs
cmp
or
mov
das
cmp
sahf
xchg
aam
mov
fildll
push
fildll
cmc
pop
mov
and
or
mov
cltd
or
or
and
sbb
enter
mov
adc
scas
js
jg
mov
outsb
rcll
nop
mov
lods
sbb
mov
inc
in
lcall
fisubrl
xchg
jnp
daa
aam
sahf
xor
cmc
scas
push
mov
xchg
cs
xchg
xlat
jmp
and
insl
fists
outsb
inc
or
mov
push
in
xchg
pop
inc
enter
push
repz
ret
pop
icebp
in
and
sub
shlb
pop
stc
cmpsl
sbb
sub
xchg
jge
ss
movhps
mov
or
cmpb
std
into
xchg
test
adc
icebp
jl
jl
ljmp
jno
mov
jne
push
mov
push
xor
popa
jecxz
inc
xchg
or
in
gs
and
dec
mov
dec
shl
lret
sbb
dec
fcompl
flds
xor
mov
and
out
movsb
aas
sti
addr16
stos
pusha
sub
xchg
bound
insl
in
jge
pusha
push
jbe
jmp
xchg
pop
test
fnstsw
adc
mov
stc
mov
movsl
ret
or
sub
mov
push
sub
pop
mov
notb
mov
push
clc
mov
imul
out
imul
pop
lods
mov
mov
cli
xor
lods
jp
mov
ficoms
clc
push
jecxz
pushf
dec
nop
lods
inc
ret
cmp
lret
lods
pop
scas
cmp
pusha
inc
data16
pusha
arpl
int
jns
sub
jns
push
nop
aam
pop
lods
or
cld
out
jns
sub
xchg
jge
sub
mov
add
cmpsl
popl
push
in
sbbb
inc
in
decl
outsb
test
cmpsb
rcl
push
enter
pop
bound
in
sbb
in
into
pop
add
dec
sub
jp
sarl
bound
mov
jle
cmpsb
push
mov
cmp
testb
iret
jne
cmp
stos
js
sbb
call
decb
stc
test
cli
data16
sub
cltd
js
test
addr16
stos
sub
ljmp
stc
mov
push
in
xchg
lahf
ficompl
xorb
icebp
sti
or
inc
adc
out
push
data16
pop
jbe
rclb
das
fs
push
adc
std
int3
and
sti
mov
adc
pushf
mov
push
xor
pop
movsb
divl
sub
push
sbb
int3
dec
sub
xor
outsl
repz
xchg
rorl
ss
xchg
loopne
daa
into
push
outsb
cmc
je
and
in
stos
inc
cmp
subb
sahf
pop
xor
fdivl
push
xchg
addl
fadds
andb
inc
daa
inc
sbb
lret
out
aas
push
jbe
mov
xchg
xchg
test
stc
fcmove
cmp
into
test
xadd
mov
fdiv
cmp
mov
inc
jo
cmp
mov
cs
mov
pop
imul
hlt
xchg
shrb
mov
ja
sbb
test
jbe
cmp
lcall
movsb
ljmp
xor
push
sub
xor
jmp
xor
out
pop
xor
jbe
mov
loopne,pn
stos
push
ds
stc
cmc
je
data16
sub
jns
jle
and
pop
push
inc
add
popf
imul
jge
cld
fisubrs
jae
mov
ja
pop
pop
sub
sbb
adc
mov
int
call
or
push
icebp
imul
xor
mov
fpatan
jp
insl
test
imul
adc
pop
add
jg
movsl
and
mov
mov
fwait
orb
call
sbb
push
lods
dec
pop
jbe
mov
aas
clc
cmp
out
fwait
pop
cmp
push
and
and
std
dec
push
insb
inc
rcl
iret
lock
push
lods
mov
cld
lret
mov
inc
aam
pop
movsl
in
pushf
and
adc
mov
inc
insl
cmp
jo
int
push
mov
test
aaa
into
gs
add
and
prefetchw
dec
in
push
int3
sub
pop
outsb
mov
push
mov
mov
adc
les
push
xlat
xor
adcb
mov
xchg
lods
xchg
or
mov
enter
inc
movzbl
inc
lret
dec
mov
mov
in
mov
jl
add
and
andl
sbb
sub
aas
cltd
mov
loopne
cmp
sub
or
dec
and
jg
in
dec
ret
inc
inc
inc
inc
sbb
pop
dec
gs
xor
cmp
call
shlb
rcrb
icebp
jg
lods
adc
push
inc
rcrl
fistpl
sbb
mov
fidivl
rorb
in
les
negb
imulb
sti
insb
or
dec
push
mov
push
out
out
add
test
add
loope
inc
and
cli
lret
jb
add
popa
jp
shrb
pop
adc
jle
mov
xchg
inc
adc
lahf
inc
or
mov
ljmp
sub
stos
cmp
pop
cmc
xchg
pop
or
push
divb
mov
mov
pop
aas
xor
jp
pusha
sub
xchg
add
cmpsl
mov
into
pop
out
jno
pop
arpl
pop
add
and
inc
inc
inc
imulb
jmp
ret
xor
jmp
adc
xlat
sbb
push
dec
add
iret
jecxz
push
popf
or
push
popa
dec
fadd
cmp
hlt
push
js
push
adc
pop
loopne
mov
push
lods
and
adc
or
push
cwtl
sahf
jb
mov
push
sarl
ja
xor
xchg
out
andb
jg
adc
int3
mov
pop
cmpsl
and
in
pop
sbb
mov
iret
add
fucomi
xchg
xor
mov
and
ret
cmc
ja
insl
add
cltd
mov
pop
lcall
cmp
jecxz
add
xor
xchg
sbbl
nop
sub
mov
movsb
cli
pop
xor
scas
inc
sti
jbe
psadbw
stos
nop
vxorpd
jbe
adc
icebp
xchg
jmp
in
jns
pop
aas
and
imul
and
outsl
aad
push
rolb
popa
add
cmp
cwtl
out
sub
aad
ret
daa
outsl
pop
call
sbb
out
fcomps
aad
adc
inc
mov
arpl
insl
popf
repnz
or
xlat
xchg
sub
popf
mov
cwtl
movsl
lods
jg
mov
aad
mov
jecxz
push
mov
in
jge
lea
outsl
lcall
std
inc
adc
jle
xchg
lods
cmpsb
jg
mov
in
add
fs
pop
rol
xchg
sbb
lds
lea
sarb
add
xor
pop
and
insl
push
cmp
jnp
outsl
add
repz
jmp
ss
xchg
dec
sub
jno
xlat
shl
or
mov
popf
dec
mov
add
cmc
popa
and
mov
test
sarl
iret
sti
les
pop
aad
xchg
call
push
add
icebp
inc
nop
lea
loope
adc
sbb
out
icebp
sbbb
inc
out
add
or
in
mov
daa
xchg
aam
sbb
aam
add
out
jnp
cld
or
andl
loopne
xchg
mov
ret
sbb
xchg
pop
xor
dec
cmp
jb
jnp
popa
mov
dec
cmp
mov
imul
movsl
ret
insb
scas
repnz
lret
push
xor
repz
testb
xchg
je
sbb
or
data16
test
jg
pusha
test
dec
lret
lods
push
push
loop
jg
dec
push
pop
addl
push
mov
sbb
pop
scas
out
aaa
add
add
mov
lret
mov
and
inc
sbb
push
dec
jge
push
ja
jae
sub
pop
adc
fsub
sbb
mov
cli
sti
push
mov
cmp
lods
in
xlat
sub
mov
mov
xchg
inc
repz
sbb
jmp
push
or
fcomi
stos
orb
pop
fmul
mov
arpl
cmp
add
aad
mov
dec
mov
or
add
xlat
sbbb
add
jg
xor
mov
lods
adc
dec
inc
sub
repz
or
and
sti
jg
push
stos
inc
pop
mov
add
ja
int3
push
int3
popf
lods
adcl
jae
bound
pop
jl
push
movsl
cmp
sbb
or
andb
shrl
push
mov
jp
in
adcl
hlt
sti
mov
push
arpl
pop
xor
mov
pushf
call
aaa
dec
inc
xchg
sbb
bnd
pop
sub
cmp
imul
xlat
mov
pop
fsts
lret
xor
jns
adc
iret
cmc
cmp
push
xchg
fcmovnu
addr16
popf
inc
inc
in
sbb
or
push
sbb
add
pop
xchg
andb
insl
insl
aam
push
je
cmpsb
pop
loopne
rclb
inc
fiaddl
arpl
mov
mov
sub
jns
dec
inc
adc
fwait
popf
mov
mov
xor
std
in
rclb
fdivs
lds
and
clc
or
jl
sahf
xchg
dec
fbstp
sahf
ficompl
push
sub
add
ret
or
cmp
xchg
sub
xchg
push
cwtl
addl
mov
scas
push
int
xchg
push
fnstenv
ljmp
sbb
and
mov
fstpt
mov
adc
push
adc
mov
addr16
xchg
push
testl
jmp
or
pop
pop
ss
icebp
sub
xor
mov
fistl
add
dec
sbb
push
mov
inc
mov
ret
mov
add
and
aas
les
daa
or
jle
leave
into
mov
sbb
xchg
mov
pop
fnsave
xlat
scas
scas
sti
inc
into
lods
sbb
pop
fs
xor
cmp
inc
jecxz
mov
dec
in
call
rolb
mov
jbe
loope
idivb
push
lret
xlat
mov
sarl
mov
mov
push
mov
pop
dec
cmp
cmc
leave
scas
sub
ljmp
out
stos
push
popf
jo
mov
and
cmpsb
fistpl
cs
shll
push
xor
lds
adc
ret
ljmp
mov
cltd
test
xlat
sbb
mov
mov
push
ret
ret
ret
popa
xor
mov
push
ljmp
test
cmp
je
pop
cmp
add
or
jmp
out
cmp
lahf
bound
cld
cltd
loop
call
addr16
mov
insl
sahf
lret
sub
shl
adc
mov
dec
mov
cmp
xor
add
xor
pusha
cmpsl
and
cmp
testb
roll
mov
imul
aam
inc
lods
xor
test
mov
sti
fwait
and
icebp
fs
jmp
jae
and
imul
movsl
pop
or
mov
loop
scas
gs
pop
lahf
adc
popa
std
pusha
add
mov
push
inc
cmp
jo
adc
mov
std
sub
pop
fwait
movsb
pop
sub
inc
aaa
mov
dec
fbld
data16
in
push
and
das
jo
int3
mov
outsl
call
hlt
adc
fisubs
add
inc
jmp
mov
mov
pop
cwtl
daa
push
insb
lods
inc
stos
xchg
sti
ret
pop
sbb
dec
dec
jl
imul
mov
dec
jg
mov
sub
into
xchg
cmpsl
sbbb
jne
lcall
cmp
and
rcr
lret
hlt
jnp
push
pop
popf
mov
mov
dec
push
pop
cmpsl
ds
pop
ret
sub
mov
imul
das
lock
loope
in
xor
xor
cmpsb
out
cmpsl
mov
dec
stos
imul
sub
mov
ds
stos
in
pop
test
push
adc
aas
and
xor
int3
mov
icebp
mov
fcomps
mov
jp
popf
adc
fidivl
rolb
dec
mov
cmc
xchg
pop
xchg
xchg
stos
xchg
cmpsl
fstpt
pop
mulb
jo
sbb
lods
repz
add
sbb
sub
pop
sahf
popa
pop
outsl
xchg
stc
pop
push
sbb
mov
cmp
rorb
adc
push
sbb
ret
clc
cltd
rcr
push
es
ss
xchg
add
daa
push
jo
add
popf
daa
mov
pop
mov
das
lock
into
pop
ja
jae
pop
inc
push
out
jne
loop
notb
sbb
cmpsb
ds
popa
arpl
pop
sbbb
adc
xchg
or
lret
jl
lods
lods
aas
rcrb
xchg
je
inc
sbb
cmpsl
add
ja
dec
fadds
mov
jae
testb
xchg
sbb
xor
test
flds
or
inc
push
push
jmp
mov
pop
sahf
movsl
lods
fsts
mov
mov
inc
jb
in
push
xchg
mov
popa
mov
mov
cmpb
sub
adc
inc
div
push
sub
cmp
scas
mov
jne
int
push
xchg
ret
xlat
jmp
bound
dec
sbb
das
jne
cmp
insb
inc
addr16
inc
out
cwtl
push
and
cld
cmpsl
lods
push
mov
sar
inc
fwait
test
push
add
mov
shlb
lret
mov
pop
fstp
je
mov
xchg
das
sub
mov
adc
inc
push
pop
imul
sbb
mov
pop
lahf
loopne
aam
pop
xor
pop
xlat
push
adc
lods
push
or
mov
jl
loope
fldenv
stc
cmc
or
mov
push
imul
imul
add
xor
insb
cmp
cmp
inc
pop
mov
and
fstps
inc
push
fwait
out
cmp
lahf
dec
sbb
in
mov
cwtl
cmp
mov
test
and
push
cmpxchg
mov
jmp
and
xor
mov
xchg
movsb
lods
push
ja
shrb
xchg
sbb
fsubp
sbb
gs
add
inc
sbb
daa
ljmp
jno
mov
adcb
jo
lock
pop
inc
pop
ss
dec
mov
sbb
jmp
ret
outsb
add
insl
cld
xchg
lret
lock
int
out
flds
mov
out
scas
out
inc
pusha
push
cmc
mov
lods
xchg
and
pop
mov
mov
xor
mov
mov
mov
jmp
in
rcll
xor
out
sbb
lods
hlt
or
dec
xchg
adc
lret
inc
push
sahf
in
jmp
inc
lock
push
in
into
sbb
aam
sbb
sbb
stos
notb
cmp
jmp
sbb
in
in
mov
jo
movsl
push
sahf
mov
cwtl
push
push
jge
xchg
inc
fbstp
jmp
sahf
and
and
pushf
dec
out
call
adc
dec
lock
push
lds
add
mov
xchg
jmp
movsl
jp
dec
lods
mov
push
js
subb
lret
inc
ror
imul
lock
mov
xor
or
fsubrl
mov
pop
xor
sub
pop
sti
out
insb
aas
mov
call
les
jo
outsb
ss
push
mov
imul
cmp
pop
aad
push
repnz
lret
lret
mov
leave
jl
int
inc
cmp
nop
test
inc
jmp
jae
and
mov
mov
inc
sub
mov
mov
pop
jecxz
nop
xchg
shll
mov
mov
inc
dec
mov
jg
rcrl
cld
dec
push
add
xchg
imul
push
aaa
mov
and
pop
pop
popf
sub
sbb
xchg
push
je
pop
mov
push
xor
sti
dec
xorb
jge
jmp
lods
mov
cmp
mov
popa
sarb
idivb
je
mov
jb
mov
jns
scas
call
nop
sbb
adc
lock
push
xchg
pusha
cmp
outsb
sub
test
imul
gs
mov
cmpps
inc
shr
ja
sub
pusha
and
push
test
xchg
sbb
push
shrb
xor
xlat
mov
sbb
sarl
adc
sub
jecxz
ret
push
or
sub
lea
and
iret
orb
cs
push
mov
pop
lods
jmp
xchg
ja
es
sbb
jae
xor
jle
inc
ds
js
push
ss
mov
data16
pop
push
out
iret
mov
xchg
push
mov
dec
push
xchg
push
sarb
mov
xorb
scas
fistl
jg
rcrl
mov
std
inc
pushf
lock
and
sahf
and
add
das
cs
mov
das
dec
inc
jecxz
int
pop
push
outsl
dec
mov
add
sub
pop
mov
inc
adc
dec
and
jp
int
jns
and
in
daa
adc
inc
lcall
push
insl
push
in
cmp
xchg
xchg
and
fcmove
mov
movsl
jmp
add
mov
ja
or
addl
and
push
je
push
mov
int
pop
ljmp
fxtract
imul
adc
push
jbe
js
insb
pop
dec
ret
pop
sarb
dec
xlat
sub
mov
outsb
insl
pusha
pop
pop
cmpsl
adc
mov
pushf
add
and
fdivs
ficomps
sub
ret
test
mov
sub
or
jg
daa
enter
icebp
adc
cmpsb
ret
fidivrs
fdivl
ret
call
aad
push
push
fadd
les
xchg
xorb
daa
lahf
xchg
mov
cmp
sbb
aam
fistps
jecxz
dec
dec
push
cmpb
iret
mov
add
adc
adc
sbb
mov
fucom
dec
shrb
ret
mov
and
xlat
mov
mov
iret
mov
ret
sbb
sti
mov
xor
adc
mov
mov
jp
or
sbb
leave
sub
imul
mov
icebp
pop
popa
jbe
mov
ret
add
mov
decb
jmp
jle
and
inc
fnsave
imul
mov
test
jae
mov
popf
sti
xchg
jg
ds
data16
idivl
icebp
in
mov
or
pop
xor
push
inc
rclb
and
lods
inc
or
lret
popa
add
ret
imul
aad
scas
pop
mov
or
sub
loope
xchg
call
mov
or
push
add
ss
sbb
adc
push
inc
popf
ret
testl
sbbb
mov
popa
mov
or
mov
push
in
in
add
lret
mov
mov
stos
int3
sub
test
push
jne
dec
xor
push
adc
mov
inc
push
xor
add
cwtl
push
jo
mov
clc
and
dec
mov
sbb
inc
and
push
xchg
xchg
sub
xchg
rolb
popa
mov
adc
dec
sub
jp
arpl
jg
inc
pop
inc
mov
sub
popf
rcl
enter
pop
mov
sbb
adc
in
and
jmp
hlt
ss
dec
sub
mov
push
int
or
std
xorl
xor
push
in
mov
xchg
dec
and
ret
jae
in
dec
daa
jl
ret
push
push
push
push
mov
xchg
lret
dec
dec
lds
pop
mov
mov
push
sahf
sbb
mov
jecxz
nop
out
fstl
movsb
cmp
das
enter
cmp
nop
imul
lock
shll
ret
cmovg
sub
pusha
dec
lahf
add
mov
les
sti
cld
outsb
adc
mov
andb
push
lods
mov
divl
sub
push
add
pop
xchg
iret
push
mov
push
push
lea
test
ja
jmp
popa
das
cltd
shlb
adc
adc
repnz
fistps
push
cmpsl
sti
fadds
inc
push
mov
or
mov
fistps
xchg
xchg
shll
insb
jmp
hlt
mov
dec
out
jle
pop
insb
sub
jle
lahf
sub
xor
jecxz
imul
cmc
imul
xchg
xchg
mov
movsl
mov
subb
int3
aas
dec
arpl
lods
cs
push
dec
fs
aas
lock
imul
sub
or
in
jns
pop
stos
cmp
test
jge
cmpsb
mov
int
in
push
inc
cltd
aaa
imul
mov
in
or
in
iret
pop
cmpsb
inc
inc
insl
jbe
push
out
pop
adc
jbe
inc
jl
shrl
insb
jnp
pop
push
jnp
jle
bound
mov
mov
aad
add
pop
jmp
add
notl
shlb
je
aaa
mov
pop
ret
aam
push
fcompl
or
nop
outsb
xchg
mov
add
loope
adc
ret
jecxz
add
out
cltd
test
daa
in
jp
jge
add
inc
mov
mov
adc
jecxz
cmpsl
xor
mov
ficoml
cld
jae
pop
lock
ret
scas
sbb
test
add
mov
and
adc
sub
cmp
push
mov
dec
pop
adc
inc
je
pop
xor
jo
xor
push
rcll
sub
std
ficoml
sbb
out
adc
push
push
outsl
clc
mov
push
jg
mov
xchg
adc
xchg
in
sub
push
cs
push
xlat
aas
pop
or
loope
insb
push
push
push
or
jl
lods
cmpsl
pop
inc
enter
push
scas
jo
push
ss
aas
loope
cltd
call
in
jnp
xor
sbbb
test
sbb
jge
into
mov
dec
mov
xchg
and
test
repnz
out
popa
push
cwtl
adc
jno
pop
mov
jae
pop
outsl
shr
test
das
cmp
fcomip
imul
addr16
adc
pop
cltd
stos
xorl
bnd
sbb
xchg
and
or
jo
jmpw
pop
mov
adc
lret
lock
bndstx
dec
pop
dec
stos
aaa
cwtl
stc
jbe
insl
test
int3
insl
cmp
dec
es
dec
mov
pop
jbe
shll
or
push
shlb
mov
cwtl
das
imul
fsubrl
popa
sub
loop
adc
imul
daa
xchg
bnd
pop
xor
outsb
push
stos
adc
xchg
or
test
and
cli
mov
pop
push
push
or
lahf
push
js
xchg
jp
push
into
jne
or
xchg
mov
ja
and
dec
hlt
es
mov
mov
jge
adc
pop
les
dec
pop
mov
ficompl
xchg
mov
insl
jge
out
fwait
xchg
sub
jbe
test
mov
and
ret
mov
cltd
xor
push
in
mov
rolb
fiadds
ljmp
push
add
adc
stos
xchg
xlat
int3
movsb
sub
sbb
sti
or
lods
nop
scas
mov
fildll
aad
pop
mov
or
xor
sub
in
pop
pushf
mov
cmp
sub
stc
sarl
pusha
loop
adc
mov
clc
push
xor
imul
push
test
and
pop
adc
shrb
leave
xor
mov
pop
mov
lods
icebp
jne
push
cmp
cltd
cmp
pushf
out
xchg
xor
mov
cmp
adc
cmp
jae
dec
pop
cwtl
rcl
or
add
mov
sbb
mov
xlat
and
cld
inc
inc
pop
cmc
jne
call
ljmp
int3
mov
add
adc
clc
insl
mov
cmp
in
test
test
mov
js
dec
je
into
pop
push
sbb
lret
and
out
xchg
push
mov
and
or
mov
fwait
aam
dec
jo
movsb
cmp
cltd
or
jmp
dec
sbb
push
mov
xlat
outsb
aam
dec
and
cmp
sbb
movb
mov
push
sbb
iret
inc
jns
pusha
pushf
orb
scas
sbbb
mov
cli
lcall
and
push
or
jp
cli
inc
andl
arpl
rorl
ret
shll
nop
daa
movsl
jns
int3
sub
dec
repz
pop
clc
push
cmp
dec
dec
stc
out
aaa
hlt
into
dec
in
cltd
gs
adc
insb
sbbl
lds
addb
jb
push
test
pop
leave
fxch
dec
das
inc
mov
adc
pop
stc
pop
cmp
dec
lods
push
sbbb
fildl
out
fmuls
lret
sar
pop
inc
sahf
xchg
and
call
in
lods
sti
or
cmp
gs
pushf
pusha
aas
mov
cmp
fwait
or
mov
imul
lret
mov
insb
insl
mov
and
xor
add
sub
push
push
jecxz
ret
cmp
adc
addr16
dec
jmp
push
xchg
sbbb
or
mov
mov
xchg
mov
sti
sahf
xchg
leave
or
int3
cmp
mov
sbb
cmpsb
sbb
daa
gs
jle
mov
mov
mov
jbe
sub
iret
pop
jne
cmp
add
adc
and
push
outsl
scas
sub
rorb
je
jmp
loope
cs
jo
sub
push
xchg
lock
movsl
popf
dec
popf
xchg
inc
dec
fisubrl
xor
mulb
dec
popa
mov
inc
jle
ljmp
mov
lcall
mov
pop
ljmp
insl
ret
jmp
popa
clc
cld
push
outsb
and
dec
cwtl
daa
sbb
xchg
push
fcoms
push
cmc
cmc
xchg
lret
inc
int
sbb
fisubs
hlt
lret
push
in
mov
lods
cltd
test
push
fidivl
out
and
xor
icebp
xchg
ds
orl
dec
sbb
jp
sbb
mov
hlt
add
sub
dec
mov
scas
inc
mov
mov
inc
ss
pop
aaa
sub
orb
outsl
jge
or
jae
mov
and
xchg
mov
sub
jae
dec
movsl
gs
sbb
arpl
xor
mov
adc
mov
pop
in
jmp
ss
imul
bndldx
loop
hlt
mov
shrl
xchg
cmp
xchg
insb
mov
pushf
xor
sub
shlb
dec
mov
xchg
out
mov
inc
add
out
repz
stos
add
lods
xchg
and
mov
movsl
jo
pop
or
idivb
insb
cs
data16
sbb
mov
out
mov
adc
sub
or
dec
dec
mov
push
or
push
mov
inc
fsubs
jmp
pusha
div
jb
push
outsb
fwait
sbb
test
fidivl
push
aas
aas
scas
lods
ret
mov
mov
popa
rorl
or
adc
pop
add
dec
and
xchg
cltd
pop
mov
fs
lock
pop
mov
inc
cld
xchg
cmp
movsb
cmc
mov
push
jecxz
incl
lcall
mov
pop
sub
push
pop
ds
sbb
dec
fstpt
cmc
pusha
xor
leave
frstor
nop
stos
sbb
addr16
test
or
cmpsb
lret
mov
fdivs
or
aaa
das
jne
and
pop
xchg
lods
addb
sbb
lret
cmpsl
mov
mov
scas
dec
adc
adc
sub
test
js
bound
jns
inc
add
les
xchg
xchg
idivl
and
mov
into
addr16
jb
popf
mov
xchg
stc
inc
and
adc
out
and
sub
cmpsb
testb
xor
add
inc
das
sub
cmc
push
sbb
fnstcw
fs
lods
xchg
inc
dec
lahf
mov
int
mov
adc
pop
fptan
movsb
push
mov
pusha
mov
lret
imul
add
dec
and
fstpl
test
shll
and
xchg
out
jbe
adc
mov
arpl
pop
mov
fyl2x
mov
pusha
in
or
in
cmp
aad
pusha
jp
shrb
lret
cld
ljmp
push
add
jbe
jb
nop
rolb
sbb
mov
sub
subl
mov
out
out
int3
pop
lods
push
xor
inc
fcompl
jg
mov
xor
movsb
mov
mov
lock
inc
push
popf
arpl
movsl
cmp
leave
xor
test
add
cmpsb
mov
out
dec
jns
xchg
stos
outsl
outsb
adcb
cwtl
sub
fxch
dec
fs
dec
add
cmp
lcall
mov
inc
ficoms
xchg
imul
add
wbinvd
inc
sbb
xor
pop
dec
in
in
ljmp
sti
xor
xchg
lods
sbb
mov
mov
aas
mov
or
push
mov
and
andb
test
pop
push
adc
addb
push
fsubs
mov
mov
adc
inc
adc
mov
in
pop
lock
push
dec
push
popa
push
popa
lock
or
or
push
aad
xor
mov
or
inc
xchg
push
test
imul
cli
test
cmp
data16
mov
addr16
inc
push
add
xchg
pop
je
sbb
cld
rcr
je
sub
inc
ljmp
lock
pop
mov
mov
sub
mov
sbb
jno
mov
adcb
jmp
lahf
pop
xchg
rorb
sahf
out
add
cmp
push
fcomps
push
or
icebp
xchg
test
inc
push
xor
dec
sbb
jge
pop
scas
imul
sbbb
push
fadd
mov
xchg
add
insb
rclb
ret
sub
push
rcrl
xorb
aaa
and
leave
adc
mov
lahf
cmpsb
sub
orl
cs
imul
inc
xchg
daa
outsl
gs
sahf
aam
scas
xor
jbe
pusha
stos
push
dec
jecxz
into
xchg
dec
add
lods
ljmp
pushf
mov
pop
into
mov
mov
mov
aam
leave
outsb
inc
xchg
stos
jmp
out
mov
imul
out
fnsave
pop
out
addr16
push
sub
or
xor
lods
andb
test
push
cli
mov
popa
loopne
inc
rol
in
nop
xor
ret
iret
loop
lret
adc
mov
icebp
push
mov
fsts
sarl
lret
jo
jne
sbb
test
mov
mov
adc
push
fsubs
mov
mov
push
xor
loope
sub
enter
je
pop
dec
scas
jno
out
int
inc
add
mov
js
xchg
daa
jo
test
xchg
scas
push
lcall
add
dec
fists
xchg
es
movsb
cmc
popa
lock
inc
mov
mov
gs
inc
and
scas
sahf
mov
sti
popl
ss
test
hlt
leave
into
or
loope
sub
dec
inc
push
jae
mov
jbe
outsb
adc
addr16
mov
sbb
xchg
push
pushf
popf
push
add
lret
sbb
lahf
gs
mov
or
sub
adc
or
clc
cmp
add
inc
jb
xor
add
cmp
negl
pushf
stc
adc
bt
inc
mov
ljmp
mov
cmpsl
xor
pop
push
in
sti
cmove
adc
push
sub
add
pop
jb
cmp
clc
adc
cs
xor
ret
pop
outsl
repnz
fdiv
inc
push
sbb
dec
into
std
push
xchg
pushf
aad
dec
mov
aas
push
clc
jbe
push
das
and
popa
pop
mov
xchg
jmp
adc
mov
pop
xor
pop
outsb
mov
and
stos
shrl
js
jae
andl
sbbl
mov
scas
imul
cmpsb
in
adc
outsb
inc
adc
mov
cmpsb
jmp
and
cltd
xor
cmp
cmp
xor
sbb
inc
cmpsl
pop
pop
adc
pop
loopne
les
jl
aas
mov
mov
cld
or
sahf
mov
stos
mov
adc
add
mov
pop
imul
push
bound
lods
mov
dec
into
ds
les
insb
es
and
jno,pn
jmp
mov
stos
xor
sahf
std
ljmp
cmp
imul
xchg
repnz
jbe
arpl
push
adc
cmp
leave
pop
ret
inc
jo
cs
jmp
mov
jle
push
cmpb
mov
mov
push
adc
ss
sarl
loopne
pop
adc
jnp
cmp
sub
sbb
or
or
add
movsl
inc
mov
push
rorl
push
cmp
cmc
jl
cmpsl
sti
dec
and
mov
adc
push
mov
cmp
scas
mov
dec
loopne
add
push
inc
mov
pop
inc
xchg
int
jo
and
cs
ret
or
pop
sbb
xlat
sbb
sbbb
jp
push
mov
xchg
sbb
stc
test
push
in
cmp
out
fists
leave
jo
xor
xlat
clc
xlat
and
lcall
idiv
fisubs
rcll
and
cmc
push
lret
stos
test
enter
sbb
enter
das
inc
or
inc
arpl
lret
in
popf
inc
js
fmul
lret
and
add
push
mov
push
sub
fldl
and
cmp
jno
add
xchg
icebp
daa
xchg
cli
push
insl
and
rol
lods
inc
test
lret
int3
and
and
je
daa
cmpsl
ret
or
pop
fwait
or
xchg
in
mov
and
push
push
add
sub
test
popa
mov
jo
pop
ja
movsb
inc
pusha
cltd
fcos
push
in
push
je
daa
add
inc
sti
or
rcl
daa
mov
xchg
mov
push
addr16
jge
add
in
ljmp
cmpsb
enter
imul
cmpsl
test
push
orl
ja
and
cmpsb
ret
test
sub
aad
popa
dec
mov
inc
fcmovu
rcll
mov
cld
popa
add
in
cmp
les
mov
arpl
dec
repz
repz
lods
cmp
jecxz
cltd
enter
cmp
mov
sbb
pop
dec
add
add
fildll
or
insb
rorb
scas
movsl
out
adc
sbb
data16
les
mov
pop
outsb
in
test
pop
adc
addl
jp
loope
pop
ds
mov
in
fsubrs
pop
nop
fsubrp
aad
mov
or
ret
mov
or
lea
cld
lahf
and
and
test
fimull
and
out
jp
inc
inc
and
out
dec
aas
loop
jns
xchg
pop
pop
or
adc
sbb
xchg
mov
mov
xor
push
pop
lods
mov
pop
inc
call
jge
outsb
shl
mov
jge
xor
jecxz
shl
dec
push
pop
mov
or
cmpsb
fdivl
pop
cmp
or
pop
and
pop
dec
pop
shlb
ret
jp
out
bound
rcr
je
jg
cmp
popf
sti
mov
mov
fdiv
and
lods
std
shll
stos
jno
sbb
add
xor
jg
dec
mov
aad
cli
jne
mov
filds
je
js
aam
lods
adc
or
jle
pop
lods
xorb
leave
mov
push
hlt
mov
insl
add
pop
lods
mov
insb
inc
or
mov
out
lahf
dec
jb
fucomip
out
jg
mov
sub
daa
xchg
push
bound
fnstsw
outsl
sbb
repz
out
mov
push
mov
int
sti
aam
inc
je
dec
mov
test
fldt
test
rorb
arpl
insl
mov
adc
aaa
xor
mov
fwait
jo
dec
sub
and
jecxz
sub
imull
xchg
or
add
out
push
addr16
addr16
inc
cwtl
and
dec
mov
shll
call
sub
pop
ret
dec
loopne
and
loop
and
rcrb
jmp
mov
out
add
sub
lds
push
cmpsl
or
inc
lcall
and
popa
xchg
mov
mov
out
pop
and
cmp
xor
pop
mov
ljmp
bound
sti
push
or
xlat
sub
je
mov
es
lcall
and
push
nop
imul
test
pushf
cld
pushf
loope
fisubs
clc
cltd
push
rcrl
or
mov
cmp
add
mov
mov
mov
lcall
and
push
movb
push
insl
xlat
sub
ss
pop
push
inc
push
cmp
ret
shrb
lea
pop
icebp
push
enter
push
adc
jnp
and
add
xchg
sbb
jmp
inc
dec
lahf
xchg
xor
nop
sarb
sbb
push
or
xor
insl
fs
fistps
mov
xor
mov
jge
inc
xchg
enter
push
dec
mov
pop
ret
dec
inc
icebp
xchg
hlt
gs
add
adc
cmpsl
hlt
in
lret
mov
dec
stos
jp
pusha
mov
adc
hlt
pop
mov
adc
fisttps
or
andl
call
lods
adc
jbe
ja
mov
adc
andb
adc
or
js
mov
outsb
push
inc
push
push
or
dec
dec
xchg
repnz
sbb
fwait
dec
xor
enter
js
adc
inc
jge
leave
fidivl
into
mov
or
push
mov
adc
cmp
repz
or
and
and
in
ret
jae
flds
mov
push
add
stos
mov
cwtl
scas
inc
out
into
les
sub
in
mov
dec
cmp
fucomip
data16
pop
jns
mov
shrl
push
fmul
pop
fimuls
data16
fldl2t
jo
adc
orb
sti
inc
or
mov
mov
imulb
inc
lret
loope
adc
es
push
xchg
pop
dec
mov
mov
adc
int3
sub
adc
lahf
mov
inc
mov
or
nop
stos
xor
or
testb
add
dec
push
push
inc
lahf
add
fmul
push
jg
push
popa
inc
adc
lahf
data16
cmp
mov
ret
inc
add
pop
jno
gs
iret
jecxz
xor
std
imul
lock
and
xchg
xor
out
outsb
adc
adc
add
jbe
ds
ss
test
roll
movsb
stos
in
pop
xor
sbbb
xor
jle
int3
and
sub
int
xor
scas
add
and
mov
outsl
and
mov
or
in
call
int3
mov
sub
xchg
cs
movsl
fdivl
xchg
xorb
add
xchg
inc
cmpsb
dec
pop
jo
cltd
pusha
mov
mul
sub
aad
into
push
int3
push
outsb
fists
je
or
sbb
xor
mov
inc
cmp
cs
daa
call
push
jbe
test
push
push
ss
jb
sbb
ret
testb
sub
inc
ss
cmc
jl
loop
cmpsb
jns
mov
outsb
push
rolb
mov
xchg
je
mov
leave
xor
mov
push
cmpsl
xchg
call
xor
lods
dec
mov
mov
lds
xlat
push
mov
jo
and
pop
cmp
shrl
test
inc
ljmp
adc
push
cmp
arpl
and
jno
push
stos
aaa
stos
call
push
ds
pusha
mov
and
adc
lcall
dec
icebp
arpl
lock
lods
and
push
ja
xchg
and
daa
popa
pop
mov
popl
insb
mov
sbb
add
orl
pop
mov
andb
rol
jnp
adcl
mov
ja
shlb
or
test
pop
push
add
xchg
jmp
sbb
cmp
jo
les
sbb
aam
mov
push
loop
cmpsl
cmp
hlt
add
gs
cmp
scas
pop
add
dec
inc
arpl
mov
or
popf
pop
fsubs
in
cli
pop
daa
mov
stos
inc
pshufw
mov
ljmp
xchg
jmp
addr16
jns
out
dec
in
mov
scas
gs
dec
and
hlt
mov
int
in
shr
mov
inc
dec
and
lock
push
icebp
jns
shlb
ljmp
cmp
fwait
test
cwtl
out
test
or
inc
jecxz
mov
sub
mull
mov
adcl
in
outsl
fwait
xlat
pop
test
movsb
mov
imul
jne
add
daa
push
daa
je
outsl
or
xchg
mov
push
subb
or
or
pusha
mov
movsl
bndstx
jp
jnp
fs
testl
or
xchg
ljmp
xor
int
cld
in
test
push
ljmp
pop
int3
and
inc
gs
push
mov
loope
in
add
add
mov
dec
test
dec
and
push
or
mov
mov
jp
sub
jl
mov
rcrb
pop
fistpll
push
ret
testl
testl
jns
enter
dec
dec
push
adc
cmp
jae
pop
push
cmpsb
lahf
dec
adc
mov
sbb
cmp
lahf
dec
or
jae
scas
mov
and
mov
das
divb
lea
out
fistps
mov
jge
sbb
imul
jns
sahf
sbb
mov
aam
dec
leave
das
shll
imul
xchg
je
adc
push
mov
mov
mul
xchg
cmp
lahf
ret
and
pop
icebp
aam
xor
add
mov
jge
scas
lcall
mov
loopne
inc
inc
mov
outsb
repz
or
mov
add
cltd
cmpb
test
mov
xor
dec
cmp
data16
mov
add
inc
xchg
jle
ret
xor
push
shl
aaa
jl
mov
add
popf
mov
iret
dec
or
jo
roll
jne
adc
sub
mulb
and
fcoms
mov
outsb
ret
insl
ret
outsb
pop
pusha
repz
xlat
mov
xchg
cmp
sub
mov
xchg
in
dec
pop
and
aaa
xor
rcr
push
and
sti
rclb
js
enter
jge
adc
fisubrl
rcrb
pop
leave
and
out
das
mov
jbe
cltd
pop
addr16
jno
mov
mov
ret
pop
es
adc
pushf
sbb
dec
pop
jp
jecxz
data16
loopne
icebp
arpl
dec
or
inc
pop
add
mov
inc
and
jns
out
popf
inc
adc
mov
cmp
add
mov
xor
sarb
mov
xchg
mov
mov
test
push
cmp
mov
jle
cmp
dec
mov
sub
cmp
call
ss
out
or
cmp
clc
test
inc
scas
sub
dec
or
or
or
dec
sub
lret
and
sahf
push
xbegin
rcrb
in
insb
xor
loop
pop
inc
mov
pop
test
enter
or
adc
xlat
jbe
mov
les
add
fadd
pop
push
int
adc
lock
leave
hlt
pushf
repz
clc
push
sti
fldl2e
and
jne
adc
lds
push
xchg
fdivr
mov
jno
in
into
pop
xor
mov
data16
movsl
push
xchg
pusha
add
or
ret
push
push
mov
pop
add
aaa
push
sub
in
test
pop
test
ret
mov
ljmp
sub
sar
jae
loope
cmp
test
xor
ja
out
or
push
aas
fisubrs
fdivrl
insl
cwtl
ss
das
adc
cmp
mov
jle
and
mov
lret
mov
insl
rcrb
lret
sahf
jnp
sbb
mov
push
add
adc
lock
lret
jg
data16
push
repnz
out
cld
sahf
rcll
adcl
daa
mov
pop
js
loopne
pop
mull
arpl
mov
lcall
stos
add
xor
js
add
divl
xor
mov
mov
int3
adc
and
add
jmp
or
sub
cmpsl
int
sti
jle
pop
add
mov
outsl
fs
mov
or
repnz
add
xor
dec
mov
int
lcall
pop
aad
int
outsl
push
mov
inc
fsubr
inc
xor
mov
icebp
push
in
pop
push
psubw
aas
out
jecxz
adc
mov
jg
outsl
or
pop
sbb
and
ret
hlt
lret
mull
movsl
shl
xorl
mov
push
ss
movsl
add
shlb
xchg
jg
sbb
mov
insl
adc
push
and
pop
xlat
jp
cmp
cli
and
sub
shl
lret
pop
push
jl
mov
cltd
inc
inc
inc
inc
pop
mov
or
mov
or
test
sub
scas
xchg
cs
das
xchg
pop
jb
mov
popa
push
jb
jnp
loopne
mov
test
into
jbe
hlt
nop
out
push
mov
mov
scas
xor
frndint
xchg
scas
std
push
cmp
push
push
repz
or
cmp
xor
and
ds
sub
xchg
dec
jle
stc
mov
mov
mov
popa
cltd
out
xor
cli
iret
gs
gs
insl
in
push
out
out
stc
xor
shlb
push
pop
inc
inc
mov
pop
sub
shll
lock
inc
shrl
xchg
adc
faddl
mov
rcrl
sub
mov
ljmp
dec
pop
xchg
stos
and
cmp
inc
fxch
cltd
push
fcmove
jmp
adc
mov
xchg
icebp
dec
iret
fildl
ret
fsubl
sbb
mov
popa
push
iret
daa
mov
push
loop
push
repz
sub
out
es
lahf
in
outsb
sbb
ds
add
fbld
mov
fwait
mov
int
adc
inc
inc
mov
inc
in
fisubs
jne
sub
stos
fcoms
lds
jns
mov
lds
or
mov
rorl
sbb
and
mov
jnp
xor
lahf
pushf
xchg
push
out
mov
stos
test
mov
push
jle
pop
cmp
cltd
adc
xchg
rcrb
nop
mov
xlat
imul
fildll
int
cmc
jnp
push
cmp
push
dec
cmp
scas
mov
popa
in
out
cmp
sbb
xor
add
mov
out
loop
addr16
mov
sahf
rclb
movsb
test
mov
push
fnsave
mov
rcl
push
jo
pop
inc
lcall
and
cmp
jmp
xor
rcrb
xor
mov
decb
into
and
add
dec
push
dec
push
inc
jge
pop
add
xchg
xor
enter
repnz
shrl
das
lahf
mov
jae
orb
lods
mov
dec
xlat
andl
jo
push
fwait
cmpsb
push
mov
mov
jmp
adc
push
push
dec
leave
sbb
call
and
xor
xchg
test
fwait
pop
icebp
cmpsb
add
stos
dec
jmp
outsb
mov
and
out
push
fstl
pop
ror
or
scas
or
rclb
cmpb
sub
int3
inc
xchg
mov
xchg
push
add
test
jae
decl
add
jp
dec
adc
mov
xchg
imul
dec
stc
mov
mov
je
sbb
in
cmp
cmp
aaa
xchg
arpl
mov
mov
cltd
xlat
lods
adc
test
jbe
out
mov
push
lock
or
daa
aas
ss
sbb
push
clc
xchg
dec
subl
sbb
aaa
dec
bound
xor
mov
cli
mov
xchg
pop
sub
jb
cmc
pop
mov
stos
cli
inc
scas
cmp
notb
inc
stos
mov
jb
push
out
xor
mov
lods
push
or
inc
inc
and
out
aaa
pop
adc
lds
cmpsl
xlat
bound
push
inc
out
inc
or
stos
enter
fidivs
jns
cmp
inc
lods
js
call
out
xor
stos
inc
or
fwait
test
pop
pop
loopne
fwait
pushf
mov
mov
cmp
test
mov
insb
lcall
sub
lds
negl
lret
add
ljmp
in
add
mov
scas
lds
sahf
pop
mov
and
inc
inc
jns
xchg
std
xchg
mov
subb
push
in
or
lret
adc
cs
scas
push
adc
addr16
xorb
add
in
jl
inc
jp
mov
iret
push
mov
and
in
aad
mov
push
jle
movsl
scas
jae
pop
mov
movsl
pop
outsl
xor
mov
lret
mov
in
and
push
test
bound
ficomps
sub
and
ror
repnz
sub
jge
or
mov
xchg
xchg
popf
ja
std
and
xchg
pop
adc
aad
dec
mov
test
push
mov
into
push
sbb
lahf
cmc
mov
daa
sbb
pop
jns
push
test
pop
cmc
xor
call
test
pop
movsl
cmp
cmpsl
or
and
inc
or
or
dec
mov
adc
out
xor
loope
inc
push
loopne
pop
cli
xchg
xchg
dec
sub
fnstenv
dec
sub
and
jge
rcrb
mov
ja
ror
aaa
hlt
ja
inc
pop
dec
dec
jae
loop
mov
mov
pop
movsb
xchg
test
imul
cmpsb
push
and
push
cmp
mov
jg
pop
dec
js
pop
lret
testl
jo
rorl
add
jnp
add
pop
or
call
push
jae
rcr
dec
insl
jge
jae
test
ja
jmp
out
pusha
fcmovnbe
push
pop
dec
iret
jns
dec
mov
adc
ficoml
dec
inc
popf
push
dec
out
push
push
lock
lods
hlt
gs
stos
stc
or
insb
jl
jns
mov
sbb
cmp
mov
out
fsubrp
xor
xor
fwait
sub
cmp
ret
shlb
and
gs
xchg
and
frstor
add
cmp
lea
mov
dec
fsts
cmpps
mov
cs
fcomps
sub
mov
jno
lods
bound
pop
lret
scas
les
gs
outsb
shlb
xchg
stos
adc
inc
dec
xor
dec
pop
ret
fsubs
outsl
scas
ret
jnp
or
xchg
nop
in
cmp
into
andl
lret
je
cmp
scas
ret
add
or
test
imul
out
sbb
test
xor
scas
cmp
shll
add
outsl
add
faddl
pop
rcrb
mov
push
ret
loope
jmp
lahf
and
shll
inc
xlat
xor
fadd
pop
fisubl
pop
insl
jmp
xchg
adc
mov
fsts
icebp
pop
mov
sbb
dec
retw
outsl
ficoms
mov
cmp
pop
jno
mov
repnz
daa
fs
add
iret
leave
dec
cmp
shl
inc
call
add
adc
xchg
scas
sbb
and
and
sbb
jns
jle
jmp
sub
add
xor
dec
mov
fidivrl
mov
out
sub
jne
mov
leave
cmc
xlat
call
jno
stos
into
cmpsb
jae
push
push
hlt
xor
or
mulb
mov
dec
adc
sbb
icebp
cmpsb
popf
addr16
test
push
sahf
cltd
mov
xchg
addb
std
add
xor
in
mov
pop
adc
mov
xchg
xchg
ror
xchg
cmp
sbb
add
aaa
loopne
dec
lahf
push
and
cmpsb
mov
jno
push
aaa
mov
pusha
pop
xchg
aad
or
push
mov
outsb
lret
fwait
push
ds
fwait
arpl
pop
sub
or
xchg
and
out
lock
xchg
mov
test
xchg
adc
cmp
loopne
ss
aam
push
mov
rcl
inc
mov
iret
mov
mov
fcoms
mov
pusha
add
es
std
cs
cmp
mov
xchg
mov
sbb
int
fdivs
mov
and
bound
loop
cmp
popa
jle
mov
sub
iret
aaa
add
mov
push
adc
clc
xchg
cmp
cmp
das
pop
imul
lock
inc
sbb
and
push
jp
cmp
and
mov
sub
xor
and
je
inc
jl
pop
jl
mov
lret
pop
sub
sarb
stos
push
mov
push
sub
jmp
jae
je
mov
mov
mov
xchg
jmp
sti
xchg
and
or
mov
push
loopne
mov
dec
fcoms
add
stos
loop
cmp
mov
add
mov
xchg
ret
adc
data16
leave
mov
or
cltd
out
and
sbb
cmp
jbe
xchg
pop
ret
test
lcall
push
fsub
mov
or
push
shl
dec
int3
or
xchg
cmp
outsb
outsb
insl
fimuls
fldcw
push
push
mov
mov
push
jno
xchg
inc
sub
jl
das
pop
mov
imul
push
jg
jmp
jbe
jp
add
sbb
jmp
stos
insl
push
bt
movsb
sub
sub
cmc
push
pop
addl
enter
test
mov
ret
fxch
pop
fcomps
pop
add
lret
jb
mov
mov
xlat
fnstcw
idivl
aad
push
push
xchg
aas
add
jbe
cmc
mov
mov
push
fsubs
test
stos
in
push
mov
popf
or
cmp
sbb
push
cwtl
je
dec
jae
inc
movsl
insb
mov
mov
mov
sbb
mov
insl
push
call
cmpsl
and
sahf
lcall
stos
jns
add
jle
jge
push
scas
mov
pushf
rorl
add
addl
inc
mov
data16
idiv
gs
mov
rcl
lock
psraw
rcll
lods
sub
push
xor
movsb
push
dec
mov
repz
outsl
aam
test
xchg
mov
sub
rolb
and
stos
xor
cmpsb
cld
out
mov
test
mov
sahf
sbb
aas
and
sub
mov
test
and
inc
add
aam
and
je
out
insb
sub
sbb
add
ja
xor
and
mov
mov
mov
fcmovbe
insl
lods
sub
xchg
fdivr
mov
xor
or
and
adc
enter
jns
jb
movl
mov
lods
pop
or
push
negb
jge
sbb
loopne
std
adc
cmp
testl
out
sub
mov
lea
and
ret
sub
jo
loop
jnp
in
pop
imul
sub
mov
lret
dec
add
dec
inc
adc
push
push
or
jge
jnp
cmp
aas
ds
fidivrs
inc
imul
lods
push
cmp
cwtl
fldenv
test
adc
movsl
stos
popa
mov
pop
and
mov
cwtl
daa
jp
push
pop
mov
fabs
dec
pop
arpl
jp
test
pop
imul
xor
cmp
or
int3
out
jb
xchg
aam
or
es
pop
or
xchg
pop
imul
popf
jae
adc
pushf
mov
stos
jmp
cmp
inc
jae
fwait
arpl
inc
gs
out
mov
push
lods
rol
sti
fwait
xor
inc
xchg
push
or
sahf
or
push
cmpl
out
loopne
sub
pop
xor
cmp
pop
jp
enter
out
pop
bound
and
insl
push
pop
push
jne
popf
out
decl
into
and
mov
sahf
std
lods
clc
shrb
cmp
cmc
mov
stc
mov
inc
jmp
jg
push
and
sub
test
jno
sub
xchg
sahf
pop
adc
inc
mov
jbe
xchg
mov
nop
gs
ret
xchg
pop
cmc
pop
das
call
adc
jg
loope
cs
lea
ljmp
das
cld
arpl
mov
popf
cmp
add
cmp
sahf
pop
pop
xchg
sbb
add
shlb
subl
xorl
inc
jo
arpl
lods
cmp
mov
dec
and
mov
ficompl
cmpsl
dec
mov
pop
gs
cmp
gs
lret
push
and
test
jmp
je
add
subl
fsub
cmp
icebp
add
hlt
mov
fisttpll
push
xor
inc
fcmovu
push
sbb
jbe
lcall
inc
int
mov
jns
push
fucomp
jns
inc
lods
lods
jle
and
lahf
lods
mov
loopne
aam
es
fdivrl
int
inc
lret
hlt
adc
shl
mov
outsl
cmp
aaa
push
pop
mov
cmpsb
sbbl
lea
aaa
mov
lret
aad
ljmp
test
js
push
xchg
push
xor
mov
push
add
adc
xor
scas
call
test
and
into
sub
leave
pop
inc
fnstsw
jns
les
mov
jecxz
jnp
decl
mov
aam
lods
push
and
int
fs
cmp
fadds
cmp
lods
or
fstpt
mov
push
fnstsw
gs
mov
and
push
sbb
enter
mov
or
loope
mov
push
insb
lret
mov
in
lea
inc
cmp
adc
xchg
pop
xchg
shll
cmpsb
ja
test
ret
and
sbb
lods
jge
adc
mov
fsubrl
sahf
sub
popf
jg
xchg
or
subl
pop
add
in
cmpsl
push
fstps
lahf
jbe
cmp
shrb
std
cltd
dec
repnz
fcomps
aam
jb
jp
dec
mov
or
xor
popa
cmpsl
stc
lcall
inc
jp
stc
cmp
push
lahf
lret
rorb
sti
cltd
dec
pop
notl
sub
lds
adc
jge
mov
mov
mov
ret
push
lds
xchg
rorl
ja
in
dec
sbb
ds
jbe
and
pop
cld
outsb
ret
and
pop
mov
movsl
andb
lods
repz
pop
xchg
into
adc
popa
sbb
sbb
insl
std
insb
btc
cltd
inc
ss
inc
sub
call
test
stos
out
xchg
outsl
std
aad
push
rclb
jne
outsl
mov
mov
out
fnstsw
hlt
mov
lea
cmp
mov
pushf
cmp
adc
outsl
mov
fisubrs
lds
cs
xorl
mov
mov
pslld
push
xor
out
cmp
pop
sahf
mov
push
sahf
pop
xchg
hlt
jg
pop
adc
cmc
aas
pop
mov
lahf
mov
ret
mov
cmpsb
push
dec
push
mov
outsl
or
mov
arpl
mov
test
mov
sbb
adc
add
fcomps
xor
inc
mov
hlt
xchg
jmp
jnp
ret
inc
std
pop
jge
sub
cli
daa
ds
and
mov
sbb
xchg
lds
fstps
xor
mov
addb
or
cmp
sahf
mov
jmp
rclb
aam
rcll
or
aaa
imul
adc
inc
sbb
adc
xchg
test
movsl
ror
sti
xchg
aad
lcall
pop
xchg
decl
mov
icebp
adc
popa
inc
push
into
leave
sbb
leave
xor
lret
lret
mov
test
aam
gs
jae
inc
sub
aas
ret
popf
test
and
mov
pop
orl
femms
adc
aad
mov
mov
cs
cld
or
xchg
jo
mov
push
xor
arpl
dec
mov
cs
je
fldcw
or
stc
inc
sub
movsb
fdivrl
rcl
aaa
arpl
push
ret
push
orl
sub
lret
sahf
outsl
push
roll
rcl
fsubs
mov
lock
addr16
in
mov
inc
outsl
movsl
cmp
gs
xchg
std
pop
out
push
lcall
xorb
cli
jne
cmpsl
inc
sti
or
fdivrs
call
cmp
xor
sbb
dec
xor
scas
lea
fisttps
cmpsl
xor
jle
out
mov
gs
ror
pop
add
rorl
jmp
movsl
addr16
sub
push
push
sti
push
mov
sarb
cmp
stc
push
mov
mov
jb
mov
mov
dec
xchg
cmp
inc
jp
add
fmuls
push
jg
inc
fidivrl
sarl
outsb
arpl
cmc
cmp
std
push
xor
jne
repz
fstpl
xchg
outsb
sub
jnp
rcrb
rcl
pop
es
das
imul
loope
xor
imul
cltd
sbb
insl
ficoms
lret
sub
scas
jl
and
dec
jns
in
mov
mov
inc
ficoml
xor
aad
and
ficoml
aam
mov
jae
inc
mov
lret
imulb
outsb
adc
pushf
repz
sbb
repnz
imul
imul
jmp
dec
bound
mov
xchg
test
push
lods
movsb
sbb
sbb
mov
in
adc
sti
gs
ret
rolb
scas
fwait
sti
sti
cmp
mov
adc
fs
loope
ret
lods
and
adcb
ja
movsl
jg
mov
cmpl
sub
or
sub
out
inc
adc
mov
mov
pop
cmp
leave
mov
inc
push
pop
popf
lock
cmp
aam
xchg
pop
ds
push
mov
hlt
jg
push
ret
arpl
push
outsl
rcrb
mull
aaa
and
add
inc
xlat
pop
or
push
jns
imul
pop
pusha
dec
addr16
push
and
xchg
leave
jecxz
and
aad
or
fiadds
sti
mov
addr16
pop
addr16
add
mov
aam
cmp
push
add
std
loop
imul
jae
mov
xchg
push
fidivs
adc
inc
ret
inc
test
test
std
imul
cmc
mov
mov
push
adc
sahf
cmp
adc
roll
push
xchg
bound
push
fcomip
cmp
inc
insl
shlb
dec
fisttps
scas
mov
loope
cmp
es
movsb
loopne
push
icebp
clc
adc
xchg
adc
and
int3
xchg
mov
push
loopne
test
add
or
fidivl
sub
ds
sbbl
pop
xor
xchg
mov
inc
int
mov
sbb
and
dec
out
pop
push
xor
outsl
xor
jo
js
inc
xchg
push
ljmp
aaa
or
and
sub
in
xor
movsb
scas
nop
imul
cmp
inc
dec
test
clc
pushf
jle
lret
pusha
xlat
xchg
lods
cmpsl
out
test
in
stos
push
mov
fwait
in
xchg
mov
into
int3
lcall
sbb
mov
xchg
in
fbstp
scas
pop
xchg
sub
mov
pop
mov
cmp
pusha
loope
rclb
lret
cmp
pop
push
nop
pop
or
adc
jmp
aaa
shrl
cmp
pop
ds
in
sub
pop
cmc
mov
gs
jl
test
or
jae,pt
dec
and
stc
add
and
lds
jae
icebp
jle
movsb
mov
in
jmp
sbb
add
cmp
add
aaa
sub
push
dec
inc
inc
out
fwait
xor
pop
gs
inc
mov
cld
push
xor
xlat
nop
lea
mov
mov
je
ja
repnz
cmp
xor
pushf
mov
push
movsl
std
push
pop
jb
js
mul
add
inc
ja
std
pop
int
mov
jle
sub
cs
out
jle
mov
clc
test
push
mov
arpl
lock
inc
mov
pop
cwtl
popa
cmp
xchg
andb
aam
pushf
mov
mov
test
jbe
rorl
xchg
shrb
dec
test
out
outsb
dec
daa
mov
lds
and
popf
test
outsl
mov
inc
nop
lcall
data16
pushf
lahf
aam
sbb
adcb
pop
xchg
mov
jno
nop
lea
dec
outsb
les
insl
add
pop
aam
mov
out
je
sbb
dec
sbb
push
mov
cmpb
jbe
popa
sbb
dec
cld
fidivl
lahf
movsb
bnd
clc
xchg
inc
cltd
push
movsl
out
jne
imul
ja
imul
cwtl
cmpsl
sub
repz
xchg
jge
and
ja
stos
jbe
ja
xor
movsl
sub
cli
pop
aaa
push
clc
xor
sub
dec
aad
aam
scas
mov
jle
adc
add
push
jne
in
rol
fidivrl
scas
cld
cmp
sbb
inc
sbb
test
mov
outsl
mov
jns
outsl
divl
adc
dec
mov
jmp
ror
jecxz
je
jns
cmp
shrl
or
xor
mov
in
and
mov
mov
jno
adc
int3
shl
sbb
jg
cwtl
out
lea
mov
dec
cli
mov
adc
lods
inc
outsb
insl
adc
xchg
cmp
in
hlt
mov
mov
add
inc
pop
xchg
add
fstpl
jne
or
movl
sub
mov
mov
in
loope
mov
push
or
jp
pop
sub
push
mov
repz
ljmp
call
adc
inc
or
dec
sbb
pop
fwait
adc
add
cs
pop
fimuls
or
cmpsb
out
xchg
jg
fbstp
cmpsl
ret
xchg
mov
pusha
cmpsb
pushf
xchg
jmp
jp
add
mov
sub
pop
shlb
mov
xor
dec
imul
mov
testl
loope
fldenv
aad
loope
int
cmpsb
push
sbb
insl
loope
pop
mov
popa
outsb
push
lret
inc
in
enter
lret
sbb
sbb
jl
mov
fists
je
pop
imul
scas
testl
mov
jge
mov
and
outsl
loope
push
fidivl
push
mov
push
lea
fucomi
js
ret
ljmp
daa
jle
xlat
hlt
push
mov
xchg
add
jge
aaa
sub
test
mov
adc
loop
pop
dec
push
movsl
dec
insl
imul
add
xchg
sbb
mov
shll
scas
ret
xor
cli
repz
lahf
ss
dec
jae
jo
cmp
xchg
add
cwtl
mov
insl
lcall
repnz
aam
incl
lods
xlat
ja
xchg
sbb
movsl
mov
adc
stos
jnp
mov
data16
cwtl
ret
mov
pop
out
add
popa
out
jns
rcll
mov
cmpsb
lea
lea
repz
sub
loop
mov
arpl
jne
mov
jae
test
outsb
jnp
cmpsl
mov
push
xor
xchg
cmp
rorl
sbb
adc
shrl
sbb
jl
push
sbb
mov
idivb
stos
in
repz
xorb
mov
adc
mov
ficoms
pop
jo
mov
sub
jge
test
adc
fistl
fcoms
xorl
pusha
jnp
xchg
mov
movl
mov
ss
inc
inc
es
inc
fldl
pop
xor
push
jmp
mov
shlb
icebp
mov
pop
outsl
add
leave
mov
push
mov
out
or
pop
dec
daa
fsubs
xchg
dec
shrb
adc
push
mov
cwtl
jb
push
jne
cmp
mov
sbb
fcomip
ja
xchg
mov
addr16
cmpsb
jns,pt
cmp
les
in
mov
cmpsl
and
sti
ja
sub
lock
pop
lret
mov
push
out
test
sub
mov
or
mov
je
iret
and
push
ret
adc
and
xchg
add
and
adc
int
sar
or
fs
push
aam
mov
loopne
push
dec
xchg
push
cmpsl
cmp
adc
dec
push
jnp
scas
mov
mov
in
test
cmp
adc
sub
push
mov
movb
mov
scas
and
dec
fcomps
test
dec
pop
enter
sahf
mov
xor
push
test
inc
loopne
in
jl
add
in
sbb
fiadds
sbb
or
adc
popf
xchg
push
dec
ficoml
aas
ror
and
inc
fs
adc
inc
add
sub
push
rolb
nop
push
popf
es
push
pop
jg
pusha
mov
mov
push
push
push
lret
out
jae
fdivl
or
inc
stos
movsl
jnp
xchg
cmp
adc
ljmp
mov
aaa
ret
jmp
clc
or
rcl
push
mov
dec
in
xchg
pop
inc
lock
insl
mov
dec
aas
int3
xchg
xor
test
push
test
mov
mov
jne
mov
adc
pop
data16
les
jns
jecxz
push
enter
icebp
pop
or
xor
test
int3
and
cmp
mov
sti
dec
jp
scas
sbb
lahf
and
sti
jmp
adc
fiadds
xor
xor
or
jns
pop
mov
lea
repz
and
lds
nop
mov
rclb
xlat
outsb
jecxz
fnstsw
sub
mov
inc
repz
incl
loopne
sbb
out
outsb
das
repz
insb
dec
icebp
les
jbe
jg
inc
cmp
jnp
mov
shrb
mov
xchg
inc
dec
jno
or
jp
pop
jp
shr
adc
mov
call
cmp
pusha
ret
xlat
scas
jno
inc
mov
xchg
sbb
cmpsb
inc
inc
mov
push
jmp
and
orb
inc
hlt
push
imul
lret
popf
mov
lcall
cwtl
push
cmc
ret
lcall
jne
sbb
xchg
xor
mov
sti
xchg
adc
cmp
imull
push
mov
fstl
sub
mov
push
jl
loop
inc
mov
adc
cmp
jp,pt
pop
sahf
dec
cmpsb
lock
fsubrs
adc
test
push
jmp
mov
sub
lods
jg
inc
add
inc
daa
or
fldt
xor
push
sub
xlat
inc
sub
sbb
and
out
rcrl
div
cmp
push
mov
cmp
add
pop
aad
in
xor
lock
xor
jecxz
push
xor
push
aad
inc
push
sbb
fisubrl
sbb
iret
lcall
inc
aas
mov
sub
sbb
push
ret
add
stc
popa
fidivs
mov
inc
pushf
lods
inc
jecxz
mov
cs
fimuls
data16
roll
popf
stc
orb
mov
inc
outsl
jno
fdiv
xor
sar
inc
ljmp
aam
lcall
add
pop
add
add
or
dec
inc
aad
js
nop
daa
pop
sub
cmp
dec
cmpsb
adc
xor
decb
dec
lock
pop
sub
repz
add
adcb
mov
push
and
and
andb
aas
cmc
xchg
in
cwtl
iret
cmp
insl
fbld
mov
sub
rcll
xor
adc
ret
push
inc
repz
sub
shlb
shlb
dec
add
push
cltd
push
inc
scas
push
add
cmp
sub
mov
mov
and
cli
dec
imul
dec
jnp
and
fsubrl
stos
jne
jns
lahf
add
ret
rolb
and
jl
jae
rcl
test
mov
test
cmpsl
rcll
jb
xchg
sub
push
mov
pop
mov
xor
arpl
pusha
adc
push
dec
jmp
mov
mov
dec
dec
pop
testl
add
xchg
dec
mov
loop
jg
push
jg
out
xchg
int
inc
xlat
icebp
cli
pushf
and
push
fldenv
test
clc
test
ss
aaa
sub
js
mov
scas
nop
jle
int3
lods
adc
mov
mov
jecxz
aaa
mov
xorl
add
adc
push
push
jb
test
xor
mov
add
push
frstor
add
xchg
sbb
dec
addr16
adc
mov
and
test
loop
xor
in
sti
into
xor
sarl
mov
mov
cmp
push
lahf
aaa
into
test
dec
pop
pushf
js
add
hlt
xchg
insb
adc
repz
sbb
push
mov
test
or
popl
adc
in
cli
jmp
xor
xchg
adc
or
je
fistpll
call
mov
and
bound
lahf
mov
int
fists
push
ficoml
xor
bound
mov
sahf
ds
out
int3
inc
jl
push
iret
mov
mov
push
sarl
dec
sub
out
inc
add
hlt
call
out
rorb
lock
hlt
call
movsl
mov
dec
xor
hlt
in
sbbl
imul
and
ficoml
xor
icebp
mov
xchg
mov
in
add
xchg
lret
sbb
adc
xchg
lods
lcall
and
scas
into
gs
insb
test
and
mov
outsl
stos
cmpsb
sbb
sub
shrl
jg
cs
ficoml
daa
adc
pop
jno
sbb
cmp
in
in
and
rorl
mov
test
rcrl
out
jo
lock
jne
sub
negl
scas
sub
fcomps
popf
pop
dec
jnp
lret
insb
jns
les
pop
mov
jp
pop
add
lods
and
dec
fstl
seto
outsl
out
dec
cmp
filds
xchg
push
aam
inc
shrb
push
int
fists
sub
punpckhwd
test
outsb
and
out
add
jp
cmpsb
out
andb
sub
loop
imul
clc
pop
leave
out
sti
jl
leave
mov
push
repz
inc
popf
push
push
or
shll
out
mov
out
mov
aam
jnp
jbe
stc
iret
dec
ret
xor
in
loop
mov
jp
cmpsb
xchg
inc
fs
push
addl
xchg
cmp
mov
aaa
stc
pop
push
out
fs
push
inc
pop
lock
sysret
in
xchg
mov
sbb
add
repz
and
mov
fcomps
fcomps
bound
mov
mov
test
jno
or
jb
push
mov
nop
sub
pop
mov
sbb
rcrl
mov
loope
ficoml
out
mov
pop
icebp
decb
xchg
adc
push
push
cmpsb
xchg
fidivl
test
or
out
lock
mov
xor
orl
adc
jae
iret
loope
jns
jle
das
scas
sub
push
fnstcw
lods
inc
dec
xchg
pusha
ljmp
mov
lahf
loope
ds
or
std
push
inc
aas
in
xor
inc
out
jge
shrl
jb
mov
enter
pop
sbb
sahf
cmp
sbb
sbb
repz
clc
test
dec
sbb
mov
mov
call
je
add
out
stos
adc
sarb
sbb
xor
filds
xchg
in
xchg
aad
xchg
xchg
shl
add
shll
daa
add
outsb
ss
cmc
adc
lock
jmp
mov
mov
ds
mov
popf
lods
ja
mov
testl
fwait
scas
xor
mov
imul
xchg
shl
enter
mov
lret
fwait
mov
mov
or
xchg
pusha
test
dec
cmp
clc
cmp
outsb
popa
or
push
lds
pop
jne
test
sub
enter
cmp
popa
jg
orl
inc
jns
hlt
and
xchg
bound
xrstors
imul
cwtl
scas
xor
fwait
mov
push
out
mov
xchg
movsb
leave
fdivs
ror
arpl
outsb
mov
rclb
sbb
and
inc
cmp
jmp
leave
int
mov
fcomi
shll
mov
mov
or
sti
and
or
dec
adc
jl
xchg
push
shll
jmp
aam
lret
cmc
mov
cmp
mov
les
mov
negl
dec
popa
mov
cmc
inc
push
xchg
mov
jbe
sbb
arpl
adc
lret
test
imul
lahf
and
xlat
popf
mov
cmp
in
icebp
xchg
addr16
push
or
push
shlb
xor
and
lods
inc
ss
pop
mov
mov
dec
pop
mov
es
or
mov
int
jbe
movsl
sbb
adc
inc
pushf
clc
enter
mov
lahf
dec
dec
dec
out
push
cs
mov
xchg
ljmp
mov
push
sub
inc
lock
bound
jne
sub
jae
or
shll
and
cmc
outsb
pop
int
fisubs
add
popa
or
pop
pop
cld
lcall
in
xchg
cli
stos
dec
pop
or
subl
rol
add
rol
sub
fwait
outsb
cmp
push
push
mov
or
xor
add
pushf
mov
jle
push
test
inc
fmull
int3
in
hlt
out
fbstp
add
xor
xchg
adc
lock
mov
add
pop
pop
imul
jne
jo
insb
iret
popa
xchg
add
add
popa
ret
sbb
sub
sbb
add
rorl
lea
mov
jb
addb
or
or
adc
clc
pop
sbb
fcmovb
xchg
cmp
xchg
add
repnz
xor
or
and
mov
dec
out
dec
rcrl
mov
sub
push
jno
addr16
mov
insl
add
jne
lcall
and
mov
leave
adcb
fsubrl
bound
mov
mov
fnsave
mov
mov
outsb
cmp
in
jl
pop
mov
jb
dec
xorl
sub
cmpsl
sub
imul
scas
ja
and
insl
xchg
pop
ret
dec
cld
inc
test
inc
nop
pop
xor
xlat
pushf
dec
mov
mov
and
outsl
xor
hlt
jl
sbb
dec
rcl
pop
xchg
jne
xor
dec
fisubs
or
std
lods
and
mov
mov
mov
pop
pop
or
dec
loope
dec
lahf
scas
sub
orb
dec
adc
scas
jno
sub
ret
and
and
cmp
xor
xchg
mov
scas
jg
cmpb
inc
pop
dec
dec
mov
pop
icebp
clc
xlat
and
aad
jns
lret
and
xchg
repz
sbb
es
insl
jo
adc
mov
andb
or
push
aas
dec
sbb
sbb
adc
or
aaa
inc
cmpsl
addl
inc
repnz
inc
aas
cmp
push
inc
insl
or
jg
sub
ss
pop
aas
mov
loop
dec
fldpi
nop
lcall
add
mov
add
in
sub
cmpxchg
xchg
add
mov
ds
mov
push
and
mov
ret
jns
mov
mov
xor
jnp
fldt
cmc
mov
and
fldenv
out
popf
es
adc
enter
pop
cld
aam
xor
loopne
repnz
push
iret
int
push
mov
fstps
jns
in
arpl
xchg
sbb
imul
xorps
mov
fimuls
test
fidivl
push
cmc
aaa
push
sarb
adc
xchg
lods
xchg
inc
mov
dec
dec
in
xlat
loopne
clc
adc
shld
push
inc
and
inc
pop
cmp
movsb
lret
es
in
inc
xchg
test
lret
outsl
push
das
pop
or
or
sub
push
out
jae
pop
int
cmpsb
icebp
sbb
mov
inc
aaa
std
mov
xor
fsubrs
inc
call
and
insl
mov
and
sar
sarl
mov
push
jne
inc
inc
adc
inc
push
enter
aas
dec
sbb
add
js
pushl
push
mov
cmp
sub
movsb
in
dec
in
lds
mov
push
xor
test
js
in
mov
idiv
pusha
inc
or
jb
outsb
and
test
aas
push
push
cmp
int3
jle
fxch
clc
push
je
sbb
orb
or
push
mov
pop
movsl
cmp
daa
les
sbb
cs
jl
add
hlt
inc
jmp
inc
mov
dec
dec
sub
jo
adc
inc
into
subl
push
imul
mov
cmpsl
jp
pop
xchg
add
out
cmp
and
or
push
push
push
mov
ss
xor
loopne
xor
adc
lods
orl
popf
xor
out
xchg
nop
in
inc
mov
add
xor
ficompl
shll
cmp
push
lahf
enter
ja
je
sub
arpl
popl
jnp
stc
ja
negb
adc
sbb
pop
and
mov
cmpsl
push
pop
imul
call
push
test
rorb
lds
insb
and
adc
or
popa
cmp
ret
push
jb
imul
movsl
repz
sahf
sub
push
or
xchg
outsb
loope
clc
stos
fmul
push
sahf
std
sbb
cmp
int3
push
outsb
int
movsl
mov
jecxz
ret
adc
cmp
ret
dec
lahf
xor
cmpsb
adcl
mov
shlb
mov
arpl
push
bound
ss
xchg
and
sbb
mov
cmp
aam
mov
lds
sti
push
mov
shlb
loope
mov
xchg
stc
mov
adc
addr16
push
xor
daa
mov
test
popa
in
loope
es
mov
dec
rcrl
mov
push
jbe
fnstenv
cwtl
popf
lods
jmp
push
mov
loopne
inc
add
and
xor
xor
repz
adc
mov
jmp
xchg
jg
xor
nop
cld
ljmp
ds
cltd
mov
adc
daa
rclb
fwait
inc
popf
sahf
out
mov
add
out
loope
sub
cmp
push
dec
mov
mov
and
inc
pusha
cmp
rorb
add
movl
int3
sub
add
xchg
jge
or
inc
sub
hlt
xor
jnp
clc
fimull
jecxz
lods
out
mov
pop
jge
or
sub
fsts
dec
mov
andl
pop
xchg
in
add
sahf
movsl
xor
xchg
jb
sbb
cmp
jnp
addb
dec
lock
pop
and
fsubrp
or
xor
jmp
cmp
test
outsb
sub
sbbl
js
mov
fmul
dec
shrl
insl
lods
ljmp
pop
popl
sub
push
sbb
or
cmpsl
test
mov
push
daa
insb
sub
mov
fildl
add
xor
sbb
sahf
js
sub
lret
push
movsb
jmp
jno
lock
and
insb
arpl
sbb
scas
shrl
cltd
mov
vcvtps2dq
out
mov
js
insb
mov
push
ljmp
mov
mov
dec
or
test
into
mov
das
fisttps
mov
gs
lcall
sub
ret
sub
xor
stos
xrelease
xor
sbbl
imul
fisttpll
dec
ret
into
push
hlt
lret
add
dec
loop
jo
ret
push
jmp
jle
std
inc
dec
xor
push
and
arpl
rolb
fs
lods
popa
mov
fwait
imul
idivl
mov
lcall
jecxz
adc
cmpsl
ficomps
movsl
pop
push
pop
fbstp
or
loop
nop
pop
shrb
pop
pushf
int
outsl
inc
dec
mov
pop
adc
imul
stos
add
dec
fs
in
adc
mov
and
pop
je
imul
push
movsl
xchg
mull
dec
xlat
hlt
dec
jmp
cmpsl
out
aam
in
stos
jno
and
jbe
xor
cmp
cmc
lods
fmull
mov
dec
dec
addr16
adc
mov
jp
sarl
mov
movsl
push
out
pop
cmp
mov
loopne
in
sbb
mov
pop
jl
pusha
xchg
imul
sbb
pop
test
clc
sahf
aam
or
sub
jne
imul
fmulp
fistps
sub
jbe
inc
push
push
stos
xchg
and
das
cmp
mov
mov
mov
jmp
sbb
push
test
jb
faddl
fs
mov
pusha
aas
cli
test
jmp
pop
mov
cmp
push
out
adc
jno
pushf
lret
je
push
out
lea
shr
test
dec
cmpsb
inc
ljmp
cmp
and
pop
cmp
pop
adc
xor
mov
hlt
jle
rorl
lahf
jg
inc
scas
gs
arpl
mov
inc
mov
ljmp
incl
lcall
cmc
jl
adc
sub
pop
popf
enter
adc
fs
mov
test
jp
andb
sub
imul
pop
out
je
cltd
inc
movsb
shlb
dec
ds
addl
cltd
lcall
stos
push
inc
flds
lcall
push
sub
pop
push
inc
inc
dec
mov
sbb
int3
insl
inc
aaa
into
out
fsubrs
cmc
pop
mov
adc
fldenv
mov
icebp
pop
mov
rclb
mov
das
cltd
or
pop
aaa
popa
jecxz
fcmovnbe
or
adc
adc
test
ds
xlat
lahf
add
and
mov
scas
sbb
ret
shrb
out
test
mov
or
and
fistpl
repz
jno
sahf
movsb
shlb
pop
imull
add
pop
jle
aam
pusha
xchg
data16
mov
sbb
sub
test
imul
or
jo
cmpsb
cmp
and
call
call
inc
ficomps
mov
stos
test
adc
stos
cmp
jb
mov
and
test
out
cld
lock
lock
dec
inc
inc
pushf
or
test
or
mov
mulb
bound
mov
sub
cmp
jp
inc
cltd
fdivrl
inc
ret
xchg
outsb
add
jns
mov
lcall
insl
push
add
and
popa
mov
mov
test
fucomp
lcall
ret
pop
push
lds
dec
stc
and
or
sub
mov
sub
mov
dec
and
cmp
sub
clc
and
faddl
lds
cld
es
jae
pushf
incb
loopne
dec
adc
jae
int3
cmpsb
enter
sbb
lock
mov
fs
pop
in
jns
and
jge
imul
and
sti
pusha
dec
popa
fwait
test
push
mov
stos
xor
fisttpl
xchg
adc
cmpsb
aam
sub
pusha
push
aas
rorl
repnz
or
dec
filds
in
fstpt
and
mov
imul
pop
ret
movsl
jae
xchg
cmp
mov
push
dec
push
xchg
mov
fwait
sbb
inc
jl
test
leave
jmp
and
inc
dec
pop
dec
pop
xchg
jae
into
nop
jmp
scas
adc
pop
cli
stos
jbe
fadds
outsb
sbb
sbb
outsb
adc
out
or
ret
addb
mov
add
loop
or
jmp
push
xor
push
out
movb
bound
orl
sbb
ret
push
out
imul
jecxz
vpcmpeqb
rcrb
add
frndint
mov
pop
out
leave
repz
lods
in
cld
adc
sbb
or
pushl
push
pop
xor
or
push
sbb
icebp
push
cmp
js
movsb
test
push
dec
das
cli
test
mov
loope
cmp
test
jbe
js
add
mov
inc
inc
div
mov
and
push
les
mov
shll
and
and
xchg
fcmovu
in
inc
sbb
inc
lods
cmp
sbb
mov
test
jg
dec
cmpsb
lock
rcrb
inc
cld
jp
and
lds
jbe
loop
lock
inc
and
sub
push
lcall
jmp
mov
mov
mov
pusha
add
outsb
sub
xor
or
and
sti
pop
sub
dec
jne
sub
sub
test
mov
inc
cmpsl
xchg
stos
in
fwait
dec
xor
ror
jne
mov
xchg
add
insl
mov
mov
pushf
sbb
pop
ja
cld
sahf
ja
xchg
out
lods
push
test
cmc
repz
lock
ds
xor
out
lods
gs
pop
into
mov
jb
ret
push
int3
pop
cld
add
int3
pop
sbb
dec
push
ret
clc
cmc
cltd
jl
shl
cltd
mov
filds
adc
mov
cmp
inc
mov
cmp
es
inc
dec
inc
sbb
fstps
aad
jae
xchg
xor
and
pusha
lret
cltd
inc
push
mov
mov
in
into
jno
shlb
mov
lods
mov
icebp
push
fucomp
fistpl
mov
data16
xchg
test
dec
push
sub
sbb
adc
out
stos
xor
pop
mov
adc
movl
stc
inc
stos
inc
lds
mov
mov
cld
xchg
push
mov
imul
popf
sub
ljmp
cld
and
lret
jno
gs
out
inc
inc
mov
jmp
test
jmp
mov
sbb
xlat
or
daa
in
mov
sub
sub
ficompl
in
int
sarb
dec
rclb
jmp
push
xor
bound
cmp
outsl
inc
fsubl
add
in
mov
jg
mov
ficoms
or
pushf
jns
cmp
mov
or
jecxz
lcall
adcl
cli
mov
aas
jle
dec
and
mov
mov
dec
test
ljmp
dec
jno
jg
or
mov
sub
fistl
xor
jmp
xchg
mov
sub
sbb
cmp
shlb
loopne
aad
loopne
lods
mov
fs
ret
fcomip
test
iret
icebp
and
rcr
sub
adc
mov
aaa
cli
xor
xchg
test
jecxz
ds
sbb
mov
jmp
pminsw
fdivr
xchg
push
cmp
movsb
mov
push
lds
fdivrl
jo
pop
push
loop
jecxz
int
rorb
ljmp
push
aam
loopne
mov
hlt
mov
mov
push
icebp
mov
dec
arpl
and
pop
xchg
cs
repz
test
addr16
sub
sbb
pop
mov
jge
pop
scas
stos
ja
mov
push
aaa
stos
shlb
subb
mov
xchg
sbb
gs
js
jae
mov
xchg
daa
in
movsb
imul
in
insb
push
inc
popf
subb
jp
ret
mov
frstor
add
xor
fwait
scas
jno
inc
jno
inc
cmc
mov
mov
das
clc
fs
adc
cmp
cli
mov
pop
ja
and
mov
mov
push
arpl
scas
in
clc
mov
fstps
and
test
rcrl
inc
xchg
cli
jo
mov
jmp
leave
mov
icebp
jmp
and
lods
sbb
pop
jo
jp
pop
imul
pop
mov
movsb
loopne
adc
frstor
ret
mov
out
mov
mov
and
and
inc
into
mov
jmp
fisubrl
and
out
ss
testl
int3
sub
adc
gs
outsl
mov
scas
pmaxub
movsl
pop
imul
lcall
frstor
or
sub
imull
into
gs
stc
das
pushf
inc
shlb
fst
push
adc
mov
dec
adc
and
add
push
adc
les
sub
push
xchg
std
test
lock
lret
ljmp
daa
mov
fs
push
rcrb
jb
mov
push
ja
out
into
xor
out
or
lret
arpl
repnz
adc
or
jmp
fwait
push
subb
aad
xchg
push
push
shll
mov
xchg
cmpsl
sub
add
pop
dec
dec
jae
imul
data16
cli
pusha
push
int3
push
cld
add
mov
das
fildl
lret
sub
in
pop
outsl
cmp
adc
dec
lods
xor
pop
insb
mov
mov
popa
xchg
fsubrs
gs
pop
mov
or
cmp
fsts
in
icebp
and
lea
jns
aam
ret
add
pusha
loope
cmp
imul
cmp
or
andl
or
sub
in
xor
arpl
mov
or
add
inc
dec
rcl
mov
iret
push
rcll
xor
cmpl
lea
sbb
adc
add
addr16
sarl
push
mov
es
xor
js
inc
hlt
xchg
pop
mov
aam
pusha
push
cwtl
int3
mov
pop
leave
sub
hlt
sbb
push
rcrl
pop
mull
lcall
pop
adc
pop
paddb
out
mov
mov
cwtl
xchg
cmp
jp
push
shrb
pslld
out
insb
dec
dec
call
push
sub
jnp
mov
mov
dec
bound
sub
das
and
add
sbb
cmp
loopne
add
mov
adc
ljmp
or
insl
dec
ja
cmp
hlt
jl
insl
dec
and
or
rclb
dec
in
mov
ret
pop
jmp
dec
loope
jnp
xchg
gs
pop
out
xchg
orb
repz
sub
sbb
push
test
add
jp
popa
ljmp
jnp
lods
and
xor
jne
inc
add
cli
cmp
or
loopne
aas
dec
ret
hlt
outsl
add
imul
xchg
lret
adc
gs
fnstcw
pusha
test
xchg
test
leave
imul
mov
imul
mov
mov
les
pop
outsb
sub
xchg
bound
sub
jge
mov
inc
cmp
mov
daa
sub
and
inc
xlat
and
or
out
jae
mov
xor
aad
jmp
push
and
dec
push
sbb
dec
loopne
cmp
push
push
lock
leave
pop
pop
ret
xchg
add
xchg
jl
pop
shll
icebp
notl
push
lea
pop
decl
xor
cmp
sub
pop
js
nop
mov
addr16
mov
cmp
ljmp
loopne
gs
mov
jmp
mov
shlb
mov
or
mov
mov
dec
pop
lds
sbb
rcr
mov
es
clc
nop
cmpl
and
pop
movsl
mov
insl
mov
dec
mov
mov
mov
fistpll
mov
dec
mov
ret
and
loopne
rcll
pop
movaps
insl
inc
cmp
fnstsw
les
aad
sbb
or
lahf
jne
or
fsubrl
insl
scas
mov
repz
xchg
imul
stos
jne
bound
scas
repz
cmp
out
add
add
fs
fcoms
push
pop
cmpsl
imul
jge
inc
cwtl
xchg
jae
mov
bound
fsubl
adc
jbe
pop
je
cli
insb
hlt
bound
add
aad
jbe
pop
pushf
pop
push
fdivs
movsb
xchg
sub
int3
push
cmp
adc
sub
sbb
ret
or
dec
mov
inc
cmp
push
push
push
dec
pop
dec
pushl
leave
sub
sbb
push
xor
mov
jnp
add
push
mov
leave
cli
xchg
cli
jno
pop
sub
sbb
dec
dec
in
shll
add
inc
jecxz
and
pop
jae
mov
jg
roll
push
movsl
popa
push
pop
jo
xor
pop
pop
lods
test
jge
or
orl
rclb
mov
popa
jne
or
and
lcall
xor
loop
mov
jb
sub
or
jo
mov
es
test
cli
int
mov
insb
lock
sbb
cmp
out
cmp
pop
xchg
sub
aas
mov
inc
pop
inc
fmull
jp
xor
rcll
cmp
rorl
into
jp
ja
cmc
xchg
mov
mov
mov
push
push
dec
shrl
jle
or
or
sbb
imul
testl
sbb
jmp
movsl
sti
imulb
and
lcall
push
push
idivl
mov
clc
cmp
add
std
mov
mov
test
fbld
xchg
pusha
xchg
ja
add
add
pop
das
ret
jmp
push
mov
shl
pop
aas
xlat
hlt
jo
repnz
push
jne
mov
dec
xchg
inc
decl
push
push
inc
adc
aad
clc
jae
adc
dec
out
jg
mov
arpl
aam
das
decb
or
addr16
xor
outsb
out
mov
subl
pop
push
push
mov
mov
clc
fucompp
shrb
addr16
aaa
pusha
push
push
call
or
add
mov
dec
leave
pusha
jge
int3
jo
sahf
out
xchg
and
xchg
pop
xchg
jo
add
jl
mov
adc
pop
mov
xor
out
inc
enter
insb
ljmp
dec
mov
or
or
jmp
nop
sbb
enter
xlat
jmp
ja
inc
test
sbb
jl
dec
and
movsl
push
hlt
fisttpl
gs
and
leave
dec
mov
in
cmp
push
insl
ja
scas
dec
sbb
xchg
sub
mov
jmp
and
or
lret
outsl
cmp
push
dec
pop
jns
and
cmpsb
shl
sbb
icebp
aam
cs
pop
or
into
mov
jo
test
lods
xor
pop
lds
jg
lods
ds
cmp
sbb
inc
cmp
sub
test
out
test
mov
fsubrp
test
ret
ret
and
and
inc
inc
fldl
in
fnstsw
mov
int
clc
xlat
pop
mov
adc
insl
push
popa
in
cmpsb
or
and
popa
pop
mov
xchg
or
mov
movsl
icebp
mov
imul
shrl
ret
sub
jg
xor
ds
jge
dec
popa
add
repz
repnz
cmpsb
mov
arpl
add
enter
jmp
or
push
movsl
or
repnz
repnz
sub
adc
push
xchg
dec
add
div
pop
sub
xchg
jo,pn
scas
inc
jp
xor
xor
pop
or
test
xchg
jnp
dec
call
jno
popf
out
sub
add
aam
addb
scas
lds
imulb
sti
jg
cmp
jno
push
divl
and
das
cli
inc
inc
mov
fistps
std
xchg
test
xchg
xchg
xor
jp
sbb
dec
dec
popa
inc
jnp
ret
pop
pop
cmp
or
xchg
push
add
mov
or
addb
aas
or
mov
sbbb
pop
leave
int
test
lahf
mov
es
ja
adc
in
test
push
mov
fdivrs
cwtl
test
pop
enter
add
cmpsb
les
fcoml
push
xchg
sub
iret
push
icebp
push
loope
lahf
cmpl
push
lds
mov
push
and
lock
and
popf
mov
add
xor
ret
xor
jecxz
mov
dec
mov
sub
and
or
mov
sahf
xor
adc
cmc
xchg
arpl
jb
dec
in
pop
in
xor
cmp
xor
xchg
scas
mov
add
imul
cmp
ljmp
mov
xchg
pop
fadd
pushf
xor
into
dec
aaa
imul
push
call
xor
xchg
xchg
dec
adc
mov
shl
aas
into
cmp
clc
mov
push
xor
adc
push
jo
inc
std
out
imul
pop
push
inc
xchg
fnstsw
or
movsb
test
lods
jbe
in
into
dec
lods
push
cld
sub
xor
push
cmp
and
inc
inc
mov
dec
dec
pop
imul
ror
push
sbb
and
std
mov
das
mov
in
mov
dec
mov
cli
or
jge
or
pop
dec
xchg
test
xchg
sti
jnp
into
test
add
stos
mov
hlt
es
cltd
cwtl
loope
roll
jae
into
xchg
mov
pop
call
push
out
aad
xor
sub
inc
mov
jnp
xchg
fwait
xor
into
mov
pop
lea
add
out
scas
out
notb
mov
lds
cmp
sbb
sbbb
mov
mov
les
inc
and
mov
stos
inc
nop
mov
icebp
pop
lret
mov
jmp
xchg
cmp
sahf
sbbl
decl
icebp
adc
and
jge
ds
popf
jbe
mov
or
das
lods
in
mov
add
xor
dec
mov
push
cltd
mov
mov
inc
xlat
cmp
pop
cmc
mov
stos
jl
fstpl
flds
push
fstpt
sbb
mov
mov
leave
loope
xchg
xor
sbb
insb
dec
movsb
cmp
add
pop
rclb
movl
fmull
and
mov
pop
mul
mov
js
out
dec
out
or
repz
adc
xorl
push
jmp
push
sbb
xor
inc
mov
mov
jnp
jecxz
and
cmpsb
sti
inc
popa
ss
lea
rclb
sub
mov
scas
dec
sahf
scas
hlt
and
sarl
out
daa
push
pop
mov
xor
pop
ss
stos
pop
in
push
pop
outsb
push
ret
add
push
xor
fnsave
pop
imul
sti
xchg
mov
sbb
leave
aaa
addr16
stos
add
pop
xchg
mov
sbb
rcl
aaa
dec
pop
dec
and
xchg
inc
adc
jo
jnp
jnp
mov
test
jecxz
pushf
mov
mov
std
pop
out
lds
popa
sahf
or
in
jnp
sahf
xor
cmp
insl
movsb
daa
js
in
push
divb
popf
cmpsb
xchg
gs
and
add
stos
ds
pop
cmp
mov
out
cmpsl
cmp
sub
int3
mov
mov
shrb
lret
in
and
inc
push
xchg
cltd
mov
addr16
test
xchg
pop
pop
lods
mov
test
ret
sbb
dec
std
hlt
or
out
movsb
sbb
ss
mov
dec
out
push
xlat
icebp
ja
outsb
sub
mov
clc
mov
pop
cmp
outsb
lea
and
lahf
xor
pop
jno
into
je
stos
out
push
fsubrp
cmp
sub
fldl
jbe
lahf
push
cmp
popf
dec
pop
leave
into
pop
mov
outsl
push
mov
out
test
jle
add
xchg
das
je
add
ja
mov
dec
mov
ss
lods
gs
ljmp
or
in
insb
push
in
cmpsb
inc
pop
add
daa
in
or
aas
nop
xchg
mov
sub
movb
adc
out
and
inc
pop
inc
test
jp
pop
and
rorl
scas
push
sub
xor
mov
outsb
push
mov
sub
aam
ds
dec
call
pop
xor
lret
ss
setp
mov
and
repnz
xchg
mov
cmpsl
ds
test
mov
inc
cltd
popa
iret
lcall
in
sbb
fcoms
sub
test
mov
adc
enter
cmpl
fstpl
inc
adc
push
ljmp
popa
mov
into
add
shr
loope
out
mov
dec
in
mov
out
loope
sqrtps
ds
fsts
pop
mov
mov
sbb
jg
mov
sti
sub
mov
test
idivb
xchg
negb
dec
pop
inc
and
adc
adc
or
adc
outsl
adc
xchg
out
push
stos
or
sti
or
xor
jns
sbb
aaa
or
js
iret
mov
loop
sarb
pop
loope
and
jne
loope
sbbb
push
lret
lret
fcmove
movsl
cmp
cmp
je
mov
add
pushw
test
sub
and
push
fistps
push
mov
mull
mov
bound
mov
movsl
adc
add
lods
add
sub
in
xchg
bound
and
mov
mov
js
add
mov
lret
xchg
sub
cmp
fadd
jle
mov
sahf
sti
rorl
cmpsb
mov
pop
xchg
pop
ret
xor
fldcw
gs
fs
or
repnz
aam
sub
inc
sbb
add
or
ret
mov
pusha
mov
int3
or
dec
dec
mov
pushf
aaa
ja
mov
dec
in
test
and
adc
hlt
roll
popf
mov
dec
jmp
inc
cltd
jns
mov
xchg
lret
mov
mov
rolb
pop
test
xor
inc
movsb
jnp
add
add
mov
or
mov
ffree
in
xor
cmpsl
add
movsb
cmp
shll
pusha
xor
shrl
sbb
add
lods
sub
xchg
sub
inc
fstpl
xor
fnsave
push
mov
outsl
xor
loopne
aas
add
inc
mov
scas
in
push
xor
jb
inc
orl
ds
adc
call
xlat
repz
push
fdivp
inc
dec
inc
fmull
mov
fs
sub
or
daa
cli
and
cmp
push
inc
pop
imul
xor
dec
jae
dec
xlat
pop
lods
movsb
repnz
xchg
daa
or
int3
xchg
and
pushf
sbb
xchg
jl
cmp
adc
jne
inc
mov
int
nop
sbb
testb
dec
sar
mov
jle
mov
add
test
sub
dec
push
mov
mov
pop
cwtl
pop
scas
out
push
xor
xor
jmp
pop
inc
pop
cmpsl
shrl
addr16
std
adc
xor
adc
mov
adc
add
push
and
pop
je
xchg
shrb
imul
pop
pusha
mov
mov
mov
push
jge
mov
sbb
insl
shrl
sbb
mov
and
fists
out
sub
push
xor
stos
and
mov
cwtl
cmpb
jo
xor
nop
lea
jmp
lea
fisttpl
test
mov
mov
mov
mov
cmc
mov
sahf
dec
hlt
lea
inc
cs
jnp
mov
push
cmp
call
and
leave
mov
call
js
pusha
jl
pop
xor
sbb
xchg
lahf
add
push
lock
bound
and
jle
je
fstpt
test
add
or
loopne
xchg
push
push
or
outsl
pushf
push
cmp
pop
mov
mov
sub
hlt
xchg
test
inc
jge
mov
lcall
adcb
stc
lods
mov
xchg
sbb
pop
daa
mov
and
lods
mov
ds
mov
popa
andl
dec
pushl
ret
or
jp
add
mov
pop
aas
push
sbb
mov
sar
int
repnz
push
jecxz
leave
in
mov
stc
or
lret
hlt
add
or
jno
ds
sub
int
pop
orb
adcl
clc
out
jmp
dec
mov
aaa
lcallw
push
loop
sbb
aad
mov
clc
fs
fidivrl
insl
push
mov
test
jp
add
push
sbb
shl
lahf
pop
iret
je
xlat
mov
lds
pop
mul
push
add
loopne
jl
fsubr
add
mov
xor
xchg
sbb
mov
ljmp
xchg
and
and
sahf
push
mov
es
mov
ljmp
jno
sub
mov
sti
stos
sbb
xchg
nop
jl
add
loopne
in
pop
add
xor
mov
push
cmpsl
xchg
add
enter
sub
jne
inc
scas
cmp
cmp
leave
mov
push
cmp
xor
jmp
jns
fwait
mov
lret
pop
rorb
shrb
and
aam
xor
adc
jp
repnz
dec
jns
sti
addr16
arpl
sbb
xlat
and
aam
popf
pop
pop
adc
hlt
mov
adc
and
and
inc
mov
and
data16
sub
dec
jl
lock
stc
call
test
mov
xor
aad
push
sbb
pop
pop
repnz
mov
les
cwtl
jns
inc
pop
loop
out
sbb
mov
fwait
sti
mov
lret
mov
out
rcrb
loop
push
loopne
je
dec
mov
imul
jl
outsb
cmp
js
mov
xor
mov
mov
mov
subl
lock
mov
push
push
sub
popa
or
arpl
push
popf
mov
fsubl
jl
mov
loope
xchg
jbe
add
jp
rcr
mov
xor
leave
mov
cli
add
add
pop
lods
add
in
loopne
pop
cs
pusha
pusha
cmp
roll
test
xlat
sbb
dec
adc
scas
sbb
xchg
bound
je
xchg
xor
add
bound
in
int
call
and
fildl
pushf
mov
fisubrs
ret
inc
call
xchg
out
cmpsl
xchg
cmpsl
jne
push
out
mov
repz
pop
ljmp
repnz
sub
cmp
adc
out
inc
out
jp
fidivl
leave
iret
or
fsub
dec
and
add
and
mov
mov
leave
dec
sbb
loop
mov
or
jecxz
jo
stos
xchg
popf
xchg
loope
pop
xchg
mov
jnp
mov
mov
addr16
test
dec
inc
in
outsl
dec
or
hlt
xchg
and
mov
fdivrl
lods
flds
jecxz
insb
cli
jmp
aam
ss
adc
sbb
dec
add
mov
mov
daa
imul
imul
lahf
decl
jnp
imul
fdivl
test
pop
jo
xor
or
aaa
movsl
pop
jne
popa
sub
lock
jmp
push
cltd
lret
pop
loope
out
xchg
addb
jns
mov
xchg
xor
bound
sete
inc
and
mov
xchg
iret
rclb
repnz
cmp
ds
push
stc
cli
outsb
mov
pop
insl
jle
sti
pop
xor
ja
dec
xlat
jle
pop
cmp
xor
jp
movsb
clc
sahf
int
ja
jb
mov
scas
stc
shrb
decl
test
ret
jnp
int3
jae
pusha
lahf
and
xorl
test
inc
push
fimull
scas
and
push
sahf
cmp
lods
lret
or
adc
inc
cwtl
cltd
lock
addr16
out
dec
sbb
ret
xchg
insb
sub
push
pop
mov
out
stos
inc
insb
jg
mov
es
xor
push
add
das
push
lods
mov
outsb
xchg
dec
push
test
mov
xchg
dec
decb
jp
loop
pop
dec
fildl
or
mov
and
push
adc
xchg
xlat
jg
out
in
adc
inc
or
jmp
insb
shl
lock
mov
or
mov
popa
xor
pop
divb
fbld
xchg
mov
leavew
adc
xchg
data16
in
push
push
dec
mov
mov
mov
lahf
or
inc
ret
in
repz
jo
imul
mov
inc
aaa
xor
push
fdivrl
push
lahf
sub
fadd
mov
jl
imul
orb
cwtl
mov
jge
fcompl
dec
dec
cltd
mov
adc
cmc
daa
dec
dec
scas
dec
xchg
jl
loop
lods
xchg
push
add
pop
push
mov
mov
aad
mov
aad
into
mov
pop
add
in
test
lock
in
or
das
mov
jns
pop
jno
jle
mov
adc
mov
fnsave
xchg
push
arpl
xchg
fwait
mov
int3
xor
mov
data16
cwtl
cmpsb
imul
loopne
mov
dec
je
call
cmp
outsb
rol
in
mov
pusha
xchg
test
ret
dec
jp
das
adc
inc
in
int3
adc
ret
outsl
push
arpl
xlat
testl
mov
lret
mov
clc
cmp
daa
andl
out
fldenv
shrb
push
popa
mov
pop
loopne
ljmp
xchg
out
gs
dec
sub
repz
dec
adc
pushl
aas
and
pop
fnop
in
or
out
add
lahf
mov
cmpsb
mov
push
stc
dec
mov
cmp
add
mov
jle
lea
faddp
fstpl
xor
jo
jbe
add
lods
stos
popa
push
dec
dec
outsl
sbb
cmp
fistps
int3
out
cmp
lock
mul
push
mov
jle
add
and
nop
js
cwtl
ds
arpl
xor
in
cmp
xchg
test
scas
mov
pusha
sbb
in
adc
dec
fdivrl
rcl
cmp
jl
pop
jbe
sbb
test
cltd
loopne
movsl
and
and
xchg
hlt
ja
adc
enter
scas
int
dec
mov
cs
insb
pop
stos
xchg
loope
lret
adc
mov
pop
jnp
sbb
int3
fstpl
bound
arpl
sbb
push
idivb
andl
pop
adc
pop
cmc
aaa
pop
mov
out
mov
lahf
cli
sbb
pusha
lahf
jp
mov
hlt
aad
pop
nop
adc
lock
pushf
xor
sti
mov
adc
inc
stos
stc
xor
and
pop
mov
das
cmpsl
jb
inc
dec
fcoms
xor
mov
xchg
adc
inc
push
fdivr
pop
mov
data16
dec
aad
cmp
pop
mov
popa
xacquire
fisubl
cld
dec
pop
push
push
fidivl
lahf
bnd
xchg
movsb
cmp
push
sti
outsb
pop
cmp
adc
mov
xor
sbb
sti
fmul
pusha
or
out
aaa
adc
mov
pop
add
jns
out
pusha
call
cmp
rol
sbbb
push
les
loope
mov
push
cmp
xor
sub
mov
push
jge
insb
dec
mov
dec
mov
mov
push
mov
in
shlb
cmpsl
aam
xchg
sub
adc
std
xor
push
inc
and
push
pop
outsl
push
push
insl
ss
rcrb
sub
xchg
push
jg
mov
inc
test
loopne
xchg
popf
fbstp
mov
idiv
scas
xlat
test
jg
out
ss
mov
sbb
dec
dec
out
or
mov
xor
movlps
xlat
cmp
pop
mov
push
xchg
movsl
sti
push
jecxz
mov
fcompp
pop
out
lods
jmp
add
aaa
mov
fdivrl
lods
adc
imul
rcrb
mov
popf
imul
push
jle
mov
jmp
inc
shlb
stc
shrl
or
lods
dec
sub
jl
inc
cld
inc
sahf
add
lahf
mov
pop
push
add
mov
pop
out
push
loopne
xor
mov
test
cmp
movsl
repnz
pop
adc
or
cltd
xor
mov
fst
ficomps
dec
div
mov
jmp
adc
faddl
and
addl
inc
push
jb
mulb
popa
adc
cwtl
xor
cmpsb
mov
jecxz
test
out
stos
or
repnz
movsb
sbbl
das
cmp
bound
lret
fdivrs
leave
imul
arpl
fiaddl
xchg
rcll
dec
in
movsl
jne
or
call
adc
or
rorl
hlt
dec
dec
mov
fbstp
or
inc
sub
std
pop
sbb
or
out
call
sbb
in
pop
sbbb
push
in
aas
ja
sti
sub
push
xchg
cmc
aas
insb
sub
pop
mov
lcall
adc
addl
xor
ret
js
lods
push
mov
icebp
lret
mov
dec
xor
cli
push
cwtl
cmp
dec
loope
fistpl
les
bound
mov
ret
and
dec
lret
scas
inc
gs
sti
add
jle
xlat
jmp
in
adc
ljmp
sub
mov
ret
xorb
dec
sub
ss
push
add
or
les
jns
mov
mov
mov
pop
fsub
jbe
bound
pop
jp
fidivs
sub
lahf
sub
lret
adcl
icebp
mov
inc
adc
mov
pop
mov
or
bound
sbb
hlt
mov
mov
cmp
add
rolb
cli
xchg
in
lret
out
push
into
loopne
lret
ss
addr16
arpl
scas
push
push
pop
pushf
icebp
mov
jecxz
out
mov
lock
lods
inc
and
hlt
mov
imul
repz
adc
fdivrs
test
outsb
push
sub
jg
cmc
xor
sbb
mov
aaa
fs
inc
daa
lea
xor
pop
inc
fs
mov
in
out
leave
pusha
jecxz
call
sub
mov
inc
shr
in
es
ss
dec
loop
adc
adc
ljmp
cmpsb
in
dec
faddp
imul
aam
in
insl
or
mov
xchg
fdivs
push
pop
sub
mov
inc
cli
add
jl
dec
adc
out
mov
push
inc
fwait
and
jecxz
or
sarl
in
leave
out
mov
test
sbb
xchg
aas
push
push
cmpsl
imul
jb
inc
xchg
mov
das
test
sbb
inc
inc
mov
add
mov
inc
or
mov
outsl
scas
or
cmpsl
push
jmp
push
jo
icebp
daa
inc
aaa
jecxz
cmp
add
adc
xorb
jle
pop
nop
pop
inc
loopne
add
into
sbb
ret
icebp
mov
push
xchg
add
mov
in
jnp
cwtl
mov
cmpsb
sbb
ja
sti
scas
shrb
dec
fnstenv
pushf
nop
daa
push
and
adc
stc
fsubrs
movsl
sbb
sbbl
mov
mov
repz
cmpsb
scas
mov
std
push
xlat
inc
mov
cmp
sti
inc
jae
xchg
shlb
add
push
push
sahf
lcall
lea
adc
ja
in
dec
stos
aam
mov
jge
push
int
mov
jno
sbb
lret
cs
fistl
or
sub
and
fdivs
aad
mov
sub
rclb
mov
mov
mov
ds
mov
popf
dec
dec
mov
cmp
jnp
xchg
pop
sub
ret
mov
adc
mov
jnp
sahf
aad
mov
out
scas
and
xor
xlat
or
mov
xchg
arpl
imul
dec
pop
xor
xor
sub
dec
mov
outsl
cwtl
inc
mov
jge
cmc
xlat
push
imul
fbld
lret
push
inc
fbstp
arpl
inc
adc
dec
dec
test
mov
jnp
jmp
jecxz
pop
adc
jo
mov
mov
inc
bound
lea
lcall
stc
push
sub
mov
jle
sbb
mov
xchg
out
bound
mov
loop
adc
xchg
int3
mov
ror
inc
xchg
xor
cmpsb
inc
fdivl
repz
mov
push
arpl
sbb
int3
insl
pop
loopne
push
sbb
aaa
xchg
arpl
repnz
mov
js
repz
test
cmp
xchg
icebp
cmpsb
enter
imul
call
dec
mov
pop
sub
and
inc
iret
pop
outsb
pop
idivl
mov
push
mov
rcl
jns
xchg
sub
fwait
jmp
adc
cltd
sbb
add
pop
hlt
test
out
sahf
das
or
and
cmp
mov
push
sarl
cli
js
cli
xor
dec
loop
mov
pop
add
mov
flds
lahf
in
aas
adc
aas
jl
add
ljmp
repz
xlat
icebp
sti
sub
cmp
sarl
adc
xlat
shl
repz
insb
dec
fwait
cli
xchg
int
jg
xor
cltd
mov
dec
or
mov
insl
add
imul
ficoms
mov
subb
out
inc
cmp
mov
popf
dec
dec
and
xorl
fcomps
fistps
xor
xor
push
stos
push
pop
shl
pop
cmpb
sub
in
clc
scas
rcrl
add
pop
mov
mov
jp
std
and
sbb
shr
jp
in
jg
and
call
mov
adc
iret
and
shr
scas
adc
xlat
hlt
mov
mov
dec
jecxz
test
addr16
iret
hlt
and
sbb
imul
lds
movsb
mov
ja
pusha
mov
ja
js
divl
int
inc
stc
and
xor
movsl
mov
push
in
lahf
xchg
outsl
aam
out
inc
pushf
daa
jno
xor
fcoml
lds
mov
mov
add
loope
outsl
add
jnp
testl
push
mov
out
into
jae
icebp
sbb
idivb
cmp
xchg
xor
cmp
push
sub
mov
xchg
mov
loop
pop
je
push
outsl
fs
push
and
mov
sub
insb
idiv
pusha
xorb
sbb
arpl
push
pushf
pop
push
sahf
scas
sbb
imul
xorl
out
push
loop
dec
test
das
inc
push
inc
fs
int3
fnstenv
popl
out
xor
push
fcompl
pop
xchg
sbb
scas
fmuls
mov
push
inc
aas
std
sub
test
inc
sti
into
test
shl
push
jg
push
xor
ds
jge
sbbl
scas
loopne
jmp
decl
cmc
sub
test
inc
xchg
dec
popf
sub
call
mov
xchg
inc
pushf
sbb
jp
cmp
add
add
pop
sbb
popf
jp
cmp
test
xor
inc
out
pop
into
fmull
iret
pop
mov
enter
loop
mov
and
jne
jne
pusha
in
xchg
push
push
pop
dec
or
mov
mov
xor
pop
dec
dec
push
inc
fwait
lea
nop
bound
aaa
das
or
leave
push
in
xchg
movsb
xchg
scas
sbbl
insl
mov
aad
add
xor
sbb
cli
xchg
in
push
cs
pop
sbb
mov
aaa
pop
adc
repz
cli
int3
dec
mov
add
dec
call
aaa
push
fcomps
add
in
stos
sub
lcall
ja
das
sub
mov
add
pop
mov
fisttpl
icebp
pop
das
lods
mov
sub
fiadds
add
and
push
jg
pop
fcomip
sbbb
and
rol
sub
loope
addr16
push
dec
lds
divl
dec
push
andb
std
aas
shrl
mov
add
lock
jno
mov
sarb
dec
pop
push
leave
test
shlb
repnz
fsubrp
fcmovu
imul
scas
call
int3
fstps
jno
movsl
inc
popa
shlb
test
xor
mov
pushf
into
and
bound
push
pop
jns
rol
repz
jbe
mov
cli
lret
movsl
out
sbb
cmc
call
in
jmp
aaa
lcall
jmp
jmp
aam
enter
push
inc
mov
mov
pop
sub
fs
loope
and
stc
aad
scas
mov
clc
mov
pop
jbe
fwait
xor
shrb
shrb
rcl
mov
outsl
sti
push
orb
dec
lock
loope
outsb
sub
pop
mov
in
aad
movsb
and
mov
lcall
dec
and
hlt
push
in
popf
stc
adc
mov
ret
xor
test
dec
ficomps
inc
dec
stc
js
jge
mov
add
adc
push
or
int
fadd
and
sub
sarb
xchg
or
testb
cmp
jmp
adc
xor
sub
daa
pop
or
sub
pop
dec
pop
inc
lahf
sub
inc
cmp
and
cmp
cmp
aaa
push
jle
pop
out
dec
lahf
shrb
or
and
push
jl
andb
push
daa
shlb
inc
flds
pusha
not
pop
sbbb
jp
pop
and
aaa
mov
mov
and
call
adc
or
mov
fsubrl
insb
add
or
insl
out
jno
pop
fidivs
loop
ret
and
out
add
out
mov
imul
push
mov
mov
pop
icebp
or
fsubrs
xchg
or
notl
add
call
lods
xor
cmp
test
xorl
lret
mov
fwait
out
orb
or
push
dec
es
push
pop
sub
pop
ficoml
jg
shll
inc
cld
xchg
cmc
dec
or
adcb
push
lcall
jg
and
lods
or
cmpsb
cmp
imul
and
cli
jge
fldl
mov
push
add
mov
add
rcrl
mov
lods
cmpsl
mov
daa
mov
cld
stos
cmp
test
add
xor
push
jno
mov
testb
cmp
fs
into
leave
pop
adc
outsb
test
insl
rcll
add
fmuls
shlb
pop
fisubrl
push
jl
mov
push
out
fidivs
or
or
aad
jmp
pop
mov
mov
xchg
and
xor
mov
sbb
jle
adc
jne
jnp
fstpl
cmp
dec
mov
js
cmp
jns
movd
jl
mov
push
pop
into
gs
popa
dec
sub
out
aam
pop
and
dec
mov
movsb
imull
icebp
cld
xchg
xor
sbb
mov
das
mov
cmp
outsl
shrb
cmp
cmp
push
fmulp
mov
mov
adc
push
pop
outsl
es
stos
mov
inc
xchg
mov
sub
add
mov
pop
cmp
adc
ds
test
xchg
add
cmp
outsl
loopne
movsl
mov
sbb
mov
shlb
loopne
inc
adc
subb
aas
jmp
arpl
jl
ljmp
movsl
xchg
scas
jmp
push
lret
aaa
add
adc
mov
inc
xchg
andb
into
gs
sub
mov
xor
xchg
mov
cmp
insb
sub
std
ljmp
mov
mov
sub
bound
sub
popa
imul
movsl
dec
sbb
jp
pop
jae
shr
sti
pop
je
dec
fnsave
pop
out
lahf
movsl
sbb
cmp
stos
inc
ljmp
outsl
mov
or
adc
mov
popa
lods
or
aad
or
fbstp
cmpl
mov
int
cmp
in
and
sti
inc
lret
out
jmp
sub
mov
repnz
hlt
jne
shlb
sbbb
icebp
mov
inc
addb
jnp
sbb
inc
pushf
sub
inc
je
loop
cltd
mov
movsb
pop
dec
cmp
fbstp
xchg
sti
pop
enter
add
pop
xchg
ja
in
or
jo
dec
iret
loope
cs
jb
cmc
jne
aaa
pusha
std
and
sarl
mov
jp
cmc
pusha
mov
dec
fcmovu
jno
sbb
dec
push
jle
sbb
fstl
jg
xor
dec
and
xor
pop
adc
xor
aad
pop
cltd
ret
lret
mov
jle
jmp
sbb
inc
push
int
subb
pop
pop
cli
pop
cltd
in
out
add
xchg
stos
xorl
or
dec
jb
repz
xor
int3
sub
pop
repz
adc
xchg
insb
fistl
cmp
sbb
xor
inc
xchg
add
aaa
das
adc
mov
ret
xchg
fsubl
adc
aad
jl
arpl
mov
mov
in
lods
inc
inc
lahf
mov
add
shrb
jg
icebp
loop
inc
push
jge
aas
shrb
fldcw
cwtl
cli
aad
and
movsb
out
movsb
gs
mov
xlat
cmc
push
pop
cmp
xchg
call
xchg
lcall
jg
lea
fisubrl
ss
mov
xor
xchg
xchg
add
popa
loope
pop
xchg
mov
mov
pop
mov
shll
mov
test
pop
push
xlat
movsl
push
xor
mov
mov
idivl
or
lret
cmp
cmc
mov
ds
loopne
test
call
cmp
xchg
mov
pop
or
fstpt
movsl
and
cmpsb
adc
pusha
dec
data16
lods
or
insl
jle
mov
add
cld
sbb
les
popf
stos
pushf
add
push
loope
in
xchg
cmp
push
push
fwait
xor
in
les
add
lds
push
xchg
xchg
sbb
adc
jnp
mov
dec
scas
test
or
fstpt
cmp
jno
negl
jne
push
mov
ja
cmp
loopne
push
adc
sub
shll
xchg
push
push
stos
data16
fistpl
pop
cmp
fwait
dec
dec
cmp
inc
adc
xlat
sbb
clc
test
sub
mov
jbe
clc
cmp
inc
jb
inc
repz
les
jp
test
aaa
mov
and
mov
ja
dec
mov
push
xchg
dec
pop
xor
in
cwtl
stos
push
outsl
daa
sbb
aad
mov
xchg
into
push
xchg
fnsave
ficomps
pushf
outsl
rorb
cmc
addb
aas
cmp
adc
jb
fisubs
pushf
inc
pop
pusha
fidivrs
or
into
push
imul
cmp
cld
jnp
xchg
push
pop
das
lea
mov
in
xchg
mov
ds
sub
xchg
adc
int
aas
mov
rcll
cmpsl
cwtl
mov
pop
mov
ret
and
cmpsb
mov
jmp
inc
and
mov
fcmovu
xor
repnz
daa
xor
inc
fcoms
mov
xchg
sti
fwait
cli
cmpsb
and
push
and
pop
sbb
cmp
jp
xchg
into
gs
mov
xor
adc
mov
mov
mov
xlat
adc
cmp
or
push
lahf
sub
insl
pop
divl
xlat
bound
outsb
aas
xchg
stos
mov
jno
push
insb
enter
iret
xor
xchg
xor
loope
jmp
or
push
outsb
mov
rcr
test
pop
dec
jecxz
insb
mov
cmp
sbb
inc
sbb
ss
out
sbb
jne
push
adc
stos
loop
or
call
popa
pop
and
call
cmp
cli
jne
sub
aam
dec
jmp
fwait
mov
movsl
out
mov
pop
inc
dec
and
sbb
incl
xor
add
into
gs
cmp
and
loope
jl
cmp
test
int3
lret
xorb
sbb
cli
jle
stc
pop
int3
jnp
pop
test
addr16
filds
pop
dec
mov
or
mov
fisubs
into
leave
or
aad
imul
mov
fisttps
rorb
xlat
repz
std
cs
adc
mov
or
push
xor
add
push
call
jnp
in
pop
mov
add
or
subl
out
inc
jg
pop
dec
rcrb
ds
lret
mov
inc
std
dec
dec
mov
xlat
push
in
addr16
outsb
popf
dec
and
xchg
or
ds
mov
xchg
dec
mov
adc
mov
inc
subl
aas
loope
mov
push
ljmp
pusha
add
into
pop
fdivrl
clc
push
mov
outsl
jno
jo
xchg
xchg
testb
push
jno
cli
daa
sub
push
in
fadd
imul
pop
push
xchg
cmp
xor
sub
addr16
rorl
pop
mov
adc
lret
xchg
adc
xchg
mov
xchg
imul
repnz
cmp
cmpsl
mov
and
fwait
push
add
aas
push
and
xor
xlat
dec
sbb
sub
jmp
testl
adc
inc
icebp
sti
dec
jge
add
popf
cwtl
fstpt
out
cltd
divl
sarl
fwait
sbb
fsin
dec
outsb
push
push
jge
or
sbb
cs
in
pusha
and
fcmovb
imul
aaa
jb
jo
sbb
add
dec
cmp
fs
in
insb
cltd
pop
sbb
xor
inc
cltd
lods
xchg
cmp
mov
into
xchg
in
mulb
jo
decl
mov
mov
les
jno
mov
xor
imul
xchg
jl
and
in
jl
scas
sub
xlat
stos
iret
xchg
mov
inc
outsb
into
lahf
xchg
imul
lret
cmp
lods
push
inc
dec
es
fidivl
xchg
mov
dec
or
inc
mov
ss
pop
in
mov
test
pop
cmp
out
nop
pop
leave
sub
ret
hlt
mov
in
adc
mov
mov
cmp
rorl
push
xor
fstpt
enter
ret
add
push
call
sub
outsl
jns
addr16
mov
inc
jns
mov
movsb
xchg
adc
sub
add
popa
loop
popa
mov
test
jge
stos
cmp
or
mov
mov
daa
pop
adc
sub
aaa
pop
sbb
ljmp
inc
test
mov
pop
imul
dec
insl
mov
xor
and
mov
mov
mov
sub
pop
and
lea
repnz
call
fcos
xchg
mov
mov
js
and
add
jns
and
ss
out
test
adc
pushf
add
pop
aad
fcomi
adc
ljmp
inc
or
mov
daa
mov
dec
rcr
xor
xchg
dec
xchg
jp
mov
imul
scas
sbb
sub
push
aaa
into
aas
clc
inc
lret
push
push
mov
pop
xchg
inc
stos
mov
xchg
push
mov
fwait
push
lahf
leave
mov
xlat
or
scas
ret
aaa
jnp
xchg
fsubrp
and
sbb
mov
je
mov
push
icebp
insb
jl
jne
sti
jo
or
fcmovnbe
jle
cwtl
mov
push
into
sub
shrb
loope
adc
inc
sahf
leave
aaa
sbb
jns
outsb
out
je
add
mov
lahf
push
ss
enter
das
scas
add
mov
fucomp
push
pavgb
lods
popf
inc
out
mov
mov
imul
and
jecxz
mov
ss
loopne
pop
stos
std
inc
imul
sbb
sub
sub
mov
xor
lahf
mov
rolb
or
and
std
cld
mov
cmp
pop
cmp
xchg
outsb
pop
push
mov
ret
push
gs
sub
pop
outsl
jbe
js
clc
xchg
xchg
out
test
bound
sbb
loope
jo
jne
add
mull
inc
repnz
cs
pushf
mov
rclb
hlt
insl
rcrb
jle
mov
call
xchg
ret
inc
adc
inc
fs
pop
jb
int
xor
xchg
neg
mov
imul
aas
cmp
mov
pop
xchg
lods
jmp
into
pusha
popf
or
or
insl
daa
inc
outsl
fwait
xchg
test
inc
mov
mov
xchg
lret
stos
dec
xchg
mov
adc
add
xchg
pop
push
lea
stos
mov
jge
mov
fstpt
xor
push
mov
shll
mov
mov
bsr
ficompl
push
mov
minps
out
or
ficomps
xchg
js
imul
cmp
mov
mov
std
cltd
pop
push
ret
push
in
loopne
pop
xor
adc
lret
cmp
cmp
push
rorb
cli
push
stos
fadds
xchg
out
push
bound
push
lock
sub
pop
and
mov
test
cmp
mov
ljmp
jge
ljmp
js
fwait
cmpsl
xchg
out
xchg
rcrl
in
stos
test
jle
sahf
push
sbb
sbbb
adc
fstps
jo
mov
les
cmpl
push
sub
cld
cltd
les
in
test
mov
push
cmpsb
stos
stos
cmp
lods
pop
pop
cmp
mov
xlat
aaa
push
pop
aas
lea
aad
push
jge
testb
inc
sbb
loope
in
and
gs
mov
add
mov
jmp
stos
jmp
daa
adc
out
sub
in
push
lcall
inc
and
push
fmuls
sti
xor
xor
add
add
or
mov
lcall
xchg
icebp
outsl
lods
inc
adc
test
xchg
adc
lcall
js
push
xor
mov
dec
addr16
push
mov
dec
cmp
leave
imul
inc
jo
sbb
mov
pop
lret
cli
sub
xor
test
pop
lock
xor
jnp
sti
push
jo
sbb
xor
xor
test
addr16
xor
lret
iret
mov
sbbl
int
sbb
push
je
cmp
fisttps
in
mov
xor
leave
int
pop
into
mov
mov
xor
lret
and
mov
jb
fs
xchg
xchg
jg
mov
mov
push
jle
cld
dec
stc
shr
test
shrb
in
sub
or
lcall
lods
arpl
cmpsl
repz
mov
add
mov
pop
mov
inc
ljmp
loope
add
or
mov
sbb
mov
push
dec
aam
aaa
out
cmp
dec
jecxz
pop
mov
cmp
mov
hlt
lahf
pop
call
xchg
pop
or
push
das
mov
sbb
clc
clc
sbb
cmp
cmp
mov
add
inc
cld
ja
andl
push
xchg
scas
or
pop
cmpsb
or
add
add
arpl
pop
pop
mov
add
enter
add
shll
inc
iret
dec
nop
sub
gs
sahf
lahf
xchg
dec
or
sub
cli
jge
push
add
or
movsl
xlat
cmp
cld
loop
xor
inc
sbb
jns
xor
pop
mov
in
aad
and
xor
pop
inc
dec
dec
jae
test
outsl
sbb
jp
add
mov
les
and
je
popf
sbb
push
mov
push
and
sbb
mov
sbb
pop
xchg
cs
pop
xlat
mov
mull
add
add
ljmp
push
xor
add
mov
push
icebp
xchg
jbe
hlt
xor
nop
ret
jae
pop
mov
push
lcall
das
dec
iret
stc
sarb
out
xchg
jge
add
push
dec
ret
cld
adc
jns
mov
fisttps
test
push
jmp
js
jbe
cld
scas
xchg
sti
xor
lods
aas
dec
and
inc
mov
and
scas
ja
jae
push
jmp
sbb
outsl
push
call
jge
fsubr
push
movsl
push
mov
or
mov
sub
pop
push
test
pop
cmp
xchg
pop
pusha
test
cs
cli
inc
sub
mov
loope
test
ffreep
int3
hlt
or
fbstp
and
dec
mov
xor
push
in
cmpsb
push
sub
add
lcall
jl
inc
mov
lahf
mov
push
push
or
test
push
cmp
loope
jnp
jno
pop
xchg
aam
or
mov
sub
jb
mov
cmp
aaa
fmull
and
insb
popa
clc
popf
divl
sub
cwtl
mov
cmp
sub
jae
pop
movsl
or
into
pop
inc
and
loop
das
das
cmp
test
inc
sub
loopne
out
add
aas
shr
push
dec
mov
add
pop
in
out
repz
bound
outsb
sub
aas
sbbl
cmp
cmp
cmp
add
pushf
loopne
hlt
or
aaa
call
or
int3
cmp
outsb
lds
cmp
test
dec
pushl
pop
outsb
add
es
mov
mov
outsl
fwait
cmc
xchg
mov
cmc
cmpb
dec
inc
inc
dec
pop
fists
xlat
xchg
sbb
xor
pusha
imull
mov
jmp
cli
das
xchg
mov
xlat
add
iret
mov
sub
dec
add
inc
mov
push
and
aas
push
and
dec
adc
popf
push
xor
repz
out
and
and
iret
aam
cltd
inc
lret
bound
xor
popa
jb
xchg
dec
jg
xor
loopne
cmp
sti
loop
push
ficompl
cmp
int
mov
push
mov
jmp
adc
ljmp
inc
cli
inc
and
repnz
push
fcmovbe
imul
hlt
and
mov
jne
test
pop
roll
aad
sbb
divl
jge
pop
mov
sub
pop
loope
mov
lock
cmp
mov
push
or
mov
fidivl
gs
stos
stc
sahf
mov
call
mov
mov
dec
ret
sub
sarl
push
cs
fimuls
dec
gs
adc
sub
inc
arpl
hlt
imul
inc
xchg
xchg
repz
ds
sti
mov
jle
fdivrp
into
lret
sbb
xor
fists
or
dec
cmp
test
push
mov
xchg
mov
and
jge
into
scas
adc
lcall
aas
inc
push
repz
add
push
pop
cmc
test
sub
mov
aam
add
mov
imul
jp
out
stos
jnp
pushf
addr16
xlat
mov
jmp
mov
std
rclb
xchg
add
adc
jnp
jmp
add
in
or
sahf
idiv
mov
mov
aam
dec
mov
sti
jge
mov
or
insb
sub
movsl
sbb
addr16
lods
push
int
jecxz
bound
jp
xlat
ja
pop
mov
add
ret
mov
es
xchg
inc
into
push
jl
pop
dec
adc
gs
je
rolb
clc
adc
jge
rcll
lret
adc
out
test
mov
sbb
jle
and
aam
pop
mov
or
mov
icebp
aas
pop
sub
add
push
xchg
out
jns
sub
push
lahf
jno
pop
out
add
xchg
lock
inc
pop
xlat
jnp
push
mov
lock
inc
and
push
add
adcb
and
js
xchg
mov
mov
cmp
cmp
mov
cmp
mov
cli
dec
cmp
into
sub
aas
out
dec
add
fimuls
cwtl
mov
or
iret
rorb
aam
imul
data16
push
ret
hlt
je
cli
push
fcom
out
mov
xor
xor
or
jnp
in
pop
fwait
ret
outsl
xchg
subl
divb
cmc
mov
aas
lea
cmp
shrb
notb
hlt
xor
pushf
dec
addr16
xor
mov
inc
ret
insb
add
push
inc
xchg
xchg
sbbl
add
add
fnstenv
enter
rorl
xchg
fldt
or
test
fstl
xchg
in
das
or
mov
jecxz
jb
jmp
les
add
push
sahf
int3
jbe
popa
push
sub
outsb
mov
lahf
imul
lds
xor
xor
push
mov
fdivrl
ds
js
and
jb
push
sub
inc
gs
aaa
pop
or
pop
fnsave
sbb
arpl
or
arpl
es
xor
dec
pop
xorl
mov
mov
inc
push
loope
mov
ljmp
les
mov
sub
scas
inc
mov
lock
stos
shll
mov
mov
aas
ret
icebp
cs
ficomps
movl
mov
mov
xchg
test
int3
ss
jle
jb
and
lea
add
arpl
or
dec
dec
arpl
mov
pop
loopne
pop
imul
sbb
push
scas
lea
sbb
mov
adc
repnz
sub
clc
sbb
test
rcrl
outsl
scas
adc
and
pop
enter
repz
and
inc
jb
xchg
repz
call
cmpsl
out
loop
repz
aas
std
orb
push
cli
sbb
lea
adc
fstl
cmc
and
stos
xchg
add
push
mov
mov
add
cli
add
lea
push
add
jecxz
test
sub
cmpsb
lock
lret
roll
iret
sbb
test
jp
fildll
push
loope
xchg
ficoms
mov
cmpsb
pop
and
push
jbe
jns
cmpsb
inc
inc
loopne
push
mov
push
jne
mov
test
loopne
loopne
aas
sub
cmpsl
loope
iret
xchg
test
mov
add
adc
sbb
xor
aaa
into
push
imul
in
push
sbb
sbb
jae
xor
daa
xor
mov
filds
test
push
mov
lods
push
jne
or
sbb
pop
aad
lret
xchg
popf
or
popf
cmpsl
cmp
inc
fsubs
pop
testb
imul
add
adc
push
mov
dec
mov
or
pushf
add
cmp
cmp
ret
mov
sbb
cs
cmp
or
jnp
aad
lahf
notl
jns
lods
xchg
lret
int
imul
mov
addr16
xchg
mov
xchg
out
stc
mov
test
mov
sbb
daa
lock
adc
es
andl
call
push
fisubrl
push
das
out
mov
ret
mov
push
fisttps
xchg
add
or
cmpsb
shrb
mov
push
push
jb
aam
push
or
js
mov
add
shl
test
or
xor
pop
mov
mov
aam
or
mov
lahf
mov
ret
xchg
add
and
adc
or
ficoml
and
push
adc
lods
ret
jnp
iret
data16
sbb
es
xchg
cs
push
or
or
subb
xchg
jo
jns
je
rcll
popa
jnp
push
jo
ret
mov
pop
mov
stc
lahf
lods
fbld
sbb
lret
push
shrl
outsl
mov
mov
jl
lret
bound
adc
dec
ret
lock
gs
shl
sub
test
imul
cmp
pop
scas
es
jl
xchg
call
pop
add
cs
pop
mov
in
int3
test
repz
mov
mov
push
cmp
dec
icebp
cmp
dec
xchg
cmp
test
jns
ss
imul
xor
incb
andl
and
hlt
data16
mov
mov
ss
iret
jb
xchg
push
push
stos
inc
push
out
xchg
stos
push
outsl
xchg
lock
lds
push
pop
and
xchg
ret
loope
outsb
add
mov
jne
adc
xchg
adc
pop
data16
cwtl
inc
daa
mov
je
fsubr
mov
lret
enter
xchg
call
mov
add
sbbl
int
stc
inc
and
xchg
filds
xchg
xchg
divb
orb
mov
mov
or
xchg
sbb
daa
out
mov
jg
pop
mov
nop
out
repnz
mov
inc
push
call
push
jecxz
sub
ljmp
xchg
adc
mov
addr16
daa
in
xchg
mov
cli
test
ja
ds
push
daa
push
dec
fiadds
pop
paddusb
test
aam
adc
inc
scas
cld
inc
call
pushl
and
jns
lahf
loop
mov
test
mov
or
and
test
or
pop
js
push
mov
lock
pop
lea
or
xlat
dec
test
test
push
adc
xor
mov
push
jb
shll
pop
repz
mov
mov
pop
stos
fs
sub
push
xor
or
mov
cmp
sub
and
mov
out
addl
imul
push
pop
fwait
cmp
pop
iret
aam
in
add
je
mov
fmuls
hlt
inc
hlt
dec
cld
sub
jmp
data16
repz
add
loop
repz
add
fistpll
or
lods
cmp
dec
sbb
out
inc
daa
inc
push
or
inc
sbb
test
cmpsb
cmp
pop
push
cmc
mov
pushf
push
dec
lock
cli
mov
add
jg
ret
mov
jb
ret
nop
subl
cs
mov
inc
or
mov
dec
jmp
pop
dec
mov
mov
call
xchg
dec
ljmp
fidivl
je
sbb
xchg
orl
je
lret
fnsave
in
jmp
xor
cmc
nop
cmp
push
rolb
sar
push
sarb
ret
jnp
shrb
fcoms
xor
adc
sub
jns
jge
jmp
aaa
clc
mov
dec
add
popfw
sub
or
call
movsl
xchg
sub
aaa
popf
adc
incl
rol
test
mov
in
addl
xchg
xor
out
test
rcrb
sbb
mov
imul
cmp
xor
pop
xor
divps
xor
lds
ss
and
fidivrs
hlt
and
mov
test
sti
pop
icebp
sub
ret
ret
js
lds
xchg
sub
out
mov
xor
jge
cld
outsl
xchg
mov
cli
or
leave
sbb
sub
or
mov
inc
stos
adc
add
fstp
fisubl
mov
sti
pusha
ss
fdivp
addl
out
add
xchg
and
xchg
es
andb
dec
in
jo
cmp
add
mov
ljmp
push
sub
jns
or
cmp
cltd
hlt
and
jp,pt
jecxz
out
mov
mov
jmp
insl
std
sub
fadds
lods
pop
and
fwait
stc
cmp
jbe
jmp
cmp
and
fistps
mov
mov
mov
inc
pop
fmul
call
jb
sbb
mov
es
stos
test
pushf
imul
gs
inc
mov
fwait
xchg
mov
test
call
cs
inc
xor
dec
adc
dec
lods
cli
xlat
insl
dec
dec
lret
push
aaa
sbb
mov
ds
xchg
add
mov
cmp
rcrl
jg
cmpsb
shll
pop
sbb
std
movsl
sti
repz
mov
pop
lods
pop
js
xchg
stos
js
addr16
faddl
hlt
iret
int
cmpsl
in
or
leave
jl
notl
fadd
mov
sbb
cmp
jno
lahf
pushl
into
sbb
mov
jne
inc
pushf
or
lds
or
xchg
mov
mov
hlt
sub
dec
mov
imul
aas
lods
push
lcall
inc
fsubr
mov
fs
pushf
mov
dec
pop
jbe
jmp
sub
outsb
daa
inc
ret
push
lret
or
cmp
hlt
pop
cli
movl
xor
dec
jno
mov
shr
jns
lcall
pop
pop
mov
std
in
mov
or
aaa
mov
push
or
and
test
jmp
pop
jecxz
push
mov
shlb
subb
cmp
push
daa
fdivrp
inc
test
fisubl
in
pushf
clc
inc
popa
xor
sbb
push
es
loop
int3
rorl
es
ja
cli
das
add
mov
in
lret
push
push
or
cmpsb
lea
and
push
cltd
cmp
popf
out
xchg
pop
and
mov
xchg
fisubrl
add
arpl
adc
into
xor
lahf
pop
ret
add
arpl
mov
iret
das
jne
sti
push
mov
les
adc
lds
mov
and
loope
ja
xchg
add
dec
fidivrl
xor
dec
popa
cli
add
mov
sbbl
les
xchg
push
repz
or
xchg
add
lea
jae
stos
movsb
mov
repnz
mov
sub
loop
mov
push
inc
scas
push
aaa
stc
cmp
popf
fcmovne
or
movsb
mov
mov
fidivs
shlb
pop
cmpsl
inc
roll
add
outsl
bound
jno
subl
shll
addr16
mov
mov
mov
pop
pusha
loope
hlt
or
nop
idiv
shlb
sub
pop
mov
cmpsb
sub
lcall
or
in
mov
addl
xchg
ficoml
push
mov
mov
xor
jp
daa
push
outsb
jp
adcl
mov
xchg
add
addr16
cmp
notl
sahf
lock
push
popf
cli
add
lods
adc
jb
push
mov
and
out
or
sbb
mov
push
gs
out
into
pop
push
sub
mov
aas
add
mov
fldenv
cs
fmul
loopne
pop
and
cmp
inc
cld
sti
xchg
or
and
subb
fcompl
ss
ss
jns
adc
rcl
add
mov
fdivl
xchg
inc
hlt
jne
into
or
jno
fbld
data16
stc
ds
in
sbb
add
jns
xlat
jmp
adc
mov
push
xor
xchg
arpl
in
stos
test
in
add
pushf
add
fwait
test
sub
insb
das
sub
cmp
fisubl
mov
dec
int
jnp
fsts
inc
aaa
cld
sbbb
inc
pop
and
stos
shrl
stos
jo
sbbb
xchg
jae
out
push
mov
cmp
jns,pt
mov
mov
push
popf
sub
jmp
jns
outsl
cmp
out
test
jbe
outsb
fwait
lods
dec
push
adc
mov
iret
fsts
rcll
mov
int
adc
push
call
jl
jo
dec
jns
aad
mov
ds
push
jo
pop
fsts
sub
cmp
mov
in
push
or
insb
mov
test
xlat
dec
rcrl
push
xchg
push
jno
movsb
mov
popa
xor
aas
sub
adcl
adc
and
mov
lods
nop
or
rclb
mov
mov
pop
or
mov
add
dec
pop
mov
test
pop
push
mov
bound
pop
adc
stos
jbe
mov
add
fucomp
test
xchg
push
int
movsb
nop
push
adc
lods
and
cmpb
pop
xchg
inc
mov
ret
mov
shll
xor
scas
mov
cli
cli
add
lea
push
cmpsl
ret
fldcw
sub
lds
stc
mov
outsb
jl
leave
sbb
add
xlat
push
sub
dec
shrb
outsb
out
jle
mov
inc
enter
mull
and
sarl
adc
add
push
dec
push
mov
xor
or
inc
mov
in
std
push
iret
call
or
jo
ss
call
sbbl
jl
je
pop
int3
gs
mov
in
xchg
xlat
push
mov
adc
mov
test
mov
xor
outsb
or
iret
cmp
jne
jp
leave
pusha
mov
jmp
pop
cmc
ret
mov
dec
jl
stc
add
sbb
and
inc
je
cs
loopne
sub
fisubrl
stos
inc
xor
push
mov
jl
mov
inc
sbb
sub
das
pop
or
push
xchg
mov
daa
loop
test
ja
jbe
das
and
add
test
dec
test
ss
imul
add
mov
pop
mov
or
and
cmpsb
add
fcoms
sbb
lcall
mov
enter
mov
fisubs
stos
outsl
das
mov
jne
mov
ljmp
scas
jne
inc
out
fcmovnb
cmp
rcr
dec
sbb
sbb
sbb
cltd
rorl
add
sbb
pop
mov
mov
xlat
xchg
sub
push
dec
aam
adc
and
adc
mov
and
int3
test
sub
fildll
pop
dec
ret
shl
cmp
mov
inc
movsl
dec
fadds
imul
ss
mov
cmp
xor
mov
stc
mov
cmp
out
test
inc
pop
xchg
inc
rclb
jo
mov
scas
out
pop
cli
xchg
add
cmp
cwtl
push
dec
in
cmp
into
call
cmc
lods
fnstsw
pop
aas
lret
lret
adc
push
sbb
dec
cmp
sub
aad
sub
dec
pop
in
push
pop
cmp
adc
inc
dec
push
jns
loopne
aaa
fs
sub
xchg
shll
and
xor
push
mov
mov
sti
shlb
mov
aas
sub
movsb
repz
fmull
ja
inc
sbbl
stos
mov
rclb
mov
test
clc
push
repnz
inc
or
clc
loop
filds
sub
pop
repnz
fidivs
mov
ds
push
inc
cmp
jle
icebp
movsl
xchg
lahf
push
mov
add
xor
int
mov
and
in
xor
push
enter
sbbl
push
mov
xchg
stos
add
jnp
xchg
insl
std
mov
cmc
repnz
negl
iret
adcl
jns
sahf
pusha
and
mov
int
call
or
popa
nop
cmpsb
mov
outsb
adc
popf
inc
fimull
pusha
add
lcall
orb
lcall
leave
pusha
out
and
cmpb
test
mov
push
sub
loop
gs
mov
call
int
icebp
mov
add
jmp
test
sub
mov
jmp
fistpl
dec
mov
repz
ja
xor
stos
or
in
mov
mov
and
test
imul
mov
jecxz
xchg
pop
add
pop
ss
or
cwtl
stos
loope
bound
hlt
xorb
push
push
jne
dec
lods
jnp
test
jnp
xchg
mov
xchg
pop
mov
mov
xchg
test
push
mov
lods
inc
out
inc
lods
out
aad
test
lods
mov
sbb
int3
stos
fs
icebp
or
mov
test
push
ret
xchg
mov
lds
dec
push
negl
sbb
dec
add
iret
mov
fistl
push
xchg
imulb
adc
out
data16
aad
mov
push
shrb
int3
mov
pop
pop
push
push
rorl
sahf
pop
mov
movsb
jo
ljmp
inc
cmp
lods
dec
and
push
test
stos
push
add
xchg
adc
xor
test
ds
xchg
jo
inc
es
movsl
loope
mov
cmpl
adc
fdivs
hlt
iret
mov
aas
cli
or
xchg
stos
cmp
mul
lret
unpcklps
je
and
repz
xor
ds
sub
arpl
insb
cmp
popf
push
pop
popf
mov
dec
push
jmp
ret
stos
insl
sbb
popf
inc
cmp
cmpsb
testb
lods
xor
push
stos
inc
or
lcall
jmp
out
ss
call
jnp
or
adc
pusha
fcomps
scas
scas
in
pop
cmp
lock
dec
inc
fwait
mov
cmp
and
cltd
xor
jmp
nop
fwait
dec
mov
loope
testb
add
add
je
sbb
js
and
cmp
adc
sbb
hlt
subl
test
out
mov
sub
dec
push
fdivrl
push
pusha
int
iret
fmul
jbe
lods
lret
dec
and
daa
cs
jle
pushf
mov
xchg
mov
pop
push
jmp
jbe
jo
pop
sbb
fisttpl
loop
or
lods
cli
dec
adc
clc
sbb
and
cld
jp
clc
das
scas
xor
sbb
inc
sbb
xchg
pop
loopne
push
or
mov
rcl
add
xlat
push
pop
mov
jle
adc
mov
mov
sub
cmpsl
ja
aam
mov
clc
mov
xor
and
or
lds
xchg
cs
push
sub
leave
and
imul
sahf
imul
and
enter
or
shll
adc
data16
scas
in
jmp
adc
cmp
adc
movsb
shl
mov
out
cltd
mov
jno
ds
xchg
std
js
iret
cs
mov
adc
into
movsl
cs
les
mov
aas
ljmp
push
fwait
loope
clc
adc
cmp
movsl
je
movsl
cmpsl
jb
push
shl
test
add
add
cs
inc
jne
je
mov
inc
cmp
iret
arpl
inc
fstp
push
xchg
dec
add
jnp
sub
jne
shlb
push
cmpsl
out
fcomip
push
movsl
jg
addr16
and
xchg
jno
and
mov
movsl
ljmp
jo
pop
mov
ss
sarb
fprem1
int
jge
into
out
fbstp
jne
ds
adc
repz
mov
mov
cmp
sub
out
inc
sbb
rclb
out
xlat
jecxz
xchg
dec
inc
fsubr
inc
cmp
pusha
pop
subl
scas
mov
xlat
repnz
pop
jle
aaa
mov
and
insb
fistl
add
push
add
subl
xchg
sbb
inc
lcall
xchg
rorl
sbb
jmp
shrb
jmp
xchg
je
movsb
xchg
mov
add
mov
frstor
aaa
incl
pop
lods
pop
rol
mov
retw
loopne
aas
pop
dec
repnz
arpl
jp
xchg
stos
idivb
cmp
mov
enter
push
ljmp
mov
push
cmp
fs
and
mov
cmp
out
mov
pushf
push
cmp
pushl
adc
imul
leave
push
xchg
int3
mov
int
negl
ficomps
adc
or
scas
sahf
and
push
pusha
ss
mov
mov
xor
into
jmp
cli
inc
in
inc
rorl
dec
pop
dec
dec
adc
aam
pop
mov
adc
mov
lods
cmpxchg
outsb
leave
lock
sarb
push
daa
push
rcl
repz
pop
cmp
imul
lods
inc
and
or
adc
leave
out
shr
push
mov
adc
cmpsl
sbb
jbe
mov
sub
out
mov
lods
hlt
ret
pusha
mov
sahf
sahf
es
sub
jno
mov
mov
xchg
pop
pop
das
fwait
sbb
bound
ret
daa
outsl
jne
mov
push
in
sbb
jb
testb
jo
adc
pop
hlt
add
mov
pop
mov
call
jno
mov
cmpsl
cmpb
dec
adc
inc
repnz
push
mov
scas
dec
lret
cs
les
ds
pop
dec
pop
jns
mov
push
cmp
pop
push
fdiv
inc
bound
pop
call
mov
pop
outsb
dec
mov
dec
jno
sub
repnz
dec
loopne
push
shrb
add
data16
hlt
cmp
out
inc
xor
test
pop
test
icebp
pop
adc
fildl
cmp
xchg
iret
dec
pop
jge
pop
out
push
fs
or
clc
stos
xchg
sub
mov
outsl
add
scas
scas
dec
and
xchg
mov
cmp
or
xor
cld
pop
cmp
jb
aad
push
out
mov
sbb
es
mov
mov
rep
cwtl
jnp
fisttps
jnp
cmp
xchg
sbb
loop
mov
or
fdivr
sbb
movsl
xchg
cmpsb
mov
dec
hlt
push
in
mov
mov
lods
andb
shl
mov
push
scas
cmp
cmp
mov
popa
lods
fnstenv
mov
mov
sahf
cmpl
xchg
dec
push
or
push
popf
cmp
jne
xchg
add
sbb
pop
ret
xor
popf
sub
adc
loope
cld
adc
sbb
icebp
dec
and
lret
mov
into
jbe
add
xchg
add
xor
pop
pop
mov
jne
fdivl
fisubrl
ret
dec
cli
dec
mov
repnz
adc
adc
cmp
push
adc
bound
ja
stc
je
mov
insb
jp
sbb
add
and
cmp
mov
pop
xchg
inc
add
stos
inc
xlat
aaa
movsb
jge
ret
sbbl
roll
mov
mov
call
pop
pop
outsl
jmp
insb
ss
xchg
out
sbb
or
cmp
xchg
daa
rcr
mov
inc
in
dec
mov
sbb
mov
xchg
pop
mov
fisubl
mov
ds
sahf
rcr
int
mov
mov
mov
cmp
jne
mov
xchg
aaa
movl
dec
sub
hlt
in
lds
lods
insb
mov
das
push
lahf
mov
lea
push
push
cmp
jmp
clc
pop
lcall
xchg
sbb
fisubl
lea
mov
and
repnz
iret
mov
imul
aas
push
mov
and
jmp
adc
dec
xchg
mov
lcall
push
daa
arpl
push
mov
xchg
out
rcr
mov
cld
mov
lahf
jbe
or
jns
std
push
popa
repnz
jp
clc
out
jbe
js
xor
mov
lock
ret
mov
adc
lret
mov
dec
movsb
xchg
mov
std
loopne
sub
mov
and
scas
das
call
jbe
and
add
dec
je
hlt
ficomps
mov
icebp
movsl
mov
cmpsl
dec
jp
push
sarl
xchg
xor
jle
sub
push
add
sti
loopne
xor
nop
and
popa
jne
xor
clc
call
pop
repnz
mov
iret
sub
adc
add
jns
ds
dec
loopne
inc
push
hlt
mov
fwait
xor
mov
iret
add
iret
data16
mov
or
rorb
shrb
mov
or
lcall
aad
jne
mov
mov
inc
inc
aaa
into
xor
pop
ds
pop
mov
call
sbb
negl
aad
mov
outsl
shlb
rolb
arpl
or
arpl
cltd
pop
popa
sbb
fisttps
inc
rcl
pop
lock
adc
cmc
jns
xchg
in
lcall
out
push
sbb
pusha
sub
or
dec
bound
jmp
insl
add
loope
sbb
fistpll
gs
lahf
adc
addr16
incb
xchg
push
dec
jle
shl
mov
pop
andl
mov
loop
movsb
ret
pop
fisubs
nop
daa
sbb
pop
pop
fimull
add
lahf
jno
loope
shlb
movsl
imul
stos
mov
dec
movsb
push
jl
sub
cmp
loope
vmovmskps
pop
das
mov
dec
push
jmp
adc
outsl
int3
sahf
hlt
enter
fistpll
xchg
loope
call
and
subb
or
inc
fwait
pop
cmpsl
mov
push
in
cmp
fstl
addr16
mov
inc
push
jmp
jp
scas
xor
cmp
inc
pop
out
mov
push
push
scas
dec
call
xor
sub
xchg
sbb
test
pop
aas
fwait
cmc
xchg
movsb
sbb
cmp
dec
lds
ficomps
popf
pop
sbb
dec
inc
and
push
pop
ds
adc
mov
lret
cmp
movsl
pop
out
or
test
repnz
push
out
leave
cmpsl
lods
dec
sbb
incb
mov
jns
out
scas
aaa
dec
sbb
jle
xor
xchg
xor
jb
mov
mov
lods
cmc
xchg
xlat
outsl
pop
pushf
popa
hlt
jp
loopne
ss
add
in
addr16
iret
and
adc
shll
lret
fcmove
imul
sub
nop
push
xchg
rclb
mov
pop
push
aaa
mov
sbb
adc
lret
add
lret
icebp
mov
outsb
or
pop
xchg
adc
and
xchg
mov
inc
iret
pop
sti
pop
dec
in
cltd
xchg
sub
pop
data16
or
daa
sti
test
inc
jb
inc
mov
pop
rorb
jns
fistpll
or
mov
jp
sahf
das
mov
enter
sub
mov
adc
popa
push
das
fistps
scas
and
sbb
loope
xchg
adc
jecxz
xor
mov
fnstenv
mov
jg
sbb
push
aas
orl
shll
std
sbb
cltd
lods
or
and
mov
push
xor
aaa
xor
jg
xchg
push
out
aad
add
and
inc
fnsave
add
mov
stc
je
pop
cltd
dec
dec
mov
mov
nop
mov
add
addr16
mov
scas
inc
inc
sbb
lahf
or
rcr
lods
mov
lret
sbb
add
jne
call
test
das
mov
mov
int
insl
push
xchg
add
iret
test
daa
testl
imul
add
fldl
nop
fs
inc
hlt
iret
je
sub
je
sbb
xchg
and
xor
adc
ss
push
es
jmp
in
std
data16
sbb
nop
pop
mov
adc
push
jge
arpl
inc
sbb
iret
xchg
mov
pushf
movsb
push
cmpb
hlt
shrb
push
pop
icebp
xchg
andl
sbb
repz
jno
inc
es
ficoms
stc
sti
mov
and
inc
sbb
push
add
jmp
shl
cmp
mov
test
add
enter
in
popf
test
mov
dec
les
das
cmp
sbb
out
xchg
push
xchg
mov
cmp
mov
dec
flds
inc
cmc
mov
loopne
sbb
jne
fisubs
adc
xor
dec
or
cmp
fisttpll
cli
sahf
sub
cli
std
inc
pusha
clc
lret
xchg
bound
loop
cmp
pop
cmp
aaa
push
into
sbb
test
clc
or
in
arpl
xor
xchg
cmpsb
fldt
mov
xlat
in
pop
xchg
pusha
mov
sbb
mov
movsl
clc
dec
mov
cmp
mov
or
cmp
adc
xchg
orl
sbb
sub
jge
sub
xchg
adc
inc
cs
movsl
xor
cmpsl
jge
out
fwait
test
xchg
das
inc
sbb
cmp
pusha
cmp
pop
imul
cmp
add
add
mov
mov
das
inc
pushf
neg
pop
ljmp
das
cmp
test
daa
cmp
repz
dec
ficoms
stos
testl
cmp
in
test
aad
cmp
scas
jl
dec
in
mov
cwtl
insb
data16
push
outsl
jg
xchg
insb
lahf
xor
clc
cmpsb
push
cmp
cli
or
gs
out
xchg
bound
out
jle
in
das
ljmp
dec
arpl
push
jmp
pushf
call
mov
lds
arpl
iret
je
inc
and
inc
sub
mov
or
push
outsb
shr
jmp
or
push
popf
insl
lea
xchg
sti
pop
and
mov
add
push
cmp
dec
jg
mov
push
adc
popf
mov
and
daa
cltd
lock
cwtl
cmc
mov
cmp
push
xlat
jle
push
mov
xlat
imul
or
subb
mov
into
data16
leave
pusha
rcr
push
mov
pop
fstl
dec
push
lods
outsb
mov
lods
add
outsl
daa
dec
lret
lret
and
scas
jae
inc
mov
or
fnstsw
addr16
sbb
jns
lock
pop
mov
and
sahf
in
test
shrb
js
loopne
mov
fsts
sub
bound
cmc
sbb
dec
jmp
cld
rcrb
outsl
push
pop
cld
in
pop
shl
mov
inc
dec
xchg
mov
mov
cmp
daa
sub
lahf
dec
clc
enter
dec
call
pop
in
xchg
inc
pop
sahf
xor
andl
jb
jle
and
and
cmp
fsubrs
int3
inc
enter
mov
lock
jne
xor
sbb
stc
mov
pop
scas
cmpsl
imul
mov
push
cmp
jnp
push
hlt
push
add
dec
lahf
jmp
jge
scas
rcrb
mov
test
cmp
hlt
cmp
push
xchg
hlt
lods
and
repz
into
sbb
dec
mov
pop
xchg
mov
mov
cmpsl
inc
inc
loope
fcoms
mov
xorb
jo
hlt
js
mov
adc
fistpll
push
movsl
cmp
and
mov
mov
adc
xchg
push
cmp
and
sub
jmp
lret
lahf
ljmp
lods
mov
xchg
lock
lcall
sbb
and
jae
adcl
mov
out
pop
cmp
fadds
sub
cmpsb
adc
in
testb
bound
mov
nop
fbld
xor
push
push
or
mov
pop
stc
cmp
andl
jns
sbbl
cmpsl
jnp
mov
int
clc
mov
stc
dec
leave
ret
pop
cld
clc
popa
mov
aas
xlat
aas
mov
xchg
mov
push
int3
pop
insb
cmc
sub
inc
into
loop
das
sub
bound
sbb
std
adc
push
inc
fadds
ficomps
mov
hlt
int
sub
outsb
and
xchg
clc
xchg
sub
mov
mov
sarl
mov
dec
cmp
repnz
mov
mov
cmp
fnsave
dec
test
cli
cmpl
fisttps
mov
mov
ret
lcall
sbb
cmp
lret
test
jl
loope
push
adc
dec
sbb
xchg
popf
ror
icebp
pop
loope
xlat
out
enter
ljmp
insl
mov
mov
jne
iret
cmp
popf
das
lock
insb
jecxz
fildl
jmp
xor
lret
cld
imul
fwait
sbb
fs
std
mov
je
rcll
test
rol
lods
lret
jb
rolb
je
mov
sub
push
imul
addr16
outsl
jne
xor
sahf
std
dec
or
xor
ds
fwait
pop
popf
pop
repz
jg
movsl
inc
test
jp
add
xor
inc
arpl
mov
mov
outsl
repz
and
jmp
sbb
cmp
jg
adc
push
shrl
push
aaa
mov
cmp
or
ror
jo
pop
push
pop
or
testl
xor
mov
daa
pop
lods
shl
out
xchg
frstor
sbb
adcb
xor
clc
add
xchg
sbb
cmp
adc
adc
mov
pop
test
ss
mov
push
or
sahf
pop
aas
mov
add
xchg
in
pop
dec
jmp
adc
push
sub
mov
jae
or
sbb
adc
ss
fnsave
sub
addr16
sar
divl
cmp
add
test
movsl
rcrl
dec
cmpsl
mov
iret
xor
hlt
or
push
mov
xchg
stos
pop
pop
mov
cwtl
or
stc
mov
xchg
push
pop
iret
pusha
mov
insb
mov
jns
nop
adc
mov
andb
push
fwait
cmp
adc
sbb
stos
xor
rcrl
in
xor
cmp
jle
jle
dec
and
and
lcall
test
fbstp
mov
loopne
popa
lock
sub
mov
mov
push
push
pushf
jmp
adcl
outsl
fidivrl
jl
push
scas
testb
add
fdivrl
dec
lret
push
push
mov
cmpsb
sub
lods
fxch
add
cld
cli
ss
adc
add
cld
xchg
pop
out
movsl
sahf
xor
lret
je
mov
leave
sar
outsl
notl
rcl
addr16
jg
and
dec
es
inc
pushf
imul
mov
xchg
test
add
xchg
sub
sahf
insl
lock
and
insl
mov
mov
mov
mov
and
je
xchg
lods
dec
cmp
pushf
movsb
pop
hlt
mov
sbb
xchg
cmp
daa
jle
mov
out
sub
mov
arpl
icebp
pop
scas
ss
test
dec
bound
cmpsb
and
add
pop
mov
in
andl
push
jb
in
mov
fiadds
push
dec
inc
movlps
aaa
sti
xchg
push
call
sbb
ljmp
adc
pop
push
popf
aam
mov
dec
loopne
xchg
ret
loop
cli
addr16
xor
mov
test
jo
mov
sbb
mov
insl
faddl
jne
sbb
iret
xchg
stc
push
adc
add
xor
rcrl
repnz
pop
add
mov
jb
cwtl
mov
add
ja
pop
test
push
or
ss
cmpsb
loope
mov
inc
aas
dec
addb
or
xchg
push
ljmp
imul
leave
mov
je
movsl
xchg
push
and
inc
jno
xor
shr
sarl
mov
mov
push
pop
mov
inc
mov
std
jp
mov
mov
jbe
xor
std
xor
xchg
cmc
std
jmp
fstps
jl
cwtl
jae
pop
pop
mov
bound
ret
inc
fdiv
sub
ficomps
push
pusha
testl
jle
enter
loop
popa
outsl
push
ljmp
out
and
pop
jle
cmp
sub
add
addr16
push
shl
jb
imul
dec
inc
fs
or
stc
jmp
xchg
mov
mov
push
arpl
lds
xchg
mov
adc
int3
lds
fadds
sub
mov
out
cli
popa
push
xchg
lcall
out
mov
scas
add
ret
inc
das
pop
and
insl
dec
jae
in
leave
pusha
push
inc
outsb
xchg
add
sbb
subb
scas
inc
dec
pop
sahf
cld
push
xor
jecxz
jb
int
iret
cmp
das
push
jmp
call
inc
mov
and
cmp
mov
daa
aaa
insl
sbb
mov
add
jmp
lcall
pop
jl
aas
mov
lret
cmp
out
leave
lret
loopne
fists
test
cmp
push
lock
int
cmp
lret
inc
dec
sub
notl
push
call
xchg
xchg
xor
mov
xchg
les
xchg
mov
mov
or
inc
mov
adc
test
loopne
outsl
or
sahf
imul
jecxz
or
sub
cmp
fwait
in
std
int
or
pop
cmp
sub
xlat
repz
sbb
fadd
push
les
fsubrl
loope
adc
and
enter
inc
leave
ss
jecxz
sbb
icebp
pusha
or
movsb
cmp
sar
pop
frstor
add
xchg
imul
movsl
mov
push
out
mov
xlat
les
jnp
imul
jge
popf
push
jne
sbb
mov
pop
sub
fwait
insb
test
sub
dec
xor
sub
push
loopne
or
lret
repz
int3
mov
jnp
adc
mov
popf
mov
fistpl
push
push
es
jnp
mov
out
push
inc
sahf
aaa
xor
out
jecxz
or
ret
pop
pop
mov
jp
sub
testb
cmp
xor
dec
fnstenv
fdivrl
notb
xor
sbb
add
xsha1
cmpsb
or
xor
inc
mov
pushf
xor
test
fnstcw
lret
mov
loope
outsl
adc
cs
cli
pop
test
js
adc
pop
mov
sub
cmp
jg
es
or
lahf
aas
xor
and
fwait
pop
sub
jecxz
in
pop
mov
lds
dec
cmp
sub
mov
ficompl
out
cmp
outsl
jmp
and
ljmp
push
jg
sub
call
and
fildl
pop
sbb
iret
and
lcall
mov
aam
gs
shl
xchg
subb
mov
and
mov
cmp
jle
insl
cmp
xchg
hlt
outsl
jno
xchg
sub
cmpsb
xor
icebp
imul
mov
test
scas
outsl
fwait
mov
ret
out
mov
pop
iret
cmp
cwtl
lods
pop
lods
lret
bound
scas
rcrb
cmpb
xor
push
nop
inc
int
lret
xlat
jb
test
ss
fisubrs
xor
pop
dec
cmp
dec
pop
lds
insl
mov
xchg
pop
lret
sub
inc
xchg
addr16
fbstp
imul
xchg
lds
or
sbb
imul
rcrl
xchg
popf
and
mov
adc
add
inc
js
add
fwait
xor
sub
pop
mov
jmp
or
cmp
sub
xchg
test
xchg
ja
push
in
jecxz
xor
dec
pop
xchg
mov
in
movsb
cmp
dec
ret
push
adc
inc
pop
sahf
notb
mov
gs
loopne
cmp
dec
in
mov
cmp
popf
inc
jg
imul
jns
popf
xor
lea
and
rorl
mov
and
fcompl
xlat
pop
and
adc
and
xor
scas
sbb
add
xchg
das
lea
cmc
sub
jbe
rorl
xlat
outsb
inc
rclb
call
push
inc
test
push
pop
xchg
or
mov
insb
jge
xor
aas
pop
jno
mov
mov
fcmovnb
pop
orl
loopne
push
loop
push
cmpsb
mov
fidivl
xchg
xor
push
stos
clc
add
sub
sub
mov
adc
dec
push
aam
dec
in
adc
mov
scas
xchg
sub
cmp
and
inc
cwtl
sahf
inc
mov
lock
lcall
in
adc
mov
push
xchg
mov
inc
mov
xchg
jb
out
test
lods
inc
mov
or
mov
inc
mov
pop
mov
push
mov
adc
sbb
fisttps
pop
and
mov
and
push
xor
xor
adc
popl
mov
int
stos
push
lahf
lret
mov
cmpsl
dec
inc
into
orl
lods
cmp
add
fs
cwtl
js
pusha
xor
ja
subl
xorb
xor
xor
xchg
nop
stos
sbb
cli
jmp
ret
inc
es
push
add
sub
cmp
imul
mov
push
xchg
nop
mov
xor
pop
add
in
mov
or
inc
in
fmull
push
pushf
scas
inc
xor
int3
fists
mov
std
adc
or
rclb
xchg
xor
int3
mov
xchg
ss
insb
mov
out
jmp
call
jb
mov
fdivr
xchg
aaa
imul
je
fs
dec
scas
jecxz
push
sub
movsb
test
pusha
test
cs
mov
loop
pop
pop
idivb
jno
jo
dec
imul
push
mov
jmp
mov
inc
or
cmpsl
xchg
dec
add
loop
shll
js
in
xchg
lahf
pusha
lods
cmp
xor
andl
jle
sbbl
lcall
pop
fwait
pop
xor
scas
push
mov
push
cmp
xor
mov
xchg
lret
shlb
mov
mov
sbb
shll
sub
test
cmpsl
scas
leave
jle
cld
xor
call
inc
cli
outsl
add
in
mov
sbb
fucomp
push
cmp
inc
in
push
or
xorb
cli
cmp
jge
dec
scas
insb
pop
icebp
sahf
mov
cmpsb
or
data16
in
xor
push
mov
sub
sub
push
pop
push
add
fucomp
lods
daa
in
add
sub
xchg
jmp
out
jno
fdivl
inc
sarb
add
jge
lcall
or
or
jge
fs
fldenv
mov
dec
scas
mov
pusha
pushf
xor
add
push
outsl
hlt
push
movsb
aas
or
shrl
push
imul
mov
enter
out
call
fsincos
addl
mov
and
call
adc
mov
mov
xlat
mov
or
jne
shll
scas
mov
mov
jl
pop
or
lcall
loope
stos
icebp
jl
xchg
push
push
inc
in
lret
sbb
movsl
dec
mov
shrl
mov
fdivr
bound
pop
mov
cmp
adcl
mov
add
sub
cltd
mov
inc
lea
pop
loopne
sbb
arpl
pop
push
inc
mov
jle
fistpll
mov
jb
iret
rclb
js
pop
scas
inc
aam
cmc
int
icebp
les
subl
xchg
pop
adc
inc
les
loop
xchg
leave
into
pop
mov
jge
int3
and
cmp
add
mov
jle
cmp
or
stos
syscall
pop
sbb
mov
cmp
data16
push
push
sbb
gs
xor
adc
jb
push
js
aas
into
stc
inc
out
xor
mov
inc
lds
notb
and
cltd
xor
push
mov
mov
sub
inc
and
adc
js
mov
pop
xchg
or
lcall
out
stos
test
jne
mov
insl
dec
jno
in
cmp
inc
pop
xor
jmp
mov
add
sub
ds
xchg
jmp
test
movsb
adc
sbb
movsl
out
cmp
cmp
mov
add
adc
jb
in
push
popl
bnd
add
cltd
xchg
sbb
cmc
jns
xor
inc
mov
stos
in
inc
push
inc
cmp
adc
mov
test
lahf
ss
push
jo
pop
mov
pop
jecxz
fcomi
lcall
out
fcom
jle
push
out
mov
lods
adc
fisttpl
pop
jb
mov
xchg
jnp
or
scas
jne
cmc
adc
or
jge
aad
loop
bound
sbb
jb
pcmpeqd
or
mov
shl
inc
mov
jns
inc
pusha
repnz
pop
stos
dec
repz
and
sub
mov
jo
jge
mov
mov
inc
add
jle
mov
mov
cmp
xor
sbb
xor
mov
push
jge
lret
bound
arpl
fwait
repz
jg
fcoml
or
scas
jno
pop
jle
pop
mov
lock
xor
mov
pop
adcl
call
lock
jb
repz
add
shll
cs
outsb
mov
les
in
sarl
jns
lcall
fisubrl
int
xchg
cmp
push
sbb
pushf
hlt
lods
and
cmp
adc
push
xchg
aad
push
daa
xchg
jae
inc
inc
jecxz
ja
push
xchg
jmp
fbstp
dec
in
jmp
imul
xor
cmp
gs
insb
push
fistps
stos
iret
ss
jmp
bound
scas
xchg
sub
push
dec
cmc
scas
add
dec
jecxz
inc
int
hlt
mov
sub
aad
fimull
sbb
xor
lods
push
nop
ja
ss
push
dec
mov
into
jg
ss
add
cmpsb
dec
sahf
add
inc
stc
dec
loopne
cwtl
mov
inc
in
pushf
fsubl
mov
loopne
test
inc
push
ljmp
jb
inc
xor
dec
add
xchg
jbe
sub
push
add
mov
lcall
test
jecxz
scas
mov
xchg
sub
mov
fnstenv
cmp
push
sub
call
push
aas
pop
add
nop
mov
ret
adc
push
cmp
in
push
out
lcall
stos
mov
les
sarl
inc
mov
pushf
movsl
cmp
jge
xchg
push
movsl
cmp
std
mov
insb
dec
lret
cld
xchg
std
fldcw
push
popf
sbb
inc
scas
mov
sbbl
add
jb
clc
adc
mov
jae
and
leave
ret
jnp
stos
inc
xor
in
mov
push
and
mov
mov
mov
inc
jecxz
sub
out
orl
adc
push
in
dec
xchg
cmp
test
adc
arpl
push
xorb
sti
add
lahf
outsl
push
daa
jle
xchg
lock
stos
movsb
mov
hlt
decl
popa
scas
stos
jle
push
add
push
sti
shrl
rcl
pop
loop
mov
sub
xchg
jb
hlt
add
negl
loope
leave
xor
out
mov
aad
repz
stos
adc
mov
cmc
in
pop
in
int3
lret
sub
xchg
sub
sti
push
leave
cmpsb
jb
aas
sbbb
sarb
add
push
sti
mov
jnp
daa
pop
jbe
sbb
and
std
push
mov
decb
jl
mov
mov
lods
or
lret
add
fwait
les
sbb
in
sbb
lret
mov
jmp
cmpsb
sub
mov
js
push
inc
loopne
mov
daa
jns
lock
ss
mov
pop
mov
fadd
les
jne
xor
and
jp
xchg
xor
jne
dec
je
mov
enter
shrb
push
aas
mov
insl
sbb
sub
pushw
xchg
add
jne
je
aad
into
bound
insb
sbb
fucom
xorl
xchg
pop
or
cs
push
stos
or
dec
cli
pop
cmp
fdivrs
dec
and
mov
mov
or
and
loope
aam
add
pop
and
or
or
mov
sbb
mov
ss
mov
xchg
mov
cmp
das
insl
or
insb
push
pop
cmp
mov
arpl
jmp
xchg
adc
sub
mov
cmpsl
ret
shrl
lods
cmp
inc
xor
je
dec
in
cltd
push
je
lock
dec
std
or
jmp
iret
xchg
insl
mov
adc
mov
scas
aam
jg
xor
pop
icebp
mov
or
ret
daa
movsl
mov
outsb
inc
data16
data16
push
in
test
push
fucomip
cmp
movsl
cmp
pop
adc
std
push
sub
push
data16
out
mov
fwait
and
jl
imul
adc
fcomps
mov
sbb
and
lcall
js
fs
push
and
xor
or
iret
fld
addr16
and
mov
aas
push
jmp
or
jmp
aam
out
and
lcall
push
mov
xchg
push
xchg
add
sub
aaa
pop
lods
xchg
pop
inc
scas
xchg
jne
cmp
stos
dec
movsb
push
out
mov
sar
outsl
pushf
or
inc
push
sub
aam
les
and
push
or
pop
jge
aaa
into
fisubs
call
andb
sbb
jnp
shl
mov
push
insb
inc
aam
fwait
mov
rcr
out
pop
je
shrl
dec
and
sbb
loope
leave
popa
daa
out
push
gs
bound
in
mov
scas
shlb
fbstp
sub
loop
xchg
std
xchg
nop
add
scas
pushl
es
lahf
in
pushf
push
scas
inc
fstp
out
pop
out
pop
stos
fs
mov
popa
push
inc
shrb
inc
fadd
mov
sarb
sbb
cmpsl
jge
lret
adcb
push
add
or
lock
imull
push
xor
pusha
leave
out
rorl
and
std
xchg
fidivs
hlt
add
and
add
mov
adc
and
push
xchg
addr16
adc
insl
cs
inc
fwait
ss
xchg
mov
xor
dec
or
ret
xor
in
jmp
cltd
cmp
sub
inc
fsubrl
jns
mov
imul
outsl
int3
cmovle
mov
movsl
and
lret
ret
cmpsb
pop
call
gs
icebp
adc
psubsw
insl
pop
jecxz
popa
enter
inc
mov
mov
call
enter
or
mov
sub
stos
outsb
std
enter
jno
xor
ret
fistpll
add
mov
sub
or
pop
and
aam
clc
shlb
xchg
lods
hlt
xchg
mov
and
fpatan
sbb
push
push
push
pop
sbb
sub
pop
ljmp
jno
mov
mov
adc
imul
popf
dec
prefetchwt1
or
mov
lcall
fbld
xor
push
test
jp
sbb
stc
add
clc
shll
aas
push
fldl2t
ljmp
rorb
movsl
data16
lods
fnstsw
out
test
movsb
xchg
xor
sub
jp
add
aas
lahf
push
xchg
mov
out
mov
mov
test
xchg
jge
sbb
repz
shll
jle
sbb
rcrl
lds
enter
pop
lahf
or
jae
stc
mov
xchg
push
aas
dec
cmp
pop
mov
mov
outsl
push
jmp
mov
or
push
and
push
mov
sbb
mov
sbb
lds
xor
jecxz
xor
cmp
ret
enter
out
cmp
mov
lret
repnz
popa
add
pusha
fsubr
jmp
xchg
mov
mov
or
mov
movsl
movsb
pop
repz
sbb
decl
jp
mov
mov
add
sbb
out
dec
jecxz
push
add
scas
jne
add
adc
rclb
subl
test
sub
xchg
cmovae
mov
sbb
jb
mov
fbstp
push
jno
add
ds
loope
push
pusha
dec
pop
cmpsb
sub
mov
dec
sub
cmpsb
mov
sbb
lcall
pushf
iret
inc
jns
jbe
xchg
cld
ss
icebp
les
xor
icebp
cmpsl
cmp
and
cli
aam
jb
xor
mov
outsl
aaa
gs
je
cmp
mov
rorl
sarb
and
stos
sahf
pushf
es
dec
sbb
cmc
jae
cmp
cs
filds
stos
data16
sub
sub
ret
addr16
fucomip
rorb
lock
dec
fldenv
rcr
pusha
lret
inc
mov
xchg
dec
xchg
imul
pop
lahf
lea
pushf
pusha
les
in
inc
outsb
pop
mov
daa
mov
pop
or
push
cmp
dec
cltd
dec
aaa
add
fidivs
push
adc
sbb
xor
test
pop
jb
jge
test
in
ret
stos
adc
in
icebp
adc
lds
pop
jp
mov
aaa
jge
add
push
jmp
sub
and
fxch
sbb
in
stos
hlt
gs
in
in
sub
xchg
sub
jl
lahf
pop
pop
inc
mov
das
push
jne
push
xor
mov
add
xchg
pop
mov
cwtl
cld
shr
mov
pop
loop
sbb
cmp
testl
jge
mov
dec
jecxz
add
scas
inc
jg
mov
aad
repz
push
cmpsb
popf
sahf
dec
gs
pop
cmp
xchg
push
sbb
mov
loopne
rol
add
add
jne
stos
cmp
loope
cmp
imul
outsb
mov
mov
and
out
lods
lock
paddsw
iret
fbstp
rcl
and
xchg
sub
cld
inc
data16
inc
ss
add
xor
movsb
jo
mov
ret
shr
shrl
sbb
mov
push
imul
sub
rcll
add
xor
cmp
enter
out
call
or
push
mov
cmp
mov
int3
loope
cmc
push
imul
push
add
cmp
fs
or
loop
sbbl
dec
movsb
and
xor
movsl
xchg
outsl
push
ret
sbb
sub
jp
movb
jb
adc
xlat
arpl
fstps
inc
in
mov
cmp
cmp
sub
xchg
fcmovnbe
xor
and
mov
or
int3
test
rcl
sub
fnsave
adc
neg
jo
mov
scas
out
mov
int3
leave
lea
lds
jb
pop
xchg
adcb
mov
es
dec
pop
add
adc
inc
std
pop
pop
es
push
popf
subb
mov
sub
inc
gs
xchg
pop
push
repnz
out
sub
pop
sti
xchg
nop
sbb
and
fdivl
loopne,pn
enter
pop
loope
add
jg
adc
or
xchg
lcall
mov
mov
leave
cltd
xor
mov
cs
sbb
or
mov
movsb
cli
xchg
out
dec
pop
pop
sbb
xor
shl
arpl
inc
push
pushf
cmp
gs
stos
pop
jmp
xor
stc
icebp
stos
inc
and
aam
mov
leave
pusha
daa
mov
mov
addr16
scas
jbe
sub
pop
mov
xchg
xor
in
cmp
or
in
inc
daa
push
out
int
xor
in
js
dec
push
dec
pop
movsl
or
mov
push
pushf
cltd
mov
mov
xchg
pop
xlat
repnz
loope
and
or
or
sub
xchg
mov
in
ret
xchg
push
jnp
shll
jecxz
push
pop
inc
xorl
add
in
mov
jle
xor
mov
andb
sbb
fwait
xchg
notb
mov
idivl
dec
fxch
jle
and
bound
add
mov
insb
mov
pop
iret
into
jae
xchg
sbb
or
mov
loop
xchg
inc
dec
inc
inc
inc
push
cmp
rorl
xorl
shlb
in
dec
mov
xor
pop
mov
jecxz
pop
jecxz
jne
ret
mov
push
int3
add
xchg
lods
jo
js
lds
jo
dec
std
xchg
jp
mov
mov
jb
je
lods
int3
pop
fidivs
xor
xchg
test
push
mov
mov
dec
and
push
ds
shl
add
cmp
mov
mov
aas
mov
jp
mov
dec
loope
inc
es
imul
add
enter
push
lret
cmp
ljmp
fdivrl
xor
test
sub
ljmp
dec
inc
sbb
jo
lret
mov
pop
cmp
xor
adc
inc
add
cmp
push
xlat
outsb
test
add
cmp
cltd
xchg
pop
and
mov
dec
out
std
ja
xor
in
js
fmuls
xchg
out
cltd
fldenv
jp
imul
lds
xchg
fidivrs
inc
rcrl
push
mov
mov
inc
enter
jmp
mov
in
xchg
push
mov
repz
loopne
xlat
cmp
repz
mov
orb
out
ds
idiv
or
sti
push
sbb
mov
push
lock
inc
dec
jl
add
and
sub
xchg
mov
or
xchg
mov
sub
adc
and
pop
cmpsb
adc
jmp
mov
adc
scas
scas
call
cmp
sbb
mov
cmp
sbbb
inc
inc
jge
js
jg
add
push
pop
adc
movlps
incl
add
into
sbb
cmpsl
inc
mov
add
leave
xlat
push
sti
jae
fs
xor
sub
push
pushf
lods
mov
out
cmpsb
test
fcoms
xlat
outsb
dec
cmc
jns
cmp
cmc
pop
lahf
aas
or
repnz
repnz
arpl
and
push
fdivr
bnd
mov
cwtl
iret
in
dec
insl
call
or
xchg
push
movsb
fistl
dec
inc
sbb
cli
lods
jge
pop
addr16
faddl
push
mov
xchg
orl
nop
daa
jecxz
add
dec
add
cmc
xor
pop
daa
scas
dec
mov
ljmp
je
push
bswap
scas
mov
or
pop
repnz
inc
pop
mov
jns
scas
out
outsl
cmp
xchg
hlt
inc
ficompl
mov
pop
lea
jns
scas
push
sub
jg
jno
dec
mov
pop
int3
adc
lcall
and
jo
inc
mov
in
scas
das
jnp
push
mov
dec
adc
sbb
int3
xor
lret
jno
ror
sahf
nop
cmp
mov
and
rcr
rolb
pusha
push
pop
or
add
inc
push
lea
mov
sub
cmp
mov
in
ret
fidivl
mov
push
clc
mov
xor
popa
aas
jns
jno
jno
je
fnstenv
std
push
cwtl
js
lret
or
push
dec
add
cmpsl
or
mov
pop
mov
xchg
cld
push
hlt
push
inc
cmp
dec
arpl
push
push
outsl
cmpsb
call
imul
adc
pop
xor
test
mov
xchg
lds
ljmp
inc
cmp
sub
mov
xchg
stc
mov
add
repnz
shlb
or
cmpsl
jb
pop
repz
aam
add
xor
and
rcl
mov
cltd
jne
imul
in
ds
movsb
js
data16
stos
push
rclb
rcrl
or
fs
sbb
adc
or
pusha
push
mov
shrb
adc
jmp
ret
mov
imul
cld
int3
cmp
decb
js
mov
sbb
xor
pop
dec
cmp
lods
sbb
in
cmp
xchg
sub
mov
jg
test
jg
scas
out
je
pop
mov
int
iret
std
jmp
push
lock
rclb
pop
out
ja
stc
inc
dec
cld
idiv
dec
bound
into
push
subl
in
push
scas
rol
cld
xchg
clc
les
clc
daa
xchg
add
mov
cmc
xor
outsb
pop
xor
ss
shll
add
test
jmp
pop
notl
push
xorb
cmpsl
mov
pop
loopne
div
push
jmp
cli
and
popa
arpl
and
shll
aad
mov
mov
xchg
lock
popa
addb
adc
pmulhuw
jp
addr16
mov
into
fsubrp
shrl
andb
inc
mov
push
xor
test
mov
sbb
inc
jge
sub
fsts
pop
xor
cmc
jecxz
daa
call
jp
mov
sti
ss
and
popf
push
cmpb
outsb
sub
aad
outsb
inc
mov
rcll
insb
sarb
fdivp
fmuls
or
adc
adc
imul
and
push
mov
in
adc
mov
repnz
cwtl
das
jno
lods
xor
lds
cs
pop
pop
xchg
jns
test
mov
aas
adc
pushf
dec
and
jo
xor
addl
jge
outsb
popf
adc
pop
inc
les
movsl
dec
gs
or
and
sub
insl
jp
outsb
lods
mov
insb
movsb
bnd
aad
ljmp
mov
std
push
jmp
push
pop
xor
pop
movsl
ret
stc
cmp
xchg
sbb
out
arpl
push
adc
je
push
aaa
in
inc
lods
fimull
or
mov
xchg
mov
and
adc
pop
nop
stos
insb
repnz
sub
stc
and
lock
movsb
inc
adc
or
cmpsl
int
test
jl
xor
movsb
push
dec
test
add
into
fs
rclb
dec
jmp
xor
fldcw
into
shll
sbb
ret
movsl
imul
rcrl
mov
mov
push
or
lret
test
cltd
mov
xchg
test
loop
push
mov
aad
or
pop
es
test
sbb
gs
ror
scas
bnd
mov
mov
mov
mov
or
mov
mov
outsb
add
xor
jecxz
daa
mov
adc
sub
pop
fidivl
lds
cmp
pop
pop
or
mov
push
dec
jle
mov
iret
aas
push
bound
pusha
jnp
mov
push
mov
movsl
and
loop
mov
xor
fwait
notl
pop
scas
inc
sbb
lret
pushf
pop
xor
fincstp
mov
sbb
inc
mov
lret
lds
jno
loopne
iret
and
fsubl
lds
shll
rcrl
mov
fistpll
mov
dec
pushf
cwtd
or
iret
pop
in
push
jmp
mov
or
out
popf
xor
xorb
mov
sbb
sbb
mov
lret
out
cmp
pop
in
mov
push
jl
loop
test
add
scas
xor
enter
adc
adc
adc
jns
and
xchg
rclb
dec
scas
fwait
ds
gs
and
jae
xchg
add
lret
mov
sti
out
push
cld
push
xor
or
push
jle
stos
mov
xchg
scas
aaa
incb
cmpsl
ds
jae
xchg
es
rolb
push
xchg
ljmp
ret
dec
in
xchg
dec
adcb
mov
push
jmp
lods
mov
inc
xchg
or
adc
cmpsl
pop
xchg
rol
dec
cmp
out
icebp
push
int3
pusha
les
out
fsts
test
cmp
sbb
jns
mov
add
aas
dec
mov
bound
mov
add
mov
mov
mov
mov
dec
pop
sahf
fstl
mov
and
lret
scas
mov
mov
jno
push
stc
aam
lahf
popa
aad
sub
fisubs
adc
mov
mov
mov
sbb
pop
pop
clc
xchg
into
xor
mov
mov
test
popa
inc
arpl
test
inc
inc
xlat
in
push
mov
pop
mov
mov
aam
in
or
add
inc
jno
fs
or
push
movsb
add
lahf
ss
rep
xor
xchg
dec
xor
fistpl
stos
add
test
adc
sub
mov
cwtl
lahf
inc
push
inc
adcl
push
inc
cwtl
mov
ret
or
jns
push
mov
fisubrs
sub
pop
insb
ret
jns
lods
ds
into
gs
cmp
faddl
fdivl
add
mov
faddl
in
enter
test
test
push
test
rcll
imul
data16
addr16
xrelease
adc
mov
dec
mov
in
pop
push
or
xchg
mov
es
popf
xor
mov
loop
push
lock
mov
or
pop
lods
mov
mov
bnd
push
call
mov
bnd
leave
mov
mov
popa
insl
test
je
lret
call
xchg
in
lds
testl
test
sub
std
pop
dec
xchg
jnp
add
and
ja
or
dec
xor
insb
mov
stos
loope
mov
icebp
mov
adc
pop
inc
pushf
fmul
andb
lock
jg
mov
inc
inc
jne
add
pushf
rolb
jb
aam
mov
fldl
mov
dec
das
stc
cmc
decl
xor
cmc
adc
push
je
xor
in
sbb
mov
mov
or
rorl
notl
pop
out
xor
das
fldt
sub
sahf
loop
outsb
adc
fdivl
jnp
js
fiaddl
dec
pop
mov
ret
jno
aad
adc
adcb
out
mov
dec
test
test
xor
xchg
jns
pop
and
data16
cmp
mov
sbb
inc
jne
adc
adc
adc
dec
popa
mov
xchg
into
test
jecxz
cmp
stos
inc
das
lds
mov
insb
pop
sbb
jle
nop
test
jl
sbb
push
cmpsb
insb
cmp
xor
sub
ret
movsl
lret
in
add
fbstp
scas
andb
dec
shl
mov
mov
mov
adc
int3
inc
pop
add
shll
imul
mov
jnp
sub
add
imul
repz
xlat
fwait
jne
xchg
jno
addb
mov
fldcw
sbbb
lret
push
in
cmp
sub
mov
inc
in
xor
nop
int
xchg
gs
and
call
test
dec
addb
adc
inc
xchg
js
pop
iret
xchg
subb
dec
fs
and
lods
sbb
scas
sub
mov
scas
jns
push
and
xor
arpl
xor
ss
cld
imul
mov
je
xor
loope
sbb
sbbl
aas
mov
xor
popa
loope
fldt
push
xchg
xor
or
enter
mov
jno
int3
or
jmp
mov
adc
fcompl
mov
adc
out
test
bound
add
xchg
addr16
mov
sub
pop
mov
push
pop
push
dec
das
pop
rorb
or
jl
les
jecxz
call
push
subl
pushf
popl
std
sub
loop
lods
cmpsb
xlat
xor
dec
fs
jge
push
fimull
push
add
or
js
cmpsb
dec
xchg
inc
and
kandw
fs
enter
inc
jmp
jmp
pusha
mov
pushf
pop
setbe
je
or
fdivl
loopne
xlat
push
cmp
sub
or
jecxz
mov
fstps
cwtl
popa
xor
cmp
and
outsl
or
fstps
lea
dec
adc
sub
cmpsb
cld
push
in
sub
iret
je
jge
popa
jns
lahf
sbb
je
mov
mov
shl
add
sbb
push
mov
and
pop
outsl
mov
xlat
xor
jne
mov
cmpb
iret
mov
sahf
mulb
mov
or
jg
inc
xor
popf
mov
pushf
sub
sbb
jl
lea
push
cltd
jae
mov
int
push
add
nop
jb
xor
addr16
inc
ljmp
or
pop
cmpsb
sti
mov
push
mov
xchg
jecxz
outsl
aas
call
push
add
ror
add
cs
add
lods
cltd
cmpsl
mov
pop
aaa
mov
adc
ror
lea
fcmove
loopne
adc
divb
mov
jle
push
les
test
movsb
xorl
ss
xchg
insb
pop
test
jo
int3
mov
push
iret
sub
sub
test
pop
pop
lcall
loopne
mov
jnp
lock
and
add
js
jno
dec
push
lds
cltd
dec
jne
loopne
daa
sub
pop
outsl
je
xorl
xchg
pop
mov
and
pushf
adc
and
imul
stos
aad
lock
aam
out
add
inc
loop
cmp
sbb
pop
jo
sbb
mov
fsubrp
aam
adcb
and
loope
sbb
mov
add
or
sbbl
xor
and
pushf
daa
mov
mov
shll
xchg
pop
fidivs
push
gs
jle
arpl
push
fst
es
xor
mov
mov
mov
jo
fisubrs
out
mov
inc
jge
es
outsb
add
sbbb
xchg
mov
outsb
daa
aaa
lds
test
mov
out
xor
popa
clc
inc
aam
jle
loope
fcmovnbe
outsl
scas
inc
pop
jl
loope
divl
mov
std
and
xchg
cwtl
sbb
fdivl
es
cltd
xor
mov
cmp
push
mov
aam
aam
xor
xor
xor
ret
pop
lock
xchg
xlat
inc
adc
xor
mov
xlat
in
add
in
js
add
xchg
dec
dec
xor
shl
dec
bound
leave
decb
xchg
sbb
pop
shll
add
cltd
inc
sbb
inc
jecxz
sti
dec
imul
daa
cmp
xor
imul
inc
sbb
dec
xorl
das
enter
outsl
sarb
arpl
push
fxch
bound
mov
xchg
aaa
addl
or
adc
dec
sbb
dec
inc
and
hlt
insl
sub
jno
sub
cmpsl
push
repnz
pop
iret
jecxz
inc
mov
hlt
push
repnz
fldcw
aas
push
and
cmp
sub
sarb
addb
mov
repz
cmp
jl
mov
loop
scas
inc
out
aas
ret
adc
fsubl
sbb
adc
outsl
xor
mov
lds
sub
mov
out
cmpsb
push
dec
fiaddl
adc
adc
cs
stos
popa
inc
xlat
xchg
int3
dec
scas
pop
cmp
jbe
mov
inc
stos
sbb
inc
cmp
adc
inc
push
mov
pop
mov
insb
loop
mov
ds
adc
and
adc
mov
sub
repz
rcrl
bound
sub
cmpb
mov
push
js
adc
jo
movsl
mov
push
mov
jl
outsl
mov
pop
das
in
insb
pop
stc
fisttpll
je
mov
mov
pop
pop
out
and
lock
adc
insb
push
out
popf
push
cmp
sub
pop
cmpsb
shrl
js
push
mov
jle
repz
mov
cmc
or
sbb
insb
ret
outsb
jle
xchg
xlat
sub
mov
addr16
pop
xchg
xchg
hlt
aas
pop
insb
int
xor
jmp
pop
mov
ss
and
popa
outsb
jmp
and
shll
and
and
dec
pop
sub
dec
aaa
jne
repz
fldenv
repnz
jae
or
xor
push
and
xor
or
int
lret
push
mov
int3
or
mov
push
push
outsb
push
pop
jns
pop
sub
fdivrl
fistps
inc
out
jecxz
addl
pop
mov
and
popa
xchg
daa
xchg
jp
lods
sub
sbb
rcrl
push
rorl
dec
mov
xchg
dec
insl
mov
xchg
insl
std
xchg
mov
xchg
popa
mov
mov
inc
insl
jo
add
insl
leave
pusha
fmull
cmp
out
sub
movsb
nop
dec
add
mov
pop
mov
leave
mov
pop
sub
xor
mov
sub
lret
and
sbb
ret
fwait
movsl
jo
mov
jb
cmpsl
sub
jno,pt
out
pop
fnstsw
sbb
in
sbb
sbb
jnp
sub
test
xchg
xchg
pop
stc
pop
pop
testb
push
mov
jge
pushf
movsb
sbb
stos
loop
pop
cltd
imul
dec
lods
mov
test
insl
cld
shll
cld
mov
lret
shlb
pop
jno
bound
sbb
cmp
ss
hlt
mov
inc
pop
cld
mov
into
call
iret
int3
pop
push
inc
dec
fbstp
pusha
xchg
mov
xchg
pop
jns
js
unpcklps
dec
es
sbb
repz
sub
adc
xor
and
mov
dec
jb
xor
xlat
repz
push
ds
and
lods
hlt
mov
pushw
das
insb
sub
dec
add
adc
int
and
mov
fistpll
adc
xorb
mov
les
cli
sbb
sarb
push
jecxz
push
dec
xor
fnstcw
cmp
movsb
jns
mov
outsl
popa
hlt
and
sbbl
mov
repnz
fnstenv
fists
nop
pop
mov
xchg
outsl
loope
lods
test
inc
jle
int3
mov
les
mov
dec
jmp
nop
inc
add
data16
lea
or
adc
lcall
lock
or
fiaddl
sub
xor
shll
mov
out
adcl
bound
iret
add
mov
mov
adc
repz
ds
cmp
jecxz
jae
in
inc
lcall
aad
jl
ds
or
sub
int3
nop
jo
andb
inc
fsubr
std
add
movsl
add
orw
push
xchg
je
ret
js
in
test
daa
jg
adc
jno
shl
sbb
mov
mov
lods
xor
lahf
and
dec
aam
xchg
call
pop
add
lds
sbb
enter
jno
test
sti
push
loope
and
test
je
add
cmp
pushf
cmpsb
jbe
pop
cld
sahf
add
ficompl
push
xchg
sub
add
mov
aam
sti
xchg
pop
icebp
xchg
sub
pop
stos
popf
mov
je
pushf
push
lret
cmpsb
aaa
mov
cltd
mov
dec
mov
imul
or
adc
jb
out
xor
cltd
add
mov
or
sar
pop
adc
dec
xlat
repz
int
data16
jns
pop
lods
push
mov
pop
hlt
add
pushfw
in
lds
xchg
xor
lret
sbb
dec
jmp
and
xchg
mov
jmp
cmp
jp
xor
xchg
imul
cwtl
movsb
lahf
mov
xchg
vmovlps
sub
icebp
or
sbb
fwait
push
inc
dec
shl
pop
fadds
or
cmpsl
out
jg
sbb
xchg
and
inc
ds
repnz
imul
or
mov
jo
sbb
xor
or
push
inc
icebp
pop
call
movsb
add
dec
or
xchg
rol
cltd
fisttpl
in
aad
xchg
and
rorb
loope
pushf
mov
lret
adcb
das
jo
add
and
mov
mov
adc
dec
out
and
xchg
jo
jge
mov
js
jb
stos
mov
es
dec
fdivrs
mov
scas
fcmovu
stos
mov
jbe
std
shlb
jno
pushf
adc
pop
cmpb
dec
loope
xchg
pop
cmp
sahf
dec
push
repnz
pop
cmp
or
xor
xchg
pop
mov
out
push
inc
xchg
outsl
dec
hlt
fstps
into
daa
push
movsl
mov
gs
mov
dec
mov
pusha
orb
pop
xchg
sub
or
jle
data16
xchg
test
ficoml
ja
arpl
mov
add
ficoml
cmc
pushf
in
mulb
dec
dec
and
pop
add
or
mov
cli
gs
cld
out
pop
ja
lds
adc
sub
jge
mov
mov
test
loopne
divl
or
cmp
movsl
inc
push
mov
sbb
mov
subl
arpl
and
inc
lret
push
ret
adc
fs
inc
ljmp
lahf
scas
push
adc
mov
adc
add
jb
cli
mov
cmp
sub
out
popf
popl
lods
ror
lahf
mov
fildl
push
loop
out
sahf
das
mov
mov
sub
jp
jb
jo
jo
fwait
insl
sbb
mov
xor
inc
jl
jns
mov
mov
dec
sbb
lock
inc
xchg
scas
fcompp
sub
and
enter
andl
in
sahf
mov
sbb
fsubl
mov
xchg
sbb
xchg
or
out
fwait
cmpsl
inc
dec
lods
stc
xchg
push
pushf
gs
pop
out
movl
icebp
adc
nop
andl
fmull
test
and
or
or
in
sub
inc
cmp
and
in
xchg
pusha
into
stos
mov
aaa
clc
and
sub
pop
mov
bnd
icebp
or
idivb
ffreep
out
jne
jne
cwtl
pop
sbb
push
lcall
sti
sti
test
inc
mov
adc
or
inc
mov
fnstenv
sbb
in
rclb
fsubl
ficoml
cli
jl
stos
ss
add
fwait
adc
xchg
or
pop
mov
fidivs
add
rcrb
pop
pop
adc
or
push
mov
push
xor
mov
ja
inc
scas
cli
enter
aam
idivb
inc
add
sub
push
negl
add
jae
fdivrs
xor
push
inc
movsl
fmull
fildl
and
jno
push
jle
lea
sbb
sub
cmp
cmp
fidivl
push
test
mov
xor
mov
dec
cs
push
lods
xor
cld
ja
fcompl
inc
loop
inc
cli
jg
inc
popa
xor
push
pop
nop
inc
dec
insl
scas
add
jno
dec
jecxz
popf
clc
mov
shll
fcmovnbe
in
and
inc
int
pop
pop
cmpsb
cmp
mov
sti
call
jge
dec
add
andl
inc
and
or
pushf
mov
push
ljmp
or
mov
cmp
es
pop
mov
popf
xor
mov
ds
sub
pop
or
inc
push
divb
data16
in
repnz
fbld
stc
cmp
mov
dec
into
fsubrs
inc
push
leave
push
mov
cwtl
int3
insb
cmp
jecxz
dec
xchg
pop
repz
shrl
imul
sub
cmp
xchg
clc
jno
or
nop
hlt
push
cmp
out
shll
scas
inc
jae
ja
nop
test
fwait
pusha
in
aas
push
inc
mov
ret
pop
shlb
std
or
aam
add
lds
add
out
mov
mov
pushf
ds
cmp
and
inc
fimuls
jge
fdivrl
insl
pop
jb
sbb
test
stc
outsb
push
dec
cmp
xchg
ja
mov
and
andl
sbb
aam
les
jo
int
mov
inc
gs
jno
cmp
fsubrs
shrl
inc
mov
test
pop
repnz
shr
mov
mov
ds
int3
arpl
fsub
ss
adc
xor
add
outsl
shr
popf
test
and
xor
dec
dec
rorl
je
push
pop
adc
fisubl
jo
jne
mov
push
fimuls
out
loop
inc
aas
and
and
aam
and
out
cmpsl
and
mov
jne
and
jae
or
xor
out
mov
aaa
lretw
fldl
aaa
push
je
pop
aad
nop
or
daa
and
nop
push
dec
stos
cmpsb
in
sti
insb
subb
mov
icebp
jle
and
aaa
or
pop
iret
push
movsl
sarl
push
and
notb
add
inc
loope
xchg
icebp
push
dec
subl
jns
scas
and
push
pop
mov
lea
sbbl
sahf
sti
fwait
xchg
icebp
lret
ss
dec
arpl
pop
in
jb
push
into
fimull
xor
mov
aad
add
jb
jp
adc
mov
daa
push
gs
mov
filds
mov
arpl
pop
lcall
jp
fcoms
cmp
add
in
push
cltd
inc
fisubrl
pushf
jg
inc
sub
dec
out
sub
sbb
xchg
lock
push
lds
sub
orb
push
movsb
popa
mov
pop
in
in
inc
mov
jmp
jmp
mov
ds
mov
dec
push
inc
in
and
push
int
movsb
xor
cmp
add
mov
stc
nop
push
lret
xor
out
mov
stos
pop
js
loop
cmc
je
cmpsb
lock
vpsubb
jp
insb
jno
daa
mov
dec
scas
lea
mov
sub
pop
outsb
add
imul
scas
inc
ja
repnz
cltd
int3
arpl
shr
jl
ljmp
sbb
xchg
adc
pop
popa
push
stc
sahf
scas
xchg
sub
adc
add
clc
mov
pop
push
fwait
lret
mov
cmp
loopne
decl
lods
aad
add
inc
mov
sbb
xor
adc
fildl
test
dec
cmc
loope
xchg
sub
inc
sub
mov
or
cltd
movsb
addr16
lahf
idivl
sub
inc
aam
mov
xchg
or
fwait
mov
adcb
clc
iret
cmp
fs
xchg
pop
inc
pop
sbbl
inc
pop
es
or
test
mov
sbb
adc
fsubp
std
iret
jecxz
cmp
clc
or
push
int
test
jbe
pop
in
insl
test
jmp
loope
pushf
or
rolb
mul
sub
pop
sub
shlb
xchg
or
loope
jl
cmp
sbb
inc
push
mov
ret
lcall
jbe
inc
add
fwait
rcrl
dec
insl
jmp
pop
call
sbbb
cltd
in
dec
mov
lds
cmp
and
sahf
mov
jecxz
pop
or
jb
mov
lea
jno
outsb
data16
push
mov
jns
pop
outsb
push
cwtl
ret
cmp
xor
lcall
js
cmp
mov
pop
cmp
mov
stos
jge
or
xchg
sahf
es
jb
inc
enter
mov
or
and
mov
jne
mov
mov
in
lds
xchg
xchg
dec
adc
mov
or
jne
test
jno
adc
cltd
mov
mov
sbb
add
outsl
xor
imul
loop
mov
lock
lahf
test
lret
cld
call
xchg
imul
xchg
mov
inc
ljmp
xchg
inc
push
xchg
xor
les
cmp
fldcw
rcl
pop
mov
mov
fimull
add
pop
mov
push
xchg
mov
fistps
ret
add
dec
push
fstps
sbb
fisubs
aam
aaa
mov
add
xchg
shl
inc
push
test
mov
clc
mov
dec
inc
adc
cmp
movsl
push
adc
push
fidivrl
mov
dec
jae
rclb
or
mov
push
push
add
sbb
lock
push
stos
sbb
idivl
fdivrl
add
cmpsb
leave
xchg
mov
cwtl
stos
jl
pop
scas
sbb
xor
out
adc
lcall
jo
pop
cmpsl
dec
pop
mov
imul
lock
mov
in
filds
sti
sbb
mov
mov
fisubrl
fcomps
pop
push
ret
jns
jmp
and
add
and
hlt
jmp
scas
fimull
pop
gs
inc
scas
mov
inc
fiadds
add
mov
push
and
test
sar
adc
jg
push
jae
adc
xchg
outsl
dec
rorb
push
push
push
repnz
push
jg
cld
mov
insl
mov
fdivp
mov
adc
xor
jnp
test
mov
test
pop
and
push
stos
adc
loopne
testl
jo
scas
cmp
cmpsb
mov
cwtl
call
pop
sub
fildll
inc
arpl
lret
out
loop
dec
xchg
mov
cmp
or
leave
movsb
js
push
dec
lret
testl
shll
stc
or
jge
ret
xor
jp
inc
sbb
repnz
cmc
inc
in
dec
mov
ret
pop
sub
pop
jge
sub
sti
in
mov
inc
mov
addr16
pop
inc
mov
loop
adc
push
aas
movsl
imul
movsl
repnz
icebp
mov
jmp
dec
sbb
addb
test
and
dec
sbb
mov
pop
int
mov
push
lock
xor
inc
or
mov
lret
push
mov
rclb
cmpsb
dec
jo
fisubs
dec
gs
xchg
es
out
pop
test
xchg
out
push
sub
scas
addr16
dec
lcall
cmpsl
cmp
repz
test
jmp
adc
outsb
jl
fdivrl
push
fldenv
cmp
jns
loopne
add
divb
lahf
shrl
loopne
fxch
dec
add
xchg
fwait
push
insb
enter
cwtl
push
fwait
xchg
sub
into
scas
xorb
cmp
fwait
out
test
cmp
or
lahf
imul
fisubs
or
ljmp
push
dec
aad
lods
pop
outsl
lds
mov
cmp
call
xor
loop
data16
sbb
int3
cmpsb
aam
xlat
mov
std
jo
jecxz
nop
mov
and
push
insl
add
call
mov
and
inc
imul
cmpsl
movsb
lcall
xor
push
ljmp
pop
data16
in
das
push
out
jbe
xor
sbb
lods
adc
sub
mov
es
xchg
out
aam
pop
xor
push
sbb
insl
jb
inc
movsb
mov
shlb
pop
out
std
ds
inc
adc
in
ljmp
jecxz
xchg
add
call
orb
and
das
clc
and
push
cltd
xor
push
adc
je
push
mov
add
push
and
xchg
int
jo
xor
pop
or
mov
sub
shl
popl
insl
inc
test
and
sbb
test
mov
xor
loop
sahf
clc
push
mov
or
iret
mov
ljmp
dec
fdivl
fisubrl
cmp
sub
xchg
push
mov
sar
cwtl
pusha
push
mov
notl
in
dec
sub
pushf
pop
push
fdivs
std
mov
push
adc
out
in
mov
xchg
xor
and
inc
pop
idivb
pop
dec
repz
out
sub
push
inc
js
insl
sub
push
push
jb
push
pop
cmp
pop
in
pop
jb
sahf
mov
jne
addr16
fsubrs
stc
cs
movsb
clc
lcall
mov
popf
stos
pop
ljmp
mov
out
or
push
jne
ljmp
inc
cwtl
pop
les
push
push
stos
jne
dec
mov
or
sbb
loop
mov
movsb
repnz
clc
and
inc
inc
xchg
out
fsubl
ljmp
jo
mov
sub
mov
test
dec
push
insb
push
dec
pop
push
int
js
push
push
shll
cmp
push
loope
andl
inc
or
rol
addr16
ret
shll
inc
shll
dec
inc
movsl
ja
jle
enter
into
or
bound
daa
outsl
fbld
jnp
fdivl
enter
inc
int3
push
ds
lcall
scas
inc
inc
popa
jg
fnstcw
jnp
fsubrl
sbb
nop
adc
jmp
xor
popf
add
fcmovnu
push
push
xchg
sbb
push
sub
add
das
xor
jno
aas
in
imul
xchg
insl
movsl
dec
in
fdivrs
xor
sarl
sbb
cmp
push
cmp
or
push
push
jp
iret
or
sti
imul
rcrl
mov
mulb
dec
nop
mov
inc
lret
out
lods
xor
fwait
push
inc
xchg
fs
pop
mov
jle
ret
call
in
lea
adc
xchg
push
cmp
mov
mov
cmp
and
adc
xchg
sub
inc
xchg
add
test
lods
inc
jo
repz
cmp
jne
add
adc
mov
adc
mov
push
or
sbb
sbb
out
stc
hlt
pop
out
popa
fwait
xlat
imul
icebp
adc
jo
mov
jecxz
jge
das
mov
loop
xchg
pop
ja
outsl
adc
mov
and
out
rcrl
cmp
cmp
jbe
jl
fnstsw
sbb
aam
mov
call
mov
mov
mov
je
jnp
shlb
sbb
roll
and
xchg
xchg
add
lock
subl
cmp
dec
push
movsb
inc
push
cmpsb
les
push
sub
dec
test
xlat
jnp
jae
rep
xor
in
push
aaa
mul
mov
cli
out
mov
sub
mov
les
sbb
and
fistpl
es
js
add
inc
inc
outsb
daa
inc
mov
inc
and
ljmp
data16
mov
mov
rol
in
push
leave
gs
mov
les
ljmp
xchg
mov
push
pop
popa
xor
insb
js
in
test
loop
push
mov
jae
jecxz
inc
loopne
xor
cmpsb
cmp
push
adc
aad
fdivl
rorl
jno
dec
outsb
or
sarl
mull
shll
dec
lods
lds
test
push
outsb
in
mov
shlb
mov
idiv
cmp
adc
add
fsubr
push
mov
ljmp
popa
enter
pop
mov
int3
cmpsl
jge
mov
roll
repnz
mov
fnstenv
in
out
pop
popf
call
cmpsb
jmp
mov
ficompl
xchg
sti
push
push
jae
call
push
or
int3
stos
cmp
mov
push
aam
popf
push
rol
add
aad
and
insl
adc
mov
mov
fidivl
arpl
cwtl
lods
cmp
push
push
mov
rcl
lcall
ljmp
fs
and
jg
mov
push
xchg
sub
or
lods
movsl
movsl
inc
cmpsl
jle
jle
cltd
add
xchg
andl
lcall
adc
cmp
daa
in
mov
or
aaa
push
xor
xor
js
dec
stos
dec
jg
push
incb
dec
aad
jns
mov
rcrb
mov
ss
loope
jne
lock
enter
pop
push
idivb
sbb
pusha
or
xchg
sub
mov
ret
dec
fistps
adc
xor
mov
daa
mov
sub
inc
fldl
gs
popf
repz
mov
mov
stos
mov
push
movsb
dec
aam
add
mov
fists
popa
aam
scas
inc
test
inc
int3
arpl
dec
fisttps
ljmp
sub
mov
xchg
outsl
xor
adc
lods
lock
and
jnp
or
adc
dec
cwtl
out
add
out
lock
dec
inc
aaa
into
or
dec
popf
popf
sub
pusha
out
aaa
insb
jl
psubsb
mov
mov
push
add
jae
test
pop
outsb
push
mov
ss
sti
mov
pop
gs
fucomi
nop
xchg
lahf
scas
mov
fcomp
popf
mov
test
push
je
mov
or
dec
test
cmp
cld
push
lods
sbb
jno
add
je
movsl
push
aad
fs
cli
dec
fwait
adc
dec
movsb
jl
std
test
adc
je
push
mov
mov
lea
sbb
pop
idivb
test
cs
test
xchg
lcall
and
push
out
dec
test
lea
dec
adc
or
arpl
and
sub
roll
push
in
cli
cmp
xlat
xor
dec
ret
rcrl
cmp
faddl
mov
xchg
jecxz
xchg
adc
jb
xor
pusha
dec
arpl
jg
push
sub
shll
mov
cli
sbbl
mov
mov
lock
rorb
lea
test
addr16
ja
leave
pop
dec
mov
and
arpl
inc
and
aas
lret
cmp
lret
ret
scas
lret
adc
imul
test
xchg
loopne
outsl
sbb
xchg
push
imul
test
repz
pop
jb
cmc
rolb
dec
enter
mov
in
stos
push
fcmovne
mov
inc
fs
addr16
sbb
jle
or
mov
sbb
out
out
pop
xchg
ffree
jg
loop
sahf
pusha
clc
fdivr
lahf
mov
push
push
pushf
aaa
sarl
bound
test
scas
stos
enter
sti
into
add
mov
push
outsl
hlt
iret
aam
xchg
pop
pop
andb
notl
mov
mov
sbb
adc
andb
jg
rcrl
ljmp
popa
push
nop
mov
push
ds
in
in
inc
adc
mov
mov
cwtl
jmp
mov
loopne
cmp
lds
das
jnp
ss
pop
imul
mov
imul
enter
ja
mov
ljmp
ss
lods
arpl
idivb
shrb
xchg
dec
or
test
data16
mov
sbb
lret
jmp
xchg
add
out
add
xor
mov
lahf
jle
jae
dec
jnp
xorb
mov
out
je
test
sbbl
mov
imul
xor
mov
pop
lock
pop
outsb
mov
bound
xchg
divb
fnsave
sub
and
add
and
outsl
dec
les
pushf
into
xchg
sbb
mov
fs
repnz
mov
lea
lods
mov
in
or
pop
repnz
cmp
cmc
push
clc
mov
sub
pop
push
sub
jnp
es
jle
jmp
cmpsb
mov
cmp
xor
hlt
or
jp
cmp
mov
mov
sub
aas
inc
xchg
enter
xor
out
mov
push
dec
aad
cs
xchg
mov
adcl
cmp
sub
in
push
jp
sbb
cmp
ja
push
jmp
stc
sub
cmp
shrl
lds
stos
push
dec
lret
sbb
orb
sub
in
cmc
mov
or
sbb
ja
clc
inc
and
and
pop
int3
outsl
push
mov
lea
pop
push
out
fiaddl
imul
sbb
inc
sub
mov
mov
cmp
cmp
push
jg
repnz
loopne
and
cmp
lcall
pop
icebp
scas
test
push
les
push
push
adc
mov
lods
mov
loopne
fldenv
push
push
popa
pop
fwait
pusha
inc
mov
xor
push
pushw
jno
mov
stos
push
pop
ss
lods
xchg
jnp
in
movsb
add
cmp
xor
ret
daa
test
push
jne
inc
fisttpll
mov
movsl
gs
lods
xchg
out
pop
aas
sub
sub
mov
mov
add
int3
outsl
loopne
loop
flds
testl
pop
xchg
pusha
addb
bound
pop
stos
mov
sub
jle
lods
cli
adc
pop
mov
out
repz
mov
fidivrl
add
out
xchg
cltd
les
cmp
nop
xor
and
cmp
jae
idivl
pop
out
inc
lahf
xor
stos
mov
fsubrp
adcl
insl
lretw
add
pop
jb
sbb
jb
loope
push
into
adc
xchg
push
ror
into
lock
add
sbb
ss
sub
pop
sbbb
and
add
pushl
std
or
push
jae
dec
sub
in
mov
stos
mov
mov
jbe
in
mov
in
cmpb
ds
adc
nop
push
shlb
xor
fsubr
inc
testl
enter
fsub
dec
lock
out
sub
js
cmp
xchg
sub
out
sahf
in
daa
push
mov
movsb
hlt
lret
ret
test
push
call
std
add
pop
inc
leave
ljmp
stc
push
lods
xlat
cmp
in
xchg
pushl
jns
fwait
ret
in
int
rclb
lahf
lods
mov
imul
cli
xchg
xor
cmp
dec
pushf
inc
jp
mov
mov
mov
lret
pop
psrad
pop
mov
into
sbb
jg
sub
mov
into
xchg
incb
jae
push
xchg
push
movsl
idivb
orb
pop
lahf
mov
aaa
mov
cmp
pop
loopne
inc
pop
std
pop
inc
and
mov
push
out
pop
sbb
add
notl
and
add
mov
mov
mov
adc
or
daa
call
cmp
sub
inc
lods
xchg
loopne
popa
mov
leave
inc
shl
andnps
pop
mov
ret
loopne
cmc
negl
xchg
mov
xchg
mov
les
leave
scas
dec
cltd
stc
repz
imul
jbe
roll
enter
loop
das
sbb
cmp
mov
xchg
aam
cmp
cwtl
iret
cmp
nop
add
int
jg
xor
sub
fistpll
push
adc
xor
loop
fistl
out
popf
ffree
popf
inc
iret
jae
fstps
cmpl
std
ret
repnz
inc
cs
cmpsl
fwait
jmp
xchg
popa
aas
sub
pop
adc
add
popa
shll
stos
mov
add
add
mov
pushf
loope
sub
and
ficompl
adc
and
inc
call
sub
pop
jbe
insb
shrl
nop
js
mov
int3
mov
andb
sahf
and
adc
pusha
incb
xor
repz
and
jb
decl
insb
mov
nop
fisubs
imulb
xor
or
nop
daa
sub
int
nop
lds
push
xor
inc
mov
mov
rol
mov
insl
mov
cmp
xchg
adc
fadds
mov
sub
xchg
add
lcall
adc
inc
popa
jnp
adc
mov
mov
jle
subl
cmpsl
add
adc
int
mov
fbstp
push
ss
orps
mov
xchg
jb
dec
or
out
insb
icebp
and
or
jle
mov
int3
fistps
mov
push
in
push
hlt
inc
cld
cmp
or
mov
cmp
clc
mov
mov
sbb
test
xlat
jg
mov
push
xchg
adc
icebp
lret
das
cmp
and
push
je
xchg
xchg
paddusb
ljmp
cli
cmp
stos
adcb
mov
sbb
into
orb
jb
test
ljmp
push
imul
pop
int3
arpl
jb
push
cs
sbbl
andb
sbb
pop
lret
fnstsw
jne
fmul
bound
aam
mov
pushf
enter
mov
lea
loope
je
insl
add
andb
stc
leave
cmc
xchg
mov
push
lods
test
fisubs
sbb
jbe
adc
roll
pop
outsb
jle
and
ja
mov
cld
sbb
pop
loopne
fldt
xorl
out
xor
push
xchg
jo
sti
pushf
push
in
int
push
je
cli
jmp
push
mov
push
mov
dec
aam
cmpsb
push
aas
pop
out
icebp
or
cs
sbb
outsl
xor
loope
bound
add
sub
and
jb
cli
jg
sub
push
test
inc
testl
rcr
sbb
test
push
jne
lods
mov
jmp
cmp
adc
fsubrs
sub
lcall
aas
push
decb
jae
mov
add
ffreep
mov
jno
pop
adc
pop
scas
cld
jg
sub
subb
ret
into
pop
scas
or
mov
mov
cmp
sbb
xchg
jbe
adc
cmp
adc
jno
xor
jmp
aam
inc
hlt
push
ficoml
inc
leave
pop
cs
and
testb
or
lods
mov
into
xor
imul
data16
mov
add
out
cli
mov
fisubrs
pop
lahf
nop
icebp
out
adc
andb
cmp
lcall
xor
pushf
popa
jo
cmpsl
add
mov
test
fbld
mov
in
inc
mov
mov
js
movl
ds
or
fs
xchg
mov
scas
inc
shlb
shll
cwtl
or
jns
dec
ljmp
adc
cmp
daa
lock
stos
or
push
jb
bound
xchg
cmpl
mov
out
aad
fmull
daa
pop
jp
mov
push
out
hlt
or
lds
dec
push
test
add
sti
pushw
sbb
inc
ljmp
scas
test
lock
sbb
sub
pop
xchg
pop
les
push
and
xchg
and
and
mov
mov
pop
sub
mov
or
es
xor
ds
sti
roll
in
sahf
repz
add
xchg
push
xchg
xchg
jmp
jno
inc
popa
dec
pop
mov
outsb
leave
stos
inc
adc
dec
hlt
fnstcw
add
mov
leave
adc
cmp
jmp
and
sbb
jbe
daa
test
mov
pop
divl
mov
jae
pop
jnp
adc
xchg
add
pop
out
ret
adc
or
add
insb
scas
jecxz
movsl
adc
add
mov
xor
adc
mov
xlat
stos
idiv
xchg
cs
into
mov
pop
inc
mov
jmp
jl
fldcw
cmp
fnstsw
std
push
pushf
xor
stc
jmp
xchg
lret
push
ret
insb
sbb
and
cmp
mov
pushl
das
xor
scas
push
mov
in
clc
dec
pop
ss
xor
pop
lods
push
inc
sub
stos
fdiv
popa
sbb
push
out
jg
add
mov
mov
pop
aaa
adc
or
inc
ss
popa
pop
push
sbb
outsb
pop
cmp
leave
lock
xor
scas
inc
sub
dec
mov
ss
push
int
xchg
sbb
or
test
sbb
in
mov
cmpsb
jo
push
out
ljmp
scas
loope
loop
xor
imul
dec
push
pop
cld
push
inc
xchg
repnz
xor
adc
mov
mov
cmp
push
iret
ja
test
jg
xchg
leave
jg
jae
fldl2t
outsl
xchg
rcrl
or
mov
dec
adc
scas
pop
cmp
cmp
mov
mov
in
push
add
loop
push
jne
inc
pop
insb
call
es
push
and
mov
imul
mov
cmpsl
cmpsl
cmp
xchg
xor
popf
add
loope
and
adcl
sarb
xchg
xchg
lea
xchg
jmp
cld
add
dec
dec
shll
sub
orb
mov
xlat
push
imul
addr16
stos
clc
adc
lret
rorb
out
loopne
xchg
add
jp
mov
add
js
mov
xchg
mov
stos
pop
cmp
jge
jns
in
repnz
adc
test
add
jge
movsb
cmovp
and
jecxz
sub
test
inc
push
jbe
mov
sub
es
inc
ss
mov
loopne
fsubrp
mov
fstpt
push
decb
inc
sub
enter
mov
pop
sub
xchg
xlat
movsl
mov
jae
movsl
xchg
sub
in
loopne
pop
into
push
adc
sbb
and
loopne
add
mov
adc
xchg
test
cmpsl
into
das
or
push
mov
shlb
imulb
xchg
shlb
loope
sahf
je
sarl
std
out
fnstenv
adc
fidivs
ja
pop
cs
pop
scas
cmpsb
sub
lods
push
stos
mov
push
pop
mov
fwait
xchg
sub
cli
mov
sub
dec
mov
sub
icebp
xor
and
shrl
xorl
repz
adcl
test
lods
call
sbb
leave
fildll
scas
mov
or
sub
lods
push
sysret
stos
mov
xor
jo
mov
negl
test
pusha
mull
jl
inc
movq
ljmp
and
mov
xchg
fcmovne
gs
je
stc
inc
dec
xor
sbb
push
mov
jecxz
ja
aaa
imul
fnstenv
cwtl
test
lods
pop
sahf
pop
icebp
pop
repz
or
cmpsl
mov
mov
sub
ret
or
shrb
mov
xchg
mov
scas
jp
xchg
hlt
push
lahf
das
or
cwtl
mov
jns
xor
sub
ss
adc
jp
jg
cmp
push
jns
push
data16
xchg
loop
fstpl
mov
mov
push
test
popa
adc
cwtl
cwtl
and
cld
sti
sbb
je,pt
inc
sub
arpl
mov
leave
add
add
outsb
pusha
mov
dec
cli
adc
fs
adc
scas
sub
movsb
pop
gs
test
sbb
xor
ss
inc
pusha
and
push
mov
inc
xchg
lret
adc
mov
jb
mov
scas
or
add
int3
insb
stos
nop
icebp
mov
add
movsl
sbbb
movsb
shl
stos
xor
add
cmpsb
pop
jne
test
je
addr16
aaa
xchg
fsubl
loopne
pop
popf
jl
fbld
inc
push
inc
jmp
adc
fdivs
mov
outsl
cmp
fisubl
pop
divb
call
roll
ja
jo
dec
fistps
loop
jne
inc
lahf
stos
mov
push
mov
pop
push
test
lret
cld
loop
popf
fwait
or
inc
dec
out
shl
pop
jno
and
lds
push
int
orl
mov
mov
pop
mov
mov
sub
scas
jl
xchg
add
in
sub
cld
stos
nop
ret
int3
arpl
pop
mov
adc
in
in
pushf
cmc
pushf
xor
mov
inc
mov
in
das
movb
push
jb
fbstp
xor
loop
ficoml
add
lock
jne
movsl
xchg
sbb
test
insb
mov
adcl
sbbl
push
pop
pusha
push
jb
jecxz
cmp
rorl
jle
hlt
jmp
mov
in
subl
push
out
pop
xchg
sub
lret
mov
jle
incb
jne
jl
repz
xor
xor
sbb
pop
cmc
inc
mov
add
or
fnstsw
mov
add
test
stos
inc
fucom
lock
push
cmpsl
imul
cmp
mov
adc
xchg
lret
or
and
call
mov
xchg
pusha
lods
outsl
mov
jb
shll
out
jne
call
ljmp
je
lcall
out
add
add
insl
mov
jmp
scas
ret
mov
movsb
inc
sbb
fmul
jl
test
lret
mov
std
and
test
xchg
insb
mov
xchg
push
pusha
or
mov
adc
jne
pusha
pop
add
xchg
into
mov
scas
add
repz
popa
xlat
clc
lahf
xchg
into
gs
out
dec
pusha
in
mov
aas
cmc
js
mov
jb
es
inc
fst
in
mov
push
jae
push
sub
adc
mov
and
addr16
sub
in
cmp
adc
mov
push
leave
dec
xchg
daa
std
shrl
es
pusha
shrl
mov
add
sbb
aas
dec
out
cmp
mov
dec
fwait
movsl
xor
inc
mov
jnp
fildll
jmp
ja
sbb
testl
enter
ret
popa
jecxz
cmpsl
movsb
mov
arpl
mov
or
cwtl
sbbl
js
cmpsb
imul
mov
push
lea
mov
roll
ret
add
xor
xchg
decl
ds
call
rcrl
xchg
sub
jp
mov
sbb
adc
ret
xchg
inc
jbe
js
lods
mov
xchg
inc
cmp
or
das
rorb
shlb
negb
loope
mov
cmp
jo
mov
int
push
adc
out
cld
ss
sbb
fwait
xor
mov
push
jmp
test
fidivs
push
aas
push
dec
sbb
push
insl
sbb
sahf
js
and
into
lcall
in
or
iret
mov
cli
subb
divl
cld
xchg
hlt
popa
sbb
cmpsb
add
mov
into
sub
movl
movsl
adc
rcrb
imul
jmp
lods
test
not
adc
fnstcw
jbe
push
jae
jle
xchg
dec
dec
or
sbb
inc
fidivl
and
pop
mov
daa
inc
xorl
push
adc
clc
mov
mov
sbb
leave
into
in
pop
sub
mov
and
insl
adc
iret
cltd
push
jecxz
xchg
les
into
pop
test
fstp
arpl
pop
sub
cmp
dec
stc
clc
sub
pop
enter
push
mov
cmp
fwait
insb
inc
out
add
es
xchg
inc
dec
pop
push
jg
jmp
mov
mov
aaa
lods
dec
xchg
sbb
arpl
cmp
aas
pop
lret
mov
mov
adc
ds
adc
xchg
and
mov
xchg
add
dec
jnp
xor
stos
sbb
rcll
cmp
xlat
jno
repnz
rcl
pop
in
jl
jle
xor
jae
sarb
add
popa
movsl
cmp
loope
adc
call
add
mov
sbb
xor
mov
or
push
xchg
in
lods
mov
mov
testl
shrb
fs
mov
inc
xchg
sub
popa
inc
ds
mov
bound
sbbl
sub
loope
jbe
mov
rolb
sbb
clc
jg
cmp
ret
push
xchg
rorl
pop
cmp
mov
pop
stos
pop
dec
fs
jmp
or
js
clc
sub
rorb
lret
pop
xchg
mov
scas
insl
mov
push
inc
mov
jae
xchg
ljmp
rorl
mov
push
sub
jecxz
jle
les
push
mov
movsl
int3
or
dec
stos
imul
adc
lcall
jbe
fbld
test
and
idivl
call
fld
iret
inc
pop
shrl
mov
pop
in
enter
push
insb
or
pop
repz
jo
and
adc
lret
xchg
cs
rcrl
nop
sub
xchg
xor
xchg
inc
mov
in
movsl
add
jg
dec
jae
into
out
call
ret
pop
jl
push
pop
mov
xchg
aad
es
jmp
jnp
dec
dec
in
test
and
or
mov
nop
test
pushf
icebp
addr16
icebp
jl
cmp
mov
add
dec
cmp
xchg
ljmp
push
lods
add
scas
push
mov
popa
negb
pop
xchg
jno
andl
push
pop
cltd
in
pop
cmp
pop
xor
sub
adc
sub
addl
pop
jmp
add
xorb
mov
pop
push
mov
adc
or
rcrb
nop
mov
imul
gs
cmp
push
dec
sbbw
lret
in
popa
popa
enter
push
movsl
mov
fisubrl
or
loop
cmpb
das
sub
xchg
stos
xor
jle
mov
jl
daa
mov
mov
mov
fcomip
clc
sub
cli
jno
or
and
shl
xor
stos
push
mov
icebp
mov
out
lds
dec
sbb
mov
adc
xchg
int
or
dec
rorl
es
inc
test
ss
cli
hlt
ljmp
xchg
inc
xlat
jecxz
sbb
mov
add
fdivrs
insl
mov
fisttpl
in
shl
bound
adc
mov
inc
popa
cmp
in
dec
outsb
xchg
clc
sbb
rorl
sbb
or
add
or
cmc
loope
test
test
ja
adc
and
fistpll
std
lods
outsb
lahf
data16
pop
add
jns
add
adc
loopne
push
adc
xchg
mov
pushf
lods
test
ds
test
out
mov
xchg
testb
lahf
mov
sbb
enter
sub
xchg
insb
sub
ret
repz
adc
cld
sbb
fists
inc
gs
sbb
cld
jmp
cmp
insb
ret
test
xorl
sub
sub
push
and
es
pop
mov
lret
test
sub
mov
out
pop
mov
inc
lret
pop
imul
fiaddl
add
inc
mov
pop
inc
fnstsw
and
sbb
cmp
mov
insb
cs
out
xchg
or
adc
movsb
ss
loop
in
lret
jmp
push
cmp
inc
aaa
stc
std
cs
out
test
lods
repz
aam
pop
test
out
jge
test
cmp
jo
rcrl
sbb
inc
les
fidivl
cmp
and
adcl
mov
push
xlat
mov
and
add
icebp
inc
add
cmp
xchg
inc
and
and
or
daa
lock
cmp
mov
pop
stos
jne
fstpt
add
and
out
std
lock
mov
pushf
jo
mov
int3
call
sbb
sbb
mov
push
and
mov
lcall
pusha
into
insb
jl
ret
pop
scas
push
cmc
jae
scas
xorl
sub
aas
push
push
sbb
and
in
incb
in
dec
xor
pop
dec
inc
in
mov
and
xlat
jbe
sbb
xchg
cmp
stos
inc
cmpsb
out
and
leave
fcomps
mov
xor
push
popf
push
pop
int3
aad
enter
lea
fmuls
xchg
mov
adc
mov
lds
jmp
pop
push
out
and
cmc
aas
mov
pop
jg
divps
cmc
lods
pop
bound
jg
nop
in
subb
dec
repz
sub
pop
enter
orb
fstl
andb
pop
ret
test
fcomps
lods
or
add
cmpsl
or
fsubs
nop
push
or
popl
cmpsl
subb
rol
cmp
or
gs
mov
mov
mov
sub
sub
ret
or
xchg
aam
les
mov
push
dec
cmp
rep
add
adc
rcll
icebp
loope
pop
sub
mov
sbb
jp
and
push
cld
es
pop
pop
sbb
push
xor
dec
lahf
push
mov
jbe
xchg
test
out
ds
movsl
outsl
pop
push
test
lret
loope
or
repz
dec
insb
sbb
fadd
cmp
imul
cmpsl
sbb
loop
pop
cmp
mov
leave
mov
push
pop
dec
jmp
shrl
sahf
hlt
test
sar
loopne
mov
shrb
xchg
xchg
popf
mov
mov
inc
daa
mov
movsb
and
into
dec
cmp
lock
lcall
ljmp
mov
in
pop
adc
jl
cmp
push
or
jnp
daa
push
aas
push
pop
sbb
xlat
popa
roll
and
test
jg
jno
in
testb
mov
push
cmpsl
mov
repz
jb
pop
xchg
inc
hlt
xchg
inc
ds
pusha
andb
mov
mov
stos
cltd
jno
inc
sub
ds
pop
jg
cmpl
inc
sub
lods
bound
and
and
inc
push
leave
xlat
mov
lret
inc
sbb
and
movsl
incb
mov
cli
imul
push
pop
dec
les
aad
subl
inc
fs
and
ja
sbb
icebp
jbe
packsswb
mov
fs
hlt
ss
dec
inc
mov
ret
push
movsl
int3
imul
decb
jb
push
stos
ret
jmp
flds
sahf
mov
pusha
call
mov
fcmovbe
xor
popa
add
push
movsb
std
cmp
arpl
js
adc
xlat
and
js
or
in
inc
aad
push
sbbl
bound
inc
push
push
inc
repnz
dec
mov
xchg
fs
add
stc
out
dec
lcall
push
sub
dec
test
lcall
ss
dec
imul
test
and
jbe
ret
jl
and
cs
sub
push
dec
lds
cli
xchg
xchg
pop
icebp
inc
push
and
pop
mov
aad
mov
shl
dec
xchg
jae
cwtl
mov
aad
jno
push
movsl
mov
jae
fdivrs
aad
xor
pop
movsl
xchg
jb
sbb
rcrl
pop
push
movsl
mov
jbe
pop
shll
repz
sbb
xchg
imul
push
xor
push
in
adc
fadd
xor
das
mov
fldt
sbb
mov
pop
in
fiaddl
out
push
icebp
xor
notb
jbe
outsl
loope
and
data16
fmul
jo
adc
testb
cmp
mov
xchg
sub
fldenv
mov
sub
aas
rorb
out
rorl
jmp
aad
or
and
pop
cmpsb
cmp
push
stos
xchg
ljmp
in
push
data16
fisttps
imul
cmp
pop
movsb
in
push
es
jmp
xchg
sbb
pushf
popa
out
xor
icebp
ds
sub
mov
fucomi
adc
sbb
pop
movsl
fdivs
pop
repz
xor
jl
rcrb
ja
inc
adc
cmp
xchg
jmp
xchg
sbb
popf
loopne
dec
and
bound
les
rep
add
jns
cmp
cli
adc
dec
jp
mov
imulb
xchg
hlt
movsb
adc
int3
nop
rol
dec
pop
push
jecxz
mov
push
sub
test
adc
push
aaa
cs
outsb
loope
adc
adc
push
push
push
push
xor
mov
pop
ret
add
mov
daa
or
std
notl
pop
adc
xor
sub
mov
andl
push
sti
arpl
push
ljmp
jo
push
push
testl
xchg
mov
shrl
mov
mov
inc
inc
stos
xchg
cmp
fisubl
or
lods
jmp
ljmp
movsl
dec
cmpb
cli
fs
inc
xchg
ljmp
xor
daa
icebp
mov
pushf
nop
sub
mov
sub
mov
lcall
and
shrd
data16
sub
dec
out
jg
test
mov
loop
mov
cmpb
push
mov
xor
sub
rcrb
jmp
dec
out
in
mov
add
push
enter
mov
push
std
fwait
roll
lret
push
xor
mov
mov
icebp
jp
cmp
dec
dec
cmp
xchg
outsb
xchg
fcoms
cmpsb
jp
call
dec
xlat
outsb
out
dec
repz
pop
testb
in
test
cs
xor
nop
jbe
jmp
cmpsb
and
clc
pop
cltd
inc
jecxz
fs
fiadds
aaa
test
xchg
scas
cmp
xor
mov
inc
fdivl
cmpsl
arpl
sbb
mov
jecxz
cld
sbb
xor
jp
fwait
xor
mov
mov
aaa
out
pop
sub
aam
cmp
push
cmpsl
mov
mov
movsl
dec
stos
shrb
mov
xor
mov
xchg
in
test
lods
push
or
in
pop
xlat
xor
sti
xchg
cmp
mov
push
and
mov
xor
cmpsb
cmp
cli
jo
aaa
cmpsb
ljmp
sbbb
popf
mov
xchg
stos
lret
mov
pop
fiadds
cltd
mov
cld
fisubs
sub
cmpsb
pop
dec
loopne
insb
sbb
mov
out
adc
insl
les
and
and
mov
cmpsb
adcl
cmp
fsts
cmc
out
jnp
jp
test
adc
push
pop
sti
test
xchg
lds
mov
xchg
fiadds
push
rcl
sbb
jge
test
mov
into
fmull
aaa
xchg
cmc
jecxz
sbb
push
or
out
fwait
push
cltd
adc
and
test
lret
movsb
movb
ret
sbb
sub
cltd
das
addr16
enter
sarl
push
or
xchg
cmp
and
mov
loopne
xchg
dec
sbb
addr16
lahf
bound
mov
push
or
fsubrs
fnstcw
andl
sub
sbb
pushf
lods
fldt
cmp
push
ja
ljmp
mov
inc
mov
mov
pop
in
jne
push
push
jno
mov
mov
rcll
imul
adc
repnz
mov
jl
adc
sbb
xor
sub
into
je
bound
push
hlt
addr16
xlat
repnz
adc
cwtl
mov
xor
mull
es
popf
xor
sub
push
mov
pop
in
mov
xor
cwtl
adc
cwtl
cmp
mov
pop
jne
mov
add
mov
xchg
mov
cmp
cmpsb
push
push
pop
loopne
adc
jno
mov
leave
xchg
mov
lods
sbb
xchg
pop
idivb
cmpsl
push
add
mov
push
jbe
outsl
jae
jne
and
add
jo
pushf
mov
ds
test
call
gs
bound
and
cmp
es
pop
fistpll
xchg
in
and
push
fdivl
dec
out
in
and
fsts
pop
sbb
sub
mov
pop
mov
and
jnp
in
rol
sub
int
or
mov
imul
adc
sbb
mov
push
sub
or
dec
ret
fstps
lret
inc
jl
enter
adc
leave
dec
and
pop
fldl
vmovmskpd
and
pop
cmc
sbb
jbe
jge
imul
cmp
loopne
and
ds
inc
jo
stc
fs
inc
fadd
mov
inc
pop
xlat
stc
or
inc
fcompl
lea
inc
stos
inc
ja
stc
enter
fistpl
and
inc
stos
inc
jl
stc
shll
push
push
stos
inc
cli
bound
fucomp
mov
test
adc
je
xchg
adc
and
shrb
cmpsb
scas
pop
adc
dec
pop
xlat
bound
jecxz
mov
jo
mov
scas
jbe
push
mov
sbb
movsl
push
jae
sub
xchg
and
int
adc
pop
loop
add
sbb
mov
sbb
inc
stos
push
sbb
insb
push
stos
cmp
jns
or
pop
adc
cltd
lea
les
and
cld
repz
push
lds
or
pop
hlt
lcall
std
ja
dec
mov
push
push
mov
adc
jp
daa
aas
jbe
les
aaa
xchg
out
gs
in
jb
icebp
rorb
clc
movsl
cmpsb
cmp
push
add
cmp
xchg
mov
out
lds
jne
sub
sub
movsl
subl
pop
mov
jl
jno
scas
mov
adc
mov
sbbb
faddl
iret
scas
in
pop
xor
push
imul
cmpl
mov
pop
jnp
xchg
stc
cmp
subb
jge
cwtl
leave
movups
adcb
jno
xchg
dec
adc
mov
sbb
add
adc
pop
test
fidivs
or
add
mov
add
cmpsl
and
sahf
movsl
xor
scas
jg
push
popa
rep
pop
lods
mov
dec
out
inc
inc
outsl
mov
xchg
icebp
rolb
repnz
fs
scas
inc
xlat
div
sbb
mov
bound
popa
or
scas
mov
push
push
lds
call
adc
idivb
lds
hlt
mov
inc
fimuls
cmc
shrb
rcl
lea
push
inc
xor
xchg
push
jne
push
cwtl
ret
pop
mov
push
mov
je
cmp
loop
fidivs
xor
outsb
adc
aam
mov
xchg
push
pop
insb
jbe
out
inc
data16
fucomip
inc
cmp
addr16
lods
cmpsl
mov
pop
pusha
sub
mov
ret
or
out
xor
mov
pop
jo
das
testl
xchg
into
pop
and
lahf
sbb
xchg
inc
in
out
sbbl
sbb
add
sarb
fidivrl
add
jp
dec
pop
lods
das
out
pop
cmc
test
repnz
pop
outsb
add
daa
mov
mov
popa
lahf
mov
push
cmpsb
cmp
out
pop
or
jmp
fs
popf
cld
cmp
mov
pop
je
pop
test
mov
lods
jg
jge
cmp
das
stc
mov
mov
je
pop
xor
cmc
jmp
mov
jl
inc
add
mov
xchg
jns
mov
in
loope
orl
jae
jg
mov
sbb
jnp
mov
outsl
sbb
mov
fiaddl
cmp
pop
jle
divb
out
sti
xchg
or
add
push
xchg
scas
and
dec
pop
pop
and
inc
mov
mov
nop
or
les
cltd
cmpsl
pop
cwtl
ret
gs
push
loopne
jp
incl
mov
ja
cmp
andnps
xor
dec
ret
fistpl
pop
cmp
fisubrs
ds
push
ljmp
cli
adc
dec
icebp
xchg
push
mov
rcrb
xchg
lret
xchg
das
out
in
clc
or
push
pop
push
xchg
mov
fs
jne
lcall
sub
mov
inc
ja
roll
sub
xchg
adc
subl
nop
in
je
scas
cmp
cmp
push
or
mov
data16
pop
out
inc
int3
leave
and
iret
and
jge
adc
push
xor
es
xor
out
jge
adc
lcall
mov
lods
bound
mov
xchg
clc
aas
dec
bound
pop
cmp
fs
shll
dec
xor
mov
xchg
cmp
push
sub
sub
out
fstps
xlat
mov
jne
and
mov
xor
pop
aaa
mov
sub
xor
xchg
roll
fdivrl
mov
int3
push
popa
xchg
das
mov
stc
mov
lods
xor
std
mov
cmpsl
stos
sub
push
push
adc
cli
int3
jg
sub
cwtl
or
dec
arpl
imul
pusha
sahf
push
rol
mov
pop
jae
mov
inc
aas
xor
scas
pop
enter
sub
sub
mov
je
pop
push
inc
fbld
mov
ret
std
aad
push
scas
push
aas
std
mov
test
mov
rorb
and
mov
pop
movsb
add
cmp
shll
dec
jmp
in
ljmp
xchg
shl
xchg
or
inc
rorl
mov
shrl
lcall
bnd
pop
in
sub
sub
cmp
cmp
insl
push
dec
bndstx
ret
inc
aas
bound
out
xlat
xorb
or
cmpsl
iret
rcrl
ss
jno
push
test
mov
jle
data16
adc
je
add
repnz
push
xchg
adc
jge
sbb
lods
mov
fsubr
int
jbe
sbb
cli
cmpsb
mov
cli
jecxz
addr16
mov
and
popf
les
fwait
and
jo
int3
mov
dec
push
jne
inc
aas
mov
and
add
cmp
or
sahf
pop
jo
test
jbe
add
aas
cmpsb
xchg
push
mov
shll
push
mov
gs
push
sbb
add
xchg
repz
outsl
gs
jb
push
mov
mov
or
mov
cmp
xchg
in
mov
dec
insl
xor
jno
dec
in
sbb
scas
outsb
xor
xchg
jns
sbb
test
inc
xlat
clc
movsl
lods
out
in
imul
rcrb
push
cmp
dec
std
aaa
inc
fsubr
mov
daa
mov
cmpsl
mov
out
mov
push
cmpsl
imul
and
dec
jl
lret
xchg
ljmp
aas
ds
mov
push
sub
xchg
inc
out
jae
mov
jmp
loop
xchg
mov
pop
in
inc
std
inc
xor
fldcw
adc
or
sbb
repz
bound
insb
push
cs
cs
scas
in
aas
pop
add
jge
pop
cmp
rcrl
or
dec
mov
add
es
rcr
sarb
mov
cmp
jp
mov
lcall
fisubrs
push
ret
fildl
xor
xchg
cmp
outsb
lret
push
out
xchg
dec
mov
or
mov
fdivrp
xchg
mov
js
add
cmp
jne
pop
jecxz
jg
cmc
cld
xchg
insb
mov
mul
es
in
sub
add
fwait
xsha1
cmpsb
lret
cwtl
out
jmp
les
insb
pushf
mov
sahf
aaa
dec
xchg
gs
ror
sbb
pushf
into
dec
dec
jg
jo
add
fnsave
sarb
outsb
jnp
test
incl
pop
nop
stos
mov
pop
mov
shll
cmp
mov
sar
data16
scas
and
ds
sub
cld
lcall
mov
lods
cmpl
or
popf
xor
outsl
mov
jecxz
xchg
pusha
testl
daa
popa
sbb
add
xor
push
push
pop
jmp
das
data16
out
cmpsl
icebp
pop
out
ja
cmc
and
shll
adc
jne
mov
push
sub
mov
loopne
jg
push
test
movsb
or
jne
dec
xor
movsl
push
xchg
add
adc
and
or
jge
cmp
mov
aaa
jge
in
push
push
adc
xor
iret
mov
call
fmuls
mov
inc
repnz
pop
loope
add
push
add
push
cmc
mov
push
in
test
cmpsb
fs
in
mov
mov
pxor
cmc
mov
fwait
add
loopne
in
and
mov
out
stc
pop
adc
push
inc
out
push
inc
push
gs
or
sbb
pop
ret
jmp
ret
mov
lea
jge
sub
sub
mov
loopne
jle
inc
mov
pop
xor
aaa
sub
xlat
test
fstl
sub
test
lret
mov
mov
shlb
mov
dec
push
cmp
push
lods
dec
dec
test
cmpsb
sbb
adc
lret
sbb
mov
inc
cmp
add
fmull
sbb
in
and
dec
rcrb
xchg
loop
pop
movsl
xchg
out
pop
cmc
adc
lods
mov
loop
ss
repz
arpl
shr
fistpll
adc
lock
call
push
mov
dec
je
call
mov
xor
sub
dec
and
push
es
dec
dec
push
jmp
sbb
mov
add
scas
scas
cmp
ljmp
cld
cmp
test
and
imul
cmc
sub
adc
sub
adcl
add
sbb
stc
daa
xchg
sahf
or
push
rcll
hlt
je
pop
das
push
lds
inc
pop
je
adc
mov
in
iret
aad
mov
clc
lret
rol
das
addr16
xchg
clc
pop
jae
sbb
fldt
and
inc
jmp
add
cmp
inc
lcall
popa
loopne
or
inc
adc
in
push
pop
jb
aam
or
pop
sub
push
push
stos
insl
cmp
xor
dec
ljmp
xchg
idivl
push
lcall
cwtl
popa
leavew
mov
push
jno
mov
stos
add
add
xor
lahf
pop
push
jno
jecxz
dec
jecxz
stos
mov
and
sbb
mov
test
lret
jns
push
mov
xchg
js
scas
loope
add
cltd
sbb
and
xchg
ret
out
jle
cmp
rcrb
mov
call
mov
icebp
jg
js
push
add
dec
pop
jle
push
adc
in
enter
scas
call
sbb
fisttpll
mov
mov
jl
adc
pop
jbe
aad
test
inc
popa
mov
cmp
lcall
push
mov
js
repz
cs
sub
mov
sbb
adc
and
dec
pop
dec
test
stos
enter
dec
or
stos
pop
ret
pop
jbe
adc
mov
mov
in
insl
pushf
inc
pusha
pop
push
das
sti
popf
cld
clc
pop
in
and
adcb
xchg
sub
mov
rcrb
lds
pop
mov
shll
xchg
push
sbbl
mov
xlat
xor
mov
stc
and
test
mov
adc
fldenv
ds
outsl
fnstsw
dec
sbb
mov
sub
mov
movlps
jecxz
jg
jno
shlb
std
shl
and
mov
sub
dec
xor
popa
mov
enter
shlb
xchg
loope
xor
cld
cwtl
fs
xlat
sti
nop
mov
add
shll
pop
loop
bnd
ja
cmpsl
ss
out
or
es
popf
or
dec
cmpsb
push
in
sarb
ljmp
jne
mov
sbb
aam
out
pop
pop
xor
sbbb
call
aaa
in
jo
jmp
adc
jmp
mov
test
in
leave
loope
sti
dec
insb
inc
xorb
into
subb
lret
adc
lret
fyl2x
aas
pushf
ret
dec
into
dec
adc
mov
sbb
jmp
mov
inc
xchg
sub
enter
xlat
jmp
mov
nop
lods
inc
cmp
cmpsl
out
mov
repz
aas
idivb
adc
add
and
out
xchg
sub
or
mov
add
je
mov
mov
cld
sub
adc
lods
sahf
xor
movsb
js
test
in
sub
aas
and
dec
ret
outsl
aas
inc
loop
push
fldcw
out
sti
dec
sbb
or
adc
in
cmp
popl
jl
mov
or
jmp
jle
pop
out
xchg
mov
and
dec
cmp
std
mov
loopne
xlat
std
xchg
mov
movsb
xchg
mov
xchg
jnp
pop
fldcw
stos
xor
jmp
popa
xorl
lcall
outsb
clc
jnp
cwtl
mov
adc
jmp
shr
pop
mov
je
or
jo
cmp
das
insl
add
pop
in
outsb
dec
push
mov
inc
pusha
pop
xlat
andb
push
mov
rolb
mov
out
sbb
pop
sub
jo
aad
fldcw
out
xchg
lods
and
std
fisubrl
je
ror
insb
cli
outsl
or
xchg
daa
cmp
xchg
int
movsl
arpl
sub
dec
mov
in
and
ljmp
push
inc
out
int
sub
sub
andb
cli
xchg
lds
or
mov
jg
lea
mov
sub
test
inc
mov
xchg
hlt
jbe
sub
mov
ds
in
aam
loop
push
mov
push
pop
rclb
sub
in
subb
idivl
fwait
cmp
enter
aad
fisttpll
sarl
push
pop
mov
sub
roll
ret
xor
pop
ds
xor
jne
mov
jge
nop
inc
mov
add
push
and
in
adc
cmp
or
or
orl
jns
shlb
or
loope
jecxz
arpl
iret
cmpsw
or
add
enter
lea
sbb
fsts
lock
mov
test
and
out
add
and
or
loopne
gs
iret
andb
inc
xlat
cli
adc
test
jbe
sub
dec
cmpsl
jns
cmp
clc
push
mov
inc
jecxz
hlt
add
lret
testl
adc
sti
imul
pop
cmp
or
pop
push
cmp
xor
test
xor
roll
inc
icebp
fadds
inc
push
das
push
mov
mull
mov
imul
mov
lret
dec
movsl
xchg
sub
sub
sub
and
pop
loopne
mov
ljmp
adcb
enter
sub
jno
addr16
mov
inc
loop
out
rol
filds
in
lcall
pop
cmpsl
mov
mov
dec
out
not
out
jg
hlt
jge
test
dec
xor
pop
mov
dec
ficompl
in
pop
jmp
mov
adc
mov
push
hlt
lcall
adc
inc
stos
or
adc
mov
push
lret
bound
inc
bound
jb
and
inc
loopne
jbe
sbb
stc
addr16
rol
dec
stc
pushf
aaa
push
stos
dec
sbb
pop
fisttps
add
xchg
pop
xor
jno
adc
clc
jne
movsl
add
js
or
pop
mov
xchg
xor
inc
divl
scas
leave
or
enter
xchg
sbb
sarl
cwtl
decb
in
out
add
daa
fstpt
pop
adc
inc
cmp
push
pop
stos
jmp
outsb
icebp
pop
xchg
aas
dec
pop
jb
sbb
test
mov
xchg
test
fildl
sbb
cli
mov
fs
ss
pop
fidivl
imul
mov
rorl
jnp
imul
adc
cmp
inc
rcll
scas
popf
movb
sbbb
xor
mov
stos
cwtl
stos
in
loope
adc
mov
sbb
jno
sti
cmp
inc
sti
mov
dec
cltd
dec
sbb
in
xchg
mov
and
push
loopne
xchg
mov
add
inc
ficompl
adc
mov
sub
incl
movsl
pop
cmpsl
out
mov
arpl
xchg
and
fmuls
lods
repz
lock
sbb
xor
repnz
int
popa
js
pop
repz
lock
rolb
pop
pop
js,pt
nop
sbb
jno
in
mov
aad
nop
mov
ret
add
arpl
adc
lahf
in
out
and
and
cli
subb
xchg
sbb
shl
mov
cmp
aas
dec
sar
mov
outsl
ret
dec
adc
lods
outsb
dec
mov
hlt
imul
insl
rcrl
add
mov
std
enter
pop
insl
add
enter
insb
and
xchg
fcompl
mov
stos
jb
push
arpl
movsl
int
push
in
std
test
je
iret
jmp
and
frstor
cmp
mov
call
test
pop
jmp
aaa
call
in
jge
adc
inc
lcall
or
jle
jmp
xor
xorl
gs
or
adc
shrl
out
jle
inc
push
xchg
pop
adcb
test
jl
push
lea
mov
inc
add
clc
and
add
movsl
adc
loopne
fs
or
add
jo
clc
dec
fcompl
enter
add
mov
adc
data16
pop
icebp
filds
js
add
cwtl
cmp
dec
sahf
sbb
lock
sbb
adc
jb
mov
mull
jle
push
pop
xor
dec
test
mov
int3
popf
lods
fs
jno
les
push
fwait
mov
mov
orb
cs
dec
xchg
fisttps
jne
es
leave
fs
sbb
jg
sbb
xor
dec
sbbb
xchg
scas
add
push
mov
mov
sbb
sbb
negl
ss
sub
ret
sbb
jl
cmpsb
or
mov
or
mov
int3
jne
sub
fmull
movsb
dec
stos
or
and
loop
push
dec
pop
mov
testb
insb
mov
push
rep
xor
mov
leave
loopne
rsqrtps
ret
mov
fists
insl
loopne
stc
data16
xlat
orl
jecxz
iret
fmuls
arpl
and
rorl
mov
cmpsb
inc
jp
test
push
sbb
notl
jnp
iret
iret
push
adc
aas
xchg
xor
popa
pop
cmp
adcb
add
mov
cwtl
test
pushf
lret
or
jnp
adcl
das
stos
stc
sbb
in
push
decb
jmp
or
enter
sti
xchg
femms
lret
dec
loopne
les
add
inc
adc
mov
nop
fsubrl
ror
xor
sub
pop
push
test
jns
jne
cmp
dec
mov
xchg
lcall
sub
lods
pop
sbb
or
in
shr
testl
push
rcrl
int3
push
clc
loope
ja
inc
add
in
lcall
jne
jae
sbb
mov
ljmp
adcl
push
lods
dec
xchg
loop
dec
icebp
add
je
je
adc
and
lcall
in
mov
add
sahf
xchg
dec
or
nop
jl
sub
xchg
xchg
mov
xchg
add
or
mov
mov
leave
test
sbb
aad
inc
inc
xor
pop
jno
mov
stos
jo
xor
pushf
bound
jbe
sub
and
ds
bound
test
loope
cmp
shr
sarl
ret
stos
jae
pop
mov
mov
inc
sbb
jmp
xor
inc
addl
cmpsb
rclb
sbbb
popa
and
outsb
cmp
jmp
mov
int
adc
clc
inc
fsubr
dec
pop
or
addr16
pop
sbb
clc
jl
push
mov
jae
and
enter
mov
or
fildll
in
test
xchg
out
popf
bsf
shrl
fsubs
mov
adc
fs
mov
es
inc
jb
mov
inc
mov
lret
jns,pn
mov
cmp
xor
sub
adc
imul
and
or
mov
sarl
jno
dec
fisubl
xor
lcall
push
dec
jmp
scas
sub
sub
mov
pop
test
adc
rorl
adc
arpl
dec
xor
jp
fs
repz
mov
sub
jb
jle
insb
sbb
dec
mov
imul
ljmp
adc
sub
push
cmp
test
subb
jne
adc
xlat
mov
sub
pop
lods
insl
out
mov
xchg
pop
dec
stc
sbbb
mov
pop
sub
addr16
mov
inc
scas
stos
add
enter
mov
stos
or
cmp
ljmp
and
jmp
xchg
push
ljmp
push
mov
stos
and
jbe
mov
leave
int
icebp
mov
pop
adc
lock
mov
or
fwait
sub
fbstp
into
les
sbb
cmp
xor
btr
add
orb
pop
ja
mov
mov
loopne
pop
es
rorl
scas
mov
adcb
ja
mov
push
jmp
mov
jb
jno
xchg
fsubrp
jg
loop
clc
rolb
lods
daa
fimuls
sub
push
jnp
add
insb
mov
inc
lods
adc
loope
js
jmp
sbb
mov
sbb
push
call
rcll
push
movsb
sbb
cmc
xchg
push
and
mov
cmp
mov
mov
push
push
test
fisttpll
and
mov
daa
aas
ret
daa
into
faddl
int3
scas
cltd
pop
sub
adc
or
push
xlat
in
inc
mov
jmp
sti
leave
inc
out
ror
pusha
aad
pop
mov
mov
push
rol
inc
fadds
xor
xor
fwait
out
push
sbb
inc
repz
lret
dec
das
mov
fmuls
mov
xchg
xor
movsl
cmp
stos
test
pop
pop
push
mov
test
es
xchg
dec
loopne
jmp
mov
jo
xchg
das
movb
and
ds
aas
push
das
rcll
repnz
mov
xchg
inc
shll
inc
aam
rcrb
lcall
mov
rclb
push
outsb
js
pusha
mov
xchg
add
fnsave
push
jecxz
test
xchg
add
fwait
or
or
popf
jo
arpl
addr16
and
mov
lcall
inc
cs
stos
add
dec
in
cld
mov
out
xor
jg
adc
lds
mov
sbb
inc
mov
pop
jle
mov
sbb
mov
pusha
mov
js
dec
cli
out
xchg
xchg
add
hlt
add
mov
fidivrs
jg
pop
movsl
cmp
jg
fnstenv
jo
inc
fs
jnp
sub
pop
loop
xchg
dec
xchg
sub
pop
scas
das
pop
rcl
icebp
fsubrs
fildll
ror
lahf
ss
dec
dec
inc
aas
push
out
dec
xchg
sub
out
mov
aam
leave
pusha
jge
mov
fldcw
fdivrs
daa
scas
clc
pop
or
mov
inc
push
xor
shlb
adc
leave
xor
sub
lret
dec
out
test
jne
stos
mov
mov
lret
jg
pop
jle
ja
mov
sbb
stos
inc
imul
fldcw
pop
mov
arpl
ljmp
add
mov
push
pop
daa
mov
insb
scas
cmp
ljmp
jno
daa
mov
int
je
mov
fildl
jo
cld
mov
sub
mov
push
test
stos
cmp
fsubl
shrb
call
xchg
jo
xor
xchg
xchg
sub
pop
daa
mov
cmp
into
adcl
ja
xchg
in
arpl
xchg
xchg
out
cltd
adc
shlb
and
push
lods
push
jns
inc
stos
jbe
lret
mov
fmuls
movsl
or
xchg
sub
pop
jbe
dec
movsb
jbe
loope
fcoms
dec
test
lret
add
loopne
imul
xchg
mov
fadds
cmp
dec
loop
pop
loope
insb
imul
scas
ret
pop
fiadds
test
loope
xor
lds
inc
fsubl
mov
jp
inc
arpl
jne
add
enter
test
popf
xor
mov
push
call
and
xor
jbe
pop
mov
xchg
call
ds
sbb
aaa
into
gs
mov
add
daa
lret
bound
inc
jns
imulb
int
lcall
xchg
cld
outsb
mov
pushf
pop
inc
fimull
popa
in
outsb
scas
inc
pushf
or
or
mov
rclb
xchg
sub
popa
rclb
add
xor
dec
xor
xor
mov
mov
sbb
arpl
jnp
push
jmp
leave
push
mov
push
mov
pop
divb
mov
lds
add
mov
xor
insb
or
popa
inc
mov
ret
jo
cltd
fimull
fidivs
xor
fs
jle
jne
cmc
mov
lods
cmp
fbstp
lds
mov
fdiv
mov
das
pop
hlt
pop
aas
dec
jecxz
enter
mov
pop
sahf
push
aaa
ds
rorb
popf
repz
push
sub
insl
pop
iret
fidivs
ret
repnz
pop
into
cmp
inc
outsb
add
push
sub
jno
into
push
out
enter
repnz
sbb
push
int
inc
add
clc
popl
pop
fnstenv
aad
jp
aam
nop
or
ljmp
fmull
adc
or
ds
cmpsl
ds
xor
push
or
nop
daa
inc
fldl
loopne
in
adc
stos
inc
dec
or
cmp
in
pop
call
les
add
and
sbb
xor
dec
or
cmp
in
test
mov
addr16
adc
test
or
xor
adc
fimull
jae
xlat
imul
loop
jl
sbb
jg
push
xchg
sub
insb
add
jecxz
mov
dec
adc
addb
and
fldl
lcall
ss
xlat
mov
lret
push
sbb
fs
adc
jle
aam
push
or
lahf
adc
sahf
xor
cmp
mov
sub
adc
gs
cmp
out
dec
push
sbb
jbe
ds
mov
mov
push
push
pop
idivb
sarb
ficompl
xchg
dec
add
xchg
add
mov
inc
add
fs
add
mov
adc
fbstp
add
test
loop
mov
inc
push
jae
aaa
shlb
loop
pop
adc
imul
add
test
lock
dec
repz
adc
add
lods
inc
sub
repz
cmc
push
ljmp
dec
in
inc
pop
das
stc
jno
sub
loop
sub
test
add
xor
pop
cmc
xor
sti
xchg
push
jecxz
jne
add
jp
insl
pusha
lds
mov
cmp
or
daa
jp
push
outsb
jae
pushf
jg
cmp
out
sarb
dec
inc
and
jb
arpl
pop
xchg
ja
nop
movsl
mov
xchg
loop
or
adc
roll
bound
test
loop
mov
cmpsl
ds
adc
pop
andl
into
sarb
inc
fisubrs
or
mov
dec
or
mov
scas
sub
fsubr
movsl
cmp
cli
les
cmp
sbb
orb
pop
aad
mov
psllq
sub
loopne
jnp
ret
pop
mov
mov
rcl
loope
add
and
and
cmpsl
xchg
ds
enter
loop
test
and
push
cmp
movsb
nop
int3
arpl
lds
mov
out
test
pop
or
out
lods
in
cwtl
int
ret
decl
test
push
fs
xchg
jne
push
mov
call
xchg
inc
push
xchg
sub
cmp
mov
es
daa
mov
ds
inc
cmpl
aas
loopne
mov
es
pop
lcall
movsl
push
in
shlb
or
cmovp
dec
xchg
sub
mov
outsl
xchg
repz
dec
and
inc
aam
je
dec
loop
popf
adc
lret
jecxz
xchg
sbb
nop
cmpsl
dec
cmp
mov
cwtl
mov
jecxz
pop
or
cs
pop
pop
xchg
sub
scas
xor
stc
add
inc
xor
shr
dec
push
xlat
out
test
sahf
cmpsb
xchg
call
or
cmp
inc
push
jns
add
shrl
shrl
decl
fdivrl
out
jle
cltd
xor
xchg
sub
lock
ljmp
gs
lret
bound
scas
inc
rcrb
sbbb
daa
mov
push
inc
fsubl
jno
cmc
mov
add
xor
pop
div
push
cwtl
das
adcl
inc
movsl
ret
gs
xchg
negb
scas
and
push
movsl
jb
jno
xor
xchg
sub
test
test
mov
mov
and
mov
bnd
into
inc
int
imul
fstpt
jg
pop
lock
inc
ret
sub
sbb
sbb
cmc
leave
nop
mov
fiaddl
out
jae
add
xchg
mov
fs
sub
cmpsb
sub
movsl
aas
jge
mov
stc
xchg
adc
pop
mov
mov
push
js
testl
cmp
pop
push
inc
lds
daa
ljmp
push
stos
roll
jae
xlat
data16
xor
sub
jmp
adc
mov
je
test
fwait
data16
mov
scas
out
in
sarl
jne
in
fmull
push
insb
mov
cmpsb
adc
adc
repz
xor
dec
mov
in
add
sti
pop
iret
outsb
sahf
mov
and
insb
out
sbb
pop
sbb
dec
cmp
jg
and
push
aaa
adc
xor
mov
js
scas
stos
jns
cli
lock
mov
or
sarl
stc
sbb
mov
in
push
mov
sub
insb
les
sbb
mov
inc
outsb
dec
mov
inc
das
pop
sarb
mov
mov
push
xchg
and
add
into
dec
ss
and
pop
scas
fs
decb
mov
xlat
popf
xor
das
cmp
clc
and
jge
or
loop
fisttpl
pavgb
sbb
clc
add
andb
cld
xchg
or
xor
aad
and
scas
dec
push
dec
mov
pop
inc
fs
inc
jnp
scas
inc
ss
addl
pop
or
mov
ret
cmpb
lea
movb
imul
push
data16
dec
xor
jne
pop
add
sahf
xor
dec
mov
pop
inc
push
lret
mov
testb
adc
pop
or
fs
adc
sbb
test
sbb
jbe
lods
cmp
in
mov
sti
enter
insl
and
dec
es
bound
pop
mov
or
jno
xlat
mov
jle
lods
jae
fisubrs
pop
add
cltd
push
xchg
jl
or
or
add
test
mov
sti
push
ds
enter
out
xor
fldcw
int3
out
and
jne
sarb
icebp
xor
xchg
pop
dec
mov
movsl
sti
popa
fld
dec
in
jbe
out
mov
jmp
jno
or
popa
out
cmp
mov
movsb
into
bound
fwait
jae
pusha
mov
fstpl
xchg
rcll
out
test
sub
dec
cmp
imul
mov
sub
imul
sbb
popf
jbe
and
test
cmpsb
loop
mov
lds
call
scas
pop
repz
or
cmp
sbb
imul
pushf
xor
add
clc
testl
push
outsb
shll
ja
mov
xorl
test
inc
aas
call
data16
mov
lea
sarb
sarb
dec
inc
ret
insl
sub
mov
imul
inc
pop
mov
in
dec
xchg
mov
xor
rcrl
inc
out
cmp
adc
push
mov
cmp
push
shlb
dec
loopne
shufps
push
aad
cltd
mov
adc
inc
xlat
mov
es
mov
cmp
push
dec
daa
repz
dec
movsb
mov
lahf
xchg
sarb
lahf
out
push
sub
and
fnstenv
pop
push
sti
or
mov
cld
add
les
sbbb
aam
inc
ffree
pop
ljmp
test
xchg
sbb
push
dec
jge
push
out
lea
lods
jne
scas
stos
gs
cwtl
lea
sbb
mov
shl
push
enter
in
out
es
add
repz
fldenv
jmp
aad
mov
repnz
out
out
movsl
aad
push
ljmp
mov
call
dec
mov
jo
inc
lods
pop
ss
xchg
cmpsb
xor
push
lods
xchg
ja
into
popa
mov
lret
inc
sahf
pop
mov
push
push
jle
push
mov
cs
inc
enter
push
jmp
adc
inc
cmc
cmpsl
jne
dec
ljmp
dec
pop
test
repz
movsl
cli
aad
int
cltd
jcxz
loop
out
mov
imulb
testb
push
stos
fadds
test
xchg
ficomps
out
push
push
jae
sbb
das
xchg
call
pop
cmp
jge
push
pop
dec
stos
jne
jns
cmp
insl
popa
fisttps
and
sbb
call
movsl
fimull
cmp
jae
push
imul
test
xlat
sub
mov
lds
loop
test
loop
sbb
iret
aaa
sarl
movsl
push
test
clc
xor
or
mov
sbb
jmp
cli
pop
xchg
stc
mov
cli
xchg
inc
repnz
int3
imul
ror
jb
ret
loope
lods
inc
fldenv
nop
xchg
out
nop
ss
mov
and
inc
lea
or
lock
push
lock
loopne
jl
jbe
cmp
repnz
add
jl
stos
enter
lahf
xchg
inc
sbb
push
mov
mov
pusha
mov
enter
sbb
push
in
mov
loope
cmpsb
les
or
fucom
add
mov
push
in
or
adc
mov
out
adc
pop
cmc
jb
jmp
fidivrs
stos
cmpsb
subl
loope
adc
repnz
push
or
xchg
dec
adc
aas
xchg
dec
dec
out
cmp
push
jmp
popf
xor
shl
cld
mov
mov
scas
and
mov
and
stc
cwtl
lods
mov
mov
testl
js
test
ss
add
jno
movb
icebp
rclb
push
shll
add
mov
adc
mov
sbb
gs
mov
or
cwtl
pop
xchg
jns
push
jns
popf
jmp
push
and
xor
les
loopne
sub
xor
adc
xor
adc
arpl
fs
fidivs
lret
into
addb
lret
jp
mov
out
pop
into
jmp
nop
mov
scas
inc
mov
pop
mov
aaa
arpl
add
and
or
or
rcrb
sbb
ret
in
popf
xchg
lret
fadds
sbb
rorl
dec
pushf
mov
rclb
lock
xchg
faddl
jne
xor
cmpsl
pop
dec
dec
jecxz
andb
cmpsb
lret
push
xchg
imul
imul
mov
pop
jge
xchg
insb
jp
loope
pop
imul
inc
lret
fstl
es
mov
add
pop
aam
and
in
dec
xchg
ja
cmp
test
inc
mov
adc
mov
cmp
pop
popf
cmpsb
ja
pop
sbb
insb
cwtl
movsl
arpl
pop
stc
jg
mov
mov
push
call
fnstsw
and
ja
mov
fnsave
imul
lcall
rclb
or
xchg
sbb
ja
sbb
push
stos
mov
add
negb
cmpl
mov
fnstenv
or
aas
out
push
in
test
push
or
push
dec
shr
and
inc
jg
sub
decb
pop
inc
and
cmp
pop
fisttpll
jne
shrb
pop
mov
das
lahf
divb
ds
mov
jne
xchg
loop
xor
pop
pop
jge
push
inc
dec
lds
addr16
and
jno
outsl
ja
arpl
lret
stos
pop
fcoml
lahf
xchg
call
roll
stc
fidivl
mov
or
lock
pop
int
ljmp
enter
cwtl
stc
xor
aad
jne
push
mov
jae
dec
insb
fwait
dec
pusha
movsb
push
xor
pop
jg
movsl
popa
addr16
imul
xchg
mov
mov
pop
in
cltd
shrb
sbb
clc
mov
incb
mov
adc
hlt
lods
js
test
fiaddl
mov
aad
repnz
xor
or
inc
lds
repnz
fst
out
cmp
pop
shlb
call
scas
pop
or
and
or
cmpsb
rorb
adc
out
addl
out
rcll
mov
out
and
mov
or
outsl
popf
fmuls
jne
aad
ss
mov
std
and
leave
fadds
sti
in
lods
aad
cld
mov
mov
das
sub
test
push
dec
icebp
mov
sti
jns
mov
pop
das
sbb
cwtl
and
add
bound
out
cs
add
aad
push
or
sbb
cld
xchg
add
into
inc
in
and
outsl
fildl
sub
adc
jbe
push
jo
mov
pop
rol
ljmp
out
inc
fcmovnu
mov
fildll
add
add
stos
cmp
daa
xchg
push
cmpsl
jb
fsubl
adc
jl
mov
out
dec
mov
add
pop
lahf
aam
popa
clc
jmp
es
movsb
inc
mov
or
push
cmp
add
adc
stc
rcrl
ret
lock
mov
add
dec
loope
and
cmp
push
xor
or
hlt
repz
ret
mov
dec
or
dec
mov
lahf
sbbl
nop
mov
aad
outsl
mov
fidivs
pop
popf
gs
jne
fdivl
dec
mov
loop
push
mov
mov
inc
add
push
adc
imul
cltd
test
aad
adc
scas
inc
in
push
lods
jnp
mov
sub
jne
xchg
sub
dec
lcall
adcb
xor
pusha
lcall
jl
push
icebp
sbb
das
push
mov
lock
pop
cwtd
cltd
mov
sbbl
lock
sbb
jb
jnp
push
fwait
andb
cmp
sub
pop
add
dec
mov
imul
pusha
jno
in
push
adcl
ss
pushf
xchg
and
cli
arpl
jecxz
push
inc
shrl
in
das
xchg
dec
rclb
xor
cmp
jb
lea
inc
shlb
stc
push
adc
jge
addb
xor
dec
jp
pop
dec
rorb
loop
adc
mov
shrl
sub
mov
or
mov
adcl
inc
mov
sub
loopne
lahf
stc
test
mov
push
adc
mov
mov
cmp
aaa
repz
jne
add
adc
in
js
icebp
das
cmp
pop
push
loop
pop
mov
dec
rcpps
dec
fs
cmp
sub
frstor
xchg
sarl
jge
add
mov
out
xchg
in
ret
cmp
mov
imull
sahf
mov
pop
mov
hlt
fildl
and
mov
xlat
push
xchg
pop
pop
rcll
pop
dec
add
xor
bound
fcoms
scas
inc
and
mov
lods
insb
shl
and
in
push
outsb
add
mov
clc
daa
mov
lahf
xchg
dec
idiv
xchg
imul
ret
nop
daa
pop
roll
or
out
decb
mov
fiaddl
fwait
push
test
test
and
je
lods
inc
bound
int
push
mov
xchg
xchg
pop
mov
xchg
test
sbb
adc
loop
jb
ja
xchg
ja
push
ja
or
popf
or
lret
cmp
jo
lret
cmp
loope
lret
aad
sub
inc
leave
jmp
or
scas
repz
in
sbbl
clc
and
ret
iret
inc
xlat
mov
push
clc
mov
enter
mov
mov
xchg
lods
fcoms
mov
enter
ficompl
imul
mov
dec
iret
loope
subl
aas
hlt
jge,pt
and
cs
loop
imul
dec
cmp
inc
jg
add
imul
fmull
xchg
loopne
pop
fiaddl
xchg
push
cltd
imul
movsb
sbb
repnz
push
pushf
pop
mov
adc
cltd
out
test
outsb
mov
sub
dec
scas
or
and
nop
cltd
push
in
je
insl
mov
daa
fnstsw
inc
mov
pop
rorb
les
cmp
ss
push
xchg
push
int3
cmp
mov
inc
or
out
jecxz
leave
cmp
fsubr
rcrb
mov
sti
divb
iret
fsubrs
adc
fdiv
pushf
outsl
iret
in
lret
loope
xor
jmp
lods
pop
add
sbb
mov
int
test
in
dec
xchg
rol
sub
aad
push
push
iret
sub
into
cmp
or
stos
xor
push
mov
pop
cmp
sub
cmc
jle
adc
hlt
cmp
out
mov
adc
mov
lock
aam
lret
shll
inc
hlt
xor
xchg
pushf
mov
push
int3
scas
int
adc
add
int3
xchg
mov
inc
frstor
imul
add
dec
add
and
add
push
test
xor
cmpsl
sbb
in
lcall
add
and
xchg
sub
hlt
pop
jno
inc
mov
lods
push
xchg
std
xchg
enter
cmpsl
jmp
sub
sarb
fisttpll
mov
fs
ret
repnz
add
fwait
ror
out
sub
sahf
mov
inc
out
aaa
in
jmp
push
enter
faddl
push
sub
in
adc
int
gs
outsb
push
adc
divl
inc
xor
dec
mov
pusha
ljmp
mov
fists
mov
mov
lods
mov
pop
ds
jnp
clc
and
cmp
xor
sbb
cmp
push
cmpsb
insl
xchg
in
aam
inc
mov
fcoms
or
data16
sti
xor
in
sub
ja
aas
pop
push
xor
jl
rcrb
insb
inc
and
push
sub
test
sbb
lcall
rcrl
sbb
and
xlat
ss
lahf
insl
push
sbb
fwait
movsb
inc
sbb
fdivrl
mov
iret
pop
mov
add
cmpsl
jmp
inc
mov
sub
xchg
subb
shrb
pop
data16
popa
jo
mov
inc
adc
mov
test
mov
test
lahf
ss
bound
arpl
ss
jb
sub
scas
and
movsl
cld
cmp
loop
jo
js
into
gs
xor
xor
test
ljmp
adc
and
paddq
cwtl
push
out
sub
mov
mov
mov
sbb
adc
ret
rclb
cmpsb
movsl
cmovne
inc
push
fwait
jecxz
and
cmpsl
outsl
shl
jmp
mov
cmp
push
mov
inc
push
mov
push
ret
mov
or
inc
out
loope
cs
and
sbb
xor
xchg
mov
xor
mov
cld
pop
enter
or
aas
add
jl
daa
cmc
dec
xor
or
add
jb,pt
pusha
mov
arpl
addr16
in
mov
add
adc
ss
jae
in
push
sub
cwtl
sub
push
jbe
sbb
lods
mov
daa
mov
and
or
fmull
sub
fistpll
nop
xchg
sub
repz
add
or
push
adc
jecxz
stos
shl
in
jecxz
xchg
in
mov
jbe
push
int
and
hlt
or
xchg
adcl
or
das
mov
cmpsb
or
sbb
cmp
fldl
leave
cmp
aad
ljmp
popa
vcvtsi2sd
xor
and
rcrl
out
xchg
sub
stc
aad
movb
pusha
shl
ds
es
and
lds
mov
out
fildl
pusha
dec
loope
loopne
aas
mov
cld
sarb
push
les
cmp
scas
int
gs
iret
sbb
in
pop
test
add
mov
subb
inc
je
into
gs
xchg
int3
and
xchg
mov
jp
clc
mov
iret
popfw
out
xchg
mov
outsl
xchg
shr
jg
mov
push
push
mov
clc
sub
add
xor
out
push
mov
into
pop
aad
mov
cmp
xlat
cs
dec
mov
sbb
out
mov
mov
lods
inc
mov
out
adc
cmp
test
and
ds
dec
mov
jl
lret
cmp
loopne
mov
push
into
push
mov
aam
mov
bound
xchg
jns
mov
std
jne
mov
mov
inc
insl
insb
mov
icebp
pop
pop
icebp
jno
jnp
test
fbld
sub
lcall
ljmp
mov
hlt
andb
sbb
mov
repnz
and
xchg
adc
and
xlat
movsb
arpl
and
sbb
mov
pop
int
dec
repz
fmuls
fisubl
mov
push
xor
push
mov
pop
stc
dec
repz
push
popa
lods
mov
dec
sbbl
mov
sub
inc
mov
xor
popf
call
and
jecxz
mov
stos
jne
clc
rorb
mov
dec
in
inc
mov
push
jge
mov
push
xor
sub
or
cmp
xchg
js
and
xchg
andb
jb
jne
jge
scas
dec
daa
xchg
xchg
jae
popa
fwait
xor
mov
pop
testb
jo
or
pop
pop
fwait
jg
and
cmp
mov
ret
call
mov
fstl
mov
fcompl
sub
sub
add
addr16
inc
xchg
fimull
aaa
jo
adc
inc
cmpsl
push
pop
sarb
mov
in
cmp
int
in
xor
imul
es
ficoml
scas
or
inc
xchg
xchg
test
add
scas
fs
lea
nop
icebp
loopne
movsl
ret
mov
mov
flds
jecxz
pop
out
push
mov
mov
aaa
jo
rclb
lcall
push
insl
lcall
jne
dec
lahf
movsl
push
ja
mov
mov
hlt
fldl
xchg
or
das
rcrl
xchg
sub
je
stos
jg
movsb
dec
cld
pop
lds
out
daa
mov
sub
jge
mov
in
sub
fstl
and
xor
lock
fildl
ret
adc
loope
mov
adc
ds
cld
jmp
lret
add
cwtl
fdiv
mov
or
aad
mov
mov
sbb
pop
stos
push
ljmp
xlat
negb
mov
jmp
add
notb
push
mov
ss
jnp
sbb
roll
pop
outsb
add
cmp
shrb
adc
push
sub
lea
pop
dec
nop
jge
ret
cmp
jecxz
mov
sbb
loope
lahf
jns
ja
into
xchg
sub
pop
mov
lea
mov
arpl
ja
inc
mov
bound
mov
push
ret
lods
pop
icebp
dec
cmp
lcall
adc
mov
cmp
mov
je
sti
xchg
cs
lea
fistps
movsl
jg
pop
stos
cmpsb
ja
lock
sub
test
aam
rolb
mov
mov
mov
js
cmp
out
xchg
pop
loopne
addr16
mov
mov
add
mov
test
leave
sub
fidivl
add
jg
clc
and
test
in
imul
adc
scas
stos
cmp
jns
std
dec
sarl
std
sub
fs
fs
xor
jb
fwait
xor
mov
adc
iret
lock
jnp
push
out
mov
fwait
xchg
lods
fnstsw
hlt
sarb
out
adc
jo
repz
lock
adc
pusha
movsl
das
repnz
push
dec
movsl
push
outsb
fs
cmp
push
mov
cmpsl
xor
pop
shl
popa
stos
iret
test
adc
mov
add
pushf
dec
shrb
add
in
jmp
imul
add
lret
lods
and
test
xor
lret
lcall
sahf
stc
fwait
jo
sub
pop
aam
mov
sub
dec
frstor
loopne
xor
inc
add
cwtl
inc
sbb
pop
call
add
fsubrs
adc
xlat
xor
lret
pop
cmc
sbbl
adc
out
outsl
push
and
lcall
dec
mov
inc
enter
shr
leave
pusha
sbb
hlt
mov
adc
rcll
mov
sbb
insb
add
pop
idivb
fnstcw
or
test
adc
ss
pop
push
mov
jnp
rcl
outsb
add
daa
cmc
mov
and
stos
cmpl
enter
repz
push
out
and
outsb
add
stos
les
std
pop
stos
inc
dec
push
aad
push
push
pusha
pushf
jno
mov
les
test
adc
popf
inc
push
xor
inc
bound
xchg
push
inc
fxam
mov
popa
clc
aaa
or
jg
mov
inc
xchg
stos
popf
xor
mov
pop
in
mov
jge
push
fnstenv
pop
add
mov
mov
call
ljmp
in
stos
inc
jo
adcb
js
loopne
jbe
dec
test
addr16
mov
fdivrl
push
sbb
inc
fnstsw
pop
scas
loope
push
in
rolb
xor
xor
jae
and
addb
mov
push
mov
lods
dec
jno
clc
popl
xchg
shrb
sub
lods
pop
out
xchg
jg
bound
rcr
jne
pop
xor
push
pop
stos
mov
cmp
inc
push
out
je
stos
inc
or
jmp
cltd
sbb
and
push
and
adc
mov
pushf
xor
shll
mov
adc
inc
xlat
push
xor
pop
mov
sbb
dec
sarb
add
insb
xchg
jecxz
mov
out
sub
pop
xor
popf
stos
test
les
sub
cmpsl
mov
lock
fwait
xor
adc
pop
loopne
mov
add
sbb
jne
xchg
sub
add
xorb
out
clc
dec
mov
add
shrl
sbb
loopne
loop
fimull
push
stos
ret
mov
fldln2
mov
pusha
repz
out
xorl
cmp
cmc
jne
push
sbb
dec
push
pop
mov
inc
add
test
add
inc
mov
cld
push
sub
push
ds
pop
push
lds
popa
jmp
cmp
cmp
xlat
push
popf
mov
sahf
sub
pop
jecxz
inc
in
lahf
iret
cmp
movsb
sub
jecxz
push
sbb
sub
xchg
inc
pop
or
leave
out
cmp
mov
fdivs
sar
stos
nop
roll
int3
pop
je
sarl
mov
mov
inc
inc
clc
pop
pusha
xchg
stos
nop
pop
fiaddl
dec
xchg
aas
rclb
shlb
inc
mov
shlb
mov
xchg
inc
outsl
xor
sarl
mov
rcll
xor
mov
mov
ficompl
jnp
jecxz
jmp
repnz
mov
or
mov
and
or
je
jae
mov
mov
out
jns
lcall
push
mov
xor
hlt
ja
xchg
fnstsw
sub
lds
cs
sub
mov
data16
enter
and
stos
outsb
mov
or
and
cmp
call
cld
popf
sti
cmc
popa
add
test
shll
xchg
push
xor
ja
cmp
pop
repnz
push
sub
loop
fcompl
cld
mov
pop
out
xor
orl
add
mov
sub
divb
cmp
sbb
dec
cmp
xor
mov
test
pop
sub
stos
push
test
sti
insl
ret
daa
jg
jecxz
scas
rclb
dec
or
pop
mov
outsl
add
les
dec
add
xor
push
out
loopne
out
out
xchg
sub
pop
mov
adc
enter
xchg
movsl
lods
faddl
sahf
into
arpl
mov
xor
xor
aad
rcrl
pop
cmc
push
push
aaa
into
inc
call
insl
add
push
std
pop
xchg
ret
pop
pop
in
inc
fcmovnu
mov
adc
int
push
call
jo
pop
scas
movsl
add
cmpsl
jb
lods
inc
dec
add
imul
push
xchg
or
mov
cwtl
das
jg
jmp
ljmp
pop
icebp
mov
jne
iret
adc
rolb
sbb
mov
fnstenv
push
mov
mov
jge
aad
test
sbb
mov
sahf
sub
rcrb
mov
xlat
xchg
stos
sub
mov
insl
jns
ret
fwait
cmp
dec
or
mov
mov
xchg
rcr
jle
int
mov
xchg
into
mov
mov
loop
addr16
mov
mov
stos
adc
test
mov
stos
jnp
add
je
xor
jns
cmp
sbb
repz
movsl
stos
rcll
add
sub
lret
sub
ds
inc
cld
mov
inc
or
call
inc
cmp
inc
dec
sub
int3
test
mov
fnstcw
out
dec
adc
mov
aad
hlt
sub
push
sub
cmpsb
xor
pmullw
sarl
jmp
std
data16
mov
or
lock
lods
push
xchg
mov
xchg
jb
dec
cmc
mov
xchg
fwait
loop
jno
or
cmpsl
fs
not
mov
pop
xchg
add
mov
enter
inc
jmp
ja
mov
gs
popa
jecxz
push
mov
jae
xchg
sbb
dec
sti
pop
decb
pop
add
in
jo
xchg
in
filds
inc
data16
les
sbb
cmp
sub
dec
jae
adc
pop
stc
jle
imul
dec
dec
and
in
dec
adc
js
inc
or
insl
pop
add
cli
dec
adc
fs
xchg
pop
mov
mov
or
sti
cmpsb
sub
dec
mov
std
pop
mov
insb
lock
add
les
stc
adc
jae
out
scas
xor
or
jp
xlat
mov
lods
mov
ljmp
dec
sti
xchg
jb
out
cli
arpl
in
mov
movsl
insl
repnz
sbb
lret
push
clc
dec
test
jb
cltd
lret
xchg
jg
inc
or
insl
icebp
fadds
hlt
pop
inc
adc
xchg
fnstenv
jb
sysexit
cltd
mov
dec
adc
inc
insb
repnz
dec
adc
in
jb
or
inc
or
pop
lret
xchg
fnsave
imul
or
push
jg
in
mov
inc
push
ret
clc
jae
fstpl
jno
push
inc
adc
imul
dec
or
inc
vmptrst
rcrl
arpl
and
add
daa
aas
mov
ds
clc
push
and
fimuls
int
jnp
cmp
aas
or
loop
loopne
in
stc
sti
out
push
jae
shll
mov
mov
lock
gs
add
cmp
fbld
inc
mov
mov
in
or
aam
sbb
inc
fnstcw
movsl
add
sarb
sti
cld
and
loope,pt
icebp
push
and
add
push
cmp
inc
xlat
sbb
jp
adc
jle
rorb
add
pop
pop
stc
pop
cli
mov
pop
jne
add
pop
repz
faddl
jmp
or
fcmovnbe
sbbb
lds
dec
arpl
inc
xchg
ljmp
inc
jno
push
fwait
out
imul
in
dec
aad
repnz
decb
and
lret
popf
jge
fidivrl
fs
adc
insb
aad
jge
jae
and
mov
ja
push
cmp
jo
rclb
dec
fdivrs
icebp
inc
adc
and
rorb
popf
adcl
push
outsb
fldl
adc
imul
les
adc
popf
add
add
xchg
adc
in
push
dec
fnstcw
jbe
adc
push
and
inc
xchg
cmp
lds
jb
push
pop
push
cmp
in
je
cs
mov
xchg
sti
sti
sub
js
lea
and
mov
stos
loop
dec
dec
mov
fwait
ja
jns
jp
push
int
imul
cmp
faddl
inc
aaa
popf
cmp
int
add
push
clc
je
jle
pop
adc
aas
dec
mov
sbb
push
cli
mov
lods
lds
stos
ret
pusha
mov
and
add
mov
lds
sub
pusha
ljmp
and
add
rorb
test
clc
bound
dec
or
test
icebp
pop
add
sbb
dec
scas
xor
mov
pop
sbb
dec
ret
test
cmp
xor
dec
es
add
hlt
push
and
pushf
in
cmp
xor
sub
dec
pop
mov
xchg
mov
dec
sbb
dec
adc
push
mov
pop
adc
je
mov
lods
inc
sbb
hlt
loope
push
pop
cmc
mov
sbb
test
push
pusha
adc
dec
ja
and
out
mov
repz
fwait
call
test
in
and
pop
repz
outsb
mov
push
cmp
sub
lds
repz
push
cmp
stos
mov
mov
or
scas
les
add
jmp
pop
mov
xor
lds
dec
lods
les
ja
in
pop
popa
test
mov
sbb
lods
mov
mov
pop
cld
hlt
inc
adcb
pop
mov
cmp
ret
and
mov
cmpsl
cltd
mov
xchg
cli
pop
pusha
fistps
movsb
cmpsb
lea
movsl
sbb
inc
sbb
add
sbb
or
fwait
aaa
and
aas
adcb
inc
push
nop
push
inc
push
test
jno
or
mov
ficoml
insl
call
xlat
adc
cwtl
or
push
or
mov
pusha
fiaddl
mov
sub
xor
cmp
aad
xlat
cli
movl
sahf
push
add
negb
and
pop
clc
jmp
icebp
jg
xor
mov
push
outsl
jmp
jb
pop
mov
adc
mov
xchg
adc
arpl
test
cltd
sahf
cmp
jns
and
xchg
aas
fwait
xor
xor
sub
pop
adc
dec
inc
push
aad
into
mov
or
dec
cmp
and
mov
fnstcw
jp
hlt
pop
imull
test
jge
fcmovne
xchg
mov
inc
adc
xor
pop
mov
jae
loopne
aad
push
movsb
xor
rclb
nop
sub
fnstsw
add
jno
jns
iret
mov
lcall
adcl
sahf
lods
inc
rolb
push
movsl
xor
aas
movsl
and
dec
rsm
jo
adc
push
sub
pop
mov
lods
ja
dec
outsb
mulb
jne
jbe
es
cmp
jnp
jne
push
push
gs
sti
or
adc
leave
xchg
outsb
dec
push
stc
xchg
jle
cmpsb
jg
pop
push
sub
aas
rorl
mov
or
jo
sarl
fs
inc
fisubrl
mov
and
mov
outsb
cmp
nop
adc
push
imul
xor
lret
lcall
call
add
imul
xchg
xor
das
cwtl
cmp
mulb
push
sti
pop
and
cmp
sub
in
mov
cmpsl
xor
fdivrs
cltd
imul
js,pn
mov
mov
jmp
mov
outsl
call
daa
mov
pop
loop
mov
sbb
es
sahf
sarb
xchg
call
stc
inc
or
sbb
push
test
in
test
mov
dec
adc
sahf
in
mov
mov
pop
xor
sahf
mov
popa
pop
test
pop
ljmp
jnp
or
adc
jge
iret
inc
mov
fistl
test
gs
jae
cwtl
xor
sbb
sub
mov
mov
and
mulb
add
popf
sbb
mov
data16
adc
push
psrlq
jns
adc
mov
xchg
cmp
push
in
jo
jg
xchg
adc
mov
dec
inc
add
add
into
mov
pushl
add
jge
lret
sbb
imul
sbb
inc
out
dec
cmp
mull
sub
sahf
dec
lods
rolb
sub
cmc
cld
cmp
iret
loope
addr16
adc
and
lcall
jle
jns
sub
mov
dec
iret
rclb
in
xor
in
dec
mov
ja
lcall
sub
mov
and
gs
fwait
in
je
mov
popf
sbbb
adc
int3
imul
lret
mov
imul
push
imul
dec
ljmp
in
scas
pop
mov
jp
push
mov
nop
cld
adc
jbe
pop
xchg
mov
and
movsl
sbb
outsb
sbb
sbb
inc
jae
push
xor
fsubr
mov
pop
clc
cmp
data16
add
cmpsl
cs
mov
sbb
or
ljmp
push
repz
mov
test
data16
lods
sub
mov
adc
jb
adc
dec
dec
or
push
out
push
sbb
hlt
ror
dec
loope
xchg
lock
std
inc
push
cli
repnz
push
push
in
jne
dec
mov
addr16
adc
mov
inc
or
pop
mov
outsb
std
je
xchg
pop
ror
jne
push
sbb
addb
pop
int3
xchg
sbb
xchg
rorl
aaa
add
dec
pop
cltd
inc
inc
cltd
js
sub
cmp
mov
outsb
inc
jo
fnsave
sbb
mov
sub
push
push
mov
mov
stos
ret
xor
rorb
fwait
and
push
lds
ret
hlt
sbb
mov
out
jge
stc
push
cld
adc
pop
aas
inc
pop
fsubrl
or
imul
pop
clc
fistps
or
xor
jno
inc
es
je
xchg
jmp
rcll
jmp
lret
inc
hlt
and
js
in
xorl
cltd
push
addr16
dec
xorb
fwait
mov
cmc
ds
gs
aam
mov
aas
or
bound
push
lods
inc
andb
adc
cmp
sub
fwait
sbb
dec
stos
xor
cmp
mull
out
dec
sub
mov
and
lret
pop
add
xor
pop
loop
or
bswap
or
lcall
gs
sub
xlat
rcll
cltd
or
adcb
outsl
call
fs
and
cwtl
and
inc
sbb
lcall
xor
movsb
nop
add
inc
jns
sahf
aaa
mov
movsl
mov
or
pop
sub
sbb
cwtl
fnstenv
xchg
lret
leave
int3
xchg
and
xor
pop
gs
pop
psrlq
mov
aas
xchg
popl
mov
lret
mov
pop
loopne
dec
adc
or
mov
sahf
imulb
mov
loope
cmpsl
jno
push
cld
and
pop
add
daa
mov
pop
adc
nop
jb
push
sbb
inc
push
mov
mov
push
add
jne
pop
cli
pop
insl
call
dec
xchg
icebp
gs
fbstp
jle
jge
dec
mov
gs
cwtl
ds
jnp
stos
hlt
xchg
es
in
call
gs
mov
and
jecxz
negb
hlt
in
call
stc
daa
scas
mov
scas
pop
add
cmp
adc
hlt
lods
xor
cmpsl
sarl
cmc
sbb
sbb
and
in
jb
dec
testl
mov
mov
mov
fucomip
outsl
mov
test
jl
cmp
and
faddl
jne
add
dec
and
or
sbb
sti
pop
sarl
in
clc
dec
adc
test
jb
or
js
outsl
jb
or
jp
sbb
inc
nop
inc
jb
and
jp
push
jg
sbb
out
test
notl
fidivl
movsl
sub
dec
inc
xor
test
aaa
ret
jecxz
mov
jns
daa
mov
sub
pop
add
cmp
fs
daa
test
cwtl
cli
dec
mov
out
jo
cmp
clc
shrl
psrad
das
pop
inc
cmp
aas
rol
mov
cmpsl
adcl
jg
fsts
das
dec
or
dec
add
arpl
repnz
loopne
jns
adc
mov
and
cmp
jg
jb
mov
push
in
xor
arpl
je
imul
mov
xchg
ds
mov
test
or
rcll
xchg
std
xchg
es
jae
sub
mov
add
jns
leave
push
cli
popa
ljmp
hlt
inc
lds
dec
dec
fldl
clc
mov
loope
xor
inc
adc
lcall
jne
sub
les
jge
or
push
imul
test
lods
cs
jg
movsl
test
mov
into
mov
iret
mulb
add
pop
aam
bound
jp
fcoml
flds
movsb
div
push
fnstenv
mov
cmc
bound
xor
daa
mov
leave
out
into
mov
adc
inc
sbb
daa
xchg
push
mov
xchg
add
loope
roll
cltd
cmp
movsl
and
mov
pop
jbe
enter
movsl
jbe
pop
fildll
add
add
xor
fs
adc
icebp
sbb
xchg
in
lcall
mov
test
int3
ljmpw
mov
xchg
cmp
movsb
adc
pop
aaa
inc
push
xlat
mov
mov
and
imul
mov
pop
gs
cmp
shrl
xchg
movsl
jg
push
mov
xchg
aaa
loop
xor
mov
ret
mov
in
ljmp
adc
xor
push
sub
jns
mov
scas
xor
popa
movsb
sub
jecxz
fs
in
inc
jb
inc
mov
mov
xchg
fstps
orl
shlb
flds
jne
das
mov
fs
add
xchg
adc
xchg
hlt
pop
jnp
cmp
inc
or
cmpsb
cmc
pop
push
arpl
push
add
push
and
cmp
mov
jbe
gs
in
xlat
pop
jmp
pop
add
jl
sbb
divl
out
gs
add
ljmp
lock
int
arpl
adcb
mov
xchg
push
es
pextrw
and
jecxz
in
jne
rep
xor
inc
int
insl
std
out
jae
adcb
arpl
mov
mov
push
cmp
in
mov
sarl
lret
xchg
arpl
push
std
js
ds
ljmp
outsl
test
lds
pop
push
repnz
call
sti
gs
xor
rorb
xchg
pop
lahf
jnp
sbb
dec
add
push
add
add
and
sbb
jo
scas
dec
or
add
popf
shl
bswap
pop
or
outsb
inc
dec
dec
or
jge
lahf
call
fisttpll
aam
faddl
loopne
inc
adc
or
rorl
mov
movsl
and
outsl
inc
pusha
repz
jne
push
cmc
dec
jecxz
sub
hlt
pusha
jecxz
jp
das
add
aaa
std
push
out
jge
lods
sub
xor
inc
cmc
popa
jbe
fidivs
enter
xor
scas
ss
xor
pop
jg
sahf
aas
adc
inc
sarl
insb
repnz
pop
fs
push
push
jnp
test
mov
out
xchg
add
aam
push
js
sbb
ret
dec
out
xchg
sbb
mov
iret
jecxz
add
add
aam
daa
scas
aam
inc
or
inc
or
sub
jp
cmp
into
je
cmp
insb
and
rcl
jne
inc
sub
aaa
iret
mov
imul
arpl
xchg
pop
loope
mov
inc
fnstcw
cld
xchg
int3
pop
loopne
xchg
sbb
stos
xor
mov
in
lea
imul
loopne
sub
xchg
inc
or
inc
nop
inc
outsb
in
loopne
inc
jne
cltd
aas
lcall
xchg
loopne
mov
mov
rolb
lcall
shrl
lcall
jmp
sub
js
or
add
daa
vfrczss
test
ffree
xchg
int3
fwait
jmp
cmc
adc
icebp
sub
jnp
push
cmp
xor
cmp
loope
mov
cmp
jb
push
jns
sbb
cmp
loopne
xchg
arpl
test
insl
or
ja
jg
sbb
ds
sub
xchg
popf
aas
push
cmpsb
lret
inc
mov
mov
or
jl
cmpsl
repz
or
xchg
cmp
pop
scas
xor
fldl
adc
into
nop
mov
mov
inc
adc
xlat
pop
les
mov
aas
scas
std
jbe
jle
push
add
push
sbb
dec
mov
mov
fdivrl
arpl
lds
repnz
flds
pop
dec
adc
add
mov
mov
mov
jl
rorl
int3
mov
add
pop
test
jbe
cmp
sub
mov
sbb
lds
sub
cmp
mov
jle
in
cli
insb
nop
cmp
push
shlb
xchg
scas
push
jno
pop
mov
es
fnstenv
add
data16
idiv
cmp
pop
lahf
mov
cmpsl
stos
mov
or
movsl
rolb
xchg
ret
icebp
rolb
cwtl
add
in
pop
push
popa
ljmp
mov
stc
out
je
adc
fs
jge
cmp
rorb
mov
lret
push
not
add
mov
mov
insb
xchg
sub
aam
iret
div
lods
xor
loope
fisubs
mov
lret
jge
flds
pop
dec
inc
or
sbb
xchg
aaa
stc
push
jp
mov
and
dec
int
add
cmp
aaa
sbb
cmp
lea
mov
cmp
scas
sub
fimull
add
movsb
jl
mov
imul
and
cmp
push
js
sbb
les
sub
mov
lahf
and
mov
mov
shll
repz
xchg
sub
cltd
pop
add
inc
mov
cli
adc
movsl
ss
mov
loopne
into
mov
test
push
cmp
daa
inc
adc
loope
mov
push
movsl
xor
inc
xchg
lock
pusha
mov
cmpsl
int
push
mov
cwtl
das
sar
subl
inc
or
ret
ret
iret
xchg
adc
push
cld
hlt
inc
jl
call
pop
add
ss
leave
sub
cli
add
enter
pop
fildl
ret
push
lea
xchg
sbb
cld
test
jne
in
daa
test
aas
xchg
cmp
movsb
sub
scas
dec
push
clc
jae
stos
mov
adc
sarl
add
cmp
pop
push
add
lahf
test
sahf
dec
ret
cwtl
cmp
pop
or
sub
sbbb
or
cltd
cmp
and
outsl
sub
into
jge
mov
mov
lret
popa
out
sbb
ja
pusha
test
xlat
jge
mov
fildl
pop
imul
mov
pop
mov
dec
int3
nop
cmp
lahf
scas
xor
mov
mov
fldl
or
pop
add
pop
repz
add
add
bndldx
jo
je
dec
xchg
jl
ja
sbb
mov
mov
dec
jae
shlb
mov
push
jecxz
mov
xchg
jbe
stos
ss
pushaw
jmp
xchg
mov
or
neg
pusha
cmp
sarb
sub
xor
dec
or
mov
movsl
addr16
movsb
xor
jb
lock
testl
dec
or
faddl
dec
push
add
ljmp
adc
insl
dec
push
mov
icebp
pushf
pushf
inc
sbb
push
or
ret
inc
mov
nop
sbb
sahf
sub
jp
cmp
push
shrb
mov
rolb
adc
mov
neg
jno
pop
arpl
pop
divl
lods
add
hlt
xorb
mov
ret
out
adc
inc
mov
ja
adc
sbbl
dec
mov
jmp
push
cld
cmp
sub
jg
cmc
push
dec
imul
gs
lahf
inc
add
push
orb
jmp
mov
add
je
add
mov
adc
adc
ds
out
cmc
pop
jne
or
lcall
and
xchg
inc
xlat
jl
sub
les
lea
and
sbb
add
xor
inc
adcb
adc
rolb
mov
sub
mov
dec
mov
mov
adc
leave
imul
andb
xor
iret
xlat
sub
mov
and
add
mov
jne
and
xchg
in
xchg
cmp
cmc
mov
popa
cld
adc
jb
inc
or
fs
xchg
mov
jl
lds
test
xchg
mov
xor
dec
orl
jno
int3
aas
pop
add
into
adc
pop
pop
jno
cmp
fimull
push
xchg
and
or
pop
ds
push
orl
adc
dec
mov
aas
pushf
dec
adc
xor
lds
dec
push
add
dec
push
out
and
rorl
imul
xchg
lcall
and
scas
xor
cmp
jae
sti
inc
or
or
jp
pop
xchg
cmp
pop
fwait
inc
adc
sbbl
ret
jbe
repz
or
lds
push
pop
divl
lods
inc
adc
mov
imul
cmpsl
inc
fidivrl
mov
mov
in
sbb
push
int
dec
addr16
or
sub
movb
sti
sti
xlat
xor
arpl
mov
fs
jg
cmpsl
imul
push
push
cld
rclb
xor
shlb
and
repz
cld
mov
mov
xchg
lods
sbbl
fs
cmp
mov
test
or
stos
sets
mov
fldl
pop
add
mul
js
iret
push
push
cld
loop
adc
mov
push
or
inc
or
ss
jns
sub
sarb
ds
xchg
loope
ja
pop
testb
push
fidivrs
mov
mov
jg
gs
or
or
xchg
ret
jmp
add
sub
loopne
shrb
repnz
lock
cmp
mov
cmpsl
je
int3
loop
jno
adc
xchg
in
xchg
cld
cmpsl
das
add
clc
pop
in
pusha
rolb
cmp
clc
popl
test
sbb
add
rolb
mov
dec
add
adc
mov
mov
push
mov
add
cmp
pop
lds
mov
or
mov
mov
ret
test
mov
pop
ret
out
dec
adc
lret
push
stc
mov
test
ljmp
enter
aam
sbb
push
jg
mov
jb
mov
pusha
inc
and
in
inc
adc
mov
out
push
mov
jecxz
mov
mov
lods
adc
subl
in
jns
pusha
ljmp
or
fstps
xchg
cmp
sahf
dec
push
stc
jne
sbb
sub
fsts
or
mov
sarl
mov
flds
les
lret
adc
scas
stc
gs
adc
test
test
leave
mov
mov
movsb
xor
pusha
cmp
gs
lea
repnz
jo
xchg
inc
outsl
insl
test
and
popl
fildl
xchg
fs
or
int3
push
add
sbb
pusha
movsl
push
sub
stos
ret
mov
cmp
mov
imul
pop
sub
leave
mov
rcll
sbb
inc
or
lods
pop
call
cmovns
xchg
cwtl
pop
aad
pusha
push
mov
into
xchg
test
jbe
ret
mov
xchg
xor
xlat
add
aad
out
outsl
out
fnstsw
jecxz
pop
or
out
jmp
and
xchg
inc
push
cmp
mov
lea
xor
shl
jb
aad
iret
xchg
mov
mull
mov
inc
adc
fidivrs
fmul
add
decl
sbb
sub
xor
inc
xchg
jl
enter
cltd
jmp
mov
or
xchg
outsl
js
push
pop
jle
in
mov
pop
mov
mov
fstpl
mov
and
add
xor
mov
js
push
orl
in
outsl
aaa
push
pop
add
cmp
insl
insb
or
stos
dec
jnp
jae
lcall
imul
gs
pusha
daa
jne
mov
xor
xchg
jecxz
xchg
sub
dec
xchg
adc
test
mov
push
clc
mov
dec
bswap
sahf
shrb
push
mov
outsl
mov
mov
aam
inc
push
sbb
jnp
push
faddl
push
subb
xorb
nop
leave
mov
stc
bound
mov
scas
loopne
xchg
mov
add
jmp
jg
clc
negl
and
pop
mov
xchg
icebp
movsb
cmp
jmp
push
add
xor
and
imul
imul
jle
mov
out
sub
std
out
mov
jge
xorl
movsl
scas
mov
mov
pop
cli
addr16
adc
lods
or
cmp
in
je
sub
adc
popa
call
out
mov
clc
mov
xchg
aad
rclb
fadds
hlt
cs
in
in
push
out
enter
xacquire
and
sarb
cmp
das
paddsb
fldl
rcll
sti
pusha
cmp
les
lock
push
or
les
mov
rorb
ljmpw
and
loopne
xlat
std
bound
cld
popa
sbb
notl
mov
mov
cwtl
sub
adc
scas
xchg
aas
test
push
rcl
mov
jne
or
cli
movsl
cmp
addr16
dec
in
adc
add
ret
mov
sub
mov
fwait
inc
iret
mov
pop
mov
sbb
push
decb
dec
adc
pushf
call
pop
cwtl
out
out
rorl
cmp
sarl
sub
rorb
aas
lcall
or
sbb
and
pop
scas
jle
imul
mov
faddl
nop
out
outsl
push
push
stc
pop
jle
mov
mov
add
push
inc
or
mov
into
xchg
lcall
push
and
sarb
mov
and
out
mov
stos
ja
mov
cmp
cmp
es
popa
or
loop
pusha
push
imul
test
mov
mov
test
mov
loope
jecxz
push
jl
bswap
jmp
test
and
js
fwait
inc
lods
daa
das
leave
repz
xor
in
xchg
sbb
sub
xlat
pop
aaa
clc
pop
enter
bound
js
or
xchg
inc
jmp
cmc
xor
adc
adc
shll
cmpsl
mov
pushf
sub
test
inc
iret
popa
adc
pop
adc
or
aam
push
fwait
cmp
cmpsb
xchg
inc
jg
popa
testb
jge
hlt
enter
in
dec
or
pop
hlt
pop
test
pop
iret
cmp
cmp
sub
test
pop
aaa
lahf
repnz
dec
js
and
enter
pop
fidivrl
adc
daa
sbb
sahf
sub
cmpsb
cmp
push
mov
mov
out
shlb
lock
loop
jecxz
sarl
cmc
cmp
pop
xor
mov
mov
aam
test
lahf
cmp
fs
add
mov
and
lea
rclb
mov
inc
fbstp
stc
out
arpl
mov
mov
mov
xchg
shrl
enter
out
nop
flds
sub
lea
sarl
fisubrl
dec
jns
mov
add
inc
or
xor
mov
push
sub
rorl
cmp
mov
ficoml
ret
pop
gs
adc
out
imul
repnz
orl
lods
sub
aam
cmp
xor
cmp
add
dec
mov
pop
mov
stos
adc
push
sub
jge
js
outsb
jle
fadds
cmpsl
gs
fsubr
js
outsl
stos
or
pop
scas
mov
js
loope,pt
pop
leave
sub
mov
stos
iret
jne
loopne
xor
sbb
pmulhuw
repnz
mov
into
mov
mov
clc
pop
fdivs
dec
or
or
add
scas
adc
mov
cmp
pop
jle
test
ds
mov
pop
dec
loop
push
leave
cltd
add
inc
sbb
push
jge
mov
cmpsb
pop
sbb
mov
sub
xor
cmpsl
dec
or
leave
iret
xchg
or
pop
inc
cs
movsl
pop
bound
pop
xchg
jg
xchg
dec
orl
push
sub
cmp
xchg
jns
mov
jle
fwait
cmp
push
sub
mov
or
mov
adc
andl
pop
mov
mov
cmpsb
xor
inc
jae
mov
arpl
pop
lahf
mov
sub
scas
mov
in
jnp
or
lea
push
je
dec
in
dec
jmp
aaa
mov
mov
pop
cld
out
lods
sub
xchg
jge
aas
repz
clc
xor
xchg
xor
fwait
mov
pusha
cmc
mov
insb
jmp
sub
pusha
imull
cmp
mov
push
std
clc
adc
jnp
pop
add
test
lea
pop
mov
loope
sbb
leave
sbb
ret
loopne
lods
push
jne
rorl
pusha
dec
adc
mov
pop
add
mov
test
iret
loopne
pop
sti
cmpsb
sub
mov
mulb
sub
push
cmpb
das
dec
loopne
aad
xor
andb
sub
sbb
jl
outsb
scas
daa
mov
mov
jnp
pop
lods
and
stos
push
into
fbstp
jne
enter
xchg
push
dec
out
je
mov
sbb
dec
cmp
imull
sahf
sbb
dec
mov
jbe
pushf
adc
pusha
inc
mov
out
xchg
adc
pushf
jmp
or
cmp
inc
scas
pusha
neg
pop
sub
mov
jg
xor
popf
xor
ljmp
xor
xchg
sub
movsb
cmp
dec
testl
rorb
ja
repz
and
xchg
roll
call
and
cmp
jne
lea
ds
inc
jo
jbe
sbb
xchg
sub
out
pop
nop
mov
ret
pushf
imul
and
push
mov
mov
fsubrl
rorl
dec
fistps
fwait
xor
andl
pop
roll
scas
mov
mov
jp
push
lods
and
stos
push
int
jne
je
enter
xchg
push
dec
out
jae
mov
sbb
dec
lds
shl
imul
mov
jbe
fwait
adc
pusha
inc
mov
out
xchg
btr
mov
pushf
call
or
cmp
inc
pusha
neg
pop
sub
mov
jle
xor
pushf
xor
mov
sbb
sub
testb
mov
loopne
jge
xor
and
push
out
repnz
and
cmp
jne
mov
sbb
pop
out
enter
outsl
jmp
enter
xchg
sub
out
push
nop
mov
ret
fwait
push
mov
mov
push
mov
mov
fsubrl
rorl
dec
fistps
lcall
daa
mov
sbb
mov
mov
jp
push
lods
and
test
pushl
movsb
and
xchg
push
lds
divb
mov
pop
insl
add
lds
shl
push
and
test
or
inc
mov
out
xchg
btr
mov
fwait
out
shrl
or
mov
out
inc
fmuls
lods
pop
neg
pop
sub
mov
jge
xor
fwait
xor
movsl
mov
sbb
sub
cmc
mov
ret
lahf
adc
jge
xor
and
dec
out
repnz
and
cmp
jne
mov
sbb
test
or
ret
sub
in
adc
add
adc
ss
test
aas
or
or
mov
fsubrl
rorl
dec
fistps
cltd
xor
es
pop
roll
lods
mov
mov
jns
push
stos
and
test
jb
mov
les
cmc
jb
mov
push
insl
add
les
shl
imul
inc
out
push
enter
xchg
sub
out
xchg
push
mov
inc
mov
fwait
out
shrl
pop
and
out
inc
fmuls
stos
pop
neg
pop
sub
mov
jge
das
lods
dec
loope
push
fwait
xor
movsb
mov
sbb
sub
mov
pop
sub
loopne
jl
xor
and
dec
out
icebp
sbb
and
cmp
je
mov
sbb
test
or
sarl
sub
in
adc
mov
shll
addr16
and
fidivrl
or
pop
hlt
pop
fldt
rorl
adc
rcrb
std
mov
mov
push
rolb
stos
and
repz
js
push
stos
pop
adc
std
jno
mov
ret
dec
in
jno
mov
adc
cmp
hlt
push
pop
out
inc
mov
jbe
cltd
push
enter
xchg
sub
popa
out
xchg
or
add
in
shrl
push
and
in
inc
fmuls
stos
pop
neg
pop
sub
mov
jge
cs
dec
loope
dec
fwait
xor
mov
xchg
sub
cmc
mov
ret
popf
adc
jnp
xor
and
dec
out
lock
and
shll
mov
sbb
test
or
sarb
sub
jl
mov
lcall
and
data16
or
pop
hlt
pop
fisubrl
rorl
jnp
mov
dec
fistps
cltd
xor
jg
std
mov
mov
push
roll
stos
and
cmp
repz
ja
push
test
lret
cld
jo
mov
ret
repz
mov
adc
add
ret
repz
cltd
adc
out
inc
mov
jbe
cwtl
or
xchg
sub
pusha
out
xchg
or
dec
ds
fwait
in
shrl
add
out
xchg
push
inc
fmuls
test
sub
mov
jge
sub
dec
fwait
xor
mov
xchg
daa
mov
cmc
mov
ret
pushf
adc
jp
xor
pop
pushf
xchg
into
inc
dec
out
out
sbb
and
cmp
jb
mov
sbb
inc
imul
or
mov
loopne
jl
lea
lcall
and
fdivrs
or
pop
hlt
pop
fldcw
rorl
jnp
scas
sub
pop
rcrb
std
scas
and
sbb
ja
insb
test
lret
cld
jbe
push
test
adc
sti
outsl
xor
mov
rorl
outsl
sbb
inc
sarl
repnz
cwtl
adc
inc
mov
jbe
xchg
or
pop
ds
out
xchg
or
fwait
jecxz
shrl
add
mov
jecxz
inc
fadds
test
neg
push
sub
xchg
jge
sub
dec
loope
dec
fwait
xor
push
push
rorl
sbb
mov
cmc
mov
ret
fwait
adc
jns
xor
push
fwait
xchg
int
dec
out
out
sbb
pop
xchg
insl
add
inc
cmp
jno
mov
pop
xchg
pop
out
les
test
or
mov
jl
mov
lcall
and
xlat
aas
or
pop
hlt
pop
fsubrs
rorl
jnp
scas
sub
pop
iret
cltd
xor
jge
std
scas
and
sbb
jbe
insb
test
mov
mov
jne
push
cmpsl
sbb
test
cli
outsb
xor
lahf
sbb
xchg
dec
rorb
outsb
sbb
inc
sarb
icebp
mov
xchg
adc
inc
mov
jbe
xchg
or
pop
cmp
pop
out
nop
or
fwait
loop
shrl
add
mov
loop
inc
fadds
cmpsl
pop
neg
push
sub
xchg
jge
sub
fwait
xor
push
push
rorb
jle
xlat
outsb
and
inc
cmc
mov
ret
lcall
js
xor
sbb
ds
out
in
sbb
push
xchg
insl
add
aas
cmp
jo
mov
push
xchg
pop
out
ret
aaa
test
or
mov
fsubp
jl
mov
lcall
and
arpl
aas
pop
test
mov
pop
hlt
pop
xlat
sub
or
adc
into
cltd
xor
jl
std
lods
and
sbb
jne
insb
cmpsl
and
mov
je
push
cmpsb
sbb
test
stc
insl
xor
sahf
sbb
xchg
dec
mov
sbb
inc
mov
mov
xchg
adc
inc
mov
inc
jmp
or
pop
cmp
xchg
sub
pop
out
cmp
shrl
add
mov
loope
inc
fadds
cmpsb
pop
not
push
sub
test
jge
sub
fwait
xor
push
push
rorl
sbb
and
movsb
cmp
inc
cmc
mov
ret
cltd
adc
ja
xor
sbb
xchg
lret
cmp
sbb
sbb
ds
outsl
jecxz
and
ss
or
mov
fucom
jl
mov
lcall
and
aad
push
test
mov
pop
hlt
pop
sub
pop
jp
adc
cltd
xor
jp
std
stos
and
sbb
jae
insl
movsl
pop
mov
mov
jb
pop
movsb
sbb
stos
dec
imull
enter
xchg
dec
mov
sbb
pushf
movd
out
bound
inc
mov
inc
out
ja
xchg
or
pusha
cmp
jle
pop
mov
cmp
shrb
add
xor
inc
flds
movsb
pusha
not
push
sub
adc
dec
pushf
xor
imul
iret
dec
xchg
jl
fsubrs
sahf
movsl
cmp
inc
testb
xchg
adc
enter
jbe
xor
sbb
push
out
jmp
mov
mov
sarb
and
nop
pop
lock
data16
push
adc
enter
xchg
sub
jge
mov
fwait
pop
push
mov
out
xchg
inc
xlat
add
or
cmc
push
aad
ret
jl
stos
daa
dec
loopne
lret
lcall
push
mov
sbb
jno
outsb
mov
cmc
mov
jno
pop
mov
loopne
imulb
leave
lcall
out
push
mov
or
cmp
in
pusha
lea
push
pop
icebp
aas
mov
inc
in
js
xchg
push
lret
mov
sub
mov
mov
cmp
push
and
das
lods
icebp
mov
push
inc
flds
mov
lds
movsl
dec
jecxz
inc
pushf
xor
push
sub
mov
jl
fsubrs
sahf
cmpsb
cmp
jae
les
xchg
adc
movb
out
leave
sbb
push
out
ljmp
mov
fisttps
shlb
inc
fs
movlps
xchg
sub
or
add
pop
fcmovnbe
imul
roll
add
pop
cmc
push
aam
ret
add
es
loope
leave
lcall
sbb
push
dec
lret
cld
outsl
xlat
outsb
mov
ret
hlt
jo
pop
mov
ret
loope
cmc
addr16
cwtl
push
add
ljmp
push
cmp
pop
lea
or
repnz
pop
jns
nop
add
popa
ss
jecxz,pn
call
dec
ss
push
popf
fistl
imul
repnz
dec
inc
fnstcw
adc
rclb
lds
mov
pushf
xor
push
daa
lcall
jp
fsubrs
pushf
cmpsb
cmp
jb
les
xchg
adc
lds
jns
out
leave
pop
xchg
add
imul
outsb
add
imul
and
lea
mov
fistpll
adc
xchg
sub
or
add
pop
imul
sub
xchg
inc
xlat
add
pop
cmc
push
shrb
add
adc
enter
jbe
jmp
enter
outsb
xlat
outsb
mov
shl
rep
ret
pop
mov
shl
repz
xchg
adc
xchg
inc
mov
push
mov
or
cmp
cmp
jmp
or
cmp
jns
mov
lret
scas
xchg
loope,pn
call
dec
xor
push
popf
ficoml
imul
repnz
dec
inc
fnstcw
adc
rorl
lds
jle
and
dec
jecxz
inc
pushf
xor
push
and
inc
mov
js
fsubrs
lcall
jno
les
xchg
adc
les
jns
in
leave
push
xchg
add
push
mov
mov
fisttpll
mov
fnstsw
je
xchg
sub
or
fwait
pop
xlat
shrb
jge
mov
pop
iret
inc
xlat
add
movsl
scas
and
push
shrb
add
cmpsb
and
push
lcall
sbb
sbb
lahf
sbb
mov
insb
ret
pop
sahf
adc
inc
mov
xor
xchg
adc
xchg
inc
mov
out
fs
mov
or
cmp
lea
or
cmp
jns
mov
lret
lods
xchg
fists
jg
add
popf
fsts
imul
repnz
dec
inc
fnstcw
adc
rorb
jge
jle
and
pushf
xor
push
and
mov
jbe
fsubrs
cwtl
cmpsb
cmp
jo
les
xchg
adc
ret
loop,pt
jo
xor
adc
ss
out
in
mov
mov
mov
fmull
mov
fstpt
or
cs
sub
or
add
pop
aad
imul
sub
xchg
inc
xlat
jnp
movsl
lods
and
push
int
ret
jb
adc
pop
dec
loop
lds
add
les
outsl
popf
pop
cmpsb
cmp
lock
pop
pushf
adc
jns
arpl
lret
add
out
pop
mov
pop
jo
cmp
and
aaa
lods
lods
inc
fistps
adc
stos
cwtl
das
fstl
addb
pop
sahf
fcoms
imul
repnz
dec
inc
fidivrl
cmpsl
sub
lds
jg
and
popf
xor
out
push
and
mov
je
fnstenv
xchg
cmpsb
cmp
outsl
jmp
adc
jns
jecxz
lret
add
data16
mov
mov
mov
fisttpl
icebp
mov
fnstcw
or
xchg
sub
pop
xorb
rcl
imul
int
fdivr
jns
movsl
stos
pop
pusha
notl
sub
cld
jno
adc
dec
les
mov
ret
hlt
push
jo
adc
testl
inc
mov
xor
xchg
push
add
in
pop
mov
push
jno
cmp
mov
repz
push
jp
mov
lret
bound
stos
cwtl
das
fcoml
addb
sahf
xlat
push
aam
cmp
mov
dec
inc
fidivrl
adc
into
dec
lds
jg
and
xor
out
push
and
mov
jae
fnstenv
xchg
cmpsb
cmp
outsb
call
adc
jns
loop
lret
add
gs
mov
xchg
mov
fimull
icebp
mov
stos
inc
pop
fdivrs
or
xchg
sub
push
jg
dec
mov
add
imul
lock
inc
fdivr
js
movsl
test
lret
sti
jo
adc
dec
ret
pushf
xor
outsb
imul
dec
roll
fwait
adc
cmp
out
les
movhps
in
popa
xor
xchg
or
push
jmp
nop
add
cmp
mov
pop
repz
lods
inc
fstl
adc
test
jmp
dec
movsl
pop
sahf
dec
aam
xor
repnz
dec
inc
fidivrl
adc
int
lds
jg
and
popf
xor
in
push
pop
xchg
mov
pop
jb
fnstenv
xchg
cmpsb
cmp
insl
out
pop
sbb
loop
insb
loope
lret
add
fs
mov
xchg
mov
icebp
mov
stos
inc
pop
xlat
js
or
xchg
sub
add
es
imul
and
xchg
inc
fdivr
ja
movsl
test
pusha
testl
jle
mov
ret
hlt
insl
imul
inc
rolb
lcall
mov
les
push
push
lods
aas
mov
xor
xchg
or
cwtl
cmp
pop
pop
mov
add
or
mov
aam
push
mov
pop
repz
jp
xchg
lret
bound
test
das
ficoml
addb
pop
sahf
aad
aam
xor
mov
aam
inc
fidivrl
adc
int3
inc
lds
jg
pop
lcall
jb
push
push
xchg
mov
pop
jno
fnstenv
xchg
cmpsb
cmp
insb
out
pop
sbb
loop
imul
lret
add
arpl
push
mov
test
mov
cmp
fmuls
icebp
mov
stos
inc
pop
js
or
pusha
mov
xchg
sub
add
mov
scas
and
shrb
js
mov
push
lret
sti
jbe
movsl
cmpsl
sbb
testl
jle
mov
rcrl
adc
push
inc
mov
fnstenv
adc
mov
les
or
loop
ljmp
cwtl
cmp
push
jmp
mov
jno
xor
push
mov
pop
repz
jp
test
lret
bound
cmpsl
cwtl
das
addb
pop
sahf
aam
aam
jg
and
mov
inc
inc
fidivrl
adc
lret
inc
lds
jg
push
cltd
dec
jecxz
aas
popf
xor
jmp
add
mov
jo
fnstenv
xchg
cmpsb
cmp
imul
pop
pop
lea
jns
fbstp
lret
add
ficomps
mov
test
mov
cmp
popa
xlat
lea
sbbl
sub
sysret
jle
pusha
mov
xchg
sub
add
scas
and
pushf
push
iret
shrb
ja
mov
push
leave
inc
fdivr
jne
movsl
cmpsb
sbb
dec
sub
clc
insl
jle
lahf
sbb
dec
rcrb
adc
push
lock
adc
mov
les
or
lods
cmp
inc
pop
or
clc
leave
and
int
push
push
fstp
sti
xor
rol
pop
repnz
in
mov
imul
push
mov
testl
jns
div
stc
icebp
shrd
push
mov
push
insb
enter
mov
jmp
or
xor
jmp
ds
fs
sub
sbb
pop
movsb
cwtl
popa
popf
ficompl
cmpsl
adcl
adcl
jge
xor
stos
neg
dec
test
subl
cmp
in
mov
sub
dec
imul
fmuls
outsl
movsb
test
cmp
pop
mov
sbb
cmp
add
jnp
lcall
xchg
dec
lret
or
xor
jle
in
int3
mull
ss
add
leave
ret
xor
push
and
mov
mov
roll
cmp
mov
fiadds
loopne
jns
jae
gs
sbb
fildll
loopne
sub
fisttpll
icebp
ds
add
into
xor
mov
mov
dec
mov
adc
or
fdiv
inc
mov
cwtl
cmpsb
ljmp
ljmp
add
es
test
fstpt
xor
mov
es
std
in
div
faddl
lcall
out
imul
mov
int
or
adc
sti
pop
mov
scas
push
jns
mov
push
xor
cmpsl
lods
ljmp
sub
js
test
scas
and
rcrl
sbb
popa
jns
mov
sbb
add
mov
in
mov
cli
jnp
cmp
dec
repnz
andb
fsubs
aas
sbb
pop
push
fiadds
mov
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
jno
xchg
roll
adc
ss
pop
mov
out
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
and
add
and
adc
jp
ficoms
fnstsw
inc
imulb
mov
inc
and
mov
ret
rol
int3
jl
je
sub
xchg
sub
add
pop
fnstcw
jmp
jb
pusha
outsl
mov
and
clc
scas
insl
dec
xchg
xor
sub
js
aas
or
aam
xchg
adc
and
jmp
aad
cmp
addr16
fdivrs
and
mov
mov
les
repz
andb
ja
mov
mov
aad
or
sbb
clc
in
push
lods
imul
test
xchg
and
jno
sbb
xor
mov
dec
nop
loopne
and
pop
push
leave
fcmovnu
or
addr16
pusha
mov
ds
mov
rcr
es
jae
mov
pop
