cwtl
lret
lods
lret
ret
add
lret
lock
cld
lret
adc
add
push
lret
add
cmp
add
push
lret
add
outsb
lret
add
or
add
lret
add
mov
lret
add
loop
add
lock
add
push
int3
add
and
add
inc
int3
add
dec
int3
add
pop
int3
add
push
int3
add
or
add
add
stos
int3
add
mov
int3
add
loop
add
hlt
int3
add
or
add
and
add
adc
add
roll
add
roll
add
roll
add
roll
add
roll
add
add
rolw
add
add
dec
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
rolb
add
rolb
add
rolb
add
rolb
add
add
mov
add
pushf
rolb
add
rolb
add
add
xor
add
push
rolb
add
rolb
add
rolb
add
iret
add
fcmove
add
lret
add
add
add
int
add
int
add
add
add
add
js
add
xchg
add
movsb
int
add
int
add
int
add
int
add
add
ss
add
and
add
adc
add
cld
into
add
ljmp
add
into
add
xchg
into
add
xchg
add
jb
add
into
add
inc
into
add
sub
add
sbb
add
add
add
clc
int
add
add
add
add
add
mov
add
sahf
iret
add
pop
add
xorb
xorb
add
add
add
add
xor
add
add
add
push
push
mov
add
add
add
add
push
add
add
add
js
add
add
add
cmp
push
mov
shlb
loop
dec
mov
dec
stc
sti
xor
adc
xor
and
and
and
and
and
gs
jnp
mov
imul
call
call
fs
shl
mov
or
pop
jbe
inc
repz
gs
pusha
mov
xchg
or
sti
dec
push
mov
mov
jle
sbb
pop
inc
and
mov
outsb
scas
pop
xchg
or
dec
pop
sbb
add
call
call
into
push
ficoml
xchg
inc
out
or
filds
lea
and
and
and
and
icebp
das
sbb
hlt
enter
and
and
and
and
and
movsl
into
fucomi
in
cmp
push
xor
inc
xchg
mov
sub
dec
in
in
call
call
cmpsb
push
jne
jge
jl
add
mov
xchg
xor
ljmp
inc
inc
cmp
dec
scas
and
and
and
and
and
and
and
cmpsb
scas
cmp
call
call
call
ret
shll
or
pop
inc
push
mov
and
push
push
push
jo
mov
jo
mov
mov
movsl
out
cmp
popa
push
mov
lds
adc
das
or
clc
cmpsb
lods
jnp
sbb
inc
add
test
pop
sbb
addr16
nop
mov
call
call
push
test
sti
sub
adc
fisttpl
outsl
test
jno
leave
gs
pop
call
call
call
cs
xchg
adc
sub
call
call
push
lahf
ret
xor
pushf
or
in
imul
imul
xorb
jo
mov
cmp
call
call
jb
faddl
mov
adc
push
mov
pop
sbb
dec
jle
nop
cmp
out
inc
add
outsb
call
cli
lahf
andb
fadds
repz
clc
jp
sbb
cmova
test
call
call
sti
xor
aad
dec
fidivrs
stos
pop
mov
sbb
es
or
sub
call
call
fistpll
inc
call
jbe,pn
popf
inc
je
xchg
movsb
inc
push
mov
fsubr
push
adc
out
mov
fisttps
add
mov
into
clc
mov
in
mov
call
call
call
out
fimull
add
and
and
and
and
adc
mov
scas
ret
cmc
jo
insb
repz
cmc
push
and
xor
call
call
lcall
das
inc
sub
mov
push
shrl
inc
mov
mov
mov
ljmp
jl
mov
mov
adc
inc
adc
outsb
lds
push
push
jae
and
mov
call
call
call
out
mov
or
cmp
cs
jne
sub
and
jbe
iret
lret
pop
ss
push
push
ljmp
outsl
pop
pusha
xlat
cmpsb
and
and
and
and
cmpl
mov
add
mov
push
adc
ffreep
outsb
ljmp
mov
call
call
aaa
pop
addb
hlt
jmp
mov
call
adc
adc
mov
test
lods
push
shlb
cmp
shll
mov
jmp
inc
xchg
clc
negb
mov
inc
adc
daa
xor
call
call
call
xor
rorl
xor
push
mov
fnstcw
outsl
clc
cmp
add
push
adc
cltd
fs
cmpsl
mov
jp
shlb
pop
lock
add
xor
jae
incl
pusha
mov
aad
and
arpl
js
and
push
call
call
cmp
xor
mov
pop
push
pop
sub
add
inc
ds
ss
lds
cmp
cmpl
push
sbb
fisttpll
out
pop
jnp
pop
lods
test
and
adc
inc
push
and
and
and
and
and
push
cli
cmpsb
add
outsb
testb
ja
sub
xor
call
call
idivb
pop
mov
inc
mov
cli
jg
jle
push
xlat
mov
lcall
jmp
sahf
call
call
cmpsb
mov
scas
xor
loope
jbe
mov
cmp
sbb
mov
sub
or
pusha
shll
mov
loope
cli
daa
popa
or
lcall
in
inc
lret
push
push
push
cmp
repnz
lods
push
inc
mov
call
daa
shrb
ror
gs
sarb
mov
adc
add
fwait
push
cmp
pushf
or
fsubrl
inc
pusha
or
mov
push
mov
lcall
cli
cmpsb
or
push
pop
stos
xchg
fdivl
call
dec
fcmovnb
mov
cltd
dec
inc
scas
xor
pop
push
aaa
cld
hlt
out
push
mov
mov
mov
je
stos
sarl
daa
sub
nop
aam
push
stos
adc
pop
xlat
dec
cmpsl
insl
jmp
dec
outsl
jo
xor
lea
test
sbb
sub
ret
ret
call
call
call
pop
shll
cs
sbb
xchg
call
call
out
adc
cmpsb
pushf
ficoms
cli
mov
xchg
and
and
and
and
and
call
call
call
call
or
int
mov
aas
add
sti
push
mov
adc
stc
addr16
fisubrl
pop
sub
out
xchg
shl
inc
push
aad
pop
jge
adc
adc
push
pop
push
aaa
xchg
sbb
adc
xorb
xor
repnz
mov
call
call
xchg
or
cltd
in
leave
mov
je
mov
xchg
mov
xor
push
leave
outsl
and
adc
std
lret
jns
inc
add
test
loope
movsl
fbld
loope
test
add
or
lret
cmp
call
call
ret
cwtl
cli
xlat
dec
mov
xabort
mov
push
xor
flds
mov
xor
inc
cli
adc
mov
movsb
cmp
and
and
arpl
sub
sub
xor
out
pop
stc
jne
cs
add
lea
call
jnp
lock
mov
and
lods
mov
call
call
call
ficompl
push
add
scas
and
and
and
and
and
dec
fwait
in
xchg
mov
or
call
call
mov
and
cmp
sub
pushf
dec
push
pop
inc
jo
cld
pop
pushl
jae
hlt
inc
add
jne
insl
subb
call
call
call
mov
imul
popf
dec
mov
cmp
call
call
call
arpl
test
lret
mov
jmp
iret
paddq
jp
jo
add
in
out
inc
mov
pop
or
sti
add
aas
inc
sub
rclb
imul
add
repnz
mov
mov
call
pop
out
call
call
inc
pop
out
stos
clc
or
mov
cmp
fidivl
xor
int
je
push
add
nop
xor
insb
add
out
push
and
cld
cmpsl
inc
cli
xor
or
call
call
ret
mov
imul
jno
ds
sub
cmp
mov
sub
and
and
and
and
and
and
xchg
jb
andb
sahf
sub
mov
addr16
out
adc
call
call
ret
leave
lods
sarl
sub
les
int
test
stos
mov
push
push
adc
aas
inc
pushf
cmpsb
cmp
add
pop
add
js
out
test
push
sub
fcmove
call
test
cmp
xchg
jnp
dec
jne
call
call
add
or
ret
test
jg
ror
and
scas
inc
push
sub
dec
div
insb
sarl
roll
call
call
movsb
test
mov
call
lods
sub
xchg
adc
and
xchg
shlb
out
xchg
mov
cmc
dec
es
fs
adc
inc
imulb
out
cmpsl
dec
inc
roll
lret
jbe
add
sub
and
push
pop
sbb
test
call
call
call
call
call
mov
stos
jg
mov
jp
jae
adc
call
call
int
pop
pop
call
call
stos
mov
ljmp
fildll
mov
ret
adc
dec
cld
push
sub
xor
movb
inc
popf
adc
mov
jae
leave
and
bound
inc
or
aas
cmp
out
jbe
test
call
call
push
rdmsr
or
xchg
loop
imul
xchg
cmp
xchg
sbb
out
test
cmpsl
pop
jg
or
mov
cmp
jmp
cmp
test
cmpsl
cmp
mov
call
call
add
imul
and
and
and
and
ficoml
xor
inc
jp
mov
xchg
cmpsl
dec
rorb
fs
mov
call
pop
add
test
add
aad
mov
call
call
call
int3
adc
iret
mov
addr16
sub
movaps
cmp
call
call
call
iret
repnz
xchg
pushf
adc
dec
enter
sbb
jo
jbe
jnp
cmp
push
into
mov
xchg
xor
dec
inc
das
jns
mov
push
stos
call
ljmp
xor
les
out
aam
mov
jne
mov
mov
nop
push
mov
or
xchg
std
fisttpll
pop
jno
call
call
call
add
call
call
call
call
call
call
inc
ret
cmpsl
and
jne
pop
rcr
sub
dec
adc
jp
xchg
fnstcw
sbb
mov
push
clc
push
cld
pop
flds
mov
xchg
fidivl
addr16
rcrl
jne
cmpsl
mov
adc
call
call
dec
mov
sub
push
das
mov
or
and
jb
inc
pop
or
mov
outsl
push
mov
call
call
shrb
and
and
and
and
xlat
mov
cmpsl
sbb
sub
test
mov
sub
outsb
in
sbb
popa
fdiv
call
call
call
cli
cmp
adcb
cmc
jle
clc
jmp
sub
dec
movsb
cmc
push
mov
lods
push
cs
call
call
jo
test
cmp
lahf
out
dec
xchg
pushf
sbb
jg
addr16
push
nopl
hlt
out
add
imul
pop
test
call
call
call
mov
push
shrb
clc
icebp
in
jo
call
call
popa
int
stos
jl
mov
call
adc
add
pop
leave
xchg
and
jg
cs
or
mov
dec
jno
and
and
and
and
and
and
and
mov
xchg
fldl2e
push
pop
push
mov
and
and
and
and
call
call
sbb
mov
or
pop
fnstcw
jp
push
and
call
call
int
movsb
jb
sbb
sarl
sub
mul
xchg
xchg
call
call
call
cmp
cltd
cmp
lret
xor
inc
data16
xchg
es
inc
mov
call
call
push
sub
cs
xor
in
aas
int3
push
mov
js
xchg
push
xor
inc
pop
enter
add
cmpsl
cli
and
or
movsl
fsubs
lock
pop
jg
add
call
call
call
xchg
pop
fucom
cmp
aaa
cwtl
aam
mov
inc
mov
inc
push
inc
stos
nop
mov
cltd
addr16
leave
push
ss
cs
test
push
cwtl
xchg
loopne
pop
loope
cmpsb
cwtl
in
sbb
inc
add
js
shrb
call
call
mov
test
test
mov
mul
add
mov
rclb
pop
lret
aad
add
stc
or
sti
in
pop
pminsw
lds
mov
push
mov
and
and
and
and
and
jne
sub
mov
mov
out
addr16
call
push
imul
add
inc
call
call
call
insl
inc
jp
mov
xchg
lods
addr16
mov
cmp
bound
dec
mov
jmp
pop
rcl
out
stc
add
loop
sub
jno
mov
cmc
push
imul
arpl
cwtl
cmp
dec
pop
mov
xchg
loopne
les
cmp
call
call
call
ret
and
inc
call
call
call
andl
outsl
mov
hlt
icebp
inc
fs
jle
mov
or
shlb
out
lods
ss
testb
and
xlat
pop
je
push
jmp
ret
inc
lods
and
and
and
and
and
and
call
call
sbb
lahf
sub
call
call
call
xchg
and
adc
cmp
dec
xchg
sbb
jnp
scas
xor
out
or
pop
mov
adc
test
sbb
imul
fisttps
and
lods
inc
jle
call
call
call
jp
fmull
cmpl
movl
dec
shll
inc
mov
pop
xor
call
call
inc
aad
add
sub
or
jbe
call
call
fs
arpl
mov
push
rorb
adc
sbb
mov
test
call
call
popf
insb
and
jmp
adc
and
fmul
push
jae
negl
out
inc
loope
adc
lahf
mov
jmp
call
call
mov
movsl
push
subl
insl
lahf
loopne
out
ljmp
sub
enter
popf
daa
nop
adc
les
popa
and
sub
pop
mov
pop
push
adc
in
fs
pop
push
fimuls
and
dec
mov
xchg
mov
xor
xor
call
call
in
xorl
popf
scas
xor
in
sub
mov
adc
lods
out
inc
call
call
enter
insl
cmp
pop
mov
in
test
add
lret
and
int
xchg
mov
and
and
and
and
and
and
mov
ret
lret
movsl
in
leave
dec
repz
call
call
fsubl
cmc
es
xchg
gs
push
and
or
or
mov
negb
sbb
dec
mov
inc
decb
jmp
data16
icebp
inc
es
mov
outsb
call
call
and
xchg
mov
inc
jns
push
or
data16
pop
sbb
pop
pop
lahf
and
out
dec
jnp
hlt
xchg
lret
aad
call
call
call
push
adc
push
and
aam
loope
xchg
imul
jne
in
loop
popf
lret
out
mov
ja
ja
aas
cmp
cltd
or
and
and
and
and
call
call
call
cmp
cld
jp
cs
sbb
lret
xor
stc
mov
inc
xchg
push
cmc
mov
dec
mov
outsb
das
enter
mov
or
add
in
inc
addr16
add
test
imul
test
pop
sti
daa
inc
mov
push
repnz
nop
push
stc
cmp
cmc
sahf
cwtl
adc
xlat
pop
call
call
bound
push
dec
xchg
repnz
std
pop
call
mov
mov
mov
call
call
xchg
es
fucom
addr16
push
mov
mov
and
and
and
and
and
and
std
mov
mov
fcompl
ret
test
mov
inc
push
or
jnp
mov
xor
fstl
and
mov
and
push
arpl
or
mov
call
call
fadds
or
popf
daa
add
jb
sub
pop
sub
mov
pop
cmp
xchg
pop
pop
push
movsb
leave
sbb
mov
ret
jmp
pop
mov
popf
int
insl
and
xchg
cmpsl
fwait
sub
call
call
pop
mov
xor
adc
sbb
adc
lea
inc
mov
xchg
int
jns
fs
test
je
lahf
inc
adc
mov
orb
cmp
jbe
es
test
fidivs
in
andb
imul
stc
call
call
jmp
jae
mov
sbb
mov
inc
testl
mov
mov
cs
shlb
stos
cmp
aas
jae
cli
xorb
mov
mov
call
call
ror
outsl
addr16
xor
into
es
jg
sub
push
es
lea
and
and
and
mov
and
add
xor
push
sbb
iret
aaa
test
push
push
mov
xlat
nop
loopne
xchg
int
mov
sub
fnstenv
insb
ljmp
call
call
call
call
push
sub
sbb
and
jns
gs
insl
popf
outsl
addr16
inc
repz
stos
fimull
push
mov
cmp
dec
aaa
dec
sub
adc
pop
adc
jmp
mov
imul
add
and
imul
in
mov
call
call
push
orb
push
rorb
add
call
call
call
pop
inc
or
pop
adc
fdivl
mov
adc
inc
jg
bound
out
push
add
call
call
or
scas
add
loop
or
movsb
adc
jle
imul
ss
test
movsb
adc
dec
add
rorb
xor
ret
mov
pop
mov
arpl
call
call
out
cmp
testl
sbb
pop
push
cmc
pop
adc
or
icebp
mov
mov
loope
dec
sub
call
call
sbb
push
inc
loope
call
cmp
mov
jg
fdivrs
fucom
clc
and
inc
movsb
mov
clc
enter
stos
dec
xchg
call
call
call
push
push
cmp
mov
jbe
bound
mov
adc
daa
push
mov
xor
call
call
imul
add
and
and
and
es
push
shlb
flds
loope
pop
mov
cmp
adc
inc
push
divl
lret
lock
push
int
into
mov
idivl
pushf
add
rol
adc
xchg
call
call
rcl
call
call
call
jae
in
cmc
push
in
arpl
jecxz
push
mov
cs
jo
repnz
mov
mov
out
xor
scas
out
or
mov
push
popa
sbb
int
cli
sbb
ret
mov
cmpsl
mov
das
mov
jne
clc
nop
inc
sbb
and
inc
test
subl
call
call
xchg
test
mov
xchg
dec
dec
shrb
sub
pusha
pop
inc
sbbl
xor
or
mov
and
je
call
call
ror
jp
lcall
inc
cwtl
shll
in
cmp
neg
xchg
xchg
cld
div
jg
and
sbb
xor
pop
outsb
push
sbb
ljmp
mov
shrb
cmc
push
mov
daa
stos
push
in
cmc
xor
adc
pop
cmpsb
fs
xchg
add
movsb
mov
call
call
call
mov
jle
imul
xchg
xchg
sahf
call
call
call
lock
mov
rorl
js
xchg
ret
in
jnp
push
int
iret
dec
sbb
add
call
lock
dec
faddp
and
and
and
and
and
int
or
aas
call
call
call
and
push
add
mov
mov
fistpl
fadds
frstor
aam
cmp
decl
out
scas
xor
cmpb
lock
xchg
sbb
inc
cmpsl
push
popf
lods
sarl
jge
pushf
aas
pushf
or
fmul
das
xor
adc
mov
cmp
pop
nop
fdiv
insl
pushf
xor
call
call
pushf
add
lods
aam
outsl
or
mov
jae
pop
outsb
mov
loop
call
call
xor
clc
push
add
cld
leave
rclb
xchg
cmc
outsb
pop
xchg
pop
sub
jmp
xchg
mov
call
call
jp
lcall
pop
push
out
xchg
sub
mov
inc
cmp
popa
cmp
sub
int3
mov
call
call
pop
jecxz
xchg
icebp
hlt
ds
mov
jmp
mov
aad
in
jno
push
inc
xor
jg
in
stc
inc
int3
movsl
js
call
call
sub
push
lods
movsb
add
fstl
adc
mov
xor
in
and
and
and
and
and
and
or
push
mov
into
sub
not
adc
inc
es
into
xor
pop
call
call
add
xor
mov
adc
ret
or
push
outsb
mov
pop
stos
bound
std
clc
add
mov
popa
mov
xchg
adc
add
lret
pop
dec
out
xchg
shrl
or
es
int3
push
or
shr
addr16
pop
push
pushw
pop
jne
jb
and
ljmp
adc
call
mov
pop
push
or
out
pop
add
adc
pop
sbb
cmp
mov
call
call
call
rcrb
addr16
add
pop
repnz
cld
sub
repz
aam
xchg
and
and
and
and
and
and
and
loopne
nop
cld
cli
and
and
and
and
and
and
es
pop
leave
mov
cmpsb
add
jmp
or
call
call
call
adc
fsubs
and
and
and
and
and
and
xchg
and
mov
dec
pop
mov
imul
pop
ret
fidivl
insb
stos
imul
jbe
fnstsw
push
xor
lcall
rcll
shll
xchg
icebp
les
add
mov
fwait
andl
pop
icebp
cmp
aam
sub
call
and
fistpl
addr16
dec
mov
jge
xor
mov
std
xchg
pop
js
call
call
dec
xor
pop
jbe
test
stc
andb
ljmp
scas
dec
shlb
call
call
push
and
add
cld
dec
fs
ret
mov
inc
mov
cmpsb
mov
mov
mov
lcall
call
call
call
jmp
xchg
addl
mov
mull
dec
adc
mov
faddp
jno
jl
jns
daa
out
idivb
ds
mov
inc
leave
pop
movsl
mov
std
aaa
adc
call
call
call
pusha
cwtl
xchg
mull
and
and
and
and
sti
pop
adc
jmp
or
sbb
or
push
dec
fcoms
addr16
cmpsl
xchg
fstpl
push
test
and
and
and
and
out
cmp
cld
sbb
call
es
sbb
addr16
ss
sbb
fmuls
iret
push
ficompl
roll
push
pop
inc
shll
idiv
pop
cwtl
test
call
call
lret
dec
cmp
movsl
mov
hlt
rcl
je
cmp
push
adcl
addr16
pushf
jge
jo
add
add
pushf
jnp
cli
xor
call
mov
fwait
push
jl
push
addr16
div
out
xchg
in
addb
repz
xor
sbb
cs
xchg
and
fiaddl
pusha
adc
call
push
daa
or
out
adc
jl
es
icebp
sbb
jo
adc
out
dec
xchg
ror
and
push
ficomps
rolb
call
call
call
pop
jp
movsl
push
push
cmp
in
in
cmp
push
cmpsb
inc
push
adc
jg
push
dec
adc
repnz
jl
call
call
and
and
and
and
and
mov
xor
lret
pop
sub
call
call
sbb
and
and
inc
clc
in
lret
addr16
in
in
fnstsw
or
jecxz
jle
lcall
pop
call
call
arpl
mov
xchg
out
aam
push
lret
call
call
call
sub
test
cmpsb
or
fcomp
pop
push
sub
inc
loopne
push
push
arpl
sbb
test
pop
push
sub
add
jns
xchg
jl
push
inc
notb
call
call
call
call
imul
push
inc
xchg
sbb
pop
inc
inc
lahf
aam
jnp
orl
dec
lea
out
sahf
dec
ret
lock
push
push
adc
xor
mov
mulb
into
les
jle
mov
jecxz
add
mov
adc
test
mov
call
call
mov
stos
rcl
mov
xchg
mov
or
add
and
clc
fstps
mov
push
loopne
ret
enter
cmp
lcall
leave
xchg
testl
pop
add
or
rcrl
push
pop
mov
nop
mov
fldl
xchg
call
call
lahf
adc
mov
cmpsb
mov
es
add
and
out
dec
xchg
in
sbb
xchg
call
call
call
add
jae
stos
and
mov
call
call
rcrb
pop
add
add
or
ja
inc
dec
clc
pop
outsb
popf
sub
add
pop
jns
cmp
mov
mov
cmp
insl
outsb
ss
call
and
and
and
cmp
in
fcoms
std
in
pop
fisttpl
loopne
bnd
addr16
fwait
int
call
call
fistpl
es
lea
mull
call
call
call
sub
push
cwtl
add
std
xorb
cltd
dec
add
xor
cmp
sahf
or
je
mov
ret
popf
inc
sub
lahf
std
mov
movsb
scas
pop
cmp
mov
mov
and
dec
mov
and
gs
test
pop
and
stc
ljmp
dec
test
call
call
mov
addl
fdivs
push
cmp
loopne
xchg
bound
popl
sub
pusha
scas
fs
push
pop
ja
hlt
push
lret
addr16
pop
aaa
jle
pcmpeqb
es
into
xchg
pop
sub
jmp
in
mov
inc
lea
sbb
call
call
call
ljmp
and
and
and
mov
mov
dec
scas
mov
xlat
mov
call
call
call
or
mov
or
jnp
jp
pop
push
adc
lret
mov
mov
mov
jle
push
inc
xor
mov
mov
adc
lret
mov
sbb
cmc
dec
in
lcall
aaa
loopne
xor
ret
cld
adc
out
call
call
adc
push
mov
fdivs
daa
pop
or
mov
add
icebp
imul
jb
out
xchg
sbb
xor
adc
call
call
bound
add
scas
daa
call
call
mov
pop
subl
cwtl
inc
dec
xor
and
and
and
jbe
mov
pop
ljmp
mov
call
call
call
push
inc
cmp
cmp
sbb
das
imul
idivl
dec
adc
je
inc
call
call
call
call
stos
lahf
push
out
mov
or
ljmp
call
mov
lret
pop
or
out
repz
dec
out
data16
jle
enter
mov
cmp
rorl
addr16
jg
shr
call
call
pop
in
jae
adc
mov
stos
imul
inc
cli
adcb
popa
sub
xchg
rcll
sbb
out
call
call
call
stos
lcall
and
sbb
dec
sub
push
into
xchg
jecxz
js
push
jnp
jns
mov
call
call
jns
daa
loope
aad
cs
clc
mov
stos
cs
pusha
ret
pop
arpl
lret
fisttpll
call
call
call
add
not
and
call
call
call
insb
dec
sahf
jns
in
in
cltd
gs
dec
out
cmc
push
imul
call
call
call
jns
jecxz
adc
nop
bound
lahf
add
inc
mov
call
arpl
lcall
jge
add
pop
es
into
arpl
dec
call
call
call
addr16
enter
in
and
ret
call
call
call
shrb
mov
inc
inc
push
adc
push
sub
pushf
or
adc
jg
cmp
fcmovnbe
enter
loope
cmpsb
clc
pop
gs
pusha
sahf
push
inc
pop
xchg
pop
lods
push
dec
sbb
movsl
cmpsl
ds
add
ljmp
icebp
loop
push
lds
sub
mov
call
add
pop
test
xor
xchg
cmp
pop
rcrb
add
out
neg
inc
sbb
adc
es
mov
sbb
dec
stos
sbb
call
call
add
and
and
and
jp
aam
movsl
push
xor
ror
mov
xor
cmpsb
call
call
lods
push
mov
rclb
test
or
mov
pop
ljmp
bound
jmp
inc
repnz
mov
sahf
xor
xchg
sub
sub
popa
mov
jg
es
xor
fisttpl
adc
das
stc
call
call
push
flds
call
call
gs
fcoms
xchg
out
ret
outsl
icebp
imul
lock
call
call
add
loop
addr16
int3
mov
outsl
insb
lock
rcll
in
rorb
std
xor
add
cmp
scas
call
call
call
fimuls
mov
out
loopne
add
popw
daa
inc
fistpll
mov
add
and
mov
popa
jmp
les
or
jp
mov
aas
sub
je
in
repnz
call
call
push
push
mov
arpl
pop
aas
xor
push
bound
clc
and
jne
dec
imul
xchg
call
call
sub
aas
ja
inc
pop
push
lods
mov
xorl
fmull
scas
xchg
sbb
push
adc
rolb
add
je
rcr
cmpsl
and
and
and
and
xchg
clc
mov
adcb
sub
int
cmp
push
push
pop
sarb
enter
int3
movsb
sbb
pop
sbb
imul
call
call
lods
insl
fldl
shl
xor
adc
movb
and
out
out
xchg
pusha
aad
loope
sub
aad
adcl
jae
imul
repnz
mov
call
call
call
pop
mov
popl
and
stos
nop
repnz
adc
clc
aam
or
inc
fistl
add
sub
fs
sti
call
call
call
out
adc
sub
fisttpl
lret
inc
daa
andb
imul
jb
mov
mov
es
sub
dec
pop
pop
jl
mov
sub
ja
lea
test
bnd
call
sub
insl
xchg
mov
sbb
fiaddl
jo
lcall
and
mov
cmp
sbbl
stos
jne
push
push
lds
cmpsl
out
xchg
leave
test
lea
fcom
xchg
or
mov
dec
scas
ds
call
call
push
dec
jg
stos
addl
call
call
call
or
and
aam
loop
leave
sti
scas
xor
inc
and
and
and
and
and
and
and
and
and
cmpsb
lret
bound
sub
cmp
push
mov
mov
shl
push
push
cwtl
mov
or
repz
call
call
inc
pusha
cmp
data16
pop
mov
ror
fldl
sub
pusha
insl
inc
out
mov
outsb
push
ret
mov
push
adc
dec
dec
test
dec
leave
jb
dec
stc
adc
pusha
jecxz
jl
ss
push
clc
fildl
ja
jmp
mov
inc
mov
call
call
sbb
andl
mov
call
pop
inc
and
and
and
or
cmp
call
call
call
and
and
and
icebp
mov
sub
inc
push
mov
mov
jne
push
and
lock
mov
jb,pt
mov
call
call
or
lock
push
cld
push
jne
out
or
decl
pop
push
cmp
clc
aaa
pop
xchg
sahf
ss
daa
test
daa
popa
adc
dec
xchg
call
call
fwait
add
push
loop
mov
adc
hlt
out
and
test
dec
gs
hlt
push
sub
xchg
loopne
cmp
cltd
out
mov
sbb
and
and
and
and
and
sbbb
xor
mov
notl
ds
icebp
mov
leave
mov
insl
lahf
fstpt
repnz
dec
add
jge
fxch
cmpsl
leave
xchg
xor
jbe
sarl
insb
call
call
call
mov
lods
push
lcall
stos
std
sbb
and
or
jbe
insb
mov
mov
je
adc
shll
pusha
dec
cli
into
inc
cs
push
mov
jbe
mov
mov
inc
call
call
add
sub
push
sbb
cmp
sbb
push
jo
popa
sub
inc
je
and
inc
xchg
xor
das
rcl
mov
call
call
mov
bound
xchg
sbbl
in
add
inc
lahf
jne
rclb
test
inc
cmp
sti
lahf
and
and
and
and
and
and
call
call
int
mov
push
add
pop
xchg
adcl
je
ret
inc
bound
mov
stc
push
repz
jl
inc
sti
jmp
pop
xchg
sbbb
mov
mov
mov
shrd
sub
fimull
dec
call
call
jne
sbb
cmp
neg
call
pop
inc
lret
pop
mov
xor
jne
xchg
js
cmp
sbb
lea
dec
or
cmp
int3
jg
rorb
pop
push
adc
stos
call
call
pop
xor
loope
push
je
push
rcll
xlat
sub
dec
hlt
shlb
push
xchg
sub
adc
lahf
fidivs
call
call
fs
fdivrs
and
pop
lock
mov
lock
mov
mov
xchg
cld
adc
call
ss
loopne
lea
ja
adc
xor
ficompl
cmp
and
pop
popa
sbb
loopne
mov
jo
inc
sarl
xchg
call
call
gs
adc
mov
popf
push
arpl
inc
ljmp
sub
or
or
clc
stos
call
call
call
sbb
lret
fistps
mov
cmc
scas
fisttpl
cli
pop
or
mov
aam
push
push
cmp
mov
loopne
inc
es
call
imul
inc
shrb
inc
jbe
hlt
roll
and
and
and
and
and
mov
sti
sahf
aas
decl
mov
mov
adc
mov
push
pop
aas
xor
sub
push
cld
in
mov
movsl
scas
pop
fcoml
filds
pop
ret
jne
in
test
sbb
dec
jb
je
pop
out
insl
call
call
call
add
call
call
call
add
cmp
imul
or
push
adc
leave
pop
dec
mov
pop
call
call
pop
mov
sub
call
call
call
lea
push
cli
adcl
or
lods
hlt
call
call
call
mov
push
jne
dec
sub
scas
loop
xchg
and
outsb
mov
and
and
and
and
lods
cmp
jge
mov
call
or
jecxz
push
aas
es
xor
xor
popa
adc
std
push
or
je
cmpsb
mov
and
cmp
popa
in
int
sbb
cmp
inc
mov
push
mov
push
pop
popa
mov
lcall
lds
div
pop
jns
or
sbb
call
call
and
and
and
and
and
and
les
cmp
int3
int3
and
and
and
and
and
and
addr16
or
popa
jg
push
loope
gs
cld
sti
lods
sub
call
call
call
lret
push
inc
cmp
mov
mov
adc
xor
dec
stos
jmp
sbb
jecxz
call
int3
loop
pop
js
cmpsb
dec
push
stos
call
call
call
sbb
clc
sarl
ret
sti
pop
std
ficompl
add
dec
jb
test
add
or
push
dec
mov
movsb
imul
or
cmpsl
pop
lds
xor
fimuls
ret
cmpsl
call
call
call
call
sub
push
cmpsl
jnp
mov
jp
pop
push
add
rcl
sub
pusha
sti
add
call
call
add
sbb
mov
call
call
rorl
lcall
ljmp
hlt
into
les
and
ficompl
fildl
mov
cmp
fwait
test
jbe
cmc
imul
pushf
stc
xchg
jecxz
sbb
jle
outsl
lods
jecxz
lcall
pop
xchg
pop
push
xchg
stos
out
test
call
xor
push
nop
outsb
out
adc
xor
das
pop
inc
add
lret
cmc
scas
jmp
xchg
xlat
push
mov
movsl
add
mov
push
push
enter
jmp
in
cmpsl
mov
xor
decl
xchg
imul
xchg
push
mov
sub
mov
fsub
call
call
dec
cmpsb
dec
insl
pushf
mov
hlt
or
call
call
sub
pop
pop
or
popa
mov
sub
fnstsw
pop
mov
popf
jl
jecxz
pop
fs
lahf
dec
sub
insl
sub
test
arpl
inc
xor
and
and
and
and
pop
push
xchg
push
mov
idivb
aam
push
daa
or
sahf
fsubrs
cli
loope
mov
push
scas
ds
push
fs
call
xchg
hlt
pop
inc
pmaddwd
push
and
xchg
addb
pop
xor
cmp
xor
pop
push
xchg
popa
sbb
pusha
or
sahf
out
xor
pop
jbe
sub
jne
xor
aam
int3
mov
sahf
lahf
out
daa
dec
or
mov
scas
lds
imul
jb
std
dec
call
call
test
jl
js
fmuls
mov
pop
jecxz
or
mov
ret
cmp
lcall
adc
call
call
xchg
rolb
sub
fisubrs
jle
and
repnz
and
and
and
and
and
and
adc
jl
call
call
xor
sbb
jbe
call
sbb
jg
add
pop
jmp
or
rorl
jb
movsl
inc
cmpsl
xchg
div
test
sbb
test
xchg
popf
adc
mov
sbb
push
out
mov
mov
fwait
xor
xchg
dec
xor
call
call
call
std
ss
sti
xor
xor
imul
ret
xchg
inc
adc
jae
jne
cmp
call
call
ror
jnp
mov
test
jbe
push
js
loopne
jmp
out
mov
insl
lds
and
dec
xor
shrb
lods
xchg
jge
mov
push
lods
mov
stos
lea
xchg
fidivl
xor
fs
push
sbb
cmpsb
dec
xor
pop
test
in
call
call
push
and
add
mov
loope
fldl
xor
pop
xor
xchg
pop
aas
cltd
jl
popf
jmp
jge
sbb
xor
hlt
and
sti
sub
lret
repnz
call
call
call
call
call
arpl
in
lods
xor
pushf
loope
xchg
xor
jnp
mov
mov
in
push
cmp
rorl
out
cmpb
add
xchg
add
jb
out
rorb
xchg
ds
jge
and
out
insl
fidivs
ret
pop
adc
push
sarb
inc
testl
call
addl
xor
loopne
mov
mov
adc
pop
push
cltd
mov
rcl
adc
add
mov
xchg
sub
jg
rcr
je
call
call
and
and
and
and
inc
dec
mov
lret
add
jnp
sbb
push
add
xchg
or
mov
mov
add
inc
xchg
jp
pslld
call
call
call
sahf
add
xchg
xchg
enter
pop
aas
in
xor
call
call
call
dec
je
ds
mov
pop
mov
xor
or
sbb
xchg
add
sbb
test
sbb
inc
ss
clc
push
notl
call
call
sub
enter
xchg
pusha
bound
out
lret
das
mov
add
sub
add
cltd
test
shr
pop
call
call
je
push
lret
mov
mov
add
mov
call
call
call
sbb
push
cld
pop
push
sysret
rclb
popf
mov
dec
xor
xlat
sti
cld
xor
pusha
cmpsl
xchg
fstl
pop
nop
mov
xchg
inc
iret
pop
or
mov
and
and
and
and
and
and
and
lahf
push
adc
cmc
fwait
add
call
call
adc
push
lret
mov
bound
std
jo
mov
add
ror
sub
mov
fsubrs
clc
and
or
and
and
and
and
and
pusha
pop
add
jg
cltd
and
call
leave
jge
or
imul
loope
shlb
stos
fsubr
call
call
call
jmp
test
pop
dec
mov
pop
mov
push
xor
mov
push
out
fwait
sbb
data16
dec
adc
dec
sbb
and
or
fldenv
push
xchg
stc
push
cmp
pop
lods
out
decl
sub
call
xchg
pop
mov
sahf
negb
test
lahf
add
mov
dec
sub
adc
push
out
popf
inc
cmpsb
lods
mov
mov
mov
mov
mov
call
call
xchg
iret
xchg
sahf
lret
popf
les
data16
xchg
xchg
lock
push
test
fisttps
xor
cmp
push
or
les
test
ss
sbb
add
sbb
call
call
call
mov
xlat
sub
sti
pop
call
mov
sbb
sub
pop
loopne
sub
call
call
cmp
and
lcall
pop
cmp
cmpsb
shlb
adc
xchg
test
mov
movsb
sbb
mov
pushf
mov
bound
and
and
and
and
gs
sbb
adc
cmpsl
in
xor
test
fnsave
add
inc
adcl
lods
nop
cmpsl
test
mov
notl
call
call
jns
gs
pop
or
inc
clc
sub
insl
jg
or
jo
xchg
stc
fwait
mov
into
cmp
call
call
arpl
xor
inc
orb
push
mov
or
outsb
popf
inc
jmp
mov
jb
and
and
and
and
repnz
outsb
idivb
stos
int3
pop
jp
push
lock
dec
fisttpl
loopne
inc
test
out
adc
enter
pop
nopl
fcmovbe
mov
adc
je
jns
hlt
and
sbb
aas
lods
dec
add
xchg
out
mov
mov
rcr
mov
call
call
or
add
pop
sahf
inc
mov
mov
sbb
fs
inc
sub
cmp
test
mov
push
dec
dec
jl
jp
loope
scas
fcoml
pusha
mov
dec
imul
pop
inc
fnstsw
addr16
adc
lret
mov
mov
call
call
in
ret
loopne
into
mov
xchg
out
jge
inc
out
out
insl
pop
xor
into
sub
call
call
adc
sbb
dec
sub
mov
ret
adc
dec
sti
std
divl
xlat
sahf
std
mov
dec
shlb
sbb
xor
xchg
lcallw
xchg
int
inc
jbe
cwtl
mov
and
and
and
and
and
call
call
call
xchg
or
sub
cmp
fnstenv
sbb
jbe
or
call
call
rorl
cmp
popf
inc
inc
jge
int3
and
cmp
dec
cld
aad
mov
push
inc
sub
jecxz
sbb
xchg
jns
subb
lret
add
mov
insb
addb
fisubrl
pushf
mov
xchg
lcall
call
call
cs
add
fwait
mov
mov
call
call
xchg
sarl
out
sti
xchg
out
rolb
sbb
stc
pop
stc
jno
js
loop
add
mov
sbb
call
call
call
aaa
push
fsubl
cmpsb
loope
push
pop
cmc
frstor
daa
adc
mov
in
push
sub
cmp
and
and
and
and
and
call
sbb
and
and
and
and
outsl
mov
cld
sbb
xchg
inc
and
and
and
and
fstpt
arpl
mov
mov
and
xor
movsb
add
cmc
icebp
xor
enter
call
call
loop
in
jnp
ja
call
call
call
push
addr16
repz
xor
outsb
out
fcomp
shrl
and
adc
pop
clc
xor
bound
add
mov
insl
shr
jg
idivl
daa
out
sub
xchg
inc
dec
and
out
xchg
pop
pop
fbstp
sub
call
call
push
call
xlat
call
call
and
and
and
and
and
and
sub
add
pop
dec
push
sub
lahf
daa
mov
mov
jbe
cmpsb
jbe
in
sbb
sti
dec
sub
rclb
cmc
sbb
sbb
xchg
inc
ret
pop
data16
xor
aaa
push
add
push
aaa
or
pop
push
inc
lods
call
js
sub
call
fdiv
add
fldcw
inc
sub
aas
imul
call
call
call
divb
addr16
mov
sbb
sbb
lds
lods
and
outsb
push
fidivrs
in
aam
fldenv
outsl
or
aad
call
call
in
adc
fldt
iret
mov
out
pop
push
inc
inc
xchg
jle
push
in
adcl
in
mov
sbb
and
adc
iret
cmp
and
mov
out
test
cmp
call
call
pop
and
xor
pushf
pop
add
outsl
cmp
aad
or
add
push
sbb
or
lods
sahf
test
or
lahf
repnz
inc
push
adcl
lea
or
je
mov
or
enter
call
call
mov
or
lock
cli
xchg
cmp
adc
xlat
sti
xor
dec
clc
stos
push
fmul
push
or
sti
movsl
or
enter
das
cmpsb
cwtl
push
cmpsb
push
call
xor
and
and
and
and
and
and
and
xor
cwtl
ret
repz
mov
sub
cld
pop
fiaddl
inc
adc
dec
negb
sahf
in
push
push
inc
mov
test
jg
cmpsb
popf
pop
jg
mov
scas
std
mov
add
call
fsts
push
sarb
mov
in
adcl
ret
pop
sarl
jg
jb
movsl
out
adc
sub
mov
cmp
cmpsl
adc
mov
lret
mov
xchg
pop
sti
sub
dec
add
lretw
pusha
mov
push
in
es
call
call
call
adc
mov
les
inc
pop
cmp
pop
std
scas
dec
mov
push
mov
sub
mov
popa
scas
cld
loopne
xor
cld
out
movsl
mov
push
mov
sub
mov
fwait
jg
jbe
lcall
push
std
andl
call
call
inc
daa
cmp
leave
loopne
push
pop
stos
xchg
mov
and
and
and
and
xchg
xchg
add
jbe
and
sbb
test
call
call
push
sbb
out
dec
or
jne
jmp
pop
sub
cs
cli
idiv
loop
leave
fcmovnbe
icebp
fs
or
jecxz
sbb
iret
lods
jne
rcrb
out
addr16
imul
outsb
outsb
sub
xchg
cs
cmp
and
icebp
adc
mov
faddl
loopne
call
call
call
xchg
icebp
lahf
pop
xchg
ret
popf
xchg
pop
mov
inc
clc
rorl
adc
sbb
mov
sbb
bound
cmp
ror
add
xor
xor
and
notl
push
and
and
and
and
and
and
xchg
pop
or
mov
push
dec
or
dec
jb
mov
call
call
call
int3
sub
call
call
dec
jl
push
call
call
lds
in
add
int
nop
aam
xchg
imul
adc
mov
enter
xchg
test
mov
sub
xor
mov
aam
sub
call
call
cmp
sbb
ret
fsub
in
jle
cwtl
jns
dec
xlat
xor
fwait
inc
call
call
lock
popf
sti
push
ret
dec
push
addr16
push
ds
call
call
pop
ret
xorb
and
fildl
pop
mov
dec
push
push
fiaddl
sub
lods
testl
mov
arpl
ret
pop
adc
int3
sbb
inc
adc
mov
xchg
call
call
hlt
cmp
rcrb
mov
orl
pop
fwait
sub
sbb
xor
and
sub
xor
fisubs
mov
sub
pop
rcr
mov
out
xor
pop
dec
cmp
call
call
mov
jno
ficompl
jg
or
push
je
fcomp
add
nop
cld
repnz
mov
or
push
cmp
mov
in
ss
xor
cld
ja
mov
stos
negl
jns
imul
or
cmp
call
call
mov
pop
insb
rcll
mull
jbe
popa
ss
rcrb
xchg
mov
aam
adc
stos
inc
mov
scas
outsl
pop
mov
call
call
out
dec
fdivrl
int
adc
or
pop
stos
loopne
push
xchg
sub
call
xchg
mov
popf
dec
push
inc
cltd
add
or
and
and
and
call
call
adc
out
cmp
call
call
mov
aas
xchg
sub
and
hlt
pop
outsl
sbb
lret
test
out
scas
push
test
push
adc
dec
xor
push
mov
pusha
and
and
call
call
pop
out
sub
and
dec
enter
jge
stos
test
iret
jne
push
dec
out
shlb
and
and
and
and
cld
fldenv
jmp
or
and
and
and
and
sbb
pop
repnz
push
lcall
outsl
sub
call
call
call
push
stos
into
mov
or
clc
je
xor
imul
lods
fcompl
inc
stos
sub
or
hlt
dec
call
call
call
pop
pusha
out
cmp
mov
call
call
call
data16
xor
inc
test
call
call
call
test
push
dec
inc
push
loope
jno,pn
inc
aad
mov
mov
in
cs
stos
out
outsl
cmp
dec
movsl
pop
into
sub
call
call
jnp
in
jl
xlat
lods
notl
pop
or
out
inc
mov
push
addr16
clc
flds
add
ret
jge
call
call
call
mov
dec
aam
pop
mov
mov
push
push
and
call
call
push
inc
push
pop
add
jg
push
lret
fsubrs
sub
imul
mov
pop
stos
jge
inc
jns
shrl
call
call
insl
lret
call
call
call
cli
dec
and
and
and
and
and
and
jl
fldl
and
loopnew
mov
pop
sbb
test
in
fwait
push
inc
jb
cmpsb
aam
or
test
inc
push
icebp
jle
mov
mov
stos
jbe
fisubrs
movsl
jne
pop
push
pushf
popa
mov
mov
xor
shr
call
call
pxor
jae,pt
fiaddl
andl
mov
jae
in
rorl
call
rcrl
test
mov
push
out
cs
sub
enter
adc
loop
pusha
fwait
rclb
mov
rclb
fld
lods
call
call
call
stos
add
mov
call
call
call
sub
mov
lret
out
mov
sti
mov
or
std
or
mov
and
and
and
and
and
and
and
pop
or
in
xchg
pop
jnp
xlat
xor
mov
call
call
inc
mov
dec
mov
dec
ja
cmc
cmpl
ret
add
inc
sbb
mov
sarl
in
stos
push
shll
xchg
sarl
dec
mov
adc
jbe
or
popa
xchg
popf
out
outsl
call
call
std
or
xor
mov
movsl
push
ret
push
push
js
ljmp
stc
push
filds
sbbb
mov
cmp
out
stos
outsl
lahf
je
xchg
mov
popw
adc
pop
dec
icebp
mov
fnstenv
pop
in
ror
inc
lcall
loopne
pop
jae
adc
call
call
into
imull
inc
fcmovb
sarb
sti
stos
jno
pusha
cltd
adc
testl
cmpsb
xor
mov
dec
test
call
call
call
jb
rorl
imulb
cmp
js
jge
mov
fisttpll
ds
inc
cmp
mov
mov
pop
mov
dec
or
cmp
mov
pop
jp
and
sbb
sub
ret
mov
cwtl
imul
jp
loope
pop
mov
mov
call
call
pop
pop
or
fisttpll
pop
jb
mov
repnz
dec
mov
mov
iret
and
sbbl
cmp
jnp
xor
cwtl
jg
and
and
and
and
addr16
inc
sbb
nop
cwtl
rcl
sarb
call
call
call
xor
inc
and
in
add
gs
pop
call
call
add
aas
loop
lret
pop
add
push
inc
jne
xchg
js
push
cmp
fucomp
sbb
outsb
and
loop
out
js
stc
in
cmpsl
test
jne
test
mov
sub
ret
rcr
dec
push
scas
adc
xchg
sti
and
xchg
fdivrl
call
call
call
pop
mov
ja
ret
pusha
mov
outsl
push
divl
jecxz
inc
sbb
add
push
add
sbb
and
and
and
and
and
and
and
inc
jo
ret
pop
mov
fsts
shlb
lea
jl
scas
mov
pushf
imul
sbb
xlat
mov
call
call
es
imul
add
jg
sbb
out
sbb
push
outsb
adc
ljmp
mov
inc
adc
adc
push
divb
adc
shrb
call
call
call
pop
pop
mov
and
ret
out
call
call
mov
flds
pop
loopne
mov
push
xor
adc
mov
add
call
call
imul
push
fs
mov
dec
push
out
test
xchg
cwtl
fs
filds
or
mov
in
add
call
ja
push
cld
mov
mov
mov
mov
jo
and
stc
jge
xor
insb
call
call
xor
and
jecxz
add
xchg
call
call
call
in
data16
aaa
dec
das
inc
or
push
clc
mov
imul
rol
cmp
mov
jge
sahf
les
ds
and
mov
ljmp
call
call
call
and
in
push
pop
pushf
inc
iret
daa
push
mov
mov
filds
xor
cmp
addr16
jo
push
cs
repnz
cmp
jnp
imul
aad
mov
sub
lret
and
jne
sti
push
in
call
call
dec
scas
enter
sub
aaa
push
sub
or
adcb
test
and
and
and
and
out
or
push
das
mov
or
push
cmpsb
inc
fcmovnbe
cmc
mov
mov
and
jne
mov
jp
call
call
mov
mov
jnp
xchg
sbb
xchg
test
mov
call
call
sti
loop
outsb
mov
imul
inc
imul
ljmp
pop
sub
jne
jns
mov
insb
aaa
ja
pop
inc
mov
sbb
and
and
and
and
and
and
icebp
sbb
clc
sub
es
test
xchg
mov
call
call
xchg
mov
xchg
bound
or
lods
enter
jg
stos
ljmp
xchg
xor
dec
test
push
fisubrl
pusha
stos
cmp
fsubrs
call
call
xor
ret
loopne
cmp
sub
call
call
mov
cmp
outsl
add
call
call
sti
lods
loop
inc
or
mov
mov
mov
sub
lret
mov
add
sub
dec
test
and
and
and
jle
int
push
mov
call
call
out
test
mov
popa
mov
shr
fnstsw
xlat
push
mov
into
push
xchg
cmpsl
xor
shrl
add
push
loop
mov
call
call
sar
push
cmpps
in
dec
icebp
mov
mov
aad
and
dec
lret
sub
dec
jg
push
aad
or
call
push
xchg
or
sahf
cs
hlt
jmp
mov
push
hlt
xchg
adc
push
pop
push
call
call
call
pop
mov
sbb
push
adc
out
imul
dec
xchg
cli
xchg
mov
sub
mov
mov
movsb
add
mov
int3
cmp
mov
add
loope
lods
cmp
mov
push
out
lods
jbe
cwtl
lods
pop
enter
mov
dec
loop
pusha
das
mov
stc
rol
call
call
call
push
adc
push
add
jl
jbe
jnp
inc
xchg
daa
or
das
jl
push
nop
fildll
aad
cmpsb
jne
outsl
fwait
and
iret
mov
push
lock
das
xor
sub
dec
xchg
pop
cmp
into
sub
negl
cmpsl
inc
das
outsl
sbb
ljmp
cs
call
call
call
call
pop
fsubrs
inc
in
jo
mov
and
and
and
and
mov
rdmsr
xlat
fimull
ret
mov
jle
mov
mov
lret
sti
mov
xchg
xchg
call
call
out
jle
lea
adcb
sbb
scas
mov
jb
mov
outsb
std
call
call
stc
pop
mov
cli
ja
jbe
jmp
daa
lret
pop
fildll
mov
lods
popa
pop
fwait
arpl
lods
push
fisttpl
add
push
out
insl
inc
ss
jb
push
daa
sbb
or
add
movsl
cmp
scas
cwtl
adc
test
push
dec
ss
xchg
call
call
addr16
out
or
mov
jns
call
call
arpl
sub
popf
arpl
add
jg
push
call
call
loop
xor
test
pop
or
cmp
pop
push
stos
add
jno
jae
call
call
das
pop
mov
mov
aaa
lret
jge
filds
out
jmp
fs
addl
inc
addr16
push
sahf
lock
and
add
and
and
and
and
and
cmpsl
sbb
xor
cmpsl
xchg
lret
xchg
and
and
jnp
pop
fld1
call
call
loop
push
jb
js
dec
sub
xlat
cmp
ja
jp
rcrb
mov
and
adc
fs
mov
xor
mov
call
call
std
xchg
mov
or
sbbl
dec
or
call
call
call
mov
or
push
sub
aas
mov
cmp
mov
scas
push
mov
push
es
inc
xor
out
push
jae
push
sub
in
aam
ret
cld
stos
jmp
call
call
call
adc
add
ds
inc
daa
insl
out
aaa
push
cltd
out
std
mov
add
jp
adc
xchg
jg
cmovl
sub
iret
fdivrl
xchg
and
in
sbb
outsb
or
cld
push
test
cmp
mov
movsl
clc
neg
testb
dec
xchg
pop
xchg
enter
adc
call
call
add
sbbl
xor
insl
in
and
and
and
and
shll
dec
or
out
je
mov
rorl
xor
xchg
lret
bound
and
and
and
xchg
clc
arpl
shlb
call
call
pop
int3
xchg
cwtl
xchg
xchg
pop
les
xor
lds
push
int3
jecxz
repnz
out
pop
movsb
sahf
call
call
call
sbb
stos
inc
iret
jge
je
xor
outsb
adcb
dec
insb
fbstp
andl
jp
aam
mov
xchg
push
repz
stos
call
call
call
pusha
jmp
mov
adc
sbb
and
and
and
hlt
lret
sub
fisttpll
call
call
call
push
mov
mov
push
call
loop
sub
xchg
inc
bnd
stos
call
call
call
sahf
jno
andb
pop
das
sub
lret
rorl
loope
ret
and
mov
xchg
cmp
shll
mov
enter
push
pop
icebp
popa
scas
fldenv
into
or
imul
shl
jno
ds
jmp
dec
pop
xchg
mov
stos
lret
dec
cmp
and
adc
call
call
call
dec
xor
sbb
rcl
sub
push
loop
xchg
imul
push
mov
or
rcrl
into
xchg
inc
or
adc
pop
stos
xchg
loopne
cmp
movsl
fld
fisubrl
std
cmp
and
and
and
and
fildll
mov
push
jno
xchg
adc
push
sbb
call
call
int
pop
int3
dec
pushl
sub
shl
outsb
or
pop
add
dec
fcompl
sti
mov
pop
and
pop
icebp
sar
call
call
add
cli
xor
or
lock
fnsave
cltd
xchg
test
repz
xor
enter
repnz
clc
loopne
out
add
fnstenv
or
lret
es
jmp
call
call
call
adc
sbb
test
add
lods
loopne
in
pop
push
lds
jp
pop
shlb
jb
mov
popf
xor
xchg
jecxz
add
xor
dec
adc
xchg
pop
fstp
in
stc
mov
push
xlat
inc
cmp
cmp
cmpsl
outsb
jbe
test
stos
iret
or
rcll
scas
mov
jle
sbb
call
call
lock
scas
push
sbb
gs
mov
sbb
sbb
jg
jg
cld
mov
movsb
in
push
inc
std
lock
jecxz
mov
aam
loop
push
and
mov
jecxz
out
scas
xor
sub
call
call
lods
add
or
mov
loope
xlat
cwtl
fs
mov
adc
cmc
jo
clc
stos
icebp
pop
es
and
sub
inc
out
fnsave
fisubrs
and
and
and
lahf
ror
jp
push
in
push
pop
cmpb
pop
mov
inc
out
jno
call
call
popf
ret
xor
lea
ficoms
mov
adc
cwtl
lock
or
mov
xor
xchg
sub
shlb
call
call
jbe
cmpsb
push
decl
mov
out
lahf
out
leave
fdivl
pop
xor
mov
lods
xor
aam
sub
fcomps
and
and
and
and
ret
cwtl
mov
ret
push
adc
lea
call
call
call
sub
sbb
pop
jbe
jecxz
and
add
les
cmpsb
leave
daa
pop
rcpps
cmp
mov
out
nop
and
call
call
call
dec
mov
clc
fisubs
pop
add
inc
sarl
lock
out
ss
jno
jp
and
mov
sbb
mov
divl
lret
add
cwtl
mov
pop
ret
add
xchg
insl
call
call
ss
mov
cmp
sbbb
fnstsw
sub
mov
pop
fbld
cmc
repnz
cmp
rcr
push
js
inc
call
loope
rcl
nop
mov
mov
jecxz
add
cmpsl
dec
addr16
sbb
gs
out
xchg
dec
loope
xor
xor
call
call
call
adc
rorb
lret
aaa
stc
adc
das
jle
adc
rorl
lcall
outsb
or
loop
fcmovne
das
shrb
add
jmp
dec
xlat
call
call
stos
das
fucomip
or
jp
dec
push
mov
dec
sti
mov
frstor
push
jg
andb
add
xchg
push
or
cltd
movsb
call
call
lahf
addb
call
call
and
and
lods
adc
push
mov
je
inc
sub
stos
mov
cld
sti
mov
xor
sarl
pop
setle
and
lea
jae
fnsave
pop
jg
icebp
xor
pop
mov
in
cmpl
adc
pop
push
adc
call
call
xchg
in
cmp
repnz
jecxz
daa
mov
sbb
int
jbe
xor
pop
sbb
icebp
adc
decl
std
jp
call
call
outsb
mov
sti
push
and
hlt
and
in
ss
scas
pop
data16
and
imul
push
rcl
stos
sub
fldl
xchg
or
and
and
and
and
and
and
and
push
mov
icebp
and
sbb
call
call
mov
add
and
mov
aad
pop
adc
inc
fadds
out
in
je
pop
stos
push
or
loope
cmpsl
or
icebp
cmpsl
loope
ja
bound
dec
fwait
out
pop
mov
push
push
add
xor
call
call
sti
jg
xchg
add
xchg
fneni(8087
xor
or
mov
cltd
mov
fsub
fsts
dec
inc
pusha
call
rol
ja
jmp
adc
sbb
fxch
inc
mov
cwtd
and
mov
mov
ljmp
int
test
incb
pop
sub
call
les
inc
or
xchg
xor
pop
addr16
mov
or
sub
dec
jb
arpl
jns,pt
or
repz
push
inc
out
addr16
cmp
mov
dec
repnz
out
adc
imul
call
call
inc
rorl
mov
repz
call
mov
sbb
xchg
fiaddl
iret
mov
call
jno
adc
jge
mov
jle
adc
mov
rcr
lahf
push
scas
add
stc
in
test
push
rcrl
repnz
and
and
and
and
and
sbb
daa
shlb
rol
and
call
call
call
sub
sbb
mov
cwtl
xor
push
sbb
cmp
adc
pop
stos
movsl
int3
sub
push
cwtl
jns
clc
add
or
movsl
enter
je
call
call
lcall
das
mov
jo,pn
inc
lods
sbb
dec
push
push
adc
call
call
outsl
pop
push
mov
into
ja
loope
rcrb
jo
mov
cmp
xchg
in
jns
popf
mov
scas
pop
cmp
jnp
clc
xor
or
sbb
inc
push
or
call
call
test
test
lahf
gs
fsubs
lret
cmp
cwtl
dec
movsb
jb
testl
call
call
call
js
jb
punpckldq
call
call
sub
dec
cmp
repz
movsl
xor
lret
add
and
cmp
sub
popa
xor
pushl
jo
or
mov
repnz
pop
daa
outsb
les
dec
mov
mov
cmp
pop
notb
sti
imul
call
outsl
xor
imul
cmp
scas
sbb
and
call
call
cld
add
std
loope
es
fstpl
mov
cmpsb
add
pop
cmc
in
into
add
push
pop
dec
ret
mov
cmpb
inc
and
xor
mov
fdivl
add
xor
jbe
sub
ffreep
fmuls
enter
jp
arpl
dec
and
and
and
and
and
fldenv
call
call
call
add
ja
cmp
cmp
mov
inc
push
cli
repnz
mov
mov
in
mov
sub
jne
call
call
and
cmpsb
sbb
lret
fimull
cmp
sub
in
xor
pop
cld
mov
fwait
lahf
iret
shll
jle
push
sbb
adcb
ret
call
call
sub
aam
cs
or
xor
adc
dec
dec
sahf
push
jno
mov
call
call
pop
jmp
mov
por
cltd
aas
push
add
and
cmpsl
fdivrl
and
cmc
and
xchg
jle
je
clc
dec
adc
mov
xlat
jg
or
call
call
inc
call
and
dec
sbb
arpl
xchg
inc
mov
or
xchg
xchg
test
aam
nop
cmp
iret
cmp
aaa
cmp
leave
dec
cmpsl
xor
inc
push
les
outsb
mov
stos
or
xchg
mov
add
jb
and
and
and
and
and
and
add
call
push
jno
int
call
and
and
and
and
and
and
and
and
and
and
nop
ror
add
cld
dec
mov
pop
test
popf
fs
scas
sub
in
sub
jmp
cmp
fwait
xlat
pop
test
xchg
sub
call
call
lods
loope
sbb
leave
sbb
cmc
jl
scas
sti
jmp
scas
xchg
jl
pop
pop
fwait
add
dec
int
rol
divl
push
mov
mov
push
add
add
inc
enter
mov
loop
lea
jmp
insb
call
call
call
andl
mov
adc
cmp
imul
cli
aam
lea
sbb
dec
and
aam
jle
shlb
out
insl
clc
cmp
stc
hlt
mov
pushf
inc
add
call
call
call
imul
and
and
and
and
and
and
inc
push
fwait
int
adc
ficomps
out
add
lahf
loopne
sub
or
nop
mov
fcmovnbe
mov
mov
cs
adc
movsb
xor
addr16
popa
insb
mov
call
call
xchg
push
sbb
push
clts
sbb
cld
jo
xor
ss
sub
call
call
mov
cs
ljmp
mov
sub
call
call
rorb
ja
cmp
sub
cmpl
call
call
call
xchg
cmp
pusha
in
push
pop
rorb
mov
xchg
outsb
mov
js
notb
sbb
mov
sub
leave
mov
and
mov
repnz
mov
in
imul
stc
popl
out
out
and
and
and
and
and
and
and
push
pop
arpl
call
call
xchg
test
and
aaa
stc
mov
mov
push
sub
jo
and
jne
push
inc
jo
addr16
push
scas
inc
movsb
mov
loope
adc
fcmove
or
sbb
lea
jae
mov
jne
mov
leave
call
call
cli
ja
cwtl
adc
mov
aaa
dec
dec
cmpsl
adc
push
fstpl
pop
shll
lods
outsl
fs
cmp
arpl
xor
call
call
call
inc
sub
xchg
mov
call
call
call
mov
lea
xor
icebp
jns
leave
call
test
add
out
xor
arpl
popa
mov
push
push
call
call
sub
fdivrl
xchg
mov
xchg
fisttpl
int3
jmp
jl
jno
sbb
adc
or
cmp
pop
or
dec
cli
call
call
call
mov
jbe
push
add
faddp
inc
js
rorl
icebp
xor
or
cmp
jo
sbbl
dec
push
jl
insl
scas
cwtl
movaps
test
jb
adc
cmp
call
call
and
inc
pusha
add
insl
add
add
push
mov
loop
dec
push
xchg
int3
pop
add
dec
cmpsb
inc
cmpl
cmc
incl
cs
repnz
mov
stos
sti
leave
mov
cli
mov
pop
sbb
push
in
call
call
call
mov
sub
push
loop
push
movsb
mov
test
stc
inc
or
call
call
call
lcall
dec
push
xchg
in
pusha
mov
fldenv
lock
jns
fildl
jp
and
mov
and
and
and
and
seto
xchg
cli
fildll
pop
call
call
add
xchg
push
rol
mov
bound
xor
sbb
mov
lock
mov
mov
mov
stos
pop
in
adc
pop
fnstsw
fxch
mov
fmull
call
call
mov
lret
xor
lock
aas
scas
popa
sbb
int3
les
fldcw
mov
mov
outsl
jnp
pop
xor
sub
mov
or
enter
aam
insb
and
and
and
and
and
and
pop
stc
adc
adc
xchg
push
in
sahf
outsb
or
lret
ret
std
inc
rep
or
call
call
push
mov
sbb
insl
inc
mov
inc
out
pop
pshufw
stos
sub
mov
test
sahf
mov
or
add
into
dec
adc
int
outsl
lcall
fdivl
jns
in
and
call
call
sbb
jno
loop
int3
cld
add
cwtl
cmp
push
jns
mov
bound
pop
mov
aas
mov
add
xor
pop
inc
push
cmp
fcomip
sbbl
arpl
dec
xchg
inc
mov
xor
call
call
sub
in
or
in
push
call
call
call
xchg
push
pop
jmp
jg
fistpll
repz
call
call
push
bound
xor
mov
sbb
push
aas
cmpsl
test
jle
xor
sub
test
lods
mov
push
dec
jl
add
cmp
mov
xor
inc
dec
and
daa
out
repnz
test
test
bnd
test
in
mov
inc
outsl
ds
dec
fdivp
inc
clc
call
call
or
push
pop
out
pop
aad
shr
ljmp
pop
push
pop
lods
das
ljmp
cld
sbb
fcoml
rcr
cli
jge
xchg
push
pop
mov
add
jecxz
push
stos
cmc
call
call
idivl
adc
jg
inc
jns
test
push
shlb
ret
inc
arpl
jns
fildll
dec
mov
and
and
and
and
and
adc
scas
add
dec
inc
xor
call
call
call
ficoml
shrb
push
mov
cmc
inc
sarl
fwait
adc
mov
cmpsl
aaa
data16
push
test
cmp
or
xor
aad
loopne
xchg
push
push
sub
and
adc
mov
ja
test
xchg
call
call
in
call
push
add
sub
insb
pusha
pop
outsb
mov
jl
and
xchg
mov
and
outsb
xchg
in
addr16
je
in
rorl
call
fisttpl
dec
cli
xchg
fcompl
repz
sbb
sub
fnstcw
pop
and
call
jge
js
int3
push
clc
imul
imul
push
xor
mov
pop
mov
xor
xlat
mov
addr16
xchg
call
call
cmc
mov
xor
pop
insl
jb
aam
iret
or
mov
inc
or
push
inc
jmp
mov
sub
sbb
adc
pusha
lds
ret
dec
sub
rcrl
into
mov
and
cmc
testb
xchg
mov
or
mov
call
call
call
call
fildl
jge
and
popf
xor
mov
sub
cs
jo
sahf
jp
adc
xchg
mov
leave
and
pop
popf
aas
push
cld
inc
add
mov
adc
dec
ds
cwtl
js
mov
ret
call
call
call
pop
repnz
stc
push
xor
lea
jecxz
in
sbb
repz
cltd
je
nop
movsl
pop
jbe
lcall
adc
out
lock
jg
jo
adc
imul
inc
and
and
and
and
and
and
and
lret
sbb
jl
jg
xchg
andb
call
push
mov
push
and
and
and
and
and
inc
push
jg
les
dec
inc
push
in
sub
lahf
cmp
mov
enter
notl
add
stc
add
xchg
pop
jne
ret
ss
cmp
xchg
pop
popa
inc
adc
sbbb
imul
loope
call
call
push
jmp
ljmp
or
lods
ret
pop
xchg
sub
adc
cltd
jne
or
cmp
imul
cs
aad
ds
push
call
call
int3
adc
fiadds
daa
lret
mov
xchg
imull
mov
popf
adc
sub
out
cmp
shll
insb
jno
xlat
pop
out
dec
push
mov
dec
mov
call
call
rorl
rcrl
pop
inc
int
pop
outsl
cmpsl
xchg
inc
movsl
pop
jl
cmpsl
jp
inc
pop
add
mov
sub
push
and
pop
adc
mov
push
fidivrs
lret
dec
jbe
mov
cmp
sub
jmp
call
call
dec
clc
push
and
push
ljmp
jne
pop
int
pusha
xor
fldl
das
aam
mov
adc
popa
xor
test
cwtl
popa
jmp
add
pop
jae
rorl
repnz
enter
call
call
stc
or
and
and
and
and
and
ljmp
jns
sub
inc
dec
cmp
mov
adc
insl
jp
aaa
lret
stos
mov
call
call
cmpsb
or
outsb
lret
dec
movsl
pop
and
and
and
and
and
sub
aad
repz
call
call
call
loopne
sbb
or
rolb
gs
cmc
xchg
pop
adcb
jp
outsl
call
call
lock
negb
mov
addr16
mov
jb
and
and
and
and
and
and
mov
ret
or
movsb
cmp
xorb
addb
add
in
pop
mov
inc
lahf
cmp
leave
sbb
repz
call
call
call
add
bnd
call
mov
push
jl
movsl
jne
lods
mov
mov
test
call
call
test
or
adc
inc
leave
gs
mov
je
enter
cli
sub
test
jp
mov
int3
stc
mov
out
xor
icebp
sbbb
ret
outsb
scas
inc
ljmp
aas
call
call
jns
inc
jecxz
xor
jp
rorl
test
adc
push
or
enter
std
fnsave
cmp
mov
test
out
add
mov
mov
and
and
and
and
and
and
and
jmp
mov
push
loop
dec
and
push
lret
call
call
mov
dec
ret
dec
inc
xchg
sub
enter
mov
inc
xchg
pop
add
int3
mov
lcall
and
and
and
and
and
and
ret
out
out
jp
add
mov
push
and
popa
inc
scas
push
xchg
xor
call
call
inc
gs
cmp
inc
xorl
mov
add
mov
lods
movsb
stos
mov
adc
jb
push
adc
push
jno
mov
adc
aad
scas
jo
cmp
call
call
call
in
les
inc
or
out
fstpt
lret
loop
jl
and
mov
aad
scas
dec
jge
stos
jbe
mov
sub
pop
call
call
call
out
test
jecxz
pop
add
mov
push
leave
sbb
shrb
add
sbb
sub
pusha
cwtl
out
dec
fsubrs
cmp
pop
adc
xchg
xchg
xor
adc
into
out
call
call
mov
add
jle
sbb
outsb
push
ficomps
mov
push
inc
outsb
test
push
adc
mov
adc
push
cs
into
mov
xlat
cmc
aas
call
call
call
call
dec
jp
lock
fisttpl
gs
fidivl
inc
jno
ljmp
shll
popf
mov
or
push
movsb
stos
xor
jo
adc
cmpsb
inc
add
lcall
cmp
pop
inc
imul
add
mov
jae
orl
call
call
adc
arpl
sub
dec
sbb
inc
ds
call
call
pop
out
pushf
mov
xor
fimull
dec
out
out
lcall
lods
sarl
cmp
gs
movsb
cmp
push
adc
inc
shrl
ret
cli
addr16
das
sub
cli
sub
cmp
call
call
cmp
pop
add
test
stos
and
call
call
js
in
xor
sti
lahf
add
jmp
into
mov
push
lds
pop
enter
pop
and
and
and
and
and
leave
add
ljmp
sbb
lahf
movsb
jl
fisubrs
fbstp
adc
scas
aaa
sub
and
push
add
call
call
pop
sub
cmp
imul
jg
xor
call
call
dec
and
shrb
and
inc
lods
add
pop
mov
sbb
sub
adc
mov
dec
scas
and
into
mov
sbb
push
adc
inc
pop
mov
call
call
call
lods
dec
loope
and
and
and
and
and
ja
imul
inc
call
call
adc
jb
cmp
iret
adc
or
call
call
pushf
sbb
js
mov
cltd
xor
call
call
aaa
std
stos
xorb
sub
call
call
call
adc
inc
fwait
pop
mov
sarl
call
pop
push
aam
or
ja
mov
test
fs
addr16
cmpsl
pop
cmp
and
and
and
and
and
and
and
and
pop
aaa
xchg
call
call
outsb
jo
cmpsb
fwait
movsb
aam
in
imul
lret
loope
pop
jmp
call
call
je
xor
pop
add
sbb
jmp
mov
push
xor
and
fistpll
mov
addr16
popa
data16
ficomps
and
lock
dec
imul
scas
mov
mov
cmp
sbb
call
call
call
fsubs
and
and
and
and
and
cmp
and
push
xor
mov
sbb
push
add
push
rol
mov
insb
pop
add
enterw
fistpl
sbb
and
and
and
and
and
and
out
sarl
jecxz
call
call
mov
add
test
xchg
clc
jecxz
add
jnp
xchg
mov
lcall
push
fnstenv
mov
cwtl
mov
cwtl
fs
mov
inc
xchg
pop
jb
mov
call
call
iret
test
push
sbbl
or
movsl
pop
stc
sti
jnp
pop
add
call
call
call
mov
rcll
pop
outsb
ret
lods
mov
outsb
cmpsl
bound
xchg
lods
add
daa
or
aam
rcr
inc
call
call
and
mov
xor
adc
and
and
and
and
and
and
pushf
repnz
pop
jne
call
call
push
addb
clc
loope
mov
cmp
push
xor
sbb
add
or
adc
xchg
mov
adc
inc
jcxz
add
stc
das
loop
pop
pop
cmp
adc
add
fistps
sub
call
repz
loopne
outsl
push
mov
mov
bound
fistl
movsb
dec
ficompl
stos
andl
jae
xchg
fistps
or
dec
adcb
xchg
pop
and
mov
push
xor
idiv
jg
jbe
popa
call
call
call
adc
jl
dec
test
adc
stos
inc
repnz
pusha
ja
roll
push
stos
jecxz
imul
call
ds
sub
inc
dec
add
call
call
stos
sub
mov
or
dec
fldl
lods
stc
insl
mov
xchg
in
inc
aam
test
test
in
add
cmpsb
pop
iret
and
pcmpgtw
mov
call
call
dec
test
lods
loopne
mov
cld
push
mov
loop
and
and
and
and
and
and
push
push
lock
mov
push
push
adc
pop
fwait
loop
jmp
call
call
call
imul
lea
xchg
cwtl
sbb
lea
jne
cld
mov
out
pushf
mov
test
sbb
call
call
mov
outsb
call
call
call
or
stc
adc
sbb
and
cmovnp
xchg
push
dec
and
ret
mov
stc
femms
sub
mov
adc
daa
inc
stc
mov
je
and
xchg
fwait
roll
push
dec
ret
pop
push
sti
push
insl
js
fs
repz
adc
int
push
sahf
les
or
pop
and
and
and
and
and
sub
lock
jecxz
in
pop
dec
inc
or
pop
notl
call
cwtl
dec
aad
or
xchg
dec
jns
daa
mov
das
decb
insb
sub
dec
or
xchg
sar
cmp
and
mov
lods
jb
idivl
push
daa
loope
jno
jmp
dec
jne
sahf
fs
call
call
xchg
and
das
fldl
adc
or
gs
insb
mov
insb
inc
adc
scas
sti
xlat
cwtl
nop
scas
rclb
movsb
lcall
jne
es
push
and
dec
inc
push
jns
ja
sbb
sub
jns
fwait
clc
jbe
lods
adc
mov
add
push
stos
imul
call
call
and
ficoml
mov
aam
repz
les
and
mov
inc
in
cli
adc
js
lods
lods
sbb
add
call
call
call
mov
xlat
subl
dec
ret
mov
xchg
lock
xchg
bnd
push
and
and
and
and
cs
mov
pop
pushf
cmp
mov
loop
insb
in
call
call
call
sbb
lcall
mov
mov
xchg
negl
popf
lds
loopne
fldenv
pop
imul
mov
xchg
sbb
rcl
stos
push
js
mov
aaa
jge
setge
pop
sub
sbb
lods
dec
fcmovnb
xchg
cld
pop
or
xlat
or
in
sub
call
call
push
and
call
call
xor
sbb
call
call
mov
addb
dec
jb
adc
or
fwait
bound
daa
ret
bound
repz
jecxz
push
inc
in
cmpsb
mov
cmp
fcmove
fsts
jb
xchg
pop
dec
int3
inc
add
and
and
and
and
and
or
and
je
cmp
and
outsb
pop
mov
fs
jecxz
sbb
dec
pop
or
call
call
call
add
ret
aas
shr
cmp
subl
call
call
xor
es
sbb
fs
cwtl
inc
fstpl
js
call
call
fsts
in
je
test
pop
test
adc
inc
mov
fidivrl
adc
cmpsl
pop
aas
in
adc
out
adc
scas
add
or
and
xor
and
and
and
and
gs
rorl
sub
add
jl
inc
int3
jnp
imul
adc
call
call
call
int
inc
push
adc
les
dec
es
cmp
call
xor
inc
dec
clc
jg
cmp
mov
and
cli
mov
adc
dec
xchg
add
xor
cltd
je
xchg
pop
popa
test
add
cmp
sub
mov
jle
jge
clc
ret
mov
nop
movsb
std
call
call
call
fsubp
push
jmp
inc
repnz
call
call
cs
aas
dec
push
into
push
gs
pop
sahf
dec
clc
jmp
fwait
push
and
adc
pop
mov
inc
and
leave
cmpsl
call
call
xchg
jno
es
and
and
and
and
and
popf
loopne
inc
dec
xchg
stc
lock
test
pop
jb
mov
and
aaa
shlb
shrb
mov
cld
dec
pop
xchg
push
call
call
divl
sub
xchg
pop
fidivrs
sti
mov
dec
pop
pop
fwait
movsb
xchg
xchg
lahf
out
int
xchg
pop
nop
test
jbe
mov
dec
das
mov
mov
data16
or
call
call
call
add
ja
push
dec
xor
das
dec
or
rorb
popa
push
mov
es
xor
sbb
cmp
pop
or
cli
test
and
inc
cmp
call
call
xor
inc
pusha
aas
push
int3
xor
mov
mov
fwait
and
call
call
call
ret
ljmp
adc
mov
mov
jg
lea
and
and
and
and
jno
sub
jle
lds
adc
mov
mov
orb
ja
adc
adc
psubusw
fsts
push
lds
sahf
setno
fwait
loop
inc
cmp
call
int3
pop
pop
cmp
lcall
push
xchg
je
fsubrl
mov
int3
ret
mov
dec
xchg
pop
movsb
xlat
sbb
shlb
and
and
and
and
imul
and
into
pop
lea
cmc
mov
sar
call
call
out
add
popa
shlb
test
adc
push
xchg
arpl
testb
fs
cmp
es
add
push
testl
sbb
shrl
insb
and
push
mov
in
jle
call
call
in
insb
ljmp
push
mov
cmpsb
mov
int3
in
and
sbb
mov
cltd
icebp
sub
fdivs
cmp
mov
insl
add
ljmp
call
call
call
jbe
addr16
xor
call
xchg
imul
xor
mov
jmp
xchg
pop
sub
ror
pushf
push
push
cmp
addb
pop
outsl
push
scas
sbb
call
call
call
int3
xor
jecxz
arpl
mov
adc
lds
dec
outsl
call
call
call
dec
dec
xorl
jbe
rol
mov
popa
out
xchg
test
mov
mov
xchg
rolb
xor
lcall
call
call
call
movsb
or
out
adc
inc
das
sub
inc
fcmovbe
adc
and
pop
in
insb
jg
aad
cmp
std
cld
cmp
popf
pop
out
shll
cs
sbb
xchg
lea
add
jl
and
jo
test
jbe
insb
outsl
push
add
sbb
pop
and
jno
adc
popf
call
call
call
data16
and
mov
pusha
fcoms
stos
pop
ret
sbb
imul
punpckldq
cwtl
popa
sti
xor
gs
push
popf
lea
popf
hlt
shrl
leave
adcl
jno,pt
dec
outsl
stos
xchg
jae
fadd
or
and
and
and
and
and
and
int
jne
inc
pop
call
call
and
sbb
push
icebp
dec
lahf
clc
push
daa
inc
push
sbb
div
outsb
bound
lret
cld
stc
int
fstps
add
mov
outsb
push
jae
dec
mov
aad
adc
and
and
and
movsl
repnz
jb
call
call
mov
jne
push
xchg
into
cmpsb
arpl
outsl
and
fistpll
push
add
jae
adc
les
sbb
pop
jo
cmp
fidivrl
push
bound
push
stc
or
adc
cmpl
push
mov
sbb
jne
call
call
stos
test
or
clc
pushf
loope
iret
aam
push
jge
dec
test
lcall
xor
aam
lretw
lods
add
js
mov
in
sbb
and
jg
call
call
test
bound
test
in
push
sub
mov
dec
push
inc
add
add
je
es
ja
xor
dec
jo
push
insl
xchg
les
sbb
pop
or
fstpt
out
mov
push
push
pop
cmp
aaa
mov
sbb
mov
shrl
call
call
call
add
or
pop
subl
rorb
loopne
pop
ja
inc
push
push
call
call
call
mov
jmp
add
or
pop
addr16
test
dec
jne
jbe
pop
into
fwait
pop
ss
push
scas
scas
push
mov
inc
xchg
lret
testb
and
and
mov
fisttpl
push
sub
jnp
cwtl
sahf
cmp
xor
adc
cs
jmp
enter
adc
mov
call
call
repnz
cmp
sub
fdivr
mov
call
call
call
jb
jns
xor
aas
mov
bound
mov
ror
push
movsl
inc
jbe
nop
inc
xor
pop
dec
sti
sbb
cld
arpl
int
inc
add
fcmovu
leave
shr
call
call
addr16
in
push
test
jl
fwait
cld
mov
call
xchg
jl
xor
mov
and
and
and
and
jl
fcomip
popa
pop
into
inc
movsb
push
jnp
call
call
popf
cmp
cld
je
adc
xor
test
call
call
call
mov
lods
in
pop
insl
lss
mov
and
mov
fwait
call
call
call
decb
call
call
and
sarb
push
loop
inc
jns
adc
xchg
pop
cltd
add
imull
das
test
aas
fidivrl
lret
inc
fadds
ja
sahf
lods
push
popf
push
test
mov
insl
push
ret
mov
call
mov
cwtl
xchg
mov
das
cmp
call
call
call
leave
dec
shl
add
push
popa
psubsb
call
call
call
push
addl
mov
scas
push
mov
jne
or
push
dec
dec
sub
inc
addr16
stos
and
lea
lods
jg
ss
mov
out
call
call
outsb
xor
and
jnp
test
outsb
outsb
lret
adc
les
ds
pop
les
int3
cmp
xchg
sub
cld
xchg
imul
dec
negb
inc
loop
call
call
inc
dec
sbb
add
xor
ds
push
dec
call
call
call
xorb
cmp
out
fisubs
jle
lret
mov
push
inc
outsb
pop
insl
xor
xchg
test
mov
call
call
in
cmp
mov
sbb
loopne
out
mov
cmc
cmp
jecxz
rclb
add
add
jl
test
sbb
cmp
loopne
call
call
call
call
aaa
aad
aad
jg
xchg
adc
dec
call
jle
lods
aaa
das
lret
and
mov
inc
call
call
call
and
fcompl
inc
ss
pop
mov
jmp
in
sti
inc
mov
negl
call
call
call
and
and
and
and
loopne
shlb
jns
orl
popf
repnz
call
call
inc
inc
dec
pop
popf
shll
test
pop
adc
fisubrl
fstpl
mov
dec
pop
out
cmpsb
xor
pusha
mov
cmp
loop
out
pusha
and
call
jno
ret
es
mov
push
into
fisttps
call
call
cmp
negl
push
iret
adc
jmp
or
test
mov
adc
pop
icebp
jae
dec
xor
inc
add
dec
out
fs
pop
mov
repnz
ret
cli
ljmp
aas
js
data16
jae
sbb
sbb
adc
call
stos
push
mov
sub
cld
inc
mov
jl
cmp
hlt
push
dec
add
sbb
dec
call
call
sbb
jbe
pop
or
out
xor
sub
dec
push
pop
rorb
imul
in
push
dec
insl
icebp
and
cltd
ss
mov
xchg
fs
mov
fwait
loop
xor
call
call
sub
xchg
xor
call
call
call
andl
xchg
call
jl
cld
enter
mov
adc
xchg
loopne
into
cmp
add
or
in
gs
iret
and
jae
loop
fdiv
call
call
mov
adc
loop
jnp
and
int3
lods
daa
and
and
and
and
rdtsc
push
inc
or
mov
and
jnp
outsb
lea
dec
xor
mov
sub
outsb
dec
mov
push
mov
xchg
xor
jnp
enter
call
call
hlt
aam
loop
and
addr16
or
fcmovb
daa
rcrb
sbb
inc
imul
xor
fmull
movl
js
fiadds
xor
ficoml
aas
aam
bound
add
push
fidivrl
push
out
cmp
idivb
call
call
call
adc
shrb
cmpsl
mov
in
std
push
cmp
stos
fsubrl
neg
pushf
pop
cli
iret
icebp
pop
or
sub
int
rcrl
fsubs
mov
inc
aas
mov
xchg
jmp
int
jg
xchg
adc
xor
xchg
xor
jmp
imul
cwtl
outsl
jns
loop
call
call
call
call
dec
aaa
add
vmread
xlat
add
sbb
xor
cs
xor
and
cmpsl
xor
test
sbb
aad
pusha
sub
mov
and
mov
sub
xor
fdivrs
je
call
call
call
mov
mov
xchg
jnp
out
cmp
inc
push
push
shrl
cli
scas
add
xchg
mov
adc
xchg
sub
cmp
cmp
xor
call
imul
call
call
add
dec
cmp
jo
or
xor
and
and
and
and
and
jbe
sbb
and
add
adc
dec
sti
loopne
and
add
fisubrs
sbb
xlat
push
ljmp
test
call
call
adc
add
and
xchg
sbb
and
ja
push
mov
out
push
scas
mov
popf
in
call
call
call
in
insb
movsl
jne
arpl
ljmp
call
in
mov
and
pop
daa
fidivs
cmpsl
sbb
sub
xchg
dec
call
cmp
pop
and
arpl
jae
in
repz
mov
jl
dec
jne
fisttpll
mov
push
mov
sti
js
sbb
imul
call
call
movsl
xchg
dec
mov
mov
xchg
mov
push
xor
shll
call
call
loopne
push
push
les
lahf
pusha
out
bnd
jecxz
repnz
add
jns
mov
sub
pop
popf
push
lcall
pop
imul
and
call
call
cmp
and
aad
repz
loopne
cmp
push
aad
mov
xchg
xor
clc
pop
add
or
dec
decl
mov
adc
cmpsl
roll
cmp
iret
sti
lock
xchg
jbe
shl
xor
xorl
or
loopne
cli
jge
call
call
call
in
pop
cmpb
enter
insb
ds
xor
aaa
out
in
imul
mov
cmp
aaa
cmp
nop
call
call
jg
sbb
mov
call
call
ror
jo
aaa
and
cmc
push
adcl
jnp
and
and
and
and
and
and
mov
cld
sub
lods
and
jbe
inc
stos
test
inc
mov
div
inc
push
lds
ds
pop
int
fcomps
dec
fs
pop
call
call
call
sbb
and
push
les
inc
mov
ret
pusha
nop
or
dec
adc
call
lcall
and
mov
pop
push
xchg
mov
mov
cmp
push
inc
pusha
les
or
xchg
icebp
jo
xor
call
call
mov
mov
sub
cmc
movsb
fidivs
pushf
ljmp
adc
in
lcall
mov
lds
cmc
pop
aam
mov
xor
fsubs
mov
sub
jne
dec
vmread
call
fistpll
push
add
pusha
fnstenv
call
call
lods
adc
ljmp
mov
fbstp
arpl
push
xchg
pop
filds
xor
sub
or
popa
jbe
into
in
cmp
jbe
jnp
fcoml
jno
and
and
and
and
and
and
fwait
pop
sti
call
call
or
push
aaa
mov
shlb
daa
add
movsb
std
and
xchg
lock
inc
cmp
enter
fs
push
repnz
sbb
adc
shr
call
call
faddl
mov
aaa
ljmp
sub
insl
inc
mov
js
arpl
call
xchg
push
add
mov
push
int3
adc
adc
lock
xchg
jmp
cmp
and
test
inc
pop
jbe
jbe
dec
in
test
xchg
add
jbe
imul
xchg
dec
sbb
subl
ret
test
call
call
subl
arpl
mov
leave
push
test
daa
mov
xor
inc
push
cli
stc
jle
cmp
imul
mov
jg
sub
arpl
imul
inc
pop
aaa
dec
jbe
call
call
sbb
clc
test
xor
jmp
xchg
push
insb
adc
in
and
test
pop
std
pop
adc
and
aad
jo
call
call
lods
and
and
and
and
and
and
and
mov
icebp
push
iret
mov
ret
pop
ror
cwtl
in
jb
insl
push
cmpsb
cmc
test
repz
shrl
call
call
addr16
test
iret
fwait
pop
test
adcl
call
daa
xor
in
and
push
xor
call
call
mov
test
pop
cmpsb
and
and
and
and
and
and
and
and
mov
data16
std
pusha
aam
dec
jl
pop
in
jecxz
jl
dec
push
addb
sbb
mov
es
sahf
fimull
mov
cwtl
in
lods
js
repnz
dec
mov
sub
ljmp
fcmovb
call
call
call
imul
es
hlt
pop
push
push
clc
push
jns
out
pop
or
and
dec
iret
test
loopne
mov
pop
fsubrl
xor
inc
inc
mov
addr16
call
call
call
repz
xor
js
fldt
scas
push
push
fwait
adc
in
arpl
lds
mov
sarl
fldl
insb
movsb
xor
sti
jbe
add
lea
jge
and
sub
call
call
fstpt
adc
repz
or
out
call
push
push
adc
xlat
lldt
mov
cmpsl
sahf
aaa
mov
jecxz
xor
call
call
call
fistl
outsl
adc
popf
dec
rcrb
and
mov
fs
inc
lock
xor
cmpsl
movsb
sahf
divl
mov
adc
or
cmpsl
jmp
call
call
sbb
out
inc
xor
fs
push
imul
xchg
jp
xor
js
or
cs
pop
lcall
ljmp
sbb
rorl
mov
outsl
jle
fwait
jo
dec
or
mov
call
std
jmp
push
test
mov
daa
les
and
pop
or
in
jbe
mov
dec
xchg
das
cwtl
test
lahf
lret
insl
pushf
iret
cmp
data16
mov
sbb
dec
out
adc
mov
call
call
aas
es
xchg
push
pop
clc
pop
scas
lret
push
mov
fistpl
inc
cmp
push
jecxz
leave
xchg
mov
and
and
and
and
and
inc
dec
pop
xor
clc
divb
or
sbb
movsl
cmp
call
test
add
cmp
faddp
mov
es
pushf
call
call
call
or
jo
xlat
push
inc
and
and
and
and
and
and
dec
and
xor
cmp
jnp
fstps
ror
shll
addr16
rcrl
scas
and
shll
shr
cmc
ret
icebp
out
and
cmp
adc
and
and
and
and
and
mov
and
sub
and
and
and
and
and
and
and
mov
insb
sar
rcl
lahf
repnz
lds
add
dec
ss
and
xchg
loope
rorb
add
insb
push
inc
push
inc
and
jmp
call
call
push
gs
call
loop
and
and
and
and
and
dec
repnz
cmp
or
mov
call
call
add
sbb
cmpsl
fsts
dec
pop
sbb
call
call
call
push
cmpsl
aas
loope
in
jne
dec
dec
inc
xchg
fdivrs
hlt
inc
orb
push
or
enter
pop
aad
xchg
arpl
call
call
call
jb
hlt
mov
adc
imul
fbld
dec
aam
shl
cmova
mov
jmp
push
fistps
shll
lock
mov
lahf
mov
in
lds
or
bound
lret
adc
ret
call
leave
sbb
test
aaa
cs
pop
popf
and
dec
jecxz
stos
std
icebp
jnp
adc
test
xchg
jae
mov
jae
call
call
popa
cmp
scas
js
jbe
or
rorb
inc
jne
ss
call
jmp
adc
and
and
and
and
jmp
xlat
sub
scas
call
call
movsl
mov
addl
cmp
enter
test
rorl
popf
and
and
and
and
and
and
and
aaa
test
inc
nop
push
sbb
cs
mov
xchg
mov
mov
aas
push
sub
add
popf
sbb
ret
movsb
inc
call
call
scas
into
sbb
outsl
imulb
outsb
add
or
dec
jp
push
xor
jl
jb
aaa
xchg
or
fimuls
pop
and
aad
pop
dec
xlat
stos
dec
jbe
mov
and
and
cltd
lds
stc
insl
pop
cwtl
mov
call
call
out
push
dec
dec
test
hlt
mov
push
mov
mov
push
fs
push
imul
push
addr16
mov
add
fildll
inc
mov
daa
mov
call
call
rorl
mov
push
rorb
inc
adc
mov
repnz
idivl
sahf
mov
xchg
lret
mov
jl
and
rcrb
ret
inc
nop
pusha
mov
popl
cmp
call
call
call
jmp
int3
call
call
fwait
imul
enter
call
cmp
mov
adc
mov
jg
xchg
inc
repz
cmp
setno
sub
sbbb
shlb
lret
pop
jo
and
shll
and
and
and
and
add
ret
sbb
insl
jg
subb
into
cmp
ret
int
pop
call
call
adc
push
aas
jno
pmaxub
add
push
xchg
iret
inc
jmp
sub
add
bound
mov
lds
cld
sub
stc
inc
cmpb
mov
idiv
fs
subl
flds
mov
fmul
call
call
call
jns
cmp
sti
sahf
adc
rcrb
ja
outsb
call
call
call
sti
xchg
lods
mov
mov
sub
push
sbbb
mov
test
xchg
lods
es
adc
stos
cwtl
jmp
xchg
jnp
imul
mov
push
xor
push
xlat
cmp
out
push
or
push
sub
rcl
call
popf
pushl
sahf
fwait
mov
call
call
xor
hlt
xchg
popf
or
test
pop
repnz
repz
and
pop
in
test
inc
mov
ror
pop
insb
cwtl
leave
ror
roll
gs
mov
insl
out
add
sub
bound
stos
call
call
call
out
imul
cs
dec
sub
cli
cmp
fcmovnbe
lock
lds
fisttpll
and
and
and
and
and
cld
mov
push
push
or
push
imul
cmpsb
pop
mov
sbb
xor
or
mov
add
in
call
call
cmp
scas
fiaddl
dec
stos
test
notb
dec
into
arpl
mov
ja
loope
sbb
dec
cmp
aaa
fs
ss
clc
push
mov
or
call
call
es
mov
cmpsl
sahf
inc
scas
jp
arpl
dec
inc
call
call
inc
insl
lods
dec
and
bound
repz
inc
outsl
dec
or
pop
adc
mov
call
int3
outsl
jbe
pop
sbb
ja
push
xor
jle
push
jbe
aas
add
xchg
sbb
push
ss
repnz
shrb
mov
stos
and
in
fcmovne
testl
inc
xchg
sub
mov
sbb
pop
clc
mov
out
outsl
addb
repnz
xchg
call
call
call
push
ds
inc
jbe
jns
stos
movsb
adc
adc
enter
mov
and
and
and
inc
xchg
mov
cs
in
lods
sbb
mov
or
mov
test
lahf
dec
pop
add
call
call
addr16
out
ja
adc
enter
sbb
aam
inc
mov
mov
cmpsl
xor
pop
imul
lret
sub
loopne
call
call
call
mov
add
pop
sti
push
or
orb
mov
dec
push
repnz
mov
call
call
gs
insl
sub
dec
cmp
scas
add
icebp
cli
mov
jl
dec
ret
push
mov
pusha
jg
jae
imul
dec
aad
jmp
pop
dec
leave
fcomps
notb
insl
sbb
mov
call
call
call
adc
mov
adc
pop
cmp
mov
adc
cmp
call
call
xor
push
sub
call
call
lods
mov
adc
ds
mov
jo
pop
mov
aam
stos
cmc
sub
xchg
test
lahf
in
lcall
jp
pminsw
fldt
das
in
jne
push
out
mov
fwait
pop
push
cs
mov
outsb
fimuls
call
call
call
les
xor
sbb
dec
insb
repz
xor
adc
mov
and
fmul
mov
sbb
mov
jne
inc
nop
stc
bound
cmp
add
cmp
inc
add
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
lcall
inc
add
inc
add
add
add
jmp
cltd
inc
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
lcall
inc
add
add
outsl
addr16
insl
cmp
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
lcall
mov
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
ljmp
mov
inc
add
jmp
mov
push
mov
inc
add
add
add
inc
mov
inc
add
add
add
pushl
inc
add
inc
add
add
add
add
lock
shrb
add
push
push
inc
push
pop
push
or
inc
mov
in
xchg
xchg
add
add
inc
cmp
push
inc
xor
dec
inc
dec
push
pop
push
inc
sub
xor
outsl
jb
xor
outsl
insb
jne
imul
pop
jb
insb
gs
jae
pop
insl
popa
imul
add
add
add
add
lock
add
in
push
int3
int3
int3
pop
cwtl
add
ss
inc
push
add
in
sbb
test
add
adc
pop
or
stos
mov
loop
add
rcr
mov
std
push
inc
imul
push
adc
mov
iret
les
leave
cs
lea
jns
add
shll
call
call
and
xor
das
aam
dec
outsb
jae
jnp
mov
test
pop
js
sub
mov
xchg
pop
ror
xor
mov
adc
repnz
jg
imul
mov
add
sub
sbb
jl
jnp
push
cmp
icebp
clc
jne
shrl
mov
sbb
push
mov
call
or
adc
adcl
call
call
xor
or
xchg
pop
test
je
sbb
ret
es
call
call
sbb
cmp
rolb
repnz
pop
xchg
push
mov
addb
rep
inc
and
cmp
pop
or
call
call
call
mov
xor
jb
push
hlt
das
sub
or
je
mov
sarb
and
aaa
push
pop
pop
cmp
push
mov
stc
fisttps
call
call
fcomp
dec
adc
les
sbb
push
add
aad
inc
ss
inc
js
inc
flds
daa
out
xor
cmp
imul
cmc
lahf
and
pop
mov
jno
mov
call
call
xchg
fisubs
push
call
call
jns
xor
add
push
mov
repnz
add
cmp
mov
lret
enter
mov
dec
outsl
call
and
and
and
and
push
mov
or
in
call
call
movb
sub
jns
call
call
pop
xchg
xchg
pusha
sahf
insl
pop
pavgb
sbb
addr16
mov
dec
mov
loopne
cmpsl
jnp
dec
test
jo
shrl
mov
call
call
call
outsl
mov
fcmove
push
pop
inc
jne
sub
std
pop
cmovs
jle
call
call
cmp
add
xchg
and
adc
add
es
push
mov
inc
lock
sub
add
xor
adc
loop
jbe
mov
sahf
mov
jae
or
jle
push
call
call
call
rorb
cmp
push
out
inc
push
add
xor
pop
cli
mov
das
repnz
inc
jae
sbb
xchg
enter
dec
lods
add
movsl
add
jg
clc
je
sbb
movsb
xor
sub
dec
jne
jle
sub
and
and
and
and
and
mov
sbb
jge
or
inc
call
call
nop
pop
inc
in
outsb
clc
mov
push
sub
jns
int3
xor
jp
push
call
call
shl
push
out
and
cmp
fisttpl
shr
fs
pmaddwd
add
dec
fisubl
aas
sub
cwtl
gs
xchg
shll
sarb
mov
adc
pop
out
adc
imul
call
call
rep
scas
sti
sub
jno
call
call
stc
jbe
push
sub
sahf
jle
inc
movsl
sub
inc
ss
je
lods
push
jp
xor
and
and
and
and
xchg
xchg
dec
ja
dec
pop
or
cs
add
icebp
call
call
call
sub
cmpsb
xor
and
adc
jl
mov
std
jnp
jb
pop
repnz
mov
ja
aas
jge
mov
mov
inc
gs
je
inc
rcll
call
call
or
inc
xor
adc
in
inc
imul
cmp
ret
dec
jae
jne
sbb
jp
pushf
lea
push
add
inc
push
enter
hlt
cmpsl
in
fisubl
je
push
subl
mov
inc
mov
jg
fimuls
je
imulb
call
call
sub
xchg
int3
xor
lock
sbb
test
test
sti
cmc
pusha
inc
xchg
pop
std
xchg
push
xor
cli
arpl
cs
pop
push
das
jl
mov
inc
xor
xor
dec
jmp
push
sub
andb
sar
jl
int3
push
je
sbb
sahf
scas
sbb
pop
call
call
repz
dec
pop
sbb
mov
mov
call
call
call
mov
add
or
fcoml
outsl
or
call
call
call
mov
jecxz
lods
movsb
jo
inc
std
add
push
adc
call
call
cli
jno
ljmp
mov
movsl
inc
pop
pop
mov
mov
pop
nop
push
jb
dec
mov
dec
inc
sbb
ja
dec
lods
cs
and
and
add
xor
xchg
adc
cmp
call
mov
adc
bound
xchg
clc
dec
mov
xchg
sbb
push
stos
mov
mov
je
jp
jbe
sarb
call
call
jb
movsb
mov
jle
add
push
jp
and
sarb
xchg
push
stos
les
mov
jae
lcall
call
call
push
mov
cltd
outsb
xor
insb
or
push
adc
sahf
and
cmovs
enter
xchg
repz
pushf
dec
mov
repz
call
call
call
call
xchg
xchg
sub
or
icebp
pusha
stos
dec
mov
das
sub
inc
xor
push
inc
cmp
and
and
and
push
shlb
or
ds
and
call
call
call
xchg
dec
fcoml
leave
popf
aad
in
cs
ja
jns
dec
xchg
or
xor
adcl
sub
inc
gs
mov
sbb
mov
call
call
sahf
shll
in
loopne
add
push
test
or
rcrb
int
dec
push
stc
xor
enter
lcall
sbb
and
mov
test
cmp
call
ljmp
rcrb
in
clc
pop
pop
cmpsl
repnz
call
call
call
in
adcl
ja
and
cmp
xchg
subl
add
adc
add
jl
and
sub
dec
imul
sub
adc
push
call
call
call
fiaddl
xchg
call
add
xchg
fsubrl
xchg
hlt
push
or
jecxz
fcoml
add
mov
mov
pusha
pop
jge
jle
les
lret
inc
call
call
in
push
and
test
orl
add
sub
call
call
xchg
adc
cs
and
cwtl
sub
cld
lret
ljmp
insb
xor
dec
imul
les
pushf
mov
out
lds
pop
mov
adc
scas
and
andb
push
out
pop
dec
pop
mov
call
call
push
jae
inc
lods
scas
daa
test
adcb
ss
int3
mov
call
out
cli
loop
ret
aam
mov
lret
lret
xor
ror
aam
mov
shlb
sbb
mov
xchg
loope
mov
popa
es
push
and
adc
and
and
and
and
and
and
call
call
dec
jp
loopne
sub
mov
mov
jb
dec
loop
jns
fstl
jp
xchg
rcrb
std
fcoml
test
jnp
out
idivb
cmpsb
mov
hlt
jbe
mov
pop
inc
add
in
mov
stc
fwait
adc
cmp
std
pop
mov
call
call
xchg
sbb
adc
mov
push
xor
dec
ds
call
call
push
jg
scas
and
adc
lods
gs
repnz
jp
mov
inc
ret
stos
mov
lahf
in
mov
adc
mov
call
call
popa
cmp
or
push
insb
jnp
add
push
insb
ror
cmc
ret
mov
movsl
pop
jmp
and
add
dec
push
jne
sbb
inc
scas
stos
jp
jmp
cmp
hlt
mov
pop
test
call
call
out
add
call
call
inc
into
add
lods
dec
cmp
jge
or
call
push
sbb
add
dec
imul
dec
push
stos
orl
cmpl
jmp
imul
or
and
popf
push
dec
out
clc
aaa
push
inc
call
call
dec
shl
pop
popf
and
jmp
pop
xchg
mov
xchg
outsl
call
call
cwtl
or
cmp
rcll
call
call
xchg
push
push
ja
shlb
lret
push
cmp
mov
add
mov
call
call
call
pusha
push
in
and
repnz
push
push
in
sub
xor
outsl
push
push
jnp
jae
adc
xor
rcr
mov
or
lods
add
mov
loopne
xor
jle
sub
call
call
push
fwait
insb
jp
icebp
das
mov
pop
cmpsl
sub
ret
and
and
and
and
jo
daa
into
ja
push
mov
jb
fwait
shlb
and
and
and
and
and
mov
icebp
sbb
cwtl
mov
aam
repz
add
jns
adcl
test
pushf
imul
test
call
call
mov
out
gs
and
mov
cs
xchg
fsubrp
call
call
xchg
xor
mov
adc
jle
adc
movsb
cltd
test
mov
mov
aam
sub
xchg
filds
jmp
xor
pop
cmpsb
sub
loop
call
call
call
fbld
sub
test
inc
les
xor
repz
sub
dec
ss
outsb
cmp
sbb
lock
ret
clc
dec
js
loopne
sbb
mov
adc
mulb
inc
inc
popa
push
pop
cltd
xor
inc
sarl
sar
ljmp
loope
call
call
fdiv
mov
inc
js
mov
adc
sbb
es
sarb
adc
daa
pop
jg
call
call
call
mov
cmp
mov
sahf
inc
fs
mov
insb
sub
incb
fld1
call
call
addr16
dec
sbb
pop
inc
or
push
scas
cltd
sbb
shlb
sub
std
or
js
and
sub
and
fnsave
jno
fstpt
lds
orb
and
and
and
and
int
mov
xchg
sbb
cld
addr16
cltd
mov
call
call
call
sbb
jecxz
xor
cmp
fcmovnu
scas
cmp
mov
ss
call
clc
jbe
movsl
or
int3
outsl
sbb
flds
pop
lds
inc
addr16
add
sub
out
call
call
cmp
lock
mov
xor
adc
leave
jle
mov
call
call
rclb
fs
push
pop
std
icebp
xlat
sub
cli
insb
inc
aaa
data16
lcall
and
and
and
and
inc
push
leave
lret
cmp
xor
xor
push
push
adc
outsb
lcall
push
addr16
call
call
call
daa
push
adc
das
jo
xchg
imul
and
pop
fldt
popa
jno
push
mov
lret
cmc
or
mov
push
pop
inc
in
cmp
jns
call
call
dec
or
cmp
sbb
push
jl
dec
add
popa
int3
pop
mov
pcmpgtb
xchg
jno
movsb
addr16
sub
dec
cmpsl
xchg
jae
jmp
sbb
cwtl
dec
imul
call
call
xchg
lea
pop
and
test
pusha
out
ja
pop
mov
fstpl
iret
scas
adc
and
sub
imul
pushf
lcall
mov
sbb
call
call
call
ficoms
xor
or
sbb
mov
dec
scas
xchg
xor
and
and
and
and
and
mov
cwtl
mov
rcr
pop
into
pop
into
cld
out
loop
xchg
pop
das
stc
mov
movsl
cmp
xchg
push
mov
std
mov
loopne
mov
fwait
mov
lret
xchg
mov
call
inc
test
push
lods
loope
test
sti
mov
call
enter
inc
xorb
in
leave
test
movsl
out
mov
cli
mov
push
pop
idiv
negl
fistps
clc
mov
xor
cld
pop
jns
adc
cwtl
gs
push
mov
hlt
jbe
enter
gs
insb
mov
jae
xchg
aam
idivb
call
call
call
mov
scas
mov
mov
arpl
fisttpl
call
aad
cs
in
xchg
mov
paddd
imull
mov
ret
ficoms
lods
mov
hlt
add
jl
aaa
ljmp
lods
cmp
loopne
call
call
call
cld
mov
sarl
in
pop
in
loopne
insl
sahf
std
mov
nop
cltd
iret
inc
fistpll
jmp
xchg
mov
adc
mov
call
call
xlat
mov
in
call
call
ss
call
call
in
outsl
dec
lea
jo
hlt
sbb
mov
std
nop
dec
test
push
pop
lock
call
call
aam
xchg
mov
in
cmp
mov
or
mov
sbb
lods
xor
test
and
and
addr16
aam
lcall
cltd
out
mov
in
loopne
add
out
xor
xchg
es
or
push
pop
mov
cli
add
jmp
daa
dec
negb
call
js
inc
outsb
mov
fucom
pusha
into
in
pop
inc
popf
pushf
outsb
fstp
xchg
call
call
call
dec
and
test
repz
jb
cmc
xchg
nop
and
enter
sahf
lcall
les
push
sti
ret
ljmp
loope
xor
rolb
lret
xchg
fnsave
aad
outsb
fisubrs
call
inc
shll
rcll
lock
je
out
mov
lds
mov
and
sbb
push
in
cmp
ret
mov
call
call
and
out
mov
mov
into
cmpsl
loop
lock
lea
inc
testb
or
std
jmp
lahf
mov
call
call
call
loopne
loope
call
call
shl
mov
popf
adc
dec
test
sbb
mov
rclb
mov
cmp
negl
cmc
mov
in
mov
in
les
fs
idivb
int
lea
adc
call
call
scas
stc
pop
fidivs
pop
test
xor
f2xm1
cwtl
psubsb
call
call
lret
testl
sbb
loope
nop
hlt
shrl
inc
loopne
lds
jne
jbe
pop
loop
push
std
shr
aas
mov
sti
inc
cmp
negl
sub
stc
fidivs
daa
jns
mov
call
call
mov
fs
dec
dec
lret
lret
and
loopne
or
popf
and
and
and
and
and
and
mov
shll
addr16
push
mov
call
sub
xlat
mov
mov
dec
sub
adc
fcoml
call
call
call
cmp
loopne
mov
out
pop
sar
icebp
iret
add
in
arpl
test
bound
and
adc
pushf
je
test
call
xor
in
cld
and
adc
aaa
xchg
pop
shll
out
cwtl
call
call
call
call
sub
sub
fildl
adc
js
test
call
call
enter
jmp
jb
mov
mov
and
insb
push
push
fsts
test
cmp
jmp
dec
or
popa
and
jmp
hlt
imul
xor
test
lcall
in
inc
mov
andb
jne
sar
pusha
push
std
lods
mov
call
call
call
leave
fsubr
xlat
push
stc
bound
enter
lret
mov
loopne
in
js
shr
outsb
rorb
outsb
shll
aas
pop
fistl
icebp
mov
jmp
test
call
enter
add
test
cmp
fdivrl
aaa
fcompl
cmp
loope
out
cmpsb
mov
xchg
jno
cmp
fcomps
je
stc
rcr
mov
call
call
call
decl
incl
shrb
xchg
icebp
subl
stos
mov
loopne
mov
icebp
filds
dec
xchg
xlat
mov
call
call
cmp
int3
cli
cli
imul
and
mov
xchg
sbb
and
and
and
and
hlt
push
jecxz
mov
ret
in
mov
pop
lods
rcl
xor
sbb
xchg
call
call
fsubr
and
mov
push
dec
mov
call
call
fisubrs
pop
and
mov
idivl
call
cld
stc
or
xchg
call
call
stos
or
shrl
test
push
lods
fucomip
cmpsl
jg
jmp
xchg
mov
push
icebp
pop
pop
jg
ret
inc
pop
jmp
shrl
lahf
andb
icebp
lds
mov
lods
call
divb
or
cmc
mov
call
call
mov
pop
popa
sub
orl
call
call
test
cmpsb
mov
daa
rcll
and
pop
xchg
mov
cmp
mov
call
call
ret
in
xchg
sbb
negl
dec
dec
push
fwait
movsb
adc
mov
lock
fcmovu
cli
or
sar
mov
sbb
cli
shll
or
fucomip
call
call
movb
and
and
and
and
and
test
nop
icebp
pop
sti
popf
add
inc
pop
repz
lret
call
call
call
ds
sbb
enter
int
stos
push
std
or
pop
xchg
outsl
sahf
das
ret
frstor
and
and
and
and
mov
add
out
sub
pop
pop
adc
pop
xor
nop
and
shr
call
call
mov
lods
mov
sub
cli
mov
or
mov
movsb
mov
std
and
and
and
and
and
and
and
cmp
outsl
icebp
movsb
fsts
inc
repz
xchg
cli
cmpsl
repz
mov
add
scas
ret
lret
xor
call
call
test
xchg
mov
push
outsl
lcall
and
mov
sbb
les
out
roll
mov
inc
mov
daa
loop
int
push
repnz
scas
repnz
aas
hlt
push
mul
mov
sar
test
iret
aas
test
xchg
cmp
int
xchg
xchg
mov
fsubr
call
call
dec
mov
and
and
and
and
lock
cmp
fisttpl
xchg
enter
lahf
out
mov
jmp
xor
add
nop
push
and
xchg
xor
lock
je
push
mov
idiv
sub
call
shll
call
inc
fbstp
jne
mov
fimuls
popf
in
mov
jmp
cmp
test
icebp
icebp
mov
call
call
call
dec
sahf
iret
or
movsl
fwait
in
push
mov
stos
cmc
jmp
dec
ja
mov
stos
inc
sarl
xchg
sarl
cmpsb
sti
xchg
les
mov
jae
mov
lock
sbb
testl
call
call
iret
mov
in
addr16
out
movsb
mov
sahf
sub
andb
inc
out
hlt
daa
lock
push
scas
mul
cmp
jecxz
psubsb
call
fwait
shr
les
orb
cmc
iret
cmpsb
jne
mov
in
sysret
lret
out
mov
mov
cmp
push
stc
mov
and
je
call
call
call
mov
out
icebp
and
fistpl
in
rorb
call
call
call
push
inc
shl
jae
pop
popa
test
test
clc
xchg
leave
cmp
and
nop
lcall
ljmp
dec
and
and
and
and
and
and
and
mov
cmpsl
xchg
loopne
dec
xchg
icebp
sub
aad
mov
call
call
popa
outsb
ss
popa
outsb
pushf
adcl
int
cltd
dec
mov
out
mov
mov
lahf
mov
call
call
xlat
pop
cmpb
mov
or
clc
call
push
ljmp
adc
in
mov
lods
inc
mov
mov
aaa
in
mov
inc
shr
shr
call
call
push
sub
call
call
icebp
xlat
pop
lret
jns
mov
stos
cmp
inc
mov
mov
insb
mov
cltd
in
sbb
and
xchg
ljmp
dec
cmp
pusha
push
push
mov
sarl
test
jge
stos
jecxz
lret
loopne
cmpsl
negl
fcompl
imul
faddl
inc
mov
xchg
scas
mov
call
call
in
mov
sub
jnp
jmp
mov
loop
xchg
cmpl
cmpl
push
jns
push
ss
push
adc
or
movsb
jnp
popa
ljmp
sarb
icebp
hlt
test
roll
xchg
movsb
test
and
mov
mov
cmpsb
stos
pushf
jne
mov
ret
jecxz
call
call
and
and
and
and
and
and
mov
call
call
dec
mov
int3
push
shlb
add
mov
stos
inc
mov
push
out
mov
sub
out
adc
xchg
push
pop
icebp
cwtl
lods
mov
loop
push
jg
out
mov
jl
test
mov
dec
pop
call
call
push
lea
cmp
xor
in
lcall
stos
sub
inc
xorl
inc
sarb
aam
call
outsl
mov
xchg
test
test
lds
mov
jmp
xor
scas
ret
mov
mov
pop
mov
call
xchg
xchg
xchg
cmc
in
fwait
mov
int3
xor
hlt
loopne
xor
and
and
and
dec
lock
jmp
in
xlat
outsb
mov
sbb
and
and
and
and
and
and
mov
push
jge
repz
pusha
sbb
mov
call
sbb
ret
shlb
call
dec
insl
into
flds
pop
cld
in
scas
dec
cli
pop
bswap
mov
push
mov
stos
ret
sub
nop
push
lret
lods
mov
int3
je
call
call
call
mov
in
xchg
xchg
daa
out
loope
lahf
aad
shlb
out
dec
mov
push
mov
xchg
test
cmp
dec
inc
inc
fidivrl
into
xchg
stc
add
xchg
mov
xlat
stc
cmpb
in
fisttps
call
call
call
inc
sahf
cmp
and
pop
push
movsl
xchg
pop
pushf
leave
in
mov
and
mov
out
lock
test
cmpsl
jns
enter
aam
int
fistpl
cmp
mov
or
vpxor
ret
das
fisubrl
out
ja
push
xchg
xor
mov
dec
icebp
mov
call
call
jmp
in
push
ret
jmp
adc
lea
pop
xchg
imul
roll
test
call
call
scas
pop
sbb
outsl
lock
aad
mov
pusha
cmc
iret
into
stos
xchg
sub
jmp
jle
ljmp
dec
push
cld
jb
xor
jp
andl
pop
mov
jbe
sbb
push
insl
fisubs
aaa
cmc
dec
dec
pusha
lods
and
jo
mov
call
call
call
cli
push
jmp
mov
inc
mov
and
and
and
and
cmp
test
cli
and
lcall
sbb
lods
xchg
and
mov
pop
pop
clc
call
call
call
notb
call
call
call
cmpsb
sub
xchg
ja
cmp
leave
mov
call
call
and
xor
or
bound
stos
daa
and
cmpb
add
dec
add
add
and
and
and
and
and
and
and
mov
pop
aad
xor
jne
jmp
and
fs
pop
adcb
data16
call
call
jae
xor
jecxz
notl
out
lcall
fs
cmp
out
lods
call
and
jb
xchg
sub
int
addr16
lds
fs
jecxz
cmp
call
call
call
stos
popf
cmc
add
subl
dec
aam
mov
jno
mov
sub
inc
inc
lret
mov
lock
mov
pop
enter
lods
cmpsl
movsb
pop
adc
sti
shlb
lea
cwtl
and
movsb
sti
aaa
mov
shl
push
shlb
push
insl
dec
mov
bound
mov
call
call
xor
in
aam
push
and
mov
push
test
add
pop
add
jo
sbb
sub
insl
and
hlt
enter
call
call
call
call
and
lahf
flds
loopne
mov
loopne
out
bound
cltd
fnstsw
call
call
sbb
sub
call
call
push
or
cmpsb
push
loope
push
mov
xlat
inc
sbb
inc
movsb
cmp
mov
adc
movl
mov
mov
xchg
sub
int
push
sub
call
call
call
inc
inc
mov
and
and
and
and
and
and
sub
or
sub
loope
xchg
cmp
mov
aaa
sub
sub
cmpsb
push
call
call
lahf
adc
jnp
xchg
dec
sti
mov
cli
ds
or
cmp
mov
mov
sbb
sbb
adc
call
call
ror
cld
pop
inc
cmp
addr16
fs
sti
lret
mov
inc
sub
mov
ds
loope
fstps
cs
lods
fmull
mov
imul
push
adc
popf
insl
inc
lahf
dec
cmp
cli
mov
aam
or
sub
and
mov
lahf
push
outsl
xchg
clc
mov
call
call
rol
adcl
or
sub
call
call
or
out
cli
and
loope
jge
sti
push
daa
mov
call
call
mov
notl
or
test
inc
sub
call
call
imul
mov
adc
lds
or
push
jge
das
push
cli
decb
sbb
push
faddp
call
call
sbb
xor
pusha
mov
dec
stc
dec
xchg
cmp
dec
std
inc
call
call
call
sub
outsb
adc
or
adc
pop
aas
iret
lret
sub
les
adc
icebp
aaa
push
or
call
call
enter
ror
cli
xchg
and
jb
stc
fcomps
jg
out
inc
inc
xor
bnd
cli
mov
lods
xchg
out
xchg
imul
call
call
mov
cmc
idiv
mull
testl
push
mov
add
and
and
and
jle
mov
pop
add
sarb
jecxz
xor
mov
jns
neg
sub
call
sbb
dec
xor
test
mov
cwtl
orb
jb
mov
adc
mov
subl
int
jno
push
and
inc
enter
insl
dec
sub
jl
mov
repz
sub
inc
pop
das
dec
aam
lret
call
jae
add
aaa
call
call
xor
pop
popa
call
shr
and
and
and
xor
loop
leave
lea
xlat
adc
imul
rclb
inc
xchg
mov
push
add
push
cmpsb
mov
andb
mov
popl
ja
mov
jmp
in
cmc
call
call
call
mov
call
mov
sahf
das
adc
les
sub
call
std
cmp
mov
call
call
push
dec
inc
test
pop
sub
mov
mov
daa
call
call
call
aad
cmpsb
lahf
xchg
mov
inc
xchg
test
cmp
loopne
call
jge
push
arpl
mov
fldt
psrlq
inc
test
nop
int3
adcl
sbb
or
adc
cmp
cmc
xor
loopne
jae
and
push
call
call
pop
sbb
xchg
aam
push
clc
or
adcb
fdivrl
sbb
mov
jnp
shl
ss
push
cmp
mov
jbe
cld
cltd
int3
mov
daa
clc
jno
lds
mov
jecxz
dec
mov
adc
and
and
and
and
add
nop
or
call
call
adc
pop
icebp
lods
cmc
aas
cwtl
mov
xchg
outsl
movups
test
or
imulb
and
and
and
and
and
and
and
icebp
iret
mov
rorb
jp
call
call
call
xor
addr16
call
fidivs
in
push
pop
in
fldenv
iret
ret
sub
fwait
xor
mov
cmpsl
mov
mov
inc
jg
pop
mov
pop
shlb
pushf
push
sub
gs
mov
push
enter
call
call
call
call
bound
dec
mov
push
mov
push
mov
lea
dec
addl
cwtl
xchg
push
subl
frstor
mov
loopne
mov
mov
popf
cwtl
popa
adcb
cmp
pushf
loope
in
out
pushf
jno
mov
call
call
call
dec
repnz
iret
and
int
xlat
outsl
popa
pop
push
je
insl
and
icebp
pop
adc
daa
sbb
xor
jmp
cmp
jns
cli
mov
dec
lcall
jnp
sub
call
call
rorl
in
cltd
adc
jecxz
dec
jg
or
jmp
mov
insb
xchg
dec
rolb
mov
dec
hlt
mov
pop
push
movsl
mov
addl
add
jl
push
cmp
leave
dec
xor
dec
mov
pop
mov
or
rol
mov
scas
mov
aam
cs
xor
call
call
call
jbe
hlt
xchg
das
shrl
push
cli
rcr
inc
sbb
mov
das
add
add
add
gs
and
and
and
and
and
mov
jle
mov
sub
lret
aam
mov
lods
cmpsw
or
scas
fdivr
mov
add
call
call
xchg
addr16
lea
scas
push
mov
inc
mov
cmp
cmp
cmp
cmp
dec
icebp
mov
aaa
cld
jmp
push
cltd
lds
mov
pop
aaa
jg
pop
and
inc
fiadds
push
add
and
mov
call
call
call
ret
adc
lret
loopne
mov
call
call
sti
and
mov
push
pop
cmpb
cmpb
daa
mov
mov
jo
push
adc
mov
xchg
ja
fwait
scas
mov
push
test
inc
outsl
pop
in
test
adc
cli
sub
call
call
mov
jg
rorb
jg
dec
jns
and
sarb
arpl
stos
jb
js
scas
mov
out
cmc
ficomps
xchg
xchg
fisubs
xor
aas
mov
fiaddl
mov
jle
push
cwtl
in
and
xor
mov
stc
and
lea
call
call
dec
lcall
cmp
cmp
call
out
fnstenv
inc
cmp
add
arpl
shrl
add
sbb
xor
daa
dec
xor
fwait
sbb
clc
sub
mov
xchg
mov
call
pop
out
ss
inc
daa
sbb
pop
sbb
test
push
cmp
adc
mov
add
pop
dec
mov
cmp
push
cmpsl
out
and
and
and
and
and
and
lea
test
and
and
and
and
mov
add
mov
fdivs
imul
and
mov
mov
mov
call
call
call
cmp
jg
inc
xor
sub
xlat
mov
into
js
mov
lea
xchg
es
push
call
call
push
mov
dec
shlb
and
pop
mov
cmp
popa
push
push
fwait
mov
and
pop
xor
les
and
and
and
cld
scas
inc
lret
call
call
cmp
out
les
pop
add
xchg
pop
fisttpll
call
call
push
adc
mov
stos
and
aaa
int3
lods
scas
dec
sbb
ja
ja
call
call
call
scas
std
xchg
adc
jle
jno
cwtl
fnsave
in
mov
xorb
aam
pop
imul
loope
pop
cmp
rcrb
out
cmp
mov
adc
sbbb
call
call
xchg
mov
cmp
xor
leave
fcomp
dec
mov
adc
cwtl
sub
cmc
and
jo
in
dec
or
imul
sahf
push
add
push
jecxz
jp
mov
pop
jp
cltd
add
test
call
call
xchg
or
adc
imul
psadbw
stos
cld
int
jl
subb
jbe
cmp
jge
or
lock
or
pop
loopne
insl
mov
cmp
pop
push
inc
das
std
js
lcall
call
call
call
int3
into
adc
scas
gs
mov
inc
pop
adc
xor
out
js
in
and
and
and
and
sbb
cld
and
and
and
and
and
and
sub
rorl
xchg
sub
xchg
adc
xchg
fidivs
lahf
pop
pop
in
add
test
call
call
add
or
daa
xchg
movsb
cmpl
aas
loop
call
call
iret
inc
fildl
and
fadds
adc
pop
stos
sbb
push
mov
sub
call
call
call
push
push
stos
scas
rcl
movsl
jmp
repz
jne
or
cmp
nop
xlat
push
pop
mov
push
adc
adc
scas
lods
sti
aad
pop
or
xchg
pop
sbb
repnz
and
push
xor
call
stc
test
pop
loope
aas
fcoms
fidivrl
and
pop
xchg
das
mov
adc
das
bnd
call
call
inc
js
mov
xchg
sbb
mov
cmp
shrl
xor
mov
out
sub
jmp
lds
pop
imul
call
call
jg
sub
and
sbb
pop
clc
mov
gs
dec
or
ret
add
insb
push
or
cltd
call
call
call
jmp
call
call
mov
jo
and
shrb
mov
lret
fldl
jno
orl
call
call
fadds
pop
cs
insl
movsl
pop
out
es
pop
int3
test
lock
daa
mov
jl
xchg
add
repnz
jecxz
lcall
scas
xchg
jg
mov
lods
jns
test
mov
push
sub
insb
movsl
xlat
fsubl
jmp
imul
outsl
sti
int
adc
push
loop
call
call
call
lock
jmp
dec
iret
bound
and
and
and
and
orl
mov
sub
clc
pop
mov
fnsave
int3
mov
push
icebp
pusha
divb
mov
cltd
push
lret
xchg
pop
sub
shrl
ja
mov
sti
ja
call
call
popf
mov
mov
adc
hlt
lods
xlat
xchg
aaa
cmc
fucomip
cmpsb
sbb
adc
dec
mov
out
pop
mov
in
xchg
adc
jns
repnz
outsl
lock
in
scas
xchg
and
addr16
pop
mov
jmp
inc
lods
xchg
hlt
pushf
imul
call
call
call
cmpsb
adc
jnp
int
data16
adc
and
and
and
xchg
call
call
cmp
adc
lahf
das
in
lods
daa
mov
xchg
dec
in
testl
out
jle
dec
loope
dec
jae
daa
push
dec
stos
das
dec
jno
xchg
cmp
call
call
call
mov
mov
je
nop
es
shlb
jp
push
arpl
pop
or
insb
shrb
add
ret
filds
cli
sub
adc
push
push
imul
aad
sub
rsqrtps
sahf
fwait
xor
lcall
call
call
test
mov
pop
and
mov
and
and
jne
pop
int3
xchg
ljmp
out
jbe
and
inc
call
call
call
or
jae
out
je
mov
and
and
and
and
and
or
xchg
dec
cmp
lods
sbb
sub
sbb
add
call
call
test
push
lds
cltd
add
sub
sub
inc
test
iret
scas
sbb
cmp
call
call
cmp
jge
jns
int3
cmp
repnz
xor
out
dec
mov
pop
bound
inc
out
inc
mov
jo
rolb
dec
jb
jmp
inc
stos
sti
loopne
mov
ret
testb
cmp
mov
lods
aaa
sti
sbb
xchg
sbb
push
loope
push
call
call
sub
lods
call
call
call
dec
fcoms
and
and
aas
mov
icebp
cmp
cmp
sub
cmp
push
cmp
mov
cmp
insl
and
imul
bound
mov
push
fisubl
iret
jle
movsb
loop
call
call
sbb
in
jbe
mov
popa
push
mov
cmp
mov
mov
icebp
add
call
frstor
lods
cmp
sbb
xlat
aaa
daa
loop
jno
call
call
pop
jne
sahf
push
lock
out
divl
adc
add
sub
stos
sub
jmp
out
test
outsl
sbb
add
in
push
mov
jp
fs
fwait
mov
arpl
dec
adc
inc
inc
cmpsb
adc
and
rcrl
or
call
call
pushf
lcall
shrb
xor
fs
jae
and
and
mov
jge
movsl
dec
sub
xchg
xchg
mov
call
call
lods
dec
loopne
mov
and
or
pushf
xor
inc
incb
call
call
int3
xchg
repz
pop
inc
xorb
jnp
cmp
mov
cmp
scas
jo
adc
jg
xlat
into
jne
cmpsb
adc
add
insl
and
call
call
call
je
inc
mov
xor
sbb
movsl
dec
cmc
dec
orb
out
iret
sbb
and
sti
mov
das
ja
pop
pop
adc
in
fisttpl
jle
push
and
test
jbe
dec
inc
notl
dec
mov
add
call
call
call
cmc
push
and
and
and
and
and
sbbb
push
jmp
mov
popa
jmp
push
jle
and
add
loope
jns
daa
fidivrs
fbld
jbe
sbb
rcll
pop
iret
push
dec
jmp
push
push
call
call
dec
fildll
call
call
call
or
call
call
call
sub
add
inc
stos
pop
pop
jecxz
sbb
insl
add
cmp
dec
icebp
push
mov
inc
loop
add
shll
inc
mov
ret
adc
inc
jae
enter
sbb
push
push
data16
insb
xor
es
clc
push
dec
iret
push
xor
xchg
call
call
and
and
and
and
lods
call
call
addb
xchg
xor
mov
dec
aaa
fucom
mov
push
divl
icebp
jae
push
jle
jns
add
xchg
loop
hlt
ret
fidivrs
push
xchg
add
jns
outsl
mov
fsubrl
call
call
push
pop
jge
push
mov
xchg
jae
mov
test
jns
sbb
push
jl
pushf
sbb
push
jno
nop
xchg
call
call
call
call
jmp
repnz
in
xchg
call
call
inc
incb
mov
push
mov
call
call
xchg
movsb
mov
dec
pop
pop
js
rcrb
loop
hlt
sbb
mov
pop
stos
mov
add
out
inc
mov
fldenv
cli
psubusb
jo,pn
or
mov
mov
xchg
ds
and
adc
shll
inc
mov
ficompl
mov
not
popa
push
xor
call
call
call
jg
adc
gs
push
jne
add
push
push
jo
add
lret
sbb
daa
sub
ret
call
call
call
js
outsl
leave
or
dec
or
mov
dec
shll
and
leave
bound
push
jbe
into
cwtl
or
roll
sarl
insb
sbb
push
mov
aam
xor
jecxz
call
call
call
mov
test
lea
std
in
imul
pop
popw
test
hlt
mov
sbb
xlat
mov
adc
pop
mov
mov
add
int3
cld
lea
pop
ss
jne
inc
pop
sub
mov
jmp
xchg
shll
int
lcall
call
call
aam
jne
rorl
lods
mov
test
dec
sub
out
pop
scas
scas
pop
xchg
fsubr
test
adc
out
fmul
scas
mov
adc
call
cs
js
cmpsl
jnp
lcall
test
call
call
pop
pop
jae
iret
icebp
or
and
and
and
and
and
ret
loope
mov
in
int3
cs
inc
cmp
jbe
roll
out
cld
pop
lcall
pop
loopne
or
pop
insl
add
pusha
or
call
call
mov
and
xor
call
call
call
test
and
and
and
and
test
inc
enter
pop
push
cmpsl
push
and
and
and
and
and
and
and
and
push
and
pop
cs
leave
push
xor
push
and
push
mov
jl
or
or
xor
loopne
call
call
call
call
jecxz
sbb
aaa
dec
sbb
dec
add
repz
hlt
test
call
call
enter
loopne
xor
xor
sbb
gs
pcmpgtb
add
and
and
and
and
and
and
addr16
std
mov
rcrl
or
and
xor
daa
test
sub
and
xchg
and
pop
std
cmp
popl
sbb
sub
call
call
call
call
add
inc
call
call
call
les
inc
and
gs
sub
add
je
aas
ja
frstor
inc
scas
sbbl
lcall
inc
loope
test
lds
inc
pop
xchg
hlt
pop
call
call
insb
jae
jo
xor
cmp
or
inc
dec
call
call
call
or
call
call
call
adc
jnp
add
adc
adc
or
call
call
call
pop
mov
push
sbb
dec
xchg
add
flds
inc
aam
dec
cmp
ficoms
and
xchg
call
call
sbb
loop
std
insb
pop
cmp
push
or
rsm
jo
stos
add
push
shrb
inc
or
int
dec
stos
imul
sti
lret
jecxz
sub
jmp
push
das
pop
ss
push
call
call
xchg
push
dec
popf
add
and
jnp
sbb
mov
in
imul
roll
loop
mov
inc
aam
mov
jno
movsb
jp
andl
pop
mov
lock
cmpsl
jae
call
call
dec
jne
leave
jb
adc
and
imulb
adc
and
and
and
and
inc
pop
sbb
adc
push
adc
mov
adc
sub
adc
xor
call
call
jle
pop
xor
sub
ss
outsb
cmp
test
inc
and
push
pop
loop
test
or
aad
and
lea
adc
call
call
cltd
adc
ret
mov
push
rorl
or
xorb
sahf
adc
dec
push
jmp
jmp
mov
mul
xor
mov
imul
cmp
cli
sub
jns
fimuls
cmp
imul
or
call
call
mov
cli
jo
jecxz
dec
mov
and
and
and
push
fcom
in
inc
cltd
push
imul
shll
dec
movsb
inc
pop
adc
dec
jmp
jge
stos
or
sub
stos
sub
jge
and
test
popa
xor
call
call
call
fisubl
das
mov
pop
dec
cmc
sti
jne
imul
and
mov
mov
lods
addb
mov
push
xchg
testb
testl
imul
adc
nop
lock
mov
mov
pop
int
mov
loop
inc
push
popa
add
call
call
inc
mov
in
call
call
call
pop
add
push
xchg
ds
sbb
mov
inc
or
fucomp
push
push
lahf
dec
gs
inc
add
faddl
call
call
jns
and
and
and
insl
mov
xchg
loop
xor
mov
pop
mov
jl
jp
gs
adc
pop
mov
push
jle
mov
js
scas
pop
push
or
call
call
and
out
xchg
mov
ret
or
jp
mov
push
ret
insb
lcall
dec
lods
cmc
or
dec
imul
dec
jbe
xchg
repz
and
sbb
mov
pop
jecxz
and
lock
push
insb
xor
call
call
adc
jecxz
fs
into
xor
and
push
jmp
call
add
inc
cld
dec
adc
lock
xor
fistps
xchg
push
and
jae
jge
test
call
call
call
xchg
push
sbb
add
pop
add
cmp
mov
sbb
int3
popa
add
xor
sbb
sbb
sub
daa
inc
push
insb
nop
mov
dec
jecxz
subb
fldcw
push
or
lcall
adc
call
call
jo
mov
mov
call
call
call
mov
loopne
or
and
jbe
iret
out
push
jno
dec
push
inc
push
movsb
push
leave
inc
push
jno
jecxz
jnp
pop
mov
aas
pcmpgtd
call
call
scas
sub
inc
aam
jnp
roll
ret
nop
pop
sbb
and
and
and
and
imul
aas
call
add
cwtl
xlat
int
call
call
mov
push
out
cs
add
xchg
jecxz
inc
addr16
leave
dec
push
pop
jb
repnz
filds
cmp
aaa
lods
dec
mov
cwtl
insb
xlat
xlat
dec
adc
out
fbld
xchg
adc
xchg
call
call
call
sbb
dec
xor
test
inc
mov
hlt
test
insl
stos
test
jg
sub
das
fs
leave
xchg
imul
out
lods
jp
out
and
inc
mov
xchg
popaw
shl
add
pop
adc
rclb
xor
adc
jne
roll
mov
rcrb
scas
dec
mov
xchg
sti
sarl
call
call
testw
sbb
fstpl
xchg
adc
call
jmp
xor
pop
adc
sub
cmp
aaa
jg
dec
pop
and
and
and
and
add
popf
dec
push
adc
lock
adc
mov
and
and
and
push
sti
popf
cmp
push
scas
call
call
call
jns
mov
stc
aaa
adc
movsl
ds
xchg
jb
cmpsb
imulb
xor
mov
call
call
rolb
lds
xchg
movsl
mov
mov
adc
out
addr16
mov
stos
dec
mov
int
psrad
xchg
insl
imul
or
enter
inc
cmpsl
psubusw
repnz
xchg
sti
adc
xchg
or
stc
outsb
call
call
call
arpl
ret
fsubrs
jp
mov
pop
hlt
xchg
jle
arpl
sbb
mov
call
xor
fisubrl
mov
pusha
rorb
mov
push
sti
sbb
xor
adc
in
jge
cmp
insl
stos
or
dec
mov
push
add
call
call
out
sahf
sub
into
inc
pop
xor
test
cli
aad
cmpsl
pushf
pusha
and
test
std
mov
data16
xlat
mov
cli
and
mov
xchg
jno
and
add
ds
xchg
add
scas
call
call
std
je
mov
xchg
aas
push
lcall
push
andl
jbe
sub
sub
or
and
and
and
and
cld
das
dec
rorb
ficoml
pushf
call
call
bound
lret
mov
push
xchg
xchg
stc
or
repz
dec
in
gs
add
into
enter
cmpsb
cltd
cli
call
xchg
data16
addl
and
pop
jne
jg
pushl
inc
mov
mov
mov
call
call
adc
test
pop
add
ds
cmp
psrld
lahf
mov
xchg
divl
cwtl
ret
ror
inc
xor
inc
sub
popf
mov
mov
ljmp
in
cmp
movsb
mov
and
dec
arpl
or
call
call
call
sub
jno
sbb
xchg
sbb
push
pushf
bound
call
call
call
push
test
jb
pop
push
sbb
call
loope
ret
data16
jo
imul
jns
inc
pop
cmp
fnstenv
sbb
fwait
or
pop
sbb
push
out
jmp
pop
enter
sub
mov
call
call
shr
cmp
cwtl
pop
rorb
loope
inc
sbb
int
sub
lret
lods
pop
jecxz
mov
cli
pop
mov
mov
or
cmp
nop
jae
pop
hlt
xchg
in
jecxz
stos
cwtl
push
ret
jno
jne
mov
in
push
lock
push
call
call
call
push
aam
fisttpll
jns
nop
mov
jl
mov
sbbl
call
call
call
push
int
pop
dec
pop
cmc
iret
xor
gs
stos
xchg
mov
jbe
ja
adc
and
and
and
and
and
aaa
jo
cmp
movsb
sbb
fisubrs
inc
hlt
mov
push
lcall
pusha
sub
call
call
in
xchg
es
mov
and
cmp
inc
inc
cmp
call
call
inc
dec
mov
adc
pop
mov
pop
mov
xorb
push
leave
and
lods
sub
pop
or
jmp
pop
out
sbb
cmp
cmp
or
sarb
adc
loop
lahf
dec
sbb
mov
and
and
and
jle
jmp
faddl
call
call
outsb
out
inc
xor
push
pusha
cmpsl
push
cmp
or
push
test
push
mov
loope
pop
mov
into
mov
lds
shll
loopne
mov
adc
daa
es
imul
inc
std
dec
cmp
cwtl
es
sti
out
dec
repz
insl
dec
mov
test
xchg
ficompl
call
out
pop
jne
movsl
loope
ret
pop
mov
stc
mov
mov
repz
adc
sub
sub
insb
sub
xchg
rcr
call
call
call
dec
lea
test
popa
loop
call
cmc
fcmovbe
popf
cmp
movsb
xchg
mov
sarl
mov
lods
pop
daa
mov
cmpsb
lret
pop
mov
lret
call
ds
cli
sbb
test
or
mov
lahf
jge
std
fnstenv
mov
sti
push
xor
pop
mov
stos
jle
sub
call
ljmp
push
loope
cmpsb
cmp
mov
or
call
sti
insb
pop
dec
jl
xor
out
outsl
cmp
mov
or
pop
bound
push
fistpll
sbb
pop
in
inc
ficoml
ret
jo
data16
lahf
pop
repnz
jne
stos
imull
jne
pop
pop
leave
adc
fldenv
sbb
stos
rolb
call
call
add
cltd
iret
fucomp
adc
aaa
insl
cmp
test
fs
adc
sbb
insb
pop
jge
sti
add
int
imul
call
call
call
fisubrl
fwait
xchg
test
cmp
rolb
test
mov
aas
mov
ja
call
call
inc
call
call
mov
jecxz
push
inc
inc
test
mov
movsb
or
lahf
mov
call
call
sub
stc
pop
lds
and
and
and
and
and
and
pop
mov
mov
add
insl
bnd
cmpsl
mov
test
xor
mov
sub
lret
pushf
pop
cmpsl
inc
fstps
push
sbb
mov
gs
sub
and
mov
call
call
xchg
add
jl
mov
aas
dec
or
sbb
mov
iret
and
fcoml
cmc
inc
mov
push
test
dec
int3
mov
ret
shll
inc
rorb
sahf
dec
clc
fstpt
sub
test
ja
call
call
call
in
xchg
test
sbb
inc
jns
movsb
aaa
lret
or
push
ja
test
sub
or
mov
inc
inc
test
push
aaa
mov
insl
cmp
or
adc
aad
mov
pop
sub
dec
pusha
sbb
xchg
mov
push
xchg
or
call
call
or
das
sub
es
fisubrs
pop
adc
dec
sbb
mov
mov
ret
pop
cmpsb
jns
test
xchg
xchg
and
sti
sbb
and
sar
lock
push
cmp
adc
inc
popa
jmp
call
call
jae
and
and
and
and
and
gs
das
mov
movsl
jae
dec
mov
or
mov
cmp
shr
shrb
xor
int3
out
and
xchg
inc
aaa
xchg
stos
cmp
mov
xchg
enter
inc
pop
jg
inc
cltd
push
call
call
push
sarl
or
sbb
fbstp
sbb
call
call
lock
lret
rclb
xchg
or
dec
jmp
fimull
cmp
xlat
aas
mov
out
or
mov
sti
pop
dec
pop
out
mov
or
push
ret
shr
call
call
or
inc
mov
fst
lret
es
cs
fld
ret
fstpt
add
xlat
iret
insl
add
mov
das
mov
lods
xor
xchg
add
lods
sub
xchg
mov
dec
mov
ja
pop
fisubrl
js
push
ljmp
mov
in
fucomip
call
call
test
and
and
and
and
mov
out
divl
shl
test
into
loopne
rcl
mulb
call
call
mov
and
and
and
and
and
and
or
ret
push
pushf
and
jle
orb
xor
cmp
cs
fadd
cs
movsl
pop
ss
push
pop
fcmovb
sbb
cmp
jbe
call
call
call
ss
ds
dec
sti
in
xchg
add
and
and
and
and
and
and
and
sar
stos
or
shlb
outsb
dec
out
mov
call
call
out
cmp
push
push
jb
mov
adc
and
sbb
jmp
icebp
xor
xchg
fwait
jae
out
cwtl
fs
mov
mov
mov
sbbb
xlat
cmp
push
in
aas
jp
call
call
cmp
adc
outsb
and
fsubp
call
call
xchg
in
jmp
test
repnz
mov
aaa
xor
cmp
sahf
pushf
mov
call
call
fidivs
and
or
mov
jo
mov
les
shlb
lahf
pop
jp
rolb
xchg
pop
js
sbb
push
sub
add
pop
xor
jb
xchg
lahf
dec
cli
mov
data16
mov
call
call
pop
xor
addl
call
stmxcsr
out
add
rorb
js
imul
xlat
outsb
sbb
xchg
dec
scas
cmovb
jnp
sar
xchg
jp
dec
cmp
outsb
insb
mov
std
and
cmpsb
loope
fnstcw
inc
lods
push
cmpsb
mov
inc
leave
add
seta
call
call
repnz
scas
ja
or
dec
fdivrs
cmp
call
sub
rorl
mov
xor
addl
mov
outsl
fstl
xor
xchg
mov
jno
sub
sbb
push
pop
out
xchg
out
pop
andl
call
insl
cmp
pop
inc
and
push
fldenv
cli
enter
and
and
and
sbb
jle
call
call
xchg
mov
or
imul
hlt
test
lcall
push
or
ja
lds
jmp
push
push
jp
mov
pop
dec
jne
outsb
jbe
mov
call
cmpsb
add
lahf
outsb
xchg
aaa
stos
push
mov
shrb
ss
pop
dec
or
sub
enter
call
call
test
pop
xchg
mov
pop
add
or
push
push
ffree
repnz
popf
out
adc
mov
call
call
call
imul
inc
ret
loopne
jbe
sbb
inc
cmp
pop
sub
popf
icebp
cmp
fisubrl
and
call
call
cmpl
adc
imull
cwtl
adc
scas
push
push
out
fs
call
call
call
sub
jmp
push
call
call
call
jbe
push
enter
cwtl
xchg
pop
mov
add
mov
push
xchg
stos
in
in
push
and
xchg
jp
ljmp
scas
clc
mov
jl
and
test
fidivl
insl
loop
aam
mov
and
pop
mov
xchg
loop
shlb
and
inc
pop
sub
mov
call
call
fldlg2
faddl
sti
or
jg
lret
lahf
fcoml
test
insb
es
call
mov
jp
sbb
mov
xchg
jmp
mov
pop
dec
sub
inc
fsubr
call
call
imul
into
mov
and
and
and
and
inc
stos
cmp
xchg
leave
repz
call
cmp
in
cli
rcl
adc
jecxz
js
jmp
dec
adc
call
call
call
lock
xchg
aad
cltd
cld
cli
imul
pop
mov
dec
fistl
and
and
and
and
and
and
and
and
and
call
call
call
jae
mov
xor
adcb
jmp
jge
ss
jb
aaa
sbb
ret
sbb
inc
push
adc
call
call
call
lahf
outsl
ret
inc
cmpb
sub
mov
icebp
jle
ds
and
aad
inc
pop
push
and
pop
inc
sbb
out
adc
test
xor
and
ret
sbb
xchg
push
lahf
mov
and
es
fimuls
sbb
mov
call
call
mov
in
pop
or
mov
out
leave
and
fs
pop
push
mov
add
sbb
scas
push
push
cwtl
int
scas
call
call
fnstsw
clc
or
pop
bound
ret
stc
xor
clc
enter
dec
inc
xchg
xor
int3
add
xor
bound
or
lret
inc
pop
sub
sbb
mov
adc
adc
adc
mov
or
ret
pop
xchg
jecxz
rcr
cmp
call
call
rcll
sbb
sub
fisubrl
inc
adc
aas
mov
jle
cmc
and
js
adc
xor
aad
sub
call
call
call
sub
ljmp
or
enter
call
call
call
shll
loope
arpl
xchg
rorb
call
call
push
add
or
lods
sub
test
dec
inc
jl
and
and
and
gs
outsl
popf
insb
aam
out
bound
mov
int
mov
into
cmp
je
xchg
sbb
imul
dec
fwait
testl
call
mov
xchg
cmpsl
out
pop
mov
sbb
in
pop
jbe
scas
movhps
dec
xor
pop
rol
sti
mov
inc
std
sahf
sbb
fwait
mov
push
xchg
cli
out
data16
or
or
aaa
faddp
inc
dec
mov
jbe
mov
fistpl
inc
xorb
out
call
call
shl
cmc
cs
stos
mov
pop
or
xor
push
call
call
jae
jb
popf
daa
cli
scas
adc
subl
mov
xor
add
mov
mov
test
clc
cmpsb
out
mov
movsb
lods
fwait
pop
imull
mov
push
test
inc
sub
mov
arpl
cld
lods
mov
mov
call
call
pop
adc
mov
push
out
es
add
aaa
add
test
jne
jmp
stc
in
adc
mov
call
call
daa
xchg
hlt
fwait
aaa
sahf
cli
cmp
movsl
jmp
lret
fnstcw
call
pop
fdiv
das
mov
scas
iret
add
daa
cmp
lret
in
loop
cs
cli
fwait
daa
cmp
push
popa
subb
mov
ss
call
call
call
jb
or
sbb
aam
icebp
cmp
jge
lods
fwait
jge
fwait
outsl
or
push
call
call
jmp
cmc
ds
out
and
and
and
and
push
roll
call
push
mov
mov
imul
xor
loope
push
push
and
push
notl
je
pop
pop
addb
call
call
call
call
add
sub
push
push
and
mov
push
std
movsl
inc
and
icebp
xchg
jge
enter
cwtl
cmp
test
add
or
fstl
shll
cmpb
fwait
xor
add
and
and
and
and
cmp
popa
sbb
in
mov
pop
js
adc
add
mov
sar
lret
or
mov
dec
rcl
dec
sub
ss
dec
pop
cmc
repz
xchg
inc
adc
arpl
adc
test
and
jnp
out
lcall
mov
fucomi
call
call
xchg
pop
pop
inc
sbb
inc
pop
dec
mov
dec
sbb
cs
add
inc
aam
popf
popf
adc
and
cltd
xchg
icebp
mov
das
shl
lods
cmp
rcrl
jmp
and
and
and
and
and
call
call
dec
test
mov
and
notb
ret
mov
jle
xchg
out
pop
inc
es
lea
xchg
jns
mov
mov
call
call
call
sti
fldcw
es
test
std
shll
pop
out
sub
mov
cmp
and
and
and
and
and
and
pop
or
and
lock
add
jno
pop
mov
pop
insb
push
pusha
or
inc
adc
mov
push
xchg
or
push
and
leave
lock
jg
and
cmp
call
call
xor
xchg
and
and
es
cmp
inc
push
pop
les
imulb
cmp
test
xor
mov
sbb
rolb
aas
lds
mov
fmul
test
sti
push
mov
ficoms
sub
call
call
sbb
cltd
mov
and
and
and
and
in
xlat
call
call
arpl
imul
mov
lock
add
shll
int
cli
jno
sub
mov
and
gs
popf
es
and
out
mov
mov
gs
mov
pusha
ret
call
call
call
fs
les
aas
or
adc
pop
push
imul
popa
xchg
inc
xchg
mov
inc
mov
xchg
sub
fsubp
adc
sbb
mov
sbb
xor
sarb
mov
push
mov
stos
xchg
pop
mov
inc
push
jl
jmp
xchg
mov
call
call
lahf
out
cld
je
mov
aad
jecxz
cltd
push
add
lcall
jecxz
fdivl
iret
mov
mov
push
addr16
loope
dec
cmpb
in
jp
mov
jns
pop
cwtl
xchg
cmp
test
call
cmp
dec
scas
mov
sub
jns
or
mov
stos
fiadds
pop
adc
sub
adc
xor
clc
pop
fstl
cmp
sbb
popf
push
jae
push
pop
and
or
mov
xor
maskmovq
mull
fisubrs
sbb
call
call
sbb
sub
jp
mov
lock
ss
out
mov
cwtl
imul
mov
call
call
rcrl
roll
call
leave
sahf
daa
dec
cmp
pop
xorps
jecxz
dec
inc
fwait
sbb
ficompl
and
mov
je
aam
push
jmp
cmp
pop
in
mov
jbe
xor
repnz
or
push
shr
call
call
call
enter
and
repnz
std
arpl
and
and
and
mov
mov
pop
out
or
fimull
pop
or
jnp
push
pusha
jne
mov
in
repnz
dec
test
push
dec
xor
call
call
call
push
js
rcr
and
and
and
and
and
and
and
and
lret
jp
xchg
push
sbb
test
add
dec
mov
mov
popa
xchg
inc
movsb
mov
jnp
leave
mov
call
cld
push
sub
call
call
call
call
call
call
push
popa
in
inc
outsl
cmpsl
and
and
and
and
and
and
mul
dec
enter
jb
cwtl
insl
xchg
ss
fdivrs
fsubrl
dec
lret
sbb
adc
cli
clc
pushf
stos
bnd
orb
call
call
push
movsl
ffreep
les
shrl
out
pop
test
int
sub
call
call
adc
rcrl
ljmp
and
sbb
les
or
out
dec
jnp
add
mov
mov
outsb
loope
hlt
repnz
jmp
and
pop
dec
cmp
call
call
ja
lock
les
inc
xchg
popf
data16
lods
lods
and
adc
pop
ss
dec
fstl
inc
push
fsubrl
popa
in
xchg
dec
pop
or
push
mov
call
scas
xorb
hlt
mov
cmp
xor
shrl
cmp
lcall
add
ss
mov
sbb
sarl
call
call
xchg
outsb
push
dec
inc
or
adc
mov
mov
xor
test
sbb
shll
xchg
push
add
add
popf
lahf
mov
xchg
fbstp
mov
call
call
call
xor
mov
dec
pop
sub
lret
lret
fiadds
outsb
dec
divb
adc
std
enter
and
and
and
and
and
mov
xor
jae
out
dec
jae
shrl
cltd
pop
pop
dec
lcall
adc
sbb
fisttpll
in
stos
jnp
pop
rcl
push
imul
clc
xor
call
call
jle
je
lret
outsb
jbe
stos
push
xchg
sub
adc
sub
lods
fldenv
pop
pop
pop
jg
addr16
mov
lret
rclb
shrl
add
or
out
stos
aaa
fdiv
pop
mov
mov
cmpsb
adc
int
dec
call
call
call
push
push
leave
movsb
jl
cs
sbb
adc
outsl
jl
xor
popa
cmpsl
and
es
pop
sbb
je
ffree
sub
jl
pop
xor
push
and
and
and
and
and
and
and
push
pop
call
call
call
call
mulb
jo
std
pop
mov
lods
repz
jle
sub
push
pop
out
movsl
je
movsb
dec
ljmp
fstl
inc
sahf
std
sbb
adc
pop
das
das
ret
xor
enter
mov
hlt
mov
call
call
call
jne
push
shr
mov
jp
dec
mov
enter
mov
jg
sub
pusha
and
pushf
call
call
jmp
fdiv
dec
mov
push
xchg
aam
lret
adc
add
shlb
adcl
mov
clc
pop
out
inc
gs
push
sbb
push
dec
lds
fwait
xchg
je
fcmovbe
mov
cmp
int
outsb
repnz
outsb
xlat
leave
arpl
mov
call
call
call
call
pushf
enter
inc
filds
pushf
and
jne
and
stos
imul
out
call
scas
inc
jno
lret
cld
add
mov
dec
repz
xor
int3
push
mov
inc
mov
sub
sbb
sar
ds
fsts
fisttpl
call
call
adc
lock
pop
push
jb
dec
dec
out
mov
in
cmp
daa
mov
dec
add
pop
jbe
xchg
pop
add
lods
popa
test
imul
pop
adc
addl
jg
jle
pop
sub
divb
mov
call
call
call
and
and
and
and
and
and
and
xchg
push
leave
mov
xchg
inc
push
adc
cltd
cwtl
shl
cld
mov
bound
sub
lock
call
call
pop
insl
adc
scas
and
inc
cmp
jae
loopne
cmc
jl
scas
sbb
fisubrs
fisubrl
jl
cs
and
daa
mov
hlt
shlb
jp
sbbl
sub
call
test
iret
xchg
and
inc
aad
jo
pushf
lcall
fcompl
sub
outsb
adcl
scas
xchg
and
and
and
and
and
and
and
repnz
clc
fwait
bound
repnz
pop
add
jmp
call
call
loope
lret
testb
push
pop
lods
sub
xchg
pop
xchg
ficoms
call
call
call
push
jns
out
xor
pop
pushf
cmc
shr
or
shlb
leave
push
decb
pop
out
js
fs
mov
rclb
cli
aad
les
call
fisubl
sub
cwtl
jae
jno
dec
lahf
out
ret
test
rorl
xor
call
call
call
cmc
enter
xchg
fxch
mov
push
jle
xchg
sub
add
mov
fidivrs
fisubrl
clc
mov
xor
int3
pop
shlb
imul
mov
cmp
test
fs
or
mov
mov
fndisi(8087
ret
jecxz
stos
push
sub
call
call
call
push
pop
and
sbb
stc
lretw
cmp
pop
xor
out
sbb
dec
xchg
mov
push
scas
or
addl
mov
dec
daa
mov
jb
inc
cmc
jp
shl
mov
mov
mov
insb
xchg
iret
sbb
mov
clc
icebp
stc
inc
cs
test
icebp
jb
call
call
stos
addr16
sbb
adc
ljmp
loopne
stc
cmc
sti
aad
cld
xor
lods
int
and
sub
and
and
and
and
xchg
mov
or
and
stc
call
test
mov
in
das
scas
pop
lds
call
call
call
pop
push
imul
movsb
mov
or
jnp
xchg
mov
lahf
iret
dec
mov
in
dec
push
mov
call
call
call
call
pop
xchg
jbe
mov
ss
icebp
mov
aaa
pop
es
pop
push
sarb
lret
pushf
int3
xchg
movsl
int
clc
test
push
imul
call
stos
stos
inc
mov
cmp
inc
in
call
call
dec
andl
inc
call
call
call
call
push
testl
call
call
cwtl
dec
and
jno
adc
jmp
sarb
imul
insb
xchg
data16
jle
xor
lret
out
sub
inc
pop
leave
ja
xor
in
orb
push
clc
fisttps
outsb
scas
stos
or
add
test
call
call
lods
out
lret
loope
fsubs
dec
adc
mov
daa
scas
xchg
adc
fmuls
stc
jo
arpl
aaa
sub
mov
push
mov
inc
pop
and
sub
test
call
call
call
in
and
ds
in
sub
mov
add
cmp
cmp
rorl
in
ss
shlb
call
call
cmp
push
sub
enter
fdivl
call
call
roll
sti
push
sti
dec
inc
dec
xlat
jp
movsl
mov
mov
push
push
fiadds
push
lret
test
pop
imul
pop
inc
sbb
negb
rolb
cs
mov
mov
aaa
and
and
and
and
and
push
outsb
pop
push
and
jb
leave
sub
call
call
call
stos
hlt
cmp
sbb
jp
xor
or
xchg
scas
sub
xchg
lds
pop
lahf
loopne
fiaddl
jnp
push
cmp
mov
add
idivl
sub
call
call
leave
sahf
sub
mov
lds
lods
push
in
mov
aas
push
mov
popf
cs
cld
mov
jb
lahf
pop
cwtl
pop
nop
mov
dec
dec
mov
xchg
inc
fld
rcr
std
std
sub
call
call
lock
jns
cmc
lds
stc
push
fst
mov
add
out
bound
call
call
sub
mov
gs
fmuls
mov
nop
lret
pop
call
call
jae
loope
in
fcoms
mov
xor
call
call
pop
test
xor
dec
negl
or
fsts
dec
push
orl
push
mov
push
shl
pop
push
fwait
rcrl
lods
pop
out
push
mov
test
and
adc
lods
and
and
and
lea
ss
cmp
rclb
call
call
bound
sbb
inc
jo
lahf
mov
jge,pn
xchg
inc
push
adc
cmp
mov
test
sbb
in
xor
push
xchg
dec
insl
jle
jle
inc
add
push
lea
les
cmp
lock
push
adc
xchg
cld
rcl
cwtl
jae
adc
das
roll
or
addl
das
call
call
push
mov
js
imul
add
rcl
sbb
cs
fs
fxch
and
and
and
and
and
and
or
ret
jmp
xchg
jp
lods
xchg
call
mov
or
addl
in
pop
sbb
enter
pop
adc
and
outsb
inc
jns
call
call
jae
ss
push
stos
push
add
imulb
jg
icebp
add
out
ficompl
jne
cmpsb
pop
in
lods
incl
and
cwtl
fs
popl
js
jmp
ss
insb
lock
mov
push
in
icebp
cwtl
cmc
mov
add
and
cmp
loop
call
call
call
xchg
mov
adc
fs
xchg
xchg
cmp
dec
and
pop
fwait
mov
push
xchg
popa
sbb
rol
dec
push
dec
addb
call
push
pop
ja
icebp
xchg
shlb
cmp
xchg
mov
sub
fwait
cmpsl
mov
sbb
and
out
lea
inc
das
or
and
out
stc
repnz
in
test
enter
add
jo
sbb
sub
xor
call
into
push
sbb
mov
fucomp
call
call
fcoms
push
ret
scas
iret
push
imulb
push
mov
push
inc
incl
daa
lock
jb
out
pop
out
in
jle
add
dec
lock
lods
add
mov
shll
xchg
sbb
pop
mov
or
leave
scas
dec
scas
call
call
call
cmp
add
cmp
xchg
add
shr
aas
das
and
xor
cwtl
outsl
repz
adc
or
and
repz
dec
test
xchg
xchg
sbb
push
leave
adc
call
call
je
mov
mov
sbb
xchg
inc
repz
je
xor
and
and
and
and
and
and
cs
ja
and
out
dec
out
or
adc
mov
rol
iret
dec
cmp
pusha
mov
pusha
xchg
fwait
loope
xchg
sbbb
jns
push
lods
jle
mov
inc
int3
fldcw
push
call
call
repz
repz
add
je
aaa
cmc
jbe
test
sub
repnz
add
mov
push
jae
addb
insb
orb
dec
pushf
or
sub
dec
jne
xor
call
call
adc
je
mov
movsl
xchg
bound
pop
mov
mov
imul
or
call
call
sub
sarb
loopne
cltd
jle
call
call
pop
xchg
xchg
and
and
and
and
fnsave
jne
jmp
lea
mov
jnp
jge
xchg
push
sti
enter
decb
cld
stos
shr
call
call
call
movsl
cmp
shlb
ja
push
add
mov
pop
sahf
pop
shll
adc
dec
inc
insb
int
xlat
es
outsl
shrb
pop
sub
pusha
leave
gs
cmp
sub
sub
inc
daa
mov
cli
ja
ds
or
cmp
call
call
call
call
jnp
in
and
sub
adc
and
and
and
and
and
and
push
loopne
pop
es
inc
popf
mov
loopne
scas
pop
jno
xor
iret
xchg
lods
es
call
push
shll
mov
dec
pop
and
dec
push
adc
jo
jmp
icebp
sbb
push
hlt
ja
cmp
adc
and
call
mov
jb
add
xchg
adc
xor
xchg
call
call
sub
cmp
or
roll
cwtl
jmp
push
and
pop
lcall
sbbl
dec
sub
leave
icebp
sbb
xchg
mov
movsb
mov
lcall
fiadds
xchg
xor
mov
xchg
sbbb
loope
inc
dec
pop
sub
adc
call
call
push
mov
sbb
dec
jbe
call
or
andl
gs
call
sbb
nop
ret
fwait
pop
pop
cmpsl
test
jp
call
call
call
mov
call
call
xchg
push
sub
mov
insb
mov
sub
in
inc
inc
lods
add
or
sub
inc
data16
dec
aam
cmp
cmp
shlb
cld
aad
negb
js
or
sar
adc
adc
call
call
inc
ljmp
lahf
xor
push
pop
lods
int3
cmp
adc
cmpb
xlat
mov
call
call
call
call
sbb
dec
call
call
call
inc
push
test
loope
jp
lcall
and
and
and
and
and
out
in
ret
std
cld
jbe
leave
je
popa
xor
mov
pop
lods
mov
lahf
int3
aas
mov
jg
or
scas
outsl
lahf
scas
mov
movsl
inc
in
lcall
loop
push
adc
lods
arpl
call
call
xchg
and
sbb
data16
dec
pushf
or
cmp
orl
pop
call
call
pushf
mov
loopne
and
jne
js
orl
fstpl
mov
imulb
imul
push
int3
mov
push
xor
call
call
sarb
in
cmp
xlat
sub
or
sbb
lret
push
xchg
adc
das
repz
xchg
jecxz
mov
ds
mov
call
call
call
movsl
mov
pusha
insb
repnz
cmp
ss
ds
test
shlb
aad
ret
dec
lret
call
call
pop
outsb
loopne
enter
push
mov
mov
popf
bound
mov
push
xchg
sub
in
movb
add
pop
inc
or
add
jge
jns
push
jl
jle
xchg
mov
sbb
shll
add
inc
daa
subb
push
stos
pushf
xchg
or
and
or
call
call
xchg
fmuls
mov
shll
adc
pushl
dec
in
adc
mov
ret
jnp
mov
fstpt
rcll
inc
sub
mov
dec
and
and
and
and
and
and
and
adc
call
call
add
in
xorl
loop
js
mov
dec
mov
pop
pusha
adc
mov
cmp
pop
fcompl
mov
xchg
mov
scas
xchg
repz
call
call
jne
xor
cmpsl
push
imul
repz
xchg
out
inc
shlb
push
sub
pop
ucomiss
inc
daa
jp
inc
mov
pop
int
roll
ja
jecxz
jg
jmp
call
xchg
pop
les
mov
mov
dec
test
push
dec
in
dec
xchg
mov
mov
mov
cmp
and
and
and
and
daa
fildl
insl
cli
lds
adc
aam
in
or
cmp
sbb
xchg
push
movsb
mov
xchg
call
inc
cld
hlt
rcrl
jo
adc
in
testb
pop
aaa
lret
loop
xor
orb
xor
xor
jae
push
fdivl
scas
add
cmc
cmc
jp
add
test
enter
xchg
loopne
mov
insb
dec
cmpsb
fistpl
ljmp
call
call
addr16
dec
cmp
mov
loop
icebp
test
dec
test
adc
lds
shrl
test
sbb
jle
call
call
mov
sbb
loopne
pushf
lahf
push
sub
sub
andl
push
mov
dec
xchg
pop
cmovs
jne
sub
aam
stos
outsb
es
and
and
and
and
and
sub
repz
call
call
call
pop
push
cld
sub
lcall
scas
xor
or
adc
mov
xchg
jo
and
jno
call
call
mov
mov
cmp
cmpsb
jne
fcompl
call
call
push
mov
sti
xor
xlat
adc
mov
jle
notb
jmp
cmpsl
pop
add
call
call
stos
push
popf
adc
mov
movsl
out
add
jb
add
mov
jmp
mov
xchg
insb
sub
push
shlb
rol
pop
jg
mov
outsl
pop
inc
mov
insb
jecxz
stos
inc
pushf
inc
jne
adc
add
fisubrs
pop
and
add
pop
call
call
call
insl
inc
arpl
popf
int
push
pushf
clc
mov
imul
jmp
xchg
imul
out
lret
adc
xchg
mov
cmp
xor
jl
call
call
sbb
push
in
ljmp
xchg
test
aas
sbb
cmp
call
call
movsl
sahf
les
rorl
adc
and
out
shll
aam
and
cmp
lcall
call
call
call
and
xchg
jo
movsl
push
pushf
js
inc
jg
jmp
fwait
jge
push
xor
push
adc
daa
or
clc
insl
into
or
jns
sub
sub
xor
dec
lret
out
pop
xchg
push
repz
cmp
mov
aam
inc
call
call
xor
imul
jl
movsl
sbb
jae
adc
ljmp
dec
lock
lea
mov
call
jle
arpl
pushf
jmp
mov
imul
mov
sbb
jno
inc
enter
test
aaa
cmp
aas
lds
je
lahf
insb
add
leave
bound
xor
and
and
and
xlat
ret
stc
push
in
cmp
inc
mov
mov
or
and
call
imul
call
call
cmp
jns
in
sbbb
add
cmc
lcall
add
pusha
jno
shrl
xor
ret
ficomps
icebp
insb
mov
sti
and
xor
les
xor
test
jg
mov
cmp
adc
mov
ja
shll
aaa
ret
insl
hlt
add
sbb
into
sub
call
call
call
pop
xor
push
jl
mov
lcall
xchg
jmp
movb
sbb
jb
add
or
sub
gs
mov
xor
jo
push
pop
rclb
scas
addr16
pop
inc
mov
pop
enter
stc
mov
test
call
cmp
je
arpl
adc
je
add
and
and
and
and
and
and
repz
push
into
repz
mov
addr16
add
push
ret
or
lret
pop
ds
call
call
and
push
add
mov
sub
sbb
hlt
dec
out
out
sbb
out
test
int
and
adc
into
jb
loope
sahf
dec
add
out
out
lcall
or
push
clc
dec
lcall
addr16
minps
je
mov
jae
call
call
cltd
mov
jno
call
arpl
in
push
push
cli
xor
mov
jmp
pop
inc
mov
dec
mov
bound
in
cmpsl
adc
inc
xchg
fisttps
jle
dec
inc
std
loop
mov
xor
stos
sti
xchg
test
xchg
sbb
or
dec
adc
sub
outsb
or
call
call
add
fmulp
mov
sub
daa
mov
sbb
enter
in
push
cmp
and
pushf
pop
add
pop
inc
imull
push
call
call
idivb
and
inc
and
je
pushl
test
adcb
and
mov
or
sbb
mov
aad
imul
sti
loopne
add
push
roll
pop
jg
imul
lahf
adc
enter
sbb
fmull
call
call
xchg
outsl
and
ja
dec
xchg
lea
ss
cmp
sub
pop
xchg
xchg
dec
cmp
or
push
or
mov
mov
out
push
or
ljmp
call
call
out
and
cld
mov
mov
mov
sbb
fs
call
call
mov
fstpt
stc
divb
mov
xor
push
sbb
bound
insl
je
push
std
jnp
mov
daa
and
and
and
and
and
and
and
shlb
les
out
adc
jp
push
sub
lcall
jb
call
call
sub
inc
inc
inc
jl
xor
sbbl
inc
adc
jo
bound
pop
jp
jecxz
cmpsb
sbb
cltd
cld
inc
sub
es
jno
jae
stos
scas
imul
mov
shlb
call
call
lock
cmpsb
mov
push
les
jp
les
mov
push
mov
mov
mov
arpl
addr16
int
xchg
lret
push
cltd
push
popf
jnp
cmp
call
call
call
add
leave
mov
dec
loop
sub
andb
es
outsl
and
jae
call
mov
int3
hlt
or
mov
add
insb
insl
inc
xor
jo
in
scas
pusha
repz
fstp
iret
in
cmc
jmp
mov
lret
insb
sbb
sub
jne
call
call
insl
jp
test
cmpsb
xchg
jmp
and
push
stc
pop
sbb
test
xor
cli
mov
ja
inc
mov
lcall
adc
call
call
call
jmp
mov
out
test
pop
xor
popa
pop
movsl
push
pusha
adc
loope
clc
faddl
or
test
jge
mov
push
call
call
cmp
jo
imul
and
and
and
and
and
fildll
sub
mov
loopne,pt
aad
loopne
fsubrl
loope
push
ljmp
and
ds
hlt
xchg
adc
pop
loopne
addb
jmp
or
or
call
call
je
dec
xchg
jno
je
pop
xchg
incb
mov
and
adc
loope
pop
push
pop
mov
daa
pop
imul
loope
mov
and
test
lcall
lock
hlt
xchg
call
push
sub
or
ljmp
hlt
sbb
lret
inc
in
adc
hlt
jne
call
call
call
adc
je
inc
andl
lahf
push
int
pushf
adcl
mov
xchg
stos
jnp
jae
jns
in
call
call
cmp
arpl
loop
out
call
add
xchg
int
cs
and
jge
cmp
call
call
call
insb
sub
insb
push
imul
les
and
and
and
gs
clc
in
mov
or
pop
inc
lret
adc
call
pusha
inc
call
xchg
sbb
divl
into
ss
sahf
call
call
insb
pop
dec
arpl
test
loope
fcoms
adc
mov
and
mov
sub
push
fiaddl
mov
test
fstpl
jo
xchg
inc
repz
ret
fsts
rolb
adcb
lds
xchg
daa
mov
enter
xchg
hlt
lea
jmp
pop
fisttpll
call
call
out
sbb
pop
inc
mov
xchg
mov
mov
mov
push
push
and
and
and
and
and
and
lret
ret
stos
in
and
and
and
and
shll
dec
ljmp
cmp
inc
xchg
or
iret
sub
call
call
xor
mov
or
sbb
or
or
jg
mov
int3
xor
inc
ja
and
cmp
add
pop
addr16
icebp
jg
popa
mov
psubsb
call
call
loope
jecxz
inc
call
call
call
mov
sbb
rorb
cld
xlat
mov
cld
jne
inc
dec
test
nop
outsb
mov
mov
es
shl
pop
call
sub
rcll
movsb
hlt
push
addb
add
aaa
lock
push
cmp
lods
lcall
call
call
sahf
xchg
mov
xchg
loop
jnp
push
push
inc
shll
jnp
pushf
pop
cltd
mov
cs
incl
call
ss
fsubrs
into
jle
insb
lret
dec
xor
popf
orl
jbe
or
lock
add
rcrb
pop
mov
inc
fdivrl
mov
adc
sbb
mov
dec
mov
pop
sarl
pop
mov
add
jbe
sub
xor
push
call
call
cs
jno
stos
sbb
lret
xchg
fwait
mov
dec
repz
sub
jmp
pusha
jecxz
fistpll
call
call
and
and
and
and
ud2
cltd
xchg
mov
loopne
push
push
cmp
shrb
sub
fldt
int3
push
sub
lods
add
lea
stc
in
inc
sub
sbb
decb
dec
mov
das
sub
call
call
and
out
lret
das
stc
aas
ss
cmc
push
inc
call
call
test
cs
fwait
sbb
es
lret
hlt
jae
into
sub
sarl
sbb
fisubrs
lret
xor
pop
jecxz
xchg
mulb
mov
nop
xchg
jo
mov
idiv
pop
dec
xchg
fidivrl
xchg
add
call
call
xor
in
adc
sbb
mov
mov
test
test
add
les
xor
outsb
mov
push
cli
cmp
jne
sbb
xor
stos
pop
or
into
call
call
pop
nop
loop
ficomps
stos
insl
mov
xchg
jl
jp
call
adc
stos
cmpsl
cmp
setno
popf
insl
mov
dec
xor
call
call
stos
pop
dec
rorb
loopne
or
inc
fsubrl
mov
shlb
pop
pop
out
pusha
in
mov
shll
and
icebp
add
out
or
call
call
push
cli
mov
dec
scas
fucomip
ljmp
je
sahf
cmp
iret
sbb
call
call
call
sahf
add
pop
gs
mov
jbe
mov
push
aaa
push
and
mov
cmp
xchg
xchg
dec
xor
cli
sub
arpl
dec
and
dec
repz
mov
mov
fdivrp
add
mov
aas
popa
icebp
rcrb
pushf
jl
hlt
pop
and
jae
and
push
and
and
and
and
shr
call
call
call
mov
outsb
mov
pop
test
sbb
pop
inc
ds
test
xchg
add
pop
adc
add
add
push
and
xor
addl
daa
add
loope
call
call
call
dec
mov
xor
lret
int
inc
lock
or
cmp
or
leave
call
call
mov
fildl
push
pop
fs
dec
mov
inc
sub
icebp
adc
adc
jp
pusha
mov
sub
sub
lock
sbb
sbb
repnz
in
and
inc
testl
mov
call
cmpsb
pop
push
inc
pop
xor
call
call
iret
mov
sub
sbb
ret
lea
jl
out
lods
jns
jge
ljmp
subb
outsb
pushw
dec
sub
mov
rcrb
hlt
out
insl
stc
aas
or
jge
xor
lods
add
aad
ja
pop
mov
adc
call
call
fldcw
sub
xor
mov
call
das
add
pop
cltd
mov
insb
lods
cmpsb
call
call
call
sub
rcl
and
sub
test
jge
push
jecxz
dec
dec
add
cmp
call
call
addb
and
in
das
clc
dec
and
mov
mov
push
sar
js
in
inc
fcomp
call
call
adc
inc
xor
mov
test
out
cmp
shrb
xchg
adc
push
in
outsl
aam
mov
fdivs
push
pop
nop
push
jp
xor
pop
mov
lods
sbb
stos
jne
sub
aas
pop
mov
call
mov
fadd
mov
cmp
data16
lea
or
sub
call
call
lcall
fsubl
jge
add
and
and
and
and
and
pop
jp
lret
push
lcall
pop
mov
sahf
testb
or
inc
mov
test
addr16
add
and
sbb
xchg
jmp
mov
sbb
int3
push
and
push
lods
inc
jbe
call
call
mov
popl
call
call
adc
daa
popa
push
adc
imulb
sarb
dec
fldl
loopne
cmp
adc
xlat
lcall
jbe
call
call
mov
dec
dec
cmc
push
jecxz
xchg
lret
sbb
mov
call
loop
jno
andl
cltd
je
jle
hlt
xchg
adc
popf
xchg
enter
xor
sub
jae
jae
shl
xchg
inc
stos
js
xor
push
inc
mov
add
sub
das
int3
or
call
call
add
std
icebp
push
pop
mov
jae
mov
add
adc
mull
ja
cmp
icebp
mov
test
in
adc
fldenv
xchg
call
call
push
loope
sub
mov
fdiv
dec
or
cmc
out
push
rcrb
mov
push
loopne
mov
xor
repnz
aaa
xchg
call
call
aad
lret
dec
in
mov
mov
dec
addl
xchg
inc
inc
rorb
push
mov
jne
mov
call
call
call
movsl
jg
xchg
fimull
push
roll
xor
pop
pop
aas
adc
xchg
xorl
and
and
dec
mov
scas
aaa
mov
sarl
dec
insb
inc
xlat
add
mov
xor
aad
mov
call
call
movsb
add
icebp
ds
hlt
aad
jmp
sbb
ss
mov
sbb
not
push
cmp
fwait
test
rolb
movsb
mov
not
add
je
mov
cmp
aam
mov
decb
scas
dec
mov
call
call
lock
inc
mov
xchg
pop
xor
pop
pusha
xchg
push
mov
push
ss
adcl
fists
xchg
adc
jne
mov
add
je
mov
mov
mov
sti
mov
call
call
in
shl
ret
lret
and
shlb
ja
xor
test
xchg
cli
push
and
xor
out
sbb
fs
das
push
lret
xor
call
call
add
jo
in
jmp
jg
xchg
out
sti
call
call
mov
or
gs
push
shll
lret
inc
in
sub
cmpps
stos
test
lds
pop
pop
iret
call
cmp
cmpsb
rcrb
out
lcall
call
call
call
call
call
call
push
xorb
call
call
dec
call
push
cmp
cltd
ds
push
push
mov
push
loopne
loopne
jmp
adc
xchg
mov
aam
pop
add
xor
sub
lcall
call
sbb
mov
pop
and
and
and
and
cmpsb
sbb
jb
and
inc
jne
ficomps
push
mov
xlat
push
and
repnz
mov
jb
cmpsl
mov
push
mov
icebp
imul
call
call
call
repz
sub
inc
out
push
mov
cwtl
and
test
push
mov
mov
lods
push
mov
fstpt
cmp
aam
nop
stc
cltd
adc
in
push
mov
pop
repz
popf
ret
out
sbb
mov
xor
dec
lock
call
call
imul
fdivrl
loopne
std
movsb
cmc
mov
and
stc
out
pop
movsb
aad
xchg
sarl
call
call
inc
mov
push
out
movsb
push
pop
sub
mov
ljmp
pop
rol
sbb
addr16
sub
and
and
and
and
and
and
and
lock
and
js
sbb
out
dec
push
xlat
in
data16
ljmp
das
call
call
call
xor
jne
or
inc
mov
adc
cmc
pushf
scas
fiadds
add
scas
out
sub
insl
jg
adc
mov
push
pop
mov
call
mov
stc
adcb
aad
addr16
lret
insl
xor
jb
fidivrs
insb
mov
dec
lods
call
call
imul
scas
repnz
test
addl
in
fists
mov
or
sub
call
pop
mov
test
cmp
in
testl
inc
mov
popf
call
call
call
aam
xor
jne
enter
fcmovnu
arpl
icebp
xchg
les
and
and
and
and
and
insb
adc
popa
test
out
hlt
outsl
cltd
lods
mov
ljmp
sti
gs
aaa
mov
call
call
xchg
add
cmc
add
push
push
stos
testl
repnz
outsb
test
into
fs
call
call
test
inc
pop
adc
mov
mulb
xor
movsl
fcoml
adcb
lret
inc
enter
jne
xchg
mov
ljmp
mov
andl
call
call
mov
mov
inc
cmovbe
xchg
sub
xor
fisubrs
in
rclb
call
call
dec
sbb
xchg
aas
adc
iret
xchg
cmp
mov
xor
xlat
leave
fs
enter
fwait
shl
fwait
inc
jmp
bound
add
cmp
mov
call
call
fdiv
add
xchg
das
push
mov
call
call
call
aaa
cmc
mov
jmp
mov
in
push
mov
jne
mov
js
mov
sub
test
xor
mov
cmp
adc
shl
mov
movsl
lret
aad
push
callw
call
call
jg
jo
std
movsb
adc
or
aaa
pop
mov
dec
sbb
push
sti
fldcw
dec
outsb
bound
xor
fs
test
pop
loope
loop
imul
sbb
push
cmp
call
addr16
aam
pop
repnz
pop
sub
inc
mov
xor
push
mov
mov
dec
jp
push
int
push
rorb
jge
push
cltd
cmp
mov
js
lret
adc
and
and
and
and
and
and
mov
out
xor
cli
adc
insb
jbe
push
dec
jle
mov
inc
mov
call
call
call
cmp
outsl
ret
push
xchg
inc
mov
jb
cmp
push
in
test
int3
in
or
mov
dec
push
add
repnz
arpl
call
call
mov
or
push
loope
mov
addr16
inc
lock
mov
outsl
jl
addl
fs
std
sahf
xchg
fmull
and
addr16
dec
mov
pop
aam
imul
push
call
call
call
jg
fs
shll
and
push
jno
rol
xchg
add
filds
adc
push
int3
mov
push
cmpl
pop
xchg
lcall
call
call
pop
sub
mov
lret
or
cmp
arpl
call
call
jb
bound
sarb
lods
mov
pusha
and
and
and
and
and
and
adc
cmp
inc
mov
inc
mov
pop
stos
and
imul
call
call
call
into
or
insb
scas
dec
jbe
mov
movsb
mov
cmpsl
icebp
or
adc
outsb
cmpsl
dec
xor
dec
jecxz
and
and
and
and
and
and
mov
lea
shrl
and
lea
push
add
bound
cmpb
mov
push
mov
arpl
mov
call
call
call
gs
sti
jae
enter
push
pop
mov
orl
mov
xchg
sbb
insb
pop
sti
add
inc
ljmp
call
call
call
xlat
push
pop
lahf
cmc
xchg
hlt
jo
shlb
js
ds
in
cs
cwtl
mov
and
sub
call
call
and
and
and
and
lea
sub
testl
fstl
or
in
adc
cmp
cmp
inc
jae
sahf
movsb
in
sahf
loop
pop
push
into
jmp
filds
std
call
call
call
insb
mov
cwtl
sarl
call
call
test
add
popf
mov
data16
mov
mov
adc
call
outsb
stos
addb
popa
pushf
push
xchg
psraw
sbb
mov
cmpsb
movsl
pushf
popa
call
call
cmp
sub
jmp
dec
and
insb
shl
jmp
pop
mov
out
movsb
push
call
call
jno
mov
jmp
mov
ret
xchg
push
movsb
push
clc
dec
int
ljmp
mov
mov
cmpl
call
call
call
push
lahf
neg
pop
and
movsb
nop
scas
sbbl
test
mov
pop
cmpsl
cmp
stos
in
pop
pop
mov
mov
cmp
or
call
mov
dec
ret
mov
pop
rcll
test
lock
mov
call
call
mov
call
call
push
mov
repz
aas
sbb
jne
and
lret
popa
add
stos
sti
fwait
imul
and
and
and
and
and
lds
fmull
and
or
sub
loopne
rorb
cmp
call
call
call
add
aaa
pop
adc
test
dec
test
or
push
push
popa
jno
call
call
inc
xchg
mov
sti
xor
fcmovnb
dec
xchg
dec
add
int
pop
mov
inc
sti
pop
pop
cltd
lahf
sub
jle
push
add
mov
pop
lods
outsb
aaa
cmp
call
call
mov
cmc
stc
jge
mov
into
xchg
pusha
push
sbb
or
mov
das
stos
mov
jp
fcomip
inc
sbb
dec
sub
push
sbbb
lods
push
pop
xchg
or
pop
push
sbb
fnstsw
popa
push
inc
inc
mov
or
call
call
stos
lret
ss
fistl
xchg
sbb
pop
dec
dec
out
into
mov
call
jbe
movsb
jl
hlt
push
inc
in
cmc
and
sti
fadd
and
adc
mov
xor
push
or
inc
lret
cmp
jnp
call
call
mov
mov
cmc
add
pop
test
leave
test
scas
pushf
lret
mov
xchg
inc
clc
mov
call
call
ficompl
arpl
int3
or
xor
pop
pop
lock
or
add
call
xor
test
pop
pusha
lea
ret
xchg
mov
andl
and
and
and
and
and
sbb
push
and
call
call
call
lcall
insl
ljmp
pop
jo
lods
fdivrp
outsb
pop
mov
dec
sub
pop
sbb
jp
xchg
cmp
fstl
mov
xchg
cltd
jmp
fwait
dec
and
call
push
mov
jmp
xchg
push
or
insl
adc
or
push
mov
mov
jle
xor
jne
call
call
call
jmp
mov
pushf
data16
lahf
scas
jnp
mov
adc
cmp
cmp
dec
mov
and
push
int
xchg
cmp
call
call
mov
xchg
fs
xor
test
int3
adc
sub
push
ds
lea
and
and
and
and
std
mov
imul
pop
outsl
cmp
das
daa
and
and
and
and
and
and
movb
call
call
call
leave
in
fnstcw
and
and
and
call
call
cmp
push
jp
cmc
pop
shrl
outsb
or
iret
lcall
mov
or
movsb
or
int
add
aaa
xchg
fdivs
dec
inc
repnz
sbb
repz
mov
mov
call
call
call
call
call
lea
xor
insl
add
jmp
and
dec
leave
xchg
fists
dec
imul
xchg
aaa
mov
push
test
loope
sbb
dec
pusha
sub
call
call
call
call
es
xor
or
jne
orl
in
mov
push
or
call
call
and
and
and
and
pop
test
inc
xor
or
dec
mov
sbb
fsts
call
call
push
xchg
add
lea
xchg
xor
xchg
mov
movsb
inc
sbb
cmpsb
out
fsts
cmp
mov
xor
pop
in
call
ffree
lods
loope
rcr
lret
sub
call
call
std
fists
mov
xor
aaa
add
push
negl
push
sbb
stc
mov
call
call
jle
lea
loop
and
lret
push
jecxz
pop
rolb
stos
insl
js
mov
inc
fs
incb
call
call
lahf
insl
mov
cmc
cmp
call
call
call
xor
rorl
cmp
sub
jle
xchg
sbb
shl
imul
mov
sub
test
test
aas
ds
mov
icebp
pop
cmp
lahf
and
mov
push
rorl
call
call
stos
int
dec
jbe
sub
push
jp
loop
aaa
bound
andb
js
getsec
imul
sub
pop
daa
dec
iret
mov
cmp
stos
aaa
mov
mov
mov
sbb
sbb
dec
inc
mov
into
jmp
cltd
sub
sbb
xchg
pop
dec
and
fstl
dec
paddw
mov
cli
cs
call
call
test
mov
in
out
dec
fildl
cmp
push
rol
push
xchg
enter
aaa
push
sub
in
popf
jge
mov
lahf
jnp
xchg
movsl
cmp
lret
loopne
mov
inc
and
and
and
and
and
and
rclb
test
leave
push
xor
fildl
aaa
xchg
or
bound
scas
cld
push
or
xor
fbld
add
jb
pusha
xchg
out
pusha
push
inc
mulb
push
mov
xchg
stos
mov
pop
or
pop
ret
inc
push
call
call
call
and
dec
pusha
mov
mov
pop
sbb
gs
and
call
call
sti
andl
mov
and
mov
and
sbb
dec
outsb
fucom
push
insb
xor
call
call
call
dec
lahf
icebp
add
iret
pop
sbbb
sbb
push
repz
fisubrl
xor
mov
aam
sub
cmp
call
call
sahf
shrb
xchg
pop
sbb
aas
push
mov
fsts
add
stos
jl
fdiv
push
add
push
fidivrs
out
js
into
mov
stos
jl
les
sub
shrb
lahf
dec
jns
cwtl
push
lahf
jmp
pop
test
call
rorb
add
xchg
scas
lods
cwtl
int3
shl
jae
sahf
ljmp
cs
imul
xchg
clc
or
inc
aad
mov
out
lret
and
cmpsl
push
inc
test
daa
xlat
add
sbb
pop
addr16
call
call
call
and
and
and
and
xchg
std
mov
pop
setno
or
shll
fisttpl
cmc
cli
cmc
hlt
xlat
jne
lds
daa
sbb
push
test
adc
call
call
cmp
push
incl
addr16
lods
mov
xor
xchg
inc
icebp
pop
push
icebp
push
into
xchg
pop
dec
insb
add
cmpsb
mov
dec
xor
pop
sub
xor
repz
jl
sahf
adc
imul
jp
push
mov
mov
call
mov
jp
xor
das
cmp
jo
clc
push
inc
mov
xorb
lret
dec
add
jbe
mov
mov
jmp
add
dec
mov
xor
or
ljmp
or
and
add
jb
call
call
call
xlat
pop
sbb
fiadds
fildll
push
fs
push
cmpsb
aas
dec
in
inc
add
cli
cmp
movsl
lahf
fimull
jae
mov
sub
lcall
faddl
leave
pop
pop
sub
push
inc
aad
jp
imul
dec
xor
call
call
dec
ja
add
sub
sbb
pop
addr16
scas
je
pop
inc
das
test
push
mov
adc
out
add
negl
sub
hlt
stos
xchg
pop
std
int
es
jp
es
into
push
into
push
mov
push
clc
adc
jg
fucomip
call
aam
and
xor
add
loope
in
clc
pop
mov
fisubrl
mov
mov
call
call
imul
jmp
scas
out
or
jno
repz
aad
inc
mov
out
fmuls
and
pop
dec
pop
in
push
es
pushl
and
and
and
and
jbe
movsl
push
jp
adc
imul
cld
or
jno
mov
call
call
call
mov
in
adc
add
or
xor
sub
out
jo
inc
in
sub
xchg
mov
mov
les
out
adc
shlb
cmp
repz
push
sbb
jmp
bnd
lret
call
call
out
scas
mov
enter
mov
mov
test
icebp
mov
loopne
cltd
andb
xor
mov
call
call
imul
rolb
enter
jg
inc
test
ljmp
call
call
call
iret
xchg
inc
fstps
pop
pop
mov
fsubrs
lods
cltd
cmpsb
js
shll
inc
mov
or
push
enter
call
call
sub
adc
fbld
sbb
and
and
and
and
cmpsl
rcl
cs
xor
ljmp
stos
testl
push
push
xchg
jmp
mov
sti
jns
loope
call
call
call
add
cld
xchg
je
sub
leave
jo
clc
xor
mov
std
inc
dec
xor
xor
call
call
xor
jp
inc
loope
out
fs
ss
mov
fbld
out
ja
iret
out
adc
call
push
loop
or
add
ja
mov
gs
sahf
mov
decl
call
call
ds
mov
std
lds
and
sbb
jns
inc
aam
loopne
jne
fcmovnu
inc
sti
clc
mov
cltd
repnz
xor
cmpsl
repnz
push
mov
test
or
loop
inc
xchg
push
mov
jb
aaa
je
pop
cli
inc
jb
push
jnp,pt
cmp
sbb
arpl
call
push
lock
and
cmpb
hlt
popa
call
jle
cmc
lret
cmpsl
fucomi
dec
mov
jb
scas
adc
mov
out
pop
sti
xchg
out
dec
dec
cmc
xchg
das
mov
cs
mov
stos
fwait
call
call
call
pop
loope
adcb
cmp
notb
lcall
and
and
and
and
and
and
pop
aam
imull
cltd
mov
addr16
test
in
push
pop
mov
mov
call
call
dec
out
jno
jne
mov
rolb
cmpsb
and
and
and
and
and
and
jl
cmp
stc
mov
push
fmul
call
call
push
xor
pop
popf
xchg
push
adcl
scas
sub
jo
mov
dec
xchg
add
ja
pop
push
pop
xor
outsb
cmpsb
mov
push
in
mov
xorb
in
mov
jp
mov
or
pop
mov
call
call
pop
adc
add
outsb
movsb
xor
or
lret
outsl
inc
bound
jbe
insl
test
mov
mov
dec
mov
sbb
movsl
sbb
mov
push
imul
cmpl
mov
mov
pop
sbb
jp
call
call
call
fcoml
imul
call
call
and
fiaddl
sbb
shr
ror
leave
scas
inc
add
repnz
shlb
dec
mov
xor
call
call
dec
mov
xchg
jle
mov
mov
test
call
call
cltd
xchg
add
sbb
pop
in
jmp
hlt
sti
jle
ret
out
add
dec
aad
mov
stc
lret
stc
inc
and
and
iret
xorl
pop
xchg
pop
dec
lea
and
sbb
adc
ret
xor
inc
adc
sbb
call
call
call
and
and
and
and
and
and
and
pop
add
xchg
cld
stc
shrl
jo
lds
daa
mov
sbb
sub
push
jecxz
rorb
xchg
or
ljmp
adc
fisttpl
div
xorl
call
lods
sub
mov
icebp
inc
mov
mov
jp
add
sub
outsl
add
pop
lods
fcoml
call
call
addl
add
jp
ficoml
jmp
or
cld
sbbl
scas
dec
push
mov
das
inc
mov
push
jne
cltd
dec
bound
adc
ss
fisttpll
fstps
push
push
fldenv
and
andb
mov
and
call
call
lea
ja
sub
and
insb
or
cli
out
test
loope
leave
call
cs
dec
jg
mov
loop
pop
jl
fisttpl
inc
jg
or
and
cmp
cmp
mov
jne
popf
stc
fadds
lods
add
dec
rolb
call
call
add
jl
gs
jmp
mov
jle
call
mov
mov
call
call
mov
jns
and
lds
and
xchg
or
xchg
pop
int
in
pop
sarl
cs
mov
add
ret
subl
mov
call
inc
out
test
pop
mov
cld
out
mov
pushf
xchg
pop
add
lods
pusha
rorb
shll
push
int
push
xor
call
call
call
movsb
sbb
jbe
cmp
inc
dec
fsubl
pop
pop
or
pop
cmp
in
cmp
pop
pop
shl
or
mov
call
mov
and
or
jmp
and
and
and
and
and
and
and
and
xchg
push
mov
mov
sbb
data16
icebp
ja
jb
cltd
out
push
inc
ja
call
call
call
mov
call
call
fistpl
sbb
addr16
loop
imul
call
jbe
movsl
jb
cmc
dec
jmp
repz
mov
mov
push
adc
mov
xor
xchg
xor
pop
adc
call
call
pop
aaa
insb
sub
mov
xlat
lods
mov
jbe
xchg
fcomp
mov
in
inc
cmp
enter
pop
stos
push
and
and
and
and
and
sub
lahf
mov
sub
bound
or
fadds
adc
outsl
jae
push
je
call
call
call
jno
inc
jmp
push
dec
dec
jmp
dec
push
or
cli
popa
add
mov
call
call
call
dec
jbe
mov
dec
sahf
push
scas
adc
movsl
adc
lcall
push
lcall
push
mov
test
std
mov
sub
pop
cwtl
call
rorb
cld
sub
pop
das
fs
add
call
iret
inc
xor
adc
fdivr
inc
lods
pop
clc
fsubrl
or
cld
jge
in
dec
insb
mov
test
dec
xchg
cmp
jbe
int3
aad
nop
and
je
sti
mov
insl
jmp
cmp
lahf
push
jmp
push
outsb
es
iret
cmp
call
call
call
add
pusha
add
add
and
pop
leave
cli
mov
jae
inc
icebp
in
ja
or
dec
add
add
arpl
sarl
push
mov
adc
or
jge
mov
pop
mov
ss
call
call
rcrb
mov
lods
jle
pushf
fisubs
les
mov
mov
lret
push
mov
or
loope
xor
pushf
test
push
mov
mov
xchg
sbb
mov
and
and
and
and
lds
xor
call
call
ja
movsl
hlt
or
icebp
mov
push
mov
cmp
and
xchg
and
ljmp
sbbb
jl
pop
push
cmpsb
pop
and
inc
ficoms
imulb
call
call
jmp
in
mov
call
and
out
mov
cmp
jo
jb
pop
or
sbb
push
xchg
cmpsl
pop
out
mov
rcrl
dec
cmp
popf
sbb
jmp
lea
push
daa
repz
add
and
movsl
lods
add
outsl
fdivrl
mov
xor
jns
dec
sub
xor
aam
call
call
call
out
int
call
call
jns
aaa
lret
dec
sub
jge
inc
pop
idivb
sti
call
call
movsl
cmp
jo
push
les
mov
lods
lock
or
pushf
sahf
mov
repz
or
cli
inc
push
xor
push
sub
das
loopne
dec
sti
xchg
ss
xchg
lret
loopne
sub
cli
add
insb
adc
pop
out
mov
cmpb
call
pop
and
decl
sbb
shlb
push
nop
push
leave
and
fisubrs
cmpsl
inc
incb
subl
call
cmp
and
and
and
and
and
cmpsl
push
adc
test
mov
rcrl
jl
popa
mov
xor
int3
mov
xchg
sbb
imul
shrb
add
imul
call
stos
outsb
mov
mov
add
lea
xchg
pop
add
popf
adc
xor
jbe
jmp
call
call
push
lcall
nop
push
les
lods
xchg
push
dec
lahf
mov
mov
jbe
loop
pop
sahf
movsb
pop
jle
and
outsb
mov
leave
cmc
outsb
or
leave
push
mov
or
out
fsubr
sbb
and
and
and
xor
ret
imul
call
sbb
cmp
lret
mov
lret
adc
and
and
and
inc
mov
fwait
mov
jbe
mov
fisubl
stos
lcall
mov
call
call
pusha
mov
imul
lea
add
cmc
mov
shrl
nop
cmc
mov
shll
cmp
and
and
and
and
adc
cld
dec
push
mov
call
call
call
inc
add
shrb
out
xchg
mov
lods
and
outsl
daa
mov
loopne
aas
xchg
out
imul
push
fs
call
call
call
inc
ret
mov
xchg
test
das
std
call
les
ss
dec
stos
paddw
mov
adc
xchg
inc
fisttps
inc
sbbl
shlb
clc
adc
call
call
pop
loopne
inc
lret
out
jae
test
dec
cmp
lods
jno
mov
sbb
and
and
and
cmp
ds
fldcw
ss
pop
fmul
stos
jns
jg
jns
cmpsb
outsl
push
push
into
sub
sarb
or
adc
adc
call
call
sbb
dec
mov
or
xchg
xlat
mov
ss
jmp
mov
aaa
cmpsb
inc
int3
aad
xorb
add
jae
lret
jmp
dec
and
pop
and
cmpsb
inc
adc
or
dec
and
push
and
call
call
call
mov
data16
dec
pop
pop
cmpsb
push
and
mov
jmp
add
sub
out
adc
or
mov
pop
enter
cwtl
mov
mov
and
and
and
and
and
ds
pusha
cwtl
jae
add
call
call
call
call
pop
or
pop
adcl
pop
imul
lcall
jle
data16
adc
ret
int3
call
call
call
jmp
jge
xor
out
jl
push
call
call
call
or
xor
cmp
ja
inc
imul
adc
add
repnz
pop
sbb
mov
cltd
and
sbb
mov
das
test
or
fnsave
fstpt
fwait
sub
call
call
mov
dec
enter
mov
xchg
sbbl
stc
or
add
mov
scas
aam
dec
xchg
sub
dec
push
adc
cmp
icebp
rolb
call
call
pop
mov
mov
cmpsl
ret
lcall
decl
mov
insb
in
shll
jne
mov
bswap
mov
dec
pushf
dec
into
xchg
sub
and
and
and
fidivs
mov
std
jnp
dec
in
aaa
push
fidivrl
lods
aaa
roll
shl
jmp
rolb
call
call
cmp
sub
sbb
xchg
es
xchg
xchg
call
call
xor
test
test
in
mov
sbb
test
movsl
push
lock
xchg
addb
sbb
or
push
sbb
inc
pop
inc
xchg
scas
mov
fisubs
mov
mov
movsb
loop
aam
int3
imul
call
call
rorl
outsb
xchg
xor
fimull
dec
ror
icebp
ficompl
jbe
pop
dec
vcvtdq2ps
pinsrw
aam
add
gs
movsl
shll
push
fldenv
xor
cs
call
xor
call
adc
xchg
cmpsb
andb
jp
adc
enter
pop
mov
jo
mov
lods
inc
mov
ret
sub
aad
addb
dec
incb
call
call
call
jnp
sbb
add
xchg
loopne
pop
loope
ret
jo
and
fiaddl
call
call
pop
or
popa
pop
fnsave
adc
push
into
mov
cmpsl
or
outsb
jb
mov
lea
ret
adc
cwtl
fs
call
xor
dec
sarb
call
fcoms
gs
ss
xchg
dec
jp
xchg
sbb
adc
jne
int
push
mov
mov
lods
bound
leave
inc
pop
pop
bswap
stos
or
xchg
mov
sub
xor
jae
icebp
cmp
xchg
orl
push
add
and
and
and
and
and
test
cmp
or
jae
add
hlt
sahf
cmp
pop
fcompl
mov
lea
mov
xorb
jp
dec
lret
cmp
and
inc
ds
mov
jl
lret
mov
adc
call
call
call
out
dec
pop
fmull
into
mov
bound
call
call
or
orl
lcall
push
out
loop
aas
inc
dec
shlb
imul
out
dec
call
call
call
gs
xchg
loope
jp
js
gs
push
xchg
lahf
pop
push
fstl
sbb
mov
nop
xchg
mov
dec
mov
dec
pop
sub
cmp
movsl
shll
and
and
and
and
jns
jecxz
mov
add
call
call
jg
or
jbe
fiaddl
cmpsb
jp
aas
call
call
call
das
sbb
cmp
sbb
and
shll
pop
insb
sub
cmp
cmpsl
push
sub
mov
call
call
inc
pmaxsw
std
adc
xchg
mov
rclb
test
sbb
call
call
aaa
push
xor
push
jmp
pop
sub
jl
test
in
lahf
or
xchg
ljmp
xor
fstps
scas
outsl
movsb
push
mov
pop
mov
dec
jbe
push
add
adc
loope
test
call
call
insb
lods
lds
in
pop
aad
ja
or
cltd
push
fistl
adc
imul
repnz
xlat
pop
xor
fs
aam
aas
push
in
pop
mov
call
xchg
call
call
call
xchg
das
adc
add
ja
cmpsb
cmpsl
or
scas
in
fldcw
xchg
pop
orb
dec
adc
dec
addl
xor
jle
ret
ret
mov
sub
push
negb
bound
xor
adc
jnp
call
call
call
mov
inc
mov
jns
and
and
and
and
and
and
pop
adc
dec
mov
add
sar
setae
push
das
ret
fs
popf
cmp
lods
jp
repnz
call
call
sbb
ljmp
dec
stos
sub
jmp
test
rol
into
adc
rol
sub
cmpsb
xlat
pop
icebp
and
enter
jp
pop
fdivrp
xor
push
and
data16
push
mov
add
insl
jmp
or
lcall
push
js
call
call
call
fs
jmp
lods
jmp
jns
xchg
xchg
add
lods
mov
test
fwait
push
mov
loopne
call
call
call
pushf
dec
adc
nop
shlb
push
lods
xchg
in
sti
and
and
and
and
and
and
and
push
push
sbb
aam
cmp
inc
xchg
lcall
pop
jg
adc
jae
cli
jns
call
call
call
inc
movsl
pop
xchg
iret
cmpsb
jp
mov
fistpl
pop
rcrl
sbb
mov
xor
pop
gs
in
cmp
int
jg
mov
aad
cs
mov
enter
out
jg
jmp
call
call
mov
dec
rclb
mov
jbe
pop
imul
push
jmp
push
mov
into
mov
fmul
in
scas
push
das
call
call
call
pop
mov
xrelease
mov
dec
push
orl
add
call
call
jmp
cld
cs
add
pop
psubsb
call
call
inc
repz
call
call
call
push
and
push
jle
sub
mov
call
call
sbbb
cmp
mov
cmpsl
aam
and
and
xchg
test
cli
xor
push
mov
out
or
addb
jae
insb
lahf
mov
sbb
push
call
call
call
push
insl
orl
call
call
sub
mov
repnz
fwait
pop
inc
cmp
popa
dec
mov
jae
adc
ds
call
jbe
inc
sbb
nop
ds
stos
sbb
repnz
sbb
pop
adc
daa
xor
aaa
icebp
lea
call
call
sub
sub
insb
sbb
pop
xchg
add
pop
jmp
push
out
subb
push
int
sbb
je
pop
fld
mov
inc
sbb
aas
notl
jg
nopl
xchg
loopne
aaa
push
and
and
and
and
and
and
js
lock
add
mov
add
and
and
and
or
mov
enter
cmpsb
xchg
out
aad
push
jno
mov
fidivl
xchg
loop
pop
cmpb
ret
sarl
or
cmp
jns
adc
pop
insl
pop
loope
fldl
jecxz
in
shll
push
loope
call
call
out
mov
into
nop
in
fs
jle
adc
cmpsb
inc
out
xchg
and
out
addb
cmpsb
hlt
in
jp
mov
xchg
aad
fs
bound
cmp
dec
push
pop
cmp
call
call
cmpl
cmp
repz
mov
shr
in
sbb
aas
xor
test
lret
stos
add
push
das
pop
and
jnp
data16
outsb
es
ljmp
sub
mov
call
dec
icebp
dec
pop
add
lahf
fistl
xchg
xchg
daa
mov
call
call
aaa
lret
mov
shll
mov
scas
shll
sbb
or
push
pop
shl
jp
sbb
xor
mov
cmc
jecxz
lcall
cwtl
xlat
add
call
call
xchg
out
daa
cs
inc
xor
inc
lock
cmpsb
fwait
jo
xor
sub
data16
and
dec
cli
xor
mov
clc
sbb
es
push
jecxz
sub
setbe
push
push
lods
push
mov
add
loopne
popa
mov
call
call
and
fimuls
out
das
imulb
shr
adc
sub
push
inc
outsb
aam
pop
popa
add
call
call
call
mov
call
call
pop
mov
pop
stc
sbb
lcall
sub
divl
aad
push
imul
shll
and
and
and
sub
test
ret
sbb
xchg
cli
push
pop
movsl
std
push
push
inc
pop
jb
sub
call
call
sbb
xchg
jmp
mov
gs
mov
pop
adc
xchg
sub
jnp
pop
and
pop
adc
cmp
call
pushf
push
adc
pop
xlat
sbb
lock
call
jl
stc
jle
cld
loop
pop
popf
aam
jge
push
shll
divb
in
loope
lcall
cmp
jle
mov
out
push
cld
xchg
shlb
push
aad
in
xchg
cmp
cld
out
or
loopne
call
call
je
arpl
mov
test
jecxz
mov
jae
call
call
call
jbe
gs
push
fs
sub
xchg
mov
cmc
cwtl
inc
xor
jp
mov
testb
pop
or
sarl
cs
jb
mov
inc
in
inc
push
dec
jnp
cmc
fists
cs
jmp
loope
mov
mov
aam
or
cmp
rcll
loop
lret
fwait
call
call
adc
pop
leave
sub
ds
sbb
xchg
adc
add
outsb
and
sbbl
inc
push
push
cmp
sub
push
and
or
or
out
popf
ljmp
call
call
inc
call
call
jae
jle
mov
mov
dec
and
aam
je
pop
getsec
fwait
outsl
push
fdiv
pop
add
call
call
sub
pushf
pop
shrb
call
or
jnp
and
jecxz,pn
rorl
inc
mov
fiaddl
imul
shll
cmpsl
and
test
add
stos
int
ljmp
mov
and
and
and
and
and
dec
xor
hlt
xchg
push
xor
jnp
or
call
call
xor
popa
ljmp
ret
add
call
call
sbb
add
mov
lcall
push
clc
jnp
int
inc
jg
outsb
fistps
std
inc
fdivr
sub
mov
bound
iret
jle
xchg
imul
jno
push
call
call
jle
or
or
les
mov
sbb
loop
rclb
gs
mov
mov
cmpsl
call
call
cmp
lods
xorb
out
lods
mov
ficoms
mov
cltd
mov
fldcw
or
xor
in
out
cmpsl
push
push
xchg
push
or
cltd
pop
ret
addr16
in
pop
xchg
sub
lods
cld
cli
mov
shll
call
adc
out
aas
ret
sbb
fiaddl
mov
or
mov
jae
adc
pop
cmp
les
scas
pop
lcall
cmpsl
inc
or
test
add
xor
and
and
jae
xchg
xchg
pop
cmc
jo
and
std
inc
sub
call
call
call
lret
sub
call
call
call
inc
pop
add
lcall
adc
aaa
ret
mov
jp
push
lret
stc
test
or
sub
stos
mulb
stos
stos
shll
shll
or
jmp
dec
stos
int
sahf
scas
popf
adc
jno
bnd
mov
call
call
out
mov
pop
call
call
call
and
and
and
and
clc
fcmovne
leave
ds
jge
and
sahf
pop
xor
ljmp
adc
push
adc
add
call
adc
mov
cli
push
divl
lods
xchg
clc
rcl
mov
call
call
inc
mov
mov
stos
lds
in
xor
sahf
lahf
call
call
fsubl
or
jo
dec
push
and
and
sub
add
lcall
cmp
adc
fcmove
sahf
dec
leave
inc
mov
mov
repz
mov
or
xor
cmp
inc
push
xor
in
sbb
inc
sbb
or
bnd
call
stos
jge
out
push
add
mov
inc
pusha
outsb
repnz
andb
dec
jno
fbld
arpl
outsl
fists
cmp
in
call
in
fimull
inc
fdivrl
cld
dec
xchg
fmulp
fdivl
push
sbb
inc
and
lods
sbbb
test
sarl
xchg
into
mov
jae
call
call
dec
mov
int3
mov
pop
fsubp
loope
push
or
stos
inc
out
dec
ds
mov
and
int3
lret
stos
dec
enter
cmp
adc
sub
inc
sub
push
test
sbb
leave
mov
cli
ja
int3
in
pop
hlt
repnz
add
sub
call
call
call
bound
pop
add
sub
inc
subl
mov
imull
int
sbb
adc
leave
and
dec
adc
lahf
outsb
fisubrl
add
and
and
and
mov
or
lahf
pop
and
mov
ficoml
mov
and
adc
clc
fwait
fs
in
addl
call
call
jg
and
and
and
and
cs
decb
inc
test
sub
sahf
out
jg
outsb
hlt
faddl
test
xchg
push
sbb
cmpsl
cmc
cmp
push
test
cmc
adc
movsb
insl
popl
jnp
call
call
repnz
hlt
out
add
push
imul
fsubl
add
and
sbb
lret
pop
imull
or
lods
movsl
jno
sti
fistl
jl
push
lods
sbb
sbb
add
call
call
xor
repz
arpl
ffree
fsubl
decb
sub
call
call
call
cli
out
fidivrl
pop
xchg
mov
fsubrl
test
xor
push
fwait
pop
insl
add
xor
cmp
in
iret
and
or
test
call
call
lock
push
push
xor
icebp
add
and
and
and
and
and
and
and
out
xor
subl
and
mov
popa
outsl
cmp
sbb
fcoms
call
call
call
mov
lods
cwtl
negl
fistps
pop
scas
mov
mul
fadds
call
call
mov
fsubrp
in
mov
jl
dec
rcr
sub
imul
mov
add
or
cmc
add
ds
jne
jge
inc
fisttpl
dec
lahf
neg
add
sub
sbb
cmp
call
call
sub
or
sbb
xlat
jbe
dec
mov
insl
and
and
and
and
pop
xchg
je
adc
and
and
and
and
push
cmpl
and
and
and
and
loopne
sub
mov
test
imul
jns
mov
cld
pop
in
inc
popf
hlt
or
mov
add
push
lds
test
test
loope
mov
call
call
sub
jns
mov
loop
vmread
add
int
adc
adc
js
inc
add
jne
aad
cmpsb
add
call
dec
imull
mov
adc
mov
dec
and
adc
fs
scas
je
call
call
aaa
clc
adc
xor
insl
jge
cmp
loope
movb
leave
cmpsl
add
fnsave
les
mov
repz
xchg
dec
adc
fwait
push
sbb
jnp
int3
sbb
mov
nop
fcmovb
addr16
xor
inc
or
je
stos
je
jmp
mov
loopne
mov
imul
push
xor
pop
mov
ja
je
and
dec
call
call
pop
dec
jle
cmp
dec
bound
lea
inc
jae
int
adc
call
call
mov
adc
pop
jmp
and
xchg
lret
mov
or
sahf
or
imull
jo
jp
gs
and
and
and
and
and
and
and
call
call
fstps
pop
cmp
push
lea
pop
push
daa
sbb
pxor
xchg
dec
inc
add
ljmp
call
cmpsl
dec
hlt
push
enter
into
mov
or
test
scas
push
mov
pop
cltd
icebp
out
xor
mov
arpl
pop
ror
push
sbb
out
mov
loope
xchg
nop
fdivs
scas
fbstp
sbb
shll
je
and
insl
cmp
inc
lret
add
call
call
nop
mov
or
push
dec
xor
ror
ljmp
push
stos
xor
sub
insb
or
sub
and
and
and
and
and
mov
clc
int3
add
dec
pop
test
mov
call
call
call
sbb
popa
mov
popf
int
andb
jp
add
inc
sbb
lock
mov
das
xchg
shr
and
call
call
call
lds
sbb
push
mov
or
test
or
jns
jbe
cmpsl
add
sbb
adc
call
call
int3
stc
push
adc
push
pop
cmc
xor
aad
adc
cmpsb
mov
mov
sti
adc
and
pop
mov
lods
sub
sbb
sbb
sbb
popa
push
shll
inc
jnp
int3
cwtl
push
push
xor
scas
adc
lret
push
movsb
inc
pop
cmp
call
call
inc
arpl
aas
lret
int
popa
pop
pop
cmc
cld
lods
xchg
sti
and
call
call
and
inc
push
outsb
loop
hlt
and
ret
jge
jle
fmulp
insl
mov
or
mov
inc
call
call
call
sub
jae
cmp
mov
call
call
fildl
and
loop
adc
pushf
fidivrs
fs
mulb
mov
xchg
push
outsl
andl
aaa
push
adc
push
and
pop
fbstp
repz
call
call
xor
sbb
mov
add
inc
jnp
push
dec
insl
pop
sub
mov
push
dec
fwait
adc
mov
mov
mov
int3
movsl
fs
cmp
cmpsl
lret
rcrb
and
das
lea
std
call
call
ja
sbb
mov
dec
sti
inc
push
and
adc
xor
mov
and
or
fsubs
lea
test
and
cmc
mov
push
pop
adc
sub
mov
inc
pop
sbb
arpl
in
stos
xchg
xorb
call
cs
jmp
and
and
and
and
and
and
clc
mov
adc
inc
or
sbb
push
mov
es
ljmp
mov
je
cmp
push
call
call
push
jg
das
roll
pop
push
incb
repnz
idivl
cwtl
loop
cmpsl
mov
fistl
cmp
sub
inc
add
out
inc
inc
jb
pop
call
call
sbb
daa
hlt
or
hlt
test
pop
in
test
xor
mov
pop
addb
and
ret
mov
jae
popa
cmpb
and
and
and
and
and
and
add
mov
sbb
mov
add
out
sub
dec
loopne
inc
in
xor
iret
call
call
call
sub
ret
cwtl
cltd
cmpsl
sbb
sub
adc
and
dec
cld
cltd
es
mov
in
and
and
and
and
and
sti
and
jmp
call
call
dec
xor
mov
inc
mov
xorb
in
jo
out
jp
fildl
sbb
push
push
xor
inc
stc
push
add
sbb
out
dec
sti
imul
dec
in
sti
jae
cli
popf
pusha
loopne
sti
cmp
xor
call
call
in
jb
cmp
jle
push
cmp
pop
push
xor
out
mov
iret
inc
jg
aam
ffree
sub
xor
imul
pop
cmc
sub
jns
ja
fldenv
mov
sub
leave
push
adc
mov
call
call
sar
cmpsb
js
daa
push
cld
test
and
arpl
dec
add
enter
xor
jmp
adc
iret
and
xor
call
call
cmp
dec
jb
pop
or
ljmp
pop
xchg
fstpt
call
call
push
mov
and
pop
lods
mov
adc
mov
sar
mov
pop
mov
push
cltd
scas
icebp
jnp
add
pushf
mov
out
lcall
xchg
push
pop
aad
movsl
call
call
mov
int
loop
mov
fsubrl
pusha
in
lahf
sbb
xchg
int
adc
dec
and
and
and
and
and
and
and
jae
jmp
test
cltd
push
dec
sub
cld
or
call
mov
mov
pop
divb
inc
dec
or
jle
call
call
call
icebp
push
push
and
shr
pop
sub
icebp
roll
jecxz
pop
and
jg
mov
xor
cmp
add
fildll
or
xchg
les
dec
cmpb
call
call
out
jmp
jecxz
out
mov
push
xchg
clc
inc
ret
ret
mov
sar
or
in
xchg
pop
push
jne
inc
ljmp
clc
or
and
and
and
and
int3
ss
call
call
call
movsl
lock
mov
sbb
push
jae
stos
push
leave
je
mov
push
cmpsl
jp
sub
pop
pop
int
in
rcr
aas
mov
xor
rcl
mov
mov
ljmp
pop
mov
add
loope,pt
cmp
movsl
js
call
call
call
push
push
mov
mov
push
call
lea
and
and
and
and
and
js
arpl
inc
jecxz
mov
call
fmull
fnsave
ljmp
out
inc
dec
call
call
call
add
sub
call
call
rclb
mov
insl
repz
mov
popa
adc
sbb
cwtl
std
push
jns
call
ljmp
lret
pop
inc
fsubl
xor
push
push
add
or
inc
out
mov
rorl
call
call
add
shll
adc
mov
call
call
lea
in
aaa
lret
dec
ret
fdivl
call
call
call
fcmovnb
adc
push
pop
test
lret
xor
out
mov
enter
push
sbb
push
pop
and
fistpll
test
int3
xchg
jb
xchg
lods
sbb
je
bound
movsl
imul
push
add
into
orb
sub
call
call
call
ss
sbb
ficoml
in
mov
and
mov
bound
mov
adc
imul
lret
call
call
call
rorl
xor
mov
test
clc
sbb
bound
ljmp
mov
sbb
insb
rcrl
push
jo
pop
int
xchg
adc
add
and
cmp
js
xchg
aad
call
call
call
jge
adc
push
xchg
xor
add
or
dec
mov
in
sahf
xchg
xchg
push
xor
mov
and
and
and
and
out
lret
or
pushf
pop
jp,pn
inc
or
cmp
dec
mov
aad
call
call
or
xlat
into
lock
and
out
add
inc
lock
cmp
pop
clc
dec
out
jmp
xchg
bound
cwtl
pop
xlat
xor
das
stc
mov
loopne
inc
pop
push
daa
jo
stos
push
mov
stos
inc
sub
pop
or
xorps
and
dec
jg
push
enter
call
ret
arpl
jg
cwtl
jno
xchg
and
and
and
and
cld
inc
sub
sub
mov
into
push
inc
xor
sub
ss
and
and
and
and
pop
ljmp
mov
call
call
call
sub
or
dec
inc
mov
adc
cmp
or
mov
vunpcklpd
imul
xor
ret
or
and
sub
adc
in
push
push
test
inc
push
xchg
out
sub
aad
mov
sbb
test
call
dec
icebp
fistps
push
add
dec
jecxz
sub
dec
and
hlt
ss
call
call
data16
movsl
loope
mov
insb
pop
mov
fsub
push
int
data16
sbb
or
cmp
lods
dec
aaa
mov
cli
fadds
pop
lods
add
dec
testb
and
scas
icebp
adc
xchg
imul
ret
jle
out
ret
and
mov
call
call
dec
mov
and
and
and
and
and
and
and
pop
pop
xorb
cmc
lock
pop
push
xor
call
call
pop
loop
sarl
fmuls
xor
cmp
xchg
and
stos
fsubrs
sbb
into
movsb
sbb
push
insb
cld
mov
mov
call
call
push
fdivl
mov
je
jbe
or
pushf
sub
sub
shlb
bound
gs
pop
xor
lret
push
inc
cmc
insb
je
sbb
call
call
call
insl
mov
pshufw
fcmovb
mov
jg
sbb
pop
mov
sbb
repz
popa
pop
outsl
aad
fnstsw
loopne
fstpl
and
stc
inc
mov
or
int
call
call
fiaddl
ss
fs
fs
mov
inc
movsl
xor
hlt
mov
cmp
jae
jge
and
pop
lods
add
ljmp
outsb
pushf
orb
mov
movsl
or
gs
pop
pop
fdivs
jle
test
mov
push
call
call
lock
js
lcall
adc
lcall
inc
aas
jo
inc
stos
add
mov
cld
jae
int3
jle
icebp
and
xor
loopne
inc
icebp
testl
pop
jnp
adc
sub
ds
jmp
pop
call
call
call
call
cmp
in
inc
pop
test
cli
repnz
inc
adc
sbb
sahf
call
rolb
in
loop
xchg
and
pop
fucom
test
mov
and
and
and
call
call
call
stos
and
aad
imul
jg
fstpt
mov
call
call
stos
lea
pushf
decl
out
push
rcrl
or
and
jae
jo
outsl
push
mov
enter
pop
fidivrl
or
int
outsb
fidivrl
js
jo
sbb
mov
xchg
es
xor
adc
xor
movsl
call
call
lahf
insl
leave
fisttpll
mov
inc
inc
test
adc
test
call
sub
or
cmp
sub
sbb
sbb
pop
mov
xchg
mov
pop
notb
or
xchg
cmp
sarl
mov
rcrl
call
call
call
pop
addl
sbb
sub
arpl
cltd
mov
js
jl
jg
mov
sahf
jle
pushf
sbb
mov
insl
sbb
lea
and
xchg
push
cwtl
pop
lods
jmp
call
call
out
pop
and
jno
iret
push
xchg
call
call
inc
adc
sbb
ljmp
test
mov
mov
push
aaa
lea
adc
add
std
js
leave
incb
xchg
inc
jns
setno
inc
mov
in
push
and
xor
push
andb
ljmp
sbb
pop
jg
ss
call
call
push
aad
xor
data16
popf
enter
ret
inc
jnp
push
loop
cmp
or
pop
fidivs
adc
sbb
adc
inc
icebp
loope
adc
aad
call
call
call
push
add
jo
and
and
and
and
and
dec
leave
test
xchg
mov
mov
cmp
arpl
shlb
call
dec
jo
arpl
inc
lahf
ret
jno
cmpsl
les
rorb
nop
aam
imul
les
call
call
outsl
lods
dec
xchg
push
test
call
call
call
jnp
outsl
lahf
sar
call
call
imulb
sub
jg
cltd
je
call
call
mov
test
test
add
out
arpl
add
outsl
mov
inc
sbb
out
imul
filds
pop
jecxz
in
call
outsl
sbb
or
xor
xchg
xchg
roll
lods
rolb
mov
mov
mov
cpuid
mov
adc
mov
in
call
call
pop
ret
lret
or
xchg
jno
bound
xchg
sbb
jmp
mov
jae
add
cli
cmpsl
dec
sub
sti
sbb
rclb
mov
in
xchg
gs
out
inc
dec
call
call
int
inc
push
popa
mov
mov
xchg
and
in
aad
insb
or
pop
mov
lret
xlat
and
mov
push
sub
shll
or
mov
mov
lcall
call
call
ss
mov
test
popl
popf
fnstenv
lods
cmp
int
idivb
cltd
ret
call
call
or
push
and
mov
mov
shl
cld
roll
ljmp
xchg
ret
pop
add
loop
ffreep
out
push
ja
nop
cmp
add
add
orb
stc
nop
mull
mov
call
call
call
gs
lret
dec
cltd
les
push
xchg
mov
fdivs
jecxz
xchg
xchg
das
pop
lret
mov
sbb
jge
sbb
sub
loope
call
call
stos
or
hlt
adc
adc
dec
mov
repz
and
hlt
mov
sbb
jmp
loopne
movsb
mov
mov
test
movb
addr16
stc
int3
or
cmp
mov
pop
cmp
xchg
call
push
pop
call
inc
add
call
call
call
jecxz
adc
pusha
loope
and
xlat
mov
xor
call
and
and
and
and
and
and
and
and
es
mov
mov
inc
mov
xlat
call
call
jp
lret
jmp
jns
mov
inc
rorb
sbb
testl
fadds
sbb
push
loopne
dec
loope
nop
rcll
mov
jmp
jb
fwait
sub
bound
mov
lcall
cmp
xor
stos
sti
test
mov
call
call
or
sbb
add
mov
sub
repnz
daa
or
mov
pop
mov
and
cmpsl
call
call
call
call
loope
push
push
mov
sbb
jo
mov
int
and
sub
cwtl
push
lahf
std
push
push
fsubs
addl
das
ret
leave
and
adc
jno
stos
lods
fs
xlat
jmp
push
call
call
call
push
jo
cmp
pop
imul
and
in
push
jge
data16
sub
das
repnz
adc
gs
cs
push
xor
inc
adc
out
push
leave
xchg
cli
mov
mov
call
shlb
adc
cmp
aaa
call
call
call
scas
mov
jno
int
cltd
xchg
pop
jmp
mov
das
les
int3
ljmp
push
stc
push
mov
mov
and
pop
push
jns
sbb
enter
aad
jmp
popf
test
or
jmp
lea
rorb
push
lahf
add
or
call
call
jno
rorb
mov
insb
fidivrs
add
test
call
call
call
cs
add
mov
mov
sti
cmpsl
pop
or
inc
lea
sahf
pop
and
and
and
and
or
mov
jmp
pop
bound
adc
pop
sbb
pop
lods
stos
cmpsl
xchg
es
not
mov
dec
clc
cmp
cmpsl
sub
pusha
add
cmpsb
inc
xor
in
arpl
call
call
aaa
push
inc
push
sub
inc
or
cmp
jae
dec
xor
hlt
and
xor
ret
call
call
call
out
jae
and
push
out
f2xm1
xor
movsl
xchg
push
xchg
aas
sbb
iret
inc
xor
sub
xor
call
call
les
ss
push
ds
call
adc
cwtl
jno
je
movsb
roll
loopne
cvtps2pi
in
push
xchg
call
call
push
cmpsl
push
aaa
aam
cmp
mov
dec
popf
loop
insl
ds
fs
add
xlat
or
fistl
inc
mov
sti
imull
sahf
ja
mov
sbb
sti
pop
adc
and
and
and
and
and
imull
mov
push
adc
call
call
rclb
cltd
mov
mov
and
add
lods
jp
jge
sbb
lods
adc
test
jns
aaa
dec
xchg
in
push
pop
pop
cld
adc
sbb
test
cmp
fcomip
clc
sub
lret
mov
in
movsb
loopne
insb
fmul
mov
call
call
xchg
and
das
sub
insb
sbb
mov
test
adc
and
and
and
and
and
cmp
sub
data16
fcmovne
mov
cmpsb
push
stc
lret
in
insb
leave
adc
neg
mov
jae
fsub
sbb
pop
adc
adc
xchg
cwtl
or
seto
call
call
jns
fdivrs
sub
ja
rorl
ficoms
outsb
dec
fstpl
mov
pop
int3
repz
gs
fwait
outsl
addl
pop
fwait
pop
or
sub
pop
or
call
call
add
and
add
sbb
loopne
jo
outsl
pusha
or
mov
mov
xor
dec
add
je
ds
or
mov
mov
test
mov
movb
call
call
call
out
in
mov
and
jge
and
and
and
and
and
and
pop
inc
mov
jbe
and
cli
jl
and
and
and
and
push
pop
push
push
fisubs
pop
xchg
andl
fwait
inc
imul
adc
aam
xor
cld
or
jo
cli
call
call
call
mov
std
pop
dec
in
or
jge
mov
call
call
lds
xchg
and
and
and
and
and
sub
hlt
jno
stc
adc
call
call
call
call
sub
ljmp
mov
jne
movsb
sbb
sbb
cmpsl
and
fsubrs
dec
adc
popa
push
clc
popa
and
adc
ret
inc
dec
dec
cli
cmp
ss
loop
and
call
call
out
js
push
dec
cmp
pop
call
mov
or
in
inc
fs
les
pusha
xor
outsl
bound
xor
mov
cmp
call
call
call
push
testb
pop
mov
push
xor
jg
out
pop
adc
mov
out
or
pop
mov
das
pop
mov
push
pop
jmp
test
mov
xor
fneni(8087
loop
ljmp
cltd
pop
nop
add
sti
and
and
and
and
and
mov
imul
call
call
call
push
aas
xchg
sar
inc
shlb
stos
andl
scas
cmp
insb
pop
xor
push
stos
dec
adc
cmp
jge
sub
or
rcrb
dec
xor
insl
xlat
inc
ljmp
jecxz
sbb
xchg
and
inc
pop
daa
scas
movsl
imul
into
xor
and
call
call
push
imul
bound
imul
out
mov
dec
fiaddl
call
jl
fs
inc
xchg
inc
xchg
ret
dec
push
jl
aaa
jbe
dec
jecxz
sbb
jl
jne
cmp
int3
ficomps
add
icebp
xchg
mov
repnz
pop
and
xchg
rolb
call
call
push
lret
push
rorb
push
pop
fs
out
mov
fisttps
testb
jae
add
decl
push
and
fistl
aad
clc
pop
shlb
sarb
mov
add
sbb
jne
clc
xchg
aad
inc
rolb
inc
sub
adc
in
js
push
out
call
call
call
xchg
push
imul
jg
addb
push
adc
mov
mov
push
subps
add
mov
jo
mov
pop
iret
mov
into
sub
pop
add
daa
pop
aaa
lahf
in
pop
jbe
mov
dec
call
call
inc
inc
std
jl
inc
rcll
cmp
jp
shll
push
cmp
mov
call
call
call
stos
and
out
mov
xor
bound
lret
popl
and
and
and
and
and
and
and
and
push
daa
sbb
mov
sub
or
xchg
or
popf
scas
or
call
call
cwtl
test
mov
and
and
and
and
and
and
and
in
cwtl
add
adc
cmp
sub
ret
in
call
call
call
xchg
popf
xchg
imul
pop
adc
pop
xor
mov
sbb
cli
pushf
push
repz
ret
cmp
out
and
mov
mov
lahf
ret
aas
add
jns
jg
insb
cmp
sbb
lea
or
call
call
mov
mov
pop
and
sti
incb
pop
mov
pushf
mov
outsb
cmp
xor
sub
sbb
stos
jns
push
ljmp
call
call
call
or
pop
xchg
jo
push
xor
xlat
les
aas
repz
mov
sub
das
pop
dec
push
cmpsl
fwait
rclb
adc
call
call
imul
stos
out
movsl
cs
or
jae
imul
fstps
cmpsl
into
dec
or
inc
mov
add
pushf
leave
in
cmp
and
fnsave
and
adc
mov
insl
movsb
or
loopne
mov
xchg
mov
push
adc
xor
call
call
call
xchg
sub
call
call
call
fwait
jge
push
push
adc
inc
fwait
icebp
shr
jecxz
xchg
push
and
lret
sub
jecxz
adc
repnz
mov
test
leave
jo
xor
mov
and
and
and
and
and
jae
mov
dec
adc
call
call
xor
out
dec
push
or
in
sub
inc
iret
push
ret
mov
leave
inc
inc
or
shlb
xlat
sub
jo
outsl
pop
dec
mov
xor
cmpsl
ss
xchg
aas
pop
adc
stc
mov
cld
sub
mov
pop
or
cmpsl
cmp
call
sub
sbb
cmpsl
push
cli
cli
fs
call
call
movsl
sqrtps
call
call
push
fisubrs
mov
mov
lret
push
cmp
mov
sbb
cmc
pop
mov
adc
int
xchg
mov
pushf
push
mov
std
jns
xor
mov
call
dec
sbb
int
and
xor
dec
adc
adc
int
jp
ret
movsl
xchg
ds
sbb
sub
cwtl
adc
inc
std
sub
dec
aaa
push
mov
out
gs
jge
jne
push
or
mov
or
insl
enter
call
call
call
sbb
lock
adcl
push
inc
lea
leave
sub
std
sti
icebp
in
add
mov
ja
or
adc
call
insl
ret
or
rcrl
out
pop
pop
js
dec
add
fsubrp
mov
shl
cmpsb
call
call
js
hlt
rclb
loop
push
adc
test
inc
loope
in
lock
or
and
and
icebp
sbb
shll
std
and
mov
repz
int3
addr16
lods
sahf
movsl
mov
and
das
leave
sub
cli
mov
call
call
inc
bound
or
jb
aam
jne
sbbb
pop
add
shlb
or
call
call
mov
call
call
call
test
push
imul
xchg
ss
or
dec
sarb
repz
mov
mov
outsl
and
or
push
lds
shlb
push
cltd
mov
call
call
call
test
mov
or
jmp
jmp
adc
inc
pop
and
mov
mov
jo
mov
cld
outsl
pop
fadd
jns
xchg
mov
test
add
rcr
ret
loope
jns
call
call
call
add
test
call
call
dec
out
adc
call
call
fnstenv
aam
sub
pop
sbb
fiadds
add
and
sub
xlat
stos
inc
nop
mov
push
ss
inc
or
mov
call
call
arpl
je
push
ret
pop
ud1
mov
cmpsl
call
call
pop
lcall
mov
xchg
sbb
testb
test
jns
rcrb
loop
call
jle
iret
movsb
or
xor
pop
xchg
or
inc
xchg
in
aad
scas
loop
and
dec
push
data16
push
in
add
ret
mov
call
call
jo
dec
out
sbb
scas
orb
call
call
jnp
shlb
call
call
call
je
mov
adc
cmp
xor
cmp
xchg
cmp
adc
pop
xor
cs
pusha
jno
lea
xor
sub
insb
scas
dec
bound
sub
fstpl
inc
mov
and
and
and
and
and
and
and
out
imulb
int3
pop
loop
loope
jmp
push
pop
adc
inc
lds
cmpl
aad
cli
cmpsb
or
ffreep
cmp
imul
and
and
and
and
xor
iret
sbb
push
sub
mov
cmp
jg
call
call
jae
cld
and
cmpsb
xor
mov
push
rcrl
cmp
dec
data16
ret
or
xchg
aad
mov
and
movsb
subb
call
jbe
push
sbb
pop
and
mov
bound
clc
mov
fiadds
cwtl
ds
sbb
push
cmp
and
fimull
call
call
or
loop
loopne
fdivs
stc
mov
xchg
dec
roll
and
pusha
out
popa
daa
cmp
shrb
adc
test
push
xchg
adc
call
call
cmp
pop
sub
and
loopne
icebp
mov
push
sub
and
cmp
int3
push
pop
sbb
jl
and
xor
jnp
inc
jmp
dec
mov
ss
fisubl
cmp
add
mov
jl
pop
mov
test
mov
call
call
adc
cmp
and
ret
xchg
int
out
sbb
push
lret
enter
mov
fistpll
ret
es
andb
ret
call
call
call
call
sbb
jae
sub
stos
movsb
out
sti
out
adc
pop
mov
dec
mov
addl
sbb
or
stos
fwait
pop
loop
call
call
adcb
mov
pop
scas
inc
stc
std
outsb
push
or
cld
adc
in
call
aaa
call
rol
scas
xor
scas
lods
fimull
repz
fisubl
sarl
sub
or
clc
fcomps
flds
sbb
xchg
push
xchg
call
call
fsubl
scas
adc
push
jno
test
call
call
and
and
and
and
and
pop
je
push
pusha
fstpt
insl
xchg
xor
adc
lret
and
and
and
and
and
push
xchg
aam
call
call
call
jge
mov
xchg
jbe
sbb
cltd
cmp
push
stos
mov
jmp
int3
js
clc
adcb
mov
lret
push
and
mov
int
push
scas
xchg
xor
pop
xchg
push
push
or
pop
sbb
outsl
adc
cmp
add
call
call
int3
add
jp
mov
lock
addr16
es
insl
test
icebp
dec
jmp
call
call
addr16
xchg
es
std
loop
xor
loopne
movsb
pop
add
mov
popa
jp
data16
cmp
lods
ljmp
pop
lcall
dec
lret
mov
lcall
fadds
sbb
pop
call
call
loop
test
adcb
sbb
xchg
and
and
je
shlb
aaa
inc
addr16
dec
ss
in
xchg
or
call
call
inc
addr16
mov
in
sbb
xor
sub
or
pop
mov
add
adc
sub
cmpsl
xchg
pop
dec
cwtl
mov
jns
mov
sarl
call
call
stc
dec
int3
fimull
or
lock
pop
jp
xor
lods
fildll
dec
adc
rorb
in
xor
iret
and
mov
push
addl
scas
sub
call
call
call
mov
sbbb
out
aaa
arpl
and
and
and
repnz
xchg
sub
fildll
or
mov
sub
mov
mov
mov
sub
mov
push
mov
mov
pop
mov
mov
add
xor
mov
mov
sub
add
add
mov
sub
xor
cmp
jne
add
xor
sub
and
mov
add
add
mov
xor
sub
sub
mov
cmp
je
xor
mov
mov
add
jmp
sub
mov
mov
sub
sub
cmp
je
sub
leave
ret
int3
int3
push
mov
push
push
and
mov
push
mov
xor
add
sub
cmp
jne
mov
add
ret
int3
int3
int3
push
mov
add
inc
mov
mov
and
mov
mov
add
xor
call
sub
add
xor
add
imul
add
mov
sub
mov
mov
sub
add
mov
sub
add
cmp
jne
sub
xor
sub
mov
mov
add
mov
rol
push
shr
sub
ret
mov
xor
mov
call
mov
xor
add
ret
int3
int3
int3
sub
mov
or
mov
and
add
cmp
jne
inc
or
add
leave
ret
int3
int3
push
mov
sub
mov
or
sub
sub
or
sub
mov
sub
mov
or
and
sub
or
or
shl
sub
rol
xor
mov
mov
and
xor
sub
add
mov
or
sub
add
add
mov
mov
add
and
sub
xor
sub
and
add
xor
add
sub
mov
mov
xor
add
xor
cmp
jb
mov
mov
and
sub
add
xor
xor
add
and
xor
mov
add
mov
sub
mov
sub
or
add
add
sub
mov
shl
add
add
sub
add
add
add
mov
push
rol
and
pop
mov
cmp
jne
mov
mov
add
add
mov
inc
add
mov
sub
add
mov
sub
mov
call
cmp
jne
add
mov
add
add
sub
add
cmp
jne
add
mov
or
sub
add
mov
sub
and
cmp
je
add
mov
sub
and
mov
add
add
mov
add
mov
add
add
add
mov
mov
push
mov
rol
pop
mov
mov
cmp
jne
call
and
xor
add
mov
xor
xor
add
add
sub
sub
mov
xor
or
sub
xor
mov
add
sub
addl
mov
add
sub
add
mov
mov
sub
add
cmp
je
shr
sub
jmp
push
call
cmp
jne
xor
mov
cmp
je
add
or
sub
mov
and
mov
or
xor
mov
mov
and
or
sub
and
sub
cmp
je
mov
mov
mov
add
add
or
or
xor
add
add
add
add
xor
xor
sub
add
sub
mov
add
mov
sub
dec
xor
mov
mov
xor
add
add
mov
xor
mov
xor
add
sub
mov
sub
sub
add
add
or
and
add
xor
mov
imul
or
sub
call
add
mov
or
sub
mov
ret
or
add
add
and
mov
add
adc
and
js
sbb
sub
sub
dec
sub
adc
dec
jne
push
jnp
dec
outsb
adc
xor
push
add
ds
add
insb
inc
push
data16
add
pop
and
jns
test
push
adc
add
pop
jle
add
subb
inc
xor
add
add
add
add
pusha
pusha
jnp
jle
xor
adc
and
add
pop
pop
and
inc
add
inc
sbb
mov
inc
adc
sbb
add
dec
aaa
fs
add
pop
push
data16
add
sbb
add
add
add
and
inc
and
push
aaa
inc
pop
mov
cmp
js
push
push
push
jb
dec
addr16
cmp
bound
add
dec
and
test
outsl
dec
jns
push
imul
js
push
xchg
es
add
sub
adc
js
imul
inc
add
sbb
pop
add
sub
and
mov
add
add
add
jl
pop
bound
add
add
imul
add
xor
pop
inc
add
test
inc
pusha
adc
jne
adc
inc
aaa
push
add
and
and
add
pop
mov
add
jg
add
xchg
add
push
add
xor
xorl
mov
jge
cmp
jl
es
cmpl
lea
outsl
cmp
add
jbe
inc
pusha
jbe
add
jne
push
sbb
xor
pop
adcl
adc
adc
outsb
xor
add
push
inc
push
mov
dec
jge
jl
mov
add
jns
aaa
adc
add
push
je
jae
lea
xchg
jnp
add
sbb
pop
inc
sbb
sub
add
aaa
inc
cmp
add
pop
add
xchg
mov
daa
js
add
dec
jge
pop
add
mov
mov
insb
pusha
sub
add
inc
xor
add
cmp
jns
cmp
aaa
cmp
jne
inc
popa
daa
inc
andb
dec
jns
push
jnp
sub
cmp
adc
adc
je
xor
addl
add
ja
push
pop
pop
je
cmp
pop
pop
jbe
add
add
add
adc
jg,pt
add
add
sub
outsl
jl
jbe
sub
pop
cmp
add
adc
test
add
add
cmp
sbb
adcl
addb
add
jae
adc
xor
xchg
push
jnp
add
mov
dec
test
add
pop
push
outsl
cmp
daa
sbbb
outsl
pop
mov
add
xor
and
jns
add
pop
das
add
test
jl
add
lea
push
xor
dec
dec
aaa
push
jl
xor
and
add
dec
jb
pop
push
aas
sbbl
sbbb
andl
add
insl
fs
cmp
mov
addl
xchg
jl
outsl
mov
xor
ja
add
pusha
inc
add
pop
inc
sub
mov
dec
and
push
xor
dec
push
mov
cmp
inc
jl
xor
cmp
dec
adc
jl
cmp
push
aas
gs
xor
and
add
cmp
and
pop
pop
adc
push
push
add
arpl
dec
sbbl
outsb
pop
mov
add
add
add
push
imul
test
add
dec
sbb
and
pop
jo
xorb
sub
imul
add
push
imul
dec
adc
add
xchg
xchg
addl
sbb
and
jg
inc
jne
arpl
dec
jae
add
cmp
dec
addb
ss
push
xor
jge
add
add
sub
gs
and
jg
xor
imul
pop
addl
pusha
daa
sub
push
pop
push
pop
pop
mov
add
mov
add
pop
sub
sub
sub
jbe
add
ss
inc
add
pop
dec
ja
aas
add
cmpb
jb
mov
inc
sbb
xorl
add
es
sbb
arpl
ss
adc
add
add
push
inc
push
and
arpl
and
mov
push
xor
lea
cmp
add
insb
xor
sub
dec
sub
and
jno
add
add
cmp
jae
jl
daa
jne
jne,pn
add
sub
add
adc
inc
and
cmp
add
add
aas
js
push
sub
inc
push
jns
cmp
dec
jnp
subl
add
outsl
pop
sub
push
das
add
inc
add
mov
add
ja
add
add
push
adc
imul
inc
pop
jno
inc
push
jne
je
add
sbb
add
addl
cmpl
add
push
and
sbb
jbe
jnp
add
cmp
add
push
add
lea
xor
dec
outsb
jg
jno
cmp
and
arpl
add
pop
mov
add
pop
add
sbb
sbb
cmp
jae
and
sub
outsb
add
lea
add
cmp
cmp
push
jbe
bound
mov
pop
data16
sub
mov
addl
test
imul
push
outsl
insb
push
add
pop
pop
pop
insb
add
xor
mov
je
sub
add
push
addl
inc
popa
dec
xor
lea
add
and
sbb
cmp
jg
popa
jne
pop
jbe
add
mov
sbb
inc
aaa
add
add
xor
xor
inc
jp
sbb
sbb
ja
xor
sbb
push
xor
jnp
add
pop
push
jle
xor
addb
mov
add
jp
add
jns
adc
and
adc
and
dec
dec
add
addr16
xchg
push
popa
cmpb
adc
pop
xor
adc
mov
push
inc
dec
add
add
add
cmp
add
add
add
push
push
and
add
inc
mov
add
add
outsb
add
sub
and
adc
sbb
push
sbb
addb
mov
xor
pop
sub
push
pop
arpl
inc
jo
pop
push
add
pop
jle
add
add
add
test
orb
cmp
inc
outsl
andb
jns
add
xor
adc
pop
sub
jo
and
daa
es
and
insb
dec
dec
add
adc
sbb
add
adc
pop
cmp
inc
pop
jnp
sub
xchg
popa
sub
jbe
add
cmp
add
cmp
sub
push
add
add
imul
pop
cmp
add
push
cmp
jae
add
add
cmp
push
sbb
cmp
add
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
cmpl
jne
call
push
call
push
call
pop
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
xor
inc
cmp
push
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
jne
pushl
movl
call
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
mov
mov
push
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
lea
sub
andl
add
dec
jne
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
movb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
push
mov
push
push
movb
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
push
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
sar
mov
mov
and
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
pop
xor
mov
lea
cmpl
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
xor
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
mov
addl
pop
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
mov
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
mov
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
movl
mov
mov
cmp
je
cmp
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
rep
stos
xor
inc
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
mov
test
je
cmpl
push
jne
call
test
pop
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
cmpl
push
mov
jne
cmp
ja
push
call
test
pop
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
cmpsb
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
cmpsl
inc
add
cmpsl
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
test
add
test
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
push
mov
test
push
push
jne
pushl
call
pop
jmp
push
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
cmp
ja
push
call
mov
test
pop
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
mov
test
pop
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
mov
jmp
xor
cmp
ja
test
jne
inc
push
push
push
pushl
call
test
jne
cmpl
je
push
call
test
pop
jne
xor
pop
pop
pop
pop
ret
cmpl
push
jne
mov
push
call
test
pop
je
mov
sub
pop
ret
push
jmp
pushl
push
pushl
call
pop
ret
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
inc
add
roll
roll
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
roll
ret
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pop
ret
fs
insb
ret
je
inc
add
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
ret
rol
inc
add
ret
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
push
push
mov
imul
test
push
mov
jne
inc
xor
cmp
ja
cmpl
jne
add
and
cmp
ja
push
call
mov
test
pop
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
jne
neg
ret
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
shr
cmpl
mov
mov
pop
jne
xor
leave
ret
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
je
cmpw
jne
testb
je
xor
inc
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
movzbl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
sar
push
mov
movzbl
testb
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
jmp
enter
adc
add
add
add
in
add
pop
iret
add
sbb
add
fs
lods
iret
add
pushf
adc
add
lret
ret
add
lret
lock
cld
lret
adc
add
push
lret
add
cmp
add
push
lret
add
outsb
lret
add
or
add
lret
add
mov
lret
add
loop
add
lock
add
push
int3
add
and
add
inc
int3
add
dec
int3
add
pop
int3
add
push
int3
add
or
add
add
stos
int3
add
mov
int3
add
loop
add
hlt
int3
add
or
add
and
add
adc
add
roll
add
roll
add
roll
add
roll
add
roll
add
add
rolw
add
add
dec
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
rolb
add
rolb
add
rolb
add
rolb
add
add
mov
add
pushf
rolb
add
rolb
add
add
xor
add
push
rolb
add
rolb
add
rolb
add
iret
add
fcmove
add
lret
add
add
add
int
add
int
add
add
add
add
js
add
xchg
add
movsb
int
add
int
add
int
add
int
add
add
ss
add
and
add
adc
add
cld
into
add
ljmp
add
into
add
xchg
into
add
xchg
add
jb
add
into
add
inc
into
add
sub
add
sbb
add
add
add
clc
int
add
add
add
add
add
mov
add
sahf
iret
add
pop
add
xorb
xorb
add
add
add
add
xor
add
leave
add
je
gs
jo
imul
add
push
add
je
imul
bound
gs
add
movl
inc
imul
outsb
addr16
outsl
je
imul
outsl
outsb
inc
add
jl
inc
gs
gs
inc
imul
outsl
jo
inc
imul
jb
popa
je
inc
imul
jns
add
ret
gs
je
jbe
outsb
je
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
and
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
je
imul
popa
je
add
pop
add
je
jb
outsl
arpl
fs
js
push
add
add
je
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
jb
outsl
jb
add
je
jb
arpl
jae
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
imul
jbe
inc
gs
outsl
fs
gs
imul
add
movb
imul
gs
push
dec
outsl
je
imul
outsl
outsb
add
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
pop
add
popa
jo
popa
insb
imul
adc
dec
gs
jo
gs
insb
insb
outsl
arpl
push
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
popa
je
add
or
dec
gs
jo
jb
add
arpl
inc
jb
popa
je
push
jb
arpl
jae
add
inc
add
gs
out
add
gs
imul
dec
add
fs
imul
add
cwtl
add
je
jb
arpl
fs
jae
add
add
je
jne
jb
outsb
je
push
dec
add
or
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
adc
inc
outsl
jne
insb
gs
insb
imul
add
dec
add
je
jne
jae
jb
xchg
add
je
jb
arpl
arpl
add
jae
jb
dec
outsb
jne
je
insl
inc
add
inc
insb
imul
arpl
outsb
add
mov
dec
outsb
data16
popa
je
push
arpl
add
inc
insb
imul
inc
outsl
jb
popa
je
jbe
imul
push
add
je
outsl
jb
addr16
jne
fs
imul
add
ja
arpl
add
mov
fs
insl
popa
addr16
add
hlt
add
data16
je
arpl
aaa
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
fs
imul
add
arpl
popa
imul
outsb
add
addb
gs
imul
outsb
addr16
add
fwait
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
inc
imul
imul
jb
insl
inc
add
add
push
outsl
jae
dec
gs
popa
addr16
add
mov
imul
jae
popa
addr16
add
loop
inc
imul
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
pop
add
gs
je
push
outsl
jo
jo
outsb
jne
outsb
add
je
imul
outsb
addr16
add
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
or
inc
jo
outsb
fs
outsb
jne
add
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
testl
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
imul
popa
jae
inc
js
add
or
inc
gs
jne
jae
jb
outsl
jae
add
imul
jne
dec
outsb
jne
add
inc
push
xor
cs
insb
add
inc
add
inc
push
outsl
arpl
je
add
sbb
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
add
add
inc
inc
jb
popa
je
inc
jbe
outsb
je
add
add
inc
inc
outsl
outsb
outsb
arpl
push
push
xor
xor
fs
insb
add
scas
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
gs
imul
dec
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
xchg
add
imul
mov
inc
gs
je
dec
popa
outsb
fs
add
jne
inc
gs
outsl
fs
gs
imul
add
pusha
add
push
gs
js
gs
imul
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
pop
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
or
dec
gs
jo
gs
jb
jns
jbe
push
imul
jb
gs
add
je
inc
push
add
mov
inc
gs
inc
dec
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
push
imul
insb
insb
outsl
arpl
add
add
insb
push
outsb
ja
outsb
add
push
imul
jne
jb
add
adc
dec
gs
jo
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
aad
inc
gs
imul
je
add
add
je
jns
je
insl
push
imul
insb
gs
imul
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
cmp
dec
inc
dec
popa
jo
je
imul
add
je
je
imul
inc
add
mov
inc
gs
je
imul
push
add
insb
add
je
outsl
arpl
gs
outsb
outsw
inc
add
jns
push
imul
jb
je
arpl
mov
push
jns
je
insl
dec
outsb
outsw
add
add
cmpl
add
push
pushf
inc
add
add
add
jbe
les
in
pop
ljmp
stc
outsl
bound
pop
pusha
jle
iret
cs
jmp
movsl
andb
cmp
adc
inc
cmp
mov
adc
imul
enter
rcr
cs
or
mov
fs
aam
cmp
cltd
imul
lds
adc
or
pop
cmp
in
mov
jns
xchg
push
mov
cli
fadds
loope
mov
fs
arpl
fwait
xor
flds
sbb
scas
or
mov
popa
lods
cmp
dec
rcrb
jbe
mov
mov
push
mov
scas
ljmp
dec
push
sbb
test
mov
stos
pop
xor
adc
pop
ss
les
in
repnz
adc
mov
in
or
jecxz
sahf
sub
movsb
outsl
push
dec
jecxz
mov
inc
adc
in
xchg
and
pop
aam
and
cmc
cmp
sarl
cmp
or
gs
adc
push
lock
out
pop
leave
mov
ljmp
mov
test
pop
fcomi
add
ss
xchg
push
and
mov
std
or
mov
push
add
mov
add
cmovo
inc
and
mov
cmc
jb
jns
cmp
jnp
addr16
movb
ret
push
mov
lods
cli
repnz
lds
mov
push
jno
ss
rcll
sbb
fldl
or
mov
sti
xchg
push
mov
bound
xor
add
xchg
sbb
shlb
push
jle
xor
je
inc
iret
call
insl
mov
out
pop
in
flds
popf
test
pusha
negl
or
nop
mov
mov
xor
mov
cwtl
jns
loop
rol
int
cmp
push
cmp
loop
add
inc
dec
loope
cmpsb
gs
ret
test
pop
xor
into
icebp
test
adc
xchg
aas
xchg
ret
cmpsb
ret
and
xchg
jb
rorl
or
mov
stos
dec
pop
pop
scas
dec
mov
inc
or
mov
ret
dec
fldl2e
add
mov
int
aam
xor
test
inc
test
ffreep
dec
mov
ret
dec
sub
push
push
xchg
mov
subb
sub
andl
mov
cmovp
adc
cmc
jle
mov
cmc
push
xchg
and
push
sub
and
cmc
lcall
cmc
mov
xor
and
icebp
jno
imul
fadds
icebp
gs
lahf
xchg
sub
xorl
mov
subl
sub
ja
lret
jbe
ret
out
std
mov
andl
sub
shlb
dec
cmc
cli
test
xor
xor
xor
dec
or
insl
and
xor
loop
fmull
and
lcall
aas
xor
mov
cs
dec
cmp
lret
mov
mov
xor
adc
xchg
push
idivl
xor
ret
or
repz
dec
mov
outsb
aas
imul
out
repz
out
fisubs
mov
ret
and
sbb
fsts
sbb
in
push
xor
dec
mov
push
cltd
xor
xorl
cs
sub
cmp
xor
and
mov
mov
sbb
add
push
xor
popf
bound
xchg
cmp
rcll
push
ret
or
inc
in
lret
data16
pop
stos
pop
hlt
add
xor
je
pop
sub
jbe
mov
adc
add
mov
stos
cmc
loope
pusha
dec
mov
fcom
mov
rclb
fcomi
mov
dec
inc
xchg
loop
add
mov
or
mov
fstpt
aaa
mov
fisttpll
push
mov
pop
mov
jbe
or
fs
push
xor
xor
pop
sbb
les
push
push
icebp
aas
add
push
xchg
lret
outsl
xor
adc
dec
movl
ja
xor
sbb
jnp
pushf
mov
std
jle
adc
out
xchg
xor
push
xor
lds
xor
mov
stos
sbb
les
aaa
ror
mov
dec
test
push
lds
and
leave
inc
jle
push
jae
fidivs
daa
iret
dec
fwait
cmp
adc
test
shll
cld
aam
jg
dec
push
inc
jle
jmp
daa
sbb
dec
adc
mov
adc
dec
sub
lcall
mov
cmc
inc
test
test
leave
sbb
mov
cltd
ja
les
repnz
ss
xchg
lahf
ret
das
das
test
push
pop
xor
lds
mov
mov
mov
dec
jo
inc
mov
mov
add
xor
sbb
loop
loop
push
pop
lea
cmp
frstor
pop
cmp
pop
testl
call
xor
or
das
sbbl
dec
mov
jl
loop
and
loop
mov
loop
pop
and
mov
inc
loop
test
loop
js
icebp
sbb
call
call
or
dec
push
aad
notl
dec
sbbl
mov
mov
cmpb
push
je
cmpsl
insb
sti
pop
lock
add
add
sbb
cli
sub
dec
cmp
mov
cmc
ja
out
in
aas
adc
call
jb
adc
rorb
fs
cmp
and
and
and
and
and
and
and
in
mov
adc
gs
adc
or
sub
or
mov
adc
call
call
pop
sub
addr16
scas
ret
lods
push
nop
ja
and
je
pop
std
cwtl
jmp
test
add
call
call
popl
add
xchg
add
mov
hlt
xor
mov
sub
and
mov
arpl
adc
sbb
mov
call
call
push
test
mov
mov
call
sub
lret
or
xabort
rol
sub
call
rcrl
loop
pop
xor
mov
iret
fidivl
lods
push
sub
lret
je
lcall
call
call
popa
lods
pop
fucomp
call
call
dec
mov
arpl
ljmp
mov
and
and
and
and
and
loope
xchg
mov
mov
rcll
jo
insb
xchg
das
push
push
daa
xor
call
call
lret
in
cmpsl
xchg
std
push
lret
ja
imul
dec
dec
je
mov
popa
push
xchg
and
out
sub
cmp
decb
mov
aaa
cwtl
in
xor
push
repnz
pop
adcl
insl
roll
call
rcll
push
sub
xor
imul
call
call
lock
cmc
test
xchg
mov
imul
push
sti
jecxz
jns
mov
sbb
sub
inc
and
xchg
cmp
pop
inc
aas
sub
inc
add
addl
or
arpl
mov
stos
cmp
lds
push
rcr
push
lret
aas
in
pushf
xor
call
call
mov
je
cmp
lds
add
adc
mov
aaa
mov
add
adc
mov
out
xor
iret
cmp
call
call
call
dec
inc
inc
icebp
pushf
pop
rcrl
test
lea
call
call
call
and
dec
pushf
stos
mov
clc
lret
ret
jl
xchg
popa
jne
outsl
xor
or
neg
outsl
int3
mov
popa
xor
push
sarb
and
jnp
std
pop
xchg
xchg
gs
ret
orb
inc
jge
data16
lret
stc
scas
jbe
push
popa
jle
lret
in
test
call
call
sahf
mov
or
scas
dec
mov
sti
push
into
xchg
mov
nop
jmp
int
inc
ret
mov
mov
hlt
repnz
cmp
call
call
call
aaa
movsb
hlt
add
mov
hlt
and
and
and
and
and
jbe
cwtl
pop
rcl
add
outsl
xchg
addl
mov
sti
cmpl
pusha
sbb
out
ljmp
cmpsb
stos
idivl
stc
int
or
call
call
dec
cmp
jb
pop
enter
ja
sbb
call
adc
fcmovnb
and
shll
andb
adc
or
adc
cltd
out
sar
loop
push
and
and
call
call
dec
xor
dec
jl
icebp
es
jle
mov
lcall
aam
lds
sub
cmp
call
call
aaa
pop
iret
shrb
pop
cmp
cltd
out
fsubs
aaa
mov
sarl
lret
js
call
call
iret
jmp
ret
mov
in
jecxz
push
fbld
jno
nop
xor
pop
sbb
js
popa
int
dec
inc
aaa
mov
sbb
negl
cmp
out
aam
in
xchg
movsb
xchg
in
adc
call
lahf
mov
js
push
jmp
sti
shrl
cmpsl
inc
test
sarb
add
call
ss
pop
dec
fldl
xchg
cmp
cmpsl
ror
repnz
sub
fs
jg
lret
cmp
jmp
jp
xlat
ret
and
lods
test
call
outsl
xlat
jnp
jno
pop
inc
fists
dec
hlt
xor
mov
pop
in
inc
and
and
and
and
and
call
call
call
and
call
int
mov
dec
push
insl
out
push
in
out
outsl
sbb
xchg
push
dec
jns
aad
mov
jnp
ljmp
mov
cmpl
jne
jle
jno
repnz
push
lods
mov
aas
jl
call
call
daa
mov
aam
jbe
pop
sarl
sti
fld1
call
call
inc
jno
test
xor
movsb
and
and
and
and
and
or
scas
or
mov
sbb
cltd
nop
pop
mov
mov
sbb
outsl
pop
call
call
call
rclb
lods
aad
call
call
jle
xchg
testb
sub
mov
add
mov
pop
mov
xchg
adc
nop
pop
sbb
dec
mov
iret
xchg
add
push
sub
sbb
push
dec
ljmp
call
call
sbb
xor
in
cmpb
fs
sarb
push
jo
add
sbb
rorb
gs
call
addr16
insb
xchg
repz
aaa
sarb
jne
loop
adc
call
aaa
jmp
mov
sbb
add
out
push
add
mov
jmp
push
jno
or
dec
and
sbb
mov
pop
leave
mov
fwait
mov
adc
int3
arpl
ficoms
loopne
fidivrl
iret
lret
push
rcll
and
call
call
insl
and
and
and
and
and
and
sahf
xchg
xchg
jae
push
ljmp
enter
or
adc
pop
pop
sbb
popa
movsl
pop
scas
loopne
xorb
mov
call
call
daa
std
sbb
es
call
call
je
sbb
cmp
jno
iret
imul
mov
add
mov
imul
sarl
sti
xor
cmp
out
jle
loope
sub
in
leave
and
jae
in
jecxz
das
mov
sbb
mov
aas
leave
jge
adc
call
push
mov
ljmp
push
jnp
outsl
sub
roll
call
call
aas
ss
shll
data16
lahf
divl
mov
popa
cld
xor
fidivrl
push
lock
cmp
jne
mov
mov
lock
pop
clc
insb
aad
addr16
fmul
les
mov
jmp
pop
push
call
call
call
jb
stc
inc
sbb
pop
pop
inc
cld
lcall
lods
pop
or
nop
je
jecxz
ffree
cmp
mov
fstpt
scas
push
test
fdivrs
inc
and
call
call
lcall
int3
sarb
jp
int
xlat
adc
dec
and
shl
movsb
sbb
dec
movsb
xor
clc
adc
mov
in
scas
popa
jo
adc
out
repz
mov
stc
sti
mov
shlb
pop
push
std
outsb
pop
sar
js
call
call
pop
jge
gs
jg
cmp
rcl
dec
sbb
mov
ret
mov
sbb
or
xchg
cmpsl
and
and
and
and
and
and
and
es
lahf
cltd
xchg
in
das
or
inc
jae
shlb
clc
lahf
bound
pusha
sub
mov
call
push
fstpl
or
sbb
sub
push
test
addr16
in
jmp
ret
js
add
jnp
inc
icebp
pop
sbb
ret
aaa
lods
les
ss
add
call
call
nop
jmp
inc
sar
jne
adc
test
das
rorb
jo
call
call
call
dec
jecxz
jp
sub
dec
jge
popa
mov
cmp
iret
in
adc
lods
jecxz
mov
stc
push
rorl
xchg
jmp
rclb
cld
mov
pop
fstpl
lret
gs
jne
fs
cltd
fwait
inc
pop
imul
ret
add
mov
xchg
ljmp
in
xor
mov
call
call
inc
xor
sbb
xor
push
es
push
div
pop
adc
push
lock
and
arpl
mov
insb
in
pop
mov
imul
leave
fimuls
movsl
pop
cmpsb
out
sbb
call
call
or
or
clc
addr16
insl
popf
fildll
shll
xchg
call
call
call
and
call
call
call
decb
mov
ss
mov
sub
test
mov
jnp
xchg
movsl
ret
xchg
and
and
and
and
and
call
call
div
push
jne
push
call
call
xchg
outsb
cli
mov
cwtl
mov
add
leave
jns
fcoms
test
cmc
mov
or
adc
into
add
cmc
or
push
and
dec
jp
mov
lds
push
mov
call
call
fwait
data16
call
call
xor
ret
push
in
std
cmp
leave
and
test
adc
outsb
add
imul
cmp
push
mov
sbb
clc
adc
call
call
call
xchg
xor
jo
pop
or
push
in
add
lods
cmpsl
add
sbb
cwtl
jo
das
gs
sub
shlb
jb
jnp
scas
lcall
rolb
jp
in
xor
sub
rclb
inc
cmp
adc
sti
call
call
call
incl
push
mov
je
or
xor
inc
dec
add
test
cmpb
push
add
jle
gs
pop
dec
aad
dec
in
inc
in
adc
sbb
push
data16
enter
xlat
cmp
dec
mov
insl
mov
xchg
push
dec
call
call
je
xchg
outsb
and
add
cmp
jb
adc
call
call
jmp
push
arpl
in
jns,pn
or
push
leave
inc
pop
xchg
leave
mov
jmp
pop
div
xorl
mov
push
xchg
dec
dec
pop
arpl
cli
or
sbb
xchg
scas
sub
in
mov
or
mov
and
and
and
and
and
inc
lret
or
call
call
jge
mov
fimull
push
jns
inc
andl
jbe
mov
mov
mov
sbb
or
lea
xchg
xchg
js
and
enter
rclb
stc
dec
lea
ja
ss
or
or
push
dec
ror
pop
test
xchg
call
call
jecxz
pusha
push
imul
aaa
outsl
fiadds
ljmp
repz
idiv
rcrb
mov
add
mov
loopne
xchg
mov
insb
daa
push
pop
das
add
in
cmc
jno
and
pusha
xor
mov
pop
stc
inc
mov
jg
outsl
sahf
mov
adc
and
call
adc
mov
dec
xor
shll
jns
sub
negl
sub
mov
fneni(8087
add
dec
inc
lret
call
call
call
cmp
adc
jmp
fs
xor
fmul
in
jbe
sub
pop
or
sti
fiaddl
cmpsl
cmp
cmp
fisubrs
lcall
int3
pop
pop
inc
add
int
ds
jg
pusha
call
call
xchg
sub
adc
scas
push
ljmp
call
call
mov
adc
jno
push
xchg
mov
add
sbbl
mov
dec
jnp
inc
mov
stos
and
lock
dec
cli
sub
lds
repz
mov
test
call
jp
movsl
js
insl
adc
and
dec
or
or
ret
jo
cs
jae
into
mov
mov
lds
fnstenv
sub
cmpsb
cmpsl
jp
dec
xchg
call
call
leave
mov
cmp
fisubl
and
and
and
push
mov
sbb
ja
add
or
push
jmp
imul
xor
mov
popa
or
call
call
addl
xchg
inc
cmp
push
dec
insb
jecxz
pop
adc
push
les
or
arpl
lret
xor
pop
xchg
sub
addr16
andl
push
adc
hlt
mov
and
lret
jbe
sahf
dec
int
xlat
addr16
shrb
pop
je
call
call
call
sbb
call
call
push
pushf
push
jge
or
inc
mov
fs
fimuls
call
call
in
mov
xchg
pop
mov
adc
xor
bound
mov
inc
pusha
and
push
das
dec
lahf
adc
lahf
add
iret
dec
mov
adc
pop
flds
call
call
call
push
xchg
in
in
push
mov
sbb
mov
gs
jae
mov
in
fildl
rorl
jmp
fwait
in
test
and
jns
mov
cs
call
call
call
clc
arpl
jns
cmc
loop
movsb
mov
mov
lods
lods
nop
arpl
pushl
call
call
dec
push
rclb
pop
call
call
call
cmpb
cmpsb
adc
and
and
and
and
and
sbb
test
add
int3
rol
dec
stos
frstor
out
pop
add
lret
fs
and
and
and
and
and
and
and
les
pop
jae
cs
imul
dec
add
mov
nop
arpl
and
cwtl
shlb
data16
and
dec
and
add
mov
jle
gs
cmp
ret
mov
cmp
xor
lret
rcr
dec
call
call
aad
mov
rorl
inc
jae
sti
loope
push
in
bound
sahf
fnstcw
pop
mov
mov
outsl
daa
cmc
push
loopne
pop
mov
int
cmp
int3
xor
pushf
lret
mov
xor
dec
jbe
int
in
test
call
call
call
cwtl
bound
mov
ret
pop
mov
lret
mov
xorb
out
adc
enter
rcr
cld
jno
call
call
ret
adc
pop
imul
xchg
dec
das
add
andb
das
fstp
loope
or
cmp
out
sub
adc
loop
loope
call
call
call
cmp
xlat
movsl
inc
call
call
and
and
and
and
and
and
and
push
cmp
dec
pop
push
movsl
imul
insb
jo
aas
roll
lcall
call
xchg
adc
imul
sub
fidivrs
or
xorl
loopne
inc
sar
push
jno
jne
xchg
inc
lret
or
dec
lret
mov
and
xchg
enter
ret
inc
popf
add
call
call
push
pop
lods
mov
xchg
and
add
and
test
aad
aam
inc
sub
loopne
stos
dec
stos
loopne
fdivl
dec
outsl
mov
add
pop
mov
push
xchg
sbb
sbb
adc
jp
call
call
outsb
data16
leave
incb
mov
push
dec
bnd
mov
and
and
and
and
and
and
sub
pop
test
sub
call
mov
and
popf
push
mov
js
call
call
jmp
loopne
xlat
dec
sub
cmpsb
cwtl
jp
push
int
aas
pop
test
jns
call
call
sub
sub
xor
loope
je
adc
cs
jl
push
push
lret
inc
rorb
js
cmp
and
lock
sub
cmpsl
cmp
sbb
mov
mov
addr16
mov
sub
call
call
add
sbb
pop
rorb
cmp
and
shll
decl
outsb
fs
out
xchg
jmp
test
jge
test
pushf
push
push
inc
stos
ret
pop
dec
imul
pop
sbb
mov
cmp
and
and
and
stc
or
lahf
pop
cmc
push
xor
aas
sub
pop
lds
call
call
adc
jne
stc
sbb
ss
pop
adc
fisubl
push
jmp
scas
sub
arpl
adc
pusha
pop
jl
or
jbe
call
call
call
call
mov
negb
jge
cmpsb
push
xor
or
mov
pop
adc
addl
sar
adc
int
cld
sti
pop
or
sub
or
push
dec
add
dec
movsw
lock
call
mov
jnp
lods
xchg
mov
inc
stos
scas
jns
xchg
push
cmp
dec
mov
scas
repz
call
xchg
jle
adc
adc
shlb
movsb
fstpl
mov
and
push
pusha
shl
cmp
sub
mov
add
call
mov
std
imulb
or
ret
jo
xchg
dec
cltd
inc
jle
xor
and
sub
fisubrl
fistl
jae
stc
jbe
scas
push
adc
test
call
call
mov
call
call
mov
in
ffree
test
call
call
and
and
and
and
and
loop
add
pop
sub
and
push
andl
jbe
lret
call
call
loopne
dec
mov
jnp
scas
pop
push
pop
sbb
negb
jmp
inc
cld
pop
pop
mov
add
idivl
mov
dec
jmp
pusha
adc
loopne
jg
add
call
call
mov
mov
or
std
notl
and
adc
in
mov
out
add
inc
jb
pop
adc
leave
in
cmp
call
call
call
mov
je
adc
int
cltd
in
inc
sub
call
gs
jno
cmp
mov
ja
xchg
sub
mov
pushf
add
jae
pop
mov
inc
xchg
repz
xor
push
mov
inc
xchg
inc
cltd
sti
lods
and
repnz
popa
mov
mov
ljmp
sub
or
lret
call
movsb
cmc
cmp
lea
mov
call
call
lock
dec
cmp
es
xchg
jno
pop
pop
repz
insb
cmp
iret
inc
ja
sbb
xor
jne
fldenv
mov
add
das
call
call
call
cmc
jle
fisttpl
sub
jmp
inc
bound
mov
call
call
mov
pop
inc
and
pushf
call
call
call
call
mov
outsl
gs
sbb
scas
loopne
cmc
adc
mull
sub
mov
inc
and
and
and
and
mov
call
call
push
cmc
or
mov
push
subb
pop
sub
mov
std
and
jns
xchg
cld
jb
mov
cmpl
xchg
cli
mov
popa
stc
push
sti
call
gs
pop
dec
jne
xchg
xor
xchg
call
call
inc
lods
jo
mov
mov
cmpsl
hlt
push
cs
mov
mov
pusha
and
lcall
popf
movsl
add
dec
jo
push
sbb
or
cmp
inc
cmp
pop
ja
xor
push
sbb
dec
mov
fs
xchg
aad
xor
cmpb
cmp
pop
push
mov
call
call
popa
test
push
pop
cli
in
imul
call
call
adc
xchg
cmpb
adc
mov
dec
call
call
call
push
addr16
push
push
repnz
inc
sbb
int3
in
xchg
sub
lahf
inc
sub
sub
mov
adc
dec
and
and
and
and
mov
sbb
push
in
sbb
adc
pop
sub
mov
mov
adc
xor
add
call
call
sahf
mov
cld
imul
inc
imul
aas
or
addl
push
xorl
in
call
call
call
imul
lock
fldl
je
or
cmp
mov
ret
add
flds
adc
fcos
inc
call
call
mov
add
add
mov
xlat
xchg
jno
mov
divl
fstpl
cmpl
repnz
aam
insl
cmp
jg
clc
out
call
cmp
jle
dec
sbb
enter
inc
dec
pusha
mov
dec
movsl
sahf
pop
pop
fs
jg
push
call
call
xchg
sbb
iret
addb
jg
sbb
imul
rol
mov
testb
inc
push
aaa
jns
sarl
cltd
cmpsb
pop
lea
mov
testl
push
inc
mov
push
call
call
call
mov
imul
call
call
sub
ret
sar
daa
test
inc
jg
inc
xor
out
sbb
adc
imul
mov
mov
cmc
orb
call
call
call
cmc
sbb
aaa
imul
popl
inc
mov
sbb
das
pop
mul
lock
adc
insb
mov
fistps
inc
fwait
xbegin
mov
and
jl
fcoms
das
xchg
dec
sub
call
call
das
gs
mov
sbb
sub
cmp
xlat
insl
and
outsl
out
fwait
lods
push
xchg
inc
cmp
test
lea
mov
scas
inc
into
inc
test
imul
inc
fs
or
shll
and
and
and
jl
pop
inc
dec
enter
xor
insl
fcoml
mov
xchg
and
insl
sub
inc
call
call
call
loop
sti
pop
xor
jno
fs
test
lods
jle
fidivrs
test
and
in
push
mov
enter
fisubs
or
fistps
pop
mov
add
imul
in
sbb
push
jge
jno
jg
ret
aaa
jp
xchg
ficompl
or
test
inc
cmc
imul
call
lret
cmp
or
add
mov
cmp
pop
outsl
push
mov
push
call
mov
xor
call
mov
jae
stos
push
mov
jnp
mov
mov
call
call
sti
pop
inc
mov
mov
dec
jp
jnp
sar
int
xchg
cmpsl
lds
pop
leave
loopne
mov
push
jmp
sahf
std
enter
adc
stos
xchg
sahf
and
dec
movsb
cltd
push
dec
ffree
dec
jnp
fcoms
cmp
and
sub
push
mov
call
call
test
inc
les
in
xchg
sub
mov
cmp
int
rolb
xchg
out
popl
push
and
sbb
cmpsl
movsl
xorl
mov
scas
insb
lcall
or
call
popf
sbb
xor
punpcklwd
call
call
call
and
loop
subl
call
call
loope
bound
outsb
mov
les
xor
insb
orl
sbb
vcvttsd2si
jns
jns
fnstcw
dec
jo
hlt
sahf
push
mov
xchg
xor
jmp
cmpsb
call
call
rorl
sbbl
fwait
sbb
popf
cwtl
jp
imulb
call
andl
lret
addr16
and
and
and
and
call
call
movzbl
push
and
sbb
call
call
add
sahf
jae
outsl
cld
cltd
pop
jno
lock
lahf
aas
iret
mov
call
call
dec
inc
pop
jmp
xchg
insl
sbb
in
xor
sbb
cmp
pusha
pcmpgtb
push
push
adc
in
call
call
pop
push
in
out
pop
push
negl
lret
div
test
pop
aam
out
push
call
dec
xchg
sti
mov
mov
jns
outsb
cmp
push
movsb
jns
outsl
mov
mov
and
and
and
mov
subb
pop
pop
cltd
adcb
jb
add
pop
adcl
call
call
add
fstps
xchg
test
insb
inc
mov
push
cmp
out
fld1
call
call
mov
xchg
jecxz
mov
jle
xor
in
pushf
cmp
pop
mov
clc
dec
ja
and
push
inc
jne
pop
or
xchg
jp
mov
fisubrl
out
lret
mov
dec
ror
in
repz
or
sub
add
xor
call
call
call
mov
push
dec
jno
loope
enter
mov
jecxz
fwait
jns
mov
xlat
ljmp
das
lret
mov
fidivrl
or
call
call
bound
orl
pusha
jge
filds
inc
pop
icebp
push
into
and
loopne
cli
mov
notl
jge
in
call
call
call
or
imulb
sbb
call
call
jmp
repnz
ret
mov
add
fistps
push
in
adc
xor
push
cmp
in
push
hlt
setbe
in
test
loope
or
xor
xor
inc
vpsubsb
call
call
outsb
lods
mov
jle
adc
jae
fisttps
or
aas
mov
add
add
or
and
ror
mov
outsl
dec
dec
adc
cltd
jle
jnp
push
inc
cli
lea
pop
call
call
call
gs
outsb
rorb
jno
dec
jne
inc
mov
fnstenv
movsb
lods
xchg
cwtl
mov
fld
orb
pushf
arpl
mov
in
dec
mov
bound
call
call
aam
outsb
xchg
sub
insb
mov
stos
adc
jmp
mov
and
and
and
and
and
and
dec
test
sbb
dec
xor
call
call
adc
scas
mov
mov
inc
sti
push
in
mov
sub
js
lret
jp
sub
mov
sti
stos
lock
xor
mov
jno
push
call
call
and
je
in
pop
sub
cwtl
and
int
frstor
out
scas
mov
int3
xchg
lods
cmc
int3
aaa
call
call
sub
and
adc
jb
in
xchg
addr16
mov
xorps
push
and
inc
push
fdivl
mov
cwtl
jnp
psrlq
pop
ss
sub
xchg
out
and
and
and
and
and
test
adcl
call
call
mov
ja
mov
lds
lods
loop
xchg
pop
fmull
pop
dec
fldt
aad
add
and
fbld
jmp
sbb
cmp
cli
dec
xchg
mov
xchg
inc
insb
jp
repnz
adc
stos
mov
nop
ret
add
push
scas
stos
push
add
call
call
and
jbe
inc
jno
into
pop
lods
test
insb
push
jmp
sbbl
pop
mov
mov
cmpb
subl
mov
lret
or
int3
cmpl
test
insl
fmull
add
je
adc
loop
in
cmp
jno
cmp
call
call
add
add
call
call
call
insb
cmpsl
cltd
test
sbb
xchg
outsb
loopne
and
imul
push
call
push
jne
jg
adc
and
sbb
jae
cwtl
jb
dec
mov
test
pop
loop
mov
call
call
ds
xchg
pop
mov
dec
repz
imul
adc
pop
jbe
inc
aaa
mov
cmp
orb
enter
pop
icebp
lahf
sbb
inc
adc
dec
adc
test
push
inc
sbb
test
pop
in
and
and
and
and
insl
hlt
push
add
mov
mov
jnp
test
add
push
lea
and
and
and
ret
popf
push
es
pop
test
and
and
and
and
and
call
call
call
call
lock
lods
xchg
es
insb
push
ja
mov
push
movsl
ret
shll
mov
push
call
call
fwait
inc
adcb
jno
cmp
call
call
call
in
jb
jge
xchg
shll
inc
sub
sub
xchg
adc
insb
jnp
in
and
and
and
and
jle
inc
inc
out
mov
fiaddl
cmp
jb
inc
nop
dec
js
push
dec
int
add
mov
jmp
call
call
leave
cmp
popf
xchg
in
mov
mov
mov
lods
sbb
cmc
push
ret
pop
scas
xorl
mov
push
inc
jmp
dec
jmp
xchg
aad
cmp
dec
outsb
out
cld
inc
lea
mov
call
call
sub
inc
call
and
and
and
and
and
and
and
mov
dec
fwait
mov
bound
sub
pop
sbb
shlb
test
inc
out
or
mov
sub
call
call
mov
repnz
jbe
jge
push
stc
rorb
adc
xor
jns
ret
cmp
iret
mov
xchg
mov
adc
mov
mov
imul
add
sub
out
int3
data16
cli
cmp
jecxz
cwtl
dec
mov
lret
call
call
mov
sbb
setnp
sahf
inc
icebp
mov
xchg
mov
int3
dec
pop
cld
pop
lea
icebp
mov
call
sub
and
and
and
subb
inc
repnz
daa
ss
sbb
xor
outsb
call
call
call
and
jge
push
sbb
aaa
shll
sbb
pusha
mov
dec
test
shll
sbb
mov
or
insl
dec
call
call
call
xor
pop
mov
xor
xor
ret
cmp
pop
movsb
je
and
mov
jae
int
cld
and
adc
lret
xchg
add
pop
add
mov
nop
fidivrs
add
lods
les
call
call
call
mov
add
cmpsl
shll
inc
loop
or
rcrb
stos
inc
jmp
call
call
call
sbbl
inc
xchg
pop
push
in
adc
call
call
call
dec
mov
sub
xchg
clc
cmp
and
and
and
and
and
push
shlb
enter
arpl
cmp
int
aam
cwtl
push
lods
pop
and
cmp
pop
push
loopne
jle,pt
test
call
call
xchg
cmpsb
push
lret
ret
repz
or
test
adc
and
inc
add
inc
ds
mov
ds
jb
push
jne
pusha
ss
ja
dec
push
call
call
cmp
or
das
out
xor
dec
mov
xor
ds
rol
out
fcompp
fcmovu
std
sbb
adc
mov
inc
cmc
inc
add
andl
pop
in
mov
push
sbb
and
mov
mov
push
stos
std
movsl
push
jno
jle
sbb
shr
call
call
shll
outsb
mov
out
out
out
outsl
jl
test
or
cwtl
adc
sub
out
loopne
xor
data16
mov
cmp
and
and
push
cmp
popf
mov
popf
fsubrl
enter
call
call
pop
lret
push
out
push
jge
test
mov
and
loopne
dec
push
and
jecxz
inc
push
cltd
sbb
xchg
adc
aam
xchg
jno
fstps
adc
imul
gs
sbb
lea
dec
out
cmp
xchg
sub
inc
es
in
push
jns
out
adcl
call
call
loop
xlat
popf
dec
repz
add
push
neg
mov
ja
int
leave
sub
cli
clc
incb
and
and
and
and
call
jp
push
sahf
addr16
add
rcll
jp
sbb
pop
and
push
outsl
call
call
dec
add
lods
pop
or
mov
or
pop
fisubs
push
les
push
imul
ret
cli
inc
xor
lret
sub
adc
mov
push
pop
cs
cmpl
arpl
and
and
and
push
addr16
add
push
loopne
xchg
jl
sahf
call
call
call
lret
dec
clc
iret
outsl
movsb
idivb
add
xchg
das
cmp
xorl
push
add
fs
pop
push
adc
call
call
call
bound
orb
sbb
mov
dec
lock
adc
and
in
add
xlat
aaa
sub
cmp
add
sbbl
mov
jne
or
jecxz
pop
imul
call
call
stos
pop
cli
inc
loop
leave
inc
out
leave
es
cmc
pop
sub
mov
dec
lock
pop
or
mov
addr16
mov
sbb
jecxz
scas
imul
push
or
mov
jbe
add
xor
add
hlt
popf
mov
sub
jmp
call
je
xchg
rep
lds
call
call
xchg
sub
mov
pop
orl
ja
inc
pop
dec
icebp
cwtl
mov
clc
xchg
in
push
stc
clc
dec
fcmovne
pop
or
jbe
mov
es
subl
stos
icebp
test
dec
jne
call
call
call
fldcw
sub
pushl
stos
out
test
test
xchg
push
jge
jne
ret
jge
sbb
and
and
and
and
and
and
cmp
add
add
ret
xlat
add
sub
and
xor
xchg
shrl
lcall
popa
mov
leave
inc
rcl
jae
fcom
fs
pop
add
mov
int
imull
js
call
call
call
mov
lods
or
adc
pop
pop
cld
stc
outsl
sbb
push
addr16
xlat
addl
roll
cmpxchg
fwait
movsl
pop
dec
addl
inc
xchg
loop
call
call
mov
or
fistps
sub
insl
push
lods
push
xor
in
jo
outsl
shl
or
into
lods
xchg
adc
idivl
rcrb
es
pushf
mov
fwait
dec
test
aaa
cmp
dec
cmp
outsb
mov
lods
cmpl
cltd
mov
call
call
cmpsl
les
jg,pt
loope
out
push
jg
mov
push
add
fs
pop
inc
pop
insl
lea
fwait
icebp
mov
mov
cmp
push
call
call
call
lods
push
and
fcomps
push
mov
sarl
das
mov
adc
sbb
pop
aas
xlat
add
popa
int
cmp
fidivrl
jne
out
out
std
dec
in
andl
sbb
xchg
or
clc
adc
call
cmp
call
call
cltd
pop
add
out
push
lahf
jbe
test
iret
mov
dec
sbb
inc
cmp
cmp
and
and
and
and
and
into
inc
mov
imul
jp
movsb
inc
or
out
js
jbe
out
insl
sub
fwait
pusha
ds
ja
call
call
inc
in
and
and
and
and
and
dec
sbb
and
lods
push
and
fisttpl
and
clc
and
jbe
sub
mov
mov
lods
mov
mov
rorl
cmp
lds
call
call
call
xor
mov
mov
push
cmp
push
test
pop
pop
adcl
jo
pop
lret
xchg
pop
jmp
icebp
jno
mov
rcl
push
xor
and
aam
mov
call
call
call
fildll
lock
std
jmp
push
es
push
sahf
dec
adc
sbb
mov
movsb
in
daa
sar
jne
dec
mov
inc
mov
inc
push
imul
fldenv
xchg
std
call
call
lret
sbb
rorb
jl
jp
sub
ds
push
shl
or
or
inc
sar
imul
pusha
scas
push
mov
push
stos
sub
ljmp
inc
adcb
adc
mov
push
in
xor
addr16
adc
mov
call
call
inc
fldt
je
mov
add
sub
dec
fimuls
sub
jns
call
call
and
and
and
and
in
insb
jno
xchg
cmp
or
mov
call
call
clc
add
inc
cmp
lea
addr16
pop
xor
lea
sub
movb
rclb
negb
imul
call
call
call
call
dec
ffreep
cmc
adc
xchg
sub
add
mov
aad
inc
pop
aas
decl
jge
dec
mov
loop
cmpsl
xchg
inc
fisubs
mov
dec
cli
push
dec
out
push
testb
jl
sbb
dec
sbb
xchg
mov
filds
addr16
push
jae
jnp
xor
call
call
inc
mov
jae
gs
lds
ds
dec
mov
jb
pusha
push
inc
rolb
pop
cmpsl
adc
jns
nop
push
xor
mov
inc
icebp
aas
gs
xlat
cld
les
leave
in
pop
test
and
pop
add
xchg
data16
pop
fs
call
push
shrl
mov
pop
mov
ds
pop
pop
cmpsl
rcl
lea
cmp
mov
call
call
stos
xor
bound
and
and
and
and
ja
sbb
pusha
gs
pop
adc
rorl
push
sbbb
aam
inc
mov
xchg
movsb
sahf
push
or
add
aas
xchg
xor
lods
insl
lret
mov
ret
dec
xor
pushw
push
lods
xor
fsubr
call
call
iret
cmp
stos
mov
lcall
pop
out
push
ret
pushl
in
in
mov
and
add
sub
popa
fstpt
jnp
sbb
mov
pmulhw
fdivs
loopne
lds
pop
mov
or
add
or
call
aam
push
popa
out
mov
inc
pop
xchg
loop
and
sub
mov
add
and
fisubrs
sub
insl
xor
out
fstpl
push
cmp
das
adc
fs
push
fistpll
xchg
push
lods
push
out
neg
out
inc
int3
insb
push
inc
int
or
call
call
call
pop
xchg
scas
and
mov
lret
ret
jmp
in
call
call
call
cmp
mov
adc
cwtl
jle
cmp
pop
dec
jle
aaa
cli
and
in
jg
add
xchg
inc
bound
add
dec
pop
xchg
call
call
imul
ljmp
inc
pop
jae
cltd
dec
enter
call
call
das
dec
jnp
pusha
mov
or
mov
call
call
jl
stc
adc
rorl
rorb
sub
dec
sti
add
pop
xor
push
lcall
push
pop
cmp
inc
push
out
push
jmp
aad
mov
pop
or
pop
xchg
int3
push
mov
aam
mov
add
imul
mov
call
call
int
add
inc
and
mov
or
sbb
and
and
and
and
and
fcom
dec
cwtl
js
in
and
cmp
fists
outsb
int3
or
fidivrl
mov
push
subl
lahf
sbb
mov
push
mov
call
call
mul
mov
fcomps
and
outsb
sub
add
add
mov
dec
aad
stc
in
repnz
dec
sbb
push
mov
xchg
mov
lods
jecxz
mov
int3
sahf
pop
push
push
out
dec
xchg
notrack
pop
out
mov
sub
inc
inc
inc
pop
stos
sub
mov
call
call
and
push
orb
rolb
sub
in
push
cmp
push
xor
push
call
xchg
pop
shl
call
call
call
nop
push
es
xor
sbb
ret
ficompl
push
in
dec
xor
xchg
dec
jmp
call
call
call
out
sbb
pop
cli
imul
xchg
pop
cmp
imul
xchg
sti
not
loopne
jae
fisttpl
jo
adc
push
call
call
inc
test
pmaddwd
xor
clc
cmp
and
mov
inc
pop
cmpsl
in
orb
fsubrs
adc
imul
call
call
call
stc
xchg
xor
jg
arpl
xor
sbb
mov
call
shrb
jl
call
call
xor
add
call
call
add
sbb
movsl
fs
lret
pop
outsl
inc
inc
imul
nop
jl
or
push
loop
pop
jae
test
repnz
in
loope
jmp
hlt
cs
pop
enter
ljmp
and
fdivrl
es
mov
imul
xchg
xchg
cltd
jl
out
inc
hlt
and
and
and
and
and
and
and
and
aaa
fdivrs
cmp
je
aad
dec
call
sbb
xchg
add
jnp
mov
dec
fs
inc
mov
not
addl
and
sbb
adc
test
sub
pop
add
test
push
ret
ss
call
call
call
loopne
mov
mov
lret
mov
sbb
mov
call
call
pushf
and
outsb
fldt
dec
aaa
fdiv
jmp
pop
or
sub
lret
dec
nop
insb
out
gs
push
jp
lds
insl
cmp
call
adc
cmp
add
inc
mov
insl
pop
or
std
lret
xlat
mov
jbe
enter
mull
call
call
call
stc
cmpxchg
pop
adc
mov
pop
add
or
sbb
and
icebp
pushf
pop
fldenv
popa
ds
xchg
inc
pop
or
pushf
jb
mov
mov
pop
insb
mov
jl
jo
outsb
push
jmp
mov
call
call
sahf
cmpsl
jns
jno
adc
mov
dec
xchg
xor
cmpsb
sbb
call
call
or
or
fmuls
sbb
into
sub
or
call
call
ret
xchg
mov
sub
cmpsl
jno
cmp
testb
mov
push
dec
aam
jp
out
jl
mov
or
imul
jg
xor
inc
push
xorl
xor
call
pop
icebp
or
pop
pop
or
mov
ljmp
sarb
cmp
jno
jge
push
icebp
pushf
fistps
cmpsb
fucom
pop
repnz
mov
mov
sub
call
call
mov
jecxz
jle
xlat
xlat
jne
add
cmp
and
and
and
and
and
or
push
inc
pop
and
xchg
fsubl
scas
cmc
leave
fcoms
mov
jae
pop
pusha
and
mov
xchg
jge
das
cwtl
or
xor
call
call
mov
pop
arpl
call
call
sbb
sub
dec
idiv
idivb
int3
push
out
push
push
aas
inc
jno
aaa
outsl
push
xor
fistps
bound
xor
pop
add
push
orl
call
call
into
mov
push
jmp
stos
mov
sahf
push
cs
push
int
xchg
jg
or
lods
jb
jbe
dec
jp
out
popa
inc
jo
pop
mov
in
push
je
orl
mov
adc
or
arpl
loopne
aas
mov
cld
daa
adc
mov
and
and
and
and
jmp
push
test
jbe
je
xor
sub
sahf
movsb
pop
lods
add
jge
fs
adc
pop
icebp
push
stos
clc
jle
inc
or
repz
jmp
and
sbbl
fwait
push
fistpll
xchg
adc
aad
in
or
stc
shr
call
call
out
mov
test
icebp
pop
push
or
popa
adc
sub
add
inc
pop
add
call
call
call
and
fwait
jb
adc
or
out
cmc
nop
scas
popa
test
call
call
call
sbb
xchg
cmc
push
add
enter
mov
pop
pop
int
sbb
mov
daa
setno
inc
or
mov
sub
call
call
call
jmp
incb
nop
cld
push
ja
pop
scas
xchg
fbstp
mulb
mov
cwtl
in
insl
push
scas
mov
div
aam
cmp
dec
xchg
dec
push
adc
mov
or
lret
jbe
fnstenv
arpl
in
daa
jecxz
jl
stc
inc
mov
call
call
call
in
sbb
outsb
inc
stos
aas
xchg
int3
inc
xchg
xchg
jo
lret
mov
lret
bound
pop
ret
ss
cli
pop
and
pop
and
sbb
mov
call
call
call
add
test
sbb
dec
notb
call
call
cmc
add
push
dec
adc
imul
aam
fsubrl
dec
jne
inc
iret
mov
inc
inc
cmp
dec
xchg
imul
jns
adc
shlb
or
test
push
xchg
sbb
call
call
call
dec
call
call
mov
rolb
xor
dec
fldl2e
jecxz
lea
push
shr
pop
add
lahf
pop
mov
fistl
xchg
pop
add
and
loope
mov
mov
cltd
call
into
xor
inc
cwtl
dec
scas
jg
rcr
inc
ds
jecxz
call
call
mov
fnstsw
mov
fisubs
and
and
and
and
and
lods
popf
out
clc
in
lods
lahf
popl
inc
mov
and
and
or
out
fwait
into
push
cmp
xor
out
imul
jbe
imul
call
call
dec
jmp
mov
adc
xchg
dec
xchg
fadds
scas
dec
dec
inc
inc
pop
jg
xchg
insl
fisttps
xchg
ljmp
xor
and
fsubs
imul
mov
lods
es
ljmp
call
pop
sub
dec
jmp
andb
std
mov
call
jmp
out
fwait
dec
in
jl
xchg
pop
call
call
call
ret
mov
pop
mov
pushf
xor
adc
pop
call
cmp
stc
jns
add
stc
enter
add
sub
mov
movsl
aam
pop
fcompl
dec
cmpsb
pushf
out
xchg
cwtl
sbb
or
stos
jle
or
andb
or
call
call
call
movsb
jns
jne
int
and
push
addr16
out
pop
stos
pop
fcmove
push
mov
gs
ljmp
call
call
mov
cmp
cwtl
negb
out
push
or
aam
sbb
pop
imul
call
call
push
lcall
xchg
push
repz
push
mov
xchg
add
mov
xchg
sti
and
and
and
and
and
and
and
and
and
call
call
cmp
idivb
and
and
and
and
sbb
mov
icebp
andb
das
pop
cmpsw
das
jns
std
cmpsl
cmp
add
jbe
testb
call
call
xchg
add
jno
test
push
mov
pop
dec
int3
shll
loop
test
jle
leave
test
sbb
ss
lcall
sub
icebp
out
insb
xchg
in
arpl
call
call
call
movsb
mov
jns
jno
jne
dec
inc
test
fisttpl
add
sbb
sti
test
test
xorl
sub
insl
or
call
call
jnp
push
pop
mov
xchg
sub
jle
push
shll
push
shrb
test
and
pavgw
mov
adc
cmc
ss
inc
adc
insl
mov
dec
sar
pop
and
call
call
inc
test
mov
fs
mov
test
xor
and
and
and
and
and
int3
cmc
pushf
add
adc
jle
insb
inc
pop
movsb
repnz
aaa
jae
xor
push
sbb
call
call
call
xchg
enter
inc
dec
ss
divb
pop
test
sti
lods
rolb
popa
xor
inc
lods
je
pop
out
mov
mov
mov
mov
mov
pop
push
pop
imull
xor
sub
shlb
mov
mov
sbb
jg
imul
gs
decl
pop
cli
repz
addr16
call
call
add
jmp
lods
xchg
pop
mov
arpl
orb
push
inc
sbb
mov
jae
push
jb
data16
mov
fldt
mov
jnp
fs
addr16
jno
or
mov
jmp
mov
push
or
mov
sbb
bound
rcrb
and
and
and
mov
loope
ss
mov
rclb
jp
lods
aam
push
mov
cmpb
stos
mov
fimuls
push
arpl
icebp
std
fmuls
push
adc
adc
mov
pop
add
jge
out
pop
mov
pop
sarl
cmpsl
icebp
xchg
loope
addb
call
call
push
inc
xchg
shll
sbb
outsb
mov
push
negb
int
lds
stc
xchg
sub
rcrb
pop
pop
jae
movsl
push
lahf
fcomi
push
push
call
call
push
out
adc
mov
cltd
repz
popf
sti
sub
icebp
and
frstor
push
bound
mov
mov
icebp
ljmp
aas
loop
out
dec
jle
pop
xchg
push
pop
adc
call
mov
mov
out
call
add
jmp
sti
stos
push
lcall
daa
dec
inc
test
jbe
sub
lret
lock
mov
imul
test
xchg
nop
and
cwtl
nop
setne
pushf
sbb
lahf
sub
cmp
pop
call
call
xchg
pop
pop
add
test
dec
dec
mov
inc
sahf
pop
out
dec
mov
and
and
and
and
outsb
xchg
dec
and
push
test
movsb
sbb
aas
lods
mov
cmp
xlat
dec
push
pop
inc
loop
mov
call
call
xchg
pop
xor
pusha
push
push
xchg
rclb
mov
sub
shl
insb
or
jo
mov
cmp
xor
leave
loope
sti
mov
sub
mov
rcr
sbb
scas
and
inc
mov
jno
sub
mov
pop
rorl
leave
pop
daa
sub
mov
jle
loope
test
call
call
cmp
lea
mov
xchg
xchg
movb
cmp
cli
cmp
mov
add
cld
lahf
push
jl
mov
std
or
inc
lea
call
call
adc
in
pushf
scas
out
jns
subl
aam
insb
in
adc
addr16
xchg
sahf
enter
data16
rorl
ss
call
inc
lock
mov
xchg
call
call
call
adc
push
call
call
call
test
jae
mov
insl
repnz
insl
shl
dec
mov
sbb
mov
inc
clc
inc
adc
movsb
push
fldcw
xchg
popa
pop
popf
or
dec
addb
fildll
pushf
lahf
popa
dec
and
jl
add
xor
and
pop
data16
cmc
lock
sbb
call
call
lea
cmp
fistpll
jl
lcallw
cmpsb
shl
pushf
cltd
xorl
lock
push
xor
outsb
dec
mov
call
call
cltd
xchg
or
fwait
hlt
inc
rorb
lret
aas
mov
jecxz
sbb
cmp
adc
cmp
adc
jl
cltd
int3
inc
jnp
loope
and
call
call
call
inc
pop
dec
inc
cs
xor
xchg
xor
imul
xchg
pusha
adc
js
xor
out
and
rclb
nop
fildll
jo
push
xchg
jae
mov
movsb
mov
mov
adc
call
call
call
and
and
and
and
mov
inc
mov
lret
inc
sub
sbb
adc
sbb
cwtl
outsl
daa
les
push
add
add
jmp
and
and
fwait
enter
and
and
and
and
or
inc
mov
das
call
call
loop
xchg
xchg
and
pop
in
push
sub
mov
mov
push
ret
loopne
mov
mov
push
cwtl
mov
js
dec
and
std
sahf
mov
call
call
jo
adc
mov
xlat
fiaddl
push
insb
mov
dec
push
pop
loope
movsb
add
jne
fscale
and
call
test
adc
xor
int3
cltd
test
shlb
call
and
push
movsl
and
xchg
cmp
call
call
addr16
mov
and
and
and
inc
ficoms
mov
adc
call
call
cmc
aaa
mov
call
andl
fidivs
jmp
sbb
cli
cli
fcomi
and
lea
into
sbb
jbe
xchg
hlt
xor
call
call
call
and
and
and
and
and
and
adc
fisttps
pushl
in
jae
hlt
test
js
into
and
clc
adc
jp
ljmp
mov
std
stc
push
sbb
mov
call
test
jae
testl
mov
adcl
cs
cmp
call
call
adcb
mov
fisubrs
add
aam
cmpsb
add
jmp
mov
test
gs
and
inc
cmp
imul
call
call
call
mov
mov
les
movsb
nop
cmp
test
in
sbb
imul
mov
lcall
daa
adc
dec
sti
dec
enter
out
mov
leave
or
lcall
std
mov
call
call
popf
test
cwtl
mov
loope
cmp
jg
adc
imul
pop
ret
out
rclb
push
dec
fwait
out
pop
lods
or
sti
cmp
inc
jmp
call
call
call
xchg
int3
or
xor
test
loop
xchg
adc
js
xor
scas
and
or
pop
ficoml
lcall
mov
jge
push
imul
mov
stc
into
jne
push
js
add
cwtl
or
push
in
cmp
inc
fnsave
xchg
pop
push
mov
sbb
outsl
cmp
lcall
call
call
push
fnstcw
lea
pop
into
inc
test
mov
aaa
pop
imul
and
and
inc
ds
shr
call
call
or
fadds
mov
push
loope
mov
jbe
pushf
pop
jne
and
cmp
cli
xlat
adc
mov
add
scas
jbe
insb
arpl
jmp
add
adc
les
sub
into
mov
mov
fidivrl
cmc
sbb
adc
sti
pop
leave
outsb
ja
call
call
call
ja
scas
outsl
push
cmp
or
sub
jbe
divb
cmpsl
popa
push
loop
shll
rclb
sub
lods
mov
js
mov
jb
push
aaa
shll
sbb
ficoml
cmp
dec
and
popf
loope
hlt
stc
lods
lock
sar
sbb
call
call
jmp
pop
inc
ja
roll
lock
mov
movsl
mov
addl
sub
lcall
leave
pop
and
test
idiv
imul
out
push
fstpl
stos
or
ret
mov
jne
mov
pop
or
inc
sbb
call
call
call
arpl
out
call
outsl
inc
xor
jle
inc
scas
lret
movl
out
cmp
cmp
insl
pop
rorb
mov
ja
add
repnz
and
and
and
and
and
and
and
inc
push
mov
jo
lahf
out
mov
mov
call
call
call
mov
lahf
loope
adc
stos
ja
add
in
fnstcw
jbe
jecxz
adc
lock
jb
incb
cmpsl
push
inc
movl
jmp
lds
mov
popa
and
pop
and
xchg
ds
push
repnz
sub
les
xchg
fisubrs
ss
cmp
call
mov
mov
test
out
es
rcrl
rorb
addb
in
insb
jecxz
sbb
cmp
dec
dec
mov
push
mov
jecxz
outsl
arpl
popf
call
call
call
xchg
pop
data16
pop
nop
jmp
cmp
call
xor
outsl
ja
sub
pop
out
out
sub
mov
xor
jae
dec
and
call
call
call
test
cmp
dec
mov
jo
push
rol
pop
ds
scas
dec
repz
sub
sub
ja
dec
out
or
mov
shrb
or
je
xchg
sbb
and
dec
and
and
and
and
and
and
dec
jle
sahf
adc
jmp
push
loope
shr
call
call
mov
and
jle
adc
add
mov
test
stc
mov
jecxz
call
call
call
mov
addr16
int
adc
push
inc
scas
inc
inc
jns
cld
repnz
mov
rcrb
call
call
data16
mov
in
insl
ljmp
pop
mov
mov
xchg
insl
jno
fcoms
outsb
out
or
or
call
insl
push
pop
xchg
je
mov
enter
dec
pop
clc
lods
adc
dec
shlb
lret
mov
call
call
into
dec
test
and
xor
lahf
nop
xchg
jl
push
inc
ljmp
aad
mov
andb
pusha
outsb
and
call
call
cli
adc
inc
jl
sub
cmp
aam
inc
shlb
fwait
push
mov
jle
insl
test
jae
aas
inc
in
sti
pop
jmp
js
adc
xor
add
ret
adc
roll
xlat
ret
std
jmp
push
jp
les
xlat
les
lea
xchg
aaa
insb
push
outsb
cmp
notb
push
call
call
call
fldt
jge
pop
lds
hlt
movsl
iret
adc
call
call
call
arpl
ficoms
dec
aas
mov
dec
mov
pop
jle
push
imul
call
call
call
adc
mov
andb
and
and
and
sub
pop
and
xchg
inc
aas
xchg
sub
and
data16
add
scas
sbb
xchg
pushf
xor
mov
call
call
xchg
add
pop
notb
mov
mov
mov
rcll
loopne
movsb
pop
lahf
out
jecxz
mov
aaa
dec
jmp
call
call
test
jmp
push
and
repnz
jns
mov
mov
jbe
mov
loopne
into
cwtl
push
and
mov
call
stc
repnz
sub
jp
xor
xchg
lret
int
push
repnz
out
lret
xor
and
and
and
and
pop
addl
popf
inc
add
or
data16
lret
and
call
call
cwtl
ds
call
mov
rcll
clc
jno
pop
scas
pop
sbbl
scas
xchg
mov
std
push
sbb
into
xchg
pop
repnz
lds
addr16
or
pop
jo
inc
xor
adc
stos
jg
int
jmp
call
call
rclb
ficoml
mov
add
iret
inc
add
add
jnp
pop
lahf
bound
jns
mov
sub
inc
clc
sarb
in
jbe
cld
iret
cmp
cltd
cmp
and
and
and
and
insb
cli
call
call
lahf
cmp
xor
adc
mov
call
call
testb
pop
shl
inc
lock
jnp
adc
xorb
outsb
shr
arpl
xchg
mov
stos
mov
jae
data16
mov
sbb
and
out
push
and
loop
int3
or
call
call
call
js
ljmp
js
lds
pop
pusha
and
inc
out
ds
int
pop
cs
sub
shll
call
call
call
les
call
cmp
push
imul
divl
adc
inc
sahf
adc
shlb
sub
xor
sub
call
call
fcmovnbe
xchg
je
mov
int3
add
outsl
ror
inc
cli
sub
adc
popw
pop
mov
sub
cmp
mov
dec
testb
xor
enter
adc
sbb
xor
cmpsl
fucomp
cmp
mov
add
call
or
int3
call
call
mov
aad
add
call
call
dec
cs
cli
pop
inc
inc
bound
mov
js
add
mov
lcall
push
lds
xchg
sahf
aaa
sub
sub
aam
cmp
fiadds
jo
je
cld
iret
cmp
jno
popf
call
call
jg
mov
add
inc
icebp
adc
fdivp
add
sub
pop
stc
cmpsl
or
inc
sub
push
xchg
gs
mov
pusha
call
call
call
and
and
and
and
and
and
mov
sbb
outsl
cmp
scas
fiadds
call
sub
xchg
push
repnz
mov
divl
out
out
push
out
inc
jns
stc
out
pusha
or
inc
mov
imul
push
std
shlb
js
das
enter
test
and
in
call
jnp
adc
mov
push
scas
hlt
jns
or
jl
das
sbb
cmp
pop
cltd
fwait
or
out
pop
call
call
pop
cs
popf
mov
call
call
repz
sbb
lret
jns
mov
rcll
ds
mov
lods
scas
insb
push
cmp
lret
dec
fdivl
xchg
outsl
mov
dec
adc
in
aas
nop
or
sbb
and
mov
call
call
add
nop
pop
pop
clc
dec
add
sbb
add
adc
rcrb
std
stos
inc
mov
cltd
xor
ss
add
dec
add
shlb
mov
cmpsl
sub
or
rcrb
sbb
sbb
call
call
imul
mov
sub
ret
cmp
xlat
jle
dec
pop
jnp
dec
push
sti
mov
bound
insl
xchg
lock
inc
push
or
jmp
ss
fstpt
jae
pop
xlat
push
into
jl
adc
call
call
call
sahf
out
xor
pop
jne
adc
pop
movl
dec
sbb
test
pop
and
nop
lret
out
pusha
xor
bound
test
lea
mov
addr16
out
mov
add
adc
call
xchg
jo
cwtl
out
inc
int
add
jge
inc
cli
or
and
and
and
and
cs
mov
leave
push
dec
sbb
and
pusha
cmp
ljmp
idiv
and
adcb
pusha
rol
adcb
movsl
fwait
xor
call
call
pop
xchg
stos
xor
mov
sbb
out
mov
jmp
fxch
push
dec
scas
rcr
mov
lret
popf
repz
clc
mull
sbb
pop
sbb
mov
loop
fnstsw
in
ja
je
insl
or
push
inc
fists
mov
push
scas
inc
stos
ror
lret
int
clc
mov
loopne
call
call
lods
and
call
call
call
call
out
cld
pusha
push
mov
jne
pop
or
data16
adc
fldenv
shr
cmpsb
adc
adc
and
and
ror
cmp
popa
jnp
sbb
xor
add
lret
inc
adc
and
push
std
xor
stos
call
call
ja
flds
inc
and
call
call
call
call
push
push
test
and
and
and
and
and
mov
arpl
fcoml
lcall
data16
dec
imul
xchg
test
push
in
aad
mov
sahf
or
call
call
call
ja
lock
mov
aad
jg
call
call
mov
mov
adc
sub
sub
xor
cmc
pop
mov
fisttps
sti
dec
ret
cld
push
out
imul
pop
cmpsb
push
into
xlat
and
adc
mov
pop
outsl
movsb
stos
call
call
pand
adc
pop
mov
stos
jb
jno
jbe
push
or
mov
jge
dec
add
enter
xchg
sahf
shl
adc
inc
fld
adc
pop
pushf
stc
xchg
pop
push
mov
inc
xor
pop
xor
sub
rcrl
call
call
shlb
or
xchg
xor
and
cltd
push
fwait
adc
rclb
call
aas
add
mov
xor
ss
pop
cmp
divl
fmuls
mov
cld
mov
call
call
dec
mov
lret
fisubl
leave
cs
ss
ficompl
and
std
inc
jns
ret
sbb
xchg
or
cmpsl
push
mov
mov
xorl
call
call
call
pop
mov
add
add
mov
not
mov
mov
push
or
out
rcll
push
and
jge
or
test
cs
aaa
pop
and
and
and
and
and
cmpb
sahf
jg
scas
outsl
cltd
repnz
mov
lahf
mov
pusha
icebp
lds
call
call
sbb
inc
jecxz
push
lahf
les
push
pop
push
mov
insb
cmpsb
mov
clc
mov
popf
insl
sub
sti
popf
shr
call
out
stc
aaa
xchg
call
call
ror
ja
jnp
insb
lock
and
repnz
push
jno
push
mov
jge
mov
dec
in
ja
mov
xor
addb
shrb
jb
mov
rorb
call
call
mov
dec
js
pop
or
ss
test
ret
daa
enter
cmp
cmc
clc
adc
cmp
call
call
jb
push
hlt
pop
movsb
enter
stc
stos
xchg
jmp
xchg
popa
pop
mov
push
mov
in
add
jae
xchg
and
orl
xor
pushf
or
call
call
call
subl
pop
cmpsl
fmull
call
call
call
gs
movntq
cmpsl
mov
xchg
xor
dec
pop
movsl
inc
jp
or
lret
pop
psubsw
fs
imul
in
sub
pop
jg
mov
sbb
insb
jne
jo
and
adc
les
mov
adc
push
cmpsb
jp
call
sbb
mov
call
call
ss
fisubl
dec
inc
inc
arpl
push
mov
shlb
dec
jl
sti
and
and
and
and
and
and
je
mov
xor
outsl
mov
call
call
sub
fcmovu
sub
push
mov
addr16
into
jb
adc
imul
in
in
or
xchg
out
mov
sbb
dec
movsb
adc
call
call
call
fidivs
call
call
insb
aam
adc
jno
int
adcl
in
movsb
and
inc
mov
adc
adc
call
call
call
out
lcall
pusha
scas
je
loope
xlat
lret
pushf
std
rcl
filds
decl
fld
aad
pop
int3
into
inc
or
mov
adc
cmc
sbbl
lret
xlat
ret
cld
mov
lret
push
adc
cmp
cld
jno
push
push
or
call
call
call
call
stos
out
loopne
jbe
std
sub
mov
call
call
call
pop
or
lods
roll
and
and
and
ret
jl
jae
mov
and
and
and
and
lock
xchg
adc
xor
test
or
dec
jmp
pop
xor
add
or
dec
cld
or
mov
push
or
and
call
call
fsubrs
pop
adcb
add
mov
jbe,pn
std
mov
arpl
mov
icebp
xchg
pop
mov
ljmp
adc
aaa
xor
enter
or
sub
ja
loop
arpl
addr16
stos
inc
pop
inc
daa
call
call
stos
cli
cli
test
ret
js
mov
jo
push
mov
xchg
outsb
repnz
call
call
call
sbb
popl
adc
adc
sbb
ljmp
call
dec
mov
jne
call
pop
aam
pop
std
adc
fldt
mov
loopne
mov
inc
mov
and
mov
xchg
call
call
call
std
dec
jge
inc
out
outsb
icebp
sub
test
fstpl
jmp
call
call
call
cmpsl
push
inc
or
cltd
xchg
lret
sub
push
jbe
or
lret
sub
addr16
or
inc
ja
fiaddl
sbb
push
or
and
mov
call
sbb
mov
test
sbb
in
mov
and
and
and
and
and
and
and
sbb
scas
xchg
das
jmp
mov
mov
push
inc
fisubrs
call
call
jnp
sbb
movsl
jecxz
ja
ja
mov
ss
jno
mov
int3
or
test
loope
mov
jmp
sub
cmp
js
jl
push
popf
and
jge
pop
in
xor
mov
mov
sbb
shll
repz
call
call
inc
sub
mov
pop
sbb
mov
jl
bound
pop
push
adc
test
sbb
shll
xchg
push
sbb
xlat
stos
jmp
xlat
imull
dec
sarl
add
add
call
call
mov
and
int
nop
das
rcrb
add
mov
or
push
frstor
pop
mov
adc
or
insl
xchg
aam
into
or
repz
call
call
mov
mov
fcmovb
mov
sub
push
jmp
jo
loop
imul
jge
pop
lods
jge
jae
ret
jbe
cmp
les
call
xchg
addb
cmpsb
and
icebp
add
jmp
xchg
mov
push
dec
and
and
and
and
and
and
and
xor
insl
xor
fildll
xchg
das
inc
xchg
sbb
call
shrl
call
call
or
push
adc
push
mov
or
std
and
fadds
mov
aas
fdivl
test
sub
ffreep
mov
mov
or
inc
inc
aaa
icebp
push
roll
call
call
call
jo
pop
xchg
and
mov
dec
jae
xor
mov
jmp
jp
call
call
call
mov
leave
mov
rolb
test
ret
dec
mov
push
imul
call
call
loopne
lret
arpl
push
ja
nop
test
mov
aam
lcall
call
enter
or
call
call
pop
pop
xchg
mov
daa
clc
adc
popa
pop
push
scas
push
movsl
inc
je
lea
cmp
fs
into
inc
pop
dec
jp
notb
push
mov
ja
ret
push
int
out
cmp
call
call
cs
test
ret
sub
int3
js
add
in
cmp
jbe
mov
std
lods
cmp
call
call
adc
sub
ret
inc
out
test
mov
mov
ss
daa
rolb
fnstcw
stos
loopne
rolb
pop
cmp
push
cmp
call
call
push
jno
add
call
call
pusha
jle
shl
dec
adc
shll
pop
scas
xchg
mov
cmp
fstl
mov
inc
test
outsb
inc
mov
push
arpl
call
call
into
and
cmpl
mov
jno
adc
jnp
xor
call
call
call
pop
addr16
adc
inc
adc
jle
mov
mov
push
sbb
sub
and
and
and
scas
xlat
cmpsl
mov
pop
xor
cld
pop
cmp
cmp
mov
fcomi
call
xor
dec
pop
lret
pop
loope
jg
cmp
mov
adc
push
stc
push
call
call
lds
pop
or
xor
stos
test
mov
mov
add
pusha
inc
xor
pop
repz
test
mov
cs
and
and
and
and
and
mov
leave
mov
call
out
bound
push
xchg
rcrb
mov
lods
mov
repnz
jae
cmp
loop
adc
call
fistpll
sahf
lcall
fdivrs
cmp
or
call
call
and
and
and
and
and
and
sub
mov
sarb
adc
inc
daa
scas
call
call
fs
ljmp
into
jmp
add
cmp
jne
jmp
and
xchg
push
sahf
imul
dec
mov
cmp
bound
outsb
pusha
sti
gs
lcall
xor
sbb
jo
mov
std
call
call
call
add
shrl
fidivrs
cmp
dec
pop
fnstenv
mov
lcall
xchg
bound
call
call
mov
xor
push
inc
jae
cmp
out
test
sbb
add
pop
rorb
lds
pop
sbb
loopne
sbb
arpl
ljmp
push
pop
xlat
call
call
call
iret
mov
std
pop
popa
jne
call
xchg
mov
subl
pop
out
push
decb
sbb
mov
call
call
aaa
mov
mov
jmp
sbb
aaa
insb
mov
pop
sysenter
rol
pop
shrl
lods
push
xchg
fsub
loope
inc
insl
jns
pop
push
pop
mov
ficompl
andb
lcall
call
call
add
loop
call
call
pop
jl
sub
add
mov
int3
call
call
call
xchg
repnz
dec
dec
aad
sbb
sbbb
push
aaa
enter
es
neg
xchg
ret
dec
pop
and
dec
std
popa
fs
repnz
mov
test
aam
or
leave
popf
sbb
push
and
and
and
and
and
sub
jle
cs
call
sti
mov
loope
pop
inc
icebp
jbe
out
or
jecxz
jbe
rcrl
and
push
popf
and
inc
lods
xchg
aas
sbb
movsb
ss
cmp
dec
in
neg
call
call
call
xlat
stos
popa
push
loopne
and
aam
mov
js
add
mov
and
and
and
and
and
outsl
add
loopne
push
rclb
flds
jecxz
xlat
fxch
lret
cmp
cmp
mov
adc
stos
jno
clc
push
xchg
pop
call
call
cmpsl
icebp
mov
sub
insl
call
call
sbb
loopne
sbb
mov
repnz
cmc
inc
sub
call
sbb
jp
dec
add
call
sbb
xchg
icebp
lods
mov
pop
mov
test
aaa
mov
cwtl
fldenv
jne
pushf
push
call
call
in
mov
or
nop
and
enter
add
call
call
sbb
test
fldt
mov
cs
jge
aas
mov
aaa
pop
inc
jmp
call
call
xchg
js
out
jb
clc
adc
popf
cmpsb
cmpl
aas
ljmp
je
jle
insl
aad
add
cmc
popf
jle
fs
and
and
and
and
and
and
dec
sub
fstl
call
ret
push
int
scas
ds
or
call
call
call
data16
call
call
call
adc
cmpsl
sbb
rcrl
call
call
push
daa
daa
shr
inc
inc
and
ret
les
push
adc
mov
das
inc
push
es
mov
in
xor
out
fisttps
inc
mov
jl
hlt
cli
mov
dec
fistpll
adc
push
loope
or
mov
in
push
lea
call
call
call
in
scas
jp
jge
movsb
inc
aas
and
push
leave
ljmp
shll
mov
mov
push
fimuls
cmp
stos
loopne
in
mov
pop
call
call
call
popa
push
xor
repz
and
and
and
pop
push
lcall
xor
push
nop
push
sbb
div
test
sarb
mov
push
sti
mov
gs
call
mov
or
loopne
cmp
mov
dec
enter
add
shrl
dec
xchg
loopne
pop
in
mov
dec
inc
push
pop
ss
jnp
in
jns
jmp
cli
je
inc
inc
addr16
dec
retw
cmp
sbb
xchg
in
ret
call
call
call
incl
ficoml
in
push
out
aas
mov
in
imul
or
mov
call
test
fucom
mov
and
cmp
push
cmp
lret
push
cmp
dec
mov
scas
sub
adc
inc
aad
cwtl
push
and
call
call
js
push
sbb
out
jecxz
pop
mov
mov
ret
aam
fbstp
js
rolb
mov
jmp
mov
mov
jl
fldpi
fld
nop/reserved
and
div
cmc
aam
inc
adc
sub
sub
call
call
push
insl
in
ja
jecxz
mov
std
or
aad
jg
sub
adc
outsl
push
jp
mov
bnd
cmc
xchg
out
into
and
cmpsl
dec
sbb
fcompl
out
incb
xor
arpl
mov
xchg
cmp
out
and
mov
jne
jbe
add
xchg
loopne
stos
pop
add
call
call
call
dec
mov
mov
sub
dec
cmpsl
or
sub
jbe
pop
or
push
mov
imul
xor
xchg
mov
imul
fistpl
arpl
mov
in
ss
dec
repnz
and
and
and
and
pop
jg
call
call
call
cmp
cmpsl
push
int
aaa
aad
xlat
jl
out
mov
mov
lea
xchg
ret
fadds
lahf
test
dec
lds
push
shll
xchg
pop
fwait
imul
and
inc
sub
sbb
pop
clc
aas
and
aas
call
call
call
lods
xchg
sbb
add
push
popf
push
sbb
lock
push
push
dec
sarl
pop
sub
pop
je
push
sub
adc
das
fistl
pop
out
int3
adc
and
pop
aam
and
xchg
insb
xchg
sub
inc
roll
clc
outsb
xchg
add
mov
xor
shlb
dec
or
call
call
call
jnp
neg
insb
inc
sbb
dec
in
cmp
inc
pop
inc
xlat
mov
int3
jo
jb
dec
dec
sbb
call
cmp
stc
fcmovnu
aam
out
xchg
xor
icebp
test
sbb
insl
lret
adc
jmp
lcall
sbb
out
outsl
push
pop
in
clc
xchg
mov
fsubrs
lahf
ss
dec
push
mov
call
call
fisubs
inc
mov
lcall
popa
in
sub
leave
sbb
push
xchg
or
es
pop
popa
jo
pusha
cmp
jle
shr
dec
and
dec
push
cmp
push
and
push
je
stos
std
sbb
mov
push
pop
outsb
lea
xchg
push
or
js
imull
xor
push
clc
adc
call
call
call
mov
das
add
mov
xchg
mov
jo
das
ja
xor
and
inc
push
std
xor
inc
jne
jl
sbb
inc
xor
pop
sti
add
mov
int
add
mov
inc
iret
push
push
pop
pop
fwait
lret
fnsave
das
std
lcall
push
aad
jg
pop
arpl
call
call
and
and
and
and
and
and
pop
repnz
popa
and
cmpsl
call
call
ljmp
sbb
sub
imul
mov
jno
jp
insb
dec
push
sub
push
cmp
aam
pop
push
cmp
int3
mov
push
sub
orl
call
call
bound
sub
inc
or
ja
mov
sbb
adc
test
call
in
sbb
repz
enter
xlat
add
jne
push
sahf
xchg
inc
jns
lret
xchg
dec
lods
mov
dec
js
sub
sub
dec
jge
daa
mov
cwtl
nop
dec
push
enter
testb
lds
call
call
inc
cmpb
add
and
and
and
and
out
int3
aad
fadd
es
or
mov
sub
sbb
jle
fists
and
xchg
cmc
fwait
jmp
scas
cmp
mov
push
pop
xor
pop
mov
lds
jne
out
jo
testl
dec
notb
ret
stos
ret
mov
call
call
call
xor
call
call
jno
movsl
push
jo
iret
sub
insl
stc
bound
call
call
mov
test
sbb
call
call
sub
dec
adc
out
mov
stos
mov
insb
shll
xchg
call
call
popa
jg
mov
rcr
lods
aaa
out
jecxz
adc
push
push
imul
sahf
push
adc
dec
push
push
in
outsb
cld
cmp
inc
pop
aad
add
jne
adc
lods
add
repnz
insb
ret
xor
xchg
xchg
movsl
sub
cwtl
or
iret
test
mov
adc
push
cmc
mov
in
call
call
call
call
mov
mov
test
push
subb
icebp
dec
mov
cwtl
push
mov
pop
imul
xor
and
and
and
and
les
call
call
pop
cmpb
stos
test
nop/reserved
ja
test
dec
add
push
call
call
out
in
je
add
mov
loop
jnp
xor
aam
addb
cmp
testb
fiaddl
and
sbb
call
call
fsts
pop
or
xor
push
push
loop
out
seta
and
and
and
and
and
sub
subl
adc
imul
insl
in
inc
andl
call
call
out
rorl
or
cld
test
mov
out
cmp
and
fmul
sub
xchg
lea
xor
jnp
mov
pop
ret
mov
xchg
lds
loope
jno
fstps
jp
mov
call
call
in
arpl
leave
inc
add
xor
enter
call
call
jbe
mov
clc
fwait
mov
test
fldcw
mov
push
insb
and
imul
dec
fldcw
add
sbb
mov
or
aam
cmpsb
outsb
incl
outsb
rcl
int3
das
pop
xchg
loope
movsb
dec
mov
jno
iret
xchg
jbe
test
call
call
test
std
dec
jle
insl
jle
divb
sbb
mov
fisubrl
jmp
xorl
mov
imul
leave
int
jb
call
call
aaa
jns
imul
fcoml
imulb
cmp
ds
test
ss
jecxz
stc
pop
and
popf
shlb
lret
pop
lcall
js
cs
xchg
ljmp
add
call
call
call
sbb
mov
negl
movsl
mov
icebp
gs
jmp
ret
dec
aad
lret
and
and
and
and
cmpsb
in
and
call
call
call
movsl
cmp
push
movsl
test
sahf
cld
jns
cmpb
and
sub
and
call
call
out
gs
cmpsb
adc
ficoml
ljmp
push
jmp
sub
mov
mov
lds
aad
mov
mov
fidivrl
xor
add
repz
and
aad
call
call
rclb
lret
mov
jne
mov
cmc
call
call
call
pop
mov
sub
popf
cmp
add
cmp
fistpll
mov
mov
xor
imul
xchg
and
add
call
call
and
mov
dec
cltd
mov
call
push
lahf
std
add
and
es
lock
or
mov
notl
call
call
call
jne
adc
call
call
adc
call
call
call
test
fistpll
dec
std
in
push
call
xchg
pop
adc
call
call
jbe
shlb
daa
sub
cmp
call
call
call
sub
stos
leave
std
enter
jg
sub
cmpsl
jmp
cmp
lods
shrl
inc
sub
or
fwait
and
adc
sbb
or
jns
add
popl
adc
jg
adc
cs
mov
jle
int
pop
call
call
call
daa
adc
mulw
dec
enter
imul
scas
cmp
pop
daa
mov
jne
aam
sub
icebp
int
jle
mov
movsl
jnp
sub
dec
xchg
mov
pop
jge
incb
and
and
and
and
and
and
jns
js
bound
xchg
jge
cltd
xor
repnz
insb
xor
push
lahf
or
or
movsl
call
call
ljmp
call
call
cmovs
cmp
call
call
loop
das
adc
mov
pop
or
ljmp
dec
inc
fsts
pusha
add
fwait
pop
lret
add
in
pop
int
arpl
call
call
das
mov
push
int3
mov
icebp
jae
adc
mov
iret
mov
or
push
lret
dec
jecxz
clc
sub
call
call
cmp
add
fcomp
scas
repz
push
inc
or
sbb
xchg
outsb
dec
push
cs
vunpckhpd
pop
xchg
push
shr
call
call
movsl
jle
push
cld
lcall
mov
pop
dec
sbb
xchg
outsl
inc
add
mov
jo
call
call
call
popf
mov
lods
mov
sti
xor
andb
lds
int3
adc
mov
xor
call
xchg
in
add
call
call
call
shl
popa
adc
lret
dec
push
iret
aaa
xchg
cltd
dec
stos
dec
or
inc
iret
outsl
scas
data16
imul
or
and
and
and
and
inc
dec
sarl
inc
pop
rorb
popa
cmp
mov
jle
sbbb
sub
in
cli
push
lds
fmulp
in
enter
adc
call
call
lods
arpl
es
jmp
fwait
je
cmp
shrl
lea
sbb
call
call
call
ja
sub
cmp
arpl
ret
push
add
std
or
scas
repz
mov
imul
and
lea
dec
pop
pop
mov
push
cmp
inc
ds
out
test
iret
and
ljmp
jle
mov
call
call
call
adc
jecxz
loope
sbb
call
call
call
dec
and
and
push
xchg
ljmp
cmpsb
cmp
iret
aad
jl
jle
stos
mov
call
out
outsl
call
call
lea
lock
push
adc
call
call
xor
lods
push
mov
jecxz
jp
xchg
scas
fisubrs
jbe
inc
call
and
push
push
mov
cmp
call
call
ljmp
in
or
mov
inc
sti
ljmp
fisttpll
test
cmp
push
enter
dec
call
call
sub
out
jns
or
nop
cmpsl
and
and
and
and
and
cli
mov
call
call
call
push
fiaddl
xor
mov
insb
jp
insl
dec
sti
mov
push
fisubs
mov
xor
in
rclb
loopne
ret
cwtl
subb
add
inc
pop
or
call
call
push
stc
mov
popa
fimull
loope
cmp
xor
sub
xor
mov
loope
in
add
flds
rcl
loop
cld
mov
xchg
xchg
movsb
jbe
pop
cs
fwait
jmp
lret
push
out
xchg
mov
cmp
mov
stos
sub
mov
call
call
pop
sub
sub
popw
jle
jb
lcall
cmc
jp
es
mov
sahf
push
incl
mov
lods
pop
jno
or
mov
and
movups
call
call
xchg
adc
and
and
and
and
and
and
ret
sarb
lea
jmp
rcr
pushw
int
sti
ss
and
imul
cs
hlt
movsb
or
cmpsb
sahf
cmp
lea
out
add
daa
ds
push
or
call
call
call
mov
dec
cmpl
call
call
stos
sub
mov
divb
jno
push
pop
jecxz
ffree
daa
xchg
lods
in
push
pop
inc
add
mov
mov
ss
gs
call
call
call
insl
gs
sti
lcall
fmuls
jno
cld
jle
adc
mov
jns
jecxz
rcl
cmp
call
xlat
fstl
dec
pop
lods
insl
aad
cmp
jle
lret
cwtl
aad
or
mov
aad
adc
push
addr16
or
cmp
sarb
into
mov
xor
xor
jns
call
call
xchg
int3
mov
adc
nop
push
rol
push
xor
repz
inc
lcall
call
call
mov
push
addl
je
les
call
call
movsl
lcall
outsb
jge
and
sbb
rorb
and
and
and
and
and
imul
dec
stos
jns
aaa
mov
and
leave
out
test
mov
or
xor
jo
cmp
adc
jbe
inc
pop
fs
mov
inc
sahf
call
call
in
pop
xor
lock
pop
add
cmp
test
or
movb
xor
int
xchg
call
call
call
and
xor
out
sbb
add
loope
sub
in
mov
scas
fistpll
adc
cmp
cld
ljmp
pop
mov
lock
cs
call
call
call
call
lahf
and
cmc
sub
dec
in
cmp
icebp
sti
bound
leave
xchg
jae
xlat
mov
sbb
sub
clc
mov
ja
sbb
fcmovnb
lods
sub
ret
push
lcall
call
call
adc
lahf
inc
call
call
dec
mov
mov
call
call
add
fnstsw
cmp
pop
je
dec
xchg
bound
mov
int
mov
outsl
mov
mov
clc
ficompl
bound
lds
call
call
call
mov
pushf
jns
adc
mov
xor
inc
inc
mov
inc
jecxz
sub
je
xor
cwtl
fsubr
push
inc
mov
pop
scas
inc
clc
jbe
cmp
lret
inc
adc
xchg
lods
call
call
jbe
mov
xor
lods
sub
insb
push
incl
sbb
call
call
add
pop
stc
ljmp
loopne
jae
lret
xor
inc
dec
arpl
imul
leave
add
lock
dec
test
xchg
dec
lods
mov
pushf
push
jbe
push
sub
mov
dec
hlt
out
test
call
call
call
cmp
loopne
loop
jecxz
push
lock
mov
and
and
and
and
and
and
mov
cmova
call
jl
ljmp
andl
fsubrs
or
mov
cld
adc
dec
in
test
adc
stc
fisubs
and
and
and
and
and
and
and
xchg
ror
popa
sbb
push
aad
sbb
int3
je
loop
cmp
ss
pop
push
cmp
icebp
sahf
push
call
call
call
je
push
jp
and
adcb
mov
pusha
cld
jl
insb
mov
stos
sbb
jnp
sbb
dec
jb
mov
jno
inc
xchg
ja
jge
xchg
xchg
xorb
jae
notb
daa
and
pop
dec
imulb
js
inc
pop
inc
in
and
cmp
btc
xchg
cmp
and
and
and
and
and
and
fldenv
mov
call
call
jecxz
sahf
out
push
call
call
call
push
push
adc
int
jecxz
jecxz
xchg
pop
ja
outsl
aaa
sbb
subb
add
nopl
and
jns
std
jbe
outsl
xor
fdivrl
daa
int
jle
into
mov
daa
lea
and
pop
mov
mov
movsl
mov
mov
sahf
jmp
add
call
call
call
jo
ror
jno
test
test
push
repz
sarb
int3
sbbl
sbb
aaa
xchg
add
dec
ss
in
inc
lock
xchg
pop
sub
call
push
jp
adc
call
call
call
mov
mov
add
add
outsb
mov
cmpsb
mov
cmp
and
fcmove
call
pop
cmp
add
imul
push
call
call
call
xor
test
rorb
ja
mov
jecxz
push
add
popa
mov
or
stos
mov
cmp
stos
mov
lea
mov
inc
add
aam
sub
mov
call
call
js
dec
ds
inc
shl
xlat
jnp
xor
mov
adc
stc
es
inc
sub
fcoms
stc
dec
jge
call
call
shlb
repnz
or
cmp
cmp
stc
outsb
outsl
sub
pop
and
and
and
and
push
pop
push
jecxz
mov
sub
in
lcall
cld
mov
stc
in
sar
leave
or
xor
shrl
lcall
call
movsl
sbb
pop
or
in
sbbl
rolb
pop
mov
jecxz
in
xor
mov
mov
sub
push
insb
push
movsl
xorb
cmp
xchg
call
call
jno
out
cld
iret
test
frstor
imul
cltd
dec
sub
cmp
loopne
fstpl
call
call
mov
inc
call
outsb
jge
xchg
pop
mov
lock
dec
mov
imul
xor
test
mov
push
push
adc
lret
or
xchg
mov
ds
or
call
call
cmp
ss
cmpsl
adc
out
bound
cmp
xor
int3
pop
add
mov
std
sub
test
cs
lahf
scas
call
call
subb
sahf
push
scas
adc
lods
test
stos
cmp
fstpl
aad
daa
ja
test
std
add
gs
repnz
test
xchg
cmp
add
jle
cmp
es
mov
loopne
dec
xor
jne
pop
pop
cmp
adc
and
xchg
scas
or
call
call
popw
xchg
movsl
stos
sub
sbb
xlat
cmpsl
xchg
aam
pop
setne
cld
mov
pushf
push
loopne
dec
mov
adc
icebp
pop
dec
add
adc
adc
call
call
call
cmp
push
aad
leavew
lahf
adc
sbb
imul
call
jl
jo
int3
es
pop
enter
sbb
into
movsb
dec
aam
fistps
mov
pop
jne
fiadds
and
and
and
and
sub
jb
mov
lret
mov
cmpsb
pop
jle
call
call
dec
stos
pop
and
sbb
jmp
sbb
cmpsl
dec
stc
pop
push
inc
sbb
pop
mov
and
lock
jl
in
loope
and
cmp
test
and
gs
mov
pop
out
int
sub
mov
xor
cmpsb
ljmp
call
call
cmpsb
adc
cmp
push
dec
cli
gs
pushf
shrl
xor
and
cwtl
fildll
mov
push
call
call
push
daa
add
fimull
adc
test
adc
aam
pop
mov
or
enter
xchg
movsl
xor
int
sbb
arpl
ds
or
push
std
orb
aam
pop
fadd
sub
and
adc
and
xchg
inc
nop
call
call
call
dec
or
inc
jns
fsubs
ja
fsubs
sbb
leave
call
call
call
mov
lds
add
das
aas
cli
mov
mov
xor
ficoms
fs
push
dec
jbe
fcoms
adc
ja
movsb
adcl
sbb
xor
add
xor
inc
mov
fisubrs
xchg
mov
call
call
and
shll
dec
dec
cli
rcll
lea
adc
inc
sbb
call
pop
popf
in
ds
les
pop
cwtl
fldln2
movsl
clc
cmp
adc
mov
fwait
pop
call
call
call
clc
call
call
call
lret
das
out
orl
inc
std
fidivl
aas
imul
test
rorb
flds
call
call
popa
mov
test
add
call
call
clc
mov
decb
repnz
das
les
pop
inc
in
xchg
and
and
and
and
and
sub
call
call
inc
out
in
int3
cmp
jb
insb
and
std
into
in
outsb
cli
arpl
lahf
das
or
sbb
fwait
xor
inc
push
jb
iret
xor
sbb
sub
push
dec
mov
sbb
add
call
call
adc
in
adc
inc
xlat
inc
ja
jae
pop
daa
lcall
aaa
int3
out
dec
jl
xor
xchg
call
call
call
adc
and
and
and
and
and
and
cmpsl
cmpsl
adc
mov
push
call
fmul
subb
add
mov
adc
movsb
inc
pop
jns
inc
fsubs
pop
and
pop
mov
pop
push
and
loop
add
movsb
add
out
div
call
call
adc
pop
fisubs
add
bound
push
cli
ret
xor
mov
sbbb
frstor
setbe
lahf
loop
inc
ss
cli
cmpsb
xchg
mov
push
ds
popa
xchg
lods
outsb
sub
mov
mov
xchg
mov
xlat
jb
pusha
out
mov
lcall
add
call
call
call
inc
sbb
sbb
mov
inc
enter
enter
xor
mov
lock
sahf
test
cmp
dec
outsb
xchg
loop
call
call
call
sarl
mov
mov
cmpsb
stc
pop
pop
rol
jne
and
mov
pop
scas
vshufpd
mov
xor
mov
dec
les
out
xor
mov
xchg
jge
xchg
cmovbe
cmp
shl
in
xchg
jecxz
dec
loopne
pop
sbb
cmpsb
add
call
call
call
outsl
aam
pop
mov
mov
add
sbbb
pop
test
icebp
in
test
adc
rolb
in
pop
popa
dec
jbe
pusha
call
call
mov
jb
lods
push
xchg
imul
adc
push
mov
push
sub
js
and
and
and
and
and
and
jmp
jp
xchg
mov
cmovge
dec
cmp
adc
enter
vmovdqa
outsb
fnstsw
fadds
insl
xlat
mov
jecxz
xchg
inc
in
jge
call
call
or
jo
inc
jb
cmp
push
dec
push
xchg
test
call
call
pop
push
fisubrs
add
jmp
arpl
adc
scas
jl
jl
int
sub
outsb
mov
xor
pop
jp
es
mov
push
daa
hlt
cltd
pop
out
call
call
mov
movsb
xlat
ljmp
leave
add
stc
jl
jl
xchg
lock
pop
test
dec
testl
mov
idiv
xor
lahf
iret
scas
xchg
jbe
call
call
xchg
popf
popf
into
leave
fdivs
daa
ss
fs
cld
and
jmp
stos
call
push
insl
push
out
out
xor
adc
and
xchg
push
decb
mov
mov
sbb
fisubs
jns
and
les
and
popf
sahf
push
mov
mov
pop
call
call
call
mov
ds
testl
cmp
inc
addr16
negb
pop
es
push
addl
call
call
call
pop
mov
jecxz
xorb
lock
sub
lcall
jne
hlt
inc
dec
addb
adc
je
call
mov
aad
sbb
push
fldcw
call
call
call
fbstp
and
and
and
and
and
and
and
and
inc
and
lahf
mov
gs
mov
jle
adc
ficoml
inc
sbb
and
adcl
jle
call
call
cmp
xchg
repz
in
xchg
cmp
push
imul
call
call
sahf
in
data16
lea
inc
fwait
shrl
dec
pop
push
jecxz
insl
xchg
jo
xor
int
and
and
and
and
and
and
repz
lds
lds
sbb
sti
sbb
fmuls
adcb
mov
out
lds
mov
and
mov
jl
xchg
mov
jl
call
call
call
stos
adc
mov
pushf
dec
xor
jb
into
lcall
jne
scas
fwait
jecxz
jl
das
xor
fstps
mov
sub
out
lods
out
jno
call
call
push
inc
lcall
test
pop
pushf
jnp
adc
iret
ret
mov
call
push
hlt
das
pop
shrl
dec
call
call
call
call
shrb
pushf
js
mov
sub
sub
das
inc
daa
dec
cwtl
or
js
mov
imul
xor
mov
das
test
data16
push
jno
pop
dec
sub
call
call
pop
and
xchg
ret
mov
bound
call
call
sar
pop
cld
jbe
std
gs
jecxz
cmp
dec
sub
dec
in
xlat
xchg
and
lahf
add
dec
insl
aam
and
add
pushf
es
fs
movsb
mov
clc
test
pop
adc
ret
and
jp
stos
cwtl
dec
in
js
adc
fmuls
call
call
aas
clc
fnsave
scas
js
pushf
call
call
call
call
daa
aas
aad
mov
adc
jnp
ficomps
data16
and
out
inc
dec
fldl
push
addl
sub
call
das
lock
dec
pop
dec
cs
call
call
jno
outsb
movsl
dec
jmp
mov
dec
push
cwtl
loop
jae
add
push
bound
mov
mov
add
repnz
ss
push
dec
inc
out
lock
dec
dec
int3
inc
test
lds
std
push
add
neg
inc
loope
xor
pop
icebp
jge
fisubrl
fdivs
dec
push
insb
roll
outsl
loop
int3
and
and
and
and
and
and
and
lcall
aas
pop
mov
hlt
addb
push
out
decb
rcrl
test
cmp
call
call
jae
in
aaa
int3
jne
call
call
call
or
jns
mov
sbbl
adc
jbe
lahf
enter
call
stos
mov
mov
xor
cmpl
xor
gs
mov
dec
enter
out
jp
fidivl
push
cli
lock
xchg
push
xor
scas
fstpl
test
jb
pop
daa
sbb
call
call
call
push
addb
lret
pop
push
add
pop
aam
mov
mov
dec
mov
inc
aam
add
movsb
jle
icebp
shlb
fnstsw
insb
and
cs
pusha
out
shlb
cmc
mov
insb
mov
call
call
shrb
pop
shl
filds
cmp
jne
pop
add
sub
xor
xchg
bound
lds
add
mov
push
sbb
incl
push
loope
jmp
lea
pop
test
push
dec
jl
call
call
neg
mov
mov
or
arpl
bnd
xlat
push
sti
xchg
sub
and
cmp
xchg
leave
push
lcall
and
imul
or
xorl
inc
ljmp
jp
cwtl
ret
imul
call
pop
out
pop
subl
call
testb
mov
mov
jle
inc
pop
push
xor
cwtl
data16
mov
fistl
and
call
call
call
sub
pop
das
aad
imul
sub
rolb
in
add
and
and
and
fimuls
jmp
insb
mov
fisubrl
stos
dec
xor
fnsave
cld
push
sbb
push
jnp
cmp
addr16
in
xor
cmp
sub
adc
ljmp
scas
pop
lret
mov
fld
in
mov
adc
aam
lahf
out
xor
lret
dec
in
call
call
call
mov
fists
rclb
stos
sbb
jno
jg
mov
adc
jbe
mov
filds
cs
fimuls
xor
out
in
cli
push
xor
mov
xor
int
inc
pop
sub
push
dec
stos
sbb
call
call
out
ljmp
cli
push
ja
movsb
stos
cmp
fadds
xchg
scas
loopne
bound
sub
call
xchg
jno
stos
mov
xchg
add
or
inc
ret
das
vpackuswb
call
call
call
fnsave
call
call
sahf
loopne
cmp
mov
mov
outsl
pop
nopl
mov
pop
mov
ja
and
inc
out
call
call
call
xor
aam
push
mov
call
call
movsb
repnz
add
push
cs
jle
pop
push
out
and
std
scas
sbb
mov
jp
add
mov
pop
cwtl
or
out
push
inc
xchg
pop
and
pop
adc
stc
sbb
dec
in
sbb
mov
orl
jl
gs
dec
aaa
call
call
call
std
xor
lret
inc
inc
iretw
pop
scas
gs
aas
pop
xchg
in
je
pop
outsl
mov
xchg
push
dec
cmp
js
testb
mov
jle
out
sbb
xor
ss
call
call
call
pop
mov
push
call
call
call
mov
out
sbb
call
call
and
and
and
and
and
lahf
and
sti
push
fsubs
add
lods
sub
lods
mov
sub
enter
mov
cli
test
sub
in
or
aas
add
rorb
pop
int3
sbb
push
xchg
int3
xchg
sbb
call
call
call
call
xlat
jl
test
mov
xchg
in
pop
or
push
clc
cmc
cli
nop
int3
nop
and
and
and
and
and
and
sti
fstpl
call
call
cld
adc
jno
out
shrb
jle
lods
pop
push
jl
xchg
mov
movsl
lods
and
leave
mov
mov
xor
inc
adc
push
mov
call
ja
mov
pop
push
jae
adc
xchg
ret
dec
jle
mov
dec
xchg
xchg
adc
leave
or
pop
and
jg
jp
test
aad
fwait
call
call
cs
or
fisttpl
mov
out
ficompl
sbb
call
call
call
dec
dec
lret
mov
inc
add
shrl
lods
popa
mov
aad
imul
outsb
mov
add
pop
dec
dec
lea
adc
or
lcall
repnz
enter
push
insb
push
mov
test
pop
xor
sbb
cmp
mov
cld
out
push
mov
or
pop
cli
inc
sbb
call
call
call
push
imul
xchg
pop
inc
push
mov
push
adc
sub
bound
xor
lods
or
mov
mov
mov
or
std
sub
popa
aas
and
mov
hlt
gs
sbb
call
call
push
pop
xchg
cwtl
mov
jl
call
call
lock
popl
arpl
test
xchg
or
cli
js
dec
jg
mov
add
cmp
mov
arpl
and
mov
mov
data16
jg
mov
lahf
pop
mov
lods
adc
adc
aam
test
inc
addr16
xor
call
call
aad
adc
cmpsl
push
cmp
scas
inc
pop
daa
dec
pop
xchg
popa
xor
add
bound
cwtl
gs
in
pop
dec
insl
and
call
xchg
ds
cmpsb
dec
xchg
or
mov
sarl
popf
das
mov
and
and
and
and
and
pop
cmpsl
je
cmc
addl
inc
cmp
dec
mov
sahf
insl
mov
arpl
test
call
call
cs
sbb
test
or
push
shlb
adc
pop
in
aad
inc
xor
call
call
mov
push
and
or
sbb
dec
int
imul
aas
inc
sahf
pop
mov
inc
subl
in
mov
data16
push
movsb
xor
dec
push
sub
jmp
cld
dec
mov
call
call
call
sub
insb
movl
test
pop
call
call
call
xchg
pusha
jmp
adc
lcall
popf
loope
rclb
jo
das
sub
jecxz
sub
add
gs
jae
call
call
call
bound
and
int
mov
inc
cld
pop
int
sub
mov
int
pop
ret
int3
mov
popf
adc
cmp
xor
or
jp
shll
call
call
mov
leave
push
xchg
sti
pop
gs
and
and
and
and
dec
jmp
out
pop
inc
lock
out
inc
sbb
push
psadbw
orl
sub
movsb
loop
xor
and
mov
lahf
imul
cmp
sub
outsl
out
cmpl
and
xor
pushf
ret
call
call
nop
adc
sbb
mov
ret
pop
mov
mov
and
and
and
and
add
adc
sbb
call
call
jp
pusha
stos
lcall
inc
int3
fiadds
leave
in
or
adc
and
and
and
sub
cmp
push
call
call
xchg
stos
or
aad
repz
ret
stos
lret
pop
gs
aad
mov
mov
je
fistl
mov
jp
mov
mov
dec
sub
ret
push
push
mov
popf
imul
xor
ja
push
sti
iret
aas
push
call
call
push
cmpsb
fnstsw
add
cmpb
call
call
mov
call
inc
and
mov
mov
loopne
push
mov
add
out
leave
adc
sub
and
and
and
mov
mov
call
call
call
aad
subl
sbb
lcall
push
cmp
push
pop
push
cmp
xor
dec
cmp
and
adc
xor
mov
mov
jne
sbb
mov
jno
jle
call
call
call
add
aaa
push
sbb
mov
push
inc
xor
out
je
lea
popf
leave
je
sbb
outsb
push
mov
sti
mov
mov
and
cmp
xchg
pop
sti
dec
stc
mov
xchg
add
test
xor
call
call
call
push
rcl
nop
adc
stc
inc
cs
std
mov
push
xor
sti
loopne
xchg
mov
push
adc
sbb
cmp
in
test
mov
call
call
and
sbb
xor
inc
push
ret
nop
dec
jnp
jp
mov
pop
pop
fptan
clc
call
call
call
icebp
or
std
jge
adc
rclb
aam
and
loope
ret
movl
popa
in
out
cmp
and
neg
int
pcmpeqd
xor
and
and
and
and
and
dec
jbe
mov
aam
mov
xchg
sahf
xchg
jbe
xlat
into
je
call
call
inc
into
inc
push
xchg
mov
dec
jae
jno
mov
test
scas
js
shlb
and
pop
sbb
mov
sub
jnp
mov
cmp
add
test
out
das
sub
call
call
call
call
and
and
and
fcmovbe
nop
jb
xlat
arpl
std
popa
mov
cmp
add
xor
adc
dec
insl
adc
pushf
sbb
jbe
gs
out
into
mov
stc
mov
call
call
xchg
popf
mov
add
sahf
push
sbb
daa
and
cmpl
int3
jl,pn
inc
repz
call
call
das
pmulhw
inc
loop
xchg
std
popa
and
inc
xchg
out
mov
mov
je
in
imul
scas
jno
loop
outsb
shll
ja
mov
xor
adc
adc
push
xchg
and
rcr
xchg
call
call
sbb
inc
fadd
cs
mov
xor
shll
aad
xor
adc
cmpl
jl
jp
arpl
xlat
pop
call
call
call
mov
call
call
call
iret
sub
sti
in
mov
xor
fwait
jl
inc
leave
jecxz
call
call
call
daa
sbb
call
call
call
call
data16
rclb
inc
std
pop
imul
call
cmp
inc
xchg
and
and
and
and
and
and
cmp
lahf
test
mov
dec
jno
cmpsb
pavgw
clc
xor
inc
out
lock
and
fnstsw
xchg
aad
stos
shlb
call
call
lea
rorb
int
addr16
cmpsl
outsl
insb
stos
push
cwtl
lahf
push
ret
rcrb
call
call
call
les
mov
daa
cmpsl
pop
pop
sbb
mov
ficompl
jp
mov
mov
cmp
sbbb
out
inc
xchg
or
sbb
dec
jmp
or
cmp
jno
mov
outsl
je
lods
insl
mov
xchg
call
call
les
xor
or
call
call
push
ret
jmp
cmpsl
pushf
mov
ja
div
adc
mov
js
jp
mov
push
dec
stos
lcall
lahf
insl
sbb
test
es
cwtl
ja
call
call
call
bound
jno
lods
sbb
push
fidivs
jno
fs
daa
inc
std
xor
mov
dec
xchg
cmp
jo
mov
mov
xor
push
xchg
jbe
adc
aam
out
loope
dec
das
or
mov
pop
pop
push
sub
cs
int3
xchg
cmp
cld
adc
dec
jae
fisttps
adc
call
add
jl
ja
es
movsb
add
and
in
fnstenv
pop
and
ss
xor
pop
movsl
xchg
jge
and
and
and
and
and
and
hlt
es
cmpsb
das
js
nop
mov
add
ret
shlb
inc
movsb
and
and
and
and
and
jo
or
push
mov
or
and
xchg
pop
jl
cmp
cmc
ljmp
imul
int
add
imul
call
lret
in
adc
cwtl
notl
icebp
mov
cwtl
arpl
dec
push
outsl
cmpsb
insl
add
testb
sbb
mov
nop
inc
idivb
mov
shrl
mov
mov
bound
mov
inc
or
and
and
and
and
and
and
call
call
call
out
and
jne
in
cmc
adc
js
cmc
mov
pop
xchg
mov
call
xchg
jle
arpl
jl
in
xlat
cmpb
shll
call
mov
dec
fwait
push
mov
cmp
dec
clc
cli
imul
shl
or
cmpsl
test
int
out
aam
cwtl
insb
jecxz
cli
addr16
xorl
mov
out
imul
xlat
into
mov
dec
mov
call
call
aad
dec
fucomp
mov
lret
and
push
movsl
pop
pop
pusha
adc
or
fmuls
mov
mov
sub
mov
ljmp
mov
jp
pusha
loope
sub
dec
push
ss
sti
jmp
mov
or
int3
clc
std
xchg
call
call
in
and
into
push
jg
xor
call
call
pushl
or
inc
inc
imul
adcb
outsb
and
and
and
and
and
and
and
and
std
inc
jne
mov
loop
test
call
call
xor
shrl
cmpsl
inc
std
add
add
push
and
repz
mov
sub
sub
arpl
push
push
or
enter
mov
mov
call
xor
lds
mov
jge
int
stos
sbb
push
xchg
pop
jo
inc
repnz
outsb
mov
outsl
fidivrl
iret
je
repnz
lcall
mov
aaa
pop
repnz
int
lahf
imul
sbb
int
add
and
and
pushf
popl
lods
js
call
call
call
dec
or
fs
pop
or
out
and
and
and
and
and
and
and
sbb
rol
sub
pop
orl
xor
stc
mov
pop
inc
fimuls
xor
filds
je
call
call
dec
or
js
lret
test
mov
pand
sahf
leave
add
cwtl
push
mov
scas
fucomi
fdivrs
cmc
in
mov
call
fdiv
or
and
add
call
call
call
and
and
call
call
cmpsb
in
pushf
lods
jmp
push
cwtl
and
xchg
pop
inc
inc
xor
call
call
or
or
call
call
shl
pop
push
add
sahf
mov
shlb
inc
add
imul
dec
cmc
pop
lcall
lods
pop
and
and
and
and
and
mov
xchg
scas
insb
and
inc
add
or
cmp
mov
mov
imul
pushf
pop
mov
sub
loop
rcr
out
call
call
clc
test
arpl
adc
gs
faddl
ret
cmpsb
test
bound
pop
outsb
adc
jle
xchg
gs
pop
fdivrl
dec
jbe
fwait
jbe
fimull
insb
mov
jg
adc
aam
movsl
lcall
add
call
call
cmp
fnstsw
mov
pusha
out
add
cmp
incl
mov
out
xor
push
adcb
jnp
xchg
sub
lret
mov
mov
jb
cs
cli
js
mov
inc
gs
xchg
sbb
mov
sbb
push
dec
pushf
insb
or
call
call
leave
and
adcb
jo
pop
mov
and
push
testb
jne
push
das
add
mov
leave
push
cmpsl
neg
push
mov
mov
das
jae
call
call
js
into
dec
fiadds
call
dec
mov
adc
fdivrs
cmp
mov
dec
mov
sub
in
call
call
call
call
dec
and
and
and
and
and
out
out
cmpb
mov
cld
jno
ret
xchg
mov
xchg
add
jae
adc
sbbb
rol
pushf
push
in
imul
call
call
push
lret
call
call
call
mov
aaa
es
or
imul
movsl
pop
cmp
call
call
aaa
pop
mov
xor
aaa
mov
xor
subl
fldcw
jae
lret
lahf
inc
mov
mov
je
fwait
add
in
cld
imul
in
mov
idivb
addb
cli
xchg
inc
jns
pop
and
push
cmpsb
cltd
daa
adc
call
call
lods
mov
inc
sahf
adc
inc
inc
and
popa
add
and
daa
add
cld
push
hlt
push
lret
cmc
cmp
in
mov
lcall
push
pusha
and
mov
scas
cld
addl
call
call
call
call
call
in
hlt
xchg
pop
sub
jge
ret
add
popf
jle
xchg
les
xchg
jp
enter
daa
cwtl
fsubl
cmp
sub
or
cmpsb
repnz
js
or
push
jg
lea
push
mov
lds
adc
call
call
call
sub
das
iret
cwtl
mov
push
xor
call
call
call
sahf
pop
jecxz
adc
scas
fildll
inc
inc
in
mov
out
adc
popa
in
xlat
cmp
popf
add
inc
jmp
and
and
and
and
and
jg
ret
gs
dec
das
xchg
call
call
jbe
loopne
mov
leave
in
call
stos
enter
call
call
xchg
iret
imul
xchg
pop
mov
push
sbb
lods
daa
and
add
dec
sti
sbb
imul
sub
insb
mov
xchg
sbb
and
and
and
inc
mov
stos
daa
aad
jne
sbb
outsb
add
call
les
data16
daa
push
xor
add
cld
sub
mov
push
lds
or
call
call
pop
sub
stos
cltd
xchg
sub
insl
fnstenv
mov
out
loope
sub
in
lret
inc
inc
cwtl
pop
mov
sub
and
and
and
and
and
movl
xchg
leave
or
call
jb
dec
sbb
lds
and
and
and
and
and
and
adc
cmp
clc
test
std
std
push
pop
lea
sbb
into
or
out
cmp
in
dec
push
dec
xlat
and
mov
xchg
or
pop
lock
adc
into
int3
call
call
mov
inc
and
mov
sub
popa
pop
jnp
jg
add
lock
push
cmp
adc
ds
ljmp
call
push
divb
xchg
in
xchg
and
and
and
and
and
les
repz
cli
cmp
gs
cmc
fdivr
call
mov
test
out
ss
xchg
out
mov
sbb
cmp
cli
sub
call
call
data16
popf
jne
jae
call
js
stos
push
add
pop
lea
inc
stos
mov
mov
orl
loope
test
movsl
xchg
test
int3
dec
daa
rcll
cmp
add
jmp
mov
ss
mov
mov
mov
call
sbb
movsb
mov
dec
into
ss
fwait
mov
mov
or
pop
cmp
mov
movsl
xchg
cli
imul
movsl
sbb
mov
xor
or
jmp
rcl
adc
mull
and
and
and
and
and
and
sub
int
and
push
addr16
js
push
push
mov
repz
call
call
call
call
cmp
pop
or
push
sbb
sub
stc
test
cmpl
mov
mov
out
pop
in
gs
pushf
out
int
lods
sar
bnd
movd
adcb
call
call
call
stos
jne
xlat
jmp
jp
xor
in
push
jns
inc
dec
inc
cmc
dec
push
cmp
add
ja
rorl
addr16
mov
mov
sub
xor
mov
call
call
call
or
pop
add
loope
or
mov
in
loope
mov
sub
xchg
inc
in
out
call
xor
sbb
int3
inc
xor
and
jp
and
movsb
dec
jbe
sbb
adc
addl
cli
or
add
add
call
call
ret
jo
sahf
ss
rcll
dec
xchg
pusha
cltd
in
test
jae
call
call
call
mov
fldt
mov
xchg
pop
push
or
ss
dec
leave
in
add
cmp
call
call
imull
mov
popa
xchg
add
dec
jo
jns
ss
xlat
repz
mov
jae
mov
cmpsb
cmc
jnp
call
in
mov
mov
sti
inc
divl
or
call
call
call
fadds
in
push
xchg
mov
call
call
add
push
shlb
mov
jb
adc
mov
insb
adc
ret
call
cmp
out
mov
xchg
call
call
mov
cmpsb
pop
loopw
lea
and
and
and
and
and
mov
jle
adcb
call
call
call
inc
call
mov
mov
mov
out
mov
arpl
hlt
xchg
mov
jg
sahf
mov
bound
fst
imul
xchg
push
jae
mov
sbb
lods
call
call
or
and
and
push
ret
and
stos
sub
out
mov
fsubs
jge
push
mov
sti
sbb
lcall
add
jbe
call
call
call
mov
shll
inc
addl
mov
call
call
popf
cwtl
cltd
inc
sub
xchg
mov
idiv
add
orb
pop
incb
pop
jl
call
call
insl
lahf
push
jne
pop
xor
mov
stos
add
jb
add
mov
or
xor
adc
das
cmc
jl
repnz
dec
stos
or
and
and
and
and
and
and
jb
and
cmp
xchg
push
mov
call
call
imul
call
call
mov
call
es
sub
mov
cmc
std
call
call
call
add
mov
insb
iret
or
fsubl
or
clc
addr16
jo
lcall
repz
call
call
call
lcall
outsb
call
call
or
lahf
out
loopne
dec
addb
aad
subl
ja
cmc
js
mov
mov
out
lret
and
mov
jbe
cltd
mov
loope
hlt
lock
das
popa
push
dec
push
sti
adc
cli
cmp
call
call
call
insb
cmp
rep
push
movsb
inc
test
fsubr
mov
inc
mov
jle
cmp
ss
stos
sbb
pushf
repnz
push
push
inc
jno
lods
cmp
jle
and
rol
call
call
data16
clc
nop
push
adc
call
call
dec
push
aas
aaa
scas
jbe
cli
mov
add
sbb
call
call
add
orb
sarb
xor
test
fs
mov
and
xchg
and
jp
test
in
fwait
and
repz
cmc
aad
inc
jmp
sub
shll
dec
testl
hlt
mov
xorl
call
call
fdivrl
int3
not
or
mov
push
sub
std
cmp
push
loope
ss
sbb
inc
call
call
rcrb
outsl
cmp
inc
push
inc
scas
les
les
mov
gs
and
push
jl
or
and
and
and
and
jmp
inc
ror
mov
stos
pop
cmp
adc
addr16
into
cmp
jmp
scas
mov
cmp
jl
cmp
push
jbe
and
sbb
push
xchg
cmp
fs
inc
hlt
push
call
call
cwtl
daa
push
mov
sarb
fcmovb
call
call
call
leave
cmc
mov
inc
pop
test
pop
call
call
call
xchg
xchg
out
pop
xchg
lods
xor
jo
push
mov
adc
mov
jns
push
push
add
out
sub
or
nop
add
call
call
aas
push
cmp
push
test
test
push
inc
push
test
add
push
ljmp
adc
mov
rorl
pop
mov
sbb
sub
cmpsl
fdivrl
inc
iret
sub
push
dec
popf
test
jno
xor
in
cli
cwtl
mov
jle
call
call
mov
mov
jl
or
nop
insb
ret
push
pop
js
lcall
and
mov
call
call
call
pushf
or
and
and
and
and
and
and
loop
test
into
sbb
and
push
pop
scas
or
and
ljmp
sbb
mov
lcall
push
lcall
mov
ljmp
outsl
adc
dec
add
call
call
call
mov
call
aas
je
add
call
sbb
mov
data16
push
lea
mov
add
cltd
call
xorl
jnp
lds
icebp
std
out
inc
call
call
call
ja
xchg
mov
cltd
cmpsb
add
dec
subl
sarl
loop
push
add
shll
repnz
xchg
dec
jae
ss
mov
or
cmp
loopne
shrb
dec
call
call
call
call
call
ficoms
push
fdivs
pop
andl
add
out
inc
das
dec
inc
aaa
into
xchg
sub
sub
dec
jle
jge
and
call
call
inc
mov
inc
stc
ret
xlat
push
sub
xchg
sbb
dec
push
loop
rep
outsb
sti
repnz
pop
push
les
rorl
cmp
jbe
call
call
add
jo,pt
ds
cltd
mov
data16
call
call
call
ss
adc
and
and
and
and
sbb
add
call
call
pusha
jne
pop
lret
adc
in
daa
fimuls
cli
loope
add
mov
pushf
inc
sbb
cmp
jbe
icebp
scas
shrb
stos
push
call
call
xchg
mov
movsb
adc
inc
jp
out
xchg
dec
mov
push
or
push
pusha
sub
jl
sub
jle
pusha
es
or
lret
fiaddl
data16
jp
jmp
lcall
call
call
pop
pop
adc
xor
lcall
push
je
mov
dec
shll
mov
fnstenv
jge
sbbl
push
lahf
jg
je
mov
pop
cmpl
lock
and
add
fsubr
call
call
jle
xchg
cmp
inc
jno
add
call
call
call
mov
mov
cli
sbb
ljmp
mov
jl
jge
xchg
mov
fmulp
jns
call
call
call
add
jbe
fwait
icebp
lret
xchg
ret
lea
leave
fisubs
xchg
lods
divb
test
test
call
iret
cmpsl
mov
and
and
and
and
and
mul
cmpsb
int
or
jl
pop
or
mov
xor
inc
adc
call
call
call
ss
out
adc
repz
lsl
loop
insb
xchg
inc
addr16
loopne
sbb
sub
fsubrs
cmp
xchg
lcall
mov
mov
jecxz
mov
call
call
add
test
sub
mov
mov
es
mov
insl
imul
push
xchg
je
xlat
ljmp
ja
xor
orb
jg
sbb
and
and
and
and
push
lods
sub
call
call
fdivl
jnp
nop
adcl
add
jp
add
mov
out
lahf
das
leave
fisubs
adc
sbb
xor
cmpsb
inc
add
in
add
inc
xor
shll
call
call
out
push
push
cmpsb
insl
xchg
push
cwtl
seto
fisttpll
inc
pop
sbb
mov
dec
push
fwait
insl
testl
xchg
iret
arpl
lea
dec
dec
xchg
mov
adc
sub
mov
pop
pop
add
adc
sbbl
call
call
pop
sahf
inc
lock
rcll
push
sub
subb
xor
dec
pop
shlb
imul
adc
call
ds
call
call
cld
mov
sub
pop
jle
xor
push
mov
cmp
add
dec
inc
repnz
sub
bound
jl
jne
rorb
int3
fisubrs
sbb
hlt
addr16
mov
cmp
ja
xor
cmp
mov
enter
mov
mov
adcb
call
call
and
adc
add
test
mov
ja
adc
fwait
int3
push
push
jg
daa
add
aas
pop
xor
cmp
inc
cli
jmp
stos
add
and
and
and
and
and
and
and
and
xchg
sbb
inc
lcall
cld
inc
mov
dec
jle
mov
or
xchg
sub
and
int
sub
icebp
pusha
cmpsb
fdivrl
pop
mov
loope
jge
mov
call
call
call
cmpsb
inc
imul
push
mov
xchg
pop
out
xor
out
iret
xchg
gs
loopne
sbb
fwait
inc
pusha
pop
call
call
lods
bound
mov
jae
pop
faddl
mov
and
dec
pop
xorb
mov
imul
hlt
xor
xchg
call
call
stos
mov
call
push
push
insb
fldcw
pop
add
and
and
and
and
out
fbld
inc
and
stos
imul
mov
or
dec
cmpsb
mov
mov
xchg
mov
xchg
add
cmp
pop
imul
mov
arpl
push
popa
js
sbb
call
call
call
clc
negb
iret
mov
xchg
mov
inc
testl
and
and
and
and
and
or
cmpsb
lods
pop
jnp
dec
adc
lea
and
push
lea
fldcw
xlat
bound
hlt
pop
push
mov
cmpsl
dec
popa
inc
pop
dec
dec
jne
cld
movsl
outsl
and
mov
fcoml
call
fldcw
lds
call
test
adc
jns
outsb
aam
lods
xor
mov
xchg
jmp
sub
imul
pop
call
call
call
add
dec
sahf
sbb
sub
mov
mov
stos
rolb
inc
aad
jae
jge
push
jp
movl
sub
or
inc
pop
jmp
and
out
dec
inc
sub
xchg
xchg
lea
xchg
scas
mov
movsb
mov
jns
mov
cmp
shll
gs
call
call
call
fistl
and
out
fdivs
mov
test
addr16
leave
addl
or
sub
jb
push
xchg
push
sub
mov
call
call
test
movsb
push
mov
sub
add
push
dec
cmp
clc
push
jno
sbb
test
add
notb
orb
mov
pop
call
call
call
ds
push
shl
dec
out
sti
cmp
test
int
out
jbe
mov
mov
movsb
adc
data16
adc
call
call
test
popf
mov
lds
and
and
and
and
and
and
xchg
loop
xor
mov
shrl
loopne
sbb
adc
jb
fsubrs
das
adc
sbb
stos
int
mov
lahf
shll
shlb
sti
xor
sub
call
call
call
push
mov
cmp
je
shr
mov
jmp
pusha
sub
fstpt
setbe
add
into
rcrb
and
and
and
and
and
cltd
cmp
call
call
loopne
inc
fldcw
movb
push
adc
aam
push
insl
adc
ret
jae
xchg
push
dec
xor
int
lcall
in
adc
fisubrs
xacquire
and
jg
cltd
ret
clc
sub
adc
jbe
sbb
jp
call
call
call
mov
or
or
mov
call
call
xlat
or
jl
stos
in
cmpsb
jge
jae
sbb
fbstp
jne
xor
pop
xor
cmpb
and
outsl
inc
hlt
imul
jo
ret
or
jbe
stc
jl
andb
and
and
and
and
and
bound
test
je
cwtl
push
sub
in
es
leave
repnz
jbe
test
and
movl
in
pop
jno
aaa
push
mov
inc
add
and
inc
adc
lods
mov
call
call
gs
or
call
call
call
call
call
and
and
and
scas
popf
pop
jge
dec
mov
pop
and
dec
mov
bound
idivl
xlat
cs
mov
out
cmp
or
imul
xlat
inc
dec
subb
xchg
and
sub
jp
xor
call
call
fisubrs
addl
or
sti
pop
jne
jns
sbb
fdivl
mov
pandn
xor
cmpsl
dec
cltd
pop
jg
aaa
es
pop
jle
add
pop
outsb
pop
jp
movntq
subl
movsb
mov
outsl
clc
out
add
ret
mov
call
call
push
sbb
jle
jno
pop
dec
mov
pop
jnp
sub
push
fildll
call
call
call
or
or
push
in
movsb
cld
push
add
push
mov
fisubrs
jae
call
call
xor
cmc
jae
inc
lret
call
call
xchg
pop
cmp
add
outsl
xchg
pop
jns
out
jo
fsubl
cmpsl
sahf
dec
movsb
cmpsb
push
sub
dec
je
push
lcall
lea
popf
inc
movb
xchg
clc
add
push
ss
clc
dec
lcall
call
push
lods
xchg
dec
arpl
inc
fld1
call
call
sbb
cmp
and
and
and
and
and
daa
push
rolb
fwait
cmp
mov
or
cwtl
cmp
call
call
pop
push
sub
push
pop
es
cmp
ljmp
dec
xor
call
call
xor
xor
sub
js
daa
imul
mov
sbb
movsb
mov
dec
jmp
push
pop
pop
fwait
add
pop
clc
push
add
loopne
jg
push
mov
push
jg
xor
call
pushf
pop
xor
or
subb
or
xor
jp
inc
fs
sub
aas
js
subl
jae
cltd
inc
jecxz
hlt
sbb
jecxz
mov
mov
std
cmp
or
out
mov
call
call
call
mul
mov
mov
or
ror
push
in
leave
and
xchg
inc
repz
mov
flds
xchg
push
sub
mov
xlat
pop
das
push
dec
out
fsubs
stos
int
xchg
and
mov
add
mov
pop
call
call
call
call
add
jne
mov
call
call
call
sti
fld
jne
and
adc
and
ljmp
daa
negb
addb
sbb
pop
jno
or
lds
call
call
jno,pt
pop
push
cmp
rorb
fcomip
inc
xor
pop
sbb
and
and
and
and
and
and
and
and
adc
jno
outsl
lods
or
gs
mov
lea
push
sbb
jp,pt
sti
mov
mov
call
call
mov
xor
call
call
movsb
push
jnp
adc
stc
push
sbb
mov
in
leave
or
xlat
cli
rcr
movsb
insb
mov
push
add
repnz
loop
fimuls
push
jge
clc
pusha
mov
mov
adc
into
lea
cltd
daa
pusha
insb
pop
xor
movsl
adc
call
call
ja
push
int3
fs
sarb
test
icebp
popa
jmp
call
call
call
cmp
pop
lods
addr16
dec
cld
or
daa
jl
js
out
xchg
stos
sbb
das
and
and
and
and
and
and
lret
xor
xorb
and
out
mov
mov
sub
call
call
sub
xchg
icebp
adc
call
call
cmp
cmp
testl
sub
sahf
fisttps
push
cmpsl
sbb
and
mov
inc
fwait
in
dec
in
out
mov
xor
scas
and
mov
call
call
lea
and
and
and
and
xor
call
call
pushf
imul
out
lods
icebp
mov
push
ss
mov
popfw
lock
lds
add
sar
xor
in
call
call
cmp
push
add
inc
bound
repz
push
and
sub
xlat
repz
add
lds
clc
lea
pop
inc
xchg
out
sbb
mov
mov
jle
arpl
xlat
xchg
je
int3
xor
in
sbb
std
pop
cld
popa
add
in
cmp
push
pushf
cmp
call
call
inc
ret
imul
aam
adc
iret
addb
pop
xchg
jge
adc
pop
and
lret
into
push
pop
into
mov
sbb
fstpt
enter
mov
mov
call
call
lss
pop
leave
lahf
add
arpl
push
jno
adc
out
insb
push
popf
add
movsl
test
sub
sbb
push
stc
cli
mov
cmpsb
xor
xchg
in
call
call
call
out
jmp
push
adc
add
or
push
or
lods
sub
clc
in
sbb
aaa
sbb
pop
and
mov
push
test
test
adc
shrb
dec
cs
xor
fldt
sarb
call
call
and
and
and
and
call
frstor
pop
bound
mov
insl
and
fidivl
push
dec
pop
popf
inc
jecxz
cmp
xor
mov
outsb
andb
adc
call
call
popw
xchg
sbb
test
call
fimull
mov
fwait
xor
ret
push
outsb
jae
int
jne
mov
mov
loopne
sbb
dec
insl
insl
repz
jge
xchg
jno
fcomp
hlt
cmc
rolb
test
fsubrl
test
pop
mov
orl
call
call
push
sub
mov
movsl
loope
mov
adc
mov
inc
jb
adc
xor
test
out
add
inc
fimull
sub
jo
jbe
inc
jno
imul
call
jbe
pop
mov
lods
or
bound
adc
pop
cs
xchg
int3
call
call
mov
adc
test
adc
mov
call
call
dec
loopne
mov
addr16
adc
ret
in
bound
adc
das
ficomps
sbbl
stc
call
call
data16
adc
mov
or
popf
je
gs
sbb
push
dec
es
in
push
imul
call
call
jp
call
call
imul
aas
add
sub
pusha
push
lods
je
xor
dec
insb
xbegin
inc
cmp
add
push
mov
jno
inc
inc
sbb
je
mov
and
and
and
and
jp
ds
test
xlat
add
call
call
mov
mov
sti
inc
xchg
mov
and
and
and
and
and
and
and
and
daa
int3
nop
mov
fcompl
pop
jnp
and
xor
push
adc
in
fiadds
in
mov
xchg
add
std
in
out
mov
pop
dec
gs
dec
test
dec
ss
lods
xchg
aad
fdiv
imul
test
in
mov
call
call
cmpsl
dec
add
inc
sub
adc
out
jmp
sub
lock
mov
testb
lret
lcall
xchg
jae
outsl
adcb
cs
inc
inc
shll
mov
push
test
or
sub
mov
mov
mov
call
call
call
mov
add
mov
iret
dec
outsb
adc
and
call
call
call
xorl
fadds
adc
in
jp
mov
addr16
into
mov
dec
into
cwtl
or
pushf
xchg
inc
inc
adc
int3
shrl
fs
inc
sbbl
sbb
xchg
xchg
cld
add
das
mov
into
dec
out
jb
sub
call
call
enter
pusha
xor
push
cmpsl
xchg
movsb
sub
int
sti
mov
imul
jae
cmc
mov
movsb
fistps
test
arpl
fidivrl
call
call
enter
sub
xor
xor
ss
mov
sub
adc
test
or
pop
cmp
add
xor
js
pop
and
iret
sbb
stos
call
call
call
arpl
pop
inc
xchg
and
and
and
and
and
and
jg
stos
push
mov
loopne
dec
cmpsl
sti
insb
adc
mov
sub
dec
outsb
das
ret
mov
mov
mov
cmpsb
rorl
sub
mov
push
sub
insl
pop
jmp
mov
test
pop
fsubr
xor
imul
call
call
imul
lods
push
and
sbbl
inc
insl
call
pop
scas
mov
in
mov
test
push
outsl
out
les
jns
sbbb
fiaddl
xchg
fnsetpm(287
inc
leave
adc
mov
call
call
push
movsb
fnsave
call
aam
into
outsl
lcall
nop
push
push
rcr
or
call
scas
loopne
into
ret
leave
daa
mov
sub
data16
icebp
mov
pushf
mov
ror
addr16
call
call
sbb
call
call
pop
adc
bound
cmp
jle
dec
mov
ss
arpl
push
mov
sbb
lret
xchg
push
pop
pop
jge
jg
xor
popa
push
jecxz
aas
push
or
arpl
push
mov
out
xchg
lock
call
mov
mov
mov
loope
push
scas
outsb
mov
imul
shrb
and
mov
and
and
and
inc
xchg
aaa
jae
aam
jns
mov
cmp
out
cmp
cmp
and
and
and
and
and
arpl
call
call
inc
mov
sahf
cmpsb
bt
jp
ja
mov
faddp
in
icebp
xchg
push
daa
sbb
rep
mov
mov
test
insl
inc
in
int
mov
mov
mov
dec
sbb
icebp
mov
xor
icebp
aad
sbb
jno
xchg
lods
idivb
call
call
aam
mov
mov
cmp
mov
adc
and
and
and
and
and
and
and
add
cltd
shll
scas
fwait
jecxz
insb
jge
jbe
cmc
sbb
dec
or
push
in
pop
xchg
sbb
call
call
call
icebp
test
sbb
shll
lahf
dec
dec
sub
sbb
testl
xor
lods
sub
ret
out
mov
mov
push
stc
mov
add
pop
fistpll
add
roll
ja
aad
leave
scas
dec
xchg
nop
insl
ror
sbb
cltd
popa
mov
call
call
call
sub
add
sub
push
lock
scas
pop
jmp
sbb
and
or
loope
mov
popa
pop
das
inc
aaa
push
or
in
and
int
shrl
xchg
stos
ja
mov
in
call
call
push
adc
call
call
push
fs
push
cmp
mov
push
push
fistpl
in
push
jae
mov
inc
ja
sbb
and
and
and
and
and
and
sub
inc
dec
insl
push
mov
int3
dec
pop
pop
std
loopne
jno
jae
nop
jbe
data16
mov
jmp
sbbb
push
pop
in
loopne
call
call
call
mov
or
sbb
call
call
call
mov
or
xchg
pop
mov
int
pop
mov
imul
clc
subb
ret
inc
push
sub
pop
cmp
pop
call
sbb
adc
pop
mov
and
and
and
and
and
movsb
adc
mov
inc
shlb
mov
xor
call
call
sub
xor
call
call
jae
dec
push
pusha
sub
add
jo
and
and
and
and
and
and
and
out
outsb
lds
or
mov
mov
or
xchg
sbb
es
ss
call
call
xchg
pusha
sub
js
add
pop
movsl
adc
sbb
mov
dec
cmpsl
pop
insb
xchg
xor
mov
xchg
outsb
into
mov
imul
mov
jo
xor
call
call
dec
in
or
pop
insb
ja
mov
and
mov
sub
dec
cmp
xor
adc
shl
inc
mov
outsl
cmp
gs
inc
call
call
and
and
and
and
and
and
and
and
and
push
add
aad
sbb
jl
data16
pop
jmp
into
add
push
shlb
inc
jl
lods
xchg
xlat
jo
fcmove
mov
insb
testl
push
and
call
call
mov
mov
and
adc
inc
and
rcrb
gs
iret
pop
insb
rcrl
or
mov
add
flds
push
icebp
push
ret
data16
pop
jbe
lds
mov
cmp
into
dec
pop
daa
sub
dec
movsb
loop
sarl
adc
rorl
idivl
sub
call
call
out
dec
test
test
sub
and
movsl
push
or
fldcw
jae
aam
imul
pop
lods
xchg
inc
xlat
mov
arpl
pop
es
xlat
hlt
repz
call
call
inc
add
jbe
sub
mov
call
xor
mov
push
sbb
popa
xchg
imul
sbb
push
bound
sub
and
dec
fs
xchg
fs
add
out
mov
inc
push
xor
pop
sub
jbe
ror
outsl
pop
and
and
and
and
and
and
and
xor
test
dec
sub
call
call
call
add
lcall
inc
push
cli
inc
jo
leave
adc
pop
inc
jne
xlat
pushf
pop
mov
sub
out
out
cmpsb
jle
cltd
stos
js
ljmp
push
sbb
call
call
call
cmpsl
xchg
adc
mov
ret
lcall
jbe
jecxz
rcll
jp
call
call
call
fidivrs
mov
push
cmp
jo
push
dec
mov
adc
movsb
mov
sbb
test
arpl
jl
dec
addr16
push
sbb
jp
dec
adcb
loop
add
mov
aas
and
call
call
call
divl
inc
stc
jae
pop
call
call
call
cmpsl
nop
fnstsw
mov
add
mov
jge
pop
stos
ja
xor
adc
jg
or
ss
jg
push
or
cmpl
cmp
cld
imul
and
or
xor
popa
mov
and
in
xor
call
jo
adcb
xchg
fs
aam
cmpsl
jl
outsb
sbb
mov
or
pop
icebp
leave
xchg
fidivrl
sbb
lar
mov
inc
fnstenv
fdivrl
cmp
shlb
mov
call
call
call
xchg
inc
mov
cmp
adc
and
and
and
and
and
and
and
test
loopne
dec
add
jecxz
addr16
mov
push
lret
or
ljmp
cmp
inc
lcall
call
call
sbb
test
jmp
adc
orb
int
pop
daa
call
lahf
sub
mov
in
pop
in
je
sub
dec
movsb
push
imul
call
call
xchg
imul
call
call
call
cmp
jne
aad
adc
shrl
pusha
and
pop
daa
loopne
xchg
inc
mov
add
pop
jns
je
jg
imul
push
sub
mov
sbbb
and
int3
mov
je
shrb
movsb
in
cs
dec
or
jbe
nop
imul
int
mov
call
call
and
mov
aaa
mov
mov
or
jg
inc
in
jo
xor
xchg
insl
dec
int3
jne
mov
int3
ljmp
mov
repz
push
push
adc
push
call
call
bnd
pop
xor
xor
and
jg
mov
push
enter
icebp
cmp
pop
jg
xor
cmc
cmp
xor
loopne
aaa
and
in
add
lds
inc
in
and
jg
dec
mov
orl
and
call
call
mov
gs
jge
sar
aam
test
mov
xchg
cmp
adc
add
and
and
and
ds
add
or
sub
lock
pinsrw
dec
pusha
jo
mov
dec
fildl
add
sub
filds
xor
mov
in
sahf
callw
call
call
call
sbb
pusha
leave
daa
mov
imul
lret
add
xchg
inc
je
inc
jle
movsb
mov
call
dec
mov
push
into
shlb
call
call
mov
por
adc
jns
dec
imul
stc
imul
adc
jae
test
push
cmpsl
int
call
call
cmp
sti
and
ja
shrb
xchg
jns
sub
sbb
add
inc
add
hlt
call
call
mov
icebp
mov
insl
shll
push
mov
xchg
orl
ds
les
inc
mov
xor
shll
jo
aad
popf
xor
mov
or
call
call
call
in
test
fisttpl
add
jb
xchg
inc
stos
in
jne
jecxz
inc
mov
jo
pop
aaa
mov
add
or
or
lods
adc
loop
or
mov
add
sub
push
jne
pop
repz
test
call
call
jmp
lcall
stos
pop
jg
rorb
xorl
cmp
aad
push
dec
adc
call
call
call
mov
sbb
ja
inc
sub
sub
and
call
call
idivb
xchg
outsb
mov
bound
test
je
xor
sub
sub
shrl
jl
data16
int3
lds
cmp
add
sbb
adc
ss
roll
pop
jle
call
das
cmp
mov
and
and
and
and
and
and
inc
pop
aad
pop
cmp
and
arpl
inc
cmp
neg
inc
sbb
sub
aaa
mov
les
lret
insb
pop
test
mov
add
xor
cwtl
bound
in
adc
or
mov
call
call
pop
scas
fidivrl
dec
mov
dec
loope
jl
stos
jno
fmulp
and
mov
push
cwtl
js
outsb
add
inc
insb
mov
pop
jl
nop
popa
and
and
or
adc
jnp
inc
int
pop
xor
jg
xchg
outsb
jmp
call
idivb
fisttpl
add
dec
das
cmp
and
and
and
and
and
and
hlt
pop
add
pop
scas
fs
xchg
add
insb
mov
orl
clc
call
call
call
cmp
inc
mov
call
call
add
in
filds
cmp
cmp
adc
xor
jg
dec
mov
subl
mov
push
cmp
icebp
mov
dec
rcr
sub
cmp
add
fnstenv
add
gs
inc
aaa
xor
push
pop
mov
mov
imul
push
pop
sub
cmp
mov
imul
call
call
call
sbb
fld
adc
scas
hlt
insl
push
mov
bound
call
call
out
mov
adc
lds
pop
mov
jne
mov
scas
pop
and
into
cmp
lcall
push
in
inc
outsb
mov
mov
cmp
push
jb
xorb
stos
mov
jcxz
lds
lret
lret
or
push
or
cli
xlat
call
call
call
imul
out
pop
and
call
call
call
jle
lcall
and
lcall
xchg
push
cmp
add
faddl
lcall
sti
mov
jno
out
test
ja
mov
andl
and
dec
lret
dec
push
dec
or
sub
bound
jno
lret
lods
jbe
das
add
call
call
ud2
jae
cmp
jg
jl
aaa
adcl
pusha
jo
jg
dec
mov
lods
ja
pop
pop
and
add
push
nop
lea
cmp
inc
sub
in
cmp
pop
mov
cmp
fldcw
and
push
sbb
cmp
pop
lods
adc
and
subl
cwtl
call
call
call
pop
movsb
hlt
test
cmp
pop
add
dec
xchg
insb
cli
xchg
call
call
call
call
call
call
cmp
inc
xchg
call
call
rolb
iret
and
sub
and
push
cmp
dec
cmp
push
xlat
call
call
call
pop
test
jb
adc
stos
clc
adc
jg
movsb
mov
cmp
nop
cmp
push
ds
xor
push
or
fabs
dec
addr16
mov
in
fistps
into
pop
movsb
add
icebp
stc
adc
adc
mov
or
push
cmp
call
call
push
or
jne
mov
inc
pop
fstpt
mov
xlat
pop
jp
and
and
and
sbb
mov
add
out
out
orl
mov
adc
and
jns
mov
dec
mov
outsb
and
lahf
popa
testl
inc
jb
cmp
pop
stos
mov
sub
call
call
call
push
frstor
adc
mov
sbb
dec
cmpsb
xor
popa
pop
sub
add
mov
dec
push
or
fistps
cwtl
pop
lcall
push
dec
stos
orb
mov
sbb
and
ret
dec
jbe
push
dec
cmc
call
call
or
dec
loopne
in
mov
sbb
lcall
cmpsl
sub
xchg
pop
dec
popa
sti
icebp
test
xchg
outsl
add
pop
call
call
call
or
int3
fiadds
outsl
sti
imul
lds
and
ss
lds
les
out
shrl
add
mov
call
call
call
popf
idivl
mov
push
das
add
data16
pop
add
cmpsl
jno
hlt
data16
pop
leave
lds
add
mov
inc
rclb
pop
cs
cmpsl
pop
jecxz
pop
add
test
inc
div
or
sub
push
or
idivb
call
call
cmp
sub
inc
icebp
sub
inc
cs
pop
cmp
loope
sub
arpl
mov
mov
pop
call
call
ds
pop
jecxz
cmc
jl
fdivs
pop
mov
push
or
mov
cmp
sub
xor
popa
mov
inc
clc
mov
outsb
cmp
shr
call
call
call
adc
xor
movl
dec
inc
jo
into
mov
and
and
and
and
insl
sbb
add
fabs
ds
rol
dec
or
shrl
lods
sbb
jbe
fnstcw
mov
dec
movsb
add
jmp
idivl
mov
pop
call
call
pop
into
repz
jmp
js
lods
inc
daa
xor
xchg
mov
orb
xchg
xchg
pop
lds
mov
out
jge
lret
or
mov
fildll
je
sbb
sarl
jns
mov
inc
mov
pop
push
cmp
call
call
call
outsl
xchg
pop
out
inc
cmp
cmp
lods
or
dec
cld
stos
pop
mov
cmpsb
sahf
imul
jmp
mov
mov
dec
or
push
xchg
pop
cli
xchg
inc
data16
push
and
into
popf
fiadds
call
call
push
xor
movsl
jo
filds
adc
or
sbb
dec
jae
xchg
adc
das
filds
scas
jle
call
call
ja
xor
sbb
test
sub
ja
sub
sbb
cmp
ror
jbe
movsl
rep
sahf
mov
adc
mov
int
dec
jb
add
adc
call
call
call
adc
push
enter
mull
cld
jns
scas
outsb
sbb
fnstsw
lods
ss
call
call
call
call
clc
cmp
ss
std
mov
xor
popa
call
call
call
and
add
outsb
mov
enter
daa
xor
popa
dec
jae
push
pop
add
call
cmpsl
and
and
and
and
and
nop
dec
jo
mov
daa
mov
xchg
pop
mov
inc
clc
jae
cmp
cmp
jb
xlat
in
stos
stos
lods
jg
lahf
or
xorl
lret
dec
cli
xor
push
pop
je
ret
inc
jg
jns
add
and
xchg
sahf
push
jns
cmp
xchg
dec
call
call
sub
push
rcll
pop
call
call
call
call
pop
mov
sub
in
push
bound
inc
mov
sbb
cmp
jbe
outsb
pop
mov
enter
ja
pop
call
and
jo
call
fistl
jb
incb
or
xchg
xor
in
inc
fs
push
jge
dec
shrl
xor
sbbb
and
sbb
sbb
push
jnp
insb
cmp
xor
cs
and
pushl
inc
sti
jge
jno
popa
mov
cmp
sub
rolb
mov
dec
inc
outsb
ss
call
dec
sbb
xchg
sbb
xor
add
push
std
xor
mov
pusha
leave
xor
das
cmp
push
movups
call
call
sub
filds
outsb
xor
adc
mov
cmp
cmp
dec
rcll
fiaddl
adc
cmpsb
in
pop
dec
mov
out
imull
xchg
xor
mov
push
jnp
sbb
bnd
cwtl
orb
mov
push
mov
test
call
call
fidivl
cmp
cmp
jb
pop
mov
fimull
out
dec
adc
addr16
in
pop
lret
js
xor
and
fs
pop
pop
and
xchg
icebp
clc
jl
mov
adc
mov
call
call
jb
cmp
mov
pop
outsl
adc
in
inc
bound
cld
jl
jbe
sub
inc
scas
jg
and
and
and
and
and
and
cmp
and
in
xor
jge
xor
into
nop
pop
mov
call
call
call
in
mov
mov
imul
xchg
pop
frstor
jl
call
call
bnd
xor
xor
fs
cmp
inc
lea
pop
mov
adc
cmp
xor
stc
cwtl
push
dec
mov
xor
iret
mov
popa
mov
pop
or
xor
or
mov
dec
mov
call
call
or
fstps
xor
sub
and
sub
movsb
jno
jge
cmp
dec
dec
dec
jb
xchg
mov
stos
mov
push
jge
fiaddl
mov
jle
aam
popa
sbb
adc
mov
inc
imull
cwtl
push
add
rorb
push
call
call
cmpsb
movl
or
mov
jg
and
xor
pop
or
arpl
stos
leave
xchg
pop
rclb
add
icebp
cmp
xor
das
ret
and
es
and
adc
and
and
and
add
push
popf
insb
mov
js
sub
mov
outsl
es
dec
sarl
dec
xor
bound
shlb
nop
aaa
push
mov
dec
imul
cmpsb
pop
push
js
dec
fisttps
adc
mov
call
call
jl
push
daa
cmp
add
cmp
insl
fwait
imul
call
imul
pop
lret
or
cmp
xchg
adc
sub
add
pusha
fwait
jg
mov
stos
into
xlat
xchg
out
mov
adc
imul
dec
xor
lret
or
mov
rcrb
scas
add
dec
in
mov
clc
xlat
loopne
call
call
call
daa
leave
cmp
flds
je
inc
pcmpeqb
pop
call
call
call
sub
xor
mov
pop
mov
hlt
xor
mov
pop
or
pop
xlat
push
ret
call
call
lock
pop
inc
xchg
daa
inc
add
ss
sbb
jne
les
das
cmp
insl
das
mov
insb
and
enter
inc
xchg
jo
sbb
out
pop
loopne
cmp
or
pop
sub
shrb
fisubrl
xor
and
and
and
and
std
aaa
daa
xor
pop
insb
sbb
push
mov
push
call
call
jns
dec
sbb
jle
mov
mov
cmc
cli
out
sti
xchg
and
add
xchg
fisubrs
es
mov
mov
stos
imul
xor
lret
jbe
stos
outsb
push
and
mov
stos
das
mov
add
clc
lds
rcrb
hlt
orl
and
and
push
push
repnz
jb
into
lock
pop
insl
mov
das
dec
mov
sub
call
mov
push
mov
ss
out
movntq
out
jge
xchg
bound
dec
mov
ficompl
or
shrl
pop
in
outsl
mov
sbb
jle
das
mov
mov
mov
call
call
call
pop
add
mov
mov
sbb
out
pop
xchg
cld
sti
stos
in
inc
cmpb
in
jp
or
loope
mov
call
call
call
stos
clc
arpl
adc
adc
pop
setl
sub
fcomps
shll
mov
shlb
adc
sti
dec
mov
cmp
sub
xchg
mov
adc
mov
call
call
sub
jecxz
sbb
jne
test
call
and
push
sbbb
push
xchg
jbe
js
mov
scas
dec
jge
stos
adc
and
and
and
and
and
and
and
jbe
push
loopne
dec
xor
or
xchg
mov
mov
jl
and
jl
call
add
mov
nop
pop
adc
flds
push
adc
and
and
and
and
and
and
in
inc
and
pusha
sub
call
call
call
clc
fs
ret
push
or
enter
daa
pop
roll
rcrl
push
mov
cwtl
std
mov
stc
inc
cmc
mov
pop
out
cld
cmp
sbb
cmpsl
add
push
cmp
jbe
int
rcr
jmp
push
fsubrs
xchg
xchg
mov
call
call
call
adc
repnz
outsl
loop
stc
aam
movsbl
std
nop
sysret
mov
mov
mov
pop
or
rorl
cmp
das
push
daa
rclb
fisubrs
cmc
or
push
inc
and
lahf
shld
xchg
add
in
and
or
push
xchg
call
call
mov
dec
in
dec
sub
fs
enter
call
call
dec
jge
ret
shrb
dec
push
sar
dec
cwtl
repnz
and
stos
std
xor
adc
jne
in
sub
push
xchg
lods
mov
sbb
sar
test
inc
inc
sbb
jns
das
les
mov
sbb
pop
por
loop
sub
mov
pop
mov
call
call
call
jg
dec
lret
das
push
push
out
popa
cld
lret
jp
es
cmpsl
setg
call
call
out
arpl
cmpsl
pop
mov
cmc
push
addb
sub
jp
int
int
insl
mov
push
adc
inc
lods
sahf
cmpsb
mov
fnstcw
sti
hlt
push
call
stos
stc
cmp
adc
and
and
and
cmp
mov
xor
adc
pop
call
call
call
xlat
jo
lds
cmp
mov
leave
dec
mov
fnstsw
repnz
js
cmp
push
dec
add
bound
lret
mov
adc
or
daa
cli
imull
addl
shl
loopne
call
call
call
push
fildl
sub
add
xchg
mov
xorl
mov
cmpsl
adc
shlb
mov
pop
jmp
pop
inc
jp
or
hlt
push
aas
push
jns
test
call
cmp
repz
in
or
jp
fsubl
cli
imul
push
cmpsl
das
mov
cwtl
jle
popa
in
clc
inc
dec
daa
mov
fisttpl
pop
sub
xchg
mov
outsb
lea
inc
push
push
ret
cmp
cld
gs
and
and
and
and
and
add
dec
rcll
xlat
jg
int
sub
mov
jmp
sbb
inc
push
test
mov
push
and
sbb
jb
cmp
pop
cmp
data16
data16
or
xchg
fmull
call
cmp
sbbb
out
je
sub
adc
lret
out
ss
ds
push
js
fnsave
std
aad
or
cmp
imul
jecxz
rclb
mov
jl
ret
push
pop
jo
ret
dec
gs
mov
loopne
or
call
call
push
mov
cld
mov
mov
sub
nop
pop
roll
push
mov
pop
push
popf
inc
lods
pusha
aaa
xchg
cmp
cmpsb
lds
mov
mov
out
dec
jns
adc
dec
mov
dec
and
sbb
loop
daa
push
clc
sub
dec
movsb
shlb
call
call
scas
xchg
mov
sbb
sub
sbb
pop
ja
call
call
call
iret
lods
sbb
inc
sbb
xchg
aam
mov
pop
lcall
lods
call
call
cs
adc
lret
xchg
gs
popa
push
sahf
cmp
adc
or
es
call
call
xlat
inc
test
jo
xchg
jg
sub
dec
mov
flds
out
and
mov
adc
mov
out
fwait
out
push
out
adc
test
xorb
xchg
adc
cmp
mov
clc
inc
push
test
inc
mov
and
and
call
call
ret
out
pop
sub
cmc
inc
jg
aam
ret
pop
pop
int3
and
jb
push
std
or
and
and
and
and
and
and
xchg
push
stc
out
and
mov
jmp
inc
aaa
shlb
dec
xor
and
and
and
and
mov
mov
adc
xchg
sbb
call
call
ja
gs
and
and
and
insl
xchg
or
test
or
loope
pcmpeqd
scas
test
out
pop
cltd
into
dec
push
jp
lret
or
call
call
fcoms
push
push
add
cwtl
lods
or
cmc
sub
call
xor
jg
lea
mov
mov
movsb
sbb
negb
enter
fwait
and
fisubrs
call
call
popf
test
and
mov
jge
push
lds
cmc
push
pop
into
inc
sub
sarb
test
push
inc
decl
imul
call
call
loopne
fwait
aam
pop
jbe
fnstenv
gs
pop
js
xchg
lock
lret
test
pop
mov
and
and
mov
mov
inc
popa
fdivl
ret
cmp
sub
lods
cwtl
and
mov
ja
imul
call
call
sti
cmc
out
push
cld
push
sahf
test
clc
mov
call
call
call
sbb
js
pop
mov
in
scas
fsubrs
sbb
fcmovbe
xor
jp
adc
flds
cmp
mov
jmp
sub
cmc
sbb
adc
rcrl
call
inc
mov
out
sbb
jge
lret
call
std
and
or
and
and
and
and
and
and
and
in
insb
pop
scas
sub
pop
push
addl
call
call
mov
call
call
call
lcall
lret
adc
mov
cmp
pop
pop
pop
in
inc
fmull
nop
pop
dec
xor
movsl
and
inc
aam
cmpsb
or
push
xor
xchg
test
cmpsl
and
pop
aad
shll
call
mov
jecxz
pop
push
sti
sbb
in
lds
idivb
sub
inc
clc
sub
js
push
or
sub
sub
xor
rorb
jp
cmpsb
in
hlt
call
call
outsl
aas
out
out
xor
mov
cmp
jno
mov
rclb
clc
out
cmpl
lea
mov
or
mov
push
pop
stc
push
pop
xchg
cmp
jo
push
fwait
lret
add
jge
push
mov
repz
test
adc
push
call
call
int
lret
js
movsl
fadd
fs
mov
mov
or
mov
iret
test
dec
and
and
fistpll
out
inc
jno
mov
and
push
push
push
mov
call
add
clc
jbe
jle
aaa
jo
mov
fcoml
sub
pop
dec
mov
inc
sbb
cmpsl
xor
scas
addr16
and
and
and
and
mov
lods
mov
fcomps
cmpsl
ja
adcl
pop
call
call
call
pop
ja
sub
sbb
scas
js
xchg
imul
call
call
call
adc
fs
mov
imul
call
call
call
loop
adc
and
in
jge
xchg
subb
xor
mov
jmp
adc
and
push
add
call
call
xlat
xor
mov
pop
or
push
mov
imul
call
movsl
mov
dec
cmpsb
fcmovb
sub
pop
movsb
call
cmp
sub
lds
js
lods
lcall
movsb
insl
pop
adc
lods
xchg
fldl
rcll
repnz
push
sub
in
loope
jp
gs
and
or
in
sahf
push
jle
fsubrl
xchg
aam
mov
call
call
sub
clc
imul
ljmp
mull
mov
movsb
call
call
call
xchg
int
push
mov
mov
and
lret
iret
sbb
or
dec
or
fwait
aas
movsl
rol
fs
call
aaa
or
fadds
add
dec
add
dec
cmpsb
pop
dec
hlt
sar
dec
and
sahf
insb
into
mov
inc
call
call
and
mov
arpl
jmp
sbb
je
stos
fdivl
ret
add
mov
or
gs
insb
pusha
outsb
inc
push
push
jmp
xor
in
push
mov
mov
sub
mov
sbb
dec
pop
or
cmp
or
jbe
adc
pop
add
call
call
ljmp
and
and
and
and
and
and
fidivs
loop
sub
and
xchg
imul
subb
xor
jno
mov
repnz
out
pushf
rclb
movsl
clc
stc
movsl
push
or
inc
inc
fistl
ljmp
adc
fnsave
call
call
call
xor
xchg
lcall
mov
add
call
call
jle
pop
mov
ds
jle,pt
sti
outsb
xor
fisttpl
jb
ret
xchg
iret
mov
jb
insb
and
call
call
call
dec
jo
xchg
lret
add
cmp
cld
fndisi(8087
out
or
enter
pop
xchg
mov
fs
sub
add
sub
call
cmp
inc
js
dec
call
call
xor
pop
jb
inc
outsb
fistpl
ret
push
or
subb
and
add
fs
jnp
gs
dec
ljmp
loope
mov
bound
inc
subb
mov
mulb
jmp
stos
lods
into
push
ljmp
or
imul
add
ret
faddl
adc
pop
call
call
call
mov
cmp
imul
lea
into
in
lds
and
and
and
and
and
and
or
popf
lret
cli
and
jbe
pop
and
and
and
and
and
and
and
and
inc
lods
cmpb
and
imulb
xchg
push
aas
and
call
call
call
call
je
test
andb
jns
pminub
inc
call
bound
cmp
xorl
call
jecxz
pop
movsl
push
sub
inc
addb
test
cmc
testb
js
sahf
cmpsb
mov
je
xchg
and
and
and
and
and
and
and
jnp
xchg
or
jnp
lea
dec
inc
out
popa
sub
ja
fisubl
push
cmc
bound
ds
cmp
call
call
cmp
dec
or
fdivl
mov
mov
mov
xor
jmp
cld
cmp
out
jae
and
adc
call
or
js
mov
xor
add
ret
into
fnsave
mov
push
sahf
or
das
mov
int3
dec
rclb
daa
inc
push
dec
mov
fistl
inc
mov
jbe
lock
cmp
cwtl
cmpsl
lock
call
loopne
xchg
jg
stos
pop
dec
inc
sbb
inc
leave
sub
call
call
jp
out
adc
push
popf
mov
xor
shl
call
sub
xchg
adc
cwtl
sbb
push
sub
push
cmp
inc
enter
cmp
call
call
inc
cmp
sbb
add
push
call
xchg
adc
call
fimuls
pop
shl
rorl
cs
int3
xor
sub
sahf
scas
xlat
mov
and
or
pop
jp
incb
scas
in
hlt
pushf
and
iret
loope
mov
sti
repnz
call
sub
sbbb
xchg
xchg
and
adc
xor
movsb
inc
pop
dec
cmp
or
movsb
ret
lret
cmp
popf
cmpsl
mov
mov
pop
adc
ffreep
fwait
imul
scas
movsl
pusha
or
xchg
xor
jb
and
and
and
and
and
and
and
mov
cs
call
call
call
fs
and
enter
cmp
push
mov
xchg
push
outsb
xchg
lcall
aam
push
rcrl
and
jecxz
sbb
fisubrs
bound
bound
call
call
call
scas
push
fidivrs
pop
test
gs
jl
dec
dec
cmpb
jne
inc
or
je
and
out
rcr
shl
mov
xchg
je
mov
inc
lds
push
cmpsb
sbb
add
pop
leave
add
or
xchg
or
xor
mov
cmpl
cs
iret
mov
cs
call
ja
push
lock
jge
mov
xchg
jmp
daa
pusha
xchg
or
adc
push
sti
dec
sub
loopne
dec
pop
lods
rcll
mov
ror
or
pop
push
adc
sub
fucomp
call
call
mov
inc
stos
es
les
aam
call
call
hlt
sub
xlat
nop
push
adc
inc
ficompl
imul
mov
add
jge
ret
push
scas
imul
call
call
add
adc
mov
fwait
sbb
sub
sub
xor
xchg
mov
fwait
outsb
fbstp
cmpsl
out
jge
jp
pop
lret
mov
mov
call
call
insb
mov
push
in
mov
cmp
pop
sbb
mov
mov
sahf
mov
push
shrb
sub
ret
push
mov
cs
mov
adc
call
call
call
mov
cmp
push
or
jmp
call
call
xlat
xor
and
and
and
and
and
and
into
ljmp
xor
cmp
call
and
and
and
and
and
lea
cmc
notl
dec
xor
xchg
cmp
leave
mov
or
sahf
xor
inc
dec
sbb
stos
inc
xchg
loope
insb
imul
call
popa
stos
negl
push
ds
mov
push
jns
sbb
ret
xor
call
std
fucomi
lea
dec
push
push
jb
jl
dec
scas
push
mov
and
and
and
and
and
and
mov
arpl
jp
call
call
call
int
sbb
sub
call
call
or
xor
dec
iret
adc
in
insb
mov
inc
mov
jno
call
call
fnsave
xorb
sub
movsb
lods
aaa
xlat
mov
fs
sbb
jmp
aaa
push
push
out
push
hlt
sti
jp
ss
ja
mov
jbe
rorl
xor
incl
mov
jns
loop
loop
iret
inc
out
push
pmaddwd
fcompl
push
imul
call
call
stc
loope
pop
test
nop
xor
cmp
push
push
add
mov
repnz
aas
pmulhuw
call
call
sbb
sbb
xor
pop
push
push
out
jg
pop
add
mov
pop
jge
outsl
hlt
pop
mov
xor
iret
push
movb
mov
stc
lods
call
call
add
incb
add
mov
call
call
stos
jle
or
stc
cmp
bound
and
and
and
and
aas
dec
aad
test
adc
es
and
call
pop
xor
bound
cs
xchg
inc
push
cld
arpl
sbb
jp
pop
mov
call
call
clc
xor
fadds
xor
cmp
add
jb
insb
or
pop
ljmp
push
jmp
ljmp
call
call
call
lds
ret
dec
std
and
push
test
call
call
and
push
xchg
ss
push
rcl
sub
sbb
icebp
out
xchg
inc
movsl
push
mov
xchg
pop
lods
pop
jnp
adc
mov
loopne
xorb
into
inc
push
les
mov
call
call
arpl
jg
and
sbb
mov
test
push
je
jbe
call
call
cmp
mov
in
adc
mov
sub
xchg
cmp
push
xchg
lods
jns
fnstsw
jns
sbb
jnp
loope
setae
rcll
mov
call
pop
xchg
outsl
and
pop
in
iret
inc
mov
cs
push
lods
jecxz
ja
xor
xchg
cmp
call
call
call
ss
sbb
adc
shlb
popa
xchg
dec
jl
dec
pop
sub
and
fsubl
jl
dec
xor
mov
cmpsl
arpl
iret
pop
leave
repnz
insb
push
fxch
call
call
call
pop
xor
sub
pop
je
jo
pop
adc
data16
pushf
inc
and
and
and
and
xlat
pop
sub
sub
call
call
call
scas
pushf
repz
pop
lea
call
sub
pusha
and
stc
mov
sbb
add
sbb
jle
push
or
add
stos
fists
test
shrb
adc
inc
xor
das
jno
mov
or
call
call
dec
xor
jg
call
call
push
jo
mov
pop
inc
xchg
testl
dec
rolb
lds
call
call
call
jl
inc
das
push
scas
iret
inc
or
mov
xor
es
pop
btc
movlps
mov
push
ds
ds
cmp
cmp
call
and
inc
push
out
mov
mov
popf
and
test
cld
pop
aam
and
jae
jo
addr16
leave
cmp
call
dec
jl
jns
call
call
xchg
sbb
mov
fmull
test
lods
push
fbstp
aaa
xor
test
xor
sub
ret
call
call
scas
mov
lahf
cmp
dec
call
call
call
cmp
inc
cmpsb
push
push
lds
sbb
pop
mov
lret
mov
mov
pop
and
nop
inc
mov
les
and
or
je
mov
push
mov
jmp
push
sub
call
call
adc
or
dec
sbb
jl
pushf
sub
mov
aas
outsl
outsl
test
push
out
sbb
out
loopne
lea
inc
dec
pop
and
and
and
and
and
cmpsl
xchg
pushf
adc
rdmsr
dec
in
fdivr
das
imul
or
imul
repnz
push
lods
or
das
push
cmp
lahf
mov
outsl
dec
mov
jo
mov
xchg
insb
inc
pushf
aas
push
cmp
jno
pop
inc
fdivrs
out
stos
inc
insb
out
aad
mov
scas
mov
cmp
dec
mov
fs
call
xor
enter
cmp
add
andb
adc
out
sub
iret
ret
jecxz
jne
call
call
call
xor
lock
inc
or
push
lea
out
aad
imull
pop
shrb
call
call
pop
inc
push
jmp
and
jl
in
inc
push
mov
loop
or
jle
sub
xchg
dec
imul
call
call
call
pop
xchg
jnp
incb
aam
mov
out
jp
inc
or
pop
mov
or
xor
call
call
mov
dec
push
rcrl
call
call
call
push
push
ds
cmpsl
cmp
xor
sub
push
sub
outsl
bound
pop
cmp
jnp
xor
pushf
cmp
mov
lret
add
cwtl
imul
or
icebp
xor
cmp
std
imulb
shlb
or
fdivl
mov
xor
cs
dec
enter
xor
jo
idiv
jecxz
out
test
call
call
call
xor
lahf
mov
cmp
insb
arpl
and
and
and
and
and
and
hlt
push
dec
clc
in
push
jmp
faddl
gs
call
call
cld
add
repz
push
into
push
xchg
adc
push
imulb
lods
adc
pop
loop
ss
pushf
sbb
cmp
mov
push
jbe
pop
das
stos
shll
push
xor
out
call
call
push
negb
cmp
pop
and
nop
cmp
adc
dec
adc
cld
push
cmpsb
shlb
das
sbb
jmp
cmpsb
and
cmpsb
xchg
dec
and
adc
rdpmc
adc
mov
inc
sbb
movsb
sti
inc
cmp
out
pop
adc
or
and
call
call
cltd
pop
adcb
sbb
clc
jne
add
sub
call
push
dec
jbe
jmp
call
call
pop
in
int
pop
vmread
pop
rolb
push
jb
dec
jns
repz
sbb
jmp
cwtl
inc
inc
cmp
jle
mov
call
and
and
and
and
and
adc
imul
and
push
dec
dec
sub
inc
imul
fnstsw
rcpps
popa
outsb
pop
into
cld
shlb
jnp
push
and
jg
loopne
mov
xchg
dec
jp
mov
rorl
mov
push
xor
and
and
and
and
and
and
sarl
dec
pop
jl
aaa
rclb
pop
addr16
loope
xor
sahf
pop
sbb
mov
repz
cmp
outsb
gs
and
and
and
and
and
and
and
adc
hlt
sub
pop
jno
or
mov
bound
cmp
cmp
out
dec
push
mov
call
call
pop
scas
gs
or
call
call
call
adc
and
and
and
and
and
fildl
push
and
insl
dec
pop
jmp
jb
sub
and
fisubrl
jbe
in
loopne
xchg
cmp
xlat
dec
cltd
ret
call
call
call
pop
movsl
dec
dec
adcb
dec
movsb
jno
xor
imul
std
mov
push
dec
fldenv
xlat
jg
cli
fidivs
std
mov
sub
call
call
ds
sbb
pop
and
call
call
dec
call
mov
and
hlt
sbb
push
adc
jns
and
push
dec
cmpb
xor
pop
stos
aaa
lods
test
ds
ucomiss
inc
aas
mov
inc
push
fs
incb
mov
daa
call
jbe
xchg
cmp
call
call
call
push
mov
cs
or
pop
lea
scas
or
into
js
sbb
xchg
xchg
jecxz
or
adc
lcall
int3
jb
inc
sbb
mov
call
call
xor
insb
jo
sti
sub
xchg
es
xor
mov
add
mov
lret
ret
xchg
sbb
call
call
call
fwait
lret
imul
and
sbb
pop
xor
rcll
jecxz
outsb
insl
js
pop
mov
and
imul
pop
in
cmp
fisubs
xor
test
pop
cmpb
popa
adc
and
dec
cmp
call
call
call
repnz
es
je
sbb
leave
sub
ljmp
call
inc
lea
setne
cmp
fs
int3
lahf
je
and
inc
sub
in
dec
add
pop
nop
sti
xchg
adc
adc
mov
inc
fprem1
or
call
call
call
lcall
call
rcrb
enter
iret
or
mov
push
push
sti
js
xchg
mov
and
inc
and
call
call
ds
and
and
and
and
and
and
push
push
call
call
call
mov
sub
jb
cltd
sbb
cmc
dec
cmovb
mov
sub
mov
jno
pop
jne
gs
adc
test
or
mov
fistl
call
call
push
test
insl
rolb
faddl
or
mov
call
call
hlt
jb
jecxz
xor
dec
mov
and
aaa
jb
jl
push
std
adc
ret
sbb
dec
movsl
addl
jnp
mov
mov
jp
arpl
ja
inc
mov
loopne
mov
pop
ret
adc
outsl
cli
adc
lret
push
filds
call
call
aas
aaa
push
cli
jo
call
call
call
lds
push
cltd
mov
lcall
push
fildl
pop
dec
out
das
stos
xchg
nop
adc
mov
push
push
jmp
clc
add
popf
add
and
inc
inc
data16
and
and
and
and
inc
fcmovnb
or
sub
xchg
jl
dec
cmpsb
movsb
jl
jne
call
call
imul
daa
add
cmpsb
clc
xchg
pop
mov
jo
das
scas
and
mov
cmpsb
jnp
sbb
pop
cmp
push
pop
fs
pop
xchg
mov
dec
sbb
mov
inc
xor
mov
call
call
cmp
pop
inc
mov
mov
cmp
scas
mov
inc
rclb
cs
xchg
push
xchg
cwtl
call
xor
int
scas
sahf
fs
lret
icebp
aas
dec
or
jbe
adc
insb
pop
adc
adc
sub
pop
sub
pop
ss
call
call
in
inc
sub
in
stc
xor
out
sbb
sub
xor
and
sbb
push
outsl
pop
jo
aaa
jge
outsb
insb
push
mov
lock
cmp
call
call
call
call
fbld
fdivl
addr16
sbb
jae
xor
jmp
hlt
faddl
mov
or
or
call
call
inc
xchg
outsl
hlt
add
sub
outsl
inc
jg
pop
int
push
pop
fisttps
or
xchg
push
xchg
mov
mov
and
dec
xchg
and
adc
call
call
mov
or
jecxz
add
call
call
jo
mov
pusha
and
dec
push
cmp
sbb
inc
mov
call
call
insl
bound
imul
push
xor
outsb
sti
dec
into
inc
mov
mov
cmp
add
mov
cltd
sub
xchg
xor
inc
inc
lret
imul
ss
cmp
repnz
cmp
call
call
sbb
cmp
movsl
cmp
xor
and
repz
and
and
out
mov
call
call
or
shll
jge
xor
sub
and
negb
movsb
pop
pusha
jecxz
cmp
out
inc
push
orl
cmp
pop
dec
pop
adc
xorw
mov
inc
mov
add
sbb
xor
inc
call
call
call
push
f2xm1
mov
scas
inc
lods
pop
stc
pop
ds
pusha
outsl
aas
jae
aaa
push
sub
stos
push
push
mov
fdivrl
mov
adcl
and
pop
icebp
cs
test
pop
aaa
push
out
mov
mov
outsb
je
xchg
lods
xor
gs
jg
into
adc
call
call
call
cmpsl
int3
les
in
int
out
cmp
es
pushf
sub
rorb
push
repnz
fidivrs
scas
mov
sub
sub
js
and
and
and
and
and
and
call
call
call
enter
dec
jg,pn
scas
inc
pop
sub
es
popf
mov
jne
and
pop
in
push
xchg
or
sbb
push
push
add
and
push
pop
lods
ja
cld
inc
cmp
in
idivl
int3
dec
addl
call
call
xor
pop
outsb
call
call
jbe
shl
inc
mov
jge
adc
dec
adc
repnz
jp
mov
call
call
push
cmpsl
pop
loopne
cmp
sbb
xor
cmpsb
shlb
jle
push
fistl
jnp
and
xor
test
push
in
aas
sbb
jo
and
inc
sub
pop
adc
push
jle
pop
data16
inc
lret
call
call
call
adc
mov
cld
lret
jle
out
jne
mov
out
mov
xor
mov
jnp
xor
or
mov
imul
adc
add
pop
push
pop
sbb
mov
call
call
jbe
xchg
mov
cmp
popa
fidivrs
pop
dec
call
call
dec
dec
jmp
push
pop
mov
call
call
call
pop
push
adc
mov
and
and
and
and
xchg
dec
pop
and
xor
gs
mov
int
inc
mov
inc
and
and
and
and
and
and
aaa
andb
and
push
fcmovne
call
call
mov
sub
dec
cmp
call
adc
inc
jle
imul
pop
sbb
jp
sbb
add
call
in
push
push
push
mov
sbb
enter
call
xlat
add
pop
push
fwait
add
ss
jo
popa
sbb
push
std
lods
jae
call
call
repnz
sub
cli
xor
xchg
dec
jmp
out
or
mov
mov
imull
daa
jle
jmp
or
pop
mov
push
xchg
pop
and
mov
js
xor
addr16
jp
sub
inc
testl
sti
das
adc
and
call
imul
shlb
call
call
lcall
mov
movsl
test
add
call
call
push
cmp
cmp
add
ljmp
repnz
jge
enter
call
call
jne
mov
add
lods
rcrl
insb
adc
js
jnp
and
xor
or
mov
push
pop
mov
call
call
call
pop
sbb
push
sub
cmp
push
nop
push
jg
call
jne
ja
and
sbb
in
jne
jecxz
mov
xlat
popf
loopne
sti
jmp
adc
call
call
call
and
testb
dec
bound
outsl
dec
outsl
fsubs
sti
xchg
or
push
arpl
jae
and
dec
int
push
add
clc
movsl
fsub
aaa
mov
and
and
and
and
loopne
and
push
mov
inc
sub
add
push
iret
js
call
call
call
push
mov
pusha
dec
push
mov
pop
cmp
pop
fs
adc
shll
rorb
or
or
jns
push
cwtl
mov
cwtl
and
out
pop
and
push
rorl
call
call
call
mov
dec
shr
add
and
and
and
and
and
and
sbb
iret
in
call
call
add
or
rcll
pop
pop
negb
cmp
pop
pop
cmp
test
sub
call
call
call
lods
addr16
push
adc
xchg
mov
ror
add
nop
mov
push
sub
xchg
push
arpl
jnp
add
das
lret
and
sarl
dec
test
std
or
mov
cld
adc
nop
add
xchg
scas
cli
sbb
mov
call
call
jbe
out
dec
sub
shll
jp
in
int
and
and
and
and
inc
cmc
sbb
and
call
call
call
and
adc
bound
adc
rcr
sbb
jg
and
jne
pop
xor
sbb
call
call
add
into
add
stos
loop
add
push
cmpsb
das
push
lds
inc
stos
sbb
sub
aaa
in
sub
outsb
inc
mov
sbb
dec
cmp
mov
sbb
jnp
add
xchg
dec
xor
push
xchg
push
fadds
adc
test
pop
call
call
call
or
outsb
mov
and
pop
xchg
and
inc
pop
jmp
pusha
mov
mov
mov
push
mov
inc
addb
sbb
cltd
inc
xchg
sbb
mov
call
call
call
jns
and
xchg
call
call
call
xchg
outsl
pop
and
and
and
and
and
and
xlat
jl
data16
scas
fildll
aas
jle
sbb
mov
cmpsl
cmp
repnz
xorb
push
lcall
pop
mov
mov
ficoml
pop
mov
stc
mov
fisubs
jecxz
mov
fbld
call
call
dec
repnz
repz
sub
ja
lods
hlt
aaa
xchg
pushf
pop
insl
fisubrs
jmp
mov
push
clc
cmpsl
fldcw
out
mov
add
in
outsb
pop
xchg
mov
xor
push
dec
and
push
cmc
js
stos
pop
sub
jge
ret
jns
push
call
call
pop
or
jmp
imul
mov
andl
and
and
and
and
and
sti
dec
addr16
mov
mov
or
imull
adc
pop
loope
mov
push
cs
call
pop
xorl
push
lds
jge
adc
cmp
int3
movsl
cmp
mov
or
div
sub
shll
sub
call
call
and
and
and
and
je
insb
jecxz
idiv
fs
jg
dec
cli
inc
sbb
insb
into
insl
adc
aaa
imul
jb
pop
clc
mov
or
pushf
push
call
popa
insl
mov
mov
jae
xchg
out
subl
call
or
pop
cmp
out
jle
and
or
out
fidivs
out
xor
out
ss
xor
jl
repnz
std
inc
outsl
add
adc
dec
xlat
jns
sbb
test
jo
inc
cmp
pop
and
and
and
and
pop
int
call
call
call
pop
ja
iret
add
call
call
adc
dec
mov
stc
pop
lods
xchg
and
ljmp
xor
fdivrl
call
call
call
or
mov
call
ja
sbb
sbb
gs
cmc
and
outsl
inc
push
push
loopne
push
sub
inc
sbb
rcrb
call
call
call
aas
dec
pusha
shl
and
dec
mov
xchg
fildl
xchg
dec
lret
add
mov
movmskps
call
call
call
enter
mov
call
call
dec
fwait
xor
test
imul
call
call
and
or
pop
mov
insb
imul
and
and
and
and
and
rcll
test
stos
inc
addl
insb
aaa
in
adc
ret
dec
sub
xchg
subb
sbb
out
push
lods
dec
inc
clc
cltd
out
add
dec
or
call
call
call
push
jne
lock
sub
test
out
je
out
mov
pop
push
dec
cs
test
leave
test
jns
pop
cmp
push
cmp
iret
pop
cmp
mov
push
lcall
lock
cs
mov
fists
push
lret
call
call
cld
or
pop
mov
mov
repz
xor
jle
dec
inc
sub
hlt
sub
ljmp
push
pushf
test
dec
xor
mov
add
xor
and
aas
out
insl
into
jae
insb
or
sbbl
nop
fcoml
call
call
call
jns
call
call
call
adc
aad
add
inc
jo
mov
jg
ss
scas
lods
push
xchg
sbb
call
call
insb
inc
cmp
mov
push
addr16
movsb
mov
and
fs
or
out
or
hlt
pop
iret
jp
pop
mov
arpl
popf
pop
inc
mov
jle
in
jns
add
push
mov
xor
je
addr16
adc
xchg
inc
lods
mov
nop
sub
ja
dec
jno
adc
call
call
insb
test
fisubrs
mov
mov
mov
or
aaa
adc
or
dec
dec
aaa
mov
lret
push
ljmp
insl
xorl
loope
adc
std
mov
dec
cwtl
pop
sbb
pop
shrl
aas
call
call
dec
sub
lahf
push
xlat
out
push
mov
iret
or
push
sti
sub
mov
bound
repz
push
call
call
call
shlb
and
and
and
jg
imul
test
or
enter
ficoms
xor
call
call
cltd
or
sub
or
mov
call
call
call
scas
inc
sub
xchg
sbb
lods
lret
push
adc
lock
mov
jbe
jecxz
xor
outsb
nop
f2xm1
sub
call
call
cwtl
sub
movsb
inc
xor
sub
insb
jp
loopne
call
call
dec
xchg
daa
pop
push
shrb
sahf
add
xor
dec
leave
push
pop
les
scas
push
mov
loope
mov
fsubrs
into
out
std
inc
fwait
cmp
stc
call
call
inc
and
cli
add
xchg
cltd
add
enter
les
jmp
sbb
xchg
ja
inc
push
push
cmp
add
xor
adc
and
mov
jbe
call
call
mov
decl
add
stos
lahf
fstl
push
push
push
nop
imul
xchg
push
imul
inc
pop
or
fs
outsb
pop
push
sti
psrld
mov
call
call
call
lcall
adc
rclb
jno
out
adc
pop
sub
in
sbb
inc
popl
pop
dec
pop
loop
mov
dec
inc
xchg
push
mov
insb
jl
xchg
cmp
call
call
jbe
scas
aad
jecxz
fdivs
sbb
cld
add
mov
popf
push
sbb
add
and
add
inc
fldl
mov
xchg
dec
xchg
cmp
add
pop
fcoms
and
and
and
and
and
push
lcall
pushf
or
call
call
call
shlb
inc
es
xor
sbb
call
call
cmp
js
add
adc
mov
jno
arpl
and
add
dec
jne
push
stos
push
push
cmpsl
cmp
std
rcrl
mov
call
call
call
jne
adc
jnp
dec
push
dec
lods
push
push
and
mov
call
call
rcrb
sbb
jae
inc
enter
fwait
pushf
xchg
xor
or
cwtl
mov
call
call
aaa
push
in
stos
inc
jns
inc
push
and
and
and
and
cld
and
dec
mov
push
in
push
xor
jbe
pushf
mov
call
call
call
icebp
push
cmp
pop
leave
jbe
sbb
insl
and
outsl
jno
sbb
inc
jmp
mov
pop
sti
bound
andl
insb
lods
sarl
lahf
add
push
clc
or
daa
in
add
jle
adc
data16
call
call
jp
adc
aas
sbb
arpl
adc
call
call
add
or
sbb
jl
jb
mov
imul
adc
sub
jb
cmc
lods
into
sbb
call
call
jbe
ljmp
int
xchg
sbb
mov
iretw
lock
dec
loop
pop
insb
push
mov
aaa
add
aas
ss
enter
mov
ret
adc
test
jp
cmpsb
sbb
call
call
call
aas
or
jne
add
and
ficoms
dec
push
sbb
lcall
push
push
int3
dec
cmp
jecxz
aas
test
pop
cmp
mov
adc
clc
inc
outsb
mov
std
push
pop
push
inc
fisubs
fisubrs
pop
shll
loopne
push
scas
add
adc
ljmp
call
call
repnz
and
fstps
aad
insb
pop
dec
adc
es
mov
ret
inc
sbb
les
xchg
scas
testl
stos
jb
adc
pushf
addb
push
jl
push
push
mov
add
imull
push
js
movsl
xchg
pop
inc
repnz
and
and
and
mov
pop
out
jl
sahf
sbb
call
call
lahf
pop
insl
xor
jbe
xor
xchg
add
aas
jnp
fstpl
test
gs
add
sahf
ja
push
pop
pop
jge
xchg
mov
cs
je
cmc
fwait
and
movsl
cmc
sbb
call
call
call
daa
enter
jnp
or
cltd
addl
ja
das
fadds
out
xchg
xor
jae
call
call
pop
mov
and
test
fsubrp
adc
imul
xor
and
js
mov
sbb
idivl
loopne
call
call
call
leave
xor
sahf
push
and
and
and
and
and
loop
push
xor
call
call
aad
shrl
and
in
jg
call
call
dec
scas
xlat
jbe
in
and
jae
inc
ds
cmc
mov
inc
push
jl
jg
nop
movsl
and
es
push
mov
hlt
call
call
call
loopne
mov
nop
xor
loope
dec
nop
xor
pop
aaa
jecxz
aaa
cmp
cmp
cmc
jge
test
pop
dec
faddl
pop
imul
imul
pop
sub
imulb
adc
mov
sbb
call
call
xchg
ss
inc
imul
mov
out
adc
call
call
cltd
xchg
inc
jmp
in
xor
xor
lcall
push
or
arpl
outsl
pushf
push
call
call
roll
shrl
jle
pop
rolb
xor
das
jbe
outsl
fs
xchg
mov
push
pop
callw
call
call
jo
pop
movsb
rolb
popa
test
dec
adcb
rcrb
aas
cmp
sub
mov
mov
call
call
call
push
xor
sbbb
pop
add
jns
dec
hlt
dec
push
cmp
and
out
dec
cs
or
inc
pop
and
and
and
and
and
and
jae
fs
rorl
or
dec
sub
clc
dec
and
call
call
push
mov
lcall
jle
call
call
push
cmp
or
dec
dec
mov
xlat
aaa
sub
cld
in
sar
addr16
push
sbb
and
and
and
and
pop
mov
adc
and
insb
scas
dec
decl
mov
call
call
call
call
jle
pop
inc
push
cmp
and
xchg
inc
push
pop
lcall
sbb
ret
jns
and
popa
repnz
pop
insb
and
xor
dec
lcall
or
pushf
cmpsl
jnp
push
imul
cmp
je
call
call
mov
push
jnp
call
call
jmp
lods
add
popf
insb
divl
insl
mov
call
call
mov
aam
daa
mov
mov
inc
mov
push
lea
hlt
mov
gs
jmp
pop
or
mov
sarb
loopne
dec
outsb
push
pop
loopne
mov
push
adc
jg
into
or
orl
sbb
test
add
push
mov
call
call
jmp
sbb
mov
sbb
add
or
or
pop
push
sbb
add
jo
sub
or
out
mov
test
test
sub
call
call
call
imul
scas
sbb
int
xchg
sbb
push
and
mov
inc
call
call
sbb
push
add
loopne
jp
add
cmp
dec
call
call
call
call
out
data16
jae
into
ljmp
adcb
pusha
adc
jns
dec
rolb
and
and
and
and
and
and
push
int
push
add
cwtl
push
adc
rcll
inc
repnz
pop
push
sub
bound
out
jle
pop
xor
push
js
les
pop
cwtl
add
cmp
call
call
mov
pop
push
dec
adc
jmp
je
scas
add
jbe
fisttpll
in
bound
sub
fisubrl
int3
xor
jno
call
call
call
stos
jg
sarb
pop
and
pop
jbe
adc
ja
call
call
dec
pop
xor
jb
jae
outsb
stos
mov
cli
fldl
and
and
and
and
and
fs
dec
call
call
call
fst
fimull
addr16
sub
shll
sub
lcall
arpl
in
sub
dec
cmp
jl
adc
push
mov
pop
dec
out
pop
mov
jbe
or
popf
insl
and
hlt
insb
inc
jle
call
call
call
xchg
inc
cs
mov
pop
and
into
loop
test
dec
add
xlat
inc
adc
mov
insb
or
fwait
sub
xchg
push
sub
pop
jg,pn
xlat
ds
test
sbb
sub
mov
xchg
and
and
and
and
mov
out
addr16
push
shlb
mov
call
call
push
xlat
pop
sub
pop
aaa
sbb
jmp
ret
in
jg
sub
jecxz
or
int3
aam
fmull
xor
leave
stos
xchg
pop
sbb
loope
repnz
cmp
cltd
cmp
es
push
shlb
cmp
and
and
and
and
and
and
and
and
lcall
aas
pop
icebp
insb
outsl
daa
call
call
call
sbb
fs
shll
push
push
adc
dec
lock
dec
cmp
dec
xchg
pop
pop
adc
aam
xchg
call
call
call
pop
or
mov
push
xchg
popa
jb
mov
lahf
cwtl
rorb
test
and
pop
clc
jo
hlt
rclb
call
call
mov
pop
call
call
call
sbb
imul
sub
sti
test
jbe
or
pop
sahf
insb
jmp
add
out
or
push
repnz
outsl
lock
push
mov
lods
loopne
dec
xlat
mov
js
push
repz
pop
popa
add
add
call
call
aad
push
cmp
shlb
shll
les
cmp
xlat
out
xchg
push
inc
ret
and
xchg
addb
fiaddl
inc
sub
push
aaa
jle
dec
sti
fnstcw
test
add
aas
test
sbb
call
call
lret
test
sbb
add
sub
push
inc
and
push
js
add
and
aaa
test
jne
push
jnp
cmc
cld
jnp
je
sub
call
call
call
jns
icebp
addr16
sub
and
and
jo
pop
xchg
in
test
clc
inc
bound
push
fs
fs
call
call
xor
aad
test
andl
cmp
outsl
das
adc
xlat
inc
mov
loop
cmp
jb
add
dec
pop
xor
mov
fs
inc
popf
leave
xlat
ret
out
and
and
and
and
and
and
shll
addl
push
enter
mov
call
call
daa
cs
pop
xor
jno
imul
loopne
popa
adc
repnz
ret
and
xor
inc
and
adc
call
call
gs
pop
cld
jp
mov
xor
pop
mov
cmp
fsubrl
inc
push
jl
outsl
cmpb
mov
into
pop
push
mov
mov
rclb
and
and
and
and
mov
adc
cmp
or
dec
xlat
call
call
std
inc
gs
mov
js
js
push
xchg
or
add
adc
std
jl
sbb
loopne
call
call
call
push
jns
push
jp
test
add
rcrb
add
cmp
clc
fisttps
cmc
hlt
outsl
adc
outsl
jl
test
cmp
pop
cltd
dec
mov
jb
les
pusha
adc
dec
adc
inc
movsb
mov
rcll
push
jg
mov
jl
call
call
call
call
call
call
mov
jo
stos
fiaddl
std
inc
inc
push
call
call
ret
inc
cmp
push
and
je
aaa
popf
call
call
call
sub
mov
std
ds
or
imul
addl
pop
add
rorl
push
adc
or
into
ds
loop
ss
out
push
and
fdiv
insl
sub
les
mov
call
call
call
out
push
jle
push
xor
dec
mov
xor
dec
jne
lods
ss
mov
pushf
adc
jmp
ljmp
icebp
sbb
call
adc
lods
dec
outsl
jbe
outsb
call
call
jmp
data16
inc
stos
jbe
adc
cmc
iret
gs
jle
dec
jns
ja
sbb
or
std
mov
call
call
pop
mov
sbb
xor
call
call
aad
stc
lods
lods
push
in
imulb
mov
je
stos
mov
jg
loop
or
lret
or
call
and
faddl
iret
out
sub
popf
aam
cli
jnp
mov
bound
and
and
and
and
mov
adc
lret
dec
call
call
call
call
jbe
shr
lret
adc
fs
inc
imul
pop
bound
faddl
aas
movsl
dec
in
into
fsub
sarb
call
call
fldl
lret
lcall
push
aaa
or
add
js
sub
pop
jp
enter
pop
call
call
mov
mov
mov
es
rcrl
ss
push
popf
sbb
std
xchg
mov
outsl
cs
push
notb
dec
cwtl
loop
imul
mov
sbb
repz
and
and
and
and
or
into
dec
ret
fld1
call
call
adc
stos
call
call
in
movsb
test
xchg
repz
sbb
lds
mov
inc
cmpsl
fistl
les
cmp
mov
or
mov
cmp
fsubrs
xchg
jbe
fwait
arpl
std
xchg
iret
shl
call
jns
mov
call
call
and
aam
sbb
xchg
aam
ret
cmpb
push
add
lds
jae
xchg
sbb
push
xchg
sbb
xchg
pop
mov
jecxz
in
jno
enter
out
xor
mov
out
dec
adc
call
call
lret
aas
insl
dec
movsb
mov
pop
jae
iret
scas
push
lret
int
out
out
fidivs
adc
push
dec
xlat
sbb
aas
mov
mov
fucomi
pop
rcrb
sub
jb
in
jbe
sbb
insb
notb
call
call
insb
insb
pusha
or
cmp
fstpl
pop
and
and
and
and
out
push
mov
repnz
test
inc
sub
call
gs
sbb
arpl
push
addb
leave
mov
mov
mov
arpl
movsb
push
sti
icebp
test
jg
fs
mov
dec
dec
in
jo
negb
fldenv
call
call
lret
pop
sarl
xor
mov
push
cmc
repnz
cmpsl
mov
call
call
dec
jmp
dec
and
cmp
fldenv
mov
loop
call
call
mov
ret
push
jbe
bswap
lds
pop
mov
or
call
call
dec
mov
push
pop
fyl2xp1
xabort
xchg
dec
cmpl
jecxz
sahf
mov
in
das
add
dec
dec
jns
outsl
rcl
testb
push
hlt
xchg
pusha
imul
jmp
iret
call
call
call
sbb
sahf
jmp
fld
or
sbb
xchg
push
pop
loope
fs
shll
push
lret
mov
in
mov
movsb
pop
daa
shr
fwait
push
out
in
mov
pop
mov
xchg
sbb
mov
mov
jae
sbb
cmp
call
call
call
loopne
jg
and
lret
hlt
lret
inc
jo
mov
pop
outsb
pop
gs
xor
pop
loop
mov
test
rclb
mov
mov
int
sub
and
and
and
and
and
and
and
sbb
ret
stos
outsb
divb
call
call
lock
mov
xor
dec
jo
movsl
sahf
xchg
clc
mov
and
dec
xchg
and
and
and
and
and
and
sub
cmp
mov
jb
or
mov
sbb
sub
lods
mov
call
call
and
loopne
pop
aaa
xchg
mov
icebp
push
push
in
mov
and
xlat
loop
mov
ret
fbld
hlt
pushf
shlb
pusha
call
call
js
test
sbb
roll
into
movsb
out
lds
cmp
sub
iret
call
outsl
jmp
mov
call
call
push
add
stos
test
ret
cmpsb
fistpll
fcmovnu
and
stos
enter
test
stc
clc
mov
or
add
shlb
push
lret
mull
mov
pop
pusha
fsub
or
mov
aam
fmul
jl
out
inc
or
mov
sahf
push
mov
cmp
in
clc
mov
inc
mov
xor
enter
dec
call
call
call
xchg
cmpsb
fcoml
out
xor
push
sub
sahf
daa
xor
call
call
xchg
hlt
cmp
scas
cmp
repnz
mov
out
out
test
js
nop
push
pop
out
dec
cmpl
call
call
sbb
xchg
adc
add
fistpll
inc
push
cmp
pop
shll
rcrl
in
cmc
add
mov
fs
test
push
mov
enter
rorb
or
cs
sbb
cld
xor
call
call
jg
xor
arpl
mov
xchg
stc
dec
shll
and
cmp
aad
int
add
cmp
shll
call
call
call
aad
sarb
jb
push
mov
and
and
mov
mov
or
sub
fbstp
and
and
and
and
push
mov
jno
divb
pop
aam
test
insl
aam
call
call
movsl
add
mov
jp
movsl
mov
shll
cmp
xchg
icebp
clc
fucomp
call
call
mov
cmp
loope
call
call
call
cmpsl
dec
pop
jbe
sub
repnz
popa
cwtl
push
nop
dec
mov
icebp
insl
and
inc
push
mov
std
push
jno
mov
adc
stc
enter
mov
cmpl
call
xor
les
pushf
mov
cltd
into
aaa
in
call
call
call
test
mov
orl
xchg
or
mov
mov
dec
pop
xchg
mov
divl
sub
in
cwtl
mov
movsl
dec
inc
jbe
bound
dec
es
mov
pop
andb
inc
inc
xchg
mov
fsubrl
xchg
testl
push
mov
or
and
and
and
and
ljmp
sub
notb
scas
call
call
popf
sub
jae
sti
and
loope
incb
jg
fsubl
push
jo
mov
call
call
call
sahf
jmp
sbb
daa
mov
xchg
mov
test
add
add
in
jecxz
jge
mov
or
mov
js
mov
cmpsb
pause
cmp
jns
inc
mov
lret
inc
bnd
call
gs
les
jbe
dec
fmull
mov
push
sub
pop
xchg
insl
cs
or
dec
bound
jns
lods
mov
cwtl
jbe
jo
xchg
int3
in
inc
dec
push
orl
call
call
call
loope
and
jp
call
sub
sub
pop
dec
push
xor
mov
and
and
push
int3
adc
or
dec
shr
aad
dec
pop
inc
cmp
push
sub
call
call
call
mov
jne
enter
jp
outsl
cmpl
jp
test
xor
clc
xchg
add
mov
adc
out
jbe
push
jge,pt
xor
xor
imul
iret
repz
push
pop
call
call
and
and
and
and
and
and
and
push
or
shlb
inc
jmp
es
cmc
inc
pop
jg
insl
push
sub
imul
dec
pop
xchg
inc
pop
mov
lret
xchg
shrb
dec
adc
adc
push
mov
call
call
cmp
or
scas
xor
int
mov
call
xchg
jo
xor
jbe
addr16
popf
mov
call
call
mov
cs
jns
adc
mov
xchg
xchg
cs
stc
xchg
shr
movsl
out
sub
arpl
pop
add
push
sti
inc
iret
int
sub
and
and
and
and
fcomp
fcmovne
and
int3
cli
and
and
aas
das
call
call
call
mov
pop
mov
lret
mov
lock
icebp
adc
arpl
call
call
call
cwtl
loope
or
les
mov
setg
mov
repnz
adc
mov
dec
fists
pop
scas
mov
movsb
push
jae
repnz
dec
fistpl
leave
call
call
call
mov
les
scas
dec
mov
inc
push
push
test
enter
sarl
mov
stos
and
pop
sbb
jmp
add
sbb
and
xchg
mov
mov
mov
push
cwtl
or
call
call
into
pusha
flds
lods
dec
test
sbb
push
ss
push
imulb
fidivrl
cmp
or
push
iret
jge
mov
jns
test
pop
jp
push
mov
call
xchg
pop
pop
outsb
js
add
push
out
xchg
pop
mov
stos
fwait
shl
je
outsb
popf
std
jle
addr16
pop
xchg
daa
outsb
mov
call
call
in
adc
sbb
pop
scas
imul
rcll
mov
movsb
call
call
lcall
push
call
call
hlt
dec
lcall
or
roll
in
mov
xchg
and
call
call
in
add
cmpsb
jg
call
pusha
stc
inc
test
jg
ljmp
test
and
push
xchg
jmp
pop
cld
cltd
mov
cmp
xlat
cld
sub
and
and
and
and
and
and
cmpsb
lods
subl
in
cs
mov
into
sub
test
sar
push
decb
mov
aaa
inc
test
sbb
dec
xchg
sbb
pusha
mov
xchg
out
jae
or
push
enter
call
call
call
cmpb
andl
into
xchg
pop
mov
je
loop
outsb
xor
mov
pop
aad
adc
shll
in
test
call
call
dec
or
pop
rcrl
repz
inc
sub
or
cs
sbb
out
ret
movsb
mov
or
daa
test
sbb
sbb
fmul
mov
outsl
pushf
mov
sub
daa
sub
mov
addr16
add
add
call
call
faddp
and
xchg
repnz
cmp
jno
cmpsb
stos
dec
sbb
push
or
call
call
call
mov
mov
ljmp
mov
jae
sbb
sbb
sub
mov
sbb
lcall
js
add
mov
scas
inc
in
popf
addr16
call
mov
in
data16
sbb
gs
call
call
call
push
ret
adc
lea
popf
jg
push
cmp
xchg
sub
or
pop
iret
push
mov
divb
test
adc
fdiv
out
pop
sub
nop
outsb
jbe
call
call
movsb
sbb
lahf
xor
add
call
call
shlb
pop
arpl
ja
outsl
mov
loope
xor
inc
sub
pop
pushf
jg
sbb
xchg
mov
add
pop
lods
xchg
jnp
mov
call
call
push
mov
and
and
and
and
aas
or
stc
mov
nop
xchg
loopne
mov
push
add
sub
ret
mov
js
pop
pop
adc
mov
push
xchg
lods
fistpl
or
call
call
call
outsl
jno
stos
xor
repnz
fcmovnbe
cmc
stc
or
in
xor
and
mov
jnp
lret
jno
dec
rcrb
lea
out
xchg
in
out
and
add
call
call
fnstenv
inc
popf
in
subl
jno
cmpsb
jp
xchg
call
call
call
insl
out
inc
mov
jge
out
movsb
out
and
xchg
cmc
and
or
repnz
adc
sub
adc
gs
pusha
dec
movl
push
jne
call
call
call
divl
mov
and
pop
nop
mov
xchg
aam
inc
es
stos
inc
or
das
mov
mov
enter
aaa
push
add
decl
cmpsl
add
cltd
imul
jl
and
and
and
and
and
and
and
and
out
call
call
call
or
xlat
in
scas
aad
popf
ja
mov
pop
fdivrp
jo
negl
call
call
loop
ljmp
mov
ficomps
hlt
and
test
out
icebp
mov
into
or
or
add
call
or
fnstsw
std
add
sbb
inc
push
fdivrp
or
cwtl
xor
mov
lahf
lret
inc
cltd
pop
mov
call
call
into
in
lds
xchg
push
int
cmpsl
jno
mov
jo
mov
sti
sub
mov
shrl
lret
adc
dec
xchg
add
adc
call
call
stos
jns
xchg
cwtl
clc
aas
push
ss
jmp
lods
dec
outsl
dec
arpl
lods
pop
mov
decl
fsts
and
pop
mov
and
and
and
and
and
and
mov
or
or
dec
or
adc
and
push
sahf
enter
fidivrs
call
call
dec
cmp
mov
outsb
pushw
inc
push
test
cmpsb
xor
jbe
or
fcomp
stos
imul
mov
shlb
adc
sub
push
and
mov
enter
in
addl
call
call
mov
jns
xchg
cmp
outsl
xlat
mov
cmc
pop
pop
push
lods
add
jno
data16
and
fucomi
call
call
call
and
fmull
cli
jle
lahf
xor
ss
xor
push
aas
mov
test
fld
jne
aas
and
call
call
pop
scas
addr16
sub
sbb
lret
xor
mov
inc
daa
inc
testb
pop
sub
pop
outsb
mov
sbb
or
and
cmp
call
lea
outsl
outsb
mov
xchg
jecxz
shrb
adc
popa
adc
xchg
and
cld
lret
in
sarb
call
call
loopne
jle
out
je
call
sub
mov
xchg
inc
lods
or
push
mov
push
loope
and
jecxz
mov
cltd
inc
call
call
aam
rclb
sbb
cmpsl
mov
cmc
rcr
aas
push
mov
rcrl
dec
lock
jg
jb
out
test
lods
js
ja
mov
clc
loope
lahf
xchg
repnz
call
call
or
out
add
imul
ss
add
call
call
call
and
ds
nop/reserved
outsl
shll
xchg
adcb
ds
adc
sbb
jae
mov
and
and
and
and
sbb
mov
cli
shr
call
call
ret
adc
cmp
stc
jae
and
and
and
and
xor
adc
lock
adc
lret
negl
out
adc
pop
icebp
out
aam
adc
adc
lahf
sub
push
mov
ljmp
call
call
mov
mov
int3
inc
out
push
out
ret
add
dec
sarl
dec
arpl
push
adc
adc
cmpsb
cmpb
call
call
call
call
push
cmp
outsb
pop
pop
aam
in
mov
jae
and
sbb
sbb
call
call
pushf
arpl
es
and
call
call
dec
sub
call
call
loopne
faddp
mov
leave
addb
cmp
mov
inc
nop
dec
in
cld
insl
es
and
mov
outsl
mov
femms
xchg
lret
aad
mov
divb
movsl
pop
in
mov
add
lds
push
loopne
cmp
fucomi
sub
jmp
sub
call
call
popa
faddp
lahf
fisubs
loope
push
sbb
lahf
popf
es
loopne
lret
add
cmp
mov
rcrb
rcr
cmp
out
lret
enter
movsl
mov
bound
out
xor
pop
loopne
scas
mov
push
enter
call
call
call
push
stc
daa
es
lea
xchg
and
and
and
and
roll
sbb
pop
outsl
daa
scas
bound
or
repnz
pop
fcompl
popa
jmp
inc
mov
sbb
outsl
sbb
pop
push
daa
cmp
push
rep
notl
add
mov
push
cmp
stc
jle
add
call
call
add
insl
in
std
mov
adc
push
mov
push
aad
push
push
jb
cmp
fmull
orl
fwait
cwtl
jmp
xlat
sub
inc
addr16
les
sahf
es
inc
out
gs
loop
adc
jg
call
call
jle
or
push
xchg
or
in
mov
xor
popa
sbb
inc
mov
js
fisttpl
or
fnstenv
adc
test
add
movl
call
call
call
inc
jmp
mov
pop
cmpsb
sbb
jnp
push
xchg
pop
jmp
cli
js
sbb
cmp
aaa
cmpsb
jns
or
xchg
push
mov
mov
sahf
outsb
pop
loope
insl
mov
push
jl
fcoml
mov
dec
jo
fstpt
mov
dec
outsb
out
out
pop
add
call
call
icebp
pop
dec
call
call
outsl
mov
mov
filds
add
call
call
ja
call
call
call
fwait
and
xor
push
lds
sbb
add
mov
add
loop
pop
or
pop
dec
je
mov
or
divb
rcr
dec
lods
dec
mov
shrl
push
sarl
inc
popa
call
call
or
inc
fnstsw
xor
pop
jmp
ret
popa
adc
movsl
js
add
cwtl
mov
jo
xor
push
jl
in
push
adc
test
or
test
and
and
and
fcoml
and
mov
pusha
adc
data16
cmp
mov
aam
cli
jmp
pop
or
inc
sub
call
call
std
scas
push
fldl
jl
out
push
popf
imul
call
call
sarb
mov
ret
mov
inc
mov
pop
inc
call
sbb
test
test
shrb
sub
pop
and
stc
je
aaa
mov
xchg
arpl
enter
cmp
jp
imul
or
adc
mov
call
call
push
or
add
aam
cmp
mov
pop
dec
lcall
les
sbb
xor
jb
je
sti
sub
pushf
stc
jbe
adc
sahf
inc
sbb
pop
jg
divl
add
cmpsl
aad
add
mov
pop
hlt
stos
dec
ja
and
dec
call
call
call
inc
scas
jg
push
mov
sahf
outsb
sub
sbb
mov
push
jns
fisttpll
xor
inc
hlt
call
call
pusha
adc
pop
adc
test
add
cmp
mov
icebp
push
fwait
xchg
arpl
cmp
inc
lods
jp
inc
cmp
aaa
push
inc
push
stc
jne
aas
cli
ja
jmp
pop
call
call
sbb
test
test
scas
push
sub
repnz
jne
imul
clc
push
add
sub
call
call
call
sub
jbe
cmp
addr16
xor
push
jns
sbb
sub
roll
sbb
xchg
lods
fcmove
cs
sub
stc
jne
popf
xchg
arpl
fwait
shll
and
and
and
and
and
and
cli
imul
cmpsb
mov
cs
call
call
mov
add
push
popf
add
mov
lcall
out
cmp
pop
or
lods
add
or
hlt
push
push
mov
sbb
sub
lds
cmp
or
and
pop
xchg
sbb
jge
mov
call
call
call
or
lcall
popa
call
call
call
fnsave
push
and
pop
or
outsl
mov
cmp
loopne
sub
xchg
push
js
mov
dec
cwtl
mov
jbe
nop
sarb
sahf
jb
inc
dec
and
mov
sub
jg
inc
test
call
call
call
int3
xor
or
adc
cmp
inc
mov
xchg
cmp
cmc
popa
adc
cwtl
out
addr16
pop
lret
and
dec
sbb
in
sub
mov
aam
call
call
call
call
leave
mov
pop
mov
pushf
scas
pop
sbb
in
arpl
and
and
and
and
and
adc
mov
xor
mov
jb
xlat
push
mov
jg
cld
jp
add
call
add
icebp
xor
je
inc
addl
xchg
inc
pusha
incb
dec
loopne
jmp
pop
pop
inc
imul
push
adc
call
insb
roll
call
call
push
call
icebp
push
sti
call
call
jns
add
xchg
pop
popa
jg
inc
cmc
fstpt
pop
aaa
mov
jo
jbe
inc
push
sbb
sub
cmp
pop
cmp
aaa
add
popl
add
add
add
add
add
add
aam
inc
add
add
add
add
add
mov
add
in
inc
add
add
add
add
nop
mov
add
mov
add
sub
inc
add
add
add
inc
add
add
add
lahf
inc
add
add
add
add
insb
lahf
inc
add
sahf
inc
add
add
mov
inc
add
add
movsb
sahf
inc
add
add
xchg
sahf
inc
add
add
add
add
add
add
rorb
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
inc
mov
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
loopne
inc
add
cmpsl
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
and
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
xor
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
nop
add
add
add
add
xor
cmp
xor
xor
inc
add
add
cmp
sbb
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
js
sub
add
jae
and
push
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
add
outsb
add
add
popa
add
je
imul
and
inc
add
jae
popa
add
jae
add
bound
insb
add
jb
add
add
xor
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
and
dec
add
je
add
popa
add
je
imul
and
inc
add
jae
popa
add
jae
add
bound
insb
add
jb
add
add
sub
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
add
add
pop
add
add
add
pop
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
add
outsb
add
add
popa
add
je
imul
and
inc
add
jae
popa
add
jae
add
bound
insb
add
jb
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
insl
add
add
je
jae
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
