pushl
shlb
pop
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
lcall
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
jmp
ret
mov
sub
sub
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
jge
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
incl
mov
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
pusha
and
add
and
add
add
repnz
add
add
add
add
dec
and
add
and
add
and
add
and
add
add
nop
and
add
and
add
and
add
add
mov
add
in
add
add
add
ds
add
add
sub
add
add
add
add
mov
add
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
pusha
and
add
and
add
add
repnz
add
add
add
add
dec
and
add
and
add
and
add
and
add
add
nop
and
add
and
add
and
add
add
mov
add
in
add
add
add
ds
add
add
sub
add
add
add
add
mov
add
add
add
add
imul
outsb
je
outsl
insb
add
add
gs
inc
imul
insb
jae
gs
popa
insb
jne
add
inc
imul
insl
gs
insb
outsl
jae
add
add
imul
jb
je
arpl
add
push
push
je
imul
inc
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
dec
add
insb
outsb
inc
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
inc
add
outsb
arpl
dec
outsl
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
imul
outsb
je
outsl
insb
add
push
imul
je
add
add
popa
jo
gs
jb
jns
jge
dec
jo
outsb
dec
jne
gs
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
out
inc
gs
imul
bound
gs
add
roll
dec
gs
jo
jb
add
cmp
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jnp
inc
gs
push
gs
inc
js
outsb
je
add
add
ja
push
fs
inc
gs
push
outsl
outsl
insb
add
jle
inc
gs
imul
gs
add
add
ja
push
popa
arpl
jb
jne
add
jae
push
push
popa
je
add
addb
jae
push
arpl
add
inc
gs
push
outsl
insb
outsl
jb
xchg
dec
jo
outsb
push
push
popa
je
add
inc
gs
push
jns
push
imul
gs
push
gs
dec
gs
imul
gs
imul
gs
add
xor
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
inc
gs
jbe
imul
imul
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
or
push
push
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jnp
jnp
lods
lods
lods
add
cmpsl
push
mov
mov
mov
ret
lret
lret
int3
int
rcl
in
rcl
shl
rcl
iret
hlt
into
int3
into
hlt
enter
leave
enter
mov
mov
lods
stos
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
mov
lret
lret
lret
not
rcl
cld
fcom
fdivr
fcomp
xlat
xlat
aad
aad
ror
sar
int3
int3
int3
aam
rcl
iret
inc
vfmsub231pd
out
lods
scas
scas
iret
movsb
movsl
mov
dec
xor
and
add
push
add
add
add
add
add
add
add
add
stos
lods
stos
add
scas
sbb
mov
jnp
mov
sar
mov
lret
call
iret
sar
aad
fcomp
xlat
call
xlat
fdivr
aam
dec
into
int
int3
int3
int3
call
aam
dec
into
into
inc
sarb
mov
lods
lods
std
cmpsb
cmpsl
cmpsb
ljmp
push
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
int
call
rcl
fcomp
call
fcom
call
aad
dec
int3
int3
dec
leave
lret
dec
int3
int3
inc
inc
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
aas
aas
inc
sbb
or
push
xor
ss
cmp
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
sarb
enter
rcl
sar
aam
aam
aam
dec
iret
iret
dec
leave
inc
ret
mov
mov
ljmp
movsb
movsb
sahf
sahf
sahf
xchg
xchg
xchg
lcall
test
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jg
jle
jle
jle
jo
jo
bound
mov
cmp
inc
inc
mov
outsb
outsb
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
leave
lret
enter
ret
mov
mov
ljmp
movsl
mov
call
xchg
xchg
xchg
xchg
cwtl
lcall
lahf
cmp
or
add
add
add
add
add
add
add
add
add
add
add
outsl
outsb
outsl
add
pop
or
jl
nop
lea
incb
jp
jp
jl
jo
outsl
out
addr16
je
jae
jle
jg
js
jp
fs
inc
inc
cmp
pop
sbb
adc
adc
lods
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
cmpsb
lcall
incl
addl
xchg
xchg
xchg
lahf
mov
mov
mov
jp
js
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
lahf
in
mov
mov
addl
std
xchg
jge
jb
jno
jne
jae
jle
jg
test
jnp
addr16
cmp
and
jle
cmp
movsl
movsl
movsb
shrb
lods
lods
sti
stos
stos
lods
lods
stos
lods
test
stos
std
movsb
mov
fwait
xchg
xchg
xchg
decl
jle
js
jp
jnp
jnp
mov
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
push
pop
adc
movsb
test
mov
mov
xchg
xchg
xchg
incl
xchg
mov
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
push
push
prefetch
inc
inc
inc
dec
insb
insb
insb
jl
xchg
leave
fwait
lcall
fwait
lcall
mov
mov
mov
mov
lea
cltd
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jl
scas
cmpsb
lods
add
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
sahf
popf
pushf
std
movsl
mov
mov
in
nop
nop
xchg
in
xchg
jne
push
push
dec
add
add
or
or
sub
push
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
xchg
std
mov
call
mov
test
stos
test
pushl
movsl
scas
mov
xchg
test
roll
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
popf
cltd
fwait
decl
mov
call
xchg
xchg
xchg
xchg
pushf
pushf
pushf
movsb
movsb
mov
mov
xchg
xchg
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
pusha
popa
jne
jb
mov
jge
test
mov
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
xor
jbe
mov
movsl
mov
mov
mov
lods
lods
lods
mov
movsl
movsl
add
pop
pop
adc
mov
ljmp
popf
decl
call
xchg
xchg
call
cwtl
xchg
cltd
fwait
fwait
pushf
fwait
popf
lahf
sahf
mov
std
movsb
movsl
mov
out
nop
xchg
mov
xchg
aad
xchg
fwait
in
xchg
cwtl
out
lea
stc
xchg
test
std
xchg
jb
lcall
jmp
jl
mov
jp
mov
je
mov
outsb
ljmp
pcmpgtw
lods
or
or
pushl
lahf
scas
mov
stos
stos
pushf
movsb
movsb
movsb
and
add
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
lcall
lahf
lahf
mov
lcall
xchg
xchg
call
xchg
xchg
call
xchg
lcall
fwait
sahf
stc
lahf
xchg
sahf
cld
pushf
mov
xchg
imul
xchg
dec
js
cltd
cmp
cltd
sub
sahf
push
imul
mov
adc
test
pcmpgtd
stos
adc
scas
adc
mov
imul
adc
imul
jg,pt
rcrl
imull
movsb
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
sahf
call
popf
pushf
lcall
mov
movsb
jmp
xchg
xchg
decl
mov
xchg
xchg
xchg
jbe
fwait
jo
cltd
fs
xchg
dec
jns
xchg
cmp
call
pop
pusha
decl
or
pop
call
add
sahf
push
pop
jmp
sbb
mov
outsb
pushl
jo
mov
and
mov
and
aas
cmp
xchg
scas
mov
scas
scas
mov
sahf
sahf
lahf
add
add
add
add
add
pop
pop
adc
scas
mov
mov
cltd
popf
lcall
movsl
movsb
jmp
cmpsb
cmpsb
ljmp
cmpsl
cmpsb
lcall
orb
dec
jo
mov
imul
mov
pusha
decl
or
push
incl
add
lea
pop
decl
add
fwait
add
sahf
add
cmpsl
or
mov
outsb
pushl
sub
mov
sub
inc
sub
sub
cmp
enter
mov
cld
scas
mov
lret
movsl
dec
mov
movsb
movsb
add
push
push
adc
cmpsl
scas
ljmp
sahf
jmp
test
ljmp
stos
pushl
scas
lods
jmp
jno
decl
push
push
incl
pop
push
incl
push
incl
add
mov
push
decl
push
call
add
lahf
add
movsb
add
scas
adc
mov
aaa
cmp
cmp
dec
cmp
call
cmp
call
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
movsb
cmpsl
ljmp
lahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
decl
add
popf
add
mov
add
stos
add
jno
ret
cmp
dec
inc
call
inc
call
inc
call
dec
xchg
fmuls
fmull
ficoml
call
test
std
mov
mov
mov
lahf
sahf
or
add
add
add
add
dec
dec
adc
jl
lahf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
aaa
outsb
decl
call
adc
pop
decl
push
call
add
popf
add
add
cmpsl
add
test
popa
pushl
and
dec
dec
mov
aad
xchg
call
push
lcall
push
popf
jmp
push
pushf
fistps
jmp
pop
lahf
jmp
pop
mov
call
test
mov
cmpsl
cmpsl
jne
mov
sahf
add
inc
inc
adc
js
lahf
fwait
sahf
jmp
lahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
je
nop
and
and
xchg
and
xchg
and
xchg
sbb
nop
or
call
add
cltd
add
mov
add
lods
add
mov
data16
mov
xor
fbld
fbld
in
cmpsb
jmp
data16
jmp
addr16
ljmp
jmp
test
mov
cmpsl
cmpsb
mov
sahf
mov
add
add
add
inc
inc
adc
je
cltd
xchg
cwtl
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
cltd
das
outsl
lcall
daa
push
call
add
lcall
jmp
add
mov
pushw
adc
roll
fldt
jmp
outsb
stos
jmp
jno
call
jae
jmp
mov
in
jae
out
jbe
out
jne
in
jae
jmp
mov
mov
cmpsb
cmpsl
lcall
lahf
add
jg
cmp
imul
mov
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
jo
lahf
aaa
jne
lahf
aaa
jne
mov
push
callw
add
lahf
add
movsl
add
test
pusha
pushl
add
add
enter
fistl
jmp
jbe
call
jle
jmp
mov
out
cmpb
xacquire
push
test
ljmp
inc
mov
test
popf
sahf
pushf
daa
lahf
mov
mov
add
add
cmp
pop
pop
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
inc
mov
lcall
cmp
movsb
inc
jle
movsl
inc
jge
movsl
ss
lcall
lcall
pop
ljmp
add
mov
data16
mov
add
iret
daa
cmp
movsb
call
mov
push
pop
push
pop
push
xchg
sar
xchg
xchg
xchg
mov
out
mov
inc
ret
lods
lods
test
xor
pushf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
inc
mov
jge
lcall
cmp
dec
test
movsb
xor
cltd
punpcklwd
lcall
jmp
add
mov
arpl
mov
add
enter
xor
mov
in
xchg
vlddqu
lcall
negl
lret
sahf
int3
cld
popf
into
sti
cltd
lret
push
xchg
ret
fistpll
cli
mov
mov
lahf
sahf
sahf
aas
nop
add
add
add
xor
outsb
push
dec
dec
jecxz
pop
popa
call
mov
mov
mov
sar
ret
inc
mov
inc
mov
mov
ljmp
dec
mov
movsb
sub
lcall
jmp
pushl
add
rolb
dec
add
rorb
jne
fiadds
in
mov
push
movsb
into
push
movsb
int3
push
test
cli
test
sar
cld
test
test
sar
std
cmpsl
sar
negl
lret
dec
enter
mov
into
lahf
sahf
sahf
dec
xchg
xchg
xchg
add
fwait
lcall
xor
sub
or
bound
pop
xlat
jne
jo
mov
rol
ret
mov
ret
dec
leave
leave
inc
rol
mov
test
movsb
push
test
lods
push
mov
lods
dec
test
mov
add
jmp
add
mov
arpl
mov
add
into
add
add
ficoms
push
sahf
leave
sti
lods
sar
sti
mov
cli
mov
cli
scas
sar
mov
std
mov
mov
mov
mov
cld
mov
push
movsb
jmp
mov
dec
leave
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
add
sbb
outsb
outsl
outsb
mov
xlat
jmp
xlat
xlat
not
rcl
std
lret
int
dec
leave
leave
dec
lret
lret
lret
leave
inc
leave
leave
mov
scas
jmp
push
mov
lods
cmp
jmp
add
mov
arpl
mov
add
iret
add
fadds
jae
fiadds
jne
call
jb
cli
lods
sar
std
mov
fcos
cld
mov
fcos
std
mov
xlat
std
mov
fdivr
inc
mov
lret
jmp
mov
call
leave
into
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
jecxz
out
call
test
in
leave
fucom
fucom
fcmovnu
fcomi
xlat
fcmovu
cli
aad
xlat
std
into
ror
mov
push
cmp
sub
mov
add
mov
mov
add
leave
add
add
fldl
ja
in
jbe
out
xor
cli
mov
loopne
inc
loope
std
loop
inc
std
fdivrp
inc
fdivrp
dec
std
enter
dec
loope
sti
mov
leave
call
lret
iret
mov
mov
xchg
adc
add
add
std
incb
std
add
std
std
add
div
or
in
jmp
in
out
in
sub
in
in
dec
jmp
call
out
in
out
fcmovu
fucomi
ret
stc
lods
outsl
xchg
cmpsb
cmp
movsb
adc
jmp
add
mov
arpl
mov
add
int3
add
fadds
jb
fiadds
js
ljmp
sti
mov
in
dec
loop
dec
in
std
int
dec
jecxz
dec
jecxz
std
int3
loopne
shl
call
jecxz
call
in
std
shl
cld
ret
fcos
out
mov
fdivr
out
test
cmpsb
mov
xchg
cwtl
add
add
add
incb
std
incb
idiv
clc
add
repnz
hlt
repz
out
lock
pop
out
repnz
cmp
out
out
pop
fsubp
loopne
les
xchg
sti
sahf
and
jmp
add
stos
add
mov
fs
mov
add
roll
jno
fiaddl
je
jecxz
jp
jmp
jge
negl
cli
mov
shl
cld
shl
std
shl
std
shl
call
in
call
call
std
xlat
out
fucomi
fucompp
std
shl
push
aam
jecxz
fcos
leave
lret
lret
test
xchg
and
xchg
xchg
add
std
cli
add
stc
add
sti
stc
add
cmc
repz
aad
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
lret
add
roll
jo
fldl
ja
call
sbb
sti
xlat
jmp
std
fldl2e
fucomi
std
fucomi
fucomp
fsubr
fucomip
jmp
in
fucomip
cld
shl
push
jmp
aad
dec
iret
sar
lods
lods
stos
lods
xchg
xchg
xchg
outsl
outsb
outsl
add
add
mov
loop
add
mov
cltd
repnz
jmp
add
mov
add
int
outsl
call
add
loopne
jne
call
sub
std
shr
fsubrp
fucomi
std
fucompp
std
fldpi
std
out
cld
aad
cld
shl
sti
iret
loop
sti
iret
loope
stc
int
push
int
push
ret
out
mov
xlat
xlat
fdivr
mov
mov
lcall
add
add
add
add
enter
mov
mov
lcall
add
mov
arpl
mov
add
rolb
outsl
fadds
jb
loope
jns
call
xor
sti
enter
lret
loop
cli
stc
mov
aam
repz
sar
repnz
int
ljmp
ljmp
cli
call
fsub
cmc
loopne
fucomip
mov
mov
xchg
add
add
add
int
mov
sarb
mov
add
stos
add
mov
gs
mov
add
into
push
jno
rorl
jbe
fimull
js
loopne
cmp
ljmp
call
scas
std
loope
ret
cld
fbstp
mov
lret
ret
into
in
lret
xlat
shl
fcmovb
out
loope
jmp
call
popf
jmp
lret
leave
push
stos
lods
stos
adc
test
cmpsl
add
ret
rolb
rolb
sahf
stos
aam
dec
jg
pushf
sbb
cmpsb
sbb
scas
and
mov
jns
mov
inc
xchg
ret
stc
lret
arpl
hlt
rorb
mov
mov
enter
int
rol
lret
mov
int
mov
xlat
rcl
jg
fcmovnu
jb
fsubp
gs
jecxz
out
call
xor
div
mull
lock
or
mov
int3
add
add
add
rol
mov
mov
les
insb
lock
xchg
ljmp
mov
sarb
test
mov
mov
cmpsl
enter
lret
ret
enter
lret
jp
int
addr16
iret
push
rcl
rorb
aad
rcl
xor
daa
xlat
fcmovnu
sbb
adc
jecxz
push
loopne
in
out
jmp
add
sti
cmc
add
std
add
std
incl
incb
mov
mov
mov
mov
stos
mov
mov
mov
mov
mov
ret
push
ret
inc
rol
xor
int3
lret
rcl
and
aam
sbb
aad
adc
rorb
aam
aad
rcr
fadds
fcmovnu
add
add
jecxz
add
jmp
add
add
incl
mov
mov
add
ret
ret
sub
mov
mov
push
rol
or
enter
leave
leave
add
int3
leave
add
aad
add
fcom
add
add
fcom
add
aad
add
fchs
add
aam
add
loopne
add
add
out
add
repnz
std
incl
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
mov
mov
mov
test
cmpsl
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
ror
into
jmp
aam
cmc
aam
sar
iret
iret
iret
cli
int3
int3
int3
stc
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
into
iret
iret
xlat
xlat
xlat
call
xlat
aad
rcl
sar
iret
into
into
dec
int3
lret
mov
mov
cld
lods
stos
lods
icebp
cltd
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
jae
jae
fs
inc
dec
inc
cmp
sub
sub
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
rcl
sar
lret
inc
mov
pushl
test
lahf
popf
popf
cwtl
xchg
xchg
jmp
outsl
outsl
xchg
pop
push
pop
dec
add
add
add
add
add
add
jg
addl
addl
aam
imul
push
push
push
stos
push
insl
insb
push
pop
pop
cmp
aaa
cmp
jno
outsl
adc
mov
fstpt
mov
ret
mov
mov
mov
ljmp
pushf
pushf
call
xchg
xchg
cltd
fwait
lcall
dec
dec
dec
movups
add
add
add
add
add
pop
cltd
lcall
popf
xchg
lcall
addl
jmp
jns
sarb
jp
jns
jns
je
jae
push
push
push
cmp
jae
sahf
pushf
sahf
mov
scas
scas
repz
lods
scas
sti
scas
lods
scas
std
test
popf
pushf
call
test
call
mov
scas
jmp
scas
scas
leave
cmpsb
cmpsb
cmpsb
cltd
jae
jae
adc
adc
add
add
add
add
outsl
outsl
insl
pop
xchg
mov
lahf
lcall
mov
mov
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
jo
orl
lcall
mov
call
sahf
sahf
ljmp
scas
std
mov
scas
mov
xlat
cmpsb
mov
addb
add
add
add
add
popa
or
lods
mov
movsl
sahf
movsb
decl
lea
cwtl
xchg
xchg
std
popf
popf
mov
negl
jg
stos
push
push
push
jo
pop
pop
outsl
insl
outsb
outsb
xchg
subl
mov
std
xchg
mov
ljmp
jle
pushl
pop
mov
mov
jnp
mov
lods
stos
insl
test
add
add
add
add
pusha
or
mov
in
mov
nop
call
cwtl
xchg
lcall
cltd
lcall
sahf
pushf
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
mov
out
xchg
ja
notb
pop
jg
pushf
dec
jp
mov
ss
scas
daa
jb
scas
sbb
imul
sbb
mov
mov
mov
mov
jle
movsl
mov
add
add
add
popa
or
mov
in
movsl
test
cltd
cwtl
cwtl
lcall
mov
mov
decl
addl
cld
cwtl
pusha
test
xchg
dec
js
cmp
nop
daa
push
lcall
punpcklbw
test
ljmp
pushl
sbb
mov
and
pop
nop
mov
scas
scas
xchg
lahf
lahf
lahf
adc
add
add
popa
pusha
pusha
or
lods
mov
stos
mov
mov
ljmp
cmpsl
test
cltd
xchg
cwtl
decl
cmp
mov
decl
adc
xchg
push
decl
add
call
add
or
pushl
jl
shrb
dec
das
cmp
xor
xchg
inc
stos
mov
scas
scas
mov
cmpsl
test
sbb
add
add
popa
pop
pusha
or
movsl
stos
in
mov
test
mov
scas
pushl
mov
jmp
inc
jno
mov
pop
decl
or
xchg
push
decl
add
lahf
add
add
mov
insb
inc
ss
inc
mov
rolb
call
inc
mov
xlat
inc
xchg
fmuls
call
bound
stc
mov
mov
movsb
movsb
movsl
daa
incl
add
add
pop
pusha
pusha
or
mov
ljmp
mov
pushl
mov
test
call
sbb
decl
or
push
call
pop
ljmp
add
mov
dec
xchg
fcomps
fcompl
jmp
pop
sahf
jmp
pop
mov
jmp
insl
cmpsl
dec
cmpsl
mov
ret
movsl
xor
add
add
dec
pop
jl
jl
fwait
xchg
cltd
jecxz
sahf
mov
pushl
mov
mov
jmp
sub
lcall
and
xchg
adc
add
popf
add
cmpsl
add
scas
add
mov
xor
jmp
insl
test
call
jb
in
jno
jmp
cmpsl
mov
shrl
jg
add
add
add
dec
pop
outsb
insl
insb
bound
cwtl
xchg
pushl
mov
mov
mov
je
lcall
cmp
sahf
sub
lcall
add
mov
add
mov
inc
or
dec
xchg
jmp
jns
ljmp
push
test
cmc
xchg
fldcw
mov
push
lcall
add
sub
push
push
push
dec
pop
imul
mov
mov
mov
mov
mov
xchg
jmp
sub
fwait
push
pop
jmp
add
mov
gs
mov
adc
mov
push
xchg
ret
push
cwtl
push
cwtl
push
fwait
enter
lret
push
cwtl
jmp
stos
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
xchg
test
movsl
push
xchg
lods
dec
cmp
and
add
test
pop
pushl
add
lret
fsubs
cmp
jl
push
mov
iret
cli
test
sar
cld
stos
sar
cld
lods
sar
cli
cmpsl
lret
jmp
mov
dec
rol
test
popf
sahf
or
add
add
dec
dec
push
aaa
jae
je
stos
test
int3
out
into
int
leave
lret
lret
sti
enter
mov
mov
stos
popa
mov
stos
inc
cmp
adc
add
mov
arpl
roll
dec
add
fildl
xchg
push
xchg
sti
mov
std
mov
fdivr
std
mov
mov
sar
jmp
ret
scas
lods
lods
mov
add
add
add
add
or
rcl
dec
loope
fsubp
loopne
fcmovnu
fcmovnb
aad
fsubr
shlb
test
push
pop
ljmp
add
lret
call
add
loop
jl
repnz
mov
cld
inc
loope
dec
loope
dec
loopne
dec
loopne
dec
loopne
cld
out
mov
lret
mov
xchg
popf
pushf
popf
sbb
add
add
incl
std
incl
jmp
or
out
in
sbb
in
in
xor
loopne
loop
lds
mov
mov
add
mov
inc
add
iret
add
fildl
jbe
ljmp
cld
ret
cld
shl
std
shl
call
in
shl
std
out
std
fsubr
std
shl
push
xlat
fcmove
sar
mov
mov
add
std
incb
std
incb
std
incb
aad
push
mov
pop
mov
popf
or
pusha
pushl
add
rolb
outsl
filds
jbe
in
and
shl
std
xlat
out
xlat
call
cld
fsub
sti
aam
push
aad
mov
sahf
popf
das
add
add
into
int3
into
or
fs
mov
add
mov
add
roll
jno
loop
ja
out
xor
stc
int3
loopne
clc
lret
fdivrp
test
repz
xlat
repz
lock
out
sar
in
aam
jmp
shl
in
fucomp
leave
mov
das
std
std
add
add
add
push
mov
jb
or
imul
sbb
int3
and
sub
sti
loopne
lcall
mov
out
loop
leave
jmp
fidivrs
lret
leave
ffreep
iret
mov
jecxz
ficompl
in
call
rorl
mov
add
stos
stos
stos
add
xchg
mov
ljmp
nop
fidivrl
jle
rol
lods
mov
mov
ret
nop
aam
leave
jge
int3
insl
aam
iret
pop
rcl
rorb
fcomp
cmp
das
jecxz
fisubs
jecxz
icebp
adc
jmp
or
std
incl
incb
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
shrb
mov
pop
sarb
or
loopne
or
int
add
std
add
std
std
add
add
add
int3
into
pextrw
or
into
into
into
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
mov
xchg
enter
enter
rol
mov
mov
mov
stos
lods
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
lods
lods
stos
add
mov
jmp
aad
rcl
sar
int
into
std
mov
stc
mov
test
jle
push
push
pop
add
add
add
add
add
add
add
add
jno
jae
push
inc
inc
das
cs
and
add
add
mov
mov
cmpl
dec
int
call
aad
dec
int
inc
enter
mov
scas
jmp
mov
push
add
add
add
add
je
je
test
aad
outsl
outsb
ret
bound
outsl
outsl
outsb
jb
pusha
pusha
cmp
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cwtl
cwtl
lds
jb
es
add
add
add
jae
jae
fwait
xchg
lcall
xchg
clc
mov
test
addb
push
push
push
inc
mov
fwait
into
mov
mov
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcl
test
test
mov
mov
xchg
xchg
xchg
cld
popf
pushf
pushf
cmc
cltd
cwtl
cltd
in
test
push
imul
jge
mov
xchg
notl
mov
mov
cltd
pushl
jo
mov
scas
lods
push
stos
stos
stos
add
add
add
test
test
xchg
xchg
xchg
call
lcall
cltd
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
nop
arpl
std
lcall
ljmp
and
mov
insb
pushl
pushf
scas
lock
mov
imul
int
add
add
test
pop
lods
cmpsb
stos
test
sahf
popf
sahf
jmp
movsb
call
jge
lea
xchg
inc
jb
mov
imul
xchg
adc
xchg
or
mov
push
outsb
mov
and
jns
ret
aas
test
rcrl
subl
jae
push
mov
mov
cmpsl
ljmp
mov
lcall
sub
mov
pop
incl
add
lea
push
call
add
scas
adc
shll
dec
inc
mov
aam
call
push
xchg
dec
cltd
mov
mov
mov
mov
add
add
imul
movsb
mov
scas
pushl
mov
movsl
call
push
decl
or
xchg
add
mov
add
mov
push
xchg
fistpl
loopne
mov
jmp
data16
call
lcall
cmpsb
cmpsb
cmpsb
pop
add
add
popa
popa
popa
adc
popf
pushf
pushf
cld
mov
mov
mov
mov
scas
lcall
jo
lcall
lcall
add
mov
xor
jmp
outsl
stos
jmp
jnp
out
jl
push
jg
fistpl
mov
movsb
mov
add
dec
dec
dec
adc
addr16
mov
mov
mov
mov
ret
mov
fs
cmpsb
inc
jl
mov
add
test
add
ret
fisttpl
in
mov
push
xchg
push
xchg
stc
xchg
enter
inc
mov
cmpsb
sub
inc
aas
inc
adc
push
xchg
xchg
mov
inc
ret
ret
inc
mov
xchg
ljmp
sbb
movsl
add
mov
fs
add
aad
jns
in
outsb
scas
push
test
stc
lods
sar
cli
lods
sar
cld
scas
sar
lods
iret
in
scas
leave
inc
mov
cmpsb
ds
std
add
jo
inc
mov
mov
rcl
aam
rcl
aad
rcl
shr
lret
lret
mov
mov
jmp
arpl
les
push
aad
jno
call
nop
std
mov
inc
cld
ret
inc
icebp
mov
ret
test
jg
add
add
lods
lods
stos
add
in
in
or
out
out
loop
in
fcmovu
fisubl
movsb
daa
outsb
ljmp
add
int3
add
add
out
cmp
dec
in
std
iret
out
call
in
aad
shl
push
fdivr
aam
int
scas
lods
lods
popa
addb
add
std
add
std
push
lret
int3
shrb
sahf
sbb
lods
add
mov
add
loop
jp
repz
movsl
std
loop
cld
xlat
call
cld
aad
sti
aam
sti
shl
push
leave
fsin
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
arpl
mov
or
cmp
imul
out
mov
shl
jmp
shl
out
rcl
ljmp
scas
ret
vsqrtpd
add
add
rol
mov
stos
xchg
dec
and
shll
lret
mov
xlat
mov
lret
int3
outsl
fmul
into
pop
dec
in
fistpll
out
out
in
out
in
sbb
rol
add
mov
lods
arpl
mov
ret
lds
sbb
bswap
int3
int
aad
aad
std
std
incb
addb
add
add
add
sarb
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
mov
aaa
lahf
jmp
idivl
popf
jg
in
aas
inc
popa
nop
pop
inc
inc
mov
jns
add
mov
addr16
cltd
daa
sbb
xor
jb
outsl
xchg
std
fistps
ret
adc
xchg
ror
xchg
inc
pop
mov
cmp
aas
dec
push
pop
sub
adc
push
mov
shrl
outsb
xchg
iret
or
mov
popf
mov
pop
and
enter
mov
test
cmp
sub
cltd
mov
jg
test
add
leave
adc
or
push
or
loopne
sbb
dec
lretw
add
test
lock
hlt
push
ficompl
push
inc
and
xchg
lods
andb
pop
hlt
and
in
and
int3
sahf
movsl
inc
jne
imul
clc
mov
mov
push
loope
dec
pop
data16
inc
pop
in
popf
sbb
adc
push
mov
xchg
push
pop
dec
mov
mov
ds
jmp
lcall
jmp
dec
xor
cwtl
jecxz
push
dec
arpl
cmp
add
xor
inc
insl
lods
sub
push
movsl
shrl
je
sub
pop
jecxz
sar
adcl
cwtl
mov
pop
push
daa
mov
add
sub
mov
jb
lcall
pop
in
jle
sbb
subw
je
gs
mov
in
or
mov
roll
or
scas
mov
movsb
dec
ret
lock
push
clc
inc
out
inc
lods
xchg
repz
mov
rcr
dec
ficoms
dec
add
into
arpl
sub
in
and
loope
sbb
rcr
insb
push
dec
mov
cmp
imul
imul
xor
pop
loopne
adc
sar
sub
sbb
stc
insl
mov
lods
mov
imul
lds
cli
js
cmpsb
rcll
inc
adc
sbb
outsl
adc
push
scas
addr16
adc
push
or
cmp
es
push
adc
daa
fmull
mov
movsb
and
rcrb
sub
add
daa
and
adc
lds
lret
sub
daa
mov
xor
adc
test
jle
mov
xchg
mov
loope
inc
lods
pop
mov
in
xchg
sti
nop
inc
jno
xlat
orl
out
xchg
dec
jb
jns,pn
in
adc
push
les
pop
add
push
mov
imul
inc
mov
dec
or
push
mov
adc
jb
divl
popa
jl
inc
shll
xchg
jg
sub
or
leave
into
mov
add
cmp
fs
daa
jb
and
pop
shrb
and
out
outsl
jne
es
test
stc
pop
add
push
mov
pop
neg
mov
in
lods
arpl
xchg
pushf
cli
push
loop
int
jb
sbb
adc
mov
xor
sub
sub
movsl
push
mov
pop
dec
adc
push
pop
popa
aas
mov
je
sbb
mov
fnstenv
ret
popa
cmc
je
test
insb
inc
push
cmp
aam
call
adc
jl
arpl
mov
xor
popf
adc
sub
ljmp
lahf
aaa
adc
nop
daa
adc
push
jmp
mov
clc
addb
mov
and
les
sub
cwtl
sbb
sbb
mov
ja
push
pop
push
icebp
jg
popf
mov
outsl
das
inc
push
pop
lods
dec
jg
xchg
xchg
xor
lods
gs
xor
cmp
scas
nop
and
mov
pop
dec
dec
sbb
notrack
push
xlat
rep
xor
xor
movsb
mov
jecxz
mov
mov
mov
cli
clc
dec
pop
sbb
sbb
xchg
out
inc
or
pop
mov
xchg
jnp
shrb
filds
or
shrb
and
test
dec
adc
sar
stc
push
adc
subl
inc
cld
fs
mov
shlb
and
sahf
or
mov
daa
or
cs
sahf
pop
cmp
jg
xchg
cmp
cmp
and
jmp
or
pop
inc
inc
idivl
jle
cmpsl
sbbb
inc
push
call
fwait
pushl
sbb
test
scas
daa
pop
and
loopne
pop
sti
jne
lret
mov
idiv
insb
leave
cmp
imul
push
xchg
rorb
subl
decl
sub
orb
fcmovnbe
mov
in
ja
clc
pop
dec
mul
lods
inc
push
pop
outsb
and
mov
test
push
nop
into
dec
mov
push
sti
push
fnsetpm(287
add
in
mov
cmc
add
mov
push
xchg
clc
lods
cs
and
scas
or
lahf
pop
scas
clts
jle
fsubl
pop
notb
cmp
out
xlat
test
mov
dec
and
outsl
loope
fildl
jnp
pop
add
int
out
ds
add
jns
fsubrs
fs
dec
sbb
jl
inc
call
jns
fdivl
negb
add
mov
dec
scas
mov
pop
add
sub
mov
stos
sbb
shrl
or
repz
pop
and
and
sub
xchg
jb
pop
xchg
sahf
mov
lahf
cli
bound
push
sbb
mov
push
or
xchg
aas
pop
cmp
sbb
out
sbb
jbe
jle
aam
dec
lahf
xchg
sub
outsl
repz
ret
add
jbe
and
push
cltd
std
xchg
lret
jne
clc
cmpsb
in
sbb
cli
ds
outsl
sbb
out
shrl
mov
cmpsb
cltd
dec
mov
mov
jp
fnstcw
insb
loope
mov
cs
sub
push
movsb
aaa
lahf
xchg
sbb
sahf
loopne
push
int3
or
xchg
fcoms
pop
das
fists
sbb
out
lods
mov
mov
insl
add
out
call
test
sbb
mov
ss
addr16
cmp
sub
pop
lock
ja
or
cs
sub
lock
sub
xorb
jne
shrl
xchg
shrl
sub
xchg
out
xchg
or
movsb
outsb
into
sub
decl
dec
loope
loope
loopne
jae
jmp
xchg
mov
movsl
cmp
fsubs
pop
sahf
sub
pop
pop
mov
fbstp
add
mov
pusha
mov
cmpsb
and
out
loopne
xor
imul
out
rol
inc
xor
push
and
icebp
test
movsl
icebp
mov
bound
es
gs
ss
cmpsb
mov
mov
fstl
inc
push
out
xchg
cmp
test
jne
ret
outsb
rcll
test
mov
outsl
mov
sbb
shl
cs
rcll
mov
jp
pop
out
data16
shrl
xchg
mov
fistl
jae
mov
pusha
xchg
sub
addr16
dec
loop
aad
test
cmp
imul
mov
mov
fbld
xor
pop
fs
addr16
push
test
js
jno
sbb
fdivr
xchg
or
mov
mov
sbb
pop
dec
jge
shrb
iret
pop
lock
mov
adc
jg
inc
mov
popf
xor
hlt
dec
in
mov
push
out
inc
adc
into
pop
and
dec
imul
lahf
push
pop
cmp
sbb
mov
xor
jo
add
sbbb
and
xchg
movsb
in
sub
cmp
daa
mov
mov
test
mov
dec
dec
mov
in
pop
push
jge
dec
jg
leave
jo
push
ljmp
xchg
sub
and
adc
mov
and
imul
cmp
xchg
popa
pop
xor
dec
add
imul
add
pop
ficoms
testb
test
add
scas
or
ss
xchg
jecxz
add
scas
lea
notb
lret
stos
inc
jnp
in
test
test
push
or
pop
inc
das
addr16
mov
ret
mov
clc
out
aam
xor
mov
jge
out
pop
fstps
jp
dec
loope
and
jp
or
lods
jge
or
sbb
shlb
lret
inc
mov
mov
pop
test
ds
push
scas
inc
fdivl
and
out
add
aaa
jge
rcr
outsl
or
lods
xchg
sub
xor
loopne
mov
cmpsb
cmp
xchg
mov
push
out
jl
loopne
mov
je
or
setbe
mov
stos
xchg
sub
lcall
mov
pop
pop
cmc
jnp
jmp
dec
dec
pusha
repz
aas
xor
data16
mov
or
stos
lret
aam
out
test
scas
jbe
and
sarb
push
ljmp
mov
arpl
scas
inc
pop
icebp
outsb
add
imul
scas
clc
mov
std
mov
fidivs
orl
les
out
cmpsl
inc
or
xor
push
lock
mov
push
adc
shlb
jl
outsb
outsb
fildl
cld
xor
sbb
pusha
cmpsl
movsl
mov
dec
es
stc
nop
xchg
sub
xor
jo
mov
xchg
dec
insl
fbstp
loop
cmp
xor
lds
adc
clc
out
test
and
mov
popa
sarl
jge
lods
jp
lahf
popf
into
test
test
mov
mov
hlt
lods
inc
out
and
jns
insb
add
dec
out
test
jo
lahf
and
inc
rcrb
out
out
xchg
rorl
les
pop
xlat
test
mov
push
dec
loopne
or
arpl
dec
arpl
es
mov
ret
sub
mov
and
jne
fistl
cmp
push
add
xor
pusha
jle
arpl
or
inc
fcom
xor
cmpsb
mov
les
sbb
xlat
push
leave
sbb
arpl
cmpsl
ds
mov
lock
jae
adc
sub
push
xor
test
push
out
cmpsl
das
lret
enter
or
cmp
data16
int3
shrl
movb
and
fiadds
shlb
jne
bound
pop
inc
fcoml
cmp
push
imul
cltd
pop
dec
scas
inc
divb
and
dec
in
shrb
lds
jae
in
scas
xor
roll
inc
fldenv
dec
loopne
subl
stos
inc
scas
icebp
adc
and
mov
ret
leave
mov
jp
test
adc
clc
xchg
sub
insl
lds
xor
dec
fs
test
outsb
ds
jg
shr
test
sbb
lret
int3
movsb
jmp
dec
fisttpll
push
dec
fdivl
jecxz
push
sbb
je
test
lahf
ss
jle
mov
dec
mov
pop
mov
arpl
jno
loop
out
test
add
mov
int3
xchg
pop
scas
push
arpl
pop
daa
sbbl
cmc
enter
xor
sub
dec
in
dec
jp
inc
test
loope
push
jns
jmp
gs
in
stos
xchg
clc
inc
dec
in
sbb
and
or
sbb
into
gs
movsl
cmp
shlb
loop
in
mov
outsl
jns
pushf
clc
shlb
xor
inc
jge
in
test
lahf
jns
adc
mov
mov
mov
dec
out
fcom
imul
jmp
rcr
or
pop
push
std
data16
out
cli
pop
icebp
push
adc
frstor
adc
ss
test
rclb
aam
mov
fmull
mov
pusha
out
xor
fists
push
out
add
fsts
xchg
and
in
and
mov
pop
sub
jp
pop
mov
push
shrl
pop
push
jmp
out
adc
outsl
js
popa
mov
xlat
andb
cltd
adc
fbstp
test
sbb
mov
out
into
push
out
mov
hlt
mov
outsb
adc
in
sbbl
ja
enter
es
add
mov
popf
mov
push
out
add
icebp
rclb
add
sahf
arpl
enter
and
addr16
or
sbb
xchg
sub
sbb
mov
mov
lods
push
in
push
pusha
xchg
sub
mov
push
cmpsb
ret
ss
jecxz
mov
jmp
mov
xchg
mov
dec
dec
in
fwait
sti
xchg
or
cs
mov
rorl
loop
push
rcr
jbe
nop
ds
out
pop
fdivrs
fistps
dec
loope
or
lock
aas
adc
shrb
mov
data16
mov
out
xchg
loope
loopne
ljmp
inc
fsubrp
insl
mov
testb
ljmp
xor
mov
and
ljmp
fistpl
ret
loope
xchg
loop
lret
push
jae
fs
cmpsl
xchg
dec
loope
push
shrb
es
cwtl
inc
xor
xchg
sahf
xor
and
bound
aad
adc
bound
mov
push
xor
cmc
out
je
pop
sbb
imull
mov
mov
dec
fwait
xor
aas
loope
gs
adc
in
ss
push
mov
jae
lcall
lock
int3
arpl
pop
cmc
xchg
push
cmp
inc
and
dec
cmp
push
rolb
add
mov
and
xchg
sub
mov
pop
cmc
lea
ficomps
pop
and
lods
test
jmp
sbb
and
dec
xchg
test
jo
jae
lods
xchg
je
daa
iret
stos
inc
in
dec
icebp
mov
lret
fwait
stc
add
xor
xor
or
arpl
jae
nop
daa
adcb
adc
test
int3
or
mov
ret
pop
adc
mov
test
xchg
fnstenv
lock
mov
popf
xor
aad
lcall
dec
in
rcll
mov
cltd
and
mov
fidivs
repnz
mov
lods
inc
int
xchg
sub
out
mov
fsts
aam
movsl
cli
lods
inc
rol
xchg
sub
repnz
out
mov
mov
lahf
rorb
sub
popa
fs
arpl
jecxz
mov
sub
add
xor
les
push
xchg
xchg
mov
testb
xchg
stc
or
push
mov
jnp
sub
dec
jecxz
dec
pushf
xor
jb
or
outsl
push
int3
in
sbb
popf
push
pop
pop
sub
xchg
ja
imul
add
fsubr
cmp
ficoms
in
hlt
clc
sbb
enter
fsub
jnp
icebp
and
rorl
sub
loop
jmp
add
dec
in
and
insb
add
js
pop
dec
pop
fbstp
outsb
mov
and
inc
aad
push
xchg
loopne
ret
jbe
mov
loopne
mov
jns
cwtl
aam
xchg
push
mov
es
mov
out
adc
notl
jge
push
sbb
dec
leave
pop
scas
mov
dec
mov
lret
mov
add
js
sbbb
shlb
jns
mov
clc
sbb
hlt
mov
xchg
test
mov
or
mov
cmp
bound
test
jo
bound
pusha
cli
enter
adc
dec
popa
sbb
push
xchg
mov
cmc
push
dec
and
sbb
dec
dec
mov
ljmp
sbb
mov
ficompl
dec
add
roll
pop
xor
cmpsb
aas
inc
mov
or
mov
jbe
adc
pop
xchg
test
adc
movsb
xchg
lock
cwtl
mov
sti
and
mov
xchg
outsl
lret
sbb
cmpsb
xor
ficoml
mov
or
cmc
sub
sbb
lock
ret
aam
loopne
and
leave
mov
dec
neg
sbb
fsubrs
push
insl
sbb
bound
in
orl
xlat
cmp
outsb
xchg
dec
out
test
jnp
sbb
out
pop
lahf
ss
ret
out
clc
and
test
into
imul
push
stc
and
enter
xchg
pop
int3
or
outsb
add
and
popa
test
in
and
bound
dec
enter
insb
cmp
pop
sti
ret
mov
sahf
xor
push
add
test
je
sti
arpl
mov
dec
mov
popa
popa
inc
mov
aaa
jl
nop
outsl
cmpsb
cmp
imul
andb
pushf
sub
addr16
mov
fistl
mov
loopne
test
push
fisttpl
js
inc
dec
pop
or
cmp
pop
fidivs
sub
mov
xchg
mov
xor
cmp
lds
insb
out
mov
adc
pop
cmc
jmp
add
andl
or
xchg
sub
jno
fldenv
jns
cli
lods
inc
sub
add
outsl
pop
cmp
nop
nop
adc
jecxz
popa
clc
addb
ja
ljmp
mov
cmp
sub
lds
or
ja
lret
xlat
outsb
mov
mov
mov
loopne
push
lods
push
mov
leave
sub
pop
cmp
pop
out
outsb
loope
idiv
cmp
sbb
or
cltd
cmp
and
jbe
jbe
inc
imul
push
jmp
pop
movsb
dec
in
jge
int
testb
pusha
outsl
push
dec
sbb
dec
imul
in
test
xorl
push
test
loope
in
leave
xor
mov
sub
lcall
out
add
pop
jne
das
movb
or
push
xchg
dec
loopne
jno
mov
mov
mov
mov
dec
loop
inc
aad
leave
pusha
pop
inc
addr16
xor
mov
adcb
xchg
push
cld
gs
inc
sbb
hlt
mov
pop
aam
jno
stos
cmc
mov
jmp
mov
insb
add
adc
adc
mov
ljmp
enter
jmp
push
iret
data16
int
mov
dec
inc
xlat
push
mov
mov
cmc
cmpsb
cmp
fsts
and
daa
lods
ja
mov
cmp
push
sub
adc
mov
icebp
enter
hlt
mov
ja
stc
test
adc
pop
mov
mov
cmp
pop
scas
stc
es
or
shrl
in
cld
xlat
sbb
les
in
pop
cmc
loopne
pop
icebp
push
push
lods
mov
shlb
mov
push
std
mov
dec
loopne
ja
or
lods
and
xor
loope
rcl
jae
stos
jno
sbb
js
jbe
dec
jp
cmp
imul
andl
cltd
movsb
iret
cmp
dec
dec
in
push
sub
test
dec
push
xor
repz
mov
push
movsl
sbb
inc
cmp
fiadds
mov
xor
cmp
pop
sub
push
mov
lret
dec
loope
lret
or
lds
mov
or
jl
pop
out
lock
jns
iret
adc
mov
ret
out
aam
test
and
xchg
cs
inc
hlt
mov
pop
into
mov
mov
fucomi
sbb
pushf
xor
aad
push
out
stc
nop
push
pop
mov
into
inc
ret
in
push
fidivl
mov
mov
out
sub
jno
aam
cmp
xchg
sub
aas
mov
inc
stos
ds
push
inc
xlat
les
in
shlb
xlat
cmp
fs
add
xlat
xchg
jle
push
in
out
xchg
add
jnp
pusha
mov
test
push
fnsave
ljmp
sub
ror
gs
or
pop
cmp
shrl
pop
mov
and
mov
sub
mov
dec
or
das
lods
inc
aaa
test
dec
pop
stos
mov
fsubrl
aam
jge
rclb
lahf
ss
stos
inc
xlat
add
jb
clc
scas
inc
push
mov
fs
add
xor
jg
jg
lret
bound
mov
mov
insb
push
adc
xor
enter
pop
mov
mov
jge
jne
out
xor
xchg
sub
push
adc
fld
mov
imul
jae
dec
clc
jg
repnz
rorb
sbb
cltd
add
lods
xchg
mov
pop
testb
jns
mov
filds
notl
push
inc
fldt
leave
xor
fists
inc
ficompl
mov
pop
mov
cmp
inc
fidivrs
cmpsb
sub
mov
xor
lahf
fdivrs
sbb
imul
cmp
test
call
jge
push
popf
stos
inc
adc
xor
adc
sbb
or
lods
adc
sbb
lods
hlt
cmc
mov
push
push
call
add
xor
jecxz
in
sub
jmp
insl
and
shrl
or
mov
pop
lahf
adc
jb
fimull
or
lods
mov
dec
loop
testl
cmp
imul
push
sub
mov
je
ds
inc
jecxz
fstpt
or
and
push
sbb
daa
push
jno
xchg
sahf
xor
fistpll
pop
repz
jp
test
pusha
push
inc
into
gs
xchg
and
movsb
out
xchg
mov
sub
add
inc
shrl
mov
imul
sub
jnp
iret
ss
dec
stc
nop
cmp
pop
xchg
sub
cmpsl
push
fidivl
xor
xchg
test
lock
pop
push
in
xchg
lret
mov
fsts
mul
jmp
sub
imul
or
cs
sahf
sbb
mov
dec
xchg
dec
loop
push
montmul
cmpsb
xchg
xchg
xchg
test
adc
mov
out
test
iret
jns
out
ret
in
add
xchg
into
test
add
xor
jbe
cmp
cmpsb
pop
mov
mov
iret
data16
movsl
cmp
mov
outsb
cli
jle
mov
add
add
push
rcrl
inc
cmpsl
and
push
xchg
pusha
cld
xchg
push
das
lcall
lahf
mov
punpcklwd
push
or
je
in
or
sub
es
fsubl
stos
xchg
pop
push
in
dec
xchg
sbb
ucomiss
pop
imul
pop
cmp
and
pop
andl
test
in
call
jl
inc
fimull
pop
fwait
jmp
xchg
and
call
xchg
mov
jb
dec
mov
push
push
pop
dec
jno
fldt
xchg
push
js
out
push
mov
sbb
in
popa
das
std
xchg
popa
dec
adc
push
dec
filds
in
stos
push
les
mov
push
and
xchg
cmp
mov
ret
rorl
mov
and
sbbb
inc
mov
jne
cmp
stos
in
lods
xchg
sbb
dec
clc
dec
mov
and
jnp
daa
cld
in
fiaddl
std
push
fisttpl
fwait
mov
jno
jno
enter
jp
je
test
xchg
mov
mov
cmp
rorl
lds
push
xor
dec
push
mov
enter
mov
std
imul
xchg
test
push
imul
sub
imul
sbb
dec
pop
add
or
jae
jle
jecxz
outsb
mov
ljmp
test
push
sub
mov
vshufps
fisubl
pop
in
lods
and
and
sbb
mov
xchg
insl
cmc
jp
roll
pop
repz
sbb
pop
mov
or
mov
call
xor
mov
lcall
cwtl
psubusw
sub
xor
cmp
pop
scas
mov
xchg
jnp
divl
mov
scas
pop
jl
insl
aad
dec
shll
repz
or
sbb
jbe
jle
dec
xchg
mov
jmp
lcall
dec
sub
push
movsl
stos
dec
sahf
mov
mov
sub
nop
daa
xchg
add
jns
add
scas
stc
nop
mov
jmp
test
call
mov
xor
push
stc
mov
stc
repnz
lea
mov
cld
jbe
mov
mov
in
mov
js
jmp
test
aas
shlb
out
pusha
xlat
outsb
test
sbb
outsl
cmpsb
jecxz
cld
nop
pop
cmc
rcrl
or
insl
sbb
sti
and
iret
test
jbe
movb
sub
cmp
pop
sub
nop
ds
push
push
or
or
ljmp
mov
add
sub
sub
and
cmp
jp
mov
lret
fwait
cmpsl
ds
jecxz
lock
fidivl
adc
jbe
inc
cmc
push
push
andb
push
popa
lea
gs
dec
leave
inc
and
lods
inc
push
shll
fs
dec
rclb
mov
aam
or
dec
cwtl
inc
and
mov
mov
loope
fldcw
push
fstpt
or
mov
mov
lcall
jl
jo
lret
dec
lahf
imulb
cmc
or
jae
sub
gs
cmp
sti
cwtl
pop
test
mov
testl
cmp
mov
into
das
pop
aad
fstl
ficoml
cmp
lods
leave
je
sti
int
test
cltd
inc
pop
out
dec
xor
jb
mov
stc
shlb
ret
push
cli
xchg
inc
sub
mov
jns
sbb
test
push
sbb
pop
movsl
push
je
xchg
xchg
in
lds
daa
insb
mov
ljmp
pushf
repz
push
inc
fildl
jp
ja
sar
xchg
imul
mov
jbe
imul
and
inc
push
push
test
mov
test
popf
and
rcrb
inc
or
jnp
cltd
jp
sarb
jns
shlb
int3
jle
xchg
dec
in
enter
fsubr
sbb
cmp
add
dec
xor
inc
fildl
icebp
mov
repnz
xor
lods
or
jbe
std
dec
loope
add
cwtl
dec
adc
pop
dec
loope
mov
aas
xchg
cmpsl
cmpsl
xor
or
push
ret
sub
iret
aam
jge
test
icebp
cwtl
aaa
inc
js
pop
in
mov
jg
pop
pop
adc
jg
push
sbb
or
outsb
mov
fisubs
mov
jo
cs
dec
xchg
nop
andb
test
int3
in
icebp
js
popf
fmuls
sub
fisubrs
loop
in
dec
mov
sub
jb
add
mov
push
imul
pop
arpl
or
mov
cmc
ljmp
scas
jecxz
shrl
mov
dec
rcll
mov
dec
hlt
mov
jno
xchg
jns
dec
in
fadds
pop
jp
call
xlat
jne
shlb
daa
hlt
mov
pop
sub
mov
dec
pop
mov
and
adcb
or
sub
jns
jnp
mov
mov
lahf
adc
inc
mov
pop
add
rolb
xchg
jo
sbb
sbb
mov
push
sbb
sbb
or
daa
jne
xchg
int
repz
mov
mov
push
add
xor
aam
xchg
adc
dec
lock
push
ret
pushf
xor
pusha
mull
jp
add
cmp
push
das
push
dec
in
push
fildl
repnz
mov
movsb
mov
or
xchg
xor
mov
mov
mov
push
xchg
mov
pop
mov
int
mov
fbstp
test
decb
jno
pop
in
dec
dec
cmpsb
inc
mov
dec
loope
xchg
cmpsl
leave
dec
out
stos
or
inc
in
clc
ret
imul
fs
xlat
lock
push
mov
inc
sub
sti
in
imul
inc
dec
jecxz
jmp
nop
push
sub
adc
leave
and
or
lock
leave
inc
out
sbb
outsw
cli
lea
rcrl
push
mov
cld
push
push
movsl
leave
mov
sub
push
pop
iret
js
mov
mov
stc
repnz
into
cmp
add
pop
sbb
jle
push
sti
pop
jbe
scas
jg
gs
js
rol
rcr
mov
sbb
popa
rcrl
jae
push
mov
xchg
xor
in
rclb
shrl
insl
mov
xchg
push
sub
ficomps
lcall
mov
adc
dec
and
icebp
mov
ret
aam
int
cs
xor
cmc
xchg
cmp
popa
ss
sbb
test
pop
and
jnp
fildl
imulb
xchg
push
push
mov
dec
rcll
push
popf
inc
push
fcompl
movsb
ja
fisubrs
cmc
mov
fldenv
insb
lock
lahf
xor
pop
icebp
adc
sbb
fdivrp
jecxz
fidivl
inc
mov
inc
fstps
enter
xchg
sti
fnstcw
fnstcw
lods
inc
lods
mov
inc
into
mov
lock
popa
movsb
adc
into
jg
push
pop
fucomip
jb
xchg
or
jmp
add
test
cmp
das
sbb
lret
adcb
test
out
ja
stos
cmpsb
and
jne
test
fcomp
pop
adc
xchg
clc
and
ficoml
pushf
sbb
sub
je
shll
xchg
and
test
sbb
stos
repz
enter
fsubrs
fs
jnp
clc
mov
insb
out
rcrb
add
cs
out
add
sub
cwtl
fisubrs
fistpl
sub
fistpl
xchg
inc
scas
imull
push
cltd
mov
testb
cmp
jns
loope
mov
fidivs
call
scas
dec
sbb
mov
es
popf
fnsave
rorb
push
push
mov
jne
jns
add
popa
loope
lods
xchg
sub
xchg
xchg
push
xor
add
pusha
stos
push
adcl
add
lcall
cmc
or
scas
mov
in
pushf
leave
sbb
in
loop
or
in
loop
fisubl
push
jge
lret
shl
lcall
addb
xchg
data16
mov
jo
sub
shll
bound
or
xlat
out
loopne
xchg
test
lds
xor
ss
inc
in
call
rcrl
into
icebp
mov
sub
xchg
push
js
imul
adc
je
xchg
cmpsl
fs
dec
jge,pt
sbb
push
xchg
inc
cmpsb
xchg
mov
dec
rolb
gs
popf
or
mov
xlat
aas
jmp
lcall
arpl
testb
pop
xor
or
jmp
adc
iret
sti
dec
shrl
mov
sub
jne
cmp
adc
xchg
into
pushl
lret
pop
shrl
jmp
mov
xlat
hlt
push
lods
pop
jge
scas
ljmp
push
aas
fmull
jl
mov
sbbb
bswap
pop
dec
xchg
movsl
sub
jbe
inc
jne
jmp
sbb
xchg
and
ja
imul
adc
es
fnsave
push
mov
nop
mov
shlb
jmp
cmc
push
adc
data16
lret
insl
inc
adc
int
dec
adc
adc
es
fwait
mov
xor
push
and
pop
pop
sbbl
cmp
inc
mov
les
xor
or
ret
push
test
add
test
and
lcall
outsb
push
in
call
je
popa
clc
mov
jp
mov
pop
adc
jnp
shr
aam
mov
into
cwtl
das
add
call
and
and
jmp
pop
inc
fbstp
xor
ljmp
and
rcl
movsl
mov
scas
sbb
xor
aad
mov
test
jb
dec
shll
es
push
push
test
mov
stos
insl
hlt
add
jp
push
inc
pop
add
std
mov
das
xor
jecxz
outsl
ret
loopne
out
fsubrs
xor
in
push
pop
pushf
push
ds
scas
outsl
sub
jmp
jp
and
mov
loop
mov
mov
jo
out
sbb
fcmove
out
jno
or
xchg
push
push
adc
outsl
into
mov
push
or
bound
cmp
call
lds
sbb
push
and
out
jle
push
xor
xor
fidivs
aas
adc
outsb
add
fwait
popf
cmp
into
mov
sbb
in
xor
jecxz
popf
paddusw
mov
cmp
sub
lock
or
cmc
mov
cwtl
mov
and
dec
jns
hlt
in
cli
pop
lea
loopne
sbb
mull
div
pusha
lods
lret
repz
test
push
and
test
sub
bound
or
cmp
daa
xor
stc
add
mov
cmp
int3
les
clc
mov
dec
adc
aas
pop
and
jl
mov
xor
test
mov
test
fisttps
data16
dec
pop
fwait
orb
sarb
or
in
je
inc
insl
fisttps
pop
mov
xchg
sbb
jmp
popf
inc
xor
les
int3
nop
ja
inc
out
cwtl
sub
fiadds
xor
insl
subb
pop
sahf
or
insl
pop
sub
jno
push
enter
sbb
inc
imul
stos
xlat
push
out
mov
push
fstpl
add
mov
data16
lahf
jae
pop
jmp
push
sub
xor
out
and
sbb
out
or
std
pop
test
jno
pop
jge
repz
mov
dec
loopne
jbe
mov
adc
xchg
out
mov
inc
push
das
loopne
xchg
mov
fsubrl
adc
in
insb
cld
dec
adc
pop
fwait
aam
test
jl
int3
out
faddp
sub
pop
fsubr
lods
testl
scas
pop
repnz
xchg
mov
xchg
out
dec
out
out
cmpsl
adc
inc
cltd
xlat
lret
mov
mov
in
sbb
xor
ja
decb
pop
shll
or
dec
testb
out
mov
xor
pop
pop
movsl
mov
pop
lea
jle
jecxz
sbb
mov
and
sarb
andb
cli
lret
mov
mov
or
mov
fdivl
mov
sub
dec
aas
dec
add
sbb
mov
mov
jle
in
fistl
push
into
pop
es
aad
push
sbb
fsubr
jecxz
push
xchg
add
mov
xchg
out
or
jb
test
cmp
dec
mov
ret
pop
js
test
inc
dec
outsl
pushf
inc
dec
dec
rclb
and
stos
sub
push
and
pop
mov
xor
sbb
dec
icebp
mov
pop
addr16
or
mov
sub
push
jmp
lds
test
sbb
orl
stc
out
into
sbb
cmp
xor
push
xor
in
mov
popf
sbb
iret
dec
xchg
cmc
xor
adc
ret
mov
call
mov
push
xor
adc
inc
push
mov
mov
push
lret
lods
dec
jo
push
adc
and
dec
jle
mov
and
push
jmp
pop
mov
cmp
in
add
sbb
and
sbb
lret
sub
mov
xor
outsl
or
stos
nop
loopne
or
and
xchg
mov
sub
inc
ret
mov
xlat
outsb
sti
sbb
leave
jnp
push
or
test
imul
pop
in
loope
mov
cmp
adc
inc
ret
xchg
jb
add
loopne
dec
mov
adc
mov
inc
xlat
outsb
fisubrl
int3
jp
mov
mov
jne
pop
repz
jbe
mov
sub
je
adc
testl
jmp
or
sub
imul
adc
push
inc
sbb
iret
xorl
es
out
sahf
pop
sub
lcall
insl
frstor
push
jg
dec
push
add
aas
jns
loope
mov
add
mull
mul
fisttps
or
shr
add
sub
jmp
dec
mov
fbstp
fdivrl
lret
shlb
popf
xor
js
sbbl
push
ds
mov
push
pop
in
inc
add
push
jae
sub
jbe
add
js
fcoml
addb
jmp
fldl
mov
pop
jmp
test
repnz
push
in
mov
dec
out
popf
xlat
filds
xchg
testl
jae
mov
popa
sbb
outsl
xchg
mov
cmp
outsl
loope
ljmp
in
cs
adc
lret
mov
sub
push
stos
xchg
xchg
cmp
sbb
pusha
dec
or
das
push
aam
test
dec
inc
cs
outsl
ljmp
cwtl
loopne
mov
mov
gs
addr16
mov
pop
cmc
pop
hlt
les
lods
sub
inc
shrl
mov
sub
or
cld
lds
sub
inc
dec
lcall
je
mov
stos
cltd
or
test
mov
mov
fildll
lret
psubsb
scas
mov
sub
adc
leave
int3
leave
dec
rclb
mov
outsl
mov
mov
insl
xchg
xor
andb
sahf
imul
es
sub
mov
stc
fdivs
sti
cmpsl
push
popf
fcomps
jge
mov
pop
test
push
test
adc
add
out
xor
adc
outsl
push
push
pop
mov
sbb
cmpsl
test
sub
out
insb
jae
mull
mov
xor
mov
dec
jl
ret
mov
xchg
rcll
mov
fwait
movsb
jmp
movsb
jmp
mov
sarl
mov
scas
dec
pop
xchg
fidivs
inc
into
or
je
or
cmpsl
pop
mov
scas
and
mov
push
cmp
mov
push
jb
roll
mov
lret
mov
and
dec
push
test
pop
mov
cmp
sub
add
push
out
cmp
inc
cmpsl
add
adc
in
daa
mov
faddl
add
mov
outsl
mov
movsb
mov
scas
inc
fiaddl
mov
repz
imul
xor
loop
mov
jne
cmc
lret
subl
mov
loope
and
test
xchg
fildll
sbb
xor
daa
sbb
push
sub
pop
and
mov
dec
push
popa
scas
aaa
cmp
js
mov
xor
inc
and
adc
mov
inc
and
dec
cmp
nop
push
data16
push
add
fidivrs
loope
insb
ljmp
jae
mov
jae
or
pop
test
and
hlt
sbb
or
xchg
int
mov
adc
dec
cmpsb
clc
test
dec
cmp
mov
enter
add
mov
sub
dec
xorb
inc
adc
in
push
repz
cmp
shll
ja
mov
ds
nop
fisttps
adc
inc
mov
lds
jle
or
nop
jne
insb
scas
jnp
into
mov
add
and
mov
lock
mov
enter
jmp
outsl
push
xor
mov
jle
pop
aam
mov
daa
xor
adc
fs
mov
xor
ret
out
mov
xor
arpl
not
insb
sub
ljmp
sti
mov
jo
pop
addr16
mov
jo
cmp
xor
inc
mov
cli
xchg
aam
mov
xchg
add
outsb
add
dec
dec
jns
jle
mov
dec
jne
repnz
mov
test
fwait
je
stos
inc
add
mov
push
jp
dec
movsl
or
adc
cmp
sti
or
sbb
inc
lcall
gs
cmp
mov
gs
jge
cmp
xlat
outsb
sbb
mov
sbb
push
hlt
cmpb
mov
movsb
cmp
pop
lock
pop
fwait
and
push
push
mov
xchg
sub
ud0
cld
bound
imul
lock
ret
push
movsl
hlt
pop
js
dec
add
xchg
sub
addl
mov
sbb
cmp
cmp
subb
pushf
mov
push
repnz
mov
adc
inc
popf
cmc
sbb
xor
sub
sub
push
jae
mov
sub
push
outsb
and
lds
int
sbb
dec
dec
mov
popf
pop
stc
sbb
mov
mov
repnz
mov
dec
outsl
inc
pop
popa
jge
pop
js
pop
jbe
mov
or
mov
cmpb
jnp
or
jge
ja
pop
mov
ljmp
inc
lret
aaa
bound
jo
add
mov
push
insl
inc
aam
sti
mov
or
iret
fidivl
sarl
and
push
frstor
push
fisubrs
in
fidivs
cmpsb
or
mov
add
cli
sub
cmp
int
mov
stos
dec
fisttpll
adc
jl
jecxz
test
pop
int
jno
jmp
sub
pushf
ss
sarl
outsl
sbb
push
xor
xchg
fcmove
mov
fisubrs
loopne
adc
jo
pop
aas
sbb
out
aam
add
outsl
adc
fwait
mov
xchg
xor
hlt
jb
and
or
mov
jo
xchg
jl
push
add
add
cmpsb
pushf
cmp
dec
pusha
adc
ret
xor
pop
in
popl
mov
add
mov
divl
out
jge
ljmp
imul
repnz
sub
orb
cmp
mov
or
xor
rep
sbb
stc
repz
mov
orl
dec
adc
mov
pop
les
scas
out
in
notl
subps
test
gs
sbb
les
mov
in
mov
loope
arpl
in
push
xchg
sbb
or
int3
dec
cmp
inc
fsubrl
imul
insb
lds
sub
into
loope
cwtl
out
inc
fs
imul
std
sbb
cmp
adc
mov
push
xlat
addl
in
aam
repz
sti
inc
aas
mov
cmp
imul
xchg
andb
mov
mov
fldcw
or
sti
pop
vmaxps
repnz
ljmp
xor
std
inc
jnp
stc
sbb
into
arpl
jb
sub
fs
lods
mov
subl
outsb
add
lahf
and
shll
adc
mov
fidivl
or
sbb
lret
sub
jo
mov
inc
movsl
add
jae
shrl
incl
and
inc
push
jne
out
xchg
sub
inc
dec
mov
jnp
push
popf
xchg
mov
mov
out
scas
push
mov
cmc
push
jp
push
loope
fwait
mov
push
out
cmpsl
sbb
sahf
fnstenv
cmp
aad
lds
pusha
mov
pop
push
push
sbb
mov
jno
xor
xor
pop
movsl
xchg
mov
cltd
out
mov
in
mov
loopne
repz
daa
cmp
popa
dec
test
in
inc
mov
jne
sub
adc
add
dec
lcall
sub
mov
xchg
dec
into
cltd
dec
jge
fstpt
push
inc
add
jbe
and
fstpt
shlb
pop
sbb
sbb
xchg
cli
shll
xor
inc
in
pushf
cmpb
mov
ja
push
cmpsb
inc
fiadds
les
pusha
and
ret
fcmovb
outsl
loop
rol
outsb
push
and
repnz
js
mov
xor
into
cmpsl
sbbb
jnp
pop
cld
loop
mov
sbb
ds
popa
movsb
inc
mov
jl
fldt
or
sub
nop
pop
in
sbb
pop
pop
dec
inc
insl
shr
insl
fimuls
or
mov
cld
jb
movsl
add
push
xor
fsubr
mov
and
lock
scas
pop
xor
pop
jbe
mov
cmp
in
xchg
fxtract
xchg
mov
inc
or
mov
push
mov
sub
sub
xor
and
stos
or
cmpsb
jmp
mov
rorb
es
or
insb
cmp
dec
fsts
fcoms
add
xchg
inc
cwtl
adc
jb
pop
movsb
decb
push
and
add
data16
push
push
lds
in
imul
jmp
sub
dec
pop
and
pop
pop
push
sahf
sbb
add
mov
test
adc
popa
adc
add
js
fbstp
aas
jno
ja
stc
andl
mov
rclb
pop
sub
mov
mov
xchg
loope
std
pop
test
loope
push
out
mov
sub
popf
ljmp
ljmp
pop
add
xchg
popa
lds
xchg
adc
dec
andl
cwtl
enter
in
cmpsl
push
adc
ljmp
cmp
push
out
push
jnp
fsubs
sub
dec
stos
je
add
mov
movsb
xor
les
cmp
mov
add
ud1
pop
pop
cmpsl
fldenvs
rorl
xchg
sub
enter
push
das
push
sahf
fdivrs
scas
sub
inc
popf
mov
adc
int
scas
cmp
push
xor
fldl2t
fisubs
sbb
pushl
mov
rcrl
fstp
mov
jns
sbb
fwait
test
xorb
pop
inc
push
aas
add
out
jg
pop
sbbb
out
xchg
xchg
cmpsb
sub
cltd
stc
and
jnp
push
ficoml
sub
cld
cltd
sub
mov
stc
imul
jns
xor
aas
aad
jne
xchg
sbb
aad
and
pop
sub
insb
fwait
bound
hlt
sub
cmp
add
dec
cmp
pop
jecxz
pop
in
xor
add
movsl
test
shll
add
dec
test
test
lret
insl
cwtl
mov
jne
shll
pop
push
push
xor
lea
mov
push
sub
inc
pop
xchg
popf
pushf
stc
push
cltd
push
sbb
jle
sub
inc
mov
je
xchg
or
popa
jle
xchg
xor
inc
push
mov
mov
mov
pop
movsl
pop
cmp
js
loope
pop
mov
add
aas
inc
fsubr
nop
xchg
test
inc
outsb
test
insb
sbb
movsb
or
aam
jecxz
leave
adc
mov
cmp
cmp
loopne
and
jae
jge
iret
sahf
lods
xchg
xchg
mov
pop
icebp
pop
add
mov
negl
jb
dec
jmp
adc
fwait
mov
loopne
cltd
insb
movsl
test
outsl
sub
inc
sbb
mov
push
imul
xor
xlat
push
stos
lahf
in
add
sbb
xor
inc
rcll
xor
jp
gs
xor
cmp
mov
ret
out
or
mov
push
leave
xchg
sbb
cs
fistpl
jnp
rorl
jb
add
push
jmp
or
shll
loop
jo
lret
shlb
pop
jnp
lods
in
enter
ljmp
or
mov
push
jne
mov
inc
fsubl
popf
inc
fcmove
xor
lods
gs
sbb
jecxz
lret
in
sbb
nop
cmpsb
imul
and
or
in
pop
cmp
hlt
mov
dec
pop
cmp
shrl
repnz
xlat
adc
inc
cli
popf
mov
jo
mov
jmp
daa
sub
mov
cmpsl
push
add
mov
cs
xchg
dec
jo
cmp
inc
xor
test
out
inc
lock
scas
hlt
pusha
mull
sti
or
xchg
frstor
test
inc
cmpsl
xbegin
ja
into
pop
out
or
pop
hlt
xor
jnp
mov
aad
mov
rcr
popf
js
popa
stos
mov
jno
and
in
stos
push
sbbb
push
fisttpl
stos
add
in
and
in
cmpb
jb
movsb
aaa
cltd
into
ficomps
xchg
mov
mov
and
loope
out
add
in
cltd
xchg
mov
cltd
rcrb
and
and
stc
std
in
xor
loopne
add
lds
stos
insb
sbb
aaa
lahf
ss
cmp
out
sub
push
in
cmp
bound
cs
inc
incl
xor
scas
push
cli
ss
mov
les
and
xor
inc
mov
enter
adc
sbb
das
jo
fcompl
std
loope
pop
add
xchg
shrl
in
ja
fsubrl
fst
push
scas
cmp
insb
iret
mov
sbb
push
jbe
jge
jmp
inc
xchg
ret
sub
hlt
jbe
cltd
xlat
mov
lahf
arpl
push
mov
jmp
pop
maskmovq
testb
incl
fdivs
into
daa
jb
xor
mov
ffree
xor
popa
cli
divl
enter
cmp
xchg
and
push
ljmp
mov
mov
pop
push
sbb
mov
sbb
jo
push
mov
xchg
xor
mov
fisttps
out
lock
sub
add
punpckldq
cmc
xor
mov
pop
mov
dec
add
shrl
dec
fistpll
pop
fnstcw
rcl
cmp
cmp
out
aaa
aas
or
cmp
add
cs
add
faddp
fiaddl
add
imul
pop
xor
pop
jnp,pn
mov
dec
iret
es
ljmp
std
cmp
test
add
scas
dec
out
leave
mov
jae
insl
add
mov
lods
pop
scas
add
mov
sti
xchg
rorb
loop
mov
mov
xor
mov
xlat
fcom
in
or
data16
movsl
cmpsl
ret
aam
cmp
dec
in
dec
shll
pop
ss
xor
mov
loopne
jge
add
int
lret
clc
leave
push
fadds
or
rclb
sub
fdivl
loop
add
shl
rclb
aaa
push
nop/reserved
lods
xor
ss
movsl
push
xor
cmp
data16
movsb
cmp
pop
hlt
xor
xchg
pop
mov
adc
daa
mov
adc
sub
iret
xchg
out
addr16
fsubrs
in
adc
clc
dec
adc
sbb
pop
ret
cmc
push
xchg
sub
outsb
dec
iret
fists
push
add
dec
sti
sar
repnz
xor
cld
int
ss
jnp
addb
out
mov
outsb
push
and
shrb
lea
push
movsl
fwait
mov
insb
add
xchg
mov
ret
xor
sarl
xchg
jle
sbb
nop
jbe
or
sbb
mov
leave
cmp
mov
jae
rcrl
sbb
xchg
scas
cld
rcrb
repnz
pop
inc
scas
cmp
mov
jae
inc
popf
xor
mov
adc
bound
subl
jle
pop
lock
pop
or
aas
int3
sub
xchg
xor
inc
pop
pop
clc
nop
push
call
and
imul
cli
hlt
pop
sub
aam
ss
imull
or
sbb
jae
test
ret
insl
lahf
pop
dec
clc
out
repz
in
xchg
mov
jge
cmp
dec
cmp
out
xor
push
jb
push
adc
xor
jae
mov
sub
filds
mov
shl
gs
mov
mov
fsubl
and
cld
lcall
in
push
adc
jne
adc
xor
xor
inc
loopne
jne
sti
inc
inc
jbe
popa
shr
lcall
and
lea
xchg
jmp
clc
xchg
lock
aad
jnp
mov
int
jg
rcll
xor
jns
dec
xchg
dec
aam
jnp
dec
ljmp
shll
pop
pop
outsb
inc
inc
and
test
sarl
sub
aaa
jecxz
dec
fnsave
into
xor
push
mov
adc
and
jno
out
ret
or
mov
mov
push
mov
fildl
and
mov
lock
mov
shrb
les
cltd
add
aaa
mov
cmp
pop
int
sub
scas
dec
add
dec
cwtl
rclb
and
mov
and
ja
jecxz
fadds
mov
xchg
adc
orl
adc
adc
and
inc
mov
xor
adc
or
iret
and
sub
dec
pusha
or
xor
out
cmp
sarb
pop
jne
int
mov
pusha
xor
cmp
popf
cmp
pop
sub
lret
adc
std
pop
cmp
inc
ficoms
fsubr
fldl
jo
int3
pop
lcall
nop
sub
jmp
fstpl
push
mov
pop
push
sub
push
mov
jecxz
mov
push
mov
test
jmp
rcrb
out
cmpl
add
or
jmp
bound
cmp
cmp
add
xchg
jp
push
jae
xchg
inc
mov
test
mov
push
outsl
sub
cmpsb
dec
repnz
xchg
jmp
inc
mov
mov
hlt
push
push
out
addr16
add
xor
clc
jge
pop
scas
xchg
adc
out
lds
lea
ret
add
mov
sub
xor
cli
mov
mov
cld
cmpb
and
fwait
dec
insb
mov
ret
adc
mov
icebp
scas
sbb
xchg
dec
in
inc
repnz
lcall
ldmxcsr
and
sbb
loopne
add
addr16
call
incl
xchg
or
fistpl
inc
push
scas
jle
push
and
pusha
ficoml
test
out
mov
mov
push
cltd
sbb
cltd
stos
sub
xor
and
stc
int
inc
ja
js
lret
bound
adc
or
arpl
xchg
addr16
addr16
cmp
test
cli
enter
loop
and
pop
pushf
repz
dec
push
inc
adc
addb
push
leave
ret
stos
ficoml
popa
fs
xchg
push
jo
ret
add
testl
xor
adc
add
adc
lea
or
lcall
and
es
mov
hlt
repz
aad
push
call
mov
ret
jnp
sbb
add
sti
mov
or
ljmp
sarb
lret
mul
ss
sbb
push
push
cs
push
dec
jno
aaa
dec
mov
aam
jmp
dec
and
lcall
sarb
ret
sarl
xchg
xchg
iret
mov
repz
dec
cmpsl
je
fsubrs
pop
jnp
mov
out
sub
xor
add
xor
mov
push
or
pop
cmp
xchg
fcmove
bound
shlb
imul
cmp
mov
fstpl
insb
jnp
adc
jle
lret
adc
jmp
jbe
dec
insb
ds
shrb
sahf
scas
gs
pusha
pop
xchg
mov
add
loopne
pusha
pop
movsb
jmp
pop
shr
push
daa
xchg
sub
adc
clc
icebp
stos
jbe
sub
jo
cmp
aaa
xchg
push
mov
push
ljmp
dec
xor
out
lret
mov
dec
jbe
lahf
xchg
pop
imul
or
loopne
sbb
sti
sub
cmp
imul
mov
ljmp
and
sbb
out
lds
and
cld
aam
sbb
fwait
lcall
and
cmp
xchg
aad
movsb
cmp
outsb
adc
fidivrs
cmpxchg
stc
dec
push
pusha
dec
sbb
mov
loopne
in
push
in
div
mov
sahf
pop
sbb
dec
dec
cmp
leave
push
jmp
jmp
outsb
or
mov
loope
adcl
mov
jecxz
daa
push
jmp
jge
add
es
arpl
int
inc
add
push
popf
scas
and
dec
decl
aam
out
adc
dec
mov
and
outsb
inc
add
xor
js
adc
push
sbb
fs
cmpsl
sbb
mov
inc
and
adc
faddl
leave
lahf
data16
les
xchg
jns
and
ss
push
sbb
xchg
ss
mov
inc
fdivrl
ljmp
es
cmp
ljmp
lock
push
add
jnp
or
or
sarb
jle
sub
aas
pop
cmp
in
in
daa
inc
pop
mov
xlat
or
pcmpgtd
gs
inc
lds
inc
xlat
repnz
inc
out
and
hlt
mov
or
and
fildll
out
cli
test
adc
xor
mov
xchg
sub
out
lds
cmc
lock
xchg
out
imul
mov
call
test
mov
in
pop
pop
leave
sarb
and
or
mov
add
loope
loop
repz
sub
hlt
lea
ss
imul
add
jl
daa
mov
xchg
in
and
scas
fldcw
push
popf
cli
ljmp
addb
test
xchg
dec
and
mov
sbbb
adc
lahf
inc
insl
scas
int
in
inc
rcrl
inc
fsubp
adc
shrl
insb
loope
adc
in
mov
cmp
mov
cmpsl
push
aam
rorl
fdivp
pusha
hlt
enter
lds
jecxz
pop
adc
mov
popa
and
add
popa
mov
js
push
ljmp
loope
jbe
xchg
inc
xchg
push
js
xchg
sub
adc
mov
fsubrs
incb
and
lret
lods
pop
jns
mov
ljmp
inc
out
fisttps
xchg
imul
mov
cltd
fcomps
pop
xor
outsl
sbb
loopne
outsb
mov
adc
push
mov
push
adc
hlt
mov
xor
cmp
add
mov
rcl
mov
pop
sbb
arpl
mov
add
lock
inc
push
ret
pop
mov
and
mov
loope
test
loope,pt
fcmovne
sahf
cmpl
lods
out
cmp
mov
xor
cmp
jns
mov
pop
fs
rcrl
inc
mov
aad
mov
test
aad
cmp
in
repz
xorl
add
int
stc
jne
inc
es
pop
arpl
mull
push
jle
loope
and
pop
into
push
in
jge
xchg
jp
jne
inc
fwait
inc
fimull
imul
call
std
adc
pushf
jp
sbb
cld
push
or
pop
inc
sub
out
shll
push
or
inc
inc
fidivs
and
jge
ficoml
inc
lock
addb
dec
pop
scas
test
int3
inc
add
or
mov
mov
mov
imul
fisubs
inc
xor
xor
mov
cli
pop
xlat
mov
xor
std
lock
aaa
push
jae
call
int
lcall
mov
mov
arpl
repz
or
cs
pop
aaa
aas
sarl
and
push
nop
in
jmp
cwtl
mov
sub
fs
mov
add
mov
jno
mov
sti
push
out
mov
shr
shlb
jbe
mov
lds
and
das
sahf
jo
push
xchg
clc
pop
es
cmc
sahf
push
sub
or
cmp
testb
pop
xor
add
das
stc
cmp
mov
in
shlb
mov
cmp
shlb
pop
jle
push
fs
add
and
and
je
imull
xchg
fldenv
mov
xor
icebp
and
xor
jle
shrb
sbb
jg
inc
dec
mov
jae
or
push
or
ret
inc
cmp
sti
and
cltd
push
out
aad
lods
mov
jp
into
psadbw
push
dec
orb
ljmp
addl
ja
fisubrl
or
lcall
cs
pop
insl
or
dec
jg
je
loope
dec
sbb
or
int
mov
pop
stos
in
shll
dec
fsts
adc
outsb
jmp
subl
cs
js
pop
mov
adc
jbe
sbb
pop
mov
push
push
xlat
cmp
loop
jne
fiadds
shl
xor
cmpsl
cmp
les
cmpps
and
push
not
push
mov
cli
inc
testb
or
ja
sub
test
lods
stos
movsl
mov
mov
mov
lea
xorl
cmpl
stos
leave
dec
fcom
repz
shrl
push
rorl
sbb
insb
cmp
mov
cmp
je
lcall
lea
dec
or
push
aam
js
fdivrl
and
inc
clc
pop
mov
pop
mov
adc
pop
add
cmpsb
dec
dec
repnz
mov
xor
test
push
sub
xor
int3
fsubs
ret
pop
loop
mov
dec
imul
jo
pop
lods
call
rorl
and
lds
repz
imul
or
sub
lcall
daa
shll
inc
aaa
outsl
cld
push
dec
pop
jge
inc
out
xchg
add
dec
cmp
std
cmp
jo
sbb
mov
adc
cltd
test
add
andl
scas
push
mov
jb
xchg
sub
lcall
lods
shl
fdiv
lods
cmpsl
cmp
sbb
les
pop
add
push
push
push
jmp
fldcw
push
add
xchg
pop
aam
fwait
inc
mov
shrb
ljmp
xchg
shlb
xor
lret
test
xchg
sub
scas
xchg
ss
les
lahf
fucom
movsl
icebp
idiv
es
call
in
mov
jmp
and
ret
jle
leave
repnz
dec
push
je
sbb
arpl
and
push
cmp
subl
or
cmp
sub
test
inc
arpl
mov
fistl
push
mov
ret
pop
imul
sbb
mov
xchg
lock
data16
loop
push
test
jo
xchg
popa
xor
push
test
dec
mov
push
movsl
cmp
mov
ret
es
test
into
inc
sahf
mov
xor
lods
and
fldenv
jb
rol
ret
and
pop
das
jle
nop
ss
ret
pop
jmp
inc
pop
mov
sarl
mov
pop
scas
fdivrs
sub
xor
mov
or
xchg
stos
xor
pop
pop
and
jecxz
mov
jo
mov
sahf
out
inc
repnz
lret
pushf
xor
imul
sub
pop
pushl
repnz
jae
cld
xchg
insl
rclb
lds
data16
pop
dec
fisttps
mov
adc
ljmp
pop
inc
pushf
pop
xlat
nop
aaa
ret
scas
aaa
decb
and
lock
lea
ja
pop
mov
inc
pop
pop
popf
outsl
mov
pushf
cmpsl
fwait
gs
mov
test
or
mov
xchg
scas
stos
jl
fmul
and
sub
xchg
outsl
jns
mov
mov
ja
cmpsl
popf
mov
or
sub
pop
adc
cmpsb
imul
lock
js
scas
push
xlat
icebp
adc
xor
call
xchg
dec
sti
outsl
je
loopne
rcl
shlb
fsub
add
hlt
dec
or
jl
leave
mov
call
mov
jbe
sub
sbb
mov
mov
and
scas
mov
add
xchg
popf
mov
inc
fwait
aad
stc
leave
aaa
icebp
mov
mov
lret
add
mull
pop
mov
add
lock
jecxz
cltd
adc
mov
sbb
xchg
sub
clc
or
lds
mov
and
ja
in
dec
sub
outsl
stos
daa
adc
push
mov
adc
adc
or
aas
pop
adc
add
adc
out
or
sti
imul
rcr
sti
adc
movsb
mov
iret
sbb
push
lea
fistps
sub
icebp
aas
into
jmp
rcl
pop
lods
cmp
inc
out
inc
ret
sub
pushf
xor
mov
jmp
es
xchg
mov
mov
std
cltd
scas
push
xchg
testb
in
xchg
movsl
xchg
insl
xchg
or
xchg
xor
filds
adc
add
adc
movsb
cltd
mov
dec
in
mov
and
xor
or
cli
loope
push
in
incl
jp
je
loop
aas
cs
sbb
push
pushf
add
push
sub
mov
mov
mov
and
dec
lock
test
arpl
jbe
or
mov
mov
gs
add
shrl
fisttps
fs
inc
add
ljmp
push
shll
dec
mov
push
out
cmp
xlat
jno
shl
popf
ss
xchg
jp
cmpb
ds
xchg
movsl
or
shrl
lahf
adc
pusha
in
mov
in
sbb
in
adc
pusha
mov
jb
jae
pop
rolb
adc
repz
xor
cmp
fcom
and
cmpsb
lea
les
mov
bound
call
inc
mov
stos
ss
lret
loopne
push
cmpsb
sub
adc
add
jno
sbb
or
in
inc
call
movsl
xchg
rcrl
mov
leave
jo
jl
je
mov
and
test
xor
xorl
out
jbe
and
fcmovnu
ds
fldcw
aaa
mov
jo
pop
lds
adc
cmp
push
lea
lods
imul
and
xchg
mov
pop
add
jmp
xchg
sbb
add
das
ss
pop
mov
int
gs
popa
data16
cmpsb
mov
fists
cmp
inc
cmpsb
jns
cld
cmc
je
sub
out
jbe
cltd
sti
xor
cmp
sarb
ljmp
call
or
xor
outsb
pop
dec
xchg
cmp
rcrb
jp
add
clc
xchg
aaa
adc
and
jmp
jae
dec
sti
xchg
ret
push
pop
out
mov
lds
adcl
mov
inc
loopne
fwait
test
insb
shrb
xchg
scas
fldt
xor
adc
xor
stos
insb
push
aad
adc
push
jecxz
push
in
fstpt
aaa
cmp
jbe
or
loope
aaa
push
xor
in
push
in
addr16
jns
jg
out
xor
sbb
inc
push
sub
push
inc
or
mov
int
push
inc
movw
jne
fyl2xp1
fwait
inc
lock
rcr
jmp
decb
leave
xor
mov
fld
iret
push
pop
push
loop
es
pop
push
movsl
icebp
lret
sti
aad
popf
call
insl
jae
push
fisubl
inc
aad
jmp
lods
cld
inc
xchg
test
ja
push
filds
mov
xor
cmp
pusha
subl
loop
pop
xchg
scas
mov
lret
movsb
jae
jle
call
add
jno
push
popl
imul
shll
lahf
xchg
mov
lea
jo
scas
pop
sbb
pop
mov
outsb
push
mov
roll
rcr
dec
xor
cmpsb
sbb
hlt
mov
outsb
dec
ja
sbb
push
test
dec
fs
cmp
sbb
inc
ja
xchg
imul
loopne
cmp
cmp
pop
repnz
sarl
and
adc
aas
jo
fcomi
pop
rcr
jo
jg
push
lea
sbb
sub
ret
cltd
mov
push
sbb
outsb
ja,pt
dec
cmp
outsb
inc
jne
xor
jp
test
mov
xor
aad
out
sbb
imul
or
negb
mov
lcall
in
xor
mov
stos
fcoms
mov
lret
xchg
sub
add
movl
icebp
mov
arpl
cltd
shr
mov
mov
pop
xor
xchg
mov
xchg
insb
cmpl
loop
or
sub
popl
mov
cmpsl
out
adc
inc
sbb
aas
xor
xor
adc
sub
sub
ss
movsb
hlt
mov
stos
xchg
out
test
mov
mov
fcoms
mov
enter
das
popa
popf
xor
push
add
xorl
push
clc
sbb
rolb
in
push
cltd
lret
xor
and
pop
mov
ret
hlt
das
jge
in
gs
popf
ret
pop
or
pop
ljmp
sbb
dec
mov
xchg
xchg
lods
test
xchg
add
fistps
mov
push
call
fisttps
jmp
inc
fnstenvs
xchg
mov
lods
subb
mov
jne
iret
mov
xchg
cltd
inc
outsl
xchg
scas
mov
movsl
sbbb
push
icebp
or
sbb
ss
data16
test
and
bnd
std
xor
xor
notb
lods
aaa
add
inc
adc
movsl
sbb
xchg
les
rolb
xchg
add
fildl
out
nop
divl
add
popl
lods
sbbl
xlat
dec
negl
sub
sbb
cli
mov
sub
add
mov
or
push
les
dec
cmpsb
ljmp
cmp
pop
repz
cmp
lock
cmpsl
loop
cmp
jno
jno
lods
xchg
mov
mov
outsl
out
ret
ret
xchg
sub
aad
ja
movntps
xchg
push
xchg
mov
ret
mov
es
repz
mov
xchg
add
sub
roll
mov
jecxz
jl
inc
movsl
jmp
fadd
out
pushf
xor
fistpl
inc
bound
shl
test
ljmp
popa
jg
xor
adc
inc
add
jp
dec
lds
cli
sbb
fisttps
outsl
or
push
mov
test
out
inc
push
push
in
gs
ret
pusha
inc
int
push
push
daa
cld
ret
cwtl
pop
ljmp
mov
or
shrl
xchg
pop
ja
adc
es
add
pop
fwait
mov
mov
fs
jmp
jne
cli
pusha
mov
hlt
push
and
mov
call
xor
mov
repnz
jne
mov
call
mov
out
mov
cld
jg
inc
gs
lock
loop
icebp
test
rclb
iret
push
pop
and
mov
jns
sub
icebp
lret
push
inc
sbb
mov
or
sub
icebp
sub
lods
adc
inc
leave
cmp
pushf
cmp
aas
sub
sarl
mov
sbb
inc
push
fistpll
inc
xchg
dec
int
fldcw
stos
mov
sbb
dec
jbe
scas
lret
jmp
sbbb
jno
fwait
xchg
lods
add
mov
testl
xchg
test
les
pop
jnp,pt
arpl
in
orl
lods
lret
pop
jg
data16
mov
add
negl
pop
jb
in
mov
out
pop
imul
nop
stos
mov
add
sub
add
xchg
int3
jmp
mov
ja
insb
call
push
outsb
pop
xor
fisttps
push
xchg
icebp
adc
mov
sub
das
mov
pop
xchg
shlb
cmp
fcomp
cmpsb
xchg
add
inc
fnsave
fs
int
push
orb
jns
pop
inc
pop
push
negb
rorb
and
and
cmp
adc
pop
shll
pop
out
les
mov
lock
jle
std
out
add
fwait
and
pop
push
inc
in
adc
int3
scas
fwait
cmpsl
xor
sub
push
stc
xor
sbb
mov
cmp
inc
ljmp
call
shl
dec
mov
popa
sub
fstps
sbb
ljmp
cmc
or
mov
imul
sahf
ret
or
push
cmpsb
imul
mov
xor
push
dec
mov
xor
pop
aaa
das
out
mov
lret
daa
mov
in
add
pop
jae
mov
imul
pop
mov
cmpsb
pop
push
imul
cli
push
mov
push
mov
lcall
sahf
clc
cld
iret
fnstenv
push
mov
sbb
mov
lea
test
lock
pushf
negl
repnz
xchg
popa
adcb
or
pop
jb
nop
add
xchg
out
push
js
inc
xchg
cmp
mov
cmpsb
push
ret
jns
stos
mov
negl
mov
fdivrl
sbb
mov
scas
call
repnz
or
jge
xchg
cmpsl
cli
adc
sub
pop
in
mov
fimuls
push
and
push
or
xlat
push
hlt
filds
pusha
jnp
cmpsb
sub
dec
jg
cmp
mov
cli
xchg
mov
imulb
and
rcll
ret
pop
out
pop
mov
int3
xchg
js
pop
pop
mov
xchg
add
or
pusha
aas
mov
decb
pushf
xor
pop
xor
mov
mov
jns
push
movsl
in
rcr
xchg
jb
repnz
push
shrl
sbb
insb
js
mov
mov
out
push
testl
mov
adc
mulb
out
sbb
nop
out
fs
pop
mov
decb
inc
push
and
jnp
int
sahf
lods
push
jl
mov
sti
jbe
xchg
in
lcall
and
mov
inc
xlat
mov
data16
cwtl
fidivl
adc
xorl
enter
add
or
bound
add
int
and
push
movsb
inc
sbb
aaa
aam
ja
inc
sarl
icebp
xor
pop
bound
iret
in
sub
aaa
clc
mov
adc
dec
daa
insb
stc
inc
stos
lds
jo
bound
cltd
inc
dec
cmp
sbb
jg
mov
mov
iret
push
popf
add
and
mov
je
pop
jne
sbb
lahf
push
popf
mov
cmc
bswap
mov
adc
xchg
fmuls
push
xlat
andl
dec
push
fisttpll
and
mov
jge
scas
jg
out
sbb
into
and
pop
nop
mov
mov
cmpsb
rcl
aaa
repnz
insb
add
mov
mov
xchg
repnz
inc
loopne
icebp
jge
testl
test
lock
es
ret
pop
mov
fistl
jmp
mov
shrb
rcr
pop
sahf
mov
test
xor
in
push
cs
push
addr16
xor
out
int
mov
mov
andb
leave
fisttpll
ds
fdivr
stos
test
pop
push
in
add
xchg
stc
mov
dec
sub
sahf
add
jmp
cs
or
and
ds
and
lds
fs
or
xchg
or
repnz
cmp
inc
or
fwait
xlat
inc
mov
jl
pusha
popl
adc
popa
jg
pusha
div
jl
xchg
adc
sub
leave
popf
dec
push
cmp
mov
shl
ret
push
mov
popf
push
mov
add
adc
shrb
leave
fisttpl
mov
in
mov
mov
or
sbb
cmp
stc
add
sub
ret
sub
jmp
xchg
mov
add
and
ret
xchg
adc
jmp
mov
lock
push
insl
lods
pop
mov
lcall
int
aam
xchg
xor
ja
jge
push
inc
jmp
lods
pop
mov
xor
loop
xor
push
movsl
cli
aaa
std
and
sbb
xor
pop
insl
ja
dec
mov
aas
mov
cmp
add
aad
nop
inc
cmp
std
pop
mov
push
inc
push
push
and
and
out
mov
xchg
mov
andb
inc
push
and
cmp
repnz
and
repnz
mov
or
adc
adc
and
and
divl
cmpsl
ret
test
insb
add
js
outsl
fs
cmpsl
les
das
ret
xor
xor
imul
mov
adc
stos
jmp
mov
mov
mov
mov
push
push
jne
mov
lods
je
in
xor
xchg
push
and
testb
pop
dec
inc
cmp
fldcw
push
jo
sbb
mov
ljmp
xor
add
nop
mov
test
and
leave
dec
cmpsb
pmovmskb
vucomiss
int
xor
inc
fcomip
gs
int3
pop
adc
sti
test
data16
cmp
dec
loope
call
pop
mov
push
in
adc
je
mov
cmp
add
mov
das
xor
or
out
cmp
cmp
in
call
jo
outsb
rorl
adc
insb
dec
dec
sbb
lret
adc
out
ds
jle
cmc
cmp
fdivrs
and
mov
sub
xchg
pusha
scas
mov
fidivrl
dec
pop
adc
and
push
xchg
nop
sub
inc
or
dec
add
std
xor
mov
push
xchg
push
mov
pop
cltd
mov
in
lret
mov
sbb
je
jbe
xchg
mov
push
xchg
jnp
in
add
lds
xor
xor
leave
insb
test
add
scas
outsb
out
enter
push
in
adc
jno
icebp
mov
mov
std
adc
loop
out
repz
xchg
cltd
push
jl
jb
add
fidivl
lods
ret
jg
xchg
daa
in
sbb
pop
cmp
iret
pop
xlat
pop
test
pop
mov
cmc
pop
add
push
pop
cmpsb
imul
inc
shrl
in
sbb
aam
ret
cwtl
lret
jge
bound
mov
pusha
shlb
out
sti
mov
fwait
ss
out
std
sub
out
and
fdivl
pop
push
sarl
jmp
cmc
xor
sub
pop
inc
bound
fadds
mov
nopl
call
int3
ficoms
cmp
add
mov
es
xchg
sbb
pushf
pop
aad
pop
cmp
mov
test
mov
js
leave
leave
ss
xchg
sub
xchg
pushf
jns
movsl
jp
push
lods
enter
adc
stos
pop
shlb
lods
xor
mov
fsubl
movsb
sahf
push
or
test
shlb
mov
push
test
push
or
sahf
incl
outsl
mov
push
pop
dec
andl
pop
or
loope
shrl
inc
pop
inc
mov
mov
adc
mov
mov
or
sti
mov
cmp
push
imul
mov
add
pusha
mov
mov
fsubrl
in
mov
pop
je
push
lcall
in
out
fwait
les
or
pushf
cwtl
inc
sub
pop
push
lea
adc
pushf
push
mov
and
cmp
insb
hlt
mov
mov
test
scas
mov
mov
pop
dec
fdivs
mov
cli
mov
cmp
mov
dec
inc
push
addl
lods
lds
inc
test
shll
in
jg
dec
jb
repnz
fcomps
enter
loop
mov
sub
sbb
xorb
movsb
mov
push
in
dec
pushf
adc
int
jne
pop
jecxz
mov
jle
jae
aas
add
jb
pop
pushf
and
shrb
rcll
stc
roll
or
inc
rorb
ss
push
mov
sbb
aad
lods
fstpt
imul
addr16
jnp
jb
aad
pop
push
testb
in
pusha
in
icebp
push
or
call
mov
sub
sub
sub
mov
aaa
cmp
mov
or
push
mov
popa
sbb
cltd
add
testb
and
push
sub
mov
lret
cli
adc
rcrb
lret
mov
and
subl
es
aas
call
mov
fidivl
ficompl
dec
mov
cmpsb
enter
jb
jge
popf
stc
jl
or
daa
xor
jbe
movsl
cmp
stos
loopne
fdiv
mov
and
cmpsl
ret
cmc
sbb
ds
jmp
jp
or
es
pop
mov
add
push
popf
dec
sub
imul
sub
sub
xor
test
dec
mov
fimuls
push
pop
inc
lahf
add
jg
dec
inc
in
int
cltd
jmp
scas
mov
mov
sbb
xor
test
mov
mov
movsb
notb
cmc
xlat
jge
daa
dec
xchg
inc
jo
lret
xchg
scas
inc
les
cmp
cmpsl
rclb
js
movsl
lahf
das
mov
lods
jnp
scas
pop
leave
push
add
dec
dec
mov
test
clc
adc
movsl
adc
lock
xchg
push
loop
dec
mov
pop
xor
loop
inc
push
sbb
out
xchg
sti
xchg
callw
mov
inc
inc
int3
outsl
dec
jnp
mov
xor
cmpl
mov
push
ds
cmp
and
dec
cmc
hlt
mov
incl
clc
pushl
inc
sbb
fs
out
and
add
aas
inc
clc
in
icebp
rol
repz
ljmp
cmp
and
pop
fildll
xchg
popa
clc
or
ss
push
stos
inc
fwait
push
mulb
mov
jo
fbld
jl
jae
pop
sbb
lods
stc
or
rorb
out
jno
cwtl
out
lahf
jbe
adc
xchg
xor
sbb
xor
push
pop
xor
out
fisubrs
jmp
pop
dec
dec
add
lods
xor
pop
pop
jae
pusha
ja
movsl
or
jle
sub
xchg
xchg
inc
adc
xchg
mov
int3
fdivs
iret
xchg
in
repz
and
fldenv
mov
into
cmp
gs
sbb
dec
fildll
leave
testb
in
push
fisubrl
sbb
xor
ljmp
insb
das
fisubs
mov
xor
mov
xchg
push
les
push
add
xor
std
sbbl
mov
push
daa
xchg
dec
imulb
js
seto
cwtl
jmp
or
or
pushf
dec
ss
ret
test
cs
push
ljmp
cmp
dec
or
xchg
imul
mov
leave
pusha
sbbl
loopne
cmp
or
pop
push
repz
push
add
hlt
dec
dec
push
into
xchg
icebp
jp
std
adc
mov
sub
mov
ret
xor
add
popa
add
mov
fst
decb
shlb
push
loope
cmp
mov
ret
push
fisubs
std
mov
inc
or
shrb
sbb
std
mov
sbb
pop
lcall
xor
cmp
or
pushf
xor
push
cltd
in
push
ds
or
call
stos
addr16
icebp
mov
bnd
out
inc
fsubl
cli
daa
andb
out
dec
sbb
adc
push
hlt
int3
addr16
jae
mov
pop
jae
test
lods
mov
int3
sub
push
cmpsl
push
mov
loope
jmp
adc
mov
fsubr
notl
push
repz
mov
or
fcomps
push
sub
insb
pop
jno
sub
mov
add
loope
and
aas
jbe
mov
lds
lahf
pop
xchg
xor
mov
push
mov
fimuls
cmp
add
sub
dec
dec
ds
jle
lret
mov
sahf
inc
loope
aas
jns
push
ds
les
dec
in
aam
pop
or
push
in
loope
dec
inc
sub
js
or
pop
stos
inc
repnz
lret
lret
mov
loope
movsb
ds
lret
insl
es
gs
jmp
xor
into
inc
xor
sbb
es
daa
lahf
fsubrl
xchg
out
cmp
sbb
dec
leave
and
mov
xchg
orb
shll
es
dec
insb
repz
dec
insb
push
inc
ficoms
cmp
stc
add
sub
ficompl
test
pop
fistps
cmp
and
pusha
scas
mov
ljmp
adc
dec
fsubrl
lods
sahf
loope
pop
lock
loopne
insb
iret
push
jmp
mov
jno
jo
mov
cltd
dec
jmp
sbb
fidivrl
cmp
pop
icebp
ret
cwtl
lcall
insb
in
and
sbb
call
fs
push
imul
fsubr
mov
ss
mov
fildll
adc
sub
mov
rol
cltd
loope
out
xchg
push
andl
push
mov
or
mov
push
inc
pusha
test
jge
test
dec
sub
or
sub
sahf
pop
nop
aam
inc
xchg
data16
sbb
adcl
shl
out
jle
jb
shl
mov
out
std
ficompl
inc
fwait
stos
stc
xor
mov
sti
pop
and
in
les
stos
rclb
gs
sub
jno
es
scas
inc
jle
movsb
push
mov
fldcw
adc
cmpsl
mov
push
pop
mov
out
jg
inc
call
push
inc
xchg
cmp
mov
add
push
dec
movsl
ret
imul
in
sub
add
pop
mov
or
hlt
xor
jg
out
scas
mov
and
sub
loopne
jbe
mulb
xchg
dec
iret
xchg
jns,pt
xor
cs
popa
enter
inc
jae
pusha
mov
shrl
pop
jl
push
popf
fbstp
pop
mov
gs
loope
cmp
push
pop
scas
test
lods
cs
std
xor
jge
mov
jno
push
out
xchg
push
mov
arpl
mov
aaa
out
stos
jmp
push
mov
loop
push
out
je
lods
xor
sti
inc
dec
push
mov
in
dec
leave
cmp
addr16
sub
pop
or
scas
cmp
xchg
cmp
out
mov
jo
lret
xchg
pop
and
cmp
or
pop
shrb
jnp
orl
xchg
add
adc
cmp
shrl
push
mov
adc
xchg
ja
pop
jle
leave
push
stc
cmpsl
aaa
out
popa
xor
and
out
mov
inc
scas
dec
fs
mov
xor
out
loopne
and
mov
ss
lds
adc
push
inc
lret
and
js
or
xchg
pop
dec
push
nop
stos
inc
arpl
leave
int
inc
cmc
mov
dec
push
xor
cmp
stos
fwait
xor
test
adc
xchg
mov
aad
xor
mov
aaa
mov
adc
jge
test
iret
js
xor
mov
insl
sarl
or
stos
roll
dec
xchg
ret
cmp
sbb
or
push
push
popf
test
std
xchg
fdivrs
call
stos
push
sub
mov
push
shr
sbb
rorb
sbb
pop
inc
push
lods
add
xchg
je
add
cmpsl
ds
rcr
adc
mov
add
inc
add
call
inc
sti
daa
ja
frstor
sub
or
sti
inc
and
cmp
mov
pop
decb
add
and
dec
and
xchg
sub
lret
int3
and
hlt
or
jmp
out
mov
pop
pop
mov
popa
xchg
lahf
scas
aam
fwait
mov
data16
sub
lods
test
ss
aaa
int
pop
mov
push
pop
out
adc
xor
hlt
xchg
test
jnp
sub
popa
cld
inc
add
xor
or
call
jmp
xchg
jmp
repz
and
push
popf
jae
mov
pop
inc
push
inc
out
scas
inc
aas
ret
dec
sub
adc
push
into
add
addb
rolb
lcall
lock
fnsave
add
cmpsl
loopne
ret
gs
sti
push
jmp
sub
dec
mov
mov
xsha1
cmpsb
dec
in
inc
in
sbb
xor
xchg
xchg
call
sbb
loopne
lahf
push
push
sub
shll
mov
xor
inc
jecxz
sbb
popf
andl
ljmp
ret
adc
push
aas
test
and
dec
fmulp
adcb
fsts
rclb
push
inc
fnstsw
or
jo
or
xchg
push
out
je
mov
adc
dec
arpl
insl
xchg
jo
add
lods
in
data16
in
add
movsl
addl
push
cmp
js
les
stc
cmc
icebp
sub
lahf
das
iret
int3
lea
in
aam
sbb
lods
inc
add
daa
mov
sub
mov
dec
ret
jecxz
cltd
push
push
pop
cmc
xor
sbb
out
jp
fisubrl
loop
out
in
adc
xorl
bound
ret
jbe
lcall
stc
pop
xchg
repnz
imul
adc
add
ret
and
push
shl
test
les
pop
mov
adc
sbb
fistpl
adc
mov
or
mov
add
or
stos
je
add
push
leave
pop
repnz
and
test
or
dec
pusha
clc
sahf
iret
adc
arpl
lods
jmp
in
popf
or
nop
xchg
sub
flds
repz
sub
clc
or
push
jb
sub
call
hlt
adc
jbe
add
pop
push
scas
xor
pop
fsts
push
test
loop
stos
mov
adc
pop
in
jg
cmpsb
xlat
push
xchg
inc
dec
jnp
ret
rol
jno
loop
in
fsubl
and
mov
sub
repz
es
sub
xorb
dec
movsb
loope
shrb
push
push
xor
enter
jge
push
movsb
jl
jb
cmpsb
mov
or
pusha
or
sbb
sub
pop
inc
lahf
gs
inc
cmc
cmpsb
push
outsl
push
arpl
movsb
pop
jmp
mov
add
mov
call
cmp
in
mov
cmp
xor
pop
xorl
hlt
xor
jp
rcrl
lock
jo
mov
int3
je
sbb
dec
in
bnd
aam
adc
mov
inc
and
mov
enter
jb
inc
cld
addl
test
arpl
aaa
mov
push
bnd
adc
xchg
arpl
jg
mov
lds
shlb
iret
add
adc
dec
outsb
inc
inc
fwait
jmp
sbb
inc
xor
fdivs
add
in
scas
and
iret
clc
fldt
or
xchg
and
adc
cwtl
dec
mov
inc
xor
xor
push
xchg
repnz
push
lcall
fldt
dec
clc
lret
mov
imul
push
imul
jno
add
pop
cmp
data16
shrl
jp
mov
add
shr
es
in
repnz
enter
push
add
shlb
add
es
cmp
pop
pop
in
pop
cmp
pop
imul
sub
add
xor
xchg
stos
shl
mov
jne
sbb
lock
and
sub
dec
push
jnp
mov
lret
xor
mov
mov
jne
mov
cmp
xlat
and
mov
scas
xchg
loop
lret
mov
and
test
inc
jle
stc
addr16
cwtl
sbb
jmp
pop
es
test
push
xchg
lret
push
gs
outsb
jo
lods
inc
mov
dec
int3
fiadds
addr16
mov
pop
cmp
adc
lcall
xor
mov
pop
adc
inc
pop
sahf
lcall
push
add
movl
add
push
jmp
nop
xor
daa
data16
xchg
dec
scas
scas
add
icebp
jns
into
and
loop
jne
lods
pop
call
imul
adcl
out
rcrl
mov
lret
int3
test
xor
mov
cmp
repz
ret
push
shrl
add
mov
int
ret
push
divl
push
xorb
mov
mov
fists
xlat
mov
shl
daa
popf
cmp
popf
lock
mov
enter
adc
or
das
push
jne
addl
and
pop
scas
inc
xchg
pop
inc
pop
mov
iret
cs
sub
or
jb
aam
lcall
cmp
xchg
mov
ret
orl
pop
push
mov
testb
dec
lods
adc
mov
scas
dec
stc
fdivrs
hlt
notl
pop
adc
fiaddl
add
or
adc
mov
inc
push
outsb
add
sbb
mov
jge
mov
rcrb
sbb
sub
sub
push
pop
push
dec
mov
shll
pop
aaa
into
lret
daa
movsb
bound
push
icebp
pop
je
xchg
nop
mov
mov
int
jg
cmp
je
dec
and
insl
cmpsb
jo
mov
int3
ljmp
testb
aad
xor
loope
bound
mov
call
dec
push
inc
xchg
data16
xchg
js
or
jg
inc
xchg
addr16
sarl
imul
lahf
ds
aad
fcomps
repz
outsb
pop
gs
in
jne
loop
addl
xchg
call
sub
inc
out
movsl
jns
lcall
lcall
sbb
push
mov
push
sbb
aaa
xchg
cmp
xchg
sub
imul
ret
mov
inc
adcb
cltd
and
mov
rorl
ret
or
ja
pop
mov
xor
cmp
cmp
mov
xchg
mov
cld
sbb
dec
mov
jbe
jp
xor
mov
fimull
inc
rolb
ret
loopne
faddl
mov
stos
pop
std
dec
add
adc
imulb
cmp
test
in
push
in
addl
pop
dec
loopne
pop
imul
inc
aaa
fs
mov
je
test
inc
xchg
jo
pop
jns
mov
stc
or
mov
imul
mov
dec
push
int3
mov
jbe
rolb
clc
loop
push
aas
jnp
out
and
xor
sti
xchg
hlt
cmpsb
jg
mov
lahf
sbb
dec
mov
push
and
fptan
adc
pop
mov
xor
dec
loopne
ret
mov
mov
enter
push
insl
popa
clc
sahf
das
dec
lds
sbbb
andl
mov
and
lods
pop
jns
test
subb
test
out
sub
lahf
inc
lock
mov
sub
sub
xor
xor
mov
fistpll
out
cmpsb
les
inc
clc
pop
pop
loop
pop
push
jne
add
addl
lret
pop
je
and
mov
lret
adc
leave
cmpsb
jge
mov
jnp
imul
inc
push
addr16
mov
aaa
xor
cmp
inc
pushf
sbb
xor
movl
jecxz
test
lret
or
lahf
mov
iret
inc
loopne
jne
cmpsl
pop
repnz
rclb
out
adc
dec
and
lods
xor
xlat
sahf
adc
cld
mov
mov
mov
out
cmp
inc
mov
sbb
dec
mov
shlb
hlt
sbb
jg
pop
test
test
enter
push
sbb
pop
outsb
shrb
enter
and
stc
stos
mov
lea
outsb
push
stc
xor
xor
and
fnstsw
inc
in
scas
or
dec
or
sub
rolb
or
cmp
sub
orl
imul
in
xchg
out
das
lods
test
loopne
test
faddl
pushf
std
mov
dec
mov
lea
enter
push
mov
xchg
sahf
aaa
repnz
in
xchg
mov
or
daa
xchg
dec
mov
in
add
inc
xlat
ret
push
fwait
sti
xchg
adc
cli
rcl
jae
pop
enter
sbb
fisttpll
fdivrl
lret
inc
test
repz
stos
pop
testb
jnp
loopne
jge
xchg
jnp
test
mov
sbb
push
jne
aas
mov
pop
mov
jns
pop
cmp
repnz
iret
es
repnz
andl
andb
insl
notl
gs
mov
rolb
xchg
repnz
or
outsb
fwait
sbb
mov
pop
and
lret
or
out
test
insl
xor
jno
push
mov
ret
xchg
lods
hlt
outsb
jbe
fisubrl
mov
imul
lods
xchg
inc
repnz
cmp
push
repz
test
scas
cmp
addr16
dec
mov
sub
sbb
sbb
jno
out
adc
popa
cs
cmpsb
fdivrl
pop
les
add
jp
repnz
hlt
pushl
mov
outsb
aad
sbb
insl
or
les
mov
neg
lret
jnp
sub
dec
repz
arpl
xchg
inc
stos
stc
or
push
sbb
xor
aad
jb
xchg
js
xchg
mov
dec
std
jb
stos
jecxz
aad
xchg
scas
dec
push
mov
push
add
scas
xchg
sub
lds
ror
fadd
stc
cmp
aam
mov
das
pop
icebp
inc
xor
inc
push
add
jae
mov
insb
push
jmp
mov
out
std
push
insl
jnp
pop
lds
les
loop
mov
push
pop
movsl
repnz
addb
sbb
sbb
dec
mov
inc
in
pop
mov
mov
out
in
arpl
aam
sub
aas
hlt
pushf
or
xor
and
jo
sub
cmpsb
movsb
icebp
sbb
pop
mov
sbb
imul
sbb
jnp
adc
cmp
in
addr16
pop
push
jo
mov
or
jge
sub
sub
int
popa
push
popf
call
in
jo
xchg
sbb
adc
sbb
xlat
xchg
jmp
or
push
sbb
fdivl
sbbl
mov
jb
lahf
mov
pop
loope
jl
fs
loope
lret
pop
insl
lea
jnp
sub
sub
inc
and
mov
aaa
dec
call
mov
pop
lds
xchg
cmp
push
arpl
icebp
arpl
loop,pn
nop
cmp
ljmp
dec
push
outsb
sub
lods
jmp
out
stc
sbb
and
imul
push
mov
test
ja
fdivrs
or
ds
xchg
test
rcrl
cmp
xchg
jmp
fcomi
aas
pop
int
push
xor
mov
pop
mov
les
mov
push
pushf
stos
int3
xchg
fistpll
scas
mov
fdivl
jecxz
fldenv
movsb
cmpsl
popf
aad
push
call
fildl
mov
roll
pop
test
jno
adc
es
jb
jb
loopne
aaa
xchg
dec
mov
push
loop
mov
jecxz
hlt
pop
out
add
xchg
test
dec
sub
ja
lahf
mov
jmp
jo
xchg
and
jbe
sbb
inc
fidivl
xchg
xchg
dec
mov
dec
testb
insb
pusha
arpl
adc
daa
ds
sbb
rcrb
out
cli
or
push
jo
xor
or
test
pop
clc
adc
add
ja
push
xchg
and
jmp
cmc
movsl
addr16
lcall
iret
enter
mov
mov
mov
or
push
in
loopne
mov
rcrb
adc
arpl
lahf
std
cmp
repnz
test
aad
add
or
inc
or
cmp
mov
cmc
mov
inc
loop
sub
jb
rcll
mov
iret
xchg
subb
pop
in
add
sub
popa
test
ja
jle
xor
xchg
push
push
and
test
out
dec
and
or
sub
movsl
sbb
sbb
shlb
mov
mov
daa
outsl
mov
cli
or
imul
mov
xchg
ret
mov
cmp
mov
jmp
sbb
jnp
or
orl
pop
fistpll
mov
sub
pusha
lret
std
adc
ror
es
xlat
add
xor
dec
pop
sbb
stc
test
nop
adc
sar
add
jecxz
imul
sub
mov
cwtl
dec
sub
mov
cwtl
mov
adc
aad
push
pushf
mov
popf
xchg
stos
das
adc
out
testl
mov
jmp
movsb
incl
decl
and
rcrb
faddl
add
insl
xchg
mov
outsb
imul
in
inc
and
pop
ret
sub
out
in
mov
sub
mov
sbb
sbb
arpl
imul
cmp
push
lret
lds
lcall
and
test
iret
xchg
out
cs
testb
mov
xorl
test
add
pop
das
insb
fidivs
repz
ds
sbb
xor
pop
or
out
ss
loop
xor
xchg
cmp
pushf
and
mov
xor
xchg
mov
or
dec
fdivrp
test
call
fdivrl
push
hlt
inc
pusha
es
push
inc
fiaddl
je
bound
into
movl
pop
push
push
inc
add
pop
xor
enter
out
push
xchg
das
or
add
sbb
dec
das
testb
decb
js
aam
roll
out
jne
cmp
orl
sbb
sbb
or
adc
push
cmp
fldpi
mov
cmpsl
cs
xor
cmp
daa
pop
in
push
insb
lcall
dec
inc
and
hlt
ret
cmc
sub
jae
dec
pop
insl
mov
cmpsb
test
popf
sbb
cmp
fisttpl
imul
cld
cmp
fidivrs
lods
sub
jg
lcall
rorb
in
scas
fstl
pop
lock
mov
jg
mov
push
or
inc
cmp
push
adc
das
loopne
xor
mov
and
adc
mov
daa
and
mov
mov
pusha
xlat
add
or
jl
dec
pop
filds
in
sti
ret
repz
push
pusha
mov
int3
mov
in
cmp
popf
ret
pop
fistps
pop
in
adc
sub
add
sbb
and
mov
inc
idiv
iret
cs
mov
dec
or
jle
nop
mov
xor
sahf
lods
clc
inc
jns
psrad
popa
cmp
js
xchg
roll
mov
push
jb
push
sub
sbb
cmpsl
push
dec
in
hlt
or
in
bound
xor
fwait
imul
in
sbb
leave
out
push
push
sub
mov
test
lods
outsb
mov
insl
addr16
insl
icebp
fnstenv
adc
shll
mov
shrb
mov
in
test
outsl
add
popf
mov
pop
mov
dec
adc
aam
in
xor
push
inc
imul
in
shl
sbb
and
in
test
imul
vpunpckhbw
aas
aad
lahf
out
xchg
fdivrl
mov
pop
pusha
mov
xor
xchg
add
pop
pop
lcall
negl
add
hlt
fnstenv
ljmp
add
jnp
sub
int
clc
idivb
int3
cmpsb
pop
xor
mov
int
sub
jbe
ss
shlb
pop
jnp
jle
sti
cwtl
ja
push
pusha
fs
adc
cmpsb
lea
push
dec
lock
stc
sbb
sub
ret
xor
mov
in
add
mov
xchg
jo
pop
lcall
shrb
sub
cmp
cwtl
dec
loopne
jns
xchg
addr16
push
popa
stc
je
mov
notl
pop
cmpsb
jmp
fistps
xchg
push
das
xchg
or
movsb
rcrb
xchg
ret
xor
cmp
jmp
rcll
lahf
push
stc
test
mov
sbb
std
mov
outsl
add
jb
jno
mov
mov
pop
aas
inc
gs
push
std
xor
push
cmp
adc
add
icebp
cmp
pop
add
pop
dec
dec
and
pop
fsubrs
push
je
jno
notb
add
fistps
movd
push
mov
inc
and
icebp
pop
mov
mov
adc
gs
jo
push
adc
fmull
dec
dec
jns
and
imul
mov
jnp
mov
add
pop
fs
xor
lock
pusha
pop
sbb
jg
lcall
popa
rol
mov
lods
push
iret
pop
dec
inc
imul
lahf
sbb
lods
jge
cmpsb
dec
push
mov
stos
or
test
and
push
movsb
test
bound
leave
push
pop
push
sub
mov
dec
cwtl
add
and
fimuls
loopne
stc
out
push
xchg
addr16
cwtl
loopne
dec
add
ds
xor
mov
mov
push
inc
pusha
rorb
pop
inc
pop
lods
mov
and
jae
sub
and
adc
fwait
es
clc
mov
sub
xchg
mov
aas
cmc
mov
lahf
add
fldl
out
mov
popa
push
or
pop
or
in
in
data16
adc
mov
stos
cmp
and
sahf
fs
int
cwtl
and
mov
mov
jg
or
iret
mov
pop
xchg
mov
fwait
enter
loope
shl
arpl
mov
addr16
pop
pop
imul
pop
jmp
mov
cmpps
dec
notb
imul
inc
hlt
pop
adc
push
xchg
pop
mov
ret
cmp
les
pop
les
mov
jp
or
stos
lods
pop
rcl
push
and
outsl
repnz
js
mov
pop
or
ja
sub
out
loop
cmp
in
adc
jnp
mov
lcall
imul
pop
pop
and
cmp
jle
xor
mov
jo
jp
push
push
mov
mov
rdpmc
mov
insl
xchg
jl
mov
movsl
fcmovu
xchg
jne
pop
jg
add
xchg
nop
cmp
adc
cmp
cmp
ficompl
cmp
dec
add
rolb
aam
xchg
cmp
out
pop
sar
scas
or
divb
out
jle
fs
lds
lahf
movsb
pop
mov
push
push
inc
xor
cli
push
xor
xor
or
mov
adc
insb
mov
lahf
inc
inc
mov
pop
xorb
xchg
outsb
xchg
xor
sbb
jae
inc
sbb
pusha
xchg
mov
xchg
jbe
mov
mov
out
gs
mov
insl
inc
xor
mov
xor
push
jb
orl
movsb
mov
push
aaa
insb
loopne
insb
rcrb
jbe
cltd
add
and
mov
aaa
xor
push
inc
pushf
cli
push
into
sbb
rcr
mov
int
pusha
push
push
sbb
adc
jno
scas
inc
pop
rcrb
pushf
stc
mov
adc
cli
test
cmp
negb
cs
push
mov
pop
adc
stos
push
xor
movsl
push
pop
xchg
jle
cmc
add
sti
enter
test
dec
pushf
cmp
jge
dec
test
jno
sbb
adc
mov
out
pop
out
or
jo
test
stc
add
lods
push
and
adc
xchg
inc
pushf
cli
in
mov
lock
jae
inc
pop
inc
pop
popf
outsb
mov
cli
add
and
xor
jmp
sbb
sub
imul
cmc
mov
jle
cltd
mov
dec
add
xor
movsb
sub
push
jo
or
repz
inc
leave
in
push
push
fstpt
stos
inc
xor
arpl
loop
inc
adc
jmp
push
div
pop
hlt
and
stos
xchg
xchg
test
sbb
mov
mov
shrl
ds
push
sti
fwait
push
pop
das
add
imul
dec
xor
or
dec
mov
adc
rcrl
jae
test
or
cmpsl
ds
mov
call
pop
xchg
add
das
and
and
repnz
sahf
fidivs
test
inc
sahf
cli
sbb
fiadds
sub
dec
mov
xor
xchg
lret
mov
sub
push
icebp
jnp
inc
pop
ss
mov
roll
cmp
xchg
clc
adc
insl
inc
sub
xorl
cmp
inc
mov
ja
iret
inc
mov
xchg
mov
mov
imul
das
inc
push
ja
mov
cld
outsl
jne,pt
repnz
sbb
das
mov
aad
jns
out
lods
inc
cmp
lret
add
xor
std
or
cmpsl
dec
jle
mov
sub
xor
test
leave
dec
lods
cmp
dec
inc
dec
ss
push
jmp
mov
fcmove
cmp
scas
repz
cltd
cwtl
cmp
scas
jmp
mov
fidivrs
mov
das
xchg
sbb
xchg
cmp
stc
nop
adc
pop
and
aas
fprem
pop
mov
popa
mov
mov
jmp
xchg
mul
cmpsb
xchg
mov
mov
sub
aas
pop
jno
xchg
sbb
shlb
pop
movsl
push
js
loope
pop
fisubl
push
dec
add
xor
and
lds
loop
xor
and
lds
cltd
test
cwtl
pusha
jmp
or
jecxz
aad
inc
adc
jge
pop
cmp
movsb
dec
dec
je,pt
jmp
loop
jmp
xchg
out
jne
inc
mov
andb
lea
rcl
and
adc
repz
int3
daa
cltd
stos
pop
lods
xor
mov
shll
mov
xchg
in
in
cltd
mov
cmpl
cmp
or
add
and
lds
push
fsub
add
sub
fcoms
scas
fildl
cmpsb
popa
clc
aad
fwait
lahf
pop
pop
jg
push
jg
mov
cmp
sub
add
sbb
jp
mov
cwtl
xchg
notb
lret
mov
repnz
add
lods
test
mov
call
test
mov
test
clc
fdivr
push
add
mov
push
jb
andb
cmpsl
out
sbb
lds
leave
cmpl
xchg
adc
mov
mov
mov
rcl
mov
mov
jnp
pushl
and
mov
sti
jmp
dec
in
mov
adc
sbb
mov
fs
pusha
pop
pop
add
xchg
icebp
sti
jno
mov
or
jne
scas
cmp
loopne
std
xchg
outsl
in
inc
out
sbb
mov
fstl
or
lods
leave
loopne
stc
push
ljmp
mov
sub
movsb
outsl
jmp
out
mov
sub
nop
jl
ret
mov
and
sub
andb
fprem
jns
sub
and
stc
imul
and
aam
sarb
dec
mov
outsl
add
mov
sahf
sbb
mov
jnp
in
jno
dec
jp
movsl
orb
popl
mov
sarl
inc
pop
icebp
jno
sbb
repz
jno
xchg
inc
bound
or
pop
adc
mov
push
pop
mov
jbe
test
fcmovne
xlat
pop
sahf
and
inc
push
mov
ror
pop
add
adc
cmp
sbb
cwtl
xlat
les
and
pushf
scas
test
test
push
sub
aad
mov
test
sbb
in
dec
aam
xchg
popl
push
push
mov
jb
leave
out
push
pop
xchg
aas
xor
dec
sub
pop
insl
dec
dec
jnp
lret
xor
pushf
shll
xlat
inc
lods
or
iret
pop
lods
cmpsl
mov
jp
adc
mov
cmp
lret
xchg
loopne
out
ret
adc
fdivrs
lahf
xchg
sub
push
inc
fsubl
inc
arpl
ja
repnz
mov
mov
rclb
mov
out
in
imul
movsl
adc
mov
pushf
ljmp
ljmp
mov
fnstcw
jecxz
pop
and
inc
jnp
jb
jns
call
mov
mov
xchg
add
inc
mov
add
xchg
xor
loopne
inc
jnp
repnz
das
pop
test
mov
jae
mov
dec
mov
es
or
lods
push
add
and
lea
rolb
test
adc
je
xor
xchg
dec
push
cwtl
sbb
in
xor
cmp
mov
fwait
or
inc
xchg
movsl
mov
pop
xor
dec
scas
int3
fadds
inc
and
gs
cltd
xchg
pop
mov
loopne
jl
outsb
pop
imul
jbe
sub
jle
loope
cltd
mov
fdivrl
xchg
adc
sub
ss
out
mov
pop
mov
js
jnp
mov
fwait
je
and
test
out
nop
rcpps
or
fdivs
pop
cmpsl
mov
popa
fidivl
xor
cmpsl
imul
jne
nop
push
jge
les
inc
dec
dec
ljmp
rorb
repz
popa
mov
mov
dec
jb
jb
mov
negl
pop
lahf
jno
sub
xor
ljmp
sub
ret
xor
int
cmc
into
outsb
out
inc
popf
xchg
push
sub
inc
cwtl
ret
pop
in
cmpsl
dec
adc
repz
int3
push
ds
imul
dec
inc
xchg
inc
push
mov
cli
ljmpw
xorb
xor
push
ret
xor
lahf
push
lods
dec
dec
frstor
mov
clc
cmp
cmp
jnp
rorl
cmpsl
dec
and
jp
jecxz
scas
idivb
dec
sub
or
sub
dec
and
hlt
sbb
mov
movsb
cld
lods
jmp
sub
mov
sub
xor
orb
and
inc
pop
mov
adcl
add
out
movsb
cmp
dec
cmp
inc
addb
jns
ror
add
out
jae
test
inc
mov
cmp
fistpl
sub
pop
and
xor
aad
xchg
lods
xor
test
jle
add
push
inc
fs
pusha
lea
push
mov
dec
notb
repz
push
mov
sbbl
jmp
pop
push
or
enter
in
or
jo
shlb
push
and
fs
jmp
ret
negl
sbb
pusha
lock
pop
jl
pop
jb
mov
lret
pushf
bound
pop
rcl
lods
test
sbb
mov
ficoml
adcl
leave
lods
mull
ret
ret
inc
shrl
jle
ss
push
mov
pop
aad
xchg
mov
mul
mov
cmp
cmp
clc
test
push
std
xchg
cmp
cwtl
das
dec
incl
dec
add
jo
inc
dec
lret
sbb
loope
cld
adc
loop
jp
xchg
loop
pop
dec
loop
fs
xor
pop
mov
jmp
sarb
lret
in
or
cmp
aaa
pop
pop
in
into
int3
xchg
loop
in
stos
push
ja
fmul
or
cmp
das
mov
lahf
repz
iret
push
insb
xchg
push
dec
outsl
xchg
adc
daa
fs
pop
bound
lahf
movsb
cmpsl
lcall
icebp
add
aad
sub
test
rcrb
push
rcl
adc
sbb
pop
jnp
jns
shll
xchg
daa
add
mov
sahf
jg
fsubrs
xor
inc
loope
inc
cld
xor
and
nop
popl
pusha
sahf
add
or
in
mov
fstpl
add
pop
and
mov
jg
movsb
and
ss
jge
lods
scas
mov
test
out
mov
es
sbb
push
mov
out
mov
ja
call
mov
fists
sub
inc
bound
test
out
loop
sbb
jge
or
mov
mov
inc
adc
pop
test
pop
cltd
stos
out
adc
sahf
cmp
divb
jbe
inc
xor
call
xor
call
mov
cmpsb
and
mov
cmpsl
sub
scas
mov
jb
sti
outsl
addr16
mov
data16
adc
outsl
xor
sahf
aad
push
mov
push
std
xchg
push
fwait
and
ja
jl
imul
and
inc
das
leave
xor
icebp
test
pop
ret
ror
sub
inc
mov
enter
popa
jg
es
loope
cmp
cmpsl
pop
dec
jne
cmc
sub
sarl
jbe
or
push
mov
or
fistl
nop
pop
cmp
inc
jb
outsl
xor
and
jg
push
ret
mov
ret
push
das
cmp
lods
into
cmp
mov
add
cld
mov
nopl
pop
stc
call
jo
sbb
movsb
and
jmp
pop
adc
lods
push
xchg
cmc
fs
add
addr16
and
jnp
into
movsb
cmp
and
xchg
std
lock
or
and
xchg
or
clc
pop
xlat
jno
aam
loope
roll
out
stc
lods
dec
mov
stos
cmp
sub
insb
maxps
out
mov
inc
lods
dec
pop
stos
xchg
xor
aas
loop
push
adcl
jae
and
test
int3
lret
pop
fs
mov
out
notl
lea
jmp
sub
pushf
lahf
orl
jg
iret
mov
adc
inc
cld
and
mov
rcl
mov
les
je
jecxz
fwait
xorl
adc
lcall
or
xchg
pop
mov
mov
adc
dec
xchg
add
das
and
xchg
fadds
adc
in
push
xor
insb
jb
sbb
sbb
or
or
xor
scas
pop
inc
xlat
gs
mov
xchg
mov
and
cld
scas
adc
loopne
pop
out
xchg
mov
lods
test
jb
das
xchg
jp
dec
sub
rcrl
xor
js
test
mov
scas
pop
cmp
jg
xor
jnp
or
sbb
int
jge
sub
mov
cmp
mov
test
test
in
fwait
gs
or
test
aaa
inc
bound
sbb
int
stos
outsb
cs
push
dec
movsb
aaa
mov
dec
in
int3
out
mov
mov
rclb
out
and
lods
xchg
nopl
inc
jge
dec
mov
cmpps
xchg
je
fstl
fisttpll
cmc
js
adc
mov
in
rcl
xchg
in
addl
addb
mov
push
push
int
loop
add
addr16
dec
mov
lahf
in
fsubr
adc
mov
addr16
add
inc
scas
movsb
stc
das
push
cmpsb
jl
loop
pop
std
lods
mov
repnz
mov
test
pusha
adc
enter
stos
push
lea
adc
adc
mov
inc
out
in
adc
das
cmp
aaa
mov
repz
cmc
mov
scas
insb
cli
fldcw
add
jmp
push
or
mov
adc
push
mov
adcl
lock
movsl
cmp
push
dec
mov
ret
in
xlat
clc
fdivr
mov
icebp
mov
scas
and
test
jno
out
mov
outsb
inc
enter
mov
push
movsl
pop
add
pop
ret
xor
pop
fisttpl
push
lods
cltd
in
push
call
add
out
add
ljmp
das
rcl
in
dec
jp
sub
subb
mov
push
mov
out
sub
pop
push
aas
push
inc
gs
in
pop
inc
lods
cmp
insb
stos
adc
jb
fs
shrl
or
add
mov
inc
sub
test
shrl
sbb
cmc
pop
lods
in
jp
mov
shl
faddl
mov
push
out
es
gs
xchg
pushf
xor
jecxz
sbb
les
or
outsb
imul
sbb
mov
out
in
aas
adc
in
xor
push
mov
inc
jno
xchg
sub
pop
pop
mov
jecxz
stos
out
int3
add
mov
sbbl
jl
sub
mov
and
rclb
insb
xchg
addl
fmuls
and
stos
pop
out
fldt
push
jbe
jbe
jmp
fmul
fimull
clc
out
dec
sbb
add
mov
enter
jo
dec
std
sahf
or
movsl
cmp
jg
nop
jnp
addr16
and
out
fisttpll
out
xor
mov
sbb
test
imul
jmp
loop
ror
repnz
mov
xadd
dec
test
les
lahf
push
inc
lahf
addr16
sarb
or
xor
push
out
or
mov
cmp
les
inc
push
cmc
repz
mov
shl
push
fs
les
out
loopne
mov
ficompl
into
in
xlat
push
aam
outsb
xor
add
pop
icebp
inc
mov
adc
adc
rcl
mov
pop
mov
lods
cmp
nop
jg
jno
push
dec
movsb
cmp
call
sub
repz
nop
testl
add
adc
push
push
iret
mov
les
xor
out
xchg
insl
jmp
pop
cmp
cmp
push
mov
shr
or
xor
test
divb
mov
mov
in
inc
inc
mov
pusha
lahf
int
lret
jbe
out
std
insb
push
pop
movsl
sbb
lcall
lea
rcrl
jmp
int3
add
js
mov
xlat
sti
adc
les
pop
insl
push
pop
test
scas
push
cwtl
pop
subl
in
out
push
xlat
jecxz
or
stos
call
inc
rorb
inc
xlat
mov
ficompl
lea
dec
push
push
shlb
jge
gs
adc
sub
divb
xchg
xchg
je
inc
push
fildl
lods
arpl
sbb
cli
ds
xchg
movsl
cwtl
cmpsl
push
dec
dec
scas
out
sbb
jnp
jg
imul
or
adc
sbb
test
dec
shll
repnz
cwtl
ret
pop
xor
idiv
outsb
rclb
push
call
and
int
arpl
movsl
gs
and
outsl
add
mov
sbb
aad
inc
pusha
mov
lods
ja
dec
push
lahf
pop
push
lret
jnp
imul
nop
ret
push
ds
cwtl
psraw
mov
push
sbb
enter
jb
adc
xchg
sbb
and
inc
mov
aas
xchg
in
mov
pop
rcl
pop
lea
fimull
aas
in
sti
stos
jno
pop
ss
jb
pop
in
daa
popf
push
xchg
xchg
mov
adc
add
jb
dec
mov
sbb
pop
xchg
cmp
add
fcomi
scas
add
je
sar
sbb
in
jle
push
test
decb
ret
mov
push
push
push
and
jae
shrb
insb
scas
inc
mov
add
ret
xchg
stos
inc
or
stos
leave
test
lret
iret
xchg
and
cmpl
mov
mov
icebp
jp
fsubrs
dec
add
pop
iret
sbb
shll
sbb
scas
loope
jns
mov
ljmp
leave
bound
pop
jmp
clc
test
and
cmpl
ret
movsl
mov
jmp
lods
sbb
and
or
mov
jo
out
dec
add
scas
dec
mov
outsb
aaa
mov
dec
orl
cltd
xor
push
xchg
dec
enter
bound
dec
pop
pop
andl
mov
or
pusha
jp
xchg
popa
xlat
xlat
mov
mov
xor
outsb
push
lahf
bound
mov
mov
dec
loopne
sarl
push
add
rolb
ja
pop
test
mov
addr16
sti
add
cmpb
mov
jg
jl
loopne
stc
adc
xchg
stos
aas
cmpsb
cmp
pop
sbb
clc
dec
and
imul
sti
leave
in
enter
pusha
stos
mov
lahf
add
lcall
icebp
rolb
jae
sti
jbe
sbb
jle
add
add
inc
pop
dec
mov
insb
test
testb
nop
jae
scas
lods
aad
fcmove
inc
xchg
jne
in
mov
inc
ss
test
inc
into
jl
sub
lods
add
xchg
pushf
outsl
dec
repnz
pop
dec
popa
shl
xchg
outsl
lock
xlat
cmp
mov
sub
sbb
and
imul
mov
test
mov
stos
dec
cmp
jmp
test
cld
add
push
test
mov
mov
sub
xchg
int
movsl
sbb
xchg
das
push
xor
insb
cmc
fsubrs
jle
mov
cmp
xor
shrb
mov
inc
sub
xor
sub
pop
enter
rcrl
je,pn
xor
xchg
mov
out
sahf
xor
insl
push
mov
jnp
add
into
cmp
mov
dec
cmpb
dec
pop
insl
mov
scas
and
and
mov
orb
sbb
out
stc
or
dec
inc
repz
push
cmp
rcrl
xor
mov
and
push
sarb
imul
fmull
popa
pop
notb
pushf
jge
inc
and
jnp
popf
mov
dec
dec
push
imul
dec
insl
inc
into
push
cwtl
push
ss
mov
gs
push
inc
into
fcmovne
dec
lcall
inc
push
mov
test
dec
fildll
test
movsl
ds
daa
in
scas
inc
iret
frstor
push
in
out
adc
lods
fdivl
or
mov
js
jb
or
in
or
add
pop
or
mov
mov
fidivs
xchg
subb
add
call
push
scas
repnz
scas
and
fadds
out
jb
mov
ret
and
push
sbb
lret
cld
sub
ljmp
sbb
inc
push
inc
out
outsl
and
adc
inc
insl
lahf
fs
int3
andl
cmp
or
mov
xor
ret
add
pop
push
in
aaa
jecxz
jp
sub
mov
fwait
mov
or
in
or
xchg
in
mov
jo
xor
or
mov
push
cmp
pop
test
inc
inc
fsubrs
mov
mov
in
inc
sbb
outsl
shl
mov
fucomip
sub
or
int
xor
xchg
popa
mov
push
cmp
popa
stos
ficomps
jnp
dec
jae
push
cmp
in
mov
les
gs
fidivl
shll
pop
mov
lea
sbb
sub
adcb
lods
orl
lret
ret
mov
gs
xchg
dec
adc
dec
loop
mov
mov
cli
out
lock
outsl
ds
testb
dec
adc
notl
daa
sbb
ds
inc
dec
jo
push
mov
popf
stos
mov
shrl
loop
popf
imull
fdivs
xchg
sbb
mov
xchg
sbb
dec
lock
dec
lods
xlat
aam
xor
inc
mov
jl
push
dec
jecxz
xchg
push
scas
out
cmc
ja
roll
xchg
sahf
es
mov
shl
jg
insb
js
cmp
loop
mov
fsubrp
movsb
ja
or
fisubrl
stos
je
das
push
ret
loope
sahf
cs
jnp
rcrb
pushf
outsl
pop
fbld
add
jb
push
lea
insl
cmpsl
dec
cmp
pop
into
notb
pop
mov
testb
mov
sub
out
sbb
pop
test
insb
shrl
jo
lods
cld
outsb
add
rclb
fucomp
dec
xor
mov
sahf
repnz
mov
jb
pop
sub
pop
or
fdivrs
mov
icebp
ret
sbb
daa
mov
je
mov
stos
ja
lods
inc
lods
cwtl
lret
js
mov
rcrb
mov
xor
inc
in
stos
int3
mov
pop
cmpsb
mov
cmp
jecxz
rol
pop
stos
scas
push
xchg
shrl
pusha
cltd
repnz
hlt
enter
lcall
insb
xchg
jns
cmpsl
mov
adc
vmovss
int
ror
mov
popf
pop
mov
xor
and
in
inc
lods
and
scas
mov
xchg
sub
nop
in
dec
divb
xor
call
leave
cmpps
imul
pop
sub
imul
mov
mov
rorb
xchg
mov
lahf
dec
dec
fpatan
mov
xchg
pop
adc
xorb
jmp
into
bound
pop
aad
shrl
shrl
mov
sbb
adc
lret
xlat
outsl
xor
insb
sbb
les
sub
jno
sub
popf
jbe
mov
or
xor
popf
push
clc
sbb
push
repz
lret
loop
mov
les
xchg
pop
out
cwtl
jmp
repnz
or
adc
sbb
shl
loop
inc
sbb
add
and
ljmp
stc
pop
jecxz
repnz
fcoml
mov
loope
in
inc
mov
add
cmc
aad
test
mov
movsl
adc
arpl
xor
mov
fstpl
xchg
push
inc
popf
cmp
cltd
das
mov
addr16
aaa
mov
pop
fwait
cld
jae
les
adc
push
data16
mov
mov
mov
insl
shrl
inc
data16
out
imul
push
int3
push
jno
xor
xchg
movsb
xor
out
adcb
or
push
xchg
inc
pop
or
mov
inc
sub
xor
daa
popl
or
rcrl
test
dec
mov
shlb
adc
sbbl
pop
pop
popf
or
fadds
inc
loope
out
imul
lds
in
xchg
push
mov
pop
jmp
add
inc
call
cmp
add
lea
jge
mov
imul
movsb
icebp
push
dec
into
sbb
int3
xchg
sarl
imul
adc
add
mov
fs
bound
aam
push
test
cmc
push
call
xchg
add
pop
add
and
adc
je
jmp
das
pop
shll
mov
movsb
sub
int3
loopne
lcall
cld
sar
push
lea
xor
scas
lcall
pop
lock
pop
cld
test
repz
sbb
jne
adc
and
xchg
dec
push
sub
sub
pushf
inc
pop
call
test
bound
fs
sbb
aas
in
mov
xchg
inc
test
jns
mov
addb
cmc
rolb
add
clc
adc
data16
xor
fnstsw
inc
fsubs
pop
outsl
push
stc
lds
notb
lds
cmc
mov
je
lds
adc
in
ret
and
jle
dec
sbb
pushl
xchg
pop
adc
xor
clc
inc
test
js
add
lret
or
leave
popf
leave
pop
jne
or
dec
jae
daa
inc
clc
test
push
imul
test
push
xor
jae
push
push
dec
loope
scas
and
and
icebp
or
lcall
xor
jp
xor
je
push
push
shrb
ret
call
imul
push
push
cmpsl
addr16
fbstp
jo
lock
mov
sbb
and
shll
clc
aaa
sub
loope
xlat
sete
mov
fldenv
inc
dec
sub
mulb
inc
fistpl
mov
mov
sbb
aad
add
cmp
adc
push
lea
adc
stos
mov
incb
jo
cltd
pop
pop
cltd
adc
std
sbb
mov
mov
movsl
sbb
loop
jbe
fidivl
shr
lea
sahf
mov
and
das
ret
mov
or
jb
push
adc
inc
add
mov
lahf
ss
test
popa
adc
lock
dec
jge
pop
sub
daa
inc
in
mov
jae
cmpsb
dec
sbb
xchg
cmp
push
out
push
call
rcll
xchg
xor
outsb
and
sub
or
add
vpsubw
into
loop
xchg
xchg
repnz
push
movsb
rolb
or
lds
decl
out
push
fisubrl
sti
pop
jae
mov
mov
jnp
ja
stos
xchg
adc
cmp
int3
adc
jg
into
jo
outsl
jnp
mov
sub
test
movsl
pop
mov
mov
fnstsw
test
push
mov
mov
insb
call
bound
xchg
mov
stc
int
mov
mov
es
cmp
sbbb
rcll
insl
mov
bt
xchg
daa
mov
sub
ret
pop
push
mov
icebp
je
jns
icebp
popa
cli
fadd
call
divb
pop
cmp
xchg
dec
std
std
into
pop
xor
lret
dec
repnz
in
insb
cwtl
lret
inc
iret
lods
push
movsb
in
sbb
pop
and
mov
jmp
jg
pmulhuw
cmp
std
and
sub
jns
or
popf
sbb
int
jmp
inc
lods
incl
or
xchg
sbb
shrb
aad
inc
push
xchg
rcr
mov
cmp
mov
xchg
inc
pushf
int3
sub
repnz
or
sub
dec
icebp
rcrb
repz
xchg
xchg
mov
fs
sbb
fmull
push
dec
pusha
inc
xchg
sub
rcl
jge
test
cmc
cmp
fbstp
sub
outsb
jne
push
jno
jae
mov
mov
xchg
int
fdivs
lock
pop
es
xchg
or
data16
ljmp
sbb
cmp
jge
ljmp
mov
sub
xor
fiadds
mov
ljmp
inc
push
sbb
dec
pushf
aad
fs
inc
mov
out
cmp
cmp
inc
pop
adc
std
and
mov
mov
mov
in
in
sbb
mov
xchg
gs
xor
mov
loope
jae
jne
adc
xchg
nop
daa
pop
stos
jecxz
fnstsw
bound
xchg
dec
loopne
js
adc
pop
mov
and
pushf
scas
jns
insl
add
jbe
add
xor
mov
clc
inc
mov
mov
or
hlt
inc
dec
pop
cmp
sahf
inc
aam
pop
shrl
adc
test
mov
rorl
bound
cmp
sbb
movsl
mov
cmp
fisubs
dec
insl
roll
dec
in
mov
lock
or
repz
hlt
cmc
and
or
lcall
pop
sbb
jne
outsl
out
pusha
pop
add
dec
push
push
push
int3
sti
mov
xchg
mov
add
scas
dec
in
adc
lea
stos
mov
mov
dec
xlat
retw
outsb
stc
sbb
in
stc
test
xor
jmpw
lret
and
jg
bound
mov
dec
push
divb
out
jnp
add
outsl
movsl
notl
or
sbb
inc
xchg
or
divl
mov
fimull
andb
cmpsl
shll
je
adc
adc
fcmovnbe
sahf
sub
inc
xchg
mov
mov
jg
andb
xadd
xor
add
or
shl
dec
iret
jge
jae
cs
popf
mov
mov
and
popa
mov
xor
je
bound
flds
cmpsb
cmp
jecxz
xorb
dec
pop
pop
bound
or
cmp
or
xor
xchg
xchg
dec
mov
ja
test
lret
pusha
and
lcall
and
aad
mov
popa
lods
pop
xchg
sub
ja
repnz
jb
mov
arpl
sbb
imul
stos
cmp
loope
adc
pop
nop
cld
dec
shlb
lcall
lahf
sub
std
fdivp
outsb
addr16
mov
in
mov
imul
clc
mov
cmp
mov
aad
jmp
imul
mov
js
inc
fcmovbe
test
cmp
xor
sbb
jnp
mov
mov
cs
jg
adc
aaa
mov
mul
daa
cmp
in
xchg
rcl
icebp
or
cmp
mov
ret
mov
aas
pop
data16
movsb
mov
jecxz
adc
repz
lea
cmc
mov
out
shrl
jmp
mov
outsb
sbb
dec
repnz
inc
or
inc
sarb
xchg
jo
movb
dec
cmp
and
mov
add
cmpsl
push
movsl
cwtl
adc
mov
mov
cmp
shlb
rclb
xchg
cmp
out
movb
movsb
andb
pop
xor
outsb
test
mov
adc
out
incb
fwait
test
xchg
add
lods
inc
pop
xchg
mov
add
loope
pop
in
subb
out
fnstenv
xchg
sbb
push
fbld
ficompl
lea
mov
xor
pop
bnd
outsb
repz
push
call
push
push
ljmp
adc
rol
cmp
fwait
mov
test
sbb
sbb
pushf
sub
cmpsb
test
push
xchg
daa
in
add
aaa
imul
inc
xchg
loop
int3
pop
sub
stos
push
dec
movsl
cmp
inc
xor
mov
les
imul
xchg
pop
mov
lret
dec
imul
sub
cmpsb
xchg
jp
imul
dec
sbb
nop
inc
rcr
mov
mov
cmc
jmp
push
lods
pop
mov
rol
gs
jecxz
scas
inc
inc
push
lahf
ss
dec
lods
inc
inc
mov
and
loopne
mov
imul
dec
scas
sbb
inc
rep
sbbb
out
xor
pusha
push
mov
not
loope
dec
and
cmp
hlt
sub
inc
mov
mov
mov
enter
push
stos
cmp
add
inc
cmc
inc
test
lret
popa
or
fidivs
xchg
sarl
les
lea
mov
lods
mov
push
xchg
insb
icebp
sbb
in
ja
mov
mov
add
ds
inc
dec
loopne
loop
insb
adc
ljmp
nop
xchg
ret
pushf
lock
dec
rcl
inc
inc
arpl
icebp
into
mov
add
out
cmp
sbb
pusha
outsb
dec
mov
jp
mov
mov
ffree
adc
cmp
jl
push
jg
scas
mov
insl
dec
mov
sbb
pop
jl
pop
mov
jp
jae
test
jg
gs
xchg
cmc
add
mov
xchg
xchg
mov
fcoml
jle
mov
mov
adc
jo
cltd
pop
js
lea
lds
xchg
dec
xor
cs
in
in
cmpsb
test
inc
cli
shll
pop
cmp
pop
ljmp
inc
fimull
mov
mov
ret
dec
push
es
aam
icebp
jg
clc
adc
mov
out
sti
lds
sbb
pusha
fisttpll
fistpll
out
jae
fwait
fs
mov
cmp
call
iret
mov
push
and
jl
out
ret
jae
xchg
lret
sub
adc
stos
cmp
jae
add
shlb
jp
std
loopne
adc
or
out
lock
add
mov
add
inc
mov
or
xor
push
shll
popa
sub
in
xor
sub
repz
mov
cltd
lret
nop
hlt
clc
xor
int
xchg
mov
adc
sbb
mov
sahf
cmp
mov
mov
stos
ljmp
jge
clc
push
mov
sub
pop
fldl
or
int3
sbb
cs
cmp
jae
or
lret
inc
sbb
add
push
hlt
cmpsb
les
dec
pop
mov
loop
inc
notl
stos
jp
imul
fs
mov
or
in
jne
jle
xchg
mov
cwtl
je
filds
adc
lret
dec
fbld
dec
add
mov
dec
popf
xor
imul
cwtl
pop
inc
mov
wbinvd
out
or
sub
bound
lret
sbb
lock
pop
mov
das
or
cli
fldenv
fildl
dec
notb
xor
sub
lods
cmp
and
in
sbb
dec
out
inc
mov
scas
shrb
push
sub
mov
mov
lods
aad
or
mov
jmp
cmp
push
cmp
lea
into
lods
pop
dec
lds
jns
cmc
mov
loope
add
jno
addr16
jbe
shll
test
cmc
push
sub
sbbb
insl
fdivrs
sub
test
in
rorb
iret
or
jae
mov
lret
xlat
shll
sub
testb
out
in
dec
push
mov
add
popa
mov
in
in
jge
rcl
cmp
stc
push
icebp
dec
movl
lock
decb
imul
or
lods
sbb
rcrl
aam
add
or
xchg
lds
outsb
insb
mov
xor
ret
lea
xor
arpl
std
sbb
jmp
rcll
aad
test
jecxz
dec
sbb
xchg
lret
jno
pop
mov
sbb
jo
cwtl
xor
or
or
cmp
imul
icebp
adc
mov
mov
push
dec
mov
aam
or
dec
out
andb
dec
add
stos
jmp
jno
and
inc
fdivrl
ret
add
in
pop
outsl
sbb
cmp
add
shrl
mov
push
xchg
xchg
lea
adc
std
ret
and
daa
sbbl
dec
sub
push
test
inc
shlb
lock
adc
push
daa
inc
test
mov
fwait
and
dec
pop
enter
mov
jbe
cmp
fmull
mov
sbb
add
xchg
outsl
rcrl
add
in
aam
pop
xchg
ljmp
addl
and
push
inc
xchg
mov
dec
js
aas
stos
sub
pop
imul
add
pusha
xchg
pushf
jg
jge
jge
test
and
pop
mov
lock
cmp
jle
mov
repz
sub
jns
xchg
sbb
icebp
mov
repnz
sub
aad
mov
aad
ss
mov
loop
lea
and
push
aaa
bound
test
enter
pop
pop
sti
push
fnstcw
mov
xchg
jg
stos
sbb
fidivs
mov
ljmp
jle
push
out
fs
cmp
movsl
imul
arpl
add
xchg
test
lret
jne
push
cmp
inc
xchg
test
adc
mov
cwtl
das
sbb
pop
hlt
adc
jnp
fs
data16
cmpsl
mov
add
imul
dec
mov
int3
push
hlt
ret
jb
ljmp
test
cmp
js
sbb
mov
movsb
pop
xchg
adc
dec
in
sub
call
push
out
dec
in
xchg
scas
testl
mov
or
shr
inc
fcmovne
hlt
pop
movsl
mov
outsb
shll
and
and
jecxz
fsubr
mov
jle
push
ret
sub
fsubrl
inc
xor
xor
inc
jb
dec
xlat
rclb
adc
movsl
cmp
mov
fnsave
mov
fwait
aas
sub
adc
bound
icebp
pop
aaa
leave
fstps
mov
mov
dec
mov
mov
dec
pop
fsubs
lock
mov
pop
xchg
fisubl
inc
fldcw
pop
pop
dec
mov
out
push
fcom
sub
leave
inc
mov
loopne
jo
loopne
push
das
ljmp
mov
inc
fidivrs
add
ljmp
jle
sub
bound
lods
inc
iret
inc
mov
sub
and
std
mov
xor
push
in
mov
mov
insb
mov
pop
fwait
shlb
mulb
xor
dec
sub
jae
popf
mov
mov
icebp
cmpsl
cmpsb
fidivs
inc
js
sahf
jns
adc
sub
cld
xor
and
push
pop
jo
and
stc
nop
in
or
ds
repz
jecxz
pop
dec
mov
loop
test
cmp
or
xchg
fwait
stos
sbbb
add
stos
idiv
pushf
xor
or
incb
mov
xchg
push
pusha
jnp
push
pushf
mov
sub
sbb
sub
xchg
adc
dec
fisttpll
fs
shlb
sbb
cld
jo
ret
hlt
sub
jl
jns
sbb
mov
jne
mov
pop
add
mov
rolb
ljmp
pushf
inc
scas
shll
aas
cwtl
aaa
xchg
xchg
imul
sbb
int3
cmpl
mov
adc
shrl
in
pop
fwait
pop
adc
sub
arpl
cmpb
arpl
dec
pop
sub
sub
loope
jecxz
xchg
imul
mov
xorb
add
outsl
and
and
push
stc
rcl
enter
pop
sub
push
inc
rorb
or
push
movsb
je
mov
ret
outsl
div
adc
sub
mov
push
iret
lcall
bound
dec
dec
push
mov
pop
test
ja
inc
sub
push
shl
cltd
stos
mov
iret
loop
fbld
cs
leave
int
jp
mov
add
rcl
and
fidivs
mov
fldl2e
sub
in
push
sbb
loope
jl
inc
insl
inc
pop
mov
or
pop
in
cs
out
push
mov
test
add
aam
ja
dec
scas
sub
ficompl
add
ret
push
shrb
push
out
jae
add
movsb
xchg
and
push
leave
mov
mov
mov
xor
subps
int
out
std
adc
addr16
les
fisubs
mull
cli
repnz
xor
sbbl
iret
fbstp
dec
mov
mov
inc
loopne
push
pusha
les
sub
sbb
ss
fsts
ja
xor
imul
pmaxsw
rcrb
or
aaa
push
les
fistl
gs
divb
ret
mov
out
cmpsl
sub
fdivrs
enter
cmp
and
lds
rcrb
rol
lcall
sbb
test
push
imul
jp
fwait
test
popf
cmpsb
jl
stos
push
add
pop
pop
lret
mov
hlt
xor
mov
or
mov
jmp
sub
add
push
hlt
xchg
out
push
adc
movsb
push
ja
mov
cli
pusha
insl
add
pop
incl
inc
fdiv
jg
push
push
stc
sub
and
xor
cmpb
inc
cmp
pop
ficompl
pop
clc
scas
popa
mov
xor
test
and
frstor
push
cmp
inc
mov
mov
test
aam
and
ja
cmp
shll
inc
mov
lds
pop
mov
movsb
nop
xor
js
cltd
pop
sbb
mov
jmp
sbb
leave
pop
sub
subl
cltd
movsw
mov
add
icebp
je
mov
jnp
fdivs
inc
xor
sbb
stos
test
icebp
dec
adc
test
cltd
shll
in
das
lds
push
dec
dec
scas
icebp
pop
call
int
mov
or
sub
or
fnstcw
cmp
inc
cmpsl
mov
mov
pop
jns
dec
and
jnp
pop
cmc
dec
cmp
addb
add
push
rorl
leave
shll
pusha
push
inc
dec
dec
xchg
lcall
or
mov
or
jecxz
fwait
lock
lds
or
scas
imul
ds
in
dec
pop
cmc
add
es
loop
mov
dec
add
push
and
aas
popl
mov
imul
leave
lret
insl
sbb
mov
xor
mov
jns
dec
imul
shrb
add
fistps
cmpsl
shrl
rorl
dec
pop
ds
jne
pop
out
movl
xor
sahf
or
cmpsl
jg
in
sub
fwait
sbbl
je
mov
es
adc
xchg
movd
pop
out
sub
push
fimull
lds
jg
mov
push
fadds
cmp
cmpsl
rcr
sbb
sbb
int3
dec
xlat
xor
dec
int3
mov
and
and
xchg
scas
nop
mov
push
dec
dec
jle
adc
jbe
cmp
pop
mov
imul
jbe
or
fistps
shrb
les
ja
pusha
lods
mov
daa
popl
add
insb
cmc
jns
dec
pop
shl
outsl
jecxz
inc
inc
add
cmp
mov
ret
sbbl
outsl
mov
ss
push
inc
arpl
mov
in
test
or
xchg
or
lds
bound
insl
test
ds
ja
adcl
adc
or
enter
sub
xor
fisttpll
les
mov
loope
mov
sbb
xchg
lds
mov
mov
movsb
push
ljmp
repnz
add
or
mov
lds
pop
mov
int
add
addr16
add
push
push
or
mov
dec
xchg
xchg
and
xor
dec
pop
sbb
nop
in
inc
pop
cmp
fs
fdivp
test
ret
xor
loopne
aaa
pushf
sub
cmp
lea
and
xchg
xchg
sub
xchg
pop
xchg
das
and
mov
ret
ss
call
add
test
mov
mulb
pop
rolb
mov
inc
sbb
add
jae
test
cli
rorl
test
js
test
repz
in
or
pop
inc
das
cld
inc
stos
aaa
sahf
popa
in
shrb
or
add
push
jle
xor
sub
mov
xor
jp
xchg
adc
mov
outsb
outsb
mov
mov
imul
or
std
mov
imul
lock
rcrb
pop
sbb
mov
pusha
test
mov
dec
sub
adc
add
std
push
out
cmp
adcb
inc
pop
add
lds
fnclex
push
test
sub
add
dec
in
sti
dec
mov
jp
push
xchg
or
jo
jo
sbb
sub
mov
dec
aaa
add
je
push
or
and
sbb
aas
pop
cmp
sub
call
mov
cmpsb
jecxz
add
mov
bound
fistps
cmp
mov
mov
lods
in
mov
out
xor
arpl
ret
fcmovu
adc
sub
dec
mov
jnp
fxch
jns
dec
filds
fwait
push
jns
add
or
pop
cmpsl
out
jne
mov
sbb
push
sub
xchg
call
loopne
ljmp
pusha
lods
mov
loope
dec
mov
ror
lret
mov
icebp
das
outsl
push
pop
push
aaa
push
push
cmp
mov
jmp
push
push
test
xchg
push
and
add
xor
lcall
inc
jmp
in
cld
arpl
or
pop
mov
gs
inc
mov
sub
fbld
pop
or
aas
cld
stos
xchg
repnz
loop
sbbl
das
popa
negl
loopne
jge
adc
mov
and
add
push
rclb
and
dec
xchg
add
pushf
mov
insl
add
out
fldt
pop
ljmp
sub
jns
pop
pop
push
aam
jecxz
or
cli
fwait
je
xor
jno
dec
add
dec
mov
shlb
in
std
cmc
xchg
sbb
sub
pop
sarl
in
mov
cmpl
sbb
out
lods
dec
mov
int3
jmp
or
mov
lods
sahf
sbbb
cld
xchg
outsl
mov
xchg
daa
sbb
cmp
lahf
out
jo
xor
andb
out
mov
xlat
enter
shll
bound
and
push
jb
iret
outsl
add
loop
or
std
ljmp
icebp
lods
mov
pop
or
jnp
addl
aas
mov
lods
adc
subl
rol
xlat
add
pop
jl
sahf
gs
or
adc
xchg
xor
out
test
bound
sbb
repnz
cmp
xor
mov
fstps
icebp
fdivrs
aam
pop
add
in
or
cmp
cltd
je
iret
ss
fs
sbb
dec
test
xchg
hlt
aam
imul
outsb
repnz
fstpl
adc
lea
addr16
pop
jne
mov
mov
push
mov
orl
out
mov
adcb
str
xor
and
rorb
cmpsl
inc
push
add
inc
pusha
and
or
fs
call
pop
jns
dec
cmp
jp
push
mov
mov
jge
push
dec
inc
cwtl
sub
movsl
inc
mov
sbb
xchg
ret
nop
fbstp
je
movntps
jnp
push
lret
je
or
lock
hlt
jecxz,pt
imul
addr16
stos
pop
cmp
sbb
sub
les
ja
popf
sbbl
in
and
cmpsl
inc
cmp
push
std
es
mov
loope
push
push
loopne
pop
inc
ret
testl
jbe
mov
out
xlat
lret
mov
jmp
xor
sbb
sub
sti
push
lea
imul
dec
ds
shl
jnp
inc
out
mov
add
push
cltd
xor
stos
sbb
mov
loopne
jle
jle
sub
pop
mov
fisubrs
stc
test
mov
adc
and
pop
push
dec
out
dec
cmc
xor
aam
les
test
lds
mov
mov
mov
or
in
sbbl
cmp
decb
das
push
scas
add
or
sbb
les
push
test
xchg
mov
fisubrs
adc
hlt
sub
push
xchg
mov
pop
out
cli
push
xor
pop
repnz
aad
loop
add
loopne
push
fidivs
push
and
mov
add
in
hlt
fidivrs
es
addl
sti
int
lcall
mov
scas
add
pop
push
or
in
sub
cmp
and
cltd
rorl
aam
jno
out
mov
push
ret
pop
mov
icebp
jno
mov
mov
jp
outsl
lock
popl
in
dec
loopne
mov
out
add
arpl
pop
insl
adc
xchg
mov
or
push
ret
mov
pop
mov
or
mov
mov
add
popf
jb
mov
sbbb
inc
sahf
inc
ja
mov
hlt
dec
push
xchg
push
in
out
stc
pop
ds
mov
mov
repz
push
imul
fldl
cltd
pop
ds
mov
pop
movsb
jb
pop
push
sahf
sub
jp
popa
mov
fwait
push
dec
or
jle
or
mov
dec
imulb
call
jns
xor
mov
xchg
mov
enter
test
cs
aaa
fwait
mov
jl
or
cmpsl
jnp
aad
dec
scas
aad
jecxz
pop
mov
or
mov
dec
pop
or
fwait
sti
fiaddl
sbb
scas
sbb
call
jbe
jl
cmpsb
sub
ja
jno
pop
pop
sbb
loopne
fists
mov
repnz
fs
xchg
jns
xor
ja
mov
sbb
cld
push
adc
out
popa
aaa
ret
cmp
dec
push
es
mov
test
dec
sti
mov
inc
gs
enter
adc
and
out
sbb
in
xor
dec
outsb
pop
aaa
stos
dec
lret
in
cmp
sbb
add
xor
dec
in
jae
xor
push
gs
leave
xchg
jge
insb
fists
pushf
sbbb
mov
jg
xchg
int
add
mov
vpavgw
imul
mov
cld
push
mov
imul
mov
adc
loop
inc
xchg
rcl
inc
pop
pop
and
jg
pop
xchg
mov
lret
ficomps
dec
std
dec
stos
ljmp
repnz
inc
push
jnp
fucom
mov
sbb
out
into
out
call
dec
xchg
loopne
fsubrp
icebp
dec
out
push
int3
fcompl
sub
push
mov
jp
mov
pop
pusha
mov
mov
sbb
pop
sub
jns
push
cwtl
pop
hlt
leave
iret
aas
stc
mov
pop
cmpb
xchg
xlat
loopne
and
adc
or
xchg
push
addr16
pop
mov
jno
enter
popf
adcl
push
push
ja
cmpsl
jmp
insl
clc
popa
pusha
sub
inc
out
jg
add
jle
test
cltd
pop
adc
dec
xor
xor
inc
hlt
cmp
adc
cs
adc
repz
adc
sub
xor
push
adc
lret
out
mov
pop
lods
rcrl
xchg
push
or
stc
xchg
bound
lds
xorl
pop
mov
mov
adc
push
add
xchg
sub
or
out
fidivrs
inc
outsb
test
inc
outsb
lods
adcb
icebp
aad
inc
insl
sahf
cmpl
mov
mov
mov
loopne
pop
pop
sbb
cmp
jl
jo
cs
rep
mov
sub
dec
test
jb
dec
lcall
out
out
insl
xor
fiaddl
pop
push
les
xchg
xchg
jl
test
push
push
sti
xchg
xchg
arpl
dec
loop
dec
push
jle
jns
jno
mov
daa
inc
in
test
adc
jbe
cmp
xlat
sbb
bound
test
cmp
cmc
pop
xlat
push
loope
jbe
addr16
push
inc
gs
inc
or
xchg
stos
loope
push
cmp
sbb
lret
jne
sbb
in
aad
sbb
sbb
pop
mov
iret
out
add
das
mov
aad
jmp
or
mov
imul
mov
push
addb
sbb
lods
ljmp
adc
mov
push
xchg
add
push
pushf
sub
aaa
dec
rorl
lret
xchg
adc
pop
inc
js
xchg
lcall
ds
push
test
popa
xchg
ja
cmp
jns
aad
rorb
jae
add
jnp
outsb
mov
pop
or
jno
out
mov
jle
scas
scas
sbb
mov
mov
xchg
lcall
fists
flds
sub
sub
xor
fstpl
mov
fs
movsb
shrb
or
cld
aad
sbb
in
push
jl
nop
pop
cmpb
jp
jmp
pop
ficoml
xchg
xor
xor
cmpsl
loop
mov
fcmovbe
xchg
aad
cli
cwtl
leave
jecxz
das
fisubrs
lret
mov
cmp
cli
lret
mov
int
aaa
push
xor
jnp
out
xchg
sub
rcl
ss
scas
add
cmpsl
mov
jo
test
aad
and
hlt
inc
mov
push
in
lea
rcr
push
imul
pop
unpckhps
sbb
add
out
cmp
fs
push
ljmp
jno
lret
imulb
sbb
sbb
cwtl
pop
xor
iret
sti
lret
jae
push
sbb
jnp
sbb
xchg
fs
and
sti
loopne
lcall
or
cs
jb
pop
dec
add
add
xchg
insb
pushf
sbb
add
push
pop
xchg
call
jne
addr16
out
mov
push
notb
loopne
sbb
xor
jl
inc
fldcw
mov
adcl
into
ret
xor
lret
xor
jge
xchg
sahf
incl
jge
test
fiadds
cmp
andb
nop
xchg
leave
gs
mov
ljmp
jge
nop
xor
xor
insl
les
pop
xor
fs
fnsave
push
inc
push
jno
lret
xlat
mov
inc
ret
dec
pop
bnd
mov
pop
or
popa
sbb
in
sub
leave
xor
xchg
pop
sub
ficomps
jno
inc
lds
ljmp
cli
xchg
jbe
mov
xchg
inc
xor
mov
jne
fabs
mov
rcr
and
mov
out
jp
add
pop
mov
push
adc
int
mov
scas
mov
arpl
mov
bound
and
dec
cmp
push
test
push
lods
frndint
jmp
fucomp
adc
inc
out
xorl
or
sbb
push
xor
fwait
mov
mov
gs
imul
sahf
xchg
sbb
pop
dec
mov
xchg
add
mov
jno
push
xchg
xor
or
mov
jo
and
aad
roll
in
in
mov
pop
mov
movsl
pop
jmp
mov
movsb
sti
xchg
push
bnd
jmp
push
outsl
addr16
lods
rolb
cmp
push
jns
test
jle
ja
pop
sub
or
in
xchg
sarl
mov
dec
adc
test
and
cltd
or
jmp
cmc
sbb
shll
rol
fimuls
lds
dec
loopne
aaa
inc
cmp
repnz
jbe
sbb
sbb
mov
into
aam
data16
adc
arpl
mov
cld
mov
push
stos
or
in
nop
or
jmp
jae
test
lret
insl
ret
fs
push
jp
sbb
xchg
adc
sbb
pop
arpl
adc
cmpsb
xchg
dec
loope
inc
hlt
push
out
popa
in
lods
popl
aas
loope
and
int
inc
and
out
xor
jae
es
push
pop
adc
sahf
mov
mov
sbb
sbb
aad
cmp
cltd
outsb
sub
test
mov
jb
inc
stos
mov
adc
jecxz
xor
mov
shlb
enter
mov
push
or
data16
nop
add
or
not
cltd
insb
xchg
enter
stos
iret
mov
adc
divb
lds
dec
hlt
mov
into
enter
movsl
ds
inc
jge
cmp
popf
or
jnp
repnz
fcomps
loop
or
mov
shrl
xlat
ret
cmp
dec
cmpsl
fisubrs
in
inc
inc
lret
fists
cs
cmp
pop
fcmovu
xlat
mov
test
mov
mov
pop
or
movsl
dec
rcrb
scas
mov
pusha
mov
nopl
shl
mov
scas
notb
mov
imul
stos
push
and
cmp
shll
cmp
popf
sub
fsubr
pop
test
mov
jbe
leave
pop
xor
add
out
test
cmp
jle
lods
clc
fsubrs
dec
push
lcall
push
ficomps
add
ret
pop
lock
popa
out
pop
add
je
sub
nop
cli
test
cld
call
mov
pop
ljmp
popa
icebp
out
shrb
and
je
test
lcall
adc
out
xorb
or
mov
jge
lahf
mov
adc
imull
mov
enter
push
sti
mov
iret
aad
or
and
outsb
mov
fimull
nop
in
xchg
pop
or
xchg
out
push
out
add
add
mov
jb
idivb
unpckhps
dec
aaa
imul
fmuls
mov
in
mov
push
testl
lahf
std
adc
cmp
pop
pop
push
aas
fcoms
xor
stos
inc
ficomps
sbb
fidivrl
mov
push
or
mov
jp
addr16
mov
adc
ss
push
cmc
mov
adc
scas
sbb
sti
pop
scas
mov
lea
xchg
push
adc
in
sbb
subl
and
fistl
cmp
jle
cli
cs
adc
mov
or
push
sub
mov
scas
push
sbb
adc
dec
and
imul
push
mov
or
sub
mov
lcall
cmc
mov
adc
bound
rorl
es
add
mov
repz
adc
enter
dec
mov
xor
cmpsb
hlt
rcl
jbe
outsb
add
fwait
fs
lock
adc
sti
xor
out
sahf
push
ljmp
jno
adc
jp
jb
mov
xor
aas
aad
jp
lock
repz
in
mov
sahf
in
push
mov
ret
data16
hlt
test
call
in
jno
mov
les
push
jnp
jg
fwait
adc
xchg
stos
in
popf
stc
popf
lret
sbb
or
je
add
imul
imul
sub
test
push
push
or
enter
cmp
fidivl
lcall
sbb
fwait
nop
jae
es
inc
jno
xor
nop
testl
jns
cmp
inc
fnsave
add
fwait
or
push
cmp
cs
push
or
push
xchg
push
scas
xchg
sarl
cmpsb
ss
cli
out
sub
rcl
dec
call
push
fs
addl
xor
jnp
roll
lea
enter
aam
ss
xor
and
test
sub
cltd
cmp
xlat
clc
and
repnz
scas
pop
popa
dec
fldenv
cli
or
dec
cmp
fmuls
xchg
pop
push
jecxz
scas
in
mov
aaa
sub
mov
xchg
adc
pop
insl
xchg
lea
jb
test
inc
pop
dec
inc
lods
add
je
mov
je
mov
mov
fisubs
into
lret
loopne
mov
sbb
leave
mov
xlat
addr16
fisttpll
aam
pop
mov
push
cmp
fldcw
cltd
std
std
adc
push
pop
adc
out
sub
outsb
idivl
xor
sbb
mov
sub
jns
jmp
out
outsl
adc
or
mov
cmpsl
stos
mov
xchg
rclb
and
ds
mov
call
cli
movsl
das
jge
pop
xor
aad
lret
stos
xchg
test
push
sahf
mov
lods
ss
mov
mov
fimuls
fs
repz
dec
gs
lods
lret
shll
cmpsl
mov
jo
dec
add
mov
insb
mov
pop
dec
hlt
inc
sbbb
out
xchg
jmp
cltd
cmpb
push
in
das
cmp
adc
push
or
cmpsb
arpl
jns
shrb
jnp
sbb
cld
daa
mov
cmp
incb
push
push
mov
inc
cmp
shrl
mov
mov
push
sbb
notl
cmp
sti
or
or
pop
insl
in
push
popf
pop
push
leave
cmpsl
or
push
test
add
push
xor
test
and
xor
leave
pop
lock
and
mov
sbb
xchg
dec
mov
xor
fstl
or
xchg
mov
pop
push
les
insl
dec
out
aas
cmpsb
cmp
out
pop
fld
xchg
fs
xchg
cmpl
mov
sub
outsl
sbb
adc
mov
push
add
xchg
mov
pop
jge
into
lahf
cld
xchg
pop
in
hlt
leave
cwtl
or
test
fcompl
fistpl
jne
in
imul
aaa
stos
ljmp
mov
ss
enter
pushf
or
dec
xchg
add
pop
lods
dec
push
enter
mov
call
xor
push
cmp
jb
xchg
and
or
sbb
push
fidivs
xchg
mov
jmp
mov
in
dec
cmp
shl
int3
adc
cmp
cltd
test
push
pop
fimull
jbe
lock
jp
add
hlt
lods
inc
sub
lods
dec
sti
popf
dec
dec
dec
push
dec
loop
fs
lret
pop
sub
xchg
enter
mov
xchg
call
shr
pop
andb
pop
push
mov
mov
clc
push
cmp
sub
sbb
and
sbbb
pop
cmp
sahf
mov
sub
push
mov
inc
enter
lcall
nop
sbb
addr16
add
jne
arpl
pop
or
scas
fcoms
push
dec
nop
stos
das
cmc
imul
mov
imul
and
iret
cmp
cmp
and
pop
pop
push
xor
jo
cmc
sub
scas
add
dec
and
js
mov
xchg
push
sbb
cltd
lcall
dec
dec
jnp
mov
lss
pushf
sub
push
ja
scas
xchg
mov
arpl
or
sbb
rcll
into
lea
dec
lret
pop
shrb
inc
push
or
aas
loope
test
mov
mov
sahf
xor
fwait
lahf
cmp
insb
scas
aaa
push
rorl
cmp
sbb
dec
pop
ljmp
pop
je
lock
scas
pop
icebp
fxam
les
jle
pop
push
out
popf
gs
jbe
or
sub
ret
stos
inc
cmc
sub
xchg
nop
push
dec
ds
jno
or
pushf
ret
pop
lret
and
bound
sti
jo
xchg
mov
mov
ss
ljmp
pop
icebp
div
sbb
ss
js
arpl
adc
cmp
xor
inc
dec
jmp
jmp
cmp
fwait
add
jnp
mov
mov
mov
xor
orb
pusha
jne
mov
xorl
or
mov
inc
push
add
mov
pop
adc
pop
les
or
jg
mov
sub
aad
push
in
jle
fdivl
xor
mov
call
orl
mov
mov
test
psrad
pop
jmp
call
outsb
add
jb
fsubp
test
push
cmp
movsb
ss
and
cli
shlb
jbe
es
jno
xor
repnz
lea
sbb
cmc
and
notl
cmp
in
dec
push
or
and
fstpl
rol
faddl
lahf
inc
mov
push
adc
jo
pop
lcall
fists
rcrl
out
mov
or
sub
daa
mov
or
inc
je
mov
jp
adc
inc
mov
mov
loop
ficompl
addr16
jb
mov
jae
push
jmp
sahf
cmc
mov
sahf
jne
std
sub
je
aam
or
inc
inc
jecxz
stc
xor
or
add
mov
insl
cli
dec
xlat
flds
test
mov
ja
and
mov
stos
inc
call
add
int3
xor
mov
out
pop
dec
fmul
lahf
insl
add
pushf
jecxz
or
mov
mov
mov
mov
add
test
mov
and
lcall
push
jmp
jle
cmp
negb
adc
icebp
or
push
sub
nop
push
scas
dec
jne
cld
popa
lea
cmc
xor
aaa
pop
adc
adc
mov
and
into
adc
repnz
sti
sub
cmc
out
pop
mov
sbb
mov
sub
fistpll
scas
pushf
mov
push
mov
push
xchg
dec
inc
pop
add
xchg
push
add
mov
outsb
in
mov
cmp
orl
imul
or
addr16
jecxz
or
xchg
cmp
out
cmp
jo
pxor
xchg
cld
xchg
jge
jp
cmp
mov
mov
push
adc
das
xchg
push
push
push
test
push
add
jp
clc
iret
mov
inc
sarb
cmp
pop
inc
fidivs
hlt
xchg
sbb
inc
adc
push
jo
jmp
popf
rcll
jns
insb
xchg
mov
out
xor
mov
jmp
not
xchg
dec
rcrb
xchg
xchg
lods
mov
pushf
es
pop
mov
mov
sbb
push
adc
test
mov
push
xchg
xchg
sahf
lcall
jle
or
dec
adc
das
sbb
mov
dec
in
adc
lret
dec
stc
mov
inc
jecxz
push
rorl
mov
dec
add
ficomps
push
jo
test
int3
inc
daa
into
mov
test
cmp
xchg
mov
dec
or
repz
lods
std
rcrb
xor
sub
dec
scas
dec
decl
loop
jne
jle
xor
xor
adc
adc
stos
popa
fwait
and
sub
inc
hlt
imulb
mov
push
leave
pop
mov
or
push
scas
aam
xor
pusha
in
inc
sti
sti
nop
xlat
mov
xchg
outsb
jnp
push
and
xor
lock
data16
jb
mov
mov
push
lods
add
mov
incl
pop
lahf
neg
out
xor
pusha
jle
out
ret
ja
sbb
pusha
mov
cmc
mov
mov
in
test
das
and
insb
cmp
out
xchg
adc
shl
push
pop
cli
arpl
rcll
inc
ret
inc
sti
pop
int3
insl
pcmpgtw
xor
mov
xchg
push
std
xorb
sbb
or
pop
xor
push
ret
fisubrs
test
out
push
inc
ljmp
jns
sbb
sahf
jo
cmp
cmp
cmc
lret
out
imul
push
fdivs
imul
scas
mov
cmp
or
fwait
jle
push
add
sahf
sub
and
mov
sub
fldenv
or
daa
mov
xor
shlb
inc
fdivl
adc
and
or
repz
xchg
mov
clc
in
pop
out
out
sub
cli
jne
sbb
inc
mov
mov
cltd
and
sub
repz
lret
rorb
xor
sbb
mov
inc
shll
or
push
outsl
shlb
dec
shll
cmpsl
adc
sbb
xchg
cmc
xor
sbb
js
scas
and
push
pop
sbb
int
push
pop
ds
jb
cmpsb
ja
ja
cmp
cmpsb
aad
mov
push
movsl
imul
mov
or
mov
aas
pop
and
outsl
push
mul
mov
jmp
adc
rcrl
sub
cmp
icebp
in
outsl
sbb
into
push
jno
enter
fistpl
adc
into
iret
fwait
cmpsb
dec
scas
shrb
jl
lds
ficoms
repz
xor
xchg
pop
jbe
test
adc
out
mov
and
mov
add
sub
sbb
pop
out
shr
hlt
cwtl
dec
adc
or
and
add
incb
insl
cld
xor
mov
das
icebp
push
push
cmp
jae
xor
xor
xchg
shll
repnz
xor
pop
add
add
xor
sahf
sgdtl
sbb
adc
out
rclb
jp
aam
or
imul
aaa
lods
inc
aaa
into
jb
jne
iret
lahf
negl
xchg
insb
dec
pop
scas
sbb
pop
mov
subb
push
ljmp
cmc
push
bound
sti
push
lds
pop
mov
or
cs
mov
mov
leave
cmp
add
icebp
int3
lahf
and
inc
stc
das
loop
pusha
loop
sub
mov
movsl
rep
enter
dec
xor
inc
stc
outsb
fld
arpl
and
fwait
fs
and
mov
aaa
dec
pop
dec
arpl
ret
int
jmp
pop
das
into
jns
push
xchg
in
or
lahf
jbe
stos
repnz
inc
xor
aad
and
sub
mov
mov
in
push
cli
xchg
mov
in
ja
js
push
pop
mov
inc
and
xchg
push
fdivrp
adcb
cli
mov
enter
cs
xchg
js
into
add
jg
outsb
cltd
stos
outsl
add
sarb
mov
aam
push
sub
pop
test
jno
bound
arpl
lods
aaa
stos
sbb
gs
cwtl
xchg
scas
mov
idivl
dec
ss
test
push
xor
stc
movsb
stc
iret
inc
pop
jl
scas
xor
popa
or
add
xchg
xor
pop
dec
cltd
add
xorb
or
mov
xor
fildll
sbb
inc
push
xorb
xor
dec
mov
mov
mov
test
in
add
xlat
xor
inc
mov
lock
dec
add
pop
aas
fistl
jns
pusha
loop
mov
inc
test
mov
mov
xchg
loop
popa
dec
pop
sahf
cmp
mov
pop
je
fucomi
icebp
xchg
loope
testb
shlb
mov
or
sbb
movsl
fnstcw
xchg
fs
pusha
pop
fs
das
cli
outsl
mov
sti
sarl
sbb
orl
jl
shlb
inc
cwtl
mov
xor
fldl
aaa
push
sub
jmp
mov
iret
mov
ret
sarl
pop
sub
jge
leave
dec
inc
fwait
pop
xchg
fnstsw
adc
inc
fnsave
in
fistl
mov
mov
add
in
ret
and
repz
mov
aam
ss
test
mov
mov
xlat
sub
or
add
fwait
and
xor
mov
add
stos
add
jge,pn
sub
imul
stos
mov
mov
mov
add
mov
in
and
mov
ljmp
pop
imul
cld
cmp
pop
mov
jg
movsl
and
mov
mov
rcrb
es
mov
out
xchg
or
lds
or
icebp
xchg
add
inc
je
lret
add
mov
xlat
insb
mov
sbb
add
les
bound
inc
hlt
mov
int
stc
ja
fld
leave
test
push
fimull
lods
and
add
data16
mov
ret
push
mov
in
sub
push
pop
dec
fisttps
scas
rcrw
inc
in
adcb
ljmp
sbb
loop
test
lcall
mov
dec
gs
subb
aas
cwtl
xor
or
aad
add
mov
jnp
jge
dec
out
jg
add
stos
insl
rcll
movsl
mov
rclb
add
dec
jl
mov
jp
shlb
outsb
aad
gs
sahf
insl
jno
repnz
gs
xchg
xor
fbld
cmp
ljmp
dec
incl
testl
call
lock
inc
fiadds
cltd
fmull
pop
icebp
movsb
or
mov
mov
sahf
pop
jo
sub
ss
je
mov
rclw
pop
push
jae
add
cmp
aas
sbb
add
dec
xchg
stc
push
lret
jmp
jo
cmpsb
in
stos
mov
sbbl
fstl
mov
fdivrs
pop
stos
mov
pop
scas
lods
sti
dec
xor
fildll
aam
int3
lcall
xor
and
mov
loopne
sbb
bound
adc
test
inc
decb
sub
push
js
in
imul
xor
fdivrp
or
pop
adcb
cwtl
aaa
loop
mov
jle
sbb
ds
add
adc
ss
aas
and
pop
xor
hlt
mov
movsl
sbb
dec
xor
cwtl
aas
sbb
pop
xor
cli
xor
inc
xchg
popa
out
ljmp
dec
fdivrs
in
jae
out
insb
mov
jnp
aas
adc
mov
xchg
jl
push
outsb
test
lea
out
xchg
sub
mov
stc
push
jo
pop
cmp
addr16
leave
xchg
movsl
lds
cmpsb
aad
in
into
int
dec
shufps
sub
ljmp
jb
or
adc
adc
into
cmpl
sbb
ret
xor
push
sub
xchg
andb
jg
mov
mov
sub
xlat
orl
imulb
mov
inc
and
push
dec
pop
out
push
lret
pop
cmp
loopne
dec
aad
sbb
pop
mov
push
test
aaa
enter
pop
cmpsl
leave
mov
test
jno
push
mov
inc
pushf
cmp
out
mov
iret
daa
fs
cmpb
add
cld
xor
inc
pop
mov
ficompl
jbe
scas
repnz
sbb
mov
inc
fidivl
push
in
popa
jecxz
fiadds
xorl
jle
xchg
in
ja
rclb
push
movsl
sub
loopne
pusha
sbb
sub
orl
adc
or
aas
test
fs
sbb
adc
jbe
scas
imul
and
mov
push
jno
movsl
out
into
dec
dec
fldl
out
mov
fdivrs
push
repz
inc
mov
or
xchg
inc
out
jno
rcl
icebp
pusha
jmp
or
je
idivl
adc
dec
mov
push
pop
add
ret
insb
adc
mov
and
xchg
pop
jle
cmp
in
mov
scas
insb
push
mov
add
adc
mov
sbb
and
insl
cmp
xor
inc
aas
mov
fmull
lods
mov
cmp
inc
sub
sub
mov
mov
xchg
pop
js
dec
pop
repz
inc
popa
adc
dec
xchg
push
add
inc
cmpsl
test
ljmp
xchg
out
repnz
mov
sbb
cmp
jl
stos
lods
inc
aad
adc
push
push
mov
xor
mov
push
mov
outsl
push
inc
cli
mov
push
inc
sbbb
and
xchg
push
andb
pop
sti
dec
mov
mov
mov
in
xorl
pop
shlb
xchg
push
or
idivb
lea
inc
lahf
movsb
lret
xchg
insl
ljmp
popa
cmp
mov
dec
lcall
and
xor
push
sbbl
arpl
gs
fsubrp
cmpsl
out
movsb
cmp
adc
sahf
hlt
ret
in
mov
insb
les
hlt
adc
push
adc
je
and
pop
mov
or
fnstsw
scas
dec
or
insb
sarb
cli
pushf
popf
xchg
add
lods
mov
loopne
sbb
jo
push
aad
add
out
ds
push
mov
mov
add
mov
xchg
push
mov
mov
stos
cli
cmpsl
xchg
dec
cmp
ret
repz
push
hlt
mov
pop
testb
cmp
add
mov
cmpsl
or
sbb
dec
pop
mov
pop
xor
xchg
fwait
cmpsl
lret
pop
ja
lock
cwtl
loope
subb
fldt
inc
pop
add
mov
push
out
sarl
insl
dec
pop
pop
ds
addr16
mov
dec
pop
scas
adc
clc
sub
dec
hlt
mov
sub
test
mov
push
cwtl
sbb
out
mov
std
jns
dec
push
out
enter
lcall
cld
fbstp
loop
sub
cs
inc
xchg
dec
lret
popa
lds
call
pusha
outsl
inc
push
sub
dec
aad
andb
std
std
es
or
jo
hlt
in
add
sub
xchg
testl
push
and
fcomps
fisubs
cmpsl
jge,pn
pusha
xorb
push
ds
push
mov
fdivrl
or
mov
mov
pop
fwait
mov
enter
arpl
xchg
mov
jmp
stc
mov
and
add
jb
mov
out
popa
lahf
jl
pop
out
cmp
addr16
jp
dec
cli
hlt
xor
cmc
int3
mov
faddl
mov
xlat
insl
sub
hlt
mov
xor
aas
mov
add
shll
fbstp
sbb
jb
int3
lock
movsb
sbbb
fbld
out
fadd
mov
push
inc
enter
stos
inc
cmpl
push
arpl
enter
adc
ficoml
fdivs
test
xor
push
inc
pop
adc
insb
out
sbb
xchg
ret
jmp
and
pushl
mov
into
aad
insl
inc
imul
popf
fdivs
lds
out
filds
dec
push
test
jg
adc
sub
adc
outsl
mov
add
push
clc
lcall
outsb
mov
cmpsl
aas
jae
pusha
testl
pop
je
adc
mov
mov
push
insb
sub
popf
cmc
popf
shl
push
mov
sbb
pop
out
loope
adc
mov
shl
incl
jbe
dec
loop
iret
push
and
movsl
les
mov
popa
test
pop
cmp
mov
inc
ficompl
scas
leave
inc
mov
enter
cli
test
shrl
inc
dec
rclb
xor
mov
icebp
testl
lds
jg
sub
pop
or
into
cli
jne
sbb
fwait
sub
fs
out
test
es
pop
push
repnz
jns
pop
lret
cmpsl
cltd
int
xchg
dec
out
in
incb
cmp
pop
jae
test
into
push
jmp
mov
push
insb
icebp
xchg
lods
inc
les
sahf
clc
decb
mov
cs
xor
clc
ja
push
mov
cmpsb
data16
cwtl
or
je
andb
out
jno
and
enter
or
mov
xchg
push
movsl
ret
push
iret
push
je
out
cmc
xor
add
mov
scas
mov
arpl
fldenv
adcb
aas
fidivs
xchg
int
push
movsl
ss
insb
popf
pop
push
sub
lret
push
out
in
add
dec
or
clc
sahf
push
sar
add
mov
and
frstor
scas
push
dec
dec
test
aad
mov
sbb
adc
inc
push
std
subb
stos
pop
mov
inc
pop
jge
xchg
movsb
push
xchg
and
lds
sete
addr16
out
add
aam
aam
sbb
and
cmp
mov
in
lahf
cwtl
cmp
push
dec
and
push
rcl
shl
adc
push
or
lret
ljmp
xor
xchg
repnz
pop
insb
js
mov
subl
push
leave
pop
movsb
imul
cs
jne
repz
sbb
jbe
enter
pop
ret
jle
pmaddwd
jb
loope
aas
es
mov
xchg
or
dec
repnz
jmp
pop
xor
push
pcmpeqb
pop
cld
mov
aam
xor
out
mov
out
cmp
jmp
cli
nop
movsl
gs
sarl
adc
add
mov
pop
xchg
sub
lds
jne
enter
mov
dec
xor
lcall
cmc
or
test
sbb
cmpb
sbb
fwait
mov
repz
mov
divl
nop
shl
jnp
fisubrs
shrl
mov
hlt
push
jno
and
mov
sbb
dec
xchg
fs
mov
lods
repnz
pop
or
imul
or
jle
sub
adc
andl
out
add
push
adc
into
cwtl
mov
jno
xchg
sub
out
xor
mov
adc
mov
cmp
imul
ficoms
push
loop
test
insb
pop
mov
add
mov
imull
mov
or
jmp
push
mov
divb
fidivrl
inc
add
leave
rcrb
imul
out
lods
pop
icebp
scas
adcb
or
notl
push
sub
xchg
pop
clc
scas
nop
loopne
fdivl
test
cli
mov
lds
mov
enter
mov
nop
cmc
shrb
repnz
jo
pop
and
rorl
adcb
fwait
lods
pop
popa
ja
jne
push
cmpsl
push
sub
mov
dec
inc
ds
or
jecxz
aam
jo
loopne
ret
pop
test
adcl
insb
sub
call
out
test
mov
psllq
xorl
out
push
arpl
and
das
jbe
push
stc
popf
rcl
idivb
adc
mov
cmpl
mov
mov
mov
lret
mov
test
xor
nop
mov
call
xor
out
shrb
gs
sub
or
and
lret
or
inc
fs
shr
cmp
iret
jg
ja
jb
lret
mov
inc
sbb
mov
sub
lret
pop
out
rcl
jg
adc
iret
test
cltd
fnstenv
in
and
mov
cld
jbe
adc
in
test
mov
or
lahf
and
xor
faddl
lods
dec
or
xchg
pop
xor
mov
push
addr16
leave
mov
incl
cmpsl
shrl
inc
fs
loope
dec
in
xchg
les
cmp
hlt
mov
push
jae
fsubl
call
lret
aaa
adc
imul
jbe
sub
mov
cli
or
mov
mov
mov
lods
push
xor
sbb
adc
sbb
into
popf
sub
mov
and
and
cmc
aam
std
add
sub
pop
aam
mov
cld
stos
int3
fisubrs
enter
cltd
fdiv
mov
jnp
jmp
aaa
lret
das
imul
sub
sub
nop
cmc
aad
loope
pop
push
cmp
pop
repnz
daa
gs
icebp
or
inc
test
loopne
sbb
jbe
loopne
movl
mov
lea
setbe
daa
loop
mov
aad
mov
sub
pop
mov
sbbb
aam
scas
inc
call
dec
dec
scas
inc
popa
mov
push
cld
push
pop
shlb
push
push
and
push
and
std
jns
push
ds
fsubl
jecxz
push
push
cli
mov
inc
scas
bound
mov
push
jle
xchg
cld
sbb
xchg
cmp
jb
mov
jns
jae
jae
cmpsb
push
movsl
sub
arpl
xchg
jg
repz
ljmp
test
push
xchg
ret
arpl
hlt
mov
hlt
push
ret
xor
inc
pop
ss
ljmp
aad
xchg
sbb
in
imul
push
je
xlat
xorb
icebp
ljmp
adc
fmull
sbb
mov
lock
mov
sbb
add
sbb
pop
adcl
arpl
xlat
dec
mov
test
mov
lds
jg
mov
outsl
fcoms
fwait
pop
xchg
push
movsl
add
rclb
cwtl
pop
jg
mov
push
mov
andl
xor
adc
jle
cs
and
pushf
sub
popf
xor
movsl
bswap
xchg
insl
lds
popf
add
cmp
out
addr16
out
test
or
shlb
test
push
xchg
xor
adc
lret
imul
subb
xchg
cmpsl
nop
inc
cs
mov
cmpsb
in
fisubs
adc
rolb
push
loope
adc
jecxz
lcall
loope
and
mov
jno
push
fisttpll
inc
add
pop
imul
faddl
add
out
loopne
sti
pop
imul
fisubrs
insl
subb
aaa
mov
push
lds
leave
test
fistpl
inc
mov
jg
in
repz
sub
mov
mov
testl
mov
int
decl
movsb
ss
bound
sbb
out
inc
pop
fsubl
dec
ja
ljmp
jns
add
cmpsb
js
sub
outsb
adc
xor
test
or
jns
sub
lcall
test
cmpb
shr
std
add
sbb
je
sub
in
mov
cltd
out
xchg
fisubrl
rorb
cmpb
jg
or
repz
mov
cmp
hlt
inc
xchg
xchg
out
add
xor
repz
mov
and
add
jns
test
push
cwtl
decb
inc
das
adc
xorl
jecxz
fmuls
and
or
add
xlat
xor
stos
push
adc
jb
jbe
mov
lcall
in
sbb
push
mov
xor
inc
inc
mov
ja
sub
xchg
dec
xchg
insl
mov
xchg
shlb
cmp
lret
sub
jb
and
sarl
push
shr
ljmp
jbe
add
mov
sbb
xchg
sub
adc
add
fsubrp
cmp
mov
xchg
ss
pop
rol
jmp
aaa
ret
inc
mov
and
shll
pop
test
fildll
mov
icebp
adc
xchg
stc
xchg
jp
fs
aad
sbb
scas
pop
inc
loop
or
aaa
mov
cmp
dec
je
mov
dec
jae
into
movsb
mov
lahf
in
push
add
adc
xor
mov
fnstcw
adc
adcb
sbb
mov
into
mov
sub
and
xchg
add
repz
pushf
lods
mov
mov
in
pop
or
xchg
out
xor
mov
repnz
pop
in
mov
xchg
data16
sub
sbb
or
mov
inc
fs
pop
stos
inc
nop
outsb
out
jl
push
es
movsb
cmp
inc
push
mov
jo
adc
mov
sbb
lods
fstpt
loope
cmp
adc
call
adc
xchg
aaa
fisttps
cmc
lds
push
fsubs
add
imul
xor
mov
push
in
dec
jge,pt
add
insb
or
insb
cmpb
imul
ja
in
aam
test
sbb
xor
addr16
mov
or
in
dec
xlat
shll
jns
adc
pop
inc
add
dec
test
push
pop
lcall
xor
jle
lods
cmp
loop
mov
sub
add
inc
push
js
adc
sub
jae
fidivs
xchg
xor
ret
xchg
insl
lahf
aaa
push
cmpl
cs
lea
mov
pop
mov
cli
fwait
cmpsl
stos
out
lcall
popf
dec
cmpsl
mov
push
insl
jo
leave
rorb
into
or
dec
sub
imul
dec
loopne
inc
dec
xor
addr16
imul
into
lods
inc
fldenv
pop
mov
in
jnp
stos
scas
pop
jb
pop
mov
sar
and
mov
push
fnstcw
lcall
cltd
push
in
enter
xchg
add
mov
add
push
jb
lahf
xor
push
inc
and
jnp
aas
and
fstl
iret
push
lahf
mov
je
jo
push
das
mov
notb
fsubr
adc
jns
jnp
aaa
jmp
inc
jmp
mov
push
jg
xchg
cli
jns
arpl
jnp
and
test
xor
out
sub
cltd
push
in
jne
ja
xchg
push
fstl
jl
movsl
sbb
push
testl
aaa
out
addr16
and
mov
add
fistpl
cli
xchg
mov
pop
jnp
out
std
xchg
cs
xchg
incl
and
std
icebp
shl
push
sti
or
rcl
push
test
sub
insb
and
cmp
lahf
xor
jnp
call
push
popa
push
mov
mov
push
popf
and
outsb
mov
mov
fcomip
cmpxchg
enter
lret
inc
fisubrs
rdtsc
fnstsw
popf
sbb
mov
pop
fistpl
stos
test
jecxz
dec
and
xchg
xchg
lods
add
jae
adc
sub
stc
xor
sub
or
and
xlat
out
mov
rcrl
sbb
aaa
jge
mov
addb
sub
lret
cmp
pop
mov
nop
std
push
in
popf
sbb
aam
adc
shrb
jns
int3
jp
jnp
aaa
push
es
mov
mov
adc
int
sbbl
popf
and
push
loope
jns
sahf
push
stc
enter
xor
dec
mov
mov
or
loope
dec
cmc
enter
mov
std
jp
sub
push
add
and
cmpsb
mov
lods
decb
aas
roll
mov
add
lods
and
push
mov
int
insb
jle
push
mov
add
adcb
and
call
and
xor
outsb
or
mov
sbbb
shr
icebp
test
push
ficomps
fstpt
mov
lahf
cli
sbb
and
test
orl
xor
xchg
icebp
push
sarl
std
cwtl
adc
push
ljmp
jno
mov
mov
pop
push
xchg
into
xor
in
popf
cltd
fmuls
mov
sarb
imul
pop
je
psubd
xor
adc
aam
sbb
pop
lds
cmp
xchg
mov
pop
sbb
mov
sar
and
push
adc
lcall
sbb
cmp
lods
pushf
notb
sti
pop
jne
jne
loop
inc
jb
lds
cmp
mov
mov
cmp
rorl
mov
ljmp
fmuls
xlat
cmp
jge
cmpl
and
dec
fdivr
xchg
test
jne
pushf
cltd
cmp
or
cmp
fstpt
lret
popa
lds
mov
fistl
shl
enter
mov
std
ret
and
test
inc
or
fwait
dec
push
rcrb
mov
aas
decl
sti
inc
roll
inc
dec
mov
ja
je
sti
cmp
or
mov
data16
cwtl
ss
cs
fldl
or
or
ja
call
into
movsl
mov
pop
icebp
pushf
or
inc
adc
mov
popf
jb
aas
add
jl
cmc
dec
sahf
jge
in
mov
mov
lea
jge
mov
mov
push
mov
in
xchg
in
and
arpl
sbb
jmp
enter
imul
ja
faddl
lret
lods
mov
sbb
sti
cmpsb
xchg
jmp
aaa
or
clc
or
cli
push
inc
gs
xchg
adc
push
mov
inc
mov
push
mov
fbstp
xchg
mov
nop
jp
mov
andl
out
push
lret
push
inc
sbb
xchg
test
lds
mov
test
jo
inc
xchg
mov
std
test
hlt
xchg
andl
push
jle
jno
test
std
es
cwtl
bnd
and
dec
pop
int
pop
fimuls
mov
mov
mov
out
inc
xchg
jl
mov
shrb
imull
pop
imulb
sarl
fildl
notb
ret
fcomps
pop
stos
xor
test
dec
dec
lods
enter
sti
lret
xchg
dec
out
add
pop
fildll
cmp
in
or
movsb
and
aam
test
jg
addb
pop
push
jno
add
das
stos
push
sbb
dec
dec
add
sub
cwtl
xor
adc
and
clc
loopne
leave
and
xchg
rol
inc
pop
sbb
and
aam
stos
leave
xlat
fildl
xor
mov
int
jl
scas
sub
insb
rcl
add
push
and
dec
jl
mov
pop
shll
cmc
cmp
jne
sub
stc
shl
cmpsb
shr
or
call
iret
mov
cmp
xor
push
xchg
push
mov
cli
mov
add
lcall
jbe
sti
into
insl
adc
jp
imul
xorl
add
imul
imull
pop
jno
lahf
call
lods
inc
mov
pop
in
push
xor
ja
add
inc
fistl
loop
add
mov
adc
test
insb
xor
inc
sbb
sti
push
jp
adc
xor
sub
cmp
bound
mov
test
test
mov
daa
lcall
adc
in
es
insl
mov
pushf
fisubrs
stc
gs
dec
arpl
or
push
movsl
call
loop
sbb
insb
sbb
jb
in
mov
inc
pop
pusha
ss
push
push
movsb
sti
mov
lret
es
mov
das
sbb
bnd
mov
lods
adcl
or
add
rclb
addr16
add
stos
or
cmp
scas
clc
dec
adc
xchg
push
jb
loop
cmp
movsb
imul
cmp
jl
dec
mov
shrb
push
rorb
fldt
pop
icebp
pop
leave
stos
movsl
out
mov
sbb
incl
and
xor
mov
adc
mov
movsb
mov
mov
testl
cmp
inc
out
fsubl
adc
cmp
push
pop
sbb
mov
adc
dec
iret
rorl
rcrl
adc
das
jbe
lret
aaa
ficompl
xchg
xor
mov
mov
clc
xchg
inc
es
push
lock
lods
test
icebp
or
push
mov
mov
inc
or
loop
xchg
add
push
popf
jecxz
pop
hlt
and
xchg
movsl
lret
in
arpl
ja
fwait
xor
sahf
push
push
loop
das
mov
or
and
dec
dec
cmpsb
mov
in
decl
cltd
nop
ljmp
jmp
mov
sub
mov
mov
or
es
mov
push
lods
ret
pop
test
jmp
mov
lret
fs
inc
fcomp
fwait
pop
stos
pop
sub
xchg
xchg
add
cmp
pop
jo
xor
mov
out
sub
daa
stc
mov
push
fldl
adc
jmp
adc
push
mov
test
sub
jle
pop
dec
xchg
push
mov
mov
hlt
je
stos
inc
popf
sbb
mov
faddl
mov
mov
push
push
lcall
xor
pop
pop
out
jne
stc
nop
push
stos
inc
pop
fnsave
and
mov
fimull
adc
subl
dec
orb
sub
jle
testl
xor
sbbb
add
pusha
fstps
inc
sbb
and
xlat
outsl
adc
je
dec
popf
sbb
cwtl
lahf
arpl
adc
and
addr16
imul
pushf
pop
fs
sub
stos
test
out
inc
mov
or
outsl
dec
fnsave
into
push
insb
dec
add
jle
cmp
popl
pop
jnp
cmp
xor
fists
dec
cmp
and
mov
lahf
jle
cmpsl
fnsave
add
aas
and
aas
rcr
cmp
mov
mov
iret
jnp
pop
xchg
movsb
cmp
mov
pop
inc
outsl
popa
dec
pop
test
or
add
or
adc
movsl
shl
xchg
jle
aaa
sti
cld
ss
sub
popf
arpl
push
scas
fistpll
inc
cmc
gs
bndstx
pop
sbb
cmpsb
pop
fdivl
mov
add
cli
jno
in
mov
dec
xor
shlb
mov
imul
mov
negb
add
dec
dec
push
bound
test
cmp
or
mov
push
out
test
push
jbe
push
ja
loopne
pop
jae
mov
sbb
arpl
adc
enter
icebp
sbb
push
insl
jmp
loope
xor
arpl
xor
push
shl
mov
xchg
lods
push
mov
push
ja
mov
les
enter
or
dec
out
mov
outsb
sub
push
test
sbb
xor
jns
stos
cltd
add
xor
int3
xor
arpl
xchg
cmp
test
shl
cld
push
jecxz
in
insb
sahf
lds
pop
mov
ds
imul
inc
adc
add
jo
xchg
and
jns
jl
jae
xchg
mov
stc
or
shrb
insb
in
and
add
pop
sub
pop
or
ds
pop
dec
sub
add
dec
push
arpl
xchg
inc
lret
mov
shll
lds
int3
ret
scas
mov
xchg
push
jnp
sbb
xor
mov
ret
imul
adc
inc
add
dec
cmp
imul
xor
xchg
cmp
sbb
jb
xlat
xor
mov
leave
pop
jno
repz
popl
xchg
popf
bound
mov
sbb
test
add
push
xor
andb
lods
mov
ficoml
andb
fsubr
test
repz
and
stos
xor
cwtl
out
jp
mov
js
into
rcl
adc
imul
subb
cltd
idivl
xor
or
fsubrl
mov
ret
rorl
das
cmp
mov
pop
icebp
jo
mov
iret
xchg
js
lds
test
lods
dec
pop
fbstp
mov
divb
xchg
push
xor
mov
scas
pop
in
decb
loop
movsb
sub
rorb
inc
inc
movsb
cmp
mov
xchg
rcrl
aam
in
adc
aaa
pop
cmpsb
imul
adc
mov
adc
dec
in
dec
rcrl
idiv
sbb
addr16
xchg
sub
or
sub
orl
sbbb
jmp
adc
sbb
pop
lahf
xchg
lea
push
test
mov
inc
sbbl
adcl
adc
and
aas
inc
mov
pop
add
and
inc
push
and
loope
imul
lahf
popf
dec
mov
ret
sti
sub
cmp
xlat
andb
sbb
jle
int3
mov
dec
push
cld
cmp
jecxz
daa
mov
dec
fsubrs
test
leave
mov
bound
add
mov
fnsave
mov
cmc
mov
cld
lcall
in
dec
xchg
add
movsl
mov
mov
js
ljmp
lods
jmp
or
repz
jae
out
push
in
jecxz
jns
mov
xchg
cmpsb
cmp
mov
loopne
les
icebp
ret
jge
mov
jp
es
pop
jnp
jo
in
test
nop
je
pop
dec
ja
jl
xlat
outsb
lods
lahf
push
mov
push
lock
fsubrs
idiv
and
testb
scas
inc
mov
int
sbb
xor
xchg
enter
adc
push
mov
in
fadds
fs
or
sbb
fwait
out
outsl
movsl
sarb
mov
movsl
and
outsb
fs
pop
dec
mov
in
or
dec
cmp
icebp
jo
and
adc
rclb
lcall
out
fisttpll
fwait
push
gs
jae
add
sub
push
add
mov
and
fnstenv
mov
xchg
jp
xchg
and
cmp
xor
fbstp
lods
aam
call
data16
xchg
dec
adc
je
lahf
repz
xchg
or
aam
or
jg
loop
xchg
fwait
pop
loop
rclb
sarb
in
stos
sub
push
mov
or
dec
sub
jno
leave
ja
pop
sbb
mov
sti
test
mov
jge
faddl
mov
jge
adc
add
xor
xchg
mov
in
cmpsb
jns
inc
leave
sbb
mov
cmp
xchg
cmp
es
aas
dec
movsl
in
insl
mov
lret
nop
and
movsl
pop
xchg
mov
fidivrs
push
mov
cmp
and
mov
lret
cltd
sub
js
xor
or
adc
sbb
vmovsldup
mov
mov
out
dec
dec
dec
pop
test
mov
in
out
fucomip
adc
aas
lret
dec
inc
data16
add
fwait
pop
or
mov
push
scas
pop
push
xor
push
insl
mov
fdecstp
imul
shl
jnp
idivb
pop
sahf
xor
jnp
aaa
mov
bound
adc
outsw
adc
xor
dec
mov
iret
leavew
inc
or
xchg
mov
add
int3
pop
pusha
arpl
and
outsb
ret
xor
xor
push
lods
mov
and
inc
cmc
hlt
in
aam
adc
in
aaa
xorl
jg
sub
jmp
sbb
in
movsl
sbb
dec
aaa
sbb
mov
jle
aaa
hlt
mov
or
mov
cmp
sahf
adc
leave
gs
or
mov
inc
mov
mov
xor
cld
sbb
std
faddl
movsb
rcrl
cmp
les
ljmp
xchg
add
push
sbb
cmp
add
decb
jp
push
or
mov
addb
cmc
shl
scas
shrl
jbe
ss
add
push
in
inc
or
xchg
loope
repz
pusha
fisttpl
jne
inc
cmp
xchg
mov
call
stc
mov
xchg
sub
add
push
sti
pop
mov
or
cmp
lods
aas
push
or
dec
movsl
sti
es
shrb
test
jecxz
push
push
or
test
mov
or
das
mov
sub
aam
leave
mov
xor
cmp
mov
stos
fistps
es
jmp
ljmp
sarl
clc
mov
or
popf
das
pop
cld
pop
rcr
xor
mov
xchg
and
sahf
outsb
test
mov
mov
loopne
xchg
ffree
or
push
sbb
je
add
aam
inc
and
cmc
or
test
ds
out
or
push
test
or
stos
test
mov
inc
clc
clc
addl
xchg
jae
pop
xchg
insb
jl
jne
dec
xchg
cmpsl
jle
leave
fbstp
mov
loop
push
js
adc
arpl
stos
inc
add
xor
adc
popf
add
xchg
xor
imul
pushf
pop
shrl
adc
mov
mov
iret
and
lea
rcrl
sub
push
inc
xor
cmpsl
mov
xor
push
enter
mov
call
sbbb
ffreep
sub
add
fnsave
xchg
test
inc
sti
es
sub
ja
fisttpl
mov
pandn
shrb
ret
faddl
jne
popa
gs
or
mov
cmpsb
xor
sahf
mov
push
mov
xor
lea
fsubr
sub
sub
xor
repz
decl
stc
push
mov
shll
inc
mov
fprem
or
sbb
and
sbb
scas
jns
xchg
addb
mov
andb
mov
jge
mov
jbe
cmp
inc
call
roll
pop
popa
clc
and
ficoml
mov
loop
dec
hlt
fidivrl
popa
jns
jo
insl
outsl
ss
push
sti
pop
outsl
loop
xchg
xor
and
mov
sahf
pop
pop
shl
inc
xchg
clc
mov
mov
sbb
dec
jbe
vmread
out
push
out
push
in
and
jns
repnz
cmp
fsubs
inc
ljmp
icebp
push
loop
js
jmp
and
mov
fcoml
inc
jnp
mov
iret
adc
xchg
sub
mov
popf
sbb
rcll
inc
shlb
xchg
insb
fnsave
cmp
jge
cmp
test
daa
lahf
or
jge
mov
les
mov
mov
mov
push
push
loopne
iret
repz
cmp
ret
out
pop
inc
fmull
in
fsubr
in
xor
jge
daa
stos
add
xor
cltd
mov
xchg
daa
dec
fsubs
fistps
xor
mov
jg
xor
fidivrs
enter
sub
mov
dec
jecxz
push
dec
out
jb
cmp
push
sbb
cwtl
sbb
pusha
push
cmp
lret
icebp
xchg
scas
in
push
or
push
fbstp
mov
adc
mov
mov
xor
inc
scas
mov
int
sbb
sbb
outsl
cmpsb
cld
stos
in
stc
dec
imul
dec
ja
inc
test
popf
push
out
mov
lods
pushw
adc
pop
nop
sub
inc
jge
out
mov
ret
imul
xchg
mov
mov
test
mov
xchg
mov
rcrl
sbb
mov
mov
sti
inc
sbb
pop
push
daa
mov
pop
fildl
cmp
pop
rolb
or
xchg
shl
mov
push
pop
mov
jge
add
shlb
xchg
imul
fmulp
pop
movsl
mov
fwait
sub
pop
cmpl
jo
lret
sub
sbb
aas
imul
sbbb
inc
sahf
add
repnz
sbb
lret
lods
inc
xor
enter
lret
bound
jmp
inc
inc
mov
pop
hlt
push
adc
sbbb
xchg
xchg
and
push
jbe
inc
rol
adc
nop
xchg
movsl
sbb
mov
push
scas
xchg
sti
aas
shlb
inc
fistl
cmp
mov
add
fbstp
dec
pop
cwtl
add
cmpsl
adc
sbb
jmp
xchg
lods
or
fxch
loopne
icebp
jae
movsl
mov
jns
push
mov
xchg
out
pop
and
sbb
call
add
das
pop
out
push
xor
cmp
sbb
clc
mov
cmp
stos
mov
push
mov
sub
cli
fdivs
pop
cs
cmp
mov
fwait
xor
sahf
mov
mov
mov
mov
int
or
sbb
sub
stos
outsl
adc
mov
xor
ja
mov
adc
decb
inc
sub
ljmp
jmp
xchg
out
pusha
insb
icebp
lahf
gs
pop
repnz
jne
ret
adc
mov
add
sub
fidivrs
testb
sub
xor
das
pop
xorb
cmpsb
cmp
jno
cmp
sbb
push
cmp
add
test
addr16
fcompl
insl
jp
adc
mov
ret
jne
mov
sbb
xor
fistps
jp
add
adc
stc
or
or
hlt
xchg
scas
rolb
stc
jnp
pop
jmp
or
inc
rorl
dec
pop
aas
or
div
sbb
sti
or
jne
and
test
cmp
push
push
ficomps
cmp
cmp
sbb
xor
ljmp
dec
jo
inc
push
jb
loope
lcall
mov
pop
sahf
clc
daa
pop
dec
cmpsb
jl
je
push
sub
scas
ss
or
add
test
mov
gs
out
or
jmp
fucomi
or
or
push
cmp
inc
enter
jns
sub
fcomps
push
sub
aad
cmp
aad
adc
inc
call
push
orb
das
icebp
subb
fadds
leave
test
mov
insl
fbld
fstp
and
daa
push
jns
and
push
adc
jbe
fisttpl
mov
jg
jne
xchg
cmpsl
or
movsl
dec
dec
dec
outsl
add
sti
lock
enter
sarb
fdivrs
sbb
xchg
in
dec
xchg
loope,pt
and
ret
push
jae
xchg
popf
xchg
incb
loop
dec
test
xchg
fs
xchg
push
xlat
stos
stos
fisubs
data16
data16
lcall
push
jmp
sahf
cmp
cmp
xor
mov
movsl
mov
orl
dec
cli
into
sbb
cmp
fisttpl
testl
mov
fwait
jl
data16
dec
in
jbe
adc
repz
mov
jp
fbstp
jecxz
ret
cld
sub
shlb
jno
cmpsb
adc
pop
in
mov
aaa
clc
sub
sub
push
ds
cmp
mov
dec
mov
scas
mov
aam
notl
enter
lret
mov
push
rorb
jmp
sub
inc
mov
int3
loop
sarl
enter
inc
cmpsl
fwait
scas
out
sbb
mov
insb
xor
and
push
cmp
fcomip
jns
mov
sub
pop
sub
jnp
inc
inc
push
add
fmuls
out
into
daa
and
js
push
cli
xor
mov
lods
jecxz
cmp
fildll
jo
lcall
lds
mov
sahf
jo
rolb
ja
call
or
mov
add
push
out
mov
sbb
jb
lods
pop
cmp
jne
inc
fs
mov
loopne
cmp
inc
fisubrs
cmpl
shrb
xchg
andb
pop
sahf
ret
dec
cmp
fcomps
shl
sbb
mov
jb
push
xor
xchg
ss
mov
and
jb
add
jo
stos
jecxz
pop
and
stc
cmpsb
xchg
xor
push
es
sbb
stc
push
call
dec
cmp
and
inc
mov
sbb
enter
imul
imul
fs
sbb
cs
movsb
jnp
pop
ret
or
xchg
pop
popa
insb
inc
test
cli
adc
dec
cltd
test
std
add
jae
aas
loop
sbbl
test
dec
xchg
jnp
sub
sbb
xchg
inc
add
mov
loopne
sqrtps
popa
and
push
add
inc
mov
sub
cmpsl
xor
dec
andb
lret
sub
push
arpl
pop
addr16
push
lds
imulb
mov
pop
lock
call
push
sahf
jle
xor
cld
or
in
jle
int
dec
ss
icebp
jecxz
mov
xchg
add
inc
mov
mov
fisttpll
testb
jo
jnp
pop
insb
js
clc
inc
scas
cmpsb
movsl
mov
rcrb
jg
and
das
lds
sub
pop
sbb
scas
cmp
or
stc
fwait
inc
loop
cmp
jns
xchg
in
movsb
sbb
xor
hlt
fs
jnp
mov
push
sub
push
popa
fadd
mov
dec
imul
and
push
or
sbb
pop
out
pop
clc
outsl
dec
movsb
pop
sbb
sahf
add
and
fs
rorl
mov
sub
pop
mov
mov
dec
dec
lcall
fldcw
xor
or
and
paddd
jge
call
adc
popf
push
jmp
xchg
sbb
scas
fnstenv
inc
out
loop
sub
mov
int3
out
xor
jo
xchg
mov
mulb
out
lahf
cmp
rolb
hlt
mov
cs
andb
testb
mov
push
imul
push
jg
movsb
das
inc
jl
scas
or
mov
lock
mov
leave
fcos
repz
inc
insl
mov
leave
jne
daa
jbe
test
insb
mov
pop
add
inc
cwtl
dec
cmc
jae
sbb
imul
xor
adc
cmp
iret
dec
jge
pop
or
test
fs
icebp
in
fdivr
xchg
cld
jo
xchg
lcall
inc
inc
ljmp
xor
push
or
aad
cli
lret
and
or
rclb
shll
lods
ret
cld
mov
push
clc
or
ss
xor
cmpb
adc
in
xchg
mov
dec
jg
adc
dec
sbb
jns
into
add
xchg
mov
aad
enter
ljmp
cli
sub
arpl
pop
dec
ljmp
jno
mov
dec
mov
xor
push
adc
jb
jp
call
xor
cmp
loopne
hlt
mov
pop
notb
jo
es
pop
inc
scas
pop
movsl
cltd
dec
loope
aam
jg
das
in
aad
push
mov
add
add
scas
sbb
mov
iret
sbb
clc
les
call
push
sahf
or
mov
pop
pusha
and
outsb
add
es
je
xchg
push
rcl
pop
rorl
add
xor
sti
js
sbb
pop
out
mov
int
std
arpl
lds
int3
enter
in
mov
mov
push
cmpsl
mov
popf
out
loope
push
xlat
or
or
sub
aas
imul
add
pop
jns
sbb
cmc
dec
lahf
inc
jl
cmp
or
sub
test
jbe
cmc
cmp
mov
shll
stc
mov
sbb
xor
jg
iret
mov
test
add
xchg
fists
adcl
xor
xlat
cs
pop
mov
fs
pop
iret
ret
shrb
mov
mov
add
add
xor
pop
shlb
mull
dec
pop
lods
fs
cmpsl
insl
repz
mov
pop
cmp
cmpl
inc
dec
in
push
lds
xor
dec
dec
or
push
stos
jmp
cmp
dec
loopne
jecxz
cli
sbb
sbbl
aaa
in
mov
fidivrl
pop
popa
sub
hlt
sahf
cmc
mov
cltd
pop
repnz
pop
rolb
sbb
mov
jae
add
decl
aas
cmp
pop
roll
lret
insb
pop
dec
dec
into
movsl
cmp
sub
pop
inc
adc
xor
into
sbb
add
pop
popa
jno
or
jnp
jl
xchg
leave
and
mov
daa
jp
or
add
add
cltd
sbb
aas
pop
sub
xor
push
jmp
outsl
push
test
mov
sbb
shrl
sbb
and
mov
inc
pop
stos
push
mov
jmp
daa
jge
xchg
adcl
mov
dec
add
sub
lcall
mov
pop
mov
test
xor
inc
dec
fidivl
loop
sub
cmovle
jge
adcb
mov
mov
mov
ficomps
movd
mov
cmpb
out
stos
fwait
add
jo
fiaddl
test
clc
mov
pushf
xchg
sub
jg
and
leave
and
lea
mov
bound
mov
into
clc
fsubr
ret
sub
dec
dec
loopne
pusha
outsb
divl
testb
loopne
ficoms
mov
adc
dec
cmp
mov
ret
out
js
insb
jae
inc
out
scas
mov
loopne
call
imul
dec
out
aam
fsubr
pop
insl
dec
stos
mov
and
pop
xor
xchg
or
add
pop
lock
mov
xlat
outsb
mov
test
mov
loopne
add
inc
inc
mov
jbe
out
pop
lods
mov
dec
and
out
aam
xor
cmpsl
repz
repz
or
mov
popl
inc
push
repnz
xchg
shll
roll
ficoml
lcall
cltd
out
in
lcall
scas
xor
scas
stos
jbe
fisttpll
xchg
cmp
leave
add
jbe
cmp
sub
in
push
push
test
pop
mov
jle
and
jmp
ja
or
mov
loopne
rclb
pop
pop
repnz
mov
sub
pop
pusha
dec
jecxz
mov
stos
inc
out
push
das
jge
dec
pop
jnp
cpuid
nop
inc
and
jmp
sub
push
cmp
cli
outsl
lods
pop
movsb
sub
orl
mov
mov
shr
in
aas
sbb
mov
mov
call
lret
std
scas
add
mov
ljmp
add
mov
dec
outsl
ret
pop
mov
push
pop
fcomps
mov
xchg
push
xsha256
cmpsb
rorb
sub
arpl
sbb
mov
sbb
sbb
shll
je
in
mov
inc
arpl
aad
sahf
and
push
ds
loopne
jge
cmc
sbb
sub
pop
lret
lret
movsb
mov
les
ret
jecxz
cmp
aaa
into
mov
mov
xchg
adc
xchg
add
loop
sub
sub
sbbl
sub
push
add
push
mov
jmp
sub
test
sbb
sti
push
stos
mov
mov
pop
jmp
mov
inc
adc
xor
in
loope
cwtl
test
loop
mov
pop
mov
jp
xchg
mov
pop
das
adc
cltd
dec
mov
dec
or
dec
dec
mov
loope
pop
sub
rcl
pop
fldt
pop
clc
dec
jecxz
and
jge
repz
dec
aad
xchg
or
cmp
sbb
mov
fistl
pop
sbb
fstp
cmp
lock
jns
cmp
or
cmp
lods
inc
sbb
xlat
ret
lods
lods
inc
fildll
sbb
bound
dec
jb
xorl
jl
je
fidivl
and
xor
sahf
mov
imul
sbb
push
push
pop
iret
xlat
lahf
xor
movl
loop
push
push
mov
sbb
test
clc
ja
inc
add
cmp
fildll
cwtl
xchg
mov
cmp
and
leave
or
fimuls
popa
sbb
cmc
mov
js
cmpl
lock
out
mov
pop
add
int3
lret
add
pop
insb
out
xchg
repz
pop
in
aad
lods
push
or
sub
incb
insb
sub
sub
or
sahf
lret
add
std
int3
sbb
ss
adc
shll
push
or
mov
popa
fisttpl
repz
sub
mov
push
lock
arpl
jbe
lahf
pop
xor
push
popf
adc
mov
insl
je
sbb
mov
and
jl
lret
mov
nop
xchg
sub
mov
scas
scas
scas
cmpsb
sbb
daa
outsl
push
jg
jnp
sub
add
out
adc
fstpt
and
aaa
aas
nop
movsl
mov
push
test
cmp
jo
pop
adc
movsb
mov
and
push
js
lods
add
adc
test
test
jb
jns
lock
pop
mov
mov
inc
icebp
int3
mov
sbb
pop
inc
mov
mov
test
sbb
ret
or
mov
loop
je
ficoml
jp
nop
lods
or
lcall
xchg
sbb
je
gs
sti
cmp
adc
mov
scas
jno
add
add
pop
mov
push
mov
add
insb
incl
andl
sbb
popf
xor
cltd
and
sbb
mov
movsl
test
lea
add
nop
daa
dec
mov
ret
jmp
iret
push
cmc
mov
jbe
lea
pop
mov
mov
aad
sub
dec
cmc
mov
adc
daa
mov
adc
or
cmpsl
in
popa
xor
add
andb
test
jb
pushf
popf
movsl
popl
data16
or
mov
popa
outsl
jg
adc
cltd
call
frstor
sti
cs
std
adc
call
cltd
and
imul
out
imul
cmp
adc
jle
push
push
movsb
pop
sbb
aaa
cmp
push
push
sbb
les
dec
xor
hlt
mov
dec
imul
jns
pop
loop
mov
out
push
and
cmc
jl
dec
xchg
sbb
mov
lock
push
push
arpl
dec
popa
imull
fiaddl
fwait
rorb
sub
bound
jae
mov
in
repnz
inc
jecxz
add
pop
cmp
rclb
push
add
jb
pop
fdivrs
push
clc
or
mov
daa
andb
stos
sbb
popa
jg
jns
xchg
jae,pn
mov
dec
imul
push
mov
stos
xor
dec
pop
insb
fsubl
andl
jno
or
xor
gs
test
dec
ret
xchg
clc
sti
sahf
shlb
or
orl
sbb
pop
stos
mov
mov
repnz
mov
push
sub
insb
rol
shl
adc
ds
push
call
push
fisubrl
dec
and
sbb
pop
mov
mov
sarl
pop
lea
mov
pop
lods
jno
test
stc
lret
into
in
mov
cmp
andb
pop
dec
inc
gs
sub
repz
scas
ret
sbb
cmp
mov
ja
dec
mov
adc
mov
subb
xor
xor
cmc
lods
cmp
push
out
push
loopne
lahf
pop
xor
cltd
sub
rol
cld
lds
ljmp
jno
int3
lock
inc
xchg
fidivrs
push
test
test
and
call
stos
lock
ret
loop
iret
test
int
or
cmp
push
lea
cwtl
stc
or
fwait
inc
fsubl
stos
add
ret
mov
les
adc
std
sbb
push
jp
push
aad
dec
pop
and
dec
cmpsb
jae
mov
dec
dec
pop
jge
cmp
dec
outsl
hlt
jl
sub
rep
int
lcall
out
xchg
bound
inc
cmp
loope
dec
cmc
loope
scas
insb
pop
jo
arpl
imul
cmp
pusha
sbb
int
xorl
xchg
jle
fistpll
xchg
jo
inc
test
mov
jo
sub
cmp
test
mov
addb
mov
or
adc
add
dec
dec
push
dec
mov
cld
adc
roll
jmp
mov
cmpb
and
push
jl
add
into
gs
xor
outsl
sahf
push
jbe
sbb
inc
leave
xorb
mulb
pop
outsb
ljmp
sub
mov
ret
push
aam
andl
mov
mov
dec
dec
push
lds
dec
stos
xchg
das
push
std
mov
jle
mov
inc
mov
mov
and
xor
bound
push
movsl
add
xor
fidivl
jge
inc
and
nop
xor
ljmp
jo
or
jno
rcll
pop
mov
dec
lahf
lods
cmp
sbb
jb
fidivrl
ret
lret
ret
or
jb
xor
insb
and
shlb
fistpll
jb
loop
xor
imul
cmp
push
jmp
cmpsb
rcr
outsb
xchg
sbb
sub
add
push
mov
aaa
adc
sbb
and
jne
arpl
push
movsl
inc
add
adc
lock
cmp
in
xor
pop
cwtl
xchg
stc
mov
lods
bndldx
and
ficompl
decb
push
cmp
xor
pop
sbb
in
test
pusha
and
push
cmc
jbe
inc
bound
movsl
mov
ret
xchg
mov
jno
xadd
insb
jl
fidivrl
adc
mov
jb
push
lods
jns
dec
push
in
xor
inc
or
lcall
and
iret
xor
clc
enter
sbb
push
jno
stc
inc
rclb
inc
mov
push
xor
xor
mov
call
inc
xor
imul
movsl
xchg
lock
sbb
jle
out
jmp
inc
loope
xor
mov
in
pop
lods
or
sbb
dec
in
jnp
in
jl
roll
int3
xor
cmp
ret
js
les
lahf
sub
add
gs
add
dec
adc
adc
out
imul
jbe
cmp
scas
dec
push
xchg
adc
shrb
add
testb
cwtl
fwait
lcall
mov
mov
sbbb
fsub
jp
pop
stc
sub
add
sti
push
pop
mov
mov
xor
cmp
jno
adc
sbb
shrl
push
ds
ss
mov
cmp
outsb
or
cmc
xchg
xchg
test
pop
out
add
rep
cmpsb
pop
jbe
push
lret
sarl
std
das
testb
les
cmc
xchg
push
out
adc
repnz
xor
sub
dec
into
cmp
fs
mov
add
sbb
mov
push
add
and
jb
mov
ja
dec
imul
push
out
xchg
adc
das
into
dec
shrb
mov
xor
cmpsb
shl
pop
lods
inc
xlat
pop
xchg
xor
add
in
rcpps
push
in
cmp
push
push
in
mov
ja
jo
je
mov
int
xor
inc
push
inc
shlb
ret
xor
shl
mov
jl
push
push
inc
out
and
cmpl
and
jl
std
insb
add
ds
out
push
jo
inc
sub
push
xlat
in
mov
jmp
xor
std
lcall
in
in
mov
out
jg
sub
sbbl
imul
mov
int3
and
test
xchg
les
insb
xlat
repz
push
fbstp
in
in
mov
nop
call
pandn
cli
repnz
cmc
jp
cmp
xchg
jg
and
aad
repz
mov
xchg
mov
sbb
sahf
push
lods
pop
push
inc
arpl
lods
inc
psubsw
push
sbb
xor
sti
add
rcll
in
push
or
add
mov
fnsave
das
icebp
nop
mov
lds
xor
out
xchg
icebp
scas
dec
pop
ficoml
inc
ja
scas
ror
cmp
hlt
cltd
jb
push
mov
adcb
sbb
xchg
testb
in
das
int
hlt
mov
outsb
mov
aas
iret
xchg
inc
or
mov
lahf
xor
mov
cld
in
mov
daa
adc
cli
mov
xor
fldl
testb
jbe
sub
shl
add
jp
sub
fwait
lds
jge
cwtl
pop
popa
and
fidivrl
sub
adc
ror
lds
mov
push
insb
fildll
inc
dec
aad
lods
andl
test
scas
sub
sub
ret
js
xor
std
or
mov
ret
call
pop
mov
enter
idivb
lret
xor
xchg
xchg
lods
mov
test
xchg
xchg
xchg
mov
jecxz
dec
rcr
mov
mov
jno
lods
sbb
mov
cmc
jl
test
mov
push
stos
je
sbb
stc
or
enter
lock
cmp
push
in
xchg
jmp
insl
rolb
insl
std
repnz
sti
pusha
adc
hlt
jb
fadds
inc
and
mov
add
cld
adc
and
push
lods
movsb
je
test
jg
dec
cmp
fidivrs
add
cmp
imul
pop
insl
aas
popf
cmp
sbbl
ficoms
icebp
sbb
push
and
les
mov
sbb
fsub
jns
add
lods
mov
add
icebp
lds
add
mov
mov
aaa
vhsubps
rcll
inc
out
xchg
mov
dec
cwtl
inc
or
pop
nop
sub
dec
test
mov
xchg
sbb
dec
dec
mov
add
outsb
pop
mov
out
dec
cwtl
mov
outsb
jno
xchg
pop
jle
xchg
cmp
mov
adc
adc
into
xor
ljmp
inc
push
lock
jmp
out
adc
pop
cwtl
fisubl
or
enter
push
iret
adc
push
data16
pop
loop
in
mov
outsl
jge
mov
pop
in
repnz
mov
push
mov
shr
mov
fs
xchg
mov
lock
mov
xchg
sub
pushf
mov
xor
fldcw
jmp
imul
pop
pop
jo
and
sysret
mov
movsl
push
repnz
enter
pop
jns
pushf
inc
pusha
mov
mov
jle
aas
test
divl
cmpsb
std
push
pop
xchg
cs
jp
icebp
insl
mov
or
push
jp
adc
call
cltd
sub
xchg
ljmp
inc
jge
je
ffree
push
fcmovne
cmpl
pop
lret
inc
ret
dec
in
sub
and
add
fdivl
cmp
stc
movsb
xchg
lds
fwait
dec
aaa
adc
sub
les
das
loopne
sbb
push
les
rolb
out
roll
jl
enter
mov
sub
scas
adc
stos
in
mov
pop
lcall
addr16
adc
pop
cmpsb
in
icebp
sbbb
fsubr
aaa
mov
xor
inc
add
bound
sub
sbb
clc
in
push
repnz
dec
push
mov
inc
sbb
xchg
pusha
mov
pop
addr16
rcrl
cmc
push
dec
insl
jg
stc
jle
out
xchg
mov
sub
push
pop
test
mov
mov
test
add
mov
xchg
cmp
add
pop
add
test
push
add
adc
mov
cs
aas
lds
popf
xchg
mov
add
insb
sub
adcl
mov
add
stc
cmp
popf
clc
inc
pop
ss
jmp
int3
std
mov
cmpsl
mov
call
cld
stos
test
jnp
mov
push
push
outsb
int
insl
cli
imul
popl
jl
int3
mov
adc
mov
mov
mov
sbbl
or
push
outsb
xor
mov
sub
jne
addr16
xor
jne
ss
pop
pop
sbb
iret
rolb
vmulps
push
out
aaa
dec
mov
dec
inc
pop
addr16
add
inc
aas
dec
ja
lods
js
in
mov
ficoms
imul
jnp
mov
xor
mov
mov
or
inc
jns
div
xor
fnstsw
mov
inc
movsb
fcompl
pop
push
jo
lea
gs
lret
mov
jmp
je
loope
enter
test
inc
and
mov
mov
test
rorl
pop
orb
push
cmp
adc
xchg
pushf
pop
inc
fdivrs
in
mov
xchg
loop
arpl
pop
mov
data16
sub
pop
pop
in
jl
into
cld
lcall
in
stos
repnz
popf
test
lret
pop
jle
leave
sbb
push
mov
test
ja
adc
push
fdivrp
sbb
subb
inc
in
pop
xchg
xor
popa
sahf
xor
pushf
rol
clc
push
mov
into
call
and
lods
push
loope
xor
shrb
aaa
lret
add
push
push
cld
xchg
inc
inc
arpl
aaa
stc
jle
push
mov
inc
test
bound
sbb
adc
xchg
aas
jbe
mov
cmpsb
fstpt
in
std
lcall
or
sub
cmc
jecxz
cmp
cmp
xchg
pusha
inc
xchg
push
mov
and
dec
movsb
xor
jecxz
test
andl
adc
scas
shl
call
out
xor
xchg
imull
jmp
or
rorb
xchg
pop
orb
sub
in
mov
inc
pop
inc
out
add
movsb
movb
in
test
aas
fiadds
decb
int3
inc
sbb
push
sbb
ror
sub
or
aam
jno
sub
cmp
xchg
jmp
mov
cli
fs
mov
sub
sbb
mov
jo
and
jg
cmpb
adc
xchg
xor
sub
shll
shld
mov
jmp
xchg
rcrb
mov
cmpsb
cmp
clc
mov
push
das
movsb
inc
pusha
pminub
fs
ds
test
jl
or
cs
mov
gs
loope
jo
hlt
mov
add
pop
push
test
stos
inc
add
jge
in
in
cmp
mov
mov
popf
ret
pushf
jo
jne
shr
das
pop
sahf
jmp
and
test
xchg
sub
sbb
push
sbb
cs
sti
push
or
cmp
repz
cld
outsl
out
lds
xlat
mov
pop
lods
sub
mov
fiadds
dec
out
hlt
rcll
or
int
mov
loope
sub
lret
jb
incl
ret
inc
mov
inc
fwait
xor
sahf
dec
jbe
jge
icebp
xchg
pop
mov
mov
fidivl
mov
popf
cmpsl
mov
add
aaa
dec
loop
ret
sbb
mov
insl
paddusw
add
cmp
mov
push
int3
inc
mov
adc
or
mov
push
stc
and
pop
push
mov
pushf
xchg
adc
in
loopne
imul
jns
imul
adc
shr
jp
or
clc
gs
mov
leave
inc
xor
adc
adc
xlat
sahf
out
xor
test
lret
dec
inc
das
notb
test
call
fistl
xchg
jge
mov
bound
add
push
outsb
jbe
jb,pn
lcall
inc
insb
les
mov
sbb
test
aad
ret
das
movsb
les
loop
and
xchg
mov
adc
mov
pop
xor
jle
in
cltd
inc
sahf
mov
pop
adc
or
sbb
and
xor
mov
ret
dec
imul
je
push
hlt
pcmpeqd
iret
cmpsl
out
mov
mov
xchg
add
lds
inc
cmpsb
and
stos
push
imul
scas
les
outsb
adc
gs
mov
cmp
pushf
and
fs
or
mov
mov
mov
mov
mov
jge
inc
scas
adc
push
int3
iret
inc
fwait
cli
fimull
push
sar
push
sbb
cmp
mov
test
xchg
xchg
push
push
pop
ret
leave
sbb
xchg
xchg
arpl
jo
sbb
das
xchg
jge
pop
fsubrs
mov
mov
xchg
adc
je
pop
lcall
test
push
in
jmp
mov
cmp
jnp
movsb
inc
pop
adc
aaa
stos
cmpb
mov
fwait
xor
mov
int
jb
jb
cmp
or
nop
xor
dec
push
and
shll
cmp
fstps
mov
cltd
cmpsl
fwait
cmpb
aad
push
sub
sti
jge
mov
in
xchg
repnz
inc
dec
adc
cmpsb
aas
stc
dec
xlat
daa
daa
incl
mov
mov
movsl
and
pop
or
push
mov
xchg
sub
and
push
fldt
imull
lahf
cmpsb
and
fcmovu
xor
push
aas
xor
sarl
jae
jmp
cmp
cmpsl
insl
je
sbb
and
dec
mov
jge
add
cwtl
mov
push
pop
jl
lret
inc
or
dec
inc
adc
rclb
push
out
mov
rorl
sbbl
jae
scas
fimuls
xchg
lds
xor
and
mov
dec
push
cmp
jl
pop
in
push
cmp
mov
dec
pop
loopne
adcl
cld
mov
les
mov
shl
inc
push
fscale
mov
test
dec
and
jge
loopne
mov
aam
lea
pop
sbb
adcl
or
mov
ret
in
sub
sbb
xor
cmc
frstor
fisubrl
cmp
and
arpl
cmp
mov
xchg
adc
fwait
test
or
mov
adc
aam
out
or
pop
mov
cmp
jae
loopne
movsl
decb
scas
subl
inc
lds
movl
mov
mov
dec
in
xor
sahf
test
imul
inc
or
mov
mov
fisubl
out
jae
mov
mov
jp
sub
adc
aas
flds
xor
pop
mov
in
std
cmp
shlb
xor
push
jnp
aaa
vcmpsd
sub
movsb
xchg
ja
jne
fcomi
fidivrl
adc
adc
aas
xchg
cmp
rclb
les
mov
sub
xchg
call
movsb
cmp
inc
dec
add
cmp
test
in
mov
int
or
cmc
sahf
and
shl
push
sarl
push
dec
ret
inc
mov
pop
leave
int
or
sbb
pop
fstpt
mov
mov
or
push
jno
cmp
xchg
or
popf
and
jecxz
mov
data16
into
ss
mov
scas
rorl
sub
pop
mov
jp
and
mov
sti
popf
sbb
ljmp
in
enter
aam
lods
pop
out
lret
int
add
push
cwtl
lods
subb
in
mov
jo
cwtl
popa
out
xchg
shr
pusha
neg
loop
ret
stc
adc
out
addr16
xor
cs
cmp
lcall
or
fs
xchg
jbe
andps
aam
out
pop
pop
movsb
pop
sub
push
lods
loopne
adc
int3
lret
popf
hlt
pop
scas
mov
push
push
das
xchg
test
jg
mov
xchg
lret
mov
lods
sarl
outsl
jmp
sbb
and
cmp
repz
mov
in
sti
jp
xor
dec
mov
xchg
mov
icebp
adc
push
mov
cmp
jg
lret
shrb
jnp
adc
bndstx
mov
iret
scas
jb
pop
lock
leave
xchg
idivb
ret
ljmp
ss
sub
call
fbld
inc
lods
stc
nop
mov
packsswb
xchg
cmp
cld
mov
add
add
and
push
cmc
inc
fsubrs
stos
clc
mov
xchg
testb
or
lcall
pusha
aaa
in
sbbl
loop
dec
push
mov
xchg
mov
stos
mov
fwait
xchg
dec
aam
addb
pop
sbb
pop
scas
jmp
out
cs
ss
inc
inc
test
mov
sbb
pop
in
cltd
lds
pop
sbbl
addb
mov
mov
sub
repnz
xor
int3
push
mov
dec
xlat
push
sbb
ds
or
cmp
xchg
add
and
rcr
xor
andb
inc
xchg
mov
repnz
push
pop
out
xor
xchg
lahf
xchg
loopne
dec
mov
sbb
jnp
sbb
or
bound
fdiv
adc
testl
ja
iret
loope
cwtl
cwtl
mov
adc
inc
mov
jl
pop
xlat
mov
and
push
shrb
or
out
sbb
or
adc
rcr
pop
push
pop
mov
mov
pop
mov
into
mov
sub
inc
enter
call
gs
pop
cltd
bound
sahf
jmp
fidivrs
push
dec
in
test
fisubl
xor
push
int3
cwtl
stos
data16
xchg
push
test
cmpsb
mov
es
imul
sub
pop
mov
mov
sbb
jns
lds
popa
xchg
scas
out
cmpsl
xchg
imul
test
popf
xor
jo
lock
data16
push
iret
fbld
sub
xor
xchg
dec
jo
adc
pop
lods
dec
inc
sub
in
pop
push
mov
or
jno
push
mov
push
popa
or
lock
sahf
leave
cmp
shrl
addr16
pop
dec
and
inc
or
pop
mov
adc
add
and
xor
das
jge
add
add
push
or
sub
dec
hlt
xor
clc
nop
jb
push
insb
inc
ficompl
int
mov
pop
sbb
outsb
push
popa
in
mov
shl
bnd
dec
jecxz
and
cmp
popa
and
in
sub
mov
sub
mov
sbb
gs
in
xor
add
loop
xor
cli
sbb
mov
push
jle
ret
push
cmp
add
adc
dec
sarb
test
and
mov
negb
xor
scas
jge
lods
into
movsl
in
lds
cmp
cmp
ljmp
ret
int
fadds
mov
sbb
jmp
lcall
dec
push
popf
jg
xchg
jp
ljmp
mov
fildl
xchg
sbb
xchg
mov
in
adcl
les
daa
jge
or
xlat
sub
enter
add
mov
xchg
fildll
adcb
adc
mov
pop
cli
mov
test
adc
lahf
and
adc
movsb
xchg
imul
fld
jb
gs
xchg
movsb
aas
dec
mov
les
or
jne
mov
cmpsb
jns
leave
push
test
pop
add
ja
icebp
sub
push
int3
arpl
xchg
pushw
cwtl
lea
xchg
scas
mov
divb
push
call
inc
lods
in
test
xchg
pop
cwtl
pop
or
and
jmp
jmp
inc
mov
mov
int
mov
xor
jb
loop
push
pop
out
jge
sbb
movsb
xchg
ss
es
lods
repz
xor
ja
sub
dec
iret
into
fistl
mov
fwait
cmp
lcall
aaa
xchg
pop
sbb
lahf
mov
pop
out
and
push
dec
in
cmpsb
sbb
adc
push
loope
dec
lods
jno
pusha
pop
rclb
lahf
cltd
or
pop
or
aaa
mov
mov
and
jae
push
gs
mov
popf
mov
fdivl
or
sub
push
rclb
sub
xor
dec
loop
and
inc
push
fnstenv
jno
sbb
scas
xor
aas
adc
lret
add
js
jno
ss
dec
mov
stos
out
rcrl
sub
in
push
out
dec
in
fimull
adc
xor
mov
jne
inc
daa
iret
fldl
jle
push
insl
add
xor
add
nop
xor
outsl
aaa
stos
pop
inc
dec
mov
sub
out
pop
ss
cmp
sti
jecxz
push
outsl
xlat
cmp
push
sarl
mov
dec
mov
test
mov
out
sbb
xor
xchg
cmp
push
and
jns
or
pop
adc
mov
push
outsl
jecxz
jb
add
mov
sbb
fwait
push
in
ljmp
cwtl
sbb
lods
inc
cmp
shlb
and
mov
jge
mov
push
sahf
xchg
mov
insl
adc
sbb
lcall
inc
arpl
dec
mov
neg
push
push
nop
shrb
push
add
inc
cmpb
dec
les
int3
or
inc
pop
test
popf
test
mov
lahf
call
push
es
shlb
cmpsl
sbb
popf
xor
sub
inc
cmp
loope
addr16
fdivl
and
fmuls
je
dec
movsl
mov
cmpsb
mov
movsl
pushl
je
add
or
mov
gs
ret
push
jb
loopne
sub
enter
pop
outsl
jne
out
pushf
shrb
jnp
xchg
inc
pop
mov
aaa
test
pop
jg
and
fdivr
push
push
add
mov
mov
sti
sahf
loop
js
jns
and
adc
inc
inc
pop
mov
cmpsb
jg
lds
xchg
sbb
sub
rcrl
andb
jl
movsb
jl
adc
xchg
xchg
notl
fisubl
fsubrs
push
push
inc
mov
ss
mov
xchg
adc
push
push
sti
mov
test
or
call
dec
pop
mov
popa
data16
icebp
xor
outsb
add
test
or
mov
pop
add
add
and
outsb
xor
mov
pop
testb
pop
lcall
scas
mov
imul
shl
push
int
hlt
mov
fisubl
outsb
aam
subb
cmp
daa
js
js
outsb
leave
int
lret
pop
sub
mov
hlt
pop
fcoml
int
mov
xchg
fldt
fnstcw
mov
cmp
js
push
shll
aas
push
jns
or
or
push
adc
ss
int3
mov
imul
mov
negl
or
stos
dec
pop
fsubrl
xlat
inc
push
sbb
pop
lock
adc
and
dec
dec
mov
mov
lahf
loopne
sbb
jnp
rclb
cmc
xor
movsb
rol
or
int3
pusha
or
xchg
movl
lcall
cwtl
das
or
pop
int3
add
push
mov
pop
cmc
sarl
bound
push
or
stc
popa
push
les
mov
xchg
cmpsl
in
in
push
fs
dec
sahf
das
xor
mov
and
fs
out
ret
inc
mov
push
fisttpll
cmp
insb
das
inc
xorb
movsl
sub
in
in
shll
pop
mov
pop
loop
pop
fidivl
int
mov
hlt
dec
jge
push
adc
in
sti
data16
loopne
lcall
aas
push
adc
jb
jmp
test
into
mov
mov
mov
lss
or
test
push
mov
ljmp
pushf
xor
push
fxch
shlb
fmul
push
sti
jp
mov
js
cwtl
xchg
sahf
lods
lcall
arpl
mov
ss
xor
mov
lret
adcb
sbb
mov
push
dec
add
and
mov
rorb
xchg
push
js
test
push
and
iret
jne
rorb
mov
sahf
iret
arpl
inc
mov
clc
or
std
cmp
pop
adcb
in
ret
jl
add
shrb
inc
jnp
ror
imul
mov
shlb
pop
fadds
sbb
ja
sti
cltd
data16
loop
shll
je
inc
push
cwtl
sbb
push
roll
ret
ret
cltd
jecxz
lret
cmp
xor
cmpl
dec
inc
sub
ljmp
push
inc
xchg
inc
fs
jp
adc
mov
adcl
data16
or
jge
adc
add
pushf
mov
sub
test
in
mov
shrb
mov
sahf
stos
sub
je
pushf
scas
xchg
fstl
in
aaa
pop
sarb
insl
loopne
jp
inc
pop
out
inc
jecxz
fcoms
jnp
mov
mov
mov
and
jge
xchg
inc
mov
xchg
insl
sub
enter
mov
int
fdiv
dec
or
mov
pop
mov
arpl
lods
and
sub
aam
mov
ret
jle
add
lds
cwtl
jbe
idivb
jns
push
into
xor
test
cli
stos
dec
fs
inc
xchg
pop
jnp
push
mov
sub
adc
xor
push
jmp
loope
ss
push
pop
cmp
push
fld
sub
xchg
pusha
js
mov
mov
es
fcomps
ja
mov
mov
jmp
sbb
adc
das
or
mov
imul
das
imul
sbb
dec
jae
scas
daa
faddl
mov
xchg
push
loope
mov
jnp
inc
pop
rcll
movsl
adc
add
jns
push
and
stos
movsb
cld
pop
cld
psrld
and
push
shrl
hlt
stos
and
jae
in
insb
popf
cli
pushf
adc
push
rcrl
ljmp
orb
lcall
cmp
xor
dec
adc
insl
cmpb
jmp
xor
inc
sub
pop
lods
aas
add
mov
fwait
aam
cmc
sbb
mov
loop
or
outsb
adc
mov
mov
outsl
jne
pushf
mov
lret
divb
jne
nop
mov
in
fcmovu
cmp
clc
rcrl
inc
and
adc
hlt
or
jne
sub
pop
mov
dec
popl
or
mov
jo
mov
mov
test
inc
sahf
aaa
push
add
je
jne
scas
and
and
pop
xchg
aad
gs
std
push
add
repz
pop
inc
xchg
cli
sbb
mov
cmp
jle
mov
ljmp
aam
and
pop
sub
and
fldcw
out
xchg
push
dec
daa
lods
test
sahf
gs
scas
lret
adcb
inc
push
push
mov
mov
imul
push
or
jg
inc
mov
stos
inc
cld
push
fcmovnb
add
push
jno
xor
into
aad
loopne,pn
notl
cmp
push
roll
add
fstpt
pushf
fs
fbstp
and
push
mov
xchg
dec
mov
push
out
jge
faddl
lahf
jne
xchg
icebp
inc
pop
pop
shr
cs
xor
mov
cmp
fidivl
xchg
btc
scas
and
shlb
gs
or
push
dec
into
into
fiaddl
nop
test
sti
bound
andb
add
lods
jbe
sub
and
loop
sbb
sahf
test
mov
xchg
imul
pop
mov
fbstp
mov
std
inc
and
dec
cmpsb
or
ret
imul
iret
gs
rcl
dec
adc
jne
inc
data16
push
and
dec
sti
das
test
es
test
jnp
jns
sbb
cmpsb
add
rolb
dec
icebp
or
scas
mov
ljmp
xchg
inc
cltd
cmp
in
xorl
cld
inc
mov
or
pop
mov
daa
jp
and
pop
pop
mov
scas
fidivs
es
xchg
add
mov
notl
fstpt
dec
add
cmpl
xchg
stos
mov
jnp
cltd
and
bound
xchg
iret
pop
fcomps
xchg
adc
in
inc
das
cmp
cmp
out
loopne
xchg
in
push
out
dec
xor
mov
fsts
mov
mov
dec
movsb
mov
jnp
dec
aad
test
nop
mov
and
bound
sbb
or
mov
pop
insb
scas
fnsave
and
push
les
adc
int
fidivl
push
and
popf
adcl
mov
xchg
mov
pop
or
dec
jae
jns
jo
xlat
je
lcall
push
mov
ds
cmp
pop
and
jno
sub
or
push
stos
fiaddl
xchg
lret
aam
ficoml
xorb
orb
add
sti
add
xor
popa
inc
fstps
xchg
pop
cmp
idivl
jo
or
pushf
sbb
mov
inc
sbb
f2xm1
cmpsb
push
cmpsb
add
push
enter
arpl
call
pop
stos
jo
sbb
stos
lock
sub
mov
imul
mov
xor
and
das
cwtl
adc
movsl
lds
or
jg
lcall
mov
mov
bound
mov
lods
jnp
push
lea
adc
addb
and
bound
cltd
addr16
inc
sub
xchg
aam
nop
or
cs
pop
negb
mov
pop
add
sub
cmc
int3
fs
adc
inc
int3
movsl
stos
cmp
pop
loope
adc
xchg
dec
stos
call
jno
testb
cmp
decl
jo
addr16
dec
popa
push
mov
mov
adc
fwait
roll
cwtl
push
loope
das
pushf
inc
jae
mov
scas
lds
pop
mov
jns
test
or
in
popf
xlat
movsl
mov
xchg
mov
xchg
xor
in
jecxz
pop
mov
xchg
cmp
dec
data16
pop
cmc
cmp
cmp
pop
mov
xchg
call
xchg
cmpsl
mov
mov
or
xor
roll
adc
sbb
sub
sub
xor
pop
or
in
mov
dec
mul
insb
and
sbb
testl
push
adc
cmp
xchg
stc
in
xor
pop
mov
mov
mov
push
sti
lahf
in
cli
adc
push
cs
push
cltd
in
mov
nop
lret
xor
lods
or
push
mov
testb
add
xchg
rcrb
push
repz
cltd
loop
pushf
sbb
ds
push
mov
xor
mov
or
sub
jb
scas
inc
xchg
xchg
daa
lahf
mov
stos
mov
stc
dec
and
mov
mov
sti
mov
mov
pusha
in
ss
mov
dec
jmp
jb
out
sub
sub
push
fldcw
cmp
stos
jb
jge
lea
addr16
xchg
mov
test
pop
daa
inc
or
sti
jg
fwait
xor
sub
popa
mov
jo
insb
sub
lcall
and
movsl
or
jg
lret
outsl
js
xchg
xchg
dec
sarl
mov
loopne
aaa
push
xor
jg
lret
jb
mov
stos
jge
out
cmpsl
mov
xchg
lea
mov
xchg
movsl
inc
lock
in
lds
cmp
adc
jp
jmp
cmp
push
int
mov
insb
rorl
into
sbb
sbb
pop
std
and
fwait
repz
push
and
jno
scas
mov
pop
push
rclb
inc
int
mull
pop
insb
sub
add
push
push
cmp
scas
cli
int
call
xchg
insb
and
imul
inc
sub
icebp
pop
and
sbbl
and
arpl
add
or
test
push
out
inc
mov
gs
inc
add
in
mov
mov
nop
jmp
lods
inc
jg
adc
cmp
jb
push
dec
mov
fstp
lea
xchg
mov
jae
sbb
xchg
ret
jae
jmp
imul
jb
ljmp
lahf
ds
bound
icebp
test
mov
mov
int3
inc
and
data16
or
shrb
les
xchg
sub
scas
imul
adc
and
arpl
inc
dec
pop
and
insb
sbbb
and
sbb
xchg
jp
stc
mov
xorl
fadds
dec
dec
push
popf
jl
fnsave
sub
iret
fsin
dec
jmp
orl
repz
inc
call
shrb
mov
adc
test
pop
orb
pushw
pop
xchg
inc
imul
or
loope
std
mov
clc
inc
mov
mov
cltd
dec
and
aad
daa
add
and
jbe
clc
repz
dec
mov
push
dec
xchg
cmp
sahf
or
lods
cld
pop
push
unpcklps
jne
scas
fisubrl
ljmp
jns
sbb
andl
cld
pop
pop
cmpsl
ljmp
in
movsl
push
test
in
sti
pop
shll
fiadds
jmp
cli
push
mov
in
std
js
clc
fsubp
lcall
mov
out
push
dec
xchg
mov
push
cvtps2pd
ljmp
push
repz
jecxz
or
mov
mov
dec
ss
imul
inc
orb
lods
cmp
push
xor
cmp
in
cli
push
inc
mov
xchg
or
mov
cli
sub
cmp
inc
lods
pop
imul
jge
aas
in
popf
add
icebp
stos
mov
push
adc
sar
outsb
jp
dec
lock
add
movsl
loopne
into
adc
and
stc
xchg
ja
test
lds
xchg
lods
pop
insl
dec
dec
addr16
push
ds
or
outsb
cmp
shlb
dec
jecxz
enter
icebp
inc
and
lret
enter
sbb
sbb
loope,pt
lahf
xchg
sbbl
fdivl
sub
pop
scas
lret
sbb
xor
xor
cmp
mov
dec
adc
jecxz
jmp
jl
dec
jle
jle
sbb
xor
out
ljmp
call
sub
ljmp
or
mov
xchg
shrl
push
mov
push
xor
movsb
mov
call
arpl
stos
sahf
push
lock
pop
rol
xor
cmpsl
hlt
mov
xor
sub
xchg
mov
mov
les
mov
xchg
pop
dec
loop
mov
fsts
rorl
add
or
xchg
push
inc
fwait
sbb
push
pop
in
out
cltd
mov
pop
or
mulb
hlt
sbb
mov
adc
mov
js
into
jle
je
mov
pop
insl
je
cmp
jae
into
ss
xchg
inc
adc
jae
push
jg
fsubrs
lret
in
cmp
insl
pop
das
daa
dec
fnsave
dec
movsl
dec
xchg
and
ds
cmp
loope
xchg
pop
sbb
mov
mov
xchg
mov
ret
aad
loope
fnstcw
rorl
nop
jnp
out
pop
adc
jne
mov
scas
stos
inc
loopne
sbb
push
ret
mov
inc
lock
iret
test
loope
bound
cmpsl
pop
stc
pop
testl
arpl
xchg
dec
jmp
lds
sub
pop
pop
mov
inc
xchg
and
fisttpl
das
bound
popa
test
out
adc
js
xor
xchg
pop
cli
rcrb
jle
insb
jnp
lahf
pop
or
mov
test
std
mov
mov
popa
fdivrl
adc
jnp
sbb
inc
inc
mov
jl
call
cmc
xchg
ljmp
inc
ficoml
jne
dec
cmpsl
or
cmp
xchg
ds
jae
sub
sarb
push
dec
scas
popa
in
mov
xor
shr
stc
nop
stos
add
jp
pop
cmp
push
jbe
aas
pop
ds
rolb
pusha
int
fisttpll
xchg
int
push
mov
mov
lea
push
fsts
mov
pushf
sti
pop
mov
popf
cmpsb
loop
jg
aad
aaa
xchg
jae
inc
pop
inc
cli
mov
push
cmpsl
int
daa
cmpsl
fsubr
cs
inc
lahf
and
rorb
sbb
add
into
ret
xchg
mov
mov
dec
fsubs
and
in
mov
das
xlat
xor
cmp
ret
in
mov
daa
mov
push
pop
mov
and
lret
xchg
xor
testl
roll
pop
pushw
mov
cmpsb
mov
cmp
lea
push
mov
inc
lods
lods
adc
cwtl
repnz
mov
or
ret
add
outsb
xchg
enter
out
inc
movsb
ret
xor
leave
jl,pt
sahf
lds
es
call
lret
adc
jae
or
shrl
jae
push
bsr
dec
stc
sbb
loopne
push
imul
xor
pop
xchg
hlt
fldcw
idivl
test
and
fs
cmp
jecxz
shl
lock
sarb
fwait
test
sbb
lahf
gs
stos
fs
fsubrp
pop
repz
push
sub
sti
jp
cmp
addr16
jle
clc
call
loope
test
cmp
mov
ret
xor
je
stos
loopne
aad
js
shl
cld
inc
rorb
in
pop
call
push
stos
daa
sbb
mov
pop
outsb
in
pop
repnz
mov
mov
cmc
popf
xorl
ja
mov
repnz
and
in
mov
add
out
xor
mov
decl
cmpsb
xchg
shr
and
dec
jl
das
cmp
mov
sub
xchg
in
adc
jo
push
xor
hlt
mov
cmp
xlat
jmp
push
cmpsl
lea
in
pop
fldt
cmp
repnz
push
stc
cmp
daa
jo
fsubrs
sub
in
lret
repnz
inc
lock
lahf
notl
ljmp
popa
dec
fmulp
jle
icebp
mov
pusha
not
aaa
xchg
cmp
or
aad
sub
stos
ret
cmp
cmp
shll
cmp
mov
fistps
loop
ret
xchg
jno
pop
cmp
addb
scas
pop
push
sbb
xor
sub
aad
lret
lods
mov
mov
push
sub
imul
pusha
cmp
add
popa
or
outsb
and
mov
mov
sbb
stc
rorb
and
aad
sub
xchg
aad
vaddps
mov
push
loopne
cmpsl
mov
popa
mov
out
insb
jno
and
outsb
test
jecxz
cmp
daa
mov
ja
inc
scas
jmp
mov
sti
jg
das
cmp
stos
dec
ds
cld
xchg
sub
lahf
ss
dec
cmp
mov
pop
add
mov
jae
popa
int
xor
mov
xor
lret
xchg
ljmp
jne
call
fldenv
aas
rcrb
sub
je
lcall
lock
arpl
ret
aaa
xchg
popf
and
aaa
repnz
xor
mov
jnp
lods
roll
cli
into
fcoml
ja
dec
cltd
pop
pop
xchg
shll
mov
aam
mov
ret
sub
adc
mov
add
stos
push
int3
push
clc
mov
fdivrl
iret
inc
outsb
lret
roll
or
xchg
pop
cmp
pop
movsl
loopne
rcll
and
testl
je
dec
das
cmpsl
mov
pusha
xor
inc
jmp
daa
adc
jmp
lret
dec
loopne
fidivs
outsb
mov
mov
mov
pop
sub
aam
addr16
xchg
scas
fs
popf
andl
shrb
sub
int3
dec
add
pop
in
clc
mov
xor
leave
inc
push
fistl
xor
push
xorb
or
jp
daa
nop
mov
ljmp
pushf
stos
int
xchg
ljmp
fdivrp
mov
or
jg
shlb
fsubl
popa
ret
adc
out
fldl
sub
mov
les
adc
cmp
cli
lea
sti
xor
mov
lcall
nop
arpl
ljmp
inc
out
popa
dec
push
mov
loopne
mov
cmpsb
out
xchg
dec
decb
add
movl
pop
out
cmpsl
aas
cmp
dec
cmp
mov
ljmp
out
in
gs
mov
dec
or
pop
add
addr16
mov
outsl
adc
ret
ds
and
pop
lods
adc
mov
mov
test
mov
call
out
xchg
inc
in
popf
stos
xchg
pop
loop
jno
pop
shll
imulb
inc
dec
fdivl
das
outsl
cmp
fcompl
out
pop
dec
popf
xchg
sub
or
mov
jmp
cs
bndstx
xchg
lret
jno
jo
aaa
into
inc
jecxz
sbb
push
icebp
adc
movsl
add
jne
dec
mov
aaa
dec
flds
test
lds
push
movsb
or
test
jns
subb
clc
adc
mov
pop
hlt
jge
ficomps
cmp
ja
or
dec
push
aam
dec
xor
jns
or
pop
xor
jne
js
xchg
stos
add
addr16
pop
cmpsb
lock
pop
xchg
sub
movsl
xor
adc
inc
pop
dec
mov
xchg
cmpl
in
dec
rolb
stos
mov
rcrl
or
xchg
xchg
adc
dec
mov
dec
loope
arpl
testb
mov
add
and
pusha
andl
adcb
inc
fildl
icebp
adc
or
in
inc
shlb
jmp
sub
sarl
jno
adc
xchg
push
xor
je
cmp
mov
rcrl
lods
cmpsb
sbb
jo
jbe
dec
mov
int3
imul
xchg
js
les
mov
cli
pusha
push
rcll
dec
icebp
dec
pop
jl
inc
insb
js
inc
xchg
adc
xchg
movsb
and
fs
and
push
call
pop
stos
inc
fs
sub
dec
je
scas
adc
pusha
bound
or
push
divl
sub
inc
mov
ja
mov
and
icebp
adc
nop
movaps
mov
ret
pop
mov
jmp
fucom
jbe
sub
dec
pop
jge
inc
arpl
lods
cmpsb
mov
xchg
mov
add
mov
out
les
mov
jno
mov
stos
inc
into
push
xor
repnz
lahf
jno
test
leave
nop
mov
mov
fbld
xchg
jns
popf
mov
mov
in
dec
dec
fbstp
divl
iret
xchg
int3
popf
xor
fldenv
push
push
xchg
aam
pushf
sub
ds
lcall
pop
fsubrs
testl
xor
outsl
push
lods
mov
fisttpl
sbb
scas
pop
mov
ret
and
lret
rorb
dec
popf
sbb
push
ds
les
lds
mov
pop
int3
enter
xchg
push
jno
cmpsl
pop
jne,pt
and
enter
pop
shl
pop
add
xor
mov
mov
shl
testl
push
sbb
fbstp
movsl
cmc
or
cmp
cmp
mov
add
pop
nop
sub
dec
jo
out
sub
cmp
fists
lods
sub
dec
mov
shrb
lock
std
and
jge
sbb
movsl
popa
or
push
popf
int3
sub
cld
adc
ja
bsf
imul
xor
lret
mov
out
sbb
jo
pop
sbbb
mov
or
movsl
push
push
pop
xchg
inc
xchg
fs
std
imul
addb
pop
loop
loope
sbb
push
mov
push
aas
xchg
add
and
cmpsb
mov
rcr
mov
test
test
arpl
adc
sub
mov
push
and
adc
repz
mov
insb
pop
inc
push
fstps
movsb
js
in
sti
mov
sub
mov
push
jg
mov
mov
in
cmp
or
mov
cmpsb
lcall
stc
lds
pop
ret
nop
cli
or
lods
int
aam
pop
out
mov
ret
arpl
sbb
lock
inc
sbb
hlt
xchg
jno
pushf
xor
xchg
sbb
dec
repnz
jbe
jp
insl
xor
adc
mov
mov
sahf
sti
lds
xchg
arpl
dec
pop
call
outsb
andl
out
loope
outsl
insl
repz
mov
cmc
or
insl
fwait
repnz
push
outsb
mov
mov
sbb
scas
and
cmpsb
ss
pop
mov
pop
out
jl
ss
cs
xchg
test
xor
push
cmp
out
test
cmp
and
mov
sahf
call
push
add
xor
imul
pop
icebp
addr16
push
xor
jmp
xchg
imul
fcompl
pop
adc
insb
bndldx
mov
xor
dec
xchg
add
mov
xchg
out
sbb
fistps
push
dec
outsl
pop
dec
shl
mov
dec
js
and
mov
aaa
add
dec
mov
sti
ja
adc
pop
test
sub
arpl
cmp
int3
mov
aaa
lret
pop
sub
loope
dec
sarb
inc
jno
cld
push
jmp
mov
and
fsubp
mov
cwtl
adc
mov
mov
cmp
les
pop
lret
pop
or
add
mov
or
imul
xor
or
inc
sarl
mov
add
mov
push
imul
add
scas
test
scas
and
cmpsl
jb
add
xchg
nop
movl
sbb
es
insl
fnsave
iret
pushw
jbe
and
stos
fnop
mov
aaa
mov
test
outsb
mov
fwait
pop
mov
repz
or
fbstp
repnz
sub
fistps
jge
lahf
jmp
out
sub
xor
orb
mov
jp
pusha
jp
adc
inc
jbe
sbb
sub
lea
test
push
xor
jl
shl
out
lods
in
movups
dec
xchg
pushf
lcall
or
jge
and
pop
dec
add
mov
pop
jbe
add
jnp
mov
sub
push
lds
loop
roll
mov
jns
nop
aad
mov
shll
push
out
enter
mov
pop
stos
cmp
xchg
aas
fs
test
adc
jp
out
xchg
cmp
cwtl
and
dec
iret
scas
xor
dec
adc
pop
movsb
dec
mov
mov
add
and
mov
and
mov
mov
es
ja
imul
sub
pop
popa
dec
dec
ret
stc
adc
loopne
cmp
fsubrl
pop
bound
pop
sti
es
jg
push
mov
sbb
inc
sahf
xor
xchg
add
and
sbb
je
pop
movsb
push
shrl
cmpsb
cmp
repz
pop
cltd
stc
test
push
inc
lea
mov
out
roll
mov
pushf
iret
mov
jnp
mov
push
cmpsb
rol
jl
jb
insl
ret
imul
or
imulb
mov
mov
popa
cmp
xchg
test
inc
jns
test
dec
mov
out
outsb
push
inc
rolb
inc
fstp
nop
hlt
movsl
dec
stc
fs
jp
jae
add
imul
or
repz
xchg
xchg
xchg
enter
add
xchg
lcall
call
outsb
mulb
or
aas
push
stc
and
call
xchg
pop
mov
dec
push
das
clc
jge
xor
inc
loop
adcb
or
add
fsts
mov
mov
movsb
xchg
add
or
or
sti
jno
out
jnp
movsb
scas
jb
in
mov
add
les
pop
lcall
daa
or
movsl
movsb
imul
adc
push
xchg
mov
sbb
arpl
mov
jne
iret
daa
stos
cmp
sahf
inc
sbb
mov
sub
ficompl
push
and
sub
iret
or
popa
and
pop
stos
fimuls
es
adc
into
not
test
mov
push
add
clc
testb
or
mov
aaa
bound
push
fldpi
lcall
push
test
outsb
fidivs
nop
mov
icebp
sar
inc
maskmovq
negl
mov
loop
push
adc
jmp
add
push
jb
ret
int
mov
imul
fs
scas
shrl
pop
cmp
and
mulb
int
out
or
pushf
fsubrl
rcll
ljmp
testb
mov
jne
jne
and
stos
xchg
stos
inc
in
xchg
push
fcomip
lret
pop
xor
cmpsb
sbb
je
divb
sbb
sbb
js
xchg
jnp
pop
jb
sbb
cli
test
pop
cs
fmul
and
clc
aaa
sahf
ret
mov
and
adc
xchg
inc
mov
pop
js
add
js
pop
mov
imul
xchg
xor
mov
lahf
sahf
inc
sub
mov
mov
mov
mov
test
and
xor
jg
in
jecxz
pop
fwait
jne
dec
loopne
dec
dec
in
aam
adc
and
pop
leave
nop
insl
mov
in
test
dec
hlt
push
std
jmp
or
add
fstps
mov
xorb
xchg
dec
test
cmp
leave
arpl
pop
jne
shl
into
inc
or
nop
or
pop
push
nop
lods
shll
test
out
lock
mov
repz
pop
sbbb
cmc
adcb
sbb
popf
sbb
dec
and
popa
mov
icebp
fmul
or
cwtl
cmp
filds
aad
cmp
jae,pn
or
jmp
aaa
dec
cmp
imul
loop
cmc
adc
sub
test
andb
out
mov
in
push
loopne
addr16
and
mov
aad
xor
push
cltd
add
into
testl
test
jns
nop
cmp
cmpsb
dec
push
nop
dec
loopne
xor
ljmp
adc
sahf
xor
add
cmp
arpl
sub
fxch
and
ljmp
xchg
hlt
push
test
fidivrs
mov
aam
mov
xchg
repnz
adc
sbb
faddl
jge
shll
xchg
loop
push
jae
cs
dec
sub
mov
arpl
xlat
xchg
push
mov
scas
sbb
repnz
es
insb
hlt
jbe
dec
push
and
sub
jp
mov
enter
repnz
fdivrl
pop
movsl
popf
dec
rcrb
pop
mov
push
lea
add
or
jns
addr16
xchg
jo
xchg
cmp
mov
mov
das
fsub
lods
cmp
push
movsl
gs
daa
into
es
repnz
jecxz
icebp
testl
jnp
loope,pt
pushf
add
clc
jns
int3
mov
push
popf
mov
jmpw
movsb
fwait
pop
popa
or
sub
stc
psrld
push
jmp
imul
data16
mov
adc
out
das
ljmp
mov
xchg
pop
and
dec
lds
movsl
ret
or
or
popf
in
sub
test
scas
mov
jb
jno
or
jae
mov
mov
pop
jg
pop
pop
lock
pop
xor
xchg
jnp
mov
shl
sbbb
test
sub
inc
out
or
sbb
mov
or
fsubrs
psubb
inc
outsl
xor
ror
push
push
jp
cli
popf
dec
sbb
pop
ja
push
in
xchg
pop
in
nop
sbb
insl
enter
lcall
aad
mov
out
movsl
pop
cmp
pusha
test
xor
ss
mov
loope
lods
adc
dec
shll
sbb
sbb
daa
scas
nop
cmp
test
dec
cmp
lods
andb
dec
aad
xchg
or
pop
bound
shlb
repz
scas
test
mov
jae
fwait
mov
into
push
jbe
ja
dec
test
decl
sub
outsl
lock
mov
fnstcw
xchg
cmpl
pop
lret
jbe
data16
xchg
push
xchg
inc
aam
loop
push
xchg
dec
fadds
scas
outsb
sbb
arpl
test
sub
sbbl
sbb
dec
mov
insl
test
js
je
push
movsl
fisubs
jns
pusha
mov
mov
inc
add
js
push
out
mov
outsb
test
cs
adc
pushf
mov
jmp
add
adc
xchg
rclb
dec
lahf
xchg
and
cli
std
sbbl
sahf
out
jle
mov
add
pop
stos
and
mov
aas
sarl
je
and
int
scas
mov
in
jno
push
and
inc
pop
mov
movsl
mov
ja
int
push
fsub
mov
or
stos
rorb
sub
xor
das
psadbw
jl
mov
dec
imul
dec
push
movsl
jmp
adc
lret
or
rorb
out
pop
aad
mov
nop
ret
jecxz
mov
add
shl
xor
jns
ret
sbb
subl
sub
jb
inc
fsubp
testl
and
dec
loopne
sub
push
lods
sbb
shr
fisubs
dec
mov
movsl
cmpsl
or
cmpsl
clc
daa
inc
cmp
sti
sub
loopne
ret
mov
xorl
xchg
sti
faddl
repz
sahf
data16
dec
stos
pushf
hlt
push
into
lret
mov
mov
adc
test
jle
xchg
int3
mov
mov
popa
jecxz
ror
sbb
jbe
dec
outsl
fbld
mov
xor
fcompl
pushf
jo
gs
scas
dec
loopne
pop
outsb
and
jmp
jno
adc
or
pop
jecxz
jecxz
inc
lcall
rcrb
int3
popa
xorl
int
mov
lods
inc
imul
push
xchg
xchg
es
sti
popa
clc
sub
cli
pushf
popf
sbb
jo
jmp
mov
insb
mov
xchg
imul
pushl
orl
stos
je
or
push
out
sti
cmp
add
cmpsb
cmp
jns
fnstcw
pop
les
xchg
add
rorb
test
jb
adc
or
loope
pop
not
ret
sub
hlt
pop
fldpi
inc
test
dec
jno
shll
push
pusha
dec
loop
mov
es
cmp
jge
iret
inc
orb
gs
xchg
mov
sub
add
shrb
nop
jb
ret
push
out
xor
push
test
jns
int
stos
ret
sbb
mov
cld
inc
and
rcrl
dec
ljmp
dec
inc
push
pushf
pop
in
lock
push
aad
dec
gs
jle
ss
pop
pop
pop
inc
les
cmpsb
mov
jnp
or
pop
jle
pop
push
sub
xchg
jl
push
mov
cmp
test
sub
scas
add
arpl
mov
test
daa
hlt
jge
repnz
pop
pop
orl
sbb
dec
inc
push
push
xchg
xchg
insb
mov
adc
mov
std
pop
divb
mov
and
inc
sbb
inc
movsl
jge
enter
fldenv
insb
pop
jno
sub
rcll
push
mov
je
fldl2t
sub
aas
mov
inc
int3
out
fs
addr16
ja
dec
dec
mov
notl
test
jl
cmp
xchg
adc
inc
fldcw
lock
je
inc
imul
out
add
or
ljmp
jno
js
sarl
lea
dec
pop
dec
lahf
nop
daa
jbe
xchg
jp
xchg
scas
inc
das
xchg
in
enter
ja
add
mov
jge
xor
bound
cld
cpuid
lcall
cs
cwtl
insl
mov
and
inc
sarb
movsl
adc
cmp
dec
cwtl
outsl
nop
adc
negb
daa
pop
shlb
adc
xor
xchg
add
mov
inc
lcall
or
cmp
bound
in
push
cltd
push
mov
test
sarl
mov
idiv
jge
fcom
pop
cs
jno
fmulp
jl
mov
adc
jp
add
in
ljmp
pop
jnp
jl
xor
mov
fidivl
mov
test
dec
xchg
jb
mov
mov
pop
push
inc
inc
push
repnz
push
push
fisubrl
rol
cmp
jo
jle
shrb
adc
xchg
loop
jg
mov
mov
mov
jb
adc
jl
and
add
aas
mov
into
das
and
xchg
outsl
call
sahf
jne
inc
fcoml
cmp
mov
loopne
lea
subl
sti
enter
xor
sbb
mov
loopne
mov
subb
push
jbe
sub
dec
lret
daa
inc
lock
and
add
adc
mov
ljmp
stos
push
add
stos
mov
pop
repz
pop
rolb
imul
data16
out
jae
mov
dec
fsubrp
mov
outsl
movsb
mov
movsl
cmp
add
hlt
mov
ret
jl
pop
and
js
sbb
ret
xor
sub
ljmp
pop
push
inc
lcall
cmp
sarb
sub
cmp
into
xchg
sbb
jae
xchg
sub
dec
jmp
inc
xchg
addr16
cltd
add
mov
add
cmp
adc
mov
sti
fsubl
xor
xchg
xor
gs
repnz
mov
push
xchg
mov
out
jno
xchg
loopne
adc
scas
jae
jne
pop
cmp
aam
jne
adc
int
adc
test
inc
xchg
sbb
or
jle
imul
jbe
mov
into
ja
cmc
pusha
xor
lahf
xchg
test
cld
lock
and
call
lock
adc
xchg
mov
test
mov
clc
xchg
jg
lahf
ss
dec
mov
out
push
bound
pop
inc
and
nop
push
imul
jp
add
ds
repnz
std
mov
pop
pop
jae
pop
es
inc
cmp
mov
in
inc
adc
jmp
in
push
popf
adc
out
dec
inc
stc
xor
dec
jnp
cwtl
mov
adc
shll
lock
inc
cld
aas
addr16
icebp
adc
adc
pop
or
add
or
cmpl
lods
jge
or
das
and
pusha
das
jp
movsl
dec
nop
push
out
out
pop
and
lahf
mov
lret
pop
inc
add
xchg
xchg
sub
or
cwtl
jge
inc
xlat
call
sbbl
mulps
aas
call
std
mov
fcmovu
jno
pop
mov
aam
and
mov
add
xchg
rclb
sti
cmpb
das
xchg
sbb
test
and
leave
push
mov
out
mov
cmp
stc
scas
mov
stc
clc
test
dec
sub
ljmp
jecxz
pop
imul
push
mov
mov
sbb
jae
imul
cmp
xor
in
sbb
inc
xor
push
bound
cmp
sbb
mov
stc
xor
cmp
popf
mov
out
es
in
inc
xchg
icebp
cmp
mov
pop
out
inc
rclb
repz
ja
sub
pop
jnp
int
xchg
jns
push
inc
in
int
imul
sbb
and
dec
sbb
sbb
in
dec
rcrl
ret
in
and
icebp
loope
ljmp
inc
lds
jg
rcrb
repnz
mov
aam
in
add
push
ss
jp
pop
arpl
movb
dec
add
push
test
das
addl
inc
fsts
cmpsl
mov
push
cld
arpl
ret
jno
sti
sti
mov
mov
mov
cmp
adc
mov
lock
dec
arpl
dec
inc
shlb
cmpsl
or
cld
ret
pop
loopne
xchg
dec
and
xchg
jne
pop
xor
dec
les
add
bound
and
mov
mov
adc
cmp
inc
xor
mov
in
pop
fwait
jecxz
sbb
fildl
rclb
jmp
jns
jo
fistpl
movups
bound
xchg
loop
test
xorl
mov
pop
and
aad
xchg
nop
and
sbb
push
ss
divb
gs
pop
imul
in
mov
les
push
nop
jae
cmp
adc
pop
jbe
or
lcall
test
add
xchg
or
sti
jmp
ss
cmpsl
push
cmp
insl
inc
inc
icebp
outsb
loopne
insl
fsubs
scas
insb
pop
mov
fsts
fnstsw
loop
or
daa
mov
insl
dec
fiaddl
rcr
xchg
jne
push
xor
and
or
cmp
popf
add
jecxz
mov
mov
insl
fdivr
loope
pushf
mov
push
fs
ljmp
aam
into
mov
lcall
pop
das
mov
cltd
pop
sbb
addb
sbb
adc
push
mov
ss
sahf
lods
mov
or
das
daa
cld
cmpsl
out
and
sub
xor
fwait
sub
cltd
mov
pop
ret
outsl
imul
add
xchg
mov
mov
xchg
adc
jecxz
mov
test
xchg
mov
nop
push
cmp
daa
ljmp
jbe
sub
fistl
jne
fpatan
enter
mov
sarl
xchg
dec
cmp
mov
mov
push
pusha
and
fwait
shll
sub
mov
pop
mov
scas
jb
push
shl
inc
sti
or
test
mov
or
cmp
fbstp
lret
mov
jbe
xor
xor
pop
fstl
pop
cmp
fstpt
jb
push
decb
stos
pop
adc
mov
lss
enter
out
pop
aas
aaa
pop
fwait
xlat
out
xchg
lods
dec
jecxz
jne
cs
cmp
mov
pop
into
not
pop
icebp
nop
inc
rorl
jns
mov
enter
cmp
xlat
pop
bound
sub
lds
test
xor
jle
mov
popa
mov
daa
or
cwtl
cmp
lock
xor
mov
add
out
lret
mov
les
leave
call
in
repz
aam
mov
cltd
enter
mov
push
cmpsl
add
inc
test
enter
loopne
push
mov
inc
pop
scas
mov
loope
cltd
jo
cli
clc
xor
or
mov
push
out
mov
dec
lock
call
je
ss
cli
fwait
ret
jl
sbb
pop
and
push
fwait
pop
push
or
inc
push
stc
and
out
negl
outsl
incb
mov
add
jecxz
and
repnz
pop
dec
out
insb
sbb
pop
inc
arpl
jo
mov
mov
xor
inc
hlt
ljmp
xorb
xchg
mov
jb
jp
nop
pop
dec
stc
or
xchg
ja
pop
or
scas
and
xor
dec
shld
sub
or
push
mov
and
xchg
stc
rcrl
daa
add
mov
into
mov
push
mov
push
xor
mov
dec
cmp
mov
dec
and
push
mov
adcl
mov
mov
pop
js
mov
jl
and
test
jne
pushf
xor
and
out
push
or
lods
ficomps
lods
mov
movsb
adc
out
mov
jmp
mov
dec
ror
cmp
out
arpl
mov
or
xchg
rcrl
mov
mov
aaa
loopne
mov
inc
lods
loop
stos
in
je
loopne
shl
imul
cmp
popa
add
outsl
aas
icebp
cmp
mov
into
jmp
or
scas
add
cmc
mov
cmp
sub
sub
lcall
mov
cmp
add
pop
data16
mov
and
incb
pusha
fdivl
test
mov
jecxz
xchg
dec
dec
dec
in
fcmove
pusha
nop
movsb
repnz
subl
frstor
jle
mov
into
mov
inc
fdivr
sub
insl
sbb
mov
addr16
popf
idivb
inc
cmp
inc
inc
fidivrs
test
mov
pop
sbb
or
mov
je
cmp
scas
push
lds
and
mov
movsb
xchg
push
inc
pop
lock
push
in
mov
in
add
mov
or
mov
ljmp
sub
mov
pop
dec
imul
xor
enter
sub
and
sbb
ret
or
out
sbb
push
cwtl
pusha
enter
pop
loopne
sub
jg
and
add
out
lea
je
mov
xorl
xchg
jle
jbe
xor
jb
xor
jp
fisubl
pop
jmp
imul
in
jo
aad
fildl
add
sbb
lods
cs
test
addl
pop
stos
mov
int3
xor
xchg
jmp
xor
pop
lahf
inc
cli
or
dec
shrb
pop
insl
out
and
test
mov
test
arpl
out
das
fnstsw
mov
and
sub
mov
es
sub
out
mov
pop
sahf
daa
fstpl
fidivrs
ret
pop
bound
loopne
push
movb
push
sub
dec
in
imul
lea
leave
push
in
add
cmp
in
push
or
aam
leave
lahf
mov
sub
ficoml
incl
int
ret
out
jle
sti
flds
testl
sub
mov
pusha
pushl
dec
ss
push
arpl
movsl
mov
icebp
cmp
add
xchg
lods
repz
pushf
xor
iret
sbb
enter
jbe
push
cmp
aas
cwtl
pop
mov
mov
mov
gs
les
xor
pop
lods
fisubrs
mov
lock
pop
cmp
out
adc
mov
mov
std
cmp
dec
add
test
pop
mov
andb
std
jg
dec
adc
jne
mov
int
repnz
in
xchg
xchg
pop
or
xchg
call
cltd
sub
mov
fstpt
in
into
jecxz
ss
pop
cld
lods
inc
adcl
cltd
mov
xorl
pop
scas
or
fcoml
andb
jno
dec
push
push
mov
adc
jl
mov
sbb
stos
mov
or
and
jp
scas
mov
ret
push
fldcw
popl
bound
nop
dec
add
jbe
jle
cwtl
mov
ret
mov
lds
inc
sbb
lods
gs
sti
pop
iret
jle
popa
sub
not
bound
into
mov
xor
repz
sub
or
and
xor
dec
add
pop
xor
xor
insl
jmp
dec
adc
dec
ret
int3
push
push
out
test
jno
add
popa
xchg
xchg
lea
scas
adc
imul
je
out
push
cmpsl
mov
fisubrs
shll
loopne
scas
sub
mov
stc
or
inc
in
mov
dec
daa
ret
xchg
mov
push
popa
rcrb
and
mov
mov
imul
cmpsb
sbb
addb
daa
out
sub
inc
lods
xchg
cwtl
loopne
lods
xchg
mov
fdivs
stos
sbb
leave
sbb
xor
pop
push
popf
push
repnz
fidivrl
lods
fadds
sub
xor
xchg
ja
add
mov
push
mov
or
xchg
add
ret
andl
xchg
adc
xchg
insl
mov
inc
lock
es
dec
lcall
ret
mov
mov
movsl
enter
xorb
and
dec
pop
repnz
sbb
ljmp
out
mov
fstpt
lahf
xor
je
test
call
lahf
mov
and
iret
ret
shlb
sbb
lret
scas
and
mov
arpl
xor
fmulp
lock
and
mov
jnp
sbb
adc
imul
jp
cmp
in
push
add
xor
aam
xchg
cltd
mov
jne
xchg
pusha
adcl
or
cwtl
fsubs
jne
ss
out
fcoms
pop
jno
mov
into
into
in
xchg
push
repnz
int
cmp
pop
cmpb
repnz
xor
push
fcomps
xorb
leave
fnstcw
or
insl
sbb
adc
pop
inc
inc
sub
inc
xor
outsl
inc
xchg
jg
das
imul
sub
mov
inc
add
inc
and
push
fwait
push
es
xchg
and
fnsave
push
pop
sbb
xchg
jnp
fimull
sbbb
daa
mov
mov
cmp
sub
jg
sbbl
scas
fbld
aam
mov
loopne
inc
pusha
mov
data16
jge
sub
loope
jb
add
stc
test
dec
cmpsb
lock
cmpsl
ds
faddp
pop
in
movsl
lds
pop
adc
daa
xchg
sub
and
mov
cld
xor
pusha
out
push
aas
in
shlb
mov
daa
add
test
xor
ja
push
test
in
pusha
xchg
insl
pop
cli
rorb
mov
gs
and
xchg
gs
and
xchg
out
popf
inc
pop
divb
test
lret
push
add
adc
call
idivl
add
fsubl
push
mov
cld
xor
jno
loope
mov
push
mov
mov
out
test
mov
fistpl
dec
fstpl
leave
loopne
adc
mov
arpl
cmp
js
aaa
movsl
cmp
add
inc
popf
mov
cmpsl
inc
adc
ret
pushl
pushf
xor
push
hlt
mov
rcll
int
xor
mov
xchg
and
mov
sbb
jae
add
mov
fsubrp
pop
sub
dec
inc
cmc
pop
cmp
pop
shlb
mov
lea
es
jp
mov
std
aam
stos
ret
mov
mov
jne
inc
pop
xchg
jecxz
add
jno
mov
lods
inc
cmpsl
cmp
insb
inc
jo
mov
enter
push
cmp
jnp
sub
jo
xor
xor
shll
jge
push
push
ror
add
and
insb
pop
repnz
push
fistl
notb
mov
les
gs
lahf
adc
add
adc
ljmp
dec
pushf
push
sbb
xor
cwtl
and
inc
in
xorl
shrl
mov
aas
cwtl
loope
dec
lahf
repz
idivb
or
scas
mov
xorb
and
lret
stos
mov
aad
sbbl
jmp
mov
inc
hlt
dec
fistpll
repz
mov
cmp
mov
sbb
lret
gs
push
int3
inc
lds
xlat
rorb
sub
ror
mov
outsl
mov
mov
fcoms
lods
add
imull
lods
daa
ja
and
cmpsb
mov
pop
mov
mov
imul
imul
movsl
clc
xchg
outsb
fs
mov
mov
cmp
xor
popf
ljmp
jge
jmp
inc
pop
scas
dec
loope
lcall
out
mov
cmp
push
shr
ds
xchg
lods
loop
aaa
sbb
cmc
push
sub
call
loope
mov
jns
in
sbb
inc
mov
mov
fists
xor
fs
les
push
xchg
mov
xor
jmp
pushf
sbb
mov
mull
popa
adcl
addb
mov
pop
rclb
pop
out
xchg
movsl
cmp
or
imul
fnstenv
mov
cmpsb
lock
xchg
aad
nop
xor
cwtl
or
lcall
stc
and
mov
aaa
lock
dec
push
xor
lods
add
pop
xor
pop
ret
repz
sbb
inc
imull
sub
out
sub
nop
orb
stos
adc
test
mov
dec
pop
stos
inc
movsl
daa
xor
sub
push
enter
and
pushf
mul
pop
repnz
jae
mov
out
enter
loop
inc
xchg
jecxz
fisttps
cwtl
jecxz
out
cld
xchg
cltd
jmp
mov
jp
ss
repnz
cmp
daa
ret
loope
inc
lcall
adc
out
movsl
add
add
lds
fwait
inc
loop
inc
fldenv
pop
rcrl
cltd
adc
cmp
stc
or
shll
out
out
or
clc
pop
int3
xchg
pop
imul
sarb
fcompl
fdivl
mov
aam
mov
rcll
daa
lcall
inc
pop
or
pop
in
ja
sub
push
sbb
adc
cltd
cmpsl
jl
jg
cld
jns
jmp
mov
or
mov
mov
jp
and
cmpsb
add
mov
pop
fbstp
inc
push
out
popf
iret
push
and
stos
fisubrl
sub
pushf
jg
fmuls
inc
or
ljmp
into
lods
clc
sbb
mov
mov
fnsave
jp
aas
and
call
xor
in
dec
cmpsb
xor
inc
push
nop
sub
jecxz
icebp
loop
sbb
movsb
dec
inc
dec
dec
lds
pop
insl
loope
push
xor
dec
xchg
sub
rcr
push
add
cmpsb
mov
or
pop
ljmp
pushf
cmp
mov
lret
cmp
xchg
enter
stos
fprem
push
shll
insl
cld
lea
pop
mov
lea
or
imul
pushf
repnz
push
pop
mov
push
loopne
mov
pop
xor
bound
mov
int
sub
push
jno
movsb
stos
sbb
push
pop
es
mov
nop
pop
bound
ds
or
dec
mov
mov
jae
sub
and
or
fidivrs
push
popa
jmp
pop
xor
add
push
or
stc
jp
addr16
mov
movsl
popa
pop
xchg
ljmp
jne
sub
clc
add
cmp
aam
sub
inc
sahf
xor
inc
pop
mov
xor
in
and
andl
or
mov
push
scas
rcll
mov
mov
mov
lds
repz
pop
scas
jp,pt
jo
in
das
mov
pop
lods
inc
add
inc
sub
pop
call
sbb
cmp
pushf
in
cmp
pop
adc
mov
out
loop
xchg
mov
dec
sub
jg
adc
pushf
adc
repz
pop
cwtl
outsl
jg
ljmp
pop
mov
push
scas
cmp
pusha
ds
cltd
out
mov
test
pop
not
imul
inc
and
adc
and
push
cli
fs
mov
fisttpl
push
lock
es
mov
mov
in
jg
lcall
sbb
pushf
jecxz
sbb
jns
and
add
inc
aaa
jg
lock
pop
and
nop
mov
mov
out
jmp
push
outsl
jmp
lock
push
repz
cmpsb
cmc
pop
dec
dec
xlat
inc
mov
jo
mulb
mov
mov
sub
lock
into
mov
popa
jg
mov
fcoml
cmpsl
stc
sub
inc
fcoml
pop
jmp
in
test
cld
cmc
push
cmpsl
jmp
movb
movsl
shrb
inc
out
sub
inc
fcomps
jl
mov
cmp
or
in
repnz
sub
add
leave
push
push
pop
inc
testl
pop
lret
pop
inc
idivl
data16
inc
mov
stos
mov
xchg
aam
mov
test
fisubrl
push
xor
das
jbe
mov
lcall
daa
rcll
mov
and
dec
shll
mov
mov
add
cld
data16
mov
cs
ljmp
adcl
adc
arpl
sbbb
sarl
js
mov
pop
fwait
or
int3
shrb
add
rorb
xchg
cwtl
mov
lret
pushf
xchg
pop
test
xchg
sub
pusha
pushf
lret
or
call
jns
and
lock
inc
loop
outsl
or
insb
popf
cvtdq2ps
pop
cli
mov
lock
rcrl
mov
pop
dec
jno
nop
mov
cmp
ja
cltd
or
mov
addb
cltd
pop
lret
add
add
pop
popl
push
subb
mov
dec
repz
xor
jnp
in
aaa
or
mov
mov
in
not
ss
cmpsl
push
cmp
in
adc
dec
mov
iret
aaa
mov
fcoms
fidivl
scas
lods
iret
sub
or
call
pop
into
add
add
or
ja
xchg
sub
enter
pop
xchg
stos
mov
cli
es
in
inc
rcll
adcl
fnstsw
enter
cld
fsts
jb
xchg
xchg
cmp
test
stc
or
aas
fs
sub
push
sub
lret
iret
popl
push
cmp
ss
imul
jns
mov
and
mov
repnz
mov
aad
mov
fcoms
ja
pop
sahf
sbb
fldenv
iret
push
push
je
mov
mov
jb
stos
daa
mov
call
cld
outsl
sbb
testl
je
lea
add
cmpsb
scas
jbe
lea
stos
xor
popf
clc
mov
xorl
push
inc
and
pushf
cli
fs
mov
adc
sbb
xor
cmp
shlb
bound
or
clc
or
sub
push
fisubs
pop
push
fisubrl
jp
xorb
push
or
inc
in
sbb
insl
add
add
movsl
mov
mov
sbb
mov
mov
daa
loop
ds
or
test
test
pop
adc
icebp
pop
mov
push
roll
dec
lret
and
jb
or
pop
or
sub
neg
outsb
icebp
test
jnp
xchg
jb
dec
or
and
mov
cmp
into
cmpl
popf
add
adc
sbb
in
lods
cmp
dec
mov
inc
mov
stc
aam
scas
cmp
push
bnd
sub
test
jns
adc
int3
aam
cs
adc
sub
and
pop
pop
ja
dec
xorb
push
rclb
mov
lods
ret
jnp
loopne
jg
mov
jno
ffreep
ficoms
fwait
add
andb
inc
pop
jg
shrl
adc
nop
push
fadds
mov
sub
or
xchg
push
pop
pop
sti
xchg
sbb
inc
lods
mov
and
dec
jns
mov
push
sub
mov
cs
cmp
mov
inc
xor
jecxz
inc
mov
mov
int3
hlt
call
xchg
sbb
or
jge
mov
cmc
mov
push
imul
sub
les
jecxz
and
jno
xchg
imul
loop
xorl
ja
lds
addr16
mov
in
mov
push
jge
shrb
push
mov
data16
xchg
inc
cmovno
push
dec
mov
and
mov
sti
jmp
cmp
add
insl
popf
cmpb
out
mov
cmp
pop
sub
scas
sbb
call
mov
ds
fcmovb
popa
xor
in
add
call
and
jecxz
and
xor
addb
pop
sahf
fdivs
ljmp
repnz
cmpsl
ds
ljmp
fisttps
mov
ficoml
loope
movsl
cwtl
xor
mov
mov
sarl
int3
outsl
mov
fdivrs
mov
outsb
data16
lahf
mov
cs
fs
push
inc
ds
dec
call
jl
xor
cmp
stc
das
or
cmp
dec
fstl
lret
bound
popf
loopne
xchg
int3
jmp
dec
out
sub
mov
sub
xor
fnstenv
cmp
sub
inc
in
mov
arpl
xchg
shrb
xor
scas
mov
adc
loopne
adc
mov
lret
sti
jo
subb
sub
cmpsl
pop
mov
mov
fldt
xor
enter
xor
lret
add
dec
push
leave
mov
test
subl
fldt
ja
add
fidivrs
lcall
ds
int
or
jmp
jo
aaa
lock
pop
cmc
cli
test
mov
or
les
sbb
push
jg
bound
aas
push
lret
xchg
test
fistl
test
dec
xor
es
push
movsb
ret
int
cmpsl
pop
lock
dec
mov
and
cld
adc
sbb
or
cmp
outsl
xchg
leave
movsb
pop
sbb
arpl
jmp
pop
loop
xlat
imul
add
nop
mov
pop
mov
mov
fnstsw
mov
jle
or
ret
sub
adc
jmp
insb
mov
shl
adc
mov
jnp
and
repnz
aam
sbbb
and
in
les
pop
inc
xchg
sub
mov
or
pop
aad
mov
insb
movsb
inc
clc
adc
mov
stc
inc
pop
divb
icebp
sbb
rclb
add
mov
xchg
in
adc
adc
ss
sbb
add
mov
cmp
inc
mov
mov
ror
xlat
mov
icebp
adc
mov
mov
fwait
into
lahf
fcoms
push
jbe
test
iret
data16
mov
aaa
test
lds
int
sub
pop
sbb
xchg
sub
adc
leave
add
push
test
shrb
sub
xchg
scas
cmpsl
dec
loop
inc
cmp
mov
imul
inc
jecxz
inc
sub
jge
jp
mov
jp
dec
in
cmp
dec
or
dec
shrl
inc
pusha
mov
dec
out
jns
jg
xor
or
stc
mov
cmp
cld
push
or
jbe
dec
addr16
incl
and
xchg
jns
or
jb
mov
fdivs
push
int
push
cmp
dec
out
ret
in
jecxz
cmp
imul
sub
pop
mov
or
push
hlt
mov
jnp
ds
adc
add
or
js
inc
inc
dec
xor
stos
psubusw
xchg
loop
pop
cli
in
sbb
fucom
sbb
sub
mov
sub
mov
pop
fdivrp
inc
mov
sbb
pop
loop
out
out
aam
cmp
cltd
push
mov
pop
mov
xlat
bound
push
cwtl
or
inc
mov
imul
mov
mov
insl
sub
mov
mov
fsubr
and
and
lret
sarl
pop
enter
jg
lock
in
lret
into
ficoms
gs
sti
inc
sub
bound
push
pop
inc
pop
push
xor
and
mov
fistl
shlb
icebp
addb
jmp
out
paddd
and
mov
dec
push
mov
jb
loop
add
mov
dec
mov
jg
int
mov
int
xchg
fisubrs
movsl
test
cmp
outsb
lods
sbbb
dec
dec
cmp
imul
cmp
das
arpl
jle
xlat
pop
mov
dec
stc
jecxz
movaps
sbb
jo
out
jecxz
push
jecxz
or
dec
inc
arpl
out
aam
andl
jmp
push
inc
sub
xor
push
xor
test
inc
cmpsl
nop
mov
adc
aaa
bound
cmpsl
enter
outsl
pop
cmc
ss
cmp
shrl
xor
aad
cmp
mov
enter
mov
ja
addr16
aaa
cmpsb
xchg
sub
add
js
lcall
jle
and
repz
pop
jne
adcb
adc
inc
or
fadds
mov
and
dec
mov
cmp
in
xor
pop
lret
push
mov
imul
push
push
jmp
das
sti
mov
xor
lret
pop
ljmp
out
and
loope
push
cmpsb
sbb
xor
mov
mov
mov
scas
ds
jns
rol
cmpsl
mov
nop
imul
mov
add
in
shlb
mov
push
jbe
cmpsb
mov
xchg
sub
or
cs
jmp
insb
sbb
cs
fsts
and
sub
in
mov
push
fldl
adc
jmp
xchg
movsb
icebp
dec
pop
mov
out
or
adcl
gs
js
test
cmpsb
lock
dec
xchg
pop
imul
int
pop
xchg
adc
mov
lahf
xchg
mov
data16
mov
aad
push
out
loopne
and
dec
loopne
cmp
cmpsb
test
in
hlt
lahf
add
subl
xchg
dec
aam
aas
shll
ja
sarb
pop
je
lahf
mov
js
enter
and
add
cmp
outsb
stc
lret
push
and
cld
mov
jmp
int3
shlb
lret
fwait
push
xchg
mov
jbe
sbb
mov
mov
lods
lea
js
xchg
loopne
sbb
pop
stos
hlt
jne
loopne
inc
test
in
push
inc
push
fcoml
lods
inc
add
jmp
xchg
aad
rol
jecxz
add
mov
pop
ret
mov
fnsave
jo
dec
in
jbe
mov
sub
add
mov
sub
xchg
adc
pushf
sbb
inc
lea
xor
or
jbe
fidivs
stos
scas
dec
adc
inc
lods
lret
inc
sbb
xchg
pushf
sbb
mov
lcall
dec
cmp
pop
fs
jmp
clc
add
imul
mov
cmp
sarl
call
pusha
mov
xchg
push
mov
dec
out
fisubrs
push
pop
scas
add
movsl
xor
cmp
mov
xchg
sub
fisubrl
pop
push
mov
mov
sbb
aas
mov
jecxz
sub
inc
or
imul
cmp
cmp
cli
daa
popw
cmc
mulb
dec
sbb
mov
loopne
pop
dec
pop
repnz
cmpsl
outsb
imul
inc
das
imull
in
les
shll
dec
aas
mov
mov
and
mov
std
imul
xchg
pop
mov
xor
mov
shr
fsub
and
jl
push
mov
cmc
int
jmp
push
inc
xchg
dec
loop
fstpl
pusha
aad
imul
aad
inc
arpl
cmpsb
and
sbb
scas
xor
and
sub
inc
pop
fwait
and
in
outsb
sbbl
mov
stos
jne
cmp
test
in
jg
testl
or
and
fstps
stos
or
bound
sbb
lds
imul
ljmp
insl
loope
cmpsl
mov
fs
xchg
add
xchg
inc
mov
int3
jge
or
in
adcl
push
jl
cmp
hlt
adc
rorl
sbb
cmpsl
or
stos
xor
fcmove
jl
lock
push
mov
mov
xchg
mov
add
inc
mov
out
mov
les
inc
stos
and
jg
xor
aad
mov
ljmp
mov
push
pop
mov
leave
pop
jae
dec
sbb
hlt
call
push
je
out
add
add
pusha
ss
jmp
pop
lods
ss
xlat
jg
adc
mov
inc
push
in
dec
cmp
mov
mov
dec
sbb
dec
repz
stc
jns,pn
clc
cli
stc
adc
sub
mov
jbe
sbb
jo
adc
lds
movb
mull
in
jns
and
dec
cmpsl
mov
fbld
imul
push
dec
outsb
dec
jecxz
cmpsb
es
mov
lock
test
sub
cmp
add
lcall
inc
push
mov
jg
push
jp
leave
inc
add
sbbb
cmp
pusha
pop
dec
repz
xor
dec
test
cmp
or
sbb
dec
xchg
imul
and
push
sbb
push
fsubrs
dec
daa
int3
jg
loopne
mov
mov
leave
pop
mov
call
loope
jo
jb
leave
cmpsl
test
loopne
cltd
dec
rol
je
add
nop
popf
cmp
jg
lahf
incb
pop
jae
fldl
cltd
push
add
xchg
out
xor
mov
push
mov
sbb
pop
or
das
notl
jnp
or
jl
lods
dec
movsb
inc
andb
push
push
mov
das
push
scas
sbbl
fbstp
add
xchg
xchg
imul
shl
push
or
adc
pop
cwtl
pop
out
xchg
pop
pop
pop
outsb
xchg
std
add
pusha
addb
fnstenv
push
in
movsb
in
stc
adc
xor
mov
std
cmp
dec
adc
push
xor
sub
adc
out
push
cmp
push
jl
mov
ja
push
pop
aaa
orb
mov
int
mov
mov
cld
mov
ret
fcomps
gs
jecxz,pt
arpl
adc
test
inc
jge
mov
inc
inc
or
cltd
adc
xchg
xchg
adc
inc
push
pop
add
add
imul
cli
lock
dec
out
xor
pop
ljmp
ljmp
push
mov
push
call
rcll
push
mov
hlt
xchg
cs
dec
in
in
mov
xchg
popf
subb
stc
dec
mov
lret
lock
sub
dec
ret
data16
or
push
or
leave
add
push
cmpsb
cmpsl
pop
aaa
mov
fs
imul
xor
loope
jae
push
sub
xchg
sub
mov
or
rcl
cltd
cltd
pop
xchg
inc
dec
mov
adc
cltd
in
std
xchg
pop
jae
pusha
divb
sbb
push
jb
push
mov
sbb
xchg
add
loope
xor
mov
orl
lods
xchg
sub
bound
add
test
push
cltd
cmpsl
in
cmp
lds
adc
leave
mov
lahf
subl
push
jge
imul
dec
lock
gs
jmp
rclb
lret
mov
cmpsb
in
fxsave
push
add
das
lds
fimull
out
mov
inc
cmp
shrb
push
push
aam
xchg
scas
sub
pushf
scas
scas
les
stos
adc
pushl
stos
sub
sub
xchg
lods
jbe
imul
push
mov
mov
divb
mov
in
lret
es
sub
pusha
int
pop
sar
test
mov
cmp
xchg
mov
scas
or
dec
and
addl
push
negl
std
mov
mov
adc
pop
ljmp
jecxz
gs
sbb
inc
je
shlb
pop
pusha
stc
xchg
in
xchg
call
call
and
imul
sti
out
lods
mov
dec
sub
adc
iret
inc
mov
adc
enter
adc
pushf
test
pop
and
leave
shlb
and
fisttps
pushf
imul
insb
cmp
sbb
inc
pusha
aad
shlb
repz
or
mov
icebp
xchg
inc
pop
pmulhw
or
sbb
iret
bound
xchg
adc
lock
addr16
lock
roll
lret
cld
or
test
fidivl
xchg
andb
mov
jo
mov
orb
cmp
aas
cmpsl
adc
ljmp
dec
dec
push
xor
xor
ljmp
jb
and
add
out
bound
notl
jno
popf
or
mov
mov
or
rcrb
xchg
xor
loope
mov
dec
sbb
sub
push
iret
shlb
sahf
sub
mov
jne
jl
les
mov
sub
sub
lods
cld
stos
add
iret
std
aam
sbb
test
movsl
cmc
repnz
xor
lods
xchg
push
mov
mov
sbb
sbb
and
inc
cltd
test
fwait
pop
repnz
or
loope
notb
mov
in
std
inc
or
mov
fldenv
inc
push
js
and
xchg
mov
fwait
lock
jae
xchg
loope
dec
imul
shl
mov
sbb
fmulp
cmp
stos
out
sub
cs
xlat
jl
mov
mov
in
push
ljmp
mov
pop
incb
das
jae
or
lock
and
mov
cmp
inc
push
sbbl
sbbb
subb
add
mov
lea
ds
cmp
test
or
cwtl
in
cltd
hlt
scas
add
xchg
mov
popf
cmp
lahf
xorb
push
lods
clc
fsubl
popa
push
into
cmpsl
out
bound
mov
mov
imul
scas
or
ja
sti
adc
lds
inc
fdivs
sub
push
cltd
mov
mov
jnp
pusha
inc
pop
outsl
jns
adc
icebp
mov
ja
fbstp
stos
jne
fidivrl
push
imul
cmp
add
ss
in
adc
jge
ja
insb
push
dec
add
xor
push
mov
jae
adc
dec
cld
push
inc
mov
push
pop
cltd
ljmp
add
mov
addr16
sbb
nop
test
jl
cmp
aas
mov
push
ret
data16
mov
cmpb
mov
sbb
dec
xchg
cmp
mov
or
mov
add
incb
std
xor
mov
push
sbb
lods
and
xchg
ret
insl
add
inc
in
push
enter
jne
popa
mov
cld
repnz
jmp
sbb
jecxz
and
scas
push
mov
mov
xchg
mov
sub
aas
push
pop
push
sub
inc
xchg
in
sbb
test
and
mov
shlb
out
and
xor
pop
jo
fisubrl
mov
mov
adc
and
rorb
add
stos
aas
outsb
cltd
mov
and
dec
xor
std
pop
mov
or
cmpb
stc
and
dec
push
sbb
sti
xor
xor
stc
mov
cmp
or
imul
fisubrl
xor
nop
daa
aam
cli
pushf
cmc
scas
inc
jecxz
mov
sbb
cmp
lods
test
dec
or
cmp
adc
xor
add
ljmp
sub
mov
mov
je
sbb
fs
mov
fwait
insl
add
aaa
gs
mov
cs
and
sahf
fld
pusha
inc
sub
pushf
adc
cli
push
clc
ss
pop
sbb
mov
ret
mov
mov
mov
lods
pop
mov
iret
xchg
js,pn
adc
inc
dec
cs
bound
pop
mov
repnz
inc
xor
fiaddl
mov
test
lahf
call
sbb
cmp
jno
push
push
pop
movsb
rorb
or
adc
data16
mov
fbld
lea
adc
inc
scas
sahf
and
filds
lods
lcall
cmp
jl
repnz
jle
sub
adc
xchg
cmp
daa
or
fcomi
sbb
aas
jle
lock
enter
inc
out
lret
test
cmp
cmc
call
bound
loope
push
lds
sbbb
xchg
ljmp
jno
lds
adc
loope
in
test
aas
add
in
xor
xor
cmp
leave
addb
pop
or
push
mov
call
dec
inc
lods
cmpb
mov
jg
and
nop
fisttpll
xorl
stc
jb
xor
fs
add
insb
sub
cmp
data16
arpl
mov
arpl
jmp
addl
xchg
add
sbb
dec
xchg
push
iret
scas
jo
sub
or
mov
add
lods
cmp
xor
pop
mov
out
movsb
sub
movb
jmp
jo
icebp
cmp
jbe
loopne
xchg
out
jae
loopne
xor
lret
arpl
clc
and
pushf
stc
xchg
ss
push
clc
inc
xorb
sti
or
mov
mov
imul
cmpsl
push
ret
aas
aad
icebp
sub
or
lcall
mov
inc
fisttpl
aam
adc
mov
xor
push
jae
fidivrl
adc
je
pop
mov
jp
push
and
and
in
lods
mov
and
pop
sub
or
lret
lods
subl
pop
rcl
clc
aaa
mov
sbb
pop
clc
sub
lods
leave
xor
add
jl
jbe
cmp
push
adcb
arpl
mov
inc
sub
cmc
js
pop
lods
add
mov
pop
push
in
sbb
jno
jle
int3
sub
pop
cmpb
mov
outsb
sbb
lcall
or
movsl
cmp
xchg
nop
add
jecxz
add
js
jle
or
stos
cmpsb
fs
enter
cmp
int
cltd
dec
movsl
pop
mov
jae
or
out
ds
rcll
clc
not
dec
cmp
out
mov
fs
ficoms
mov
cli
repnz
ret
xchg
sub
and
xor
xchg
inc
push
loopne
mov
push
popf
jl
aad
jecxz
push
add
lret
cld
dec
cmp
shlb
lea
loope
mov
sub
push
dec
aaa
loope
dec
inc
sahf
add
inc
inc
push
jecxz
outsb
pop
or
jg
repnz
cmpsl
movsb
mov
pop
mov
jecxz
repnz
cmpsl
jle
out
nop
faddl
lahf
ljmp
dec
popf
stos
jmp
fsub
cmp
out
cmp
cwtl
ret
fistps
adc
mov
nop
leave
push
gs
arpl
mov
xchg
out
aas
addb
cmp
repnz
pop
jle
into
jp
shll
lock
and
sti
push
mov
mov
sbb
inc
nop
add
cli
inc
popf
dec
add
xor
lret
adc
sbb
jle
dec
jg
jp
loop
lods
mov
mov
sub
lahf
test
adcl
push
xor
xor
cwtl
ljmp
fnstsw
fnstcw
xlat
xchg
leave
fnstenv
sbb
xchg
and
test
aas
adcb
out
arpl
je
orb
and
inc
push
push
es
test
adc
imul
lds
in
rol
or
mov
je
bound
lds
lods
les
lret
into
mov
inc
icebp
mov
adcb
cmp
or
in
xorb
stc
adc
jge
adc
xchg
sahf
jle
push
loop
fcoms
ja
mov
xlat
popa
shlb
mov
or
sbbb
aas
cmp
dec
movsl
pop
lcall
sahf
stos
lock
gs
cmc
insl
sub
xor
lea
inc
lods
and
mov
int
fisubl
test
pop
in
int
fldl
insb
fistpll
push
in
dec
pop
ljmp
jo
push
insb
imull
mov
add
insl
out
sti
or
mov
mov
hlt
or
sub
ljmp
jo
mov
sbb
mov
out
cli
or
test
pop
movl
lods
push
inc
das
cld
lret
pop
push
sbb
sbb
adc
data16
enter
push
popf
dec
fstpl
mov
arpl
std
fcoml
sub
into
and
leave
stc
sub
movsl
das
in
das
dec
ds
mov
push
dec
pop
rcrl
lea
shll
lds
push
jp
add
sarl
inc
mov
stos
push
sbb
xchg
lds
pushl
jo
add
mov
cmp
inc
mov
cwtl
int
imul
xchg
fsubr
and
jno
das
sub
out
push
lea
xchg
test
aas
and
jb
xor
inc
out
std
sbb
pop
xor
cld
rcr
or
hlt
mov
bound
mov
daa
jp
or
cmp
std
xor
popf
push
push
cmpsl
xchg
fsubrp
lahf
jns
ljmp
xchg
aas
popa
xor
in
pusha
out
aad
or
add
daa
sub
test
scas
inc
pop
jp
sahf
cmp
jecxz
arpl
jnp
mov
popf
sbb
ss
ret
icebp
push
test
shlb
sub
push
mov
ds
je
int
cmpsl
mov
fsub
sahf
mov
cmp
mov
cwtl
das
jge
outsb
fsubrl
fbstp
notl
std
mov
push
imul
out
push
aam
testl
rcll
aam
mov
jge
repz
stos
mov
rcl
jne
cmpsb
cmpsb
mov
stos
ljmp
test
daa
pop
icebp
push
mov
cmp
jecxz
int
mov
mov
aam
popf
and
pop
pop
add
jo
cmp
stc
pop
add
leave
mov
js
ljmp
jae
insl
mov
cmp
adc
aaa
inc
adc
js
addl
jle
push
hlt
mov
mov
orb
divl
push
dec
dec
in
dec
mov
popf
lcall
mov
rclb
mov
xchg
in
xor
mov
xlat
push
inc
pop
lea
fstp
je
adc
addr16
xor
xor
inc
or
outsl
pop
ficompl
sbb
push
dec
dec
test
imul
xor
sbb
sbb
cmpl
dec
scas
out
xchg
subl
pop
mov
dec
stc
xor
clc
pop
scas
mov
dec
jno
int
das
mov
insl
mov
leave
push
add
std
nop
adc
ljmp
flds
mov
add
add
push
or
mov
sbb
pop
repz
nop
shrl
or
xchg
mov
daa
cli
rcl
sti
fwait
mov
mov
adc
mov
inc
or
mov
popf
push
mov
adc
adc
mov
addr16
imul
insl
xorb
sub
out
mov
adc
mulb
lret
mov
clc
and
push
mov
xchg
pop
mov
fxch
xchg
adc
outsl
mov
mov
and
sti
xchg
jae
mov
and
add
out
cmp
stos
aam
push
sti
xlat
lock
stc
out
iret
push
jo
leave
notl
xor
fstps
pop
aad
mov
hlt
movsl
clc
jae
mov
repz
add
adcb
xor
out
popf
sub
dec
dec
cld
mov
aas
or
jmp
and
divl
sub
inc
lock
test
jecxz
pusha
push
push
adc
fs
xchg
mov
std
ret
rcr
pusha
mov
out
stos
jmp
shll
push
incb
sbb
test
push
ja
inc
pop
push
cmpsl
or
cli
loope
sub
add
int3
test
rcrb
ljmp
jno
jp
adc
xchg
or
pushf
das
fnstcw
in
and
sbb
shlb
clc
pop
scas
and
movsl
hlt
inc
fwait
scas
in
xchg
out
mov
dec
mov
jb
xchg
cmp
xchg
fwait
cmp
imul
addr16
sarl
insl
mov
movsl
cltd
lods
inc
or
xchg
icebp
popf
mov
daa
inc
pop
rcll
iret
xlat
mov
fs
rclb
jns
jo
cmc
and
in
mov
fcmovnb
or
xchg
push
jp
jbe
push
pushf
xchg
orb
sub
les
jge
loop
das
insl
sbb
pop
mov
out
pushf
ljmp
sarl
fimull
filds
insb
pop
arpl
dec
mov
cmc
cmp
jl
imul
mov
bound
cmp
jp
loopne
push
sub
test
jmp
jbe
in
mov
sbb
jae
jle
shrb
sarl
and
movsb
cmp
push
fidivrl
fisubl
insb
mov
sbb
out
inc
pop
aas
sbb
lods
mov
outsl
cmp
insb
push
cmpsb
lahf
inc
lret
loop
js
iret
test
dec
xchg
fcom
sahf
stos
sbb
sysret
jge
pop
adc
mov
cmp
sbb
jle
sarl
sub
push
pop
or
aad
cld
popf
push
ljmp
sbb
sti
fcoml
push
add
mov
mov
out
pop
push
mov
dec
dec
cmp
mov
mov
cmp
sbb
cltd
dec
pop
xor
mov
hlt
into
ret
xchg
dec
sbb
push
mov
cmp
shl
or
mov
rclb
xor
and
std
sarl
inc
xchg
xchg
push
cmc
out
negb
mov
push
lds
lods
pop
xor
jbe
adc
cmp
lea
cli
cmp
fildll
push
xor
xchg
pop
inc
cltd
jl
movsb
sbb
adc
and
mov
add
mov
fistl
pusha
out
mov
dec
loop
in
loopne
rcrl
add
int
sbb
push
in
cmp
jge
loop
call
icebp
das
in
pop
out
add
or
call
rcll
inc
fldcw
js
add
hlt
mov
rclb
pushf
movsl
lds
movsb
dec
incl
cmp
adc
fs
aas
dec
fdivrs
in
rorb
inc
movsb
pop
mov
inc
imul
and
movsb
cmp
pop
adc
jl
cmp
shrl
push
cmp
xor
rol
pop
dec
jb
or
xorb
insl
sub
fcomps
addb
or
mov
or
lea
cmp
xor
mov
jg
add
fbld
mov
insb
push
or
fistpll
stos
jge
outsl
loop
or
mov
popl
mov
out
add
mov
fists
jnp
push
mov
adc
cmpb
mov
cltd
lret
add
cmc
mov
adc
mov
lcall
xor
imul
cltd
mov
aad
int3
cmp
cld
jle
jns
fsts
cs
and
lret
xchg
push
shrb
std
xor
cmpsl
jg
mov
test
sti
test
push
fbstp
pop
leave
je
or
outsb
ja
mov
lods
inc
xchg
adc
inc
insb
lret
addr16
dec
insl
cmp
in
in
mov
clc
fwait
cmp
add
inc
lods
int
nop
pop
push
mov
nop
lods
add
mov
scas
sub
and
push
sub
outsl
push
xor
mov
cmpsl
adc
jno
aas
out
cmp
lahf
xrstors
add
xor
ret
loopne
hlt
pushf
adc
nop
jb
fstl
or
mov
outsb
xor
push
insb
bound
jnp
mov
sbb
out
cmpsl
mov
mov
inc
fcmovu
jmp
fstl
push
xchg
and
push
bound
add
js
shrl
rcrb
iret
mov
test
cmpsb
mov
mov
jecxz
jbe
cltd
add
fcomps
add
mov
add
data16
aaa
push
adc
push
sbb
insl
xor
push
pop
loop
cmp
test
sbb
outsl
outsb
cld
push
push
outsb
sbb
add
push
ficompl
cmp
popf
or
test
xor
adc
push
imul
cltd
xor
pop
loopne
movsb
lret
or
das
fwait
pop
in
daa
inc
fildll
mov
int3
mov
roll
jne
and
adcb
pop
xor
jle
lret
adc
cmp
hlt
mov
push
mov
pop
or
cli
mov
rclb
push
dec
rcrl
mov
outsb
outsb
mov
inc
pop
pop
sbb
jbe
daa
sbb
pop
shl
pop
cmpsl
scas
dec
sub
fadds
or
sub
inc
push
das
fidivl
stc
test
sbb
aam
movsb
cmp
cmp
cmp
xchg
pop
sbb
call
ds
fwait
xor
jecxz
mov
jae
inc
repnz
or
adc
das
mov
push
mov
in
out
gs
mov
insl
and
xchg
mov
stos
xchg
popa
or
add
fwait
jbe
and
sub
std
adc
in
cmp
stos
push
popf
jo
aam
arpl
jl
jns
sbb
jge
fsts
addl
gs
adc
jl
mov
jl
test
mov
ds
test
push
sbb
mov
lock
fdivrs
mov
sbb
jl
xchg
lods
mov
xchg
jmp
add
fsubl
jno
and
push
popa
sbb
mov
divb
cwtl
rcrl
fisubs
clc
ljmp
sub
sahf
jnp
adc
mov
cmc
xor
cmp
sbb
rcrl
test
mov
pop
icebp
or
jecxz
in
js
loopne
xor
add
pop
scas
and
int3
arpl
xchg
outsl
daa
fwait
cwtl
in
test
fwait
jmp
mov
out
pusha
lds
cli
aad
ljmp
stos
repz
sbb
ds
jg
xchg
jb
cmovb
nop
out
insl
mov
ljmp
inc
xlat
in
test
pusha
fwait
push
movsb
or
push
popf
jecxz
into
gs
push
in
jmp
sbb
sub
pop
jmp
lahf
fcmovnb
sub
cmc
mov
mov
shll
aaa
into
xchg
dec
adc
stc
and
jno
hlt
int
idiv
push
aad
jne
movsb
mov
pop
jecxz
nop
lods
push
shrb
add
std
mov
mov
add
add
aam
lret
cmpsb
cmp
sbb
xchg
fisttpl
in
test
add
jnp
in
je
repnz
xchg
xchg
sub
jge
fstpl
sbb
enter
push
lret
out
lcall
jnp
loope
fdivs
call
pop
cmpxchg
aam
mov
cmpsb
in
inc
inc
pop
pop
idiv
int3
lret
pop
jle
xchg
mov
das
push
xor
in
movsb
mov
popa
or
pop
mov
cmpsl
fucomp
add
push
pop
ja
cbtw
xchg
mov
mov
xchg
and
adc
aas
int3
loope
std
mov
inc
adc
addl
lret
std
jp
cmp
mov
inc
xchg
pop
push
lcall
hlt
cmp
repnz
rclb
lret
testb
stos
jg,pn
shlb
mov
andb
or
popa
fiadds
and
push
mov
shrb
cmp
cmp
repnz
ds
adc
scas
sbb
pop
cmpsb
mov
mov
push
out
xchg
inc
or
iret
and
sbb
mov
push
or
pop
cmpsl
sub
flds
add
or
test
shrl
in
mov
loope
mov
stos
je
mov
or
sbb
add
outsl
xor
cwtl
mov
and
pop
das
cli
mov
bound
push
rolb
add
in
mov
add
jle
repz
and
test
mov
adcl
mov
nop
push
pop
cmc
inc
repz
adcb
cmp
adc
mov
jle
jnp
lods
push
in
jg
inc
icebp
insb
leave
xor
in
mov
bound
sbb
mov
mov
cli
xor
arpl
sbb
std
mov
and
ja
lods
xchg
pop
push
mov
mov
jns
aam
shll
sti
shrb
mov
iret
dec
cs
out
outsl
push
rcrb
pop
mov
inc
bound
cmp
xchg
add
cmpsb
std
mov
imul
scas
pop
out
popf
jg
push
inc
xor
pop
dec
dec
sbb
cmp
jge
push
in
xchg
mov
dec
ds
jg
idivl
xchg
movsl
xor
pushf
jmp
imul
sbb
or
pop
pop
mov
pop
mov
fnstenv
mov
outsb
mov
loopne
filds
push
into
push
sub
cmp
mov
adc
xchg
xor
or
jae
xchg
sub
es
push
lods
dec
loopne
lods
push
inc
sub
xor
rcrb
mov
lcall
inc
sub
or
loop
mov
dec
clc
mov
cmp
and
mov
cli
cmp
in
fwait
add
or
lahf
xchg
repz
xor
ret
fmulp
clc
mov
data16
xchg
xor
push
cmc
mov
dec
adc
data16
int
or
sub
mov
xor
rcrl
test
cmc
mov
mov
sub
mov
inc
idiv
xor
inc
push
cld
xchg
or
in
xor
sub
xorb
pushf
test
mov
iret
iret
scas
int
mov
adc
add
add
aam
fcomip
dec
int
fadds
mov
rclb
xchg
push
scas
pop
sub
push
fidivs
pop
push
cmpsl
cmp
xchg
dec
xor
pop
sub
pop
mov
fwait
jge
out
xchg
sahf
and
mov
fimull
push
mov
stc
push
xor
cmp
inc
aaa
shll
pop
ret
roll
aas
loop
jmp
out
xor
lock
cld
repz
clc
stc
sub
jns
sub
mov
cli
ficoml
push
stc
adc
adc
cmp
xchg
neg
cmp
movsb
insb
dec
data16
ja
jmp
outsl
sbb
inc
xlat
scas
xchg
or
pop
sub
jae
pop
mov
xor
sarl
inc
das
inc
dec
xor
add
cmp
scas
sub
sbb
sbb
xchg
jns
outsb
in
ljmp
push
cwtl
cmp
std
push
push
inc
push
enter
cmpsb
iret
in
sarb
cld
cmp
pop
add
pop
jne
hlt
addr16
sbb
xchg
sub
nop
mov
dec
sbb
sbbb
mov
lds
imul
cmc
mov
jmp
mov
mulb
inc
or
pop
fsubl
add
push
adc
mov
mov
mov
jo
adc
in
add
mov
adc
shrb
xchg
inc
cmc
data16
pop
imul
add
mov
pop
jecxz
xor
push
add
imul
inc
sbb
and
push
shll
fdivrl
gs
out
mov
mov
mov
push
mov
inc
outsb
xchg
push
pushf
jp
fs
pop
clc
push
inc
jmp
mov
push
repz
out
jb
stos
stc
ds
jg
jg
in
push
add
arpl
ds
and
mov
push
test
scas
mov
push
inc
hlt
mov
call
dec
loope
mov
aam
lcall
dec
push
out
loope
cmc
leave
aaa
jbe
lahf
test
rcrl
push
add
sub
lods
mov
lret
push
dec
lahf
add
add
cmp
jae
add
mov
pop
loop
test
and
stc
push
andb
imul
icebp
shlb
push
push
mov
mov
imul
imul
pop
add
dec
xchg
sub
addb
sub
pop
sub
pop
dec
cmp
stos
gs
lock
jmp
cmp
out
lods
lahf
test
rcl
inc
mov
cmc
dec
enter
pushf
mov
adc
test
pusha
test
scas
add
aam
dec
mov
lret
in
stos
jp
fbld
sbb
jo
cmp
add
fsubrp
fs
fisubrl
cs
repz
dec
jmp
out
outsl
rolb
push
xchg
xor
pop
fwait
mov
sbb
pop
mov
cwtl
push
test
push
movsb
jb
add
dec
mov
orb
inc
addr16
cmp
setle
push
shlb
pop
popf
jge
cmp
mov
rol
cmpsb
lret
pushf
jae
mov
fwait
stos
mov
cli
inc
jle
ljmp
push
mov
outsl
stos
cmc
mov
inc
adc
filds
pop
pop
negb
loop
pop
rorb
add
shr
xor
lret
pop
cmp
mov
dec
mov
sbb
push
add
xchg
dec
pop
and
aas
repz
leave
bound
adc
mov
mov
adc
je
push
jb
inc
jmp
fwait
add
rcl
pop
push
repz
add
inc
pushf
not
sbb
sbb
add
js
xchg
inc
mov
mov
push
bnd
std
sti
shrb
push
loope
mov
lahf
sub
test
loop
sub
jle
and
cli
or
shll
xchg
idivb
loop
or
mov
inc
mull
xchg
test
hlt
xchg
pop
std
ss
cmp
jo
mov
pop
add
mov
cmc
pop
cmp
push
aad
push
lds
pop
repz
outsl
ss
mov
push
xchg
inc
mov
lock
shll
cmpsb
rcrl
iret
fadd
rol
add
mov
fstpt
and
andb
cmp
lret
cmp
rcrb
cmp
in
mov
or
nop
js
cmpsl
aam
dec
inc
test
cmp
aas
xchg
stc
mov
sub
iret
and
test
xor
mov
das
aad
push
ljmp
mov
out
icebp
movsl
das
sbb
push
jae
or
or
int
call
and
mov
push
inc
outsb
fidivl
ljmp
lds
fbstp
rcrb
pop
pusha
mov
sbb
scas
dec
adc
fisubrl
or
fcompl
push
iret
add
pushf
icebp
repz
aam
leave
ss
rcrl
sub
fucom
imul
lahf
pusha
cmp
dec
loope
dec
adc
insb
pushf
ljmp
scas
jg
add
jno
and
cmc
je
sbb
inc
popa
fwait
and
pop
jbe
pop
in
clc
cmp
push
xorb
sbb
stos
cmp
sub
sbb
and
ss
nop
push
cmp
inc
fwait
repnz
cmp
les
outsb
jne
inc
out
ret
dec
mov
pop
push
insl
push
push
mov
cwtl
das
int
nop
dec
dec
out
mov
xchg
outsb
scas
adcb
add
xor
or
add
fnstcw
lret
xchg
cmp
pop
cmp
inc
and
cmc
es
rcl
push
incl
xchg
out
xor
xor
ds
xlat
mov
dec
mov
shrl
push
add
push
jg
pop
xor
pop
pusha
lret
pop
sbb
loopne
idivl
aaa
cmp
jl
out
int3
push
inc
pop
add
cli
mov
and
or
rol
lods
dec
in
cli
cmpsl
nop
xlat
aas
cmc
nop
das
scas
push
fdivr
pop
lods
sub
pop
imulb
daa
push
cmpsb
push
mov
adc
into
mov
outsb
stc
xchg
adc
add
bound
xchg
hlt
mov
pop
mov
insl
push
cmpsl
das
mov
mov
dec
std
nop
mov
fildll
adc
mov
cmp
fs
out
mov
arpl
xchg
sub
xor
push
ffree
inc
cmpsl
mul
and
push
xchg
or
mov
nop
and
cmp
shll
out
add
cmc
loop
pop
imul
inc
movsb
pop
test
xor
in
pop
mov
clc
adc
add
orb
adc
roll
or
jge
mov
test
inc
push
xchg
fucomp
shl
decb
cmp
xchg
popf
dec
call
jl
popf
popa
xor
pop
pop
pop
push
push
mov
pop
dec
jmp
jb
sahf
into
xor
xlat
sbb
pusha
mov
jg
cmp
and
or
addb
inc
insl
out
adc
xchg
cmpsb
popf
cmp
jg
enter
stos
pushl
mov
pop
sbb
or
xor
nop
in
stos
dec
or
loope
aam
mov
pop
out
mov
nop
push
cmp
pop
lods
lds
xchg
stos
in
bnd
into
push
lcall
jg
mov
insl
mov
out
cmpsl
hlt
mov
ds
ss
sub
mov
cmp
stc
enter
xchg
sbb
add
pushf
pop
in
jns
mov
in
adc
fcomp
add
test
lods
cmp
loopne
pop
mov
adc
sbbb
sbbl
lret
shrb
mov
dec
or
pop
into
aam
push
fwait
and
jne
and
fnstsw
outsl
loop
dec
push
mov
push
cmpsl
subb
lea
repnz
cltd
jnp
xchg
dec
pop
outsl
lret
jne
cmpsb
dec
pop
and
xchg
mov
xor
outsb
xchg
sahf
testl
les
pop
add
ss
pusha
fs
ljmp
inc
cmc
not
fistpll
mov
gs
mov
dec
push
sbb
mov
sbb
aaa
sub
adc
push
shlb
cmp
int
icebp
adc
adc
jbe
sub
clc
push
fildll
mov
outsl
sbb
xor
mov
mov
jmp
ret
sar
cmpsw
mov
andb
sti
add
jae
aas
dec
adc
rclb
or
jb
add
movsb
cmp
jmp
ret
sub
fistl
push
inc
jg
stos
lock
sub
js
lea
cli
popaw
arpl
jg
cmp
jo
dec
fwait
push
cmp
push
mov
jo
xchg
jmp
out
bound
push
or
movsl
and
stc
mov
int
mov
mov
xchg
or
rcl
popa
pop
mov
fisttps
inc
jno
movsb
xchg
cli
fs
xor
stc
sahf
jle
cmpsl
enter
lea
mov
jne
in
push
add
and
shrb
add
and
cmpsl
jb
push
lods
xchg
daa
filds
mov
rcrl
adc
or
push
mov
inc
loopne
lret
pushf
in
jae
test
int3
ret
pop
nop
mov
fmul
ror
add
push
stos
mov
sahf
lods
mov
mov
mov
cmp
sub
xchg
les
dec
mov
lcall
jecxz
add
popf
sbb
mov
or
movb
loopne
mov
dec
sahf
and
out
push
inc
movsb
or
cmp
cmpsb
jns
rclb
scas
dec
add
mov
or
out
bound
pushf
movsb
out
jne
ffree
scas
test
jbe
fs
enter
mov
fbld
movsb
adc
andb
pop
push
in
std
pop
je
into
lret
bound
sub
sahf
adc
adc
sbb
jne
push
dec
icebp
outsb
adc
adc
daa
dec
and
dec
daa
mov
or
jb
jg
pop
imul
jnp
icebp
pop
movsl
addb
xchg
push
mov
mov
mov
jbe
adcl
fidivrs
fldcw
out
xlat
popf
mov
jo
mov
xor
adc
fisubrs
inc
lret
or
imul
mov
add
hlt
outsb
decl
cltd
inc
stos
cmp
xchg
dec
push
rolb
xor
cwtl
jg
cmpsb
inc
add
dec
mov
push
hlt
mov
addl
push
call
aam
push
jno
lea
xchg
mov
ljmp
neg
cmp
paddsb
jne
mov
or
push
cmp
jmp
enter
push
sub
and
cmp
popa
cli
cmpsb
or
imul
cwtl
or
shrl
inc
out
jne
scas
pop
scas
mov
jne
enter
jecxz
adc
repnz
test
hlt
in
adc
mov
ja
push
sbb
inc
mov
and
movsb
cwtl
sbb
lds
xor
pop
xchg
or
pusha
jle
xor
sub
aas
pop
and
cmp
mov
int
call
mov
addr16
cmc
je
inc
std
inc
and
fs
adcl
icebp
inc
cwtl
mov
negb
and
add
repnz
stos
fdecstp
mov
stc
js,pt
mov
dec
inc
ljmp
fstps
sbbl
stos
jecxz
add
xchg
mov
xchg
loope
mov
push
mov
data16
out
xchg
add
lcall
lahf
adc
stc
inc
dec
and
insl
orb
fstpt
push
std
push
out
push
sbb
stc
loope
and
xchg
push
mov
sbb
xchg
adc
subb
nop
shlb
movsb
loopne
jmp
cmpsb
lock
dec
jbe
mov
add
std
insb
aam
rcrb
cmp
fidivs
push
xor
imul
movsl
loop
cwtl
xor
and
dec
fst
leave
or
daa
jg
test
inc
dec
pop
loopne
xor
push
sub
fimull
or
rclb
xchg
testb
jnp
shll
adc
push
push
scas
sarl
lcall
subb
daa
enter
push
xorl
hlt
mov
dec
pop
xchg
pop
imul
call
or
cmp
lret
fmuls
div
aas
cmpsl
push
cmp
jecxz
pusha
adc
jae
mov
mov
sbb
call
push
inc
xchg
icebp
mov
push
mov
mov
inc
stc
xchg
pop
cld
outsl
xor
mov
mov
sbbb
lods
call
sub
fadd
or
lods
popa
fmull
push
leave
test
jg
sub
fistpll
int3
insl
hlt
push
fstl
add
jnp
je
sbbb
lret
shll
popf
inc
inc
fldt
inc
clc
mov
int
xchg
call
leave
pusha
leave
add
enter
mov
mov
imul
scas
xor
addr16
rolb
clc
cli
imull
fisubrs
adc
inc
enter
mov
mov
ja
sahf
sbb
mov
aam
jge
mov
shr
ljmp
xor
fadd
in
nop
enter
imul
outsl
ds
cwtl
daa
push
out
mov
mov
mov
push
movsl
and
xchg
or
sub
jne
aaa
inc
pop
pop
dec
pop
push
jge
and
jmp
decl
jge
test
mov
mov
rcr
icebp
add
mov
fnstenv
or
js
aas
movsb
pop
clc
jle
xchg
ficompl
sbb
mov
add
cltd
rcl
test
mov
adc
int
in
cmpb
call
dec
pop
hlt
xchg
ficoml
adc
movsl
sbb
cmp
cs
dec
mov
jle
andb
out
mov
nop
cli
roll
cmp
adc
mov
pop
jmp
jns
jle
sbb
faddl
mov
pop
dec
es
fcmovnbe
dec
inc
xchg
cs
fs
adc
pop
test
push
inc
loope
add
adc
pop
mov
outsb
lret
mov
sti
roll
jmp
into
lret
xor
mov
cmpsb
insb
iret
and
mov
xor
lea
xor
shll
jl
stos
scas
push
shlb
cmpb
ss
test
and
xchg
imull
jbe
aas
mov
leave
fisttpl
lods
jl
push
mov
lea
xchg
movsl
mov
jp
dec
cmp
cmp
lea
mov
aaa
enter
and
xor
jns
rolb
jb
vcvtss2sd
adc
notb
rcrb
dec
lcall
rcl
mov
cld
imul
daa
mov
movsb
lods
ret
int
inc
sbb
push
or
outsl
in
push
out
dec
mov
fsubrl
mov
pop
mov
push
xor
popf
inc
sub
cmpsw
movsl
and
mov
mov
mov
push
push
mov
aam
inc
mov
loope
dec
or
mov
mov
mov
into
mov
fcompl
add
and
fistl
leave
cmp
pop
lods
addb
std
mov
adc
xchg
mov
aaa
jmp
rol
movsb
cmp
push
data16
push
movsl
orl
inc
cltd
jle
out
sub
pop
out
dec
push
stc
adc
jl
mov
setnp
cltd
in
lods
insb
scas
push
push
and
adc
mov
addr16
arpl
jno
and
in
fsubl
lods
jg
fstps
movsl
lea
pop
add
inc
popf
sahf
je
xor
adc
mov
mov
mov
movsb
fsubl
mov
mov
jle
into
or
ss
movsl
mov
into
xchg
push
xor
mov
adc
idivb
cmp
std
insb
jno
ret
aam
cmpsl
dec
notl
cmp
pop
mov
mov
in
mov
mov
movl
lds
sbb
or
adc
scas
les
jae
pop
adc
aas
lret
inc
jae
cmp
xchg
or
jmp
out
rcrl
lock
jl
mov
fadd
mov
jno
xchg
xchg
and
nop
imulb
mov
xacquire
ret
push
jnp
arpl
mov
push
fwait
push
inc
lahf
sbb
sbb
or
pop
dec
aad
mov
pop
lret
jb
int3
outsl
add
ja
push
cmp
pop
leave
pusha
nop
mov
push
pusha
lret
xor
in
jmp
mov
lret
jg
pop
stos
or
sub
adc
nop
scas
cmp
scas
dec
push
out
jnp
test
rcll
hlt
dec
scas
daa
lcall
adc
shr
stc
pop
add
jno
repz
push
stc
shl
daa
dec
icebp
mov
jecxz
and
fldt
pop
nop
pusha
cwtl
sbb
ds
movsb
in
pushf
push
ret
mov
sub
aad
xchg
enter
adc
les
aas
cmp
cmp
pop
shr
andb
adc
inc
dec
ret
les
mov
jmp
out
cli
mov
mov
dec
cld
adc
js
cmp
pop
inc
in
stos
iret
iret
lret
fdivl
sti
inc
mov
arpl
add
gs
loop
mov
stos
push
push
xchg
mov
cmp
cli
push
aas
test
lods
add
sarl
gs
out
xchg
jae
popa
in
inc
or
leave
mov
rorb
cmc
add
pop
sahf
imul
inc
rorl
jnp
mov
mov
cmc
push
cmp
icebp
sub
or
repz
popf
insl
int3
ljmp
in
inc
mov
or
or
in
push
push
and
sub
pop
jno
mov
jge
dec
js
popf
cmpb
mov
push
jmp
mov
sbb
dec
jl
leave
pop
fidivrs
addr16
ljmp
push
or
or
jno
js
or
mov
mov
std
push
imul
aad
idiv
dec
out
repnz
adc
das
cltd
cld
gs
mov
arpl
movsl
mov
jp,pn
push
leave
cwtl
addr16
inc
icebp
push
add
inc
cmp
pop
xchg
or
mov
and
adc
push
lret
insl
imul
in
sbb
cmp
lcall
dec
ja
js
daa
sub
lret
mov
xlat
sbb
into
sub
pop
adc
adcb
loopne
xor
push
adc
pop
stos
push
push
jle
mov
repnz
xchg
mov
mov
jae
outsb
xchg
fsts
lods
or
pop
jbe
aaa
push
insl
cmp
xchg
cmpb
call
test
sub
pop
adc
pop
or
cli
icebp
insb
scas
adc
adc
out
nop
jmp
cwtl
shll
push
pop
icebp
sti
or
scas
mov
jns
inc
xchg
or
dec
push
ret
sbb
mov
stos
mov
sbb
jbe
ffreep
popa
ret
movsb
icebp
xchg
xor
dec
popa
aas
stos
mov
movsl
in
and
sti
xchg
jo
pop
jbe
sbb
sub
std
xchg
decl
sbb
push
push
pop
jnp
inc
jecxz
lret
add
xlat
lods
and
add
enter
push
rol
mov
and
mov
mov
out
shl
loopne
cmp
in
inc
daa
shlb
cmp
repnz
and
in
test
negb
repnz
adc
adc
popf
xor
int
mov
inc
jl
ja
jo
or
pusha
jge
inc
pop
adc
mov
gs
sub
idivb
cmc
pop
xchg
sahf
jp
pop
jle
xchg
cmp
cld
push
jb
pusha
and
sarl
push
adc
out
push
mov
pushf
dec
mov
mov
outsl
arpl
mov
cmc
xor
mov
ret
hlt
sub
push
or
add
add
mov
decl
mov
test
shrb
mov
and
cmpsl
push
ja
xorb
xchg
insb
adc
jns
jg
mulps
stos
mov
jne
dec
test
inc
stos
jp
cmpsl
ret
mov
xor
clc
mov
in
sbb
jle
pop
popf
outsb
sbb
push
jl
and
add
push
ficoml
filds
and
lcall
cld
addb
test
pop
xor
fld
aas
test
or
mov
cmp
ja
inc
sub
rorb
jae
mov
orb
aam
and
aas
sub
cmp
pop
pop
cmp
jg
inc
push
inc
adc
test
setl
ja
jnp
pop
popf
mov
lret
jp
push
sbb
loope
push
sub
mov
mov
push
in
pushf
jmp
mov
xorb
adc
sub
in
cmp
arpl
mov
rcr
jmp
sbb
cmp
jne
cmp
pop
mov
test
daa
dec
mov
ret
scas
and
mov
mov
das
add
cmp
rol
movsb
pop
jne
xor
xchg
scas
fsubl
cmc
mov
jbe
and
aad
inc
xchg
popf
jle
scas
jne
mov
mov
jae
sbb
adc
mov
mov
insl
or
movsl
cltd
lods
mov
cmpsb
shlb
cmp
mov
jae
popa
mov
les
pop
es
pop
jle
and
pop
mov
inc
sti
add
push
mov
mov
mov
ret
mov
and
push
scas
inc
leave
push
dec
loopne
mov
inc
in
lods
std
or
test
ret
cmpsl
shrl
leave
leave
and
cs
fbld
xchg
outsb
mov
loope
mov
push
lcall
js
cltd
jo
insb
cltd
or
movb
int
lods
mov
in
aam
mov
adc
mov
es
scas
into
dec
loopne
scas
inc
xlat
test
sbb
je
jno
repz
cmp
mov
dec
shll
mov
in
mov
pop
push
mov
xor
jns
adc
lret
xchg
push
mov
mov
mov
cmc
or
sbb
icebp
inc
lods
sar
mov
dec
xlat
imul
out
and
outsb
fcomps
push
mov
xchg
mov
call
mov
push
pop
icebp
xchg
mov
push
add
in
xchg
fstpt
out
rol
cmp
sarb
jp
inc
shrb
xchg
xchg
fildll
out
or
ds
adc
xor
sub
cmpl
mov
push
fdiv
adc
jb
cs
adc
inc
in
ficoms
xchg
jnp
fld
sub
cli
cwtl
pop
adcl
lcall
inc
adc
mov
jnp
jns
cltd
mov
and
sbb
cmp
sbb
adc
aaa
xchg
fninit
push
cmp
sbb
decl
pushf
dec
inc
scas
dec
mov
lods
rorb
xchg
fnstenv
sub
sbb
inc
arpl
inc
and
in
lcall
sbb
jbe
negb
jmp
mov
sub
inc
out
xchg
lock
fs
dec
sbb
loope
jl
jno
push
jno
mov
cltd
lock
fnstenv
mov
dec
jne
and
fs
inc
adc
push
pop
das
ficomps
mov
mov
popa
lods
pusha
and
fwait
test
fsub
add
sahf
push
lea
xchg
cmp
out
mov
inc
and
cs
sarb
xchg
and
scas
call
or
or
pop
mov
aas
xor
inc
adc
cmp
dec
xchg
dec
pop
lcall
loop
ss
outsl
xchg
pop
xchg
data16
in
lods
mov
sub
and
jbe
mov
xchg
sub
jg
les
std
cmpsl
mov
xlat
jne
in
std
and
dec
xchg
xor
and
cltd
push
and
xor
hlt
or
dec
sub
jecxz
pop
mov
es
mov
push
push
sti
add
or
filds
xchg
pop
pop
and
pop
dec
cs
shrl
push
fidivs
out
subb
cli
scas
ret
sub
pop
adc
rcll
iret
jb
xor
xchg
icebp
inc
cmpsl
mov
push
pop
push
out
dec
sahf
mov
and
jge
sbb
dec
xchg
pop
adc
adc
movl
mov
jbe
pop
mov
jle
imul
cmpsb
sub
sbb
clc
cwtl
or
fldenv
out
rolb
xchg
xchg
lret
int3
fs
fsubrp
imul
push
xlat
lock
push
mov
ljmp
push
rorl
pop
sbb
rorb
push
negb
cmp
repnz
and
push
in
add
cld
mov
push
in
cltd
xchg
aaa
das
pop
ds
mov
movsl
test
nop
call
cmp
insb
jle
imul
lahf
repz
mov
incl
dec
rorl
mov
ret
mov
fsubrp
mov
mov
in
stc
xchg
iret
xchg
add
inc
inc
mov
mov
sbb
cmp
mov
icebp
mov
sti
in
pop
out
js
push
arpl
mov
dec
andl
insb
out
sqrtps
jmp
dec
xchg
sbb
xor
aaa
push
push
sti
pop
addr16
pop
test
popf
ja
scas
repnz
pop
mov
fistpll
push
shlb
icebp
rorb
aam
push
add
cmp
scas
es
stos
in
sarb
pop
in
aaa
lods
sub
add
ljmp
lods
push
pop
adc
ficompl
pop
nop
testb
xor
adcb
repz
xchg
push
mov
ss
into
mov
jo
es
pop
pop
sti
orb
lock
jg
ss
dec
pop
lods
rolb
sbb
enter
adc
enter
scas
les
sub
adc
lods
lcall
movsl
and
pop
or
jbe
mov
adc
shlb
mov
addr16
mov
hlt
xor
xlat
cld
sub
mov
out
into
mov
cmp
xchg
stos
mov
mov
jae
jbe
fldenv
sub
fistpl
dec
popa
jge
stos
inc
cmpsb
test
int3
aad
dec
loopne
cmp
addr16
icebp
in
test
xor
pop
les
jb
imul
sahf
ja
push
mov
fdivrl
mov
mov
lret
stc
jle
test
ljmp
inc
inc
jnp
and
fcmovb
ja
inc
test
lret
cmp
std
adc
mov
testl
sub
outsb
subl
shlb
push
mov
adc
leave
xchg
jmp
testl
jo
cmp
or
aad
jle
xor
lahf
adc
dec
fiadds
mov
push
into
xchg
pop
mov
seta
mov
jge
add
jb
push
push
add
mov
inc
mov
in
dec
jl
inc
sahf
std
cmp
push
ja
test
jmp
scas
xchg
xchg
in
rclb
add
cmp
xor
sub
push
into
pushf
pop
cltd
add
mov
mull
push
jge
mov
xor
out
loope
inc
pop
jae
jp
aas
lahf
sub
xchg
in
mov
out
cmp
mov
xor
sbb
and
mov
das
pop
stos
jmp
inc
xor
cmp
insb
add
mov
xchg
jb
and
or
call
lock
lret
scas
gs
push
call
stc
or
repnz
push
sbb
dec
xor
dec
mov
out
add
push
pop
adc
add
mov
ret
mov
lea
xchg
cmp
lahf
sub
pop
rclb
repnz
incl
into
push
notb
inc
int
cmp
xchg
mov
lret
sub
fldl
call
push
cmpsl
sbb
or
inc
or
icebp
mov
ljmp
ds
and
cmp
or
pop
sub
addr16
repnz
mov
cmp
sti
dec
jne
pop
addl
xorb
mov
mov
insb
sub
lock
roll
add
repnz
xlat
add
repz
add
pusha
mov
test
sub
addr16
dec
mov
aam
or
mov
jmp
cmp
flds
mov
sbb
lahf
out
dec
jp
cmp
add
jg
push
mov
notb
or
into
and
jb
mov
push
leave
inc
lods
outsl
daa
inc
ret
xchg
in
inc
rol
sub
and
pop
mov
or
jle
sub
jnp
push
rorb
lods
or
adc
mov
in
xchg
mov
cmpsl
dec
push
mov
je
aaa
jle
xchg
mov
xor
stc
inc
pop
cs
mov
xor
cli
adc
jl
roll
roll
aas
pop
push
repz
repnz
mov
push
iret
pop
fldt
push
and
xchg
call
loopne
and
int
popa
and
lret
mov
and
inc
lods
mov
jge
mov
mov
adc
cmp
ret
jg
sbb
shrl
inc
adc
pop
dec
arpl
test
inc
push
or
icebp
and
stos
mov
clc
stos
sti
outsl
fidivrs
push
fldt
pop
movsb
cmp
ja
mov
loopne
mov
fisttpll
inc
bound
insl
xchg
daa
test
das
or
xchg
das
int3
or
push
push
sbb
loope
xchg
scas
mulb
jle
mov
fldcw
addl
adc
or
fistps
adc
movsb
sub
jle
sub
movsb
cmp
mov
mov
xchg
push
push
pop
or
ja
jmp
xchg
insl
xor
popf
loope
das
adc
aas
push
mov
push
in
jns
jns
mov
pop
js
data16
repnz
xchg
jg
ds
push
dec
mov
lock
shrl
cmpsb
ror
pop
outsb
rcrl
inc
es
mov
imul
pop
mov
push
dec
mov
test
and
arpl
fs
lret
int3
or
in
inc
sbbl
add
ret
pop
insb
pop
pop
into
cmp
loop
pop
nop
into
jne
or
mov
mov
cmp
cmp
inc
cmp
adc
pushf
enter
scas
stos
mov
xchg
sbb
inc
xchg
push
or
aas
mov
adc
ss
xor
xchg
sahf
neg
cmpsb
scas
cld
into
xor
jnp
imul
mov
inc
xlat
jge
cmpsb
movb
pop
sti
insl
inc
or
cmpl
inc
cli
int3
arpl
repz
enter
push
pusha
mov
and
test
sbb
adc
mov
nop
ljmp
pop
popf
jb
iret
sub
jne
or
popf
xchg
xchg
cmp
cli
lock
shl
mov
xchg
mov
sub
ds
xchg
mov
dec
in
dec
aam
repz
fs
mov
mov
dec
adc
jbe
bound
dec
pop
sbb
outsb
push
out
xchg
pop
lea
add
in
mov
xor
fstpt
mov
in
xor
scas
jmp
xchg
fdivs
aad
ja
pop
and
leave
nop
bt
imull
dec
or
movsl
lods
movsb
ds
lret
imulb
xchg
add
inc
out
shl
and
sub
cmp
mov
sbb
dec
mov
dec
add
sub
loopne
xchg
jbe
call
lods
lahf
jl
lods
push
lds
jne
sub
sub
mov
pop
lea
adc
ds
inc
fcomps
ds
dec
or
fs
int
or
adc
inc
fs
xor
mov
ret
sub
sub
xor
js
daa
push
ljmp
jno
cld
xor
mov
in
xor
test
jno
ds
sbb
jecxz
sub
mov
popa
mov
jle
mov
lahf
xor
neg
mov
inc
inc
cmp
mov
cmp
add
hlt
sarl
and
push
inc
nop
push
loop
pop
cmp
sbbl
pop
push
sahf
mov
xchg
mov
sbb
shll
sub
test
mov
or
jl
aas
insl
push
popf
mov
lods
iret
inc
andl
jb
repnz
outsb
out
mov
incb
sarb
dec
push
mov
in
xor
dec
jno
hlt
fldlg2
xchg
mov
scas
adc
shrb
cmpsl
gs
stc
jg
push
negl
adc
jo
xor
scas
faddl
aad
decl
xchg
mov
mov
adc
and
repnz
cwtl
pop
shlb
add
nop
loope
jp
mov
aas
iret
fnsave
dec
fidivrl
sbb
in
add
push
pop
mov
mov
jmp
xchg
movsl
cmp
imull
cs
fbstp
jp
xchg
xchg
cld
jnp
mov
add
iret
xor
adc
daa
xchg
pop
lds
gs
xchg
sub
xor
rcll
mov
push
int
xchg
cmpb
stos
mov
mov
mov
fnstenv
leave
jg
mov
out
imul
sbb
cmp
sarl
filds
xlat
outsl
fistps
jb
es
mov
js
mov
rcrb
jbe
ja
mov
sarb
rolb
add
lea
pusha
scas
xor
push
jns
and
mov
and
jmp
add
mov
loopne
jb
pushf
and
jmp
pop
sub
jb
push
and
xchg
add
add
inc
jno
and
inc
jbe
inc
hlt
jp
pop
cmpsl
stos
sbb
jns
xor
cmp
test
push
ds
dec
pushf
pusha
leave
mov
clc
pop
pushf
mov
pop
xchg
mov
movsl
lds
out
cmp
lahf
or
les
ja
in
xchg
cli
and
push
or
adc
sbb
cld
and
or
jo
or
sub
scas
xchg
cs
mov
sub
adc
loopne
mov
mov
iret
xchg
js
mov
in
nop
jmp
or
sub
mov
jns
pop
xlat
popa
cld
clc
push
cli
sbb
aaa
or
jne
push
mov
adc
and
cmp
jae
cmp
je
test
pop
stos
cltd
lods
xchg
dec
mov
ffree
ret
rolb
mov
jg
mov
mov
subb
mov
adc
sti
cmpsb
cmp
pusha
les
pcmpeqd
add
push
cmpsb
mov
adc
inc
mov
sahf
xor
push
mov
jle
xor
adc
gs
gs
or
lret
nop
fwait
rcll
dec
push
xlat
sub
dec
pop
imul
xchg
push
out
rcrl
repz
xorb
shlb
sub
xor
xchg
std
lcall
lret
cli
mov
lret
imul
xchg
andb
dec
imul
fsubrl
hlt
add
adc
push
ds
xchg
or
divb
mov
mov
inc
in
inc
gs
mov
push
inc
push
fists
das
inc
shll
scas
add
sbb
ljmp
clc
fsubrl
sbb
stc
loop
out
mov
jbe
add
cmpsl
mov
and
pop
mov
out
add
sub
pushf
inc
pop
test
inc
insl
mov
or
rcr
dec
or
xchg
pushl
jge
push
mov
out
ret
push
xchg
stos
sub
inc
fidivl
xor
pop
call
lret
lods
and
add
add
mov
cmpsl
aas
mov
inc
repnz
pusha
adc
mov
jns
xchg
leave
incl
scas
push
lods
js
push
adc
pop
inc
cs
xor
shll
push
sbb
and
cwtl
inc
cli
jbe
sbb
nop
scas
mov
mov
aam
popl
fstps
incb
add
sbbl
push
xor
mov
sub
xor
xchg
add
cltd
sahf
and
aam
cmp
sbb
inc
fdivrp
jmp
gs
mov
pop
cmp
mov
push
fdivs
loopne
inc
fcoms
inc
jmp
repnz
lock
sub
push
adc
xor
xchg
add
xchg
sbb
sbb
sbb
sbb
mov
outsb
jmp
aas
mov
xorl
aaa
or
mov
mov
xor
cmp
xchg
jmp
or
adc
pop
mov
or
push
jae
sub
mov
cmpsb
bound
sub
or
sub
clc
std
and
mov
sbb
loopne
cli
mov
sub
mov
addr16
sti
ret
inc
jmp
andb
adc
repnz
xor
xchg
ret
dec
inc
or
fcmovnu
mov
ja
dec
push
cmpsl
jg
lcall
subb
roll
movsl
inc
stos
bound
movsb
js
ljmp
js
or
inc
cmpsb
aas
jle
or
repz
shlb
rcrb
mov
sbb
jne
and
or
cvtpi2ps
es
outsb
add
fwait
rorl
cli
xchg
sub
or
sti
pop
movsb
rorb
popa
dec
es
lret
jge
clc
push
inc
jecxz
jb
or
mov
lds
xchg
gs
loope
push
orb
ja
xor
loope
aad
or
mov
test
imul
loope
and
xor
sub
lods
mov
jnp
and
inc
xlat
aas
add
jp
mov
insb
pushf
jmp
pushf
loopne
mov
es
montmul
cmpsb
inc
lock
sbb
sub
popf
loope
jg
cmp
mov
stos
pop
in
idivl
fidivrl
xor
xlat
xor
push
pop
xor
inc
les
add
notl
push
or
or
cs
mov
movsl
enter
pop
add
outsb
enter
iret
fcompl
sbb
mov
mov
pop
inc
cmpsb
mov
xor
iret
addb
cld
sbb
pop
sbb
scas
fiadds
repz
push
pop
push
das
adc
xchg
mov
push
sbb
mov
popf
sub
adc
ret
mov
scas
dec
mov
jno
sarb
inc
fcoml
push
int3
fidivrs
pop
addr16
and
inc
fsubr
xchg
mov
fistpl
sub
lods
or
push
add
xchg
mov
inc
fldcw
pop
shrb
push
testb
lahf
xchg
add
ud2
idivl
fldl
scas
mov
sbb
xacquire
mov
shll
stos
dec
and
jb
hlt
push
mov
xchg
rcr
imul
lea
fisttps
aad
mov
dec
mulb
nop
loop
faddl
movl
add
jp
pop
mov
das
js
lods
sub
scas
mov
pop
repnz
jnp
xor
jp
cmp
inc
push
or
push
xor
adc
inc
sub
imul
repnz
sti
testb
sbb
fadds
lods
inc
jno
cmpl
scas
lret
loope
cwtl
pop
mov
rorb
sbb
push
push
cmp
dec
jno
add
cld
mov
pushf
fldcw
and
fbstp
push
fstp
mov
xchg
inc
sbb
test
adc
cmp
or
test
cwtl
fucomi
clc
movups
sub
adc
jno
aad
imul
shll
shll
lahf
into
xor
cmpl
insb
xor
arpl
mov
and
lret
and
repz
jno
in
mov
das
in
dec
jno
cmp
push
test
mov
imul
dec
sahf
cmp
push
pop
inc
jns
das
add
mov
subl
push
dec
pop
outsl
jbe
dec
dec
mov
pop
xchg
in
daa
aaa
js
cli
stc
lcall
push
mov
movsl
xor
and
mov
call
ljmp
out
mov
mov
xor
push
mov
enter
aas
push
xor
fcomip
fcomp
rol
push
inc
or
jge
int
fs
inc
decb
mov
lds
scas
mov
addr16
or
call
adc
xor
push
sbbb
not
mov
pop
je
rorb
popa
popf
pop
jo
clc
lret
sti
movlps
push
mov
sub
xchg
pop
dec
int
lcall
or
popa
rol
shlb
push
lcall
inc
addr16
push
addr16
outsl
sub
jns
adc
cmpsb
pushl
shlb
cs
negb
xor
sbb
cmpb
mov
les
addr16
pushf
test
ljmp
sub
mov
mov
clc
outsl
ja
and
leave
lcall
and
aas
dec
cmpsl
fisubrs
rcrl
scas
in
jns
dec
mov
sbb
clc
or
lcall
in
outsl
daa
repnz
push
and
shl
mov
adc
daa
add
push
add
sahf
test
dec
pop
ret
mov
pop
cmpsb
mov
es
adc
fsubrl
pusha
adcl
and
sbb
lahf
xor
push
cltd
mov
psubd
adcl
dec
fldcw
scas
push
in
sbb
out
fstpl
mov
sub
sarl
xchg
sarb
loop
xchg
rcr
pop
xchg
lock
and
or
repnz
jo
jb
jne
mov
inc
jb
jae
imul
loop
stos
jmp
push
mov
fisttpll
mov
sbb
rcrl
iret
jp
mov
lahf
repnz
out
dec
loope
test
scas
jg
push
aam
mov
out
stos
pop
hlt
sub
flds
dec
jnp
jp
cmpsl
adc
mov
lock
testl
xchg
or
jns
outsb
test
jp
ret
int3
stos
loop
call
jno
lods
xchg
jle
faddp
push
mov
repnz
pop
and
inc
and
js
aas
sbb
dec
or
mov
cwtl
jge
out
cmpsl
mov
scas
push
in
add
out
xlat
in
mov
mov
push
dec
xchg
outsl
add
push
insl
scas
scas
xchg
aaa
scas
test
or
int
lods
ljmp
out
mov
inc
scas
les
ret
in
lret
ljmp
insl
es
mov
jae
bound
or
loopne
push
or
mov
push
pop
fwait
dec
pop
lock
dec
fdivl
mov
cmp
jne
sub
and
fstps
scas
mov
mov
xchg
sti
int
add
inc
cwtl
out
fimuls
sub
fcoms
dec
arpl
jo,pt
iret
gs
aad
std
dec
imul
and
test
pop
inc
mov
pop
push
into
gs
mov
inc
xchg
clc
in
test
xlat
jns
mov
or
outsb
std
sub
or
hlt
mov
mov
les
jl
jns
cmp
mov
fisttps
pop
add
pop
push
and
loop
add
mov
cmp
iret
push
xor
dec
pop
or
xchg
pop
pusha
jns
mov
xchg
aaa
inc
pop
jns
add
in
or
dec
cmp
adc
adc
scas
sbb
or
enter
ljmp
dec
mov
fcmovbe
cmp
sbb
cld
stos
jno
adc
mov
adc
ss
inc
xor
sbb
push
nop
xor
sub
dec
aad
mov
adc
xor
iret
gs
sub
mov
and
jge
sub
mov
inc
into
and
test
nop
dec
xchg
sub
mov
nop
int3
add
and
out
pop
daa
mov
inc
jb
movsb
cmpsl
dec
enter
cmp
hlt
and
shlb
jecxz
lods
inc
xchg
aaa
sbb
lret
lds
add
adc
mov
dec
jle
jne
test
cli
pop
sbb
xor
rclb
std
jne
sbb
dec
and
js
test
xchg
push
mov
mov
push
add
push
ret
out
inc
hlt
push
pop
push
or
enter
sbb
test
pop
or
xor
xor
pushl
popf
push
int
xor
std
bound
loope
add
pop
jg
iret
jl
jmp
pop
movsb
and
mov
ret
pop
push
adc
push
adc
or
mov
ret
cmc
fsubrl
jo
ret
jns
xrelease
icebp
shrl
pop
cwtl
push
add
imul
or
cmp
lock
inc
adc
push
jnp
aaa
lods
jns
dec
push
xchg
adc
insl
add
and
pop
test
jecxz
outsb
xor
enter
adc
repz
shlb
in
cmp
sbb
sarl
lods
pop
push
testb
stc
je
lcall
xor
xchg
scas
in
cs
ljmp
test
insb
dec
rol
pop
add
mov
xchg
sub
test
mov
push
push
leave
mov
mov
bound
loope
or
sbbb
je
icebp
cld
sbb
sub
sub
das
ret
cltd
dec
pop
fcmovne
fidivs
and
jbe
into
xchg
cmovle
cwtl
cmp
jle
dec
jo
sub
hlt
add
in
cmpl
and
call
add
xor
and
or
andb
popa
icebp
fdivs
data16
cmp
jp
js
or
lret
std
push
mov
in
call
cmp
ja
jne
aam
or
fdivrs
icebp
mov
pop
mov
ret
scas
incb
mov
js
lds
fs
xchg
jp
adcl
push
add
int
imul
mov
add
mov
push
pop
ss
cmp
insb
repz
mov
stos
pop
rol
cmp
cmpsl
pop
sub
dec
in
mov
ret
repz
mov
sub
fsubs
test
mov
int3
mov
outsl
lds
cmc
mov
psrlq
sbb
adc
iret
js
and
pop
xor
nop
ret
jmp
sub
adc
mov
cmp
pop
xlat
push
mov
ljmp
jae
mov
jmp
addr16
adc
and
mov
gs
fdivl
pop
sub
push
cld
outsl
fdivr
add
cs
mov
stos
in
add
xor
and
cmp
ja
xchg
pop
test
std
inc
pop
sbb
jmp
xchg
popa
xor
xchg
mov
xchg
pxor
inc
mov
sub
insb
push
int3
pop
push
or
push
mov
push
jno
hlt
sub
mov
or
jns
rep
inc
fldl
out
mov
stos
xchg
push
jns
fmuls
scas
pusha
clc
and
popf
sar
jg
jbe
imul
popf
hlt
imul
mov
adc
int
movsb
push
and
gs
mov
adc
daa
cmp
shrl
pop
mov
mov
and
push
out
cmp
cmp
outsb
aad
dec
out
bound
fisttpll
mov
in
mov
das
sub
sbb
dec
xor
dec
lcall
push
mov
addr16
ret
mov
popa
rcl
dec
lahf
mov
divl
push
mov
out
mov
mov
xchg
or
cmpsl
movsl
mov
test
dec
xchg
loop
std
pop
mov
and
imul
jo
xchg
lret
mov
add
call
test
xor
mov
fsubrs
sbb
pop
popa
shll
mov
push
push
adc
sub
es
push
mov
xchg
lods
push
and
sti
push
je
pop
push
fisubrl
pop
pop
jle
adc
std
in
scas
leave
jmp
fsubrl
mov
arpl
jae
xchg
test
xor
movsb
gs
in
div
aam
add
sub
and
inc
inc
and
jne
sahf
xor
sub
mov
jmp
cmp
test
xchg
push
push
sysenter
lret
inc
test
xor
int
vcvtss2sd
stos
xor
add
dec
push
dec
jge
mov
aad
testb
sti
mov
and
subb
adc
sarl
or
push
daa
movsb
lods
aad
xlat
jp
jg
dec
mov
adc
fisubs
sahf
xchg
sti
leave
and
adc
incb
sbb
and
push
dec
pop
ja
test
xchg
bound
fwait
lds
and
mulb
mov
stos
les
jnp
les
pop
add
inc
daa
mov
xor
bound
fcoms
mov
inc
cwtl
inc
fmul
fs
jno
stos
fxch
xchg
jno
lahf
cmp
mov
mov
je
jne
or
loopne
xchg
lcall
call
in
cmp
dec
mov
repnz
inc
lods
aaa
cmp
add
pop
push
repz
mov
repnz
out
fs
pop
push
addr16
fildll
dec
xlat
in
popa
enter
inc
push
mov
iret
mov
mov
movsl
jl
icebp
bound
leave
add
sbb
mov
push
xchg
inc
mov
sarl
pop
daa
repnz
and
lret
ret
outsb
pop
mov
add
push
ss
xor
mov
dec
loop
daa
xchg
xor
stos
rcrl
mov
addl
and
inc
push
adc
fidivl
or
test
dec
sub
mov
std
lock
cmpsb
aaa
shll
mov
lods
outsl
aas
pushf
gs
fsubr
out
dec
inc
es
icebp
jecxz
inc
adc
mov
sub
lcall
adc
ret
rep
rcrl
sbb
mov
int3
adc
jnp
in
das
ret
clc
add
popf
xor
xchg
xor
jle
pop
mov
nop
loope
nop
push
fs
cli
jg
lds
cli
xor
pop
enter
jecxz
leave
jle
js
push
jmp
dec
sbb
jns
push
push
mov
movsl
jl
or
in
roll
lcall
sahf
pop
mov
fbld
and
dec
cmpsl
test
orl
push
mov
bound
ret
cli
pushf
adc
inc
cmp
hlt
popf
mov
mov
idivb
inc
hlt
lods
jge
mov
das
pusha
jl
lahf
je
xchg
lds
stos
mov
outsb
jmp
aaa
pop
mov
ret
pop
mov
lret
adcl
sbb
pop
xor
xchg
adc
xchg
push
dec
test
js
mov
push
jle
xor
lea
loope
jge
adc
mov
mov
add
aam
push
inc
fmuls
inc
data16
jp
sbb
cltd
pop
push
data16
cwtl
jb
mov
insl
add
test
rcr
cmc
mov
add
test
pop
call
xor
imul
push
push
and
or
push
stos
cmp
xchg
das
addr16
movsb
inc
push
icebp
dec
pop
fcmovnbe
das
ss
popa
repz
mul
push
js
add
jb
mov
shl
shlb
add
in
push
and
inc
xchg
jmp
add
jno
loop
fwait
loop
add
mov
repnz
les
mov
or
cwtl
xchg
sub
out
add
testl
add
xchg
dec
cltd
xor
stc
jle
xor
in
lea
push
and
sbb
inc
sub
sub
or
cmp
scas
inc
jecxz
adc
inc
add
mov
int3
test
jp
sarl
fisubrl
leave
int3
test
sahf
mov
cld
xchg
adc
aaa
sbb
test
xor
popf
cmp
mov
dec
cmc
inc
lea
cwtl
outsl
inc
xor
testb
clc
adc
scas
jecxz
xor
stos
and
xor
and
aad
adc
jbe
je
movsb
lcall
add
mov
repnz
xchg
xor
pushl
arpl
iret
or
imul
pushl
outsl
xchg
js
movsl
cmp
jge
push
mov
ret
pop
dec
or
mov
loope
and
rol
arpl
rcr
push
dec
out
add
jge
cmp
aad
pop
nop
and
mov
aas
push
stos
ljmp
rorb
xchg
mov
hlt
mov
xor
pop
nop
arpl
shr
hlt
pusha
xlat
repnz
pop
push
aas
shrb
mov
ret
jecxz
imul
lock
je
aam
dec
lods
jmp
jecxz
mov
cmp
jmp
sbb
arpl
imul
fadd
int3
fs
fisubrl
xchg
repnz
int3
aas
xor
mov
out
call
mov
push
mov
or
pop
sbb
xchg
inc
and
movsb
ret
cmpsl
xor
fs
sbb
lods
cmp
pop
jae
sahf
adc
jp
mov
adc
rcrl
sbb
leave
mov
jmp
pop
jo
pop
mov
int
mov
xchg
test
jmp
in
sub
mov
mov
jb
pop
mov
hlt
cmp
and
mov
into
jl
ja
cmp
call
test
repnz
je
out
cltd
cld
adc
dec
pcmpgtd
mov
pop
cwtl
lcall
stos
sar
cmp
mov
jge
mov
notl
insl
jae
aaa
add
jmp
mov
sub
sub
test
stos
pmaxub
inc
lret
push
push
mov
scas
inc
adc
fnstcw
loopne
leave
jl
lds
cld
dec
into
sbbb
xor
xchg
test
adc
aad
xchg
mov
add
scas
mov
repnz
frstor
jg
decl
mov
aam
leave
xchg
push
out
adc
cmc
mov
insl
test
mulb
pop
loop
mov
push
push
jle
dec
fs
lods
test
pop
pop
push
js
addb
imulb
sbbl
jno
lock
stos
or
inc
lcall
inc
pop
jge
mov
lock
push
sub
xchg
xor
mov
mov
xor
and
inc
sub
mov
add
inc
pop
sbb
loope
or
shl
mov
lret
jle
dec
lock
inc
push
jmp
mov
inc
inc
movsb
jo
cmp
dec
mov
fstpl
sub
inc
daa
lock
xchg
xchg
shrb
push
push
jecxz
ja
mov
xor
mov
out
call
outsb
ret
sbb
ja
adc
add
lods
inc
mov
xor
fisubrs
insl
lods
dec
fidivs
mov
dec
push
je
sub
scas
repnz
sbb
mov
dec
mov
shrb
push
lods
imul
or
xor
xchg
insl
sti
mov
dec
mov
sbb
pop
mov
sub
mov
mov
std
add
adc
popa
mov
je
out
mov
in
push
lods
std
ja
inc
mov
fwait
int3
and
inc
mov
cmc
dec
sub
or
out
aad
adc
insb
lds
out
movsl
add
adc
add
jp
mov
lahf
push
scas
in
inc
and
int3
and
rol
lods
test
jo
in
into
aad
sub
insb
lds
mov
mov
dec
movsl
ds
adc
rorb
xlat
shl
add
mov
cwtl
and
inc
mov
xor
test
sub
nop
dec
int3
in
lahf
dec
testb
push
pop
xchg
fildll
xchg
add
bswap
in
je
data16
mov
pop
int3
nop
pop
fisttpll
iret
sbb
fldt
push
outsl
call
mov
pop
lret
sbb
pop
adc
scas
push
jo
mov
daa
cld
inc
ds
test
push
or
or
xor
arpl
nop
adc
repnz
pop
inc
pop
in
xchg
in
into
and
xchg
jae
in
stos
jg
mov
movsb
enter
sbb
add
fildl
adc
gs
jae
fwait
jo
imul
cmc
push
pop
shrl
mov
jl
dec
xor
mov
insb
or
jnp
cmp
ret
iret
addr16
popf
sbb
popf
fs
push
aad
and
mov
movl
scas
lret
sbb
push
pop
les
fwait
cld
movsb
jge
cs
mov
int
fstl
scas
cmp
je
fs
xchg
sbb
mov
daa
cmp
push
notb
lret
pop
stos
cmpsl
xor
push
add
test
loopne
pop
repnz
xchg
in
xor
xchg
pop
outsb
sub
test
or
stos
fwait
mov
inc
test
push
push
test
fnstcw
inc
test
jp
inc
dec
xchg
sahf
adc
shlb
lds
dec
jecxz
inc
insl
loopne
or
cmp
ret
mov
ficoml
sbb
adc
test
int
addr16
mov
cltd
pushf
outsl
inc
imul
xchg
push
shrb
test
jns
decl
add
sti
adc
mov
cld
or
lock
incl
sbb
push
rcll
es
sbb
bound
ss
push
jnp
cmp
lock
sbb
inc
dec
jns
push
inc
in
fdivrl
jecxz
rcll
stc
mov
push
stc
or
mov
pop
xchg
inc
or
in
jmp
dec
pop
scas
ret
push
popf
sahf
adc
fdivs
pop
insl
insl
mov
jno
push
ds
dec
xchg
sti
sbbl
outsl
mov
xor
loop
adc
push
cmp
ret
shll
aad
cmc
dec
loope
lcall
and
xchg
outsb
je
xchg
mov
push
out
jae
aad
mov
stc
les
or
or
cmpsl
dec
in
cmc
movsb
push
pusha
push
add
das
ret
push
push
cmp
aam
jle
cmp
fs
std
xchg
enter
jne
cmpsb
sbb
pop
leave
mov
jns
jmp
rclb
push
inc
loope
xor
mov
lds
das
test
lcall
js
data16
lods
mov
adc
add
lods
aas
dec
fs
xor
movsl
or
jnp
xchg
push
cmp
frstor
dec
fs
sub
jl
std
stc
nop
jbe
jle
mov
sbb
mov
out
cmpsl
push
or
adc
sbb
cmpsl
cmp
cmp
sub
out
mov
mov
xchg
or
jmp
roll
lods
push
xchg
inc
int
add
add
inc
push
lcall
mov
pop
cmpxchg
lahf
cmc
sbb
xchg
into
gs
or
int3
xchg
sbb
rolb
cmp
mov
pop
mov
or
add
arpl
add
outsb
mov
aaa
cs
pushf
inc
call
and
mov
loopne
inc
rcl
lea
mov
inc
lea
js
mov
mov
andl
adc
sbb
sbb
leave
cmpsb
mov
pop
xor
jb
std
mov
scas
inc
mov
or
dec
les
or
push
mov
jne
and
sub
lds
dec
data16
jmp
test
sub
enter
scas
imul
pop
adc
adc
jne
sub
xchg
popa
int3
jecxz
push
out
das
rcr
testl
cmp
scas
add
shll
lods
mov
icebp
lods
int3
inc
and
mov
fwait
or
int3
push
outsl
loop
add
cmp
pop
cmc
dec
pop
je
cmp
ret
ret
or
mov
ret
fsubp
xchg
cltd
xor
sub
mov
jl
inc
push
pop
popf
aam
mov
mov
ds
enter
or
inc
in
cmp
jmp
and
xor
jp
inc
nop
cmc
dec
lsl
dec
push
pop
xchg
xchg
jns
jbe
insl
repz
add
inc
cltd
nop
pop
inc
sbbb
push
mov
rcrl
mov
shr
mov
jmp
cs
xor
push
repz
outsl
jge
jmp
shl
hlt
fisubrs
or
xor
push
addr16
out
cmpsb
dec
loope
inc
insl
nop
std
hlt
push
mov
iret
xchg
in
xor
inc
xorl
loope
xor
test
clc
jg
cmp
hlt
sbb
daa
das
jg
fdivrp
add
orb
pusha
movl
fdivrl
jg
testl
sbbb
stos
int3
fadd
leave
nop
push
roll
mov
mov
cld
inc
push
xor
shlb
aad
dec
stos
pop
imul
dec
xor
sub
in
cltd
iret
jecxz
push
and
stos
sub
cmp
push
movl
add
test
cmp
or
add
scas
sub
xchg
test
mov
dec
cmp
in
insl
insl
xor
or
mov
jnp
test
idivb
fadd
dec
pop
mov
ss
lret
mov
dec
mov
pop
iret
jecxz
push
xchg
sub
add
mov
inc
mov
shrl
mov
fstpt
inc
lods
add
mov
fsubs
test
gs
scas
jp
nop
ds
cmpl
insb
divb
jmp
xchg
repnz
or
sub
mov
xchg
es
scas
aam
add
sbb
push
cmp
mov
ss
in
cmp
loopne
mov
in
xor
das
ljmp
pusha
mov
shll
jmp
mov
shr
outsb
test
out
inc
push
adc
xchg
imul
imul
mov
adc
mov
inc
call
mov
jle
test
lods
xor
jnp
push
repz
mov
fistpl
movsl
mov
or
sbbb
daa
push
sub
bound
jl
ret
mov
cmpsl
sbb
jp
enter
add
inc
push
scas
cltd
sub
xor
xor
inc
jl
and
stc
rclb
movsl
daa
outsl
push
pop
mov
fisubrs
mov
addb
cmpsl
bswap
out
jb
lds
push
or
or
push
sbb
cmpsl
ret
pop
pop
nop
and
pop
imul
and
clc
lods
inc
loope
xchg
test
xor
jle
pop
mov
cmp
pop
push
and
ss
dec
push
sub
rol
mov
leave
inc
flds
iret
pop
test
pusha
outsl
js
push
add
notb
int3
inc
je
stc
out
add
xchg
mov
xchg
aas
in
stc
inc
lret
repnz
pushf
jns
mov
repnz
inc
mov
push
push
js
flds
sbb
test
jo
movsl
pop
inc
dec
pop
cmp
mov
in
pop
ds
lahf
jg
and
test
jnp
mov
inc
movsl
jp
in
test
in
imul
sub
shl
jecxz
inc
add
inc
addl
insl
imul
fdivs
push
push
ret
enter
and
shld
mov
ja
sub
popa
imul
ja
pop
ficoml
pop
std
xchg
nop
xor
sub
cmpsl
out
adc
dec
cmp
xchg
cmp
out
int3
or
es
push
or
test
xor
fistl
mov
neg
cltd
pop
ficoms
hlt
fsubl
jns,pn
mov
std
scas
sub
or
xor
mov
daa
pop
scas
sub
mov
cmp
jns
and
sub
cmpsl
dec
in
push
xor
or
pop
and
loope
shlb
and
sbb
cwtl
das
push
pop
shlb
push
xor
mov
mov
mov
cmp
push
mov
aad
mov
cmp
adc
loopne
xor
dec
push
inc
outsb
xchg
mov
rcrl
xor
pop
cmpsl
jl
pop
and
lret
jle
std
shrl
xor
cmp
ret
jle
or
jl
pop
dec
xchg
insl
rcr
in
add
decl
lahf
mov
mov
cmp
rcrl
inc
mov
popa
ss
sbb
stos
xchg
clc
stc
pop
icebp
mov
inc
test
sub
fs
loope
pop
jl
inc
sub
aam
ja
cmp
pop
fsub
sbb
cmp
push
mov
fwait
push
sti
enter
loope
mov
xchg
push
jns
fisttps
fidivrl
push
mov
arpl
xchg
push
cmc
push
xchg
jnp
adc
and
inc
mov
add
jno
inc
in
inc
movsl
cwtl
stos
and
mov
rcrb
mov
mov
fwait
test
out
fwait
jnp
mov
sbb
mov
sbb
mov
sub
sahf
lods
outsl
pop
sub
mov
jmp
cltd
inc
iret
dec
and
cs
jo
repnz
clc
lea
testl
ds
dec
jb
iret
pop
sti
dec
shl
push
pop
addr16
mov
addr16
daa
inc
loopne
iret
adcb
push
xchg
fsts
lret
cmp
cltd
loopne
push
jbe
xchg
mov
bound
push
cltd
mov
push
out
xor
sub
fnsave
movsl
push
cmp
imul
xor
pop
jl
dec
testb
ficoms
stc
out
jbe
je
cmp
icebp
cld
mov
xchg
imul
int3
lds
fnstenv
test
int
cs
mov
pop
mov
push
outsl
push
mov
sbb
push
mov
imulb
mov
shlb
inc
xchg
xor
inc
sbb
adc
xchg
mulb
dec
mov
sub
out
fnsave
lsl
jno
and
sbb
mov
aas
push
orl
cmpsb
sbb
shlb
and
iret
out
add
leave
sub
mov
cmp
push
icebp
cmp
xor
movsl
mov
inc
test
lea
ja
pop
sti
rcrl
aaa
pop
sbbb
stos
int
jne
push
sub
mov
fidivrl
arpl
stos
daa
pop
movsb
push
icebp
daa
dec
scas
mov
out
and
rcrl
imul
or
adc
push
addb
jnp
xchg
push
fstpl
ds
call
and
add
jmp
mov
mov
push
clc
inc
enter
aad
add
dec
std
leave
pop
addr16
movsl
daa
out
xchg
mov
push
into
loopne
ret
movsl
cmp
imul
xchg
cmp
cmp
pop
fwait
xor
and
jg
xchg
int3
mov
rorl
and
mov
js
pop
sbb
mov
cmp
xchg
dec
loope
test
icebp
adc
sbb
jmp
add
push
mov
das
xchg
cmpsl
jne
pop
and
mov
les
jp
movsl
push
out
pop
and
mov
movsl
add
push
ret
mov
flds
std
loope
lea
and
sub
push
sbb
dec
sub
mov
fucomp
or
in
mov
ret
sbb
xor
and
jno
inc
sahf
mov
or
xor
popa
pop
push
std
pop
mov
fbstp
or
mov
adcb
adc
dec
fistpll
and
cmp
out
mov
loope
pop
dec
mov
js
push
mov
mov
rorl
shr
sub
pusha
jbe
add
xchg
mov
jo
inc
push
movsl
in
push
daa
inc
fldt
adcb
or
pop
jb
mov
mov
mov
ss
fildll
mov
push
in
sub
rolb
adc
mov
gs
fidivl
dec
xor
jmp
jge
mov
lea
stos
sbb
or
push
lods
and
flds
aam
fwait
into
mov
xor
ja
push
cs
lea
xchg
lock
mov
push
or
cs
adc
jnp
ss
xchg
lahf
adc
hlt
jnp
ret
fmull
nopl
shlb
jmp
push
cmpsb
inc
inc
clc
int3
add
sbbb
mov
ljmp
lcall
in
orl
or
stc
inc
test
test
rcrb
inc
cli
mov
ret
outsb
insb
push
pop
push
add
popa
jg
ret
mov
je
nop
inc
fs
leave
jb
clc
adc
inc
jecxz
inc
sarb
mov
js
mov
cmpsl
scas
or
pusha
jns
adc
inc
pushf
xor
movsl
xchg
mov
inc
sbb
sbb
out
xchg
aad
dec
outsl
mov
pusha
jl
aas
adc
or
cltd
xor
sbb
push
rorl
sub
jle
je
lds
mov
dec
push
jmp
and
jmp
sub
test
xchg
inc
lods
xor
leave
mov
lahf
daa
test
or
pop
out
fnstcw
dec
out
ret
repz
sbb
lret
cmp
sbb
and
xor
scas
repz
push
add
dec
cmp
leave
cmpsl
les
ret
cs
jo
or
jmp
fistpll
hlt
or
das
aam
sbb
sub
popf
popa
in
das
inc
insl
add
sub
loop
pushw
inc
xchg
loopne
inc
adc
mov
setp
inc
jae
hlt
xchg
aad
or
sarl
adc
popl
push
adc
and
inc
mov
pop
xor
xor
notl
push
das
push
add
cltd
or
or
mov
shll
call
mov
sbb
push
lea
fcmovnb
jmp
pop
and
stc
out
xchg
sarb
add
mov
mov
icebp
das
push
adc
sub
iret
cmpsl
cmp
je
lods
subb
outsb
call
jl
ljmp
jno
or
pop
loopne
out
cmpsl
repz
sbb
and
arpl
mov
and
mov
and
adc
loope
sahf
mov
mov
ja
imul
es
out
rorb
aad
add
dec
mov
sbb
dec
fcom
subl
mov
pop
gs
mov
sub
repnz
sahf
jmp
iret
xor
dec
loope
xchg
popf
xor
hlt
and
push
lods
aas
in
adc
adc
cmp
std
mov
dec
es
cli
cmpl
lret
and
push
dec
dec
or
out
xchg
ds
nop
fstps
es
jecxz
cmp
lock
mov
and
sti
ss
sub
inc
jg
mov
jl
scas
loop
cmp
lcall
push
icebp
and
rcl
pop
nop
mov
testb
or
fwait
jo
and
dec
repz
xor
std
mov
imul
in
mov
fcoml
cmc
mov
cmp
and
stos
iret
jae
jge
mov
mov
fwait
fs
jo
cmpsl
dec
repz
jb
das
in
push
inc
insl
mov
xlat
xchg
push
inc
ds
in
arpl
xor
ljmp
shll
aad
add
arpl
inc
imul
cmpsb
adc
mov
in
je
add
popf
xor
mov
fidivl
and
movsl
pop
sti
std
lea
push
fs
rolb
mov
xor
shlb
int
and
mov
push
mov
pop
fisubl
int3
jecxz
cwtl
push
loope
imul
mov
fwait
cmp
inc
jmp
xchg
xor
inc
or
bnd
cltd
add
xchg
daa
push
rorb
push
out
cmpsl
sub
pop
hlt
jmp
roll
movsb
sbb
out
fwait
pop
mov
push
pusha
stos
cmpsb
jns
adc
push
push
push
ljmp
mov
mov
dec
das
adc
add
sbb
repz
test
jle
je
mov
pushf
pop
pop
ficoms
mov
nop
pop
inc
push
sub
pop
cmp
out
inc
xor
pop
pusha
or
cmc
xchg
pop
out
sub
xchg
adc
and
and
push
xchg
mov
cli
adc
aas
or
mov
pusha
xchg
dec
lcall
dec
push
fildll
push
js
push
lea
mov
mov
fcmovne
mov
loop
adc
les
ret
les
lods
inc
sub
push
std
fimuls
dec
mov
ss
push
jbe
jns
sbb
fsub
cmp
push
sbb
or
mov
repnz
inc
loope
mov
push
push
subl
pop
push
lea
mov
push
jl
push
outsb
insb
push
xor
mov
inc
call
fcmove
arpl
push
out
cmpsl
imul
mov
jmp
jno
ds
pop
sbb
xchg
in
push
push
subl
outsl
sbb
and
sbb
mov
popa
or
sbb
mov
xor
xor
cmpsl
shl
and
mov
insb
or
lods
cmp
cwtl
xchg
inc
pusha
clc
jno
fwait
int
xchg
jg
lahf
mov
or
scas
adc
mov
int
imul
and
jne
std
aas
jb
jb
xchg
pop
cmp
dec
mov
das
aam
fdivp
or
mov
daa
sbb
mov
ret
sbb
or
movsb
or
mov
imul
das
mov
dec
jmp
inc
sbbb
lret
fs
sub
and
dec
cmp
mov
or
pop
cmp
adc
sub
sub
cli
imul
js
or
xor
call
cld
fdivl
outsb
lea
or
icebp
aam
lods
out
fidivs
cmp
dec
notl
jp
mov
addr16
inc
fcoml
xchg
roll
xchg
add
les
imul
mov
popf
or
jns
mov
cltd
add
iret
push
pop
sub
shlb
lret
jp
rorl
sub
movsl
rol
mov
xor
sbb
lea
jbe
ret
shll
sbb
in
flds
mov
xchg
adc
xor
lods
xchg
push
test
bound
lret
inc
add
adc
sub
loopne
scas
dec
xchg
movsl
enter
aad
out
mov
test
lahf
push
add
addr16
es
lret
inc
test
repz
mov
xchg
jmp
dec
shll
insb
jecxz
sti
es
cmpsl
lcall
add
enter
ret
mov
sbb
adc
inc
pop
outsb
call
lea
xlat
scas
push
fidivrl
stos
or
icebp
mov
dec
cs
mov
mov
loop
gs
shrl
loope
stos
jo
sti
xchg
mov
xor
pop
and
enter
sahf
sub
dec
or
int
dec
lcall
mov
inc
ljmp
fdivr
xchg
mov
sub
aas
movl
mov
sub
push
xchg
xlat
sub
js
fs
lret
pop
fdivs
rclb
jge
adc
xor
xchg
imul
xchg
mov
jno
cmp
sbb
repz
xor
mov
mov
outsl
xchg
xor
push
iret
cmpsb
ret
adc
adc
retw
mov
les
dec
dec
mov
dec
test
lock
stos
and
iret
push
push
jno
pop
icebp
fmuls
inc
adc
jge
ljmp
pop
pop
or
das
adc
ja
cmp
test
add
pop
add
outsb
mov
dec
daa
mov
loopne
pusha
mul
sub
sbb
add
xor
mov
push
jmp
fadds
add
std
mov
pop
pop
ret
push
in
cmp
jmp
addr16
jns
or
fsubrl
mov
mov
fnsave
gs
fwait
aas
test
movsl
cmp
aaa
mov
push
mov
fsubr
movsl
jno
jne
mov
adc
out
orb
mov
jecxz
fists
imul
push
lret
pop
mov
mov
rcll
test
push
les
loop
lods
mov
jle
out
cwtl
shlb
cmp
sub
out
pop
mov
mov
stos
push
mov
push
mov
xor
inc
fistpll
fs
ret
xor
push
negb
push
movsl
addr16
loope
fwait
daa
ljmp
mov
fldenv
and
ret
mov
mov
pop
jp
and
mov
lcall
leave
mov
xor
adc
ret
cmp
jnp
shl
mov
loop
inc
fwait
scas
push
gs
in
push
cmpsl
rorl
pusha
inc
xor
int
adc
xor
fldenv
pop
mov
add
mov
outsb
sbb
xchg
scas
sahf
pushf
push
pushf
mov
bound
and
jbe
or
mov
push
push
aas
jae
mov
sbb
xor
sar
xlat
lods
mov
push
mov
mov
xor
add
jb
mov
inc
push
cs
pop
sbb
divl
mov
add
jb
test
and
xor
data16
mov
mov
ljmp
xchg
test
xor
mov
adc
aaa
lret
sub
rcrl
add
fwait
and
inc
movsb
hlt
xchg
add
sub
lahf
pop
dec
setle
push
in
stos
sar
mov
inc
jae
cld
ljmp
xchg
add
inc
push
cmp
in
xor
mov
insl
sub
cld
ja
test
lahf
jl
nop
cltd
ror
mov
sub
or
mov
push
xchg
fidivl
and
movsb
lock
push
add
cmc
repz
filds
adc
jne
adc
xchg
bound
add
push
push
jp
push
pusha
and
mov
je
jo
xor
sub
js
aas
inc
xor
cltd
jb
or
xor
xor
scas
je
sahf
lock
cli
lods
mov
pop
jge
xor
popa
xchg
subl
test
enter
sbb
push
jmp
jnp
mov
push
mov
add
xor
mov
in
xchg
mov
ja
jmp
xor
test
pop
loope
jg
pop
lods
stos
icebp
pop
sar
daa
fsubl
out
gs
dec
push
pop
cmp
inc
cmpsl
xor
adc
incb
in
inc
xchg
mov
inc
push
jp
jb
clc
popl
cld
xchg
nop
pop
cmc
rolb
sub
test
cmpsl
ljmp
sti
shlb
push
add
in
pusha
out
rcrb
push
in
cmp
cmpl
inc
lret
jbe
sbb
cmc
lock
xchg
dec
pop
insl
imul
xchg
mov
movsl
scas
movsb
mov
out
dec
push
jbe
xchg
jns
dec
call
outsl
push
mov
fisttps
je
cmc
hlt
cmp
shrl
dec
lock
jae
xor
inc
movsl
jg
pop
stos
ja
lahf
xchg
fidivs
test
imul
into
cmp
std
add
stc
or
outsb
push
inc
daa
and
cmpsb
popa
lea
adc
testl
xorb
lds
push
lret
cmpsb
arpl
rorl
cld
mov
add
shll
aaa
into
fists
aam
push
imul
pop
and
mov
xchg
mov
jecxz
mov
jne
jge
sbb
lcall
mov
loop
mov
inc
incb
movsb
or
or
ret
mov
sbbb
cmp
testb
dec
adc
mov
in
repnz
rorl
fs
cmpsl
pop
add
nop
sahf
xchg
pop
sbb
sub
test
data16
pop
xchg
das
pop
dec
enter
xor
jp
in
leave
loope
sti
enter
loope
or
pop
cmc
mov
cmp
adc
jecxz
adc
cmp
pop
mov
and
and
cmp
push
das
inc
jecxz
fcoml
inc
jmp
popa
ficomps
mov
data16
scas
dec
fidivrs
push
or
cmp
hlt
xchg
sbb
negb
dec
cmc
ds
mov
inc
and
sti
unpcklps
rcll
in
sub
and
push
jb
lcall
dec
rolb
ret
xchg
adc
mov
cmc
cltd
ljmp
xchg
sub
pop
push
xchg
dec
push
cmp
xchg
cmp
int
mov
test
jp
lcall
push
jmp
push
jae
pushf
add
lods
mov
aad
sub
data16
ret
pop
cs
mov
notb
fiadds
xor
pusha
add
aas
dec
xor
jbe
inc
cld
mov
filds
adc
push
fcoms
dec
jmp
and
out
mov
pusha
add
lds
mov
loopne
stc
sbb
or
mov
adc
out
out
daa
mov
jge
mov
ds
fiadds
iret
sti
fs
into
push
jmp
clc
test
and
dec
test
pusha
pop
mov
in
mov
mov
push
ret
lds
out
mov
push
mov
dec
push
mov
inc
mov
mul
rep
pop
mov
xor
and
mov
push
out
pop
leave
xlat
mov
dec
or
add
xlat
icebp
and
pop
mov
ljmp
icebp
jnp
pop
repz
sub
and
pop
push
fcoml
adc
shr
mov
xchg
and
adc
sub
vpcmpeqd
stos
xor
das
int
repnz
pop
or
mov
or
out
sub
lahf
push
std
inc
or
xor
les
pop
call
add
dec
nop
fnsave
sub
xchg
cmp
xor
out
inc
mov
cld
ljmp
xchg
mov
sbb
jge
inc
jle
bound
or
or
xchg
fildl
call
push
inc
popa
add
sub
shlb
dec
in
xchg
loop,pt
pop
mov
mov
add
testb
mov
lret
outsl
lret
mov
mov
ror
pop
hlt
cld
outsl
fsts
clc
adc
cwtl
mov
xor
in
out
xchg
adc
dec
add
mov
pusha
or
xchg
adc
jp
aad
and
out
lods
rcrb
xchg
fidivrl
xor
outsl
jb
adc
call
push
cltd
and
enter
test
mov
mov
rclb
and
imul
pop
push
inc
xor
stc
pop
fbstp
in
push
cltd
inc
mov
add
adc
invd
pop
call
add
ja
out
repnz
popa
unpcklps
inc
mov
int
sgdtl
xlat
mov
adc
mov
lock
popa
dec
aam
dec
subb
in
shl
scas
xchg
or
cmpsl
or
pop
adc
fisttps
jns
mov
jecxz
shr
popf
sbb
jg
popa
leave
jecxz
pop
adc
outsb
xchg
jp
cmp
mov
mov
test
jp
adc
push
pushf
mov
popa
into
mov
jno
cmp
mov
xor
cli
rorl
add
or
sub
xchg
jns
jns
mov
or
lds
push
mov
test
jo
scas
mov
icebp
shrl
jae
jecxz
push
js
mov
jle
lods
jg
mov
loop
nop
ljmp
mov
xchg
cmc
mov
mov
pop
lods
inc
fiadds
and
sti
xchg
imul
sub
dec
xchg
sbb
mov
jmp
iret
add
mov
dec
fnsave
and
adc
dec
xchg
jle,pn
outsl
push
fcoms
push
pop
rorl
and
lds
adc
lahf
adc
jae
pushl
or
xchg
jno
mov
adc
popf
jne
aad
mulb
das
outsl
imul
cs
xlat
insl
rorb
imul
xchg
rorb
lahf
mov
mov
in
ss
inc
xor
aas
pop
mov
sbb
icebp
xchg
sub
out
jnp
inc
xor
and
xchg
mov
lea
mov
adc
in
jno
ret
jbe
sbb
pop
loopne
mov
leave
pusha
jnp
pop
jmp
sbb
add
outsb
aad
aam
lds
ja
out
push
cmp
lcall
negb
jmp
xor
in
cmpl
repnz
hlt
push
aas
cmp
repnz
cmpsl
sarb
add
push
dec
enter
mov
jge
or
in
call
dec
mov
insl
lcall
mov
je
inc
xor
scas
addr16
adc
adcb
jbe
outsl
push
pop
mov
addr16
mov
cmp
sub
cmc
push
je
sahf
xorl
insb
jns
mov
cmp
test
loope
lds
pop
lret
dec
cltd
add
ds
xor
xchg
adc
stos
adc
aam
aaa
add
mov
mov
mov
sub
pop
out
mov
mov
test
iret
insb
add
inc
xlat
cmp
cmp
dec
mov
ljmp
sbb
push
push
daa
imul
add
leave
sbb
daa
ret
outsb
repnz
ss
mov
repz
cld
aas
pop
jp
aam
inc
xchg
adc
shrb
xor
loop
sahf
add
dec
lock
clc
out
mov
inc
outsl
shrb
adc
enter
inc
sub
addl
mov
rorb
scas
xchg
pop
mov
sbb
push
jmp
push
adc
cmp
ret
shl
cmp
push
mov
int
sbb
jg
pop
sub
mov
stos
dec
mov
jle
xchg
jae
xchg
aam
notl
pop
mov
mov
jno,pt
aad
pop
push
push
nop
xor
stos
gs
cmp
cmpsl
imull
cwtl
pop
push
dec
add
int
pop
loop
jnp
cmp
mov
xchg
or
push
push
ret
ja
or
sti
imul
and
std
aaa
or
fbstp
bound
adc
pop
or
jge
mov
sbb
adc
adc
dec
push
jb
or
test
push
idivb
adc
dec
push
mov
loopne
inc
fdivrl
mov
push
in
push
scas
mov
jg
sbbl
cmc
nop
jb
loope
nop
rcrl
jp
xchg
andl
jns
in
in
mov
xlat
mov
jae
mov
faddl
bound
inc
scas
insl
out
aas
aam
cs
test
repz
mov
sbb
jne
jns
adc
insl
jne
sbb
call
cmp
outsl
daa
cmp
add
dec
mov
ja
jnp
push
xor
int
jmp
push
outsb
lahf
cwtl
mov
cmc
shrl
add
cwtl
cs
xor
mov
xchg
mov
sahf
out
sahf
std
call
cltd
addr16
cli
shlb
jae
popa
dec
mov
pop
jns
ss
sbb
sub
dec
out
push
and
add
sbb
sub
adc
test
fsubrs
dec
insl
mov
or
sarl
mov
adc
xchg
je
add
ja
pop
test
push
xor
pushf
into
push
xchg
popa
adcb
loope
cmpsl
xchg
stos
andl
fcomi
push
and
int3
idivl
cmc
jnp
loop
sub
xor
adc
cmpsb
std
xadd
and
inc
fcmovb
mov
cmp
es
xchg
mov
dec
sub
sbbl
and
in
xor
jb
xor
xchg
std
jo
sub
mov
fwait
sbbb
lea
negl
sub
cwtl
xlat
pushf
mov
jecxz
and
inc
mov
iret
stos
inc
cmc
sub
push
fsubr
or
jbe
sbb
int3
mov
jge
cmp
sbb
icebp
inc
push
outsb
mov
xor
arpl
fidivrl
andl
mov
or
sub
cmp
cmc
jp
mov
cmpsl
sarb
shlb
clc
mov
xchg
sub
lret
sbbl
scas
push
dec
push
add
dec
push
xchg
faddl
rorb
and
pushf
rol
cwtl
push
push
inc
sti
mov
movsl
ret
pop
push
push
aad
leave
pop
push
out
mov
lea
cmc
inc
pop
ret
sub
pop
and
dec
push
push
jl
mov
sub
xchg
or
jno
test
add
popa
jle
push
es
jp
jae
movsb
push
lock
scas
jg
add
and
push
xor
es
adc
pop
fldenv
inc
mov
mul
cmp
add
faddl
ja
fidivs
xor
imul
ss
in
sarb
arpl
aam
dec
les
ficoml
xchg
push
cmp
jo
xchg
scas
mov
sbb
rorl
jp
mov
cltd
test
push
pop
mov
in
sub
andb
push
rcll
jno
das
mov
adc
rcr
or
fistl
mov
xor
mov
pop
hlt
addr16
and
xchg
sub
pop
add
mov
inc
adc
sarb
pop
add
iret
aas
jns
mov
stos
test
cli
daa
inc
shll
adc
scas
out
dec
loope
lods
loopne
enter
cwtl
in
repz
cmpl
mov
and
popf
and
jb
sub
dec
pop
les
es
adc
push
add
inc
data16
mov
xchg
lods
in
aas
dec
mov
ficoms
iret
jecxz
scas
cmp
lret
std
inc
add
cmp
out
lods
je
outsb
add
in
jno
fisubs
fsubr
jo
adc
xor
cmc
xchg
jbe
lea
je
out
add
push
movsl
sbb
fs
mov
mov
sub
adc
ret
into
adc
pop
xchg
in
cld
cwtl
mov
jnp
sub
incl
mov
fs
or
mov
dec
test
insl
cwtl
stos
ret
lahf
faddl
fldenv
cmp
insb
je
cli
xor
sub
iret
hlt
aam
aaa
into
cld
sub
push
add
adc
and
cmp
fwait
cmp
int3
in
fwait
les
test
dec
sbb
inc
imul
repz
dec
dec
sbb
add
xor
mov
xchg
out
leave
inc
push
popf
inc
add
out
cmp
mov
cmpsl
mov
sub
daa
decl
pop
out
repnz
repnz
push
outsb
lods
sbbb
add
or
jmp
push
sbb
xor
sub
gs
push
push
jae
clc
dec
sarl
and
mov
and
xchg
pop
testl
ret
pusha
es
repz
push
fwait
xor
and
and
mov
dec
ds
inc
push
jmp
movsb
outsl
push
push
imul
out
popf
push
jmp
fldl2e
ror
fs
int
jae
stc
jecxz
pop
adc
cmp
shlb
sub
scas
pop
mov
push
adc
xor
add
das
iret
sub
je
inc
push
loope
push
inc
cmp
aas
loop
fiaddl
mov
ja
insb
sub
sbb
test
mov
pop
add
sub
push
or
push
stc
js
push
shll
mov
mov
add
pop
call
iret
pop
mov
mov
in
ss
push
dec
aam
mov
inc
aad
pop
fsubp
sub
mov
mov
stc
lock
fwait
loop
xchg
sub
in
sub
iret
mov
sahf
imul
lahf
or
inc
push
jo
push
shrb
push
insl
mov
cltd
mov
sbb
cmp
cmp
sbb
dec
add
pop
xor
out
jecxz
daa
lret
jp
movsb
nop
imul
or
cmp
shrb
mov
icebp
je
loope
cmp
mov
or
aad
fs
add
push
sub
pusha
sub
fwait
cmpsl
push
pop
mov
in
push
cwtl
xor
cmp
aam
xchg
loop
lret
mov
lds
jnp
xchg
std
xchg
mov
test
stos
dec
dec
inc
movsb
aas
add
and
xchg
push
in
lds
pop
mov
std
adc
push
xorb
mov
fistl
daa
test
setae
cmp
pop
ficoms
push
xchg
pop
inc
stc
sub
test
sbb
mov
mov
push
imul
pop
lahf
push
fwait
je
push
mov
xor
pop
xlat
cwtl
and
jle
mov
outsb
sbb
mov
test
jecxz
addb
or
jbe
mov
push
loopne
adc
stc
rcll
test
frstor
mov
mov
jno
inc
adc
lret
xor
enter
stc
inc
lods
ret
xor
mov
lea
out
adc
es
adc
pop
jno
insl
push
pop
xchg
movsb
mov
jmp
js
mov
arpl
xchg
sbb
xor
sbb
sub
loope
mov
push
cmpsb
xchg
mov
imul
cmpsl
jecxz
mov
into
les
bound
push
popf
jle
das
mov
in
mov
cmpl
jb
and
mov
xchg
clc
xchg
sub
sbb
int
cmc
mov
cld
daa
jle
idiv
xchg
outsl
dec
clc
stos
pop
nop
sbb
cmp
pop
ret
shr
inc
sarl
jbe
mov
pushf
xchg
lods
inc
or
cld
adcb
dec
pop
jmp
xor
data16
pop
mov
jge
mov
mov
and
jle
daa
icebp
test
or
stc
leave
cmp
mov
mov
sub
jne
pop
xchg
pushf
movsb
mov
sbb
call
sbb
mov
xchg
xlat
pop
cmpl
xor
sbb
and
loope
insb
flds
repz
test
or
push
sub
jne
xchg
hlt
fadds
add
data16
adc
dec
pop
loope
sub
adc
enter
iret
lods
xchg
jns
imul
fmul
add
add
mov
inc
ficoml
decl
ret
call
dec
xchg
mov
cmp
or
push
in
test
sbb
sub
jecxz
pop
rorl
lock
inc
sbb
adc
or
out
sti
push
xchg
jns
add
xor
dec
sub
mov
dec
adc
dec
inc
nop
dec
jno
cltd
sbb
es
out
push
jns
push
fwait
cmpsb
xor
sub
aad
inc
mov
repz
and
mov
das
cmp
int3
test
jecxz
and
push
pop
js
int3
repnz
shll
sub
push
hlt
pop
xor
sub
rep
stos
call
movsl
loope
popa
fdivr
aas
jge
std
or
mov
sub
and
in
mov
orl
add
mov
adc
aaa
jbe
mov
std
aad
outsl
aam
inc
push
lea
cmp
and
nop
cld
stos
dec
lods
nop
mov
ret
hlt
cmc
loop
adc
icebp
mov
imul
je
gs
sub
add
jp
and
sbb
adc
lea
sbb
into
cmc
out
call
dec
xchg
jnp,pn
jge
sbb
test
testb
push
mov
hlt
mov
jp
xorl
jnp
jae
pop
aas
push
or
stos
push
push
jbe
xor
repnz
mov
adc
push
cmpb
js
mov
inc
inc
jns
mov
imul
test
rclb
in
rcrl
inc
fimull
mov
in
inc
ficomps
mov
imul
mov
jbe
adc
lods
bound
cmpsl
aas
sarl
nop
push
stos
punpckldq
pop
shr
mov
cmp
push
add
mov
loop
idivb
rcr
imul
jnp
and
lahf
cmp
aas
add
cmpsl
aaa
jge
xor
out
mov
inc
dec
push
inc
xor
pop
xchg
push
sub
dec
or
insl
insl
hlt
cmp
mov
inc
cmpsl
pop
dec
call
call
or
cmc
pushf
xor
jo
lea
sub
xchg
movl
mov
stos
fldt
cmp
pop
dec
loope
jmp
jbe
xor
popa
loope
xchg
push
add
sbb
cwtl
movsl
xchg
insb
inc
mov
stc
nop
adc
pop
lret
repnz
mov
add
xchg
imul
call
sub
xchg
imul
jo
std
leave
std
ss
das
jmp
fistps
mov
fs
inc
nop
mov
test
cli
out
test
in
scas
adcb
sub
jmp
leave
mov
cli
test
cmp
lret
shl
gs
mov
mov
or
sbb
nop
mov
cmp
out
xchg
mov
or
fidivrs
cmpsl
pusha
pop
pop
mov
jno
insl
mov
xchg
cmp
sahf
call
dec
pusha
lret
std
orl
jecxz
mov
pusha
mov
rorb
hlt
xlat
imul
or
mov
shrb
or
jns
xor
lcall
push
and
jg
fmull
dec
cmp
divl
jne
cwtl
mov
sahf
ljmp
push
jo
sbb
add
outsl
lret
in
std
mov
subl
lcall
or
mov
jle
ja
push
lods
fiadds
xor
inc
bound
dec
lds
mov
cli
mov
nop
xchg
adc
ja
dec
xor
fnstenv
cmp
enter
call
dec
outsl
sbb
push
popl
in
jecxz
push
adcl
add
test
mov
scas
push
lret
sub
and
icebp
test
nop
add
push
arpl
xchg
gs
pop
mov
shl
cmp
add
icebp
rcrl
pushf
ljmp
pop
push
pop
dec
mov
sub
mov
jmp
push
add
or
sub
mov
in
andb
mov
xor
dec
cwtl
inc
cmp
pop
jo
aaa
ret
aaa
dec
dec
nop
imul
xlat
jae
cmp
cmp
mov
fadds
push
xchg
mov
out
ret
rcrl
ds
pop
sbb
mov
lods
jne
xchg
jns
popa
div
fistl
loope
cli
pushf
fst
pop
rolb
neg
into
jne
jl
and
jge
xchg
xor
daa
sbb
cltd
xchg
jmp
adc
cmp
and
test
pop
push
fnsave
cwtl
add
in
aaa
xchg
or
mov
ret
repz
or
bound
ljmp
and
dec
shll
and
leave
sbb
popa
pop
sarl
and
shr
xor
mov
mov
dec
xor
push
push
mov
fistpl
or
mov
cld
xchg
int3
pop
inc
mov
out
push
and
push
punpcklwd
inc
ss
ret
push
aaa
pop
cmp
pop
shrl
cmp
pop
push
mov
push
insb
loope
loopne
popa
andl
es
mov
hlt
leave
sub
mov
out
adc
and
inc
inc
cs
aad
xor
iret
sub
adc
clc
mov
jmp
movb
sbb
mov
xchg
rorl
ret
push
addr16
in
sbb
and
cld
push
loope
jmp
dec
push
lock
stos
shll
and
repnz
jnp
dec
cmpsb
movsl
fistpl
fistpll
daa
ret
rcrl
push
lahf
cmpb
fwait
shrb
pushf
loope
xor
cmc
scas
jo
popa
jp
mov
icebp
imul
lcall
loop
enter
push
jmp
jae
push
enter
xor
shl
jecxz
movsl
sub
pop
inc
jge
ljmp
leave
xor
dec
mov
xlat
pop
call
and
cmc
xchg
mov
pop
mov
rclb
or
shl
push
inc
aad
shrb
mov
lcall
adc
ljmp
pop
inc
add
fcomi
lcall
loop
or
mov
int3
and
xchg
scas
fcmovnb
scas
lcall
test
orb
popf
xor
lcall
pop
hlt
cmpsb
sbb
imul
dec
lock
or
cmp
xor
push
inc
jne
mov
in
jb
mov
shl
sub
fwait
mov
enter
pop
loop
das
dec
or
jmp
inc
loop
push
dec
push
jl
ret
je
xchg
and
dec
std
or
stos
xchg
scas
test
dec
inc
cld
outsl
adc
lock
prefetch
leave
mov
or
push
rorl
int
mov
and
cli
out
push
les
loop
test
stc
cmpl
cmp
jb
xrelease
mov
mov
in
cmpb
adc
fnstcw
rcll
jns
xor
fstl
lds
movlps
mov
nop
in
loope
sub
push
cmp
sbb
pop
mov
mov
inc
enter
lods
imull
xchg
and
adc
loop
jmp
cmp
push
add
fisubs
mov
adc
imul
insl
sub
cli
push
and
jmp
test
jle
icebp
scas
or
push
dec
lods
cmp
loopne
push
push
int3
mov
xchg
cli
push
sbb
push
add
jp
pop
cmc
lea
enter
inc
inc
pusha
mov
divl
inc
iret
mov
xchg
cld
pushf
jecxz
push
pminub
out
xchg
js
sarl
daa
popa
mov
sbb
jl
lcall
pop
pushf
xchg
daa
aas
add
sbb
fnstsw
mov
pop
add
subl
mov
jns
out
jo
loope
push
jmp
push
jno
cltd
std
sbb
adc
mov
imulb
mov
mov
fwait
or
pop
cli
cmp
dec
stos
into
mov
stc
loop
out
add
jnp
cmp
mov
push
stc
mov
inc
mov
mov
or
int3
dec
fldl2e
sahf
xchg
dec
pop
lods
rcr
pop
outsl
hlt
lret
mov
jbe
jp
out
aas
gs
inc
loope
aad
stos
or
jl
pop
xchg
iret
cmp
and
sarl
pop
stc
nop
dec
mov
incl
addr16
xor
mov
push
addr16
or
mov
inc
loope
pop
cmp
loopne
aas
lret
xchg
sub
cmp
dec
pop
lahf
lea
shlb
adc
push
jge
ret
cltd
dec
push
cltd
jb
aam
sbb
sahf
dec
or
std
nop
outsb
cmpsb
shl
fisttpl
xor
inc
xor
pop
outsl
push
aas
rol
lcall
pop
mov
or
mov
mov
pop
inc
das
add
ja
push
int3
nop
mov
pop
es
pop
dec
pop
dec
xchg
push
ds
movsb
pushf
fsub
sbb
scas
lcall
out
mov
sub
xchg
roll
shlb
popf
and
mov
aas
xchg
jge
xor
sahf
and
xor
popa
js
xchg
outsl
lods
xchg
mov
rcrb
pop
dec
ficompl
pop
scas
gs
and
push
sub
push
inc
or
inc
push
loopne
pusha
mov
fs
loop
adc
es
jno
sarl
xchg
xchg
lret
sub
mov
loop
movsb
idivl
out
fcom
rolb
pop
call
test
xor
and
and
test
jl
jno
sahf
mov
cmpsl
push
js
leave
push
cmpsl
jno
rcrl
sahf
or
or
cmp
sub
jmp
ficoms
stos
cli
or
cwtl
mov
xor
fldt
dec
xor
and
aas
sub
gs
inc
sti
fwait
out
add
lret
jmp
in
and
sub
jns
sub
popw
pop
pop
dec
fisubl
bound
lock
idivl
cmp
xchg
pop
mov
lcall
push
mov
repz
popf
push
sbb
jg
addr16
mov
test
test
std
mov
sbb
jbe
xchg
jns
shll
fdivl
push
push
insb
jl
add
adc
jb
sub
in
jne
stc
push
movsl
fadds
mov
cmp
cmp
push
fcmovb
sub
or
xor
mov
cmp
xchg
mov
lret
frstor
and
into
push
sbb
inc
loop
mov
xchg
jg
push
stos
xchg
repnz
aam
jae
inc
jp
adc
fcoms
imul
pop
mov
movsl
push
sub
cmp
push
dec
or
imul
sbb
into
inc
rclb
push
jmp
adc
cmp
push
jb
xchg
push
out
loopne
inc
fs
and
jb
dec
or
insb
loope
xor
xlat
fwait
sub
daa
cmpsb
cmp
rcpps
pop
or
jecxz,pn
pushf
cmp
xchg
clc
inc
int
mov
icebp
insb
push
pop
add
dec
cmp
jb
ljmp
jge
inc
stos
sub
aad
sub
std
inc
mov
cmp
jbe
popf
mov
dec
sub
mov
movsl
and
inc
jne
jns
movsb
cmp
fcmovnb
jno
inc
scas
sbb
mov
aam
fwait
add
shrb
mov
int3
mov
cmp
scas
sub
fidivrl
clc
inc
mov
pop
cmp
test
shrb
pmaxsw
ljmp
sbb
pusha
sti
gs
out
inc
jne
aad
mov
mov
enter
push
lock
bound
xchg
pop
mov
and
jge
jmp
ror
xor
inc
fsubrp
arpl
mov
or
mov
in
ja
and
pop
insb
inc
xlat
popf
jecxz
rorb
inc
fldt
je
hlt
adc
mov
cmp
or
mov
aaa
xor
divl
adc
fnstenv
xchg
add
loope
push
js
fdivrs
imul
lods
out
sub
inc
sbb
arpl
adc
pop
insl
fnstenv
sti
icebp
adc
pop
andb
fildll
mov
mov
repnz
call
cmp
pop
outsb
inc
fstps
dec
mov
dec
lods
push
mov
shlb
nop
pop
lock
push
mov
int3
hlt
ja
es
iret
pop
les
mov
in
xchg
pop
icebp
negb
cmp
loopne
jg
inc
mov
push
xor
adc
in
mov
mov
fcomps
lea
and
shlb
loope
add
xlat
aas
test
pop
xlat
jg
lds
incl
lea
add
aam
test
sbb
cmpsb
test
mov
jae
call
cmpsl
repnz
xchg
cmp
inc
addb
mov
push
test
adcl
mov
jne
push
fwait
or
cmp
pusha
jbe
and
cs
lock
lret
and
jl
js
push
shrb
pop
dec
sub
ds
dec
pop
jne
das
out
enter
ljmp
add
push
outsl
ror
xchg
sub
outsb
push
ljmp
pusha
adc
daa
int3
clc
es
jmp
ret
dec
es
jb
mov
add
push
or
imul
rcrb
les
cli
and
mov
or
xorb
pop
rolb
fidivrs
jle
push
mov
pushf
jbe
movsl
sbb
or
pop
movsb
mov
xlat
das
jle
or
daa
fbstp
push
inc
js
add
es
or
test
movsb
imul
add
out
jne
call
outsb
pop
jo
imul
and
stos
scas
mov
int3
loop
aam
push
jp
pop
jmp
mov
pop
jp
mov
jo
or
popf
add
ds
push
mov
mov
jp
stos
sub
xchg
xchg
sub
into
push
mov
sbb
push
jle
push
dec
push
outsl
lret
out
mov
or
xor
mov
stos
iret
push
push
outsb
mov
frstor
xchg
or
jnp
inc
testb
fwait
inc
shrl
mov
fsubrs
jo
xor
sub
insl
ds
push
inc
inc
test
pop
or
pop
xchg
sub
outsl
or
inc
insb
mov
out
cltd
pop
out
xor
imul
out
add
imul
cwtl
shl
cmp
jle
les
leave
xor
adc
cmpsb
sahf
xor
outsb
daa
add
fcompl
addl
pusha
and
inc
push
sahf
loopne
push
push
sub
pop
mov
mov
arpl
testl
jae
fisubl
xchg
outsl
mov
in
sarb
jmp
out
cs
jnp
adcb
and
jae
jne
cmp
js
adc
dec
adc
and
mov
pop
pop
cmp
insb
push
fnstcw
adc
enter
insb
sub
mov
mov
daa
jno
data16
repnz
aaa
dec
sbb
pop
aad
addb
sbb
rcrb
lods
jne
jne
test
dec
jmp
mov
or
mov
andl
jle
or
mov
cli
jg
fisttps
adc
loopne
out
stos
or
es
push
jne
push
pop
cmp
add
and
ja
push
loope
lahf
add
mov
mov
out
inc
rorb
dec
mov
and
mov
fdivrl
test
test
stos
mov
and
std
aad
popf
mov
je
rcll
or
ret
jecxz
inc
frstor
sbb
inc
add
fistps
movsb
cmp
pusha
scas
es
mov
cmpsl
mov
adc
loop
mov
fwait
sbb
stc
loope
fistpl
enter
adc
aam
cmp
popf
mov
add
jae
shll
mov
and
jmp
pushf
stos
pop
rol
or
cmp
ss
in
movlps
sbb
xchg
cmpsb
test
bound
pop
jmp
mov
imul
and
sbb
imul
or
pop
test
adc
jbe
adc
xchg
mov
hlt
mov
movsb
jnp
pop
dec
std
or
rcl
mov
pop
imul
mov
push
addr16
or
fcmove
sbb
subl
out
inc
leave
jae
jbe
mov
ja
push
js
fwait
pushf
inc
ljmp
aad
in
lret
and
inc
adc
enter
pop
incb
sbb
jp
ljmp
inc
arpl
jb
push
out
xchg
mov
out
jle
xchg
mov
cltd
xchg
mov
cs
xor
xor
xchg
mov
xor
and
bound
inc
popa
pop
addr16
mov
push
es
mov
divl
xor
ljmp
mov
ficompl
insl
andl
das
jae
jnp
lds
notl
or
cli
add
jns
sbb
mov
mov
jb
insb
jae
add
int
iret
sbb
aam
jne
jl
pushf
pop
insl
sbb
cmp
imul
adc
cwtl
decl
cltd
idivl
lret
xchg
sub
jb
mov
mov
mov
add
cmp
les
push
mov
mov
outsl
inc
sub
push
and
sbb
mov
mov
sbb
ja
lret
push
insb
xchg
mov
into
mov
cwtl
aam
inc
js
pop
test
mov
add
push
and
pop
jmp
or
jne
loop
pop
dec
cmp
sub
std
shll
inc
lret
or
ljmp
push
bound
out
cmp
sti
insl
movhps
xchg
mov
jno
xchg
loope
xchg
outsb
lcall
pop
bound
nop
xor
popa
clc
push
lret
cmovg
cmp
and
cmc
or
mov
subl
adc
out
inc
loop
sti
xchg
mov
xchg
add
out
mov
dec
jbe
and
inc
or
cmpsl
jnp
mov
lods
pop
ds
add
or
cmpsb
mov
dec
lret
pop
pop
jb
dec
cmp
xchg
cwtl
jo
insl
into
cmp
sbbl
shlb
clc
push
xor
inc
pop
clc
ja
loopne
jg
sahf
test
les
sbb
sub
jae
cmp
push
mov
add
cmpsb
xchg
mov
sti
sub
pop
out
dec
mov
mov
mov
mov
aaa
push
fwait
test
std
inc
orps
mov
inc
rcll
or
cmp
into
xchg
fadd
mov
adc
dec
lods
lock
push
lock
cmp
jne
and
jge
pop
enter
clc
enter
push
mov
js
sub
xor
sub
dec
inc
scas
lcall
cmp
inc
jmp
push
popf
pop
iret
daa
xor
xchg
dec
mov
jmp
and
jmp
push
lods
jg
in
pushf
jmp
cwtl
xor
xor
cmp
cmpl
inc
dec
xchg
outsl
into
mov
inc
outsl
jle
push
cmp
dec
pop
in
pusha
push
call
add
push
rol
jle
clc
icebp
cmp
dec
push
popf
jl
xlat
mov
mov
sub
sub
es
pop
xchg
mov
imul
lret
rcrb
jle
jle
popa
jmp
cmp
dec
and
add
and
mov
cmp
mov
rcrb
mov
sbb
xlat
std
dec
xor
inc
insl
xor
notl
mov
inc
imul
mov
add
cmpsb
push
mov
mov
mov
mov
les
sbb
fstl
jnp
pop
nop
xor
sbb
and
idivb
enter
daa
add
lret
sbb
add
cs
cltd
xchg
pusha
js
jnp
push
dec
xchg
out
sbbb
or
pop
mov
jecxz
addr16
icebp
icebp
mov
adc
ret
rclb
cmp
xchg
test
lds
mov
sbb
pusha
inc
cmp
stos
insl
mov
dec
jecxz
cli
rcl
out
mov
adc
imul
dec
cwtl
mov
push
nop
aam
mov
jmp
mov
mov
and
mov
ret
pusha
repz
lods
lods
shl
adc
jl
daa
xor
pop
inc
scas
aam
shrb
jg
movsb
pop
hlt
fdivr
lret
jle
scas
mov
out
push
sub
xchg
mov
dec
fisubrs
mov
dec
add
mov
adc
or
xor
push
push
enter
jo
inc
mov
mov
mov
jge
cwtl
subl
and
cmpsl
ds
xchg
scas
and
dec
pop
adc
xchg
mov
lahf
notb
adc
push
sahf
and
sub
inc
adc
cltd
test
push
add
pop
and
inc
stos
lods
fadds
stos
stos
lock
ljmp
mov
adc
bound
xchg
sti
sub
leave
mov
aad
cmp
jb
mov
jp
mov
mov
addb
cld
mov
xor
xchg
lods
jns
mov
int3
adc
ret
add
mov
jp
jmp
push
and
adc
bound
mov
pop
loop
lcall
cmpsb
aad
push
mov
mov
jne
add
scas
inc
stos
xor
push
push
inc
inc
jmp
dec
ljmp
dec
inc
push
in
xor
lret
orb
je
or
and
test
outsb
out
jl
rep
int3
aad
cmpsl
syscall
sub
ss
iret
mov
in
ds
into
xor
ds
xchg
data16
mov
stos
pusha
in
inc
jb
jno
adc
bound
mov
xchg
enter
jge
cmp
lock
xor
jnp
int3
pop
cmp
out
xchg
pop
add
inc
or
fucomip
sbbb
jge
das
xor
jns
subl
xchg
inc
loopne
rcrl
jp
pop
jmp
stos
fadds
fsubs
pop
and
fisttps
or
cli
shrl
out
insl
jno
xchg
and
adcb
fisubl
enter
popa
adc
pop
pop
mov
inc
mov
push
dec
mov
dec
mov
stc
enter
sbb
adcb
sbb
ret
pop
test
pop
xlat
fbstp
aam
loopne
xchg
shl
cmp
inc
icebp
fiadds
push
aaa
decb
pop
adc
ss
and
dec
decl
xor
inc
lcall
and
bound
push
push
in
cmp
rcll
cmp
mov
mov
sbb
fnsave
hlt
mov
pusha
mov
push
xchg
or
cltd
inc
cmpsb
inc
cmp
data16
xor
mov
push
inc
mov
jge
pop
pop
sub
pop
xchg
and
iret
mov
sub
inc
mov
inc
jno
jmp
loopne
push
ljmp
insb
fwait
outsl
and
push
pop
or
xchg
ss
mov
stc
out
fwait
sub
aam
adc
xor
mov
mov
add
and
movsl
mov
push
add
aas
lahf
clc
mov
ret
and
leave
pusha
pushf
lea
scas
rorl
lds
ljmp
stos
add
movb
dec
dec
rol
fldenv
xchg
out
insl
inc
popf
mov
mov
out
inc
data16
xchg
xor
inc
pop
out
pop
sub
fsubr
fs
xchg
pop
mov
pop
mov
xor
lock
int
icebp
mov
das
imul
popf
push
mov
cmpsb
ljmp
jno
mov
loopne
push
mov
jmp
mov
jp
push
push
les
scas
fwait
adc
test
inc
and
cmpsb
push
and
sub
imul
xchg
mov
sar
inc
icebp
push
mov
add
cmp
push
add
push
out
test
cmc
nop
jns
stos
push
outsl
jnp
lret
andl
das
scas
nop
dec
sbb
mov
ret
jle
enter
jne
andb
xor
lds
lcall
mov
cmp
scas
xchg
shr
sub
xchg
fsubrl
cmp
in
aaa
outsl
popf
aad
cmpsl
push
cmp
ljmp
or
mov
iret
aad
repnz
adc
adc
dec
sub
or
mov
dec
cmpps
or
jle
inc
loopne
xchg
cmp
imul
push
mov
jp
andb
subb
sbb
into
or
ret
and
cli
or
inc
and
xchg
xchg
insb
or
xchg
push
or
pop
loopne,pt
add
aaa
rclb
pop
mov
jp
js
loopne
dec
adc
daa
adc
dec
rcll
jge
cld
inc
fisttpll
push
iret
loopw
pop
gs
clc
add
push
out
enter
shl
test
cmp
dec
dec
push
jl
into
das
jp
mov
ljmp
adc
mov
dec
or
in
jle
call
clc
shll
ja
mov
ror
xchg
ds
mov
jecxz
mov
inc
lods
in
mov
lock
popf
jmp
stc
jo
jmp
cmp
sub
aaa
rcrb
cli
adc
cltd
lret
nop
mov
repz
aas
dec
push
cmp
out
cmc
sbb
pop
and
push
pop
imul
inc
xchg
jb
push
cmp
ss
das
imul
scas
jb
pop
jecxz
pop
xchg
add
sahf
std
shl
std
or
add
push
xchg
add
and
xchg
popf
jb
loope
xchg
int
sti
int
pop
pushf
mov
jge
pop
cmpsb
pop
pop
scas
mov
mov
mov
cmp
mov
pop
test
jno
xor
pop
fiadds
push
pop
insb
sbb
xchg
dec
cmp
es
loopne
rcll
push
test
pop
push
sub
aas
push
dec
lea
sub
sbb
adcl
mov
fstpt
or
sarl
clc
insb
subb
cmpsl
ds
dec
repz
cs
loope
bound
cld
add
adc
imul
lods
ljmp
hlt
jp
test
jnp
xor
clc
xchg
or
sbb
out
int
in
mov
cmp
mov
pop
movsl
inc
pop
jmp
or
push
cmp
rorb
call
add
mov
push
test
or
cwtl
sub
inc
int3
push
out
and
cmpsl
cld
inc
xor
push
iret
lahf
int3
arpl
jo
pop
ss
outsl
jmp
push
cmp
int
ljmp
cmpsb
sbbl
jg
std
mov
cmpsl
inc
push
rorb
incl
movsl
jl
add
cmp
movsl
icebp
cltd
fisubrl
sbb
xchg
sub
loop
adc
mov
xrelease
and
fcoml
mov
ja
dec
out
dec
dec
pop
and
sysret
rsm
mov
sub
lods
lret
sbb
popa
insl
loopne
xchg
sub
mulb
inc
mov
and
adc
push
push
jle
cmp
mov
lcall
and
rcrb
dec
mov
out
mov
jbe
mov
push
dec
xchg
xchg
mov
jno
lret
jne
jae
and
adc
insl
loopne
mov
jg
push
aam
dec
lret
push
inc
xlat
xor
int3
ror
xor
das
stc
mov
sub
insl
cmpsl
jp
push
sbb
aaa
and
movsb
insb
xor
test
lods
inc
ljmp
mov
or
popf
out
cmp
jno
int
push
negl
ret
data16
lcall
push
dec
leave
cmp
sbb
adc
pop
cltd
mov
pop
test
clc
dec
dec
adc
xor
dec
sub
arpl
adc
xchg
psllw
inc
ds
arpl
fstpt
cmc
adc
bound
cs
push
aaa
inc
push
sub
dec
arpl
inc
push
jne
xlat
sub
inc
cs
lcall
and
je
push
inc
insl
divb
int3
mov
xchg
mov
pop
mov
scas
aam
and
dec
divb
in
dec
push
fisttpll
jl
mov
adc
cmpsl
xchg
mov
dec
mov
push
inc
push
leave
push
lea
js
pop
push
into
xchg
aas
inc
sbb
fsts
dec
int
jae
lods
mov
test
fstl
sub
insb
mov
dec
aam
test
mov
out
stc
out
sbb
or
mov
nop
shrb
popf
dec
xor
xchg
push
cmp
test
loope
ss
cmpsl
mov
mov
int
add
movsl
inc
cmp
add
notb
or
outsb
mov
rorb
jnp
addl
imul
adc
and
cltd
inc
sub
and
ret
std
pop
jb
movsb
cli
loop
out
test
aam
lcall
inc
or
scas
loope
testl
inc
push
jge
test
das
sbb
mov
subl
ja
cmp
imul
xchg
pop
sub
ds
mov
lret
pop
jmp
adc
sti
inc
lds
mov
test
scas
jp
sbb
lret
mov
pop
lcall
cmp
mov
dec
push
aaa
push
xor
or
cmp
out
sub
mov
dec
mov
cltd
fsubrs
mov
mov
imul
cmp
adc
popf
xor
ds
decb
inc
cmpsl
les
js
inc
mov
ds
decl
stc
xor
fwait
daa
adc
rclb
sbb
ror
or
xor
cmpl
jmp
test
fcomi
dec
pop
sub
pop
xchg
sbb
popf
xor
mov
or
inc
dec
out
sahf
mov
push
std
push
inc
mov
push
jmp
sbb
inc
sbbb
icebp
adc
pop
test
jle
scas
jg
push
dec
add
mov
xor
pop
in
lahf
mov
fiadds
pop
imul
les
sbb
test
aas
shll
and
sti
cltd
mov
jnp
jb
inc
fcmovb
jo
dec
mov
out
xchg
sbb
pop
iret
popf
xor
mov
iret
fcoml
jo
decb
icebp
bound
lds
sub
xor
aas
loop
mov
out
pop
test
jp
push
and
inc
fucomp
test
inc
mov
jmp
lret
add
movsb
sti
cmp
loop
sbb
xor
mov
adc
cmc
adc
hlt
out
pop
mov
push
pop
pop
adc
aad
xor
mov
push
repnz
xrelease
pop
cmp
loop
cltd
decl
and
pop
xlat
bound
jb
scas
shl
xor
xchg
imulb
push
fdivrl
test
dec
adc
xor
jb
xchg
sahf
adc
insl
into
adc
xor
dec
into
sub
jle
push
jbe
jae
cmpl
test
fs
sbb
mov
ficomps
mov
sbb
lods
sbb
es
cmp
lods
mov
dec
insb
fisttps
rep
popf
out
leave
in
mov
fdivr
mov
jle
jbe
push
nop
xchg
shll
imul
jns
subb
int
cli
inc
test
lock
stos
std
ficoms
sub
sbb
test
jp
push
pusha
jne
lea
in
mov
into
mov
pop
out
enter
in
add
dec
ljmp
ret
mov
in
ret
in
jg
xchg
inc
push
sub
stos
jb
js
int3
cmp
mov
or
and
jl
lret
inc
cli
fmuls
les
jne
mov
xchg
add
sub
mov
mov
repnz
mov
dec
cmp
cmpsl
rorb
dec
pop
adc
pop
data16
xlat
mov
in
ret
leave
insl
inc
aas
mov
push
movsl
xchg
fcoms
cmc
sub
push
clc
cmpsl
pop
push
sbb
mov
lods
lock
cmp
dec
iret
ss
ret
es
ficoml
gs
pusha
jnp
xchg
mov
lahf
nop
add
les
cltd
jns
mov
mov
jnp
and
std
add
or
and
sbb
aad
hlt
mov
mov
jmp
pushf
dec
pop
and
dec
mov
xchg
in
or
mov
inc
jmp
adc
add
arpl
sbb
mov
mov
mov
sub
cmp
dec
mov
xchg
lea
and
or
push
push
push
push
cli
popf
ret
jp
adc
cltd
call
xor
mov
jl
ret
jnp
push
mov
push
push
xchg
mov
mov
movsb
mov
mov
mov
jb
xchg
mov
ja
call
sub
fidivl
ret
data16
inc
xchg
gs
loop
xor
test
mov
pusha
mov
clc
inc
dec
xchg
push
adc
lcall
xchg
jle
insl
sub
sbb
scas
sbb
enter
xchg
or
adc
jbe
pop
test
js
and
mov
push
mov
add
outsb
call
call
cmp
xchg
xchg
sub
dec
mov
fldcw
in
sar
push
mov
cwtl
scas
test
mov
data16
and
push
jge
mov
aad
out
jle
imul
sub
rcrl
mov
xor
iret
dec
fdivl
std
sub
mov
gs
pop
outsl
cmp
cmp
pop
jo
push
sarl
fstl
pushf
xor
xchg
inc
stos
mov
out
sbb
add
stos
push
in
fisttpll
jno
rorb
adc
and
outsb
pop
mov
in
add
inc
fsubs
jne
inc
rorb
jae
pop
mov
fdivrl
mov
inc
cmp
inc
fisubrs
jo
mov
pop
out
fmull
xor
cs
push
test
rcll
push
push
add
out
fdivl
dec
sub
xor
push
insb
mov
sub
jo
mov
mov
jge
into
gs
lea
cmp
jne
push
push
dec
add
push
loope
push
xlat
scas
sbb
lods
jge
arpl
fdivrs
pop
ja
pop
sbb
jae
xchg
xor
push
fisubs
or
pop
mov
or
das
push
lcall
or
js
lea
lret
xchg
loope
mov
sbb
lcall
mov
inc
and
jp
cmpl
mov
ret
mov
xchg
je
sub
arpl
stc
mov
shrb
lods
mov
xchg
lea
inc
scas
mov
aaa
lcall
push
cmpsl
add
and
xor
nop
cmp
sub
sbb
sbb
mov
popf
jo
out
sbb
pop
mov
inc
inc
cmpsb
and
add
shlb
inc
jg
mov
in
addl
xor
leave
cmp
pusha
add
or
cmp
push
dec
adc
data16
pop
inc
lods
cmp
push
or
subl
lods
iret
mov
mov
stos
lods
adc
jb
cmc
xchg
sbb
dec
addr16
dec
inc
loop
in
out
add
das
scas
test
mov
fisubs
dec
mov
bound
dec
pop
dec
jecxz
sti
js
xor
scas
in
or
mov
jl
add
mov
adc
mov
push
ja
sti
push
loop
dec
xchg
xchg
dec
mul
enter
out
cld
mov
or
dec
jl
mov
xchg
xchg
sub
stos
adc
add
aaa
lret
mov
xchg
dec
mov
jl
pusha
popf
jg
mov
clc
push
jmp
pusha
inc
fs
xor
fists
xor
jg
cmp
mov
in
ret
mov
pop
bound
bound
inc
rcrl
popf
cmp
outsb
inc
sbb
lds
leave
je
jbe
mov
sub
push
insb
decl
lahf
push
push
cltd
inc
jnp
inc
fdivrp
inc
and
push
sbb
inc
sbb
pop
cld
pop
dec
outsb
popf
xor
inc
cmp
mov
sbb
iret
cmp
pop
movsb
addr16
jne
and
mov
outsl
add
jg
out
fidivrl
repnz
ret
popf
cmp
cmpsl
jecxz
ret
adc
mov
sub
lds
dec
inc
xor
dec
pop
cmpsl
loopne
sub
loopne
imul
pop
lahf
sbb
xchg
mov
imul
pop
cmpsl
ret
icebp
push
pop
dec
negl
ficompl
test
cmp
lods
outsl
jg
lods
adcb
push
pop
loopne
and
popa
clc
dec
or
jp
jg
jecxz
and
enter
subb
add
xchg
movsl
stc
jmpw
test
mov
in
cmpsl
lods
cmc
sub
or
push
sahf
xchg
sub
inc
int3
out
shrl
inc
push
movsb
mov
sbb
cmp
data16
shll
or
pushl
iret
xor
mov
pushf
call
lds
insl
jns
dec
fstpl
mov
loop
jo
xchg
xor
xor
cmp
sbb
out
mov
pop
lret
mov
mov
in
cmp
nop
jnp
in
test
in
or
inc
ds
bound
or
les
cld
sub
jle
fimuls
lret
pop
shrb
push
push
xchg
dec
movsb
add
add
icebp
mov
cmp
xchg
jg
pop
inc
stc
jl
shrl
into
lock
jge
lock
sub
xor
and
sbb
outsb
pop
mov
or
or
sbb
mov
jo
mov
jge
xor
xchg
add
lds
inc
pop
insb
jl
dec
dec
rep
fwait
pop
fyl2xp1
out
xor
jnp
push
cmpl
orl
insb
imul
mov
cs
mov
andb
rcrl
adc
jmp
inc
call
push
adc
mov
push
xor
jae
inc
sub
stos
xchg
pop
mov
stos
cld
test
scas
ljmp
mov
cmp
xchg
pop
rol
jecxz
test
dec
mov
jge
jecxz
ljmp
jns
cmpsb
push
pop
cmp
add
add
testl
addr16
add
jge
fsubr
mov
push
cmpsl
mov
ss
pop
xchg
call
lock
mov
stc
loop
push
mov
add
cwtl
sub
sbb
fmull
in
push
dec
popf
femms
mov
xchg
mov
pop
cmp
add
imulb
lock
jecxz
jmp
xor
lods
push
push
mov
fldl
roll
jl
mov
mov
sbb
push
aad
xlat
mov
pop
add
arpl
pop
leave
push
inc
fildl
repnz
lds
push
fdivs
inc
aam
pop
test
out
scas
int
mov
push
push
adc
cmp
addl
repz
sub
and
mov
push
xor
and
rep
sahf
iret
push
out
shlb
jno
loopne
mov
mov
pop
dec
out
xchg
push
sbb
fstl
mov
fnstenv
and
stc
aas
and
mov
call
lret
addb
or
inc
gs
imul
lods
push
inc
loop
and
push
mov
ss
cltd
or
cwtl
mov
pop
inc
jecxz
jo
mov
jg
pop
outsb
cmp
mov
push
repz
leave
add
in
test
push
imul
out
jle
and
adc
mov
jl
mov
jl
wrmsr
js
bound
xor
cmp
or
in
gs
cmpb
xchg
ds
jno
and
jmp
jg
push
xchg
pop
dec
dec
push
mov
popf
lea
xchg
or
repz
adc
and
cmp
fdivs
pushf
push
xchg
idivl
mov
inc
lods
push
fists
mov
dec
cmp
jnp
push
imul
in
hlt
bnd
rcll
mov
mov
inc
pop
adc
scas
bound
aad
fnstcw
mov
fmuls
dec
out
pop
fnsave
sbbl
add
int3
sub
fsubrl
cld
push
mov
lcall
xchg
pop
and
mov
outsl
push
cmp
sbbl
adc
inc
int3
rorb
push
fnsave
into
adc
roll
inc
js
add
push
movsl
sti
mov
sub
pop
pop
lahf
repnz
pop
adc
sub
imul
sti
leave
fldt
inc
xlat
mov
out
stos
lods
pop
lods
mov
pop
test
inc
mov
mov
mov
add
les
clc
mov
push
ljmp
test
cmp
loope
and
mov
adc
jb
loopne
stos
ja
mov
inc
pop
mov
mov
sbb
sub
mov
mov
sbb
mov
and
adc
movsb
mov
sub
mov
sbb
lcall
jno
inc
out
push
inc
xchg
les
shlb
jge
repnz
clc
dec
or
neg
jns
or
dec
xor
out
inc
int
out
xchg
xchg
rol
sbb
adc
inc
adc
xchg
mov
stos
inc
pop
testb
xor
sub
fiadds
and
ds
shl
divb
sbbl
sti
in
push
loopne
scas
and
lds
jb
xor
adcb
icebp
xor
outsb
jnp
dec
outsb
jl
rorl
cmp
insb
stos
pushf
fwait
sbb
mov
out
das
lahf
xlat
test
mov
hlt
dec
add
scas
shlb
pushf
xor
mov
ror
jns
add
outsl
push
fmull
fldt
mov
mov
je
cwtl
mov
mov
fldenv
imul
scas
add
jle
adc
mov
aaa
add
adc
jle
insl
lock
test
mov
dec
in
sbbb
imul
push
lods
lret
push
mov
stos
mov
in
int
xchg
jmp
mov
jns
jo
std
rep
mov
decl
popa
jecxz
mov
inc
sub
adc
iret
leave
ret
data16
mov
mov
shrb
push
fs
icebp
test
mov
push
xchg
xor
push
mov
int
jp
inc
push
test
lret
xor
push
sti
stc
pop
in
les
cmc
orl
andb
push
ljmp
es
adc
inc
mov
cmc
push
pop
add
xchg
aam
insl
test
push
pop
sti
lcall
add
outsb
xor
divb
xor
bound
shrb
lahf
in
adc
jl
into
adc
add
pop
icebp
dec
and
roll
or
cmp
sbb
test
pop
mov
sti
sarl
adc
sub
xchg
add
or
jo
jmp
add
dec
xor
gs
xor
inc
sbb
cmp
xchg
cmp
inc
movsb
fsubr
out
stos
cld
xchg
ret
addr16
ret
sahf
xor
lcall
pop
jecxz
or
pop
addr16
lret
cmp
push
lock
and
xor
loope
and
popa
ss
sub
or
fs
pop
ds
cmpsb
out
aad
and
int
popa
push
popa
pop
insb
ror
and
and
sbbb
cmp
stos
sub
xor
mov
in
xchg
xchg
inc
mul
xchg
sub
sub
lds
jnp
push
xlat
sbb
mov
insb
jle
pop
xor
aad
mov
ret
orb
and
xor
cs
lds
js
push
rorl
shlb
clc
push
push
imul
xor
mov
cmp
dec
sub
pop
lock
daa
outsl
mov
mov
loopne
pop
in
test
movsl
xor
mov
mov
cmpsl
adc
jmp
or
orl
adc
push
lea
es
mov
lret
jp
add
add
cmp
aaa
push
jge
jp
lcall
mov
ficoml
add
mov
cmp
cmp
loop
into
xor
aad
and
xor
pop
test
push
mov
sub
xchg
sbb
addr16
aaa
and
cmp
push
mov
pop
movsl
mov
dec
xchg
jno
cli
setp
insb
loopne
pop
sahf
push
dec
add
fbld
cmp
outsl
jnp
dec
dec
push
std
jge
add
xchg
mov
loope
stos
es
pop
or
mov
jge
aad
xchg
mov
scas
add
adc
push
pop
mov
mov
loopne
aaa
pusha
imull
push
sbb
sbb
mov
push
inc
iret
xor
loop
test
inc
icebp
out
int3
jnp
cltd
aas
push
out
jns
repz
sub
cmp
in
popa
push
ret
fbld
insb
pusha
pop
lret
outsb
icebp
out
xlat
lahf
cld
inc
sti
sbb
and
dec
inc
out
ss
jno
fisubrl
ss
popa
or
sub
push
daa
data16
cwtl
xlat
pop
mov
jecxz
cmp
and
xchg
aad
inc
in
sbb
pop
daa
testb
ficoms
or
sbb
in
adc
lret
or
cmp
pop
add
cld
xor
mov
push
jmp
loopne
sbb
outsl
test
testb
popf
stos
adc
sub
xchg
ficoms
xor
cmp
pushf
fwait
in
jo
cmp
cmp
subb
test
cmpsb
xchg
mov
jle
insb
scas
push
sbb
cmp
test
insb
jl
andl
icebp
lret
jne
mov
ljmp
sbb
fistl
sub
insb
addr16
add
test
xor
popf
push
cltd
das
sahf
sbb
aaa
mov
loop
push
sbb
add
aas
add
or
das
or
test
cmp
loopne
xor
push
pop
outsl
xchg
test
inc
push
mov
push
scas
jbe
and
xchg
cmc
ljmp
in
std
and
adc
sbbb
sbb
mov
aaa
xchg
fldt
mov
das
add
jecxz
in
out
push
jl
jg
jl
and
lods
adc
stos
scas
lods
mov
dec
mov
push
lahf
jno
adc
mov
or
xor
div
fsts
iret
sub
inc
out
int
test
js
pushf
test
jns
mov
andb
in
push
out
lds
mov
cmp
jbe
xor
mov
scas
mov
push
xor
fsubrs
pop
in
ds
insl
xchg
mov
cmp
sub
mov
mov
jb
sarb
xchg
das
mov
xor
bound
in
and
jo
jl
sub
push
imul
xchg
out
aaa
popf
pop
push
lods
inc
aaa
in
mov
sarb
fcompl
push
dec
enter
les
xchg
bound
adc
stc
sbb
leave
or
lods
repz
jmp
push
sub
jae
mov
rclb
adc
or
mov
mov
out
jl
dec
stos
cmpsb
nop
scas
ret
andb
imul
xchg
sbb
sub
sbb
lods
xchg
and
push
pop
out
dec
mov
rcl
mov
and
pop
cwtl
or
sbb
xor
jg
xchg
sub
jp
push
pop
cmp
mov
add
fs
lea
cmp
adc
bound
xchg
pop
loop
stos
mov
mov
mov
inc
or
jg
adc
aad
lods
mov
cmp
xchg
sbbb
popa
push
dec
pop
add
sti
jo
dec
mov
inc
and
sbb
cmp
cltd
in
jbe
and
ret
je
call
std
mov
int
pop
cli
ds
insl
sbb
xchg
cltd
sub
dec
add
lret
cmp
jo
sbbl
imul
cld
pop
fwait
inc
mov
repnz
fs
imul
into
filds
jle
ss
cmpsl
movb
gs
cs
aam
lods
nop
mov
fdivrp
test
mov
add
cwtl
mov
movsb
dec
xchg
push
subb
rcrb
dec
sbb
mov
mov
xchg
ljmp
and
sarb
or
lds
sbb
add
into
das
addl
pop
xor
popf
js
mov
sub
arpl
lea
outsl
jecxz
and
xchg
dec
xlat
mov
negb
and
mov
scas
sub
jecxz
out
sbb
fwait
ret
inc
or
pop
dec
and
lods
stos
xchg
sub
out
pop
mov
mov
outsl
loop
mov
push
sbb
in
repz
add
popf
xor
negl
mov
mov
ret
push
xor
loopne
sub
add
jbe
xchg
cli
adc
loop
sahf
loop
mov
xor
mov
jmp
or
movsl
les
test
push
sti
cli
cwtl
das
sub
subl
sub
pop
push
push
pop
lcall
clc
cmp
imul
cld
fucomip
pop
add
fmul
arpl
and
out
nop
inc
jmp
push
push
in
dec
nop
pop
fidivl
lods
mov
jne
pop
lahf
sbb
xchg
outsb
imul
cmp
scas
in
sub
and
mov
in
push
or
shl
add
mov
cltd
repnz
jb
cwtl
iret
popa
addb
push
movb
lret
push
in
mov
add
pop
push
and
jecxz
mov
call
sarb
cmp
scas
push
sbb
xchg
call
dec
lds
jae
popa
add
into
mov
lea
jp
test
pop
push
xchg
xchg
call
cltd
xor
push
push
mov
jbe
push
sbb
and
cmp
jg
inc
in
loopne
xchg
xor
fsubrs
lret
jl
inc
push
cltd
dec
js
adc
xchg
cltd
dec
mov
aas
test
jno
shrl
xchg
cltd
xor
dec
lods
fisttpl
test
push
adc
push
int3
fdivs
adc
inc
inc
mov
leave
fstps
adc
mov
ret
fdiv
mov
and
stc
push
sbb
or
aam
test
iret
mov
mov
xorb
cli
aad
lcall
cld
rorb
jns
ss
int3
jl
pop
scas
pop
jg
popf
inc
mov
add
xlat
aas
subb
jo
sub
push
arpl
cmpb
or
fwait
sub
pop
shrb
jge
xchg
data16
fwait
mov
jmp
inc
insl
lcall
inc
and
cmpsl
fistps
jno
adc
add
in
cli
adc
xor
mov
xchg
dec
in
mov
xchg
outsb
sbb
int3
xor
aad
dec
mov
mov
movl
mov
gs
hlt
xchg
pop
cmp
outsl
sub
xchg
pop
cmc
enter
dec
pop
and
pop
push
je
jae
inc
in
mov
push
out
enter
add
stc
mov
push
icebp
mov
jbe
add
out
pop
adc
sbb
jge
lds
inc
mov
sahf
lods
add
sbb
imull
add
mov
xchg
ss
push
lock
push
leave
test
outsl
adc
cmovno
inc
shrl
cmpsb
lahf
jp
data16
push
lods
mov
mov
push
dec
pop
ja
sub
fwait
cwtl
mov
jb
enter
mov
outsl
imul
daa
mov
negl
mov
push
shlb
sbb
adc
and
outsb
mov
outsl
daa
dec
daa
fwait
and
push
aas
inc
xlat
push
leave
insb
sar
pop
lea
mov
negl
adcl
push
hlt
mov
in
cltd
sub
es
or
fcompl
sti
dec
test
inc
repnz
lcall
sbb
pop
push
sbb
inc
dec
sarb
pop
scas
rolb
stc
mov
js
scas
out
push
bound
movsl
and
leave
inc
mov
js
adc
icebp
idivl
adc
mov
fisubs
pop
xor
xchg
jnp
push
inc
lea
or
adc
addb
mov
ret
or
push
cmpsb
cltd
xchg
and
ret
or
sarb
xchg
mov
jle
ljmp
or
push
jnp
lods
inc
int
pushf
arpl
lret
cmpsl
inc
pop
mov
mov
mov
imul
mov
lret
adc
mov
imul
and
dec
out
dec
or
js
cld
push
divb
dec
sahf
in
dec
dec
dec
add
test
cmpsb
mov
lods
je
jbe
xchg
movb
test
shrl
add
dec
inc
orl
aad
lock
inc
idivb
in
dec
cmp
jo
test
fmuls
repz
fbstp
popa
mov
outsl
jno
mov
addr16
adc
add
jae
mov
outsb
inc
xchg
xchg
add
int3
sbb
mov
add
xor
js
push
nop
push
popf
adcb
xchg
imul
test
mov
push
stos
je
inc
pop
call
cmp
dec
sub
or
cmpsl
sbb
fidivrs
push
loopne
xchg
imulb
mov
dec
lret
ret
jns
lret
xor
pop
xor
in
iret
push
inc
mov
sti
aam
fcomi
or
jbe
in
mov
lea
push
rolb
xor
jle
in
sub
test
lods
jmp
sub
ficompl
mov
rclb
andl
cmp
leave
xchg
xchg
pop
mov
cmc
mov
sub
mov
cmc
push
cmp
mov
clc
xor
push
add
stos
mov
cld
cmp
inc
lods
pop
or
dec
cmpsb
adc
int3
mov
pop
or
and
stc
popf
lcall
inc
xchg
fistpll
pop
dec
shrl
es
lods
scas
mov
sub
mov
xchg
test
xchg
stos
ror
pop
push
xlat
icebp
sbb
sub
xchg
sub
fwait
aad
xor
cmpsl
int3
jo
inc
pop
lock
sti
mov
push
test
pop
mov
mov
xor
adc
dec
cmp
sub
test
adc
mov
inc
stos
adc
imul
mov
stc
dec
push
nop
out
inc
popa
jae
insl
jge
adc
add
mov
dec
movsl
je
addps
lods
ljmp
pushf
pop
mov
or
sub
je
lret
sbb
repnz
cli
repnz
ljmp
shl
ret
repnz
pop
hlt
loopne
mov
cwtl
test
test
lods
add
xchg
outsb
push
xchg
jae
jl
cmp
fucom
xor
sti
xchg
push
adcl
push
and
adc
xchg
scas
push
pusha
scas
and
loop
subb
xor
sub
inc
pop
dec
popa
ja
daa
mov
shrl
mov
or
idiv
fwait
cmp
dec
xchg
or
arpl
pop
repz
jne
ds
mov
jb
inc
cmc
adc
fistl
jne
push
fisubl
mov
xor
dec
jp
ljmp
out
rorb
into
loop
out
jae
push
pushf
or
sahf
xlat
mov
mov
or
xchg
sbb
mov
fimuls
push
jo
bound
cmp
xor
add
arpl
sbb
stc
inc
xor
adc
stos
sub
je
inc
das
data16
fstpl
jb
pop
fsubl
push
mov
cmove
popa
movsl
in
pusha
push
sbb
mov
data16
inc
mov
and
xchg
pop
jae
in
push
jl
pop
mov
sbb
gs
cmp
pop
and
adc
js
lods
jo
inc
cmp
jb
lock
imul
mov
jbe
push
in
mov
clc
sub
in
les
loop
push
aad
mov
repz
add
cmp
dec
orl
fstl
aaa
into
pop
mov
out
dec
mov
sub
bound
shrl
dec
mov
cmp
ret
xchg
out
pop
outsl
sub
cs
femms
movsl
and
andl
add
pop
or
fldcw
sub
push
ror
pop
or
mov
out
mov
call
or
loope
jns
xchg
dec
mov
fldt
xchg
jge
xlat
push
inc
pop
mov
ret
cmpsl
cltd
repz
pop
repnz
ds
pushf
mov
test
or
jns
js
mov
inc
fstpt
int3
xor
xlat
cmp
mov
pop
fbld
jae
mov
lea
inc
in
dec
aad
add
xor
push
jno
pop
and
js
or
fsts
xchg
jmp
sbb
jecxz
push
lock
jnp
repz
pop
ficoms
insl
test
data16
fwait
and
in
xor
xchg
dec
popl
mov
or
mov
mov
fsubr
push
xchg
into
pusha
jne
outsl
mov
das
jne
cmp
stos
adc
push
inc
sahf
sbb
test
push
js
and
push
adc
call
mov
lret
addr16
dec
loopne
xchg
or
lahf
ja
mov
aas
inc
push
jne
imul
insl
xor
ret
out
or
pop
pop
jbe
mov
add
aaa
push
popf
aas
shrb
call
test
xor
push
pop
pop
lret
and
fldcw
jo
popl
int3
lock
stos
dec
shll
adc
arpl
pop
jns
cmp
icebp
cmpsl
sbb
bound
popf
pop
mov
movsl
cmp
xor
adc
ficoms
xor
out
sbb
mov
sbb
insl
cwtl
and
mov
jl
loop
xchg
cltd
mov
or
pop
dec
and
jnp
and
sbb
rclb
incb
cmpsl
xchg
xor
cmp
fisttpll
xchg
sbb
arpl
xchg
ljmp
lods
int
fisubs
arpl
jne
sbb
push
push
je
dec
add
movsl
ss
sbb
sbb
add
jle
cmp
pop
inc
or
inc
out
subl
test
stos
xchg
jo
das
shl
dec
or
inc
test
jp
in
iret
inc
pop
inc
sbb
cltd
mov
jp
stos
or
mov
or
pop
mov
adcb
inc
inc
cltd
loop
xlat
adc
xlat
mov
mov
push
jecxz
in
add
aas
into
ficompl
loopne
cwtl
aad
cld
inc
add
scas
icebp
out
mov
lds
ret
inc
call
push
push
loope
xchg
das
lea
push
cmp
scas
sub
pop
push
inc
push
cltd
xchg
fwait
xor
repz
cmp
imul
fdivrl
xchg
inc
lock
mov
hlt
mov
inc
mov
ljmp
mov
sahf
int
push
ss
loop
out
xchg
sbb
sub
ja
push
incb
push
jae
or
decb
out
insb
jg
notl
je
inc
lods
mov
jmp
jmp
mov
inc
sub
nop
add
mov
dec
mov
loopne
or
push
jmp
mov
fisttpl
xor
stos
sub
push
inc
lahf
jecxz
dec
cmpsb
ljmp
cld
or
xchg
add
mov
shll
cmc
xchg
insb
or
xchg
hlt
add
lods
mov
pop
cmp
mov
dec
push
push
dec
cwtl
xchg
jl
adc
and
out
shl
call
sub
mov
cmpb
mov
jmp
cmpsb
jl
xchg
dec
leave
mov
adc
pop
loopne
dec
loope
pop
inc
or
mov
lock
push
movsl
add
js
mov
push
sbb
repnz
cmp
jle
xor
fwait
add
or
dec
push
mov
sbbb
or
inc
push
and
jp
sbb
add
fsubrp
inc
test
adc
call
dec
jno
cmp
adc
fisttpll
adc
push
dec
or
dec
mov
cli
inc
pop
mov
divb
xchg
lds
add
in
jg
decl
xchg
mov
aas
push
test
or
ss
ja
sbb
cwtl
out
inc
inc
into
sbbb
sti
ret
ds
cmp
inc
or
adc
push
out
aaa
stos
pop
outsb
mov
loop
add
inc
mov
clc
ljmp
jbe
cli
xchg
ds
cmc
outsl
push
daa
xchg
adc
jno
xor
test
ret
xor
out
dec
push
dec
add
call
test
dec
push
insl
ja
nop
jg
fidivl
loopne
pop
push
ss
out
insl
sbbb
enter
sbb
popa
adc
out
xor
sti
add
dec
dec
cwtl
data16
hlt
cmp
aam
out
insl
mov
cmp
mov
adc
pop
ret
and
dec
iret
das
dec
pop
insl
ds
add
mov
arpl
mov
int3
pop
iret
mov
int3
jecxz
data16
mov
jp
dec
arpl
mov
xor
fnsave
push
jecxz
enter
and
add
das
mov
fdivrl
f2xm1
xchg
push
pop
fisubrs
xchg
inc
fs
pop
mov
hlt
shll
sub
or
cld
dec
mov
dec
jne
repnz
mov
lock
push
mov
fbstp
adc
or
xchg
lods
lods
ljmp
and
cmc
loopne
in
rolb
hlt
jno
or
loop
jge
dec
cmc
pop
shrl
insb
jl
andl
xchg
test
sbb
add
int3
jg
sbb
mov
ss
addr16
scas
je
mov
inc
test
stos
adc
or
outsb
cli
cmp
adc
jp
jne
mov
jns
sbb
mov
adc
push
loopne
idivb
aaa
dec
pop
cli
out
xor
pop
mov
cmp
into
xchg
pop
lret
jbe
repz
cld
lods
xchg
push
pop
and
das
test
xchg
outsb
and
js
imul
adc
xchg
ljmp
and
inc
mov
inc
imul
in
pop
insl
aad
mov
popf
movsl
aas
mov
dec
jnp
push
in
rclb
leave
pusha
pop
push
rcr
mov
aas
mov
outsl
repnz
cld
hlt
mov
jl
add
ret
imul
jl
int
mov
mov
shll
add
movl
stos
out
lods
jmp
test
and
cwtl
fwait
mov
enter
and
xor
xor
jle
popa
arpl
pop
sbbl
loopne
mov
aam
xchg
sub
pop
push
sahf
cmp
mov
or
imul
pop
mov
xorl
sbb
loope
dec
cmc
daa
ja
mov
dec
jge
mov
pushf
xor
mov
mov
adc
loope
popa
adc
sahf
xor
pop
pop
jg
cs
pop
mov
fnstenv
test
jnp
xchg
je
add
and
and
test
mov
sub
cli
pop
scas
sub
push
divb
rcr
jne
push
jl
in
cmpsl
add
sbb
and
pop
dec
and
pop
sbb
fidivs
daa
bound
fs
ret
ds
dec
in
cld
lods
lcall
cs
fldt
mov
je
sti
pop
dec
sub
dec
nop
pop
mov
andb
mov
jns
ret
pusha
sbb
test
xlat
lea
fsubr
push
cmpb
mov
mov
data16
loope
gs
cs
inc
cwtl
lret
add
cld
mov
pop
inc
imul
push
push
insl
lret
arpl
fadds
in
push
gs
cmpsb
stos
xchg
das
xor
loopne
in
cmpsb
popf
push
adc
xchg
jg
sti
sahf
push
mov
adc
or
aaa
sbb
outsl
pop
cmp
shrb
and
cli
or
sbb
stos
adc
push
push
ficompl
xor
adc
cmpsl
out
mov
mov
cmp
aas
push
pop
sahf
mov
loop
ds
mov
daa
gs
or
test
dec
fndisi(8087
rcll
lods
sub
test
imul
sbb
jle
mov
and
je
mov
cmpb
jp
ja
sub
stc
or
stos
cmp
movzbl
add
sub
ljmp
or
movsb
repnz
cmpsb
mov
popa
xchg
sub
clc
sub
xlat
adcb
dec
fs
and
lods
je
jns
lret
sub
bound
inc
jecxz
add
hlt
arpl
or
mov
sbb
pop
in
jb
fildl
lea
and
or
xlat
rolb
mov
xor
int
arpl
cmp
cmp
push
mov
cmp
scas
sbb
dec
mov
xchg
pusha
adc
sub
aaa
sub
leave
lea
push
into
xchg
adc
xlat
data16
mov
ds
cmp
cmp
adcb
imul
fisubrl
xchg
push
cltd
jo
dec
enter
pushw
loop
xor
pop
ljmp
pop
or
call
cmp
notb
shrl
xchg
and
out
sbb
aas
mov
pop
cltd
rclb
es
sub
in
or
sbb
stos
test
rcrb
call
insb
mov
jp
lods
les
bound
ss
cmpsb
lock
pop
lods
mov
in
mov
dec
add
movl
jp
ret
mov
rol
out
mov
enter
inc
sub
cwtl
stos
cmp
mov
inc
push
mov
push
std
lods
xchg
pop
lret
rcrb
loope
adc
jl
xchg
subl
lret
inc
inc
jbe
mov
ds
popf
insb
xchg
je
adc
ds
int
pushf
xor
mov
out
popf
jl
iret
mov
fdivl
mov
mov
jnp
repnz
or
dec
sub
dec
addr16
adc
imul
adc
dec
inc
push
sbbl
mov
mov
lret
push
rcr
pop
jmp
out
imul
data16
in
dec
xchg
iret
les
imul
adc
aam
rolb
nop
jnp
add
in
inc
and
mov
enter
pop
mov
idivb
ljmp
cmp
mov
leave
cmp
lea
imul
mov
fnsave
mov
fldt
icebp
fnstcw
pcmpgtd
xchg
rolb
mov
fadds
or
clc
sub
insb
sub
rorl
jge
jecxz
push
mov
out
xor
mov
mov
jns
fildll
call
mov
or
sarl
sbb
sbb
jbe
push
inc
into
adcb
out
in
lea
sti
repz
push
pop
ljmp
inc
push
xor
pop
xor
jmp
scas
in
popf
add
mov
fsts
test
jecxz
subl
adc
mov
popf
pop
imul
adc
cmp
mov
mov
popa
and
mov
cmp
sub
sbb
lock
enter
fldt
shl
sbb
push
rcll
mov
dec
aam
or
andl
aam
mov
pop
pop
repnz
or
mul
clc
jp
sub
frstor
es
cli
mov
shrl
sbb
scas
jl
std
push
jl
push
ja
cmc
and
push
movsb
fistpl
lahf
loopne
cwtl
stos
or
outsb
mov
dec
mov
in
add
cmpl
test
insb
cli
xchg
loope
gs
shr
cmp
leave
dec
fimuls
aam
test
stos
inc
sub
sub
mov
add
jl
mov
sbb
leave
mov
out
inc
imul
dec
push
mov
sbb
inc
fwait
into
fcmove
dec
jl
cmpl
scas
aas
leave
and
shl
mov
nop
mov
mov
mov
bswap
or
es
stc
or
js
lret
mov
mov
fs
and
loope
dec
pop
push
hlt
dec
sbb
add
jne
add
jb
jbe
push
test
and
sbb
adc
pusha
inc
loope
push
push
cmp
mov
lret
jg
in
cmp
mov
pop
push
rolb
adc
and
jno
pusha
shll
cli
imul
jns
lret
xchg
imul
or
push
sub
sbb
inc
jecxz
dec
sub
xlat
stos
cmpsb
cmp
lahf
adc
cmp
jb
into
pop
xor
jb
sbb
lret
cld
adc
mov
add
mov
cld
rcr
int3
lahf
mov
decl
pusha
scas
fisubrl
or
cs
insl
xchg
mov
dec
lcall
push
loope
notb
or
mov
add
sahf
iret
mov
push
cmp
inc
insl
mov
cmp
or
pop
std
xchg
push
movsb
add
mov
push
out
mov
sub
and
stos
inc
jae
mov
popa
enter
mov
jns
rcrb
sub
addb
ret
push
and
negb
cmp
jg
lcall
push
mov
in
jb
lock
jnp
pop
lahf
shl
jne
imul
addb
jae
movsb
lahf
js
dec
sbb
fisttpl
adc
lods
jno
fwait
dec
mov
ja
call
cltd
aad
psrlq
lcall
cwtl
cmp
enter
pop
mov
arpl
xchg
xor
or
dec
dec
jp
divb
aam
jo
mov
je
add
jmp
je
and
std
or
lcall
or
cli
pop
mov
scas
mov
adc
rolb
ja
clc
sub
sub
cli
sub
out
jle
cmp
lcall
cwtl
pop
stos
popf
mov
push
inc
daa
addr16
fadds
fcomps
movsb
jb
pop
cmpsb
pop
cmp
setae
xor
in
jno
xchg
es
jp
in
out
dec
loop
aad
sbb
fisubl
wrmsr
jecxz
add
les
pop
inc
insb
sub
or
scas
es
insl
ret
fisubl
imul
enter
jp
call
into
inc
aas
dec
in
in
loope
sub
movsb
xor
pop
push
adc
cmpsl
in
clc
xchg
and
ds
stos
addl
int
push
in
push
add
into
inc
ss
je
and
dec
mov
jp
push
in
jne
inc
hlt
inc
js
xor
pop
mov
aad
mov
sbb
sbb
loop
pop
xchg
push
xor
cmp
mov
addb
sahf
lock
and
xor
das
sub
mov
lret
loope
xchg
fwait
mov
push
movsl
mov
lret
scas
mov
inc
pop
test
fcoms
push
shl
pop
lcall
lods
lock
arpl
in
mov
add
fmuls
cmp
mov
xchg
sub
mov
das
push
lcall
lods
les
cltd
cli
jbe
aad
push
ficoms
fwait
add
sbb
aaa
push
movsl
out
dec
out
pushf
jns
cmp
jae
jmp
sbb
mov
shld
ret
cld
scas
outsl
jnp
rorb
and
cmp
add
insl
cld
mov
push
addr16
push
nop
mov
and
out
xchg
fidivrl
lahf
jnp
loope
or
fsubrl
or
es
js
xor
sbb
icebp
dec
ret
pop
cwtl
mov
push
testb
out
jg
xor
lods
inc
fimull
shrl
arpl
daa
push
jae
es
je
sbb
lret
jge
add
mov
inc
je
dec
xor
cmc
xchg
push
out
jno
movsb
pushf
dec
adc
testb
mov
loopne
mov
addr16
ljmp
mov
cmpsl
scas
mov
add
jno
aad
test
jb
jo
mov
adc
jo
or
push
xchg
out
repz
add
test
xchg
and
push
cmpsb
test
sub
cltd
jl
cmp
sub
std
add
adc
fs
jbe
addr16
jae
sbb
test
sub
and
add
xchg
rorb
stos
xchg
xor
ret
inc
dec
imul
sub
jnp
js
ja
mov
jg
insb
xor
xchg
jns
insl
adc
es
lods
icebp
lret
xchg
pop
je
jb
sahf
push
fdivr
cmp
and
movsb
fmuls
daa
nop
insb
jae
xchg
testl
loope
cmp
addr16
fcomi
cmp
arpl
and
shrb
cli
mov
rorl
das
adc
add
sar
mov
test
sbb
addr16
into
jne
or
cltd
pop
pusha
inc
cmc
add
xor
jo
mov
das
or
clc
add
subb
mov
fsubr
xor
xchg
and
les
pop
ret
cs
pusha
divl
fldcw
add
mov
je
out
inc
rcr
repz
cmc
fwait
or
push
lret
cwtl
mov
test
mov
es
mov
in
xchg
add
nop
int
dec
pushl
push
push
lds
mov
or
fs
adc
fildl
ss
inc
xor
mov
data16
xlat
addr16
mov
pop
sub
fwait
test
cmp
lock
xchg
test
mov
movsb
sub
cmp
xchg
xor
xor
movsl
fnstenv
or
out
ret
xchg
mov
xchg
adc
jg
out
in
mov
std
jo
in
insl
push
into
lods
add
jno
pop
sub
and
shr
xor
dec
mov
cmp
pop
add
int
or
in
add
dec
lds
dec
insb
fsubrs
cld
jg
jo
lahf
ja
mov
scas
lock
push
ljmp
and
pop
xlat
xchg
or
pusha
out
icebp
out
outsl
stos
cmp
scas
imul
ss
mov
popf
bound
and
jns
test
inc
lods
fdivr
pop
pop
cmp
clc
imul
and
or
and
out
lds
dec
dec
mov
aaa
push
xor
jbe
in
mov
lret
xlat
mov
cmp
fisubl
bound
jge
dec
pop
add
mov
shlb
xlat
and
in
fmulp
xchg
jmp
dec
dec
cmp
stos
sub
inc
push
fsubrs
inc
add
ds
sub
jae
cmp
mov
pop
lcall
xlat
cmc
inc
fistpl
andl
shll
sbb
and
lret
test
in
push
xchg
and
cmp
xor
repz
aas
mov
stc
mov
sbb
cmp
and
cmpsb
add
je
in
sbb
sbb
xor
pop
jecxz
or
mov
pop
xor
mov
sbb
mov
movsb
mov
cs
addr16
fsubrp
fadd
rol
rorl
negb
mov
sub
outsl
jbe
loop
loope
mov
adc
sbb
dec
call
and
mov
lock
sbb
mov
movsb
mov
ljmp
rorb
xchg
mov
loopne
popa
in
out
inc
aas
xchg
fldcw
cmp
loope
ss
add
sbb
jmp
rcrb
les
xchg
outsl
dec
dec
push
jge
scas
cmp
int
arpl
mov
cltd
pusha
pop
leave
xchg
cmpsb
stos
push
dec
out
fistpl
mov
mov
movb
add
jp
fsubl
cld
jne
dec
out
in
out
outsl
xchg
aaa
enter
arpl
jae
lahf
es
sarl
into
pop
mov
in
sub
sbb
or
add
push
setne
aam
rcl
adc
pop
xor
out
push
mov
mov
je
jb
mov
hlt
xchg
add
repnz
adc
jmp
and
dec
mov
lods
movsb
fwait
jo
int
mov
test
sbb
jl
shrb
add
fcomi
mov
mov
fidivrs
sbbb
dec
cld
int3
push
leave
mov
inc
mov
popf
dec
cmc
sub
fnsave
sub
jnp
push
xor
ficompl
xchg
stc
push
push
cmp
mulb
rol
nop
xor
outsl
es
movsb
int3
int3
cmpsl
or
sbb
and
mov
mov
in
dec
sub
xlat
js
pop
xchg
pop
aaa
dec
popf
cmp
and
inc
stos
dec
scas
mov
push
push
enter
mov
mov
out
or
cmp
movsb
scas
call
sarl
adc
stos
xchg
jb
imul
fildll
imul
pop
mov
pop
sub
and
xor
pop
ss
cltd
xchg
fmull
adc
jl
iret
shrl
sbb
jnp
imul
mov
mov
ficompl
popa
dec
je
scas
in
lods
add
loop
push
clc
push
into
mov
pop
xor
jno
inc
mov
cltd
stos
adc
shl
aam
dec
sbb
cli
ret
decl
js
cmp
fsub
mov
fists
mov
inc
add
lea
push
ss
mov
int3
sbb
add
or
xor
lea
insb
mov
push
sbb
mov
push
leave
and
daa
inc
pop
in
push
aas
add
cmpsl
add
pop
in
push
mov
fucom
jae
adc
dec
shr
ret
fs
aas
push
sub
mov
inc
add
cs
insb
leave
jmp
fwait
jp
inc
pop
fwait
mov
aad
imul
jmp
push
shrb
loop
test
cmpsb
call
mov
xchg
fst
and
push
xor
in
mov
add
outsb
sbb
das
pop
dec
rolb
pop
lea
iret
jge
pop
scas
lock
gs
fdivrl
pop
into
jne
stos
pop
ds
lret
mov
dec
aaa
shl
mov
push
sbb
insl
xor
fsubrs
and
pop
lods
pop
in
mov
cltd
cmp
andl
sbb
sub
inc
jmp
lcall
loope
enter
out
sbb
popa
xchg
mov
hlt
mov
fadds
bound
pushf
jo
cld
xor
in
rorb
xor
mov
push
fs
jl
dec
test
lret
iret
xor
in
call
jmp
mov
fsubl
test
lret
aas
and
jmp
fstps
mov
test
lods
mov
gs
jmp
push
fdivs
bound
mov
out
mov
aam
lock
mov
and
cltd
test
ret
lods
insb
fcom
jne
lahf
pop
idiv
aaa
and
sub
jbe
mov
mov
and
repz
push
dec
jnp
fadd
addr16
cli
daa
inc
fisubrs
adc
xor
inc
dec
push
enter
inc
cmpsb
sub
push
pop
iret
xor
cli
and
push
jmp
inc
repnz
jbe
and
mov
lods
lods
ja
outsb
mov
hlt
sbb
clc
ret
sbb
mov
out
xchg
mov
xor
stc
shlb
scas
ret
xor
lahf
xor
mov
inc
mov
fidivrs
or
rcrl
insl
cmc
lcall
int3
loop
clc
movsl
xor
push
rcll
or
mov
lret
fadds
or
push
pusha
inc
pop
dec
fmulp
arpl
mov
jge
mov
mov
mov
or
mov
inc
cmpl
xchg
leave
outsb
dec
mov
movsl
xchg
jecxz
add
mov
mov
mov
lcall
cli
jne
pop
jecxz
out
hlt
pop
inc
mov
dec
jbe
sbb
lahf
push
fcmove
push
cwtl
mov
out
xor
inc
lahf
adc
xchg
leave
dec
scas
mov
andl
sti
jo
loop
call
mov
mov
inc
movsl
loop
dec
mov
pop
iret
mov
mov
aam
push
cltd
ds
inc
sub
mov
lcall
inc
fcoml
inc
arpl
sub
xchg
jno
dec
sub
jbe
mov
and
int
mov
fstl
gs
adc
push
cmp
mov
test
jge
jmp
cld
xor
push
and
dec
mov
mov
xlat
xor
cmp
inc
sub
xchg
jns
rolb
lcall
and
insb
sbb
mov
into
adc
je
mov
cld
imul
pusha
jl
adc
inc
mov
data16
sub
pop
mov
push
xor
pop
add
xchg
jns
mov
mov
imul
push
popf
and
loope
mov
push
add
sub
enter
mov
jecxz
sbb
xchg
add
add
cwtl
call
in
jae
inc
stos
cmp
test
dec
in
adc
aaa
fidivl
mov
lret
adc
xchg
and
subl
movsl
jbe
sbb
or
lds
mov
cmp
xchg
clc
popf
push
in
mov
arpl
sbb
adc
jno
imul
aad
popa
test
inc
sub
jne
or
ds
jecxz
into
daa
rorb
inc
add
mov
xchg
shrb
into
fwait
repz
shlb
push
imull
adc
xor
lcall
mov
sbb
outsl
shrb
and
dec
dec
xchg
mov
cld
cld
push
loopne,pn
jne
push
pop
jno
add
jne
rcll
xor
fs
pusha
cmpsb
loop
dec
fwait
ret
scas
cmpb
sbb
mov
sar
ja
in
mov
jg
ds
arpl
loop
jmp
call
in
shll
push
mov
sbb
fistps
rcrb
jp
xchg
dec
adc
xchg
test
or
sub
push
aam
mov
xor
jle
inc
push
xchg
cmp
es
loop
repnz
pop
or
nop
addr16
iret
testl
outsb
and
pop
dec
adc
sbb
lds
and
add
inc
push
or
xchg
sti
inc
sbb
fsubl
push
mov
jecxz
rcrb
mov
iret
adc
mov
movl
dec
lret
ljmp
add
int
jg
jbe
mov
dec
rcll
pop
mov
outsb
lret
pop
sbb
bound
inc
inc
cmpl
cli
pop
xchg
sub
or
push
cli
outsl
lret
repnz
roll
inc
dec
or
xchg
notb
mov
pop
out
loopne
xor
iret
in
push
movsl
sub
xor
sbb
aaa
sub
sbb
ss
fstpt
call
cmp
sahf
scas
cld
lahf
data16
jo
mov
jo
sti
and
sti
mov
pushf
mov
cmp
push
aaa
js
mov
fisttps
test
loope
add
pop
dec
push
mov
sub
mov
xchg
and
inc
lret
clc
ret
inc
in
push
mov
lret
scas
push
jb
cmp
sub
inc
push
cltd
push
pusha
mov
mov
fsub
jle
push
test
push
push
mov
arpl
lcall
mov
sbbl
inc
lds
out
cmpsb
jp
and
fnstsw
stc
je
js
cmc
and
out
pop
test
mov
mov
mov
test
cmpl
xor
cmpsb
jle
loope
addl
push
ficompl
cltd
ficompl
dec
pop
xor
sub
mov
sti
sbb
test
inc
pop
adc
ja
mov
lret
das
jle
pop
rcr
adc
cmp
cmp
dec
inc
in
pop
add
fbld
int3
jbe
int3
sub
mov
pop
in
and
sahf
adc
xchg
pusha
ds
ret
pop
mov
push
mov
pop
stos
cmp
push
loopne
lahf
fdivr
mov
adc
ret
mov
addr16
int3
pop
push
mov
sbb
xchg
in
test
lods
or
and
stos
repz
sub
pop
sbbb
inc
mov
or
fidivrl
fisttpl
test
push
xchg
loope
inc
mov
je
push
inc
push
es
jns
repnz
popf
jne
push
mov
aad
sub
pop
idivl
pop
pop
ret
bound
mov
hlt
adc
outsl
add
insb
jle
cwtl
or
pop
push
mov
push
mov
into
sbb
mov
fsubrl
mov
push
mov
in
call
mov
lcall
mov
gs
and
stos
dec
imul
ret
pop
mov
lock
inc
push
xchg
arpl
repnz
mov
lahf
push
outsl
roll
stos
add
xchg
xchg
add
and
dec
cmp
mov
iret
or
add
cmpps
push
in
test
les
insb
xchg
mov
ret
aad
xor
push
sbb
nop
push
imul
push
or
adc
pop
call
in
stos
rep
xor
add
mov
sbbl
outsl
or
dec
lods
insb
cli
or
or
clc
imul
ljmp
das
pop
cmc
push
imul
sbb
push
orl
fsubr
sbb
lcall
imul
cmp
dec
push
jbe
jnp
pop
add
fidivs
jo
cmp
test
lods
add
out
xor
outsb
pop
mov
jbe
pop
inc
stos
movsb
cmp
mov
mov
das
aaa
pop
setne
and
aas
mov
icebp
jecxz
cld
clc
fdivp
leave
mov
std
xchg
and
dec
hlt
rolb
jnp
mov
or
ss
ja
or
sbb
insb
test
int3
andb
jmp
mov
fidivrs
cld
fisttpll
jecxz
xchg
add
loop
cs
fs
push
lods
dec
sbb
dec
sub
pop
jno
dec
xchg
jge
jbe
inc
rclb
popf
jmp
int
push
hlt
ret
adc
call
leave
bound
jl
hlt
inc
sub
xchg
test
ficompl
xchg
inc
clc
iret
jmp
iret
stos
fisttpl
dec
mov
adc
ljmp
or
sbb
dec
out
addr16
adc
xchg
shll
jb
lds
jl
loop
push
jmp
pop
push
popf
mov
sti
cs
push
xchg
fidivs
cmp
push
test
sbb
jno
xor
repz
pop
pop
rep
lret
out
fcomps
popf
lret
jg
mov
jnp
add
add
xor
div
stos
mov
adc
push
lret
push
jne
add
pop
in
inc
jmp
lea
mov
outsb
push
dec
mov
mov
icebp
mov
adc
pop
jnp
ret
cmp
add
add
loop
sarb
push
mov
in
dec
aas
movsl
mov
mov
ret
popf
notl
mov
mov
ljmp
jp
les
xchg
out
fcomps
cmc
mov
ficoms
cltd
add
inc
pop
call
mov
inc
cld
jg
cmp
test
push
add
cwtl
xchg
jmp
fstpt
ds
jg
imul
lahf
jbe
mov
dec
aad
jb
into
pop
movsl
scas
aam
fiaddl
xchg
sub
sbb
mov
sbb
mov
mov
and
loopne
inc
leave
jb
imul
sahf
fs
pop
lods
out
cltd
inc
pushf
nop
sbb
das
dec
mov
loop
mov
mov
out
or
xor
push
xchg
xchg
sub
jmp
clc
aam
mov
mov
jle
jl
shr
xchg
ss
jecxz
sbb
dec
mov
out
or
push
bound
test
jle
xchg
sbb
jbe
mov
cwtl
fnstenv
pop
test
xchg
dec
popf
test
iret
lcall
pop
ljmp
test
in
sub
outsb
or
test
lcall
cltd
xor
stos
mov
mov
call
test
push
mov
aaa
push
xchg
push
mov
stos
rcrb
sbb
cmp
pop
cmp
out
mov
mov
movsb
sub
xor
mov
lcall
lods
add
shll
mov
xchg
aam
inc
xchg
mov
shll
addr16
stos
mov
and
lahf
enter
inc
pop
icebp
gs
loope
mov
jns
xor
push
adc
lea
xchg
jne
mov
ret
xor
cli
popa
mov
fildll
test
mov
or
or
ja
pushf
sub
mov
stos
and
push
insl
outsb
cld
inc
data16
dec
push
xor
and
mov
test
repnz
movl
mov
adc
enter
test
cmp
mov
or
mov
icebp
bound
ror
adc
adc
mov
cmp
int
scas
and
mov
mov
aaa
into
sbb
testl
xchg
xor
ret
mov
rcrl
push
cwtl
iret
ljmp
or
inc
std
mov
push
pop
xchg
ja
enter
dec
dec
cli
and
enter
lods
add
mov
push
inc
pop
xchg
jne
adc
out
sahf
scas
pushf
adc
pop
sub
outsl
jnp
testb
jmp
add
je
call
popa
pop
mov
lea
scas
xchg
adc
xor
stc
mov
ja
sbb
or
fs
adcl
js
outsl
daa
adc
sbbl
mov
or
inc
in
or
in
sbbb
imul
adc
jp
pushf
dec
loopne
mov
scas
inc
push
xor
mov
lret
sti
ss
stos
xchg
sub
sub
sub
pop
loope
mov
loop
mov
loope
adc
fdivs
jecxz
mov
jnp
cmpsl
sub
sbb
inc
lret
cltd
jb
pop
stos
inc
adc
shlb
test
scas
or
mov
jno
fsubrl
sub
rorl
clc
mov
mov
xor
cmp
push
xchg
clc
adc
out
std
sbb
cs
mov
mov
out
cmpl
lods
loope
sub
fstl
loop
flds
xor
cwtl
dec
sti
dec
inc
mov
lds
mov
push
decl
lea
ljmp
xchg
add
xchg
adc
dec
test
jae
loop
push
push
sbb
dec
mov
popf
pop
shrl
dec
adc
inc
scas
add
test
aaa
lret
push
xor
and
push
leave
xchg
pop
jbe
push
push
sub
xchg
bound
lods
out
xchg
lods
or
xlat
dec
lret
jg
imul
xchg
sub
ss
ljmp
adc
adc
dec
sbb
sbb
aas
inc
push
jb
adc
cmc
dec
loop
xchg
mov
sub
cmp
cmpsb
insl
xacquire
and
adc
and
ss
jecxz
gs
repnz
dec
cmp
pop
push
push
xchg
mov
std
movsl
pusha
cmpsb
inc
loopne
add
mov
sbb
mov
ss
cld
mov
mov
pop
push
repz
add
aas
movsb
pop
addl
push
xchg
xor
test
popa
jp
insl
dec
or
dec
push
inc
mov
call
notl
cmpsl
and
repz
xlat
add
sub
and
mov
sahf
stos
add
es
call
outsb
fcoms
rdtsc
push
inc
push
lret
in
fldenv
pop
cmp
cmp
data16
int
lret
add
sbb
pop
repz
lret
sub
sub
xlat
mov
rcll
inc
cmp
aad
adc
gs
jno
lret
lods
lea
xor
aaa
mov
mov
xor
dec
incl
jo,pn
pusha
pusha
sub
xchg
dec
mov
mov
test
pop
push
popf
push
lods
movsl
in
mov
xor
lods
and
xchg
mov
mov
pusha
mov
js
mov
mov
jnp
in
clc
popa
adc
popf
xor
jmp
inc
pop
lcall
pmulhw
cli
xchg
cltd
cmpsb
repz
ja
in
xchg
adcb
ret
cs
push
call
loope
or
out
cli
and
jbe
stc
js
mov
xchg
fs
into
mov
testb
nop
jns
push
or
adc
movsb
xchg
scas
daa
mov
addr16
xor
and
pop
pop
lods
and
sub
mov
push
pop
jp
push
mov
fnstsw
mov
xchg
je
jmp
daa
ljmp
mov
test
stos
xchg
mov
shrb
das
dec
adc
inc
push
or
out
sbbl
mov
adc
call
adc
add
mov
inc
psllq
cmp
sar
repnz
insb
sbb
cld
dec
lret
xchg
pushf
scas
clc
add
outsb
mov
loopne
sahf
add
add
dec
loop
mov
pop
rorb
adc
cmp
stos
sarb
stc
pop
imul
roll
push
aas
test
test
out
mov
shll
pop
fldcw
aad
inc
outsl
adc
and
mov
sub
scas
addr16
pop
addr16
stc
lds
stos
addr16
sahf
ret
dec
fs
scas
pop
in
mov
shrb
or
xor
mov
cs
lahf
or
ret
pusha
add
sbb
clc
pop
xor
xchg
out
mov
mov
lods
repnz
push
stc
push
jno
pop
mov
xchg
stos
loop
jo
int
mov
test
ds
adc
mov
dec
dec
xor
mov
ret
inc
cmp
jae
test
or
pop
mov
daa
clc
mov
cmp
movsb
stos
fiadds
sub
sub
push
jns
jbe
pushf
dec
imul
dec
inc
out
sbb
clc
sub
adcb
pop
xchg
or
into
mov
sbb
cwtl
lock
ss
sub
movsl
popa
loopne,pt
and
push
inc
or
fidivrl
or
pop
cmp
xor
mov
mov
xchg
cwtl
cli
daa
fwait
inc
andb
push
adc
popa
jo
jg
aas
sti
xchg
mov
out
test
push
mov
mov
mov
sub
repz
int3
les
imul
stos
rcrb
mov
iret
insb
mov
push
mov
dec
adc
push
adcb
mov
mov
pop
xchg
sub
pusha
scas
mov
outsb
pop
jle
mov
push
les
cld
xchg
ss
fists
mov
mov
push
stos
xchg
push
pop
cmpsl
xor
repz
pop
push
jmp
mov
jae
ss
outsl
sbb
push
out
mov
outsb
add
push
xor
mov
and
push
or
dec
add
dec
repnz
aas
lock
loop
scas
sarb
jmp
cli
bound
movq
mov
cmpsb
fsubrp
xlat
cmp
lods
imul
adc
and
push
sbb
push
jmp
and
inc
pop
std
subl
inc
pop
repz
mov
inc
sahf
adc
daa
or
call
jge
push
pop
cmpsb
movlps
in
stos
mov
jno
push
aaa
pop
mov
sub
scas
sub
fisttps
scas
test
or
mov
jmp
add
sub
daa
cmp
jle
xor
fs
pop
sbb
push
or
mov
js
pop
mov
das
xchg
xchg
scas
cltd
out
nop
mov
fistps
xchg
add
cld
scas
testl
cmp
mov
inc
popa
jbe
enter
insb
js
lahf
out
les
jo
cmp
cmp
xchg
jl
test
jb
mov
jg
jo
rcr
jp
call
ss
mov
cmp
pop
inc
out
push
inc
push
insb
adcb
hlt
pop
out
xchg
pop
aaa
jae
sti
lcall
adc
in
pusha
sbb
imul
adc
dec
cmp
iret
clc
test
sbb
sbb
js
dec
imul
xor
fsubrs
mov
mov
push
mov
loopne
enter
outsl
adc
dec
orb
loop
mov
or
xlat
jbe
gs
pop
mov
dec
mov
in
add
sbb
popa
adc
ja
pushf
test
push
jne
mov
jno
add
mov
lret
bound
test
mov
icebp
pop
fdivrl
adc
cwtl
mov
fstl
cmc
dec
aaa
push
mov
mov
movsl
add
dec
ds
repnz
jg
add
xor
xchg
sub
aad
sti
sbb
jg
push
int
sub
push
popf
jmp
mov
dec
mov
pop
fidivs
and
push
mov
xchg
daa
sub
shlb
je
ja
sahf
xor
lcall
push
mov
outsl
adc
imul
cmp
aam
fisttpll
fwait
mov
mov
or
movsl
cmp
and
rcrl
push
fbstp
xchg
mov
push
mov
sbb
pusha
jle
sbb
pusha
mov
cmp
mov
mov
lret
push
test
sub
sub
jmp
popf
jbe
into
inc
push
pushf
jge
ret
sub
jecxz
dec
iret
mov
mov
sbb
in
or
mov
sbb
inc
loope
sti
sbb
addr16
mov
push
xchg
sub
fwait
sub
lcall
and
mov
addr16
dec
outsl
mov
in
push
push
mov
loop
sarl
add
sub
das
pop
mov
or
pushf
movsb
sub
push
or
push
jecxz
add
mov
shll
dec
push
aas
jecxz
arpl
mov
push
pushf
mov
fs
jno
mov
es
testb
daa
jb
cld
push
inc
push
push
mov
bound
test
push
jbe
adc
addb
add
xchg
pop
mov
mov
and
push
movb
lds
sub
push
scas
mull
mov
xchg
xor
pushf
or
push
bound
or
push
sbb
add
jl
ficoms
pop
xchg
jl
cmp
enter
dec
dec
pop
push
inc
push
je
jno
out
mov
inc
mov
icebp
cmp
imul
movsbl
cs
mov
cwtl
mov
cmpsb
jae
call
cmp
dec
fwait
psubw
imull
je
data16
add
imul
cwtl
push
scas
or
xorb
pop
scas
out
cli
jne
dec
imul
xchg
jnp
push
pop
out
ret
inc
data16
loopne
jbe
xchg
mov
popf
aam
into
pusha
cmp
xchg
mov
in
aas
and
push
push
pusha
mov
mov
addr16
je
nop
mov
pushf
cli
sub
clc
pop
adc
fnsave
jg
ljmp
insw
inc
mov
sarb
loop
cmpsl
aas
clc
mov
mov
push
test
popf
xorl
cmp
sub
cmp
adc
add
mov
scas
inc
out
sub
int
sbb
xor
dec
or
mov
add
xor
push
stc
popa
jle
cmpsb
jbe
js
shrl
loope
and
mov
fstpl
jns
incl
out
jp
inc
movsb
dec
inc
dec
test
pop
jecxz
push
jne
dec
pop
xor
and
mov
insb
out
mov
jbe
int3
rcll
mov
jp
mov
stos
test
inc
enter
call
in
hlt
sbb
lahf
daa
mov
xchg
dec
sti
insl
sub
xor
hlt
and
pop
ss
cltd
xor
and
mov
in
add
ja
gs
popa
iret
push
icebp
scas
mov
push
jg
xchg
adc
cli
inc
loop
dec
fldl2t
xor
jae
repnz
sub
push
cmp
fiadds
dec
add
int3
fstpt
adc
or
dec
fildll
lret
cmpsw
adcb
pop
inc
mov
rcll
or
add
or
xor
adc
sbb
xchg
sti
xchg
pop
mov
cmp
or
mov
mov
std
loope
adc
out
std
roll
repnz
jae
mov
sbb
repnz
les
xchg
mov
pop
in
mov
test
mov
leave
test
sbb
mov
xchg
xor
cmp
inc
in
lcall
and
js
out
dec
fistpl
xor
roll
imul
mov
xchg
call
hlt
test
ss
mov
dec
xor
popa
mov
mov
dec
cmp
jae
xchg
sub
or
push
pop
push
add
out
cmp
pop
ljmp
pop
jmp
pop
rorl
push
fisubrs
push
insl
adc
pop
les
mov
dec
in
add
cltd
into
inc
int3
add
pop
into
ja
ljmp
push
sbb
and
cwtl
dec
and
xchg
mov
or
int
jns
loope
hlt
add
jle
push
stos
leave
mov
pop
jmp
fcomp
mov
mov
rorb
subl
sahf
xor
je
ficoms
dec
inc
inc
sub
push
loop
inc
movsl
inc
ds
and
loopne
push
or
jle
in
dec
cmp
clc
insl
add
call
dec
cmp
pop
pop
dec
and
cmpsb
inc
xchg
adc
dec
sub
jecxz
clc
outsl
lock
xor
mov
inc
mov
shrl
pop
add
insb
push
shr
imul
jp
shrl
les
test
test
jo
test
lret
lret
jmp
sbbb
je
mov
xlat
in
in
xor
jne
mov
cmp
ss
adc
pusha
sbb
dec
jno
sbb
scas
cmp
or
idivb
sub
sbb
cltd
xor
sarl
jecxz
mov
pop
adc
call
or
and
or
cmp
mov
loop
paddw
int
mov
mov
mov
cmp
bndstx
aad
cmp
or
add
loope
mov
sbb
jno
inc
repz
data16
mov
test
lock
nop
inc
inc
inc
out
rcr
jmp
lock
andb
decl
sbb
inc
fstp
and
clc
imul
adc
imul
fucomip
mov
std
fwait
xchg
in
sub
xchg
test
inc
xlat
pop
jmp
inc
xor
adc
sti
push
jae
loop
sbb
xor
test
and
mov
push
sahf
or
test
push
jno
in
ret
sbb
cmp
sbb
fadd
sub
xchg
add
jne
push
xor
or
cltd
jmp
pop
sbbl
push
leave
aam
fs
cs
push
add
cmp
push
leave
ljmp
jae
xor
fnstenv
mov
rcll
pop
xor
pusha
mov
int3
adc
jns
fidivrl
das
call
out
addr16
in
sti
add
int
mov
aad
push
dec
lret
and
mov
lods
or
pusha
pushf
sbb
jecxz
cmp
inc
scas
negb
imul
movaps
ret
aam
inc
int3
pop
lret
jg
mov
in
xchg
jae
idivb
xchg
xor
sbb
scas
imul
ljmp
mov
insl
pop
sub
inc
pop
mov
test
insl
pushf
enter
std
xchg
cmp
cmp
dec
jo
xchg
popa
into
add
popf
xchg
push
jmp
push
jo
bound
jae
dec
pop
inc
push
shll
push
imul
bound
or
xchg
fs
adc
addr16
aas
arpl
jo
dec
loop
jno
pop
sub
imul
negl
adc
mov
mov
je
jb
mov
fs
fidivrl
xchg
call
or
add
cmp
bound
into
or
loop
sbbb
stc
jns
jge
mov
or
pop
js
push
and
test
es
andb
in
mov
xor
xorl
sbb
push
push
dec
pop
xchg
mov
ror
in
dec
xchg
int3
loopne
mov
inc
adc
pushl
sbbb
lret
bound
fnstcw
push
cltd
jmp
lret
gs
rcl
es
adc
and
gs
push
pushf
xchg
enter
cmp
jb
pop
push
fnstenv
pop
jge
ja
or
cmpsb
pop
decl
xor
aad
xor
loopne
or
out
ficoms
cmp
shlb
popl
mov
jge
xchg
and
cmc
std
and
icebp
cld
push
mov
iret
movsl
mov
in
outsb
lret
popa
xor
jb
mov
lret
jmp
mov
mov
push
fidivrs
cmp
addl
mov
ja
mov
cwtl
aam
or
xor
aaa
adc
lcall
sbb
mov
scas
inc
mov
mov
popf
movsb
sub
mov
ret
adc
jnp
sbb
int
push
stos
push
and
fists
cmp
dec
in
lcall
in
jns
cmpsl
add
fistps
rclb
movsl
dec
gs
shrb
pop
and
mov
mov
call
cltd
aas
outsl
pop
cmpsb
andb
stc
dec
xlat
mov
aam
testl
jl
in
xor
jnp
jl
mov
mov
loope
mov
jmp
xchg
stos
sub
jbe
divb
cmpsl
lds
jg
sbb
or
add
sub
pop
add
ja
sbb
xlat
dec
fbld
lea
sbb
aad
jns
jmp
in
jle
jge
in
mov
mov
call
out
mov
movsl
or
iret
icebp
loop
or
sbb
enter
adc
je
sub
dec
ds
mov
mov
and
cmpsb
lret
xchg
push
cmpsb
jg
out
test
mov
bound
call
mov
mov
int
jle
das
jg
and
inc
sub
test
stos
jnp
xlat
xor
sub
testl
add
stos
das
xchg
popf
pop
ja
cmp
mov
das
shl
and
movsl
add
mov
mov
mov
scas
or
addb
push
xchg
dec
adc
ret
jbe
daa
xor
adc
std
sbb
mov
sub
sti
push
push
addr16
popf
mov
or
icebp
add
das
insb
push
push
dec
repnz
jp
loope
add
push
sub
pop
iret
and
movsb
dec
fadds
push
cwtl
xlat
cmp
jecxz
mov
cltd
ja
test
mov
mov
xor
and
std
lods
xchg
lret
add
imul
daa
jl
arpl
test
push
cld
outsl
lods
mov
pushf
adc
repnz
and
pop
and
jecxz
mov
aam
call
mov
shlb
pop
pop
leave
test
lock
or
push
or
popa
and
mov
mov
cmp
add
inc
pop
xchg
rorb
pop
or
cmp
icebp
dec
loop
inc
jl
testb
add
mov
cmp
or
negl
inc
in
cmp
sub
cmp
mov
sub
xchg
aam
notb
adc
sbb
clc
das
stos
sub
fldenv
push
fmuls
inc
pop
out
add
ljmp
out
mov
sbb
ljmp
iret
les
mov
iret
loope
mov
ret
in
pop
scas
xchg
js
push
jg
mov
ss
or
aaa
inc
inc
push
std
mov
xor
cmp
xchg
adc
xchg
data16
rol
jae
add
inc
cmpsl
sub
adc
cs
insb
sar
pop
nop
jne
or
ljmp
jge
das
dec
mov
or
jne
sbb
mov
ljmp
out
nop
cwtl
dec
out
push
jp
inc
in
fists
xor
add
or
idivb
cmp
les
and
cld
mov
lea
dec
add
ljmp
add
ja
popa
or
cmp
xlat
or
fcom
in
mov
imul
faddl
fadds
daa
push
cltd
push
xchg
scas
push
test
lret
lcall
mov
add
testl
repz
fldcw
lahf
incb
rcrl
into
lock
lret
iret
je
fimuls
das
adc
inc
or
push
inc
xlat
sub
loopw
loope
xchg
cmp
scas
int
mov
idivb
adc
cmc
cmp
jb
sub
push
dec
dec
pusha
adcb
pop
mov
rcrb
add
aas
sar
or
adc
es
movsb
push
jg
loop
rcrb
es
scas
xchg
loopne
int
adc
and
imul
and
scas
push
shr
push
stc
lahf
xor
sbb
adcb
add
pop
push
adc
or
push
fnstcw
push
jmp
arpl
jo
inc
or
mov
hlt
push
add
repz
insb
jbe
movsb
jae
push
in
stos
movb
jne
aam
add
sub
test
leave
incl
dec
cmp
mov
and
std
adc
iret
fstps
xchg
sub
pop
adc
out
sub
push
cmp
lods
mov
outsl
jnp
aad
adc
xchg
pop
push
hlt
mov
pop
lret
mov
fcom
inc
aam
adc
daa
inc
stos
ja
push
icebp
lds
incl
call
mov
clc
and
pop
test
cmpsb
nop
push
fcomps
jne
cmpsb
in
std
filds
inc
mov
pop
or
cmp
pusha
add
mov
jno
pop
and
cwtl
cs
xchg
mov
fistpl
mov
ja
mov
jmp
mov
shrl
dec
loopne
dec
or
dec
dec
js
out
in
movsl
sbb
sti
xchg
and
fbld
cli
cltd
xor
into
mov
push
pop
adcb
js
int
add
outsb
jae
enter
ds
nop
repz
icebp
insb
xor
adc
mov
in
rolb
or
imul
decl
in
adc
adc
mov
mov
addr16
xchg
mov
cmpsl
ss
jbe
jo
jo
jge
and
aaa
nop
mov
mov
outsb
mov
cmp
mov
in
call
movsb
jae
nop
rcrb
mov
subl
cmp
cmpsl
adc
stc
sub
sub
fmuls
inc
fnstsw
fs
rcll
iret
imul
pop
add
shl
fisubl
sarl
in
inc
out
sub
sahf
ja
cmp
divl
int3
in
data16
adc
sbbl
push
inc
lods
daa
adc
xchg
cli
testb
pop
lds
into
test
outsl
adc
mov
mov
mov
out
out
or
dec
divl
ret
fiaddl
imulb
test
insb
nop
mov
push
jne
xor
jno
jg
repnz
dec
push
sbb
std
push
jl
pushf
or
cld
out
and
popa
clc
dec
inc
repnz
jmp
cwtl
or
loop
mov
inc
fsubr
cmp
fdivp
test
cmp
mov
cli
daa
xchg
in
lcall
ret
movb
pop
lahf
in
icebp
rcr
testb
add
fsts
pop
xor
mov
loop
jmp
sbb
ss
inc
out
adcl
inc
sub
sub
rclb
mov
add
mov
shlb
adc
mov
lods
leave
pop
fbstp
inc
jge
es
xchg
js
call
add
stos
dec
loope
cmp
push
popa
sti
or
pop
das
aaa
into
sahf
adc
xchg
test
mov
jle
inc
fnsave
mov
in
enter
ds
mov
cmp
inc
pop
shll
mov
inc
leave
jecxz
stos
jge
lock
mov
loopne
test
lret
and
divl
push
jge
fstpl
xchg
add
out
lds
xchg
dec
cmp
test
xchg
xchg
lahf
sub
nop
xor
leave
imull
cmp
out
addr16
push
cmpsb
jl
lret
pop
mov
out
xlat
hlt
xchg
or
xor
mov
int3
jg
js
pushf
aam
out
xor
aaa
or
jno
out
jae
and
jo
leave
cwtl
inc
pop
and
fcompl
push
push
push
adc
loopne
test
mov
inc
fmuls
sbb
cmp
pop
insb
xchg
cmc
or
add
lahf
inc
pop
jmp
cmp
jmp
pop
push
adcb
jp
xor
sarl
lods
ja
mov
mov
mov
mov
in
into
pop
inc
fmulp
loop
lret
movsl
mov
ljmp
aad
push
ret
enter
mov
or
aam
mov
dec
lods
inc
jle
xchg
inc
outsb
push
int3
and
nop
out
adc
mov
fsubr
cmp
aaa
mov
sub
and
pop
adc
out
xchg
das
pushf
add
enter
clc
add
int3
jb
arpl
bound
ja
cmpsl
sbb
push
ljmp
arpl
jge,pt
pop
push
jmp
leave
stc
push
inc
iret
jb
push
mov
cmc
cmpsl
leave
sahf
mov
into
xchg
sub
or
mov
test
nop
mov
cmp
cmpsl
mov
lahf
test
movsl
jne
sahf
repnz
pusha
stos
idiv
popf
stc
push
or
push
jbe
xor
outsb
cwtl
scas
push
fidivrs
fsubl
into
je
add
decb
in
dec
insb
sti
xor
imul
clc
push
arpl
jecxz
or
fs
cmp
xchg
xorb
adc
xchg
mov
shrl
inc
mov
jno
cmp
jle
leave
sub
adc
and
jo
and
fdivl
jge
xor
push
ja
inc
outsb
mov
int3
les
xchg
mov
sub
inc
pop
aad
and
cmp
pushf
dec
mov
xchg
test
repz
mov
outsl
push
xor
mov
insl
gs
frstor
xor
mov
lea
shl
movsb
xchg
js
gs
fnstsw
in
xor
sub
test
mov
jo
jbe
inc
cmpb
jo
aad
mov
or
cmp
or
out
aam
dec
mov
neg
daa
ljmp
push
xchg
cmp
xchg
fildl
adc
inc
xchg
loope
pop
sub
push
jne
inc
arpl
mov
mov
mov
pop
push
adc
inc
out
inc
repz
iret
fcmovnb
stc
or
mov
call
inc
mov
cmp
dec
int3
cmc
loopne
jmp
xchg
dec
movsl
dec
ja
aad
orl
mov
cmp
cmp
xchg
test
mov
aas
mov
jns
lcall
inc
jns
and
lea
push
pushf
loop
hlt
jbe
in
mov
cmc
adc
aaa
dec
pop
cs
mov
imul
push
movsb
aas
add
sub
jmp
mov
cmp
mov
xor
ret
sub
cmc
mov
aas
push
je
rorl
loope
or
xchg
push
enter
and
inc
outsl
ret
and
cmp
sbb
ds
mov
jmp
data16
pop
mov
loopne
repz
adc
cmpsl
ja
adc
jmp
or
sahf
lds
das
repz
add
ret
rcll
adc
in
xchg
xchg
xor
cli
ss
sbb
nop
dec
mov
je
lcall
and
movsl
pop
jns
and
out
out
test
cmpsl
cs
fidivs
adc
pop
xor
lcall
sbb
es
das
mov
cmp
ret
add
lcall
cwtl
test
ja
push
mov
inc
xchg
iret
fldl
rclb
imul
push
mov
jne
jle
jno
mov
adc
lahf
jb
roll
shl
loopne,pt
and
out
add
sbb
notl
inc
stc
xchg
jmp
fiaddl
stos
out
imul
mov
mov
push
out
test
cld
adc
lods
sub
aam
and
xlat
shrl
inc
jbe
in
int3
cltd
clc
add
sbb
jg
adc
mov
adc
test
mov
pop
sub
adc
ret
jmp
jge
aad
cmpsb
and
push
jmp
jnp
and
nop
xchg
dec
push
jmp
in
push
xorl
sub
jecxz
xchg
arpl
adc
xorl
sbb
test
nop
mov
out
je
cs
adc
push
mov
xor
loop
sti
idivl
shld
jp
jmp
test
dec
out
xchg
dec
xlat
insl
cli
in
out
ja
sbbb
fwait
push
lahf
shlb
daa
pop
loop
push
cmp
lods
mov
aam
andl
cltd
dec
mov
push
repz
push
fidivs
lcall
dec
sub
pusha
add
jno
pop
mov
bound
jle
push
mov
cmp
lds
in
jg
mov
mov
push
or
inc
push
sub
dec
in
mov
fnstenv
dec
sub
sub
cmc
cmp
test
xchg
jno
js
or
sub
movsl
jmp
push
out
sub
insl
stc
lock
sub
cltd
addr16
roll
vorpd
jge
mov
xor
push
cmp
push
mov
push
inc
aad
cmpsl
rep
dec
inc
sar
sub
pop
sbb
pop
enter
push
push
call
int
outsl
sbb
test
nop
aad
cltd
xchg
ret
adc
xor
cmpsl
js
adcb
adc
mov
out
fucom
mov
call
xor
push
add
sbbb
in
ja
shrb
xchg
cmp
push
js
int3
out
push
mov
add
sarb
mov
mov
adc
aam
aaa
dec
dec
cli
lock
push
fimull
jg
pushf
mov
loope
movsl
das
sbb
jp
lcall
das
call
in
push
dec
fdivl
mov
popa
mov
imul
shll
dec
gs
pusha
xchg
scas
and
push
mov
ja
xchg
out
cltd
jmp
cmpl
js
mov
or
push
shlb
mov
out
jae
and
and
pop
push
fsubrl
scas
scas
stc
cwtl
cli
add
clc
pop
lea
std
cltd
sub
pushf
jbe
ja
pop
mov
sub
int3
int
jbe
dec
int3
dec
sbb
dec
and
inc
push
std
mov
scas
jle
loopne
cmp
pop
iret
lods
jmp
add
push
shrl
fcomip
insb
enter
insl
xchg
xor
imul
imul
cli
leave
cmp
xchg
lods
sub
mov
mov
inc
lret
push
nop
arpl
push
fwait
adc
notl
cmpsb
cmp
cmc
call
mov
lds
adc
popa
fdivrs
lret
popa
popf
imul
sbb
popf
dec
mov
jmp
clc
nop
popf
push
mov
mov
ret
inc
sbb
into
pushf
sub
pop
dec
enter
push
xchg
xor
outsb
mov
gs
lret
pop
mov
pop
in
pop
xchg
dec
not
inc
add
loopne
and
jle
xchg
lods
aam
int3
or
es
bound
and
pop
ss
test
aaa
push
iret
gs
pop
adc
inc
jecxz
mov
xor
das
stos
pop
dec
sbb
cmp
scas
sbb
sbb
std
mov
cld
out
daa
in
xchg
sbb
add
or
movsl
cli
cmpsb
fabs
mov
enter
mov
je
push
push
ficoms
data16
popa
adc
mov
cltd
rcrb
jmp
mov
pop
mull
out
imul
xchg
push
lcall
jmp
mov
ret
je
cld
and
jno
and
pop
out
sub
and
pop
inc
aas
mov
pop
adc
push
dec
sub
andb
repnz
mov
sbb
xor
stc
out
es
cmp
push
sub
fmulp
xchg
data16
mov
xchg
fnsave
stos
sahf
pop
xchg
mov
fcompl
mov
jmp
mov
pop
mov
jns
pop
fmul
jnp
js
jmp
xor
scas
std
pop
loopne
repz
sub
adc
sub
gs
xchg
in
fcomps
mov
xor
fistpl
jp
iret
pop
mov
push
cmp
lret
lods
out
imul
vexpandps
shrb
mov
pop
loopne
push
out
xchg
add
xor
out
push
xchg
decl
mulb
jle
lahf
xor
xor
push
sti
pop
testl
cwtl
cmpb
mov
jmp
call
adc
xchg
xchg
xchg
dec
adc
jle
lods
xchg
jb
cltd
in
cwtl
adc
adc
enter
jb
pop
lods
and
push
fildll
pop
gs
add
sub
ficoml
adc
jmp
pop
push
daa
cld
xchg
pop
xor
push
push
lcall
mov
mov
inc
push
hlt
cmpsb
je
or
mov
jmp
mov
inc
mov
pushf
and
movsl
shl
hlt
push
mov
dec
popa
scas
mov
mov
ss
sahf
xchg
aaa
lret
mov
xchg
dec
mov
xchg
jae
or
xor
push
out
addr16
pop
jmp
rcll
ljmp
or
addr16
orb
out
stos
jb
jp
inc
sahf
push
shlb
mov
aas
movsl
push
mulb
out
test
movsl
cli
xchg
adc
sbb
pop
das
std
loope
jecxz
pop
mov
outsb
xor
push
mov
jno
pusha
xchg
cmp
lahf
in
cld
ja
stos
add
xchg
xor
push
pop
cmp
not
subl
adc
test
mov
jae
push
fistpll
popf
push
cmp
insb
mov
loop
xor
dec
std
sbb
add
stos
js
shll
mov
stc
push
pop
lret
ret
push
sbbb
sbb
cmp
sbb
cmpsb
pop
std
divl
icebp
adc
pusha
add
jae
subb
rolb
and
cs
add
dec
mov
in
push
int3
mov
aam
cwtl
pop
out
leave
pusha
fnstenv
mov
rcl
cs
dec
add
push
call
cld
mov
scas
xchg
and
push
pusha
xor
fsub
jge
mov
rclb
mov
pop
xchg
js
cltd
mov
cwtl
cmc
sub
mov
repnz
outsb
and
stc
xchg
scas
subl
stos
testb
jbe
cmpsl
fcomps
inc
bound
jo
add
shrl
test
enter
push
xor
ss
and
sub
decb
test
ja
cmp
or
add
sub
xor
pop
mov
push
ljmp
mov
das
inc
sub
jbe
jo
xor
nop
pusha
cli
testl
xchg
or
icebp
pop
scas
jmp
into
enter
inc
push
xor
fldcw
inc
fisttps
jo
xorb
add
push
in
dec
dec
sar
xchg
mov
lret
jle
aaa
iret
adc
add
sti
sbbl
xlat
push
push
or
jge
cvtpi2ps
cld
aad
cmp
cmp
xor
mov
lea
mov
pop
es
xchg
pop
out
add
loope
leave
test
ret
fnstcw
movsb
inc
push
mov
test
xchg
adc
lret
cltd
std
and
mov
xchg
sub
cmpsl
adc
out
scas
jmp
dec
or
pop
jb
push
inc
jl
xchg
add
jns
mov
bound
add
add
fcmovnb
dec
dec
and
xor
xlat
jb
negb
movsb
loope
std
adc
shlb
add
mov
mov
and
lods
aas
dec
push
jb
cmp
jns
rol
cmp
dec
bound
jp
fcmovnb
cmp
jp
xor
sahf
add
mov
mov
lahf
shll
cmp
xchg
jmp
lea
test
adc
arpl
stos
pushf
push
shl
fsubrl
push
inc
cs
and
cmp
sub
sbb
mov
mov
mov
jbe
ror
popa
mov
insl
fs
inc
xlat
inc
cmc
and
push
icebp
inc
add
pop
sarl
loopne
xchg
mov
mov
dec
ret
mov
shrl
int3
jb
add
scas
pop
jns
jp
cwtl
incb
mov
add
sbb
cmp
movsb
mov
popf
ret
arpl
pop
pusha
or
jb
inc
mov
jmp
jo
push
sbb
jle
pop
sub
adc
jecxz
adc
mov
dec
adc
push
cmpsb
inc
xor
repnz
and
cmp
mov
pop
and
pop
mov
adc
lds
orl
add
sbb
rcrb
cltd
insb
sub
pop
dec
cwtl
in
das
mov
aas
add
xchg
add
sbb
adc
movsl
jns
push
mov
xlat
or
push
mov
nop
push
mov
rorl
aad
nop
daa
div
xlat
push
xchg
scas
push
add
or
das
push
je
sub
imul
loope
cmp
sarb
ja
push
in
inc
mov
mov
cmp
imul
pushf
imul
push
pop
arpl
add
aas
inc
dec
dec
jecxz
ret
test
lea
mov
sbb
mov
ror
call
mov
push
je
fnstcw
std
push
leave
int
sub
ds
in
pusha
xchg
outsb
loope
cmp
test
pop
sbb
mov
ljmp
xor
ret
and
ss
lock
xchg
sub
repnz
fidivrs
ds
add
hlt
xor
ljmp
bound
xlat
loope,pt
push
push
push
mov
jne
stos
movsl
mov
mov
inc
mov
lahf
lds
cli
test
ret
xchg
pop
adc
fbld
in
loop
add
pushf
or
push
cmp
sbb
adc
push
and
pop
pop
das
pushf
cli
add
das
mov
sbb
xchg
sbb
mov
or
cmp
int3
xchg
mov
xor
repz
and
pop
fdivrs
cmp
xchg
mov
push
out
mov
js
inc
popw
adc
mov
nop
jbe
enter
mov
outsl
jo
xchg
mov
jb
popf
mov
pop
int
dec
mov
aad
out
jp
and
test
lock
mov
lock
in
cwtl
mov
mov
push
sbb
sahf
jns
or
mov
jmp
imul
fimuls
add
xor
fildl
iret
cwtl
out
dec
popa
insl
cmp
cmp
inc
push
xchg
mov
pop
push
stos
fs
push
lret
lret
and
push
shll
pop
fucomip
add
xchg
jg
mov
cmc
mov
mov
ffreep
push
call
std
mov
pop
icebp
mov
pop
js
scas
mov
mov
dec
in
dec
ret
and
into
iret
data16
subl
stos
in
sbb
xchg
push
push
xchg
clc
jecxz
xor
fsubs
ret
mov
into
fnstenv
lods
ljmp
test
cld
mov
sbb
outsl
pop
jmp
push
pop
add
sbb
cmc
xchg
cmp
mov
lcall
inc
lock
pop
jae
in
cld
lcall
cwtl
mov
hlt
push
inc
cmp
pushf
push
je
mov
mov
std
mov
adc
push
mov
mov
and
dec
fucomi
js
xchg
loope
pushf
leave
adc
in
lea
cmp
rcrl
push
call
push
sub
rcl
xchg
out
test
popa
outsl
push
push
or
loope
lret
nop
and
or
or
xchg
sub
xchg
mov
js
adc
sub
ret
fstl
cmpsb
cmp
test
inc
xlat
fstl
fidivl
adc
imul
pushf
mov
adc
mov
add
cld
ja
cmpsl
ds
jno
leave
fs
adc
and
sbb
loope
ja
jg
sub
pop
jae
cmp
add
jg
stc
sub
xchg
sub
lock
ss
ljmp
inc
sahf
xor
mov
sbb
outsb
dec
jae
cmp
mov
shl
mov
decb
xlat
xor
and
push
xor
aaa
iret
pop
cmc
mov
insb
ret
inc
add
xor
in
add
repnz
insl
loop
add
lock
pop
mov
cmpsl
mov
subl
lahf
xor
popa
adc
inc
inc
cmpb
daa
scas
add
cld
or
push
mov
sub
std
cmpsl
bound
sbb
test
leave
dec
push
clc
cmp
in
in
xchg
fistps
xlat
test
cli
aad
in
inc
ljmp
sbb
xchg
out
cld
adc
xchg
adc
fimull
pop
mov
jle
mov
fcmove
mov
das
inc
mov
xor
ss
xor
lret
enter
aam
add
pop
lret
mov
sbb
mov
add
dec
and
int
xchg
in
rol
jno
out
lahf
andb
xchg
stc
or
arpl
lock
push
add
hlt
enter
cmc
cld
pop
push
and
mov
or
imul
adc
cmc
inc
roll
mov
add
push
daa
mov
movsb
mov
lret
sbb
sub
les
sub
icebp
leave
data16
add
cmp
fdivrs
xor
rol
adc
in
adc
js
and
adcl
or
movsl
data16
sub
pop
xor
pop
sahf
outsl
cld
inc
sbb
test
ret
scas
out
imul
ds
jmp
mulb
mov
cwtl
repnz
fstps
jb
jb
fbld
push
popf
inc
mov
fwait
xor
out
fwait
xor
dec
or
cmp
sti
xchg
into
out
and
push
and
movsl
negl
fsubp
ds
mov
mov
mov
mov
cmp
inc
arpl
push
call
popa
ljmp
xchg
and
lret
lret
jae
or
pop
xchg
stc
adc
aas
insl
add
in
or
add
ds
in
ror
aad
jge
frstor
dec
stc
aas
mov
pop
insl
ljmp
mov
sub
dec
cmp
push
dec
fidivrs
pushf
xchg
imul
stos
sbb
xchg
insl
push
cmp
sub
xor
mov
sub
push
lea
pop
repnz
push
push
imul
arpl
jp
insl
mov
mov
inc
sbb
sub
adc
subb
aad
mov
pop
adc
js
negl
rol
popa
out
stc
jb
es
cmpb
jnp
push
mov
inc
jmp
divps
jp
mov
mov
jecxz
ljmp
push
or
lea
fwait
scas
movsl
xchg
adc
sbb
xlat
cmp
push
ljmp
jno
jecxz
jp
js
das
and
sbb
dec
sarb
ja
push
leave
push
shlb
adc
xchg
cmp
and
jno
jne
testl
mov
loop
in
add
ret
sahf
daa
inc
mov
jae
push
into
sbb
mov
ds
fcomps
pop
aaa
push
loope
dec
insl
dec
jecxz
loopne
out
loope
push
lea
mov
xchg
enter
cmp
xchg
imul
cld
notl
sub
cmc
push
loope
or
mov
les
jle
and
shrl
jmp
shrl
lds
fcompl
sub
divl
mov
ret
out
mov
fildl
fdecstp
out
test
gs
fldlg2
fwait
inc
rolb
shll
in
push
add
jg
ret
pop
xchg
lret
clc
mov
inc
sbb
cs
push
cmp
xchg
ffree
lds
std
xor
neg
insl
mov
stos
inc
mov
cmpsb
les
movsl
cmp
cs
jne
push
scas
pop
loope
aas
rcr
xor
sub
jg
icebp
fsubrl
inc
sub
cli
hlt
icebp
adc
andb
in
mov
lods
mulb
or
mov
push
ret
jns
push
mov
dec
popa
cld
adc
adc
ja
mov
mov
dec
test
inc
push
dec
cmpsb
in
ss
jle
arpl
fcoms
adcl
push
je
push
push
testb
notl
add
repnz
jp
gs
cmpsb
push
es
ret
mov
push
inc
test
out
out
mov
xchg
adc
pop
testl
dec
pop
cmp
arpl
outsb
or
fbstp
sbb
movsl
dec
xchg
std
push
dec
jo
push
xchg
test
flds
test
mov
andb
addr16
repnz
stos
repnz
pusha
repnz
xchg
sub
push
cmpl
add
mov
mov
scas
or
xor
sub
in
imul
or
nop
mov
and
pop
lret
or
rcrl
inc
insl
mov
sbb
mov
addr16
add
dec
insl
aam
es
mov
lds
int
push
mov
out
inc
popf
insl
js
adc
es
cltd
adc
inc
iret
shl
or
cmp
adc
call
out
test
jo
icebp
out
and
aam
pop
adc
push
call
pop
xor
cs
push
and
inc
push
popf
xor
cwtl
xchg
lretw
xchg
mov
pop
out
xchg
mov
in
mov
push
cmp
or
push
test
popf
inc
fisttpl
daa
inc
cmp
in
pusha
mov
pusha
add
pop
xor
test
test
or
or
aam
out
enter
push
movsl
subl
dec
fs
shll
cwtl
cltd
sahf
mov
std
push
add
mov
xchg
rol
push
fnstenv
gs
sub
adc
mov
out
pop
sbb
sub
fstps
xchg
xchg
jns
fs
jge
and
lret
lcall
outsl
pop
sbb
jb
jl
call
mov
loopne
pop
pop
loopne
add
stos
fcoms
xor
sti
popa
and
push
movsl
fimull
test
gs
cwtl
push
pop
xor
stc
jge
mov
push
sub
movsb
pop
fistps
mov
leave
mov
js
je
push
out
call
lret
xchg
push
push
fwait
stc
sub
vmovshdup
adc
sbb
adc
loope
pop
mov
lods
popa
pop
arpl
ss
or
sbb
cs
push
idivl
and
ret
dec
mov
shl
repnz
jecxz
sbb
pop
sahf
pusha
push
xchg
popa
mov
pushf
cmc
iret
hlt
rol
lock
adc
leave
add
xchg
fs
prefetchwt1
or
xchg
mov
push
inc
rcr
repz
lea
xchg
cmp
mov
push
sbb
jno
popf
cmp
mov
and
shll
mov
dec
ret
add
test
out
addr16
and
push
imul
mov
dec
mov
shl
pop
cwtl
xor
mov
adc
mov
inc
addl
dec
iret
addl
lahf
and
arpl
xchg
sbb
jmp
push
xchg
dec
push
loopne
enter
sub
jg
bound
push
or
mov
mov
and
cs
dec
sub
addr16
pushf
xor
adc
sbb
loopne
ret
adc
xor
inc
frstor
adc
fs
inc
repz
ja
dec
out
add
sti
notl
popf
xor
movsl
mov
nop
fisubl
das
push
addb
adc
xor
scas
stc
je
inc
cs
mov
mov
in
int3
daa
dec
ret
repz
test
addr16
pop
sbb
mov
je
adcb
mov
stc
and
jecxz
xchg
lcall
sub
rcll
jbe
jne
dec
out
mov
int3
in
jnp
leave
sub
xor
mov
ljmp
and
sub
add
cmpsb
les
sbb
cmp
jno
rcr
jb
popa
and
std
faddl
push
les
mov
test
arpl
fs
test
adc
cltd
enter
pop
mov
out
lds
dec
les
scas
sbb
xchg
pop
insl
les
pushl
cmpsl
loopne
mov
add
and
pusha
jo
jge
loope
out
movsl
pop
hlt
arpl
mov
leave
push
addr16
dec
push
jne
test
lcall
cmpsb
inc
jl
fisubs
mov
sub
pop
xlat
pop
jecxz
xchg
das
loope
pop
ljmp
and
jle
inc
inc
adc
jo
outsb
in
inc
xchg
fwait
bound
movsl
lds
in
mov
xchg
sub
test
or
jb
lahf
cmc
stos
imull
nop
cmpsb
sbb
xchg
pop
mov
insl
xchg
adc
mov
pop
in
mov
mov
sti
pop
jns
stos
enter
fs
add
push
mov
xor
insl
push
call
loop
and
push
pop
insl
stos
mov
adc
push
inc
jp
pop
and
fwait
jle
or
pop
std
pop
add
pusha
pop
and
lods
xchg
or
sahf
sti
lret
mov
out
inc
mov
sahf
add
jae
mov
mov
inc
pop
jne
cmp
test
mov
xor
xor
clc
xor
or
popa
ds
pusha
sti
xor
sarb
rolb
stos
inc
dec
test
in
stc
lock
sbb
pop
jle
mov
inc
pushf
push
repz
cmp
mov
leave
add
cmpsb
or
cmpsl
rcrb
adcb
push
enter
mov
enter
adc
sub
in
add
cmp
xor
sbb
nop
daa
adcl
aas
dec
ficompl
jbe
mov
pop
into
lret
shlb
inc
pop
sti
push
push
bound
fs
nop
mov
ficoml
lret
mov
divl
and
clc
mov
mov
test
mov
jle
inc
pop
push
mov
ss
lret
shl
fcompl
cmpsb
sbb
mov
sbb
inc
stos
rolb
fwait
pop
or
sub
add
fwait
insl
out
mov
push
pop
mov
daa
hlt
xor
xor
push
js
pushf
dec
cmpsl
pop
sbb
test
loope
cmpsb
cmc
div
adc
subb
leave
pusha
in
or
je
or
outsb
cmp
imul
sbb
ret
in
pop
cmp
fdivrp
rcrl
cli
sbb
xor
out
in
mov
es
es
sti
out
or
scas
dec
jmp
scas
lcall
mov
adc
and
clc
mov
out
rolb
jae
xlat
imul
lcall
jnp
or
xchg
sub
es
mov
faddl
leave
inc
jmp
leave
and
idivl
iret
push
mov
xchg
jb
lcall
mov
fwait
clc
cmpl
jmp
cmpsb
mov
sub
or
mov
cmpl
je
or
int
scas
ds
dec
repz
mov
inc
cld
es
roll
cmp
in
push
inc
loope
sbb
mov
mov
aaa
lahf
sbb
int3
int
push
mov
push
inc
mov
inc
push
xor
testl
sbb
mov
fiadds
and
shrb
sbb
pop
aaa
repz
or
leave
and
lea
inc
mov
add
xor
xchg
lahf
pop
call
lret
mov
adc
sub
js
xchg
cmpsl
hlt
xor
sbb
adc
ret
imul
xor
mov
mov
add
ret
insl
test
dec
scas
inc
adcb
bswap
mov
mov
les
lret
loopne
outsl
jmp
out
stos
xor
out
dec
arpl
out
shll
sbb
into
cmpsb
lret
scas
sbb
lock
pusha
jl
pushf
js
dec
out
adc
insb
movsb
dec
out
jb
xlat
pop
xchg
scas
cmp
rorb
inc
jmp
and
test
clc
xchg
dec
mov
adc
sbb
xor
notl
popa
js
and
pop
pop
stc
pop
dec
andb
push
out
mov
xor
inc
ds
es
loop
pusha
sub
mov
sahf
int
std
jmp
jmp
pushf
xchg
add
lea
into
dec
sahf
push
cmp
movsl
fchs
clc
repnz
mov
lret
push
loopne
inc
xor
inc
cmp
mov
mov
and
cmp
mov
subb
addr16
lret
pop
and
mov
loopne
mov
test
inc
sub
push
or
xorb
fbstp
and
or
hlt
mov
imul
mov
into
insb
mov
ret
movsl
jl
adc
xchg
icebp
orl
adc
mov
pop
push
inc
fisubl
mov
and
xchg
shll
cmp
repz
adc
pop
ret
into
and
push
outsl
mov
xchg
outsb
mov
in
push
shll
int
mov
test
vsubpd
xor
ret
outsl
cmc
or
sarb
push
inc
adc
insl
adc
xor
pop
insb
int3
mov
cmpl
pop
or
sbb
outsb
rcr
in
lods
xlat
mov
adc
shlb
add
outsl
sbb
cmp
and
sarl
pop
sbb
jae
xlat
dec
mov
push
test
inc
out
pop
pop
pop
iret
data16
or
mov
mov
cmp
fs
sahf
pop
mov
mov
out
out
insb
pop
xchg
inc
add
in
pop
jno
dec
sbbl
jg
inc
cmpsl
into
pusha
cli
andl
fisttpll
jmp
aaa
repnz
mov
cld
mov
push
push
dec
jl
mov
sub
adc
xor
jb
fwait
pop
incl
sub
fistpl
loopne
incl
lds
fnsave
ljmp
mov
jns
adc
ljmp
dec
jp
imul
rcrb
or
clc
xor
jae
xor
cli
mov
je
jecxz
cmc
daa
mov
sub
xor
push
jl
push
mov
xor
lods
push
pushf
pushf
scas
int
das
repnz
push
xor
addr16
or
mov
jns
out
pop
int3
push
sub
mov
test
shrb
sbb
push
aas
pop
push
push
aas
ss
sub
add
xlat
inc
nop
repz
push
adc
jmp
in
fmuls
sar
add
pop
and
mov
aas
jbe
xchg
lea
xor
jno
push
add
stos
sti
jne
inc
cmpsl
fcompl
sub
rolb
idivl
jl
insb
fcom
out
stc
cmp
push
lcall
xchg
mov
or
out
sahf
fisubrs
xor
mov
pushf
jecxz
ja
cmp
lea
sbb
hlt
enter
or
sbb
stos
fucom
pop
iret
mov
mov
xor
pop
cmp
dec
adc
je
add
mov
add
arpl
pop
lret
mov
fcomp
xchg
mov
stc
pop
aaa
scas
mov
jnp
or
jae
jns
stos
sub
addr16
decl
mov
int3
push
cmc
or
jp
arpl
in
rolb
mov
iret
push
outsl
or
psrad
dec
inc
cli
cmp
sub
lret
fsubrs
aad
cmp
pusha
ljmp
mov
clc
add
lahf
push
sbb
aas
push
or
mov
out
pop
lret
sub
cmp
sbb
add
insl
add
insb
xlat
inc
cld
lcall
in
fwait
xchg
mov
fucomip
mov
bound
push
fucomi
orl
popa
scas
hlt
imulb
dec
call
inc
sbb
mov
scas
fs
lock
inc
sub
js
pop
cld
or
imul
ljmp
das
movsb
pusha
sub
je
shlb
loope
inc
and
xchg
decl
fdiv
jnp
push
push
int
insb
or
movsl
fldl
pop
andb
imul
dec
fimuls
and
ljmp
fldenv
shll
rcrl
decb
das
iret
int3
pop
add
jnp
fsubrp
push
adc
add
shrb
sbb
adc
loopne
popa
test
dec
inc
rolb
outsl
mov
ret
jg
repz
addr16
out
pop
movsb
aas
testl
jbe
pop
mov
jb
and
mov
lcall
mov
leave
sub
xlat
sbb
mov
sahf
loopne
std
cmc
out
inc
stos
int
or
sbb
inc
int
sbb
dec
xchg
dec
nop
jnp
sub
mov
or
xchg
jle
out
fwait
cli
pop
movsb
add
ljmp
lahf
adc
cmpsb
inc
mov
mov
ljmp
pop
filds
mov
pop
and
pop
hlt
inc
or
pop
mov
sub
mov
mov
xchg
mov
dec
mov
lcall
stc
shlb
pop
dec
jmp
or
ret
sub
nop
dec
lahf
ret
pop
adc
or
dec
add
xor
or
dec
xchg
movsl
add
mov
popa
add
hlt
mov
inc
in
jns
pop
and
adc
xchg
scas
mov
pop
fidivrs
imul
shrl
pop
fnsave
jno
inc
fs
ja
jl
xchg
sbb
lret
lret
dec
pop
pushf
stc
sti
arpl
out
test
add
lret
insl
xor
popa
clc
rcll
cld
sub
jge
cmp
sahf
sti
pushf
frstor
mov
pop
dec
dec
outsl
or
leave
decl
shll
insb
cmp
adc
push
add
dec
loopne
jp
hlt
test
lret
lds
lock
push
mov
fcmovnu
pop
push
lods
mov
es
jle
popa
xor
or
pop
mov
push
inc
imull
dec
or
dec
sbb
jo
cmp
cmp
push
xorb
push
add
sti
rorl
xor
arpl
pop
mov
aad
inc
sarb
aaa
mov
lea
cmp
outsl
push
pop
jmp
repz
add
pop
cli
cmp
mov
pop
mov
fsubs
cltd
das
or
jae
sbb
inc
push
mov
cmp
cmpsl
icebp
jnp
cwtl
fnsave
adc
in
and
rcll
js
test
and
inc
scas
xchg
imul
fmull
mov
jne
and
mov
orb
sar
arpl
lret
les
ljmp
xor
stos
scas
out
xchg
jo
push
mov
mov
add
dec
mov
lcall
in
arpl
xchg
aaa
mov
inc
test
xor
out
mov
insl
jg
dec
pop
cmc
rolb
dec
aas
jecxz
xchg
ss
aas
out
out
cs
aas
cmp
in
loop
jmp
stos
mov
jmp
sbb
aas
cmp
jnp
stos
jmp
stos
mov
repnz
fwait
push
inc
call
popf
xor
jp
mov
xchg
push
adc
cmpsb
imul
adc
jge
into
xor
pop
sub
or
mov
jge
imulb
sbb
insl
cmpsb
test
arpl
outsb
and
xor
test
mov
push
data16
xchg
imul
mov
push
out
sti
cmp
jb
push
cmp
jae
sbb
xor
push
inc
sbb
mov
sbb
pop
sub
jle
xor
in
add
nop
mov
mov
out
loope
dec
sub
es
sbb
out
mov
mov
push
xchg
test
ficompl
movaps
call
test
mov
inc
aam
dec
clc
sahf
mov
jno
std
into
jle
jg
inc
into
nop
jne
insl
dec
btc
xor
jno
lahf
pop
xor
aaa
xchg
cmp
and
test
inc
in
inc
in
pop
mov
int
clc
shll
xor
adc
mov
ljmp
pop
hlt
loopne
sbb
cli
fstpl
lcall
div
in
add
add
insl
loopne
shrl
adc
push
decb
or
sub
mov
testl
add
int
frstor
add
sahf
pop
mov
jb
pop
dec
in
fdivr
jp
aaa
hlt
xchg
inc
mov
cmp
repz
adc
loopne
cmc
sarb
mov
pop
daa
or
xchg
lock
icebp
jnp
mov
stos
inc
imulb
dec
enter
and
jl
sub
lock
iret
pop
sbb
and
scas
push
push
in
out
sub
lea
jmp
test
pop
cmp
xor
lahf
xchg
idivl
mov
movsb
jo
mov
insb
addl
cmpsl
xchg
fstpt
dec
jb
push
out
lahf
push
adc
and
lcall
cltd
pop
mov
xchg
cmp
mov
aam
shrw
hlt
movsb
jecxz
dec
ret
shl
jmp
stc
and
lahf
roll
les
push
mov
lcall
mov
adcb
pop
xchg
cmp
test
push
test
xor
xor
or
in
dec
jno
mov
sahf
adc
cmpsl
les
outsl
insl
jecxz
dec
sarb
adc
xchg
lock
mov
imul
mov
sbb
repz
mov
loopne
push
mov
scas
in
dec
xor
xchg
aam
dec
and
lods
ss
or
pushf
orb
aad
jge
or
aaa
inc
insb
mov
sub
pop
rorl
push
movsb
push
inc
rol
sub
push
inc
sbb
enter
jp
scas
dec
adcl
popl
xchg
inc
push
insl
aaa
jo
jmp
jmp
pushf
daa
mov
and
data16
xchg
cmp
jp
icebp
xchg
fcompl
in
cmp
sahf
stos
ret
pop
xor
jbe
out
stc
inc
jnp
inc
test
mov
push
out
or
sub
outsl
xchg
pop
jb
fdivrs
add
mov
lret
push
mov
bnd
movsl
imul
jae
or
fisttpl
mov
bound
filds
add
xchg
or
popa
ret
in
orb
xor
push
adc
dec
dec
rcrl
shl
inc
pusha
fisttps
inc
pop
push
data16
inc
sbb
lods
mov
cmp
stos
int3
dec
pushf
in
sub
xor
int3
add
mov
xchg
pop
add
jp
scas
flds
push
push
sub
push
loop
mov
dec
mov
fsubrs
rorb
shlb
ljmp
call
fsts
push
dec
push
push
cmp
add
jmp
sbb
cltd
and
push
sbb
mov
mull
repz
loope
mov
sbb
mov
lret
jg
add
xor
iret
push
cmovb
stos
jnp
in
cmp
aas
lcall
inc
into
xorl
push
lcall
cwtl
or
mov
rorl
cmp
jge
fcompl
or
inc
dec
mov
mov
popa
sub
xchg
divl
inc
xchg
inc
test
jecxz
loopne
pop
inc
xor
cmp
nop
ret
ss
loop
loope
sbb
scas
adc
push
arpl
mov
stc
xchg
add
pop
push
sub
add
in
inc
or
test
int
sbb
ficomps
lcall
adc
jno
jmp
frstor
pop
mov
test
inc
dec
adc
in
out
or
sbb
repnz
mov
xchg
and
inc
stos
repz
enter
xor
leave
cmpsl
cmp
xor
fcomps
insl
xchg
ror
clc
fwait
repz
in
loop
mov
fnstenv
rep
jne
aad
clc
mov
adc
ss
ljmp
jno
in
into
and
lds
icebp
cmc
mov
lds
sub
decb
dec
xchg
pop
icebp
rorb
sub
lret
sbb
mov
negb
lcall
mov
add
xchg
cmpsl
and
test
pop
shll
iret
jno
lea
sbb
mov
inc
push
mov
repz
adc
addr16
in
inc
fmull
ljmp
jb
pop
je
cmp
push
cmp
leave
lods
lea
aas
push
sub
ficoml
xlat
sub
jecxz
mov
jbe
outsl
dec
push
scas
xchg
pushf
xor
mov
xor
dec
xchg
pop
jg
cmp
xor
lods
or
es
lahf
stos
dec
in
and
lret
push
or
mov
push
cmp
adc
mov
sarl
outsl
add
fimuls
pop
inc
repnz
cmc
test
mov
cmp
adc
ret
insl
sub
stos
inc
aas
pusha
test
mov
sahf
mov
rorb
or
inc
mov
mov
mov
jg
xlat
call
mov
xor
inc
insl
filds
fidivl
jmp
aas
pop
popa
orl
aad
sbb
les
pop
xor
jle
jp
inc
or
mov
ret
movb
cmp
aam
ja
sbb
and
imul
adc
shrl
inc
push
jnp
pop
call
les
xor
out
fistps
dec
lods
cmpsl
push
sbb
xor
adc
lds
scas
dec
jae
test
sub
int
decl
std
jl
or
cmp
xor
or
mov
jno
mov
out
loop
andl
mov
cmp
shr
cld
xchg
add
push
pushf
inc
out
sbb
ljmp
dec
scas
mov
insl
add
in
xchg
xchg
pop
je
sub
cwtl
pop
add
jg
movsb
mov
imul
aaa
movsb
test
rorl
bnd
push
xor
test
inc
cmpsb
stc
or
pop
add
out
push
inc
pop
mov
cmp
decb
push
inc
aam
sub
stos
shlb
dec
sbb
adc
xchg
push
popa
sbb
aam
fldenv
lods
cmp
lods
arpl
dec
inc
inc
icebp
sub
cmpsl
fldl
call
or
into
push
shrl
roll
call
or
mov
adc
repnz
sahf
mov
lcall
or
icebp
pop
sub
adc
int3
or
jne
sub
push
inc
push
movsl
inc
or
pop
cwtl
je
add
test
inc
mov
stc
in
add
cs
ljmp
cmp
lret
loopne
into
jo
test
outsb
xchg
push
xchg
fidivrs
aaa
sarl
data16
in
data16
jae
xchg
xchg
adc
cltd
popf
call
or
dec
push
push
test
cmpsl
mov
pop
idivb
jl
mov
cmp
jmp
scas
test
int3
pop
out
pop
das
inc
xor
jp
dec
leave
arpl
aam
stos
cld
dec
mov
repnz
cmp
inc
add
sbb
rorl
mov
pop
cmc
insb
nopl
out
cmp
add
dec
shlb
pop
aaa
rorb
lods
mov
mov
insb
and
mov
sahf
jno
je
mov
xchg
ljmp
mov
loope
jp
ja
notl
scas
clc
mov
or
or
std
xchg
fdivrs
or
pushf
xor
movsb
cmp
xchg
mov
ret
jb
cmpsb
sbb
scas
aaa
push
or
sub
mov
pop
and
xchg
push
jg,pt
jo
sbb
mov
aaa
jb
nop
ja
stc
cwtl
stos
mov
ljmp
test
daa
pop
sub
shlb
rcll
or
iret
fstps
test
mov
dec
inc
inc
fisubs
mov
push
scas
cltd
or
iret
lret
dec
cmp
dec
mov
adc
imul
js
ret
ds
and
outsl
xchg
push
loop
mov
cmp
cmp
mov
jno
xchg
sbb
hlt
popf
sbbl
cld
sub
faddl
push
repz
lock
ret
mov
or
es
mov
stc
dec
pop
push
fisubrs
test
mov
or
stos
cmp
sub
out
sub
lods
mov
pop
mov
inc
pop
mov
aas
dec
testb
fdiv
pop
mov
push
in
jne
push
repnz
xchg
inc
fdivrs
test
cmp
pop
outsb
adc
dec
arpl
test
inc
xchg
sub
lds
inc
bound
and
or
adc
call
lret
and
lcall
jmp
push
js
sub
adc
test
in
pop
ret
and
test
out
popf
sub
inc
mov
js
adc
cmpb
in
pop
xlat
flds
sub
ss
in
adc
cltd
jg
push
test
and
pop
mov
aad
cmp
lock
sub
stos
cmc
or
jne
sbb
or
mov
lds
sub
in
sub
dec
cmpl
negb
jae
addr16
mov
adc
rcrb
imul
das
jbe
in
sbbl
repz
add
jp
jo
mov
push
cmpsb
int3
out
or
pop
xchg
adcb
mov
jp
xor
fs
out
pop
in
inc
ds
push
aad
dec
pop
int3
jb
imul
dec
cmpb
fists
neg
ljmp
jno
sub
dec
push
notb
lods
daa
cmp
jge
insb
mov
push
jno
xchg
jno
gs
mov
xchg
out
arpl
sbb
fbstp
lea
sub
mov
cmp
and
push
repnz
mov
int3
xchg
sbb
push
push
inc
aam
mov
cltd
cld
scas
ja
in
inc
ret
fwait
shll
in
sub
xchg
jnp
sahf
es
cmc
sarl
loopne
in
jl
push
xor
out
mov
cld
xor
lea
push
ja
out
fucomp
cli
mov
push
mov
adcb
repnz
mov
mov
xor
push
adc
cmpsl
inc
xchg
addb
sti
mov
cmpsl
fs
stos
scas
insl
rclb
andl
popa
imul
rcl
add
mov
and
fnstenv
cmp
dec
in
inc
test
rolb
nop
aam
popa
jg
stos
mov
dec
notl
jno
sbb
cld
fs
adc
jns
xor
fs
add
cmp
idivb
cld
addb
loope
mov
outsl
pop
xchg
pop
repnz
xchg
add
mov
sti
lods
imul
adc
imul
push
jae
push
sub
lahf
sbb
cmpsl
push
sbbl
enter
mov
add
inc
or
sbb
sahf
repnz
cmc
mov
pop
pop
jae
test
dec
xchg
or
xor
add
mov
dec
mov
mov
add
xchg
dec
sbb
nop
jmp
xchg
std
pop
xchg
mov
dec
fidivrl
add
fwait
popa
push
xchg
and
out
jae
mov
or
inc
and
mov
and
lds
jg
inc
mov
add
push
xor
jnp
testl
arpl
xchg
jnp
inc
xor
mov
sub
jge
mov
mov
mov
in
xchg
mov
addr16
push
cltd
mov
shl
mov
jecxz
popa
ja
imul
dec
nopl
out
test
lret
sub
sbb
clc
lock
sub
divb
ss
dec
mov
adc
xlat
fimuls
popf
in
enter
rol
lea
mov
sbb
push
cmp
push
push
lds
fsubs
aam
add
adc
push
stc
cmpb
dec
shlb
ja
mov
addr16
out
leave
xchg
insb
add
ljmp
mov
mov
out
aad
roll
push
mov
xchg
xchg
xchg
pop
mov
icebp
cmp
xor
sahf
or
mov
add
mov
pop
test
loope
insl
gs
sahf
repz
out
xor
cld
das
int
push
aaa
lds
insb
popa
sub
daa
cmp
add
sbb
xor
sub
and
dec
fisubrl
lock
adc
lds
push
adc
jo
outsl
jo
xchg
andl
hlt
hlt
ret
sarl
inc
push
xchg
aad
into
pop
movsb
jecxz
pop
inc
fcoms
mov
or
sub
mov
jmp
fdivrl
jmp
mov
lcall
jmp
mov
mov
or
lea
mov
rol
stc
sub
in
dec
shlb
push
mov
jnp
test
xor
ds
and
shrb
inc
lcall
sar
mov
fists
inc
retw
or
push
stos
sub
push
andb
jae
cli
ds
fsubrs
jnp
das
cmp
lock
pop
loop
cli
adc
leave
or
clc
scas
daa
jl
pop
addr16
cmp
jmp
cld
lods
jns
out
fldl
pushf
ds
sub
pop
and
sbb
and
clc
add
stos
hlt
xchg
xchg
mov
lock
ja
dec
push
add
dec
in
and
and
mov
pop
into
pop
loopne
mov
cmp
add
sub
sti
pop
xor
jecxz
lret
adc
insl
ss
add
pop
into
gs
adc
push
lds
lods
xor
fbstp
adc
add
mov
mov
adc
scas
sbb
sbb
shlb
mov
shrl
xor
es
cmp
js
dec
sbb
iret
in
jns
addr16
mov
and
js
mov
sbb
jl
mov
lahf
pop
loope
jo
jns
inc
jne
and
stos
pusha
push
mov
and
shlb
or
sahf
ret
sbb
lea
fistpll
dec
adc
in
test
lea
jl
lock
push
inc
arpl
insb
cli
push
xchg
cmp
pop
out
frstor
leave
es
mov
arpl
fstpl
repz
mov
mov
je
push
dec
lods
iret
or
add
iret
and
fiadds
sub
jo
in
add
jo
out
xor
gs
in
and
jmp
les
nop
std
inc
data16
pop
cmp
mov
adc
or
aam
iret
addb
cmp
ljmp
aaa
and
out
je
sbb
pop
sbb
cmc
mov
adc
sbb
add
stos
xor
mov
mov
mov
fstl
push
lods
cmpsb
rcl
pop
inc
pusha
xchg
xchg
les
test
fbld
push
movsl
repz
add
lods
sub
mov
adc
int3
out
ror
icebp
pusha
outsb
jl
mov
dec
loop
xorb
fdivrl
push
mov
fistl
adc
ret
rclb
outsb
add
fwait
push
shrl
sbb
adc
cmp
dec
clc
rorb
jae
lahf
add
loopne
insb
and
sbb
add
push
stos
xchg
js
push
xor
dec
inc
dec
jmp
bound
mov
lea
inc
sahf
inc
pop
dec
arpl
xchg
sub
push
mov
mov
push
popa
add
inc
fs
or
adc
lahf
sub
rclb
rol
inc
out
daa
dec
fdivrl
jns
in
out
movsb
add
int
sbb
xor
mov
in
push
dec
popf
or
ljmp
shlb
inc
adc
ljmp
stc
jle
out
lea
push
jge
pop
out
pop
or
cmpl
shlb
lock
jno
addr16
add
fcoml
cs
imul
jne
and
pop
push
pop
inc
add
in
outsb
jge
cli
pushf
mov
and
xlat
enter
out
sub
aam
sub
js
dec
loopne
lcall
pushf
or
cmp
or
ss
js
dec
stos
or
je,pt
lret
pop
push
data16
or
add
push
sub
out
pop
divb
shrl
imul
inc
jmp
outsb
add
aam
mov
insb
lcall
loop
loop
mov
sahf
xor
aad
mov
push
sub
mov
dec
xlat
fdivp
xor
inc
fs
data16
inc
adc
add
cmp
sub
sub
dec
pop
out
jp
and
int
inc
fmuls
insl
insb
add
movb
jnp
push
out
xchg
xor
lcall
cmp
sbb
and
scas
outsb
ljmp
mov
jb
movsb
add
ror
xor
jb
int3
add
mov
jmp
lock
lods
repz
pop
mov
jns
adc
pushf
fidivl
and
push
addr16
and
pop
insl
cld
jp
popa
lods
icebp
addr16
sub
and
popf
sbb
dec
stc
add
sti
mov
dec
and
adc
out
je
dec
xchg
aas
insl
mov
adc
adc
cmp
jno
in
pop
bound
ret
or
mov
jmp
out
push
pusha
gs
scas
xchg
xor
xor
sahf
push
inc
push
icebp
jae
add
adc
test
stc
jnp
pop
das
repz
push
jae
cltd
add
mov
jle
mov
xchg
sub
leave
sbb
mov
mov
sbb
arpl
hlt
xor
popa
lods
mov
outsl
add
pmulhw
mov
mov
dec
popa
add
das
adc
mov
or
pop
dec
inc
mov
pop
lahf
or
cli
cmp
dec
mov
out
xor
out
mov
lret
popa
sti
repz
out
popa
popa
lods
mov
adc
mov
pop
jbe
inc
sbb
jno
std
adc
test
cmp
leave
es
int3
sbb
mov
sti
sub
adc
stc
fdiv
mov
ret
add
cld
pop
clc
inc
push
xor
lods
dec
aam
icebp
fsubr
in
xor
js
stos
movsl
cmpsl
xlat
lret
jbe
negb
jecxz
int
in
das
xchg
push
andb
ja
lods
loop
lret
xlat
inc
xchg
pop
inc
mov
sub
add
adc
jae
mov
jns
or
pushf
adc
int
xor
inc
or
pop
push
imul
cmp
dec
mov
mov
repz
cli
lock
mov
int3
push
mov
cs
jo
enter
rclb
sbb
pop
sbb
imul
sbb
xorb
lcall
and
xchg
sarl
sbb
or
pop
push
insl
mov
cmp
loop
in
mov
js
cmc
int
dec
jmp
or
push
pop
call
cmp
shll
insl
add
inc
dec
mov
adc
arpl
xlat
lock
cwtl
lret
ret
sub
and
dec
inc
test
addr16
test
je
push
lods
ss
and
push
stos
add
aaa
loop
cltd
inc
mov
aaa
push
out
mov
test
sbb
out
mov
insl
adc
ret
xchg
push
xor
push
sbb
mov
lea
and
mov
imul
fadds
cmp
push
sahf
sub
push
sub
mov
daa
outsl
xchg
aas
jmp
pushf
mov
jb
in
sub
adc
sub
in
icebp
adc
dec
ljmp
repz
add
sbb
pop
sbb
out
out
cmp
sbb
add
les
sbb
std
fs
cmpsb
mov
xchg
mov
imul
pusha
jb
push
dec
movsl
mov
sbbl
fnstsw
test
cmp
mov
mov
push
addb
icebp
mov
jbe
ja
and
mov
lock
push
outsb
lds
add
sbb
adc
fcomps
arpl
pop
lret
sub
dec
xchg
cmc
or
pop
aad
rorb
stos
sub
mov
push
lock
jbe
lock
lret
aam
arpl
jns
in
mov
pop
fucom
call
xchg
sub
repz
and
push
jno
nop
fldt
add
pop
je
adc
inc
inc
sahf
xchg
lods
pop
push
cmpsl
cmp
push
sti
aas
jo
push
movsl
test
lods
sar
int
xor
arpl
negl
loopne
call
fsubs
xchg
xor
orb
lahf
fwait
cwtl
loopne
lret
mov
pushf
andb
dec
call
pop
push
mov
inc
in
outsb
nop
lahf
and
sti
push
insb
out
mov
cwtl
lock
js
jnp
inc
sbb
stos
imul
or
push
jg
daa
outsl
adc
inc
movsb
jecxz
mov
jp
jb
in
dec
testb
mov
cmc
xlat
cmp
push
push
sub
test
shl
push
inc
pop
xchg
jns
push
lods
jnp
mov
mov
fs
and
cmp
jp
sbb
addr16
stc
iret
sub
cwtl
call
aad
test
adc
lds
in
inc
mov
sbb
cmc
pop
fsubrs
sbb
cmp
pop
sub
gs
mov
imul
rcrl
call
jmp
mov
mov
add
jnp
sub
mov
jge
pop
iret
dec
push
jl
cltd
mov
mov
dec
int3
fmulp
int
mov
xchg
out
movsl
cli
mov
cld
mov
dec
xchg
xchg
loope
in
or
mov
clc
cmpsb
inc
mov
in
xchg
sub
insl
sahf
jmp
cmp
jb
jo
xchg
add
dec
push
aaa
cli
push
adc
or
test
hlt
out
in
sub
icebp
ret
ret
bound
mov
shrb
dec
xchg
imul
movsl
adcb
enter
mull
bound
inc
push
iret
jns
and
cmp
ljmp
xchg
in
fwait
push
in
movsl
in
mov
mov
fistl
and
outsb
roll
test
xor
sub
or
in
mov
dec
out
inc
into
cwtl
ss
in
xor
ds
arpl
cmp
sub
pop
pusha
adc
fs
xchg
cmpsl
adc
pop
inc
out
int
add
inc
sub
mov
adc
lds
jb
push
cmp
push
je
mov
mov
ja,pn
es
sbb
fcmovnu
jne
cmpsb
cwtl
xchg
dec
cmp
call
cld
jne
inc
testb
fld
fildl
movsb
popa
andl
int
xlat
xchg
mulb
inc
mov
push
adc
dec
jg
mov
les
jecxz
sahf
outsl
rol
mov
add
pop
insb
add
sbb
jg
pop
and
arpl
xchg
dec
push
or
cmp
cmp
in
movsb
pop
pushf
and
sbb
cmp
jmp
or
jns
sahf
lea
and
sbb
pop
add
iret
adc
mov
mov
test
incb
in
notb
xor
pop
mov
ds
sti
popf
int
cmp
js
jns
sbb
fldcw
and
sbb
jg
mov
sub
mov
iret
icebp
lds
frstor
sub
fcomip
mov
xchg
lock
sub
pop
in
stos
xor
dec
aad
fcomp
push
loope
loope
fiadds
inc
pop
daa
push
mov
mov
or
rep
cmc
sub
lock
out
sahf
insl
xchg
ja
popf
push
xchg
inc
push
jle
jbe
lcall
add
es
and
popf
ss
cld
pop
inc
daa
mov
or
vorps
and
shrl
xor
sbb
mov
mov
movsl
out
push
adc
aaa
in
ss
popa
fsubl
dec
data16
mov
cmp
dec
cltd
std
in
push
mov
push
sahf
sbb
xor
or
les
les
lock
mov
sub
jl
je
xchg
popa
cs
cmp
pop
jno
bound
adc
cmp
jg
sbbl
pop
xor
sahf
add
push
and
pop
imul
pop
aad
dec
mov
stos
lds
in
jge
inc
jmp
sti
into
jo
hlt
hlt
push
stc
mov
enter
dec
fcoms
mov
dec
lds
pop
test
les
mov
add
or
mov
ljmp
sarl
ljmp
cmp
aad
add
into
fwait
sbb
and
pop
inc
mov
jns
test
mul
lcall
fwait
pushl
clc
test
cwtl
lahf
push
cli
faddl
xchg
push
mov
cmpsb
insb
scas
mov
and
nop
pusha
cmpsl
push
add
mov
sub
mov
aas
dec
fnstsw
jb
push
les
aaa
jl
popa
frstor
and
or
cs
inc
outsl
ret
jnp
xor
cltd
push
fists
sbb
ja
mov
subb
sti
aaa
into
in
and
push
and
jl
pop
scas
fisubrs
lds
cmp
add
xchg
mov
sbb
jne
pop
aam
mov
js
or
repz
icebp
jnp
outsb
dec
cmpsb
adc
sub
sbb
popa
mov
or
lock
dec
aad
xchg
lods
pop
xor
dec
push
mov
std
clc
sahf
pop
mov
sub
push
push
push
jl
mov
mov
fs
mov
inc
ss
and
loope
adc
add
or
imul
cli
and
ret
pop
xchg
arpl
hlt
daa
pop
negb
jge
outsl
imul
fistl
and
pop
std
aas
dec
xor
add
xor
test
xchg
fistl
mov
mov
pop
out
mov
std
in
pushf
fisubrs
arpl
aaa
testb
inc
or
mov
pop
imul
xor
push
cld
mov
push
repnz
cmp
mov
popf
test
push
cltd
ror
out
js
cltd
push
jns
mov
pop
addl
add
insl
or
mov
adc
popf
shll
pop
or
xchg
or
cwtl
outsl
into
mov
and
int
in
jle
sub
mov
andl
bound
xchg
movsb
call
popa
mull
loopne
mov
xchg
add
fcmovb
in
push
stos
test
aam
imul
shlb
cmpsl
mov
sbb
dec
lcall
scas
outsl
lods
jno
sub
out
inc
ja
add
xor
repnz
fcoml
fnstsw
rsm
movd
push
mov
adc
es
and
cltd
xor
mov
pop
jno
rol
lret
cltd
test
fsubrp
lods
xchg
sub
xchg
iret
or
iret
jae
jle
loop
data16
or
shrb
mov
dec
test
inc
leave
xor
jecxz
ds
mov
cmp
dec
icebp
and
dec
test
sub
cmp
insb
movsb
call
mov
push
cmp
push
repnz
out
xchg
jg,pt
frstor
push
movsb
repnz
scas
cmp
sub
jmp
out
js
shlb
mov
les
mov
xchg
sbb
daa
xchg
pop
ja
inc
test
inc
lock
ret
fsubrs
outsl
dec
mov
repnz
mov
movsl
xor
xchg
scas
inc
inc
mov
push
in
ret
int3
cmp
loop
mov
sub
mov
addr16
jns
fisubl
mov
jns
pop
adc
lret
or
psllq
and
inc
xchg
leave
mov
mov
mov
inc
jns
sub
cmpsb
jl
dec
lahf
cmp
es
mov
xor
test
xchg
mov
sub
pop
xlat
and
pop
and
lahf
push
cmp
iret
data16
fs
fisubs
add
mov
and
push
sarb
imul
clc
out
cs
pop
cmp
ljmp
mov
fldcw
or
into
fdivrl
add
out
rorb
mov
andl
jns
in
cmp
sbb
fcmovne
sbb
out
cmp
lods
rclb
sbb
data16
push
and
nop
dec
fcompl
fstps
lret
dec
sub
push
and
negl
mov
imul
fisubl
leave
xor
sub
test
jle
addl
cli
and
sbb
or
shrb
mov
xor
dec
mov
mov
out
pushf
data16
rorb
push
flds
rsm
mov
notl
fucom
imul
cmp
das
cmp
jnp
in
rcll
mov
cmpsb
out
incb
enter
fidivl
lret
xchg
data16
nop
xor
dec
dec
lret
cmc
pop
xlat
xor
fdivrl
loope
adc
out
adc
push
pop
pop
cli
mov
pop
jb
adc
ljmp
loop
test
arpl
fiaddl
mov
loopne
or
iret
push
jnp
ret
shlb
fldt
ret
jg
test
scas
dec
add
push
outsb
or
mov
xor
add
mov
push
loop
adc
mov
shlb
stos
inc
imul
enter
sub
stc
or
shl
in
or
fnsave
int3
jl
xchg
lods
mov
dec
loope
loopne
cmp
loopne
and
out
imul
sbb
sub
sub
sub
aaa
mov
imul
inc
fiadds
xlat
outsl
or
gs
push
in
jno
sti
xorl
mov
inc
sub
dec
movsb
pop
dec
push
add
cmpsb
inc
cmp
stc
push
test
rclb
fstl
and
adc
inc
cmp
mov
fiaddl
loop
stos
aad
test
test
ret
adc
jnp
and
les
and
daa
pushf
push
sub
xor
add
xchg
push
not
pop
ret
shrl
jae
insl
mov
jl
and
cld
mov
cmp
adc
or
pop
mov
lea
gs
xchg
aam
push
dec
fdivp
pop
shlb
rorl
xorb
movsl
pop
insb
in
cmp
dec
mov
scas
repnz
jno
sti
outsb
into
xchg
and
and
adc
and
adcb
add
int
loopne
xor
mov
dec
cmp
pop
stc
cmp
sbbl
jae
jle
mov
adc
push
sbb
or
push
xchg
jecxz
stc
add
mov
add
scas
jle
inc
pop
scas
dec
and
sti
sbb
movsb
jp
ljmp
mov
rorl
lods
xchg
js
or
xor
xor
adc
sub
gs
xchg
into
enter
aam
mov
cmp
mov
sub
xor
outsb
sahf
mov
inc
stos
push
dec
and
das
cmpsl
inc
cld
mov
mov
cmp
mov
add
ja
xlat
cmc
mov
fmul
jns
cmp
in
mulb
mov
frstor
pop
and
cli
out
in
hlt
ffreep
push
adc
jo
andb
inc
mov
adc
aam
cmpps
or
sbb
sbb
jmp
pop
sahf
test
js
fldl
add
test
push
int3
jg
mov
xor
fdivrp
cs
mov
cmp
loopne
mov
xor
outsl
and
mov
pusha
push
int
inc
sbb
cwtl
sbb
dec
cmp
mov
xor
dec
pop
push
test
and
in
push
xor
cmpsb
arpl
push
out
add
int
in
sbb
xchg
xchg
mov
ret
loope
loope
adc
gs
das
test
test
or
jl
arpl
jae
loope
aas
pop
fisubrs
scas
insb
and
pusha
fnstcw
lret
scas
push
mov
pop
pop
gs
imul
mov
sarl
cmp
test
cmc
pop
pop
insb
sub
lahf
cmp
test
sbb
jb
stos
fcompl
mov
push
pushf
mov
add
mov
leave
into
xchg
mov
mov
imul
sahf
clc
push
cmp
adc
mov
fs
les
mov
add
mov
dec
and
mov
clc
ljmp
push
pop
xchg
iret
in
data16
pop
sub
sub
sub
insb
cwtl
add
cs
push
jmp
loopne
push
ss
adc
pop
and
mov
ss
fwait
lods
rol
pop
test
inc
imul
outsb
push
inc
inc
roll
sub
sub
rorl
jmp
into
lret
addr16
lods
outsl
movb
cmc
cmpsl
in
test
lods
pop
fnstsw
ret
dec
and
pop
add
cmp
and
jp
rolb
mov
cmc
rcl
xchg
mov
movsb
stos
out
sbbl
and
cmp
pop
leave
fcmovnbe
es
lcall
sahf
stos
leave
cs
jae
jbe
pop
inc
gs
or
sbb
mov
ret
pop
adc
or
or
outsb
jle
ret
cwtl
int
xor
push
dec
push
xchg
ret
jle
cwtl
xlat
insl
mov
jecxz
push
sahf
push
xlat
aaa
jbe
cmp
jo
add
and
mov
xchg
sub
sub
sbb
and
fwait
orb
mov
sub
cmp
pop
aad
cwtl
pop
push
sub
xor
mov
pop
repz
aad
sub
std
lods
ljmp
or
pusha
add
movsb
mov
inc
dec
enter
push
sbb
pop
dec
jb
inc
xchg
pop
jbe
inc
fimuls
scas
gs
std
out
sti
pop
sbb
jbe
sbb
cmp
cmp
xchg
pop
pusha
outsb
fcmovnb
pop
or
lods
pop
mov
dec
fidivl
sbbb
jmp
or
nop
fsubrl
lahf
pop
pop
stc
loop
shll
mov
sub
add
xchg
jne
or
jp
jns
pop
orl
cwtl
xchg
mov
add
mov
mov
hlt
fldl2e
ds
mov
aas
dec
mov
or
test
imull
imul
cld
fistpl
cmp
ret
data16
inc
in
push
and
jo
add
inc
xor
adc
adc
aad
sub
fisubrl
and
adcl
inc
xor
int
cld
jns
jg
in
dec
fdivr
ds
sub
jo
mov
aaa
jne
push
xorl
outsb
sub
lea
insb
xlat
cmpsl
jno
std
mov
dec
jge
pop
pop
jle
sub
sbb
and
mov
int3
dec
aad
push
mov
inc
add
fsts
push
ss
cli
jmp
test
outsl
sbb
cltd
test
or
pop
pop
je
inc
dec
inc
push
in
or
aad
test
or
daa
mov
not
and
sub
jns
xchg
mov
cmp
sbb
jl
push
stos
in
add
sbb
mov
sbb
movsb
sub
adc
cmpl
stos
jp
daa
push
aas
or
xchg
sub
sub
ret
cmc
mulb
sub
sub
rcll
shlb
jle
mov
stos
rorb
or
lods
and
addb
fcompl
xor
ds
mov
fisttpl
shlb
repnz
std
dec
loopne
fcomps
sub
mov
or
mov
jmp
xchg
js
mov
test
jns
out
xor
cmp
sbb
or
loopne
mov
xchg
push
add
int3
fwait
cltd
test
or
mov
cmpl
and
mov
cmp
or
pop
mov
lock
je
pop
ret
pop
inc
cs
subb
test
xchg
inc
and
xchg
mov
mov
fmuls
jno
fs
not
ss
sbb
sub
imul
lods
outsl
mov
movsl
pushf
mov
mul
mov
jg
xchg
fstpt
xchg
add
pusha
push
repnz
dec
dec
in
fists
sarb
and
and
sbb
call
xchg
cmp
ljmp
xor
jb
arpl
addb
fwait
mov
outsl
loopne
stc
jg
cmc
mov
jmp
mov
jl
push
mov
out
and
pop
sti
leave
int
xchg
nop
ja
sub
iret
sub
add
lret
mov
jne
sub
push
int
addl
push
adc
push
or
aad
jns
adc
arpl
call
fbld
dec
adc
ret
cwtl
daa
ljmp
push
scas
jg
and
mov
loopne
add
fimull
jns
adc
lds
sub
test
fldl
push
adc
aaa
loop
ss
pop
cmp
aas
cwtl
cltd
sbb
jg
jno
jmp
push
loopne
ljmp
cld
leave
push
push
jl
inc
movsl
push
add
cmp
xchg
push
jmp
mov
sahf
add
mov
or
lret
inc
lret
add
add
lock
sub
lret
leave
lret
jns
add
add
adcb
and
push
or
sbb
cld
cmp
push
or
aas
pop
orb
xor
jne
push
aas
and
mov
arpl
flds
adc
jg
or
jo
xor
testb
push
out
ds
es
stos
ss
inc
and
lret
xchg
out
cli
jne
mov
das
push
int3
jg
icebp
jo
and
cmp
xchg
cmp
cmpsb
mov
xchg
call
mov
hlt
jge
sahf
adc
xor
nop
lret
rcrb
push
iret
popa
cmp
xchg
lods
and
pushf
mov
lock
adc
push
scas
sub
dec
push
gs
mov
xlat
cmp
and
loop
ret
mov
js
cmpsl
loopne
sub
xor
imul
jmp
inc
cmp
mov
stc
test
jnp
repz
mov
into
ret
adc
lea
push
scas
call
push
xchg
and
sub
je
sarl
adc
xchg
ret
jle
jb
mov
add
lods
sbb
js
push
ljmp
into
push
into
lea
arpl
sti
mov
sub
fdecstp
xchg
ss
out
ja
jb
arpl
mov
imul
scas
jge
das
sahf
ficoms
nop
and
lcall
test
pop
aam
pop
add
daa
arpl
and
cwtl
stos
fwait
mov
jg
arpl
and
imul
mov
push
lcall
rcrb
push
pop
sti
mov
sub
aaa
into
in
fimuls
mov
aas
das
xchg
aaa
push
xor
shrb
add
dec
inc
rcl
pop
fs
cmp
daa
pop
xchg
adc
fcompl
inc
fwait
test
stos
outsb
daa
fmuls
push
push
jno
icebp
sbb
xchg
mov
mov
scas
out
dec
in
mov
lret
popa
add
jno
aaa
xor
clc
std
jmp
mov
dec
mov
push
loopne
fstl
lret
mov
or
cmpl
cmpb
test
jle
cwtl
mov
testb
sub
js
pop
add
xchg
imul
pop
cmp
aas
mov
inc
outsb
test
jno
int
dec
sbb
adc
shl
ljmp
lcall
sbb
jne
ret
fildll
inc
movsb
sbb
popaw
cmpsb
mov
add
mov
in
push
or
aas
fbstp
push
mov
mov
adc
sub
test
jl
or
ficomps
sahf
dec
or
outsb
add
or
pop
mov
xchg
mov
imul
pop
push
mov
add
cmpsb
popf
mov
jo
lods
inc
or
mov
cld
out
leave
push
push
dec
sbb
inc
js
mov
push
or
popf
push
mov
adc
jb
lret
and
daa
and
mov
nop
jg
dec
scas
fiadds
in
test
aas
push
sbb
or
xchg
aad
dec
shrl
imull
xchg
jno
and
pop
jge
xchg
daa
pop
adc
fdivl
arpl
test
cli
xchg
jg
sbb
cld
add
sbb
inc
mov
je
jae
xor
rcrb
mov
push
stos
xor
cmp
cmc
mov
sub
subb
sbb
inc
jg
add
pop
mov
xchg
sub
pop
testb
aaa
int
sub
aad
scas
call
mov
and
mov
cmovs
scas
jp
imul
pop
in
add
add
pusha
test
xlat
inc
stos
mov
xchg
cmpsl
mov
outsb
push
add
outsb
inc
je
xchg
imul
cwtl
add
sbbl
mov
add
int
inc
or
mov
loopne
stos
xor
loopne
sbb
fdivrl
mov
ss
mov
in
cld
mov
push
sahf
inc
mov
push
insl
movsb
dec
jnp
cmp
add
inc
pop
inc
in
aam
sti
movsb
push
cli
sub
nop
test
ret
push
sub
sbb
push
cwtl
rorl
aam
lcall
addr16
mov
fnstsw
aad
inc
jne
dec
pop
js
xlat
cmp
push
lahf
adc
popf
aad
and
imul
fbld
or
cli
pop
or
push
dec
pop
push
pop
cs
fcomps
test
pop
ds
dec
pop
and
mov
fsub
mov
and
mov
enter
fcmovu
xor
push
out
jge
fildl
push
das
jb
je
mov
imul
lds
xchg
mov
dec
iret
add
lret
pop
ss
sub
add
push
pop
outsb
leave
push
ret
ss
and
lods
negl
test
mov
inc
ss
cli
sub
imul
adcb
dec
mov
jb
push
ja
stos
jne
xchg
cld
sub
inc
and
dec
sbb
jl
xchg
jecxz
les
icebp
in
adc
jae
fldt
shlb
fdivl
rcr
adc
or
aaa
fucomip
stc
cmc
arpl
pushl
fnstenv
mov
sbb
shll
add
sub
xor
mov
xor
leave
cmp
stos
clc
pop
cmc
push
pop
pop
mov
das
push
ss
mov
aam
push
push
ljmp
cmpb
mov
pop
mov
gs
rcrl
xor
inc
ljmp
or
xchg
pop
mov
clc
sub
push
mov
in
mov
cmp
fwait
shll
jno
cld
out
cmp
and
rorb
shll
aaa
into
mov
adc
nop
push
adc
push
jns
lock
ret
mov
pop
or
xor
dec
mov
outsb
into
cmp
sbb
out
dec
adc
clc
jecxz
int3
dec
idiv
sub
rorl
mov
rcrb
dec
icebp
insl
insl
lahf
adc
mov
sub
adc
sub
int3
sbb
sbb
sub
fidivrl
pusha
insl
jb
xchg
addr16
adc
jp
mov
jmp
mov
dec
incl
cmp
addb
fistl
and
sbb
lds
and
push
mov
add
mov
lahf
int
sbb
mov
or
adc
push
ret
pop
inc
dec
nop
mov
movsb
pusha
pop
jle
sbb
movsl
gs
cmpsb
out
fdiv
orl
jp
js
dec
and
sbb
imul
scas
call
pop
out
xor
sbbb
lds
bound
mov
ret
mov
mov
int
popf
jmp
xchg
mov
sub
cwtl
mov
pop
scas
or
jp
sub
out
add
jne
adc
in
jmp
ljmp
lods
sub
xor
push
cmpxchg
push
sti
xchg
inc
xor
push
outsb
movsb
cwtl
push
fsubs
mov
leave
jmp
and
pop
pop
jle
dec
repz
mov
addr16
adc
jno
enter
dec
add
jle
in
pusha
lds
stos
test
push
adc
les
repz
cmp
pop
push
jecxz
xchg
push
dec
ret
call
push
jg
mov
adc
inc
leave
mov
shll
iret
movsl
icebp
rcrb
or
loopne
pop
jecxz
fisubs
mov
enter
inc
sub
push
ret
mov
es
cmc
sbb
orb
repz
pop
pop
fnstsw
push
popf
jg
aam
out
int
and
daa
mov
mov
sub
mov
mov
movsl
pop
mov
mov
push
outsl
jg
loopne
mov
dec
pushf
shlb
pop
or
fistpll
sahf
cmp
mov
dec
sub
fwait
jnp
sbb
inc
lahf
imul
in
ss
dec
stc
adc
jmp
pop
pop
sub
hlt
and
dec
add
enter
xchg
test
icebp
jmp
ds
fwait
dec
rcrb
sub
sahf
iretw
mov
ja
popa
sbb
testb
std
sbb
setle
jmp
sahf
nop
jo
int3
sub
and
push
jno
xchg
pop
and
in
jnp
adc
or
into
sar
scas
mov
jns
pop
inc
pusha
xchg
mov
sub
das
leave
xor
fidivs
inc
aam
loope
jg
sbb
stos
testb
adc
inc
mov
jmp
es
pop
jo
jmp
enter
add
pop
ljmp
das
rorl
insb
sarl
sub
leave
xor
rcrl
cld
test
add
lods
push
xchg
or
scas
out
cmp
in
hlt
xor
sbb
outsb
mov
mov
loope
aam
fidivrl
subb
sahf
fistps
ds
cmp
xor
out
movsl
xchg
adc
push
mov
add
and
pop
jo
adc
cmp
gs
sbb
jbe
sub
adc
push
push
sahf
clc
cmp
sbb
movsb
nop
shl
mov
imul
movsb
mov
mov
iret
mov
sbb
jns
mov
stos
test
pusha
test
pop
mov
inc
aas
std
loop
rcl
sub
add
in
out
cli
mov
or
mov
xor
fwait
sti
jmp
subl
jno
or
and
addr16
mov
mov
or
bound
pop
jp
sub
xchg
add
inc
test
cmp
xor
mov
std
lcall
in
dec
test
scas
call
mov
sahf
in
decl
push
ljmp
es
in
into
jecxz
push
fiaddl
ficomps
xor
stos
mov
les
aam
sbb
aad
add
pop
call
out
pop
ja
fsubr
in
adc
add
sbb
xchg
bound
jecxz
loope,pt
mov
jl
jne
jne
jb
dec
xchg
int
xchg
aas
add
pop
sbb
jp
adcb
aad
scas
adcb
push
test
daa
stos
mov
shl
divl
mov
jne
aaa
and
out
xchg
xlat
or
aas
or
jnp
push
es
pop
and
xor
cmpsb
push
std
push
insl
xor
xchg
insb
xchg
mov
sub
adc
ret
mov
fimull
mov
arpl
cmpsl
mov
loop
add
movl
jge
clc
test
pop
xor
and
cli
cmp
imul
data16
mov
pusha
adc
daa
cmp
adc
out
lds
sbbb
xchg
push
sub
mov
out
xor
or
adc
push
sbbl
hlt
mov
aaa
mov
dec
and
add
sbb
add
xor
and
out
add
lahf
stos
jnp
ljmp
jb
mov
popf
pushf
clc
xchg
cmpsl
in
mov
and
mov
int3
and
push
dec
ficoml
mov
lahf
sahf
push
imul
xor
icebp
dec
sub
bound
xchg
sbb
pop
mov
inc
rolb
xor
addb
lahf
into
mov
clc
ja
push
mov
adc
jg
adc
pop
ret
sub
scas
loop
aas
dec
clc
dec
dec
and
sub
icebp
inc
inc
and
xorb
test
sti
cmp
ljmp
fdivrs
dec
sbb
out
jae
into
push
hlt
cmp
stos
ror
jo
sbb
testl
sbb
sbbb
push
adc
xor
fldcw
mov
jno
test
ficoms
lods
jg
mov
int3
stc
hlt
mov
inc
sub
inc
loopne
xor
add
loopne
xor
push
data16
pop
push
movsb
cmp
mov
int
mov
inc
jmp
mov
ret
imul
add
dec
adc
ss
adc
aad
mov
xlat
pop
and
loop
mov
mov
jle
fdivrs
add
jae
inc
std
jge
stos
mov
das
cmpsb
hlt
mov
mov
mov
aaa
xchg
scas
inc
pop
push
add
out
jle
stc
mov
jge
addr16
mov
jge,pn
mov
mov
inc
lret
jno
shll
notl
lahf
dec
push
sbb
fisttpl
shl
push
mov
inc
push
mov
dec
gs
mov
xorl
sub
xor
jecxz
out
fstpt
cmp
int
imul
dec
sub
fwait
repnz
mov
lahf
test
mov
push
insb
and
and
js
les
mov
jmp
nop
popf
mov
popf
mov
shrb
dec
je
aaa
mov
orb
mov
out
out
push
aas
sbb
inc
test
cli
repnz
mov
jno
push
fsubs
mov
sub
and
sbb
mov
adc
and
sti
ja
gs
mov
add
movsl
vmread
rorl
jns
dec
loop
pcmpgtd
pop
pushf
xlat
mov
fnstsw
outsb
shll
add
pop
or
inc
js
add
inc
sub
mov
mov
sbb
rorl
rorl
adc
adc
and
sub
mov
jb
daa
jb
enter
push
push
pop
sti
mov
mov
les
add
sub
daa
repz
pop
inc
xor
mov
sbb
or
icebp
cmp
insb
frstor
mov
jnp
addr16
ffreep
aam
jmp
xor
call
sub
int
mov
cmpsl
scas
int
popf
ljmp
mov
mov
dec
out
inc
adc
jbe
xor
mov
std
xchg
orl
mov
addr16
push
ja
shlb
movsb
push
out
aad
adc
fs
inc
pop
hlt
ficoms
jl
xor
popa
lcall
xchg
or
daa
lret
adc
icebp
je
push
cmpsb
sbb
push
mov
in
mov
ficomps
cmp
xor
jge
cmp
aas
ss
sbb
xor
push
jmp
or
inc
mov
push
mov
fisubrl
add
xchg
xchg
xchg
xorb
mov
jae
cmp
xchg
and
enter
sbb
idivb
andb
out
push
or
pop
dec
dec
lret
leave
lods
outsl
cmp
inc
push
pop
insl
jno
push
rorb
lcall
mov
cmp
cmp
push
jecxz
dec
push
lcall
cmp
adc
jnp
or
call
mov
fnstsw
dec
ljmp
xor
es
push
jmp
test
pop
mov
int
or
pop
push
cmpsb
adc
fstl
inc
or
xor
fwait
pop
pop
aad
dec
and
pop
out
repnz
and
outsb
std
mov
pop
dec
test
and
testl
nop
insl
ficomps
cmp
dec
shll
inc
fnstcw
lahf
add
test
ja
pop
xor
aad
and
xchg
pop
out
and
stos
push
repz
das
mov
pop
mov
pop
sbb
xchg
add
push
push
jns
aas
cwtl
lods
vpunpcklbw
push
xchg
sub
cmp
pop
outsb
xor
popa
add
cltd
stos
add
adc
mov
jp
sti
cmpsl
sti
insb
popf
loope
sbbb
fldenv
inc
lret
push
dec
mov
push
inc
idiv
idivl
push
dec
movsb
or
js
outsb
jl
mov
adc
jmp
xor
adc
scas
and
xchg
adc
dec
fdivrl
movsb
cmp
ret
test
jno
rcrl
mov
xor
aad
xor
xor
mov
inc
xchg
stos
stos
adc
jnp
add
mov
cmp
add
ljmp
into
mov
mov
addr16
test
jne
xor
inc
rcl
inc
jg
js
ret
push
sahf
gs
mov
repz
and
cwtl
and
fbld
jl
xchg
mov
test
popa
add
insl
jle
stos
rcrb
add
jno
sarb
pop
stos
lcall
jg
sbb
repz
dec
dec
pushf
in
aam
and
push
fsubp
fimuls
pushf
sub
fdivrl
sbb
int3
pop
jne
jmp
fcompl
fisubrl
or
mov
or
adc
push
iret
in
cmp
push
nop
call
or
daa
or
dec
movsl
push
idivb
push
inc
mov
js
inc
jo
pop
rcr
ja
xlat
and
inc
in
xchg
pop
fiaddl
pusha
mov
movsbl
incb
mov
movsl
in
cmc
pop
aaa
cmp
fucom
dec
aam
inc
int
sbb
insb
mov
mov
cmc
sbb
xor
inc
mov
shrb
sbb
loop
test
pop
sub
mov
hlt
push
das
bnd
xchg
and
mov
js
sahf
imul
pushf
add
adc
xchg
inc
aad
add
lock
pop
dec
adc
pop
lahf
call
cmp
iret
cmpsb
jno
mov
adc
sub
pop
fimuls
das
gs
std
decl
jecxz
testl
xchg
and
adc
fsubrs
insb
pop
pop
xor
out
mov
jmp
adc
daa
lock
push
and
xchg
sarb
sar
cwtl
mov
or
xchg
push
or
in
pop
mov
imul
subl
decl
sub
and
and
imul
icebp
movsl
rcrl
or
sub
cmp
push
clc
pop
rolb
add
xchg
push
out
and
sbb
jne
xlat
insl
shll
out
popa
leave
jne
jae
and
sub
jns
jmp
outsl
hlt
lahf
inc
adc
dec
loope
leave
in
mov
ja
lods
xchg
mov
fisubs
lret
movsb
into
or
rcr
cmp
mov
out
clc
xchg
cmp
adc
adc
lods
pop
cwtl
add
sahf
out
and
rclb
aam
mov
int3
mov
pushf
scas
test
inc
pop
cltd
jmp
or
lcall
dec
rcrl
leave
xorl
cli
rorl
add
addl
jno
sbb
inc
jle
xchg
outsb
xchg
out
lods
mov
js
in
pop
shl
enter
adcl
or
xor
adc
jmp
cmp
mov
jno
movsl
xchg
addr16
stc
adc
xor
std
enter
ret
pop
std
sub
popa
ror
xchg
popa
and
fisttps
jle
data16
jno
stos
push
scas
test
stos
icebp
pop
sub
dec
and
leave
and
sub
mov
fbld
and
stos
arpl
lret
andl
in
push
iret
bound
add
xchg
and
iret
add
adc
jnp
flds
and
sarl
and
loope,pt
or
test
mov
mov
mov
inc
mov
enter
pop
inc
out
cmp
scas
and
out
xor
lcall
outsl
scas
pop
ret
hlt
cmp
leave
push
jo
mov
scas
inc
xor
dec
mov
xlat
adc
ror
aam
stc
add
cltd
xor
shll
jbe
sub
mov
fcmovbe
lods
mov
adc
leave
dec
or
repnz
inc
push
jmp
mov
sub
insb
ror
gs
push
and
mov
scas
jl
fildl
jp
jno
cltd
sub
sub
mov
push
pushf
cmp
pavgb
rclb
imul
stos
ss
inc
fisubrl
push
push
mov
mov
loopne
cld
inc
out
or
xor
loop
push
push
mov
adc
jno
jns
mov
shlb
popf
les
out
test
cmpsl
idivl
loope
xchg
sub
cmpb
inc
mov
xor
pusha
push
movsb
cmpsl
mov
out
gs
push
aad
inc
fnstenv
mov
push
adc
fs
fwait
xchg
pop
and
xchg
arpl
jecxz
sbb
xchg
sbb
fimuls
push
movsl
xchg
push
cld
xchg
cmp
push
je
aad
iret
into
cs
loopew
push
icebp
leave
add
dec
das
sbb
jl
cs
cmc
test
cld
or
dec
fsubs
loop
mov
cmp
in
add
popf
mov
movl
mov
les
loop
sub
cmpb
lea
mov
xchg
sbb
jl
pop
xchg
nop
nop
popf
stc
insb
cwtl
insl
adc
cmp
das
jg
pop
cmpsb
pushf
and
int3
push
mov
aaa
mull
mov
push
push
andb
push
insl
outsl
fmul
cwtl
incb
leave
adc
cli
in
inc
lret
ds
inc
scas
push
add
and
orb
push
cmpsl
cli
add
mov
push
das
mov
dec
cmp
or
jl
call
aad
insb
lar
adc
cmpsb
shrb
fisubrs
ljmp
adc
cmp
insb
sub
in
aam
push
push
hlt
inc
call
cmp
add
sahf
pop
leave
dec
icebp
sbb
test
push
out
cltd
rcl
not
mov
fcomps
aaa
sbb
shll
outsl
push
jo
xor
scas
nop
fsubr
cli
cmp
scas
push
inc
add
jae
stc
or
sahf
int
push
mov
cmp
mov
mov
mov
jne
jge
or
add
xchg
inc
push
and
data16
mov
adc
inc
daa
ljmp
outsb
mov
xchg
sbb
cmp
int3
loopne
js
stos
leave
mov
push
outsb
cli
and
sub
lahf
push
inc
lods
and
jne
inc
testl
rorb
enter
sbb
sub
in
rorb
and
pop
jg
aad
std
popa
xor
pop
enter
pop
jae
clc
xchg
insb
mov
stc
mov
rolb
sbb
sti
psraw
pusha
jge
inc
dec
pop
jb
add
pop
ja
dec
mov
repnz
pop
out
negl
pop
jg
pop
mov
lea
or
push
fs
js
xor
cs
sahf
adc
int3
shrb
push
pop
insl
xchg
addb
loope
cmc
int3
jb
jge
push
cwtl
lods
add
sub
nop
inc
xor
sbb
ret
shlb
adcl
add
dec
cmpl
test
or
sbb
xchg
inc
cmpsl
ljmp
cmpsb
sti
cltd
mov
js
mov
leave
jp
loop
nop
add
jae
andl
xchg
mov
pop
jle
aad
mov
xlat
rep
push
mov
mov
push
addr16
dec
sbb
mulb
inc
jno
jns
ds
dec
sub
inc
pop
mulb
xchg
loope
pop
sub
aam
decl
mov
dec
out
xlat
in
pop
push
mov
dec
mov
lret
flds
pop
imul
jno
jl
rcrb
lock
dec
std
mov
pop
mov
rcrl
adc
cmp
mov
sbb
or
insb
inc
push
pop
mov
push
add
cmc
mov
bound
icebp
rcrl
outsl
inc
jg
cmp
iret
lds
repnz
jle
aam
push
imul
inc
pushf
and
hlt
stos
lea
push
movsl
repz
sbbl
cltd
lods
lret
jbe
out
jle
and
cmpl
popf
and
popf
xor
testl
call
xor
inc
arpl
jb
xsaveopt
mov
stos
cmp
jle
push
pop
faddl
sub
jbe
xchg
call
mov
mov
bound
aam
adc
movups
add
xchg
aam
int3
retw
pop
adc
mov
sbb
ret
addr16
arpl
xor
jp
fsub
inc
shrl
daa
or
sbb
ljmp
movsb
xor
mov
and
jecxz
jns
cmp
sbbb
jne
int
insb
mov
out
stc
and
cltd
xchg
lods
push
imul
jne
or
mov
aam
jp
adc
adc
sub
push
lcall
inc
test
jo
push
inc
inc
cmp
call
loopne
inc
mov
push
inc
imul
cmpsl
mov
je
inc
xor
inc
add
jl
lock
sbb
scas
imulb
adc
arpl
and
push
push
test
or
pop
gs
xchg
add
xchg
and
ss
jno
sub
nop
imul
test
cli
addr16
aam
addr16
dec
js
cs
mov
sub
inc
addb
mov
sbb
xor
jb
mov
dec
mov
mov
loope
inc
pop
insb
mov
popf
cmp
in
lcall
mov
sti
scas
fwait
mov
cmpl
test
mov
add
les
sbb
jl
sbb
jle
outsb
push
xchg
mov
pop
leave
jecxz
mov
stos
xor
clc
push
andb
data16
clc
push
xchg
test
push
cmc
mov
xchg
fstp
dec
fcomp
lock
pop
jge
push
popa
xor
xchg
and
push
push
sbb
fdiv
std
sahf
jne
dec
adc
addps
icebp
mov
lods
cmpsl
push
filds
ljmp
flds
or
lods
jle
add
daa
out
xchg
call
and
adc
lods
jno
xchg
into
mov
cli
xchg
mov
repz
or
xchg
filds
mov
adc
jb
fsubrs
mov
push
pop
xchg
or
sbb
mov
mov
out
dec
imul
or
adc
daa
cmp
sbb
popf
sub
inc
roll
aad
fldt
add
mov
lods
xor
bound
mov
adc
test
mov
xor
pop
dec
or
push
xchg
sub
sbb
push
iret
data16
xchg
pop
xchg
cmc
dec
lahf
scas
add
and
out
test
adc
jle
sti
bound
push
mov
aaa
cmp
in
dec
ret
push
sub
pop
jecxz
cmpsb
leave
mov
repnz
divl
shl
popa
jmp
add
jae
cmp
ffreep
mov
xchg
iret
mov
inc
out
lahf
push
push
sub
inc
idivl
mov
loop
out
mov
cmpsl
mov
sub
jmp
shr
popf
push
xchg
stc
cmp
ds
xchg
mov
fidivl
loop
cmp
mov
pop
pop
in
test
scas
or
mov
sub
xchg
or
cmpl
sbb
inc
mov
in
enter
xor
push
xor
mov
cwtl
ja
aad
pushf
jo
dec
mov
fcmovnb
lret
out
jp
fcmovnb
lret
cmp
push
or
jns
test
push
int
test
lcall
and
jne
out
addr16
add
shrb
dec
pushf
mov
push
outsl
cmp
cmp
jbe
shrl
inc
cmpsb
les
sub
jp
adc
dec
pushf
mov
test
leave
or
sub
xchg
sub
stc
sbb
pushf
inc
lods
push
cmpsl
loopne
addr16
or
aas
aas
inc
aad
fmull
add
in
xchg
xor
pushf
pop
fcmovnbe
sub
fcompl
sub
lahf
sub
clc
dec
or
scas
sub
repz
lret
in
jae
enter
fidivrl
in
mov
xorb
inc
sub
mov
sti
in
loop,pt
and
jb
jp
cmc
mov
and
js
xchg
jns
cwtl
jg
cltd
mov
sbb
xchg
jnp
bound
mov
ds
mov
jbe
cmp
and
loop
xchg
rcll
idivl
xchg
das
sbb
repnz
or
insl
and
xchg
addr16
dec
xchg
add
in
push
sbbb
in
inc
stos
inc
enter
cmpsb
cmpsl
out
lea
clc
xchg
push
xor
stc
xor
add
fildl
push
call
nop
mov
aad
cld
insb
stc
pushf
push
add
data16
mov
ds
nop
push
push
xchg
test
hlt
sbbb
ret
jnp
insl
jge
inc
ss
xchg
xor
int3
loop
dec
mov
or
cmc
cmp
ror
pop
push
lods
or
inc
pop
clc
lods
cmp
mov
inc
xor
push
mov
fsubrp
clc
mov
sbb
std
data16
cwtl
push
jecxz
leave
mov
push
movsl
arpl
lds
push
mov
dec
std
inc
fiaddl
inc
pop
fcmove
mov
mov
fwait
dec
pop
shll
adc
inc
jne
mov
mov
dec
adc
stos
jae
mov
cmc
scas
mov
or
pop
cltd
jo
sub
and
jge
xor
jns
inc
movsb
adc
sub
and
aas
push
inc
jp
jge
inc
pushf
movsb
dec
test
arpl
imul
jnp
or
push
sbb
stc
mov
and
pop
loope
sub
and
iret
in
test
ffreep
mov
test
dec
jns
mov
or
push
stos
movb
dec
fs
lea
mov
push
push
call
xor
push
cmp
pop
rorl
cwtl
mov
mov
enter
imul
ds
sti
stos
cli
ss
pop
and
xor
cli
push
clc
sub
imulb
sub
mov
xor
pop
cmp
lock
mov
sub
jnp
je
mov
and
xchg
push
ret
jp
cmp
ds
lods
rorl
or
ret
jle
stos
cs
mov
mov
xor
push
pop
mov
adc
lret
inc
pop
outsb
pop
cld
cltd
xlat
inc
rcrb
decb
lods
adc
cwtl
jb
adc
ja
lods
mov
fcomip
rorb
daa
mov
int
xor
xchg
or
sub
stos
fcmovb
fnsave
pop
imul
cmp
in
jbe
mov
xchg
lret
jmp
ja
adc
push
in
pop
pop
fwait
cmp
ljmp
jmp
lahf
shr
add
or
jnp
push
sub
testl
cs
xor
jo
lcall
add
add
ja
sub
jecxz
push
insb
pop
pop
pushf
xor
aas
dec
fnstsw
cmp
ljmp
push
ds
jmp
cmc
sbb
fistpll
pusha
dec
mov
insb
test
jnp
push
fwait
lds
shlb
call
sbb
mov
sub
out
xchg
stos
das
add
jns
cs
inc
fnstcw
arpl
into
pop
sub
pop
in
or
paddusw
inc
push
mov
xchg
jp
pop
xchg
add
sbb
arpl
insl
jbe
inc
imul
xor
cs
scas
dec
js
mov
je
into
mov
jg
xchg
lcall
inc
xchg
divb
fdivrp
movsl
sahf
mov
lods
mov
dec
sub
out
push
notb
jns
mov
push
mov
or
int
bound
or
xor
loopne
sbb
jae
mov
pop
in
or
cld
and
rcrb
out
lods
or
mov
addr16
loop
cmp
out
sti
inc
pop
pop
jmp
dec
ja
divb
push
nop
sub
cmc
dec
ljmp
cmpb
aad
lods
sti
adc
add
pop
inc
fisubs
leave
imul
icebp
mov
fadds
lret
cmpsb
add
stos
mov
lods
mov
lea
sub
mov
lahf
clc
and
sbb
mov
js
lret
sub
rorl
push
inc
jl
pop
cmp
add
sbb
mov
xchg
mov
add
xor
mov
or
stos
mov
lods
data16
and
pop
push
decb
mov
or
lea
sbb
or
repz
and
xchg
test
xchg
adc
lds
je
stos
je
lret
mov
push
lods
mov
or
sub
push
mov
jle
lods
push
sbb
mov
xchg
xor
xchg
out
lcall
xor
repz
xchg
in
test
es
bound
icebp
mov
scas
mov
addl
aaa
lds
rcll
push
sbb
mov
fnstsw
push
jl
movsb
xor
cmp
fisubs
call
hlt
jbe
test
sbb
add
scas
int3
dec
fsub
dec
shr
je
arpl
popf
sbb
iret
popa
xchg
int
fs
cltd
cmpsl
int
fisttpll
mov
sbb
xor
dec
sbb
rclb
daa
outsb
mov
cli
dec
mov
push
cmc
test
and
lock
or
sbb
jno
jle
adc
nop
gs
stos
xchg
rorl
dec
pop
cmp
lahf
test
bound
dec
lcall
insl
sahf
test
in
mov
xor
int3
dec
push
into
gs
shrl
fdivr
scas
inc
das
scas
or
lcall
fs
mov
mov
cmp
adc
in
cmpsl
mov
aas
jae
insl
or
into
test
sbb
mov
in
aam
adc
andl
sub
ret
cmp
ret
adc
mov
scas
das
stos
add
sub
sbb
inc
roll
push
sub
jno
pop
rclb
mov
xchg
xor
jl
jns
movsl
push
lock
mov
or
add
adc
adc
push
or
jnp
sub
fdivl
mov
ja
pop
je
fisttpll
out
test
xor
lcall
and
sbb
adc
jns
subb
movsl
hlt
cmp
cmp
sub
in
and
or
mov
jecxz
dec
inc
xchg
retw
xchg
xor
lods
in
ja
out
out
cwtl
inc
test
bound
jnp
cmp
and
loop
ds
pop
ror
and
rcl
stos
sbbl
inc
push
and
xchg
cmp
adc
cmp
cmp
mov
pop
fsubrs
and
fldcw
mov
mov
in
inc
or
popf
fbld
imul
fimull
pop
mov
sub
or
hlt
adc
out
cmp
insl
inc
imul
push
cld
shlb
push
mov
movsl
jg
ja
jnp
call
fucomi
fmul
mov
jecxz
push
stc
leave
mov
in
ret
pop
outsl
sti
mov
pop
ja
mov
pushl
call
std
sub
inc
es
shlb
xchg
loopne
popf
mov
mov
xchg
mov
fcmovu
lods
mov
fldl2t
enter
add
inc
fiaddl
scas
xor
mov
ljmp
jge
xor
or
ja
insb
js,pn
dec
mov
pop
jg
mov
popf
mov
push
sub
inc
and
push
fwait
mov
int
jle
hlt
mov
fwait
out
in
aam
movsl
in
addl
xor
jl
dec
pop
test
add
jmp
outsb
sbb
mov
inc
fildl
jnp
shlb
int3
pop
xchg
jmp
xchg
jno
pop
cmpsb
add
push
xor
das
jge
arpl
cmpsb
add
cld
sub
xchg
and
lahf
or
ljmp
xchg
daa
outsl
jo
cmp
mov
xor
outsb
mov
int3
stc
addb
gs
jo
addr16
dec
pop
imul
fdivl
movsb
jae,pt
push
ljmp
jno
aam
sbb
jmp
out
and
out
lcall
fbld
jnp
adc
jg
ja
ret
aam
dec
push
mov
mov
icebp
lret
lock
es
inc
mov
into
pop
mov
lret
hlt
jl
adc
in
lahf
fwait
pusha
cmp
fwait
in
xchg
aam
mov
aaa
dec
into
mov
shll
adcl
jge
aad
jg
ret
add
mov
aad
das
hlt
arpl
push
das
ss
push
aas
xchg
sub
push
jbe
and
jg
cwtl
call
outsl
mov
fsubrl
push
loopne
ja
test
and
mov
jge
pusha
testl
sub
sbbb
in
jns
dec
loope
sub
mov
adc
jmp
cs
out
mov
cmp
jbe
lds
inc
jo
cli
xorl
sbb
push
rcrb
lds
aaa
movsb
outsl
rcr
jl
shrb
dec
loop
add
add
dec
cmp
imul
imul
xor
pop
stos
into
out
mov
dec
bound
in
adc
int
pop
idivb
inc
or
mov
cmp
out
jae
xchg
and
fucom
jl
adc
mov
cmpsb
add
or
addb
sbb
mov
cmp
sub
test
or
pop
enter
xchg
add
mov
adc
xchg
mov
xor
jp
xor
pop
test
test
inc
fwait
ror
cmp
popf
dec
fisubl
cvtps2pd
fldcw
add
aam
adc
mov
mov
sub
nop
sbb
sub
mov
cmpl
aas
rorl
cmp
mov
add
push
int
sahf
out
xor
mov
sbb
outsb
and
jns
in
mov
mov
push
gs
roll
lds
pop
jecxz
xor
out
loopne
cmp
pop
dec
sbb
and
repz
xor
push
in
push
outsl
cmp
inc
in
cwtl
sbb
in
lcall
or
mov
cld
xchg
idiv
mov
mov
xchg
add
cmp
movsb
cmp
imul
popa
mov
mov
and
xor
popf
sub
cmpsl
adc
xor
mov
popf
jnp
pop
jb
inc
and
dec
inc
in
xor
jge
stos
imul
add
mov
jbe
ror
pusha
jmp
bound
jo
xor
test
lds
stos
dec
mov
out
ret
inc
inc
fdecstp
pop
pop
jae
pop
popa
clc
dec
pop
jle
cwtl
jl
stos
lods
mov
gs
jns
lds
iret
fldenv
pop
sub
mov
mov
xchg
cmc
dec
loopne
mov
ds
je
es
or
xchg
cmp
js
fildll
lret
data16
rcrb
xchg
lods
inc
push
pop
and
jp
lret
mov
sarb
call
inc
cmp
mov
sub
xchg
dec
es
jle
pushf
cli
jl
xchg
pop
jo
mov
insb
sbb
stc
popf
mov
loope
push
push
mov
pop
cmp
ljmp
outsb
shrl
pop
pop
jg
pop
xor
lea
cmpsb
jp
pop
icebp
gs
cmp
movsb
mov
sub
std
scas
repnz
ja
sub
inc
mov
js
mov
xor
xor
sti
js
mov
jle
std
mov
jbe
repz
mull
jmp
cmp
out
and
aam
out
mov
sub
jle
cmp
mov
inc
jnp
and
adc
out
dec
and
sub
lods
inc
test
mov
loopne
mov
push
mov
jbe
idivb
stos
mov
xchg
sti
adc
dec
dec
in
xor
cmp
pop
idivb
fs
mov
cmp
xchg
mov
pop
aaa
inc
adc
arpl
sbb
and
xor
iret
or
jnp
xchg
scas
shll
test
or
dec
stos
jne
fimuls
cltd
lods
jecxz
xor
mov
push
jg
pushf
cli
dec
push
add
sbb
push
pop
jno
inc
pop
ds
fsubl
pop
jg
mov
ret
sub
outsb
pop
fbstp
inc
cs
dec
popf
in
cmpsb
lock
cmp
xchg
xchg
inc
add
push
push
add
fwait
add
popf
lods
test
gs
mov
jne
push
mov
sti
or
mov
out
shll
add
call
mov
pop
jl
and
popa
sub
iret
insb
sbb
pop
cmp
fnsave
inc
pop
arpl
cmp
jns
stos
stos
inc
fmull
sbb
mov
enter
mov
iret
dec
inc
inc
push
push
mov
jns
dec
push
movsb
ja
cmp
int
adc
pop
push
mov
loope
xchg
aam
dec
inc
movsl
xor
les
jle
inc
mov
mov
repnz
pop
pop
loopne
lods
mov
shl
das
push
cmc
mov
dec
cmp
imul
ja
rclb
jbe
pop
cmp
cwtl
cmp
xor
pop
fsub
mov
rol
fimuls
mov
movsl
ja
xor
mov
ss
push
hlt
xchg
mov
scas
sub
dec
add
and
jb
dec
int3
jg
jp
xor
insb
add
les
outsl
stos
dec
hlt
pushl
cli
out
dec
dec
addb
pop
fidivrl
cs
push
pop
push
aad
test
dec
cmp
imul
cli
int3
and
mov
xor
pop
push
inc
sbb
push
jp
inc
fcoms
mov
sbb
inc
ljmp
pop
mov
mov
dec
lock
add
and
das
jl
cmpsb
lea
pop
lea
rcrb
stos
mov
jnp
xor
mov
ss
fidivl
lods
inc
aam
ja
int
dec
pusha
std
push
gs
and
lret
dec
imul
fnstcw
cld
mov
adc
outsb
mov
dec
jns
add
xlat
mov
jne
mov
add
and
outsl
loope
jo
out
dec
repz
jno
pop
incl
push
negl
pop
adcb
mov
xchg
int3
jae
testl
mov
out
push
dec
push
shll
arpl
sub
sahf
lods
xchg
pop
push
je
and
lahf
mov
xchg
in
jp
mov
jno
cmp
lret
xchg
adc
cmpsl
pop
mov
sub
inc
les
add
stos
mov
push
idivb
daa
ljmp
cmc
or
cmp
xor
cltd
nop
push
pop
jmp
and
repz
shll
xlat
daa
push
mov
rclb
in
nop
mov
in
xchg
aad
cs
jmp
pop
xorl
xchg
fs
cli
mov
push
ljmp
popf
scas
adc
push
mov
push
xchg
jle
mov
cmp
mov
pop
enter
mov
or
or
pop
xchg
hlt
negb
inc
call
sti
cwtl
sbb
std
push
cmc
add
mov
push
mov
arpl
cmp
push
aas
inc
push
xchg
xor
cs
add
add
add
es
sub
jl
pop
push
out
mov
in
sbbb
cmp
and
xchg
push
icebp
test
add
and
test
outsl
leave
lret
ja
mov
push
pop
inc
arpl
iret
popf
cmpsl
iret
sub
sub
ja
test
mov
dec
dec
stos
addr16
push
push
pop
cmp
sub
jge
cmpsb
dec
xorb
or
fnstenv
adc
test
loopne
bound
or
test
push
lea
lock
rorb
dec
lock
ffreep
loop
dec
cli
cmp
scas
push
cmp
xchg
cli
jnp
mov
cmp
mov
lret
test
aas
daa
or
jg
int
xchg
mov
jge
pop
in
jno
cmc
mov
sub
hlt
fadds
fdivs
jns
mov
les
dec
and
jb
jo
mov
ds
jecxz
rcrl
mov
mov
sar
repz
jbe
in
ret
fdivr
mov
fldt
les
cli
xchg
shll
inc
add
stos
sbbb
pop
es
cmpsb
test
lahf
ss
hlt
jbe
in
ljmp
gs
mov
aas
adc
mov
repz
mov
sub
sbb
add
sbb
push
fdivl
inc
pop
test
insl
add
leave
xchg
inc
pushf
movsb
cmp
fs
lretw
into
aad
jl
out
pop
push
in
cmp
nop
cli
dec
je
jle
sbb
adc
mov
mov
jg
out
ret
pop
cmpb
cmp
and
pop
lea
or
enter
pop
lods
cmpsb
sbb
repnz
mov
pop
mov
ss
mov
faddl
mov
mov
jecxz
dec
add
pop
stos
lcall
mov
pushf
out
into
enter
lcall
push
mov
xor
hlt
jne
inc
les
pop
divb
pop
in
pop
pop
jb
inc
sbb
es
gs
insb
mov
aas
stos
push
lahf
xor
fdivrl
fstps
lods
clc
addr16
es
or
clc
cwtl
ret
jp
push
lods
ljmp
lret
bound
push
sub
mov
mov
cmp
dec
loop
pop
ja
iret
mov
xchg
sub
cmc
dec
and
inc
mov
jb
pop
lock
ja
mov
add
les
lret
jge
add
pop
popf
call
push
sub
and
int3
frstor
and
jo
adc
hlt
inc
dec
mov
fdivp
mov
mov
mov
or
mov
fldcw
shl
cmp
xlat
push
mov
icebp
and
std
dec
pop
inc
mov
or
jnp
aam
dec
mov
pusha
shrl
push
mov
jp
daa
mov
popa
cld
mov
and
jnp
sti
push
jg
or
jge
imulb
or
int3
out
mov
mov
dec
add
and
or
out
jl
dec
imul
xchg
jecxz
push
cli
add
lcall
data16
and
mov
arpl
or
sub
leave
lods
and
mov
dec
sbb
mov
or
movsl
insb
xor
push
dec
out
mov
mov
cmp
scas
inc
shll
out
sub
orps
pop
insl
xor
push
inc
dec
mov
pusha
mov
mov
add
inc
add
loop,pn
roll
dec
mov
jnp
fucomip
insb
test
je
push
xchg
lock
jb
mov
and
xlat
stc
pushf
data16
adc
xchg
jns
or
add
sbb
and
outsl
jb
shl
ss
pop
fwait
jmp
enterw
add
jbe
cmc
cmp
scas
popf
push
mov
jl
pop
ja
pop
les
movaps
or
cmc
ds
add
mov
pop
jp
daa
popa
icebp
mov
fstl
fsubrs
arpl
mov
sbb
jno
mov
sub
daa
add
sub
mov
mov
movsl
loop
call
mov
cmp
popf
insb
pop
cmp
fwait
std
jb
imul
add
js
fisubrs
pop
lds
repz
outsl
and
inc
mov
push
push
push
mov
scas
adc
push
xor
or
mov
adc
sub
mov
inc
jl
lods
inc
js
sub
or
bound
mov
loop
arpl
jo
stos
mov
sbb
cltd
shr
orl
lret
fs
cmp
inc
pop
aaa
push
jnp
or
pop
and
mov
cmc
xorb
and
pusha
push
or
jle
inc
xchg
imul
cmpb
aaa
ds
sbb
test
or
cmp
in
push
popf
dec
push
std
cmc
xor
jg
pop
test
enter
std
and
leave
xor
mov
fldcw
out
insb
dec
jp
push
pop
push
test
and
jns
cmp
mov
push
pushf
clc
pushl
mov
xchg
and
dec
lahf
lds
push
mov
lahf
mov
lcall
pop
dec
and
push
jno
shlb
adc
cmp
mov
fwait
aad
aam
int
outsl
or
imul
out
fs
loope
adc
pop
xorl
rol
out
dec
lods
mov
shll
jp
movsb
out
scas
adc
jl
in
shlb
push
add
jae
in
js
mov
subb
leave
pushf
lret
inc
mov
xlat
mov
imul
adcl
sahf
pop
mov
and
jae
add
outsl
lods
xchg
and
mov
icebp
pop
mulb
xchg
lahf
xor
test
int
mov
lcall
pop
xchg
or
sti
sub
inc
sti
popa
into
dec
outsb
xor
pop
int3
movsl
or
sub
fistpl
xchg
sub
adcb
or
mov
mov
fdivp
xor
dec
inc
xchg
xchg
jge
pop
add
shlb
cmp
ds
in
mov
inc
movsl
in
jle
imul
mov
pop
push
test
pop
mov
sub
leave
add
pop
sub
shrl
pushf
fs
cmp
push
push
mov
push
in
add
ja
fwait
push
mov
mov
lahf
sub
nop
fwait
cmpsl
into
cld
jmp
and
add
jnp
pop
jbe
push
das
cwtl
dec
dec
cli
sahf
cld
mov
aas
xchg
sub
sub
push
call
and
fwait
sti
xchg
push
push
mov
mov
xchg
cltd
gs
lret
push
jne
or
xor
iret
adc
test
jnp
ljmp
rcrl
pop
frstor
cld
xchg
add
mov
fistps
mov
adc
jecxz
push
test
dec
out
inc
into
sarb
push
stc
stos
jp
inc
pop
sbb
int
mov
pop
in
cs
pop
orb
lds
outsl
nop
repz
outsb
cmp
cmp
in
mov
push
xor
dec
push
push
leave
mov
cmp
xor
push
fwait
pusha
sub
in
push
sub
mov
mov
rcl
mov
andl
inc
sub
and
pop
cmp
and
inc
pop
pop
ret
in
push
jl
sub
aaa
mov
ss
mov
test
icebp
ja
movsb
jnp
insl
in
mov
notl
test
fiaddl
sub
push
mov
jmp
jecxz
fcoml
out
icebp
xor
iret
mov
push
jb
jecxz
sbb
fisttps
fildl
lret
mov
adc
lods
sub
adc
jecxz
or
int3
inc
jbe
cmp
into
and
ja
ret
push
sbb
lahf
pop
mov
lea
lret
inc
xchg
xchg
add
sbb
cmp
repz
inc
aam
arpl
mov
mov
lcall
loopne
mov
mov
fsubrp
mov
test
popa
clc
jbe
cmp
call
repz
pop
cmp
cwtl
jg
add
inc
adc
fdivrs
dec
test
aas
inc
ss
adc
or
movsl
jns
inc
les
test
mov
sub
cmp
mov
hlt
push
in
bswap
xchg
push
and
and
mov
xor
xchg
mov
dec
xchg
jmp
ret
dec
pop
adc
jle
and
int
fnstenv
repnz
xchg
push
in
mov
push
add
popa
je
push
or
and
xor
jmp
mov
dec
stos
cmp
ja
out
mov
push
xchg
mov
movsb
mov
shl
orl
mov
mov
xor
cmpsb
mov
add
pop
out
push
fisttpl
pop
les
mov
subb
hlt
pusha
push
or
mov
or
test
testl
or
frndint
icebp
mov
mov
xchg
sub
sbb
dec
xor
sahf
push
lret
icebp
scas
dec
arpl
fsubs
rcll
loope
add
push
xor
cmc
mov
faddl
int
dec
stc
inc
pop
cmp
adc
test
aaa
mull
jmp
push
sbb
mov
pop
jl
or
inc
xchg
fnstenv
stos
xor
mov
fs
pop
adc
jmp
jecxz
in
ljmp
push
xchg
lea
cmp
pop
insl
and
int3
jae
ret
add
mov
pop
divb
adc
loope
cmc
mov
inc
cmp
sub
out
adc
test
shl
dec
mov
ret
in
lea
call
dec
cmp
cmpsb
rcrb
enter
mov
xor
bnd
jnp
ss
pop
mov
lret
inc
push
jmp
and
cmp
cwtl
fwait
xor
into
add
xchg
xor
cwtl
out
push
push
add
push
daa
push
xchg
mov
insb
jl
outsl
cmp
iret
shl
sbb
jbe
pop
jmp
or
or
cmp
rcrl
push
and
adc
loope
ret
adc
outsl
xchg
pop
add
aaa
xor
adc
and
push
adc
sub
bsr
out
inc
scas
adc
add
test
xchg
hlt
cmc
iret
lcall
fisubs
gs
inc
into
stc
nop
add
pop
cmp
and
roll
dec
inc
pop
push
cs
out
push
mov
add
mov
sbbb
aad
sub
push
pushf
add
dec
xchg
push
pop
imul
ds
jp
sub
aad
pop
and
stos
push
das
adc
into
push
mov
push
data16
outsb
rorb
sahf
and
mov
cmpsb
sub
pushf
mov
and
add
aas
adcl
test
pusha
push
insb
ficoml
xchg
or
pop
mov
pop
or
push
imul
lea
cmp
push
bound
jle
dec
repz
or
dec
mov
jnp
ficomps
aaa
xchg
jmp
add
and
nop
daa
lock
aaa
mov
lea
aad
stos
insl
out
xor
test
ret
das
sub
mov
sbb
rorl
sbb
outsb
pop
out
lahf
je
inc
cmpsl
rcr
sub
int3
adc
inc
gs
xor
movsb
sbbb
mov
lahf
sbb
dec
add
dec
pop
call
or
outsl
push
sub
jge
imul
ss
xchg
push
subb
shl
jl
movsl
mov
lcall
aad
stos
sub
fsub
sbb
popa
fisttpl
or
mov
sbb
cld
sbb
jmp
pop
xor
or
arpl
jp
scas
inc
loope
mov
ljmp
into
addr16
inc
xor
fs
je
jno
das
push
xchg
sbb
lods
cmc
push
mulb
into
jnp
js
pop
xlat
int3
and
sub
in
popf
call
test
out
fildll
xchg
pop
filds
jnp
sub
ret
test
add
xchg
xor
fdiv
mov
out
enter
xlat
outsb
inc
or
or
adc
inc
dec
and
repz
es
call
daa
xchg
cmp
sub
jo
notl
shll
jmp
pop
pushf
clc
enter
jae
mov
subb
mov
imul
xchg
and
insl
mov
xchg
and
iret
sbb
into
cwtl
pop
mov
xlat
cmp
mov
mov
repnz
jne
icebp
into
mov
fsubs
xchg
imull
mov
dec
clc
test
and
loopne
pop
jbe
pop
and
inc
push
test
test
sti
push
add
sub
mov
dec
add
repz
fdivr
cmp
shr
es
jns
inc
imul
push
xchg
btl
call
jp
adc
pop
test
lods
sbb
mov
xchg
sbb
mov
or
inc
fisubl
aas
mov
in
fsubr
xor
xor
js
out
movsb
push
xor
xor
jl
je
dec
cmpsl
jecxz
in
enter
clc
testb
jns
test
fisubrl
mov
add
pop
nop
and
push
ljmp
gs
mov
xchg
mov
pop
fisubrs
push
add
sbb
scas
out
cld
repz
push
xchg
pop
call
movsl
ds
outsb
mov
jg
xchg
sub
into
repz
sbb
push
add
mov
push
and
fists
xor
xor
test
inc
mov
out
cli
mov
mov
cmp
cmp
push
pop
movb
mov
pop
jecxz
dec
out
cmp
xchg
inc
xor
fisubrs
mulb
int3
mov
mov
mov
lods
pop
push
adc
jle
das
mov
out
dec
repz
push
mov
insl
mov
cmc
mov
and
cmp
stos
or
fwait
xor
mov
repnz
sti
and
xchg
pop
outsl
xor
push
pop
dec
aam
mov
cmp
int
out
pop
popa
push
pop
hlt
add
jo
push
call
test
inc
and
aas
testl
leave
inc
lock
xorl
cwtl
lahf
xor
sar
int3
jmp
insl
jbe
lahf
shll
sub
daa
fiadds
ja
es
xor
xchg
filds
add
mov
sti
mov
dec
pop
mov
fdivl
jne
cmp
out
icebp
xchg
bnd
and
outsb
xchg
in
jge
push
loopne
xlat
cmp
add
das
in
movsb
popf
js
fisubs
xor
pop
dec
cwtl
add
jle
mov
add
jp
insb
adc
in
mov
push
sub
inc
lahf
or
mov
dec
rcrl
hlt
add
cmp
xlat
sbb
lret
push
int3
mov
stc
sbb
pushf
arpl
js
xorl
push
sbb
in
pop
and
lret
add
rorb
jp
pop
push
mov
push
mov
lret
adc
sbb
push
icebp
jle
loopne
adc
xor
or
ljmp
jno
pusha
xor
aas
and
repz
add
add
jns
sbb
xchg
sbb
ljmp
in
ret
jno
mov
and
inc
in
adcl
or
jl
fs
or
int
sub
in
adc
jae
mov
cli
xchg
fistl
sbb
fwait
outsb
aaa
xchg
sbb
cmp
mov
movsl
mov
lock
shrl
push
out
or
jp
movsb
or
pop
mov
inc
filds
gs
add
ret
stc
dec
sub
vpmullw
xchg
xchg
xor
mov
jge
sbb
sbb
mov
loopne
jbe
and
shl
sbb
add
pop
andb
mov
add
inc
bound
shl
push
jno
test
adc
fwait
add
sub
ljmp
xor
push
test
jecxz
test
xchg
out
push
mov
push
adc
push
push
daa
test
push
lea
pop
in
in
sarl
fistl
sbb
jg
stc
mov
pop
js
in
push
insb
aad
gs
mov
int
rolb
sub
mov
loopne
repnz
cmpb
inc
mov
mov
inc
or
push
cwtl
jne
in
test
aas
lret
mov
test
push
mov
inc
push
in
in
inc
cmp
lcall
jne
cmpsb
ljmp
aam
inc
sbb
lahf
mov
es
pusha
ret
mov
mov
sbb
dec
or
ret
lods
rorl
into
mov
mov
or
cli
lock
and
cld
adc
and
inc
xchg
imul
dec
cld
xchg
pop
imul
pop
imul
mov
test
push
stos
inc
imul
dec
sub
imul
out
xor
jg
call
pop
push
test
imulb
mov
dec
movsb
dec
mov
jb
and
pop
int
mov
jl
inc
mov
loopne
std
push
push
out
mov
loopne
mov
xor
jae
pop
sarb
test
and
in
pop
inc
jge
bound
loop
mov
cmp
push
imul
hlt
dec
and
imul
lahf
xor
bound
loopne
iret
test
pop
dec
out
clc
mov
outsb
nop
mov
lea
lahf
cmp
and
mov
lea
loop
adc
jo
scas
mov
xchg
pop
fs
dec
push
negl
arpl
shr
xchg
cltd
loope
nop
mov
mov
mov
mov
test
out
ljmp
or
jp
negb
adc
add
mov
and
inc
out
inc
pop
aaa
pop
fcmovnu
aaa
pop
loop
nop
inc
add
ret
inc
std
add
addl
incl
cmpsb
cmp
push
sahf
pop
jmp
or
or
fisttpll
push
and
mov
sub
sub
shr
imul
cmpsl
movsl
mov
js
push
jno
add
mov
push
and
xor
pop
inc
in
je
dec
adc
and
out
cwtl
jge
cmp
aas
scas
inc
jno
rcll
mulb
repz
or
cli
lahf
arpl
lea
adc
iret
xchg
mov
xor
adc
addr16
push
mov
loop
pop
or
jg
es
insl
pop
mov
pop
clc
and
fdivs
push
hlt
aad
pop
inc
lods
leave
scas
xchg
dec
test
dec
pop
outsl
xchg
imul
and
ret
gs
div
js
or
xlat
test
xor
jbe
xchg
mov
cmp
loope
push
pop
xor
and
iret
out
adc
pop
xor
cs
sub
jae
mov
inc
inc
pop
ds
xor
pop
mov
int
and
inc
popf
cmp
lods
movsb
sbb
cmp
pop
push
push
test
push
mov
jp
mov
adc
cmp
jmp
or
jne
lret
idivb
adc
repnz
pop
jge
jl
in
pop
js
pushf
mov
cld
mov
mov
mov
mov
xchg
mov
add
cltd
ds
fnsave
jl
sbb
aaa
ret
std
mov
xchg
stc
shlb
lcall
mov
lcall
addr16
into
pop
icebp
aas
push
ljmp
lock
sbb
and
test
adc
pop
xchg
lock
ljmp
lea
or
insb
mov
xor
jmp
sbb
fstps
jge
sub
add
cmp
mov
mov
movsb
dec
fcom
push
shl
sar
loope
mov
sti
mulb
cmp
add
sub
pop
push
stos
push
pop
sub
jl
lret
xchg
sub
stc
sarl
or
orl
imul
push
repz
jne
and
lock
mov
mov
xchg
lret
mov
icebp
cmp
leave
call
mov
mov
ret
jbe
pop
data16
clc
jp
sub
and
sub
fwait
xor
ja
in
mov
xchg
shrl
xor
lods
sbb
inc
cli
lock
ss
push
sbb
jb
iret
scas
fisubrl
lret
rclb
pop
xlat
cmpl
xorb
inc
orb
in
inc
pop
cmc
and
jmp
push
cmpsl
xor
test
inc
fmuls
fwait
scas
add
jno
dec
fidivs
rcll
add
push
in
pop
jne
rcrb
xchg
sub
dec
jmp
movaps
and
mov
xor
mov
jbe
inc
cltd
js
xchg
xor
adc
mov
sbb
mov
xor
or
inc
dec
fidivrs
cltd
movsb
mov
dec
call
js
insb
and
cwtl
or
mov
testl
fstpt
movsb
sbbl
jnp
mov
cmpsb
lds
xchg
outsb
in
cmp
mov
fbstp
jmp
stos
dec
dec
pop
jae
cmp
lret
jae
jp
cmpsl
xchg
and
test
dec
fbstp
into
and
stc
push
sub
jnp
add
leave
clc
jg
jns
adc
in
cwtl
hlt
mov
movsb
sbb
das
jmp
test
ja
cli
mov
hlt
lods
mov
fbstp
push
std
mov
inc
xchg
and
aad
test
push
insb
gs
pop
and
fidivl
clc
mov
rcll
pop
cmpsl
insb
ret
sub
cmpsb
test
add
sbb
cmpsb
int3
xor
ja
mov
adc
iret
mov
in
mov
ss
push
add
mov
fsubl
icebp
and
dec
push
stc
dec
andl
mov
mov
inc
sbb
xchg
sub
vpcmpeqw
mov
test
lret
shrb
into
and
das
insl
dec
push
sub
mov
lods
stc
pop
fucomip
ja
scas
jle
test
add
stc
push
xor
cmp
push
scas
push
repz
mov
xlat
cmp
enter
or
pop
sahf
lods
jns
fwait
loop,pn
subl
shrl
jmp
jle
mov
fstpl
les
sub
roll
mov
inc
dec
in
pushf
andb
xchg
mov
les
adc
cwtl
inc
jge
xchg
repz
movsl
and
mov
shr
shrb
outsl
std
lret
mov
push
stc
inc
scas
xchg
sub
mov
scas
inc
dec
jae
jne
mov
jb
sbb
into
popf
fnsave
dec
std
addr16
jecxz
int3
or
test
xor
fucomi
popa
out
xchg
jge
das
sbb
leave
push
divb
add
std
sbb
pop
roll
mov
int3
fistpll
repnz
lods
cmp
pushf
js
arpl
pop
cltd
pusha
or
mov
sub
aam
xor
fstpt
jmp
in
xlat
sub
or
dec
div
dec
adc
add
in
xor
jl
sbb
xor
imul
mov
push
dec
pop
xchg
mov
sbb
insl
adcb
sbb
bsr
das
and
je
sbb
xchg
mov
push
inc
fadds
leave
add
push
push
and
mov
dec
xorl
mov
fsubs
dec
pop
xlat
arpl
scas
xchg
add
and
push
sub
inc
lods
adc
stos
cmp
sbb
mov
cmp
fnstsw
adc
fsubl
movl
cmp
out
test
xchg
mov
or
cs
pop
adc
js
sub
jbe,pn
inc
out
jge
stos
mov
repz
cmp
repnz
and
das
in
std
add
call
int
pop
jl
mov
jne
dec
cmc
jmp
sub
jae
inc
andl
arpl
or
data16
out
hlt
pop
mov
inc
aaa
cmp
jno
out
sti
es
dec
adc
sbb
jnp
xchg
pop
fwait
arpl
adc
jb
test
mov
test
sbbl
adc
jo
je
cltd
and
and
icebp
sbb
xor
push
ljmp
call
lea
movsb
push
push
and
cwtl
test
dec
test
pop
xor
mov
lds
or
mov
imul
cmp
jbe
imul
in
repnz
jne
pusha
scas
mov
jle
les
imul
lods
dec
std
push
movsl
xlat
repz
or
in
xor
pusha
push
mov
addl
cmp
outsb
lahf
jno
lret
fisttpll
fs
sbb
and
jo
sub
dec
out
jp
xchg
daa
sub
shlb
dec
mov
jp
fildl
fisubl
sbb
hlt
in
aam
cwtl
das
std
test
ljmp
add
aad
idivb
cmc
cmp
dec
pop
fwait
test
fldcw
jne
pop
leave
cmp
call
mov
loop
bound
xchg
add
add
cmp
negb
mov
sub
aas
outsl
mov
pop
scas
xchg
adc
repz
icebp
lods
jmp
add
in
jb
jno
outsb
adc
ljmp
jbe
xor
add
pop
sahf
rcl
int3
mov
daa
mov
xchg
cmpb
push
int
add
jg
cwtl
and
daa
mov
imul
cli
lahf
cs
es
inc
inc
inc
int3
jb
cmp
sbb
dec
push
shl
fsubrp
jle
sbb
imul
adc
xor
fimull
pushw
pop
jnp
pop
sbb
int3
add
dec
dec
xlat
outsb
jbe
mov
push
incb
push
adc
roll
or
cwtl
jb
xchg
and
mov
call
jp
repnz
sbb
push
pmulhuw
test
std
jno
aaa
xchg
rcrb
mov
push
fistpll
shrl
ficoms
xchg
adc
cmc
lock
add
lcall
pop
repz
test
jb
adc
lods
shr
push
fwait
loope
int
popf
lods
cmp
xchg
push
adc
sub
call
sub
mov
in
movsb
cmp
clc
xchg
xor
ret
xor
mov
mov
fwait
xchg
mov
sbb
in
repz
imul
fmull
sub
dec
mov
mov
sti
fs
sbbb
data16
mov
adc
mov
fstps
loope
jae
fisubs
int
mov
inc
adc
stos
ss
jnp
stc
lret
mov
inc
ret
stc
or
mov
dec
jle
jae
and
and
mov
fwait
jle
xchg
addr16
xchg
push
repnz
xchg
test
ficoms
xchg
aad
add
and
adc
and
push
int3
xchg
mulb
rcrl
mov
pushf
sub
mov
es
xchg
ds
jne
adc
add
sub
jae
cmpsl
popa
add
fs
xchg
aas
dec
jb
fstps
add
in
out
pop
ss
add
fidivrl
std
mov
xor
fisubrs
push
mov
mov
inc
mov
jae
xor
xor
adcb
fs
dec
and
cmc
jbe
imul
xchg
xor
xchg
movsl
lock
es
pop
inc
or
das
cmpsl
xchg
and
adc
rcrb
jle
pop
data16
cld
mov
jge
adc
jnp
fnstenv
push
and
add
sahf
scas
jp
add
vpaddusw
dec
push
jbe
hlt
pop
loope
rclb
inc
mov
cmpsb
jp
ffreep
pop
adc
mov
mov
add
adc
fisttpll
movsb
stos
inc
inc
ljmp
sub
inc
xlat
add
push
xor
fdivl
push
arpl
xchg
fcmovu
push
sub
inc
shl
int
push
inc
cwtl
out
decl
mov
sub
mov
aas
adc
xor
iret
cs
push
or
xchg
roll
inc
cmp
pop
fstps
xor
scas
xor
push
adc
mov
mov
push
ds
ja
and
ret
inc
xchg
lods
mov
and
lods
repz
adc
xor
mov
cmp
push
jge,pt
push
scas
pop
dec
scas
pop
movsl
ds
jle
mov
or
adc
pop
pop
mov
add
jecxz
lea
sahf
add
into
jge
stos
pop
lret
jge
sub
push
push
adc
xor
xor
aam
lcall
hlt
fidivrs
cmp
stos
mov
sub
in
jae
cvtpi2ps
sbb
decl
ret
push
scas
fwait
ret
shl
mov
push
push
pop
lods
adc
shrl
push
in
mov
push
sbb
dec
inc
mov
mov
pusha
dec
outsl
pop
ljmp
lcall
out
rclb
jl
mov
in
std
fidivs
adc
cli
into
int3
cld
xchg
out
stc
mov
mov
and
movsl
stos
cmp
movsb
sub
or
call
daa
testl
jbe
cli
sub
cmp
jge
push
sub
in
or
fs
xchg
out
les
dec
lea
mov
andb
push
je
leave
lret
mov
pushf
ret
loope
pop
mov
cmpsb
out
cmc
gs
fdivs
jg
mov
fsts
mov
cmp
aaa
ficomps
xor
pop
lods
mov
and
adc
push
mov
adc
gs
mov
sbb
scas
dec
mov
cltd
cmpsl
rcl
push
sbb
or
pop
insl
cmp
or
push
cmpsl
push
push
mov
add
ror
fisubrl
and
xor
stos
push
mov
cmp
xchg
lcall
int3
and
rcll
xchg
mov
cli
or
mov
int3
pop
cmp
jns
dec
aaa
aam
insb
pop
aam
mov
movsl
in
lahf
sub
jae
jb
and
std
adc
mov
js
int3
dec
test
int3
lret
push
icebp
popa
sbb
stc
or
mov
rorl
movsb
xchg
add
pop
jp
adc
ret
cmpsb
xchg
call
fnsave
sti
mov
mov
jne
lds
adcb
leave
int
xchg
lea
dec
sbb
mov
inc
mov
rorl
jns
loope
call
add
sbb
mov
out
fcmovnbe
and
ret
jge
or
nop
push
adc
imul
cs
push
mov
aad
mov
and
mov
arpl
mov
cs
sub
adc
and
pmulhw
mov
shrb
mov
cmp
sbb
dec
pop
popf
pop
mov
push
cltd
xchg
add
ja
in
pop
fsubl
jno
cmp
loopne
mov
daa
dec
std
push
in
pop
xor
add
mov
shl
inc
lods
dec
jnp
mov
add
stos
jbe
mov
mov
push
repz
mov
mov
jns
dec
ja
shlb
sbb
and
int
arpl
dec
loopne
pop
lret
sub
iret
addr16
mov
jmp
and
pop
idivb
fs
es
pop
jge
dec
inc
dec
pop
sahf
sub
xchg
push
ret
aam
sub
pop
cmc
adc
adc
mov
sbb
repnz
gs
inc
jb
out
xchg
pop
imul
hlt
adc
fcmovnb
xchg
adc
fdivrs
xor
inc
test
dec
mov
or
fwait
jns
xor
add
adc
bndstx
aad
jno
lret
push
daa
cltd
xor
cs
loopne
inc
shr
or
push
inc
cmpsl
pusha
cmp
pop
push
mov
adc
jns
lods
inc
in
cmp
adc
lret
dec
or
iret
int3
sub
jns
add
pop
mov
mov
clc
stos
pop
xchg
pop
ss
sub
enter
dec
pushf
jmp
fidivl
adc
clc
call
jecxz
sbbb
add
push
xor
loop
lea
pop
sahf
dec
scas
cmp
loop
lcall
sahf
outsb
mov
jbe
or
lcall
or
inc
mov
jns
dec
pop
aas
mov
jle
pop
xlat
pop
jno
repz
fucomi
fdivrp
push
adc
clc
iret
jg
shrb
xchg
inc
fadd
push
jmp
aas
xchg
adc
or
xlat
shr
or
ja
pop
cmp
mov
jp
out
add
mov
dec
popa
and
es
xor
loopne
mov
push
pop
out
cld
push
out
adcl
jb
dec
lds
and
mov
jb
jb
loopne
movsl
cmp
movsb
ret
mov
test
mov
lock
dec
and
mov
xchg
push
mov
cmp
je
das
out
adc
mov
xlat
or
lahf
xor
inc
add
pusha
pushf
xlat
rep
or
cmp
xchg
loop
mov
push
rclb
dec
test
lods
scas
push
mov
dec
in
add
dec
xchg
dec
fwait
dec
xchg
jmp
adc
or
sub
push
clc
enter
mov
dec
scas
lock
data16
notb
stos
mov
or
dec
cwtl
mov
sbb
adc
push
push
xchg
loope
es
dec
adc
pop
xorb
movsb
movsl
dec
pop
stc
ja
lods
adc
roll
mov
mov
in
lahf
aas
dec
xchg
ret
push
addr16
mov
jp
cmp
outsb
clc
outsl
mov
mov
inc
add
mov
flds
mov
outsl
scas
in
fists
lret
sub
call
or
mov
gs
es
cmc
daa
mov
and
lock
repz
mov
jge
je
or
subb
add
mov
daa
pushf
mov
dec
enter
xor
cmp
popa
cmc
xchg
xchg
cmp
xchg
cmc
mov
adc
lahf
out
rorb
sbb
jae
stos
fimuls
lock
mov
fnstsw
ror
dec
in
ljmp
cmp
data16
adc
xchg
inc
ret
loop
repnz
sbb
jnp
mov
sbb
cmp
movsl
ljmp
mov
or
push
inc
lcall
pop
call
or
testl
bound
mov
adc
adc
mov
outsl
aas
ret
adc
cmp
mov
sarl
dec
cmp
fdivrl
iret
test
orl
mov
fldcw
icebp
jo
arpl
sub
out
cmp
orl
pop
sbb
adc
aaa
into
lret
xor
in
inc
pop
sbb
lods
inc
cmp
rcll
std
mov
dec
xor
loope
mov
mov
inc
jmp
jmp
shll
out
movsl
and
sbb
push
mov
pop
push
adc
sbb
push
je
cmp
test
jo
jecxz
sub
aas
push
pop
fnsave
lea
jns
sti
mov
int3
imul
pop
mov
arpl
imul
mov
pop
or
lods
fbld
sbb
aam
xor
arpl
pusha
push
pop
jb
mov
icebp
adc
push
pop
and
push
sub
adc
test
daa
popf
out
jns
scas
out
or
jp
andb
out
push
jl
pop
mov
insb
inc
push
imul
ja
popa
mov
cmpsb
mov
xor
add
test
pusha
ds
jecxz
mov
fildl
sahf
dec
xor
pop
mov
inc
mov
faddl
adc
arpl
pop
mov
jge
jns
add
inc
jmp
cmc
xchg
mul
push
xor
movl
test
ja
clc
imul
mov
int3
pop
fnsave
pop
repz
cwtl
mov
iret
sbbb
lods
outsb
xor
aas
sbb
cmc
adcb
push
sbb
test
xor
arpl
cmp
fistps
notl
push
add
push
mov
push
iret
arpl
sbb
pop
pop
cmp
fisubs
fsubrl
lods
jp
push
lods
rclb
cmp
push
ret
lret
mov
rcrb
mov
loope
inc
pop
lds
andb
lret
sub
lods
inc
inc
jo
shrl
inc
sbb
xchg
lock
cmp
sbb
mov
ja
mov
out
jecxz
ret
jl
sub
sbb
mov
mov
data16
lret
loopne
cwtl
fcomps
cmp
sti
pop
jmp
sbb
jnp
rol
test
out
mov
repnz
cmp
dec
xor
loope
lcall
lea
jp
scas
shrl
jg
jns
pop
stos
iret
pop
cmp
cmpsb
cmp
jge
push
mov
xchg
test
nop
daa
push
js
dec
mov
sub
mov
xchg
or
bound
push
adc
imul
cmp
add
dec
sub
cmp
mov
loope
in
fdivrs
lds
jg
dec
mov
movsb
sbb
dec
loope
pop
arpl
roll
shll
and
xchg
pop
aaa
cmc
cltd
xchg
mov
roll
inc
mov
pop
lock
cli
outsb
in
cmp
jmp
sbb
jl
xchg
movsb
mov
cli
lret
push
push
mov
lahf
popa
jae
out
lods
and
sti
movsl
mov
jmp
or
insl
push
or
xor
xor
dec
out
lea
test
out
xor
je
fisubl
push
jge
mov
out
sahf
lea
inc
ljmp
mov
ficomps
mov
das
jg
pop
mov
dec
sub
mov
test
xor
clc
clc
fsubrs
dec
fnsave
notb
test
daa
mov
fdivl
shll
imul
mov
xor
mov
mov
in
xor
push
inc
push
jge
movsl
aam
add
mov
std
pop
in
mov
add
cmp
loopne
nop
dec
rcr
push
fsubl
andl
pop
mov
and
jl
clc
jb
in
mov
inc
in
push
cltd
and
movsb
test
orl
dec
loopne
push
loope
test
aas
jge
inc
jp
push
jno
in
daa
push
sbb
mov
pop
mov
pushf
out
rorb
lcall
mov
dec
into
out
cmpsl
mov
cmp
leave
int
lods
in
push
pop
sbb
fcomps
jle
mov
pop
pop
adc
cmpsb
lock
in
mov
sub
mov
loop
dec
add
add
rclb
and
imul
into
pop
cmp
sbb
das
pop
fbstp
add
mov
adcb
add
jl
pop
in
jg
insb
into
and
ret
jnp
xor
fcoms
jns
cmpb
mov
ret
dec
stc
rcrl
enter
fldl2e
mov
dec
mov
stc
cwtl
mov
lcall
dec
lds
out
pop
cmc
jbe
repnz
das
or
cmpb
xchg
xor
hlt
aas
enter
mov
bound
adc
xor
or
add
mov
les
cwtl
mov
xchg
xchg
test
jecxz
out
insb
lahf
insb
popl
movsl
add
popf
stc
in
pop
test
or
jne
es
jnp
fs
cltd
test
mov
cmc
movsb
cmp
mov
insl
jmp
mov
add
loope
les
pop
iret
out
add
sub
sbb
addr16
test
mov
push
outsl
xor
enter
scas
icebp
fwait
str
xor
std
adc
add
in
das
out
ret
and
inc
dec
cmp
cmp
pop
insl
cltd
pop
in
and
cmp
push
inc
or
sub
ds
xor
icebp
shrl
adc
outsb
mov
in
mov
and
pusha
adc
cmc
mov
and
insl
sbb
es
mov
mov
or
rcrb
mov
or
fstps
or
pop
inc
mov
stos
inc
pop
ror
sbb
cwtl
pop
sbbb
jp
mov
jp
jge
hlt
and
adc
jle
call
xor
adc
aam
push
ds
adcl
sub
xlat
xlat
mov
in
std
movsb
mov
imul
andb
xchg
jns
movsl
ja
mov
andb
bnd
data16
pop
cli
or
out
repz
mov
xor
stc
shlb
mov
or
inc
lcall
sbb
pushf
sub
iret
mov
mov
test
dec
popf
jl
mov
lret
stc
pop
xor
and
neg
outsl
mov
or
outsb
push
add
aas
out
jb
and
mov
mov
movsl
movsl
in
pop
mov
cmpb
test
cmpsl
push
and
mov
push
jg
scas
imul
and
mov
sub
ret
inc
push
jecxz
inc
loopne
into
lds
push
test
sub
insl
push
and
popf
sub
dec
xor
push
icebp
or
mov
push
ret
nop
pop
aaa
mov
add
lahf
push
inc
adc
adc
jg
pop
outsb
mov
jo
jne
or
pop
bound
or
mov
hlt
mov
rcrl
adc
in
cmp
les
sbb
mov
cltd
mov
cwtl
nop
sub
js
ret
jecxz
clc
cmp
jg
mov
mov
sbb
stos
fwait
xor
mov
inc
cmc
jg
xchg
int
push
out
popa
sbb
cmpsl
repz
lock
cmp
mov
out
test
leave
ret
shll
out
sub
ljmp
mov
jmp
rclb
test
stos
inc
movsb
and
testl
jbe
iret
ss
xor
jns
lcall
xchg
pop
das
jg
mov
in
pop
push
fadds
fsubrl
call
mov
jmp
add
fidivl
insb
mov
adc
cmp
jge
cmp
lahf
gs
xchg
in
int3
jo
or
jmp
scas
fisttpll
jae
jno
push
dec
and
cld
je
test
popa
push
cld
ja
nop
mov
inc
int
add
push
pop
popf
xor
jmp
sahf
jle
push
mov
push
scas
je
pop
mov
imul
cmc
xlat
cmp
pop
xchg
pop
in
stos
jo
or
mov
in
lods
add
xlat
sbbb
nop
ret
push
fsubrp
lea
scas
cli
sbb
and
iret
int
clc
sub
rclb
xor
repnz
mov
aas
cmpl
repz
or
daa
mov
mov
adc
test
jnp
out
pop
sbb
pop
adc
sub
insb
imul
cmp
sub
xchg
add
or
cwtl
xor
mov
enter
ficomps
jae
xor
movsl
sarb
push
adc
insb
mov
mov
enter
repnz
stos
enter
sbb
clc
iret
cmp
push
test
psrlq
inc
xor
or
cltd
imul
adc
or
xchg
daa
idiv
shlb
sbb
or
pop
inc
lods
in
push
data16
loopne
dec
jecxz
int
inc
lods
xchg
repnz
or
test
xor
cmpsb
sub
out
jmp
and
mov
inc
jge
and
loop
adc
mov
cmpxchg
jbe
rolb
dec
inc
mov
aaa
aam
push
mov
or
mov
pop
adcb
jbe
pop
xlat
sub
cli
stc
mov
push
adc
pusha
pop
rolb
movlps
std
dec
cmp
call
or
pop
adc
int3
nop
push
pop
jecxz
mov
icebp
sub
cmp
sbb
stos
mov
mov
int
fwait
push
in
sub
xchg
test
rorb
jp
jbe
pop
fwait
xlat
outsb
int
sahf
sub
cltd
sub
push
loop
ja
das
xor
pusha
pop
cli
mov
lret
mov
inc
fucomi
roll
scas
add
cwtl
orb
xor
rorl
or
iret
shrl
shlb
outsb
push
dec
out
xor
push
and
xchg
daa
test
popa
rclb
xchg
jmp
scas
out
cmp
movsb
mov
dec
push
clc
call
sbb
ja
movsb
cmp
jp
loopne
cmp
mov
aaa
jnp
shll
and
and
in
or
inc
mov
jno
stos
pop
sub
xchg
add
xchg
sub
push
sahf
add
pop
repnz
daa
jns
pushf
adc
gs
jae
repz
fdivl
push
mov
pop
push
adc
ss
pop
adc
ljmp
xor
jo
mov
jbe
adc
es
mov
pop
imulb
inc
inc
cmp
jns
cmp
je
and
pop
and
icebp
lods
add
dec
xor
imul
std
popa
stc
push
hlt
jle
outsb
mov
push
outsl
pop
push
mov
andb
mov
jge
xor
dec
push
fwait
push
xchg
insb
cmp
sub
int3
mov
add
loopne
mov
fnstenv
nop
sub
mov
push
out
imul
sbb
ss
inc
dec
shll
pop
xor
mov
inc
xchg
adc
out
repz
mov
inc
cwtl
mov
xchg
repz
dec
sbb
jmp
lods
mov
add
cmp
add
jp
addl
mov
es
lea
push
jbe
inc
daa
jle
or
dec
in
inc
mov
push
cmp
in
inc
xor
xchg
lock
xchg
jns
in
pop
ds
cld
loop
stos
in
lds
int3
xchg
jbe
ds
and
adc
imul
dec
dec
push
outsb
ljmp
push
add
fistpll
inc
cs
add
and
test
sbb
je
mov
xchg
cli
subl
jl
cmp
cli
ret
fidivs
std
addl
loopne
fistl
add
mov
fidivs
das
push
xchg
pushf
cld
mov
push
mov
ljmp
xchg
loope
or
jmp
adc
push
xchg
push
mov
sbb
push
xchg
jmp
subl
loope
cmpsb
sti
cmpsl
std
or
fidivs
fsubl
mov
add
xchg
cmp
pushf
cmp
shlb
mov
sub
and
out
cmp
in
pop
dec
push
inc
je
cmp
xchg
pop
push
loop
mov
rcl
adc
mov
pusha
sub
fmuls
cmpb
cmc
sub
xchg
ds
jl
adcl
cmc
pop
lock
mov
cmp
xor
inc
fimuls
das
push
call
outsl
std
outsl
jbe
cmpl
icebp
mov
pop
mov
sbb
jecxz
lcall
cmp
notb
dec
xor
pop
cltd
add
xchg
jbe
xchg
or
cmp
popf
mov
out
pop
mov
pop
push
out
subl
xchg
add
push
pop
icebp
push
mov
insb
leave
mov
adc
loope
adc
cmp
mul
push
out
bound
mov
lahf
test
lret
push
mov
xchg
rol
sarl
pop
pop
popa
xorl
mov
mov
push
ljmp
xchg
push
jb
fadd
mov
jno
xchg
fsubr
inc
jecxz
adc
es
mov
sbb
repnz
adc
mov
sub
roll
inc
adc
out
lahf
xchg
cmpsl
push
xchg
mov
add
jo
jno
xor
jo
or
mov
add
cmp
xor
hlt
imul
dec
addb
lcall
test
popa
fsubr
sahf
adcl
dec
std
pop
shl
popa
lock
jnp
and
jne
push
pop
int3
stos
cmp
cmp
sub
fdivs
push
or
adc
sbb
jae
addr16
xlat
test
aad
mov
dec
pop
scas
jae
mov
ja
push
mov
popf
push
fiaddl
pop
sub
fistpll
leave
push
sbb
lret
push
mov
sbb
and
adc
std
jne
sbb
pop
repnz
jl
sbb
enter
nop
loope
ficomps
rclb
and
xchg
xchg
sbb
les
movsb
fs
or
and
vpunpcklbw
dec
mov
decl
xchg
rcrb
hlt
loop
adc
sbb
xchg
stos
mov
scas
testb
fsubl
jmp
sub
xor
xor
pushf
push
jns
mov
dec
ss
shr
dec
cmp
jb
xchg
rclb
add
mov
fs
fdivrl
in
inc
je
lret
lds
ljmp
in
fwait
negb
jnp
out
jge
mov
pop
inc
xlat
outsb
jge
out
cltd
pop
insb
and
fwait
xor
call
adc
jno
pop
icebp
or
cld
xchg
jl
push
in
and
out
ja
xor
rorb
push
ljmp
xchg
sub
rolb
cltd
xor
jmp
dec
jle
dec
jecxz
add
xor
sbbb
or
gs
jmp
sarl
pop
icebp
pop
stc
ja
in
sbb
data16
rcrb
das
cmp
mov
push
out
mov
in
or
jns
scas
pop
mov
imul
and
sbb
gs
sub
pop
hlt
mov
dec
out
aaa
nop
repz
mov
loope
sub
mov
in
mov
cmp
loop
lock
adc
or
cmp
dec
pop
aam
popa
sarb
mov
adc
inc
xchg
pop
xchg
mov
fs
mov
mov
nop
std
inc
fsubrl
je
scas
mov
add
stos
add
dec
push
imul
pop
sub
mov
add
or
mov
push
shlb
xchg
and
lcall
mov
stos
inc
xchg
xlat
and
fs
cltd
imul
sarl
mov
addr16
jl
cmp
push
push
and
je
sti
inc
inc
or
push
les
xchg
add
pop
int3
outsl
cmp
push
sbb
ror
and
repnz
aam
xchg
mov
stc
repnz
fdiv
jns
arpl
in
rorb
into
adc
and
jo
jge
dec
xchg
push
out
enter
ljmp
in
inc
dec
jge
out
lods
mov
xchg
and
fidivrl
jecxz
cmp
lcall
push
test
xlat
loopne
imul
shrl
sub
leave
xorb
sub
sbb
pusha
fdivr
pop
pop
loopne
pop
and
jle
sbb
mov
scas
add
cmp
pop
fsubrp
jg
andl
push
out
sub
jb
jo
ret
mov
orb
rolb
sahf
inc
or
inc
cmpsb
lock
bound
icebp
inc
xor
and
cmp
cmpsl
out
sub
dec
jbe
and
xchg
jecxz
inc
xor
mov
sub
cli
pop
in
sbb
or
pop
pop
mov
dec
push
sarb
popa
rcll
adc
add
data16
fwait
icebp
and
inc
cmp
dec
mov
jecxz
mov
push
xchg
add
and
xchg
adc
fcmovnu
push
inc
adc
enter
sub
adc
pop
add
cwtl
sbb
inc
push
xor
xor
and
lds
jb
mov
and
leave
stos
loopne
scas
ret
lcall
aaa
and
jle
dec
mov
in
imul
xchg
outsb
mov
mov
xchg
push
jb
pop
pop
sbb
push
out
fnstsw
cmp
pop
fstpl
addr16
mov
ret
repnz
int
jbe
jge
addr16
lods
xchg
test
xlat
sarl
das
push
jmp
cmp
addb
sahf
push
mov
popf
mov
push
out
aad
out
lahf
pop
aaa
in
push
mov
lea
mov
cmp
or
xchg
cmp
inc
mov
jmp
mov
sub
dec
add
fmuls
xchg
sbb
mov
and
add
push
popl
test
inc
fs
leave
mov
lahf
out
inc
mov
pushf
xor
cmp
xor
inc
fs
xlat
shlb
add
mov
push
mov
cmp
push
mov
ljmp
inc
push
dec
jle
mov
outsb
in
ret
mov
mov
sub
dec
pop
imul
or
insl
xchg
fucomip
arpl
push
xchg
pop
mov
stc
push
jmp
in
mov
movsl
enter
inc
push
mov
loopne
xchg
lcall
sbb
mov
inc
add
adc
xchg
ja
jbe
js
nop
pop
jb
xor
scas
shrl
mov
dec
notb
test
rcrb
das
or
ja
inc
test
dec
push
loope
and
push
inc
addr16
xchg
pop
mov
outsl
xchg
or
xor
adc
or
xor
sub
arpl
daa
scas
inc
pop
sub
jb
inc
cmp
mov
lret
call
mov
mov
out
and
mov
adc
ret
or
mov
movsb
cmp
or
ds
dec
sbb
adc
aam
xchg
cs
lods
cmpsl
or
aas
dec
cmp
imul
push
mov
jae
xor
iret
popw
mov
aaa
dec
mov
scas
adc
aas
jns
pop
sbb
xlat
cmp
repnz
or
xchg
sbb
mov
dec
lahf
ss
jbe
dec
imul
cmp
pop
cmp
cmp
cli
xchg
rcrl
adc
pop
cltd
jge
call
out
sti
sbb
push
mov
xchg
push
xchg
gs
int
loopne
sbb
ds
sub
add
pop
das
or
icebp
stos
fnstenv
jge
test
push
jbe
inc
fnstenv
in
xorl
mov
in
fcmovnb
pop
or
ja
loop
xchg
cmpsb
add
bound
xchg
arpl
mov
out
mov
push
mov
loopne
in
jg
aam
fimull
hlt
stos
jle
les
push
test
or
fisubl
shll
mov
mov
add
or
lds
out
jnp
add
repz
fsubrs
mov
cmp
aas
andps
xor
jg
mov
push
pop
adc
jp
cwtl
pop
adc
dec
pop
sbbb
pslld
ds
call
mov
fs
jl
test
es
pop
lcall
mov
push
inc
daa
add
push
inc
xchg
cmp
jmp
fcoml
inc
sbb
dec
push
inc
cmpsb
js
pop
mov
int3
pop
mov
cmp
xlat
pop
lahf
xchg
adc
pop
mov
xlat
pusha
or
loope
xchg
ja
test
iret
xchg
xchg
fidivrs
xor
adc
sbb
outsl
daa
imul
icebp
or
jl
jg
cld
dec
or
xlat
mov
and
lea
inc
mov
jne
fsubl
dec
push
jmp
pop
push
testb
xchg
jns
sbb
and
mov
daa
loop
jb
leave
pusha
ss
and
lcall
aad
imul
jo
int
adc
pop
jns
pop
xchg
jg
xchg
xor
je
ds
mul
ret
hlt
add
mov
sarl
sbb
fildll
scas
in
div
pop
pop
lods
adc
jb
xchg
decb
insb
xchg
adc
out
inc
push
pop
nop
dec
int3
dec
add
fisubs
jle
clc
ret
aam
test
loop
lahf
enter
push
mov
and
mov
jb
inc
pop
push
sbb
dec
or
lods
adc
pop
or
mov
sti
xchg
out
pop
in
add
pop
dec
fists
rcll
inc
fnstenv
ljmp
xacquire
mov
pop
sbb
insb
enter
lahf
inc
mov
dec
das
pop
les
pop
xor
mov
push
push
lcall
gs
jl
daa
cmp
mov
pop
xor
in
test
call
or
cmpsl
sub
jbe
ds
jo
std
fcoml
ds
xor
jnp
xor
stc
xchg
fcmovnu
cltd
icebp
push
out
add
outsl
test
les
mov
xchg
add
pop
mov
lods
cmpsl
jae
xchg
pop
mov
mov
scas
cli
aad
shr
mov
negl
mov
adc
add
xor
imul
shlb
mov
out
mov
dec
sub
adc
mov
ljmp
pop
jnp
popa
lods
inc
push
std
stc
ret
and
mov
iret
lahf
pop
repz
xchg
add
push
lock
xor
insb
imull
inc
bound
push
and
shr
sahf
stc
ljmp
fs
movsb
cmp
mov
xchg
dec
test
and
sahf
inc
stos
mov
dec
mov
xlat
sub
bound
fisttps
or
add
insl
add
fs
inc
push
andl
cmp
dec
insb
lahf
pop
mov
xor
ss
std
in
cmpsb
cmp
xor
cmp
inc
cld
xor
push
hlt
outsb
daa
jo
xor
cs
aam
imul
lock
inc
mov
sbbl
pop
xchg
fsubrs
pop
popa
xor
inc
pusha
aam
mov
cmc
insl
cmp
sub
cs
jo
pop
inc
and
sarl
pop
pusha
pop
out
xchg
jnp
and
outsl
push
mov
push
nop
insl
mov
lret
jae
test
rolb
faddl
push
nop
pushf
daa
add
dec
jle
add
icebp
adc
ss
call
or
and
dec
pop
hlt
test
adcb
dec
arpl
loop
jl
fstps
xor
push
dec
xor
mov
decl
jl
bound
cmp
lods
hlt
sbb
es
xchg
mov
sti
add
xlat
push
and
xlat
mov
movsl
movsb
jp
lret
mov
hlt
mov
adc
dec
scas
or
dec
addr16
cltd
bound
lds
sahf
dec
loope
mov
mov
jecxz
ss
pushf
add
insb
xchg
xchg
mov
or
or
outsl
pop
cwtl
or
jno
sub
fdivrl
scas
subl
push
sub
sub
xchg
sub
jp
mov
cld
stc
inc
add
ret
cmp
fisubrs
ja
xor
rcrl
pop
jge
jnp
mov
ljmp
out
lcall
push
cmpb
or
lds
push
cli
aam
mov
les
jns
push
jb
sub
cmp
and
cmp
mov
fisttpll
cmp
mov
mov
std
insb
popf
cmp
testb
push
jmp
fsubs
sbb
mov
and
adcl
or
push
pop
xor
andl
incb
insl
sbb
lahf
mov
pop
add
push
out
dec
pop
decb
and
push
fldt
pop
cmpsl
aam
xchg
cmc
jnp
adc
pop
scas
cltd
lock
cmp
lahf
hlt
mov
int
jl
movsl
mov
shlb
imul
loope
mov
in
push
add
dec
pop
sarl
loopne
pop
mov
mov
pusha
lahf
daa
cmpsb
mull
jge
xor
or
sub
xor
loop
adc
push
xchg
std
add
xor
adc
mov
and
sbb
and
int
jp
sub
xor
dec
in
mov
add
mov
dec
lods
mov
dec
ret
jb
mov
and
mov
push
add
push
out
sahf
aaa
lret
fcmovbe
jnp
bound
add
push
xchg
cmp
cld
and
test
loopne
push
jecxz,pt
inc
test
popf
pop
outsl
repz
fdivrp
stc
xchg
ret
cmp
add
dec
fsubl
dec
pop
dec
hlt
mov
bound
add
inc
mov
jbe
xchg
add
and
int
push
jo
out
arpl
adcb
aam
mov
out
ljmp
sub
pop
jg
ss
js
imul
push
iret
dec
push
in
push
not
cmpsb
loope
push
add
adc
cmp
fstpl
xor
jnp
stc
negl
cmp
add
stc
repnz
ss
cmp
mov
pop
adc
jnp
add
mov
es
loope
adc
add
sub
or
inc
xchg
lcall
xchg
push
and
xor
pushf
sub
das
in
and
movsl
sub
dec
mov
jl
fisttps
sbb
inc
icebp
dec
cli
and
push
cmp
dec
jecxz
movsl
dec
ficompl
mov
fnstenv
jl
sbb
add
mov
dec
cmp
cmovp
inc
mov
mul
mov
or
adc
fisttpll
popa
sbbl
push
insl
push
je
loopne
inc
sub
jae
icebp
mov
mov
mov
incb
inc
jns
mov
fdivl
cmp
and
or
test
pop
js
jle
aam
mov
je
cmp
jb
adc
inc
jmp
or
lcall
lods
jmp
aad
sahf
xor
cmp
lea
fs
mov
jbe
lret
cmp
cmpsb
repz
aam
xchg
mov
push
mov
out
cld
repz
sbb
mov
mov
data16
lods
aad
ja
les
inc
sbb
or
cs
dec
mov
shr
cli
xor
and
mov
faddp
xchg
mov
adc
sub
sub
xlat
lock
ja
mov
dec
dec
pop
pop
in
adc
adc
orb
pop
popf
cld
xchg
mov
push
sbb
loope
sub
push
add
jmp
or
loope
push
xor
adc
jge
dec
sub
dec
outsb
aaa
pushf
xchg
das
data16
push
jmp
aad
repnz
lock
mov
sbb
mov
sub
cmp
dec
shl
fadds
xchg
or
loop
sbb
xor
pop
pop
sbb
mov
pop
test
test
jl
mov
hlt
pop
lock
inc
incl
cli
addl
popa
dec
in
mov
push
mov
push
lods
add
cmp
movsb
xchg
inc
fdivl
clc
arpl
sub
inc
sub
in
call
in
repnz
jp
mov
adc
cli
mov
mov
dec
test
adc
fstpt
flds
adc
cmp
inc
cmp
jl
into
cltd
jle
mov
jno
inc
xlat
aas
ljmp
notb
aaa
sbb
push
popf
inc
sbb
mov
out
and
sbb
shr
sub
jge
loopne
stos
sti
insl
push
jg
dec
push
ljmp
jb
push
cs
imul
test
mov
inc
dec
in
fdecstp
stos
in
inc
pop
ret
push
in
dec
in
call
jo
jb
jno
sahf
and
inc
mov
xchg
push
push
lahf
inc
and
pop
aam
leave
pop
sub
shll
test
inc
sub
inc
lret
mov
imul
outsl
ret
fildll
ds
xchg
sbb
mov
inc
xlat
in
sbbb
add
sbb
outsl
inc
add
xchg
aas
ret
and
sub
xchg
pop
insb
into
es
mov
int
cmp
push
mov
xor
pop
and
jns
loopne
jmp
stos
adc
push
mov
fwait
sti
add
das
inc
fsubs
inc
nop
popf
negl
sub
ret
outsb
push
mov
jmp
hlt
sub
rolb
shrb
std
shll
movsl
out
iret
push
push
pop
dec
ret
fisttps
rcrl
test
adc
xlat
xor
cmpl
or
out
mov
xor
push
sub
pop
jp
into
sahf
xor
jno
inc
in
inc
xchg
pop
ret
ret
gs
loope
pushf
xor
and
es
push
ds
andl
push
xchg
dec
mov
into
cmpsb
dec
shl
xor
mov
sbb
adc
and
lea
popa
and
push
outsl
push
mov
lods
pop
icebp
pop
xchg
loopne
xor
leave
add
mov
stos
xor
inc
ret
repz
xchg
adc
into
into
outsl
dec
fsubrl
mov
imul
mulb
xchg
cltd
push
mov
leave
rcll
cmp
mov
lea
pop
shl
mov
rclb
or
pop
lods
lea
xlat
pop
mov
push
pop
xchg
adc
out
mov
cli
loopne
int3
sahf
and
in
out
mov
jns
enter
sbb
adcl
or
fwait
enter
fld1
ret
push
mov
mov
fistl
jge
dec
pop
out
ficompl
or
jne
int3
push
outsl
push
inc
cmpsl
ds
subl
repz
lds
aaa
xor
nop
inc
pop
push
popf
sbbb
mov
loope
mov
jbe
or
sub
pop
and
cmp
pop
cmc
mov
inc
add
fs
hlt
fwait
rclb
call
mov
sbb
outsb
jecxz
in
pusha
or
insb
cmp
push
pop
shll
cmpsl
hlt
je
das
not
sub
sub
loope
mov
andl
jge
or
daa
jge
into
push
jns
aaa
out
mov
fistpll
push
outsb
cmpsl
xchg
jae
push
inc
mov
and
out
aaa
es
lret
pop
jne
mov
fwait
push
jne
mov
mov
cmp
inc
mov
mov
xchg
into
js
sub
data16
test
ss
in
cmpsl
jle
sbb
jbe
out
sub
rcr
arpl
imul
xchg
in
and
inc
das
int
jne
fldcw
xlat
fldenv
lret
sbb
jecxz
ss
xorb
je
inc
pop
or
add
daa
sub
or
test
fstl
xor
mov
test
cld
xor
mov
jge
icebp
dec
inc
and
inc
call
cs
inc
and
jl
fs
or
or
in
dec
iret
adc
mov
cmpb
scas
fdivl
and
ss
mov
xchg
jns
pop
push
and
push
mov
mov
loope
adcl
ret
sar
mov
mov
stc
nop
sbb
aad
adc
push
hlt
in
or
mov
sub
popa
pop
insb
add
xor
bound
das
xor
mov
mov
vpcmpgtb
sahf
sbb
addr16
xchg
sub
pop
jle
cltd
xor
out
or
fwait
loop
hlt
mov
roll
and
es
test
sub
das
repz
rclb
cmpsb
sbb
xor
dec
shlb
or
jae
fsubrp
mov
xor
xlat
sbb
iret
xor
in
adc
dec
pop
es
and
scas
and
lret
leave
stos
mov
mov
int
xchg
and
mov
insl
stos
pop
adc
jecxz
xchg
add
mov
xchg
fs
push
call
or
testl
jmp
jns
pop
rcl
in
sub
fistps
in
jecxz
ficomps
xchg
mov
icebp
filds
mov
outsl
outsb
ret
rorb
lret
mov
lahf
int
fdivs
je
jmp
pop
pushf
and
and
add
test
mov
cs
pop
add
or
mov
add
sbb
aad
xor
lcall
in
push
fsubl
fstpl
ficomps
jp
pop
insb
pop
iret
fnsave
mov
notl
mov
cmp
mov
jbe
adc
and
movsb
test
mov
fcomps
pop
fucomp
xor
ficompl
pop
inc
out
cmc
rcrl
das
inc
repz
addr16
dec
mov
xlat
xchg
xor
xchg
inc
push
mov
lods
insb
iret
ret
fwait
sub
gs
ret
das
sub
pop
dec
mov
outsl
ret
std
xchg
lea
lock
push
jle
mov
ret
push
xor
inc
das
jl
adc
mov
js
lret
cmp
popa
or
sbb
pop
xchg
xor
popa
dec
cmp
cmp
call
push
dec
push
sti
xchg
pop
stos
push
lods
mov
fsubl
fnstenv
dec
addb
je
decl
jo
adc
mov
jl
mov
push
lcall
popa
ds
mov
arpl
jle
ja
or
xchg
mov
or
lock
push
jnp
jmp
fwait
jne
xorl
pop
jno
movsl
fstpt
or
pop
mov
sahf
imulw
ret
inc
fdivs
mov
ficoml
push
sub
outsl
fcom
icebp
cld
push
dec
adcb
push
addr16
add
adc
in
loope
dec
lcall
xchg
aad
mov
mov
xlat
mov
icebp
xor
pop
jbe
rcrl
js
test
xchg
out
xchg
test
sbb
mov
dec
xor
clc
bound
mov
xchg
and
sbb
cmp
cmp
data16
push
xchg
int
cmpsl
test
mov
or
mov
xchg
mov
rcl
jbe
jg
gs
jmp
add
add
and
xchg
repnz
sti
xchg
adc
or
inc
push
and
enter
xor
add
inc
ret
mov
movsb
pop
fwait
dec
pop
lds
mov
aad
cltd
xor
push
sub
pusha
xor
mov
cmp
mov
es
inc
loopne
rcl
in
cld
scas
inc
mov
pop
inc
in
xor
sbb
mov
adc
mov
push
xor
mov
lods
push
xorb
mov
mov
lds
pop
jg
cmp
repnz
jnp
sbb
jae
out
movsb
ja
sub
dec
jmp
hlt
jbe
dec
scas
leave
pop
ljmp
test
jne
pop
and
cmp
dec
jecxz
lea
pop
sub
mov
aas
dec
pushf
aaa
and
push
clc
ds
sub
mov
sub
add
pop
mov
loop
push
cs
test
jbe
outsl
cmpsb
pop
test
ds
add
lcall
mov
cmp
sub
js
dec
mov
cmp
incb
cmp
dec
fisubl
mov
in
andl
xor
stos
mov
sub
sbb
cs
mov
cmpsb
mov
xchg
in
mov
and
and
and
int3
cltd
xor
cld
sub
js
pop
lea
cmp
loope
pop
fs
mov
testb
incl
push
add
cmpsl
add
jb
movsl
mov
shr
lcall
and
push
rorb
xor
add
iret
or
and
mov
scas
stos
repz
jle
sub
dec
pushf
and
or
out
daa
xchg
loope
add
xchg
imul
ret
xchg
inc
repnz
mov
mov
dec
cmc
pop
daa
fbld
mov
or
out
loope
cld
jmp
add
sbb
ret
lods
pop
cwtl
xor
push
pop
sub
call
and
cmp
sub
enter
testb
outsb
xchg
mov
loopne
icebp
mov
inc
cmp
repnz
pop
sub
ds
add
fstl
and
mov
ret
lret
je
mov
sti
xchg
or
sahf
mov
add
es
inc
inc
mov
sub
cli
xorb
sub
pop
and
les
push
ret
or
addl
rorb
into
jae
fnstenv
xchg
cs
jbe
or
into
jbe
aas
fwait
xchg
out
mov
std
shr
cmp
das
pop
pop
push
xor
lds
push
psrlq
xor
out
jns
mov
test
pop
rcr
imul
pop
and
adc
add
insb
and
adc
lock
divl
and
mov
iret
jb
notb
adc
nop
daa
cld
mov
mov
fcmovne
mov
arpl
cmp
into
or
stc
lods
mov
dec
sub
pop
push
ljmp
or
mov
push
sub
mov
pop
jecxz
in
testl
fcompl
and
lret
jbe
adc
dec
add
cmp
loope
inc
adc
ss
scas
andl
push
mov
xchg
fisubrs
je
add
dec
adc
inc
scas
dec
dec
mov
xchg
icebp
daa
cmp
icebp
xor
pushf
cs
repz
push
xlat
int3
icebp
nop
sub
or
out
es
cmc
adc
aas
loope
xchg
test
into
jmp
sbb
rcrb
int3
add
lahf
inc
inc
and
pop
aas
xchg
hlt
pushf
loope
mov
or
inc
pop
imull
push
daa
fistpl
daa
mov
jo
add
scas
sbb
pop
pop
dec
or
mov
scas
jmp
loop
rorl
jl
cs
mov
jnp
pop
pop
lods
in
inc
pop
ret
lret
imul
push
push
jmp
jmp
or
cmpsl
out
add
testb
ret
mov
xor
arpl
add
xchg
insl
mov
adc
insl
negb
push
xchg
insl
ret
aam
inc
jno
hlt
mov
add
sub
outsl
push
inc
push
mov
lcall
mov
push
ds
push
ss
pop
movsl
cmp
pop
sub
inc
mov
popa
or
mov
adc
mov
fs
jmp
clc
xchg
jmp
push
cmp
xchg
insl
aas
fsubrs
xchg
mov
inc
divb
pop
fsubrs
addl
jg
aam
ljmp
xorb
pop
adc
hlt
stos
mov
icebp
call
repz
xlat
pop
scas
adc
scas
pusha
mov
add
loop
or
dec
dec
pop
add
sub
sahf
jnp
push
movsl
jp
xchg
fists
sub
push
push
jle
ds
jo
movsb
pop
dec
push
mov
movsb
fs
popf
mov
inc
jecxz
mov
lods
inc
mov
call
or
push
mov
fcmove
pusha
int3
add
jae
dec
sbb
sbb
movsl
lcall
pushf
inc
rcrl
outsl
mov
daa
enter
pop
mov
out
mov
inc
in
jae
lock
xchg
outsl
add
pop
shl
movsb
pusha
pop
call
aaa
in
xor
or
cli
adc
sub
sub
cwtl
mov
cltd
outsb
mov
test
sub
shlb
test
mov
add
bound
push
shlb
es
scas
fsubrs
jge
cmp
cmp
mov
lcall
insb
jg
xchg
lods
stos
sub
icebp
stos
xchg
int3
arpl
ljmp
sub
jg
in
pop
sbb
bound
fld
pop
pop
sarl
ja
mov
pusha
out
sub
std
push
xor
rcl
insw
insb
jae
aam
call
adc
mov
push
mov
rcrl
push
int3
in
lods
xor
pop
std
rcl
push
cwtl
adc
sbb
add
sbb
leave
mov
ficoms
cltd
pop
cmpsb
cmp
mov
jge
fistpl
mov
mulb
inc
inc
inc
test
mov
xlat
es
das
jb
xchg
mov
aam
jl
push
test
jb
aad
cmp
add
fimull
dec
dec
sub
dec
arpl
mov
jno
xchg
jmp
sarb
push
cmp
sub
inc
popf
jp
mov
dec
xlat
inc
or
jmp
insl
dec
adc
daa
mov
bound
clc
mov
rcrb
andb
enter
xchg
sub
mov
sbb
loopne
add
sbb
push
in
rolb
xlat
daa
add
movsb
and
lods
out
inc
daa
or
add
subl
shrb
inc
out
add
ret
sub
inc
and
inc
cmpsl
mov
add
sub
or
sub
loopne
dec
xchg
add
dec
das
push
repz
inc
or
rolb
das
in
inc
test
outsb
ljmp
xor
es
arpl
push
cmpl
sub
dec
dec
out
mov
lea
das
fisubrl
pop
notb
dec
ret
mov
mov
xchg
push
mov
icebp
test
clc
mov
lret
xor
jle
dec
data16
scas
outsb
xor
jmp
and
out
mov
mov
sahf
jl
jne
push
sbb
iret
jle
mov
in
arpl
int3
inc
xchg
std
add
inc
cwtl
or
jne
xlat
push
ret
pop
fcmovu
out
push
adc
fwait
pop
xor
add
cmp
fists
ret
movsb
es
xchg
iret
dec
push
dec
mov
shrb
mov
pop
cs
or
pusha
lcall
pop
mov
or
std
adc
aaa
imul
pop
cmp
xchg
jae
fmul
pop
and
fsub
call
inc
imul
bnd
int
add
xlat
std
jo
imul
movsl
js
cmc
bound
cmc
ja
pop
daa
and
adcb
ret
scas
fdivl
lahf
ss
arpl
jno
rorb
xchg
adcl
or
lods
cmp
mov
fsubl
sub
ret
inc
jbe
xchg
test
and
xchg
sbb
xchg
repz
cli
in
mov
xchg
sbb
mov
lock
or
ss
subl
cmp
mov
xor
test
jecxz
dec
dec
shrb
decb
aad
and
add
mov
lret
xchg
cmp
jae
xchg
dec
cmp
into
dec
cmpsb
les
sbb
mov
inc
call
ret
push
push
lahf
mov
jno
add
cmp
sub
jbe
fadd
or
fs
je
es
hlt
mov
or
dec
out
aad
dec
pop
pushf
dec
sub
mull
mov
pop
sbbb
aaa
mov
lret
fisttps
ds
pop
xchg
dec
mov
fcomps
mov
div
cmp
jo
sahf
jge
or
jle
fwait
xor
lods
sarb
dec
scas
icebp
xor
and
pop
add
jne
call
test
ja
sahf
test
fidivs
int
jg
aas
adc
inc
nop
fidivs
sahf
out
rcr
adc
adcl
out
lret
cmpsl
add
or
push
cmpsl
out
or
fs
or
je
call
lcall
in
push
in
inc
dec
mov
movsl
aam
stos
mov
mov
sub
xor
testl
cmp
notl
sub
std
cli
sub
out
xchg
xor
mov
lret
stos
mov
out
bound
xchg
test
cmp
and
sub
adc
in
jb
aam
fildll
mov
push
in
add
fdivrs
testb
xor
jmp
cmpsl
mov
cli
es
jmp
push
xor
and
inc
fnstsw
imul
fimull
ss
inc
aaa
sbb
in
sbb
imul
cmp
stos
call
dec
and
lahf
jno
pop
xchg
mov
repnz
aas
xchg
mov
sub
ja
mov
sub
sbb
jge
dec
push
mov
std
push
mov
xchg
or
sbb
mov
test
mov
in
mov
jg
mov
xor
aam
mov
pop
push
jo
push
mov
add
sbb
xor
or
push
add
sub
add
repnz
nop
mov
ret
push
popf
dec
shrl
xlat
outsb
xor
cmc
cld
cmp
scas
outsl
dec
call
jmp
iret
pop
mov
dec
push
iret
or
push
push
xchg
icebp
mov
hlt
mov
mov
xor
pop
loope
mov
jne
ret
xor
xchg
js
inc
fisubrl
popa
inc
jg
cmp
nop
outsl
push
ret
hlt
inc
inc
or
add
in
lock
popf
fcmove
fsubrs
mov
mov
cmpsl
lret
rcll
xor
imul
call
pop
add
mov
out
int3
jne
push
mov
les
add
arpl
movsb
test
jb
push
not
or
pop
mov
subb
stos
mov
dec
daa
lods
jecxz
imul
push
push
ja
pop
add
insl
mov
lock
pop
sub
imul
jmp
fldcw
das
in
mov
mov
lods
add
mov
cltd
sbbb
lds
sbb
xlat
jge
cltd
stos
subb
lret
data16
loopne,pt
test
dec
xor
push
sub
cmp
sub
inc
clc
mov
je
mov
push
out
sbb
lahf
lret
mov
decl
cld
dec
jg
sub
adc
lahf
inc
das
inc
fldenv
scas
jge
aam
cmp
xchg
in
loop
cmp
or
js
mov
jne
dec
and
outsl
int
xchg
add
pop
mov
jbe
out
aas
rcl
sti
xchg
pop
in
fidivs
out
cmc
daa
outsl
push
pop
sbb
nop
out
aam
adc
cmp
stos
or
pop
sti
mov
jg
clc
lea
roll
and
nop
mov
sbb
pop
pop
mov
mov
adc
cmp
ljmp
mov
faddl
sub
cmp
out
sti
int
out
pushf
dec
pop
xchg
push
sub
ret
cs
xor
outsb
fdivr
sbb
sub
pusha
xor
dec
push
jne
mov
insb
pop
fwait
sub
sti
sub
scas
fldt
ffree
mov
aaa
test
in
insl
sub
pop
int
mov
sahf
sbb
andb
jmp
cwtl
dec
jge
les
lret
adc
push
pop
ss
cmp
cmp
dec
lock
rcrb
das
inc
jmp
pop
mov
push
sbb
and
xlat
outsb
xchg
enter
je
xchg
pop
or
mov
roll
out
lds
nop
int
das
pusha
xchg
lods
bound
lahf
lods
repnz
sub
xchg
pop
js
test
add
push
mov
push
insb
xchg
ret
xor
lret
scas
pop
pop
and
push
loop
inc
jge
paddb
shr
xchg
pusha
insb
es
gs
xchg
sbb
into
dec
in
sahf
les
out
adc
xor
in
int3
fs
mov
addr16
xchg
push
notb
popa
xor
xlat
or
mov
bound
lea
aaa
cmp
out
daa
pop
push
sarb
dec
jno
lods
divb
pop
jecxz
lea
push
xor
vfmsub231pd
into
inc
jge
cmp
or
mov
lds
fldcw
pop
pop
xor
cmpsb
es
xchg
test
int3
arpl
jnp
add
clc
mov
adc
adc
mov
xchg
jecxz
movsb
loope
mov
out
add
xchg
shrb
ds
sbb
push
out
imul
in
jne
add
call
daa
mov
fildl
ret
cmp
stc
int
pop
dec
aam
xchg
dec
jne
xchg
jle
outsl
add
pushf
jo
jmp
rcrl
shll
adc
loope
dec
andl
pop
xchg
mov
xor
into
pop
inc
push
jmp
orb
xor
cli
jne
or
roll
nop
pusha
pop
fwait
roll
int
lret
out
lahf
push
js
adc
and
push
call
mov
lcall
leave
push
gs
xchg
test
push
fldenv
inc
stos
pop
test
lret
mov
int
lds
fisttps
sbb
lock
in
xchg
out
pusha
loop
pushf
fdivs
add
jae
push
std
cmp
push
jg
mov
aad
aam
lcall
mov
adc
mov
mov
push
in
push
add
mov
jmp
les
cmp
push
xchg
add
outsb
test
fwait
gs
hlt
mov
fwait
hlt
int
sub
jge
xchg
data16
cmc
jge
lret
bound
jnp
shlb
rorb
std
bound
xchg
push
shrl
xor
push
call
inc
and
rcll
or
jmp
push
pop
cmp
out
faddl
fidivl
shrl
daa
clc
jnp
sbb
jmp
push
movsb
inc
call
sub
or
sbb
aas
mov
mov
sub
loop
dec
pop
xor
addr16
fisubrs
xchg
mov
pop
int3
popa
pusha
add
sub
mov
mov
cmpsb
out
test
mov
mov
outsb
aam
push
mov
in
xchg
mov
dec
or
jae
sbb
pop
adc
xchg
pop
xor
add
sbb
xor
mov
pop
ret
pop
sbb
dec
sbb
out
dec
addr16
xchg
into
or
popa
ret
int
mov
loope
movsb
sub
xor
scas
cmp
xchg
mov
shrl
test
adc
push
mov
mov
not
push
fldl
xchg
mov
lahf
sub
sbb
push
pop
lahf
push
lcall
jge
xchg
in
lcall
aas
mov
movsb
inc
and
pop
mov
xor
outsl
mov
pop
inc
mov
aaa
je
dec
imul
in
movsb
out
roll
push
pop
mov
fstl
lods
icebp
iret
jns
enter
mov
inc
test
aas
xorb
xor
sub
ret
pop
daa
mov
sbb
xchg
popa
add
lock
jg
shll
push
mov
xor
pop
cmp
nop
sbb
xchg
lods
cmp
pop
addr16
test
mov
inc
push
jno
insl
jnp
cs
fmuls
pop
sub
pop
jb
mov
adcb
push
out
icebp
mov
xor
into
gs
fwait
add
addl
cli
mov
pop
test
pusha
sbb
adc
cmp
ja
shrl
push
mov
dec
pop
xchg
and
pop
jmp
out
aaa
push
jl
mov
xchg
in
pop
pop
out
mov
or
dec
psraw
push
sub
add
inc
sub
je
push
mov
cmp
hlt
idivb
lret
insb
add
sub
mov
xor
jno
sbb
mov
stos
jmp
xchg
in
orl
jno
leave
xlat
cmp
icebp
adc
xchg
mov
sub
or
mov
aad
xor
jg
pop
pop
loopne
lds
cmp
lods
jns
lret
insl
dec
pop
loop,pt
push
call
fnstcw
in
add
add
mov
test
shlb
cmp
cld
cwtl
xor
mov
cmc
bound
int
inc
leave
int
xor
in
stos
mov
leave
clc
inc
repnz
mov
jle
aam
push
pop
loopne
sarb
pop
and
jns
xchg
xor
out
call
addr16
scas
or
and
inc
sbb
inc
insl
mov
push
in
fdivrl
shld
xlat
sub
xor
and
or
pop
and
dec
jge
int
daa
cwtl
sub
jae
in
mov
repz
mov
and
pop
sar
or
lods
adc
insl
lret
dec
push
test
push
xorl
stos
cwtl
notb
test
sbb
leave
rolb
scas
xlat
jo
ja
stos
or
push
icebp
sub
stc
imul
push
xchg
loope
mov
icebp
mov
adc
aas
lret
sbb
in
mov
call
sbb
push
mov
inc
test
aad
xor
jns
push
in
addb
or
out
test
lods
inc
leave
dec
dec
push
push
dec
jno
mov
sarb
xor
loope
mov
gs
xchg
test
jmp
xchg
mov
scas
mov
lds
xor
or
push
rcl
movsl
or
cmc
and
inc
xchg
adc
leave
lds
out
sti
lcall
aad
sbb
lds
roll
aaa
xchg
push
shl
mov
adc
sub
jbe
repz
xlat
jcxz
cwtl
mov
cmp
mov
add
xor
gs
aad
dec
pop
daa
push
in
cwtl
push
rcl
cmpsl
add
cmp
mulb
dec
push
fdivrl
dec
push
out
imul
dec
mov
gs
rcl
inc
xchg
js
jno
dec
sub
bnd
push
dec
push
dec
mov
xchg
and
int
jmp
int
pop
not
ret
xlat
sbb
sbb
loopne
lahf
cwtl
lea
push
bound
push
mov
gs
mov
add
imul
and
cmpb
sub
outsl
ss
mov
inc
jno
outsl
cs
jp
rorb
adc
cli
std
jns
daa
rorl
adc
push
sub
xchg
pop
xchg
jge
adc
stos
jae
call
or
sub
mov
arpl
inc
inc
bndstx
fsubrl
xor
jmp
sbb
scas
mov
and
xlat
sbb
inc
sub
mov
clc
jns
push
insb
dec
cmpsb
stos
cmp
ficoms
sub
pop
pop
cltd
gs
lret
mov
inc
sbb
cmp
out
cwtl
iret
push
sahf
cmp
push
mov
jb
sub
xchg
xchg
scas
rorl
add
sbb
sbb
xchg
adc
fdivl
push
in
inc
scas
sub
ja
inc
lret
jo
movsb
fiadds
fdivrl
imul
add
mov
loop
lahf
cmp
push
pop
call
loop
es
dec
mov
push
push
cmp
js
jmp
jl
sbb
daa
and
inc
lods
fmul
shll
mov
inc
sbb
or
jmp
adc
cld
scas
movl
or
jmp
mov
andl
add
or
out
testb
add
ljmp
jge
lods
test
pop
cmp
js
stos
aas
or
push
leave
pusha
sbb
repnz
fnstcw
cmp
xlat
mov
jb
das
faddl
mov
gs
fwait
sbb
cmpsb
and
fnstenv
lret
or
jecxz
inc
sahf
xlat
pop
cli
jns
les
int
pop
mov
cmpsb
les
ficomps
push
or
jae
enter
jno
mov
add
jb
fwait
add
mov
cli
sbb
cmp
and
outsl
xlat
xorl
sti
xchg
fmull
cltd
nop
ret
or
ss
push
xchg
nop
cmpsb
mov
int3
fiaddl
xor
fwait
or
mov
arpl
inc
sbb
add
stos
insl
in
stos
and
sbb
pop
xchg
ss
outsl
das
iret
sbb
mov
mov
xchg
mov
f2xm1
cmpsb
shrb
xchg
adc
mov
xor
cmp
popf
mov
mov
ds
dec
or
loop
push
sub
pop
sub
lret
jae
push
push
pop
lock
jnp
and
inc
push
sbb
inc
lds
mov
into
notl
gs
hlt
adc
inc
dec
dec
jmp
fwait
jp
mov
or
mov
fs
fwait
pop
test
decl
daa
xchg
sub
into
scas
jns
add
mov
cld
cli
xor
call
xchg
and
jle
dec
leave
fbld
cmpsb
cltd
and
sbb
lcall
sub
mov
shrb
pop
mov
dec
xlat
mov
mov
dec
xlat
aaa
add
jno
push
sub
cmpb
and
test
or
leave
or
jle
icebp
dec
pop
lret
cmp
or
push
fstl
fidivrl
push
jne
push
ret
imul
repz
sub
pop
test
xor
or
and
arpl
sub
lret
push
cmp
mov
or
jnp
loope
mov
and
xor
push
mov
pop
fldcw
pop
add
shl
sbb
push
sub
insl
jno
outsl
push
dec
dec
addr16
mov
movb
xchg
cmpl
xchg
aad
add
sbb
cmp
or
cmpsb
std
fidivs
mov
push
sbb
test
movsb
fs
mov
pop
lea
cmc
sub
mov
dec
in
sbb
or
pop
cmp
pop
or
aad
aam
xchg
cmpsb
mov
jle
xor
push
fisubrl
dec
adc
inc
mov
out
push
jo
shrb
dec
and
dec
fsub
push
mov
js
sti
cltd
mov
shl
subb
aaa
mov
inc
sahf
jo
hlt
int3
data16
dec
cwtl
jmp
lret
dec
push
and
popa
add
and
ret
jecxz
jmp
dec
add
mov
push
add
or
adc
hlt
mov
lret
mov
sub
leave
adc
xchg
push
insb
or
cmp
add
iret
daa
aad
fs
add
add
mov
cmpsb
cld
push
in
rcrb
loope
das
loop
shll
inc
cmpsl
into
xchg
mov
inc
jp
sbb
in
pop
imul
jl
cmp
lds
lods
sub
jecxz
or
sub
out
cmc
adc
jno
call
sti
jbe
ja
es
and
decl
clc
xchg
xor
or
xlat
insl
sub
repnz
repz
mov
lds
mov
sbb
popa
stos
jecxz,pn
pusha
lret
jmp
inc
add
pop
xchg
inc
pop
out
xchg
pop
repz
lahf
mov
jg
inc
cltd
hlt
insl
in
cmp
push
inc
inc
or
fsub
adc
mov
mov
dec
xor
jmp
mov
movsb
adc
add
int
add
scas
inc
das
xchg
aas
dec
hlt
or
mov
mov
jnp
and
pop
fistpll
sub
cmpsl
cld
out
sub
adc
and
cs
out
rcrb
std
inc
dec
push
loop
enter
adc
cmp
fildl
inc
pop
test
test
idivl
ror
pop
dec
mov
inc
or
or
outsb
sbb
and
xchg
and
mov
push
jo
cld
mov
es
push
xchg
and
xchg
cwtl
ror
xor
adc
testl
add
push
jb
and
nop
mov
out
clc
js
adc
jnp
iret
lahf
int
sti
gs
loop
push
out
xor
xchg
xor
adc
cmp
movsl
lds
xchg
andb
inc
fsubp
sbb
fbstp
inc
test
ja
sub
pop
or
sbb
loope
in
cmc
pop
push
ret
or
aaa
stc
push
inc
sbb
sbb
xchg
push
out
loopne
test
cmp
adc
xchg
xchg
push
sarb
jecxz
enter
jns
out
xor
xchg
iret
pop
or
movsb
aas
aas
in
jg
loope
push
enter
cmp
out
xchg
dec
call
int
lds
xor
addr16
cmp
mov
add
sub
nop
daa
in
mov
add
add
loope
mov
hlt
repz
out
and
dec
shl
mov
sub
idivb
cmp
sbb
shlb
rcll
xchg
xchg
out
mul
xor
into
add
fimuls
xor
cmp
test
xchg
xchg
ret
popf
pop
in
test
shll
cld
sub
pop
arpl
popf
xor
xchg
ficoml
test
sahf
and
xchg
repnz
mov
in
mov
mov
jbe
mov
int3
test
lods
sti
mov
cmp
xchg
xor
jp
inc
int3
xchg
push
pushf
dec
lods
dec
sub
jns
fldcw
add
iret
stc
jecxz
lcall
or
mov
jmp
pop
mov
and
out
mov
fisubs
pushf
loop
jbe
outsb
in
lret
cmp
cld
popa
loop
scas
stc
lds
inc
dec
jecxz
cmp
jae
mov
sub
cwtl
hlt
sbb
push
mov
test
popf
repnz
test
cmc
cld
arpl
lahf
out
xchg
mov
mov
lret
dec
bnd
call
cmpsb
cmpsl
or
pop
jle
fldenv
pop
cld
push
js
outsb
and
sbb
jae
sbb
jno
mov
mov
and
xor
nop
imul
mov
ret
lds
dec
dec
lahf
popl
jne
and
pop
in
or
sbbl
jecxz
dec
xor
inc
fldt
sbb
jp
imul
and
pop
push
xchg
cli
xchg
ret
mov
flds
fnsave
mov
fs
js
out
ret
ret
push
xchg
add
mov
push
push
adc
out
adc
jmp
repnz
int3
fldenv
inc
dec
and
adc
xor
scas
sub
cmc
xor
ficoms
and
fsub
xor
repnz
and
sub
sub
push
push
repnz
les
push
shl
mov
pop
or
test
cmp
fnsave
xchg
stc
push
repnz
and
pop
push
pusha
cli
sbb
push
int3
hlt
mov
mov
sbb
xchg
jae
pop
lcall
dec
mov
or
cltd
cmpsl
decb
adc
dec
pop
in
popf
mov
test
into
xor
outsb
aam
scas
mov
int
dec
movl
repnz
jp
mov
add
sbbb
jecxz
cli
push
cmpsb
insl
cmp
jnp
out
mov
push
xor
cmpsb
inc
fldcw
insb
pusha
aaa
xchg
jge
aam
je
pop
out
outsl
push
xor
mov
lea
xchg
icebp
in
leave
mov
aad
bnd
sbbb
xor
sbb
das
adc
dec
loopne
lods
mov
dec
push
and
loopne
cld
mov
ret
jmp
dec
jns
icebp
mov
mov
mov
and
fldenv
jecxz
mov
inc
aaa
into
repnz
mov
mov
mov
adcb
roll
shl
filds
sahf
out
sub
sub
in
add
in
adc
xchg
in
push
inc
out
xchg
sbb
mov
push
dec
sbb
jbe
mov
mov
add
cltd
in
sub
jp
lods
pusha
mov
jbe
sub
ret
add
outsb
add
adc
dec
jge
cmp
inc
mov
inc
push
lds
push
lcall
add
xor
test
adc
dec
hlt
ljmp
or
mov
mov
imull
mov
sub
add
dec
xchg
daa
repz
aam
das
hlt
shlb
enter
dec
out
dec
inc
adc
lret
ret
outsb
popa
mov
or
xchg
sahf
pop
push
sub
gs
stc
jmp
sub
mov
or
cmc
data16
gs
push
incb
in
test
test
cmc
xchg
outsb
inc
xor
xchg
ret
cmp
jecxz
mov
stos
mov
aaa
ret
call
mov
push
mov
add
mov
cmp
in
loopne
rorl
insl
jbe
mov
into
xor
mov
arpl
mov
add
popa
inc
dec
lock
jae
cmp
sub
mov
test
sub
push
test
jns
jns
cltd
push
mov
cltd
jns
out
fcmovnb
fs
adc
stc
cmp
pop
lds
arpl
mov
sahf
jo
sbb
lock
adc
test
pop
xor
sahf
cmp
insl
dec
sti
ja
out
mov
daa
rorb
sbb
xchg
pop
adc
inc
fwait
dec
leave
fisubrs
dec
arpl
mov
fsubrl
fbld
cmp
aas
clc
xchg
call
dec
ds
jg
and
mov
arpl
push
mov
std
jmpw
dec
mov
into
enter
pop
callw
dec
mov
xor
shr
pop
sbb
push
inc
dec
add
xor
cmc
js
sub
sub
fisttps
movsl
iret
cltd
popa
clc
lret
push
push
mov
ss
mov
mov
adc
cltd
insb
mov
pop
jecxz
and
cmp
jg
ss
fidivs
push
popf
stc
fldenv
dec
jecxz
mov
push
call
cmp
jb
dec
sbb
in
aam
adc
ds
and
mov
cmp
fsubrs
inc
pop
cmp
sub
scas
lcall
cltd
push
sub
test
inc
scas
inc
ja
cmp
in
inc
fcomps
fwait
and
fsubrs
push
add
mov
in
cmp
jbe
out
add
or
dec
loopne
sub
cmpsb
cmp
sub
dec
cwtl
loop
push
ljmp
lea
xor
cmp
push
sbb
inc
sbb
cmp
xchg
lods
cmp
xchg
arpl
pop
adc
loopne
push
and
push
aaa
xchg
imul
adc
fmuls
lahf
or
in
addl
or
clc
in
shlb
ss
mov
inc
out
test
cmp
mov
sarb
std
mov
fsubrs
test
adc
and
aam
jno
rclb
repnz
scas
je
loopne
pop
out
and
jbe
jbe
test
scas
stos
xchg
sub
jno
push
cli
xchg
test
clc
bound
pop
repz
in
sbbl
cmp
lahf
push
les
mov
cmpsl
mov
ja
or
push
lret
add
rep
xor
mov
push
cmp
mov
pushf
xor
aad
jg
pop
shrl
pavgw
push
icebp
mov
lods
lea
test
push
fstl
push
test
movsl
cmp
cmpsl
lea
loop
adcb
call
gs
mov
mov
sahf
pusha
jb
sahf
mov
les
data16
and
inc
pop
ds
popa
mov
xchg
scas
push
in
loopne
cs
fsubrs
std
dec
jecxz
xor
cmpsl
jl
inc
mov
pop
in
arpl
dec
add
mov
mov
ret
hlt
lcall
inc
in
sub
sbb
add
in
mov
cmp
and
testb
jp
cmc
stos
clc
and
lods
icebp
ds
jns
sub
sub
cmp
stos
clc
jp
sub
not
addr16
scas
test
je
aad
cmc
clc
inc
test
jne
lods
cmpsl
stc
pop
cmc
sub
sub
jbe
cmpsb
cli
xchg
sub
jle
shrl
or
sub
jns
inc
lods
cld
mov
stos
movsl
jmp
xor
hlt
cmp
shll
cmp
inc
xchg
cmp
enter
xchg
jmp
or
out
inc
sbbb
adc
mov
test
sbb
pop
repz
cmp
sbb
rcrb
mov
push
lods
adc
int
cli
push
in
sub
jb
and
xor
addl
adc
enter
in
sbb
or
inc
sbb
mov
mov
dec
and
data16
or
and
mov
ret
repz
mov
sub
mov
adc
pop
lock
lds
xchg
divl
adc
pop
mov
sub
into
sbb
sub
cltd
pop
mov
or
int
mov
xor
mov
mov
cs
sbbb
xor
add
add
aam
sub
cmp
shlb
xlat
push
cmpsb
mov
xlat
xchg
sub
inc
popa
clc
jno
scas
inc
push
test
cld
fadd
push
popf
testb
jns
dec
jecxz
mov
sbb
divb
jecxz
bound
mov
push
mov
out
ret
adc
arpl
in
pop
mov
inc
call
inc
stc
nop
jne
rclb
dec
loopne
leave
nop
daa
cld
inc
adc
popa
mov
jb
out
insl
add
xor
iret
bound
mov
xor
mov
xor
scas
repnz
dec
std
xchg
orb
jg
popf
xor
scas
enter
sti
xchg
test
cltd
jle
or
and
xor
pop
test
dec
fucomip
pop
fnsave
fsubrs
adcl
push
ja
mov
mov
mov
mov
lea
stos
mov
jo
lcall
test
inc
fidivrl
out
stos
dec
dec
fistpll
and
fisubl
or
dec
sbb
mov
imul
jae
xchg
and
mov
jne
lea
push
pop
repnz
xchg
fdivl
shlb
dec
jle
je
aas
mov
sub
and
mov
outsl
and
fidivs
icebp
or
cmp
cmc
jmp
sub
push
in
inc
out
adc
xor
jp
mov
mov
mov
fimull
cmpsb
rsqrtps
mov
lods
shlb
jl
cld
lods
call
pushf
add
xchg
test
sbb
push
movsl
sbb
xlat
int
xchg
dec
cld
xchg
jp
call
leave
int
xchg
add
imul
shrb
ret
ja
jnp
dec
stos
and
fcmovbe
in
test
inc
mov
das
push
stos
jl
fcmovne
push
jmp
ja
mov
mov
clc
inc
mov
js
push
mov
cmpsb
loop
xlat
int3
inc
fldl
dec
adc
dec
mov
and
inc
test
jle
inc
lcall
xchg
push
enter
mov
mov
mov
xchg
out
push
nop
xor
les
jg
inc
pop
sub
mov
aad
adc
enter
adc
xchg
test
adc
std
xchg
cmp
adc
adc
fildl
scas
inc
xor
in
cmpl
or
mov
stc
sub
jge
adcb
lcall
int
mov
jnp
inc
pusha
divl
mov
cli
xchg
mov
loopne
fistl
aaa
data16
mov
xchg
push
adc
js
sysenter
push
jmp
popa
xchg
fnstenv
fsts
or
dec
pop
pop
sub
add
shr
scas
jg
movsl
mov
gs
add
daa
je
push
es
test
movsb
les
pusha
repz
out
xchg
fnsave
and
lcall
testb
pop
into
in
pop
je
xchg
lods
addr16
mov
popf
jecxz
lock
dec
jle
adcb
mov
add
fdiv
lods
ret
and
inc
aaa
into
js
lcall
movsb
into
gs
insl
add
clc
jbe
cs
sbb
mov
fisubl
mov
das
sub
jo
jp
cmc
mov
jge
mov
inc
movsb
cmp
sbbl
sahf
pop
iret
xchg
mov
leave
lock
and
sti
cmp
sub
xor
and
sti
movsb
cmp
xchg
jae
ret
dec
les
pop
inc
fmuls
scas
pop
lret
or
test
imul
fmull
movsb
jg
push
pop
ljmp
or
push
repz
dec
sahf
rcrb
imull
xlat
rorl
fcmovu
mov
xlat
mov
aas
loop
push
imul
iret
or
lds
pop
xor
sahf
int3
xor
or
loope,pt
sbb
add
int
fcmovu
out
sub
insl
int
dec
mov
xchg
out
fisttpl
pop
mov
jno
insl
aaa
jecxz
scas
shlb
xor
jl
jge
adc
cwtl
orl
jb
fwait
adc
jl
jb
sbb
fstps
test
int3
ljmp
fmul
ds
cs
fadds
mov
lea
mov
adc
add
std
das
adc
inc
mov
cmpsl
movsl
pop
leave
daa
les
fcoms
push
or
hlt
insl
es
cmp
xor
pop
lret
xor
filds
inc
ret
and
out
pop
nop
sub
test
aaa
jl
mov
loope
imul
rolb
pushf
rcrb
lret
push
loop
and
int
push
pop
ret
sub
push
push
xor
mull
adc
sub
pop
or
pop
push
jmp
jg
add
dec
dec
insl
call
imul
test
cwtl
cmpsb
test
xchg
xchg
daa
arpl
xchg
xchg
jno
clc
mov
in
cmc
lods
fs
adc
pop
sahf
fidivs
js
std
push
ret
dec
xchg
insb
pop
rclb
out
mov
lods
pop
cmc
jmp
mov
enter
aas
in
or
mov
call
shr
repnz
adc
mov
sub
pop
enter
push
dec
icebp
xor
mov
loopne
jo
add
call
lods
out
xchg
pop
sbb
sub
inc
mov
push
out
in
jmp
cmp
inc
aad
std
das
xor
mov
bound
loopne
scas
dec
lods
subb
jb
cmp
pop
in
inc
ret
xor
fidivs
loope
out
fidivs
mov
in
fdivl
jnp
jl
fistpll
jmp
xchg
jp
stos
jle
aaa
xchg
cmpsb
pop
adc
xor
mov
test
int3
repnz
jmp
pushf
jg
scas
in
and
push
mov
inc
mov
inc
adc
xchg
inc
data16
xor
js
pop
jle
sub
dec
dec
sarl
loopne
lea
sbb
adc
and
out
xchg
mov
inc
and
filds
cmp
movsb
inc
cmc
xor
or
shlb
int
js
in
sbbl
dec
mov
repz
arpl
incl
mov
pop
xchg
and
xchg
loop
add
adc
dec
cmpsl
mov
and
mov
popa
xchg
pusha
pop
enter
pop
xchg
rcrb
bound
in
cwtl
das
push
cmp
sti
xchg
mov
scas
inc
cld
cmpsb
data16
push
pusha
sysexit
mov
addb
or
push
pushf
inc
into
and
das
lds
enter
adc
adc
sub
jae
std
push
and
mov
icebp
negb
cs
mov
out
push
push
into
push
outsl
jae
test
das
mov
sub
lea
cmc
imul
fisubl
or
and
and
fisubs
dec
in
push
in
inc
stc
je
inc
xor
scas
insl
pop
jno
push
jnp
dec
cmp
mov
pop
mov
pop
or
imul
lock
imul
pop
jmp
test
cmp
sarl
dec
aad
dec
int3
fbstp
push
lds
dec
sbb
lret
loop
into
mov
repz
lret
sti
xchg
cs
push
or
push
fwait
and
and
add
inc
daa
repz
cmp
cld
xor
call
adc
add
jg
sbb
lea
and
jp
jb
lock
or
sub
loop
fistpl
lock
fcoms
mov
fs
lcall
lahf
stc
daa
or
rclb
subl
add
jp
out
xchg
lea
test
movsl
push
or
jb
les
dec
rorb
in
fwait
xor
rol
js
fs
mov
testl
mov
pop
push
fwait
in
sbb
pop
popf
mov
hlt
mov
xor
sbb
cli
movsl
adc
in
fcmovb
ljmp
mov
or
repz
or
scas
adc
inc
cld
insb
pushf
fldt
test
jne
aas
jo
jno
pop
ror
xchg
stos
jo
lods
sub
hlt
xchg
mov
or
imul
outsl
mov
pop
dec
rcrb
negb
adc
mov
jae
mov
test
mov
sbb
pop
lret
push
stos
inc
inc
fldenv
sbbl
xor
jl
mov
mov
imul
sbb
and
sub
js
fucom
lods
xchg
mov
mov
or
xchg
jno
stos
dec
xchg
mov
shlb
fcompl
lea
jbe
pop
test
mov
adcb
ljmp
adc
pop
fistps
pop
shrb
cmc
xor
and
idivl
int3
and
cmpb
dec
rclb
xor
bound
adc
jge
into
divb
sbb
xchg
sahf
xchg
daa
adc
inc
stos
cmp
das
ret
cmp
out
pop
ja
pop
dec
pop
das
movb
inc
inc
arpl
cli
cmp
mov
ljmp
and
and
push
into
push
lods
mov
int
inc
icebp
pop
sub
imul
testb
jns
lret
dec
fmull
or
adc
andb
popa
lahf
mov
dec
jecxz
bnd
out
imul
inc
mov
cmpsb
push
roll
lret
addr16
and
test
sidtl
pop
ljmp
jne
cld
dec
ret
out
and
subb
mov
xor
pop
add
test
pop
rcll
ja
adc
fimuls
lea
push
sbb
mov
jbe
lods
addr16
int3
arpl
xor
scas
xchg
pop
sarb
push
dec
sahf
push
jp
push
inc
dec
sbbb
popa
movsl
pop
ss
movsb
je
push
jmp
lea
jge
add
inc
jecxz
gs
push
ds
jo
pop
fdivl
pop
xlat
stos
inc
in
lret
pop
add
cmpsl
sub
xchg
out
scas
scas
rcrl
or
in
out
and
cmc
fdivl
push
inc
push
hlt
mov
pop
dec
les
push
iret
hlt
add
mov
popf
and
fmul
sbbl
ficoml
cld
out
xchg
xchg
lahf
mov
cmpsb
out
insb
xchg
filds
jg
in
bound
cld
sub
pop
movsl
or
adc
jle
inc
stc
cmp
ficoms
push
ficoms
mov
mov
add
dec
shll
pop
dec
inc
sub
xor
test
int3
pop
dec
ret
arpl
mov
sub
sub
push
icebp
pop
dec
int
pop
xchg
mov
jnp
push
pop
jl
jnp
cltd
gs
aas
pop
imulb
sbb
ds
mov
mov
dec
lds
insb
mov
push
xor
push
iret
pop
icebp
add
sarb
cmp
jbe
ss
dec
cmp
les
jecxz
sti
out
pop
lret
push
mov
insb
push
lret
cmp
insb
mov
jb
adc
push
fwait
je
aas
loope
cwtl
push
and
adc
fidivrl
insb
inc
scas
aas
cmc
mull
nop
sub
sbb
add
out
es
cmc
mov
daa
dec
cmpsl
call
mov
ljmp
jns
lods
xchg
jo
test
xor
xor
jb
cld
daa
adc
jne
cmpl
lods
dec
shlb
into
inc
test
insl
cmpsl
pop
inc
movsl
popa
pushf
sbb
ds
jnp
xchg
jge
sbb
jne
cltd
popl
pushl
xor
dec
xchg
jbe
es
adc
inc
xchg
insl
je
cmp
push
xor
in
sti
test
jmp
or
das
ret
jecxz
movsl
insb
jle
adc
push
jmp
mov
mov
out
or
frstor
jb
xchg
dec
in
xchg
jp
pop
scas
scas
inc
mov
cmp
xchg
xchg
cmp
and
sbb
inc
stos
stos
test
inc
cs
and
add
dec
ja
adc
jmp
mov
push
hlt
lret
jne
push
dec
les
push
dec
add
mov
xchg
cmp
pop
iret
and
mov
jmp
daa
loopne
mov
sub
outsl
lcall
push
xchg
in
sub
pop
test
dec
imul
dec
leave
popa
push
push
pop
aam
pop
scas
arpl
sub
orl
xchg
mov
sub
rorl
lds
cmc
cmpsb
imul
mov
sub
stos
xchg
jle
rol
inc
fiaddl
mov
int3
push
iret
mov
ss
dec
icebp
xor
lds
mov
out
xor
xor
les
cmpsl
cmpsl
clc
mov
leave
int
mov
loope
sbbl
and
cmpb
test
int
jl
mov
jmp
cmp
add
add
lea
add
je
cli
out
out
into
mov
loope
hlt
sbb
leave
scas
pop
mov
cmc
mov
inc
inc
out
sbb
fistpll
lods
xchg
incb
into
lcall
or
add
and
ret
stos
pop
aam
orb
dec
outsl
mov
adc
repz
mov
sub
dec
mov
pop
adc
jle
in
pop
dec
aaa
cltd
xchg
mov
mov
mov
cltd
sub
jg
or
aam
pop
out
inc
enter
sbb
sbb
sti
xor
add
sub
sbb
push
cmp
cli
ss
jmp
dec
lods
jp
inc
inc
and
imul
xchg
movsb
mov
xchg
icebp
iret
pop
int
fstps
call
or
cltd
decl
rcrl
cmpsb
insb
loop
jnp
and
cltd
xchg
mov
ret
test
mov
or
lcall
push
mov
xchg
icebp
inc
cmpsl
and
mov
inc
pop
daa
xsha1
cmpsb
lea
enter
insl
aad
sbb
rcl
lds
fdivs
int
inc
scas
bound
xor
and
mov
ret
lods
std
lods
mov
xchg
popa
int
outsl
cmpsl
cmp
cmp
cmc
and
mov
js
cmp
jle
les
gs
cmp
loope
jle
mov
mov
aam
push
add
movsb
ret
mov
xor
push
fnstenv
pop
inc
lds
stc
xor
push
fstpt
jmp
mov
std
adc
jl
test
and
imul
sub
pop
ds
cltd
mov
push
sbb
push
movsl
aas
insl
mov
pop
pop
inc
scas
fs
mov
mov
dec
rcll
add
mull
sti
out
sbb
int
shlb
lret
mov
in
fists
sub
sbb
stos
scas
inc
fdivl
add
movsb
std
and
mov
in
repz
fsubrl
or
mov
dec
cld
std
jns
mov
jmp
lock
mov
out
loop
sar
mov
hlt
pop
lret
cld
sti
and
in
es
mov
and
lret
cmp
loopne
stos
adc
cmp
clc
inc
js
enter
stos
pop
test
mov
push
jo
mov
sbb
jg
xchg
dec
sbb
jnp
push
enter
inc
pusha
mov
cmovl
cmp
xor
jno
jbe
icebp
inc
sbb
fs
testb
rorb
xor
push
cltd
fmull
push
aam
cmp
inc
mov
sub
or
add
cld
lock
jbe
push
xor
imull
aad
cmpsl
ds
test
lret
out
imul
jbe
cmp
fsts
add
xchg
lret
aad
inc
test
fildl
shrb
or
ficoml
sbb
into
stos
sub
out
adc
lret
adc
mov
loopne
cld
mov
pop
lret
stos
in
push
mov
inc
fisubrl
fadds
jmp
dec
fists
out
xlat
pop
pop
cld
jo
adc
and
jb
in
xorl
sub
push
lret
jns
in
das
dec
and
push
movsb
inc
rcll
icebp
add
out
test
aaa
xchg
sub
out
push
cmpsb
sub
jle
les
cmp
sbb
lcall
cli
outsl
cli
xchg
mov
lds
shlb
leave
adc
mov
mov
insl
scas
pop
clc
fiaddl
ds
aam
icebp
mov
in
daa
mov
sbb
mov
xchg
cmpsl
jge
jb
leave
xor
sub
xchg
sti
mov
xor
or
cmp
sbb
add
lret
sahf
and
adc
or
rolb
leave
aaa
lds
inc
cltd
push
aad
sbb
push
roll
movsb
pop
leave
add
push
pop
test
icebp
icebp
pop
scas
je
mov
repnz
movsb
cmp
sbb
cmpsb
add
stos
cltd
lock
and
sbb
lock
sub
adc
and
in
sbbl
repz
cmp
sbb
cmpl
in
inc
loop
dec
cli
shrw
inc
scas
lahf
insl
adc
bound
xor
mov
mov
mov
stos
inc
in
sub
lock
gs
push
mov
pop
clc
dec
pop
int
lods
lock
and
cmp
out
out
sbb
adc
aam
pushf
mov
ljmp
clc
fisttpll
imull
jle
lret
cld
mov
stc
and
icebp
shrb
xor
mov
adcb
add
dec
adc
jns
sbb
xchg
insl
cmp
jne
pusha
imul
adc
outsb
or
decb
lods
push
cmc
inc
mov
xchg
push
sbbb
stc
dec
jnp
mov
sub
inc
lea
jae
push
push
pop
mov
movsl
inc
data16
inc
popa
mov
dec
xlat
dec
out
pop
popa
xchg
inc
ror
ds
in
dec
iret
and
mov
mov
push
das
lret
xchg
push
in
rclb
fisttps
cmp
bound
pop
mov
sbb
ret
mov
sub
lods
mov
or
cltd
lods
inc
add
add
ret
leave
mov
imulb
lret
adc
or
jns
xor
xchg
dec
jecxz
dec
mov
mov
mov
mov
fmul
mov
cmp
imul
repnz
cmovbe
pushf
mov
mov
xor
sub
lahf
inc
mov
or
inc
subb
mov
loop
mov
jo
es
cli
fs
je
lea
xor
pop
ret
iret
inc
sbb
or
arpl
inc
aam
xor
add
fisubs
ret
fbld
add
movsb
fldt
and
loop
jne
shlb
push
mov
or
dec
rcrl
sub
shr
test
loop
fs
cld
movsb
pop
or
push
and
dec
aam
mov
insl
fildll
inc
push
lock
dec
in
pop
negl
inc
mov
out
sbb
mov
and
jl
xor
inc
movsl
and
cmp
or
xor
in
mov
std
and
xchg
xchg
repz
sbbb
bound
out
xchg
mov
das
xor
mov
jecxz
bswap
dec
cwtl
add
repnz
out
cmpsb
ret
mov
sub
into
insb
lcall
imul
xchg
sub
xchg
bound
cmpxchg
pop
shr
and
std
fcoms
iret
cmp
mov
jge
sarb
push
aam
push
shl
fistps
xchg
rclb
sub
lods
inc
xor
mov
outsl
xor
aas
dec
pushf
nop
push
jle
aad
xor
mov
mov
adc
pusha
pushf
jne
sarl
xor
mov
sti
xchg
insl
sbb
mov
pop
icebp
mov
mov
push
jmp
mov
sub
scas
popa
xchg
mov
ret
and
mov
test
jmp
mov
divl
cltd
test
mov
mov
in
bound
xchg
insb
fmull
outsl
out
xsha1
cmpsb
mov
testl
xor
mov
test
mov
push
jecxz
dec
loop
add
test
cmp
sub
push
sarl
ds
shll
stc
mov
push
sti
das
or
mov
add
jle
test
out
pop
int
or
fstp
sub
fmulp
das
mov
loopne
enter
dec
aam
icebp
fnstenv
cs
mov
arpl
mov
lock
fxch
repnz
sarb
cli
sub
xchg
mov
xchg
adc
fs
mov
lret
lret
dec
push
push
ret
fbstp
jns
lret
test
pop
sub
ret
fs
loop
xor
adc
dec
dec
xlat
sbb
mov
jae
setb
sbb
nop
icebp
sbb
lret
fcoml
xor
mulb
ficoml
cli
imull
lock
gs
mov
dec
testb
popa
mov
addb
mov
mov
sub
xor
imul
fdivrl
loope
ljmp
movsl
fildl
fbstp
and
ret
arpl
sub
sbb
sbb
loop
xor
push
ljmp
gs
mov
pop
inc
pop
lds
mov
hlt
pop
or
cmp
in
je
mov
shll
movsb
xor
jnp
out
lods
mov
js
iret
push
mov
inc
ret
out
movsl
push
pop
test
fiadds
outsl
cmp
stos
pop
mov
pop
ret
push
inc
sub
call
cmp
imul
adc
cmp
enter
ficompl
or
or
nop
ja
sahf
mov
push
xchg
mov
std
fsubrl
insb
lcall
jl
inc
shr
mov
ljmp
scas
aad
and
add
cmc
popa
pop
xor
pop
adc
callw
roll
clc
xor
jae
enter
and
shlb
mov
loop
jle
faddp
mov
mov
or
mov
jecxz
push
adc
push
shlb
mul
pop
inc
mov
mov
mov
push
dec
dec
inc
popa
pushf
cmp
out
jo
jg
sub
and
xchg
dec
push
inc
fcomp
jo
ret
sbb
call
mov
cmp
mov
add
pushf
and
gs
and
mov
into
xor
dec
scas
out
pop
ror
sbb
inc
stos
stos
daa
out
sub
pop
addr16
sub
push
mov
inc
bnd
xor
sbb
fbstp
aaa
dec
icebp
mov
out
imul
cmc
xor
mov
lea
inc
cwtl
andl
enter
lahf
je
xor
pop
sub
xchg
jle
mov
jns
add
insl
add
outsl
pop
adc
xchg
xchg
adc
in
xor
cmp
je
add
adc
ds
mov
or
lock
loop
imul
cmp
sbb
out
pop
xor
bound
in
inc
lods
dec
pop
ss
lcall
into
push
dec
pop
movsb
lcallw
jne
jle
test
add
xor
mov
outsl
push
pop
imul
nop
cmpsb
pop
das
stos
and
push
dec
inc
int3
inc
sahf
xor
in
test
sbb
imulb
jg
pop
add
mov
repz
lods
inc
into
or
test
les
scas
jb
pop
and
clc
mov
inc
or
mov
jbe
fldt
pop
movsl
mov
mov
and
mov
movsl
jg
repz
cld
xchg
pop
cmpsb
popa
mov
paddw
add
pushl
cmpl
jne
gs
movsl
mov
adcl
jns
stos
rclb
sarl
xor
cmp
or
inc
mov
ljmp
fldpi
lea
std
jge
loopne
xchg
mov
push
ret
mov
sti
daa
clc
cld
jp
mov
fimull
rol
jbe
out
popa
pushf
ja
adc
cmp
pop
xor
out
stos
xchg
or
or
xchg
sub
sub
xchg
mov
movsl
jg
movsb
mov
shrl
shrl
ret
lock
loopne
insl
push
movsl
sahf
jne
cmpsb
mov
test
adc
inc
sbb
xchg
insl
ret
mov
push
call
or
xchg
test
mov
or
shrl
jg
and
ds
xchg
sub
cmpsl
mov
jns
cli
fidivl
pusha
idiv
or
insb
add
push
mov
insb
mov
sahf
mov
pop
and
testb
sub
pusha
sbb
ds
jo
mov
xor
cmpsl
out
fisubl
mov
sub
aaa
into
in
aas
jle
mov
mov
pop
mov
mov
push
daa
mov
mov
fstpl
notb
dec
arpl
jnp
jge
arpl
xor
in
fbstp
and
xchg
aaa
jnp
scas
lods
pop
sbb
test
or
fsubs
pop
outsb
repnz
nop
out
mov
xor
push
fildl
cmp
pop
rcl
repnz
mov
repz
cmp
mov
scas
adc
cmp
lock
repz
arpl
adc
and
mov
mov
pop
xor
aad
xchg
cwtl
or
stc
xchg
and
push
stos
xor
fistps
cmp
ficompl
ret
and
mov
fwait
xor
lods
jecxz
jl
dec
sub
scas
lret
mov
adc
mov
sahf
fmul
xchg
in
out
aaa
imul
cld
cmp
add
in
pop
mov
jp
fwait
jbe
fbstp
add
push
lds
popf
sub
xchg
mov
pop
outsb
mov
cltd
sub
inc
rorl
pop
pop
shll
jae
mov
insb
fcmovb
cmc
cmp
sbb
pop
fbld
push
andb
sbb
cli
leave
lret
iret
js
sbb
aad
or
add
push
lods
pop
clc
sbb
ret
sub
cmc
jbe
add
add
lcall
or
adc
pushf
fdivrl
outsl
mov
bound
loopne
sub
inc
adc
cltd
xchg
sub
push
test
jo
pop
cld
rol
gs
insb
dec
lds
or
test
je
mov
push
push
add
sahf
out
push
mov
xchg
cmpsb
leave
xchg
xor
loopne
ja
mov
mov
xchg
aas
push
arpl
xor
sti
pop
shl
test
sub
ret
in
mov
mov
sti
push
jecxz
xchg
je
push
fists
jo
icebp
cmpsl
push
int
stos
adc
inc
pop
mov
dec
stos
sbb
sbb
mov
mov
jp
rcll
fs
sub
and
rolb
imul
sub
jb
lret
vcvtsi2ss
fdivrs
fistl
imul
mov
repz
dec
xor
jl
sbb
dec
sub
dec
inc
aas
push
mov
mov
lret
sub
gs
fcoms
cli
xor
rolb
cmpsb
std
je
cmp
dec
in
jbe
cltd
fbstp
and
xor
sub
sbb
jge
ret
mov
or
mov
pusha
or
push
repnz
jecxz
gs
call
mov
xchg
xchg
cltd
xor
popf
test
mov
and
popa
clc
mov
iret
retw
inc
dec
arpl
aam
cmc
xlat
outsb
out
arpl
insb
xchg
add
or
mov
xor
or
jg
or
icebp
mov
fsubrs
cwtl
ret
pop
or
push
lods
xchg
xchg
inc
faddl
bswap
sbbl
aad
pop
jae
shll
push
add
xchg
inc
push
and
push
add
out
fmuls
in
add
popa
outsb
pusha
push
cmp
xchg
pop
rorl
adc
cmp
and
fwait
mov
rclb
test
lods
sub
cld
pop
shll
fstpl
push
add
add
int3
lock
cmp
pop
js
add
sub
and
push
jo
imul
and
dec
adc
xor
loop
test
jecxz
mov
push
idivl
test
jg
mov
mov
gs
pop
add
pushf
inc
les
sarb
push
clc
pusha
mov
mov
ficoms
test
mov
dec
adc
mov
mov
repz
data16
push
js
popf
movsl
cmpb
mov
dec
adc
mov
or
pusha
outsb
repz
cmc
xor
arpl
xchg
cmp
dec
adc
xchg
adc
add
icebp
pop
push
jnp
popf
test
jg
dec
mov
dec
adc
adc
mov
mov
outsl
repz
insl
cmc
fmuls
psrlq
lods
into
xchg
xor
dec
adc
and
pop
add
xchg
insl
cmc
cmpsl
pop
aas
mov
cmp
adc
sbb
mov
mov
imul
push
aaa
lcall
xchg
cmp
or
adc
push
cmp
pop
pop
test
push
das
mov
shlb
fisubrs
and
dec
cwtl
aaa
or
lods
into
xchg
cmp
mov
out
mov
mov
xlat
pop
inc
les
pop
dec
ret
lea
scas
loopne
je
fiadds
lahf
mov
add
pop
jle
pop
dec
mov
xor
and
push
notl
push
adc
cli
arpl
dec
adc
sahf
dec
andps
daa
test
test
mov
int3
or
cmpsb
daa
dec
pusha
mov
xor
lret
sbb
xchg
inc
xchg
inc
push
xchg
xchg
inc
pop
xchg
mov
inc
push
ret
xchg
mulb
xchg
inc
lea
dec
sbb
jg
xor
or
shrb
lods
sub
push
cmp
xor
int3
mov
xor
les
rcl
movsl
inc
adc
or
rcrb
add
daa
mov
pop
test
mov
in
les
push
iret
push
mov
push
dec
inc
jb
adcl
pop
and
movsl
ss
cmp
mov
mov
inc
push
push
in
mov
pop
mov
movsl
ss
and
sarl
adc
loop
mov
jmp
repz
cmp
and
arpl
mov
xchg
inc
leave
loope
push
cmpsl
adc
jmp
rep
push
jne
imul
sbb
lret
adc
das
xchg
dec
or
xor
repz
stos
cs
cs
add
in
notl
lcall
mov
stos
xor
sub
cmp
mov
insb
out
rorl
lret
push
out
mov
or
mov
daa
and
cmp
data16
mov
xchg
inc
mov
stos
mov
sarb
movsl
mov
scas
sub
ret
jge
push
ja
and
int3
sahf
and
cmp
nop
into
dec
pop
in
iret
sbb
cwtl
arpl
jg
call
dec
or
lds
int
mov
fwait
out
sahf
repz
and
cmp
fwait
add
pop
mul
into
sbb
fwait
gs
ja
in
cmp
fwait
xchg
jge
lds
int3
sbb
mov
ss
sarl
lahf
push
add
dec
pop
adc
test
ret
ret
jo
jmp
pop
insl
mov
mov
rol
cs
jmp
xor
mov
mov
in
addr16
mov
fcoml
mov
mov
xchg
out
push
xor
sti
pop
add
xchg
aas
cmpsl
pop
out
push
mov
pop
pop
fsubrp
push
cs
add
xchg
aas
sub
push
add
cmp
mov
out
test
and
insl
push
xor
jg
xor
sarl
pop
mov
sti
bound
hlt
pop
enter
outsl
sbb
jle
mov
orl
pop
je
in
push
cmc
pop
int3
std
cmpsb
sub
and
lret
mov
or
push
outsl
jo
imulb
fnstcw
jge
scas
inc
test
ljmp
add
call
cli
sarb
add
test
lea
orl
in
add
jle
add
cmpsl
sahf
andl
sahf
shll
push
add
ret
push
push
shl
lret
add
mov
jp
push
mov
lods
fiaddl
mov
sub
leave
in
jb
loop
shll
repnz
pop
sarb
iret
mov
lods
repnz
inc
pop
inc
or
xchg
and
sub
nop
les
sub
adc
ja,pt
and
ficompl
fcomi
sbb
inc
or
mov
adc
fistl
movsl
mov
pop
mov
mov
mov
mov
lret
outsl
lods
das
movsl
pop
or
mov
mov
repnz
add
and
sub
lcall
movsl
daa
push
fadds
lret
movsl
dec
or
and
cltd
inc
sbb
scas
sbb
add
fdivs
pushf
icebp
push
sahf
inc
test
pop
or
jmp
sub
in
cmp
daa
cmpsl
pop
mov
and
jle
cmc
lods
daa
mov
out
pusha
lock
cmpsb
mov
push
add
rol
fdivrs
or
lods
mov
test
sub
shrb
insl
out
sbbb
pop
mov
sub
inc
rcrl
fistpl
ret
loop
movsl
adc
int3
fcmovb
out
xor
clc
pop
sti
sub
pop
jecxz,pn
mov
push
js
imul
sbb
mov
add
cmp
cltd
jae
jp
popa
imul
ret
pusha
mov
mov
dec
pop
pusha
repnz
pop
sti
pop
jg
leave
cld
inc
add
mov
cld
pop
push
scas
fwait
aaa
mov
sbb
jge
in
outsb
arpl
aas
leave
jns
leave
mov
push
push
inc
stos
mov
dec
mov
mov
mov
add
fnstcw
out
inc
mov
rclb
jmp
push
jge
and
cmpsb
add
pop
and
pop
sahf
nop
adcb
xchg
inc
aam
xchg
inc
rorb
scas
and
jae
loopne
nop
jl
fdiv
rorb
inc
jmp
imul
out
div
mov
icebp
ss
cmp
iret
pop
aas
adc
inc
nop
pop
add
fiaddl
lds
dec
adc
inc
push
jnp
sub
mov
sbb
stos
add
mov
lods
test
test
cmpsb
xlat
push
lret
leave
xchg
outsl
es
call
sub
jle
sub
fdivrp
leave
dec
or
hlt
pop
out
xchg
push
add
mov
xchg
inc
xchg
jne
mov
cld
mov
icebp
pop
insl
add
scas
xor
or
lods
add
jnp
push
jge
mov
mov
push
call
inc
xchg
add
sub
cli
sub
aas
int
scas
add
adc
add
cltd
sbb
std
stos
inc
adc
cltd
xor
cmp
or
cmovo
cwtl
pop
dec
adc
lret
inc
pop
lahf
out
mov
push
mov
enter
pushf
adc
daa
scas
mov
inc
pushl
inc
or
test
call
pop
outsb
cmp
and
fcomp
adcb
loope
popa
inc
add
lods
xchg
arpl
je
ds
mov
mov
add
jle
push
lcall
xor
popf
inc
mov
jo
stos
mov
cmp
ret
sub
xchg
aaa
inc
push
add
xor
loop
xchg
cmp
sub
fmul
mov
aaa
ret
nop
cmp
sub
mov
push
add
rorl
cld
xchg
add
das
jmp
xor
xorb
and
test
mov
pop
sti
push
jbe
mov
pop
or
sbb
xor
inc
mov
icebp
xor
dec
mov
and
mov
jge
int
out
stos
adc
mov
jge
add
adc
andl
sar
int3
cmp
sbbl
mov
jno
fiaddl
fcomi
push
clc
daa
or
mov
pop
push
clc
cmpsb
push
lret
xchg
cmp
inc
pop
add
push
scas
xor
roll
dec
jecxz
mov
rorl
sbb
push
enter
in
mov
hlt
and
je
adc
hlt
inc
ds
scas
out
cltd
cmp
fidivrl
jmp
cld
jno
pop
cli
and
cmp
xchg
adc
loopne
adc
pop
orl
jle
fstps
push
inc
int
aas
dec
inc
adc
pop
cli
mov
adc
mov
xchg
sub
dec
mov
cwtl
sbb
mov
iret
movsl
push
negl
shll
mov
mov
rcrl
adc
dec
stos
sub
add
mov
push
ffreep
in
sahf
push
and
mov
mov
daa
mov
cmp
jg
out
push
out
imul
das
aaa
mov
sub
mov
mov
adc
cs
mov
pop
add
mov
or
lcall
xchg
cmp
aaa
inc
or
loop
adc
mov
or
add
movsl
pop
decl
loopne
dec
aas
movsl
sub
and
xchg
outsl
inc
rorl
js
cld
pop
push
imul
call
int3
mov
test
and
pusha
fwait
sbb
or
pop
sti
sub
shlb
lods
loopne,pn
jge
outsl
cld
sbb
adc
dec
mov
addr16
fst
outsb
addps
test
fstpt
mov
roll
loope
mov
mov
daa
inc
mov
ret
jnp
aaa
mov
adc
jne
dec
pop
xor
out
imul
std
xchg
inc
lret
mov
jg
dec
or
arpl
aam
adc
int
int
xchg
cmc
push
jmp
mov
std
cld
cmp
rol
out
in
jbe
push
and
sub
mov
pop
imul
xor
std
pop
or
test
push
inc
adc
pop
mov
sahf
loopne
test
add
lcall
stos
xchg
jecxz
push
fcmove
jne
fisttpl
nop
inc
movsb
pop
aaa
mov
xor
cltd
cmp
xor
icebp
ljmp
and
out
mov
rcrb
mov
scas
mov
shrb
or
push
xor
loop
sub
dec
or
sub
sbb
int3
mov
test
bound
enter
insl
jb
mov
mov
or
std
jl
dec
inc
lock
int3
insl
repnz
push
dec
pinsrw
movsb
sbb
jle
out
push
imul
add
push
clc
lcall
dec
add
push
push
pop
add
movl
stc
leave
and
push
mov
jp
and
pop
std
mov
mov
dec
idivb
dec
in
fdivrs
fsub
je
pop
mov
dec
shlb
stc
cld
mov
mov
mov
mov
mov
dec
or
out
sbb
in
mov
sub
movsb
out
adc
in
jo
mov
out
ljmp
popf
mov
mov
fsubrs
mov
xor
dec
icebp
or
cmpsb
jp
xor
pop
xorb
cli
mov
je
pop
scas
cmp
and
dec
int3
test
movsl
iret
xchg
inc
jo
add
xchg
mov
mov
mov
inc
cmp
lret
xchg
subl
ljmp
pop
xor
insl
out
sub
jnp
int
je
mov
out
xor
add
add
cmp
push
add
hlt
xchg
inc
ret
mov
and
lods
xchg
popa
jmp
add
sti
pop
dec
fsubr
je
fwait
sbb
rcll
xchg
push
pop
js
mov
clc
jo
ljmp
cmc
push
cld
loope
and
mov
and
sbb
ficomps
adc
aad
rorl
push
mov
cmp
xchg
sahf
xor
cmp
and
sub
xchg
cmp
cmp
lcall
mov
lret
in
outsl
arpl
ret
ja
xor
xor
cwtl
mov
insb
pop
inc
movhps
xlat
add
pop
nop
inc
outsl
repnz
jae
stc
jb
xchg
inc
or
pop
mov
shll
and
data16
cmp
loope
push
cs
pop
mov
scas
cmp
xlat
mov
sbb
pop
loop
arpl
out
repnz
and
xor
out
shlb
mov
inc
or
mov
sarl
mov
pusha
cmp
mov
das
mov
hlt
iret
dec
jns
insl
sbb
scas
out
in
jno
repnz
inc
inc
xor
sub
sbb
jecxz
fdivrl
lcall
and
cmp
lret
bound
and
and
cmp
mov
jp
xor
mov
rol
cs
cmp
and
roll
cmpsb
sub
dec
push
mov
mov
test
and
and
xchg
cmp
xor
mov
dec
test
xor
dec
adc
shll
mov
jge
add
out
xor
mov
pop
fisubrl
mulb
out
inc
xchg
les
jne
int3
mov
insb
negb
in
int
ficompl
rolb
mov
movsb
cmp
mov
insl
iret
jb
jp
and
aas
ljmp
mov
push
add
push
jno
adc
mov
ja
ret
arpl
sub
sbb
daa
inc
jbe
or
sbb
cmp
popa
repnz
iret
mov
int3
dec
push
pop
adc
les
adc
sahf
push
pushf
xor
insb
and
out
outsb
sub
cli
pop
rorb
add
pop
cli
mov
adc
in
fidivrs
cld
mov
cmp
clc
movsb
pushf
loop
cmp
sub
cltd
jns
xchg
aaa
mov
lods
roll
xchg
cmpsb
aaa
cmpsb
sub
mov
xor
and
aad
sub
and
inc
mov
movsl
push
call
adc
daa
adc
cmp
sbb
push
add
xchg
jmp
mov
mov
rorl
sub
sti
push
shlb
xchg
xchg
ficompl
sub
jb
adcb
cld
pop
xor
push
add
fistl
xchg
jo
std
push
out
insl
fdivrs
lock
imul
incb
fnsave
lds
xchg
cmp
mov
les
sub
mov
cmp
sbb
sti
jne
and
lret
stos
and
pop
sub
das
lods
aas
cld
nop
inc
movsb
daa
jae
sbb
mov
roll
movsb
andb
mov
inc
adc
xor
add
push
mov
and
sub
insl
fisttpll
rcl
pop
add
add
cmpsl
roll
fs
pop
int
adc
mov
mov
stos
pop
push
and
orb
icebp
pop
andl
in
xlat
push
stc
rsm
rorl
push
jae
mov
scas
cmpsl
ss
pop
cld
std
insl
xchg
inc
addr16
pop
cmpb
insl
fiadds
jnp
dec
mov
cltd
cs
pop
add
jp
fsubrl
add
pop
add
imul
cwtl
in
jno
mov
pop
add
xchg
xchg
cmp
mov
jmp
or
into
loope
mov
popf
cli
push
add
stos
or
inc
ret
in
insl
add
add
cmpsl
scas
mov
dec
sub
sti
push
test
cmp
loopne
in
mov
mov
fsubrs
or
mov
or
mov
and
repz
mov
hlt
loop
mov
lods
xchg
insl
cs
ret
mov
icebp
cs
frstor
sbb
xchg
mov
scas
and
out
out
or
jb
add
or
mov
mov
push
add
mov
xor
cli
and
inc
or
xchg
mov
nop
mov
or
cltd
inc
xchg
mov
mov
dec
adc
mov
aaa
mov
inc
or
mov
cmp
mov
jno
add
ret
pop
fidivrs
lahf
fdivrl
or
das
dec
mov
int
mov
call
cmc
mov
imul
and
js
sbb
xchg
xor
loopne
pushl
xchg
ds
dec
adc
fdivrl
mov
in
mov
pop
imul
mov
mov
fadds
or
rorb
daa
shlb
ss
fsubs
or
or
mov
mov
nop
push
sbb
pop
cmp
out
pop
orb
dec
pcmpeqb
pop
add
imul
fdivp
mov
cmp
sub
sbb
ja
inc
jbe
mov
pop
mov
jb
lea
les
dec
xchg
cmp
xor
inc
push
fwait
inc
mov
lret
cmpsl
and
jno
std
pusha
mov
lods
sbb
sbbl
iret
push
xlat
dec
xchg
ret
sub
jno
xchg
aaa
mov
stos
mov
rolb
lret
cmpsl
sub
enter
test
popa
nop
sbb
jo
loop
aad
scas
xor
cmpsl
sub
jo
push
push
adc
pop
pop
test
mov
inc
stc
cltd
cmp
cmp
out
lea
mov
mov
hlt
pop
sbb
xchg
sub
sub
or
stc
pop
mov
push
xchg
sub
stc
jne
call
lahf
cmp
shrb
add
pop
mov
jle
sbb
sbb
push
movsl
xor
jne
insb
push
jo
bound
and
mov
push
jl
mov
mov
lds
lret
shll
inc
push
add
fldl
pop
loope
lds
mov
bswap
xchg
repnz
and
inc
pop
and
cmpsl
push
jns
insb
sub
adcb
enter
loope
sahf
jecxz
hlt
adc
call
nop
inc
jns
roll
adc
shlb
push
test
jae
test
mov
js
mov
jge
xchg
cmp
ja
mov
scas
inc
or
lock
subb
bound
in
jb
dec
cs
rorb
add
pop
xlat
popa
out
outsl
inc
mov
in
mov
hlt
jbe
movsl
xor
ljmp
xchg
xchg
callw
cmc
pop
sti
dec
adc
jbe
pop
imul
movsl
sub
fldl
dec
arpl
lock
xor
rol
cmp
ljmp
imul
cmpsb
sub
inc
cwtl
lahf
aas
push
xchg
repz
mov
and
aas
in
add
stc
hlt
imul
mov
mov
cmp
or
cltd
cmp
dec
or
ds
rcrb
mov
in
cmp
jg
push
jno
xor
rclb
sbb
xchg
inc
out
loopne
push
add
xchg
xor
sbb
jmp
icebp
cltd
xor
add
mov
mov
dec
adc
insb
pop
cmp
mov
negl
mov
push
std
loop
jo
xchg
imul
jb
mov
lret
mov
and
bound
flds
into
sub
inc
xor
lds
popf
mov
jmp
inc
fistpl
arpl
pushf
jge,pt
add
cmpsb
lea
mov
cmp
dec
add
xchg
push
lock
pushf
inc
inc
stc
jae
and
fwait
jae
test
or
fisubl
ret
pop
add
push
popa
jmp
ss
pop
xor
jnp
inc
or
cmp
xor
push
insl
in
scas
jae
xchg
sub
xor
inc
adc
out
mov
and
iret
popf
orl
xchg
cmp
jb
pop
imul
xor
jl
dec
sub
adc
sub
push
pushf
or
mov
lret
out
je
dec
push
inc
rcll
xchg
data16
test
mov
rorl
inc
or
filds
xor
and
enter
dec
xchg
outsl
nop
cmp
ret
pop
icebp
pop
add
jecxz
int3
xchg
mov
sbb
int
std
cld
pusha
jo
add
mov
mov
and
lret
aas
adc
pop
sub
jb
mov
push
xor
sbb
dec
dec
pop
cli
lock
push
fdivrs
xor
orl
icebp
in
lds
mov
mov
cwtl
cmp
dec
or
mov
mov
pushl
fsub
insl
divb
mov
call
clc
pusha
pusha
sub
xchg
fdivrl
mov
pop
or
filds
mov
stos
movsl
sub
pop
cmp
cmp
mov
sub
test
sub
push
push
sti
push
or
push
xchg
data16
jb
hlt
sub
or
test
scas
sub
inc
xor
dec
mov
xchg
shl
outsl
adc
pop
jnp
rclb
mov
add
jl
add
sbb
and
pop
lahf
xchg
cmp
push
mov
imul
repnz
jg
arpl
sahf
push
jbe
lret
aas
xchg
in
test
rclb
add
imul
push
sahf
inc
test
mov
push
ror
push
into
xchg
or
faddl
stos
and
cmpsl
int
push
shrb
dec
or
sbb
jo
push
std
pop
hlt
push
lahf
cmp
test
xchg
add
cmp
cmp
mov
sbb
dec
jecxz
jle
xchg
rcrl
and
icebp
sarb
sbb
mov
adc
inc
or
xchg
pusha
jmp
das
aas
mov
sub
lret
daa
nop
sbb
lods
iret
mov
rorl
neg
andl
scas
ret
mov
loop
or
rorl
aad
xchg
inc
inc
push
cmp
sub
dec
push
push
aaa
jle
imul
adc
push
pop
stc
sahf
stos
dec
or
and
xor
jne
and
ja
and
jno
and
cmpsb
mov
pop
push
mov
jne
mov
cs
sub
scas
ss
jno
xor
pop
jmp
jbe
pop
mov
stc
stos
cwtl
inc
stc
jmp
loop
out
xor
mov
xchg
mov
das
outsl
loopne
repz
lea
xor
scas
sub
pop
xchg
inc
add
adcl
clc
jl
fs
adc
in
mov
insl
cli
dec
or
jno
popa
push
pop
mov
testl
jp
push
ds
cmp
lret
cmp
dec
sbb
outsb
jmp
loop
aas
stc
call
cwtl
cmp
cmp
lahf
lret
ljmp
jmp
push
clc
fs
jns
mov
in
pop
add
jmp
lock
sbb
pop
inc
mov
or
jae
push
movsb
cmp
cmpsl
and
inc
xor
pop
add
xchg
xchg
addr16
mov
mov
xor
mov
lods
ljmp
int3
inc
or
stos
push
add
test
testl
mov
pusha
mov
inc
icebp
jp
cli
in
pop
adc
test
push
sbb
inc
roll
aam
jno
push
or
iret
jb
xor
cmp
cmp
imul
jl
lock
or
shl
jg
and
xchg
push
les
popf
cmc
jne
sti
or
adc
fnsave
jo
or
leave
xchg
fnstenv
add
inc
sub
jecxz
push
lea
mov
dec
fildl
xchg
out
pop
repz
sbb
enter
std
adc
pop
pushf
out
mov
shll
cmp
xchg
repz
and
xor
aad
imul
out
jnp
push
notb
xor
mov
xchg
cmp
lcall
xchg
inc
fwait
inc
xor
lahf
dec
xchg
inc
sub
loope
lods
cmp
lcall
roll
call
shlb
and
jo
cmp
stos
in
lds
mov
insb
out
adc
dec
push
cwtl
pop
stc
aad
clc
pop
std
or
js
lcall
cmc
in
addr16
js
loopne
and
ret
rcll
jmp
scas
daa
es
jno
pop
cmp
add
mov
mov
mov
movsb
lea
mov
fisttpll
inc
cmp
sub
jns
or
clc
cmp
push
add
push
lret
or
adc
rclb
lock
pop
mov
mov
lods
sub
loope
push
jmp
sti
add
cli
das
stos
rorb
mov
adc
dec
or
mov
cmp
loope
xor
std
test
ljmp
enter
jo
sbb
mov
loopne
cld
mov
push
cmp
sub
fcoms
fdivrl
dec
pop
outsl
into
gs
insb
jno
repz
les
xchg
enter
cwtl
cld
push
cmpsl
sub
popf
fildl
xchg
insl
cmpsl
sub
aaa
inc
jo
shlb
loop
add
mov
jb
movsl
cs
pushf
mov
mov
popf
inc
and
ss
jbe
add
insl
xchg
cmp
jg
push
imul
adc
shlb
pop
ret
jno
xor
sbb
fnstenv
jns
bound
js
loopne
or
popf
cmp
es
jns,pn
xor
and
mov
in
mov
hlt
mov
mov
jmp
loopne
dec
or
stc
mov
cmc
and
mov
mov
sbb
adc
mov
lahf
or
insl
xchg
test
fstl
mov
pushf
shrl
cmp
inc
xchg
sub
lret
bound
ja
les
xchg
xchg
adc
mov
cmpsl
cltd
aaa
imul
xor
lcall
shll
xor
cmpb
outsb
fldl
jno
shlb
bound
cmp
mov
stos
mov
aad
imul
and
mov
int
insl
lock
cmp
add
dec
str
mov
xchg
jl
shll
stos
in
mov
or
jecxz
inc
fwait
ljmp
ljmp
movsb
lds
push
cmpsl
out
cltd
sarb
rorb
inc
mov
loopne
shl
adc
out
ljmp
pop
dec
pop
cld
or
addr16
cmpsb
inc
pmaxsw
add
xor
sub
loopne
shlb
mov
sub
aad
cmp
in
ret
or
or
daa
jl
or
dec
stos
xor
shr
sbb
mov
mov
xchg
pop
xchg
aaa
pop
enter
mov
imul
into
jnp
gs
jno
sbb
push
sub
ret
lea
fs
jne
in
jbe
mov
mov
push
jnp
sbb
lock
jge
pop
push
shrl
inc
pop
push
push
mov
movsb
push
add
rclb
mov
push
out
aad
push
jne
push
test
clc
push
cmpb
and
mov
ficomps
aas
enter
outsl
push
add
lock
jne
out
xor
dec
sbb
or
insb
fsts
ror
cwtl
sbb
xor
lods
xchg
in
xor
lahf
jp
vmptrld
enter
or
cld
mov
sub
ss
push
inc
fidivrl
lea
cmpsb
mov
mov
xchg
sub
les
mov
push
and
push
mov
clc
testl
inc
push
in
mov
and
pop
int3
mov
xchg
sbbl
ret
xchg
inc
jmp
add
enter
xor
into
jne
leave
pop
incb
jb
repz
cli
dec
and
fdivp
jg
into
out
imul
aas
test
arpl
scas
sub
lahf
pusha
hlt
stos
cmp
js
int
inc
adc
imul
adc
push
mov
iret
cmp
and
dec
pop
sub
xlat
test
xchg
ficoml
iret
cmc
mov
cmp
outsb
insb
loop
stos
adc
cmp
js
mulb
mov
fdivrs
sub
std
xlat
xor
or
add
popf
pop
pop
add
dec
adc
xchg
push
sti
ljmp
clc
jmp
repnz
add
pusha
lods
fistpll
jle
dec
mov
call
movsb
sub
arpl
sub
cmp
int3
xchg
addb
jo
aam
dec
scas
and
leave
mov
inc
or
mov
pop
add
fisubrl
dec
arpl
xor
mov
push
mov
and
lret
jmp
pop
add
gs
aaa
fldl
add
or
cmp
test
cs
test
dec
adc
mov
filds
jp
je
mov
scas
faddl
mov
stos
inc
or
mov
je
push
imul
jmp
mov
pop
or
cmpsb
sub
cmpsb
rorl
adc
mov
lock
stos
fadds
sub
ret
and
mov
pushf
inc
loopne
cmp
fnstcw
cwtl
inc
test
jbe
fmuls
or
push
pop
push
out
cmp
xor
sahf
fsubrs
aaa
mov
lea
mov
insl
mov
fdivp
mov
xchg
xor
enter
jmp
xor
mov
outsb
add
pop
mov
shrl
add
stos
inc
adc
mov
scas
xor
test
add
pop
push
faddl
or
and
cli
addb
sbb
mov
add
lahf
and
adc
pop
hlt
icebp
ja
xor
lret
cld
gs
mov
cmc
mov
ret
adc
nop
adc
adc
cwtl
add
leave
xor
outsb
add
xchg
add
xchg
cli
mov
sub
leave
pusha
in
stos
inc
jg
call
pop
rcrb
popf
mov
out
and
inc
add
ja
inc
fldcw
cltd
and
sub
jle
aad
pop
cmc
outsb
negb
ret
push
jnp
lcall
ss
lea
mov
insl
mov
mov
xchg
xor
xor
test
sbb
outsb
add
push
mov
pop
loope
inc
adc
and
into
test
add
pop
push
fildl
or
in
cmpsl
sub
add
mov
and
add
sahf
and
mov
lcall
leave
mov
xor
mov
dec
jmp
or
outsb
cmp
adc
adc
leave
inc
mov
stos
loope
push
out
add
leave
xor
push
out
or
add
nop
stc
mov
sub
stos
inc
jle
call
pop
rcrl
popf
mov
out
and
and
faddl
fwait
jbe
inc
fldcw
cwtl
and
sub
xlat
sbb
pop
cmc
insl
cmc
pushf
xor
jl
rorl
jp
lcall
xor
testb
inc
adc
jae
hlt
mov
xchg
xor
das
adc
sbb
outsb
add
add
es
add
stos
inc
adc
and
test
incl
pop
push
flds
or
cmpsb
sub
mov
clc
jge
xlat
scas
sbb
mov
add
popf
and
mov
lcall
mov
xor
mov
push
call
or
outsl
cmp
adc
mov
xor
inc
scas
adc
loopne
push
out
add
lret
outsb
add
test
lea
movsl
outsl
push
xlat
pop
stos
inc
mov
lea
mov
pusha
loop
stos
inc
jge
call
pusha
rclb
popf
xchg
out
and
add
fldcw
and
jle
inc
fcomps
mov
pop
imulb
xor
inc
mov
xor
lcall
in
testb
inc
adc
jno
cmc
mov
adc
push
xorl
add
add
mov
mov
fisubrs
and
int3
test
jge
pop
enter
add
or
jge
sub
mov
idivl
xlat
lods
sbb
mov
push
fcomps
mov
fwait
xor
mov
xor
mov
push
out
testb
mov
testl
fisubs
call
xor
push
call
cmp
lods
inc
testb
loope
stos
inc
jnp
jmp
pusha
into
push
pop
sahf
xchg
out
and
add
fisubrl
xchg
and
jge
inc
fcomps
lahf
jg
sarl
pop
imulb
popf
xor
mov
mov
fistps
jo
xor
mov
xchg
outsb
mov
fprem1
mov
xchg
xor
ret
sub
stos
pop
in
call
mov
outsl
push
push
mov
add
and
lret
cld
and
mov
enter
add
jge
sub
mov
cmc
jp
fsubrs
int3
pop
idiv
push
jle
push
mov
pushf
xor
les
xor
mov
push
in
testl
out
pop
testl
fsubl
jmp
cs
pop
out
push
call
cmp
lods
inc
mov
lea
scas
lret
loopne
stos
inc
jns
ljmp
push
or
pop
cmpsl
es
jno
inc
fldt
xchg
and
jl
inc
fcoms
sahf
adcb
aaa
pop
imulb
sahf
xor
mov
fstpl
jno
xor
sbb
ds
lods
outsl
xlat
cmc
mov
xchg
xor
ret
stos
pop
jecxz
jmp
scas
xor
dec
out
mov
add
fsubrl
cmpsl
das
lret
enter
sub
mov
enter
push
popf
push
outsl
out
mov
ret
repz
fldcw
lret
pusha
idiv
inc
fcoms
mov
popf
xor
or
cmp
mov
xor
mov
push
loop
clc
fwait
add
jo
mov
testl
fisubl
ljmp
jno
in
push
call
cmp
scas
inc
mov
lea
lods
int3
arpl
inc
stos
inc
ja
jmp
xor
or
sbb
ds
fsubrl
xchg
and
jnp
inc
fcoms
pop
mulb
lahf
and
mov
xor
cs
nop
sbb
xlat
outsb
mov
pop
scas
outsb
aad
mov
nop
xor
stos
pop
loop
ljmp
jno
data16
out
xchg
add
or
mov
movsl
sub
stos
inc
clc
sub
mov
leave
pusha
dec
roll
sahf
add
out
lahf
and
add
fisubrl
leave
popa
clc
cli
fs
fsts
mov
mul
outsb
sahf
xor
cmp
mov
xor
adc
jb
scas
mov
nop
cltd
add
jno
mov
clc
popl
cmpsl
push
lods
fcomps
jmp
stc
xor
sub
push
jmp
ss
jo
iret
push
scas
inc
mov
mov
fldl
inc
jne
jmp
xor
or
sbb
daa
mov
outsb
testb
nop
and
rorl
jns
inc
fsts
fwait
sbbl
gs
lahf
and
mov
xor
mov
nop
sbb
pop
scas
insb
aam
lea
mov
stos
pop
loopne
ljmp
jno
fs
push
out
test
push
push
fsubrs
and
sub
bound
stos
inc
idivl
xorb
pop
sahf
add
sahf
and
popf
lock
fisubl
popa
clc
clc
arpl
xchg
sbb
clc
out
sahf
xor
cmp
sahf
xor
inc
lods
mov
nop
xchg
add
jb
mov
stc
nop
test
ss
cmpsb
pop
scas
xlat
pop
push
jmp
clc
xor
or
dec
push
ljmp
jno
into
push
scas
inc
xchg
and
lods
inc
je
jmp
cs
lret
enter
sub
sbbb
daa
mov
insl
hlt
inc
fsubl
inc
arpl
ja
inc
ficoml
cltd
sbbl
fs
lahf
ss
xchg
mov
fstps
jb
sub
push
pop
out
nop
sbb
pop
scas
push
testl
push
ficoms
vmwrite
lret
jno
lret
push
call
mov
jo
dec
lods
inc
or
and
pop
les
scas
pop
lret
bound
pop
sahf
add
sbbb
pop
sahf
out
jae
fisubl
popa
clc
mulb
fistl
mov
stc
in
sahf
xor
cmp
lahf
mov
lods
mov
nop
xchg
mov
scas
call
or
int
movsl
pop
scas
pop
push
jmp
divl
or
dec
push
ljmp
jno
int
scas
inc
xchg
and
lods
inc
jae
jmp
sub
dec
or
sbb
pop
sahf
insb
repz
fsubl
and
cli
jbe
inc
ficoml
cwtl
sbbl
arpl
lahf
ss
ds
xor
xchg
sub
nop
pop
jg
jo
cmp
scas
imul
xor
lods
push
fstl
push
js
lret
jno
popa
lret
sti
orb
dec
aad
inc
pop
jo
and
pop
ret
lods
inc
cmc
jnp
subb
pop
sahf
ljmp
sbbb
pop
sahf
in
jb
les
cmc
pusha
inc
fistl
mov
stc
jecxz
lahf
ss
add
sbb
mov
lahf
mov
fdivl
stos
mov
xchg
xchg
std
mov
scas
out
stc
nop
orb
into
cmp
push
in
mov
xor
or
inc
push
ljmp
jno
lret
push
mov
test
es
cmpsl
into
fnstcw
lods
inc
jno
in
subl
lds
mov
sbb
pop
sahf
push
inc
frstor
mov
sti
jne
inc
fimull
xchg
sbbb
xor
popa
ljmp
mov
mov
xor
xchg
fdivl
sub
xchg
push
jge
jo
aaa
sbb
add
adc
jmp
jbe
lret
jb
pusha
enter
adcl
inc
push
outsb
mov
pop
shrl
adc
bound
or
cltd
pop
daa
mov
jmp
inc
fsubl
ret
arpl
hlt
pop
inc
fisttpl
mov
stc
loope
mov
sbb
mov
xchg
fnsave
mov
xchg
xchg
sti
mov
mov
dec
stc
nop
addb
iret
cmp
push
in
mov
xor
or
inc
push
ljmp
jno
lret
inc
test
es
lods
inc
jo
in
subl
lret
les
jge
jmp
mov
imul
and
sti
je
inc
fimull
xchg
sbbb
das
popa
clc
pusha
jmp
jg
mov
mov
xor
nop
fdivl
sub
xchg
adc
sbb
add
adc
jmp
jne
lret
jb
pop
push
call
mov
jo
dec
shrl
and
pop
shrb
adc
bound
or
cwtl
push
daa
mov
ljmp
mov
repz
inc
fisttpl
scas
stc
loopne
mov
sbb
mov
lahf
xchg
mov
xchg
xchg
cli
mov
mov
dec
stc
nop
jg
cmp
aaa
mov
push
in
mov
xor
or
inc
push
ljmp
jno
leave
push
mov
sub
es
into
xlat
cmp
in
subl
lret
dec
or
push
sahf
sub
push
mov
sti
jae
inc
fimull
cs
clc
pop
call
jg
mov
mov
xor
fdivl
daa
mov
xchg
adc
fnstenv
xor
testl
push
ficoml
je
lret
jb
pop
push
call
mov
jo
dec
shrb
and
push
mov
ljmp
lret
or
xchg
sbb
pop
sahf
jmp
or
mov
repnz
inc
fisttpl
scas
stc
fbld
aaa
cwtl
add
push
jmp
lahf
test
push
fcomps
xchg
xchg
stc
mov
mov
dec
stc
nop
jle
cmp
ss
pop
scas
rclb
in
mov
xor
or
inc
push
ljmp
jno
enter
sub
sbb
inc
outsb
imul
subl
lret
dec
or
adc
ss
sahf
addr16
inc
frstor
mov
sti
jb
inc
fimull
sbbb
sub
mov
push
mov
mov
xor
mov
jae
es
xchg
adc
jo
xor
scas
gs
mov
xchg
int
and
lods
push
fcoms
jae
lret
movsb
sub
pop
lds
idivb
daa
scas
pop
jno
dec
shrb
es
and
arpl
lods
inc
lock
subl
fs
mov
lahf
call
or
mov
lock
inc
fmull
arpl
fisubs
xchg
incl
push
ljmp
je
movsl
mov
xchg
nop
clc
mov
mov
dec
stc
nop
jge
cmp
xor
push
push
in
xchg
xor
or
inc
push
ljmp
jno
dec
mov
sub
into
gs
lods
inc
insl
imul
subl
lret
dec
or
adc
sub
data16
inc
fstpl
mov
sti
jno
inc
fimull
xchg
sbbb
sub
clc
pop
out
aaa
sbb
push
mov
mov
xor
fdivl
and
cli
xchg
adc
jo
xor
scas
fs
testl
push
xlat
push
jmp
jb
lret
mov
les
cmc
jl
daa
scas
push
jno
dec
iret
scas
inc
add
es
and
arpl
inc
out
jne
andl
arpl
adcl
insb
inc
fcompl
mov
inc
fmull
lods
arpl
frstor
aaa
xchg
incb
push
jmp
or
je
movsb
mov
xchg
neg
jb
mov
mov
dec
stc
nop
jl
cmp
xor
pop
scas
into
push
push
in
xchg
xor
or
inc
push
ljmp
jno
dec
mov
and
sbb
lods
inc
insb
cmc
in
andl
lret
rorb
jns
jmp
mov
gs
inc
fstpl
xchg
sti
jo
inc
fimull
xchg
sbbb
sub
pop
in
aaa
pop
jle
push
mov
mov
xor
mov
jae
and
push
push
xchg
adc
jo
xor
scas
arpl
testl
dec
push
jmp
jno
lret
mov
ret
push
jmp
lods
adc
scas
inc
add
es
and
arpl
lods
inc
out
je
andl
ljmp
mov
lahf
out
inc
fcompl
arpl
out
pop
inc
fmull
stos
arpl
fsubl
aaa
xchg
std
sbbl
call
or
je
mov
sti
xchg
mov
mov
mov
dec
stc
nop
jnp
cmp
xor
in
test
xor
or
inc
push
ljmp
jno
lds
inc
jg
sbb
lods
inc
imul
andl
lret
bound
loopne
adcb
sub
fs
inc
fstpl
ds
outsl
fadds
or
popa
clc
pop
in
aaa
push
jge
push
scas
aaa
mov
xor
mov
jae
and
xchg
adc
jo
xor
scas
lret
cld
xorl
mov
push
lods
dec
aad
jmp
jo
lret
mov
ret
repz
daa
lods
adc
or
scas
inc
jmp
es
and
fs
mov
jmp
movsl
or
or
xchg
sbb
mov
in
inc
fstpl
mov
inc
fmull
test
mov
sbb
dec
lahf
orb
jne
mov
cld
xchg
hlt
scas
sbb
jns
cmp
xor
push
out
test
xor
or
ds
ljmp
jno
ret
dec
mov
jle
es
mov
lods
inc
imul
lret
bound
fsubrp
adcb
sub
lret
sahf
jmp
ficomps
and
cld
outsb
inc
fiaddl
nop
sbbl
sub
pop
jecxz
cmp
ss
xor
mov
je
and
xchg
pcmpeqw
jo
xor
mov
enter
xorb
mov
push
lods
dec
aam
in
add
es
pop
rclb
jns
sub
int3
scas
inc
gs
es
pop
into
gs
mov
in
andl
mov
nop
pop
sub
dec
mov
lahf
loop
inc
ficomps
mov
inc
faddl
cmpsl
arpl
fsubs
cmp
mov
push
out
lahf
ss
fbstp
lahf
mov
xchg
mov
scas
sbb
ja
cmp
xor
pop
out
sub
int3
sbb
push
ljmp
jno
rorl
jge
es
shlb
xor
out
je
stos
scas
mov
scas
pop
pop
xlat
mov
imul
bnd
jbe
insb
inc
ds
push
cmc
pop
test
mov
cs
sbb
mov
mov
push
push
ljmp
outsl
xorb
mov
push
sbb
sbb
mov
jno
xchg
or
movl
aam
mov
std
aam
pop
fdivl
sbb
incb
mov
xchg
ret
xchg
jg
or
jb
or
movsl
fildll
cmp
test
into
sbb
or
sti
mov
cmpsb
std
jns
push
xchg
xor
push
fistl
imulb
out
push
imulb
xorb
loop
and
fwait
pop
test
test
mov
sub
sbb
pop
sub
fdivs
mov
xor
push
add
and
mov
sbb
adc
mov
dec
mov
out
pop
pop
mov
jmp
addr16
adc
mov
movsb
and
das
mov
pusha
jmp
outsb
push
leave
jl
mov
mov
push
icebp
lahf
iret
lcall
ret
imul
cmpsb
mov
fwait
sti
add
xchg
stc
xor
jb
arpl
fcomps
push
cld
mov
cld
dec
xchg
lods
jle
adc
aam
shll
call
push
adc
mov
pop
adc
jmpw
and
pop
xrelease
cmp
xor
or
stc
repz
pop
daa
mov
xchg
dec
mov
iret
dec
stc
inc
push
mov
icebp
clc
loope
cmpsl
or
imul
movsl
mov
into
lds
pop
cmp
movsl
pushf
dec
and
sahf
cld
jl
test
ds
pushf
test
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
xor
inc
xchg
jae
test
dec
xor
or
push
pop
mov
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jmp
test
inc
mov
adc
mov
mov
enter
jbe
sbb
cwtl
pusha
mov
jp
lea
xor
shl
mov
sbb
stos
mov
sbb
push
mov
pop
loope
pop
push
nop
sub
cmp
mov
mov
cld
ret
fwait
xor
sub
scas
push
xchg
cmpb
fsubrl
icebp
dec
add
pushl
xlat
hlt
in
xor
push
or
cmp
aam
inc
xchg
sbb
scas
xor
mov
clc
dec
addr16
popa
ret
jle
sarl
shlb
jno
enter
in
inc
in
loope
sbb
xchg
mov
jecxz
leave
loopne
xor
mov
inc
psrld
push
dec
in
js
cwtd
pop
fidivrs
dec
sbb
pop
sub
pop
jbe
push
dec
add
pop
add
daa
push
lret
dec
mov
test
push
xchg
mov
andl
xor
fldenv
ret
mov
stos
bound
ficoml
into
mov
fdivr
aas
dec
xchg
fmull
xchg
mov
lcall
pushf
xor
pop
add
push
shll
pop
cwtl
mov
add
aas
lods
loopne
cmpsl
mov
stos
sub
and
ds
hlt
faddl
jae
mov
sti
jne
mov
int3
xchg
cltd
push
mov
mov
subl
push
xor
push
pop
push
scas
pop
dec
movsb
cli
flds
or
fidivrs
test
xor
add
hlt
lods
cmpsl
mov
mov
imul
jle
mov
adc
lahf
adc
repz
ja
lcall
lds
inc
xchg
inc
adc
xchg
cmp
aas
sub
dec
xor
mov
cmc
mov
out
lods
and
mov
push
or
stc
and
mov
mov
sub
gs
pop
sub
