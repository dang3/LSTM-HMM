fimuls
mov
inc
fs
das
test
outsb
xor
add
sub
mov
mov
pusha
call
add
dec
sahf
inc
jnp
outsb
scas
lea
mov
sub
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
pop
push
sbb
pop
ret
rol
cmp
adc
jns
mov
cmc
xchg
pop
orb
in
dec
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
xor
mov
dec
jl
push
insl
dec
and
xchg
mov
dec
jecxz
xchg
stos
sbb
shl
pop
pop
aam
inc
bound
in
sub
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
sbb
pop
in
xor
cmp
int
mull
mov
or
and
pop
jecxz
mov
sbb
push
mov
jmp
cmp
jmp
fidivs
mulb
lahf
sbb
sub
push
or
xor
adc
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
xchg
and
sub
in
dec
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
lea
mov
mov
add
push
pop
xor
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
add
cmp
jne
mov
pop
ret
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
dec
xchg
push
outsb
fwait
adc
mov
or
stos
xchg
enter
mov
adc
and
fcompl
movsl
lock
fcomps
jmp
sti
mov
jmp
mov
or
nop
lock
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
adc
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
je
mov
test
shll
dec
cmp
lret
loopne
inc
jmp
ret
push
pop
clc
sbb
sub
lods
mov
shl
pushl
pop
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
test
add
movsb
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
add
and
add
and
add
and
add
and
add
and
add
add
add
add
andb
add
and
add
add
push
and
add
add
jbe
add
push
and
add
add
and
add
and
add
and
add
and
add
add
add
and
add
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
add
add
lock
add
add
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
add
and
add
and
add
and
add
and
add
and
add
add
add
add
andb
add
and
add
add
push
and
add
add
jbe
add
push
and
add
add
and
add
and
add
and
add
and
add
add
add
and
add
add
add
add
fwait
add
je
jbe
outsb
je
add
add
fs
je
insl
inc
add
add
je
imul
bound
gs
add
dec
add
insb
outsb
push
add
roll
dec
gs
jo
imul
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
fs
outsl
outsb
jae
insb
gs
add
add
fs
imul
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
outsl
jo
inc
imul
insb
outsl
jae
dec
popa
outsb
fs
gs
add
popa
jo
gs
jb
jns
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
imul
je
imul
push
add
add
inc
gs
outsl
imul
jbe
jae
add
add
je
jb
jbe
push
jns
gs
add
gs
roll
inc
gs
gs
inc
je
insl
add
icebp
add
imul
jb
je
arpl
add
inc
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
push
dec
inc
dec
xor
cs
insb
add
push
add
outsb
fs
push
or
push
gs
jb
inc
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
arpl
inc
jae
jb
outsl
jb
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
add
addr16
outsl
js
add
add
outsb
fs
push
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
inc
push
push
push
dec
push
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
jb
popa
je
inc
js
arpl
imul
outsw
jb
add
inc
insb
insb
push
imul
jb
gs
dec
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
push
add
test
add
cmp
add
add
add
add
add
xchg
add
add
add
add
add
add
inc
inc
add
lods
fadds
xor
add
add
int3
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jp
jl
lods
lods
lods
add
test
push
mov
mov
mov
les
into
into
int3
rcl
in
rcl
shl
iret
rcl
hlt
int
int
mov
out
vshufps
mov
mov
stos
lods
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
mov
lret
not
rcl
cld
xlat
fdivr
fcomp
fdivr
aam
dec
iret
sar
int
into
aam
dec
rcl
inc
ret
std
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
rcl
aad
fcomp
call
xlat
call
aad
dec
into
into
dec
into
into
call
aad
dec
into
int3
mov
mov
mov
std
cmpsl
cmpsl
cmpsl
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
into
int
rcl
sar
fdivr
xlat
call
aad
int3
int3
int3
dec
lret
int
int3
inc
rol
mov
mov
ljmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
popa
or
imul
pop
pop
pop
fs
aas
inc
sbb
sbb
or
push
sbb
ss
cmp
adc
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
dec
leave
leave
call
rcl
call
aam
call
aad
call
rcl
dec
leave
inc
mov
mov
mov
ljmp
mov
pushf
xchg
xchg
cwtl
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jle
jge
jge
jle
jo
jb
popa
popa
bound
cmp
cmp
pop
pop
pop
stos
outsb
outsl
jo
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsb
movsb
movsl
add
mov
mov
mov
mov
mov
mov
mov
inc
enter
leave
lret
leave
leave
dec
leave
leave
inc
ret
mov
mov
ljmp
mov
fwait
call
xchg
xchg
xchg
xchg
cwtl
lcall
lahf
ds
push
push
femms
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jl
nop
fcoms
addb
jnp
jp
outsb
outsb
outsl
out
addr16
data16
ret
jge
jns
jp
gs
inc
inc
cmp
pop
sbb
adc
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
xchg
incl
test
xchg
xchg
xchg
mov
mov
cwtl
mov
js
jp
cs
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
xchg
std
mov
jle
jo
jb
jae
jae
jg
jg
addb
xchg
data16
cmp
ss
cmp
movsl
movsl
movsb
shrb
lods
lods
sti
lods
lods
lods
lods
lods
lods
stos
test
std
movsb
movsl
mov
xchg
xchg
xchg
decl
jge
js
jp
jp
jp
mov
xchg
movsb
mov
scas
sti
mov
mov
mov
mov
mov
lods
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
lea
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
enter
int
mov
push
pop
pop
push
femms
rdmsr
inc
inc
inc
dec
imul
xchg
leave
lcall
out
cltd
fwait
lcall
mov
mov
mov
lea
cltd
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
movsb
movsl
addr16
jnp
scas
cmpsl
stos
add
pop
adc
cmpsl
scas
call
lcall
incl
mov
xchg
xchg
xchg
sahf
popf
sahf
std
movsl
mov
mov
in
in
xchg
push
jne
femms
dec
add
or
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
xchg
std
nop
nop
decb
xchg
lcall
cmpsb
cmpsb
ljmp
lods
pushl
mov
test
mov
xchg
scas
mov
mov
ljmp
mov
add
pop
adc
mov
jmp
sahf
xchg
fwait
decl
mov
call
nop
nop
xchg
xchg
xchg
pushf
pushf
sahf
movsb
movsl
mov
movsb
movsl
movsl
negl
jnp
movsl
push
push
push
outsl
dec
dec
dec
popaw
bound
jo
jae
jl
jle
test
mov
mov
xchg
testl
mov
jmp
mov
mov
pop
mov
xor
ja
mov
cmpsb
mov
mov
mov
lods
lods
lods
mov
movsl
movsl
add
mov
add
pusha
adc
mov
lcall
mov
xchg
xchg
xchg
call
xchg
xchg
call
lcall
sahf
sahf
sahf
mov
movsb
movsl
stc
cwtl
cltd
lcall
xchg
xchg
les
fwait
in
xchg
xchg
out
lea
stc
xchg
xchg
std
xchg
je
cltd
push
test
movsb
push
jle
lods
inc
jge
mov
jp
mov
je
mov
outsl
ljmp
packuswb
lods
or
or
mov
jge
mov
mov
lods
pushf
mov
mov
add
shlb
xchg
xchg
jge
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
popf
jmp
sahf
popf
call
xchg
xchg
call
cwtl
nop
call
xchg
cltd
cld
cltd
cltd
popf
stc
mov
xchg
pushf
cld
popf
mov
xchg
insb
xchg
xchg
pop
jg
xchg
dec
jp
fwait
jne,pt
fwait
sub
pop
addr16
sahf
sbb
movsl
adc
jmp
adc
adc
lods
adc
scas
adc
mov
imul
mov
insl
mov
fwait
scas
mov
scas
scas
scas
mov
movsb
mov
add
pop
pop
adc
mov
ljmp
popf
call
popf
sahf
jmp
movsb
mov
jmp
xchg
xchg
decl
mov
decl
js
cltd
jo
fwait
fs
xchg
dec
jns
xchg
jno,pt
xchg
cs
decl
adc
nop
or
xchg
add
push
lcall
pop
pop
ljmp
sbb
pushl
push
outsl
pushl
push
jb
mov
and
shlb
mov
xchg
scas
mov
lods
scas
mov
sahf
sahf
mov
add
pop
pop
adc
scas
mov
shlb
lcall
mov
cmpsl
jmp
test
test
pushf
fwait
popf
call
pop
ja
mov
decl
decl
adc
incl
push
push
incl
add
mov
push
call
add
cltd
add
mov
or
pushl
es
mov
sub
shrb
inc
sub
jge
leave
xor
dec
inc
mov
leave
lea
cld
scas
mov
lret
mov
add
add
add
add
lods
mov
push
adc
test
mov
lahf
lcall
test
lods
lods
ljmp
mov
scas
scas
scas
jmp
jb
decl
push
push
incl
or
add
incl
push
incl
push
decl
add
xchg
add
fwait
add
lahf
add
add
ljmp
sub
inc
cmp
dec
cmp
into
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
mov
test
ljmp
mov
pushl
mov
pushl
stos
lods
lcall
and
decl
adc
mov
push
incl
pop
push
incl
add
mov
push
call
add
pushf
add
add
cmpsl
add
lods
add
mov
jo
les
test
lret
inc
mov
into
inc
call
inc
mov
rolb
call
dec
xchg
fmuls
fimull
fisttpl
fsts
call
test
std
mov
mov
movsl
mov
mov
add
inc
inc
adc
jp
mov
test
lcall
stos
test
pushl
mov
pushl
mov
mov
movsl
xchg
decl
popa
call
adc
pop
decl
push
call
add
sahf
add
mov
add
test
push
gs
and
dec
dec
call
push
cwtl
call
push
lcall
push
popf
jmp
pop
sahf
ficomps
jmp
pop
mov
jmp
pop
lahf
call
xchg
mov
test
jne
sahf
mov
add
inc
inc
adc
jns
lahf
fwait
sahf
jmp
mov
lods
stos
pushl
mov
mov
mov
mov
ljmp
inc
jbe
nop
and
and
call
call
or
call
add
lcall
jmp
add
mov
data16
mov
xor
fldenv
jmp
mov
jmp
data16
in
cmpsb
call
push
ljmp
faddl
mov
cmpsb
test
mov
sahf
sahf
add
inc
aas
adc
je
fwait
xchg
cwtl
call
sahf
pushf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
cltd
das
outsl
lcall
daa
push
call
add
cltd
add
mov
add
lods
add
mov
pushl
adc
rolb
jmp
jo
jmp
outsl
lods
jmp
jo
ljmp
in
jae
out
jbe
in
jne
in
jae
jmp
xchg
mov
cmpsb
cmpsl
lcall
sahf
add
add
aas
adc
outsb
js
lea
pushf
fwait
lcall
mov
mov
mov
mov
mov
cmpsl
lods
lcall
xor
lahf
cmp
lahf
cmp
mov
sbb
pop
call
add
add
test
add
mov
gs
mov
sbb
fsts
jmp
js
jmp
jg
jmp
mov
out
cmpl
push
test
push
cmpb
mov
mov
cmpsl
pushf
sahf
sahf
daa
sahf
mov
mov
add
pusha
add
xor
push
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
mov
lcall
cmp
movsb
inc
jl
movsb
inc
jle
mov
sbb
add
popf
add
movsb
add
test
pop
ljmp
add
mov
add
shll
cmp
mov
in
mov
push
mov
push
pop
push
xchg
sar
nop
push
nop
ret
stc
xchg
mov
in
nop
mov
inc
stos
stos
mov
popf
pushf
xor
pushf
add
add
add
inc
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
ret
inc
mov
xchg
lcall
dec
cmp
movsb
xor
pop
lcall
add
cmpsb
add
lods
add
mov
arpl
mov
add
movl
jmp
jns
out
xchg
push
cltd
push
cltd
cltd
push
lcall
stc
sahf
int3
cld
sahf
int3
sti
popf
into
cld
cltd
leave
push
xchg
sar
mov
inc
enter
mov
mov
nop
add
add
add
add
cmp
outsb
push
dec
dec
jecxz
pusha
popa
call
mov
mov
mov
sar
ret
ret
enter
mov
mov
ljmp
dec
xchg
movsl
sub
cltd
pop
pop
lcall
add
add
mov
arpl
mov
add
enter
rorl
filds
out
mov
push
cmpsb
into
push
movsb
int
mull
sar
cld
cmpsl
into
sti
test
std
test
iret
cld
test
jmp
mov
dec
leave
int
mov
mov
lahf
sahf
lahf
dec
xchg
xchg
xchg
add
cltd
cltd
add
add
add
xor
or
bound
push
xlat
jae
jo
mov
mov
mov
ret
ret
dec
leave
inc
ret
mov
cmpsl
jmp
mov
scas
dec
test
lahf
sbb
pop
jmp
add
mov
fs
mov
add
int
outsl
fadds
je
ficoms
jnp
out
pop
cmpsb
push
lahf
lret
cli
scas
aam
cli
scas
aad
cli
mov
sti
mov
mov
std
mov
cld
mov
mov
mov
std
mov
push
movsb
mov
call
enter
mov
fisubl
xchg
xchg
or
add
add
xor
sbb
sbb
dec
dec
dec
outsl
outsb
outsb
mov
mov
aad
jmp
fdiv
rcl
sar
lret
dec
lret
lret
leave
lret
lret
leave
leave
mov
scas
jmp
push
mov
lods
cmp
popa
jmp
add
mov
mov
add
rolb
outsb
fadds
je
filds
jne
jmp
jae
cld
scas
aad
cld
mov
std
mov
fdivr
std
mov
fdivr
std
mov
fdivr
inc
fcos
mov
lret
jmp
mov
call
leave
int
mov
lahf
mov
or
add
add
xor
add
add
or
enter
in
call
call
jecxz
fsubp
fcmovnu
fdiv
fcomp
fdivr
xlat
std
int3
iret
into
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
lret
call
add
faddl
jne
in
jbe
out
xor
cli
mov
loopne
inc
loope
inc
loope
std
loopne
std
fdivrp
inc
fdivrp
inc
fdivrp
std
fdivrp
std
leave
dec
loope
sti
mov
leave
call
leave
sar
mov
mov
xchg
adc
add
add
std
add
incl
std
std
add
div
or
out
jmp
in
out
in
sub
in
in
dec
jmp
jmp
out
in
out
fucomp
ret
stc
lods
jno
cmpsb
cmp
movsb
adc
jmp
popa
pushl
add
lds
imul
add
add
loopne
js
ljmp
cld
mov
loop
dec
loop
dec
in
dec
in
dec
in
std
into
loope
dec
loopne
std
shl
shl
call
jecxz
call
in
cli
in
mov
xlat
inc
test
mov
xchg
xchg
add
add
add
incb
incl
idiv
testb
hlt
lock
hlt
icebp
push
out
icebp
out
pop
in
icebp
icebp
cmp
out
in
pop
fsubp
loope
les
xchg
sti
lahf
and
pop
jmp
pop
pushl
add
leave
add
rolb
jno
fildl
je
in
jp
in
movd
cmc
pop
stos
cli
mov
std
iret
in
shl
shl
std
shl
std
shl
std
aam
std
fsub
call
jmp
std
fld1
std
fldl2t
cld
shl
push
aad
in
leave
leave
lret
test
fwait
xchg
xchg
xchg
and
xchg
xchg
add
sti
add
cld
clc
add
sti
cli
add
div
or
shll
sarb
negb
add
add
scas
add
mov
add
lret
add
rolb
jb
faddl
ja
call
sbb
sti
fsubr
std
fucomi
fldl2t
std
fucomi
fucomi
fucomi
fucomi
fsubrp
std
loopne
jmp
in
cld
shl
push
ret
aam
out
rcl
iret
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsb
outsl
outsb
add
add
mov
loopne
add
leave
sbb
lods
jge
repnz
and
mov
add
mov
arpl
mov
add
into
add
add
filds
je
ljmp
cli
nop
aam
jmp
lock
fsubr
fucompp
std
std
fsubr
std
aad
std
shl
cli
shl
sti
shl
clc
int
stc
int3
test
lret
call
fcom
sti
mov
mov
cltd
lcall
fwait
lcall
mov
mov
add
leave
adc
scas
mov
jmp
add
mov
arpl
mov
add
iret
add
add
add
ljmp
sti
xchg
enter
loopne
sti
lret
cld
fdivrp
clc
rcr
idivb
sar
lock
into
out
mov
lret
call
rcl
jmp
shl
jmp
in
mov
mov
xchg
add
add
add
lret
add
rol
mov
cmpsl
loopne
ss
mov
add
mov
data16
mov
add
dec
push
jo
rorb
jne
fistl
jns
loop
cmp
dec
cwtl
ljmp
jmp
scas
std
loop
scas
cli
fdivl
lock
int
rcr
loopne
aad
loope
fadd
out
loopne
jmp
jmp
popf
call
leave
lret
push
stos
stos
lods
adc
cmpsb
cmpsb
cmpsb
add
rolb
ret
mov
stos
aam
dec
jg
sahf
sbb
cmpsb
sbb
jno
mov
js
mov
dec
xchg
ret
push
mov
leave
arpl
hlt
iret
mov
shll
rcl
ror
aam
int
rol
int3
mov
int
mov
fcom
jg
fcmovnu
jb
fnstsw
gs
in
call
out
in
xor
div
mulb
lock
fstp
or
mov
int
mov
add
mov
mov
mov
les
imul
mov
pushf
in
mov
sarb
test
mov
mov
cmpsl
enter
lret
mov
lret
ror
iret
addr16
rclb
rcl
dec
aam
xlat
inc
rcl
aam
aam
fsubs
fistpl
fstl
fucom
loop
loope
in
out
jmp
jmp
out
add
cld
cmc
add
std
sti
add
std
add
std
incb
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
ret
mov
daa
int3
ror
and
aam
sbb
aad
adc
aam
or
xlat
aad
rcr
fadds
loopne
add
in
add
in
ljmp
incb
mov
mov
add
rol
ret
sub
mov
mov
push
ret
or
mov
add
into
lret
add
aad
add
xlat
add
aad
aad
aad
aam
add
xlat
loopne
aad
fildl
loopne
loop
loopne
in
out
repnz
std
add
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
ret
les
mov
mov
ja
test
dec
test
xchg
xchg
pop
add
add
add
add
add
add
mov
scas
adc
mov
aam
iret
iret
jmp
aam
cmc
rcl
sar
into
iret
iret
cli
lret
lret
int3
stc
lret
hlt
mov
mov
iret
lods
lods
stos
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
mov
sarb
ror
sar
xlat
aad
xlat
aad
call
rcl
dec
into
into
dec
lret
int3
mov
mov
cld
stos
stos
stos
icebp
cltd
xchg
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
jne
jne
gs
dec
dec
dec
cmp
sub
sub
aaa
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
rcl
sar
int3
lret
mov
inc
rol
mov
mov
test
stos
lahf
lahf
popf
cwtl
xchg
cwtl
jmp
jno
xchg
adc
add
xor
add
add
add
add
jg
addb
jp
addl
aam
imul
push
push
push
stos
push
insl
insb
push
pop
pop
cmp
cmp
pop
jno
jo
mov
scas
pop
mov
mov
mov
mov
sar
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
cltd
cltd
add
popf
cwtl
cltd
fcoml
addl
jmp
jp
sarb
jnp
jns
jns
jae
je
push
push
push
cmp
je
popf
sahf
sahf
mov
scas
scas
repz
lods
scas
sti
scas
scas
scas
std
cmpsl
test
std
sahf
pushf
popf
call
xchg
call
mov
lods
jmp
lods
scas
leave
movsl
movsb
cmpsb
cltd
je
jb
adc
adc
add
add
add
add
outsl
outsl
outsl
pop
nop
mov
loop
lcall
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsl
orl
lcall
mov
mov
xchg
xchg
xchg
lcall
cmpsb
test
mov
mov
mov
mov
stc
mov
mov
movsl
mov
addl
add
add
pop
popa
popa
or
lods
mov
movsl
mov
mov
lea
lcall
lahf
mov
negl
cmpb
push
push
jo
pop
pop
outsl
insb
insl
outsb
xchg
subl
mov
nop
lcall
mov
pushl
pop
mov
mov
mov
mov
mov
out
scas
lods
insl
stos
test
add
add
add
pusha
popa
popa
or
mov
in
mov
nop
call
xchg
lcall
cwtl
lcall
popf
sahf
cli
xchg
xchg
cltd
jmp
xchg
xchg
aam
lea
xchg
ja
notb
pop
jg
popf
dec
jnp
movsl
inc
js
scas
aaa
jbe
mov
jb
mov
outsl
ljmp
sbb
pop
mov
scas
scas
jle
movsl
movsb
push
popa
pusha
pusha
or
mov
in
mov
cltd
lcall
mov
mov
decl
addl
cld
xchg
pop
test
xchg
dec
jns
xchg
cmp
xchg
sub
xchg
sbb
lcall
or
push
pushl
sbb
mov
and
pop
mov
lods
scas
xchg
lahf
popf
sahf
adc
add
add
pusha
pusha
popa
or
stos
mov
stos
mov
lahf
jmp
stos
test
lcall
pop
jp
mov
imul
sub
mov
pop
incl
add
pop
call
add
or
jb
mov
jle,pn
les
jle
enter
lret
xor
xchg
inc
test
divl
test
add
add
add
pusha
popa
pusha
or
movsl
stos
in
mov
cmpsl
pushl
mov
pushl
xchg
mov
decl
orps
test
push
incl
add
popl
push
call
add
cmpsb
add
mov
outsb
inc
ss
inc
mov
iret
inc
mov
roll
call
inc
nop
fadds
call
popa
sahf
dec
cmpsb
mov
mov
mov
movsb
mov
std
add
add
add
pusha
or
lahf
mov
ljmp
mov
mov
mov
mov
mov
scas
movsb
test
decl
sbb
decl
or
call
add
lahf
add
add
scas
add
mov
dec
xchg
call
push
lcall
pop
lahf
jmp
pop
mov
fisubrs
dec
cmpsb
mov
ret
cmpsl
xor
jg
add
add
dec
dec
dec
pop
jle
jl
popf
xchg
lcall
lods
mov
mov
mov
mov
mov
mov
sahf
data16
xchg
sub
insl
call
minps
xchg
add
lahf
add
test
pusha
pushl
push
imul
fsubl
jmp
insl
test
in
lods
jmp
jo
in
jb
call
cmpsl
mov
shll
jg
add
add
add
dec
pop
outsl
outsl
imul
xchg
fwait
cltd
xchg
pushl
mov
mov
mov
jne
lcall
cmp
sahf
sub
xchg
or
lcall
pop
ljmp
add
or
xlat
dec
xchg
jmp
jp
jmp
mov
in
cmpl
xrelease
push
xchg
mov
cmpsb
test
lcall
add
sub
push
push
dec
pop
imul
mov
mov
mov
mov
ret
mov
popf
jmp
inc
jg
mov
pop
pop
jmp
add
mov
gs
mov
adc
mov
push
xchg
ret
push
cltd
xchg
enter
leave
stc
fwait
lret
push
xchg
jmp
lods
inc
mov
stos
popa
lahf
mov
add
xor
xor
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
pushl
push
mov
lods
dec
test
mov
add
ljmp
add
mov
add
and
push
mov
sar
cli
stos
sar
cld
test
sar
std
lods
sar
sti
cmpsl
int3
jmp
mov
inc
mov
stos
jne
pushf
sahf
or
add
add
push
dec
dec
aaa
jae
je
stos
stos
test
out
int
cmc
lret
lret
int3
sti
leave
lret
enter
mov
mov
lods
inc
jle
mov
add
mov
gs
add
into
add
fiaddl
clc
xchg
sti
mov
std
mov
fdivr
mov
std
mov
sar
jmp
rol
scas
lods
lods
mov
add
add
add
add
pop
or
aad
dec
loope
jecxz
loopne
fistps
fsubr
mov
data16
test
jb
cmpsb
or
scas
add
mov
add
xlat
add
loop
jl
repnz
mov
sti
loope
dec
loopne
std
enter
leave
dec
sti
lock
leave
divb
sahf
pushf
sbb
add
add
std
std
add
incl
jmp
out
sbb
in
jmp
ljmp
xchg
mov
mov
mov
add
mov
inc
add
into
add
fldl
jbe
ljmp
sti
ret
sti
iret
in
std
shl
shl
call
out
call
out
std
jmp
push
fdivr
fmul
sar
mov
mov
and
add
add
incl
std
incl
std
cld
cld
pop
aam
push
mov
pop
mov
popf
or
pop
pushl
add
rolb
jno
loopne
jne
out
and
std
shl
fsubr
std
fld1
fld1
cld
cld
xlat
out
cld
aam
push
fdivr
loopne
aad
mov
popf
lahf
das
add
add
int
into
or
arpl
stos
add
mov
add
add
loopne
ja
out
xor
cli
lret
loop
clc
leave
loopne
test
bnd
repnz
out
ret
in
vpsubw
ljmp
ljmp
test
add
add
add
aam
push
mov
jb
or
mov
insb
inc
sbb
lret
and
aad
test
loopne
fwait
clc
loop
mov
out
in
lret
mov
loope
mov
lret
sarl
in
fistpl
out
jmp
rorb
mov
add
stos
stos
stos
add
xchg
movsl
les
mov
mov
xchg
fidivrl
andb
into
mov
les
aam
lret
insl
ror
into
pop
rcl
rorb
xlat
fdivrs
loopne
fisubrs
in
fisubs
jecxz
lock
in
in
or
std
incb
std
std
add
mov
jns
mov
mov
mov
mov
shrl
leave
and
rcl
pop
rol
adc
rcl
or
or
into
int3
add
std
std
add
incb
cltd
lcall
lds
int3
int
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
enter
enter
mov
ret
ret
sarl
scas
mov
stos
stos
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
std
rcl
sar
into
iret
iret
std
mov
stc
mov
test
jg
sbb
push
add
add
add
add
add
add
add
add
jno
jae
data16
dec
inc
das
cs
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
rcl
dec
iret
int
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
jne
je
xchg
adc
jo
ret
popa
mov
push
insl
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cwtl
xchg
lds
jb
daa
es
add
add
add
add
jae
jb
fwait
xchg
fwait
mov
test
clc
xchg
test
test
push
push
push
inc
mov
pushf
into
mov
mov
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
movsl
test
test
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
sahf
sahf
popf
cmc
cwtl
lcall
push
push
push
imul
jg
lea
notl
mov
pushl
imul
call
stos
stos
stos
add
add
add
cmpsl
scas
test
xchg
xchg
xchg
call
fwait
lcall
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
bound
std
pushf
inc
jbe
cmpsb
aaa
jbe
lods
sub
outsl
pushl
ss
mov
mov
imul
int
add
add
test
pop
lods
movsb
stos
test
sahf
sahf
sahf
jmp
movsl
cmpsb
call
push
decl
inc
je
mov
imul
xchg
adc
xchg
or
mov
push
outsb
mov
and
jnp
lds
xchg
rcrb
subl
je
push
movsb
popf
mov
cld
test
mov
ljmp
xchg
decl
or
mov
push
decl
pop
jmp
adc
shlb
call
inc
mov
aam
call
dec
xchg
dec
cltd
mov
mov
mov
movsl
movsl
movsl
push
add
add
push
imul
movsl
lahf
mov
pushl
mov
mov
call
pop
pop
decl
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
pusha
movsl
jmp
cmpsb
call
pushf
mov
mov
cmpsl
cmpsb
pop
add
add
popa
bound
mov
pushf
cld
mov
scas
mov
mov
scas
lcall
xor
cltd
and
xchg
pop
pop
lcall
add
mov
xor
jmp
jnp
out
jge
out
jge
fistpl
mov
movsb
mov
add
dec
dec
dec
adc
imul
mov
mov
mov
rol
mov
arpl
jmp
add
pusha
pushl
insb
fmull
out
mov
push
xchg
push
xchg
enter
enter
inc
mov
movsl
sub
aas
aas
inc
adc
push
xchg
xchg
mov
inc
ret
inc
mov
cwtl
ljmp
sbb
cmpsb
add
mov
gs
add
aad
jns
in
insl
lods
push
test
cli
lods
sar
cld
lods
sar
cld
scas
sar
lods
sar
ljmp
fldenv
incl
xor
jo
inc
scas
mov
mov
aam
rcl
fnop
rcl
out
lret
cli
mov
mov
jmp
inc
add
add
call
mov
std
mov
fdivr
std
ret
std
rcr
std
rcr
icebp
mov
ret
test
jg
add
add
lods
stos
lods
add
jmp
or
out
jmp
outsb
fcomp
fisubl
mov
add
mov
add
faddl
out
cmp
std
int
std
shl
std
shl
std
shl
aam
push
leave
aam
into
in
scas
scas
lods
popa
addb
add
std
std
add
incb
int3
int
sub
sahf
sbb
stos
add
mov
add
loop
jns
cmc
push
cmpsl
inc
loop
std
call
cld
aad
std
shl
cli
shl
push
leave
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
ret
mov
cld
lods
push
arpl
mov
push
je
fstpl
cmp
insl
lods
cld
lock
aam
call
mov
shl
out
aam
ljmp
scas
fwait
cltd
cltd
add
mov
pushf
lods
xchg
dec
and
shlb
lret
mov
xlat
mov
lret
into
outsl
fmul
iret
pop
xlat
dec
in
loope
out
out
out
in
in
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
ret
and
ror
fisttpll
int3
int3
into
or
aad
std
std
add
std
incb
stos
incl
mov
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
ret
sbb
jbe
mov
mov
ds
call
rcrb
xor
and
pusha
in
xor
jecxz
pop
daa
push
orb
xor
inc
cmpsb
hlt
inc
scas
cltd
jne
or
sarb
xchg
sbb
subb
jae
pop
jmp
cmp
adc
adc
test
dec
jno
stos
sub
push
push
push
nop
dec
mov
enter
xchg
cmpsb
sub
xor
inc
push
mov
adc
iret
mov
lds
push
out
test
mov
dec
fstpt
lahf
out
mov
cmpsb
lock
test
dec
and
cmp
cmpsb
cmpsl
jl
push
int
idivb
cmpsb
xor
fimuls
sub
pop
pop
loop
ficomps
xchg
inc
inc
test
stos
inc
jp
xor
sbb
enter
xor
xchg
sbb
outsb
jmp
lret
mov
push
addb
push
cwtl
and
mov
add
xchg
aas
int
push
call
mov
insl
lock
mov
insl
add
cmp
add
or
jnp
lock
push
stos
lahf
fdivrl
or
aad
inc
jae
jo
xor
enter
sbb
xor
jo
push
sub
test
or
mov
aam
mov
mov
fisubrl
xor
sub
les
lcall
hlt
xor
andb
pop
cmpsb
lcall
mov
cmc
adc
adc
je
jno
lret
pop
idiv
and
movsb
lea
and
adc
pop
pop
pop
cs
rolb
lahf
inc
test
notb
inc
and
and
call
mov
dec
push
out
mulb
adcb
mov
push
out
loope
or
or
jg
pop
adc
xor
ficomps
loop
gs
lods
hlt
shll
mov
or
dec
push
adcb
and
es
pop
repz
adc
ja
fbstp
cmp
imul
fcomps
mov
daa
xchg
pop
gs
lds
out
shl
flds
jl
push
fwait
adc
pop
sub
js
jbe
or
mov
adc
adc
pop
test
lahf
ds
xchg
cmp
xor
sahf
push
hlt
pop
insl
rclb
aas
imul
xchg
mov
insl
xor
jo
jbe
sub
cmpsb
and
or
pop
orb
sbb
loop
scas
pusha
nop
je
les
movsl
scas
adc
mov
sub
lret
andl
fstpt
aam
add
jecxz
imul
pop
clc
fdivl
xchg
fs
xor
xchg
inc
mov
push
sub
ds
aas
in
outsl
in
inc
pop
pop
aaa
andb
and
out
jp
pop
mov
out
cmp
js
cli
xchg
mov
in
inc
out
fmull
xchg
jecxz
ljmp
mov
jo
xor
je
fsubr
inc
pop
in
push
insl
aam
mov
jmp
pop
and
xor
lods
jle
stos
loopne
rorb
lea
and
pop
sbb
dec
mov
xchg
sbb
mov
pushf
mov
xor
and
arpl
mov
das
ss
icebp
cmp
inc
fstpt
cmpsl
add
mov
xor
ffree
in
or
mov
add
xor
test
pop
fwait
rcrl
lea
sbb
xor
mov
mov
les
cwtl
or
aas
scas
sahf
sbb
cltd
popa
fmuls
mov
lea
bswap
xor
sbb
inc
dec
or
pop
inc
pop
rsqrtps
sbb
out
sbb
xor
out
das
jb
fstps
inc
sub
sbb
ljmp
mov
stos
pop
lods
cld
into
cmp
loop
pop
ret
dec
rcr
mov
aam
mov
mov
xchg
xor
outsb
js
data16
and
rcl
fistpll
cwtl
es
call
test
scas
aas
cwtl
loop
arpl
shl
mov
mov
sbb
ss
nop
out
ds
scas
nopl
shlb
scas
divps
mov
cmp
ret
mov
imul
pop
fcmovnb
es
cmp
in
mov
dec
pop
dec
dec
mov
push
dec
ds
call
or
jle
and
push
pop
push
std
mov
mov
and
loope
pop
fldenv
push
pop
movd
cmpb
insb
mov
js
popf
dec
inc
jbe
daa
jbe
add
shlb
nop
or
fsubs
mov
and
emms
fsubl
sbb
adc
push
xchg
xchg
mov
pmaxsw
sahf
mov
jg
insb
push
mov
mov
andl
pop
lahf
repz
mov
enter
enter
fistpll
jae
out
sub
fsubrp
xchg
ljmp
cmp
daa
shrb
and
inc
js
cmpsl
das
pop
xor
arpl
mov
jp
adc
rcrl
jp
cmp
xor
and
add
cmp
mov
mov
orl
sarl
iret
inc
loope
fmuls
rcll
stos
in
pop
popa
sub
cmp
fs
fdivrl
jno
inc
fmuls
stos
pop
neg
in
and
das
cmp
orb
mov
call
dec
loop
mov
fs
insb
xor
push
repz
stos
adc
pop
cmpsl
xor
fdivrs
xchg
scas
stc
dec
in
rcrl
mov
dec
insb
add
cmp
push
lahf
mov
shll
hlt
mov
fdivrl
push
mov
cltd
xor
mov
dec
mov
rclb
aad
or
mov
mov
mov
push
iret
fwait
or
lods
cmp
into
aad
jne
and
in
xchg
das
pop
iret
cmp
mov
pop
in
test
or
jecxz
sti
sbb
mov
cmp
nop
les
or
pop
cmp
loop
adc
or
mov
dec
iret
inc
jecxz
xchg
sub
iret
data16
dec
sbb
jle
in
test
stos
or
cmp
imul
push
mov
xor
and
movsl
stos
inc
xlat
dec
cmpsl
out
out
inc
fdivrl
ja
cmp
xchg
sub
out
add
loope
pop
mov
add
imul
lock
test
stc
nop
imul
ret
pop
scas
mov
fbstp
int
mov
aam
arpl
xor
fnsave
add
xor
bound
xor
lods
test
cmpsb
cmc
add
jno
or
dec
jb
xchg
and
pop
xlat
movsl
pop
sbb
and
push
xor
sbb
ss
ljmp
scas
cmp
jb
add
nop
daa
push
in
pop
push
jbe
inc
test
out
imul
add
mov
fsubl
mov
mov
ret
repz
adc
fldl
jl
add
fs
cwtl
and
sbbb
js
dec
stos
or
cmp
lret
insl
std
pop
mov
mov
fnsave
adc
aaa
ret
xor
hlt
pop
sbb
inc
stos
cmp
add
stc
cmpsl
sub
fildl
mov
hlt
mov
test
inc
movsb
cmp
popf
cli
int
les
in
sbbb
in
in
pop
inc
mov
popf
insl
xchg
mov
mov
adc
inc
xlat
sbb
stc
xchg
push
mov
lods
mov
fnstenv
sbb
push
jmp
dec
jp
or
outsl
mov
sub
mov
mov
push
or
iret
arpl
jmp
lret
ljmp
hlt
xor
mov
mov
mov
jbe
mov
push
push
movsl
enter
mov
insb
iret
inc
in
xor
ja
fistl
add
sbb
pop
or
dec
jg
ljmp
inc
xor
jns
xchg
cmp
cmpsb
stos
pop
repnz
sbb
dec
in
inc
outsl
dec
loope
orl
lea
in
ds
in
test
pop
adc
mov
cmp
idivl
in
iret
cmpsl
fbstp
xlat
and
in
fwait
xchg
lods
inc
enter
popf
or
pushf
jb
call
enter
outsl
hlt
mov
mov
out
dec
adc
enter
data16
inc
fdivl
pop
dec
movsl
insl
push
pushf
xor
jns
es
dec
add
push
out
aad
or
xor
lea
nop
daa
sbb
sub
xchg
sbb
or
out
iret
sbb
int
std
mov
fisubs
push
add
xchg
xor
std
loope
lret
inc
push
ret
add
pop
mov
push
testb
fs
lock
iret
jbe
pop
jb
divb
insb
out
sahf
xor
mov
add
movsb
repnz
movsl
pop
adc
lds
mov
push
mov
jmp
cld
fildll
in
and
adc
out
cmp
or
ds
movsl
sbb
lret
les
xor
sarl
repnz
sarl
push
lods
test
adc
in
pop
push
sub
cs
aaa
shrl
jg
pop
mov
add
add
adc
push
das
xor
mov
icebp
test
test
push
pop
sbbb
dec
addr16
cmp
ja
and
mov
je
or
xor
out
jb
push
xchg
xchg
loop
stos
int3
jg
dec
mov
xor
mov
or
or
stos
pop
popa
clc
ja
insb
add
cwtl
xor
push
loop
jge
daa
sub
in
lcall
mov
aam
stos
mov
testb
jne
inc
jne
dec
test
insl
push
das
aam
jae
es
xchg
cmpsb
cmp
inc
cmp
insb
mov
data16
mov
testl
xchg
cs
iret
xchg
sub
jnp
jnp
push
std
xchg
inc
mov
es
popa
dec
loop
push
shrl
pop
adc
fisubs
loop
call
push
pop
cmp
test
jecxz
ret
jno
mov
jmp
jle
out
pop
fadd
stc
mov
es
or
std
mov
sbb
lods
test
pop
mov
and
loop
insb
add
sbb
sub
fs
add
mov
push
and
fwait
xor
push
out
push
adc
fs
mov
or
inc
ficoms
mov
aad
fwait
ret
inc
inc
fidivrl
pop
cmp
xor
push
adcl
les
dec
cmp
cmp
icebp
pop
cltd
xor
cltd
xor
mov
mov
fldt
sub
lds
test
pop
es
mov
pop
aaa
or
dec
lahf
data16
pop
push
sbb
aas
fwait
pop
mov
push
dec
mov
jnp
mov
aas
loop
js
mov
aad
xlat
dec
je
mov
inc
jl
sbb
cmp
mov
les
xlat
fiadds
add
jle
sub
jg
leave
cmp
popf
xor
jns
pop
dec
mov
cmp
outsb
in
test
out
les
fsubrs
in
testb
in
mov
jbe
ds
cwtl
sahf
xor
dec
dec
pushf
xor
les
nop
cwtl
das
xor
leave
pusha
push
mov
mov
or
negl
repnz
imul
add
loop
xchg
sub
les
add
int
and
jbe
out
xchg
xchg
scas
inc
or
cmpsb
cmp
popf
adc
cmpl
fdiv
adc
scas
push
xor
stos
shrb
rclb
sbbl
mov
sti
xchg
lods
xchg
pop
or
sarb
scas
pop
add
shll
jns
mov
pop
in
jbe
gs
push
add
scas
inc
cmpsl
sub
xor
xlat
scas
inc
or
sub
fisubrs
mov
lods
lcall
mov
int
jno
adc
jae
scas
inc
push
xchg
shrb
xchg
testl
xchg
xchg
jno
or
xchg
cmp
adc
jecxz
jge
outsb
add
sbb
push
xchg
xchg
push
jb
stos
popa
pop
ficoml
and
push
and
push
push
jp
xchg
inc
inc
popf
jle
push
test
jl
jae
das
aas
push
popf
jo
pop
lock
mov
iret
adc
dec
fistps
repnz
lods
and
addr16
push
mov
scas
and
stc
pusha
and
scas
adc
pop
icebp
lahf
xor
call
ljmp
mov
lahf
mov
or
mov
int3
lret
aam
pop
repnz
fildl
sahf
sbb
dec
jecxz
cmp
into
insl
push
add
add
mov
dec
jae
dec
out
xchg
call
enter
arpl
mov
addr16
and
lock
inc
cmp
jb
ss
ret
mov
popf
xor
hlt
icebp
mov
popf
inc
fistl
test
jno
xchg
dec
in
sahf
addr16
xchg
or
mov
rclb
add
adc
outsl
mov
fsubp
jge
fisubrl
mov
inc
fisubl
inc
rorl
xor
push
mov
xor
test
push
cmc
mov
mov
xchg
xor
test
add
xor
and
testl
test
int3
mov
and
jo
pop
mov
in
subl
pop
aad
aas
mov
icebp
and
mov
cmp
sub
cwtl
das
and
jb
pusha
inc
test
ja
push
arpl
inc
xchg
jne
add
cmpsb
test
jle
or
pop
sahf
cmpsl
pminub
inc
adcb
sbb
pushf
xor
xor
movsb
mov
inc
lds
rcr
insl
cmp
xor
mov
fisttpll
mov
dec
scas
inc
out
out
popa
xlat
test
insl
stc
jno
jne
aas
pop
repz
sbbl
pop
mov
xor
mov
fdivs
pop
out
in
mov
jge
mov
sti
xchg
mov
pop
add
test
mov
aam
xor
iret
shrb
ret
xchg
loope
mov
roll
push
loop
jno
roll
repnz
mov
sbbb
fsubrs
loop
cld
xchg
fadds
sbb
rcll
popa
loop
repz
fimuls
movsl
cmovle
out
jns
aad
xchg
sbb
adc
xlat
lcall
roll
test
and
push
sbb
shrb
int3
inc
push
sub
lods
movsb
popa
clc
or
pop
scas
in
sub
lahf
pop
push
ss
jnp
adc
xor
push
aas
sti
xor
mov
stos
inc
xchg
aam
in
mov
inc
or
pop
scas
int
mov
ficomps
pushf
lods
inc
push
inc
inc
xlat
gs
mov
test
mov
fadds
lret
lods
inc
leave
jb
fisttpll
scas
inc
mov
fisubrs
rorl
jb
outsl
jbe
cmp
xchg
sub
pop
xchg
sub
aam
movsb
xchg
ja
mov
push
inc
xchg
sub
cmp
enter
push
mov
arpl
lret
bound
mov
mov
in
sbb
scas
push
lods
inc
popf
iret
add
or
das
adc
push
dec
jecxz
mov
push
cmp
or
lret
cli
xchg
pop
repnz
sbb
xlat
arpl
or
mov
sbbl
jecxz
cmpsl
ds
add
adc
xchg
sub
out
mov
fistpl
inc
jg
int
mov
lods
inc
not
shrl
sbb
pop
dec
or
xchg
mov
pop
movsl
and
push
movsl
push
jmp
ja
int
divl
sub
pop
cmc
sti
dec
cmpsb
cmp
nop
inc
int
dec
in
es
cmp
xor
into
inc
call
or
inc
push
or
or
jo
push
add
scas
mov
push
jo
cmpb
sub
repnz
cwtl
int3
mov
pop
jnp
xchg
mov
jae
xor
data16
xor
xor
aad
dec
sub
int
jno
imulb
inc
clc
ljmp
mov
ficoml
repnz
push
cmp
mov
mov
sti
xchg
pushf
cltd
or
adc
dec
or
cli
loope
sub
xor
jns
and
into
dec
dec
push
out
xchg
les
jmp
jecxz
mov
jle
xor
sti
xchg
sti
push
jno
dec
roll
loopne
addr16
in
pop
pop
xor
ret
in
enter
sbb
test
push
repnz
in
fisttpl
fwait
jnp
cli
cmc
jb
scas
inc
push
xchg
jl
rcrl
aaa
mov
ds
add
pop
jg
int3
pop
sub
push
push
es
flds
push
sbb
mov
in
mov
test
pop
sbb
fidivrl
dec
iret
fcomi
lahf
mov
faddp
jecxz
mulb
inc
add
jnp
imul
jne
cmp
mov
cld
cmp
sub
sti
clc
sub
dec
pop
fisttps
jb
xor
lods
xor
cmp
adc
xchg
insb
push
sahf
adc
aad
xchg
je
les
stos
mov
jl,pn
cmp
mov
sub
xchg
mov
jne
sub
push
out
stos
push
aam
scas
imul
mov
xchg
sbb
adc
jo
fs
shl
ret
test
and
call
gs
pop
aad
fiaddl
pusha
je
xchg
addr16
mov
hlt
mov
sub
cmp
xchg
jle
pop
rol
pop
add
das
mov
xor
push
add
lcall
aas
sub
data16
inc
in
leave
xor
xor
jo
jmp
cwtl
nop
pop
or
fimuls
push
adc
pop
fwait
fwait
xor
jns
mov
xor
push
or
ss
xlat
outsb
pop
lea
jo
mov
lcall
mov
in
mov
mov
loope
int3
arpl
jbe
les
fwait
adc
mov
pusha
test
dec
pop
cmpsl
ljmp
jno
push
movsl
add
cmpsl
dec
jle
dec
repz
aaa
mov
hlt
aad
out
lcall
mov
adc
roll
mov
call
test
fcomip
imul
out
cmp
add
inc
pop
push
add
ror
mulb
sub
mov
push
int
subb
int
xchg
and
sub
ljmp
lret
xchg
mov
add
pop
cmp
add
mov
int
fidivrl
xchg
xchg
in
pop
sahf
dec
mov
inc
pushf
mov
arpl
xchg
xchg
mov
jne
bound
bound
addb
mov
into
cmp
decl
das
sbb
push
cltd
mov
pop
jne
out
cltd
jae
pop
je
mov
jmp
xchg
lods
xlat
lcall
fsubl
xchg
pop
mov
mov
stos
daa
sub
rclb
dec
daa
sub
sub
sub
push
in
xor
jb
dec
sbb
arpl
ja
aam
in
test
ret
das
shl
pop
mov
add
jno
lcall
cmp
mov
ret
inc
mov
add
imul
sbb
ret
fstl
inc
frstor
cmp
jmp
add
andl
add
or
mov
gs
xchg
test
mov
icebp
jle
mov
ds
fmuls
inc
movsl
lods
sti
lods
mov
mov
or
mov
movsb
inc
bound
sub
cld
pop
scas
imul
mov
popa
rcl
rolb
cmpsb
mov
mov
lock
je
push
xchg
lcall
mov
mov
cmp
fadd
cmp
imul
cli
popa
adc
mov
mov
mov
in
xor
pop
repz
xor
clc
stc
fdivl
ljmp
xor
jne
sub
fwait
addr16
fisubrs
aas
daa
push
mov
clc
fwait
sub
push
rcl
outsb
add
mov
imul
mov
das
pop
push
out
sub
and
movsb
adc
sbb
or
cmpl
pop
mov
sub
mov
iret
or
xchg
and
or
imul
add
mov
add
jecxz
ficompl
mov
roll
out
in
adc
lret
rcr
rclb
push
shl
enter
divl
repnz
add
leave
jecxz
push
cbtw
stos
jecxz
in
test
rolb
xor
pop
adc
push
lea
mov
test
js
lods
inc
pop
mov
cmp
add
repz
jae
out
rorb
movl
pop
aad
cmp
lea
mov
cmp
adc
inc
nop
cmc
mov
outsb
add
inc
cltd
outsb
add
nop
or
outsl
arpl
mov
cmp
push
lret
pop
out
imulb
lcall
mov
lds
jbe
adc
dec
jbe
adc
sub
jge
pop
sbb
jne
xchg
xor
les
sub
lock
push
bound
lea
adc
cmpl
lret
pop
test
mov
jle
test
mov
out
sbb
cltd
or
dec
mov
out
outsl
push
outsl
pop
push
ficoms
mov
mov
stos
in
xchg
in
popl
fstpt
jno
sbbb
stc
out
ja
or
sti
jge
ljmp
add
push
stos
popl
ret
stos
inc
mov
fimull
imulb
mov
inc
mov
fcmovbe
outsl
mov
mov
das
jp
mov
fisubl
and
xchg
or
inc
loope
mov
adc
rcrl
flds
mov
into
mov
pusha
test
jl
div
mov
fcmovnbe
or
mov
sahf
fmulp
pop
dec
lcall
data16
fcomp
xchg
insb
jp
and
aad
sbb
dec
ret
add
aaa
mov
invd
or
xorl
test
add
xchg
mov
cld
int
cs
add
cmp
push
popf
or
pop
in
mov
je
outsb
test
imul
out
insb
jbe
insl
repz
rorl
aaa
and
imul
cmp
lods
jo
lret
scas
ret
or
pop
in
or
sub
sbb
sbb
sub
jl
push
or
ss
mov
in
sbb
imul
sub
inc
cmpsb
jge
lret
sahf
sub
pop
test
fmul
imul
test
ds
imul
pop
xchg
pop
mov
jno
push
in
sbb
out
mov
pop
pushf
into
aam
mov
adc
orl
pop
scas
push
mov
mov
cmp
xor
inc
faddl
fstpt
sti
push
jns
pop
mov
cmp
out
jnp
dec
gs
ljmp
push
inc
fadds
into
sar
jecxz
adc
sbb
lret
and
cli
mov
jg
mov
add
mov
aad
inc
idivb
sub
push
push
dec
add
fimuls
sbb
xchg
je
insb
xor
sub
xchg
popl
fisttps
add
pushf
and
scas
movups
mov
ljmp
mov
xchg
add
ja
insb
xor
mov
xor
add
and
les
mov
or
loop
jns
adc
inc
sub
dec
cmpsb
push
and
cmp
and
mov
lds
and
fcoms
movsl
sbb
and
aas
lcall
ficompl
clc
push
cltd
pop
sahf
into
insl
dec
filds
mov
sub
pusha
mov
movsb
mov
or
and
addr16
adcb
es
inc
fadd
inc
or
lahf
loop
outsl
mov
fistl
mov
inc
pop
lcall
movsl
sti
imul
jne
jo
push
or
and
cwtl
push
lods
adc
jno
mov
pop
push
xor
gs
mov
cmc
arpl
cmpsb
mov
jge
and
pop
mov
addb
xlat
add
sbb
ftst
xor
xchg
jl
rcrb
fcomps
or
mov
mov
fiaddl
shrl
imul
jl
mov
lods
test
rcr
into
shlb
fst
lret
lds
push
add
pushw
mov
dec
fisubrl
or
popa
mov
mov
or
cltd
mov
and
jo
int
add
test
fisttps
dec
pop
inc
fisttpl
xchg
pop
enter
dec
push
sub
test
mov
addb
xor
inc
cmp
mov
sub
div
mov
and
test
jl
xor
mov
pop
in
and
cld
lahf
push
neg
pop
call
out
outsl
or
dec
out
mov
jno
push
bound
dec
clc
repnz
jl
sub
jle
mov
mov
faddl
imul
rorl
ja
jmp
lock
jecxz
mov
mov
or
cltd
out
xor
in
mov
xchg
movsl
jbe
jne
add
in
rolb
test
mov
mov
cmpsl
stos
jbe
mov
lea
shll
cmpsl
loop
adc
add
lods
je
fisubrl
pop
jbe
push
fwait
out
push
mov
out
cltd
add
rcll
xchg
ret
cs
adc
aas
push
xor
sarb
stos
fadds
xor
mov
mov
xchg
out
push
mov
movntps
cmp
and
sub
mov
clc
push
dec
jl
lret
push
int
push
sbb
xchg
loop
call
out
ret
push
push
xor
js
shr
adc
test
mov
pop
out
fisubrl
hlt
and
adc
mov
mov
leave
shlb
mov
xor
pop
movsl
jecxz
filds
mov
adc
pop
push
push
das
movb
sbb
fidivrl
jge
cmpsl
xor
sbb
outsl
aam
negl
jmp
mov
mov
aaa
mov
jg
add
cmp
in
xor
dec
daa
pusha
mov
aaa
subl
sbbl
lahf
mov
mov
icebp
sbb
int3
es
int3
faddl
movsb
int3
aam
sbb
fnstsw
fs
mov
mov
aad
add
adc
test
sbb
mov
or
push
cmp
mov
push
lods
aad
imul
xor
and
popa
outsl
inc
std
jp
aad
in
popa
pop
adc
fsubrl
cmp
mov
lea
pop
repnz
ss
nop
push
clc
jecxz
sbb
push
xchg
lea
fnsave
inc
es
fsubrs
mov
js
xor
scas
cltd
gs
notb
pop
loope
lret
sti
inc
sub
push
mulb
and
rcrb
dec
add
jae
fildl
in
bound
inc
jnp
push
fwait
and
push
mov
or
pop
cmpsb
push
js
lock
xor
jge
shlb
aas
icebp
jnp
sub
in
fs
push
das
sub
pushf
xor
negb
mov
push
nop
outsb
mov
mov
adcl
std
or
jg
jl
les
adc
jl
mov
push
sbbb
loopne
or
cld
mov
enter
xor
dec
pop
mov
fcmovbe
ror
push
mov
mov
imulb
cmp
cld
push
in
push
cli
cltd
imul
inc
loop
iret
ret
sbb
movsb
ja
std
loop
das
xchg
test
dec
aam
inc
cld
loopne
pushf
es
add
xchg
pop
xor
or
lahf
adc
movsb
or
inc
addr16
aam
repnz
negb
lret
push
test
sahf
xchg
in
imul
dec
cld
jo
imul
fcmovb
popa
and
and
imul
mov
or
mov
xchg
imul
xor
and
cmp
or
enter
or
imul
mov
push
in
xchg
repz
lea
sub
hlt
repnz
popa
inc
jp
push
dec
in
into
dec
lcall
dec
mov
lds
iret
test
sub
dec
mov
push
push
xor
scas
push
std
test
imull
rcrl
mov
push
hlt
pop
dec
xor
daa
xchg
cmp
or
mov
adc
mov
mov
cmp
cmc
mov
mov
sbb
cltd
mov
and
mov
test
mov
fstps
arpl
jmp
jp
mov
sbb
jb
clc
mov
mov
inc
out
cmp
ffreep
ret
mov
add
ret
sbb
mov
lcall
xchg
dec
mov
cmpsb
dec
aad
les
cmc
dec
inc
insl
clc
mov
pop
fdivs
cmp
arpl
push
call
stos
shll
lret
and
andl
sbb
call
out
push
mov
in
adc
sub
jo
mov
stos
xchg
int3
sub
push
jmp
xchg
mov
sbb
sub
lahf
mov
xchg
fistpll
ret
inc
fninit
push
sahf
push
in
out
push
les
cld
sub
push
cltd
rorl
cmpsb
add
cltd
insl
bound
xchg
mov
out
mov
data16
cwtl
jb
sbb
push
cld
lahf
pop
out
fisubl
push
movsl
inc
cld
dec
xor
iret
dec
push
shlb
xor
scas
inc
pop
mov
aas
add
pushf
jne
jae
lcall
push
pushf
xorb
jcxz
mov
inc
nop
daa
jns
xchg
dec
xchg
jg
movsb
popa
repnz
jbe
mov
in
dec
lret
int3
cmp
fimull
or
xchg
rorb
imul
pushf
pop
ret
punpckldq
lret
pop
adc
test
mov
add
sti
and
xchg
fidivs
cmp
aaa
loopne
inc
mov
out
push
div
xchg
push
xlat
cmp
imul
mov
jl
callw
and
jo
gs
xor
xchg
xsha1
cmpsb
or
scas
inc
xchg
add
jb
repnz
mov
sti
xchg
jbe
pop
sets
ror
cmc
mov
adc
cmovbe
stos
test
sub
aad
mov
sub
or
ljmp
jae
or
mov
jne
inc
xlat
push
jbe
shrl
push
out
dec
mov
push
sub
xchg
sub
dec
pop
jl
les
popf
iret
iretw
jnp
cmp
cmp
jo
loopne
or
mov
cmp
push
iret
push
dec
das
fsubl
mov
cmp
sbb
insl
movsb
dec
fiaddl
loope
addr16
mov
hlt
lcall
dec
mov
sub
mov
test
adc
jne
in
xchg
gs
ret
negb
push
cmp
stos
cmpsb
push
shl
in
in
mov
cmc
inc
cmp
movsb
jp
sbb
std
inc
push
pop
mov
push
pop
mov
mov
inc
stc
test
dec
adc
pop
int
adc
imulb
xchg
jge
stc
test
outsb
and
add
lods
outsb
mov
mov
divl
fadd
sub
fisttpl
stos
stc
repz
and
pop
lret
sbb
inc
aaa
pop
hlt
push
cmp
cmc
mov
mov
nop
dec
mov
aas
mov
jno
dec
cmp
imul
movsl
cmp
sbb
add
loop
sub
jecxz
mov
fiaddl
xchg
mov
xchg
cwtl
das
and
inc
dec
in
adc
cmc
mov
sbbl
int3
fsubrs
adc
add
mov
sbb
dec
aam
aas
push
xchg
sub
inc
stc
xor
mov
test
stos
inc
add
popa
clc
mov
fsubr
adc
fs
rclb
cmp
adcl
dec
rcll
aaa
mov
fmulp
pusha
jecxz
lods
inc
sbb
lcall
mov
lahf
sub
fwait
xor
ret
aad
xchg
jbe
jae
fidivl
dec
xor
adc
mov
js
and
loop
pusha
cltd
adc
icebp
pop
outsb
inc
cmp
lock
add
inc
outsb
add
jae
mov
push
jp
pop
loope
mov
mov
test
cmp
out
mov
add
arpl
cmp
jl
stos
dec
dec
sub
iret
movsl
dec
push
dec
pop
outsb
andl
pop
pop
in
addb
mov
sbb
cmpsb
pop
sbb
fsubrs
sbb
roll
mov
fbstp
xchg
xsha1
pop
xchg
dec
jmp
sbb
pushf
cmp
insb
mov
imul
inc
loopne
push
adc
push
xchg
xor
sub
xchg
pop
mov
fabs
js
dec
xchg
sub
and
sub
xchg
add
mov
fstp
outsl
lret
pop
subl
dec
cmc
jne
orl
outsl
push
push
jno
xchg
dec
pop
mov
dec
call
or
sbb
lcall
pop
cmpsb
pop
outsl
fadds
and
xor
popf
pop
lret
mov
fnstsw
cmp
faddl
mov
sar
imul
clc
xchg
jp
std
xchg
ja
add
loop
addr16
jo
clc
mov
xchg
jle
enter
fiadds
lahf
add
and
les
out
cmc
std
inc
scas
in
mov
lret
jmp
jns
sbb
into
cs
xchg
cwtl
jl
orl
insl
popa
in
in
jno
xlat
insb
inc
or
clc
mov
das
pop
cwtl
xlat
push
lods
or
mov
fistps
mov
or
sub
sbb
inc
pop
jmp
mov
insl
add
pop
dec
aad
sub
push
sub
push
repz
jecxz
lock
punpckhdq
inc
icebp
data16
xlat
outsb
in
incb
lods
mov
in
sbb
jecxz
gs
subl
aaa
iret
and
cmp
jp
and
mov
aad
cmc
sbbl
xor
sub
pop
test
mov
jae
sub
nop
stos
repz
sub
fdivrs
fucomip
jmp
arpl
fdivl
add
fistpl
les
cld
gs
xor
xchg
lcall
aaa
add
mov
pusha
jg
dec
es
fwait
jle
rclb
loope
cmpsl
mov
negb
ss
clc
stos
fcoml
xor
int3
lock
int3
pop
xchg
mov
push
mov
mov
inc
sbb
mov
out
pusha
push
cmpsb
adc
mov
iret
mov
loope
pushf
lock
add
test
scas
mov
cwtl
push
ds
daa
mov
fdivp
mov
jmp
adc
incl
addr16
and
inc
pusha
cmp
fsubl
mov
xchg
mov
sub
ja,pt
mov
repz
mov
dec
mov
pop
push
leave
adc
mov
mov
scas
inc
add
push
mov
lea
arpl
adc
pop
inc
sub
mov
push
sbb
sbb
popa
cs
subl
adc
xor
xchg
push
loope
jae
inc
inc
push
mov
add
scas
scas
mul
lods
mov
jecxz
xor
lcall
arpl
movsl
or
sti
mov
pop
jle
nop
adc
inc
mov
dec
fisubrs
cld
inc
jbe
adc
dec
iret
hlt
stc
mov
adc
dec
push
test
inc
jle
mov
dec
add
adc
imul
sahf
insl
rcll
cmp
les
inc
lods
hlt
cltd
pop
mov
je
sub
das
pop
xor
std
xchg
inc
fsubrl
fmull
xchg
call
mov
ds
push
and
push
push
jecxz
cs
jno
push
out
jle
ja
adc
push
add
and
xchg
hlt
out
ja
ljmp
and
sub
sbb
test
call
movsb
fsts
fsubs
inc
aas
sub
lods
add
mov
or
fisttpll
dec
in
jne
adc
cli
hlt
and
or
jno,pt
pop
lock
inc
inc
sbb
insl
outsl
ss
out
inc
insl
sub
and
pop
adc
xchg
mov
ss
arpl
pop
clc
dec
add
outsl
xor
adcl
dec
pop
or
shll
jns
mov
fstps
xor
shrl
out
pop
adc
iret
add
cmpsl
xchg
push
pop
aad
cli
push
jl
jno
je
fldt
andl
mov
roll
gs
aas
mov
jmp
and
push
mov
imul
dec
nop
imul
fadd
stc
or
pop
mov
pop
sub
mov
sub
int3
mov
mov
jmp
mov
adc
mov
movsl
jp
mov
shll
dec
add
les
notb
jg
stos
push
scas
mov
xchg
inc
dec
bound
inc
or
or
mov
add
sbb
daa
xchg
lods
aas
fcmove
loop
arpl
xchg
into
and
cli
push
jb
sbb
jae
pop
jo
sti
test
inc
loop
cmp
stc
sbb
addr16
push
fbstp
mov
dec
xchg
jmp
dec
xor
cmpsb
xchg
dec
iret
mov
mov
in
divl
mov
loopne
jmp
iret
clc
jns
mov
xchg
dec
dec
fld
push
cs
enter
add
sbb
iret
je
push
lock
mov
sbb
push
sub
xchg
add
pushf
in
jecxz
fnstenv
movsl
mov
aam
repz
push
aas
adc
dec
mov
sbb
and
push
sarl
es
mov
bound
mov
movntps
xchg
in
cmp
repnz
add
pop
pop
jae
hlt
fs
sub
mov
shl
mov
inc
push
aaa
xchg
nop
mov
arpl
xchg
xchg
aad
ret
push
mov
ret
sbb
sub
sbb
mov
mov
add
sub
sbb
out
xchg
and
inc
es
pop
xor
mov
xchg
mov
inc
lods
and
andb
stos
in
jl,pn
sahf
pop
cltd
and
mov
pop
or
or
adc
pop
mov
lea
mov
iret
push
jb
jle
xchg
push
add
lahf
push
pop
lahf
pop
cmp
jns
cwtl
mov
push
repnz
pushf
shlb
js
sahf
sub
sbbl
add
mov
insl
fimuls
imul
pop
cwtl
arpl
mov
clc
cmp
mov
ret
movsb
dec
dec
mov
add
cmpl
mov
sub
out
xchg
aas
fwait
cs
fbstp
pushf
insb
and
cwtl
xchg
push
and
sub
out
inc
std
test
mov
sbb
sub
push
jb
cld
je
ret
in
adc
cmp
sbb
inc
repnz
lods
fs
out
popf
push
std
mov
insl
inc
cltd
or
lcall
mov
jg
loop
mov
insl
icebp
sbb
enter
push
movsb
cmp
repnz
test
aaa
dec
push
rcll
insb
adc
sar
jno
shlb
outsb
cmpsl
xor
mov
icebp
dec
fcmovnbe
pop
insl
fldt
jbe
push
jle
dec
mov
push
jge
xchg
sub
pop
cmp
cmp
shrb
lret
hlt
xchg
push
popf
sarl
out
ret
shrb
shrl
sbb
lods
inc
rorb
inc
ss
in
in
pop
out
hlt
nop
je
leave
jb
imul
sub
push
sar
inc
pop
jb
test
push
fcomp
sub
hlt
test
and
xchg
iret
cmp
sahf
cltd
fidivs
sub
test
rorl
stos
popfw
hlt
xor
or
mov
sbb
fldl
clc
push
jbe
and
sbb
mov
cmp
icebp
roll
lcall
sub
mov
mov
das
ret
out
ds
push
adc
or
insl
hlt
test
movsb
pop
notl
pop
cwtl
add
fidivrl
mov
xor
icebp
lret
inc
xchg
ss
fildll
lea
inc
movsb
dec
cwtl
xchg
loopne
dec
xor
addr16
sahf
xchg
dec
dec
iret
hlt
cld
push
push
or
pop
dec
arpl
loop
cmp
push
test
pushf
jmp
pop
fnstenv
cmpsb
sbb
movsb
mov
pop
out
push
adc
xchg
mov
dec
sbb
fisubrs
or
mov
and
std
or
or
xchg
scas
mov
mov
sbb
inc
fcoml
cmpsl
int
push
arpl
sti
mov
fnsave
mov
inc
cmp
loope
xchg
sub
xchg
neg
cmpsb
sub
fdivr
out
inc
push
jle
aas
push
jno
or
lret
xlat
mov
dec
ret
lock
cmc
and
jl
popa
cmp
mov
sub
or
xchg
je
jno
dec
shlb
ficompl
jp
rol
and
pop
push
sbb
test
lods
fwait
orb
jno
xor
cli
sahf
cmpsl
loop
aaa
cli
inc
xchg
ds
in
test
inc
out
call
loop
out
mov
jge
jle
fnsave
iret
ret
ljmp
fs
pusha
mov
or
or
leave
sbb
leave
movsl
adc
enter
xchg
loope
mov
inc
into
aam
mov
inc
shll
inc
or
out
cmpsl
xor
lods
pop
inc
inc
lea
andb
inc
xor
sbb
cmp
ds
lahf
pop
testb
jl
pop
mov
push
push
inc
cwtl
lea
sub
sub
xor
repz
push
pop
scas
je
pop
jl
shlb
lods
dec
shrl
bound
mov
pop
jnp
sahf
xor
xor
loop
push
adc
jb
cmp
sbb
fwait
je
mov
es
movsb
cmp
cmp
imul
dec
mov
sub
push
call
lahf
leave
jno
push
mov
mov
cmpsb
inc
xor
xchg
cmpb
mov
mov
adc
mov
cs
cmpl
ja
fnstenv
or
repz
push
inc
or
rcr
xor
xchg
push
je
mov
inc
mov
lea
test
dec
shrb
repnz
stos
cmp
pop
and
nop
push
jo
addl
lods
mov
enter
push
imul
cmp
and
daa
in
mov
jb
and
adc
mov
rcrb
shrl
push
mov
mov
int3
lahf
lahf
add
sbb
mov
jle
xchg
mov
jecxz
insl
shll
mov
loope
movsl
push
lods
sbb
mov
mov
inc
xor
fidivrl
jns
outsl
stos
and
and
add
pop
cltd
dec
test
adc
rorl
sub
insl
incl
lret
xchg
adc
sbb
hlt
jl
sti
sbb
cmp
sbb
pop
adc
cmpsl
xor
ret
idivl
inc
fisubl
mov
or
test
addr16
movsl
repz
mov
stos
lea
fdivr
les
andl
jno
sub
sbb
mov
xchg
or
mov
insl
cmp
xchg
out
sub
call
add
sub
inc
and
jmp
inc
fdivrs
lret
scas
inc
stos
and
orl
fsubs
sbbl
inc
xchg
sti
sbb
xor
cltd
gs
cs
rol
js
fldt
pop
scas
das
xorl
call
mov
sub
sahf
jle
iret
fs
pop
fidivrl
inc
fisubrl
and
pushf
mov
inc
inc
js
data16
mov
push
scas
cmc
jl
cmp
insl
mov
mov
popf
leave
pop
and
test
js
push
dec
mov
sub
movsb
push
sub
test
or
mov
aad
insb
aaa
into
popf
inc
fadd
mov
push
jmp
into
pop
inc
fldl
out
fs
mov
dec
ds
std
cs
das
ret
pop
sahf
lods
mov
loopne
xchg
xor
fdivrp
mov
cmpsl
jle
je
jne
cs
sub
daa
sub
jg
stc
js
movsl
inc
out
test
arpl
mov
loopne
add
ret
lods
daa
sub
ficoms
test
xor
mov
sbb
cmpsl
fs
mov
iret
cwtl
add
dec
cmp
out
test
mov
mov
imul
mov
repnz
sub
mov
xor
imul
jp
cmp
jp
push
sbbl
sti
xchg
mov
or
dec
mov
cmp
mov
cmp
sti
pop
fildll
cltd
push
push
dec
dec
call
or
in
dec
pop
xchg
and
addr16
not
mov
mov
xor
cwtl
jl
xchg
int3
lds
fdecstp
and
test
and
xor
pop
stc
inc
in
aaa
inc
or
jbe
sub
int
xchg
sub
out
aaa
mov
pushl
fwait
enter
in
cmp
mov
lds
push
jp
or
rcrl
mov
push
imul
adc
aad
dec
jmp
cmp
js
jo
stc
xchg
fs
xor
mov
mov
push
jne
mov
push
xor
push
test
inc
loop
jl
pop
scas
mov
mov
push
rol
mov
add
insb
pushf
das
cmp
jno
in
stc
sub
cmpsb
mov
mov
imul
das
daa
adc
dec
push
stos
push
orb
or
call
lock
xchg
xchg
pushf
xlat
mov
lods
outsb
or
add
out
adc
push
mov
jge
test
inc
pop
lds
das
ret
scas
jns
dec
ds
push
in
inc
cmc
daa
movsl
dec
cmp
xchg
rorl
sub
inc
popa
popf
inc
mov
jnp
fstl
xor
xchg
out
push
fidivl
test
jmp
cmpsl
cli
lahf
xorb
imul
xor
les
cmp
out
mov
jo
mov
mov
xor
push
int3
sub
sub
and
dec
jbe
icebp
mov
push
xchg
jle
scas
jg
and
js
mov
pop
cmc
xchg
dec
pop
lds
cltd
xor
mov
inc
fwait
or
jmp
xor
inc
test
fldcw
stos
lahf
dec
jbe
out
sbbl
loope
add
fsubrl
inc
adc
xor
data16
pop
retw
push
sbb
scas
nop
loopne
sub
jge
movsb
mov
or
lods
dec
lea
xchg
repz
mov
fidivrs
xor
push
mov
sti
sub
pop
and
inc
outsb
mov
inc
fadd
add
adc
fmull
push
pop
inc
in
es
ljmp
cs
push
sub
jecxz
imul
xchg
stc
mov
jmp
inc
or
pop
xor
sbb
test
xchg
jp
pusha
or
jo
dec
dec
adc
sbb
inc
scas
pop
xor
imul
imul
mov
in
mov
mov
inc
xchg
cwtl
loope
mov
add
cld
cmc
mov
out
cmp
jne
jnp
fdiv
setl
lret
sarl
jbe
ljmp
sarb
and
mov
imul
lcall
push
jmp
ficoml
jno
pop
lock
test
adcb
into
jbe
jno
sahf
jne
fidivrl
lock
mov
mov
cmp
je
loopne
test
and
sub
pop
adc
cmc
bound
fcmovb
cmp
jmp
mov
nop
mov
loope
mov
xlat
repz
nop
jl
mov
mov
lcall
test
imul
das
mov
xchg
das
dec
pop
fcmovnbe
or
je
je
mov
inc
test
mov
push
push
xchg
push
sbbl
movsl
xlat
pusha
add
mov
jecxz
push
push
mov
cmp
and
dec
jnp
loope
out
es
icebp
mov
andl
mov
inc
push
xor
daa
lcall
or
sub
mov
sub
fldcw
iret
aam
popa
outsl
loop
or
test
mov
adc
add
popa
mov
mov
xchg
pop
adc
outsb
fstpt
into
push
push
cld
pop
pop
xor
mov
sub
xchg
in
rep
in
fbld
cltd
ljmp
call
cmp
lods
scas
inc
mov
dec
out
das
fmuls
sbb
sbb
rcl
jecxz
dec
lock
push
imul
dec
aaa
out
divb
dec
cli
jne
out
sub
hlt
mov
stc
xchg
fmull
sti
mov
jnp
out
enter
xlat
jns
push
xchg
mov
test
mov
pop
inc
out
pushf
cmp
pop
jle
inc
jge
rcl
insb
mov
mov
dec
outsl
movsb
dec
dec
lods
mov
xchg
mov
outsl
jmp
xor
xchg
gs
dec
mov
inc
push
out
cmp
push
adc
lret
xchg
pop
std
jo
mov
loopne
out
dec
add
jmp
jp
cmpb
mov
scas
cld
ret
push
inc
sbb
pop
clc
mov
push
idivl
push
xchg
and
mov
mov
sbb
leave
ret
jne
popa
jmp
fucomp
add
out
push
mov
jne
lcall
in
pop
repnz
or
scas
popf
mov
sub
sub
inc
icebp
mov
call
pop
mov
jge
sub
mov
stc
test
xchg
inc
mull
and
nop
cmpsl
int3
imul
dec
aaa
iret
rcrb
mov
rclb
es
lock
jns
fwait
mov
add
icebp
popf
pop
stos
insb
icebp
inc
sbb
add
movsb
pop
je
jnp
adcb
scas
fs
and
addl
clc
and
xchg
cs
xchg
mov
hlt
bnd
out
mov
mov
inc
and
in
and
rorl
jge
jo
aas
dec
dec
adc
pushf
icebp
dec
inc
xlat
mov
pop
xchg
out
xchg
push
in
arpl
imul
fsubr
pop
xchg
popa
jg
inc
sub
aam
dec
cmp
cmp
jg
xchg
cmpsl
mov
xor
push
cmc
mov
jecxz
inc
stc
mov
ss
and
cmp
jp
and
fistl
xor
or
int
aaa
push
pusha
or
pop
mov
scas
addr16
lahf
push
std
or
je
ror
imul
mov
pop
dec
aaa
loopne
imul
cmp
sub
push
jl
mov
xchg
push
repnz
je
pop
shlb
push
sar
in
dec
imul
popf
outsb
mov
sbb
xchg
out
sbb
jno
mov
add
sub
int
adc
pushf
xor
cmpsl
loop
and
leave
insl
sti
out
sbbb
jge
mov
mov
add
movsb
dec
or
inc
outsl
gs
xchg
xchg
scas
or
sub
xchg
mov
ret
sbb
es
movsl
pop
add
nop
xchg
pop
jmp
cmpsl
push
xor
test
push
jle
push
push
lea
xor
cld
or
nop
fsts
and
or
push
ljmp
daa
dec
stos
xor
lds
jmp
mov
sahf
mov
jno
insl
push
call
sub
movsl
test
in
js
fisubrs
inc
xchg
pusha
test
sub
popl
inc
icebp
icebp
and
mov
lods
xor
nopl
push
outsl
pop
mov
daa
xor
aam
adc
pusha
cmpl
lahf
sbb
mov
fsubl
ja
mov
jns
mov
adc
sbb
adc
xorb
mov
mov
ds
pop
sti
loope
ljmp
xor
adc
adc
mov
das
dec
jo
repz
stos
inc
in
xlat
andl
cmp
call
mov
jecxz
dec
lcall
xchg
dec
lods
mov
stc
push
test
push
jp
sbb
enter
enter
jno
jb
cmp
aad
dec
adc
mov
inc
inc
cmp
jb
das
inc
and
enter
mov
scas
pop
cltd
movsl
cmp
cmp
mov
imull
cmp
loop
dec
out
test
test
test
mov
in
call
fcoms
and
enter
mov
scas
xchg
mov
or
cld
outsb
jp
cmp
push
sbbl
sahf
ret
and
mov
adc
mov
repz
xlat
aaa
push
aaa
jne
xchg
inc
shr
addl
jecxz
es
mov
mov
movsl
cmp
and
call
jns
outsb
iret
mov
mov
jp
decl
mov
pop
xchg
and
adc
push
idivl
imul
fnstcw
xchg
and
daa
jnp
out
sbb
lods
bound
sbb
pop
sub
or
cmpsl
outsl
push
in
inc
fimuls
testb
cs
push
mov
jb
jge
inc
inc
and
scas
jb
ret
add
das
xchg
pop
loopne
xchg
sbb
mov
jl
jnp
pop
cmp
dec
lret
adc
test
out
push
ficoms
out
cld
ss
fisubs
mov
mov
xor
testl
ret
loopne
into
mov
orb
xchg
sub
add
aaa
into
jmp
test
jns
aaa
inc
popa
push
pop
ja
pop
aas
fwait
sti
mov
movsl
jne
xchg
int3
push
mov
in
pop
and
mov
xor
jmp
lret
dec
test
ss
mov
fwait
or
lcall
inc
rolw
or
cmp
in
test
mov
mov
pop
subl
cmp
scas
and
lret
pop
outsb
pop
into
xchg
jns
xchg
lock
in
add
cmp
std
or
cmp
push
pop
imul
je
jb
mov
bound
jne
push
add
mov
roll
or
jbe
adc
xor
mov
inc
inc
lods
add
push
xchg
out
xchg
movsl
xor
loop
or
iret
mov
mov
mov
lds
cld
cmp
flds
pop
sub
fyl2x
pop
dec
inc
inc
push
lock
stc
int
and
cmp
lods
mov
sahf
lods
push
popa
adc
mov
mov
add
gs
loop
pop
fldenv
jecxz
aad
mov
or
sub
mov
flds
test
and
jg
dec
sub
mov
nop
adc
add
outsb
lret
push
or
push
jge
out
xchg
and
int3
or
filds
adc
dec
add
into
fdivl
and
stos
mov
enter
cli
and
jecxz
int3
jg
xor
test
sahf
xor
mov
mov
mov
call
push
sbb
push
ja
push
test
popa
push
cli
loop
add
xchg
xchg
mov
je
mov
call
stos
jp
adc
rcrb
inc
pop
hlt
pop
movb
das
add
outsb
sbb
shl
jnp
inc
mov
mov
mov
jle
stos
jb
in
sub
je
and
jge
hlt
ja
xor
fs
sbb
popf
inc
shrl
mov
fmulp
pop
movsb
push
sbb
aam
sbb
pop
xor
push
push
mov
imul
pop
mov
mov
test
arpl
adc
ficompl
inc
mov
mov
test
movsb
or
imul
test
pop
mov
pop
frstor
adc
sbb
push
add
lcall
int3
jge
ret
cwtl
adc
pop
xor
cmp
mov
cmp
ficoms
sub
mov
xor
add
adc
add
pusha
aaa
cmp
pop
mov
xlat
outsb
mulb
jecxz
pop
cmc
fldt
push
stos
xlat
cld
jl
fstpl
lret
xor
mov
mov
pop
ret
adc
popa
in
dec
pop
mov
pop
pusha
test
adc
jg
popa
jnp
jbe
jns
arpl
xchg
mov
cmp
mov
mov
fadds
cltd
rolb
jle
xor
push
mov
ss
in
imul
jge
aaa
push
mov
sub
daa
pop
jecxz
mov
dec
xor
outsb
xor
ret
pop
mov
fidivs
xchg
jle
rclb
xchg
xor
pop
dec
dec
movsl
aad
loope
cmc
mov
lret
sbb
or
insl
movsl
movsb
rolb
es
adc
sub
mov
add
test
lods
or
mov
cmpsl
lret
fadd
insb
cs
out
pshufw
adc
popa
xchg
fisttps
xlat
push
mov
mov
mov
mov
inc
fsubrs
stos
cmpsb
sbb
stc
pop
adc
mov
iret
lcall
int3
jb
outsl
rorb
fimull
and
push
cwtl
insl
pop
dec
nop
loop
ljmp
push
or
cmp
mov
movsl
jle
mov
cld
test
ret
dec
dec
jb
das
fsubl
dec
arpl
dec
out
gs
sti
mov
jae
btc
daa
shlb
push
add
sub
add
aas
clc
jno
cmp
clc
idivl
or
sbb
sub
gs
pop
sti
rolb
and
xor
sub
dec
fldenv
jae
stos
rcr
arpl
sbb
ret
cmc
cltd
adc
movsb
fwait
mov
movsl
sti
push
sahf
inc
test
or
cs
pop
jo
sub
outsl
sbb
pop
test
push
nop
fsubl
mov
js
mov
sbb
loop
dec
xchg
mov
pop
das
or
aad
mov
outsb
shl
imul
mov
jae
and
fwait
bound
inc
inc
mov
popf
fnstenv
dec
cmp
push
sub
and
bound
push
dec
popf
loopne
into
and
mov
outsb
sbb
jle
dec
ja
pushf
js
adc
int
call
sub
cld
mov
cmpsb
mov
fsubs
cmpsb
sub
sbb
jle
xor
push
fildl
out
decb
call
mov
aaa
xchg
push
sbb
jle
or
imul
and
orb
fldenv
sub
cmpsb
shrl
mov
push
imul
imul
fwait
inc
scas
and
aaa
adc
jmp
mov
imul
cmc
dec
xor
iret
enter
lock
cmp
and
jmp
inc
imul
sub
dec
pop
and
sbb
adc
rcr
sub
and
push
inc
mov
push
lret
push
mov
sahf
push
out
adcl
lock
cmp
shl
sbb
lock
jle
les
adc
push
pop
sbb
jp
cmp
and
push
and
push
and
sub
mov
int
out
iret
les
or
cmp
cwtl
lahf
jo
ret
pop
cmp
leave
vpsubw
dec
dec
sub
or
popa
inc
sbb
cmp
jmp
in
pop
lds
stc
rcll
test
popf
mov
dec
sbb
test
jns
in
or
adc
insl
in
push
fmull
outsb
shrl
enter
aaa
in
rclb
mov
mov
add
mov
inc
rol
repnz
sub
out
es
orb
inc
dec
and
cmc
cmpsl
sbb
cmp
jl
popa
sbb
imul
lock
mov
xor
dec
loope
xlat
inc
pushf
jae
call
jecxz
cmpsb
popf
int3
les
jae
aad
ficomps
cwtl
outsl
jnp
sbb
inc
outsl
std
and
out
push
aad
xchg
add
jns
js
xor
push
jne
jge
xchg
xchg
adc
or
js
jle
rcrl
pop
and
mov
xlat
xchg
hlt
notb
mov
bound
lcall
cmp
jle
xchg
cltd
xchg
sub
pop
xor
aaa
sub
pop
jbe
in
push
data16
dec
cmp
sub
push
push
or
jl
sub
aaa
mov
call
rclb
out
je
fwait
and
repz
inc
jbe
ja
pop
xor
dec
fldl2t
push
xchg
mov
mulb
pop
ss
insl
pop
push
jmp
sub
js
mov
fld
inc
pop
loop
fcmovne
enter
aas
stos
sbb
les
and
jmp
adc
inc
andl
nop
sarl
add
cmpsb
cmpsl
sub
mov
aaa
aad
sub
adc
dec
sahf
repz
cmpsl
mov
lds
lods
xchg
jle
dec
sbb
cmp
jb
mov
push
pop
pextrw
jo
cwtl
lods
jne
mov
nop
aaa
fmull
dec
dec
xor
mov
pop
xor
cmp
push
cmp
jo
mov
dec
mov
imul
push
mov
or
mov
jns
ds
ljmp
dec
fmull
call
or
je
aad
imul
dec
cs
aaa
sbb
inc
cld
ret
pop
jmp
ret
and
lret
inc
loope
out
push
mov
and
or
mov
mov
test
outsl
mov
jb
stos
mov
xlat
pop
stos
stos
lea
xchg
xchg
xor
mov
test
mov
dec
imul
insb
xor
pushf
pop
push
mov
stos
out
popa
sarb
inc
adc
xchg
add
popf
lods
xchg
outsl
inc
cltd
in
fwait
lret
jns
and
cmp
cmp
insl
test
mov
push
sbb
mov
or
testb
scas
mov
cmp
sbb
mov
adc
int3
push
rolb
das
inc
push
and
jge
mov
nop
xchg
ss
es
inc
jle
inc
cmp
clc
dec
pusha
mov
sbb
mov
xchg
pusha
in
dec
xchg
rcrl
mov
xor
xchg
out
push
cmp
repz
push
lock
or
sub
pushl
leave
outsl
mov
addr16
aam
insl
sbb
xor
lea
fs
movsb
mov
push
iret
fildl
mov
push
sbb
sbb
adc
xchg
xchg
test
pushl
movsl
lds
pop
lds
or
or
add
pop
mov
gs
pop
xchg
into
cmp
fisubrl
push
outsl
adcb
pop
xlat
in
out
jmp
mov
out
addr16
enter
mov
mov
icebp
cmc
sti
mov
icebp
divb
adc
bound
inc
pop
sbb
mov
aaa
stos
lds
dec
arpl
clc
rcll
sysret
xlat
movsb
adc
xchg
jl
imul
out
shrb
sbb
push
jo
xor
arpl
ja
cmp
and
mov
mov
fstpl
inc
sbb
ja
scas
stc
cmc
cmp
cld
test
mov
push
mov
mov
lea
sub
clc
xchg
loop
mov
mov
add
mov
in
jg
pop
repnz
add
and
xsha1
cmpsb
mov
sbb
adc
std
fwait
aaa
or
lret
pop
fs
dec
and
bound
cmpsb
push
xor
js
stc
bnd
dec
data16
out
rorb
ficomps
push
and
push
ss
lret
cmp
imul
pop
jg
adc
mov
test
add
int
pop
icebp
dec
inc
mov
cmc
les
xor
outsl
je
cltd
push
mov
clc
lret
fs
repz
pushf
dec
adc
inc
insb
add
mov
lret
fimull
or
adc
cmp
sub
je
in
push
addr16
cli
dec
sbb
jmp
subl
mov
xchg
dec
xchg
mov
mov
and
lcall
imul
popa
cmpsb
jno
push
xchg
imul
sbb
add
test
push
adc
dec
stc
inc
add
and
sahf
pop
or
es
xchg
xor
xor
adc
dec
es
jecxz
orb
jecxz
in
daa
dec
sub
sbb
sbb
jo
sbbl
mov
push
inc
push
add
push
repnz
push
nop
imul
and
xchg
sub
jbe
sbb
andb
lret
and
and
jmp
adcl
and
lock
push
lea
push
jb
sub
inc
in
test
mov
or
sti
lea
add
ret
cwtl
mov
fstl
xor
push
ret
sarb
out
vpsraw
mov
lahf
mov
ja
pop
fmul
lret
andl
lods
cmp
fstps
arpl
in
adc
xor
mov
bound
push
or
movsl
out
popf
xchg
push
mov
sbb
mov
sub
pop
subl
xor
cltd
cld
xor
and
call
stc
inc
xchg
dec
insb
scas
sub
sahf
mov
inc
adc
cli
push
add
fwait
mov
cld
xchg
mov
or
pop
andb
divl
push
inc
sbb
adc
ret
push
mov
dec
pop
cli
mov
xchg
pop
jg
into
in
mov
sub
in
rcll
mov
adcb
and
movsl
adc
fcomps
invd
mov
cmp
popf
fwait
cmp
adc
nop
arpl
adc
inc
loopne
arpl
xchg
cmp
adc
push
xor
mov
iret
data16
cmp
push
enter
es
das
filds
in
cmp
mov
arpl
jns
outsb
shll
mov
addr16
xor
jmp
xchg
push
fcmovnb
xchg
scas
imul
es
pop
mov
out
cmp
jno
notb
loop
gs
jg
push
mov
inc
into
jbe
in
cmpsb
dec
pop
js
dec
sbb
adc
fadds
outsb
scas
fcoml
test
add
popa
es
jmp
xchg
fldt
jg
jo
arpl
test
sbb
stc
jecxz
repz
cmp
xchg
in
inc
dec
push
cmp
out
fistps
mov
test
xchg
cmpsl
rorl
shr
test
dec
mov
popf
push
mov
ret
scas
pop
and
xchg
dec
sti
aas
inc
sub
jbe
lret
sub
mov
inc
pop
xchg
jg
pop
sub
sbb
jecxz
pop
cmp
es
push
mov
mov
mov
or
lahf
dec
or
cwtl
add
xchg
xor
daa
out
pop
es
cltd
push
push
add
jb
adc
scas
pop
cmp
aam
pop
mov
pop
lock
mov
inc
icebp
movsl
jmp
fsubrs
xchg
adc
xchg
adc
mov
fdivp
jo
loop
hlt
and
sub
inc
cmp
in
testl
scas
pusha
pop
mov
faddp
pop
out
dec
icebp
lods
adc
bound
iret
cmp
push
push
pop
xor
addb
inc
ds
cmp
jae
and
lods
ja
push
pop
ss
and
and
cmpl
mov
mov
xor
jmp
inc
cmp
push
call
pop
sbb
or
xchg
inc
pop
lds
and
sbb
jmp
push
pushf
sbb
inc
dec
in
in
cli
jno
cmp
insl
out
divl
cmp
es
sub
lods
inc
or
pop
insl
push
fldenv
outsl
cmp
and
xor
lds
or
loopne
mov
stos
in
mov
adc
mov
es
mov
out
xor
mov
faddl
movsb
and
movsb
lret
dec
popa
dec
lea
or
sti
add
cwtl
mov
bound
sbb
test
xor
gs
sub
cld
push
mov
repnz
ds
divb
pop
dec
xchg
sbb
enter
mov
subb
xchg
pop
andl
push
je
push
adc
xchg
cs
andl
mov
cld
outsl
ljmp
cmp
popf
ss
popf
pop
cmp
inc
sub
ret
cmp
cmpsb
push
xchg
pop
mov
pop
addb
add
dec
sub
call
fdivrl
icebp
pshufw
inc
sbb
imul
mov
ss
popa
xchg
add
dec
pushf
xchg
dec
xor
lock
dec
daa
scas
aam
mov
dec
jge
xlat
hlt
fidivs
addr16
ret
xchg
imulb
mov
mov
inc
loop
scas
xchg
test
jmp
fmull
push
sub
jbe
ret
rol
test
ja
out
or
test
sub
jl
mov
cmpl
push
dec
ret
jp
inc
neg
dec
push
movsl
mov
cmpsl
imul
push
add
mov
repnz
jmp
mov
js
movb
cmp
sub
mov
pop
test
push
push
sub
jno
fdivrs
pop
test
shlb
pop
pop
and
mov
mov
popa
mull
mov
cwtl
inc
imul
inc
inc
jno
or
lods
aam
mov
mov
lcall
xchg
rorl
mov
incb
adc
inc
pushf
notb
sub
xor
aas
stc
add
lcall
cmp
xor
sub
jne
and
xchg
loopne
in
push
into
sbb
imul
push
test
pop
jge
and
add
jnp
stos
hlt
sbb
inc
xchg
les
les
mov
or
jg
in
enter
sahf
push
dec
pop
aam
dec
test
mov
push
ret
aad
in
xor
aam
mov
sar
xor
push
jne
dec
pushf
cs
pop
jno
inc
sbb
push
out
pop
pop
mov
pop
fisubrl
push
adc
mov
ljmp
scas
push
jbe
fcompl
imul
loop
loope
or
roll
and
sbb
mov
mov
and
data16
aad
xor
inc
pusha
sub
adc
sbb
shlb
add
mov
ja
divl
jl
mov
js
mov
in
insb
push
push
pop
loope
adc
cli
add
sub
repz
lret
sbb
pop
js
fwait
push
and
mov
xchg
lods
jo
lahf
mov
or
sub
push
inc
sahf
mov
outsl
adc
fistpll
mov
into
fidivrl
test
out
xchg
add
lcall
and
or
mov
sub
test
mov
jg
clc
mov
and
jmp
jge
fisubs
jl
inc
stc
mov
sbb
mov
xlat
jb
mov
int
js
in
push
and
xor
mov
xchg
cld
xchg
dec
cld
add
popf
jg
push
dec
lds
dec
std
popf
fsubrl
jmp
mov
clc
dec
shl
lds
repz
dec
dec
cmp
cmp
rclb
lock
pop
dec
pusha
jl
xchg
outsl
jecxz
push
sbb
repnz
fsubrs
adc
addr16
mov
in
test
stos
ds
pop
sbb
jae
cmp
xlat
mov
popa
mov
stos
adc
pop
adc
sarb
adc
xchg
mov
jo
imul
lcall
inc
cwtl
bound
repnz
inc
sub
jl
les
outsb
imul
rclb
mov
sub
call
xor
mov
test
icebp
cmp
stos
lods
cltd
psrad
inc
popa
addb
arpl
insb
sub
test
enter
mov
push
pop
es
popa
test
cltd
jbe
sub
shrl
or
ljmp
mov
sbb
call
push
roll
mov
lret
enter
xchg
push
cmp
pop
adc
fistps
in
pop
xchg
daa
lcall
push
cwtl
mov
fdivrl
push
sub
pushf
addr16
mov
inc
xor
jno
call
cwtl
iret
or
gs
pop
icebp
sahf
mov
cmc
lds
mov
mov
or
xor
lahf
sub
lods
inc
mov
pop
mov
pop
push
imul
push
sahf
arpl
movsl
clc
popa
cli
shll
pushf
adc
add
push
mov
and
addr16
mov
push
xchg
out
movb
cmp
add
addr16
sarb
cmc
lahf
add
pop
sub
loopne
xchg
imul
dec
movsb
hlt
adc
push
xchg
xchg
xchg
sub
or
xor
jbe
mov
jmp
add
mov
orb
push
clc
in
push
xchg
int
jmp
mov
test
cmp
sub
mov
mov
sbb
and
mov
push
jge
fadds
xchg
xor
inc
adc
aas
movsl
pop
xlat
pop
mov
sub
pusha
jae
pop
scas
jp
hlt
push
push
outsl
inc
mov
jb
bound
sub
sub
mov
repz
pop
jmp
aaa
xor
adc
rcll
jae
out
arpl
add
lahf
mov
adc
mov
pop
jae
or
sarl
cmp
jp
pop
icebp
xor
jb
out
fistpll
adc
pop
popf
xor
fstps
cli
push
cmpsb
push
pop
js
push
mov
and
addl
stc
leave
jb
add
push
xor
xchg
leave
dec
lods
mov
xlat
pop
sub
dec
rcl
mov
rol
mov
jne
cmp
pop
repz
mov
ss
push
mov
outsb
das
dec
add
pop
adc
jns
cltd
sub
imul
popf
outsl
jmp
mov
repnz
mov
jne
out
cmpsb
sub
iret
pop
leave
shlb
jecxz
rorl
cltd
pop
mov
testb
xlat
jns
push
loope
inc
mov
mov
or
pop
fbld
fwait
movsb
ja
mov
out
orl
and
xor
aas
push
pop
push
je
clc
je
test
jno
and
sub
aas
outsb
cmc
aaa
mov
push
dec
xchg
sbb
jg
cwtl
scas
inc
in
mov
mov
pop
mov
and
xor
arpl
les
adc
mov
pop
cmpsl
xchg
in
out
ss
cmp
push
xchg
sub
out
cmp
shlb
pop
fdivs
ss
paddusw
adc
xor
fwait
cwtl
pop
in
clc
and
cmpsl
fidivs
int
fwait
lcall
dec
es
nop
fdivrl
fdivrs
jno
sub
mov
mov
nop
push
push
out
test
jne
xor
adc
inc
xor
fucomi
daa
gs
mov
les
sub
mov
fwait
sub
das
subl
out
in
xchg
bound
mov
clc
nop
pop
xlat
mov
mov
scas
jae
shrl
mov
jns
and
jg
mov
mov
aad
icebp
push
enter
movsb
add
aad
in
in
pushf
xor
stos
inc
adc
mov
fsubl
push
in
in
push
je
cmp
adc
nop
sub
jne
sub
sub
dec
aam
shl
jno
loope
nop
call
jge
lods
and
fists
sub
dec
dec
mov
fcmovne
and
aaa
gs
xchg
pop
adcb
int
xor
fcomps
add
std
sub
adc
and
and
add
stc
xor
push
shlb
outsl
pop
jno
jo
xchg
dec
pushl
jle
int3
adc
cmp
int
cltd
pop
jbe
or
cmovge
xor
jle
xchg
lock
push
xchg
inc
test
fs
jae
lea
arpl
in
ds
outsl
repnz
outsb
hlt
adc
insb
or
mov
push
add
sub
js,pt
mov
jg
dec
and
jge
loopne
inc
cmp
push
insb
addr16
je
xor
gs
mov
add
mov
stos
or
test
clc
movsb
aas
mov
adc
push
xchg
and
fdivrl
out
inc
dec
xor
or
xor
mov
sti
pop
dec
stos
push
sbb
test
fcompl
sub
xorb
rcll
xor
xchg
xor
rep
xor
imul
sub
and
lea
outsb
scas
outsb
cmp
lahf
hlt
or
mov
add
movsl
mov
mov
cmp
rcrl
xchg
loop
aaa
inc
add
stc
sbbl
push
pop
insl
cmpb
mov
inc
les
add
jo
pop
in
xchg
cmp
data16
or
jbe
push
lods
insl
data16
xor
int
and
loop
aas
ljmp
leave
push
mov
sbb
adc
push
mov
add
imul
or
sub
adc
push
fisubs
xchg
and
pop
cwtl
adc
lods
pop
fs
scas
loop
cmp
dec
repnz
add
fwait
test
stos
in
mov
insl
mov
gs
adc
sbb
cmp
outsl
insb
ss
out
pop
testb
mov
jg
fs
std
xchg
punpckldq
scas
and
les
mov
aaa
sub
jl
mov
mov
lea
adcb
xchg
inc
push
and
sbb
inc
cmp
cmpl
or
es
or
and
sub
sbb
xor
dec
mov
leave
bnd
loop
adc
sub
ss
jnp
add
cmp
pusha
ss
mov
adc
fmul
mov
or
push
fnsave
mov
xchg
inc
mov
cmc
jl
dec
xchg
loope
scas
xchg
dec
in
lret
cld
or
jmp
mov
int
pop
push
mov
push
aad
mov
cmp
ret
div
popa
mov
mov
sbb
arpl
pop
add
idivl
push
and
adc
cmc
xchg
imul
stos
and
xchg
push
arpl
movb
xchg
xchg
sub
decl
cmpsb
dec
xchg
and
push
and
andl
sub
xchg
ss
xlat
cltd
jmp
pop
hlt
dec
std
test
cld
inc
jecxz
stos
pop
in
mov
sbb
ss
nop
addl
std
xchg
in
daa
push
sbb
sahf
fs
in
add
add
add
ds
mov
mov
cmp
pop
mov
mov
ljmp
call
jb
xchg
mov
sub
in
pusha
lods
mov
add
xchg
pop
loope
int
mov
test
jo
popa
fwait
xchg
mov
fidivl
fldcw
pop
mov
js
mov
or
int3
int3
cmp
pop
push
pop
repnz
cmp
cli
sub
pop
dec
pop
rcr
loop
fcmovb
es
and
iret
popf
mov
and
mov
xchg
sbb
cmc
mov
xchg
imul
add
cwtl
xorl
bound
lock
or
mov
ljmp
ret
ret
mov
loope
push
loope
adc
pop
enter
shl
mov
ljmp
mov
dec
push
insb
icebp
movsl
pop
adc
xchg
sbb
sarb
push
inc
pushf
out
std
mov
adc
lahf
sbb
outsb
fnsave
les
xchg
add
lret
cmp
repnz
dec
mov
ja
fidivrl
mov
mull
and
pop
push
ljmp
stc
jg
push
and
jg
insl
adc
sub
pop
rol
lea
or
sbb
or
lcall
fistpll
pushf
pop
push
push
jmp
add
test
inc
push
xchg
dec
sbbl
scas
roll
mov
pop
imul
mov
fsubr
xor
sbb
add
leave
pop
int
mov
cmp
xchg
outsb
ror
xchg
adc
cmc
push
out
push
sti
jbe
les
jmp
iret
push
call
add
repnz
sbb
inc
fwait
xchg
leave
cmp
cmp
and
cmp
and
popf
shll
repz
xchg
fidivl
pop
jecxz
sbb
mov
loopne
movsl
adc
testl
dec
jg
mov
push
cmc
imul
mov
fisttps
sbb
push
mov
sub
fcmovnu
sbb
loope
inc
test
sub
xchg
ja
and
cli
inc
movb
push
mov
xchg
test
or
xor
xchg
imul
scas
xchg
testb
or
and
jl
mov
rcrb
shlb
ret
jne
je
insl
stos
out
lret
int3
hlt
adc
pop
je
add
ljmp
dec
adc
fcmovu
test
mov
je
sub
mov
nop
cmovne
rorb
loop
insb
push
mov
addr16
cmp
popa
shlb
mov
leave
cs
fsubp
cmp
adc
imul
adc
mov
and
mov
add
xchg
adc
imull
imul
insl
es
stos
jecxz
in
iret
xchg
sub
je
dec
cmp
xchg
sub
mov
aas
push
sbb
rcrb
cmc
loop
adc
daa
cbtw
loope
jbe
addr16
cwtl
lea
aam
clc
cmp
mov
mov
loop
xor
cmp
pop
dec
push
adc
xchg
push
test
cmpsb
xor
pop
lods
and
cmp
imul
imul
pop
jb
mov
cmp
sub
and
shll
push
mov
xchg
mov
cmc
out
jb
scas
mov
dec
sub
adc
and
push
add
cmc
mov
jae
ds
lods
out
cli
or
sub
inc
pop
pop
jmp
test
in
sub
out
cmpsb
out
cs
dec
mov
sbb
stos
inc
jmp
aaa
lds
mov
xchg
inc
popa
std
loop
push
mov
cmp
push
sub
jne
test
fwait
dec
stc
iret
sub
mov
xchg
stos
mov
into
cwtl
xchg
dec
mov
and
js
lods
pusha
neg
push
in
fisubrl
or
subb
xchg
hlt
movsb
fisubl
jecxz
xchg
mov
hlt
ja
test
xor
and
xor
data16
jne
movsl
cmpsb
add
data16
call
xor
xchg
sbb
loop
mov
dec
dec
dec
movsb
repnz
out
int3
dec
xchg
fists
fcoml
jae
adc
mov
push
idivb
lds
jno
inc
loop
xor
mov
rcll
cmp
aaa
push
xor
lock
inc
es
mov
vpandn
cmpsb
jo
mov
mov
lods
je
adc
push
cld
cmp
gs
loope
in
inc
out
sbb
hlt
orl
and
and
dec
and
jp
out
jb
xor
nop
xchg
outsl
icebp
ds
mov
add
pop
fsts
mov
mov
sub
rclb
add
lret
cmp
ret
es
in
and
xorl
add
sahf
subb
dec
sti
jne
jo
cltd
lret
clc
idivl
cltd
adc
push
xor
insl
cmp
arpl
cmpsl
out
sbbl
aas
lods
lahf
mov
or
or
pop
fbstp
cmp
cli
adc
imul
push
push
jno
lods
xchg
aam
jle
add
movsb
jg
add
jg
insb
fsubr
pop
or
inc
enter
adc
push
lods
jle
in
add
cmp
inc
cmc
popa
fsubl
sbb
dec
fcmove
mov
mov
into
adc
call
and
pop
inc
lock
mov
sub
in
mov
mov
xchg
mov
iret
jl
push
or
xchg
daa
lret
cmp
push
sub
sub
ja
jb
out
ja
jbe
push
inc
mov
cltd
inc
into
test
sti
and
dec
xor
int3
bswap
call
repnz
packssdw
mov
lcall
in
insb
mul
jp
loop
sbb
cwtl
insb
push
daa
lcall
sub
or
das
inc
adc
popf
into
or
sbb
shlb
test
fists
test
lret
jl
out
cmp
movsb
xorps
inc
jne
add
sahf
pop
hlt
adc
ss
xchg
test
stc
iret
pushf
scas
les
push
ljmp
push
sub
shlb
push
jl
hlt
lds
dec
in
xchg
jge
adc
jns
cmp
or
imul
ds
cltd
inc
insl
sub
mov
mov
push
popf
fsts
or
push
pusha
lock
pop
shll
adc
mov
dec
mov
scas
shrb
insb
lahf
push
pop
movsl
sub
sub
and
cmp
adc
push
pushf
sarl
sahf
pusha
cmp
pop
les
xchg
mov
adcl
fld
ds
jle
pop
ffree
mov
in
loop
lods
lcall
cld
cmp
es
data16
out
xchg
jge
inc
xor
pushf
inc
inc
movsb
out
in
lret
popa
fidivrs
mov
mov
divl
stos
mov
inc
fisubrl
cmp
daa
jl
xor
adc
jle
dec
icebp
repnz
jp
les
icebp
xchg
imul
out
test
dec
dec
aaa
sar
mull
pop
push
or
je
jp
fldlg2
mov
into
sbb
mov
sahf
call
adcl
shrb
xchg
mov
in
mov
mov
adcb
or
xlat
pop
xor
scas
in
mov
idivb
or
imull
cmc
std
and
lods
out
add
and
movsb
dec
jae
movsb
cmp
cmpb
xchg
aaa
mov
and
aam
inc
jne
inc
sbb
jnp
mov
push
pop
ret
call
xor
ljmp
push
push
jle
adc
pop
xor
adc
aam
mov
rolb
int3
jg
sbb
cmp
testb
pop
push
mov
jno
sbb
inc
shl
jnp
mov
adc
aas
in
pop
pusha
aaa
or
insb
cmp
xor
loope
sub
push
and
ss
mov
ficoms
cld
cmp
int
sti
xchg
std
stc
xor
or
sub
in
adcb
pop
xchg
les
loope
mov
jecxz
icebp
jmp
push
leave
out
je
push
xor
aam
inc
cmp
mov
loop
in
test
xor
pop
outsl
add
stos
jmp
xchg
testl
xchg
and
pushf
sarb
or
out
pushf
add
adc
sbb
hlt
push
lods
es
dec
xor
pop
cmc
jecxz
pop
sbb
ss
cmp
inc
pusha
iret
add
cmp
push
xor
push
std
test
jl
mov
mov
add
sub
mov
jb
mov
sub
pop
rcr
dec
in
xchg
fwait
lret
mov
adc
ret
sbb
sub
iret
ret
cld
mov
mov
lods
sbb
sub
jecxz
insb
iret
lret
arpl
loop
xchg
ret
push
stos
jo
loope
xchg
mov
push
hlt
dec
mov
fsubr
cmp
pusha
in
xchg
daa
repz
pcmpgtb
int
xchg
js
call
dec
lds
movsb
pop
out
movsb
aaa
popa
stc
dec
loope
add
aaa
pushf
push
out
jle
sub
icebp
movsl
mov
ja
mov
xor
xchg
sub
jmp
inc
pop
sub
xchg
rcrl
and
push
daa
adc
dec
cmp
lcall
out
mov
mov
ret
jge
jmp
sub
xor
ret
sbb
xchg
jno
pop
hlt
jmp
push
adc
mov
daa
mov
jo
and
sub
jecxz
add
mov
add
pushf
mov
nop
push
mov
cltd
mul
mov
push
out
dec
in
xor
stos
loope
insl
testl
les
pop
mov
adc
das
jne
push
cmpsl
nop
dec
gs
int3
dec
loopne
jge
pop
cmp
pop
rclb
sub
push
or
push
dec
xchg
jmp
mov
or
jne
add
out
cmp
movsb
mov
adc
ss
in
addb
mov
lahf
in
mov
jns
repz
sub
fldt
and
lret
cmp
mov
aas
adc
sub
dec
mov
push
or
movsl
mov
js
or
test
popl
mov
enter
sub
jno
adc
mov
jl
les
int3
mov
outsl
or
adc
xchg
mov
and
mov
cld
mov
imul
sub
lock
push
and
push
jo
mov
jno
popa
ss
xchg
daa
scas
push
jb
int
pop
sahf
adc
jae
loopne
and
cmpl
push
push
push
fdivs
jne
js
xchg
inc
sub
jo
icebp
cmpsl
add
stc
lods
sarl
add
mov
fdivrl
stos
mov
pminsw
in
fs
xchg
sarb
lahf
imul
lea
mov
inc
sub
jmp
bound
mov
push
shrb
loopne
nop
xor
add
pop
jno
lods
sub
ds
xchg
mov
jae
dec
sbbl
cmc
inc
clc
mov
xchg
jne
mov
push
negb
pop
adc
jecxz
pop
repnz
inc
or
dec
cmp
sub
bound
sbbl
fildl
lea
mov
test
mov
movsb
dec
jp
pop
xor
jo
stos
inc
dec
mov
mov
or
sub
aaa
xor
imul
data16
mov
xchg
or
add
adc
rcll
jnp
xchg
subl
fildll
xor
adc
shr
test
lret
shrb
adc
sub
jae
scas
addr16
imul
mov
aaa
fisubrl
fbld
pop
mov
imul
es
addr16
inc
lahf
cmpsl
xlat
loop
adcl
mov
cmp
push
out
mov
jecxz
mov
xchg
notb
scas
jno
outsb
ds
fdivl
clc
push
fwait
movsb
sub
sahf
xchg
push
adc
mov
mov
aas
lock
aam
lea
lods
sbb
int3
pop
mov
dec
pop
mov
mov
out
pop
sti
mov
mov
mov
test
mov
rorb
cmp
jp
mov
add
push
push
enter
gs
push
aam
cld
and
pop
inc
sbb
sbb
stc
ficomps
ss
xchg
adc
cmp
subb
xorl
nop
cmp
fstps
pop
xor
fwait
das
dec
xchg
in
dec
mov
aad
jb
das
not
dec
fldcw
jmp
rorb
in
jmp
push
mov
or
push
out
or
jb
fnstenv
adc
mov
imul
jne
pushf
sub
push
dec
insb
pop
addr16
arpl
pop
jg
mov
ds
mov
xchg
pushf
push
lods
mov
into
aaa
ret
rcrl
fisubrs
add
inc
lcall
jmp
stos
sub
mov
int
mov
les
fidivrl
push
mov
jecxz
xor
fwait
imul
out
adc
test
aaa
clc
nop
mov
paddw
mov
loope
loopne
xor
ss
pop
lods
mov
insb
sarb
rcrb
xchg
sub
std
fs
sbb
pop
lret
cmp
incl
mov
rol
fwait
sbb
popf
and
icebp
mov
fwait
cmpsl
stc
adcb
out
push
or
jg
cmp
lea
push
dec
and
xchg
inc
fbstp
xchg
push
inc
cli
push
jae
or
insl
iret
or
mov
add
mov
iret
xchg
out
mov
loopne
in
test
add
testb
xor
push
jae
or
outsb
aaa
mov
lock
lock
and
insl
stc
test
aas
add
lods
popf
xor
sbb
scas
out
dec
push
call
sahf
mov
popf
scas
lock
scas
out
lret
or
je
push
jbe
adc
inc
decb
scas
loope
jne
push
mov
push
cmp
loopne
jae
mov
xchg
inc
ret
xlat
sub
mulb
dec
addr16
ja
xchg
inc
mov
xlat
fmull
or
sub
ja
mov
lcall
loope
and
pop
cmpsl
das
inc
push
movsl
jne
test
inc
cltd
xor
jmp
iret
inc
lret
push
in
adc
or
jbe
ljmp
outsb
jmp
fmull
mov
lret
pop
xchg
imul
dec
loop
add
les
add
xchg
addr16
pop
mov
adc
xchg
aaa
push
mov
mov
fcoml
pop
outsl
ljmpw
nop
jecxz
loop
push
fdiv
push
mov
xchg
pop
push
pop
ret
cmp
sub
je
pop
imul
fwait
pusha
in
jbe
mov
ljmp
orl
lods
fs
sub
pop
adc
mov
lret
mov
test
jne
jmp
add
ja
jns
or
and
or
cltd
xchg
push
ljmp
pop
or
data16
fisttpl
insb
dec
cld
adcb
nop
outsl
inc
inc
ret
sahf
mov
push
icebp
pop
xor
rcr
rcrl
movl
idiv
and
sub
or
or
mov
sbb
push
add
jle
mov
out
aaa
mov
lods
dec
fildl
out
imul
sub
xor
in
nop
lret
aad
sbb
cli
and
jns
cmp
shll
pop
mov
int3
inc
out
in
js
movsb
add
jle
in
loopne
jl
jmp
sbb
pop
mov
lea
fldenv
cs
xor
mov
jo
mov
out
xchg
push
sarl
push
mov
adc
in
icebp
dec
xchg
inc
mov
sahf
adc
test
cmp
testb
mov
out
mov
mov
iret
jno
insb
pop
cmc
pop
mov
fnstenv
add
ds
mov
push
daa
stos
xchg
scas
repz
ljmp
imul
xchg
jns
xor
mov
mov
fsubs
fsts
aaa
setns
test
cmp
out
mov
push
insl
sbbb
sbb
sub
cmp
pop
push
test
inc
negl
mov
lret
pop
xlat
scas
sbb
dec
mov
clc
push
rcl
xor
decb
sub
cld
push
jmp
shr
push
xor
lcall
stos
cli
push
and
mov
aas
psrad
sbb
cmp
jg
xchg
pop
xor
mov
lret
xchg
dec
fninit
cltd
jne
cltd
movsl
in
add
add
into
cmp
push
push
xchg
pop
jno
adc
andl
iret
push
mov
sbb
nop
outsb
inc
fldl
mov
mov
jp
lret
fwait
in
lret
clc
xor
push
fisttps
jae
das
out
or
iret
orb
or
mov
lods
pop
ret
and
sub
dec
dec
test
fbstp
mov
jns
mov
loop
jge
xor
add
int
lcall
icebp
push
and
jns
ljmp
in
xchg
dec
je
adcb
xchg
aad
inc
push
int
mov
ds
mov
hlt
jae
fpatan
and
dec
mov
adc
sti
xchg
loopne
loopne
mov
mull
daa
xor
mov
pushf
sbb
xchg
mov
push
stos
or
es
sub
mov
jb
push
jmp
and
in
das
mov
jns
add
xlat
sbb
repz
pop
ret
mov
sbb
sbbb
dec
out
subl
sbb
mov
fadd
int
orb
push
dec
xchg
adc
test
movsb
mov
cmc
fstps
or
in
orl
and
mov
jo,pt
pushl
test
sbb
xchg
nop
lret
xor
xchg
mov
jae
push
sub
jb
adc
pop
adc
rcrb
xchg
fs
fwait
xor
ret
rolb
add
call
orb
leave
mov
xchg
shlb
add
lods
jmp
inc
cli
popf
push
fsubr
addr16
shll
shll
add
xor
cli
cmp
daa
outsl
push
out
dec
shll
shll
into
int3
gs
sbbw
aam
fildll
ret
jle
jnp
jb
inc
jmp
adc
and
xchg
sub
dec
push
mov
add
cld
mov
mov
ret
lock
jl
xor
dec
mov
add
jae
mov
or
jne
clc
lret
dec
inc
bound
rolb
das
jg
add
lea
popf
ss
mov
add
js
xchg
xor
adc
lret
push
pusha
sbb
les
xor
imul
sub
jne
test
push
insl
mov
out
mov
sbb
ljmp
cmpsb
lock
mul
cmp
mov
cwtl
fnsave
dec
push
iret
incb
js
jmp
xorl
xlat
fidivrs
js
pop
push
addl
and
sti
das
mov
pushf
xchg
cmp
cmp
adc
push
ss
push
add
pop
adc
cmpsb
push
pop
aad
rorl
pop
jb
inc
outsb
add
jg
mov
jne
inc
cmp
inc
cmpsl
jae
push
mov
lret
cld
fidivs
push
sbb
or
push
pop
push
decl
lods
mov
push
add
arpl
push
test
push
xor
xor
mov
ret
and
sbb
rcrl
jge
push
cmp
cwtl
jge
fwait
cli
pusha
inc
pop
xor
out
inc
adc
xchg
int3
cld
outsl
mov
inc
push
pop
outsb
out
lahf
cmp
pcmpgtd
jge
paddusb
jle
in
inc
jnp
fsubr
addr16
sub
idivb
push
jecxz
xlat
dec
inc
mov
aaa
adc
mov
inc
or
outsb
xlat
jmp
fidivrs
mov
out
xor
movsb
adcl
dec
hlt
sbb
data16
mov
out
or
out
xchg
dec
adc
push
pop
outsl
mov
cmp
mov
mov
cmp
ss
imul
jno
arpl
lock
rcrb
fdivrs
jg
outsl
lcall
inc
push
popa
fwait
dec
and
xor
out
cmp
shlb
sbb
mov
sub
js
loop
pop
out
stc
addb
shl
les
adc
fbld
or
mov
inc
push
mov
sbb
cmp
mov
inc
jo
sbb
lret
jb
insb
mov
jg
mov
std
mulb
cmp
mov
dec
pop
jae
dec
cmp
js
xor
jle
cmp
xor
icebp
aam
pop
sbb
pop
adc
andb
ret
scas
jne
sub
popa
adc
mov
or
cmpl
add
cld
pushl
cwtl
outsl
xchg
pop
pushf
xor
in
lahf
cmp
cmp
fldenv
jg
into
addr16
test
sbb
inc
mov
push
jmp
xor
lret
arpl
dec
mov
ret
hlt
mov
insb
test
push
das
mov
cli
adc
jno
out
insl
push
ret
push
mov
lock
ret
xchg
push
ds
adc
std
sbbb
dec
imul
add
mov
ja
mov
data16
inc
mov
inc
je
inc
ljmp
dec
scas
sub
mov
arpl
cmp
push
xlat
jmp
cmc
push
cmp
loope
inc
repnz
popa
mov
mov
mov
orb
mov
push
jmp
scas
mov
dec
adc
dec
inc
pop
jecxz
out
fs
mov
ds
inc
mov
popf
addb
out
mov
sub
fildll
rcl
outsl
push
sti
adc
test
jo
leave
int
jb
fists
xor
andb
inc
and
imul
es
pushf
out
push
xor
push
push
add
and
outsb
popa
pop
mov
sub
pop
lahf
dec
cmp
loop
fs
mov
cmp
cmc
mov
idivb
sbb
add
jno
jp
cmpsl
js
fwait
inc
int3
mov
pop
pop
push
or
cs
into
jo
daa
inc
lret
popa
and
xchg
hlt
push
adc
mov
imul
mov
shrb
xor
xchg
imul
lods
leave
lahf
jno
sti
ljmp
fadd
push
call
mov
ljmp
and
out
test
push
mov
jno,pt
xchg
ljmp
es
test
cld
mov
scas
push
imul
je
into
xchg
mov
into
gs
xchg
daa
lea
adc
vmovss
jge
inc
inc
int
idivl
addr16
lret
imul
pop
in
xor
loope
stos
mov
adc
mov
fsubr
in
outsl
xor
dec
pusha
jmp
pop
loopne
jge
jne
sub
movsb
repz
loop
adc
loope
dec
loopne
pop
aad
gs
mov
mov
xlat
jno
mov
mov
xchg
or
lds
and
popa
dec
mov
loopne
jbe
xor
pop
inc
add
cmpb
or
mov
xchg
push
fmuls
stos
sub
push
sbb
lods
pop
cltd
adc
in
inc
repz
inc
jno
popa
pop
jne
xchg
and
paddb
push
ret
ret
rclb
cmpsb
ds
inc
je
sub
cld
stos
xor
push
out
inc
outsl
inc
std
dec
cmpsl
icebp
xchg
dec
outsb
push
les
cwtl
xchg
jmp
insl
sbb
mov
sbb
lcall
push
inc
cltd
lods
inc
aam
insl
sbb
or
sbb
inc
adc
and
scas
pushf
jecxz
loope
mov
loope
mov
dec
into
loope
xor
mov
repz
pop
test
jp
je
xor
cmovo
call
or
rcrl
es
jne
jmp
into
rolb
decb
inc
sbb
cmp
jne
inc
mov
imul
xor
es
aad
push
mov
fcompl
iret
cltd
ret
xor
xchg
and
cli
push
sbb
int3
out
aaa
pop
aam
das
cmpb
dec
adc
mov
mov
or
mov
cwtl
outsb
add
push
xchg
aaa
int
mov
push
push
es
out
xchg
scas
hlt
xchg
or
jmp
jmp
loop
pop
aam
ds
mov
mov
rclb
aas
xchg
dec
mov
pusha
mov
mov
sub
xor
jb
add
push
sbb
stc
fsubrp
stos
push
sub
pop
xor
lret
fchs
cmp
xorl
mov
xchg
add
xchg
push
mov
cltd
adc
and
dec
repnz
cmp
jle
jae
ret
mov
mov
dec
push
push
or
jge
stc
addl
fldcw
ljmpw
and
mov
adc
int
and
test
xchg
js
sbbb
jne
outsl
arpl
lcall
jmp
lret
sub
cmp
les
xchg
push
inc
jecxz
std
adc
xchg
imul
cli
pop
or
dec
mov
inc
cmc
pop
pop
fsubr
cwtl
inc
add
cli
fnstenv
leave
xchg
test
cli
insb
out
sti
stos
mov
jbe
subb
or
ljmp
xchg
sub
or
outsb
pop
dec
iret
mov
dec
out
mov
hlt
adc
sahf
lock
sbb
repnz
pop
fs
movsl
xchg
arpl
ret
test
and
dec
loope
inc
pop
in
inc
icebp
adc
popf
scas
or
adcl
sbb
lret
insl
or
jge
push
ss
push
push
rcl
jo
xchg
pusha
jp
sub
test
mov
and
dec
mov
repz
jnp
sbb
fisubs
sti
mov
inc
or
pushl
mov
jmp
subb
mov
ficoml
imul
out
nop
js
dec
add
or
add
mov
push
and
xor
sbbl
outsb
push
mov
in
das
add
loop
add
jp
jno
mov
xchg
push
idiv
outsl
cld
cmpsb
adc
add
mov
out
jns
cmp
fwait
mov
or
into
test
pop
or
imulb
push
in
mov
lea
adc
or
mov
push
leave
mov
ret
cmpsl
and
push
and
loop
or
mov
cwtl
out
repz
mov
test
in
pop
mov
sbb
addr16
mov
js
mov
add
and
int3
pop
mov
and
xor
sub
lds
addr16
dec
jge
not
pop
mov
enter
add
mov
or
push
adc
dec
sub
xor
decl
xchg
adc
and
xlat
inc
or
lret
sub
mov
sub
ds
pop
cmpsb
inc
daa
jmp
push
and
or
out
jbe
filds
test
xor
push
jl
cli
andb
mov
rorb
xchg
ds
mov
push
xchg
int
pop
lcall
and
stc
adc
out
cmpsb
dec
adcb
xor
sahf
push
loopne
adc
cmp
add
xchg
scas
push
call
and
scas
imulb
and
rorb
push
lock
into
repz
les
adc
dec
cmp
gs
movsl
cmp
lea
jle
ret
in
xor
xor
int3
xor
mov
mov
out
outsb
cmp
and
pop
lcall
mov
push
mov
add
xor
sahf
xor
inc
mov
mov
cmp
pop
fistpll
lcall
dec
jne
iret
mov
jmp
dec
xor
lea
fucompp
lods
fcompl
cld
dec
in
and
xor
sti
cltd
xchg
insl
push
lds
cmpsl
mov
leave
cld
xchg
sti
pop
loop
mov
movsl
rcl
fildl
mov
stc
loop
inc
pop
jge
sbbl
sbb
and
xor
add
or
leave
or
mov
mov
fistl
xchg
insb
adc
sub
cld
popa
iret
cmp
push
rcr
in
pop
mov
pushf
mov
data16
pop
push
xchg
and
sbb
sub
repnz
lret
jns
add
dec
mov
testb
stos
mov
adc
lret
xor
into
mov
das
out
push
lods
pop
adc
add
xor
movsl
mov
sub
ret
adc
dec
stc
push
repnz
test
imul
dec
outsl
jno
mov
ret
cmc
dec
adc
mov
stos
inc
and
psubsb
add
mov
cmp
out
shll
xor
sbb
aaa
fmuls
dec
cmp
cmp
or
pop
cs
add
aam
dec
xor
loope
and
or
or
cmp
xchg
xchg
mov
les
push
imull
mov
push
ret
cmc
sub
mov
fnstenv
out
rcrb
sub
mov
xchg
jno
sbb
aad
stos
inc
cli
cmc
push
out
mov
stos
dec
iret
fcoms
jmp
les
sub
inc
hlt
dec
push
mov
xchg
sub
aam
mov
inc
mov
xchg
push
test
sbb
cmp
adc
call
cmp
push
push
int3
cmpsb
cmp
mov
add
in
dec
repz
push
aam
push
mov
lock
dec
mov
jp
inc
int3
push
inc
sub
jb
adcl
mov
stc
jge
vmwrite
das
stos
xor
insl
mov
push
hlt
mov
lods
out
push
mov
xor
movsl
cmp
lret
ret
or
inc
xchg
xor
sub
ret
xor
adc
jmp
out
cmp
xchg
repnz
imul
lret
pop
gs
out
cli
adc
retw
pop
mov
jns
mov
popf
fnstcw
std
jo
shl
clc
xchg
test
ljmp
push
xor
jge
push
fsts
leave
sbb
cld
clc
mov
stos
std
cmc
outsl
push
daa
or
je
jo
das
sarl
push
cli
pop
fistl
repz
and
jp
cmp
ljmp
dec
scas
xchg
jmp
icebp
sbb
cli
inc
jg
mov
pop
mov
push
dec
inc
stc
xchg
shll
cmpsl
insb
xlat
enter
or
cld
jae
lahf
xlat
lds
mov
out
pop
push
mov
dec
or
pop
xor
adc
sbb
ret
xchg
inc
adc
or
addr16
int
push
insl
les
pop
cmc
add
ja
loopne
es
inc
les
aam
add
dec
mov
cmpl
mov
stc
stos
inc
add
mov
xchg
xor
xchg
push
pop
push
sbb
mov
cmc
mov
mov
ja
pop
push
and
into
lods
outsl
shlb
xchg
testb
jg
and
in
sub
sub
aas
out
cmpsl
and
push
jae
mov
sub
dec
fsts
or
data16
mov
or
outsb
xor
test
lds
fwait
xor
lods
imul
lcall
shll
pop
insl
xor
sub
dec
hlt
xchg
xchg
rorl
push
subb
dec
pusha
adc
setp
or
outsb
shl
jbe
aaa
xchg
cltd
pop
inc
pop
mov
icebp
sbb
jle
jl
fildll
ficoml
rcll
gs
daa
outsl
push
push
sbb
daa
scas
xor
xor
sub
pop
test
and
leave
mov
movsb
push
lods
adc
inc
int
frstor
push
mov
adc
sbb
push
std
lret
jnp
cmc
das
out
fs
icebp
xchg
stos
rcrl
testb
sub
mov
cmp
jp
cmp
out
xchg
cmp
mov
stos
adc
xor
mov
sbb
inc
shlb
xor
and
xor
or
mov
mov
dec
loope
orl
mov
xchg
cltd
or
lret
xor
mov
popf
lods
and
inc
shr
ljmp
cmp
jmp
pop
scas
sbb
ja
adc
dec
lods
add
loop
xor
pushf
xchg
insl
inc
sbb
outsl
insb
pop
mov
cwtl
pop
mov
movsb
pop
outsb
subl
imul
mov
loopne
in
sbbl
pop
int3
jg
fistps
xor
ret
fdivrl
mov
cltd
les
add
sbb
mov
daa
pop
push
mov
hlt
fsubs
mov
pop
loopne
pop
pop
jp
cmp
lret
dec
pop
xchg
xchg
in
lahf
push
notl
pop
adc
xor
dec
mov
addl
fsubr
add
divb
ja
outsl
pushf
scas
je
mov
ss
or
or
out
es
aad
cmp
push
or
ret
pop
les
addr16
pop
inc
jnp
jmp
jmp
out
jno
lret
mov
aas
popl
iret
fdivrl
dec
adcb
push
out
adc
sbb
sub
loopne
push
sbb
add
hlt
dec
stos
fstpt
hlt
mov
xchg
jge
sub
xchg
xchg
out
adc
push
cmp
stos
rolb
and
stos
xlat
jns
mov
xchg
outsl
xchg
outsl
mov
add
push
lcall
pusha
jecxz
sub
dec
xchg
push
repnz
mov
xchg
dec
loope
hlt
cmp
fistpl
mov
movsb
scas
mov
out
adcl
shl
movsb
mov
es
fnstcw
add
adc
jmp
dec
add
mov
js
sbb
je
pop
cld
sub
push
lahf
add
cmc
pop
or
inc
lahf
jmp
jge
and
jnp
inc
lcall
fucomp
lods
sbb
push
nop
add
sarl
loop
xchg
adc
inc
xor
xchg
das
lret
outsb
cmp
fld1
rcrb
stc
lods
addb
dec
jge
add
mov
pop
cltd
cld
mov
insb
xchg
sub
incb
cmp
xchg
jo
imul
cli
je
or
mulb
test
xchg
push
cmc
inc
nop
inc
fadd
lock
sbbl
ja
inc
pop
aaa
cwtl
pop
mov
adc
int3
insb
and
in
test
inc
pop
js
jp
sbb
push
lret
sbb
clc
sbb
ret
es
ds
adc
sahf
subb
mov
mov
and
inc
fdivr
cld
push
ljmp
mov
pop
notb
cmpsl
sub
xor
lock
sbb
sbb
jbe
adc
in
push
add
jl
jnp
jae
cmp
fbstp
fists
test
cltd
std
pop
test
mov
scas
add
cld
jo,pt
jnp
jnp
out
pushf
mov
or
cmp
jne
into
xchg
cmpl
cmp
inc
pop
loope
add
mov
test
lea
jg
cli
xchg
mulb
xor
hlt
xchg
and
xlat
inc
fs
adc
ss
mov
leave
pop
icebp
cli
testb
sub
push
cld
arpl
jmp
mov
and
test
inc
fcmovne
in
lock
movsl
pop
movb
je
jecxz
lret
dec
or
cltd
jecxz
inc
inc
repnz
fisubrs
add
aam
stos
jbe
mov
fldcw
mov
notb
push
push
movsb
les
cmpsl
adc
pop
or
and
cs
iret
jp
sub
test
sbb
ja
js
xlat
adc
pop
sbb
fldcw
mov
mov
cs
jo
imul
cmove
mov
in
fwait
popa
shll
leave
add
lret
in
jl
adc
add
add
es
cltd
mov
jns
inc
and
push
jb
insl
loop
aad
rcr
hlt
push
push
push
fisubl
mov
xchg
in
dec
push
mov
pop
cmp
adc
push
cld
add
xor
jne
pop
arpl
add
dec
pop
bswap
mov
cmpsl
faddl
sub
lret
notl
jge
push
fldenv
pop
lcall
and
xchg
add
dec
mov
repz
pop
imul
sub
mov
inc
fcompl
ss
dec
enter
outsb
outsb
inc
imul
subl
xchg
sub
jbe
push
sub
pop
cld
stos
js
pop
mov
inc
xchg
xchg
pop
ret
jg
fdivrl
lret
fidivs
xlat
or
ja
mov
mov
inc
and
inc
pop
daa
std
cs
lea
jne
jmp
mov
sbb
inc
sahf
test
arpl
ret
cli
add
repnz
jmp
push
sub
push
push
mov
and
loope
loopne
mov
je
add
xlat
andb
loope
loopne
adc
sub
cmp
leave
mov
lahf
stos
daa
xlat
mov
pushf
sbb
and
ljmp
add
and
mov
cmp
fdivs
aaa
inc
clc
mov
movsb
pop
mov
cmpsl
jb
adc
fcmovnbe
insb
or
sbb
inc
mov
mov
pusha
enter
insl
es
pop
xor
pop
cwtl
repnz
mov
jecxz
cmp
leave
int
or
das
xchg
push
xchg
add
and
adc
jb
or
dec
jecxz
and
xchg
mov
arpl
mov
vmulpd
cmp
fsubl
rcl
xchg
clc
add
mov
lret
sbb
shlb
push
cmp
pop
fnsave
movsl
and
fldpi
shrb
jne
inc
fucomp
ljmp
mov
jb
and
fmuls
xchg
ret
scas
mov
inc
xchg
stc
rolb
js
cmp
lret
or
add
dec
aad
lahf
stos
adc
rcrl
dec
cmp
shlb
les
mov
fildl
xchg
leavew
call
cmc
je
es
das
cmp
mov
test
sub
data16
jns
fcomip
loop
jle
insl
push
stos
stos
sub
mov
jl
adc
jb
mov
mov
mov
out
lahf
hlt
mov
pop
es
stos
es
or
mov
das
dec
add
dec
jae
dec
and
clc
fcmove
jmp
add
test
xchg
mov
add
imul
push
lods
aas
mov
lods
inc
or
cmpsl
lret
dec
inc
inc
cmpsl
lds
outsl
ja
mov
or
push
addl
fists
out
pop
std
in
dec
movsb
addr16
fiaddl
jge
cmp
cmp
fwait
in
jnp
loope
movsb
imul
pop
outsb
inc
cmc
imulb
mov
adc
lcall
std
cld
jge
cld
xchg
add
adc
stos
inc
mov
gs
push
nop
clc
aaa
pop
scas
fwait
test
inc
out
rcrl
in
pop
sar
dec
fbld
popa
mov
iret
push
clc
flds
sbb
push
inc
out
out
dec
stc
inc
sbb
aas
inc
movsl
add
adc
movsb
jle
hlt
shlw
add
ret
je
or
cmp
sbb
adc
imul
outsl
jnp
fsubp
add
fistpll
jg
add
ret
sbb
jmp
daa
cmp
add
inc
pop
mov
mov
sti
dec
lock
stos
xor
clc
and
cmp
mov
add
inc
ret
or
gs
cld
and
shl
daa
pop
insl
pop
pop
and
popa
sahf
mov
lret
xor
pusha
ret
clc
dec
fwait
cmpsl
call
in
push
clc
or
xchg
out
mov
push
cmp
enter
adc
sti
pop
push
adc
ss
sbb
push
dec
adc
fwait
push
and
testb
repz
or
notb
and
and
sbb
clc
mov
imul
cli
pop
ret
imul
push
pop
and
stos
or
inc
mov
jae
insb
inc
fs
xchg
jae
cmp
mov
adc
cmp
cmp
sub
dec
notb
dec
cltd
das
xchg
fchs
push
test
sub
xor
test
adc
mov
dec
testl
test
inc
enter
inc
xchg
scas
ja
rorb
movsl
or
popf
xor
dec
sub
les
movsb
mov
xchg
fwait
lods
sub
sbb
das
add
scas
cmc
sarl
or
fistl
sbb
mov
dec
xchg
inc
aam
ja
test
addr16
out
popf
xor
xor
xchg
xor
push
fs
lret
adc
jb
xor
xchg
pop
hlt
and
mov
ficoms
call
mov
cwtl
inc
mov
mov
or
adc
xchg
sub
fsubrp
das
sub
sub
roll
jo
das
orb
xor
mov
push
es
shl
add
loop
push
push
cmp
push
imul
shlb
jb
mov
nop
clc
sub
push
inc
fmuls
lods
pop
adc
and
push
movsb
jmp
dec
xchg
rolb
scas
lock
push
xchg
leave
incb
jb
fwait
push
or
popa
add
sub
popf
push
jp
xchg
dec
adcl
fistl
push
lret
cmp
cltd
xor
pop
xchg
dec
inc
pop
add
dec
in
cmp
icebp
mov
xchg
rcrl
adc
mov
leave
add
neg
xchg
dec
fsubrl
inc
std
jo
out
add
outsl
mov
fwait
dec
mov
fiaddl
hlt
and
out
test
cld
cmp
xchg
ret
push
sub
jmp
mov
cmp
push
and
insb
cmp
mov
imul
adc
mov
or
stos
and
jne
hlt
inc
test
ljmp
adcb
decl
stc
lret
push
and
repnz
fsubs
stos
mov
mov
loope
lret
int
jne
outsl
jmp
mov
test
dec
dec
inc
addr16
or
adc
sbb
xor
or
mov
aam
xor
subl
leave
pop
imul
out
add
sub
sahf
popa
mov
fists
mov
cmp
adc
sti
fwait
cld
neg
leave
push
aam
cs
jb
jmp
push
pop
or
adc
addr16
or
fwait
insl
stos
ss
xor
xor
rolb
pop
jecxz
inc
add
or
and
adc
adc
scas
jo
mov
mov
dec
sbb
jno
fistpll
in
jecxz
setnp
xchg
stc
nop
pop
add
aad
push
mov
nop
pushf
jne
lds
and
jge
inc
int3
adc
and
or
push
je
jnp
jbe
test
stos
out
push
ret
lret
test
lea
push
adc
into
push
out
inc
insb
shll
les
les
mov
push
sub
jb
repnz
and
ret
and
sbb
or
sbb
add
imul
shlb
stos
arpl
in
push
into
shl
dec
dec
mov
pusha
xchg
testl
cmp
out
popf
cmp
in
aaa
mov
lcall
push
and
rolb
lret
std
aad
shlb
mov
jnp
xor
pop
into
cmp
loope
pop
sbb
faddl
push
test
je
xor
rcrl
int
lds
rolb
decl
or
loop
inc
enter
lret
jae
jp
or
ljmp
jmp
push
jo
xchg
dec
insb
push
bound
push
fcoms
sub
xorb
int
mov
xchg
mov
pop
xor
mov
imul
sub
xchg
dec
pop
adc
cmp
ja
bswap
fidivl
cmpsl
out
inc
gs
jns
aaa
outsl
mov
sub
mov
mov
push
mov
jb
mov
jne
out
or
aas
aad
push
sub
test
out
bound
shlb
stos
and
mov
adc
cmpsl
out
cwtl
into
stos
jmp
into
call
inc
fildl
push
push
cwtl
jno
adc
xor
jecxz
std
fdivs
out
je
fldcw
jnp
aaa
cmpb
xchg
in
fs
mov
les
pop
inc
add
das
push
xchg
imul
aam
repnz
add
mov
imul
sbb
jmp
xor
pop
in
insl
into
pop
mov
push
leave
mov
sub
stc
aaa
decb
push
sub
mov
mov
outsl
add
test
pop
pop
cmp
push
xor
cltd
adc
and
iret
jbe
xchg
inc
inc
pop
imul
int3
mov
into
daa
aad
shll
rcrl
inc
sahf
lods
js
mov
or
out
add
xor
mov
aas
sbbl
push
mov
push
cmc
or
scas
sub
fwait
push
mov
stos
out
push
shll
push
jbe
lock
insl
ficomps
mov
dec
adc
mov
pusha
mov
push
push
inc
adc
or
dec
xlat
imul
call
sub
sub
mov
push
test
cmpl
xor
int3
cwtl
push
inc
rol
mov
push
lret
dec
popa
push
movsl
jne
mov
mov
xor
loop
add
mov
ret
jb
movsl
xor
inc
mov
imul
aas
push
cli
mov
or
mov
rolb
push
jmp
jno
jo
rcrl
rorl
pushf
and
test
mov
cmp
or
outsb
sbb
lahf
inc
inc
in
dec
inc
rcl
or
fildll
bound
xchg
dec
adc
ds
pop
mov
cmp
in
imul
add
out
icebp
pcmpeqd
mov
add
mov
sbbl
fsubr
inc
vphaddbw
sbb
sbb
add
jmp
push
shl
aas
jbe
push
cltd
sub
sbb
sub
rcll
add
test
mov
xchg
pop
imul
adc
inc
loopne
xor
gs
xchg
popl
into
enter
add
inc
aaa
push
inc
adc
pop
es
fsubs
mov
jp
enter
mov
sahf
adc
lock
imul
cmc
leave
pop
loope
jb
cld
mov
jge
fidivl
xor
jle
mov
popf
adcb
adc
subb
add
xchg
sbb
outsl
sbb
lcall
cmp
inc
int3
pop
sub
mov
mov
fnsave
fisubs
add
push
add
add
xchg
je
and
jmp
subb
xor
daa
add
arpl
cmp
shlb
mov
in
scas
pusha
mov
inc
jno
mov
fsubr
jle
fsts
inc
adc
pop
lds
fists
push
lcall
lock
lret
and
and
in
xorl
sub
mov
add
enter
mov
and
jns
test
mov
pop
call
lret
cs
mov
inc
push
push
popf
int3
mov
inc
mov
jbe
mov
daa
sbb
mov
mov
xchg
sbbb
and
pusha
flds
imul
mov
xor
scas
stc
into
out
add
lahf
pop
or
in
xor
clc
add
dec
pop
cli
pop
jmp
dec
sbb
cmpsb
mov
sub
call
rcrl
mov
or
mov
push
cld
sub
dec
mov
call
pop
mov
sub
out
ljmp
mov
or
sahf
push
scas
and
lds
fisttpll
mov
inc
das
mov
dec
fs
adc
rcr
mov
scas
cmp
adc
loope
pop
into
call
insl
data16
mov
add
sbbb
loop
fsubl
push
andb
xchg
sbbl
or
push
out
jl
push
push
cmp
in
mov
in
inc
xchg
mov
sub
jno
orb
aad
movsb
rcrl
sub
inc
pop
xor
hlt
mov
nop
add
sar
add
inc
cmp
cwtl
das
sub
mov
add
mov
pop
aam
cvtps2pd
sub
fisubrs
and
outsl
daa
lcall
movsl
cmp
test
and
fld
daa
shl
cli
hlt
inc
sub
pop
imul
aad
bound
cmp
or
stos
jle
stos
es
es
in
mov
push
push
cli
adc
in
pushf
lcall
and
outsl
hlt
inc
fsub
fwait
push
stc
lock
add
lds
mov
aaa
into
xor
sub
mov
push
or
nop
loopne
aam
xchg
ret
aam
pop
inc
mov
addr16
iret
je
dec
subb
cmp
jns
ret
pop
mov
adc
ja
test
add
andb
repnz
or
test
cmpl
lds
pop
cmp
in
pop
out
loop
or
arpl
pop
mull
pusha
mov
jl
sarb
and
cmpsl
repnz
sbb
lds
pushf
jnp
mov
mov
bound
push
js
mov
and
das
adc
cmp
xor
dec
inc
gs
insl
dec
inc
sbb
roll
xor
in
add
push
xchg
test
movsb
push
loop
das
dec
and
add
loope,pt
dec
xor
mov
scas
test
mov
jge
sub
mov
or
lcall
ljmp
or
cmp
add
xchg
cld
or
xchg
cs
shl
cmp
push
cmc
push
aas
inc
add
push
in
push
cmp
xor
aas
push
fadd
jno
jno
rol
xchg
and
mov
mov
sub
movsl
xchg
inc
js
push
gs
push
in
jp
lods
mov
fists
cmp
jne
pop
loopne
out
pop
adc
stos
and
outsb
lods
cmp
sub
dec
ret
repnz
dec
lret
cmc
or
test
jbe
stc
sbb
push
xor
cwtl
jnp
mov
mov
fs
mov
inc
addl
sbb
clc
adc
pop
hlt
fiaddl
dec
out
push
xor
jmp
mov
push
rclb
dec
push
popa
inc
mov
dec
cmp
and
cmpsl
out
pusha
add
test
ja
mov
andl
mov
pop
mov
mov
das
insb
xor
in
stos
jbe
pop
mov
sub
scas
loope
pop
xor
outsl
inc
stc
xlat
stos
arpl
sbbb
stc
mov
xor
test
add
ja
hlt
and
jbe
ss
nop
jmp
push
lret
popa
outsb
aad
cltd
fnstenv
add
mov
out
mov
icebp
sbb
sbb
add
sub
je
jge
cmc
or
pop
adcl
out
outsb
out
mov
fs
popa
or
sub
mov
jg
push
leave
pusha
cmp
pop
fdivs
pusha
pushf
xor
test
into
and
dec
jne
pop
addr16
jb
push
add
sarl
xlat
imul
jo
in
xor
pop
jecxz
aam
cmp
adc
iret
or
xor
cmpsb
or
clc
push
and
cmp
push
add
mov
cltd
adc
pop
push
ucomiss
mov
cmpsl
js
add
mov
cmc
adc
ja
addb
adc
pop
mov
psubd
popa
sub
adc
mov
popa
mov
dec
push
cmc
aad
push
inc
or
das
enter
push
sub
add
xor
push
pop
stc
sbb
cmp
add
es
xchg
test
arpl
cltd
cmp
iret
fucomi
jecxz
das
mov
repz
push
adc
sbb
add
xchg
addr16
cmpsl
hlt
sbb
rorl
adc
sbb
mov
fcmove
pop
cmp
inc
nop
xchg
and
out
je
jae
dec
aas
push
adc
sub
and
ss
loope
sub
int3
pop
mov
es
push
popa
sub
mov
gs
fs
push
out
mov
das
into
sub
mov
fidivrl
aas
add
shlb
cltd
pop
sbb
mov
movlps
xor
and
sub
hlt
and
jns
mov
push
inc
cwtl
pop
xor
sbb
mov
sbb
mov
ja
sbb
loopne
fs
add
xor
mov
dec
fistps
lods
fs
test
cmp
loopne
das
fucom
mov
push
push
push
repnz
imul
xchg
adc
ja
sub
mov
mov
fisubl
and
dec
pop
jo
andl
push
negl
pusha
cmp
psraw
dec
lahf
fidivl
je
out
stos
fimull
fidivs
adc
in
cli
add
jnp
cwtl
gs
dec
mov
repnz
dec
dec
rcl
and
adc
mov
add
mov
mov
mov
in
sub
mov
pop
in
cmp
push
ljmp
mov
insb
jnp
push
push
pop
add
dec
out
or
mov
decl
aas
loope
and
aad
sub
dec
cmpsl
out
js
pop
ljmp
mov
iret
xchg
or
inc
testb
sbb
sbb
xor
and
jns
ss
push
mov
loopne
cmp
fsubrp
or
mov
xchg
and
xor
or
mov
pop
jbe
adc
push
mov
pop
jnp
pop
dec
xchg
pop
fdivl
sub
dec
imul
mov
cltd
fwait
inc
xchg
inc
into
jo
xor
add
aaa
sub
push
ljmp
ret
mov
cmpsl
adc
mov
test
and
jg
lea
inc
mov
clc
xlat
dec
cmp
idiv
xchg
call
into
lahf
in
cs
xor
cmpsl
decl
mul
icebp
dec
pop
int
mov
mov
add
call
sbb
ret
hlt
sbb
sub
clc
and
mov
imul
add
push
hlt
push
ret
pop
cmp
sub
out
cmc
mov
mov
xchg
jmp
neg
inc
mov
imulb
dec
mov
adc
mov
rcl
fisubrl
jmp
fsubs
xchg
push
cmp
mov
sbb
jmp
out
test
mov
sti
xchg
sub
jno
jae
imul
movsl
fnsave
jne
lods
cs
cmp
xor
sbb
stos
mov
adc
loopne
clc
xor
pop
cmpsb
xchg
add
mov
mov
mov
leave
pop
dec
mov
sbb
movsl
enter
pop
bound
xchg
mov
mov
imul
push
cmp
ljmp
lods
and
cmpsb
lock
pop
in
gs
push
les
mov
dec
sbb
xchg
fdiv
jmp
out
adc
jge
push
push
dec
into
add
lcall
inc
gs
sub
sbb
mov
mov
mov
aad
bound
sub
jo
pop
jno
out
sub
dec
jno
jno
add
jno
sbb
sub
sbb
hlt
xchg
sub
and
pushf
gs
repz
cs
shrb
fwait
icebp
xor
es
ret
inc
xor
mov
xlat
aad
adc
cmp
mov
add
dec
mov
shrl
lock
or
jno
ss
xor
dec
icebp
loopne
lods
insl
mov
nop
mov
lock
push
mov
ja
dec
shll
andl
jg
decl
sti
pop
xchg
and
add
lahf
xchg
xchg
or
cmp
fsts
andb
fs
dec
lock
aaa
add
jnp
mov
and
mov
and
sar
inc
mov
xchg
dec
enter
fwait
test
cld
push
fidivrl
adc
or
pop
sbb
xchg
lret
in
sbb
push
shll
jg
push
js
repz
es
inc
fisubrs
dec
fdivl
loop
int3
pop
push
mov
mov
sub
lcall
pop
xor
arpl
mov
lods
and
outsl
gs
out
adc
and
dec
inc
lock
sub
xor
shlb
jmp
push
mov
mov
test
push
mov
fwait
pop
mov
lcall
das
sbbl
fisubs
or
movsl
outsb
icebp
xor
pop
inc
mov
jae
pop
in
pop
inc
into
cmpsb
sub
dec
pop
in
dec
cmc
cli
inc
dec
inc
repnz
mov
jno
in
es
cmp
call
imul
or
test
xchg
rcl
in
xor
pop
sbb
fistl
add
inc
std
lods
stos
jne
je
cmp
test
movsl
add
push
jg
imul
and
movsb
add
loope
rorb
xchg
fists
cli
dec
xor
dec
adc
dec
push
inc
repnz
nop
inc
lock
int
mov
mov
pop
push
aam
ljmp
fistps
and
pop
jmp
fdivs
mov
lret
xor
cmp
or
int3
jg
sbbl
or
scas
add
jbe
or
cmp
mov
xor
or
add
aad
jl
cmpsl
sub
pop
repnz
and
test
lahf
shlb
ss
pop
sbb
test
inc
jg
bnd
das
push
adc
std
shll
divb
arpl
sbb
fimull
bound
movsl
mov
add
jp
pushf
test
mov
ss
xlat
sub
jnp
daa
jl
mov
xchg
or
jecxz
xchg
fildll
outsl
adc
adc
inc
cltd
repnz
inc
mov
out
jnp
test
sbb
scas
inc
leave
mov
jle
divb
sarb
xor
xchg
outsb
aam
popf
jo
adc
add
sbb
mov
lea
cli
jne
fnstenv
and
add
imul
shr
ja
mov
pusha
add
mov
xchg
shlb
cmp
sbb
das
js
imul
scas
rcrl
or
ds
sub
lahf
inc
add
or
add
xchg
fnstsw
adc
fcomip
loopne
and
fisubs
stos
outsb
or
push
jg
push
loope
rorb
ja
mov
ds
out
shlb
fidivrs
jmp
ljmp
jno
push
lret
cbtw
mov
jmp
cld
push
add
stos
inc
push
aaa
into
adcl
and
push
push
xchg
sub
bound
cmpsl
jno
into
mov
aaa
or
jno
pop
lcall
leave
mov
pop
dec
jge
push
cmpsb
sub
popf
pop
sbb
mov
jle
js,pn
mov
or
xchg
scas
je
xor
lret
mov
and
insb
cwtl
pushf
test
daa
pop
addr16
mov
or
iret
push
lahf
xor
dec
or
idivb
loope
or
in
or
jae
cmpsl
add
cmpb
sub
xor
push
outsl
mov
ljmp
dec
xchg
jge
push
hlt
inc
int
stos
push
cmpsb
mov
cmp
test
mov
outsl
in
rcr
add
lock
jp
sub
into
ds
or
out
int3
and
cmp
xor
or
loop
fisubs
dec
xchg
jne
pop
out
ss
ss
push
cmp
inc
out
je
mov
mov
shrl
cwtl
dec
mov
or
mov
shld
shl
mov
dec
mov
sbb
mov
mov
push
stos
outsb
or
and
insl
leave
or
sbbb
out
jecxz
out
sbb
xchg
dec
cmc
and
mov
repnz
add
in
inc
fiaddl
mov
notb
shlb
mov
dec
pusha
push
mov
pop
or
fcoms
push
dec
jne
inc
add
loop
sub
ret
lods
repnz
test
inc
or
mov
xchg
and
mov
aaa
inc
push
and
ret
test
and
shr
cld
dec
sbb
push
push
loop
add
notl
arpl
mov
push
pop
cltd
out
int
test
cmp
lea
or
sbb
add
int
mov
in
push
cmpsb
rcrl
scas
je
movsb
jg
xchg
xor
call
shrl
shrb
loopne
sbb
and
xor
mov
jae
xor
movsl
or
cs
test
push
mov
push
xchg
addb
xor
jo
popa
repz
cmp
scas
insb
scas
rcrl
icebp
imul
out
mov
push
pop
sti
faddl
xchg
mov
sbb
xlat
pop
and
jl
push
mov
loopne
sbb
jecxz
sarl
xchg
sti
sbb
lea
inc
out
and
push
fists
imul
xchg
dec
addb
hlt
cmp
fisttpl
sub
sub
jnp
adc
in
push
int
icebp
xorl
lods
add
idivb
insl
ja
fdivrs
and
mov
xor
xor
fs
stos
cmp
fsqrt
notl
mov
pop
jg
cltd
lret
dec
push
adc
pop
addr16
ds
fcompl
mov
pop
add
int
cmp
call
mov
adc
or
inc
imul
inc
es
jp
jnp
cli
push
cmp
je
xlat
or
iret
sub
ljmp
enter
cs
call
adc
sub
divb
call
sti
jo
sbb
adc
mov
lds
shrb
inc
push
out
mov
fsubrs
xor
imul
xchg
add
dec
outsb
sti
cmpb
add
sbb
in
pushf
mov
adc
jb
cwtl
mov
int
push
repz
mov
sbb
push
lds
pop
adc
push
movsl
cmp
pop
mov
sbbl
add
js
int
loopne
lret
psrad
pop
push
and
jge
xor
aad
and
or
lods
add
push
mov
test
scas
sbb
out
sbb
xor
adc
adc
cwtl
aaa
loopne
sub
mov
nop
negb
cmp
adc
ss
leave
mov
cltd
jo
push
push
and
sbb
mov
inc
push
sub
icebp
sbb
jg
adc
and
cwtl
in
push
dec
push
jo
aaa
outsl
cmpsb
cmp
or
push
sub
lret
mov
jl
pop
rorb
call
repnz
movsb
jnp
sub
mov
xchg
decb
and
imul
fiaddl
shrl
aad
dec
and
and
xlat
cs
call
mov
aas
lret
cld
jbe
and
inc
mov
xchg
insl
xlat
sahf
mov
leave
call
insb
pop
ja
inc
dec
mov
mov
ret
and
lods
lea
test
add
pop
mov
xchg
cs
mov
movupd
jns
sbb
add
inc
push
testb
daa
adc
xor
jno
insb
lock
outsl
and
loopne
cmpps
in
jno
popf
loopne
push
out
push
push
cld
push
mov
and
decl
andl
cli
js
sbb
xchg
or
mov
or
leave
cmpsb
fwait
jno
inc
mov
test
out
mov
fdivrl
repnz
cmpsl
cmpsl
add
inc
daa
and
cwtl
gs
bound
or
fbstp
test
dec
stos
cmp
test
xchg
stc
sarb
adcb
push
fwait
bound
stos
ljmp
jns
or
sar
mov
lahf
addl
imul
adc
mov
xchg
in
mov
or
push
inc
loope
dec
add
pop
push
lcall
cmp
xchg
push
or
cwtl
xchg
add
lret
adc
popf
sub
mov
jecxz
fldt
pop
das
xchg
dec
aad
dec
loope
negl
inc
fldl2t
ja
fmulp
xchg
je
ret
cmpsb
ret
out
mov
or
push
xchg
add
sbb
in
pop
pop
sbb
lea
mov
rolb
sbb
mov
stc
inc
rcl
adc
fdivs
push
dec
stos
and
adc
mov
add
add
pop
inc
popa
clc
jae
out
mov
ret
lods
inc
mov
sbb
push
je
cmp
icebp
cwtl
cmp
das
aaa
and
push
pusha
mov
xor
inc
cmpsb
inc
cwtl
pop
adc
jle
jb
movups
popa
les
testb
mov
or
cmp
sbb
icebp
das
mov
lea
add
filds
xor
sub
jle
adc
dec
in
inc
lea
xchg
movsl
pop
lret
xchg
popa
aaa
inc
inc
sar
xchg
or
repz
loope
fsubl
xor
pop
inc
vucomiss
aas
xchg
dec
sbbl
fdivl
fisubl
add
gs
lret
cmp
push
xlat
aad
jae
push
mov
lahf
or
or
mov
cmp
mov
or
out
bound
inc
lret
loopne
xchg
and
pop
cmp
mov
xchg
out
aaa
push
test
sbb
jge
mov
inc
xor
sub
mov
lcall
cmp
adc
fsts
sub
sbb
cld
mov
imul
xchg
sahf
fs
dec
xchg
test
aaa
mov
pop
imul
popa
and
insl
add
into
call
int
stc
mov
xor
sub
call
es
test
sub
and
movsl
adc
subb
pop
mov
aam
pop
cltd
sti
pop
lock
inc
nop
xor
push
enter
inc
jmp
push
or
aas
mov
test
xchg
int3
push
pop
mov
cld
jo
filds
scas
push
xchg
ret
cmc
ret
mov
or
aaa
dec
mov
mov
stc
sti
andl
or
out
test
mov
inc
pusha
jle
pop
lods
in
jnp
arpl
loope
enter
jnp
test
and
in
out
sti
psubusw
jle
idivl
cmp
xchg
mov
sub
xchg
cmc
int3
xchg
mov
test
adc
xlat
pslld
mov
mov
das
shrl
test
hlt
mov
add
lods
xchg
sub
inc
test
lret
int3
arpl
and
in
dec
ss
adc
orl
sub
repz
cmpb
add
out
mov
test
sbb
insl
mov
mov
js
push
or
or
aad
jg
data16
sbbl
and
sbbb
mov
pop
mov
negl
lahf
sub
cmpsl
sub
call
jnp
inc
fldcw
or
push
mov
out
mov
pop
movsl
fisttps
ljmp
jle
mov
lods
adc
fwait
sbb
lds
jge
inc
jmp
mov
outsl
xor
or
adc
inc
pop
lret
gs
cmpb
sbb
fldenv
hlt
movsl
cmp
add
incb
jl
and
rcl
pop
cmp
inc
cmp
aaa
dec
jbe
mov
add
nop
fpatan
rcll
cmp
mov
sub
outsb
repnz
andl
sbb
lods
cmp
sahf
push
cs
cli
fmuls
jle
xchg
sub
insb
push
stc
sbb
sbb
add
cmpl
xchg
pusha
mov
xor
hlt
adcb
test
mov
xchg
and
adc
adc
ss
and
push
dec
fisttps
pop
rol
dec
andl
fdivs
or
jl
xchg
loopne
mov
dec
pop
test
mov
imul
cli
pop
subl
cmpsb
sbb
fldenv
and
sahf
jmp
mov
test
mov
fisttpl
mov
test
cmpl
add
mov
out
scas
imul
lcall
in
clc
add
push
mov
mov
aad
rcrl
or
pop
cmpsl
xor
push
jo
sub
pop
call
addr16
clc
movsb
inc
xchg
inc
repnz
sub
cmp
push
mov
xchg
and
push
fistps
pop
cmpsl
push
vpcmpeqd
pop
push
jp
mov
loopne
in
sbb
shrl
jnp
clc
dec
fucomip
xchg
dec
movsl
cmpsl
mov
or
mov
ja
stos
jno
xchg
push
ljmp
mov
mov
adc
cwtl
test
pop
outsl
stc
in
pusha
pop
fildll
lret
xor
adc
lcall
out
pop
push
hlt
mov
pop
xchg
cli
add
repz
xchg
push
pop
hlt
inc
test
arpl
bound
popf
inc
sahf
inc
jmp
sub
xor
and
test
add
andl
or
imul
sbb
xchg
mov
js
mov
cmp
sbb
pop
les
pop
addr16
jl
push
sbb
push
push
mov
popl
mov
stos
inc
std
or
cmp
adcl
sub
jle
jae
shll
out
jae
sbb
pop
call
and
push
aam
movsl
pop
scas
cmc
fstpt
fnstenv
xor
xor
pop
mov
rclb
rclb
xor
cwtl
sub
lds
xor
sahf
mov
inc
or
jns
stc
push
pusha
cmpsb
loop
fimull
jge
adc
sub
jle
inc
dec
or
cmp
mull
push
mov
js
jae
cmpsb
adc
cmpsb
dec
ja
cld
test
in
cli
xchg
jg
xchg
mov
leave
shrb
xchg
lds
ret
mov
xchg
cld
inc
pop
push
lea
mov
popf
out
subb
lock
push
pusha
dec
mov
testb
ret
pop
dec
iret
hlt
mov
jo
jo
mov
testl
sub
jmp
inc
fsts
psllq
mov
xlat
fadds
sbb
in
icebp
inc
mov
add
sti
add
sahf
scas
dec
enter
jecxz
mov
out
mov
outsl
jle
mov
test
out
in
mov
in
fwait
mov
loop
addr16
mov
or
inc
in
ljmp
movsl
and
push
int
mov
aaa
mov
lds
and
insl
clc
mov
cwtl
push
shl
daa
mulb
push
jns
mov
aad
xchg
ja
jb
pop
mov
mov
stos
inc
add
stos
enter
ss
xor
aas
sub
aas
sarl
push
inc
and
dec
push
and
jge
rcrl
jmp
add
xchg
adc
js
test
mov
cmpsl
mov
rcrb
addr16
ja
test
adc
xchg
in
test
push
adc
cld
sub
xor
notb
mov
aaa
hlt
and
and
jnp
rcrl
pushl
fistl
cltd
mov
shll
xorl
cwtl
or
fstpl
call
push
xor
adc
iret
xchg
jl
divl
sbb
subw
adc
lret
sbb
frndint
push
stos
mov
ja
xchg
cs
test
cmc
std
cmp
pop
scas
rcll
cmp
mov
test
shrb
fmuls
jo
out
rcrl
push
ror
adcl
sbb
dec
and
bound
movsl
lock
and
jge
addl
inc
mov
into
sarl
pop
outsb
xor
push
or
sub
mov
into
cmp
adc
push
cmpsb
cmp
mov
adc
xchg
push
pusha
dec
arpl
pusha
std
clc
adc
orb
jne
je
xor
pop
movsl
jne
stos
nop
jge
jns
lcall
cwtl
xchg
inc
add
cmc
jo
mov
push
in
fidivrs
sub
cltd
pop
es
lcall
push
mov
sub
mov
push
aaa
jbe
popf
hlt
mov
inc
jno
test
test
xchg
jae
inc
mov
xchg
sbb
loope
ret
bound
inc
xor
mov
pop
shlb
push
sub
jb
xor
imul
pop
cwtl
bound
ja
pop
test
flds
and
add
pop
sahf
hlt
xchg
nop
mov
popf
or
mov
lret
fst
mov
adc
adc
clc
push
xchg
adc
cld
pop
mov
inc
and
add
mov
leave
stos
dec
push
inc
gs
int3
sub
adc
gs
out
xchg
fildll
mov
arpl
xchg
lahf
rorb
cmp
in
pop
cld
or
pop
push
cltd
sahf
hlt
rcll
or
cli
std
sbb
ret
sub
bound
hlt
sbb
mov
or
shll
push
dec
cmp
mov
add
cmp
stos
fildll
aas
lea
mov
stos
in
das
mov
dec
mov
cmpsl
push
jae
or
sti
stos
push
divl
mov
lods
aaa
inc
push
push
mov
mov
test
fsubl
js
fadd
or
cmp
cmp
imul
jmp
mov
daa
adc
out
popa
cmp
outsb
shrl
jle
mov
pop
ret
lcallw
xchg
sbb
rcrl
inc
popa
sbb
mov
pop
clc
or
push
lock
xchg
lcall
lret
and
xor
mov
add
xor
int
imul
mov
cmp
aaa
test
mov
ret
rcl
jno
imul
xor
push
std
addl
inc
mov
push
in
pop
or
sti
jp
jle
lea
addl
adc
addl
add
jp
loopne
out
or
out
stc
ds
pop
sbb
scas
test
mov
into
loope
push
out
jo
int3
arpl
int
lods
mov
xor
adc
ss
xchg
imul
popl
rolb
lds
push
xor
fcmove
pop
cmp
jb
and
pop
cmc
scas
pop
nop
loope
adc
ja
add
cmpsl
xchg
xor
dec
ss
mov
mov
les
xor
jl
nop
in
lcall
sbb
in
adcl
cltd
mov
or
pushf
out
addl
xchg
mov
test
in
push
dec
jle
add
mov
mov
mov
outsl
loop
pop
lahf
stos
xchg
jne
pushf
movsb
je
dec
leave
mov
nop
dec
xlat
and
test
in
push
or
jmp
sti
xchg
sbb
sahf
lods
sub
cli
gs
sti
fwait
xchg
add
push
sti
pushf
xchg
repz
int
add
adc
cmc
mov
popf
pop
adc
jne
xchg
popa
cwtl
xchg
mov
fwait
fs
xchg
das
shr
fs
push
popa
sub
movsb
sti
xchg
sbb
repnz
sbb
pop
out
adc
js
sahf
movsb
cmp
cltd
decb
push
ret
jmp
jo
and
mov
mov
into
lret
rcrb
and
mov
scas
or
cmp
or
dec
fwait
jecxz
mov
jbe
je
and
pop
pop
push
mov
test
or
mov
mov
lods
stos
mov
xor
pushl
stos
enter
jge
mov
fimuls
cmc
inc
pop
sub
mov
cmpb
jno
push
repz
fisubl
add
je
cmp
cmc
int3
jno
jl
xchg
jbe
pop
xor
lcall
js
sbb
jnp
hlt
lret
movsb
xchg
stos
leave
and
inc
pop
fdivrp
push
lcall
jge
sub
dec
adcb
lret
leave
push
fidivrs
test
cmp
jp
xchg
test
push
xchg
push
push
pop
mov
imull
je
notb
cmpsb
lea
push
mov
lock
xor
and
inc
push
in
or
je
xor
jb
in
sub
mov
daa
mov
add
jns
clc
insb
fisttps
loope
dec
lcall
mov
cmpsl
scas
out
inc
inc
cli
cmp
fwait
test
pop
pop
fstp
jmp
popf
jmp
and
ss
sti
call
test
and
xchg
lods
js
mov
fisubrl
jecxz
imul
ljmp
dec
ljmp
and
mov
jns
ret
fisttps
rorl
mov
cmp
inc
xor
jge
in
mov
jno
sub
jle
cmp
shll
push
scas
lcall
stos
addb
push
push
icebp
mov
in
js
ret
repz
jnp
dec
sbb
mov
pop
mov
push
scas
and
cld
sub
shrb
sahf
imul
pop
aam
lea
add
lret
rcl
and
pusha
fcmovnu
sub
xor
je
lret
mov
addr16
or
in
push
mov
jp
addr16
ficomps
ficomps
daa
ljmp
mov
xor
xchg
sub
sub
insl
xchg
and
xor
mov
insl
sahf
sub
or
adc
stos
jmp
pop
sarl
idivl
fldenv
ljmp
xor
xchg
insl
inc
pop
push
push
mov
out
push
repz
mov
cmp
or
add
scas
std
stos
xchg
xchg
repnz
and
ja
mov
cwtl
jne,pt
push
frstor
mov
lds
loop
test
ja
stc
test
xchg
xor
sub
push
adc
lds
sub
inc
arpl
sbb
test
push
mov
cmp
loopne
fadd
pusha
loop
cmpsl
dec
loop
cmp
jg,pn
stc
test
push
stos
arpl
jb
int3
dec
icebp
movsl
push
hlt
pop
add
pop
push
add
pop
sub
cmp
xchg
sub
mov
rclb
addr16
imul
mov
jns
repz
mov
jae
lods
pop
lret
cmp
cmp
sub
add
ljmp
cld
int3
cmc
outsl
inc
push
push
clc
aas
dec
ss
and
lcall
loopw
ja
fstpt
fisubs
or
cmpsl
sbbb
or
push
in
imul
testl
sahf
lods
sbbl
scas
cmp
adc
xchg
out
in
js
in
or
sub
mov
jmp
push
mov
or
and
jb
push
sub
mov
xor
push
faddl
or
push
fiadds
mov
sbb
jge
aas
mov
adc
jne
sub
shl
ret
cmp
and
pop
mov
scas
into
mov
or
xchg
jmp
and
ficomps
fimull
notl
xlat
cmp
ret
movsl
dec
pushf
imul
push
push
and
imul
or
jb
rcr
jecxz
test
daa
mov
add
je
or
push
icebp
xchg
xchg
fistpll
fistps
sub
mov
pop
and
imul
sbbb
in
fwait
shlb
mov
jbe
mov
push
rcrb
pusha
call
push
aam
pop
and
sbb
push
bound
stos
outsl
xor
shrb
pop
dec
gs
cltd
ss
adc
shll
cltd
xor
xchg
cs
jnp
push
push
add
add
mov
adc
adc
xlat
rorl
imul
mov
ss
mov
pop
cmp
imull
lret
movsb
pop
pop
adc
lds
mov
sbb
mov
mov
lock
jl
push
iret
mov
ret
mov
arpl
cmp
dec
pop
pop
inc
rcrb
xchg
in
es
sbb
cli
cmpsb
std
stos
mov
subl
lock
jno
adc
mov
arpl
addr16
and
loop
cmp
testl
and
inc
push
les
shl
fldl2t
xchg
mov
xor
mov
dec
test
icebp
pop
xor
cltd
mov
inc
cmp
jns
push
clc
ja
mov
ja
insb
and
push
lods
fdivs
mov
mov
sub
sbb
sub
pop
jo
mov
mov
push
pop
mov
outsb
sub
push
pop
sbb
aaa
sub
movsb
adc
loop
push
sbb
sub
fildll
iret
push
scas
dec
pop
sub
in
ja
popf
xor
into
aaa
into
add
in
fistps
in
mov
mov
cs
sub
ljmp
and
mov
repz
pmuludq
loopne
int3
push
cmpsl
ja
fmuls
rorb
bound
mov
shlb
sub
xchg
push
add
shl
hlt
jb
push
sub
cs
cmp
inc
inc
sbb
dec
in
daa
in
fs
in
call
arpl
nop
xchg
aam
repz
fimuls
inc
xor
enter
fwait
xor
pop
mov
push
inc
cs
faddl
push
add
test
fnsave
mov
mov
test
jb
ds
adc
adc
jae
das
mov
pushf
dec
dec
sbb
push
je
mov
mov
xor
roll
jecxz
push
push
dec
and
jg
fisubrs
call
test
out
dec
addl
jbe
in
xchg
sbb
das
cli
lcall
and
jl
scas
dec
pop
push
inc
xlat
jle
sub
es
testb
insb
or
jge
and
cs
jne
aas
iret
mov
insb
xchg
cmpsl
and
adc
stc
jae
xlat
push
mov
sbb
mov
sbb
cmc
test
mov
outsb
mov
outsl
pushf
daa
rorl
mulb
lcall
adc
nop
xor
sub
push
add
cs
mov
xorb
add
mov
faddl
mov
cmc
add
adc
cmpsl
mov
or
mov
mov
test
loop
jns
add
and
rcrb
mul
clc
sub
pop
mov
movsl
dec
pop
gs
pop
sub
or
pop
mov
pop
fisubrs
outsl
xchg
ljmp
icebp
nop
ja
fcmovnbe
jnp
sbb
movsl
mov
enter
scas
mov
sub
hlt
test
inc
ret
hlt
jns
lock
ret
sbbb
jle
mov
fstps
mov
bound
inc
out
add
or
lcall
aas
loop
jp
cmp
jno
fbld
out
pop
fst
into
sbb
test
rcl
in
adc
mov
sbb
mov
lret
out
arpl
ret
fcomps
or
and
xchg
push
fnsave
int
jno
mov
cmp
stos
xchg
or
imul
push
cmp
lods
imul
mov
dec
and
jle
repnz
fnsave
stos
xchg
pop
sub
addr16
sbb
loope
sbb
mov
out
pshufw
popf
xchg
jp
nop
mov
or
or
das
cmp
xchg
into
arpl
mull
xor
loop
push
pop
mov
pop
shrl
jns
add
lret
mov
cld
push
xlat
inc
int3
arpl
in
or
sbb
mov
xchg
push
or
lock
and
das
pop
andb
dec
jmp
or
mov
fldl
nop
xor
rcrb
lods
push
sbb
jge
and
negl
arpl
test
pop
adc
ret
sti
insl
dec
pop
sarb
sbb
dec
sar
xchg
decb
cmp
adc
mov
rcrb
sub
and
push
mov
inc
imull
daa
std
push
je
jecxz
je
lods
andl
or
pop
xchg
xchg
or
jnp
cmp
inc
xchg
out
lds
or
fwait
adc
lds
xchg
xchg
cmp
xchg
pop
dec
xlat
sbb
add
inc
out
daa
jecxz
mov
pop
stos
decb
sub
cwtl
and
cmp
fildll
cmpsl
or
cmc
inc
aam
xchg
xlat
fldt
pop
mov
lock
or
aas
jmp
fstpl
or
xchg
mov
mov
sub
arpl
push
pop
stos
out
insb
xchg
scas
fidivrl
jnp
cmp
loopne
mov
aaa
cld
or
dec
push
fwait
sub
cltd
gs
cmp
push
xchg
ss
and
xchg
inc
inc
ljmp
mov
push
jle
rcrb
imul
fcoms
scas
jecxz
fimuls
outsl
cmp
jb
fs
loop
addl
data16
inc
fimull
adc
or
test
or
xor
insl
aam
mov
adc
addl
es
mov
nop
or
and
jbe
imul
subl
rol
in
mov
or
push
jne
adc
enter
or
jae
dec
jle
fldcw
cld
inc
in
push
push
aam
mov
sub
mov
jno
fsubs
pushf
lock
xchg
mov
les
icebp
mov
lods
mov
mov
nop
sub
push
mov
mov
fcmove
out
xor
shll
out
inc
sub
pop
pop
xor
test
call
stos
cli
or
mov
xchg
mov
in
shl
inc
jle
sti
inc
sub
mov
out
jl
insl
in
test
xchg
jp
cmpsl
mov
push
scas
cmpl
ret
dec
in
movsl
adc
pop
sub
les
dec
adc
aam
cmp
std
inc
mov
jb
insb
ret
mov
out
dec
hlt
mov
fistpll
jae
dec
popa
cmpsl
movl
pop
xor
inc
insl
jb
cmp
inc
xchg
fadds
pop
and
dec
jl
xchg
loope,pn
outsl
adc
pusha
cmpl
test
cld
push
push
pop
dec
leave
addb
icebp
pop
adc
push
outsl
jnp
push
popa
clc
mov
hlt
dec
and
jg
sbb
ljmp
mov
pushf
inc
int
cld
mov
aam
popa
jl
scas
fbstp
cmp
stc
cmp
jecxz
es
lods
adc
idivb
leave
pusha
outsb
js
cmpsb
pop
out
mov
ja
pop
notb
jge
lret
push
xor
mov
std
pop
scas
fimuls
mov
call
jecxz
pop
cmp
adc
das
lea
repz
rcrb
pop
insb
add
inc
cmpsl
jne,pt
jmp
xor
xor
pop
jecxz
testb
test
sahf
inc
rcrb
leave
dec
cmp
jmp
sub
cmpsl
pop
dec
outsl
sub
std
mov
filds
iret
pop
repnz
enter
and
shr
icebp
inc
loope
ss
push
ds
and
lret
test
push
push
inc
les
jne
pop
cltd
add
mov
cmc
inc
mov
fisubrl
fadds
sbbb
mov
adc
pop
adc
pop
mov
sub
jp
mov
xchg
loop
jmp
mov
push
push
jg
cld
mov
ds
fisttpll
xor
xchg
push
mov
imul
fstps
jns
mov
dec
push
icebp
jno
scas
shrb
es
xchg
mov
sbb
cmp
sbb
and
sbb
adc
jp
mov
cwtl
in
sub
mov
inc
add
cmp
iret
mov
das
sub
inc
fwait
ret
es
mov
inc
fucom
mov
fs
popf
lea
xchg
and
ljmp
jnp
scas
ljmp
sbb
inc
push
hlt
add
fdivl
mov
in
call
leave
pusha
jecxz
jl
movsb
cmp
xchg
sbbl
and
push
sbb
loop
notb
fsubrp
cmpsb
pop
pop
addr16
push
inc
test
jl
sahf
outsl
lea
pop
jle
xchg
cmpsl
push
add
jmp
jmp
adcb
sub
cmpsl
idivb
loopne
dec
push
inc
xor
xor
mov
test
mov
cmp
pop
pop
cltd
or
mov
ret
xchg
fwait
pop
jbe
xchg
cmpsl
jge
ficomps
sbb
lret
into
mov
pusha
into
ret
test
enter
xchg
jno
jge
lahf
add
adc
scas
inc
aas
cmp
stos
js
jle
jecxz
adc
into
or
inc
fidivrs
xlat
sbb
icebp
sbb
je
jnp
mov
in
shlb
jl
pop
cmc
pop
push
inc
ret
pop
xor
incb
push
movsb
mov
jnp
stc
fcompl
stc
outsl
sbb
xchg
subl
imul
in
ja
mov
cltd
cmpsb
popa
push
movsl
push
aad
xchg
push
jae
sbb
sbb
lahf
imul
fsubs
xor
ljmp
inc
fs
insb
rclb
stos
cltd
cmpsl
pop
out
mov
aas
cmpsb
xchg
add
popa
jns
jp
push
adc
addl
lods
ror
rcrl
fcoms
sub
jne
push
mov
in
test
aam
add
pop
daa
xchg
sub
dec
cwtl
cltd
stc
cmp
nop
mov
jle
sbb
and
and
imul
sahf
scas
adc
pushf
jg
dec
sbb
cltd
xchg
pop
in
cmp
out
test
mov
xchg
xchg
mov
sub
lret
nop
pusha
pop
mov
pop
test
mov
stos
pop
daa
mov
xchg
imul
mov
fisubrs
lret
jno
pop
xchg
rcl
push
pusha
mov
xor
xchg
into
pop
add
fcoml
xchg
pop
cld
out
popa
or
hlt
decb
les
lock
jmp
cmp
add
mov
jmp
mov
arpl
mov
fwait
jl
push
cmp
inc
jne
jo
jl
xor
jl
mov
pop
pop
jo
movsb
xabort
xor
dec
and
jl
mov
sbb
cli
mov
leave
es
push
xor
mov
cwtl
mov
inc
add
repz
lods
popa
mov
jnp
mov
sub
jmp
sti
jp
outsl
jle
iret
in
test
cmp
push
push
jbe
lahf
lods
scas
test
mov
xchg
leave
testl
nop
shll
push
mov
mov
loopne
stc
adc
fbstp
or
mov
xchg
std
sbbl
lock
cmpsl
out
out
sar
dec
hlt
das
orl
and
scas
xchg
jae
xchg
mov
enter
rol
and
jge
mov
repnz
nop
clc
mov
xor
push
sbb
aas
out
pop
lahf
pop
pop
mov
lcall
pop
sub
sti
std
call
ds
dec
cmp
mov
cmp
aam
bound
shll
mov
mov
sahf
sbb
adc
cmp
test
lock
jg
leave
sub
cmc
pop
lret
std
mov
mov
mov
fldl
sbb
cld
or
jle
sbb
jbe
push
push
sbb
dec
mov
js
dec
popf
aam
movd
mov
scas
dec
scas
pop
adc
xchg
inc
sub
push
jl
add
jb
or
pop
mov
pusha
jo
test
mov
dec
mov
add
push
mov
mov
ss
std
rcrl
xor
mov
push
shrl
cs
pusha
decl
cmp
icebp
lcall
movsb
pop
lods
mov
sti
nop
lret
and
les
sub
inc
inc
xchg
sbb
mov
mov
inc
xor
call
mov
push
xor
or
fdivr
or
loope
mov
imul
call
mov
cmp
pop
mov
dec
ret
pop
jg
mov
cmpsb
dec
mov
loopne
sub
sub
cmp
shrl
fdivl
add
in
dec
adc
arpl
add
clc
dec
aad
jb
ds
aam
imul
xor
rorb
dec
es
lds
cmp
or
imul
loope
mov
mov
movsb
jl
loop
insb
cmpb
in
push
pop
mov
js
add
push
leave
mov
sar
repz
cmpsb
and
fldcw
and
rolb
xchg
andb
cmp
pop
xchg
mov
mov
jmp
jecxz
mov
inc
lea
or
push
mov
jge
sub
xchg
pop
add
or
pop
in
dec
in
outsb
or
jne
out
xchg
jle
popa
mov
fdiv
pop
mov
or
call
dec
pusha
dec
pop
add
vphaddbw
xchg
push
cli
sub
loop
pop
fdivl
js
mov
negl
lret
jle
mov
sub
lret
dec
jecxz
xchg
stc
dec
leave
in
xor
dec
push
inc
xchg
cmp
cwtl
inc
lods
les
mov
insb
pop
inc
pop
mov
xor
pop
jecxz
or
dec
mov
xchg
movsl
out
in
lret
and
arpl
iret
mov
or
cmp
add
pop
shrb
cmp
daa
sub
jbe
test
lret
mov
mov
mov
stc
std
dec
push
fisttpll
mov
cmp
movsb
insl
sub
and
sbb
notb
pop
std
sbb
stc
or
dec
pusha
xor
pusha
xchg
mov
inc
cmp
adc
in
cld
popa
out
cmp
shll
repz
in
mov
lret
inc
add
mul
aaa
loopne
jbe
add
xor
mov
jne
fdivs
xlat
sub
cmpsl
sbb
mov
aas
jbe
fbld
fucomp
lret
sub
pop
xor
push
sti
hlt
addr16
std
jb
xor
out
andl
add
or
arpl
xchg
push
cmp
popf
cli
sbb
add
xor
cmp
mov
scas
sahf
adc
mov
stos
insb
dec
mov
sub
out
sti
add
xchg
icebp
test
xchg
fnstsw
ljmp
sub
cmpsb
dec
or
andb
outsb
and
fdivr
clc
xchg
mov
js
ret
in
ss
mov
imul
inc
aam
insl
and
repz
les
hlt
add
mov
cmp
arpl
xchg
jg
out
les
inc
imul
mov
fistpll
mov
and
mov
ret
dec
add
cltd
push
mov
imul
adc
pop
mov
shl
paddb
push
sbb
cli
shl
andps
jae
add
or
push
cs
push
mov
sbb
imul
or
in
push
fisubrl
outsb
push
icebp
aam
dec
mov
mov
pop
in
cld
xchg
add
inc
lret
mov
cld
rorb
or
mov
xor
jmp
mov
addr16
std
es
icebp
xor
mov
cwtl
outsl
inc
cli
mov
lock
neg
adc
in
push
xchg
addr16
push
shlb
mov
push
mov
mov
xchg
fsubs
cmp
lds
push
cmc
and
pop
jno
inc
and
push
pushf
xor
xchg
push
repz
dec
cltd
mov
jns
sbb
scas
jno
mov
ljmp
cmp
jno
pop
cmp
push
push
jge
xor
inc
jecxz
clc
insl
push
cmp
adc
mov
popa
rol
nop
push
lods
fwait
lds
jne
pop
outsw
sub
and
fcompl
cs
push
inc
push
call
es
add
adc
test
pop
mov
mov
scas
xchg
popa
pop
jmp
int3
daa
cmp
mov
js
mov
pop
loop
push
shlb
fldcw
mov
fcmovnbe
lret
and
jmp
repnz
sbb
adc
mov
out
pushf
sbb
fwait
xchg
int3
or
push
in
in
test
pop
or
xchg
jns
xchg
mov
pop
test
inc
int3
arpl
jno
sbb
out
call
outsb
push
out
cmp
popa
iret
mov
int
fbld
jle
add
loope
add
add
lret
jb
testl
int3
test
jnp
leave
push
pop
jbe
pop
mov
js
mov
adc
cmp
in
mov
xor
pop
scas
mov
or
sub
push
arpl
inc
sahf
xor
leave
jecxz
loopne
inc
cmc
mov
lds
xrelease
imul
outsl
push
shl
pop
cmpsb
sub
xor
popa
lds
sbb
repnz
and
jmp
stos
jne
arpl
xchg
adc
pop
stos
shl
jbe
or
cmp
xchg
ds
or
adcb
outsb
pusha
subb
pop
sbb
push
jo
pop
cmpsb
jp
mov
xor
out
shr
repnz
lods
clc
scas
std
scas
notb
rcr
xor
xlat
insl
test
dec
std
fs
push
adc
jnp
hlt
js
dec
ds
pop
sarb
in
ret
pop
mov
mov
bound
movsl
ds
sbb
ret
adc
mov
fs
shl
lahf
ss
cmp
mov
add
adc
loop
cltd
mov
enter
dec
add
cltd
lods
add
shrl
fimuls
xchg
xor
inc
in
push
out
mov
movsl
mov
cs
ret
out
sbb
xchg
scas
dec
sbb
dec
adc
push
inc
in
mov
je
or
push
adc
inc
sub
fbld
sbb
out
rcrl
jge
stos
sub
je
xor
mov
adcb
push
test
rcll
imul
cmp
shrl
loope
fwait
adc
pop
ljmp
stos
sub
sub
jle
sti
mov
movsb
cli
dec
xor
sbb
shll
adc
pop
gs
call
or
mov
mov
aam
mov
mov
inc
mov
into
mov
mov
psubb
icebp
pop
stos
int
sbb
addb
jg
jmp
fdivl
insb
inc
ret
sub
out
sti
jg
nop
sub
sbb
daa
insb
hlt
movsb
orb
jbe
lret
stos
shrb
xor
pop
test
ss
jne
insb
adc
in
adc
fistl
push
test
fldpi
and
mov
adc
rcrl
mov
gs
pop
rcl
mov
jae
inc
and
jno
mov
movsl
imul
call
mov
jns
das
sub
pop
fistpll
sbb
xchg
js
jg
sbb
lds
mov
xor
cmp
bound
push
out
or
dec
cmp
test
fadds
push
jle
mov
sahf
xchg
in
sbb
inc
sbb
cmp
nop
pop
mov
xchg
daa
mov
xor
or
cmp
cmpsb
jo
jmp
inc
pslld
and
gs
adc
inc
push
fistpl
in
jg
je
arpl
xchg
or
inc
xchg
pop
mov
test
pop
fsubl
mov
jp
lods
scas
sub
daa
pop
dec
sbb
cmp
imul
push
pop
in
outsl
aas
pop
jg
movsl
test
pop
cvtps2pi
and
sahf
xor
cltd
xor
adc
mov
mov
lds
testb
push
adc
aad
test
adc
jnp
lds
mov
xchg
jmp
xor
faddl
cmp
xor
lods
adc
das
cwtl
incb
push
xor
dec
stos
or
dec
dec
xor
push
outsb
repz
mov
mov
mov
in
dec
aas
arpl
cmpsl
sub
cwtl
ds
jo
loope
cli
adc
imull
repnz
dec
out
mov
rcl
add
and
cmp
push
shll
and
jo
jle
push
outsb
nop
push
mov
rolb
and
mov
into
jo
loop
jo
lea
push
loope
mov
shlb
cli
loopne
sbb
sbb
aad
push
cmpsl
daa
cmpsl
or
ds
mov
xchg
add
repnz
loop
jl
xor
int
cltd
aaa
ss
mov
xlat
sub
pop
dec
xchg
push
in
insl
cmp
push
dec
idivl
mov
js
adc
fistps
je
jg
lods
mov
in
test
test
dec
dec
hlt
mov
dec
pop
push
jmp
jl
pop
sbb
xor
mov
fs
sub
jae
frstor
xchg
daa
jbe
lods
ljmp
pushf
in
xchg
mov
add
and
or
cld
push
sbb
sub
sbb
into
inc
jb
ljmp
dec
frstor
inc
in
call
xchg
cli
mov
push
xchg
pop
enter
outsl
rclb
jmp
adc
movsb
decb
ja
hlt
xchg
stos
cld
mov
pop
dec
push
idivb
pop
jge
pop
int
cmp
sbb
ds
jbe
mov
aad
lcall
lret
es
in
push
pop
fcompp
inc
inc
imul
fucomi
outsb
adc
or
mov
mov
mov
shll
fwait
mov
cwtl
mov
push
push
lret
jg
sbb
jl
push
jae
push
add
pop
imul
jecxz
add
mov
sub
push
and
jnp
jmp
cwtl
repz
clc
arpl
mov
out
das
mov
mov
rcrl
pop
xchg
sbb
inc
mov
sahf
lods
rorl
test
push
mov
xor
nop
xor
mov
or
sub
pop
icebp
lock
dec
mov
jp
pop
dec
shll
cmp
mov
ret
mov
jnp
push
inc
xchg
cld
mov
or
inc
notb
adc
xchg
stos
add
hlt
jle
fs
aaa
pusha
flds
xlat
test
testb
jnp
sub
lods
cmp
or
orb
cmpsb
mov
imul
sub
cmp
push
into
sarb
push
push
or
mov
jle
mov
ficomps
xchg
lods
sbb
xchg
lret
aad
insb
push
repnz
ja
cmp
sarl
idivb
add
mov
stos
negb
ja
jnp
repz
pop
sbb
add
xor
adc
jno
mov
call
cmp
mov
sub
push
cmp
das
sub
sbb
mov
mov
add
inc
out
sbb
jg
les
lcall
loope
rcrb
aam
fistpl
cmp
leave
dec
fidivrl
mov
test
sub
jg
shrl
addr16
pop
test
addb
cltd
inc
lret
xchg
pop
sub
inc
mov
mov
movsb
cmp
daa
ret
mov
push
pop
lret
jae
fnsave
icebp
add
subl
cld
push
fnstenv
and
popf
xchg
lahf
add
data16
divl
popf
xor
mov
sbb
cwtl
and
dec
dec
xor
cmpsl
ds
lret
pop
mov
movsl
aas
mov
rol
jnp
or
ss
stc
adcl
push
loopne
subl
leave
rclb
sub
insl
jne
cmpsb
cmpsb
dec
jle
inc
pop
test
rcl
sbb
mov
insb
sarl
cmp
mov
push
leave
jae
mov
rolb
imul
fildll
jne
lret
into
cmp
cmp
ror
icebp
pinsrw
idivb
pop
sub
cmc
or
das
lea
mov
or
jns
xor
jo
inc
xlat
rorb
mov
in
add
mov
jl
dec
popa
xor
icebp
and
jmp
outsl
push
inc
lret
loopne
lock
and
xchg
xor
push
movsl
lds
les
add
js
mov
pop
dec
sub
loop
leave
cs
add
xchg
ss
pop
test
cli
icebp
in
dec
into
sahf
lods
ljmp
rol
fcmovnb
mov
dec
fstps
xor
js
and
mov
mov
test
push
mov
adc
mov
jae
js
dec
mov
xlat
add
roll
push
or
xchg
or
hlt
into
lret
sub
scas
fisttps
outsb
pop
fbld
ss
mov
dec
mov
mov
mov
bnd
ds
or
iret
inc
push
out
popa
push
jbe
push
mov
inc
mov
push
test
lods
mov
pushfw
sbb
into
inc
mov
cmc
fisttps
mov
std
or
lods
xchg
imul
push
bnd
mov
in
shrl
mov
mov
push
jns
adc
icebp
pop
pop
mov
xor
push
in
jne
lret
popa
mov
arpl
or
jle
mov
xlat
mov
leave
jae
fldl
imul
pushf
roll
or
dec
ss
insl
xchg
adc
in
jae
daa
out
push
sub
mov
jo
jbe
mov
jl
xchg
add
mov
mov
shll
xchg
or
lods
adc
scas
ds
pop
lds
adc
inc
sub
pop
sub
test
xchg
adc
jo
in
es
bound
pop
dec
and
in
fidivs
adc
cmpb
popa
repz
mov
inc
jecxz
mov
push
push
aas
loop
daa
jne
test
das
sarb
sbb
dec
push
mov
adc
sbb
test
scas
icebp
mov
pushf
mov
xchg
aam
jecxz
sti
sbb
ljmp
or
lahf
out
mov
pop
sahf
loop
out
inc
mov
orb
es
sbb
cmp
pop
cmp
dec
jnp
fiadds
leave
test
bound
outsb
sti
xchg
inc
int
jbe
subb
mov
cmp
cmp
pop
mov
xchg
cwtl
jae
test
pop
sbb
imul
and
enter
xchg
fstps
and
push
ffree
ret
pop
fisubrs
mov
xor
push
cli
mov
lods
push
cmp
fidivl
sub
fbld
mov
mov
mov
cmp
clc
mov
ljmp
inc
jne
fcomps
sbb
xor
sub
imul
xchg
mov
push
inc
push
test
pop
fnsave
stc
fnstcw
or
mov
jecxz
outsb
gs
movsl
arpl
sbb
out
lods
xchg
rcrl
jl
enter
shll
leave
pop
mov
jmp
loop
push
andb
xor
jnp
sub
int3
inc
cmp
and
dec
mov
push
mov
and
daa
scas
and
cwtl
mov
jmp
inc
inc
jo
ss
jle
imul
xchg
sbb
test
xlat
outsb
add
jb
and
cmp
les
mov
stos
aas
gs
pop
ret
cmp
shr
jecxz
sbb
adc
cwtl
pusha
sub
xor
sub
mov
jae
xchg
imul
mov
test
rorl
dec
mov
in
push
push
push
add
mov
ss
sbb
push
push
xchg
jb
add
das
in
fsts
or
mov
das
out
sub
fcom
mov
sbb
lcall
xor
icebp
lock
pop
sbb
mov
push
js
sbbb
lret
lods
xor
lcall
leave
pop
fildll
push
sub
cltd
addr16
inc
jp
cwtl
out
sub
pop
adc
mov
cld
mov
mov
lock
and
lahf
lods
int3
bound
xor
sti
iret
dec
mov
popa
loope
and
cmp
mov
inc
push
adc
dec
into
xchg
mov
cltd
gs
sti
jns
inc
push
scas
lcall
nop
xchg
jno
icebp
push
fidivs
sbb
xor
lret
sbb
push
cmpb
mov
test
push
pop
gs
insl
push
into
cmp
and
pop
cmpsl
enter
jns
xchg
fisubs
pop
loopne
add
xchg
repnz
rorb
push
cmp
mov
jg
push
mov
out
push
test
sbb
dec
popa
int
or
or
mov
fsubrs
mov
and
iret
mov
int3
xchg
cwtl
xor
leave
push
xorl
cmc
lret
cld
sub
shll
sub
mov
jge
pop
loope
pop
mov
push
and
je
je
push
dec
rorb
adc
fs
aaa
mov
push
mov
push
jne
in
mov
aaa
testb
xlat
push
jo
shlb
andb
jae
mov
or
adc
adc
adc
sbb
mov
jle
dec
pop
test
jl
pop
mov
add
jne
nop
or
ret
lret
sbb
arpl
insb
inc
cmpsb
test
jbe
lret
ljmp
jno
cltd
mov
test
out
mov
push
out
mov
and
mov
inc
xor
mov
ds
pop
repnz
das
sbb
sbb
xchg
cmpl
mov
mov
inc
jecxz
femms
push
rcrl
repz
sarb
dec
pop
lds
in
jmp
jecxz
pop
and
sbb
rcl
cmp
mov
or
dec
add
lret
adc
popf
xchg
mov
xor
in
arpl
mov
adc
or
mov
adc
mov
outsl
or
pushf
decl
mov
or
sub
les
fbstp
div
int
sub
adc
leave
in
icebp
and
insl
stos
add
sub
pop
insb
fcmovnb
sbb
cmp
ss
cs
mov
push
pop
std
scas
dec
xchg
stos
js
sub
test
or
add
mov
mov
cmp
xchg
pop
imul
mov
inc
fbstp
xchg
cmpsb
imul
imul
aaa
mov
fisubl
mov
subl
pop
add
rcll
and
lcall
push
inc
decb
nop
or
jno
dec
and
pop
clc
nop
sub
cmpsl
sub
mov
mov
sbb
fdivs
roll
jge
mov
cmp
jmp
mov
xchg
mov
dec
loope
inc
popa
in
ret
sar
or
cmp
jbe
mov
movsb
jnp
fidivrs
imul
mov
loopne
test
imul
pop
repnz
stos
scas
and
pusha
mov
mov
daa
scas
test
leave
mov
es
shrl
xchg
repz
mov
jbe
cmp
stos
and
vmovmskps
add
insb
mov
ror
les
fstl
ss
inc
mov
adc
popf
and
push
jno
filds
pop
push
xor
mov
jecxz
pushf
mov
fldcw
pop
push
outsb
pop
add
adc
inc
shlb
ret
add
cmp
pusha
fsubrp
lret
loop
xchg
test
push
and
movsl
sbb
mov
add
jge
stos
int
test
xor
std
bound
mov
pop
mov
xchg
mov
add
mov
and
adc
inc
cli
test
add
bound
mov
mov
pop
cmpsb
add
lods
jge
and
cmpl
lods
mov
fidivrl
sub
add
sbb
dec
out
ret
aaa
iret
insl
add
inc
xchg
fcmovu
push
mov
or
jbe
jmp
push
sbb
push
or
jecxz
and
or
push
jae,pt
or
pop
cmp
cli
repnz
test
sbb
push
gs
push
pop
das
push
xchg
or
ret
pop
imulb
mov
iret
cmp
inc
xorb
mov
loopne
jmp
jl
push
jmp
pop
hlt
jo
stos
sub
movsl
pop
mov
fldenv
test
adc
push
fiadds
sbb
out
sub
jg
pop
mov
mov
sbb
daa
mov
jle
inc
push
push
mov
pusha
xchg
rcrl
in
inc
call
xchg
pop
and
test
cmovle
dec
lock
addr16
cmp
shrl
pop
jnp
imul
fdiv
push
and
or
leave
inc
sahf
adc
stc
and
shrb
arpl
mov
sbb
js
gs
cmp
adcl
loopne
sbbb
xchg
out
popf
mov
scas
push
loopne
mov
sbb
jno
test
cmp
inc
fidivs
cs
inc
inc
push
mov
adc
mov
sub
mov
cmp
cwtl
leave
cmp
dec
testl
loopne
ss
mov
je,pt
fs
adc
mov
jbe
adcl
mov
push
push
mov
mov
pop
mov
fdivrs
sub
pop
cmp
into
push
lea
xor
ret
jo
jg
and
pusha
push
jecxz
cmc
daa
lret
cld
mov
movsl
mov
mov
js
dec
inc
jnp
mov
sbb
xor
int
mov
or
and
jmp
sbb
scas
sub
lds
jb
push
jnp
dec
and
add
enter
xlat
loope
outsl
rcl
mov
and
lods
mov
leave
outsl
int
out
cmpsl
push
sub
in
outsb
shr
xchg
inc
iret
inc
xor
dec
mov
mov
cmp
adc
icebp
inc
adc
les
and
xlat
outsl
mov
cmp
push
cmp
ljmp
jmp
sti
mov
or
fs
add
ret
insb
pusha
pop
stos
sbb
mov
repnz
in
jmp
or
insb
fidivs
int
orb
xchg
pcmpgtd
ljmp
xchg
fcomps
lea
jae
adcl
xor
outsl
repz
lcall
in
loop
bound
out
xchg
dec
movsl
mov
in
mov
ret
dec
stos
call
cmp
xchg
inc
lret
push
icebp
xor
push
jno
ljmp
pop
imul
fdivrl
fsub
sbb
inc
fwait
inc
loopne
xchg
adc
js
xchg
imul
lods
in
mov
add
xchg
xchg
pusha
outsb
sbb
rcrl
push
mov
sub
jne
push
adc
adc
mov
popf
push
mov
push
ja,pn
xchg
and
lahf
sbb
push
or
pop
cmp
xchg
lods
lret
je
or
jl
lret
dec
add
popa
mov
test
dec
stos
das
push
pushf
add
fs
push
sbb
add
jl
shlb
or
ds
jp
sbb
pop
insb
cmc
mov
lea
adc
sub
dec
dec
pop
popf
aam
jnp
jmp
notb
or
cmp
sub
jb
nop
bound
add
mov
scas
mov
lods
rcrl
out
xchg
jg
fsts
mov
arpl
jmp
jnp
push
mov
rorb
icebp
jle
sbb
pop
sbb
int
pushf
xor
arpl
dec
lds
bound
popa
xchg
loope
xchg
in
pushf
scas
push
pop
cli
and
jne
mulb
leave
jno
out
jmp
jo
sub
add
scas
inc
dec
cmp
dec
test
std
mov
scas
add
inc
notl
xchg
xor
call
adc
xchg
in
push
scas
push
cmpsb
shll
aad
insb
dec
cmp
mov
or
add
fisttps
test
mov
or
fbld
ljmp
xchg
fwait
ds
push
jmp
stos
cmpxchg
lcall
and
and
or
nop
in
enter
or
imul
cmp
add
fdiv
cmp
push
clc
or
cmp
sub
iret
xchg
inc
xor
dec
aas
int
jb
sbb
sub
xlat
xchg
sub
ja
lea
mov
lahf
scas
and
faddl
sbb
cmp
jmp
fcom
jl
mov
push
jmp
ljmp
push
and
inc
inc
rcl
daa
add
jne
sub
mov
dec
cmc
push
mov
xchg
pusha
fsubrl
orb
dec
sub
dec
cmp
push
mov
pop
mov
lret
aaa
cli
ja
into
ficomps
insl
adcl
jo
cwtl
dec
in
xchg
jl
add
push
push
jae
cmpsb
push
ja
call
ret
cmc
xlat
xchg
mov
adc
xor
aaa
pop
jae
insb
js
js
jns
xchg
mov
or
cmp
push
test
pop
fnstenv
push
icebp
movswl
popa
scas
jns
insl
stos
add
pop
ja
ret
push
testl
rcr
inc
fdivrl
mov
push
js
leave
andb
outsl
ret
mov
inc
fldt
or
out
pop
loop
mov
sbb
adc
pop
add
test
or
push
inc
inc
js
fsubrs
jecxz
jb
sahf
cmp
pop
sahf
pop
imul
fcmove
jle
mov
dec
in
push
cmc
mov
insl
add
xor
cmp
pop
mov
sti
mulb
mov
dec
cmpsl
jbe
jb
das
xor
xchg
cmpsb
scas
js
out
jno
repnz
in
lods
cmp
test
mov
lods
fisubl
xchg
stos
rol
adc
push
cmp
fisubs
xor
push
int
push
inc
pop
cmp
pop
push
adc
inc
clc
adc
cmp
push
stos
xchg
adc
mov
push
insl
pop
lds
xor
mov
in
push
pop
out
loope
movsb
das
popf
fdivrl
and
outsl
push
xor
scas
hlt
out
ja
lahf
adc
sub
mov
fnstsw
pop
hlt
mov
push
je
cmp
xorl
enter
movsb
push
mov
scas
jecxz
mov
sbb
enter
popa
sub
mov
je
jge
int3
sbb
outsl
add
cmp
in
cmp
lods
insb
push
adc
xchg
cmc
das
sahf
add
leave
sbb
cmpsl
mov
mov
clc
mov
mov
add
xlat
cmp
cltd
enter
in
cltd
mov
push
mov
mov
sub
negl
pop
fsubs
cmp
enter
clc
into
cwtl
xlat
std
data16
pop
iret
dec
in
sbb
lcall
icebp
adc
mov
lock
dec
mov
adc
test
pop
xor
pop
mov
cmpl
fadds
sub
inc
out
xchg
int
pop
inc
push
insl
jbe
stos
mov
and
dec
fdivrl
and
cmp
arpl
push
push
inc
in
test
mov
jg
pop
or
adc
mov
ja
sub
lea
adc
jle
push
imul
daa
cmpsb
push
in
daa
mov
loop
sbb
sbb
sub
cmp
and
xlat
test
btr
adc
sub
cmp
mov
mov
data16
in
push
push
sti
adc
lcall
or
xchg
jp
fucomi
jge
cmpsb
addb
inc
ss
add
addr16
sub
mov
call
inc
stos
imul
cmpsb
loopne
sbb
rclb
ds
sahf
adc
or
mov
out
stos
or
cmpl
cwtl
and
push
imul
mov
xchg
or
fisubl
ret
jp
out
shlb
xchg
gs
cmp
movsl
dec
imul
scas
fdiv
jl
fdivr
xor
fldcw
std
mov
mov
test
jp
jecxz
fnstenv
push
insb
sti
pusha
loop
cmp
xor
cmp
jb
imul
fildl
nop
pop
fisubrs
pop
fdiv
push
xorl
dec
repz
push
sub
mov
mov
adc
push
orl
stc
push
orb
cmpsl
ja
sub
hlt
and
lods
push
int
mov
insb
xchg
sbb
addr16
mov
jge
xor
pop
out
jge
mov
fisttpll
adc
push
and
fcomp
sbb
iret
je
popa
mov
push
out
decb
mov
popl
sahf
dec
enter
adc
xor
sub
mov
imul
lret
into
adc
sub
mov
insl
inc
inc
fsubs
mov
jo
mov
push
pop
rcrb
and
pushf
mov
int
lods
sbb
testb
outsl
xor
push
in
lea
sarl
add
lahf
or
dec
mov
popl
jl
les
daa
dec
in
mov
cli
pop
cmpsl
ds
popa
test
scas
and
orb
cmp
and
cld
push
mov
ljmp
jno
mov
push
or
sub
bound
jnp
mov
jns
dec
mov
stos
hlt
daa
mov
ret
add
es
push
insb
jg
fistpll
jge
clc
cltd
call
jno
sub
leave
xor
sbb
inc
pop
into
cwtl
popa
push
xor
mov
pop
loope
das
repnz
add
xchg
jl
cmp
into
cwtl
and
loopne
mov
popl
xor
outsb
adc
repz
dec
add
dec
mov
mov
and
rcl
jae
out
rcrb
shrb
push
int
shlb
mov
adc
scas
scas
lret
pop
dec
push
push
push
lahf
mov
sbb
mov
jp
jne
xlat
test
adc
scas
fidivrl
das
addr16
mov
dec
add
mov
lods
lahf
ss
sbbb
in
xchg
loop
adc
test
sub
jb
push
mov
lea
and
inc
xor
jecxz
adc
cmpsb
mov
pop
cmp
orps
sub
mov
mov
out
push
jl
ss
imul
imul
cltd
test
inc
cmp
psrad
rcrl
clc
loop
lods
mov
cwtl
das
in
push
or
mov
stos
jmp
cmc
adc
jbe
pop
ss
stos
aas
aad
out
sub
fistps
dec
sub
orl
mov
pop
test
sar
inc
sbb
popa
jl
leave
and
cli
imul
push
ret
in
cld
hlt
js
and
cmpsl
xchg
insb
js
enter
insl
outsl
loop
xchg
adc
or
cmp
mov
orl
sbb
jle
xchg
xchg
pusha
dec
cmp
outsb
in
jge
lret
mov
testb
es
jne
lahf
xchg
dec
sbb
imul
into
ss
shl
out
sbb
xchg
mov
dec
ds
stc
xchg
adc
cmp
mov
mov
push
cmc
or
int
lock
inc
and
pop
std
pop
push
inc
push
mov
scas
call
inc
and
mov
fistpll
sbb
jnp
loope
adc
cmpsb
sub
dec
stc
mov
pop
fwait
cmp
sbb
aaa
push
push
popa
jge
jp
cwtl
push
or
loope,pn
jns
fisttpll
xchg
adc
fcomps
adcb
cmp
shrb
mov
push
jmp
or
mov
adc
popl
lea
repnz
popf
jmp
xchg
cmpsl
jne
inc
pop
sbb
cltd
push
add
cs
call
fldenv
push
cmpsb
xchg
cmp
clc
mov
repz
mov
push
popf
std
jge
lock
jbe
xchg
rcl
cmp
lea
sahf
xor
sbb
dec
out
mov
pop
scas
pop
cmp
nop
push
sbbb
jo
mov
fcoml
js
jbe
mov
mov
cltd
adc
fdivl
fs
inc
xor
fistps
xor
lods
gs
mov
cwtl
cmpsl
mov
movsl
pop
loop
pushf
idivl
mov
jno
cld
outsl
cmp
rcrb
repnz
pop
aas
xlat
sbb
rcll
and
and
inc
mov
pop
dec
dec
add
xchg
outsl
leave
and
test
add
ja
xchg
sarl
or
sti
imulb
jmp
rolb
fmull
jg
out
cmp
pop
adc
cmp
sahf
mov
nop
mov
mov
adc
cltd
push
add
stc
lods
push
xor
mov
push
adcb
sub
insb
cmp
dec
cmp
fldt
movsb
add
lret
jae
xor
scas
loope
xchg
jp
mov
xchg
mov
and
shll
in
sbb
addr16
stos
dec
pushf
sub
repz
dec
add
inc
stos
es
adc
cmp
repnz
scas
out
push
lret
xor
test
adc
xor
sbbb
test
mov
fimull
or
lock
inc
mov
push
leave
xlat
pop
int
into
pusha
je
sbb
incb
outsb
loop
jp
push
jb
in
inc
inc
cltd
mov
pushf
jl
dec
loope
add
inc
mov
inc
in
cltd
dec
sub
sahf
out
stos
daa
or
data16
xchg
orl
ss
fwait
inc
and
bound
mov
xchg
or
es
mov
lock
cmp
montmul
cmpsb
inc
xor
loopne
cli
fs
out
sbb
sub
insl
sub
nop
repz
repnz
and
dec
loope
dec
dec
out
lret
nop
lods
fs
ficoml
fsubl
mov
inc
jbe
ljmp
repz
and
out
icebp
adc
int3
mov
jns
pop
insl
xchg
sub
or
negb
jnp
scas
sub
frstor
call
and
rcr
push
add
xchg
aaa
bound
inc
fstpl
das
cmp
pop
insl
rol
cmp
sbb
out
jne
dec
in
mov
dec
es
pop
jne
test
scas
popa
clc
filds
adc
add
outsb
test
xchg
add
ja
das
mov
data16
jmp
pop
dec
negb
out
jns
aas
jge
jl,pt
shll
pop
icebp
js
daa
aas
cmpsl
dec
sub
jge
ds
inc
fwait
scas
pop
in
pop
insl
pop
sub
popf
sbb
imul
out
jecxz
inc
out
jp
lret
rolb
nop
pop
repz
iret
add
lods
pop
pop
jo
push
push
aad
mov
jbe
je
xchg
mov
xor
pop
icebp
out
push
xor
or
or
jl
mov
sbb
mov
cwtl
lods
mov
sbb
cmp
dec
cmp
or
imul
out
popf
in
mov
xor
das
fsubl
mov
and
jle
stos
inc
mov
pop
leave
mov
mov
outsl
call
test
cmp
mov
data16
mov
mov
sbb
mov
ja
jecxz
hlt
imul
fneni(8087
pop
mov
xor
testb
dec
cmp
xlat
xchg
jne
xbegin
mov
dec
hlt
cmp
iret
xor
aad
out
mov
cli
lods
in
or
inc
cmp
out
adc
and
inc
in
inc
dec
shll
into
push
jge
pusha
xlat
insb
pop
arpl
add
inc
jg
mov
mov
lahf
call
call
mov
jbe
and
inc
push
xchg
dec
mov
mov
inc
aad
pop
imulb
in
push
jmp
cmpb
sub
pushf
push
or
pop
out
sbb
inc
add
stos
xor
jnp
je
imul
push
jmp
jbe
jo
out
std
test
xchg
testb
or
sbb
test
or
cmp
daa
in
inc
lock
divb
test
les
or
adcb
aas
jge
mov
movsl
pop
cmp
fwait
fwait
dec
icebp
icebp
mov
dec
adc
mov
push
jo
mov
je
ror
xor
push
movsb
or
dec
pop
mov
mov
call
lods
arpl
mov
in
int3
mov
in
cmpsl
into
add
ds
add
inc
test
mov
xor
fimull
dec
imull
repnz
sbb
shl
int
in
sbbl
xchg
push
add
and
popf
mov
jmp
jo
outsl
sarb
adc
add
dec
lahf
lcall
pop
cmp
pop
lret
mov
test
pop
addr16
int
mov
sbb
pushf
jle
pop
ds
jecxz
pop
fwait
jae
pop
mov
mov
xchg
in
mov
cltd
daa
test
gs
test
ds
fsubrs
pop
idivb
std
cltd
cld
popf
inc
cmpsl
push
cli
je
imul
jns
daa
pop
cmp
xchg
int3
ljmp
xor
cmp
rorl
lret
rclb
fldcw
inc
ja
scas
hlt
mov
ret
push
repz
ja
lea
inc
cmp
fimuls
inc
cmc
inc
ds
sub
pop
out
mov
xor
lret
std
sub
cmp
or
inc
cwtl
xchg
adc
cwtl
movsl
pavgw
xor
xchg
push
ja
in
ret
xchg
fcmovne
in
xor
insl
aad
inc
fwait
cmp
mov
ds
mov
nop
fistps
jns
and
pop
fnstcw
fadds
repnz
adc
cmp
js
hlt
shlb
adc
jo
mov
pop
pop
or
push
mov
out
or
or
adc
mov
out
mov
out
mov
aaa
out
jp
rclb
xor
aas
mov
and
xchg
cmpl
stos
or
mov
mov
pop
movsb
jne
cmc
mov
test
inc
sbb
mov
jge
jno
xor
popa
lds
call
mov
ljmp
jno
pop
push
cwtl
sbb
mov
pop
mov
loopne
xor
sbb
push
push
call
fsubrp
lea
sbb
cmp
push
scas
scas
fdivs
movsb
cmc
inc
cmpsl
ljmp
xchg
push
test
cmp
push
xchg
add
and
divl
pushf
add
pusha
div
leave
jns
addr16
mov
leave
mov
mov
push
shll
push
and
push
imul
xchg
mov
push
jnp
cmc
mov
add
sub
rolb
dec
inc
push
xchg
test
or
fistpl
inc
dec
cmp
pop
loope
jne
dec
loope
test
pushf
rcrl
ud1
ja
inc
cmp
cmpsb
leave
int
or
sub
test
push
mov
lds
ret
test
mov
xchg
jmp
int3
pop
in
das
flds
or
lcall
jg
std
cltd
mov
sub
add
push
push
sub
cmpsb
jne
sub
dec
jo
pop
out
mov
rcl
mov
adc
lods
jmp
test
sub
cli
fcmovne
mov
addr16
xchg
rcll
imul
and
cmpsb
mov
jge
pushf
scas
out
push
xorb
jge
ljmp
pop
test
sbb
xchg
out
cmp
dec
cwtl
cmc
sbb
scas
push
ror
mov
mov
adcb
sbb
sbb
mov
or
ret
sbb
cmp
mov
fbld
and
mov
sti
divl
mov
iret
popf
jmp
mov
es
out
dec
mov
pop
orb
sub
out
sahf
repnz
fmul
fidivl
std
iret
and
fcomps
add
mov
ljmp
fcmovnbe
cmpsl
aas
and
pusha
or
idivb
and
lock
fs
fistpll
mov
ljmp
push
popa
dec
pop
pusha
xlat
sti
cmpsl
ljmp
dec
test
inc
out
adc
daa
mov
or
pop
out
mov
hlt
dec
mov
repnz
add
mov
xor
xchg
mov
push
les
mov
mov
jecxz
jge
sbb
xor
xchg
inc
popa
xchg
pop
lcall
inc
adc
inc
cmpl
imulb
gs
leave
inc
push
add
push
mov
push
or
add
ret
negl
mov
stos
push
in
scas
xor
cltd
mov
inc
mov
cmp
test
iret
and
lret
adcb
mov
iret
aaa
xchg
repz
hlt
enter
sbb
dec
pop
push
cmp
mov
loope
lods
call
in
push
rorb
cld
dec
mov
sub
test
scas
cli
inc
fidivl
enter
js
dec
std
dec
ss
data16
xchg
call
aad
fstp
mov
xchg
lods
jne
mov
clc
xchg
arpl
notl
sub
fs
pushf
xchg
cltd
cmp
ja
call
es
xchg
iret
sub
aad
in
jmp
mov
add
cmpsl
das
cmp
test
sbb
rcrb
mov
out
sbb
mov
push
popf
mov
cmpsl
xchg
ja
jnp
loope
inc
xchg
js
push
repnz
and
lret
insl
push
push
roll
xor
sub
mov
cld
test
mov
cmp
lahf
xchg
xor
mov
idivl
rcrl
xchg
sti
jl
sub
or
mov
ja
leave
jecxz
je
loop
js
mov
inc
imul
add
jmp
push
mov
and
inc
iret
sahf
sbb
add
aaa
cli
push
sbb
xor
jae
sub
rcl
aaa
dec
xchg
sub
mov
loopne
stos
xor
rcr
cmp
or
cmpsl
dec
xchg
rcrb
mov
cmp
mov
lret
jle
mov
je
mov
in
lods
jmp
fmuls
mov
sbb
and
cmc
fdivl
jb
aaa
ds
fmuls
mov
mov
rorl
loopne
ljmp
push
mov
jge
arpl
add
and
adc
pop
fisttps
sub
cmp
cmp
jp
add
jno
jg
push
inc
mov
jecxz
xchg
nop
push
add
dec
mov
inc
push
push
xchg
aam
je
fidivs
sahf
mov
in
xor
inc
rolb
sbb
sub
incb
xor
or
push
jbe
sub
out
imul
add
in
mov
in
dec
fmull
mov
cmp
stos
lahf
mov
mov
loopne
add
xchg
add
outsl
lret
cmpb
mov
ret
pop
in
mov
mov
push
xchg
stos
icebp
movsl
call
adc
insb
nop
lea
imul
push
push
fidivrs
pop
cld
inc
xor
or
stos
xchg
mov
scas
movsl
dec
js
and
fwait
cmp
adcl
out
scas
out
push
out
test
adc
jnp
mov
cmc
lret
xchg
add
mov
inc
sub
inc
addr16
add
das
pop
mov
push
push
aaa
jb
sub
lea
ret
mov
jo
and
insb
mov
popa
fnstenv
cli
mov
ss
sbb
cmpb
insb
in
xor
xchg
push
nop
jbe
pop
test
push
pop
ds
stos
shrl
mov
jle
fdiv
cmpsb
mov
mov
test
jbe
ja
outsb
pop
pushf
orb
push
jae
adc
sti
ret
jnp
ret
push
push
or
jne
loopne
lock
popl
xor
push
lods
test
mov
xor
lret
popf
lret
test
movsb
stos
inc
cld
stos
in
loop
jb
cwtl
pop
and
scas
add
lcall
movsb
adc
aad
mov
adc
repz
ret
push
mov
into
xorl
test
push
sbb
ljmp
push
int
data16
je
int
push
lods
cmp
mov
or
int
pusha
fldenv
sarl
cmpsl
outsb
jnp
shlb
addr16
mov
mov
sbb
into
jnp
mov
cmp
xlat
or
ret
aas
lret
inc
jne
mov
inc
xor
ss
inc
icebp
and
pop
in
mov
rcl
add
into
ret
jg
hlt
cwtl
mov
mov
mov
iret
lds
inc
adc
push
sbb
in
ds
sub
jae
mov
cmc
sub
dec
jl
hlt
movsl
fsubr
dec
cwtl
sub
mov
and
movsb
fwait
test
pop
mov
mov
rcll
mov
fstpt
inc
fs
cmc
sub
xor
sbb
xchg
shrb
ror
ds
adc
adc
mov
adc
dec
data16
pushf
or
lcall
mov
pop
add
insb
stos
inc
fwait
aad
bound
rolb
xchg
jmp
mov
pop
in
imul
pop
test
add
pop
repz
add
pop
icebp
sbb
ficompl
add
mov
jno
sti
int
ss
mov
or
push
jno
cmpsb
mov
lahf
sbb
push
add
std
inc
les
lods
pop
pop
fwait
push
pop
ret
cmp
call
fnstcw
xor
fisttpll
xchg
test
jge
add
popa
test
sbb
jl
sub
xor
mov
mov
inc
ds
in
pop
inc
cld
pusha
repz
je
mov
iret
out
insb
jns
xchg
add
pop
add
inc
imul
cmp
mov
jno
cmp
jecxz
sbb
sub
xchg
and
push
xchg
or
pop
add
adc
adc
addr16
mov
mov
sarl
add
loopne
arpl
mov
fucomp
es
or
jge
adc
fwait
loop
sub
outsl
mov
push
cli
add
pop
push
rorl
mov
mov
in
inc
push
in
lods
iret
push
add
outsl
mov
sub
div
lret
jo
decb
xchg
pop
fstl
rolb
scas
fmuls
push
xchg
into
fadds
cmpsl
xchg
add
dec
and
sbb
out
stos
mov
adc
outsb
adc
cmp
mov
outsl
jbe
cwtl
aaa
mov
jo
add
mov
push
xor
scas
lds
jge
mov
pop
mov
sub
dec
leave
fnstenv
std
push
mov
push
fistpl
ret
inc
jmp
push
ljmp
jno
jmp
lret
shlb
sar
mov
fisttps
addl
add
pusha
push
cmp
cmp
ja
scas
push
xlat
pop
cld
ret
pop
mov
movsb
mov
jle
xchg
and
les
adc
flds
jg
mov
jb
cli
movsb
push
fbld
icebp
add
or
out
rolb
test
xchg
loope
add
mov
push
je
xchg
bound
clc
pop
out
fmull
cmp
sahf
dec
stc
arpl
cwtl
lret
inc
jmp
mov
in
add
ficompl
add
xor
or
jg
cmp
jae
test
mov
push
fnstcw
je
leave
mov
in
lods
les
ja
mov
pop
pop
cmp
xchg
fdivl
addr16
aad
xor
pop
pop
rclb
cmpsl
mov
bound
mov
xchg
test
lret
iret
mov
xor
inc
and
mov
mov
rorl
pop
xor
mov
mov
cmpl
test
mov
jecxz
sbb
cmp
lahf
jecxz
stc
mov
adc
xchg
push
lahf
push
cld
cld
sbb
int3
in
fsts
imul
and
mov
inc
jbe
sbb
sahf
jnp
or
stos
xor
mov
inc
in
cmp
xchg
das
adc
in
outsl
jns
sbb
inc
jl
les
rcl
inc
loopne
jbe
lcall
in
fisubrs
fwait
or
icebp
add
stos
add
pusha
xchg
jbe
inc
das
or
lock
sbb
mov
sub
jne
push
sub
movsb
insl
mov
adc
xchg
xchg
insl
mov
cwtl
stos
add
hlt
pop
add
and
jp
loope
xchg
xchg
and
addr16
jg
and
hlt
lret
popf
sbb
push
nop
fstps
dec
add
mov
popa
leave
adc
xchg
ljmp
xchg
inc
testb
mov
inc
and
push
popa
ss
ret
adc
jb
movsb
and
divps
cmp
nop
enter
jmp
xchg
fdiv
cli
ja
and
dec
sub
sahf
adc
mov
test
mov
stos
mov
repnz
mov
cli
pop
sbb
call
sub
ja
inc
xor
popf
mov
mov
jae
nop
adc
aas
outsb
add
xchg
roll
sahf
add
movsl
mov
add
gs
stc
xchg
and
jmp
icebp
mov
out
ficoml
cltd
jno
sbb
adc
sarb
cli
sbb
rorb
jae
call
cmpsb
jbe
loop
mov
fwait
andl
mov
or
or
mov
mov
popa
ret
push
in
repz
test
mov
ds
sub
jp
insb
and
subb
pushl
lcall
rcrb
stc
adc
and
push
movsl
cmp
and
cmp
fcoms
and
scas
mov
lds
mov
mov
push
cmpsb
pop
test
lock
cld
leave
add
and
push
xor
xchg
scas
in
dec
pop
inc
inc
dec
dec
inc
pop
mov
jg
jecxz
adc
popf
scas
pop
out
in
and
fiadds
mov
cmp
sbb
lods
jo
mov
mov
cmp
inc
adc
inc
fldt
and
inc
pop
fidivs
cmpsb
call
and
jbe
inc
sar
xchg
add
push
mov
dec
jae
fmulp
jmp
add
push
cmp
jle
lods
scas
xor
jno
jno
fdivrs
or
out
mov
outsb
sbb
lret
repnz
stos
and
cmp
mov
xchg
cmp
daa
sub
fnsave
jmp
test
and
cltd
dec
or
out
xchg
mov
xor
out
adc
aad
sbbb
imul
lahf
ljmp
mov
sbb
mov
mov
push
dec
pop
xor
pop
scas
mov
push
imul
jg
in
in
lahf
movsl
mov
xor
loope
mov
pop
add
add
dec
push
sub
lods
out
push
jl
ljmp
inc
pop
rcrl
mov
and
test
dec
fists
pop
int3
sbb
dec
popa
movsb
sbb
das
fdivrp
aas
mov
lret
shrb
cmpsb
cs
sub
insb
lahf
add
outsb
mov
sti
xchg
xchg
mov
push
add
xor
inc
movsl
lods
out
leave
fwait
rorl
push
test
mov
mov
verr
cmp
xchg
incl
and
test
mov
add
in
sbb
jae
mov
fiaddl
scas
ss
pop
push
dec
pop
packssdw
cltd
dec
or
mov
mov
pop
and
imul
popa
sub
add
frstor
insl
mov
cmpsb
enter
sub
or
stos
lods
addr16
push
ds
andb
dec
insl
sbb
pop
lret
das
jns
and
dec
cmp
and
repz
cltd
pop
or
fnsetpm(287
mov
ret
lods
add
sbb
ficoms
xchg
push
jl
cmp
fs
in
pushf
sahf
push
adc
fmull
cmpsb
sub
mov
stos
repnz
bound
cld
outsb
mov
push
xor
fimuls
in
add
or
cmpb
push
iret
arpl
cmp
pop
or
dec
lcall
insl
sub
xchg
sub
ror
mov
jmp
scas
sbb
push
cmpb
ss
pop
or
push
sbb
xor
imul
pop
pop
push
jg
in
mov
lds
sub
aas
stos
jge
cmpl
push
negb
lods
push
mov
jge
cmpsl
or
push
pusha
inc
pop
lcall
daa
mov
mov
or
std
adc
mov
insl
pop
jecxz
xor
pop
ret
dec
lcall
inc
data16
jg
add
scas
popa
clc
fcomip
and
mov
sti
xor
cmc
xor
pusha
jbe
sbb
pop
pop
cs
push
aad
inc
fcomps
sbb
or
movsl
mov
mov
inc
xlat
push
inc
stc
js
imul
lcall
insb
ljmp
xchg
inc
sbb
sbb
sbb
and
mov
jb
loopne
imul
es
mov
ja
aaa
cmp
pop
mov
push
mov
clc
adc
jmp
test
incl
cmp
jmp
xchg
and
cmpsb
xchg
repnz
push
jb
add
jge
push
enter
sbb
xlat
test
mov
jae
nop
push
sub
jbe
les
mov
insl
data16
pop
aad
lods
jmp
mov
pop
push
push
cmc
sbb
mov
cmp
jbe
mov
jb
loopne
test
xor
fdivr
mov
lds
push
sbb
mov
adc
inc
sbb
xor
or
stc
pop
xor
pop
flds
adc
mov
rclb
sbb
add
pop
mov
fidivrs
mov
mov
xor
adc
adc
sahf
out
xchg
xchg
add
mov
lods
cld
mov
push
testb
inc
sbb
sahf
dec
push
out
test
pop
adc
inc
cs
mov
daa
pushf
in
std
jmp
out
inc
pop
cli
cmp
int
sbb
add
push
outsl
xchg
inc
push
jae
xlat
stos
inc
addr16
incb
mov
movsb
mov
into
xorl
nop
dec
push
cmp
push
daa
mov
sete
mov
mov
lock
push
hlt
mov
push
inc
shll
inc
mov
repnz
hlt
addr16
mov
xor
xchg
out
dec
jb
int3
jb
xchg
sbb
out
sbb
jb
and
xchg
enter
andl
cmc
daa
addr16
imul
mov
js
xchg
fmull
popa
adc
push
mov
rcrl
sub
adc
cs
movsl
inc
in
and
aas
cmp
xchg
mov
incb
aas
sbbl
aam
xchg
outsb
jp
or
cli
jg
movsl
in
lcall
cmp
and
and
incl
movsb
inc
fst
cmp
sub
mov
fbstp
call
or
inc
out
adc
dec
lret
insb
imul
add
insb
sbb
in
hlt
pop
add
jl
push
insb
aam
jp
jnp
fldcw
adc
add
nop
lahf
jecxz
rolb
jecxz
in
rcr
sbbl
sub
jnp
xor
sbb
fdivr
cmp
fsubr
jmp
cltd
cmc
ret
mov
cltd
stos
xor
out
ficoms
mov
daa
out
xor
out
test
cmp
fiadds
or
adc
push
mulb
scas
push
adc
lock
inc
or
jbe
pop
mov
and
clc
inc
mov
pop
lods
pusha
lcall
xor
out
jl
xchg
mov
inc
loopne
or
xchg
pop
sarl
add
xchg
lret
mov
ret
repnz
divl
mov
add
mov
test
mov
and
insb
sub
or
mov
imul
pop
repz
mov
mov
out
lret
lret
mov
push
xor
jmp
xchg
mov
push
in
inc
dec
lret
adcb
out
subb
xchg
jp
mov
repnz
dec
add
lods
pop
lea
sub
xchg
jecxz
and
repz
testl
mov
lods
icebp
sbb
adc
xchg
jg
pop
movsl
add
and
shl
js
dec
cli
and
je
mov
loope
jecxz
ss
sbb
out
xor
sete
adc
mov
sbb
sub
cmp
in
jge
sub
sbb
loope
xchg
cmp
or
iret
push
push
dec
cld
inc
pop
es
ss
push
xchg
xor
xor
pusha
xor
ss
sub
xchg
loopne
mov
jbe
daa
jb
adc
lahf
shlb
xchg
xor
cwtl
call
lods
jo
int3
xor
insb
sub
jbe
hlt
inc
sbb
outsb
add
xchg
out
stos
mov
cmpl
xor
mov
push
jno
out
cmpsl
das
adc
cmc
mov
in
in
addl
and
stos
std
mov
mov
daa
test
js
dec
mov
xchg
cmp
fdivl
adc
lret
clc
add
cmpsl
scas
loope
or
cmp
mulb
adc
fidivrs
or
sbb
xor
or
mov
xchg
cs
pop
les
sbb
jb
mov
jbe
in
jne
sub
lods
and
lret
pop
movl
das
pop
push
jmp
outsb
je
aad
push
fwait
repnz
cltd
sub
pop
mov
ds
inc
add
jecxz
rcll
adc
sti
scas
ftst
mov
push
stos
sarl
in
shr
add
pushw
loopne
jo
push
lods
frstor
mov
dec
push
mov
dec
push
cmp
scas
or
pop
sub
es
bound
push
jmp
nop
jmp
or
adc
imul
enter
sbb
push
mov
fisubrs
mov
loopne
aas
pop
cwtl
test
into
arpl
mov
ljmp
testl
mov
nop
mov
out
test
popl
sbb
xchg
push
leave
inc
mov
mov
dec
mov
push
lret
lret
fcompp
push
mov
mov
mov
ret
mov
mov
shlb
pop
pop
push
or
fdivs
pop
xchg
fcmovbe
lods
jns
sti
sbb
lahf
mov
cs
cmp
push
insl
inc
stc
gs
std
popa
sbb
sub
xor
outsl
insl
add
push
faddp
mov
outsb
shr
ret
gs
inc
xchg
cmp
in
mov
sub
pop
mov
jecxz
sbb
mov
inc
push
popf
inc
and
shl
cmp
into
aam
bound
cmp
adc
cli
xchg
pop
daa
addr16
inc
outsb
add
out
call
es
push
pusha
mulps
adc
mov
scas
fs
mov
jmp
pusha
divl
jno
or
ds
push
in
orl
jo
out
xchg
mov
cmp
rcrb
ror
hlt
mov
cld
inc
outsb
adc
mov
mov
sbb
test
aaa
inc
pop
mov
nop
imul
fdivs
out
push
js
adc
jne
add
jle
xor
xchg
bound
jge
jp
sahf
pop
enter
leave
push
je
outsl
pop
daa
push
add
add
mov
das
jg
popf
cltd
jo
mov
test
jno
jmp
test
xchg
add
or
fwait
ret
ja
xchg
and
sub
outsb
jl
mov
inc
jne
sti
and
arpl
mov
mov
movlps
test
mov
daa
fwait
aam
xchg
xchg
cmp
clc
pop
jne
fwait
bound
mov
fstl
mov
mov
jne
fidivrs
aam
in
mov
lret
testl
push
in
out
jle
popf
mov
incl
sub
mov
pushl
cwtl
sub
jns
mov
push
cld
mov
les
in
scas
and
std
js
sub
cltd
pop
xor
xlat
outsb
and
xchg
xor
cmc
mov
fstpl
aad
cltd
xor
xchg
js
filds
popf
jmp
int3
or
rorl
loope
jmp
stos
fldl
cli
push
fcmovbe
adc
cmp
xchg
scas
mov
cmc
mov
xchg
call
fpatan
pop
fisubs
jp
jno
push
lret
fwait
add
int
pop
mov
add
ljmp
imul
cmc
shll
mov
data16
in
dec
fcomp
or
add
push
or
scas
xchg
adc
mov
dec
or
dec
cwtl
sub
dec
add
jae
xchg
daa
jno
test
nop
sub
sub
aas
cmp
stos
jp
pop
insb
rolb
hlt
xchg
cltd
lods
mov
in
xchg
int
shl
sbb
lcall
mov
lea
das
cmp
aam
sub
jl
rorl
shlb
aad
and
and
in
cwtl
and
sbb
mov
jecxz
jo
aad
fs
and
xor
mov
cmpsl
mov
add
jl
dec
xchg
dec
jecxz
push
fildl
pop
out
or
add
inc
mov
imul
push
inc
xchg
cmpb
popa
push
mov
in
stos
inc
lret
jge
sub
inc
pop
add
sbb
sahf
push
mov
mov
mov
stos
jmp
cltd
aaa
jbe
iret
es
imul
sbbb
ja
mov
push
mov
aad
mov
in
addb
mov
ficomps
mov
sub
int
and
mov
popa
jle
sbb
adc
xchg
repz
mov
mov
push
lods
fdivrl
lea
jge
xor
lods
push
jmp
sub
lea
loope
or
scas
mov
js
ja
add
loopne
arpl
aad
lcall
pop
negl
sarl
ret
pop
pop
lahf
mov
lds
sbb
das
mov
push
xor
mul
mov
jnp
iret
inc
push
jmp
aaa
xor
fwait
cltd
xchg
fs
pop
incb
int
or
pop
cli
pop
push
stc
jb
sub
nop
lods
and
adc
push
sbb
insl
push
push
sbb
out
pop
insl
popa
xor
orl
push
fcomps
sti
jp
mov
pop
mov
cmp
lahf
pop
call
call
test
sub
dec
mov
push
sub
or
imul
or
cmp
jbe
pop
ret
or
push
jo
arpl
imul
daa
push
in
mov
shlb
pop
xchg
fcoml
xor
stc
mov
mov
cmc
popa
nop
xchg
into
std
adc
or
adc
loopne
xchg
mov
xchg
gs
icebp
scas
push
inc
aas
and
mov
lret
fbld
sbb
adc
dec
mov
imul
mov
into
dec
mov
movsb
inc
inc
xlat
pop
jl
adc
iret
pushf
ret
rorb
fmull
in
std
leave
add
pop
loop
xchg
mov
sbb
mov
pop
mov
pop
in
into
repz
data16
sarb
fistl
loop
into
push
sub
pop
or
in
mov
add
daa
daa
jmp
adc
push
mov
outsb
xor
jecxz
pop
sbb
dec
loop
aas
jecxz
cmp
testb
and
sub
pop
inc
inc
leave
in
inc
push
mov
gs
lea
xchg
ret
insb
cmp
popf
movsb
inc
push
sub
sub
loop
xchg
and
sbbb
pop
std
insb
arpl
and
lret
cmpsl
push
icebp
iret
in
test
test
test
out
lods
push
ficoms
lods
data16
fsubrs
mov
mov
popa
repnz
in
sti
fdivr
and
jmp
lds
mov
inc
jg
mov
jl
inc
aas
arpl
inc
xor
lods
mov
pop
aas
mov
int
sub
adc
or
pop
pop
mov
jae
sbb
loop
inc
adc
ret
adc
roll
das
pusha
sti
clc
idivl
pop
sub
subl
movsl
loopne
or
mov
addl
es
test
push
mov
stos
fcompl
mov
mov
scas
mov
fucomip
out
testl
adc
mov
data16
pop
outsb
jp
jl
imul
add
xorb
sub
movsb
cmp
jp
fwait
jmp
ret
inc
xchg
mov
leave
sahf
repnz
mov
mov
and
sbb
aaa
cld
cmp
jmp
sti
cwtl
test
iret
sbb
sti
lahf
sub
pusha
jle
movsb
cmp
cmc
andl
pop
dec
fwait
aas
gs
cmp
mov
push
jle
mov
mov
fiaddl
cmpb
and
test
push
sti
stos
lds
xchg
cs
test
xchg
lcall
das
pop
mov
mov
loopne
jl
dec
add
sbb
push
test
insl
scas
sub
mov
sub
pcmpeqb
movsl
push
add
or
inc
addr16
pop
icebp
je
mov
adc
push
mov
xor
jo
lea
mov
in
insb
pusha
sbb
mov
lcall
pop
cmp
dec
mov
mov
mov
rol
test
sti
adc
popa
das
cli
jbe
shl
fists
lahf
stos
lcall
jno
adc
push
jnp
arpl
mov
pop
scas
push
inc
sub
xchg
imull
sbb
xor
lcall
pop
sbb
or
adc
jo
pushf
scas
push
lock
pminsw
push
push
pushf
push
aam
les
lret
bound
dec
fcoms
push
outsl
mov
jmp
sbb
cs
jmp
xchg
adc
jno
jne
mov
xchg
stos
push
jle
push
pop
or
sarb
pop
scas
mov
popf
xor
dec
mov
push
arpl
or
mov
stos
es
sub
les
cmc
fwait
xor
add
out
fidivrs
push
lock
fdivl
jl
sub
add
sahf
inc
or
mov
jo
cpuid
mov
push
shrb
movsl
je
mov
lock
xchg
xchg
out
bound
lret
mov
jp
push
xor
lea
push
int
ret
divl
insb
shr
sbb
adc
or
dec
cmp
sub
push
je
lock
and
nop
ficoms
xlat
pop
outsb
lods
out
jp
test
jl
jne
xlat
jg
adc
mov
inc
icebp
sub
lods
xchg
aam
jle
xchg
add
dec
adc
add
inc
into
dec
inc
orb
cld
insb
jno
insl
lods
mov
inc
ret
mov
lods
fistpll
shlb
inc
pop
lock
cmp
cmp
xchg
scas
into
mov
add
fiaddl
and
inc
mov
icebp
sahf
out
xor
shlb
jmp
jae
fnstenv
push
push
mov
js
inc
sbb
imul
rclb
mov
out
in
or
ret
cli
ljmp
jl
cwtl
stos
xchg
and
dec
mov
jmp
xchg
xchg
pop
enter
bswap
insl
add
das
fisubs
dec
fsub
add
je
or
lret
cmp
cmpsb
cld
push
test
rclb
mov
mov
mov
mov
and
mov
and
push
aaa
and
sbb
cmpsl
sbb
orl
lahf
aam
xchg
push
bound
pop
cmpsb
leave
mov
pop
or
aad
cmp
adc
in
in
andl
cwtl
aaa
sbb
sbb
jns
and
popf
fists
pop
mov
out
cmp
mov
int
pop
mov
sti
pop
lcall
lds
xor
sub
or
stos
scas
mov
mov
mov
and
nop
sbb
xchg
pusha
stc
popf
cmpsl
decb
rcrb
js
xchg
stos
filds
loopne
aad
cli
push
dec
addr16
sub
cmp
xchg
les
incl
inc
popa
xchg
dec
push
jmp
mov
jecxz
and
shr
in
dec
xchg
add
xor
dec
cmp
inc
imul
aaa
or
lret
or
mov
repz
adc
push
mov
adc
jns
mov
adc
xchg
leave
or
sti
cmpsb
push
and
add
add
loope
xchg
sub
mov
mov
push
in
adc
cmovnp
pop
sub
xlat
insl
sub
in
xor
push
sub
add
mov
mov
sahf
popa
xor
mov
pop
dec
in
notl
adc
or
xor
pop
lds
and
cmpsl
and
xchg
sub
mov
adc
or
jae
imul
dec
sub
mov
shl
mov
das
in
xorb
jno
das
mov
cli
push
cld
inc
adc
xchg
xor
pop
jbe
sbb
xchg
adc
xor
test
mov
loopne
inc
incb
mov
loopne
stos
sbb
pop
cmpsl
mov
mov
and
mov
cmp
push
loopne
repnz
cli
mov
sub
jns
jg
clc
or
xlat
mov
stc
aas
lret
xchg
dec
sub
jb
and
clc
cmpsl
aas
jl
mov
pop
push
adc
aas
xor
stos
adc
pushl
fs
mov
xchg
adc
ret
es
pop
lods
rorl
inc
mov
ja
push
ljmp
insl
push
andb
pushf
orl
ss
addr16
lods
fstl
je
ret
jge
cmp
sub
push
repnz
popa
cld
iret
int3
pop
data16
addr16
popf
fidivs
xlat
je
jns
shll
push
pusha
inc
fisubrs
or
imul
fstps
shlb
shlb
out
test
jnp
stos
push
ret
pop
inc
inc
sbb
sub
sub
in
jle
sub
push
pop
mov
inc
movsl
mov
mov
jl
ja
sub
mov
or
imul
scas
pop
popl
testl
lea
out
stc
mov
dec
dec
mov
xor
es
into
jle
push
out
inc
jno
cli
inc
outsb
sub
or
xchg
idiv
pop
std
mov
les
daa
les
mov
jne
jbe
sbb
add
insb
dec
xchg
xchg
cmpsl
xchg
xchg
mov
jl
repnz
mov
data16
shrl
jae
in
pop
add
adc
idivb
inc
push
add
lods
cmpsl
sbb
fbstp
je
outsb
pop
push
add
jl
fisubl
es
jmp
mov
lock
stos
inc
fiadds
enter
mov
dec
inc
cmpsb
xchg
lds
xchg
adc
and
mov
ficoms
push
icebp
xchg
scas
mov
jg
pop
pop
ss
xor
cmp
jecxz
lcall
sub
ja
ds
jp
xor
sub
testb
jo
out
into
jno
jl
mov
adc
imul
lock
in
cmp
mov
push
insb
ret
mov
ret
or
pushf
iret
je
sbb
pop
xor
xchg
repnz
fwait
xor
lret
cmp
mov
fwait
jo
popa
dec
fxch
dec
adc
rcrb
out
sti
mov
bnd
dec
sub
jo
push
dec
cmc
mov
arpl
inc
xchg
jecxz
negb
lods
pop
lock
add
rol
fs
aad
inc
push
movsb
sub
mov
jbe
enter
fs
pop
icebp
aas
shlb
cltd
add
outsl
mov
sti
jne
add
dec
insb
mov
jae
fwait
pop
in
mov
push
mov
loope
or
pushl
xadd
imul
add
daa
or
out
xor
stos
lods
mov
pop
pop
into
xor
lods
and
sbb
xlat
test
outsl
jbe
and
add
mov
dec
sbb
enter
inc
jmp
call
add
jo
or
push
dec
loopne
jl
xchg
add
in
mov
fcmovu
arpl
pop
cmc
jl
lea
fimull
jge
daa
scas
sub
loopne
lret
pop
sti
mov
pop
mov
cmp
push
test
test
sub
jo
mov
dec
mov
test
jge
and
pop
jno
std
psubw
es
arpl
cmp
adc
xchg
xchg
lahf
pop
adc
adc
jae
stos
xchg
repnz
add
jmp
scas
xchg
ljmp
out
mov
push
int3
test
incb
imul
jmp
loopne
sub
testb
pop
fnsave
test
mov
add
add
dec
push
add
sti
lcall
ds
aad
pop
cwtl
inc
xchg
pop
adc
cs
push
dec
shlb
loope
xor
pop
je
push
sbb
ds
pop
movsl
xchg
push
scas
mov
mov
lea
stos
add
push
push
and
mov
inc
mov
in
xchg
mov
mov
inc
or
decb
sub
ljmp
out
aad
shl
mov
add
daa
fdivs
or
xchg
mov
or
jle
stc
nop
mull
pop
xchg
cs
mov
sub
out
xchg
adc
sub
sbb
mov
shll
pop
outsl
mov
int
sar
xchg
mov
pop
scas
xor
loop
sbb
pop
cmp
and
aas
loop
in
mov
pushf
je
loope
dec
mov
jne
cmpsl
mov
adc
mov
int
subl
and
or
jbe
lods
inc
mov
fstl
xor
fdivrl
es
jns
pop
stos
sub
xor
or
push
push
jo
loop
pop
cmpsl
and
dec
sbb
jne
inc
inc
sub
push
mov
mov
jge
std
xchg
negb
sub
dec
cld
sbb
dec
jne
in
lret
and
dec
inc
mov
inc
out
pop
pop
lock
push
add
fmull
inc
cmp
leave
imul
pusha
mov
mov
popf
jg
jb
fisubl
test
aad
cmp
sub
cmp
jne
ss
jae
int
pop
loope
jecxz
adc
and
sar
aaa
dec
mov
cmpsb
mov
fisttpl
cmpsl
shlb
imul
faddl
test
stos
sub
inc
jg
cli
repz
fsubr
xchg
jmpw
jle
xchg
andb
xchg
outsb
fwait
sub
mov
lods
and
repz
and
sbb
pop
xor
aaa
dec
add
gs
xchg
add
dec
xchg
loope
lock
sti
sub
ljmp
int
add
outsb
test
repz
icebp
mov
add
add
lcall
sbb
lds
dec
mov
cmp
mov
push
push
cmpb
cmp
dec
scas
xor
lock
and
enter
dec
or
scas
fwait
sub
pop
ss
xchg
in
cltd
das
mov
ljmp
jo
add
pop
stc
pushf
mov
push
addr16
pop
lcall
test
xorl
fmul
adc
js
mov
mov
or
iret
pop
push
cmp
push
ret
scas
push
loope
fmuls
xchg
paddusb
inc
mov
pop
test
mov
pavgw
fucomip
push
sbb
jbe
push
push
xchg
push
in
pop
push
popf
out
out
repz
icebp
fucomp
fsts
xor
lret
into
mov
mov
and
or
jb
out
xchg
sub
pusha
jnp
add
enter
std
mov
push
push
xchg
mov
xchg
lret
imul
xchg
idivb
fists
aas
test
loopne
leavew
shlb
mov
or
dec
xchg
cmpsl
ds
jbe
imul
mov
xchg
mov
inc
aaa
lret
int3
xor
shlb
divl
aam
es
cs
lods
addr16
sub
xor
in
pop
fwait
sub
repz
pop
cmp
push
cld
dec
gs
pop
loop
xchg
add
fwait
mov
xchg
cmp
rorl
jecxz
roll
xchg
stos
stos
arpl
test
sbb
dec
push
imul
adc
popf
cmp
cs
push
fwait
push
ljmp
test
push
shll
cwtl
incb
push
repz
cs
mov
int
pop
adc
adc
cmc
out
sub
sbb
leave
ds
adc
pop
out
sub
cmp
or
shrl
lcall
lcall
stc
sbb
iret
add
xchg
fmuls
repnz
ret
jecxz
dec
xchg
es
and
inc
add
mov
in
add
ret
xor
or
shrl
sub
sub
rcll
mov
jl
ja
jns
in
jo
push
push
ja
cmp
test
jnp
mov
mov
ret
shl
pop
sub
inc
pop
sbb
outsl
out
sub
mov
cmpb
fistpll
rcr
or
pop
mov
in
add
aam
das
xchg
jmp
stos
pop
push
sbb
mov
dec
dec
leave
cld
jne
sbb
sbb
scas
outsl
add
ljmp
mov
adc
cs
pop
cmc
fstpt
cmp
clc
pop
int3
scas
xor
xchg
test
mov
jnp
cmp
mov
test
or
or
in
es
push
push
xchg
add
enter
xchg
bswap
icebp
xchg
sahf
and
mov
std
sub
notl
push
push
sub
jb
mov
test
aad
dec
sbb
mov
mov
xorb
js
jmp
testb
lret
and
xor
popa
mov
sub
push
or
loop
lock
cmpsb
pushf
add
mov
adc
lock
addr16
in
fs
dec
in
cmp
pop
filds
fildl
frstor
std
adc
pusha
repnz
and
add
outsb
xchg
jae
adc
cmp
pushf
sbb
dec
and
stc
cmp
sahf
xchg
filds
repz
loop
sub
mov
popa
cmc
xchg
sub
movsl
repnz
inc
ss
mov
pop
test
movsl
jmp
ds
fbld
lods
leave
insb
mov
outsw
ret
outsb
mov
adcl
inc
popf
inc
cmpsl
jno
and
insb
pop
xchg
insb
push
xor
mov
bound
xchg
push
enter
addl
jb
cmp
repz
mov
pop
jmp
lret
test
or
cmp
pusha
mov
mov
cmpl
repnz
xchg
add
sbb
mov
jp
mov
push
cmp
push
push
adc
inc
int
movsb
addr16
cltd
call
adc
and
xor
aam
testb
inc
cs
inc
jb
call
inc
inc
out
stos
pusha
in
dec
fadd
fdivrl
pop
push
or
cwtl
adc
nop
cmp
pop
sub
scas
cmp
loopne
js
and
sbb
leave
adc
cmc
xorb
test
fimuls
mov
dec
in
sub
aam
mov
movsl
or
push
outsb
orl
mov
push
stc
clc
or
cmp
inc
sub
pop
cmpl
arpl
ds
popa
shrb
jp
push
jmp
movsl
pop
fwait
adcb
xchg
lods
inc
pop
mov
xchg
je
mov
mov
testl
jno
push
inc
adc
into
add
aas
jge
or
cmpsb
jl
cmpb
mov
lea
mov
repz
dec
jle
jp
and
adc
sub
out
or
pop
clc
blsfill
popl
je
ret
mov
imul
push
sub
jl
xor
sub
sti
add
sub
cmpsb
jg
mov
cmpsl
ret
sub
insl
cmpsb
test
mov
out
mov
call
mov
mov
out
lret
aad
fistl
mov
mov
inc
cmpsb
lods
inc
push
mov
lret
cmp
int3
outsl
mov
mov
mov
jle
adc
ljmp
jb
stc
xchg
or
push
mov
andb
fmuls
jae
push
dec
jae
mov
push
jb
or
or
mov
std
dec
dec
fwait
cmpsl
je
cmp
pop
push
stc
or
adc
dec
in
dec
ret
mov
negb
sbbb
cmp
imul
daa
not
inc
test
pop
ja
out
cmpsb
scas
fmuls
xor
out
pop
pop
mov
nop
cmp
xor
mov
sahf
jno
add
hlt
sarb
movsb
icebp
push
imul
repnz
jl
ss
cwtl
mulb
mov
cmp
xchg
dec
and
and
dec
rcrb
mov
add
pushf
dec
mov
dec
out
js
dec
mov
pop
mov
sbb
clc
aas
lret
inc
xchg
and
xor
addr16
dec
pop
enter
mov
sub
shlb
bound
xor
dec
sbb
fcoml
insb
jne
jmp
iret
fwait
sub
xchg
push
push
outsl
xchg
js
lret
adc
out
mov
and
in
mov
int3
or
adc
mov
ljmp
cli
xor
loopne
push
fwait
data16
sbb
mov
xor
cli
popf
cmp
iret
mov
cli
mov
test
mov
pop
pop
icebp
dec
xor
jo
outsl
loop
sbb
fstl
fnop
notl
and
mulb
in
out
movsl
mov
jo
inc
clc
dec
add
lret
xor
mov
mov
clc
xor
jns
jb
push
xor
je
cmp
loop
add
or
ret
xor
jg
push
mov
cmpsb
sahf
mov
fidivs
leave
js
mov
sbb
jo
push
jae
sbb
mov
cmp
xor
andb
mov
mov
pop
stos
cmovnp
scas
test
mov
rcrl
mov
stos
inc
push
push
xor
mov
add
int3
cmp
mov
pop
repz
lret
cmp
lods
xor
fdivrp
inc
shll
test
xchg
pop
pop
rcrl
mov
outsl
jno
psraw
repz
pop
ja
and
or
jns
outsl
xchg
xor
cmp
notl
cli
adc
daa
lock
data16
inc
cli
xchg
mov
dec
fisttps
clc
adc
pop
dec
sbb
lds
adc
or
push
xor
cmp
insb
or
and
jns
aas
lret
inc
mov
mov
mov
cmp
lret
iret
xchg
fsubl
push
pop
mov
jo
jbe
dec
adc
push
dec
pop
inc
or
jo
jp
daa
ret
enter
mov
and
addr16
adc
pop
sub
cmpsl
stos
push
mov
push
add
xor
and
cld
xchg
das
add
inc
xor
push
xchg
push
outsb
cmpsl
in
aad
or
out
jecxz
and
testb
ret
push
pop
shr
arpl
out
jp
mov
push
lods
jns
xor
push
ficoml
sub
mov
cmp
inc
stc
add
jecxz
cltd
jnp
out
jp
psraw
mov
ss
pop
dec
js
push
and
and
and
imul
pop
mov
gs
pop
pop
imul
add
pop
out
cmp
pop
mov
hlt
mov
jecxz
sahf
and
pop
clc
and
and
xchg
xchg
inc
data16
dec
jecxz
jnp
int3
and
outsl
notl
adc
pop
roll
xchg
stc
adcb
les
push
push
outsb
jl
push
jmp
ja
roll
icebp
les
out
cmc
inc
ja
xchg
bound
loop
lock
jb
fisubrs
insb
std
xchg
mov
cli
mov
sub
lcall
xchg
add
cmp
push
roll
fldlg2
orl
sbb
movsb
jle
leave
cmc
mov
in
pushf
sub
inc
push
insl
pop
sub
cmpsb
xor
sbb
xor
cwtl
pop
cli
cmp
mov
pop
mov
and
shlb
or
pop
inc
lcall
inc
faddl
ficoms
push
test
out
xchg
mov
pusha
aaa
ljmp
push
icebp
inc
mov
cmp
jb
repz
pop
mov
xchg
fidivrs
hlt
testl
push
xor
push
test
jno
or
test
out
popa
cltd
sub
dec
pop
mov
sbbl
dec
cmpsl
pop
out
fsubrs
pushf
jl
out
icebp
jae
push
ljmp
jb
jg
adc
daa
das
push
mov
inc
andl
lret
dec
es
mov
aam
sub
gs
mov
in
pop
dec
and
insl
stc
pop
stos
inc
pop
cmpsl
jne
mov
push
mov
inc
cmp
les
test
cmp
imul
jl
jmp
sbb
mov
ljmp
jecxz
imul
adc
in
jmp
sbb
add
dec
lea
fnstcw
popf
idivb
and
das
sti
fdivs
inc
lea
mov
mov
mov
mov
cmp
sbb
in
mov
ret
sti
dec
repz
push
cmp
pop
xor
popa
sub
push
pusha
inc
into
mov
mov
cmp
or
push
icebp
sub
inc
pop
ss
mov
std
sbb
das
mov
mov
xor
add
cli
ret
fbld
sbb
pop
ja
or
bound
inc
jne
mov
mov
add
mov
or
pop
add
pop
fwait
ret
pop
stc
pop
stos
mov
add
in
dec
pusha
xor
outsb
fsubrs
out
or
or
xor
push
cmp
fsts
mov
jmp
out
inc
fsubs
movsl
int
and
pop
loop
xchg
movsb
dec
enter
sbb
adc
repnz
push
xor
repnz
imulb
insl
xchg
mov
pop
imul
fnstenv
lcall
and
test
iret
jecxz
std
imul
into
test
inc
push
sub
jle
fcmovbe
sbb
leave
mov
outsl
push
xor
push
sti
in
mov
xchg
adc
sub
out
dec
sbb
inc
jmp
loop
xorl
dec
jmp
clc
xchg
dec
inc
in
mov
rclb
rorl
inc
lret
and
sbb
outsb
cmp
lret
push
scas
inc
rcpps
pop
and
xor
jp
notb
fistpl
inc
jge
jo
sarb
data16
es
lret
xchg
lods
jmp
sub
mov
dec
insb
push
mov
fsubrl
std
stos
out
mov
and
sub
mov
aas
loop
lods
xchg
in
xchg
inc
sbb
dec
pop
std
mov
out
adc
shrb
sub
mov
sbb
test
shlb
lret
dec
mov
cmp
push
xchg
mov
adc
daa
cmp
jns
pop
lahf
xor
fldcw
sti
inc
push
ss
lret
xchg
imul
adc
sbb
inc
pop
adc
lock
and
adc
in
jl
aas
das
nop
xchg
rclb
jns
or
cmp
daa
insl
loopne
popa
stc
xchg
daa
into
or
stc
push
dec
and
imul
dec
faddl
mov
push
jno
push
outsl
xchg
push
mov
sahf
mov
pushf
xor
lds
insb
mov
ds
fsubrs
cmp
add
sbb
or
and
inc
aam
movsb
add
inc
addr16
cwtl
add
sbb
push
jns
cld
push
outsb
es
sbb
pop
sbb
stos
stos
mov
or
test
or
call
jo
mov
lahf
sub
test
dec
dec
in
daa
cs
xor
repz
xchg
outsl
loop
jecxz
cmp
movsl
call
iret
cmpsl
xor
mov
mov
push
aam
ljmp
lret
out
jg
int3
lock
jne
into
enter
push
xor
mov
push
sbbl
jmp
dec
adc
cli
subb
sbb
sbb
or
pop
ret
outsb
adc
add
inc
mov
gs
pop
sti
fdivs
enter
pushf
call
cld
mov
xor
mov
or
out
popf
xor
push
mov
jbe
jae
loopne
mov
pop
sbb
lahf
sub
std
xchg
mov
shr
adc
mov
lds
mov
or
arpl
mov
cwtl
ret
insl
popf
iret
pop
jmp
aas
jmp
add
adc
notb
aas
lds
xor
rol
pop
add
push
test
adc
loopne
sahf
adc
xchg
and
pop
pusha
lock
and
aad
xchg
imul
xor
xor
ret
popf
xchg
into
sbb
pop
fs
jp
enter
shll
or
ss
nop
or
test
fs
insb
pop
mov
iret
xor
sbb
cmpsb
decb
xchg
test
push
fdivl
popf
push
xchg
arpl
dec
sbb
push
push
lods
or
jo
and
fcomps
pop
pop
icebp
mov
xor
out
add
add
leave
mov
ficoms
imul
addr16
imull
scas
clc
cs
cmc
fsubrl
in
and
mov
add
pop
push
xchg
stos
jae
dec
movsl
mov
dec
out
arpl
hlt
shrl
push
jo
dec
xor
into
lcall
cli
and
pop
xor
inc
cmpl
and
jnp
mov
add
sti
in
sbb
loopne
jmp
test
add
adc
inc
movsb
xor
stc
pop
mov
idivl
leave
mov
mov
ss
repz
or
push
push
lahf
push
stos
cwtl
cmc
add
push
enter
jne
sbb
sbb
je
cmp
fisubrl
and
pop
cmpb
pop
test
mov
stc
cmc
inc
pop
sub
and
adc
cs
add
cmc
scas
cmp
mov
into
pop
xchg
test
xlat
inc
xchg
sbb
dec
pop
inc
jl
cmp
test
rcrl
cmp
sub
push
loopne
dec
pushl
pop
mov
adc
sahf
cmc
or
sbb
pushf
xchg
ja
push
push
les
call
sti
xchg
sahf
test
sbb
outsb
in
movsl
inc
push
nop
mov
adc
das
shll
jmp
cs
js
repnz
shrl
sbb
les
outsl
jbe
pushf
jle
xchg
js
sbb
cltd
sbb
clc
mov
rol
leave
nop
cmp
jo
call
xlat
add
in
mov
notl
sub
sbbl
fisubs
xlat
pop
push
lods
mov
stos
mov
aad
lods
sub
fs
popf
dec
mov
out
sbb
daa
std
data16
lret
inc
fsubl
dec
arpl
roll
and
sbb
lea
and
data16
mov
divb
leave
daa
ljmp
in
inc
in
stc
inc
loope
clc
popf
imul
mov
xchg
sar
cmpsl
cmp
mov
cmpsb
cmp
pop
dec
or
inc
data16
pop
in
leave
and
les
notl
lea
sub
enter
mov
xchg
xorl
mov
jno
mov
and
pushf
inc
xchg
sub
mov
sbb
repz
out
sbb
cmp
jl
mov
mov
icebp
pop
sahf
jl
or
sbb
cltd
inc
outsb
in
movsb
and
xor
push
mov
inc
lock
jmp
lds
pop
xchg
xchg
ja
sbb
insl
jbe
mov
les
pusha
lret
mov
xchg
push
jg
jbe
ljmp
pushf
mov
mov
call
sbb
repnz
imull
sbb
ds
push
pop
mov
mov
push
xchg
sub
sub
mov
jo
fiaddl
ret
cli
cmpsb
mov
test
mov
lock
out
fidivs
or
push
adc
roll
jl
cwtl
pop
data16
push
mov
add
xchg
int
fs
or
jnp
mov
call
mov
jns
in
dec
adc
subb
cs
inc
inc
fidivl
pop
push
mov
inc
xchg
dec
xchg
pushf
mov
sub
jp
arpl
or
mov
fisttps
adc
push
xor
xchg
xlat
dec
dec
sti
mov
mov
or
dec
mov
mov
rcll
pop
xchg
inc
mov
test
jne
loop
cmp
pusha
ss
repz
push
imul
movsl
negl
add
out
sbb
push
cmp
ss
sarb
lahf
mov
jg
xchg
add
mov
adc
je
dec
add
seta
test
fnstenv
aas
jb
ret
xrelease
int
fdivl
ficoml
add
adc
arpl
or
bt
dec
shlb
loop
out
dec
xor
cli
out
xchg
add
insl
xchg
arpl
pop
cmp
ljmp
in
sbb
cltd
cmp
inc
testb
adc
adcb
inc
jbe
fidivrs
sbb
mov
mov
sbb
push
icebp
sub
aaa
sub
mov
iret
gs
add
in
xchg
xor
sbb
pushf
stc
cmpb
xchg
dec
fistpll
push
shl
dec
mov
fsubrl
rcrl
sar
jo
jne
sub
jmp
mov
pop
cmp
mov
xor
cld
mov
dec
subb
mov
sbb
mov
fsubrs
mov
gs
push
and
aad
push
imul
in
jp
dec
mov
lahf
push
pop
lods
xchg
adc
adc
push
fnstcw
cmpb
fdivs
lahf
or
outsl
pop
clc
std
sbb
fwait
ret
add
mov
mov
push
hlt
scas
push
gs
leave
pop
hlt
push
fsts
mov
xlat
sub
dec
lock
ss
inc
sti
pop
addl
lea
outsb
jmp
mov
inc
or
movsb
daa
xchg
and
fadds
mov
sbbl
push
pop
fsubrs
lods
mov
mov
bound
lret
xor
movsb
dec
aaa
clc
sbb
bound
pop
insl
unpckhps
cmpsl
mov
or
nop
xlat
shlb
fcoms
or
pop
dec
daa
sub
arpl
in
lea
and
cmp
adc
sbb
or
sub
imul
pop
popf
inc
stos
aad
mov
test
mov
fst
imul
cmpsb
lock
pop
sub
outsl
scas
lret
out
dec
cmc
inc
out
popa
sub
das
lahf
or
cmp
cmp
out
inc
sbb
cmp
mov
ret
pop
outsb
jmp
sub
movsl
pushf
call
outsl
xor
inc
scas
inc
je
repnz
mov
dec
jecxz
rol
pop
shlb
gs
inc
inc
mov
jmp
bound
outsb
cld
xor
rorl
test
fisttpll
je
les
test
sub
js
mov
sbb
sub
jl
rolb
int
jge
sbb
lret
vpaddb
ss
push
jecxz
mov
add
push
sbb
pop
sbb
lods
inc
mov
xor
rolb
mov
xchg
sbb
popa
loope
mov
cmp
adc
dec
aam
call
sub
and
xchg
mov
mov
mov
ljmp
insb
push
movsl
fistl
dec
jne
jnp
mov
insl
xchg
andb
sbb
mov
aad
pop
pop
jmp
or
cmp
je
je
and
ds
inc
cld
inc
sub
ds
mov
out
cld
in
adc
in
and
nop
arpl
mov
jmp
xchg
cmpsb
jp
push
push
mov
pop
xor
ret
aam
mov
loopne
inc
push
popa
clc
test
jg
push
daa
cmp
sbb
ror
adc
mov
adc
or
lds
mov
sbb
bound
sbb
nop
daa
adc
dec
imul
mov
ds
xor
lahf
or
inc
jnp
push
xchg
loope
adc
xor
roll
xchg
pop
js
outsb
stos
jnp
mov
scas
mov
mov
mov
pushf
xor
leave
insb
lods
and
mov
jae
rcl
and
fists
jnp
pop
je
xlat
subl
push
fwait
loope
in
jle
popf
aam
xchg
jecxz
lret
or
and
and
mov
jae
test
popa
fidivrl
pop
pop
cli
aaa
push
sub
or
scas
jno
xorb
in
pushl
push
mov
gs
mov
fistl
xchg
jne
jbe
dec
inc
popf
int
cmp
jle
add
loopne
mov
jmp
cmp
test
scas
popa
jns
stos
push
mov
in
add
sub
repz
je
mov
sbb
stc
inc
inc
pop
inc
lcall
push
mov
aam
jns
add
bound
lock
andb
insl
addr16
popl
fsubrs
scas
ret
mov
mov
cmp
fdiv
pop
imul
mov
rolb
and
and
mov
add
push
rcl
and
mov
arpl
rol
repnz
cs
mov
fs
fwait
push
je
or
cmp
rclb
push
int
outsl
adc
or
sti
mov
xchg
test
and
xchg
cli
jnp
jge
mov
sub
fdivrs
int
scas
nop
push
scas
insl
enter
adc
fcoml
lcall
mov
fisubl
mov
sub
xor
es
inc
dec
out
test
popa
inc
imul
and
andb
mov
xchg
sahf
xchg
or
adc
mov
scas
push
mov
imul
adc
jno
dec
imul
fwait
inc
out
and
pop
les
insl
lods
sbb
push
add
xchg
mov
imul
mov
mov
or
popl
es
hlt
ret
cwtl
lods
xchg
cli
mov
hlt
push
mov
jg
loope
mov
cmpsl
pop
popf
icebp
xchg
push
lcall
mov
sub
push
jecxz
mov
cmp
mov
adc
dec
adc
sarl
std
cmpsb
fiaddl
push
adc
mov
lea
inc
inc
lods
std
add
mov
cltd
mov
mov
shll
xor
loopne
or
and
gs
in
lret
es
sbbl
jbe
jnp
and
ret
int3
daa
sbb
adcb
lods
dec
push
les
les
xchg
sub
shlb
xor
push
ljmp
push
rcrl
ret
push
add
dec
scas
lcall
sub
icebp
ds
push
cmp
imull
xor
lret
int3
pop
sti
lds
es
mov
lods
mov
loopne
push
testb
and
pop
fcoms
xchg
xor
repnz
sahf
ss
pop
pop
scas
pop
mov
subl
dec
gs
iret
data16
imul
inc
mov
add
xor
repz
or
cmpb
arpl
sti
repnz
sbb
pop
mov
movsb
adc
mov
pop
cmpsb
lret
xchg
adc
xchg
sub
pop
adc
mov
xchg
mov
sub
dec
scas
cmp
loopne
xchg
add
lea
add
xchg
push
and
jmp
dec
loope
div
and
jge
int
mov
popf
scas
xchg
jo
push
or
lahf
sub
and
jle
outsb
daa
out
and
push
pop
shl
xchg
scas
inc
jno
outsl
idiv
dec
add
jl
imulb
push
out
adc
outsl
add
jle
mov
jnp
adc
lods
mov
fimuls
jbe
jo
dec
icebp
sar
jge
push
sub
jns
push
jecxz
aas
xchg
call
push
and
nop
sahf
mov
ja
xchg
insb
divb
push
sub
adc
mov
or
in
mov
pop
stos
ret
fsubrs
mov
fdivrs
jne
jle
scas
cmp
pop
js
int
pop
cmp
or
mov
jl
jp
mov
sbb
je
shlb
jae
dec
fsubr
rcll
push
pop
cld
inc
and
push
popa
jp
fldcw
or
divb
mov
push
fildll
aas
push
imul
sbb
ljmp
pop
shr
xorl
jg
xor
xlat
jmp
arpl
xor
rcrb
xor
cmp
icebp
jge
xchg
jno
sti
xchg
push
mov
sbb
fidivrs
jmp
cmp
lea
shrl
movsl
push
inc
pop
pop
out
vmwrite
jmp
jno
xchg
fstl
ss
mov
mov
out
gs
inc
push
add
es
xlat
mov
adc
cwtl
mov
aas
sub
dec
int
int3
ss
shlb
lods
cmp
fnstcw
pop
cmp
add
imull
stc
pusha
and
arpl
xchg
and
pop
inc
inc
xlat
in
mov
xlat
push
pop
insb
sub
mov
inc
mov
fisttpll
cmp
mov
test
inc
lods
icebp
test
stos
cmp
jl
add
lcall
js
inc
pop
dec
push
loope
cmove
shlb
fistpll
rcll
or
ja
or
or
hlt
xchg
daa
xchg
mov
push
stc
sbb
sub
popf
rcrl
orl
jmp
or
cmp
jg
mov
repz
leave
mov
cmpsb
stc
imul
subb
mov
sbb
mov
inc
jmp
xor
mull
scas
push
lret
cld
aas
ss
sub
cmp
or
cmp
xchg
pop
into
xchg
std
jo
push
nop
daa
test
dec
push
std
cmp
cs
adc
cmp
add
xor
popa
aam
jnp
xchg
lods
leave
pop
imul
jnp
iret
fidivrl
call
insb
sub
xor
insb
jne
jbe
rclb
aad
lock
push
dec
scas
or
mov
inc
call
xor
lret
fldenv
bound
pusha
addb
xorl
dec
xlat
sarb
call
mov
cmpsl
lods
mov
mov
mov
mov
lcall
mov
xchg
lods
mov
sbbb
lock
test
lret
xor
mov
xchg
sub
jb
mov
pop
outsb
outsl
dec
iret
mov
iret
imul
xor
pop
mov
inc
and
iret
rclb
enter
add
mov
nop
daa
test
or
adc
add
icebp
add
dec
insl
sbb
cwtl
cmc
inc
out
jo
fisubs
jg
lods
mov
pusha
idivl
sub
and
jl
shrl
jo
ret
pop
sbb
mov
pop
aaa
shr
addb
xchg
pop
test
pop
cmp
out
into
or
mov
stc
mov
mov
rcl
inc
inc
cld
xorb
cmp
out
pop
std
xchg
ljmp
test
sub
insb
xchg
lds
testb
out
daa
repz
mov
fisttpl
and
and
stos
es
cld
aaa
into
sub
mov
out
js
jmp
ficomps
js
jge
mov
xor
inc
mov
cmpsl
cmp
inc
ds
dec
push
ja
subl
aas
repnz
sub
xchg
test
lods
mov
sbb
decb
xchg
xor
outsl
lret
xchg
dec
lods
out
pop
scas
roll
xor
clc
bound
mov
xchg
imul
addb
mov
jecxz
push
push
mov
adc
das
movsb
push
ret
sub
or
enter
cmp
lret
popa
ret
sub
in
leave
mov
addr16
into
fstl
mov
cmp
pop
jg
aam
add
dec
test
and
jl
fwait
push
dec
movsb
les
push
adc
jle
add
pop
xchg
pop
sahf
lds
jno
dec
pop
icebp
jle
mov
adc
iret
subb
or
and
mov
adc
pop
inc
dec
in
xorl
and
hlt
mov
xor
cmp
imul
sbb
lea
push
movsb
jge
add
cmc
xchg
adc
sub
mov
cli
sbb
adc
lahf
cmpsb
sbb
leave
pusha
push
jge
arpl
testl
jbe
push
call
or
insb
adc
jl
enter
rolb
xchg
daa
out
pop
mov
xor
mov
in
test
addr16
dec
repnz
clc
cmp
das
jl
cmp
pop
mov
pop
cmp
add
jae
stos
in
xchg
pusha
sti
inc
jl
jb
jmp
xchg
xchg
sub
sbbl
and
clc
data16
aad
pop
xor
outsl
jg
sbb
lcall
int
mov
loopne
lods
ret
adc
or
mov
sbb
mov
push
sbbl
sbb
push
aam
repz
inc
into
movq
push
leave
xchg
xor
sub
push
call
push
std
push
cs
loope
sub
out
sub
inc
ret
pusha
arpl
out
pop
imul
mov
xchg
pushw
jae
dec
dec
aaa
cmp
adc
icebp
adc
xor
inc
sti
adc
mov
hlt
fnstsw
push
call
les
insl
loopne
outsb
mov
cmp
dec
lods
js
and
stos
nop
daa
fcompl
sub
mov
mov
xchg
rcll
mov
out
hlt
lret
sti
test
dec
subl
jp
aaa
in
test
mov
mov
pop
or
mov
popf
mov
xor
sub
negl
push
jmp
pop
dec
jo
clc
ds
je
mov
sti
ja
js
xor
pop
adc
xchg
popf
xor
cmp
subb
cmp
cmpl
pop
or
pop
outsb
pop
mov
aas
es
dec
inc
scas
jnp
xchg
gs
fdivs
cmp
data16
lds
jecxz
or
push
insl
cmp
scas
negl
mov
stos
mov
cmc
mov
dec
mov
test
jnp,pn
cmpsb
cmp
sbb
aas
push
sub
mov
cmpsb
pop
hlt
xlat
stos
inc
cld
and
adc
add
cmpsl
push
bound
jle
insl
and
xchg
mov
push
icebp
mov
mov
push
lds
shll
scas
or
popw
fs
gs
jb
repz
xor
jb
hlt
and
dec
add
mov
sbb
sub
je
in
lods
push
and
inc
daa
inc
cmp
mov
dec
add
and
movsb
push
cmpsl
dec
data16
inc
out
inc
xchg
pop
mov
andb
repnz
stos
jno
xchg
sub
mov
mov
not
outsb
call
pusha
idivl
out
fiadds
xchg
fidivrl
sbbb
popa
jns
dec
push
fs
andl
pop
int
lret
pop
pop
lea
adc
mov
ret
fucom
loopne
push
sbb
add
push
xchg
sbb
or
mov
mov
xchg
scas
addr16
mov
and
es
in
xorps
push
js
fcoml
or
inc
loopne
in
daa
add
hlt
jb
jnp
dec
xchg
cmp
cmp
out
outsb
pop
mov
mov
andb
testb
add
sbb
mov
popa
jmp
xor
xchg
jns
mov
testb
cmp
dec
imul
sub
cli
adc
aaa
inc
insl
xorb
fdivl
mov
in
cwtl
and
loope
sbb
pusha
add
and
repnz
stc
push
adc
repz
cmpsb
cmp
xor
clc
adc
sub
fucomi
fcmove
aam
ss
xchg
push
in
sub
xor
adc
sar
mov
inc
mov
scas
push
je
cli
ss
std
mov
jb
dec
decb
or
mov
cmp
jg
nop
subl
mov
and
or
mov
dec
dec
jge
lahf
mov
fstpl
sbb
pop
addr16
lods
push
aaa
outsb
push
mov
or
jb
sarl
bound
xchg
inc
and
mov
test
jno
inc
mov
or
push
mov
inc
or
sbb
sub
shl
xor
inc
mov
sbb
roll
mov
xchg
ret
push
shl
mov
call
cmp
xor
pop
loop
mov
pop
push
adc
push
inc
mov
lcall
inc
sbb
cltd
xorb
cmc
jge
push
leave
sbb
je
test
in
outsl
arpl
pop
adc
das
test
lds
addr16
xlat
xchg
cmp
movsb
push
add
lds
xchg
adc
xor
add
sbb
or
push
add
pop
jnp
mov
pop
jae
ret
inc
sub
mov
adc
shlb
add
push
adc
and
pusha
cmp
aad
gs
outsb
jae
frstor
cmc
inc
sbb
xchg
bound
lcall
enter
in
jg
push
pusha
jl
push
push
lods
mov
cmpb
jge
cmp
cltd
sub
mov
push
cmc
adc
ss
shrl
mov
xchg
xor
sarb
push
jnp
insl
lea
lahf
cs
loope
sbb
mov
jle
pop
mov
sbb
inc
adc
jne
ljmp
adc
stos
movsl
fsubr
lock
int3
arpl
idiv
cmp
ljmp
dec
rcrb
push
popa
faddl
shrl
jmp
cmp
les
jns
or
lods
arpl
jns
lds
lcall
iret
ret
ret
jmp
xchg
xor
nop
adc
push
jge
scas
insb
call
repz
push
popf
outsl
lods
ss
xlat
inc
popf
repz
sbb
mov
mov
repz
in
mov
add
jmp
aaa
test
imul
adc
or
jb
shlb
pusha
cli
pop
movsl
pop
push
lret
shll
mov
fidivl
hlt
xor
leave
sub
test
pop
popf
mov
clc
loope
mov
lret
xchg
or
mov
imul
popa
icebp
mov
gs
mov
inc
push
out
xor
lret
scas
xchg
aam
lret
jno
add
int3
int
cmp
lds
out
jecxz
jecxz
add
in
rclb
nop
ja
test
sub
mov
xor
gs
sbbb
cmp
int
std
aam
hlt
inc
xchg
jmp
in
mov
icebp
mov
pop
fsubs
addl
clc
pop
mov
lds
adc
mov
dec
mov
daa
movsb
testb
jno
stos
mov
pop
stos
movsl
push
cmp
ret
ret
enter
loope
in
jae
loop
push
mov
shr
fcomps
sbb
dec
stc
fistpll
pop
mov
lea
adcb
pop
repz
dec
adc
fisttps
clc
scas
inc
inc
loopne
xchg
xor
sub
jbe
adc
jg
ret
pop
or
cmp
pop
mov
sub
adc
pusha
and
fwait
mov
ljmp
pop
cmp
push
pop
testl
inc
das
jae
cmp
push
sbbb
adcl
and
test
cmpsl
adc
shll
cmp
out
loope
and
fsubl
sarl
fdivs
mov
sbb
shl
add
sub
loop
jae
mov
stc
and
leave
or
inc
xor
mov
xchg
stos
sbb
push
cmp
cmp
mov
insl
loopne
es
out
push
mov
loopne
aaa
mov
ret
loope
sbb
sub
or
arpl
je
cmp
icebp
sarl
movsl
add
dec
lea
or
jecxz
pop
sub
or
and
jge
pop
mov
es
pop
mov
mov
les
inc
xor
cmp
outsl
inc
fstpl
aaa
fs
fstl
mov
das
cmpsb
inc
fcom
add
sub
dec
pop
mov
movsl
lret
negl
aam
leave
or
xchg
in
test
movsl
push
mov
xor
push
stos
call
sti
out
je
push
out
std
rclb
xor
mov
pushf
dec
sbb
adc
in
add
push
inc
sarb
jo
call
testl
into
cmp
pop
test
test
sahf
test
icebp
fdivrp
frstor
addr16
xchg
mov
test
sbb
into
outsb
mov
jmp
pop
loope
inc
out
adc
or
jb
xor
orb
xchg
stos
jle
shl
push
add
jmp
add
push
aas
mov
xor
dec
or
cmp
je
pop
insb
add
frstor
xchg
mov
imul
adc
pop
cwtl
das
les
adc
and
jecxz
push
int3
jo
jno
cmp
popf
xchg
cmp
sbbl
inc
cltd
xchg
cmp
lock
inc
stc
pop
sbb
adc
sti
mov
mov
mov
push
out
and
mov
cld
xor
cmpl
and
mov
adc
and
dec
adc
xorl
adc
bnd
cmp
push
sub
cmp
mov
std
dec
cmp
dec
rep
out
xlat
jnp
add
pop
mov
in
cmpl
add
jae
mov
inc
loopne
sti
or
stos
sti
add
xchg
pop
push
mov
sbb
pop
stc
jmp
mov
std
test
jae
int
xchg
das
aas
inc
dec
fs
pusha
dec
in
insl
jp
mov
add
cmp
push
imul
pop
subb
cmp
jl
jno
lds
aaa
cmc
xchg
scas
push
daa
mov
dec
popf
shr
jne
divl
imul
mov
mov
dec
shll
test
loopne
add
pop
add
dec
xchg
imul
xchg
dec
jecxz
icebp
dec
sbb
std
cmp
std
or
add
call
sbb
cmp
xchg
aaa
testb
and
scas
mov
sahf
push
adc
or
ljmp
fdivs
dec
fdivrs
or
add
pop
dec
fadds
int3
js
adc
mov
ficompl
or
inc
sti
pop
cmp
push
and
adc
sbb
int3
push
fadds
filds
xchg
add
fstpt
mov
add
pop
scas
test
pusha
mov
rclb
test
cltd
ss
movsl
push
das
xor
adc
into
inc
cmp
push
out
lret
sbb
cmc
enter
int3
popf
add
iret
in
mov
or
add
std
sub
mov
outsl
mov
lods
mov
fcomip
imul
jno
cs
int3
adc
or
nop
mov
ljmp
rcr
lret
icebp
pop
mov
lds
add
cmc
mov
jmp
xor
cmc
inc
fsubl
fwait
adc
sbb
pop
cmpsl
and
int3
lret
lds
in
sub
inc
sarl
out
fs
sbb
mov
add
mov
fs
push
lock
jne
lds
pop
ds
sahf
push
mov
fwait
lds
stos
mov
jle
and
jb
jmp
pop
sbb
aaa
and
ja
push
test
js
iret
dec
lds
testb
lea
xor
inc
mov
mov
pop
imul
jecxz
ror
mov
cmpsl
popa
or
out
ss
push
scas
xor
testl
or
cltd
push
push
inc
push
xchg
leave
int
sbb
ret
int
sub
dec
mov
cltd
maxps
insb
dec
mov
lea
sub
shl
mov
dec
out
push
sub
dec
cmp
or
jle
pushf
mov
arpl
pop
or
cmp
les
mov
fistl
hlt
sbb
sti
cmp
pushf
sub
ss
mov
inc
jmp
cld
int
or
call
dec
rorl
sbb
sub
add
leave
cld
shlb
adc
les
shrb
push
gs
dec
hlt
js
mov
push
and
mov
push
pusha
push
adc
lret
fldcw
int3
pop
andl
enter
loopne
out
in
push
mov
cltd
test
pushf
lock
int
jle
movsb
mov
pop
lahf
push
rcrl
jae
adc
aaa
xor
out
cltd
rcrb
in
mov
fldcw
push
insl
pandn
jb
mov
mov
shrl
lods
cmp
sub
xlat
lods
mov
adc
ret
xlat
pop
mov
lret
enter
scas
rcrl
outsl
iret
jo
rcrl
push
imul
pop
jb
into
sarl
lret
push
gs
scas
nop
push
push
cld
outsl
push
iret
dec
in
lret
into
mov
adc
lret
jl
push
in
inc
test
mov
pop
loope
cmp
xchg
dec
stc
and
jb
xchg
fsubr
push
andb
outsl
dec
inc
mov
sbb
mov
mov
pop
icebp
repz
mov
fsts
push
inc
rcl
mov
data16
xchg
push
loopne
jae
jge
daa
jns
fcomps
push
pusha
test
push
xchg
fwait
lea
or
dec
ret
loopne
xor
fmull
dec
mov
ds
ljmp
cmp
or
orl
adc
mov
push
xor
lods
push
addr16
fnsave
xchg
fs
sbb
gs
pop
sarb
xor
aaa
cld
cltd
pop
fsubs
xor
dec
outsl
outsl
push
mov
jg
push
push
aam
push
es
fdivrl
lcall
and
mov
movsl
xor
adc
jns
ja
inc
rcrl
scas
mov
pop
jo
pop
testb
add
cmp
lcall
pusha
jp
xchg
shl
push
xchg
loope
das
add
out
adcl
es
lds
fnstsw
sub
mov
cwtl
cmp
lret
cmpsb
in
ret
insl
mov
test
lret
inc
ljmp
mov
jmp
inc
dec
mov
mul
xchg
int
jae
mov
out
out
pushf
inc
setno
inc
outsb
repz
xchg
jno
lds
adc
pop
jg
jb
xchg
sub
pop
mov
xlat
stc
rolb
sub
dec
pop
aas
popa
cmp
ljmp
xor
jecxz
cmpsb
cmp
and
xlat
test
insl
mov
mov
aam
leave
lahf
lods
movsb
shl
push
les
aam
sbb
repnz
daa
dec
cmpsl
fldcw
inc
pop
pusha
mov
push
dec
rol
jno
loope
dec
mov
push
adc
jle
loope
ret
mov
lret
mov
popa
push
mov
sub
and
nop
pop
js
cmp
stos
push
fisttps
jmp
sbb
inc
pop
insl
loop
loope
dec
mov
enter
fwait
add
lret
and
data16
mov
jmp
out
push
and
dec
lret
popa
add
test
out
mov
jmp
or
mov
out
adc
inc
xchg
xchg
dec
jecxz
jecxz
pop
cmp
pop
sarb
sar
das
cmp
faddl
jmp
lock
inc
sahf
dec
std
adc
adc
sub
cmp
mov
jae
mov
sbb
cwtl
or
mov
jge,pn
pop
insb
sbb
pusha
pop
sahf
xchg
mov
cmp
in
test
imul
stos
jo
js
xlat
mov
call
xor
hlt
dec
jbe
mov
and
xor
bound
jecxz
inc
dec
mov
sahf
xor
mov
xchg
cmpsl
jns
pop
lods
inc
push
sahf
or
xchg
lret
jo
mov
mov
fidivrl
add
pop
or
wrmsr
ja
add
cs
push
cltd
inc
mov
jg
pop
mov
shrl
shll
cmpsl
cmpsl
in
pop
movb
xchg
mov
bound
int
xorb
jnp
sbb
loopne
addr16
cmp
imul
jg
and
popf
xlat
xchg
or
std
inc
popf
jo
sbb
cmp
clc
xor
push
daa
mov
das
inc
add
lods
add
inc
push
pusha
and
bound
sub
fistpl
sbb
dec
push
adcl
ret
and
imul
hlt
test
inc
sub
jne
mov
leave
cltd
rclb
xor
push
mov
pop
sti
stos
jbe
mov
add
in
mov
xchg
cmp
jge
lcall
sub
pop
movsb
or
mov
imulb
out
add
pop
jo
mov
dec
mov
and
cli
cli
or
jnp
push
mov
xor
add
inc
jle
mov
mov
adcb
push
push
xor
jp
jbe
jne
cmpsl
in
pop
rcl
or
xlat
xor
or
or
jp
pop
ljmp
jno
insl
or
and
sbbb
jae
repz
mov
arpl
push
xchg
mov
lea
inc
mov
fidivrl
ljmp
jns,pt
shrl
arpl
mov
pop
loop
push
dec
enter
outsb
inc
jecxz
leave
inc
xlat
push
inc
std
cmp
insb
enter
sub
ret
xchg
adc
popl
lods
pop
ja
cmp
mov
adc
fs
bound
fs
jp
je
inc
fidivrs
inc
fsubrs
xor
cmp
js
ja
mov
jmp
or
or
mov
mov
mov
addr16
jge
ret
scas
xchg
pop
pop
repz
test
add
cmp
loope
leave
call
test
stos
bnd
sub
sbb
mov
inc
jmp
mov
sbb
aam
and
or
jp
scas
outsl
dec
cmp
mov
or
mov
pop
imul
jae
sbb
cmp
gs
adc
outsb
mov
aas
inc
lea
mov
mov
xor
sbb
inc
insb
mov
hlt
xor
sahf
jl
xchg
jae
inc
mov
jge
sbb
lods
aad
sbb
outsb
cmpl
enter
jno
dec
push
out
dec
outsl
shufps
jp
pop
xchg
pop
mov
hlt
lahf
mov
sbb
jecxz
out
adc
pop
push
mov
ja
ds
xchg
and
lock
push
push
or
mov
push
add
xchg
das
lret
and
sbb
mov
fucomip
je
mov
test
das
inc
in
out
popa
cmp
mov
scas
dec
loopne
push
inc
push
sub
pop
clc
xor
cmp
dec
inc
nop
jg
outsb
pop
dec
mov
das
cmp
cwtl
pop
dec
ds
mov
dec
inc
cmp
or
pop
inc
es
std
pusha
mov
shlb
sub
test
pop
orb
inc
xchg
mov
sbb
pop
xchg
adc
fwait
lret
sub
enter
nop
daa
add
add
scas
popl
scas
sbbl
in
jmp
cmpsb
cmp
cld
cli
pop
cmp
outsl
dec
sbb
push
xchg
inc
mov
icebp
nop
loop
inc
push
in
nop
movsb
repnz
nop
ljmp
and
lods
scas
add
dec
scas
loope
pop
imul
and
xor
xchg
add
pop
push
xchg
mov
dec
into
pop
add
mov
dec
jp
adcb
dec
adc
cmp
scas
mov
push
hlt
inc
pop
dec
or
aaa
hlt
jne
xlat
pop
sbb
dec
lds
push
xchg
or
in
adc
fbld
jae
adc
js
int3
rorl
loope
ret
movups
jns
xor
push
fsubr
mov
mov
push
cltd
js
and
lcall
pop
adc
cmp
and
je
cmp
jb
mov
shll
push
js
jle
sbb
xchg
das
leave
arpl
outsb
xor
xchg
push
cli
xchg
mov
xor
pop
inc
pop
jne
lcall
call
or
popf
sahf
idiv
addr16
pop
and
out
stos
pop
push
in
ficoml
dec
outsb
xorl
sbb
mov
jns
int
jnp
push
mov
mov
or
loope
rcll
lds
dec
rcll
lret
xlat
jle
les
jle
cmpsb
cmp
outsl
es
mov
sub
mov
sbb
xchg
repnz
lret
in
xchg
movsl
pop
pushf
xor
pop
shl
mov
cmc
sbb
gs
lods
jge
jns
int
xchg
mov
xor
test
out
movsb
enter
xor
gs
jp
xrelease
mov
scas
add
adc
ss
mov
cmc
push
in
mov
pusha
je
xor
push
pop
dec
fcompl
fcompl
insb
test
pop
dec
sti
inc
repz
push
test
popa
inc
xor
stos
out
int3
pop
pop
cmp
xchg
aas
adc
and
dec
push
cmp
insb
addr16
jo
mov
mov
push
lods
fcomip
daa
mov
pop
sbb
pop
popa
aad
xchg
mov
lcall
bound
pop
fldt
pop
adc
lret
sbb
mov
mov
sub
into
and
jg
jecxz
fbstp
shrl
loop
jbe
cmp
lcall
std
jne
loope
sub
clc
daa
je
shrl
cs
or
inc
movsl
xor
lea
test
jb
jae
cld
popa
xor
mov
cmpsl
out
jmp
jno
shlb
jb
adc
mov
and
mov
fistl
imul
xchg
insb
sub
sub
aaa
fimull
lret
stos
dec
mov
mov
and
jno
rol
in
or
das
nop
daa
mov
mov
in
mov
fistpl
mov
iret
pop
js
std
insb
jnp
pop
push
aam
idiv
dec
xor
hlt
pop
pushf
enter
sub
push
mov
pop
add
hlt
testb
mov
dec
mov
insl
and
sar
and
adc
xchg
sub
movsb
addr16
loope
dec
imul
or
cwtl
je
lret
cmp
fwait
je
scas
xchg
subb
mov
int
shlb
add
stos
dec
dec
adc
stos
jbe
mov
push
aas
hlt
leave
xor
adc
sbb
test
sbb
inc
xlat
mov
dec
lods
call
mov
fnsave
cmp
lret
sbb
flds
lcall
fsubs
movsb
adc
imul
cld
aam
xor
sub
and
add
or
sub
nop
dec
pop
lret
scas
and
mov
xor
cld
mov
mov
gs
mov
ljmp
xchg
mov
add
outsb
push
xchg
fisttps
lcall
push
fcoml
cmpsl
ds
push
cmp
pop
mov
pop
rep
xchg
lcall
in
aad
in
lahf
add
inc
xchg
adc
xor
into
sub
mov
pop
insl
xchg
int
lret
repnz
jmp
cli
adc
rcl
ds
dec
rol
inc
or
sahf
ffreep
gs
mov
push
mov
pop
cltd
lcall
xor
xchg
inc
push
lds
stc
sbb
fs
popf
test
aaa
mov
mov
ret
pop
pop
lcall
in
outsb
insb
fwait
xchg
mov
and
jnp
jo
xchg
nop
popa
faddl
jbe
sahf
arpl
leave
and
xchg
push
mov
push
sbb
xchg
cld
or
adc
sti
inc
push
inc
in
push
jb
xlat
sub
rcl
jns
push
enter
mov
inc
fisubl
enter
scas
stc
xchg
testb
push
subl
shrl
pop
dec
icebp
push
add
mov
sub
out
je
lahf
adc
sbb
lds
inc
push
cmc
test
lock
cmp
xchg
cmp
mov
pop
and
sub
int
daa
mov
scas
push
inc
push
popf
fildl
pop
shll
push
enter
addb
jmp
out
pmaddwd
imul
push
es
je
mov
xchg
push
iret
popf
pop
cs
push
xchg
out
les
js
loope
cmp
insl
push
cmp
dec
cmp
rcl
enter
stc
in
daa
add
xor
mov
into
gs
sbbl
xchg
pop
clc
pop
outsl
sub
ss
mov
bound
lods
inc
inc
cmp
mov
sahf
mov
push
imul
pop
outsb
pop
leave
outsb
sub
mov
aad
add
lods
scas
jns
xchg
rol
sub
test
or
jbe
jmp
in
push
and
in
mov
jmp
sahf
sub
lods
pop
lods
leave
and
sub
sbbb
out
leave
dec
fldt
xor
pusha
rolb
test
sub
lret
add
es
xlat
iret
push
imulb
loope
iret
aaa
imul
xor
cli
dec
mov
stos
aad
lods
nop
fs
mov
inc
add
push
jmp
xchg
sti
cmp
xor
push
inc
sub
loope
inc
cltd
fdiv
jp
mov
in
scas
push
jno
push
test
or
inc
cmp
push
or
sub
or
xor
fsubr
and
jmp
arpl
dec
mov
mov
daa
push
ljmp
cltd
add
int3
xor
pop
scas
mov
cli
xor
cmp
loope
inc
incl
js
filds
cltd
xor
adc
clc
xor
inc
sar
cmp
and
sub
mov
mov
cmpsl
mov
cmp
sbb
pusha
out
inc
lahf
orl
sub
dec
mov
sahf
adc
inc
cmp
cmpsl
add
insb
lods
and
ljmp
pop
adc
cli
pushf
xchg
stos
mov
ficompl
mov
jmp
mov
xchg
les
push
loopne
mov
cmpsb
les
clc
shlb
jg
test
popf
xor
js
mov
or
mov
in
in
xchg
sbbb
jo
fdivrs
cwtl
insb
or
mov
push
mov
push
mov
pusha
jp
arpl
jl
and
and
push
adc
cmpsb
jb
mov
mov
rol
jb
roll
push
ja
push
sahf
jno
jge
sbb
rcl
lock
cli
adc
pop
sub
bound
les
cmpsb
bound
aaa
jl
xorl
in
outsb
or
repz
aam
xchg
xor
aam
clc
push
testl
xor
cmpsb
cmpsl
out
cmpsl
jmp
fld
mov
cs
and
xchg
pusha
sub
cmpsb
sti
adc
mov
mov
push
popf
and
xor
sbb
orl
jmp
ss
mov
lret
jp
sbb
loope
push
in
shrl
imul
mov
imul
cmp
jnp
xor
jb
lret
cmp
xchg
add
jecxz
push
inc
orb
push
push
fldl2e
ds
lods
scas
dec
add
mov
xor
out
xor
cwtl
es
push
mov
mov
cmp
dec
in
mov
ret
cmp
jmp
data16
mov
cmp
je
push
add
pusha
inc
mov
outsb
mov
and
shrb
xlat
testl
xchg
shl
repnz
jbe
push
fs
ss
jmp
or
fsubs
adc
andb
sarl
dec
daa
mov
out
mov
push
lret
sti
lods
inc
xor
push
arpl
movsb
popf
scas
sbb
mov
fcoml
sbb
in
xor
cmpl
pop
cmpsb
mov
loopne
outsb
sbb
or
clc
xor
xor
js
in
and
out
cmp
roll
ljmp
rcr
idiv
xchg
cmpsl
idiv
cmp
movsl
out
add
lock
daa
int3
push
jmp
bound
add
push
cmp
cmp
or
xchg
or
jge
mov
xor
sbb
cmc
or
popf
xor
les
dec
fdivs
add
dec
scas
and
mov
lahf
out
dec
stc
call
jbe
lret
sub
xor
sub
push
loope
cmp
adc
fiaddl
flds
mov
lahf
sbbb
adc
or
cltd
test
insl
stc
aas
push
js
out
pop
scas
push
mov
aam
cmpsl
testl
pop
add
mov
addb
push
mov
or
or
and
adc
cmp
add
pop
imulb
dec
jge
jp
stos
mov
pushf
in
cld
popa
loop
leave
lock
cmpsl
push
into
fdivl
mov
or
jo
xchg
cmpsl
xchg
xchg
add
iret
push
out
inc
jg
test
jae
xchg
popa
cmpsb
mov
sbb
xchg
imul
jp
stc
and
js
sub
imul
or
push
xchg
lds
jo
cmp
sbb
std
sbb
lret
not
cmc
fbstp
jl
mov
jl
sti
inc
xchg
xor
loope
icebp
mov
dec
mov
push
add
hlt
pop
mov
sbb
sub
pop
imul
andl
loope
jne
mov
dec
movsl
mov
fwait
add
and
push
sub
push
and
mov
lock
fcompl
or
shlb
insb
mov
sbb
jl
int
push
mov
jae
aas
sub
aaa
dec
imul
pop
movsb
test
sub
sbb
les
aas
pop
push
jecxz
cltd
std
pop
or
bt
dec
arpl
cmpsl
int
mov
and
and
fstl
mov
jo
xor
mov
jl
dec
int
fistl
aaa
test
es
mov
xchg
das
ds
xchg
and
repz
mov
xor
aaa
popa
push
mov
xor
aas
clc
fadds
mov
push
push
mov
mov
or
push
xchg
inc
cwtl
bound
fwait
push
dec
dec
sub
mov
jl
push
pop
into
xchg
rolb
cmp
fiaddl
or
test
inc
out
push
sbb
lock
scas
pop
sarb
and
iret
mov
roll
imul
xor
push
push
loop
mov
adcl
ljmp
sbb
cmp
xlat
mov
inc
and
mov
inc
fs
lods
adc
in
scas
out
bound
mov
or
xchg
fsubl
mov
fcmovne
jno
cmp
inc
lods
pop
nop
push
jae
xchg
stos
lret
add
data16
jge
inc
push
clc
mov
add
jno
test
sbb
mov
push
jns
test
xor
push
stos
add
test
jo
inc
ret
call
cmp
pop
fldl
bound
in
je
leave
or
clc
sar
pop
push
enter
sub
insl
cmc
xlat
jmp
xchg
stc
push
imul
add
sbb
add
test
lea
iret
xor
mov
inc
mov
mov
sbb
pop
iret
dec
cmp
xchg
lret
cld
adc
mov
int
clc
push
inc
push
cmpsl
out
push
outsb
jmp
xor
or
cmp
jg
jle
jle
in
jnp
cmp
fsubr
into
jl
mov
push
ret
sub
pop
sub
adc
dec
shll
jnp
lock
popw
movsl
adc
addr16
adc
pushf
fidivrs
push
rclb
fistl
stos
test
in
xchg
push
aad
cmpsl
mov
xlat
ljmp
pusha
hlt
addr16
enter
daa
push
add
push
mov
xchg
mov
adc
rcrb
xor
push
notl
mov
pop
je
fdivl
lcall
loop
gs
push
sar
loop
adc
lds
ja
jo
push
xor
xchg
and
int
int
pop
out
test
sub
stc
call
or
scas
push
nop
pushf
xor
je
xchg
loopne
sbb
movsl
xchg
pop
pushf
scas
cmp
ds
mov
gs
xor
add
xchg
lahf
movsb
fldt
dec
es
xchg
inc
out
xchg
lock
add
jno
adc
loop
jbe
insb
mov
dec
sub
cmc
mov
push
lock
mov
fldt
outsb
dec
sub
das
outsb
and
inc
push
fucomi
mov
mov
add
jae
faddp
mov
pop
inc
aad
xchg
mov
stc
call
xor
fwait
inc
stc
mov
and
test
mov
and
hlt
fidivrs
in
jbe
shl
addr16
fsubs
pop
mulb
lods
test
mov
mov
ds
jmp
jecxz
pop
pop
outsl
xchg
out
test
test
xchg
push
push
push
xchg
or
hlt
xchg
push
sub
jb
mov
sti
and
cmp
das
sub
lds
pop
rcll
imul
hlt
in
andb
fcompl
jle
sbb
ret
pop
es
mov
movsb
test
add
jmp
cmp
loopne
adcl
outsb
out
and
and
nop
sbb
imul
fldt
in
mov
jb
arpl
int3
and
mov
clc
push
int3
pop
and
sub
jbe
icebp
jp
test
popa
cmp
shll
dec
dec
cmp
daa
scas
jns
jb
or
push
lods
and
xchg
cmp
das
ret
out
sbb
test
adc
outsb
fldenv
xchg
mov
insl
sbb
xchg
adc
jb
out
sub
loop
mov
in
addl
xchg
mov
inc
sbb
movl
outsb
mov
and
rolb
jo
sti
shl
mov
inc
lock
les
adc
add
push
outsb
std
cltd
ret
loope
jecxz
mov
adc
xchg
imul
js
ficoms
das
sbb
adc
stos
in
pushf
dec
jmp
ss
jns
repnz
cmp
int
test
jp
loop
out
push
dec
cld
push
xchg
inc
jecxz
sar
or
shll
push
ds
dec
arpl
test
jecxz
loopne
lret
xchg
mov
icebp
fldenv
cmc
and
insb
push
lock
xor
xor
dec
bndstx
rcl
hlt
mov
pop
ja
mov
int3
cmp
or
adc
cmp
out
inc
inc
mov
jne
xchg
shl
push
inc
dec
outsl
push
cmp
mov
cltd
sbb
fwait
mov
mov
inc
movsb
imul
push
jns
jns
sub
sbb
test
push
jns
xor
pop
cmpl
and
mov
shr
mov
popa
hlt
mov
mov
push
mov
std
paddsw
adc
xchg
add
xor
es
shlb
cmp
inc
loope
sahf
and
xor
adc
xor
ficompl
inc
or
mov
out
int
and
dec
and
cmp
cmpsb
fs
fiadds
mov
cmpsl
mov
mov
jo
sahf
jmp
cli
xor
xor
ljmp
call
ret
clc
testb
push
or
ljmp
push
cld
rcrl
jle
mov
or
insb
std
ja
xchg
pop
int
cmp
mov
ds
bound
lods
jecxz
rcrl
outsl
sbb
mov
and
mov
dec
push
inc
fmulp
data16
in
pop
push
push
push
in
or
cwtl
dec
mov
mov
fsubs
insb
imul
arpl
orb
jl
mov
addb
push
lods
inc
sub
mov
cmp
add
std
jo
test
fbstp
xchg
test
or
adc
pop
sar
xor
inc
mov
adc
jne
cmp
xor
repnz
pop
jne
ds
push
xchg
and
out
popl
ret
add
xlat
js
push
add
lea
sub
or
scas
dec
shrl
push
cmp
inc
insb
je
ror
in
jne
enter
cmp
adc
data16
pop
pop
aam
jbe
subl
jecxz
jge
insl
jge
push
cmp
andb
decb
mov
cmp
push
fisubl
inc
loopne
lods
je
push
jbe
xchg
sub
ficoml
icebp
cwtl
test
test
mov
or
adc
setns
lret
push
inc
leave
mov
cmpsb
push
push
mov
mov
or
push
sub
imul
loope
int
sub
mov
ds
aas
fstpl
jno
cmp
mov
lea
out
sub
scas
dec
cmpsl
bound
cs
clc
sub
or
test
add
or
add
dec
popf
cs
cmp
sbb
into
js
adc
lret
lds
push
jb
or
mov
int
pop
sbb
push
fcoms
popa
lea
sbb
pop
int
pop
out
sbb
sub
jb
sbb
shll
dec
seta
lret
inc
fstpt
sub
xor
mov
dec
out
popf
leave
cmp
mov
into
daa
lcall
xor
push
add
jnp
and
lahf
cmp
and
cmpsb
push
test
sti
nop
pop
sub
pusha
push
push
call
adc
out
gs
stc
dec
push
pushf
daa
outsl
es
out
sbb
sti
pop
mov
adc
mov
lret
mov
shll
mov
xchg
push
dec
pop
xor
popf
xor
icebp
dec
out
leave
aaa
jae
xchg
pop
imul
scas
push
jl
cmpsb
cmpsl
cmpsl
sahf
repz
ret
and
and
mov
cmpsl
xchg
dec
mov
mov
scas
and
pushf
sbb
and
mov
or
adcl
iret
hlt
xchg
mov
fsts
and
std
aam
and
xor
cmpsl
mov
adc
mov
imul
jnp
mov
mov
out
push
xor
inc
and
iret
leave
mov
mov
test
subb
mov
out
jg
shrl
push
into
mov
adc
mov
push
dec
push
jmp
and
jg
icebp
or
xchg
jecxz
insl
lcall
insl
btrl
movsl
push
xchg
outsb
imul
xchg
jg
es
popa
clc
mov
out
test
jg
je
xlat
sub
xchg
jno
add
jl
xor
ds
push
inc
cmpsl
or
es
jp
mov
cmp
adc
xlat
test
arpl
mov
lcall
jmp
sub
dec
or
fs
jnp
rorb
rorb
adc
push
loopne
push
js
cmp
xchg
add
into
pushf
daa
cmp
loop
sbb
cmp
outsb
add
dec
or
mov
dec
push
fwait
add
movsb
pop
dec
dec
inc
dec
mov
out
ret
hlt
push
push
mov
ds
sub
cltd
pop
cmc
jbe
jp
mov
jp
shlb
scas
movb
inc
mov
inc
mov
jle
inc
frstor
in
mov
cwtl
mov
cmpsl
mov
mov
ficompl
push
add
stos
push
outsb
and
jecxz
inc
scas
push
push
popa
test
shlb
xor
mov
add
pop
stc
mov
adcb
inc
push
scas
or
lahf
push
sti
das
in
xor
and
cmp
or
out
xor
xchg
cs
fisubrl
sub
sub
int3
loopne
mov
mov
cmpsl
jb
out
and
sbb
call
rcll
adc
mov
das
subb
mov
and
mov
out
jbe
pop
aas
pop
lret
and
mov
xor
cmc
outsl
adc
mov
fdivrl
bound
cmp
or
xchg
mov
or
push
repz
mov
adc
das
movsl
jmp
addb
sub
dec
icebp
movsb
ss
add
loop
outsl
lret
dec
popf
jns
in
xor
call
stc
shll
mov
shl
adc
popf
sub
inc
fucomp
lret
ret
stos
or
mov
or
shlb
mov
pop
scas
testl
xorl
mov
adc
cmp
roll
les
adc
adc
fidivs
les
mov
inc
adc
popf
mov
stc
jae
mov
mov
pop
adc
ret
stc
push
insl
xchg
inc
jle
rol
mov
pop
lds
popa
jb
lock
adc
lock
jo
mov
test
mov
cld
loope
test
jl
sub
dec
mov
xor
sbb
xchg
das
adc
dec
or
vpackuswb
or
add
jg
cmp
or
psubusb
rcll
ja
xor
and
inc
scas
lahf
test
orl
outsb
mov
jbe
das
adc
xlat
out
insb
dec
add
dec
xchg
faddl
or
fstpl
int
insb
mov
push
push
andw
in
stos
or
xor
mov
pop
clc
jbe
mov
xor
popa
ja
push
add
loopne
sub
push
jge
sub
leave
std
loopne
imul
xchg
loopne
mov
call
gs
xchg
enter
repz
and
shlb
jns
jle
sbb
mov
pop
mov
mov
fdivrs
in
repnz
adc
push
cmpsb
fbld
outsb
adc
repnz
repz
fwait
and
stos
test
and
sub
test
push
test
in
stc
mov
shlb
mov
dec
xchg
push
adc
loop
mov
push
popa
in
mov
mulb
cmpsl
int
cmp
xchg
xor
xchg
mov
jbe
test
int3
lahf
add
dec
ss
mov
xchg
dec
incl
fbld
mov
fsubrl
mov
xor
fnstenv
and
outsl
adc
clc
xchg
and
add
push
in
subl
push
dec
iret
xorps
xchg
push
adc
xor
xchg
pop
notb
das
repnz
dec
adc
mov
xchg
xchg
fistpl
add
je
aas
mov
jmp
into
xchg
cmp
in
test
loopne
and
cmpsl
out
hlt
je
sub
push
xchg
add
test
mov
mov
fwait
in
mov
int3
arpl
mov
xor
shrb
les
or
enter
push
mov
out
pop
inc
rcrl
sub
bound
lds
sub
add
xor
addl
inc
iret
lods
inc
mov
pop
lret
pusha
mov
dec
mov
mov
repnz
loop
sbb
fmull
sbb
xorl
test
fwait
sti
sub
cmp
lods
aad
call
lret
out
movsb
inc
jne
jge
adc
lods
jecxz
ficomps
pop
daa
aas
ja
xchg
or
leave
mov
ficompl
mov
enter
movsl
mov
insl
mov
lret
fdivs
sub
dec
jb
push
mov
lret
mov
adc
and
mov
popa
cmp
cmpsl
or
jo
pop
mov
in
mov
outsl
int3
hlt
pop
mov
ror
xor
pop
xchg
mov
push
jmp
in
ret
mov
dec
out
push
adc
add
or
and
mov
int3
dec
test
cltd
pop
mov
notb
inc
xor
push
dec
and
call
negl
mov
pop
xchg
lret
sbb
ja
inc
mov
and
mov
ret
jecxz
cmc
inc
inc
movsb
repnz
add
push
inc
add
xor
push
lcall
cmp
mov
out
stos
movsb
xchg
push
mov
testl
int
iret
ss
push
leave
data16
je
inc
bound
pop
add
movsl
or
jb
ret
fisubl
mov
fisubs
mov
lds
xchg
jp
mul
add
jle
in
and
iret
or
scas
cltd
xor
and
mov
shlb
ss
xchg
xlat
sti
pop
imulb
dec
inc
mov
sub
hlt
ror
clc
fwait
es
sbb
push
sbb
mov
mov
push
imul
mov
xchg
mov
xchg
xchg
dec
dec
lahf
icebp
mov
mov
movsl
inc
rorb
jmp
stos
arpl
add
push
out
xor
or
xchg
std
pop
and
data16
popa
rolb
fwait
cli
cwtl
in
int3
adc
or
leavew
push
rcl
push
pop
inc
lea
std
mov
int3
lds
dec
dec
movsl
clc
daa
mov
dec
mov
sbb
dec
gs
hlt
mov
fwait
leave
cmovnp
jp
leave
mov
mov
jmp
pop
xchg
xchg
lds
jne
sub
clc
xchg
lcall
cmpsl
icebp
push
push
inc
sub
sbb
je
cmp
mov
and
test
xchg
mov
cltd
je
repnz
pop
jno
xchg
out
or
iret
leave
jecxz
call
mov
stos
mov
and
shl
outsl
popf
push
fwait
std
aad
sbbl
pop
adc
mov
cltd
aad
lods
add
dec
in
test
xchg
xchg
pop
idivl
sbb
test
push
mov
mov
ret
or
stos
into
sbbl
adc
cld
out
ja
sub
clc
cli
add
in
mov
mov
imul
xor
and
jle
xor
pop
mov
push
fsts
and
fcomps
ds
sbb
jne
mov
loop
aas
sub
cwtl
aad
dec
jmp
or
ljmp
mov
outsl
fistl
test
mov
or
in
pop
mov
fcoml
xchg
insb
xlat
mov
mov
push
movsb
cmp
enter
inc
rcr
pop
pop
mov
adc
fnstenv
cmp
imull
mov
push
mov
fistl
ret
adcl
pop
insl
clc
data16
cmp
jp
fdivs
dec
fnsave
icebp
ficoms
adcb
xor
ret
fsts
pop
shld
jmp
sub
xor
sahf
aas
out
call
test
jge
jb
mov
insl
jnp
cmpsb
cmp
arpl
les
mov
jno
sbb
mov
push
adc
pop
adc
popf
add
jle
xchg
lods
jae
sbb
popf
inc
imul
mov
pushf
xchg
daa
sub
xor
test
lret
icebp
scas
and
mov
mov
jl
fmul
jb
pop
push
push
push
out
std
pop
popa
cmp
fwait
push
xchg
jno
jecxz
sub
jecxz
inc
sub
addr16
mov
mov
and
or
pusha
xchg
pushf
daa
adc
icebp
movsb
mov
cmpsl
dec
sub
es
or
add
out
pop
push
sub
pushf
add
fbld
cmp
lret
lea
inc
or
cmp
test
push
cmp
mov
leave
pop
into
mov
shlb
nop
xchg
scas
aad
in
adc
cmp
aas
adc
mov
addl
add
std
aam
jno
sub
test
mov
int3
in
xchg
mov
ret
push
shl
pop
aas
mov
sahf
fstpl
stos
aad
fmull
scas
shlb
insb
cmc
cmp
test
mov
fwait
repz
lds
or
insl
mov
popl
sub
out
inc
lock
cmc
fsubrl
mov
fimuls
ucomiss
adc
cmp
push
push
mov
push
data16
dec
mov
push
cmpsb
sbb
fdivl
sbb
es
jle
jg
in
pusha
inc
adc
lret
popa
mov
ret
outsl
aas
jge
shl
daa
insl
xor
nop
imul
or
jno
ljmp
pop
add
test
and
jle
lods
mov
xchg
lds
cmpl
fwait
mov
and
and
rolb
pop
paddsb
mov
jnp
xchg
cmp
adc
into
sub
clc
ret
arpl
addb
dec
test
mov
repnz
xchg
mov
into
mov
inc
push
mov
add
scas
sahf
or
test
loope
mov
xchg
sub
cltd
xchg
outsl
insb
lods
stc
je
add
aaa
mov
enter
mov
or
or
sti
test
rorb
insb
add
cmp
xchg
fisubrl
inc
ret
sbb
ret
jle
loope
out
in
pusha
inc
mov
and
mov
hlt
pop
xor
jb,pn
sub
cwtl
jb
jnp
mov
mov
mov
cmpsb
call
inc
xlat
mov
pop
adc
cmp
inc
and
push
cmp
dec
cmp
dec
sub
xor
js
in
imul
push
out
inc
sbb
xchg
aam
in
add
push
in
cmp
cmpsb
stc
xlat
add
scas
js
xchg
jne
xchg
orb
inc
mov
mov
or
inc
jl
jp
gs
fists
rcrl
mov
push
shl
adc
adc
es
push
dec
lahf
out
add
jle
iret
pop
out
fidivl
pop
negb
push
or
mov
adc
cwtl
jb
push
popa
loope
std
xchg
mov
jl
xchg
movsl
mov
aas
lcall
push
jnp
cmc
outsl
sti
rorb
scas
aas
divb
or
test
imul
jge
xor
in
subl
xor
daa
xlat
das
pop
sti
je
in
jecxz
inc
rcll
or
push
mov
sahf
inc
call
std
or
adc
inc
fsubp
pop
push
leave
je
add
ss
xchg
lock
aam
lahf
mov
cmc
sbbb
push
imul
adc
int3
in
test
aas
pop
jns
enter
push
mov
pusha
adc
sub
xchg
lds
dec
cli
cmp
lcall
adc
xchg
dec
mov
add
addr16
rcll
jns
loopne
and
xchg
cs
pop
sub
bound
cli
pushf
push
iret
mov
test
in
lea
sub
lcall
xor
xlat
aad
out
add
pop
jo
mov
icebp
xchg
call
das
sub
arpl
jl
mov
pop
lods
add
xchg
cmp
pop
mov
mov
lret
aam
mov
arpl
inc
in
jbe
outsl
push
loopne
fs
inc
or
popf
xchg
mov
in
sbb
and
dec
out
push
jmp
sbb
add
loopne,pn
ja
sub
sbbl
sub
cmp
xor
sbb
jge
mov
add
mov
jb
push
insb
cmp
cmpsl
sbbb
scas
xor
add
in
inc
pcmpgtw
cmp
fisttpl
adc
sub
fldcw
inc
adc
sub
out
lcall
push
push
sbb
mov
dec
imul
in
fs
ficomps
dec
in
jne
add
cmp
sbb
movhlps
sub
pusha
cmpsl
xchg
xchg
das
aad
test
xchg
add
stc
push
jns
scas
jle
out
sub
fdiv
lahf
cmp
pop
insl
or
xor
cmpsb
dec
push
push
mov
ljmp
pop
mov
dec
pop
ficomps
push
inc
bound
xchg
sbb
push
into
pop
add
shrb
negb
jge
stc
fcoml
mov
inc
lret
mov
in
xchg
push
push
add
imul
mov
xor
mov
das
nop
dec
inc
xorb
inc
xlat
pop
jl
shrl
jecxz
sbb
scas
movsl
sbb
mov
add
fiadds
popa
sub
ja
std
mov
and
out
push
mov
andb
jp
lret
mov
add
mov
arpl
mov
pop
mov
cld
repz
and
fdivs
mov
fistpll
outsl
add
in
xchg
mov
cmp
jg
out
xchg
push
fsqrt
xchg
dec
jns
push
cltd
out
dec
cmc
fwait
les
mov
in
dec
rorb
add
pop
sti
out
imul
mov
cli
jne
adc
sbb
mov
add
jb
int3
sub
rclb
imul
jnp
pmulhw
daa
ret
or
mov
jnp
sbb
adc
or
das
push
add
inc
xor
adc
push
push
xor
push
roll
cli
mov
xlat
jns
xchg
jge
jns
dec
xor
cmc
jbe
lret
xchg
insl
scas
imul
call
aas
dec
out
popl
sub
andb
sbb
jne
push
test
scas
xchg
xor
fs
cltd
loop
pop
outsb
mov
dec
pop
or
push
pop
cltd
js
loope
out
adc
add
into
and
ds
stos
call
adc
movsb
dec
shr
lods
jnp
xchg
ffreep
mov
inc
inc
adc
cld
cmpsl
addr16
call
add
test
lods
je
cmp
add
es
jb
popf
cmpsl
add
xor
push
aam
xchg
mov
popa
iret
enter
in
sub
imul
sub
cmp
pop
dec
add
les
movsb
ja
icebp
cmp
mulb
insb
and
xorl
fisttpl
jle
add
mov
fidivrs
stos
jns
fdivs
ret
sbb
hlt
mov
sub
cli
shrb
mov
jo
loop
mov
sbb
pop
xor
rcr
jb
sub
jae
pop
mov
insb
cmpsb
cmc
sbb
arpl
ja
dec
sbb
push
int
jne
test
call
push
dec
bound
aas
jp
in
cmc
cmp
mov
adc
or
sub
shll
add
pop
mov
sbb
dec
pushf
in
mulb
inc
mov
mov
pop
mov
cmpsl
movsl
cmp
mov
mov
mov
lods
xor
flds
add
or
movsb
enter
lret
mov
mov
mov
scas
xor
inc
inc
ret
fistl
std
out
ss
and
movl
inc
out
loope
sub
inc
std
mov
addb
repz
jp,pn
push
cltd
jbe
fstl
rolb
cmp
icebp
sub
mov
aaa
sbb
push
add
cmp
movsl
jp
jg
cmp
mov
mov
adc
andl
jnp
dec
and
push
lods
scas
xor
sub
fbstp
or
xor
nop
add
imul
insb
xor
movsl
ja
hlt
mov
jno
fimuls
push
fidivrl
and
lret
mov
in
adc
adc
call
incl
es
xchg
pop
cs
fcomps
insb
stc
mov
lods
mov
jge
dec
lea
imul
xor
mov
and
mov
inc
imulb
cmp
mov
cld
or
cld
jo
fdiv
int
cmp
mov
dec
std
flds
pop
jmp
lahf
movd
xor
mov
pop
adc
les
and
and
dec
fwait
aas
aaa
lret
and
push
shr
cmpl
repz
test
test
xor
mov
push
push
outsl
jne
push
xlat
lcall
jmp
in
push
push
addr16
mov
dec
fnsave
sub
jg
hlt
fidivs
dec
inc
fnstcw
jo
sbb
jge
repz
adc
and
sub
shlb
adc
adc
in
push
fidivs
cmp
jle
sub
call
cmc
test
ljmp
push
fwait
ja
sti
nop
in
mov
loopne
imul
sbb
pushf
xor
add
aas
mov
pop
mov
lds
cld
lahf
pop
lret
add
ss
lock
arpl
push
dec
xchg
mov
fstpl
or
shll
pop
adc
roll
fldcw
adc
ss
movsb
xchg
sub
inc
ljmp
dec
bound
cli
popa
mov
ret
movsb
jge
fildll
nop
and
jno
cmc
xchg
int3
push
inc
fisttpll
pushf
test
inc
addb
and
mov
aam
in
sub
clc
clc
shrl
jmpw
insl
sbb
adc
ret
cmpsb
xchg
sub
pop
call
aaa
stos
in
in
jl
enter
xor
fdivp
sbb
cmp
cli
lods
inc
ret
sub
cmp
into
inc
fdivrp
rcrb
sub
dec
push
or
mov
lahf
mov
lock
pop
mov
adc
lock
mov
iret
std
mov
cmp
or
popf
xor
sub
cmp
jb,pn
mov
leave
sbb
jnp
clc
cmpsb
pushf
mov
push
cld
xchg
sub
sarl
aas
cs
outsb
cld
cltd
lds
cmc
xchg
out
jno
or
xchg
mov
and
mov
rclb
mov
add
mov
mov
lock
pop
adc
push
imul
lret
ja
outsl
push
mov
pop
or
or
sbb
mov
shll
xor
push
test
out
int3
mov
stc
jnp
cmc
lods
sbb
inc
and
add
and
lock
inc
aam
mull
daa
leave
lahf
sub
dec
arpl
pusha
loop
shll
jo
push
inc
dec
add
jecxz
sub
cmp
mov
cwtl
or
inc
mull
in
lods
add
popf
std
dec
lcall
pop
inc
ficompl
leave
cs
sbb
gs
imul
sbb
mov
ss
addr16
cmp
cmp
xchg
enter
js
bound
adc
enter
popf
push
imul
add
jp
stos
pusha
stos
clc
dec
jmp
inc
push
aad
aaa
mov
push
ret
mov
cmpsb
clc
fidivl
andl
mov
jmp
xchg
push
sarl
sub
sbb
dec
dec
cmc
fnsave
xor
test
sbb
mov
shrl
adc
es
test
pushf
mov
js
mov
fwait
adc
jp
int3
and
jp
mov
add
sub
aam
xchg
ljmp
and
lahf
cmc
jno
add
and
pushw
cltd
lahf
lea
pmaxsw
sti
je
scas
xor
jmp
sti
int
cmp
jb
xchg
imul
mov
or
mov
int
inc
add
dec
dec
js
aam
or
adc
mov
mov
pop
stos
ljmp
or
lods
cmpb
jo
test
inc
fisubs
ret
push
push
aas
mov
sub
pop
cmpsb
ss
sub
push
psllq
cli
and
dec
dec
mov
cmp
push
or
fmul
mov
mov
enter
in
jnp
cmp
test
cmc
insb
das
lds
sub
pushf
dec
lock
nop
fnstcw
ljmp
push
xor
dec
xchg
cmpl
push
mov
mov
pop
es
adc
sti
xchg
testl
in
mov
mov
daa
xor
sub
outsb
inc
pop
aaa
loopne
jmp
addb
das
leave
xor
insb
cli
or
push
js
aam
or
cmpsl
xchg
ret
aas
sbb
out
fimull
es
scas
inc
inc
push
or
insb
xor
xchg
sbb
cltd
imul
icebp
pop
xor
xor
mov
push
mov
push
and
jmp
repnz
fmuls
out
ret
movsl
lahf
dec
jp
in
cmp
enter
shll
push
sbbb
loopne
mov
addps
lea
dec
adc
xchg
adc
add
stc
nop
ficomps
pusha
inc
aas
lcall
icebp
mov
add
std
int3
mov
sarl
ljmp
pop
pushf
dec
inc
mov
sub
jmp
jge
adcb
insb
mov
test
lea
ficompl
gs
hlt
push
xchg
xor
jmp
out
jl
pop
cmp
scas
or
das
dec
iret
dec
cltd
pop
test
insb
sub
lea
das
mov
or
push
jle
aas
jle
bound
and
inc
sti
inc
shll
xchg
lds
cmpsl
out
pushf
or
out
xchg
aam
fs
and
jo
aaa
jmp
cwtl
mov
arpl
jns
jae
or
mov
clc
mov
push
ljmp
pop
add
cmc
out
dec
inc
sahf
cmp
bound
inc
inc
or
ljmp
idiv
adc
lods
sahf
xor
js
inc
xor
mov
cmp
adc
xor
cmp
mov
inc
orb
mov
lret
jecxz
std
cmp
jle
push
js
sbb
sbb
push
mov
mov
pop
lds
mov
ret
pop
dec
jl
sub
push
add
fldcw
icebp
pop
cmp
adc
pop
and
pop
sbb
pop
out
lcall
cmp
mov
mov
gs
int
into
mov
lea
lea
aam
mov
in
shrb
hlt
mov
add
cmp
aam
sub
xor
mov
pop
fsubrl
inc
ss
xor
dec
aaa
lea
lcall
cli
lea
repnz
into
movsl
js
subb
xchg
or
sahf
stos
sub
leave
enter
out
std
sbb
pop
mov
push
adcl
inc
or
and
popf
cmpsl
push
push
mov
mov
dec
and
sbb
in
adc
add
pushf
lret
mov
add
fcoms
fcomip
sub
enter
out
les
inc
scas
mov
cmp
into
bound
lea
jp
or
jecxz
and
mov
push
jmp
mov
outsl
rcll
fisubl
mov
push
adc
and
loop
mov
push
fbld
adcb
out
add
ds
pop
jl
rcrb
stos
cmp
into
out
push
lds
mov
xchg
in
xchg
mov
mul
sbb
xchg
sbb
push
mov
nop
ljmp
cmpsb
xor
xor
lret
cmp
movsl
cmp
jecxz
outsl
mov
fildll
xchg
mov
sbb
pushf
xor
add
pop
mov
orb
sub
cmc
dec
dec
cmp
and
jns
fucom
call
iret
stos
outsl
push
inc
or
adc
lea
in
out
ljmp
sbb
insl
push
pop
ret
cmpsb
hlt
aaa
pop
xchg
xchg
jl
xchg
lcall
jmp
popf
xor
in
icebp
rorl
xchg
hlt
mov
cmp
cltd
imull
gs
es
adc
jns
les
sbbl
ljmp
aas
gs
mov
xor
les
add
dec
xor
fsts
leave
repz
xor
fwait
sbb
or
xchg
pop
dec
movsb
rclb
and
jae
les
mov
add
sbb
lods
jmp
addb
lds
inc
andl
and
aas
clc
lret
bound
inc
xchg
push
sub
xor
int
pop
les
cltd
pop
and
in
stc
dec
mov
xlat
jle
sarb
mov
mov
fstl
in
or
inc
add
bound
mov
loopw
out
lcall
jo
xchg
push
sub
mov
mov
pop
cmp
ret
mov
and
outsl
mov
pop
xor
jo
stc
loope
mov
add
jbe
cltd
push
dec
and
xchg
xchg
or
stos
iret
push
iret
dec
ja
test
dec
stc
nop
jg
or
mov
cmp
xchg
lahf
push
les
aad
enter
mov
dec
add
fcomi
and
fsubrs
sbb
je
seto
jl
add
daa
lret
inc
inc
mov
push
imul
mov
cmp
jl
cld
mov
clc
into
inc
jmp
popa
cld
mov
stos
sbbb
les
scas
mov
lods
xor
pop
pop
mov
stos
movsl
cmc
mov
popf
jae
popa
push
in
data16
mov
push
mov
add
or
sbb
xor
mov
call
jg
push
pop
adcl
pushf
mov
sub
xchg
pop
cmp
jnp
xor
lahf
out
ret
roll
adc
add
cmpb
scas
push
ficoml
out
sub
dec
out
xchg
pop
adc
repnz
andb
push
sub
ret
popf
mov
sbb
cmp
cs
mov
std
hlt
fnstenv
sbb
out
int
xchg
ljmp
outsl
sahf
xor
mov
sarl
std
dec
outsb
lret
lret
ret
jecxz
mulb
mov
mov
sbb
out
mov
xchg
int
jp
aas
push
mov
push
popf
cmc
lret
addr16
mov
adc
ljmp
pushf
repz
shrl
adc
movsb
shrb
jo
fimull
mov
test
fsubp
mov
mov
inc
fstps
jmp
jnp
pop
and
and
stos
push
daa
adc
pop
jb
mov
std
dec
dec
ljmp
mull
idivl
mov
pushf
cmp
es
loope
push
jg
outsb
jmp
sbb
popa
stos
push
cmp
call
sbb
jg
jo
push
call
lret
repz
cmpsb
cmp
push
xlat
les
mov
pop
lods
jo
inc
dec
pop
jae
jmp
push
inc
mov
test
ljmp
loope
cmc
push
mov
jmp
xor
xor
push
push
xlat
jmp
cmp
xor
dec
pop
xor
in
jl
call
mov
movsl
cli
in
dec
incl
cmp
lods
test
push
cmp
dec
sub
loope
fsubl
das
hlt
sbb
addr16
aas
test
mov
add
std
lahf
dec
xor
popf
or
ss
test
std
cltd
lcall
lret
movsb
inc
push
movsb
and
mov
sbb
inc
sbb
xchg
xchg
shlb
mov
sti
adc
add
cli
je
test
mov
rcll
stos
sbb
call
mov
notl
je
sbb
gs
push
push
nop
sbb
jne
clc
xor
xor
add
ret
pop
dec
mov
dec
dec
popf
push
xor
fs
push
jmp
cmp
fwait
inc
push
shr
mov
aam
jg
mov
mov
loopne
push
movsl
mov
jge
mov
movsl
cmp
out
out
sti
imul
sub
out
add
pop
xorl
mov
inc
mov
adc
or
mov
xchg
pusha
mov
lahf
adc
inc
cmpsl
cld
sub
sbb
add
jnp
lods
lds
mov
adc
inc
pop
pop
fisubrl
and
sahf
adc
das
ret
and
imul
popa
adc
ja
stos
xchg
lret
jno
mov
fdivl
mov
sbb
push
cmpsl
xchg
jo
mov
cmpsl
sarl
fistps
in
cmpsl
jb
lock
xlat
fstl
pop
dec
or
arpl
xchg
in
lret
loop
jmp
pop
cwtl
sub
or
and
push
lcall
je
ret
inc
fidivs
jmp
loope
xchg
test
test
fistl
in
je
xor
adc
jae
and
addb
adcl
mov
jo
cli
or
lahf
mov
xchg
sub
push
outsb
push
stos
xor
dec
xor
stc
shrl
sbb
pop
push
shll
inc
sub
mov
lock
in
mov
add
call
xor
in
or
inc
jecxz
mov
pop
ficompl
movsb
cmp
jg
mov
pop
ret
rcl
add
icebp
mov
mov
lods
lds
xchg
cmpsb
mov
push
dec
nop
push
sbb
movsl
loop
mov
outsl
mov
mov
and
inc
frstor
xor
xchg
lret
and
push
test
outsl
negb
out
mov
rcrl
lea
xchg
add
lea
xchg
call
movsb
xchg
mov
fsubl
outsl
outsl
icebp
dec
inc
fs
adc
iret
ds
push
lahf
ss
data16
lret
scas
cmp
mov
jle
adc
add
pop
negb
xor
xchg
sbb
jge
add
or
scas
lods
jns
imul
shr
jg
pop
ja
dec
jne
mov
ljmp
pusha
aad
les
bound
andb
divl
sbb
aam
rorb
mov
testb
sub
mov
mov
fwait
and
loope
mov
push
jge
dec
ljmp
mov
jno
movsl
out
push
ljmp
pushf
jmp
jp
mov
adc
or
xchg
pop
push
das
ja
pop
mov
push
jmp
push
notl
push
adc
repz
repnz
fwait
rcll
shlb
adc
lahf
cmp
lcall
ljmp
out
ljmp
xchg
xor
pop
jne
lret
cli
sub
push
push
call
fmuls
pop
xor
dec
jge
dec
push
pusha
test
cmp
scas
popf
lock
dec
lods
mov
and
stc
ds
cmp
cmpsb
jno
gs
int3
mov
cmp
pop
cmpsb
xchg
in
pop
jbe
adc
adc
arpl
into
imul
stc
loope
in
push
jo
je
movsl
loopne
xor
pop
int3
popl
addb
or
in
mov
mov
mov
dec
or
mov
fdivs
jb
and
add
cltd
stos
mov
xchg
sub
jno
imul
js
mov
sub
loopne
je
cwtl
ret
or
dec
pop
sub
test
xchg
rcrb
cmpsl
and
add
repnz
sti
mov
rcl
dec
xlat
cmp
push
lret
adc
sub
es
cmpsl
out
or
mov
sub
mov
addr16
push
sub
call
cmpsl
xor
jecxz
mov
inc
xchg
int3
popf
cmc
fs
push
movsl
movsb
pop
sub
leave
or
jne
add
insb
daa
fildll
push
dec
mov
out
or
and
outsb
add
pop
mov
into
lods
push
out
sbb
mov
push
add
jnp
mov
pop
mov
cmpsb
xchg
mov
pop
mov
cmp
fstl
out
dec
pop
xor
bound
or
jg
ds
dec
mov
shr
into
inc
popf
push
mov
xor
cmpsl
addl
add
xchg
sub
cwtl
icebp
dec
xchg
in
icebp
dec
and
xchg
je
or
imul
push
xchg
jbe
jns
jmp
add
mov
pop
hlt
jecxz
jmp
or
jle
xchg
bswap
test
jno
lods
movsl
mov
cld
cmc
fcmovu
pop
or
pop
imul
inc
push
shlb
movsb
mov
dec
stos
jbe
or
sbb
push
and
xor
movsl
scas
jge
pop
shlb
lea
scas
stos
out
mov
int
cmp
neg
ror
addr16
cld
stc
jb
out
scas
jp
xorb
jg
movsl
sub
and
lahf
push
stos
pusha
lahf
fiadds
daa
mov
add
mov
outsb
insl
stos
adc
add
jb
aad
ljmp
adc
sbb
pop
je
pop
sbbb
test
fidivs
adc
xor
add
clc
fidivl
nop
or
mov
hlt
idivb
lcall
cli
and
push
dec
jb
dec
clc
sar
nop
add
and
js
jo
sarb
jbe
out
es
sbb
fidivrl
inc
ffreep
repz
arpl
and
or
pop
or
cmpl
lods
push
cs
cmp
fcoml
out
outsl
lahf
cmpsb
cmp
jne
clc
je
pop
loopne
je
mov
loope
dec
sub
cli
lods
insb
cmpsl
jle
movsl
jbe
xchg
dec
add
xchg
in
xchg
push
test
fmul
icebp
fldt
adc
rclb
cmp
dec
sub
pop
rcll
sbb
jle
int3
pushf
ljmp
mov
and
sub
dec
adc
adc
mov
push
mov
int
jbe
fldenv
scas
gs
ror
lret
lods
sar
pop
xor
js
ss
je
inc
bound
adc
fs
int3
mov
shrb
cmpb
loopne
mov
inc
xchg
sbb
push
or
insb
sarl
inc
xchg
sub
ljmp
xchg
fmuls
inc
mov
jne
fisubrs
add
sub
das
mov
aaa
pop
dec
mov
shll
inc
arpl
je
in
pop
sbb
lahf
popa
cmp
ss
dec
mov
xchg
out
add
add
fs
or
mov
test
arpl
mov
jbe
fsubl
push
dec
mov
cmp
jle
pop
xor
dec
or
add
sbb
inc
xlat
inc
lahf
mov
js
add
pop
stos
cmp
mov
mov
in
sbb
xor
jecxz
std
lcall
push
out
scas
jp
and
out
mov
fidivs
or
adc
cltd
mov
add
std
dec
inc
loop
fdivl
stc
xor
pop
pop
sti
and
pop
negb
sub
dec
incl
push
cmp
cltd
pop
xchg
sub
jl
arpl
daa
add
mov
dec
in
lret
clc
pop
in
push
mov
xchg
in
std
xchg
mov
popf
lods
mov
test
mov
lahf
fdivs
outsb
aad
sbb
in
fnstcw
add
icebp
scas
mov
mov
lods
lods
adcl
aam
or
lock
cltd
cmp
push
mov
or
cmp
cmp
hlt
jns
pop
cmp
popf
sub
mov
fisubrl
cld
sbb
sbbl
out
data16
dec
jmp
xlat
test
jecxz
stc
adcl
icebp
adc
test
sbbb
fwait
lods
lods
xchg
add
cld
test
and
mov
enter
cwtl
icebp
xchg
sub
idivl
dec
sbbl
push
daa
stos
add
iret
mov
in
cs
or
outsb
mov
add
mov
cmp
push
repnz
imul
adc
addr16
lds
mov
insb
insl
and
mov
test
pop
sti
jbe
mov
add
add
pop
mov
push
cltd
adc
mov
sahf
mov
inc
push
sub
mov
ja
mov
push
push
mov
fldenv
cs
fldt
jbe
cld
cs
xor
xor
dec
sbb
mov
insl
inc
sbb
jno
pop
inc
fadds
sub
imul
mov
aas
push
cmc
pop
xor
dec
cmp
xor
mov
add
dec
push
lods
dec
in
push
outsb
adc
push
xchg
das
dec
add
sub
adc
push
mov
push
xchg
push
leave
aas
ja
or
mov
dec
sbbb
outsl
mov
pop
jg
iret
sbbl
inc
inc
stos
ds
pop
ficoml
sbb
int
fsubrs
in
xchg
rcll
in
aas
insl
inc
pusha
insb
mov
bound
inc
ds
xchg
xchg
add
dec
orb
sbb
es
lcall
push
shlb
jae
imul
cli
shrl
pop
mov
pop
aam
xchg
nop
push
mov
test
ss
das
pushf
adc
int
add
cs
mov
ljmp
lea
pop
cmp
adc
add
add
push
clc
loope
add
xchg
pusha
movsb
insb
popf
inc
mov
jb
movsl
push
into
inc
outsb
in
adc
xor
andb
sub
xchg
push
add
inc
stos
clc
cmpsl
mov
push
inc
inc
xchg
mov
dec
dec
mov
push
push
bnd
inc
mov
cmp
pushf
in
imul
sub
jb
das
pop
lret
jno
popf
stc
cmpsb
xchg
push
stos
mov
pop
xor
shlb
das
push
cmpsb
sub
and
scas
push
sbb
add
push
out
lds
xchg
lahf
stos
mov
xor
inc
iret
xorb
mov
int3
sub
out
sub
push
cmpsl
push
enter
sbb
cmp
mov
outsb
xchg
jmp
xchg
push
or
jle
test
movsb
and
popf
add
jb
push
mov
jle
sub
add
and
fs
ficomps
negl
std
jmp
mov
imul
mov
mov
leave
sbbl
pop
push
lahf
or
enter
jno
pop
mov
insl
loopne
sbb
andl
xlat
aad
mov
aas
jp
xchg
pop
cmp
iret
fs
loop
daa
outsb
aam
push
lock
mov
inc
mov
inc
in
addr16
jl
inc
push
push
daa
inc
fisttps
cmp
in
add
aam
xchg
push
mov
or
mov
ja
push
sbbl
add
in
push
mov
in
xor
in
xor
stc
cltd
scas
xchg
ja
clc
test
test
int3
cmp
dec
inc
fisubrl
lret
mov
aaa
jbe
aam
xor
leave
mov
cltd
lock
push
popf
pop
addr16
mov
cltd
repz
lods
pop
push
and
lods
mov
mov
lret
push
mov
push
push
cld
lock
sub
fdivs
or
dec
dec
in
add
dec
shlb
ljmp
or
out
bound
idivl
cmp
fnstcw
jmp
shlb
inc
icebp
adc
xchg
mov
adc
jp
js
xchg
mov
stos
jl
addr16
jp
mov
pop
sbb
movsl
cld
cmp
ds
fimull
mov
stos
and
mov
or
mov
aaa
or
jmp
pop
mov
push
ret
push
cld
inc
into
insl
fwait
cmpb
mov
xlat
adc
cmpsb
sbb
jnp
scas
and
ja
daa
nop
test
inc
inc
es
clc
jns
fldt
sub
ja
lcall
push
dec
and
xchg
mov
inc
dec
ds
das
jl
lret
cli
test
pop
mov
jmp
cmpsl
and
xchg
adc
inc
fidivrl
dec
jecxz
test
test
jecxz
test
mov
je
int
fidivl
bound
pop
or
aad
shlb
js
cmpsl
mov
pop
sub
rol
xchg
stos
fsubrs
ljmp
mov
push
into
or
jl
mov
xchg
sub
ret
mov
pop
pop
daa
inc
aad
lods
xchg
push
adc
dec
jae
scas
push
lods
aam
add
inc
mov
dec
inc
mov
stc
insb
test
cwtl
push
pop
gs
cmpl
daa
push
mov
scas
shl
test
int
lret
in
pop
rcl
push
movsb
mov
adc
mov
pop
insb
insb
mov
pop
inc
scas
xor
in
mov
inc
xor
mov
inc
add
mov
mov
pop
mov
mov
cmp
insb
cwtl
inc
add
mov
imul
and
rorl
loope
and
iret
jb
cmpsb
xsaveopt
adc
test
mov
push
sbb
adc
xchg
jae
pop
cmp
test
fnstsw
addr16
or
pusha
daa
enter
repnz
add
push
push
test
daa
outsb
enter
sbb
sbb
out
xorb
or
sub
int3
or
enter
int3
lret
or
movsl
lahf
test
fs
out
mov
jns
popf
add
outsb
sub
sub
pop
pop
out
push
adc
cmp
repnz
jg
jecxz
dec
add
mov
mov
lret
mov
jg
xor
mov
ret
push
sbb
repnz
cmp
mov
cmp
popf
pop
ss
sbb
inc
arpl
mov
shll
xchg
xchg
iret
sbb
push
sbb
adcl
sti
test
adc
jb
loop
dec
and
mov
adc
nop
bound
xchg
cmp
decb
test
pop
add
ret
jb
icebp
push
lods
lods
mov
rclb
push
or
scas
ret
notl
xchg
scas
adc
and
scas
cmp
sbb
pusha
sbb
ljmp
xor
fwait
rcl
or
subb
xchg
mov
jmp
ficompl
cmp
push
jmp
dec
and
xchg
cld
mov
into
addr16
lds
pusha
mov
loopne
rcrb
mov
pop
jl
pop
and
fnstsw
adc
int3
xlat
leave
pusha
or
xchg
decl
nopl
mov
xor
stos
pop
sahf
and
dec
mov
notl
mov
jle
sbb
fidivrs
mov
xchg
das
daa
lods
adc
dec
mov
push
fs
call
or
inc
add
sub
mov
sub
insl
add
or
push
insl
clc
insb
mov
xor
xor
push
sbb
inc
hlt
out
bound
in
outsb
in
cld
outsl
int
xlat
mov
repz
bound
movsb
push
or
test
js
imul
and
daa
xchg
fs
sub
lahf
mov
inc
sarb
icebp
lea
pushl
xchg
cld
xchg
jl
add
dec
cmp
jbe
ljmp
call
xor
mov
dec
aad
sub
dec
xor
scas
fcomi
nop
pop
repnz
mov
movsb
ret
pop
mov
jge
scas
daa
add
js
mov
arpl
aad
sub
test
dec
cmp
push
adc
arpl
cwtl
fwait
sti
lahf
inc
adc
mov
jae
add
ret
jmp
lea
push
adc
lock
xor
jge
xchg
mov
pop
xor
push
test
enter
ljmp
jns
mov
scas
push
loope
fsubl
cmp
push
jne
insb
ret
cmp
mov
dec
fnsave
icebp
push
aas
or
ljmp
scas
mov
push
out
nop
loopne
ja
outsb
add
sbb
cmpl
iret
add
popl
ss
sahf
push
pop
pop
repnz
push
dec
aaa
enter
push
pop
inc
scas
xor
pop
jae
adc
mov
paddd
bound
mov
jmp
or
jbe
insl
mov
mov
movsl
data16
jno
xchg
push
jne
lea
mov
stc
adc
jmp
sub
or
pop
aad
sub
jbe
cmpb
fucomp
loope
inc
mov
lahf
in
lea
push
out
sbb
fwait
mov
xchg
out
xchg
mov
hlt
daa
out
inc
adc
jg
xlat
out
mov
jne
push
push
mov
aas
enter
xor
mov
shll
or
mov
mov
xor
out
mov
jno
adc
enter
jmp
jno
and
shrl
xlat
sub
mov
aam
mov
bound
sub
inc
pop
jns
adc
inc
loopne
bound
mov
xor
mov
pop
ret
dec
nop
test
aam
sub
xlat
repz
fcoms
cmp
and
push
pop
bound
or
push
push
mov
xor
in
divl
loopne
adc
sub
roll
mov
test
pop
dec
push
outsb
cmpsl
lretw
daa
xchg
sub
pop
out
mov
push
mov
clc
enter
cld
push
in
dec
pop
push
lahf
sub
xor
and
iret
aad
add
inc
jle
jmp
mov
mov
movsl
outsl
push
sbbb
sbb
sub
in
mov
or
push
rol
shlb
js
push
in
repz
or
push
sub
imul
addr16
enter
clc
jmp
sub
cwtl
roll
out
sbbl
std
loope
sub
repz
adc
inc
push
inc
nop
daa
jge
mov
and
dec
fiaddl
mov
in
jne
popa
sub
add
and
xchg
mov
imul
test
loop
dec
or
dec
call
roll
jl
daa
mov
js
push
lds
inc
mov
jbe
arpl
jne
mov
outsl
mov
les
xor
aaa
add
push
inc
xlat
xchg
dec
insl
out
xchg
loop
cmpsb
cmp
dec
ja
das
cmp
adc
loopne
dec
xchg
jl
add
lret
lret
cld
mov
and
lods
loopne
sbb
jp
mov
or
dec
rcl
aaa
inc
in
insb
jmp
movsb
ret
jle
adc
push
lcall
inc
xchg
add
xchg
sub
xchg
sub
mov
lret
jnp
jmp
loop
mov
test
lret
sbb
or
xor
xchg
call
repnz
ds
in
add
pop
arpl
mov
jge
xchg
es
adc
push
in
enter
mov
lcall
outsl
adc
sub
sub
mov
and
pusha
cld
inc
mov
aam
sbbl
cld
jp
movsl
imul
jp
push
aad
and
ss
test
sbb
out
push
inc
inc
clc
out
shlb
mov
repnz
mov
pop
jnp
cmpsb
mov
adc
lahf
sub
lds
scas
xchg
sub
int
push
repnz
lret
jb
inc
movsb
pusha
sbb
mov
sub
popa
adc
sbb
inc
jge
pop
pop
out
mov
mov
clc
jle
sub
fnsave
insl
fdivrl
push
fwait
imul
in
rolb
lea
inc
add
es
popf
fwait
pop
hlt
ljmp
mov
pop
inc
xchg
cmpsl
pop
adc
mov
iret
sub
insb
clc
inc
sahf
push
jb
rcll
outsb
out
inc
loope
cmc
push
mov
fnsave
or
test
aaa
clc
xor
cmp
sbb
xlat
jge
pop
stc
insb
add
clc
inc
pusha
and
adc
add
popf
lahf
dec
les
lret
cwtl
push
daa
dec
push
jbe
jmp
sbb
pop
mov
hlt
stos
jo
jae
sbb
iret
push
int3
jbe
add
xchg
clc
dec
jecxz
fwait
xor
inc
mov
mov
adc
mov
xor
je,pn
ljmp
in
sbb
mov
aaa
out
add
das
mov
imul
rol
or
cmp
add
mov
push
mov
push
mov
ret
jae
sbb
repz
mov
scas
xlat
lods
insl
aam
jge
cld
es
cmp
fimull
add
loop
insb
push
aas
loop
subl
lock
or
add
mov
xor
int3
lds
decl
loopne
out
adc
xchg
dec
pop
jle
jecxz
cmp
insl
dec
fwait
xchg
dec
adc
hlt
mov
enter
fsubrl
sbb
enter
shlb
aad
pushf
cmpsl
sub
test
dec
out
push
mov
push
mov
add
gs
jmp
xorl
mov
dec
clc
push
testl
cmp
enter
or
cmp
adc
inc
fcompl
mov
mov
lock
fwait
enter
xchg
pop
movsl
out
loope
fs
add
pop
mov
xor
clc
test
mov
mov
jae
in
push
xchg
mov
adc
xchg
xchg
dec
push
sbb
mov
rcrb
push
jno
aam
sbb
xchg
mov
loopne
jae
stc
test
lret
les
aam
enter
movsb
cmp
mov
roll
push
fwait
ja
pop
in
push
popf
push
dec
nop
cmp
lods
ret
repz
rcrl
ret
sti
gs
fnstenv
sti
inc
dec
mov
adcb
int
push
leave
jb
xchg
aaa
mov
out
fbld
rolb
mov
dec
in
in
dec
push
xlat
dec
or
faddp
sbb
or
fstpl
jge
cmp
mov
push
icebp
and
cld
xchg
lds
xchg
or
xor
inc
stc
dec
adc
mov
imull
ror
add
mov
fildl
fisubrs
jbe
cmp
lds
xor
lret
mov
cmp
push
sahf
pop
fisubs
out
xlat
pop
sbb
bound
in
cmp
sub
cmp
pop
xchg
into
xor
mov
cmpsb
pop
push
jl
scas
push
ja
ucomiss
jns
xchg
push
fisubl
pop
ret
jnp
xor
sar
icebp
xchg
insb
js
call
ret
gs
fucomip
mov
adc
sbb
xor
in
out
loope
fcomip
mov
sub
jnp
or
push
xchg
fdivs
and
cmp
push
jmp
ss
adc
fs
sti
xchg
rclb
adc
pop
jnp
or
cld
mov
out
ljmp
fcmovne
mov
and
aaa
mov
fisubs
or
push
adcl
adc
mov
popa
testl
or
mov
push
iret
and
sbb
adc
rol
and
cs
rorl
cmp
outsl
add
jae
ret
scas
jle
ret
out
pop
test
jnp
and
push
jbe
mov
out
sbb
add
xor
xor
xchg
je
xchg
push
mov
stos
mov
xlat
gs
rcrb
push
je
int3
mov
push
mov
aad
sub
or
mov
fldenv
mov
int
cmp
lods
cmpsl
xor
idivb
notb
ds
cmp
mov
mov
nop
popl
ret
mov
negb
mov
cs
sub
xor
cmp
cmpsl
out
sahf
cmp
inc
sub
inc
add
mov
test
mov
and
mov
outsb
rcrb
jmp
adc
ds
dec
jo
mov
push
outsb
and
and
imull
popf
push
jp
test
mov
fwait
jecxz
dec
loope
jbe
adc
mov
cld
xchg
les
and
xchg
adc
les
xor
sbb
sub
sbb
mov
ret
sbb
loope
stc
push
push
stos
pop
pop
mov
out
jbe
or
sub
lret
push
cld
jle
popf
lods
adc
mov
in
test
inc
push
int
fistl
inc
cmpb
mov
xor
pop
js
mov
jp
decl
jb
es
pop
icebp
js
mov
mov
push
arpl
call
push
pop
and
jns
add
lods
push
stos
cs
sti
addr16
neg
fs
adc
sbb
ret
leave
lret
push
ret
xor
push
adcl
push
xchg
enter
cmpsb
insb
lock
jle
add
sub
pop
popf
adc
mov
inc
jo
push
jecxz,pn
inc
mov
aad
retw
std
xlat
outsb
leave
mov
leave
rcr
sbb
stc
arpl
adc
dec
mov
xor
test
arpl
stos
cmc
pop
je
outsl
orl
enter
lods
inc
push
in
dec
bound
lret
mov
xchg
ret
or
test
add
dec
push
bound
int3
fsubrs
mov
xor
pop
mov
aad
or
or
cs
shlb
pop
cmc
pop
mov
imul
sub
jns
shlb
adc
shll
adc
call
mov
fcomps
mov
jne
push
rcll
loope
mov
stos
sbb
mov
cmp
test
push
repz
sbbb
shl
push
in
dec
and
mov
addb
inc
add
cltd
scas
and
rorb
in
mov
insb
add
dec
add
mov
in
mov
xor
mov
arpl
enter
hlt
inc
xchg
out
cmc
fnstsw
add
sbb
mov
in
repnz
aaa
into
ficomps
pop
jbe
add
xor
xor
mov
mov
dec
push
xor
pop
lahf
mov
out
add
pop
pop
sbb
jns
mov
jne
cmp
push
xchg
sub
enter
xchg
or
bound
dec
sub
stc
aam
inc
sbb
pop
notb
cmc
mov
jge
xlat
mov
sahf
lret
out
std
xchg
loopne
jne
aaa
negb
cli
cmc
add
insl
mov
inc
pop
iret
lods
mov
imul
inc
xchg
fcomps
in
add
xor
scas
and
or
jns
movsl
les
in
cs
sub
mov
mov
aas
popa
inc
push
popf
pop
add
fmuls
xchg
call
sbb
mov
push
ffree
dec
int
jge
gs
sub
imul
or
or
jns
std
push
hlt
nop
push
mov
sbb
mov
jg
aas
jle
mov
andl
pop
arpl
dec
iret
ficompl
clc
enter
stc
mov
inc
push
lods
adc
mov
dec
pop
shrl
jecxz
fldz
imul
pop
mov
adc
fdivs
mov
mov
cmp
xchg
insl
mov
rcl
addr16
pop
inc
pop
pushf
out
jg
jbe
into
and
mov
out
lcall
push
leave
loop
dec
jecxz
xchg
add
aad
stos
push
ljmp
stc
shlb
frstor
jnp
push
scas
push
jl
push
pop
cvtps2pi
adc
rorl
xchg
xor
adc
jmp
out
pop
fs
gs
mov
push
add
mov
lds
js
cltd
mov
ljmp
mov
pop
aaa
mov
pop
xchg
mov
cli
loop
sub
rorl
ret
aad
loop
jne
jo
sbb
cli
xor
sub
leave
jo
ss
or
dec
insb
xchg
adc
pop
subb
push
jmp
adc
jo
subl
les
and
dec
mov
popf
xor
pop
xchg
xchg
sbb
repnz
xor
mov
pushf
scas
or
sahf
push
imul
xchg
in
jg
cmp
es
push
xchg
pop
les
mov
adc
leave
es
pop
xlat
push
into
mov
cmpsl
cmpsl
aad
push
mov
jle
adc
push
mov
stos
daa
pop
ss
out
subb
xchg
popa
idiv
sbb
in
or
or
aaa
mov
push
mov
jne
sahf
xchg
ret
test
fs
cltd
mov
rorb
in
jg
xlat
mov
andl
sbb
push
aaa
jp
pop
dec
outsb
adc
dec
push
push
fwait
mov
dec
mov
es
cmpsl
and
push
outsb
cwtl
in
rclb
ficomps
push
inc
sub
xor
fisubrl
pop
jmp
aaa
xor
pop
shrl
jg
dec
rorb
lcall
jmp
and
in
stos
or
mov
jnp
cmp
pop
loopne
dec
dec
push
loope
adc
mov
sbb
bound
pop
shlb
in
jp
mov
shll
fwait
aaa
or
xor
loop
addr16
and
mov
sub
cmp
out
push
sub
stc
mov
ljmp
out
test
subl
mov
sbb
cli
es
repz
sbb
jo
call
sub
sbb
xor
sti
bound
roll
add
xchg
and
fnstsw
add
dec
or
push
cmp
and
sbbb
out
std
and
jmp
cmpsb
xchg
rclb
daa
add
popf
inc
and
in
or
enter
out
mov
xor
xacquire
in
adc
adc
mov
add
jle
mov
dec
cmp
outsb
mov
filds
push
jo
mov
xor
clc
arpl
jns
aas
arpl
mov
popf
mov
mov
ret
cmp
mov
mov
push
inc
push
xor
pop
testb
imul
xrelease
enter
popa
popa
leave
bound
mov
lock
inc
push
icebp
dec
aam
testb
addr16
sub
lods
mov
push
fwait
mov
jo
aas
das
js
subl
jle
insb
lock
xchg
and
mov
xchg
sbb
mov
add
push
jmp
mov
in
test
je
into
mov
add
xchg
rcrl
cwtd
in
push
and
xchg
pop
testb
sbb
pop
inc
aam
xor
enter
and
sti
aam
inc
sub
in
push
nop
lods
cmovl
xor
shrl
mov
out
cmp
test
inc
cmp
aaa
or
lds
pop
mov
testb
push
out
test
adc
shrl
insb
sub
jle
movsl
lahf
xor
in
mov
mov
adc
jo
orl
lahf
mov
mov
icebp
outsb
cmp
divb
mov
lock
mov
or
repz
std
dec
fnstsw
arpl
sbb
test
loope
aad
dec
add
loop
jle
rcl
andl
add
pop
ret
cmp
ss
inc
sbb
insl
clc
or
cmp
hlt
mov
adc
adc
clc
and
jmp
and
and
insl
stos
sub
push
inc
mov
fimull
ljmp
popf
or
lcall
xchg
mov
or
cmp
gs
negb
cli
xchg
sub
adc
clc
lcall
hlt
mov
push
cltd
xor
enter
or
sbb
andb
pop
jmp
test
mov
ret
inc
mov
mull
inc
push
fdivl
jmp
adc
fcomp
mov
push
dec
xchg
sub
popa
es
jbe
daa
cmp
xlat
mov
adc
daa
sbb
mov
and
inc
pop
adc
ret
adc
out
dec
inc
enter
data16
jae
es
test
dec
jge
subl
inc
pop
stc
or
pop
out
arpl
mov
jbe
inc
lds
movsb
pop
push
jae
mov
sub
scas
sar
xchg
jae
xchg
sub
push
stos
ja
cli
test
push
pushf
jne
rol
sbb
push
mov
inc
popf
push
insb
mov
int3
cmp
adc
std
cltd
push
or
sub
std
cmp
mov
jnp
mov
addr16
add
mov
sbb
cwtl
inc
arpl
inc
cli
push
cltd
imul
push
pop
mov
mov
imul
or
or
xor
scas
push
bound
inc
push
rcrl
daa
cmp
test
push
imul
lock
push
or
push
push
xchg
sub
test
fstp
mov
js
push
cltd
jge
push
rclb
sahf
fnstcw
and
data16
sbb
lods
push
inc
mov
mov
jae
jbe
and
stc
in
popf
push
xchg
sarl
test
pop
loopne
cmp
dec
iret
inc
lods
jnp
mov
dec
scas
dec
lahf
out
iret
mov
cltd
sub
loopne
popa
idivl
pop
add
push
shll
or
cmp
add
out
xchg
push
mov
in
insl
loopne
adc
outsl
js
jge
add
adc
lret
scas
stc
aad
cmpsb
gs
jo
inc
test
inc
mov
mov
ret
out
jg
xlat
aad
shr
addl
pop
dec
jb
cmpsb
push
cmp
std
mov
jmp
mov
arpl
popa
aaa
les
int
dec
jecxz
jge
aam
enter
loope
daa
jp
rol
push
sbb
jecxz
pusha
dec
imul
xchg
test
cltd
xor
mov
inc
jecxz
aam
and
push
cmp
cmp
sub
and
mov
adc
jl
jmp
mov
lcall
adc
lret
jge
dec
cmp
test
and
js
xchg
pop
cmpsl
out
sbbl
and
add
xchg
mov
mov
jl
pop
sub
pop
in
mov
xor
xchg
mov
mov
int3
enter
jg
insb
sti
mov
dec
push
inc
sbb
bnd
outsb
push
fildll
fimull
or
inc
enter
popl
sub
lds
mov
movhlps
in
dec
pop
push
mov
cmpsb
dec
sar
jb
in
cmp
cmp
shlb
cmp
mov
lcall
ljmp
setno
mov
sarb
jns
mov
fisttps
xchg
cmpsl
out
repnz
push
xchg
mov
xchg
scas
enter
loope
dec
mov
cmp
jae
popf
sub
jecxz
pushf
or
xchg
push
and
and
add
mov
call
sarl
mov
lret
inc
pop
sub
rcr
jnp
out
mov
push
stos
cmp
sbb
repz
test
std
call
pop
scas
cwtl
push
out
fwait
stc
pop
mov
sbb
push
popf
fwait
cmp
mov
aam
fsubs
js
mov
ror
sbb
scas
push
aad
mov
mov
fbld
jo
sti
adc
or
pop
mov
inc
arpl
rcll
xor
notl
cmp
pop
adc
dec
add
mov
cmp
push
xlat
pop
xor
dec
xchg
mov
fidivrl
out
adc
cmp
rcr
cltd
mov
pop
int
aas
dec
cld
push
or
insl
mov
imul
jae
jnp
sbb
xor
jmp
pop
test
loope
insb
jmp
aas
mov
jo
orb
xchg
mov
adcl
mov
rcrl
xor
mov
push
cmp
adcl
mov
or
fists
or
addr16
data16
xlat
pop
push
repz
stos
sbb
inc
outsb
outsl
movb
mov
push
mov
test
rol
aad
lock
adc
inc
repz
mov
jp
mov
jle
pop
and
hlt
jge
cmp
loop
rorb
mov
fisubrs
xchg
std
and
fmuls
sbb
sub
add
fbld
cwtl
loop
add
ljmp
xchg
push
xchg
mov
inc
loop
loop
out
inc
in
sbb
sbb
imul
pop
ret
xchg
ret
rol
arpl
mov
bound
push
inc
pop
fisttpll
ljmp
sbb
xor
faddp
mov
jnp
mov
mov
sbb
or
xchg
sahf
hlt
cltd
dec
imul
or
inc
cmpsl
jl
jnp
mov
mov
sub
jno
mulb
dec
xor
inc
repz
dec
sarb
nop
inc
lcall
das
adc
xchg
sub
jp
in
enter
xor
ret
call
mov
mov
fcomps
cltd
std
cmp
fs
cmp
mov
iret
xlat
xor
mov
pop
scas
hlt
xchg
test
mov
adc
hlt
negl
icebp
sub
mov
mov
cmpsb
and
adc
and
cld
push
push
dec
ljmp
pushf
dec
xchg
mov
push
and
xlat
push
xchg
mov
dec
push
xchg
dec
dec
sub
mov
jmp
icebp
out
and
sbb
mov
lods
cmp
subb
pushf
loope
or
dec
xor
subl
xchg
cmp
test
ret
shll
je
leave
in
mov
lret
mov
scas
xchg
adc
cmpsl
lea
mov
mov
jmp
adc
outsb
sub
jo
xor
xor
push
clc
adc
mov
jmp
shll
iret
pop
mov
int
mov
jge
pop
push
inc
lea
jmp
fldcw
aam
lods
cli
or
daa
stos
cmp
sub
and
shll
dec
adc
adc
push
add
idivl
sbb
paddb
cmpb
xchg
push
push
dec
xor
sti
pushf
xor
movsl
adc
inc
std
test
cmp
jb
cmpsb
inc
xlat
mov
fidivl
pop
xchg
icebp
imul
leave
pusha
les
bound
mov
ja
push
lods
add
fiaddl
fwait
mov
pop
adc
push
movsl
inc
and
dec
popa
pop
dec
jbe
ret
xor
cmp
pop
lret
repnz
iret
and
inc
push
mov
insl
and
stos
in
and
sbb
inc
push
and
pop
mov
pop
cli
push
mov
pushf
push
lods
xor
ljmpw
mov
jmp
adc
inc
fists
ja
jns
cmp
xor
cli
xchg
add
fs
lret
shrb
mov
shl
xor
xlat
gs
pop
ds
adc
in
adc
xchg
push
sub
push
and
xorb
in
pusha
cmpsb
loopne
cmp
outsl
sti
rcrb
dec
lods
mov
fstl
fwait
sub
jo
pop
push
daa
adc
cmpsl
mov
push
or
dec
setl
xchg
daa
mov
mov
lods
mov
loop
lahf
loop
rcrb
adc
pop
cmp
popa
sub
pop
inc
mov
aaa
cmc
fildl
sub
lret
mov
pop
lock
pop
sub
add
ja
enter
mov
dec
test
sbb
jecxz
pop
aad
fbld
test
dec
sahf
arpl
inc
mov
pop
out
and
pusha
js
push
sbb
add
test
xor
subb
sub
mov
fidivrs
mov
outsl
dec
mov
push
jl
mov
mov
sti
test
jb
push
fbld
pop
popf
adc
push
daa
inc
jno
ja
mov
xor
scas
jns
call
lock
dec
and
psubd
stc
adc
lret
add
outsb
sbb
push
data16
cmp
xor
sub
fdivr
adc
hlt
mov
test
decb
pop
xor
sahf
lock
out
lret
in
xchg
in
jbe
pslld
mov
xor
adc
and
nopl
adcb
mov
ja
sbb
test
sub
ds
lret
dec
popf
lods
addl
mov
fldlg2
cmp
jne
inc
xorl
pusha
adc
decl
loope
mov
push
out
mov
std
js
and
ret
push
fwait
xor
sub
or
jnp
inc
je
int3
and
mov
push
stos
adc
insb
xchg
popf
lods
push
push
fisubl
xor
jle
push
shlb
lret
or
subl
cli
inc
lret
push
imul
mov
in
sub
gs
pop
sahf
mov
aas
mov
test
imul
test
cs
sahf
aam
xor
mov
or
sarl
and
sbb
inc
loop
cmpsl
bound
or
icebp
adc
addl
pop
outsl
add
cmp
idivb
addr16
cmpsl
push
ret
pop
jmp
or
leave
mov
xchg
outsl
les
movsb
xor
jl
mov
adc
push
xlat
ljmp
fs
pop
xor
jmp
repnz
into
push
aam
lods
jo
adc
and
pusha
fstpt
jg
xor
push
lock
loop
lahf
mov
lods
adc
mov
push
jmp
or
sub
aad
cmp
mov
sub
jne
or
jns
into
sub
xor
les
inc
in
leave
adc
fstpt
mov
into
xor
pop
push
fcomp
add
push
cmp
fsubl
push
xor
loope
lods
push
inc
xlat
mov
leave
ja
fbstp
cltd
xchg
es
push
xor
lds
xchg
xchg
pop
jmp
pop
movsb
fldenv
and
cltd
mov
cmp
push
mov
xor
in
test
js
pop
movsl
push
fmuls
mov
inc
ficoml
ret
pop
in
outsl
shl
xlat
add
and
fbstp
mov
push
mov
js
addr16
in
shl
rcrl
cwtl
mov
sbb
xor
push
js
movsb
test
scas
inc
idivb
movd
mov
test
and
enter
push
or
xchg
mov
pop
ljmp
aas
inc
dec
or
cmp
mov
jo
sub
and
icebp
sbb
jl
mov
mov
adc
push
mov
movb
bound
out
push
cmp
dec
fbld
sub
push
rcll
pop
lgs
pop
adc
roll
or
push
mov
cmp
test
icebp
das
inc
fcompl
xchg
stos
sub
cmp
jbe
push
sub
mov
fisubrl
and
cmp
jb
mov
jo
std
sub
dec
lods
mov
jno
jl
cmp
mov
lahf
mov
sbb
push
out
ja
enter
clc
or
jmp
hlt
jns
cmp
mov
mov
test
call
sbb
xor
cli
js
mov
or
add
xor
imul
mov
adc
mov
movsb
sbb
aad
and
cmc
and
in
lds
lods
jo
pop
mov
nop
dec
jmp
pop
mov
xor
pop
inc
out
xchg
cmp
cwtl
or
cltd
insl
adc
cmc
int3
mov
xor
jne
cli
je
out
rolb
mov
repnz
mov
pop
cmp
div
jl
push
mov
pop
stos
sbb
add
cmp
in
std
jnp
shlb
sbb
rcrl
fstpl
add
shrb
cmp
jg
test
je
jle
mov
pop
repnz
loopne
mov
jle
data16
mov
cmp
jp
imul
jl
and
orl
mov
clc
jno
jl
rcll
add
fs
stos
lds
xchg
pop
fsubrl
pop
xor
cld
scas
icebp
arpl
xchg
pushf
aas
lcall
sbb
lock
cmp
mov
dec
pop
out
xchg
sub
out
and
fidivl
das
xor
push
lods
movb
fwait
movups
movsb
shl
xchg
lds
jb
loopne
repz
mov
xchg
ss
mov
xor
and
leave
lods
push
jmp
pusha
test
rorb
xor
add
mov
mov
adc
xchg
push
sarb
jge
loope
cltd
push
sub
push
jge
lods
in
out
sub
insb
mov
sbbb
rorb
pushf
pop
xchg
mov
ljmp
xchg
mov
shlb
imul
loop
push
and
sub
mov
ss
pop
and
pop
push
mov
jb
lods
jp
in
ret
xchg
xor
xchg
mov
pop
jb
jne
dec
and
movl
push
test
mov
push
nop
loop
shrb
int
call
fnsave
pop
and
call
jl
test
out
insl
inc
dec
insl
leave
rclb
imul
loope
sahf
lock
aaa
push
cmpsb
outsb
adc
push
std
mov
iret
sub
lds
jbe
adc
pop
sbb
push
xchg
add
xor
inc
inc
adc
rcrl
push
test
in
sub
inc
les
lret
mov
xlat
and
repz
jg
lret
mov
dec
hlt
into
sbb
push
sub
mov
mov
mov
and
lds
add
pop
jmp
lods
and
xchg
xchg
jge
mov
pop
cli
test
pop
mov
jl
sub
scas
dec
jo
ss
xor
push
xchg
xchg
fcmovnbe
outsl
xor
dec
or
inc
hlt
ja
mov
xor
sbb
iret
lret
xchg
add
cmp
leave
dec
cmp
lds
mov
or
popa
out
out
adc
aaa
int
push
xor
xor
rcrl
mov
mov
mov
ds
fcompl
ss
iret
mov
mov
enter
mov
or
and
adcb
mov
dec
sbb
mov
and
daa
sub
inc
jl
in
push
xchg
ret
sti
mov
mov
ljmp
popf
stc
test
push
cmp
in
cmpsb
cwtl
and
dec
iret
cmp
shlb
push
in
jo
sbb
xchg
bound
ds
fsubrl
sub
adc
inc
test
jns
je
mov
mov
call
test
and
xchg
sahf
cwtl
jmp
lret
daa
in
outsl
mov
and
and
bound
mull
nop
mov
xchg
pop
xchg
adc
lods
mov
aam
fcmovbe
push
orb
xchg
sub
push
pop
pop
pusha
mov
faddl
sub
sti
call
vcvtsd2ss
imul
mov
loop
sbb
test
xor
jnp
jg
adc
loop
and
loopne
lea
arpl
lds
sbb
int3
push
inc
push
lahf
push
pop
test
leave
call
sub
cltd
jp
mov
ret
movsl
adc
je
xor
mov
add
rolb
or
lea
insl
add
inc
shll
sub
stos
xlat
stc
and
sbb
cmp
lret
rclb
test
jne
sbb
jno
adc
clc
xchg
pop
sub
test
insl
jecxz
call
adc
jnp
cmpsl
out
popf
stc
outsl
fildll
insb
aam
add
add
jl
or
pop
mov
add
imul
mov
jns
shl
cmp
pop
repnz
or
cmp
mov
ret
fimuls
jl
insb
and
xor
in
iret
enter
and
out
dec
bound
xchg
aas
sahf
xchg
mov
or
mov
sub
fsts
into
subl
push
jne
test
bound
xchg
sub
sahf
push
and
pop
push
jp
mov
inc
push
sbb
cmp
push
jno
and
andl
adc
cwtl
jle
xchg
mov
sub
in
sbb
fcompl
pop
cld
mov
popa
inc
popa
movsb
push
cmc
jl
or
pop
ret
xchg
inc
test
inc
cmp
xor
jp
push
mov
enter
jo
xchg
scas
push
xchg
ret
mov
push
stc
imul
lds
test
fldcw
cli
xlat
xchg
outsb
rorl
pop
mov
movsb
decl
fstpl
je
aad
xor
js
xchg
lods
lahf
ss
mov
data16
mov
sti
mov
lods
aaa
jmp
jge
dec
cs
in
xor
in
pop
jl
mov
sub
jmp
jns
inc
aad
sahf
cmp
xchg
pop
scas
incb
cmpsb
push
push
mov
mov
dec
je
mov
scas
cwtl
stos
xchg
mov
pop
or
testl
jg
add
adc
mov
lods
lods
sarl
dec
ja
push
xor
cli
pushf
cs
xchg
stc
mov
ljmp
adc
cmp
sarl
xchg
or
mov
mov
lcall
mov
adc
pop
test
in
ja
push
push
mov
cmpsl
xchg
push
xchg
xorb
push
mov
test
push
into
mov
stos
pop
jns
js
xor
jns
lret
jp
cmp
std
dec
hlt
out
adc
imul
pop
arpl
jp
inc
sbb
ret
outsl
aas
jb
out
fs
mov
ret
popa
cmp
call
fsubs
cwtl
lea
out
and
inc
outsb
inc
add
push
cmpsb
loope
cmp
adc
cmpsl
mov
clflush
add
out
xor
test
xchg
repnz
dec
sbb
lahf
call
xchg
addr16
std
fdivrs
lods
fsubrs
out
ds
push
fwait
xchg
ret
cmp
test
or
jecxz
icebp
pop
les
push
and
adc
xchg
mov
ds
xchg
lcall
cmp
not
les
scas
scas
fsubs
insb
pop
inc
mov
js
cwtl
iret
pop
int
orl
popa
loopne
jmp
out
mov
and
in
cmp
int3
out
add
test
adc
ret
and
push
mov
sbbl
mov
test
pop
mov
filds
fildl
mov
pop
mov
fildll
inc
inc
xor
cmpsl
dec
iret
push
or
xlat
ja
aam
stos
es
dec
dec
pop
jle
mov
sti
das
push
push
sbb
outsl
ret
mov
xchg
in
aas
shlb
mov
dec
leave
jl
xchg
mov
jmp
or
xchg
sub
dec
mov
mov
jecxz
or
cltd
inc
inc
mov
cmp
xor
inc
aas
incl
aaa
sbb
or
loope
lock
xor
xchg
outsl
sub
sub
inc
ja
jne
std
inc
xchg
xchg
pop
cltd
ret
fistps
dec
pop
push
sub
outsl
pop
scas
inc
push
repnz
cltd
stos
scas
push
lods
push
filds
stc
sub
mov
jns
jge
imul
jmp
pop
mov
or
mov
mov
inc
loopne
xchg
lret
pop
in
icebp
inc
push
test
mov
cmpsl
push
inc
call
jnp
mov
addr16
xor
xchg
fbstp
pop
adc
jb
inc
out
add
fsubl
int3
call
push
in
fcmovnbe
out
bswap
xor
lock
std
inc
add
jle
fwait
sub
dec
dec
mov
inc
fimull
repnz
call
ret
out
insb
mov
das
mov
insl
call
push
call
in
outsl
daa
ds
cmp
pop
out
enter
adc
nop
int
dec
out
insl
xor
test
xchg
mov
adc
adc
decb
xchg
add
or
stc
adc
repz
movsb
xor
push
je
scas
aaa
push
aad
mov
jecxz
push
push
rorb
lea
inc
add
into
outsl
shl
push
mov
mov
mov
sub
stc
mov
adc
lods
jns
ljmp
iret
xchg
ffreep
out
or
mov
push
outsb
das
icebp
ret
fstl
mov
icebp
jp
sub
pop
xchg
add
xorl
mov
xchg
sub
inc
mov
imull
outsb
cmp
and
repz
sbb
lods
mov
cmp
test
ja
jnp
iret
lahf
in
fdivrs
xor
lock
popf
lods
cmp
jg
jge
mov
push
push
fistpl
int3
sar
mulb
xor
or
out
push
jno
push
fisubl
xor
and
add
lds
push
xchg
adc
xor
movsb
mov
or
fldl
fildl
and
imul
jbe
int3
xor
xchg
and
cmp
imul
sbb
les
mov
mov
fidivs
inc
ffree
mov
test
and
ret
ret
loopne
iret
jmp
add
int
lcall
ficoml
loope
negb
sahf
xlat
into
sub
cld
movsl
test
jb
imulb
aaa
or
pop
clc
add
in
mov
ss
mov
aaa
call
and
psadbw
aas
inc
test
mov
outsb
aad
xor
adc
sbb
pop
stos
or
xchg
aaa
fucomip
adc
cld
or
push
ss
jae
iret
jp
sahf
cs
xor
add
dec
nop
addr16
outsb
xlat
push
xor
lcall
in
add
jne
sbb
cmc
outsb
jnp
xor
movb
xchg
sbb
dec
mov
jg
pop
and
add
scas
call
pushl
inc
pop
in
test
lret
sbb
sub
cmp
push
into
xchg
add
insl
mov
movsl
xchg
in
outsl
ret
into
or
lea
cmp
in
xor
rcrl
pop
push
jns
and
daa
mov
jmp
pop
fdivs
or
test
in
out
and
jo
in
ror
fdivrs
out
loope
jl
or
sbb
mov
sub
insl
in
sti
test
or
test
jge
ret
or
push
mov
mov
lds
rol
add
popf
je
xchg
pop
sti
fxtract
sti
pop
or
dec
pop
roll
pop
or
stos
pop
xor
shrb
push
loopne
aad
or
jae
es
fcoms
pop
inc
mov
sub
dec
push
jmp
pop
add
and
leave
fs
leave
xor
push
jbe
pop
jmp
pop
stos
push
in
ret
repz
mov
testb
cmp
pop
xchg
add
pop
ja
sarb
push
push
push
pop
cmp
xlat
out
and
outsl
scas
outsb
out
mov
inc
add
mov
push
lret
xor
sbb
mov
mov
out
dec
mov
xor
mov
push
push
shr
inc
cs
adc
cmp
xchg
mov
fcoml
aam
mov
adc
ss
push
xor
xchg
pop
out
push
scas
ja
in
lret
inc
mov
int
sub
outsl
add
inc
idivl
rorb
push
lret
push
adcb
adc
cld
into
ljmp
xlat
push
rcrb
dec
jbe
xor
jae
addr16
jne
cmpsb
les
mov
xlat
lretw
mov
xor
test
mov
fcmovnbe
sbb
leave
outsb
inc
jl
inc
int
sbb
nop
xchg
adc
cmc
jmp
cmpsl
iret
sub
and
out
mov
loopne
lods
sub
jmp
adc
es
pop
sub
mov
xor
stc
in
xchg
outsb
xchg
std
notl
mov
repz
xchg
std
stos
scas
in
pusha
adc
mov
cmp
mov
adcb
sub
sub
push
xchg
pop
rclb
xchg
pop
fdivr
pop
sahf
pop
lret
xchg
or
mov
data16
xor
cmpsl
in
pop
and
pop
stos
lret
icebp
mov
lret
dec
ljmp
call
mov
ljmp
mov
mov
jg
dec
lret
push
add
inc
inc
scas
clc
cmpl
insl
xchg
aas
loope
jmp
stos
xchg
push
in
push
mov
add
pop
push
xor
mov
lea
ljmp
mov
mov
xchg
pusha
jnp
and
pop
xor
out
inc
lock
fwait
scas
push
push
xor
adc
sahf
stc
mov
mov
and
mov
mov
daa
insl
aad
test
scas
inc
sub
sbb
enter
insl
add
enter
sub
inc
imul
divl
lds
sub
sub
subl
dec
test
mov
xor
lods
adc
int
mov
insb
mov
rorl
movsb
push
hlt
add
decb
mov
push
sbb
dec
mov
and
daa
and
cs
cmp
inc
lea
cmp
pop
fwait
std
pop
and
mov
aas
orb
inc
inc
aas
push
shrl
test
adc
sti
es
mov
call
out
mov
inc
fnstcw
les
imul
ret
cld
and
xor
and
and
sti
repz
sbb
lahf
push
inc
add
shll
lods
cmp
out
dec
outsb
hlt
addr16
loop
lcall
push
mov
shlb
sub
and
test
scas
add
leave
mov
jmp
out
jne
out
cmp
push
lret
pop
xor
jge
mov
mov
sti
lahf
and
inc
mov
push
out
pusha
lret
outsl
push
cmpsb
out
test
dec
adc
inc
pop
idivl
add
outsb
movsl
cmp
sub
mov
add
jne
notb
and
mov
andb
pop
movsl
into
scas
sbb
out
add
or
push
dec
dec
mov
lahf
es
xchg
mov
les
add
or
fcomip
shl
cld
add
push
or
loop
or
repz
adc
rcll
faddl
imul
loopne
xor
push
mov
daa
mov
fnsave
lahf
push
sbb
repnz
inc
loope
xor
call
icebp
dec
sbb
pop
push
lahf
notb
xchg
shrb
cli
xlat
in
add
dec
cmp
xchg
mov
data16
int3
mov
insb
cmpsl
mov
cmp
mov
push
inc
fcompl
mov
mov
jg
mov
lock
xchg
dec
cmp
add
add
inc
xor
subl
movsl
xlat
inc
xchg
dec
sub
adc
jne
push
and
add
pop
pop
pop
mov
pop
mov
movb
pusha
nop
mov
jp
cmpsb
or
pop
es
arpl
mov
loopne
das
fistps
adc
into
pop
mov
nop
inc
xchg
cs
xchg
add
lret
icebp
clc
dec
lods
pop
jns
dec
mov
addr16
xchg
cld
rcl
cmp
add
or
cmp
pusha
jl
dec
scas
subl
and
insl
sub
into
test
push
sub
jne
lret
jmp
stc
bnd
aas
pop
inc
mov
fcompl
inc
mov
jne
mov
inc
es
sbb
dec
xchg
push
in
psrad
xchg
inc
fiadds
push
out
in
fsubr
xor
jmp
jnp
pusha
mov
adc
mov
inc
out
pop
repz
lret
dec
sub
mov
divl
mov
mov
mov
pop
or
sub
xor
sub
mov
outsl
pop
sahf
inc
jp
inc
and
ds
fsub
xchg
xlat
bound
inc
lret
ljmp
sub
test
inc
ret
mov
adc
ficomps
dec
lods
aaa
fldz
outsb
inc
pop
xchg
xchg
iret
add
scas
lahf
in
dec
out
fidivl
xchg
inc
inc
pop
js
dec
mov
gs
dec
sub
lsl
mov
rclb
mov
mov
out
and
xchg
lea
ss
sar
je
xchg
movsl
mov
jae
and
xor
jecxz
inc
test
int
push
jmp
hlt
jne
stos
mov
or
jmp
mov
loopne
dec
xchg
andb
jmp
and
fsubs
cltd
pop
adcl
push
sub
jnp
jns
inc
jmp
or
xor
aaa
xchg
push
pusha
xor
xchg
enter
mov
test
mov
insb
loop
jle
mov
fiaddl
and
inc
frstor
add
lods
pop
push
in
jnp
incb
cld
adc
lahf
js
mov
int
stos
jbe
rcr
lahf
xchg
jbe
cltd
jge
cmp
fstps
mov
cmpsb
ret
daa
stos
sbb
aam
mov
rcrb
outsl
shlb
insb
rcl
pop
push
aas
or
fiaddl
sub
push
dec
fsubr
dec
daa
xchg
test
push
xchg
fnsave
inc
adc
sti
fs
sub
ret
stos
outsb
sub
dec
insb
popf
dec
push
pop
outsb
gs
jb
inc
clc
dec
test
push
mov
mov
shlb
mov
add
testl
sbb
jg
das
inc
jne
adc
dec
and
dec
ret
adc
arpl
lret
ss
dec
push
mov
out
imul
out
push
mov
lds
decb
inc
pop
stc
sbb
mov
imul
ljmp
ljmp
aam
ss
xlat
cli
cmpsl
pop
scas
sbb
hlt
les
cwtl
mov
pop
or
addr16
add
or
ss
push
out
pushf
shrl
lahf
bnd
mov
mov
test
or
insl
pusha
add
mov
outsl
daa
les
push
push
jb
xchg
iret
xor
mov
push
push
cmpsl
mov
mov
xchg
rolb
iret
push
movsl
std
jl
sarb
stc
into
mov
mov
rcrl
cmp
icebp
or
shr
dec
pop
lock
lods
mov
leave
ds
jl
add
push
ss
sub
sbb
inc
test
xor
and
enter
mov
mov
add
mov
and
jae
out
sbb
clc
test
dec
push
sti
dec
test
cmpsl
sbb
das
xchg
dec
popf
inc
inc
fbstp
sbb
push
xor
sbbl
arpl
sub
fists
lock
lods
inc
dec
cli
inc
rcrb
push
jb
mov
pop
nop
mov
mov
sub
adc
orl
mov
popa
push
movsl
cs
arpl
push
lods
cmp
pop
mov
dec
xchg
adcb
outsl
loop
or
test
hlt
pop
imul
jo
mov
mov
test
xor
dec
dec
stos
inc
sub
cmp
mov
cmpsb
jp
pop
mov
sub
mov
pop
dec
sbb
cmp
outsb
sbb
and
push
jge
mov
dec
push
dec
jo
jnp
cltd
pop
mov
ja
xchg
imul
daa
ljmp
xor
sub
push
testl
xchg
xchg
mov
mov
sti
movsb
mov
bound
sub
pop
fwait
daa
in
jns
cmp
add
cs
dec
pop
mov
pop
sub
andl
push
imul
adc
ja
mov
xor
fdivs
xlat
mov
leave
jl
sbb
fistl
cli
dec
fstl
pop
fsts
mov
es
sbb
sub
in
in
test
inc
clc
ds
loopne
sbb
cmc
adc
into
lods
adcb
call
movsl
sub
push
lods
ret
in
xlat
add
jle
jg
jge
cltd
daa
inc
xor
imul
jmp
xor
cmp
jmp
roll
mov
or
cltd
mov
jle
je
cltd
jle
pusha
sahf
sbb
roll
cmpsl
sub
les
jbe
push
adc
stos
add
mov
mov
arpl
call
into
mov
xlat
cmpl
lods
outsl
mov
dec
cs
fsubrl
jb
les
hlt
decb
xchg
push
shlb
lea
shlb
das
out
ss
push
mov
dec
loope
adc
cltd
xchg
sbb
mov
out
mov
and
out
sbb
mov
test
mov
arpl
xchg
xchg
shl
push
jb
sub
in
lcall
sbb
cs
sti
sbb
jbe
cltd
cmp
and
adcl
rcrb
jge
add
mov
xor
cmp
arpl
push
cmp
andl
ret
sbb
dec
jae
arpl
dec
out
loope
xchg
call
or
cmp
out
pop
lods
cwtl
ret
jnp
adc
add
inc
stos
dec
and
add
test
inc
aam
sti
mov
in
aaa
sarl
push
cltd
call
hlt
sbb
pop
in
aad
ss
pop
jp
leave
fldenv
xor
in
inc
es
mov
cmp
movsb
add
mov
sub
xor
jnp
cwtl
mov
nop
ljmp
jne
xchg
out
popa
xchg
es
mov
push
out
cld
inc
ret
into
int3
adc
mov
push
mov
sahf
mov
jge
inc
or
aad
scas
push
and
dec
mov
lret
pop
mov
insl
pop
cmp
cmpsb
jl
adc
cmp
mov
gs
imul
sub
int3
push
stos
stc
push
cs
dec
dec
dec
rcll
cmp
push
dec
sahf
popf
sub
xchg
and
arpl
movsl
and
fsubrl
xchg
xor
push
fwait
pop
cli
cltd
mov
jb
outsl
rorl
mov
add
fnsave
dec
jge
outsl
ret
mov
icebp
aaa
xchg
stos
inc
or
insb
movsl
cltd
in
mov
jno
int
xor
std
in
jge
adc
jp
mov
xchg
xchg
mov
cmp
and
adc
mov
or
adc
pop
push
testl
dec
mov
mov
repnz
jae
xchg
popf
hlt
mov
lcall
mov
cltd
adc
cltd
test
pop
sub
pextrw
xor
js
lcall
adc
inc
clc
pop
mov
test
das
outsl
push
pop
push
test
loopne
ja
in
icebp
xchg
xchg
ret
sub
addr16
xor
fimuls
inc
fsubrp
repz
xor
or
mov
mov
test
push
cmpsl
cmp
ds
and
int3
push
shl
and
insl
xor
and
cmc
push
mov
adc
add
dec
js
mov
add
sub
lods
mov
push
inc
mov
ds
cs
sbb
dec
sub
pop
hlt
xchg
or
jle
xor
jne
and
clc
xchg
add
jl
push
jno
lcall
pop
mov
loopne
cmp
xchg
dec
jg
mov
pop
push
mov
mov
mov
adc
test
ja
sbb
das
loopne
ss
mov
je
mov
xchg
lret
clc
je
adc
push
mov
ret
out
dec
inc
mov
rcrl
mov
jp
dec
cmp
adc
fmul
and
add
dec
mov
ret
shrl
imul
mov
cmp
in
xchg
fsubs
xchg
and
lahf
mov
int
scas
xchg
xor
out
stc
mov
adc
push
jno
push
test
dec
imul
dec
pop
dec
ret
jg
mul
ja
stos
aaa
push
fstpt
fld
adc
aas
sub
jmp
dec
dec
test
mov
jg
pop
iret
cmp
lcall
pusha
les
jmp
add
out
rclb
or
inc
hlt
dec
xlat
mov
in
aad
mov
fsubl
addb
dec
out
cmp
xchg
fidivrs
inc
lea
nop
xchg
lods
cld
ret
in
lock
sub
push
scas
xor
enter
mov
fs
in
push
push
lods
rcll
add
mov
jae
mov
sbb
iret
aas
gs
aad
fdivrl
lcall
rclb
sarl
pop
fmuls
adc
inc
fbld
mov
idiv
fidivl
and
negl
cmp
push
xchg
and
sub
test
cmpsl
push
shrl
fmulp
cltd
dec
loope
mov
pop
test
xchg
push
fs
scas
mov
mov
iret
push
xchg
or
mov
imul
mov
ss
cli
mov
aaa
fcomip
jb
pop
out
add
fucomp
inc
mov
inc
sbb
mov
rorl
xchg
mov
les
cmpsl
gs
subb
mov
add
sbbl
pop
inc
repnz
aas
push
mov
shll
mov
and
pop
cmc
movsb
inc
and
pushf
jno
cmp
pop
stos
mov
mov
lret
inc
js
ja
pop
call
xchg
pop
jae
movsb
pop
enter
add
cld
arpl
shlb
aam
aad
stc
scas
mulb
cmpsb
cmc
out
call
sahf
push
outsb
jp
int
and
cld
mov
repnz
loope
call
sbb
ja
xorl
pop
mov
xor
leave
loopne
imul
iret
pop
mov
and
fnstenv
sub
jo
clc
sahf
jge
call
and
pushf
and
ficomps
jle
xrstors
dec
pop
repz
lock
dec
repz
fs
add
lods
xchg
pusha
int3
adc
sbb
in
push
mov
mov
lcall
scas
xchg
pop
mov
ljmp
xor
sti
jbe
mov
xor
jno
mov
adc
xchg
ret
dec
pop
shlb
push
mov
orb
bound
clc
pop
adc
lods
mov
das
loopne
cwtl
test
int3
inc
repnz
sbb
aad
jno
add
test
xlat
imul
insl
push
xor
push
mov
test
popa
out
xchg
ret
sti
xchg
pusha
add
sbb
in
gs
mov
jp
jg
jb
adc
sahf
dec
and
int3
lret
sbb
in
mov
shll
jnp
lods
sbb
or
scas
mov
btc
lock
cmp
mov
xor
jo
pop
xchg
insl
cmp
shlb
imull
leave
repz
or
in
inc
movl
int
or
loopne
jle
mov
xchg
xchg
push
aas
add
dec
xchg
push
ret
sbb
aaa
enter
mov
popa
push
rcr
xor
stos
sahf
xor
mov
add
sub
das
jle
xor
repz
scas
cmpsb
adc
daa
dec
or
sub
xor
xchg
mov
cmpsb
jmp
cvtps2pd
jl
cltd
jmp
dec
mov
adc
xor
sub
dec
fdivrs
fsubrs
sbb
pop
mov
mull
sbb
mov
int3
mov
fldt
aaa
or
jne
mov
xchg
add
psllq
dec
mov
cltd
add
lret
pop
pop
les
imulb
pushf
addr16
ljmp
push
mov
add
xchg
xor
xchg
jo
lock
fisttps
fcoms
fdivrl
or
mov
lea
dec
out
mov
stos
cmp
xchg
adc
hlt
je
mov
call
xor
leave
xor
xor
scas
imul
stos
or
lret
into
scas
xor
jnp
loope
nop
xor
mov
mov
lock
add
flds
mov
not
jnp
xor
xor
fldl
std
adc
lea
arpl
cs
pusha
popf
sub
push
or
test
icebp
je
inc
fmuls
andb
xor
inc
push
push
test
pop
int
xchg
jb
xlat
cmp
mov
out
adc
cmp
cli
arpl
xor
sbb
or
stos
mov
lret
mov
loopne
fstps
cmp
cmp
mov
lret
clc
sahf
mov
mov
lcall
lds
pop
icebp
sbbb
push
jl
xchg
cmp
stos
jge
jbe
and
int3
out
popa
cmp
mov
push
stos
cmp
or
mov
fcoms
xor
pop
add
orl
pop
fmull
xlat
inc
aas
or
imul
jne
add
mov
aaa
es
xorl
pop
out
or
jle
adc
negl
mov
or
fcomps
push
jmp
mov
jb
mov
andl
xchg
xchg
add
add
rclb
push
in
mov
adc
pop
scas
das
cmp
aam
cli
sbb
add
aas
clc
clc
adc
popa
pop
imul
in
push
xor
sbb
popf
mov
sbb
and
push
aas
push
je
and
mov
dec
sub
jle
jae
jge
mov
inc
sbb
sti
hlt
je
test
jo
xor
jae
jb
mov
cmp
xor
lock
dec
aam
sub
cmp
jbe
push
push
add
leave
test
scas
rorl
test
jle
fsubr
lcall
subb
lods
rep
int3
popa
mov
xchg
push
mov
sub
mov
movsl
xchg
cmpsb
cmp
or
aas
push
dec
push
das
mov
inc
jecxz
rorb
push
xchg
inc
cltd
mov
cmp
dec
bound
shll
rcl
jle
add
fwait
in
mov
out
dec
out
inc
test
mov
insl
loopne
pop
lahf
or
or
mov
test
pop
pop
outsl
add
sub
lret
push
aad
push
mov
ljmp
jbe
fwait
inc
cmc
dec
mov
dec
in
aam
jge
inc
insb
call
ja
adcl
bound
sub
add
enter
xor
cmp
jg
cmp
xchg
lea
or
inc
cmpl
mov
cmpsl
out
pop
push
mov
mov
and
sub
xor
addr16
imulb
pushf
lods
jmp
pop
xlat
movsb
adc
aaa
cmp
scas
cltd
stos
mov
cld
sub
inc
xlat
jg
pop
fdivl
incl
incl
insb
out
jns
repnz
fcmovb
sub
sbb
cld
sbb
outsb
sub
cmp
push
jl
lcall
sbb
js
mov
sub
pop
sbb
mov
inc
or
push
mov
js
xorl
lret
cld
ret
or
sbb
enter
pop
roll
repnz
andl
insb
bound
test
or
mov
fucomip
jnp
sar
rclb
rcll
jne
outsb
adc
pop
adc
dec
js
cmpsb
arpl
sub
pop
jecxz
jne
push
add
rclb
xor
push
lock
ds
jne
mov
sub
xor
fwait
aad
cld
lcall
bswap
or
lret
gs
test
test
and
xchg
mov
into
pop
call
or
inc
mov
xchg
aaa
dec
pusha
jle
mov
jge
dec
movsl
cltd
lock
push
sub
je
dec
sub
pop
ljmp
jecxz
pop
test
cmp
out
inc
add
inc
loop
dec
and
add
mov
popa
xor
sub
sbbb
add
test
xchg
mov
loopne
in
ficomps
test
imul
jecxz
cmc
sbb
out
icebp
out
mov
int
mov
testl
adc
pusha
push
sub
inc
push
mov
cmp
repnz
insb
xor
arpl
mov
push
push
subl
gs
faddl
insl
jne
sub
push
dec
orl
sbb
or
push
incb
xchg
xor
adc
mov
mov
dec
loop
stc
mov
aam
or
out
mov
lods
mov
dec
stos
jbe
test
dec
jl
insb
cmp
sbb
inc
pop
hlt
cmp
sbb
lods
adc
xor
cltd
jae
pop
psadbw
sub
sub
adc
ret
loop
outsb
test
scas
mov
rol
in
sbb
rcrb
hlt
pop
pop
mov
ja
sub
sub
gs
and
cmpsl
out
dec
xor
lods
call
loop
insb
sub
adc
mov
inc
mov
cltd
std
pop
dec
cmpsb
jg
fstpl
mov
xor
pop
mov
fildl
test
mov
jne
out
imul
dec
sbb
mov
or
in
ss
sub
out
sub
cmp
gs
lcall
jecxz
clc
push
push
jae
mov
ja
mov
je
pop
in
and
cmp
pop
ja
stos
cltd
insb
mov
out
cltd
jae
mov
xor
cwtl
xchg
shr
adc
jge
cvtps2pd
jne
test
jg
xor
addr16
test
stc
stos
pusha
add
xor
fiadds
xchg
mov
aas
xchg
int
mov
cmp
sarl
xchg
scas
xchg
lds
jge
jae
dec
xchg
popa
jmp
mov
or
sub
cltd
sahf
sbb
ja
cmp
pop
xchg
xchg
lds
cmp
stos
std
jecxz
mov
pop
add
loop
ja
popf
dec
cmc
ljmp
out
fxch
adc
notb
lods
pop
mov
shll
in
std
mov
mov
fadd
loopne
loop
dec
sbb
add
rcl
mov
js
popf
inc
xor
incb
mov
jo
mov
mov
jle
dec
adc
xchg
push
xor
push
nop
jp
popa
negl
testb
jle
icebp
movsb
hlt
sbb
rcrl
sbb
ss
add
sbb
int3
pop
mov
repz
das
rolb
cld
push
cmpsb
inc
jmp
add
mov
inc
ljmp
cmp
loope
xchg
rorb
push
xor
or
jb
inc
int3
jmp
rolb
sbb
test
sbb
mov
popf
xor
push
out
js
adc
push
lock
out
in
mov
pop
shrl
add
dec
lods
mov
pop
arpl
xchg
jnp
jno
rclb
pop
bound
test
enter
es
fistps
mov
scas
fldt
mov
les
jge
sbb
jae,pn
add
inc
leave
cmpsl
jno
pop
fistps
enter
bnd
shrl
scas
sub
jmp
pop
adc
jmp
mov
xor
iret
push
stos
out
hlt
aas
test
pusha
nopl
ds
es
mov
shrl
arpl
push
jnp
repz
push
lret
mov
cmp
inc
inc
data16
xor
xor
enter
adc
addr16
shlb
adc
out
cmp
rol
in
sub
out
push
xor
mov
enter
jp
int3
arpl
and
rcrl
xorl
mov
aam
je
mov
lret
dec
pop
dec
ja
aaa
pop
and
or
sbb
xchg
jns
out
addr16
sbb
add
test
dec
and
jl
inc
xlat
push
inc
jecxz
filds
jbe
sub
fcomip
inc
fldl2t
ja
data16
cmp
stos
aas
push
inc
repz
jmp
jecxz
in
inc
mov
and
pop
push
cmc
xchg
out
scas
inc
mov
sbb
xlat
outsb
inc
mov
cmc
cmp
jmp
and
cltd
test
mov
ret
stos
pusha
mov
in
and
mov
push
stos
cli
and
leave
loop
pop
jne
inc
aam
jne
jae
inc
iret
jne
xor
or
mov
std
flds
test
hlt
sbb
call
seta
dec
test
mov
push
adc
popf
das
fwait
push
mull
adc
cmp
mov
sub
nop
fwait
mov
or
movsb
lds
sub
dec
push
and
or
shrl
dec
jmp
sbb
pop
sub
jo
sbb
mov
insb
sbb
xchg
loope
lods
pop
mov
sub
push
mov
pop
test
xchg
in
pop
sub
or
loopne
dec
sbb
xor
cmpsl
cmc
xchg
adc
and
jl
rol
xchg
sub
fwait
jmp
rcl
and
pop
dec
orb
subl
add
xchg
pop
inc
sub
insl
push
inc
add
cmp
out
pop
pop
lret
lret
ret
mov
into
neg
jne
mov
mov
in
lea
dec
icebp
das
mov
add
stos
rcrl
std
inc
pop
aaa
gs
add
popa
cld
gs
push
cli
or
sub
call
mov
popf
mov
clc
jmp
jns
lahf
test
jmp
ljmp
stos
testb
loopne
shll
daa
mov
inc
pusha
pop
test
iret
xor
addr16
sbb
call
sbb
sbb
outsl
jnp
push
mov
add
jbe
jecxz
lods
dec
cmp
jnp
aam
mov
out
les
mov
add
push
jno
andl
xor
inc
adc
sub
int
add
out
rorl
or
mov
or
loopne
sub
mov
jmp
adc
mov
jl
mov
jp
mov
sub
inc
test
push
fwait
sti
cltd
or
pop
cmp
dec
sahf
pop
outsl
loop
call
pop
and
mov
adc
out
fwait
inc
push
cwtl
aas
inc
inc
sbb
arpl
clc
fcompl
mov
fwait
gs
inc
inc
dec
pop
jne
mov
negl
out
sbb
mov
adc
in
mov
xor
mov
xor
dec
cmp
sub
xor
jmp
out
int3
aas
shlb
add
jo
rcl
insl
jmp
mov
int
ja
cmp
mov
ret
xorl
into
xor
sbb
push
js
xchg
or
mov
sub
push
aas
adc
pop
sub
popa
cld
pop
call
lcall
sbb
mov
pop
out
enter
cltd
cmp
lret
iret
sub
xchg
pop
sar
push
xlat
or
pop
xchg
bound
flds
cmpsl
adc
dec
fdivrl
and
notb
cmc
popa
sub
xchg
outsl
push
xor
mov
xor
jge
fdivrs
cmp
adc
fwait
rcl
hlt
pop
adc
pop
and
dec
shll
or
cmp
in
imul
inc
scas
jle
push
data16
adc
jg
pushf
scas
mov
jne
adc
adc
lret
aam
jb
stc
and
sub
sub
inc
fs
sbb
lea
add
aam
push
cmc
jle
mov
xchg
sbb
mov
nop
xor
or
movsb
jns
jecxz
push
jmp
or
cltd
inc
pop
jmp
mov
test
rcrl
sub
pop
fistl
push
js
cltd
jecxz
in
mov
cmp
jmp
xor
mov
pop
shlb
mov
push
and
sbb
jo
cmp
roll
fcmovu
jb
cmc
and
and
insl
enter
subl
sbb
out
dec
mov
xchg
popf
or
add
test
jns
cli
jo
or
sub
dec
fdivr
shl
mov
xor
fiaddl
out
xchg
dec
int3
mov
xchg
and
mov
add
daa
ret
jbe
out
clc
dec
sbb
mov
imul
scas
lock
sub
shr
popa
push
push
xchg
ret
in
insl
xchg
dec
fists
iret
mov
push
scas
add
test
loop
stc
pmaxsw
ds
push
sub
mov
push
bnd
ret
loope
popa
push
out
outsl
inc
divl
mov
cmp
xor
int3
pusha
pop
mov
pop
add
and
jp
mov
xchg
adc
loope
xchg
sub
fnstcw
xchg
sbb
mov
mov
jne
out
adc
insb
ja
imul
mov
call
dec
push
mov
xchg
repz
lds
rcll
sbb
lods
pop
sbb
test
or
ret
jmp
xor
sarl
ja
and
xor
add
jb
xchg
clc
popa
in
stos
rcrl
push
popf
out
iret
dec
sbb
push
imul
dec
pushf
cmp
jl
test
dec
push
lds
adc
das
and
sub
and
lds
pop
push
mov
add
adc
sbb
and
lods
outsl
mov
in
sub
cmp
cwtl
jle
das
shlb
fnstenv
loope
andl
jge
mov
xchg
rorl
inc
xor
cmp
mov
adc
push
orl
mov
dec
push
push
scas
lret
aam
jno
xchg
xchg
jecxz
push
jo
xor
jo
xchg
mov
imul
pop
pop
adc
in
or
dec
jmp
into
inc
xlat
sbb
out
or
jmp
std
jo
hlt
mov
in
out
test
cmp
pop
xchg
mov
les
insl
mov
xchg
sbb
rcrb
mov
or
aad
mov
pop
testb
sub
test
mov
test
or
fmulp
ficoms
movsl
addb
add
loop
dec
xchg
xor
out
push
mov
or
adc
push
lods
cmp
mov
sub
movsb
jo
push
stos
rcrl
lods
in
adc
cmp
lret
sub
pop
cmp
mov
jnp
sbb
movsl
test
xlat
pop
loope
or
movsb
stos
dec
fs
jns
mov
fdivs
push
cli
push
lret
jbe
jbe
scas
mull
loope
adc
and
add
stc
in
xor
lds
cmp
sbb
es
pop
clc
loope
jnp
shlb
pop
incb
data16
pop
or
inc
fsts
ss
add
cltd
and
popa
push
in
shr
xor
or
pop
add
mov
sarb
test
enter
kandb
xor
pushf
mov
dec
adc
sub
outsl
and
mov
idivl
sub
cmp
cmp
fidivrs
xor
push
outsb
clc
fdivl
or
out
dec
jnp
fbld
insb
mov
std
lods
cmp
jecxz
cs
pop
clc
test
clc
push
cmp
xlat
xchg
fmull
test
and
push
mov
movsl
cs
xchg
sub
scas
inc
popa
sub
fstpt
or
inc
call
or
xchg
fnstcw
cmp
into
in
add
sub
std
jnp
repz
movl
push
into
sub
addr16
ffreep
mov
loop
clc
lds
xlat
push
outsl
ss
mov
fnstenv
pop
push
jno
mov
leave
ja
lret
jp
add
mov
cmp
enter
pop
ljmp
cmpsl
and
jge
and
add
or
aam
xor
stos
fwait
pop
ret
sbb
rcr
sbb
xchg
and
cmp
push
rep
js
pop
jae
adc
sbb
cltd
das
pop
mov
jae
ret
addr16
and
mov
in
pusha
mov
out
jmp
push
repnz
mov
aam
fists
stos
dec
push
adc
jle
in
call
xchg
cmpsl
push
lock
das
test
in
inc
pusha
cmc
mov
adc
pop
das
addr16
pop
mov
mov
lea
sub
insl
add
sbb
mov
stos
jno
cmp
mov
xchg
pop
xchg
push
inc
idivb
or
or
and
jns
push
sarb
clc
dec
shlb
in
push
fwait
cmp
test
ss
inc
dec
stos
mov
push
fldt
or
mov
imul
cs
pop
or
cmp
pop
xchg
mov
add
pop
or
rol
or
fidivl
ret
cmp
mov
sub
inc
dec
ljmp
shl
dec
pusha
ds
pop
mov
into
xchg
notl
mov
push
in
jmp
xchg
in
rorl
mov
es
incb
clc
xchg
or
mov
mov
cltd
in
jbe
lret
push
in
mov
lcall
or
sbb
jo
jge
xor
and
mov
push
jecxz
xchg
and
rep
cwtl
cld
or
test
xor
cltd
inc
into
int3
iret
pop
lret
outsl
mov
pop
popa
cld
lret
jnp
out
xor
lods
lea
xchg
and
daa
icebp
adc
fsubp
add
mov
and
iret
push
lcall
in
das
push
stos
xchg
or
mov
xchg
adc
xchg
xor
xchg
test
icebp
mov
lret
jbe
and
adc
cwtl
mov
nop
pop
rcrb
mov
rcrb
push
mov
xchg
in
push
sub
and
adc
inc
fisubrl
leave
cmp
hlt
dec
or
sub
or
nop
dec
pop
clc
sub
sbb
mov
test
in
add
jnp
jne
cmp
dec
ret
loop
and
insb
add
and
or
imulb
pusha
notl
out
ret
mov
cwtl
fcmovbe
hlt
mov
je
push
add
or
out
lahf
xchg
js
push
orl
mov
sbb
dec
loope
in
repz
imul
jmp
adc
mov
dec
pusha
test
bsr
out
test
stos
inc
fcmove
xchg
mov
stos
cmpb
sbb
stos
repz
stos
push
movsl
lcall
fwait
cmpsb
mov
and
adc
inc
dec
ja
inc
xchg
imul
gs
xor
xchg
and
data16
dec
inc
imul
and
cmp
nop
and
pop
icebp
cmp
mov
repz
mov
movsb
rcrl
mov
pop
test
subb
add
inc
pusha
rcll
popa
cmp
mov
and
icebp
jns
repz
insb
mov
enter
jbe
xor
rcr
add
pop
dec
lods
cmp
shrl
insb
pop
or
mov
scas
dec
mov
mov
sbb
mov
pop
int
xchg
in
bnd
arpl
insb
std
ret
dec
xchg
ret
inc
sbb
adc
je
mov
std
jle
loop
icebp
push
jl
gs
inc
mov
rol
shll
push
lock
adc
out
fsts
or
sub
sti
inc
dec
pusha
jns
nop
cs
xchg
cmpsb
inc
adc
mov
jl
push
fwait
cli
aam
mov
mov
cmpsl
push
mov
loope
push
lea
xchg
fistpll
or
mov
lret
clc
mov
dec
pop
hlt
xorb
or
popa
js
repnz
jecxz
sahf
mov
sbb
mov
cmp
pusha
shrd
sub
sbb
mov
in
sbb
push
in
cmpsb
mov
and
jp
pop
lods
mov
jl
shll
mov
fstps
mov
cmp
aaa
or
ret
mov
jmp
lock
mov
mov
dec
clc
xchg
xchg
dec
mov
xlat
rcrb
cmc
shll
dec
push
lret
in
xchg
icebp
mov
cwtl
push
cmp
sbb
iret
fisubrs
pop
outsl
or
lcall
cmp
mov
dec
pop
push
mov
je
decb
cmp
mov
sbbl
movsl
sarb
rcrl
jns
add
xlat
sub
lock
pop
jp
mov
pop
repnz
loop
xchg
lahf
xor
call
pop
lret
scas
push
jmp
loopne
cmp
aaa
push
sti
imul
ja
stos
and
sbb
pop
call
jle
jns
into
xchg
or
insl
xor
stos
mov
cmpl
adc
lods
jl
aad
and
add
push
add
int3
mov
movsl
cmp
jo
call
popf
ja
mov
adc
inc
fsubrs
js
xor
adc
in
jne
ret
stos
push
in
mov
sub
test
cmp
pop
xlat
popf
es
fucomip
aas
test
push
fdiv
andb
add
sbb
push
ss
addl
mov
insb
inc
push
adc
movsl
cmp
sbb
je
lock
push
popf
adc
out
iret
add
sbb
push
in
out
call
cwtl
xor
mov
mov
mov
pshufw
or
cmpsb
add
std
es
push
es
mov
icebp
sub
xlat
sbb
pop
or
outsb
mov
jmp
popa
nop
mov
push
dec
inc
fnstsw
lret
sub
rcll
push
cmpsl
sub
out
loop
mov
movsl
cmp
jns
loopne
notb
jg
adcb
incl
cmpb
mov
xchg
add
cltd
sub
inc
out
sarb
mov
js
push
inc
inc
loope
mov
lret
daa
xlat
cmc
mov
sub
xor
aaa
pop
je
xchg
pop
mov
push
and
call
mov
adc
out
adc
daa
stc
ss
jle
das
sub
inc
mov
dec
dec
mov
sub
out
cmpsb
adc
sub
and
xchg
mov
xchg
push
in
decb
adc
int3
scas
shrb
lret
mov
pop
aaa
pop
out
out
mov
dec
aaa
stos
push
stos
push
jb
shrl
push
adc
dec
pop
mov
xor
ja
or
pop
and
outsl
dec
push
sbb
cmc
dec
xor
xchg
addl
add
mov
in
and
jns
add
xor
lock
divl
xchg
or
add
xchg
scas
cmp
cmp
jl
jle
loop
mov
fcomip
add
pusha
pop
sbb
inc
fstl
divl
ja
loop
repz
inc
push
insl
aad
sahf
shrb
adc
cmc
mov
out
scas
pop
cltd
mov
dec
dec
loope
mov
sbb
adc
lods
rcll
add
fdivrs
aam
lret
xchg
ja
xchg
cld
std
add
outsl
lcall
pop
sub
adcb
in
or
add
push
insb
sbb
popa
xchg
xchg
fdivs
or
fidivs
sbb
dec
imul
in
push
xor
imul
pop
push
inc
add
lahf
lods
mov
fisttpl
and
and
inc
loopne
and
cmp
push
inc
rcr
adc
or
dec
bound
inc
dec
adc
pop
xor
repz
or
cs
into
test
jb
xchg
in
xchg
add
push
xchg
xlat
addr16
movsl
je
xchg
jae
push
jmp
and
aad
push
pop
pop
jg
jp
add
rcrl
xchg
add
pop
xchg
scas
and
js
sarb
jnp
jecxz
xchg
jl
sbb
jnp
jb
cmp
pusha
sub
pop
cwtl
dec
nop
rcrl
inc
dec
inc
pop
jmp
mov
cmpb
jns
dec
fildll
mov
std
add
mov
mov
and
int
sub
adc
jmp
push
stos
or
xor
sar
cmp
pop
cwtl
vpsllw
ds
mov
mov
mov
out
fsubrs
or
and
ljmp
rcrb
imul
cmpsb
cli
push
add
popa
imul
ljmp
fwait
push
subb
sbb
rorb
ja
pop
test
hlt
xchg
sbbl
clc
dec
push
popf
xchg
sarl
or
fnstenv
mov
into
in
negl
xchg
psubsb
cmp
sarb
rorl
push
mov
cmpsl
jg,pt
inc
or
adc
push
insl
aam
sarl
lahf
cld
cmp
shrl
sub
fwait
dec
jg
es
gs
push
sub
shll
pusha
ljmp
cmp
pop
mov
sbb
popf
jg
cmp
insb
push
sub
sub
jbe
mov
test
or
dec
add
shlb
lret
outsl
push
out
orl
jmp
dec
pusha
and
daa
subl
ret
pop
add
repnz
sarb
push
inc
imul
and
fnstenv
and
ret
lds
sti
daa
adcl
test
sbb
mov
insb
lahf
mov
ljmp
ret
push
mov
scas
test
stc
inc
fwait
cmpsl
xchg
ds
mov
sbb
add
mov
xchg
xchg
jp
pushf
sub
aas
push
dec
data16
mov
sbb
jbe
jnp
test
pop
mov
scas
jmp
cwtl
fistpll
stos
rorb
xchg
mov
mov
int3
movsl
push
mov
scas
xorb
mov
les
rolb
fwait
push
imul
xchg
cwtl
repz
mov
out
push
mov
pusha
fcmovnb
xchg
out
dec
mov
cmp
xchg
popa
clc
fildl
pop
fnstcw
pusha
jmp
mov
fwait
ret
outsl
jl
cwtl
inc
lds
imul
mov
adc
nop
addr16
out
mov
out
adc
fdivs
xchg
inc
ficompl
cmp
xor
sub
xchg
mov
popf
int
clc
std
and
out
cwtl
jg
lret
pop
call
xor
in
test
arpl
jle
cmp
dec
mov
fcomip
test
stos
add
pop
lahf
out
sarl
test
adc
cmc
cli
cmp
daa
add
ds
inc
xor
jl
in
pop
cmpsb
add
fsubs
push
fdivrs
ror
mov
movsb
scas
add
or
mov
xchg
ljmp
insl
sahf
push
adc
andb
inc
jno
out
push
lods
lea
add
cwtl
js
jbe
mov
pop
sbb
jge
test
ffree
fildl
movsl
push
mov
push
jecxz
jo
xor
adc
xor
std
xor
and
es
xchg
pop
xchg
stos
clc
es
or
stos
popf
jo
jo
std
cs
push
dec
cmpsl
jbe
test
sti
sub
arpl
cmovnp
out
pop
sbb
or
mov
pop
cmpsl
push
out
js
sbb
jne
in
add
adc
or
mov
xchg
pop
int3
adc
inc
xchg
icebp
in
sbb
xchg
stos
sub
stc
popf
scas
inc
in
js
and
cmc
pop
mov
sbb
mov
mov
push
and
cmpsb
add
mov
jo
std
sahf
subl
push
leave
bound
js
xchg
or
xor
nop
lods
and
sub
and
aas
xlat
in
mov
adc
pop
sub
loope
call
lock
or
mov
mov
jmp
pop
insl
adc
xchg
mov
outsl
fidivl
nop
mov
push
mulb
cmp
sbb
daa
sub
insb
je,pt
ljmp
out
mov
shlb
or
or
xchg
mov
insl
jmp
or
ja
repnz
lret
sub
pop
stos
and
lods
stos
inc
mov
ljmp
and
in
jmp
mov
inc
pusha
xchg
daa
jl
xchg
in
xchg
jecxz
jnp
lcall
cmpsb
pop
push
pop
push
add
ja
outsb
mov
std
xchg
into
or
sbb
sub
cmp
sub
push
popf
mull
xor
mov
popf
arpl
push
pop
mov
mov
imul
jnp
lea
adc
xor
loopne
fisttpll
imul
clc
adc
push
or
leave
cmp
push
mov
ficoms
adc
xchg
mov
mov
mov
rorl
mov
jmp
cmp
mov
mov
rcrl
test
out
data16
and
inc
mov
xorl
mov
dec
call
int3
enter
orl
inc
cmp
push
testl
andl
sti
adc
dec
pop
fsubrl
sbb
sub
and
ljmp
cmp
in
adc
dec
pushf
popf
cwtl
pop
test
shrl
cmpsb
aam
in
out
xchg
ja
addl
shl
xchg
scas
lahf
loope
daa
adc
stos
xchg
or
xor
lret
cmp
and
adc
lcall
or
cli
sbb
sbb
les
mov
xchg
and
movsl
adc
fbstp
lods
mov
loopne
adc
inc
jns
pop
or
test
loopne
out
icebp
outsl
jge
mov
jae
ljmp
cli
in
and
adc
mov
inc
sbb
inc
aas
lahf
out
jo
mov
outsl
jge
jecxz
fistl
stc
imul
test
add
sbb
jge
xchg
push
lods
jmp
iret
mov
sub
ret
inc
sub
fsub
loopne
dec
inc
fldcw
push
lcall
scas
sub
jp
cld
or
pushf
dec
in
cwtl
sbb
cmp
jns
pop
pop
testb
jge
mov
inc
xchg
lret
fisubs
les
xor
shl
jo
pop
repz
jecxz
test
push
pushl
adc
ss
ljmp
jmp
pop
sbb
js
out
daa
faddl
pop
int
dec
incl
inc
fs
pop
xor
sub
mov
std
add
sahf
sub
loopne
mov
cltd
adc
xchg
jno
clc
dec
sbb
xchg
lcall
pop
add
in
sub
add
mov
inc
pop
cmpb
outsb
mov
test
pop
jge
mov
fimuls
arpl
sub
pop
sbb
pop
jo
scas
rol
in
enter
aad
cmp
clc
vprotq
clc
data16
sub
shrl
test
pop
dec
mov
pop
push
add
lahf
stos
push
cld
xchg
xchg
pop
insb
imul
addl
ss
push
mov
xchg
cmpsl
in
je
lret
mov
xchg
dec
or
push
out
mov
fcoms
sub
dec
lock
lock
aad
push
movsl
push
or
push
or
sub
push
cmc
shr
in
jecxz
mov
and
jge
jo
and
mov
inc
fildl
rclb
mov
imul
sbb
xlat
pop
iret
sub
cmp
cmc
inc
gs
mov
and
add
add
mov
pop
mov
mov
negl
out
outsb
adc
pop
xchg
sub
and
push
xor
gs
ret
push
jae
cwtl
mov
lea
inc
or
pop
jp
jb
ficompl
fbld
jns
cmc
xchg
stos
inc
ljmp
dec
and
pop
cmpsb
jmp
adc
cmp
lods
movsl
lcall
aam
push
test
mov
jl
dec
jae
jg
xchg
mov
mov
ret
adc
int3
push
ljmp
pop
or
and
jge
xchg
jl
sbb
xchg
enter
pop
outsl
mov
mov
jecxz
imul
or
cmp
lcall
push
test
jnp
ret
repnz
and
sub
aam
sbb
and
push
mov
cld
and
fistl
pushf
sahf
adc
jp
lods
mov
mov
lock
push
push
je
inc
scas
pop
pushf
data16
daa
dec
adc
lcall
movsl
mov
adc
mov
push
daa
mov
test
sub
hlt
or
push
stc
out
dec
sbb
jge
mov
shrb
lock
loop
push
xchg
sbb
sbb
popa
fstpl
in
mov
cmp
pushf
xchg
addr16
lahf
adc
stc
inc
scas
inc
mov
xchg
or
adc
cmpsb
out
sub
adc
and
outsl
std
aaa
std
mov
lock
les
insb
sti
mov
popf
adc
inc
cmpsb
xchg
pop
and
sbbl
add
bound
cs
adc
les
push
cmp
imul
cmpsl
mov
les
in
mov
jl
fsubrl
push
sbb
pop
ss
mov
xchg
lds
lahf
idivb
add
adc
pop
inc
fwait
mov
push
push
add
xchg
mov
cwtl
xlat
mov
pusha
ds
out
lds
mov
adc
mov
fldcw
jnp
loopne
inc
fistpl
jl
cld
idivb
bound
xchg
shll
xor
out
int
aam
stos
cmp
ss
shll
fs
mov
data16
sbb
lret
xchg
add
push
cmp
jae
sahf
sub
sbb
or
sub
sub
leave
add
xchg
lock
jecxz
sub
inc
aas
mov
xchg
push
ljmp
inc
push
movsl
mov
xor
pop
mov
aad
fwait
and
mov
xchg
or
mov
pop
cmp
jno
fisubs
dec
cmp
push
push
inc
and
push
imul
sub
push
enter
lret
or
icebp
and
sub
mov
mov
push
xchg
xchg
pop
mov
mov
xchg
adc
and
mov
outsb
jno
es
xchg
adc
std
cltd
pop
gs
dec
mov
inc
rolb
pop
push
lcall
fcmove
out
sbbb
icebp
jg
lods
shl
test
ja
rorl
inc
ret
iret
mov
fsubrs
mov
inc
outsb
add
rol
fstps
pusha
add
inc
push
xor
dec
leave
lcall
out
inc
pop
adc
out
xchg
pop
int
dec
cmp
mov
idivb
ss
xchg
sbb
leave
pop
cmc
push
ljmp
mov
add
dec
push
push
lock
aad
inc
xchg
xor
in
and
dec
and
fsubrl
sub
fst
inc
nop
or
cmc
push
out
movsl
rcrb
and
test
repz
mov
cmp
cmp
stc
int3
lret
ret
sbb
frstor
mov
bound
xchg
xchg
cmp
subb
cmp
pop
xchg
sub
inc
ror
jno
sbb
mov
ja
in
mov
push
ret
cmp
ljmp
maskmovq
divl
fcomps
fidivs
push
out
testb
mov
add
cld
leave
mov
mov
pop
inc
pop
icebp
jae
jl
sub
ds
call
in
xchg
push
loopne
mov
shrb
or
lret
cmp
mov
iret
jae
jae
sub
cmpsb
xchg
xor
lahf
xchg
xchg
inc
inc
mov
jb
inc
push
push
mov
xor
push
sub
push
movsl
xor
inc
mov
jp
lods
aad
and
ficoml
add
in
ljmp
iret
into
loop
cs
scas
cwtl
inc
jb
sbb
testb
xchg
mov
add
inc
das
cmpsb
cwtl
arpl
xchg
pop
ss
test
pop
xor
cmc
inc
ds
adc
pop
insl
add
cmc
sahf
in
xchg
jae
jl
jo
lea
adc
xor
pop
adc
in
mov
xlat
es
pop
cmc
ja
out
sub
adc
fs
ficoml
cltd
js
sbb
cmp
dec
cmp
jnp
cmpsb
lea
stc
nop
xchg
fsubrs
gs
lods
sbb
imul
pop
push
cltd
sub
xlat
pusha
mov
sbb
or
mov
mov
out
inc
sti
mov
leave
mov
shrb
and
jno
mulb
cmpsl
cmp
xlat
cmp
jbe
dec
cltd
stos
jns
incb
jle
icebp
mov
push
adc
jmp
push
and
insl
stc
and
cmovnp
ret
lock
es
pushf
arpl
test
cmp
add
test
mov
fwait
push
sub
shl
lds
mov
lods
ret
pop
fistps
divl
ss
leave
cli
cld
or
insl
fidivrl
cmp
add
fnstenv
mov
pop
mov
repz
lods
inc
mov
dec
and
lea
stc
and
sbb
jg
cwtl
jo
lret
sahf
outsb
push
fidivs
and
xchg
mov
dec
loopne
ret
mov
jp
sbb
jae
ja
jae
lods
iret
or
andb
scas
stc
loope
mov
fstpt
shr
fdivl
mov
push
in
mov
add
and
inc
add
cmc
add
adc
sbb
orb
test
mov
pop
pop
ret
movsl
mov
outsl
lcall
mov
orb
xchg
mov
out
lahf
test
addr16
jae
mov
sbb
xchg
jne
push
add
js,pn
insl
mov
pop
lock
mov
movsl
mov
out
xor
arpl
ret
test
xor
js
inc
xlat
lods
and
xchg
cs
xor
sahf
dec
mov
lcall
das
subl
jae
jmp
jp
xlat
adc
rorb
jp
dec
sub
add
dec
hlt
pop
andb
call
fwait
in
push
push
ss
mov
cmpsl
jp
lods
sarb
stos
inc
or
sub
jae
test
mov
mov
mov
subb
xchg
adc
fdivrs
mov
iret
dec
inc
push
in
ffreep
mov
popa
mov
add
push
fdivs
das
mov
loop
push
pop
dec
jecxz
outsb
popa
clc
xor
sar
inc
add
mov
stos
pop
xor
rclb
add
mov
je
sbb
dec
in
xchg
xor
cmc
pop
cmp
int3
les
andl
mov
stos
js
cli
jmp
test
mov
lret
xor
in
lock
into
outsl
sbb
inc
mov
test
xchg
push
or
add
int3
sti
es
and
pop
mov
mov
loopne
xchg
jmp
dec
xchg
into
add
outsl
jns
imul
push
sbb
mov
and
mov
mov
pop
add
pop
jns
jg
pop
pop
adc
add
adc
outsb
je
and
rorl
push
sub
insl
jp
scas
out
frstor
sub
jge
lods
jmp
add
jmp
out
jle
fucomip
or
xchg
fs
adcl
sub
popa
fdivl
fidivl
pushf
mov
or
dec
jnp
mov
nop
jmp
push
xchg
std
ret
push
pushf
xor
in
aas
mov
out
mov
and
dec
and
arpl
leave
xchg
sub
push
call
fdivrl
into
dec
imulb
jge
pop
cmc
inc
aaa
pop
fisttps
icebp
popa
mov
mov
addr16
fdivrs
jb
xchg
add
leave
pusha
sbb
in
repz
cmpps
cltd
fs
cmpsl
pop
insb
dec
fwait
mov
ret
imul
jns
sbb
ds
pop
xlat
xor
sbb
sub
scas
sbb
mov
data16
cmp
inc
sub
dec
cltd
push
insl
pop
xor
inc
add
adcl
and
repnz
test
negb
sub
pop
shll
mov
fidivl
xchg
or
sbbl
jmp
sbb
fwait
jg
icebp
cli
xchg
and
sbb
cli
mov
cmc
lcall
gs
inc
stc
pushf
cli
insl
inc
xor
mov
fisttpll
xchg
sub
bound
xchg
sbbl
adc
xlat
inc
sbb
push
rcrl
cmp
fwait
dec
gs
mov
lock
or
pop
cmp
inc
cmpl
call
sbb
cmpsb
loope
inc
mov
push
cltd
or
dec
push
mov
out
sub
lock
mov
inc
pop
sbb
test
jne
fbstp
push
pop
in
sbb
lods
call
push
icebp
cmp
movsl
lds
stos
ret
in
into
shlb
dec
fld
cmp
out
test
mov
push
call
test
push
jae
xor
sti
inc
mov
mov
mov
in
push
sbb
push
sbb
xchg
jle
sbb
xor
test
cmc
cmp
fimuls
or
popa
lcall
add
dec
mov
fldt
sbb
lret
cmp
sahf
gs
mov
mov
push
dec
mov
cmp
test
mov
dec
sbb
fs
lcall
mulb
jns
xchg
enter
pop
sub
mov
dec
jae
popa
clc
inc
ss
pusha
cwtl
and
les
out
xor
popa
lods
sbb
mov
push
cmp
dec
popa
push
stos
pop
out
xchg
rcr
bsf
data16
push
inc
int
cmc
jnp
rcll
lds
push
xlat
imul
and
pop
lock
testl
mov
lcall
popa
mov
loope
test
call
add
mov
jg
scas
adc
add
add
pop
repnz
cmp
pop
add
adc
pop
sub
push
sub
sbb
jge
test
cltd
sub
add
in
hlt
mov
xchg
pop
add
aaa
adc
sbb
aas
cli
jns
mov
cltd
sub
and
orl
mov
add
and
dec
jno
mov
adcb
xchg
test
out
and
ljmp
fisubrl
shlb
inc
popa
mov
push
aas
mov
arpl
and
outsb
lcall
std
xor
push
enter
jecxz
in
test
ficomps
fmulp
and
hlt
mov
push
add
pusha
test
in
sub
pop
sbb
out
xor
daa
lcall
pop
fnstcw
adcb
outsl
lods
inc
jmp
ds
cmpl
mov
dec
gs
adc
push
mov
mov
fs
mov
ret
push
jl
add
aad
out
lcall
sbbl
mov
fs
stc
ljmp
push
popf
mov
sub
leave
mov
mov
js
xchg
and
dec
cmp
out
fiadds
test
arpl
xchg
xchg
inc
mov
jge
sub
stos
cltd
ja
call
test
or
scas
jb
pop
adc
adcb
xchg
ja
add
cld
xchg
and
lahf
push
sahf
push
int
loop
jecxz
sbbl
adc
loop
jne
cmp
stc
repnz
loope
add
push
dec
ud2
jne
nop
out
stos
jnp
lcall
cmc
inc
mov
ret
fisubrl
pop
pop
push
mov
fsubrl
pop
mov
in
or
mov
leave
push
push
sarl
in
cltd
das
push
and
ret
dec
loope
aas
or
lods
adc
shrl
pop
add
jne
mov
jnp
adc
mov
xlat
or
adc
iret
cbtw
stc
ds
push
add
stos
adc
cs
stc
push
fdivs
sahf
xchg
pop
push
pop
mov
xor
pop
out
lds
mov
mov
popa
sahf
xor
incb
mov
iret
and
jne
out
dec
stos
sbb
add
repz
xor
mov
test
sub
scas
loopne
loope
xchg
mov
sbb
fisttpll
jle
jl
cwtl
mov
movsl
int3
fsubrs
and
add
jge
mov
pop
sahf
push
icebp
dec
pop
xchg
in
popf
test
xor
mov
cmp
cltd
ret
insb
sbb
cmpsb
mov
popa
lods
pop
mov
cmovno
into
enter
add
cmp
sbb
pop
lret
fldcw
dec
aas
push
or
mov
repnz
fsubrl
leave
sub
inc
scas
mov
sbb
sbbb
add
xor
fbstp
xor
imulb
fistpll
and
sub
cld
add
inc
mov
out
movsb
xor
leave
cmp
push
ret
mov
mov
dec
mov
fistpl
ja
test
vmaxps
or
adc
mov
test
push
jns
dec
mov
sbb
cs
sbb
cmp
xor
cmpsl
shl
xor
adc
and
nop
movb
rclb
sbb
jo
jecxz
fidivl
sub
inc
or
clc
and
es
jmp
mov
add
test
or
sahf
fwait
sub
gs
push
cmp
in
xor
aas
jae
fs
jg
inc
push
pop
add
jbe
pop
insb
and
outsb
lcall
loope
dec
add
push
inc
aaa
stos
insb
cld
inc
in
sub
or
dec
fyl2x
dec
call
nop
ss
jecxz
dec
add
mov
popa
sahf
sbb
sub
pop
add
or
cvtdq2ps
lods
pop
mov
or
jp
nop
pop
xor
mov
fdivr
repz
not
loop
pop
xchg
or
pop
add
mov
mov
dec
push
std
cwtl
popf
sub
and
sarb
mov
pushf
xor
mov
pop
mov
imul
enter
jge
sub
xor
je
pop
test
imull
arpl
push
or
jns
lea
daa
sub
es
inc
out
xchg
fs
or
fmull
push
mov
ficoml
xor
pop
repz
mov
xchg
call
push
sti
popa
mov
pop
cmp
fnstenv
adc
and
adc
xor
andl
lock
rorb
dec
fmul
popf
stos
or
push
jbe
mov
les
push
adc
std
sahf
jge
loopne
orl
cmp
popa
add
inc
push
push
addr16
mov
enter
xor
scas
mov
add
push
test
jo
adc
scas
mov
es
mov
cmp
xchg
and
mov
and
cli
std
inc
adc
sub
roll
xchg
icebp
nop
or
imull
stos
jl
push
inc
popf
or
inc
push
ljmp
cmp
insl
pop
xor
mov
fwait
cwtl
stc
and
xor
sub
xor
xchg
lods
pop
dec
xchg
cmp
testl
push
push
nop
or
sub
xchg
insb
push
popf
imul
mov
push
cmp
test
pop
in
sahf
fadds
ds
mov
and
fcompl
std
pop
mov
or
mov
sbb
mov
inc
dec
mov
ss
push
lock
dec
in
jp
add
or
pusha
pop
jecxz
cmp
jg
aad
mov
fsubr
sbb
cmpsl
aaa
xor
das
ficoms
adcb
xchg
test
data16
mov
int3
imul
cmp
adc
cmp
int3
dec
mov
cmpsb
push
rcl
mov
push
rolb
lcall
add
mov
cmp
adc
inc
cmp
testl
ret
jmp
dec
fwait
aam
int
adc
lcall
ja
loopne
add
mov
imul
call
push
call
and
push
lock
inc
lcall
dec
out
xor
sbb
mov
jo
push
pusha
and
xor
and
adc
bound
inc
push
aas
lahf
push
insl
inc
inc
fstpt
outsb
add
in
fs
test
or
xchg
cmp
xor
lret
pusha
pop
mov
mov
xor
cli
icebp
lods
lock
inc
loopne
jle
sbb
cltd
or
mov
mov
imul
cmp
jbe
mov
inc
rcrl
push
bound
cmp
dec
jecxz
xchg
iret
ss
mov
int
lret
sbb
stc
out
adc
inc
les
lods
loope
gs
dec
subl
fcomps
test
flds
or
and
pushf
and
add
mov
dec
jne
xor
push
imul
loope
int3
dec
sbb
ss
or
cld
adc
mov
pop
jae
and
xor
sub
inc
push
sbb
mov
clc
call
and
inc
dec
stos
into
aad
jbe
shl
and
xor
mov
jnp
pusha
lods
cmp
sbb
lcall
and
xchg
mov
sahf
and
push
mov
pop
push
jbe
sub
mov
mov
aas
jl
ss
pusha
mov
cwtl
fcoml
lret
jbe
out
jns
stos
xchg
es
mov
xlat
pusha
sub
pop
repz
jmp
shlb
jp
add
das
cmp
cwtl
fisttpll
pop
sahf
cmp
mov
repnz
sbb
xor
xor
or
or
jns
jp
pushf
mov
sbb
cmp
sbb
add
cltd
and
mov
jbe
and
decl
dec
ret
lret
add
in
pop
sbb
push
or
pop
insl
jle
loop
xchg
adc
pop
push
mov
sub
or
push
pop
dec
or
add
sbb
aad
sbb
adc
les
arpl
movsl
cld
pop
cwtl
mov
clc
cwtl
push
xchg
ss
mov
jecxz
shlb
icebp
dec
cltd
lock
jo
push
fs
insb
mov
cltd
mov
sbb
mov
stc
loopne
iret
lds
inc
and
es
daa
pop
inc
jecxz
int
aaa
shll
jmp
cmc
decb
and
rclb
andb
stc
fstl
add
test
cmp
push
aad
into
dec
pop
fildl
fisubl
out
adc
adc
ss
in
pop
jle
loop,pn
hlt
or
mov
test
jbe
or
jmp
and
add
xor
fdiv
mov
jbe
test
fxch
and
sub
add
stos
psubusw
mov
pop
and
les
jle
xchg
mov
enter
xchg
data16
lahf
icebp
mov
jge
xchg
inc
sbb
daa
mov
or
inc
out
in
mov
loopne
clc
adc
sbb
jg
push
lcall
in
lret
xor
xchg
addr16
push
js
xor
jnp
push
pop
or
xchg
inc
fs
shll
cmp
cltd
cmp
lret
inc
pop
pusha
push
insl
movsl
sbb
fcmove
mov
ret
dec
out
test
cmpsb
movsl
xor
dec
sbb
add
xor
mov
push
mov
inc
loop
decl
insl
adc
rcrb
add
mov
push
dec
aad
aas
leave
pusha
js
jbe
into
xchg
fwait
xchg
sbb
jb
in
push
inc
jae
mov
xchg
leave
jecxz
jae
inc
push
cmp
xlat
xor
or
int
rcrb
and
icebp
mov
cmp
sti
jbe
pop
xchg
ret
xor
jno
push
mov
arpl
cmp
ljmp
sub
or
push
xchg
ds
or
adc
lahf
js
pushf
orb
push
mov
cmp
into
and
enter
and
stc
adc
fisubrs
jb
leave
mov
cwtl
cmp
ret
jmp
gs
test
xchg
add
sbb
fs
sub
out
jae
and
loop
push
cmp
repnz
out
dec
and
inc
mov
pop
in
in
sbb
push
mov
cwtl
lods
mov
cs
iret
pusha
inc
cmp
ljmp
and
fwait
add
int3
push
or
pop
adc
push
stc
aaa
xchg
xor
sahf
sbbl
xlat
fstps
mov
jo
pop
daa
pop
rolb
jge
lods
scas
dec
ret
push
xchg
ja
xor
movsl
fs
enter
mov
mov
into
jecxz,pn
inc
fwait
dec
jo
int3
jbe
and
bound
xchg
into
insl
out
bound
sahf
cmc
inc
sbb
sti
movsl
xchg
pop
pop
push
or
inc
pusha
inc
pop
call
mov
fsubl
es
or
lods
dec
shr
mov
out
sbbw
inc
orb
psubsb
xchg
dec
cmp
mov
leave
fiadds
mov
ja
or
add
aad
stc
adc
inc
xchg
cmp
fchs
adcl
push
adc
test
andb
pop
mov
outsb
outsl
mov
popw
imul
or
xor
out
mov
mov
mov
push
pop
mov
dec
add
or
stos
js
inc
stos
adc
and
xor
pop
sarb
in
test
aad
or
movsb
dec
mov
mov
push
mov
mov
or
aad
pop
mov
mov
dec
in
xor
pop
popa
jl
adc
sbb
or
int
stos
jmp
inc
sub
inc
jae
jb
aas
push
pop
repnz
test
das
stos
sub
push
xlat
xorb
daa
rcll
flds
adc
or
adc
dec
negl
sub
loop
clc
sub
clc
ja
sub
cmc
push
xor
scas
call
mov
popa
push
jmp
push
xor
pop
inc
sahf
xor
std
or
adc
xchg
sub
sbb
lock
daa
mov
in
pop
shl
push
sub
in
fwait
bnd
push
nop
outsb
sub
mov
cmp
dec
stos
jge
aam
scas
shrb
lds
mov
sub
jno
or
jl
push
or
in
push
adc
and
lea
mov
loopne
xchg
and
push
sub
mov
dec
out
dec
in
jle
mov
dec
test
subb
and
sub
xor
in
cmp
jl
adcb
dec
lds
pop
mov
xor
inc
lcall
inc
mov
push
sub
jg
push
stos
mov
das
das
and
mov
adc
push
lretw
ja
lret
lcall
fdivrs
pop
cmp
mov
xchg
fwait
pop
xor
mov
jmp
js
ss
jns
push
mov
fnsave
jbe
cltd
jle
mov
jne
jb
adc
add
repz
adc
aaa
test
xchg
testl
daa
aam
cmp
imul
das
xchg
loopne
sub
mov
xlat
rol
sbb
adc
sbb
lods
and
cld
insb
inc
cmc
daa
or
jge
pop
dec
sbb
or
pop
sbb
or
adc
push
inc
inc
clc
jae
lock
add
imul
xchg
flds
sub
imul
aad
inc
fisubrs
pop
push
adc
sub
mov
cli
jl
movsb
les
imul
aaa
mov
fildl
mov
mov
mov
mov
mov
test
rcll
in
fnstsw
test
dec
lret
mov
stos
mov
addr16
add
fidivs
pop
in
xlat
pop
movsb
scas
inc
enter
inc
in
sbb
or
insl
ds
mov
jae
sbb
mov
sbb
mov
std
dec
xor
imul
add
push
cmpsb
dec
fwait
pusha
push
xchg
xchg
data16
aas
add
les
mov
mov
sbb
jae
inc
pop
jl
and
fisubl
or
jp
lock
push
das
or
fcoml
sbb
loopne
imul
cli
lds
add
negl
pop
add
push
call
mov
or
add
jbe
add
jge
mov
inc
pusha
push
adc
xor
mov
jne
push
imull
enter
xchg
sub
outsl
add
mov
mov
mov
push
fnsave
mov
and
inc
aad
loopne
shl
jb
cmp
sbb
add
dec
mov
xor
ud0
loopne
repnz
pop
cmp
aas
push
inc
shll
add
ror
ss
jmp
sbb
jo
aas
jp
push
incl
shufps
jo
pushf
mov
div
mov
ljmp
loop
pop
lret
pop
les
pop
sbb
cmp
push
sbb
and
push
add
jns
push
imul
repnz
xchg
jae
sbb
jnp
fidivrs
pcmpgtd
inc
cltd
jo
push
int3
mov
sbb
xchg
sub
pop
ret
mov
mov
mov
ficomps
add
dec
dec
lods
inc
xchg
movsb
jnp
mov
add
mov
inc
fsts
cli
adc
ja
stc
movsb
jmp
repnz
inc
orb
adc
int
lds
mov
and
cmp
mov
pop
filds
cli
adc
jle
test
cmp
mov
inc
gs
sbb
iret
push
loope
jae
sub
dec
push
push
scas
inc
mov
adc
sub
jl
rcl
movsb
sbb
dec
mull
xchg
xchg
in
jbe
leave
shlb
cmp
das
mov
inc
push
dec
ficoms
pop
shll
mov
test
aaa
adc
dec
lret
mov
push
xor
out
stos
cmpsl
pushf
mov
out
mov
stos
push
sub
mov
adc
mov
movsl
shlb
repz
sub
pop
dec
add
in
ret
xor
jno
xchg
push
popa
mov
xchg
stos
sbb
and
popa
clc
arpl
fnstcw
lds
mul
push
roll
push
insb
push
mov
aam
mov
cwtl
pop
push
lret
test
ja
sbb
sbb
or
adc
mov
negb
cmp
pusha
xchg
fs
data16
in
stos
xor
or
cld
jae
lret
ss
xor
pop
das
sahf
pop
add
sub
pusha
mov
lea
testl
int
repz
adc
inc
push
rcrl
loopne
outsl
adc
push
insb
xor
jae
dec
aas
pop
cmp
cwtl
and
inc
stc
inc
pop
mov
push
dec
pop
out
add
mov
rcl
imul
mov
and
aaa
pop
mov
in
daa
mov
lret
or
mov
pop
cmp
adc
dec
das
or
aaa
in
jae
mov
xchg
mov
sub
cmpb
addr16
xchg
mov
in
xchg
mov
mov
xchg
jg
jge
ficoml
adcb
scas
std
cmp
imul
inc
loopne
test
out
cmpsl
pusha
cmp
ss
enter
mov
inc
sbb
sahf
gs
rcll
lcall
mov
dec
lcall
cmc
xchg
aaa
aad
les
pusha
sub
out
push
mov
mov
sub
and
cmpsb
xchg
test
aas
mov
inc
leave
jge,pt
lahf
out
inc
push
sub
or
pop
cmp
mov
aad
xchg
rcrl
popf
testb
hlt
cli
xor
in
int
jge
lds
clc
clc
mov
push
fdivr
or
cmp
or
lods
ficoml
inc
test
pop
loop
call
and
sbb
shll
xchg
fcompl
jbe
jecxz
gs
sar
xchg
cmc
das
imul
lahf
sbb
pusha
mov
xor
xor
std
and
xchg
sub
aaa
lods
mov
repnz
cwtl
jbe
aas
movsl
dec
pop
movsl
aad
daa
fwait
outsb
sbb
pop
mov
sbb
jno
dec
cltd
mov
fildl
mov
stc
adc
push
dec
xor
out
push
and
inc
adc
mov
jmp
outsl
movb
or
fimull
sub
dec
or
out
ds
sbb
push
jae
sbb
xor
imul
movsl
cs
scas
mov
daa
push
out
in
je
shrb
mov
adc
mov
aad
int
hlt
inc
std
leave
xchg
push
jmp
fs
stc
xor
lret
xlat
mov
cmp
aas
push
pop
insl
xchg
insb
mov
cli
out
stos
subl
jo
js
notb
test
pop
das
cli
xchg
movl
jno
leave
lret
xor
push
inc
xor
popf
shlb
enter
shll
imul
push
inc
adc
add
xchg
mov
stos
jg
mov
jle
cmpsl
cmpsl
xor
or
lcall
inc
lock
jnp
push
sbb
mov
xchg
push
and
pusha
mov
adc
jg
cmc
mov
jg
addr16
xor
adcb
xor
xchg
xchg
pop
push
mov
jb
imul
or
cmp
mov
movsb
rcrl
inc
push
scas
cltd
nop
lret
adcb
mov
outsb
aas
pop
test
jp
pop
leave
into
cwtl
jae
and
push
addl
jbe
and
dec
test
jno
lret
popa
mov
lods
cmpps
cmc
push
popf
pop
testl
cmp
iret
sub
test
js
stc
js
sbb
pop
jl
mov
movsb
jge
and
push
daa
add
out
push
js
testb
or
in
sub
je
ljmp
lret
test
out
aad
xor
test
jmp
pop
push
into
push
cli
inc
mov
xchg
fistps
outsl
mov
hlt
xchg
pop
bound
xchg
int
lods
mov
inc
loop
jmp
call
xchg
cmpsb
inc
push
mov
xlat
ja
adc
mov
hlt
mov
ss
daa
pop
inc
cmpsb
push
aas
xchg
lcall
jmp
jl
mov
in
iret
das
adc
int3
pop
xchg
xchg
in
mov
xor
push
mov
mov
cmp
testb
mov
lea
out
dec
dec
out
sti
adc
fimull
mov
je
test
arpl
imul
int
mov
sbb
arpl
cmp
adc
bts
mov
inc
loop
xchg
rol
pop
in
or
into
pop
and
fmul
cmp
inc
notb
into
inc
mov
xchg
cmc
inc
xchg
xchg
push
cmp
shrb
test
into
inc
sbb
in
outsb
ljmp
das
movsb
push
fbld
iret
mov
add
xchg
arpl
or
push
notl
sub
enter
push
cmp
sub
shlb
pushl
popl
xor
clc
xchg
mov
cs
fcoms
sub
push
add
dec
xchg
cmp
sbb
and
dec
testb
add
add
aam
sarb
stos
adc
repnz
mov
push
push
lock
cmp
leave
enter
aad
add
sub
rcrb
imul
int3
ficoms
repz
jno
lods
push
aas
lock
shrd
jmp
icebp
push
adc
push
jb
mov
xor
in
test
and
ds
cmp
daa
lock
mov
lahf
or
lods
add
dec
add
lods
cmc
repz
insl
xchg
out
aam
pop
mov
mov
dec
loopne
test
push
cs
pop
mov
scas
mov
pop
ja
mov
pop
fsts
ljmp
daa
xchg
mov
ret
fcoms
xor
fdivr
sahf
rcrl
sub
cmp
into
loop
push
xchg
repz
mov
sub
inc
mov
fwait
mov
test
jns
sub
jb
inc
cmc
loopne
mov
and
loope
cmp
es
jmp
cwtl
cmp
inc
in
repz
add
or
cltd
les
sub
mov
shll
pop
dec
arpl
iret
daa
push
push
add
adc
mov
mov
or
stos
sti
push
adc
jae
mov
jns
sbb
cwtl
cmc
es
shll
fldenv
ret
mov
ss
addl
fdivs
out
push
stc
jo
jp
clc
fcmove
xor
jecxz
or
mov
jmp
lcall
ret
outsl
cmp
add
test
cwtl
sbb
es
dec
mov
mov
shlb
cmpsb
in
scas
xchg
bound
or
cmpsl
scas
cmc
and
dec
ret
outsl
shlb
es
sbb
xchg
jmp
push
dec
adc
hlt
inc
jecxz
mov
addb
mov
xchg
xorl
push
push
mov
fstpt
inc
xor
lcall
stos
in
ds
lret
loopne
js
sub
loopne
out
push
jnp
add
lods
xchg
inc
mov
dec
pop
bsr
je
daa
outsl
sbb
push
sub
mov
pop
std
stos
push
xor
sbb
into
fs
or
mov
sbb
or
ja
repnz
arpl
imul
xchg
jl
out
aaa
into
loopne
fistpl
je
jl
xchg
jno
adc
or
add
fidivrl
or
in
adc
aam
das
xor
mov
cmp
sub
out
and
adc
push
jl
push
rorb
rcl
scas
fneni(8087
dec
rcrb
or
dec
shlb
aad
fnstcw
cmp
push
xor
stc
popf
inc
inc
ud0
insl
scas
adc
pop
add
arpl
stos
inc
outsl
inc
jbe
xor
or
test
and
mov
data16
cwtl
dec
mov
pop
add
into
scas
repz
inc
sbb
push
or
into
cs
lds
dec
push
cmp
inc
cwtl
das
jns
pop
lret
cmp
pop
adc
mov
rcl
add
movsb
or
pop
arpl
mov
or
out
or
jle
jne
ss
and
jle
push
cmp
lcall
jne
inc
aad
mov
sti
mov
test
mov
repnz
test
jbe
push
cmp
dec
cltd
push
xlat
push
pop
faddp
mov
mov
mov
push
and
jmp
mov
or
aam
jle
mov
mov
lea
jne
test
testb
add
cmpsl
outsl
rol
pop
leave
add
out
test
or
push
jle
fidivrs
sub
dec
loopne
nop
lods
sub
ds
and
inc
jecxz
outsb
ljmp
push
jb
xchg
into
scas
inc
add
xor
inc
mov
mov
add
inc
loopne
adcb
movsb
test
addr16
mov
sbb
lods
movsb
pop
popa
fstp
inc
scas
push
js
cmp
js
pop
fwait
xchg
aas
push
lahf
xor
addr16
addb
and
dec
scas
out
xor
pusha
call
cmp
xchg
mov
fidivs
xchg
jns
and
fwait
mov
lret
shrl
jmp
or
js
fadds
imul
add
data16
test
mov
lret
int
aad
add
sbb
insb
mov
dec
test
pop
inc
cltd
pop
inc
xchg
imul
mov
push
and
das
adc
cmc
sbb
es
shr
popf
je
adc
mov
mov
inc
rorl
or
cmpsl
fs
loop
adc
rcr
jg
cli
test
popa
lea
jge
dec
mov
fidivs
push
lret
mov
xchg
insl
mov
xor
push
mov
mov
fisubrl
jnp
sbb
bound
push
mov
lods
push
sub
out
push
lods
jle
mov
mov
cmovg
aad
pop
jo
xchg
adc
fisubl
sahf
inc
stos
cmp
xchg
daa
arpl
iret
mov
xor
xchg
push
cmpsl
push
cld
sbb
or
orl
pop
rclb
lods
arpl
cs
xchg
lahf
mov
sbb
jne
stos
add
scas
xor
xchg
sub
aaa
dec
lods
xchg
outsb
inc
xor
cmc
dec
push
fcompl
out
scas
mov
cs
shlb
mov
mov
push
cmpsl
lret
out
adc
add
data16
fwait
jne
pop
xor
das
xchg
movlps
inc
inc
test
inc
sbb
mov
enter
mov
mov
xchg
jp
mov
push
push
xor
clc
pushf
mov
aas
clc
adc
test
mov
push
cs
jl
bound
jnp
rcr
push
sub
les
xor
mov
push
push
sbb
push
sar
mov
mov
dec
sub
insb
or
sbb
mov
sbb
outsl
sar
jp
les
arpl
lret
inc
dec
fwait
push
in
or
dec
sbb
int3
mov
push
cwtl
movsb
shlb
inc
inc
pop
cmp
dec
pop
fucomp
and
xchg
lods
sbb
add
xor
xor
adc
nop
lods
ret
xor
cmp
mov
mov
fwait
cs
movsl
cmp
jbe
pop
sub
cs
in
xchg
cmp
mov
or
push
mov
cmpsl
push
or
add
js
jne
divl
xlat
test
and
push
sub
push
call
mov
fists
and
je
push
or
dec
sti
push
test
stc
addb
inc
lcall
inc
gs
test
pop
mov
or
stos
jl
xchg
repz
inc
xlat
mov
fstps
pop
dec
lret
sub
iret
into
jge
shrl
pop
sub
mov
pop
jb
cmp
dec
fidivrl
mov
dec
inc
jge
sub
pop
fdivp
mov
or
pop
iret
pxor
jno
jo
arpl
inc
xchg
test
lahf
xchg
aaa
push
es
out
mov
pop
cld
jbe
add
imul
and
movsl
scas
jmp
or
push
mov
insb
cmp
ss
dec
xorb
in
insl
idivb
cltd
lcall
sub
int
or
loop
call
sub
cmp
aam
mov
sub
sbbl
add
insl
jne
xchg
ja
mov
adc
dec
data16
cmpsb
cmpsl
in
push
jmp
sbb
xchg
dec
and
ja
push
jae
ja
movsb
int3
push
fcmovbe
adc
push
bound
and
int3
xor
mov
jmp
std
rolb
out
pop
pop
loop
scas
xchg
scas
sbbb
xlat
add
mov
xor
cmp
push
mov
sub
incl
insl
outsl
je
push
xor
lods
pop
jg
adc
pop
pop
iret
mov
ret
push
fwait
stos
xor
into
pop
pop
sti
jmp
fbld
mov
dec
pop
notb
mov
jge
insl
push
xchg
sub
out
adc
mov
or
dec
xchg
shll
mov
idivl
mov
jne
add
in
movsb
addr16
orb
std
stc
aad
ja
inc
addl
push
adc
enter
jl
out
jae
jmp
dec
mov
dec
lret
in
pop
pop
or
data16
and
pushf
inc
fdivrs
jg
imul
inc
dec
xchg
xlat
mov
jno
lods
ds
mov
and
push
shl
mov
xchg
je
mov
ret
pop
mov
ljmp
push
out
sub
outsb
xchg
pop
inc
fisttpl
das
bound
dec
sbb
push
cmp
mov
jl
xor
pushf
lods
cmp
and
cltd
pop
out
add
int3
and
inc
mov
scas
imul
xor
mov
sub
sbb
fdiv
addr16
out
xorb
jecxz
popf
hlt
outsl
cmp
pop
pop
lock
out
iret
mov
aas
or
sarb
inc
dec
mov
inc
test
xchg
dec
test
pop
mov
cmp
je
iret
pop
mov
je
ja
xchg
mov
adcb
int
lods
jmp
aad
dec
jo
sti
pop
test
popf
push
xchg
loope
bnd
add
jnp
pusha
and
iret
repnz
popa
popa
mov
fwait
inc
mov
mov
jg
xor
push
xlat
inc
pop
std
divb
loopne
shl
cs
out
inc
inc
xchg
test
popa
bound
pushf
pop
cmc
int
pop
cmc
insb
enter
jae
mov
push
aad
pop
add
cmc
ss
fs
fprem1
lea
out
sub
repz
dec
jecxz
cwtl
inc
in
sub
int
ds
mov
xchg
mov
jge
ds
cmp
lds
or
das
push
sbb
pop
or
aaa
jle
ja
fstl
test
mov
jmp
xor
xor
movsl
mov
in
mov
push
movsl
xchg
shlb
repnz
mov
push
or
in
mov
leave
lcall
call
je
mov
and
iret
jae
andl
out
add
add
and
ret
hlt
jp
ret
inc
push
fstps
mov
sub
push
sub
push
mov
enter
int
xor
adc
out
push
into
lods
or
cld
sti
daa
push
and
xchg
pop
mov
add
cmp
loop
fucomip
out
pop
fiaddl
adc
adc
sbbb
arpl
data16
cs
push
mov
stc
pop
daa
xor
pop
jo
sub
pop
and
push
xorl
mov
cmp
push
filds
add
xor
and
dec
xchg
movl
leave
jecxz
push
inc
lret
cmp
fisttps
mov
inc
sbb
ret
shrb
pushf
mov
shll
mov
xor
sub
iret
gs
push
mov
repz
insl
sub
and
and
sub
adc
inc
cs
mov
sahf
pop
sbb
sbb
lds
jns
mov
or
popa
adc
mov
dec
stos
mov
jno
add
or
and
fwait
push
fldt
fstpl
stos
fldt
jnp
and
fwait
xchg
scas
stc
mov
or
pop
xchg
flds
jns
fiadds
fwait
cmpsl
xor
sahf
std
xchg
pop
jb
dec
jg
imul
pop
jg
daa
mov
int
scas
stos
out
arpl
outsl
mov
sbb
adc
orb
mov
jg
loope
mov
dec
arpl
outsb
stos
gs
test
inc
sbb
fstpl
pop
jo
inc
inc
jnp
pop
call
add
cmc
pop
sub
pop
std
data16
aaa
xor
data16
inc
xor
scas
int3
xor
scas
not
push
push
inc
xlat
push
in
dec
push
negb
outsl
dec
enter
sbb
adc
sbb
push
sbb
xchg
push
jns
pop
push
movsl
mov
into
jnp
mov
mov
dec
fs
andl
sub
fsubl
or
inc
pop
test
cmp
inc
dec
mov
and
mov
and
add
xchg
mov
repnz
cltd
movb
cld
dec
add
mov
orl
jmp
fnstsw
or
add
shr
adc
push
adc
pop
add
call
xchg
xorb
sub
xchg
jge
xchg
jo
stc
movsl
lds
mov
loopne
les
stos
aaa
loop
add
and
cmp
cmp
negl
dec
sbb
icebp
sahf
jbe
in
aam
pusha
mov
cli
lcall
inc
xrelease
mov
lea
ficoml
pop
movsb
hlt
push
out
and
xchg
mov
mov
push
fwait
push
cmpsb
adc
jge
push
insl
cmc
stc
pop
stc
leave
jecxz
fucomip
xor
out
arpl
in
dec
cwtl
mov
fbstp
or
into
gs
outsb
lret
daa
std
mov
push
out
lds
mov
mov
inc
xchg
scas
inc
les
std
mov
mov
push
jns
fnsave
shr
sti
iret
fcmovnu
fisubrs
pop
adc
xchg
cmp
bound
dec
add
out
push
popf
shrb
outsl
xchg
test
inc
test
sbb
sub
adc
int
repz
sarl
mov
addb
push
adc
xlat
mov
imul
imul
adc
cltd
cmp
and
mov
push
mov
dec
xor
xchg
or
add
pop
push
shrl
popa
lahf
push
sbb
xchg
sbb
or
mov
and
inc
xchg
pop
lea
lahf
mov
adc
sub
mov
int3
outsl
mov
lds
or
ret
add
push
mov
es
pop
lcall
scas
adc
int
pop
mov
lea
mov
stc
out
in
mov
xchg
mov
jecxz
daa
outsb
add
mov
mul
inc
xchg
mov
sar
sahf
or
dec
cmc
pop
and
xchg
imul
lods
cld
adc
xor
push
int3
cmpsb
cmp
mov
mov
pop
mov
add
xchg
and
xchg
adc
pop
iret
mov
fnstenv
loop
cltd
pop
stos
mov
xchg
and
inc
mov
jp
leave
mov
xchg
mov
scas
out
loopne
sub
mov
movsb
push
cmpsl
sub
mov
rep
mov
std
cmp
push
imul
repz
mov
and
mov
pop
fadd
lds
push
ljmp
xchg
lock
jmp
push
popl
jno
push
fstpt
sti
call
mov
lods
in
mov
arpl
adc
cwtl
int
fs
test
inc
sbb
cmpsl
inc
sbb
sub
int
lahf
icebp
inc
push
inc
pop
inc
in
mov
cmp
fcmovnbe
shrl
pusha
mov
aaa
push
leave
push
lods
mov
lds
jo
xor
mov
inc
daa
outsl
ljmp
stc
jmp
ss
sti
das
stc
lea
daa
xchg
shr
ret
adc
pushf
and
rcll
fcmovnb
cmp
scas
insl
ret
jle
inc
push
sbb
popf
xchg
lret
test
retw
out
hlt
mov
and
mov
fnstsw
push
testb
pushf
cli
mov
rcrb
insl
mov
das
cmp
aam
jl
bound
dec
xlat
mov
pop
inc
mov
dec
in
jno
sarb
pusha
data16
mov
ja
popf
test
leave
push
mov
xchg
push
stos
mov
mov
aam
xchg
push
jne
mov
inc
lock
jbe
mov
and
mov
and
test
mov
mov
sub
lret
xlat
pop
roll
cmp
cltd
adc
xor
mov
les
fldl
mov
inc
stos
and
pop
data16
loopne
repnz
mov
dec
out
sbb
pop
and
mov
movsl
mov
mov
fstl
push
mov
enter
stos
xchg
cmp
mov
stc
jmp
jo
arpl
aas
mov
ret
loop
adc
dec
mov
sbb
or
lcall
xlat
add
inc
push
sub
mov
daa
pop
out
xor
push
stc
cltd
add
aaa
popf
adc
mov
ss
pop
leave
loopne
push
push
push
mov
adc
sahf
pop
popf
inc
pop
lds
mov
sub
push
imul
in
jno
mov
jmp
mov
lock
push
xchg
lods
sbb
icebp
movsb
cmp
sub
sahf
jmp
jbe
andb
jns
mov
ret
push
dec
jb
mov
pop
sbb
insb
and
outsl
jmp
sbb
and
cld
outsb
dec
mov
bound
rclb
frstor
xchg
pop
fsubs
popf
outsl
pop
dec
jmp
mov
test
dec
pusha
xor
or
pop
je
jmp
sub
mov
push
pop
jno
test
andb
in
stos
xchg
scas
daa
scas
test
fdivrl
and
fnstcw
push
test
mov
push
je
add
cmp
mov
jg
cltd
and
pop
mov
scas
ret
sbb
aaa
or
sub
je
xchg
xchg
dec
scas
outsb
sti
mov
popf
ljmp
in
out
notl
gs
in
das
mov
mov
inc
jecxz
push
add
rorb
mov
add
lcall
and
in
popf
lcall
out
rcrb
scas
scas
jb
xor
mov
push
ret
bound
out
jno
cltd
vmulpd
xchg
icebp
mov
rorl
repnz
mov
div
movlps
in
repz
and
or
movsb
xor
mov
lret
mov
xchg
aas
add
cmpl
xor
scas
ret
repz
stos
mov
adc
ja
jl
call
inc
dec
jae
stc
push
outsl
pushf
sbb
dec
sti
pusha
push
hlt
aad
insb
testb
xchg
sub
mov
adcb
outsb
push
scas
inc
orl
xchg
mov
pusha
sbb
clc
neg
imulb
sarb
add
push
pop
and
stos
andb
int3
push
lock
mov
sti
mov
push
lea
push
fmull
fisttps
lods
leave
add
pop
shrl
or
pop
out
out
adcl
sbb
scas
xor
arpl
pop
ret
lods
push
adc
sbb
outsb
stos
jno
lret
in
scas
andl
fwait
pop
push
fiaddl
test
test
jl
inc
scas
push
mov
inc
lret
xor
test
jne
cmp
test
fcompp
jb
inc
pop
icebp
cmp
cmpsb
cmp
shlb
shlb
mov
jp
or
xchg
adc
inc
fistl
and
movsb
jae
or
sub
sahf
lea
xor
pusha
jnp
test
push
xchg
in
mov
fldcw
jns
fsubs
xchg
cs
cmp
jo
sahf
push
aas
mov
mov
pusha
pop
mov
xchg
jp
imul
mov
push
jno
cltd
dec
bound
loope
xchg
adcb
push
mov
mov
push
insb
fists
jg
out
repz
sbb
cmp
cmp
jns
mov
or
lds
jl
out
mov
out
js
mov
mov
lds
inc
shrl
xlat
popf
or
sub
mov
inc
arpl
into
cmp
push
xor
fldl2e
loope
adc
stc
pop
xor
rcrl
scas
dec
cmpl
adcl
xor
ret
xor
push
jle
dec
and
xchg
and
repz
mov
inc
aas
xchg
test
lods
in
and
or
das
js
mov
push
fistps
test
xor
fidivs
aaa
in
xor
fcompl
fwait
xor
nop
sbb
inc
inc
sti
insl
push
jecxz
add
pop
push
insl
stos
stos
mov
cmp
outsl
icebp
fidivs
repz
scas
fiaddl
sub
addb
pop
lods
inc
test
xlat
int3
ret
ret
pop
lcall
xchg
inc
xchg
loope
add
adc
push
cmpsl
iret
jbe
push
pop
mov
pushf
adc
movsb
popa
jnp
and
pop
incb
or
pop
sbb
fldenv
adc
shl
jno
and
and
stos
jo
pusha
pop
cmp
gs
std
pop
int3
fiaddl
mov
ljmp
jmp
inc
sti
ss
out
add
mov
jb
cmpsb
pop
aam
iret
shl
mov
cmp
cmpsl
dec
xchg
shl
mov
mov
push
setne
sbb
or
into
mov
fildl
adc
cltd
mov
imul
and
enter
mov
loope
bound
mov
jmp
in
fidivl
test
daa
das
add
das
adc
sbb
je
scas
mov
icebp
ret
in
xor
cmp
lock
dec
lds
pop
iret
das
sub
lcall
cmpsb
test
pop
jge
mov
or
scas
dec
dec
sub
stc
pop
out
test
xchg
push
call
ljmp
popa
mov
fidivs
mov
sarb
add
push
out
dec
dec
inc
pop
out
and
call
cmpsl
dec
popf
dec
addb
loop
mov
lret
cmp
jb
fninit
icebp
mov
add
dec
mov
test
cmp
imul
jecxz
jle
adcb
insb
addl
jp
rcrl
xor
xchg
ret
sbbl
mov
sbb
in
push
mov
repnz
inc
or
add
outsl
inc
push
and
fnclex
jle
dec
loope
adc
int3
inc
sbb
stc
jo
out
push
outsb
dec
or
mov
inc
and
leave
pusha
push
lret
cmp
mov
sub
xor
pop
jbe
push
imul
arpl
add
jnp
pop
enter
ja
lds
and
nop
push
mov
jge
add
outsb
movl
cmc
or
repnz
fwait
test
fildl
push
fistpll
push
xor
xor
push
inc
jge
jg
lock
push
cli
push
mov
in
fmuls
jne
lods
adcb
fmuls
pushf
xor
and
icebp
lahf
ficompl
mov
push
mov
mov
fistpll
sub
stc
rcr
cmc
add
jae
inc
cwtl
mov
or
push
or
push
xchg
sbb
int
out
sbb
add
shrb
and
shll
loope
mov
fisubl
inc
xchg
fistpll
outsb
cmp
aaa
shr
ss
inc
dec
push
mov
jno
pop
test
mov
js
ficomps
xchg
dec
jbe
pop
push
pushf
cmp
loope
or
adc
push
jecxz
iret
mov
inc
test
cmp
and
or
es
icebp
or
jp
bound
and
lods
mov
mov
sub
cmp
xor
jbe
push
lds
cltd
imulb
mov
popa
shl
mov
pop
sub
sar
je
js
jge
sar
pop
sbb
sbb
cmp
cli
push
fwait
adc
xlat
xor
scas
cmp
inc
xchg
ss
or
pop
jl
cmc
mov
cmc
fsub
stc
or
lret
and
imul
mov
push
mov
pop
ficompl
fs
sarl
mov
cmp
fidivrs
push
xor
xor
jns
or
sarl
enter
pop
lods
rcrb
inc
xchg
or
xor
fucomip
rclb
jp
in
jecxz
aas
add
pop
imulb
mov
xchg
mov
push
sbb
repz
test
inc
stos
arpl
xchg
ds
daa
cs
and
push
cltd
out
aaa
test
stc
xor
ja
cli
lret
pop
sub
jae
cli
je
sub
bswap
inc
fdivrp
test
push
and
movzwl
add
repnz
mov
xor
stc
arpl
bound
movsb
lds
mov
in
iret
inc
pop
mov
jae
add
xchg
xchg
sbb
and
adc
jo
and
jecxz
popl
and
xchg
popa
and
xchg
loop
or
xor
push
cli
or
scas
int
sti
push
repz
js
adc
shlb
leave
add
jle
jg
fcoms
cltd
stc
dec
pushf
fdivp
out
jp
pop
or
popf
mov
push
inc
pushf
jge
jns
test
mov
loopne
mov
mov
and
out
xchg
mov
jecxz
outsl
pop
mov
shl
jne
pop
aaa
mov
dec
push
lret
xchg
dec
es
cmp
sub
lea
and
xlat
jno
mov
adc
out
mov
mov
sbbl
lret
in
sbb
sbb
cmp
jmp
or
push
jl
inc
sahf
dec
loopne
leave
push
push
mov
js
mov
sahf
add
or
sbb
repnz
negl
cmp
xchg
adc
adc
addb
sbb
sub
add
movsl
cli
cltd
ret
or
push
mov
ret
jle
lahf
cmp
out
jge
push
stos
out
sahf
jne
cmpsl
add
dec
add
cmc
jg
inc
movb
inc
mov
cli
xchg
mov
jnp
fcoml
mov
adc
dec
cmpl
pop
ljmp
ret
dec
icebp
or
xor
mov
or
inc
inc
cmp
pop
repz
nop
push
popa
adc
jbe
dec
and
mov
bound
jecxz
xor
jg
insb
shrl
shll
int3
push
in
std
sub
xchg
lods
daa
repz
popf
and
jg
fbstp
jg
inc
pop
pop
incl
into
gs
cmpsl
xlat
les
dec
pop
xor
push
cmpl
jns
pop
incl
mov
icebp
xchg
or
cmpsl
popf
mov
cs
jo
sbb
int
iret
jl
gs
repz
jp
push
aaa
fsubrs
cmpsl
jno
mov
aad
ds
xchg
mov
iret
arpl
call
lods
call
xor
in
mov
xchg
push
movsb
testl
sbb
sbbl
adc
xchg
stc
pop
cmp
add
xchg
add
mov
das
inc
sub
dec
add
cltd
inc
ljmp
mov
mov
aad
movsl
xlat
gs
lret
pushf
xor
cs
scas
daa
cmp
push
aaa
push
mov
jle
dec
leave
int
cmpsl
arpl
push
mov
int3
xchg
mov
xchg
fmuls
lret
gs
outsl
or
xor
pop
pop
call
mov
test
jno
and
adcb
jnp
outsl
mov
scas
inc
cmp
icebp
fxch
int
aas
mov
xchg
mov
scas
lods
cmp
or
cmp
push
icebp
call
push
cmp
enter
incl
cmp
cltd
mov
pushf
and
mov
dec
iret
out
aam
cmp
xchg
jb
lahf
call
repnz
outsl
stos
sbb
mov
scas
jg
gs
movsb
jbe
das
std
cmp
pop
push
nop
inc
or
adc
aas
out
pop
cmpsl
jno
add
and
int3
arpl
pop
sub
inc
and
daa
xor
xor
xchg
add
and
inc
lods
jo
adc
add
sahf
mov
mov
xchg
loop
jns
mov
popa
out
inc
push
mov
xorps
pop
ss
test
repnz
movsl
test
dec
dec
jbe
inc
sahf
out
std
sub
inc
aad
mov
enter
lahf
popf
rclb
loopne
cmp
shr
or
stc
nop
or
and
test
mov
std
jle
xor
mov
ljmp
fiadds
pop
roll
pop
sti
xor
pushl
dec
and
psubusw
or
dec
dec
or
inc
inc
stos
pop
test
mov
movsb
lds
pop
fwait
jb
push
cli
xchg
inc
jbe
shl
outsl
sbb
fistl
mov
add
imul
xchg
add
push
scas
fiadds
movsb
mov
movsl
jns
scas
and
in
test
or
jo
or
imul
pop
adc
sbb
add
test
lock
push
lret
cmp
ret
xor
add
enter
dec
mov
add
mov
fiaddl
xlat
or
imul
push
or
dec
pop
mov
sub
lret
or
sub
add
stos
ljmp
pushf
sti
dec
or
cmp
repnz
add
jmp
xor
cld
jg
cmc
xchg
cli
jo
notl
cmpsb
push
push
cltd
or
outsl
outsl
stos
and
or
cmc
aaa
test
mov
shl
loopne
pop
fisubs
fwait
es
stc
bound
mov
sbbb
dec
push
jg
test
or
dec
dec
xchg
test
js
movsb
xor
mov
inc
js
loopne
cld
push
into
push
sub
dec
inc
pop
jb
jnp
xor
adc
push
mov
jo
cmp
add
aam
or
sti
inc
push
into
cmp
insl
sbbb
or
mov
sbb
rorl
jo
xchg
xor
mov
ret
enter
push
std
push
ret
sub
repnz
out
dec
cs
push
lea
sbb
stc
aad
add
pop
push
jae
sahf
test
dec
aaa
mov
out
sahf
or
out
out
icebp
cmpsb
aad
cmpsb
das
push
jb
repz
rorl
mov
ficoml
xchg
loope
mov
fsubr
xor
ret
negb
ss
faddp
mov
push
sbb
sbb
cmpl
sbb
mov
mov
sbb
sbb
adc
lods
add
pop
mov
rol
in
sbb
leave
rorb
inc
sub
sbb
mov
dec
xlat
shll
popf
mov
pop
outsb
cmp
call
push
or
popa
notl
mov
sub
imul
push
mov
jg
cmp
xchg
mov
or
mov
movsb
ret
adc
pop
test
idivb
or
stos
or
xor
adc
cwtl
imul
sarl
mov
fwait
sub
pop
jmp
sbb
out
or
fisubl
hlt
sbb
push
xor
sub
shll
stos
out
jl
lods
jmp
movsl
xchg
out
popa
sub
cltd
inc
lret
rcrb
dec
ljmp
jl
lea
sahf
mov
sbb
push
aas
mov
aam
lahf
inc
cwtl
mov
and
mov
sbb
jno
cli
push
add
pop
mov
loopne
outsl
pop
push
jno
xchg
cmc
push
mov
shlb
call
xor
xchg
push
stc
test
sub
ja
cmp
js
neg
addr16
in
lea
and
pop
xchg
ret
aad
cmc
mov
ja
or
pop
inc
mov
add
dec
pop
or
imul
lret
int3
mov
mov
adcl
cmp
dec
xor
rolb
cmc
lock
sbb
or
insb
push
mov
lods
lret
test
mov
ja
add
pop
hlt
cmpb
sti
mov
cwtl
cmp
push
jae
icebp
push
pop
and
das
sbb
add
lret
cmpsl
push
cmp
je
aad
in
xchg
adc
bound
sbb
popa
pop
movsl
and
adc
xor
mov
fbstp
adc
aaa
jno
cmpsb
add
push
pushf
mov
out
mov
je
sub
pop
cmpl
sbb
inc
out
pop
outsb
pop
adc
and
dec
jne
call
mov
xchg
cmp
cmp
nop
cmpsl
pop
cmp
in
xor
rolb
push
cmp
sub
dec
mov
inc
mov
fxch
pop
add
popa
fld
js
mov
mov
loopne
cltd
mov
daa
xchg
daa
sar
pop
inc
sti
lcall
pusha
jns
pop
stos
arpl
xchg
mov
nop
pop
mov
xorl
ja
mov
in
pusha
setne
jmp
lods
xchg
dec
icebp
jno
cmp
mov
cmp
lods
ja
jl
and
or
aas
sub
xor
jmp
in
mov
mov
jg
cmpsl
ret
fnstcw
jp
aaa
adc
xchg
dec
mov
idivb
out
bound
jbe
repnz
xor
push
loop
push
inc
push
push
loop
aas
je
pop
lcall
push
mov
push
add
push
push
pop
xor
xor
fldenv
ret
sbb
xchg
ss
std
int
sbb
inc
pushl
mov
or
fnsave
sub
jns
push
and
pop
aad
push
stc
cmpsl
orb
out
jge
mov
xchg
aas
adc
push
test
push
sub
stos
and
xor
and
xor
jb
mov
xor
xor
clc
sbb
das
ljmp
aas
fstpt
xor
call
and
cld
xchg
call
or
flds
jge
jle
insl
es
sbb
and
jbe
adc
das
imul
call
inc
pusha
push
insl
ret
pop
sbb
xor
pop
mov
fidivrs
adc
cs
sbb
jg
popa
jnp
test
jle
adc
mov
ja
mov
dec
adc
roll
push
mov
cmc
lcall
adc
jp
or
push
cmpsl
jne
push
rol
add
or
pusha
in
les
cmp
pop
adc
sbb
stc
outsl
les
lahf
je
addr16
mov
pop
test
xlat
sub
jno
pop
cli
sub
xor
adc
jmp
stos
pop
jo
adc
push
test
dec
xorl
push
dec
movsb
movsb
mov
sub
push
enter
or
shrb
stos
call
mov
enter
adc
loope
test
adc
adc
loop
repz
stos
jg
imul
or
bound
add
push
icebp
dec
adc
shrl
jle
jmp
mov
addr16
and
movhlps
out
gs
ret
jae
or
add
repz
es
sub
xchg
adc
mov
repz
xor
inc
mov
lods
sbb
push
jmp
popa
xor
adc
xbegin
push
dec
mov
xchg
cmc
sub
aad
enter
test
xor
sub
mov
psrlw
or
popf
fsubrs
push
dec
lret
mov
imul
pop
jno
call
dec
sbbl
sarl
mov
repz
out
leave
dec
aad
cmp
ja
pop
ret
mov
decb
sub
test
mov
test
ret
dec
pop
pop
or
pusha
sub
sub
cmp
mov
pop
xchg
sbb
movsb
push
lock
lea
inc
adc
mov
adc
sub
jno
xor
xchg
push
pmullw
lds
xor
jl
cmp
movsb
sbb
xor
pop
fidivrl
loopne
inc
push
into
in
and
aam
inc
pop
clc
shll
pop
shl
mov
and
sub
dec
aaa
mov
lret
shll
dec
loopne
and
jl
addr16
loopne
push
push
lods
notb
mov
into
pop
sti
sti
adc
mov
add
lret
dec
dec
sbb
lahf
cmp
xor
cli
cmc
mov
adc
cwtl
pop
testb
iret
xchg
push
addr16
jae
test
mov
and
mov
cmpl
aas
lcall
sbbb
leave
ljmp
xchg
lods
xor
adc
jne
imul
xchg
inc
clc
dec
mov
sti
adc
outsl
jl
jns
shrb
inc
repz
outsw
dec
mov
out
sub
push
fldl
dec
jl
je
and
push
test
adc
cli
mov
stc
adc
aam
lock
std
scas
std
xchg
and
and
mov
aaa
lock
das
mov
pop
mov
orb
in
xlat
adc
mov
add
pop
lret
cld
iret
adc
shrb
pop
ss
pop
mov
mov
or
into
jno
fldenv
aam
add
shll
les
imul
and
jb
jl
cs
test
mov
jno
inc
mov
pop
pop
test
dec
sub
pop
xor
xchg
or
mov
xchg
es
insl
stos
lret
daa
aaa
push
push
sbb
addb
pop
outsl
jp
insb
in
jge
inc
pop
inc
push
sbb
sub
arpl
out
xchg
sbb
outsl
jge
icebp
daa
adc
push
test
cmpsl
jnp
cmp
out
mov
mov
inc
mov
cmp
jg
mov
ret
push
fst
in
push
push
mov
cltd
loop
movsb
adc
push
cmp
inc
cmc
cmpsb
inc
fisttpl
mov
test
out
fisttpl
jge
jne
ss
push
and
push
in
lock
ja
cmp
or
xchg
jne
aad
stos
pop
and
dec
lcall
test
cmc
cmp
cli
test
push
xchg
aad
mov
dec
jg
call
clc
inc
in
and
dec
inc
fcomi
mov
fnstenv
sbb
push
fldcw
xchg
popl
xor
pop
mov
out
jg
dec
mov
loop
pusha
lcall
jge
mov
xchg
loopne
xchg
or
int
cld
insb
scas
cmp
loope
jg
enterw
xchg
push
add
or
push
out
mov
xchg
loope
sub
or
sbb
cld
mov
data16
repz
push
mov
ds
enter
xchg
push
fwait
cmpsl
xchg
cs
mov
dec
fld1
stos
data16
fcoml
push
inc
jb
loope
aaa
cli
pushf
mov
ss
ljmp
lea
stc
lret
add
xor
xchg
sbb
mov
repz
std
xorl
pop
cmp
pop
push
inc
dec
pop
outsb
inc
loope
mov
jne
mov
and
mov
push
popa
ljmp
sub
dec
bound
cmc
gs
cmp
fmul
arpl
inc
int
adc
adc
testl
cli
xchg
mov
loopne
mov
iret
push
imul
insb
cld
lcall
in
add
xchg
fwait
loopne
add
frstor
push
jae
adc
sbb
xlat
ljmp
mov
stos
jo
lret
mov
notb
jl
jp
sub
inc
push
popf
pop
movb
and
mov
jmp
shll
jnp
jmp
xchg
out
jo
loope
and
pushf
das
mov
test
adcl
arpl
outsb
adc
addr16
jne
das
ret
fildl
jo
xor
lods
aaa
clc
xor
jae
outsb
xorl
gs
mov
fsubrl
pusha
cmpsb
mov
push
popl
popf
lods
adc
shlb
outsl
sbb
pusha
mull
test
xchg
aas
fs
iret
imul
fldenv
mov
push
mov
mov
push
add
and
push
shrl
adc
in
or
ret
stos
xchg
fiadds
loopw
test
test
pop
ljmp
lods
mov
inc
jle
icebp
pop
loopne
fstpl
aad
or
ret
ja
andb
icebp
scas
xchg
push
mov
iret
cmp
xchg
or
icebp
fcompl
aad
in
mov
cmc
insl
pop
rcl
xor
sahf
xor
dec
icebp
lret
or
iret
mov
out
jo
insl
adc
sbb
xorb
push
sbb
cmp
xchg
testl
jb
stc
adc
fs
call
mov
xor
mov
pusha
jl
xchg
dec
mov
inc
sub
or
test
push
lods
inc
insl
les
stos
aad
lret
shl
shr
pop
pop
jae
push
imul
shl
cmp
adc
aam
repnz
lea
or
and
xchg
les
aaa
xor
repz
push
insb
hlt
inc
push
mov
loop
nop
jl
push
out
sbb
sbb
dec
pusha
mov
out
sbb
mov
sub
data16
push
and
leave
lcall
add
jecxz
lods
aam
pop
pop
call
ljmp
lock
push
stos
das
xchg
push
jmp
inc
loope
or
dec
and
lods
xor
jmp
enter
ret
or
stos
add
movsl
jmp
aam
aas
pop
mov
inc
std
xlat
test
ja
andb
ds
fcomps
lcall
movsb
ss
data16
scas
adc
cmpl
scas
stc
cltd
or
xchg
adcl
mov
icebp
ds
jg
push
dec
pop
cmovno
xor
inc
dec
jmp
adc
mov
lret
sbb
mov
es
jecxz
adcl
cmp
cmpsl
mov
cltd
cmp
cwtl
imul
hlt
push
or
in
mov
stos
daa
dec
and
push
pop
jae
leave
mov
scas
js
add
icebp
insb
add
sti
xchg
popf
add
lods
gs
jl
mov
enter
rolb
push
or
shl
int3
jns
pop
jno
mov
mov
sbb
mov
cmp
bound
inc
ret
in
sbb
push
mov
int
or
stos
out
xor
lcall
push
sub
int3
scas
lahf
out
mov
lret
or
call
mov
syscall
xchg
and
popf
clc
jb
mov
pushf
push
gs
mov
xor
sbb
fisttps
leave
sbb
jmp
dec
rorl
test
insl
or
test
push
stos
mov
add
pusha
int
ss
je
scas
dec
cltd
push
nop
sti
xchg
fistl
adc
stos
inc
jecxz
xor
or
mull
aam
add
pop
icebp
mov
sarl
inc
and
stos
pop
iret
mov
push
ljmp
into
pop
in
in
mov
insl
pop
mov
or
mov
lret
adc
lock
mov
push
or
movsl
scas
int
imul
cli
movsb
and
add
xorb
aad
sahf
jge
rorl
dec
leave
test
ja
add
vrcpps
in
pop
mov
cmp
out
pop
fs
dec
cli
push
cmp
mov
imul
push
and
insl
aad
imul
or
out
cmp
mov
and
sub
ljmp
stc
fistl
fwait
xchg
out
cld
icebp
out
jae
inc
xchg
xchg
mov
fstl
push
jae
aaa
pop
or
fdiv
dec
jl
mov
push
setl
add
push
xlat
or
sub
adc
pushf
mov
dec
dec
pop
mov
adc
push
les
jl
test
push
insb
inc
sbb
inc
xor
pushw
mov
cmpsl
insb
push
pop
sahf
add
es
and
jge
fisubrl
cli
mov
jae
sbb
sahf
mov
sti
xchg
xor
cmpsb
push
sbb
or
cli
xchg
aad
push
sahf
popa
dec
sbb
dec
sbb
mov
xchg
or
jbe
cmp
mov
lret
clc
iret
xor
adc
repnz
icebp
incl
xchg
jb
jle
sub
xor
cs
pusha
data16
loopne
push
aam
sub
sbb
push
andl
daa
lret
jb
jmp
cmpl
or
lds
push
ljmp
jno
pop
ret
gs
jge
jle
or
jmp
fwait
rcr
fs
push
in
mov
bound
adc
jns
xchg
mov
insb
addr16
shr
jl
and
and
pop
scas
jb
add
mov
fcompl
popf
sub
adc
and
lret
ret
jbe
divl
add
xchg
xchg
jb
sbb
cli
nop
mov
mov
fldl2t
xor
fwait
das
dec
aaa
and
icebp
xchg
and
aad
mov
scas
scas
inc
pop
pushf
sub
imul
adc
je
mov
cmp
lret
icebp
mov
addl
hlt
lcall
jne
jg
clc
popl
mov
pusha
or
sub
fucomi
ror
pop
jno
movsb
loop
push
outsb
pop
loope
outsb
push
pusha
xor
lret
loope
sarl
jb
popf
stc
test
fisttpll
cld
sub
sti
inc
fdivl
mov
or
sbb
mov
mov
fadd
inc
jb
idiv
xor
and
mov
and
mov
sub
push
or
dec
fistl
jbe
loopne
push
fcoms
lcall
icebp
inc
push
mov
call
scas
sbb
dec
or
imul
mov
adcl
insb
mov
les
outsb
sub
pop
pop
or
add
jmp
inc
les
and
int
and
jne
and
icebp
xchg
test
dec
int3
and
inc
push
and
nop
jmp
push
fdivrs
inc
fcompl
iret
sarb
mov
mov
ljmp
outsb
shll
push
pushf
jb
xlat
jne
fsubs
sub
add
or
repnz
int3
push
stc
sbb
sbb
sbb
pusha
dec
cmp
fadds
orl
int3
mov
mov
out
add
mov
stos
pop
into
in
pop
jl
xchg
mov
push
fndisi(8087
scas
dec
in
inc
dec
repnz
outsb
xchg
push
sub
imul
out
in
into
std
and
insl
cmc
or
mov
hlt
adc
fdivl
and
outsl
lods
fdivp
lea
xchg
pop
notb
mov
adc
lcall
and
pop
push
sub
xor
and
pop
mov
xor
xor
and
cmc
out
xchg
cmp
mov
mov
cmp
sahf
sub
pushf
imul
add
inc
and
cmp
cld
fbstp
test
mov
pop
mov
nop
mov
push
mov
aad
lods
int3
adc
stos
leave
out
stos
int3
int3
pusha
mov
sub
iret
loope
dec
mov
shll
xor
bound
xchg
jnp
jp
inc
jo
pop
popf
cmp
and
sbb
fwait
pushf
mov
ret
fcomp
push
inc
fsubrl
in
adc
adc
xchg
push
scas
sub
push
imul
nop
in
ret
icebp
adc
pop
mov
inc
pop
mov
sbb
ret
or
cmpsl
dec
jo
mov
sbb
inc
into
jbe
lea
push
adc
aas
js
jbe
adc
ret
push
inc
std
or
jmp
cmpsb
push
insl
in
test
fimuls
xchg
or
push
sub
enter
aam
dec
lret
mov
insb
or
iretw
sub
or
cmp
sti
addl
addr16
fimull
repnz
lret
push
dec
jo
out
mov
js
xchg
sbb
pop
out
dec
dec
pop
xchg
add
arpl
into
or
xchg
stos
sub
cld
and
fsubl
inc
adc
shll
test
stos
cmp
lcall
xchg
mov
jp
inc
test
out
push
jp
and
jp
inc
xor
sub
popa
cmpsb
cli
icebp
movsl
ss
and
out
ss
stos
jbe
jno
aaa
fisubrs
mov
clc
add
mov
fwait
push
scas
adc
jecxz
cs
pop
or
jne
xchg
movsl
ret
imul
sbb
dec
push
push
mov
sbbb
sbb
mov
jnp
push
aaa
cltd
je
iret
push
popa
add
cmp
ret
jmp
out
in
mov
push
outsb
test
insl
xor
xor
sahf
outsb
push
add
cmp
lods
gs
xchg
sub
sub
mov
movsb
or
sbbb
xchg
cmpsb
mov
xchg
out
sbb
aad
jb
inc
loope
test
decb
scas
xchg
divb
je
pop
mov
adc
push
outsl
add
je
clc
dec
mov
mov
rclb
test
and
xor
fsts
pop
and
lods
fildl
lds
mov
mov
test
push
push
andb
xchg
imul
cmc
jge
dec
mov
sub
jp
mov
call
test
jecxz
int3
fsubr
pop
push
shlb
std
mov
xchg
push
fchs
and
cltd
adcl
cmp
sub
es
daa
ret
mov
xor
mov
adc
cwtl
push
inc
or
loopne
inc
fsubl
adc
push
inc
and
push
jbe
dec
test
and
sub
pop
mov
lea
adc
jnp
ljmp
pop
addr16
sbb
mov
dec
pusha
mov
or
es
aas
les
loopne
into
addl
dec
inc
jae
add
loop
ja
into
adc
mov
pop
adc
add
xchg
add
lea
cmp
pop
mov
out
mov
jns
ja
add
pop
imul
cmp
dec
lods
fnstsw
push
jp
push
add
or
push
xor
nop
ss
icebp
mov
sub
pushf
lea
adc
mov
sub
scas
add
loop
mov
jle
mov
inc
lds
pop
jns
dec
xchg
ja
loop
inc
mov
mov
pop
ret
sti
xor
and
insb
popf
or
pop
inc
test
outsl
push
in
xchg
mov
leave
sbb
insb
insl
sub
fists
adc
scas
call
xchg
inc
sahf
clc
jmp
jge
cmpsl
sbb
pushf
lcall
stos
pop
sub
push
jmp
xor
add
in
lret
into
sub
xor
sbb
rol
lods
enter
sbb
mov
or
mov
xchg
pop
mov
xchg
aad
xor
inc
inc
out
dec
xchg
jo
ljmp
into
idivl
loopne
hlt
addr16
fadd
in
pop
lret
jo
aad
pop
pop
pop
or
mov
pop
dec
stos
add
out
fs
call
in
pop
adc
push
faddp
add
adc
xchg
cmpsb
mov
jnp
subb
in
sub
adc
add
outsl
inc
mov
mov
push
icebp
movsl
fldt
loope
jno
iret
outsb
lcall
xor
out
shlb
clc
rorb
jl
repz
mov
sbb
inc
inc
mov
sub
aad
sti
cmpsb
pop
jge
adc
jge
mov
call
iret
shlb
fcmovnb
pop
or
adc
mov
fisttps
mov
pop
lcall
xchg
mov
sbb
jmp
cmp
insl
push
faddl
leave
or
into
cltd
add
lods
hlt
jns
pop
lods
add
and
ret
jae
not
cmp
ljmp
mov
pop
ljmp
and
xor
or
adc
or
movsb
cltd
mov
aad
cmp
sub
dec
ja
cmp
test
inc
outsb
jl
push
fiadds
xor
andl
shr
add
add
sbb
pop
jl
xchg
mov
and
xchg
addr16
jne
add
sub
push
add
push
test
iret
popf
out
scas
xchg
lretw
and
pop
arpl
ret
in
mov
adc
sub
in
xor
ss
pop
push
inc
testl
outsb
adc
and
lret
push
jbe
sbb
fstpt
mov
lds
pop
mov
mov
int3
arpl
mov
test
rclb
insl
mov
jb
repnz
das
sub
out
sbb
sti
aas
idivl
testb
hlt
sarb
cmp
lret
data16
rolb
imul
cmp
rcll
dec
xchg
cmp
push
sub
jmp
push
inc
inc
xor
dec
cmp
push
inc
pop
fldcw
lcall
inc
mov
scas
pop
xor
mov
int3
shrl
mov
movsb
cmp
loop
ret
cs
pusha
in
mov
sbb
std
scas
ss
jnp
push
pop
pop
mov
xchg
jecxz
fucomip
iret
sub
pop
adc
dec
loop
stos
test
sahf
aas
sbb
iret
cmp
xor
in
mov
cltd
in
sarl
insl
or
pop
xor
jbe
fildll
fldl
pop
jle
orl
mov
mov
or
and
das
mov
addr16
dec
fisubrl
es
sub
cmpsb
xchg
sub
lods
fnstsw
push
clc
mov
sub
jle
and
outsl
xchg
adc
mov
push
sub
jmp
ret
ret
fdivrs
cmc
sarb
mov
xchg
mov
out
in
nop
cmp
or
imul
loope
adc
mov
insb
mov
fidivrs
aaa
xchg
outsl
adc
mov
sub
cli
inc
lcall
sbb
int3
outsl
lds
jecxz
inc
or
mov
fisubrl
daa
scas
mov
scas
add
pop
push
pop
mov
jmp
mov
in
divl
sbb
ret
inc
inc
aas
cmp
leave
repz
stos
nop
jo
push
std
push
fldt
in
into
sbb
mov
lods
xor
lods
imul
in
fnstenv
jbe
xchg
test
rcl
cmp
out
mov
jno
pop
add
loop
arpl
enter
inc
ficoml
dec
xor
push
adc
int
popa
cmp
lods
out
mov
xchg
popa
jmp
xchg
loopne
xchg
add
add
or
mov
jbe
or
test
sbb
test
or
mov
jnp
pop
fcomps
repnz
xor
lcall
sbb
cmp
ljmp
jbe
push
test
cli
adc
lret
ror
jae
insb
jns
mov
test
sbb
loopne
jnp
lahf
dec
dec
test
ja
pop
mov
je
adc
lock
int3
adc
icebp
add
sbb
adc
inc
nop
cwtl
data16
xor
adc
xchg
mov
lcall
inc
push
ds
sbb
mov
shll
mov
jae
fucom
or
lock
dec
sub
mov
das
int
add
dec
fldenv
loope
stc
mov
mov
rclb
mov
shll
pushf
dec
mov
in
mov
iret
mov
mov
in
jnp
addr16
lcall
gs
add
sbb
ja
push
xor
jo
imul
inc
je
enter
testl
jne
cs
data16
lret
mov
in
loopne
pushf
and
lock
int3
inc
sub
out
sbb
lea
jg
insl
adc
addb
jp
fsubs
sub
xchg
xor
push
pop
hlt
cmpsl
dec
mov
rorl
ss
and
ljmp
and
arpl
fisubrl
iret
jbe
cmc
push
fisttpl
xchg
adc
sub
neg
outsl
lcall
sub
pop
fs
hlt
mov
mov
popf
lods
inc
cmpsb
jae
out
js
mov
jne
xchg
stos
pop
push
mov
cltd
movsl
lds
xor
lock
iret
inc
filds
adc
aam
mov
shrb
ficoml
pop
cmp
pop
popa
into
inc
or
lds
push
mov
aas
lods
push
pop
arpl
cwtl
dec
and
icebp
push
movsb
arpl
cmp
add
outsb
mov
pop
xchg
push
mov
iret
mov
rcrl
mov
mov
mov
pushl
mov
and
mov
out
push
mov
outsl
in
xor
dec
std
xor
or
xchg
sbb
mov
je
xchg
hlt
xor
jo
stos
popa
fdiv
pop
sub
scas
xchg
cmp
popa
mov
inc
adc
aas
mov
data16
stc
jg
mov
pushf
xor
pushf
stc
popf
cld
jnp
xchg
pushf
sub
pop
pop
sbb
inc
imul
fs
aad
jg
xlat
loope
int3
fwait
clc
lret
jbe
adc
push
and
jge
xlat
add
fs
inc
testb
jo
into
or
add
mov
adc
or
daa
xor
or
data16
jl
adcb
cmp
xchg
add
shr
adc
rol
xchg
dec
add
addb
push
inc
push
add
add
das
andb
and
jno
adc
sahf
inc
pop
add
sarb
mov
adcl
popl
data16
hlt
adc
fwait
jbe
movsl
push
shr
sbb
sub
mov
push
mov
cltd
jg
popf
xor
mov
inc
mov
cmp
pop
mov
and
mov
mov
ja
sbb
lock
mov
inc
xor
into
dec
jl
imul
hlt
inc
aam
mov
mov
pop
sbbl
lret
lret
ja
lock
scas
ror
xor
cld
dec
cwtl
mov
dec
sbb
jo
add
fidivrl
stos
in
arpl
and
jns
mov
mov
lret
sbb
popf
je
add
push
xor
or
call
cmp
push
push
push
in
dec
jb
sbb
outsl
cli
imul
mov
imul
cmpsl
ficomps
ror
mov
jne
inc
lock
call
test
in
lret
xchg
lock
mov
xchg
adc
aad
jecxz
cmpsb
inc
rorl
lods
push
lds
scas
mov
mov
sbb
fistpl
push
mov
test
loopne
mov
lahf
test
sub
lods
mov
or
adc
or
test
popa
lods
xlat
data16
pop
jge
int3
dec
pushfw
push
xchg
inc
push
sub
sbb
je
call
out
aas
stos
add
mov
fstpt
movsb
push
ss
sbb
push
jae
push
xor
xchg
enter
in
cmpb
out
mov
jae
je
clc
mov
cld
push
lea
decb
in
xor
jecxz
push
lcall
mov
fldenv
scas
xchg
push
or
imul
pusha
sbb
pushl
push
stc
popf
xor
movlps
mov
and
xor
lea
jns
imul
popf
stos
rclb
div
movups
xor
negl
or
mov
cmc
fs
popf
out
push
popa
mov
mov
icebp
daa
xchg
cmp
inc
insw
in
pusha
pop
adc
xor
pop
jo
xchg
jmp
xchg
push
shll
dec
in
insl
cmp
fisubl
int
cmp
sti
jbe
shlb
scas
xlat
sub
adcb
in
shrl
pushf
cmp
sub
pop
int3
fdivrs
and
xacquire
data16
adc
scas
pop
lods
add
imul
xchg
sub
mov
into
jp
mov
jne
sbb
sub
lock
out
dec
sub
mov
jle
or
ret
xchg
dec
sbb
add
fdivl
add
dec
mov
cmp
pop
lret
icebp
mov
jg
pop
lea
fbstp
out
mov
pop
les
movsb
mov
jmp
je
pop
enter
hlt
fs
push
jne
nop
out
mov
cmp
and
insb
icebp
enter
scas
mov
cmpsb
imul
lret
adcl
scas
push
push
sahf
mov
pop
fwait
lods
cmp
stos
xchg
ljmp
cmp
rorl
scas
std
or
pop
add
shrl
xchg
ret
jbe
popf
cmpsl
push
call
ret
mov
jne
push
and
lods
dec
inc
xlat
stos
es
cmpsb
pusha
movb
repz
es
aas
repnz
into
pop
xchg
adc
jl
add
jne
ljmp
mov
pop
movsl
sbb
pusha
mov
repz
cmp
cs
fcmovbe
dec
jg
pop
jmp
xor
rep
int
mov
lods
pop
jno
xchg
jb
inc
pusha
fsubr
fucom
dec
inc
pop
mov
fidivrl
mov
mov
xor
inc
add
nop
xchg
ss
mov
in
adc
push
cmp
xor
fs
xchg
fisttps
incl
cmpsb
dec
out
and
fisubl
and
dec
int3
lret
ja
xchg
sub
mov
pop
pop
mov
pop
jp
icebp
movsb
add
in
ds
add
aam
or
js
data16
pop
repnz
inc
insb
ret
xchg
add
dec
push
push
ja
sbb
in
imul
mov
cmp
or
je
in
cmp
stc
sbb
mov
scas
mov
cmp
cmpsb
sti
push
cld
push
decb
imul
and
mov
popf
jb
mov
dec
sbb
jbe
fsubl
rorb
add
mov
sbb
loopne
mov
mov
or
das
mov
lret
sub
push
out
dec
jle
lods
xchg
lret
ret
jg
or
dec
cmp
ret
cmc
fnstenv
repnz
loop
cli
adcl
xchg
inc
test
xchg
repz
nop
jbe
and
mov
jo
dec
cmp
lahf
flds
fistl
mov
mov
punpckhdq
xchg
dec
loope
xchg
shr
in
repz
out
ja
gs
cltd
xchg
dec
xchg
int
adc
pushl
cld
sub
pusha
mov
negb
ret
outsl
jae
lock
sub
pop
dec
stc
sbb
push
fcmovne
or
cmp
sbb
push
mov
dec
aaa
ja
gs
push
jmp
pop
mov
imul
lahf
mov
inc
pop
cmp
inc
test
sbb
scas
adc
mov
rorb
imul
fsts
std
cmp
fildl
orb
or
fsubrs
pop
pop
or
aad
cmpsb
les
dec
lods
jg
das
inc
pop
aam
or
arpl
andb
ljmp
inc
call
lds
repnz
aaa
mov
stos
in
loop
mov
fnsave
inc
popa
inc
fmul
fidivrl
addr16
jp
xor
push
aaa
jae
or
inc
pop
pop
lret
mov
stc
cmp
idivb
push
jno
sbb
jb
ds
and
lahf
jne
jmp
dec
sahf
mov
add
xchg
mov
push
and
sub
mov
ret
xlat
xorb
test
mov
popf
test
ja
imul
xor
pusha
outsb
xchg
jecxz
loop
daa
pop
imul
fisubs
clc
loope
scas
ret
jge
push
push
std
out
add
leave
and
mov
ss
sub
rcrb
mov
push
xchg
xor
popa
dec
mov
jl
sub
or
sbb
loopne
frstor
add
cmp
pop
idiv
sbb
xor
nop
adc
loope
mov
adc
test
mov
add
shl
fdivrp
sub
or
jnp
mov
addr16
dec
outsl
xor
and
dec
filds
movl
ja
es
sbb
jle
mov
xor
stc
cmpb
fmuls
adc
inc
mov
pop
jp
sbb
lock
cmp
insl
mov
insl
hlt
int
js
ret
pop
testb
mov
xor
outsb
out
sbb
pop
jle
mov
ret
hlt
mov
movsl
cmp
dec
cli
xchg
mov
push
imul
mov
inc
dec
sub
pop
sahf
and
dec
mov
std
xchg
xchg
jo
daa
add
je
shll
andb
xor
out
inc
cltd
fnstcw
lret
fdivp
sarb
int3
or
pushf
xor
cmp
stc
inc
ljmp
std
imul
repz
xchg
adc
jge
lret
lret
std
movsl
cmp
into
mov
divb
stos
popf
andb
jp
out
pop
rorl
sbb
jge
sub
gs
jg
int
cmpsb
ja
push
mov
inc
jle
out
mov
test
loope
jle
mov
scas
test
ret
pop
jp
or
ss
fiaddl
or
testb
iret
cmp
imul
mov
push
and
pop
aas
push
xorl
xor
and
pusha
ss
rclb
adc
scas
call
cmp
sub
push
not
cmp
xchg
sub
fimull
loope
in
xchg
sub
add
xor
in
adc
test
sbb
lcall
out
loope
inc
call
cmpsl
popa
das
lahf
cmpl
inc
movsb
es
mov
pushf
andb
subl
arpl
ds
xor
mov
movsb
adc
adc
xor
jo
mov
out
sbb
mov
cmp
ss
sbb
xor
lds
mov
shld
sbb
or
xchg
out
and
push
insb
dec
sbb
ret
mov
inc
idivb
int
pop
add
inc
and
lea
dec
fidivl
xchg
pop
fdiv
adc
jo
mov
in
xor
mov
pushf
and
mov
cmc
js
jb
repnz
cltd
ds
mov
imul
int
mov
movsl
lods
pusha
mov
sub
and
pop
in
pop
xchg
out
pushf
sub
mov
mov
outsl
jno
push
pop
je
or
shll
xlat
cmp
bound
je
xor
push
imul
dec
fs
jl
and
add
sbb
xor
das
or
mov
fdivl
out
insb
mov
lahf
bound
add
notb
cltd
fldl
mov
gs
fcoml
adc
or
push
sub
shl
sub
fists
shlb
lret
daa
xor
lods
sub
and
sti
jae
les
rcll
sub
dec
push
cmp
fadds
mov
xchg
add
sti
jmp
jbe
or
adc
push
imul
loope
in
repnz
push
xor
xchg
xor
inc
jno
sbb
and
popf
push
sub
scas
pop
out
or
add
in
or
inc
pop
imulb
pop
fldenv
leave
lahf
fimuls
outsb
push
push
mov
push
fiaddl
in
jge
push
hlt
push
pop
sub
insl
insb
inc
sbb
and
mov
mov
push
cmp
popf
xchg
mov
je
mov
dec
rcll
cli
or
inc
fnstenv
inc
pop
xchg
sub
xchg
and
push
mov
push
repnz
xchg
inc
jns
dec
in
sbb
mov
test
cmp
xlat
js
jo
jecxz
push
push
ret
mov
popa
icebp
xlat
repz
push
inc
sbb
sub
aad
mov
mov
pushf
lock
ret
jp
daa
cmp
loopne
xorl
or
in
push
pop
iret
xchg
repnz
mov
out
gs
ficoml
xchg
push
idivl
fwait
repz
push
cwtl
clc
mov
stos
dec
cld
sti
and
adc
inc
pop
jbe
lods
icebp
cli
mulb
ja
or
push
dec
push
cltd
jecxz
ss
mov
cltd
and
sbb
frstor
ret
sbbl
pop
add
and
mov
cmp
insb
fs
mov
hlt
jnp
xchg
xor
mov
mov
jmp
enter
orb
sbb
fstl
add
ds
test
test
mov
imul
and
mov
call
add
mov
imul
sti
mov
nop
lcall
test
sbb
lea
fwait
aas
mov
icebp
sbb
xlat
lahf
push
aad
loope
cmpb
lds
push
bound
sbb
popa
jnp
insb
ds
jge
inc
xlat
pop
jp
jge
jp
roll
loopne
sub
fistpl
dec
fidivl
inc
pop
and
stos
push
es
mov
add
adc
and
jae
js
pop
mov
ret
outsl
rcl
pop
mov
aaa
in
add
jns
and
pop
lcall
ds
loope
and
adc
inc
ficoml
jle
cmc
test
iret
lods
xchg
dec
psrlq
push
sarl
scas
xor
lcall
arpl
jp
mov
or
add
aad
sahf
and
and
nop
repnz
rcrl
pushf
scas
jle
test
push
loope
dec
adc
mov
xorl
arpl
popa
add
xor
pop
popa
add
push
sbb
das
adc
fnsave
mov
std
mov
test
dec
and
and
pop
scas
mov
and
push
mov
pop
movaps
and
outsb
call
or
xor
mov
jg
push
ljmp
xchg
inc
and
shlb
lret
fidivs
gs
push
fcoms
push
inc
in
scas
push
in
add
test
into
arpl
jmp
inc
call
addr16
test
ret
add
inc
pop
daa
stos
jp
lret
pop
adc
mov
jne
and
xchg
mov
nop
xchg
enter
pop
call
or
dec
ffree
cwtl
stc
aad
xor
fistl
ljmp
stos
xchg
jne
ficompl
lahf
dec
cltd
ss
out
or
dec
sbb
mov
popa
add
shr
jb
mov
scas
sbb
mov
lret
dec
lahf
ja
mov
js
movsb
fnstenv
jecxz
hlt
in
mov
int3
pop
call
popf
xor
pop
push
inc
pushf
lods
dec
jl
cli
mov
sti
lods
and
lahf
push
push
lds
push
inc
add
inc
int
push
cld
filds
into
xor
sub
cli
stos
inc
jbe
xchg
scas
inc
ljmp
jb
shll
scas
cli
push
sbb
sbb
fisubl
enter
push
in
je
sbb
jmp
and
daa
pop
jnp
fyl2xp1
cli
and
pop
xor
aad
in
dec
adc
dec
fnstcw
mov
dec
mov
cmp
aas
ss
stos
mov
mov
push
push
fwait
ss
push
inc
push
sub
nop
inc
in
pop
pop
outsb
pop
ficompl
sbb
pop
sub
pop
jg
rorb
fidivrs
popf
push
push
mov
pop
lret
xor
pop
rcll
mov
inc
xchg
inc
pop
mov
dec
fstp
lods
sub
mov
xchg
dec
xchg
xchg
mov
iret
lock
cwtl
sbbl
jae
sbb
loope
shll
jnp
xor
or
dec
stc
popf
loope
fs
add
cld
ret
popf
or
inc
mov
frstor
adc
test
lea
xor
lahf
push
push
fisubs
fistpll
hlt
data16
and
int
dec
or
shr
push
insb
fucomip
ja
mov
shll
movsl
fdivl
push
push
leave
fnstenv
sub
lahf
nop
pushf
jl
int
push
fisubs
cwtl
stos
test
fucomi
call
or
mov
push
pop
test
sti
mov
pop
push
push
bound
jg
outsb
lcall
mov
add
ret
inc
stos
mov
imul
or
pop
imul
or
cmpsb
lea
add
cmp
test
cmp
fnsave
and
mov
stos
loop
std
aam
daa
fidivs
iret
pop
cltd
shl
pop
push
mov
cmp
loope
inc
jns
inc
and
xor
out
repnz
fwait
cmpsl
shrl
scas
jno
js
mov
mov
pop
inc
add
adc
xchg
divl
cld
fisttpl
into
cmpb
rcl
mov
pop
xchg
data16
test
jl
xchg
inc
push
stos
jbe
call
add
sarl
inc
nop
mov
inc
or
pusha
jg
and
stos
xorl
or
xchg
fisttpll
push
mov
jo
out
in
jp
sub
adc
xchg
stc
dec
cmp
dec
outsl
loop
mov
jns
sarb
mov
jae
ret
pop
inc
in
push
call
jle
mov
jns
aad
lock
pop
sbb
xchg
je
in
gs
push
pop
push
push
add
lea
daa
cmp
in
std
jmp
andb
lock
stos
fdivrs
orb
jge
adc
gs
xor
lret
pop
mov
xchg
pop
mov
push
je
xchg
sub
mov
jecxz
or
sub
and
fnstsw
daa
je
push
jecxz
add
rcll
mov
inc
and
aas
andl
inc
push
hlt
roll
push
es
popa
jnp
push
ja
mov
fnstenv
jmp
mov
push
subb
int
mov
sub
leave
int3
sahf
ja
sbb
shr
pusha
cmp
andb
clc
push
mov
and
fiadds
sub
shlb
xchg
repz
and
mov
add
fdivrs
out
enter
movsb
faddp
jnp
fsubrl
stos
mov
adc
mov
jb
shl
sub
fdivrl
dec
cwtl
mov
filds
push
inc
mov
repz
fnstsw
xor
xor
mov
inc
scas
inc
push
mov
mov
aaa
jo
addl
call
aas
lods
je
xchg
jae
pop
movsl
repz
shlb
xor
fs
or
mov
xchg
xor
adcb
sbbl
or
jle
data16
stos
mov
jae
and
inc
cld
xchg
insl
adc
fcomps
loope
and
push
jmp
xchg
jo
imul
sarl
mov
sbb
xchg
adc
ljmp
push
mov
dec
lcall
add
mov
fstpl
stos
mov
mov
sar
jp
jg
xchg
xchg
das
xor
push
mov
lods
idivb
inc
shr
pop
cs
into
loop
mov
test
lock
in
jl
lcall
imul
daa
mov
sub
inc
into
gs
xor
jge
faddp
cwtl
xchg
or
gs
inc
cltd
fidivrs
fs
pop
add
xlat
fwait
jmp
push
sbb
cmp
arpl
jno
adc
stos
dec
hlt
sbb
imul
jne
pop
mov
sar
adc
dec
xor
movb
in
insb
test
hlt
cltd
repz
push
fsubs
das
cmp
mov
stos
push
xlat
dec
movsl
in
xchg
sbb
mul
js
dec
mov
mov
popa
xchg
arpl
xchg
jg
jge
mov
sarb
leave
movsb
cmpb
out
nop
mov
in
or
imul
repnz
les
arpl
hlt
int
push
les
or
out
cmp
cmp
add
xchg
lahf
and
xchg
sub
cmpsb
xor
test
test
rclb
into
dec
push
xlat
pop
fstpt
popa
clc
scas
ljmp
and
push
popf
push
leave
lahf
mull
dec
out
cmp
push
pop
cmp
cmp
shr
xor
ss
sub
fwait
or
inc
stc
pop
pushf
xlat
orb
lods
dec
pop
hlt
scas
add
mov
pop
int
bound
cmp
fisttps
or
in
mov
aad
jp
inc
fcmove
push
imul
mov
mov
cmpl
pop
pop
or
mov
in
pop
clc
and
fistpll
lds
mov
push
lds
cwtl
and
push
add
test
fists
fwait
push
andl
inc
test
adc
push
add
lock
and
lcall
pop
xor
es
movsb
jmp
roll
mov
and
mov
push
fadd
xor
jmp
xchg
xchg
in
mov
adc
aaa
mov
add
and
dec
jmp
cli
mov
xchg
out
push
jne
loopne
add
and
adc
xchg
movsb
sub
push
movsl
pop
test
mov
inc
call
aas
jno
inc
scas
jbe
mov
dec
add
scas
and
aad
ret
mov
xchg
insb
dec
cmpsl
push
xor
dec
dec
sub
jno
and
mov
ss
xor
sub
sti
push
cs
in
mov
sbb
jo
mov
cmp
fldl
mov
pop
repz
pop
hlt
mov
mov
scas
notl
insl
stc
sbb
lea
out
mov
cwtl
pop
xor
popa
popf
xchg
xchg
jge
ljmp
dec
fistpll
mov
adc
xor
imull
lods
shll
in
aam
cmp
jbe
outsb
and
mov
push
inc
fxch
std
mov
js
fstpl
loopne
push
push
insl
in
stos
xor
inc
cltd
mov
mov
movsb
xchg
cmp
cmc
test
mov
aam
cmpb
mov
cmp
pop
mov
mov
jno
repz
int3
xor
mov
xlat
cmc
fwait
call
xchg
mov
out
cmpsb
jns
sub
pop
push
aas
sbb
stos
push
pop
mov
std
les
out
mov
mov
popa
sub
xchg
adcb
out
push
jns
mov
scas
andl
sub
les
push
lods
push
arpl
aaa
xor
push
mov
mov
push
mov
pop
and
pop
cmp
das
in
dec
fistpl
notl
jle
xorb
pusha
pop
iret
orb
sti
and
and
pop
jl
inc
test
out
in
jl
xchg
mov
leave
scas
sub
out
fnsave
inc
addr16
or
je
stc
or
jno
mov
cmc
sub
dec
fsts
aam
stc
repz
or
int
stc
setb
lds
mov
pop
mov
jne
pop
imul
dec
lds
lock
fcompl
sbb
sub
inc
or
ds
ja
je
mov
pusha
or
insb
cs
sahf
mov
sub
cli
pushf
addr16
sbb
xor
cmp
cs
sub
clc
lea
sub
xor
ds
call
mov
ret
or
add
dec
mov
sub
xchg
lea
in
ja
inc
outsb
xchg
mov
ss
pop
pop
cmp
inc
out
jmp
fnstenv
in
lock
sbb
mov
cmpsl
dec
jge
in
aaa
mov
out
aaa
subl
sub
test
xor
std
in
les
fcmovne
cmp
pop
mov
sub
int
pop
mov
pop
xchg
mov
in
jecxz
lret
jnp
ja
sub
jmp
mov
vmovapd
cmc
loope
jmp
mov
add
sti
jp
mov
stos
sub
sbb
into
pop
sti
testl
into
jne
movsb
mov
pusha
movsb
cld
push
testb
aas
push
fldt
call
ret
sbb
jmp
lahf
repnz
pop
insb
xchg
les
cmp
lret
lahf
testb
lock
into
fisubs
inc
sbb
push
jns
xor
test
scas
scas
inc
sbb
std
mov
adcb
sbb
lea
lods
dec
fistps
cwtl
adc
repnz
js
mov
addr16
cwtl
cwtl
stc
lea
sbbl
cwtl
mov
mov
mov
mov
ret
or
insl
inc
jbe,pt
xchg
daa
inc
lcall
dec
or
mov
roll
out
hlt
mov
mov
dec
xor
and
outsl
push
and
jle
addr16
subb
testl
mov
cmp
ds
mov
addr16
in
cs
mov
mov
sub
lahf
and
call
or
xor
decl
cmpsl
dec
adc
mov
mov
fildll
push
cmp
push
ljmp
xchg
mov
loopne
out
imul
stos
aam
adcb
bound
idivl
inc
aam
sbb
sub
js
cltd
loope
icebp
vdivsd
shrl
lcall
jbe
inc
les
lret
fmul
imul
mov
cmp
mov
push
pushl
mov
ficoml
stc
pop
cmp
adcb
push
or
ljmp
rorb
les
add
nop
mov
jle
cmp
inc
arpl
pop
adc
mov
mov
sbb
loop
call
enter
cmp
call
adc
call
ljmp
dec
push
sub
inc
jb
xchg
movsl
pop
cmp
popf
inc
inc
dec
cld
dec
gs
inc
push
test
lods
inc
out
ret
dec
mov
push
lret
ret
out
mov
int
cmp
jne
lods
cmpb
sub
pop
into
dec
inc
decl
jns
lock
icebp
and
add
add
mov
out
push
es
loopne
jo
ss
dec
or
and
add
out
push
in
mov
insb
adc
xlat
cmp
sti
jno
xor
ds
push
lcall
mov
test
jae
xchg
pop
mov
xor
cmp
pop
test
mov
into
and
inc
inc
popa
lock
and
jbe,pn
xchg
push
dec
imul
loopne
out
cmpsb
imul
aam
scas
dec
insl
in
dec
fsub
inc
fisttpll
fwait
xor
test
cmp
fs
mov
clc
sbb
jmp
jp
xchg
dec
and
push
inc
fsts
lahf
mov
lret
icebp
pusha
xor
mov
js
test
test
jmp
test
mov
mov
mov
inc
loopne
and
pop
push
add
and
into
int
repz
jle
or
inc
lea
xchg
insl
mov
mov
or
jmp
aas
jecxz
les
xor
ss
or
push
xchg
rep
daa
jle
adc
pop
sbb
or
add
mov
ds
xchg
ljmp
jmp
adcl
dec
sub
push
mov
dec
cmpsl
dec
mov
call
outsl
rorb
cmp
mov
insb
or
fcmovnu
sub
adc
inc
xlat
ljmp
mov
pusha
lret
lret
dec
bound
mov
mov
push
lea
shr
ja
es
cwtl
push
pushf
stc
das
imul
vfnmaddps
mov
adc
mov
outsb
sbb
add
cmp
rcrl
xorb
sahf
and
es
dec
nop
xchg
adc
imulb
cld
cmp
mov
push
popf
test
mov
stc
movsb
inc
gs
int3
push
or
and
jg
pop
in
mov
in
test
or
sub
pop
xchg
jg
jae
lock
das
rolb
jge
pop
jo
lahf
icebp
sbb
mov
fmul
ljmp
adc
gs
stos
or
sub
and
and
ret
adc
mov
cmpsl
dec
lretw
pop
jne
or
ds
xor
mov
icebp
xor
arpl
sbb
popf
pop
ret
jae
pop
ret
push
mov
mov
jl
and
mov
addr16
repz
mov
lahf
mov
rol
add
push
nop
inc
inc
cmp
xchg
stos
cltd
hlt
sbbb
mov
orl
cltd
stc
xchg
dec
mov
js
xlat
in
adcb
adc
stos
lea
data16
out
sub
jp
dec
dec
pop
push
imul
and
movsb
movsl
xchg
xchg
xchg
pop
repz
and
sub
push
push
pusha
adc
sbb
mov
xor
xor
sub
inc
push
add
jg
push
cwtl
insb
xor
push
push
rclb
or
mov
fidivl
test
jg
loop
push
ja
xor
mov
movsb
xor
daa
add
sbb
add
mov
into
mulb
fchs
mov
movsb
scas
add
sub
inc
inc
push
outsl
sbb
push
sbb
mov
adc
pop
repz
and
iret
xlat
and
addb
loop
and
fstpt
clc
sub
pop
mov
and
shll
dec
jno
or
lcall
mov
pop
aam
dec
movsb
jns
popa
aam
ljmp
call
into
ds
or
notb
cmc
lea
cs
cmc
test
stc
adc
aam
adc
dec
push
push
xor
xor
mov
bound
dec
test
lods
cli
in
jecxz
jne
sub
je
imul
imul
and
and
ljmp
dec
sub
xor
aaa
push
fnsave
push
mov
movsl
cmovno
dec
mov
movsb
repnz
inc
iret
fnsave
test
sub
push
popa
jb
jno
ljmp
pop
push
mov
jns
jae
inc
sub
cs
repz
sub
mov
aam
iret
popa
add
adc
pop
jns
xor
std
or
and
cmp
or
pop
out
adcb
pop
cmpsb
xor
mov
cmpsl
rorl
push
fucomi
repz
ds
es
cmp
ja
mov
jp
or
inc
js
cltd
ds
mov
ret
iret
jbe
xchg
aam
jge
mov
and
into
in
add
sub
dec
add
lcall
adc
sbb
xlat
repz
mov
mov
ficompl
sbb
xchg
out
mov
push
in
jmp
sti
sbb
pop
cmc
add
push
add
shrl
lcall
int3
push
sub
mov
adc
or
lods
adcb
mov
jl
and
xor
sbb
add
fidivrl
loope
gs
jge
popf
aad
out
xor
andb
inc
add
std
pop
test
orl
adc
aas
loope
in
and
cli
cwtl
je
mov
scas
mov
mov
mov
mov
sbb
sub
outsb
std
mov
jae
push
mov
push
js
dec
rcrb
jmp
fsubrs
test
in
push
inc
cmp
cmp
mov
arpl
das
pop
stos
mov
faddl
jp
adcl
ss
cmp
bound
jecxz
std
mov
inc
xlat
pop
cmc
stos
ret
lea
mov
push
cld
stos
stos
and
dec
das
addr16
test
and
fdivrl
adc
and
mov
outsl
xor
inc
push
aam
jbe
and
mov
adc
fidivs
clc
pop
and
dec
lcall
lock
in
mov
sbb
stos
inc
sub
or
mov
insb
add
jg
xchg
leave
testl
and
push
in
sbb
dec
push
std
lock
jne
js
inc
xchg
insl
cli
adc
mov
jecxz
pop
lcall
mov
in
push
cld
jbe
mov
mov
popa
daa
scas
mov
pop
rorl
jno
cs
movsl
arpl
rclb
bound
int3
jo
xorl
sbb
inc
dec
xor
mov
jmp
pusha
jl
sbb
and
popa
push
adc
ja
repnz
cmp
or
xchg
arpl
push
dec
or
je
jge
scas
push
test
dec
ss
mov
mov
pop
push
hlt
pop
orb
cmp
loope
cmp
enter
pop
lods
adc
fstps
lahf
outsb
sbb
xor
popf
pop
lods
add
pop
lahf
in
popa
aad
mov
inc
jo
daa
mov
into
mov
scas
mov
cs
test
pop
mov
pop
and
push
inc
dec
jno
inc
mov
dec
int
dec
pop
or
or
cmp
sub
sub
xlat
call
je
lods
hlt
test
addr16
orb
push
mov
setno
popa
outsl
cmp
pop
es
adc
mov
and
cmp
jge
lret
pop
adc
sub
dec
fidivs
adc
pop
fcoml
mov
cltd
push
add
mov
or
outsl
cmp
in
jmp
mov
push
imul
addr16
into
ret
push
js
pop
add
jmp
push
addl
insl
and
ss
xchg
and
stc
sub
dec
scas
adc
inc
icebp
dec
add
add
inc
push
sarb
fistl
push
xchg
adc
pushf
movsl
pop
mov
fistpll
jge
sbb
mov
mov
sbb
xor
es
lret
pushf
pop
jl
shll
fistpl
mov
out
lcall
pop
loop
test
cmp
sti
sub
jp
pop
mov
lcall
fisubrl
out
inc
push
ret
fs
or
adc
fucom
sub
and
and
and
lods
inc
int
push
cmp
add
call
mov
in
divl
cmpsl
mov
adc
push
push
hlt
jg
testl
pushf
sahf
pop
test
cli
add
in
sbb
jecxz
push
out
xor
in
rorl
out
jns
xchg
cmp
lret
out
mov
inc
mov
inc
call
lahf
dec
and
dec
pop
mov
arpl
mov
sub
ljmp
xor
popl
mov
jg
add
jns
and
fisubrs
fsubrl
push
fnstenv
call
mov
xchg
bound
jb
call
and
stos
lret
sti
or
jbe
adc
std
psadbw
in
int
inc
std
scas
shl
ss
aaa
out
jo
cmp
pop
sbb
pop
xor
lcall
sub
pop
repnz
mov
inc
enter
lahf
in
loope
hlt
jle
ror
dec
fbstp
imul
pusha
add
pop
test
dec
adc
adc
pop
stos
add
cmp
jne
cwtl
xor
sahf
pop
out
dec
test
mov
jl
or
push
in
out
sub
xchg
je
lss
dec
in
mov
jle
jb
adcl
adc
in
or
cmp
leave
orb
add
mov
sub
inc
popa
xor
add
pushf
jp
testl
push
das
push
pop
dec
aad
out
xchg
lea
call
mov
xsha1
cmpsb
or
shrl
push
gs
dec
adc
enter
repnz
mov
sti
cmpsl
sub
ds
push
cmp
dec
push
xchg
adc
xchg
xchg
sub
ss
aad
sbb
iret
pop
insl
inc
or
je
lods
outsb
mov
outsl
push
mov
lods
out
mov
mov
data16
xchg
or
jp
lods
out
cmpsb
mov
pop
fistpl
pop
mov
cld
out
insb
xchg
mov
std
xchg
aas
mov
testb
cmp
xchg
ss
ljmp
mov
xor
pop
mov
iret
fsubs
mov
pop
cltd
int
fildll
push
mov
and
es
or
sub
lds
xchg
sub
xchg
mov
dec
xor
xor
rol
bound
in
leave
lret
aam
jnp
mov
ficomps
mov
inc
aaa
scas
sbb
sbbb
xchg
leave
dec
out
mov
adc
cld
movsl
aam
mov
lods
mov
or
adc
mov
push
sub
mov
fucom
push
pop
fisttps
sbb
lahf
daa
sbbl
adc
push
fsub
nop
aas
mov
xor
adc
push
cli
adc
sbb
fmull
mov
pop
ret
mov
fsub
xor
aaa
mov
dec
fdivs
cmp
xor
pop
jecxz
mov
cmp
sub
cmp
add
jmp
rcll
add
dec
adc
dec
jnp
cmpsb
lahf
pop
xchg
rcrb
xor
sbb
push
loope
pop
jbe
add
push
stc
jo
call
push
int
xor
adc
in
mov
push
mov
mov
mov
sub
dec
dec
fnstsw
mov
xchg
outsl
lods
clc
mov
nop
push
inc
inc
test
movsb
xor
ds
neg
loopne
push
das
popa
or
sub
addr16
jge
mov
xor
add
dec
push
in
ds
jle
pop
lock
fstpl
in
sbb
daa
imul
pop
fst
inc
cld
cmc
inc
xchg
cmp
mov
adc
xor
arpl
sbb
jmp
or
pop
daa
jno
or
pop
loope
popa
fcompl
inc
mov
push
sahf
and
pop
mov
push
lock
movsl
leave
xor
repnz
xor
mov
popf
jmp
inc
jg
mov
mov
jl
pop
out
test
mov
lret
jge
popf
bound
stc
test
aaa
sbb
cli
out
lods
xor
adc
popf
sub
clc
cmp
inc
lds
in
out
or
outsb
pop
out
mov
mov
and
sub
inc
or
mov
cmp
ret
push
test
and
shll
sbb
jns
add
in
imull
jne
push
ds
mov
pop
push
and
jb
mov
fwait
xlat
cmc
mov
jle
pusha
add
mov
inc
ss
enter
and
adc
or
lds
mov
sub
je
pop
es
popa
xchg
inc
sbb
xchg
mov
or
arpl
inc
test
je
mov
clc
sbb
mov
cld
dec
stos
imul
ret
es
in
out
rorb
sub
dec
xorb
sti
push
add
cmp
xor
outsl
mov
pop
insb
pop
sbb
xor
data16
mov
movsb
ja
fcomps
ljmp
push
push
add
xorl
or
xor
movsl
xchg
add
mov
add
imull
mov
in
pop
insb
test
or
dec
mov
push
mov
jl
lcall
nop
mov
mov
nop
or
mov
cmpsl
pop
sub
jecxz
aas
xchg
dec
lods
xchg
rcrl
sub
out
cmp
les
mov
int3
mov
push
push
lock
int3
pop
std
xchg
mov
xor
pmaxsw
out
ret
mov
hlt
mov
shll
adc
sub
inc
mov
aam
out
fldcw
jns
test
imul
cmp
jne
addb
sahf
mov
lahf
mov
fldcw
inc
in
aas
pop
xor
ficoml
test
push
mov
cltd
out
out
nop
mov
dec
inc
test
cwtl
movsb
dec
out
ret
fidivs
lcall
outsl
mov
roll
add
call
xor
or
es
jne
loope
or
ljmp
stos
push
rolb
out
xor
mov
mov
ficoms
cmp
xor
or
add
mov
out
push
jo
xchg
jno
std
call
sti
push
outsl
jae
sti
sub
negb
aas
jecxz
icebp
jb
xor
mov
in
dec
mov
arpl
shrl
or
test
mov
sbb
es
push
stc
push
mov
push
scas
push
sub
lds
sarl
pop
mov
out
jnp
sub
pop
repz
mov
sbb
fsubs
mov
into
enter
add
lret
xchg
leave
mov
dec
mov
fidivl
inc
cmp
dec
mov
ret
xorl
cmpsb
cmp
sti
fnstsw
dec
loope
xor
xchg
and
imul
sahf
mov
in
aas
scas
jg
rcll
dec
les
and
xchg
xchg
mov
ja
jmp
push
filds
pop
jne
repnz
and
mov
adc
mov
jnp
adc
rolb
test
loopne
mov
jb
fldt
xorb
sub
dec
mov
mov
lret
xlat
sahf
mov
stos
aad
orl
idiv
iret
cmpsb
or
aad
sbb
pop
cmp
pusha
rcrl
mov
mov
testb
mull
in
repnz
xchg
popa
adc
mov
xchg
stos
cwtl
xor
sbb
pop
fistps
mov
push
mov
rcrl
mov
push
adc
and
push
ss
sub
testl
out
ret
cmpl
inc
cmpsb
dec
sbbb
cmp
add
in
fwait
outsb
xchg
addr16
sbb
loopne
push
cli
aaa
out
sti
stc
and
ret
or
push
test
jne
push
outsl
lods
sahf
popa
pop
add
jno
mov
mov
out
mov
pop
dec
mov
ds
rcl
pop
and
add
jnp
test
inc
push
inc
push
rorl
mov
fldcw
lret
popa
lret
jmp
xor
cmp
or
test
loopne
inc
ret
sub
fwait
ljmp
mov
fdivrl
das
xor
pop
jns
in
test
adc
es
push
or
mov
nop
lds
pop
xor
xor
stos
test
adc
outsl
shlb
mov
icebp
sbb
lods
and
push
addr16
sbb
push
dec
lods
jp
pop
insb
mov
and
lods
lcall
xchg
adc
push
in
icebp
sti
rolb
ret
cwtl
mov
les
cmp
popa
int3
push
sbb
sbb
jns
pop
mov
jge
or
ljmp
lock
inc
or
in
adc
mov
dec
in
in
out
cmp
sbb
cmp
ficoml
add
jecxz
push
lcall
mov
sub
iret
inc
and
lods
gs
in
shr
cmp
cld
fs
cmc
lods
stc
push
sub
movsb
pop
jge
mov
ret
loope
pop
gs
popf
add
mov
xor
pop
jb
mov
xor
or
daa
int
stc
cmp
inc
inc
jb
fs
pop
inc
cmpsb
pop
add
jno
pop
or
add
jge
cwtl
mov
mov
dec
out
jecxz
rolb
or
and
test
lret
push
scas
and
or
add
enter
cmp
xchg
push
rorb
cmp
sti
into
paddusw
push
psraw
mov
stos
shr
push
xchg
cs
push
or
imul
das
push
sbb
xor
scas
push
push
in
das
and
testl
ljmp
jne
and
stos
loope
call
fadd
outsl
jnp
int
imul
inc
bound
jbe
inc
add
push
jmp
jl
addr16
add
mov
sarl
daa
pop
xor
xor
dec
sahf
divl
add
ss
jae
add
aas
inc
mov
insb
jo
mov
fimuls
pop
add
mov
aas
es
scas
push
jle
inc
fcompl
mov
das
or
dec
push
cs
cmp
add
out
decl
push
jmp
jl
or
lock
fs
push
xchg
jp
rorb
push
stos
lahf
dec
in
inc
ror
insb
add
insb
fists
into
fdiv
pushl
sub
gs
in
cmp
mov
or
mov
add
mov
fsts
push
pop
and
sti
outsl
push
sub
xor
lahf
lea
pop
movsl
arpl
mov
jbe
stc
lods
mov
and
mov
rorb
incb
in
mov
scas
mov
cmp
dec
jecxz
int3
popf
push
leave
mov
add
mov
mov
popf
pop
icebp
fldl
mov
or
lock
pop
xor
cltd
xchg
fiaddl
rcr
test
ret
sbb
xchg
loopne
mov
out
movsb
jecxz
and
adc
and
jno
push
mov
or
std
popf
dec
and
push
insb
sarl
lods
inc
push
loope
sbb
mov
xlat
push
ret
cmp
in
insl
shll
mov
inc
adc
movsb
xor
pop
add
fdivl
test
cli
xchg
inc
bound
lahf
out
loopne
push
fstl
add
mov
xlat
mov
push
pushf
lock
inc
daa
mov
pop
fs
fs
mov
jmp
aaa
gs
cli
xor
sub
dec
in
jbe
leave
out
push
sub
ss
mov
repz
dec
loope
push
push
inc
ret
es
push
in
or
mov
xchg
sub
cld
mov
xor
and
cli
and
gs
es
adc
xchg
adcl
int
cmpsw
lock
lods
add
xchg
xchg
lods
dec
adc
shll
loope
push
lock
testl
std
inc
icebp
cmp
pop
push
cmp
lcall
inc
xlat
jg
xor
in
adc
mov
and
xchg
mov
and
test
loope
jb
movsl
xor
test
pop
sbb
adcb
mov
popf
xor
mov
mov
xor
mov
xchg
sub
xchg
es
stos
daa
mov
or
lea
adc
push
fcmovne
popa
or
jle
push
mov
vhsubpd
mov
add
and
outsl
aas
rolb
movsl
pop
in
pop
insl
pabsw
xor
push
outsb
out
insl
and
fidivs
test
mov
cld
xchg
pop
jne
bound
repz
mov
sub
dec
sarb
pop
hlt
aad
dec
jl
outsl
mov
and
int
push
addr16
xchg
and
cwtl
and
je
stc
decl
sbb
pushf
popa
add
pop
loopne
xchg
aas
ret
cmp
or
cmp
mov
adc
sbb
nop
cmp
out
ds
popf
outsl
nop/reserved
mov
adc
inc
lcall
out
push
sbb
aas
fiadds
jnp
push
push
jns
xor
cwtl
xor
xlat
aam
mov
or
sti
in
mov
bound
fdivl
sarl
clc
into
dec
sub
repnz
sbb
cmc
arpl
push
mov
mov
adcl
pop
bnd
aas
enter
fists
addb
add
repz
and
adc
daa
outsl
and
mov
sub
fs
std
test
dec
add
push
enter
aas
jl
in
xchg
sub
fisttps
in
xchg
cmp
xorl
xor
jp
push
adc
dec
cmp
mov
lret
outsl
inc
arpl
dec
enter
push
shll
xor
dec
insl
pop
push
ret
ret
pop
add
or
mov
sbb
xchg
xchg
inc
sbb
sti
es
cmp
dec
divb
mov
xlat
push
xor
fs
sub
jp
and
cmpb
pop
adcl
loopne
rolb
fwait
mov
outsl
sub
and
mov
lret
test
dec
movsl
ljmp
int3
mov
adc
fsts
xlat
aaa
push
clc
pushf
gs
sahf
xchg
sub
pop
sbb
mov
push
push
and
daa
or
pop
fwait
std
jg
outsb
xchg
addr16
adc
xlat
lret
push
lret
jmp
cmpsl
sbb
xchg
adc
or
jmp
push
push
push
mov
insb
jmp
out
cmpsl
out
inc
aaa
scas
sbb
mov
mov
pop
pop
ficoml
out
dec
loope
pop
subl
jo
stos
cmpsl
call
test
add
ja
pop
popa
cld
notb
subl
mov
xchg
mov
mov
in
les
mov
and
cmp
pop
lea
wrmsr
or
fdivrl
shrl
pop
hlt
and
cmp
das
adc
push
jns
xchg
mov
dec
lock
in
pop
mov
loopne
mov
push
out
rolb
xor
sbb
cwtl
das
dec
nop
stc
iret
int3
stos
xchg
sbb
mov
int
mov
stos
aas
ds
retw
incl
adc
in
push
data16
sub
jae
and
shll
subl
enter
test
icebp
cmp
inc
out
mov
sub
shlb
shrl
lea
outsb
cmp
call
imul
movsb
es
add
lahf
sbb
lock
call
push
outsb
fdivs
mov
cmp
test
in
mov
dec
cmpsb
testl
push
out
sarl
xor
push
loope
nop
pushf
sbb
adc
nop
dec
jge
ret
inc
loop
dec
sbb
pop
rclb
stos
hlt
sub
cmp
imul
and
lret
cmp
test
imull
pop
into
int3
in
stc
leave
inc
jl
loop
sbbl
lcall
in
nop
or
pop
mov
cmp
mov
repnz
dec
push
mov
test
add
dec
shll
mov
loopne
cli
and
push
xchg
mov
cmpsb
push
sti
dec
in
mov
jl
imul
lea
push
loop
cmp
mov
pop
out
loope
mov
inc
movsl
test
push
movsb
out
or
mov
faddp
lret
lret
or
cmp
cmpb
xchg
shl
mov
gs
jp
pop
in
sub
inc
push
xchg
jle
ja
ret
mov
lret
and
push
mov
xor
movsb
add
out
aad
push
mov
hlt
xchg
int
jp
push
mov
dec
scas
xchg
jg
cmp
mov
fnstcw
push
movsb
leave
int
mov
dec
xor
inc
out
in
inc
mov
pop
movsl
cmpl
sbb
inc
pop
xor
add
scas
in
repz
pop
nop
pop
cmp
divl
mov
inc
pop
sbb
mov
lahf
mov
jl
rol
enter
shlb
xchg
mov
dec
test
jno
dec
inc
push
std
dec
xor
jmp
mov
fwait
test
lcall
ret
pushf
arpl
daa
icebp
mov
je
inc
xchg
cmc
fisubl
cmc
fcmove
test
loope
xor
int
or
cmp
loop
add
daa
es
fmull
test
and
sbb
mov
add
in
and
mov
pop
es
fbstp
pop
sub
mov
push
push
shrb
inc
or
leave
lds
fstl
adc
fsubrp
mov
int3
sub
mov
gs
mov
push
call
mov
aaa
sahf
mov
cmp
sub
mov
lea
cwtl
inc
push
xchg
scas
test
mov
xchg
enter
push
jmp
and
repnz
push
push
dec
or
lret
subl
hlt
push
inc
pop
aaa
ss
popa
lock
test
jp
loopne
lds
xchg
jnp
mov
cli
mov
cmp
sbb
jg
push
mov
xor
jle
xor
pop
pop
sbb
add
lea
mov
insb
fildl
sub
inc
sbb
xor
jnp
nop
inc
sbb
dec
mov
out
push
es
aad
inc
loop
cmpsb
icebp
adc
xchg
insb
mov
inc
mov
pop
push
aas
sbb
sub
loopne
inc
addr16
outsl
push
sbb
hlt
sub
or
mov
movsl
lock
iret
lahf
jb
inc
mov
dec
xor
cmpsl
mov
scas
ja
sbb
push
fldl
loop
in
xlat
cmp
xor
sbb
popf
push
xor
cli
jmp
sub
insb
add
sub
outsb
dec
xlat
or
cmp
push
mov
cmpsl
lret
bound
ljmp
dec
jbe
jl
sub
or
pop
or
push
jmp
mov
xor
jne
loope,pt
xchg
push
lock
sbb
and
sbb
xchg
adc
lods
jp
sub
push
mov
adc
jl
inc
sub
ja
inc
mov
leave
sbbl
out
insb
sti
lret
dec
mov
xchg
dec
popf
dec
arpl
sbb
dec
pop
fldl
das
stos
lahf
cmp
sbb
jnp
fsubl
adc
movsl
lea
notl
jns
sub
mov
mov
inc
adc
add
test
cmp
pop
std
adc
xor
xchg
pop
push
shlb
or
jl
lods
inc
sahf
jns
jbe
ror
pop
adc
mov
mov
and
cmc
test
inc
sub
loop
and
lea
leave
int
cmp
jno
testl
int3
mov
cmc
mov
add
xchg
or
lret
xchg
jl
push
pop
pushf
xor
push
icebp
outsb
ret
call
pmaddwd
xor
jmp
notb
cmp
rol
scas
mov
int
ds
je
mov
xchg
add
fs
xchg
daa
dec
mov
mov
push
or
lds
sub
pop
popf
into
rcrl
test
mov
or
sbb
insb
or
pop
xor
mov
inc
adc
ret
shlb
daa
adc
shrb
mov
and
xor
fcmovne
cli
repnz
shlb
xchg
mov
sbb
dec
mov
std
xchg
stos
fnstsw
ret
inc
push
sahf
inc
lods
sub
sbb
xchg
xchg
dec
hlt
adc
cmp
jno
jo
andb
sbb
sbb
daa
andl
xchg
add
hlt
repz
pop
enter
dec
iret
loop
ss
sub
add
sub
data16
aam
adc
outsl
xchg
je
dec
and
add
je
pop
leave
scas
inc
push
sub
out
arpl
ret
and
mov
mov
aas
imul
adc
sub
hlt
mov
out
cmc
fsubrl
pop
ljmp
xor
loope
dec
loop
jl
stc
or
sub
pop
xor
out
jno
cmp
jp
mov
das
pop
inc
inc
cmp
dec
fiaddl
in
enter
rcl
xchg
or
push
les
ret
fisttps
movd
aaa
inc
add
andb
pop
adc
loop
das
cmp
aas
inc
leave
cli
mov
pop
repz
adc
jmp
sbb
adc
and
cmp
fs
stos
inc
enter
fucomp
jns
sub
cld
push
cmp
adcb
fldt
xor
sbb
xchg
add
cmp
lret
jle
mov
jle
and
out
push
lock
sub
push
ljmp
out
test
xchg
test
inc
add
add
adc
insl
lods
adcb
mov
sub
cmp
jbe
adc
hlt
pushf
stos
std
cltd
sub
xchg
insb
int
xor
test
lret
jae
out
cld
sub
inc
pop
push
xchg
mov
or
popa
mov
xor
jo
fimull
cmpsb
dec
mov
mov
push
pop
mov
and
mov
adc
or
test
push
xor
mov
mov
pusha
lods
mov
scas
jno
lods
adc
or
sub
imul
lea
push
popf
imul
aad
inc
jmp
orb
mov
or
sub
adc
and
and
sbb
inc
pop
cmp
or
pop
fldt
sbb
arpl
shl
adc
insl
enter
lea
pop
lock
sub
in
insb
adc
jmp
mov
jmp
faddl
pop
loope
inc
push
and
and
xor
pop
and
cli
inc
cmp
ficoml
rol
sbb
gs
push
fildll
cmp
adc
sub
aad
sub
mov
xchg
outsb
idivb
stos
xchg
mov
pop
cmpsl
jp
data16
jmp
and
mov
cmpsl
mov
sub
das
xchg
int
pop
pop
inc
call
sbb
or
push
mov
push
jecxz
ret
aas
sub
xchg
sub
inc
sbbb
push
mov
loopne
cli
inc
and
add
call
cmp
cmc
cld
inc
push
test
rol
daa
add
pop
inc
out
lods
test
test
dec
or
add
sbb
sub
inc
fs
stos
dec
mov
inc
stos
push
mov
fsubrl
push
outsl
fstl
testb
aam
cmc
mov
pop
mov
push
mov
gs
hlt
or
mov
adc
test
popa
fdivrl
es
pop
popa
cmp
push
pop
adc
dec
sub
xor
or
xor
shrl
repz
mov
pop
pop
pop
stc
cmpb
scas
ret
jne
mov
inc
and
jbe
cmp
xchg
leave
int
sub
or
rcll
xor
fucomp
lret
jge
add
xor
or
fistpl
push
lahf
mov
mov
ds
pop
dec
rcrl
and
flds
push
shrb
xor
xchg
xor
cwtl
repz
mov
pop
loop
xor
mov
pop
or
cmp
test
sub
jno
js
cmp
ljmp
fs
scas
lds
add
repnz
imul
fs
or
adc
pop
movsb
xchg
adc
sub
imulb
scas
cmp
sub
lahf
mov
and
mov
cmpsl
sbb
js
mov
sbb
adcb
pop
inc
jmp
rcrl
mov
mov
lock
sub
sbb
out
popa
xchg
hlt
shll
nop
enter
in
test
pop
adcb
mov
leave
pusha
jne
fldcw
fdivl
mov
inc
mov
movsl
xchg
jg
sahf
add
cld
shr
in
add
push
lret
cld
ja
filds
frstor
les
nop
adc
xchg
scas
scas
outsb
push
in
pushf
icebp
adc
xorb
test
mov
push
inc
enter
jecxz
mov
fsubs
lret
push
dec
mov
fldcw
ror
sbbb
xacquire
enter
clc
pop
cmp
mov
repz
movsl
pop
dec
fisubrs
mov
adc
mov
rol
inc
test
pop
push
jno
sahf
xchg
mov
inc
pop
fiaddl
xchg
jae
in
not
mov
jmp
call
jmp
and
push
or
sbb
mov
add
push
nop
pusha
pop
add
adc
mov
adc
les
fists
call
movsl
mov
inc
inc
jmp
daa
cld
lcall
push
fcompl
nop
nop
sbb
adc
push
stc
xchg
sbb
push
in
push
in
sbb
int3
int3
mulb
and
xor
loope
movsl
xchg
subl
outsb
sarl
ds
jecxz
add
or
and
int
sub
movsl
shlb
and
in
push
mov
lods
push
mov
xor
jae
xchg
inc
push
lahf
ja
lret
xor
pop
repnz
xchg
xchg
jp
pop
push
inc
jl
add
jg
lahf
pop
pop
mov
outsl
jp
or
mov
adc
addl
inc
push
cmp
xlat
jne
aad
lea
jne
gs
loope
scas
dec
push
push
push
mov
dec
lea
andl
fcomps
js
jb
dec
jecxz
dec
mov
xor
cmpsl
repnz
sbb
jg
or
sbb
data16
iret
aad
and
jge
pop
sub
jo
jbe
dec
dec
sbb
mov
bound
mov
add
jns
dec
scas
or
fs
sub
xchg
addb
cmp
push
mov
shlb
and
cmp
jmp
lret
jae
xchg
xor
mov
mov
or
mov
rorb
pop
cmp
ja
xlat
sbb
mov
adc
dec
sub
mov
jnp
rcr
mov
vmread
aaa
xor
push
outsb
cld
push
fwait
ds
mov
mov
mov
xchg
mov
dec
jecxz
fsubrl
push
jbe
cmp
adc
add
xchg
loop
je
arpl
push
call
inc
cmp
jnp
lret
int3
sahf
lds
repz
fisttps
mov
lock
sub
fidivrs
lcall
gs
out
sub
lret
fisttps
sti
xchg
push
sbb
dec
jo
repz
loopne
popf
sbb
add
sub
mov
ds
cld
push
in
sub
add
sahf
xor
push
pop
cmc
add
in
and
add
fwait
cli
mov
aaa
push
mov
jg
adc
xchg
push
add
das
aaa
mov
jle
sub
sbb
or
cmp
loop
test
ret
int
add
lock
mov
movsl
test
sub
outsl
int
movsl
ret
dec
movsl
jns
sbb
mov
dec
shrb
inc
arpl
push
sahf
icebp
fnstenv
test
es
ret
jbe
negl
jp
hlt
cmc
or
or
push
jl
pop
push
popf
mov
pop
outsl
xor
es
icebp
inc
inc
xchg
xchg
sub
out
xor
lret
aad
or
sub
mov
jns
push
mov
lcall
push
cwtl
ja
mov
leave
add
hlt
pop
and
jecxz
aas
aam
add
sbb
mov
mov
mov
inc
lret
andl
cmp
mov
mov
mov
test
arpl
cli
sbb
lret
add
xchg
inc
fildll
movsbl
sub
inc
cmpsb
pop
cmp
pop
out
dec
loopne
sub
imul
mov
adc
outsl
push
fdivl
shr
adc
and
popf
in
clc
sti
and
fisubs
rcl
gs
lret
in
test
adc
lds
adc
pop
adc
xchg
and
arpl
or
lret
inc
push
xchg
mov
arpl
test
cmp
cmp
sub
shr
dec
divb
out
shlb
xor
mov
shrl
ljmp
lret
sub
aam
xor
jle
mov
pop
fldcw
jge
add
xor
in
gs
mov
into
push
pop
aad
iret
lock
mov
pop
jl
lret
sub
pop
push
cwtl
stos
cmp
pop
xchg
mov
fistpl
mov
push
ljmp
jno
add
adc
pop
fwait
das
pop
aam
jp
jl
es
lahf
jmp
sbbb
adcl
mov
fisttps
mov
orl
xor
lock
gs
mov
or
sub
mov
pop
dec
mov
loop
push
enter
or
inc
in
and
lods
js
fistps
mov
fsubl
xchg
aaa
xchg
jo
jno
in
cli
in
fmul
xchg
loop
pop
dec
mov
pop
jae
lcall
enter
mov
xchg
mov
outsb
loope
out
repz
andl
cmp
stc
repnz
sub
arpl
je
fimull
push
or
cmpsl
pop
cmpsl
outsb
push
sbb
les
jne
out
data16
test
clc
test
cmp
pop
lret
lret
rorb
add
jge
adc
adc
imul
mov
int
sbb
inc
push
jb
add
add
mov
jb
rcrb
cmp
daa
and
test
xchg
fnstcw
mov
add
jo
xchg
ljmp
popf
jmp
insl
fistpl
aam
mov
mov
cmp
mov
push
and
movsb
and
or
or
mov
inc
pop
pop
and
pop
add
mov
inc
cmpsb
ds
ret
push
cmp
test
lods
push
pop
pushf
push
roll
sbb
inc
jnp
sbb
imul
nopl
arpl
mov
lahf
fidivs
dec
pop
pop
dec
in
cmp
push
jne
pop
mov
mov
cmp
add
lret
mov
stos
dec
mov
mov
xor
sbbl
das
sbb
loopne
jnp
std
pop
sbb
pop
fldcw
shl
out
sbb
rcl
push
ja
dec
mov
fdivr
inc
inc
lcall
in
cmp
or
push
gs
xchg
out
imul
les
and
mov
jg
push
cmp
js
jnp
sbb
ja
clc
cld
mov
and
fstpl
sahf
lods
idivb
cmpsb
mov
daa
inc
lret
rcrl
leave
mov
out
mov
dec
outsl
out
mov
mov
inc
sti
shrl
push
push
loop
adc
cmp
and
cmpsl
lds
dec
mov
test
xor
int
fwait
and
mov
xchg
out
cli
inc
lock
aaa
clc
cmp
in
cli
push
dec
xor
enter
ret
cmp
push
outsb
inc
add
in
sub
sub
add
sub
jmp
dec
movsb
jmp
lahf
xlat
jns
fstpl
xlat
cmpsl
sub
enter
inc
insl
aad
inc
nop
mov
fsub
mov
in
inc
push
or
mov
out
xchg
pop
sahf
adc
aas
mov
lds
or
cli
push
jecxz
lock
xlat
ljmp
xchg
insb
iret
iret
xchg
push
cs
clc
mov
pop
cmp
and
sbb
push
fwait
fs
and
call
cmp
adc
repz
cmpsb
inc
add
inc
lea
inc
and
into
lahf
mull
push
mov
add
dec
stos
lahf
pop
fstps
fisubs
call
mov
mov
imul
fmulp
int
add
or
cmpsl
mov
movsb
out
js
mov
jae
xchg
xchg
jge
dec
mov
fisubs
mov
push
test
loopne
pop
lock
ja
bound
jmp
fs
cs
xchg
pop
loop
lret
rclb
inc
mov
outsl
decl
stos
sbb
faddl
cli
jno
ret
insb
pop
and
into
or
cltd
ja
imul
push
xchg
mov
stc
jo
mov
lcall
and
lcall
mov
out
das
mov
jl
sbb
sahf
outsb
sub
dec
adc
cmp
cmp
push
xchg
mov
adc
push
push
lcall
adc
sub
outsb
xchg
lcall
mov
mov
mov
iret
out
mov
add
push
mov
cmp
cwtl
xor
leave
dec
sub
imul
and
nop
xor
aas
dec
jg
into
fsubrp
std
lcall
sbb
push
push
adc
bt
cmp
adc
mov
sahf
lods
inc
fcmovne
pop
cmp
add
shlb
icebp
in
jns
xchg
out
dec
leave
jae
sti
outsl
ss
mov
sbb
inc
push
jmp
mov
sti
sbb
mov
push
sarl
out
test
mov
cli
aad
mov
rcr
int3
arpl
cmc
pop
lock
ja
fldlg2
jb
xchg
idiv
nop
sub
mov
or
fwait
icebp
mov
stos
das
in
add
inc
insl
test
push
out
sbb
inc
mov
push
add
int
lock
daa
gs
pop
cli
loopne
repz
push
out
mov
rol
fs
and
punpckldq
incl
mov
xor
nop
frstor
inc
cmovs
stos
test
inc
int3
out
xor
test
leave
pop
add
inc
test
in
es
dec
clc
inc
add
ss
add
mov
test
and
frstor
test
add
pop
add
jb
mov
stc
mov
fs
in
lret
sbb
dec
dec
ret
shll
sahf
and
xchg
ds
cwtl
andb
into
aad
xchg
add
xchg
lret
test
popf
jmp
test
nop
xor
xlat
mov
inc
bound
je
scas
jg
fiadds
fwait
movsl
ss
pop
ss
clc
sub
jmp
jne
xchg
test
fnstsw
mov
jbe
aam
dec
ds
scas
mov
xchg
mov
push
cmpsb
mov
cmc
sub
push
dec
loope
arpl
lods
xchg
adc
mov
push
jecxz
xchg
mov
jmp
dec
pop
or
mov
cmp
notl
or
sbb
cmp
or
adc
sub
data16
pop
movsl
xchg
and
sbb
les
mov
loop
fsubrp
pminub
sub
fdivl
dec
decb
cmp
xchg
add
rolb
mov
sub
push
addb
add
xchg
lret
pop
call
and
mov
push
inc
bound
mov
cmp
xchg
outsb
out
aam
iret
sub
je
sahf
dec
adc
dec
shrb
and
rcll
jbe
jo
xchg
jl
int3
testl
cwtl
pop
jp
pusha
mov
push
pop
cmc
inc
push
sbb
mov
cmp
push
mov
fcmove
pop
fdivrs
sub
pmulhw
or
enter
outsb
mov
in
aam
mov
lcall
insb
lret
iret
aaa
loopne
js
xchg
xor
cmp
cmp
sbbb
push
push
cmp
hlt
pop
sbb
mov
leave
sub
and
hlt
stos
in
mov
loop
adc
jno
das
sub
xor
lods
jmp
mov
jl
in
jg
add
andl
add
xor
outsl
test
cli
test
ss
test
xchg
rol
jns
fstl
mov
sti
inc
cmp
lea
sbbb
out
inc
xchg
xchg
cmp
shr
push
mov
out
mov
dec
lods
fdivs
into
mov
int
mov
mov
mov
pop
mov
pop
push
pop
mov
repnz
gs
and
popf
cli
jg
or
push
sub
mov
and
pop
push
repnz
cmp
mov
cwtl
mov
xchg
cltd
jp
mov
pop
mov
testl
hlt
mov
int3
push
jnp
decb
test
scas
in
or
mov
mov
or
fidivrs
stos
jbe
xor
rep
mov
mov
inc
call
xchg
sub
aam
sub
es
mov
popl
jge
sbb
clc
pop
adc
or
pop
mov
mov
inc
lock
std
jp
ret
jp
push
negl
adc
bound
sub
nop
popa
jle
divb
xchg
stc
nop
les
mov
cld
aaa
mov
sbbb
mov
mov
movsl
push
push
or
cltd
dec
scas
sub
gs
mov
sub
in
lcall
inc
nop
in
cli
cmpsb
push
sub
xchg
fbstp
add
xchg
push
and
push
mov
mov
inc
andb
push
call
stos
out
mov
js
adc
cmovle
orl
push
push
insb
xor
inc
pop
sahf
bound
inc
lcall
jecxz
cmp
cli
cmc
ret
leave
push
inc
imul
jno
int3
dec
fsubrp
lods
rcrl
fdivrl
aas
cmp
sbb
adc
pop
sbb
xor
lds
jmp
nop
add
jne
sub
test
in
cs
incl
xor
sub
cmp
testl
add
mov
cmp
sahf
pop
sbb
ss
and
mov
bound
add
into
jno
sti
xchg
test
xchg
je
sbbb
xorl
sti
les
cs
or
lods
push
jle
cwtl
ret
cmpsl
ret
jae
push
dec
push
dec
mov
sbb
daa
jnp
xchg
mov
add
lods
mov
scas
xor
fbld
fwait
sbb
sub
and
notb
int
fidivrs
adc
pop
mov
jno
dec
xor
loopne
add
mov
sbb
lods
adc
sbb
int3
or
pusha
mov
lcall
aas
inc
cmp
shll
out
mov
jl
xor
lahf
pop
dec
clc
rorl
xchg
cmp
mov
mulb
in
loopne
lret
aad
add
dec
sbb
add
iret
test
xchg
in
inc
pop
mov
aad
loopne
cmpsl
and
clc
push
mov
xchg
sbb
push
sbb
in
sti
popa
pop
push
pop
mov
inc
push
cmp
mov
xor
inc
pop
lea
pop
js
sbb
jge
mov
shrl
push
sahf
sub
out
test
push
push
jbe
fmulp
arpl
ret
sub
pop
or
xchg
inc
loope
jge
mov
flds
push
cli
lods
push
mov
cmp
lods
cmp
incb
enter
or
sbb
rcr
mov
push
push
or
jno
mov
pop
adc
inc
adcb
mov
das
leave
outsl
ret
fs
outsb
stc
or
push
or
adc
push
jp
out
inc
inc
pop
mov
rcrl
push
ss
cmpsb
xchg
into
test
leave
popa
fmul
adc
outsl
testl
cmp
in
push
mov
adc
xor
dec
adc
mov
add
ret
scas
int3
jle
push
or
push
shlb
lcall
nop
mov
inc
sahf
mov
cltd
insb
xorb
sbb
mov
push
xchg
inc
mov
xor
or
inc
xor
subb
loopne
and
sbb
push
stc
sti
negl
es
jp
aam
push
pop
cli
ja
sub
ja
gs
pusha
xchg
shl
adc
push
cmp
hlt
or
inc
lcall
sbb
xor
cmp
ds
cs
lret
add
mov
ffreep
dec
push
clc
addb
daa
stos
in
or
add
ljmp
pop
outsb
dec
mov
cmp
jns
cmp
cmpsl
gs
data16
xchg
mov
mov
bound
lcall
and
pop
clc
je
cmp
sub
mov
ret
and
insl
push
xchg
int3
in
jg
inc
in
pop
movsb
inc
ss
and
and
and
fwait
cwtl
sarb
cmpsl
mov
jge
xor
cmp
pushf
jge
dec
mov
pop
stc
jecxz
or
xor
mov
aam
aas
outsb
icebp
movsb
dec
dec
lea
add
jne
push
in
cltd
jecxz
and
inc
xchg
jmp
push
popa
xor
fwait
dec
imul
int3
cwtl
das
inc
fs
fs
aas
jns
sbb
nop
mov
sbb
dec
xchg
add
cmp
add
mov
adc
aam
pop
popa
orl
into
push
pop
clc
pop
repnz
addr16
pushf
mov
les
in
icebp
adc
mov
iret
fnsetpm(287
mov
cs
pop
in
pop
xchg
xor
mov
pop
insb
lea
jns
lea
aas
jmp
sub
jnp
jno
loop
aas
mov
rcrb
rcrb
movsl
cmpsl
ret
mov
mov
mov
inc
adc
dec
test
ja
aam
sub
cmp
loopne
inc
pop
dec
gs
sub
or
sub
out
lds
pop
arpl
loopne
negb
push
push
mov
iret
push
sbb
pop
std
inc
nop
icebp
dec
mov
nop
cltd
test
sbb
ds
pop
aaa
sbbb
addr16
loop
ret
and
mov
sub
pop
mov
cmpl
mov
mov
sbb
shrb
and
pop
mov
mov
dec
jl
sub
pop
div
or
jg
and
push
test
lret
add
mov
pushf
es
xor
and
out
add
pusha
mov
lds
stos
mov
addr16
vcvttpd2dqx
jae
mov
sti
aam
mov
or
dec
jmp
or
fwait
xor
sub
inc
pop
xor
jmp
loopne
and
add
daa
or
xor
push
lret
mov
jp
push
js
flds
pop
mov
or
push
enter
sub
mov
idivb
insl
cmpsl
leave
dec
pop
mov
add
sti
jp
mov
xlat
sub
and
sbbb
fdivrl
ss
test
sbb
loopne
rcll
mov
out
out
das
or
push
mov
in
test
std
mov
loopne
jne
test
adc
shll
dec
and
jo
nop
jmp
add
mov
inc
inc
mov
leave
lock
rcrl
xchg
dec
jg
push
ds
cmp
sbbl
adc
iret
mov
push
outsl
sub
out
adcl
mov
stc
mov
daa
out
pop
sub
lock
in
cltd
add
add
push
decl
js
jbe
test
sbb
ds
jbe
add
xchg
pop
leave
jp
lret
jns
daa
jge
sbb
lret
jp
pushf
inc
add
xor
lock
or
movsl
aas
aam
cmp
dec
push
outsl
mov
push
and
pop
xor
mov
or
sbb
test
cmp
add
out
pop
sbb
pop
mov
mov
jmp
dec
cmc
sarl
push
mov
gs
repnz
push
jns
outsl
cmp
fcmovbe
xchg
mov
lds
faddl
sub
out
fcoms
push
test
ljmpw
shrl
xor
mov
cmpsb
orl
repz
js
cmc
push
inc
xor
and
dec
push
imul
pushf
aam
inc
push
out
cmc
pushf
xor
nop
bound
jmp
lahf
inc
loopne
add
pop
xlat
cmpb
mov
add
xchg
repz
mov
cmpsl
sbb
fdivrs
adc
mov
mov
loop
in
add
inc
cmp
jl
inc
arpl
cmp
dec
mov
xor
push
cmp
xor
mov
jbe
push
fs
sbb
push
xchg
scas
jns
cltd
xchg
cld
jb
push
aam
out
adc
cmp
xchg
xor
scas
mov
cltd
std
push
jmp
filds
and
sub
cmp
outsl
push
sub
push
test
add
dec
pop
push
mov
pop
loop
pop
inc
mov
mov
sbb
mov
and
lods
push
push
aam
movsb
loop
mov
sbb
pop
fcomps
pop
cmp
mov
cmpb
inc
push
xor
loope
xchg
data16
or
jnp
pop
sub
sbb
mov
arpl
clc
rorb
sbb
mov
movsl
xor
loopne
inc
push
jne
add
lds
and
js
xor
or
popa
and
roll
push
cs
jnp
int
shrl
sub
add
and
insl
pop
lahf
pop
push
test
mov
gs
mov
sbb
insb
jle
ds
mov
repz
fnstcw
push
add
pop
roll
xchg
inc
jbe
jge
andb
cmp
loop
or
outsb
nop
mov
pop
sbb
test
and
and
push
scas
out
push
lods
xchg
rcrl
iret
cmp
xor
sbb
out
push
or
jle
dec
add
pop
icebp
dec
jge
shlb
and
push
push
xchg
test
pop
iret
fldl
stos
daa
inc
xchg
pop
xorb
in
push
sbb
push
push
out
jns
je
fimuls
or
add
int
in
mov
and
add
or
cmpsl
mov
shll
loop
or
out
jl
gs
pop
lahf
incl
push
cmp
pop
and
mov
pslld
mov
es
in
pop
mov
mov
add
xchg
pop
xor
call
aaa
loop
cli
notb
mov
lahf
push
in
rol
arpl
in
xchg
dec
ss
push
adc
loope
add
push
ljmp
inc
fs
mov
pop
clc
lret
and
int3
and
fucom
mov
ja
push
mov
adc
cmp
jge
lret
cmp
stos
jmp
stos
popa
jmp
mov
push
or
xchg
stos
pusha
cmc
lcall
sbb
cltd
fdivr
stos
test
xor
xorl
pop
mov
mov
xor
jp
pop
lock
lret
jnp
xchg
sub
mov
cmc
outsl
jg
jp
jge
push
mov
push
mov
testb
in
adc
jle
adc
mov
mov
mov
lds
fistl
shll
pop
jmp
mov
mov
divl
xchg
mov
sbb
in
ret
xor
pop
ret
dec
shrl
in
lods
push
push
pop
adc
dec
outsb
dec
dec
mov
in
ljmp
sub
push
rcll
adc
xor
pop
pop
cmp
xor
dec
in
sub
inc
fimull
mov
aam
cmc
jo
cmp
loope
push
inc
fldl
inc
push
and
stc
push
lods
push
lds
cmc
push
mov
lods
xchg
push
xor
mov
test
push
push
inc
push
adc
xor
fisttpll
fnstenv
pop
mov
dec
dec
xchg
cmp
stos
ret
xor
jle
inc
movsl
jl
sub
in
push
mov
data16
scas
or
addr16
int3
cmpsl
ficomps
test
repnz
pop
mov
ret
lods
loopne
mov
sub
or
les
push
icebp
imul
cmp
mov
pop
test
inc
data16
jnp
jge
enter
pop
loopne
aam
aad
or
push
loop
popa
outsb
loope
xchg
loop,pt
hlt
test
movsb
pop
adc
jl
leave
sti
mov
push
mov
sbb
sti
dec
sub
jle
daa
bnd
sub
mov
call
addr16
mov
mov
in
and
dec
ret
xchg
or
mov
mov
pop
mov
add
and
adc
sbb
and
jmp
or
mov
les
pop
dec
jo
cltd
test
nop
and
dec
mov
into
imul
out
test
push
js
test
nop
dec
shrl
out
es
fsubl
push
pop
mov
mov
cmp
in
inc
inc
push
movsb
xor
mov
icebp
into
push
and
cmp
xor
inc
js
mov
xor
das
leave
pop
aad
mov
cli
jl
xchg
cs
fwait
cmp
arpl
cltd
cmp
dec
in
push
hlt
ja
mov
out
sti
outsb
shll
mov
enter
adc
cmpsb
cmpsb
cmpsl
fucompp
mov
inc
xor
in
pushf
cmpsl
shrb
pusha
jge
insb
gs
mov
pop
dec
cmp
cmp
aas
jecxz
dec
hlt
jb
push
popf
lds
sbb
xchg
ss
xlat
lret
sti
clc
ss
inc
out
and
inc
xor
mov
mov
fldcw
or
je
sbb
inc
push
pop
es
pop
lcall
pop
out
test
lret
push
test
push
xchg
adc
xchg
pop
cmpsb
lock
add
jae
jo
cs
test
cltd
and
jle
and
push
stc
jae
sub
popf
outsb
lret
mov
and
jmp
jb
sahf
hlt
adcl
inc
out
or
dec
add
lods
into
decl
push
and
sti
in
sub
lret
cli
inc
int3
adc
pop
mov
xchg
push
adc
test
sbb
fdiv
decl
add
stc
xchg
cmp
mov
pop
push
outsb
pushf
pop
shlb
icebp
outsb
clc
cmp
and
sub
mov
push
push
imul
stos
aam
ss
sub
inc
dec
decb
in
adc
pusha
inc
dec
mov
je
push
dec
cmpsb
pushf
nop
lods
int
shl
fstp
repz
and
xlat
push
cld
fdiv
or
push
cwtl
mov
dec
jb
push
movsb
jb
sub
movsl
lcall
mov
mov
aas
mov
dec
xchg
lahf
kmovb
loope
and
fwait
cmpsl
cmp
inc
scas
in
mov
lahf
add
adc
vmread
cmp
sbb
movsb
aaa
or
ret
jb
cld
sub
fwait
push
pop
sarb
std
rorl
pop
sub
das
pop
popl
outsl
lahf
xor
dec
jmp
push
stos
jle
pushf
hlt
leave
test
pop
cmp
stos
fsubs
pushf
int
out
sbb
das
or
call
xchg
fstl
das
pop
aaa
pop
xlat
jo
stos
out
rclb
decl
das
fidivs
scas
inc
xor
fiadds
loop
out
mov
test
insb
jb
mov
or
cwtl
pusha
mov
push
jne
push
xor
loop
ds
imul
aas
fstpt
or
cmp
fldcw
cmp
pusha
and
fisubl
ljmp
xlat
adc
out
mov
lahf
ss
sub
inc
sti
xchg
push
jno
mov
xchg
sbb
fcomi
inc
lret
sti
enter
xchg
xor
clc
out
mov
lods
inc
adc
fnsave
test
lahf
mov
test
stos
mov
pusha
loop
sahf
pushf
mov
jle
xchg
in
les
pop
or
aaa
ret
jns
xor
out
dec
adc
sub
dec
jne,pn
cld
sbb
pop
and
jo
in
pop
dec
pop
push
jge
cmp
out
or
pop
pop
pop
sub
cltd
mov
fnstsw
imul
insb
push
pop
jp
mov
ret
arpl
mov
jne
mov
nop
sub
cmpsb
in
nop
mov
fs
inc
push
sarl
inc
lock
adc
lea
fs
addr16
or
mov
push
mov
sbb
xchg
xchg
or
test
push
out
jle
adc
push
lea
jmp
mov
xchg
sub
test
leave
cli
xchg
mov
add
vpsubq
mov
and
sbb
negl
cmp
sbb
icebp
lds
aaa
mov
dec
mov
lods
paddw
and
dec
ljmp
psrlw
xchg
insl
call
test
xor
pop
xchg
sub
add
lahf
xor
enter
clc
pop
xor
mov
stos
dec
fistpll
xchg
adc
sbb
pop
jne
inc
mov
sti
fwait
les
xor
mov
xlat
scas
inc
jo
sbb
jne
dec
xor
dec
pop
adc
es
sbb
push
outsl
adc
sahf
pop
in
add
les
cmp
xor
push
mov
sbb
push
sbb
xchg
xor
xor
nop
sub
sbb
stc
mov
cmpsb
inc
ja
dec
out
bound
jb
pop
push
mov
cld
loop
mov
divl
lods
in
inc
fistpl
bound
push
movsl
enter
lret
sarl
subb
lds
shrb
subl
lahf
mov
jns
xchg
pop
addr16
sbb
or
cmpsl
sbb
mov
shl
ja
pop
aam
cmp
aad
jp
ja
shrl
mov
jns
sbb
sar
sahf
inc
lods
stos
mov
mov
fimull
outsl
fcoml
mov
jns
pushf
mov
cmp
lock
push
cmpsb
inc
xor
stc
nop
inc
aad
inc
adcl
clc
sbb
ja
scas
jno
in
mov
nop
mov
xor
add
cmpsl
mov
add
add
or
idivb
pop
out
fistps
sub
and
jo
mov
test
xor
cli
dec
jecxz
shrl
add
dec
lds
iret
xchg
divb
in
popa
iret
push
pop
jle
aad
outsb
mov
cmp
repnz
clc
cmp
in
push
std
mov
and
rcrl
pop
jmp
fldcw
ss
push
xchg
inc
push
test
das
lds
jmp
sub
sbb
inc
dec
xor
fldenv
cs
roll
lcall
push
dec
pushf
mov
outsl
xor
adcb
bt
push
ja
jne
dec
js
cmp
fcompl
test
mov
adc
mov
pop
mov
movsl
icebp
cld
mov
or
cmpsb
andb
pop
jecxz,pn
mov
mov
pop
stc
add
sbb
sub
cmp
popa
subl
or
xor
dec
out
cmp
dec
mov
incl
cli
xchg
cmp
es
mov
or
fnstcw
js
leave
cmc
std
cwtl
ljmp
mov
repnz
addr16
adc
jno
fwait
pop
add
inc
adc
jmp
lea
mov
loopne
jmp
das
movsl
icebp
add
lret
lret
popf
sbb
fmulp
rolb
mov
dec
nop
or
push
into
outsb
mov
pusha
fbstp
inc
push
add
fstps
xchg
pusha
decb
and
xlat
xor
pusha
jmp
sbb
add
shr
push
sbb
loope
add
jmp
paddb
call
xchg
sub
enter
int
mov
or
insl
bound
cli
inc
scas
pop
lds
push
in
xor
push
jno
xorl
xor
sub
int
xchg
jno
mov
pop
cwtl
cmpsb
mov
mov
jno
mov
add
or
push
push
sub
andb
pop
mov
mov
mov
push
in
cmpsb
sbb
cmp
insb
outsb
cmp
ret
pushf
mov
pop
clc
jge
jne
dec
pop
push
ret
test
jecxz
scas
pop
in
xor
jl
xchg
inc
pop
dec
faddl
lcall
and
je
inc
int3
notl
into
enter
xchg
pop
pop
int3
xchg
xchg
cmp
mov
inc
sub
add
jo
rcll
scas
inc
cmpsb
xchg
in
stos
icebp
lret
push
jle
sub
pop
pop
ss
hlt
adc
xchg
fsubr
mov
fbld
enter
test
movsb
sub
mov
mov
mov
shrb
js
mov
jge
dec
mov
or
sbb
xchg
in
jp
mov
movsl
test
insb
leave
pusha
mov
cmp
scas
in
aad
push
or
stos
add
jge
mov
dec
or
bound
or
andl
lock
sub
mov
add
add
jmp
and
and
lds
aaa
jg
test
and
in
dec
pop
sub
push
cmpsl
lock
xchg
add
jns
mov
das
adc
add
adc
jge
fsubrs
pop
hlt
and
cli
inc
popl
inc
xor
xchg
lds
xchg
pop
out
add
lods
ljmp
pushf
mov
imul
inc
pop
addr16
andb
pop
xor
add
ret
je
xchg
or
dec
shl
jbe
cmp
xchg
or
stc
mov
inc
sbb
push
mov
and
inc
sub
ja
xor
pop
xchg
push
sbbl
shl
je
mov
mov
inc
es
xchg
dec
adc
in
inc
push
nop
pop
and
mov
test
pop
or
jbe
mov
xchg
test
jl
and
pusha
ss
jle
mov
cltd
ja
pushf
xor
je
arpl
mov
movsl
push
and
cmpsl
dec
jge
arpl
jle
mov
ret
pop
sub
sub
out
mov
ljmp
lock
icebp
cbtw
es
mov
mov
mov
and
sub
push
ja
mov
sbb
sbbb
inc
cli
push
ljmp
push
sbb
scas
mov
or
and
insl
pop
jp
cmpsb
sti
insl
sub
jae
dec
ljmp
enter
pop
in
movsl
sbb
add
fidivrl
jno
arpl
cmp
cmp
arpl
out
xchg
sub
fs
push
bound
clc
test
test
and
and
mov
in
push
add
ret
outsl
inc
jno
xor
jnp
pop
loopne
jle
dec
push
popa
rolb
mov
data16
aas
movsb
in
push
sbb
mov
enter
cmp
add
daa
xchg
call
xchg
stc
adcb
lea
push
jp
insl
sub
ror
addr16
add
add
popf
push
or
cmp
inc
repnz
dec
std
fadd
mov
imul
call
mov
js
push
sahf
cmp
pop
fistpl
push
push
and
inc
js
test
loopne
repnz
call
inc
imul
hlt
cwtl
ret
test
insl
and
dec
das
icebp
inc
add
movsl
lahf
repz
test
jnp
jle
les
sbb
pop
popa
lret
lret
ds
leave
sub
lret
into
xor
stos
stc
sub
jno
dec
adc
int
nop
int3
fmuls
dec
dec
add
xor
pop
je
cmp
xchg
rcll
sub
cmpsb
and
lods
aam
inc
cmc
fwait
cmpsl
aam
xor
fxch
push
sub
pop
adcl
or
pop
pop
iret
data16
cwtl
jbe
inc
adc
ds
jne
xchg
mov
lods
cwtl
das
imul
inc
loope
mov
repz
push
repnz
gs
inc
int3
push
pop
jmp
inc
fcomps
js
xchg
mov
pusha
jle
add
iret
cwtl
mov
sti
aam
movsl
icebp
or
adcb
mov
mov
scas
lahf
lahf
jmp
mov
push
mov
loop
iret
dec
and
xchg
or
jno
mov
push
sbb
mov
lods
divb
adc
inc
jecxz
cltd
mov
xchg
adc
add
and
fmuls
jp
icebp
shrl
ss
xchg
or
ret
mov
iret
jle
sub
and
iret
push
push
sbbb
push
aas
outsb
cmp
faddl
addr16
je
movsb
cli
sub
cwtl
std
fisttpl
repnz
jg
mov
push
sub
pop
rcrl
fistps
loope
mov
or
rolb
test
pop
mov
gs
push
outsl
fs
mov
mov
test
push
pop
movsb
jmp
repnz
pop
and
lods
out
popf
pop
pop
cmc
cmp
jmp
imul
sub
and
adc
jnp
out
dec
ret
add
dec
pop
pusha
pop
repz
outsl
rcrl
nop
imul
xlat
cmp
call
and
movsl
loopne
aas
cmp
ret
fnstenv
add
jle
inc
fstl
insl
shll
sub
test
push
cmp
ds
rcrb
and
jge
cld
inc
fdivrs
subl
adcb
je
jle
ret
dec
movsl
lahf
cmp
nop
inc
shlb
std
mov
mov
les
ja
jbe
out
montmul
cmpsb
test
fxtract
xchg
hlt
sub
jno
xchg
dec
cmp
pop
shlb
mul
sti
sub
stc
nop
testb
cmc
adc
or
mov
xchg
sub
push
fs
fs
sbb
sbb
icebp
stos
andb
loop
jno
adc
mov
sub
mov
out
and
cmp
aam
js
movsb
mov
mov
push
mov
mov
iret
mov
xchg
aaa
or
fisubl
imul
cwtl
jge
arpl
in
add
pop
sub
xchg
cmpsb
test
dec
lods
mov
or
cli
sub
or
es
pop
mov
sbb
inc
push
fidivrl
mov
daa
sub
add
add
cmp
cmp
inc
jmp
shr
cmpb
mov
inc
add
sbb
sbb
push
cli
std
cli
xchg
das
sbb
and
jmp
clc
or
test
insl
cmp
push
sti
jae
mov
xor
mov
xlat
and
cmpsl
push
sub
mov
in
adc
cmp
push
mov
dec
jecxz
rorb
sub
repz
cmp
mov
repnz
pop
fstpt
sub
adc
aas
bound
popf
fidivl
mov
pop
cmp
push
cmp
adc
pop
jg
scas
mov
pushl
push
push
lods
pop
dec
icebp
insb
ss
adcl
push
jae
add
push
repnz
aam
call
jb
xchg
mov
hlt
jle
pop
mov
nop
and
fs
rol
cmp
mov
pushf
dec
in
arpl
cwtl
das
jno
popa
int3
dec
mov
mov
push
mov
das
psrlw
outsb
mov
and
mov
add
sub
adc
pop
adc
and
adc
mov
pop
outsl
jbe
cmp
and
pop
push
call
xchg
sub
jmp
mov
ret
sub
pusha
out
decb
xor
daa
pop
das
in
pusha
ss
xchg
sub
xchg
jb
fninit
cs
adc
out
in
jecxz
jns
mov
call
sbb
fsubrs
dec
stc
adc
das
mulb
xchg
lods
ja
imul
call
xor
iret
mov
jmp
nop
push
pop
out
mov
shlb
lret
bound
imul
pop
sbb
lock
aad
sahf
loopne
inc
pop
or
cwtl
movsl
fbstp
xchg
test
cmpsb
xor
pop
lret
push
stos
mov
iret
or
cmc
sub
aad
mov
xchg
add
std
or
xor
out
pusha
aad
push
mov
je
push
jbe
jge
daa
inc
lret
arpl
ret
dec
popf
jg
and
or
push
mov
imul
popf
sub
shll
jge
in
xlat
push
mov
xor
call
call
or
lret
fdivs
inc
and
pop
sbb
pop
jo
insl
ret
push
lahf
xor
ja
sti
xchg
cltd
xor
sbb
xor
jmp
fcmovbe
mov
adc
mov
cs
sub
insl
loopne
dec
dec
pop
in
mov
orb
mov
mov
jo
insl
mov
je
xor
std
or
stos
mov
cli
mov
push
test
add
jb
xchg
ja
scas
sti
stc
or
jb
int3
imul
int
mov
cmp
cmp
out
or
jne
les
mov
push
inc
ffree
fs
in
hlt
push
leave
push
negb
push
dec
mov
mov
lods
sti
lds
movsb
mov
imul
sub
pop
xor
sub
in
fcomps
push
lods
pinsrw
stc
pusha
push
dec
arpl
dec
adc
xor
xchg
fisubrs
and
js
test
les
xchg
xor
pop
jae
pop
mov
cmp
xor
clc
push
and
xor
icebp
in
cs
sti
rorl
xchg
mov
mov
jecxz
fnsave
jle
adc
pushf
dec
rcrl
jecxz
xchg
xor
in
dec
fcoms
ret
cmp
xor
gs
out
popa
outsb
or
aam
xor
pushf
dec
inc
mov
xchg
pop
out
notb
pop
cmp
mov
dec
push
cmp
fsubrl
in
jno
jne
jbe
mov
mov
loopne
int3
lret
jbe
loope
mov
add
jecxz
xchg
cwtl
push
enter
insl
sub
add
mov
mov
cmp
rorl
out
stc
popa
and
inc
sub
push
shrl
push
dec
mov
xor
sahf
cmp
fsubr
arpl
mov
leave
and
lret
fnstcw
aaa
adc
dec
ds
dec
mov
popf
cmpsb
xor
jp
dec
jmp
push
test
add
inc
sbb
push
pusha
xchg
inc
loope
scas
mov
movsl
filds
scas
gs
dec
pop
mov
mov
push
inc
repz
ror
pop
mov
ss
call
test
fs
pop
int
or
js
push
or
pop
cmp
mov
xchg
scas
sub
aas
data16
or
xor
pop
push
in
nop
les
iret
xchg
xor
push
imul
je
int
lret
xor
mov
adc
push
xor
mov
sub
sbb
stc
cmp
lcall
stc
test
adc
lea
pop
push
int
test
push
pop
stos
xchg
mov
pop
and
mov
addr16
mov
jnp
cmp
mov
ficomps
mov
scas
inc
xor
push
adc
push
int3
out
fsubr
inc
and
inc
cmp
cmc
and
sbb
stos
xchg
sub
push
xor
lea
sarb
or
cmp
pop
mov
jl
lods
push
add
mov
or
aaa
movsl
pop
adc
mov
pop
cli
or
mov
push
fnstsw
jle
mov
fadds
xchg
outsb
pop
xor
cmpb
sub
fwait
jmp
iret
jb
loop
mov
jb
xchg
movsl
pop
stos
iret
cmp
add
fbstp
and
insl
les
pusha
rol
popa
jnp
mov
or
daa
inc
repz
fcompl
ret
inc
pusha
cmp
push
orl
mov
negl
or
pop
out
sbb
jle
mov
cwtl
mov
push
aad
add
xchg
xchg
jg
or
test
push
lods
jg
in
hlt
cs
cltd
std
jge
add
clc
and
push
pushf
not
dec
and
xchg
mov
insb
leave
pusha
cmp
imul
push
arpl
cmpsb
cmpsl
testb
stc
adcb
jb
inc
imul
leave
subl
fcmovnu
pop
adcb
in
fisttpl
xchg
bound
fwait
or
push
or
cmp
and
push
out
inc
pop
rcrl
jne
xor
pop
and
add
repz
jbe
test
dec
loope
push
sub
stos
repz
sub
lea
sub
aaa
dec
mov
cli
push
mov
aad
ret
xor
jo
in
adc
loop
push
xchg
lret
int
mov
inc
pop
test
inc
orb
aas
cltd
xor
dec
adc
or
cld
jl
push
stos
fs
xchg
sub
pop
aam
ja
or
movsb
sti
mulb
shll
dec
and
ja
imul
fwait
sub
mov
nop
xchg
xor
xchg
cli
movsb
or
pop
mov
pop
scas
mov
or
xchg
adc
xor
test
mov
inc
flds
pusha
jae
mov
mov
jge
push
add
in
mov
in
clc
xor
xor
dec
std
sti
jbe
mov
outsl
jecxz
notb
dec
cmp
mov
je
push
call
jecxz
pop
adc
rorb
mov
cmpsb
cli
or
bound
sub
clc
xchg
cmp
jo
dec
jecxz
das
in
ret
loop
jl
inc
mov
pop
stos
sbb
std
jmp
stos
pop
push
lcall
xor
inc
sbb
lahf
f2xm1
mov
jne
clc
mov
iret
mov
loop
cs
mov
mov
mov
adc
inc
sti
ljmp
notb
mov
cwtl
cmc
mov
mov
dec
pop
and
mov
nop
pop
outsl
stos
and
dec
adc
ror
sub
shl
fstpl
mov
push
mov
int3
test
mov
push
and
les
push
iret
inc
test
or
jmp
and
sbb
pushf
jno
sbb
into
addb
adc
shrb
enter
es
push
stos
fstpt
jbe
xor
rolb
stc
xchg
jmp
mov
imul
sti
fxtract
mov
hlt
push
or
ret
or
loopne
push
and
cmp
adcl
arpl
adc
cwtl
mov
sbbl
xchg
adc
cmp
stos
idivl
scas
ret
jno
jae
repnz
mov
push
cwtl
das
mov
push
xor
push
dec
dec
fistpl
push
push
cmp
out
push
add
cmp
jle
mov
xchg
sbb
test
cmp
es
mov
pop
lret
cwtl
in
push
lcall
add
je
pop
sub
xchg
insl
pushf
pop
sbb
sub
pop
sti
sbb
mov
jmp
mov
flds
les
scas
insb
or
jne
sbb
jp
adc
outsb
mov
and
test
in
pop
lret
call
mov
imul
inc
inc
in
insl
sbb
and
mov
mov
sbb
aaa
push
push
cmp
jmp
fs
or
sti
stos
and
push
mov
sub
xchg
xchg
es
lea
lcall
das
test
mov
dec
fimull
jmp
decb
jle
mov
mov
fidivl
xchg
int
repz
jg
add
cmp
icebp
xor
or
push
jge
push
imul
adc
cmpsl
fdivl
pop
out
pusha
cli
rcll
mov
mov
movsb
gs
fcomip
stc
adc
fidivl
scas
test
imul
inc
shl
outsb
sahf
xor
fldl
mov
mov
mov
movsb
push
adc
rolb
clc
test
rcrl
dec
call
fst
mov
cmp
aaa
or
icebp
mov
mov
loopne
insb
push
mov
push
scas
pop
hlt
lret
lret
jno
cmp
data16
pop
dec
in
enter
insb
add
dec
hlt
sbb
mov
adc
stos
pop
fcomps
xor
loope
out
in
cmp
mov
std
loopne
jnp
adc
pop
es
lea
xor
in
lret
push
or
sarb
fwait
inc
fmull
testl
pop
es
push
je
pop
cmpsb
sub
mov
push
movsb
pop
push
inc
leave
int
cmc
mov
jg
dec
movsb
aaa
mov
pop
pop
push
es
arpl
insl
stc
sub
xchg
sub
add
push
std
inc
pop
cmpsl
xchg
cli
pushf
xor
mov
pop
mov
add
scas
add
mov
dec
or
clc
out
cmp
pop
sahf
pusha
and
rcrb
mov
divb
push
xchg
mov
arpl
imull
pop
cmp
cmpl
cmp
in
mov
and
add
outsb
xor
cmc
dec
test
xlat
repz
inc
pop
sti
pop
mov
ds
iret
bnd
scas
dec
fwait
pop
push
mov
xor
repz
mov
jmp
leave
sbb
cli
loopne
inc
outsl
mov
stos
test
aad
mov
outsl
inc
insl
iret
jle
push
or
pop
adc
outsl
jl
cli
pop
inc
aaa
mov
lret
jno
sub
xchg
xchg
push
mov
or
dec
loopne
repz
mov
les
aam
ja
xchg
fnsave
sbb
jne
and
mov
cs
and
sub
jae
cmp
mov
pop
sub
xchg
xchg
mov
aaa
fimull
into
test
int
imul
cmpsl
mov
cmp
mov
push
sub
pushf
xchg
cmc
mov
fstpl
mov
imul
insb
add
push
inc
mov
sub
lcall
pop
push
jns
inc
les
sub
dec
cmp
loop
ljmp
xor
out
lods
cmp
lcall
pop
mov
loopne
or
lcall
loopne
or
jmp
ja
cmp
and
out
inc
add
jns
and
inc
ja
sti
lods
ds
int3
out
lret
cmp
lahf
outsb
pop
lods
xchg
xchg
cmpsb
out
mov
testb
sub
mov
jge
and
pop
push
int
add
out
aam
add
aam
movsb
and
std
nop
mov
sahf
sub
sub
inc
mov
dec
das
or
dec
cmpsb
add
mov
and
adc
movsl
mov
and
or
mov
pop
cmp
aaa
dec
in
dec
pop
sbb
pop
xchg
dec
pusha
dec
fsubr
lret
inc
push
push
cmp
arpl
in
inc
xor
mov
fwait
leave
insb
icebp
test
xchg
push
push
jo
or
movsb
cmp
add
mov
cmp
es
xchg
and
out
stos
add
mov
push
jns
or
fldenv
add
pusha
cmp
lret
cld
or
in
insl
jle
and
sbb
ret
mov
sbb
xchg
xchg
mov
in
xchg
adc
xor
into
sarb
mov
icebp
ror
mov
mov
lock
cmp
aad
inc
cld
xchg
stc
clc
aam
lret
mov
rcr
jbe
mov
je
cltd
dec
adc
mov
fwait
in
xchg
fs
push
test
or
pop
push
ficoml
ja
dec
das
cmp
clc
sbbl
sti
sub
add
sub
pusha
add
cmp
lret
mov
test
jp
sbb
movl
dec
lret
xlat
jle
test
negl
or
cmp
cmp
xchg
xor
movsb
mov
cmp
fimuls
adc
es
pop
mov
repz
dec
jno,pt
dec
mov
aad
ss
cmpsb
out
xchg
cltd
xor
jp
adc
dec
scas
negl
ja
jno
imul
push
scas
inc
lret
mov
jmp
lret
sbb
iret
jns
adcb
lcall
lods
jl
out
sub
dec
in
pop
adc
loop
icebp
mov
add
mov
scas
inc
ss
mov
pop
int
dec
pop
fidivs
push
cli
mov
sbb
xchg
sbbl
jmp
jae
push
dec
loope
mov
out
cmp
mov
mov
fstpl
push
xchg
fdivrs
mov
loopne
jp
out
inc
popf
and
iret
loope
inc
and
je
imul
mov
data16
aad
push
sbb
pop
dec
xor
std
outsl
cmp
mov
imul
lret
or
fdivrl
cwtl
jmp
adc
pop
dec
nop
xchg
enter
mov
jae
jae
iret
cwtl
inc
aad
lods
inc
push
jge
into
inc
data16
add
call
and
inc
loop
test
mov
sbb
sbb
jo
outsl
movb
lods
add
dec
sub
jae
pop
dec
in
inc
sbb
and
jmp
in
nop
mov
loopne
push
adc
cmpsb
xchg
mov
cmp
jecxz
add
pop
into
push
dec
movsl
adc
jl
sbb
adc
mov
dec
jb
jno
fisubs
dec
jae
jge
push
push
aas
movsb
xor
xchg
jno
add
xchg
test
arpl
test
clc
xor
jp
push
jns
jg
push
or
sbb
in
jle
mov
fwait
daa
mov
jecxz
arpl
adcb
sbb
push
adc
push
cs
cld
adc
js
add
fwait
xchg
repz
out
pop
ja
pop
push
imul
push
or
dec
adc
dec
mov
pop
sub
xlat
js
hlt
sbbb
mov
add
add
std
xchg
outsb
lcall
inc
jne
cmc
addr16
testl
add
push
out
sbbb
xchg
lret
xlat
outsb
mov
add
pop
cmc
rorb
pop
cmpsl
pop
sub
sbb
adc
je
fs
lock
in
mov
jecxz
fwait
repnz
add
pushf
in
xor
mov
mov
or
cmp
xor
xor
in
mov
xor
sub
or
cmpsb
mov
js
nop
in
sub
add
shlb
cltd
cmp
xchg
jb
xlat
cmpsl
ror
enter
lods
scas
pop
inc
inc
enter
in
push
jno
add
movsl
adc
or
jmp
or
lds
lds
and
mov
inc
stos
jbe
xor
rol
aas
test
xchg
call
pop
fistpll
int
lods
push
movl
pop
adc
arpl
std
xor
xchg
push
stos
sbb
mov
sbb
mov
sub
lock
testb
sub
cltd
icebp
pop
and
cvtpi2ps
rcrb
shr
mov
clc
mov
or
jmp
sub
cmp
sub
adcb
adc
mov
subb
push
mov
fdivl
mov
mov
cs
and
dec
fs
outsb
mov
insl
inc
shll
shrl
mov
std
rcr
aaa
loope
lea
pop
xchg
call
lea
into
outsl
push
mov
mov
lret
jmp
push
outsl
pop
jle
jle
insl
mov
gs
in
jg
movl
mov
cmpsb
lods
in
out
mov
in
adc
setp
inc
mov
adcb
jb
adc
mov
lea
iret
pop
stos
sub
and
push
inc
call
cmp
push
leave
pop
sub
clc
subl
mov
loope
sub
dec
outsl
xchg
inc
pushf
mov
or
popa
fwait
out
fiadds
sbb
push
shr
out
out
mov
out
lret
sub
aam
push
push
dec
or
rcr
testb
insl
sbb
dec
pusha
idivl
pop
cmc
and
jge
bound
mov
insb
cmp
xchg
mov
data16
int
cmpsl
les
pop
sub
sub
mov
cmp
out
and
inc
inc
sbb
inc
jmp
sub
or
jo
mov
dec
adc
xor
or
fs
cmp
insb
xor
adc
jmp
and
ss
out
adc
jmp
push
mov
fnstenv
jo
jg
pop
push
jno
hlt
ss
and
shl
dec
lea
push
lock
add
fistps
int3
lahf
int
popf
sbb
or
daa
cmp
jp
mov
lock
lahf
rcll
cmp
push
fistpll
pushf
rol
std
mov
sti
dec
popa
cltd
lock
add
into
xor
sub
sahf
pop
stos
lea
xor
cmp
dec
sbb
lcall
rcrl
call
mov
cmc
int
xchg
lods
orb
add
or
sbb
loope
outsb
push
mov
dec
in
je
mov
in
repz
push
imul
sub
cwtl
mov
mov
outsb
mov
jle
sti
rclb
mov
add
fwait
hlt
into
cmc
add
jb
pop
mov
push
inc
and
sub
mov
lods
xor
pop
sahf
test
aam
mov
cwtl
imul
pusha
push
xor
cmc
or
lret
mov
hlt
dec
add
shrb
inc
adc
daa
jnp
xchg
sbb
inc
ds
scas
repnz
xor
inc
hlt
nop
aad
pop
mov
fidivs
lds
pop
and
xchg
stos
es
jg
scas
data16
nopl
sbb
dec
dec
jae
shr
sbb
call
andb
cmp
je
xchg
jge
ja
movsl
mov
mov
enter
iret
loopne
lret
or
jmp
pop
lret
and
mov
cwtl
movsw
push
icebp
sub
and
add
repz
dec
sub
cmc
mov
or
add
je
xor
adc
cmp
jo
jnp
mov
mov
sub
stos
cmp
jecxz
push
adc
mov
push
add
sub
stos
inc
cs
push
je
pop
jg
push
mov
enter
into
mov
adc
int
and
lods
out
mov
aam
insb
add
mov
mov
loop
push
fwait
dec
pusha
lock
sbb
xor
cmp
fisubrs
pop
fwait
dec
stc
or
add
cwtl
inc
in
adc
and
sti
push
lea
xchg
inc
mov
es
sbb
lret
mov
inc
pop
scas
lahf
pop
lock
into
cs
mov
ficoms
sub
nop
pop
in
shll
mov
fsubl
pop
xor
or
add
sar
insb
rcll
jmp
aas
into
outsw
sbb
mov
ret
mov
repnz
inc
sbb
mov
popa
daa
and
aad
popf
call
cmpsb
imul
lret
jge
add
xlat
in
dec
mov
adc
jae
data16
test
nop
sub
add
inc
shll
sub
jae
pop
jmp
inc
push
jmp
jmp
out
pop
popl
mull
imul
cmp
imul
icebp
cmp
xchg
sub
adc
mov
mov
sbb
and
pop
push
inc
sub
aaa
jle
loope
sub
jle
test
inc
lods
sbb
mov
or
push
pop
xchg
inc
loop
jbe
xchg
add
andb
push
test
ja
mov
jb
and
notrack
pop
repz
mov
in
shr
cmp
fwait
std
sub
mov
mov
ret
aas
push
ret
icebp
cmp
xor
xlat
xor
push
js
popf
xchg
jecxz
dec
scas
fnstsw
jg
lret
sub
cmc
pop
lock
xchg
aaa
iret
and
jne
push
mov
loop
insl
adc
shr
sbb
hlt
dec
jne
cltd
mov
pop
dec
pop
lea
pop
inc
mov
jmp
loop
outsl
lea
cltd
test
mov
into
xor
mov
jge
jecxz
push
jo
mov
lcall
imul
rcll
push
mov
xchg
pop
out
fsub
pop
add
mov
arpl
rclb
sbb
out
ficoml
push
outsb
jbe
lcall
sbb
cld
imul
daa
or
cltd
push
xorl
cmpsl
test
out
push
jns
arpl
mov
mov
push
rclb
sbb
cmp
sbb
aaa
int
ficomps
loopne
dec
adc
sub
insb
jnp
repz
or
cmp
xchg
data16
subl
ja
jns
into
lds
je
mov
outsb
xchg
in
add
jno
aaa
jno
xlat
sbb
fwait
push
cli
fbstp
out
fcmovu
nop
call
std
gs
jnp
mov
xrelease
inc
sbb
sbb
lahf
mov
pop
outsl
push
or
ja
mov
mov
jmp
xchg
xchg
dec
popa
lret
mov
lret
xlat
cmpl
out
mov
inc
xor
fildll
push
xchg
stc
push
pop
movsb
loop
sub
push
xchg
movsl
lret
sub
sbb
push
mov
ds
pop
scas
scas
push
dec
jbe
lods
pop
pop
xchg
mov
or
and
push
xor
inc
mov
or
cmp
addr16
xchg
repz
andb
rclb
cmp
out
jnp
mov
mov
push
fiadds
mov
and
sbb
adc
scas
inc
and
int3
add
mov
add
or
push
adc
cmp
mov
loope
xchg
dec
mov
insb
leave
insl
fisttpll
pop
sub
mov
jg
and
lahf
fiadds
dec
into
fisubrs
and
das
mov
repz
ret
mov
std
push
add
add
inc
inc
jecxz
inc
fld
add
pop
lcall
popa
mov
sbb
mov
push
imul
sbb
pslld
testl
add
mov
xor
lea
in
ss
adc
lea
dec
insb
cld
or
insl
mov
mov
mov
mov
xlat
cmc
jge
fwait
div
mov
mov
mov
add
push
imul
mov
xchg
dec
mov
inc
xor
andl
iret
push
stc
mov
in
push
movsb
mov
pop
or
xchg
stos
fs
es
inc
ror
sbb
adc
xchg
push
inc
adc
inc
loope
out
jle
cltd
jmp
stc
xor
bound
pop
jno
xor
adc
lods
cmc
mov
sub
dec
mov
xchg
jb
xchg
cmpsl
jecxz
or
push
jl
js
repnz
add
jmp
and
inc
faddl
mov
xlat
adc
dec
jnp
mov
pop
insl
mov
sahf
pop
or
div
test
pop
mov
repz
rcrl
xor
fucomip
les
and
or
fnclex
ds
repnz
aam
ret
xchg
dec
sbb
imul
jle
mov
cmpsl
data16
mov
fldenv
mov
mov
pusha
xor
adcb
ret
insl
mov
int
clc
loope
inc
add
sbbb
faddl
testb
cld
loopne
push
loopne
icebp
adc
fsubs
xor
nop
cmp
xchg
lods
and
es
pop
mov
xor
mov
imul
incb
dec
std
jmp
mov
adc
jl
cli
imul
mov
leave
cmp
xchg
xchg
jbe
lea
or
xchg
cmpsl
int3
xchg
mov
or
out
test
or
pop
outsb
add
lock
jl
ret
cmpsb
negl
fwait
or
sbb
inc
pop
mov
dec
push
add
inc
loopne
add
push
jl
xchg
xchg
adc
mov
and
jmp
xor
lret
bound
jle
ja
sub
jg
push
add
lcall
push
into
mov
add
addr16
out
sub
xorb
mov
or
mov
cli
or
es
and
movsb
aam
sbb
push
adc
inc
pop
push
js
jp
jg
push
aas
cmp
mov
jle
push
push
pushf
xor
sahf
stos
push
cmc
pusha
sti
sahf
in
or
mov
mov
cld
cltd
lds
xchg
stos
add
sub
dec
flds
ljmp
lods
scas
out
cltd
test
push
xor
mov
push
cli
sub
inc
jle
xor
enter
adc
aas
adc
lds
int
inc
lods
popa
clc
adc
insb
sub
lcall
mulb
dec
inc
sub
sub
fdivl
daa
gs
add
jecxz
fdivs
fiaddl
sbb
insb
pop
out
std
xor
es
out
sbb
dec
mov
lods
push
stos
pop
mov
push
clc
pop
xor
cmp
leave
imul
push
out
pop
mov
jl
adc
xchg
aad
sub
divl
dec
je
jge
mov
loopne
pop
popf
cmp
jp
jns
sub
fwait
pop
lods
bound
and
lds
adc
stos
roll
adc
mov
lods
insb
push
and
or
mov
shrl
enter
mov
lret
lahf
adc
aam
xor
sbb
sub
pop
lock
sbb
into
fnstsw
stc
push
std
das
cs
sbb
lret
shl
cld
shrl
jae
leave
pusha
xchg
xchg
jb
mov
pop
dec
pop
sub
add
shr
sti
adc
cltd
add
rcll
mov
mov
fstps
in
mov
add
test
sub
push
test
popf
stc
cli
je
mov
or
adcl
ret
jle
lahf
stos
lds
les
scas
test
aaa
into
aam
sbb
mov
xchg
movsb
fcmovnb
testl
sbb
or
push
loopne
sbb
scas
add
dec
jns
sbb
rorb
or
scas
push
shll
ror
out
mov
mov
leave
or
insl
aam
inc
and
fisubrs
push
fwait
fstpt
fsubr
cmp
sub
sbb
mov
in
or
dec
lods
sub
pop
xchg
xchg
testb
out
data16
xor
push
inc
sub
pop
add
or
mov
cmp
decb
repnz
sub
mov
mov
lea
test
aaa
imul
in
or
dec
cmp
popf
mov
cmp
jle
pop
mov
pushf
xor
lock
and
or
jbe
aas
push
jns
inc
mov
fdivrl
jno
sbb
fs
mov
inc
and
mov
pop
repz
hlt
jg
test
fwait
cmpsl
clc
test
int
mov
call
dec
mov
je
and
scas
adc
jne
sahf
hlt
mov
movsl
dec
out
xor
and
hlt
push
cmpsb
dec
and
jbe
jnp
sbb
movsb
push
xchg
pop
mov
xchg
repnz
cs
outsb
ret
int
fsubrs
or
add
lret
push
jmp
push
mov
icebp
pushf
pop
jns
das
jnp
pop
loope
xchg
xchg
inc
in
cmp
in
loope
push
cltd
or
jo
sub
and
xor
inc
dec
loop
mov
ja
in
or
aaa
xor
daa
push
mov
cmpsb
shl
sub
jecxz
out
lret
mov
rorl
fstps
test
and
sbb
lods
mov
imul
and
fst
sub
stc
sub
bound
imul
jp
out
pop
xor
movsl
je
iret
test
dec
hlt
gs
xlat
xchg
xchg
repnz
push
adc
mov
aas
xor
push
mov
sbb
pop
pop
and
xlat
outsb
mov
setge
or
or
sub
loopne
cmpsb
iret
lret
or
pop
cmp
lods
ftst
imul
add
imul
push
adcb
lock
insl
outsl
xor
mov
dec
or
aas
iret
bnd
stos
jmp
jnp
cmp
mov
adc
lahf
push
in
inc
dec
ficoml
subb
mov
dec
movsl
aam
cmpsl
in
sub
andb
mov
mov
dec
sbb
inc
shrw
pop
jl
sbb
jns
mov
lcall
sbb
lahf
mulb
sbb
out
mov
inc
sahf
jo
jbe
push
sbb
iret
push
dec
push
scas
cmc
adc
dec
mov
push
jne
icebp
adc
fs
xchg
fsub
pop
ret
ret
xor
lods
iret
fcmovnu
rolb
jl
daa
mov
ret
mov
or
daa
cmp
popf
cmp
nop
inc
subb
idivl
loop
sub
outsl
add
sahf
add
add
in
push
imull
cmovge
jno
mov
int3
add
jo
repz
rcll
lds
jecxz
mov
daa
xor
push
dec
fidivs
daa
cwtl
xor
fwait
cld
out
inc
jne
mov
jecxz
cmc
sahf
int3
mov
fildl
mov
aad
ret
pop
push
notb
xchg
loop
int3
test
sti
insl
jnp
lret
orb
cwtl
xchg
push
jbe
addr16
cli
cmc
cli
hlt
aam
push
add
dec
shll
cmp
fidivrl
sub
xchg
out
inc
cmpsl
mov
clc
aad
mov
insb
std
mov
cmpsb
cmp
std
mov
mov
jb
outsb
jg
test
neg
pop
push
jmp
das
xchg
icebp
inc
or
in
loop
lret
mov
pop
adcb
ljmp
pop
insl
sub
aaa
mov
mov
jae
mov
int
and
ret
jns
lock
loop
sub
ds
mov
or
in
sbb
leave
cmp
test
push
dec
and
xchg
inc
pusha
sub
ds
in
mov
pop
jno
addr16
mov
sub
xor
xchg
dec
mov
push
addr16
shlb
jo
insl
mov
loope
and
xor
xor
jle
shl
push
xor
push
mov
imul
fidivrl
push
jp
bound
sbb
mov
js
stos
test
push
test
mov
push
jae
xchg
inc
mov
dec
out
shr
fdivs
sbb
adc
cmp
std
add
jae
pop
mov
movsb
inc
adc
or
scas
imul
ss
fldenv
jp
pop
sti
inc
or
adc
mov
jge
mov
mov
sbb
mov
or
shrl
cmp
scas
addl
dec
jecxz
xlat
out
ret
js
scas
insb
lcall
cmpsl
jle
adc
lods
add
pop
lea
sub
mov
mov
adc
adc
pop
out
dec
fcmovbe
cmc
insb
subb
scas
jbe
jge
test
xor
push
add
adc
xor
mov
movsb
orl
fwait
and
test
scas
pop
fists
push
xor
arpl
push
aad
and
test
insb
mov
aas
jbe
outsb
incl
mov
imul
cmp
mov
inc
and
jmp
movsb
jge
sbb
mov
or
pushw
sbb
sbb
xchg
leave
hlt
movsl
lds
xchg
dec
imul
cmpsl
jae
test
or
mov
adc
stos
leave
push
push
jecxz
push
test
popf
outsl
sub
out
cld
push
shlb
mov
vdivss
mov
ret
shrb
lea
fiaddl
pop
insb
cmp
jp
cs
inc
sarb
lea
in
in
lea
mov
xor
lods
xchg
filds
cmp
jge
movsl
scas
cmpsb
int
aaa
out
push
clc
jmp
mov
les
mov
mov
arpl
adc
push
test
aas
aas
jmp
xchg
pop
mov
cmpsb
andl
nop
es
fisubs
ja
bound
adc
mov
mov
and
xorb
loopne
lret
and
dec
and
inc
stos
and
xor
inc
in
sahf
es
push
hlt
cmp
push
xor
cld
xchg
test
or
cmpl
mov
pop
call
iret
add
jp
inc
stos
cmp
insl
add
outsl
es
pop
jae
sti
imul
mov
adc
jl
in
dec
adc
xor
add
pop
mov
iret
ficompl
sub
mov
cmpsl
fsubrl
outsl
mov
mov
rcl
add
jl
pop
aas
popa
mov
cld
shlb
xchg
xchg
fisttpll
fstpl
xchg
jbe
int
or
lahf
mov
in
inc
ret
push
fwait
adc
adc
dec
mov
jle
sbb
xchg
cmp
cmp
es
xchg
test
aas
inc
lea
cmp
inc
fwait
rolb
cmp
ret
or
push
std
scas
and
and
push
not
xchg
mov
add
xchg
cmp
in
dec
test
scas
repnz
push
jns
icebp
icebp
fsubr
aas
das
jmp
aad
das
stos
jne
mov
xchg
mov
leave
arpl
negl
mov
dec
jecxz
jmp
mov
shrb
cmp
mov
fdivrs
xchg
movsl
jp
mov
pop
jg
dec
cmc
scas
adc
push
jne
jne
mov
pop
or
mov
push
jns
and
jns
push
inc
or
xchg
jno
mov
leave
out
sub
fs
push
mov
mov
dec
ficomps
in
cmp
adc
mov
icebp
push
imul
cmpsl
into
push
cltd
xchg
push
inc
or
pushw
push
fwait
cmc
add
mov
xor
pushf
in
dec
adc
out
xchg
in
ljmp
out
in
icebp
adc
cmp
je
loop
decb
shll
cs
xor
push
dec
clc
lahf
xchg
mov
or
jl
aam
ss
andb
mov
imul
in
mov
pop
cmc
in
scas
push
rcrb
sub
adc
adc
xchg
hlt
mov
ret
or
jbe
jmp
rorb
sub
mov
faddl
repnz
out
leave
lret
mov
cmp
pop
xchg
pop
cmp
in
lods
outsl
cltd
les
hlt
pusha
add
ds
push
push
adc
push
cwtl
lahf
cs
sbbl
mov
fs
shrl
pop
in
push
mov
mov
push
out
mov
xor
jmp
sub
push
xchg
outsb
add
bound
adc
cmp
push
cs
dec
clc
push
push
test
dec
rclb
cmpsb
add
mov
stc
mov
rcrl
shlb
je
std
push
in
push
adc
dec
push
and
fnstsw
sbb
mov
aad
leave
shl
inc
in
pusha
pusha
inc
out
sbb
xchg
and
repnz
and
jle
cmpl
test
lods
sub
pop
dec
jbe
xor
rorb
pop
jge
movsl
mov
pop
mov
mov
add
mov
jnp
mov
push
daa
popf
mov
insl
ja
mov
repnz
incl
push
and
sbb
std
cmp
adc
cmpsb
jno
scas
mov
add
jo
push
popf
lods
cmp
push
xchg
imul
ja
mov
stos
divl
jae
scas
pop
icebp
test
insl
lea
rcr
sbb
pop
dec
pop
sub
and
repz
test
repz
js
daa
cmp
xchg
pop
incl
call
sub
add
cltd
mov
pop
je
andb
ds
sub
add
hlt
pop
xor
mov
into
insl
pop
cmp
fwait
jl
push
ljmp
jmp
nop
stc
sbb
mov
jbe
inc
fistpl
and
cli
pop
lods
sub
pop
imul
test
repz
pop
dec
loopne
mov
lods
in
ljmp
pop
jp
scas
inc
icebp
push
loopne
into
mov
mov
cmp
out
cmp
int
xchg
mov
sbb
mov
cmp
fildll
rcr
jbe
and
cmp
lret
fs
xchg
sub
dec
push
aas
fiadds
out
insl
jle
mov
cmp
mov
jae
mov
xchg
mov
xchg
xchg
mov
fdivl
push
mov
push
stos
loop,pn
add
sbb
jmp
shl
scas
add
push
in
pop
or
test
pop
push
xorl
jo
lds
xchg
push
jle
lahf
mov
push
mov
sub
xchg
sbb
push
scas
xlat
cld
pop
in
jecxz
inc
xlat
cmpsb
sbb
repnz
rcll
in
mov
sbb
mov
and
cmpb
mov
or
adc
sbb
add
inc
int3
cmpsb
dec
mov
fcomi
cmp
das
icebp
ss
xor
out
pop
pop
inc
lods
adcl
lret
jns
sahf
jle
test
jns
cmc
js
jb
fildl
push
mov
inc
repz
sub
push
fnstenv
in
shlb
adc
add
mov
xchg
pop
mov
mov
xchg
stos
call
ss
jg
sub
je
ficoms
jo
adc
mov
sti
mov
fldt
xchg
cmp
and
mov
or
xor
rorb
and
xchg
add
push
arpl
aaa
in
mov
dec
xor
notb
paddw
pop
dec
sbb
ja
sub
lds
loop
cmpsb
push
into
dec
dec
bound
std
pop
mov
lahf
sub
and
push
xchg
pop
insl
idivb
cmp
mov
mov
insb
testl
sbb
out
or
xchg
mov
jb
movsb
insb
jecxz
sahf
sbb
cmp
jg
lret
nop
test
pushf
xor
out
test
les
or
ret
add
out
or
sbb
cmp
adc
loopne
es
xor
and
jbe
add
fbstp
fstl
aas
ljmp
push
mov
aaa
ljmp
and
scas
inc
mov
or
mov
sbb
pop
cmp
mov
cmp
jecxz
bound
ret
push
jb
or
insb
icebp
loopne
pop
jge
and
ror
gs
mov
inc
popf
jbe
ds
jnp
stc
gs
cs
push
stc
popf
xor
pusha
out
int3
fcmovnbe
hlt
sub
test
mov
sbb
xchg
mov
in
add
or
lahf
sub
mov
in
out
xchg
adc
out
cmc
xchg
daa
adc
inc
leave
iret
movsl
lds
jmp
repz
inc
adc
popf
jmp
scas
push
clc
xlat
outsb
rcrl
nop
imul
sub
xor
mov
adc
adc
cli
mov
dec
mov
aaa
imul
aam
arpl
pop
lds
jg
mov
notl
push
mov
imul
adc
cmp
or
pushf
cli
leave
jmp
mov
push
sub
inc
and
dec
jecxz
fmul
and
push
inc
jbe
mov
ret
push
lret
lret
fldenv
adc
add
shrb
nop
mov
icebp
jge
adc
mov
incl
cmpsb
pop
shlb
test
lods
xlat
ret
dec
inc
or
xor
jl
test
lcall
cmp
test
mov
push
mov
mov
push
xchg
shl
inc
sahf
insl
cs
mov
xchg
mov
xchg
outsl
mov
dec
or
and
push
outsl
pop
inc
mov
call
jns
xchg
dec
jmp
push
stos
jo
lahf
aas
arpl
jo
lret
mov
push
sahf
inc
xor
xorb
dec
scas
inc
movsb
lock
sub
sbb
cli
lods
jns
gs
cli
mov
mov
inc
xchg
adc
loopne
orl
aaa
pop
and
es
adc
in
repz
stos
or
fmuls
pop
dec
dec
imul
out
fcmovnbe
add
lds
insl
int
lods
outsb
shrb
mov
gs
push
nop
outsb
outsb
and
fstl
inc
ja
jmp
movsl
add
mov
pop
scas
and
push
sbb
mov
fadds
out
or
out
xchg
call
out
sub
and
jecxz
jo
popa
add
dec
jae
mov
xchg
cltd
and
outsb
movsb
outsb
fmuls
popf
cmpsl
lock
sbb
hlt
mov
notb
mov
fiaddl
jp
sbb
push
inc
jle
mov
dec
adc
sbb
movsl
andb
and
pusha
mov
mov
xor
pop
lods
inc
jle
icebp
cmp
dec
mov
pop
cmp
inc
xor
in
mov
cmp
outsb
inc
mov
lea
xchg
repz
ds
lret
aaa
rorb
dec
sbb
repnz
jb
sbb
ds
addr16
jmp
fdivl
and
xor
or
stos
js
cmpl
cs
push
pop
jp
cli
or
aas
pop
rcrl
xor
pop
jle
lret
pusha
cli
xchg
or
sbb
cs
fxch
pop
dec
fists
ss
mov
or
cs
repnz
out
lds
adc
mov
push
inc
and
cmp
xchg
or
aas
sarb
fsubrs
mov
pop
imul
push
mov
adc
and
sub
shrb
sub
push
sarb
fsubl
push
cmpsl
sbb
sbb
nop
icebp
sub
loope
sub
movsb
push
push
and
xor
mov
push
sub
adc
add
cmp
push
jge
adc
rcrl
jns
or
pop
push
cmc
xchg
in
cmp
push
add
push
fsubl
leave
arpl
push
cld
push
cltd
mov
fmuls
dec
cmp
mov
pop
dec
inc
out
sti
mov
stos
and
mov
xor
pop
fs
xor
xor
outsl
repnz
xchg
ficomps
ret
mov
outsl
dec
inc
push
cmp
gs
pop
test
ret
ss
or
and
jge
lds
jge
cmp
movsb
cmp
test
ret
int3
fcomip
hlt
fwait
xor
int3
pop
adcl
ffreep
dec
mov
clc
mov
mov
popf
jl
mov
test
ret
xor
loop
cmp
xor
gs
mov
push
stos
mov
daa
xchg
mov
push
dec
sub
or
sarl
stc
pop
mov
das
jg
mov
jb
jb
push
sub
cli
push
decb
lods
loope
call
fucomip
mov
addr16
add
sahf
mov
popf
repz
js
sub
inc
pop
mov
and
xor
mov
iret
mov
ljmp
cs
mov
fsubrs
push
pop
je
out
aad
lock
mov
js
cli
rcrl
lea
subl
pushf
lods
rorb
jmp
or
repnz
jo
jmp
sbb
push
pusha
stc
adc
icebp
outsb
cld
add
cmpsb
xchg
cmp
push
fsubrs
cmp
jmp
push
daa
dec
mov
in
push
sub
xlat
pop
mov
fxam
std
sub
add
adc
and
pushf
pop
dec
adc
jb
cmpsb
adc
in
das
sbb
adc
adc
mov
mov
push
mov
push
loop
cmp
jb
loop
cld
adc
call
mov
mov
sbb
push
fisttpl
pop
mov
shrl
lods
rcl
and
dec
mov
xchg
inc
mov
imul
ror
push
push
loop,pt
outsb
jae
cmp
popl
or
push
inc
push
pop
subl
test
or
inc
aaa
jle
or
xchg
cs
hlt
mov
jbe
cmc
adc
rolb
ficompl
shl
stos
out
movsb
cmp
enter
push
jo
out
push
scas
add
addb
in
push
mov
dec
inc
lods
xorb
adc
mov
in
pop
js
popa
pushf
xor
mov
mov
jne
lods
and
sub
in
fildl
imul
adc
fnsave
nop
sahf
add
jb
mov
stos
sub
in
andl
nop
xchg
orb
cmp
mov
lds
adc
lods
add
nop
ds
sbb
imul
xor
mov
mov
lds
sub
sti
adc
jge
arpl
das
fldt
mov
jbe
or
scas
mov
mov
cld
or
xchg
ficompl
pop
pop
mov
xchg
in
sbb
imul
lods
mov
dec
jl
ja
inc
and
add
jo
stos
test
je
test
pop
xchg
adc
dec
les
push
lahf
jp
ret
fdivl
scas
hlt
lods
add
inc
cmp
insl
insb
fs
cld
xchg
popf
mov
ret
mov
sbb
in
add
rcrb
hlt
mov
cmp
ret
lcall
sbb
push
hlt
lea
in
add
fsubr
daa
cltd
or
inc
sub
mov
ret
jmp
negb
dec
sahf
xor
push
jbe
inc
mov
xchg
jmp
stos
inc
lds
ror
pop
je
pop
cmp
pop
inc
inc
fidivs
dec
dec
xchg
test
mov
or
sub
lret
scas
jl
cmp
addl
test
lret
sub
or
lret
test
test
push
cwtl
out
sti
xor
sub
es
mov
pop
push
inc
pop
sub
fidivs
xchg
test
inc
frstor
test
mov
cli
mov
mov
loop
bound
dec
add
xchg
xchg
ds
sbb
mov
pop
nop
test
pop
imul
pusha
mov
out
xor
adc
or
repnz
in
mov
imul
cmpsl
ja
pop
jne
test
testb
jecxz
sarb
add
loope
and
int3
dec
push
adc
out
or
in
pop
xor
xor
jle
push
flds
movsb
pusha
not
shl
jnp
leave
sti
lea
cld
shll
adc
lock
mov
sub
hlt
push
jno
xor
les
mov
push
mov
push
cmp
in
mov
testb
sub
and
mov
test
or
sbb
push
sbb
xor
cld
pop
dec
aaa
dec
mov
jne
sub
mov
mov
iret
cmp
mov
repz
adc
fidivrs
or
lret
adc
xchg
mov
test
push
popf
push
sarb
aaa
icebp
sbb
and
leave
mov
fsubrs
rcll
pusha
sub
sub
jo
cmp
xor
out
addr16
addr16
das
jp
xor
mov
stos
jecxz
orl
mov
in
divl
lods
cmp
sub
pop
jb
lock
stos
stos
and
shll
add
sub
cmc
jle
out
cltd
ds
stos
out
jbe
and
xor
jno
xchg
dec
xchg
inc
fmulp
popa
add
pop
adc
insb
dec
inc
fidivl
bound
bound
popa
cmp
sbb
repnz
test
push
and
push
xchg
inc
out
out
sbb
sbbb
pop
loope
mov
mov
fiaddl
icebp
mov
stos
imul
pop
jae
out
test
push
push
jmp
cmp
add
or
jge
js
fidivs
fsubl
shll
lea
mov
xchg
cmc
mov
sbb
mov
mov
lahf
sahf
fcmove
iret
and
insb
loope
icebp
or
add
pop
mov
lds
aad
adc
pop
lods
mov
hlt
lahf
inc
cmp
les
scas
fwait
sub
out
sub
inc
sbb
xchg
push
stos
cltd
insl
push
movsb
ss
div
imul
inc
cwtl
mov
sbbl
mov
loopne
into
push
daa
fidivs
mov
pop
inc
in
mov
sbb
je
js
mov
lods
call
and
mov
mov
test
stos
xor
aas
jno
push
mov
adcl
xchg
sub
pushf
leave
enter
imul
sbb
xchg
cmp
insl
mov
xchg
repz
adc
mov
int
mov
clc
mov
xor
mov
push
cmp
add
cmp
mov
out
jae
cwtl
push
in
adcb
mov
insb
add
sub
cwtl
jb
sub
fldenv
adc
or
cld
inc
cmp
add
test
sbb
pop
out
sbb
mov
add
fdivrs
adc
arpl
pop
xor
sub
leave
gs
lods
jbe
fnsave
test
pop
dec
pop
fdiv
cmp
sbb
xchg
sub
stc
xor
jmp
or
jns
adc
dec
xchg
mov
lret
pop
notl
adc
or
movsb
addr16
aad
xchg
aaa
cld
nop
push
add
inc
cmp
sub
inc
fisttpl
mov
clc
jo
jno
negb
pop
scas
ja
lods
ljmp
pushf
cld
cld
into
and
and
and
iret
jne
mov
mov
fwait
lods
jl
xor
sahf
xor
adc
add
fbld
test
inc
lods
sbbl
inc
inc
sbb
pop
dec
dec
cmp
push
shr
or
lret
das
movsl
cmp
xor
mov
ds
call
mov
cmovbe
mov
sub
data16
mov
leave
loopne
xchg
dec
inc
mov
mov
or
decb
out
leavew
cwtl
sbb
sbb
jle
cld
adc
mov
stos
mov
mov
inc
xlat
call
or
mov
jmp
popa
das
mov
mov
nop
xor
dec
adc
pop
sub
repz
in
and
adc
test
xorl
or
jo
mov
mov
js
sub
fwait
mov
cmp
loope
fstpt
xchg
xor
pop
xor
scas
push
adc
lret
xorb
popa
mov
xchg
and
das
divl
pusha
loopne
xchg
sub
jge
outsl
push
push
scas
ja
stos
pop
cmp
lock
xor
shl
push
je
inc
cmp
repz
cli
and
xor
xchg
out
sahf
es
stos
into
cmpsb
loope
in
icebp
orl
xchg
adc
outsb
outsl
mov
nop
popl
in
in
std
mov
repnz
ret
xlat
xchg
sahf
pushf
pop
icebp
cmpsb
cmp
mov
inc
in
pop
cmp
mov
stos
loope
push
sub
fcomps
mov
lods
fsubr
loopne
arpl
fnstcw
inc
lcall
jp
pop
jge
sbb
mov
xor
mov
push
jmp
add
adc
xor
xor
movsb
cmp
pusha
jp
lahf
ret
pop
mov
das
pop
imul
mov
bound
in
adc
repz
sbb
jno
aad
dec
data16
cmp
inc
loop
cld
movb
mov
faddp
cmp
mov
into
lods
jns
jno
je
xchg
sub
sbb
cmpl
in
aaa
movsb
add
lods
sti
push
push
and
mov
out
inc
xchg
jb
xchg
pop
cmp
test
leave
xor
cld
mov
outsb
sbb
and
sbb
dec
gs
or
xor
out
push
cmp
in
xlat
adc
or
adc
sub
jbe
aam
cltd
push
shrl
xor
push
cwtl
sbb
xchg
and
sub
jl
xor
lock
in
push
mov
faddp
push
adc
mov
imul
cmp
xchg
outsb
jle
inc
xchg
je
fadds
fwait
pop
roll
sub
jl
leave
cltd
das
lret
xor
add
int3
arpl
mov
and
or
and
test
pop
scas
sbb
mov
loop
xor
imul
mov
lret
bound
aam
xchg
mov
pop
repz
mov
push
cmpsb
pusha
pop
ficoml
lret
push
insl
data16
daa
jle
or
push
pop
mov
int3
mov
les
imul
mov
scas
dec
daa
add
fcmovb
ret
mov
iret
pop
push
inc
data16
cmp
ljmp
mov
daa
mov
and
mov
adc
jg
xchg
fs
nop
add
sbb
jecxz
xor
in
pusha
loopne
mov
jnp
xorb
pop
cltd
sub
bound
push
out
sub
outsb
inc
jae
jbe
ds
loope
pushf
loop
std
adc
std
xchg
mov
push
outsb
mov
les
enter
cmp
pop
loop
aam
int
push
icebp
nop
and
pushf
fdivrs
pusha
ss
adc
cmp
xchg
shrb
and
stos
mov
mov
mov
popf
das
arpl
cs
sbb
cld
std
adc
sub
sub
cmpsb
xchg
ret
xor
and
push
mov
add
mov
fldcw
xor
xchg
sbb
push
cli
js
fucomip
push
push
sbbb
stos
das
xchg
faddl
adc
js
shr
loope
movsb
mov
push
fsubs
movsb
sbb
mov
movsb
fdivrl
push
outsb
cmpsb
sahf
out
std
ret
outsb
es
xor
dec
cmc
mov
xchg
rcr
orl
mov
push
fcomps
xor
jmp
pop
or
fs
mov
mov
clc
and
cmp
sub
xor
in
cmp
dec
vpsubsw
les
jno
inc
sub
cmp
sbbl
jb
int3
jecxz
int
cmc
sub
cmp
cmp
divl
adc
lahf
shrb
or
pop
icebp
or
test
sbb
les
aas
mov
pop
test
sbbl
mov
roll
push
jecxz
ret
adc
jl
xchg
pop
cmp
push
mov
test
dec
cmp
cmpsb
mov
inc
inc
mov
push
mov
sbb
ds
xchg
jge
ret
dec
shll
xchg
aas
mov
jmp
rolb
jge
lahf
push
shrl
in
lea
mov
dec
push
js
inc
lcall
adc
lea
inc
rcrl
mov
jmp
ficoms
dec
sbb
test
inc
popf
dec
jl
fsubrs
mov
add
imul
ja
hlt
pop
and
xchg
aam
aas
out
insl
fistpll
adc
daa
cmpsb
or
pop
aas
and
rolb
dec
rol
ss
shrb
je
popa
stc
test
xor
pop
cmpsl
jg
movsl
mov
aam
repz
mov
pop
sbb
and
mov
mov
jae
pop
sub
in
mov
test
scas
repz
xor
push
ret
repz
dec
jno
push
insb
mov
push
jo
or
movsb
add
jns
adc
js
lds
pop
cmpsl
dec
imul
das
fisttpl
jo
mov
and
and
and
repnz
ret
mov
pop
inc
cmp
ja
jge
or
popa
inc
stos
sbb
xor
scas
adc
iret
fcomi
sub
add
cmp
or
mov
into
jl
rorb
ss
scas
sbbb
jae
sbb
out
xchg
cs
sbb
rclb
mov
mov
cmp
enter
dec
popf
ljmp
test
push
aam
je
jae
aam
xchg
je
jg
mov
sub
adc
mov
jecxz
mov
pop
mov
inc
xor
or
imul
dec
pop
mov
movl
xchg
xchg
cs
inc
shrb
jns
sub
stc
lcall
mov
push
mov
pop
loopne
mov
or
mov
in
shrb
insb
ljmp
rclb
jo
and
out
jne
rorl
xor
cmp
aad
in
and
insl
mov
aam
sub
shr
push
out
xor
or
andl
jge
loope
popa
inc
lcall
inc
jns
xor
adc
dec
mov
in
rclb
jne
data16
mov
scas
mov
sbb
cmovb
mov
xor
or
inc
insb
xor
fsubrl
out
cltd
std
gs
sub
iret
andl
popf
sub
dec
imulb
das
loop
popa
inc
add
jbe
stos
inc
call
xor
mov
rcrl
add
jge
jns
push
lods
xchg
ds
popf
repz
sbb
scas
aad
adc
ret
shlb
pusha
pop
fwait
leave
pusha
jg
iret
imul
adc
or
addl
jge
mov
call
jge
mov
or
push
mov
pop
mov
mov
out
loopne
or
pop
mov
inc
fwait
xlat
mov
lcall
and
dec
push
or
test
iret
clc
xchg
lahf
cs
pop
mov
mov
insl
jecxz
xchg
mov
add
mov
jle
fdivl
push
xor
and
mov
xor
call
test
mov
ss
mov
inc
sbbb
pop
scas
xchg
lds
sub
xchg
scas
push
cli
loope
es
mov
inc
cwtl
jbe
inc
and
stos
pop
jbe
cmp
loope
aaa
dec
push
add
scas
cmpsl
pop
cmp
je
sbb
mov
push
dec
je
jge
push
push
dec
fs
jg
enter
push
dec
test
pop
add
stos
xchg
xlat
inc
adc
out
fcomp
add
push
scas
lea
out
push
icebp
mull
lock
out
inc
fldcw
sub
push
sub
addb
test
mov
das
imul
andb
xor
ds
jo
mov
lds
in
sbb
and
xlat
aaa
loope
call
push
ret
das
mov
ret
cmp
jmp
roll
xor
mov
test
cmpsb
lock
fbstp
push
adc
adc
leave
cmp
xchg
es
loop
gs
stos
pop
imul
rorb
pop
xchg
sub
lea
rorl
push
cwtl
or
pop
push
negb
je
xchg
xchg
std
fldt
jae
js
adc
pop
adc
pop
xchg
imul
sub
test
or
mov
dec
popa
sbb
adc
repz
or
cmp
adc
movsb
pusha
es
into
push
or
fnstcw
scas
fbld
clc
xchg
repz
dec
dec
sbb
dec
scas
in
or
pop
sub
popf
pmulhw
fstps
ret
lret
outsb
mov
sbb
push
out
pop
or
popa
inc
es
xchg
jecxz
jge
ss
cmpsb
jb
pop
arpl
test
or
xchg
out
leave
sbb
sub
lcall
jae
pop
dec
jecxz
dec
repnz
jns
aaa
ljmp
dec
daa
mov
loope
mov
leave
nop
ret
push
data16
es
sbbl
int
sub
addb
mov
adc
add
in
test
movsl
imul
jno
arpl
cmc
push
xor
ss
add
cmp
add
and
out
pusha
loopne
sbb
mov
mov
out
or
mov
pusha
mov
inc
stos
pop
nop
push
imul
pop
xor
enter
push
in
push
and
jmp
cmp
mov
leave
pushf
xor
push
jb
pop
sub
sahf
sbb
fwait
xor
pop
test
mov
push
jae
push
lahf
popa
js
aam
and
cltd
jmp
push
inc
movsl
xchg
sub
xchg
fcmovb
adc
dec
sbb
sub
dec
in
mov
ljmp
pushf
out
inc
push
mov
ret
and
adc
sti
or
pop
cmp
xchg
xchg
rolb
sub
or
cmpsl
xchg
adc
rcr
cmp
stc
cmp
arpl
cmpsl
loopne
jg
les
cmp
jo
les
lock
fadds
mov
cmp
mov
pop
into
inc
iret
mov
lcall
mov
add
sarl
cmpsb
pop
test
mov
xor
cmp
stc
dec
xchg
mov
inc
repnz
cmp
xchg
insl
daa
rol
fwait
add
push
xor
das
icebp
pusha
out
mull
xor
stc
xor
enter
push
fs
repz
push
jmp
inc
or
stc
scas
add
je
pop
mov
xchg
fwait
jle
inc
nop
push
inc
pop
cmpsl
std
xchg
fldcw
iret
pop
mov
pop
jbe
mov
gs
loope
push
adcb
pop
ljmp
inc
mov
mov
shl
mov
add
mov
icebp
fldl2e
lods
mov
ja
fldenv
iret
add
imul
xchg
clc
sti
or
test
iret
cmp
xchg
bound
mov
mov
sbb
cmp
cld
and
std
cwtl
enter
sti
inc
push
sub
and
mov
push
or
mov
data16
mov
jno
and
out
scas
inc
and
sub
stc
popf
mov
out
imul
aam
sub
stc
ds
jle
jno
mov
ss
sar
pop
sub
or
iret
bound
lods
inc
clc
or
outsl
lea
jno
push
sub
lea
aam
jne
jp
es
cs
iret
movsl
sbb
mov
sahf
add
xor
in
loop
pop
push
adc
dec
push
dec
hlt
nop
repz
addr16
sarl
mov
pop
fisttps
sbb
and
clc
cmovno
cwtl
out
sbb
mov
jo
pop
icebp
xor
js
adc
cmp
ret
fstpt
mov
xor
or
xchg
cltd
mov
push
mov
or
js
je
cwtl
clc
xchg
mov
or
mov
adc
int3
loope
ljmp
jno
mov
sbb
inc
lds
push
int
inc
xchg
ficompl
cmp
push
sti
sbb
shrb
inc
dec
in
adc
cmp
push
ljmp
jno
push
popa
mov
xor
out
inc
sbb
lds
mov
test
sub
imul
in
and
xor
jno
hlt
into
clc
lahf
mov
cwtl
push
lahf
cmp
push
add
aam
xlat
jle
sahf
nop
sub
mov
jecxz
mov
jb
lock
aam
fadd
jno
repz
adc
pop
mov
ret
outsb
enter
pop
push
je
stos
pop
cmpsb
push
mov
test
and
test
out
icebp
enter
call
mov
adc
mov
mov
sbbb
adc
push
ret
sbb
push
jnp
shlb
test
xchg
orl
call
repnz
imul
pop
adc
enter
lcall
arpl
or
mov
push
jl
mov
fisubl
movzbl
or
lret
mov
mov
adc
js
outsl
repz
iret
xor
mov
stos
and
test
cmp
xor
rcll
add
and
shll
insb
notb
cmp
jo
pop
cltd
scas
inc
shld
xchg
lods
int
push
imul
add
pop
je
loope
hlt
lods
sub
push
sbb
sbbl
test
mov
push
fsubs
dec
xchg
icebp
or
push
ljmp
jno
fmuls
dec
pop
push
and
cmp
cli
or
sbb
cmp
or
jno
push
mov
push
and
mov
rcl
mov
mov
faddp
ljmp
mov
push
xor
cwtl
pop
outsl
ss
outsl
addr16
out
mov
imul
xchg
mov
cli
psubusw
jmp
push
xchg
adc
add
jl
aas
mov
stos
mov
cmp
ja
mov
ret
leave
fidivl
adc
cld
push
jns
pop
test
je
mov
popf
and
addr16
jbe
test
inc
testl
imul
shlb
adcb
push
mov
mov
rcr
mov
mov
lahf
dec
pop
lds
cmpb
test
outsb
pop
xor
xor
jg
or
mov
mov
cmp
std
or
add
sar
pop
xor
ljmp
daa
shrl
or
outsl
jge
jo
pop
dec
pop
sbb
imul
into
jno
jp
push
push
inc
fisubrs
xor
lods
push
xor
inc
push
ljmp
dec
mov
add
push
enter
xchg
fs
adc
push
push
dec
aas
ljmp
xchg
adc
dec
sahf
test
add
xchg
js
fwait
aaa
cs
leave
jnp
or
push
jle
ret
fisubs
jno
dec
leave
movsb
incl
push
mov
fwait
daa
outsl
cwtl
pop
mov
test
xor
mov
or
add
or
fs
mov
dec
icebp
ds
lret
mull
pop
sbb
rcr
leave
inc
cmp
out
pusha
andb
fistps
shr
out
adc
decl
mov
std
mov
fldenv
sub
fldt
inc
dec
pop
mov
fsubrs
cmc
jl
into
adc
push
out
dec
mov
out
jbe
ficompl
lahf
xchg
js
sbb
rorb
cmp
adc
imul
pop
outsl
sbb
lds
and
add
inc
mov
test
cmp
pop
pushf
movb
cmp
adc
decl
jne
lret
xor
pop
pop
ja
bound
and
and
lret
xchg
out
sahf
nop
popa
push
inc
rorb
dec
data16
aad
outsl
mov
int
arpl
fdivl
movsb
in
daa
inc
rorl
divl
outsb
ljmp
mov
int
pop
gs
inc
inc
loope
mov
test
loop
out
lret
and
in
cmp
nop
sub
jbe
movb
mov
in
push
sub
push
xor
sbb
inc
push
pop
jno
push
ja
adc
inc
je
mov
lods
jmp
mov
icebp
or
jbe
sahf
int
pop
iret
ljmp
or
movsb
adcb
cmpsl
out
dec
mov
xchg
sub
mov
adc
mov
jno
lods
je
xchg
and
addl
sub
add
sbb
sub
jmp
shrb
jmp
repz
xor
cs
je
push
popf
loope
bound
jb
xor
and
xchg
fwait
or
cmc
xor
mov
hlt
xchg
das
pop
out
or
bound
mov
jbe
stos
mov
or
cwtl
or
inc
mov
xor
cs
loopne
or
aaa
vpsubw
xchg
xchg
push
mov
xchg
das
test
andl
testb
and
pop
mov
push
enter
cmp
aas
lret
sbb
sub
push
lods
inc
jmp
mov
ja
shll
sbb
fwait
and
lahf
loop
and
add
repnz
push
popf
scas
mov
mov
mov
xchg
data16
mov
push
jecxz
loopne
and
xchg
inc
in
dec
rolb
enter
jp
in
sbb
sbb
fisttpll
xchg
push
ljmp
popf
ja
out
sub
mov
jne
pop
test
fcoms
jp
add
andl
xchg
aaa
push
mov
mov
mov
bound
sbb
pop
mov
adc
jp
into
cmp
jae
pop
outsl
push
mov
imul
cmp
xchg
pop
or
nop
lock
test
xor
add
ljmp
pushf
ljmp
jae
jge
adc
fwait
dec
ljmp
andb
pop
cwtl
das
dec
sub
mov
test
insb
daa
fiadds
jbe
inc
or
push
inc
and
mov
mul
dec
movsl
add
adc
adc
scas
out
push
cmp
stos
cmp
mov
push
xchg
test
test
mov
mov
sub
xchg
or
mov
sub
aad
ret
add
pmullw
std
adc
xorl
jns
mov
les
mov
mov
or
ljmp
xlat
inc
test
hlt
jmp
cwtl
iret
adc
lcall
in
rclb
dec
or
jl
test
sbb
xchg
and
push
insl
and
mov
stc
popf
push
jno
fsubl
repz
jnp
mov
out
adc
pop
aaa
cs
mov
js
xor
push
push
push
popf
orl
out
pop
das
xchg
xchg
sbb
xchg
fs
outsb
sbb
in
in
ss
cmp
aad
dec
sbbb
hlt
sub
dec
fstl
icebp
adc
int
jno
and
cmpsl
or
int3
test
mov
lea
adc
fsubl
inc
mov
mov
xchg
dec
popfw
mov
out
cmp
xor
xchg
rorl
and
arpl
and
shld
lcall
sbb
int
dec
mov
movl
or
mov
or
pop
mov
adc
in
pop
lods
xchg
test
add
xchg
pmullw
test
jns
stc
xchg
repnz
cmp
into
lret
vaddpd
stos
push
sahf
daa
sar
mov
mov
add
scas
insl
clc
sbb
int3
cmp
iret
pusha
shll
jae
push
adc
push
cmp
test
ret
dec
popa
jns
shrl
repz
and
jo
mov
jecxz
xor
sbb
hlt
dec
inc
fs
adc
imul
stc
push
in
sub
enter
je
jge
clc
cltd
xorl
dec
fnsave
jmp
rcrl
ret
jecxz
stos
push
imul
dec
mov
fldt
mov
clc
push
and
shr
dec
mov
fcoml
jmp
mov
pop
mov
push
gs
ljmp
insb
scas
adc
inc
inc
mov
out
aaa
scas
inc
sbb
outsl
imull
mov
inc
sub
pop
or
cmp
mov
cmpsb
adc
cmp
xor
iret
jmp
mov
lock
fldl
scas
inc
or
dec
jecxz
ret
lds
outsb
aas
pop
mov
push
jl
pop
add
sbb
push
mov
jbe
call
cmp
es
es
test
lods
mov
xor
dec
push
mov
mov
sub
fwait
add
sbb
or
outsl
fidivl
dec
mov
jl
jmp
sbb
sbb
sbb
mov
imul
ljmp
jb
fnstsw
xchg
sahf
push
fbstp
jno
dec
pop
pop
mov
test
inc
clc
xchg
adcl
xchg
inc
pop
add
daa
inc
mov
push
sbb
mov
mov
inc
mov
roll
icebp
out
add
cmp
or
dec
pop
insb
xchg
shrl
mov
leave
popf
lods
scas
mov
stc
cmpsl
jmp
push
xchg
cmp
cmpsb
notl
sub
sbb
inc
popf
lods
aas
sbb
lds
jmp
mov
jae
mov
mov
movsl
shll
pop
std
rcrl
xor
sbb
push
jge
cmp
stos
ficompl
scas
smsw
dec
add
or
fimull
scas
sub
and
adc
push
bound
scas
jns
adc
xor
jmp
adc
or
stc
lcall
arpl
ds
cmc
or
hlt
aad
mov
stos
je
repz
into
push
notb
lea
mov
gs
pop
mov
rol
jno,pt
test
hlt
lret
jp
shll
out
jp
mov
jmp
dec
clc
jl
cmp
sbb
push
jle
sbb
repz
xchg
jecxz
lahf
add
mov
mov
or
ja
test
jns
xchg
loop
pop
dec
aaa
mov
inc
sti
xor
and
aas
scas
mov
push
jns
adc
pop
je
pusha
mov
adc
mov
dec
out
lahf
mov
inc
and
push
fs
sbb
ret
sbb
xor
fists
fidivs
stos
mov
pushf
mov
ljmp
inc
fwait
dec
xor
mov
xor
add
test
das
and
int
add
in
push
hlt
int
sub
addb
imul
jl
lds
sbb
jge
mov
jno
je
mov
cmpsl
pop
push
popf
test
popf
pop
popf
int3
xor
aad
stc
lods
aam
xlat
scas
lods
inc
loope
lahf
cmp
ljmp
jg
push
or
push
movsl
adc
out
cmpsl
hlt
sbb
xor
push
xchg
outsb
adc
pop
mov
fsub
ja
jbe
adc
daa
mov
cs
pop
push
cmp
cmp
mov
pop
add
add
cs
fdiv
push
jl
dec
sub
sub
jecxz
fnstsw
mov
mov
fiaddl
cmp
insl
movsl
clc
adc
add
lock
jo
jge
mov
adc
pop
mov
test
jb
daa
mov
adc
and
and
adc
xchg
dec
in
pop
xchg
pop
jg
insl
inc
iret
sub
and
mov
testb
shr
mov
sbb
fnstcw
jle
shlb
jmp
pop
pop
cwtl
xchg
sub
testb
jp
mov
pushf
fwait
loopne
dec
add
mov
cltd
rolb
mov
cmp
not
xor
xchg
xchg
loopne
jns
test
xor
lahf
call
mov
adc
lds
orl
lods
push
cs
mov
xlat
push
pop
xchg
add
mov
pusha
rolb
pop
inc
add
sub
dec
shl
sbb
fsts
jge
adc
dec
pushf
jge
push
shl
clc
fiaddl
out
sarb
mov
sub
orb
cmp
cmp
jno
jecxz
aaa
jae
mov
notl
xchg
mov
es
sbb
push
imul
push
mov
xchg
xchg
or
mov
dec
test
mov
pop
cmc
mov
dec
jl
add
jbe
or
lcall
adc
push
gs
mov
inc
pop
fcos
sub
lods
add
outsb
out
nop
mov
iret
mov
aas
loopne
hlt
in
sbbl
mov
push
out
mov
daa
pop
cld
inc
out
mov
cmp
and
push
adc
cmp
out
dec
add
inc
mov
dec
push
aam
mov
inc
fisubl
pop
idivb
jge
nop
push
cmp
mov
jl
sub
pop
je,pt
adc
lret
sub
stos
pop
xor
adc
mov
mov
fildl
jnp
cmp
pop
out
add
jbe
xchg
test
adc
inc
test
xor
leave
int3
movsl
jbe
out
jnp
cmpsl
inc
and
mov
push
aaa
clc
lods
and
mov
rep
mov
aaa
cmp
icebp
xchg
mov
sub
lds
push
insl
sbb
outsl
out
pop
cmp
xor
mov
pop
jb
cmpsl
dec
bound
cmp
loopne
jge
subb
push
sahf
in
dec
in
test
aaa
pushf
dec
mov
adc
add
adc
xor
test
sbbb
adc
jno
mov
mov
cmp
lret
test
je
mov
jge
adcb
jo
mov
cmc
pop
mov
ret
jns
shl
repnz
add
daa
inc
sub
hlt
xor
cmp
jae
aam
sti
inc
mov
cwtl
jb
jg
dec
pop
pushf
cli
lods
out
aam
xchg
jae
or
subb
cmp
sbb
adc
add
mov
mov
ret
clc
sahf
and
movsl
mov
outsb
jmp
cltd
inc
mov
xchg
je
fwait
cld
negb
cmpsl
cmp
add
and
mov
lret
rolb
movsl
jmp
scas
ret
jb
lods
outsl
sbb
add
repz
pusha
add
mov
rcl
jge
push
outsl
mov
shr
fsubrs
out
int
int
xchg
andb
mov
or
sti
adc
push
sub
xor
movsb
jecxz
out
rorl
adc
sub
mov
inc
and
repnz
cwtl
xchg
mov
out
vpcmov
cmp
jmp
lea
sbb
lret
and
jo
xchg
in
std
scas
call
or
clc
rorl
shl
jge
std
mov
mov
add
ljmp
add
cmpl
xor
pushf
fidivrl
imul
arpl
push
xor
add
scas
lock
cmpsl
cmp
push
ret
mov
push
stc
sbb
or
shlb
lahf
notl
xor
iret
cltd
jae
outsl
daa
cmp
push
ljmp
notb
jg
adc
popa
jne
push
lods
mov
addl
sub
mov
rorb
inc
aad
testl
lcall
addb
push
in
xchg
shl
loope
mov
adc
mov
outsb
sbb
jge
mov
jp
push
xchg
rorl
and
cmpsl
movsb
sub
scas
hlt
sub
fsubr
xchg
dec
mov
loope
add
xchg
mov
test
repz
push
or
fs
sahf
test
rclb
data16
loope
push
stos
popf
sbb
dec
jbe
bound
pop
ja
adc
or
fimull
xchg
inc
inc
and
mov
mov
cwtl
jae
fimuls
cwtl
test
cwtl
cmp
ljmp
or
jp
stc
xchg
fstpt
dec
push
push
lcall
push
sbb
adc
sbb
test
inc
data16
adc
mov
mov
test
fisubl
loope
rol
inc
xchg
jo
push
fld
push
rolb
lds
xchg
stos
xchg
push
and
in
test
mov
xchg
dec
les
ds
repnz
stos
out
cs
xor
sbb
xorb
add
dec
stc
cmc
fimull
incb
mov
xor
inc
repz
lcall
in
cld
pop
jecxz
mov
sub
test
push
pop
or
adc
sbb
int3
push
dec
hlt
ret
and
push
and
mov
aaa
pop
int
fiaddl
lahf
stos
test
loopne
mov
sbb
repnz
je
frstor
mov
sarb
imul
adc
mov
adc
inc
cltd
mov
fisubrs
and
adcl
sub
jae
mov
pop
sbb
loop
or
jo
add
aam
bswap
nop
xchg
ret
xchg
in
fsub
movsl
icebp
push
fsubrl
pop
inc
loop
add
push
ss
cmp
fimuls
nop
arpl
outsb
out
mov
jg
cmp
jb
divb
lahf
push
inc
aas
push
test
fs
fisubs
notb
add
inc
mov
dec
sbb
push
jno
scas
pop
sub
jnp
xchg
sarl
out
or
push
loopne
call
add
aas
js
hlt
cmp
pushf
push
mov
int3
ret
sbbl
mov
js
adc
jns
xor
stc
std
or
addr16
cmp
xchg
add
jb
in
mov
jle
lds
shl
mov
adc
mov
fnsave
shll
xor
pop
dec
mov
push
cmc
cmp
push
jmp
subl
add
aas
incb
lock
push
sub
xchg
cli
jo
icebp
mov
xchg
test
fcomip
inc
or
lods
and
movsl
lds
add
insl
xchg
cmp
adc
leave
inc
cmc
dec
pop
das
out
push
ss
popa
cwtl
xor
push
leave
pusha
test
mov
sub
jnp
cmc
sub
lahf
pushf
jle
cmp
xchg
lock
mov
mov
pop
pop
test
cmp
mov
rcrl
or
sub
in
inc
fscale
add
je
les
mov
cmpsb
aam
dec
push
xor
mov
insl
loope
mov
clc
jns
call
adcb
inc
arpl
pop
out
or
cltd
les
idivb
or
mov
sub
imul
add
mov
mov
push
dec
pushf
movsl
rclb
cmpsb
imul
push
jbe
lds
cmc
ret
popf
dec
outsl
dec
in
adc
push
jb
jl
mov
insl
push
aam
dec
adc
pop
jbe
sub
ds
je
loope
out
push
mov
decl
mov
mulb
jbe
scas
pop
stos
out
adc
imul
faddl
cwtl
push
sub
xchg
dec
loopne
lcall
push
sbb
ret
repnz
pavgb
xor
iret
iret
push
in
jp
jl
mov
mov
push
add
xor
pop
cmpsb
leave
fadds
jo
cld
mov
cs
cmp
sbb
fwait
pop
out
adc
xor
pop
xchg
bound
lds
xchg
dec
mov
je
dec
xor
lret
or
jg
vunpckhps
movb
out
addr16
in
in
cmpsl
fistpl
jecxz
notb
mov
add
xchg
inc
and
sbb
push
pop
icebp
xchg
or
sarb
pushf
divb
pop
cwtl
xorl
adc
cmp
adc
ds
jo
pop
mov
roll
add
dec
sbb
leave
pushf
push
int
cmp
ss
fs
jb
lods
push
rcrl
push
incb
pop
loopne
gs
mov
sbb
dec
data16
loopne
sub
sbb
mov
sub
std
inc
hlt
scas
clc
push
hlt
adc
xchg
fdivl
dec
inc
sahf
stc
inc
out
adc
push
jno
fbstp
mov
dec
jmp
sbb
sub
mov
arpl
cli
pop
in
mov
xchg
add
repz
pop
sahf
std
mov
out
pushf
scas
loop
mov
pop
push
iret
fs
arpl
pop
mov
test
inc
add
add
out
sub
outsb
cmp
js
jnp
adcl
call
sub
lock
in
and
aad
rorb
repnz
mov
sub
add
cli
fstl
pop
mov
adc
add
xor
xchg
push
ja
xor
mov
les
test
ja
sub
ss
push
aaa
dec
sub
jge
push
xor
mov
pop
sub
sbbb
jle
outsl
subl
negb
push
js
loope
test
andb
mov
popa
mov
xchg
add
mov
rorl
out
push
push
inc
test
outsb
mov
lahf
dec
inc
aam
sbb
mov
inc
cmpsl
jno
dec
fdivrs
repnz
std
nop
icebp
scas
leave
sarl
shrl
mov
sbb
testl
fadd
push
test
shrb
fwait
fs
jl
mov
pushf
inc
xacquire
sub
xor
stos
lret
nop
in
pop
movsb
daa
mov
jno
inc
fcoml
mov
das
stc
and
mov
add
inc
fdivrl
jae
xlat
cmpsb
out
in
sbb
jnp
adc
mov
adc
dec
cmc
lods
mov
inc
adc
arpl
cld
inc
arpl
test
adc
mov
movsb
cmp
xchg
add
adc
jb
pop
pop
jnp
ficoms
and
add
adc
sub
adc
stc
mov
xchg
mov
pop
push
fs
jo
std
xchg
sub
push
ret
adc
in
add
add
fwait
and
xchg
cmc
imul
ret
pusha
mov
push
shlb
cli
add
imul
push
imul
sub
sub
fnstenv
push
adcb
aas
mov
inc
arpl
xchg
pop
add
add
andb
fwait
mov
mov
stos
loop
pop
sbb
or
pop
scas
outsl
lahf
ss
push
jne
lods
mov
sahf
pop
int3
or
or
jne
sti
xchg
pushf
stos
fcomps
dec
andb
jmp
addl
inc
cwtl
xor
jg
call
cmp
cmpsl
push
leave
das
out
dec
subl
mov
mov
stos
jno
les
shlb
jg
dec
push
or
mov
filds
dec
xchg
jne
and
dec
pop
int3
xchg
sub
out
xchg
sub
lret
dec
aam
mov
push
fimuls
push
fadds
pop
neg
sbb
adc
mov
pop
daa
or
sub
test
lret
imul
pop
insl
cltd
addr16
mov
xchg
sub
add
mov
ja
mov
inc
adc
sbb
pushf
dec
sbb
clc
repz
movsl
jl
hlt
and
jg
das
popa
repnz
and
push
ret
bound
ja
push
ret
pop
sub
push
mov
test
out
jno
sbb
mov
xchg
push
xor
adcl
mov
mov
mov
shrb
dec
pop
push
ja
js
cmp
fs
add
push
ret
sti
jecxz
clc
rorb
mov
dec
je
or
and
loopne
cmp
xchg
sbb
lea
arpl
scas
es
loopne
xchg
mov
dec
loope
cmp
push
jbe
cld
sub
mov
mov
inc
out
in
mov
xchg
dec
dec
int3
popf
pop
repnz
out
testl
xor
fldenv
xor
or
push
push
dec
sub
fmuls
xchg
fisubrl
push
and
xchg
sub
pop
notb
insb
jb
and
imul
rorl
xchg
xchg
sbb
jno
cmp
jns
cwtl
sbb
int
fmuls
mov
pop
jmp
leave
mov
aam
aam
or
mov
sbbb
andl
xchg
mov
and
ss
repz
xlat
sahf
xor
jb
lret
mov
mov
cwtl
push
movsb
ficompl
mov
fisubrl
testb
push
push
shl
and
ljmp
push
mov
push
mov
into
mov
out
mov
or
adc
add
or
mov
mov
ret
jnp
sbb
mov
mov
xor
popf
inc
xchg
std
sbb
lds
cmpsl
push
lcall
std
mov
cmp
jnp
and
out
mov
and
outsb
stos
daa
in
shlb
push
mov
and
or
out
out
xlat
adc
add
push
outsb
jg
xchg
lds
mov
idiv
or
lods
or
and
mov
cmp
push
loop
cld
xchg
ja
sub
cmpsb
mov
aam
mov
mov
mov
enter
pop
bound
mov
mov
sub
es
pop
pusha
mov
mov
xor
jns
or
sahf
rcrl
std
push
loope
roll
ss
stc
lds
mov
jp
push
hlt
movsl
movsb
sbb
dec
jns
or
sbb
ds
aad
daa
adc
lret
sub
mov
aas
dec
loope
push
out
cmp
enter
fidivs
or
cmp
sahf
adc
sbb
cmc
shrb
ljmp
adc
sub
add
cmpsb
jbe
mov
jecxz
xorb
xchg
test
or
and
in
insb
mov
lds
std
sbb
das
dec
dec
adc
inc
push
insb
jae
popf
stos
test
gs
enter
mov
in
adc
les
mov
in
xchg
jmp
aas
mov
push
out
testb
or
je
fs
xchg
sub
fldt
mov
and
aad
sar
lock
dec
in
scas
rcrb
mov
sarb
cmp
sbb
jae
cmp
sbb
jg
repnz
mov
dec
fs
lret
mov
inc
lods
lods
shrl
cmp
sbb
icebp
bound
stos
test
push
out
sti
or
and
in
push
lods
rorl
mov
push
push
in
insb
inc
in
or
call
loopne
pusha
or
cmp
sub
stos
pop
std
mov
daa
lds
pop
iret
add
and
cmp
out
xor
inc
jbe
pop
test
cmpsl
or
gs
pop
pop
fnsave
push
pop
in
sbb
ret
imul
add
push
lods
and
and
jle
out
and
push
fsubrp
mov
xchg
jecxz
std
daa
push
lcall
stc
andb
push
js
and
or
sub
lds
xchg
in
stc
cmc
ss
ss
add
mov
stos
aas
call
inc
bound
add
ljmp
dec
pop
loop
ret
or
cmp
insl
jnp
cmp
je
scas
pop
lahf
fdiv
loope
dec
xlat
cmc
jp
jb
sub
popa
sahf
pop
test
push
outsl
jmp
fdivrp
inc
cmp
insb
bound
sbb
mov
pop
mov
and
xchg
fadd
pop
add
subb
in
jmp
in
mov
dec
and
pavgw
loopne
or
scas
push
push
fists
fdivl
rcll
mov
jns
cmc
ss
sbb
push
in
int3
int3
data16
push
out
scas
inc
mov
faddl
or
mov
pop
icebp
cs
cmpsl
scas
xchg
pop
xor
jecxz
cmc
or
daa
push
jge
mov
loopne
iret
and
mov
push
jbe
push
xchg
sub
sbb
lahf
nop
popa
jo
imul
jae
dec
std
fldenv
rcrb
dec
push
loope
aaa
mov
and
ret
adc
inc
fcmovnb
dec
mov
lcall
jno
lods
cmp
inc
adc
popf
mov
xchg
sub
push
inc
ror
inc
mov
and
push
add
out
popa
loop
sbb
mov
pushf
mov
call
adc
xchg
in
test
in
jne
bound
dec
std
push
js
fbstp
loop
shll
std
adcb
inc
test
mov
movsl
ss
rcll
mov
and
shll
fs
fisttpl
pusha
and
out
sub
scas
pusha
jg
cmp
mov
jle
jmp
or
repnz
and
pop
stos
mov
loope
pcmpeqd
mov
adc
xor
dec
mov
inc
dec
in
push
arpl
inc
xchg
jl
mov
cmpsb
int
les
negb
cld
or
es
xchg
cmp
popl
iret
mov
push
jbe
lds
sbb
inc
push
sbb
arpl
jns
test
inc
mov
lret
cli
xchg
pop
mov
das
fimuls
or
and
iret
xchg
orb
push
cmp
jno
xor
dec
aaa
jge
fwait
insl
iret
fdivs
xchg
sarl
out
jo
pusha
sbbl
mov
cmc
das
or
mov
andb
and
add
mov
lods
push
cmp
int
and
xchg
call
imul
icebp
movsb
out
jo
or
mov
mov
std
mov
push
cmp
fnstenv
mov
testl
inc
sbb
int3
inc
sbb
popa
das
xchg
prefetch
mov
scas
adc
test
je
dec
jge
loopne
test
xchg
xchg
inc
test
loopw
arpl
adc
xor
out
xchg
mov
pushf
js
mov
xor
fstpt
fsubrs
fnclex
movsl
xlat
pop
test
sub
lods
dec
sbb
fs
push
lret
inc
push
xchg
das
xchg
push
pushf
scas
push
push
pmulhuw
jecxz
js
mov
and
xchg
clc
xchg
daa
pop
cltd
xor
jmp
out
xor
inc
mov
sbb
lret
clc
inc
cmc
mov
call
call
popa
xchg
xor
int
outsb
sub
cli
dec
push
dec
sbb
mov
shl
inc
cmp
push
push
movsb
mov
sar
popl
add
xor
popf
mov
jns
push
decl
test
mov
mov
jle
in
daa
jmp
cwtl
out
subl
cltd
jle
push
mov
push
loope
adc
pusha
lock
mov
xchg
pop
mov
arpl
push
imul
aaa
and
and
inc
push
mov
pusha
lea
inc
lret
xor
insl
aam
pop
sbb
push
jmp
push
lahf
cmp
add
dec
pop
stos
jl
icebp
xor
fadds
pop
aad
cmp
outsl
adc
fildl
and
xor
movsb
inc
push
test
stos
aaa
dec
jo
lds
mov
sbb
leave
aaa
call
out
ret
nop
les
ret
xor
gs
mov
jmp
or
add
mov
jmp
add
xor
imul
jbe
int
sbb
xor
pop
ds
add
add
shr
jp
fidivl
lods
subl
test
dec
movsb
xor
imul
cwtl
mov
cmp
mov
mov
xlat
fidivs
xchg
push
add
mov
int
dec
fnsave
xor
or
in
lret
bound
aas
jmp
int3
out
and
jo
into
into
xor
dec
jnp
test
and
mov
pop
sbb
sbb
and
ret
and
test
dec
dec
inc
aad
adc
adc
mov
jl
sub
lret
mov
fiaddl
in
adcl
js
or
jp
inc
fcomps
aaa
pop
dec
imul
lock
scas
jne
insb
xchg
push
mov
cmp
int
and
rclb
jle
cmp
scas
lock
lods
dec
dec
add
aas
inc
les
enter
pop
lods
ds
pop
gs
call
mov
add
sarl
aas
jno
stos
pop
push
inc
mov
mov
push
lret
std
xor
xchg
js
in
mov
jb
xlat
insb
pusha
idivl
or
push
push
add
rcrl
call
cmpb
enter
jg
rorl
push
sbbl
push
sahf
xor
scas
xchg
mov
jecxz
int
sub
or
dec
rolb
icebp
jge
cwtl
mov
in
test
mov
jg
outsl
sbb
xchg
cmpl
bound
fmull
or
ret
mov
push
push
das
jb
inc
gs
rorb
push
mov
sbb
dec
repnz
cmp
sbb
test
movsb
add
fs
cwtl
or
pop
push
aam
mov
cmp
mov
xchg
inc
adc
dec
repz
fnstsw
dec
xorb
dec
fstl
push
insb
fcoms
cmpsb
adc
pop
das
or
sbb
pop
sahf
lods
nop
dec
fistpl
movsl
subl
sub
test
repz
add
ficomps
clc
adc
cmp
jp
stos
push
xor
or
sub
rol
addr16
notl
les
jo
adc
push
hlt
cmc
jno
push
cld
or
mov
fidivs
aad
popa
mov
and
mov
inc
xchg
popf
pop
pop
cmc
mov
add
mov
call
mov
pushf
decb
pop
mov
jl
cmp
daa
in
pop
imul
xchg
pop
hlt
sub
push
sbb
ret
nop
pop
stos
mull
xchg
sbb
dec
jbe
test
fnsave
cmovns
lsl
mov
lahf
adc
xchg
es
popa
pop
stos
mov
in
xor
shr
inc
sbb
filds
xor
aas
cmp
das
movsb
pop
out
sbb
mov
clc
cmp
sub
push
aas
mov
xchg
loopne
and
sub
idivb
dec
fisttps
lea
lret
scas
rep
inc
and
push
loope
xor
push
fcmovnbe
jne
push
std
xchg
push
jle
call
loop
cs
lret
mul
inc
add
xor
xor
jne
push
testl
cmpsb
or
cmpsb
mov
scas
push
pop
xchg
aam
cmp
pmullw
dec
lret
push
sub
iret
fldenvs
xor
pop
mov
or
xor
or
into
subl
popl
mov
lds
jbe
xlat
fisubrl
out
lods
mov
enter
mov
add
xchg
sar
pushf
ja
in
xchg
inc
in
jl
cmp
pop
jne
adc
mov
mov
loopne
je
aaa
xor
bound
mov
adc
cmp
xor
outsl
mov
jmp
pop
pop
mov
loopne
pop
inc
movsl
cmpsl
lods
idiv
xchg
jmp
aad
mov
sub
jo
jl
mov
push
mov
mov
sbb
mov
fs
push
add
mov
xor
scas
jp
mov
sbb
ds
mov
dec
rorl
xchg
xor
mov
inc
ficoml
test
xchg
testl
test
adc
lods
push
push
movsl
jae
pop
jno
sbb
or
lcall
es
ss
pop
rcrb
mov
and
cmp
daa
pop
test
loopne
ljmp
sti
inc
pop
daa
mov
xchg
jb
sbb
pop
dec
rcrl
add
pop
out
in
jl
loop
mov
notl
sti
jnp
jb
mov
lret
mov
std
push
xchg
cmp
sarl
loop
jno
xor
sub
iret
mov
add
rcrb
lods
iret
neg
xchg
loope
loope
pop
sub
xchg
sub
xchg
jno
movb
push
xchg
cmp
aam
addr16
xlat
bound
push
movb
push
jp
xchg
test
fwait
xchg
pushf
mov
fs
fsubs
das
jp
int
and
jecxz
xchg
loop
stos
xor
adc
loop
jbe
fbld
aam
sahf
stc
xor
push
xchg
xchg
out
repnz
xchg
mov
stos
pop
ds
lret
stos
cli
push
xchg
adc
cli
and
jno
je
mov
push
jecxz
jae
int
sub
mov
call
fstps
sub
dec
pop
inc
xchg
mulb
dec
mov
ficompl
push
sahf
call
js
jo
leave
in
js
cmc
xchg
loope
pop
dec
add
call
or
lfs
pushf
jp
jbe
pop
pop
pop
imul
test
push
dec
fnstcw
jbe
xor
ss
int3
mov
jle
arpl
mov
pop
cmp
adc
adcl
std
aam
inc
adc
pop
cli
jmp
jl
loope
mov
sub
cmpsb
push
inc
popa
add
and
mov
test
cwtl
pop
loope
jg
pop
out
xchg
adc
jmp
enter
loop
jb
fisttps
and
addr16
leave
cltd
rcrl
insb
mov
rorb
pop
adc
shll
shl
pop
fidivs
push
jbe
jg
ss
in
hlt
pop
jnp
sbb
repz
loop
insb
adc
pop
in
mov
jae
fiadds
pop
js
dec
fidivrl
loope
clc
adc
and
inc
cmp
pop
bound
movsl
mov
push
lods
xor
nop
lods
push
xor
into
pop
repnz
arpl
mov
out
popa
xor
lods
das
iret
xlat
jmp
lds
inc
pop
out
js
in
notl
jbe
inc
xor
add
dec
sbb
cmp
xchg
das
lcall
fimull
notl
movsb
dec
mov
sti
fs
bound
daa
dec
dec
or
push
jnp
mov
mov
rcrl
or
stc
and
inc
or
bound
jle
aas
dec
xor
pop
lret
rcr
mov
out
es
leave
mov
mov
push
and
nop
js
dec
sahf
loope
cmc
test
aad
addr16
push
push
int
orl
mov
push
lret
push
rcrb
enter
loopne
jle
shrb
hlt
push
jmp
das
push
das
lds
repnz
push
xor
jae
add
cmp
popf
addb
imul
add
mov
pop
shr
and
push
mov
scas
scas
cmp
into
xchg
add
subb
fbld
push
aad
in
test
add
mov
aad
sub
jl
or
hlt
mov
loop
push
shrl
or
and
fadds
cmpsl
test
or
daa
fnstenv
out
je
ficoml
and
push
icebp
loope
sar
out
hlt
adc
and
pop
add
fbld
fprem
add
xor
arpl
aas
cmp
cmc
cmp
xchg
rorb
repnz
xor
sbb
lahf
testl
jns
call
lock
mov
in
mov
into
jg
inc
outsb
arpl
scas
aaa
out
inc
mov
data16
jo
or
adc
dec
xchg
or
es
add
adc
aaa
sbb
cmpsl
loop
adc
movsb
mov
insl
mov
lahf
push
es
xor
fistl
lods
or
adc
mov
mov
movsl
sarb
xor
loopne
lds
xlat
shll
aas
and
repz
mov
xchg
loope
mov
adc
enter
stos
cmc
movsb
lods
dec
call
dec
push
repnz
add
enter
fimull
fs
lods
mov
mov
mov
inc
pop
pop
js
adc
mov
mov
add
loopne
repnz
pop
xchg
sub
sarb
jb
cmp
repnz
jnp
or
pop
sbb
jg
push
and
fnstenv
inc
mov
arpl
out
sbbl
aas
or
insl
std
aam
mov
popa
pop
add
jg
mov
in
or
fidivrs
xor
outsl
lcall
stos
imul
fucom
testb
fiaddl
gs
push
addr16
jae
mov
int
or
lods
icebp
fisttpll
add
ljmp
aas
cmpsb
invd
fucom
insl
jge
scas
call
or
mov
or
enter
pop
xchg
lock
lods
pop
jmp
or
loop
in
fwait
add
push
sub
pushf
push
out
add
dec
scas
lahf
nop
xchg
adc
cmp
addr16
cmp
out
cmc
popa
scas
pop
loope
aam
and
xchg
pop
orb
jne
ja
iret
xlat
sub
cld
dec
in
adcb
mov
stc
pop
sub
cld
sub
clc
mov
lods
and
adc
xchg
cmc
psubd
push
lds
repz
loopne
ret
cmp
popa
sub
mov
or
nop
std
xchg
ret
jae
lds
mov
lret
cmpsl
pop
std
int
lds
dec
fidivrl
repz
sub
xchg
xchg
mov
mov
out
xlat
ret
ret
nop
push
test
xlat
jp
shlb
call
repz
in
test
test
icebp
loop
push
icebp
das
cmp
test
int3
arpl
data16
mov
ret
adcb
enter
sahf
and
push
sub
jge
xchg
out
and
jecxz
sbb
pop
add
jl
test
es
es
call
div
ljmp
leave
lods
mov
ljmp
imul
lock
or
lea
lahf
add
mov
pop
jmp
or
mov
pop
scas
cli
les
aam
imulb
mov
mov
inc
imul
jmp
clc
iret
add
pop
mov
add
ret
shl
jge
cmpsl
mov
flds
mov
mov
insb
fdivs
pop
jnp
pop
das
mov
fdivrl
cmpsb
jb
xor
fdivrs
cmpsb
bswap
jg
adcb
scas
pop
or
fsubr
sub
cli
in
aaa
pop
fwait
push
lea
rorb
mov
out
dec
pop
mov
add
mov
sahf
xor
cmp
adc
mov
xor
mov
push
outsl
adcl
xlat
and
test
add
mov
xor
inc
mov
xlat
adc
push
fdivl
movsb
xchg
adc
or
scas
sbb
rorb
add
sub
sub
pop
pop
repz
sbb
add
aas
rolb
jne
cmc
add
inc
out
mov
pop
test
push
lods
mov
insb
cli
mov
sbb
inc
fdivrl
outsb
dec
fisubs
xchg
in
ret
xchg
push
insl
xor
loopne
mov
cli
push
std
sbb
scas
jnp
mov
stos
sbbl
fidivl
cmp
push
sbb
rcrl
mov
mov
in
pop
test
push
mov
out
mov
into
sbb
push
pop
pop
push
mov
adc
cli
jecxz
add
mov
and
push
ss
or
je
inc
inc
imul
out
xchg
push
add
cmc
xchg
fchs
or
popf
je
adc
cmpsb
jge
sub
inc
push
sub
sahf
mov
shr
cmp
fstps
jl
insb
cli
inc
aas
outsb
or
sub
inc
cmp
fadds
dec
and
xchg
or
mov
repz
cmp
loop
lret
or
mov
outsb
cmc
mov
jecxz
cmp
aad
insb
or
push
push
sub
add
sub
testb
mov
js
adc
pop
cmc
pop
pop
cmc
movsl
jl
sub
inc
push
mov
cltd
push
pop
sub
cli
cmp
jmp
sarl
xchg
les
or
lahf
pushf
sub
mov
pop
test
lret
loope
xor
call
mov
or
pop
xchg
or
stos
pop
push
out
jmp
dec
dec
repz
lret
cmc
ja
stc
shl
daa
xor
xchg
gs
mov
or
add
insl
je
pusha
adc
xchg
shr
jg
mov
ss
cmpb
xchg
shrb
jb
jl
insb
mov
out
jmp
imul
outsl
stc
xchg
enter
push
call
and
imull
rol
adc
mov
inc
jae
jns
xchg
pop
pop
jmp
movsl
mov
outsl
mov
cmc
fsubr
and
call
or
cmp
out
js
adc
shrl
mov
pushf
xchg
xchg
jns
or
fwait
sbb
rol
sarl
lea
mov
inc
clc
scas
jge
fistpl
ljmp
pusha
add
std
cld
xor
and
xchg
sbb
leave
and
jne
pop
push
mov
loopne
mov
stc
inc
mov
ret
cmpsb
add
jge
mov
aam
roll
test
cmpsb
cmp
int
mov
out
rolb
xchg
add
sub
mov
ret
push
and
mov
mov
testl
jmp
jbe
xor
inc
stos
adc
out
xor
icebp
sub
mov
pop
lock
pop
xchg
sbb
cmp
and
test
test
mov
and
mov
sbb
dec
inc
mov
fmuls
outsb
add
pop
jbe
scas
push
dec
mov
sub
leave
andl
cmpl
pop
push
add
and
les
enter
mov
and
pop
add
inc
std
andl
mov
iret
inc
aad
xor
iret
xchg
push
pop
mov
pushf
bound
insb
cli
add
push
aad
mov
shrl
pop
lock
in
out
mov
xchg
push
fcom
add
daa
mov
add
xchg
ret
cmp
fisttpll
sti
hlt
push
and
ret
and
sarl
sar
inc
jecxz
fcompl
stos
ret
data16
cld
cli
test
das
icebp
test
jecxz
stos
xlat
sub
aas
push
in
mov
push
out
jae
mov
outsb
lds
mov
cmp
testl
cwtl
das
call
lea
fwait
lea
inc
adc
roll
mov
push
jmp
inc
fsts
lcall
or
sbb
jae
cli
arpl
sub
out
pop
sbbl
xor
jnp
add
bound
cmpsl
push
aam
mov
aad
mov
inc
mov
mov
bound
imul
mov
int3
xor
sub
ja
ret
cmp
jge
xchg
insb
std
mov
mov
iret
cmpsl
inc
or
sub
out
pop
cmp
pop
mov
mov
aaa
ret
sub
inc
js
mov
shrb
aas
dec
clc
dec
pop
or
inc
clc
aam
and
jmp
mov
inc
daa
rcl
pop
rcrb
push
mov
cmc
lock
push
adc
sbb
cmp
repnz
mov
mov
sub
mov
shl
or
movsl
addr16
rcrb
add
test
adc
sub
loopne
daa
dec
xor
rcrl
push
ficomps
push
in
add
es
jmp
and
cmp
in
stc
nop
push
cmp
dec
pop
scas
aas
call
lods
xor
mov
clc
cmp
sub
hlt
adc
sub
icebp
pop
ret
out
into
sbb
in
mov
xchg
aad
mov
ror
bound
adc
xchg
fbld
xchg
xchg
rolb
je
push
add
jb
mov
jg
xor
sarl
data16
mov
add
cwtl
mov
hlt
sbb
ret
mov
ret
fbstp
enter
daa
inc
clc
and
xchg
xor
data16
mov
shll
adc
outsl
push
cld
imul
cli
sbb
adc
push
xor
dec
mov
inc
sub
push
jne
in
mov
in
mov
mov
arpl
mov
add
or
test
lds
mov
fidivs
clc
dec
mov
xchg
stos
movsl
mov
pop
insb
ljmp
xchg
push
cmc
and
push
push
arpl
sbb
fdivrs
lods
out
mov
xor
dec
jge
cmc
fsubrl
dec
xchg
jne
jbe
or
xchg
movsb
fs
mov
mov
pop
mov
test
psrad
dec
jecxz
js
xchg
test
push
dec
test
nop
add
sbb
pop
inc
pop
push
gs
int
je
movsl
dec
loope
testb
test
nop
addr16
lret
mov
push
cmp
mov
mov
fistps
lods
fnstenv
aas
data16
sbb
push
dec
test
test
mov
sbb
xlat
fnsave
or
dec
sub
int3
add
shrl
ret
mov
stos
mov
mov
scas
cs
pop
add
scas
filds
lcall
pop
pop
inc
pop
mov
xorb
jns
and
movsb
movlps
andl
adc
jg
aad
pop
cwtl
mulb
js
pop
mov
testb
scas
rep
daa
and
ja
notb
sbb
jnp
and
and
pop
pop
xor
int
mov
jb
jns
daa
mov
and
sub
xlat
sti
jno
jbe
scas
mov
mov
mov
lock
adc
and
mov
out
in
and
or
xchg
hlt
out
mov
loop
test
inc
imul
or
xchg
test
cmpsb
cmp
mov
rcrl
jmp
push
dec
into
gs
inc
fistpl
mov
inc
stos
hlt
dec
in
lret
sti
inc
mov
inc
inc
mov
mov
in
cmp
push
lods
inc
mov
dec
out
cwtl
inc
fcmovbe
out
aaa
sbb
inc
addb
ficoml
mov
ss
lods
inc
and
inc
xchg
pushf
sub
test
fidivrs
fistl
mov
mov
or
cmp
jo
push
ss
repnz
ficoms
dec
sub
or
push
mov
frstor
and
addr16
jnp
imulb
jl
xor
fsubs
cmp
in
push
subl
das
mov
aas
mov
int3
das
inc
pushf
fsubr
add
inc
outsl
jnp
iret
mov
ss
movsl
rcl
mov
mov
and
daa
push
stos
pop
or
hlt
dec
mov
push
test
popf
mov
leave
mov
pop
scas
mov
ret
xor
rcll
fidivrs
or
dec
mov
lcall
cmc
aam
jmp
sbb
jo
ja
inc
scas
shrb
in
mov
movsl
adc
es
jl
jecxz
mov
testb
pop
insb
inc
sti
mov
orb
out
pop
ja
xor
inc
popa
push
imul
sbb
push
and
cmp
out
sbbb
into
inc
stc
aad
and
cltd
dec
xchg
sub
popl
or
out
sub
mov
cmp
adc
xchg
int
pop
call
in
inc
loop
jae
cmp
hlt
test
jne
push
xor
pop
adc
pop
push
sbb
add
xchg
rcrl
jge
test
jne
or
in
and
ret
mull
push
mov
xchg
and
sbb
js
cmp
mov
fidivl
or
add
mov
ss
call
popa
push
mov
jb
push
insb
add
jg
dec
fisubl
loopne
mov
mov
sbb
adc
bound
ja
movsl
cmp
sbb
test
xchg
push
jbe
jmp
test
call
and
mov
mov
inc
out
mov
lods
les
mov
jno
or
jmp
in
push
sub
dec
test
sub
hlt
jae
mov
mov
shlb
aam
std
and
push
and
aas
push
iret
jo
ja
lcall
cltd
cmc
jbe
in
repz
jge
mov
fs
jecxz
pop
ror
jp
test
pop
iret
mov
movsl
pop
inc
mov
push
jo
scas
stos
fidivl
in
mov
push
loop
fs
imul
xlat
adc
jp
or
mov
add
lods
inc
xchg
push
out
test
add
lods
jo
pop
xchg
pop
dec
lret
cmp
push
pushf
cmp
mov
inc
lret
xchg
movsb
push
movups
xchg
frstor
insb
dec
fmulp
ja
out
or
rorl
mov
push
jno
push
or
mov
ret
repz
shll
test
test
cli
mov
insl
ret
lock
in
icebp
ret
xor
ds
divb
aas
daa
lcall
or
outsl
inc
mov
push
push
leave
into
jno
int
adc
dec
fstps
fidivrl
out
xor
adc
pop
in
dec
out
xor
mov
cmp
enter
push
mov
inc
sub
inc
sub
shrl
sar
push
jae
movsb
dec
jle
cvttps2pi
push
xchg
cmp
adc
mov
and
shlb
push
stos
stc
cmpsb
les
int3
or
xor
mov
cmp
mov
sahf
xor
mov
ss
inc
scas
xchg
scas
add
adc
mov
mov
stc
jo
xchg
push
jae
push
mov
test
pop
jmp
lret
fs
inc
adc
popa
adc
sub
arpl
ret
outsb
or
xchg
inc
add
mov
fmulp
adc
cmpsl
push
aas
cmp
imul
push
cmc
mov
fxch
repnz
mov
les
sub
mov
cmp
cmpsl
mov
mov
cltd
mov
inc
mov
loop
std
push
vpunpckhdq
or
mov
xor
loope
xchg
and
adc
movl
lds
lret
adc
inc
adcb
cli
jae
daa
bound
xchg
dec
fisubrl
out
int
inc
pop
pop
adc
test
adc
push
test
cmpsl
mov
mov
xchg
and
rcr
testl
outsl
sbb
js
in
mov
mov
cmp
int3
mov
cmp
add
iret
xor
popf
sub
mov
sub
mov
adc
fisttps
es
ljmp
jb
pushf
pop
pop
inc
inc
es
repnz
cmp
xchg
mov
fimull
fnstsw
popf
cmp
loopne
jae
and
ljmp
push
das
lock
push
and
hlt
jg
xor
push
ds
lahf
push
jl
pushf
push
outsb
add
push
movsb
hlt
in
repnz
and
xchg
mov
fsub
jns
adc
cmp
pop
xacquire
mov
xor
push
data16
jns
mov
fmuls
cmp
lcall
pop
sbb
nop
js
mov
sahf
inc
sub
dec
fstpt
jmp
leave
repz
jle
xor
cmp
ja
fdivrs
mov
xor
jnp
mov
adcl
cltd
fidivrs
sub
cmp
lea
sti
pop
inc
insl
add
outsl
inc
in
bound
xor
mov
test
jae
ss
adc
cmp
pop
xor
cmpsb
cmp
clc
mov
lret
loopne
add
movsl
pusha
addr16
xchg
push
jmp
mov
mov
fcoml
xchg
and
dec
mov
repnz
adc
add
cmpsl
mov
mov
mov
aas
data16
lods
push
cmpsl
push
pop
dec
jnp
std
mov
rcll
jne
jnp
clc
cs
pop
inc
in
out
movsl
ret
test
adc
aad
sbb
je
shr
ds
jns
imul
jp
dec
push
mov
mov
sub
sahf
push
cwtl
inc
ds
pop
ret
jl
push
mov
lret
adc
jnp
arpl
mov
pop
pusha
push
sub
aam
dec
xchg
dec
adcl
xchg
push
mov
jl
iret
jo
test
jbe
andl
out
jle
arpl
shrb
hlt
add
fstps
mov
rclb
shll
stos
mov
adc
add
dec
xor
xchg
push
push
sahf
jg
into
xchg
ss
daa
pop
fwait
mov
inc
popf
movsl
push
mov
jmp
fisubs
jge
fcmovbe
imul
andb
sub
mov
xor
inc
bound
lods
pop
lock
and
mov
mov
inc
stc
test
inc
push
fwait
repnz
jb
icebp
aaa
fs
push
mov
push
test
and
outsb
cltd
dec
cmpsb
mov
sbb
pop
inc
fwait
xchg
cmp
pushf
insl
sahf
repnz
enter
out
cmpsb
loope
add
in
enter
add
aam
adc
pop
shll
bound
xor
cmp
fcmovne
inc
mov
pushf
in
or
or
bound
mov
loopne
mov
mov
sub
add
inc
popa
inc
and
movsb
loopne
stos
das
or
jbe
xchg
jbe
pushf
js
stc
stos
inc
mov
lret
andb
sti
loope
pusha
jb
jle
fiaddl
push
iret
cmp
je
pop
cmpsb
inc
mov
in
inc
fisubl
lods
pop
fisubrs
into
stos
inc
add
jb
aam
enter
adc
sub
xchg
or
rclb
push
loop
addr16
dec
add
push
stos
movsb
add
in
sbb
xor
addl
dec
pop
lret
fcomps
fisttps
cmpsl
jne
dec
ret
mov
call
jge
cmpsb
mov
adc
push
adc
pusha
imul
cmc
xor
mov
jg
mov
adc
sbb
cmpsl
lahf
hlt
mov
cmpsb
add
mov
insb
cmpsl
lods
fldcw
pop
push
pop
adc
test
bound
out
xorb
xchg
lds
das
test
je
sbb
pop
inc
sarl
cs
mov
cli
jg
mov
inc
push
sub
loop
in
cltd
enter
cmpsb
mov
xor
mov
idivl
add
cmp
push
jnp
std
cmp
and
rdpmc
jb
aas
push
sbb
push
and
ret
movsl
ja
in
out
out
mov
cmp
xor
in
ss
adc
jmp
push
fmull
cs
push
cli
pop
and
inc
sbb
sarb
cmp
dec
xor
cmpsl
pop
lahf
pop
pop
rcll
into
lret
lods
add
jne
pop
xor
sub
xchg
pusha
cmc
inc
shlw
lahf
jb
aaa
shlb
fwait
test
ror
and
push
je
shrd
jbe
or
cmp
xor
xor
shlb
push
shl
cmpsl
out
sahf
pop
mov
mov
shll
fcompl
ja
stos
jbe
fdivl
xor
xchg
mov
push
push
movsl
cmp
push
test
test
das
xchg
lds
ret
dec
lods
push
cmpsl
shll
js
in
xlat
pop
adc
sbb
lods
loopne
xor
inc
hlt
mov
xchg
rorb
pop
jle
xor
js
cmpsb
push
jno
fs
sbb
cmp
inc
inc
sbbl
and
outsb
mov
sti
lods
sbb
adc
fsubrs
add
adc
sti
add
pop
loopne
pusha
test
adc
sbb
inc
push
shrb
or
sub
jno
ret
push
icebp
bnd
clc
lcall
lret
aaa
pop
mov
lret
and
adc
inc
pusha
fwait
push
and
mov
mov
rcl
xchg
pusha
fildll
stos
sbb
cmp
ja
jno
in
sub
mov
sub
inc
xlat
icebp
sbb
xor
test
push
inc
push
loope
mov
mov
push
test
mov
sbb
push
jecxz
inc
push
out
mov
ss
jecxz
sahf
les
lds
clc
rcl
add
cmp
pop
insl
inc
push
fistps
pop
and
cmp
sub
xchg
and
jg
cld
adcl
add
stc
repnz
fs
adc
adc
jg
mov
xchg
mov
or
cmc
pop
or
lahf
cmpsb
add
jb
es
les
andb
das
jp
pop
and
jo
or
ljmp
mov
iret
shrl
jae
jne
pop
imul
sbb
jl
sti
inc
pop
in
xor
xor
test
stos
jp
lods
clc
adc
or
inc
mov
cltd
clc
int3
push
aad
mov
adc
jne
loope
das
stos
rcrl
sub
push
pop
les
dec
imul
insl
push
adc
fstpl
mov
xor
scas
jb
or
add
outsb
repnz
mov
ds
mov
stos
idivb
xchg
sub
jmp
or
aaa
dec
rcl
pusha
mov
nop
or
cld
in
add
xchg
cmc
mov
bound
arpl
loope
or
jno
subl
mov
mov
sbb
rorl
insb
inc
cmp
dec
fbstp
jl
cmp
inc
mov
jns
xor
jns
pop
inc
ret
dec
jae
jae
lods
lods
out
sbb
push
xchg
dec
or
lahf
cmp
add
push
cs
mov
out
push
xchg
jb
mov
add
adc
pop
out
or
in
or
push
dec
xchg
out
xchg
mov
ja
fs
adc
sti
xchg
gs
ficomps
push
mov
fs
movsb
out
cmpsb
jmp
xor
or
xor
stos
out
fsubr
jb
cmpsl
out
sbb
cmc
sub
push
mov
pusha
lret
pop
push
jno
out
es
dec
pop
cmp
jae
fxtract
cmp
lods
aaa
and
mov
mov
cmp
add
stc
in
push
mov
sub
out
scas
mov
sub
jne
xor
out
add
pop
add
das
jbe
loope
jns
xor
ljmp
dec
js
push
addr16
push
addr16
cs
fidivrs
jne
fcomps
cmp
pop
loop
in
inc
sbb
push
test
out
int3
cmp
jns
shrl
arpl
or
mov
outsb
js
outsb
add
insl
jl
pop
popf
add
sbb
sbb
and
pop
push
pop
adcb
xchg
and
fidivrl
in
lods
fdivrp
fstl
lods
lds
or
outsl
jmp
aaa
fisubrl
dec
into
cmp
fcmovb
sti
imul
add
and
or
aaa
mov
movsl
ja
dec
adcl
outsl
mov
fimuls
dec
ds
jmp
outsl
daa
lea
pop
aaa
sahf
popa
nop
je
add
or
pop
xchg
jo
or
ljmp
mov
pop
and
stos
fstp
push
jmp
fsubr
or
test
dec
pop
jo
mov
fisubrl
insb
cmpsl
ret
shll
pop
mov
sub
cltd
clc
mov
sub
sbb
push
sbb
add
sbb
mov
jl
enter
sbb
xor
or
cwtl
pop
jmp
xor
lret
hlt
xchg
inc
dec
fcmovnb
xchg
cs
or
jmp
mov
jo
test
aaa
xchg
dec
cmc
std
das
jns
push
add
xlat
outsb
xor
mov
imull
in
sub
jl
lock
ret
ds
push
fsubs
cmpsb
divl
popl
jnp
sbb
adc
jnp
adc
push
inc
add
ret
in
xchg
dec
cmp
mov
pop
in
stos
cmc
mov
loope
xor
jl
bound
test
decb
dec
stos
lcall
popf
popf
lods
mov
push
ffree
sbb
xor
outsb
adc
setae
push
mov
jl
push
cmpsb
cmp
shrb
sub
xchg
dec
jb
mov
and
call
xor
aas
jecxz
dec
rolb
add
dec
cmp
cmp
mov
xchg
mov
sub
cmp
out
scas
sbb
popf
or
int3
movsl
sub
loope
arpl
cld
add
scas
nop
out
rcrb
mov
cmpb
sbb
jae
cmp
sbbb
lahf
enter
cmp
outsb
sarb
push
popa
sbb
add
lock
xor
cmpsl
push
sub
adc
divl
fnsave
pop
loopne
sbb
scas
rorl
push
data16
cmp
push
adc
ss
dec
bound
mov
test
sub
mov
pop
leave
fs
fiadds
cmc
mov
and
mov
mov
push
cmpsl
in
popa
xchg
jle
scas
or
mov
add
shr
xchg
scas
dec
xlat
pop
stc
subb
repnz
mov
xchg
inc
push
fwait
cmp
mov
jb
mov
fs
or
add
dec
outsb
ds
xor
bound
push
cs
sub
inc
imul
xor
jecxz
ljmp
test
gs
fisttpl
jge
mov
pusha
orb
push
fwait
dec
xchg
jp
mov
call
outsb
roll
imul
xchg
dec
ret
lret
shlb
adc
sub
cli
sbb
xor
mov
shrb
pop
pop
jno
pop
rcrl
xlat
decb
and
fidivs
cmpsb
mov
add
xchg
cld
cmp
push
xchg
sub
sti
stos
mov
sub
out
fdivl
pop
xor
hlt
jecxz
shr
lret
and
cmc
adc
mov
add
xchg
xchg
jne
dec
mov
arpl
xchg
jle
test
in
test
fmuls
movsb
testl
jg
insl
movhps
aad
cmpsl
mov
out
cld
xchg
mov
add
test
shl
and
stos
xchg
dec
inc
mov
daa
movsl
pop
bound
sahf
cwtl
fwait
loope
sbbb
xor
fists
stos
or
xor
dec
mov
jmp
shrl
in
sbb
inc
inc
mov
lea
push
fwait
jp
rcrb
push
xor
cmp
adc
jno
cmpsl
cmp
pop
push
maskmovq
notl
mov
xchg
adc
je
outsb
hlt
subl
dec
loop
mov
enter
mov
inc
decl
es
aaa
stc
lods
cmpsb
inc
movsb
pop
shll
enter
imulb
pop
jmp
sub
mov
jle
mov
mov
push
insl
jge
orb
cmp
lods
dec
out
nop
stos
outsl
les
mov
fidivl
mov
cmp
push
jae
mov
cmp
push
jmp
int
jg
lds
hlt
and
lcall
leave
sub
jp
jg
inc
sti
mov
add
jb
in
dec
lahf
jl
inc
arpl
out
dec
xlat
or
adc
sbb
es
aam
mov
mov
or
js
popf
ja
and
mov
jns
iret
lds
add
fs
clc
xchg
or
out
popf
mov
add
dec
sub
cmp
mov
out
push
sub
cmp
and
in
bound
sahf
mov
sub
insb
jl
clc
xchg
sub
jle
ret
hlt
mov
dec
fcmovne
xchg
ds
shlb
mov
std
mov
dec
xchg
jne
jbe
adc
gs
fwait
inc
push
pop
in
sbb
shl
xor
lods
cmpsl
adcl
lods
sbb
lea
sar
int3
dec
inc
cmp
popf
scas
lock
adc
jle
scas
or
cmp
aad
out
mov
scas
and
pop
xchg
leave
lods
or
jecxz
js
popf
insl
dec
push
dec
add
test
popa
popf
xchg
dec
or
xlat
cvtps2pd
add
int
xchg
mov
lahf
push
les
add
push
sbb
xchg
jle
or
pop
push
push
test
inc
subl
nop
or
xchg
dec
pop
jp
adc
scas
jge
orb
fcoml
cmpsl
aaa
aad
pop
mov
fstpl
fs
loope
sahf
shr
jge
mov
or
add
xor
stos
repz
sbb
cld
das
out
and
and
push
mov
push
sbb
push
jmp
shrl
pop
lcall
and
aas
xor
popa
push
jno
dec
dec
movsl
mov
hlt
and
gs
fisubrs
or
dec
mov
bound
adc
lret
hlt
out
pop
out
adc
jp
andb
xchg
stos
pop
out
loopne
cmpsb
cmpsb
lds
pop
mov
xchg
adc
stos
and
jbe
inc
addl
lock
or
bnd
pop
jno
sbb
inc
sbb
and
js
gs
das
jecxz
jp
pop
mov
movsb
mov
arpl
cltd
pop
jns
lret
or
arpl
int
pop
xchg
mov
lds
mov
popf
lods
popf
xchg
dec
sub
mov
mov
outsb
jl
mov
dec
in
fisubrs
cmc
popa
cli
sbbl
shll
inc
in
mov
pop
fdivs
xchg
inc
nop
sbb
movsb
inc
aad
inc
or
xor
mov
popa
xchg
loope
lahf
sub
inc
loope
mov
xor
mov
cli
or
pop
push
jb
insb
pop
mov
data16
sbb
dec
movsl
fs
cmp
cmp
jmp
outsb
add
pop
pop
repnz
jb
jle
out
jecxz
inc
and
push
stos
std
into
pop
je
test
mov
add
ss
and
push
lods
test
mov
aas
mov
negl
sub
dec
jp
jb
jg
es
lcall
cmp
stos
cmp
pop
cmp
fidivrl
pushf
sub
clc
mov
push
popa
int3
ja
js
andb
adc
mov
inc
dec
popf
push
push
das
aad
sub
pop
xor
pop
mov
mov
push
pop
aaa
pop
mov
inc
jne
fstps
clc
roll
jge
xor
imul
dec
pop
xchg
aad
inc
sbb
cmc
subl
std
cwtl
iret
int
add
aas
or
jb
cwtl
test
xchg
int3
pop
outsb
mov
mov
xor
push
inc
sbb
cmp
sub
mov
xchg
inc
jbe
stc
dec
adc
fs
shrl
outsb
orl
dec
mov
xor
mov
lret
pop
jbe
popf
cmpsb
pop
mov
inc
test
lahf
std
lods
xor
sub
mov
lock
push
jbe
jae
push
test
addb
mov
xchg
std
cltd
popf
sub
xchg
lret
iret
sbb
cmp
loop
mov
mov
push
xchg
pop
aad
negb
and
or
add
fstl
xchg
dec
leave
fildl
add
cwtl
mov
mov
xorl
xor
cmp
jae
pop
pop
mov
daa
cli
xchg
push
scas
cmp
jae
jb
fiaddl
cli
inc
lods
and
push
fstps
or
cmp
mov
cli
inc
insl
inc
mov
out
dec
push
inc
call
cmp
scas
addb
pop
mov
mov
mov
sub
fdivl
mov
xor
mov
inc
add
cli
cltd
push
les
andb
mov
mov
fidivrl
js
std
int
or
jp
xchg
sbb
xchg
ret
mov
push
jns
dec
jae
xor
xchg
xor
bound
xchg
sbb
dec
jmp
pop
pminsw
dec
sbb
iret
outsb
aas
decl
aam
cmp
popa
jmp
jbe
cmp
das
jp
sbb
inc
xchg
and
xchg
out
xor
inc
loope
push
adc
jns
icebp
mov
das
inc
mov
jae
je
pop
or
ret
inc
sub
js
loope
push
adc
call
aas
sub
js
loop
sub
add
mov
pop
pop
cmc
mov
xchg
sub
push
jle
dec
int
mov
and
jp
mov
test
and
jne
aad
mov
fisttps
adc
adc
cmpb
fisubl
jnp
inc
insb
or
shlb
outsb
mov
popa
lods
daa
mov
sarl
inc
push
repnz
ss
dec
jmp
cmp
jl
cmp
aam
jae
fldt
xchg
sub
ret
outsb
int3
fnstenv
sarl
iret
roll
inc
dec
insb
inc
xlat
pop
mov
add
mov
mov
out
dec
clc
cmp
movsl
test
ja
js
mov
testb
sar
mov
les
stc
in
mov
cmc
adc
call
movsl
rclb
fbstp
cmp
mov
int
push
popf
test
ja
andb
mov
pop
pop
inc
push
xlat
shll
fstpl
insl
xor
mov
mov
js
sub
mov
mov
xchg
lea
int
xchg
and
and
lcall
sbb
outsb
cmp
aaa
adc
adcl
or
repz
push
stos
add
repz
stc
stos
pop
jp
mov
adcb
lods
jb
fimuls
sbbl
push
sbb
sbbl
movsb
cmp
shrl
pop
out
adc
inc
xorb
or
flds
pop
sbb
icebp
xchg
cmp
jbe
mov
mov
jp
outsb
test
cwtl
mov
enter
add
int
bound
ret
mov
cs
jne
add
and
push
test
aad
jne
clc
cmpsb
ret
repz
mulb
jge
repz
jo
or
scas
cmp
iret
movsw
pop
ss
in
test
test
das
fiaddl
dec
in
pop
mov
add
mov
insl
cs
ljmp
xchg
or
fdiv
data16
and
addl
or
shr
sbb
je
ss
xchg
pushf
xor
lcall
sub
cmp
rclb
xor
ret
mov
inc
adc
loopne
push
rolb
xchg
lcall
or
xchg
ret
or
xchg
adc
data16
xchg
cmp
test
movsb
cmp
mov
imul
mov
andl
inc
loopne
fs
mov
mov
or
xor
push
data16
jp
fiaddl
and
pop
dec
fs
jnp
jl
push
lcall
movsl
out
push
fcomi
cmp
dec
xchg
jo
imul
enter
adc
dec
xchg
lods
lcall
leave
out
and
dec
in
jnp
jae
push
fnstenv
shrd
push
hlt
jmp
and
pop
mov
or
or
sub
sub
popa
clc
test
fs
adc
sbb
gs
das
mov
pushf
and
std
ret
pop
xor
sbb
popf
add
cmp
mov
push
pop
hlt
xor
and
movsb
sti
xchg
sub
cmpb
jno
frstor
jp
out
stos
notb
jmp
xor
mov
repz
insl
sub
sub
cmp
and
sbb
xchg
icebp
jne
and
mov
sahf
stc
xchg
sub
test
push
mov
addr16
xor
mov
jne
icebp
insl
add
pop
js
mov
sub
sub
mov
sub
repnz
out
xchg
sbb
xor
jmp
adc
xor
adc
xchg
mov
cmp
xor
test
mov
pop
mov
jo
or
jge
cmp
xor
and
or
mov
xchg
sub
sahf
icebp
es
mov
out
test
outsb
mov
lahf
repnz
mov
xor
outsb
sahf
xor
and
in
das
insb
mov
cmp
jp
daa
stos
add
daa
mov
jge
inc
mov
jno
sub
lds
test
cltd
mov
popa
mov
xchg
out
jo
pop
mov
jge
or
mov
out
ficoms
cmpl
punpckhbw
cmp
out
sbb
pop
repz
imul
sbb
hlt
mov
adc
add
iret
inc
imul
cltd
rcr
je
nop
data16
les
pop
and
lea
add
insb
cmp
arpl
js
leave
repz
xchg
clc
jne
sub
cld
mov
adc
jne
cmp
inc
jle
jmp
or
inc
mov
push
call
xchg
fsubr
orb
push
movsl
ljmp
xor
pop
leave
pusha
mov
or
pop
fildll
pop
scas
pop
cmc
xlat
outsb
daa
jge
dec
scas
dec
out
add
add
add
mov
mov
testl
fwait
or
mov
mov
in
test
mov
inc
aad
mov
xchg
sub
jecxz
mov
and
jge
lods
stos
add
cltd
aaa
sar
xchg
push
push
pop
icebp
andl
add
jbe
aas
movsb
clc
insb
add
ret
clc
dec
in
sbbl
dec
out
clc
insl
cs
in
test
dec
adc
push
lcall
movsb
ljmp
repnz
outsl
insb
adc
mov
fucomi
jg
sarl
push
mov
outsl
ss
bound
mov
fiaddl
cmp
push
out
inc
out
nop
push
fstpl
mov
sub
dec
pop
mov
mov
mov
pop
hlt
add
imul
sub
mov
mov
popa
js
jb
mov
mov
rcrl
mov
sbb
xchg
inc
ficomps
insb
add
fadd
pop
or
sbb
push
adc
imul
lods
mov
repnz
ret
mull
sbb
sbb
dec
ja
mov
pushf
leave
ss
sti
mov
inc
faddl
cwtl
das
cmp
mov
push
jp
mov
lods
inc
filds
xor
cmp
push
std
orl
jl
add
ficomps
cli
xchg
and
inc
push
and
push
fsubr
lret
mov
push
ficoms
adc
movsl
jne
out
push
ds
enter
mov
fisttps
ret
jo
pop
jb
xchg
dec
loop
cmp
mov
mov
jb
cmp
mov
push
xchg
js
subb
or
pop
or
daa
mov
push
jl
mov
mov
or
add
sbb
inc
into
dec
loop
outsl
inc
fstpl
mov
fnstenv
or
xor
add
in
sub
lcall
daa
mov
sub
inc
fmuls
dec
pop
shlb
sub
jecxz
xchg
sub
sub
and
test
sub
insb
sub
dec
dec
and
dec
dec
cmp
pop
dec
or
push
pop
and
jnp
jmp
data16
ds
pop
xchg
mov
loop
stos
mov
loopne
mov
push
cltd
xor
adc
les
cmp
jo
js
add
test
sbb
icebp
sti
xchg
mov
repnz
rcl
mov
or
sbb
std
xchg
sub
jmp
xor
dec
jle
lret
dec
dec
sbb
lods
insl
push
lods
dec
jecxz
mov
push
pop
int
dec
js
push
mov
push
mov
in
jg
xchg
push
xchg
jp
add
mov
dec
fsubl
add
and
fwait
add
andb
inc
jae
test
inc
inc
ret
push
enter
arpl
adc
pusha
dec
adc
xchg
daa
jl
aaa
cli
ljmp
or
sub
jae
xor
jg
cmpsb
cmp
mov
in
hlt
roll
sarl
fisttpl
scas
xor
sbb
sub
scas
popf
and
cli
jmp
idivb
and
out
sbb
pop
adc
mov
clc
cmp
mov
or
adc
or
test
add
jmp
repz
push
inc
cmp
pusha
dec
fidivs
inc
and
inc
push
xchg
sub
sub
sub
popa
mov
xchg
getsec
cwtl
xchg
jg
orb
imul
js
mov
push
pop
dec
lds
and
push
jle
cmp
sbb
pushaw
xchg
adc
sbb
xchg
mov
insl
mov
adc
out
mov
out
fstpt
fisubrl
adc
or
out
mov
xchg
in
sbb
js
lds
test
adc
jbe
cmc
fisttpl
shlb
ret
loopne
adcb
loopne
adc
sti
out
mov
jle
xor
push
mov
fimuls
es
fcompl
push
aaa
sub
test
sbb
sub
cwtl
cwtl
cmpl
jle
jne
mov
xor
xchg
nop
adc
insb
mov
jae
cmp
mov
dec
pop
gs
dec
insl
add
aaa
cmp
ja
sbb
scas
pop
sti
sub
lret
cli
xor
jo
and
shl
aam
xlat
insl
push
cmc
scas
jb
dec
scas
arpl
test
jg
add
xchg
sub
pop
iret
out
fs
sub
inc
lods
in
outsl
popa
mov
mov
dec
mov
lods
dec
pop
scas
dec
sbb
jmp
inc
push
and
repz
push
or
xchg
dec
sbb
mov
pop
xchg
jl
outsb
mov
jnp
dec
test
sbb
in
adc
ficoml
mov
adc
dec
mov
fnsave
push
ret
loopne
rclb
testb
or
mov
ljmp
mov
sbb
rorl
scas
pop
test
push
dec
in
dec
mov
gs
jge
jge
out
mov
jg
lock
rcl
in
add
push
scas
test
cld
data16
cmp
push
outsl
sbb
and
add
jo
movsl
sub
icebp
push
cmp
pop
scas
sub
inc
lods
repz
mov
shrl
ret
push
sar
ds
push
jmp
cmpsl
lods
xchg
add
cwtl
imul
adc
xor
ss
push
mov
push
push
jl
insl
xor
les
and
sub
push
mov
sbb
xchg
insb
shrb
inc
fabs
dec
aas
loop
test
push
adc
mov
fwait
jae
daa
jle
mov
stc
popa
movsb
fidivrs
aaa
fimull
or
das
loope
sarb
sbb
das
ret
gs
mov
add
push
icebp
push
rol
inc
inc
xlat
jne
loop,pn
xchg
mov
adc
insb
xchg
xchg
jecxz
dec
push
mov
push
dec
movb
jp
bound
pop
bnd
mov
push
jle
mov
shll
loop
fidivl
xlat
popa
enter
inc
inc
mov
ljmp
push
rcll
sbb
add
fsubrs
fldl
pop
icebp
roll
into
cmp
jl
cld
or
inc
mov
xor
call
push
push
mov
stos
jbe
mov
mov
xchg
sub
mov
arpl
lock
xchg
push
cmp
or
adc
cltd
ja
pop
sarb
inc
shrl
sub
pusha
addr16
cmp
push
push
test
stos
pop
or
xor
push
fimuls
gs
add
call
ljmp
push
fstpt
pop
call
fimuls
adc
xchg
cmp
cld
negl
jp
movsl
and
sti
xor
and
or
sub
or
inc
cltd
cmpsb
dec
vmovups
mov
jle
cmp
popa
mov
pop
jmp
scas
inc
pop
loop,pn
scas
mov
repz
push
jp
xchg
sub
xor
jne
dec
cmp
les
jle
imul
mov
xchg
sub
add
sub
dec
loop
outsl
repz
inc
dec
rcll
push
pop
fwait
dec
mov
rcrb
mov
fstpt
in
lcall
orb
mov
sbb
and
or
add
sub
push
add
push
jle
aad
sbbl
pop
jns
out
sahf
adc
add
sub
mov
push
xor
jb
notb
add
inc
test
nop
stc
fistpl
mov
das
int3
pop
neg
fs
or
pop
ret
add
jmp
sbb
inc
fwait
aad
lods
dec
mov
push
cs
dec
mov
ljmp
mov
jnp
push
dec
ret
mov
gs
cmp
push
dec
xchg
cs
pusha
push
or
dec
les
push
cmc
sub
aaa
cmp
data16
push
insl
lods
pop
sti
sub
xchg
mov
sub
cmp
xor
push
test
dec
rolb
dec
rcrb
cmp
aaa
popl
adc
aaa
xchg
and
sub
mov
outsl
add
jmp
repnz
jg
sbb
xchg
xchg
rcll
imul
xor
xlat
shl
or
add
int
add
mov
mov
or
pop
out
pop
lock
push
aad
jno
loop
cs
xchg
dec
jg
pusha
mov
cmpl
push
mov
inc
dec
cmpl
aaa
xchg
push
enter
test
fwait
xorb
insb
mov
cld
ljmp
movsb
fildll
in
out
les
aas
enter
mov
std
scas
inc
das
mov
cmp
push
jg
inc
imul
test
mov
scas
mov
mov
fcompp
or
and
ret
pop
movsl
xor
std
push
lds
push
push
out
fwait
push
mov
fwait
aaa
xchg
lea
and
inc
inc
test
arpl
xchg
mov
xchg
push
out
dec
mov
ficoml
pop
mov
cmp
lahf
mov
fisttpl
jbe
push
pop
cmp
addr16
popa
xchg
inc
aas
xor
sbb
movsl
outsb
lcall
jp
and
push
bound
mov
xor
mov
cld
jae
lret
scas
pop
ljmp
push
cmpsl
fnsave
jae
cmc
dec
push
mov
in
push
aas
cltd
xor
paddw
pop
sbb
or
mov
mov
jmp
out
xor
pop
inc
lret
stos
jnp
cmp
xor
push
sahf
into
adc
mov
std
xor
mov
in
and
mov
outsl
rorb
mov
sbb
sub
rcll
mov
sbb
and
fidivrl
aas
fcompl
icebp
push
icebp
mov
arpl
add
jns
cwtl
sub
sub
rclb
lds
push
inc
roll
enter
and
pusha
dec
aam
outsl
and
cmp
jp
jne
cltd
mov
jl
lea
je
xchg
test
mov
rorb
aad
fisttps
fdivrl
jecxz
mov
sub
data16
or
cs
mov
icebp
sbb
mov
inc
and
mov
sub
push
pop
mov
in
je
mov
pusha
dec
int3
rcll
call
addb
call
aaa
shrl
out
or
dec
mov
cwtl
push
dec
leave
xor
mov
ja
dec
jecxz
xor
sbb
in
mov
adc
lods
cmp
jo
cli
push
in
movsb
pop
das
mov
mov
cmp
push
add
andb
adc
sbb
cmp
stos
shlb
testb
inc
mov
push
iret
ret
or
mov
lret
int3
in
fldcw
or
xor
lret
sub
icebp
mov
add
adc
and
adc
or
sbb
imul
xor
in
pushf
push
xor
setb
sub
in
add
lods
iret
das
repz
shrl
adc
pop
cmpsl
mov
call
loope
fs
nop
xchg
cmp
mov
jge
cld
or
and
sti
dec
mov
pushl
mov
loop
jne
xchg
cmpsb
and
mov
and
xchg
inc
ljmp
xor
sbb
inc
xchg
mov
lea
js
or
pop
push
fsubr
pop
fiadds
jae
mov
and
push
mov
cmp
test
nop
jg
ds
outsb
xlat
dec
cmp
stos
inc
sbb
xchg
inc
jne
jo
in
xchg
sbb
stos
push
or
test
jg
and
dec
jg
movsb
cmp
sarb
call
pusha
cmpsb
mov
decb
ret
sub
cld
out
push
stc
je
sbb
cs
and
adc
lods
inc
mov
or
push
push
enter
fwait
jnp
dec
aam
xor
shll
mov
push
sub
inc
popf
es
and
movd
adc
add
insb
push
out
sbb
jl
movq
cs
pushf
push
into
cs
in
dec
dec
xor
sub
fsubs
movsl
sbb
add
dec
jb
xchg
inc
outsl
pop
mov
inc
dec
rclb
dec
lret
dec
cmp
popf
push
adc
adc
xchg
out
or
out
xchg
out
lods
and
lcall
mov
out
pop
jl
imul
fldl
in
jno
imul
fidivrs
fwait
and
test
jl
mov
and
mov
dec
shll
stos
pop
js
mov
sub
data16
mov
push
mov
add
inc
cmpsl
pusha
movsl
arpl
dec
sbb
test
loope
mov
out
push
mov
loopne
cs
ss
xchg
ret
into
push
call
test
inc
sbb
xchg
mov
les
icebp
sub
mov
lahf
xchg
fistpl
or
jmp
cmp
push
repnz
cltd
pop
mov
out
cmp
pop
mov
lods
jne
mov
rorb
loope
icebp
into
push
int
sub
test
test
out
cmp
js
loop
movsl
sub
ss
mov
jecxz
xchg
ret
js
les
ss
pushf
xor
sub
aaa
sarb
sarl
in
inc
fistpll
fcompl
cmpsl
mov
dec
aam
in
sahf
mov
sub
lods
hlt
orb
aad
mov
loop
gs
ljmp
lock
gs
xor
ja
xchg
sbb
dec
pop
jne
add
js
xchg
cmp
cs
jle
test
jno
mov
mov
jns
dec
sahf
mov
mov
jg
sub
sub
lcall
add
cmp
xchg
aam
daa
pop
loopne
pop
js
dec
dec
cmp
jb
insb
stos
jae
mov
popf
mov
pushf
jge
sub
inc
lret
push
jns
pushf
inc
inc
das
adc
outsl
mov
push
pop
lds
add
adc
call
adc
pop
ret
mov
and
xlat
js
mov
sub
jl
nop
sub
icebp
add
mov
dec
mov
mov
jmp
inc
mov
fnsave
lock
stos
nop
or
and
aam
cmpb
lret
mov
push
push
mov
pop
and
icebp
je
mov
lahf
sbb
jne
shlb
movsb
in
test
insb
cmp
pusha
test
call
fidivs
push
mov
lret
cwtl
rcl
filds
aam
cltd
stos
inc
mov
and
lret
or
jp
iret
add
mov
imul
mov
or
repz
cmp
ljmp
vpsllw
fucomp
adc
lret
inc
or
mov
pop
aad
mov
push
lock
mov
outsb
ficomps
cmp
xchg
in
jae
mov
lock
mov
in
fistl
mov
shrl
cmp
inc
addb
imul
rolb
xor
std
cli
xchg
ficoml
mov
pop
mov
push
adc
and
fistl
insb
pusha
pushf
xor
mov
rcrl
icebp
xor
dec
lret
dec
sbb
data16
imul
aaa
movsl
fwait
xor
xchg
aaa
in
clc
clc
daa
mov
fmull
xchg
and
xor
and
or
bound
and
je
mov
fidivs
or
lret
pop
int
add
sahf
fildl
fsubr
sub
mull
icebp
cwtl
jb
jbe
stc
imul
xor
daa
jecxz
cmp
inc
mov
and
mov
xor
mov
aas
pop
mov
push
outsb
jne
das
cmpsl
pop
in
and
cld
xor
jne
dec
cmp
mov
push
dec
outsb
mov
jns
dec
ret
push
xchg
jl
inc
lods
xchg
pop
and
xor
jle
or
ljmp
pop
fimuls
lcall
push
popf
jp
mov
jecxz
std
out
push
fidivl
movsl
scas
cmpsb
pop
xor
cmpl
mov
dec
sbb
and
loop
push
pop
lods
mov
outsb
mov
push
repnz
inc
add
test
in
out
inc
push
lcall
push
mov
push
icebp
lahf
pop
ljmp
sub
push
jecxz
addl
aas
test
mov
mov
fcompl
sub
test
mov
xchg
ljmp
dec
imul
inc
mov
fnsave
mov
call
int
inc
pop
cmp
xor
xchg
sub
lods
sbb
mov
scas
mov
repnz
jge
sbb
mov
xor
jae
push
and
mov
add
mov
adc
daa
std
sbb
std
inc
mov
test
int3
test
xchg
lcall
cmp
cmpsl
jne
mov
jmp
lods
add
adc
test
iret
sub
cmp
mov
inc
int3
je
daa
cmc
mov
inc
enter
aam
sbb
test
lods
test
cwtl
add
in
subl
pop
add
bound
inc
and
cld
mov
adc
add
jl
into
es
movsl
hlt
push
xchg
mov
pop
mov
iret
movl
jb
adc
or
std
push
sahf
jns
outsb
sahf
or
push
mov
sti
sbb
pop
loopne
pushf
aam
lock
cmpb
call
movsb
mov
out
push
lcall
sbb
xchg
pusha
cwtl
nop
dec
dec
mov
test
push
call
fidivrs
pop
adc
sbb
mov
shll
icebp
xchg
lea
stc
gs
inc
inc
fdivrs
jae
fimull
or
loopne
cmp
xchg
push
cmp
popl
lds
repnz
out
push
mov
adc
adc
and
clc
fmul
inc
fidivrs
lea
or
jno
xchg
sub
loope
jge
clc
nop
inc
sahf
loope
and
pop
sarb
negb
xor
fdivrs
mov
clc
fwait
daa
mov
mov
xchg
lea
scas
repz
outsw
add
adcb
addb
ja
mov
mov
fimuls
call
jae
add
imul
ret
insb
clc
sub
inc
mov
dec
pop
neg
push
jp
cmp
xor
mov
repz
enter
ds
or
push
jg
sarl
lock
cmp
dec
imul
pop
dec
adc
dec
jge
loop
das
and
jnp
or
inc
mov
mov
js
aas
nop
mov
jne
fisttpll
jmp
cmpsl
xlat
repz
dec
mov
test
mov
inc
sub
popf
xchg
cmp
dec
fwait
dec
fildl
add
mov
lea
cld
int3
inc
sarl
xchg
nop
fmuls
and
sti
and
jno
loop
inc
enter
sbb
pop
pop
cwtl
das
mov
sub
stos
scas
bound
mov
xchg
cs
ja
inc
push
mov
mov
fwait
out
stc
nop
lret
sbb
sti
nop
in
sbb
push
fists
and
inc
mov
or
mov
in
add
in
mov
fadd
cmpl
lret
lahf
arpl
rol
in
sahf
xor
test
cli
mov
mov
jp
ret
out
andb
dec
enter
cmp
ds
cmpsl
pushl
push
loop
test
or
repnz
test
cmpsl
mov
mov
hlt
test
rcll
push
popa
lods
mov
add
iret
xchg
mov
xor
stos
nop
push
call
xlat
xor
aad
stc
sub
iret
inc
adc
jne
cmp
outsl
rcrl
jo
adc
leave
arpl
adc
xor
xchg
orl
popl
ljmp
xor
inc
push
pop
les
cli
data16
jmp
js
and
mov
mov
cmpsb
push
movsb
insl
les
fisttpl
xor
mov
cmp
pop
xchg
cmp
and
test
mov
std
mov
nop
pop
sub
and
pusha
or
add
in
sbb
jecxz
cmp
mov
xor
aaa
jne
jbe
lret
inc
outsb
and
test
nop
pop
or
sbb
adc
or
dec
xchg
out
xchg
jno
add
lea
sbb
cmp
pop
fstpl
pop
in
cmp
xor
stos
stos
sbb
lods
jns
ficoml
sub
jg
mov
ljmp
pop
scas
fcoms
outsb
mov
xchg
add
addl
inc
cmpsl
cs
jnp
pop
mov
imul
pop
out
mov
das
lods
mov
das
jge
sahf
xor
bound
xchg
sub
arpl
std
dec
ffreep
rorl
mov
adc
sbb
js
test
rclb
and
pop
push
out
jo
jae
ja
mov
mov
dec
push
xchg
lock
lea
adc
insb
sub
xchg
xchg
cmp
jb
cmc
nop
into
inc
es
popa
stos
in
mov
stos
out
mov
jg
push
mov
push
lock
xor
add
pushf
xchg
lds
rcrl
jge
popf
les
jecxz
repnz
adc
dec
mov
shrw
inc
cmp
addr16
mov
movsb
sub
call
pop
sbb
jle
mov
mov
adc
mov
iret
clc
shll
mov
lret
cmp
popf
insl
shll
and
lods
popaw
cmp
inc
outsb
xor
hlt
adc
imul
ss
je
out
sbb
dec
filds
ds
test
dec
cwtl
cmp
xchg
pop
add
pop
into
or
mov
inc
xlat
sub
cmpsb
imul
mov
and
jecxz
mov
adc
or
loope
xor
notl
adc
cld
test
lret
fsubrs
rorb
cmc
pop
nop
cld
inc
daa
push
and
outsb
outsl
mov
mov
in
in
adc
mov
and
add
addb
jne
stos
xchg
fcoml
arpl
jge
jg
movsl
pop
or
lret
loope
sbb
data16
ret
xchg
xchg
sbb
aas
insb
lock
push
jecxz
jno
pop
repz
fsts
cmp
fsts
lock
int
mov
push
cmp
mov
les
cmc
loope
jg
pop
jge
dec
xor
popf
gs
xor
mov
adc
outsl
inc
sub
pop
testb
mov
stos
call
or
lret
mov
call
cmpsl
scas
outsl
push
loopne
testb
sbb
inc
xchg
lret
lret
mov
call
pop
inc
dec
push
popf
jle
mov
sarb
inc
fldenv
or
bound
inc
pusha
divl
adcb
pop
sahf
jecxz
pushf
xor
add
mov
fisttpl
test
testb
xor
sahf
xor
mov
fsts
or
fidivl
sub
add
jnp
mov
mov
push
lods
int
stos
inc
add
xor
and
enter
push
jmp
stos
xchg
jo
fwait
std
out
and
push
cmp
bound
popa
pop
fs
xchg
mov
clc
pop
out
mov
xor
fdivl
push
dec
out
push
add
sbb
mov
clc
cmp
jp
lea
popf
loopne
or
pushf
pop
mov
in
aas
sbb
cmp
insb
aaa
dec
jecxz
lea
add
push
outsl
push
cmpsl
mov
int
cli
andps
inc
sbb
loope
mov
cmp
sahf
gs
mov
ficoms
pop
or
das
in
popa
and
push
lret
sti
js
test
je
in
data16
cwtl
imul
and
dec
loope
js
push
test
lret
cld
add
inc
sub
jb
gs
push
pushf
xor
popa
mov
jg
int3
jb
push
movsb
in
pop
sub
mov
pop
dec
mov
mov
lea
push
inc
inc
decl
aaa
sarl
xlat
das
sbb
es
mov
dec
adc
mov
sub
icebp
scas
bswap
add
aad
das
adc
mov
cmpsb
lret
shlb
inc
mov
sahf
xor
adc
xchg
jmp
insl
inc
mov
fwait
out
ret
jge
movsl
mov
adc
fistpll
mov
cmp
mov
lds
xlat
sub
jb
sbb
jecxz
or
sahf
outsl
repz
jmp
sub
int3
add
clc
mov
xor
add
loop
int3
mov
sbb
add
loop
stos
xchg
scas
mov
popl
notl
insb
xor
jb
movsb
push
or
push
xor
pop
das
mov
mov
inc
mov
push
push
rcrl
cmp
adc
mov
scas
push
sub
ret
mov
mov
xor
mov
add
bound
dec
lea
and
inc
mulb
jle
and
xor
hlt
sarl
mov
mov
leave
hlt
in
and
sbb
push
add
lret
lods
xor
cli
movsl
xor
or
cmp
push
mov
test
cmp
lods
inc
pusha
and
mov
and
xlat
mov
cwtl
pop
movsb
shrb
or
sub
clc
and
arpl
in
inc
pushf
dec
pop
dec
cmc
lcall
test
jb
add
or
cmc
xchg
popa
adc
out
sbbb
xchg
movsl
loop,pn
popf
test
mov
xchg
fisubrl
or
mov
push
pop
leave
mov
and
lds
mov
iret
mov
mov
roll
icebp
cmp
lret
pushf
test
mov
insl
xor
pop
stc
jo
mull
mov
int3
ret
lcall
add
iret
and
int3
arpl
ss
mov
jmp
fs
testl
cmp
cmp
mov
dec
addr16
cmp
adc
lret
inc
fdivrl
adc
gs
push
call
mov
scas
bound
inc
pop
aam
dec
ss
mull
pop
into
gs
mov
sub
adc
ljmp
mov
incl
jbe
adc
mov
addr16
xchg
mov
adc
sbb
sbb
xorl
adc
or
add
cmpsb
xor
sub
push
inc
adc
and
js
in
sahf
pop
pop
inc
cvtps2pi
xchg
inc
mov
mov
lahf
ds
popf
aaa
cltd
cmp
dec
or
in
fdivrl
jmp
aas
stc
dec
in
mov
cmpsb
sub
mov
orl
vmptrld
in
mov
movsb
jmp
daa
xchg
cmpsb
cmp
lock
xchg
loop,pn
push
aas
sarb
sub
aam
xchg
data16
out
dec
adc
out
xchg
mov
testl
lret
xchg
dec
jle
jne
mov
inc
or
inc
pop
sub
jns
add
sub
cli
iret
cmp
sub
pop
mov
jns
sub
xor
jnp
fiadds
xchg
mov
mov
sti
test
push
shll
mov
jnp
loop
dec
pop
sub
xor
sti
add
les
jb
or
iret
xchg
mov
test
fdivl
pushf
mov
stos
inc
or
mov
xchg
or
cmp
pop
jg
sbb
mov
shll
sti
pop
testb
mov
adc
in
pop
inc
xor
ret
mov
mov
mov
or
iret
lret
lahf
sbb
loope
int3
push
leave
cmp
in
or
mov
pop
cmp
pop
or
outsb
dec
dec
inc
or
mov
xor
adc
add
and
xor
aaa
rcrl
in
mov
loopne
cld
rcrb
dec
test
mov
in
jno
movsl
xchg
aaa
mov
cmc
pop
pop
cmpsb
mov
jb
inc
out
outsl
push
inc
mov
test
jb
daa
out
inc
jne
and
jb
ds
push
inc
xor
fs
in
jno
movsl
out
outsl
mov
hlt
pop
mov
mov
jno
inc
pop
call
mov
imul
iret
mov
je
xor
jno
jg
push
cmp
incl
insb
das
lods
pushf
cmp
mov
loope
scas
inc
clc
push
pop
mov
and
add
je
xor
xor
daa
mov
sub
ja
push
jmp
mov
sub
inc
push
and
sub
cmp
in
stos
push
push
outsl
mov
cmp
jbe
mov
out
push
lods
xor
lcall
in
push
in
pusha
cmp
mov
pop
repnz
adc
fdivrl
sbb
or
jne
in
test
imul
cli
xor
in
loop
adc
lea
mov
fwait
in
jns
jmp
mov
jecxz
inc
adc
inc
push
pop
mov
test
jle
pop
lcall
addr16
jns
and
xchg
aaa
mov
rcrl
and
jle
js
out
test
and
push
mov
inc
xor
xchg
xchg
stos
cs
push
add
outsb
rcr
jle
je
stos
sub
push
lret
lret
sbb
aad
ret
xchg
or
push
enter
pop
sti
fucomi
lcall
pop
xchg
dec
roll
enter
add
jnp
icebp
fdivrs
lock
test
add
xchg
dec
adc
fstl
cmpsl
xor
xlat
imul
push
pop
cld
fidivl
aaa
mov
adcb
stos
sub
xchg
stc
pop
fisubrl
mov
insb
pop
rcr
jle
sbbl
xchg
lahf
sub
jl
aaa
loop
mov
in
inc
lret
addr16
lahf
ss
sub
test
lahf
inc
ret
mov
popa
lret
adc
pusha
test
into
xchg
aas
out
pushf
pushf
xor
push
xchg
mov
in
imul
pop
sub
cmpsb
mov
mov
scas
filds
push
popf
movlps
mov
test
ret
scas
xor
adc
cmp
pop
or
push
loop
loope
mov
pop
mov
movsl
jl
je
mov
or
dec
data16
pusha
lods
sahf
dec
adc
cs
test
out
push
clc
xchg
cmc
in
jne
shll
out
sbb
xor
sbb
data16
enter
jne
shlb
aam
mov
or
push
jmp
mov
mov
punpckhwd
pop
add
sarl
cmc
fadds
push
loopne
and
scas
xor
pop
add
push
repz
push
cwtl
out
cmp
into
clc
fs
xchg
cmp
xor
pop
xchg
mov
js
ret
sub
dec
test
or
stos
mov
jmp
inc
sub
cmp
neg
int
or
cmp
cmp
enter
repnz
and
mov
push
mov
dec
adc
lock
popf
loop
sarb
negl
push
jb
mov
lods
lcall
nop
fs
loop
xorl
sub
cmp
pop
mov
mov
dec
or
dec
adc
pop
ret
pop
sbb
notl
aas
sub
out
jo
cmp
cmp
or
into
nop
mov
mov
sub
daa
adc
mov
inc
es
xchg
or
push
cltd
pop
sbb
dec
inc
mov
and
mov
nop
inc
lock
fmulp
mov
addr16
xor
xchg
es
cmp
dec
and
lods
cltd
cmp
push
ffreep
stos
daa
xchg
add
adc
cmp
inc
adc
xchg
aas
clc
test
in
std
adc
js
fwait
std
iret
mov
enter
call
sbb
div
dec
push
mov
ljmp
movsb
dec
jmp
push
mov
sbb
sub
lock
xchg
cmp
and
popa
in
test
xchg
cmp
sub
push
cmp
mov
dec
adc
out
jecxz
imul
cmp
fnstcw
or
cs
push
xor
jg
pop
data16
push
jg
shll
inc
fnstcw
cmp
mov
test
mov
fdivrs
sbb
arpl
data16
lods
daa
pop
shlb
popl
ljmp
fstl
mov
rcl
scas
loope
xlat
push
mov
mov
mov
pop
sti
cmp
and
jg
push
int
test
push
shll
push
and
jns
inc
dec
lcall
pushf
or
sbb
cmp
shrb
xchg
dec
fisttps
negb
sub
jno
dec
push
mov
dec
adc
movsb
cmp
pop
test
lcall
pop
or
add
push
idivl
push
mov
sub
mov
push
cli
xor
loope
cmp
std
lret
mov
test
mov
cmp
inc
inc
fldcw
inc
cwtl
psrld
pop
lret
int
push
sub
outsl
cld
and
outsl
jbe
mov
sub
sub
xor
fwait
cmp
xchg
inc
leave
jae
js
adc
push
add
sti
lahf
cmp
sub
fdivrs
fmuls
mov
pop
mov
push
jbe
sub
ljmp
pop
inc
hlt
lahf
cmp
arpl
shrl
lods
movsb
fistpll
mov
sbb
cmp
cmp
sbb
inc
jge
popa
call
xchg
fcoms
ret
loop
lds
or
push
les
aaa
rclb
jle
mov
ret
lods
test
cli
fistpll
insb
cmc
push
sbb
movsb
sub
fcmovnb
xchg
std
ja
inc
adc
push
fstp
mov
push
or
jae
nop
scas
sub
push
sub
xor
mov
cmc
pusha
mov
mov
and
push
ja
mov
inc
sub
sbbl
movsb
sub
push
stc
icebp
mov
sbb
mov
jecxz
inc
push
sbb
push
les
dec
inc
or
das
pop
call
xor
xchg
faddl
sbb
cmc
arpl
inc
and
ret
cmp
mov
sti
fsubr
ja
mov
mov
out
insb
inc
mov
cmp
and
cmp
mov
clc
inc
adc
lods
or
xorl
incb
ffreep
fcmovnu
pop
cli
or
xchg
inc
stos
push
xor
xchg
push
call
or
jecxz
gs
push
int
push
clc
int3
jge
inc
mov
xchg
mov
xchg
fmul
sbb
daa
or
mov
mov
rorl
dec
int3
popl
outsb
mov
iret
push
mov
mov
mov
xchg
cmp
cmp
xor
das
stos
sub
cmc
fs
rcll
xor
pop
cmp
dec
or
and
and
scas
push
add
jbe
cli
or
jecxz
cmp
sub
bnd
je
sbb
xchg
mov
mov
outsl
repz
dec
pop
push
mov
mov
jecxz
cmp
jmp
enter
lret
adc
cld
sub
outsb
in
in
push
ror
cmp
pop
sbb
popa
lock
lods
daa
mov
sub
fmull
xchg
sub
pop
lret
bound
loopne
jae
arpl
rclb
pop
xchg
inc
aad
adc
mov
clc
fistpll
xchg
ds
insl
outsl
xacquire
aaa
rclw
out
jae
int
cld
adc
inc
dec
daa
test
sbbl
or
adc
les
out
test
xor
ficomps
push
jge
cmpsl
daa
fwait
imul
jmp
xor
sbb
xchg
sub
jne
adc
sbb
add
mov
ror
fildll
lods
push
sbb
cmpsl
fisubs
mov
mov
rorl
inc
test
mov
sub
ljmp
call
xor
pop
in
packssdw
sti
xchg
test
lret
popa
ljmp
flds
test
sbb
sti
rcl
ja
out
xchg
adc
sbb
sbb
test
mov
sub
xor
mov
sub
roll
imul
mov
ja
mov
ja
sub
out
jo
cmp
loope
mov
clc
inc
or
mov
icebp
mov
scas
loope,pn
es
cli
fidivrl
mov
xor
int
and
gs
je
adcb
or
dec
fcompl
insl
out
jns
out
inc
out
pop
popf
lcall
add
jne
aad
jns
daa
or
mov
sub
fidivrs
test
daa
lods
out
jmp
pusha
out
mov
mov
jb
and
or
inc
ds
cmp
cmpsl
add
adcb
sbb
pushf
mov
push
and
leave
sbb
mov
cmp
xor
mov
add
adc
inc
pop
lret
cmc
pop
mov
scas
push
scas
js
jnp
mov
sbb
imul
sbb
dec
xor
xor
lock
into
fdivl
lcall
push
ja
mov
aaa
fdivrs
sbb
push
inc
xchg
aas
jg
cmp
xlat
popa
mov
nop
or
push
fadd
push
add
pop
clc
in
bound
lods
out
mov
pop
inc
popf
je
iret
mov
xchg
sub
repz
sbb
pop
pushf
inc
cmp
fldl
stos
orb
adc
mov
stos
cmpsl
sub
and
jmp
sti
xor
dec
adc
lcall
sbb
dec
imul
add
pop
add
pop
aaa
cltd
outsl
pop
iret
xchg
pop
jnp
loop
nop
test
rorb
cmpsb
daa
mov
scas
js
sbb
push
shlb
mov
leave
repnz
jl
pop
aad
retw
xchg
rcl
ljmp
sbb
out
cli
leave
mov
mov
insl
fcmovnu
mov
lods
sub
sbb
negl
stos
sub
shrb
cld
movsl
into
mov
nop
insb
cmp
inc
outsb
je
xchg
cmpsl
pop
leave
pusha
xchg
enter
ret
inc
pop
cld
gs
xchg
ss
cld
mov
arpl
repnz
ficoml
cwtl
inc
and
aas
xchg
push
pop
sub
in
shlb
mov
cmpsb
data16
data16
lods
sub
jg
js
mov
fs
jo
outsb
add
arpl
faddl
xchg
sub
jo
icebp
adc
fstpt
movsb
jno
sub
iret
mov
xor
insb
cmp
and
cmp
cmpsb
mov
inc
mov
fnstcw
lods
pop
xchg
dec
dec
or
int
cmp
mov
lret
xchg
xor
mov
or
inc
or
mov
sbb
neg
jl
mov
mov
xchg
lods
pop
mov
xor
fs
inc
pushl
mov
sarb
or
inc
jns
push
sahf
je
xlat
fxch
mov
cmpsl
xor
jg
lcall
fstps
and
add
inc
fmuls
and
outsl
imul
mov
mov
gs
inc
pop
call
jbe
mov
ret
cltd
ret
mov
lods
add
mov
pop
lds
jmp
mov
sbb
dec
or
xchg
jb
lret
sub
das
movb
dec
ds
xor
jl
push
repz
and
popa
clc
add
and
jno
mov
or
pop
and
jno
push
stos
xor
mov
lods
popa
or
jp
fstpl
sub
or
jbe
push
cs
and
mov
mov
ja
fdivrl
fs
mov
enter
ds
fadds
cmp
in
outsl
xor
ja
add
push
stos
xor
enter
sub
adc
mov
jg
push
ret
jns
pop
testb
repz
mov
out
out
mov
nop
cmp
movsb
adc
push
push
sti
add
test
pop
add
test
ja
rorl
sti
aam
jne
out
cwtl
inc
idivl
fiaddl
or
cmp
lcall
out
shlb
inc
push
pushf
cmp
or
jo
aad
shl
decb
cltd
scas
mov
sahf
aas
push
mov
pop
test
mov
mov
push
bound
jmp
mov
movsb
and
stos
clc
adc
cmp
mov
xor
and
js
in
mov
out
ja
imul
ja
jne
mov
stos
push
fistl
mov
pop
movsb
sub
negb
mov
in
ret
bound
and
jb
jecxz
cmpsb
mov
stc
jge
in
in
push
jne
sti
push
clc
push
jge
sbb
outsb
repnz
pop
leave
jno
and
jecxz
mov
sub
push
cli
dec
add
sarl
sbb
push
sub
outsb
inc
test
push
or
pop
clc
xor
insb
loop,pn
stos
cmp
cmp
outsb
jg
mov
aaa
mov
das
xchg
aas
popa
addr16
test
loope,pn
jl
xor
or
clc
jle
cltd
jecxz
dec
inc
stc
int3
xchg
popf
aad
adc
jb
nop
push
roll
scas
loop
mov
mov
movb
or
pushf
xchg
aas
xchg
insb
jno
mov
shrb
imull
lods
pop
popa
ljmp
arpl
mov
pop
dec
xor
lret
push
cmpsb
daa
cmp
sti
fildll
dec
adc
pop
push
int3
cmp
sarl
xchg
inc
out
sub
mov
lock
or
ljmp
xor
mov
cmpsl
add
mov
movsl
inc
adc
mov
add
dec
mov
cmpl
dec
mov
cmc
mov
mov
or
cltd
inc
mov
scas
mov
inc
orb
pop
add
gs
cltd
out
repz
xchg
std
sbb
cwtl
cmpsb
dec
push
test
push
add
iret
inc
mov
js
shrl
cltd
push
stc
rol
test
add
push
sbb
stc
popa
or
jp
mov
push
inc
and
pop
adc
jecxz
mov
loopne
cmp
and
sbbl
jmp
loopne
add
cltd
adcl
push
xchg
inc
cld
loopne
cmp
jbe
inc
jl
repz
dec
or
xlat
je
adc
shrl
loope
movsl
cmp
cmp
negl
sub
sub
sti
cmp
test
orb
or
or
orb
fiadds
xchg
out
jae
aad
jecxz
out
jecxz
pop
shlb
int3
mov
mov
dec
and
cld
push
cmp
xchg
test
adc
nop
mov
fiaddl
bound
ja
test
add
loop
gs
mov
pusha
out
fsubl
popa
repnz
nop
cld
rclb
push
rol
xchg
ret
fistl
pop
fdivl
and
push
jo
cld
push
test
pop
mov
ss
sbb
in
cmp
pop
adc
ss
pop
mov
push
test
sbb
mov
mov
aad
pop
leave
test
into
xchg
js
jge
adc
adc
cmp
xor
mov
inc
sbb
dec
psrlw
sub
jnp
or
lret
xchg
aaa
jne
pop
add
cmp
flds
lret
mov
mov
xchg
roll
lcall
aaa
mov
cmp
adc
rcrl
imul
in
add
and
aas
pop
ss
ret
and
stos
push
xchg
int3
arpl
jno
mov
lods
inc
or
fmuls
adc
roll
inc
pop
jbe
cld
add
test
test
lahf
inc
adc
mov
mov
stos
add
lods
out
clc
fs
sub
mov
arpl
movb
addl
ljmp
icebp
pop
mov
ss
les
dec
adc
out
jo
int3
or
jno
test
leave
xchg
rolb
lret
push
arpl
adc
mulb
imul
sti
mov
test
cmp
int3
fwait
ds
movsl
xor
aaa
std
pop
aam
jecxz
ja
sub
inc
rclb
inc
push
or
in
and
dec
or
fidivl
movsb
xor
js
ja
push
test
mov
sub
pop
loope
cmp
inc
cmc
add
sbb
lahf
cmp
mov
test
adc
outsl
add
mov
movsl
mov
sahf
aas
inc
roll
pop
mov
xor
push
add
sub
and
ret
cmpsb
mov
or
push
adc
outsb
repz
inc
out
subb
ss
pop
shl
lock
mov
stos
outsl
icebp
lods
subl
sbb
int
xchg
or
sub
fisubl
push
mov
lods
cmp
mov
jl
loopne
xchg
sti
and
lods
jecxz
pop
mov
inc
js
sbb
adc
push
mov
jge
nop
lds
insl
aaa
jae
divb
frstor
gs
inc
cmp
js
cwtl
test
jmp
jae
fdivrl
inc
sbb
lcall
iret
insb
hlt
mov
mov
icebp
test
scas
mov
mov
xchg
repnz
push
shrl
mov
pop
add
xchg
sbbl
sarl
mov
scas
scas
lock
add
lret
push
ds
or
daa
mov
push
mov
xchg
xchg
adc
xchg
cli
inc
movsb
cmp
fwait
inc
data16
mov
nop
mov
lods
orb
test
sti
mov
negb
jb
jle
or
imul
je
adc
lea
inc
lcall
dec
outsb
and
lea
sub
fyl2x
bound
mov
push
lret
insb
lret
jbe
adc
push
iret
mulb
outsb
fcompl
scas
je
ljmp
iret
jno
incl
hlt
pop
pushf
stos
add
sti
mov
movsb
xchg
movsb
push
not
call
adc
sub
mov
push
cmp
mov
stos
in
mulb
ret
out
mov
pop
loope
mov
mov
mov
pop
mov
adc
dec
inc
fnstcw
mov
push
out
xor
test
lcall
inc
xchg
cmp
inc
cmp
xor
and
pop
lods
sarl
mov
pop
rcll
loopne
stos
inc
add
cltd
mov
ds
dec
jnp
loope
fwait
dec
or
cmp
mov
mov
mov
lock
add
jp
pop
lret
loop
and
aas
in
mov
aaa
ds
adc
mov
outsb
out
jl
xor
mov
subb
fdivrs
and
iret
cmpb
jnp
outsl
out
gs
sub
add
cwtl
mov
mov
cltd
cmp
imul
enter
repnz
push
repz
cwtl
sbb
cli
in
mov
xchg
stos
dec
in
pop
mov
in
out
push
imull
stc
jno
jnp
fidivrl
imul
fisttps
loop
or
add
xchg
dec
adc
js
and
inc
stc
arpl
or
hlt
pushf
jne
mov
stos
insl
icebp
out
in
jno
icebp
dec
or
mov
sbb
pop
ljmp
jl
mov
scas
daa
rcrb
lea
push
movsb
push
sti
ljmp
fs
stos
das
imul
fnstcw
repnz
in
jne
or
mov
jnp
sarb
push
loopne
inc
fldl
mov
mov
sti
nop
mov
andb
pop
push
aaa
jmp
dec
lcall
mov
lds
movsb
pop
cmpsb
xor
shlb
mov
add
imul
shl
ja
pop
jg
ja
iret
arpl
jns
adc
jbe
pop
call
das
test
hlt
mov
leave
repnz
mov
scas
mov
inc
inc
into
jno
dec
xchg
sbb
sbbb
das
outsb
mov
xchg
aaa
movsb
mov
dec
or
jl
aaa
push
jbe
cmp
sub
pop
sbb
pop
sbb
dec
xor
cmp
das
call
mov
push
push
aad
addr16
push
mov
lods
mov
lods
sub
jns
xor
aas
nop
pop
cmp
xchg
lds
mov
mov
orl
cwtl
inc
icebp
fists
out
sbb
or
aad
push
in
jo
stos
xlat
jp
push
test
jns
pop
pop
add
pop
add
and
xor
nop
xor
mov
inc
xor
add
imul
int3
xchg
aaa
outsl
insb
icebp
adc
lahf
ds
dec
or
cmp
cmp
jae
loop
mov
cmpsb
test
mov
ljmp
dec
push
lods
sub
cltd
sub
inc
adc
fisubl
in
imul
sbb
mov
adc
inc
out
add
cwtl
mov
cmp
ret
popf
inc
cs
pop
xchg
inc
sahf
inc
jo
mov
ljmp
cmpsb
sub
lret
and
xchg
cmp
aaa
xor
xchg
jle
aad
fisubrl
mov
ret
mov
filds
lret
or
jne
push
mov
int
sarb
sbb
mov
cmpsl
jo
mov
dec
mov
imul
adc
lea
or
fstpt
lods
sub
aam
je
mov
lret
enter
sbb
mov
addr16
out
clc
xchg
rolb
les
adc
dec
adc
mov
inc
or
fdivl
add
mov
push
push
pop
xchg
sahf
inc
pop
mov
pop
iret
mov
sahf
jo
cli
mulw
test
and
nop
pop
xchg
out
jo
cs
int
jb
clc
push
movsl
xor
loope
jl
test
ret
mov
aad
sbb
mov
cmp
jl
mov
push
jne
push
adc
bound
mov
and
call
idiv
pop
lar
sbb
cmp
call
mov
gs
cmp
ret
and
adc
mov
inc
mov
mov
dec
inc
psrlq
jb
in
push
loop
insl
add
and
xchg
ds
mov
mov
pusha
xlat
add
and
mov
cmpsl
daa
xor
jle
push
sub
fwait
dec
insb
jmp
les
cmpsb
call
out
iret
jg
mov
add
cmp
sub
or
xchg
inc
sbb
add
inc
adcl
adc
les
mov
cmp
jns
js
ret
gs
push
rolb
adc
loope
arpl
mov
jmp
lcall
push
jle
xchg
cmp
jo
dec
add
inc
push
js
mov
dec
daa
push
neg
cltd
cltd
inc
jo
repz
std
arpl
jmp
cld
lcall
pop
orl
mov
jb
iret
out
jb
pop
xor
in
int3
nop
mov
icebp
pop
aas
loopne
pop
sbb
in
jo
fiaddl
pop
mov
nopl
jo
inc
cli
arpl
popa
in
in
xor
repz
scas
jns
scas
or
cwtl
cmp
ret
clc
pop
jp
adc
mov
movsl
inc
push
dec
lret
mov
add
adc
cli
xchg
cmp
add
mov
inc
ja
test
xchg
sbb
sbb
movsb
jae,pn
scas
xor
push
lods
xor
fdivs
fwait
sbb
dec
jb
adc
movsl
mov
mov
fwait
cmp
ret
jmp
jmp
hlt
cwtl
cmp
int
mov
or
fwait
ds
push
out
insl
dec
xchg
inc
jb
test
andl
push
sub
dec
or
sbb
aad
sbb
pop
sbb
ds
inc
xchg
adc
orl
fildl
or
sub
sbbl
andb
jl
shll
ss
sub
xchg
ror
ror
adcb
rcrl
fidivl
pop
pop
add
in
jae
cwtl
push
movb
fwait
inc
addr16
int
fnsave
mov
mov
or
mov
fs
jbe
push
and
mov
scas
xor
pop
popf
inc
jne
or
gs
je
mov
lods
and
and
push
add
loopne
leave
andl
rclb
das
stos
inc
nop
lahf
cmp
push
add
xchg
lds
sarb
dec
dec
pop
adc
enter
jmp
jl
sahf
scas
jmp
add
add
inc
cmp
test
mov
scas
je
aam
mov
rolb
push
mov
lods
daa
repz
scas
sub
mov
fcoms
into
inc
mov
sbb
lds
mov
adc
in
inc
jae
push
sub
pop
sbb
dec
sbb
sbb
jo
jge
push
outsb
repnz
mov
mov
test
mov
adc
push
das
mov
pop
xor
sbb
sbb
or
inc
mov
mov
adc
setle
sbb
lods
loope
xor
cmp
int3
xchg
rcrl
mov
mov
mov
fisttps
aam
and
cltd
xchg
test
rcrb
fsubrl
sub
add
shl
loope
rcll
mulb
lea
mov
mov
dec
mov
xchg
fcmovb
jb
mov
insl
mov
or
xchg
push
and
xchg
scas
repz
mov
arpl
mov
mov
sarb
push
push
call
mov
push
xor
cmpsl
pop
cmpb
popl
jno
mov
stos
loope
xor
aaa
out
addr16
pop
inc
fsts
adc
inc
lods
jle
xlat
xchg
orl
test
dec
adc
sbb
add
ss
icebp
push
mov
and
jne
aad
push
das
cmp
jg
ds
mov
clc
pop
pop
sti
mov
cld
pop
outsl
out
in
push
sbb
xchg
inc
hlt
scas
iret
lea
out
flds
lcall
pop
mov
enter
int
mov
dec
sbb
leave
push
sbb
test
je
cli
mov
movsl
sub
inc
cmp
xchg
jne
cmp
jb
jge
push
leave
aam
fdivrl
add
insb
shlb
push
neg
cmpsl
loopne
inc
bswap
xchg
in
pop
add
jo
push
idivl
fildl
std
add
outsb
jle
mov
cmp
fstpl
orb
dec
push
sbbb
adcl
mov
push
sub
loop
inc
nop
loop
mov
aas
movsl
stos
adc
sti
mov
xchg
cmp
outsb
out
xchg
cmp
jge
inc
xchg
add
lods
xor
push
xor
adc
iret
insb
hlt
scas
sbb
pop
mov
fnstsw
jno
nop
or
int3
filds
sub
mov
movsb
inc
push
mov
mov
mov
into
mov
cmpsl
sub
or
dec
leave
push
ret
pop
sub
inc
push
sbb
ja
inc
or
imul
mov
stos
pusha
cmp
inc
adc
imul
or
repnz
adcb
fisubl
mov
adc
cmpsb
adc
jns
push
dec
js
push
insb
repnz
mov
nop
aas
cmp
cmp
movsl
mov
xchg
ds
fdivs
mov
and
leave
test
mov
divl
mov
or
jmp
repz
cmp
xchg
inc
ja
test
insb
adc
rcrl
adc
pop
xor
scas
sub
add
jmp
icebp
arpl
testl
leave
adc
rclb
or
shll
add
hlt
xchg
repnz
dec
cmp
or
adc
pop
les
scas
inc
dec
add
fs
jg
andl
loope
cld
in
into
scas
inc
push
stc
push
xchg
cmp
mov
jle
pop
xchg
cmp
sbb
mov
sbb
dec
sarl
stos
test
inc
and
cwtl
adc
mov
sar
bound
xor
or
mov
mov
aad
and
xchg
ja
movsl
cmp
cwtl
adc
test
das
sbb
dec
in
cli
call
rorl
jle
mov
adc
cmp
shll
pop
lock
ja
jbe
jecxz
push
cwtl
xchg
sub
das
add
sbb
shrl
aam
aam
xchg
out
xchg
es
repnz
in
movsb
push
jns
adc
int3
xchg
decb
mov
push
or
aam
movsl
sub
repnz
andb
dec
rol
pop
add
fbstp
mov
std
xchg
stos
adc
int3
sbb
xchg
push
cmp
dec
mov
aas
call
or
pop
cmp
jbe
hlt
pop
in
mov
add
lcall
push
test
lock
pop
cmc
popa
push
movsl
xchg
idivl
mov
ret
in
lcall
popf
mov
add
lods
xchg
fiadds
mov
movsl
cmp
xchg
adc
test
xor
sbb
dec
in
stc
call
rorb
loope
and
lahf
cmp
shlb
aas
data16
pop
lock
ja
jne
in
or
add
sbb
and
outsl
sarl
aad
xchg
out
xchg
and
or
adc
lret
cwtl
das
std
mov
mov
fisubl
or
insb
movsb
sub
sbb
idivl
cmp
rol
pop
add
xor
pushf
and
dec
in
js
xchg
stos
add
lret
sbb
xchg
sbb
test
out
mov
shll
pop
out
lea
fbld
dec
cltd
add
mov
in
push
inc
fadds
movsb
pop
not
pusha
push
movsl
xchg
idivb
sub
fwait
xor
dec
loop
pushf
mov
add
stos
xchg
fldl
mov
cmp
xchg
adc
sub
enter
js
cmp
imul
xchg
sub
sbb
and
sahf
cmp
iret
xor
lock
ja
je
in
or
xchg
sub
sub
mov
sbb
shrl
sarb
add
pop
hlt
push
jecxz
movsb
adc
jnp
test
lret
cld
xchg
mov
fldenv
or
insl
mov
hlt
mov
jle
cmp
rol
pop
add
enter
jbe
mov
std
xchg
test
lret
sti
popa
mov
xchg
sbb
rorl
stos
inc
out
pop
out
lahf
pop
leave
pusha
cmp
jbe
repnz
out
mov
xchg
sub
lods
add
dec
cwtl
jmp
mov
in
push
inc
fadds
mov
push
movsl
xchg
cmc
jge
daa
mov
ret
in
fwait
xor
dec
loop
fwait
mov
add
stos
xchg
fldl
mov
movsl
cmp
xchg
adc
and
enter
js
cmp
push
call
mov
fisttps
ror
xor
lock
ja
je
in
or
add
sbb
mov
outsb
sarl
add
pop
hlt
push
jecxz
movsb
adc
jnp
test
sub
leavew
cltd
xor
xchg
mov
fldenv
or
insl
mov
ret
hlt
mov
jle
cmp
rol
pop
add
enter
jbe
mov
std
xchg
test
lret
sti
pusha
mov
xchg
sbb
rorl
stos
inc
in
pop
out
lahf
push
leave
pusha
cmp
jbe
repnz
out
mov
xchg
sub
lods
add
dec
cwtl
and
in
push
inc
fadds
mov
push
movsl
xchg
hlt
jge
es
ret
in
fwait
xor
dec
loop
lcall
mov
xlat
outsb
pop
stos
xchg
fldl
mov
movsl
cmp
xchg
adc
and
enter
js
cmp
imul
insl
add
dec
sbb
and
sahf
cmp
iret
xor
lock
ja
je
in
or
add
sbb
mov
outsb
sarb
add
pop
hlt
push
jecxz
movsb
adc
jnp
cmpsl
xor
cltd
xor
xchg
mov
fldenv
or
insl
mov
ret
hlt
jle
cmp
rol
pop
add
enter
jbe
mov
std
xchg
test
lret
sti
pop
mov
xchg
sbb
rorl
stos
inc
in
pop
out
lahf
add
jbe
repnz
out
mov
xchg
sub
stos
add
dec
cwtl
std
and
in
dec
inc
fadds
mov
push
movsl
xchg
repz
and
inc
fwait
xor
dec
loop
cltd
mov
add
stos
xchg
fnstsw
cmc
mov
movsl
cmp
xchg
adc
and
enter
js
aaa
dec
out
clc
call
mov
fisttpll
ror
xor
lock
push
je
in
or
add
sbb
mov
outsb
iret
aas
add
pop
hlt
push
jecxz
movsb
adc
jnp
cmpsb
xor
cltd
xor
xchg
mov
fldenv
or
insl
mov
shl
repz
cmp
rol
pop
add
enter
jbe
mov
std
xchg
test
lret
sti
pop
mov
nop
sbb
rorl
stos
inc
jecxz
pop
out
lahf
add
pusha
shlb
push
out
mov
xchg
sub
stos
add
dec
cwtl
cld
and
in
dec
inc
fdivrs
lock
mov
push
movsl
xchg
bnd
and
sub
in
fwait
xor
dec
loop
cwtl
mov
add
stos
xchg
fnstsw
cmc
mov
movsl
cmp
xchg
adc
and
enter
js
ss
out
clc
call
mov
fmull
ror
das
test
lock
ja
je
in
or
add
sbb
lods
cmp
push
decl
pop
cmc
push
loop
movsb
adc
adc
lcall
sbb
decb
insl
xlat
outsb
lahf
sub
mov
jge
cmp
rol
pop
add
leave
xchg
and
jbe
mov
std
xchg
test
outsl
push
cmp
sbb
sbb
rorl
inc
loop
pop
out
sahf
add
popa
xor
push
call
sub
test
mov
xchg
sti
and
sub
shrl
dec
inc
fnstcw
lock
lahf
pusha
not
pop
push
movsl
nop
icebp
jle
and
pushf
xor
dec
loop
xchg
mov
add
stos
xchg
fdivrl
movsl
cmp
xchg
adc
ret
pop
and
leave
adc
loope
xor
call
mov
fisttpl
into
cs
inc
pusha
out
pop
lock
ja
jae
out
pop
xchg
xchg
sub
sub
pop
call
and
insl
int
xlat
decb
pop
notb
or
adc
xor
ret
fwait
xor
test
mov
mov
decb
insb
fsubrs
sub
icebp
jl
cmp
iret
rcrl
xor
xchg
and
jbe
mov
call
cmpsl
or
cmp
sbb
mov
cmp
dec
scas
lods
inc
loope
pop
out
popf
add
bound
jbe
lock
jmp
sub
test
sahf
fldenv
xchg
cli
and
push
jge
lock
pop
push
movsl
lock
and
popf
xor
add
xor
mov
add
test
testl
rorl
and
loope
aad
push
call
sub
sbb
and
pushf
cmp
int
stos
inc
pop
out
pop
lock
or
push
jb
out
push
xchg
xchg
sub
daa
add
dec
sbb
mov
insb
int3
inc
fdivr
out
xchg
loopne
movsb
adc
adc
arpl
pushf
xor
test
mov
mov
incb
imul
popf
sub
mov
jnp
cmp
into
rcrl
xor
xchg
and
jbe
mov
jmp
cmpsb
or
cmp
sbb
lea
cmp
dec
scas
lods
inc
loopne
pop
out
pushf
add
arpl
mov
ljmp
cmpsl
or
xchg
stc
es
jmp
or
xchg
push
movsl
mov
adcb
mov
ret
loope
sahf
xor
xor
imul
sbb
clc
insl
sti
movsl
cmp
push
lods
rorb
and
lret
adc
push
jmp
daa
xchg
mov
ror
sub
inc
pop
in
pop
lock
or
mov
ja
jno
call
sub
es
popf
push
out
dec
sbb
mov
imul
frndint
mov
xchg
fisttps
push
mov
ret
popf
xor
orl
push
mov
incb
push
jno
daa
test
mov
mov
scas
inc
int
pop
jmp
int3
xchg
and
ja
mov
ljmp
jb
cmp
sbb
negl
daa
mov
cmp
dec
lods
scas
inc
fisubrs
lock
dec
arpl
mov
ljmp
movsl
or
xchg
mull
mov
jmp
or
mov
stc
int3
pop
xsha1
cmpsb
mov
adcb
mov
xor
xor
push
xchg
fidivl
test
pop
fidivrl
clc
imul
cmp
mov
fbstp
adc
push
jmp
test
mov
push
mov
xlat
mov
lret
sub
sbb
js,pt
jo
call
sub
push
in
dec
pop
ja
mov
push
inc
fsqrt
mov
xchg
fimuls
movsl
movd
mov
rcrl
mov
mov
incl
xchg
in
jns
cmp
int3
ret
pusha
xor
js
mov
ljmp
jb
lds
daa
mov
cmp
dec
stos
scas
inc
fsubrl
icebp
lcall
pmaxsw
addl
bound
mov
call
or
mov
cltd
stc
lret
cmpsl
jmp
pop
sbb
ds
xor
xor
imul
in
jno
cmpsl
mov
fnstenv
clc
ds
push
lods
mov
fnsave
push
mov
push
jmp
and
inc
pop
mov
aad
and
lret
inc
pop
jmp
repnz
lret
cmp
call
cs
and
popf
push
in
dec
push
jne
mov
imul
icebp
mov
xsha1
cmpsb
push
insb
jg
sahf
das
sub
xor
orl
inc
shrl
add
xchg
pop
mov
movsl
cmp
or
scas
cmp
pop
xor
jns
mov
ljmp
jb
xor
push
mov
push
nop
daa
xchg
cmp
inc
fisubrl
repnz
sti
int3
arpl
dec
ljmp
mov
mov
xchg
repz
out
inc
repz
xchg
stc
enter
mov
adcb
scas
das
fistpll
xor
xor
insb
add
mov
fdivs
test
sub
pop
jle
xor
or
in
shrb
add
mov
and
add
lods
inc
pop
ljmp
lods
cmp
adc
call
das
shll
sahf
push
loop
dec
adc
and
imul
mov
mov
fistl
cmpsl
or
adcb
sub
sahf
xor
mov
mov
add
and
pop
push
mov
nop
jmp
or
scas
cmp
les
pop
ss
sbb
push
jmp
jo
cwtl
mov
ret
repz
xchg
sub
cmpsb
scas
inc
fsubs
repz
stc
int
sub
jmp
jle
cltd
xor
lahf
or
xchg
icebp
daa
mov
in
inc
fdivl
mov
xchg
arpl
pop
adc
sbb
ss
decb
das
mov
add
movsb
mov
xor
nop
imulw
scas
mov
fidivl
jnp
sub
ljmp
jno
mov
and
add
ds
and
pop
repz
bound
int3
jmp
das
mov
loopne
dec
adc
mov
les
xchg
mov
fsts
cmpsl
or
sbb
mov
dec
jecxz
movsbl
iret
push
add
jae
and
xchg
call
or
mov
enter
pop
aaa
into
mov
jecxz
dec
lods
push
in
fisubrs
cwtl
lahf
pushl
xor
pop
mov
push
xchg
sub
scas
inc
xlat
gs
repz
clc
int
sub
jmp
jge
cltd
xor
pop
mov
nop
lock
mov
in
inc
fdivl
hlt
mov
xchg
arpl
lds
test
sbb
lahf
ss
in
lea
add
mov
stc
nop
imulb
scas
mov
fnstenv
jnp
sub
pop
lock
mov
and
add
lods
inc
push
out
repz
bound
lret
jmp
das
mov
fbstp
mov
fs
inc
fcomi
test
mov
fcoms
cmpsl
or
sbb
mov
dec
jecxz
push
mov
add
fdivl
and
xchg
out
cmpsb
cmp
cmp
les
pop
aaa
into
mov
jecxz
dec
lods
push
in
cwtl
sahf
jae
xor
pop
mov
push
xchg
sub
movsb
scas
inc
fs
repz
test
adc
dec
jmp
jl
cltd
xor
mov
out
daa
mov
jecxz
inc
fdivl
hlt
mov
xchg
arpl
les
test
pop
stos
xor
fstpt
lahf
ss
dec
in
mov
add
mov
stc
nop
fs
test
daa
xchg
scas
mov
pop
jp
xor
jnp
sub
pop
out
add
scas
inc
and
add
inc
push
out
repz
ja
bound
lret
cld
mov
lahf
dec
fidivs
mov
arpl
inc
fcomi
test
mov
xlat
adc
cltd
sub
lds
lahf
ss
jnp
jecxz
or
push
jmp
jae
and
xchg
in
cmpsl
movsl
push
sbb
clc
pop
aaa
into
mov
in
dec
stos
push
in
fldt
popf
cld
jae
cs
xchg
sub
mov
pop
hlt
xchg
cmc
int
daa
mov
adc
dec
jmp
jp
lcall
pop
mov
mov
loop
inc
fdivl
cmc
mov
push
adc
adc
ss
ss
mov
add
fstp
jb
mov
stc
nop
hlt
test
scas
mov
pop
jns
xor
jl
sub
pop
out
add
lods
inc
and
add
lods
inc
push
in
hlt
push
jne
bound
enter
mov
lahf
dec
fnsave
mov
rolb
repz
adc
xchg
sub
pop
mov
dec
in
or
add
pop
fdivl
pop
mov
push
mov
xchg
jecxz
test
movsb
add
mov
vminss
push
aaa
into
xchg
in
dec
test
in
fldcw
lcall
and
jg
inc
xlat
inc
mov
pop
cmc
xchg
repz
and
inc
jmp
js
fwait
xor
cltd
or
jmp
mov
loope
inc
fsubrl
testb
push
adc
xchg
sbbl
fnstenv
ss
push
out
mov
add
or
cs
nop
pusha
rep
inc
and
inc
enter
xor
jge
es
ljmp
jno
stos
aas
and
xchg
inc
xlat
ret
inc
push
jecxz
cmc
adc
int3
arpl
ljmp
sbb
mov
or
cs
insl
pusha
mov
hlt
mov
aam
test
xchg
es
push
mov
aaa
call
or
add
pop
fnsave
mov
dec
scas
sti
xchg
loope
test
mov
ret
pop
cmc
push
cmp
test
out
dec
cmpsb
push
in
xlat
imul
sub
sub
inc
fdivrs
sahf
mov
shlb
notb
mov
adc
inc
in
xorl
xor
xchg
or
mov
sub
fistpll
inc
mov
lea
push
adc
sbb
cmpsb
xor
xlat
xor
call
mov
jae
sahf
lea
sub
xchg
pop
icebp
stos
inc
and
leave
pusha
jbe
ss
cwtl
out
lret
jmp
jmp
pushf
sbb
jb
test
lret
cld
popl
rcrb
notb
jno
mov
jmp
testb
mov
or
mov
pop
mov
cmc
mov
rclb
stos
add
sbb
mov
cmp
jbe
out
pop
rclb
insl
add
pop
fidivs
sbb
fildll
inc
mov
ror
repz
cmp
adcl
inc
movsb
push
out
aad
add
or
mov
xchg
sub
inc
fnstcw
pop
pusha
testl
inc
in
test
xor
xchg
or
mov
sub
sbb
inc
fisubrs
testl
sbb
sbb
movsb
xor
aad
mov
call
mov
outsl
push
jp
fnsave
lea
sub
xchg
pop
out
stos
inc
and
mov
inc
leave
pusha
je
aaa
into
add
push
in
push
jmp
jae
test
and
sti
lea
sub
fcompl
cmpsl
fnstsw
fsubrs
dec
add
rorl
lea
fnstcw
or
mov
sbb
ds
test
sub
fnsave
add
mov
and
jae
lret
nop
cmp
ret
in
jp
pushf
and
popf
mov
mov
sbb
jmp
add
inc
dec
xchg
mov
xchg
and
aam
pop
jmp
addr16
jbe
rolb
and
pusha
aad
jbe
and
out
pop
mov
dec
push
add
push
test
cmc
xchg
orl
sahf
enter
jge
mov
xor
popf
cli
push
cli
sbb
pushf
lods
loopne
scas
testb
out
iret
lret
loopne
xchg
jmp
sub
push
pop
andl
jg
push
dec
push
pop
in
dec
cmc
inc
gs
popa
leave
mov
loope
into
mov
sbb
and
fs
out
repnz
mov
sub
lahf
push
mov
je
scas
and
mov
scas
and
lock
shl
sarl
outsl
mov
mov
and
sub
mov
xor
push
mov
lcall
popf
fs
or
push
push
or
test
xchg
adc
inc
movsl
jns
jb
or
test
pop
mov
inc
mov
jl
cmp
jmp
jg
jmp
fadds
cmpsb
push
mov
data16
mov
adc
imul
add
hlt
fwait
pop
pushf
test
jp
inc
mov
lods
jne
scas
lcall
lods
cmpsb
scas
push
jge
outsb
int
jmp
test
cmp
pop
pop
add
out
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
and
add
and
adc
jp
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
lret
xchg
ja
fadds
test
sbb
jmp
jb
mov
imul
rolb
mov
xchg
roll
pushf
test
mov
mov
mov
