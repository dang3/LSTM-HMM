mov
inc
xchg
adc
pop
cmp
aam
fiadds
cmpsb
mov
mov
decl
mov
adc
es
or
pop
or
shr
dec
das
es
mov
mov
ljmp
les
jae
inc
and
out
stos
insb
push
mov
in
negb
add
mov
sbb
in
fstpt
mov
fdivr
jmp
or
or
fsubs
ja
adc
pop
or
decl
ret
jl
lret
btr
out
sarl
xchg
cmpsl
jno
or
inc
pop
xor
ljmp
bound
and
mov
test
outsl
xchg
arpl
incb
mov
cmp
jp
outsb
inc
test
dec
clc
loop
fisubrl
and
push
add
ss
ds
stos
bound
imul
or
pusha
movsb
xor
inc
pushf
mov
and
add
jne
or
jb
jmp
mov
sarb
in
fwait
sti
das
daa
fldenv
xchg
pop
je
mov
or
lcall
sti
mov
into
mov
fisubl
and
int
inc
daa
xchg
xchg
jmp
push
adcl
outsb
adc
jns
in
cs
cli
rcrb
adc
popa
pop
jo
cmp
decl
mov
sub
nop
lahf
push
jb
add
jle
push
dec
pop
daa
xlat
jg
incl
jg
fcmovne
sbb
add
loop
cwtl
insl
and
ljmp
jge
pop
shlb
outsl
sbb
jmp
int
rcl
dec
std
cwtl
pop
pushf
imul
or
jl
jbe
sub
pop
fdivrp
xchg
jb
mov
nop
cmp
jl,pt
push
jae
pushl
xchg
popf
popf
push
in
adc
jno
or
ja
push
jge
pusha
pop
lcall
decl
add
addr16
mov
lock
mov
loope
clc
aaa
cld
in
dec
test
test
lds
push
test
imul
push
leave
adc
xor
js
jecxz
movsl
or
pushl
mov
out
mov
aam
add
sub
ret
dec
scas
mov
push
mov
jmp
pop
stos
cli
add
cmp
ljmp
jae
mov
jnp
lock
add
jno
xchg
popa
fwait
mov
std
pop
mov
popf
push
fsubl
sub
ds
ljmp
jle
mov
adc
dec
outsb
sub
push
inc
push
pop
scas
addr16
inc
sbb
fmull
xor
jnp
push
pop
jbe
pop
lds
repnz
aad
repnz
rcr
jg
add
sub
into
rcrb
fisubrl
sbb
sbb
incl
push
mov
dec
xor
jp
push
jns
lcall
stos
sti
sar
imul
inc
cmp
mov
adc
mov
jnp
xchg
in
cmp
cmpsl
inc
incl
sbbl
xchg
call
push
aam
add
pop
loop
imul
outsl
mov
mov
fists
mov
call
jle
inc
rolb
xlat
sbb
inc
and
imul
mov
mov
mov
and
sti
and
push
in
xor
loopne
or
jmp
ret
test
mov
mov
loopne
ss
ljmp
fiadds
pushl
fsts
insb
mov
mov
jns
adc
aas
and
jecxz
decl
mov
add
cmp
aam
shlb
je
int
stos
pop
jb
cmp
pushl
loop
fadds
or
js
fwait
lcall
ljmp
sbb
cmp
adc
mov
scas
and
inc
sub
call
cmpsb
imul
cmpsb
das
add
in
fstl
push
fidivs
std
push
mov
in
sahf
mov
and
test
pop
in
xor
js
mov
inc
cmp
push
push
and
jne
dec
xchg
out
pop
sbb
mov
jg
stc
add
inc
add
call
outsb
fs
adc
adc
decl
xchg
int3
add
add
push
pop
jbe
adc
sbb
icebp
add
rcrb
pushl
out
or
push
repnz
pop
not
jmp
mov
xor
call
cmp
pop
aam
dec
pop
cmpsb
setg
inc
std
stos
fs
pop
fsubrs
add
cmp
dec
sarb
mov
sub
repnz
mov
mov
jne
movsb
int3
jle
jno
adc
ljmp
pop
dec
mov
outsl
pop
push
out
mov
add
fistpl
repz
xor
mov
pop
jecxz
inc
lahf
ret
cs
mov
inc
xchg
xor
decb
int
ljmp
test
jle
ja
test
test
sahf
shl
in
in
hlt
fildll
call
into
adc
aad
xor
and
push
and
and
and
or
ljmp
cmp
cmc
stc
pop
mov
aam
pushf
sbb
stc
aad
mov
lcall
xchg
cwtl
xor
ret
push
insl
in
lret
jo
xor
or
test
stc
adc
arpl
ljmp
lock
ljmp
fists
jl
ds
jne
pushl
dec
cmp
stc
pushf
mov
stos
lods
data16
dec
pop
stos
testb
jecxz
pushl
or
mov
jmp
mov
movsl
into
mov
inc
lret
xchg
orl
jecxz
cmp
pop
mov
imul
ds
out
push
mull
mov
sbb
inc
idivb
xor
mov
sbb
inc
jmp
mov
mov
andl
fsubl
mov
outsl
cld
pushl
dec
push
into
cmp
loope
aam
xchg
stc
imul
mov
jp
nop
out
xor
enter
add
xor
push
in
aaa
test
shll
in
gs
cmp
cld
inc
mov
jl
lea
add
test
push
aam
mov
ljmp
push
sub
mov
mov
sbb
lods
or
or
cwtl
mov
gs
fdivrp
fbstp
xor
sbb
xor
in
cld
or
pushf
cld
cmpsb
std
add
adc
cltd
fsubp
mov
stc
jb
mov
xchg
adcb
add
sbb
jp
out
sbb
cmp
mov
xchg
dec
std
push
icebp
dec
push
les
jnp
pop
mov
or
or
pop
push
cmp
jo
xor
into
dec
cmpsl
decl
sbb
jb
xchg
dec
aad
add
cmpsb
into
jne
jle
or
testb
inc
add
addr16
cmp
jecxz
repnz
cmp
jp
inc
decl
jae
jg
in
push
push
mov
clc
ds
icebp
dec
cli
pop
sub
rorb
rcrl
add
out
mov
jmp
jmp
inc
insl
out
push
scas
pusha
mov
mov
sub
add
or
jg
fmull
nop
movsb
in
add
mov
leave
ljmp
push
push
arpl
jns
inc
pop
inc
aaa
mov
cmp
pushf
mov
mov
jecxz
icebp
sub
cmpsb
out
add
cmp
fidivl
dec
jnp
imul
adc
aaa
adc
add
movsl
and
outsb
inc
xchg
not
add
ficoml
xor
jge
mov
jg
fbld
fdivrs
xchg
add
inc
or
add
jbe
shll
decl
sti
xor
loope
aam
add
add
and
fnstsw
jg
ljmp
movl
sbb
mov
mov
mov
mov
or
ret
jnp
fistps
inc
test
dec
lock
dec
sub
mov
pop
ja
sub
fmuls
out
mov
iret
mov
mov
stos
jp
jmp
mov
add
sub
in
sti
mov
dec
adc
imul
fiaddl
scas
cmp
add
ret
mov
outsb
gs
addr16
in
cld
paddsw
xlat
xor
push
xor
jmp
scas
and
cmpsb
adc
sti
push
in
lret
mov
dec
dec
not
mov
pop
idivb
neg
inc
or
neg
mov
pop
or
add
shlb
fcoms
sti
lods
mov
dec
add
ljmp
push
out
cmp
in
jne
std
out
mov
mov
dec
es
sbb
fnsave
cli
mov
jl
test
imull
aam
add
add
aad
mov
insb
scas
fstp
mov
or
xor
sbb
fisubs
or
fwait
insl
out
adc
add
inc
addr16
xchg
push
sbb
and
sbb
in
sub
or
pushf
add
add
arpl
mov
add
loopne
int
clc
fdivs
sub
ja
ret
fldl
inc
push
loopne
sbb
adc
frstor
fneni(8087
stc
in
int3
pop
rclb
clc
mov
insl
cmp
imul
pop
fldl
add
add
jne
aaa
pop
jle
sub
je
js
ret
mov
adc
cmp
fs
outsb
fisubs
add
hlt
sarb
mov
inc
das
jne
cli
shrl
fdivl
movsb
lock
out
inc
clc
ljmp
das
ret
dec
in
sub
xor
cmp
mov
sarl
xchg
outsl
daa
mov
pop
inc
faddl
in
adc
add
jbe
mov
push
cmpl
mov
clc
ret
jae
add
or
subl
pop
sub
lock
mov
cmp
inc
xchg
mov
lea
mov
xor
enter
dec
xor
insl
xchg
pusha
dec
push
sub
rclb
loopne
mov
decb
cld
in
add
es
jno
dec
or
sub
incb
loope
mov
fdivl
insb
sahf
lock
mov
rcr
adc
in
popa
sbb
or
shll
xchg
movsl
dec
jo
lock
xlat
mov
mov
test
adc
shll
dec
rcrb
scas
leave
ret
shrl
or
test
mov
test
sar
lcall
je
jmp
dec
mov
adc
push
imul
call
mov
mov
jp
mov
outsb
les
add
or
or
push
lods
pop
xchg
push
aad
cli
inc
sub
add
pop
pop
jg
mov
repz
es
mov
xchg
jg
call
mov
mov
into
stc
call
pop
cli
push
sbb
lods
roll
fbstp
mov
push
fldcw
loopne
dec
mov
clc
inc
add
scas
ss
addb
cli
dec
mov
loope
or
stos
rcrb
pop
jmp
lahf
in
movsl
mov
jg
jg
dec
mov
xor
xor
loopne
outsl
hlt
pushl
ja
lds
aam
pop
push
xlat
mov
mov
arpl
pushl
inc
outsb
out
jmp
fidivrl
mov
adc
aas
call
or
fs
aaa
enter
mov
mov
pop
in
incl
mov
sub
add
bswap
in
mov
xlat
out
js
adc
test
fisttpl
xchg
lods
mov
jo
jne
test
mov
mov
fistps
scas
lahf
ds
jno
popa
push
out
mov
test
mov
into
mov
call
ss
adc
mov
clc
add
in
adc
xchg
bound
cli
pop
cli
shlb
xor
aas
pop
clc
incl
mov
mov
jo
mov
xchg
mov
inc
adc
dec
aam
mov
adcl
mov
jno
inc
sbb
mov
push
mov
std
in
mov
cmp
lcall
jg
cli
scas
idiv
lret
inc
jb
sbb
pop
pop
sbb
std
imul
sbb
test
jb
mov
test
inc
cmpl
pop
or
adc
jbe
sbb
push
into
push
sahf
ret
idiv
mov
or
andb
add
fmulp
add
or
xchg
cmp
jmp
add
repnz
and
jg
leave
outsl
insb
mov
push
jno
push
icebp
insl
push
sbb
inc
jmp
outsl
cld
lcall
xor
add
call
stc
rorl
and
jp
icebp
pushl
fnsave
mov
int
jo
cmp
push
and
lret
aam
and
adc
lea
sbb
hlt
call
mov
mov
mov
sarb
repnz
in
push
push
call
lahf
test
inc
mov
pop
push
push
in
bnd
push
xorl
and
pushl
ljmp
mov
cmp
das
in
lock
cmp
mov
xchg
push
xchg
fucomip
mov
inc
and
je
xchg
pop
adc
sbb
in
gs
ljmp
and
xchg
lods
sub
dec
scas
les
xchg
xchg
and
call
mov
insl
lock
jl
ljmp
or
popa
fstpl
scas
dec
push
xor
out
js
add
adc
cmp
repnz
pop
je
inc
sub
loopne
mulb
outsl
add
inc
test
cli
xor
add
arpl
jmp
xor
pop
jmp
ljmp
xchg
mov
aas
popf
mov
adc
inc
mov
cmc
das
jno
sbb
ficoms
xor
popf
sub
inc
push
call
into
push
push
mov
in
inc
aam
dec
ds
repnz
lahf
subl
cmp
push
mov
mov
in
jnp
iret
adc
mov
pop
cli
call
jg
cmp
or
sarl
xchg
popa
lds
lahf
repz
lcall
lds
pop
fidivl
jae
fs
clc
jge
or
adc
dec
push
ja
aad
mov
adc
jle
leave
sub
sub
lahf
push
push
fxch
dec
pop
cmp
stc
push
jbe
fsubrs
pop
in
stos
inc
or
sub
loope
push
inc
ljmp
sti
mov
dec
aam
or
dec
or
pop
test
sbb
jmp
fimuls
pushl
fs
cmp
cli
jg
xchg
jae
pop
cli
ljmp
fists
ds
xchg
sub
or
mov
adc
stc
cmp
push
fwait
lcall
jmp
push
roll
out
inc
mov
ret
push
into
xor
sub
clc
xor
jmp
and
decb
push
sub
mov
dec
cmpsb
adc
cmpxchg
into
aas
fsubl
sbb
fldenv
inc
addr16
aaa
and
jnp
mov
inc
scas
fdivrp
andb
rolb
lahf
mov
test
jp
and
mov
cltd
pop
test
mov
sti
adc
cmpsb
adc
mov
jmp
enter
loopne
pop
bound
out
mov
adc
dec
cld
sbb
mov
and
mov
cld
push
loopne
outsb
pop
mov
jge
shlb
mov
arpl
dec
ret
sbb
sbb
cmp
cmp
push
int3
push
lds
insb
adc
ret
pop
loopne
jmp
mov
dec
fistps
fwait
rolb
add
pop
inc
cmpb
mov
outsl
repnz
into
mov
les
jmp
inc
add
sarl
push
jge
in
xor
xchg
int3
adc
push
scas
aam
fidivs
mov
aaa
dec
push
test
frstor
scas
sub
mov
mov
xorb
ret
mov
pop
sbb
and
sub
into
ret
shll
dec
and
data16
xor
out
push
xor
fstpl
lret
mov
idivb
shlb
mov
ja
int3
or
adc
mov
and
hlt
pushf
test
sahf
adc
xor
push
or
cmc
cld
sub
xor
popf
cmpsl
add
cs
bound
xor
xor
lea
hlt
inc
sti
test
stc
jecxz
sbb
and
inc
push
pop
pop
in
pusha
mov
repz
pop
mov
cld
mov
hlt
cmp
int3
inc
inc
xlat
lcall
jb
fldt
dec
call
and
add
mov
sub
adc
arpl
sbb
aad
fsubrs
or
pushf
add
in
loope
loop
iret
and
push
mov
push
loope
pop
cltd
xor
xchg
in
push
sub
inc
shrb
and
mov
sbb
bound
mov
inc
out
pop
or
test
fld
sub
shll
test
and
ja
xor
hlt
sub
loope
inc
dec
sub
outsb
mov
mov
xor
add
inc
mov
add
or
mov
mov
ss
outsb
cmp
push
and
fisubl
add
add
inc
mov
dec
scas
push
push
jbe
call
clc
push
push
aam
test
pop
imul
sbb
add
add
adc
mov
hlt
add
sbb
repz
xor
popf
sar
adcb
cmp
sub
sub
mov
fwait
scas
shrl
ret
sub
in
fistps
int3
stos
mov
xchg
fistl
dec
leave
iret
cmpsl
aaa
pop
mov
push
adc
lret
and
int3
jp
bound
sbb
push
sbb
xor
ret
lret
push
dec
push
test
cli
stos
xor
aad
pop
dec
sub
mov
cs
mov
mov
shrb
inc
add
mov
divl
xchg
idivb
xorl
das
jge
imul
add
and
loop
pop
nop
sub
xor
stos
lock
add
add
div
out
and
fsubs
sbb
mov
scas
sbb
pop
push
sub
test
add
jne
mov
ret
insl
pop
add
imull
aaa
cmp
or
sub
leave
test
push
sub
and
fistps
in
or
push
xchg
add
mov
aas
in
outsl
xchg
imul
sti
daa
orl
push
pop
mov
sub
movsl
add
jns
loopne
jne
rcll
pop
jmp
adc
inc
sti
inc
ret
rcrl
dec
or
fmull
xchg
cmp
xchg
and
addb
and
and
inc
ret
xchg
pop
adc
jb
add
rcrl
mov
xor
fcompl
sbb
roll
push
les
inc
mov
subb
xor
push
sub
dec
imul
in
test
and
adc
jg
adc
mov
dec
lcall
jo
push
pop
pop
ljmp
cmp
mov
cmpsb
pop
jne
mov
ret
inc
and
and
addb
bound
shlb
xor
add
in
sbb
mov
cmp
mul
mov
pop
cmp
xchg
ret
sbb
or
loope
push
dec
inc
sub
pop
add
mov
shll
cmc
pop
or
rorl
insl
and
dec
call
add
insb
outsl
push
xorb
jge
pop
xchg
int3
fisttpll
dec
std
or
pop
dec
shlb
cltd
ror
mov
pop
sbbl
xchg
inc
test
lret
popf
stc
or
out
insb
cmp
xor
ds
inc
leave
mov
stos
int3
sub
sub
aas
pop
stc
hlt
sbb
push
pop
icebp
jecxz
ljmp
mov
xlat
ficompl
loopne
lods
ljmp
xor
test
aaa
dec
mov
jp
add
pop
adc
hlt
and
jp
negb
out
xchg
xor
adc
call
pmaxub
xchg
data16
xchg
gs
adc
add
add
xchg
clc
fadds
imul
inc
xor
sbb
mov
push
adc
add
ja
jmp
enter
ror
out
test
orb
sbb
nop
add
bound
out
lds
stc
xchg
sbb
loope
xchg
hlt
inc
fiaddl
or
negb
subb
add
push
nop
add
insl
jae
das
cmp
jmp
xor
or
sbb
scas
sub
out
jno
dec
mov
enter
out
das
mov
lret
sbb
sub
orb
insb
lock
fimull
sbb
inc
inc
sbb
jg
jmp
rcrl
add
or
int3
loope
loope
fsubs
jl
add
dec
stos
sbb
les
mov
dec
push
pop
icebp
dec
lahf
sbbb
cmp
or
call
ret
cmp
cmp
es
hlt
pusha
mov
cltd
loope
in
insb
jno
icebp
popl
sti
cmpsl
lods
outsl
decl
ds
sub
push
or
jnp
jnp
addr16
cmc
pushl
into
jo
or
jp
lahf
out
pop
test
xor
dec
push
insb
mov
incl
sahf
test
mov
mov
pop
jp
call
aad
leave
dec
jg
pushl
cmp
xor
scas
push
mov
add
sbb
add
sbb
mov
repnz
mov
push
mov
mov
call
mov
fisttpl
xchg
ja
test
pop
and
aad
sbb
jmp
jnp
adc
inc
cmp
push
into
addl
mov
decl
xchg
sub
push
popf
stos
jl
fdivs
xchg
call
scas
fcmovnbe
out
into
push
shll
in
cmp
and
pop
aaa
mov
lcall
stos
inc
jae
push
fs
popf
cmp
xchg
xchg
stos
mov
das
inc
aaa
aaa
loop
rorl
imull
and
inc
add
jl,pt
ret
pop
stos
lods
jno
in
into
int
jmp
mov
push
jl
push
dec
mov
jp
inc
sub
add
adc
cmp
jp
sbbl
dec
mov
dec
add
cmc
shrb
jle
adc
nop
dec
dec
test
fisubrl
add
call
imul
jp
inc
sti
and
mov
andl
jae
pop
jb
fcmovnu
push
stos
inc
scas
cwtl
movsb
xor
cmp
push
into
rcll
sbb
add
addr16
je
arpl
arpl
lds
in
and
dec
test
lock
dec
pop
imul
sbb
shrl
aas
stc
xor
loopne
mov
fcmovbe
fidivrs
or
popf
sti
movb
addb
adc
out
push
inc
dec
and
cmp
int
enter
lret
cmpsb
mov
repz
or
pop
dec
pop
jo
push
dec
insl
icebp
cltd
pop
or
ljmp
mov
xchg
sub
testl
push
fsubl
cli
sub
pop
fiaddl
and
mov
xor
inc
imul
cmp
incl
mov
jb
add
pop
ret
icebp
loop
sbb
inc
ret
xor
loope
lods
inc
cmp
decl
jmp
stos
jge
inc
pop
fadds
mov
cmp
into
or
cmc
in
adc
flds
pushl
std
adc
mov
xor
dec
repnz
pop
mov
jg
sahf
into
xorl
cltd
int
pop
push
incl
cltd
jl
ljmp
mov
out
ljmp
cmp
jmp
js
jno
cmp
icebp
jg
aad
jmp
mov
dec
push
xchg
xor
gs
ljmp
pop
mov
and
movsb
into
push
daa
xor
in
insl
push
clc
xor
jno
or
jmp
adc
nop
iret
clc
and
fidivrs
jnp
xor
lock
inc
std
stc
push
xchg
push
lea
rolb
sarl
mov
jnp
jge
and
dec
stc
idivb
mov
xor
decl
cmp
mov
ret
jbe
lods
out
mov
stos
out
xor
or
outsl
and
idivb
popa
inc
mov
enter
jbe
inc
out
inc
push
cli
xchg
incl
popf
imul
loope
and
cltd
sub
add
and
hlt
das
cld
cwtl
lret
shrl
ds
pop
adc
stos
scas
push
stos
inc
add
jecxz
out
mov
xchg
xchg
mov
inc
jmp
xchg
js
test
outsl
mov
push
jb
xor
outsl
dec
or
push
test
adc
and
popl
xchg
push
pop
repz
fisttpl
call
dec
out
mov
in
rorl
or
and
daa
daa
decl
aas
xor
call
notb
or
sbb
dec
int3
lods
test
jo
xchg
fdivr
inc
fsubs
lds
mov
pop
mov
xor
aas
pop
pop
ss
jg
mov
test
jmp
jl
push
in
sbbl
clc
pushl
negl
mov
adc
pop
ja
aad
call
je
insb
imul
stc
lock
cltd
stc
pop
outsl
mov
addr16
mov
incl
lods
xchg
pop
mov
push
xor
dec
or
or
dec
inc
jg
inc
jae
jo
mov
inc
icebp
orl
inc
mov
in
shrl
pushl
or
mov
sub
test
mov
sbb
int3
scas
xlat
inc
rcll
loope
aas
xchg
movsl
call
in
xor
mov
xchg
mov
shrb
cltd
cmp
xor
ljmp
cpuid
mov
or
sub
fs
cmp
insb
mov
outsl
hlt
pushl
aad
data16
fnstcw
add
in
jl
jmp
xor
cltd
push
push
pop
jbe
and
lds
into
test
filds
bound
shll
or
roll
xchg
pop
shlb
jmp
negl
add
push
scas
dec
or
mov
es
mov
push
jg
icebp
push
stc
pop
loop
jp
bound
ljmp
or
andl
leave
scas
dec
push
mov
inc
or
lock
adc
pop
cwtl
mov
cmp
cmp
or
cmc
jmp
pop
rcrb
dec
push
test
scas
jbe
push
adc
pop
xchg
dec
xchg
repnz
jno
dec
lods
popf
sbb
push
stos
icebp
push
mov
jg
jmp
jne
lds
lods
das
pop
mov
stc
sbb
cmp
cs
les
cltd
icebp
inc
outsl
xor
sbb
add
stos
xor
repz
jns
cmp
aaa
pop
clc
lcall
test
movb
pop
sbb
mov
jg
pop
mov
loope
add
mov
cmp
sbb
and
inc
lcall
and
out
mov
mov
sub
push
scas
out
sbb
je
ret
scas
push
fcompl
dec
lret
and
or
dec
pop
pop
push
pop
clc
fistl
jecxz
jl
mov
bnd
sbb
bound
pop
adc
cmc
jl
xchg
loop
pusha
pushf
jp
aaa
daa
inc
add
loope
arpl
call
pop
mov
pop
popa
sbb
mov
movsb
or
movsb
jnp
dec
xlat
xchg
cmp
in
xor
sub
incl
pop
lods
inc
sub
aam
inc
sbb
add
xor
jno
sbb
call
loope
fstps
push
push
leave
lods
jl
sub
mov
xchg
adc
mov
dec
data16
dec
cld
jmp
push
xor
push
push
imul
jmp
popf
push
jae
add
add
mov
test
aas
lret
dec
enter
adc
sbb
adc
loopne
push
sub
pushl
stos
add
xor
rorl
mov
adcl
cmpsl
xchg
and
mov
push
inc
icebp
mov
or
mov
xchg
xor
call
cmp
push
dec
adc
mov
pop
cld
pop
mov
mov
push
jns
call
shlb
cmp
stc
mov
lcall
add
lret
iret
pop
into
and
shrl
daa
or
stc
pusha
adc
cld
adc
mov
inc
sbb
jle
das
sub
jecxz
jmp
pop
sub
mov
push
neg
cltd
sbb
mov
and
mov
and
add
call
jmp
mov
call
xor
xchg
push
call
ljmp
xor
fwait
sbb
arpl
xchg
sahf
jge
lcall
nop
cli
cmp
lea
push
gs
jmp
sbb
popl
jge
push
test
xchg
into
sub
sub
insb
and
mov
aad
inc
mov
lock
mov
push
repnz
xchg
lds
pop
and
mov
jg
inc
lods
data16
xchg
adc
inc
cmp
js
sbb
jl
cmp
sbb
rol
sbb
addr16
bound
xor
clc
imul
or
std
frstor
fsts
xor
orb
mov
loop
jbe
add
jmp
ljmp
test
insl
test
popf
or
into
bound
mov
cmp
daa
ljmp
adc
pop
lods
push
cmp
rol
out
and
in
stos
add
xchg
ljmp
push
popa
mov
call
pusha
out
repz
into
addr16
cmp
aam
jmp
pop
mov
shll
aam
repnz
test
inc
mov
sub
test
call
cli
pop
xlat
test
and
xlat
cmp
addr16
into
mov
cld
mov
int3
dec
int3
sahf
mov
xor
mov
stc
bound
push
test
call
dec
loopne
push
clc
int3
sahf
sbb
jp
sub
mov
jle
scas
decl
scas
inc
aam
inc
icebp
test
sbb
leave
arpl
adc
jl
pusha
push
jg
das
icebp
jns
cs
pusha
imul
call
cld
lret
mov
subl
mov
inc
sbb
rorb
pushl
push
test
fisubs
lret
mov
pop
push
sub
sbb
mov
jg
ljmp
roll
ljmp
mov
adc
rolb
sbb
lcall
int3
call
push
adc
mov
pop
ja
dec
pushf
xchg
loope
lcall
or
cltd
imul
je
xor
mov
sar
fisttps
lret
cs
pop
clc
xor
test
jnp
jne
cmp
ljmp
ss
loope
pop
aaa
inc
loopne
or
cmp
outsb
std
cmpsb
push
or
jp
arpl
pop
cli
push
jns
stc
mov
add
shl
out
pop
push
xor
divl
mov
inc
jne
jg
push
cs
movl
rorl
popa
fdivs
push
aad
pop
jnp
mov
dec
add
outsl
xchg
leave
sub
mov
add
rclb
pop
adc
inc
jecxz
xlat
orb
add
call
push
call
mov
outsb
or
inc
or
daa
adc
jne
inc
dec
mov
push
sbb
fcomp
add
aad
xor
out
andb
lods
sub
bound
vmread
mov
adc
mov
int
mov
cwtl
ret
sub
clc
or
inc
mov
adcl
cwtl
push
mov
shll
jnp
pop
repz
cmp
lret
hlt
jle
or
jge
sbb
sbbl
inc
sub
cmp
in
shlb
and
push
xor
into
push
sub
into
jl
das
or
jle
enter
push
pushf
ljmp
mov
orb
je
ret
mov
out
inc
jo
imul
mov
cmp
pop
loopne
push
fcmovb
mov
or
lods
retw
cs
loopne
andb
or
adc
out
push
mulb
xor
pop
adc
lock
ljmp
add
adc
pop
and
push
and
call
sarb
out
loopne
push
imul
adc
inc
add
sub
rorl
out
xor
in
sub
sbb
mov
dec
fcomp
xor
aaa
mov
mov
pusha
sub
roll
cltd
fsub
add
mov
xor
cld
sbb
ds
fcompl
mov
jp
dec
mov
mov
add
or
outsb
rsqrtps
aad
push
xchg
push
mov
bound
mov
sbb
sbb
add
dec
inc
pop
xor
adc
cmpsl
add
scas
int3
out
mov
push
cmp
push
ftst
sub
add
into
in
jb
mov
int
add
inc
inc
sbb
sarb
sbb
adc
sbb
clc
fsubl
push
xor
lock
imul
mov
xor
dec
adc
rcr
add
aad
xchg
shlb
jne
and
xor
mov
fwait
popa
sub
push
les
fwait
xor
fildll
stos
aam
loopne
sub
jnp
outsl
sub
ds
rolb
stc
test
cmp
inc
ds
pushw
fdivrp
incl
mov
sub
rorb
add
fadd
adc
inc
ljmp
incl
out
popa
xor
dec
pmaxub
cli
movsb
lods
jnp
outsl
icebp
fstpl
int
data16
lahf
repz
icebp
repz
pushf
sbb
pop
lcall
mov
jmp
nop
in
std
ret
shll
push
sbb
leave
call
aaa
jno
sti
fs
push
push
cmp
xor
xchg
cmp
mov
fucomp
ss
call
insl
and
lahf
clc
add
dec
mov
xchg
shl
icebp
imul
into
dec
dec
fucomip
push
add
jnp
or
fwait
arpl
dec
mov
sub
popf
inc
loop
ret
pop
aad
jo
insb
cmp
nop
cmc
incb
mov
stos
mov
sub
push
mov
leave
scas
adc
and
lahf
push
out
fs
and
push
mov
and
push
aaa
push
xor
lret
addl
sub
mov
addb
popf
ds
mov
loopne
xchg
mov
mov
lret
sub
ljmp
decl
ljmp
cltd
xlat
mov
out
cmc
scas
push
jl
movsb
inc
icebp
or
aad
incb
clc
jle
pop
sbb
fistpll
dec
dec
cmp
sub
bound
test
decl
mov
sub
inc
addl
dec
pop
sbb
lcall
xlat
lret
or
push
jnp
outsb
xchg
push
and
sub
lods
decl
lret
lods
mov
cmp
sbb
xchg
mov
push
cmp
clc
lcall
and
out
rclb
dec
shrl
les
or
sbb
cmp
fidivl
jge
mov
lret
jno
fs
pop
jg
jmp
clc
push
jp
fildll
mov
mov
jne
xor
iret
push
mov
or
shlb
jb
std
add
mov
call
test
xlat
dec
lea
mov
mov
cmc
test
data16
xchg
add
push
dec
shr
adc
or
or
xor
fbld
jg
ljmp
inc
and
in
scas
das
call
into
push
mov
push
adc
sti
or
int
out
in
leave
imul
and
cmp
mov
xchg
add
cmp
shll
into
not
lods
cmp
shlb
xchg
pop
jp
outsl
cld
lods
or
test
push
jp
pushf
fisubs
sbb
lcall
std
jmp
sti
int
sbb
xor
sti
and
mov
push
test
or
or
call
outsb
mov
adc
lahf
jno
movsb
cmp
lcall
out
xor
call
mov
clc
jecxz
jno
push
push
jl
pop
adc
mov
negb
hlt
pop
jl
jmp
add
lods
daa
jae
mov
mov
stos
fcomps
and
loop
push
sbb
cmp
add
popf
dec
dec
hlt
push
xor
xor
aam
pop
loop
mov
xor
add
ljmp
daa
scas
xlat
movsb
xlat
xor
jo
mov
shlb
lcall
leave
lock
add
add
mov
push
cmp
pop
and
std
mov
test
rcrb
dec
xchg
rorl
xchg
and
fsubrl
les
dec
adc
andb
add
andl
and
inc
insb
dec
shrl
inc
imul
fcom
js
cmp
addb
outsl
mov
pop
fwait
push
xchg
lea
add
push
xor
dec
mov
pop
les
ss
mov
adc
aam
fidivrs
lock
mov
fs
and
or
sub
lods
and
gs
xchg
imul
loopne
rolb
in
and
inc
pop
cmp
aam
popa
add
mov
pop
jle
xlat
stos
and
imul
sbb
loop
not
out
ja
or
ret
and
xor
xchg
inc
and
ljmp
jno
sbb
jge
xor
mov
hlt
dec
jne
test
loop
pop
idivb
lret
or
std
insl
rolb
jae,pt
insl
fistpl
stos
dec
fmulp
xor
mov
add
iret
jmp
fnstenv
dec
xor
insb
mov
inc
and
mov
jmp
cmpsb
mulb
das
into
adc
and
mov
ret
lds
push
stos
call
pop
js
pushf
fsubrs
sub
inc
lock
push
and
popa
add
fisttpl
sarb
xchg
aam
sbb
insl
rcrb
fiadds
out
sbb
add
cs
xlat
pop
outsl
add
mov
xchg
jo
jns
adc
test
and
mov
push
shlb
fmuls
test
mov
in
add
std
pop
stos
outsb
mov
call
in
or
push
push
push
in
js
mov
inc
add
xorl
xor
icebp
sarb
in
xlat
cli
fildll
jnp
add
cmp
cld
mov
pop
gs
jo
cmp
rclb
test
movsb
cli
mov
xchg
movsl
dec
dec
pop
ret
mov
aaa
or
inc
jge
ss
xor
es
add
and
and
cmp
or
inc
and
dec
scas
push
pop
stos
stos
dec
mov
sahf
jo
addr16
and
xchg
lcall
sbb
mov
std
lea
xor
loop
mov
mov
decb
pop
pop
add
fucomip
sbb
inc
dec
add
mov
ljmp
inc
movsl
sbb
fwait
mov
arpl
rorb
pop
cli
jmp
insl
leave
mov
fimuls
or
or
jge
add
cwtl
into
and
inc
jmp
icebp
push
inc
sub
mov
rol
and
nop
add
mov
jg
sbb
add
cs
dec
sub
outsl
lret
ljmp
cld
stos
cli
pop
rclb
mov
dec
xchg
inc
jl
cli
lahf
push
lahf
xchg
push
movsl
add
shrl
sub
test
in
sub
cmp
sub
je
iret
stos
jns
push
push
movsl
mov
or
out
dec
mov
jl
jae
add
lahf
pushl
xor
fwait
ret
push
jb
push
int
mov
and
pop
add
decl
cmp
nop
aas
pop
dec
fisttps
add
xor
xchg
push
xor
fstpt
push
inc
jno
adc
sahf
into
sarb
adcl
push
pop
outsb
imul
mov
adc
cmp
stos
fsubrp
mov
repz
decl
lods
clc
jno
xor
iret
in
mov
in
out
fisttps
call
sbb
mov
lods
imul
fs
mov
test
orl
push
inc
sbb
push
rolb
pop
adc
dec
xor
mov
lcall
ja
in
into
sub
pop
pop
sub
cmp
rol
or
sar
in
adc
cltd
dec
inc
mov
xor
or
and
aas
dec
fimuls
pusha
jnp
cmp
cmp
sar
incl
or
sbb
aaa
lret
movsw
mov
clc
pop
or
mov
das
shrb
lea
or
aaa
std
pop
cmp
repnz
inc
aam
sub
push
jo
jp
inc
push
loopne
cli
decl
mov
push
and
xor
and
cld
mov
xchg
add
shrb
pop
dec
lret
mov
fdivl
lods
out
mov
inc
add
lds
enter
jg
sti
jg
xchg
out
jle
sbb
scas
nop
cmp
ja
mov
ljmp
xchg
xor
pop
push
test
cld
icebp
clc
inc
es
jp
cmp
aad
xor
lock
pushl
jo
inc
aaa
shlb
insb
fbld
es
add
mov
fwait
lea
ds
xchg
fmul
cmpsl
and
mov
jg
push
stos
aaa
leave
inc
subb
movsl
jmp
incl
imul
and
sbb
add
jno
sub
mov
or
add
les
sub
jne
stos
push
orb
push
jle
stos
fucomip
xchg
arpl
jne
mov
test
cmc
jg
xchg
lods
jl
loope
hlt
aaa
push
mov
adc
or
loope
and
insl
shll
call
mov
mov
mov
push
jg
mov
cmp
sahf
mov
adc
out
lea
out
mov
fdivr
incl
rcrl
or
push
insb
xor
orb
add
lcall
and
mov
int3
sbb
xor
and
aam
ljmp
jmp
mul
jg
and
jg
int3
out
lret
repnz
inc
je
adc
push
shrl
ret
call
call
leave
jmp
mov
imul
pop
inc
mov
push
arpl
push
dec
lods
ja
fisubrl
shll
out
pmaxsw
inc
enter
xchg
jecxz
pop
xor
mov
lcall
jl
mov
jmp
mov
addr16
jae
int
jl
sbbl
add
clc
cmp
repz
test
jb
add
jmp
icebp
mov
stc
lock
stc
and
ret
aaa
pop
inc
orb
clc
hlt
stc
add
ret
mov
inc
dec
cltd
push
inc
mov
divl
movb
sub
sbb
mov
dec
cld
decl
pop
xor
mov
popa
add
filds
rcl
sbb
call
jo
lock
enter
xor
cmp
aad
mov
insb
mov
xchg
mov
xchg
and
sbb
pop
clc
call
dec
dec
xorb
lods
aaa
jno
js
pop
mov
clc
sub
cmp
outsb
lds
jb
dec
sbb
ficoml
push
cmp
cmc
dec
out
pop
push
inc
mov
in
push
adc
or
in
stos
adc
xchg
incl
das
arpl
push
sub
lds
dec
fs
mov
jl
sbb
sub
nop
jg
stc
cmp
test
lds
rcll
xchg
xor
mov
add
sub
push
mov
mov
fistps
addb
dec
push
dec
sub
shrl
mov
sbb
loope
data16
xor
call
xchg
out
mov
loope
sub
cmpsb
sub
jmp
fcmovu
outsb
add
jp
cmp
movsl
jo
xchg
icebp
loope
sbb
adc
popf
leave
lahf
mov
in
movsl
dec
pop
add
in
pop
jg
xor
push
or
lods
and
in
gs
add
xor
clc
dec
dec
rcrl
add
rcrb
js
rorb
lahf
jno
jle
lds
or
cmp
lock
cwtl
adc
mov
sbbb
cmp
icebp
bound
pop
inc
or
jmp
clc
test
js
add
add
push
rcll
push
inc
mov
fadd
or
fwait
ljmp
jnp
xor
rorl
jl
fstpt
inc
jl
or
paddusb
and
cld
pop
add
cmp
aaa
xor
cmp
ret
sbb
iret
mov
pop
add
fldl
dec
pop
push
lods
or
aaa
sarl
scas
mov
sbb
or
pusha
add
je
fstpl
xor
mov
lahf
pop
mov
mov
add
pop
xchg
jo
jg
or
inc
sub
push
les
insb
insl
test
sub
sbb
shrl
xor
repz
loope
test
fcmovu
imul
mov
mov
mov
pop
add
xchg
out
pop
xlat
mov
hlt
pop
or
cmp
xchg
adc
fldenv
adc
push
filds
int3
or
push
mov
test
xor
adc
cmpsb
sbb
or
into
or
xchg
jb
fsubl
fsubs
jl
sbb
lock
add
push
loope
loope
lock
or
icebp
pop
inc
out
popa
ret
adc
test
jb
adc
adc
xchg
adc
fcmovu
inc
dec
hlt
add
adc
cmp
cld
and
jbe
mov
jp
in
mov
or
xchg
add
hlt
inc
sbb
lea
sbbb
pop
mov
mov
mov
mov
enter
cli
int3
shll
inc
lret
icebp
in
sub
fcmovne
cs
std
mov
cmp
loopne
xchg
or
xor
shlb
or
fsubl
test
and
movsb
sarb
xchg
sub
insb
fcmovbe
add
dec
add
jmp
ret
xor
or
ficoml
sbb
aam
ja
jle
add
imull
add
inc
add
dec
mov
add
test
jl,pn
and
addb
and
fs
loopne
sub
lret
mov
jecxz
xor
add
cli
xor
stc
nop
pushl
dec
cmpsl
fs
les
jbe
pop
movsl
dec
clc
enterw
mov
incl
les
daa
sbb
xchg
cli
dec
test
cltd
mov
fistpll
adc
jg
or
loopne
enter
fwait
cmp
pop
xchg
rorb
je
sar
mov
add
push
jbe
jbe
push
xchg
push
dec
cltd
loope
xchg
jae
rorb
xor
pop
inc
icebp
lcall
ljmp
call
mov
stc
shrb
or
fcmovbe
jnp
mull
inc
call
mov
in
pop
cmp
inc
mov
adc
mov
call
je
push
jle
fdivrp
cli
lods
fisubl
outsl
sahf
ret
pop
ds
xor
dec
incl
xchg
and
out
push
push
loope
jmp
mov
pusha
stc
not
push
ret
inc
push
ds
jno
outsl
inc
mov
dec
inc
jnp
sub
inc
push
sub
mov
pop
mov
cmp
jl
add
stc
mov
arpl
loop
roll
ljmp
push
jecxz
fwait
mov
xchg
push
pop
cmp
idiv
add
icebp
or
loopne
repz
xchg
mov
mov
rcr
arpl
std
pop
clc
rcll
xchg
xor
in
sbb
mov
sub
jg
incl
xchg
lcall
inc
mov
or
inc
imul
iret
jg
ljmp
cmc
lock
xor
lea
sub
xchg
inc
shrl
jp
lods
xor
or
stos
jo
pop
clc
fisubs
test
fdivrl
sbb
jnp
sarb
push
sti
fmull
aas
push
aaa
lods
cmp
or
push
and
stc
int
insb
or
jb
lea
pop
cld
clc
stos
rcl
int3
sbb
out
xor
cmc
mov
fs
mov
scas
sub
add
lock
mov
rcrl
adc
in
lods
sub
mov
jg
mov
mov
mov
mov
ja
mov
mov
aad
sar
add
jle
cmp
cld
orb
outsb
cmpsl
inc
xchg
jns
loopne
sbb
jbe
dec
jl
add
incl
repz
push
insb
loopne
es
rcrl
fsts
icebp
xor
or
pop
push
adc
pushl
pop
jb
sub
lea
iret
dec
mov
out
cmpxchg
arpl
xchg
cli
cmp
xchg
cs
mov
or
push
xor
xchg
or
add
jp
xchg
push
gs
dec
fnstsw
bound
ds
ljmp
daa
cmp
adc
stos
adc
daa
jno
xchg
push
sub
mov
fisttpl
cmp
xlat
jne
sbb
mov
lahf
adc
sahf
fwait
clc
shr
adc
mov
pop
or
add
popf
add
lods
pop
loop
clc
aaa
cli
pushl
fisttpll
dec
mov
xchg
mov
lcall
je
sub
insb
xchg
add
scas
pushf
inc
inc
xor
jns
in
movsl
aaa
aam
adc
stos
in
syscall
int
cmpsl
sbbb
cmpsb
pop
cld
pop
mov
cwtl
cwtl
jmp
xor
add
into
jge
pusha
mov
mov
fcmovnb
and
out
pop
mov
into
xchg
fisubl
jmp
les
mov
les
mov
jg
sub
dec
ljmp
repz
xchg
cs
jmp
and
ret
cmc
movsl
xor
or
lcall
push
mov
cmpsl
sbb
lret
push
push
sarl
or
call
xor
pop
popa
sbb
add
sbb
cli
mov
jb
decl
adc
ljmp
pop
mov
outsl
and
hlt
and
pop
enter
jb
lds
popf
mov
jg
clc
mov
aaa
xlat
nop
fwait
lcall
sti
test
mov
sbb
sub
out
and
jb
bound
sti
sarl
mov
dec
std
mov
mov
jecxz
jnp
push
arpl
xchg
mov
pop
rcr
in
push
sahf
mov
ret
jmp
std
inc
daa
xorl
jbe
jg
icebp
xor
push
and
arpl
mov
aaa
mov
decl
lcall
movsl
cmpsb
ja
pop
adc
xchg
cmp
push
mov
insb
dec
push
das
adc
out
xchg
and
das
je
dec
xchg
test
jecxz
push
test
inc
call
sbb
out
mov
cld
faddp
jno
and
stos
dec
fs
and
pop
pushl
inc
pop
in
enter
inc
dec
insb
push
fs
sbb
call
addr16
sub
rep
mov
leave
adc
sahf
dec
scas
hlt
jp
aas
cld
jbe
cmc
lcall
adc
sbb
jmp
and
shlb
loop
fnstcw
or
dec
and
pusha
ds
jne
icebp
pop
insb
cmpsb
mov
lea
int
and
imul
decl
dec
loopne
xor
incb
inc
aaa
pushf
mov
iret
test
push
decl
inc
push
pusha
aam
fwait
dec
in
fsub
stos
inc
dec
cmp
js
loope
cmpsl
lock
cmpsb
mov
aam
sbb
clc
sbb
in
push
repnz
aas
cmp
test
sub
push
inc
cmp
cmp
cmp
or
es
dec
jmp
int3
dec
xor
jb
xchg
xor
inc
das
aam
es
sub
cli
xor
sbb
mov
sub
jl
cmp
cmp
sub
mov
jmp
test
leave
jl
in
mov
ret
mov
mov
cmp
call
cmpsb
ljmp
ret
ror
lcall
out
out
arpl
sub
std
xchg
sbb
xchg
sbb
mov
pusha
sahf
insb
xchg
in
aad
test
mov
mov
jg
jmp
mov
mov
test
xor
cmp
aas
imul
jmp
xchg
ds
scas
ds
mov
mov
jno
and
roll
jg
sub
mov
adc
xor
rcrb
rcll
or
pushl
int3
dec
pop
push
mov
jl
out
dec
enter
push
incl
call
add
loopne
mov
xor
rcll
sbb
xchg
push
ljmp
imul
mov
test
jno
pop
add
fucomip
rol
lcall
cmp
add
mov
shrb
scas
sbb
sbb
push
cli
push
pop
pop
pop
cli
ljmp
cmp
mov
mov
lock
int3
cmp
adc
mov
jae
int3
push
xor
lcall
pop
push
out
lods
jl
shl
jae
jecxz
push
push
test
lods
lahf
inc
mov
jnp
fldt
cld
mov
mov
adc
shlb
push
out
cli
push
mov
pop
sbb
mov
sti
inc
aad
or
sub
mov
mov
into
in
sub
fwait
in
jle
fucomip
dec
icebp
pop
or
inc
pop
pop
inc
popf
fsubl
jle
sub
jmp
pop
mov
mov
in
ret
mov
pop
and
push
dec
pop
pop
test
fwait
mov
cmp
ljmp
push
push
and
mov
xchg
adc
popf
test
scas
inc
popf
cmpsb
popf
jg
imul
divl
xchg
aaa
mov
imull
mov
and
jg
lea
addr16
adc
mov
out
mov
call
cli
dec
push
sbb
mov
out
jg
and
xchg
lret
fadds
popl
pushl
pop
clc
jns
pushf
lret
jl
scas
dec
in
loope
sti
cs
lcall
and
fists
pop
cmpsl
jle
add
xchg
sub
dec
subb
int
push
fsubrp
mov
cmpsl
pop
or
xchg
lods
push
adc
jle
outsb
dec
adc
test
dec
mov
lea
push
xor
fiaddl
pop
and
fildl
addr16
rclb
shr
mov
cli
or
xor
sbb
add
sbb
inc
outsl
ret
int3
inc
rorb
arpl
push
aam
xchg
xor
std
add
sbb
fs
adc
add
cli
lcall
xor
inc
push
xor
in
sub
adc
xor
xor
xchg
mov
fst
or
scas
rorl
loope
jge
and
push
xlat
push
lret
or
sub
add
mov
mov
shlb
mov
movsb
inc
mov
dec
push
shlb
lcall
lret
jge
pop
pop
fldl
into
sbb
pusha
push
out
arpl
in
arpl
dec
insb
out
aad
rolw
cmp
and
pusha
js
pop
movsb
icebp
push
xor
pop
fadd
sub
fidivrs
mov
test
and
add
lods
mov
cli
loope
lods
fisubrs
xor
rcll
ds
mov
dec
stos
fstpl
mov
pushf
xor
cli
test
stc
mov
cltd
js
lahf
inc
pop
sub
test
add
sbb
mov
xchg
lcall
add
push
mov
fcmovbe
or
inc
pop
stc
xor
mov
push
xor
cmpb
out
sahf
adc
inc
test
push
pop
ja
es
and
fmul
es
std
incl
imul
jp
push
pop
jp
insb
fistpll
sbb
ljmp
hlt
lcall
add
out
icebp
adc
lea
outsb
arpl
les
lods
pop
cmp
pushw
pop
fidivs
lea
fbld
adc
es
test
mov
aaa
jne
cmp
lcall
fistl
aaa
mov
inc
dec
iret
jl
mov
shll
stos
cld
aaa
cmp
jg
insb
pusha
clc
sti
icebp
jg
cwtl
cmp
pushf
dec
mov
scas
das
hlt
decl
or
lcall
add
out
pop
push
push
jecxz
push
fsubr
push
xchg
loopne
mov
cmpsl
mov
xor
push
ficoms
enter
test
mov
imul
clc
mov
mov
pop
push
das
icebp
inc
jae
test
call
cmpsl
fdivr
ljmp
popf
xchg
inc
mov
cld
mov
xor
inc
fidivrl
stc
test
clc
and
adc
sar
jmp
xor
insl
fmull
fisttpl
or
lcall
jl
inc
push
and
imul
leave
sbb
fisubs
adc
popl
sub
add
lcall
mov
outsb
pop
sub
ljmp
add
jg
enter
and
enter
fldenv
mov
lock
rorb
test
push
lds
push
cmpl
sbb
sbb
xchg
lea
ljmp
sub
or
bound
fcoml
push
sub
cmc
jnp
cmc
mov
call
cli
mov
sub
sahf
mulb
cs
std
cmc
notl
lods
push
sar
call
out
stos
pusha
cmp
jne
jb
out
fimuls
xchg
cmp
mov
movsb
jecxz
cmp
cltd
sti
mov
ljmp
push
jo
aad
fwait
insl
cmc
lcall
sbb
adc
inc
decb
jb
cli
cltd
fidivs
aas
sarb
hlt
mov
cmc
call
mov
mov
sub
pop
mov
fmull
push
or
add
jecxz
out
jo
jnp
in
jg
fs
xor
pop
mov
outsb
push
scas
add
scas
mov
clc
mov
insb
sahf
inc
cmp
in
loop
pop
imul
pop
jbe
mov
arpl
mov
ljmp
cmc
pop
popw
subb
inc
and
lds
lock
ljmp
stos
scas
xor
pop
fs
xor
mov
iret
xor
nop
stos
jmp
mov
xchg
xorl
es
mov
in
adc
fcoml
jae
mov
lods
jmp
imul
fbstp
adc
and
ja
call
ljmp
hlt
jnp
add
fs
ljmp
rorb
arpl
repnz
out
incl
ljmp
xchg
popl
mov
in
push
mov
std
or
imul
jecxz
mov
shll
jg
cld
popf
add
xor
ljmp
ljmp
mov
repnz
arpl
pushl
into
pop
xchg
lret
mov
stos
add
je
push
repz
inc
xchg
je
jg
or
pop
ret
rcl
ret
pop
mov
push
cmpsl
jbe
mov
adc
aas
cmp
mov
push
adc
xchg
mov
fs
fs
adc
xchg
or
add
ljmp
mov
dec
icebp
and
out
cwtl
sub
test
mov
cltd
add
jbe
jl
aas
jmp
insl
sahf
jg
incl
popf
dec
dec
call
rol
xorl
cmp
jle
stos
push
call
cmp
out
xor
sub
push
out
scas
mov
mov
dec
xchg
js
jg
loop
std
jg
pushl
pusha
push
cmp
sub
mov
xor
outsb
lret
xchg
dec
dec
cld
decl
aam
inc
adc
pop
adc
push
decl
jp
mov
mov
jl
insl
sbb
and
add
sbb
jg
sub
ja
xor
loopne
ficompl
clc
dec
sbb
je
dec
rolb
icebp
mov
lcall
decb
mov
xor
xchg
jmp
xchg
mov
xchg
shlb
in
lcall
inc
push
rcll
popf
mov
xchg
pop
dec
jg
push
or
sarb
ficomps
repnz
ljmp
lock
pop
xor
insl
jl
push
aaa
ret
int3
fdivrs
fsts
out
lahf
in
mov
ret
mov
in
in
push
push
mov
leave
mov
mov
mov
mov
fsubr
xlat
sub
dec
inc
cmp
push
popf
les
inc
outsb
repnz
push
ja
mov
scas
fs
lcall
mov
dec
pop
inc
aam
xor
cmp
cli
cmp
out
inc
out
push
arpl
xchg
cmc
xor
inc
jnp
xchg
sub
jge
push
xchg
mov
lea
enter
jmp
mov
xor
pop
inc
pop
loope
sbb
lods
sbb
adc
fneni(8087
cwtl
sbb
pushl
dec
jno
or
adc
mov
and
incl
out
mov
out
cmpsb
addb
mov
test
outsl
decl
fwait
xchg
out
shrw
mov
and
scas
fildl
pop
mov
jg
xchg
cli
push
mov
js
lcall
xchg
push
data16
fldl
jg
fldenv
add
push
rcr
mov
mov
sub
loope
cld
lcall
mov
mov
pop
stos
xor
insl
xchg
popf
mov
and
xchg
out
jmp
pop
sub
sbb
jno
adc
dec
cld
mov
repnz
pop
test
sbb
sahf
xor
add
cltd
hlt
inc
inc
mov
daa
ss
in
cmc
lcall
sub
pop
clc
jmp
divb
addb
dec
movsl
addr16
in
shl
sbb
sub
mov
int
dec
push
fs
aad
mov
cs
add
ret
movsb
add
dec
daa
or
imul
inc
push
adc
orb
push
stos
daa
inc
iret
cmpsb
xchg
cmp
lods
icebp
hlt
in
fisttps
jg
sahf
shl
cmpsb
ret
mov
and
and
dec
pop
int
adc
iret
cmp
sub
pushl
mov
xchg
js
xchg
pop
xchg
pop
sub
xor
xor
mov
call
andb
pop
xchg
lret
push
test
pop
scas
push
inc
ljmp
xchg
sbb
test
or
fidivrl
sti
or
pop
loopne
cmp
dec
addr16
orl
xchg
xor
pop
cs
mov
push
sti
sub
lods
lock
xor
adc
inc
xchg
adc
inc
fucomi
fadd
mov
pushf
push
fcmove
sub
xchg
pop
pushf
mov
lahf
sbb
daa
aam
pushl
mov
sub
cli
cmpsb
sbb
inc
dec
adc
adc
push
sub
icebp
jnp
ret
cmp
mov
jmp
incl
xor
loope
loop
cltd
es
add
sti
je
fwait
dec
les
movsl
incl
pop
movsb
das
js
mov
jg
test
cmp
rorb
adc
dec
bound
rolb
push
fs
inc
out
pop
mov
ds
fsubrp
in
adc
dec
inc
jg
cmc
ljmp
cmpsl
push
mov
into
ja
mov
sub
call
call
out
or
xchg
and
or
fld
pop
xor
jl
cwtl
bound
incl
sbb
stos
std
incl
out
mov
insl
adc
ljmp
or
imul
rcll
clc
and
cld
sbb
mov
pop
mov
sbb
xchg
jbe
or
subl
mov
mov
inc
lahf
pop
les
jp
fcmovu
xor
decl
push
mov
cs
xor
test
aam
dec
fisttpl
lock
iret
mov
xor
lea
ljmp
cmp
ret
and
rorb
jp
xor
mov
push
popf
sub
mov
mov
xchg
movsb
adc
push
lea
xchg
cli
pushl
mov
cmpsb
popa
push
jp
and
cmp
add
out
ficomps
mov
mov
incl
cmp
fisubs
rcrb
inc
popf
mov
out
push
mov
sub
push
movsb
inc
icebp
add
aad
sbb
clc
mov
sbb
jbe
pop
stos
insl
and
cmp
ret
mov
lock
and
ljmp
mov
lahf
xor
fmull
mov
and
into
sbb
sub
sbb
incl
ret
and
or
jl
clc
dec
push
neg
ret
lods
das
add
test
in
mov
incl
cltd
dec
dec
dec
aaa
xor
adc
xchg
sbb
arpl
pop
dec
stc
mov
mov
loopne
jmp
jmp
mov
and
movsb
rcrl
xor
push
mov
fcmovnbe
dec
add
xlat
aam
adc
bound
push
into
cmp
cmp
adc
add
lcall
fimuls
popa
ja
ds
add
xchg
out
sbb
push
mov
mov
fstpt
sarl
push
leave
outsl
mov
jo
mov
sub
pop
push
mov
mov
push
out
bt
inc
mov
adc
xchg
jp
shll
cmp
fiaddl
pop
add
adc
es
gs
mov
add
or
test
iret
add
sbb
or
out
pop
inc
icebp
aad
mov
mov
and
lahf
sbb
ds
orl
ret
cli
or
or
sub
push
adc
xchg
xor
pop
dec
roll
adc
xor
test
xchg
inc
xchg
push
mov
inc
shr
adc
mov
add
stos
dec
std
stc
stc
scas
add
cmp
mov
outsl
scas
loop
pop
pushf
lock
pop
data16
shl
shrl
mov
out
cmp
cmp
or
mov
sub
inc
and
test
scas
enter
fisubs
push
mov
and
bound
fldenv
test
pop
pop
xor
insb
push
push
mov
loop
faddl
int
fbstp
and
jo
xchg
pop
enter
mov
and
push
mov
cmpsb
inc
fnstsw
pushl
or
das
lea
insl
repnz
aad
jl
fxch
fdivr
popf
xchg
pop
aam
cmp
dec
scas
inc
outsb
mov
stos
cs
pop
mov
push
cmp
fwait
jmp
mov
repz
ret
mov
cmc
testl
jb
push
ss
sbb
daa
or
push
data16
pop
adc
pop
cld
mov
xchg
clc
insl
add
movsl
push
push
push
push
pushf
out
dec
loope
in
mov
jmp
inc
mov
inc
enter
stos
mov
sub
das
hlt
out
cmpsb
incb
bound
imul
xchg
sbbb
pushl
movsl
add
ret
cmp
cmp
xor
mov
aam
mov
jp
push
fmul
jmp
iret
xchg
push
cli
clc
cld
in
mov
mov
jmp
xchg
or
mov
dec
lret
out
fdivrl
jge
mov
ljmp
jbe
mov
push
mov
jp
lea
icebp
push
mov
pop
std
rcrb
int3
lock
cmp
and
inc
jae
int
mov
mov
dec
insl
ljmp
pop
frstpm(287
loopne
sbb
ja
mov
in
aad
adc
jecxz
mov
lret
jle
out
inc
sub
adcb
ja
iretw
xchg
push
cmp
push
lock
ljmp
and
fiadds
or
sub
mov
or
ljmp
inc
add
sub
into
pop
nop
mov
or
xor
fnstcw
jecxz
adc
xlat
cmp
lcall
pop
sub
pop
push
aas
enter
dec
pop
loop
std
fcompl
xor
xor
mov
cmpl
repnz
insl
sbb
sub
decl
sub
ds
mov
insl
jns
and
sbb
stc
outsl
sub
out
in
jge
pop
les
mov
repz
in
xchg
test
cmp
out
lods
pop
xor
std
sub
xchg
mov
repnz
test
fidivrs
pop
inc
mov
pop
sub
cmp
call
clc
push
push
in
cld
sahf
out
push
data16
push
sub
inc
out
andb
sti
int
lcall
mov
adc
push
in
mov
xor
mov
test
dec
inc
call
cs
xchg
pop
xchg
in
jp
and
cmp
out
pop
loop
inc
mov
inc
push
cmpsb
or
inc
cmp
leave
aaa
fimuls
out
decl
sub
stc
and
cli
outsb
imul
sub
pushl
jb
push
rorl
in
push
lock
ljmp
inc
or
adc
call
jmp
fs
cmp
sbb
andl
sti
ljmp
icebp
xor
xchg
in
mov
int3
leave
rolb
out
jg
scas
lods
pop
andl
pop
inc
in
pop
push
cmp
hlt
in
ljmp
cmc
fildll
cmp
push
rcll
xchg
mov
sub
ljmp
loop
add
mov
adc
enter
dec
ljmp
xchg
or
cli
dec
and
or
xchg
dec
lods
jecxz
ljmp
mov
xchg
push
cmp
movsb
imul
cmp
or
loope
ljmp
icebp
or
inc
insl
lea
push
mov
fsubrp
sub
cmp
cli
lcall
scas
jno
nop
das
orl
imul
aaa
lcall
das
rorl
mov
sar
push
mov
jmp
test
jbe
dec
scas
shlb
jnp
xor
fucomip
jae
dec
dec
aam
mov
jge
jmp
test
inc
inc
jbe
jns
pusha
xchg
mov
sub
dec
adc
or
or
xor
mov
sub
into
xor
jmp
pop
popf
test
loope
adc
sbb
jmp
or
clc
cmpsl
jmp
call
inc
mov
dec
mov
adc
and
clc
decl
sbb
popf
movsl
scas
jp
sbb
mov
daa
add
incl
out
cmp
inc
xlat
sub
inc
ds
int
pop
cmp
scas
and
das
ficoms
adc
xchg
sbb
js
xor
pop
scas
jbe
rol
call
test
gs
test
pop
mov
out
lret
arpl
fdivr
je
ja
mov
stos
lcall
inc
das
dec
sub
addr16
cltd
pushf
rcrl
inc
js
cwtl
into
push
cli
out
out
lea
push
stos
sbb
aam
ds
outsb
addr16
fnstenv
mov
into
lcall
pop
sahf
pop
fwait
lret
stc
sbb
push
iret
and
into
sub
das
add
dec
inc
mov
in
rorb
inc
neg
xor
mov
in
es
jg
fadds
add
push
rcl
lret
mov
daa
push
inc
jmp
mov
push
imul
insl
cld
idiv
call
lods
mov
dec
aas
mov
pop
inc
mov
das
mov
popf
pop
add
mov
add
lahf
hlt
jmp
xlat
push
and
int
pop
pop
loop
loopne
negl
jno
out
cli
pop
popf
in
out
add
cmpsb
shl
das
cld
fists
mov
mov
daa
mov
stc
push
fwait
aad
cmc
mov
adcb
mov
stos
mov
pop
daa
test
in
mov
test
or
push
jae
aad
ljmp
fwait
inc
push
sar
push
popf
fs
push
push
xor
sbb
mov
xchg
mov
orl
jge
inc
movsl
dec
nop
orb
sar
incl
mov
inc
lret
push
mov
out
sub
call
or
push
push
pushf
mov
lea
dec
mov
fidivrs
icebp
sti
jmp
icebp
sbb
dec
sbb
xchg
inc
inc
adc
rcrl
out
ret
lods
adc
sub
and
outsl
lock
incl
inc
xchg
loopne
loopne
cs
adcb
in
ret
pop
mov
hlt
incl
idiv
mov
rolb
xchg
out
sub
jmp
jb
cld
daa
mov
in
icebp
or
jb
test
jl
pusha
int3
fucom
call
sub
subl
ljmp
in
push
mov
sub
clc
into
lods
pop
hlt
lahf
sub
incl
lods
mov
xor
mov
dec
pop
push
dec
shlb
incl
inc
divl
das
add
pusha
pop
cmpsl
loop
leave
call
sarl
sbb
mov
dec
inc
iret
mov
mov
sbb
test
mov
push
scas
pop
jnp
jmp
or
pop
call
adc
xor
xor
shlb
lds
or
push
sbb
adc
jmp
push
xor
jecxz
or
xorb
cltd
lret
outsl
std
pop
clc
jo
cmc
mov
enter
xchg
in
loop
or
ljmp
fcmovb
jecxz
push
lahf
cmp
adc
mov
jb
inc
sbb
jmp
decl
mov
push
pop
hlt
adc
jmp
adc
lret
jg
fistpll
inc
aam
ss
mov
mov
cmp
mov
sahf
inc
add
mov
cmp
imul
jge
xlat
ret
cld
movl
pusha
std
pusha
scas
sbb
cli
aaa
fisubrs
ljmp
repnz
stc
int3
in
arpl
mov
sbb
int
mov
dec
lea
lock
stos
and
sub
push
xchg
push
js
push
xchg
cmpsl
mov
out
pop
sub
inc
stos
cmp
or
jns
add
pop
cmp
pushl
xor
call
ret
rorl
dec
mov
mov
pop
mov
mov
or
mov
loopne
inc
ret
cli
lcall
push
jmp
mov
out
add
shrb
mov
pop
popf
inc
aaa
in
mov
mov
or
pop
loope
imul
mov
out
dec
je
incb
lret
mov
jbe
sub
test
test
cmp
cmpb
add
sub
mov
cmp
dec
mov
into
fbld
jnp
dec
decl
push
mov
je
xchg
xchg
cltd
shl
ret
aad
sahf
ljmp
cmpsb
fstpt
or
push
stc
sbb
cmp
leave
push
ret
fistl
jbe
test
xchg
jb
fdivr
jmp
dec
push
dec
mov
cmp
decl
mov
push
push
stc
aaa
popf
nop
sahf
inc
cmp
push
repz
sbbb
mov
cli
clc
roll
ja
in
shrb
enter
loope
dec
jae
data16
call
je
push
mov
stc
fcmovnb
pop
jge
in
pop
lahf
and
mov
lcall
jb
inc
cmpsl
in
and
mov
dec
aad
jp
fcomip
add
nop
jmp
test
pushl
cwtl
xorl
lret
mov
movsb
pop
cmp
fsts
push
jno
imul
pop
sub
shll
jne
les
pushl
jb
dec
cmpsb
push
insb
sarl
mov
xchg
fstl
cmpl
outsb
into
rolb
or
jg
mov
repz
testl
or
test
ljmp
arpl
jb
xchg
gs
imul
add
loop
aad
pop
jg
stos
pop
mov
xchg
icebp
add
xchg
jno
push
ljmp
jmp
mov
jae
adc
test
lods
mov
aam
xor
incl
and
dec
sub
aam
dec
mov
add
test
roll
add
inc
lcall
adc
or
fiadds
mov
leave
aam
jle
js
pop
popa
or
test
pop
mov
or
sbb
pop
popf
push
xchg
inc
ljmp
bound
fwait
inc
jo
stc
and
mov
movsb
inc
loopne
sub
jne
fbstp
and
stos
inc
cmp
test
xchg
push
sub
sub
scas
aad
or
sbb
mov
pop
ljmp
xor
xchg
pop
aam
fiadds
fdivrp
repz
aam
mov
loopne
add
push
test
or
adc
mov
repnz
adc
aad
aad
adc
dec
movsl
aam
cli
in
pop
add
sub
cli
dec
rorl
adcb
testb
inc
inc
or
sti
mov
out
push
adc
mov
mov
mov
push
jge
cmp
mov
movsb
push
vsqrtsd
into
clc
pop
call
je
add
test
sub
push
and
iret
or
push
dec
js
ljmp
sti
mov
loopne
and
add
addb
fdivr
decb
lcall
sbb
push
addb
addb
adc
mov
xchg
and
or
push
ljmp
loopne
rorl
xchg
inc
jo
or
test
test
adc
mov
mov
or
dec
mov
lds
testb
jbe
lret
test
insl
or
shl
jo
dec
cld
fucomip
adc
je
neg
cmpsl
xchg
xchg
and
popf
pop
sub
pop
or
roll
outsl
or
adc
mov
or
out
jmp
popf
setne
lock
fisubs
es
imul
mov
movl
jp
xor
lods
mov
or
cmp
dec
cmp
sbb
test
dec
ljmp
cld
mov
adcb
dec
adc
jo
repz
dec
mov
pop
aaa
clc
xchg
pushf
or
lcall
pop
enter
sbbb
mov
dec
sti
es
jmp
in
push
movsl
incl
lds
sbb
push
sbb
lock
sbb
mov
push
mov
or
push
sub
inc
mov
fnstcw
jne
lds
ds
lcall
test
push
jo
adcl
xor
enter
movsb
daa
stc
pushl
ret
rorl
push
sbbl
push
fnstcw
clc
ljmp
cmc
clc
ja
pop
and
and
std
and
and
pop
hlt
cmc
insl
inc
pop
sub
adc
mov
inc
xor
pushl
sbb
pop
or
push
jmp
repnz
add
inc
stos
mov
nop
mov
out
int
mov
jp
jae
push
ret
call
sbb
test
test
or
clc
cwtl
out
xchg
pushf
mov
ficomps
call
push
dec
xchg
cld
adc
xchg
cwtl
xchg
sub
aaa
mov
and
ljmp
lock
rolb
lock
mov
jmp
out
push
adc
test
xor
cmp
xor
pop
sub
xor
push
jae
int
push
movsl
insl
jle
fnstenv
jg
jmp
xor
sahf
rcrb
lods
push
outsb
test
mov
shrb
aaa
sub
ljmp
in
test
cwtl
push
mov
xor
mov
sub
inc
enter
lcall
loope
adc
dec
subb
daa
xchg
aam
xor
mov
in
push
add
dec
inc
push
rorl
ret
mov
or
cmp
or
mov
ret
or
inc
fsubrl
jecxz
sbb
mov
xchg
hlt
inc
jl
lods
or
pop
inc
sub
inc
xor
adc
aaa
rclb
mov
mov
push
call
fdivl
stos
out
sub
add
add
pop
and
mov
and
and
xor
adc
hlt
adc
add
leave
xchg
mov
fidivrl
or
sarb
aas
mov
mov
mov
pop
hlt
and
mov
inc
inc
jmp
or
shll
adc
imul
dec
mov
cld
pop
ret
int3
int
push
xchg
loop
fcom
fs
xor
scas
mov
push
inc
cmp
mov
pushf
adc
daa
or
sbb
and
mov
mov
sub
rol
mov
sbb
push
adc
daa
ljmp
repz
pop
testb
inc
and
and
test
xchg
push
mov
adc
mov
cwtl
mov
mov
jl
inc
inc
pushf
add
cmp
mov
mov
daa
add
or
dec
cwtl
inc
jne
or
addl
sub
sub
pusha
jge
sbb
int
fsubrp
js
ret
adc
push
sub
pop
lret
add
adc
inc
int3
ss
cmp
inc
mov
adc
add
inc
idivl
or
ret
dec
xor
lods
sub
push
fcomp
add
add
clc
push
call
adc
pop
fcomi
sbb
cmpl
shll
not
dec
push
les
icebp
or
fistpl
repnz
adc
mov
dec
adc
sbb
or
sti
add
xchg
into
fsubl
sarl
lods
ljmp
pop
add
mov
jns
ds
xchg
cs
aam
sti
pop
repnz
or
aad
enter
out
lcall
bound
ret
sub
sbb
lea
je
sub
incl
loop
aam
cmp
push
dec
sbb
sub
shlb
xchg
mov
sbb
popf
mov
xchg
sbb
and
addr16
jg
stos
mov
je,pt
jbe
sub
shrb
or
inc
dec
fwait
or
ret
inc
lahf
mov
clc
xor
cmp
or
inc
push
mov
loopne
pushl
and
stc
add
test
adc
add
push
mov
imul
jmp
jmp
pop
js
out
bswap
mov
test
or
or
pushf
repz
push
in
inc
mov
popf
jnp
jne
cmp
aam
xor
xor
lods
mov
cmpsl
gs
dec
shrl
xbegin
lods
or
andb
popa
loopne
fcomp
add
jne
call
mov
idiv
dec
fsubl
push
jnp
add
addr16
jle
aas
int
or
aam
lret
fdivr
pushl
out
lds
cmc
dec
mov
mov
mov
mov
adc
sub
fdivrs
inc
xchg
xchg
insb
shl
mov
decl
lcall
mov
cmp
int3
jo
sarl
jo
xor
jmp
or
sub
pop
movsl
in
xchg
mov
xor
push
jp
leave
ret
pop
lods
orb
andb
inc
sub
xlat
enter
sbb
lock
mov
and
xchg
jns
jg
ret
inc
pop
incl
aas
mov
jmp
push
sbb
or
inc
jno
cli
dec
mov
dec
ljmp
lock
push
ret
in
int
dec
dec
inc
imul
cmp
int3
xor
sar
or
cmpsb
inc
in
jbe
outsl
cwtl
xchg
icebp
rcll
inc
mov
or
adc
decl
ljmp
addr16
shlb
xor
int3
dec
popf
push
inc
push
jp
sahf
pop
push
mov
push
std
mov
icebp
jo
xor
test
iret
xchg
loop
fbstp
and
mov
dec
lcall
cmp
sbb
pop
pop
sbb
mov
mov
cli
lcall
pusha
lea
mov
dec
ds
pop
mov
sbb
jl
cmp
movsl
call
into
cmp
jg
jmp
mov
call
jmp
dec
cli
arpl
inc
dec
call
dec
inc
or
je
scas
push
cs
aad
jns
mov
pop
xor
fstps
jp
aaa
mov
adc
fs
test
push
mov
mov
sbb
pop
jmp
xor
incl
call
scas
mov
xlat
ficompl
jb
jo
notb
loopne
or
lcall
inc
xchg
out
fdivrl
inc
test
and
jbe
movsl
or
int3
jno
in
jne
cmp
movsb
test
push
pop
ds
jecxz
cmp
out
scas
vpmacswd
sar
adc
lock
mov
mov
imul
shrl
add
push
leave
loop
push
lcallw
lock
out
and
insb
xchg
jae
pop
std
in
ret
jns
sub
xchg
decl
pop
push
clc
sub
cltd
push
clc
mov
pop
and
call
addr16
mov
je
into
or
and
ljmp
insb
mov
lock
jmp
jge
jno
stc
or
add
jae
movsl
add
faddp
ds
mov
push
mov
ja
inc
xor
jl
scas
adc
cmc
lcall
repz
aad
and
mov
push
mov
jl
pop
test
repnz
dec
mov
mov
mov
dec
add
in
arpl
xor
pop
fbstp
xchg
nop
xchg
iret
lcall
xchg
dec
dec
shr
cmp
insb
ret
lods
xor
je
adc
ljmp
xchg
lds
jnp
aas
and
rcll
cmpsl
rcll
inc
mov
rolb
sbb
mov
cld
jmp
test
mov
pushf
mov
add
cmc
testb
adcb
ljmp
dec
mov
mov
xchg
pop
into
dec
cmpsl
rol
pop
leave
mov
incl
into
sub
les
aad
xor
sbb
decb
lcall
pushl
or
in
pop
cmp
sbb
out
jle
pop
aas
unpcklps
gs
push
call
lds
mov
movsb
shlb
adc
decl
push
nop
jne
subl
cmp
dec
jno
aaa
aas
mov
and
mov
movsl
lcall
and
icebp
dec
cmp
daa
mov
insl
xchg
shl
iret
stos
lds
lcall
cltd
mov
stos
pop
adc
sub
adc
daa
and
stc
lods
mov
cmpsl
or
xor
or
mov
iret
movsb
xchg
lods
add
shrl
popf
and
and
insb
aas
add
jg
incl
xor
ljmp
data16
les
pop
mov
jmp
cmp
lds
dec
jp
repnz
jno
xchg
inc
xchg
lahf
xor
adc
xchg
clc
daa
in
or
push
iret
mov
push
cmp
sarl
fsts
out
fstpt
decl
adcb
ret
inc
adc
dec
mov
les
loopne
and
aaa
scas
dec
imul
das
cld
lcall
and
ret
sbb
inc
sub
imul
or
xchg
mov
into
push
fisubrs
xchg
daa
add
mov
insl
in
in
popf
pop
and
stos
push
fcmove
adc
sub
hlt
fwait
lds
xchg
jbe
cmp
jp
call
clc
ret
call
push
je
mov
lock
adcl
pop
mov
in
and
lcall
lods
push
jp
jmp
push
or
mov
lahf
dec
in
xchg
xor
add
data16
out
int
push
cmpl
xor
dec
ljmp
and
jmp
sbb
hlt
ret
xor
jmp
add
into
and
lahf
insb
add
inc
enter
lock
ds
loope
jp
jbe
into
cmp
loopne
mov
mov
sahf
jbe
loope
lret
sbb
ljmp
push
and
mov
dec
inc
dec
mov
adc
sti
sbb
or
les
pop
bound
fs
xchg
jg
adc
xor
fsubr
ret
push
push
out
in
mov
and
push
outsl
std
push
xor
cmp
mov
enter
push
push
pop
imul
stos
and
push
push
test
aad
sbb
push
cmpb
dec
fwait
pop
jbe
sti
jmp
rcrl
jp
aas
es
mov
or
inc
add
xor
std
mov
jmp
dec
ret
fidivrl
das
lret
call
scas
xchg
movsb
dec
fdivp
nop
lcall
xor
iret
into
pop
cmpsb
sbb
mov
scas
cwtl
fsubrl
fisubs
pop
xchg
iret
lcall
push
inc
mov
mov
in
jnp
out
jp
xchg
pusha
xchg
push
fucom
dec
ret
sub
lods
fldt
enter
lds
jns
inc
pop
cmp
repnz
ljmp
cwtl
inc
dec
and
test
sbb
add
mov
mov
fxch
in
arpl
sarb
add
jg
fwait
rcl
shr
cmp
pop
aaa
fwait
inc
mov
stc
cmp
lahf
call
aad
xchg
mov
cmp
adcl
loope
sub
cmpsl
call
clc
push
cmp
fs
pop
or
sbb
fiadds
and
shlb
push
incl
sbb
dec
push
in
sub
int3
lock
pop
sub
adc
jge
and
push
mov
or
lods
mov
rdmsr
repnz
ja
mov
mov
mov
decl
insb
fistps
lods
mov
cmpl
aaa
xchg
and
jg
pop
push
out
int
push
andb
dec
sub
std
mov
mov
popa
scas
jbe
adc
push
mov
sbb
mov
test
add
pop
jo
sbb
xchg
out
add
adc
dec
cld
adc
sbb
push
push
in
xchg
mov
aad
xchg
mov
mov
cli
shl
movsl
sub
shlb
nop
adc
and
nop
cli
psrad
jg
cli
js
jb
int
lahf
jne
pop
jmp
add
lea
repnz
xchg
test
push
pusha
and
mov
clc
pushl
sbb
stos
pushf
lds
xor
xchg
sub
jo
jg
cmp
call
scas
inc
mov
mov
xor
cmpsl
inc
es
dec
das
pop
aam
stos
xorb
decl
ljmp
in
nop
inc
mov
mov
gs
imul
dec
call
clc
loopne
jno
cld
insb
inc
mov
pusha
push
loope
adc
jp
jno
push
pop
fildl
icebp
dec
ret
dec
jge
inc
out
fimull
incl
and
jae
pop
ficomps
inc
pop
outsl
and
inc
dec
jo
daa
out
call
mov
sub
inc
scas
push
jecxz
pop
lret
pop
aaa
jg
ret
ret
ljmp
and
sub
mov
and
push
lods
jg
mov
incl
ljmp
iret
imul
cmp
mov
loope
cmp
aad
aad
pushl
push
sbb
mov
cmpsl
mov
and
and
leave
pop
ret
imul
inc
pop
mov
push
mov
inc
and
enter
fildl
fldenv
ret
shll
adc
fwait
adc
add
enter
cld
adc
ljmp
stc
push
sub
arpl
sub
insb
mov
mov
sbb
int3
lret
stc
or
shl
lahf
fs
add
sarl
ss
lcall
test
mov
jg
mov
xor
cmp
add
xchg
mov
jno
test
pushl
push
sbb
ficoml
mov
loopne
pop
pop
shr
lods
dec
pop
adc
outsl
jnp
decl
cmpsb
pusha
cld
mov
xchg
ficoms
mov
mov
push
enter
aaa
inc
inc
loopne
mov
jmp
inc
or
arpl
in
cld
hlt
aad
leave
or
cs
lahf
mov
call
push
pop
neg
negl
mov
mov
mov
push
pop
jecxz
out
scas
add
inc
and
in
or
lods
lret
mov
pop
sbb
pop
stc
in
testl
fnop
cli
in
mov
rorb
jg
insl
cmc
sbb
es
add
data16
mov
aaa
out
test
xor
ja
cmc
icebp
iret
icebp
das
mov
jae
push
sbb
mov
mov
loope
incl
hlt
lret
rorb
fldt
out
sbb
test
clc
in
push
pop
pop
lds
cmpsb
sub
push
push
push
loopne
mov
gs
sbb
addl
ja
push
outsl
lock
aaa
into
dec
in
testb
incl
shrl
add
sbb
jo
jbe
fstpt
out
and
fnstcw
das
cld
das
cmc
push
mov
pusha
fwait
fwait
and
stos
jl
mov
mov
mov
cli
jmp
mov
clc
pusha
mov
push
fistpll
fstps
push
ja
fstpt
mov
leave
in
mov
fs
cmp
mov
pop
cwtl
pop
cmp
mov
add
sbb
sbb
push
fildll
es
rcrb
cmpsb
xchg
ljmp
inc
cmp
sub
jo
mov
mov
out
into
stc
in
stc
notb
pushl
fdivs
push
mov
adc
push
lret
push
hlt
adc
push
push
mov
stos
adc
inc
shl
aas
jae
xchg
cmp
incl
jae
test
and
or
and
push
mov
dec
jnp
jl
lds
jb
incl
cmp
testl
dec
imul
push
and
ret
add
ja
push
xchg
aad
inc
decl
fdivrl
mov
xor
mov
jp
scas
adc
pop
and
decl
cmpsb
inc
cmp
push
ljmp
mov
jbe
sub
rorb
test
jge
inc
mov
ret
xchg
ficoms
bound
fdivrl
fwait
push
repnz
into
sub
jp
jne
sahf
pop
addl
outsl
push
data16
pop
pop
aaa
cli
outsl
icebp
sbbb
mov
sbb
popa
xchg
mov
rorb
loopne
mov
pop
aam
lods
dec
sbb
add
decl
and
loopne
jne
sbb
jbe
jmp
bound
ret
cmpsl
in
lods
vmovsldup
nop
mov
or
pop
mov
stos
sub
xor
sbb
call
pushf
lock
das
ror
fwait
lock
or
mov
movsl
ret
cmp
fimuls
das
lock
push
mov
inc
imul
dec
movsl
ja
pop
jg
cmp
adc
stos
mov
xor
int
fadds
fsin
test
jmp
out
nop
xchg
fstl
xchg
push
add
inc
pop
jg
mov
or
push
incl
mov
ds
jg
jbe
dec
adc
lcall
pop
int
pop
stos
fs
out
and
ret
pop
arpl
xor
jne
jg
sti
inc
jb
inc
test
mov
movsl
push
mov
fucomip
incl
push
or
adc
inc
jns
jg
xor
hlt
mov
xor
sub
cmp
mov
dec
mov
mov
aas
outsl
cld
ljmp
lahf
roll
sbbb
popf
jecxz
imul
test
cs
ja
lds
dec
add
aas
xchg
adc
out
jne
dec
ja
data16
push
cmp
sbb
lods
sub
ret
test
mov
mov
sahf
mov
push
cmpsl
cld
adc
inc
xor
lret
sbbb
aad
jbe
sbb
adc
clc
js
push
pushl
cmpsl
adc
andb
je
leave
je
inc
imul
jmp
pop
cmp
repz
xor
jns
das
add
sbb
fdivrl
adcl
push
push
lcall
pop
sbb
mov
shll
inc
rcrl
in
icebp
mov
or
inc
repnz
push
stos
pop
lea
decl
das
dec
ss
in
in
fisttpll
sub
neg
loopne
call
jp
lret
xchg
sub
movsl
sub
sub
pop
sti
lock
add
jg
int
popf
mov
arpl
cld
push
xchg
pop
lea
data16
adc
cmp
outsb
out
fsubrl
xor
aad
inc
cmp
sbb
mov
sub
inc
and
outsb
adc
das
and
mov
push
jbe
fisttps
imul
and
rorl
call
clc
int3
push
daa
idiv
inc
xchg
fdivrs
pop
mov
add
int3
iret
stos
data16
iret
test
or
cmp
mov
sbb
fwait
adc
adc
aam
call
mov
icebp
daa
jb
pusha
scas
mov
insb
xchg
mov
mov
inc
popl
adc
cmpsb
or
sbb
xchg
mov
or
jnp
cmp
mov
lret
loope
cmp
or
jae
or
imul
cld
mov
inc
mov
cwtl
and
loopne
pop
mov
scas
dec
add
xchg
test
imul
cltd
sub
sub
mov
add
in
les
sub
cmp
add
popf
mov
shlb
mov
loopne
insb
sub
cmp
stc
sbb
outsl
jns
jecxz
dec
mov
or
mov
add
fs
imul
das
sub
adc
clc
push
or
fiadds
inc
into
push
mov
fldcw
add
inc
nop
xorb
int
cld
hlt
xor
cmp
sub
xor
mov
fcoms
lods
inc
or
mov
or
pop
call
fdivs
inc
mov
not
loopne
add
mov
sub
mov
mov
es
cmp
cmp
out
aam
or
lret
es
mov
or
xchg
sub
sbb
jg
sbb
out
and
rorl
push
mov
jo
sbb
adc
xchg
push
cli
sub
adc
mov
sub
pushf
icebp
jecxz
mov
fcomps
imul
inc
push
ss
mov
dec
sub
and
xchg
bound
cmc
fcmovnu
insb
and
add
out
out
test
jp
sub
add
loop
add
push
push
xchg
sbb
inc
test
mov
mov
inc
add
jnp
in
ficoml
outsb
xor
lret
loopne
ljmp
push
jg
lods
ret
test
jp
nop
fcmovu
sar
loopne
rorb
mov
loopne
push
fstl
stc
lods
add
or
aas
and
add
or
subl
inc
fcmove
mov
push
jmp
fwait
stc
dec
add
add
push
xor
rorl
push
pop
pop
dec
add
push
add
std
pusha
cmp
mov
divl
imul
jae
call
jnp
sbb
pop
cmc
adc
xor
sbb
clc
aad
and
push
mov
fbld
jecxz
loopne
incl
in
jmp
push
loopne
call
dec
xchg
push
cmp
rol
fmuls
pop
cltd
insb
xor
filds
xchg
dec
sbb
pop
fdivp
icebp
dec
stc
xor
mov
flds
lock
ljmp
mov
push
fsubrs
cmp
lret
in
call
lret
ljmp
xor
push
sub
jae
xlat
adc
mov
loopne
xchg
ds
mov
aad
loop
jns
fisubs
fs
push
jg
sar
or
mov
pop
xchg
lret
push
daa
dec
adc
test
call
sbb
fs
push
cmp
pop
icebp
hlt
jb
insl
ljmp
enter
adc
mov
insl
cmpsl
ja
imul
fisttpll
mov
pop
rol
decl
dec
test
xchg
pop
sub
push
and
test
xchg
out
mov
pop
xchg
in
in
outsl
std
cmp
mov
iret
fiadds
lods
clc
insb
adc
test
mov
sbb
mov
dec
mov
sbb
mov
and
outsl
ljmp
jne
in
ja
bound
xchg
aad
mov
adc
mov
scas
ja
aaa
mov
push
pop
clc
mov
dec
insb
movsl
xorl
stc
out
xlat
inc
sahf
stos
xor
pop
mov
out
jae
sub
pop
fucomi
sub
out
mov
jae
repnz
dec
xor
ljmp
imul
loope
push
sbb
stc
lahf
pop
call
pop
test
int
aam
mov
push
jo
sbb
repz
xchg
pop
clc
jns
xchg
inc
out
stos
jne
add
or
fnstsw
cld
push
xchg
lcall
xor
sbb
mov
loop
jle
add
rcl
in
xchg
ljmp
pop
xor
cmp
fs
out
cmp
loopne
or
sbbl
in
test
data16
mov
into
push
mov
pop
adc
mov
pushl
pop
xor
cmpxchg
iret
xchg
dec
mov
data16
int3
dec
pushl
mov
push
mov
mov
dec
clc
jl
pop
test
push
pop
in
mov
mov
iret
dec
dec
xchg
jno
sbb
mov
mov
mulb
fisubrl
dec
dec
mov
xor
xchg
cmp
roll
mov
pushl
mov
xor
outsb
push
mov
dec
jbe
jno
xchg
rorl
in
xchg
push
xor
fld
insb
fcom
fucomip
jg
cmp
push
dec
pusha
std
mov
mul
cld
push
jge
fidivrs
mov
icebp
add
clc
icebp
outsb
or
adc
xor
lcall
daa
mov
dec
sub
cmp
aad
movsb
aad
loope
stc
insb
imul
xchg
std
test
adc
fisttpl
push
addb
popa
sub
inc
fcmovbe
or
jg
push
xchg
push
adc
adc
jae
cmc
mov
dec
pop
ret
mov
or
pop
sbb
xchg
out
cmpsb
add
ds
or
jo
jo
loope
mov
push
dec
int
stos
mov
aam
lcall
shll
xor
cltd
aad
nop
in
sub
add
inc
call
call
int
cwtl
mov
adc
sub
idiv
lcall
out
stc
dec
push
ja
sarl
sbb
inc
mov
jl
xchg
decl
decl
sbbl
cmp
sti
lcall
jnp
sbbb
pusha
ljmp
cmc
lcall
mov
push
testb
cmpsb
xor
mov
cmp
jno,pt
xchg
ret
jmp
lcall
lods
mov
xor
ret
pop
add
dec
sbb
and
sar
call
add
popl
sub
data16
xchg
fwait
ja
scas
cmpsb
push
sub
sarl
sub
addr16
push
ret
fsubs
cmp
jmp
add
mov
mov
and
mov
jg
pusha
sub
and
cmp
test
and
pop
mov
add
ljmp
frstor
pushf
out
pushf
pop
sbb
jae
lcall
add
jl
insb
clc
push
dec
jmp
ds
inc
stos
or
adc
jecxz
out
mov
outsl
mov
cmp
lcall
das
negb
fiadds
pop
std
mov
call
xor
cwtl
dec
xchg
int3
test
or
cld
cmc
inc
rorb
arpl
mov
mov
pop
xor
lret
xchg
inc
rorl
mov
push
inc
add
mov
inc
push
es
loope
push
cmp
insb
cs
sbb
and
adc
push
in
add
ret
mov
mov
mov
add
push
xchg
movsl
and
sub
dec
mov
js
add
cmp
mov
add
sub
sbb
push
mov
jmp
mov
xorl
adc
and
mov
rolb
roll
fidivs
add
pop
hlt
cmp
pop
or
mov
mov
adc
push
pusha
adc
jl
add
mov
sahf
dec
js
push
and
push
int
sbb
push
jne
or
push
push
dec
push
adc
int3
stos
inc
ret
xor
inc
nop
add
sub
push
loopne
push
mov
add
jns
xor
jae
orb
adc
xchg
or
sbb
inc
aas
add
add
push
pushf
mov
jp
jo
inc
test
cmp
xchg
add
cli
fbld
and
rorl
hlt
scas
mov
pusha
adc
or
jp
call
test
js
outsl
loop
idivb
inc
xchg
cwtl
mov
lcall
xlat
jne
jne
mov
jge
filds
and
push
arpl
add
cmp
in
ss
cmp
cmp
hlt
jp
mov
jo
vmovhps
outsl
mov
ret
iret
mov
push
push
ljmp
roll
out
pop
out
leave
add
bound
enter
or
mov
lods
mov
xchg
enter
dec
cs
sbb
sahf
stos
or
mov
or
inc
sbb
jle
add
fucomi
or
ret
mov
or
mov
test
sub
mov
adc
insb
sbb
push
clc
jmp
mov
out
in
jb
xor
je
fsts
jp
js
mov
clc
adc
dec
scas
xor
leave
sbb
js
jp
fisttpll
imul
xor
ret
sub
and
rorl
jb
sub
jns
lods
or
and
cmp
jae
and
mov
loopne
ja
pop
ss
add
iret
xchg
cmp
dec
sbb
enter
test
addb
ret
xchg
sbb
and
clc
jo
jp
or
test
push
sub
adc
test
push
dec
rclb
lods
adc
mov
loope
out
mov
jmp
movsb
pushf
xchg
jae
outsb
lret
lods
inc
out
xorl
pop
push
mov
mov
xor
mov
fadds
rolb
sbb
rcrl
rolb
mov
fsubr
push
faddl
ds
cmpsb
add
or
inc
lds
xchg
inc
rclb
out
mov
push
call
clc
pop
mov
xorb
mov
jbe
int3
lock
xchg
inc
insl
jnp
js
add
imul
movaps
inc
rorl
shll
ljmp
pusha
adc
scas
xchg
shlb
call
mov
int3
xor
xchg
outsb
mov
lahf
in
jg
mov
mov
movsb
mov
hlt
ret
stos
je
or
pusha
push
fstpl
mov
leave
sub
decl
std
xor
mov
inc
out
add
aad
das
shll
aad
inc
cmp
ljmp
std
sbb
sub
into
sub
jb
lcall
std
dec
lret
pop
adc
dec
pushl
adcl
loop
fcomip
pop
nop
cli
cs
xchg
xchg
push
or
mov
icebp
pop
xor
add
stos
xchg
imul
xchg
lahf
js
call
mov
xor
sti
xchg
int3
hlt
xchg
in
aad
sub
sub
jg
dec
dec
arpl
test
movsl
pop
sbb
rorl
xchg
or
sbb
call
lcall
xor
out
push
ds
sbb
lret
in
ficoms
mov
push
rcll
sub
jmp
test
mov
inc
mov
xor
out
mov
leave
test
call
and
jo
ljmp
mov
in
and
cmc
out
sub
adc
decl
loope
out
push
ret
mov
and
into
xchg
jmp
incl
cmp
jle
sub
fmuls
jl
cmc
ja
call
repnz
in
inc
popf
lds
mov
repz
mov
incl
jl
pop
mov
sbb
test
jo
push
pop
ds
andb
aad
lock
decl
mov
cwtl
rcl
mov
stc
int3
jle
inc
mov
ret
lcall
clc
mov
sub
mov
adc
mov
push
mov
adc
sbb
cmpb
ljmp
popf
loopne
sbb
jb
jg
sbb
fisttps
lcall
jp
cmp
push
mov
int
maskmovq
mull
pop
iret
and
ljmp
dec
cmp
cmpsl
repnz
stos
mov
and
add
pop
jge
scas
pop
add
xchg
jno
fwait
cltd
xor
jg
mov
jo
lea
lret
cmp
jnp
popf
fadds
or
mov
inc
repnz
stos
lcall
aad
repnz
add
int
jl
dec
jnp
out
cmpb
cltd
cmp
mov
pop
cli
ljmp
push
xchg
or
imul
cmp
jmp
xchg
in
push
clc
lock
xor
cmovo
fsub
push
or
out
push
adc
shll
jmp
cwtl
inc
mov
mov
lahf
mov
enter
pop
cmp
dec
fsubs
stc
cmpsb
adc
ds
jmp
sti
adc
jmp
xchg
shl
xchg
repnz
xor
daa
shll
xchg
jns
aad
mov
movsl
jns
jle
mov
cmc
sbb
sub
rcll
sub
adc
out
add
lea
cmp
ret
inc
inc
jae
dec
adc
ljmp
call
sbb
int3
mov
mov
or
in
inc
mov
push
inc
ljmp
mov
cs
jmp
push
js
call
adc
xor
mov
out
sar
inc
or
js
jnp
fildll
repnz
mov
icebp
mov
or
es
mov
lcall
in
sbb
je
push
cmpsl
lahf
push
stc
imul
leave
cltd
cwtl
popf
ljmp
call
add
sub
push
jae
add
cmp
and
arpl
push
mov
sub
int3
pusha
jecxz
sub
fidivrs
mov
push
push
sarl
fwait
ss
pushl
stc
cmp
iret
ffreep
push
pusha
lret
repz
mov
sahf
mov
hlt
dec
call
cmpsb
int3
out
jbe
movsl
sub
movsl
inc
lret
iret
jne
test
mov
and
or
ss
iret
xchg
jmp
xor
enter
dec
mov
lea
in
push
lcall
ret
clc
jbe
mov
in
in
test
dec
pop
les
mov
inc
inc
fnsave
pop
mov
sbb
testl
jo
jp
jbe
aad
cwtl
decl
dec
sub
iret
icebp
sbb
cs
and
fisubrs
sar
ljmp
push
imul
fsubr
adcl
js
xor
xchg
call
inc
sbb
nop
add
sahf
jo
lret
add
pop
in
in
sar
or
mov
sbb
mov
out
inc
cli
stc
and
push
gs
call
inc
rcl
aam
in
js
fmull
out
xchg
jmp
cmp
sarl
aaa
mov
jmp
xor
cmpsl
bound
clc
sarl
dec
mov
push
sbb
mov
adc
repnz
ret
clc
sarb
jno
aas
out
loopne
lret
jb
sub
xor
fimull
call
inc
adc
sub
int
cmp
and
inc
pop
push
add
xchg
jbe
fsubrl
add
js
testb
push
stos
daa
fsubrp
add
jnp
pop
adc
or
mull
push
testl
mov
adc
mov
adc
xchg
inc
nop
and
out
pushf
mov
adc
sbb
mov
and
aam
xchg
aaa
sub
mov
addb
ss
and
inc
xchg
js
and
pusha
mov
mov
jne
adc
mov
fistps
int
pop
lea
mov
xor
lock
test
out
sar
push
or
ret
ja
pop
mov
and
lods
cmpl
jne
mov
lea
sbb
mov
sub
mov
adc
mov
inc
and
inc
mov
mov
mov
stos
xor
mov
jmp
or
xorl
dec
and
xchg
adc
push
xchg
mov
mov
mov
inc
fcmovnb
sub
or
fistl
ret
push
cmpsb
xchg
aaa
pusha
cmc
repnz
leave
es
arpl
inc
pop
jl
lds
int3
or
shlb
rolb
sbb
xchg
sub
adc
and
lret
pushf
cmp
fstpt
sub
fadds
add
ja
jge
add
inc
jnp
or
mov
mov
xor
and
push
outsb
test
lret
gs
cmpsb
lcall
cmc
jmp
mov
cmpsb
mov
mov
cmpsl
orb
popa
xor
aas
loopne
rcrb
cli
ds
sbb
frstpm(287
mov
pop
gs
sub
jle
jmp
dec
mov
mov
dec
insb
outsb
popa
cld
jbe
sub
xor
fwait
dec
outsb
mov
cmp
cld
into
ffreep
std
sub
cmp
cmpsl
roll
aaa
push
jae
lcall
adc
inc
dec
pushf
cld
and
stos
mov
repnz
cmpb
mov
mov
aas
pushf
sbb
fs
call
repnz
into
push
push
push
movsl
insl
dec
test
lds
pop
xchg
jg
in
out
mov
or
dec
jp
cmpsl
mov
xchg
or
fisttps
rcr
push
push
js
xchg
stos
out
push
insb
or
push
push
add
lahf
mov
and
in
mov
or
je
or
mov
ss
or
out
jo
ljmp
push
jmp
nop
xchg
cmpsb
je
neg
xor
mov
cmc
inc
xor
in
lcall
pop
arpl
nop
loopne
push
sbb
inc
call
clc
imul
jb
add
out
jmp
push
jo
dec
mov
fsubrs
stc
sub
push
inc
div
scas
fwait
inc
adc
shlb
daa
dec
gs
adc
in
xor
lea
leave
add
add
stos
pushl
push
into
mov
mov
jmp
cmp
sub
push
jg
loop
out
xlat
lds
or
dec
inc
mov
fnstsw
or
loope
dec
or
clc
push
jg
dec
jne
xchg
add
loope
push
mov
icebp
sar
fdivr
adc
adc
loop
inc
dec
test
fs
sti
add
xor
cmp
pop
loop
insl
jl
or
aad
push
cmpsl
xchg
jg
mov
cwtl
dec
mov
enter
insl
andb
push
sarl
pushl
fidivl
sbb
add
lret
add
xor
in
loope
stc
jmp
sti
cs
imulb
mov
mov
fadd
mov
cmp
aaa
decl
imul
mov
mov
jne
call
decb
sub
shll
ret
enter
and
push
lock
jg
inc
pop
bound
pushf
data16
mov
ljmp
push
mov
hlt
push
idivb
imul
adc
ljmp
rcrl
aaa
mov
inc
imul
mov
inc
sub
inc
dec
mov
fucomip
inc
cmp
or
mov
adc
jo
and
repnz
push
jmp
std
aaa
dec
ljmp
pop
and
push
jp
or
iret
insl
jecxz
stc
pop
daa
lods
push
jg
hlt
mov
test
aaa
jns
test
xchg
pop
frstor
loope
incl
arpl
push
stc
mov
aad
mov
add
pushl
es
jl
pop
jmp
aam
pushf
push
inc
repz
and
outsl
hlt
fildll
pop
pop
mov
out
cmp
or
cld
jmp
pushf
dec
mov
sbb
dec
adc
and
popf
outsl
lock
call
out
pusha
out
inc
push
dec
cmp
sbb
int
cmc
lods
call
rorl
repnz
arpl
pop
das
add
push
inc
and
loopne
das
clc
add
int
cltd
dec
popf
out
adc
lods
pop
add
or
jg
sbb
fst
aad
rorb
dec
inc
aam
jne
enter
shrl
add
xor
mov
aaa
jnp
mov
sbb
les
mov
outsl
and
add
xabort
outsl
dec
add
jo
pop
pop
push
lret
add
aam
aas
jb
sbb
inc
ja
add
jne
mov
outsb
lods
xor
stos
in
dec
inc
dec
push
cmpsl
in
add
adc
dec
inc
aam
xor
sbb
adc
inc
mov
xchg
mov
sbb
mov
ss
cmp
inc
loope
adc
test
insl
mov
xchg
mov
sub
sbb
mov
adc
xor
ret
testb
fcoms
test
and
lock
or
inc
mov
mov
cmp
mov
cmp
shll
sbb
push
add
shrl
repz
shll
loop
les
call
cmp
jns
or
imul
push
push
sbb
mov
lcall
xor
das
pop
subb
cmpb
or
clc
adc
xor
or
mov
subl
adc
je
sub
sbb
imul
loop
xchg
and
jb
push
push
and
fcoms
or
data16
enter
cmc
jge
out
lds
into
inc
cmp
ja
adc
es
add
jae
adc
aam
push
pusha
xor
sbb
je
mov
jo
adc
mov
aas
aam
dec
in
fmul
jmp
cmp
push
test
or
imul
andb
loop
sahf
test
xchg
or
and
xchg
inc
cld
lahf
jecxz
ret
inc
cld
sub
xchg
sub
out
clc
cmpl
movl
push
dec
repnz
les
xor
or
lock
rcl
inc
adc
inc
aas
or
add
inc
add
adc
add
pusha
sbb
cli
popa
adc
mov
and
xchg
int3
mov
adc
popf
push
push
addb
or
sbb
xchg
pop
sub
push
out
pusha
pop
subl
mov
jb
xor
daa
std
dec
fdivl
pop
loopne
pop
xlat
dec
test
mov
mov
pop
jnp
push
sub
jb
inc
xor
popa
jle
dec
or
sub
lret
lcall
or
or
push
testb
pop
cmpb
cltd
fldenv
inc
std
inc
or
cmpsb
stos
cmpsb
mov
int
fbstp
loopne
subb
and
les
movnti
mov
cmp
inc
les
ret
js
add
shl
stos
adc
sbb
incl
push
movsl
cmp
sti
mov
rcll
jno
aaa
in
gs
mov
repz
push
lea
jns
aas
mov
ss
repnz
push
mov
int
and
cmp
decl
sub
push
out
fistpll
xor
bound
testb
subb
xor
call
fsts
jp
mov
js
and
aaa
add
xchg
mov
or
push
out
jmp
inc
outsl
cld
jg
cmp
adc
sbb
push
or
clc
mov
sahf
test
sbb
in
jge
pop
mov
call
call
xchg
out
mov
out
shrl
inc
cmp
xchg
insl
sahf
pushf
fdivp
shr
out
mov
call
sbb
adc
in
mov
out
xchg
cltd
ret
stos
cwtl
popf
mov
sub
hlt
pop
in
jmp
and
iret
cmc
bound
loopne
add
add
sbb
xchg
cmp
test
decl
pusha
mov
or
cmpsb
push
out
lret
xchg
inc
pop
in
push
or
jmp
aaa
pop
xor
bound
mov
and
lods
add
das
icebp
mov
dec
mov
adc
mov
mov
pop
std
decl
imul
adc
scas
inc
lods
inc
ja
sub
jns
mov
jle
subl
orb
stc
jbe
ja
jg
push
sbb
sbb
cmpsl
xor
pusha
testb
movsl
out
add
ficomps
dec
andb
mov
imul
hlt
dec
mov
xchg
xor
mov
mov
mov
sub
jmp
int3
jo
cwtl
sbb
xor
jg
test
cltd
mov
mov
adc
lds
in
dec
iret
repz
inc
clc
jmp
sub
in
test
adc
mov
shlb
mov
sub
sub
push
enter
pushl
cli
add
dec
stc
cltd
inc
ljmp
outsl
mov
inc
lcall
jbe
sbb
push
dec
scas
mov
adc
inc
lcall
lret
ljmp
dec
and
cmp
ss
maxps
push
sbb
mov
mov
adc
mov
xchg
cmp
mov
xor
pop
push
decl
negl
outsl
std
decl
mov
push
jns
dec
in
lcall
data16
je
cmp
pusha
in
inc
stos
pop
push
fimuls
jo,pt
out
push
scas
push
or
mov
jmp
adc
ficoms
cmp
cmpsb
add
call
xchg
or
iret
mov
dec
jg
ljmp
xor
cmp
out
jbe
dec
inc
call
sahf
push
std
aad
xor
ds
inc
push
ljmp
into
mov
cmp
cmc
xor
push
int3
outsb
and
sbb
dec
sar
call
scas
ss
lods
sbb
inc
xor
xor
pusha
stos
and
lea
xor
xchg
jg
xchg
adc
or
sbb
sub
sbb
sbb
ret
add
mov
mov
jo
xchg
mov
stos
loop
dec
jne
or
push
pop
cmp
and
sbb
sub
add
add
add
sub
lret
and
mov
lret
inc
rolb
jbe
xor
xor
dec
cwtl
test
pushl
and
test
jl
lahf
int3
add
pop
sub
subb
movl
lcall
loope
loop
int3
mov
repz
jmp
jmp
xor
add
divb
adc
inc
mov
inc
or
mov
xor
fsubrl
fiadds
or
sarl
movsb
mov
mov
fbld
fs
xlat
add
dec
jecxz
adc
xchg
test
dec
and
fxch
aam
mov
jmp
mov
adc
push
in
xchg
xchg
xchg
push
pop
loopne
mov
and
dec
ret
push
mov
mov
and
sbb
movsl
mov
or
xor
inc
cmp
sub
push
dec
mov
or
mov
sub
cwtl
fcoml
addr16
call
das
das
int3
mov
or
mov
bound
leave
or
inc
cs
outsb
mov
add
pop
adc
mov
adc
mov
lods
add
add
mov
shrl
inc
xor
xchg
jmp
lods
inc
cs
test
jno
add
pop
fmulp
sbb
sub
out
inc
inc
jbe
fcmovu
test
sub
ret
and
fwait
mov
fiadds
sbb
sbb
into
add
sub
sbb
mov
push
mov
int
stos
sbb
aad
cmp
push
lock
fs
loopne
enter
jo
xchg
les
ljmp
daa
les
out
push
mov
xchg
aaa
lcall
stos
jl
pushf
push
lret
or
dec
add
dec
mov
fsub
push
mov
cmp
cmc
in
add
lea
mov
mov
push
pushf
add
xor
mov
lretw
sbb
or
outsb
pop
cmpb
inc
mov
int3
add
xchg
mov
stc
test
sarl
inc
xchg
mov
adc
jae
cmp
gs
push
shl
shlb
mov
lock
cmp
cmp
jge
in
dec
clc
lret
or
in
ret
add
outsl
test
xchg
or
push
dec
xlat
loopne
int
inc
mov
mov
mov
sbbl
cs
or
dec
int
repnz
jp
icebp
add
loop
or
xchg
mov
jo
add
pop
inc
mov
out
jne
push
sub
iret
std
out
and
add
adc
push
jne
xor
inc
dec
pop
add
mov
test
dec
add
imul
mov
imul
adc
dec
leave
ret
lahf
cli
mov
or
call
mov
mov
sbb
mov
pop
sbb
and
sbb
popf
sub
add
cld
pop
roll
xor
xchg
jmp
mov
loop
movsl
loop
scas
mov
ret
or
out
fildl
pushl
cmp
add
sub
mov
sbb
inc
sbb
pop
out
insb
jmp
cmp
adc
in
fidivs
or
push
pop
jmp
test
mov
mov
xchg
filds
push
inc
push
mov
mov
fisubrs
mov
lret
and
je
cmp
lcall
int3
dec
xchg
pop
sub
fsubrl
xchg
pop
arpl
jae
jmp
mov
jmp
mov
fs
int
xchg
mov
dec
or
cltd
push
fbld
mov
clc
adc
out
stos
or
fwait
lock
movsl
aas
and
pushl
pop
daa
loop
sub
jne
jmp
pusha
mov
mov
leave
dec
fidivrs
incl
aam
ret
into
movsl
aad
mov
stos
test
pop
xchg
xor
data16
call
jns
push
dec
pop
cli
and
pop
lods
in
cmpb
adc
mov
or
decl
push
xchg
icebp
push
sbb
push
sub
and
out
shll
fscale
fwait
push
xchg
pushl
mov
and
rcll
lea
xchg
stos
stc
les
sbb
cs
stc
ljmp
aas
adc
cmc
push
sub
in
cmp
aad
fnstsw
js
mov
ret
mov
inc
add
test
das
imul
rol
mov
pushf
cltd
ds
push
sbb
and
ret
mov
aas
pop
inc
sbb
loopne
inc
adc
push
pop
insb
push
cmp
movsl
imulb
filds
fisubrl
jb
jmp
inc
inc
cli
sub
fprem
jg
ffree
adc
scas
std
stc
jecxz
cmpsl
fisubrs
pop
xchg
aas
call
pop
fsts
push
test
mov
push
adc
inc
pop
incb
sub
add
insb
push
cmp
or
out
clc
jg
jnp
or
inc
sub
inc
pop
jp
mov
lock
or
ss
in
jge
jg
popf
xchg
xor
push
ret
cmc
cmp
mov
in
data16
xor
jg
sar
xor
ficompl
fistpll
or
push
call
enter
sbb
xor
and
sbb
jne
inc
testl
inc
out
pop
and
push
cmpsb
rol
cmc
scas
push
lahf
or
ret
inc
mov
mov
sbb
lea
xor
leave
cmp
into
mov
pop
xchg
inc
imul
jne
dec
cmpsb
pusha
loop
inc
inc
pop
jb
push
xor
add
sti
call
popa
inc
push
cmpb
rorb
and
fucomip
cld
push
test
andb
inc
aaa
movsl
dec
mov
mov
add
fists
mov
lahf
mov
xchg
dec
push
pop
nop
outsl
std
pop
repz
jl
cli
mov
sti
popf
jno
popf
sti
loopne
cltd
mov
mov
out
xor
call
xchg
pop
xchg
fnsave
dec
jg
xchg
fwait
ret
popf
movsl
jge
adc
xor
incl
pop
pop
fisubs
stos
sbb
sbb
into
mov
xor
mov
mov
outsl
loop
cmp
lret
adc
dec
clc
lods
mov
cmp
add
xlat
sar
hlt
xchg
inc
jecxz
ffree
and
sbbb
aad
mov
call
clc
clc
es
sub
adc
rcl
fsubrs
ljmp
jo
xchg
ljmp
push
movsl
inc
mov
mov
dec
dec
or
or
aaa
fsin
ret
hlt
test
pushl
push
dec
into
inc
fstps
cmp
dec
stos
outsb
sbb
mov
mov
mov
lock
mov
sub
leave
leave
clc
out
lock
jmp
rolb
sub
xchg
loopne
cmp
icebp
jg
mov
je
pop
aam
popf
scas
hlt
scas
adc
pop
mov
push
inc
mov
add
test
lods
push
cmp
ret
lret
sbb
push
mov
cmp
add
dec
xchg
imul
aaa
push
mov
es
imul
xchg
mov
xchg
push
int
or
cld
arpl
in
addb
jmp
ljmp
jmp
js
adc
lods
fcomps
int
clc
outsl
mov
popa
call
push
sub
out
push
lds
jb
pop
lcall
jmp
clc
push
lcall
enter
inc
or
repz
jp
out
orb
leave
mov
jns
pop
sub
or
fidivs
pop
subb
jmp
test
iret
fwait
jno
pop
mov
mov
inc
ret
inc
cs
sub
call
sbb
xchg
dec
mov
out
mov
popl
aad
xchg
addr16
js
dec
inc
or
mov
test
or
and
lcall
decl
ja
xchg
lcall
pop
stos
sahf
aaa
xor
adc
or
push
adc
push
mov
push
fdiv
js
stos
decl
ffreep
imul
dec
or
iret
sub
or
out
jo
call
decb
cmp
jp
push
into
stc
sbb
sub
cmp
jmp
sbb
repnz
xor
shl
mov
mov
fs
loopne
test
cld
das
or
inc
imul
shrl
inc
sti
leave
pop
test
jbe
call
dec
jmp
sbbb
mov
push
dec
push
fs
xchg
call
add
stos
bound
aam
pop
push
je
fwait
aad
sbb
out
pop
clc
fbstp
fadd
push
or
mov
inc
orb
xor
cmp
cld
decl
mov
cmp
dec
int3
in
clc
fisubrs
out
rcl
test
sbb
enter
mov
mov
jmp
xchg
lret
stos
ds
negl
xor
imul
std
decl
dec
shlb
pop
pop
lcall
icebp
pop
push
mov
aas
mov
lock
xchg
mov
into
cmp
cwtl
fs
cltd
sbb
xor
pushl
cltd
jbe,pt
sub
sub
or
aad
sahf
mov
sarb
clc
incl
jecxz
xchg
sbb
aas
mov
cmp
aam
dec
jmp
sub
shrb
out
sub
cmpsl
cmp
imul
mov
push
lcall
jg
xchg
loope
jae
ds
les
in
movb
adc
mov
lock
add
pop
in
sub
in
iret
mov
jae
pusha
call
pop
test
sbb
sbb
fs
les
loop
insl
insb
pop
aas
sub
sar
pushl
pop
xchg
mov
test
sti
dec
cmp
inc
adc
jg
leave
xor
push
mov
mov
popf
jns
pop
cmpsl
mov
dec
cltd
jbe
fisttps
arpl
xor
push
lcall
jo
jecxz
mov
in
rcl
xor
call
push
mov
or
pushl
repz
mov
clc
mov
fdivl
add
inc
stc
add
xchg
cwtl
das
icebp
incl
mov
lock
popl
addr16
adc
sbbl
call
fs
xchg
sbb
sbb
lods
popa
push
and
lcall
cs
mov
pop
push
hlt
jge
shll
push
into
jge
nop
mov
int3
sbb
xor
inc
sahf
push
sub
sub
lea
xor
mov
dec
jg
pop
lret
inc
pusha
out
sti
out
cmp
shl
loopne
movsl
xor
decl
mov
loope
testl
daa
push
lcall
adc
jns
add
cmpsl
push
jp
inc
stc
pop
inc
and
pop
incl
sbb
push
jmp
mov
push
sub
push
cmpsb
out
movsb
pushf
sub
sbb
test
sbb
cld
sub
jmp
clc
sar
lcall
cld
sbb
xorl
jne
xchg
sub
icebp
xchg
ljmp
icebp
mov
in
add
pop
clc
mov
sarl
push
subb
adc
fisubl
mov
aaa
clc
incb
xor
out
mov
imul
and
pop
call
xor
test
arpl
outsb
or
idivl
pop
call
sar
daa
bound
pop
jne
fcompl
test
sub
or
aam
pushl
imulb
pop
aad
jb
mov
lds
sub
cli
das
icebp
das
lea
and
lods
sbb
fistl
adc
cmp
inc
sbb
or
pop
outsb
repz
hlt
or
ljmp
mov
scas
insl
sbb
add
and
mov
ret
cmc
mov
add
pop
jne
or
jl
or
mov
cld
outsl
int3
decl
jbe
jmp
dec
inc
mov
popa
inc
lock
incl
bound
mov
out
mov
lock
jp
mov
pusha
je
inc
xor
or
jl
inc
xor
fidivl
xchg
lds
mov
pushl
push
inc
cmp
cwtl
push
dec
push
shll
ljmp
cmpsl
xchg
inc
ficomps
inc
sbbl
or
in
mov
jmp
xor
sub
cmp
xchg
mov
cmp
ljmp
push
out
xchg
xor
pop
cmp
pop
sub
imul
stos
mov
outsl
cld
popa
jecxz
insl
imul
fdiv
jg
add
popf
clc
test
adc
loop
call
inc
and
or
mov
sti
adc
dec
add
adc
or
enter
xchg
mov
push
shll
xor
add
and
sub
mov
inc
xchg
test
stos
es
or
in
push
add
push
add
inc
dec
push
add
xchg
push
and
push
xor
movsb
add
push
inc
and
cwtl
pop
outsl
scas
mov
loop
push
inc
pop
mov
pmuludq
mov
add
shl
push
cltd
sbb
repnz
fistpll
add
out
and
scas
sbb
adc
cwtl
mov
call
xchg
mov
rcll
addr16
sub
mov
out
adc
mov
cld
dec
mov
movsl
sub
ret
pop
nop
pop
jge
jecxz
jo
inc
sub
cli
pop
adc
lcall
out
pushf
fsubrs
mov
clc
cmp
sbb
xor
sbb
int3
add
popf
push
jno
pushf
popf
dec
rol
inc
out
pop
in
dec
add
xor
adc
in
push
ret
int3
lret
out
lahf
xor
adc
jbe
mov
ret
fdivrs
call
fadds
pop
sbb
adc
pop
add
cmp
mov
add
and
xchg
cmp
outsl
push
clc
push
fcoms
and
test
fiaddl
or
pop
mov
inc
cmp
in
inc
sbb
sub
adc
movl
xor
or
adc
pushf
sub
lahf
xor
or
sbb
pop
test
inc
add
xorb
push
mov
enter
cmpsb
pop
dec
adc
inc
inc
loop
push
sbb
push
or
and
pushf
pop
sbb
lcall
and
xchg
int3
aas
imul
outsb
fsubrs
xchg
and
adc
adc
std
inc
lock
rorl
mov
pop
loope
mov
mov
scas
jg
pop
adc
or
adc
fidivl
add
sub
xor
add
jbe
xor
cmp
push
cwtl
inc
or
xchg
push
ficoms
into
cmpsl
enter
mov
xor
aas
sub
in
call
mov
push
mov
adc
pop
add
pop
jle
push
test
icebp
repnz
cmp
cmc
movsl
mov
adc
sub
sbb
sub
ljmp
xor
je
rcrb
dec
dec
lret
out
push
int
or
add
into
cld
aam
loope
insb
test
cmp
jg
pop
fcmovb
insl
lcall
lcall
fisttps
mov
sbb
cmp
dec
insb
sbbb
cmp
xchg
aaa
shr
fisubs
ljmp
jmp
jle
incl
aam
pusha
jl
jne
pop
jae
mov
push
cmp
add
push
stc
es
ljmp
test
sub
sbb
sub
lea
fucomip
fbstp
mov
arpl
fiaddl
push
add
decl
add
add
mov
mov
ret
mov
pop
ljmp
mov
cli
loopne
insb
std
lods
outsb
mov
insb
pop
call
ds
pop
aam
lcall
sbb
cmpsl
push
xor
out
scas
jbe
add
je
shl
stos
and
out
push
pop
mov
mov
scas
sbb
push
jno
subl
ds
inc
aas
incl
adc
outsl
loope
jb
aad
out
in
mov
mov
fbstp
cmc
inc
or
and
sub
call
inc
repz
insl
in
push
dec
xchg
les
out
ret
int3
mov
sbb
lods
add
mov
push
dec
test
ja
ljmp
adc
jne
mov
aaa
mov
pop
jmp
subb
mov
call
aaa
jno
out
and
test
jmp
stc
sarb
ds
inc
dec
adc
xor
fwait
incl
stc
call
int
inc
pop
xchg
sbb
dec
push
or
lcall
std
cmpsl
addb
inc
data16
or
jecxz
mov
mov
push
and
shrb
ljmp
add
adc
test
inc
pop
inc
arpl
dec
add
mov
adc
jmp
loopne
movsl
inc
sub
filds
jne
jge
xchg
ret
xlat
call
inc
and
pop
add
lcall
sbb
loop
push
repnz
add
in
js
in
add
fldenv
inc
sbb
test
sbb
adc
rcrb
jne
pop
in
mov
loopne
mov
mov
or
scas
and
jg
sub
pusha
xchg
and
add
add
xor
test
pop
inc
cmc
add
hlt
adcb
mov
addl
insl
daa
adc
lds
into
cmc
push
jbe
xor
pop
or
inc
and
adcb
adc
dec
aam
cmp
mov
add
adc
mov
jle
add
adc
adc
sbb
inc
add
push
push
jecxz
and
push
push
mov
icebp
sub
jnp
call
mov
inc
in
add
lds
lock
add
pop
outsb
mov
mov
or
xorb
into
push
and
loope
dec
add
sbbb
daa
ja
sti
xchg
or
and
in
aaa
dec
ret
jg
mov
frstor
inc
aam
pop
aam
jne
xchg
out
add
jns
mov
adc
mov
outsl
jl
xor
xchg
orl
popl
add
push
ds
and
in
out
decl
test
add
sub
shlb
and
mov
icebp
popf
push
cmpb
push
stc
ficomps
pop
mov
lds
into
fbld
daa
xlat
insb
stc
push
push
sub
les
daa
xchg
roll
or
ljmp
or
or
cmp
dec
mov
mov
outsb
xchg
aad
mov
push
je
xchg
mov
ljmp
pop
loopne
sub
insl
xor
flds
pop
mov
or
in
mov
sbb
movsl
stos
xor
inc
cmp
jl
stos
cld
fldt
and
push
subb
mov
subl
gs
push
inc
push
ds
cmp
rcll
bound
leave
inc
xor
into
jnp
je
push
iret
cmp
sar
ljmp
daa
push
mov
stos
jge
or
data16
pop
daa
pop
data16
lcall
dec
push
iret
mov
nop
test
cmpsl
cltd
rclb
test
fs
mov
ret
lahf
fisttpl
or
and
fs
mov
fisubrl
inc
mov
imul
leave
fwait
test
aaa
enter
jbe
aaa
cli
jg
hlt
and
add
je
mov
ljmp
push
push
mov
aam
mov
mov
dec
or
push
fwait
out
jp
shlb
cmp
cs
sub
insb
adc
rcl
jnp
push
add
add
punpcklwd
jo
lods
lods
dec
fildl
add
push
push
mov
fmull
or
or
push
push
pop
fdivs
and
dec
in
bound
sub
mov
in
fwait
sub
test
xor
mov
or
ds
sub
ja
test
ss
insb
scas
sub
inc
test
inc
sub
xor
sub
mov
xor
loope
xchg
inc
adc
pop
xor
push
sub
add
popf
xchg
shl
pop
push
loope
pop
sbb
scas
inc
xchg
mov
lock
rcrl
lods
jo
inc
test
push
sbb
pop
cmc
fiaddl
sub
push
sbb
enter
push
pop
xchg
sti
cmp
sub
shlb
aam
ret
stc
adc
and
orb
add
scas
icebp
and
pop
lods
pusha
or
xchg
addl
xor
or
loopne
cmpl
dec
aam
inc
cwtl
shrl
rcrb
mov
dec
gs
pop
sbb
adc
or
xor
lea
push
push
pop
mov
inc
pop
icebp
push
xor
out
push
fimull
xchg
jp
test
ljmp
cmc
sbb
mov
dec
mov
shl
xchg
mov
xor
mov
std
orl
adc
out
push
sbb
pop
xchg
sub
iret
adc
push
mov
movsl
addr16
subb
dec
or
jg
sub
aad
mov
inc
rcrb
lret
cmp
add
clc
mov
lret
pop
cli
dec
mov
jb
push
dec
data16
or
lock
mov
ret
pushl
dec
mov
jno
mov
xor
add
aam
jmp
dec
and
cmp
push
xchg
mov
xor
pop
ret
pop
jb
js
aam
inc
and
jl
lret
fbstp
cmc
icebp
clc
popf
sahf
push
into
cmp
mov
hlt
decl
push
stc
aas
xchg
add
push
mov
ret
adc
decl
jg
sub
sbb
cltd
loop
pop
sbb
rol
sub
test
sub
call
cwtl
push
mov
mov
mov
push
xchg
lret
and
call
pushl
or
cmp
mov
cmp
je
xchg
push
push
jp
icebp
pushl
nop
rcr
cli
push
addb
sahf
mov
std
cmp
imul
jmp
hlt
sqrtps
sbb
out
cmp
dec
test
das
cmc
jns
rcrb
nop
out
lcall
and
jmp
adc
addr16
icebp
fninit
mov
cmp
dec
dec
pop
fcompl
fwait
or
mov
into
ret
popa
out
mov
add
dec
push
sbb
jg
push
cmc
je
movsb
or
data16
inc
ret
mov
cmp
rolb
cmp
fadds
data16
aaa
adc
xorb
pop
hlt
shlb
aas
sbb
mov
int3
ficomps
fldl
push
push
jmp
lds
int
js
dec
cwtl
mov
jb
cmpsl
sub
shrb
sub
push
inc
add
sti
lds
pushl
cmpl
dec
xchg
outsb
es
gs
mov
push
lret
inc
arpl
lods
lahf
mov
lcall
jg
aam
xchg
add
push
incl
hlt
adc
in
ret
movsl
cmp
movsl
pop
mov
outsl
xor
lds
testl
cltd
push
sub
call
pop
adc
inc
sub
xchg
cld
adc
cmpsl
mov
push
lcall
cmpsb
fndisi(8087
pushf
push
aad
jmp
in
dec
xorl
clc
jns
out
xorl
adcb
adc
dec
jp
imul
sub
scas
inc
daa
jecxz
in
lcall
jbe
sahf
mov
mov
andl
lock
rclb
data16
insb
pop
clc
sti
pop
push
aaa
cli
jmp
int3
inc
data16
popf
je
lahf
push
aad
stos
rcll
push
outsl
mov
decl
insb
xchg
inc
pop
lcall
call
scas
jecxz
jp
stos
in
fsubrs
cmpsl
data16
rorb
push
adc
sub
enter
jmp
adc
lcall
push
fstl
push
mov
mov
movsb
ror
cli
lock
mov
hlt
out
negb
enter
adc
fdiv
out
pop
lcall
stos
arpl
dec
fcoms
icebp
adc
sbb
cmp
add
push
lods
clc
push
push
loope
mov
jge
sub
icebp
and
and
jmp
adc
fsubs
cmp
push
cltd
inc
push
sub
push
push
mov
bound
leave
sbb
and
lahf
in
mov
imul
cmc
sub
incl
add
lret
push
pop
inc
cmp
or
adcl
stos
add
stos
add
sub
scas
dec
add
inc
xor
push
push
faddl
and
push
add
testb
stc
sbb
mov
adcl
lods
inc
sub
dec
pop
inc
cld
fistl
imul
inc
fbld
out
xor
aad
fiadds
rolb
jne
js
sbbl
inc
js
sub
outsb
fistpll
adc
fwait
dec
inc
cli
inc
push
in
cmpsl
sbb
push
or
aad
xor
icebp
or
or
ljmp
inc
ja
fsubr
rcll
add
push
fisubs
mov
and
fdivr
pop
mov
lock
test
pop
fstps
jl
or
mov
fwait
inc
xchg
sbb
in
outsl
xchg
pop
adc
lret
shrl
push
and
inc
cmp
in
frstor
add
aas
mov
inc
roll
iret
imul
cld
push
xchg
inc
rolb
mov
jl
sarl
mov
add
call
mov
add
test
push
xchg
mov
or
add
adc
repz
adc
cmp
or
inc
jnp
dec
sub
sbbl
fadd
call
rorl
nop
fmul
scas
test
in
and
dec
rorb
andl
jmp
inc
jmp
pop
rcrb
ljmp
cmc
adc
pop
adc
movsb
and
out
mov
inc
out
adcl
push
dec
inc
pop
stc
push
adc
jg
outsb
roll
jb
inc
mov
or
pop
adc
or
incl
out
cmp
pop
push
fs
clc
xor
jp
xor
jns
pop
or
popf
cltd
test
sub
fldenv
pop
sbb
repz
dec
cmpsb
mov
int3
push
jbe
add
mov
out
dec
mov
scas
sub
mov
clc
ja
dec
rorb
cmp
fwait
popf
cmp
mov
jns
popf
iret
out
sub
adc
or
pop
jnp
jbe
jg
mov
push
mov
mov
lock
cmp
dec
data16
sbb
mov
ljmp
shl
cmp
add
lcall
shl
ljmp
xchg
xchg
rcll
decl
aam
andl
xor
leave
repnz
std
mov
adc
lock
sbb
lea
mov
decl
stos
sub
jp
into
sub
dec
vmovupd
fcos
incl
mov
dec
aad
cmp
xchg
enter
cmc
dec
decb
jg
outsl
ficomps
mov
sub
adc
push
push
jbe
outsb
clc
or
decl
leave
fstps
cmp
loopne
xchg
pop
sub
xor
adc
mov
decl
lret
imul
xchg
adc
les
shll
mov
mov
dec
repnz
xchg
add
leave
or
add
or
push
mov
xchg
cmp
push
push
inc
loope
mov
add
aaa
mov
leave
lcall
mov
jmp
adc
sbb
test
ret
mov
mov
fisttpl
fsubrp
xor
mov
call
fldenv
insb
mov
aad
lret
or
mov
aas
pop
subl
sub
xchg
cmpsl
fwait
push
mov
push
dec
loop
sbbb
add
decl
xchg
cwtl
jmp
mov
cli
xchg
imul
ret
mov
out
mov
push
fwait
test
sub
sarw
repnz
aas
add
iret
mov
xlat
stc
and
jmp
mov
or
jae
stos
outsl
incl
out
lahf
popf
dec
and
mov
jp
jo
inc
bound
pop
mov
or
call
dec
shrl
into
arpl
mov
sub
call
jae
push
pushf
addr16
mov
xor
add
jmp
mov
imul
insb
mov
in
sbb
scas
xchg
mov
sub
cmp
ja
inc
lcall
sub
sub
sub
movsl
out
movsl
add
push
push
pop
dec
cld
mov
aam
scas
test
jle
push
call
and
call
sub
jecxz
push
sbb
or
popa
pop
jnp
add
movsb
mov
mov
jmp
movl
insb
je
or
icebp
pop
push
xor
nop
insb
push
arpl
adc
jno
mov
mov
fsubs
or
jae
bound
outsl
gs
insl
jns
inc
pop
or
insl
jg
jmp
movsl
mov
cmp
int3
ljmp
xchg
xchg
jmp
cmc
dec
je
sbb
mov
hlt
fs
lea
rolb
cld
xor
pushl
adc
out
cmp
les
out
pop
mov
mov
icebp
jmp
push
imul
cmp
jp
fiaddl
ficoml
sbb
mov
jns
rolb
pushf
pop
movb
decl
ret
xchg
ljmp
dec
and
and
pushl
cmp
flds
push
cmp
movsl
rcl
adc
fistps
pop
pusha
ja
pop
add
insl
mov
std
adc
xchg
rcrl
mov
xor
sub
cs
into
in
pop
jp
fistpl
clc
push
jg,pn
ret
mov
ljmp
std
pop
adc
inc
pop
sub
and
sub
mov
mov
cmpsb
daa
mov
xor
push
mov
mov
ret
mov
jbe
clc
decl
lcall
jle
inc
push
leave
sar
ljmp
pop
ljmp
hlt
pop
add
jl
mov
push
jecxz
push
pop
rolb
insl
icebp
stc
stc
and
inc
lret
jmp
jo
ljmp
std
and
and
inc
das
or
mov
imul
incl
sbb
cld
pop
xor
add
lea
imul
adc
aaa
cmp
cmp
dec
or
sbb
lea
sub
push
icebp
sbb
repnz
push
jmp
jl
mov
scas
lahf
or
fldt
test
and
xchg
cmp
fstpl
xchg
jmp
add
inc
iret
adc
push
jmp
out
fiadds
jle
dec
lods
clc
pop
adc
faddl
add
push
lcall
mov
inc
ja
stc
add
lret
mov
dec
jb
clc
js
ja
int3
flds
xchg
adcb
cmpsb
pushl
or
jno
sub
call
insl
lcall
pusha
push
adc
ficoml
mov
das
dec
lret
xchg
outsl
hlt
jmp
xchg
add
sub
mov
inc
decl
xchg
lea
jmp
imul
pop
int3
ret
cmp
xchg
cmp
call
clc
xchg
sub
sarl
pop
rcrl
hlt
sahf
xchg
pop
mov
icebp
push
sub
sbb
jmp
xchg
or
data16
jnp
negl
mov
nop
jns
cmp
ljmp
je
stc
out
fisttps
dec
push
jno
loope
dec
cmp
jmp
mov
xor
sahf
sbb
das
sar
ljmp
loopne
mov
xor
ss
out
xchg
divl
sub
xchg
mov
hlt
pop
adc
leave
inc
in
call
or
jne
in
mov
fcomip
inc
push
inc
fdivrs
test
mov
and
pop
pushf
arpl
loope
pop
pop
xchg
in
cmp
mov
pop
dec
enter
sbb
mov
adc
std
jg
mov
jmp
push
sbb
cmp
cmpsl
clc
jnp
and
inc
loop
les
lcall
rcll
in
or
cmp
iret
maxps
sub
cli
mov
inc
int
sub
jnp
mov
lcall
std
lea
notl
sahf
out
mov
inc
or
fdivrl
cmpl
xchg
add
or
mov
cmp
mov
cmp
sbb
je
shll
mov
or
fdivl
mov
mov
cld
dec
or
push
sbb
es
iret
pop
and
lret
mov
es
adc
inc
cmp
dec
pushf
dec
sbb
sub
sub
xor
popa
mov
lahf
cwtl
add
dec
or
inc
loopne
sbb
xchg
inc
int
ds
xchg
addb
lcall
jmp
in
loope
jae
outsl
arpl
cmp
stos
test
jmp
xor
push
fcmovb
stos
and
pushf
sub
lcall
stc
sbb
call
inc
std
add
mov
xor
push
bound
fidivrs
repz
jg
call
and
test
mov
stos
xorb
nop
call
outsl
lock
and
sbb
jmp
mov
fnstsw
incl
scas
push
jb
push
xlat
mov
mov
leave
pop
addr16
aaa
jmp
jbe
push
and
out
call
adc
cmp
cld
pop
xchg
ljmp
mov
fs
adc
mov
popf
dec
sbb
sbbb
cmpsb
cmp
sti
cs
jb
jl
jecxz
ljmp
mov
arpl
xchg
test
aad
cmp
and
mov
clc
stc
pop
pop
push
jecxz
lea
mov
add
mov
push
mov
je
lcall
pop
popa
pop
adc
adc
sub
scas
jno
push
push
jmp
movsl
sbb
pop
sbb
mov
sub
push
xor
mov
js
popf
out
sti
popf
cmc
dec
sbb
jne
fstl
sbb
lcall
mov
sub
pushf
xchg
aam
cltd
and
pushl
dec
cmp
dec
push
cltd
cmp
daa
lock
mov
xor
fsubrs
je
mov
cltd
mov
testb
mov
add
lcall
add
adc
stos
mov
call
in
aaa
clc
ljmp
cmp
xchg
pop
scas
out
xchg
pop
lahf
pop
clc
push
lds
adc
push
dec
xor
mov
sti
jmp
mov
pop
cmc
lcall
or
ds
imul
lcall
imul
push
xor
in
sub
cmp
inc
lock
adc
cmp
jg
call
mov
push
push
xchg
push
popa
call
push
popf
add
mov
dec
sub
daa
xchg
xchg
cmp
je
xchg
out
sub
call
cmp
jl
mov
int3
ss
scas
clc
push
push
in
ljmp
inc
outsb
inc
bound
in
adc
scas
stos
ficompl
out
je
out
fistpl
call
test
je
jns
fsubs
and
fidivs
lock
mov
popa
fucomi
sbb
adc
fcmovnbe
jb
data16
es
sahf
jle
mov
inc
incl
dec
inc
lret
sub
pusha
rcrl
add
dec
mov
push
xchg
or
out
and
sbb
adc
mov
leave
mov
outsl
adc
jnp
movsl
or
push
call
or
clc
ficomps
jmp
insb
push
in
jp
leave
stc
cli
fildll
aaa
cmp
push
ja
sub
stos
frstor
pop
int3
daa
fildll
scas
jecxz
cmp
xor
inc
add
push
inc
iret
cmc
pop
arpl
das
add
dec
sub
sarb
adc
xchg
adc
push
pop
fstl
les
lea
or
adc
clc
and
mov
or
mov
mov
ljmp
lock
clc
pop
mov
loope
sub
sbb
fs
loopne
std
outsl
cld
mov
sub
inc
mov
ljmp
fcomps
jbe
in
sar
or
data16
mov
lret
and
test
or
pop
mov
mov
adc
cmp
sub
sar
or
pop
fs
int
mov
push
xchg
call
push
pushf
scas
sbb
inc
pop
jl
jae
jno
jae
in
icebp
fcmovnbe
addr16
lret
inc
pop
in
mov
in
out
iret
push
add
and
or
cmp
xchg
inc
sbb
cmp
or
and
adc
xor
ljmp
inc
sub
repnz
sarl
pushf
push
adc
and
cld
test
jg
or
mov
testb
xor
loopne
fimull
mov
push
call
addr16
cmpsb
icebp
call
sub
lea
insb
jle
cld
ljmp
ret
sbb
mov
sti
mov
lds
mov
xchg
xor
pop
into
xor
outsb
lock
mov
mov
aas
stc
jmp
pop
fimuls
push
adc
push
ds
push
in
enter
jae
or
sahf
aaa
cs
jg
aam
push
sbb
fwait
pushf
shlb
push
cwtl
jecxz
mov
sbb
jb
ljmp
sbb
push
js
jmp
fcompl
rol
mov
es
push
scas
les
jno
xchg
mov
xchg
fisttpll
adc
hlt
ret
sub
add
or
in
sub
movsb
dec
icebp
fcomp
push
sbb
in
jne
jae
mov
xchg
or
fisubrl
adc
inc
push
pop
xor
fldt
addl
xor
jbe
xor
mov
lcall
imul
inc
or
in
cld
mov
xchg
lock
sub
add
jne
adc
in
and
cli
jl
dec
or
fisubs
sbb
add
add
mov
jnp
loopne
sbb
inc
push
inc
daa
sub
fidivl
daa
sbb
dec
loopne
and
push
sbb
dec
mov
popf
xchg
fisttpl
or
cmpl
adc
mov
call
mov
cmp
cmpsl
das
out
push
shl
or
xchg
lds
test
pusha
add
dec
out
xchg
mov
pop
adc
push
icebp
mov
orb
and
cltd
adc
jg
and
add
sarl
xor
dec
ret
adc
outsb
daa
in
or
xor
push
dec
addl
loop
push
inc
push
outsb
call
adc
push
and
or
jne
daa
into
sbb
lcall
mov
daa
out
stc
adc
aaa
int3
mov
in
fstpt
into
cld
adc
decl
iret
cmp
clc
ss
hlt
popf
cmpsb
pop
out
adc
lret
mov
inc
sbb
inc
dec
std
push
ljmp
push
mov
and
mov
pop
add
decl
dec
out
fwait
aad
js
fisttpll
sub
cmpsl
mov
pushl
fneni(8087
jo
jae
popf
subl
adc
sbb
bound
mov
fidivs
cld
stos
push
jnp
cmp
pushl
xor
push
mov
pop
fdiv
mov
mov
push
outsb
xor
mov
cltd
sbb
jmp
jmp
clc
and
pop
inc
mov
mov
inc
call
pushl
inc
inc
mov
outsl
jb
in
pushf
dec
in
fs
incl
mov
jp
lods
xor
es
cmpsl
dec
in
fsubr
push
push
pop
stos
jmp
incl
push
sbbb
mov
cmp
xor
cwtl
mov
mov
lcall
jg
lds
in
decb
sub
sub
push
xchg
cmpsb
js
mov
loopne
and
jge
or
aaa
sbb
hlt
cmpsb
cwtl
and
lret
push
fistpll
call
and
int3
stos
decb
dec
stc
mov
movsb
daa
adc
int3
adc
test
mov
and
loopne
jg
jae
xor
call
jo
das
aam
pusha
loop
adc
mov
jno
mov
sbb
push
push
push
aas
aam
sub
ret
ja
sbb
sub
sbb
inc
or
add
mov
loopne
inc
or
jo
and
or
orb
xor
sub
loop
cmp
jne
mulb
mov
movsl
arpl
clc
pop
mov
adc
cmp
faddl
insl
shlb
test
loop
lds
jae
xor
jb
xchg
call
pop
test
push
jns
dec
test
imul
cmpsb
in
push
fs
cmp
fiaddl
dec
std
call
pusha
add
lock
push
data16
jmp
mov
sbb
pushl
lds
xchg
mov
jo
dec
dec
popa
mov
in
clc
xchg
ret
es
adc
leavew
and
call
bound
stos
push
inc
inc
adc
int3
adc
rcrb
dec
inc
cmp
push
aaa
movsl
cmpsb
fnstcw
xor
xchg
or
mov
loop
or
ss
lret
sub
hlt
in
popf
or
dec
sbb
mov
or
out
mov
xor
sbb
lret
ljmp
stos
mov
mov
pusha
xchg
popf
xlat
adc
lcall
or
jmp
inc
mov
out
inc
insl
sub
decl
data16
lock
pop
cltd
mov
into
test
and
outsl
pushf
inc
in
xor
dec
sub
ret
sub
fsubr
jmp
push
mov
pop
push
mov
out
cmp
js
cli
fbstp
ds
fistl
clc
popa
loopne
dec
iret
cmp
sub
dec
shrl
pushl
xorl
addr16
xchg
jmp
test
sbb
nop
jnp
dec
cmp
jo
shll
pushl
sbb
dec
jmp
cmp
xchg
cmpsl
hlt
push
pop
xor
inc
pop
add
jg
loope
add
sar
jbe
push
dec
inc
add
jae
jbe
pusha
jle
mov
jecxz
mov
push
inc
aaa
and
inc
or
aaa
adc
out
sbb
inc
rcll
xchg
aaa
xor
outsl
decl
or
jo
mov
fcomip
mov
lcall
lods
push
lods
or
xor
lea
cmp
aaa
sbb
call
call
mov
cmp
outsb
js
ret
movsl
sti
call
clc
incl
adc
arpl
adc
jge
mov
push
fcom
sbb
ljmp
cmc
inc
cmpsl
rclb
mov
cltd
and
roll
xchg
sub
scas
lds
mov
call
lcall
sti
inc
add
dec
in
mov
dec
sbb
sbb
sub
das
sub
in
cmpsb
cmp
add
mov
adc
loop
sar
inc
adcb
dec
iret
mov
dec
push
cli
sub
cmpsl
mull
jbe
mov
mov
scas
icebp
jmp
lcall
std
out
ljmp
xchg
insl
dec
into
ret
cmpsb
mov
jp
enter
lods
lahf
repz
inc
add
lcall
mov
sbb
mov
xchg
xchg
out
lcall
jnp
je
lock
or
xlat
pop
sahf
sub
xadd
bound
inc
dec
sarb
jmp
cmpsb
je
jmp
or
xor
iret
jl
pop
test
jns
or
sub
mov
call
fldt
jns
inc
fimuls
jmp
sub
fcmovu
dec
lods
out
out
cmp
ljmp
sbb
jg
shlb
cmp
inc
std
adc
xor
or
rolb
lock
lcall
aad
dec
test
repz
mov
fs
ret
cli
nop
dec
push
mov
mov
cmc
pushl
jg
imul
aaa
cmp
fwait
pop
test
ljmp
sbb
sub
and
arpl
dec
sub
ret
lock
mov
ljmp
add
cmp
add
push
ror
dec
jle
dec
adc
add
adc
pop
inc
testl
sbb
inc
dec
adc
aas
push
in
nop
dec
or
sub
adc
mov
loopne
sbb
push
das
pop
fimuls
rclb
mov
stos
bound
sar
sahf
mov
pusha
inc
std
add
cld
ds
mov
int
add
adc
cmpb
mov
inc
lock
aam
cli
in
add
dec
out
mov
scas
testl
add
xor
push
and
lods
rcrl
dec
add
and
push
aam
inc
incb
mov
lahf
cmpsb
test
lds
sbb
mov
cmp
xor
mov
jecxz
cmp
aaa
adc
test
aaa
inc
insl
test
add
mov
in
add
mov
mov
mov
xor
xor
or
inc
push
adc
inc
rcr
mov
add
push
cs
dec
les
lcall
sub
or
mov
fstpl
xor
out
or
inc
nop
mov
cld
mov
push
jno
dec
push
jo
sub
test
cmpsb
xor
lock
into
mov
dec
in
addr16
sarb
add
mov
push
mov
popf
add
push
shrl
mov
or
and
fiaddl
orb
inc
out
mov
mov
lock
in
cmp
into
adc
in
in
push
test
push
cs
and
addr16
xor
ljmp
cld
decl
rcr
cmp
jb
loopne
into
clc
inc
inc
mov
mov
out
mov
dec
push
dec
jbe
aad
and
nop
adc
lock
mov
lea
push
push
push
ret
test
jns
gs
lcall
loop
jb
sub
les
insl
sbb
xor
popa
pop
loope
xor
sub
xor
in
add
mov
mov
push
hlt
fsubs
rorl
stos
add
and
lods
inc
insb
stos
and
xchg
jbe
sbb
jl
sub
fistpll
inc
test
xchg
stc
mov
lret
aad
jle
xor
std
sbb
sub
ss
aaa
sbb
ja
inc
test
cmp
inc
lret
cmp
clc
incb
shlb
scas
pop
mov
mov
arpl
adc
push
insb
jns
add
mov
test
pop
es
sub
ds
dec
jmp
add
sbb
sub
faddl
movsl
and
xor
xor
mov
int3
pushf
add
jo
in
xor
cmp
sbb
cld
xor
sub
inc
fsub
test
repnz
xchg
movsl
jecxz
pop
or
fldt
shrl
hlt
xor
clc
and
push
movsl
sbb
popf
adc
mov
or
icebp
icebp
rcl
pop
fcmovnb
dec
push
pop
ret
xor
adc
shll
push
test
nop
pop
test
mov
xchg
pop
insl
fisubs
test
fcmovne
inc
mov
out
pop
mov
addr16
insl
add
call
adc
int3
test
fdivs
ja
lods
lret
push
adc
push
add
jge
rolb
ret
inc
adc
add
cwtl
xlat
cmc
cmpsb
orb
incl
add
mov
inc
adc
sbbl
mov
inc
hlt
xor
pushf
push
loopnew
sahf
sub
inc
inc
out
pop
int3
add
fsubs
and
add
dec
test
data16
inc
jo
fsubp
lds
cwtl
jle
scas
add
xchg
clc
imul
add
pop
or
sub
cmpb
xlat
rol
cwtl
push
dec
jb
push
xor
into
and
ds
xorb
ret
pop
dec
mov
lock
shlb
fisubl
dec
sbb
js
or
mov
leave
jge
cwtl
sbb
mov
lcall
dec
sbb
mov
les
jo
fs
cwtl
stos
jp
xchg
lock
jbe
sub
ja
and
pusha
push
push
pop
lret
bound
rolb
jp
adc
and
jne
push
xchg
sar
adc
and
add
mov
inc
jnp
int3
lcall
addb
mov
iret
fcoml
or
xlat
jo
ds
cmp
iret
js
repnz
mov
ret
vmovsd
dec
ret
xchg
daa
enter
and
inc
ret
out
push
push
push
push
xchg
mov
sbb
sbb
lcall
inc
fs
inc
and
or
push
mov
inc
pop
test
pop
xor
aas
or
jnp
or
cmpl
sbb
cltd
hlt
sub
cmpsl
and
sbb
mov
pop
in
push
pop
sysexit
data16
jge
jmp
sbb
ja
sti
scas
adc
outsl
adc
pop
inc
sbb
mov
movsl
in
inc
inc
dec
or
dec
cmp
pushl
push
add
pop
sbb
cmp
mov
clc
jg
pushl
mov
in
pop
sbb
into
imul
or
and
popf
and
sti
inc
inc
xor
push
jns
xchg
mov
loop
call
cmp
insl
decl
ret
rorb
push
cmp
ja
insb
ret
add
push
dec
ds
push
aam
in
ds
lcall
ljmp
sub
ret
scas
or
mov
fsubr
ljmp
jmp
adc
leave
push
adc
clc
cltd
push
pushf
jb
rorl
inc
fdivr
mov
test
push
jb
pop
addr16
out
inc
or
bound
test
mov
cli
call
rcrb
leave
lods
push
pop
out
mov
mov
pushl
mov
adc
or
aas
dec
push
mov
xchg
mov
incl
aad
aas
loopne
repz
cmpsl
push
ret
fwait
add
sub
inc
cmpsl
adc
stc
pop
push
push
mov
dec
test
into
jp
mov
popa
fistpll
fldt
pop
sbb
dec
in
test
daa
push
cmpsl
fbstp
decl
in
add
xchg
das
test
out
or
cltd
call
pop
jo
lcall
push
xor
push
mov
cmp
popf
rcrl
sti
adc
jb
jmp
ljmp
pop
push
jne
aad
cmpsl
addl
adc
jmp
loopne
xchg
mov
cmpsl
repnz
add
adc
or
push
repnz
jp
decl
or
pop
in
dec
xor
in
cmp
push
mov
xor
stos
mov
movsl
and
dec
scas
scas
movsl
cltd
fwait
incl
loope
test
mov
cmp
dec
mov
push
mov
pushl
mov
stos
dec
shll
xchg
mov
sbb
dec
mov
mov
add
ja
cmpsl
or
out
leave
mov
jnp
das
mov
lock
out
inc
icebp
jmp
pop
ds
add
std
add
adc
jbe
push
int
sub
xchg
ljmp
das
sar
add
mov
jmp
loope
push
jge
mov
xor
das
hlt
dec
cwtl
mov
and
loopne
aaa
or
sub
add
decl
push
sub
int3
cwtl
adcb
push
fidivrs
aaa
mov
cmp
xchg
inc
jl
add
mov
push
icebp
xor
sarb
int3
mov
sub
int3
sahf
sbb
cmp
cmc
fistpll
push
call
repz
sub
pop
in
imul
aam
into
or
xor
clc
adc
lcall
mov
xor
pop
jp
enter
pop
pop
stos
das
push
sbb
lcall
or
lcall
shrl
sub
pop
xchg
push
insl
pop
cltd
sahf
inc
sub
loopne
dec
adc
bound
repnz
and
incl
ret
push
out
mov
test
push
mov
sarb
call
stc
and
lds
or
push
inc
sti
into
pop
push
out
ds
fidivrs
inc
clc
fistl
pushl
out
add
sbb
xor
jecxz
mov
sub
add
imul
icebp
sbb
cmpsl
xor
mov
and
mov
lcall
lahf
inc
cmp
roll
xchg
pop
and
and
lcall
or
rol
stc
test
movsl
shll
std
pushl
jge
rolb
xor
jl
aaa
ljmp
es
push
push
cmp
sbb
fucom
and
mov
wrmsr
mov
ret
dec
push
cli
decl
adc
fwait
addb
int3
rclb
shl
mov
pushl
push
inc
insl
dec
out
out
ljmp
adc
mov
push
cmp
add
loopne
leave
jl
push
ret
ret
sahf
mov
jg
jmp
out
jge
push
data16
jg
mov
test
in
add
call
xor
or
sub
clc
dec
adc
sbb
in
aad
shrb
enter
.byte
.byte
nop
mov
inc
xchg
adc
pop
cmp
aam
fiadds
cmpsb
mov
mov
decl
mov
adc
es
or
pop
or
shr
dec
das
es
mov
mov
ljmp
les
jae
inc
and
out
stos
insb
push
mov
in
negb
add
mov
sbb
in
fstpt
mov
fdivr
jmp
or
or
fsubs
ja
adc
pop
or
decl
ret
jl
lret
btr
out
sarl
xchg
cmpsl
jno
or
inc
pop
xor
ljmp
bound
and
mov
test
outsl
xchg
arpl
incb
mov
cmp
jp
outsb
inc
test
dec
clc
loop
fisubrl
and
push
add
ss
ds
stos
bound
imul
or
pusha
movsb
xor
inc
pushf
mov
and
add
jne
or
jb
jmp
mov
sarb
in
fwait
sti
das
daa
fldenv
xchg
pop
je
mov
or
lcall
sti
mov
into
mov
fisubl
and
int
inc
daa
xchg
xchg
jmp
push
adcl
outsb
adc
jns
in
cs
cli
rcrb
adc
popa
pop
jo
cmp
decl
mov
sub
nop
lahf
push
jb
add
jle
push
dec
pop
daa
xlat
jg
incl
jg
fcmovne
sbb
add
loop
cwtl
insl
and
ljmp
jge
pop
shlb
outsl
sbb
jmp
int
rcl
dec
std
cwtl
pop
pushf
imul
or
jl
jbe
sub
pop
fdivrp
xchg
jb
mov
nop
cmp
jl,pt
push
jae
pushl
xchg
popf
popf
push
in
adc
jno
or
ja
push
jge
pusha
pop
lcall
decl
add
addr16
mov
lock
mov
loope
clc
aaa
cld
in
dec
test
test
lds
push
test
imul
push
leave
adc
xor
js
jecxz
movsl
or
pushl
mov
out
mov
aam
add
sub
ret
dec
scas
mov
push
mov
jmp
pop
stos
cli
add
cmp
ljmp
jae
mov
jnp
lock
add
jno
xchg
popa
fwait
mov
std
pop
mov
popf
push
fsubl
sub
ds
ljmp
jle
mov
adc
dec
outsb
sub
push
inc
push
pop
scas
addr16
inc
sbb
fmull
xor
jnp
push
pop
jbe
pop
lds
repnz
aad
repnz
rcr
jg
add
sub
into
rcrb
fisubrl
sbb
sbb
incl
push
mov
dec
xor
jp
push
jns
lcall
stos
sti
sar
imul
inc
cmp
mov
adc
mov
jnp
xchg
in
cmp
cmpsl
inc
incl
sbbl
xchg
call
push
aam
add
pop
loop
imul
outsl
mov
mov
fists
mov
call
jle
inc
rolb
xlat
sbb
inc
and
imul
mov
mov
mov
and
sti
and
push
in
xor
loopne
or
jmp
ret
test
mov
mov
loopne
ss
ljmp
fiadds
pushl
fsts
insb
mov
mov
jns
adc
aas
and
jecxz
decl
mov
add
cmp
aam
shlb
je
int
stos
pop
jb
cmp
pushl
loop
fadds
or
js
fwait
lcall
ljmp
sbb
cmp
adc
mov
scas
and
inc
sub
call
cmpsb
imul
cmpsb
das
add
in
fstl
push
fidivs
std
push
mov
in
sahf
mov
and
test
pop
in
xor
js
mov
inc
cmp
push
push
and
jne
dec
xchg
out
pop
sbb
mov
jg
stc
add
inc
add
call
outsb
fs
adc
adc
decl
xchg
int3
add
add
push
pop
jbe
adc
sbb
icebp
add
rcrb
pushl
out
or
push
repnz
pop
not
jmp
mov
xor
call
cmp
pop
aam
dec
pop
cmpsb
setg
inc
std
stos
fs
pop
fsubrs
add
cmp
dec
sarb
mov
sub
repnz
mov
mov
jne
movsb
int3
jle
jno
adc
ljmp
pop
dec
mov
outsl
pop
push
out
mov
add
fistpl
repz
xor
mov
pop
jecxz
inc
lahf
ret
cs
mov
inc
xchg
xor
decb
int
ljmp
test
jle
ja
test
test
sahf
shl
in
in
hlt
fildll
call
into
adc
aad
xor
and
push
and
and
and
or
ljmp
cmp
cmc
stc
pop
mov
aam
pushf
sbb
stc
aad
mov
lcall
xchg
cwtl
xor
ret
push
insl
in
lret
jo
xor
or
test
stc
adc
arpl
ljmp
lock
ljmp
fists
jl
ds
jne
pushl
dec
cmp
stc
pushf
mov
stos
lods
data16
dec
pop
stos
testb
jecxz
pushl
or
mov
jmp
mov
movsl
into
mov
inc
lret
xchg
orl
jecxz
cmp
pop
mov
imul
ds
out
push
mull
mov
sbb
inc
idivb
xor
mov
sbb
inc
jmp
mov
mov
andl
fsubl
mov
outsl
cld
pushl
dec
push
into
cmp
loope
aam
xchg
stc
imul
mov
jp
nop
out
xor
enter
add
xor
push
in
aaa
test
shll
in
gs
cmp
cld
inc
mov
jl
lea
add
test
push
aam
mov
ljmp
push
sub
mov
mov
sbb
lods
or
or
cwtl
mov
gs
fdivrp
fbstp
xor
sbb
xor
in
cld
or
pushf
cld
cmpsb
std
add
adc
cltd
fsubp
mov
stc
jb
mov
xchg
adcb
add
sbb
jp
out
sbb
cmp
mov
xchg
dec
std
push
icebp
dec
push
les
jnp
pop
mov
or
or
pop
push
cmp
jo
xor
into
dec
cmpsl
decl
sbb
jb
xchg
dec
aad
add
cmpsb
into
jne
jle
or
testb
inc
add
addr16
cmp
jecxz
repnz
cmp
jp
inc
decl
jae
jg
in
push
push
mov
clc
ds
icebp
dec
cli
pop
sub
rorb
rcrl
add
out
mov
jmp
jmp
inc
insl
out
push
scas
pusha
mov
mov
sub
add
or
jg
fmull
nop
movsb
in
add
mov
leave
ljmp
push
push
arpl
jns
inc
pop
inc
aaa
mov
cmp
pushf
mov
mov
jecxz
icebp
sub
cmpsb
out
add
cmp
fidivl
dec
jnp
imul
adc
aaa
adc
add
movsl
and
outsb
inc
xchg
not
add
ficoml
xor
jge
mov
jg
fbld
fdivrs
xchg
add
inc
or
add
jbe
shll
decl
sti
xor
loope
aam
add
add
and
fnstsw
jg
ljmp
movl
sbb
mov
mov
mov
mov
or
ret
jnp
fistps
inc
test
dec
lock
dec
sub
mov
pop
ja
sub
fmuls
out
mov
iret
mov
mov
stos
jp
jmp
mov
add
sub
in
sti
mov
dec
adc
imul
fiaddl
scas
cmp
add
ret
mov
outsb
gs
addr16
in
cld
paddsw
xlat
xor
push
xor
jmp
scas
and
cmpsb
adc
sti
push
in
lret
mov
dec
dec
not
mov
pop
idivb
neg
inc
or
neg
mov
pop
or
add
shlb
fcoms
sti
lods
mov
dec
add
ljmp
push
out
cmp
in
jne
std
out
mov
mov
dec
es
sbb
fnsave
cli
mov
jl
test
imull
aam
add
add
aad
mov
insb
scas
fstp
mov
or
xor
sbb
fisubs
or
fwait
insl
out
adc
add
inc
addr16
xchg
push
sbb
and
sbb
in
sub
or
pushf
add
add
arpl
mov
add
loopne
int
clc
fdivs
sub
ja
ret
fldl
inc
push
loopne
sbb
adc
frstor
fneni(8087
stc
in
int3
pop
rclb
clc
mov
insl
cmp
imul
pop
fldl
add
add
jne
aaa
pop
jle
sub
je
js
ret
mov
adc
cmp
fs
outsb
fisubs
add
hlt
sarb
mov
inc
das
jne
cli
shrl
fdivl
movsb
lock
out
inc
clc
ljmp
das
ret
dec
in
sub
xor
cmp
mov
sarl
xchg
outsl
daa
mov
pop
inc
faddl
in
adc
add
jbe
mov
push
cmpl
mov
clc
ret
jae
add
or
subl
pop
sub
lock
mov
cmp
inc
xchg
mov
lea
mov
xor
enter
dec
xor
insl
xchg
pusha
dec
push
sub
rclb
loopne
mov
decb
cld
in
add
es
jno
dec
or
sub
incb
loope
mov
fdivl
insb
sahf
lock
mov
rcr
adc
in
popa
sbb
or
shll
xchg
movsl
dec
jo
lock
xlat
mov
mov
test
adc
shll
dec
rcrb
scas
leave
ret
shrl
or
test
mov
test
sar
lcall
je
jmp
dec
mov
adc
push
imul
call
mov
mov
jp
mov
outsb
les
add
or
or
push
lods
pop
xchg
push
aad
cli
inc
sub
add
pop
pop
jg
mov
repz
es
mov
xchg
jg
call
mov
mov
into
stc
call
pop
cli
push
sbb
lods
roll
fbstp
mov
push
fldcw
loopne
dec
mov
clc
inc
add
scas
ss
addb
cli
dec
mov
loope
or
stos
rcrb
pop
jmp
lahf
in
movsl
mov
jg
jg
dec
mov
xor
xor
loopne
outsl
hlt
pushl
ja
lds
aam
pop
push
xlat
mov
mov
arpl
pushl
inc
outsb
out
jmp
fidivrl
mov
adc
aas
call
or
fs
aaa
enter
mov
mov
pop
in
incl
mov
sub
add
bswap
in
mov
xlat
out
js
adc
test
fisttpl
xchg
lods
mov
jo
jne
test
mov
mov
fistps
scas
lahf
ds
jno
popa
push
out
mov
test
mov
into
mov
call
ss
adc
mov
clc
add
in
adc
xchg
bound
cli
pop
cli
shlb
xor
aas
pop
clc
incl
mov
mov
jo
mov
xchg
mov
inc
adc
dec
aam
mov
adcl
mov
jno
inc
sbb
mov
push
mov
std
in
mov
cmp
lcall
jg
cli
scas
idiv
lret
inc
jb
sbb
pop
pop
sbb
std
imul
sbb
test
jb
mov
test
inc
cmpl
pop
or
adc
jbe
sbb
push
into
push
sahf
ret
idiv
mov
or
andb
add
fmulp
add
or
xchg
cmp
jmp
add
repnz
and
jg
leave
outsl
insb
mov
push
jno
push
icebp
insl
push
sbb
inc
jmp
outsl
cld
lcall
xor
add
call
stc
rorl
and
jp
icebp
pushl
fnsave
mov
int
jo
cmp
push
and
lret
aam
and
adc
lea
sbb
hlt
call
mov
mov
mov
sarb
repnz
in
push
push
call
lahf
test
inc
mov
pop
push
push
in
bnd
push
xorl
and
pushl
ljmp
mov
cmp
das
in
lock
cmp
mov
xchg
push
xchg
fucomip
mov
inc
and
je
xchg
pop
adc
sbb
in
gs
ljmp
and
xchg
lods
sub
dec
scas
les
xchg
xchg
and
call
mov
insl
lock
jl
ljmp
or
popa
fstpl
scas
dec
push
xor
out
js
add
adc
cmp
repnz
pop
je
inc
sub
loopne
mulb
outsl
add
inc
test
cli
xor
add
arpl
jmp
xor
pop
jmp
ljmp
xchg
mov
aas
popf
mov
adc
inc
mov
cmc
das
jno
sbb
ficoms
xor
popf
sub
inc
push
call
into
push
push
mov
in
inc
aam
dec
ds
repnz
lahf
subl
cmp
push
mov
mov
in
jnp
iret
adc
mov
pop
cli
call
jg
cmp
or
sarl
xchg
popa
lds
lahf
repz
lcall
lds
pop
fidivl
jae
fs
clc
jge
or
adc
dec
push
ja
aad
mov
adc
jle
leave
sub
sub
lahf
push
push
fxch
dec
pop
cmp
stc
push
jbe
fsubrs
pop
in
stos
inc
or
sub
loope
push
inc
ljmp
sti
mov
dec
aam
or
dec
or
pop
test
sbb
jmp
fimuls
pushl
fs
cmp
cli
jg
xchg
jae
pop
cli
ljmp
fists
ds
xchg
sub
or
mov
adc
stc
cmp
push
fwait
lcall
jmp
push
roll
out
inc
mov
ret
push
into
xor
sub
clc
xor
jmp
and
decb
push
sub
mov
dec
cmpsb
adc
cmpxchg
into
aas
fsubl
sbb
fldenv
inc
addr16
aaa
and
jnp
mov
inc
scas
fdivrp
andb
rolb
lahf
mov
test
jp
and
mov
cltd
pop
test
mov
sti
adc
cmpsb
adc
mov
jmp
enter
loopne
pop
bound
out
mov
adc
dec
cld
sbb
mov
and
mov
cld
push
loopne
outsb
pop
mov
jge
shlb
mov
arpl
dec
ret
sbb
sbb
cmp
cmp
push
int3
push
lds
insb
adc
ret
pop
loopne
jmp
mov
dec
fistps
fwait
rolb
add
pop
inc
cmpb
mov
outsl
repnz
into
mov
les
jmp
inc
add
sarl
push
jge
in
xor
xchg
int3
adc
push
scas
aam
fidivs
mov
aaa
dec
push
test
frstor
scas
sub
mov
mov
xorb
ret
mov
pop
sbb
and
sub
into
ret
shll
dec
and
data16
xor
out
push
xor
fstpl
lret
mov
idivb
shlb
mov
ja
int3
or
adc
mov
and
hlt
pushf
test
sahf
adc
xor
push
or
cmc
cld
sub
xor
popf
cmpsl
add
cs
bound
xor
xor
lea
hlt
inc
sti
test
stc
jecxz
sbb
and
inc
push
pop
pop
in
pusha
mov
repz
pop
mov
cld
mov
hlt
cmp
int3
inc
inc
xlat
lcall
jb
fldt
dec
call
and
add
mov
sub
adc
arpl
sbb
aad
fsubrs
or
pushf
add
in
loope
loop
iret
and
push
mov
push
loope
pop
cltd
xor
xchg
in
push
sub
inc
shrb
and
mov
sbb
bound
mov
inc
out
pop
or
test
fld
sub
shll
test
and
ja
xor
hlt
sub
loope
inc
dec
sub
outsb
mov
mov
xor
add
inc
mov
add
or
mov
mov
ss
outsb
cmp
push
and
fisubl
add
add
inc
mov
dec
scas
push
push
jbe
call
clc
push
push
aam
test
pop
imul
sbb
add
add
adc
mov
hlt
add
sbb
repz
xor
popf
sar
adcb
cmp
sub
sub
mov
fwait
scas
shrl
ret
sub
in
fistps
int3
stos
mov
xchg
fistl
dec
leave
iret
cmpsl
aaa
pop
mov
push
adc
lret
and
int3
jp
bound
sbb
push
sbb
xor
ret
lret
push
dec
push
test
cli
stos
xor
aad
pop
dec
sub
mov
cs
mov
mov
shrb
inc
add
mov
divl
xchg
idivb
xorl
das
jge
imul
add
and
loop
pop
nop
sub
xor
stos
lock
add
add
div
out
and
fsubs
sbb
mov
scas
sbb
pop
push
sub
test
add
jne
mov
ret
insl
pop
add
imull
aaa
cmp
or
sub
leave
test
push
sub
and
fistps
in
or
push
xchg
add
mov
aas
in
outsl
xchg
imul
sti
daa
orl
push
pop
mov
sub
movsl
add
jns
loopne
jne
rcll
pop
jmp
adc
inc
sti
inc
ret
rcrl
dec
or
fmull
xchg
cmp
xchg
and
addb
and
and
inc
ret
xchg
pop
adc
jb
add
rcrl
mov
xor
fcompl
sbb
roll
push
les
inc
mov
subb
xor
push
sub
dec
imul
in
test
and
adc
jg
adc
mov
dec
lcall
jo
push
pop
pop
ljmp
cmp
mov
cmpsb
pop
jne
mov
ret
inc
and
and
addb
bound
shlb
xor
add
in
sbb
mov
cmp
mul
mov
pop
cmp
xchg
ret
sbb
or
loope
push
dec
inc
sub
pop
add
mov
shll
cmc
pop
or
rorl
insl
and
dec
call
add
insb
outsl
push
xorb
jge
pop
xchg
int3
fisttpll
dec
std
or
pop
dec
shlb
cltd
ror
mov
pop
sbbl
xchg
inc
test
lret
popf
stc
or
out
insb
cmp
xor
ds
inc
leave
mov
stos
int3
sub
sub
aas
pop
stc
hlt
sbb
push
pop
icebp
jecxz
ljmp
mov
xlat
ficompl
loopne
lods
ljmp
xor
test
aaa
dec
mov
jp
add
pop
adc
hlt
and
jp
negb
out
xchg
xor
adc
call
pmaxub
xchg
data16
xchg
gs
adc
add
add
xchg
clc
fadds
imul
inc
xor
sbb
mov
push
adc
add
ja
jmp
enter
ror
out
test
orb
sbb
nop
add
bound
out
lds
stc
xchg
sbb
loope
xchg
hlt
inc
fiaddl
or
negb
subb
add
push
nop
add
insl
jae
das
cmp
jmp
xor
or
sbb
scas
sub
out
jno
dec
mov
enter
out
das
mov
lret
sbb
sub
orb
insb
lock
fimull
sbb
inc
inc
sbb
jg
jmp
rcrl
add
or
int3
loope
loope
fsubs
jl
add
dec
stos
sbb
les
mov
dec
push
pop
icebp
dec
lahf
sbbb
cmp
or
call
ret
cmp
cmp
es
hlt
pusha
mov
cltd
loope
in
insb
jno
icebp
popl
sti
cmpsl
lods
outsl
decl
ds
sub
push
or
jnp
jnp
addr16
cmc
pushl
into
jo
or
jp
lahf
out
pop
test
xor
dec
push
insb
mov
incl
sahf
test
mov
mov
pop
jp
call
aad
leave
dec
jg
pushl
cmp
xor
scas
push
mov
add
sbb
add
sbb
mov
repnz
mov
push
mov
mov
call
mov
fisttpl
xchg
ja
test
pop
and
aad
sbb
jmp
jnp
adc
inc
cmp
push
into
addl
mov
decl
xchg
sub
push
popf
stos
jl
fdivs
xchg
call
scas
fcmovnbe
out
into
push
shll
in
cmp
and
pop
aaa
mov
lcall
stos
inc
jae
push
fs
popf
cmp
xchg
xchg
stos
mov
das
inc
aaa
aaa
loop
rorl
imull
and
inc
add
jl,pt
ret
pop
stos
lods
jno
in
into
int
jmp
mov
push
jl
push
dec
mov
jp
inc
sub
add
adc
cmp
jp
sbbl
dec
mov
dec
add
cmc
shrb
jle
adc
nop
dec
dec
test
fisubrl
add
call
imul
jp
inc
sti
and
mov
andl
jae
pop
jb
fcmovnu
push
stos
inc
scas
cwtl
movsb
xor
cmp
push
into
rcll
sbb
add
addr16
je
arpl
arpl
lds
in
and
dec
test
lock
dec
pop
imul
sbb
shrl
aas
stc
xor
loopne
mov
fcmovbe
fidivrs
or
popf
sti
movb
addb
adc
out
push
inc
dec
and
cmp
int
enter
lret
cmpsb
mov
repz
or
pop
dec
pop
jo
push
dec
insl
icebp
cltd
pop
or
ljmp
mov
xchg
sub
testl
push
fsubl
cli
sub
pop
fiaddl
and
mov
xor
inc
imul
cmp
incl
mov
jb
add
pop
ret
icebp
loop
sbb
inc
ret
xor
loope
lods
inc
cmp
decl
jmp
stos
jge
inc
pop
fadds
mov
cmp
into
or
cmc
in
adc
flds
pushl
std
adc
mov
xor
dec
repnz
pop
mov
jg
sahf
into
xorl
cltd
int
pop
push
incl
cltd
jl
ljmp
mov
out
ljmp
cmp
jmp
js
jno
cmp
icebp
jg
aad
jmp
mov
dec
push
xchg
xor
gs
ljmp
pop
mov
and
movsb
into
push
daa
xor
in
insl
push
clc
xor
jno
or
jmp
adc
nop
iret
clc
and
fidivrs
jnp
xor
lock
inc
std
stc
push
xchg
push
lea
rolb
sarl
mov
jnp
jge
and
dec
stc
idivb
mov
xor
decl
cmp
mov
ret
jbe
lods
out
mov
stos
out
xor
or
outsl
and
idivb
popa
inc
mov
enter
jbe
inc
out
inc
push
cli
xchg
incl
popf
imul
loope
and
cltd
sub
add
and
hlt
das
cld
cwtl
lret
shrl
ds
pop
adc
stos
scas
push
stos
inc
add
jecxz
out
mov
xchg
xchg
mov
inc
jmp
xchg
js
test
outsl
mov
push
jb
xor
outsl
dec
or
push
test
adc
and
popl
xchg
push
pop
repz
fisttpl
call
dec
out
mov
in
rorl
or
and
daa
daa
decl
aas
xor
call
notb
or
sbb
dec
int3
lods
test
jo
xchg
fdivr
inc
fsubs
lds
mov
pop
mov
xor
aas
pop
pop
ss
jg
mov
test
jmp
jl
push
in
sbbl
clc
pushl
negl
mov
adc
pop
ja
aad
call
je
insb
imul
stc
lock
cltd
stc
pop
outsl
mov
addr16
mov
incl
lods
xchg
pop
mov
push
xor
dec
or
or
dec
inc
jg
inc
jae
jo
mov
inc
icebp
orl
inc
mov
in
shrl
pushl
or
mov
sub
test
mov
sbb
int3
scas
xlat
inc
rcll
loope
aas
xchg
movsl
call
in
xor
mov
xchg
mov
shrb
cltd
cmp
xor
ljmp
cpuid
mov
or
sub
fs
cmp
insb
mov
outsl
hlt
pushl
aad
data16
fnstcw
add
in
jl
jmp
xor
cltd
push
push
pop
jbe
and
lds
into
test
filds
bound
shll
or
roll
xchg
pop
shlb
jmp
negl
add
push
scas
dec
or
mov
es
mov
push
jg
icebp
push
stc
pop
loop
jp
bound
ljmp
or
andl
leave
scas
dec
push
mov
inc
or
lock
adc
pop
cwtl
mov
cmp
cmp
or
cmc
jmp
pop
rcrb
dec
push
test
scas
jbe
push
adc
pop
xchg
dec
xchg
repnz
jno
dec
lods
popf
sbb
push
stos
icebp
push
mov
jg
jmp
jne
lds
lods
das
pop
mov
stc
sbb
cmp
cs
les
cltd
icebp
inc
outsl
xor
sbb
add
stos
xor
repz
jns
cmp
aaa
pop
clc
lcall
test
movb
pop
sbb
mov
jg
pop
mov
loope
add
mov
cmp
sbb
and
inc
lcall
and
out
mov
mov
sub
push
scas
out
sbb
je
ret
scas
push
fcompl
dec
lret
and
or
dec
pop
pop
push
pop
clc
fistl
jecxz
jl
mov
bnd
sbb
bound
pop
adc
cmc
jl
xchg
loop
pusha
pushf
jp
aaa
daa
inc
add
loope
arpl
call
pop
mov
pop
popa
sbb
mov
movsb
or
movsb
jnp
dec
xlat
xchg
cmp
in
xor
sub
incl
pop
lods
inc
sub
aam
inc
sbb
add
xor
jno
sbb
call
loope
fstps
push
push
leave
lods
jl
sub
mov
xchg
adc
mov
dec
data16
dec
cld
jmp
push
xor
push
push
imul
jmp
popf
push
jae
add
add
mov
test
aas
lret
dec
enter
adc
sbb
adc
loopne
push
sub
pushl
stos
add
xor
rorl
mov
adcl
cmpsl
xchg
and
mov
push
inc
icebp
mov
or
mov
xchg
xor
call
cmp
push
dec
adc
mov
pop
cld
pop
mov
mov
push
jns
call
shlb
cmp
stc
mov
lcall
add
lret
iret
pop
into
and
shrl
daa
or
stc
pusha
adc
cld
adc
mov
inc
sbb
jle
das
sub
jecxz
jmp
pop
sub
mov
push
neg
cltd
sbb
mov
and
mov
and
add
call
jmp
mov
call
xor
xchg
push
call
ljmp
xor
fwait
sbb
arpl
xchg
sahf
jge
lcall
nop
cli
cmp
lea
push
gs
jmp
sbb
popl
jge
push
test
xchg
into
sub
sub
insb
and
mov
aad
inc
mov
lock
mov
push
repnz
xchg
lds
pop
and
mov
jg
inc
lods
data16
xchg
adc
inc
cmp
js
sbb
jl
cmp
sbb
rol
sbb
addr16
bound
xor
clc
imul
or
std
frstor
fsts
xor
orb
mov
loop
jbe
add
jmp
ljmp
test
insl
test
popf
or
into
bound
mov
cmp
daa
ljmp
adc
pop
lods
push
cmp
rol
out
and
in
stos
add
xchg
ljmp
push
popa
mov
call
pusha
out
repz
into
addr16
cmp
aam
jmp
pop
mov
shll
aam
repnz
test
inc
mov
sub
test
call
cli
pop
xlat
test
and
xlat
cmp
addr16
into
mov
cld
mov
int3
dec
int3
sahf
mov
xor
mov
stc
bound
push
test
call
dec
loopne
push
clc
int3
sahf
sbb
jp
sub
mov
jle
scas
decl
scas
inc
aam
inc
icebp
test
sbb
leave
arpl
adc
jl
pusha
push
jg
das
icebp
jns
cs
pusha
imul
call
cld
lret
mov
subl
mov
inc
sbb
rorb
pushl
push
test
fisubs
lret
mov
pop
push
sub
sbb
mov
jg
ljmp
roll
ljmp
mov
adc
rolb
sbb
lcall
int3
call
push
adc
mov
pop
ja
dec
pushf
xchg
loope
lcall
or
cltd
imul
je
xor
mov
sar
fisttps
lret
cs
pop
clc
xor
test
jnp
jne
cmp
ljmp
ss
loope
pop
aaa
inc
loopne
or
cmp
outsb
std
cmpsb
push
or
jp
arpl
pop
cli
push
jns
stc
mov
add
shl
out
pop
push
xor
divl
mov
inc
jne
jg
push
cs
movl
rorl
popa
fdivs
push
aad
pop
jnp
mov
dec
add
outsl
xchg
leave
sub
mov
add
rclb
pop
adc
inc
jecxz
xlat
orb
add
call
push
call
mov
outsb
or
inc
or
daa
adc
jne
inc
dec
mov
push
sbb
fcomp
add
aad
xor
out
andb
lods
sub
bound
vmread
mov
adc
mov
int
mov
cwtl
ret
sub
clc
or
inc
mov
adcl
cwtl
push
mov
shll
jnp
pop
repz
cmp
lret
hlt
jle
or
jge
sbb
sbbl
inc
sub
cmp
in
shlb
and
push
xor
into
push
sub
into
jl
das
or
jle
enter
push
pushf
ljmp
mov
orb
je
ret
mov
out
inc
jo
imul
mov
cmp
pop
loopne
push
fcmovb
mov
or
lods
retw
cs
loopne
andb
or
adc
out
push
mulb
xor
pop
adc
lock
ljmp
add
adc
pop
and
push
and
call
sarb
out
loopne
push
imul
adc
inc
add
sub
rorl
out
xor
in
sub
sbb
mov
dec
fcomp
xor
aaa
mov
mov
pusha
sub
roll
cltd
fsub
add
mov
xor
cld
sbb
ds
fcompl
mov
jp
dec
mov
mov
add
or
outsb
rsqrtps
aad
push
xchg
push
mov
bound
mov
sbb
sbb
add
dec
inc
pop
xor
adc
cmpsl
add
scas
int3
out
mov
push
cmp
push
ftst
sub
add
into
in
jb
mov
int
add
inc
inc
sbb
sarb
sbb
adc
sbb
clc
fsubl
push
xor
lock
imul
mov
xor
dec
adc
rcr
add
aad
xchg
shlb
jne
and
xor
mov
fwait
popa
sub
push
les
fwait
xor
fildll
stos
aam
loopne
sub
jnp
outsl
sub
ds
rolb
stc
test
cmp
inc
ds
pushw
fdivrp
incl
mov
sub
rorb
add
fadd
adc
inc
ljmp
incl
out
popa
xor
dec
pmaxub
cli
movsb
lods
jnp
outsl
icebp
fstpl
int
data16
lahf
repz
icebp
repz
pushf
sbb
pop
lcall
mov
jmp
nop
in
std
ret
shll
push
sbb
leave
call
aaa
jno
sti
fs
push
push
cmp
xor
xchg
cmp
mov
fucomp
ss
call
insl
and
lahf
clc
add
dec
mov
xchg
shl
icebp
imul
into
dec
dec
fucomip
push
add
jnp
or
fwait
arpl
dec
mov
sub
popf
inc
loop
ret
pop
aad
jo
insb
cmp
nop
cmc
incb
mov
stos
mov
sub
push
mov
leave
scas
adc
and
lahf
push
out
fs
and
push
mov
and
push
aaa
push
xor
lret
addl
sub
mov
addb
popf
ds
mov
loopne
xchg
mov
mov
lret
sub
ljmp
decl
ljmp
cltd
xlat
mov
out
cmc
scas
push
jl
movsb
inc
icebp
or
aad
incb
clc
jle
pop
sbb
fistpll
dec
dec
cmp
sub
bound
test
decl
mov
sub
inc
addl
dec
pop
sbb
lcall
xlat
lret
or
push
jnp
outsb
xchg
push
and
sub
lods
decl
lret
lods
mov
cmp
sbb
xchg
mov
push
cmp
clc
lcall
and
out
rclb
dec
shrl
les
or
sbb
cmp
fidivl
jge
mov
lret
jno
fs
pop
jg
jmp
clc
push
jp
fildll
mov
mov
jne
xor
iret
push
mov
or
shlb
jb
std
add
mov
call
test
xlat
dec
lea
mov
mov
cmc
test
data16
xchg
add
push
dec
shr
adc
or
or
xor
fbld
jg
ljmp
inc
and
in
scas
das
call
into
push
mov
push
adc
sti
or
int
out
in
leave
imul
and
cmp
mov
xchg
add
cmp
shll
into
not
lods
cmp
shlb
xchg
pop
jp
outsl
cld
lods
or
test
push
jp
pushf
fisubs
sbb
lcall
std
jmp
sti
int
sbb
xor
sti
and
mov
push
test
or
or
call
outsb
mov
adc
lahf
jno
movsb
cmp
lcall
out
xor
call
mov
clc
jecxz
jno
push
push
jl
pop
adc
mov
negb
hlt
pop
jl
jmp
add
lods
daa
jae
mov
mov
stos
fcomps
and
loop
push
sbb
cmp
add
popf
dec
dec
hlt
push
xor
xor
aam
pop
loop
mov
xor
add
ljmp
daa
scas
xlat
movsb
xlat
xor
jo
mov
shlb
lcall
leave
lock
add
add
mov
push
cmp
pop
and
std
mov
test
rcrb
dec
xchg
rorl
xchg
and
fsubrl
les
dec
adc
andb
add
andl
and
inc
insb
dec
shrl
inc
imul
fcom
js
cmp
addb
outsl
mov
pop
fwait
push
xchg
lea
add
push
xor
dec
mov
pop
les
ss
mov
adc
aam
fidivrs
lock
mov
fs
and
or
sub
lods
and
gs
xchg
imul
loopne
rolb
in
and
inc
pop
cmp
aam
popa
add
mov
pop
jle
xlat
stos
and
imul
sbb
loop
not
out
ja
or
ret
and
xor
xchg
inc
and
ljmp
jno
sbb
jge
xor
mov
hlt
dec
jne
test
loop
pop
idivb
lret
or
std
insl
rolb
jae,pt
insl
fistpl
stos
dec
fmulp
xor
mov
add
iret
jmp
fnstenv
dec
xor
insb
mov
inc
and
mov
jmp
cmpsb
mulb
das
into
adc
and
mov
ret
lds
push
stos
call
pop
js
pushf
fsubrs
sub
inc
lock
push
and
popa
add
fisttpl
sarb
xchg
aam
sbb
insl
rcrb
fiadds
out
sbb
add
cs
xlat
pop
outsl
add
mov
xchg
jo
jns
adc
test
and
mov
push
shlb
fmuls
test
mov
in
add
std
pop
stos
outsb
mov
call
in
or
push
push
push
in
js
mov
inc
add
xorl
xor
icebp
sarb
in
xlat
cli
fildll
jnp
add
cmp
cld
mov
pop
gs
jo
cmp
rclb
test
movsb
cli
mov
xchg
movsl
dec
dec
pop
ret
mov
aaa
or
inc
jge
ss
xor
es
add
and
and
cmp
or
inc
and
dec
scas
push
pop
stos
stos
dec
mov
sahf
jo
addr16
and
xchg
lcall
sbb
mov
std
lea
xor
loop
mov
mov
decb
pop
pop
add
fucomip
sbb
inc
dec
add
mov
ljmp
inc
movsl
sbb
fwait
mov
arpl
rorb
pop
cli
jmp
insl
leave
mov
fimuls
or
or
jge
add
cwtl
into
and
inc
jmp
icebp
push
inc
sub
mov
rol
and
nop
add
mov
jg
sbb
add
cs
dec
sub
outsl
lret
ljmp
cld
stos
cli
pop
rclb
mov
dec
xchg
inc
jl
cli
lahf
push
lahf
xchg
push
movsl
add
shrl
sub
test
in
sub
cmp
sub
je
iret
stos
jns
push
push
movsl
mov
or
out
dec
mov
jl
jae
add
lahf
pushl
xor
fwait
ret
push
jb
push
int
mov
and
pop
add
decl
cmp
nop
aas
pop
dec
fisttps
add
xor
xchg
push
xor
fstpt
push
inc
jno
adc
sahf
into
sarb
adcl
push
pop
outsb
imul
mov
adc
cmp
stos
fsubrp
mov
repz
decl
lods
clc
jno
xor
iret
in
mov
in
out
fisttps
call
sbb
mov
lods
imul
fs
mov
test
orl
push
inc
sbb
push
rolb
pop
adc
dec
xor
mov
lcall
ja
in
into
sub
pop
pop
sub
cmp
rol
or
sar
in
adc
cltd
dec
inc
mov
xor
or
and
aas
dec
fimuls
pusha
jnp
cmp
cmp
sar
incl
or
sbb
aaa
lret
movsw
mov
clc
pop
or
mov
das
shrb
lea
or
aaa
std
pop
cmp
repnz
inc
aam
sub
push
jo
jp
inc
push
loopne
cli
decl
mov
push
and
xor
and
cld
mov
xchg
add
shrb
pop
dec
lret
mov
fdivl
lods
out
mov
inc
add
lds
enter
jg
sti
jg
xchg
out
jle
sbb
scas
nop
cmp
ja
mov
ljmp
xchg
xor
pop
push
test
cld
icebp
clc
inc
es
jp
cmp
aad
xor
lock
pushl
jo
inc
aaa
shlb
insb
fbld
es
add
mov
fwait
lea
ds
xchg
fmul
cmpsl
and
mov
jg
push
stos
aaa
leave
inc
subb
movsl
jmp
incl
imul
and
sbb
add
jno
sub
mov
or
add
les
sub
jne
stos
push
orb
push
jle
stos
fucomip
xchg
arpl
jne
mov
test
cmc
jg
xchg
lods
jl
loope
hlt
aaa
push
mov
adc
or
loope
and
insl
shll
call
mov
mov
mov
push
jg
mov
cmp
sahf
mov
adc
out
lea
out
mov
fdivr
incl
rcrl
or
push
insb
xor
orb
add
lcall
and
mov
int3
sbb
xor
and
aam
ljmp
jmp
mul
jg
and
jg
int3
out
lret
repnz
inc
je
adc
push
shrl
ret
call
call
leave
jmp
mov
imul
pop
inc
mov
push
arpl
push
dec
lods
ja
fisubrl
shll
out
pmaxsw
inc
enter
xchg
jecxz
pop
xor
mov
lcall
jl
mov
jmp
mov
addr16
jae
int
jl
sbbl
add
clc
cmp
repz
test
jb
add
jmp
icebp
mov
stc
lock
stc
and
ret
aaa
pop
inc
orb
clc
hlt
stc
add
ret
mov
inc
dec
cltd
push
inc
mov
divl
movb
sub
sbb
mov
dec
cld
decl
pop
xor
mov
popa
add
filds
rcl
sbb
call
jo
lock
enter
xor
cmp
aad
mov
insb
mov
xchg
mov
xchg
and
sbb
pop
clc
call
dec
dec
xorb
lods
aaa
jno
js
pop
mov
clc
sub
cmp
outsb
lds
jb
dec
sbb
ficoml
push
cmp
cmc
dec
out
pop
push
inc
mov
in
push
adc
or
in
stos
adc
xchg
incl
das
arpl
push
sub
lds
dec
fs
mov
jl
sbb
sub
nop
jg
stc
cmp
test
lds
rcll
xchg
xor
mov
add
sub
push
mov
mov
fistps
addb
dec
push
dec
sub
shrl
mov
sbb
loope
data16
xor
call
xchg
out
mov
loope
sub
cmpsb
sub
jmp
fcmovu
outsb
add
jp
cmp
movsl
jo
xchg
icebp
loope
sbb
adc
popf
leave
lahf
mov
in
movsl
dec
pop
add
in
pop
jg
xor
push
or
lods
and
in
gs
add
xor
clc
dec
dec
rcrl
add
rcrb
js
rorb
lahf
jno
jle
lds
or
cmp
lock
cwtl
adc
mov
sbbb
cmp
icebp
bound
pop
inc
or
jmp
clc
test
js
add
add
push
rcll
push
inc
mov
fadd
or
fwait
ljmp
jnp
xor
rorl
jl
fstpt
inc
jl
or
paddusb
and
cld
pop
add
cmp
aaa
xor
cmp
ret
sbb
iret
mov
pop
add
fldl
dec
pop
push
lods
or
aaa
sarl
scas
mov
sbb
or
pusha
add
je
fstpl
xor
mov
lahf
pop
mov
mov
add
pop
xchg
jo
jg
or
inc
sub
push
les
insb
insl
test
sub
sbb
shrl
xor
repz
loope
test
fcmovu
imul
mov
mov
mov
pop
add
xchg
out
pop
xlat
mov
hlt
pop
or
cmp
xchg
adc
fldenv
adc
push
filds
int3
or
push
mov
test
xor
adc
cmpsb
sbb
or
into
or
xchg
jb
fsubl
fsubs
jl
sbb
lock
add
push
loope
loope
lock
or
icebp
pop
inc
out
popa
ret
adc
test
jb
adc
adc
xchg
adc
fcmovu
inc
dec
hlt
add
adc
cmp
cld
and
jbe
mov
jp
in
mov
or
xchg
add
hlt
inc
sbb
lea
sbbb
pop
mov
mov
mov
mov
enter
cli
int3
shll
inc
lret
icebp
in
sub
fcmovne
cs
std
mov
cmp
loopne
xchg
or
xor
shlb
or
fsubl
test
and
movsb
sarb
xchg
sub
insb
fcmovbe
add
dec
add
jmp
ret
xor
or
ficoml
sbb
aam
ja
jle
add
imull
add
inc
add
dec
mov
add
test
jl,pn
and
addb
and
fs
loopne
sub
lret
mov
jecxz
xor
add
cli
xor
stc
nop
pushl
dec
cmpsl
fs
les
jbe
pop
movsl
dec
clc
enterw
mov
incl
les
daa
sbb
xchg
cli
dec
test
cltd
mov
fistpll
adc
jg
or
loopne
enter
fwait
cmp
pop
xchg
rorb
je
sar
mov
add
push
jbe
jbe
push
xchg
push
dec
cltd
loope
xchg
jae
rorb
xor
pop
inc
icebp
lcall
ljmp
call
mov
stc
shrb
or
fcmovbe
jnp
mull
inc
call
mov
in
pop
cmp
inc
mov
adc
mov
call
je
push
jle
fdivrp
cli
lods
fisubl
outsl
sahf
ret
pop
ds
xor
dec
incl
xchg
and
out
push
push
loope
jmp
mov
pusha
stc
not
push
ret
inc
push
ds
jno
outsl
inc
mov
dec
inc
jnp
sub
inc
push
sub
mov
pop
mov
cmp
jl
add
stc
mov
arpl
loop
roll
ljmp
push
jecxz
fwait
mov
xchg
push
pop
cmp
idiv
add
icebp
or
loopne
repz
xchg
mov
mov
rcr
arpl
std
pop
clc
rcll
xchg
xor
in
sbb
mov
sub
jg
incl
xchg
lcall
inc
mov
or
inc
imul
iret
jg
ljmp
cmc
lock
xor
lea
sub
xchg
inc
shrl
jp
lods
xor
or
stos
jo
pop
clc
fisubs
test
fdivrl
sbb
jnp
sarb
push
sti
fmull
aas
push
aaa
lods
cmp
or
push
and
stc
int
insb
or
jb
lea
pop
cld
clc
stos
rcl
int3
sbb
out
xor
cmc
mov
fs
mov
scas
sub
add
lock
mov
rcrl
adc
in
lods
sub
mov
jg
mov
mov
mov
mov
ja
mov
mov
aad
sar
add
jle
cmp
cld
orb
outsb
cmpsl
inc
xchg
jns
loopne
sbb
jbe
dec
jl
add
incl
repz
push
insb
loopne
es
rcrl
fsts
icebp
xor
or
pop
push
adc
pushl
pop
jb
sub
lea
iret
dec
mov
out
cmpxchg
arpl
xchg
cli
cmp
xchg
cs
mov
or
push
xor
xchg
or
add
jp
xchg
push
gs
dec
fnstsw
bound
ds
ljmp
daa
cmp
adc
stos
adc
daa
jno
xchg
push
sub
mov
fisttpl
cmp
xlat
jne
sbb
mov
lahf
adc
sahf
fwait
clc
shr
adc
mov
pop
or
add
popf
add
lods
pop
loop
clc
aaa
cli
pushl
fisttpll
dec
mov
xchg
mov
lcall
je
sub
insb
xchg
add
scas
pushf
inc
inc
xor
jns
in
movsl
aaa
aam
adc
stos
in
syscall
int
cmpsl
sbbb
cmpsb
pop
cld
pop
mov
cwtl
cwtl
jmp
xor
add
into
jge
pusha
mov
mov
fcmovnb
and
out
pop
mov
into
xchg
fisubl
jmp
les
mov
les
mov
jg
sub
dec
ljmp
repz
xchg
cs
jmp
and
ret
cmc
movsl
xor
or
lcall
push
mov
cmpsl
sbb
lret
push
push
sarl
or
call
xor
pop
popa
sbb
add
sbb
cli
mov
jb
decl
adc
ljmp
pop
mov
outsl
and
hlt
and
pop
enter
jb
lds
popf
mov
jg
clc
mov
aaa
xlat
nop
fwait
lcall
sti
test
mov
sbb
sub
out
and
jb
bound
sti
sarl
mov
dec
std
mov
mov
jecxz
jnp
push
arpl
xchg
mov
pop
rcr
in
push
sahf
mov
ret
jmp
std
inc
daa
xorl
jbe
jg
icebp
xor
push
and
arpl
mov
aaa
mov
decl
lcall
movsl
cmpsb
ja
pop
adc
xchg
cmp
push
mov
insb
dec
push
das
adc
out
xchg
and
das
je
dec
xchg
test
jecxz
push
test
inc
call
sbb
out
mov
cld
faddp
jno
and
stos
dec
fs
and
pop
pushl
inc
pop
in
enter
inc
dec
insb
push
fs
sbb
call
addr16
sub
rep
mov
leave
adc
sahf
dec
scas
hlt
jp
aas
cld
jbe
cmc
lcall
adc
sbb
jmp
and
shlb
loop
fnstcw
or
dec
and
pusha
ds
jne
icebp
pop
insb
cmpsb
mov
lea
int
and
imul
decl
dec
loopne
xor
incb
inc
aaa
pushf
mov
iret
test
push
decl
inc
push
pusha
aam
fwait
dec
in
fsub
stos
inc
dec
cmp
js
loope
cmpsl
lock
cmpsb
mov
aam
sbb
clc
sbb
in
push
repnz
aas
cmp
test
sub
push
inc
cmp
cmp
cmp
or
es
dec
jmp
int3
dec
xor
jb
xchg
xor
inc
das
aam
es
sub
cli
xor
sbb
mov
sub
jl
cmp
cmp
sub
mov
jmp
test
leave
jl
in
mov
ret
mov
mov
cmp
call
cmpsb
ljmp
ret
ror
lcall
out
out
arpl
sub
std
xchg
sbb
xchg
sbb
mov
pusha
sahf
insb
xchg
in
aad
test
mov
mov
jg
jmp
mov
mov
test
xor
cmp
aas
imul
jmp
xchg
ds
scas
ds
mov
mov
jno
and
roll
jg
sub
mov
adc
xor
rcrb
rcll
or
pushl
int3
dec
pop
push
mov
jl
out
dec
enter
push
incl
call
add
loopne
mov
xor
rcll
sbb
xchg
push
ljmp
imul
mov
test
jno
pop
add
fucomip
rol
lcall
cmp
add
mov
shrb
scas
sbb
sbb
push
cli
push
pop
pop
pop
cli
ljmp
cmp
mov
mov
lock
int3
cmp
adc
mov
jae
int3
push
xor
lcall
pop
push
out
lods
jl
shl
jae
jecxz
push
push
test
lods
lahf
inc
mov
jnp
fldt
cld
mov
mov
adc
shlb
push
out
cli
push
mov
pop
sbb
mov
sti
inc
aad
or
sub
mov
mov
into
in
sub
fwait
in
jle
fucomip
dec
icebp
pop
or
inc
pop
pop
inc
popf
fsubl
jle
sub
jmp
pop
mov
mov
in
ret
mov
pop
and
push
dec
pop
pop
test
fwait
mov
cmp
ljmp
push
push
and
mov
xchg
adc
popf
test
scas
inc
popf
cmpsb
popf
jg
imul
divl
xchg
aaa
mov
imull
mov
and
jg
lea
addr16
adc
mov
out
mov
call
cli
dec
push
sbb
mov
out
jg
and
xchg
lret
fadds
popl
pushl
pop
clc
jns
pushf
lret
jl
scas
dec
in
loope
sti
cs
lcall
and
fists
pop
cmpsl
jle
add
xchg
sub
dec
subb
int
push
fsubrp
mov
cmpsl
pop
or
xchg
lods
push
adc
jle
outsb
dec
adc
test
dec
mov
lea
push
xor
fiaddl
pop
and
fildl
addr16
rclb
shr
mov
cli
or
xor
sbb
add
sbb
inc
outsl
ret
int3
inc
rorb
arpl
push
aam
xchg
xor
std
add
sbb
fs
adc
add
cli
lcall
xor
inc
push
xor
in
sub
adc
xor
xor
xchg
mov
fst
or
scas
rorl
loope
jge
and
push
xlat
push
lret
or
sub
add
mov
mov
shlb
mov
movsb
inc
mov
dec
push
shlb
lcall
lret
jge
pop
pop
fldl
into
sbb
pusha
push
out
arpl
in
arpl
dec
insb
out
aad
rolw
cmp
and
pusha
js
pop
movsb
icebp
push
xor
pop
fadd
sub
fidivrs
mov
test
and
add
lods
mov
cli
loope
lods
fisubrs
xor
rcll
ds
mov
dec
stos
fstpl
mov
pushf
xor
cli
test
stc
mov
cltd
js
lahf
inc
pop
sub
test
add
sbb
mov
xchg
lcall
add
push
mov
fcmovbe
or
inc
pop
stc
xor
mov
push
xor
cmpb
out
sahf
adc
inc
test
push
pop
ja
es
and
fmul
es
std
incl
imul
jp
push
pop
jp
insb
fistpll
sbb
ljmp
hlt
lcall
add
out
icebp
adc
lea
outsb
arpl
les
lods
pop
cmp
pushw
pop
fidivs
lea
fbld
adc
es
test
mov
aaa
jne
cmp
lcall
fistl
aaa
mov
inc
dec
iret
jl
mov
shll
stos
cld
aaa
cmp
jg
insb
pusha
clc
sti
icebp
jg
cwtl
cmp
pushf
dec
mov
scas
das
hlt
decl
or
lcall
add
out
pop
push
push
jecxz
push
fsubr
push
xchg
loopne
mov
cmpsl
mov
xor
push
ficoms
enter
test
mov
imul
clc
mov
mov
pop
push
das
icebp
inc
jae
test
call
cmpsl
fdivr
ljmp
popf
xchg
inc
mov
cld
mov
xor
inc
fidivrl
stc
test
clc
and
adc
sar
jmp
xor
insl
fmull
fisttpl
or
lcall
jl
inc
push
and
imul
leave
sbb
fisubs
adc
popl
sub
add
lcall
mov
outsb
pop
sub
ljmp
add
jg
enter
and
enter
fldenv
mov
lock
rorb
test
push
lds
push
cmpl
sbb
sbb
xchg
lea
ljmp
sub
or
bound
fcoml
push
sub
cmc
jnp
cmc
mov
call
cli
mov
sub
sahf
mulb
cs
std
cmc
notl
lods
push
sar
call
out
stos
pusha
cmp
jne
jb
out
fimuls
xchg
cmp
mov
movsb
jecxz
cmp
cltd
sti
mov
ljmp
push
jo
aad
fwait
insl
cmc
lcall
sbb
adc
inc
decb
jb
cli
cltd
fidivs
aas
sarb
hlt
mov
cmc
call
mov
mov
sub
pop
mov
fmull
push
or
add
jecxz
out
jo
jnp
in
jg
fs
xor
pop
mov
outsb
push
scas
add
scas
mov
clc
mov
insb
sahf
inc
cmp
in
loop
pop
imul
pop
jbe
mov
arpl
mov
ljmp
cmc
pop
popw
subb
inc
and
lds
lock
ljmp
stos
scas
xor
pop
fs
xor
mov
iret
xor
nop
stos
jmp
mov
xchg
xorl
es
mov
in
adc
fcoml
jae
mov
lods
jmp
imul
fbstp
adc
and
ja
call
ljmp
hlt
jnp
add
fs
ljmp
rorb
arpl
repnz
out
incl
ljmp
xchg
popl
mov
in
push
mov
std
or
imul
jecxz
mov
shll
jg
cld
popf
add
xor
ljmp
ljmp
mov
repnz
arpl
pushl
into
pop
xchg
lret
mov
stos
add
je
push
repz
inc
xchg
je
jg
or
pop
ret
rcl
ret
pop
mov
push
cmpsl
jbe
mov
adc
aas
cmp
mov
push
adc
xchg
mov
fs
fs
adc
xchg
or
add
ljmp
mov
dec
icebp
and
out
cwtl
sub
test
mov
cltd
add
jbe
jl
aas
jmp
insl
sahf
jg
incl
popf
dec
dec
call
rol
xorl
cmp
jle
stos
push
call
cmp
out
xor
sub
push
out
scas
mov
mov
dec
xchg
js
jg
loop
std
jg
pushl
pusha
push
cmp
sub
mov
xor
outsb
lret
xchg
dec
dec
cld
decl
aam
inc
adc
pop
adc
push
decl
jp
mov
mov
jl
insl
sbb
and
add
sbb
jg
sub
ja
xor
loopne
ficompl
clc
dec
sbb
je
dec
rolb
icebp
mov
lcall
decb
mov
xor
xchg
jmp
xchg
mov
xchg
shlb
in
lcall
inc
push
rcll
popf
mov
xchg
pop
dec
jg
push
or
sarb
ficomps
repnz
ljmp
lock
pop
xor
insl
jl
push
aaa
ret
int3
fdivrs
fsts
out
lahf
in
mov
ret
mov
in
in
push
push
mov
leave
mov
mov
mov
mov
fsubr
xlat
sub
dec
inc
cmp
push
popf
les
inc
outsb
repnz
push
ja
mov
scas
fs
lcall
mov
dec
pop
inc
aam
xor
cmp
cli
cmp
out
inc
out
push
arpl
xchg
cmc
xor
inc
jnp
xchg
sub
jge
push
xchg
mov
lea
enter
jmp
mov
xor
pop
inc
pop
loope
sbb
lods
sbb
adc
fneni(8087
cwtl
sbb
pushl
dec
jno
or
adc
mov
and
incl
out
mov
out
cmpsb
addb
mov
test
outsl
decl
fwait
xchg
out
shrw
mov
and
scas
fildl
pop
mov
jg
xchg
cli
push
mov
js
lcall
xchg
push
data16
fldl
jg
fldenv
add
push
rcr
mov
mov
sub
loope
cld
lcall
mov
mov
pop
stos
xor
insl
xchg
popf
mov
and
xchg
out
jmp
pop
sub
sbb
jno
adc
dec
cld
mov
repnz
pop
test
sbb
sahf
xor
add
cltd
hlt
inc
inc
mov
daa
ss
in
cmc
lcall
sub
pop
clc
jmp
divb
addb
dec
movsl
addr16
in
shl
sbb
sub
mov
int
dec
push
fs
aad
mov
cs
add
ret
movsb
add
dec
daa
or
imul
inc
push
adc
orb
push
stos
daa
inc
iret
cmpsb
xchg
cmp
lods
icebp
hlt
in
fisttps
jg
sahf
shl
cmpsb
ret
mov
and
and
dec
pop
int
adc
iret
cmp
sub
pushl
mov
xchg
js
xchg
pop
xchg
pop
sub
xor
xor
mov
call
andb
pop
xchg
lret
push
test
pop
scas
push
inc
ljmp
xchg
sbb
test
or
fidivrl
sti
or
pop
loopne
cmp
dec
addr16
orl
xchg
xor
pop
cs
mov
push
sti
sub
lods
lock
xor
adc
inc
xchg
adc
inc
fucomi
fadd
mov
pushf
push
fcmove
sub
xchg
pop
pushf
mov
lahf
sbb
daa
aam
pushl
mov
sub
cli
cmpsb
sbb
inc
dec
adc
adc
push
sub
icebp
jnp
ret
cmp
mov
jmp
incl
xor
loope
loop
cltd
es
add
sti
je
fwait
dec
les
movsl
incl
pop
movsb
das
js
mov
jg
test
cmp
rorb
adc
dec
bound
rolb
push
fs
inc
out
pop
mov
ds
fsubrp
in
adc
dec
inc
jg
cmc
ljmp
cmpsl
push
mov
into
ja
mov
sub
call
call
out
or
xchg
and
or
fld
pop
xor
jl
cwtl
bound
incl
sbb
stos
std
incl
out
mov
insl
adc
ljmp
or
imul
rcll
clc
and
cld
sbb
mov
pop
mov
sbb
xchg
jbe
or
subl
mov
mov
inc
lahf
pop
les
jp
fcmovu
xor
decl
push
mov
cs
xor
test
aam
dec
fisttpl
lock
iret
mov
xor
lea
ljmp
cmp
ret
and
rorb
jp
xor
mov
push
popf
sub
mov
mov
xchg
movsb
adc
push
lea
xchg
cli
pushl
mov
cmpsb
popa
push
jp
and
cmp
add
out
ficomps
mov
mov
incl
cmp
fisubs
rcrb
inc
popf
mov
out
push
mov
sub
push
movsb
inc
icebp
add
aad
sbb
clc
mov
sbb
jbe
pop
stos
insl
and
cmp
ret
mov
lock
and
ljmp
mov
lahf
xor
fmull
mov
and
into
sbb
sub
sbb
incl
ret
and
or
jl
clc
dec
push
neg
ret
lods
das
add
test
in
mov
incl
cltd
dec
dec
dec
aaa
xor
adc
xchg
sbb
arpl
pop
dec
stc
mov
mov
loopne
jmp
jmp
mov
and
movsb
rcrl
xor
push
mov
fcmovnbe
dec
add
xlat
aam
adc
bound
push
into
cmp
cmp
adc
add
lcall
fimuls
popa
ja
ds
add
xchg
out
sbb
push
mov
mov
fstpt
sarl
push
leave
outsl
mov
jo
mov
sub
pop
push
mov
mov
push
out
bt
inc
mov
adc
xchg
jp
shll
cmp
fiaddl
pop
add
adc
es
gs
mov
add
or
test
iret
add
sbb
or
out
pop
inc
icebp
aad
mov
mov
and
lahf
sbb
ds
orl
ret
cli
or
or
sub
push
adc
xchg
xor
pop
dec
roll
adc
xor
test
xchg
inc
xchg
push
mov
inc
shr
adc
mov
add
stos
dec
std
stc
stc
scas
add
cmp
mov
outsl
scas
loop
pop
pushf
lock
pop
data16
shl
shrl
mov
out
cmp
cmp
or
mov
sub
inc
and
test
scas
enter
fisubs
push
mov
and
bound
fldenv
test
pop
pop
xor
insb
push
push
mov
loop
faddl
int
fbstp
and
jo
xchg
pop
enter
mov
and
push
mov
cmpsb
inc
fnstsw
pushl
or
das
lea
insl
repnz
aad
jl
fxch
fdivr
popf
xchg
pop
aam
cmp
dec
scas
inc
outsb
mov
stos
cs
pop
mov
push
cmp
fwait
jmp
mov
repz
ret
mov
cmc
testl
jb
push
ss
sbb
daa
or
push
data16
pop
adc
pop
cld
mov
xchg
clc
insl
add
movsl
push
push
push
push
pushf
out
dec
loope
in
mov
jmp
inc
mov
inc
enter
stos
mov
sub
das
hlt
out
cmpsb
incb
bound
imul
xchg
sbbb
pushl
movsl
add
ret
cmp
cmp
xor
mov
aam
mov
jp
push
fmul
jmp
iret
xchg
push
cli
clc
cld
in
mov
mov
jmp
xchg
or
mov
dec
lret
out
fdivrl
jge
mov
ljmp
jbe
mov
push
mov
jp
lea
icebp
push
mov
pop
std
rcrb
int3
lock
cmp
and
inc
jae
int
mov
mov
dec
insl
ljmp
pop
frstpm(287
loopne
sbb
ja
mov
in
aad
adc
jecxz
mov
lret
jle
out
inc
sub
adcb
ja
iretw
xchg
push
cmp
push
lock
ljmp
and
fiadds
or
sub
mov
or
ljmp
inc
add
sub
into
pop
nop
mov
or
xor
fnstcw
jecxz
adc
xlat
cmp
lcall
pop
sub
pop
push
aas
enter
dec
pop
loop
std
fcompl
xor
xor
mov
cmpl
repnz
insl
sbb
sub
decl
sub
ds
mov
insl
jns
and
sbb
stc
outsl
sub
out
in
jge
pop
les
mov
repz
in
xchg
test
cmp
out
lods
pop
xor
std
sub
xchg
mov
repnz
test
fidivrs
pop
inc
mov
pop
sub
cmp
call
clc
push
push
in
cld
sahf
out
push
data16
push
sub
inc
out
andb
sti
int
lcall
mov
adc
push
in
mov
xor
mov
test
dec
inc
call
cs
xchg
pop
xchg
in
jp
and
cmp
out
pop
loop
inc
mov
inc
push
cmpsb
or
inc
cmp
leave
aaa
fimuls
out
decl
sub
stc
and
cli
outsb
imul
sub
pushl
jb
push
rorl
in
push
lock
ljmp
inc
or
adc
call
jmp
fs
cmp
sbb
andl
sti
ljmp
icebp
xor
xchg
in
mov
int3
leave
rolb
out
jg
scas
lods
pop
andl
pop
inc
in
pop
push
cmp
hlt
in
ljmp
cmc
fildll
cmp
push
rcll
xchg
mov
sub
ljmp
loop
add
mov
adc
enter
dec
ljmp
xchg
or
cli
dec
and
or
xchg
dec
lods
jecxz
ljmp
mov
xchg
push
cmp
movsb
imul
cmp
or
loope
ljmp
icebp
or
inc
insl
lea
push
mov
fsubrp
sub
cmp
cli
lcall
scas
jno
nop
das
orl
imul
aaa
lcall
das
rorl
mov
sar
push
mov
jmp
test
jbe
dec
scas
shlb
jnp
xor
fucomip
jae
dec
dec
aam
mov
jge
jmp
test
inc
inc
jbe
jns
pusha
xchg
mov
sub
dec
adc
or
or
xor
mov
sub
into
xor
jmp
pop
popf
test
loope
adc
sbb
jmp
or
clc
cmpsl
jmp
call
inc
mov
dec
mov
adc
and
clc
decl
sbb
popf
movsl
scas
jp
sbb
mov
daa
add
incl
out
cmp
inc
xlat
sub
inc
ds
int
pop
cmp
scas
and
das
ficoms
adc
xchg
sbb
js
xor
pop
scas
jbe
rol
call
test
gs
test
pop
mov
out
lret
arpl
fdivr
je
ja
mov
stos
lcall
inc
das
dec
sub
addr16
cltd
pushf
rcrl
inc
js
cwtl
into
push
cli
out
out
lea
push
stos
sbb
aam
ds
outsb
addr16
fnstenv
mov
into
lcall
pop
sahf
pop
fwait
lret
stc
sbb
push
iret
and
into
sub
das
add
dec
inc
mov
in
rorb
inc
neg
xor
mov
in
es
jg
fadds
add
push
rcl
lret
mov
daa
push
inc
jmp
mov
push
imul
insl
cld
idiv
call
lods
mov
dec
aas
mov
pop
inc
mov
das
mov
popf
pop
add
mov
add
lahf
hlt
jmp
xlat
push
and
int
pop
pop
loop
loopne
negl
jno
out
cli
pop
popf
in
out
add
cmpsb
shl
das
cld
fists
mov
mov
daa
mov
stc
push
fwait
aad
cmc
mov
adcb
mov
stos
mov
pop
daa
test
in
mov
test
or
push
jae
aad
ljmp
fwait
inc
push
sar
push
popf
fs
push
push
xor
sbb
mov
xchg
mov
orl
jge
inc
movsl
dec
nop
orb
sar
incl
mov
inc
lret
push
mov
out
sub
call
or
push
push
pushf
mov
lea
dec
mov
fidivrs
icebp
sti
jmp
icebp
sbb
dec
sbb
xchg
inc
inc
adc
rcrl
out
ret
lods
adc
sub
and
outsl
lock
incl
inc
xchg
loopne
loopne
cs
adcb
in
ret
pop
mov
hlt
incl
idiv
mov
rolb
xchg
out
sub
jmp
jb
cld
daa
mov
in
icebp
or
jb
test
jl
pusha
int3
fucom
call
sub
subl
ljmp
in
push
mov
sub
clc
into
lods
pop
hlt
lahf
sub
incl
lods
mov
xor
mov
dec
pop
push
dec
shlb
incl
inc
divl
das
add
pusha
pop
cmpsl
loop
leave
call
sarl
sbb
mov
dec
inc
iret
mov
mov
sbb
test
mov
push
scas
pop
jnp
jmp
or
pop
call
adc
xor
xor
shlb
lds
or
push
sbb
adc
jmp
push
xor
jecxz
or
xorb
cltd
lret
outsl
std
pop
clc
jo
cmc
mov
enter
xchg
in
loop
or
ljmp
fcmovb
jecxz
push
lahf
cmp
adc
mov
jb
inc
sbb
jmp
decl
mov
push
pop
hlt
adc
jmp
adc
lret
jg
fistpll
inc
aam
ss
mov
mov
cmp
mov
sahf
inc
add
mov
cmp
imul
jge
xlat
ret
cld
movl
pusha
std
pusha
scas
sbb
cli
aaa
fisubrs
ljmp
repnz
stc
int3
in
arpl
mov
sbb
int
mov
dec
lea
lock
stos
and
sub
push
xchg
push
js
push
xchg
cmpsl
mov
out
pop
sub
inc
stos
cmp
or
jns
add
pop
cmp
pushl
xor
call
ret
rorl
dec
mov
mov
pop
mov
mov
or
mov
loopne
inc
ret
cli
lcall
push
jmp
mov
out
add
shrb
mov
pop
popf
inc
aaa
in
mov
mov
or
pop
loope
imul
mov
out
dec
je
incb
lret
mov
jbe
sub
test
test
cmp
cmpb
add
sub
mov
cmp
dec
mov
into
fbld
jnp
dec
decl
push
mov
je
xchg
xchg
cltd
shl
ret
aad
sahf
ljmp
cmpsb
fstpt
or
push
stc
sbb
cmp
leave
push
ret
fistl
jbe
test
xchg
jb
fdivr
jmp
dec
push
dec
mov
cmp
decl
mov
push
push
stc
aaa
popf
nop
sahf
inc
cmp
push
repz
sbbb
mov
cli
clc
roll
ja
in
shrb
enter
loope
dec
jae
data16
call
je
push
mov
stc
fcmovnb
pop
jge
in
pop
lahf
and
mov
lcall
jb
inc
cmpsl
in
and
mov
dec
aad
jp
fcomip
add
nop
jmp
test
pushl
cwtl
xorl
lret
mov
movsb
pop
cmp
fsts
push
jno
imul
pop
sub
shll
jne
les
pushl
jb
dec
cmpsb
push
insb
sarl
mov
xchg
fstl
cmpl
outsb
into
rolb
or
jg
mov
repz
testl
or
test
ljmp
arpl
jb
xchg
gs
imul
add
loop
aad
pop
jg
stos
pop
mov
xchg
icebp
add
xchg
jno
push
ljmp
jmp
mov
jae
adc
test
lods
mov
aam
xor
incl
and
dec
sub
aam
dec
mov
add
test
roll
add
inc
lcall
adc
or
fiadds
mov
leave
aam
jle
js
pop
popa
or
test
pop
mov
or
sbb
pop
popf
push
xchg
inc
ljmp
bound
fwait
inc
jo
stc
and
mov
movsb
inc
loopne
sub
jne
fbstp
and
stos
inc
cmp
test
xchg
push
sub
sub
scas
aad
or
sbb
mov
pop
ljmp
xor
xchg
pop
aam
fiadds
fdivrp
repz
aam
mov
loopne
add
push
test
or
adc
mov
repnz
adc
aad
aad
adc
dec
movsl
aam
cli
in
pop
add
sub
cli
dec
rorl
adcb
testb
inc
inc
or
sti
mov
out
push
adc
mov
mov
mov
push
jge
cmp
mov
movsb
push
vsqrtsd
into
clc
pop
call
je
add
test
sub
push
and
iret
or
push
dec
js
ljmp
sti
mov
loopne
and
add
addb
fdivr
decb
lcall
sbb
push
addb
addb
adc
mov
xchg
and
or
push
ljmp
loopne
rorl
xchg
inc
jo
or
test
test
adc
mov
mov
or
dec
mov
lds
testb
jbe
lret
test
insl
or
shl
jo
dec
cld
fucomip
adc
je
neg
cmpsl
xchg
xchg
and
popf
pop
sub
pop
or
roll
outsl
or
adc
mov
or
out
jmp
popf
setne
lock
fisubs
es
imul
mov
movl
jp
xor
lods
mov
or
cmp
dec
cmp
sbb
test
dec
ljmp
cld
mov
adcb
dec
adc
jo
repz
dec
mov
pop
aaa
clc
xchg
pushf
or
lcall
pop
enter
sbbb
mov
dec
sti
es
jmp
in
push
movsl
incl
lds
sbb
push
sbb
lock
sbb
mov
push
mov
or
push
sub
inc
mov
fnstcw
jne
lds
ds
lcall
test
push
jo
adcl
xor
enter
movsb
daa
stc
pushl
ret
rorl
push
sbbl
push
fnstcw
clc
ljmp
cmc
clc
ja
pop
and
and
std
and
and
pop
hlt
cmc
insl
inc
pop
sub
adc
mov
inc
xor
pushl
sbb
pop
or
push
jmp
repnz
add
inc
stos
mov
nop
mov
out
int
mov
jp
jae
push
ret
call
sbb
test
test
or
clc
cwtl
out
xchg
pushf
mov
ficomps
call
push
dec
xchg
cld
adc
xchg
cwtl
xchg
sub
aaa
mov
and
ljmp
lock
rolb
lock
mov
jmp
out
push
adc
test
xor
cmp
xor
pop
sub
xor
push
jae
int
push
movsl
insl
jle
fnstenv
jg
jmp
xor
sahf
rcrb
lods
push
outsb
test
mov
shrb
aaa
sub
ljmp
in
test
cwtl
push
mov
xor
mov
sub
inc
enter
lcall
loope
adc
dec
subb
daa
xchg
aam
xor
mov
in
push
add
dec
inc
push
rorl
ret
mov
or
cmp
or
mov
ret
or
inc
fsubrl
jecxz
sbb
mov
xchg
hlt
inc
jl
lods
or
pop
inc
sub
inc
xor
adc
aaa
rclb
mov
mov
push
call
fdivl
stos
out
sub
add
add
pop
and
mov
and
and
xor
adc
hlt
adc
add
leave
xchg
mov
fidivrl
or
sarb
aas
mov
mov
mov
pop
hlt
and
mov
inc
inc
jmp
or
shll
adc
imul
dec
mov
cld
pop
ret
int3
int
push
xchg
loop
fcom
fs
xor
scas
mov
push
inc
cmp
mov
pushf
adc
daa
or
sbb
and
mov
mov
sub
rol
mov
sbb
push
adc
daa
ljmp
repz
pop
testb
inc
and
and
test
xchg
push
mov
adc
mov
cwtl
mov
mov
jl
inc
inc
pushf
add
cmp
mov
mov
daa
add
or
dec
cwtl
inc
jne
or
addl
sub
sub
pusha
jge
sbb
int
fsubrp
js
ret
adc
push
sub
pop
lret
add
adc
inc
int3
ss
cmp
inc
mov
adc
add
inc
idivl
or
ret
dec
xor
lods
sub
push
fcomp
add
add
clc
push
call
adc
pop
fcomi
sbb
cmpl
shll
not
dec
push
les
icebp
or
fistpl
repnz
adc
mov
dec
adc
sbb
or
sti
add
xchg
into
fsubl
sarl
lods
ljmp
pop
add
mov
jns
ds
xchg
cs
aam
sti
pop
repnz
or
aad
enter
out
lcall
bound
ret
sub
sbb
lea
je
sub
incl
loop
aam
cmp
push
dec
sbb
sub
shlb
xchg
mov
sbb
popf
mov
xchg
sbb
and
addr16
jg
stos
mov
je,pt
jbe
sub
shrb
or
inc
dec
fwait
or
ret
inc
lahf
mov
clc
xor
cmp
or
inc
push
mov
loopne
pushl
and
stc
add
test
adc
add
push
mov
imul
jmp
jmp
pop
js
out
bswap
mov
test
or
or
pushf
repz
push
in
inc
mov
popf
jnp
jne
cmp
aam
xor
xor
lods
mov
cmpsl
gs
dec
shrl
xbegin
lods
or
andb
popa
loopne
fcomp
add
jne
call
mov
idiv
dec
fsubl
push
jnp
add
addr16
jle
aas
int
or
aam
lret
fdivr
pushl
out
lds
cmc
dec
mov
mov
mov
mov
adc
sub
fdivrs
inc
xchg
xchg
insb
shl
mov
decl
lcall
mov
cmp
int3
jo
sarl
jo
xor
jmp
or
sub
pop
movsl
in
xchg
mov
xor
push
jp
leave
ret
pop
lods
orb
andb
inc
sub
xlat
enter
sbb
lock
mov
and
xchg
jns
jg
ret
inc
pop
incl
aas
mov
jmp
push
sbb
or
inc
jno
cli
dec
mov
dec
ljmp
lock
push
ret
in
int
dec
dec
inc
imul
cmp
int3
xor
sar
or
cmpsb
inc
in
jbe
outsl
cwtl
xchg
icebp
rcll
inc
mov
or
adc
decl
ljmp
addr16
shlb
xor
int3
dec
popf
push
inc
push
jp
sahf
pop
push
mov
push
std
mov
icebp
jo
xor
test
iret
xchg
loop
fbstp
and
mov
dec
lcall
cmp
sbb
pop
pop
sbb
mov
mov
cli
lcall
pusha
lea
mov
dec
ds
pop
mov
sbb
jl
cmp
movsl
call
into
cmp
jg
jmp
mov
call
jmp
dec
cli
arpl
inc
dec
call
dec
inc
or
je
scas
push
cs
aad
jns
mov
pop
xor
fstps
jp
aaa
mov
adc
fs
test
push
mov
mov
sbb
pop
jmp
xor
incl
call
scas
mov
xlat
ficompl
jb
jo
notb
loopne
or
lcall
inc
xchg
out
fdivrl
inc
test
and
jbe
movsl
or
int3
jno
in
jne
cmp
movsb
test
push
pop
ds
jecxz
cmp
out
scas
vpmacswd
sar
adc
lock
mov
mov
imul
shrl
add
push
leave
loop
push
lcallw
lock
out
and
insb
xchg
jae
pop
std
in
ret
jns
sub
xchg
decl
pop
push
clc
sub
cltd
push
clc
mov
pop
and
call
addr16
mov
je
into
or
and
ljmp
insb
mov
lock
jmp
jge
jno
stc
or
add
jae
movsl
add
faddp
ds
mov
push
mov
ja
inc
xor
jl
scas
adc
cmc
lcall
repz
aad
and
mov
push
mov
jl
pop
test
repnz
dec
mov
mov
mov
dec
add
in
arpl
xor
pop
fbstp
xchg
nop
xchg
iret
lcall
xchg
dec
dec
shr
cmp
insb
ret
lods
xor
je
adc
ljmp
xchg
lds
jnp
aas
and
rcll
cmpsl
rcll
inc
mov
rolb
sbb
mov
cld
jmp
test
mov
pushf
mov
add
cmc
testb
adcb
ljmp
dec
mov
mov
xchg
pop
into
dec
cmpsl
rol
pop
leave
mov
incl
into
sub
les
aad
xor
sbb
decb
lcall
pushl
or
in
pop
cmp
sbb
out
jle
pop
aas
unpcklps
gs
push
call
lds
mov
movsb
shlb
adc
decl
push
nop
jne
subl
cmp
dec
jno
aaa
aas
mov
and
mov
movsl
lcall
and
icebp
dec
cmp
daa
mov
insl
xchg
shl
iret
stos
lds
lcall
cltd
mov
stos
pop
adc
sub
adc
daa
and
stc
lods
mov
cmpsl
or
xor
or
mov
iret
movsb
xchg
lods
add
shrl
popf
and
and
insb
aas
add
jg
incl
xor
ljmp
data16
les
pop
mov
jmp
cmp
lds
dec
jp
repnz
jno
xchg
inc
xchg
lahf
xor
adc
xchg
clc
daa
in
or
push
iret
mov
push
cmp
sarl
fsts
out
fstpt
decl
adcb
ret
inc
adc
dec
mov
les
loopne
and
aaa
scas
dec
imul
das
cld
lcall
and
ret
sbb
inc
sub
imul
or
xchg
mov
into
push
fisubrs
xchg
daa
add
mov
insl
in
in
popf
pop
and
stos
push
fcmove
adc
sub
hlt
fwait
lds
xchg
jbe
cmp
jp
call
clc
ret
call
push
je
mov
lock
adcl
pop
mov
in
and
lcall
lods
push
jp
jmp
push
or
mov
lahf
dec
in
xchg
xor
add
data16
out
int
push
cmpl
xor
dec
ljmp
and
jmp
sbb
hlt
ret
xor
jmp
add
into
and
lahf
insb
add
inc
enter
lock
ds
loope
jp
jbe
into
cmp
loopne
mov
mov
sahf
jbe
loope
lret
sbb
ljmp
push
and
mov
dec
inc
dec
mov
adc
sti
sbb
or
les
pop
bound
fs
xchg
jg
adc
xor
fsubr
ret
push
push
out
in
mov
and
push
outsl
std
push
xor
cmp
mov
enter
push
push
pop
imul
stos
and
push
push
test
aad
sbb
push
cmpb
dec
fwait
pop
jbe
sti
jmp
rcrl
jp
aas
es
mov
or
inc
add
xor
std
mov
jmp
dec
ret
fidivrl
das
lret
call
scas
xchg
movsb
dec
fdivp
nop
lcall
xor
iret
into
pop
cmpsb
sbb
mov
scas
cwtl
fsubrl
fisubs
pop
xchg
iret
lcall
push
inc
mov
mov
in
jnp
out
jp
xchg
pusha
xchg
push
fucom
dec
ret
sub
lods
fldt
enter
lds
jns
inc
pop
cmp
repnz
ljmp
cwtl
inc
dec
and
test
sbb
add
mov
mov
fxch
in
arpl
sarb
add
jg
fwait
rcl
shr
cmp
pop
aaa
fwait
inc
mov
stc
cmp
lahf
call
aad
xchg
mov
cmp
adcl
loope
sub
cmpsl
call
clc
push
cmp
fs
pop
or
sbb
fiadds
and
shlb
push
incl
sbb
dec
push
in
sub
int3
lock
pop
sub
adc
jge
and
push
mov
or
lods
mov
rdmsr
repnz
ja
mov
mov
mov
decl
insb
fistps
lods
mov
cmpl
aaa
xchg
and
jg
pop
push
out
int
push
andb
dec
sub
std
mov
mov
popa
scas
jbe
adc
push
mov
sbb
mov
test
add
pop
jo
sbb
xchg
out
add
adc
dec
cld
adc
sbb
push
push
in
xchg
mov
aad
xchg
mov
mov
cli
shl
movsl
sub
shlb
nop
adc
and
nop
cli
psrad
jg
cli
js
jb
int
lahf
jne
pop
jmp
add
lea
repnz
xchg
test
push
pusha
and
mov
clc
pushl
sbb
stos
pushf
lds
xor
xchg
sub
jo
jg
cmp
call
scas
inc
mov
mov
xor
cmpsl
inc
es
dec
das
pop
aam
stos
xorb
decl
ljmp
in
nop
inc
mov
mov
gs
imul
dec
call
clc
loopne
jno
cld
insb
inc
mov
pusha
push
loope
adc
jp
jno
push
pop
fildl
icebp
dec
ret
dec
jge
inc
out
fimull
incl
and
jae
pop
ficomps
inc
pop
outsl
and
inc
dec
jo
daa
out
call
mov
sub
inc
scas
push
jecxz
pop
lret
pop
aaa
jg
ret
ret
ljmp
and
sub
mov
and
push
lods
jg
mov
incl
ljmp
iret
imul
cmp
mov
loope
cmp
aad
aad
pushl
push
sbb
mov
cmpsl
mov
and
and
leave
pop
ret
imul
inc
pop
mov
push
mov
inc
and
enter
fildl
fldenv
ret
shll
adc
fwait
adc
add
enter
cld
adc
ljmp
stc
push
sub
arpl
sub
insb
mov
mov
sbb
int3
lret
stc
or
shl
lahf
fs
add
sarl
ss
lcall
test
mov
jg
mov
xor
cmp
add
xchg
mov
jno
test
pushl
push
sbb
ficoml
mov
loopne
pop
pop
shr
lods
dec
pop
adc
outsl
jnp
decl
cmpsb
pusha
cld
mov
xchg
ficoms
mov
mov
push
enter
aaa
inc
inc
loopne
mov
jmp
inc
or
arpl
in
cld
hlt
aad
leave
or
cs
lahf
mov
call
push
pop
neg
negl
mov
mov
mov
push
pop
jecxz
out
scas
add
inc
and
in
or
lods
lret
mov
pop
sbb
pop
stc
in
testl
fnop
cli
in
mov
rorb
jg
insl
cmc
sbb
es
add
data16
mov
aaa
out
test
xor
ja
cmc
icebp
iret
icebp
das
mov
jae
push
sbb
mov
mov
loope
incl
hlt
lret
rorb
fldt
out
sbb
test
clc
in
push
pop
pop
lds
cmpsb
sub
push
push
push
loopne
mov
gs
sbb
addl
ja
push
outsl
lock
aaa
into
dec
in
testb
incl
shrl
add
sbb
jo
jbe
fstpt
out
and
fnstcw
das
cld
das
cmc
push
mov
pusha
fwait
fwait
and
stos
jl
mov
mov
mov
cli
jmp
mov
clc
pusha
mov
push
fistpll
fstps
push
ja
fstpt
mov
leave
in
mov
fs
cmp
mov
pop
cwtl
pop
cmp
mov
add
sbb
sbb
push
fildll
es
rcrb
cmpsb
xchg
ljmp
inc
cmp
sub
jo
mov
mov
out
into
stc
in
stc
notb
pushl
fdivs
push
mov
adc
push
lret
push
hlt
adc
push
push
mov
stos
adc
inc
shl
aas
jae
xchg
cmp
incl
jae
test
and
or
and
push
mov
dec
jnp
jl
lds
jb
incl
cmp
testl
dec
imul
push
and
ret
add
ja
push
xchg
aad
inc
decl
fdivrl
mov
xor
mov
jp
scas
adc
pop
and
decl
cmpsb
inc
cmp
push
ljmp
mov
jbe
sub
rorb
test
jge
inc
mov
ret
xchg
ficoms
bound
fdivrl
fwait
push
repnz
into
sub
jp
jne
sahf
pop
addl
outsl
push
data16
pop
pop
aaa
cli
outsl
icebp
sbbb
mov
sbb
popa
xchg
mov
rorb
loopne
mov
pop
aam
lods
dec
sbb
add
decl
and
loopne
jne
sbb
jbe
jmp
bound
ret
cmpsl
in
lods
vmovsldup
nop
mov
or
pop
mov
stos
sub
xor
sbb
call
pushf
lock
das
ror
fwait
lock
or
mov
movsl
ret
cmp
fimuls
das
lock
push
mov
inc
imul
dec
movsl
ja
pop
jg
cmp
adc
stos
mov
xor
int
fadds
fsin
test
jmp
out
nop
xchg
fstl
xchg
push
add
inc
pop
jg
mov
or
push
incl
mov
ds
jg
jbe
dec
adc
lcall
pop
int
pop
stos
fs
out
and
ret
pop
arpl
xor
jne
jg
sti
inc
jb
inc
test
mov
movsl
push
mov
fucomip
incl
push
or
adc
inc
jns
jg
xor
hlt
mov
xor
sub
cmp
mov
dec
mov
mov
aas
outsl
cld
ljmp
lahf
roll
sbbb
popf
jecxz
imul
test
cs
ja
lds
dec
add
aas
xchg
adc
out
jne
dec
ja
data16
push
cmp
sbb
lods
sub
ret
test
mov
mov
sahf
mov
push
cmpsl
cld
adc
inc
xor
lret
sbbb
aad
jbe
sbb
adc
clc
js
push
pushl
cmpsl
adc
andb
je
leave
je
inc
imul
jmp
pop
cmp
repz
xor
jns
das
add
sbb
fdivrl
adcl
push
push
lcall
pop
sbb
mov
shll
inc
rcrl
in
icebp
mov
or
inc
repnz
push
stos
pop
lea
decl
das
dec
ss
in
in
fisttpll
sub
neg
loopne
call
jp
lret
xchg
sub
movsl
sub
sub
pop
sti
lock
add
jg
int
popf
mov
arpl
cld
push
xchg
pop
lea
data16
adc
cmp
outsb
out
fsubrl
xor
aad
inc
cmp
sbb
mov
sub
inc
and
outsb
adc
das
and
mov
push
jbe
fisttps
imul
and
rorl
call
clc
int3
push
daa
idiv
inc
xchg
fdivrs
pop
mov
add
int3
iret
stos
data16
iret
test
or
cmp
mov
sbb
fwait
adc
adc
aam
call
mov
icebp
daa
jb
pusha
scas
mov
insb
xchg
mov
mov
inc
popl
adc
cmpsb
or
sbb
xchg
mov
or
jnp
cmp
mov
lret
loope
cmp
or
jae
or
imul
cld
mov
inc
mov
cwtl
and
loopne
pop
mov
scas
dec
add
xchg
test
imul
cltd
sub
sub
mov
add
in
les
sub
cmp
add
popf
mov
shlb
mov
loopne
insb
sub
cmp
stc
sbb
outsl
jns
jecxz
dec
mov
or
mov
add
fs
imul
das
sub
adc
clc
push
or
fiadds
inc
into
push
mov
fldcw
add
inc
nop
xorb
int
cld
hlt
xor
cmp
sub
xor
mov
fcoms
lods
inc
or
mov
or
pop
call
fdivs
inc
mov
not
loopne
add
mov
sub
mov
mov
es
cmp
cmp
out
aam
or
lret
es
mov
or
xchg
sub
sbb
jg
sbb
out
and
rorl
push
mov
jo
sbb
adc
xchg
push
cli
sub
adc
mov
sub
pushf
icebp
jecxz
mov
fcomps
imul
inc
push
ss
mov
dec
sub
and
xchg
bound
cmc
fcmovnu
insb
and
add
out
out
test
jp
sub
add
loop
add
push
push
xchg
sbb
inc
test
mov
mov
inc
add
jnp
in
ficoml
outsb
xor
lret
loopne
ljmp
push
jg
lods
ret
test
jp
nop
fcmovu
sar
loopne
rorb
mov
loopne
push
fstl
stc
lods
add
or
aas
and
add
or
subl
inc
fcmove
mov
push
jmp
fwait
stc
dec
add
add
push
xor
rorl
push
pop
pop
dec
add
push
add
std
pusha
cmp
mov
divl
imul
jae
call
jnp
sbb
pop
cmc
adc
xor
sbb
clc
aad
and
push
mov
fbld
jecxz
loopne
incl
in
jmp
push
loopne
call
dec
xchg
push
cmp
rol
fmuls
pop
cltd
insb
xor
filds
xchg
dec
sbb
pop
fdivp
icebp
dec
stc
xor
mov
flds
lock
ljmp
mov
push
fsubrs
cmp
lret
in
call
lret
ljmp
xor
push
sub
jae
xlat
adc
mov
loopne
xchg
ds
mov
aad
loop
jns
fisubs
fs
push
jg
sar
or
mov
pop
xchg
lret
push
daa
dec
adc
test
call
sbb
fs
push
cmp
pop
icebp
hlt
jb
insl
ljmp
enter
adc
mov
insl
cmpsl
ja
imul
fisttpll
mov
pop
rol
decl
dec
test
xchg
pop
sub
push
and
test
xchg
out
mov
pop
xchg
in
in
outsl
std
cmp
mov
iret
fiadds
lods
clc
insb
adc
test
mov
sbb
mov
dec
mov
sbb
mov
and
outsl
ljmp
jne
in
ja
bound
xchg
aad
mov
adc
mov
scas
ja
aaa
mov
push
pop
clc
mov
dec
insb
movsl
xorl
stc
out
xlat
inc
sahf
stos
xor
pop
mov
out
jae
sub
pop
fucomi
sub
out
mov
jae
repnz
dec
xor
ljmp
imul
loope
push
sbb
stc
lahf
pop
call
pop
test
int
aam
mov
push
jo
sbb
repz
xchg
pop
clc
jns
xchg
inc
out
stos
jne
add
or
fnstsw
cld
push
xchg
lcall
xor
sbb
mov
loop
jle
add
rcl
in
xchg
ljmp
pop
xor
cmp
fs
out
cmp
loopne
or
sbbl
in
test
data16
mov
into
push
mov
pop
adc
mov
pushl
pop
xor
cmpxchg
iret
xchg
dec
mov
data16
int3
dec
pushl
mov
push
mov
mov
dec
clc
jl
pop
test
push
pop
in
mov
mov
iret
dec
dec
xchg
jno
sbb
mov
mov
mulb
fisubrl
dec
dec
mov
xor
xchg
cmp
roll
mov
pushl
mov
xor
outsb
push
mov
dec
jbe
jno
xchg
rorl
in
xchg
push
xor
fld
insb
fcom
fucomip
jg
cmp
push
dec
pusha
std
mov
mul
cld
push
jge
fidivrs
mov
icebp
add
clc
icebp
outsb
or
adc
xor
lcall
daa
mov
dec
sub
cmp
aad
movsb
aad
loope
stc
insb
imul
xchg
std
test
adc
fisttpl
push
addb
popa
sub
inc
fcmovbe
or
jg
push
xchg
push
adc
adc
jae
cmc
mov
dec
pop
ret
mov
or
pop
sbb
xchg
out
cmpsb
add
ds
or
jo
jo
loope
mov
push
dec
int
stos
mov
aam
lcall
shll
xor
cltd
aad
nop
in
sub
add
inc
call
call
int
cwtl
mov
adc
sub
idiv
lcall
out
stc
dec
push
ja
sarl
sbb
inc
mov
jl
xchg
decl
decl
sbbl
cmp
sti
lcall
jnp
sbbb
pusha
ljmp
cmc
lcall
mov
push
testb
cmpsb
xor
mov
cmp
jno,pt
xchg
ret
jmp
lcall
lods
mov
xor
ret
pop
add
dec
sbb
and
sar
call
add
popl
sub
data16
xchg
fwait
ja
scas
cmpsb
push
sub
sarl
sub
addr16
push
ret
fsubs
cmp
jmp
add
mov
mov
and
mov
jg
pusha
sub
and
cmp
test
and
pop
mov
add
ljmp
frstor
pushf
out
pushf
pop
sbb
jae
lcall
add
jl
insb
clc
push
dec
jmp
ds
inc
stos
or
adc
jecxz
out
mov
outsl
mov
cmp
lcall
das
negb
fiadds
pop
std
mov
call
xor
cwtl
dec
xchg
int3
test
or
cld
cmc
inc
rorb
arpl
mov
mov
pop
xor
lret
xchg
inc
rorl
mov
push
inc
add
mov
inc
push
es
loope
push
cmp
insb
cs
sbb
and
adc
push
in
add
ret
mov
mov
mov
add
push
xchg
movsl
and
sub
dec
mov
js
add
cmp
mov
add
sub
sbb
push
mov
jmp
mov
xorl
adc
and
mov
rolb
roll
fidivs
add
pop
hlt
cmp
pop
or
mov
mov
adc
push
pusha
adc
jl
add
mov
sahf
dec
js
push
and
push
int
sbb
push
jne
or
push
push
dec
push
adc
int3
stos
inc
ret
xor
inc
nop
add
sub
push
loopne
push
mov
add
jns
xor
jae
orb
adc
xchg
or
sbb
inc
aas
add
add
push
pushf
mov
jp
jo
inc
test
cmp
xchg
add
cli
fbld
and
rorl
hlt
scas
mov
pusha
adc
or
jp
call
test
js
outsl
loop
idivb
inc
xchg
cwtl
mov
lcall
xlat
jne
jne
mov
jge
filds
and
push
arpl
add
cmp
in
ss
cmp
cmp
hlt
jp
mov
jo
vmovhps
outsl
mov
ret
iret
mov
push
push
ljmp
roll
out
pop
out
leave
add
bound
enter
or
mov
lods
mov
xchg
enter
dec
cs
sbb
sahf
stos
or
mov
or
inc
sbb
jle
add
fucomi
or
ret
mov
or
mov
test
sub
mov
adc
insb
sbb
push
clc
jmp
mov
out
in
jb
xor
je
fsts
jp
js
mov
clc
adc
dec
scas
xor
leave
sbb
js
jp
fisttpll
imul
xor
ret
sub
and
rorl
jb
sub
jns
lods
or
and
cmp
jae
and
mov
loopne
ja
pop
ss
add
iret
xchg
cmp
dec
sbb
enter
test
addb
ret
xchg
sbb
and
clc
jo
jp
or
test
push
sub
adc
test
push
dec
rclb
lods
adc
mov
loope
out
mov
jmp
movsb
pushf
xchg
jae
outsb
lret
lods
inc
out
xorl
pop
push
mov
mov
xor
mov
fadds
rolb
sbb
rcrl
rolb
mov
fsubr
push
faddl
ds
cmpsb
add
or
inc
lds
xchg
inc
rclb
out
mov
push
call
clc
pop
mov
xorb
mov
jbe
int3
lock
xchg
inc
insl
jnp
js
add
imul
movaps
inc
rorl
shll
ljmp
pusha
adc
scas
xchg
shlb
call
mov
int3
xor
xchg
outsb
mov
lahf
in
jg
mov
mov
movsb
mov
hlt
ret
stos
je
or
pusha
push
fstpl
mov
leave
sub
decl
std
xor
mov
inc
out
add
aad
das
shll
aad
inc
cmp
ljmp
std
sbb
sub
into
sub
jb
lcall
std
dec
lret
pop
adc
dec
pushl
adcl
loop
fcomip
pop
nop
cli
cs
xchg
xchg
push
or
mov
icebp
pop
xor
add
stos
xchg
imul
xchg
lahf
js
call
mov
xor
sti
xchg
int3
hlt
xchg
in
aad
sub
sub
jg
dec
dec
arpl
test
movsl
pop
sbb
rorl
xchg
or
sbb
call
lcall
xor
out
push
ds
sbb
lret
in
ficoms
mov
push
rcll
sub
jmp
test
mov
inc
mov
xor
out
mov
leave
test
call
and
jo
ljmp
mov
in
and
cmc
out
sub
adc
decl
loope
out
push
ret
mov
and
into
xchg
jmp
incl
cmp
jle
sub
fmuls
jl
cmc
ja
call
repnz
in
inc
popf
lds
mov
repz
mov
incl
jl
pop
mov
sbb
test
jo
push
pop
ds
andb
aad
lock
decl
mov
cwtl
rcl
mov
stc
int3
jle
inc
mov
ret
lcall
clc
mov
sub
mov
adc
mov
push
mov
adc
sbb
cmpb
ljmp
popf
loopne
sbb
jb
jg
sbb
fisttps
lcall
jp
cmp
push
mov
int
maskmovq
mull
pop
iret
and
ljmp
dec
cmp
cmpsl
repnz
stos
mov
and
add
pop
jge
scas
pop
add
xchg
jno
fwait
cltd
xor
jg
mov
jo
lea
lret
cmp
jnp
popf
fadds
or
mov
inc
repnz
stos
lcall
aad
repnz
add
int
jl
dec
jnp
out
cmpb
cltd
cmp
mov
pop
cli
ljmp
push
xchg
or
imul
cmp
jmp
xchg
in
push
clc
lock
xor
cmovo
fsub
push
or
out
push
adc
shll
jmp
cwtl
inc
mov
mov
lahf
mov
enter
pop
cmp
dec
fsubs
stc
cmpsb
adc
ds
jmp
sti
adc
jmp
xchg
shl
xchg
repnz
xor
daa
shll
xchg
jns
aad
mov
movsl
jns
jle
mov
cmc
sbb
sub
rcll
sub
adc
out
add
lea
cmp
ret
inc
inc
jae
dec
adc
ljmp
call
sbb
int3
mov
mov
or
in
inc
mov
push
inc
ljmp
mov
cs
jmp
push
js
call
adc
xor
mov
out
sar
inc
or
js
jnp
fildll
repnz
mov
icebp
mov
or
es
mov
lcall
in
sbb
je
push
cmpsl
lahf
push
stc
imul
leave
cltd
cwtl
popf
ljmp
call
add
sub
push
jae
add
cmp
and
arpl
push
mov
sub
int3
pusha
jecxz
sub
fidivrs
mov
push
push
sarl
fwait
ss
pushl
stc
cmp
iret
ffreep
push
pusha
lret
repz
mov
sahf
mov
hlt
dec
call
cmpsb
int3
out
jbe
movsl
sub
movsl
inc
lret
iret
jne
test
mov
and
or
ss
iret
xchg
jmp
xor
enter
dec
mov
lea
in
push
lcall
ret
clc
jbe
mov
in
in
test
dec
pop
les
mov
inc
inc
fnsave
pop
mov
sbb
testl
jo
jp
jbe
aad
cwtl
decl
dec
sub
iret
icebp
sbb
cs
and
fisubrs
sar
ljmp
push
imul
fsubr
adcl
js
xor
xchg
call
inc
sbb
nop
add
sahf
jo
lret
add
pop
in
in
sar
or
mov
sbb
mov
out
inc
cli
stc
and
push
gs
call
inc
rcl
aam
in
js
fmull
out
xchg
jmp
cmp
sarl
aaa
mov
jmp
xor
cmpsl
bound
clc
sarl
dec
mov
push
sbb
mov
adc
repnz
ret
clc
sarb
jno
aas
out
loopne
lret
jb
sub
xor
fimull
call
inc
adc
sub
int
cmp
and
inc
pop
push
add
xchg
jbe
fsubrl
add
js
testb
push
stos
daa
fsubrp
add
jnp
pop
adc
or
mull
push
testl
mov
adc
mov
adc
xchg
inc
nop
and
out
pushf
mov
adc
sbb
mov
and
aam
xchg
aaa
sub
mov
addb
ss
and
inc
xchg
js
and
pusha
mov
mov
jne
adc
mov
fistps
int
pop
lea
mov
xor
lock
test
out
sar
push
or
ret
ja
pop
mov
and
lods
cmpl
jne
mov
lea
sbb
mov
sub
mov
adc
mov
inc
and
inc
mov
mov
mov
stos
xor
mov
jmp
or
xorl
dec
and
xchg
adc
push
xchg
mov
mov
mov
inc
fcmovnb
sub
or
fistl
ret
push
cmpsb
xchg
aaa
pusha
cmc
repnz
leave
es
arpl
inc
pop
jl
lds
int3
or
shlb
rolb
sbb
xchg
sub
adc
and
lret
pushf
cmp
fstpt
sub
fadds
add
ja
jge
add
inc
jnp
or
mov
mov
xor
and
push
outsb
test
lret
gs
cmpsb
lcall
cmc
jmp
mov
cmpsb
mov
mov
cmpsl
orb
popa
xor
aas
loopne
rcrb
cli
ds
sbb
frstpm(287
mov
pop
gs
sub
jle
jmp
dec
mov
mov
dec
insb
outsb
popa
cld
jbe
sub
xor
fwait
dec
outsb
mov
cmp
cld
into
ffreep
std
sub
cmp
cmpsl
roll
aaa
push
jae
lcall
adc
inc
dec
pushf
cld
and
stos
mov
repnz
cmpb
mov
mov
aas
pushf
sbb
fs
call
repnz
into
push
push
push
movsl
insl
dec
test
lds
pop
xchg
jg
in
out
mov
or
dec
jp
cmpsl
mov
xchg
or
fisttps
rcr
push
push
js
xchg
stos
out
push
insb
or
push
push
add
lahf
mov
and
in
mov
or
je
or
mov
ss
or
out
jo
ljmp
push
jmp
nop
xchg
cmpsb
je
neg
xor
mov
cmc
inc
xor
in
lcall
pop
arpl
nop
loopne
push
sbb
inc
call
clc
imul
jb
add
out
jmp
push
jo
dec
mov
fsubrs
stc
sub
push
inc
div
scas
fwait
inc
adc
shlb
daa
dec
gs
adc
in
xor
lea
leave
add
add
stos
pushl
push
into
mov
mov
jmp
cmp
sub
push
jg
loop
out
xlat
lds
or
dec
inc
mov
fnstsw
or
loope
dec
or
clc
push
jg
dec
jne
xchg
add
loope
push
mov
icebp
sar
fdivr
adc
adc
loop
inc
dec
test
fs
sti
add
xor
cmp
pop
loop
insl
jl
or
aad
push
cmpsl
xchg
jg
mov
cwtl
dec
mov
enter
insl
andb
push
sarl
pushl
fidivl
sbb
add
lret
add
xor
in
loope
stc
jmp
sti
cs
imulb
mov
mov
fadd
mov
cmp
aaa
decl
imul
mov
mov
jne
call
decb
sub
shll
ret
enter
and
push
lock
jg
inc
pop
bound
pushf
data16
mov
ljmp
push
mov
hlt
push
idivb
imul
adc
ljmp
rcrl
aaa
mov
inc
imul
mov
inc
sub
inc
dec
mov
fucomip
inc
cmp
or
mov
adc
jo
and
repnz
push
jmp
std
aaa
dec
ljmp
pop
and
push
jp
or
iret
insl
jecxz
stc
pop
daa
lods
push
jg
hlt
mov
test
aaa
jns
test
xchg
pop
frstor
loope
incl
arpl
push
stc
mov
aad
mov
add
pushl
es
jl
pop
jmp
aam
pushf
push
inc
repz
and
outsl
hlt
fildll
pop
pop
mov
out
cmp
or
cld
jmp
pushf
dec
mov
sbb
dec
adc
and
popf
outsl
lock
call
out
pusha
out
inc
push
dec
cmp
sbb
int
cmc
lods
call
rorl
repnz
arpl
pop
das
add
push
inc
and
loopne
das
clc
add
int
cltd
dec
popf
out
adc
lods
pop
add
or
jg
sbb
fst
aad
rorb
dec
inc
aam
jne
enter
shrl
add
xor
mov
aaa
jnp
mov
sbb
les
mov
outsl
and
add
xabort
outsl
dec
add
jo
pop
pop
push
lret
add
aam
aas
jb
sbb
inc
ja
add
jne
mov
outsb
lods
xor
stos
in
dec
inc
dec
push
cmpsl
in
add
adc
dec
inc
aam
xor
sbb
adc
inc
mov
xchg
mov
sbb
mov
ss
cmp
inc
loope
adc
test
insl
mov
xchg
mov
sub
sbb
mov
adc
xor
ret
testb
fcoms
test
and
lock
or
inc
mov
mov
cmp
mov
cmp
shll
sbb
push
add
shrl
repz
shll
loop
les
call
cmp
jns
or
imul
push
push
sbb
mov
lcall
xor
das
pop
subb
cmpb
or
clc
adc
xor
or
mov
subl
adc
je
sub
sbb
imul
loop
xchg
and
jb
push
push
and
fcoms
or
data16
enter
cmc
jge
out
lds
into
inc
cmp
ja
adc
es
add
jae
adc
aam
push
pusha
xor
sbb
je
mov
jo
adc
mov
aas
aam
dec
in
fmul
jmp
cmp
push
test
or
imul
andb
loop
sahf
test
xchg
or
and
xchg
inc
cld
lahf
jecxz
ret
inc
cld
sub
xchg
sub
out
clc
cmpl
movl
push
dec
repnz
les
xor
or
lock
rcl
inc
adc
inc
aas
or
add
inc
add
adc
add
pusha
sbb
cli
popa
adc
mov
and
xchg
int3
mov
adc
popf
push
push
addb
or
sbb
xchg
pop
sub
push
out
pusha
pop
subl
mov
jb
xor
daa
std
dec
fdivl
pop
loopne
pop
xlat
dec
test
mov
mov
pop
jnp
push
sub
jb
inc
xor
popa
jle
dec
or
sub
lret
lcall
or
or
push
testb
pop
cmpb
cltd
fldenv
inc
std
inc
or
cmpsb
stos
cmpsb
mov
int
fbstp
loopne
subb
and
les
movnti
mov
cmp
inc
les
ret
js
add
shl
stos
adc
sbb
incl
push
movsl
cmp
sti
mov
rcll
jno
aaa
in
gs
mov
repz
push
lea
jns
aas
mov
ss
repnz
push
mov
int
and
cmp
decl
sub
push
out
fistpll
xor
bound
testb
subb
xor
call
fsts
jp
mov
js
and
aaa
add
xchg
mov
or
push
out
jmp
inc
outsl
cld
jg
cmp
adc
sbb
push
or
clc
mov
sahf
test
sbb
in
jge
pop
mov
call
call
xchg
out
mov
out
shrl
inc
cmp
xchg
insl
sahf
pushf
fdivp
shr
out
mov
call
sbb
adc
in
mov
out
xchg
cltd
ret
stos
cwtl
popf
mov
sub
hlt
pop
in
jmp
and
iret
cmc
bound
loopne
add
add
sbb
xchg
cmp
test
decl
pusha
mov
or
cmpsb
push
out
lret
xchg
inc
pop
in
push
or
jmp
aaa
pop
xor
bound
mov
and
lods
add
das
icebp
mov
dec
mov
adc
mov
mov
pop
std
decl
imul
adc
scas
inc
lods
inc
ja
sub
jns
mov
jle
subl
orb
stc
jbe
ja
jg
push
sbb
sbb
cmpsl
xor
pusha
testb
movsl
out
add
ficomps
dec
andb
mov
imul
hlt
dec
mov
xchg
xor
mov
mov
mov
sub
jmp
int3
jo
cwtl
sbb
xor
jg
test
cltd
mov
mov
adc
lds
in
dec
iret
repz
inc
clc
jmp
sub
in
test
adc
mov
shlb
mov
sub
sub
push
enter
pushl
cli
add
dec
stc
cltd
inc
ljmp
outsl
mov
inc
lcall
jbe
sbb
push
dec
scas
mov
adc
inc
lcall
lret
ljmp
dec
and
cmp
ss
maxps
push
sbb
mov
mov
adc
mov
xchg
cmp
mov
xor
pop
push
decl
negl
outsl
std
decl
mov
push
jns
dec
in
lcall
data16
je
cmp
pusha
in
inc
stos
pop
push
fimuls
jo,pt
out
push
scas
push
or
mov
jmp
adc
ficoms
cmp
cmpsb
add
call
xchg
or
iret
mov
dec
jg
ljmp
xor
cmp
out
jbe
dec
inc
call
sahf
push
std
aad
xor
ds
inc
push
ljmp
into
mov
cmp
cmc
xor
push
int3
outsb
and
sbb
dec
sar
call
scas
ss
lods
sbb
inc
xor
xor
pusha
stos
and
lea
xor
xchg
jg
xchg
adc
or
sbb
sub
sbb
sbb
ret
add
mov
mov
jo
xchg
mov
stos
loop
dec
jne
or
push
pop
cmp
and
sbb
sub
add
add
add
sub
lret
and
mov
lret
inc
rolb
jbe
xor
xor
dec
cwtl
test
pushl
and
test
jl
lahf
int3
add
pop
sub
subb
movl
lcall
loope
loop
int3
mov
repz
jmp
jmp
xor
add
divb
adc
inc
mov
inc
or
mov
xor
fsubrl
fiadds
or
sarl
movsb
mov
mov
fbld
fs
xlat
add
dec
jecxz
adc
xchg
test
dec
and
fxch
aam
mov
jmp
mov
adc
push
in
xchg
xchg
xchg
push
pop
loopne
mov
and
dec
ret
push
mov
mov
and
sbb
movsl
mov
or
xor
inc
cmp
sub
push
dec
mov
or
mov
sub
cwtl
fcoml
addr16
call
das
das
int3
mov
or
mov
bound
leave
or
inc
cs
outsb
mov
add
pop
adc
mov
adc
mov
lods
add
add
mov
shrl
inc
xor
xchg
jmp
lods
inc
cs
test
jno
add
pop
fmulp
sbb
sub
out
inc
inc
jbe
fcmovu
test
sub
ret
and
fwait
mov
fiadds
sbb
sbb
into
add
sub
sbb
mov
push
mov
int
stos
sbb
aad
cmp
push
lock
fs
loopne
enter
jo
xchg
les
ljmp
daa
les
out
push
mov
xchg
aaa
lcall
stos
jl
pushf
push
lret
or
dec
add
dec
mov
fsub
push
mov
cmp
cmc
in
add
lea
mov
mov
push
pushf
add
xor
mov
lretw
sbb
or
outsb
pop
cmpb
inc
mov
int3
add
xchg
mov
stc
test
sarl
inc
xchg
mov
adc
jae
cmp
gs
push
shl
shlb
mov
lock
cmp
cmp
jge
in
dec
clc
lret
or
in
ret
add
outsl
test
xchg
or
push
dec
xlat
loopne
int
inc
mov
mov
mov
sbbl
cs
or
dec
int
repnz
jp
icebp
add
loop
or
xchg
mov
jo
add
pop
inc
mov
out
jne
push
sub
iret
std
out
and
add
adc
push
jne
xor
inc
dec
pop
add
mov
test
dec
add
imul
mov
imul
adc
dec
leave
ret
lahf
cli
mov
or
call
mov
mov
sbb
mov
pop
sbb
and
sbb
popf
sub
add
cld
pop
roll
xor
xchg
jmp
mov
loop
movsl
loop
scas
mov
ret
or
out
fildl
pushl
cmp
add
sub
mov
sbb
inc
sbb
pop
out
insb
jmp
cmp
adc
in
fidivs
or
push
pop
jmp
test
mov
mov
xchg
filds
push
inc
push
mov
mov
fisubrs
mov
lret
and
je
cmp
lcall
int3
dec
xchg
pop
sub
fsubrl
xchg
pop
arpl
jae
jmp
mov
jmp
mov
fs
int
xchg
mov
dec
or
cltd
push
fbld
mov
clc
adc
out
stos
or
fwait
lock
movsl
aas
and
pushl
pop
daa
loop
sub
jne
jmp
pusha
mov
mov
leave
dec
fidivrs
incl
aam
ret
into
movsl
aad
mov
stos
test
pop
xchg
xor
data16
call
jns
push
dec
pop
cli
and
pop
lods
in
cmpb
adc
mov
or
decl
push
xchg
icebp
push
sbb
push
sub
and
out
shll
fscale
fwait
push
xchg
pushl
mov
and
rcll
lea
xchg
stos
stc
les
sbb
cs
stc
ljmp
aas
adc
cmc
push
sub
in
cmp
aad
fnstsw
js
mov
ret
mov
inc
add
test
das
imul
rol
mov
pushf
cltd
ds
push
sbb
and
ret
mov
aas
pop
inc
sbb
loopne
inc
adc
push
pop
insb
push
cmp
movsl
imulb
filds
fisubrl
jb
jmp
inc
inc
cli
sub
fprem
jg
ffree
adc
scas
std
stc
jecxz
cmpsl
fisubrs
pop
xchg
aas
call
pop
fsts
push
test
mov
push
adc
inc
pop
incb
sub
add
insb
push
cmp
or
out
clc
jg
jnp
or
inc
sub
inc
pop
jp
mov
lock
or
ss
in
jge
jg
popf
xchg
xor
push
ret
cmc
cmp
mov
in
data16
xor
jg
sar
xor
ficompl
fistpll
or
push
call
enter
sbb
xor
and
sbb
jne
inc
testl
inc
out
pop
and
push
cmpsb
rol
cmc
scas
push
lahf
or
ret
inc
mov
mov
sbb
lea
xor
leave
cmp
into
mov
pop
xchg
inc
imul
jne
dec
cmpsb
pusha
loop
inc
inc
pop
jb
push
xor
add
sti
call
popa
inc
push
cmpb
rorb
and
fucomip
cld
push
test
andb
inc
aaa
movsl
dec
mov
mov
add
fists
mov
lahf
mov
xchg
dec
push
pop
nop
outsl
std
pop
repz
jl
cli
mov
sti
popf
jno
popf
sti
loopne
cltd
mov
mov
out
xor
call
xchg
pop
xchg
fnsave
dec
jg
xchg
fwait
ret
popf
movsl
jge
adc
xor
incl
pop
pop
fisubs
stos
sbb
sbb
into
mov
xor
mov
mov
outsl
loop
cmp
lret
adc
dec
clc
lods
mov
cmp
add
xlat
sar
hlt
xchg
inc
jecxz
ffree
and
sbbb
aad
mov
call
clc
clc
es
sub
adc
rcl
fsubrs
ljmp
jo
xchg
ljmp
push
movsl
inc
mov
mov
dec
dec
or
or
aaa
fsin
ret
hlt
test
pushl
push
dec
into
inc
fstps
cmp
dec
stos
outsb
sbb
mov
mov
mov
lock
mov
sub
leave
leave
clc
out
lock
jmp
rolb
sub
xchg
loopne
cmp
icebp
jg
mov
je
pop
aam
popf
scas
hlt
scas
adc
pop
mov
push
inc
mov
add
test
lods
push
cmp
ret
lret
sbb
push
mov
cmp
add
dec
xchg
imul
aaa
push
mov
es
imul
xchg
mov
xchg
push
int
or
cld
arpl
in
addb
jmp
ljmp
jmp
js
adc
lods
fcomps
int
clc
outsl
mov
popa
call
push
sub
out
push
lds
jb
pop
lcall
jmp
clc
push
lcall
enter
inc
or
repz
jp
out
orb
leave
mov
jns
pop
sub
or
fidivs
pop
subb
jmp
test
iret
fwait
jno
pop
mov
mov
inc
ret
inc
cs
sub
call
sbb
xchg
dec
mov
out
mov
popl
aad
xchg
addr16
js
dec
inc
or
mov
test
or
and
lcall
decl
ja
xchg
lcall
pop
stos
sahf
aaa
xor
adc
or
push
adc
push
mov
push
fdiv
js
stos
decl
ffreep
imul
dec
or
iret
sub
or
out
jo
call
decb
cmp
jp
push
into
stc
sbb
sub
cmp
jmp
sbb
repnz
xor
shl
mov
mov
fs
loopne
test
cld
das
or
inc
imul
shrl
inc
sti
leave
pop
test
jbe
call
dec
jmp
sbbb
mov
push
dec
push
fs
xchg
call
add
stos
bound
aam
pop
push
je
fwait
aad
sbb
out
pop
clc
fbstp
fadd
push
or
mov
inc
orb
xor
cmp
cld
decl
mov
cmp
dec
int3
in
clc
fisubrs
out
rcl
test
sbb
enter
mov
mov
jmp
xchg
lret
stos
ds
negl
xor
imul
std
decl
dec
shlb
pop
pop
lcall
icebp
pop
push
mov
aas
mov
lock
xchg
mov
into
cmp
cwtl
fs
cltd
sbb
xor
pushl
cltd
jbe,pt
sub
sub
or
aad
sahf
mov
sarb
clc
incl
jecxz
xchg
sbb
aas
mov
cmp
aam
dec
jmp
sub
shrb
out
sub
cmpsl
cmp
imul
mov
push
lcall
jg
xchg
loope
jae
ds
les
in
movb
adc
mov
lock
add
pop
in
sub
in
iret
mov
jae
pusha
call
pop
test
sbb
sbb
fs
les
loop
insl
insb
pop
aas
sub
sar
pushl
pop
xchg
mov
test
sti
dec
cmp
inc
adc
jg
leave
xor
push
mov
mov
popf
jns
pop
cmpsl
mov
dec
cltd
jbe
fisttps
arpl
xor
push
lcall
jo
jecxz
mov
in
rcl
xor
call
push
mov
or
pushl
repz
mov
clc
mov
fdivl
add
inc
stc
add
xchg
cwtl
das
icebp
incl
mov
lock
popl
addr16
adc
sbbl
call
fs
xchg
sbb
sbb
lods
popa
push
and
lcall
cs
mov
pop
push
hlt
jge
shll
push
into
jge
nop
mov
int3
sbb
xor
inc
sahf
push
sub
sub
lea
xor
mov
dec
jg
pop
lret
inc
pusha
out
sti
out
cmp
shl
loopne
movsl
xor
decl
mov
loope
testl
daa
push
lcall
adc
jns
add
cmpsl
push
jp
inc
stc
pop
inc
and
pop
incl
sbb
push
jmp
mov
push
sub
push
cmpsb
out
movsb
pushf
sub
sbb
test
sbb
cld
sub
jmp
clc
sar
lcall
cld
sbb
xorl
jne
xchg
sub
icebp
xchg
ljmp
icebp
mov
in
add
pop
clc
mov
sarl
push
subb
adc
fisubl
mov
aaa
clc
incb
xor
out
mov
imul
and
pop
call
xor
test
arpl
outsb
or
idivl
pop
call
sar
daa
bound
pop
jne
fcompl
test
sub
or
aam
pushl
imulb
pop
aad
jb
mov
lds
sub
cli
das
icebp
das
lea
and
lods
sbb
fistl
adc
cmp
inc
sbb
or
pop
outsb
repz
hlt
or
ljmp
mov
scas
insl
sbb
add
and
mov
ret
cmc
mov
add
pop
jne
or
jl
or
mov
cld
outsl
int3
decl
jbe
jmp
dec
inc
mov
popa
inc
lock
incl
bound
mov
out
mov
lock
jp
mov
pusha
je
inc
xor
or
jl
inc
xor
fidivl
xchg
lds
mov
pushl
push
inc
cmp
cwtl
push
dec
push
shll
ljmp
cmpsl
xchg
inc
ficomps
inc
sbbl
or
in
mov
jmp
xor
sub
cmp
xchg
mov
cmp
ljmp
push
out
xchg
xor
pop
cmp
pop
sub
imul
stos
mov
outsl
cld
popa
jecxz
insl
imul
fdiv
jg
add
popf
clc
test
adc
loop
call
inc
and
or
mov
sti
adc
dec
add
adc
or
enter
xchg
mov
push
shll
xor
add
and
sub
mov
inc
xchg
test
stos
es
or
in
push
add
push
add
inc
dec
push
add
xchg
push
and
push
xor
movsb
add
push
inc
and
cwtl
pop
outsl
scas
mov
loop
push
inc
pop
mov
pmuludq
mov
add
shl
push
cltd
sbb
repnz
fistpll
add
out
and
scas
sbb
adc
cwtl
mov
call
xchg
mov
rcll
addr16
sub
mov
out
adc
mov
cld
dec
mov
movsl
sub
ret
pop
nop
pop
jge
jecxz
jo
inc
sub
cli
pop
adc
lcall
out
pushf
fsubrs
mov
clc
cmp
sbb
xor
sbb
int3
add
popf
push
jno
pushf
popf
dec
rol
inc
out
pop
in
dec
add
xor
adc
in
push
ret
int3
lret
out
lahf
xor
adc
jbe
mov
ret
fdivrs
call
fadds
pop
sbb
adc
pop
add
cmp
mov
add
and
xchg
cmp
outsl
push
clc
push
fcoms
and
test
fiaddl
or
pop
mov
inc
cmp
in
inc
sbb
sub
adc
movl
xor
or
adc
pushf
sub
lahf
xor
or
sbb
pop
test
inc
add
xorb
push
mov
enter
cmpsb
pop
dec
adc
inc
inc
loop
push
sbb
push
or
and
pushf
pop
sbb
lcall
and
xchg
int3
aas
imul
outsb
fsubrs
xchg
and
adc
adc
std
inc
lock
rorl
mov
pop
loope
mov
mov
scas
jg
pop
adc
or
adc
fidivl
add
sub
xor
add
jbe
xor
cmp
push
cwtl
inc
or
xchg
push
ficoms
into
cmpsl
enter
mov
xor
aas
sub
in
call
mov
push
mov
adc
pop
add
pop
jle
push
test
icebp
repnz
cmp
cmc
movsl
mov
adc
sub
sbb
sub
ljmp
xor
je
rcrb
dec
dec
lret
out
push
int
or
add
into
cld
aam
loope
insb
test
cmp
jg
pop
fcmovb
insl
lcall
lcall
fisttps
mov
sbb
cmp
dec
insb
sbbb
cmp
xchg
aaa
shr
fisubs
ljmp
jmp
jle
incl
aam
pusha
jl
jne
pop
jae
mov
push
cmp
add
push
stc
es
ljmp
test
sub
sbb
sub
lea
fucomip
fbstp
mov
arpl
fiaddl
push
add
decl
add
add
mov
mov
ret
mov
pop
ljmp
mov
cli
loopne
insb
std
lods
outsb
mov
insb
pop
call
ds
pop
aam
lcall
sbb
cmpsl
push
xor
out
scas
jbe
add
je
shl
stos
and
out
push
pop
mov
mov
scas
sbb
push
jno
subl
ds
inc
aas
incl
adc
outsl
loope
jb
aad
out
in
mov
mov
fbstp
cmc
inc
or
and
sub
call
inc
repz
insl
in
push
dec
xchg
les
out
ret
int3
mov
sbb
lods
add
mov
push
dec
test
ja
ljmp
adc
jne
mov
aaa
mov
pop
jmp
subb
mov
call
aaa
jno
out
and
test
jmp
stc
sarb
ds
inc
dec
adc
xor
fwait
incl
stc
call
int
inc
pop
xchg
sbb
dec
push
or
lcall
std
cmpsl
addb
inc
data16
or
jecxz
mov
mov
push
and
shrb
ljmp
add
adc
test
inc
pop
inc
arpl
dec
add
mov
adc
jmp
loopne
movsl
inc
sub
filds
jne
jge
xchg
ret
xlat
call
inc
and
pop
add
lcall
sbb
loop
push
repnz
add
in
js
in
add
fldenv
inc
sbb
test
sbb
adc
rcrb
jne
pop
in
mov
loopne
mov
mov
or
scas
and
jg
sub
pusha
xchg
and
add
add
xor
test
pop
inc
cmc
add
hlt
adcb
mov
addl
insl
daa
adc
lds
into
cmc
push
jbe
xor
pop
or
inc
and
adcb
adc
dec
aam
cmp
mov
add
adc
mov
jle
add
adc
adc
sbb
inc
add
push
push
jecxz
and
push
push
mov
icebp
sub
jnp
call
mov
inc
in
add
lds
lock
add
pop
outsb
mov
mov
or
xorb
into
push
and
loope
dec
add
sbbb
daa
ja
sti
xchg
or
and
in
aaa
dec
ret
jg
mov
frstor
inc
aam
pop
aam
jne
xchg
out
add
jns
mov
adc
mov
outsl
jl
xor
xchg
orl
popl
add
push
ds
and
in
out
decl
test
add
sub
shlb
and
mov
icebp
popf
push
cmpb
push
stc
ficomps
pop
mov
lds
into
fbld
daa
xlat
insb
stc
push
push
sub
les
daa
xchg
roll
or
ljmp
or
or
cmp
dec
mov
mov
outsb
xchg
aad
mov
push
je
xchg
mov
ljmp
pop
loopne
sub
insl
xor
flds
pop
mov
or
in
mov
sbb
movsl
stos
xor
inc
cmp
jl
stos
cld
fldt
and
push
subb
mov
subl
gs
push
inc
push
ds
cmp
rcll
bound
leave
inc
xor
into
jnp
je
push
iret
cmp
sar
ljmp
daa
push
mov
stos
jge
or
data16
pop
daa
pop
data16
lcall
dec
push
iret
mov
nop
test
cmpsl
cltd
rclb
test
fs
mov
ret
lahf
fisttpl
or
and
fs
mov
fisubrl
inc
mov
imul
leave
fwait
test
aaa
enter
jbe
aaa
cli
jg
hlt
and
add
je
mov
ljmp
push
push
mov
aam
mov
mov
dec
or
push
fwait
out
jp
shlb
cmp
cs
sub
insb
adc
rcl
jnp
push
add
add
punpcklwd
jo
lods
lods
dec
fildl
add
push
push
mov
fmull
or
or
push
push
pop
fdivs
and
dec
in
bound
sub
mov
in
fwait
sub
test
xor
mov
or
ds
sub
ja
test
ss
insb
scas
sub
inc
test
inc
sub
xor
sub
mov
xor
loope
xchg
inc
adc
pop
xor
push
sub
add
popf
xchg
shl
pop
push
loope
pop
sbb
scas
inc
xchg
mov
lock
rcrl
lods
jo
inc
test
push
sbb
pop
cmc
fiaddl
sub
push
sbb
enter
push
pop
xchg
sti
cmp
sub
shlb
aam
ret
stc
adc
and
orb
add
scas
icebp
and
pop
lods
pusha
or
xchg
addl
xor
or
loopne
cmpl
dec
aam
inc
cwtl
shrl
rcrb
mov
dec
gs
pop
sbb
adc
or
xor
lea
push
push
pop
mov
inc
pop
icebp
push
xor
out
push
fimull
xchg
jp
test
ljmp
cmc
sbb
mov
dec
mov
shl
xchg
mov
xor
mov
std
orl
adc
out
push
sbb
pop
xchg
sub
iret
adc
push
mov
movsl
addr16
subb
dec
or
jg
sub
aad
mov
inc
rcrb
lret
cmp
add
clc
mov
lret
pop
cli
dec
mov
jb
push
dec
data16
or
lock
mov
ret
pushl
dec
mov
jno
mov
xor
add
aam
jmp
dec
and
cmp
push
xchg
mov
xor
pop
ret
pop
jb
js
aam
inc
and
jl
lret
fbstp
cmc
icebp
clc
popf
sahf
push
into
cmp
mov
hlt
decl
push
stc
aas
xchg
add
push
mov
ret
adc
decl
jg
sub
sbb
cltd
loop
pop
sbb
rol
sub
test
sub
call
cwtl
push
mov
mov
mov
push
xchg
lret
and
call
pushl
or
cmp
mov
cmp
je
xchg
push
push
jp
icebp
pushl
nop
rcr
cli
push
addb
sahf
mov
std
cmp
imul
jmp
hlt
sqrtps
sbb
out
cmp
dec
test
das
cmc
jns
rcrb
nop
out
lcall
and
jmp
adc
addr16
icebp
fninit
mov
cmp
dec
dec
pop
fcompl
fwait
or
mov
into
ret
popa
out
mov
add
dec
push
sbb
jg
push
cmc
je
movsb
or
data16
inc
ret
mov
cmp
rolb
cmp
fadds
data16
aaa
adc
xorb
pop
hlt
shlb
aas
sbb
mov
int3
ficomps
fldl
push
push
jmp
lds
int
js
dec
cwtl
mov
jb
cmpsl
sub
shrb
sub
push
inc
add
sti
lds
pushl
cmpl
dec
xchg
outsb
es
gs
mov
push
lret
inc
arpl
lods
lahf
mov
lcall
jg
aam
xchg
add
push
incl
hlt
adc
in
ret
movsl
cmp
movsl
pop
mov
outsl
xor
lds
testl
cltd
push
sub
call
pop
adc
inc
sub
xchg
cld
adc
cmpsl
mov
push
lcall
cmpsb
fndisi(8087
pushf
push
aad
jmp
in
dec
xorl
clc
jns
out
xorl
adcb
adc
dec
jp
imul
sub
scas
inc
daa
jecxz
in
lcall
jbe
sahf
mov
mov
andl
lock
rclb
data16
insb
pop
clc
sti
pop
push
aaa
cli
jmp
int3
inc
data16
popf
je
lahf
push
aad
stos
rcll
push
outsl
mov
decl
insb
xchg
inc
pop
lcall
call
scas
jecxz
jp
stos
in
fsubrs
cmpsl
data16
rorb
push
adc
sub
enter
jmp
adc
lcall
push
fstl
push
mov
mov
movsb
ror
cli
lock
mov
hlt
out
negb
enter
adc
fdiv
out
pop
lcall
stos
arpl
dec
fcoms
icebp
adc
sbb
cmp
add
push
lods
clc
push
push
loope
mov
jge
sub
icebp
and
and
jmp
adc
fsubs
cmp
push
cltd
inc
push
sub
push
push
mov
bound
leave
sbb
and
lahf
in
mov
imul
cmc
sub
incl
add
lret
push
pop
inc
cmp
or
adcl
stos
add
stos
add
sub
scas
dec
add
inc
xor
push
push
faddl
and
push
add
testb
stc
sbb
mov
adcl
lods
inc
sub
dec
pop
inc
cld
fistl
imul
inc
fbld
out
xor
aad
fiadds
rolb
jne
js
sbbl
inc
js
sub
outsb
fistpll
adc
fwait
dec
inc
cli
inc
push
in
cmpsl
sbb
push
or
aad
xor
icebp
or
or
ljmp
inc
ja
fsubr
rcll
add
push
fisubs
mov
and
fdivr
pop
mov
lock
test
pop
fstps
jl
or
mov
fwait
inc
xchg
sbb
in
outsl
xchg
pop
adc
lret
shrl
push
and
inc
cmp
in
frstor
add
aas
mov
inc
roll
iret
imul
cld
push
xchg
inc
rolb
mov
jl
sarl
mov
add
call
mov
add
test
push
xchg
mov
or
add
adc
repz
adc
cmp
or
inc
jnp
dec
sub
sbbl
fadd
call
rorl
nop
fmul
scas
test
in
and
dec
rorb
andl
jmp
inc
jmp
pop
rcrb
ljmp
cmc
adc
pop
adc
movsb
and
out
mov
inc
out
adcl
push
dec
inc
pop
stc
push
adc
jg
outsb
roll
jb
inc
mov
or
pop
adc
or
incl
out
cmp
pop
push
fs
clc
xor
jp
xor
jns
pop
or
popf
cltd
test
sub
fldenv
pop
sbb
repz
dec
cmpsb
mov
int3
push
jbe
add
mov
out
dec
mov
scas
sub
mov
clc
ja
dec
rorb
cmp
fwait
popf
cmp
mov
jns
popf
iret
out
sub
adc
or
pop
jnp
jbe
jg
mov
push
mov
mov
lock
cmp
dec
data16
sbb
mov
ljmp
shl
cmp
add
lcall
shl
ljmp
xchg
xchg
rcll
decl
aam
andl
xor
leave
repnz
std
mov
adc
lock
sbb
lea
mov
decl
stos
sub
jp
into
sub
dec
vmovupd
fcos
incl
mov
dec
aad
cmp
xchg
enter
cmc
dec
decb
jg
outsl
ficomps
mov
sub
adc
push
push
jbe
outsb
clc
or
decl
leave
fstps
cmp
loopne
xchg
pop
sub
xor
adc
mov
decl
lret
imul
xchg
adc
les
shll
mov
mov
dec
repnz
xchg
add
leave
or
add
or
push
mov
xchg
cmp
push
push
inc
loope
mov
add
aaa
mov
leave
lcall
mov
jmp
adc
sbb
test
ret
mov
mov
fisttpl
fsubrp
xor
mov
call
fldenv
insb
mov
aad
lret
or
mov
aas
pop
subl
sub
xchg
cmpsl
fwait
push
mov
push
dec
loop
sbbb
add
decl
xchg
cwtl
jmp
mov
cli
xchg
imul
ret
mov
out
mov
push
fwait
test
sub
sarw
repnz
aas
add
iret
mov
xlat
stc
and
jmp
mov
or
jae
stos
outsl
incl
out
lahf
popf
dec
and
mov
jp
jo
inc
bound
pop
mov
or
call
dec
shrl
into
arpl
mov
sub
call
jae
push
pushf
addr16
mov
xor
add
jmp
mov
imul
insb
mov
in
sbb
scas
xchg
mov
sub
cmp
ja
inc
lcall
sub
sub
sub
movsl
out
movsl
add
push
push
pop
dec
cld
mov
aam
scas
test
jle
push
call
and
call
sub
jecxz
push
sbb
or
popa
pop
jnp
add
movsb
mov
mov
jmp
movl
insb
je
or
icebp
pop
push
xor
nop
insb
push
arpl
adc
jno
mov
mov
fsubs
or
jae
bound
outsl
gs
insl
jns
inc
pop
or
insl
jg
jmp
movsl
mov
cmp
int3
ljmp
xchg
xchg
jmp
cmc
dec
je
sbb
mov
hlt
fs
lea
rolb
cld
xor
pushl
adc
out
cmp
les
out
pop
mov
mov
icebp
jmp
push
imul
cmp
jp
fiaddl
ficoml
sbb
mov
jns
rolb
pushf
pop
movb
decl
ret
xchg
ljmp
dec
and
and
pushl
cmp
flds
push
cmp
movsl
rcl
adc
fistps
pop
pusha
ja
pop
add
insl
mov
std
adc
xchg
rcrl
mov
xor
sub
cs
into
in
pop
jp
fistpl
clc
push
jg,pn
ret
mov
ljmp
std
pop
adc
inc
pop
sub
and
sub
mov
mov
cmpsb
daa
mov
xor
push
mov
mov
ret
mov
jbe
clc
decl
lcall
jle
inc
push
leave
sar
ljmp
pop
ljmp
hlt
pop
add
jl
mov
push
jecxz
push
pop
rolb
insl
icebp
stc
stc
and
inc
lret
jmp
jo
ljmp
std
and
and
inc
das
or
mov
imul
incl
sbb
cld
pop
xor
add
lea
imul
adc
aaa
cmp
cmp
dec
or
sbb
lea
sub
push
icebp
sbb
repnz
push
jmp
jl
mov
scas
lahf
or
fldt
test
and
xchg
cmp
fstpl
xchg
jmp
add
inc
iret
adc
push
jmp
out
fiadds
jle
dec
lods
clc
pop
adc
faddl
add
push
lcall
mov
inc
ja
stc
add
lret
mov
dec
jb
clc
js
ja
int3
flds
xchg
adcb
cmpsb
pushl
or
jno
sub
call
insl
lcall
pusha
push
adc
ficoml
mov
das
dec
lret
xchg
outsl
hlt
jmp
xchg
add
sub
mov
inc
decl
xchg
lea
jmp
imul
pop
int3
ret
cmp
xchg
cmp
call
clc
xchg
sub
sarl
pop
rcrl
hlt
sahf
xchg
pop
mov
icebp
push
sub
sbb
jmp
xchg
or
data16
jnp
negl
mov
nop
jns
cmp
ljmp
je
stc
out
fisttps
dec
push
jno
loope
dec
cmp
jmp
mov
xor
sahf
sbb
das
sar
ljmp
loopne
mov
xor
ss
out
xchg
divl
sub
xchg
mov
hlt
pop
adc
leave
inc
in
call
or
jne
in
mov
fcomip
inc
push
inc
fdivrs
test
mov
and
pop
pushf
arpl
loope
pop
pop
xchg
in
cmp
mov
pop
dec
enter
sbb
mov
adc
std
jg
mov
jmp
push
sbb
cmp
cmpsl
clc
jnp
and
inc
loop
les
lcall
rcll
in
or
cmp
iret
maxps
sub
cli
mov
inc
int
sub
jnp
mov
lcall
std
lea
notl
sahf
out
mov
inc
or
fdivrl
cmpl
xchg
add
or
mov
cmp
mov
cmp
sbb
je
shll
mov
or
fdivl
mov
mov
cld
dec
or
push
sbb
es
iret
pop
and
lret
mov
es
adc
inc
cmp
dec
pushf
dec
sbb
sub
sub
xor
popa
mov
lahf
cwtl
add
dec
or
inc
loopne
sbb
xchg
inc
int
ds
xchg
addb
lcall
jmp
in
loope
jae
outsl
arpl
cmp
stos
test
jmp
xor
push
fcmovb
stos
and
pushf
sub
lcall
stc
sbb
call
inc
std
add
mov
xor
push
bound
fidivrs
repz
jg
call
and
test
mov
stos
xorb
nop
call
outsl
lock
and
sbb
jmp
mov
fnstsw
incl
scas
push
jb
push
xlat
mov
mov
leave
pop
addr16
aaa
jmp
jbe
push
and
out
call
adc
cmp
cld
pop
xchg
ljmp
mov
fs
adc
mov
popf
dec
sbb
sbbb
cmpsb
cmp
sti
cs
jb
jl
jecxz
ljmp
mov
arpl
xchg
test
aad
cmp
and
mov
clc
stc
pop
pop
push
jecxz
lea
mov
add
mov
push
mov
je
lcall
pop
popa
pop
adc
adc
sub
scas
jno
push
push
jmp
movsl
sbb
pop
sbb
mov
sub
push
xor
mov
js
popf
out
sti
popf
cmc
dec
sbb
jne
fstl
sbb
lcall
mov
sub
pushf
xchg
aam
cltd
and
pushl
dec
cmp
dec
push
cltd
cmp
daa
lock
mov
xor
fsubrs
je
mov
cltd
mov
testb
mov
add
lcall
add
adc
stos
mov
call
in
aaa
clc
ljmp
cmp
xchg
pop
scas
out
xchg
pop
lahf
pop
clc
push
lds
adc
push
dec
xor
mov
sti
jmp
mov
pop
cmc
lcall
or
ds
imul
lcall
imul
push
xor
in
sub
cmp
inc
lock
adc
cmp
jg
call
mov
push
push
xchg
push
popa
call
push
popf
add
mov
dec
sub
daa
xchg
xchg
cmp
je
xchg
out
sub
call
cmp
jl
mov
int3
ss
scas
clc
push
push
in
ljmp
inc
outsb
inc
bound
in
adc
scas
stos
ficompl
out
je
out
fistpl
call
test
je
jns
fsubs
and
fidivs
lock
mov
popa
fucomi
sbb
adc
fcmovnbe
jb
data16
es
sahf
jle
mov
inc
incl
dec
inc
lret
sub
pusha
rcrl
add
dec
mov
push
xchg
or
out
and
sbb
adc
mov
leave
mov
outsl
adc
jnp
movsl
or
push
call
or
clc
ficomps
jmp
insb
push
in
jp
leave
stc
cli
fildll
aaa
cmp
push
ja
sub
stos
frstor
pop
int3
daa
fildll
scas
jecxz
cmp
xor
inc
add
push
inc
iret
cmc
pop
arpl
das
add
dec
sub
sarb
adc
xchg
adc
push
pop
fstl
les
lea
or
adc
clc
and
mov
or
mov
mov
ljmp
lock
clc
pop
mov
loope
sub
sbb
fs
loopne
std
outsl
cld
mov
sub
inc
mov
ljmp
fcomps
jbe
in
sar
or
data16
mov
lret
and
test
or
pop
mov
mov
adc
cmp
sub
sar
or
pop
fs
int
mov
push
xchg
call
push
pushf
scas
sbb
inc
pop
jl
jae
jno
jae
in
icebp
fcmovnbe
addr16
lret
inc
pop
in
mov
in
out
iret
push
add
and
or
cmp
xchg
inc
sbb
cmp
or
and
adc
xor
ljmp
inc
sub
repnz
sarl
pushf
push
adc
and
cld
test
jg
or
mov
testb
xor
loopne
fimull
mov
push
call
addr16
cmpsb
icebp
call
sub
lea
insb
jle
cld
ljmp
ret
sbb
mov
sti
mov
lds
mov
xchg
xor
pop
into
xor
outsb
lock
mov
mov
aas
stc
jmp
pop
fimuls
push
adc
push
ds
push
in
enter
jae
or
sahf
aaa
cs
jg
aam
push
sbb
fwait
pushf
shlb
push
cwtl
jecxz
mov
sbb
jb
ljmp
sbb
push
js
jmp
fcompl
rol
mov
es
push
scas
les
jno
xchg
mov
xchg
fisttpll
adc
hlt
ret
sub
add
or
in
sub
movsb
dec
icebp
fcomp
push
sbb
in
jne
jae
mov
xchg
or
fisubrl
adc
inc
push
pop
xor
fldt
addl
xor
jbe
xor
mov
lcall
imul
inc
or
in
cld
mov
xchg
lock
sub
add
jne
adc
in
and
cli
jl
dec
or
fisubs
sbb
add
add
mov
jnp
loopne
sbb
inc
push
inc
daa
sub
fidivl
daa
sbb
dec
loopne
and
push
sbb
dec
mov
popf
xchg
fisttpl
or
cmpl
adc
mov
call
mov
cmp
cmpsl
das
out
push
shl
or
xchg
lds
test
pusha
add
dec
out
xchg
mov
pop
adc
push
icebp
mov
orb
and
cltd
adc
jg
and
add
sarl
xor
dec
ret
adc
outsb
daa
in
or
xor
push
dec
addl
loop
push
inc
push
outsb
call
adc
push
and
or
jne
daa
into
sbb
lcall
mov
daa
out
stc
adc
aaa
int3
mov
in
fstpt
into
cld
adc
decl
iret
cmp
clc
ss
hlt
popf
cmpsb
pop
out
adc
lret
mov
inc
sbb
inc
dec
std
push
ljmp
push
mov
and
mov
pop
add
decl
dec
out
fwait
aad
js
fisttpll
sub
cmpsl
mov
pushl
fneni(8087
jo
jae
popf
subl
adc
sbb
bound
mov
fidivs
cld
stos
push
jnp
cmp
pushl
xor
push
mov
pop
fdiv
mov
mov
push
outsb
xor
mov
cltd
sbb
jmp
jmp
clc
and
pop
inc
mov
mov
inc
call
pushl
inc
inc
mov
outsl
jb
in
pushf
dec
in
fs
incl
mov
jp
lods
xor
es
cmpsl
dec
in
fsubr
push
push
pop
stos
jmp
incl
push
sbbb
mov
cmp
xor
cwtl
mov
mov
lcall
jg
lds
in
decb
sub
sub
push
xchg
cmpsb
js
mov
loopne
and
jge
or
aaa
sbb
hlt
cmpsb
cwtl
and
lret
push
fistpll
call
and
int3
stos
decb
dec
stc
mov
movsb
daa
adc
int3
adc
test
mov
and
loopne
jg
jae
xor
call
jo
das
aam
pusha
loop
adc
mov
jno
mov
sbb
push
push
push
aas
aam
sub
ret
ja
sbb
sub
sbb
inc
or
add
mov
loopne
inc
or
jo
and
or
orb
xor
sub
loop
cmp
jne
mulb
mov
movsl
arpl
clc
pop
mov
adc
cmp
faddl
insl
shlb
test
loop
lds
jae
xor
jb
xchg
call
pop
test
push
jns
dec
test
imul
cmpsb
in
push
fs
cmp
fiaddl
dec
std
call
pusha
add
lock
push
data16
jmp
mov
sbb
pushl
lds
xchg
mov
jo
dec
dec
popa
mov
in
clc
xchg
ret
es
adc
leavew
and
call
bound
stos
push
inc
inc
adc
int3
adc
rcrb
dec
inc
cmp
push
aaa
movsl
cmpsb
fnstcw
xor
xchg
or
mov
loop
or
ss
lret
sub
hlt
in
popf
or
dec
sbb
mov
or
out
mov
xor
sbb
lret
ljmp
stos
mov
mov
pusha
xchg
popf
xlat
adc
lcall
or
jmp
inc
mov
out
inc
insl
sub
decl
data16
lock
pop
cltd
mov
into
test
and
outsl
pushf
inc
in
xor
dec
sub
ret
sub
fsubr
jmp
push
mov
pop
push
mov
out
cmp
js
cli
fbstp
ds
fistl
clc
popa
loopne
dec
iret
cmp
sub
dec
shrl
pushl
xorl
addr16
xchg
jmp
test
sbb
nop
jnp
dec
cmp
jo
shll
pushl
sbb
dec
jmp
cmp
xchg
cmpsl
hlt
push
pop
xor
inc
pop
add
jg
loope
add
sar
jbe
push
dec
inc
add
jae
jbe
pusha
jle
mov
jecxz
mov
push
inc
aaa
and
inc
or
aaa
adc
out
sbb
inc
rcll
xchg
aaa
xor
outsl
decl
or
jo
mov
fcomip
mov
lcall
lods
push
lods
or
xor
lea
cmp
aaa
sbb
call
call
mov
cmp
outsb
js
ret
movsl
sti
call
clc
incl
adc
arpl
adc
jge
mov
push
fcom
sbb
ljmp
cmc
inc
cmpsl
rclb
mov
cltd
and
roll
xchg
sub
scas
lds
mov
call
lcall
sti
inc
add
dec
in
mov
dec
sbb
sbb
sub
das
sub
in
cmpsb
cmp
add
mov
adc
loop
sar
inc
adcb
dec
iret
mov
dec
push
cli
sub
cmpsl
mull
jbe
mov
mov
scas
icebp
jmp
lcall
std
out
ljmp
xchg
insl
dec
into
ret
cmpsb
mov
jp
enter
lods
lahf
repz
inc
add
lcall
mov
sbb
mov
xchg
xchg
out
lcall
jnp
je
lock
or
xlat
pop
sahf
sub
xadd
bound
inc
dec
sarb
jmp
cmpsb
je
jmp
or
xor
iret
jl
pop
test
jns
or
sub
mov
call
fldt
jns
inc
fimuls
jmp
sub
fcmovu
dec
lods
out
out
cmp
ljmp
sbb
jg
shlb
cmp
inc
std
adc
xor
or
rolb
lock
lcall
aad
dec
test
repz
mov
fs
ret
cli
nop
dec
push
mov
mov
cmc
pushl
jg
imul
aaa
cmp
fwait
pop
test
ljmp
sbb
sub
and
arpl
dec
sub
ret
lock
mov
ljmp
add
cmp
add
push
ror
dec
jle
dec
adc
add
adc
pop
inc
testl
sbb
inc
dec
adc
aas
push
in
nop
dec
or
sub
adc
mov
loopne
sbb
push
das
pop
fimuls
rclb
mov
stos
bound
sar
sahf
mov
pusha
inc
std
add
cld
ds
mov
int
add
adc
cmpb
mov
inc
lock
aam
cli
in
add
dec
out
mov
scas
testl
add
xor
push
and
lods
rcrl
dec
add
and
push
aam
inc
incb
mov
lahf
cmpsb
test
lds
sbb
mov
cmp
xor
mov
jecxz
cmp
aaa
adc
test
aaa
inc
insl
test
add
mov
in
add
mov
mov
mov
xor
xor
or
inc
push
adc
inc
rcr
mov
add
push
cs
dec
les
lcall
sub
or
mov
fstpl
xor
out
or
inc
nop
mov
cld
mov
push
jno
dec
push
jo
sub
test
cmpsb
xor
lock
into
mov
dec
in
addr16
sarb
add
mov
push
mov
popf
add
push
shrl
mov
or
and
fiaddl
orb
inc
out
mov
mov
lock
in
cmp
into
adc
in
in
push
test
push
cs
and
addr16
xor
ljmp
cld
decl
rcr
cmp
jb
loopne
into
clc
inc
inc
mov
mov
out
mov
dec
push
dec
jbe
aad
and
nop
adc
lock
mov
lea
push
push
push
ret
test
jns
gs
lcall
loop
jb
sub
les
insl
sbb
xor
popa
pop
loope
xor
sub
xor
in
add
mov
mov
push
hlt
fsubs
rorl
stos
add
and
lods
inc
insb
stos
and
xchg
jbe
sbb
jl
sub
fistpll
inc
test
xchg
stc
mov
lret
aad
jle
xor
std
sbb
sub
ss
aaa
sbb
ja
inc
test
cmp
inc
lret
cmp
clc
incb
shlb
scas
pop
mov
mov
arpl
adc
push
insb
jns
add
mov
test
pop
es
sub
ds
dec
jmp
add
sbb
sub
faddl
movsl
and
xor
xor
mov
int3
pushf
add
jo
in
xor
cmp
sbb
cld
xor
sub
inc
fsub
test
repnz
xchg
movsl
jecxz
pop
or
fldt
shrl
hlt
xor
clc
and
push
movsl
sbb
popf
adc
mov
or
icebp
icebp
rcl
pop
fcmovnb
dec
push
pop
ret
xor
adc
shll
push
test
nop
pop
test
mov
xchg
pop
insl
fisubs
test
fcmovne
inc
mov
out
pop
mov
addr16
insl
add
call
adc
int3
test
fdivs
ja
lods
lret
push
adc
push
add
jge
rolb
ret
inc
adc
add
cwtl
xlat
cmc
cmpsb
orb
incl
add
mov
inc
adc
sbbl
mov
inc
hlt
xor
pushf
push
loopnew
sahf
sub
inc
inc
out
pop
int3
add
fsubs
and
add
dec
test
data16
inc
jo
fsubp
lds
cwtl
jle
scas
add
xchg
clc
imul
add
pop
or
sub
cmpb
xlat
rol
cwtl
push
dec
jb
push
xor
into
and
ds
xorb
ret
pop
dec
mov
lock
shlb
fisubl
dec
sbb
js
or
mov
leave
jge
cwtl
sbb
mov
lcall
dec
sbb
mov
les
jo
fs
cwtl
stos
jp
xchg
lock
jbe
sub
ja
and
pusha
push
push
pop
lret
bound
rolb
jp
adc
and
jne
push
xchg
sar
adc
and
add
mov
inc
jnp
int3
lcall
addb
mov
iret
fcoml
or
xlat
jo
ds
cmp
iret
js
repnz
mov
ret
vmovsd
dec
ret
xchg
daa
enter
and
inc
ret
out
push
push
push
push
xchg
mov
sbb
sbb
lcall
inc
fs
inc
and
or
push
mov
inc
pop
test
pop
xor
aas
or
jnp
or
cmpl
sbb
cltd
hlt
sub
cmpsl
and
sbb
mov
pop
in
push
pop
sysexit
data16
jge
jmp
sbb
ja
sti
scas
adc
outsl
adc
pop
inc
sbb
mov
movsl
in
inc
inc
dec
or
dec
cmp
pushl
push
add
pop
sbb
cmp
mov
clc
jg
pushl
mov
in
pop
sbb
into
imul
or
and
popf
and
sti
inc
inc
xor
push
jns
xchg
mov
loop
call
cmp
insl
decl
ret
rorb
push
cmp
ja
insb
ret
add
push
dec
ds
push
aam
in
ds
lcall
ljmp
sub
ret
scas
or
mov
fsubr
ljmp
jmp
adc
leave
push
adc
clc
cltd
push
pushf
jb
rorl
inc
fdivr
mov
test
push
jb
pop
addr16
out
inc
or
bound
test
mov
cli
call
rcrb
leave
lods
push
pop
out
mov
mov
pushl
mov
adc
or
aas
dec
push
mov
xchg
mov
incl
aad
aas
loopne
repz
cmpsl
push
ret
fwait
add
sub
inc
cmpsl
adc
stc
pop
push
push
mov
dec
test
into
jp
mov
popa
fistpll
fldt
pop
sbb
dec
in
test
daa
push
cmpsl
fbstp
decl
in
add
xchg
das
test
out
or
cltd
call
pop
jo
lcall
push
xor
push
mov
cmp
popf
rcrl
sti
adc
jb
jmp
ljmp
pop
push
jne
aad
cmpsl
addl
adc
jmp
loopne
xchg
mov
cmpsl
repnz
add
adc
or
push
repnz
jp
decl
or
pop
in
dec
xor
in
cmp
push
mov
xor
stos
mov
movsl
and
dec
scas
scas
movsl
cltd
fwait
incl
loope
test
mov
cmp
dec
mov
push
mov
pushl
mov
stos
dec
shll
xchg
mov
sbb
dec
mov
mov
add
ja
cmpsl
or
out
leave
mov
jnp
das
mov
lock
out
inc
icebp
jmp
pop
ds
add
std
add
adc
jbe
push
int
sub
xchg
ljmp
das
sar
add
mov
jmp
loope
push
jge
mov
xor
das
hlt
dec
cwtl
mov
and
loopne
aaa
or
sub
add
decl
push
sub
int3
cwtl
adcb
push
fidivrs
aaa
mov
cmp
xchg
inc
jl
add
mov
push
icebp
xor
sarb
int3
mov
sub
int3
sahf
sbb
cmp
cmc
fistpll
push
call
repz
sub
pop
in
imul
aam
into
or
xor
clc
adc
lcall
mov
xor
pop
jp
enter
pop
pop
stos
das
push
sbb
lcall
or
lcall
shrl
sub
pop
xchg
push
insl
pop
cltd
sahf
inc
sub
loopne
dec
adc
bound
repnz
and
incl
ret
push
out
mov
test
push
mov
sarb
call
stc
and
lds
or
push
inc
sti
into
pop
push
out
ds
fidivrs
inc
clc
fistl
pushl
out
add
sbb
xor
jecxz
mov
sub
add
imul
icebp
sbb
cmpsl
xor
mov
and
mov
lcall
lahf
inc
cmp
roll
xchg
pop
and
and
lcall
or
rol
stc
test
movsl
shll
std
pushl
jge
rolb
xor
jl
aaa
ljmp
es
push
push
cmp
sbb
fucom
and
mov
wrmsr
mov
ret
dec
push
cli
decl
adc
fwait
addb
int3
rclb
shl
mov
pushl
push
inc
insl
dec
out
out
ljmp
adc
mov
push
cmp
add
loopne
leave
jl
push
ret
ret
sahf
mov
jg
jmp
out
jge
push
data16
jg
mov
test
in
add
call
xor
or
sub
clc
dec
adc
sbb
in
aad
shrb
enter
decl
push
movsl
iret
shll
cld
mov
mov
repnz
cmc
cmpsl
hlt
or
fldenv
clc
push
mov
xor
cmp
add
cs
dec
ljmp
pop
icebp
xor
xchg
sbb
and
rcr
inc
jmp
mov
pop
decl
testb
xor
stos
loopne
xor
divl
xchg
aaa
mov
mov
call
ja
jb
and
mov
mov
xchg
lret
adc
divl
std
into
cld
inc
inc
push
add
call
orl
lods
movsl
xorb
push
cmp
gs
arpl
xor
or
adcl
dec
sub
mov
or
jmp
jmp
das
aam
push
sbb
aas
adc
xlat
lea
cmc
mov
jmp
test
jnp
cmp
mov
xchg
mov
aad
outsb
ffree
push
pop
mov
pushl
std
aad
add
push
pop
aaa
loopne
pop
fbld
or
mov
jmp
push
in
jmp
cltd
mov
aad
jae
jns
repnz
pop
and
icebp
ljmp
mov
mov
and
test
push
stc
xchg
rcr
xchg
dec
jp
and
push
xlat
ret
ljmp
fs
call
mov
xchg
fcomip
sub
adc
dec
iret
shr
xchg
incl
dec
dec
test
mov
and
ja
fcoml
sbb
jle
mov
in
add
lahf
clc
ret
mov
mov
push
sar
jle
pusha
pop
arpl
and
pop
mov
or
mov
popf
add
fsub
sahf
cmc
lcall
add
mull
xor
adc
out
popf
pop
adc
clc
ljmp
xchg
pop
sbb
ficomps
dec
loop
sbb
rorb
ljmp
mov
dec
mov
mov
fcmovnb
cmp
dec
xor
das
cmpsl
dec
push
popf
push
sub
ret
ret
decl
js
mov
scas
mov
mov
ja
ret
xor
sub
sbb
mov
jle
add
xor
shll
jbe
fcmovb
xchg
sar
pop
loopne
jb
ret
rcrb
mov
fistps
fs
adc
outsl
cld
js
xor
out
std
mov
dec
data16
js
inc
fidivrl
mov
shll
pop
int
mov
cld
fsubp
sub
dec
adc
inc
jl
or
insl
sbb
push
xor
fbld
mov
les
push
or
bound
mov
testb
add
lock
imul
movsb
xchg
outsb
xchg
cs
add
mov
ja
inc
shrl
idivl
xor
xor
les
inc
or
pusha
mov
add
inc
push
cs
cli
jmp
ja
iret
adc
push
push
pusha
fdivrl
repnz
jl
cld
dec
movsb
insb
pop
inc
adc
jmp
ljmp
pop
push
push
adc
popf
mov
sbb
pusha
dec
mov
dec
ja
mov
outsl
pushl
repz
cmp
in
in
inc
mov
fs
lcall
pushf
nop
and
sahf
sub
ret
shrb
push
sub
mov
jnp
mov
mov
xor
mov
xlat
mov
stos
int3
je
in
push
arpl
mov
push
dec
call
ret
xor
add
jecxz
pop
adc
je
push
mov
fdivr
dec
ljmpw
cmpb
gs
push
orb
fmull
mov
ja
push
shrl
mov
hlt
adc
or
ljmp
test
mov
sub
rcl
inc
pop
lea
xchg
lcall
dec
pop
cmpxchg
push
cmp
je
mov
add
push
pop
and
shlb
je
data16
add
dec
aad
sub
lret
ljmp
std
inc
scas
aam
fdivl
cmpsb
dec
pop
xchg
or
sub
rcrl
out
ds
cmc
std
sub
fs
rcll
stc
cmp
jbe
xchg
lahf
and
daa
pusha
fcmove
test
decl
mov
xchg
out
pop
shll
imul
dec
and
lcall
ds
arpl
lea
mov
xlat
pusha
push
stc
lea
lret
jae
std
jg
test
xor
les
sti
adc
enter
sbb
pop
dec
aas
push
mov
popl
in
sahf
xchg
push
dec
add
testl
call
in
movsl
sti
and
js
jbe
icebp
sub
ljmp
lret
xchg
and
lds
popf
pushw
in
test
lret
cmpsl
mov
scas
int
inc
push
xor
pop
call
test
xor
push
pop
loop
clc
and
jno
jmp
pop
lds
lock
call
add
aas
bound
push
inc
mov
nop
in
sub
and
mov
mov
nop
cmp
dec
dec
and
sbb
lds
lock
das
inc
dec
cmp
fnstcw
mov
gs
daa
sahf
sbbb
xchg
inc
test
pop
ficompl
mov
negb
and
jecxz
cmp
subb
jl
movsb
imul
std
jmp
push
and
inc
outsb
inc
inc
inc
jg
popa
cmp
mov
or
push
fistpl
xchg
push
sahf
movsb
mov
mov
jmp
jo
mov
inc
shrl
popa
cld
pop
imul
daa
push
mov
push
push
or
mov
fisttps
std
xchg
fstp
xchg
imul
incb
cmp
jg
popf
xchg
ds
xchg
packuswb
xor
sti
and
add
jecxz
bnd
incl
jns
pop
or
inc
adc
movsl
mov
jg
repnz
outsb
popf
dec
xlat
push
cmp
xchg
inc
int3
popf
cmp
orb
sti
push
jmp
mov
int3
aaa
or
ja
jno
mov
call
and
bound
ret
xchg
je
repnz
das
lock
shrl
mov
cmp
jg
cmc
incl
push
cs
cmpb
sub
dec
adc
mov
or
lcall
stc
dec
mov
xlat
pop
xchg
dec
lods
push
and
adc
mov
pushf
clc
int
ret
mov
hlt
into
je
sbb
test
imul
dec
xor
mov
movsb
cmp
dec
add
lea
popf
clc
fidivrs
sbb
decl
jnp
sarb
push
push
mov
pushf
jnp
rcrb
fsubrp
ret
inc
shrl
sbb
mov
popf
xchg
dec
jp
sbb
lock
mov
stos
in
xorb
mov
in
pop
out
mov
rcr
or
test
sbb
je
mov
mov
call
out
into
into
cs
stc
ds
mov
out
cmp
aam
adc
cli
ret
mov
xor
leave
sbb
movsl
mov
sbb
dec
cvtdq2ps
adc
mov
rcrl
mov
mov
xchg
cmc
pop
std
jg
cli
out
out
cmpsl
mov
test
sar
jg
mov
inc
mov
fsin
add
xchg
xchg
jbe
inc
lret
push
clc
or
push
jecxz
dec
ljmp
jecxz
push
bound
pop
clc
das
je
pop
inc
mov
and
xor
add
outsl
icebp
fists
icebp
inc
rclb
popa
lds
lcall
loopne
adc
arpl
xor
inc
xor
sbb
or
lcall
sub
shrl
xchg
outsb
pop
cmpsl
ret
inc
add
jl
ret
mov
cmc
js
loopne
je
out
out
cli
fbstp
nop
push
pop
push
fnstsw
ljmp
outsb
ret
push
cmpsl
test
jno
outsl
outsb
and
shl
sbb
sub
mov
sbb
mov
mov
insb
sub
out
testb
mov
mov
mov
dec
loop
insl
ret
cmpsl
arpl
mov
push
movsb
rclb
add
outsl
icebp
sarb
sub
push
hlt
mull
call
jmp
aaa
adc
test
lret
fidivrs
and
test
sbb
mov
add
ficomps
mov
mov
imul
outsl
pop
repz
pop
ss
adc
push
std
dec
icebp
data16
rclb
cmpsl
sbb
lahf
cmp
push
shl
mov
xchg
xor
sbb
jbe
mov
imul
push
mov
popf
pop
mov
inc
lcall
or
jmp
push
inc
cmp
and
call
fldcw
cmp
decl
es
xor
nop
mov
sub
mov
mov
icebp
psubd
in
dec
cld
repz
popf
jl
sahf
shr
loope
cmpsb
xlat
add
add
cli
adc
incl
repnz
nop
pop
adc
jbe
repnz
cld
xorb
shlb
clc
mov
xchg
cmp
dec
aad
xor
mov
ss
sti
fcmovb
mov
ss
daa
fwait
push
fs
adc
add
mov
in
fcompl
xor
stc
xchg
icebp
addr16
ds
jle
mov
in
pop
stos
lret
aaa
sbb
pop
mov
mov
or
rcll
xor
imul
pop
sbb
dec
pop
add
mov
dec
ffreep
pushl
add
add
dec
jne
aad
popf
jmp
pop
call
inc
rcrl
xchg
fucomip
pop
dec
jns
mov
ret
xor
cmp
mov
in
mov
scas
aaa
jg,pt
adcb
jmp
xor
in
jl
mov
mov
push
push
add
insb
mov
fwait
jg
mov
and
or
ds
out
cmp
jg
dec
iret
lods
sarl
and
pop
loope
push
adc
xchg
pop
cli
jg
call
cmp
aam
iret
jecxz
int
push
jge
sub
inc
aad
jbe
call
or
aas
in
nop
lcall
add
scas
sarb
cmp
pushl
push
dec
push
divb
xchg
pusha
sbb
cmpsl
adc
adc
adc
leave
jge
cmp
push
pop
loopne
rcrl
fadd
jne
pop
pop
pop
inc
cmc
dec
cmp
ljmp
push
out
inc
or
xor
cwtl
cmp
mov
ret
in
push
and
jmp
xor
js
int3
sub
or
mov
adc
mov
ljmp
out
cmp
fldenv
cli
call
mov
cmp
pop
dec
aad
adcb
pop
jb
jg
or
push
inc
cmp
popf
add
decl
mov
stos
sub
test
inc
mulb
repnz
int
iret
cltd
fsts
sub
push
adc
stc
cmp
pop
lods
sub
or
and
or
sti
cmp
mov
aaa
cmp
jp
jne
aaa
pop
mov
pop
cmp
into
jne
in
or
xor
arpl
enter
pop
xchg
adc
push
ret
jns
mov
jmp
add
sub
aam
pop
inc
sub
or
sub
fcmovbe
das
stos
or
incb
aam
mov
aam
lahf
and
adc
mov
adc
sub
add
mov
jmp
sub
sub
push
aam
and
mov
xchg
mov
xchg
not
adc
pop
faddl
pop
jp
mov
or
mov
push
cld
out
dec
outsl
mov
sub
jo
ret
or
inc
inc
ss
sub
inc
mov
movsb
aad
fisubl
ret
mov
push
add
out
hlt
xchg
adc
test
mulw
inc
je
ja
cmp
sub
aaa
or
iret
dec
hlt
jnp
push
sbb
pop
hlt
vaddss
lcall
add
sbb
or
data16
or
inc
test
and
sub
inc
arpl
stos
sbb
dec
and
and
add
adc
sarb
jp
clc
inc
ds
push
xchg
add
das
dec
js
jp
pop
hlt
jno
mov
cmp
push
jl
popl
je
fistps
cmpsb
mov
inc
adc
xor
js
add
xchg
and
and
and
add
xchg
inc
pop
data16
adc
mov
pop
xor
mov
mov
and
dec
js
bound
add
aad
mov
adc
daa
dec
adc
idivl
test
hlt
sub
and
xor
in
dec
xor
dec
clc
push
push
add
add
mov
mov
xchg
sub
data16
sub
retw
mov
call
sbb
orb
push
push
shrb
mov
aaa
jo
add
mov
and
fwait
stc
das
push
scas
push
fldcw
jmp
adc
cwtl
mov
fcoms
mov
and
aam
mov
fldenv
lcall
add
sub
xchg
mov
sub
add
std
lods
lret
jne
orb
outsl
adc
imul
adc
mov
inc
loopne
int
add
aas
ret
repnz
out
jmp
dec
stos
loop
dec
mov
hlt
cwtl
xor
xchg
stc
mov
jecxz
scas
xchg
jp
ss
pop
call
mov
gs
pop
mov
loop
dec
faddl
xorl
rolb
outsb
test
lcall
inc
adc
movsl
arpl
cmp
mov
pusha
sub
in
sub
ficompl
xchg
jg
pop
sub
movsb
pop
test
push
addr16
call
or
jne
aaa
int
sub
adc
adc
adc
push
ss
mov
adc
aam
mov
call
cli
in
cltd
stos
mov
adc
jnp
xor
xor
jmp
jecxz
ljmp
and
mov
mov
pop
sub
mov
jecxz
aaa
pop
jmp
repnz
pop
add
add
pop
or
mov
cmp
mov
lcall
int3
mov
push
cmc
xor
test
mov
in
mov
mov
out
mov
xchg
inc
test
pop
insb
gs
call
cmp
movsl
jg
repnz
aaa
in
test
mov
mov
adcb
xor
sub
mov
cli
dec
cmp
decl
or
je
jae
push
fidivrs
mov
ficoml
sbb
sub
jle
mov
decb
pop
nop
int3
xor
shrb
ljmp
pop
aas
loope
insl
lahf
mov
fstps
cmpsl
pop
std
mov
mov
inc
or
adc
icebp
enter
bound
lret
dec
addr16
in
pop
fs
ljmp
daa
push
inc
or
ljmp
ret
js
test
sub
call
sbb
and
xchg
ret
jecxz
test
mov
or
adc
test
ret
jl
mov
lret
icebp
fnstsw
out
adc
jb
lcall
pushf
push
push
fs
jl
xor
out
add
and
mov
mov
hlt
es
fdivrp
mov
lods
jmp
jge
in
mov
inc
jmp
pusha
jp
clc
sahf
in
std
jmp
sbb
das
push
mov
pushf
jno
xchg
mov
adc
dec
mov
add
enter
loope,pn
ret
dec
and
ljmp
sahf
mov
and
lret
ret
cmp
xchg
movsl
cmp
cmp
mov
in
fidivrs
insb
negb
pushl
cli
ljmp
pop
or
insl
push
icebp
nop
cld
jo
push
inc
xchg
push
adc
fiaddl
cmc
dec
add
mov
sub
dec
and
mov
addr16
pop
daa
sub
enter
into
lcall
fdivr
and
jno
cmc
in
inc
ljmp
mov
stc
aam
xor
sub
mov
ss
das
pop
inc
cmp
xor
clc
mov
jp
repnz
rolb
incl
stc
je
push
subb
lahf
xlat
xchg
fxch
jecxz
out
sbb
and
incl
mov
push
test
dec
xor
cmp
cmpsb
pushf
push
mov
jg
push
sub
aaa
mov
pusha
sub
mov
shrl
adc
lcall
jle
lock
iret
jecxz
push
dec
mov
add
std
mov
rorb
popf
adc
outsl
int3
mov
sbb
mov
pushf
mov
jns
cmpl
or
push
jg
jmp
push
adc
push
ret
add
mov
cld
cmpsb
movb
fcmovne
jo
fadds
jne
std
add
fucomi
mov
pop
inc
dec
or
push
cli
mov
inc
mov
or
aad
adc
jbe
jmp
js
adc
push
jle
jae
push
add
lea
cmc
lcall
out
ja
xchg
mov
sbb
test
push
cmpsl
call
idivb
ficoml
inc
scas
fdivrl
ret
sbb
cmp
inc
fsts
fiaddl
pop
push
push
pop
xor
and
push
pop
dec
adc
mov
cmp
add
mov
sub
xlat
test
mov
or
dec
fistps
sahf
cmp
testl
movsl
add
adc
sbb
fcmove
sbb
stos
rol
adcb
inc
inc
jo
aas
movsb
cmp
sub
xor
imul
lods
repz
mov
popf
sub
sbb
decl
mov
adc
shlb
inc
adc
shrb
mov
int
inc
xor
lea
dec
ret
push
add
xchg
pop
add
mov
pop
jnp
cbtw
mov
maxps
mov
inc
mov
inc
xor
push
xchg
push
inc
push
inc
les
inc
int3
jo
inc
jg
loope
fwait
cld
imul
ss
mov
fnstenv
mov
xchg
lret
dec
pop
xor
push
add
or
sbb
jns
sub
cltd
push
pusha
cmp
mov
push
push
fbld
roll
inc
sub
add
sbb
jmp
bound
cld
or
sub
andb
cwtl
sub
scas
push
xchg
aaa
add
lcall
push
test
out
sti
jbe
sub
cs
pop
imul
addl
std
clc
sahf
jbe
inc
pop
inc
add
addr16
push
test
lods
cmp
fadds
dec
ror
xchg
arpl
rcrb
xor
and
lret
fistpl
mov
cmp
cmpsb
pop
jg
and
adc
add
push
and
push
shlb
test
push
cmp
ljmpw
add
nop
or
and
dec
dec
pop
js
pusha
cmp
lcall
adc
xchg
push
arpl
xchg
icebp
cmp
rolb
icebp
sub
add
ss
lea
aas
jb
loope
jecxz
repnz
pop
jnp
cmp
add
cmp
push
test
cmp
jbe
and
cld
pop
sub
push
ja
adc
insb
xor
xor
leave
xor
mov
test
sub
and
mov
mov
cwtl
xor
dec
cmpsl
inc
or
js
in
sbb
and
out
jmp
pop
add
or
roll
add
mov
dec
bound
ret
jg
jno
add
add
push
outsl
ja
sub
xor
daa
cmp
xor
les
int
outsl
mov
data16
int
inc
daa
fs
sub
jnp
shll
mov
loope
stos
xchg
jnp
stos
call
adcl
push
outsb
faddl
test
xor
rorl
pushf
data16
xor
loopne
mov
sti
jmp
negl
or
ja
inc
cmovno
testl
sub
or
xor
and
push
cmp
mov
lds
sub
scas
add
inc
repnz
jb
das
sbb
gs
push
or
call
sub
xor
jo
add
into
icebp
add
pushf
loope
dec
cmp
bnd
testl
rolb
leave
lahf
cld
ja
sbb
add
adc
cmp
rorl
das
add
test
jb
popf
inc
fisttpll
or
aas
cmp
cmp
lock
sub
jae
adcl
xchg
mov
xchg
outsb
loope
and
test
mov
jno
fidivs
xor
mov
xchg
repz
push
lahf
pop
add
xchg
mov
adc
jo
xor
pop
daa
sbb
popf
or
pop
adcl
and
pop
arpl
out
mov
testb
les
bswap
sub
or
and
sbb
jecxz
shll
lret
sub
rorl
lahf
pop
adcl
xchg
xchg
mov
loopne
out
xor
fnop
xorl
add
push
ljmp
hlt
test
push
add
inc
nop
pop
jo
and
fcomip
add
mov
push
jae
xchg
mov
sbb
sub
in
or
sub
jbe
add
inc
lods
sub
pop
pushf
gs
fiaddl
dec
js
js
sti
or
push
cmp
lahf
dec
lcall
rolb
cs
inc
pop
cmp
add
push
push
xchg
pop
fists
outsl
in
dec
mov
push
push
and
sub
into
and
sti
rcll
and
mov
orl
adc
mov
outsb
adcb
pop
cld
int3
adc
fadds
stos
loopne
hlt
lock
add
adc
lret
push
pop
push
xor
sbb
dec
std
push
jb
xlat
dec
push
sbb
xchg
imul
cmp
sbb
xor
stos
mov
pop
pop
xor
pop
cmp
xor
inc
adc
movsb
rorl
in
insb
stc
shll
jge
std
in
pop
push
inc
add
data16
mov
insl
cmpsb
sub
dec
sub
and
inc
inc
mov
push
jns
inc
push
fwait
jo
mov
inc
test
dec
mov
shlb
inc
in
or
jl,pn
inc
add
out
sub
nop
adc
push
add
add
mov
inc
xor
icebp
mov
xor
mov
test
enter
pop
int
xchg
es
ffreep
test
sbb
fisubl
mov
shlb
loope
push
ss
jno
outsb
push
lock
jns
inc
cmpsb
mov
xchg
or
or
cmp
inc
add
gs
insl
inc
in
xchg
push
shll
sarl
or
loopne
mov
test
icebp
test
sbb
sbb
out
add
ds
addr16
xchg
or
inc
cmp
in
sub
and
and
xor
xor
and
bswap
and
xor
add
push
add
sbb
addl
leave
adc
inc
dec
setge
push
push
add
mov
or
fwait
add
push
adc
add
mov
cmp
push
inc
add
mov
inc
mov
adc
repz
sbb
dec
xchg
mov
push
cmpsb
test
or
subb
arpl
xor
lret
pusha
in
shll
lods
or
jge
inc
jo
xor
jo
shll
or
and
add
adc
sbb
cmp
jae
xchg
inc
pushf
test
dec
xchg
rorl
adc
ret
aaa
arpl
loop
xor
cmp
jns
mov
cmpl
jnp
sbb
pushf
cwtl
int
inc
adc
int
ret
xor
repnz
pop
add
xchg
mov
add
xchg
lcall
mov
cmpb
and
or
in
je
jb
icebp
dec
xchg
andl
cmp
add
sub
mov
bswap
mov
mov
in
ret
sbb
add
xor
push
push
add
jbe
cmp
and
jmp
mov
add
das
and
scas
idiv
shrl
ret
push
sub
lock
loopne
orl
or
in
sbb
test
ret
pop
test
je
fcoml
pop
adc
push
lock
xor
in
loopne
add
dec
mov
sbb
and
aas
arpl
fisttpl
adc
inc
mov
icebp
nop
add
jp
lcall
xor
adc
outsl
and
jl
mov
cmpsl
push
xchg
inc
jp
pop
lcall
add
inc
jbe
push
repnz
cli
push
insb
and
insl
outsb
sub
repz
pop
repnz
jo
out
xchg
shll
add
jge
xor
in
movsb
sub
and
daa
lret
jae
add
clc
repnz
push
int3
xor
xor
xchg
or
imul
add
jno
popa
fs
xchg
push
rol
sbb
and
add
imul
mov
inc
jecxz
adc
in
adc
icebp
test
xor
dec
addr16
pop
xor
push
mov
adc
add
push
imul
inc
and
jbe
lods
cmp
mov
push
xchg
scas
loope
sbb
or
xchg
mov
push
repnz
inc
mov
sub
mov
dec
cmp
push
in
xor
pop
movsb
pop
lock
jb
or
scas
add
jg
xlat
sbb
dec
sbb
fsubs
push
fcomip
iret
xor
dec
sub
test
pop
hlt
pusha
pop
pop
add
ss
and
lea
adc
daa
clc
out
popf
add
or
negl
add
ss
and
xor
sbb
lahf
in
and
or
test
or
inc
lcall
ficomps
and
pop
loopne
xchg
pop
mov
lret
inc
adc
pop
imul
push
lahf
adc
arpl
fisubrs
mov
insb
in
cmp
movsb
fcoms
dec
add
in
cmp
out
nop
subb
xchg
mov
imul
fnop
xlat
rcrl
cmp
cwtl
mov
repnz
mov
hlt
into
sbb
fstps
push
dec
test
test
and
sbb
pop
xor
mov
inc
xlat
lods
xchg
dec
popa
fldenv
sti
popf
dec
add
cmp
testl
inc
dec
xchg
pop
dec
mov
int
add
aam
inc
and
sub
out
add
nopl
adc
out
inc
mov
jns
addb
stos
int
insb
pop
lahf
sbb
mov
insl
add
add
add
sbb
sub
ret
mov
das
daa
xor
cmp
adc
out
jmp
scas
jp
and
ljmp
mov
xor
ss
scas
pop
rorl
in
cmpsb
jae
mov
sub
pop
test
jno
cmp
fs
adc
dec
adc
mov
cmpl
enter
rorl
addb
movsl
sub
stos
out
fwait
test
jp
xor
es
cmp
dec
xor
inc
sbb
sub
xchg
dec
jp
lret
push
cmp
mov
dec
lods
ficoml
sbb
stc
inc
jmp
add
sbb
push
jl
or
fidivrs
xchg
or
push
xor
repz
adc
push
in
inc
add
into
int
pop
getsec
or
mov
add
test
js
aaa
xor
das
jns
les
add
fidivs
or
push
test
pop
fisubl
inc
ffreep
scas
adc
cld
sbb
push
xchg
out
pop
in
bound
cmp
push
cmp
add
cmp
bound
xchg
jp
mov
popf
clc
xlat
xor
addb
iret
cmp
and
lret
xlat
sub
test
dec
icebp
hlt
subb
sub
jb
fs
cmp
xchg
hlt
subl
dec
cmp
andl
sbb
jmp
rclb
and
jnp
inc
mov
and
inc
pop
and
lock
add
push
popa
sub
sub
mov
mov
pop
jmp
mov
add
dec
dec
mov
pusha
ljmp
dec
add
fidivrs
loop
xchg
orb
jmp
bound
aad
mov
adc
test
add
pop
sahf
fidivrs
mov
cmpsl
test
cmp
gs
and
shll
pop
xlat
scas
cltd
scas
or
push
or
or
or
and
push
push
mov
and
add
sub
into
in
dec
outsb
xchg
add
rolb
in
inc
call
jp
mov
and
pop
mov
and
adc
push
adc
popa
add
push
and
roll
fidivrl
pushf
xor
imul
mov
loop
mov
xor
clc
dec
mov
lods
inc
and
cmp
or
jl
and
lock
jne
rclb
cmc
sbbb
mov
and
adc
mov
idivl
rcll
inc
jle
mov
fcompl
in
testl
lahf
or
fwait
mov
push
jb
stc
mov
add
outsb
mov
ds
lret
stos
in
decl
mov
fidivl
sub
pushf
sub
stos
sbb
in
adc
or
pop
daa
xor
cmp
xor
lods
lret
xchg
lret
mov
push
and
add
cmpsb
push
inc
lods
shl
or
or
or
fnstsw
pop
dec
fsubr
lds
popa
jmp
popa
xchg
push
push
xchg
icebp
in
push
test
pop
cmp
or
lret
adc
sbb
out
sub
push
lds
icebp
test
jmp
pop
and
xor
mov
sub
inc
int
loop
in
in
push
ds
fdivrl
xor
addb
dec
pusha
and
out
add
bound
je
test
pop
pushf
stos
imul
sar
cli
pop
rdmsr
out
push
divb
jmp
xor
sbb
mov
mov
add
sub
clc
or
cmpsb
jo
mov
xor
jle
call
cwtl
popfw
push
and
lock
lods
sub
ret
test
push
pop
sbb
mov
mov
push
mov
push
jns
and
sub
mov
fwait
cmp
mov
adc
ret
loopne
mov
inc
sbb
cmp
outsb
add
inc
int
push
adc
push
mov
lret
xor
push
sti
dec
jg
adcb
mov
icebp
sbb
fiaddl
push
xor
adc
icebp
adc
sbbl
lret
and
jg
mulb
xor
mov
mov
adc
inc
jae
add
mov
and
dec
in
enter
movq
push
pop
mov
shlb
call
pushf
out
adc
lcall
imul
jnp
int3
and
sub
push
sbb
cmp
push
jnp
imul
cmp
push
call
inc
clc
xchg
mov
aaa
insb
cmp
in
call
cmp
ds
push
mov
push
stos
mov
aam
pop
sbb
cmp
test
into
stos
push
mov
clc
cmpb
jmp
pop
push
adc
int3
mov
mov
or
xor
icebp
ds
jb
dec
imul
jmp
adc
dec
sbb
xor
xor
test
pusha
mov
mov
and
je
sbb
leave
cmpsb
sub
cld
ljmp
inc
repz
sub
push
push
incl
and
lahf
stc
sub
pushl
js
xor
pop
xchg
mov
int3
rorb
pusha
int
ret
push
jmp
sbb
or
push
pop
sti
jnp
fwait
inc
popf
lods
jb
xchg
jge
add
jg
test
dec
or
inc
jp
jae
dec
xor
inc
ret
cltd
fbld
ljmp
icebp
xchg
int3
mov
sub
cmc
cld
cli
xchg
sbb
into
or
ljmp
xor
jge
dec
inc
xchg
dec
mov
mov
jbe
out
push
movsl
dec
popf
push
mov
mov
jecxz
call
xor
add
sub
inc
push
popa
mov
pop
adc
xor
pop
ficoms
decl
test
and
push
out
mov
and
mov
popa
or
dec
lahf
jl
stos
sbb
sub
pop
dec
sarb
pop
je
pop
fwait
jo
add
bswap
ss
call
test
push
inc
push
sahf
jmp
insb
inc
pushf
or
or
sbb
xor
ret
lret
mov
in
adc
dec
jl
sub
stos
xor
jmp
inc
sbb
jmp
pop
pop
push
sbb
mov
sbb
pop
decl
out
shr
cmp
fisubrs
shll
pusha
aad
xchg
loope
repnz
in
xchg
pop
pop
jp
jge
mov
xorl
cmp
repnz
pop
int
ret
inc
arpl
push
rolb
dec
mov
or
test
sub
inc
and
xchg
out
movsl
cmp
out
aad
in
call
mov
sbb
dec
clc
call
jae
mov
pop
xor
mov
subb
into
lret
movsl
outsb
or
pop
call
mov
das
call
data16
std
call
sbb
fcompl
mov
and
pop
and
incl
daa
dec
ret
xchg
rorb
out
pop
jnp
jp
and
cmp
mov
xchg
pop
cmpsl
sbb
xor
ljmp
xor
movsl
decl
fcomp
daa
pop
and
test
test
pushf
repz
lcall
out
decb
addb
xchg
stos
cmpsb
cmp
inc
call
xchg
add
rorb
jge
cmc
ss
push
paddq
inc
test
out
push
aaa
fsubrl
push
aaa
add
sub
js
jp
jo
and
daa
ds
rolb
fistpll
fsubr
add
xchg
or
adc
aas
clc
xchg
out
inc
pop
pop
das
dec
lret
push
add
test
dec
push
jo
jg
cmp
jp
out
sar
test
mov
and
mov
fwait
and
hlt
lods
lods
arpl
sahf
call
ret
push
xchg
jmp
mov
loope
popf
loope
jge
and
push
loopne
bound
popa
sar
call
xor
lcall
movsl
mov
and
add
adc
push
inc
int3
xor
incl
jge
iret
jmp
mov
pop
icebp
in
icebp
xchg
cmp
call
mov
dec
dec
popf
pop
cmp
sbb
stc
stos
into
ficomps
data16
xchg
std
lcall
loope
test
dec
out
jp
adc
out
aad
and
int3
inc
mov
jecxz
fs
pop
cmp
out
or
insb
xchg
jg
ljmp
or
clc
cmpsl
adc
jne
cmp
inc
lock
loopne
into
imul
jl
sahf
push
add
jg
jl
pop
jo
push
sub
es
inc
jmp
sar
incl
repnz
push
inc
sarl
and
pop
push
popf
pop
dec
jmp
aam
scas
lcall
ljmp
cmpsl
xchg
xchg
fucomip
test
cmp
mov
sbb
decl
lret
in
sbbb
nop
adc
icebp
or
icebp
out
cmp
je
incl
sub
mov
inc
mov
enter
push
fcomip
or
or
xor
movsb
mov
pushl
lods
push
dec
mov
mov
xchg
out
jp
pusha
dec
iret
lahf
leave
int3
sub
in
jnp
adc
jge
push
imul
fisttps
dec
sbb
xor
dec
xchg
add
pop
and
xchg
out
mov
sub
sub
jne
ss
add
mov
sub
aam
inc
cmc
std
sarb
ljmp
les
lds
fisttps
cmp
test
push
push
cmp
add
push
mov
sub
lods
cmp
pop
add
sub
mov
dec
add
scas
lea
cmp
xchg
add
out
mov
mov
das
pop
adc
and
int
aaa
jb
cmpb
scas
jecxz
test
xor
pop
push
jno
pop
enter
push
nop
cmp
xchg
test
enter
jnp
adc
jno
push
lock
hlt
mov
or
sbb
inc
lret
or
mov
push
dec
ljmp
jb
out
pop
push
pop
hlt
mov
mov
arpl
jbe
lret
push
mov
xor
fs
aam
ret
test
cmp
stos
scas
les
sbb
sub
sub
adc
cmp
push
push
fidivrl
negb
sbb
cmp
jg
push
add
push
test
les
cmp
xchg
push
sbb
shl
adc
xchg
cmp
lock
push
or
testl
jo
xor
sbb
xchg
movsl
sbb
push
aam
loopne
rcrb
fcompl
rolb
shlb
mov
adc
mov
mov
popf
test
insb
enter
inc
adc
hlt
pop
add
pop
add
lahf
cld
ja
dec
add
inc
add
push
negb
sub
mov
andb
les
mov
push
fmul
or
or
adc
addr16
aam
clc
and
fwait
jmp
push
push
add
sbb
test
lock
and
mov
rclb
mov
call
test
aad
test
add
jbe
jo
cmp
loop
mov
stos
pop
aam
mov
in
sub
mov
test
push
adc
sub
push
mov
test
pusha
add
int
jle
push
sub
movsl
dec
jecxz,pn
daa
aad
aam
push
xor
inc
loopne
sahf
mov
inc
and
insb
dec
movb
loopne
or
dec
inc
addl
dec
addr16
nop
mov
or
jno
sbb
sub
call
mov
icebp
lea
and
xchg
sub
daa
shlb
sbb
dec
iret
xor
xchg
xchg
stos
jo
sub
mov
sub
ret
addr16
adc
inc
add
adc
rolb
sbbb
shlb
add
xchg
mov
inc
in
les
ret
and
add
sbbb
subl
int3
xor
xchg
imul
fnstsw
and
xchg
insl
adc
je
stos
hlt
dec
fdivp
or
sub
lds
mov
jmp
leave
sub
ljmp
xchg
loope
or
int3
incb
adc
mov
mov
fisubl
adc
inc
mov
addb
inc
sub
mov
or
data16
out
mov
add
pop
mov
or
pushl
arpl
test
cltd
imul
push
nop
sti
dec
xchg
ss
ljmp
int
insb
push
and
push
push
ret
jne
mov
daa
jno
push
push
mov
push
pop
popa
and
sub
and
into
cli
pushl
adc
in
sub
loop
ret
negl
fs
or
mov
jae
xchg
sbb
ljmp
push
int3
jmp
xchg
cltd
aad
lcall
cmpsb
sub
loopne
mov
dec
ret
push
dec
into
les
js
push
call
mov
scas
js
sub
lcall
cmp
pop
sti
lcall
movsl
sub
aaa
aad
inc
clc
les
and
mov
add
dec
cld
jmp
jno
sub
push
lahf
mov
ljmp
ljmp
loopne
sub
inc
sub
pop
push
adc
nop
xor
xchg
ret
outsb
daa
inc
scas
inc
mov
aaa
adc
mov
push
clc
lcall
jmp
sbb
arpl
push
or
jmp
ljmp
mov
pop
sub
sahf
stc
xchg
test
add
inc
leave
xor
lcall
lcall
test
or
shlb
xor
inc
pop
clc
adc
sub
lcall
lretw
clc
insb
mov
call
decl
or
testb
mov
aam
mov
push
sub
push
cld
jmp
push
mov
xchg
dec
lock
push
lea
aaa
ljmp
jmp
sbb
xchg
imul
mov
outsl
lea
jp
test
mov
cld
decl
mov
in
cmp
jne
cmp
call
mov
decl
xchg
imul
pop
cmp
pop
mov
outsl
popa
push
pop
inc
sbb
inc
fnop
pushl
push
cmp
lock
test
cmp
push
mov
movsl
dec
movsb
incl
mov
lds
in
jp
xor
push
sbb
pop
int3
das
lds
push
lock
pop
js
outsb
mov
mov
pusha
xchg
int3
dec
xor
aad
inc
jae
imulb
adc
incl
stos
mov
out
loope
inc
arpl
jmp
sbbb
jg
inc
mov
stos
pushl
in
out
pop
subl
push
jge
pop
aad
sbb
sbb
mov
lock
mov
testl
ds
mov
lods
push
sub
adc
adc
pushl
test
ja
lods
dec
test
jno
stos
and
aad
dec
push
rcr
test
inc
inc
aaa
xchg
cmp
cmp
clc
popf
xchg
xchg
xchg
jae
jb
int3
or
lds
stc
shl
and
fucompp
iret
stos
mov
xchg
loope
or
xchg
lcall
xor
lea
cmp
fs
mov
jg
addb
push
ljmp
pop
setg
pop
rep
push
call
les
mov
pop
sbb
mov
sti
cmp
int3
lods
push
jmp
popf
jns
popa
dec
jmp
incl
inc
fcompl
std
mov
bound
fwait
mov
leave
cmp
add
jmp
inc
cltd
or
mov
xor
cltd
filds
jb
mov
stos
cmc
nop
adcb
lock
es
sub
test
in
fdivs
aad
sete
push
dec
movsl
inc
sar
pushl
idivl
das
mov
push
fdivs
popa
lcall
mov
sub
cmp
sahf
clc
sbb
mov
cltd
adc
mov
xor
subl
loop
hlt
and
mov
pusha
hlt
cmp
ljmp
mov
sbb
push
faddl
push
mov
loop
mov
adc
pop
stc
popf
inc
bswap
jl
dec
in
jb
movsl
cmpsb
inc
dec
imul
push
dec
xorb
pop
push
xor
or
ds
out
out
sub
std
addr16
daa
popf
aad
add
pusha
xchg
push
sti
push
fcomps
dec
mov
jg
dec
jecxz
mov
xor
and
rcrb
xor
jbe
cltd
lcall
test
and
sub
mov
pop
test
into
jge
leave
pop
inc
rcll
jmp
bound
and
pushl
std
lds
fwait
sarl
jl
pop
sbb
mov
cmc
loope
sti
icebp
fidivrl
push
sub
clc
push
or
dec
xchg
ljmp
push
pop
fs
in
jno
ja
cmp
arpl
loope
jl
ds
sbb
xchg
test
sub
scas
sub
dec
jmp
loop
cli
inc
mov
mov
roll
filds
mov
mov
mulb
inc
cmc
mov
xor
jns
push
add
lahf
mov
or
lahf
fisttpll
fidivs
or
clc
inc
sub
testl
and
and
cwtl
xchg
cmp
mov
xor
lea
outsb
rol
subb
icebp
pop
and
adcb
stos
ljmp
pop
jns
push
int3
inc
add
jle
cmpsl
mov
or
pusha
inc
test
pop
pusha
inc
sbb
sub
jl
add
add
add
fcoml
mov
bound
xor
addr16
jno
or
shld
lcall
inc
stos
daa
stc
or
inc
and
out
sbb
int3
push
vorps
sub
pop
mov
mov
xor
rorb
jecxz
mov
mov
out
adc
inc
testb
dec
daa
add
clc
push
fcmovnb
xchg
inc
repnz
pop
shlb
or
dec
shlb
jne
push
sub
adc
jns
ret
mov
or
cwtl
xor
add
mov
fwait
arpl
mov
lock
add
stc
xlat
xorl
lock
loopne
jmp
xchg
sbb
xor
jg
push
mov
cld
fstpt
clc
or
call
and
leave
xchg
cwtl
and
and
cmp
sbb
das
std
ljmp
je
mov
xor
fisubrl
inc
jb
xor
dec
pop
leave
inc
adc
push
ret
push
jg
cmp
int3
sub
aad
clc
mov
pop
ljmp
aam
adc
icebp
xchg
dec
cmp
in
cli
ds
cmpsl
int
cmpsb
ret
daa
cmc
decl
rcl
frstor
data16
call
adc
sbb
adc
adc
cmp
sub
call
enter
mov
out
jne
test
sub
outsb
mov
lahf
lods
cmpsb
add
sahf
cs
pushl
clc
test
inc
push
dec
hlt
or
scas
insl
lret
jmp
pop
jl
dec
aaa
pop
stos
jg
clc
mov
add
js
mov
jp
aaa
icebp
ror
loop
xchg
cli
mov
sbb
jns
push
pop
inc
mov
jecxz
and
cmp
fistpll
adc
mov
into
jbe
jb
and
jb
push
pop
call
cmp
or
inc
adc
adc
mov
cmp
dec
sub
stc
ss
addb
or
loop
jmp
push
mov
dec
xchg
jb
call
mov
jg
push
adc
cmp
repz
pop
push
mov
inc
in
inc
nop
add
inc
movsl
dec
push
stos
jnp
or
aam
and
cld
incl
adc
push
or
negl
int
mov
dec
std
sub
out
outsb
adc
and
pop
pop
orl
push
mov
and
add
cs
imul
or
rolb
inc
lock
push
mov
push
or
add
pop
std
inc
cld
hlt
pusha
or
adc
and
aad
cmp
xor
lret
cmc
andl
add
sub
fistps
cmp
inc
add
ret
push
shlb
cmp
fsub
mov
cmc
cs
dec
adc
or
adc
dec
xchg
xlat
mov
add
dec
cmp
hlt
push
pushf
add
add
and
add
cmp
inc
add
ljmp
add
bound
sbb
pop
cmpsl
iret
inc
fsub
sub
push
sbb
mov
cwtl
sub
out
pusha
push
push
mov
in
rorl
and
cmp
addb
aam
or
xchg
and
xor
add
sub
inc
lea
inc
xor
jnp
fisubrl
xor
dec
xor
clc
mov
push
clc
or
jp
adc
hlt
pop
adc
mov
mov
adc
push
push
sub
adc
adcl
or
adc
ret
lods
push
insb
int
fbstp
cmp
pop
sbb
pusha
jae
dec
popa
add
cmp
das
int
add
pop
adc
push
push
push
test
ja
push
pop
dec
add
add
dec
call
incl
ret
or
dec
mov
add
fstps
shll
inc
xchg
inc
outsl
pop
cs
sub
xchg
cmp
movsb
pop
adc
mov
sarb
or
into
out
test
je
add
inc
je
dec
les
xchg
xor
shlb
sub
sub
fsts
pop
hlt
add
push
ret
int3
sbb
cmp
inc
das
fldenv
dec
adc
add
clc
sub
or
mov
shl
or
mov
rcl
jecxz
and
xor
arpl
scas
mov
out
push
inc
or
push
repz
in
add
pop
adc
aam
test
add
dec
lcall
push
outsb
ja
xor
add
test
ljmp
testl
jp
mov
sbb
movsb
inc
add
js
enter
es
shr
rolb
aam
mov
push
dec
add
add
mov
jb
and
jnp
popa
add
hlt
xlat
xchg
sahf
ret
inc
xor
icebp
add
mov
lahf
aas
inc
cltd
andb
mov
add
adc
fwait
sub
mov
push
or
mov
xor
inc
lret
movl
loop
sub
xchg
mov
xor
outsb
mov
loop
sbb
mov
sahf
pop
xchg
iret
cmpsl
sub
callw
adc
out
ret
mov
pop
sub
js
lahf
sub
pop
enter
or
and
sub
add
adc
ret
mov
jae
adc
adc
mov
out
add
xchg
aas
cld
jne
or
incl
cmp
cwtl
add
mov
pop
sbb
jecxz
pop
push
test
mov
pop
ljmp
mov
cmp
or
and
ljmp
aaa
inc
test
ds
xchg
out
sysexit
sbb
cmpsl
insl
mov
iret
arpl
out
mov
lods
or
and
sahf
movd
lret
call
icebp
inc
loopne
dec
call
xor
push
addl
incl
loope
ss
stc
inc
jo
pushf
sub
inc
sub
xor
mov
jg
jge
call
std
jmp
mov
pop
nop
test
jg
popf
mov
ss
pop
adc
stos
std
ss
push
xchg
or
pop
imul
ja
sar
outsl
dec
adc
cmp
cltd
sbb
mov
ljmp
incl
aad
pusha
insl
jl
iret
cld
fisubrs
cmpsb
loopne
pop
icebp
jle
dec
push
lds
js
clc
jge
clc
dec
ds
dec
popf
jl
mov
push
xchg
mov
cmpsb
cmp
jmp
xchg
mov
push
jp
in
inc
les
arpl
les
xor
xchg
adc
xor
test
jmp
aas
and
add
int3
cmp
sar
scas
pop
cmp
xchg
subb
incl
add
jnp
gs
sub
stos
sar
sar
fs
es
and
jns
icebp
bound
sbb
or
pop
mov
rolb
andb
mov
test
lds
pushf
icebp
addr16
mov
je
pop
and
xchg
loop
mov
pop
fs
pop
sti
sub
mov
jnp
int3
insl
xchg
xchg
lahf
push
call
leave
adc
xor
xor
push
stos
inc
xchg
clc
jmp
das
icebp
cmp
jmp
xor
mov
sub
popf
jnp
pop
popf
lcall
cs
sub
fs
xor
int3
inc
jmp
je
stc
mov
enter
or
jmp
lret
subl
test
push
call
pavgb
in
xchg
cmc
popa
push
mov
pop
adc
pop
cli
mov
sub
fiaddl
ds
mov
mov
call
test
mov
orl
mov
hlt
pushf
sar
scas
mov
jg
incl
push
or
adcb
sub
in
mov
or
lcall
xor
sub
test
int3
sub
mov
mov
jb
pusha
cmp
sub
std
inc
pop
dec
je
aam
lea
divb
fs
mov
dec
js
in
ljmp
jl
or
pop
sbb
pop
jecxz
push
shrl
jg
pusha
jne
push
incl
std
mov
push
in
dec
adc
inc
les
xor
lahf
xor
cmp
jno
sub
jb
mov
sub
mov
into
mov
or
mov
dec
xchg
pop
fcoms
sub
out
adc
xchg
js
push
push
cmp
mov
incl
xor
es
stos
std
cmpsb
cmp
enter
adc
subb
gs
mov
clc
aaa
call
cld
lods
dec
fs
popf
dec
push
adc
testb
shll
pushl
mov
and
mov
cmp
cmpsl
xchg
pmaxub
incl
cmp
inc
out
cmp
leave
in
push
push
and
jp
mov
call
mov
pop
ss
xchg
jb
scas
and
adc
cli
or
dec
cmp
into
loop
cmp
add
push
mov
xchg
mov
out
sub
inc
cmp
push
stos
fildl
sub
insb
aaa
jmp
insb
call
push
pushl
jl
cmp
subl
roll
mov
mov
pop
push
inc
icebp
mov
mov
frstor
xor
sbb
je
pop
mov
inc
pushl
mov
inc
fsubrl
jo
and
adc
lea
mov
xchg
loop
scas
mov
in
mov
dec
inc
mov
jb
mov
push
mov
cmp
ret
xor
test
and
loop
incl
jnp
add
mov
pop
ficoms
adc
add
mov
pop
pop
and
ljmp
sub
test
cmp
xor
push
jmp
lret
jb
jg
call
je
or
rcl
rolb
data16
mov
add
std
inc
dec
dec
stos
pop
and
mov
mov
cli
xor
std
mov
data16
mov
cmp
xor
mov
aaa
sub
xchg
ficomps
or
jg
insl
in
inc
lods
push
les
xor
xor
lret
test
call
adc
loope
fmul
std
jae
sub
movsl
mov
cmpsl
mov
mov
mov
addr16
inc
sub
test
ficomps
inc
mov
popa
inc
pushl
clc
mov
jo
jg
pop
fcmovbe
adc
sub
sub
loope
les
mov
les
test
mov
sub
jl
lods
add
mov
hlt
insb
jg
call
fnstenv
xchg
inc
and
mov
sub
adc
daa
cmp
cld
icebp
push
pop
call
in
pop
adc
dec
jns
jle
mov
insl
mov
cld
dec
mulb
into
and
iret
in
push
mov
inc
xlat
hlt
dec
les
test
push
mov
push
push
ret
sahf
subb
jmp
inc
jbe
push
jl
cmp
xchg
enter
out
push
leave
push
out
pushf
inc
jbe
fildll
adc
arpl
in
push
std
push
ss
xor
das
xchg
call
inc
mov
mov
mov
rclb
fwait
outsl
jl
incl
test
lahf
clc
stc
xor
cmc
and
add
pop
mul
call
sub
mov
xchg
loopne
inc
mov
insb
arpl
jo
inc
out
into
in
dec
pushf
dec
clc
leave
mov
incl
dec
loope
cmp
lds
test
mov
inc
xor
pushf
dec
mov
ret
or
push
inc
push
in
fildl
pop
je
leave
out
pop
outsl
xchg
outsl
mov
inc
mov
out
sub
mov
or
inc
xchg
mov
js
cmovne
dec
pushf
mov
dec
adc
dec
jl
push
std
push
jl
sar
pop
in
and
lds
add
inc
rcrl
cmp
sub
shrl
xor
pop
inc
mov
nop
cli
xlat
sbb
addb
lock
and
add
jecxz
cmp
or
inc
outsl
mov
fsubrp
mov
inc
filds
pop
inc
sti
pop
pop
fcoms
dec
and
addl
fcmovnb
push
fisttpll
add
into
std
call
and
stos
mov
roll
mov
mov
sub
es
shrl
add
sub
ret
ljmp
mov
loopne
xor
mov
mov
adcl
push
push
and
mov
and
inc
add
add
sub
nop
stos
scas
movsl
or
or
cmpsb
jg
fisubrs
insl
js
mov
jo
cmpl
xchg
imul
ret
test
lods
jbe
pusha
xchg
and
stos
scas
mov
pusha
or
jmp
mov
jae
ss
sub
cli
or
fmuls
push
dec
daa
or
mov
loopne
xchg
add
pop
inc
dec
sub
hlt
adcb
xchg
add
sti
mov
subl
push
fimuls
mov
add
sahf
stos
js
dec
aaa
inc
outsl
in
mov
fcompl
rclb
iret
pop
pushf
or
add
dec
lods
aad
sub
sbb
push
cmp
pop
aad
dec
orb
mull
sahf
test
int3
mov
cltd
fistpl
xor
or
pusha
cmp
sub
inc
push
ror
mov
pop
pop
loopne
fbld
sbb
adc
inc
stos
and
pop
jnp
aaa
sub
add
push
lea
addl
lods
sub
test
cli
sbb
cwtl
ja
push
push
cltd
adc
add
jge
movsb
mov
popf
outsl
fadd
jns
add
stos
or
rol
push
loopne
les
loop
cwtl
push
sbb
fstl
addb
ljmp
les
or
push
push
test
shr
dec
add
shrl
loopne
add
push
fbstp
lret
add
mov
rsqrtps
sahf
aad
pop
adc
mov
call
clc
xchg
arpl
pop
idivl
sbb
rclb
inc
mov
mov
push
stc
sti
xor
xor
mov
mov
dec
lcall
cli
cwtl
inc
ret
movsl
or
mov
loopne
mov
leave
add
adc
pop
cmp
dec
and
add
jge
jno
fcompl
inc
inc
add
nop
bound
stc
scas
adc
sbb
insb
add
mov
adc
inc
negb
loopne
aam
sbb
jb
out
xor
loopne
lock
int
or
push
adc
test
lock
add
dec
and
shll
and
icebp
js
leave
pop
cmc
daa
sub
movb
fwait
aaa
loopne
inc
mov
add
pop
test
mov
mov
sub
adc
and
adc
cltd
inc
push
mov
ret
test
and
or
into
or
mov
jp
imul
pop
adc
add
mov
pop
mov
inc
xchg
test
and
fcomps
push
cltd
and
dec
sahf
or
arpl
mov
clc
fsub
dec
push
cwtl
call
or
sbb
cmp
or
pop
test
add
jp
cmc
shl
inc
cwtl
fwait
cltd
push
xchg
call
out
adc
xchg
ljmp
add
inc
lret
bound
cs
sbb
mov
aas
dec
sbb
loopne
test
rorl
inc
imul
sbb
cs
shrb
mov
notl
daa
fsubp
push
dec
mov
test
cwtl
pop
mov
lods
dec
iret
pop
clc
pop
adc
lret
imul
sbb
ljmp
fisubl
push
xchg
enter
andl
fisubs
int3
adc
adc
cmp
ret
jmp
dec
and
setb
xor
jb
jge
adc
fcomps
jne
xchg
fwait
jo
stos
lock
pop
cmp
inc
lods
xlat
lock
mov
sub
dec
in
push
add
repz
adc
push
clc
lahf
inc
sti
dec
adc
adc
push
mov
and
dec
jbe
aam
stos
dec
push
lock
pop
and
mov
insl
jo
shll
mov
mov
loopne
adc
enter
adc
adc
and
jnp
add
sub
dec
sub
inc
out
fwait
push
rorl
cmpsl
and
in
lcall
lret
adc
adc
add
lea
setbe
mov
pop
adc
stos
rolb
mov
sbb
cli
add
push
sub
cmp
int3
inc
in
adc
loope
push
sbb
movsl
push
aas
adc
sbb
sbb
fidivs
in
lret
or
in
or
out
and
dec
ss
sahf
daa
fidivs
add
or
inc
sti
imul
pushl
in
insl
in
out
daa
add
repz
mov
in
in
adc
mov
mov
shll
inc
repnz
push
xor
in
jecxz
and
lock
lret
adc
rcll
jecxz
iret
mov
ret
lds
jmp
add
inc
bswap
test
or
mov
xchg
dec
aaa
outsl
jp
std
jle
jmp
add
sbb
dec
add
popf
jmp
stc
xchg
mov
ja
out
testl
bound
add
push
xchg
pop
insl
sbb
loopne
xor
mov
xor
pop
mov
add
jae
dec
popf
add
sub
scas
push
data16
mov
xlat
test
mov
xor
push
popf
sbb
aad
push
cs
test
or
adc
mov
rcll
fstl
test
mov
inc
scas
mov
adc
push
add
scas
add
pop
pop
scas
rorb
rorb
jno
popa
push
dec
stc
or
outsb
xchg
sub
repz
cmp
fs
sbb
sub
sti
sbb
or
fcomps
push
jp
fdivs
loope
hlt
adc
cwtl
add
aaa
cmp
sbb
mov
xchg
dec
mov
scas
jns
lock
pushw
or
jbe
addl
testb
or
sub
cli
jbe
mov
mov
fcom
xor
add
aam
push
push
mov
ljmp
stos
ljmp
sub
jp
or
jg
and
cmp
add
fldt
adc
aaa
pop
outsl
xlat
and
cmpsb
and
fildl
push
cld
mov
mov
fstl
hlt
push
adc
mov
fistl
cmp
adc
outsb
or
jmp
test
mov
dec
sub
sahf
test
and
dec
lods
cmp
mov
pop
cmpsb
in
pop
push
insb
add
and
lods
dec
out
fnstsw
xchg
mov
orl
xchg
mov
test
add
mov
xor
jo
pop
mov
data16
mov
dec
hlt
or
and
pop
cmp
mov
jnp
shl
inc
fidivrl
adc
pop
adc
pusha
mov
jp
das
push
or
shll
push
push
subl
imul
stc
sbb
rol
out
adc
daa
int3
xor
lds
mov
push
adc
mov
dec
iret
pop
mov
fisttps
dec
int
or
xchg
shlb
and
into
adc
pop
rcll
lock
push
nopl
push
fimull
sbb
sub
sub
inc
pusha
orb
push
xor
lahf
cmc
push
bound
aad
jno
xor
jo
stos
or
sbb
pop
inc
push
pop
jbe
dec
mov
push
xor
mov
test
aam
mov
sub
stc
sbb
dec
std
pop
fdivrp
inc
shrb
out
or
in
int3
clc
mov
push
dec
ds
mov
cmpb
hlt
add
xor
cmc
sub
lock
push
pop
imul
sar
cmp
stos
lcall
outsl
sti
daa
or
adc
mov
shlb
ljmp
or
add
push
and
test
insl
mov
in
mov
sti
or
dec
add
lahf
lea
jnp
lock
addr16
sub
sbb
xor
ja
loopne
ja
inc
rcl
orb
xchg
sarb
aad
out
and
push
cmp
inc
popf
inc
lcall
fiadds
sti
imul
adc
shr
pop
or
add
inc
jno
cmp
bound
shll
loop
cmp
lret
nop
repnz
adc
xchg
std
pop
mov
and
adc
mov
int
fmuls
adc
xor
cmc
mov
mov
orb
repz
xor
pop
inc
sub
inc
mov
mov
mov
icebp
jae
inc
xor
dec
fiadds
inc
andb
mov
jae
inc
mov
xorb
or
xchg
scas
jns
bound
shll
add
enter
push
or
add
mov
pop
sub
adc
xchg
dec
mov
hlt
lock
stos
pop
adc
mov
cmp
push
enter
cmp
pop
jne
dec
test
add
sub
cwtl
push
inc
rcll
sbb
pop
push
xor
mov
push
mov
call
movsb
push
add
loope
jo
mov
xchg
sti
lret
jbe,pn
mov
inc
aas
cmpsb
aam
dec
insb
rol
sbb
mov
jne
mov
or
mov
dec
and
movsb
mov
ds
shrl
dec
loope
inc
inc
jb
mov
stos
cmc
pop
hlt
or
test
push
xlat
arpl
push
fcoms
hlt
lea
rcll
lahf
clc
or
pop
ffreep
int3
les
cwtl
aas
or
add
pop
rol
adc
push
push
push
xchg
cld
xlat
xchg
inc
mov
int
das
imul
loop
or
inc
and
mov
add
add
bound
inc
ret
xchg
test
sbb
fcmovb
inc
rclb
xor
or
sar
add
add
dec
decl
xorb
test
movsl
cwtl
mov
sbb
jg
jmp
mov
fnstcw
push
nop
add
cld
adc
popf
cmp
adc
add
jmp
imul
cmp
fdivr
cli
stc
jle
jnp
aaa
inc
xlat
push
push
in
xchg
or
xchg
push
popf
cmp
cli
cmp
decl
mov
test
fdivs
call
fsub
xchg
sbbl
shll
fidivrl
push
inc
mov
add
popa
xor
fs
sbb
stc
out
dec
sar
lcall
fcompl
cmpsb
dec
scas
sub
push
adc
pop
mov
cld
xlat
inc
rcll
bound
incl
jp
push
jb
mov
mov
push
adc
addr16
push
shll
loopne
into
jmp
mov
imul
iret
sbb
out
ljmp
clc
jl
mov
xor
jl
scas
xor
repnz
sbb
jo
or
enter
dec
xor
shl
fildl
insb
fldl
in
mov
popf
decl
xor
push
dec
outsl
mov
pop
push
in
int
jl
lock
aas
inc
fistpll
adc
call
xor
cmpsb
adc
pop
movsl
inc
sub
cld
scas
add
aad
jo
push
addr16
push
and
loopne
call
xor
das
aad
xor
and
sub
xor
jb
xchg
lret
fwait
xor
push
xor
pushl
add
lea
pop
in
push
test
pushl
shrl
ds
sbb
inc
cmp
and
xor
push
adc
sbb
sarl
inc
xrelease
push
xchg
cmc
xor
imul
push
call
mov
cld
pop
in
lret
aad
pop
inc
mov
xchg
fs
fucomip
ret
nop
inc
xor
xchg
cld
cmp
lcall
test
jb
jg
or
scas
insb
dec
in
pop
jp
aaa
ret
inc
incl
fisttpl
into
push
ja
subb
push
xchg
mov
mov
mov
in
mov
mov
mov
lcall
xchg
adc
pop
inc
cmp
jbe
hlt
mov
pop
cmp
incl
nop
rclb
push
sbbb
sub
pop
sbb
and
fmulp
pop
loopne
mov
adc
pop
out
imul
pop
mov
cltd
sbb
lcall
pop
nop
aaa
imull
add
and
lock
and
pop
ds
pop
jb
call
test
push
xchg
xchg
mov
mov
gs
push
aad
lret
daa
mov
cli
call
ljmp
fs
fs
aaa
pop
es
adc
fcomip
ljmp
cld
pop
push
shrl
icebp
int
scas
rcrb
jns
in
sti
sbb
jg
lcall
xlat
cmpsb
mov
cmp
mov
loop
or
gs
fists
adc
push
pop
cmp
adc
jp
jbe
stos
movsb
mov
cld
ljmp
pop
movb
sete
jle
loop
stc
jne
ret
pop
jbe
and
lock
in
or
xchg
js
ss
aaa
repnz
pop
adc
cmc
mov
pushl
popa
cmc
push
push
lods
sbb
pop
cmp
lds
xor
and
lock
in
pushl
into
cwtl
inc
bts
cmp
push
xor
xchg
add
add
in
repz
dec
or
mov
loopne
out
ja
cmc
icebp
in
in
ljmp
mov
cli
or
jmp
xor
sbb
push
scas
je
leave
jmp
outsl
jecxz
mov
xor
or
inc
roll
push
sbb
jmp
jns
pop
xor
outsl
sub
filds
test
nop
pop
es
test
inc
icebp
xchg
and
mov
sub
mov
popa
int
xchg
in
and
shl
inc
mov
push
adc
ss
nop
jne
xchg
mov
xlat
push
icebp
xchg
jmp
ljmpw
lcall
push
out
xor
ljmp
cmp
sub
mov
cli
or
dec
cld
sub
inc
outsl
pop
pop
jmp
call
jmp
cmpb
aaa
iret
pop
pop
popa
out
loopne
int3
dec
inc
dec
lahf
dec
stos
pop
aad
xchg
xchg
stc
mov
fstpt
mov
add
sbb
sub
mov
clc
lcall
mov
outsb
mov
in
sbb
repnz
jl
lods
jmp
lcall
jle
ret
icebp
cmp
je
mov
into
add
mov
call
in
sahf
fdivrs
aaa
movsl
aad
dec
xchg
stos
out
or
sahf
xchg
aaa
les
and
jmp
push
rorb
jge
js
sub
sub
test
outsb
data16
mov
jecxz
call
push
cmc
add
mov
in
ret
and
hlt
add
scas
leave
cmpl
xchg
pop
adc
iret
aad
fisubs
sbb
cld
inc
jae
scas
sub
sub
fwait
outsb
jle
aas
xor
notl
sti
fsubl
inc
ljmp
xorl
mov
jg
outsl
push
js
gs
out
add
push
jecxz
mov
sarl
push
mov
cmc
add
incl
sub
rclb
push
mov
lds
cmp
in
mov
pop
call
imul
stos
push
sahf
push
arpl
leave
roll
jecxz
inc
imul
push
pusha
sbbb
mov
mov
mov
pop
and
aam
decl
aaa
xor
xchg
idiv
out
inc
pop
push
xchg
sub
iret
je
sahf
dec
lcall
lods
or
test
in
movsb
shlb
cmpsb
mov
cmpsl
pop
clc
jmp
daa
mov
add
jmp
ss
sub
push
insl
lcall
sti
je
mov
popf
scas
arpl
call
pop
loope
add
mov
xor
xorb
ljmp
sbb
mov
test
mov
sub
loop
rolb
jns
call
jns
jae
sub
and
pop
cmp
sub
fldenv
call
jge
cmpsb
jne
fadd
inc
and
out
lock
inc
je
loopne
sub
and
pop
push
mov
lcall
out
mov
popa
push
add
adc
test
push
sub
fnstsw
xchg
push
push
xchg
inc
fyl2xp1
loopne
pop
leave
in
mov
dec
cmpsb
mov
enter
jecxz
call
jle
adc
push
push
or
adc
mov
orb
pop
and
cwtl
popf
fcos
pop
ds
mov
imul
in
aad
xchg
push
xchg
xor
push
push
aaa
clc
dec
flds
xchg
jmp
cmp
ror
aad
push
mov
test
mov
in
mov
adc
divl
push
pusha
cltd
rcrl
push
push
cmp
jnp
jg
add
mov
clc
xchg
cmp
call
xor
pop
movsb
sub
mov
sub
fstl
dec
jl
mov
mull
hlt
mov
ljmp
int
adc
stc
inc
push
rcrl
jecxz
insb
xor
xor
adc
sub
inc
and
xor
in
movsb
shl
inc
push
or
mov
pop
mov
clc
call
inc
in
ret
loopne
mov
ret
pop
dec
dec
mov
call
mov
leave
test
jp
mov
nop
ret
push
movsl
cmp
push
xchg
push
jmp
lcall
or
mov
dec
cwtl
pop
cli
pop
mov
mov
cli
or
call
jmp
por
or
inc
cmc
mov
xor
pop
cli
pop
icebp
mov
push
clc
push
adc
inc
add
fsubp
or
jne
fwait
ja
xchg
pop
insb
dec
cmp
pop
xchg
mov
insb
inc
mov
xchg
imulb
jb
pop
jne
outsb
lock
sbb
mov
xchg
std
sahf
xchg
jge
std
jnp
jle
sbb
add
lods
fiadds
inc
or
and
lcall
mov
cmp
xchg
push
sbb
push
inc
aad
pusha
aam
jge
loop
shll
pop
xchg
fwait
hlt
out
jne
add
pop
lock
aam
dec
or
and
sub
and
mov
push
xchg
fsubrs
or
sbb
mov
jne
add
fadd
xor
xchg
popf
xor
pop
cmp
cld
inc
hlt
adc
add
out
bound
js
sub
hlt
add
or
xor
into
fwait
pusha
adc
cmpsb
mov
rcrb
add
xor
hlt
pusha
inc
pop
jo
mov
hlt
xor
mov
loopne
shlb
fcoms
loopne
mov
mov
mov
lcall
inc
xchg
not
push
or
jb
rol
cmp
push
ja
cmp
add
sarb
movb
mov
dec
push
inc
xchg
jae
sbb
dec
rorl
iret
clc
mov
push
icebp
sub
push
out
cmc
out
and
mov
lret
xor
stos
das
jmp
or
lea
data16
push
sbb
adc
orb
ljmp
fnstcw
incb
clc
push
repnz
rcrb
fdivs
data16
mov
mov
jmp
hlt
je
push
mov
mov
add
push
nop
xchg
push
inc
jecxz
test
divb
lock
or
dec
aas
sbb
les
das
lds
fistl
mov
jno
add
xchg
sub
inc
dec
add
pop
adc
cmp
inc
mov
js
lcall
orb
and
sub
int
cs
cs
xchg
ja
dec
cltd
mov
push
sbb
inc
or
jmp
xor
push
mov
push
andl
cmp
cmpb
les
lcall
enter
xchg
xchg
pop
add
add
icebp
ficoms
les
pop
cmp
mov
jge
mov
in
cmpsl
jne
insl
orl
cmc
xchg
rcrl
xchg
out
push
xor
loopw
mov
ret
lds
adc
fildl
dec
dec
add
adc
pop
rolb
push
jecxz
stc
popa
cwtl
jno
cmp
xor
inc
mov
inc
push
push
adc
mov
or
lds
xor
cmovne
mov
jmp
test
ret
idivl
ret
lods
jge
jge
lods
adc
jl
mov
inc
pop
xchg
dec
in
lret
or
push
xor
enter
jge
inc
mov
mov
sub
fimull
inc
mov
or
pop
inc
orl
mov
cmp
push
aaa
add
mov
jbe
jg
push
xchg
out
aad
mov
mov
cmpb
push
mov
adc
mov
ret
jmp
mov
iret
sahf
shr
push
push
sbb
aad
jmp
je
iret
xchg
popf
xor
shrb
fwait
decb
inc
mov
jmp
aam
jnp
sahf
ficompl
sbb
xor
push
and
sbb
push
mov
shr
pop
push
decl
out
mov
xor
popl
push
mov
stos
or
imul
ret
xor
push
in
loope
jbe
sahf
cmc
shll
out
mov
ljmp
bound
adc
or
shrl
adc
decl
dec
fdivrl
fnstcw
rcrb
push
sbb
xor
js
es
dec
std
lcall
adc
adc
sub
mov
sahf
push
dec
xor
mov
jmp
cmp
jbe
xor
pusha
or
xchg
push
addl
pushl
ret
cli
jg
fsubs
cmp
dec
in
push
adc
xchg
fdivrs
jg
jl
and
add
aad
inc
std
jge
sub
insl
adc
mov
adc
adc
loopne
movsl
fdivrl
or
lcall
xor
push
clc
decl
insb
sar
popf
stc
add
outsl
arpl
andb
jae
or
cmp
mov
mov
out
enter
sub
fisubrs
inc
cld
lcall
xor
rorl
cmpsb
pop
or
sbb
xor
add
and
pop
mov
dec
adc
add
rcll
fwait
jae
sub
pushl
clc
stos
leave
jp
fmull
ljmp
cld
and
cmpsl
lcall
incl
sbb
mov
push
insb
cmp
int
inc
iret
rcr
push
xor
std
lods
into
stc
out
data16
outsl
aam
jnp
mov
loopne
js
or
and
call
adc
push
jmp
mov
notl
popf
adc
out
pop
aaa
fstl
add
lcall
hlt
push
and
into
mov
insb
inc
popf
fstpl
rorl
mov
inc
cmpsb
inc
out
adc
push
clc
xchg
fcoml
rclb
dec
sub
cmp
push
out
into
or
jmp
push
xor
stos
fwait
cmpsb
sub
je
push
stos
dec
jmp
mov
sub
std
fistpll
xor
ja
or
cmp
xlat
dec
pxor
pusha
pop
call
lcall
nop
scas
push
xchg
push
push
rcrb
scas
cmp
decl
add
and
jmp
add
ljmp
nop
add
cmp
pushf
nop
push
mov
push
add
incl
pop
rcrb
push
out
mov
stos
test
lods
mov
popl
push
popf
insb
lcall
das
pop
and
aad
mov
in
ret
inc
stc
adcl
shrl
in
int3
shlb
ficomps
clc
into
and
add
scas
nop
lret
vmulss
bound
mov
or
insl
inc
xchg
fnstsw
jmp
jo
fs
push
into
stos
cmp
lcall
iret
or
into
sub
add
ljmp
fcomi
movsl
pop
add
iret
add
push
inc
popf
stc
sbb
pop
xor
into
fldcw
pop
xor
lret
or
addr16
dec
in
out
leave
jge
jg
mov
addr16
mov
cltd
inc
dec
jmp
lds
mov
std
xor
cmpsl
dec
arpl
inc
pop
inc
shll
push
inc
lcall
mov
xchg
out
xchg
sbb
inc
inc
bound
xor
les
mov
push
and
xlat
lea
or
insb
fisttpll
stc
dec
sub
and
lea
adc
inc
xor
dec
nop
cwtl
mov
sbb
pop
cmp
test
xchg
pushl
pop
xchg
sbb
push
insb
xor
insb
sbb
mov
jg
fidivrl
cmp
test
or
clc
lods
test
loopne
add
out
cli
sub
dec
cmp
test
addr16
in
adc
mov
cmpsl
cwtl
sbb
jge
jmp
sub
lods
in
cltd
cmp
mov
adc
std
jae
jl
push
adc
out
jns
mov
int3
lcall
fsts
clc
pop
push
addr16
imul
into
cmc
adc
adc
fistpll
loopne
inc
jbe
mov
out
cmp
aaa
das
cmc
pop
incb
xor
into
fnsetpm(287
inc
fwait
test
scas
mov
incl
add
push
cmp
jno
jge
fmull
decl
cld
popa
outsb
in
push
push
arpl
jmp
sbb
mov
xor
mov
sbb
push
xchg
inc
shl
xchg
jnp
jg
dec
adc
mov
or
push
mov
jg
lods
scas
xchg
mov
xorb
dec
add
or
fsts
ja
push
dec
aaa
inc
stos
and
inc
in
jg
sbb
pop
aam
dec
xlat
jns
mov
add
decl
mov
mull
pop
cmp
xor
adc
lea
jmp
jmp
fnstsw
shll
es
movsb
test
and
iret
pop
fwait
cmp
shlb
shlb
das
mov
sti
push
pop
stc
xor
cmp
sbb
lods
sub
pop
lods
rolb
js
mov
arpl
scas
lods
ss
call
test
adc
xor
jb
pop
ja
std
imul
dec
sub
ljmp
icebp
adc
sbb
inc
cmc
jbe
mov
dec
nop
mov
mov
cli
movsl
cmpsl
pop
mov
bound
in
ljmp
add
ss
add
xor
dec
mov
dec
call
xchg
jns
push
push
scas
xchg
movsb
stos
outsb
push
icebp
fisttps
popf
sbb
ds
sbb
incl
fnstenv
jp
imul
dec
cmp
inc
push
jb
loop
cmp
call
sbb
lods
and
popf
test
xor
sub
xchg
aad
ljmp
mov
in
adc
shl
add
mov
sbb
andl
pushl
popa
pop
push
xchg
aas
mov
test
sub
sarl
inc
mov
incl
cmp
pop
xchg
inc
pop
xlat
and
mov
mov
xor
push
lods
jmp
inc
sub
outsb
test
mov
call
pushl
scas
stc
popa
ljmp
rclb
xchg
mov
lock
adc
sbb
rcll
or
and
insl
push
pop
mov
jmp
mov
mov
adc
push
pop
add
push
in
ret
xchg
add
add
push
in
dec
mov
add
jge
jae
dec
mov
adc
add
push
shr
mov
imul
or
cld
stos
xor
adc
adc
dec
pop
or
or
or
push
loopne
dec
jl
and
aaa
add
cld
mov
add
nop
mov
xor
mov
lahf
movl
or
mov
xor
sbbb
mov
mov
inc
out
pop
add
adc
pop
sbb
cmc
xlat
fisttps
mov
pminsw
pop
sbb
ljmp
sub
add
mov
xor
les
outsb
fistpl
mov
icebp
mov
ljmp
xchg
and
bound
mov
rcll
mov
insl
roll
fsubrl
cmp
sbb
stos
loopne
das
loopne
fisubrs
fldenv
adc
push
push
scas
sbb
shrl
enter
push
lea
push
loopne
adc
push
inc
pop
js
icebp
mov
sub
or
add
nop
testl
fwait
adc
adc
or
push
fwait
and
inc
xchg
loope
push
cltd
inc
push
push
sub
sbb
mov
ret
pop
shll
stos
ret
jne
smsw
loopne
mov
add
repnz
dec
xchg
rolb
or
inc
nop
enter
mov
dec
not
sti
adc
jo
clc
or
push
dec
fsubs
push
test
dec
out
cmc
dec
mulb
xchg
sub
popa
ja
pop
xor
pop
mov
ret
sbb
lds
push
sar
data16
xchg
andl
lods
dec
insb
clc
pop
sub
shrb
fidivs
sub
fcmovbe
ss
cmc
stos
dec
dec
out
and
xchg
add
fnstsw
shll
andb
and
jo
and
or
filds
add
testl
sbb
jae
push
sbb
flds
jecxz
imul
nop
or
dec
cmp
xor
mov
enter
lds
jmp
or
sbb
mov
mov
into
xor
xor
or
fs
jb
xor
sbb
pop
js
or
ficomps
push
jnp
and
out
and
stos
sbb
test
jb
push
jg
jo
les
mov
and
add
pop
inc
xor
jmp
int
xor
adc
push
rolb
xor
xchg
fldenv
je
dec
sub
mov
andl
popa
add
or
pop
lea
add
std
loop
clc
push
jge
push
xchg
or
test
cltd
adc
and
and
xor
sub
mov
mov
cmpsl
xchg
dec
adc
mov
rorl
es
xor
fs
adc
movsb
repnz
push
cmp
xchg
add
jno
add
pop
insl
push
dec
inc
inc
jne
nop
fcoml
aas
mov
insb
bound
pop
repz
lods
dec
pop
inc
or
push
js
jg
push
push
mov
add
pusha
cmp
ficompl
and
pop
fwait
iret
rclb
and
mov
es
ljmp
xchg
inc
and
pusha
sub
mov
and
adc
inc
push
add
xor
sahf
insb
leave
ret
rclb
adc
and
mov
dec
adc
dec
add
and
and
add
fldt
lahf
lret
xor
sbb
loop
int
je
jge
lret
jp
jns
decl
jnp
enter
insl
sub
fistl
mov
out
fisubrs
jb
call
mov
dec
ret
aad
divl
fwait
aam
mov
pop
insb
js
cmp
push
jl
imul
xchg
xchg
cmc
fs
inc
adc
sub
popf
pop
stos
mov
cld
jmp
retw
cmp
mov
les
mov
loop
push
and
sbb
inc
ds
push
pushl
sub
push
xchg
adc
imul
sarl
pushl
pop
fcomps
mov
nop
sbb
xchg
inc
lret
aaa
pop
std
call
inc
xor
add
inc
stos
mov
call
xor
push
push
add
fs
push
ja
decb
dec
xor
cld
push
icebp
xchg
aam
fldt
outsl
jb
push
inc
cmpsl
stos
or
or
mov
inc
jl
or
ds
pop
mov
push
gs
fbstp
icebp
cmp
mov
xchg
ljmp
pop
and
fdivp
sbb
jg
cmpl
fs
das
sbb
dec
inc
push
pop
out
gs
push
sub
imul
test
hlt
lock
in
aaa
push
gs
dec
cmp
lock
jg
jg
popf
je
sub
push
adc
cmp
dec
cmc
mov
push
mov
lds
mov
jne
or
pop
scas
cmp
lods
adc
mov
and
ljmp
push
push
push
inc
fisttps
push
dec
push
lcall
imul
icebp
pop
xor
test
adc
cld
test
sahf
test
xchg
or
cmp
xchg
sub
test
add
sub
cwtl
or
and
mov
test
imul
test
js
and
gs
lock
cmpsl
mov
push
mov
sub
mov
call
mov
jp
popf
adc
fmul
stos
sbb
xor
sar
inc
mov
test
xchg
adc
in
ljmp
leave
mov
and
xchg
test
imul
outsl
inc
test
mov
cmp
jg
ret
into
push
sahf
mov
mov
cmpsl
jmp
mov
pop
mov
or
scas
into
push
or
pop
jp
jp
mov
aad
cmp
outsl
aad
mov
shl
lock
ljmp
pop
notl
xchg
sub
lds
and
push
cmp
repz
insb
call
icebp
stc
add
push
nop
xchg
addl
outsl
sbb
push
sub
out
stos
jg
lods
adc
aam
cli
in
push
mov
sub
mov
nop
pop
jg
call
cmc
push
outsl
cltd
pop
push
fadds
out
fs
inc
mov
rcrb
adc
pop
incl
adc
stc
popf
lock
add
jno
js
xchg
dec
scas
xchg
out
shl
lods
decl
cmpsb
test
mov
or
aad
repz
mov
je
das
pusha
mov
and
mov
inc
dec
add
sub
jl
pop
and
push
dec
fcoms
dec
ret
push
pusha
adc
ja
frstor
icebp
icebp
pusha
fiaddl
pushl
cwtl
push
fsubl
sub
dec
add
mov
lods
pop
cmp
in
add
enter
loop
mov
psubb
sbb
aas
js
popl
jl
push
scas
mov
mov
push
mov
imul
rorb
sahf
pusha
sub
mov
jno
clc
sbb
mov
jmp
test
frstor
push
mov
fcompl
add
and
sahf
into
out
cmp
out
mov
dec
mov
mov
lret
data16
cmc
adc
cmp
incl
outsb
roll
pop
xchg
loop
clc
mov
mov
es
stc
xor
or
add
jmp
pop
mov
xchg
lcall
mov
pop
iret
dec
into
shll
jmp
popf
mov
lea
movsb
pop
imull
mov
mov
xchg
add
decl
fnstsw
iret
push
xor
sub
jle
mov
incl
push
out
push
mov
cli
imul
mov
lahf
push
in
and
aaa
push
jmp
pop
jg
test
xor
xchg
and
stc
pop
xchg
hlt
sbb
test
mov
popa
inc
in
xor
mov
test
jg
das
mov
int
sti
aad
aas
int3
sub
lret
incl
call
jl
fldenv
movsl
ss
jb
sub
push
xor
shrb
jns
ja
jae
enter
add
inc
xchg
or
push
divl
movsl
dec
xor
incl
out
popf
push
push
or
mov
mov
mov
pop
lahf
mov
repz
mov
std
pop
int3
fsubrl
mov
pop
and
scas
pushf
aam
cmc
ljmp
mov
or
vpshab
sarb
sub
repz
inc
arpl
or
sbb
stc
dec
add
xor
rcll
pushl
in
ret
jns
pop
call
sub
sbb
mov
sub
das
cld
push
popf
add
cmc
les
in
adc
lcall
xorb
js
out
push
loope
cmp
mov
movb
pop
sarl
pop
pop
idivb
call
jno
cmp
dec
mov
inc
inc
lods
xchg
repz
pushl
mov
lock
out
jecxz
aad
int3
in
mov
adc
cmpsb
pop
aas
in
ds
ds
add
in
adc
out
sbb
add
sub
sbb
lahf
inc
fnstcw
out
in
decl
xchg
jnp
aaa
jle
jae
stos
jecxz
into
jae,pt
nop
or
ret
cmp
lahf
dec
add
ret
mov
mov
lahf
mov
pop
arpl
leave
icebp
push
jmp
movsb
adc
inc
push
add
jmp
mov
lcall
sahf
sbb
call
or
in
pop
jl
ror
dec
sarb
ss
ret
ljmp
xchg
push
lret
xor
sbb
xlat
dec
dec
push
push
jecxz
add
cmp
int
dec
xchg
push
ljmp
xor
shll
sub
jle
mov
dec
push
icebp
ljmp
fmulp
sub
pop
shll
aam
popl
lret
cmp
ljmp
add
in
dec
sub
std
int3
cs
sub
jne
inc
test
repnz
loope
pushl
pushf
ja
xlat
iret
pop
pop
test
lret
fs
clc
fisubrl
mov
and
in
jg
sti
push
lods
adc
and
push
pop
cmp
xor
mov
cmpsl
sbb
ljmp
andb
cmp
mov
arpl
push
lock
push
cmpsl
inc
iret
sub
int3
in
xor
call
aaa
xor
pop
pop
xor
out
aad
incb
push
cmp
loopne
add
sub
in
jnp
es
cwtl
cmp
or
sub
int3
stos
inc
mov
or
dec
inc
icebp
mov
test
cltd
inc
mov
cld
filds
xor
push
cmpsb
inc
gs
pop
xor
mov
outsl
lock
incl
push
cmpsl
es
nop
pop
fs
adc
popf
into
and
mov
cmpsl
fcomi
fs
das
cld
jmp
add
adc
shlb
pusha
xlat
jle
nop
sub
call
pushl
and
push
add
loope
mov
shr
in
les
mov
cmp
insl
leave
or
icebp
jge
ds
cltd
jp
les
fists
mov
int3
add
fsubrs
icebp
sub
xor
pop
sti
ljmp
lock
fidivrs
fcmovb
xchg
leave
insb
jp
fs
push
enter
xor
enter
jmp
xor
sub
test
adc
pop
cmc
aaa
ja
ljmp
cwtl
stos
insl
push
out
je
jg
ljmp
es
iret
loopne
popf
cs
loop
movsb
sub
pop
test
stc
shll
adc
push
push
inc
pop
ret
inc
jl
mov
loope
mov
jge
stos
cld
xor
sub
std
adc
addps
jl
sub
push
xchg
xor
test
add
pop
push
add
jecxz
aas
push
cmpsl
cmp
add
jecxz
or
cli
sub
loop
pop
out
sbb
push
cld
or
add
scas
lods
shl
sub
std
jnp
inc
inc
adc
movsb
push
sbbb
push
faddl
ret
xchg
jmp
and
xchg
mov
cmpsb
scas
mov
mov
jnp
or
mov
jmp
xor
mov
and
add
fldl
int3
subb
test
movsb
add
add
dec
push
lods
inc
sbb
bound
add
xchg
shr
pop
pusha
mov
inc
cmp
sub
pop
sub
ret
pusha
fwait
push
in
push
ljmp
sub
adc
aad
sahf
push
jbe
inc
xchg
cmp
lock
arpl
fimuls
cmp
adcl
adc
inc
sub
adc
adc
sbbb
dec
cld
cli
rcll
scas
or
inc
inc
sub
lret
sub
fwait
les
push
jge
subb
leave
xchg
sbb
pop
adc
iret
push
ljmp
adc
mov
add
sbbb
pop
pushf
sub
add
jnp
lret
pop
les
pop
push
das
bound
fcoms
jbe
push
mov
stc
popf
push
mov
add
sub
xor
sub
and
fwait
adc
pop
ret
out
add
push
hlt
and
andb
dec
inc
int
push
add
fdivp
or
sub
and
fcomp
movl
mov
mov
cli
jnp
push
fmull
sahf
add
fwait
add
popa
add
sbb
fcmovne
and
or
pop
aam
popl
cmp
jl
or
pop
mov
add
pop
jnp
xchg
pop
sub
cwtl
loopne
test
aas
cwtl
rol
lcall
push
add
adc
sub
sbb
pushf
add
push
xor
or
inc
add
sub
ret
shll
rcrl
sub
dec
loop
js
push
jo
lock
cld
inc
xor
inc
out
fisubl
nop
test
imul
and
ja
and
dec
jo
and
or
lods
mov
sub
adc
jnp
js
push
or
add
stos
data16
xchg
ret
stc
insb
jecxz
sub
insl
mov
fistpl
mov
add
and
sbb
cmc
pop
rcrl
popl
repnz
adc
xor
sti
adc
leave
stos
dec
jp
cmp
add
or
mov
mov
and
mov
neg
test
xor
and
inc
popf
inc
shlb
lret
and
movsl
mov
push
add
inc
push
jo
mov
push
xchg
ss
in
sub
mov
xchg
loopne
insb
ret
pop
popf
mov
or
inc
orl
jl
out
xor
lods
loopne
fimuls
ret
in
pop
mov
push
and
push
xchg
cmp
insb
adc
negb
iret
xchg
or
xchg
add
inc
jge
loopne
sbb
xor
out
cmpl
xlat
push
sbb
push
loopne
jae
or
imul
inc
les
fwait
and
cmp
jmp
add
ficoms
xchg
popf
cmp
add
add
lcall
jne
pop
mov
xor
and
rcrb
rcll
or
inc
aad
jge
and
mov
cmp
call
cmpb
cmp
stc
xchg
lcall
or
mov
cmp
xor
adc
jecxz
mov
jb
inc
sti
jae
loopne
cmp
mov
aam
sub
xlat
mov
sbb
add
lds
arpl
lods
leave
test
or
scas
and
adc
xchg
mov
shrb
mov
stos
and
ja
in
lret
addr16
jns
in
lods
clc
cmp
daa
add
test
ljmp
fsubl
outsl
ljmp
adc
imul
cld
fldcw
out
sbb
jecxz
mov
xor
ret
add
sar
aaa
cli
ljmp
lret
idiv
cmpsl
stos
jae
cld
and
ljmp
decl
dec
je,pt
jno
push
cmp
jp
adc
xchg
adc
push
sub
into
mov
popf
call
clc
js
xchg
in
and
cli
pop
jle
xchg
sbb
nop
loopne
mov
xchg
outsl
aad
movsb
inc
pop
add
jnp
out
lea
push
xlat
rclb
ljmp
xchg
mov
in
adc
scas
xor
ret
and
mov
jl
ljmp
mov
ror
adc
into
jae
jae
in
sub
lret
add
jne
outsl
hlt
std
jmp
sbb
push
out
xlat
adc
jg
daa
mov
out
lret
call
adc
cmp
inc
or
jg
cs
loop
leave
jg
push
std
ss
mov
dec
es
jg
mov
sub
pushl
fdivrp
scas
adc
or
mov
fcmovnb
inc
add
or
pop
mov
and
or
mov
mov
mov
jl
inc
mov
fcoml
pop
sbbl
mov
std
lcall
int3
inc
xchg
leave
scas
ret
and
jae
cmp
adc
sar
fucomip
pop
jp
dec
in
adc
sub
repnz
pushf
insb
jg
push
sub
fnstcw
sub
aas
test
mov
incl
emms
mov
or
sbbb
test
add
inc
cmp
pop
dec
ss
call
dec
stc
xor
jnp
add
fdivrl
stos
sub
mov
jmp
push
lret
dec
popf
js
sbb
loope
dec
pop
repnz
gs
jle
xor
jmp
xchg
or
fldenv
mov
mov
icebp
stos
inc
xor
fcmovb
nop
xor
in
inc
inc
push
iret
sbb
sbb
adc
outsb
mov
fcmovbe
push
sbb
decl
iret
or
dec
pop
aad
fyl2xp1
inc
in
cmpsb
stc
dec
pop
push
xor
arpl
add
and
fs
pushl
dec
push
lods
pusha
push
ret
popa
push
loopne
add
and
fsubrl
sahf
xor
movsl
cmpsb
lret
out
push
mov
fcomi
dec
add
js
add
pop
gs
adc
sbb
inc
insb
mov
mov
jno
hlt
xor
dec
inc
pop
fimuls
adc
inc
cli
sub
data16
ljmp
dec
mov
pop
sub
xchg
adc
inc
pop
ja
xorb
orb
outsl
add
xor
sub
shufps
int
mov
xchg
addr16
sub
xor
cmp
ja
push
inc
ret
mov
leave
mov
divl
and
xchg
mov
xchg
aad
stos
mov
incl
sub
pop
test
jg
adc
inc
dec
rcl
xchg
int3
sub
inc
bound
incl
xchg
dec
jg
or
jecxz
or
scas
xor
scas
inc
into
jp
inc
sar
ret
mov
pushf
cmp
imul
in
ljmp
jl
jns
jb
rcl
fwait
insl
sbb
inc
in
call
mov
lcall
je
pop
into
icebp
jbe
fwait
xchg
dec
call
jle
lea
fcompl
insb
cmp
mov
negb
mov
aaa
sbb
mov
and
pop
cmp
mov
cld
mov
pushl
adc
mov
movntps
pop
stos
incb
testb
lahf
icebp
jg
andl
int3
aad
adc
sbb
add
mov
imul
aaa
inc
mov
addl
int3
lcall
mov
xchg
push
adc
icebp
sbb
aaa
cmp
cmp
test
ljmp
insb
enter
movsb
mov
test
pop
in
jae
add
mov
repz
mov
jmp
xchg
shlb
sub
cs
and
sub
dec
stc
inc
mov
jg
mov
ja
adc
movsl
mov
pop
dec
nop
lret
and
incl
inc
lret
dec
mov
ja
mov
aaa
push
aas
xchg
add
cli
lcall
jmp
ret
sbb
inc
stc
rorl
adc
daa
jb
fdivs
mov
pop
push
ljmp
or
repz
daa
mov
jmp
insl
add
cmp
cmp
adc
and
inc
pusha
sbb
mov
icebp
sbb
or
push
jge
ficompl
xorl
adc
adc
mov
lods
jne,pn
xchg
lds
loope
add
dec
pop
not
push
js
imul
testl
sbb
adc
adc
lods
mov
fisubrs
adc
out
mov
inc
pop
test
rcrl
lret
jge
iret
dec
aas
adc
ret
daa
push
mov
fwait
xchg
jo
jne
nop
jp
icebp
or
test
sbb
insb
cmp
pop
enter
jg
lahf
orl
test
or
cmp
jmp
xchg
jbe
imulb
add
mov
sarb
out
xor
sbb
or
ret
mov
mov
in
mov
rol
push
loope
jle
scas
mov
push
pop
out
cmp
or
gs
incl
adc
and
sub
scas
repnz
imul
imul
and
or
and
in
inc
jecxz
jge
popf
xor
clc
mov
ret
jl
pop
loop
xor
dec
dec
xchg
cld
fisubl
call
add
xchg
pop
mov
push
test
mov
and
fcmovu
and
fwait
lock
mov
fnstcw
call
ljmp
adc
mov
sbb
sbb
add
push
inc
adc
ljmp
xor
dec
cmpl
and
aam
ds
pop
dec
test
mov
lahf
sbb
mov
adc
pop
xchg
xor
out
aaa
push
jl
dec
call
push
lret
mov
sbb
xor
outsl
add
clc
cmp
sti
jecxz
and
mov
xchg
adc
fs
in
and
out
loop
or
out
dec
cmp
or
ljmp
or
je
cmp
shlb
jmp
insb
add
inc
lea
dec
cmc
lock
in
aaa
pusha
pusha
divb
data16
ficomps
add
pop
inc
xchg
add
test
sub
pusha
sti
jnp
inc
pop
sbb
add
addb
loopne
cld
inc
mov
adc
shl
mov
cmp
ffree
pop
leave
mov
and
ss
popf
xchg
ljmp
enter
xor
or
popl
pop
orb
add
pushl
lods
dec
or
jge
bound
mov
add
test
cwtl
or
fwait
mov
sbb
push
jmp
sub
imull
loopne
xchg
mov
test
add
scas
and
lea
ljmp
xchg
pop
and
sub
fnstenv
or
xchg
shl
popa
dec
add
sub
and
push
mov
or
in
maskmovq
imull
push
ret
pop
adc
mov
clc
call
mov
das
imul
inc
push
mov
mov
cmp
and
xor
sub
adc
xchg
cmc
es
in
cmpsb
add
inc
fmull
rcl
add
pushf
pushf
pop
and
or
xor
adcb
test
das
loopne
stos
mov
adc
inc
call
pop
xor
arpl
jo
pop
ret
xchg
xchg
xor
xchg
out
sahf
addb
mov
mov
inc
subl
and
cmp
dec
add
push
xchg
pusha
enter
std
adc
leave
mov
imul
pop
xor
mov
loopne
cli
pop
insb
lret
or
adc
shrl
add
add
jle
rorb
pop
loopne
rolb
or
sub
fdivrl
insb
js
pop
add
test
sub
or
call
ret
test
rcrl
aad
or
loopne
repnz
fcomps
shll
mov
jne
push
int3
dec
bnd
pop
add
mov
cwtl
push
xor
cmpsb
add
fwait
fs
dec
loopne
adc
aad
loopne
and
in
adc
test
xchg
rcrl
sub
inc
pop
lock
dec
mov
mov
xor
mov
arpl
jl
daa
pop
or
or
leave
mov
orb
stc
out
aam
mov
and
mov
add
add
fwait
clc
adc
pop
dec
cmpsb
pop
xor
pop
test
or
push
add
mov
test
jae
xor
jge
add
or
push
stos
cmp
sahf
sbb
adc
mov
push
push
xchg
shrb
mov
mov
add
adc
fs
mov
dec
push
arpl
mov
shl
fadds
xchg
pop
pop
inc
mov
pop
int3
fwait
es
pop
mov
and
cmp
mov
jne
sbb
idiv
xor
aaa
push
imul
dec
nop
push
pushl
xor
adcb
jl
mov
leave
add
add
xchg
mov
sti
adc
aaa
mov
push
inc
push
dec
fsubrp
xchg
stos
nop
sub
ljmp
fsubrp
mov
lcall
jp
insl
xor
cmp
stos
rclb
jg
in
fimuls
out
icebp
aam
push
pushl
aad
dec
mov
mov
jnp
push
cwtl
mov
rcll
incl
pop
pop
cmpsl
icebp
aaa
test
or
sub
inc
mov
sbb
out
sbb
mov
cli
cmp
push
cmp
mov
call
or
xor
mov
aam
inc
ss
movsl
call
fcmovnb
adc
cmc
leave
cwtl
fadds
and
repz
push
mulb
out
movsl
jmp
jmp
dec
pop
dec
sbb
leave
push
aam
leave
cmpsb
mov
mov
xor
sbb
aam
sub
nop
xor
ljmp
mov
in
cli
loop
stc
dec
test
loop
pushl
mov
sbb
div
ret
mov
out
mov
sub
pushf
jbe
addr16
jecxz
hlt
pop
stos
inc
pop
dec
ret
clc
fbstp
shll
and
aas
ljmp
cmp
ds
inc
decl
shll
stos
sub
into
outsl
mov
pop
inc
sbb
ja
out
lea
pop
mov
cmp
mov
mov
pop
or
out
mov
dec
mov
add
mov
fucomip
push
daa
cmp
mov
cmpb
mov
xchg
and
and
adc
push
jl
pop
loope
in
gs
xor
decl
repnz
mov
or
loopne
fstpt
sub
into
movsb
test
test
popf
mov
xor
and
adc
or
call
cli
sti
fcoms
or
bound
cmp
sbb
lods
ficompl
or
in
ljmp
xchg
cmp
mov
mov
push
sbb
lods
mov
add
lahf
incl
push
mov
inc
and
ja
movzwl
xor
ret
push
mov
data16
mov
xor
sbb
jecxz
jns
mov
insl
adc
jmp
mov
mov
cmp
and
inc
cli
outsb
mov
outsl
int
dec
into
cmp
jp
and
mov
push
outsb
sub
cmp
cs
xor
in
push
call
out
mov
adc
jb
out
mov
mov
vphaddubq
inc
sub
inc
mov
sbb
lahf
mov
inc
shll
ret
push
pop
out
scas
inc
call
cmp
sti
ret
inc
fiaddl
pop
fwait
mov
scas
sub
xchg
ja
push
xchg
in
popf
sub
icebp
outsl
cld
jp
cmp
push
in
jns
xchg
push
sub
fs
ljmp
push
subl
cmpsb
dec
orl
mov
add
jmp
fsubr
out
test
out
mov
or
xchg
sbb
test
and
loop
ret
pushl
in
aas
jl
cli
dec
sub
mov
mov
adc
pop
clc
push
ret
es
icebp
cmp
outsb
call
sbb
push
clc
and
push
push
add
adc
mov
and
mov
cwtl
clc
xchg
push
pop
mov
add
and
xor
jo
xchg
lea
subb
push
imul
xor
gs
adc
add
add
inc
adc
pop
and
aad
lea
ret
mov
adc
fstpl
loopne
lock
popf
sub
aad
xor
add
lcall
xchg
push
sub
add
ret
lret
int
popf
and
push
mov
iret
sub
add
insl
loopne
pushf
sar
push
xor
adc
inc
ja
push
adc
into
or
sbb
inc
adc
aas
mov
xor
xchg
inc
cs
call
hlt
sub
divb
pop
cwtl
add
pop
add
mov
push
cli
xchg
sbb
xchg
mov
adc
push
fcoms
shrb
xor
fucomi
dec
adc
in
dec
xor
mov
std
jp
xchg
mov
and
std
xchg
or
push
leave
lods
mov
out
int
icebp
dec
adc
mov
xor
add
jb
hlt
xor
xor
jae
int
inc
test
int
xchg
add
add
add
ljmp
or
cmpsb
dec
out
sub
push
mov
outsl
popl
imul
ljmp
pop
adc
in
dec
mov
xor
or
popf
xor
js
dec
push
sbb
xchg
jno
pop
cmp
adc
push
xor
lds
adc
rorb
add
adc
cmpsb
mov
je
pop
lods
icebp
and
bound
mov
data16
jne
inc
xor
jb
in
and
call
xor
arpl
or
xchg
int
add
loopne
test
ds
push
adc
es
mov
xor
pop
je
push
push
push
push
lea
adc
lahf
leave
icebp
ss
jne
ret
push
pop
imul
sbb
or
inc
add
inc
add
mov
pushfw
or
push
imul
xchg
cwtl
inc
hlt
adc
lods
dec
fidivs
sbb
rcrl
lcall
aaa
dec
adc
inc
mov
sub
inc
lds
adc
xor
fld
addl
das
jecxz
cmpsb
jmp
mov
ret
cmp
dec
ret
call
mov
call
inc
push
int3
pop
rorl
scas
out
in
jnp
dec
push
xchg
push
pop
js
clc
loopne
jge
inc
pop
fistl
test
lcall
xor
stos
insb
mov
insl
sbb
pop
cmp
fsubrp
mov
pop
dec
mov
ja
mov
pop
push
adc
xchg
ds
sbb
add
cs
inc
fnstsw
push
lods
sub
cld
sub
daa
inc
imul
int3
popa
push
xor
in
sbb
pop
jne
and
aad
int
mov
lock
xchg
mov
movsb
sub
addr16
cmp
jmp
jbe
or
nop
loopne
idivb
mov
scas
ss
outsb
mov
mov
outsl
icebp
int
xor
hlt
stos
sub
out
insl
lods
inc
push
inc
cmpsl
loopne
call
ljmp
clc
js
lods
lahf
mov
fbstp
push
mov
in
movl
arpl
pop
dec
and
pushl
je
sbb
push
push
mov
ret
sbb
pop
inc
arpl
cmpsl
js
out
cli
je
jmp
mov
jno
cmpsb
add
inc
cltd
cmp
mov
cmp
incl
test
pushl
dec
insb
repz
sbb
int3
leave
and
jns
ret
imul
adc
loope
adc
sar
cli
arpl
dec
xor
data16
mov
fdivrl
xchg
lods
je
mov
adc
adc
insl
es
dec
inc
and
sbb
fmuls
push
rcll
mov
test
mov
aas
mov
ret
sub
out
adc
in
cmpb
add
icebp
out
or
mov
or
sub
bound
inc
push
pushf
adc
lret
loope
pop
fmull
dec
push
in
shlb
and
jmp
and
outsb
sbb
loopne
push
addl
push
mov
or
mov
cmpsb
push
mov
mov
pop
jbe
pop
sbb
int
add
into
ja
scas
pusha
jno
bound
pop
and
pmaxub
dec
mov
pop
mov
jmp
sbb
push
inc
loopne
add
int3
xchg
add
dec
add
or
loop
loop
or
xchg
daa
aas
and
inc
sub
pop
mov
aaa
dec
mov
add
adc
mov
inc
hlt
cmpb
xchg
push
or
add
test
repnz
popf
dec
and
mov
jp
mov
push
daa
add
testb
jbe
sub
outsb
in
mov
inc
addb
mov
jmp
mov
insl
inc
repz
stos
cmp
out
sub
xor
addl
pop
xchg
je
add
mov
sbb
push
ret
mov
inc
je
cmp
int3
push
test
loopne
lds
pop
nop
fwait
inc
jno
and
dec
iret
leave
cli
and
shl
cmc
add
inc
movl
add
push
or
cmp
dec
insb
pop
inc
cmpsl
icebp
push
jae,pn
xorl
inc
pop
push
fadds
nop
dec
xor
data16
jge
lods
stos
mov
cmp
jbe
xchg
rcrb
cmp
xchg
add
sbb
ror
add
jmp
push
mov
in
mov
movsl
push
push
sub
sub
jg
sub
sahf
xchg
adc
scas
into
mov
pop
or
fcom
loopne
rcrl
sbb
es
popa
mov
pop
pop
sub
add
pusha
and
shll
xor
shll
pop
in
xchg
lcall
sahf
dec
fcmovnb
dec
xor
push
vmovlps
push
pop
sbb
stos
fimull
fidivs
fadd
jno
jg
roll
mov
mov
icebp
adc
mov
and
mov
decl
and
mov
fisttpll
lods
jne
sub
lods
mov
xor
adc
jg
cli
mov
push
stos
adc
cmp
and
pop
mov
push
add
out
cmpl
jmp
push
outsl
pop
repz
mov
pop
into
syscall
adc
clc
out
cltd
sbb
jg
repnz
test
pop
mov
mov
imul
xchg
inc
jmp
andb
mov
sub
cmpsl
xchg
mov
incl
push
rol
pop
push
decl
xor
into
dec
pop
jb
stos
xabort
or
movsl
dec
inc
fstpt
in
xchg
lds
sub
inc
adcl
ud0
sub
inc
xlat
sahf
bound
jle
inc
imul
imul
dec
into
or
nop
aaa
out
inc
aad
jnp
dec
sub
dec
std
call
sub
dec
aaa
repnz
das
rclb
adc
ljmp
loopne
orl
push
pop
adc
jmp
cld
icebp
scas
insb
out
mov
xlat
push
pushl
lock
push
aam
mov
push
aas
mulb
jbe
push
int
xchg
jp
cltd
mov
mov
lcall
cs
jge
out
xor
xor
sbb
repz
sub
es
shrb
push
std
ljmp
push
pushf
pop
push
add
fsubrp
pop
es
into
mov
fcoml
dec
jp
call
test
pop
mov
push
jp
ret
xor
test
incl
sbb
movsl
push
sbb
ja
aas
iret
sub
ficoms
fdivrp
call
test
pushl
ljmp
mull
cmp
fwait
xorb
and
or
call
addl
in
and
fsubrs
ret
roll
int3
jns
stos
lock
ljmp
idiv
fscale
sub
push
sbb
add
sub
add
sub
adc
cwtl
movsb
incb
jg
ljmp
pop
fsubs
js
sbb
fwait
push
pop
adc
outsl
ljmp
hlt
push
sbb
dec
shlb
shrb
cmp
clc
pushl
jecxz
insb
push
pop
dec
in
mov
stc
push
jg
mov
and
lcall
lea
xchg
test
cmovp
les
sar
fucomip
pop
jbe
sub
ss
pop
faddl
clc
mov
fs
out
push
adc
aas
enter
jno
pushl
jmp
shlb
daa
or
dec
inc
in
adcl
push
scas
icebp
xchg
cwtl
lods
push
add
std
inc
pop
clc
outsb
fnstcw
cmp
lahf
push
mov
sarl
decl
mov
mov
iret
push
ss
rcrb
mov
pushl
mov
jmp
xor
dec
mov
push
cld
sbb
pop
fnstenv
cmp
cli
call
std
mov
push
addr16
outsl
xor
cli
jmp
popf
cmp
call
mov
rolb
aaa
lret
test
xchg
and
mov
adc
push
les
test
out
sarl
rolb
loope
or
call
cmpsl
and
dec
incl
sbb
xchg
test
cmc
rolb
mov
push
push
in
jbe
cmpb
loope
call
mov
and
add
test
or
mov
add
testb
and
es
aad
call
add
lock
pop
movsl
loopne
or
jmp
inc
xchg
adc
dec
adc
inc
dec
inc
imul
dec
add
aaa
sbb
aas
push
outsl
xchg
xchg
mov
and
pop
ss
int3
js
pusha
call
push
roll
jp
dec
push
mov
cmp
lea
pop
dec
push
aaa
or
pop
decl
loop
dec
test
scas
cmp
xchg
jle
xchg
lahf
push
sub
dec
lcall
pushl
mov
adc
sbb
or
inc
cmp
cli
fucomi
pop
push
cmp
fld
xchg
in
push
mov
les
movsl
fistpl
rcll
mov
add
xor
mov
out
int3
je
and
mov
into
lcall
mov
mov
popf
sub
or
push
pop
adc
nop
test
and
jmp
out
ficompl
insl
add
xchg
sub
inc
out
jp
xor
mov
imul
incl
gs
shrl
aas
jecxz
xchg
and
jne
mov
pop
jbe
test
pop
jmp
adc
sbb
mov
cmp
jmp
fdivp
leave
aaa
pop
std
lods
mov
mov
scas
sbb
loopne
imul
call
fildll
adc
shl
fst
hlt
dec
pusha
mov
test
outsl
insl
inc
shrb
popf
add
lods
fcompl
hlt
or
clc
lret
mov
ljmp
sarl
sub
loop
mov
in
pop
push
faddl
mov
ljmp
popf
enter
out
adc
cwtl
dec
pop
mov
xor
outsl
movsb
jg
xchg
and
inc
gs
xchg
inc
jmp
mov
movsb
or
mov
xor
dec
daa
or
mov
jl
pushf
push
add
sub
sub
jb
andb
ljmp
push
int3
sub
sbb
and
aad
dec
add
adc
ret
loopne
inc
jmp
in
ret
push
dec
int3
loopne
leave
rorb
incl
in
sbb
and
mov
movsl
test
das
loop
andb
sbb
sub
icebp
das
jo
cli
push
aas
scas
jne
dec
adc
sbb
test
add
or
dec
adc
enter
dec
in
pop
cmp
dec
orb
and
pop
jno
add
mov
sbb
and
shrb
adc
jno
mov
leave
sahf
cli
sti
and
jnp
or
mov
sub
outsl
or
xor
jmp
test
les
loop
or
inc
ret
cwtl
inc
add
pop
push
pop
mov
ss
push
outsl
push
leave
into
mov
inc
dec
xor
lods
sub
ja
fisubrs
or
sub
xor
popa
and
gs
sahf
add
in
sub
sub
push
cmc
mov
or
add
imul
lods
sbb
xchg
xchg
leave
dec
lods
rolb
js
call
fistl
push
movsl
push
enter
or
add
sbb
push
fildl
aam
pop
test
add
fisubrl
or
cmpsb
sarl
subb
aam
lret
push
repnz
aad
cmp
push
sahf
xor
test
sub
push
mov
jne
pop
loopne
jns
adc
xchg
mov
ret
sub
dec
xorl
push
in
dec
jno
in
add
ja
js
add
xor
cmp
je
das
les
ucomiss
dec
and
pusha
testl
or
daa
sbb
stos
fisubl
js
xor
or
icebp
jge
xor
cmp
addb
ljmp
les
pop
pop
test
adc
adc
pop
mov
inc
rorb
mov
push
jmp
es
mov
out
add
test
mov
rolb
add
adcb
and
int3
xor
icebp
push
inc
mov
mov
inc
and
mov
pop
pop
lods
fcomps
pop
mov
aaa
filds
fwait
insl
pushf
jge
mov
pop
adc
sub
movl
fadds
and
pop
xor
sbb
rcr
mov
dec
push
or
pop
xorb
mov
cmpsl
jp
ret
stos
pop
add
jle
xor
incb
les
add
loopne
sub
pushf
or
xor
rcrl
jnp
roll
adc
sahf
inc
xor
jb
movsl
pop
mov
xor
push
pop
icebp
lods
mov
popa
hlt
mov
mov
dec
enter
push
scas
js
and
leave
test
add
inc
mov
adc
or
int3
and
fistps
sbb
cltd
or
nop
mov
imulb
cmp
adc
add
pop
cmpsb
adc
nop
sub
test
xchg
add
into
inc
mov
mov
icebp
push
jg
adc
sub
rol
hlt
es
aam
jb
push
mov
sub
mov
jmp
inc
push
clc
inc
xchg
add
cli
adc
inc
inc
sbb
clc
imulb
or
mov
inc
and
call
add
sub
aam
push
icebp
addl
sub
loopne
xchg
scas
xchg
loope
clc
scas
inc
sbb
and
add
sub
jle
stos
arpl
add
cmp
je
call
xor
mov
aad
ss
cwtl
loopne
mov
es
out
rolb
std
out
stos
rcr
cmp
xchg
push
inc
sub
mov
jbe
fcomps
push
push
dec
lret
mov
cmp
pop
loopne
xchg
fmuls
fadds
inc
mov
ret
aam
stos
sub
push
lods
sahf
sub
push
loope
cltd
mov
push
or
das
and
mov
mov
push
inc
ja
sub
arpl
arpl
or
mov
xor
in
cmp
xor
xchg
int3
or
outsl
or
jecxz
pop
xchg
lods
stos
sbb
mov
lret
sub
xchg
mov
inc
adc
mov
inc
or
or
sub
push
shlb
dec
sbb
jg
or
test
outsl
hlt
xor
sub
das
jmp
imul
push
inc
mov
mov
orb
and
inc
leave
outsb
testl
cmp
add
and
sbb
hlt
arpl
inc
and
repnz
add
stos
lcall
hlt
inc
call
ss
ja
in
xor
dec
and
subl
lods
xchg
xor
insb
jecxz
add
lds
shll
add
in
data16
leave
xorb
push
dec
add
jp
inc
pop
int
fldcw
jp
scas
fsubrl
inc
xchg
leave
inc
dec
je
std
cmpsb
ret
aad
sete
orl
pusha
adc
decl
icebp
cmp
stc
jo
out
out
mov
mov
stc
cmpsl
dec
jmp
pop
ljmp
lcall
cld
and
lahf
mov
ret
icebp
xchg
jne
push
out
mov
mov
loop
lcall
push
mov
icebp
loope
xchg
or
push
jnp
push
ficoml
into
or
push
mov
dec
sub
sbb
lret
decl
test
imul
fcoml
push
add
xchg
pop
fdiv
dec
mov
ljmp
lock
mov
jge
pop
or
lds
rorl
stos
decl
scas
mov
push
ja
push
dec
jns
inc
adc
sub
repnz
mov
jmp
xor
and
jnp
xor
lea
aam
mov
test
and
adc
imulb
sbb
test
or
and
incl
mov
loop
into
adc
in
lcall
mov
push
popf
and
movsl
js
aam
sbb
lcall
ljmp
outsb
dec
fmul
ss
mov
sbb
stc
mov
jp
lock
call
add
push
lahf
dec
xor
pop
xor
mov
inc
loopne
cmp
push
lcall
call
lea
sbb
mov
lods
out
hlt
adc
inc
scas
inc
dec
popf
vpshab
lods
call
dec
add
dec
xor
ljmp
xchg
int3
push
xor
test
pop
imul
adc
ja
xchg
mov
mov
popa
loope
push
inc
cmpb
or
cli
ret
mov
test
movsb
lcall
jl
ret
xor
adc
lds
add
adc
fadd
sbb
sbb
pusha
in
sarl
cmpsl
inc
daa
sub
test
push
cld
pop
or
inc
orl
sbb
add
ds
cmp
adc
mov
and
jae
js
nop
or
lods
sub
dec
call
cmp
test
jnp
dec
and
sub
sbb
arpl
adc
fistpl
popa
fisttpll
mov
fwait
add
mov
rclb
xchg
add
dec
sarl
dec
lret
jecxz
xor
push
test
cld
pop
cmpl
sub
sbb
mov
adc
jne
ljmp
or
loopne
call
mov
pop
shll
in
push
repnz
or
pop
call
lcall
addr16
mov
jnp
into
mov
mov
add
ret
lahf
xorb
das
in
cmp
sbb
ret
mov
cmpsb
mov
mov
adc
inc
xor
xor
and
and
sub
mov
popa
lods
sub
or
adc
xor
cmp
xchg
loopne
sti
test
add
and
and
push
jne
jne
filds
sub
sub
pop
mov
inc
and
add
nop
pop
ja
in
jp
adc
adc
mov
enter
mov
repnz
mov
jl
xor
out
scas
push
fwait
ss
cmp
cmp
add
outsl
sub
push
jno
roll
test
cmc
and
cmp
aas
repz
and
pop
or
xchg
push
sub
mov
add
ljmp
call
andl
mov
hlt
mov
push
and
incl
push
lea
mov
dec
loop
scas
jmp
call
lock
popf
sub
jo
mull
mov
or
test
stos
std
push
shlb
stc
adcb
mov
jbe
inc
sub
hlt
jb
aad
out
adc
add
popf
repz
and
lcall
adc
sti
jbe
or
jmp
dec
pusha
jl
jmp
or
push
inc
cmp
dec
insl
adcl
or
inc
popf
scas
cmp
iret
pop
test
ds
incb
inc
mov
dec
cwtl
dec
push
imul
mov
mov
xchg
decl
jno
sbb
cmp
or
cmpsl
pop
cmp
adc
mov
arpl
push
mov
subl
inc
mov
in
aaa
dec
jns
rorl
aaa
clc
int3
fsubrl
cmpsl
inc
mov
cmpsl
mov
or
cmp
jno
push
stc
mov
jb
inc
jb
and
pop
push
jo
jno
pop
or
pop
iret
sub
ljmp
incl
cmp
jno
push
push
sub
in
clc
adc
push
fdivs
push
fstpt
push
mov
out
cmpsb
movsb
lods
push
call
rorb
pop
test
jne
ljmp
adc
inc
testl
mov
imul
or
aam
ret
jmp
sbb
cmp
pop
scas
adc
dec
jg
and
rol
or
loope
jbe
aaa
ljmp
dec
pop
aaa
sbb
mov
lock
push
jnp
mov
je
rorl
push
mov
icebp
xchg
test
dec
add
inc
jo
add
shll
adc
and
cld
mov
pusha
xchg
cs
add
and
sbb
adc
mov
and
inc
mov
popf
ljmp
sub
xor
cld
push
mov
dec
test
sbb
pop
cld
or
pop
push
dec
shlb
fmuls
jl
adc
divb
mov
js
scas
mov
lods
stos
push
mov
xor
cs
int3
mov
popf
lea
push
sbb
xor
jb
cld
cmpsb
inc
fisttps
les
loop
xchg
lcall
sbb
jns
xor
test
pop
leave
add
xchg
imul
pop
xchg
mov
xchg
cmp
addb
pop
lds
add
cmp
ficoms
mov
push
inc
andb
add
fimull
inc
rorl
fwait
adc
fcomp
test
stc
cs
sbb
enter
adcl
roll
mov
pop
xchg
lods
and
push
mov
jae
repz
loop
jne
in
cmpsb
xor
shlb
loop
mov
lret
loopne
xor
or
inc
adc
xor
out
sbb
jp
jle
push
pop
ja
jmp
adc
pop
inc
cwtl
mov
stos
mov
fistpl
xchg
in
ss
fisttpl
mov
mov
xor
test
addr16
xor
ljmp
or
adc
add
test
faddl
inc
fnstcw
or
rcrl
rol
mov
fldln2
inc
cmpsl
ror
sti
popa
ret
mov
subl
xor
jg
loopne
ficoml
addb
lahf
ljmp
fstl
rorb
sub
pop
cwtl
dec
sbb
jl
addb
push
sbb
sbb
mov
sbb
lret
adc
add
fnstcw
ljmp
lret
jle
jle,pt
outsb
hlt
pushl
sub
pop
or
std
cld
sbb
in
mov
inc
cli
fcmovu
mov
push
test
jmp
imulb
test
sub
mov
or
jl
decl
les
add
insb
sub
enter
stos
and
add
cli
jg
xor
clc
xchg
test
movsb
adc
popf
incl
jmp
jb
mul
stos
insl
les
out
in
je
in
and
ja
sti
movsl
xchg
cli
inc
arpl
jns
aad
adc
mov
push
es
pushf
popl
cmp
mov
cli
jne
adc
pop
stc
imul
adc
mov
cmc
cmp
ljmp
inc
push
out
sahf
mov
mov
xlat
push
stos
mov
jnp
notb
cmp
pop
dec
dec
adc
xchg
jbe
stc
popa
xor
faddl
xchg
jmp
jb
xchg
jecxz
subb
mov
xor
clc
ljmp
and
daa
faddl
fidivs
push
rcl
jp
sbb
testl
loope
mov
rclb
mov
cmp
pushl
stos
sub
push
enter
or
dec
or
cmc
adc
fcoms
mov
movsb
jno
xor
rcrb
jae
std
das
sbb
adc
inc
outsb
mov
mov
mov
xchg
sbb
xor
xchg
jbe
mov
push
pushl
pusha
push
inc
jno
mov
xor
add
les
repnz
arpl
jp
adc
sbb
fists
cmp
pop
and
sub
in
push
cwtl
mov
xor
jle
cwtl
subl
sbb
rclb
pop
in
push
test
movsl
icebp
rcrl
pushl
mov
in
lcall
mov
xchg
sub
into
lahf
mov
or
fdivrp
pushl
mov
add
fcmovne
push
je
mov
cmp
mov
outsl
nop
or
mov
incl
push
inc
adc
mov
xor
xor
aaa
adc
pop
call
aad
xor
imul
pop
loopne
rclb
stos
and
sbb
or
inc
jae
add
ffreep
mov
xchg
orl
pop
sar
inc
lds
jae
mov
or
lods
xor
cmpsb
popl
in
add
cmp
clc
jmp
fisubs
adc
imul
out
sub
cmpsl
jo
repnz
pushl
cli
inc
sahf
ja
clc
into
or
pusha
sub
mov
jge
decl
mov
out
jmp
clc
dec
stos
movsl
xchg
sbb
mov
in
lods
push
cmpsb
sti
sbb
mov
mov
cmp
pop
les
insb
sub
cmpsl
or
sub
stc
stc
pop
pop
sub
inc
lahf
dec
inc
fs
mov
nop
mov
out
jecxz
adc
ja
xchg
clc
ja
inc
test
adc
sahf
int3
cmp
or
mov
mov
mov
inc
test
std
aam
inc
mov
or
sub
pop
iret
xor
ljmp
adc
jnp
or
sbb
and
sub
add
shll
loopne
mov
into
es
test
push
testb
enter
mov
pop
cmp
dec
adc
rclb
jg
or
add
das
inc
mov
inc
shll
push
sbb
or
inc
stc
adc
aam
dec
hlt
and
fst
and
push
and
fiaddl
hlt
pop
pop
pop
adc
jno
and
add
cld
push
popa
stos
mov
inc
mov
cwtl
insb
lret
inc
pushf
aam
ljmp
incb
pop
jge
jae,pn
xor
fmuls
mov
idivl
dec
cmp
sub
pop
xor
sbb
and
repz
cltd
mov
sahf
cld
xchg
addl
sbb
inc
aas
test
jb
adc
xor
testl
push
jo
jle
cld
add
mov
add
push
je
faddl
fstpt
sbb
sbb
sub
icebp
sbb
in
enter
sub
imul
lods
fsubrl
lea
ja
mov
ss
test
pop
mov
and
and
dec
inc
sub
sub
roll
push
js
aad
xor
sbb
fmulp
pop
cmp
adc
orl
ja
mov
iret
mov
iret
adcl
mov
mov
call
hlt
push
sub
repz
notb
push
pop
xor
dec
mov
pop
loopne
dec
adc
jmp
inc
rolb
cwtl
adc
gs
pop
push
cmp
and
sarb
push
mov
fsubr
outsl
xor
mov
push
sub
push
ret
adc
ret
std
inc
mov
aam
pop
add
pop
add
les
imul
sub
mov
inc
cmp
dec
and
cmp
notl
or
mov
jne
cmp
push
push
jbe
movsl
enter
add
add
popa
pushf
call
ss
xor
add
mov
fcmovu
adc
push
lock
stos
pop
stos
mov
and
cltd
sub
scas
fcoms
out
lds
adc
mov
mov
les
xchg
pop
xlat
inc
cmpsl
mov
or
mov
or
test
dec
add
sub
inc
dec
or
mov
mov
lock
jg
add
cltd
jl
mov
jbe
mov
mov
fsubs
lcall
cli
and
mov
fisubrs
jmp
pop
dec
cmpsb
inc
orb
pop
daa
jb
dec
jle
gs
mov
inc
pop
icebp
xchg
jmp
int
sahf
call
xlat
and
fwait
or
dec
lea
daa
push
adc
call
mov
ja
cmp
gs
scas
sti
add
xor
push
lahf
jle
inc
fldenv
in
sar
shlb
loopne
sahf
or
push
xlat
mov
jno
mov
or
in
ljmp
test
jnp
shlb
or
lcall
ljmp
dec
dec
fwait
sarb
out
and
das
push
sbbl
mov
mov
mov
pushf
push
jae
leave
cmp
fs
out
shl
push
jne
xor
jg
adc
decl
int3
mov
leave
fldt
sahf
mov
js
sbb
jp
ret
jnp
nop
jne
and
call
jp
adc
fidivrs
popf
fdivs
pusha
es
dec
nop
mov
shll
ljmp
sub
adc
mov
jns
cltd
xchg
mov
fstpt
pop
jae
or
idiv
lcall
stos
call
pop
xchg
xchg
int3
xchg
jmp
lret
mov
aaa
in
sti
sub
call
js
mov
inc
mov
divl
sti
jg
dec
fs
sbb
and
xchg
sti
push
je
mov
int
data16
in
jne
ljmp
iret
les
adc
lahf
mov
xorb
sbb
mov
call
sbb
sbb
cmp
addr16
xchg
mov
lcall
pop
imul
fsubrp
xor
cmp
daa
mov
out
pop
cmpb
xchg
jmp
sbb
lahf
scas
push
mov
inc
or
shll
into
inc
pop
mov
cmpsb
loopne
lret
scas
mov
and
sbb
nop
or
outsl
insl
push
lcall
inc
arpl
and
daa
in
sub
jp
das
xchg
dec
push
je
bound
add
cmp
jp
mov
outsb
stc
stc
push
dec
das
adc
cmp
repz
leave
inc
lret
pop
inc
ss
call
sbb
mov
sarb
out
stos
bnd
ret
into
popl
push
icebp
lcall
adcl
jp
ror
cli
call
icebp
pavgb
mov
mov
lods
mov
inc
sbb
pop
xor
ljmp
sub
sbb
fdivrl
mov
inc
cmp
fwait
ror
jmp
xchg
aad
in
cmp
repz
xor
push
bnd
idivb
mov
cmpsl
push
and
fdivrl
js
incl
shlb
jg
lea
in
or
out
push
sub
or
mov
cmc
push
nop
cmpsl
sub
icebp
dec
in
dec
add
pop
or
push
data16
mov
int3
cmp
adc
incl
pop
cmp
repnz
mov
ret
cli
pop
std
aam
xchg
push
or
inc
cmp
cmc
sub
fstps
adc
cld
sub
int3
clc
pusha
or
gs
adc
xchg
icebp
dec
sar
jmp
loope
ficompl
aaa
or
decb
cmc
repnz
xor
pop
test
arpl
ljmp
std
data16
add
out
ljmp
and
fildl
bswap
cmc
clc
push
test
sub
pop
mov
push
lds
mov
pushl
pop
mov
enter
sbb
testl
cmp
decl
push
pop
xor
cmc
cwtl
xor
or
int3
mov
sbb
and
fisttps
lcall
cltd
and
adc
js
dec
les
mov
test
push
inc
dec
xchg
in
popa
mov
movsl
fnstsw
fsubs
adc
call
adc
test
pop
dec
adc
in
inc
es
sbb
loopne
lcall
fcoml
rcl
cli
mov
loope
cmp
lcall
clc
inc
adc
icebp
nop
lods
inc
ret
pop
lock
or
mov
and
ljmp
rcrl
das
pop
xor
shr
pcmpgtd
mov
mov
push
mov
fbstp
ret
fcomp
ja
xchg
dec
cmp
test
outsl
adc
dec
sbb
add
lcall
testb
and
in
je
add
xor
dec
dec
jg
fildll
mov
pop
sbb
cmp
mov
mov
mov
sub
fdivrl
out
pop
out
push
icebp
mov
pushl
movsl
xchg
in
mov
insl
sahf
mov
cmpsl
or
cltd
inc
incl
pop
pop
sbb
aaa
jb
or
movsb
mov
cmp
mov
inc
popf
mov
scas
aas
icebp
push
mov
or
decl
dec
inc
fnstcw
out
xor
sub
mov
pop
test
stos
add
inc
stos
xchg
xor
xchg
ds
xor
lcall
scas
mov
adc
inc
fs
push
test
mov
sbb
out
ds
mov
jmp
mov
add
cmp
add
clc
outsb
xor
rorl
aam
or
push
xchg
into
rorl
leave
bound
dec
dec
xchg
loope
ljmp
mov
push
test
aam
dec
iret
dec
leave
or
pop
mov
sub
shll
test
adcl
cmp
mov
sahf
and
in
fists
loop
out
and
pop
ret
jae
cli
cmp
ljmp
dec
push
insb
pop
aam
cmp
ljmp
cmp
push
push
aad
shr
xchg
xchg
out
arpl
dec
push
cmp
push
mov
movb
jg
add
rcr
sub
lcall
xchg
mov
sbb
mov
cmp
popl
out
fisubs
mul
and
mov
fiadds
lock
mov
rclb
dec
push
sti
ljmp
adc
or
lret
or
sbb
divb
lret
lcall
mov
mov
ds
ret
dec
jns
jo
nop
mov
add
int3
pop
clc
jp
cmpl
xchg
sub
icebp
out
adc
sahf
xor
pop
stos
mov
push
repnz
incl
scas
add
cmpsb
sbb
loopne
or
stc
xor
lcall
inc
mov
mov
mov
xor
jne
xor
or
dec
decl
and
mov
mov
das
lock
call
lods
scas
mov
pusha
pop
mov
rcrl
movsl
stc
ss
pop
cli
jecxz
cmpsb
jb
ljmp
pop
out
jnp
pop
push
das
aaa
adc
and
pop
sub
ret
push
imul
je
clc
std
leave
js
dec
insb
popa
mov
mov
jecxz
fiadds
pop
dec
fiadds
add
sarb
jmp
cli
inc
jl
add
jmp
add
dec
jnp,pn
mov
clc
decl
jns
or
inc
pop
cmp
pop
push
xchg
std
movsl
jmp
pop
jne
pop
jge
and
out
sub
push
jnp
push
shll
add
pushl
push
add
pop
popa
movsl
std
ljmp
jnp
mov
aas
nop
sbb
pop
adc
loopne
sub
cs
push
aaa
fabs
add
lea
push
dec
loopne
pop
lcall
xor
pushf
ja
call
adc
sahf
jns
jne
aaa
dec
mov
xor
fdecstp
iret
out
xor
and
sbb
adc
incl
fwait
dec
movsl
push
hlt
decl
js
lds
adc
cld
sub
jno
inc
cwtl
cmp
add
in
cmpsb
fcomps
pop
add
mov
push
out
pusha
out
fldenv
jmp
sub
int
fnstcw
jbe
das
mov
cmp
shll
test
cmp
fwait
cmp
jb
popf
mov
jns
repz
jmp
loope
aas
ljmp
pop
call
add
or
cmp
push
divl
sub
ja
jp
inc
cmp
adc
xchg
cld
int
jbe
xchg
pop
pushl
pop
cld
sbb
xchg
gs
nop
out
iret
push
fs
mov
test
loopne
outsb
popf
je
je
xchg
jno
pushl
mov
push
ss
lds
xchg
jb
out
in
xor
out
int3
je
ret
mov
adc
cmp
xor
in
xchg
push
xchg
mov
in
or
mov
xor
iret
sub
and
inc
xlat
test
jmp
and
xchg
inc
jae
pop
ja
pop
lahf
int
lock
push
sarl
imul
fldcw
mov
mov
call
popf
add
lahf
cltd
xor
je
test
cli
mov
xchg
push
lods
test
or
xchg
fidivs
xchg
and
call
pop
lds
pop
in
in
pushf
mov
add
pop
into
cmp
inc
pushl
inc
mov
imul
fmull
mov
lods
push
sbb
ljmp
sub
clc
inc
insl
sub
mov
arpl
notl
adc
push
mov
ffree
je
es
jbe
mov
out
push
jmp
adc
lock
jns
dec
xor
mov
icebp
jo
pop
jl
mov
inc
das
adc
movsb
push
fistl
roll
repz
test
adc
pusha
aam
xchg
jp
mov
xchg
sbb
clc
pop
jle
jae
xor
add
adc
test
inc
incl
inc
ds
push
cmp
cmc
push
xor
dec
rcrb
and
mov
ljmp
or
mov
es
pop
push
popa
hlt
jg
mov
das
xchg
add
arpl
pop
imul
mov
ljmp
add
fsubr
adc
mov
cmc
or
imul
pushl
mov
fnsave
push
mov
iret
jb
push
dec
es
sti
adc
dec
popf
std
ljmp
cld
sub
mov
pop
sbb
mov
loope
adcb
jno
fnsave
lahf
jbe
movsl
fucomip
cld
outsl
subb
lea
imul
sub
outsl
jmp
data16
ds
push
rorl
fwait
mov
and
loope
and
call
sbb
or
mov
or
aam
das
hlt
and
popf
sbb
lcall
subb
push
sub
xchg
cmp
das
lock
push
pop
sub
cmp
in
decl
outsl
inc
mov
mov
sub
outsb
lods
xor
daa
pop
and
sarb
pushl
outsb
ds
cmpsl
pop
and
xor
and
dec
out
lock
mov
fbld
loop
icebp
jne
pop
push
test
sbb
hlt
cli
push
cltd
push
mov
in
fidivrs
lods
cld
call
push
in
push
repnz
int3
dec
loope
mov
scas
or
jo
test
dec
push
incl
leave
popf
lcall
ljmp
stc
xor
jno
out
adc
xchg
mov
dec
add
aam
and
lock
in
ja
dec
push
rcrl
icebp
dec
push
adc
popf
xchg
sbb
pop
shrb
popf
aad
sub
repz
xor
mov
jbe
jg
incl
jg
addr16
adc
dec
sub
fisttps
add
loopne
sub
roll
fists
pop
push
bound
test
mov
mov
scas
xchg
and
fiadds
nop
hlt
cmp
popf
aaa
xchg
pushl
ret
mov
or
mov
cmp
lea
arpl
pushl
jne
fwait
in
dec
shrb
shlb
adc
or
repnz
inc
push
sahf
in
call
mov
jne
mov
push
mov
jmp
pop
and
adcb
mov
push
jg
incl
mov
jae,pn
outsb
push
decb
push
xchg
dec
aam
daa
aam
push
aas
dec
pop
dec
stos
lea
sbb
les
lds
jns
clc
sub
mov
js
andb
xchg
pop
sub
pop
jge
mov
push
gs
incl
mov
dec
inc
xor
lahf
ret
adc
push
ljmp
test
dec
jecxz
sub
cld
outsl
icebp
pop
inc
mov
lods
xor
pop
xor
test
mov
lcall
dec
ss
cmp
fadds
add
fdivr
das
sbb
imul
sahf
orl
sbb
jmp
incl
xor
pop
popf
adc
insl
add
repz
sbb
or
pushf
jge
push
jns
push
sub
jp
in
mov
ss
lods
lcall
aad
cmc
mov
jae
cmpsl
inc
adc
je
xor
add
lret
pop
jne
pushl
xorb
stos
popf
adc
push
arpl
in
loopne
incl
mov
push
inc
push
sahf
arpl
lret
out
sub
sub
in
ljmp
cmc
add
push
dec
push
mov
push
loopne
add
cli
iret
lds
mov
loopne
call
mov
inc
mov
sar
pushl
mov
push
hlt
addb
sbb
popa
push
mov
add
int3
ret
push
lock
daa
icebp
decl
pop
sub
mov
xor
incb
cmp
popa
sub
xchg
aas
cli
pushl
jae
popa
inc
psubusw
mov
pop
clc
cmp
push
scas
cmc
std
dec
data16
pushl
mov
fs
rorb
sbb
sub
rcrb
clc
insb
hlt
aad
repnz
call
icebp
out
pop
sbb
icebp
lcall
jmp
inc
mov
dec
pushl
pop
xchg
in
sbb
mov
imul
mov
mov
push
cmp
fidivrs
mov
and
pop
adc
and
or
lcall
repnz
mov
pop
mov
dec
sub
bound
decl
pop
mov
sub
int
in
pushf
fsubrl
jge
mov
pop
sub
lea
jb
dec
out
jne
les
in
out
mov
cld
xor
xchg
jl
push
push
stc
jle
sbb
push
inc
xchg
loope
mov
lods
push
call
enter
ret
fs
aas
jle
pop
mov
sub
test
daa
call
leave
mov
sbb
inc
xchg
fimuls
mov
lods
ficoms
out
xorb
arpl
into
or
mov
fildll
out
adc
jp
ret
inc
mov
jg
iret
sahf
adc
dec
pop
sub
push
shlb
adc
js
sub
mov
fwait
mov
es
jae
cltd
popa
int
ljmp
cmpsb
push
dec
sbb
in
data16
xchg
or
xorl
jmp
or
dec
inc
xlat
jecxz
call
or
je
in
cmp
iret
mov
dec
mov
ljmp
into
pushf
pop
push
mov
leave
mov
and
rorl
cmp
mov
jge
fninit
push
xor
lcall
std
or
pop
jbe
mov
pop
pushf
or
mov
shlb
popf
pop
dec
dec
lahf
ljmp
add
lret
adc
mov
mov
je
ret
jle
or
and
push
mov
decl
es
push
mov
pop
jecxz
call
xchg
aas
sub
pusha
in
xchg
jg
cmp
in
scas
xchg
popf
ss
test
movsl
jg
lcall
push
in
ljmp
push
inc
dec
faddl
and
hlt
mov
in
ljmp
jmp
pop
cmpsl
sub
shlb
dec
fadd
movsb
ljmp
push
outsl
cmc
call
inc
fs
inc
test
push
xor
insb
jecxz
scas
lcall
stos
stc
dec
mov
add
push
mov
adc
lods
incl
xor
mov
pop
out
mov
ss
test
mov
pushl
scas
loope
push
push
push
mov
notl
mov
mov
dec
int3
ljmp
jno
and
cmp
xchg
test
push
push
lods
imul
mov
lods
arpl
jl
cmp
test
jmp
xchg
in
adc
into
daa
rolb
popf
ljmp
std
lcall
mov
cmpsb
sbb
out
push
xor
xor
jle
jb
daa
ljmp
push
xchg
repz
xor
or
int3
dec
aas
sbb
rcrl
clc
repnz
push
sbb
cltd
jae
adc
addr16
xchg
enter
outsl
dec
scas
cmp
xor
xor
pop
ficoms
daa
cmc
lcall
add
lahf
xchg
push
push
or
sub
outsl
mov
add
dec
icebp
mov
pop
pushl
test
xchg
xor
xor
dec
scas
ret
lcall
push
fdivl
incl
or
fs
pop
inc
xchg
mov
add
mov
inc
int3
sub
mov
fidivs
mov
sti
ds
pop
mov
xor
push
out
clc
pop
imul
sub
dec
xchg
incl
or
repnz
and
insb
sbbb
outsl
push
push
sub
push
add
push
jmp
push
mov
daa
push
push
ss
add
fistpll
inc
cmp
fdivrs
lock
jne
pop
jb
and
dec
and
jg
je
idiv
xor
rcr
shlb
push
pop
test
stc
roll
call
scas
pushf
gs
mov
lcall
add
jne
stc
insl
cmc
cli
pushl
arpl
and
sbb
xor
cmp
stos
cmp
xor
cmp
outsl
mov
jp
jo
stc
cmc
daa
addr16
ljmp
es
das
add
lds
hlt
mov
pop
arpl
inc
movsl
cmp
rcrl
into
cmp
jg
sub
sbb
icebp
imul
ficoml
daa
ret
pop
fs
out
mov
cmpsl
push
in
ret
cmc
daa
mov
lds
xor
fldcw
lock
int
mov
es
push
mov
dec
pop
and
mov
aam
mov
hlt
call
loop
scas
lcall
test
mov
fwait
stos
inc
stc
push
or
je
push
out
xchg
bound
lcall
cmpl
call
cli
xor
imul
std
cmp
cli
mov
or
lods
sbb
pop
sub
dec
mov
push
add
call
cmp
les
decl
push
fldt
jp
mov
sub
add
popf
mov
into
sub
movsl
dec
dec
gs
or
sahf
cmpl
push
sbb
jl
hlt
aam
jmp
lods
jecxz
inc
push
pop
adc
and
into
ret
incl
and
pushf
fiadds
ret
rol
mov
bound
in
scas
popf
push
cmpsl
ret
jmp
decb
mov
cli
rcl
inc
rclb
mov
into
mov
mul
push
and
mov
cld
ljmp
filds
les
test
xor
orb
incl
add
stos
dec
and
jl
mov
iret
icebp
xor
gs
jg
test
jnp
xor
mov
sub
ret
icebp
aaa
test
push
fs
jl
jo
outsl
pop
test
call
inc
jb
addr16
mov
jl
lcall
call
aaa
sbb
lds
or
mov
pop
mov
ljmp
push
pop
stos
jbe
pop
repz
pushl
push
jecxz
pop
sahf
jns
adc
push
sub
shlb
jmp
shl
stos
jmp
std
test
negb
adc
shll
mov
adc
pop
hlt
jmp
icebp
dec
push
sub
sbb
call
sbb
icebp
test
pop
jmp
fisttps
stc
scas
sbbb
cmp
and
lret
add
aaa
adc
sub
hlt
jmp
scas
scas
ljmp
mov
into
cmp
xchg
int3
or
push
push
outsb
shrl
push
das
cmpb
lods
add
incl
cmc
inc
mov
rclb
xor
add
stos
mov
pop
mov
incl
stos
mov
nop
add
ret
pop
or
in
cld
xor
cwtl
dec
add
call
bound
mov
gs
icebp
and
fdivrp
outsl
hlt
push
enter
ljmp
xchg
sub
jnp
or
adc
outsl
rcrl
add
push
lret
orl
sub
push
outsl
lret
repz
pop
sbb
mov
mov
movsb
cmpsl
rclb
or
pop
sub
sbb
fnstsw
rolb
jae
clc
int3
mov
add
das
sub
jg
sbb
loop
mov
lock
js
inc
dec
mov
jmp
mov
dec
sub
pop
push
ret
adc
mov
mov
fisubrl
ja
jp
aaa
lock
prefetchnta
sar
out
pop
sub
lcall
jmp
pop
int
mov
adc
call
dec
jp
or
faddl
dec
inc
lcall
inc
cs
popa
in
filds
clc
fs
jecxz
mov
pop
adc
jmp
mov
out
das
icebp
pushl
ljmp
jg
jne
pushf
sbb
jge
mov
popf
mov
xor
cli
nop
jg
data16
dec
ret
mov
push
and
adc
pop
popa
out
add
mov
fildll
mov
loop
aas
mov
scas
mov
xor
xorb
sbb
cmp
movsl
lcall
call
lret
xchg
out
aaa
stos
jo
xchg
movsl
aas
dec
push
subl
jmp
add
mov
mov
outsb
iret
mov
pop
sbb
fdivrl
pop
push
ret
and
xchg
aaa
cli
stc
xchg
push
int
xlat
push
pop
jne
push
repz
lret
jle
mov
movsl
pop
xor
std
inc
jmp
mov
pop
mov
jl
incl
jecxz
outsb
ret
pop
cmp
cmpsb
xor
fcmove
push
test
insl
jge
in
test
dec
lock
hlt
and
mov
repnz
mov
ds
mov
xor
dec
add
pop
mov
in
aaa
mov
pop
das
mov
jg
cmpsl
into
adc
sub
test
out
and
aad
xlat
jne
enter
or
out
xchg
fwait
mov
pop
mov
fs
das
cmc
xor
jb
loope
mov
sub
jnp
call
decl
xor
xor
popf
in
dec
push
jp,pn
incl
inc
cmp
cmp
popf
aaa
cmp
les
dec
pop
mov
loope
ss
test
sbb
lahf
sbb
imulb
lock
push
push
add
ficoms
add
cld
mov
pop
adc
fimuls
push
jns
inc
cmpsl
mov
ljmp
cli
es
cmp
push
lret
leave
shlb
jl
popa
icebp
stc
loopne
movsl
pop
sarb
lds
or
lock
imul
nop
mov
out
lds
fistpll
sub
xor
mov
rolb
bound
loope
icebp
dec
insb
int3
sbb
nop
out
adc
xorb
lds
das
lock
ds
je
add
xchg
test
pop
mov
xchg
jle
sub
mov
pop
icebp
fidivrs
sbb
mov
jmp
or
inc
and
cli
fistpll
aaa
pop
mov
int3
dec
dec
shlb
rorb
add
push
movsb
aaa
gs
push
mov
lcall
shr
inc
xchg
ret
scas
jo
out
or
xor
loopne
call
pop
mov
sub
jno
rolb
fldl
inc
inc
cwtl
pop
dec
jmp
mov
daa
mov
mov
sub
stos
mov
imul
push
xor
push
fwait
loope
scas
int
mov
add
fdivrl
and
jnp
lcall
aaa
jg
inc
repnz
adc
aad
sbb
outsb
mov
lds
lcall
xchg
mov
sub
jbe
test
jae
mov
sbb
aas
inc
inc
ljmp
lock
mov
or
notl
movl
je
cmp
push
test
incl
int3
xchg
push
or
push
xor
mov
nop
ret
std
push
leave
lds
arpl
arpl
outsl
cld
jmp
fisttpll
xchg
loope
sbb
cwtl
leave
stos
loopne
jecxz
jp
test
push
mov
and
or
xlat
mov
into
je
fstps
fwait
add
clc
decl
adc
arpl
jle
mov
fsubrl
push
pop
cld
lods
call
rcrb
or
dec
sbb
dec
sbb
dec
leave
xchg
loope
negb
lock
lcall
dec
lahf
dec
shl
xor
aaa
mov
adc
ret
std
ljmp
cmp
xorl
lock
jg
jns
adc
adc
out
mov
cmp
sbb
pusha
mov
ret
xor
mov
fstps
int
mov
fwait
ret
out
nop
dec
xchg
in
xor
incl
or
xchg
push
dec
adc
movsb
jmp
mov
inc
sub
or
mov
pop
xchg
sub
cmp
cli
jg
mov
loope
sbb
stc
sub
mov
fcompl
and
dec
std
lock
cltd
or
jmp
sbb
or
and
add
mov
int
adc
test
pushf
repz
mov
push
lods
adc
cmp
gs
or
sbb
lods
js
ss
add
ljmp
xor
add
scas
inc
lret
loope
in
xchg
cmp
jecxz
cmpsb
xor
ficomps
mov
ljmp
xor
ljmp
insb
pop
bound
cmp
mov
pop
ljmp
mov
mov
test
ss
aaa
mov
addr16
shrb
je
mov
push
daa
lods
adc
daa
loop
pop
call
adc
movl
push
int3
lods
fbld
aas
call
sub
jecxz
xor
cmp
bound
and
jg
mov
adc
dec
push
aam
push
mov
inc
sbb
sar
sbbb
fsubp
sti
add
jl
ljmp
lock
push
sbb
mov
decl
cld
sbb
mov
test
inc
sub
xorb
incl
int
cmp
mov
lds
sbbl
out
pop
loopne
push
movb
jle
cmpsb
pop
sub
mov
call
jmp
imul
or
pop
aaa
sub
dec
jg
sti
rcrl
into
test
aas
push
decl
int3
fisttps
in
ja
xchg
adc
fyl2x
sub
mov
sbb
mov
stos
das
push
inc
cmp
gs
mov
fidivs
jge
decl
pop
jp
imul
stos
int3
mov
mov
cmp
pop
std
test
in
ja
and
dec
pushl
stos
add
ficomps
add
push
aas
push
or
incl
lcall
push
int3
es
push
es
fucomip
sbbb
lahf
mov
andl
std
in
pop
xchg
mov
jge
fistpl
lret
mov
aaa
mov
mov
and
popa
sti
jne
call
jp
dec
dec
mov
or
push
sub
ljmp
push
inc
hlt
fldenv
jmp
in
testl
sbb
lcall
fbstp
icebp
aad
loope
jb
xor
mov
dec
inc
dec
sub
mov
xchg
jns
jo
and
cmpsb
xchg
adc
or
add
ret
shll
dec
pop
divb
pop
rcr
dec
popa
movsb
test
adc
sub
add
and
push
cwtl
mov
das
adc
and
cwtl
cli
fistps
sub
in
inc
dec
or
bound
lret
test
clc
lcall
sahf
mov
cmpsl
and
jmp
in
mov
mov
pop
and
fsts
sub
popf
mov
lcall
xor
inc
push
pop
mov
adc
call
jle
push
inc
aad
rorl
fildl
or
xlat
push
fimuls
out
adc
fiadds
pushl
sub
mov
sbb
test
popf
xchg
mov
sbb
fdivr
out
lds
shlb
xchg
jnp
loope
jg
int3
sbb
mov
test
pop
mov
inc
daa
jg
repnz
pop
inc
jo
xchg
lret
cmp
sbb
jmp
je
fistps
xor
push
gs
mov
rcll
xorb
pushl
mov
push
negb
push
jp
pop
xor
cmp
movsb
pop
and
fisubrl
jmp
add
int
jp
jp
jo
push
dec
stc
mov
stc
and
int3
mov
test
pop
test
jbe
push
mov
push
mov
or
and
clc
js
push
jg
sbb
popf
push
mov
movsl
mov
sbb
add
decl
push
ljmp
shlb
cmpsb
sbb
das
cld
das
rol
inc
mov
mov
dec
call
cmp
cmpsl
pushl
clc
lea
mov
test
pop
sub
das
lock
stc
lcall
cltd
loopne
ljmp
imul
lea
pop
cli
out
leave
mov
rcrl
repz
mov
pop
call
jne
inc
push
sub
push
pushl
lret
fidivl
arpl
les
mov
and
cld
inc
ljmp
lock
push
imul
das
loope
cld
mov
sbb
mov
decb
xor
addr16
add
mov
mov
add
shl
sub
xorl
stos
lahf
push
lcall
xorb
inc
or
mov
mulb
and
sub
call
rcrb
outsb
inc
add
mov
pop
inc
fiadds
test
fisubrs
insb
pop
loop
pop
push
push
call
repz
pop
out
pop
pop
and
sub
xchg
push
push
rcr
test
jle
mov
jmp
mov
jg
pop
mov
clc
clc
test
aam
fstps
mov
incl
into
mov
sbbb
es
push
pop
lcall
testl
fistpl
leave
aaa
outsl
and
push
xchg
pusha
sub
or
icebp
call
repnz
dec
xchg
pushf
dec
pop
jg
add
and
loope
sub
ljmp
jp
adc
in
adc
roll
pushf
sarb
lods
cli
dec
sbb
mov
ss
adc
or
sub
mov
push
movsl
adc
clc
dec
add
xchg
lods
sbbl
inc
idiv
mov
dec
cmp
mov
jmp
lods
shrb
mov
pcmpeqb
adc
jecxz
mov
sub
int
jl
pop
xor
xchg
fcoms
popa
dec
gs
aad
jb
enter
fisubs
das
in
icebp
sbb
decl
jmp
popf
xor
and
fidivs
int3
xchg
push
aaa
cli
lcall
pop
cmpsb
and
push
sub
push
xor
incl
out
pop
lds
fld
out
cmp
incb
or
push
ljmp
inc
addb
xchg
inc
je
iret
pop
inc
gs
push
sub
mov
clc
jp
add
pop
pop
scas
xor
sahf
stc
sub
mov
mov
cli
pop
loopne
xor
cmp
push
dec
adc
pop
loope
pop
std
into
sbb
pushl
aaa
cld
lret
sub
inc
mov
jl
test
out
xchg
mov
ljmp
mov
inc
aam
ds
loopne
ljmp
sub
movsl
add
mov
push
es
jmp
insb
xchg
mov
jmp
mov
incl
mov
fistl
xchg
into
vmptrst
mov
or
ljmp
mov
inc
rcll
repnz
cmp
ret
das
test
fwait
cwtl
xchg
fisubl
jmp
xchg
and
xor
ja
repz
int
jno
inc
inc
adc
nop
adc
std
mov
decl
mov
scas
jbe
bound
aaa
push
sbbb
xchg
pushf
mov
cmp
push
ljmp
insl
sub
adc
ret
sti
mov
pop
scas
incl
rclb
jb
adc
aam
outsb
jle
nop
andb
aaa
and
push
hlt
fistl
ficoml
or
or
in
test
call
push
jbe
decl
scas
add
sbb
mov
xchg
pop
rorb
mov
fcomi
xchg
popa
orb
fcoml
mov
xchg
dec
dec
cmpsl
stc
int
cmp
adc
sbb
jbe
les
in
sbb
roll
push
je
mov
xchg
in
js
or
insl
push
xchg
aaa
push
lea
mov
jmp
ljmp
mov
mov
adc
ret
ret
inc
sub
insb
mulb
xchg
cli
incl
xor
inc
stc
inc
pop
ss
add
loopne
adc
call
std
sub
int3
and
push
sbb
test
movsl
or
out
inc
call
repnz
lcall
loope
cmp
pop
push
mov
and
pop
xor
sub
rcrl
leave
mul
in
mov
stc
mov
dec
cmp
fnstsw
dec
xchg
aad
and
add
ljmp
pushl
gs
pushl
icebp
inc
stos
mov
mov
std
mov
fwait
jo
addr16
add
and
gs
pusha
jmp
test
lods
mov
xchg
push
daa
ret
insl
mov
jbe
jbe
leave
in
divl
mov
jp
sub
or
sbb
test
jmp
fsubp
jne
das
adc
ljmp
sub
sub
xor
cwtl
clc
add
push
xchg
mov
call
test
jbe
pop
cmp
rcrb
sub
xchg
pop
lret
js
jl
mov
xchg
cmc
inc
scas
lods
popa
js
jb
stc
sbb
shlb
je
fs
decl
xor
jp
icebp
rorl
es
pop
add
cmpsb
inc
loope
int
jp
sub
lods
inc
inc
scas
ffreep
getsec
add
call
mov
push
subb
call
fcomp
pop
popw
ljmp
test
push
cmpsb
jmp
pop
adc
inc
jne
dec
out
push
in
jo
ss
jae
ljmp
outsb
jne
push
es
cmc
fucomi
mov
and
loope
jmp
adc
fs
pop
divb
loop
adc
lods
aad
incl
decl
cltd
sub
xchg
inc
sbb
in
das
out
adc
mov
pop
shrl
mov
repz
popf
inc
dec
inc
movb
sbb
les
xor
mov
inc
jg
ljmp
clc
and
cmp
movb
popf
inc
clc
ljmp
mov
inc
xchg
mov
cmpsb
sub
mov
incb
outsl
icebp
lods
sarb
push
insl
xchg
pop
incl
pop
inc
aas
out
jecxz
rcr
push
jl
je
pxor
fxch
in
push
mov
jl
popa
cmp
imul
out
sub
out
incl
roll
nop
movsb
cmp
pop
xor
into
add
es
ljmp
insb
mov
mov
andb
iret
test
mov
test
pop
push
lcall
test
dec
pop
ss
pop
loop
out
sbb
in
dec
andb
push
and
sahf
dec
jge
decl
in
clc
xor
nop
mov
adcb
xor
cld
adc
insl
repnz
std
incl
bndstx
icebp
cs
xchg
cwtl
dec
inc
mov
xchg
and
sub
stc
into
aaa
and
pop
jg
push
pop
adc
or
rolb
sbb
jmp
sub
cmpsb
xor
adcl
mov
ljmp
xchg
idivl
div
jg
lcall
jb
movsb
cmc
mov
pop
and
jl
testl
test
lcall
aaa
jo
xchg
aaa
pop
push
lcall
fstps
arpl
and
dec
add
jg
jmp
xor
mov
and
cmp
fdivs
mov
cmp
jnp
inc
sub
push
das
push
loopne
clc
mov
fwait
jae
pop
mov
mov
ljmp
decb
and
mov
cmp
pop
nop
out
in
add
into
or
push
push
ds
push
aas
or
ja,pt
or
or
add
pop
cmp
in
fnstsw
and
scas
pop
cwtl
cmp
xor
and
lcall
adc
lea
hlt
sarb
dec
sahf
mov
test
decl
mov
out
ljmp
jg
shl
add
adc
or
and
dec
mov
mov
cwtl
int
out
rcll
outsb
outsb
dec
push
add
bnd
loope
jle
stc
adc
jl
xchg
lcall
sub
pop
lock
addr16
mov
sbb
xor
inc
add
call
in
out
pop
gs
xor
call
icebp
das
ret
inc
mov
pop
mov
sbb
icebp
jp
lods
jne
and
pop
sbb
std
jmp
inc
mov
lcall
sahf
stos
popa
jle
pop
js
stc
mov
mov
cmp
cwtl
daa
imul
fsubrp
in
xchg
loop
fldl
pop
pop
fcompl
pop
pop
aaa
hlt
ljmp
xor
sbb
dec
icebp
and
outsl
jns
jle
mov
lcall
in
mov
pop
push
xchg
mov
adc
cld
lcall
pop
into
or
aad
dec
jge
adc
push
shrl
ljmp
mov
xchg
aas
dec
sbb
xor
sahf
ret
iret
inc
test
or
fdivrp
mov
lcall
lret
xor
xor
jb
cmpsl
jl
pop
push
cli
push
and
jo
push
mov
mov
loope
adc
mov
cmp
fisttpl
xor
movsl
and
jg
cld
scas
mov
mov
lret
aaa
and
dec
es
inc
cmp
not
jnp
test
push
rol
adc
push
call
stc
cmp
fadds
bound
jl
xchg
fistps
leave
push
inc
mov
sub
jecxz
inc
out
sbb
jne
fdivs
inc
pop
insl
in
add
mov
bound
xchg
mov
jmp
mov
cmp
xor
into
fldl
dec
inc
aad
ljmp
sub
cmp
out
xchg
into
pop
in
jmp
cmp
pop
sub
cmp
je
sub
stos
ss
shlb
movsl
ffreep
or
xor
add
shlb
pop
incl
mov
xor
iret
adc
pop
loopne
clc
incl
js
shl
sti
ljmp
sarl
mov
cmc
nop
sbb
nop
sbb
call
decl
jle
jb
inc
jns
add
movsl
push
mov
loop
incb
fstpt
dec
call
xor
mov
xor
sbb
call
push
push
mov
mov
xor
bound
inc
xchg
xor
adc
lret
stos
fucomip
pop
cli
in
mov
ss
dec
and
cmc
std
pushl
inc
lcall
mov
mov
cs
decl
push
and
rcrb
fcompl
or
dec
cld
jnp
adc
ds
fs
push
flds
inc
fildll
leave
dec
cwtl
cmpsb
lahf
icebp
in
decl
pushl
and
push
jno
jmp
mov
je
loopne
pushl
ret
sub
cmc
add
ficoms
out
dec
loope
push
stc
jl
imul
mov
push
test
fs
mov
fwait
sbb
jmp
aad
cmp
pop
and
pop
and
push
and
cmc
test
movsl
pushl
add
shlb
cmp
stos
xor
sub
call
xchg
pop
aam
mov
ds
lret
stos
lcall
scas
xchg
or
lock
incb
outsl
ljmp
je
cmp
test
xchg
incl
dec
pop
cmpsb
pop
rorl
pop
cmp
daa
repz
and
jp
jg
dec
push
mov
adc
rcrl
adc
call
inc
bound
adc
aad
or
fldcw
add
push
mov
fucom
xor
mov
in
add
cmp
pop
stos
mov
lods
fsubrp
movsb
ret
out
jge
sbb
insl
xor
fwait
add
mov
mov
dec
dec
mov
mov
adc
add
lcall
je
mov
addb
inc
xchg
inc
mov
incl
xor
pop
push
mov
xchg
sub
mov
shl
sub
incl
ljmp
jo
ja
jnp
std
push
mov
sub
pop
dec
loope
loopne
mov
cmp
shlb
fisttpll
mov
cld
in
mov
xchg
sbb
mov
fdivp
into
cmpsl
pop
fisubrs
imul
in
pushf
mov
cld
bound
lods
ds
pop
cltd
loopne
cwtl
loopne
stc
jmp
mov
vmaxss
decl
push
into
xchg
push
pusha
movsl
imul
sbb
or
push
mov
call
enter
pop
gs
std
mov
mov
loope
mov
call
cli
or
jae
dec
cli
aaa
xchg
mov
sub
push
jecxz
fistps
rol
mov
add
sbb
sbb
test
ljmp
sarb
es
xor
cmp
push
sub
or
xlat
je
inc
jl
mov
incl
fldt
xchg
aaa
dec
jbe
je
std
decl
push
add
bts
imul
insb
sbb
cmp
mov
out
dec
loop
sub
pushl
into
fcomp
mov
mov
les
test
sbbl
mov
push
lock
inc
mov
push
xor
mov
pop
sbb
jb
stc
not
rclb
mov
mov
mov
xchg
scas
push
mov
movsb
lods
cltd
mov
ror
iret
notb
and
iret
imul
repz
mov
rcrb
sbbl
call
push
cltd
cmp
arpl
je
pop
jo
inc
jg
push
or
lahf
scas
je
scas
mov
jmp
jns
je
test
jb
cltd
push
cmp
fwait
out
dec
push
sbb
pop
pop
jb
push
xchg
mov
mov
ret
cwtl
add
incb
icebp
pushl
mov
and
mov
mov
je
loopne
in
sub
mov
call
outsb
cmp
mov
test
loopne
fstpt
or
adc
push
iret
dec
mov
pop
push
jae
sbb
lret
aas
iret
call
and
clc
imul
dec
loope
pop
and
pushl
mov
push
add
sbb
lea
into
fnstsw
jg
call
sub
and
lcall
shl
pop
inc
repz
orb
das
mov
or
enter
adc
aam
mov
scas
fucom
inc
add
push
cmp
jns
push
fistl
push
in
sbbb
lea
fisubs
fs
mov
outsl
cltd
addb
data16
cld
push
fnstsw
mov
fldl
jns
scas
mulb
cmp
jp
test
lcall
jns
adc
cwtl
cld
cmp
dec
ficomps
ret
mov
push
cmp
jg
rcrl
stos
lret
sbb
jg
pop
push
fsubp
xchg
outsb
jg
lcall
popf
lcall
xor
popl
xchg
cmp
aad
dec
jmp
cmc
pop
lock
in
pop
jp
mov
lds
data16
dec
jae
ljmp
cmp
fucomi
mov
pushf
in
scas
cwtl
adc
and
push
xor
incl
jo
xchg
cmp
xchg
jecxz
in
cmp
call
lret
push
jno
shrl
dec
lahf
decl
cmp
pop
mov
mov
andl
bound
or
jmp
cmc
int3
fbstp
nop
rorl
outsl
stos
fists
xor
pop
push
test
fldcw
pop
cld
ljmp
mov
int
add
jb
sahf
inc
into
mov
int3
subl
dec
shrl
adc
mov
jp
scas
add
stos
xor
xor
push
dec
shr
int3
sbb
incl
push
add
push
jne
push
ret
sbbl
jno
das
leave
loop
xchg
cli
or
inc
cmp
sahf
lea
xor
jb
pop
cld
stos
push
pushl
stos
or
inc
mov
lods
int3
faddp
sar
and
loopne
mov
das
inc
cld
push
or
and
sub
fldenv
pop
pop
or
xchg
ljmp
jns
pop
mov
les
mov
data16
lret
or
sub
adc
push
mov
pop
fstpt
jmp
ss
mov
into
cmpl
pop
and
sbb
pushw
icebp
jg
pusha
jg
and
lds
leave
lea
clc
add
push
aam
xor
jo
outsl
cld
mov
mov
mov
call
cmp
aas
insb
cld
ljmp
lock
jl
sub
fdiv
icebp
add
decl
xchg
mov
mov
jno
loope
nop
movsl
je
mov
mov
addb
cld
ret
addr16
jbe
lcall
aas
or
pop
mov
loope
and
fwait
jne
icebp
xor
jg
ja
lret
sub
mov
sub
es
into
sbb
mov
ss
scas
or
mov
rorl
shrb
incl
mov
cmp
or
out
cld
jmp
sbb
jns
jae,pt
ds
push
adc
xchg
inc
mov
jno
push
or
xor
sbb
shrl
pop
mov
mov
xor
push
stc
mov
adc
and
dec
out
push
pusha
test
pop
pop
xchg
testl
repnz
jne
sar
in
and
jg
sbb
xchg
cltd
ret
mov
negl
mov
jae
fwait
mov
ljmp
movsb
data16
pop
ss
cs
jnp
add
lret
push
jbe
mov
std
incl
repz
dec
filds
stc
mov
out
outsb
loopne
adc
ret
inc
cmp
addr16
adc
push
add
sbb
xchg
adc
in
mov
shll
or
arpl
ds
js
stc
outsl
inc
fmull
push
mov
sar
dec
jno
cmp
or
insb
or
dec
mov
pop
lcall
fildl
jne
sbb
push
push
bnd
mov
mov
inc
call
incl
adc
jb
scas
leave
mov
inc
aam
cli
sti
jg
lcall
mov
rcrl
mov
cmp
pop
jne
das
jo
pop
mov
mov
cmp
inc
adc
call
sysret
out
dec
movsb
jae
xchg
mov
ds
mov
xchg
daa
aaa
xor
mov
std
call
dec
fs
add
mov
adc
nop
cwtl
push
icebp
adc
mov
mov
fiadds
int
xchg
jno,pn
bound
jg
addr16
jne
push
adc
imul
std
mov
fnstsw
js
push
inc
push
in
add
sub
test
cld
aad
push
fwait
jns
int
dec
sub
test
jecxz
pop
jp
call
and
or
js
lods
lock
or
adc
outsl
stc
push
rol
mov
pop
mov
rorb
jmp
cmp
lcall
rorb
fmuls
clc
imul
mov
push
pop
push
adc
add
inc
mov
cli
fcmovnb
mov
ret
enter
aam
xor
pop
or
and
inc
cmpsl
icebp
aaa
jmp
movsl
stos
add
les
mov
das
dec
iret
and
insb
cmp
mov
mov
lcall
mov
scas
cltd
dec
mov
popa
dec
cmp
dec
mov
clc
mov
and
dec
push
lock
mov
sub
pop
bound
push
fnstsw
pushl
mov
xchg
add
cmp
sub
cmp
lods
arpl
incl
icebp
cmp
sub
stos
cmp
pop
cmpsb
popa
dec
push
ljmp
push
add
jp
push
sbb
out
std
lods
mov
loope
inc
mov
addr16
mov
popf
test
cmp
xchg
sar
das
adc
fnstsw
bound
fnstcw
clc
aaa
aam
push
cmpsl
push
rolb
into
xor
inc
lcall
mov
cwtl
sbb
sbb
mov
scas
mov
xor
sub
movsb
cli
std
mov
mov
pop
mov
jl
faddl
or
sbb
fcoms
and
ror
dec
jmp
iret
sbb
cmp
or
popf
in
mov
add
test
cs
push
push
sub
lods
movsl
loopne
pop
clc
jmp
fisubrl
push
int3
mov
mov
push
mov
leave
mov
and
xor
xor
leave
ljmp
push
ljmp
mov
push
stos
xor
pop
xchg
adc
test
mov
mov
pop
or
test
pop
cld
lcall
scas
push
pop
mov
xor
or
jae
dec
push
cld
pushl
push
rcr
loope
repnz
push
xchg
cmpsb
sub
add
lcall
pop
sub
jbe
pop
pop
pop
cmpsl
or
pop
clc
sub
cmp
or
and
aaa
stos
xchg
fisubs
mov
inc
pop
dec
fxch
stos
subl
pushl
push
push
scas
mov
mov
icebp
fdiv
push
pop
je
mov
sbb
dec
std
das
pop
mov
push
lods
pop
push
in
nop
mov
ja
sub
mov
mov
push
cli
or
sub
call
loope
mov
popa
ja
jge
popf
add
bound
outsb
lock
jg
out
jnp
js
add
call
sub
into
call
shll
xor
push
popf
mov
xchg
ljmp
fcomps
das
cld
call
je
sub
push
cltd
sar
incb
xlat
dec
dec
mov
mov
inc
dec
jae
sbb
sbb
xor
scas
push
fsubrs
or
dec
sbb
xor
pusha
sbb
xchg
popf
push
push
scas
fiadds
adc
add
sbb
and
xchg
sahf
repnz
hlt
divl
sbb
outsb
cld
push
das
int3
inc
mov
sub
mov
ljmp
lock
pop
add
inc
aas
and
sub
lods
test
pop
call
clc
fs
sub
or
pusha
mov
jmp
sbb
jbe
das
pop
in
adc
sub
lds
add
jle
and
sbb
mov
or
pop
xchg
ljmp
adc
gs
jge
jae
pop
frstor
jg
call
lret
add
push
test
rcll
push
je
fsubl
lea
lcall
in
mov
mov
or
sub
and
lcall
cld
icebp
sub
test
je
bound
sbb
adc
adcl
mov
and
mov
out
mov
adc
xchg
enter
and
lcall
mov
xor
in
push
xor
sahf
decl
jb
push
push
dec
dec
mov
mov
jmp
enter
mov
or
insl
bound
xor
jecxz
mov
pop
andb
xor
out
pop
push
test
sahf
inc
lcall
sbb
lods
ret
pop
mov
loope
mov
daa
pusha
enter
inc
fsts
sahf
shrb
loope
sub
lds
jnp
fs
add
test
cs
jb
setle
stos
or
mov
int
popa
mov
xchg
xchg
in
or
mov
mov
jno
in
nop
inc
lds
xchg
mov
stc
cltd
mov
ljmp
fwait
and
popa
dec
data16
sbb
aad
popa
cld
pushl
adcl
fs
mov
ds
outsl
add
jmp
cmp
push
jnp
sarl
xor
leave
dec
lcall
bound
add
fists
and
nop
mov
insl
mov
fidivrl
icebp
and
adcb
loop
lcall
add
sarl
in
xchg
cmp
mov
xor
pop
cltd
movsl
dec
std
lods
jmp
xor
jo
sub
sar
cmpsb
dec
and
sbb
sub
pop
inc
push
pop
ja
mov
icebp
fs
xor
jmp
mov
test
shr
mov
jno
pop
mov
ljmp
inc
repz
xchg
push
enter
mov
push
jecxz
into
ret
mov
xchg
mov
ss
inc
adc
push
push
push
lds
jo
jmp
jl
inc
jg
mov
push
hlt
adc
adc
mov
jno
call
cli
fistps
adc
in
mov
jns
mov
push
cltd
jle
inc
cli
je
ljmp
cld
pushf
insb
and
add
sahf
ljmp
jp
push
mov
orb
aad
sbb
incl
xor
cwtl
into
mov
inc
das
hlt
cmp
call
lahf
push
cwtl
pop
lds
inc
cmp
lods
pushf
push
cli
js
leave
mov
outsl
pop
paddd
int
rclb
out
fstpl
push
test
push
rorb
scas
or
jne
push
mov
incl
enter
adc
mov
push
popf
mov
push
jg
sbb
out
dec
adc
cmp
int3
pop
frstor
push
sub
dec
incl
subl
stc
xor
aad
bswap
call
mov
add
push
orl
mov
or
jmp
jb
cmp
lods
sbb
imul
inc
sub
mov
rcrb
popa
andl
in
push
cmp
nop
pushl
rcrb
out
mov
sub
sarb
pop
out
hlt
aaa
push
adc
xchg
sub
sahf
movl
andb
arpl
push
and
dec
popf
adc
cmp
pop
decl
loopne
xor
pop
jne
dec
xchg
xor
and
jne
pop
push
decb
decl
mov
stos
fildl
les
cmp
int3
inc
loop
adc
call
mov
out
dec
pop
jne
loop
rcr
aaa
cmc
ds
arpl
dec
shrl
cmp
jg
or
dec
stos
dec
fnstsw
aaa
sub
mov
and
clc
push
add
cmp
mov
test
add
dec
sub
mov
fdivr
incl
jg
push
cwtl
mov
and
lods
data16
mov
jg
dec
cmpsl
incl
jbe
dec
mov
mov
mov
aad
arpl
ljmp
sbb
push
jnp
ret
fs
pop
jno
mul
mov
js
mov
imul
ljmp
aaa
pop
pop
sub
incl
int
lahf
sbb
jne
pop
push
inc
imul
cs
xchg
into
mov
push
loop
xchg
mov
jle
fsubrl
negl
cli
push
lret
push
push
mov
cmp
shll
out
stos
xor
adc
jp
cmpsb
xchg
sar
jg
adcb
out
mov
cmp
xor
pop
xchg
mov
mov
mov
cmc
popa
dec
mov
cmp
jmp
pop
lret
sahf
push
jnp
loopne
adc
sbb
jle
pop
jmp
cwtl
fdivrs
cmp
push
leave
add
sub
fistps
mov
xchg
sti
dec
movsl
xor
push
cltd
inc
xchg
mov
xchg
dec
fstl
cmp
jbe
aad
or
adc
pop
mov
mov
jmp
mov
pushf
sub
mov
call
pop
aaa
jge
sbb
mov
je
jmp
sub
call
cli
roll
mov
ja
fisttpll
sub
push
sub
fistpll
push
frndint
inc
push
jne
je
pop
xchg
or
clc
add
jbe
std
lcall
sub
dec
repz
push
or
out
sbb
and
arpl
cmp
jg
scas
and
add
popf
repnz
mov
orl
incl
jp
ljmp
cmp
fwait
xor
adc
imul
ljmp
inc
nop
pop
sub
clc
jmp
mov
jae
jl
xor
call
addr16
icebp
mov
mov
test
cld
imul
adc
fsubl
cwtl
scas
sbb
mov
fildl
movsl
push
push
mov
sub
dec
or
xor
ljmp
inc
call
in
fwait
je
lods
int3
in
mov
test
lods
ljmp
shll
jmp
cs
enter
lret
cmp
pushl
repnz
add
mov
decl
in
outsb
push
dec
sahf
leave
sub
xor
pop
repnz
rcl
xchg
cli
jmp
cmp
shl
sub
ljmp
inc
cmp
icebp
fcoms
pop
loope
rclb
push
push
xor
sub
mov
out
test
push
loopne
push
adcl
cltd
movsl
jle
decl
cltd
dec
call
and
ljmp
cs
mov
xchg
dec
cmc
dec
fistpll
sub
movsl
in
fidivrs
imul
into
decl
sub
mov
xor
jmp
and
aaa
lret
aaa
loop
enter
imul
jmp
jne
add
jl
or
popf
fwait
pop
inc
mov
sub
adc
xchg
fxch
cmc
lcall
std
xchg
xchg
adc
popa
sub
cmp
inc
fisttps
lcall
xor
inc
arpl
mov
push
inc
iret
push
jo
lcall
stos
adc
subb
jmp
mov
or
push
xor
or
shr
fwait
mov
push
xchg
lds
stos
adc
cmpsb
ds
inc
pushl
or
push
or
xchg
fcoml
or
cmp
mov
jecxz
mov
mov
cmp
add
push
mov
xchg
add
jmp
iret
repnz
ds
pop
lgs
jecxz
jne
cwtl
xchg
add
int3
icebp
ja
mov
clc
sub
adc
lret
int
sarb
lcall
aaa
and
lods
loop
dec
bound
pop
cs
pop
adc
jb
call
xor
loopne
jns,pn
out
lock
icebp
in
xor
incl
incl
insb
test
clc
dec
cmp
lea
sub
or
jae
inc
cmp
ljmp
jnp
mov
scas
bound
mov
jae
jp
dec
jo
imul
push
setge
dec
cmp
das
stc
sub
pop
incl
push
or
sar
lods
scas
mov
or
lock
pop
lods
aas
int3
daa
push
inc
outsl
loop
clc
call
or
push
sahf
adc
out
inc
inc
into
push
jmp
lcall
dec
jae
imul
movsb
jo
xor
push
and
mov
jg
sahf
mov
xchg
ds
sub
mov
aad
mov
or
cmp
fldcw
add
bound
aad
inc
push
push
js
cmp
sub
dec
inc
pop
add
movsl
hlt
push
lock
mov
dec
ret
cmp
xchg
fs
lock
mov
pop
andl
scas
pop
add
sbb
icebp
sti
test
fstpl
popa
adcl
xchg
popf
sbb
insl
jae
in
lcall
fwait
sub
call
inc
xor
mov
cwtl
mov
imul
incl
push
pop
cmp
mov
pop
xchg
insl
ficompl
lcall
ljmp
lret
nop
rcr
xor
cmp
mov
shl
rcl
leave
lock
aas
ljmp
stc
scas
mov
or
cmpsl
out
dec
xchg
pop
dec
lahf
fdivrp
fildll
scas
inc
stc
jecxz
jno
inc
jle
xchg
cmc
mov
ret
mov
jg
fists
ja
xchg
out
push
sahf
sbb
adc
pushl
lcall
pushf
emms
sbb
lods
xor
test
das
cmc
mov
lock
ret
pusha
push
iret
cmpsl
fldt
out
xor
sbb
adc
jae
dec
outsb
insl
pop
out
sub
cmp
repz
mov
push
inc
mov
xor
insb
leave
sbb
ljmp
sbb
jb
or
test
or
dec
jmp
jo
arpl
push
ljmp
inc
fcoms
jl
notl
idivb
jo
enter
std
xchg
fs
clc
call
mov
aad
stos
shll
push
dec
jp
ljmp
inc
push
sub
movsl
pop
in
idivb
ret
loope
inc
xlat
mov
mov
std
jmp
or
sub
jmp
sbb
and
into
sbb
lret
sbb
xchg
ja
adc
jmp
ret
push
cmp
xchg
pop
inc
decl
jge
jmp
inc
mov
and
ret
stos
xchg
ljmp
mov
ljmp
adc
test
mov
jb
pop
shlb
and
dec
clc
sub
sub
mov
ljmp
xor
data16
test
and
jg
call
inc
mov
and
mov
int
adcl
pushf
cmc
fsts
inc
add
dec
test
pop
cmp
pushf
xchg
mov
outsb
pop
fnstcw
lock
push
test
out
fucomip
std
xchg
sub
xor
xor
call
out
int
aad
mov
test
dec
xor
lahf
push
jne
test
sar
pushf
inc
stos
or
outsb
xchg
popa
icebp
jbe
clc
or
xchg
clc
frstor
adcl
xchg
cmp
xor
sub
jg
icebp
xchg
or
jp
movsl
cmp
jne
and
repnz
cmp
dec
div
ret
xchg
mov
ljmp
cmp
push
movsb
mov
pop
or
repz
call
lds
fwait
pop
sub
outsl
insb
int3
jecxz
and
cmpl
popf
pusha
dec
scas
test
data16
call
pop
add
or
lds
push
push
fisubrl
jbe
arpl
mov
mov
and
cmc
lcall
mov
ds
xorb
add
es
push
outsl
dec
pop
inc
imul
decl
icebp
sub
ret
cli
xchg
jg
scas
and
subb
aaa
xchg
xchg
call
inc
fs
pop
jne
adc
mov
lock
adc
lds
xor
mov
pop
iret
bound
out
sub
adc
in
adc
cwtl
int3
xchg
stos
cwtl
loope
xlat
or
lea
or
mov
loope
ret
push
xor
mov
xor
mov
or
mov
leave
in
arpl
in
push
push
cmp
lret
push
aad
stc
ret
outsb
cmpsb
cmc
sub
ljmp
mov
cmp
sbb
and
jecxz
popf
sub
lcall
ja
cltd
dec
or
cmp
pop
pop
mov
sub
rol
test
iret
decl
adc
adc
xchg
out
xor
dec
pop
repz
cld
fdivr
jmp
popa
lds
pop
popf
cmp
in
dec
adc
push
movsb
aad
enter
mov
call
mov
ljmp
mov
clc
loopne
fs
leave
int3
jg
mov
jg
lcall
bnd
sar
cmp
loop
loope
mov
popa
mov
dec
xor
mov
lcall
and
dec
out
sahf
dec
and
jmp
aad
cmp
fildll
orb
in
icebp
or
cmc
call
incl
mov
add
clc
xchg
test
sub
call
mov
push
popa
and
repz
mov
fwait
inc
add
inc
fisttps
jg
ret
mov
and
fildl
push
outsl
cld
das
cmc
fs
ja
mov
dec
xchg
push
pop
out
jnp
insl
out
ljmp
and
icebp
sbb
jp
lock
out
xchg
push
ss
inc
ret
mov
mov
dec
div
pop
xchg
daa
pop
gs
add
adc
adc
popf
jecxz
or
lock
mov
bound
out
adc
movsl
sbb
popa
cmp
adc
add
jne
idivb
pushl
adc
push
fisubrl
into
inc
sahf
push
or
cmp
cmpsb
ja
cmp
rcll
jo
stos
hlt
scas
imul
dec
adc
or
jbe
rcl
adc
pop
dec
mov
jbe
lahf
sar
or
les
jmp
inc
add
test
dec
dec
subb
lahf
adc
sarb
mov
adc
out
adc
stos
inc
add
pop
dec
decb
mov
es
ret
jg
inc
sbb
orb
mov
xor
and
out
add
incl
lahf
movsb
outsb
call
leave
jno
push
mov
dec
in
out
mov
and
arpl
xlat
cltd
pop
outsl
lock
push
repnz
inc
addb
clc
call
push
icebp
mov
jbe
xchg
iret
pop
pushf
cltd
push
shrb
mov
push
test
adc
lret
lea
stos
push
push
inc
jg
sub
test
jecxz
adc
cmp
xor
aaa
cmc
pushl
fistl
pop
inc
fidivrs
insl
mov
mov
fldenv
icebp
sbbb
ret
incl
or
ret
jb
sub
push
inc
rcl
xor
pop
fisttpl
loopne
jns
push
aaa
rcll
push
sub
jbe
or
insb
cld
mov
in
xchg
and
ljmp
loopne
xchg
subb
clc
out
mov
aam
push
test
cli
jg
mov
int3
fbld
sub
ja
movsl
negb
jmp
cmp
cmpsb
jo
cli
and
dec
pop
mov
push
adc
insb
roll
jp
popf
int3
xlat
or
test
clc
in
test
cmp
scas
ret
aad
jmp
pop
push
pop
and
loopne
xchg
and
packuswb
incl
push
push
jno
sbb
xor
stc
enter
sbb
sub
push
mov
pop
push
iret
cmp
ss
mov
mov
ljmp
or
lahf
pop
inc
jns
push
adc
lea
push
jbe
push
jmp
dec
cld
dec
cmc
cwtl
mov
jmp
cmp
stos
lahf
inc
xor
leave
test
xchg
mov
xor
adc
incl
mov
pop
je
inc
addr16
cld
ljmp
lods
pop
ja
push
icebp
dec
out
mov
int
ljmp
scas
out
outsb
movsb
pop
jmp
or
bound
xchg
pop
push
out
dec
lret
sub
inc
or
inc
int3
and
xlat
lods
inc
int
test
lea
cli
fs
cmc
lea
sbb
outsl
lock
out
xor
mov
loopne
mov
mov
sbb
push
mov
xchg
sbb
imul
jnp
jmp
inc
mov
arpl
daa
push
mov
aas
pop
addr16
jp
sub
bnd
xchg
or
fucomp
out
pop
mov
jg
add
sbb
pop
cwtl
test
lret
mov
popa
ds
out
mov
mov
cmp
int3
inc
push
js
push
mov
or
cs
pop
jmp
xor
push
sti
adc
mov
jl
mov
ljmp
fldcw
fldt
xlat
push
or
call
cmpl
mov
mov
sub
and
lret
inc
ds
xchg
xchg
inc
cmp
outsb
rcr
decl
xor
cltd
cmpsw
stos
imul
push
inc
inc
and
incl
rdtsc
sub
rcl
push
lds
inc
icebp
imul
scas
push
clc
cmp
ja
daa
lea
in
test
fdivrp
lods
outsl
icebp
xchg
or
add
dec
dec
fldenv
lcall
xchg
aaa
xor
cld
cli
push
cmp
clc
in
loope
xchg
cmpsl
sahf
inc
mov
repz
mov
fists
out
adcl
jp
pushl
mov
ljmp
nop
into
loopne
or
dec
sub
scas
and
jmp
cmp
jae
sub
mov
xchg
sahf
pushf
xchg
hlt
cmpsl
jge
cmpsb
imul
ljmp
xchg
cltd
jg
lea
out
push
into
sbb
jl
dec
xchg
xchg
push
add
jno
popf
push
or
fsubr
jae
sub
aas
push
popl
clc
mov
imul
mov
in
les
dec
mov
repnz
mov
insl
or
push
repz
mul
flds
ljmp
xchg
test
call
loope
mov
test
popf
adc
test
push
cmp
test
and
into
decl
loop
sbb
sub
ffreep
lcall
mov
xor
sub
pop
call
or
cmc
push
cmpsl
fdivp
lea
mov
fdivl
mov
testl
cs
pop
div
in
bound
jmp
pop
addr16
ljmp
into
popf
push
inc
mov
jne
and
outsb
in
sub
test
in
std
stos
add
and
das
mov
shlb
ljmp
push
mov
mov
xchg
pushf
nop
push
int3
cld
push
and
lret
xlat
aam
mov
decl
roll
xchg
fs
pusha
jp
xchg
les
icebp
mov
and
aam
in
loope
mov
pop
loopne
xchg
outsb
stc
out
loope
loopne
outsl
std
pushf
or
mov
loop
adc
cwtl
jp
pop
test
in
xchg
clc
icebp
sahf
jmp
icebp
ret
hlt
xchg
cs
int3
xor
test
push
sub
pusha
shll
aad
fistpll
ret
sbb
mov
ljmp
lock
shrb
inc
and
xor
mov
pop
leave
je
ret
push
mov
xor
mov
ret
jecxz
loopne
xlat
ljmp
mov
push
ret
lock
add
jo
jg
mov
jo
lret
xor
test
pop
je
and
push
pop
stc
adc
sbb
test
cmp
out
or
push
jns
call
sar
call
int
and
jnp
aam
std
outsb
add
and
pmulhw
imulb
xchg
jp
mov
aam
lods
arpl
xchg
dec
and
mov
cmp
in
out
ffree
and
xor
stos
adc
movsl
fistpll
or
mov
jnp
int3
lret
stc
sub
mov
dec
in
cltd
addl
aaa
bnd
mov
xor
dec
std
lcall
xor
insb
test
cmp
shlb
lcall
inc
sarb
leave
pop
pop
bound
mov
push
cmp
das
cld
dec
mov
jle
call
out
xor
jne
mov
xchg
imul
iret
test
xor
jge
xchg
rcl
or
push
cmp
addr16
push
jnp
mov
pushf
ljmp
mov
xor
nop
and
sbb
dec
clc
aas
xchg
out
iret
adcl
out
loope
jg
add
aas
jne
xchg
stc
and
lds
testb
lods
xlat
imul
and
mov
mov
rcrl
inc
shlb
jg
mov
push
cmp
nop
out
cmp
in
pop
fisttpl
pop
xchg
lahf
subb
mulb
pop
adc
pushl
ret
add
sti
jl
sub
mov
gs
or
into
and
jmp
ds
dec
cmp
push
rcr
mov
sbb
call
loope
lods
xchg
mov
inc
or
mov
and
add
mov
out
std
je
sbb
ljmp
pop
mov
lcall
mov
mov
or
adc
ja
fucomip
jmp
fwait
sub
push
hlt
add
push
dec
pop
call
add
push
mov
nop
push
push
les
scas
call
inc
xor
pushf
stc
jg
push
dec
ret
mov
sub
jecxz
lcall
pop
lahf
nop
pop
in
adc
adcl
cmp
xchg
xchg
fdivrs
jg
sbb
xchg
jb
jb
xchg
or
mov
xor
push
mov
jmp
sub
stos
mov
jp
fcoml
xor
push
mov
jno
jg
jecxz
enter
or
xor
inc
xchg
sub
add
push
push
add
sub
aad
in
or
jl
shl
add
faddl
mov
mov
into
sbb
das
aad
loopne
mov
sub
xchg
dec
ss
imul
jo
xor
jns
mov
rorl
test
mov
jae
in
mov
popfw
push
rorl
movsl
sbb
sbb
cmp
xor
jle
adc
ret
pop
fs
mov
or
outsl
ret
jne
jmp
mov
sbb
nop
jb
in
jp
imul
call
in
mov
call
inc
shlb
andb
dec
ljmp
inc
lcall
in
xchg
bnd
or
in
stc
lcall
loope
inc
popf
or
inc
bound
aad
xor
adc
movsb
mov
or
cld
bound
mov
push
movsl
push
adc
in
push
cld
lcall
mov
das
dec
mov
xchg
ss
push
jmp
decl
mov
xor
out
pop
mov
cmpsl
int3
ss
ljmp
cmpsl
jecxz
repnz
incb
outsb
out
fists
mov
push
das
fwait
mov
aad
push
jmp
and
popf
fists
sub
ror
loope
ljmp
mov
mov
jns
in
add
fildll
pop
fcompl
and
jmp
cmc
sarb
mov
lods
fdivrp
arpl
rcl
push
cmp
jne
jg
push
stc
out
jb
icebp
je
pusha
xchg
clc
mov
adc
xchg
imul
int3
xor
decl
stos
aad
and
mov
push
fs
mov
cli
push
cltd
mov
mov
fcoms
mov
stos
mov
mov
jne
movsl
cmp
cs
xchg
jmp
push
pushl
pop
insl
shlb
imul
mov
xor
pop
dec
sar
ljmp
mov
loop
inc
in
sub
clc
test
je
repnz
xor
push
stc
jg
or
adc
cmpsl
xchg
das
adc
pop
lahf
push
jl
lret
decl
out
mov
pop
mov
stos
pop
adc
jno
dec
push
loopne
jns
add
incl
sbb
pop
out
hlt
lea
fsubrs
xor
adcb
test
scas
js
mov
cmp
pop
cwtl
xchg
das
add
test
fsubrp
mov
roll
movsl
negw
mov
lret
decl
enter
pusha
or
out
sub
ljmp
inc
jbe
inc
rorl
sub
pop
add
arpl
inc
lret
cli
sbb
fistps
or
scas
movsl
int3
into
ret
pop
aaa
mov
push
stc
sbb
or
inc
xlat
or
enter
out
or
jg
outsl
dec
gs
repnz
adc
cltd
push
aaa
mov
sahf
in
cmp
incl
nop
jle
sti
adc
push
fcoml
xor
adc
xor
push
xorb
cli
arpl
clc
push
or
lahf
arpl
mov
cwtl
pushf
decl
jb
jns
cs
test
or
in
adc
test
loope
pop
cli
push
stc
jp
mov
mov
xchg
test
push
shlb
jbe
inc
clc
and
cmp
adc
jmp
xor
pop
pop
add
dec
push
mov
pop
xchg
add
js
in
dec
arpl
and
pop
pop
push
jl
sarb
scas
out
cmpsl
ds
insb
mov
jp
lcall
sub
mov
movsb
pop
movsl
ficoms
mov
fsubrs
stc
stc
push
and
pushl
push
xchg
sbb
idivl
jle
js
xchg
ret
filds
push
cltd
pop
push
cmp
repnz
jg
and
std
cmp
ljmp
cmp
mov
jmp
pusha
dec
fsubr
jecxz
sub
das
lret
jns
or
or
shlb
fcmovu
xor
into
pusha
jo
les
mov
jmp
push
adc
mov
or
fisttpll
ret
mov
ret
adc
ljmp
pop
pop
popa
jp
popf
repz
lea
insl
mov
pusha
mov
and
add
cmp
bound
cmpsb
push
pop
clc
scas
mov
das
push
test
dec
pop
sub
jp
inc
bound
and
stos
dec
mov
inc
cmp
ljmp
out
imul
stc
sti
enter
andb
call
sbb
sbb
fwait
jl
xchg
in
outsl
fsubr
jmp
loopne
push
and
push
push
shlb
andl
popf
divb
es
sahf
jns
add
cld
mov
push
cwtl
divb
mov
dec
cltd
fimull
enter
cmp
lcall
and
push
sbb
arpl
sbb
xchg
ret
subb
lcall
mov
js
pushf
sahf
adc
insb
xor
sbb
pop
add
push
or
call
loop
gs
inc
lods
imul
je
test
incl
xchg
push
push
push
xor
int3
add
add
sbb
xor
dec
or
dec
ror
jb
or
aaa
add
jmp
aam
inc
int3
test
cli
add
fimuls
data16
cltd
xchg
pop
std
mov
sahf
xchg
testl
ja
sub
xchg
int3
ds
lods
roll
jl
add
sbb
or
out
bound
and
mov
in
pop
jmp
sbb
mov
jns
mov
orb
mov
outsl
js
dec
xchg
decb
cmp
cmp
inc
xor
icebp
icebp
jns
cmp
lds
stos
fwait
dec
jmp
out
or
stos
push
xor
jg
pop
dec
in
xchg
dec
les
mov
scas
movsl
or
das
pushl
cmpsb
push
add
sub
leave
sub
data16
dec
into
mov
mov
je
fs
mov
lahf
faddp
mov
push
pop
aad
ljmp
clc
fmul
push
ret
dec
or
movsl
popa
push
and
pop
imul
lcall
ljmp
pop
or
xor
call
pushf
fsub
mov
test
hlt
call
mov
xchg
xchg
pop
dec
loopne
push
into
sub
mov
jmp
sbb
sub
je
push
inc
ja
mov
scas
mov
loop
fistpll
in
jbe
push
and
stc
cmp
jnp
jmp
pop
dec
push
test
sub
call
adc
pop
outsb
sti
adcb
dec
lds
leave
adc
in
stos
jmp
jne
adc
inc
and
sbb
dec
data16
sub
insb
movsb
fdivrl
jg
mov
adc
xor
aas
adc
mov
cli
sub
xchg
push
or
cmp
rol
cld
mov
pop
and
movb
mov
xchg
hlt
out
fs
push
stc
sub
insl
add
arpl
lcall
sub
push
ljmp
or
mov
stc
mov
stos
mov
hlt
ss
aad
inc
getsec
fs
jg
outsb
je
cs
push
fsubrl
add
push
jbe
pop
cmp
int3
sub
mov
push
inc
scas
mov
mov
out
cmp
pop
add
insl
sbb
fcmovb
test
call
mov
imul
clc
inc
mov
das
push
mov
dec
and
cmp
and
aaa
hlt
loop
fdivrs
out
jbe
clc
dec
outsl
icebp
fucomip
xor
ds
add
fucomip
call
stos
xchg
inc
popl
lods
sarb
or
xor
call
pushf
loopne
cmpsb
cmp
fiadds
mov
ljmp
and
shrl
fcmovnu
xor
data16
out
add
imull
add
sub
mov
xor
pop
movsl
stc
pop
fimuls
adc
push
lcall
cltd
lock
cmpsb
popa
mov
fidivs
inc
sbb
jle
jp
or
repz
sbb
repnz
push
mov
xor
int
cld
ja
adc
int3
inc
jmp
call
test
in
mov
push
and
shrb
int
out
add
sbb
enter
mov
jb
adc
arpl
cld
jmp
adc
popf
incl
incl
xor
push
inc
push
data16
dec
and
clc
mov
js
ljmp
popf
fcmovne
sub
xor
mov
ss
bound
test
xchg
mov
out
adc
dec
cld
incl
dec
jne
pushf
mov
movsl
shlb
adc
sub
mov
jg
push
repz
pop
rorb
cli
rcl
icebp
mov
xor
xorb
sahf
in
mov
jg
lcall
mov
adc
mov
ds
cli
std
mov
fiadds
xor
repz
ds
dec
out
iret
dec
test
pop
lock
aas
pop
ret
decl
outsl
repnz
push
popf
popl
aas
mov
test
pop
lret
loope
addb
pushl
mov
cmp
xchg
fistps
mov
xchg
icebp
xchg
aad
aas
clc
mov
cmp
mov
incl
cltd
nop
icebp
mov
out
xor
push
insb
sbbl
pop
dec
mov
jg
ljmp
in
fcompl
push
in
pusha
fucomp
arpl
scas
mov
movsl
sub
jge
cmp
jecxz
cmpsb
test
adc
lcall
rcl
mov
rorl
addr16
xor
inc
adc
ret
lods
cmc
adc
jmp
mov
mov
jae
popa
xchg
xor
jg
jg
icebp
bound
repnz
clc
dec
cld
fildl
fcoms
clc
push
mov
sub
sub
push
ss
cmpsl
incl
sub
fdivp
add
xor
mov
mov
push
das
lahf
outsl
pop
call
sbb
jns
loopne
js
aam
fs
add
sub
pusha
cmp
and
inc
mov
movsl
test
pushl
pop
jne
mull
pop
ljmp
jg
rcrl
mov
lock
ljmp
xchg
aam
out
pop
fdivr
pop
jae
push
fcoml
lds
sub
mov
rcrl
cmpsl
xor
test
decl
lret
fdivrs
push
and
mov
jnp
jb
pop
add
push
ljmp
jb
out
scas
sub
dec
mov
jle
sub
into
mov
cmp
lcall
or
enter
cmp
mov
mov
mov
popf
aas
ret
jg
in
fwait
gs
jp
pop
mov
adc
push
mov
sub
mov
and
mov
cmp
adc
jg
stos
mov
mov
adcl
jle
lahf
lods
inc
clc
ret
lds
jns
call
add
mov
ja
out
mov
clc
push
sub
aad
in
jg
jmp
xchg
daa
mov
out
dec
inc
jo
and
gs
xor
cmpsb
mov
popf
xor
and
aaa
sbb
mov
mov
popf
idivb
mov
pop
pop
ds
stos
sub
add
xchg
in
push
loopne
fadd
mov
dec
sub
decl
mov
jmp
pop
test
jg
fisttps
sti
and
dec
push
dec
imul
mov
stos
mov
mov
test
cmp
test
cs
add
mov
fisubrs
fidivrl
in
or
dec
insl
rclb
inc
jle
loope
xor
cmc
mov
pusha
sahf
clc
das
icebp
das
icebp
and
adc
cmp
jb
pop
es
push
jbe
or
std
mov
or
inc
ljmp
jle
mov
mov
decb
icebp
and
sti
shll
inc
dec
pop
frstor
xchg
lds
popf
pop
in
rcl
and
nop
mov
mov
xchg
mov
and
loope
lahf
push
jg
loopne
aam
lods
je
ret
popa
or
adc
addl
mov
push
push
dec
ljmp
lock
test
xor
fisttpll
scas
fldcw
push
jl
pop
cmp
jnp
inc
aam
mov
xchg
push
icebp
aas
sbb
pop
mov
mov
adc
lcall
or
sub
orl
or
push
cmp
in
push
leave
lret
mov
add
mov
inc
clc
fwait
cs
movsb
pop
filds
sbb
into
in
iret
jge
incl
fiadds
xchg
sub
push
dec
leave
in
jno
iret
stos
rcrl
and
ljmp
add
mov
and
jo
stc
repnz
movsl
mov
mov
out
out
and
ljmp
aaa
dec
mov
lods
sbb
in
xchg
mov
mov
pop
pop
dec
push
cmp
icebp
sbb
outsl
mov
imul
mov
call
dec
and
test
stos
out
jl
mov
or
fbld
and
pop
aad
mov
xchg
or
sub
loop
shrb
mov
xchg
mov
fpatan
adc
xor
clc
lcall
ljmp
inc
nop
cli
lret
sbb
or
decl
pushf
test
jmpw
jbe
mov
mov
lret
mov
loopne
mov
adc
push
stos
scas
xlat
outsl
jns
je
mov
adcb
mov
inc
sub
mov
idivl
je
subb
adc
iret
sub
clc
lcall
xor
sbb
fnstcw
ss
lret
sub
xor
mov
fdivs
xor
cmpsl
push
ja
dec
cwtl
dec
lea
inc
and
in
data16
ret
mov
mov
xchg
dec
rclb
or
push
js
hlt
inc
out
sub
mov
mov
arpl
push
stos
jns
ret
and
movsb
mov
std
and
inc
push
or
loopne
aad
mov
ljmp
leave
push
repnz
adc
push
mov
add
mov
fadds
push
fsubr
cmp
int3
push
in
jge
push
push
cmp
lret
lcall
cmpsl
out
sahf
xor
inc
call
sub
mov
stos
fidivrs
cmpsl
andnps
pop
mov
scas
lcall
loope
mov
xchg
repz
sahf
sbb
repnz
aaa
sub
xor
pop
inc
loopne
push
mov
decl
mov
pushf
xor
add
dec
push
dec
rcrl
xchg
insb
cltd
and
ds
out
fucomip
call
pusha
jb
ret
clc
inc
shl
imul
or
jle
jle
jb
mov
push
mov
jmp
outsl
pop
sub
mov
xchg
mov
test
lods
or
push
test
shlb
addl
jecxz
loope
or
jb
fildl
andw
insl
fs
pop
mov
add
push
or
ljmp
push
inc
stos
andb
dec
xchg
inc
cmp
add
pop
pop
ljmp
out
cltd
cmp
push
or
xor
shll
das
cld
push
cmp
sub
mov
jne
sar
mov
mov
cltd
xlat
cmpsb
ret
aas
or
scas
pop
sub
pusha
jnp
lea
fisubrs
xchg
xchg
xchg
rorb
dec
rol
loop
rorl
shl
incl
shll
mov
fcoms
aad
inc
dec
sbb
jp
pop
xchg
jp
ljmp
icebp
push
js
cmpsb
jecxz
in
inc
ret
jg
pop
testb
fmul
cmp
mov
add
aad
aaa
pusha
ljmp
lcall
mov
xchg
mov
cli
dec
sub
pop
jmp
repz
push
xchg
cld
incl
rol
or
fldenv
data16
jno
and
cld
lcall
fcmovnbe
ficomps
test
loope
mov
add
das
jo
fsubr
das
and
jno
xor
dec
sbb
lods
decl
dec
stos
es
mov
cmp
and
add
mov
mov
insb
xchg
invd
sbb
es
aam
rcrb
incl
cltd
push
sbb
dec
inc
lods
fcoms
ss
test
jg
push
inc
add
arpl
pop
mov
scas
adc
pop
xor
icebp
aaa
mov
inc
aas
mov
push
or
mov
int3
mov
adc
xchg
jg
stos
aam
jae
xchg
lcall
jne
fidivrs
into
mov
leave
test
lea
push
icebp
jns
sub
mov
outsl
std
or
mov
add
mov
mov
lahf
push
ljmp
jecxz
int3
mov
idiv
adc
pop
add
jne
mov
lods
pop
in
imul
orb
jmp
mov
addb
jne
icebp
mov
jno
mov
mov
mov
adc
mov
imul
xchg
xchg
cmp
jae
fsubrs
push
inc
mov
imul
icebp
xchg
popl
sbb
lock
jg
xchg
fwait
add
pop
frstor
push
adc
sbb
sub
jbe
pop
xor
call
std
hlt
es
decl
outsl
int3
lret
and
cld
mov
ss
xor
daa
sub
icebp
aad
lock
jl
jge
sub
sbb
aam
insb
lods
push
mov
idiv
cltd
in
cs
and
sarl
lock
jbe
push
loope
test
mov
outsb
into
or
dec
mov
lcall
in
aaa
xlat
and
xlat
scas
gs
movsb
inc
pop
test
ljmp
xchg
jmp
adc
pop
sbb
incl
scas
filds
lods
or
jae
cld
test
jne
lcall
xor
test
mov
cmp
or
rorb
mov
sub
inc
inc
cmp
cli
sbb
out
and
decl
decl
daa
dec
shlb
jno
push
cs
mov
fidivrs
jg
decl
imul
sub
mov
cmp
ljmp
in
add
dec
pop
or
rolb
push
xor
cwtl
cwtl
inc
std
pushl
sbb
gs
cmpsb
add
aam
jge
mov
pop
out
push
fsubrl
mov
jo
pop
or
xor
repnz
push
out
pushf
or
daa
xchg
lcall
mov
lds
lcall
call
arpl
imul
sbb
sbb
push
adc
enter
clc
xchg
and
and
mov
pushf
ljmp
mov
popa
stc
inc
jne
xor
mov
jl
sub
jl
push
inc
mov
das
jne
inc
clc
imul
adc
dec
mov
es
es
ficoms
ss
movsl
fsubrl
ss
paddd
decl
notl
arpl
pop
jecxz
add
sub
cmp
adc
ljmp
xor
insl
je
dec
sub
in
xchg
xor
jecxz
out
int3
rclb
lcall
mov
pop
add
xchg
lcall
std
ljmp
push
pop
psubsw
jo
aaa
or
mov
mov
push
cmp
ljmp
xor
cli
cmp
test
fucomip
ljmp
fwait
data16
sbbl
mov
ljmp
xchg
clc
ret
fcoms
mov
mov
int3
dec
and
pushl
sub
pop
out
pop
add
pop
arpl
inc
inc
and
xlat
pop
cltd
loop
sar
or
sbb
cli
jg
or
push
addr16
sti
cmp
push
fbstp
mov
cmp
cmp
and
stc
xor
iret
pop
push
js
pop
cli
dec
mov
fisubs
adc
jns
es
mov
cmc
jno
fdivr
incl
aaa
scas
xchg
dec
clc
push
idivb
push
idivb
stos
addb
jne
mov
icebp
or
xor
push
mov
faddl
pop
adc
or
loopne
push
inc
cld
cli
cmp
js
sbb
cmp
pushf
cmc
pushl
pop
leave
dec
jbe
ljmp
arpl
xor
fscale
ljmp
pushf
push
inc
stc
fsubrs
addr16
imul
icebp
mov
lock
insl
mov
cmp
mov
movsl
out
or
movsl
inc
in
iret
lret
sahf
jnp
xchg
in
roll
call
sbb
out
xor
fimuls
fstpt
push
adc
lea
incl
mov
xor
cmpsb
xor
clc
aaa
push
shrl
xor
ljmp
aam
aaa
pop
adc
xor
inc
mov
add
dec
mov
or
in
lods
jg
out
pushf
sbb
mov
into
imul
jg
in
std
or
ljmp
push
add
rcll
aas
jne
add
jg
movsl
mov
int
mov
lods
mov
into
add
jo
or
jmp
or
push
xchg
add
das
cmp
decl
loopne
out
mov
cmc
push
mov
test
std
or
cmc
scas
cmc
ljmp
hlt
les
pop
scas
xlat
pop
clc
inc
fisubrs
and
mov
adc
inc
in
movsb
das
pusha
in
mov
or
fbld
int3
jno
jo
lret
cmp
incl
add
aaa
jmp
inc
pop
mov
cld
ljmp
add
xor
sarl
pushl
jmp
inc
dec
push
push
xchg
cltd
out
mov
popf
push
push
outsb
loop
je
ljmp
iret
sub
dec
test
inc
popf
into
xor
mov
inc
jp
call
xchg
in
fwait
push
and
adc
stc
xor
or
nop
jg
call
mov
sbb
int
insb
sub
int
xchg
shll
adc
adc
pushl
pop
xchg
jne
out
inc
nop
mov
loope
mov
dec
out
jg
add
movsl
or
clc
in
aaa
cwtl
arpl
loope
lods
aas
fcmove
mov
add
lods
decb
mov
sub
jp
leave
adc
ljmp
arpl
jp
jge
aam
cmp
outsb
daa
in
mov
cmp
stc
rclb
test
pusha
fsubp
inc
push
push
push
pushl
in
mov
jne
fcom
in
sub
mov
imul
pop
xlat
incl
pushf
aad
in
mov
shlb
add
mov
cmpb
and
roll
push
in
sbb
cs
cli
mov
mov
jns
sub
into
jb
or
mov
add
jb
mov
dec
loope
adc
sbb
or
adc
sahf
cmp
xchg
ss
repnz
negb
ret
lods
sub
xlat
test
loopne
jge
and
mov
xchg
xchg
ja
xor
jo
jmp
inc
inc
into
pushl
fs
fcmovnb
int
push
das
fdivrl
sbb
push
ds
cli
fdivs
mov
decl
jmp
sub
mov
jecxz
shlb
fnstcw
pop
in
testb
js
mov
pusha
push
leave
push
jecxz
jecxz
inc
decl
xorb
mov
xchg
jge
jo
sar
lods
jg
inc
push
fbstp
mov
pushf
add
xor
rcl
or
lret
dec
iret
mov
sbb
xchg
mov
stc
dec
jl
mov
rclb
ljmp
sbb
adc
and
mov
bound
or
lcall
cmpsb
adc
sbb
mov
sbb
out
xor
push
mov
mov
pop
cli
jnp
and
imul
fs
jnp
push
sarb
push
xchg
insb
xchg
mov
lret
call
inc
out
add
std
add
mov
fcmove
push
mov
test
ja
mov
fcmovnu
test
jg
jmp
mov
push
out
outsl
cmp
lods
add
lret
cmc
cmp
xchg
mov
jg
push
mov
lds
dec
push
cwtl
int3
xor
push
hlt
cltd
fbld
ljmp
cmp
jp
inc
iret
cmp
lock
mov
lahf
mov
sub
sbb
movsl
pushl
or
inc
test
jne
cmp
lret
sub
and
jecxz
cmp
mov
lcall
js
call
repnz
xchg
xor
sbb
outsl
test
pop
pushl
sub
pop
push
bound
sub
sbb
lods
inc
aas
lea
dec
shl
incl
add
mov
adc
loope
and
das
jo
int
mov
repz
sar
lods
push
out
jle
shll
push
push
fnstcw
adc
inc
sbb
cmp
rorb
mov
std
jg
mov
adc
mov
add
push
xchg
bound
lcall
test
out
adc
lahf
movsb
jge
sbb
mov
push
mov
mov
xor
bound
inc
lods
test
in
and
ljmp
fs
xlat
scas
je
pop
imul
je
xor
fwait
pushl
add
mov
dec
imul
decl
sub
mov
or
sahf
mov
incb
push
fldcw
leave
in
hlt
jmp
subl
inc
in
xor
push
ret
mov
jle
push
test
inc
mov
push
sbb
insl
mov
mov
cmp
jo
bnd
add
pop
mov
add
shr
mov
sahf
cltd
or
out
scas
imul
out
and
fnstsw
sbb
jno
mov
mov
pop
outsl
int
inc
lods
xchg
cmp
lock
shll
loopne
lods
jnp
mov
fsubl
movsb
test
inc
mov
add
jp
inc
das
jnp
mov
add
jle
lret
xchg
mov
aam
pop
cltd
dec
outsl
std
lcall
adc
push
mov
push
out
fadds
jl
in
lods
ljmp
incl
cmpsb
jae
jecxz
pop
popf
stc
enter
cmpsl
or
bound
loopne
adc
add
out
push
add
cs
in
movsl
mov
adc
push
pushl
cmpsb
out
xor
test
test
xchg
mov
stos
ljmp
or
notl
pop
jge
xor
ljmp
fucom
push
adc
xor
mov
mov
inc
lcall
mov
sbb
aaa
daa
movsb
xor
push
sub
push
ss
shll
stc
frstor
mov
jg
in
lds
mov
daa
fbstp
out
mov
push
jmp
push
sbb
repnz
loopne
mov
jp
test
clc
fcompl
mov
stc
cmp
scas
imul
pop
and
push
pop
pop
add
call
xchg
mov
shr
pop
call
out
pop
stos
sarl
sub
in
aad
hlt
pop
jmp
pop
fnsave
xchg
mov
and
scas
xchg
jbe
and
or
inc
pop
cmp
je
jae
xchg
or
call
mov
call
outsb
fdiv
mov
push
pop
dec
fsub
and
cwtl
xchg
cli
jg
xor
fdivrp
adc
scas
stos
stos
inc
pop
jbe
xor
mov
call
xchg
loop
xor
mov
out
inc
imul
test
mov
pushl
mov
js
and
les
or
xchg
push
aaa
clc
decl
inc
cltd
cmp
xor
jmp
sub
mov
add
dec
loop
ljmp
cmp
pop
mov
ss
in
lods
pshufw
decl
dec
sub
mov
rol
push
mov
repnz
decl
ja
popa
incl
jns
movsl
rcrl
and
mov
sar
cmc
mov
jle
shl
std
jmp
out
xchg
and
loop
fisttpl
shll
jae
sbb
adc
repnz
mov
sub
hlt
loopne
das
lock
xchg
mov
aad
aam
stc
mov
clc
das
push
pop
into
jmp
scas
mov
sbb
pop
test
outsl
fadd
sti
xchg
stos
es
imul
mov
in
mov
arpl
jno
test
inc
mov
lcall
jnp
dec
icebp
in
adc
xchg
mov
inc
cltd
push
aam
jne
ljmp
cmp
mov
out
movsb
xchg
pop
and
adc
data16
lret
mov
lock
sahf
lods
cmpsb
dec
and
popa
test
cmp
add
cmpsl
xor
xor
sub
negb
fldl
jle
mov
and
movsl
lcall
iret
das
jo
clc
adc
and
cs
jecxz
ret
fiaddl
stos
scas
mov
adc
imul
sti
ljmp
std
jecxz
iret
lock
js
je
mov
jge
jle
jp
es
ja
jmp
inc
cs
push
lcall
dec
fnstenv
call
push
shrl
sbb
dec
lret
xchg
mov
add
and
jle
ljmp
pop
mov
in
fadds
mov
jmp
fistps
sbb
mov
icebp
dec
outsl
cltd
je
cmc
or
sub
pop
sti
push
mov
jo
pop
out
int3
mov
cmp
or
jo
leave
or
jg
cli
jne
pop
xor
sti
push
xchg
inc
outsb
adc
std
addr16
movsl
add
push
imul
test
pushl
fst
cld
jbe
pop
jl
roll
int3
stos
xor
rolb
out
clc
decl
mov
dec
jno
fwait
mov
std
test
adc
and
inc
dec
cli
mov
incl
sbb
cld
enter
push
fwait
leave
sub
add
pop
gs
xor
dec
xchg
mov
dec
fiadds
into
fdiv
cs
adc
and
jg
out
shr
data16
andb
fwait
out
shrb
or
fildl
jg
pop
or
pop
adc
jbe
repz
ja
add
sbb
inc
or
test
cs
frstor
cld
mov
inc
push
sub
lods
and
fimull
sti
call
push
or
or
pop
sub
aas
shlb
and
or
fucomip
or
sarb
lds
sbb
pop
and
std
repz
outsl
cmc
fnstenv
and
and
clc
jg
or
sbb
psraw
push
add
xlat
std
dec
cld
decl
push
inc
call
mov
lahf
pop
adc
jg
das
out
adc
cmp
jp
push
add
adc
mov
lock
sbb
test
add
scas
mov
incl
mov
pop
jo
xor
sbb
xor
or
push
and
cmpb
xor
shr
push
pop
jae
mov
jmp
mov
cmpsb
in
call
shl
sbb
mov
jae
mov
aam
stos
xlat
or
fildll
fs
mov
sub
stos
jle
fbld
clc
fisttpl
or
mov
cmpsb
mov
mov
test
sar
fistpll
and
loopne
pop
mov
cmp
lock
xchg
xchg
pop
or
cmc
sub
xchg
xchg
mov
and
daa
cli
pop
xchg
fimull
pop
gs
push
ljmp
in
jmp
inc
push
call
push
imul
mov
pop
movsb
js
pop
out
jo
dec
aaa
push
or
or
jle
cld
cld
and
mov
decl
sub
dec
std
test
push
mov
pusha
orb
and
stos
movsb
scas
rorl
pop
sbb
ljmp
xchg
popf
add
push
into
outsl
dec
cmp
pop
push
jne
mov
adc
fbstp
sub
pop
enter
aas
mov
lods
sub
mov
push
loope
jbe
stc
add
xchg
rorb
dec
jmp
ljmp
scas
movsl
xchg
cmc
ror
and
xor
jb
dec
push
xchg
xchg
dec
xor
sub
movsl
ja
lcall
icebp
ss
lahf
lds
xchg
scas
lods
retw
addl
sbb
pop
and
ljmp
das
add
push
in
daa
lods
cmpsl
pop
xchg
sub
ja
mov
jl
es
inc
lcall
or
jns
enter
pop
mov
into
or
and
imul
pushl
xchg
xor
add
cmc
pop
push
push
sub
ret
xchg
inc
sub
jg
inc
sub
and
or
rorl
jecxz
push
inc
xchg
adc
cs
mov
loopne
incl
inc
out
lods
rcrl
int
add
mov
pop
je
std
fbld
lahf
push
pop
aas
daa
sbb
or
xchg
push
je
incl
lock
or
jmp
cmpsb
fnstcw
aad
sub
cmp
inc
rcrb
jg
lcall
push
mov
fisubs
sub
mov
mov
jge
scas
lods
sub
push
push
mov
cmp
imul
xchg
cli
mov
and
mov
sarl
call
mov
add
mov
cmc
inc
aaa
loop
lods
fists
test
leave
cmp
jg
xchg
jl
adc
mov
test
cmp
mov
dec
push
lds
out
pop
std
incl
inc
cmp
fdivs
adc
and
mov
shll
rol
insb
fists
mov
jecxz
incb
ljmp
loopne
rcr
inc
test
mov
fmull
push
notb
pop
xor
decl
inc
rcll
xor
mov
xchg
dec
stc
dec
adc
pop
nop
cs
aas
je
xchg
jmp
leave
ret
ret
rcll
mov
lahf
cmp
or
decl
aas
xor
ljmp
inc
xchg
jle
jg
dec
jg
nop
sbb
fdivrl
rorl
test
mov
call
decb
rorl
in
icebp
sti
sub
cmp
jo
adc
sub
jg
imul
xchg
out
daa
stos
jns
decl
push
std
shll
dec
inc
or
cmp
call
pop
mov
mov
mov
fists
jbe
hlt
dec
pop
cmp
xor
pop
aam
add
mov
mov
nop
adc
or
jp
mov
call
out
jge
add
jmp
dec
push
mov
jmp
lock
mov
and
sub
repz
sbb
jmp
pusha
jge
inc
jp
xor
popa
jno
ja
pop
inc
mov
mov
xchg
adc
cli
dec
sbb
add
xchg
enter
push
gs
push
xor
pop
jae
adc
dec
das
mov
mov
sub
pop
or
std
call
pusha
jbe
and
sahf
cmp
in
cmpsb
dec
ljmp
jb
xchg
lea
mov
pop
dec
add
mov
fsubs
mov
int3
gs
cmc
jg
incl
test
pop
imul
dec
push
mov
ljmp
lea
hlt
push
sbb
xchg
sub
or
adc
call
mov
sub
scas
into
aaa
pushf
xchg
call
clc
mov
mov
ss
mov
cli
mov
xchg
sbb
push
pop
loop
insl
pop
adc
call
cmp
icebp
lock
xchg
ret
dec
mov
mov
icebp
jg
dec
jge
xchg
in
ror
xchg
mov
bswap
stc
jmp
inc
xor
ljmp
mov
xlat
insl
pop
and
and
sub
jnp
push
mov
decl
jl
jo
scas
mov
aas
jmp
decb
mov
xchg
mov
push
jle
or
popa
and
or
inc
pop
cwtl
pusha
and
push
aam
inc
rcrl
lods
insl
fs
cli
ret
or
mov
mov
aas
lods
mov
je
lcall
lds
repnz
add
sub
lea
rclb
cld
aas
mov
cmp
pushl
cltd
dec
sub
popf
push
dec
idivb
xor
shrb
cwtl
inc
testl
mov
lret
xchg
lock
mov
cld
mulb
sti
mov
aam
clc
in
div
js
push
scas
add
out
push
les
call
or
pop
cmpsb
add
cltd
in
dec
pop
push
push
fs
pop
outsb
out
jl
dec
push
mov
icebp
jmp
sub
ret
cmp
loope
xchg
jmp
js
or
push
movsb
pop
ljmp
cli
and
inc
dec
dec
insb
sbb
insl
jl
jp
mov
lret
jl
dec
dec
sbb
xor
jg
xchg
or
fistps
sub
push
adc
jle
xor
jbe
adc
lahf
jg
cmpsb
movsl
xchg
fcoml
push
ret
and
aas
ret
mov
call
xor
push
inc
ficoms
sub
adc
test
rcrb
andl
inc
mov
push
mov
push
outsl
lcall
jmp
loope
mov
fstps
jns,pn
testb
insb
pop
fidivl
xlat
nop
mov
cmp
fidivl
aad
nop
push
jp,pn
inc
pusha
xchg
mov
das
mov
daa
test
cmp
add
jbe
sarb
pop
aad
cmpsl
dec
lcall
cld
movsl
fs
dec
insl
fs
adc
cmp
call
in
inc
lds
xchg
xchg
jo
cmp
push
clc
decl
jae
dec
les
inc
cwtl
inc
aas
dec
sbb
mov
mov
mov
in
mov
hlt
aaa
adc
js
pop
or
mov
stos
mov
aam
xlat
xchg
sub
dec
add
fstpt
adc
pop
incl
push
xchg
aas
cmp
scas
xchg
mov
adc
cmp
gs
xchg
rep
out
xor
mov
lock
out
dec
fsubrs
pop
aad
repz
xchg
ror
or
decl
add
enter
mov
and
and
jae
fildll
test
mov
and
repnz
ljmp
or
arpl
jmp
mov
adc
dec
int
push
xor
shlb
pop
push
inc
push
cmc
inc
call
aaa
fdivrl
inc
mov
pusha
lcall
imul
push
ja
mov
push
sbb
pop
out
sbb
stc
test
mov
jbe
mov
lret
js
fldt
xor
pushf
add
xchg
pop
enter
pop
adc
in
clc
std
call
decl
out
mov
mov
in
xor
dec
fnstsw
mov
roll
fisubrs
mov
cltd
aam
pushf
decl
add
mov
pop
hlt
rcll
mov
xor
call
out
divl
fwait
mov
stc
xchg
sub
ret
jge
lcall
in
push
adc
sbb
and
sbb
in
cmpsb
insl
mov
fsubs
pushl
mov
push
cmpsb
loope
jecxz
xchg
mov
lcall
lcall
mov
ja
outsb
scas
jb
aam
and
ret
pop
stos
in
push
addr16
dec
sar
pop
jle
and
push
pop
data16
jmp
jg
in
sbb
inc
inc
inc
mov
mov
cmp
data16
jnp
jl
mov
push
cmp
sbb
push
js
clc
iret
jg
and
sbb
decl
xchg
jno
loopne
lahf
loopne
pop
mov
mov
push
test
mov
decl
cmc
pop
jp
mov
mov
cmp
xchg
movsb
add
mov
test
iret
je
mov
ljmp
incl
cmc
stos
in
aad
xchg
push
inc
cmc
insl
jge
mov
mov
popf
out
pop
fsubp
inc
decl
cld
mov
inc
add
fsts
cmpsl
inc
fwait
call
sbb
dec
arpl
and
jo
dec
inc
mov
mov
ljmp
adc
dec
into
pop
and
inc
cmpsl
out
xor
jo
repz
jmp
mov
push
pop
pop
xchg
mov
lcall
sub
jns
cld
inc
pushl
inc
in
mov
hlt
je
lret
adc
fucomip
inc
int
mov
and
adc
push
sub
sbb
call
add
xchg
movsl
mov
ds
jns
adc
and
out
cmp
sbb
stc
pop
pop
inc
test
fs
lock
outsl
cmp
decl
cltd
lahf
sub
pusha
in
and
push
dec
decb
cmc
mov
pop
push
cmp
fmul
cmp
xor
push
shll
scas
mov
outsl
pusha
jp
mov
in
popf
pusha
lcall
mov
nop
jb
out
pop
sbb
call
cmp
fisttpll
sub
popf
enter
daa
testl
jo
out
mov
out
lods
imul
or
movb
pop
pop
ds
mov
lret
es
das
push
jbe
scas
mov
iret
aas
mov
ret
and
jnp
insl
js
mov
pusha
inc
test
xchg
jb
mov
decl
std
call
sub
aaa
or
stos
jmp
push
jmp
imul
pop
inc
jp
mov
mov
test
dec
test
adc
stos
sbb
outsl
pushl
inc
add
arpl
repnz
inc
xchg
push
mov
mov
in
je
test
push
mov
mov
cwtl
in
mov
incl
pop
mov
and
xlat
pushf
xorb
or
xchg
clc
pop
or
sub
dec
mov
add
pop
scas
push
cmpsb
jnp
dec
push
mov
int3
fldt
pop
outsb
jp
xchg
loop
jno
cltd
jnp
outsb
movb
mov
jp
mov
inc
rol
call
mov
orb
mov
sbbl
insl
sub
pop
std
mov
cmp
cs
mov
adc
sub
xor
inc
push
lcall
fists
movsb
inc
and
ja
rcrb
push
mov
jg
aad
inc
fwait
pop
out
dec
pop
movsb
xor
sbb
movsl
shrb
cmp
ds
inc
call
add
arpl
push
pminsw
scas
xor
outsl
cmc
jmp
scas
js
outsb
dec
mov
sti
iret
scas
scas
out
adc
call
cli
pushl
jecxz
out
divl
dec
inc
dec
or
sub
aam
sbb
dec
lods
fisttpll
pop
mov
into
push
scas
mov
lock
jne
sbb
decl
call
and
sti
mov
js
jl
mov
stos
out
jg
or
fidivrs
inc
call
aad
pop
push
dec
loop
cli
inc
cmpsl
sub
sub
pop
mov
jae
sar
sbb
xchg
movsl
loop
mov
pop
loop
mov
dec
in
jmp
xchg
mov
add
push
pop
cmpsb
push
fnstsw
decl
adc
jb
ss
repz
jg
fs
sar
ljmp
add
fnstcw
cld
push
jle
jae
outsl
insb
jl
sub
xchg
lcall
pushl
mov
cmp
je
mulb
pop
stos
or
out
call
mov
dec
xchg
sub
lahf
lcall
mov
fwait
inc
and
icebp
shrb
mov
push
mov
lahf
cmp
fs
push
loope
and
incl
into
imul
ret
dec
out
and
jb
lods
xchg
add
or
ljmp
push
lods
pop
cmp
push
fisubs
xor
mov
mov
cmpsb
aam
jb
outsb
jae
stc
insb
lock
adc
lcall
inc
xor
pop
and
xor
pop
lahf
int3
jmp
pusha
xor
loop
rcrb
cld
pop
jecxz
mov
roll
cs
pop
fsubr
jecxz
add
aas
dec
sub
gs
or
ljmp
sbb
addr16
and
es
pop
xlat
cld
push
mull
incl
clc
lods
arpl
mull
adc
pop
mov
andps
outsb
addb
mov
push
xchg
call
call
int
mov
mov
out
scas
add
fistl
test
in
inc
mov
les
and
sbb
and
jg
ljmp
aam
mov
ret
cld
in
fdiv
inc
das
mov
sub
jmp
inc
inc
push
fmuls
mov
insb
call
data16
fs
xchg
sahf
data16
cmp
jge
push
cli
jbe
cmp
mov
cmc
mov
add
cmp
repnz
mov
enter
inc
in
jmp
sbb
pop
imul
repnz
cmp
repz
xchg
stos
or
divl
ds
cld
lret
in
insl
xchg
call
adc
addr16
push
sub
fstps
push
cmp
xchg
inc
in
mov
xlat
ss
fadds
jb
add
jmp
decl
pop
sub
clc
sub
test
fstps
push
ljmp
mov
adc
pop
pop
lods
into
inc
pop
popf
mov
sti
stc
sarl
adc
cmp
sub
lea
loopne
and
in
aaa
mov
pop
inc
mov
xchg
push
or
mov
pop
ljmp
lock
xchg
vunpckhps
test
sbb
dec
testb
push
negb
sub
in
jmp
dec
lahf
pushl
pop
addl
ljmp
incl
std
push
sub
lcall
fwait
mov
sbb
cmpsb
xchg
fs
mov
pop
leave
psadbw
inc
lods
xchg
push
incl
loopne
jb
sti
cld
popa
fwait
push
xor
sbb
sarb
insl
lahf
inc
adc
mov
mov
inc
lret
inc
jno
sar
ret
mov
xor
pop
repz
xchg
ljmp
push
fsubs
xchg
sarl
inc
sbb
stos
jbe
out
sub
incl
stos
add
cmp
fidivl
out
push
mov
pop
push
dec
and
in
jecxz
fcomp
les
inc
lods
icebp
outsb
rcrl
jb
loop
push
jg
out
push
xor
test
daa
jp
mov
sbb
xor
pushl
subb
mov
push
jg
out
cmp
and
andb
ljmp
test
nop
jge
mov
mov
cmpsl
mov
repnz
sar
ljmp
fldenv
loopne
adc
and
xchg
sub
js
mov
pushf
sti
mov
mov
gs
xchg
pop
jge
negl
sti
imul
lds
fwait
pop
mov
fsubrs
pop
jg
je
xchg
sub
jno
incl
adc
mov
pop
xchg
es
mov
sub
push
fstpl
movzbl
inc
in
inc
nop
sbb
jbe
cmp
mov
mov
cli
out
inc
mov
daa
movsb
shll
aas
sub
ljmp
std
pop
lea
jns
mov
push
inc
jae
imul
sbb
outsl
icebp
sti
or
jle
test
adc
decl
xchg
movsl
adc
and
lret
add
sub
mov
out
dec
scas
xchg
ret
jge
pop
cmpsl
sbb
scas
xor
inc
lcall
dec
negb
jl
jae
lods
add
repz
adc
std
cmpsb
jmp
mov
add
lds
sti
outsl
hlt
jo
into
xor
mov
jno
loop
cld
stc
in
mov
ss
clc
cmp
cld
cmp
lea
push
test
jmp
aaa
pop
fisttps
jmp
ljmp
stc
lds
ja
imul
dec
mov
cs
add
int
mov
aaa
call
cmpsb
mov
test
sub
adc
enter
xor
cmc
lea
decl
pop
mov
jge
bound
sbb
insl
aad
add
mov
movsb
hlt
lcall
sti
outsb
dec
in
jl
aas
in
and
loope
xchg
push
or
jg
outsl
cmpsl
pop
and
cmp
xor
mov
cmp
pop
or
ljmp
cwtl
fs
imul
jecxz
pop
adcb
sub
imul
add
fucomip
mov
out
sbb
add
fstpt
inc
xor
loopne
pushf
lcall
in
dec
pop
add
xor
jmp
fwait
je
rcll
and
push
outsl
jge
rorb
push
stc
inc
push
inc
pop
lret
push
fwait
test
or
pop
bound
pop
das
ss
pop
js
test
and
das
std
lcall
mov
xor
xchg
lret
and
mov
mov
jg
outsl
int
cwtl
sub
or
out
iret
clc
inc
incl
pop
outsl
push
add
add
jnp
lret
jg
call
jge
test
stos
xchg
pmulhuw
sub
call
sbb
push
repnz
rorl
and
sar
decl
pop
fstl
test
repz
mov
incb
mov
mov
jns
in
outsb
out
fildl
push
xchg
dec
sub
movsl
pop
jl
leave
leave
or
imul
cmpsl
insl
cmpsb
and
pop
ljmp
stos
cmp
popf
hlt
mov
daa
lahf
rorb
aad
adc
in
xchg
add
jmp
hlt
aam
xor
push
leave
arpl
cmp
pusha
mov
out
test
incl
cmovp
les
shrb
ljmp
pop
mov
sbb
inc
inc
dec
hlt
pop
int
mov
push
and
testb
mov
stos
mov
sbb
xchg
out
das
and
xchg
jbe
pop
push
loopne
push
shll
xchg
call
sub
pusha
mov
mov
fldt
jecxz
test
lods
lods
lahf
fcoms
mov
jg
fucomip
aad
lcall
lahf
hlt
neg
je
jle
insb
daa
inc
loopne
or
and
movsl
into
in
rorl
scas
movsb
mov
inc
mov
in
jg
call
lss
in
cmp
sti
cmp
push
call
or
popf
push
push
mov
not
lods
aaa
divl
mov
xchg
push
test
xor
sbb
mov
inc
or
jg
adc
mov
call
in
out
jl
cmc
incl
and
loope
nop
xorb
fneni(8087
outsb
loope
inc
jb
sbb
jecxz
shr
hlt
xchg
xor
fstpt
mov
pushf
mov
mov
shll
cmp
adc
dec
mov
ljmp
push
rcrl
or
jne
into
inc
cmpsb
inc
jl
xor
sti
jb
xchg
sbb
adc
test
inc
enter
ljmp
dec
fisubrs
dec
xor
cli
mov
and
dec
stos
nop
pop
outsb
ficoml
jge
or
xlat
inc
adc
mov
call
cltd
cld
push
stos
push
inc
mov
jmp
and
arpl
stos
lods
jmp
lea
pop
cmp
push
fisubs
clc
es
sar
std
call
sbb
rolb
imul
popf
xchg
mov
fwait
dec
jle
mov
push
adc
mov
repz
add
cli
mov
push
scas
into
mov
fistpl
loop
scas
adc
cmpsl
scas
mov
jg
cmp
add
icebp
jecxz
mov
jb
push
cltd
movsb
lret
lcall
ss
test
jl
leave
pusha
dec
loopne
jbe
les
push
imul
mov
xchg
adc
lcall
fs
aam
cs
ljmp
subb
push
mov
hlt
push
ljmp
stos
pushl
or
cltd
xchg
das
cld
push
sbb
push
dec
mov
lahf
lods
push
mov
jbe
mov
in
jae
ret
cmp
int
outsb
xchg
dec
xchg
add
and
arpl
adc
call
push
sbbb
cld
cltd
jae
fsubs
mov
jnp
outsl
cmpsl
stos
dec
jo
pushl
jle
mov
mov
popa
sbb
inc
mov
jecxz
sub
push
or
decl
jne
pop
rcrl
cwtl
aam
cmp
xchg
xor
mov
inc
push
cld
mov
inc
sub
or
mull
call
sub
push
aad
add
out
cwtl
orl
inc
pushf
sbb
pop
cs
stc
lcall
push
add
mov
pop
mov
call
clc
dec
sub
inc
jne
pusha
inc
mov
pusha
daa
jle
mov
push
adc
cld
dec
ss
or
xor
xor
inc
fbld
in
jb
jmp
out
fbld
push
mov
test
fnsave
popa
ja
sub
and
add
jle
call
flds
xor
mov
add
pop
adc
std
out
add
pushw
jbe
ljmp
cmp
dec
popa
pop
cli
mov
inc
jnp
sub
lea
movsb
jg
leave
dec
cld
ljmp
test
mov
mov
imul
mov
ljmp
jge
insl
inc
lock
imul
mov
call
jge
shr
xchg
mov
xchg
out
lret
push
sti
and
pushf
fildl
call
mov
testb
xor
mov
ljmp
or
scas
push
test
mov
mov
dec
dec
mov
ljmp
sahf
in
pop
xchg
jb
notb
xchg
xor
test
orl
push
test
adc
ja
mov
lahf
aaa
mov
loop
jmp
xchg
pop
or
roll
pushf
pop
dec
aaa
mov
lcall
push
rcr
ds
dec
xor
js
loopne
add
shll
ljmp
enter
outsb
out
cmp
xor
adc
xchg
cmp
cltd
in
call
sbb
test
adc
scas
sahf
push
xchg
stos
jg
cltd
fidivl
jl
lods
shr
mov
mov
or
fisubrl
inc
pop
pop
pop
push
pop
sti
inc
insl
imul
pop
jbe
mov
lods
shrb
fisttps
pushf
das
cmc
jg
cmc
jns
int3
dec
das
ret
inc
pop
mov
das
sbb
push
xchg
add
xchg
or
inc
xchg
fimull
das
mov
xor
mov
jl
out
aam
mov
sub
daa
dec
popf
test
lds
jge
cmp
ljmp
push
inc
mov
xchg
adc
cld
sbb
xchg
cmpb
es
mov
jmp
iret
jmp
xchg
xchg
inc
in
xor
ror
dec
insb
into
call
sub
mov
sbb
outsb
xchg
pop
cli
mov
pusha
jmp
dec
adc
dec
xor
cmpsb
jae
test
js
lods
fwait
lcall
dec
jo
mov
repz
cmc
popa
cmpsl
aaa
mov
leave
sbb
lcall
jg
jmp
or
js
test
jae
add
add
int
lret
cmp
xchg
push
dec
movsb
out
scas
bound
dec
les
lret
adc
cmp
xchg
mov
test
pop
and
mov
es
and
rorb
decl
insb
std
jge
movsb
mov
je
cli
pop
pop
sub
leave
xchg
push
dec
dec
add
or
call
test
aam
div
push
cwtl
sbb
jnp
inc
add
rclb
mov
push
daa
aas
aas
mov
add
data16
or
inc
movsb
xor
pop
pop
jbe
lret
js
sbb
or
mov
push
cmp
ljmp
cld
iret
push
xchg
lods
add
out
les
cli
into
xor
bound
jmp
sar
push
into
xor
call
cmpsb
movsb
out
pop
adc
lds
sbb
push
test
xchg
in
aas
decl
aad
push
dec
sbb
in
repz
aas
fistpl
mov
scas
ss
or
std
les
add
andl
xor
ret
imul
stos
cmpsb
jp
data16
or
add
lret
pop
popf
xor
jmp
push
inc
test
cmpsl
lods
lret
addl
fldcw
mov
inc
std
add
out
imul
pop
or
cmp
pusha
mov
sub
std
call
xor
faddp
mov
push
fstpt
and
xchg
neg
mov
push
je
fsubs
jg
or
inc
ds
jmp
xchg
loope
cmc
push
or
pop
lods
call
call
mov
enter
clc
xor
or
xchg
stc
mov
addr16
lock
jg
int
mov
icebp
mov
int
dec
xorl
pop
mov
ljmp
jecxz
test
int3
imul
cli
sub
ror
mov
shr
lods
hlt
aam
cld
pop
jb
orb
xchg
test
mov
sub
into
add
or
and
stc
mov
lods
rolb
repnz
push
jmp
fcmovnbe
nop
in
jg
cmpb
outsb
and
in
xchg
mov
pop
mov
loopne
lret
rol
test
fs
ss
lods
push
dec
mov
lcall
fldl
xchg
mov
push
xor
sarb
in
leave
imul
jle
mov
lret
inc
jle
icebp
xor
sub
stos
sub
pushf
mov
loop
in
call
mov
ret
ljmp
mov
add
jo
jmp
xor
fistpll
out
mov
inc
inc
add
jno
jnp
pop
sub
and
iret
push
mov
stos
cmp
mov
mov
lcall
or
cmpsb
imul
jae
mov
xlat
lods
sub
or
adc
rorl
dec
aaa
and
loop
mov
test
ss
sbb
xchg
iret
pop
insb
cld
mov
cmpsl
mov
into
lcall
cmpsb
fnstcw
or
ljmp
mov
pop
jo,pn
sahf
adc
lock
das
jb
je
jg
ljmp
dec
and
sub
adc
pop
addr16
add
jbe
ud0
incl
xchg
pop
into
faddl
pop
loope
mov
imul
imul
or
jnp
std
sub
sti
das
outsl
cmpb
gs
rorl
cld
decl
outsl
cmp
leave
fwait
mov
or
jle
ljmp
mov
lret
mov
add
sahf
cmp
mov
shll
cmpsb
push
dec
incl
lock
jge
cmp
cmc
loope
movsl
inc
jge
add
jge
sbb
add
jp
jl
and
imul
push
ret
mov
xchg
shrb
shll
xchg
fs
mov
stos
or
mov
jnp
sbb
mov
inc
ficoms
inc
xor
inc
xor
xchg
sti
sub
jp
mov
cmp
push
outsb
mov
sub
in
cmp
fistpll
rorl
lret
fdivl
icebp
test
add
and
loop
outsb
lock
lcall
mov
cmpsl
ret
sub
jae
jmp
adc
mov
jmp
add
and
adc
push
jecxz
cmp
cs
xor
decl
xor
pop
addps
cwtl
jmp
sbb
jle
decl
sbb
bound
out
push
popf
addr16
cmp
stos
decl
push
jg
pop
mov
inc
enter
xchg
add
mov
xcrypt-ecb
mov
test
je
jb
and
test
out
test
jmp
imul
sub
shrl
push
out
aaa
xchg
dec
fildl
addb
pop
nop
xchg
scas
xchg
mov
in
inc
and
es
fsubrs
aam
pushl
or
sbb
sbb
push
lret
fwait
sbb
mov
ljmp
hlt
mov
mov
jl
push
mov
push
loope
ffreep
and
dec
and
push
xchg
call
ds
push
arpl
sbb
push
inc
shrl
leave
jl
add
lret
mov
or
arpl
decl
std
lcall
rcrb
dec
jg
clc
testb
add
lahf
xor
hlt
incl
ja
imul
in
lea
popa
gs
insb
arpl
mov
call
imul
push
call
inc
push
jns
lods
push
and
jbe
or
imul
in
pushl
subb
pusha
cmp
stc
mov
ja
pop
mov
or
xor
mov
daa
xor
sub
fildll
lcall
cmc
xchg
iret
aaa
clc
mov
push
cmc
sbb
add
cmp
xchg
jb
cli
incl
xor
add
push
sub
je,pt
das
hlt
incl
dec
pop
in
rorb
add
pop
daa
mov
lods
jg
pop
es
mov
mov
pop
cld
int
push
sbb
ffreep
test
sbbl
mov
das
hlt
sbb
pop
in
shrl
je
mov
sahf
add
sbb
cmp
xchg
cmp
ret
push
jle
ss
sub
xchg
aas
push
sub
pusha
sbb
fiadds
pushl
mov
cld
jnp
fwait
push
mov
mov
cmp
and
dec
push
loopne
sti
xor
repz
cs
stos
cld
jl
xchg
movsl
cmp
mov
jg
push
std
pop
les
stos
fucomp
out
subl
repnz
mov
ret
stos
push
mov
in
incl
jne
and
adc
gs
or
inc
push
leave
test
aad
stc
mov
scas
je
inc
hlt
xor
outsl
mov
out
fdivl
pop
cli
sub
in
imul
jmp
xchg
cs
std
ljmp
test
pop
ds
sbb
mov
es
decl
js
out
mov
cmp
aam
test
cwtl
jecxz,pn
pop
incl
inc
pushl
pop
xor
cmpb
js
les
cmc
add
xor
imulb
leave
cmp
or
lret
cmp
jbe
push
lahf
roll
mov
shr
mov
mov
pop
xor
das
in
xchg
inc
pop
pop
push
add
sar
fsubs
jnp
sar
mov
nop
mov
clc
cmp
jmp
stos
scas
inc
scas
mov
pop
fcomi
arpl
iret
xchg
xchg
subb
fwait
pop
lret
lcall
decl
rorb
jl
arpl
cld
enter
mov
test
shll
call
jp
fucomp
sbbl
xor
sub
in
push
xchg
pop
xchg
and
inc
jmp
lock
mov
les
mov
sbb
sub
push
call
or
mov
cmp
mov
jge
std
cs
cld
xchg
lods
jmp
jmp
lret
mov
clc
adc
lock
lods
fimull
lods
push
cmp
enter
aam
test
cmp
pop
js
push
lcall
decl
mov
push
mov
jle
or
notl
loope
and
test
ljmp
lcall
xchg
and
stc
jmp
xchg
ss
jae
mov
xchg
xchg
mov
sahf
loopne
pop
fnstsw
mov
ret
jno
and
mov
push
insl
adc
ja
out
icebp
int3
or
fsubs
mov
mov
xchg
js
sbb
mov
lcall
ss
lds
pop
rcrb
mov
testl
fs
cli
sbb
call
aam
dec
mov
test
adc
shlb
rcrb
lcall
jp
out
add
les
in
mov
push
movsl
ds
nop
stos
subl
inc
lock
xor
xor
mull
inc
call
clc
lods
mov
jl
cltd
inc
jmp
loopne
xchg
ljmp
in
pusha
xor
xchg
imul
pop
dec
bound
xchg
in
in
pop
outsb
notl
push
inc
call
outsl
mov
mov
push
dec
ja
mov
lcall
dec
in
test
mov
push
dec
add
mov
pop
lds
out
mov
or
repz
add
bswap
pop
loop
aaa
scas
mov
mov
fs
xchg
mov
in
add
jb
sub
fdivr
dec
cld
add
jnp
sub
sahf
jno
ljmp
aam
icebp
mov
dec
stos
cmp
sbb
sti
out
icebp
dec
jle
ljmp
and
in
jecxz
leave
shlb
mov
jmp
jle
imul
cmc
into
roll
xor
sub
std
push
sbb
jnp
and
sub
sub
push
dec
cld
jbe
sub
loopne
roll
icebp
sbb
jbe
fxch
inc
lcall
push
bound
sbb
push
xorb
sub
xchg
jp
xchg
pop
outsl
sarl
js
aam
loopne
and
xchg
or
and
xor
jle
call
inc
neg
adc
test
cmc
mov
adc
popf
pop
pop
fsub
ljmp
dec
mov
fisubrl
or
popa
clc
lcall
out
lret
cmp
pop
repz
call
pop
cmp
dec
xchg
and
mul
out
cmpsl
cmc
das
nop
mov
jecxz
das
int3
xor
hlt
imul
addr16
mov
call
movsl
mov
mov
js
bound
insb
xchg
sub
jge
xchg
in
call
inc
popf
add
movsl
rcrb
xor
push
jg
arpl
xchg
xchg
jg
shr
aad
and
mov
int
bnd
data16
sbb
call
aam
mov
jbe
mov
rol
inc
cmp
idiv
incl
sbb
jge
mov
xbegin
jecxz
mov
cmp
call
xchg
cmp
rolb
jns
adc
lock
jnp
neg
jg
call
cld
lcall
xchg
repz
inc
stc
xchg
sahf
cli
iret
dec
push
and
mov
cmp
popa
arpl
sbb
inc
pop
jbe
mov
out
mov
or
pop
xchg
and
lea
int
stos
push
cli
mov
mov
repz
pop
cld
push
cmpsb
lahf
mov
add
cltd
and
push
daa
cmpsl
push
repz
xorl
fsubr
test
popf
mov
rcll
lcall
repnz
sbb
jmp
mov
shll
or
dec
sbb
xor
pop
add
int
mov
lret
lods
mov
dec
fdivr
ljmp
sarb
ret
mov
dec
cld
pusha
mov
xchg
hlt
call
loop
adc
sub
xor
push
push
fstpt
subl
icebp
inc
and
std
aas
clc
fistpll
jecxz
cld
pop
call
jmp
and
popa
pop
sub
jb
ljmp
pop
daa
jne
xchg
mov
jns
cmp
outsb
add
test
lods
nop
jae
lock
fucomip
call
faddl
out
daa
xchg
adc
je
pop
xchg
cli
fwait
or
ljmp
jmp
add
xchg
jbe
xor
mov
sbb
mov
lods
push
mov
pop
hlt
cmpsl
popa
lea
in
add
fdivs
in
pushl
add
inc
sbb
or
adc
dec
jp
mov
out
add
push
mov
inc
inc
test
xor
sbb
sbb
dec
rcl
dec
clc
outsl
hlt
jns
rcll
push
inc
test
and
inc
rcl
or
jg
ds
fnstenv
xchg
mov
int
mov
inc
clc
mov
jnp
push
pop
pop
xor
mov
enter
outsb
test
xchg
sbb
lcall
pop
xor
in
loopne
mov
addr16
stos
out
sti
lds
jg
je
mov
or
aad
cmpsb
das
jmp
add
push
cmc
dec
test
lcall
pop
push
lds
lods
ljmp
jmp
push
mov
xor
sub
push
cld
sahf
mov
clc
out
shl
sbb
outsl
lock
sbb
fwait
pop
jl
or
push
pop
cmc
ljmp
dec
daa
rorb
or
add
lcall
push
out
jo
dec
aas
lret
in
cld
jp
mov
pop
push
ret
sub
xlat
repz
pushl
in
mov
sbb
cmc
ja
push
sbb
cltd
xchg
addl
rcr
add
inc
and
pop
rclb
xlat
scas
or
adc
mulb
lods
cli
call
cmpsb
out
sub
lods
mov
mov
jae
ljmp
imul
roll
sub
pop
call
lcall
stc
jo
sti
iret
and
inc
cmp
xor
fstl
pop
sub
adc
lods
pop
or
xchg
arpl
pushl
mov
sahf
mov
mov
inc
dec
loop
jne
sbb
call
out
sub
xor
in
xor
sub
test
lods
cld
pop
loop
fbld
loope
xchg
lret
fildll
enter
test
or
hlt
test
adc
cmc
or
rcll
adc
shll
in
hlt
ja
inc
repz
call
das
lods
xchg
jae
movsb
shll
into
fcomps
pop
lcall
std
pushl
cmp
filds
add
push
lds
fnsave
cmp
repnz
dec
outsl
lock
incl
test
ret
xchg
fstpl
pop
ljmp
dec
pushf
dec
mov
and
gs
dec
scas
pop
int3
std
subl
fsubs
lcall
jecxz
mov
insb
adc
push
outsb
sbb
hlt
push
das
aam
pop
test
out
jecxz
mov
stc
sbb
jg
pusha
add
jne
inc
pop
sub
mov
ljmp
lods
add
ljmp
inc
movsb
adc
dec
xor
dec
mov
repnz
movsl
addb
or
push
loop
sbb
jg
decl
cmp
jmp
adc
mov
test
imul
decl
insb
jl
insl
loopne
pop
mov
clc
vhsubpd
jns
mov
push
push
mov
inc
pusha
xor
fistpll
xor
mov
repz
mov
mov
decl
add
sub
add
mov
sahf
pop
std
call
jo
dec
xor
rcrb
stc
lock
xor
movsb
outsl
xchg
cmp
xchg
test
fsubrp
incl
outsb
xchg
or
xlat
int
lcall
stc
inc
dec
sbb
xlat
aaa
mov
out
add
sarl
stos
lcall
cmp
hlt
mov
mov
movsb
adcb
xor
mov
add
fwait
sahf
fs
fcmovnu
jne
loop
xchg
dec
cld
mov
icebp
sti
outsb
std
in
popf
jp
dec
mov
sub
outsl
icebp
call
mov
jle
mov
fnstenv
jge
sahf
outsb
bound
and
movsb
mov
push
jg
call
scas
movsl
loope
leave
cs
movsl
pop
adc
cmp
jp
sbb
xlat
aaa
jp
lea
test
push
xrelease
cld
mov
pusha
xor
adc
pushl
test
dec
std
mov
inc
or
push
test
push
cmpl
decl
insl
jae
das
roll
test
scas
mov
pop
dec
cmc
cld
sub
pop
mov
xchg
sub
inc
call
clc
jmp
out
pop
pushf
push
mov
into
stc
pop
std
repnz
aam
test
cmpsl
and
cmp
sub
call
loope
mov
enter
xor
pop
pusha
mov
lret
in
test
or
lcall
in
mov
ljmp
pop
sbb
rorb
jge
xor
incl
dec
jmp
mov
mov
xor
adc
addl
pop
cmp
mov
loopne
jg
xchg
ljmp
mov
adc
jmp
ds
in
js
std
ljmp
jl
fisttpl
stc
imul
mov
and
test
gs
cld
jg
test
push
enter
loope
inc
das
loope
dec
lret
sbb
std
and
jl
sub
outsb
pop
jmp
dec
movq
fldl
xchg
add
sarb
outsl
cld
dec
sar
cmc
pop
loopne
adc
dec
roll
cmpsl
dec
sub
out
lea
mov
cli
mov
mov
stos
dec
or
hlt
incl
add
mov
mov
filds
ljmp
and
pushl
imul
mov
stc
daa
iret
jb
sbbl
push
push
sub
inc
lods
add
test
fucomip
call
push
mov
dec
dec
enter
and
fidivrl
mov
ljmp
repnz
aas
push
mov
movb
pop
pop
cli
mov
jle
addr16
movsb
adc
iret
push
cmpsb
push
or
jp
jmp
cmp
and
jmp
in
rorb
call
push
les
out
and
jg
je
pusha
pop
aad
pusha
insb
and
repz
shrb
jo
push
int3
add
incl
ljmp
data16
loopne
jp
or
xchg
add
pushl
fnstcw
add
inc
add
sbb
rcrb
gs
jns
stos
jg
fists
les
mov
inc
sbb
les
inc
cmc
lret
cmp
xchg
pop
lcall
popf
aam
imul
dec
leave
daa
add
mov
push
add
mov
push
xlat
ljmp
into
mov
mov
jne
out
adcl
in
cmp
fistpl
inc
ffree
fmul
clc
leave
pop
shrl
scas
xchg
xor
lcall
mov
cltd
jle
cmp
cmpsb
pop
pop
jae
adc
xchg
push
ficomps
arpl
nop
jg
decl
pusha
dec
mov
cmp
mov
lea
jns
jo
fcompl
push
push
mov
arpl
repnz
and
and
stc
dec
xor
mov
xchg
faddp
cmp
and
mov
pusha
mov
scas
cmp
nop
adc
movsb
shrl
sbb
sbb
jmp
or
sbb
call
pop
test
test
out
and
scas
add
push
shrb
xchg
push
lret
ja
ficoml
aaa
fs
pop
std
pushl
stos
jmp
in
rcll
add
mov
inc
lods
sar
cmp
lods
sub
fsubrl
stos
movsl
lcall
jne
push
push
and
or
and
push
inc
mov
scas
pop
loop
call
sbb
sub
int3
jo
pushf
mov
cmp
sar
jg
mov
mov
pusha
mov
imul
mov
mov
addr16
inc
call
cmc
imul
in
mov
cmp
sub
lock
mov
nop
and
scas
mov
fbld
xchg
sar
clc
jmp
popf
mov
cmp
pop
mov
es
fcoml
popa
jecxz
adc
leave
outsb
mov
jg
fisttps
sarb
and
fisubrs
pop
inc
jno
clc
jg
or
setge
and
sub
aaa
inc
in
movsl
and
shrb
ljmp
test
mov
fldenv
imul
cmc
jg
mov
xchg
sbb
or
add
mov
cltd
mov
pushl
clc
roll
mov
mov
adc
xchg
and
jbe
addl
lds
jnp
jmp
call
sbb
bound
mov
fwait
popa
inc
push
icebp
pop
les
mov
jns
scas
mov
sbb
add
cmpsl
test
hlt
stos
inc
js
inc
sbb
inc
pop
cmp
cmp
adc
stos
es
cmp
adc
cmp
lret
inc
jmp
push
xchg
mov
jmp
jae
scas
push
in
push
dec
ja
ljmp
call
xchg
sbb
inc
push
and
in
jl
mov
shrl
lcall
adc
cmp
jg
jno
add
lcall
or
add
pop
cmp
sbb
dec
jecxz
cli
jmp
enter
mov
xlat
cmp
adc
pop
insl
mov
jg
in
cmp
lret
andps
outsb
xor
pop
jecxz
in
popa
insb
rcrb
and
ljmp
sbb
pushf
mov
mov
jg
jl
xor
push
lock
outsl
fwait
push
xchg
dec
js
fcomps
and
pusha
jmp
lret
jae
aas
mov
es
jge
dec
pop
xchg
fs
mov
stos
xor
adc
xor
or
dec
and
adc
imul
loop
mov
out
subb
sub
incl
xchg
xchg
sub
mov
jnp
inc
push
add
xor
les
mov
sbb
fidivl
pop
repnz
sub
adc
xlat
jmp
call
push
ds
mov
xor
push
and
lds
jo
test
stos
xor
or
hlt
mov
dec
mov
or
ljmp
jmp
ret
ret
xorb
out
xchg
sub
movsl
jle
sti
imul
fucomip
pop
pop
add
xlat
jecxz
jge
lock
leave
ret
mov
mov
rep
iret
in
leave
mov
lcall
fs
pop
movl
out
fdivrs
in
outsb
std
aaa
clc
outsl
push
fucom
cmp
dec
lock
mov
mov
nop
push
pmullw
pop
in
pop
stos
pmuludq
lcall
icebp
mov
ret
sub
and
pop
pop
nop
jg
mov
testl
mov
adcb
scas
lahf
lods
jg
mov
lahf
jae
stos
enter
push
fwait
ret
or
fwait
addr16
xor
cli
mov
cmp
adc
cli
rolb
adc
push
inc
scas
and
test
fisubs
fisttpl
push
push
ljmp
xchg
jo
call
add
xchg
cs
dec
sbb
mov
stos
out
imull
loopne
xchg
clc
mov
mov
sbbl
clc
mov
mov
pop
ficomps
leave
sar
lcall
fistl
jmp
or
ret
outsb
add
int
push
lret
pusha
xchg
movsb
jge
js
push
and
jno
sbbl
push
cmc
lret
jmp
dec
jns
loopne
pop
adc
push
loopne
sbb
mov
xchg
pop
inc
scas
mov
mov
or
dec
jmp
sbb
adc
jge
mov
sbb
int3
mov
add
das
std
pushl
mov
not
mov
test
fwait
call
out
lret
pushl
ficoml
insl
mov
addb
aaa
mov
mov
movsl
adc
out
rcl
outsb
icebp
sbb
xor
and
nop
decl
into
push
outsl
aad
clc
xchg
out
dec
inc
dec
int3
je
stc
xor
or
inc
mov
adc
jp
jmp
push
and
dec
jne
int
xlat
mov
lret
sbb
or
test
push
sahf
lret
pop
out
std
outsb
xchg
les
mov
pushf
xor
jp
shl
xor
sbb
dec
push
out
fbstp
dec
roll
mov
int
incl
lods
inc
mov
jb
movsl
fst
sub
dec
xchg
mov
mov
inc
pop
add
roll
popf
call
or
jg
mov
jno
cmp
mov
pop
lahf
inc
popf
jo
mov
sar
clc
xor
ret
sub
pop
repnz
mov
add
decl
add
cmc
insl
and
pop
dec
inc
xor
ds
incl
xor
or
fsts
xchg
pop
in
add
pop
push
lcall
lcall
dec
out
and
jge
mov
call
mov
lcall
jns
pop
add
dec
lods
or
sub
iret
push
insb
sub
push
adc
mov
dec
mov
ljmp
repz
cmp
jp
incl
jecxz
xlat
adc
pop
xor
inc
ja
mov
and
adc
aas
adc
push
xchg
das
pushf
iret
les
out
jo
mov
jbe,pn
fiadds
incl
sub
lods
jp
mov
aad
bnd
test
dec
ja
das
cmc
call
stos
xchg
push
push
push
sarl
mov
sbb
movsl
jmp
pop
mov
adc
jg
test
sbb
cltd
push
cmp
mov
pop
fs
cli
dec
mov
add
nop
sub
mov
mov
pop
ret
jg
cltd
fcoms
mov
cltd
pop
stc
data16
int3
mov
and
jp
mov
mov
out
xchg
sti
lods
cmpsl
je
mov
into
xchg
fdivp
or
lock
aaa
mov
repz
jmp
out
loop
je
jnp
mov
out
mov
inc
ds
sub
or
jne
int3
jmp
ljmp
out
mov
es
sbb
mov
outsb
xchg
outsl
leave
lock
mov
decl
sbb
mov
inc
shl
rcrl
into
push
cltd
insl
cmp
xor
jp
mov
lcall
push
mov
mov
dec
cmp
mov
jb
int
inc
pop
clc
call
mov
adc
jo
fcom
je
mov
nop
push
hlt
sub
mov
lcall
das
nop
dec
xlat
pop
sahf
fidivrs
out
fsubs
pusha
ret
lock
xor
ljmp
cmp
push
scas
jae
and
jg
arpl
xchg
cwtl
aam
push
sub
loopne
jg
jno
xchg
dec
outsl
or
push
inc
xor
dec
mov
out
jo
cld
incl
push
cmpsl
and
and
test
lea
lock
ret
insb
push
jmp
cmp
not
in
mov
icebp
push
cmpsl
dec
loopne
cmpsb
incl
mulb
xor
stc
das
jmp
adc
bound
pusha
out
cmc
ror
popf
mov
cmpsl
in
popa
iret
ret
pop
mov
and
insl
out
sbb
and
popf
push
sbb
mov
mov
or
outsl
in
sarl
pop
vphaddbw
icebp
call
scas
fsubrl
mov
cmp
fwait
sub
mov
sahf
sub
decl
mov
or
xor
or
rclb
mov
call
jae
cltd
int
shl
dec
push
dec
add
jg
adc
cmpsb
data16
aaa
outsl
xchg
mov
out
icebp
push
cmp
ljmp
dec
test
ret
lret
cmp
jp
ja
enter
push
jle
je
adc
inc
decl
adc
pusha
shlb
bound
jg
sbbl
mov
adc
clc
mov
jbe
xor
decl
push
sarl
xchg
mov
scas
mov
lds
fs
addr16
lahf
sbb
lods
decb
xchg
fnstsw
and
xchg
mov
incl
cmc
aaa
ret
cli
jmp
mov
call
bound
push
fsts
out
adc
xor
mov
mov
sti
arpl
add
and
xor
cmp
push
sbb
rcr
pusha
cmp
incl
or
int3
leave
pop
push
adc
call
stos
push
push
sub
dec
xchg
mov
xchg
add
mov
push
shl
imull
mov
addr16
pop
sub
jecxz
cld
js
jbe
and
loopne
fsubr
mov
test
ja
aam
cmp
call
mov
cmpb
sbb
shll
inc
lods
and
and
jg
decl
iret
jmp
ljmp
add
leave
in
add
push
push
popf
loop
sub
jmp
adc
sub
cmpb
faddl
neg
lea
add
cmpsb
rorb
in
xchg
sbb
xor
xor
stos
mov
icebp
sub
jg
mov
cld
mov
mov
mov
loop
repz
inc
push
repnz
adc
bound
pushf
xchg
push
fucomi
in
shrl
pop
xor
mov
jp
pop
pop
xor
inc
mov
push
inc
mov
icebp
dec
lds
fsubs
pop
add
jb
int
jns
dec
push
dec
xchg
scas
xchg
jae
pop
lcall
cmpsl
sbb
ret
xchg
movsl
cld
jo
jno
jmp
adc
shr
stc
sub
pop
mov
sti
mov
mov
xor
mov
lea
jne
mov
ljmp
in
lcall
sub
xchg
inc
insb
fistpl
and
mov
mov
fistpll
call
push
test
sub
iret
ret
mov
daa
enter
adc
sarl
arpl
ljmp
lret
add
pop
fnstcw
sbb
xchg
pop
pop
and
decl
rcrb
cs
jg
sahf
inc
mov
xchg
cwtl
pop
scas
jg
lcall
rcrb
sbb
imul
shll
xchg
or
cmpsl
nop
repnz
mov
inc
imul
fnstcw
pop
mov
test
mov
addl
fs
loopne
out
pop
decl
sahf
add
xor
into
stos
sub
int3
cwtl
xchg
xor
ret
jp
incl
stos
mov
stos
es
cmp
test
jp
leave
jo
mov
push
mov
jg
jne
pushl
dec
mov
mov
pop
or
repnz
icebp
adc
ja
or
outsl
cmc
inc
xchg
mov
and
in
xchg
outsl
fmull
xchg
push
mov
mov
cli
inc
popf
jne
scas
out
sub
stc
mov
sub
mov
cmp
into
or
scas
mov
clc
pop
shrb
cmp
incb
lret
sahf
sbb
lret
sbb
inc
pop
scas
cmpsl
ljmp
push
add
out
icebp
shll
pop
jnp
add
rcll
xlat
mov
addl
cmp
mov
cmp
push
jmp
mov
mov
add
in
mov
pushl
pop
inc
dec
push
xchg
pushf
aaa
xchg
arpl
bnd
dec
xor
jmp
push
mov
pop
test
push
jge
in
pop
arpl
jle
jmp
pop
cli
imul
mov
cltd
and
sub
testl
ljmp
addr16
fmull
inc
sbb
call
inc
mov
out
jo
push
sbb
xor
outsl
stos
pop
out
sar
das
mov
decl
hlt
xchg
rorl
test
add
jg
jmp
adc
loopne
int3
cmpsb
push
loope
pop
mov
inc
movsb
aad
and
lcall
jecxz
mov
test
sub
mov
mov
xchg
in
jne
clc
push
std
fs
pushl
or
dec
push
xor
mov
xchg
inc
and
sub
aad
adc
and
je
cwtl
sbb
cmc
push
mov
repz
loop
scas
and
mov
jge
lods
testb
aam
rcrl
fdivs
sub
out
stos
push
xor
rcr
cmp
push
stc
jg
lcall
inc
pop
rcl
mov
push
pop
je
test
dec
pop
popf
sbb
sub
decl
out
or
and
xchg
push
mov
ja
loopne
mov
nop
sti
jae
jg
xchg
lret
mov
push
inc
rorl
pop
mov
in
inc
ds
std
cwtl
jmp
mov
jl
pop
cli
incl
mov
fdivs
aaa
cmpsb
popf
cmp
add
bound
jbe
mov
ljmp
enter
inc
idiv
lcall
icebp
into
aad
aaa
fisubrs
popf
push
stc
inc
pop
jns
cmp
or
es
cld
push
dec
icebp
jg
ljmp
lods
aam
push
bound
lea
lods
enter
fisubrs
xor
lcall
shll
loope
push
xor
and
lods
out
or
add
sahf
mov
movsl
pop
jge
test
aas
iret
or
in
test
daa
mov
xor
jmp
sbb
insb
jb
push
rclb
adc
fnstcw
decb
std
decl
or
leave
fcmovb
imul
das
adc
mov
lds
pop
jbe
movsl
sbb
repnz
mov
jns
xchg
push
cs
mov
jecxz
jmp
push
adc
fs
pushl
add
popf
leave
push
inc
sbb
std
jae
hlt
or
ljmp
fnstenv
sbb
cmc
lret
push
bound
or
ds
lock
jbe
popf
inc
call
movb
inc
insb
cli
push
repz
cmp
mov
nop
sahf
jge
mov
rcll
insb
jns
cmp
xor
jbe
and
and
scas
lcall
mov
in
sbb
dec
xor
inc
scas
leave
dec
fldenv
sbb
mov
dec
stos
stc
pop
ret
jae
das
or
push
call
sub
adc
pop
jb
lock
decl
ret
add
clc
inc
sbb
popl
xor
mul
fistl
lcall
clc
shlb
fdivs
cli
bound
repnz
pushl
cli
adc
and
aad
xchg
cmpsb
mov
mov
cmp
dec
adc
ficoms
cmc
dec
mov
sub
pop
adc
mov
push
sbb
mov
jg
pushl
adc
cwtl
test
adc
sbb
mov
decl
cld
mov
shll
dec
imul
out
aaa
pop
inc
dec
xchg
js
int
popw
cld
pushl
shll
adc
in
popa
or
and
std
incl
adc
out
jecxz
push
rclb
push
sub
dec
or
inc
rcrl
push
sbb
mov
pop
insb
pop
jp
push
push
aad
or
xchg
mov
in
popf
cld
mov
push
xor
sti
addl
push
in
xor
jbe
xor
dec
sbb
loope
lcall
lret
in
fnsave
inc
arpl
or
sbb
push
push
push
sub
push
out
push
outsb
xor
fists
adc
sbb
fcmovu
push
fsubrs
ds
out
sub
jnp
sarl
in
xor
sub
xchg
imul
cmp
push
push
sahf
inc
fbstp
lea
movsl
fsubrl
xchg
ljmp
lock
xchg
push
dec
pop
in
dec
dec
pop
nop
sub
pop
mov
mov
xchg
sub
pop
cli
pop
in
test
sub
ljmp
mov
xchg
pop
orl
lods
jg
rolb
push
jmp
inc
fcomip
in
addr16
fldenv
movswl
mov
decl
clc
jnp
shlb
dec
test
mov
add
insl
push
mov
mov
adc
std
dec
or
add
in
or
test
push
std
rclb
pop
inc
jg
pushaw
push
mov
push
dec
or
je
xchg
outsl
cmpsl
ss
push
cmp
mov
dec
fcomp
xor
clc
ss
in
sub
adc
in
mov
adc
and
imul
std
pop
clc
les
leave
mov
ljmp
inc
or
in
mov
movsl
andl
jmp
or
and
jecxz
cmp
arpl
pop
es
adc
push
aam
popl
test
push
ljmp
pop
mov
dec
js
xchg
inc
cld
mov
jp
imul
ret
test
decl
push
and
inc
or
outsb
cmp
in
mov
aaa
cld
inc
in
aad
cmc
loope,pt
and
fldl
or
icebp
arpl
movsb
jg
mov
mov
repz
mov
call
jne
popf
mov
or
xor
cmp
dec
or
rclb
inc
fwait
dec
decl
and
stc
enter
jp
lds
push
mov
mov
push
aad
mov
sbb
ret
cmp
test
jg
jg
xor
inc
fdivs
in
std
out
or
xchg
fucomip
incl
std
pop
pop
inc
jno
ror
mov
inc
and
scas
sub
dec
and
aaa
mov
xchg
ds
pusha
pop
fldl
add
cld
jmp
popf
pushf
aad
pusha
inc
bound
inc
lods
je,pt
jne
das
lock
adc
dec
sbbb
hlt
jo
fdiv
xor
decl
push
sbb
sahf
mov
mov
and
decl
movsb
dec
push
jecxz
cmp
jne
aas
xor
ret
xor
push
jmp
out
xor
adc
addl
adc
pop
push
clc
int
ret
push
and
clc
dec
ljmp
cmc
xor
lds
add
pusha
xchg
lods
mov
mov
call
xor
repz
jmp
cld
pop
cmp
icebp
pop
repz
out
pop
movsb
add
fsts
xchg
jg
mov
lods
lods
jmp
lea
cltd
lds
std
clc
scas
mov
loope
sub
xchg
das
inc
hlt
and
sub
mov
psubw
or
insb
cld
xor
cmp
fidivs
xlat
loope
or
incl
pop
or
cs
ja
aaa
icebp
outsl
cld
shlb
adc
aas
push
stos
call
push
mov
scas
movsb
fidivs
outsl
lds
inc
inc
loope
cltd
scas
sbb
aaa
clc
jg
push
aad
push
in
popf
xchg
sbb
jge
pop
jge
pop
jg
mov
xchg
leave
orl
inc
xor
sub
push
negl
pop
mov
or
dec
les
mov
add
cmp
std
lea
std
lret
popl
sahf
mov
call
add
in
push
in
shl
xchg
add
fs
outsb
data16
lcall
jnp
mov
sub
into
add
ds
mov
outsl
and
movsl
fimull
jg
xor
pop
push
mov
pop
pandn
decl
scas
adc
dec
and
sahf
sub
cltd
ds
decl
popf
cmp
iret
cld
or
test
out
fs
inc
pushl
dec
sbb
inc
test
inc
push
stos
sti
inc
decl
sarb
push
xchg
jmp
mov
cs
out
out
mov
loopne
pusha
ljmp
lcall
xchg
sub
mov
adc
pop
repnz
jae
aam
test
jmp
ljmp
mov
shlb
mov
push
xchg
jg
jo
pop
push
xchg
push
adc
stc
cmp
call
add
push
sbb
sbb
pop
cli
jl
inc
adc
cli
lcall
subl
mov
insb
cmpl
lock
icebp
pop
jne
in
cld
scas
iret
mov
mov
xor
clc
lcall
and
and
mov
and
mov
jg
mov
and
lcall
xchg
pop
xor
jo
decl
imul
shr
and
int3
or
lods
sub
mov
test
sub
inc
jge
xor
cmp
cs
decl
dec
inc
pushf
push
xchg
pop
mov
jg
ljmp
mov
mov
xor
sub
decl
sub
xor
scas
jle
xchg
rcr
sbb
adc
xor
inc
out
jp
sub
lcall
int3
aad
push
repz
jo
stc
insl
and
add
mov
aaa
dec
pop
sub
inc
fcomp
mov
addl
sbb
cwtl
mov
in
pusha
mov
jns
fimuls
int
or
call
out
lahf
or
lods
xchg
push
insl
test
cli
icebp
and
and
fstps
mov
push
adc
cwtl
push
cld
ljmp
loope
int3
dec
shlb
es
jno
loop
mov
cmp
leave
mov
sbbb
mov
pop
aam
pop
cld
shll
int3
into
xchg
int3
xor
addr16
fwait
jno
in
lcall
sub
lahf
sbb
movsl
outsb
cmc
stc
cmp
das
std
ljmp
aaa
cmc
test
int3
cmc
outsb
xchg
mov
pop
sbb
dec
mov
icebp
inc
aaa
clc
adc
jns
xchg
xor
stc
iret
cmp
ljmp
repz
add
ficomps
inc
push
fcmovne
std
test
fistpll
add
pop
sahf
jns
mov
pop
filds
and
dec
mov
jbe
in
inc
pop
add
fwait
aaa
jae
lock
call
repnz
sub
cmp
inc
sahf
add
adc
adc
aas
out
fstl
xor
aas
movsl
xor
in
ret
ljmp
xor
xor
in
fildll
dec
outsb
mov
outsl
aad
jg
push
pop
lea
jecxz
cmp
loope
push
jg
ljmp
icebp
xor
jp
or
xor
adcb
xchg
push
dec
pushl
xor
sbb
popf
mov
call
test
dec
mov
repnz
xor
adc
lea
idiv
jl
es
idiv
inc
neg
add
xchg
rclb
fsts
cmc
decl
jg
pop
mov
dec
mov
xchg
dec
jnp
ret
sub
fldenv
insb
add
push
call
xchg
addr16
push
ret
outsb
pop
xor
insl
mov
and
test
in
pusha
lds
jp
inc
stc
ret
pop
test
and
push
mov
pop
jg
rcrl
push
loopne
std
gs
sub
inc
push
test
inc
adc
stc
mov
sar
pop
nop
add
inc
in
xor
mov
or
loopne
mov
jae
xchg
jno
call
ljmp
sub
mov
lcall
mov
aad
stc
jl
sahf
hlt
cmp
or
cs
xor
push
lcall
movsb
testl
push
js
lret
lea
cld
clc
xlat
xor
mov
inc
shrl
cmc
jg
das
lods
subl
mov
and
shl
int3
mov
insl
adc
leave
push
jb
push
xchg
fs
icebp
insb
popf
jb
or
jg
clc
pushl
mov
test
dec
scas
xor
xor
inc
add
and
sub
cmp
popf
or
fildll
fs
aad
icebp
lock
idivl
mov
jmp
inc
sub
or
aaa
mov
mov
aam
cmp
arpl
inc
out
or
jns
ret
add
scas
lahf
add
fidivrs
jmp
jecxz
frstor
fisubrs
in
rcll
aad
dec
jno
jmp
jmp
int3
mov
or
fimuls
bound
aam
mov
test
jmp
pushl
inc
repnz
or
jecxz
adc
fs
cmp
fcoms
mov
sub
repnz
out
dec
outsl
ljmp
aad
mov
push
jp
into
inc
or
dec
or
ljmp
hlt
and
les
into
mov
jecxz
stc
push
jo
and
rol
mov
pop
inc
adc
sub
icebp
inc
ljmp
xchg
jg
scas
sarb
daa
pop
scas
pushl
into
inc
inc
in
rorb
xchg
mov
fildl
add
call
adc
mov
out
icebp
sub
or
es
xchg
jge
loope
decl
ret
and
add
imul
imul
in
mov
pop
scas
jne
loope
clc
scas
xchg
dec
and
aam
decl
inc
jns
in
aas
mov
popa
repnz
sti
adc
repz
inc
pop
or
push
call
decl
push
and
stos
pop
nop
xchg
iret
pushf
scas
fs
jb
jp
push
call
lods
adcl
sbb
ljmp
js
cld
aaa
ljmp
cwtl
add
lea
adc
mov
negb
jmp
iret
push
loop
scas
int
adc
fsubp
jg
pushl
mov
or
xorb
dec
cwtl
push
lods
lret
test
sbb
push
adc
call
xchg
push
or
pop
pusha
shlb
lea
movsl
sub
incl
lea
in
scas
mov
cmp
jle
mov
mov
jne
inc
push
or
push
xchg
dec
add
sub
sbb
call
jp
dec
cmp
mov
push
or
fnstsw
mov
cmp
dec
ss
dec
sbb
jecxz
or
ficompl
incl
insl
inc
es
daa
ret
jb
lock
mov
les
mov
lock
mov
cmp
fstps
jg
mov
gs
pop
lahf
sbb
fildl
mov
lcall
push
mov
jmp
in
aaa
xor
insl
movsl
std
pop
jle
cmp
clc
xchg
push
mov
jg
sub
jl
or
push
popf
xchg
pushl
repnz
sti
cmp
add
dec
cmp
sbb
bound
stc
push
mov
pop
xchg
stos
push
ljmp
sarl
scas
and
sub
jb
popa
imul
pop
jmp
jmp
or
ficoms
pop
add
pusha
in
mov
pop
mov
sbb
inc
rcrb
shrl
in
xor
rcr
cmp
jle
clc
aad
pop
fsubr
out
aad
mov
or
stc
jo
call
push
pushl
mov
xor
inc
aam
push
push
cmp
shl
push
adc
hlt
into
pop
add
xorb
adc
dec
push
in
and
call
popa
mov
xchg
pusha
dec
cld
cmp
xchg
shlb
pop
subl
out
outsl
lret
mov
call
test
out
popf
mov
inc
push
sti
xchg
xchg
cs
dec
xor
and
mov
add
add
sub
mov
data16
pushl
stos
ja
mov
in
test
xlat
imul
stc
mov
sar
jg
jnp
push
into
ds
lds
mov
lds
fnstsw
lcall
test
stc
xchg
fldcw
addr16
mov
xchg
push
mov
jp
andl
dec
xchg
lahf
sub
sbb
clc
test
adc
sub
lahf
cwtl
mov
xor
or
cmp
or
mov
std
push
push
test
xor
inc
mov
mov
jb
adc
pop
loopne
cmpsb
decl
sub
sbb
lds
push
adc
xor
xor
lret
iret
ret
and
addr16
sub
icebp
push
fs
fidivl
lods
test
xor
lahf
jg
xor
adcl
cmpsl
push
jecxz
sbb
jnp
cmpsb
sub
jl
call
arpl
xchg
cmp
sub
cmpsl
push
scas
cli
lds
mov
pop
mov
and
scas
icebp
bound
push
ja
test
incl
mov
and
cmpsl
xor
sahf
fbld
and
mov
das
fs
dec
cli
dec
sub
mov
ficomps
mov
ljmp
xor
mov
mov
add
jae
adc
daa
ja
or
adc
cmc
dec
out
dec
cmc
and
fdivr
adc
mov
test
xlat
inc
stc
add
fisttps
sbb
out
xchg
fsubr
inc
push
pop
stc
sbb
sahf
xchg
pop
ja
and
xchg
ficomps
test
scas
xor
mov
xchg
mov
jg
jmp
push
xchg
xor
push
xchg
push
or
insl
stc
or
nop
xlat
jl
pop
lods
fucomi
call
lcall
fisttpll
insb
adc
mov
data16
pop
movsl
jg
test
mov
call
xchg
xchg
call
mov
sahf
xor
mov
mov
daa
movsl
sub
into
cmp
int3
mov
push
sbb
jnp
push
and
sbb
loop
adc
imul
inc
les
or
repz
ja
dec
fdiv
xorb
xchg
stc
dec
cli
mov
jp
inc
xor
or
xchg
sbb
bswap
sub
inc
jns
lods
decl
pop
adc
sub
lret
push
xor
cli
int
ret
inc
daa
loop
imul
addl
idivl
inc
sbb
call
lcall
arpl
or
pushf
lret
pushl
lock
cwtl
aam
sub
mov
push
pop
sbb
cmp
loope
incl
imul
in
xor
arpl
mov
pop
mov
adc
xchg
in
jg
pop
lret
insb
sbb
mov
mov
cmp
cltd
cmp
loop
rorl
lds
std
inc
dec
pop
dec
jmp
add
incb
and
loopne
or
sub
jecxz
ljmp
mov
sti
dec
in
adc
xor
loope
mov
jg
or
xchg
sub
pop
jmp
outsl
adc
jnp
sbb
mov
popl
mov
inc
sub
aad
lahf
rcll
daa
imul
push
mov
aad
push
lret
pop
dec
push
dec
mov
aaa
out
push
out
fisubs
lods
mov
data16
mov
out
mov
sbb
mov
ss
hlt
inc
pushl
sbb
cmpsb
xchg
lea
fimull
mov
int3
incl
mov
dec
icebp
loop
mov
jno
in
xor
ljmp
insb
push
cmp
inc
mov
dec
icebp
sbbl
sub
or
cwtl
jl
jns
add
jg
xchg
jnp
jmp
xchg
addr16
out
pop
test
mov
mov
ret
sub
fidivs
int
push
or
push
lods
je
cmpsb
loope
popf
aaa
mov
ret
cmpsb
adc
ficompl
das
icebp
movsl
incb
push
lock
jb
push
lds
lds
cmp
fstp
push
rcrb
inc
sub
out
jg
ljmp
cwtl
push
addb
mov
aaa
mov
sub
adc
pop
fdivrs
dec
out
cmp
cld
push
sub
jns
pmulhw
lods
lods
add
outsl
xchg
scas
loop
jecxz
incl
adc
negl
leave
mov
in
inc
xor
pop
bound
ds
cmpsb
nop
bound
das
sbb
loopne
mov
sbb
jbe
rcll
mov
js
clc
push
cld
jnp
dec
push
ret
enter
fildll
lea
adc
int3
push
in
divl
js
scas
jno
dec
in
push
pop
adc
sub
std
movsl
mov
mov
or
in
jnp
adc
inc
xchg
repz
push
orl
mov
idivb
mov
int3
ret
sbb
test
xchg
push
js
mov
incl
lods
sub
stc
nop
clc
cmp
stos
mov
xchg
lcall
mov
shl
pop
stos
push
xor
adc
sbb
outsl
mov
incl
mov
into
cli
cli
and
jge
or
xchg
hlt
das
lock
ret
test
sub
jno
subl
inc
pushl
adc
lock
aaa
test
test
fs
ljmp
incl
sbb
in
sbb
ljmp
inc
push
push
dec
hlt
cmp
repnz
xorb
imul
xor
lcall
popf
jo
mov
sub
push
push
pop
adc
cmp
jge
and
das
adc
flds
jg
jl
inc
and
loop
lds
es
lahf
pop
sahf
ja
inc
outsl
add
das
cld
fbld
pop
push
adc
adc
ds
ja
mov
mov
incl
sub
push
jne
push
out
push
mov
mov
and
sbb
not
lcall
jae
or
xchg
je
adc
adc
adc
jo
push
mov
movsb
cmpsb
inc
mov
mov
push
mov
mov
movsl
or
pop
cli
addr16
in
xor
jg
cli
mov
sarb
dec
je
sti
xor
out
ljmp
stos
or
and
dec
pusha
jge
popa
pop
sahf
sub
push
push
cwtl
add
call
push
int3
xchg
movsl
sbb
cmp
leave
gs
inc
dec
push
mov
fdivrp
mov
mov
rcll
cwtl
xor
ljmp
or
lret
jp
test
bound
jae
shll
or
ret
xor
jne
insb
jo
push
pop
call
pop
std
adc
fstpt
push
mov
out
jno
adc
bound
mov
ret
scas
popf
imul
or
sbb
or
or
xchg
add
ljmp
cmp
mov
call
and
shrb
das
cld
jbe
pop
aaa
and
sarb
dec
aad
or
ljmp
aad
sub
push
iret
push
jl
lods
mov
pusha
mov
xor
fs
stc
add
call
nop
pop
addr16
repz
int
push
mov
xor
ds
ret
xorl
rcrb
addr16
popa
xor
xchg
cmp
dec
or
enter
mov
add
lds
mov
mov
icebp
ljmp
jne
into
jmp
sti
mov
jg
cmp
jne
dec
sbb
rorl
out
jg
mov
pop
mov
aaa
les
movsl
lcall
call
clc
ret
dec
jge
rcll
mov
or
sbb
fstpl
pop
xchg
mov
incb
bnd
dec
pop
stc
into
lods
push
xlat
push
insl
jae
lcall
adc
push
xor
push
sbb
add
dec
inc
je
xchg
sbb
mov
rorb
incl
ret
and
jmp
rcr
mov
adc
mov
call
or
jg
decl
in
into
mov
enter
call
sub
sbb
pop
loopne
jo
stos
int3
inc
push
xchg
sub
jl
mov
popa
push
sub
fucomip
incl
stc
subl
mov
into
int3
out
jmp
sub
cli
sahf
mov
decl
adc
dec
mov
jmp
cld
std
cwtl
inc
sbb
cmp
nop
ret
cli
sub
repz
out
xchg
ljmp
jge
mov
xchg
sbb
push
push
lock
xor
xchg
sahf
jmp
call
cmp
jnp
mov
add
mov
fs
rcll
lock
jmp
dec
inc
test
add
addr16
call
orb
decl
mov
enter
inc
in
or
xor
mov
loope
dec
mov
cli
call
lods
inc
in
jp
dec
hlt
mov
mov
push
sbbl
mov
out
loop
lcall
decl
push
xor
sbb
xchg
mov
mov
movsl
in
andnps
sbb
cmp
xchg
je
xor
or
adc
jle
cmpsl
stos
push
push
or
adc
icebp
out
add
clc
ret
inc
cmc
sub
aaa
xor
xorb
test
call
inc
xlat
inc
test
jg
mov
stos
in
cmp
sub
into
mov
inc
andb
or
sarl
push
add
je
push
orl
sub
jns
hlt
sbb
dec
scas
push
adc
adc
sahf
dec
out
jae
xchg
outsl
test
dec
mov
cmp
pushl
test
cmp
int3
or
call
pop
loope
jg
mov
mov
cmpsl
int
icebp
jnp
sub
mov
in
fucomip
jp
out
sub
inc
or
jbe
pop
mov
sbb
cli
mov
xor
pop
bound
and
ror
loop
inc
jmp
jg
sbbb
aaa
xor
push
loopne
cmp
inc
rol
movsb
bound
fucomip
cmp
mov
bound
jecxz
or
jmp
imul
jg
xlat
mov
fimuls
test
or
daa
lods
cwtd
mov
jg
std
outsb
dec
sahf
xor
jne
push
inc
pop
xchg
stc
popf
dec
aaa
push
push
mov
incl
and
jp
sub
inc
xchg
add
loope
push
in
push
jae
mov
jg
sub
pop
out
mov
sub
inc
ss
pop
pushl
xlat
cld
cmpsb
push
sbb
adc
and
orb
orb
inc
xchg
mov
and
sub
test
imul
jle
dec
fwait
inc
jmp
repz
cmp
clc
aaa
and
add
cmp
insl
cld
sar
mov
xchg
xor
ljmp
and
mov
jg
cmp
mov
arpl
and
mov
push
mov
jg
into
xor
iret
aad
inc
sahf
push
mov
cmp
addr16
dec
mov
call
push
sbb
xor
fwait
jnp
in
adc
les
cmp
inc
lods
cs
and
fucomip
mov
popf
mov
stos
or
add
inc
pop
pop
ret
incl
xchg
leave
rorb
jbe
pop
jge
icebp
cmp
add
dec
sbb
push
fwait
xor
xlat
jns
cmp
fdivp
in
cmpb
das
cld
das
pushf
and
nop
fwait
mov
push
ljmp
mov
call
ljmp
into
decb
jmp
call
incl
icebp
ret
pop
daa
and
fsts
enter
icebp
sbb
cmpsl
or
mov
xor
push
fsqrt
pop
fdivr
jmp
fs
shlb
out
xchg
jmp
in
ja
push
or
mov
pushl
sbb
pushl
sub
inc
xor
mov
sbb
or
rorl
ffree
adc
ja
jle
cltd
into
aas
ret
cmpb
incl
mov
cmpsb
in
inc
adc
nop
test
into
stc
xchg
cwtl
fsubs
cmc
sbb
inc
in
mov
cs
mov
fs
inc
mov
mov
clc
call
xchg
add
push
imul
sti
subb
aad
lcall
push
out
sbb
nop
push
mov
mov
cmp
test
jmp
fistpll
push
jmp
rcll
jbe
or
movb
icebp
shrd
push
call
aaa
jle
pop
cmp
sbb
cmc
push
jbe
cmpsb
xchg
cmpsl
push
pushl
clc
ljmp
mov
mov
icebp
out
clc
sti
mov
or
aad
jmp
inc
push
mov
dec
fsts
jno
jecxz
cmp
pop
mov
inc
aad
cmpsl
sub
mov
sbb
xor
aam
xor
sbb
fistpll
push
lcall
cmc
and
adc
test
cmpsb
xchg
call
mov
add
nop
cmc
imul
nop
dec
mov
stos
mulb
decl
pop
fs
stc
mov
and
notl
cwtl
lods
in
push
jp
mov
ljmp
cmpsl
ss
popf
gs
push
roll
insb
roll
or
pop
pop
cs
or
leave
sub
or
ljmp
scas
jg
add
dec
orb
adc
mov
rolb
icebp
call
push
shll
aam
inc
gs
sub
test
add
outsl
incl
push
shlb
mov
test
push
sbb
push
cmp
jecxz
inc
xlat
ljmp
call
pop
pushf
sub
lods
cmpsl
rcll
cltd
lcall
push
mov
mov
pop
stos
inc
popf
add
pop
enter
dec
cmpsb
iret
je
pop
orb
icebp
jg
rolb
in
xchg
lods
in
xor
cmp
pop
aam
in
dec
stc
fcompl
ss
xorl
mov
mov
inc
aad
or
pusha
and
jmp
ss
dec
arpl
sbb
xchg
mov
and
aam
repz
lcall
mov
dec
mov
xchg
lods
movsb
and
cmp
ja
stos
cmp
je
cs
in
popf
add
jg
popf
xchg
or
xchg
lahf
push
mov
jne
cwtl
push
shll
push
cmp
lds
popa
dec
leave
fs
scas
jne
insl
ret
gs
jmp
test
mov
subb
sub
scas
test
jl
cmp
in
xchg
stos
cmp
popa
ss
mov
mov
jbe
jg
jmp
test
add
mov
xchg
pop
cmp
mov
pop
stos
outsb
cli
mov
test
xlat
sti
pop
xchg
push
add
insb
dec
gs
lahf
push
mov
sub
fbstp
push
jle
ret
or
dec
cmpsl
mov
outsl
aad
sets
mov
cmp
cltd
loope
ljmp
dec
shrl
into
adc
cmp
cmp
jg
mov
mov
adc
call
insb
pushl
pop
inc
or
lds
push
outsl
sbb
inc
inc
adcb
lea
cli
jmp
jmp
ret
outsb
and
push
jmp
incl
loop
xlat
sbb
xchg
ja
sub
ds
xor
mov
mov
cs
inc
fsubl
imul
std
arpl
xchg
das
xchg
inc
mov
pop
lret
ljmp
jno
xchg
xchg
dec
jo
loope
adc
or
outsb
pop
lds
rolb
sti
dec
lds
inc
adc
lahf
mov
inc
jne
dec
cmp
sbb
mov
scas
bound
in
das
shlb
mov
ljmp
pushf
popa
mov
adc
push
mov
mov
pop
lcall
decl
inc
fistpl
subl
movsb
scas
xchg
mov
xor
aad
xor
insb
dec
ds
leave
cld
and
aas
mov
cli
inc
or
and
test
push
xchg
push
add
ljmp
frstor
cltd
mov
test
pop
jg
add
push
fbstp
jmp
jmp
jl
repz
mov
mov
ljmp
add
mov
pop
pop
insb
jl
and
into
sahf
push
clc
lock
lods
pop
loopne
decl
movsb
xchg
sahf
imul
dec
jl
pop
dec
stos
pusha
pop
inc
xchg
adc
adc
call
mov
stos
lods
mov
and
add
pop
mov
pusha
lcall
lea
jns
jmp
idivl
ja
or
mov
lcall
sub
and
out
stos
mov
cli
mov
inc
push
fists
xchg
shrb
mov
mov
cli
dec
mov
popf
pop
aad
sbb
xor
xor
shlb
xchg
enter
ret
arpl
arpl
push
jle
push
push
rorl
and
and
stos
aad
pushf
ljmp
mov
cmp
push
cmp
stos
jnp
aas
xchg
popa
cs
in
fldcw
ret
ljmp
lock
push
in
mov
add
sub
test
cmp
fucomip
call
pop
sbb
popa
stc
nop
and
clc
or
cld
cli
push
xchg
and
sub
pushl
adc
imul
mov
sbb
orl
stos
push
mov
push
out
cli
std
std
mov
out
addr16
outsl
sbb
fcoms
leave
inc
mov
jmp
rclb
push
mov
mov
xor
add
insb
ret
xor
sub
test
or
cltd
cmpsl
loopne
stos
leave
or
cltd
pushf
sti
mov
call
fwait
pusha
scas
ret
fiadds
jl
ds
movsl
aaa
aam
jge
rcrl
icebp
sti
dec
repz
ss
pop
out
das
arpl
cmp
push
cmc
jg
mov
iret
nop
push
imulb
push
pop
jbe
mov
lea
out
cmpsl
add
lahf
xchg
inc
jmp
popf
push
mov
cmpsb
cld
in
sub
std
and
push
jo
mov
jno
repz
decl
mov
jo
sbb
sbb
adc
out
testb
add
decl
xor
inc
dec
imul
and
add
pop
ficomps
decl
loope
push
dec
xchg
fmuls
lahf
mov
mov
lahf
jg
push
xor
push
pop
cmp
inc
pop
aas
mov
add
dec
jp
stos
movsl
ljmp
pop
out
push
leave
dec
gs
jl
out
aad
in
or
or
jg
cmp
push
lods
into
pop
aaa
into
out
std
int
mov
stos
pushf
adc
ljmp
xchg
out
inc
and
lret
cmc
pushl
and
aaa
adc
enter
ffree
mov
shll
push
lcall
ss
repz
xchg
mov
lret
xchg
xchg
movsw
cs
lahf
shr
pop
adc
lock
jmp
das
jle
push
test
iret
enter
or
sahf
std
sahf
inc
cwtl
mov
jg
jnp
lret
pushf
cwtl
and
pop
mov
je
or
std
popa
popf
jne,pn
mov
aaa
or
ljmp
sbb
loopne
mov
lds
xor
arpl
dec
xchg
scas
test
lcall
pop
adc
jbe
jle
in
scas
push
popf
xchg
lcall
mul
lcall
sub
mov
jnp
into
and
mov
jle
icebp
sub
ror
xchg
cmp
lcall
nop
mov
fs
in
cld
mov
or
mov
out
jmp
subb
xchg
push
xor
mov
subb
sbb
push
iret
scas
stc
dec
aaa
pop
push
incl
fwait
pop
push
xlat
push
push
pop
inc
adc
jecxz
mov
cmp
mov
mov
xchg
ret
mov
push
loop
xor
push
sbb
add
sbb
dec
dec
lods
xchg
out
pushl
mov
xchg
enter
cmp
pop
and
dec
jmp
or
lods
cs
mov
push
adc
fisttpll
xor
adc
decl
add
aas
mov
sbb
mov
cmpsb
or
dec
hlt
incl
aaa
in
fisubrs
and
add
push
xchg
push
jmp
cmpsl
ljmp
addr16
leave
mov
jae
int
int
idivb
nop
pushf
push
xor
scas
stos
lcall
call
jl
aaa
int3
loope
dec
in
aad
mov
iret
shr
pop
popf
inc
jp
out
jp
jl
les
call
clc
adc
ljmp
ret
decl
mov
sub
jmp
shlb
xor
inc
hlt
ds
lcall
loope
bound
add
jmp
pushf
sbb
dec
push
adc
je
jecxz
pushl
mov
xor
addl
inc
sbb
sahf
push
pop
push
pop
cmp
mov
pushl
pop
xchg
add
sub
sti
or
test
mov
pushl
pop
pop
insl
cmp
cmp
in
sub
mov
inc
mov
jmp
jecxz
popf
mov
add
dec
sbb
stos
cmc
in
cmpsb
aaa
lods
push
cwtl
insl
push
jp
pop
dec
lcall
call
mov
leave
xor
fidivrs
or
cmpsb
pop
call
push
xchg
fistps
clc
insb
pop
xor
jnp
fs
mov
fwait
push
pop
sub
dec
out
fsubr
cmp
outsl
mov
popf
jbe
adc
fnstenv
cmp
sub
ret
lock
mov
je
xor
pushl
sub
dec
clc
ljmp
aam
inc
mov
incl
enter
push
fwait
xchg
xor
pop
push
add
cmp
mov
push
ss
sub
icebp
or
add
xorb
mov
fnstenv
hlt
xchg
mov
imul
clc
add
push
sub
xchg
movsl
inc
xor
jmp
enter
dec
or
xchg
repnz
lcall
xor
xor
or
inc
call
add
fstpl
imull
leave
or
mov
cs
push
ret
inc
lods
sahf
jg
dec
jnp
mov
fsubrl
mov
add
les
pushf
in
adc
aam
call
ds
mov
aaa
icebp
jp
rcr
sahf
xlat
ret
popf
cmp
xor
sub
pop
cli
jmp
in
psrld
mov
imul
enter
mov
into
incl
fbstp
mov
adc
icebp
test
dec
push
test
aad
decl
or
aas
pop
adc
mov
sub
in
cmc
cmovb
cld
lods
outsl
lock
cld
arpl
addl
test
cmc
xchg
mov
xchg
sub
ljmp
test
stc
in
mov
pop
sub
sub
sarb
pop
call
xrelease
cmpsl
push
and
out
jae
lock
ljmp
adc
xchg
lea
or
inc
fs
mov
movsl
ljmp
movsb
xchg
inc
aaa
fidivrs
pop
das
call
mov
cmpsl
call
fsubs
movsl
push
add
movb
mov
jg
aaa
clc
jmp
push
lds
push
cmp
and
popf
addr16
iret
testl
hlt
les
dec
stos
js
dec
scas
outsl
insb
cld
mov
bound
mov
cltd
mov
addr16
call
add
or
mov
jg
movsl
loop
scas
xchg
sbb
push
sub
mov
fdivp
test
lcall
imul
pop
cmpl
jne
jecxz
jmp
or
xchg
jbe
ja
ljmp
out
sbb
adc
lock
inc
or
nop
push
pop
jge
out
ds
jp
clc
outsl
sub
enter
fdivs
test
icebp
das
add
sarb
test
lahf
jae
outsl
hlt
jmp
sahf
push
mov
jo
add
icebp
insl
call
mov
and
ljmp
inc
xor
repz
xchg
repnz
push
dec
sub
cmp
out
adc
sub
jg
push
inc
popa
fists
pop
lcall
jge
call
mov
jno
sub
and
or
out
push
jg
sbbb
xchg
hlt
pop
pop
js
stos
sahf
cmpsb
sub
lea
rolb
add
outsb
sahf
repz
decl
xchg
orl
scas
test
mov
out
adc
decl
mov
xor
loope
cmpsb
jbe
cmpsl
add
stc
scas
mov
or
das
cmc
outsl
rorl
roll
adc
jmp
aaa
popf
dec
decl
cld
rcrb
cwtl
xchg
cmpl
jp
xchg
xchg
cmp
dec
cld
mov
cmc
std
inc
push
test
inc
xor
xlat
call
lret
fidivrs
fildll
pop
js
sbb
mov
inc
iret
std
mov
pop
decb
sub
inc
movsl
inc
pushf
je
call
cmp
loopne
repnz
lcall
js
mov
mov
add
cmp
int3
push
cmc
out
enter
adc
mov
jbe
ljmp
scas
push
cmp
icebp
mov
xchg
cmp
mov
fcmovnu
gs
inc
in
int3
jb
xchg
adc
cli
mov
jb
popa
jo
cmc
shlb
ljmp
jg
push
mov
inc
enter
nop
or
adc
push
clc
or
clc
call
stc
jbe
and
jge
cmp
dec
fcmovnbe
sbb
lcall
cld
xchg
out
mov
jmp
fwait
push
es
pusha
xor
ret
call
jbe
mov
mov
cld
xor
cmp
insl
repnz
popf
and
and
ljmp
shlb
out
fs
ret
in
push
cli
mov
pusha
rol
scas
rcrl
xor
jle
xchg
jmp
jg
pushl
xchg
andb
insl
popa
jne
cwtl
arpl
add
push
inc
push
les
fstpt
mov
sti
test
push
push
stc
test
mov
sbb
fs
pop
call
ljmp
xor
aad
mov
test
rorb
out
into
lods
xor
cmp
inc
mov
cmp
jp
ja
cli
stc
repnz
pop
jp
sar
or
mov
nop
and
mov
inc
stos
dec
stc
lret
lods
pop
sbb
adc
lcall
loopne
push
adc
es
mov
mov
ljmp
sbb
inc
mov
mov
push
mov
push
incl
xor
insl
ds
xor
push
xbegin
incl
out
jmp
loopne
jae
push
rcll
xchg
jmp
clc
pop
int3
adc
mov
xchg
outsl
icebp
mov
adc
mov
clc
ret
lcall
sbb
outsl
in
sub
xchg
je
in
mov
test
incl
adc
fmulp
repnz
push
pop
vpcmpgtb
sbb
popfw
cwtl
loope
xchg
jno
jne
int
mov
push
lcall
je
push
and
sub
inc
mov
inc
outsl
cmc
movsl
push
je
int3
rorl
mov
mov
xchg
or
push
loope
mov
inc
mov
call
lods
sarl
in
rcrl
clc
jp
fsubrp
pop
add
inc
ror
push
std
fisttps
inc
ljmp
cmc
mov
js
mov
pop
cwtl
xchg
dec
xchg
shlb
cmp
sub
jns
jmp
ja
push
nop
mov
add
pushl
aaa
add
jl
mov
gs
mov
out
and
loop
sub
lcall
cld
fsubrs
or
andl
push
aad
clc
mov
sub
add
mov
xchg
pop
sub
mov
xchg
push
cmp
dec
scas
pusha
mov
push
lcall
push
sub
jle
sbb
adc
data16
bound
shll
jmp
nop
test
into
or
add
sbb
incl
jmp
movsl
mov
movsl
pushf
push
fsubl
iret
scas
int
mov
call
fdivrp
pusha
popa
and
cmpsb
lock
scas
cs
dec
dec
mov
idivb
out
mov
movsl
mov
lods
push
xlat
outsb
cmp
out
pop
dec
out
insb
fstpl
pushl
jg
cwtl
push
orl
cld
insb
aam
lcall
sub
out
adc
stos
sbb
xor
pop
push
mov
mov
jg
scas
fnstsw
fldt
test
fcmovb
mov
aam
mov
sbb
xchg
pop
test
adc
jge
push
sub
ljmp
xchg
insl
cmpsb
inc
repz
cmc
pushl
test
ja
push
jns
and
mov
out
mov
icebp
jbe
icebp
pop
push
xor
add
push
leave
movsl
pop
xchg
nop
call
pop
push
inc
sbb
stc
es
jo
leave
lret
and
ficomps
mov
mov
sub
mov
test
test
pusha
sahf
filds
clc
dec
test
pushl
or
loope
mov
jne
dec
out
ficoms
ljmp
dec
imul
lea
shrb
decl
xor
sbb
stc
ja
cli
ret
jmp
dec
iret
les
push
cmp
add
lret
jnp
and
loop
decl
push
enter
cmc
jp
xor
out
xchg
cwtl
je
test
lcall
pop
icebp
mov
cmp
push
pop
pop
movsl
xor
lods
mov
or
lods
jp
and
mov
cmc
pop
shl
fidivrl
mov
mov
lods
test
arpl
ret
das
lock
jg
leave
cmp
movsb
push
dec
jae
popf
sbbb
lods
mov
and
sar
or
push
sub
and
sahf
ret
jnp
xor
mov
test
call
pop
sahf
fucom
cmp
bound
push
mov
ret
call
cmp
or
and
cmp
je
sahf
dec
stos
aas
lahf
push
or
lods
adc
jno
sbbb
sub
daa
test
inc
aad
ret
sub
mov
pushf
lods
cmpsl
scas
xchg
sbb
ljmp
inc
dec
pop
ja
xchg
lahf
jns
out
rol
adc
sti
pushf
sahf
dec
mov
push
aam
orl
adc
xchg
sti
xor
or
jg
lods
jg
and
roll
call
decl
and
sti
test
xchg
inc
sbb
push
out
in
sti
dec
decl
pusha
lret
lods
inc
call
fidivs
adc
adc
jp
jmp
pop
stos
sub
pop
inc
shll
negb
std
pop
xchg
cli
pushl
fcmovnu
test
jmp
lds
les
sub
ja
mov
jmp
jp
mov
or
dec
std
ljmp
jmp
inc
fiaddl
jno
insb
roll
sbb
std
incl
push
repz
fdivrl
cmp
sub
orl
ret
call
cmp
iret
stc
mov
xchg
dec
inc
jl
sbb
outsl
adc
imul
lcall
mov
push
add
sub
xor
push
repnz
outsl
push
rcrb
jecxz
xchg
repnz
js
cmp
jmp
or
stos
or
shrl
jmp
push
aad
dec
movsb
jb
cmp
adcl
cmp
ljmp
mov
call
insl
mov
test
cmc
and
xor
or
clc
mov
loopne
outsb
push
inc
jmp
loope
test
sbb
lock
enter
lea
xchg
movsl
incl
dec
iret
push
hlt
fxch
ljmp
mov
sub
aaa
clc
insb
push
imul
imul
das
out
and
fucomip
repz
shrl
push
int3
jecxz
adc
mov
or
jmp
sbb
sub
xor
sub
mov
jb
mov
xchg
mov
in
and
decl
aaa
mov
ja
sahf
add
in
pop
into
pop
inc
sahf
push
rcr
mov
cmp
sbb
adc
cmp
jmp
insb
xor
xor
outsl
cmc
pop
call
inc
sarl
mov
xchg
fwait
ret
clc
lcall
pop
adc
and
loope
cmpsl
enter
or
inc
jbe
sbb
push
movsl
pop
loopne
nop
cmc
leave
and
lods
add
fcmovnb
jne
sbb
xor
rolb
in
add
ret
mov
je
inc
jg
pushl
adc
mov
sub
rol
cmp
dec
rol
lcall
lea
inc
icebp
add
ret
xchg
call
mov
sbb
push
xor
lea
enter
cmp
push
xchg
and
fcoms
push
aam
or
rclb
push
movsl
pop
fdivrl
rcll
or
out
mov
dec
sub
mov
daa
out
jae
scas
aas
sub
nop
jg
stos
xorl
sahf
into
js
sbb
ljmp
sbb
adc
mov
call
push
sub
jmp
sti
mov
mov
jecxz
rcrb
mov
jge
scas
aaa
cmp
mov
data16
mov
ret
xor
or
jl
lcall
xor
jl
ja
xchg
testb
cmp
or
push
xchg
ja
fisttpll
ljmp
addl
mov
jno
hlt
clc
mov
clc
push
pop
push
fucomip
inc
call
add
add
mov
ljmp
shrb
fucomip
cmp
pop
dec
rclb
sti
jne
dec
in
inc
mov
push
xor
out
scas
es
mov
imul
stc
push
mov
cmpsl
inc
ljmp
stos
adc
jmp
cmpsl
enter
adc
lcall
cwtl
jle
sub
shll
imul
mov
fisubl
xor
pop
jl
sahf
sahf
sub
jmp
das
cmc
int
insb
adc
sbb
mov
push
add
jne
sub
lret
jg
frstor
in
mov
cmp
lahf
mov
data16
clc
lods
pop
xor
fsub
fbld
sbb
mov
pushf
ja
std
jp
adc
and
pop
add
test
icebp
lcall
pop
mov
lret
and
les
adc
mov
in
into
and
ljmp
push
ja
and
and
fistpl
ud1
std
incl
lcall
sub
lock
out
test
push
cmp
xchg
add
gs
xor
int3
dec
pop
push
jl
sub
lea
jg
inc
lods
xchg
mov
xchg
scas
lcall
adc
stos
repnz
lods
pushl
mov
adc
fxch
mov
pop
and
add
das
hlt
mov
and
pop
and
and
or
xor
add
mov
daa
jb
jae
cmp
fucomip
pop
cld
sbbl
mov
or
shrl
or
pop
cli
incl
sub
xchg
mov
jge
mov
mov
outsl
pop
jecxz
mov
sbb
push
cli
jg
fbld
rcll
bnd
jb
push
push
pop
std
ljmp
out
xchg
push
inc
aam
call
andb
sar
das
std
sar
jmp
or
nop
repnz
jg
cmc
lcall
cmpsb
push
callw
clc
aam
lret
fs
sbb
xor
ficompl
jae
add
xor
sbb
push
pop
out
or
mov
lds
idiv
jmp
cli
or
decb
xor
mov
repz
xchg
fisubs
and
repnz
in
ds
cmp
cwtl
addr16
sub
hlt
mov
sbb
or
shrb
out
inc
hlt
ret
std
add
js
repnz
xor
sbb
dec
ja
ljmp
fwait
movsb
adc
jns
lods
decb
mov
cli
pushf
rolb
or
xchg
shr
xor
pusha
adc
jmp
incl
lret
xchg
iret
cli
call
inc
sarb
fdivrp
pop
in
lcall
jmp
test
push
jge
or
lcall
push
sbb
lods
adc
mov
xor
lods
jge
call
ds
in
mov
jp
or
sub
nop
inc
mov
lds
icebp
outsl
cld
cmpsb
mov
cs
fdivr
clc
dec
cld
stos
xchg
nop
ficoms
and
pop
bound
bound
inc
pop
imul
ljmp
js
inc
cld
or
push
icebp
push
and
jecxz
sti
or
call
int3
inc
sub
cmp
pop
dec
mov
inc
test
pushl
sub
sub
orl
adc
xchg
iret
sbb
push
das
cmc
jmp
mov
hlt
xchg
inc
aad
rorl
out
popf
cmpb
lcall
das
add
pop
jl
sub
or
adcl
fs
add
movsb
cmp
dec
mov
sti
cmc
arpl
stos
mov
jmp
call
or
ss
and
enter
pushf
stos
jno
xchg
loop
mov
mov
mov
hlt
mov
sbbb
dec
fucom
fxtract
pop
clc
incl
xor
cld
mov
sahf
fs
leave
fcmovb
jmp
addr16
ffreep
outsl
mov
sub
xchg
push
push
out
jb
fsts
incl
shl
cmp
mov
and
out
insb
out
push
movsb
lock
mov
adc
clc
push
fistpll
test
lods
rcll
in
pusha
xchg
outsl
hlt
call
sbb
mov
ret
cmpsb
test
rep
aaa
clc
nop
mov
sub
mov
call
into
jg
mov
nop
cmp
cs
sub
cli
es
xor
push
out
cs
ficomps
cli
pop
std
ljmp
fdivl
in
in
xor
ljmp
mov
jg
mov
pop
jge
xor
fcomps
jecxz
dec
shrb
sbb
sti
push
mov
and
pop
add
push
hlt
mov
push
cmp
ljmp
ficoml
mov
movsb
stc
icebp
hlt
pushl
lods
mov
mul
mov
push
sub
incl
mov
in
push
cmpsb
stc
scas
sbbb
rcl
push
push
mov
loopne
sbb
ljmp
pop
cmp
add
lods
lcall
sub
mov
xchg
adc
fstps
pop
hlt
dec
std
test
mov
pop
jl
dec
jg
fnsave
jmp
cwtl
and
jge
inc
dec
sub
hlt
xor
mov
das
mov
loopne
fistpl
clc
xlat
jo
or
pop
jae
or
decl
mov
mov
fidivrl
int3
dec
cmc
flds
cmp
adc
sarl
mov
and
cmp
fidivs
dec
jg
popf
push
or
mov
mov
das
mov
scas
enter
push
jg
test
js
dec
mov
rcll
dec
xor
rcr
loopne
sbb
dec
sbb
test
out
fidivrl
xor
push
and
mov
xchg
outsb
fdivr
pushl
fcmovnbe
cld
adc
pop
mov
clc
xor
fildl
jg
pop
iret
xor
mov
or
lods
cmpsb
xchg
push
xor
push
mov
pusha
ja
shlb
adc
fnstsw
mov
inc
cwtl
xchg
cmpb
and
mov
adc
mov
call
jg
or
loope
in
div
pop
cmp
stc
cli
sub
adc
lret
loope
pop
push
xor
jg
cmp
arpl
enter
push
xchg
iret
push
mov
mov
pop
imul
clc
and
ret
xor
pop
xor
cld
xchg
xchg
enter
jns
cmp
mov
fsubp
inc
fmul
jecxz,pt
fisubrl
dec
ja
mov
jo
jl
push
pop
cld
ljmp
pushf
xchg
or
push
dec
xlat
sbb
or
pop
mov
roll
imul
lcall
mov
ds
cltd
fs
dec
mov
into
decl
aad
test
add
push
xchg
inc
push
cmp
aad
jmp
icebp
outsl
fcoms
test
push
mov
mov
lcall
out
orb
push
push
pop
dec
pop
or
rolb
dec
dec
call
push
inc
jg
je
mov
call
mov
mov
sbb
adc
clc
andb
test
loop
cmp
or
jge
repnz
aaa
pop
mov
cmp
dec
ljmp
jp
jbe
jl
dec
js
lds
inc
insb
aaa
mov
lahf
mov
mov
fwait
shll
cmp
loopne
xchg
fs
ret
or
stc
sahf
movb
call
hlt
hlt
mov
into
hlt
pop
loopne
popa
gs
mov
push
stc
push
pop
jg
mov
pop
popw
pop
ret
sbb
jmp
mov
add
iret
lods
push
sar
call
push
push
sub
pop
fsubs
mov
jp
inc
fs
mov
pop
fwait
adc
push
sbb
add
adc
cmp
adc
inc
push
mov
adc
inc
mov
fwait
sahf
mov
cli
sbb
ret
subb
sahf
aam
mov
mov
fucomip
jmp
in
pop
cli
dec
adcl
enter
add
inc
jmp
cmp
xlat
jns
fadd
xchg
cmp
cmpsl
sbb
ss
cmp
dec
xchg
inc
push
push
movsl
incl
and
pop
jb
jno
xor
mov
adc
test
rcr
push
mov
test
fbld
sub
aad
push
adc
xor
call
sub
enter
fldenv
leave
stos
push
imul
xlat
xor
jle
out
dec
xchg
je
lock
jno
leave
pusha
and
dec
stc
pop
sti
inc
pop
or
or
push
repnz
das
icebp
jg
dec
mov
sub
adc
sbb
pop
mov
push
shrl
ljmp
mov
and
cmp
jmp
jp
cmp
mov
push
div
push
cmp
ljmp
loop
icebp
jg
sahf
jp
pop
pop
movl
aad
jns
in
jg
pop
cmp
sbb
testb
cmp
test
ljmp
cmp
sub
sti
mov
insb
mov
or
jmp
and
pop
dec
enter
fmulp
cld
xor
aad
outsb
cmp
popf
mov
int3
insb
in
sub
jmp
push
xchg
push
pop
and
xchg
push
mov
pop
xchg
fcoml
and
cmc
xchg
push
push
inc
adc
mov
stc
dec
sbb
jp
xor
pusha
xchg
mov
adc
call
call
adc
ja
adc
add
jns,pn
test
pop
mov
jmp
sti
test
inc
mov
jae
fidivrs
sbb
jg
pushl
push
icebp
es
and
add
test
sar
pushl
pop
in
loope
in
dec
andb
push
je
les
jmp
sub
cmp
call
aam
rcll
mov
pop
ljmp
cmc
inc
scas
inc
lret
and
add
lret
pushf
or
dec
jl
or
cltd
mov
mov
pop
dec
pusha
pushf
decl
fnstsw
call
mov
mov
pop
dec
sbb
mov
scas
dec
lds
mov
lds
in
clc
je
cmp
mov
mov
mov
inc
iret
jle
out
mov
test
dec
ljmp
shl
add
mov
lock
jl
mov
add
jg
pop
mov
stc
loope
loope
xchg
das
inc
in
nop
sbb
in
decl
xchg
mov
push
ficoms
cld
sub
repnz
das
icebp
call
xchg
add
sarl
aaa
out
sub
push
pop
decl
ds
mov
data16
data16
jo
test
mov
dec
push
call
inc
pop
in
push
sbb
enter
test
lcall
rorl
aad
adc
sub
sar
pop
cmp
mov
movsl
decl
aam
jp
dec
push
fsubrp
repnz
mov
jnp
sbb
icebp
incl
data16
or
xlat
sahf
dec
sarb
sub
pop
fsubrp
and
out
mov
ss
mov
pop
outsl
push
sub
in
jne
jnp
push
push
mov
pushl
das
adc
xor
fcmovb
xor
mov
pop
rcrb
xor
ja
sbb
xchg
inc
and
rorl
iret
aam
lcall
mov
inc
or
daa
lods
xchg
jnp
pusha
adc
out
mov
in
shlb
cmp
sbb
lea
cmp
test
decl
dec
out
inc
bound
dec
test
lods
test
fildll
call
movsb
sbb
inc
xor
hlt
push
incl
fisubrs
mov
inc
inc
jns
dec
or
or
mov
ljmp
std
fdivr
inc
sub
ficomps
inc
mov
inc
fstps
push
dec
jnp
clc
pop
test
dec
roll
lods
mov
addl
cld
jg
mov
inc
daa
call
mov
cltd
xor
xchg
mov
mov
push
scas
pop
pushl
decb
add
jb
scas
push
pusha
stc
xor
pop
gs
inc
test
mov
std
insb
dec
adc
and
insb
or
jne
ja
in
arpl
mov
test
movsb
rcll
js
sbb
xchg
or
mov
cmpsb
sub
add
xchg
sbb
add
xor
push
xchg
call
sbb
in
or
test
imulb
dec
outsl
sub
mov
in
sbb
cmp
fidivrl
mov
jmp
and
pop
sub
stos
inc
inc
ret
lock
stos
test
xchg
clc
push
aam
insl
sub
sub
notb
jo
sub
push
and
incl
jmp
mov
jl
mov
test
out
mov
jge
fnstcw
aaa
lahf
push
lock
xor
jmp
dec
sub
gs
cmpsb
mov
pop
xchg
adc
jg
sub
push
adc
ds
lods
or
dec
test
incl
stc
repz
loopne
sbb
data16
test
xor
inc
stos
mov
lods
mov
stos
cli
cmp
in
push
movsl
cmp
inc
incl
pusha
loop
movsl
in
movsl
shlb
jge
iret
inc
add
pushl
jne
mov
add
lret
pop
inc
push
aam
mov
shll
sub
je
dec
xchg
and
stos
rcrl
pop
mov
outsb
loope
out
test
cmp
call
sarb
js
cmp
xor
ret
push
push
repnz
icebp
mov
insl
or
mov
xchg
jb
push
in
leave
pop
inc
dec
imul
dec
rcrl
data16
xorb
imul
mov
lcall
pop
fmulp
xor
or
incl
cmp
sahf
sub
jbe
add
push
fstps
mov
dec
xor
fcompl
ljmp
fsubs
mov
sbb
lock
mov
ret
mov
dec
mov
icebp
pop
lahf
mov
lds
pop
ss
outsl
hlt
pushl
push
xchg
add
push
stc
or
test
call
sbb
subb
adc
cmpsb
push
jns
sbbb
cltd
call
int
sbb
dec
scas
call
mov
push
mov
call
mov
adc
jb
cmp
jp
dec
push
sbb
mov
cld
cmp
cmpsl
xor
shll
or
incb
mov
add
lcall
cmpsb
clc
repz
pop
xchg
ret
mov
pop
daa
xchg
inc
mov
data16
lcall
push
and
push
loop
inc
sar
mov
sub
jle
jecxz
mov
pop
jl
inc
add
and
jae
or
mov
or
or
inc
jbe
orb
sub
mov
inc
and
add
call
outsl
add
inc
call
mov
call
rol
or
inc
call
add
or
insl
imull
add
add
push
orl
or
notb
cld
mov
add
addl
mov
push
sbb
jne
inc
add
shlb
pop
mov
or
and
inc
inc
push
add
std
in
testb
pusha
mov
or
jne
inc
decl
or
jne
inc
sub
add
or
or
add
push
out
xchg
and
decl
mov
in
fiadds
inc
or
fisubrl
jle
inc
sbb
nop
mov
add
push
inc
fcmovnu
scas
mov
lods
mov
call
outsl
lods
mov
sti
adc
sbb
add
insl
imul
add
or
pop
imul
rcll
inc
and
pop
imul
or
inc
je
scas
xchg
mov
mov
jb
sarl
jne
dec
or
push
add
inc
cmp
or
inc
adc
mov
mov
pop
andl
lcall
jo
xor
push
add
inc
sbb
je
inc
imul
inc
xlat
or
imul
pop
lods
mov
pop
rolb
popf
mov
bound
sbb
or
push
pop
jns
add
add
call
lcall
add
cmp
insb
xchg
cmpsb
sub
pushf
imul
pop
es
xchg
sub
or
sbb
push
push
clc
in
call
insl
scas
pusha
adc
sbb
add
lock
mov
imul
scas
insl
xchg
cmp
lcall
add
frstor
int3
outsl
xor
or
rorb
mov
xlat
add
lods
jle
add
push
rorl
into
stos
jno
sbb
lret
out
mov
push
out
pop
mov
cmp
lods
adc
add
jl
cltd
imul
push
mov
xchg
lds
sbb
inc
adc
fcoml
scas
insl
test
jno
xchg
lcall
aas
or
lock
rorb
test
xchg
dec
int
rorl
add
push
pop
test
or
cmp
inc
fcomps
or
add
inc
add
out
or
test
mov
sbb
push
rcr
pop
add
ror
jl
and
in
lods
adc
pop
call
lods
mov
fmuls
and
mov
ret
mov
sub
mov
jne
inc
sub
pushf
insl
xchg
pop
cmpsb
push
inc
cltd
push
call
out
jne
dec
inc
cs
or
test
mov
test
push
inc
imul
aas
or
push
imul
outsl
sbb
xor
popa
jne
insb
xor
cmp
lea
pushf
shll
xor
inc
and
sbb
and
int3
sti
aas
sarb
bound
or
dec
xchg
push
xchg
mov
outsb
pop
sbb
int
sub
jbe
je
cmp
repz
mov
inc
fisttps
mov
pop
fistpl
sub
jecxz
sahf
pop
imul
mov
mov
add
ss
or
and
mov
pop
lea
mov
pop
xchg
dec
shlb
daa
shr
mov
ficoms
data16
inc
shl
sbb
and
inc
jbe
das
xor
loope
push
fld
xor
push
rcl
out
cmp
xchg
push
jo
pushf
push
xchg
dec
push
push
add
pop
push
pushl
jle
inc
mov
loopne
adc
adc
mov
mov
std
aaa
push
inc
jb
popa
je
push
push
gs
jne
jne
xchg
or
adc
inc
jbe
inc
jg
outsl
jb
outsl
fs
insb
insb
lods
sti
neg
outsl
arpl
push
jns
daa
insl
push
imul
sbb
bound
sbb
jo
gs
jae
jae
mov
arpl
jae
inc
pop
imul
fstpl
gs
imul
test
insl
arpl
jne
aas
sti
ja
push
je
push
outsb
ja
outsb
test
push
or
in
pushl
imul
insb
mov
imul
lret
outsw
inc
outsb
jne
cmovl
ss
in
pop
movl
inc
outsb
das
aaa
idivl
inc
imul
jo
dec
js
xchg
outsb
push
inc
insl
and
outsb
frstor
dec
mov
jae
jl
jne
data16
mov
imul
inc
movsb
inc
int3
jae
popa
imul
imul
outsl
jae
mov
mov
arpl
jbe
cs
sub
popa
outsb
cmp
dec
fcmovnb
mov
in
push
je
or
cmp
fcoml
inc
dec
bound
lods
imul
push
sub
xchg
arpl
les
outsl
and
jo
adc
mov
ret
ret
je
jb
jo
and
fadd
test
push
xchg
push
popa
or
xchg
inc
pusha
or
ss
aad
sahf
fs
ficomps
or
cld
dec
popa
insl
insl
out
adc
xchg
cmp
xchg
pushf
inc
gs
push
push
fs
push
sub
sbb
and
xchg
test
sub
or
xchg
jg
dec
js
inc
jae
or
dec
dec
jne
push
inc
imul
inc
mov
add
ret
xchg
sbb
sbb
mov
jno
push
add
outsb
xor
jns
push
popa
sub
js
inc
push
cli
inc
jae
xor
mov
fwait
mov
mov
mov
push
push
inc
fstp
mov
push
dec
gs
pop
ret
inc
jl
rol
inc
jecxz
enter
imul
push
jns
and
adc
iret
or
jo
xchg
sub
imul
rcrl
lds
push
clc
push
outsl
mov
insl
insl
test
outsb
gs
xor
cmp
xor
outsb
lock
push
lret
popa
bound
fwait
pop
cmp
test
inc
mov
js
xchg
insb
xchg
pop
inc
push
inc
jns
outsl
push
imul
adc
or
loop
inc
popa
pushf
dec
cwtl
fdiv
js
aad
sbb
mov
dec
lcall
sub
adc
pxor
xchg
mov
jns
out
mov
push
jp
inc
imul
add
mov
inc
test
cmp
jnp
cmp
jae
imul
into
dec
fcomps
push
xchg
and
pop
push
pop
dec
mov
jnp
iret
adc
inc
inc
adc
mov
mov
fimull
jmp
and
add
daa
mov
in
pop
add
sarl
pop
adc
rorb
inc
subb
or
wbinvd
add
das
fcmovnb
ss
cmp
pop
push
add
testb
fldenv
outsb
mov
add
aam
mov
and
add
pop
stos
add
insb
fs
das
fcoms
xlat
fidivs
mov
cltd
das
pop
and
jb,pn
or
or
ja
adc
or
add
push
orb
mov
imul
iret
adc
dec
pop
jmp
add
push
std
cmpsb
lods
sbb
rcrb
shll
inc
add
add
add
add
or
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
addb
add
js
add
sbb
add
mov
add
add
push
add
add
add
add
add
push
add
addb
add
or
add
add
pop
jbe
add
add
add
add
add
add
add
add
add
addb
add
lock
addb
add
or
add
jg
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
xchg
add
test
adc
sbb
add
add
subb
add
call
add
add
add
add
add
cmp
add
pusha
add
adc
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
xorb
add
add
mov
add
add
add
sbbb
add
add
adcb
add
sbb
andb
andb
add
add
nop
add
addb
add
or
add
add
add
add
lcall
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
add
add
add
push
mov
add
or
add
add
lock
add
or
add
mov
add
or
add
add
add
mov
add
or
add
add
add
mov
add
or
add
add
add
add
lcall
add
add
add
add
add
add
adc
add
lcall
add
add
add
add
add
add
mov
add
lcall
add
add
add
add
add
roll
lcall
add
add
add
add
add
roll
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
lcall
add
add
add
add
add
add
add
ret
add
lcall
add
add
add
add
add
add
jo
add
lcall
add
add
add
add
add
lds
add
add
add
add
add
lds
add
add
add
add
add
add
add
sub
add
push
add
add
js
add
mov
add
add
add
add
lock
add
or
add
add
add
lcall
add
add
add
add
add
add
lock
lcall
add
add
add
add
add
add
nop
movl
add
add
add
add
add
enter
add
add
add
add
enter
add
add
add
add
add
add
lcall
add
add
add
add
add
push
add
adc
add
lcall
add
add
add
add
add
push
add
add
add
or
add
add
mov
add
xor
add
pop
out
add
add
add
add
add
add
add
add
add
add
jg
fwait
add
faddl
out
mov
fldl
dec
lcall
ljmp
fiaddl
outsl
mov
mov
add
iret
mov
add
faddl
dec
sahf
mov
add
add
into
pushf
add
fadds
pop
mov
out
incl
dec
add
mov
add
mov
add
cld
add
mov
add
faddl
jg
cltd
add
fwait
add
fwait
add
incb
ljmp
cld
add
fwait
add
filds
incb
iret
out
mov
add
filds
out
pushf
add
cli
add
cwtl
add
flds
outsl
lcall
out
mov
add
lahf
sahf
add
mov
add
cld
add
mov
add
fiaddl
jg
mov
add
sahf
add
sahf
flds
dec
mov
mov
add
mov
add
iret
cwtl
add
mov
add
mov
cli
add
fiadds
iret
into
mov
add
scas
incl
out
sahf
popf
add
scas
cltd
add
incl
dec
out
fiadds
out
fwait
add
stc
add
faddl
out
lahf
incb
jg
popf
add
mov
sahf
add
out
cli
add
mov
add
flds
out
out
cld
add
fiaddl
fisttps
lahf
add
out
pushf
add
pushf
add
mov
incb
dec
out
mov
add
mov
popf
add
iret
mov
add
add
mov
add
clc
add
out
cwtl
add
lahf
sti
add
sahf
add
scas
fadds
jg
incl
dec
mov
add
sahf
add
cltd
add
mov
add
mov
pushf
add
scas
popf
add
cli
add
fidivrs
add
mov
add
scas
faddl
jg
mov
add
fistpll
add
faddl
pop
fistpll
out
out
cli
add
mov
add
filds
pop
scas
mov
add
lcall
into
incb
outsl
lahf
faddl
popf
add
fildl
fistpll
incb
lcall
out
cld
add
fldl
fiadds
pop
mov
add
cld
add
pushf
add
scas
filds
dec
out
fiadds
pop
scas
lcall
into
fadds
out
scas
fadds
dec
mov
add
stc
add
add
out
sti
add
fadds
dec
lahf
incl
dec
lahf
mov
add
iret
lcall
ficomps
add
sahf
mov
add
flds
out
fwait
add
cltd
add
out
sti
add
cli
add
lcall
fdivrp
add
fiaddl
ljmp
cli
add
out
mov
add
fiaddl
fildll
mov
add
stc
add
fldl
iret
ficomps
add
popf
add
out
sti
add
sahf
filds
jg
sti
add
out
incl
dec
scas
mov
add
cld
add
clc
add
mov
add
mov
add
mov
add
popf
add
fldl
dec
cwtl
add
fldl
mov
fwait
add
filds
jg
mov
add
fiaddl
iret
out
flds
jg
mov
add
fldl
outsl
std
add
lahf
flds
jg
filds
fistps
sahf
add
sti
add
lahf
add
fildl
outsl
into
mov
add
incb
mov
add
fldl
pop
out
cltd
add
cwtl
add
cli
add
sti
add
fldl
outsl
out
mov
add
fwait
add
popf
add
incb
pop
into
stc
add
fldl
fildll
mov
add
push
subb
mov
sub
test
shr
or
inc
sbb
imul
jns
pop
push
mov
dec
push
test
das
sub
mov
pop
xor
mov
mov
push
in
mov
mov
lret
jb
dec
jge
movsb
adc
add
test
xchg
inc
sbb
or
stos
std
leave
xchg
cmpps
mov
imul
lods
mov
into
rcl
cmc
aaa
les
rcr
sbb
sar
outsl
fwait
fwait
fwait
xchg
add
pop
leave
test
and
pushf
push
scas
mov
scas
cmp
mov
inc
mov
mov
das
popf
jmp
mov
inc
clc
ja
loop
js
mov
adc
jl
shll
push
mov
imul
and
out
push
xchg
mov
test
dec
fisttpl
adc
xor
cltd
jb
pushf
ljmp
pop
fiaddl
sarb
dec
gs
aam
mov
int
test
les
mov
test
xorl
aaa
push
sbb
and
data16
lds
nop
cmp
pop
xchg
orl
xchg
cmp
fnstenv
adc
lock
ja
mov
and
lcall
xor
mov
dec
dec
or
iret
and
stos
ss
test
mov
xorl
data16
cmp
mov
dec
das
jl
daa
imul
psadbw
sbb
fsubp
cld
jmp
loope
das
mov
repnz
dec
sbb
jb
icebp
pop
cli
incl
cmc
popa
aad
add
cmp
out
jne
pop
icebp
fs
stos
and
mov
jl
insl
fisubl
push
popf
jle
sbb
cwtl
xchg
cltd
cmp
xor
mul
push
ficoml
shl
imul
loopne
mov
and
sti
lret
mov
aaa
in
inc
testl
xchg
lcall
sti
nop
xor
lcall
mov
pop
mov
repz
incb
sbb
movsl
sbb
loopne
sub
xor
outsl
mov
xlat
loopne
lret
leave
dec
xchg
adc
in
out
mov
aas
lcall
ret
jecxz
pop
insb
int3
or
scas
inc
xchg
push
insl
push
inc
jp
fs
test
push
mov
rolb
stos
mov
popa
adc
jle
cltd
and
xor
mov
in
cmp
dec
sbb
out
pop
lock
bound
mov
xchg
lods
jne
sub
call
dec
xor
pop
sub
js
add
push
fdiv
sub
shll
out
sbb
scas
sub
lods
mov
in
cltd
movsb
hlt
adc
mov
adc
stos
fmuls
mov
ds
pusha
add
test
movb
jg
in
cmp
mov
xor
inc
out
inc
cs
adc
xchg
pop
imul
ja
pop
xor
movq
push
add
or
les
inc
mov
fstps
jbe
push
sti
pop
pop
dec
insb
test
lods
pop
dec
pop
sub
mov
inc
dec
or
fdivr
xor
jns
mov
rclb
inc
insl
adc
adc
popf
xchg
movb
test
imul
ja
pushf
pop
sub
gs
and
pop
and
jle
icebp
add
clc
stos
mov
add
dec
pop
mov
lods
dec
ja
dec
pop
pushf
fs
push
sbb
jb
fstpl
call
sub
test
test
mov
dec
sbb
stc
xchg
mov
aam
mov
inc
std
dec
or
xchg
sbb
stos
mov
arpl
test
movsl
ja
loop
les
or
mov
inc
ret
add
push
cmc
pop
inc
mov
int
inc
dec
mov
das
lahf
inc
add
mov
imul
in
pop
mov
inc
mov
or
popl
dec
xlat
push
test
jne
or
int3
or
cmp
es
test
test
fldl
sti
push
sub
inc
pusha
fidivs
subl
jae
sub
mov
and
flds
fimull
dec
lds
jbe
add
pop
ret
std
push
push
addr16
sarl
paddb
jecxz
dec
inc
mov
inc
push
xchg
sub
aam
cli
or
imul
xor
dec
and
adc
lock
loope
gs
add
add
and
add
inc
add
add
add
add
add
add
add
add
push
pusha
jg
pop
jnp
popa
jp
push
js
push
jnp
pop
pushl
push
pushl
jnp
pop
incl
push
push
jns
push
pushl
push
incl
push
pop
jp
push
pushl
pushl
jns
pop
pushl
pushl
push
jg
pop
incl
add
add
ror
push
lock
push
rol
hlt
mov
mov
repz
mov
push
mov
sar
mov
ret
mov
sar
sarl
sti
les
push
ret
lcall
incl
add
add
icebp
jmp
repz
sar
cld
jmp
clc
out
in
stc
out
stc
jmp
cli
loope
in
cld
call
push
jecxz
cld
xlat
mov
push
sarb
std
fnstcw
cld
xlat
scas
cli
shrb
lcall
ret
mov
add
cld
ljmp
std
in
cli
fcmove
sti
in
cli
fmul
cld
fcmovne
stc
fcmovnb
stc
loope
call
push
mov
sti
sarb
sti
shll
push
shrb
push
shrb
lcall
mov
mov
cmc
sti
in
sar
cld
in
fcos
stc
jecxz
jmp
clc
out
sar
std
out
push
out
cli
ljmp
neg
leave
cli
aad
clc
in
cli
fadd
cli
fdivrs
cld
mov
call
mov
stc
int
clc
rol
jmp
mov
add
hlt
call
stc
fmul
push
enter
mov
call
leave
lods
out
shll
out
mov
mov
out
cmpsl
mov
call
ret
fadd
scas
push
shrb
shlb
mov
mov
mov
push
push
fadd
call
xchg
popf
mov
jp
pushl
test
mov
mov
decl
mov
pushl
jmp
cli
pushl
out
pushl
cltd
push
ret
cwtl
std
aam
call
ljmp
mov
add
mov
stc
lock
fnstsw
mov
mov
pushl
xchg
cmpsb
pushl
test
call
ret
out
mov
sbb
cld
incl
cltd
mov
roll
stc
fstpt
ljmp
mov
add
mov
lods
push
cli
out
fmul
sar
sbbl
mov
orb
lahf
lcall
xchg
sahf
decl
loop
decl
loopne
cwtl
movsb
lcall
pushf
push
mov
cld
fcmovnb
std
lret
jno
call
mov
incl
add
add
lods
test
cli
sti
cli
call
mov
test
ljmp
fs
shll
scas
jge
call
mov
call
icebp
clc
decl
out
lcall
fwait
ret
jmp
mov
mov
jmp
mov
add
stos
movsl
stc
stc
stc
dec
rol
mov
mov
xchg
cwtl
mov
pushl
push
ljmp
incl
mov
xlat
decl
lock
mov
cld
incl
loop
decl
xchg
jecxz
clc
sar
jns
call
mov
add
lods
test
sti
cld
cmc
inc
fdivr
jl
sar
cwtl
sar
fwait
int
arpl
dec
cwtd
jmp
scas
pushl
leave
pushl
enter
jge
xlat
incl
shl
incl
loop
jnp
mov
stc
jecxz
push
rol
ljmp
mov
add
mov
push
div
mov
pop
incl
mov
cmp
call
test
pushl
aad
imul
icebp
decl
loope
pushl
fdivrp
jp
incl
shll
clc
aam
jmp
mov
add
aam
mov
div
clc
dec
int
ljmp
xlat
ljmp
fdivrp
dec
jae
ljmp
aas
dec
pushl
pop
jg
push
xchg
lret
jmp
in
pop
cmpsl
loope
push
test
out
jge
icebp
incl
ljmp
loop
pop
test
sar
mov
into
cli
int
pushl
sarb
mov
std
cli
mov
lods
in
lcall
out
cmp
ljmp
inc
push
aas
jl
jmp
in
lcall
in
call
hlt
decl
idiv
push
mov
incl
in
call
lcall
lock
in
ljmp
out
movsl
stc
jecxz
sti
ret
lods
jge
fnstcw
add
into
mov
std
jmp
aad
inc
test
pushl
dec
popa
ljmp
push
imul
xor
in
cmp
mov
cmp
out
jmp
clc
decl
stc
cmp
xchg
out
cmp
mov
fidivrs
int
cli
ret
ret
jnp
call
lds
add
mov
std
clc
cli
decl
adc
decl
cmp
sub
decl
das
test
or
scas
call
aas
sar
dec
lret
jmp
push
fcos
sub
jmp
popa
ljmp
addr16
jmp
push
sub
jmp
mov
aad
sti
les
call
ret
mov
sarl
idiv
xchg
pushf
push
xor
cmp
sub
ljmp
jmp
xor
jmp
push
lret
lcall
pop
aad
ss
pushl
jg
pushl
jle
ljmp
jns
ljmp
pop
loope
and
mov
div
fcos
cli
rol
mov
jp
iret
ret
fidivrs
idiv
cmpsb
lret
xor
ljmp
js
xor
ljmp
test
call
cli
incl
idiv
push
mov
lcall
call
out
lcall
std
call
std
cmp
incl
in
mov
stc
icebp
xlat
cld
lret
mov
call
mov
faddp
mov
jmp
std
cmp
gs
lcall
pop
mov
jmp
std
ljmp
cli
jmp
clc
pushl
stc
cli
ljmp
stc
jmp
lcall
cld
lcall
stc
call
jmp
cli
ret
mov
jae
aam
mov
add
into
ret
idiv
jmp
mov
incl
sti
cmp
incl
cli
incl
cli
lcall
idiv
pop
mov
stc
jmp
idiv
outsb
sar
pushl
cli
ljmp
cmc
jmp
sti
lcall
std
lcall
out
jmp
ret
imul
fcos
sti
mov
pushl
mov
add
out
mov
clc
clc
cli
ljmp
jge
ljmp
cmp
cs
cmp
incl
sti
decl
call
clc
lcall
cli
jmp
cli
lcall
stc
jmp
jmp
stc
jmp
incl
mov
cli
mov
test
aad
incl
add
add
rol
cli
sti
stc
cli
stc
hlt
inc
jmp
cli
pushl
aam
mov
sar
mov
jecxz
call
in
clc
fsubr
out
call
lock
jmp
jmp
ljmp
in
out
cli
in
sar
cli
repnz
jmp
push
mov
cmp
rol
jmp
ret
cli
cli
stc
stc
clc
clc
cli
push
repz
stc
idiv
sti
idiv
sti
sti
cli
cli
cli
stc
cld
idiv
cld
hlt
hlt
stc
clc
hlt
stc
hlt
push
sti
jecxz
cld
hlt
in
push
call
clc
xlat
cli
rcl
dec
aam
sti
sarb
ret
jmp
std
cld
sti
stc
div
stc
cld
clc
cld
stc
cli
clc
sti
stc
cli
hlt
std
clc
stc
stc
std
clc
clc
cli
std
push
sti
hlt
push
cld
cli
std
stc
sti
out
clc
repnz
stc
out
repnz
in
dec
mov
test
fimull
jg
lret
jmp
mov
add
fcmove
cld
idiv
idiv
clc
clc
sti
clc
cli
stc
cli
idiv
clc
stc
idiv
cli
stc
std
idiv
sti
div
cld
idiv
std
icebp
cld
clc
stc
stc
stc
icebp
push
cld
repnz
stc
stc
icebp
push
loopne
dec
jbe
std
movsb
cmp
push
mov
dec
addr16
incl
add
add
fmul
push
idiv
clc
cli
sti
clc
clc
stc
cld
cld
cli
cli
sti
sti
hlt
sti
clc
idiv
stc
clc
clc
cld
std
cli
cli
cld
cld
sti
cli
stc
cli
div
repz
cld
idiv
lock
dec
movsl
xchg
stc
mov
push
fsts
xchg
incl
add
add
cld
cmc
std
std
sti
push
std
cmc
stc
std
cld
push
sti
cld
cli
cli
std
push
stc
cli
cld
cli
idiv
idiv
std
stc
clc
cmc
stc
std
stc
idiv
sti
cli
cld
cli
clc
repz
cli
cli
cli
push
ljmp
cli
aam
ficoml
mov
clc
out
cld
clc
stc
cli
stc
cmc
push
cld
clc
push
sti
stc
push
stc
idiv
stc
idiv
std
std
stc
stc
sti
stc
cld
cli
push
std
clc
cli
sti
push
cli
std
push
clc
std
clc
idiv
std
cld
stc
push
ljmp
fbstp
test
stc
fnstcw
push
in
push
out
sti
in
push
xlat
cld
fstp
ljmp
out
fxch
out
iret
aam
loopne
aam
lret
call
int3
lret
ror
call
mov
fwait
call
sarb
clc
mov
push
aad
push
fadd
push
sarl
jmp
mov
ljmp
call
mov
mov
fidivs
lods
fnstcw
test
xlat
mov
fidivl
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
add
add
fisttps
add
add
add
add
add
add
add
add
add
add
add
add
fmulp
iret
fsubs
test
call
cmpsb
lods
call
stos
stos
jmp
lods
stos
fldt
cmpsb
dec
cmpsb
xchg
fisubrl
jns
loope
enter
add
loop
sar
icebp
in
cld
loopne
clc
out
sti
cmc
aad
clc
call
int
loop
stc
fnstsw
cli
jmp
inc
lea
incl
add
add
rcr
in
xlat
sar
in
int
jmp
mov
fsubs
lods
dec
sarl
mov
mov
cli
xlat
mov
mov
iret
int3
incl
add
add
jmp
lret
lret
mov
test
jmp
scas
xlat
jp
sti
incl
xchg
mov
iret
incl
add
add
xlat
fdivrp
out
fcos
fwait
mov
pushf
jmp
mov
call
fdivr
mov
shll
jecxz
add
add
fcmovnu
jmp
fcomp
decl
andb
jne
aad
jo
in
mov
out
incl
xchg
mov
stc
fadd
inc
nop
nop
fadd
sar
out
fdivrp
jbe
repnz
cmp
jns
dec
test
lcall
out
incl
shl
jnp
sar
hlt
faddp
mov
enter
add
add
call
out
das
dec
mov
jmp
pop
lcall
jl
cmp
lock
sar
clc
fcmovnb
inc
lea
incl
add
add
in
call
fdivrp
pushl
pop
int3
cmp
xchg
pushl
js
decl
icebp
jp
sti
ds
sti
incl
stc
jecxz
inc
xchg
xchg
int3
incl
add
add
out
jmp
mov
jmp
jp
pushl
fwait
idiv
push
mov
lcall
cli
decl
sti
jmp
idiv
stc
fadd
mov
ret
repz
out
cli
icebp
clc
lcall
sar
cltd
int
lcall
fdivp
pushl
idiv
fdivp
cld
in
in
ret
xchg
test
aad
sar
imul
in
stc
repnz
std
cmc
idiv
idiv
sti
push
cli
cli
clc
repz
sti
lock
stc
cli
in
cli
repnz
in
mov
in
mov
cmp
add
add
out
jmp
idiv
cli
cli
sti
idiv
div
sti
push
cld
cli
clc
sti
cld
sti
clc
repz
push
out
stc
test
call
jle
dec
ret
stc
repnz
stc
hlt
lock
stc
cli
stc
stc
icebp
sti
std
clc
cli
stc
cld
push
stc
idiv
out
cli
in
loop
fisubrs
incl
add
add
icebp
in
cmc
fcmovne
push
loope
std
xlat
lret
in
into
sar
rol
jmp
lret
mov
call
mov
int3
incl
add
add
sti
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rorb
add
add
xor
add
pusha
add
add
add
add
add
add
add
add
into
sar
mov
jl
jl
outsb
jle
pop
jg
popa
incl
data16
incl
js
incl
insl
arpl
jne
arpl
jg
imul
fs
jl
incw
insl
pop
incl
insl
gs
jle
pop
jl
popa
jg
pop
incl
imul
imul
test
jnp
popa
incl
push
jns
push
pushl
add
add
imul
insl
push
pushf
imul
xchg
pop
lcall
pop
push
decl
bound
mov
decl
pop
popa
incl
push
pop
decl
pop
popa
decl
pop
push
decl
pop
call
pop
incl
pop
decw
pop
arpl
mov
decl
pop
incw
popa
pop
decl
pop
pop
incl
add
lahf
imul
std
lret
sar
not
fdivrp
stc
enter
ror
cld
aam
call
sar
sti
rcr
std
rcr
cld
xlat
cli
rcr
push
clc
iret
aam
stc
lret
cli
into
fcos
stc
rcr
std
aad
std
xlat
sar
sti
fcomp
sti
not
fcos
sti
enter
int
cld
fcos
cli
aad
sti
enter
iret
sar
stc
rcl
sti
lret
not
clc
into
sar
cli
aad
sti
lds
jnp
push
xchg
insb
jo
ror
clc
jmp
fdivr
in
stc
jmp
aam
imul
int
cli
call
lret
cld
jecxz
sti
ljmp
neg
enter
cld
fdivrl
cli
fmulp
sti
fidivrs
cli
sarl
std
fidivl
stc
fldt
sti
shlb
clc
shrb
cli
mov
cld
shlb
call
pop
incl
add
add
aam
stc
in
fcos
cli
in
fdivr
cli
ljmp
imul
sar
cli
jecxz
cld
loopne
stc
fmulp
push
std
loope
cli
loope
cli
fmulp
cld
loopne
push
loopne
stc
fadd
faddp
stc
loopne
sti
fstpt
std
xlat
cld
int
push
stc
fdivs
not
lods
push
int
cld
iret
scas
push
iret
lods
push
shrl
push
leave
aad
xchg
arpl
andb
popf
addr16
rcl
aam
cli
repz
cli
repnz
cld
out
push
call
lret
push
in
cli
call
int3
stc
out
cli
stc
in
push
in
clc
in
std
out
cli
cld
loopne
push
faddp
cld
rol
sti
fistpll
stc
ffree
cli
rol
fdivs
push
fdivs
dec
test
not
mov
stc
leave
mov
cld
aad
cld
aam
std
leave
sar
xchg
pop
popa
pushl
push
add
lret
xlat
cld
out
fdivr
sti
out
fdivr
sti
ljmp
cld
jmp
out
sti
in
std
fcmovnbe
push
clc
in
std
out
clc
jmp
std
fmul
cld
fadd
stc
fadd
stc
faddp
push
fidivrs
sti
fnstsw
cld
fidivrs
clc
loope
clc
aam
cld
sarb
stc
xlat
mov
clc
fidivl
not
mov
clc
aam
clc
rcl
decl
incw
add
add
std
icebp
fdivrp
sti
in
cmc
in
loope
sti
repnz
in
sar
imul
aad
cld
in
cld
jecxz
clc
loop
jecxz
cld
out
stc
in
int3
cld
loope
clc
out
clc
cld
fcmovnb
std
fcmovnb
push
fadd
sti
loope
stc
xlat
stc
fld
stc
fistpll
cld
sarl
std
aad
push
cld
leave
stos
std
aad
std
mov
call
addr16
add
add
aam
sti
cmc
loopne
imul
fdivr
clc
lock
sti
in
push
jmp
int3
cld
out
cli
fidivrl
dec
mov
cmc
int3
scas
clc
lods
push
shrl
clc
into
scas
stc
shll
clc
lret
scas
push
les
cli
ret
test
push
lret
stc
ret
sahf
cld
rcrb
sti
shrl
push
fidivl
stc
aad
clc
int
decl
addr16
add
add
fdivr
stc
repnz
cld
repnz
cli
jmp
fldcw
mov
int3
mov
inc
mov
mov
mov
inc
xchg
mov
cmpsb
lcall
lret
mov
call
mov
stc
pushl
cli
ljmp
idiv
jns
jmp
mov
mov
movsl
cld
int3
test
clc
sarb
cli
aad
inc
call
pop
incl
add
add
xlat
fdivr
cld
out
loope
clc
mul
fistpll
nop
mov
mov
mov
sbbb
mov
fwait
pushl
xchg
movsl
pushl
fwait
test
call
sar
mov
repnz
jle
icebp
pushl
std
pushl
sti
decl
cltd
mov
dec
test
cld
shlb
repz
lcall
imul
mov
jge
fstp
cli
hlt
jmp
cmc
icebp
iret
sahf
mov
mov
xchg
mov
xchg
popf
pushl
nop
movsb
ljmp
mov
pushl
mov
ret
call
mov
int3
call
call
jl
hlt
call
xchg
lods
mov
mov
cli
int
stc
mov
stc
int
cld
rol
xchg
popa
pop
incl
add
add
clc
lock
cwtl
scas
pushl
mov
mov
xchg
inc
jge
dec
mov
ljmp
mov
xchg
mov
sar
xchg
mov
test
idiv
xchg
cld
incl
call
in
call
fdivr
call
cmpsb
mov
frstor
scas
push
aad
cld
fdivrs
jmp
jno
incl
add
add
fstp
sti
lock
sti
std
repnz
movsl
mov
scas
mov
jmp
nop
scas
pushl
outsl
jnp
ret
jle
pushl
xchg
lcall
xchg
stos
call
test
call
incl
jmp
call
mov
mov
movsl
xchg
test
lahf
test
jmp
movsl
jp
cli
aam
sti
faddp
push
fstpt
call
insl
incl
add
add
sar
cli
hlt
jmp
cld
lock
scas
cmpsb
mov
movsl
mov
xchg
mov
stos
jg
mov
outsb
jno
mov
jb
jmp
nop
mov
call
cmpsl
sar
lahf
lret
call
hlt
cli
decl
repnz
mov
cmc
lcall
movsb
mov
lcall
scas
jmp
stos
test
cld
sarl
push
sarl
call
jae
incl
add
add
out
div
call
jmp
lea
call
xchg
mov
test
pop
pushl
imul
incl
mov
lret
decl
idiv
mov
idiv
mov
clc
decl
cmc
clc
decl
lock
incl
mov
mov
loope
cmp
fcmovb
std
sar
fcmovnb
clc
lret
popf
insl
push
incl
add
add
cld
lock
clc
hlt
in
ljmp
xchg
mov
incl
ret
xchg
call
pop
cmp
dec
pushl
dec
decl
decl
decl
sahf
sar
lret
mov
call
call
icebp
repz
std
cmc
incl
rcr
lods
lret
call
xchg
clc
fcmove
push
aad
push
fidivrs
call
push
incl
add
add
fsub
stc
cld
idiv
stc
std
jmp
popf
cmpsb
incl
xchg
ret
xchg
decl
sahf
ljmp
test
jbe
lods
ljmp
mov
jns
lret
jl
lret
popf
into
pushl
aad
jge
subb
jnp
loop
jle
xchg
sti
incl
mov
int
mov
mov
stc
fmulp
push
out
cli
xlat
mov
jno
test
incl
add
add
out
div
in
stc
repz
into
jge
incl
mov
xchg
cmp
cmp
call
mov
push
imul
js
aam
imul
ljmp
jge
icebp
incl
in
call
fsubr
jge
jl
fdivr
test
leave
jl
lret
fldenv
stc
fxch
cld
rol
clc
mov
jae
jne
incl
add
add
out
div
repz
sti
clc
icebp
call
mov
iret
pushl
fcos
jns
into
pushl
inc
pop
ljmp
ds
cmp
jae
inc
pop
cmp
mov
in
insb
movsl
loop
movsl
loop
mov
jp
in
decl
xlat
repnz
repnz
jnp
lock
jae
fdivrp
sbbb
fldenv
mov
clc
iret
mov
jne
jl
imul
add
add
lea
loop
jmp
cli
clc
repz
cmpsb
sar
insl
lcall
gs
sar
inc
push
ljmp
inc
push
cmp
insl
xchg
ljmp
in
bound
pusha
mov
in
imul
jns
repz
clc
stc
decl
leave
stc
ljmp
out
jmp
jmp
imul
std
loope
cli
fcmovnb
cli
leave
lret
mov
jl
jne
outsb
incl
add
add
test
clc
repnz
cli
icebp
incl
mov
fdivrp
addr16
dec
jno
ljmp
inc
pop
pushl
cmp
mov
dec
mov
call
out
call
lock
bnd
lcall
jmp
pop
mov
pushl
stc
incl
jmp
ljmp
ljmp
ljmp
jmp
pop
stos
loop
bound
into
mov
std
loope
push
loope
cli
lret
hlt
mov
jp
test
xchg
test
in
in
sti
stc
stc
sti
cld
cli
pushl
jmp
pusha
mov
lock
jmp
ds
outsb
ljmp
inc
push
xor
lcall
push
stos
idiv
dec
stos
cli
decl
repnz
lock
out
call
decl
cli
ljmp
icebp
decl
repz
cld
call
call
repnz
call
jmp
jmp
cld
in
sti
loopne
push
rol
stc
mov
je
jle
pop
incl
add
add
nop
cmp
call
cmc
push
sti
repnz
in
lcall
call
in
call
lock
inc
ljmp
inc
pop
pushl
bound
mov
decl
incl
sti
incl
incl
std
cmp
mov
std
pushl
idiv
jns
sti
decl
cld
decl
incl
repz
ljmp
lods
jmp
push
cmpsb
icebp
fnsave
leave
cli
in
std
ror
sti
mov
jp
andb
iret
cwtl
jg
out
out
stc
cli
idiv
clc
repnz
ds
decl
das
stos
call
sub
pushl
inc
pop
pushl
jno
lcall
dec
mov
adc
lcall
dec
dec
lret
dec
leave
jmp
popa
sar
pop
gs
sbb
sub
loop
xor
loopne
jb,pn
ljmp
jnp
pushl
js
pushl
jb
ljmp
outsl
in
sub
jmp
fs
shlb
out
sti
leave
push
mov
ljmp
jno
incl
add
add
popf
cmp
loop
cli
clc
clc
push
div
pushl
ds
add
call
and
cmp
lcall
jnp
decl
sbb
lods
lcall
aaa
mov
jmp
inc
enter
lret
jmp
push
iret
jmp
fcos
daa
push
icebp
ljmp
jo
pushl
jns
ljmp
je
pushl
in
ljmp
push
ljmp
pop
loope
push
push
fdivr
sbb
call
pushf
test
cli
in
cli
call
lret
std
mov
jns
je
imul
fstps
call
push
repnz
cmp
mov
ljmp
inc
pushl
ljmp
cmpl
lcall
push
aas
mov
jmp
push
iret
ljmp
push
xlat
ljmp
popa
fcos
xor
xor
ljmp
jne
pushl
jl
ljmp
outsb
out
pushl
outsb
out
jmp
pop
jecxz
es
jecxz
pop
push
sar
shlb
int
repz
sti
std
mov
jns
andb
rcrl
out
sti
div
clc
div
decl
out
ljmp
jbe
pushl
js
ds
cmp
inc
jo
cs
cmp
cli
decl
stc
call
idiv
jnp,pt
ljmp
push
sub
fdivr
ja,pt
decl
idiv
push
test
decl
stc
call
std
cmp
hlt
cmp
jne
jmp
jecxz
sub
jmp
mov
cld
loope
stc
rol
cli
mov
ljmp
pushw
rcrl
in
push
sti
sti
std
clc
cld
lcall
idiv
cmp
cmc
pushl
jo
incl
insl
ljmp
xorl
push
lahf
idiv
dec
stos
std
call
sti
call
std
jmp
idiv
arpl
std
ljmp
cld
pushl
cli
pushl
in
cli
stc
lcall
idiv
outsb
sar
jmp
decl
idiv
sub
jns
dec
mov
std
jmp
fcos
clc
enter
movsl
mov
jl
push
fbld
out
sti
clc
sti
cli
stc
stc
lcall
cld
incl
std
incl
std
aas
test
cmp
jmp
mov
incl
cmc
incl
stc
call
repz
clc
call
cmc
lcall
cld
jmp
idiv
outsl
shl
ljmp
incl
idiv
jmp
stc
pushl
stc
jmp
jmp
stc
jmp
cld
lcall
idiv
pop
mov
dec
mov
sti
lock
imul
iret
sti
int3
lret
cld
test
js
jg
arpl
out
cli
cld
std
cli
clc
jmp
idiv
ds
pushl
nop
idiv
cmp
test
cmp
sti
incl
idiv
dec
fwait
cli
decl
cmc
decl
cld
lcall
jmp
stc
lcall
cmc
jmp
stc
ljmp
ljmp
pushl
idiv
imul
jmp
clc
ljmp
cli
jmp
cld
lcall
cli
lcall
idiv
aad
xchg
std
in
fcos
sti
jmp
stc
rol
cld
test
jmp
push
incl
add
add
mov
repz
stc
clc
push
idiv
lcall
cld
cmp
mov
ds
pushl
sar
test
cmp
cli
incl
decl
cli
call
cli
lcall
idiv
push
mov
ljmp
idiv
push
pushl
clc
pushl
sti
ljmp
ljmp
idiv
fs
jmp
stc
lcall
std
call
repnz
fnstenv
fdivr
cld
out
xlat
stc
ror
mov
ljmp
outsb
incw
add
add
stos
xchg
push
hlt
cli
clc
clc
stc
cld
sti
stc
ljmp
idiv
xor
ds
incl
idiv
ss
cmp
sti
decl
cmc
incl
call
clc
call
stc
lcall
cld
lcall
cld
jmp
clc
jmp
clc
lcall
cmc
jmp
cli
ljmp
idiv
arpl
sti
jmp
cli
jmp
clc
ljmp
cld
call
call
stc
call
call
mov
clc
in
xlat
sti
jmp
leave
cli
cmpsb
test
lods
xchg
in
pushf
in
repnz
clc
stc
cld
clc
stc
cli
jmp
cld
cmp
sti
cmp
cli
ds
cmp
cld
cmp
sti
decl
idiv
dec
mov
idiv
push
mov
lcall
cld
call
idiv
arpl
sti
ljmp
cld
jmp
pushl
repz
shl
jge
cld
call
shl
sarb
cli
lock
std
out
clc
lret
mov
pushl
push
incl
add
add
test
hlt
cld
clc
clc
cld
cld
stc
stc
clc
cli
push
clc
idiv
call
in
clc
jmp
icebp
cli
clc
std
fucomip
cli
fsubr
idiv
loopne
sti
jmp
out
std
jmp
out
idiv
in
repnz
cld
sti
in
sti
out
icebp
cld
repz
cld
lock
std
in
jmp
sti
icebp
jmp
clc
repnz
std
out
loope
cli
out
loop
stc
out
in
call
fdivr
clc
lret
stc
mov
jp
test
incl
add
add
mov
out
repnz
std
sti
std
std
idiv
cli
stc
std
cli
stc
push
std
std
push
cli
stc
push
idiv
stc
cli
idiv
stc
stc
repz
cli
idiv
cli
sti
sti
sti
idiv
clc
sti
cld
stc
repnz
push
cmc
sti
cli
repz
stc
cli
idiv
sti
cli
out
push
stc
out
mul
cld
cli
ljmp
clc
out
imul
call
stc
repz
push
out
cli
call
fdivr
cld
out
aam
sti
int
std
scas
scas
mov
jae
incl
add
add
mov
stc
sti
lock
cli
std
idiv
stc
sti
cli
sti
hlt
stc
std
stc
cld
clc
cli
push
clc
cli
push
cld
push
sti
push
idiv
sti
std
idiv
std
cli
idiv
div
idiv
sti
idiv
std
sti
sti
clc
clc
clc
std
cmc
idiv
stc
sti
repz
sti
clc
out
cli
sti
in
clc
repz
cld
hlt
cli
std
cmc
in
sti
clc
out
cld
icebp
jmp
stc
ror
clc
sarl
sti
mov
cld
stos
mov
clc
cmpsb
mov
mov
jnp
incl
add
add
mov
cld
cmc
hlt
std
sti
idiv
cli
cli
cli
sti
cld
sti
sti
sti
clc
stc
sti
stc
cli
stc
cld
cli
clc
cld
stc
stc
push
std
clc
cli
stc
stc
stc
cli
cli
cld
sti
cld
sti
idiv
clc
idiv
stc
clc
stc
sti
repz
cli
clc
clc
std
cli
idiv
stc
idiv
cld
hlt
repz
cli
repz
idiv
in
std
jmp
inc
xchg
fwait
mov
xchg
xchg
mov
mov
mov
jl
ljmp
nop
test
in
mov
cli
cli
sti
std
cli
stc
cmc
cli
sti
clc
clc
cli
idiv
cli
clc
sti
stc
cld
std
clc
clc
sti
cld
cmc
cld
std
sti
cld
cli
sti
stc
push
cli
push
sti
idiv
div
cld
clc
std
sti
idiv
clc
cld
idiv
cld
cld
std
clc
cld
cmc
cli
stc
in
clc
std
repz
cld
icebp
in
cli
hlt
cmc
sti
in
loop
mov
je
imull
push
mov
call
jnp
fnstenv
dec
addr16
lcall
add
mov
cld
cli
stc
clc
clc
cli
cld
cld
cli
push
sti
clc
std
stc
sti
push
sti
idiv
cli
cli
cld
hlt
stc
clc
stc
cli
clc
sti
idiv
cli
cli
idiv
cld
std
sti
cli
push
std
clc
cli
sti
cld
clc
cld
stc
cld
hlt
stc
cld
sti
cld
sti
idiv
cli
std
hlt
stc
std
idiv
cld
stc
idiv
sti
imul
cld
cli
hlt
ljmp
lret
std
mov
sti
movsb
dec
push
test
cmp
out
inc
jmp
add
add
mov
cld
stc
std
clc
cld
clc
stc
stc
sti
clc
cli
std
cli
stc
cli
cli
stc
cld
cld
sti
idiv
cli
cld
idiv
stc
sti
stc
sti
stc
clc
cld
cld
stc
stc
sti
cli
idiv
cli
idiv
stc
sti
clc
stc
idiv
stc
cli
clc
cli
repnz
cld
stc
cmc
clc
repnz
cli
clc
cli
push
idiv
stc
imul
cmc
icebp
ljmp
shll
stc
scas
arpl
sti
movsl
dec
jmp
xchg
dec
lcall
add
repnz
stc
cld
stc
stc
push
clc
idiv
sti
idiv
cli
stc
cld
clc
cld
cli
clc
clc
idiv
stc
idiv
idiv
cli
cld
sti
stc
clc
cld
cli
std
idiv
sti
sti
clc
sti
idiv
stc
sti
cli
clc
sti
push
sti
sti
push
cld
cli
cli
cld
sti
sti
stc
sti
stc
idiv
clc
idiv
sti
cld
push
std
lock
clc
lock
mov
fildll
cli
scas
outsl
jmp
movsb
imul
cld
ret
mov
sti
sti
cmc
sti
hlt
cld
cli
idiv
sti
cld
repz
cli
clc
sti
cli
std
sti
stc
cli
push
clc
idiv
sti
cli
idiv
idiv
sti
push
std
hlt
stc
sti
stc
clc
idiv
push
std
idiv
cli
stc
sti
cli
sti
cli
sti
idiv
std
clc
sti
sti
push
cld
clc
stc
clc
cld
stc
idiv
stc
push
std
repnz
pushl
in
mov
jmp
stos
jbe
stos
jnp
incl
add
add
lret
idiv
cld
sti
cli
stc
clc
stc
sti
cld
cli
stc
stc
cld
clc
sti
idiv
clc
cli
hlt
std
sti
clc
cld
cmc
cmc
push
cmc
clc
stc
sti
hlt
push
stc
idiv
sti
sti
std
sti
idiv
clc
cmc
clc
std
stc
std
clc
sti
stc
cld
idiv
cld
std
cli
push
sti
stc
push
div
push
sti
stc
cli
sti
clc
cli
hlt
sti
std
jmp
cli
clc
fildll
cmp
add
add
shrl
cld
clc
stc
cld
cli
sti
sti
clc
clc
clc
cld
idiv
cmc
idiv
stc
repz
cli
cld
cli
std
cli
push
clc
cli
sti
clc
cmc
stc
cld
clc
clc
stc
cli
clc
repz
clc
idiv
push
std
cld
push
cli
cli
push
std
clc
div
clc
repz
imul
out
clc
jmp
repnz
icebp
repnz
mov
in
jmp
add
add
lds
stc
aad
push
sarb
push
lret
mov
lock
repnz
mov
out
lds
out
stos
jmp
les
in
shlb
in
scas
jmp
mov
fdivl
mov
call
mov
fldt
mov
call
cmpsl
mov
inc
cmpl
mov
add
mov
add
add
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
add
inc
push
xor
clc
shr
inc
add
rolb
mov
inc
push
call
add
sub
add
call
push
inc
add
add
clc
mov
push
clc
call
push
incl
add
add
add
and
or
adc
adc
adc
mov
test
add
xor
add
clc
rolb
jne
add
inc
clc
mov
push
or
orl
inc
incl
add
sub
add
and
or
rolb
xor
test
jne
mov
test
mov
add
add
add
punpckhdq
jne
or
inc
adc
add
add
mov
add
add
add
decb
clc
push
inc
add
clc
adcl
shrb
test
inc
add
mov
clc
mov
or
clc
push
push
or
incl
test
add
push
push
add
cmp
add
shlb
or
shlb
xor
push
add
add
jne
incb
incb
add
das
add
add
subl
sub
inc
test
add
adc
subl
inc
incl
add
addl
je
add
add
ud0
adc
push
add
lea
and
rolb
add
add
adc
add
or
or
mov
and
test
add
jne
je
jne
mov
clc
push
or
add
add
orl
add
incl
inc
add
add
adc
lea
call
dec
xor
add
mov
test
push
xor
or
add
test
add
mov
or
push
add
in
add
inc
push
lar
jne
mov
mov
rdpmc
add
test
inc
incl
inc
add
add
adc
and
pushl
add
inc
push
test
jne
add
je
inc
push
push
adcl
rorb
add
add
mov
add
add
add
adc
add
lea
add
push
mov
inc
incl
clc
add
inc
push
clc
inc
push
or
push
push
or
sldt
push
xor
xor
add
inc
push
mov
push
lea
sub
decb
xor
add
inc
add
add
lock
invd
xor
orl
add
mov
push
je
add
push
psubsb
mov
add
and
je
add
inc
add
jne
add
rolb
push
call
call
add
add
aaa
add
call
inc
inc
inc
push
adc
and
test
push
and
add
je
add
aaa
add
add
adc
or
add
mov
mov
rolb
sub
call
add
add
add
or
mov
mov
add
xor
push
test
lea
inc
xor
add
test
add
add
cmp
add
adc
push
push
inc
adc
orl
or
add
cwtl
cmp
add
or
je
add
inc
inc
adc
je
test
test
add
cmp
shlb
add
add
add
add
add
and
add
add
and
test
add
add
adc
add
add
and
push
add
xor
add
add
add
add
add
sbb
add
dec
lret
add
cmp
add
pop
lret
add
lretw
add
jbe
add
xchg
add
xchg
lret
add
mov
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jb
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
popa
je
outsb
