push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
test
cmpsb
idivb
shlb
ds
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
shlb
mov
pusha
call
add
pop
in
jo
imul
mov
mov
ja
fstpt
cwtl
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
mov
mov
mov
sub
push
pop
mov
lea
pushl
pop
dec
lea
push
popl
pushl
lea
pop
repz
sub
test
jne
mov
pop
ret
add
sbbb
outsb
in
push
xchg
sub
ret
outsb
push
mov
mov
shrb
xchg
fmuls
sbb
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
loope
xor
aaa
insl
adc
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
flds
iret
dec
and
fsubrl
xor
pop
out
mov
cmp
shll
test
push
push
gs
push
por
jno
push
loop
aam
xchg
sub
mov
pop
cld
mov
add
xchg
data16
adc
mov
or
imul
xchg
pop
xchg
cmpb
pop
xchg
movsb
add
add
in
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
in
lods
mov
mov
jge
lret
fadds
sbb
out
adc
jge
in
mov
and
push
jns
mov
xchg
and
push
jne
dec
and
movsb
fbld
call
test
es
xor
in
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
push
rep
xorl
das
xor
push
mov
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
inc
mov
aad
cld
cmp
jg
mov
sbbb
dec
jmp
ret
push
pop
clc
sbb
sub
lods
mov
shl
pushl
pop
lea
mov
.byte
movsb
and
add
add
inc
and
add
and
add
and
add
and
add
and
add
and
add
add
shlb
add
and
add
and
add
and
add
add
ljmp
add
add
add
add
and
add
and
add
add
test
add
js
add
cmp
add
sbb
add
pop
and
add
and
add
and
add
and
add
add
push
and
add
add
add
add
lcall
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
out
and
add
add
add
add
into
and
add
add
push
and
add
and
add
and
add
and
add
and
add
add
shlb
add
and
add
and
add
and
add
add
ljmp
add
add
add
add
and
add
and
add
add
test
add
js
add
cmp
add
sbb
add
pop
and
add
and
add
and
add
and
add
add
push
and
add
add
add
add
lcall
add
add
add
insb
jae
jb
jo
inc
add
aad
inc
gs
jb
jbe
push
jns
gs
add
inc
outsl
jo
inc
imul
gs
gs
inc
je
insl
add
sbb
gs
outsl
outsb
jae
insb
gs
add
add
popa
jo
imul
push
imul
jb
je
arpl
add
sbb
gs
outsl
outsb
jae
insb
gs
add
add
gs
outsl
outsb
jae
insb
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
inc
jbe
outsb
je
add
gs
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
fs
je
insl
inc
add
add
inc
gs
outsl
imul
jbe
jae
add
imul
insl
gs
insb
outsl
jae
add
add
fs
imul
add
add
je
imul
bound
gs
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
insb
jae
jb
outsb
push
add
rolb
dec
gs
jo
gs
jb
jns
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
jae
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
addr16
outsl
js
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
inc
push
push
push
dec
push
cs
insb
add
add
inc
jb
popa
je
inc
js
arpl
imul
outsw
jb
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
inc
add
push
add
add
enter
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jp
jp
stos
lods
lods
add
cmpsb
cmpsb
push
mov
mov
mov
leave
lret
lret
int3
rcl
in
rcl
shl
iret
rcl
hlt
into
into
int
enter
leave
leave
out
mov
in
mov
mov
stos
lods
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
lret
lret
rcl
cld
xlat
xlat
xlat
std
xlat
fcom
fcom
aam
aam
rcl
sar
int
int
aad
rcl
sar
mov
mov
scas
iret
movsl
movsb
mov
dec
das
das
das
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
scas
sbb
mov
jnp
mov
sar
lret
call
rcl
aad
fcomp
fdivr
xlat
call
aam
dec
into
into
dec
int
call
aad
dec
int
inc
rol
mov
mov
lods
std
cmpsl
cmpsb
test
xchg
xchg
xchg
mov
pop
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
dec
add
push
add
push
or
or
sbb
push
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
int
call
rcl
call
fcom
call
xlat
xlat
call
aam
dec
int
dec
lret
int3
int3
int3
inc
mov
mov
mov
cmpsl
cmpsl
test
mov
fwait
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
arpl
push
imul
pop
pop
pop
fs
aas
ds
sbb
prefetch
sbb
cmp
aaa
cmp
and
adc
pop
push
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
leave
leave
leave
call
rcl
call
call
aad
call
ror
inc
leave
enter
inc
ret
ret
mov
mov
scas
lods
scas
jmp
popf
popf
xchg
xchg
cwtl
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jle
jl
jle
jle
jb
jb
bound
mov
cmp
lea
inc
mov
outsb
jo
nop
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsb
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
leave
dec
leave
leave
dec
lret
lret
leave
inc
mov
mov
scas
scas
scas
jmp
lcall
xchg
xchg
xchg
xchg
cwtl
lcall
lahf
cmp
push
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsb
add
pop
or
jnp
mov
incb
jl
jnp
jnp
outsl
outsl
outsb
out
push
data16
jae
jge
jg
jns
js
gs
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsl
lcall
nop
nop
incl
test
xchg
xchg
xchg
lahf
mov
mov
mov
js
js
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpb
lahf
cltd
lahf
in
mov
incl
xchg
std
mov
jg
jo
jb
jne
jne
jg
jge
addl
xchg
push
cmp
ss
jg
cmp
movsl
movsb
movsb
shrb
lods
lods
sti
stos
lods
stos
stos
stos
stos
test
test
std
lcall
decl
jge
js
js
jl
jnp
xchg
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
push
pop
adc
movsb
test
mov
mov
xchg
nop
xchg
incl
xchg
mov
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
pop
pop
push
push
prefetch
inc
inc
inc
dec
insb
insb
insb
jl
test
leave
lcall
out
lcall
std
mov
xchg
xchg
mov
nop
lcall
cmpsl
cmpsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
mov
jl
scas
test
add
pop
adc
cmpsl
lods
call
fwait
xchg
cwtl
incl
test
decb
xchg
xchg
pushf
pushf
sahf
std
movsl
movsl
mov
out
xchg
xchg
xchg
in
xchg
xchg
in
xchg
push
jne
push
push
dec
add
or
es
dec
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
xchg
std
lea
xchg
call
sahf
mov
ljmp
scas
pushl
mov
stos
std
rorb
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
popf
cltd
pushf
decl
mov
xchg
xchg
call
xchg
xchg
pushf
popf
sahf
mov
stos
test
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
popa
jne
je
mov
lahf
orl
int
nop
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
xor
js
mov
cmpsb
mov
mov
mov
lods
lods
lods
mov
movsl
movsl
add
mov
add
pop
adc
mov
ljmp
pushf
decl
xchg
nop
call
xchg
xchg
call
xchg
xchg
fwait
cltd
cltd
pushf
pushf
sahf
lahf
lahf
mov
std
movsb
movsb
movsb
stc
xchg
cltd
fwait
out
xchg
xchg
mov
xchg
aad
xchg
fwait
in
xchg
xchg
out
lea
stc
xchg
test
std
xchg
jb
fwait
imul
ljmp
cmp
mov
jb
mov
insl
ljmp
adc
lods
or
lods
or
pushl
lahf
scas
mov
stos
lods
pushf
movsl
movsl
mov
add
mov
add
pusha
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
popf
pushf
lcall
popf
pushf
call
xchg
xchg
call
cwtl
xchg
call
cwtl
cltd
cld
xchg
cltd
pushf
stc
sahf
fwait
sahf
stc
sahf
xchg
sahf
cld
pushf
xchg
xchg
insb
xchg
xchg
pop
jge
xchg
dec
jp
lcall
sahf
push
addr16
mov
adc
ljmp
pcmpgtd
lods
adc
scas
adc
mov
imul
adc
insb
mov
fwait
scas
mov
lods
lods
scas
movsb
mov
mov
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
lahf
jmp
mov
call
nop
decl
addl
xchg
jbe
cltd
jb
lcall
call
sub
decl
adc
nop
or
add
push
lcall
push
pop
jmp
sbb
pushl
sbb
outsl
mov
and
mov
and
mov
xchg
scas
mov
lods
lods
mov
lahf
sahf
sahf
add
add
add
add
mov
scas
add
pop
adc
lods
mov
shlb
lcall
mov
jmp
test
cmpsl
lcall
jg
decl
dec
jno
mov
push
mov
popa
decl
pop
incl
add
incl
add
lea
pop
call
add
lcall
jmp
and
mov
ja
mov
sub
shrb
ret
inc
sub
cmp
cs
enter
sarl
lret
mov
add
add
add
add
add
push
push
adc
test
mov
jmp
stos
test
ljmp
mov
ljmp
mov
mov
mov
pop
incl
or
addl
incl
add
xchg
push
decl
push
call
pop
lcall
add
scas
adc
mov
ss
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
cmpsb
ljmp
popf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
test
push
incl
add
mov
push
call
add
pushf
add
mov
add
lods
add
jb
ret
dec
inc
mov
into
inc
mov
roll
call
dec
call
dec
xchg
call
dec
xchg
fimull
fisttpll
fistl
call
xchg
std
mov
mov
mov
lahf
sahf
or
add
add
add
add
dec
inc
adc
jp
movsb
popf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsb
mov
decl
sbb
call
push
pop
decl
pop
push
decl
push
call
add
add
add
test
pop
gs
mov
inc
call
push
cwtl
fcoms
fsts
fcompl
ficomps
fists
jmp
pop
lahf
jmp
pop
mov
fadds
mov
mov
cmpsb
cmpsl
cmpsl
jne
sahf
sahf
or
cwtl
xchg
cwtl
add
inc
adc
js
lahf
lcall
lahf
fwait
popf
ljmp
mov
pushl
mov
mov
pushl
xchg
movsb
call
arpl
xchg
and
callw
sbb
nop
or
xchg
add
xchg
add
lcall
ljmp
add
mov
data16
mov
xor
call
pop
cltd
fisubl
fbld
fisubs
jmp
fs
in
cmpsb
jmp
addr16
jmp
test
xchg
mov
cmpsl
cmpsl
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
aas
adc
je
fwait
xchg
cwtl
call
mov
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
jg
xchg
sub
cltd
das
outsl
lcall
sub
cwtl
sbb
pop
call
add
mov
add
stos
add
mov
pushl
adc
roll
jmp
outsb
stos
jmp
jo
call
jb
jmp
mov
jmp
mov
out
jne
in
jne
in
je
jmp
mov
mov
cmpsl
test
mov
lahf
mov
add
add
add
jge
cmp
aas
adc
outsb
js
mov
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
xor
mov
cmp
lahf
xor
fwait
push
call
add
sahf
add
mov
add
mov
arpl
mov
gs
mov
sbb
fsts
jecxz
mov
call
jge
in
jg
in
cmpb
icebp
xchg
repz
call
mov
shl
stos
test
daa
lahf
mov
sahf
add
add
add
pusha
add
cmp
pop
pop
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
mov
mov
mov
cmp
mov
inc
jle
movsl
ss
lcall
lcall
add
test
popa
ljmp
add
mov
add
dec
es
jmp
mov
lock
push
xchg
ret
xchg
ret
push
xchg
xchg
pop
in
mov
clc
stos
lods
stos
mov
pushf
pushf
xor
sahf
sahf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
nop
pushl
mov
mov
inc
ret
ret
ret
ret
mov
jge
lcall
jg
lods
dec
test
movsl
xor
popa
lcall
add
cmpsl
add
lods
add
mov
arpl
mov
add
movl
jmp
jns
out
xchg
push
cltd
push
cltd
cltd
push
fwait
enter
enter
lret
cli
popf
into
cli
sahf
into
cli
lcall
fidivrs
cli
mov
mov
sahf
sahf
sahf
aas
xchg
add
add
add
aaa
add
das
sub
outsb
dec
dec
dec
jecxz
pop
popa
call
mov
mov
mov
mov
inc
mov
mov
mov
ljmp
xchg
movsl
sub
fwait
pop
pop
lcall
add
add
mov
popa
mov
add
enter
rorl
fiadds
out
lea
push
cmpsb
into
push
cmpsb
int3
clc
test
cld
test
into
sti
test
iret
cld
stos
iret
cld
test
push
sahf
jmp
mov
int3
std
mov
mov
lahf
mov
xchg
add
cltd
cltd
add
add
add
xor
daa
sub
or
inc
bound
pop
xlat
je
jo
mov
rol
rol
mov
inc
ret
dec
enter
ret
mov
cmpsb
jmp
push
mov
scas
dec
xchg
lahf
sbb
pop
jmp
add
mov
arpl
mov
add
into
add
fadds
jb
fists
push
sahf
lret
cli
lods
sar
cli
scas
aam
sti
scas
aad
sti
mov
mov
std
mov
mov
cld
mov
mov
cld
mov
push
cmpsb
jmp
mov
call
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
push
add
dec
dec
outsl
outsb
outsb
mov
fcom
xlat
fsubr
aad
not
rcl
std
int3
int3
int3
dec
lret
lret
lret
lret
inc
enter
lods
jmp
push
mov
stos
cmp
lcall
add
add
mov
fs
mov
add
iret
add
fadds
jb
fiadds
jae
jmp
jb
sti
lods
aam
std
mov
fcos
cld
mov
mov
xlat
std
mov
xlat
std
mov
fdivr
clc
mov
jmp
mov
call
lret
mov
sahf
mov
or
add
add
xor
xor
add
or
enter
in
pop
out
call
test
in
leave
fsubp
fdiv
fcomp
fdivr
fdivr
int3
iret
sar
mov
push
ljmp
sub
mov
add
mov
popa
mov
add
lret
add
aad
jno
faddl
ja
in
ja
in
das
xchg
clc
mov
cli
mov
loopne
inc
loopne
inc
loop
inc
std
fdivrp
inc
loopne
inc
fdivrp
std
loopne
dec
std
lret
loopne
cld
mov
enter
sar
mov
mov
xchg
adc
add
add
incb
incb
std
std
std
add
div
or
out
in
pop
jmp
in
sub
out
out
dec
jmp
ljmp
in
out
fcmovu
fucomp
ret
mov
xchg
cmpsb
cmp
movsl
adc
pop
ljmp
add
mov
add
into
add
add
filds
ja
call
inc
popf
cli
mov
loop
dec
jecxz
std
into
in
std
int3
in
std
int
dec
jecxz
dec
loopne
std
iret
jecxz
shl
shl
std
shl
cld
out
mov
inc
ret
test
cmpsb
mov
xchg
cwtl
add
add
add
std
incb
std
add
clc
testl
lock
push
out
repnz
pop
out
icebp
out
cmp
out
out
pop
fsubp
loope
lds
xchg
sti
lahf
and
lcall
add
lods
add
mov
inc
add
leave
add
roll
jb
fiaddl
jne
jecxz
jp
in
movd
cmc
pop
test
cld
mov
cld
iret
in
std
shl
std
shr
std
shr
call
in
call
out
call
out
call
fucompp
cld
iret
loope
hlt
aad
in
leave
lret
lret
stos
test
and
xchg
xchg
add
std
cld
add
cld
testl
repnz
or
aad
xor
jb
negb
add
cmpsb
add
scas
add
mov
add
leave
add
add
fldl
ja
out
jns
out
sbb
stc
je
cld
ret
std
xlat
call
std
fldpi
std
fldl2e
std
fucomi
std
fucomp
std
fucomi
jmp
jmp
fsubrp
jmp
in
cld
aam
push
ret
out
iret
rcl
clc
lods
stos
stos
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loopne
add
leave
lds
lods
jnp
repnz
and
mov
add
mov
mov
add
int3
add
aam
jae
fiadds
je
ljmp
cli
nop
aam
fsubrp
fsubr
std
fldpi
xlat
jmp
std
aam
sti
shl
sti
iret
loope
test
fdivr
test
lret
rcr
call
xlat
sti
mov
mov
cltd
cltd
cltd
cmp
lcall
mov
mov
add
mov
sahf
jmp
sub
lahf
add
ljmp
add
add
les
imul
add
xlat
add
add
jmp
ss
cld
xchg
enter
loopne
cld
int3
loop
sti
clc
mov
sar
hlt
mov
sar
lock
int
jmp
mov
sar
jmp
shl
call
loopne
in
mov
mov
xchg
add
add
add
int3
lret
add
shrb
loopne
xor
jmp
add
mov
gs
mov
add
int
jno
rorl
jne
fsts
ja
loopne
cmp
inc
cwtl
jmp
scas
lret
mov
out
leave
std
loop
cld
loopne
ret
cli
lock
int3
in
lret
loopne
shl
xlat
fadd
out
loop
jmp
call
popf
jmp
lret
lret
push
stos
stos
stos
adc
test
cmpsb
add
sahf
stos
aam
dec
cmp
test
insb
lods
and
js
mov
inc
xchg
les
stc
lret
test
mov
out
mov
mov
enter
int3
rcl
int
aad
shlb
xlat
aam
jg
jb
loopne
gs
in
call
out
in
xor
div
mulb
repnz
sbb
fcmovnu
or
mov
int3
add
add
add
mov
roll
mov
stos
xchg
lock
sbbl
mov
stos
mov
les
ret
ret
mov
leave
int3
jp
int
addr16
rcl
push
rcl
rorl
inc
rcl
xor
fcmovnbe
daa
fcomp
fistpl
fstl
fsubp
loope
loope
in
out
ljmp
cli
testl
std
incl
incl
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
rol
inc
ror
xor
int3
lret
ror
and
rcrb
rcl
aam
rcl
rorl
rcl
aad
aam
xlat
add
add
loopne
add
jecxz
add
in
jmp
leave
xlat
aad
incb
mov
mov
add
ret
ret
vmovaps
mov
mov
push
rol
or
leave
movb
enter
into
lret
aad
add
fcom
add
fcom
add
fcom
add
aad
add
fabs
add
aam
add
loope
add
add
out
add
lock
std
incl
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
mov
mov
mov
stos
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
scas
scas
scas
adc
mov
aam
rcl
jmp
rcl
cmc
rcl
aam
rcl
sar
int3
int
stc
lret
lret
lret
hlt
mov
mov
iret
stos
stos
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
mov
sarb
into
iret
iret
xlat
xlat
call
aad
call
iret
sar
int
int
int3
int3
int3
inc
mov
mov
stos
stos
lods
icebp
cltd
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
je
jne
fs
dec
inc
inc
cmp
sub
sub
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
int3
lret
rcl
call
rcl
dec
lret
mov
mov
ljmp
lahf
lahf
xchg
xchg
xchg
jmp
outsl
jno
push
pop
push
dec
add
add
add
add
add
add
jg
jg
jl
jl
test
jp
push
push
pop
pop
pop
movsb
push
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
jo
jo
mov
scas
pop
mov
mov
mov
mov
mov
ret
mov
inc
mov
mov
mov
ljmp
fwait
lcall
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
fwait
fwait
lcall
cwtl
lcall
addb
jl
jge
js
js
jp
jp
jp
jns
jb
jb
push
push
push
cmp
jae
pushf
sahf
sahf
mov
scas
lods
repz
scas
lods
sti
scas
scas
lods
std
test
pushf
sahf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsb
movsl
cmpsb
cltd
je
je
adc
adc
add
add
add
add
outsl
outsb
outsl
pop
mov
loop
cltd
popf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
jo
orl
cwtl
cwtl
repnz
xchg
xchg
std
mov
call
pushf
lahf
ljmp
scas
std
mov
scas
mov
mov
mov
movsl
movsb
movsl
pop
addl
add
pop
pusha
pop
or
lods
mov
movsl
mov
mov
mov
call
popf
mov
negl
jle
stos
push
push
push
jo
push
push
outsl
imul
jg
subl
mov
lcall
mov
mov
xchg
mov
push
mov
mov
mov
out
scas
stos
insl
stos
stos
stos
or
add
add
add
add
pusha
or
mov
in
movsb
cmpsl
call
xchg
xchg
lcall
cltd
xchg
cltd
cltd
cltd
fwait
fwait
lcall
xchg
cltd
jmp
xchg
xchg
aam
mov
out
xchg
jbe
notb
pop
jle
pushf
dec
jl
movsb
inc
jns
scas
ss
mov
jae
mov
outsl
ljmp
sbb
pop
mov
mov
scas
mov
movsb
movsl
movsl
push
popa
pusha
pusha
or
mov
in
movsb
test
xchg
xchg
cltd
lcall
mov
lahf
call
mov
call
jno
cld
xchg
pusha
test
xchg
dec
js
xchg
cmp
nop
sub
xchg
sbb
cltd
adc
lahf
push
popa
ljmp
sbb
mov
insb
pushl
pop
jb
mov
pop
xchg
mov
scas
scas
xchg
lahf
popf
lahf
adc
add
add
popa
pusha
pusha
or
lods
mov
stos
movsb
cmpsl
jmp
cmpsl
cmpsb
ljmp
test
cwtl
decl
push
mov
arpl
mov
pop
incl
push
push
call
add
fwait
add
or
mov
jb
mov
das
jge
ret
das
jge
leave
xor
dec
pop
xchg
inc
test
scas
movsb
test
test
add
add
add
popa
or
cmpsb
test
jmp
mov
pushl
mov
jmp
jo
mov
pop
decl
or
push
push
decl
add
xchg
add
sahf
add
add
mov
outsb
inc
aaa
cmp
inc
mov
into
inc
call
inc
mov
aad
xchg
fimull
call
bound
stc
mov
mov
movsb
movsl
mov
add
add
add
popa
or
lahf
mov
ljmp
mov
mov
mov
mov
mov
jge
mov
popa
call
push
pop
decl
push
call
add
cmpsl
add
scas
add
mov
dec
xchg
fcomps
fistpl
fistps
jmp
pop
mov
fildll
dec
cmpsl
mov
ret
movsl
xor
addb
add
add
dec
pop
jl
jl
popf
xchg
lcall
scas
scas
pushl
mov
mov
jmp
sub
lcall
and
xchg
push
pop
call
add
cmpsb
add
scas
add
push
push
jmp
outsb
stos
jmp
outsb
stos
jmp
jb
in
jb
call
test
mov
inc
cmpl
add
dec
pop
insl
insl
imul
xchg
lcall
mov
mov
mov
jmp
cmp
lcall
sub
xchg
or
lcall
add
stos
add
mov
inc
or
aad
xchg
jmp
jp
jmp
mov
push
test
push
xchg
fldcw
mov
push
lcall
add
sub
push
push
push
dec
pop
imul
xchg
mov
mov
mov
sarb
mov
xchg
ljmp
sub
lcall
ljmp
add
mov
adc
mov
push
xchg
ret
push
xchg
push
xchg
push
fwait
lret
pushf
lret
push
xchg
jmp
stos
inc
mov
lods
popa
mov
add
add
inc
pop
pop
pop
push
fisttpl
mov
mov
ret
ret
ret
mov
cmpsl
jmp
dec
cmp
and
add
ljmp
add
add
leave
add
and
push
movsb
int3
push
test
clc
test
sar
cld
lods
sar
std
lods
sar
sti
cmpsl
lret
jmp
mov
dec
rol
stos
stos
stos
jne
sahf
pushf
or
add
add
dec
push
dec
aaa
jb
je
stos
stos
stos
ror
into
int
int3
int
cmc
lret
lret
leave
lret
lret
enter
mov
ljmp
adc
cmpsl
add
mov
gs
add
iret
add
flds
xchg
push
xchg
std
mov
mov
fcos
mov
xlat
mov
sar
jmp
rol
mov
scas
mov
add
add
add
add
or
aam
dec
loop
loope
fadd
fcmovnu
aam
fsubr
shlb
test
push
popa
ljmp
add
enter
add
loop
jl
lock
mov
std
ret
loope
inc
loop
inc
loopne
std
loopne
std
lret
dec
loope
std
out
mov
lret
divb
sahf
sahf
sbb
add
add
incb
std
std
add
ljmp
in
in
jmp
call
out
xchg
mov
mov
mov
add
pushl
imul
faddl
jne
ljmp
cld
ret
std
iret
out
std
shl
call
in
aam
call
out
std
xlat
out
std
shl
push
fcos
fcmovne
sar
mov
mov
mov
add
add
std
std
add
std
add
cld
pop
aad
aad
mov
pop
mov
sahf
or
ljmp
add
ret
add
roll
jno
filds
jbe
in
and
std
shl
fsubr
fsubr
std
fldl2t
cld
xlat
call
cld
xlat
out
sti
aam
push
xlat
jmp
rcl
sti
mov
lahf
lahf
das
add
add
into
int3
int3
or
bound
ljmp
inc
add
roll
jae
loopne
ja
out
xor
sti
int
cli
leave
fdivrp
cmc
fsin
repz
repz
aad
lock
sar
out
aam
out
aad
in
jecxz
fsubr
mov
test
add
add
add
push
mov
jae
or
mov
imul
pop
jb
int
jge
aad
xchg
loopne
fwait
clc
loop
mov
out
loop
lret
mov
loope
mov
lret
leave
iret
mov
in
fistpl
in
out
jns
rcl
dec
mov
add
add
mov
inc
mov
movsl
les
xchg
mov
nop
fidivrl
jle
rol
stos
mov
lahf
mov
shlb
leave
jge
int
ror
iret
pop
aam
rorb
fcomp
cmp
das
jecxz
frstor
loop
lock
in
jmp
fcmovu
faddl
std
incb
std
std
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
rcl
aam
rol
adc
rcl
or
or
into
into
add
std
incl
std
std
add
add
add
int3
into
shufps
or
int
into
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
lcall
ret
enter
enter
mov
sarl
scas
scas
insb
stos
lods
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aam
aam
rcl
sar
iret
int
std
stc
mov
mov
cmpsl
test
andb
push
add
add
add
add
add
add
add
add
jb
jno
addr16
dec
inc
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
int3
into
call
rcl
dec
iret
into
dec
enter
mov
lcall
mov
push
add
add
add
add
jae
jae
xchg
adc
bound
mov
data16
outsb
insl
outsl
jb
bound
pusha
pop
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cltd
xchg
lds
jae
daa
and
add
add
add
je
jb
fwait
xchg
lcall
test
xchg
test
addl
push
push
push
inc
mov
fwait
into
movsb
movsb
movsb
in
lahf
mov
xchg
decb
lcall
stos
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
movsl
test
test
test
mov
mov
xchg
xchg
xchg
cld
pushf
popf
popf
cmc
cwtl
lcall
push
push
push
imul
jg
lea
xchg
notl
mov
pushl
push
mov
stos
mov
stos
scas
scas
push
stos
stos
stos
add
add
add
test
lods
cld
xchg
xchg
xchg
lcall
fwait
fwait
lcall
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
fs
push
jl
fwait
inc
jne
movsl
cmp
sub
pop
outsl
pushl
ss
mov
mov
imul
into
add
xchg
pop
scas
movsl
stos
test
popf
pushf
lahf
jmp
movsl
call
jle
lea
nop
inc
jb
mov
imul
push
call
or
mov
sbb
jae
mov
sub
les
inc
lcall
test
add
add
popf
mov
cld
test
test
scas
scas
mov
mov
mov
sahf
xchg
decl
or
mov
decl
pop
jmp
adc
shlb
dec
aas
mov
iret
inc
mov
aad
mov
push
xchg
dec
cltd
mov
mov
mov
movsb
movsl
movsl
push
add
add
push
imul
movsb
mov
scas
pushl
mov
mov
call
sbb
popl
push
call
add
stos
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
cmpsb
call
lcall
test
cmpsb
pop
add
add
bound
adc
popf
pushf
lcall
mov
mov
lcall
xor
cwtl
and
xchg
push
pop
lcall
add
mov
xor
call
jl
push
jle
out
jg
ficompl
mov
and
add
add
dec
adc
push
cmp
mov
mov
ret
mov
bound
lcall
add
add
mov
arpl
ret
fimull
in
lea
push
xchg
push
cwtl
push
xchg
enter
mov
movsl
cmpsb
sub
aas
inc
inc
adc
push
xchg
xchg
cld
rol
inc
sarb
ljmp
pop
imul
mov
arpl
les
imul
in
outsb
scas
clc
test
clc
stos
sar
cli
lods
sar
sti
lods
sar
cld
lods
iret
in
mov
inc
mov
cmpsb
ds
std
incl
xor
jo
mov
mov
aad
aad
rcl
aad
rcl
shr
lret
lret
mov
mov
jmp
inc
add
aad
jb
out
xchg
clc
mov
std
mov
std
rcr
cld
ret
cld
ret
out
mov
ret
in
test
dec
cmpl
add
in
or
jmp
out
outsb
movsb
daa
outsl
ljmp
add
lret
add
fldl
push
cmp
cld
iret
in
std
iret
in
std
shl
aad
call
out
hlt
leave
aam
int3
in
scas
lods
lods
popa
cmpl
add
std
add
std
incb
int
shrl
sahf
sbb
stos
add
mov
add
loop
js
repz
movsl
cld
loopne
aad
cld
aad
cld
aam
std
aam
cli
aam
push
enter
into
shl
mov
mov
xchg
xchg
xchg
pop
vfnmsub213ss
outsb
cld
lods
add
mov
push
jae
fistps
jg
jmp
lods
cld
out
mov
shl
ljmp
jmp
out
aad
jmp
fcmovnu
scas
push
lcall
add
sahf
lods
xchg
and
push
mov
shlb
int3
js
mov
xlat
mov
lret
adc
into
outsl
xlat
int
pop
dec
jecxz
loopne
out
call
sbb
rol
add
mov
lods
arpl
mov
les
lds
ret
ret
fstp
fimuls
into
into
into
or
aad
incl
addb
add
add
add
rol
incl
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
stos
mov
mov
sub
aaa
nop
test
lahf
clc
fs
shr
arpl
scas
icebp
xor
mov
lea
mov
outsb
cs
jne
jnp
fsubl
cltd
pusha
adc
js
mov
adc
inc
adc
sbb
cmp
mov
mov
sub
aaa
outsl
lds
adc
jnp
lea
or
and
adc
pop
mov
pushf
fistl
dec
jmp
arpl
mov
mulb
in
xchg
pop
mov
popa
nop
aas
xchg
rcl
xor
lock
cmp
mov
push
daa
jno
gs
or
mov
adc
dec
mov
lds
lret
test
lea
insb
adc
aas
je
lods
addr16
fidivl
xlat
test
xor
lea
popa
fsubs
scas
test
adc
ret
fwait
mov
fisubs
mov
sub
push
dec
nop
jmp
pop
pop
incb
fidivl
daa
lret
xchg
inc
sub
pop
mov
jle
dec
je
out
mov
mov
dec
orl
shl
out
dec
insl
stc
mov
ja
movsb
mov
mov
sbb
inc
sbbl
cld
pop
pop
mov
pop
fwait
pop
mov
cmc
nop
xor
pop
sbb
push
cmpsb
loopne
adc
mov
mov
pop
movsb
sarb
adcl
push
fidivrs
mov
adc
mov
jnp
and
arpl
pop
sbb
pop
adc
lea
ss
inc
or
sub
lock
mov
add
bound
or
xor
and
addr16
rclb
fstpt
in
push
negb
dec
xor
popa
xchg
fwait
lret
rcrb
test
push
jp
rorl
pop
daa
icebp
fnstsw
cmp
and
leave
fidivrs
adc
mov
adc
xchg
and
movsl
fwait
and
into
scas
aaa
xor
cmp
adc
mov
jo
inc
or
popa
pushf
or
stos
pop
mov
pop
mov
negb
sub
fildll
fdivrs
int
addr16
or
add
negb
lea
and
ljmp
jmp
push
sub
pop
sbbb
inc
aam
sub
lods
aam
add
cmp
loopne
push
fisttpl
cwtl
jne
rcrb
stos
dec
into
pop
ret
pop
mov
lods
inc
or
aaa
rcll
or
in
movsl
jmp
push
pusha
jne
mov
out
rep
cmp
scas
imul
in
jne
mov
pop
add
dec
adc
fisttpll
arpl
js
pusha
jno
dec
scas
jne
lock
push
and
xor
xchg
mov
mov
out
dec
pushf
out
in
movsl
leave
popa
in
xchg
mov
aas
ret
filds
and
out
jb
mov
std
pop
daa
clc
fs
push
xlat
xor
outsl
add
pop
aam
jns
mov
shl
and
out
sub
daa
xlat
dec
movsl
mov
push
jg
es
jno
cmp
dec
adc
and
sub
sbb
pushf
aaa
push
pop
mov
jno
inc
sub
add
jle
rcll
lea
jb
enter
dec
sub
inc
add
pusha
call
dec
sub
movsb
sub
hlt
inc
call
popf
shl
sti
ret
add
xlat
movl
jb
add
sbb
in
dec
mov
sub
cmp
sbb
fdivr
imul
sahf
sbb
add
cmp
out
xchg
sbb
xor
nop
and
dec
cltd
sbb
dec
mov
adc
pop
mov
or
lods
mov
hlt
enter
ror
pop
adc
fdivr
sub
loopne
in
repnz
cmp
lods
fstps
fldenv
cli
xor
movl
movsl
mov
or
or
scas
imul
stc
sbb
cmp
and
roll
sub
or
test
pop
sbb
popf
enter
loop
cli
pop
push
fimull
jge
mov
jo
fs
gs
xor
out
jecxz
pop
aaa
jle
das
mov
int3
lods
add
jb
sahf
mov
lea
pop
sbb
mov
cmp
mov
lcall
mov
insl
sub
mov
shll
call
push
mov
inc
popa
loop
test
rcrl
fwait
add
fsts
xchg
sub
xor
pop
or
inc
or
movsb
push
ret
mov
out
mov
cmpsb
pop
shl
lahf
bound
gs
cmp
or
sub
lods
dec
jge
dec
cmp
cmp
sbbb
mov
addr16
imul
mov
sub
sub
fwait
insb
scas
repnz
cld
sbb
cmp
cmp
mov
pop
mov
mov
pushf
lcall
sar
push
cmp
or
push
inc
lea
pop
outsb
insb
xlat
lret
mov
sub
loope
jg
jbe
inc
xlat
cld
lret
pop
arpl
lahf
jl,pt
pop
sbb
lret
daa
pop
pop
sub
std
sti
filds
xor
lods
das
jae
pop
orb
push
mov
je
mov
push
lods
clc
test
int3
dec
fcomp
je
insb
push
ljmp
jno
lock
mov
adc
in
add
loopne
xchg
and
xchg
ljmp
mov
lret
mov
pop
cmp
mov
pop
lock
out
xchg
js
xor
or
sub
mov
mov
mov
pop
mov
ret
loope
cmc
std
out
xchg
pop
add
subl
ret
cmp
jne
ret
pop
jg
pop
lock
mov
ja
sbb
call
cmc
inc
sbb
hlt
add
es
pop
mov
jns
xor
int
fbld
pop
aaa
pop
mov
push
out
xchg
testb
out
stos
sbb
xor
arpl
ljmp
ljmp
jno
mov
fmull
loop
adc
inc
and
push
data16
cwtl
je
movsl
mov
dec
in
or
movsb
and
mov
ret
mov
loopne
iret
pop
hlt
add
addr16
sbb
jnp
push
cmp
sbb
jne
mov
mov
into
stc
loop
pop
adc
push
in
dec
xor
je
lahf
mov
xchg
mov
fistpl
inc
lods
cmp
xchg
pop
sub
push
lods
cmpsb
fnsave
hlt
pushf
call
jne
jmp
dec
lock
je
cmp
lea
mov
and
hlt
call
mov
dec
pop
add
lahf
lea
shrl
pusha
mull
add
data16
jle
jbe
in
test
test
mov
sbb
sub
sub
fsubrs
dec
inc
fidivrs
testb
in
stos
adc
aaa
xor
push
mov
mov
fldt
or
das
mov
popa
aas
sti
xchg
jno
stos
inc
mov
sbb
pop
in
into
push
sub
jge
aaa
push
in
push
mov
mov
fcoml
fcoms
mov
popa
jae
sti
movsb
adc
mov
arpl
cmp
stos
inc
pop
pop
sbbb
sub
bound
mov
cmp
test
int
mov
icebp
sbb
cmp
inc
insl
dec
loopne
popa
pop
lock
shrb
mov
adc
pop
mov
inc
or
stos
inc
pushf
fs
out
mov
jae
push
out
cmpl
pop
or
mov
lods
mov
das
rcr
sub
sub
pop
dec
push
jge
gs
stos
lahf
mov
ror
adcl
hlt
test
daa
push
sahf
xor
xorb
stos
mov
lock
add
sahf
jno
cli
xchg
mov
pop
mov
lock
fldt
inc
das
je
push
call
add
xchg
push
sub
pushf
jne
sub
mov
cmp
add
jmp
nop
cltd
fistl
cmpsl
lret
mov
andl
adc
fwait
jne
pop
data16
jp
push
fbstp
push
cltd
xor
push
mov
addr16
fbstp
scas
mov
xor
or
in
push
out
mov
or
mov
negl
add
lret
dec
sub
stc
nop
sti
daa
jmp
fiadds
enter
and
bound
scas
inc
cmpsb
call
mov
sbb
add
lcall
in
insb
add
lock
add
push
cli
pop
adc
dec
or
leave
pushf
sub
lcall
movsl
xor
nop
bound
pusha
ss
fldcw
sbb
or
jp
add
repnz
inc
pop
in
sbb
lret
push
push
cmp
and
sbb
test
fiadds
in
outsl
aas
mov
rcrl
cmp
in
xchg
and
sbb
aam
jp
pop
nop
shll
and
call
andb
cmc
movsb
sahf
insb
and
aaa
cmpps
dec
adc
push
repz
cmp
test
mov
or
and
jo
xchg
xor
sbb
inc
and
clc
push
out
sub
adcb
call
cltd
xor
cmp
shrb
repz
enter
aas
es
add
add
call
xchg
and
ja
fldl
mov
addr16
hlt
mov
push
push
stos
inc
xchg
aas
testb
xchg
gs
clc
dec
mov
lret
in
addl
gs
cmp
dec
in
pop
add
jnp
jecxz
out
out
addr16
movsl
inc
ficompl
scas
lds
mov
lds
mov
faddl
bound
lock
ret
stc
frstor
es
sub
js
int3
dec
sub
popf
in
fidivl
mov
test
pop
pop
inc
frstor
aas
aad
mov
iret
cmp
test
movsl
or
les
xor
xor
mov
adc
pop
or
mov
pop
les
fidivrl
dec
loopne
sti
and
sub
and
ds
adc
or
cs
jns
out
cltd
lcall
push
dec
loopne
dec
daa
nop
daa
js
mov
dec
cltd
shlb
jo
insl
dec
dec
lcall
js
dec
pop
mov
ret
pop
jnp
mov
pop
inc
lods
add
aaa
aaa
jle
popf
pop
mov
dec
clc
mov
repz
mov
hlt
out
sub
push
mov
jl
test
out
movsl
out
mov
dec
in
rcll
cmpsl
lahf
ss
lret
cmp
fbstp
or
fildll
pop
cmp
sbb
icebp
lahf
repnz
mov
push
test
mov
dec
adc
dec
mov
adc
pop
out
fstpl
pop
adc
ret
mov
loop
mov
pop
mov
stc
mov
or
test
insl
mov
push
in
repz
lret
adc
stos
inc
imul
pop
movl
mov
stos
pop
push
adc
mov
outsb
icebp
cmc
push
out
es
lea
ret
xor
loope
sbbl
lahf
or
jp
shr
xlat
lods
xchg
sub
clc
addr16
ljmp
or
shl
mov
sbb
adcl
inc
fimuls
mov
lods
inc
cmp
jb
mov
sbb
mov
call
dec
enter
stc
out
pop
repnz
fidivl
mov
or
psubb
pushf
mov
push
mov
fbstp
dec
lds
aad
movsb
rcll
xlat
les
jb
sbb
scas
mov
mov
leave
or
jge
test
out
mov
mov
sbb
mov
out
mov
mov
push
lods
xchg
mov
insl
shl
testb
pusha
aas
imul
mov
jne
jecxz
bound
outsb
jle
mov
subb
mov
mov
push
inc
mov
cld
or
pop
leave
push
daa
sub
into
out
inc
adc
mov
icebp
pop
lret
test
ljmp
nop
or
jnp
adc
imul
add
pop
ss
xor
sahf
dec
scas
in
movd
cmp
fwait
xor
add
xor
js
push
push
sbbb
aaa
icebp
mov
enter
dec
scas
inc
pop
ud0
inc
shrl
retw
pop
push
mov
push
mov
fisubs
push
mov
je,pn
inc
and
js
fbstp
cltd
outsl
push
push
push
in
mov
ror
sarl
or
push
scas
sub
mov
shlb
mov
loop
in
xorl
xchg
sub
xchg
jp
pop
mov
push
sub
mov
adc
add
pop
xor
lds
popf
xor
mov
jecxz
adc
rcrl
cltd
xor
mov
insb
xor
and
les
sub
aas
lea
mov
inc
jp
andl
dec
in
sbbb
dec
mov
mov
inc
push
mov
push
aaa
add
jne
fsubrs
xor
mov
xchg
in
add
mov
or
dec
pop
idivb
mov
and
xlat
imul
data16
stos
cmp
insb
lods
push
jmp
add
outsb
and
insl
add
mov
stos
mov
mov
inc
xor
das
aad
fbstp
ja
mov
lret
pop
adc
rorl
sbb
jno
int3
inc
push
cli
xchg
pop
gs
bound
rep
orl
hlt
lcall
shld
scas
sbb
lahf
ss
ljmp
stos
jno
nop
gs
stc
nop
xor
xchg
sub
inc
fldl
inc
fcomps
ss
cmpsb
mov
mov
xchg
push
out
add
mov
out
and
mov
xchg
mov
mov
lods
push
sbb
jno
jno
in
inc
lret
cmpsb
cmp
xor
fidivl
push
es
pop
pusha
notl
and
mov
push
mov
sub
adc
dec
and
sahf
ds
sarb
inc
inc
fsts
push
popf
das
je
aad
push
jb
push
addr16
flds
out
test
lret
jmp
and
pop
ds
mov
xlat
fs
xchg
sbb
push
outsl
push
push
out
push
nop
jmp
mov
pop
gs
cmc
xchg
jl
cmpl
sbb
fs
loop
test
mov
fsubrs
call
or
xchg
mov
dec
jecxz
xor
mov
cmpsl
jns
fyl2xp1
jb
ret
xchg
lret
jecxz
cltd
enter
adc
xor
shlb
push
xchg
aaa
into
adc
inc
xlat
test
xchg
jl
adcb
popf
in
test
adc
adc
mov
ja
lock
mov
jne
cmp
mov
fbstp
aam
icebp
out
jmp
and
fs
xchg
sub
sarb
in
xor
popf
adc
jg
fs
out
adc
ja
xor
insb
ss
pusha
mov
cmpsb
cmp
in
loop
std
add
xchg
sub
mov
xchg
sub
lods
inc
orl
dec
decl
mov
push
add
xor
mov
pop
scas
mull
aas
adc
clc
int
xlat
mov
xchg
push
xacquire
xor
cltd
jle
fldcw
add
clc
inc
sub
mov
cltd
mov
pop
mov
nop
daa
mov
jp
add
xchg
arpl
xchg
mov
arpl
fcoml
mov
inc
mov
and
insl
xchg
sbb
jo
cmpsl
mov
add
std
je
mov
fidivl
push
popf
xor
sbb
repz
and
xorb
fiadds
xchg
mov
jmp
adcl
push
cmc
filds
dec
insb
in
not
xchg
add
push
out
es
lahf
bound
adc
call
loop
in
lret
jmp
inc
in
icebp
add
push
xor
mov
loopne
loopne
adc
cmpsl
or
xchg
scas
lock
ss
push
loop
sub
mov
mov
cmp
cmpsb
pop
mov
rclb
sbb
int3
jl
movsl
lods
in
or
popa
dec
mov
testl
aad
vmulss
and
sbb
inc
jb
cmc
adc
xchg
adc
cmp
xchg
xor
sub
jle
mov
movsl
ret
js
mov
pop
cltd
sti
sbb
dec
loop
pusha
addl
or
imul
adc
daa
sbb
push
lods
push
aam
stos
push
cs
lods
test
lret
lock
enter
daa
aaa
sbb
inc
dec
dec
and
add
mov
cmp
les
cmp
push
and
mov
nop
in
ret
adc
cli
in
lds
shlb
mov
jmp
push
push
xchg
mov
sti
xchg
scas
outsb
adc
repnz
lods
lahf
fcompl
movb
mov
mov
or
pop
mov
mov
mov
ret
sti
mov
jbe
jnp
das
jl
test
outsb
jnp
cwtl
dec
mov
jl
jmp
cmp
xlat
outsb
stos
mov
push
por
inc
lret
push
pop
fidivrs
iret
cmpxchg
and
int3
cli
outsl
in
mov
hlt
loope
cmp
ja
hlt
mov
dec
or
leave
mov
ja
push
push
stc
lock
cmpl
adc
xchg
sbb
movsb
cmpsb
test
sbb
ror
dec
sbb
test
ja
movsl
mov
add
mov
pmulhw
stc
das
push
push
mov
pop
mov
mov
mov
dec
or
inc
dec
cmp
mov
sarb
or
xchg
sbb
mov
mov
add
inc
pop
cli
shll
cltd
add
cld
cltd
mov
in
andb
leave
notb
dec
imul
inc
and
frstor
push
sub
push
adc
and
in
rep
out
jno
stos
sti
push
fldl
pop
outsb
mov
stc
fidivl
int
fs
in
adc
and
push
loop
ds
adc
jb
int3
stos
imul
sahf
aas
rcr
inc
sbb
test
ljmp
arpl
cld
inc
cmp
andb
push
in
incb
lcall
inc
std
inc
cmp
push
scas
pop
fdivr
push
or
test
xor
scas
dec
mov
xor
mov
or
cmp
mov
sti
or
cmpsb
std
xchg
fadds
jmp
push
add
int
mov
jns
jge
or
out
test
lahf
xchg
in
and
into
sub
cld
xlat
sbb
xchg
sub
inc
cltd
inc
mov
mov
or
add
ss
adc
dec
stos
mov
jmp
jnp
xchg
push
fcoml
mov
cmp
xor
jo
cli
mov
sbb
mov
or
into
leave
jmp
inc
mov
xchg
or
mov
ret
cmp
fsubl
xor
enter
add
sbb
xchg
cmp
pop
lods
aaa
addb
in
andb
imul
out
in
enter
dec
pop
mov
xor
lods
xchg
int3
js
test
and
add
sahf
inc
dec
inc
xlat
jg
mov
mov
outsl
int3
scas
mov
gs
movsl
jp
test
data16
pop
pusha
add
push
push
mov
push
xchg
sub
pop
cmp
mov
dec
test
mov
js
sbb
repnz
cmc
adc
mov
inc
sub
xchg
fmuls
mov
ret
sub
sub
repz
testb
xchg
inc
stos
cld
xor
andl
xchg
test
mov
testb
daa
pop
icebp
pushf
fsubr
cmp
pop
xor
scas
xchg
jae
out
testl
sbb
jno
in
fisubrl
sub
or
dec
jg
inc
sbb
aas
int3
jo
cmp
stos
test
jno
add
rcrl
std
in
fisubrs
mov
xchg
and
scas
stc
cmp
mov
inc
pop
or
add
pop
jge
repz
jno
sahf
in
inc
add
mov
inc
mov
fwait
cmpsl
and
addr16
xchg
mov
testl
jnp
cmp
lods
dec
ds
ret
or
pusha
and
ljmp
add
xchg
xor
cmp
xchg
mov
dec
jecxz
jae
sub
mov
mov
mov
ret
sbb
dec
cmpsb
fidivl
sub
fdivrs
dec
int
test
adc
fucomip
push
mov
pop
fiadds
adc
rorl
out
gs
fcmovb
dec
or
jns
mov
xchg
ss
movsb
cmp
stos
add
dec
cmpsb
push
push
inc
add
dec
out
sbb
cs
jp
xchg
rsqrtps
cmc
pop
je
cmp
das
subb
lret
int3
outsl
ds
cmp
fdivrs
cmp
or
adc
jo
rorl
pop
mov
aas
push
jge
cmp
test
inc
rcrb
cmp
mov
and
movsb
push
cwtl
mov
sub
add
adc
enter
stos
out
sub
jmp
or
xchg
in
inc
movsb
mov
lret
mov
mov
fdivp
es
mov
xor
and
mov
inc
loope
jp
fildl
xor
jae
iret
pop
ficoms
jbe
add
insl
xor
in
and
fbstp
push
inc
add
fisubrs
inc
aam
je
jne
cwtl
ljmp
rolb
sub
das
xorl
rol
inc
cwtl
cmp
push
movsbl
jo
xlat
cmpsl
fisubrl
lods
mov
cmpsl
repz
ss
jmp
vpminub
popa
int
cs
inc
jb
lret
push
cmp
imul
movsl
mov
xchg
push
je
neg
mov
loop
outsl
mov
aaa
out
add
dec
cmc
clc
aas
repnz
icebp
mov
adc
inc
data16
sub
jne
adc
mov
sbb
sub
mulb
sbb
fs
cmp
aaa
jl
mov
sub
ret
mov
pop
cmp
into
and
nop
lcall
das
es
push
inc
inc
mov
inc
mov
mov
or
mov
jge
movlps
jbe
pop
lea
add
lock
sbb
filds
jecxz
jns
jns
insl
cmc
hlt
push
call
dec
rcrl
add
xor
add
mov
mov
rcl
sub
ret
cmc
in
push
sbb
xor
mov
push
rol
mov
mov
roll
in
lock
or
xor
xchg
pop
fdivrl
pop
lcall
pop
aad
decb
mov
sub
xchg
inc
mov
pop
cmpb
gs
idivb
insb
mov
ret
in
push
dec
dec
push
pusha
sub
je
sub
cmp
cwtl
mov
xor
leave
push
stos
pop
jge
push
add
call
mull
pop
jne
pop
rcrl
les
fists
dec
hlt
add
sbb
or
and
and
repz
or
loopne
push
jmp
repnz
in
scas
rorl
push
push
mov
jmp
movsl
arpl
mov
movsb
cmp
add
in
inc
mov
dec
mov
ljmp
sub
movsl
mov
jbe
mov
jo
adc
js
testl
adc
int
sbb
xor
js
and
cltd
stos
outsl
adc
jnp
lods
cmp
fnsave
dec
mov
cmp
ret
add
add
js
shrl
fstp
mov
adc
jo
lock
xchg
xchg
push
mov
sub
push
sbb
faddl
sbb
cmpsl
mov
xchg
mov
dec
lea
sbb
xchg
andl
xchg
jg
in
jo
push
xchg
sub
aas
mov
mov
mov
rorl
mov
mov
cmp
lret
aaa
mov
jns
jp
out
pop
xchg
adc
mov
push
jg
push
lea
xlat
js
jno
negb
jbe
mull
mov
adc
inc
lret
clc
addr16
xchg
mov
dec
sarb
jnp
insb
lods
adc
xor
mov
lahf
shrl
sbbl
iret
mov
sbb
mov
fs
adc
mov
ficoml
lods
or
repnz
iret
or
ret
jp
cwtl
mov
adc
mov
sub
ss
das
call
jo
xor
lcall
or
je
dec
adc
data16
xchg
scas
inc
push
or
inc
addb
stc
jnp
or
xchg
xor
lret
pop
aaa
jmp
js
push
cs
or
or
cltd
enter
aaa
js
fsin
xchg
or
js
mov
rcll
mov
arpl
jnp
push
mov
test
push
mov
inc
push
xorl
outsl
cmpsl
xchg
xor
mov
cmpsl
decb
mov
xchg
mov
ljmp
jo
adc
pop
fldt
subl
mov
and
outsb
pop
aad
ljmp
sbb
je
or
xor
popa
sbb
jbe
add
mov
daa
es
or
add
test
push
pusha
adc
in
stos
sti
in
xor
mov
xor
repz
loope
pop
test
jns
sbbl
das
out
inc
sbb
xchg
popa
out
nop
popa
loopne
movsl
outsl
sbb
call
imul
js
mov
sub
aam
js
add
mov
sub
sahf
cmp
adc
or
pop
cmpsl
mov
negl
test
pop
fstp
adc
add
fs
loope
fnsave
es
dec
xorb
push
jecxz
out
jne
stos
cmpsl
leave
jmp
adc
popf
pslld
cmp
sbb
in
loope
scas
mov
mov
andb
mov
loope
stos
fs
xor
jg
icebp
inc
sbb
adc
repnz
hlt
sub
jne
push
jb
sbb
dec
add
sub
in
jo
xor
shlb
pop
sti
rcl
imul
dec
xchg
in
popf
ja
iret
imul
icebp
xchg
cmp
inc
mov
in
mov
dec
lahf
aaa
pop
pop
fstpl
insb
lret
pusha
jbe
fcomps
shll
sub
cmpl
dec
add
cmc
pusha
cld
xchg
mov
inc
xor
negl
cmp
popf
xchg
cmp
mov
popf
pop
ror
push
jl
xor
pop
pop
push
fwait
add
inc
stos
scas
mov
cwtl
cmp
scas
insl
pop
jecxz
cmp
addr16
xlat
outsb
mov
mov
les
xlat
mov
cli
jbe
hlt
jp
mov
mov
mov
sbb
push
xor
mov
nop
pop
adc
rcrl
js
and
test
mov
xchg
jl
out
cli
xchg
and
add
fistl
or
adc
ss
push
and
add
rcll
ja
adc
aaa
dec
int3
aam
out
jne
push
xchg
sbb
mov
xchg
jle
adc
es
lret
loopne
fstl
in
push
adc
push
pop
imull
lret
enter
pusha
test
jno
xorl
inc
mov
sti
mov
jg
jl
ss
pop
pop
and
dec
jbe
push
pop
xor
outsb
mov
movsl
test
notl
sub
repz
fwait
and
sbb
pop
or
xchg
mov
in
inc
sti
xchg
jns
cmpsb
scas
in
lock
std
mov
dec
ret
hlt
insl
outsl
sub
xchg
jg
sub
jnp
jno
mov
mov
inc
std
push
sub
inc
jp
ret
adc
in
test
pop
mov
jecxz
lret
push
xchg
lcall
iret
and
or
fwait
jl
and
js
cli
mov
and
iret
mov
out
mov
stc
xchg
in
test
sbb
mov
pop
pop
mov
pushf
outsb
pop
mov
mov
sub
and
cmp
mov
push
push
pop
cmc
rol
pop
sbb
das
push
sub
xchg
inc
fcmovb
add
mov
inc
dec
loop
sub
jecxz
mov
xor
pop
xor
mov
shrl
cmp
mov
xchg
clc
pop
in
xor
std
sub
sbb
ret
loopne
insl
jne
or
lret
push
inc
pop
sbb
scas
lea
push
movsb
addb
adc
sub
les
pop
out
hlt
pop
jnp
jns
jno
cmc
pop
inc
stos
cmpb
paddusw
xchg
pop
enter
out
clc
xchg
and
das
fnsave
cli
leave
mov
testb
and
loop
adc
cli
fistpll
rcll
sbb
and
loopne
inc
xchg
mov
loopne
push
pop
mov
inc
pushf
cmp
in
lcall
sub
mov
pop
or
push
divb
imul
test
ljmp
cs
xchg
cltd
insl
add
ljmp
imul
mov
adc
and
call
lret
cld
mov
adc
sub
mov
push
loop
out
xchg
fmuls
mov
movsb
mov
lds
xchg
pop
sbb
adc
cmp
ret
ret
or
fimuls
adc
pop
mov
and
dec
loop
xchg
jmp
repz
add
sahf
xor
mov
in
test
call
bnd
mov
aas
sbb
jge
movsl
cmp
xor
sub
faddp
fisttpl
rol
inc
lock
pop
adc
leave
push
scas
sahf
roll
lcall
enter
in
iret
xchg
mov
stos
stos
pop
cmc
fsubrs
or
ret
dec
mov
call
push
jmp
loopne
or
push
mov
or
insb
fld
pop
or
rclb
inc
fisubl
ret
mov
push
outsl
addr16
adc
push
or
jp
and
mov
fisttps
lahf
and
pop
mov
inc
es
xchg
xchg
inc
fcmovnb
mov
repnz
sbb
negl
mov
xlat
leave
pusha
movb
mov
out
pop
xlat
xchg
mov
ret
fidivs
xchg
scas
inc
add
pop
scas
push
and
jne
das
inc
fsubs
ljmp
out
insl
fcmove
lea
adc
inc
int3
fistl
daa
ljmp
es
fmulp
dec
mov
int3
or
ljmp
sbb
mov
in
sbb
loopne
adc
fisttpl
jnp
adc
and
inc
in
pusha
mov
xor
jg
sbb
fsubrs
imul
aaa
jb
les
xchg
popl
or
insl
inc
jb
outsl
and
xor
insl
push
jo
fimuls
xchg
inc
and
data16
mov
pusha
add
mov
push
pushf
dec
sub
idivl
xor
inc
mov
adc
mov
inc
inc
adc
in
pop
sarl
mov
repnz
dec
xchg
dec
pusha
stc
xchg
imul
xor
push
nop
daa
xchg
xor
dec
mov
xor
cs
lahf
leave
scas
inc
mov
outsb
add
std
clc
add
addl
mov
mov
pop
daa
sahf
dec
loop
dec
or
pop
mov
ficompl
push
pop
adc
push
xor
outsb
xchg
fiaddl
lahf
ss
lea
lods
insl
add
ret
iret
data16
adc
jl
xor
arpl
lahf
ss
xor
ja
out
add
shll
cmp
or
scas
xorb
dec
mov
loopne
sbb
popf
icebp
or
sub
dec
lahf
ss
mov
fs
mov
xor
cmp
lods
mov
aad
xor
mov
jno
in
ljmp
stos
ljmp
pop
scas
or
loope
xor
sub
das
sub
xor
jb
repnz
or
jb
xor
mov
into
lods
push
sbb
or
test
leave
out
xchg
out
xor
mov
pushf
repz
pop
leave
pusha
dec
arpl
in
out
and
and
lock
mov
dec
pop
cs
and
inc
pop
out
and
adc
aas
lds
dec
mov
xor
je
imul
mov
cltd
sbb
arpl
gs
movsl
cmp
aaa
adc
xchg
filds
or
mov
ret
mov
test
dec
xchg
mov
or
insb
add
cld
xchg
inc
jle
and
shrl
iret
out
pop
push
or
cmp
jnp
pop
jne
push
fcmovb
pop
or
xchg
sub
mov
jbe
fisubrl
xor
std
pop
jbe
mov
inc
test
or
into
jl
cmc
movsl
inc
in
inc
jle
mov
inc
aam
mov
je
sbbb
sub
sti
inc
es
mov
imul
xchg
stos
mov
shrb
ret
cmp
pop
adc
aas
int3
jle
pusha
daa
in
sub
pop
daa
inc
or
xorb
push
fisubrl
xchg
push
mov
xlat
test
dec
shl
jnp
mov
ss
ret
fidivrl
insb
or
jg
sub
jge
loope
pop
push
adc
popa
fsubl
sbb
or
dec
xchg
ja
mov
fisubs
mov
mov
out
inc
sbb
jmp
jge
and
mov
je
or
xchg
sub
cld
subl
jnp
pop
clc
xor
popa
pop
jg
xchg
xchg
or
mov
mov
fwait
or
jne
aaa
test
cmp
lds
loop
rcrl
pop
clc
dec
jb
jmp
pop
rcr
fidivs
mov
and
xchg
test
mov
fidivs
int
jmp
add
scas
test
loopne
or
in
sbb
mov
arpl
mov
adc
ljmp
rcrb
rcll
sub
nop
nop
sub
xchg
mov
aaa
sub
push
mov
mov
jmp
into
inc
movsb
jmp
ret
or
inc
sbb
mov
insl
xor
mov
enter
add
es
xor
stos
add
int3
inc
add
daa
sub
xchg
out
inc
fidivl
push
cli
pop
push
jg
push
pop
gs
loop
or
lock
faddl
fs
inc
aad
inc
dec
out
jne
xor
mov
dec
int
lret
gs
out
cltd
jge
shrl
into
aas
dec
add
lods
js
leave
test
push
sbb
mov
sbb
mov
push
xchg
roll
bound
jb
cwtl
jo
inc
cmc
mov
div
sub
popa
test
push
ficoml
movsl
sarb
and
fisubl
push
push
push
aaa
pop
and
mov
cmp
mov
mov
push
mov
dec
fisttpll
call
das
adc
adc
and
ret
aad
mov
je
ds
sub
sub
jle
pop
iret
jno
mov
sbb
cmp
sub
stos
add
or
test
sub
jae
adc
cmove
mov
and
int3
pushf
sbb
cmc
outsl
stc
ds
out
add
lret
xorl
mov
pop
aam
jb
push
pop
gs
sub
or
ds
nop
xor
inc
push
or
dec
idivl
icebp
cmp
rorl
jae
push
mov
cmp
in
dec
shrl
dec
inc
leave
mov
pop
call
and
mov
arpl
push
out
test
lods
paddsb
mov
pop
inc
mov
dec
jge
mov
inc
mov
ja
icebp
pusha
shlb
lahf
rcrb
scas
lret
ss
xor
repz
pop
daa
aam
mov
xchg
pushf
pusha
cmpl
xchg
jb
scas
leave
cltd
stos
cli
rcrb
push
push
xor
mov
vpmuludq
jo
xchg
das
push
pop
icebp
lock
aas
pop
inc
cwtl
or
negl
adc
mov
aaa
std
testl
fcmovb
jno
push
xchg
lods
aaa
and
data16
test
push
cltd
push
cmp
inc
lahf
and
inc
sbb
add
and
pop
aaa
sti
xchg
pop
and
dec
add
xchg
dec
bound
js
lods
lret
xor
fsubrl
in
jle
je
aam
sub
js
sub
repz
xor
mov
test
sti
jo
xchg
adc
mov
imul
shlb
sbb
push
jle
mov
insb
repz
leave
aas
xor
popf
roll
mov
test
xchg
inc
cwtl
dec
adc
fidivl
push
popa
addl
arpl
scas
fs
jle
sahf
in
jmp
xor
loope
mov
dec
fimuls
enter
push
jo
sub
aas
cmpsb
xchg
hlt
fwait
dec
movl
pop
jbe
push
leave
push
sti
pop
push
lea
jnp
shrl
push
jg
mov
int
dec
int3
jmp
dec
sahf
rorb
mov
aam
jb
clc
movhps
mov
sarb
sub
aas
sbb
xor
pusha
cmp
sub
mov
sub
fisubrl
cmpsb
mov
enter
sbb
inc
outsb
testl
jo
movsl
les
lea
nop
gs
lods
inc
nop
rol
lahf
cwtl
int3
out
xor
test
testl
movsl
fcmovnbe
sub
icebp
cmp
fldcw
pop
and
inc
pop
aad
gs
in
mov
jle
lahf
add
dec
jno
inc
sarb
imul
dec
arpl
nop
sbb
repnz
testl
sub
sahf
cmp
sahf
orb
adc
xor
loopne
or
into
icebp
fbstp
call
std
xchg
or
dec
fwait
popa
mov
adc
push
sbb
sbb
dec
push
loop
xchg
and
bound
xor
mov
inc
sub
enter
pop
sbb
pop
sbb
popa
mov
cmp
cli
inc
sbb
sbb
lahf
leave
cmpsb
dec
fcomip
mov
out
ret
mov
push
stc
into
sub
stos
xchg
aaa
ss
xchg
out
adc
in
dec
sub
mov
es
cmp
or
fidivrs
sub
loope
inc
popa
das
test
stos
cmp
notb
push
int
pop
int
jae
push
sub
and
push
push
jnp
and
or
adc
mov
xchg
mov
in
pop
and
inc
hlt
mov
stos
incb
sbb
iret
cwtd
push
fdivp
aas
pushl
ret
inc
mov
fisttps
lock
ret
sub
pop
or
jl
js
adc
dec
sbb
cmpsb
lock
fildll
dec
mov
or
cmp
fsubrl
sti
cmp
out
les
addr16
loop
mov
pop
and
jns
xor
dec
jge
pop
dec
sub
adc
mov
push
aaa
cmp
aaa
sub
lds
mov
leave
arpl
ret
int3
fs
loop
pushf
out
in
inc
cmp
adc
and
lret
xor
int3
lods
dec
sbb
jb
aas
fmull
pop
hlt
stos
leave
fimull
leave
dec
je
scas
aas
mov
in
mov
out
pop
add
pusha
cmpb
pop
rcll
push
test
add
fwait
daa
push
inc
call
popf
icebp
popf
jge
mov
sub
inc
loope
enter
inc
out
inc
cli
shrb
cmp
out
lods
hlt
adc
lret
movsl
adc
ret
mov
and
test
inc
jo
fisubs
pop
out
mov
sub
dec
pusha
push
cli
stc
in
mov
shlb
les
iret
loopne
mov
mov
jbe
out
cmpb
jne
lock
inc
jle
jmp
adc
ss
out
mov
adc
daa
add
pop
add
mov
mov
xlat
clc
mov
mov
jbe
mov
aam
sbb
fcmovu
adcb
adc
mov
fidivrs
or
shrb
pop
push
push
ftst
sub
xchg
fnstcw
push
sbb
mov
sti
push
daa
aaa
cmp
push
pop
aas
push
xchg
xorb
stos
inc
stos
inc
lret
int3
lret
jmp
push
inc
pusha
outsb
loope
xchg
jmp
adc
neg
out
or
mov
ret
pop
xchg
lock
cmp
pop
outsl
add
xorl
orl
xchg
lods
imul
mov
fisttps
cltd
jge
and
cmp
std
lret
mov
sub
aas
push
mov
fnsave
ficoms
out
xor
out
adc
xor
por
iret
pop
xor
movsb
push
lds
push
sahf
mov
icebp
jb
and
nop
push
push
push
bound
sub
rorb
mov
out
mov
orb
push
push
mov
shrl
mov
xchg
shrb
sti
scas
mov
adc
rcrl
shr
ss
cs
loopne
ret
gs
rorb
and
mov
xlat
xchg
jne
pop
pusha
popa
cmp
enter
test
rolb
pushf
adc
push
out
lahf
test
pusha
add
xor
mov
lds
enter
add
repz
imul
pop
jo
add
sbb
into
ret
cmc
fwait
orb
dec
push
cmc
adc
or
cltd
jl
cld
clc
shll
and
lret
gs
jl
outsl
xor
test
sbb
jne
jle
clc
and
or
xchg
fnstsw
adcb
mov
test
cmc
ja
mov
jle
xor
cwtl
mov
aaa
lret
test
adc
jmp
stos
fcmove
adc
or
xchg
jb
fwait
push
cmp
movsb
xchg
nop
push
dec
and
in
inc
popa
imulb
ss
in
adc
add
sti
xorb
xchg
iret
inc
cld
in
movb
outsl
xor
pop
lret
jne
mov
frstor
popa
in
lahf
pop
out
cmpb
and
insl
adc
push
sti
sbb
mov
lcall
js
and
xlat
in
xchg
vprotd
leave
pop
fldt
push
xchg
aad
daa
mov
fldl
sub
lahf
repz
jecxz
cwtl
cltd
xor
lea
push
sub
fldt
xchg
sub
xchg
dec
aaa
movsb
sub
mov
cmp
add
icebp
nop
popa
jp
mov
push
xchg
insb
add
ss
mov
ja
lcall
int
ds
mov
lds
cmc
dec
jl
mov
adc
pop
in
shrb
jle
pop
cmp
mov
xor
adc
add
jmp
and
adc
and
jp
loope
sub
adc
stos
fs
addl
jae
xlat
mov
ljmp
push
xchg
out
push
sbb
icebp
jnp
add
imul
or
xorb
mov
int3
or
pop
in
sbb
lret
jbe
push
adc
shlb
ror
fdivs
jnp
push
ljmp
xchg
data16
ljmp
adc
xor
push
jb
movsb
les
xchg
xchg
addr16
adc
lea
push
icebp
dec
sbbl
hlt
push
jns
mov
aad
inc
testl
popa
outsl
mov
and
push
les
pop
popf
pop
pop
fldl2e
lea
mov
xlat
js
jecxz
jne
sub
fsub
add
pop
add
sub
add
jb
add
hlt
adc
fxch
arpl
cmp
leave
jmp
aaa
mov
jno
push
jnp
xchg
jle
fstps
leave
dec
loope
cmp
mov
push
into
or
sub
or
sbb
arpl
aaa
into
inc
shlb
push
inc
mov
pop
in
stos
imul
lock
adc
jg
adc
adc
xor
push
inc
cld
outsl
ss
js
shrl
inc
pop
icebp
jb
adc
inc
daa
mov
sub
inc
dec
repnz
mov
cmp
enter
gs
or
pop
ret
pop
mov
xor
xchg
jo
mov
ret
ret
add
inc
fcmovnu
incb
sti
mov
inc
mov
jmp
push
xchg
ljmp
mov
icebp
into
inc
fsubr
push
add
jne
and
lods
mov
mov
and
rclb
imul
push
dec
mov
in
pop
fmul
aaa
insb
jle
sub
sbb
and
outsl
xchg
lods
enter
cltd
sbb
mov
andl
pop
das
cmpsl
ret
rcr
movsl
test
dec
pop
push
fdivs
adc
add
int3
fisubrs
mov
jo
and
push
mov
pop
fs
pop
shlb
daa
jmp
sbb
popl
pusha
stc
ret
mov
adcb
into
sub
imul
lods
inc
push
int
ds
pop
inc
out
sarl
add
adc
sub
jp
lahf
or
int
jecxz
lods
sub
pop
iret
push
mov
clc
jge
mov
int3
xlat
and
test
add
cs
jnp
icebp
push
sub
sbbb
daa
jg
xchg
jl
jbe
jae
ret
call
test
jp
pop
jne
dec
cmpsl
cmp
dec
pop
push
xor
ret
ret
mov
dec
cmp
ror
add
aas
pop
imul
outsb
mov
sub
nop
and
or
push
pop
add
aam
inc
xchg
lcall
out
sbb
inc
loopne
out
test
jecxz
pop
cltd
xor
sub
sbb
jp
daa
clc
jae
dec
cld
aas
mul
call
aaa
and
ficoms
mov
adc
pop
out
cmc
add
mov
andl
jg
push
int3
sahf
mov
cmp
mov
aas
hlt
lock
or
sub
mov
jno
movsl
push
mov
cli
inc
inc
lea
in
dec
pushf
push
push
mov
inc
mov
shlb
jnp
out
xor
roll
push
dec
dec
stc
aaa
dec
sub
fcomps
cmp
jmp
scas
mov
stc
repnz
fwait
cmpsl
sbb
xor
int3
jne
cld
pusha
mov
imul
pop
out
sub
jns
mov
cmpb
nop
mov
loop
call
xor
mov
sub
lds
out
xor
shrb
push
push
adc
int3
in
inc
insb
subl
fisttpll
mov
shrl
outsb
insl
sahf
or
cmp
inc
ljmp
xor
aam
or
outsl
inc
cld
or
push
in
or
jp
pop
les
sbb
or
inc
std
hlt
mov
rorb
pushf
mov
mov
cmp
xor
xor
xor
ja
and
out
rcll
lods
fsubrs
mov
mov
xor
in
cmp
imul
xor
sar
repz
pop
shll
sbb
xchg
mov
sub
scas
pop
insl
data16
fiadds
arpl
ss
mov
push
add
mov
push
les
shll
inc
mov
xchg
imull
or
shll
or
and
and
data16
imul
mov
mov
in
xlat
repz
out
lahf
sahf
in
jp
iret
sar
cmp
cltd
mov
cmp
dec
sub
cld
scas
loopne
dec
mov
add
jo
insl
sbb
nop
jnp
data16
lea
insb
push
sub
stc
pop
pop
or
ficoms
push
jns
es
fidivs
or
xchg
pop
outsl
and
loopne
sbb
arpl
in
push
mov
shrb
pop
insl
push
mov
sub
out
test
lret
test
movsl
loope,pn
shlb
or
mov
cli
lret
sbb
xchg
fbstp
sbb
test
dec
je
or
mov
adc
pop
int3
mov
ja
cs
testb
add
andb
push
mov
dec
pushf
addb
and
mov
cmp
fdivrl
push
daa
cli
stc
test
mov
pop
and
dec
xor
jnp
scas
sub
loopne
loop
rorb
adc
lock
mov
dec
sub
jp
lods
test
orb
xor
jns
sub
push
bound
data16
arpl
test
ss
push
add
aas
lret
inc
out
in
adc
pop
lock
xor
lods
shll
outsb
pop
ljmp
out
push
lds
mov
mov
pop
xchg
dec
inc
out
hlt
xlat
cmc
rcr
test
jo
lods
inc
mov
lcall
popa
out
push
mov
jecxz
cmpsb
sahf
mov
mov
adc
fisubrl
mov
or
jle
xor
cmp
dec
flds
inc
cld
cmp
sbb
dec
jae
dec
lds
jge
cmp
cmpsb
sub
cmp
dec
repz
fwait
stos
or
mov
jmp
ret
scas
jmp
and
push
adc
push
dec
call
xlat
jl
cmpl
push
fidivrs
popa
pop
add
sbb
ret
dec
fldenv
and
shlb
test
mov
push
mov
movsb
test
fidivrl
fbld
test
idivb
outsl
jg
scas
inc
fs
cli
or
bswap
mov
xor
add
repnz
sub
lcall
lock
stos
sbb
test
adc
js
in
int
test
inc
scas
pop
jae
pop
inc
aad
loope
int3
inc
dec
jecxz
out
ds
pop
out
cmp
jo
lret
pop
add
and
mov
cmc
jae
xchg
dec
fstps
pop
jmp
mov
hlt
ss
add
cmp
jno
sub
cmp
out
aaa
fs
in
sbb
add
dec
movsb
ljmp
ret
or
sbb
xor
cmp
cmp
sbb
ret
insb
xchg
jl
cs
sub
jg
cmp
pop
nop
lahf
fdivl
fidivs
in
insl
cli
xor
pushf
inc
sub
jnp
cmc
daa
add
aad
call
iret
das
jg
pushf
outsl
subl
stos
add
cwtl
hlt
mov
pop
enter
adc
int
mov
clc
push
mov
and
xchg
jge
imul
xchg
imul
test
cmp
stc
aaa
xor
test
bswap
fdivs
insl
jge
xor
aas
inc
mov
lret
cli
push
ret
ret
push
arpl
sti
iret
jg
add
xor
mov
xchg
test
mov
pop
mov
xor
cmp
inc
sti
movsb
adc
mov
sub
loop
mov
ss
push
xchg
bound
inc
daa
test
lea
cmp
sbb
jle
sbb
push
cmp
jmp
dec
xchg
out
les
movsb
xchg
or
insb
push
imul
sub
mov
mov
popa
pusha
and
es
adcl
mov
in
and
filds
lret
test
ja
stos
or
xchg
pop
cld
xor
mov
xor
daa
dec
icebp
sbb
ret
dec
arpl
pop
iret
xchg
inc
mov
enter
fcmove
std
cwtl
xchg
ja
loop
sti
and
call
push
lret
ljmp
fcmovu
or
cmp
push
push
adc
cmp
push
int3
rcrb
xchg
or
xchg
lods
movsb
jle
xchg
rcr
jnp
sub
or
out
jg
pop
add
mov
call
das
pushf
cltd
lret
mov
cmpsl
bound
mov
pop
nop
cmp
mov
mov
mov
push
push
pop
pop
gs
jno
aaa
mov
addr16
pop
dec
dec
fcom
and
push
dec
and
cmc
xor
adc
loopne
imul
add
lds
shrb
push
cmp
and
aas
outsb
in
lods
mov
mov
inc
jne
cmp
cmp
pop
mov
test
arpl
sbb
shrl
jecxz
mov
pop
cmp
pop
test
xchg
push
or
adcb
fiadds
mov
mov
cwtl
loope
add
dec
dec
and
in
mov
mov
pop
stos
fmul
or
adc
adc
xor
mov
jne
imul
mov
adc
test
add
jle
test
fidivl
adc
rclb
out
xor
pop
movsl
in
inc
inc
insb
inc
push
rcl
rolb
mov
xchg
sub
cs
xchg
inc
fwait
mov
fcmovnb
push
or
adc
push
mov
xor
inc
jno
cmp
push
stos
dec
testb
subb
xchg
mov
pop
cwtl
insb
repnz
sub
popf
test
push
sbb
xchg
test
outsl
push
mov
ja
sub
and
xor
lods
cmp
push
pop
inc
xor
lods
stos
and
push
fadds
or
sub
ja
sub
movsl
popa
inc
repz
sub
mov
lods
inc
inc
pushf
pop
cmp
add
dec
or
test
fwait
dec
jnp
cli
mov
loope
ret
xchg
sbb
pop
or
add
jle
mov
pop
pop
xor
jecxz
mov
ds
out
enter
dec
divb
mov
stc
data16
jmp
xchg
cltd
imul
mov
js
adc
in
aas
dec
mov
sbb
sarb
xor
adc
dec
mov
push
pop
mov
dec
dec
dec
adc
mov
outsl
push
lcall
cmc
mov
mov
or
mov
push
into
jl
cs
pop
lret
ja
lds
inc
aad
jae
add
and
pop
mov
frstor
lret
mov
bound
jle
icebp
and
out
test
repz
inc
cmpsb
mov
icebp
dec
ss
out
xchg
xchg
pop
inc
arpl
out
adc
fbstp
fsubr
cmp
jno
add
out
or
dec
cmp
shlb
cmp
je
es
dec
or
mov
movsl
ffreep
and
cltd
mov
cwtl
sbb
lcall
add
jo
sbb
sbb
rclb
fimuls
and
inc
pop
lret
imul
fbld
mov
addr16
and
or
jg
movsb
repz
mov
pop
rolb
pushf
pop
decl
mov
shr
xor
or
push
push
ljmp
jno
ds
dec
rorl
setb
mov
dec
jnp
loopne
jnp
cmpsb
stos
mov
and
ret
xor
mov
fsubrp
push
mov
push
mov
xor
jmp
arpl
or
jne
mov
ret
jnp
pop
push
mov
mov
scas
push
es
arpl
js
orb
pop
adc
push
mov
jg
mov
jo
ret
cltd
jle
mov
aaa
jp
xor
fmuls
jne
lods
int3
out
xchg
mov
cmc
adc
ja
outsl
testb
pushf
inc
test
fldt
fbstp
xchg
sub
cmpsl
scas
inc
xlat
mov
imul
push
push
xchg
jns
cmpsl
add
xor
push
cmc
cmp
sub
imul
imul
cmp
leave
fs
and
arpl
jmp
dec
into
aad
ljmp
rorl
popf
jecxz
js
dec
sub
pop
loope
add
sbb
jecxz
inc
cmp
ljmp
sub
xchg
mov
popa
pop
int
xor
xchg
push
clc
inc
xchg
mov
lret
mov
mov
sbbl
and
int
add
test
mov
xchg
pop
out
push
and
mov
and
cmp
adc
mov
int
lock
jmp
xor
mov
in
mov
xchg
aaa
jbe
imul
lcall
imul
push
jge
fs
and
xchg
dec
or
sub
es
push
mov
mov
les
mov
mov
inc
xchg
dec
stos
popa
add
sbb
push
outsl
mov
pop
repz
les
loop
add
xor
pop
aad
jecxz
push
adc
loope
sbbl
push
shrl
fsts
out
sahf
xor
adc
movsb
inc
cwtl
jge
cmp
xchg
adc
push
mov
cmp
call
mov
imul
inc
push
dec
xorl
and
loopne
sbbb
mov
cltd
outsb
shrb
xor
fidivs
adc
push
bound
adc
out
dec
pusha
push
in
movsl
cmp
xchg
or
adc
sub
mov
lret
xchg
jg
xchg
sub
insb
subl
mov
xchg
lcall
loope
je
xchg
cs
pop
pop
cmc
nop
push
jge
dec
pop
popf
dec
insb
xor
jp
jmp
iret
dec
add
mov
jb
shl
add
insl
ss
push
out
push
sub
and
xor
pop
test
sub
inc
mov
aas
sbb
movsb
cmpsl
lea
les
pop
ja
lahf
mov
jno
sub
xor
pusha
fldt
sub
out
mov
mov
sar
mov
inc
movsb
add
lret
sbb
pusha
pop
pusha
pop
push
movsl
mov
mov
test
adcb
arpl
jne
test
lret
fldl2t
inc
jg
cmc
orb
pop
pop
xor
add
sub
fldt
in
mov
orb
xchg
insb
sbb
inc
nop
lods
xchg
stos
or
mov
rcrl
mov
mov
inc
push
lret
idivb
dec
in
mov
insl
sahf
pop
adc
inc
mov
fdivs
adc
sub
iret
imul
add
test
jns
testl
fs
adc
ret
repnz
push
adc
mov
fldcw
lcall
cmc
and
cld
lahf
jnp
in
stc
mov
pop
add
hlt
out
mov
fst
adc
cltd
pop
fists
lods
lcall
loopne
cs
and
fisttpl
sub
cmp
cmp
jno
xchg
push
xchg
jp
out
cmp
jp
cmp
xor
sbb
cs
mov
mov
mov
and
out
loop
aam
inc
push
adc
inc
js
mov
mov
dec
xor
push
dec
xor
into
add
xor
test
mov
xor
subb
icebp
inc
testl
push
cmc
push
xchg
sub
pop
lret
aam
es
ljmp
loop
stos
cltd
cs
add
jb
pandn
call
popl
lea
sti
sbb
mov
adc
push
imul
popa
adcl
push
inc
inc
add
xor
fwait
jb
inc
nop
push
xchg
stc
and
cli
repz
mov
adc
movsl
xchg
adc
pop
push
out
dec
mov
in
sub
js
leave
fistl
rorb
and
xlat
cmp
inc
xchg
xchg
cltd
mov
jnp
ret
out
jecxz
push
dec
mov
cld
setne
push
aas
aas
or
mov
xorb
in
je
and
mov
addr16
inc
ss
iret
data16
mov
je
sub
pop
mov
gs
stos
mov
repz
sub
movsl
pop
pop
js
shlb
ljmp
and
inc
rorb
jmp
ret
in
inc
pop
test
add
es
cld
fmuls
std
scas
pop
cli
cwtl
add
cmp
lock
nop
mov
shlb
sbbl
pop
pop
lahf
ror
sbb
bound
les
inc
cs
pop
push
pushf
stc
sub
inc
mov
std
lret
imul
movsb
add
nop
mov
mov
sub
mov
mov
push
out
pop
pop
cs
and
xchg
call
movsb
push
xor
gs
repz
mov
inc
push
cwtl
and
loope
pop
xchg
push
je
jns
xchg
addb
jmp
in
std
jbe
mov
cwtl
sub
push
xchg
cli
mov
dec
mov
xchg
iret
cmp
popf
loop
out
pop
sbbb
push
xchg
pusha
stc
mov
jne
push
rcll
sub
push
cwtl
je
movb
js
in
fsts
sbb
subl
lahf
int3
movsl
repz
imulb
push
xchg
dec
inc
jge
jl
int3
in
jbe
add
cmp
frstpm(287
sbb
loope
cmp
mov
push
mov
adc
xor
xchg
push
ss
push
sahf
push
adc
gs
sub
dec
mov
xor
fnstsw
or
pop
cmpsl
or
loop
jne
mov
adc
jp
mov
sbb
xchg
out
mov
movsb
test
idivl
mov
or
jnp
fdivs
lahf
jl
add
mov
inc
cmc
mov
jmp
pop
mov
push
jbe
dec
push
xor
ss
xchg
adc
xor
dec
mov
adc
cmp
pop
dec
out
cmpsl
lods
fwait
push
sub
lahf
push
push
adc
xchg
cmp
add
mov
cmpsl
sbb
call
cmp
mov
cmpsb
jno
gs
xchg
jmp
aas
std
aam
sahf
jne
add
xchg
and
adc
bound
cmp
inc
push
ret
cmp
sub
mov
sbb
out
in
pop
dec
pop
cmpsb
push
inc
push
int
test
fwait
lret
jno
inc
xchg
movsl
push
imul
adc
gs
notl
dec
loope
shll
mov
and
test
sub
adc
pop
rorl
xor
ja,pn
shlb
test
jg
pop
mov
xor
insl
rclb
add
lahf
pop
cld
jnp
add
sbb
je
mov
stos
or
jl
in
add
ja
sbb
test
push
dec
or
out
shlb
add
aad
sbb
dec
add
mov
inc
aaa
jae
inc
iret
stos
mov
mov
push
push
adc
sub
jno
add
push
cmp
jecxz
mov
popl
shll
aas
fnstcw
pop
mov
in
jo
pusha
stos
out
fstps
push
jecxz
stc
dec
pushf
imul
jo
test
in
ret
or
jecxz
out
mov
xchg
jecxz
mov
dec
loopne
adc
push
es
jge,pt
inc
fimull
cmp
out
sbb
mov
inc
adc
dec
lret
addr16
sbb
add
aam
mov
adc
mov
repz
add
xor
pop
xlat
cmp
aam
inc
insl
scas
and
pop
adc
aad
popf
xor
mov
iret
shl
aam
dec
stc
sar
mov
cmp
sub
dec
jo
ja
into
enter
int
lea
mov
xchg
jle
jl
inc
sub
pop
insb
xchg
movsl
loopne
shrl
dec
mov
imul
lahf
push
fistps
mov
pop
imul
push
lahf
push
jl
sbb
sbb
cmc
das
adc
cmp
ljmp
mov
outsb
hlt
daa
xchg
aam
ss
cmc
outsl
dec
stc
ss
inc
mov
hlt
ret
and
and
scas
add
xchg
sub
fadds
jno
fnstcw
xor
nop
sbb
cmp
push
pop
ss
mov
es
mov
mov
movsb
jg
xchg
inc
mov
loope
fnstenv
sar
jb
cmp
dec
lods
jo
jb
mov
add
pop
bound
jnp
and
fwait
out
adc
adc
mov
sub
jl
sbb
jle
cltd
cld
rolb
push
sub
stos
push
push
mov
in
pop
hlt
stos
mov
push
jae
cmpsb
push
jno
sub
clc
aad
sub
daa
in
addr16
jnp
inc
mov
push
inc
mov
inc
aad
mov
jbe
pop
rcr
push
cltd
jecxz
rorb
cmpsb
cmp
inc
movb
mov
pop
in
test
call
es
fisubl
std
out
sub
sbb
mov
xchg
sub
movsb
out
test
dec
dec
movsl
mov
faddl
arpl
dec
and
inc
push
outsl
test
iret
les
repnz
bound
nop
into
push
jb
or
les
stc
push
movsb
mov
cli
ret
lods
dec
mov
push
es
add
sbb
int
mov
inc
xlat
lret
push
sub
and
jmp
add
mov
adc
sub
push
mov
xchg
or
cmpsb
loop
hlt
or
ljmp
jno
mov
clc
pop
test
lods
push
mov
pop
out
xchg
hlt
data16
lret
xlat
sbb
sbb
test
adc
nop
xchg
and
outsb
std
in
jge
shlb
mov
push
fstps
fwait
notb
sbb
jecxz
mov
xlat
xchg
aas
mov
fs
sbb
cmp
mov
rcl
scas
popf
and
xor
sahf
add
and
or
pusha
push
xchg
movsb
mov
xchg
movsl
pushl
inc
jg
mov
push
daa
mov
sahf
or
cmpl
mov
push
adc
pusha
mov
adc
in
inc
jmp
loop
dec
adc
ss
hlt
aad
and
xchg
xchg
repz
jl
cs
lods
pop
xchg
cmc
pop
sub
push
mov
mov
aam
xlat
movsb
nop
nop
push
push
addl
dec
pop
hlt
ficomps
dec
cmpsb
lds
icebp
movsl
jns
sub
lcall
in
cwtl
jbe
fcoml
andb
pop
xor
xor
in
imul
sbb
outsb
leave
test
es
gs
cmc
push
sub
xor
call
cmpsb
sbbb
fwait
cmp
sub
arpl
daa
int3
movsb
pop
imul
gs
fsubrs
xchg
int
sub
ljmp
lahf
push
add
and
movsb
cwtl
or
cmpsl
outsb
mov
ret
adc
mov
push
xchg
mov
add
mov
mov
xchg
lret
add
orb
int
mov
out
and
xchg
out
push
sbb
cmp
sbb
cmpsb
in
dec
pop
cmp
lret
loopne
int3
mov
and
test
inc
pop
mov
add
sbb
fsubl
sarb
dec
stos
repnz
sbb
xchg
inc
cmc
mov
movsb
add
setbe
enter
mov
test
addr16
push
lcall
fnstsw
jecxz
inc
lret
pop
mov
cwtl
pusha
ss
dec
call
std
dec
jne
adcl
xchg
lds
xchg
daa
pop
xor
fmuls
cli
cld
inc
jns
aaa
sub
inc
aam
inc
fisttpll
mov
lahf
adc
mov
pop
nop
subb
bnd
sbb
mov
dec
dec
lret
jnp
test
mov
fs
cld
std
mov
xchg
lock
and
aas
cmc
pop
cs
pop
ret
sbb
push
test
les
mov
cltd
jecxz
mov
pop
mov
insl
lret
movsl
sbb
jg
loopne
repz
jle
int3
test
pop
jne
lea
out
inc
cmp
sahf
or
cmpsl
xacquire
add
inc
repnz
mov
mov
sub
notl
scas
fsts
xor
mov
call
mov
adc
dec
dec
and
cmpsl
sub
dec
les
xor
out
mov
stos
cmc
enter
sbb
push
pop
push
pop
in
xchg
lods
pop
add
lock
lock
in
inc
inc
push
dec
mov
xchg
inc
sbb
pop
icebp
push
out
mov
jge
lahf
jbe
sub
adc
ss
xchg
jmp
pop
imul
les
inc
divb
into
pop
out
pop
jmp
xchg
loopne
jbe
shrl
ret
dec
xchg
pusha
idivb
popa
xor
call
push
push
dec
loope
scas
outsb
adc
mov
out
push
pop
adc
cmp
mov
or
mov
nop
cmp
lret
insb
repnz
cmp
shrb
xor
loopne
sti
push
out
imul
xor
cmp
dec
pop
add
hlt
je
dec
loop
or
mov
movsl
imul
and
mov
and
das
mov
sbb
mov
cmc
adc
push
in
bound
mov
test
aaa
push
sahf
daa
jle
pushf
lcall
jbe
sbb
or
mov
jge
or
unpckhps
adc
dec
test
and
sub
mov
cmp
fsubs
cmc
jo
inc
scas
push
add
sar
cmp
add
add
insl
inc
in
fmull
out
mov
xor
cmp
cmp
push
mov
stc
std
daa
mov
fstpl
fld
inc
xor
pop
fwait
push
inc
xor
add
xchg
jne
imul
mov
jg
sub
jle
mov
icebp
or
sub
mov
inc
xor
xchg
jae
mov
mov
mov
xchg
or
lahf
sub
popf
movsb
movsb
add
mov
mov
mov
dec
jnp
test
inc
mov
adc
sbb
inc
mov
fcomi
divb
xchg
sbb
subb
insb
das
jg
ja
in
add
int
out
cmc
repz
das
xchg
jge
rcrl
ja
sbb
sbbl
scas
data16
icebp
inc
and
lea
or
xor
cmp
loope
sub
push
arpl
add
insl
fldcw
call
xor
es
test
ja
add
data16
pop
mov
les
movsl
sbb
dec
fsubl
das
loopne
scas
or
aam
mov
cmp
stos
add
push
mov
inc
lea
imul
negl
and
sahf
mov
shrb
cmpl
in
iret
push
mov
pop
pop
in
rorb
jmp
pop
jne
dec
cmpsl
jle
push
mov
aaa
mov
cmp
mov
test
repz
lahf
mov
test
add
je
int
cmp
xlat
ja
add
ja
sub
aad
ja
sbb
xchg
dec
int3
repnz
or
rol
jb
popf
mov
fistps
jg
sbb
ljmp
adc
test
pusha
dec
popa
xchg
cwtl
sbb
mov
data16
ljmp
ror
cmp
lds
cmpb
pop
cmp
mov
rolb
push
shlb
cmp
out
test
pushf
fistl
dec
xchg
pop
leave
jae
xor
cmp
insb
add
add
or
outsl
mov
push
inc
mov
jmp
jns
mov
pop
and
ds
pop
scas
adc
out
cmc
aad
ss
loop
jnp
adcl
mov
mov
push
sub
pop
in
adc
xor
push
sub
movsb
jno
pop
adc
pop
mov
ss
xchg
pop
push
cmc
addb
fldenv
inc
xchg
in
adc
push
lea
cli
mov
xchg
sbb
and
bndstx
cwtl
or
sbbb
mov
mov
sub
data16
rcl
scas
inc
jmp
or
lea
out
cmc
sub
sbb
int3
cmp
arpl
sbb
xor
inc
cltd
and
dec
rcrb
pop
jl
mov
adc
sbbl
repz
inc
test
ljmp
pop
mov
add
xor
fstpt
lea
cli
mov
icebp
adc
insb
fbld
ret
push
ljmp
call
xchg
mov
or
inc
mov
dec
mov
mov
inc
ret
out
loop
lret
and
mov
int3
mov
stc
popf
lret
imul
pop
sbb
test
pop
jge
movsl
rorl
xor
scas
and
mov
pop
pusha
mov
xchg
cmp
cs
mov
cmpsl
lret
bound
data16
outsb
add
cmp
adc
leave
inc
sbb
leave
bound
js
push
lcall
test
dec
pop
jmp
iret
fs
push
jb
cld
jmp
jg
aas
xchg
adc
imul
mov
xchg
not
out
out
xor
adc
jbe
or
std
xchg
and
mov
cmpsb
push
add
mov
sub
shlb
lcall
ljmp
cmc
test
inc
nop
mov
insb
add
mov
out
push
jnp
nop
loopne
jge
or
arpl
hlt
cltd
jo
rcll
pusha
and
xchg
stos
cmp
add
aas
mov
ret
ficompl
pop
hlt
mov
ret
sti
test
add
sbb
movsb
pop
xlat
mov
ljmp
stc
and
call
xchg
addl
cltd
movsb
inc
ja
mov
pop
pop
xchg
mov
mov
pop
jle
shll
push
data16
ja
sbb
mov
xor
leave
mov
or
adc
or
xor
xchg
add
call
xorl
jbe
xchg
pop
push
xlat
and
mov
fucomi
mov
dec
loop
mov
cmp
inc
imul
lret
push
sahf
repnz
loope
movb
push
jmp
and
orl
andl
adc
push
cs
or
stos
scas
aaa
xor
nop
pop
scas
leave
enter
ljmp
nop
outsl
push
jmp
movsb
outsl
je
or
std
xchg
add
mov
push
fcomi
bound
inc
adc
push
lock
stos
arpl
scas
dec
ficompl
loope
sarb
xchg
cmp
aad
out
ret
aam
mov
mov
jae
mov
cmp
lahf
add
iret
pop
shl
mov
mov
mov
adc
push
mov
xor
xchg
xchg
jbe
rcl
repz
mov
xchg
sbb
push
xchg
jl
mov
test
xchg
sbb
mov
pusha
xchg
outsb
jecxz
mov
movsl
adc
jle
xchg
mov
popf
and
mov
loopne
dec
out
outsl
xor
imul
sub
add
out
push
lcall
push
mov
arpl
fsubr
xor
mov
cmpsb
in
mov
push
sbb
mov
dec
filds
add
xor
idivb
inc
sbb
dec
dec
data16
mov
xchg
divl
dec
fcompl
jg
push
mov
ret
repz
enter
jae
stc
test
xchg
fnstenv
out
icebp
jl
pop
sbbl
in
pop
fwait
mul
js
mov
jmp
inc
or
pop
jecxz
fists
jmp
jecxz,pt
ds
int
mov
lahf
js
sahf
mov
fisubl
xor
cli
pop
cmp
sti
dec
cmp
pushf
imul
inc
add
mov
push
cld
sbb
mov
popf
out
jmp
out
jne
es
lea
out
jg
pop
jno
icebp
mov
shrb
mov
cmpsb
mov
mov
lret
imul
in
adc
aaa
dec
cmpsb
clc
je
jp
leave
inc
or
dec
jecxz
xor
cmp
pop
popf
les
mov
hlt
pop
or
jae
push
shrl
mov
pop
repz
jecxz
insl
mov
mov
jb
sti
in
adcb
je
repz
cmp
testl
lret
out
jns
out
xchg
inc
add
std
add
push
movsb
lcall
outsb
test
mov
push
imul
xor
pop
imul
mov
sbb
rcrb
and
es
mov
mov
lahf
imul
movb
insb
rclb
mov
pushf
or
add
add
mov
adc
lcall
loope
jnp
pop
shrb
mov
and
cli
mov
std
out
outsb
fwait
xorl
mov
gs
mov
cmp
and
or
jno
mov
int
aam
jbe
push
stos
aam
push
xor
adc
or
addr16
outsl
push
cltd
push
cmpsb
sbb
or
push
jg
fidivs
test
ja
js
dec
xchg
cmc
mov
loope
jae
je
stc
loopne
cmp
subl
jo
xor
cwtl
push
mov
adc
xor
cld
std
data16
popa
leave
sub
mov
stos
sbb
xchg
cmpl
mov
mov
and
js
sub
add
incl
lcall
push
xlat
push
stc
jbe
ds
xchg
fcomi
jne
test
dec
arpl
add
subl
xlat
push
sub
out
sub
pop
popf
cmpsb
xchg
mov
add
in
aaa
add
or
or
cmp
stos
jl
and
fucomip
and
rcrb
pop
add
dec
rcll
mov
imul
hlt
inc
lret
gs
cmc
lret
xchg
cmpsl
lds
lds
fdivp
les
in
mov
lahf
inc
jmp
vandps
int3
arpl
jbe
lods
mov
add
into
in
pop
divb
pop
jl,pt
subb
and
fnstenv
addl
dec
pop
push
stc
sub
movsb
repnz
fwait
js
mov
push
push
out
push
enter
or
loope
ljmp
xlat
xchg
add
cmc
xchg
pop
aas
sahf
popf
rcl
mov
mov
dec
add
and
or
xchg
inc
pop
push
aad
mov
cmpsb
cmp
xchg
and
bound
cmp
aaa
aaa
std
into
repz
mov
mov
adc
or
add
push
inc
inc
loop
fstl
inc
mov
fidivs
es
stc
xchg
cld
data16
pop
mov
add
les
cmpsl
test
add
mov
movsb
sti
stc
nop
sub
sbb
mov
stc
imulb
pop
cmp
mov
and
in
das
aaa
aam
push
cmp
jns
push
jp
xchg
and
cwtl
das
loop
test
inc
add
aaa
sub
ljmp
sub
adc
sti
sub
xor
or
movsb
sbb
rcl
neg
jnp
les
sub
es
adc
pushf
and
pop
sbb
insl
nop
adc
jnp
fs
lods
cmp
pop
std
insb
pop
outsl
mov
imul
jnp
out
cs
ljmp
add
test
stos
and
loopne
sbb
mov
cmpsb
mov
call
in
jae
sbb
test
ret
scas
pop
pop
fdivrs
or
push
dec
jne
push
sbb
cmp
inc
or
call
mov
dec
iret
fstps
fstl
adc
shl
push
movsl
arpl
adc
lret
add
enter
lea
orb
mov
movsb
aaa
inc
imull
push
sub
push
or
mov
nop
and
sbb
pop
out
cwtl
lock
sbb
cmc
jae
adc
push
fmul
out
jle
out
mov
aad
jne
xchg
cmp
pop
pop
pop
sub
mov
fbld
sti
into
sbb
lods
out
mov
movsl
cmp
aad
add
loop
ret
pop
mov
cmpsl
loope
jp
mov
enter
sub
cmc
imul
adc
inc
jbe
mulb
sbb
xorb
xchg
xor
sub
int3
xchg
jae
adc
inc
lret
mov
pop
jno
mov
or
jmp
pop
adc
es
out
xor
pop
dec
les
mov
out
or
jbe
and
lods
xchg
orb
pop
mov
test
and
and
sub
lds
mov
shrl
add
pop
xor
les
dec
cmc
testb
mov
aad
ret
shrb
addr16
pop
roll
push
inc
test
shrb
pushf
inc
jmp
enter
rorb
imul
loopne
push
adc
neg
outsl
add
je
push
sti
cltd
das
mov
push
out
pop
mov
mov
test
or
adc
xchg
fs
jb
cs
or
int3
xchg
or
sub
jae
xlat
fidivrl
xorb
push
pop
mov
sarb
push
movsb
dec
adc
mov
fnsave
xchg
sarl
mov
dec
add
les
mov
cmp
xchg
popf
bound
or
mov
aam
mov
cmp
testl
mov
adc
mov
std
jp
fildl
xchg
pusha
pop
dec
pop
xor
dec
and
pop
movsb
ja
scas
nop
lcall
ret
jb
or
add
cmp
mov
aad
cwtl
xchg
cmpl
test
sahf
mov
jno
jae
mov
sub
lahf
xor
clc
inc
out
or
xor
pop
cmp
cmp
outsl
test
xchg
das
cmp
sbb
xor
jl
ljmp
push
clc
sub
mov
js
and
push
push
movsl
inc
in
inc
push
jmp
sahf
bswap
movsl
lretw
jg
aaa
shlb
dec
ret
test
push
mov
jmp
dec
data16
mull
add
mov
fldcw
mull
mov
mov
xchg
cmpsb
call
mov
push
fcoms
test
jno
dec
stc
jge
and
sbb
stc
bound
cmp
adc
or
xor
dec
inc
add
in
movsb
cmp
xchg
aas
push
shl
repz
and
adc
pop
cmp
loope
cmp
jbe
adc
mov
sub
fsincos
adc
adc
mov
sub
cmpsb
in
dec
jp
popf
cmpsb
imul
dec
fucomp
test
shr
cmp
adcb
ds
in
push
or
pop
mov
mov
adc
mov
aas
and
xlat
outsb
push
jp
xor
cmc
mov
mov
mov
and
push
call
fcmovnbe
mov
cmpsb
xor
bound
movsl
mov
and
pop
aam
out
repnz
out
roll
ds
lods
xor
add
cmpsl
push
inc
or
call
xor
push
jmp
outsl
sti
test
addr16
inc
in
jb
cmp
mov
sahf
and
jnp
jp
es
push
xchg
int3
add
and
inc
push
rolb
shr
inc
sbb
mov
cmp
xchg
insl
pusha
je
mov
stos
lock
sub
addr16
repz
js
insl
xadd
insl
cs
fsub
stos
fidivs
xor
push
push
add
dec
dec
add
lret
dec
dec
std
dec
jecxz
sbb
and
sub
xchg
popf
push
cmpsb
inc
adc
mov
xchg
nop
js
push
push
sub
dec
cltd
test
sahf
sub
xchg
sbb
cmp
das
add
mov
and
mov
xchg
push
jp
in
std
push
lods
js
pop
jecxz
into
js
iret
lods
insb
cltd
push
in
cmp
sub
int3
pop
jae
xlat
push
xlat
testb
cmp
sarb
and
xchg
iret
movb
push
outsl
jo
pop
inc
sbb
and
xchg
aas
call
imul
ss
inc
mov
cmc
stc
sbb
cmp
jle
jo
jnp
push
lock
cmpsb
xchg
inc
pop
xlat
and
dec
mov
imul
dec
data16
sub
test
mov
fwait
mov
push
aam
ss
jnp
adc
gs
loope
xchg
and
es
enter
in
incl
repnz
fadds
iret
mov
loope
mov
nop
daa
repnz
sbb
aaa
aas
sub
insb
xor
sbb
pop
sbb
mov
imul
sbb
testb
jno
lods
mov
push
xor
in
push
sub
aas
lods
push
aas
mov
adc
std
sbb
fnsave
out
mov
push
add
aam
sub
cmp
nop
outsl
andl
fidivl
push
mov
push
xor
sahf
arpl
pop
jne
test
loop
pop
aad
xor
imul
pop
test
aam
adc
jno
sub
adc
dec
add
ds
loopne
lahf
shrl
inc
sub
mov
sub
aam
pop
iret
scas
mov
jmp
loop
stc
and
cmp
jp
adc
movsb
movsb
daa
dec
add
mov
push
and
into
push
xchg
dec
dec
data16
sbb
fdivrl
addr16
mov
outsb
push
lahf
push
dec
add
in
int
je
imul
xor
cmp
mov
add
mov
and
movsl
ret
fildl
mov
push
mov
adc
and
and
scas
movsl
data16
mov
jmp
inc
fldcw
je
out
xchg
mov
mov
jne
cmp
push
mov
inc
sbb
aam
imul
decl
pop
adc
push
ljmp
sbb
shl
loopne
mov
sbb
sbb
xor
push
mov
daa
mov
out
and
jnp
addb
vorps
adc
popf
dec
and
pop
pop
es
push
imul
fucom
lods
dec
rorb
xor
scas
scas
sbb
and
xchg
xor
push
push
sbb
in
enter
pushf
xor
out
call
mov
adc
pop
mov
cmc
pop
les
jbe
sub
pop
pop
mov
add
cmp
jne
imul
fcompl
push
or
mov
int
nop
fisubrl
iret
pusha
push
inc
adc
or
mov
in
sub
fists
ljmp
push
inc
jns
sbb
sbb
dec
mov
inc
sahf
clc
in
push
loope
adc
cmpsl
add
push
jae
aaa
insb
imull
mov
push
mov
lea
and
mov
inc
sbb
fsubrs
js
sub
push
xor
stc
dec
in
pop
repz
int
mov
sar
test
mov
cmp
mov
xor
nop
cltd
test
out
push
adc
xchg
inc
xor
adc
mov
int3
popf
and
es
cld
into
fwait
clc
add
jnp
cmpsl
jbe
fsts
mov
dec
jmp
mov
outsl
in
pushf
sbb
pop
dec
cmovge
xor
addr16
stc
leave
ret
sbb
xchg
sub
test
xor
xchg
and
ret
gs
push
push
or
mov
test
sarb
sub
lds
rclb
pop
repnz
add
jb
mov
test
mov
jmp
dec
clc
das
push
push
push
or
cmpsb
ja
stc
arpl
loop
push
lock
testl
lret
sahf
mov
imul
jp
sti
ret
pop
sub
dec
inc
out
dec
jecxz
movnti
xchg
jns
jae
cmp
lock
and
add
mov
cmpsl
lock
add
sti
scas
xchg
adc
lds
cwtl
inc
fcompl
test
dec
fdivrp
arpl
jp
push
sahf
aaa
fwait
subl
movsl
adc
mov
or
cld
xchg
pop
loopne
dec
pop
jp
mov
imul
push
dec
cmp
movsb
xor
add
xor
mov
ss
les
cmc
int3
data16
or
mov
in
movsb
test
rorl
push
add
scas
cld
idivl
inc
ret
jns
mov
scas
jecxz
in
fwait
xlat
add
repnz
dec
and
test
pusha
loopne
add
inc
stc
inc
sbb
xchg
ds
xor
mov
inc
xlat
lret
and
cld
stc
outsl
dec
pop
fnsave
add
mov
dec
inc
fwait
dec
adc
adc
in
stc
inc
xor
popa
test
add
cmpb
imul
inc
mov
jb
popf
repnz
fisttps
lds
pop
out
jge
and
lods
test
jmp
mov
mov
aaa
aaa
and
ss
inc
cmpb
xor
sbb
xor
xchg
popa
mov
enter
xorb
dec
and
ss
xor
int
jg
out
sub
dec
cltd
gs
sub
mov
arpl
fnstcw
in
jno
push
push
out
pop
adc
cli
mov
xchg
dec
xor
shrb
xchg
cli
ds
enter
push
outsb
dec
cltd
push
jbe
lret
inc
pusha
movsl
sbb
bound
rcll
mov
push
cmp
test
xor
mov
mov
mov
xor
add
repz
adc
pushf
jnp
mov
and
dec
notb
ss
fisubs
movsl
xor
jae
lret
movsb
clc
sbb
push
dec
int
jl
mov
pcmpgtw
jge
jns
push
and
loopne
or
testl
fdivl
push
jecxz
fwait
xor
mov
imul
fildl
jae
insl
call
or
call
jp
add
jo
or
push
out
je
sbb
add
cmpb
lds
fcoml
xor
ss
pusha
mov
push
push
inc
ljmp
pop
cli
pop
sub
fmulp
or
push
test
pusha
sub
jno
test
or
nop
daa
cmp
mov
sbb
int3
or
test
loop
mov
pop
hlt
mov
dec
jnp
mov
lret
push
mov
jae
leave
adc
jne
push
dec
ficompl
jg
std
jl
cld
scas
fildl
sbb
xchg
call
xchg
xchg
and
xchg
enter
mov
adc
jge
mov
push
inc
adc
jp
jmp
or
xchg
test
scas
fmuls
scas
movsl
test
pusha
mov
out
ja
das
inc
push
sbb
popf
imul
mov
adc
bound
sbb
jne
dec
sub
and
mov
cmp
push
aas
push
mov
mov
cmp
fbld
push
sbb
mov
popa
add
or
mov
out
xor
inc
ljmp
cmp
adc
je
mov
jecxz
mov
shll
daa
ss
mov
adc
push
inc
insb
test
sbb
in
sbb
out
xchg
pop
addr16
fmuls
and
and
popf
add
sbb
cmp
aam
push
ss
cmc
addr16
cmp
xchg
popfw
jns
or
mov
iret
push
movl
in
sub
lret
mov
push
call
sbbb
add
cmpsb
jns
jp
jae
jno
add
fisubs
out
jns
or
int3
shrb
jbe
fldcw
test
pop
int
jns
inc
movsl
icebp
lea
sti
sub
repz
lahf
add
mov
pop
cmp
or
or
mov
fidivrs
or
mov
dec
sub
out
sub
sbb
inc
inc
imul
adc
pop
jg
sbb
jmp
add
and
popf
and
popa
mov
aam
fwait
movsb
dec
scas
xchg
leave
es
fcmovne
push
or
stos
or
lock
mov
lods
xchg
fildl
in
cld
sbb
push
and
imul
push
lds
xor
pop
in
jecxz
cltd
sub
mov
push
mov
pop
pop
shlb
jge
xchg
std
jo
or
js
jecxz
mov
sub
cwtl
test
daa
mov
das
cmp
push
jmp
rcrl
push
cs
in
gs
rolb
pop
xor
scas
js
loopne
in
sub
lahf
call
mov
ret
mov
pop
in
mov
add
ficompl
outsb
jle
adcl
cmp
nop
lods
or
lcall
call
xchg
test
add
push
dec
mov
and
jne
cmpsl
ret
test
std
xchg
xlat
ror
sub
sbb
inc
popa
mov
mov
pop
das
inc
pop
mov
fsubrp
mov
gs
lret
inc
mov
push
fcmovnu
or
call
pusha
and
sub
xchg
cs
mov
sub
jmp
cmp
lea
push
in
fsubrs
pop
pop
popf
push
mov
mov
lret
and
les
mov
mov
inc
jo
arpl
lcall
pop
mov
sub
rorl
adc
dec
sti
daa
mov
stos
push
jne
cld
cmpsb
dec
mov
inc
andl
xchg
pop
cmc
cmc
cld
inc
and
pop
mov
incl
jne
cmp
inc
mov
in
out
test
sti
cmp
xor
adc
in
pop
mov
ds
imul
loope
xor
mov
lock
stos
inc
out
pop
call
mov
adc
sahf
xor
pop
loope
aas
mov
shr
xlat
push
rcr
xchg
xchg
cmp
fnstsw
cs
mov
mov
scas
leave
add
inc
pop
sbb
push
addr16
das
loopne
jnp
cwtl
aas
push
jg
out
mov
xor
push
inc
mov
sbb
adc
or
xor
fstps
enter
in
add
stos
mov
aam
or
mov
aad
push
mov
shlb
jns
cmp
mov
cmp
test
out
inc
adc
inc
in
bnd
jecxz
outsl
jg
mov
or
in
cli
pushf
stos
cs
push
xchg
dec
jae
lcall
scas
push
add
shl
adc
and
in
sbb
cmp
neg
das
scas
push
repz
or
dec
adc
xor
mov
cmp
add
and
leave
adc
and
ret
outsl
lret
mov
adc
mov
movsl
arpl
mov
les
push
mov
and
test
pop
push
push
pop
mov
mov
xor
out
js
xchg
gs
and
dec
and
out
rcrl
xor
sub
ljmp
lahf
inc
clc
or
jns
and
adc
mov
xor
xchg
xchg
sub
imulb
mov
and
imul
sbb
xor
push
gs
test
pop
movsl
sbb
and
clc
ja
xchg
test
nop
pop
sbb
mov
jmp
in
cmp
add
xor
push
pop
loop
and
or
inc
mov
mov
inc
adc
in
scas
adc
jb
popa
xor
std
mov
cmp
add
movsb
push
nop
push
cmp
bnd
dec
das
cmp
lds
mov
enter
inc
or
jmp
stos
test
mov
inc
or
jno
je
xchg
jecxz
sbb
inc
adc
mov
xchg
jae,pn
pop
pop
in
into
and
test
in
jp
rorb
ljmp
jne
mov
lahf
aas
iret
imulb
gs
adc
cld
xchg
xor
push
loop
dec
loopne
add
aaa
into
scas
lret
test
push
movsb
jo
mov
int
cmp
lock
cmc
popa
iret
mov
and
insl
adc
sbbl
push
push
push
push
jb
add
lahf
mov
mov
shrl
sub
addr16
mov
mov
mov
lock
push
add
stc
hlt
subb
inc
jl
cmp
idivb
fdivrl
push
cs
fcomip
mov
xor
and
lock
jns
into
pop
add
fimull
or
jle
repz
pusha
adc
dec
fwait
inc
fwait
mov
xchg
inc
fs
enter
add
mov
xchg
leave
pop
rorl
jecxz
sarb
sbb
sub
sub
adc
dec
dec
pop
mov
jecxz
add
jg
outsl
push
mov
sbb
and
add
sbbb
push
fmuls
inc
int
into
out
add
cmp
out
push
and
xchg
mov
and
loope
add
scas
pop
dec
and
xor
sub
movsb
and
sbb
xor
lret
xchg
inc
mov
fisttps
les
pop
imul
sub
cli
push
sbb
movsb
cmp
clc
fimuls
xchg
jns
cmp
pop
mov
test
xchg
pop
sbb
push
adc
and
sbb
jle
pop
mov
and
jnp
mov
dec
jecxz
sbb
jbe
cmp
mov
pop
cmc
test
dec
insl
pmulhw
adcb
adc
int3
xchg
mov
mov
dec
dec
inc
cmp
xor
mov
popa
xor
pop
fisttpll
adc
push
xor
pop
test
push
pop
aas
jge
ret
xchg
fdivl
xor
jnp
arpl
mov
xor
mov
mov
daa
pop
xchg
js
xor
adc
cmp
notl
pop
insb
sbb
insl
pop
pop
pop
scas
inc
add
imul
inc
hlt
adc
sub
scas
xchg
dec
adc
pop
fistpl
mov
fnsave
add
cmp
loop
xlat
ljmp
insl
cmpsb
jns
in
cli
scas
rcrb
fucomip
les
mov
push
in
xchg
add
mov
mov
das
mov
mov
shrb
fbstp
xor
sarb
add
fadd
xchg
je
mul
lds
movsb
call
mov
mov
js
mov
cmc
pop
and
rolb
mov
and
sbb
lea
or
fidivl
and
and
dec
loop
std
pop
icebp
mov
lds
jb
ljmp
jle
mov
aad
scas
fdivp
mov
sbb
fnstenv
sbb
or
cs
push
jno
scas
pusha
mov
mov
sub
mov
pop
fstl
jns
daa
mov
out
sub
popa
jmp
js
das
mov
cmc
dec
jecxz
mov
dec
js
jne
in
pusha
cmp
jo
adc
cmpsl
lods
push
pop
mov
cltd
dec
xor
cwtl
fs
in
dec
ja
arpl
sbb
sub
sbb
pop
or
cmc
inc
xchg
pop
test
sbb
insb
pop
mov
in
push
les
pop
lret
cld
adcb
es
imul
cmp
mov
je
out
xor
jle
mov
pop
xlat
icebp
sbb
inc
and
dec
add
jle
mov
les
mov
jbe
pop
mov
mov
mov
stos
in
mov
dec
adc
hlt
ljmp
lcall
inc
out
push
mov
cmp
jns
mov
pop
aam
outsb
loope
sbb
aaa
dec
lods
mov
adc
sub
imul
jne
and
es
imul
lret
sbb
adc
call
inc
movsb
xchg
mulb
gs
mov
cmpsb
sbb
adc
mov
je
cmpsl
mov
nop
test
popa
notb
popf
nop
push
jg
cmpsl
mov
ljmp
mov
insb
pop
mov
dec
pop
xor
cmp
pop
and
mov
das
fiaddl
and
pop
or
cmpsl
fisubrl
sahf
roll
es
push
leave
and
js
pop
mov
mov
loopne
adc
jge
add
or
mov
sbb
dec
lahf
pusha
fistpl
mov
std
or
jge
mov
add
into
sbb
mov
inc
sbb
and
mov
inc
fnstenv
or
filds
sub
movsb
sbb
mov
repz
popf
cmpsl
sbb
mov
dec
mov
pop
mov
xchg
adc
jo
dec
inc
clc
sahf
inc
mov
inc
lret
movsl
push
imul
mov
mov
scas
push
and
mov
or
inc
jbe
xchg
push
data16
push
inc
int3
lret
sub
adc
das
mov
push
stos
pop
push
imul
push
mov
and
addr16
loope
jo
fsts
inc
lret
imul
movsb
pop
or
sahf
cmpb
cli
and
addr16
lods
adc
dec
arpl
imull
pushf
xor
out
call
aam
jnp
cmp
std
imull
dec
sub
jnp
pop
aaa
pop
pushf
push
rolb
fsqrt
insb
movsl
cmp
mov
lcall
fcomip
std
mov
cld
cmpsb
data16
push
in
pop
push
stos
andb
or
xchg
cmp
push
movsl
andl
inc
sbb
dec
cmp
adc
cmp
ljmp
in
mov
arpl
lahf
adc
repz
into
jo
cmc
mov
mov
cmc
aam
adc
jl
pop
lret
inc
pop
push
cltd
int3
mov
jns
xor
enter
rcr
jge
xor
mov
ss
enter
rcrl
out
push
jnp
gs
fimuls
aad
xor
jp
xchg
fisubl
or
push
dec
or
imul
leave
or
sbb
push
popf
out
xor
xchg
dec
cmc
insb
lcall
jns
push
push
xor
mov
jnp
cmc
and
hlt
sub
arpl
fiaddl
mov
dec
pop
sbb
lret
ljmp
cmc
push
sbb
out
lcall
aas
push
mov
pop
cmp
aas
outsb
sub
js
mov
sti
pop
pop
add
mov
ds
sarl
pop
fcomip
mov
mov
sub
mov
jns
inc
aas
and
sbb
iret
idivl
mov
jecxz
dec
xchg
inc
sbb
scas
push
xchg
mov
push
dec
loope
in
adc
aas
jb
dec
fadd
ret
jp
jge
shrl
adc
jno
stos
pop
filds
dec
xor
aad
mov
mov
jb
xor
outsb
jp
in
sti
loope
or
xor
adc
pop
nop
pop
pop
adc
dec
int3
cmp
fldcw
out
sahf
xor
adc
add
and
test
inc
popa
or
pop
xor
mov
aaa
fiaddl
lods
test
and
pushf
jl
pop
lcall
dec
loope
xorl
stc
mov
and
in
cmp
outsb
add
xchg
in
adc
ja
arpl
xor
mov
test
cmp
test
mov
mov
xchg
negb
pop
xchg
cmpsl
jecxz
notl
rolb
jmp
xchg
jo
aaa
fwait
mul
add
sbb
iret
pop
imul
xchg
mov
inc
shl
pop
push
icebp
jg
clc
nop
scas
out
xchg
pushf
rclb
jg
orl
and
xor
imul
push
add
mov
or
mov
push
lods
icebp
les
shl
scas
lcall
shrl
jne
xorb
scas
clc
gs
xchg
push
push
cwtl
mov
ret
repz
inc
pop
insb
push
fistl
int
fbstp
mov
push
mov
in
mov
ss
cmp
aad
jg
mov
aam
push
cmpsl
loope
dec
pop
test
fisubs
sub
mov
out
pop
adc
and
jb
mov
jb
dec
lds
pop
ret
inc
dec
and
mov
pop
adc
imul
cmpsl
pusha
pop
notl
mov
in
inc
add
into
sub
orb
adc
cmp
test
or
cmpsl
xchg
xor
mov
push
xchg
push
sub
cmpsb
mov
cmp
xchg
ds
leave
push
push
push
ljmp
daa
push
mov
sarb
push
rorb
mov
pop
inc
pop
xor
xchg
ja
dec
pop
cld
inc
mov
mov
std
ss
sub
icebp
inc
test
fsubl
lcall
fldt
add
adc
clc
stos
mov
inc
leave
pop
lahf
or
imul
fldt
scas
jns
addr16
push
push
fnsetpm(287
add
and
cmp
neg
sbb
xlat
xchg
outsl
mov
mov
xor
dec
jecxz
iret
dec
pop
shrb
dec
adc
xlat
movsl
push
sbb
divl
fidivl
jae
out
push
add
inc
jg
movsb
adc
test
pop
mov
jle
mov
decl
das
push
fnstenv
cli
in
lahf
adc
or
incb
pop
repz
jp
jecxz
add
sub
or
ljmp
outsb
scas
mov
dec
mov
dec
loope
call
popa
int
stc
xor
int
lock
sbb
pop
sub
xchg
xchg
dec
fistpl
cmp
mov
sbbb
dec
mov
jg
movsb
pop
imul
test
mov
cmpsb
or
mov
mull
loope
mov
mov
mov
jo
shrl
jmp
mov
dec
ds
cmpl
cltd
fucomi
or
in
pop
cmc
push
fstp
mov
test
inc
mov
jae
insl
sub
mov
loopne
popf
imul
xchg
aam
les
repnz
sbb
outsb
or
andb
cmp
jae
dec
in
fwait
xchg
mov
aad
lds
push
repz
dec
jecxz
arpl
xchg
push
push
push
xchg
mov
and
loope
inc
cmp
hlt
clc
je
sub
popa
add
sbbb
loopne
add
out
and
push
xchg
xlat
cwtl
stc
jecxz
sub
lods
dec
sbb
ds
xchg
ja
stos
std
xchg
stos
cmpsb
jge
pop
lret
sbb
cmp
cmp
sbb
sbbb
inc
cmc
cmp
or
jb
sub
enter
jle
pusha
sbb
xchg
mov
mov
outsl
jnp
int
test
cs
pop
cs
xor
scas
dec
scas
mov
mov
repnz
push
jns
pop
stos
je
daa
inc
mov
xchg
repz
sub
mov
incl
ljmp
pop
and
push
and
sti
and
imul
pop
inc
in
bound
cmp
in
cmp
or
adc
cmc
test
lret
dec
inc
and
jmp
ds
iret
lock
adc
cmp
sub
test
out
mov
inc
out
fwait
xor
inc
cmp
popa
idivl
jle
push
cmp
les
clc
jae
add
jecxz
sbb
into
fiaddl
ret
in
les
mov
xor
sbb
xor
je
push
xchg
jne
mov
stc
xchg
add
xchg
jecxz
sbb
mov
xchg
dec
xchg
aam
sbb
sbb
outsb
fmuls
cmp
sub
push
bound
add
xchg
jno
sub
push
leave
cli
test
gs
sub
scas
fiadds
and
pop
ret
jne
jnp
scas
xchg
fwait
mov
int3
push
out
stc
pop
in
inc
lret
jne
sbb
jecxz
cmp
dec
push
out
cmp
cmp
jg
in
push
adc
jl
aaa
xor
mov
push
push
sub
sbb
enter
mov
and
jmp
lds
pop
stos
jmp
int
add
data16
push
cmp
jb
sub
sbbl
mov
mov
sbb
sbb
es
js
inc
fdivr
sub
in
cmp
in
in
test
or
push
sahf
mov
adc
adc
fiaddl
into
fwait
bnd
push
daa
adc
test
adc
pop
jecxz
lds
mov
push
les
fs
add
sbb
cmp
lea
inc
arpl
mov
cmpl
mov
xchg
sub
stos
cli
aad
mov
or
add
enter
pop
jmp
sbbb
cmp
push
sahf
js
inc
xor
cltd
and
or
in
or
and
push
gs
addr16
xchg
call
cmp
mov
dec
cmp
xchg
xchg
out
mov
nop
mov
or
scas
mov
lcall
stc
cmp
push
and
inc
xor
mov
fcmove
arpl
sbb
add
xchg
mov
dec
mov
gs
inc
sahf
pop
sbb
jg
xlat
mov
cmp
or
pop
loop
sub
mov
dec
in
fsts
mov
mov
rol
ds
and
data16
sbb
dec
shll
scas
jno
rclb
cmp
daa
lretw
test
push
xor
pop
sbb
sub
aas
popf
sti
xchg
or
das
sbb
push
jns
and
sahf
sahf
insl
mov
sbb
fst
repz
push
and
sahf
pop
adc
repz
sbb
jle
loopne
fwait
push
xchg
add
out
ret
aas
cwtl
xor
mov
inc
mov
add
js
xor
mov
mov
pop
mov
cli
xchg
sub
aad
inc
int3
xor
pop
lcall
push
inc
lods
aaa
cmp
add
out
xchg
mov
ret
hlt
xor
jle
jmp
icebp
sbb
or
sahf
add
lahf
or
rclb
push
and
or
std
jle
inc
xor
ss
or
int3
fistps
and
stos
push
cmp
or
push
sub
incl
scas
ds
xchg
adc
cwtl
inc
sub
mov
xchg
add
dec
mov
insl
jge
andl
xor
bound
nop
jl
leave
pop
and
xorb
add
push
add
mov
in
xchg
je
jb
sub
jbe
push
test
pop
xchg
jp
pop
das
rcl
xchg
enter
adc
xchg
int
pop
movsb
pop
sub
lret
add
jae
sub
ds
arpl
dec
in
ss
idivw
sbb
mov
xor
push
adcl
pop
mov
clc
and
orb
add
daa
jle
pop
cltd
or
pop
lods
lock
add
mov
jbe
shrl
in
cs
sub
ret
xor
mov
push
lcall
and
imul
in
push
inc
cltd
push
sub
xchg
sub
in
scas
mov
bound
test
or
lea
push
xchg
sub
mov
outsl
incb
and
daa
mov
and
jne
sahf
inc
test
scas
cmp
xor
iret
iret
clc
test
inc
repz
inc
push
repz
jns
dec
xchg
aad
dec
insl
xchg
mov
jl
xor
out
cmpsl
cs
popa
add
cld
mov
mov
into
int3
sub
adc
testb
shll
imull
lahf
inc
or
xchg
cld
gs
ja
pop
test
push
pop
fsubrl
hlt
jns
cld
mov
cmpsl
cmp
in
fiadds
dec
clc
data16
ljmp
xchg
cmp
pop
dec
mov
addb
sub
loopne
xchg
scas
mov
add
mov
test
sbb
divb
fldl
data16
imul
loope
and
dec
push
add
fcompl
cs
stos
pop
and
cmp
add
andb
sub
xchg
mov
push
mov
loop
js
ljmp
mov
pop
xor
in
pop
mov
mov
or
mov
popf
jmp
nop
inc
mov
into
xchg
stos
push
mov
les
inc
push
push
outsl
andb
sub
fwait
inc
sti
dec
pop
jbe
sbb
or
adc
push
negb
lds
push
xorl
adc
movsl
mov
lret
insl
rcrb
popa
stc
mov
call
xor
aam
sub
xchg
scas
dec
mov
push
loop
addr16
out
mov
sbb
sahf
adc
leave
jmp
add
add
outsl
divb
inc
test
pop
or
adc
popf
bound
repz
mov
repnz
mov
dec
rcrl
in
cmp
mov
xor
enter
xor
push
in
dec
mov
out
insl
jae
sbb
das
lret
icebp
test
das
adc
popa
xchg
in
xchg
sub
mov
cmp
out
dec
pcmpgtw
add
test
rclb
push
mov
or
push
mov
das
repnz
pop
lea
inc
push
lock
lret
notb
sbb
jns
and
std
xchg
sbb
fstpl
hlt
pop
pop
popf
imul
addr16
sti
mov
out
bound
clc
enter
cmp
out
cmp
inc
push
ficoml
cmpsl
mov
int3
ja
and
filds
inc
jnp
mov
sarb
fmuls
in
int
inc
pop
fsubrs
sbb
xor
add
popf
testl
leave
xor
inc
pop
insl
inc
arpl
and
imul
and
not
lods
push
and
mov
cmp
call
scas
pop
int3
test
mov
or
sbb
dec
jns
les
inc
pushf
push
mov
out
adc
push
out
dec
js
push
loope
and
cmpsb
repnz
xchg
push
add
inc
inc
cmp
jge
lods
scas
sahf
inc
xlat
mov
mov
inc
pop
pop
mov
fs
xchg
sub
jle
mov
add
xchg
inc
adc
add
and
repnz
push
mov
and
fistl
jle
ds
or
in
das
xchg
xchg
popa
add
movsl
mov
cli
mov
popa
test
sahf
shl
incb
shlb
xchg
lds
movsb
jge
in
ljmp
or
loopne
shrl
xchg
mov
or
adc
test
cmc
mov
xor
or
jne
arpl
test
adc
fbld
sarl
test
aam
icebp
clc
cs
sub
gs
dec
add
xor
test
sub
pop
iret
rorb
mov
push
lret
movsl
popf
bound
lods
push
xor
iret
enter
jl
pop
mov
jne
and
push
loope
std
adc
mov
jae
and
lret
push
cld
xlat
nop
dec
int
sbb
jecxz
out
incl
fdivl
shl
repz
adcl
sbb
pop
dec
decb
lods
bound
outsb
xchg
into
lds
shlb
push
cld
mov
ss
leave
test
add
testl
jb
sahf
aam
loop
add
xor
enter
out
push
aaa
cli
addr16
sub
or
add
xorb
adcl
pop
popf
fwait
add
mov
je
ds
ja
test
mov
dec
insb
lea
and
sahf
icebp
mov
dec
testb
push
xchg
ljmp
adc
add
cmp
dec
mov
or
xchg
cld
out
js
sbb
das
fdiv
adc
movsl
sub
dec
jl
nop
xchg
xor
mov
push
out
mov
lock
fadds
insb
push
lret
cmp
sahf
fcompl
push
aaa
jbe
insl
jg
jg
mov
cmp
lahf
mov
lds
sbb
adc
mov
mov
inc
aad
dec
add
xchg
clc
xor
sbb
fwait
sbb
int3
sub
inc
xchg
mov
cwtl
or
xor
cmp
mov
adc
data16
out
adc
jb
daa
cwtl
xchg
inc
jne
xlat
aad
ficoml
or
aaa
push
mov
ficoml
cmp
es
sarl
xor
hlt
xchg
cmp
mov
push
pop
int
in
sbb
mov
fistl
aas
dec
sarb
cmpsb
push
cmp
or
push
add
sbb
mov
adc
adc
jge
dec
stos
vpcmpeqd
cmp
and
xor
mov
jo
in
xor
ds
outsl
mov
int
xchg
rorb
sbb
lret
mov
adc
out
sub
test
in
negl
loope
ret
push
stos
dec
pop
mov
sbb
mov
add
and
clc
iret
cltd
pusha
mov
xchg
es
cld
inc
sbb
sbb
or
adc
mov
shl
sahf
stos
push
in
add
xchg
jne
iret
xor
dec
ljmp
or
xor
out
and
jle
faddl
push
and
inc
inc
push
cmp
mov
lcall
rol
jp
xor
pop
add
lret
push
mov
push
adc
aad
jge
mov
and
mov
add
xor
and
sahf
xor
fdivl
mov
iret
or
push
bound
sub
add
mov
pop
mov
rcll
popf
imul
pop
int3
add
pusha
push
mov
jns
mov
push
fisubs
pop
cmc
sub
jl
clc
inc
andl
xor
andl
xor
dec
cmp
aas
pusha
xor
push
out
add
call
pop
dec
sbb
push
xor
inc
xor
pop
into
fmull
jb
arpl
push
add
imul
cmp
rcrb
es
es
in
stos
lods
stos
xor
stc
adc
mov
arpl
inc
test
fs
fldcw
shl
sub
mov
repz
jne
mov
imulb
and
addr16
inc
into
aaa
scas
les
push
jno
loopne
ljmp
xchg
mov
addl
or
push
mov
in
decl
lea
mov
icebp
push
lahf
pop
push
adc
andl
sbb
sub
cmp
imul
lea
pop
and
loope
das
jle
fimuls
stos
out
mov
add
sar
mov
outsl
jno
cmp
punpckldq
inc
lock
and
lods
jno
jnp
pop
aas
push
xor
out
bound
out
stos
addr16
xchg
xchg
add
sub
adc
out
sbb
pop
or
lahf
sbb
xchg
sub
sbb
rcrb
js
push
mov
ds
ret
pop
cmpb
outsl
sub
insl
out
add
add
adc
sbb
mov
pop
in
movsl
daa
insl
push
fidivs
data16
ss
mov
mov
das
push
fisubl
sub
cli
sbbl
outsl
mov
add
dec
push
jle
rcrb
sahf
mov
dec
jge
rcrl
dec
cltd
or
cwtl
xor
stos
sbb
jecxz
xor
sarb
adc
pop
inc
or
xchg
adc
inc
mov
fisubrs
sub
xchg
mov
mov
cmc
push
insl
repz
sub
subb
sub
jge
dec
lds
jbe
or
pop
inc
subb
scas
mov
and
arpl
xor
cmp
dec
movsb
pop
gs
xchg
setns
mov
orb
cmpsl
out
sub
pop
insw
add
imul
xorl
loopne
mov
sbb
leave
daa
lcall
jns
mov
cs
ficomps
adc
jl
lret
xchg
jns
xchg
shl
hlt
or
inc
mov
pusha
adc
je
lahf
fcomps
dec
cmp
outsb
mov
ljmp
jo
out
push
adc
icebp
cmpl
inc
jle
ss
or
and
cmp
loop
jns
pushf
and
lret
aas
imul
jns
xor
adc
mov
pop
outsl
mov
pop
xor
pop
adc
ret
pop
inc
sbb
and
mov
arpl
fdivrl
dec
out
sub
insl
loopne
mov
adc
lcall
xor
fldcw
inc
dec
add
outsl
jnp
push
mov
push
cmpb
call
in
outsl
mov
sbbl
or
out
inc
fdiv
pop
mov
fld
cmpsb
cmp
adc
mov
jp
cmpsl
push
pop
inc
cwtl
add
jge
inc
inc
push
cltd
ret
jge
ret
out
mov
nop
or
dec
inc
sub
stos
inc
sbb
arpl
jo
ljmp
sub
cmpsb
fiaddl
loopne
movsl
push
xor
jae
clc
jae
sbb
adc
rcrb
cld
fisubs
mov
insb
xchg
pop
mov
fstpt
push
test
es
pushf
lds
cmp
loop,pt
arpl
pusha
add
call
or
popa
rcr
mov
loop
jle
dec
pop
insb
out
jp
leave
in
inc
shll
jl
sti
xor
and
loopne
enter
mov
add
push
xor
xchg
mov
add
mov
data16
les
call
jl
dec
out
outsb
jbe
mov
pop
decl
add
imul
xor
mov
rcr
adc
cld
xor
xor
adc
push
inc
add
mov
mov
cmp
insb
sbb
nop
icebp
xchg
adc
jge
push
and
sub
loopne
xchg
add
jns
jno
mov
sbbl
mov
ja
fbstp
inc
data16
imulb
jge
mov
pusha
clc
xchg
shlb
andb
pusha
aam
and
icebp
adc
sbb
push
xchg
lods
lcall
mov
das
pop
dec
or
iret
shrb
push
pusha
dec
dec
push
insl
loopne
fisttpl
fwait
cmp
pop
fs
dec
cld
ja
and
scas
jo
dec
lret
fistpll
sti
fwait
shlb
mov
test
ljmp
xchg
cmp
scas
jg
cltd
mov
in
outsb
push
icebp
pop
mov
sbb
xchg
sbb
mov
xor
pop
or
ja
or
and
jbe
fdiv
in
pusha
flds
lods
inc
jno
xlat
cmp
adc
fcoml
inc
hlt
xchg
add
fdiv
ret
jnp
popf
mov
sub
jg
out
daa
pop
xchg
movsl
mov
rolb
mov
cmp
cs
outsl
add
add
and
lds
pop
shrl
scas
fwait
jno
lock
xor
stos
es
pop
shlb
push
sbb
shlb
daa
inc
jl
and
lcall
lods
pushf
bound
test
and
mov
jb
mov
cmp
jp
mov
pop
cmc
or
push
out
mov
pop
insb
aaa
fiaddl
daa
xor
in
fisubrl
outsl
js
mov
rclb
jne
in
and
jecxz
aaa
shrl
loop
fdiv
fidivl
xchg
pop
icebp
dec
test
sahf
icebp
test
inc
or
icebp
sbb
and
cmp
mov
push
lret
cli
loop
fidivs
pop
cmp
or
jp
jns,pt
jns
rcrl
jns
push
icebp
dec
iret
xchg
or
ror
repz
stc
fimull
mov
push
and
enter
pop
lods
scas
es
xchg
xchg
pop
mull
push
ror
push
jno
adc
lea
add
inc
inc
loope
mov
cs
mov
pop
lds
mov
lods
sub
cmpsl
push
jns
repnz
and
out
xor
jno
adc
dec
cmp
mov
in
inc
push
and
push
dec
xor
cmp
inc
gs
pop
aaa
stos
pop
mov
insl
test
cmp
cmp
daa
pop
jae
and
pop
xor
cmp
jp
lahf
and
dec
fdivl
in
mov
cwtl
dec
jg
jb
sub
stos
aad
and
push
lock
in
sti
push
pop
add
ret
jl
xor
and
rcll
jno
adc
dec
fucomp
test
cmp
test
out
cmp
gs
aas
dec
mov
push
je
mov
mov
push
mov
ss
ss
enter
adc
mov
inc
pop
mov
in
test
lock
adc
push
jmp
aam
sub
xor
mov
inc
jae,pn
or
lcall
out
mov
das
jo
in
rcrl
cmp
push
cmp
shrl
ret
pop
jl
sahf
icebp
xchg
xchg
int3
arpl
sahf
xchg
data16
ljmp
pop
dec
add
xor
adc
mov
mov
cld
sub
ds
mov
dec
dec
cmc
mov
les
add
cmp
dec
adc
cmc
rorl
adc
call
or
iret
xor
fwait
jmp
sub
xor
adc
es
push
or
cli
dec
xlat
movsl
in
mov
mov
inc
mov
lret
push
fisttpll
jg
or
loopne
icebp
add
cmpsl
inc
sub
sub
test
pop
flds
shll
aad
cld
mov
mov
push
loop
push
pop
jg
xchg
and
rcll
mov
mov
sub
test
dec
rclb
inc
loop
cld
sbb
xor
scas
xchg
fidivl
or
outsl
xchg
pop
or
dec
mov
loop
adc
fdivrs
or
cli
xchg
inc
sub
mov
outsl
add
dec
cmp
int3
push
out
inc
xor
inc
roll
dec
clc
or
or
jp
movsl
outsl
mov
adc
xlat
std
pop
cli
jne
xchg
xchg
mov
icebp
inc
push
push
shrb
sarl
and
shrb
stos
dec
or
clc
push
jmp
mov
movsl
loopne
sbb
ret
jecxz
aad
pop
test
fistps
jmp
or
xchg
xor
mov
push
mov
nop
sbb
ret
push
push
dec
push
imul
mov
lret
jl
bound
sahf
in
jge
or
adc
cmc
lods
stos
mov
aad
idiv
sbb
mov
xlat
inc
push
mov
sbb
pop
cltd
mov
call
pop
xor
adc
jl
xchg
scas
xchg
xchg
mov
sbb
push
movsl
or
and
aas
jl
jnp
sti
mov
adc
cwtl
das
leave
test
pop
mov
ret
jmp
lcall
jns
add
mov
leave
or
push
ljmp
and
mov
cld
push
lds
lret
ljmp
jno
jns
jae
push
iret
push
xchg
xchg
dec
or
push
cld
push
add
sbb
les
lret
pop
mov
in
dec
adc
aam
out
add
sbb
and
push
pop
xchg
dec
inc
add
ret
push
ja
js
mov
rcrl
xor
movsb
popf
xor
addl
jl
aas
and
imul
mov
push
cmp
arpl
pusha
jnp
loopne
add
loop
pop
clc
push
sub
rol
sub
repz
mov
cltd
std
lods
stc
je
sub
or
xchg
xchg
jns
push
inc
pusha
jl
jb
movsl
pop
sub
fstpl
popa
negl
cmpsb
negb
mov
xchg
out
lret
xor
add
addr16
xchg
int
mov
pusha
mov
xchg
adc
or
inc
dec
loope
imul
es
mov
ss
and
cmp
mov
jle
inc
jecxz
add
push
into
outsb
mov
mov
ret
fimull
lcall
and
out
rcrl
pop
jns
cmp
jge
cmp
inc
mov
jns
inc
popf
loopne
stos
fldcw
and
inc
test
jp
bound
push
js
js
test
arpl
stos
xchg
and
or
cmc
mov
out
xchg
cmp
lds
cli
or
gs
lcall
ljmp
mov
int3
pop
jb
fwait
mov
sahf
mov
push
mulb
andb
jb
xor
cmp
in
mov
sub
into
xchg
jbe
clc
and
int
add
repz
push
nop
dec
test
xchg
bound
out
test
fildll
arpl
leave
data16
cli
cmp
push
out
xor
cmpsl
clc
cmpsl
add
mov
icebp
cltd
fnstcw
push
or
sbb
fidivl
shlb
inc
push
or
pop
arpl
mov
adc
cmp
push
push
mov
jg
rorl
adc
lret
or
sub
shll
push
movsb
test
sub
test
pop
cli
mov
sub
or
imul
fwait
inc
enter
xchg
mov
fs
leave
xor
xor
popf
pop
loop
dec
mov
jns
sbbl
pop
mov
add
jno
jecxz,pt
outsl
ds
outsb
movsl
shlb
testb
out
addb
decb
mov
or
movsl
mov
sbb
mov
xor
or
pusha
and
iret
fwait
sbb
push
inc
mov
lds
inc
test
inc
fsts
mov
fnstcw
fsubl
idiv
cmpsb
xchg
dec
or
jle
fwait
stos
mov
into
or
dec
aad
sbb
add
cmp
and
xor
aad
rolb
xchg
push
ret
fisubrs
xor
add
arpl
or
xor
jle
cmc
scas
popa
lahf
push
lahf
clc
sub
pop
sahf
mov
and
inc
mov
in
in
inc
inc
cmp
testl
inc
inc
push
fstps
pop
fsubr
dec
inc
and
jecxz
push
adc
jl
out
fs
sbb
xchg
pop
inc
jecxz
cmp
shlb
push
rclb
lea
jle
pop
jns
or
adc
cmp
movsl
push
lea
scas
inc
pop
aaa
stc
shrb
addr16
sbb
out
mov
adc
enter
fdiv
cmp
out
inc
or
std
cmp
addb
push
adc
sbb
cmpsb
arpl
pop
inc
mov
in
incb
scas
loopne
and
out
mov
mov
gs
in
subb
mov
imul
adc
inc
leave
sahf
jo
lock
mov
or
mov
adc
lret
sbb
mov
sbb
js
aaa
cmp
out
fucomp
inc
xchg
in
xchg
sbb
call
outsl
fstl
sub
sbb
add
pop
xor
cmp
imul
mov
mov
add
cmp
ret
xor
adc
shlb
sahf
test
sbb
sbbb
xlat
and
xor
int3
jb
movsl
mov
and
push
fdivrs
es
pop
sbbb
int
insl
icebp
or
dec
push
push
aas
icebp
lods
pop
dec
adc
push
jo
out
push
mov
call
mov
das
clc
call
xorb
xchg
mov
inc
xchg
xlat
scas
shlb
int3
imul
add
xchg
mov
mov
or
data16
dec
icebp
dec
addr16
lods
push
sbb
jmp
pop
jecxz
std
cmpl
sub
aad
lock
pop
jge
or
shrl
rclb
or
in
push
mov
and
js
mull
lret
lret
inc
test
or
cmp
mov
nop
cmp
push
mov
dec
cs
pop
dec
loopne
mov
xchg
jle
iret
cmpsb
in
test
cltd
lods
ss
sbb
movsb
movsb
xchg
fstps
cs
mov
fimuls
cmp
jp
adc
sub
cmp
xchg
push
pop
adc
adc
lea
xor
aaa
sub
mov
aam
dec
jmp
fdiv
in
push
dec
cs
or
mov
xchg
mov
sub
adc
test
xchg
cmp
insb
add
into
icebp
fdivr
inc
pop
xor
js
sub
inc
nop
ret
pop
xor
cmp
mov
popf
testl
test
mov
inc
mov
jnp
mov
lahf
fstp
or
leave
jno
cmp
gs
inc
pop
or
mov
xor
das
and
dec
loope
stos
pop
cmpsb
inc
data16
jmp
push
push
out
inc
mov
iret
jne
jae
icebp
push
scas
inc
xchg
push
cmp
fsubrs
xor
stos
fsubl
cli
lahf
inc
imul
and
pop
add
mov
insl
inc
lock
pop
cmp
adc
stos
adc
inc
xor
pop
lods
addb
push
insb
push
test
mov
xor
jp
jne
dec
mov
xor
or
cs
outsb
mov
arpl
push
pusha
rol
subl
jp
stos
inc
and
pop
loope
das
addr16
mov
push
adc
lcall
int
stc
xor
inc
push
pop
repz
lcall
cltd
or
adc
push
fisttpl
xchg
pop
fnstcw
pop
sahf
push
ficomps
jns
jnp
aad
mov
jl
push
mov
hlt
mov
test
xor
push
cmpsb
cli
lods
sbb
pop
repz
fistpll
test
mov
testb
adc
rcrb
ja
mov
jg
add
push
arpl
imul
aaa
aaa
fisubl
lcall
cmpsl
lret
sti
sub
jle
push
mov
sbb
sub
scas
stos
sub
sbb
mov
jge
push
call
sub
mov
adc
mov
mov
xor
sub
mov
pop
jle
outsl
loop
push
xchg
xor
xchg
into
fidivl
adc
and
push
sbb
dec
mov
cmp
xchg
adc
mov
and
push
sub
pop
data16
out
cli
fiaddl
mov
scas
sbb
mov
mov
lahf
test
lcall
xor
sub
pop
int3
mov
and
xor
imul
and
or
rolb
shr
fcoms
sbb
lock
iret
gs
out
shrb
xchg
jnp
sub
repz
das
xorb
lds
repz
in
pushf
iret
pop
andl
shrl
cld
jmp
xchg
adc
stos
push
pop
test
add
or
pop
ds
nop
xchg
ficoms
jae
call
call
mov
sbb
xlat
sub
xor
mov
xor
dec
out
mov
imul
ss
cltd
cli
mov
inc
gs
or
out
mov
stos
cmp
jbe
shlb
in
mov
cmpsl
nop
das
mov
mov
xorl
and
adc
popw
ret
jmp
or
rorb
out
fsubrl
mov
xor
sub
push
mov
fcmovu
out
or
lcall
push
shl
es
push
mov
pop
push
in
into
aam
pop
mov
jae
inc
xchg
and
dec
aad
shlb
mov
out
inc
arpl
mov
jbe
enter
or
push
cmp
dec
fists
cmc
fstl
out
pop
in
xchg
leave
out
int3
ja
in
sub
clc
mov
or
mov
and
jnp
and
sub
cli
outsb
pop
call
mov
mov
repz
enter
push
addl
pop
enter
daa
jmp
mov
jmp
dec
xlat
push
insb
pop
daa
jne
push
xchg
sub
enter
adc
insb
inc
enter
cwtl
sarb
mov
fdivrs
rol
dec
or
fidivl
stc
xchg
mov
or
or
or
icebp
or
insl
pop
mov
shll
inc
repnz
aas
inc
popa
cld
ds
bound
decb
ljmpw
and
lret
and
dec
add
inc
lea
vpsubusb
xchg
push
je
jle
scas
sub
pop
sbb
xchg
aad
push
ljmp
xor
adc
js
pop
adcl
fdiv
xchg
cmp
aam
nop
sbb
psllw
inc
add
inc
jmp
jmp
adc
lcall
rol
sbb
pop
dec
cltd
pop
jp
nop
pop
in
pop
cmp
add
call
inc
les
mov
scas
call
mov
or
loope
adc
mov
xchg
ffreep
cmp
aam
xor
movsl
adc
bound
adc
out
mov
orl
jns
pop
test
pop
ljmp
lock
call
test
pusha
sarl
lret
jg
into
xchg
loopne
inc
push
add
jmp
mov
std
jo
pop
lahf
sub
push
fistps
aaa
add
push
in
mov
fidivrl
inc
dec
adc
mov
pop
xchg
add
cmpsb
out
out
mov
or
inc
js
inc
stos
or
or
jno
sub
stc
or
fldt
out
fnstsw
push
shl
jae
pop
das
cmpb
gs
adc
inc
enter
or
cmp
negb
sti
cmpsl
mov
jecxz
leave
xchg
inc
push
imul
fistpll
lods
pop
sbb
xor
ja
call
xor
fildll
add
or
xchg
pop
xor
mov
fidivrl
imul
pop
and
push
stc
aas
adc
insl
in
cwtl
xor
sub
add
xor
jo
push
pop
mov
xor
loope
or
jo
popa
insl
js
adc
mov
jl
jbe
aam
xor
xchg
dec
jecxz
mov
inc
aam
cltd
xchg
btc
lret
js
inc
jl
adc
sbbl
pop
lds
lds
adc
mov
lods
add
push
gs
ret
sub
xchg
lds
adc
mov
pop
aaa
fdivs
lock
in
jne
lahf
sub
lds
mov
inc
jo
daa
sub
cld
sub
dec
scas
mov
push
dec
repnz
push
jae
add
loopne
adc
fmull
popa
lock
loope
mov
sub
mov
ret
jbe
sbb
shrb
mov
je
cmp
add
lret
cmp
cmp
sbb
inc
mov
outsl
rorb
subb
mov
mov
xchg
mov
jl
jecxz
int3
out
icebp
dec
movsl
cli
xchg
test
in
cmpsb
adc
in
push
daa
cli
push
or
xor
inc
gs
in
inc
stos
ljmp
scas
aam
mov
push
js
pop
pop
xor
cld
push
sahf
roll
dec
inc
aaa
ja
dec
push
in
xorb
and
cmp
sub
push
pusha
adc
adc
add
jae
mov
mov
dec
adc
test
sub
xlat
mov
push
pop
adc
cmpb
pusha
cwtl
jae
push
pop
cmp
shrl
sarb
lret
sub
repz
mov
lock
push
inc
sbb
daa
mov
cli
cmpsb
sbb
push
fs
mov
push
and
push
mov
sbb
xor
test
imul
xor
in
nopl
mov
mov
insb
push
insb
in
js
lods
inc
pop
add
les
xor
sarl
jb
xlat
insl
lea
mov
jns
loope
mov
xchg
vshufps
shrl
pop
mov
push
pop
lock
inc
mov
ja
into
pop
jno
int3
jecxz
sbb
stc
in
pop
out
rcrl
mov
into
jno
out
movsl
hlt
js
aaa
mov
mov
sti
and
cli
xchg
shl
inc
push
sbb
dec
imul
dec
adc
rcrl
imul
dec
add
cmp
jnp
sub
jns
sbb
fdiv
mov
fwait
mov
push
xor
xchg
inc
aad
mov
test
cmp
lods
mov
les
mov
js
fwait
das
push
nop
push
call
sbb
sbb
repnz
out
jle
fmull
movsb
mov
iret
xchg
push
sbb
lods
jb
fmulp
or
cmp
rorl
rcrl
clc
int
idivl
pushf
mov
dec
nop
mov
insl
enter
jle
hlt
mov
imul
dec
push
cs
pop
insl
aad
loopne
repnz
iret
data16
push
insb
stos
in
daa
jb
mov
enter
dec
movsl
jl
pop
ret
repnz
lods
adc
xchg
dec
pop
mov
xchg
xchg
mov
mov
jmp
sbb
mov
adc
adc
inc
cmpsl
repz
xchg
loopne
dec
test
or
lret
mov
pop
inc
fadds
in
and
adc
cmp
sub
dec
xor
in
dec
push
pop
movsl
mov
jg
lret
push
stos
sahf
sub
stos
ljmp
fcoms
or
pusha
cmp
jb
mov
rol
xor
sti
lcall
adc
js
scas
movsb
inc
sub
shl
out
xor
mov
test
add
push
aas
pop
xor
aad
mov
mov
mov
aam
or
pop
mov
mov
fstpl
das
cmp
mov
sub
pop
rorl
sarl
gs
stos
push
jmp
test
jecxz
fwait
sbb
aas
arpl
outsl
mov
xor
addr16
es
pop
das
jmp
mov
scas
ds
pop
inc
ror
cmp
mov
add
sub
inc
shlb
lcall
lahf
mov
inc
hlt
xchg
xchg
xchg
movsb
inc
test
dec
pop
fdivrl
popl
xor
add
or
mov
jo
lahf
nop
repnz
rcr
push
mov
cli
andb
pop
mov
outsl
in
mov
ss
xchg
inc
enter
push
cmp
pop
xchg
pop
mov
test
and
jbe
movhps
lret
sti
pop
test
rcrl
push
dec
test
in
xchg
cmpsl
adc
das
pushf
xor
xor
or
cs
out
fistpll
gs
andb
aaa
loopne
xchg
pushf
out
lcall
pop
adc
jo
mov
xchg
imul
adc
test
push
xor
std
or
inc
pop
and
scas
push
cmp
xchg
push
xchg
jb
int
add
subb
into
popa
js
push
jecxz
adcl
or
and
adc
xlat
mov
push
stos
adc
bswap
out
mov
mov
out
mov
test
add
shl
shl
pop
cld
push
jno
hlt
ret
inc
mov
lods
mov
sbb
xchg
push
mov
outsl
pusha
mov
enter
lds
xchg
js
cs
fnsave
and
arpl
in
push
and
cmp
add
daa
mov
in
mov
or
loope
jp
and
jmp
mov
repnz
push
jne
in
popa
clc
mov
ret
jg
hlt
or
pop
loopne
cmp
jb
call
lret
cmp
adc
inc
loopne
arpl
scas
inc
jecxz
adc
jmp
aaa
pusha
imull
xor
add
add
jg
and
mov
fstpl
lods
and
xor
push
notl
pop
fldt
imul
pop
add
or
dec
scas
fidivrs
fs
jb
push
int
dec
or
cmp
pop
pop
or
in
xor
jle
push
testb
pop
sar
movsl
sbb
jle
stos
std
sub
xor
dec
push
mov
je
inc
out
mov
cmpsb
mov
sbb
mov
adc
mov
rcrb
imul
and
lahf
js
adc
mov
and
std
daa
mov
pop
dec
les
pop
jns
ds
das
push
cmp
xchg
add
in
mov
aaa
cmp
push
mov
add
insl
ljmp
add
mov
xchg
inc
adc
dec
mov
sbb
mov
data16
ds
imul
mov
mov
cmc
add
push
repz
xchg
push
cltd
dec
out
icebp
fsubr
fcoms
jmp
or
fwait
pop
xor
shrb
push
dec
gs
pop
ficompl
and
cmp
or
setg
or
repz
sub
xchg
xchg
test
or
cmp
or
ljmp
and
mov
nop
jne
aas
gs
inc
shll
mov
inc
ret
push
outsl
jecxz
jl
daa
lea
add
dec
mov
aam
mov
xor
in
out
jl
popf
movsb
movsb
mov
mov
gs
clc
add
jg
mov
jne
xchg
int3
jge
push
ljmp
notb
pusha
inc
popa
rol
addr16
in
sbb
xor
test
je
mov
subl
test
xchg
dec
pop
mov
push
stos
aas
outsl
jno
cwtl
imul
fwait
dec
cld
mov
loope
lahf
push
push
je
icebp
mov
call
add
push
mov
pop
imul
cltd
cmp
jge
leave
pop
jmp
sbb
or
or
xchg
cmpsl
inc
sbb
inc
xchg
push
cld
inc
in
out
loop
and
icebp
sbb
ja
mov
out
and
push
leave
xchg
ljmp
sbbb
adc
xor
jb
sbb
jb
es
inc
test
adc
ror
mov
add
addl
xchg
scas
in
cmp
es
push
xor
shll
cmp
jae
andl
hlt
add
xchg
cs
inc
push
movsl
jmp
dec
push
mov
out
inc
pop
xor
addr16
in
inc
fstpl
sti
popf
jg
imul
sbb
xchg
stos
inc
enter
push
in
mov
xchg
jns
lods
xchg
in
add
push
int
or
aam
rcrb
loop
cmp
stos
cmpsb
jge
out
jl
addl
mov
mov
push
cmpsb
cmc
pusha
hlt
aas
lret
xchg
inc
pop
and
shrb
cmp
pop
sub
imul
mov
rol
jl
cmp
and
dec
rorb
xor
rorb
enter
xor
xchg
sub
loopne
and
mov
scas
push
gs
and
arpl
cmpsb
out
test
push
xchg
mov
ret
xor
cmc
push
mov
jp
and
ja
xchg
cmc
mov
mov
adc
dec
icebp
gs
jecxz
cmp
das
dec
dec
shrl
mov
xor
cmc
add
inc
or
jne
sahf
sbb
jecxz
lds
enter
enter
jb
mov
pop
fsubr
orb
insl
jge
imul
mov
push
sub
adc
mov
arpl
cmp
inc
and
pusha
mov
adc
add
stos
add
dec
mov
sub
repz
push
lea
fbld
rcll
push
test
lds
jecxz
out
xor
mov
mov
out
sbb
outsb
sbb
and
nop
dec
lret
outsl
and
jecxz
test
inc
mov
fsubr
pop
fildl
jg
cmpsb
daa
mov
mov
ss
cmp
addr16
stos
mov
dec
int
rcr
rcrb
xchg
sbb
and
cld
lcall
push
stc
call
test
pop
xor
inc
push
pop
repz
xchg
loope
jp
hlt
mov
sub
lahf
ss
push
out
push
test
aad
jbe
clc
cmpsl
push
pop
scas
jb
push
insl
stos
push
inc
movl
pop
xor
cmp
ror
in
push
shr
call
mov
in
add
xor
or
mov
adc
xchg
hlt
popa
jb
mov
dec
dec
pusha
mov
xchg
movsb
test
pop
sub
pop
imul
mov
pop
sbb
dec
scas
push
rorb
pop
pop
cs
dec
and
xchg
shrl
push
cmp
arpl
xchg
aam
push
xchg
adc
leave
mov
ss
mov
mov
xor
add
out
insb
enter
into
adc
sti
dec
pop
loopne
sub
shlb
mulb
addr16
pop
inc
clc
test
leave
jo
jae
cmp
leave
iret
and
jne
cld
push
je
pop
loope
push
stos
jbe
inc
gs
xchg
cmp
enter
lds
lret
arpl
mov
inc
in
adcl
mov
mov
inc
jmp
pushf
inc
dec
pop
cmpl
js
rcr
rorb
cltd
sbb
adc
xchg
jg
fidivl
shll
mov
mov
sbbl
scas
mov
cmp
negl
shrl
add
mov
outsl
lea
fwait
sarl
jmp
das
rcll
icebp
jge
cmp
adc
dec
hlt
sbb
call
fdivs
xor
mov
ja
xor
sub
jle
sarl
cmp
pushf
les
cmp
pop
test
cwtl
das
rcl
lret
mov
scas
jp
xchg
pop
imul
push
adc
mov
insl
pushf
loop
push
mov
add
xchg
inc
fstps
js
insb
cmp
repz
xor
mov
ret
pop
mov
xchg
pop
jg
pusha
mov
mov
cld
xchg
sbb
mov
stc
adc
lods
adc
js
mov
jnp
pop
push
dec
fiadds
or
imul
cmp
push
lock
into
inc
sub
out
mov
pop
icebp
inc
imul
cli
push
in
js
lcall
push
mov
ret
loope
cmc
jl
negl
outsl
add
pop
cwtl
mov
test
cmc
cwtl
or
inc
push
loopne
fisubrl
es
mov
rcr
mov
test
add
jo
int3
stos
stos
mov
or
or
push
mov
les
fsubs
int3
sub
mov
mov
shll
je
sbb
daa
xor
addr16
stos
lock
out
sbbb
xchg
gs
jb
cwtl
xchg
jne
xor
jge
inc
mov
add
mov
icebp
mov
loope
jne
divl
dec
popa
sub
mov
cli
jg
hlt
push
cmp
clc
pop
add
int3
pop
lods
lcall
int3
shlb
mov
add
push
hlt
rorl
andb
test
cmpsl
jno
fwait
cmp
and
shrl
gs
inc
test
sub
push
pop
dec
mov
repz
jmp
pop
scas
inc
jnp
into
enter
aas
add
js
inc
ficoms
shlb
pop
fs
icebp
cwtl
fimull
sub
push
or
mov
mov
leave
int
xchg
and
jo
repnz
ret
xor
fnstsw
pop
pusha
sub
bound
fisubs
cwtl
jne
dec
lock
xchg
lods
xchg
shlb
and
arpl
xor
mov
dec
and
mov
push
js
or
cmp
and
fistpl
aad
cld
data16
push
sub
pop
sub
cmpsl
stos
adc
sub
dec
insl
jns
scas
and
jne
insl
decb
push
mov
xor
aad
test
xchg
aaa
sub
jle
cltd
adc
jne
je
inc
addr16
popf
fcmovbe
pop
or
sbb
sahf
cmc
stos
imul
adc
cmc
mov
push
mov
xchg
add
pop
xor
loop
addr16
mov
mov
cmp
inc
adc
pop
xor
sub
mov
cli
into
outsb
loope
xchg
mov
dec
loope
lahf
ja
aas
cmp
xchg
or
jp
sub
imulb
push
arpl
into
rolb
dec
adc
cmp
in
push
xchg
jle
push
test
adc
mov
jb
jp
cs
push
stc
sbb
pop
mov
pushf
pop
mov
std
mov
ss
fimull
xchg
andl
outsb
mov
lahf
add
aaa
or
adc
mov
ret
into
inc
push
arpl
repnz
rol
pop
mov
mov
sbb
aaa
stc
data16
mov
pop
inc
xor
in
mov
lock
pop
out
inc
jge
mov
cmpsl
dec
lcall
jne
addl
cwtl
sbb
xchg
outsb
in
into
adc
ret
outsb
jmp
seta
mov
lcall
mov
fsubl
mov
jl
es
divb
fimuls
pop
xchg
add
mov
frstor
cmp
movsl
and
pop
push
add
jge
or
jno
xchg
dec
push
cli
dec
adc
lock
mov
lea
add
xchg
mov
fisttpl
add
repz
cmp
lahf
pop
lcall
push
adcb
push
mov
and
shlb
cmc
insl
sbb
jns
loop
adc
ds
shlb
mov
jae
cmc
lods
xor
fidivl
push
lods
push
lds
xchg
lea
testb
call
pop
mov
push
sub
lahf
push
fistpl
xor
and
aad
mov
pop
loopne
ficompl
mov
xor
in
jne
mov
or
subb
pop
jmp
stos
sbb
mov
sub
movsl
xchg
data16
inc
fbld
mov
or
or
insl
add
andb
push
movb
ret
lret
dec
cmpsb
or
xchg
lods
out
scas
ret
cs
cmpsb
jne
fcoms
insb
out
sbb
xchg
data16
mov
lret
out
and
adc
jmp
cmp
and
add
bound
mov
fiaddl
adc
xor
mov
dec
loop
clc
loope
sub
out
sahf
inc
jecxz
ljmp
cmc
mov
test
sub
call
outsl
shl
das
mov
sbb
loop
stos
subb
mov
loopne
test
clc
jmp
dec
dec
xchg
or
popa
xchg
add
jmp
les
adcl
xor
lret
call
push
inc
orb
into
inc
fcmovnu
jne
clc
inc
jnp
sub
jg
jno
push
ljmp
scas
mov
and
leave
dec
loop
hlt
and
cli
cmpsb
inc
push
mov
xlat
inc
xlat
lret
std
ljmp
cld
dec
ret
mov
imull
insb
fcmovne
pop
lea
repz
sbb
push
sub
cltd
push
fadds
repnz
call
push
jle
insb
or
cmp
lods
cmpb
loope
mov
mov
or
jno
loope
cmp
adc
sarb
rcl
mov
or
xchg
fisubrl
orl
push
mov
and
test
pop
push
xor
and
popa
xchg
jno
les
jmp
mov
pop
jecxz
test
push
cmp
cli
cmp
fs
jmp
or
imulb
xor
inc
fmul
inc
dec
pop
js
ficoms
pop
in
aas
loop
sbb
jp
ret
repz
int
adc
add
mov
imul
cwtl
test
sub
outsb
dec
nop
call
int
jo
repz
mov
repnz
pop
mov
insl
lods
out
mov
stc
insl
mov
leave
cmpsl
mov
push
mulb
pop
repnz
lock
pop
xor
ja
aaa
mov
pop
andb
xor
or
jne
js
out
adc
push
sbb
push
mov
xchg
lock
pop
lods
pop
push
sbb
repnz
add
loopne
cltd
fsubrl
daa
jne
pop
cmp
mov
add
cmp
xchg
cs
xor
je
cmc
and
stc
mov
sub
mov
jg
repz
mov
test
jne
rolb
mov
add
push
bound
push
inc
in
into
mov
insb
add
or
imul
mov
std
popa
and
sbb
enter
je
sub
dec
lds
cvtdq2ps
and
lods
and
imul
mov
das
es
or
sub
sub
pop
xor
cltd
cmp
jno
sub
aaa
push
lods
inc
mov
cmpsb
cwtl
push
in
or
pop
stos
inc
push
xchg
call
bnd
mov
pushl
loope
pushf
dec
push
loope
push
fstps
add
es
xchg
insb
inc
jnp
xchg
cmp
push
clc
jg
jmp
test
into
mov
adc
mov
push
inc
lds
lods
push
imul
aad
and
nop
push
jne
xor
pop
or
sbb
mov
xchg
mov
rorb
inc
or
adc
mov
mov
adc
lock
and
add
lret
adc
into
mov
icebp
aas
push
add
mov
sbb
and
enter
ds
test
pushaw
mov
push
mov
and
sbb
push
sbb
push
test
push
popa
xor
adc
cmpsl
dec
or
adc
push
cmp
dec
loop
cmpsl
jle
clc
repnz
outsb
int
lods
ds
insl
into
xlat
das
hlt
push
adc
hlt
loopw
daa
ljmp
jne
push
mov
sbbl
aam
ds
ljmp
adc
ss
pop
movsb
xchg
cmp
dec
sbb
sub
sub
mov
in
sub
jle
dec
repz
int
inc
xchg
lods
shrl
test
and
push
stos
mov
aam
mov
sub
int3
mov
jnp
inc
pop
mov
movsl
stos
pop
outsl
loopne
loope
lods
add
lods
cmpsb
cmp
leave
jo
sub
mov
xchg
ret
repz
inc
and
or
cmp
stos
call
mov
or
or
cmp
jge
xchg
hlt
xchg
loop
inc
loop
xor
je
in
into
xchg
mov
jb
sbbl
jge
adc
add
push
mov
push
lret
pop
jo
je
pop
inc
fs
jle
pusha
js
aad
mov
pop
rorb
stos
pushf
repz
idivl
sbb
xor
bound
sbb
mulb
test
inc
int
loopne
adc
outsl
out
testb
lock
cli
fidivrl
sub
fdivrs
push
mov
je
sbb
sub
pop
aad
add
sub
test
jge
mov
jle
in
lret
xlat
stos
loope
mov
push
mov
inc
xlat
sub
aad
aas
aad
pop
outsb
mov
ja
movsb
xor
mov
push
addl
pop
mov
inc
lods
jecxz
test
xchg
sbb
lahf
sbb
xchg
push
mov
pop
hlt
rcrl
or
cli
xor
cmp
inc
mov
cli
mov
movsl
xor
cwtl
cmc
and
test
or
cmp
pushf
sub
out
xlat
leave
mov
aas
jne
clc
sbbb
mov
out
testl
adc
adc
adc
hlt
sub
stc
je
adc
pop
aam
and
or
mov
xor
int
or
jnp
int
push
xor
xchg
scas
dec
loopne
pop
lods
xchg
sub
adc
inc
ret
mov
mov
pop
scas
in
clc
pop
out
sbb
stos
dec
ret
mov
mov
or
out
xchg
imul
add
ds
mov
outsb
jle
enter
push
and
sahf
pop
push
std
rolb
leave
sbb
sub
mov
sub
pop
sbb
inc
sbb
dec
sbb
pop
in
push
stos
ret
insl
les
jmp
xor
mov
dec
push
stc
sti
bound
xlat
fsubs
cli
test
xor
ffree
or
pusha
or
or
jnp
scas
jp
cltd
shrl
inc
daa
in
adc
cmc
add
test
icebp
pop
lret
mov
pushf
loopne
mov
shrb
dec
cmpsb
cmp
dec
dec
pop
nop
xor
xor
mov
cmp
sbb
inc
sahf
fdivrl
cli
jne
add
xor
shrb
mov
jae
mov
ds
jbe
mov
mov
lea
arpl
stos
sbb
cmpsl
ds
es
cmp
cmp
inc
inc
fwait
inc
inc
xchg
pop
and
insl
mov
or
jne
sub
in
add
cmp
imul
test
mov
mov
sarl
xorl
in
dec
lods
bnd
in
push
je
sub
inc
push
push
jns
xchg
ja
jb
in
cmpsb
push
pop
std
xchg
nop
add
and
test
sbb
stc
insl
lea
ret
sub
pop
push
pop
addr16
pop
lods
xchg
push
jge
dec
in
jnp
fists
jno
lcall
out
ficoml
jne
imul
inc
jle
cmp
pop
mov
js
cmp
add
sarb
push
out
pop
or
cmp
lcall
pop
cmc
adc
test
cmpsb
dec
mov
mov
or
in
out
nop
pushf
sub
cwtl
xor
mov
clc
insb
cli
mov
sub
arpl
jmp
roll
sahf
leave
fnstcw
mov
dec
xchg
xchg
icebp
pop
lds
out
cwtl
aas
inc
push
mov
and
push
fcmovb
dec
fucom
inc
popf
push
cmp
push
lods
sti
in
jle
or
pop
adc
inc
or
xchg
arpl
leave
cmp
and
xlat
add
imul
test
dec
add
adc
push
shll
lds
rcrb
inc
or
stc
fsubs
int
pop
adcb
xor
cmpsb
les
daa
mov
xor
rorb
inc
test
sub
add
mov
push
out
inc
inc
nop
movsl
cmp
call
pop
jne
and
xor
xor
aam
or
loope
rorb
sahf
mov
icebp
jne
cmpsl
cmpsb
adc
pushf
pop
jo
ret
and
pop
and
lahf
in
push
push
mov
pop
icebp
adc
xor
js
sti
test
cmpb
sbb
and
pop
insb
xchg
fwait
mov
cmp
push
dec
pop
sbb
xor
popa
add
mov
cmpsb
in
mov
cltd
lret
ja
and
and
pusha
add
out
sub
xor
movsl
sahf
xchg
bound
dec
bound
adc
fsub
mov
arpl
push
inc
bound
int3
ret
hlt
in
cltd
and
jno
jb
movsb
scas
xchg
jns
call
or
mov
pop
cmp
jle
icebp
add
mov
ret
push
mov
add
dec
ss
in
out
push
stos
ret
inc
fpatan
xchg
dec
fstps
mov
adc
lock
or
leave
adc
mov
fmull
icebp
sti
repz
imul
int
fcmove
lock
popf
pop
nop
jecxz
sub
out
mov
jmp
into
ds
repz
pop
jmp
inc
das
test
lock
movsl
decb
sub
enter
clc
dec
adcl
fistpll
repnz
mov
sbb
fdivs
test
cmp
aas
rcrl
daa
mov
jp
popa
cmp
psrlw
jp
or
mov
mov
and
lcall
xchg
adc
push
pop
pop
fsubl
cmp
and
clc
fists
dec
test
sub
add
mov
mov
jmp
iret
data16
or
out
mov
fsubrs
xchg
mov
notl
sub
sub
in
pusha
mov
ret
jge
xchg
push
movsb
mov
arpl
xor
arpl
out
adc
inc
jg
jp
sti
imul
pusha
xchg
cwtl
xor
push
inc
lods
mov
pop
je
test
loope
cmp
mov
push
add
iret
xorb
popf
xchg
xchg
or
mov
mov
cmpb
or
aam
clc
pop
fs
xor
mov
test
movsl
js
inc
inc
rclb
inc
call
xor
xchg
lods
mov
popa
js
in
test
mov
cmpsl
orl
subb
call
push
push
jg
xchg
push
xor
xorl
xchg
mov
fmuls
andb
inc
inc
les
fwait
rorb
mov
fsub
idivb
sahf
inc
lret
adcb
pop
in
loop
pushf
test
add
test
loopne
cmp
pop
push
out
int
cli
mov
ret
inc
ja
std
ret
outsb
adc
imul
xchg
cmpsb
cmc
xchg
mov
rol
fisttpll
mov
mov
jmp
dec
lcall
bound
mov
jnp
leave
pusha
test
out
mov
xor
mov
cli
adc
inc
inc
adc
xchg
fcmovnbe
pop
imul
rcr
ret
mov
sbb
pop
sahf
mov
pop
mov
sbb
jno
sub
je
lods
ret
outsl
lahf
pop
mov
shlb
adc
mov
xchg
daa
fsubrs
fs
stos
push
repnz
scas
fnstsw
mov
or
mov
movsb
xchg
sub
mov
scas
inc
mov
xor
inc
leave
adc
inc
cs
loopne
push
inc
xlat
test
dec
and
dec
repz
xchg
add
cmpsb
inc
sbb
mov
int
lock
jmp
ds
call
test
pop
xchg
push
shrl
int
xchg
std
data16
mov
fisubrs
adc
adc
mov
rcr
cli
fwait
jns
inc
mov
data16
mov
inc
xchg
mov
aam
adc
loop
repnz
es
push
sub
lcall
dec
jl
dec
sub
cmp
or
sti
mov
iret
push
lods
add
xor
xchg
cwtl
dec
push
aad
mov
arpl
inc
jp
xor
call
inc
int3
jb
inc
mov
xchg
mov
cmp
insb
sbb
mov
in
jle
adc
inc
push
jecxz
dec
push
adcb
inc
or
cmc
push
sub
imul
mov
data16
sub
aaa
shrb
into
mov
or
aaa
jl
std
xchg
sub
jle
pusha
add
fsubrs
and
je
shl
aas
or
adc
sub
dec
std
clc
and
dec
test
pop
xchg
push
pop
mov
rol
jne
idivl
xlat
inc
pop
and
push
aas
fnsave
test
mov
lret
xlat
shlb
mov
adc
push
mov
add
jne
inc
mov
incb
and
push
cmp
or
lods
nop
fnstenv
mov
xchg
mov
inc
sbb
xchg
fwait
push
shll
icebp
dec
mov
cs
jecxz
in
mov
dec
es
insb
or
add
inc
xor
sbb
sti
xlat
jo
enter
jmp
pop
mov
rcll
aaa
fidivl
fisubs
negb
aaa
divl
roll
push
jle
inc
adc
ss
mov
xchg
les
pop
gs
pop
push
xor
ror
cld
inc
addr16
pusha
jg
or
out
and
lds
push
fcoms
dec
movsb
int3
inc
sbb
std
mov
fwait
adc
pop
cmp
cli
pop
mov
ret
idiv
sbbl
ss
add
mov
out
cld
adc
jp
inc
shll
enter
push
ret
fidivrl
into
data16
adc
jle
in
cwtl
jo
adc
lea
fidivs
stos
std
mov
cli
push
push
andb
es
mov
loopne
mov
nop
cmp
sbb
ret
jb
fiaddl
call
fidivs
pop
mov
pop
fstpl
into
lods
dec
lret
fisubrs
push
aas
dec
mov
pop
pop
cltd
imul
sbb
je
push
xchg
mov
loopne
xor
push
insl
jge
xchg
mov
mov
sbb
sbb
jl
jmp
fidivs
iret
xchg
test
es
inc
pop
pop
cmp
pop
imul
scas
fchs
clc
jp
and
dec
fisubl
push
gs
aad
shlb
ljmp
fisubl
xchg
subl
xor
cltd
xor
mov
mov
add
xchg
adc
inc
inc
dec
scas
jne
stos
gs
test
mov
mov
pop
dec
outsl
es
jns
jg
inc
ss
xchg
int
mov
lahf
call
dec
mov
pop
stc
jecxz
mov
mov
in
popl
fisubrl
js
subl
and
fldenv
xchg
lcall
mov
ficoms
jl
mov
and
loope
jb
mov
push
loop
test
sbb
push
jg
ret
push
leave
push
mov
gs
sbb
sbb
shrl
rclb
movsl
sbb
add
int
aam
add
xchg
pop
mov
fistpll
push
jmp
lret
mov
push
scas
imulb
add
sbb
jne
dec
adc
xor
out
xlat
cmpl
nop
mov
loope
daa
or
mov
push
mov
mov
dec
pop
jmp
outsl
sbb
mov
aam
imul
int3
idivl
add
jnp
push
je
inc
mov
or
fs
inc
xlat
roll
in
sbb
xchg
pop
jno
xchg
and
and
loopne
loope
sbb
cmp
jns
lahf
add
jl
jle
push
dec
lret
pop
inc
lret
neg
in
mov
pop
mov
fsubrl
clc
int3
hlt
or
push
push
sub
push
lods
add
test
adc
mov
mov
adcb
std
jae
or
inc
mov
or
xchg
ja
sub
std
mov
jo
scas
cs
sbb
jo
inc
add
mov
mov
adc
call
or
call
jbe
xor
sarl
std
pop
sbb
mov
addr16
roll
xor
fmuls
mov
testl
test
fisubl
jno
bound
rolb
call
or
call
cmp
imul
adc
lret
push
push
pushf
lods
fistpll
call
or
or
xchg
jle
cmc
aaa
jb
push
dec
lea
cmp
adc
xor
loopne
insb
jge
lods
push
mov
mov
in
in
test
and
jne
jo
xchg
and
cs
outsl
rsqrtps
push
sub
adc
mov
rcll
fistl
sbb
xchg
push
jmp
or
movsb
dec
cwtl
xor
xchg
test
adc
cwtl
adc
mov
cmp
mov
adc
lds
stc
xchg
sub
sub
pop
cmp
sub
adc
dec
sbb
in
pusha
sarb
cmp
fidivrl
jne
or
pop
pop
mov
mov
cli
not
mov
and
inc
fsubl
ds
insb
sti
fiaddl
nop
push
sbb
inc
mov
pop
stc
and
cmpps
imul
inc
and
dec
cmp
repnz
out
mov
sarl
adc
negl
xor
jno
push
cld
dec
leave
jns
sub
addr16
mov
test
sbb
mov
sub
adc
in
pop
test
lret
sti
cmpsb
push
adc
mov
dec
in
lcall
push
and
mov
ds
data16
jns
imul
icebp
inc
mov
inc
dec
and
cmp
cmp
gs
aam
arpl
bound
aas
jmp
notl
xchg
test
push
cmp
mov
repnz
pop
add
xlat
xor
or
jae
inc
xchg
dec
lahf
out
std
jo
mov
pop
in
xchg
je
mov
hlt
and
ss
mov
mov
aam
jbe
imul
popa
and
dec
lahf
pop
icebp
cmpsb
inc
xor
popf
lods
pop
cmpsb
popa
inc
cmpb
jg
push
sbb
mov
or
iret
popa
fsub
ja
dec
mov
pop
enter
inc
cmpsb
jbe
mov
jnp
lea
push
or
mov
or
movsl
sbb
mov
out
jno
scas
jp
push
sbbl
and
push
addr16
xchg
clc
cmpsl
repz
mov
lcall
jns
out
stos
push
pop
or
testl
jbe
dec
mov
notb
inc
sub
jno
rolb
ret
pop
xor
pop
jecxz
cmpsb
sbb
cmp
cltd
add
inc
in
clc
jge
je
sbb
cwtl
lret
adc
mov
jb
ja
test
sbb
arpl
mov
inc
pop
ja
mov
inc
cwtl
in
clc
pushf
jnp
adc
fildll
jmp
cmpsb
xor
sub
hlt
cmc
out
stc
out
sbb
andl
cmpsl
insl
jmp
js
mov
ret
test
bound
jno
xchg
hlt
in
ret
cmp
lea
inc
adc
jmp
mov
flds
mov
shlb
xchg
sbb
pop
iret
xchg
mov
in
fists
push
xor
adcl
or
push
stos
mov
lods
push
mov
insb
sti
push
sbb
jecxz
int
fwait
sti
jg
out
sub
mov
fwait
inc
and
jns
rorl
cmp
pop
data16
cmp
fstp
sub
cmc
or
outsb
inc
imul
fidivrs
xchg
std
lcall
in
add
in
cmp
int
jno
pop
aaa
inc
iret
push
mov
inc
ja
xchg
test
push
xor
das
push
lea
out
ja
das
jns
gs
push
lret
or
loope
inc
mov
jmp
cwtl
push
jmp
pop
lcall
dec
push
pop
mov
iret
mov
test
push
outsl
dec
in
xchg
loope
adc
orb
pop
xor
dec
or
ds
xchg
imul
outsl
jnp
cmp
lret
and
int
cmp
cs
mov
mov
loopne
xor
jp
repz
fildl
addl
popa
and
enter
pop
movsb
xchg
xor
nop
push
outsl
mul
pop
cli
cmp
xor
loope
sub
cld
xor
sbb
les
mov
pop
xor
pop
repnz
jg
int
dec
cld
jbe
ror
fldt
daa
and
or
and
data16
xchg
cmp
je
shl
add
xchg
test
stc
in
pop
daa
and
test
dec
dec
lret
out
out
adc
aam
xchg
xchg
test
outsb
jge
pop
cwtl
cmpsl
fsubl
pop
mov
push
icebp
pop
imul
popf
aas
pop
sub
addb
sbb
es
aam
stos
mov
loope
dec
dec
aad
outsl
mov
cmp
clc
cmc
shr
lock
ljmp
cmp
sbb
outsb
mov
and
gs
mov
cmpsl
mov
aas
pop
xchg
jbe
mov
mov
sahf
insl
xchg
faddl
inc
iret
sbb
ja
dec
cmpsb
cld
xor
popf
les
cmp
jg
mov
addb
inc
mov
jg
mov
mov
in
jl
jecxz
xor
iret
fistps
js
xchg
bound
lds
sbb
sub
jl
pop
daa
xchg
xchg
dec
nop
add
dec
daa
leave
aam
cmp
jno
and
pop
add
fnstenv
movsb
xor
bound
pop
dec
cmp
sbbl
jae
test
push
scas
xchg
out
sbb
mov
scas
sub
jle
cltd
xchg
in
das
mov
cmp
jmp
mov
jb,pn
mov
or
push
inc
push
arpl
sbb
dec
cmc
filds
xchg
cltd
je
enter
repnz
sub
iret
xchg
in
mov
add
mov
iret
loopne
add
sbb
and
cmp
fs
inc
ds
lahf
test
mov
sahf
repnz
adc
add
xor
ret
hlt
dec
add
jno
dec
stos
shl
mov
mov
loopne
popf
mov
sbb
in
addr16
pop
inc
stos
jge
mov
push
pop
or
cmp
int
jecxz,pn
bound
sbb
mov
adc
sub
xor
add
out
xor
mov
fsubrp
or
out
fisttps
leave
pop
fldenv
addr16
lret
sub
loop
sub
sbb
and
add
ret
mov
mov
ds
cli
mov
neg
decl
pop
pop
push
inc
clc
inc
cmc
loopne
cmp
cmpsb
push
push
adc
dec
leave
notl
sub
jne
ffree
xchg
in
adc
mov
add
and
xchg
adc
and
push
cmp
lret
mov
adc
rorb
aas
mov
shll
fcomps
push
lahf
sbb
xchg
xchg
lods
cmp
push
icebp
sbb
sbb
pop
push
mov
add
cwtl
sub
pop
sbb
popfw
push
pop
adc
pop
shll
nop
std
jecxz
test
cltd
insb
sub
iret
push
mov
dec
mov
push
pop
gs
sub
pop
pop
rolb
out
jge
gs
dec
loopne
pop
enter
out
sbb
and
jno
inc
sahf
out
pop
xor
or
pushf
scas
cli
jmp
mov
insl
mov
lcall
out
xor
stos
xchg
push
dec
mov
in
sub
in
cmp
pop
outsl
dec
call
xor
stc
mov
es
cld
jo
or
scas
and
fcompl
mov
push
push
mov
mov
push
mov
mov
dec
add
xor
adc
lret
xor
mov
sub
push
int
popf
dec
push
sbb
iret
push
and
push
cmp
out
hlt
cltd
pusha
jp
lret
xor
mov
xchg
mov
adc
sbb
push
nop
out
call
and
cld
dec
movsl
inc
gs
pop
aas
test
add
aam
and
insl
enter
cmpsb
fsubrl
pop
das
scas
xchg
stos
out
clc
xchg
cmp
xlat
aaa
and
fwait
aad
iret
lods
aas
ljmp
sar
jl
rolb
pop
pop
lods
ror
pop
fistps
dec
loopne
pop
and
rcll
in
icebp
xchg
divl
and
push
roll
std
pop
fidivs
pop
fstps
es
test
mov
jns
mov
and
ds
pop
push
and
push
sti
adc
leave
cli
push
sub
push
sub
adc
daa
shrb
push
movsb
sbb
shll
mull
xchg
rcrb
lock
cltd
std
mov
inc
mov
mov
shrl
xchg
hlt
mov
mov
xchg
cltd
negl
lret
inc
stos
mov
bnd
sbb
mov
stos
mov
and
jne
jb
mov
jge
or
xor
xor
arpl
mov
inc
xlat
ffreep
leave
mov
ds
dec
ret
mov
stos
and
inc
test
jne
cmp
jge
aam
adc
xor
cmp
jne
cltd
xchg
or
cmp
idivb
mov
hlt
or
shlb
mov
dec
das
inc
or
jmp
adc
or
repz
sbb
rorl
mov
in
mov
pop
xchg
decl
dec
addr16
and
jnp
setp
lret
pop
xchg
or
jo
addr16
xchg
inc
inc
sub
jne
sbb
xchg
sahf
mov
ret
ds
es
call
pushf
in
xchg
mov
ret
sub
push
lahf
cmc
xchg
push
add
out
pop
and
add
adcb
inc
daa
mov
divb
dec
pop
jns
pop
mov
sbb
ret
jmp
sti
sub
cmc
pop
jmp
pop
mov
daa
pop
jg
out
cmp
fistpl
loopne
and
and
adc
int
mov
sbb
inc
idiv
cmp
jb
fsubl
push
push
cmp
xor
int
cld
fcomi
int3
jmp
rcll
xor
into
or
adc
lods
jo
mov
adc
push
add
inc
mov
cwtl
out
outsl
arpl
pop
xor
and
cmp
mov
sub
inc
lock
mov
mov
in
scas
push
adc
div
cmc
lahf
sbb
xchg
sub
neg
xor
add
lcall
xchg
push
movsb
xlat
push
push
inc
jecxz
in
mov
jno
cld
aam
rcrb
jp
pop
jmp
mov
push
fstl
jmp
pop
stos
in
out
insb
xchg
xchg
testb
aaa
or
in
cmp
mov
outsl
rcll
push
aaa
adc
rorb
test
cld
xlat
lret
and
inc
fsub
sub
sbb
sub
cld
push
sbb
in
add
pop
out
and
mov
ret
popa
std
jl
test
push
sbb
xor
shll
out
dec
push
adc
mov
mov
jl
push
out
dec
sub
pop
clc
test
mov
lret
push
mov
add
and
inc
stos
lods
orl
or
pop
push
pop
lods
add
mov
pop
mov
fidivrs
mov
add
fwait
adc
aas
dec
cmp
sub
movnti
xchg
mov
ret
mov
enter
or
popf
push
push
insb
pop
inc
popa
dec
fimuls
out
fdivl
lds
cmc
xchg
ret
shlb
or
mov
aam
lods
inc
xor
adc
in
outsb
pushf
lea
adc
pop
pop
in
xchg
pop
xorl
orl
je
push
rcrl
mov
push
and
pop
adc
xchg
dec
dec
add
dec
xor
lds
inc
movb
mov
xor
mov
aas
dec
sub
xchg
xchg
loope
ret
or
add
push
xchg
sub
cmp
jne
outsb
mov
movsl
sub
subl
out
stos
jp
mov
xchg
stos
pop
push
fcoml
pusha
push
aaa
leave
xlat
jmp
xchg
cmp
adc
rol
cld
fwait
or
cli
jmp
xlat
sbb
jo
addr16
inc
sbb
lret
cmpl
mov
mov
fimuls
std
mov
in
push
mov
jno
out
popa
mov
fildl
stos
jmp
aaa
fadds
dec
and
push
popf
insb
daa
mov
xchg
test
mov
mov
int3
add
lock
lahf
xchg
adc
push
inc
fnsave
inc
sub
xlat
mov
incl
jl
dec
mov
ret
mov
out
fdivs
testb
out
sarl
push
loope
xlat
cmc
es
ficoml
inc
flds
pop
hlt
fs
jnp
add
or
sub
xchg
jle
aaa
mov
ss
push
ret
jl
bsf
test
adc
xchg
sub
jno
inc
xchg
test
rorl
or
test
ja
adc
les
clc
or
sbb
pop
leave
inc
test
imull
sbb
sbb
sahf
jno
mov
loope
dec
mov
cs
cmpsb
xor
mov
shrl
pop
cltd
inc
lcall
mov
lods
ds
pop
scas
add
test
jnp
cli
pushf
xor
add
pushl
sahf
out
mov
enter
lea
icebp
or
lea
pusha
pusha
pop
mov
xlat
jg
aad
mov
sub
xchg
decb
flds
mov
fldt
pop
adc
adc
scas
adc
icebp
inc
sub
dec
mov
out
loop
or
lods
bound
jns
xor
cltd
lock
clc
pusha
push
pushf
xchg
adc
sbb
push
or
adc
sub
dec
ret
dec
jecxz
vpaddsb
shlb
lea
les
push
adc
subb
mov
pop
out
shr
mov
or
push
add
mov
xchg
dec
clc
out
adc
jno
cli
xchg
insl
scas
adc
lea
mov
jg
dec
daa
fsubrs
mov
pop
je
pusha
add
mov
inc
es
sti
mov
pop
dec
aas
lret
loopw
jbe
xor
push
mov
push
popa
push
mov
sub
pop
mov
xchg
jge
xchg
or
sahf
cmp
mov
outsl
repz
cmp
and
jo
pop
jmp
out
sbb
push
test
mov
sbb
push
mov
push
scas
jle
aad
jg
jle
iret
les
daa
push
lods
outsb
ret
ljmp
insb
sub
push
mov
jge
push
xchg
in
fidivl
adc
mov
mov
hlt
inc
pushf
pop
mov
jns
push
frstor
add
sbb
arpl
lods
in
adc
cld
cmp
cmp
cltd
cltd
xor
mov
int3
and
in
arpl
lret
enterw
test
outsb
and
sub
gs
pop
inc
fnsave
fsincos
jbe
fcoml
nop
lret
push
mov
aam
mov
sub
cli
mov
lahf
add
call
dec
movsl
mov
or
inc
inc
shl
mov
movsb
adc
sbbb
xlat
cmp
dec
loop
repnz
mov
push
sub
iret
mov
xchg
cmp
xor
popf
and
cmp
mov
adc
pushf
sub
jmp
inc
js
arpl
gs
xchg
push
push
jmp
lock
dec
mov
cmc
jb
loopne
inc
adc
mov
into
pusha
jmp
decl
push
jae
cmp
xchg
insl
add
fwait
jno
imull
pop
mov
into
mov
ss
jge
jmp
loopne
es
sahf
arpl
ljmp
test
lock
dec
fisubrl
rorb
dec
filds
adc
add
and
push
andl
mov
xchg
adc
dec
pop
or
fwait
test
scas
sub
or
mov
mov
aam
fcomps
leave
ja
cmp
movsb
out
dec
insl
adc
call
mov
xchg
jmp
jle
xlat
aaa
ja
jae
popf
sbb
pop
mov
jbe
dec
mov
push
stc
std
sub
rcll
add
xor
and
in
cmpsl
and
test
test
add
or
xchg
jp
xchg
pop
in
bnd
aam
sub
rol
in
xor
push
cmpsl
jecxz
out
jmp
movl
or
test
hlt
mov
fnstenv
jo
dec
shrl
pop
hlt
shrb
xchg
mov
cwtl
icebp
mov
addb
orl
cmp
mov
stos
rorl
add
jmp
sbbl
add
add
popa
cwtl
decl
inc
jb
mov
in
mov
mov
sti
adc
xor
cltd
xlat
imul
inc
push
mov
dec
and
std
inc
ljmp
xchg
lds
fiaddl
daa
pop
cmp
pop
int
cs
cmc
nop
add
xor
jnp
add
xchg
pop
sti
mov
out
shlb
loope
lcall
pop
daa
dec
push
pop
cld
imul
cmpsb
cltd
cld
adc
mov
push
mov
dec
mov
push
xor
je
es
and
fs
xlat
adc
xchg
jno
lds
pop
lods
xchg
das
daa
repz
inc
dec
pop
ror
aad
fs
arpl
sub
data16
xor
ja
sahf
push
sahf
jp
subb
xlat
dec
or
sahf
mov
repnz
sbb
xchg
jns
rcrb
fisubs
dec
xchg
int
in
sub
jl
push
call
jle
outsl
jns
sub
lods
pop
mov
mov
filds
int3
xchg
fstl
xor
aaa
into
lcall
int
lea
bound
xor
cmpsb
inc
mov
cmp
nopl
loopne
outsb
enter
test
fisttpll
cmp
cltd
aaa
clc
lret
lea
dec
adc
out
pop
jle
dec
mov
leave
popf
sub
adc
pop
xor
xor
popa
clc
mov
dec
add
pop
xor
mov
enter
cmp
mov
leave
outsb
push
mov
add
inc
dec
popa
pop
hlt
adcb
or
scas
psubusb
xor
dec
mov
pop
clc
shl
inc
xor
inc
pop
lea
adc
gs
cld
jnp
stc
push
and
dec
sbb
repnz
push
lods
mov
loope
dec
adc
jae
xchg
pop
cmpsl
dec
out
pop
fxam
jo
inc
mov
hlt
out
mov
outsb
inc
loopne
pusha
shll
shrl
sub
sbb
jmp
fwait
dec
sarb
aaa
inc
fidivs
addb
add
lret
rol
mov
inc
jb
aam
push
xchg
sub
push
add
xchg
jbe
inc
xor
ljmp
call
filds
out
call
lcall
sbb
or
pop
enter
mov
xor
call
mov
add
pusha
mov
test
pop
mov
jne
mov
mov
sbb
inc
dec
mov
lret
mov
je
dec
xlat
in
xlat
les
bound
ret
or
mov
pop
adc
std
insb
lahf
adc
mov
cmp
push
lcall
mov
mov
and
outsb
push
adc
sbb
and
je
lock
pop
mov
daa
inc
loopne
mov
into
mov
inc
out
dec
dec
push
add
dec
sbb
ret
sub
jmp
xchg
es
call
test
add
xor
std
rolb
lahf
xchg
addr16
sub
jg
ret
sub
mov
or
lret
and
cmp
insl
xchg
test
xor
inc
or
sub
dec
aas
mov
popa
xchg
outsb
push
xchg
das
ret
outsb
icebp
mov
mov
jb
aam
and
xchg
test
push
cmpsl
aas
repnz
mov
adc
sub
dec
jne
jl
lods
and
repnz
mov
mov
mov
jg
jbe
xchg
sahf
int
xchg
call
cs
inc
cld
sub
std
xor
pop
cmp
cmp
pop
xor
aas
cmp
sbb
sahf
shll
test
lock
xchg
dec
leave
fsubrs
out
iret
pop
leave
pop
jno
add
cld
inc
loopne
ja
inc
aam
jae
mov
cmp
jns
add
mov
mov
incb
or
daa
fidivs
lret
jns
sti
fcoms
mov
jnp
sbb
inc
pop
mov
jnp
cmpb
cwtl
or
mov
sub
mov
fcoml
out
cmc
clc
cmp
ret
inc
xor
out
arpl
xchg
addr16
leave
popf
push
pop
mov
das
shll
push
clc
pusha
fsubl
scas
xor
fnstenv
inc
pop
pop
push
push
aaa
popf
stc
stc
popf
pushf
mov
jle
sub
je
push
jo
push
inc
sub
cwtl
add
sbb
out
sbb
jl
push
cmp
cmp
mov
jmp
insl
add
mov
mov
push
or
test
imul
aam
xchg
gs
xchg
mov
jno
add
dec
dec
add
sub
aam
mov
out
test
call
arpl
sbbb
pop
test
dec
push
push
lods
or
movsl
mov
shufps
outsb
jo
xor
add
imulb
lods
push
fucomip
dec
fistps
mov
cmp
data16
xchg
mov
mov
fistpl
mov
lret
bound
push
inc
lcall
jbe
sbb
lds
cli
lods
push
into
mov
jnp
push
adc
das
add
aam
push
pop
sbbb
fwait
inc
div
cmpsb
scas
enter
into
shlb
xchg
pop
xchg
mov
or
jl
inc
push
sbb
insl
lret
clc
dec
ja
cmp
cwtl
xchg
or
or
xchg
inc
add
mov
in
fstpl
mov
sbbl
or
pop
pushf
sti
in
lret
iret
out
jns
ret
in
lcall
gs
jbe
xchg
popf
mov
push
and
test
adc
jg
mov
aad
mov
sub
sub
mov
fadd
pop
xor
aad
shll
cmp
mov
or
mov
push
bound
adc
xor
aas
fs
pop
leave
pop
loop
popa
add
adc
outsl
push
pop
dec
push
nop
shlb
mov
inc
push
mov
pop
loop
in
fwait
shll
int
add
dec
push
and
aam
mov
out
adc
imul
cmp
push
xor
push
movsb
stos
cld
add
jns
and
mov
arpl
and
gs
gs
xchg
add
adc
dec
sub
xchg
js
loope
lcall
shrl
jae
cmc
icebp
loope
xor
cmp
cmpsl
mov
mul
hlt
push
cmp
sub
popf
fsubs
ret
pop
pop
cmp
cld
hlt
xchg
sub
adc
sbb
outsl
aaa
pop
jo
push
cmovg
mov
pop
lret
cmp
jns
lahf
pop
mov
fwait
ss
push
movsl
sub
fwait
and
mov
jmp
jp
ss
xlat
js
test
adc
fsubrs
xchg
pusha
sahf
xor
xchg
sbbb
sub
sub
xchg
push
fcom
insb
daa
mov
mov
add
cwtl
jp
lock
lret
sbb
hlt
mov
jb
cmpsl
mov
sti
sahf
iret
add
adc
imul
fwait
repnz
xchg
pop
popa
xor
push
xchg
scas
pop
pop
rcrb
mov
daa
push
dec
imul
sbb
sub
cmc
jle
aad
push
out
cli
push
and
aas
mov
fdivrs
sub
adc
clc
notl
sub
jb
subps
lahf
adc
xchg
pop
mov
into
jle
xchg
inc
test
pop
pushf
or
ljmp
in
sbbl
mov
mov
sbb
aam
xchg
movb
or
xor
pop
repnz
gs
addr16
sub
push
adc
inc
mov
leave
lods
ljmp
in
dec
add
lea
arpl
push
or
xchg
cmp
mov
bound
xchg
mov
and
adc
f2xm1
pop
les
adc
lods
xchg
clc
mov
mov
inc
and
mov
clc
xlat
aam
lods
and
mov
insb
push
lret
in
or
cmp
imull
out
out
lcall
stc
sbb
or
dec
push
xchg
jge
mov
movsl
lret
and
mov
orb
stos
loop
es
xchg
pop
sarb
xchg
punpcklbw
cmpsb
sbb
or
pop
cwtl
nop
nop
test
xchg
mov
jge
xor
fadd
in
jmp
mov
pop
dec
jg
pop
mov
pop
cli
mov
push
sub
jp
push
push
mov
jns
lock
mov
test
mov
cmp
ljmp
rcrb
lds
mov
xor
jg
divl
lods
into
movb
inc
nop
push
and
bound
xchg
adc
js
in
jb
push
lret
test
andl
sub
cmp
or
push
repnz
sbb
xchg
adc
bound
pop
test
in
xorb
test
mov
xor
jge
inc
xor
shrl
ret
outsl
movsb
push
or
or
xor
int3
jae
mov
push
or
ljmp
das
inc
inc
dec
push
push
or
and
dec
push
xchg
or
sbb
fwait
in
pop
lret
bound
ja
inc
sbb
cltd
mov
mov
or
movsl
dec
pop
sarl
or
pop
sbb
test
pop
pop
jmp
jl
das
lea
test
test
ficoms
jmp
mov
mov
sub
jae
out
test
push
aaa
push
arpl
arpl
orb
leave
cwtl
sub
ja
and
pop
xor
movsb
daa
push
jnp
insl
dec
and
outsb
xor
inc
inc
mov
pop
popa
stos
inc
mov
inc
pop
movsb
xchg
movsl
rorl
mov
lock
and
or
in
sti
enter
dec
or
adc
rcll
rorb
movsl
enter
jge
aaa
and
scas
push
clc
sbb
mov
add
test
iret
flds
idivb
cmp
fmulp
in
xchg
push
jmp
mov
dec
popf
mov
sarl
mov
pop
pushf
dec
test
loop
fmuls
jmp
dec
stos
or
adc
or
sbb
outsb
pop
fdivs
add
xor
rolb
sbb
mov
cmpsb
loope
movsb
rclb
sbb
dec
mov
outsl
in
cwtl
dec
incb
popf
xchg
ret
inc
lcall
inc
pop
jno
fxch
xchg
jbe
xor
mov
xchg
or
push
sahf
sarl
in
pop
lods
and
mov
ss
clc
sub
loopne
sub
cmp
fsubrl
popw
shr
adc
mov
rorl
jns,pt
insb
mov
imul
jecxz
bound
mov
dec
mov
dec
les
sub
inc
pop
adc
packsswb
clc
int
pop
int
mov
out
sub
fucomp
add
aad
or
ss
adc
mov
mov
fstpt
or
in
inc
sub
stc
sbb
jae
push
scas
imul
push
xchg
sub
nop
popa
or
aaa
sub
mov
popa
mov
or
cld
movsb
insl
mov
mov
sbb
sti
dec
jge
sub
adc
mulb
and
add
hlt
sub
aad
add
or
jmp
fcoml
push
lods
ds
js
mov
push
repnz
btc
cli
push
xor
push
fadds
or
xor
adc
movsl
xchg
in
and
sbbb
xchg
in
cmpsl
mov
jns
movsl
dec
add
inc
add
cmp
mov
leave
mov
dec
pop
ss
xlat
out
call
frstor
mov
sbb
loop
inc
lock
mov
jo
xchg
daa
inc
pop
icebp
out
insl
ja
mov
mov
out
xchg
mov
sub
fcoms
lret
cmp
js
dec
popa
int
sti
add
and
movsb
sahf
jg
mov
dec
popf
add
mov
mov
aaa
pop
sbb
iret
xor
push
repnz
add
sbb
fs
insb
mov
push
fstpl
pushf
stc
jl
dec
xchg
std
or
lahf
xchg
imul
ret
out
loop
lahf
fcomps
jns
aaa
aad
notl
sahf
insl
jge
imul
dec
mov
notl
sbb
add
sbb
pop
leave
mov
or
mov
pop
xlat
pop
mov
mov
pusha
dec
adcl
notl
jge
add
inc
leave
rorb
jns
lods
mov
adc
insb
js
push
mov
dec
add
shlb
cmp
add
pop
pop
xchg
outsl
or
mov
aas
add
bound
aad
hlt
sbb
push
sbb
ds
pop
inc
rorl
cs
cmp
pop
lods
dec
mov
cmp
cmp
fwait
jp
sub
inc
lods
sbb
jns
addr16
jne
int
not
das
lods
sub
movsb
rcrb
jecxz
ficoms
hlt
xchg
mov
push
in
les
lods
in
insb
adc
lods
inc
cmpsl
lcall
insl
int3
dec
fists
push
scas
add
and
inc
push
data16
aam
rdmsr
mov
sbb
lahf
into
dec
cmpsl
sub
jae
push
dec
mov
addl
jae
cmpsl
xchg
mov
imul
out
clc
xchg
ret
xor
frstor
pop
xor
std
cltd
xor
cmp
in
mov
aad
or
inc
mov
mov
pop
push
rcrl
aaa
cs
es
std
cltd
or
scas
test
adc
shrl
fwait
das
adc
cmp
adc
sub
push
and
es
mov
imul
xor
jns
dec
std
lock
inc
cwtl
xor
xor
dec
push
lock
fisubrs
jmp
aas
rcll
mov
fsubr
adc
and
pop
add
mov
inc
jno
xlat
bound
mul
fucomi
push
sbb
or
popf
jle
jecxz
xor
push
jmp
or
mov
movsb
sbb
cmp
dec
outsl
push
jp
rcrb
pop
push
sub
std
push
jno
mov
mov
loopne
cmp
inc
xchg
call
fimull
mov
mov
xchg
inc
aas
dec
icebp
mov
stos
cmp
std
int3
push
stc
push
addl
xchg
test
add
push
fists
mov
lret
pop
fs
jmp
out
cmpsb
movsl
dec
rorl
test
adc
mov
test
and
in
inc
mov
fld
mov
adc
inc
sbb
icebp
lcall
movsb
sub
or
mov
cmp
icebp
dec
pop
dec
out
data16
jmp
mov
arpl
icebp
insl
sti
int3
arpl
cltd
mov
lret
xchg
add
leave
cld
or
test
jns
push
cmpsb
jl
sahf
dec
push
mov
shlb
jbe
push
dec
jnp
sbbl
jno
fisubl
xchg
dec
movsl
stos
adc
bnd
mov
test
mov
cli
imul
lea
push
nop
xor
ret
pushl
push
or
sbb
pop
cmp
call
dec
fsubr
test
ljmp
in
inc
push
je
cmp
dec
je
add
pop
inc
pop
jbe
sti
insb
cmpsb
mov
lea
cmp
sbb
xchg
ss
jecxz
fsubr
lock
shlb
add
mov
jmp
pushf
pop
mov
outsl
ret
sub
insl
cs
jge
rol
mov
aad
rcll
mov
mov
add
mov
pop
mov
and
cld
sub
sub
adc
out
bound
outsb
iret
push
mov
lock
push
dec
das
cmp
jnp
sub
ja
lods
test
pop
jg
nop
out
ret
pop
adc
fucomp
popa
sub
mov
cmp
mov
out
mov
dec
in
iret
sahf
gs
jle
in
pop
dec
pop
loopne
insb
daa
add
jbe
mov
adc
hlt
dec
mov
jnp
cmp
and
sbb
repz
subb
pop
jecxz
or
adc
cltd
add
mov
mov
cmp
push
rol
pop
pop
shld
pop
jnp
fwait
mov
adc
mov
add
jbe
nop
add
rorl
loopne
dec
in
nop
insb
sti
jg
sbb
xor
insb
or
cltd
pop
push
popf
and
mov
xor
pxor
gs
dec
jae
mov
lods
jne,pt
jnp
fwait
icebp
mov
movsb
jmp
xlat
das
add
xchg
sub
jne
jl
test
ror
mov
mov
adc
inc
insl
mov
push
jo
mov
xchg
mov
mov
jl
stos
and
fldenv
dec
jp
adc
lods
pop
mov
insl
cli
das
scas
push
call
scas
inc
sahf
adc
push
lcall
jg
jge
std
push
mov
fstps
pop
push
aas
in
xorl
test
or
cmp
cltd
xor
pop
ja
add
jne
fs
mov
sar
jae
add
pop
scas
icebp
sbb
pop
dec
jb
icebp
cs
aad
jo
mov
fcoml
fnstcw
fldl2t
les
sub
sahf
mov
into
push
dec
lret
mov
pop
or
jmp
out
pusha
lock
pop
jl
inc
bound
add
shrb
out
fwait
mov
or
or
rorl
push
pop
mov
data16
sub
and
cmc
dec
push
sub
fdivp
cmp
push
out
xchg
sbb
or
xchg
loope
add
adc
mov
jae
sub
rorl
or
sub
push
aas
andl
rol
in
xchg
dec
mov
cmp
stos
inc
pop
mov
xor
lods
leave
pusha
fistpll
jmp
mov
or
and
call
cs
mov
sbb
sbb
nop
adc
gs
bswap
sub
scas
pop
je
aam
sub
cmp
lret
pop
jnp
loopne
loop
mov
cwtl
cmp
icebp
enter
sub
test
out
scas
sbb
mov
jnp
push
out
out
cmpsl
pop
inc
mov
sub
fdivl
and
pushf
xor
adc
test
out
ret
add
sub
addb
jno
jp
xchg
sahf
cli
ss
sahf
adc
sub
dec
or
shlb
mov
ret
dec
shr
push
mov
cmpsl
out
ss
mov
or
in
ss
add
cld
cld
sbb
xor
push
adc
pop
aaa
xor
adc
ds
daa
adc
push
inc
nop
mov
mov
cwtl
lods
ret
xor
or
fstpt
xor
je
aam
pmulhuw
icebp
dec
sub
cmp
mov
imul
push
push
inc
lods
insl
loopne
out
in
mov
addl
lds
mull
pop
jne
push
adc
js
cmp
gs
xchg
imul
aam
loope
dec
cmp
lock
rcl
adc
mov
pop
fisttps
orl
and
lods
into
mov
xchg
test
jge
loopne
ret
add
fistps
rclb
stc
sbb
dec
repnz
and
push
xchg
mov
mov
jmp
subb
and
in
cmp
std
inc
arpl
xchg
data16
inc
mov
repz
push
push
xor
repnz
jnp
mov
dec
xor
xorb
lea
ja
js
mov
es
mov
xchg
fwait
cld
int3
mov
mov
xchg
xchg
and
mov
pop
repz
pop
jecxz
add
sbbb
and
cmp
lods
cld
stos
sub
iret
jg
out
push
hlt
push
test
sub
xlat
jnp
or
sbb
std
cmp
imul
inc
addb
mov
popa
xlat
jno
aam
movsl
data16
imul
xor
jg
pop
mov
xor
aam
or
or
enter
ret
add
cmp
push
cmp
pushf
mov
ror
movsl
fwait
lret
fidivl
mov
popa
test
sub
fldenv
test
fiadds
push
int
mov
and
xor
mov
adc
int
dec
sub
movsb
pop
mov
dec
mov
cmp
ja
jne
iret
in
mov
dec
aad
imul
jne
call
data16
andl
sub
enter
pushf
adc
gs
mov
adc
pop
lock
push
inc
faddp
dec
fsubl
lahf
cmp
test
jne
or
stos
aas
dec
fucomp
nop
testb
nop
mov
int3
cli
test
inc
cmp
mov
loop
fucom
xor
inc
inc
sub
cmp
fisttps
pop
out
test
jg
sahf
cmp
jge
pop
popf
lods
sbb
mov
inc
lret
insl
adc
adc
pop
cmp
test
and
leave
int
ja
in
test
add
in
loope
xor
aam
insl
ss
push
int3
out
repnz
mov
and
xor
scas
rorl
nop
js
movsl
mov
insl
xchg
clc
iret
push
xorl
scas
cmp
push
js
cmpsb
sub
jge
add
xor
shll
das
jbe
and
and
sbb
jb
mov
xchg
daa
push
lods
fildl
imul
ret
sbb
fsubr
jecxz
aam
subb
fstps
jecxz
addl
sbb
into
or
fstpt
mov
ror
mov
dec
insb
sub
pop
mov
jae
js
sub
sbb
dec
loop
cld
lcall
test
lcall
xor
sbb
aam
xchg
pop
rol
arpl
pusha
mov
mov
mov
stc
fcmove
xchg
fisubrl
fldenv
push
mov
sub
outsb
stc
outsb
pop
jl
frstor
mov
stc
add
and
sbb
or
pusha
dec
pop
lods
std
add
sti
sbb
xor
pop
add
pop
roll
mov
sbb
and
adc
mov
push
cltd
std
fwait
jp
mov
loopne
pop
popf
enter
in
ficompl
jnp
mull
shll
fisttpl
stc
je
and
mov
fistl
push
popa
cmp
sbb
test
mov
jp
sbb
cmpsl
and
leave
rclb
gs
mov
leave
mov
pop
push
mov
inc
cmpsl
imul
lds
test
in
shlb
adc
pop
jg
push
fsubs
xchg
mov
inc
pop
mov
cwtl
cmp
xor
push
pop
in
pop
ljmp
stc
nop
movsl
jne
xchg
add
test
in
xchg
xor
or
or
in
mov
inc
fildl
mov
popl
movsb
popf
jno
std
sar
inc
pusha
adc
outsl
mov
fcomi
adc
and
sbb
mov
pop
cmp
pop
movsb
pop
pop
fsubl
mov
arpl
adc
mov
mov
dec
das
sbb
stc
sub
cli
sbb
mov
jmp
adc
push
insl
mov
mov
das
mov
fsubrl
aad
frstor
jb
jmp
ret
jb
jle
lcall
pop
mov
arpl
fidivrl
gs
mov
into
or
xchg
pop
ljmp
outsb
ljmp
jp
mull
dec
cltd
mov
rorb
daa
push
scas
inc
inc
push
xor
lret
fmull
dec
cmp
mov
fsubrs
xchg
out
test
cmp
cld
lret
xor
jb
xorb
pop
jbe
adc
sti
std
add
sub
pop
add
fildl
test
xchg
jle
int
pop
fs
add
addl
push
ds
fnstsw
push
push
push
stos
push
int3
iret
arpl
leave
je
pop
mov
add
add
inc
xor
adc
xlat
push
mov
xlat
ret
lods
add
cmp
hlt
inc
std
andb
inc
outsb
xor
out
cmpl
in
clc
fcoms
mov
push
xor
xchg
iret
lods
jecxz
mov
nop
imul
jp
pop
pop
mov
shll
push
repz
cmpb
and
add
xor
test
push
nop
push
push
mov
sub
adc
adcw
jb
loope
and
lahf
xchg
jmp
inc
int
pop
jb
sarl
or
mov
sub
add
test
xchg
fwait
ret
jne
iret
data16
fbld
cltd
jb
sbb
mov
ds
out
int3
adc
cld
mov
and
out
fstps
add
cmc
push
push
call
mov
cmp
lret
sub
fs
lea
icebp
lds
jbe
aas
or
sbb
jbe
dec
adc
rorl
push
jne
adc
add
pusha
cwtl
dec
xchg
aas
dec
mov
sub
ja
xchg
lock
jle
sbb
adc
shlb
outsl
push
or
sahf
push
rcl
mov
fldl2t
test
scas
xchg
cwtl
test
lods
xor
dec
and
xorb
sti
xor
push
jg
push
sub
mov
adc
test
push
lret
xor
fwait
ss
adcb
lock
lods
inc
jne
dec
push
adc
hlt
sti
es
jnp
xor
into
mov
mov
and
xlat
jbe
xchg
sub
cs
add
int3
fidivrs
or
xchg
xlat
dec
fidivs
mov
hlt
jbe
and
inc
push
mov
sbb
ss
lods
inc
xor
ds
popa
xor
mov
pop
sub
push
ljmp
jno
roll
jg
stc
xor
cltd
sbb
mov
cmpsl
jl
test
jae
call
add
xor
notl
inc
mov
sbb
jno
cld
inc
cltd
sbb
orb
push
daa
jle
ja
fwait
rcrb
xchg
mov
bnd
adc
out
cmpsl
out
pop
scas
je
call
adc
cwtl
loop
pop
leave
mov
mov
ret
ja
or
divb
out
or
fsts
xor
hlt
push
xor
aam
push
xchg
mov
fs
xchg
xor
push
push
mov
fldl
sbb
sti
xchg
sbb
cld
or
cmp
lret
fsubp
lods
jo
filds
xchg
sub
mov
dec
hlt
out
shl
rorl
inc
cltd
pop
xchg
dec
cmp
mov
shrb
xor
ret
out
xchg
sbb
jl
mov
or
push
popf
dec
pop
iret
jbe
add
dec
sbb
jmp
mov
shrl
jle
pop
push
pushf
movsb
push
nop
sub
pop
inc
fisubrl
add
mov
xor
into
mov
xchg
add
sbb
outsl
pushf
neg
pop
rolb
sub
fdivl
cmpsl
mov
xchg
pop
data16
je
cmc
mov
and
xchg
push
out
xchg
cmc
dec
cmpsb
std
lods
movsl
fucomip
sbb
push
sahf
pop
push
xchg
add
cmp
xor
neg
push
sbb
lock
daa
pop
push
jl
pop
outsb
gs
xor
hlt
push
jns
mov
int3
cwtl
jns
pop
jp
ret
repz
sub
scas
adc
movsl
mov
sbb
or
pusha
add
dec
iret
sbb
mov
dec
dec
dec
push
fcmovu
jae
rorb
sub
add
rolb
lock
fwait
loop
mov
inc
stos
sbb
inc
sbb
push
jecxz
mov
pusha
aas
in
stos
test
cltd
std
pop
lods
xor
pushf
adc
dec
inc
jns
cmp
cmp
cmp
cmp
aad
inc
pop
leave
call
push
mov
push
xchg
les
es
jne
aaa
and
lret
bound
iret
jl
or
jg
fisubrl
mov
or
negl
dec
repnz
add
mov
mov
clc
outsb
sub
pop
sub
jnp
loop
jns
and
xchg
adc
repnz
xor
push
je
shr
mov
out
add
pop
adc
pop
cwtl
enter
lret
xchg
add
test
pop
adc
js
cmpb
mov
mov
dec
dec
loop
mov
inc
sbb
adc
andl
jb
ret
stos
push
mov
imul
mov
mov
testl
xor
sbb
fbstp
std
dec
loopne
push
cmpb
addr16
or
mov
xchg
xchg
mov
cmp
mov
sbb
movsb
sub
push
add
stc
lea
mov
mov
ret
fsubr
hlt
push
cmp
inc
icebp
sub
and
data16
lret
mov
testl
jmp
inc
xchg
mov
sbb
js
cmp
cmc
jne
xor
pop
cmp
or
dec
pop
fdivrl
in
dec
jne
mov
cld
or
movsb
adcl
sti
add
lea
out
add
sti
iret
imul
cli
dec
sub
and
iret
cmp
je
cmp
sub
pop
insb
sub
pop
lock
cmp
or
fidivrs
mov
jge
bound
mov
cmpl
inc
stos
cmp
daa
push
hlt
adc
sub
mov
arpl
inc
mov
adc
fwait
addb
jo
xchg
mov
aaa
push
scas
in
jo
jl
lret
pop
mov
push
mov
mov
sbb
das
ds
mov
mov
lahf
and
adc
pop
cmp
and
pop
out
fidivs
xchg
dec
rorb
pushf
jg
shl
sbb
loop
ficoms
inc
fsubrl
ljmp
das
pop
xlat
clc
inc
dec
pop
icebp
sub
int3
into
test
lods
xchg
neg
and
popl
lds
movsl
push
sub
rol
jg
cmp
outsb
sub
and
pop
sub
cmc
cmp
lcall
cmp
add
out
clc
in
cmpsb
icebp
dec
push
xor
ficomps
pop
iret
push
loopne
push
or
push
and
pop
cli
pushf
mov
dec
dec
aas
shrb
mov
mov
inc
mov
cmpsl
mov
rorb
push
loop
sub
inc
outsb
into
lret
mov
leave
dec
cmp
xchg
sub
cltd
sbb
add
inc
out
jb
cmc
jecxz
xchg
xor
pop
lahf
fidivrs
xchg
js
in
or
push
inc
mov
gs
loopne
xor
ljmp
cmc
mov
push
xchg
andb
pop
je
jle
jnp
inc
inc
arpl
mov
push
inc
push
xor
dec
push
test
pop
pop
sbbb
fnstcw
test
jnp
add
cltd
test
sbbb
cmc
arpl
lock
rorb
shll
cli
pushf
jle
inc
sbb
mov
xchg
and
clc
fwait
jbe
out
scas
std
cltd
and
xlat
cmp
jae
outsb
ret
mov
push
jae
imul
rorl
mov
popa
stc
test
es
loopne
orb
inc
repnz
xchg
mov
add
je
mov
test
pop
mov
in
dec
sti
sub
ret
outsb
fs
cmpsl
orl
lcall
dec
cmpsb
popa
mov
roll
ljmp
lcall
xor
push
scas
xchg
mov
jmp
icebp
sbb
mov
jo
rcrl
rclb
mov
lods
push
sbb
mov
pop
pushf
xor
mov
pushl
add
pop
jb
std
sbb
sahf
and
sbb
xor
and
aaa
cwtl
push
scas
pavgb
and
mov
aas
decl
mov
sbb
add
add
and
and
xor
movsb
or
mov
in
cmp
stos
cmp
ss
xchg
add
nop
rcrb
mov
jb
lcall
jnp
cmp
dec
push
xchg
cs
out
sbb
insb
pop
aas
imul
pop
movsb
in
aas
pop
jg
movsb
pop
sub
movsl
fwait
icebp
adc
jge
out
mov
jge
xchg
sbb
repnz
push
aas
adc
pop
rol
aam
inc
gs
ret
ret
mov
mov
jnp
jge
mov
cwtl
std
ret
cmp
mov
pop
cmp
xchg
stos
xor
and
push
dec
pop
lods
fdivl
aaa
mov
es
xchg
push
push
cmc
add
push
aas
xchg
imul
xor
std
les
jne
call
push
fs
mov
mov
mov
loope
negl
lock
in
cmp
pop
insl
dec
add
aam
pop
push
sti
fnsave
frndint
or
jno
mov
andl
pop
mov
mov
movsl
push
bound
imul
imul
pop
shlb
not
mov
mov
in
mov
mov
dec
scas
mov
scas
stos
hlt
pop
pop
mov
ja
xor
aam
xor
lcall
jbe
adc
shlb
test
adc
enter
mov
jmp
cmp
sub
es
pop
lahf
int3
dec
xchg
jl
and
jl
mov
loop
pop
sub
xor
pop
clc
mov
sbb
sahf
jns
test
mov
push
out
in
insb
mov
test
ljmp
and
ds
outsl
mov
fsts
pcmpgtw
clc
stos
stos
adc
mov
insb
jmp
scas
jns
sarl
mov
xchg
iret
mov
jp
scas
js
loopne
sbbl
dec
cwtl
lods
jne
mov
stos
push
imul
cmp
sbb
inc
imul
pop
sbbl
pop
mov
inc
cmpsb
scas
lds
xchg
adc
jp
and
shl
jmp
daa
in
movsl
faddl
push
push
push
movsl
cmp
test
inc
std
data16
jns
pop
push
mov
mov
sbb
jo
fcmove
adc
adc
push
popw
xor
push
test
mov
cli
pop
push
jnp
or
ret
imul
dec
cs
mov
cmp
loop
adc
xchg
test
add
les
jmp
sub
cmpsb
adc
xlat
push
xor
ljmp
and
sbb
mov
stos
pop
lahf
outsl
cmp
mov
xchg
jo
cwtl
in
out
xchg
adc
and
add
adc
xchg
mov
mov
addr16
xor
lret
cld
sarl
cwtl
shll
and
push
lock
sub
xor
movsw
enter
sub
rcr
mov
or
sbb
iret
adc
pop
aad
stos
inc
fwait
data16
movsb
test
fidivl
push
mov
pop
mov
fsub
mov
addr16
add
ss
loope
pop
cmp
jmp
push
adc
adc
jp
ret
pop
dec
popa
lods
cmp
add
mov
add
mov
fwait
shrb
pop
cmp
add
test
mov
fcmovne
stc
mov
negl
sub
in
mov
imul
mov
add
mov
lcall
call
add
mov
in
and
mov
rcll
pop
or
add
aam
pop
in
mov
mov
daa
adc
addr16
aas
xchg
xchg
xor
xlat
out
add
int3
push
jbe
mov
mov
enter
aad
add
call
and
sub
mov
out
mov
xchg
daa
mov
sub
mov
push
cmc
shrb
push
or
mov
push
mov
add
out
mov
xchg
fisttpll
mov
mov
xchg
add
ds
mov
jnp
repnz
lcall
push
dec
fucomi
sub
xlat
clc
adc
in
mov
mov
add
rep
or
cmp
rorl
in
imul
cmp
imul
inc
enter
out
mov
popa
dec
cmpl
pop
xor
push
sbb
dec
xchg
dec
adc
jnp
cmp
fildll
jle
outsl
shl
xchg
loope
ljmp
inc
sub
xor
push
dec
adc
pushf
push
scas
inc
xor
dec
std
xor
movsl
adc
xchg
xchg
mov
addb
in
scas
push
or
jb
sbb
or
test
lret
call
test
jae
adc
ficomps
or
pop
push
or
lcall
call
idivl
dec
push
arpl
pushf
je
lea
inc
or
push
pop
lock
pushf
das
pop
push
jge
inc
rorb
dec
in
negb
mov
clc
jno
ret
dec
push
xchg
dec
shll
mov
mov
aaa
push
mov
pop
add
dec
push
cmp
xor
jae
in
mov
imul
imul
xchg
dec
xchg
jle
xchg
mov
lock
iret
clc
mov
push
in
outsb
jmp
mov
mov
push
pop
mov
stos
xor
jo
xor
jp
add
popa
mov
xchg
cli
aaa
xchg
mov
scas
nop
add
mov
lahf
divb
into
inc
lds
adc
andl
popa
repnz
xchg
or
loopne
xchg
sbbl
mov
faddp
je
daa
test
scas
ljmp
fisttpll
scas
int3
mov
roll
xchg
ret
sub
daa
pop
adc
mov
mov
popa
pop
mov
add
push
xor
aaa
stos
out
sarl
leave
xchg
xor
push
and
les
repz
out
outsl
mov
jmp
pop
or
inc
push
mov
adc
fiadds
imul
adc
rorb
loop
xchg
jge
test
out
test
jge
outsb
movl
push
dec
mov
stos
jno
loopne
repz
fcompl
and
int
add
aaa
jae
cmp
add
scas
das
jne
lods
push
testb
aad
imul
mov
pop
jecxz
notl
inc
lock
adc
out
outsl
push
pop
xor
xor
xchg
ljmp
fisttps
outsl
loope
jge
cmpsb
imul
popf
repz
inc
stc
fildl
insb
test
divb
lock
xlat
and
cmp
push
jbe
jns
add
in
mov
dec
adc
adc
jle
mov
lods
mov
mov
push
jp
add
imul
sub
aas
sti
sbb
cmp
pop
xor
inc
lods
mov
mov
jle
insb
xchg
gs
pop
mov
mov
mov
aas
mov
or
mov
pop
xchg
test
mov
or
adc
mov
das
sti
push
pop
pop
push
icebp
sbb
pop
jecxz
cli
or
jmp
push
icebp
dec
xchg
sub
addr16
pushf
jns
xor
and
and
sbb
movsl
cmp
jmp
bound
pop
add
mov
push
xchg
push
bnd
aam
mulb
jb
mov
mov
push
imul
adc
add
fidivrs
push
mov
xor
mov
test
adc
or
and
std
mov
in
cli
cld
in
xchg
sbb
out
sbb
mov
cmp
sarb
fsubrl
push
jge
sub
add
mov
test
jbe
mov
jae
mov
mov
ficoml
add
in
loope
dec
rolb
cs
fwait
push
adc
dec
xor
xchg
repz
pop
mov
pop
stos
cmp
out
repz
xchg
das
enter
inc
sub
stc
out
testb
jbe
push
xor
add
mov
add
push
sub
and
xchg
fistl
ds
fs
cmpb
jp
cmpsb
jnp
testb
jecxz
push
sub
out
xchg
push
hlt
jo
sub
mov
mov
out
leave
fsts
mov
adc
dec
or
shll
in
xchg
push
mov
dec
cmp
dec
cmp
inc
lret
sub
or
jb
xchg
int
iret
push
aas
test
ffree
sbb
xchg
daa
xchg
pop
mov
push
imul
adc
aam
push
mov
push
jle
or
iret
sarb
inc
push
shll
pop
pop
in
rorb
xchg
hlt
push
sub
pop
cmp
ja
mov
cwtl
adcl
jmp
push
fadds
dec
sbb
stc
add
int
pusha
out
popa
inc
add
hlt
loopnew
and
jne
adc
dec
push
cmp
outsl
xchg
aas
pop
dec
aam
and
or
push
or
popf
sbb
jo
and
fiadds
or
stos
imul
and
pop
scas
ret
jns
mov
daa
test
inc
setno
xor
cmp
mov
scas
sbb
cmp
jl
mov
movsl
push
ficompl
adc
sub
jp
dec
or
pop
arpl
pop
mov
mov
pop
ret
jmp
enter
daa
sub
mov
adcb
dec
aam
nop
fadds
shl
lret
and
stos
jne
ret
cltd
test
dec
scas
out
vpackssdw
bound
xor
sub
jg
ret
test
int
mov
pop
pop
clc
xchg
in
dec
shr
add
mov
cmp
push
sarb
ja
adc
cmp
cmp
inc
and
push
jmp
xchg
fsts
mov
xchg
enter
pop
sbb
mov
scas
ja
fildl
and
std
arpl
mov
and
inc
gs
imulb
aam
pop
cmp
mov
xchg
and
sarb
add
les
or
fcomps
mov
and
xchg
jmp
adc
inc
mov
outsb
jns
loopne
mov
testb
mov
icebp
mov
fimull
mov
bound
ds
mov
jg
cmp
xchg
sbb
repnz
in
imul
fidivrl
adc
pop
jge
enter
lods
test
pop
loopne
lods
pop
hlt
fnsave
xchg
and
push
jg
and
pop
pop
inc
and
js
clc
out
push
mov
das
les
arpl
das
cli
xchg
inc
fdivrs
inc
jae
mov
shlb
sub
mov
jmp
cld
cmp
loopne
add
int3
mov
mov
inc
cli
jnp
cmc
xchg
xchg
mov
xorl
push
ss
outsb
pop
push
pushf
xor
jge
shlb
ds
and
test
push
add
dec
mov
fidivrl
push
mov
repnz
lods
repnz
fs
xchg
gs
in
mov
jle
aas
pushf
enter
cmp
into
rcrl
movsl
adc
cmp
mov
jge
add
pop
in
lock
push
and
pop
int
in
in
or
sub
and
or
pop
loopne
inc
push
rol
testb
inc
pop
insb
ret
mov
inc
repnz
add
out
out
shrb
ss
jmp
in
call
test
scas
or
jp
ja
cmp
negb
mov
push
xor
sub
push
push
in
test
mov
xchg
aam
mov
stc
pop
addr16
xchg
fisubl
iret
fistpl
lea
cmpsl
inc
dec
scas
test
xchg
fnstsw
je
sub
loop
sub
in
sub
sbb
sbb
dec
incl
xchg
cmp
pop
mov
sbb
inc
adc
cmp
dec
sub
lods
loope
loop
or
test
mov
pmulhuw
outsb
fnstcw
push
xor
pusha
pop
push
inc
daa
repnz
push
jp
cmp
and
iret
xchg
add
pop
fs
out
dec
cmp
cld
fildl
jmp
push
xor
jne
jns
or
adc
push
mov
fwait
xchg
and
aaa
push
mov
pop
adc
jmp
mov
out
clc
mov
scas
inc
dec
fbld
leave
data16
das
js
pusha
lahf
insb
in
jge
sarl
inc
bound
icebp
sbb
fcomps
aam
mov
pop
aad
iret
xchg
pop
cmpsl
push
jb
stc
stos
cmp
bound
loop
fstl
pop
and
je
stc
mov
inc
lret
fdivrs
dec
data16
sub
shll
iret
gs
fadds
ss
out
out
push
xchg
sub
xor
jmp
sbb
adc
push
outsl
es
cmpsl
cmp
loopne
pop
fmuls
add
or
xlat
adc
xchg
sub
ret
xor
mov
pushf
fnstsw
or
aam
cmpsb
add
mov
xchg
into
movsl
inc
inc
adc
jns
adc
jl
out
xchg
ds
daa
adc
fbld
test
je
and
mov
fistps
mov
or
cmp
cmp
jge
cmp
inc
lds
pop
gs
push
mov
pusha
mov
in
xor
cld
push
cmpsb
mov
xchg
fnstcw
pop
sbb
lcall
shll
lods
mov
test
subl
bound
movsb
push
fidivrl
icebp
push
lds
inc
and
aaa
add
and
std
pop
and
fwait
insb
cld
aas
test
and
push
lret
fwait
into
je
clc
fdivr
pop
pop
sahf
xchg
adc
sbb
or
inc
dec
sbb
ja
fisubl
sahf
cmp
push
aaa
ljmp
inc
out
inc
out
add
sub
test
pop
cli
push
push
pop
outsb
or
mov
cltd
inc
adc
ficompl
shll
in
nop
maxps
negl
jmp
push
jmp
add
pop
test
mov
mov
jae
pop
and
push
rolb
push
mov
cmp
ljmp
and
add
outsl
outsl
mov
or
add
call
cltd
mov
mov
jp
sub
push
popf
das
inc
push
out
daa
les
testb
dec
pushf
testb
out
pop
xchg
push
xchg
in
icebp
movsb
stos
das
ljmp
mov
bndstx
sbb
loope
movsb
cmp
inc
xchg
cwtl
js
mov
stos
mov
pop
adc
ret
mov
fs
mov
cmpsl
imul
lock
movsb
dec
stos
insb
add
mov
jl
mov
popf
out
xor
popf
scas
push
movsl
xchg
push
out
testb
xlat
cs
fbstp
rorl
xor
cmp
pop
dec
mov
cli
imul
in
sbb
faddp
ss
jnp
add
dec
adc
fucomp
cltd
in
mov
mov
dec
lret
jmp
mov
mov
dec
aad
sbbl
scas
call
mov
pop
ret
imul
bound
xchg
or
cmp
lcall
sub
pop
aas
jg
pop
fstps
insl
test
and
jbe
gs
out
pop
jae
pushf
mov
lret
xor
nop
cmc
rorb
jb
movsb
movsb
addr16
les
jmp
or
mov
xlat
icebp
imul
push
push
popf
loopne
ret
push
mov
out
lods
mov
divb
sbbb
in
jp
jecxz
sub
sub
dec
pop
inc
or
jge
dec
arpl
sub
pop
push
mov
js
imull
add
lret
insb
inc
in
les
cmp
cmp
dec
testb
lcall
mov
dec
xlat
shlb
xlat
bound
loop
jl
aam
jbe
imul
inc
adc
pop
sahf
xor
stc
sub
jb
jbe
scas
mov
in
pop
inc
jg
ljmp
push
rclb
mov
cmpsl
and
dec
xchg
lods
push
xchg
negb
ret
gs
fwait
pop
mov
or
cmp
and
test
sti
repz
adc
loop
sbb
cmpsb
sbb
popf
xchg
inc
leave
jmp
fwait
adc
push
mov
inc
aas
dec
and
dec
jecxz
pusha
dec
aam
push
push
inc
test
aad
orl
call
push
jge
fsubr
cmpsl
push
mov
mov
imul
adc
xchg
int
sub
out
repz
repnz
mov
lcall
negl
cltd
lds
add
shlb
insl
jg
pop
xchg
mov
out
xchg
insl
xor
sub
lret
hlt
call
add
shll
aaa
xchg
add
lret
dec
xor
sub
out
cwtl
out
fwait
insl
mov
mov
and
push
fdivp
enter
out
mov
mov
je
popa
xor
mov
movsb
push
mov
icebp
sub
xor
neg
or
mov
mov
mov
inc
push
mov
out
stos
in
inc
ljmp
iret
mov
add
pop
fnsave
jns
idiv
adcb
sbb
sbb
stc
and
inc
rcl
lock
scas
dec
mov
mul
imul
xor
push
mov
or
cltd
outsb
mov
rcll
add
stos
shlb
out
mov
pop
test
mov
xchg
call
cmpsl
ds
adcb
adc
jmp
mov
mov
cmp
arpl
push
mov
and
das
mov
lock
inc
rolb
cltd
stos
insb
lret
add
jno
test
stos
test
call
shlb
and
ljmp
mov
jge
addr16
shlb
aam
push
cmp
mov
mov
lods
mov
ss
gs
mov
xor
inc
cld
das
loope
addr16
and
ds
mov
test
pop
pop
add
sub
mov
shr
xchg
sub
push
add
dec
mov
cld
popf
ret
add
xchg
popf
jg
xor
adc
inc
sbb
inc
imul
pushf
subl
add
xor
cmp
pop
ficompl
cmp
in
out
inc
test
jbe
jbe
lods
jmp
shl
popa
dec
pop
jp
lods
jmp
inc
loop
inc
test
xchg
pop
mov
mov
aam
loopne
call
adc
or
jns
pop
and
mov
add
scas
mov
or
test
sbb
xor
add
push
lock
aam
sbb
push
lcall
inc
fdivrs
pop
sbb
dec
sub
push
aam
loopne
inc
cmc
out
jae
gs
pop
roll
arpl
jbe
jbe
add
test
adc
mov
xchg
jns
sub
add
sub
in
dec
push
push
inc
jo
pop
pop
lcall
aad
enter
arpl
xchg
stc
cwtl
xchg
mov
call
lock
mov
cmpsl
adc
data16
notl
cwtl
lock
mov
popf
das
dec
xchg
sti
dec
and
jae
jl
mov
pop
pop
testb
andb
fsubrl
lods
fisubs
gs
in
loope
aaa
push
inc
add
jbe
aad
xor
ja
inc
ficomps
mov
lret
add
in
iret
cmpsb
lcall
dec
imul
cmp
imul
testl
add
jae
mov
add
xchg
xchg
popf
cmpsl
faddl
sbb
pop
mov
dec
mov
mov
push
jge
scas
xchg
mov
int3
jl
sbb
inc
pop
fidivrl
popf
xor
cmpsl
jmp
dec
mov
or
cmp
xchg
mov
xchg
pop
repnz
xchg
jno
jecxz
inc
jbe
js
imul
adc
je
imul
jo
iret
lock
push
or
xchg
dec
mov
inc
or
sarb
or
sar
sub
ljmp
dec
imul
push
sarb
mov
lock
iret
jb
add
insl
jg
out
xchg
fwait
xchg
in
xchg
dec
inc
mov
repnz
je
cmpsb
xor
sbb
into
pop
adc
ret
xor
sbb
jo
push
ret
lds
pop
jnp
sbb
and
rcrb
sub
mov
push
pop
jo
adc
stc
loopne
xor
sbb
pop
mov
add
dec
in
dec
shrl
notl
dec
pop
sub
xchg
mov
push
xchg
adcl
jg
in
fldenv
or
or
daa
or
inc
call
lahf
adcb
sub
inc
aas
adc
je
aad
cmc
ret
xor
movsb
fs
sahf
mov
xor
aas
or
fbstp
aad
jo
sub
outsl
or
pusha
cmc
pushf
repz
inc
sbbl
lahf
rorb
fdivs
push
popa
aas
inc
xchg
pop
stos
call
or
aad
lret
jae
jae
pushf
adc
jl
ljmp
popa
shl
inc
xchg
movsl
lret
add
sbb
leave
icebp
imul
dec
int3
pop
in
popa
add
or
cmp
aaa
mov
adc
mov
std
xor
rcrl
test
test
jp
xor
mov
xchg
imul
push
jo
scas
mov
mov
mov
daa
mov
rcll
les
mov
mov
fcmovbe
mov
jo
xchg
sub
jns
fidivl
aaa
or
out
repnz
ljmp
sub
jmp
dec
xchg
mov
jge
or
or
xchg
dec
sub
icebp
faddl
pop
or
lea
jb
out
xor
sar
test
leave
xor
dec
in
sbb
add
sbbb
ja
mov
pop
shr
lret
jno
out
mov
test
lea
das
xor
test
add
lcall
es
push
mov
pop
loop
std
adc
adc
call
in
jecxz
inc
fnstenv
pop
popf
js
pop
in
sbb
mov
push
jmp
push
fsubrp
xorb
xchg
lds
movsb
mov
adc
cmpsb
pop
pop
fiaddl
outsl
mov
and
mov
jbe
dec
std
int3
jb
push
jne
lcall
cmc
fwait
mov
mov
xchg
lock
inc
mov
rcrl
jbe
and
pop
test
inc
fisubrl
test
std
inc
adc
fs
test
jbe
aaa
jg
cli
pusha
push
and
test
xor
mov
or
cmpsl
adc
pop
push
push
out
imul
stos
pop
jns
mov
test
je
das
test
adc
pushf
dec
in
enter
imul
mov
stc
adc
push
aaa
inc
lock
ficoml
xchg
xor
and
inc
lret
xchg
add
and
sbbb
insb
inc
stc
pop
dec
repnz
mov
pop
mov
enter
xchg
testb
lds
push
rcrb
fwait
and
mov
pop
icebp
cmpsb
xchg
scas
and
push
cmp
mov
add
aam
test
xor
jg
jae
lcall
ret
daa
jmp
adc
pushf
lds
xchg
lock
or
lret
scas
xor
cmpsb
pop
icebp
out
imul
cmp
imul
add
cmp
ret
mov
pop
xor
pop
jo
cli
icebp
xchg
loope
xchg
sub
cs
push
aam
mov
div
xchg
and
xchg
int
into
stos
mov
icebp
out
popa
inc
jge
mov
pop
sbbl
mov
sbb
pusha
mov
out
cmpsl
cmp
mov
push
sahf
pop
addb
inc
mov
push
stos
fwait
xor
xchg
cmp
dec
jge
mov
cltd
dec
shl
sbb
fldcw
aad
ds
cs
imulb
mov
sbb
sub
push
ljmp
pop
mov
mov
mov
mov
lods
cmp
mov
push
jne
pop
push
adc
push
lcall
jge
mov
imul
mov
xchg
xor
inc
loopne
adc
inc
pop
jb
mov
sahf
adc
outsb
inc
sub
aas
xchg
xchg
call
push
cmp
push
dec
js
pop
lods
sub
inc
mov
mov
pop
sti
jb
movsl
or
sub
push
test
or
std
or
push
sbbl
pop
jecxz
add
jns
push
mov
cmpsl
xchg
ja
pusha
sti
mov
insb
ret
pop
adc
push
adc
imul
popa
xchg
add
lahf
int
inc
add
and
loope
mov
out
sti
movsl
jmp
or
int
xor
lret
sbb
incb
fs
addr16
in
jne
test
mov
lods
mov
shl
lods
inc
incl
les
and
jbe
pop
rcrb
add
add
mov
cmp
test
neg
xor
sbb
dec
test
jno
adc
inc
pop
or
repnz
pop
negl
loop
push
out
add
add
mov
fcomip
sub
sub
jae
imull
or
xchg
jg
les
xchg
pop
xor
out
pop
mov
mov
ja
fisttpll
jp
mov
pusha
xchg
mov
mov
addr16
add
rcl
out
mov
pop
pop
sub
out
xor
cmp
or
fcompl
jl
fs
pop
imul
xchg
cmp
cmp
in
or
pop
icebp
add
bound
in
sbb
in
mov
mov
xchg
add
outsl
xor
or
xchg
fstp
pop
xor
xor
fmull
addr16
mov
jmp
lods
ret
pop
add
out
sub
xchg
xchg
stos
shrl
adc
pusha
repnz
xor
icebp
pop
mov
adc
cmpsb
insb
sub
pop
and
xor
xchg
sub
das
sarl
mov
movsl
jb
pop
sub
cmp
decl
arpl
shr
repz
repz
les
mov
mov
cmc
fsub
xlat
mov
or
sub
jnp
cwtl
les
int
cmc
fimuls
in
pop
push
sub
pop
push
mov
xchg
mov
fsts
mov
lcall
das
outsb
mov
xchg
dec
pop
mov
push
iret
inc
push
fs
adc
pop
and
adc
cmp
imul
push
aas
mov
mov
inc
jmp
jle
stos
scas
mov
mov
stos
xchg
fldt
lds
cmpsb
mulb
xchg
fcoml
in
sub
sbb
jg
jnp
push
pop
cld
rolb
adc
lret
sti
das
mov
into
dec
cli
lods
insl
mov
scas
test
inc
xchg
pop
repz
pop
jp
scas
movsl
in
rolb
popa
mov
xor
cmp
push
jmp
mov
or
loopne
mov
rcl
or
popf
adc
test
in
sbb
push
loopne
push
int3
xchg
sub
jae
test
xor
xor
popa
and
ja
xor
cmpsl
xchg
xor
mov
cmp
or
negb
into
add
mov
push
js
scas
fcmove
mov
lods
orb
pop
sti
xchg
jnp
lea
shrb
icebp
push
push
rolb
and
push
sub
fnstsw
int3
mov
jp
lods
loopne
mov
clc
xchg
xor
push
cli
or
sar
cld
je
dec
mov
inc
fcmovne
inc
inc
out
bound
add
clc
push
in
in
inc
push
hlt
inc
out
std
fadds
jge
sbb
sub
inc
hlt
xor
xchg
idivb
idivb
mov
test
fwait
int
push
xor
xchg
jno
out
cmp
sbb
in
shll
int
hlt
mov
push
jl
mov
pop
push
adc
stos
cmp
shlb
sub
or
sub
lock
inc
faddl
mov
pop
je
push
xlat
mov
push
mov
mov
sbb
loop
inc
xor
jne
dec
je
pushf
push
add
shl
mov
test
aam
adc
mov
rcl
mov
jge
pop
mov
push
outsb
sub
mov
push
std
jp
mov
or
repz
lcall
lret
rsqrtps
cmpsb
cmp
and
les
inc
mov
cwtl
leave
sub
mov
xlat
jmp
or
daa
cmp
add
out
push
jae
push
xchg
clc
xchg
push
adc
pop
sarl
ror
gs
out
sbb
jbe
test
pop
stc
mov
cli
sub
pushf
popf
test
in
push
jecxz
pop
xor
cmp
fistl
xchg
out
xor
push
push
scas
push
xchg
push
push
xor
mov
das
jl
lcall
jae
add
das
xchg
add
nop
gs
or
jmp
imul
adc
sbb
movsl
test
jle
test
mov
icebp
jle
dec
pushf
lret
test
daa
orb
hlt
adc
daa
push
jg
dec
int
lcall
cwtl
gs
lret
pop
fsubrl
dec
lods
or
fdivp
and
shll
adc
aaa
out
imul
loopne
and
pop
mov
dec
sub
cmp
clc
cmp
xchg
jecxz
unpckhps
xor
mov
dec
cmp
jne
fidivrl
xlat
mov
jmp
jp
jle
rclb
mov
lods
je
inc
lods
mov
popa
cli
mov
in
xor
dec
out
jne
int3
xor
outsb
clc
push
cltd
jge
mov
stos
fwait
adc
sub
mov
jb
out
int
lds
js
cmp
shlb
lods
inc
int
imul
inc
lret
push
pop
jmp
pop
iret
shll
test
mov
fimuls
xchg
cmp
je
mov
adc
int
inc
stos
cmp
pop
push
jmp
repnz
mov
cli
out
jp
repz
mov
aaa
sub
imul
sarb
dec
and
test
and
pop
mov
movsl
and
xor
popa
push
adc
in
mov
imul
sahf
mov
popf
cmp
push
mov
mull
aaa
pop
cmpsl
mov
pop
xor
daa
in
cltd
pusha
jg
jo
adc
loope
xchg
add
loope
popa
scas
fildl
aad
jae
mov
test
mov
xor
and
pop
bndldx
cmpsl
push
jl
inc
enter
mov
mov
mov
dec
jae
fs
jl
push
sbb
shl
shrb
pushf
loope
dec
push
mov
enter
mov
cmp
fcoml
jae
adc
xor
iret
or
fildl
jg
dec
mov
in
lds
mov
jp
js
adc
stos
shlb
rcl
fiaddl
jecxz
inc
cmc
imul
pop
jecxz
inc
fisttpll
pop
cltd
addr16
fs
xchg
jle
xor
adcb
mov
in
xor
dec
sbb
xchg
movsb
jle
fucomp
pop
int3
sti
push
mov
mov
inc
push
mov
fdiv
into
fdivrs
pop
outsb
les
sbb
ljmp
shrb
cvtdq2ps
clc
xchg
fidivrl
and
outsl
adc
fcmovnbe
test
test
enter
je
jecxz
lret
or
xor
cwtl
mov
push
inc
faddl
sarb
mov
dec
movsl
jecxz
cld
lods
push
sbb
stos
lahf
imul
mov
sbb
lds
mov
and
cmp
xor
outsb
rorl
inc
inc
or
jge
in
adc
or
cld
mov
push
mov
pop
stos
push
xchg
and
notb
cmp
das
add
add
sub
push
pop
xor
scas
mov
adc
mov
cs
mov
xchg
inc
xlat
fmuls
mov
ss
ss
push
or
sbb
xor
add
je
mov
stc
sbb
xchg
sub
iret
jne
mov
sbb
arpl
push
or
sub
mov
sub
ffreep
addr16
jp
outsb
lods
and
adc
mov
test
cmp
pop
movsl
xor
in
add
pop
mov
dec
bound
in
or
loope,pt
sbb
jp
dec
popa
and
push
aas
xchg
stc
sti
xchg
or
mov
push
cltd
cmp
pushf
dec
outsl
aam
insb
and
popf
movsb
jnp
in
inc
into
xchg
jb
cltd
repnz
xchg
sbb
xor
push
inc
sti
xorb
xchg
out
sahf
pop
jb
in
aam
pop
sub
push
ss
std
into
int3
jae
shl
lods
mov
sbb
fldt
fs
ja
sarb
push
jo
mov
xor
add
lods
sub
mov
xor
cmp
mov
out
daa
movsl
out
and
lods
xchg
cmp
lea
adc
push
push
mov
xlat
and
xchg
bts
jle
stc
lcall
dec
in
xchg
push
insl
lcall
cmp
cmpl
and
mov
sub
js
int3
into
ljmp
mov
pop
cmp
stos
jp
pop
cmpsl
rorl
pop
sub
rclb
push
xor
xchg
mov
in
pop
lods
ret
gs
xor
push
popa
cmpsl
lock
js
sbb
sbb
outsl
jge
inc
fdivrl
jp
xor
add
test
adcb
or
pop
cmp
insl
jge
jo
push
ss
xor
stc
roll
mov
mov
mov
xchg
shrl
fbstp
repz
inc
fidivrs
lret
xor
lea
and
cs
and
jg
mov
add
test
sub
lods
inc
mov
icebp
cmpsl
jp
repnz
stos
stos
pop
in
xchg
push
sub
les
mov
stos
idivl
or
cmp
cmpsb
clc
xchg
cmp
push
hlt
push
gs
shrb
xlat
sbb
mov
and
mov
or
aaa
pop
and
xor
or
push
rolb
sub
mov
mov
inc
fcomps
pop
sbbl
dec
shll
jnp
jecxz
and
adc
fidivs
mov
dec
jmp
adc
xchg
arpl
inc
data16
fnstsw
sub
cmp
mov
cmpsl
mov
push
and
call
cmpsl
test
test
cmp
mov
adc
sbbb
jecxz
sbb
sub
pop
mov
adc
rolb
lock
outsl
mov
mov
out
push
rolb
sbb
mov
imul
int
cs
xchg
sub
fists
push
in
fists
push
or
pop
mov
mov
aaa
ror
add
xchg
mov
outsl
pop
fs
rorb
scas
jp
and
fxch
in
mov
aam
mov
test
mov
jmp
shll
repz
sub
push
jb
dec
sbb
ret
jecxz
out
add
jmp
dec
int
std
cmp
gs
test
inc
xor
mov
pusha
repnz
xchg
xchg
mov
sub
inc
lods
mov
fildll
inc
push
and
lea
movsl
or
adc
lds
xchg
push
pop
fsubr
mov
jge
add
repz
cmp
xor
cmpsb
cmp
mov
mov
pop
pop
sarb
push
aas
test
xor
test
ss
mov
fwait
jne
rolb
push
cltd
sahf
clc
xchg
adc
scas
icebp
cli
dec
cmpsb
dec
pop
fcmovnb
sti
xchg
stc
jmp
and
mov
clc
xchg
stc
shr
xchg
or
xor
or
lret
pop
nop
push
fistpll
sbb
icebp
sbbb
aas
and
in
adcb
out
inc
push
pop
call
adcb
into
dec
fcomi
xor
xchg
dec
pop
and
insb
pop
ljmp
push
push
gs
adc
fidivrs
xchg
lcall
pop
out
add
not
js
nop
sub
dec
sub
es
test
sbb
cmp
int3
inc
mov
or
lret
jle
or
bnd
push
in
jg
mov
mov
xor
dec
sbb
jb
sub
fs
cmp
repnz
pop
mov
cs
popl
mov
mov
fnstenv
inc
test
mov
xchg
cmp
sub
mov
outsb
cs
insb
push
insl
mov
in
and
mov
mov
adc
mov
test
int
or
and
and
pushf
mov
in
and
in
fisubrl
cltd
mov
inc
dec
popa
fcompl
outsb
add
push
sbb
pop
dec
mov
pop
aaa
data16
mov
mov
dec
pop
in
in
fistpll
aam
sbb
inc
fnstenv
fsubs
mov
jbe
push
js
out
or
xchg
and
ret
push
int3
jg
add
mov
stos
jnp
icebp
inc
push
icebp
fsubl
and
int3
daa
ds
lods
inc
xor
push
lret
cmp
movsb
cltd
iret
pop
dec
int3
ss
outsl
fldcw
sti
pop
mov
xor
jmp
sbb
sbbl
data16
mov
cmp
je
or
in
inc
sbb
mov
test
xchg
add
cltd
xchg
lea
test
xchg
dec
or
aad
push
call
push
test
lret
xchg
push
sahf
and
fbstp
es
sarb
mov
jbe
mov
vcvttps2dq
jo
sbb
fwait
outsl
sbb
testl
inc
stos
fs
insl
jp
lahf
jl
fidivs
inc
fdivrp
ja
loop
fldenv
test
mov
sub
test
dec
pop
cmp
push
mov
xchg
mov
xor
imul
pop
dec
loop
loope
fcomip
mov
arpl
cli
dec
test
or
cmp
pop
pop
fs
cs
cmp
add
dec
fcompl
or
scas
aas
sarb
cmpl
pusha
mov
xchg
inc
pop
out
imul
in
das
cmp
and
add
lea
xor
adc
into
mov
xchg
dec
test
dec
nop
movsl
nop
push
mov
fnstenv
orb
adc
js
aas
mov
sbb
jge
xor
jecxz
or
inc
sbb
dec
icebp
sahf
ja
cmp
movsb
fcomi
fsubl
cmpsb
xor
pop
loopne
lret
mov
stc
enter
movsl
dec
cmp
ja
fsubrs
push
test
mov
sti
in
data16
pop
dec
testl
lea
adc
mov
mov
dec
cltd
push
and
push
gs
loopne
push
pop
repz
ss
stos
scas
mov
punpckhdq
insl
jge
add
outsl
sbb
push
mov
popf
pop
es
into
shlb
aas
data16
div
mov
testl
inc
push
aam
mov
cmp
pop
push
adc
pop
inc
ss
clc
mov
popa
mov
lahf
push
or
roll
and
imul
icebp
rdpmc
sbb
popa
cmp
ljmp
add
mov
pop
add
push
xor
and
mov
ja
push
sarl
in
out
hlt
insb
and
jns
stos
sub
adc
popf
mov
in
out
frstor
adc
or
push
insl
sti
xchg
xchg
lea
mov
and
aam
jl
mov
sarb
push
sahf
adc
push
sub
mov
jo
cmp
or
pop
adc
aas
add
xchg
sar
jle
sub
pop
push
pop
repnz
stc
aam
sub
jp
sbb
insb
cmp
sahf
sbb
pop
repnz
rol
fidivrl
in
xor
sub
sbb
loop
push
hlt
inc
mov
ficomps
pop
mov
mov
adc
mov
leave
fs
mov
add
sub
mov
cmpsb
imul
pop
push
inc
scas
stos
mov
or
xchg
cmp
imul
stos
cmpb
sbb
push
popf
xchg
dec
adc
std
xchg
xchg
scas
mov
sub
lea
push
in
jle
fisttpl
imul
or
out
sub
cmp
test
in
mov
lock
cs
or
jae
mov
cmp
pop
pop
repz
jl
xchg
mov
jb
sahf
pop
les
inc
loop
mov
jle
sahf
cmc
imul
in
xor
xchg
movsb
lock
xchg
aas
out
pop
sbb
lahf
cmp
test
test
mov
mov
and
inc
arpl
inc
pand
pop
push
sub
out
cld
jnp
inc
fsubs
notl
test
and
mov
xchg
add
sbb
scas
lea
lret
nop
dec
and
inc
andb
push
mov
ds
into
xor
std
jne
push
xchg
mov
arpl
jne
xor
pop
scas
add
pop
out
bound
lods
push
adc
es
xchg
fdivs
ds
das
mov
nop
into
pop
nop
out
mov
cs
sbb
adc
fisttpll
push
daa
dec
mov
das
insb
dec
fwait
insl
xchg
insl
xchg
mov
shrb
mov
jge
clc
sub
rcrb
fadds
and
mov
iret
out
cmpsl
sbbb
scas
cmp
jbe
add
xchg
test
fists
je
adc
inc
pop
ret
loope
xchg
and
push
clc
lcall
fnstsw
xchg
into
out
mov
adc
and
test
pop
leave
fcompl
pop
lahf
pusha
push
fstps
divb
je
cs
js
rol
adc
add
adc
inc
push
stos
jl
test
mov
mov
and
sbb
arpl
jnp
mov
push
jecxz
js
test
popf
xor
fstpl
sub
sub
inc
or
fists
sbb
lret
bound
fstpt
add
mov
flds
shlb
sbb
push
mov
enter
loop
loop
fcom
aad
xchg
sar
cmpsl
dec
ss
outsl
das
pop
shl
jns
ljmp
fsubp
movsb
mov
les
pushf
push
into
loop
lcall
popa
mov
cmp
hlt
out
xchg
rorb
jl
adc
popl
call
and
cli
roll
push
mov
mov
repnz
or
lret
out
and
mov
or
push
pop
jbe
mov
call
int
jmp
push
lret
mov
or
jecxz
sbb
mov
sarb
shrb
scas
hlt
movsb
je
jbe
jl
add
adc
adc
inc
xor
add
xchg
mov
rcrl
icebp
clc
mov
inc
aam
les
pop
mov
into
jae
lea
jp
aam
cmc
add
lret
pop
sbb
test
jnp
addr16
sbb
mov
in
dec
pop
or
mov
neg
cmp
adcl
test
into
inc
inc
xor
push
je
inc
push
push
add
push
cmp
jmp
test
sub
insb
xchg
mov
enter
and
sub
xor
mov
push
pop
sti
mov
pop
xchg
dec
dec
cmp
jecxz
cmp
and
sub
dec
adc
dec
pop
mov
es
and
push
mov
in
adcb
cmp
adc
mov
roll
mov
out
jge
outsb
gs
mov
xchg
movsb
mov
sbb
rcll
pop
repnz
shrb
jns
testl
fidivs
test
mov
ret
testl
push
test
push
test
add
lret
leave
fdivs
jb
mov
enter
gs
and
and
lock
jl
lds
dec
enter
cld
stos
or
inc
andb
movl
test
imul
mov
cmp
std
xchg
xchg
out
stos
fdivrs
inc
mov
je
aad
or
out
popf
mov
xor
and
or
lret
push
lods
jae
lahf
hlt
dec
mov
xchg
mov
push
push
xchg
ss
popf
or
cmp
pop
inc
pusha
xchg
lret
pop
mov
addr16
push
and
push
jmp
sti
mov
adc
loop
loop
xor
push
pusha
testl
hlt
fists
cmpsb
dec
or
jnp
jecxz
add
bound
jns
ss
repnz
sub
inc
lock
and
out
jae
or
insb
xchg
iret
data16
jmp
dec
cmp
lea
mov
add
jbe
add
inc
xor
mull
pop
fistpl
jmp
push
sub
sbb
cmc
add
outsl
push
movsb
push
popf
imul
cld
pop
test
and
jg
jnp
out
insb
pop
pop
setp
mov
dec
cmp
loopne
xor
jbe
dec
fcomip
or
outsl
push
ljmp
insl
enter
out
arpl
xchg
fwait
add
lock
fbld
jg
dec
fldl
jmp
stos
jmp
sub
test
out
xchg
leave
je
aam
pop
call
jns
fldt
in
movaps
pop
pop
push
xor
jnp
pop
lods
fs
dec
push
dec
loop
inc
mov
subb
mov
sub
insb
ret
outsb
shr
repz
jmp
xlat
test
call
sub
xchg
inc
cs
fwait
jmp
gs
dec
ss
in
push
mov
lods
movsb
fwait
repnz
rorl
popf
xchg
cmp
in
mov
mov
mov
cmp
inc
fistps
fidivl
faddl
daa
stos
popa
sbbb
jns
cmc
movsb
fsubl
ss
push
xor
aaa
mov
cmp
mov
gs
lahf
push
sti
pop
or
aad
es
mov
adc
test
jge
int3
inc
mull
or
outsl
sbb
mov
ds
mov
add
sbb
sbb
cwtl
outsb
or
cli
jbe
mov
cmpsb
add
xorb
mov
dec
xchg
jp
push
and
xchg
movsl
jge
loope
mov
rol
test
mov
test
sbb
sub
xchg
xor
cmpsl
xor
xor
sar
sub
jne
cltd
arpl
dec
cmpsl
adc
push
fs
lret
jl
mul
lods
ljmp
pop
cmpsb
cltd
jbe
sarb
mov
or
cmp
pop
rcll
jp
mov
adc
sub
jno
push
hlt
mov
ds
mov
cmpsl
mov
jno
lret
adc
call
pop
shlb
adc
fisubs
into
cmp
bound
add
arpl
and
jmp
mov
sub
sbb
cmc
lcall
and
mov
lret
fwait
jno
push
inc
data16
movl
pusha
sbb
mov
xlat
cld
push
pop
mov
fwait
or
xchg
sbb
pop
clc
mov
cmpb
inc
aas
call
into
enter
int
scas
mov
je
dec
or
bound
iret
or
popa
adc
test
pop
dec
stos
or
loopne
inc
pop
fists
jne
cmp
stos
push
jge
sbb
pop
pusha
addr16
test
mov
aam
sub
jnp
scas
arpl
adc
push
inc
mov
mov
pop
push
push
xchg
sub
in
cmp
lds
xchg
int
push
mov
sbb
jle
sub
pop
cmpsb
out
cmp
mov
push
stos
inc
push
xchg
mov
xor
nop
adcl
andb
mov
jmp
ljmp
pop
push
mov
mov
sbbb
aas
repz
dec
push
mov
or
cmp
cmp
insb
rorl
daa
std
sub
stc
enter
popa
inc
ret
cmp
fadds
popf
adc
mov
push
lret
adc
fwait
inc
in
xchg
loop,pn
mov
mov
addl
jbe
cwtl
repz
cltd
xor
scas
fs
lods
add
inc
mov
xlat
cltd
push
std
pop
xchg
mov
mov
insl
pop
popf
inc
fxch
jnp
mov
pop
insl
sub
sbb
enter
mov
mov
cmp
subb
scas
ret
lahf
ss
mov
mov
rcrb
dec
mov
or
insl
jo
in
adcl
or
les
xchg
jae
adc
imul
cmp
mov
sbb
pop
hlt
dec
jecxz
mov
add
push
aas
dec
inc
xor
push
je
shrb
mov
or
mov
in
jl
xchg
insl
rorb
pop
inc
jg
jl
xor
or
sbbl
hlt
adc
stc
xchg
xchg
cmpsl
pop
mov
imul
jp
ss
movsb
or
lret
inc
imul
xor
dec
mov
mov
inc
fisubs
jge
xchg
aam
inc
cmpsl
and
pop
fwait
add
and
loope
mov
std
dec
aaa
das
sbb
pop
sbb
sbb
iret
aaa
xlat
daa
bound
lret
test
jg
inc
sbb
push
dec
push
arpl
or
push
rorl
adc
icebp
jge
lds
inc
dec
mov
sbb
inc
hlt
lret
icebp
inc
push
pop
push
aas
pushl
mov
call
jne
mov
imul
mov
leave
scas
lret
xlat
fucomip
pop
cmp
sbb
aad
add
shr
flds
out
bound
fildll
ret
test
lock
xchg
jnp
adcl
pop
call
push
adc
mov
inc
add
fmull
popf
or
loope
pop
push
inc
mov
mov
mov
icebp
filds
sub
sbb
dec
cmp
xchg
push
ret
jecxz
pusha
adc
mov
movsl
shl
into
mov
add
mov
test
scas
jb
mov
fmull
mov
pop
pop
data16
pop
mov
lret
lret
in
test
sbb
leave
sub
repnz
push
pushw
lods
fildl
movhps
mov
adc
gs
jb
loopne
push
cli
mov
pop
xlat
call
jmp
xchg
sbb
xchg
and
add
mov
and
sub
cmp
inc
repnz
xor
jae
scas
mov
enter
adc
add
je
or
xchg
sub
les
sub
mov
testl
outsl
lret
mov
jmp
push
dec
lds
imul
push
sub
cmpsl
jbe
popf
test
andb
mov
test
dec
cmpsb
daa
dec
fdivrs
popl
pop
insl
mov
mov
dec
push
xchg
push
in
aad
mov
mov
pop
les
imul
pop
data16
insb
cwtl
cmp
jb
adc
add
pop
aam
dec
movb
mov
test
xchg
push
or
lock
jnp
mov
sbb
leave
imul
dec
add
clc
push
xchg
in
idivb
mov
cmp
test
xorl
jmp
cmp
iret
cmp
inc
daa
sub
and
sbb
orb
mov
and
push
xchg
imulb
jne
lods
rorb
dec
repnz
push
cmp
mov
and
arpl
pop
jne
addl
dec
fnstenv
repnz
cs
mov
les
test
cli
mov
sbbl
rorl
sub
pop
loopne
inc
adc
sbb
add
ret
pop
jl
into
adc
popf
loopne
into
fdivrs
test
cli
pushf
dec
inc
add
mov
ljmp
ljmp
mov
cmp
cmp
leave
fwait
les
popf
jecxz
xchg
mov
adc
xor
aas
push
lock
jmp
dec
out
mov
jb
cmc
add
mov
fnstcw
mov
pop
ljmp
jecxz
xchg
jmp
cmp
outsl
sbb
insl
enter
push
cmp
mov
repz
ds
cmp
shr
push
ljmp
jb
xor
scas
cmpsl
jge
fxch
adc
pusha
ret
mov
jno
adc
pop
sbb
jg
sub
fidivrl
jge
jg
push
mov
lods
sbb
fnstcw
out
enter
mov
sti
xchg
mov
insb
popa
xor
cmp
add
mov
into
mov
fsts
mov
cmc
mov
adc
xchg
sub
lret
pop
mov
cwtl
jge
aam
or
movsb
repnz
mov
xchg
sub
xchg
pushf
scas
repnz
sbb
pop
mov
hlt
jb
fnstcw
dec
cmpsb
lret
xchg
adc
dec
loope
cmp
addr16
lds
int
hlt
shl
out
push
stos
mov
sub
dec
add
add
fisubl
xchg
pop
fidivrl
jecxz
ret
sbb
movsb
repnz
cmp
pop
xchg
xchg
int
mov
loop
js
adc
add
and
fnstcw
outsb
daa
or
shl
mov
outsl
div
scas
sbb
sti
jns
or
sbb
out
pop
cmp
cmp
xchg
outsl
sbbl
xchg
mov
push
jecxz
sub
mov
jo
ja
inc
cs
push
repnz
xor
lock
inc
in
add
cmp
pop
xor
pop
mov
js
add
mov
cld
push
push
imul
imul
test
xchg
dec
pop
push
mov
sbb
sub
jne
and
enter
push
and
push
out
mov
xor
gs
cltd
or
lds
mov
pop
aam
inc
in
push
mov
mov
shlb
mov
nop
cmpsb
adc
lods
das
fdivrp
out
imul
shr
loope
mov
jo
pop
fcoms
dec
bound
mov
inc
mov
adc
filds
sbb
addl
mov
fisttps
sti
or
sbb
sbb
test
fcomps
lcall
and
cs
or
jl
es
popf
jmp
or
cmp
mov
shlb
xchg
cmp
mov
cmp
mov
sbb
and
daa
add
outsb
xchg
sbb
adc
cltd
mul
xchg
mov
sub
dec
sbb
push
out
testb
rclb
jbe
dec
dec
fidivl
loop
stos
dec
sbb
xchg
int3
sub
in
cltd
jne
std
xchg
sub
sbb
mov
mov
js
popa
addb
outsb
sub
lods
pusha
arpl
adc
mov
fisubl
sahf
aas
pusha
fdivl
jb
pop
jmp
xor
add
and
inc
adc
jb
inc
std
pop
sbb
lret
sub
in
cmp
push
jno
mov
jno
idivl
jg
pop
ljmp
jbe
ret
cltd
xor
loope
fdivl
push
add
mov
ret
sarb
cltd
and
daa
lock
and
mov
xchg
lret
iret
xor
cltd
pop
sbb
lods
decb
cmpsb
stos
dec
scas
xor
sub
fidivrs
push
arpl
push
ret
out
icebp
mov
pushf
lods
xchg
fbld
test
cld
xchg
push
lret
or
push
pop
sub
sahf
jg
icebp
mov
pop
dec
adc
mov
sbbb
xchg
inc
rcrb
out
pop
bound
xchg
rcl
arpl
sub
or
inc
xchg
dec
cli
xchg
jg
dec
xchg
mov
sbb
pop
ficompl
sub
lds
adc
mov
or
mov
mov
sub
pop
popf
push
ret
orl
pop
imul
push
inc
outsl
pop
and
stc
push
sub
cwtl
add
sub
pop
cmpsb
sub
cmp
jne
iret
out
lock
adc
or
insl
cmp
inc
mov
mov
dec
dec
fldl
ja
jne
push
fcomps
aam
rclb
add
jo
fsubl
or
add
jge
sahf
movsl
icebp
jle
sbb
rcrb
add
mov
push
out
dec
dec
sbb
cli
cmp
ljmp
adc
test
nop
push
dec
inc
loopne
ja
add
push
or
fs
lods
inc
jo
jmp
cwtl
mov
xor
mov
inc
lods
xchg
add
divb
sub
xchg
add
iret
pop
fidivl
data16
addb
mov
lock
jp
lret
rcll
sub
adc
rcll
pop
fdivrs
xorb
fstpt
pop
pop
in
cltd
jnp
sub
popf
and
add
push
xor
repz
jno
mov
mov
mov
std
mov
ret
inc
fcomi
into
xor
dec
adc
sbb
or
inc
gs
xor
dec
fcoml
cmp
loop
stc
or
jns
iret
jnp
movsb
add
sahf
andl
push
cltd
push
sbb
mov
les
xor
push
jne
mov
pop
fisubrl
imul
push
test
adc
aaa
or
jle
shrl
enter
js
cmpb
ret
push
and
ljmp
inc
fnstcw
popf
jge
or
jb
adc
and
push
mov
xor
jae
lret
mov
rcll
sub
ret
pop
aaa
sub
clc
addl
pushf
mov
mov
scas
add
sbb
imul
add
inc
xchg
lock
pusha
dec
je
lods
adc
arpl
je
out
cli
popf
fwait
xor
es
jb
shlb
arpl
mov
out
xchg
xor
adc
cvtpi2ps
adc
mull
movsb
cs
add
mov
xchg
mov
xchg
pop
mov
lahf
daa
sub
mov
push
fwait
sbb
pusha
add
xor
jl
mov
fldcw
aam
loop
inc
bound
sub
cwtl
into
rcrb
cmp
stos
push
mov
inc
pop
lock
jo
xchg
pop
sub
imul
movsb
mov
xor
push
jecxz
sbb
shlb
mov
sub
jecxz
xor
in
icebp
mov
push
and
push
adc
outsl
mov
stc
push
push
addb
pusha
mov
fld1
xorb
pop
outsb
ss
arpl
adc
sbb
cmp
jecxz
in
mov
cmp
stc
imul
pop
daa
and
adc
and
sti
xchg
xchg
sub
pop
mov
fbld
jp
ds
mov
aas
out
shl
les
test
out
hlt
sbb
das
push
iret
cli
sti
jbe
push
lea
mov
scas
inc
and
lahf
push
xchg
sub
push
call
pop
push
adc
jge
rcll
push
xchg
inc
sbb
lcall
xor
pop
inc
fmuls
out
fidivrl
gs
addr16
stos
xchg
sbb
rep
enter
push
adc
dec
icebp
or
sbb
iret
lods
ds
dec
pusha
jge
dec
loopne
inc
adc
and
xchg
dec
cltd
in
or
xchg
sub
addr16
je
sub
adc
icebp
ss
cli
mov
nop
out
clc
mov
mov
push
ret
insl
fidivrl
pop
lock
mov
bound
ss
push
clc
lret
int3
aaa
bound
mov
stos
jne
rorl
mov
cltd
mov
and
adc
push
test
ret
pop
adc
cmp
nop
fnsave
push
or
inc
gs
push
arpl
jle
out
push
lret
popa
inc
jmp
sbb
call
cld
cmp
popf
jmp
jp
fmul
jb
sbb
dec
push
shlb
loop
in
dec
jg
ds
dec
pop
cltd
jns
mov
hlt
adc
add
push
in
and
lcall
adcb
test
pushf
xor
movsl
mov
mov
xchg
mov
pop
jns
xchg
stos
jge
fsubl
xchg
xchg
js
xor
jbe
insb
xor
out
push
in
ret
insl
cli
addr16
lcall
add
lds
mov
lahf
inc
push
sbb
sarb
jns
xchg
mov
sbb
repz
loopne
sahf
jnp
shlb
mov
cmc
mov
pusha
add
mov
or
mov
andl
or
pop
adc
movsl
xchg
sub
lock
jbe
inc
cltd
std
out
in
xor
out
mov
and
andb
sub
push
push
sub
pop
out
sbbb
aam
inc
sbb
adc
cmp
popf
jge
pop
mov
sub
dec
cwtl
cmc
adc
mov
decb
sub
xor
rcr
sub
jno
dec
pop
and
enter
pop
in
adc
xchg
test
loope
mov
jns
aaa
daa
dec
adc
xchg
xchg
arpl
ss
mov
les
out
adc
sbb
lret
xor
dec
and
out
negl
mov
bound
int
push
pop
stos
out
jle
or
lahf
lahf
lock
loopne
data16
add
popa
inc
sahf
test
inc
addr16
ljmp
sbb
adc
jecxz
push
ss
adc
xor
mov
cwtl
pushf
xchg
inc
jb
test
mov
ret
push
jns
bound
sbb
shl
add
xchg
sub
inc
inc
int3
fdivl
push
and
aam
call
lds
sub
bound
push
push
mov
loopne
jp
out
arpl
sub
aad
xor
fucomi
enter
adc
daa
dec
mov
xor
in
repz
adc
jmp
dec
and
lcall
xchg
daa
jae
inc
fdivs
xlat
decl
push
leave
jae
fxch
insl
repz
in
mov
sbb
xlat
jp
data16
inc
mull
lret
test
addr16
or
leave
cmpsl
and
pop
xchg
jae
pop
outsb
mov
lods
xlat
adc
sub
ret
ret
mov
cmp
sti
into
sub
mov
sbb
inc
jl
mov
cld
mov
fldl
inc
inc
jno
scas
icebp
inc
pop
mov
adc
xor
scas
cli
sti
scas
pop
add
jg
sti
sti
test
lret
int
jp
mov
fdivrl
xor
jle
lods
jg
icebp
jbe
mov
sub
push
jo
xchg
hlt
out
fisubs
xor
imul
mov
add
outsl
pop
mov
icebp
insl
negl
xor
push
xor
jmp
sbb
xor
repnz
jne
in
xlat
adc
sub
repnz
repz
pop
adc
jmp
jge
outsb
cs
xor
notl
xor
mov
das
mov
xlat
jmp
fcoms
cltd
in
ja
out
push
fucomip
push
sub
dec
fsubs
lock
xor
push
sub
imulb
popf
call
in
dec
pop
decl
mov
insl
cld
fwait
add
imul
lcall
int
lret
lret
out
mov
and
gs
cmc
mov
scas
pop
in
orl
or
jns
pop
ljmp
jb
popf
in
ss
push
jnp
loop
mov
jno
daa
xor
mov
mov
jge
pushf
nopl
mov
outsl
not
cwtl
sbb
ljmp
dec
mov
test
pop
fidivl
or
divb
lcall
sahf
mov
xchg
sub
pop
ja
dec
test
movl
jmp
mov
cmpl
cmp
adc
cwtl
mov
jns
xor
mov
shrb
xchg
ss
push
jo
jmp
pop
test
or
std
incb
loopne
sahf
jbe
jmp
lock
jno
call
into
sub
inc
adc
xchg
xchg
push
aas
or
cmpsb
cmp
sub
adc
rcrb
rorb
mov
and
loop
pop
inc
and
mov
push
lret
jae
jmp
or
movsl
sbb
les
clc
sahf
in
or
std
cli
aam
fiaddl
in
jns
sbb
xor
daa
rcrl
test
mov
xchg
jge
mov
enter
sub
arpl
sbb
push
jmp
mov
mov
adc
and
in
nop
daa
sbb
mov
clc
int3
repnz
cmp
xor
daa
push
ret
sbb
fiaddl
ret
pop
ja
xchg
mov
fcomip
push
inc
add
loope
mov
enter
lret
adc
jle
shll
push
fs
fidivl
xchg
xchg
and
fsubr
sbb
mov
rcrb
cltd
cmp
inc
popf
mov
pop
fwait
pop
cmpsb
inc
push
and
inc
inc
test
or
or
aam
popa
orb
mov
pop
mov
out
or
mov
sub
repnz
adcl
mov
jae
shrb
lock
mov
in
xchg
jbe
out
and
popf
int
mov
push
out
loopne
dec
jno
sub
imul
pop
mov
or
inc
mov
xor
mov
adc
jae
call
jae
int3
push
movsl
gs
cmp
fwait
inc
jmp
mov
cmpsl
cmpsb
scas
adcb
cs
roll
jle
add
mov
insb
int3
jg
add
or
shrl
outsb
daa
push
push
int
sub
iret
lahf
loope
jo
cs
dec
jno
mov
dec
iret
loope
lcall
pop
sub
inc
sub
jne
jg
cs
pop
out
jb
inc
mov
popf
incb
cwtl
das
mov
cli
xchg
jbe
dec
add
mov
inc
pusha
stos
cmpsb
adc
jno
push
mov
sbb
das
es
int3
mov
push
cmp
xorb
icebp
fs
dec
adc
pop
negb
je
pop
into
sub
int
out
sahf
dec
test
inc
daa
stc
mov
data16
rol
test
inc
arpl
aam
cmp
jo
andl
loop
inc
rolb
cmp
fisttps
jl
mov
rcr
adc
movsl
jo
and
jbe
mov
cmpsb
or
mov
rcrb
sbb
sahf
cltd
push
out
rolb
in
sub
js
xchg
jae
out
js
cmc
les
adc
std
mov
mov
mov
add
sub
xchg
in
adcl
or
jb
push
out
mov
jbe
xor
jne
push
push
adc
ret
fildl
pop
adc
loope
adc
sbb
addr16
cmp
sub
push
cmp
ds
gs
js
mov
mov
test
test
clc
rorb
jge
shrl
stos
aam
inc
push
int
insl
filds
mov
mov
mov
jl
push
int
push
xor
movsb
je
adc
les
adc
add
sti
or
push
loopne
out
lods
in
xchg
ljmp
mov
std
fisubrl
std
fstl
loopne
jae
sbb
push
stc
or
leave
icebp
jnp
je
fwait
dec
loope
lahf
xchg
xor
arpl
pusha
mov
xchg
sub
cltd
sub
test
and
cmp
jo
pop
mov
aas
or
mov
loopne
insb
adc
repz
rolb
cmpsl
loop
push
xor
js
sub
or
pop
rcrl
mov
lret
cwtl
ret
push
dec
sub
jns
outsb
jl
adc
mov
cmp
movsl
lods
push
cs
out
or
mov
jmp
push
add
xchg
dec
negb
in
int
sti
dec
xchg
pop
lds
xor
or
xchg
je
outsb
gs
movsl
add
aam
sahf
mov
orl
lcall
adc
pop
gs
imul
inc
or
mov
xor
or
out
cmp
sbb
ds
mov
sbb
jecxz
mov
ja
fcmovu
inc
or
fisubrl
loop
mov
jbe
jmp
pop
pop
shl
popa
lods
add
lods
push
pusha
aaa
mov
mov
out
ja
scas
lods
sub
dec
jne
xor
pusha
dec
sbb
das
popf
push
inc
or
dec
mov
repnz
push
cmpl
repz
mov
sub
cli
ljmp
sbb
xchg
xchg
mov
sti
cmpsl
sbb
stos
inc
cwtl
push
add
decb
jns
dec
imul
jae
mov
adc
dec
aaa
mov
jne
loop
pop
mov
mov
int
mov
pop
pop
cmp
dec
int3
dec
daa
jnp
jae
cltd
pushf
scas
and
stos
inc
andl
daa
lods
add
fisubrs
int3
cmp
push
popf
loopne
fbstp
push
stc
adc
dec
dec
mov
sbb
lret
cs
mov
pop
mov
js
jbe
and
jnp
cmp
push
popf
sub
cld
xchg
out
dec
and
dec
stos
pop
test
jne
arpl
mov
xlat
arpl
decb
cmp
pop
mov
pop
aam
cmpb
pop
int3
cmp
pushf
dec
xchg
push
pop
lahf
ss
jbe
sbb
mov
and
inc
lea
push
mov
sub
fidivs
ret
inc
mov
dec
mov
loope
jg
popf
cmp
call
cmp
or
insl
lret
push
aas
push
lea
cmpsl
bound
mov
int
mov
push
repz
enter
out
mov
sbb
leave
xor
jnp
aaa
xchg
push
sub
int3
jg
in
inc
push
xor
and
data16
cli
arpl
cmc
or
cmp
mull
andb
sbb
sbb
stc
and
push
push
jmp
ja
add
cmp
cmp
sbb
loope
bound
jb
scas
sbb
push
mov
mov
dec
mov
test
xchg
inc
das
jecxz
mov
mov
and
push
jecxz
movsl
mov
test
add
scas
dec
movsb
jbe
divl
xchg
mov
jo
cmpsl
sbb
mov
inc
inc
sbb
cmp
in
jns
and
xor
fs
pop
sub
pop
imul
dec
adc
mov
clc
xchg
dec
adc
sti
jns
jg
mov
sub
jne
fsubrs
fmuls
sub
aas
adc
fsub
popl
cli
lea
jl
jp
cmp
mov
mov
aad
push
rol
in
test
dec
jecxz
mov
sub
mov
fisubrs
and
jmp
sbb
sti
dec
mov
sbb
inc
jge
xor
int3
cmp
mov
jle
push
xchg
rcrl
jp
lock
push
mov
insl
adc
dec
inc
and
sahf
or
clc
add
and
jecxz
pop
cvttps2pi
sbb
push
int3
fldl2t
int3
sahf
xor
dec
xchg
push
adc
inc
ja
js
lcall
add
pop
lahf
aad
xchg
push
add
je
pop
pop
adc
inc
push
jo
inc
out
sub
xchg
xor
sbb
in
out
daa
push
nop
jnp
ret
jne
hlt
xchg
push
int3
lds
xchg
dec
cmc
jmp
xor
icebp
mov
xchg
inc
fcom
mov
mov
adc
outsl
cmp
xor
sub
mov
push
mov
out
subb
out
aam
stc
xchg
mov
pop
sub
jge
jp
pop
sub
decl
mov
fdiv
cmp
xchg
dec
add
xor
or
cmc
addr16
xor
test
xchg
fwait
inc
dec
push
jne
sub
jnp
les
mov
adc
pop
jo
cli
leave
lea
ret
push
xlat
out
loop
inc
jne
xchg
jp
add
add
outsl
ret
mov
in
pop
sbb
mov
cltd
add
cmc
dec
pop
ret
inc
lods
pop
jnp
dec
fildl
inc
lcall
xchg
insb
inc
sbb
xor
ds
xchg
mov
cmc
inc
dec
push
mov
rorb
sbb
js
pop
mov
and
cmp
pop
pop
sbb
dec
add
aam
sti
pop
bound
inc
pop
fnstenv
fnstenv
loop
fs
sbb
in
add
dec
and
ret
insl
scas
push
in
pop
sub
gs
sub
pusha
pop
cmp
cmp
sub
scas
or
xchg
xchg
mov
sti
jecxz
mov
sahf
outsb
in
push
cld
cmp
mov
in
sbb
test
ja
outsb
sarl
xor
out
aam
adc
rcrb
pusha
pop
subl
inc
jns
int
jno
inc
and
dec
cmp
fwait
cs
movsl
orl
dec
fbld
fidivrs
xchg
mov
hlt
shlb
leave
add
fwait
jbe
xchg
ja
and
xchg
cmp
ret
add
jo
inc
push
push
andb
xchg
mov
and
xchg
cmp
mov
outsb
jp
sbb
jnp
mov
pop
lea
loopne
inc
cmp
ja
cmpsl
sub
lahf
add
icebp
cmp
mov
xorl
xchg
add
sub
and
push
into
push
clc
cmp
push
leave
lahf
or
ret
nop
push
push
clc
dec
mov
addl
in
sub
stos
xor
add
inc
adc
lcall
inc
mov
nop
lock
mov
nop
pop
jecxz
add
mov
ret
pop
call
xchg
and
jne
fisubl
lret
mov
fwait
or
dec
fwait
sbb
mov
xor
stc
cmp
jns
sbb
aaa
push
lahf
addr16
push
les
jo
mov
outsl
addr16
xchg
sbb
xchg
jnp
push
call
lret
push
ljmp
dec
or
mov
mov
and
in
adc
mov
jnp
mov
sub
iret
je
pop
test
cs
jle
aad
pushf
xor
jbe
sbb
js
mov
mov
cli
xor
clc
mov
lock
push
cmp
jmp
xchg
mov
lods
and
sar
call
cmp
lcall
jmp
fcomps
in
push
dec
cmp
lods
jns
inc
ret
mov
test
enter
sub
lock
mov
cli
loop
sub
cmp
cmp
scas
pop
shll
sub
test
xor
popf
fcmovne
shrl
roll
mov
and
pop
jp
aam
arpl
aad
or
and
loopne
xchg
imul
imul
repz
lret
mov
cli
stos
sub
arpl
adc
sub
out
jl
movsl
cmp
adcl
push
rclb
fcmovne
or
mov
int
dec
mov
add
inc
sbb
iret
mov
fwait
jg
outsb
mov
rcrl
sbbb
movsb
xchg
pop
sub
mov
out
xchg
xor
fimull
push
push
add
mov
les
gs
daa
out
push
rol
dec
insb
lret
push
cmp
lods
jno
jne
add
cmp
jbe
mov
inc
xchg
cmpsb
cmp
das
sahf
ss
mov
adc
push
sbb
sub
mov
repnz
dec
cwtl
fnstenv
jnp
pusha
rcr
push
jge
sub
es
sbb
xlat
repz
adc
mov
mov
popf
roll
cmpsl
lret
ss
sub
pop
mov
adc
aaa
mov
mov
inc
lods
cmpsl
std
ljmp
mov
stos
jae
outsb
movsl
movzbl
mov
in
jnp
pop
jne
movsl
gs
jo
cmpsl
jbe
js
jns
inc
mov
imul
out
fs
adc
fwait
cld
out
aas
pop
lcall
jne
push
cmp
inc
int
mov
adc
add
sbb
jo
or
stos
dec
xor
add
sbb
mov
mov
call
ljmp
mov
loope
pop
fidivrs
insb
inc
fsubs
dec
faddl
stos
inc
and
jg
jecxz
enter
inc
pusha
cld
repnz
repz
jmp
int3
fisttpll
hlt
dec
mov
ss
popf
cmc
mov
shlb
jg
fsubl
rcll
stos
dec
test
jge
mulb
test
js
cwtl
out
cmp
mov
and
negb
add
dec
xor
ret
inc
shlb
xlat
out
cmp
std
push
loope
movsl
mov
pop
call
or
enter
mov
dec
dec
sub
test
mov
cmp
cmp
sub
mov
push
mov
icebp
in
test
add
frstor
pop
and
push
push
es
xchg
mov
fs
and
dec
or
stc
out
sub
popa
jmp
sub
test
jle
sti
scas
and
inc
or
inc
test
pop
and
mov
ljmp
sub
adc
xchg
jns
imul
sbb
mov
pop
xchg
jg
movsb
insb
inc
or
jge
pop
sbbb
testb
add
repz
stos
and
inc
or
adc
std
es
loop
dec
add
inc
or
or
dec
add
addr16
sbb
mov
inc
inc
xor
loope
in
dec
sti
imul
orl
mov
test
cmp
mov
pop
mov
pop
loopne
inc
fs
cmc
pop
lret
shlb
jnp
add
hlt
jno
xor
mov
sub
mov
add
subl
fwait
mov
shrl
mov
lret
shll
jp
inc
aad
cmpsl
xchg
sub
inc
jecxz
lods
js
dec
and
push
push
inc
jmp
mov
ror
repz
les
pop
dec
data16
popa
clc
bts
adc
fdivr
xor
or
pop
ret
xor
in
cld
in
mov
inc
push
push
xchg
sub
jbe
je
adc
outsb
pushl
xor
and
xchg
adc
rol
insl
aam
movsb
popf
in
mov
jbe
stos
out
xchg
int
mov
cmp
push
xchg
push
push
push
ret
pop
sbb
xchg
lret
pop
cmp
pop
scas
jo
and
push
sub
xchg
adc
dec
pop
and
jno
push
and
xchg
cmp
inc
in
jae
test
and
pop
shl
push
xlat
mov
add
mov
sti
mov
inc
int
lods
pop
ljmp
jno
fwait
in
decb
jb
dec
add
adc
scas
fwait
jns
fstpl
outsl
and
shr
ljmp
cmpsb
sti
icebp
add
stos
sbb
lds
mov
push
xor
pushf
push
insb
stc
arpl
jmp
inc
jo
dec
pop
popa
lret
leave
outsb
xchg
push
and
pop
jns
lea
pop
pop
push
xor
orb
xor
testl
mov
addr16
push
out
dec
dec
mov
imul
jbe
scas
pop
push
cmp
add
sahf
fisttps
mov
in
gs
dec
lcall
arpl
in
inc
push
les
jae
lret
xor
lods
sub
xor
push
mov
lcall
sub
mov
loope
ret
jae
scas
in
sarb
out
xchg
xchg
call
push
lea
movb
fchs
mov
arpl
test
push
add
mov
lods
or
insb
xchg
jg
dec
imul
ds
mov
xchg
std
gs
inc
outsb
add
enter
jb
xor
fmul
sahf
test
and
psrld
cld
orl
lcall
stc
and
add
xchg
add
iret
clc
push
or
movsl
inc
push
pop
add
scas
adc
jbe
xchg
aas
loope
adc
daa
sahf
outsl
pop
push
inc
arpl
and
mov
dec
dec
lods
cmpsl
daa
data16
loop
sbb
mov
add
cmp
jl
mov
mov
jecxz
push
or
mov
lds
add
cmpsl
lods
nop
pop
inc
pop
mov
imul
sub
lods
sub
cld
sbb
stc
je
mov
adc
shr
cmpsl
int
andl
int
push
mov
inc
adc
repnz
cmp
push
aas
fimull
pusha
nop
loope
js
test
cltd
dec
mov
pop
cmp
pop
in
in
add
pop
add
jnp
call
dec
std
push
pop
lock
adc
xchg
aad
outsl
adc
negb
mov
std
jl
das
jb
lock
jnp
pop
inc
loopne
fildl
out
pop
sbb
jno
mov
push
mov
icebp
or
fisttpl
std
orl
aas
sbb
adc
inc
push
scas
push
lods
sbb
repz
add
orb
add
dec
fstpl
push
pshufw
and
dec
mov
pop
sub
jns
push
cmpb
mov
or
ss
cmp
pop
cmc
jnp
fstl
je
sbb
mov
push
sbb
je
arpl
xor
sub
aad
mov
xchg
cwtl
loope
cli
ss
lret
xor
arpl
jg
ret
scas
movsb
ret
jmp
in
int3
pop
loope
mov
sub
and
pop
scas
int3
sbb
mov
or
adc
mov
mov
push
bound
pop
xchg
stos
outsl
xor
xlat
mov
jge
adc
xchg
aaa
arpl
insl
add
movsb
cmpsb
lahf
jmp
aaa
adc
inc
mov
xor
sbb
mov
cmp
push
cmpsb
cli
add
ret
cmpsl
sahf
mov
ret
pop
daa
fsqrt
std
jno
ret
popa
jg,pt
nop
push
sub
jno
fs
cmpsl
push
adc
cli
arpl
xor
arpl
sbb
sbb
sub
daa
shrb
sbb
cmpsl
adc
mov
movsb
jecxz
mov
test
push
xchg
cmpsl
xor
ret
scas
lret
xor
jle
add
push
pop
sahf
and
mov
ja
sbb
lcall
inc
push
push
roll
in
aaa
and
movsb
jae
jnp
mov
fdivs
mov
lock
sahf
aam
mov
add
loopne
inc
cmp
out
push
mov
into
daa
or
jg
cmp
sbb
outsb
and
mov
jnp
pop
pop
cmp
add
mov
ret
ror
in
adc
hlt
or
cltd
add
jge
push
fistpll
jmp
pusha
sub
call
repz
sbb
cmp
pop
lods
mov
icebp
adc
and
jle
sbb
sbb
jg
and
xor
jl
jg
add
xor
xchg
or
in
imul
lods
out
pop
in
jg
lods
and
popf
test
fistpl
pop
cmp
jge
jp
aaa
aam
ss
sbb
outsb
cli
sbb
xlat
push
scas
jne
stos
dec
mov
pop
loopne
mov
movsb
push
xor
test
mov
into
data16
in
pop
xor
inc
popa
xor
pop
xchg
les
cmp
mov
lret
push
in
repz
add
psrld
mov
sbb
fildl
pop
cmp
fistpl
push
sbb
jbe
cvtdq2ps
icebp
mov
cltd
lea
in
inc
scas
and
mov
jl
dec
sub
inc
pusha
aam
fwait
mov
adc
push
cs
stc
adc
xor
pop
fnstsw
lock
pushf
jne
stc
mov
inc
shrb
imul
hlt
insl
xchg
nop
pop
sub
call
jae
and
scas
ret
mov
scas
mov
inc
loope
inc
lret
aas
dec
sbb
pop
mov
mov
ljmp
ret
sub
cltd
cmp
push
push
cwtl
sub
cs
test
fs
loopne
sub
cwtl
xor
jecxz
xor
jno
sub
bound
repz
repnz
mov
movsb
mov
push
push
inc
daa
pusha
sub
lcall
test
inc
test
jne
or
and
shll
pushf
daa
fsubrs
lret
add
rep
adc
stc
psllq
add
add
jl
repnz
imul
push
mov
add
and
movsl
cltd
or
adc
and
js
loopne
push
xor
adcb
imul
pop
jle
adc
dec
into
imul
inc
outsl
add
lods
inc
dec
pop
mov
add
mov
inc
add
pop
mov
ret
test
ret
bound
sbbb
mov
pop
cmp
scas
popa
add
iret
xor
popa
pusha
ss
dec
jmp
lea
leave
gs
pop
jo
clc
add
sbb
adc
ds
aad
jle
push
xor
mov
js
xor
mov
xlat
icebp
icebp
cmp
mov
fnstenv
scas
aad
or
sub
xchg
enter
aad
rclb
fcomi
jbe
mov
dec
in
jo
mov
and
cs
adc
sahf
outsb
jae
jl
xchg
fldt
fdivl
outsl
and
pop
pop
ss
aam
cmp
fs
sahf
mov
pop
cmp
add
pop
mov
test
cmc
pop
cmc
mov
jbe
and
add
cmc
and
rcr
pusha
lcall
sub
push
xor
outsl
sbb
xchg
push
adc
mov
sbb
ret
and
push
push
jp
rcl
cmpsb
fcomi
xchg
xorb
mov
cmp
mov
lods
mov
movsb
ja
push
ds
incb
mov
xchg
call
call
loope
outsl
push
loopne
ret
fcom
test
jnp
cld
scas
movsl
inc
int
into
les
mov
jecxz
xchg
xlat
push
leave
int3
aas
xchg
fmul
or
outsb
sbb
dec
cmpsb
mov
sub
nop
ss
mov
sub
rclb
movsl
cmp
fs
push
lcall
imul
cmp
mov
lods
gs
pop
dec
repz
pop
and
out
bound
sub
inc
sub
push
sub
int3
faddp
xchg
je
js
or
mov
leave
test
cmp
pop
xchg
shr
int3
jle
fsubl
pop
test
inc
mov
add
movsl
nop
mov
mov
loopne
sti
pop
ret
mov
pop
sub
inc
fs
or
outsl
adc
sbb
in
fs
sbb
xor
stos
mov
in
cli
or
mov
adc
jg
or
ja
and
and
mov
aas
sarl
in
imul
cmp
imull
iret
push
cmp
into
sahf
gs
mov
or
mov
outsb
inc
or
cmc
mov
inc
sub
aas
push
xchg
mov
dec
movsl
push
insl
cmp
divl
mov
lods
sub
sbb
mov
mov
add
into
jge
ljmp
mov
es
lds
in
scas
or
fdivrl
out
pushf
mov
lods
out
test
hlt
cmp
push
movb
dec
iret
pop
jns
inc
hlt
jp
loop
push
imul
iret
inc
sti
in
adc
inc
mov
pop
mov
cli
ja
xchg
lahf
negl
jns
inc
jmp
and
daa
fsubrs
stos
mov
fdivs
es
dec
cli
lret
add
mov
test
jo
mov
push
in
pop
out
mov
pop
adc
mov
sub
insb
jle
addr16
sbb
mov
cli
insb
adcb
shll
jns
call
cwtl
and
test
sahf
cmp
xchg
inc
aaa
pop
inc
in
lret
mov
xchg
mov
cmp
fisttpl
dec
aad
icebp
push
jmp
xchg
xchg
stos
cmpsl
adc
lock
pusha
xorl
mov
push
jg
lock
les
subb
or
mov
jmp
imul
xor
dec
insl
in
lret
mov
enter
data16
repz
mov
sbb
cli
jmp
inc
shll
stc
popf
and
mov
jo
mov
mov
push
and
xor
mov
mov
xchg
push
ds
dec
jle
inc
clc
mov
dec
or
int
add
daa
cmpsl
ds
sbbl
imul
sbb
pop
sub
xor
ds
das
dec
dec
fwait
cmp
lock
dec
ds
jo
jmp
mov
sub
imul
cltd
or
repz
iret
fsubl
cmc
mov
outsb
loop
outsl
add
lahf
mov
cwtl
jle
imul
push
xor
jo
jl
cld
and
pop
imul
mov
sub
and
scas
xchg
imul
adc
adc
and
pop
adc
ret
je
fwait
push
sub
dec
leave
push
rcrl
add
mov
or
add
mov
push
mov
test
lea
and
pop
push
test
fildll
pop
mov
fidivs
xor
add
mov
adc
jbe
jno
push
inc
leave
lahf
fldcw
notl
popa
cld
adc
or
out
pop
add
mov
dec
sub
push
ret
sub
dec
lea
loopne
pop
outsl
jge
shrb
popf
or
outsb
outsl
adcl
ds
mov
pop
pop
sub
mov
or
lret
push
in
aam
jmp
jmp
lcall
inc
arpl
cli
popf
loopne
jl
mov
or
dec
and
mov
sbb
aaa
adc
arpl
adcl
xchg
les
or
sbb
mov
jg
xor
fadds
cmp
mov
xchg
add
je
in
inc
dec
aad
mov
and
adc
push
call
push
popa
lods
or
add
cs
fs
aas
cli
divb
loop
ja
and
cmp
mov
rolb
xor
in
mov
test
popf
jg
push
shrb
jle
lret
bound
push
fwait
cmpsl
mov
push
in
pop
jnp
xor
or
fists
testb
sbb
stos
inc
and
mov
mov
testb
jl
adc
pop
movsl
xor
mov
jne
pushf
rorl
sbb
sbb
cmpsl
mov
jb
adc
dec
jbe
sbb
pop
sarl
push
mov
pop
xor
pop
mov
mov
and
pop
lcall
inc
jmp
jns
bound
das
dec
clc
cmc
pusha
aaa
insb
adc
push
js
repz
xchg
lods
sti
inc
or
xchg
sub
jne
pop
cltd
or
cs
mov
mov
dec
push
imul
into
push
movsl
dec
es
dec
xchg
loopne
mov
sbb
xlat
lock
mov
push
mov
mov
cmpsl
sbb
add
mov
pop
mov
add
das
aad
xlat
inc
cmp
fwait
pop
cwtl
jae
jge
cmp
sbb
sbb
cwtl
lcall
add
rorl
mov
mov
mov
shrl
mov
push
push
addr16
ret
test
mov
adc
faddl
sarl
mov
and
mov
xchg
mov
ss
push
pop
adc
or
mov
push
jmp
fimull
sub
pop
or
add
les
adc
jecxz
enter
pop
es
orl
push
idivl
sub
mov
pop
test
sub
cmp
in
ret
sbbl
jmp
out
jg
sbb
jae
jp
or
rorl
subl
test
stos
push
cmpsb
push
das
dec
sahf
cmp
mov
repnz
fdivl
sbb
cwtl
mov
dec
bts
in
xchg
jl
icebp
js
fisubrs
jae
or
stos
repnz
notb
mov
pop
sahf
lea
mov
mov
pop
out
stc
cmovle
fwait
jbe
jp
rol
imul
push
out
pop
mov
dec
ljmp
add
jne
aaa
ljmp
out
mov
push
jnp
pop
js
insl
stos
jns
xor
stc
push
mov
adc
sub
xchg
sahf
fcomi
xchg
cmp
cltd
lds
xor
out
pop
adc
ja
outsl
xor
adc
lea
jge
pop
bound
jne
xor
jno
mov
lods
xchg
xchg
mov
dec
adc
iret
fcoms
in
repnz
jno
inc
cmpsb
sub
hlt
imul
mov
sbb
ret
pop
sbb
inc
xchg
sub
jbe
sarb
in
pop
cltd
ror
mov
pop
xor
pop
stos
ftst
add
out
xor
sub
jg
push
and
pop
or
push
xchg
bound
jae
icebp
movsl
push
mov
sub
std
fmull
xor
and
roll
pop
jle
xchg
pop
mov
or
inc
repnz
xchg
sahf
scas
aam
sbb
push
mov
stc
cmp
jb
fwait
mov
test
jne
sub
or
movsl
xchg
inc
pushf
pop
cmpsl
dec
movsl
adc
sbb
cmp
xor
add
pop
lock
ret
or
in
inc
pop
xchg
push
outsb
mov
pop
and
nop
push
leave
inc
popf
lods
jb
push
cmc
cli
ja
out
filds
mov
lcall
aas
or
push
out
cs
out
loop
or
stos
lds
push
notl
sub
scas
xor
into
mov
fucom
aaa
add
hlt
or
repz
jp
mov
rorl
and
ret
data16
adc
jecxz
repz
fadd
cmp
push
shrb
and
mov
push
in
sub
cltd
xchg
push
rorl
dec
push
lea
loop
xchg
jle
inc
clc
cmpsl
fisubrl
mov
lea
and
insb
enter
iret
aad
mov
scas
cltd
cltd
popf
mov
les
int
sbb
mov
dec
int
jnp
ror
lds
mov
pushf
test
inc
push
jb
cmp
inc
or
and
adc
cmc
add
scas
out
rolb
pop
aas
adc
lahf
outsl
mov
subl
pop
xor
popf
xchg
movsl
shrl
mov
out
test
ret
mov
pop
dec
push
dec
jnp
out
test
jno
pop
adc
xchg
daa
mov
sub
push
dec
add
es
and
ja
mov
jmp
rcl
cmp
jp
add
je
add
pop
jmp
push
icebp
sti
sub
aas
popa
xchg
adc
test
dec
mov
sbb
mov
inc
loope
mov
sub
jns
jae
pushf
inc
push
pop
lret
cli
jne
repnz
xor
in
xor
cmpsl
outsl
xor
push
mov
repnz
loop
xchg
js
loop
cltd
xchg
negl
cmpsb
ret
les
dec
cmp
pusha
divl
xchg
andl
fsubrs
test
xchg
call
int3
or
hlt
scas
out
std
xchg
mov
sub
rep
mov
xlat
leave
or
je
dec
jns
fdivrp
jbe
or
pusha
jle
cmc
mov
outsb
negl
mov
mov
or
aaa
call
lock
and
push
mov
add
ss
and
cmpsl
push
in
sbb
out
in
and
aam
push
xor
jne
repz
and
xor
aad
mov
jns
lret
data16
pop
cmp
push
hlt
xor
add
push
mov
sub
xor
lds
add
pop
sub
cmp
lahf
gs
pushf
cmp
and
rclb
ljmp
pusha
cltd
xchg
pop
outsb
incl
mov
je
popa
mov
lcall
and
or
jg
in
sbb
cmp
leave
int3
into
sarb
insb
push
mov
jmp
lahf
mov
sti
call
mov
xchg
jp
cs
in
xchg
sub
inc
data16
cwtl
jo
xchg
mov
into
sbb
fidivrs
repz
push
inc
xchg
fsubl
addb
xchg
xchg
js
push
and
mov
aad
loope
inc
xchg
jmp
push
jmp
add
mov
stos
cmp
shr
mov
cmpsb
xchg
daa
lods
sahf
daa
cli
int
mov
or
pop
adc
pushf
sbb
lods
dec
popa
leave
test
in
cmc
dec
or
stos
es
or
mov
js
adc
adc
xchg
imul
sbb
sbb
out
gs
ljmp
fistpll
rcrb
decl
push
pop
and
inc
gs
lds
mov
clc
fwait
out
dec
push
adc
adc
jno
addr16
push
mov
scas
cmpsb
or
lods
sbb
sub
sbb
inc
movsl
rcrl
repnz
or
lods
mov
mov
mov
fdivrp
jmp
or
daa
inc
mov
shl
push
scas
test
xchg
cmpsb
xchg
cmp
lock
cmp
and
lahf
inc
repz
pop
leave
inc
rcrl
out
push
fsub
adc
dec
iret
add
hlt
imul
push
pop
test
into
stos
fiaddl
lcall
and
push
iret
xchg
mov
and
add
repnz
pop
aaa
cmp
hlt
sub
sbb
aad
jecxz
xchg
sbb
mov
lods
insl
mov
testl
out
cmp
vcmppd
xlat
hlt
nop
ret
push
in
andl
or
into
xchg
add
pop
psllq
mov
cmp
insb
inc
pushl
mov
push
mov
xchg
mov
add
pcmpgtd
cwtl
sbb
fsts
jnp
push
out
and
jp
push
push
cs
push
inc
mov
push
lods
and
stos
push
sahf
jmp
push
mov
out
mov
sbb
inc
jnp
loop
cld
sbb
jne
in
jp
ret
pusha
aad
scas
pop
jne
rcrb
iret
test
jb
xchg
jge
mov
test
arpl
les
movsb
mov
sub
xchg
stos
inc
stos
push
lret
jns
popf
mov
xor
out
daa
das
lret
stc
out
inc
rcll
jne
xor
mov
decl
loopne
sbb
mov
leave
inc
pop
add
dec
dec
adc
in
mov
pop
jmp
insl
mov
scas
inc
daa
inc
pop
arpl
or
mov
stos
gs
test
mov
inc
shl
push
addr16
sbb
cmp
jae
lcall
fwait
adc
adc
xor
adc
push
fiaddl
arpl
ss
sub
aaa
pop
js
call
push
inc
call
push
pop
mov
fisttpll
pop
jg
int3
xor
lods
push
test
mov
in
bound
mulb
data16
mov
popa
lcall
fxch
cmpsb
test
push
movsl
mov
adcb
imul
movsl
das
cmp
inc
sub
dec
js
sbb
mov
mull
pop
or
in
dec
movsl
stc
pop
out
lret
xor
in
decl
adc
pop
leave
loopne
push
add
pop
mov
pop
and
xchg
dec
stos
test
cld
sub
xor
xor
inc
jnp
rol
jge
les
sub
imul
sub
imul
adc
test
mov
add
aas
cmp
popa
sbb
sbb
cmc
mov
fdivs
pop
or
mov
scas
sbb
les
aas
insl
movl
insl
jg
cmp
popf
out
test
dec
ficoml
and
xor
and
inc
push
jmp
cmp
add
mov
test
flds
and
add
mov
jne
add
jmp
mov
pop
call
fldlg2
ljmp
mov
test
out
loope
sub
inc
popa
mov
lods
pop
pop
mov
xchg
jae
cmp
xor
xor
xor
pop
xor
add
ret
xchg
xor
push
jl
adc
and
lret
repnz
or
inc
jg
in
fsubr
push
sbb
adc
sub
push
popf
pop
int
ljmp
pop
xor
xchg
sub
cmp
insb
mov
adcb
je
loopne
add
aas
std
sub
lcall
inc
inc
mov
sar
jae
inc
sub
inc
loop
enter
sbb
nop
outsb
xchg
sbb
cmp
loope
xlat
xlat
lods
sub
rcrl
or
pop
hlt
pop
test
jmp
rolb
test
inc
mov
push
jb
insl
ds
pop
jle
imul
lahf
fbstp
andl
add
out
dec
xor
adc
xor
adc
pop
insl
mov
dec
in
jb
mov
or
jl
mov
daa
lahf
jge
inc
lret
clc
cmpsl
cld
fs
cmp
sub
sub
cmp
xchg
enter
jae
inc
inc
xor
in
stos
imul
xchg
mov
xchg
push
xchg
mov
out
movsb
push
popf
mov
mov
sub
int3
insl
xchg
sub
adc
jge
ss
inc
xor
sahf
dec
mov
and
xor
lret
pop
mov
adc
push
xchg
mov
and
loop
mov
fiadds
pop
sahf
nop
das
sub
aas
ret
sub
cmc
pusha
popf
xor
mov
dec
test
push
dec
jecxz
mov
sub
and
inc
stos
out
or
add
aad
push
push
mov
ret
addl
xor
and
push
std
adcl
jmp
mov
or
xor
jp
les
jb
fidivs
jl
int3
lods
push
push
sarb
ljmp
jle
filds
adc
cltd
mov
dec
call
push
xchg
jne
icebp
ss
imul
cmpl
pop
cmc
mov
cs
fidivs
ficompl
nop
sub
dec
lods
outsl
xchg
or
ret
lds
xor
xchg
inc
lcall
addr16
popa
leave
jle
jb
jnp
shl
push
or
lock
add
cmpsl
push
xchg
add
push
sbb
ja
dec
mov
aad
ss
push
lret
sbb
cmp
aad
inc
fildl
pop
adc
and
aaa
push
cld
fcomps
mov
mov
xorb
mov
insb
cmp
dec
adc
movsb
scas
jle
pop
insb
jecxz
xor
out
dec
roll
mov
sub
add
adcb
js
gs
test
daa
cmp
mov
mov
movl
mov
pop
icebp
adc
xor
sub
fcmove
xchg
push
in
xchg
sbb
push
cld
inc
push
pop
shlb
cmp
pop
add
inc
cltd
std
out
xor
dec
jl
out
pop
mov
leave
xor
sub
add
cld
and
cmpsl
push
mov
push
adc
lds
mov
repnz
xor
cmc
in
and
dec
stos
or
jns
mov
test
cwtl
pushf
cli
sbb
arpl
push
mov
adc
and
add
fsubr
and
xchg
stos
in
test
sbb
add
mov
add
xchg
push
mov
mov
ja
adcb
xlat
pop
test
lods
push
sti
or
adc
jp
pusha
inc
movsl
mov
test
mov
push
mov
or
lods
mov
std
fucomip
and
sbb
rorb
push
or
in
or
rcrb
pop
in
rorb
mov
xor
dec
fwait
push
cs
pop
fstps
inc
cmp
or
add
scas
cmpsb
push
mov
mov
test
pop
aam
pop
insb
inc
into
cmpsl
pop
inc
add
testb
adcb
shlb
leave
pusha
add
out
jecxz
and
push
dec
xrelease
outsb
xorb
mov
mov
xor
sbb
fwait
and
out
pop
pop
notb
mov
scas
faddp
mov
jno
sbb
mov
xchg
xlat
sub
jb
sub
test
add
or
stc
sbb
lahf
dec
ficompl
andb
cmp
imul
in
cmp
aam
add
jns
pop
and
cmpsl
andb
sub
repnz
psadbw
xchg
js
mov
add
imul
mov
jnp
daa
stc
daa
cmp
dec
dec
cld
incb
mov
xor
pusha
in
jbe
or
cmc
adc
mov
push
inc
pop
xchg
pop
les
aaa
mov
andl
or
mov
fdivl
int
adc
hlt
mov
jnp
aad
stc
xchg
jg
and
in
xchg
dec
cmp
mov
pop
out
jmp
xor
xchg
dec
xlat
iret
sbb
cmp
std
jg
push
movsl
clc
add
jnp
cmp
or
cmp
jne
rcl
and
iret
jg
test
idivb
movsl
push
inc
fidivs
in
notl
mov
cmp
sbbl
xchg
pop
lods
dec
ret
mov
sub
jb
cmovg
dec
push
repz
mov
push
fwait
icebp
out
adc
cmp
nopl
sbb
jns
and
mov
add
and
fldcw
mov
hlt
inc
shlb
in
sbb
dec
mov
cmp
out
add
rorb
subb
mov
adc
pop
insb
sub
fiadds
incl
sarl
test
fiaddl
mov
mov
pop
adc
jb
popf
pop
inc
scas
cmpb
sub
in
sub
iret
sub
testb
mov
cmpl
adcl
sub
ja
shrl
xlat
sub
push
ja
out
pop
test
test
stos
mov
inc
fdivr
add
jnp
xor
add
int
pop
das
fmulp
data16
or
adc
mov
imul
int
ret
lods
inc
addr16
loopne
ret
js
jge
jg
ja,pn
xor
mov
mov
sub
xchg
adc
popf
stos
push
pop
push
ret
cmc
inc
add
cld
cmc
sub
mov
cmp
jns
lret
lcall
pop
mov
and
pop
cmp
or
push
inc
cmp
cli
scas
inc
fmuls
adc
jle
int3
jg
sbb
lret
jmp
hlt
fisttps
js
repnz
mov
and
mov
adc
leave
jae
aam
fmuls
pop
mov
test
cmp
xor
inc
mov
or
jle
xchg
dec
ss
mov
inc
pop
fbstp
sub
jns
mov
int3
pop
jno
sti
test
push
dec
dec
lock
dec
pop
adc
push
int
addl
sbb
pop
shl
or
xchg
sub
lret
push
ljmp
inc
inc
push
xchg
mov
mov
mov
dec
jnp
mov
int
inc
lods
sbb
and
fldcw
adc
popf
movsl
clc
adc
aaa
fisttpll
sbb
dec
push
les
js
cltd
jl
pop
movsl
push
jp
cmpsb
ret
outsb
jp
icebp
xchg
cmp
out
mov
pop
call
xchg
je
mov
data16
adc
and
adc
mov
sbb
mov
mov
gs
mov
in
pop
pop
push
pop
push
cmc
je
addr16
pushf
xor
adc
shlb
mov
repnz
hlt
test
mov
ja
jle
rorl
gs
out
fwait
push
add
mov
icebp
push
int3
dec
in
sbb
sbb
jmp
out
xor
stos
je
pop
dec
cmp
stc
pop
outsl
sub
popa
subl
aad
mov
xchg
and
outsl
push
movsl
mov
inc
scas
inc
pop
clc
in
push
sub
imul
rcrb
mov
ret
pop
dec
xchg
call
or
xchg
mov
loop
leave
pop
ds
inc
xchg
lods
mov
clc
repz
out
mov
xchg
add
movsl
adc
inc
inc
xor
iret
inc
push
push
push
test
lret
bound
mov
push
mov
mov
cmpsl
sbb
mov
cmp
jg
xchg
xlat
pop
lock
adc
inc
arpl
cmp
push
lea
adc
fisubrl
pushf
xor
mov
pop
ss
sbbb
cmp
jle
and
xchg
movsl
dec
adc
inc
push
movsl
jg
enter
jl
inc
xlat
xor
sbb
das
rcrb
cmp
jl
in
stos
mov
pop
fmull
adc
mov
sbb
inc
popa
pushf
hlt
pop
imul
mov
cmpsb
sbb
test
mov
adc
adc
fiaddl
jno
pushf
gs
xor
jle
and
lods
cltd
test
xchg
jae
dec
mov
mov
les
push
std
push
adc
jne
mov
mov
lock
jae
sti
mov
cs
and
cmp
cmc
aam
adc
outsl
ret
scas
and
aad
loope
insb
sub
call
pop
int
push
mov
inc
lds
and
es
out
jns
je
xlat
hlt
mov
jg
ds
pop
jae
dec
cmc
xor
es
aam
cmp
cmc
in
mov
fbstp
sti
lcall
iret
inc
fdivr
das
push
repz
pop
and
xor
and
adc
test
push
jno
pop
xchg
mov
xor
inc
das
or
lea
loope
mov
in
add
call
dec
loope
jecxz
roll
ds
testb
inc
ret
daa
aas
aam
leave
mov
dec
add
adc
outsb
inc
stos
lahf
ds
out
xchg
test
stos
mov
dec
mov
popf
and
sbb
into
mov
ja
pop
sub
rorb
inc
add
aad
arpl
jbe
jne
inc
sub
pusha
push
push
shr
popf
push
gs
mov
mov
mov
lahf
jnp
in
xor
dec
add
fdivrl
xchg
or
mov
rcr
out
pusha
jno
dec
sahf
jmp
inc
fmul
pop
outsl
hlt
push
or
call
cmp
cltd
pop
dec
rcrl
add
or
inc
and
scas
push
xor
adc
xchg
nop
xchg
fildl
std
shll
pop
xor
test
out
mov
adcb
pop
ss
inc
inc
xchg
out
lods
inc
inc
enter
sub
push
mov
imul
mov
rclb
and
xor
mov
xchg
sbb
notl
lods
fnstsw
rclb
aam
sub
lret
out
mov
dec
data16
loop
daa
enter
pop
sub
xor
scas
mov
pop
stc
inc
sbbl
andb
xchg
loope
mov
xchg
fwait
mov
shlb
pop
jne
clc
inc
mov
imul
push
psrad
adc
leave
inc
dec
and
out
repnz
xchg
add
inc
mov
stos
imul
cltd
and
arpl
jp
and
fs
inc
push
paddq
xor
int
sub
pop
adc
cmc
sarl
mov
decl
shll
pop
adc
clc
add
dec
push
fisubl
aaa
push
data16
mov
divl
mov
push
loop
das
and
scas
mov
pop
lods
ss
jp
xor
movsl
mov
sbb
in
and
mov
xchg
push
xor
push
mov
call
repz
ret
repz
outsl
mov
xchg
fstl
cmp
sub
jmp
roll
mov
adc
stos
lcall
jnp
mov
lods
and
fs
jl
pop
daa
mov
add
push
testl
or
mov
shll
sti
pop
insl
iret
jle
push
mov
ljmp
push
xor
mov
ljmp
movsb
out
adc
fsubrl
push
xor
orl
stos
pop
cwtl
jno
sbb
xchg
pop
loope
in
nop
dec
rcrl
repnz
imul
lea
sarl
scas
sbb
sbb
shl
es
push
insb
mov
sub
add
inc
dec
mov
mov
sub
mov
adc
cmpsl
inc
iret
mov
cmpsl
push
add
xorb
insl
cltd
inc
sub
jle
or
pushf
add
lods
xchg
cld
mov
sbb
or
jp
loopne
cmpsl
ret
leave
mov
jp
inc
or
loope
lock
sbb
in
dec
dec
jecxz
fwait
jnp
test
mov
jbe
int3
adc
inc
and
and
into
or
sbb
xchg
lods
cltd
xor
add
aam
into
fcmove
filds
jnp
sbb
hlt
mov
jbe
clc
push
insl
mov
pusha
clc
sahf
arpl
aas
sub
mov
xchg
dec
sahf
xchg
or
xor
adc
pushf
scas
xor
mov
out
dec
mov
into
repnz
sbb
sbb
outsb
xchg
sub
pop
gs
jno
inc
pop
mov
jmp
imull
cmp
add
jne
out
xor
pop
lock
pop
jae
scas
add
and
cltd
mov
shrl
lods
pop
scas
jnp
mov
cmp
in
dec
jb
sub
je
and
pushf
loopne
shl
out
test
imul
cmp
pop
test
shlb
adc
loope
add
pop
or
icebp
out
test
andl
sub
inc
inc
fidivrl
loopne
sub
cmp
mov
faddp
mov
sbb
je
jg
or
loopne
rcll
aaa
fld
mov
cld
xor
mov
sbb
xchg
fldcw
mov
test
push
xor
and
inc
jmp
pop
inc
dec
pusha
jge
xor
lds
lret
fisttpll
pop
push
mov
pop
lahf
jne
adc
add
push
test
popf
je
pop
and
xchg
sub
fwait
add
es
and
xchg
pop
std
pusha
int3
mov
and
imulb
fs
or
and
cmpsl
mov
or
icebp
jle
and
push
mov
cmp
jns
aam
fsubp
mov
cmp
sahf
fidivs
rcrl
test
dec
insb
dec
scas
shlb
imul
push
rcll
pop
aaa
mov
and
in
sti
addl
in
loope
mov
mov
mov
push
add
pop
out
pop
and
testb
sub
shlb
and
and
fsubs
push
icebp
fdivrp
jno
mov
ret
add
xor
jecxz
pop
aaa
std
and
iret
mov
int3
loop
lods
push
jmp
sub
out
test
push
fidivl
je
sbb
stc
popf
insb
jno
test
jmp
pop
arpl
shlb
adc
dec
sub
cs
cwtl
outsl
lods
enter
notb
mov
jbe
out
test
lret
jns
sub
fidivrl
fs
xchg
fucomip
jb
jmp
push
sbb
mov
fists
rep
mov
sbb
dec
lret
adc
leave
mov
inc
fldcw
sarb
dec
push
adc
add
mov
adc
loopne
mov
cmp
lods
pop
adc
lds
fdivl
imul
add
push
mov
xor
mov
mov
xchg
mov
pop
lods
aaa
dec
data16
pusha
mov
cmp
clc
sbb
mov
mov
pusha
paddsw
cmp
lods
mov
pop
jbe
lods
mov
mov
push
notb
test
mov
sarb
jnp
clc
lods
cs
xchg
clc
int
mov
sbb
push
cmp
rcll
cli
cmc
and
mov
lret
movsb
cmp
sub
dec
fsts
jbe
mov
pusha
add
insb
imulb
pop
mov
int3
aaa
in
lock
inc
dec
add
enter
add
pop
movsb
or
sub
sbb
sub
mov
lds
pop
lods
xor
fbstp
mov
push
jae
mov
or
aas
lds
pop
jg
stos
pop
mov
je
and
daa
and
push
sti
push
call
mov
fldcw
mov
sub
shrb
roll
loope
sbb
testb
iret
cwtl
loope
adc
cs
jb
stc
jge
and
fs
xor
popf
push
in
out
push
and
movsl
push
repz
jb
lahf
icebp
insb
or
jg
test
scas
dec
fcomi
into
outsb
loope
cltd
or
cmc
jl
in
inc
sub
aad
loope
xor
sub
push
mov
dec
sub
bound
mov
mov
xor
test
mov
rcrl
and
cld
jmp
push
push
popf
xorl
scas
mov
sahf
xchg
mov
lock
mov
push
cmp
das
adc
es
hlt
dec
inc
test
mov
dec
shrl
push
jbe
fsubrl
xchg
xchg
enter
xor
fmul
jnp
pushf
or
dec
loope
mov
sub
jnp
mov
xor
test
inc
add
enter
mov
push
sti
or
xor
and
in
jne
scas
pop
ret
mov
or
fisttpl
iret
mov
cmp
call
jae
outsl
push
fwait
inc
rcr
xor
pop
sub
jecxz
xor
sti
xchg
lret
lods
sub
jmp
dec
add
inc
scas
inc
jb
mov
cmpsl
rorl
mov
adc
add
jns
mov
xor
sub
outsb
mov
les
sahf
mov
fistpll
imul
cmp
jnp
lahf
das
cmp
or
mov
and
out
test
cmp
sbb
or
idivl
mov
mov
int
call
sbb
mov
dec
dec
push
dec
dec
jge,pt
int
je
pop
cmp
sbb
out
dec
fisubrl
iret
popa
sub
cmp
or
and
xchg
lock
push
ja
push
and
ja
xchg
xor
adc
mov
imul
inc
cmp
sbb
mov
data16
testb
test
ljmp
fsubr
subl
or
cmpsl
icebp
adc
dec
push
or
in
cmp
jae
pop
imulb
hlt
aad
xchg
or
sub
inc
mov
stos
mov
in
push
dec
push
in
stos
sahf
scas
mov
stos
xorl
popf
popa
rol
cli
xchg
in
push
or
punpckhbw
xchg
inc
xchg
je
fbld
mov
fs
testl
push
adc
pop
inc
imul
dec
insl
mov
mov
xchg
outsl
testb
mov
pop
adc
rorl
out
mov
dec
int3
das
mov
movsl
inc
test
stos
stc
push
jmp
and
mov
mov
insl
and
sbb
pop
mov
and
inc
cwtl
xor
cmp
cmp
ss
or
outsb
in
add
mov
pop
and
pop
subl
lret
cmpsb
outsb
jmp
mov
rcll
in
jge
addl
and
hlt
cli
push
jecxz
hlt
pusha
sbb
mov
and
out
sub
or
push
jae
or
jge
pop
scas
and
in
push
push
jne
lret
movsl
movsb
jbe
popl
ljmp
jno
jnp
sub
push
or
push
out
aaa
in
int3
arpl
mov
ljmp
push
aaa
rclb
push
data16
orl
jns
adc
pop
xor
xchg
dec
incb
stos
inc
popf
push
lcall
cltd
call
fdivl
xchg
imul
add
bound
jnp
mov
sbb
cvttps2pi
mov
cmp
into
pop
mov
pop
mov
testb
test
mov
into
adc
mov
xor
dec
jl
shll
rcll
mov
cmp
xlat
add
xchg
fimuls
daa
xlat
lods
inc
mov
int
leave
pop
lret
or
popa
loop
cltd
mov
add
enter
sbb
xor
cmpsl
fidivl
mov
das
mov
dec
int3
in
pusha
sbb
testb
jbe
les
jnp
rcrb
add
jno
adc
ret
dec
and
push
push
out
and
cmp
push
mov
jb
in
stos
ja
xchg
pop
ret
dec
mov
lahf
pop
jecxz
rolb
sub
or
push
adc
and
les
stos
mov
icebp
jae
mov
adc
iret
push
lea
jno
mov
je
pushf
cmp
add
icebp
pop
xchg
pop
movsb
mov
outsl
mov
mov
dec
pop
mov
sti
mov
sub
daa
int3
mov
mov
push
cmp
fbstp
sub
mov
out
aad
jo
and
fmuls
sbb
sbb
mov
jmp
inc
loopne
adc
adc
xor
push
cmpsb
sub
cmpsl
push
xchg
jo
mov
enter
inc
cwtl
shrl
ds
inc
stos
clc
mov
stos
jle
fdivl
mov
mov
push
pop
ret
test
mov
mov
inc
sub
inc
sbb
ficoms
mov
dec
push
mov
std
cmpsl
test
jl
je
int
mov
cmp
jne
lcall
ds
test
jns
push
add
fs
push
stos
repnz
imul
enter
lods
lods
mov
sub
dec
xor
jno
push
outsl
adc
mov
jnp
push
mov
test
push
sti
test
xlat
fxch
into
imul
rcrl
cmpsl
pop
leave
pop
cmc
mov
arpl
xor
popa
rcrl
fucomi
orb
or
test
bound
mov
sahf
pusha
scas
push
fstps
jge
in
lock
data16
vunpckhps
sub
jmp
push
jl
insb
sub
sbb
pop
sbb
loopne
dec
insb
lock
out
mov
or
daa
movsb
dec
or
outsb
add
sbbb
push
ret
pop
testb
call
aaa
add
es
lock
addr16
mov
int
jns
ss
fdivl
fcmovb
dec
in
jmp
jno
xchg
mov
mov
idivl
jp
pop
stos
xchg
in
mov
lods
fmuls
jecxz
cli
mov
jb
into
movsl
pop
xchg
or
arpl
or
push
jle
fmull
mov
jne
popl
int
ret
dec
cltd
jp
pop
mov
jns
pop
push
in
mov
loope
mov
shll
inc
push
lcall
jle
fimuls
jae
jecxz
inc
aam
mov
push
outsb
push
push
dec
out
push
xchg
insl
and
fdivrp
popf
mov
bound
dec
xchg
jp
dec
lahf
add
lods
push
sar
cmc
inc
xor
jnp
insb
add
sti
or
sub
mov
and
xlat
adc
lock
or
shrl
mov
fists
sbb
leave
xor
push
add
js
ljmp
popf
dec
loop
adc
cmc
int
imul
xor
jmp
ret
loopne
leave
pusha
push
into
add
or
mov
jecxz
outsl
movl
jecxz
fcomps
push
push
or
hlt
cmp
jg
pop
and
adc
inc
push
test
lods
pop
mov
scas
xor
jnp
jle
jo
sbb
add
mov
subb
pop
shr
lcall
adc
imul
cmpb
jo
mov
orl
jecxz
fcomps
xor
jg
les
imul
inc
stos
jmp
or
add
mov
movsl
orb
daa
imul
and
pop
jl
dec
inc
cmpsb
sbb
jbe
push
cmpsl
lods
pop
in
lds
shll
dec
repnz
rcll
loop
pop
fbld
push
imul
add
xchg
cltd
aam
jmp
pop
aad
and
pushf
outsl
add
arpl
sti
or
xor
rorb
pop
insl
and
adc
pop
cmpsb
aaa
rorl
lods
sub
sbbl
cmpsl
shld
enter
pop
xchg
pop
push
ds
jbe
daa
xchg
xor
cmc
out
idivl
and
dec
lahf
add
inc
aad
xor
mov
xchg
js
pop
xor
js
adc
jmp
enter
pop
cli
ds
xor
fdivs
gs
mov
fdivrs
mov
fcomi
jecxz
dec
icebp
push
fucomip
cmp
loopne
rorl
inc
lods
fmull
test
scas
cmpsl
push
sahf
loop
xchg
adc
test
xchg
repz
les
jmp
cmp
sbb
and
or
out
cmp
sahf
pop
mov
xor
or
sti
cmp
inc
int3
lret
add
outsb
stc
and
fistpl
or
mov
inc
adc
mov
lcall
push
enter
iret
gs
pusha
jle
xchg
cli
add
push
ret
xor
ljmp
fwait
cmpsl
clc
cmp
fidivs
push
es
mov
std
jg
adc
push
bound
into
into
mov
adc
loop
mov
jg
aaa
and
dec
enter
cmp
notl
daa
inc
sbb
mov
aas
mov
or
push
inc
fistpl
fiaddl
pop
mov
dec
mov
mov
dec
inc
push
cmp
push
aas
or
je
arpl
push
cs
mov
fldenv
insl
cmp
iret
loop
pop
xlat
push
sbb
mov
es
push
cmp
and
add
cmp
push
cltd
mov
xlat
rorl
out
pop
rol
pop
les
imul
es
xchg
sbb
scas
ret
mov
mov
pusha
f2xm1
sub
dec
adc
sub
icebp
mov
pop
out
mov
sbb
ret
mov
mov
cld
jl
mov
shl
push
cltd
jo
mov
clc
repz
xchg
js
adc
mov
mov
jle
xor
lea
call
into
cmp
pop
cmp
movsl
shl
mov
scas
pop
daa
add
jae
loope
out
mov
cli
xchg
jle
or
pop
pop
sbb
mov
mov
jg
add
and
sub
dec
repnz
and
sub
insb
dec
sbb
pop
xchg
xor
data16
mov
in
outsl
fidivs
add
xchg
loop
jmp
pop
fwait
icebp
or
arpl
pop
xor
pop
addl
out
sub
sbb
jns
cli
adc
cwtl
add
dec
ss
adc
lock
xchg
adc
stos
inc
movsl
vpcmpeqw
pop
test
dec
xor
jp
rcrb
test
std
cltd
pop
sub
or
lods
xchg
popfw
jle
adc
jne
outsl
outsb
xchg
inc
inc
sbbl
push
xchg
inc
fimuls
inc
xlat
sub
adc
add
xor
jg
das
shrb
push
in
mov
movsl
jbe
inc
adc
jne
inc
lahf
dec
mov
jnp
mov
jbe
xchg
imul
mov
xor
sub
jne
push
sti
and
adc
cltd
or
sub
cltd
lock
add
movsb
ret
lahf
add
je
test
ja
mov
jne
cmp
inc
stos
mov
mov
xor
inc
push
shlb
pop
sub
xorb
add
pop
jl
out
cmp
addl
xchg
and
aam
mov
mov
inc
fmul
mov
loop
fs
pop
imul
mov
loopne
push
dec
xchg
mov
cmp
out
inc
cwtl
push
or
adc
insl
rcr
notb
scas
bound
loop
ja
jmp
inc
add
leave
pusha
outsl
sub
jne
dec
cmpb
xchg
popf
pusha
dec
mov
out
shrl
ret
dec
cmp
cmp
dec
je
fwait
popf
lods
int3
mov
cmc
dec
cmpl
repz
or
fldl
add
sub
clc
and
jne
add
fdivs
in
and
push
clc
lea
es
insb
jnp
pop
out
lock
xor
push
inc
xor
pop
and
mov
leave
jbe
mov
cltd
dec
movzbl
jns
inc
xor
dec
jno
andl
push
jb
out
xchg
jne
fistpl
push
jg
out
aad
test
xor
insb
aas
out
fwait
call
jne
ret
xor
push
outsl
adc
jb
dec
or
mov
cmp
mov
mov
arpl
sub
pop
add
repnz
xchg
pop
xor
jmp
xchg
add
pop
flds
test
sbb
in
loopne
rcrb
pop
xchg
cmp
dec
movsb
push
sti
movsl
shrl
adc
add
repz
sbb
xchg
fiaddl
je
xor
repz
mov
jecxz
enter
cli
sub
adc
fs
fwait
and
mov
iret
inc
js
js
xchg
xor
mov
dec
dec
sub
test
rcll
shrl
dec
int3
push
and
outsb
dec
clc
cmpsl
scas
clc
sahf
sub
inc
lcall
and
cmp
xor
icebp
dec
stos
lret
mov
rcll
mov
inc
aam
pop
in
or
mov
and
pop
sbb
sbb
xchg
mov
adc
je
mov
loop
mov
dec
fstpt
push
mov
fs
adc
inc
mov
sti
xchg
xor
shrb
sbb
add
inc
sbb
enter
xor
cwtl
push
and
add
into
popf
inc
sbb
and
mov
scas
jecxz
and
jb
pushf
inc
xchg
mov
lds
xchg
mov
loopne
xchg
aaa
into
add
mull
push
rcll
popf
daa
push
mov
sbb
jp
out
lods
lahf
cmp
nop
dec
fnsave
jb
arpl
in
divl
mov
xor
cmp
and
mov
dec
ja
lahf
int3
test
notl
iret
mov
in
bound
push
cmp
xor
shrb
mov
fs
test
test
andb
fs
negl
sub
int
addr16
in
mov
pop
int
ja
mov
push
fucomp
pop
mov
pushf
mov
and
cmpsb
pop
push
popf
dec
scas
lds
aas
and
jno
push
mov
mov
cmp
push
mov
mov
or
into
and
div
cmp
cmp
in
out
pop
loope
addl
fwait
pushl
aad
movsb
loope
aad
inc
mov
in
int3
sub
push
lods
inc
xor
addr16
loopne
or
mov
lds
adc
mov
push
mov
cmpsb
data16
das
dec
fcmovbe
fcoms
lahf
cmp
bound
sbb
push
out
iret
xchg
sbb
imul
fistpll
daa
mov
outsb
push
fldl
or
inc
es
cmpsb
or
push
xor
lea
mov
stos
fldcw
inc
xchg
add
gs
push
insl
mov
lds
pop
jecxz
pop
dec
dec
pop
inc
jns
and
sub
lods
or
inc
inc
push
into
addl
xchg
xor
add
ja
and
aaa
push
or
xchg
test
sbb
shr
arpl
mov
vcmppd
out
jae
mov
push
or
outsb
lea
out
xchg
sbb
cmp
push
dec
pushf
fdivs
cmpl
cmp
cltd
dec
cmc
push
ds
dec
mov
mov
dec
xchg
pop
inc
inc
and
sub
inc
xchg
adc
jg
jno
cmp
mov
push
and
dec
add
divb
cmc
mov
add
ss
xchg
sub
or
adc
scas
xor
xor
dec
push
cmc
scas
lret
loop
push
fcomps
mov
mov
mov
adc
fwait
push
fcomps
icebp
dec
or
cltd
push
les
aaa
repnz
adcb
lcall
or
adc
cli
push
dec
xor
pop
jg
addr16
jl
or
and
scas
xor
push
jecxz
lret
stos
and
test
mov
fisttps
dec
loop
jp
sbb
and
shl
pop
jo
or
push
mov
or
ss
lea
loop
inc
xchg
dec
idivl
add
cmp
ret
lahf
add
je
xor
mov
bnd
sub
dec
adc
ret
sub
mov
fiadds
test
arpl
loope
xor
mov
pusha
xor
sub
pop
ret
gs
jge
movsl
daa
mov
in
aad
pop
xchg
xchg
adc
fdivs
xchg
mov
push
fisttpll
rorl
shrb
js
mov
mov
dec
loop
mov
cltd
popa
daa
push
jecxz
rcrl
mov
in
aad
out
imul
inc
lock
dec
xor
cmpsb
mov
xor
mov
mov
insb
rclb
fxch
fidivs
mov
sti
inc
hlt
push
imul
pop
jae
push
mov
sarl
idiv
loopne
movsb
enter
push
sub
aad
into
pop
lcall
xor
or
js
outsl
cli
mov
cwtl
sub
add
repz
jmp
and
xchg
push
ljmp
xor
or
scas
je
mov
adc
dec
repz
pop
shll
cmp
mov
inc
sbb
dec
adc
mov
mov
pushf
data16
mov
sbbw
test
fidivl
jl
xchg
scas
scas
jno
xor
xor
cmp
add
mov
out
mov
and
rol
inc
mov
jl
mov
xlat
pushf
ja
stc
inc
fldenv
nop
push
mov
pusha
and
inc
xchg
xchg
jbe
shll
scas
sub
jb
div
aad
test
cmp
cmp
repz
and
negb
xchg
cmp
or
orb
xlat
pop
lods
test
and
clc
or
add
popa
test
fcomps
jg
je
push
lods
imul
mov
cmp
inc
push
jo
pusha
sub
sbb
and
jp
mov
jmp
xchg
jmp
loop
inc
sbb
pop
sbb
into
stc
ret
loope
lahf
imul
and
sub
adc
test
jl
dec
addl
push
leave
adc
js
andb
mov
mov
pop
divb
inc
cs
insb
and
aam
sbb
loope
into
fnstsw
popf
jge
pushf
daa
cmpsl
in
mov
pushf
cli
test
inc
mov
fcoml
int3
pop
mov
xchg
pop
outsb
mov
and
jg
outsl
jge
jge
mov
jge
push
sub
inc
mov
dec
mov
jge
cmp
jbe
jae
push
inc
mov
cmp
dec
dec
sbb
es
dec
or
cmp
and
push
jg
push
negl
add
pop
mov
cmpsb
and
dec
out
sbb
aas
jle
pop
rorl
imul
pop
insb
sub
mov
pop
cwtl
or
sbb
out
mov
sbb
mov
fdivrl
sub
inc
jg
and
lea
mov
es
mov
xchg
and
popa
enter
orb
iret
sub
cmp
std
cmc
movl
loopne
xor
int3
pop
mov
and
insb
add
insb
add
aad
or
daa
sub
addr16
mov
data16
mov
pusha
loop
mov
push
xchg
in
out
test
dec
dec
pop
call
in
nop
rsqrtps
scas
call
push
rep
push
jl
and
leave
mov
test
out
arpl
sbb
fstpt
shll
pop
test
stos
cld
mov
push
pusha
subb
mov
dec
jecxz
mov
lds
and
mov
popa
sub
fisttpl
inc
pop
ds
adc
jge
cmp
negb
scas
cmp
ret
fadds
cmp
pop
push
mov
pushw
mov
sub
aas
xchg
out
sub
adc
adc
data16
sbb
dec
sub
inc
in
push
cltd
dec
in
out
xor
xchg
in
test
pop
cld
fnstsw
arpl
xor
or
lds
sbb
cmpsb
test
outsl
push
dec
sahf
cli
lahf
pop
pop
mov
orl
es
subb
ja
push
mov
ja
xchg
fwait
les
adc
pop
addr16
mov
mov
push
ds
sbb
vmovlps
cmp
mov
jnp
lods
nop
or
xor
xor
cmp
xor
xchg
lret
cmp
xor
call
aam
outsb
test
clc
mov
js
pusha
push
and
ret
daa
adc
rorl
and
or
or
popf
xorb
mov
xor
aad
xlat
loop
leave
or
mov
jl
insb
jnp
push
jae
ss
std
push
nop
das
mov
pop
xchg
loope
xor
out
in
push
scas
xchg
xchg
inc
data16
fists
xor
mov
test
inc
imul
addl
push
xor
xor
movsb
insb
mov
std
addr16
and
mov
sub
mov
cli
xchg
sbb
mov
icebp
jnp
push
sub
lcall
popf
imul
push
dec
aam
pop
pop
push
inc
testl
dec
sub
mov
cmp
sarl
dec
pop
xor
cmp
jne
fs
inc
jbe
gs
or
xor
fildll
xchg
mov
jge
sahf
adc
xchg
xchg
lods
mov
out
jns
pop
mov
scas
jns
xchg
jl
repz
arpl
sub
lods
in
cltd
inc
gs
fiaddl
add
pushf
jle
add
pop
xor
lahf
in
icebp
cltd
dec
scas
cmpsb
sbb
xchg
sbb
mov
dec
sbb
mov
ljmp
orb
leave
lret
das
ret
scas
xor
xchg
cmc
nop
daa
daa
mov
add
incl
lods
or
in
mov
mov
sub
popf
sarb
xchg
test
jbe
shrl
push
pushf
add
mov
test
clc
shlb
add
cwtl
mov
aam
hlt
xchg
adc
adc
insb
adc
sbb
shlb
gs
adc
int
stos
push
jne
and
pop
cmp
push
shrl
mov
rol
push
shll
push
scas
or
gs
out
sbb
mov
fildl
dec
or
adc
push
push
je
lcall
mov
mov
das
jo
repz
adc
sub
cltd
adc
out
adc
mov
push
mov
sahf
and
push
test
insl
mov
xchg
cld
and
mov
movsl
andl
or
pop
outsb
mov
xorl
insl
aaa
pop
les
pop
mov
inc
addr16
pop
shlb
call
pop
icebp
xlat
mov
mov
xchg
mov
xor
inc
or
lea
adc
or
mov
call
mov
ljmp
sub
lahf
pop
adcb
ret
and
jmp
xchg
ret
pop
loop
cmpsl
popf
mov
push
push
in
div
add
out
inc
xor
adc
arpl
test
jno
jb
mov
jge
pop
cmp
inc
sbb
xchg
in
in
js
cmc
jns
scas
mov
test
jns
push
mov
jae
loope
xchg
sub
shl
sarb
or
jmp
out
cld
sbb
lret
or
cmp
fcmovnb
xchg
call
into
cmp
mov
or
or
mov
jge
pop
jge
sub
lret
subb
sbb
enter
dec
mov
pop
sbb
movl
dec
cmp
repz
and
mov
lret
ret
add
sbb
fadds
les
mov
in
std
xor
test
lods
cmp
std
gs
insl
push
push
inc
loope
add
push
pop
push
jb
testb
addr16
push
mov
fs
and
dec
aam
cmp
pop
data16
nop
fdivrp
pop
sarl
pushf
push
das
int
jecxz
in
cmc
pop
xor
pop
cld
xchg
int3
dec
enter
push
sbb
ds
and
mov
xchg
mov
xor
sbb
aas
xchg
pop
push
xor
sbb
xchg
xchg
repnz
pusha
leave
shrb
repz
and
icebp
pushf
pop
call
ret
xchg
repnz
imul
ss
mov
add
in
leave
mov
or
data16
push
data16
leave
cld
xor
sub
repz
fst
repz
mov
ret
call
mov
xchg
sub
jle
out
jno
mov
inc
andb
mov
gs
loope
push
inc
sbb
mov
shrb
add
inc
sub
dec
int
pushf
and
xchg
push
and
fwait
arpl
jl
adc
nop
sbb
imul
push
mov
cmp
or
enter
pop
cmp
shrb
adc
adc
lea
pop
lods
sub
je
out
mov
arpl
cmp
scas
test
mov
mov
sbb
pop
jmp
jmp
or
jo
ljmp
in
enter
imul
lret
cmc
mov
int3
push
jmp
bound
icebp
int
cmpl
fimuls
xchg
inc
pop
out
in
aad
inc
pusha
jge
and
jnp
in
jo
mov
or
cmpsl
imul
popa
lahf
dec
pop
dec
cmpb
mov
pop
mov
fistps
xchg
and
test
aas
cmp
or
add
pusha
mov
loopne
inc
adc
inc
dec
loope
popf
xchg
sub
hlt
and
mov
outsl
sti
lea
fcomps
mov
cmp
jg
mov
notl
test
mov
iret
mov
xor
jmp
push
lahf
orl
add
shrb
outsb
pop
sub
lds
insb
push
push
lcall
and
or
mov
jmp
xchg
fdivrl
xchg
lret
xor
mov
sub
gs
inc
xchg
adcl
xor
adc
sbb
iret
lahf
ds
test
or
jns
sub
xorb
jnp
fs
xchg
or
jmp
gs
adc
jnp
les
dec
dec
or
push
test
xor
imul
lods
or
std
pop
lret
sbb
mov
mov
sbb
lds
mov
inc
pop
push
or
inc
sub
dec
mov
mov
pop
cmp
aas
sbb
scas
je
outsl
cmpsb
out
push
adc
xor
divb
popf
jo
jmp
testl
add
push
jle
ljmp
push
jge
out
daa
jp
sti
out
scas
inc
push
loope
add
xor
dec
cmp
cli
int3
arpl
pusha
xorb
mov
jb
add
push
pop
jg
pop
mov
ds
pop
sub
out
or
sub
dec
cmp
daa
das
cmp
xchg
add
arpl
test
adc
bound
add
inc
xor
rcrb
adcb
mov
subb
sarl
sbb
mov
mov
and
or
xchg
aad
push
aad
sbb
xor
pop
ret
and
insl
mov
inc
cmpsl
or
ss
mov
push
neg
mov
outsl
dec
in
outsb
cmp
test
pop
cmc
xchg
add
inc
into
in
xor
dec
cmp
mov
insb
jecxz
jnp
in
inc
outsl
add
loop
xor
lods
mov
fbstp
adc
fwait
lods
add
outsl
jmp
test
cmp
jbe
xchg
rcrb
mov
sub
or
mov
fcoml
cli
pop
out
sub
and
daa
cmp
or
inc
cmp
fsts
imul
in
sub
sub
test
das
cmp
mov
mov
sub
xchg
mov
shll
mov
inc
and
cmc
push
cs
outsb
add
bound
pop
ret
pop
call
fprem
aad
mov
iret
adc
mov
clc
stc
mov
sbbb
sub
add
ret
jno
jne
adc
xchg
push
cmpsb
dec
cld
jge
cmpsb
jae
ja
cmpsl
and
mov
rclb
xchg
dec
clc
repz
dec
jl
ljmp
dec
dec
sti
adc
xchg
mov
and
cmp
movsb
jns
int3
iret
mov
sbb
xor
out
pop
outsb
out
mov
inc
arpl
adc
addl
push
jecxz
mov
cmp
jnp
sbb
gs
repz
lahf
test
roll
xchg
mov
jg
test
push
fidivl
aad
loopne
adc
sar
out
xchg
fldl2e
test
jl
xor
mull
mov
dec
adc
jg
orb
aad
jge
mov
jae
mov
arpl
jo
jno
rolb
pop
lods
mov
sti
in
mov
gs
mov
ficomps
daa
dec
jbe
sbb
lea
sti
test
mov
pushf
pop
adc
es
insl
sbb
ret
or
jge
mov
sbb
lret
pop
cli
hlt
neg
pop
idivl
sbbb
adc
fnstenv
scas
call
xor
addl
or
incl
jle
dec
xlat
xor
inc
push
js
sub
or
mov
out
inc
xchg
adc
mov
sub
cld
and
popa
sub
cmp
sub
lds
nop
or
cli
mov
xor
test
xchg
mov
and
xchg
push
cmp
call
call
push
cli
js
dec
lds
dec
or
test
insl
add
fst
ljmp
mov
or
testl
adc
mov
test
pop
jecxz
les
adc
mov
stos
iret
arpl
das
int3
mov
out
outsb
inc
jbe
mov
ja
icebp
add
jp
rol
add
sbb
add
sub
js
out
pusha
mov
lcall
push
mov
push
or
mov
andl
jg
cmp
push
mov
dec
shrl
add
ret
xor
pusha
lea
add
daa
in
call
jnp
adc
mov
shl
mov
adc
or
cmc
cmp
jle
jb
and
outsl
jns
dec
xchg
xor
or
movd
lcall
movsl
adc
mov
xor
and
popf
lods
bound
hlt
push
stos
in
les
xchg
mov
xorb
mov
pop
clc
and
cs
ret
or
pop
or
mov
push
jbe
iret
add
divb
in
jmp
outsb
add
je
arpl
lret
sbb
jcxz
dec
xor
fcoml
wbinvd
aaa
sbb
push
push
les
inc
sub
mov
lretw
cwtl
push
fsubr
mov
mov
inc
push
js
icebp
cwtl
lret
movsb
cmc
pop
cmp
cmp
sbb
inc
push
mov
mov
rcrl
dec
adc
mov
mov
mov
or
sub
push
jecxz
mov
loopne
fnstenv
aas
and
in
call
bnd
hlt
mov
popf
push
nop
xchg
cmp
jo
jne
test
gs
push
mov
xchg
test
push
xor
fbld
mov
or
int3
jo
adc
xor
mov
push
xchg
cmp
fwait
icebp
sahf
lods
sarb
mov
js
adc
js
in
push
pop
hlt
aaa
push
mov
dec
mov
add
xchg
aam
test
mov
or
jle
add
out
jnp
jecxz
in
loop
fiadds
lea
or
xchg
xchg
pusha
xchg
ret
pushf
cmp
push
aad
lahf
push
push
icebp
add
lds
fs
decl
add
mov
rcrb
outsl
xor
jns
push
jbe
cmpsb
stos
loopne
out
hlt
jns
adc
push
or
ds
or
pop
sahf
dec
gs
push
cwtl
pop
dec
punpcklbw
jbe
leave
sub
pop
out
stc
test
dec
adcb
rorl
cmp
jp
jl
adc
nop
jg
arpl
mov
and
inc
insb
pop
or
stc
push
js
xchg
repz
cmc
cmp
loop
push
fnstenv
jmp
cmp
pop
insl
push
pop
mov
xchg
cmp
dec
dec
and
aad
mov
dec
push
xchg
ret
daa
cmp
cmp
popa
and
cwtl
pop
lods
add
nop
push
dec
sbb
inc
sbb
dec
rcrb
and
aaa
pop
mov
lods
fadds
into
mov
lret
jno
cli
dec
sarl
es
dec
out
xchg
lahf
push
popa
xor
add
es
push
loopne
jno
lret
sti
cmpsb
in
mov
cwtl
mov
cmpsb
shrl
inc
clc
cs
movsl
addr16
jecxz
shl
addr16
add
mov
rep
mov
pushfw
lods
fnstenv
mov
in
add
xor
lods
xor
xchg
sub
push
shr
mov
xor
push
lods
mov
push
xor
imul
iret
sub
mov
xor
lock
jbe,pn
imul
pushf
mov
je
mov
popa
xor
dec
push
outsl
arpl
es
fwait
mov
loop
add
xchg
jb
sbb
mov
jno
scas
pop
out
mov
sub
movsl
mov
stos
loope
mov
sbb
sub
jge
rclb
daa
mov
and
fldl
push
addb
icebp
mov
mov
sub
aam
outsl
xchg
iret
or
jb,pn
ret
andl
inc
inc
jno
mov
dec
cmpsl
sub
in
insl
push
movsb
add
pusha
stos
sahf
jbe
lahf
xchg
xor
mov
jmp
or
push
jnp
jmp
sbb
enter
jne
and
jbe
cmpsl
sub
or
sbb
cmpsl
mov
fdivrs
hlt
mov
aas
mov
xor
sbb
lret
stos
xchg
enter
int3
arpl
out
xchg
scas
jmp
ljmp
mov
cltd
xor
cmpsl
mov
xchg
cmpsb
out
js
mov
jns
dec
pop
add
dec
pop
push
or
gs
xchg
push
stos
pop
ret
and
movsl
js
inc
fldenv
mov
mov
dec
mov
das
leave
js
popf
loope
sbb
aad
sbb
dec
lds
jecxz
xor
xchg
xchg
mov
addr16
cmc
pop
mov
pop
sub
dec
icebp
xor
outsb
dec
mov
ret
popa
dec
mov
sbb
jns
add
push
xor
push
dec
or
mulb
mov
shrl
mov
icebp
mov
fs
dec
add
data16
cmp
out
fisttpl
mov
enter
dec
mov
fnstsw
mov
ret
imul
daa
jbe
adc
sub
jl
sub
sub
dec
clc
dec
hlt
or
adc
int
mov
shll
ja
dec
xchg
inc
push
insl
sahf
sbb
or
dec
call
sub
test
sahf
pop
test
inc
popa
cltd
pop
das
pop
dec
push
ds
and
rcl
push
inc
cmp
iret
sarl
push
int3
xchg
movl
rcll
dec
xor
aaa
imul
inc
cs
push
pop
cmpsb
mov
divb
mov
or
outsl
add
sbb
fsubl
sahf
fisttpll
in
std
mov
dec
imul
iret
bound
imul
push
inc
sbb
inc
dec
shlb
mov
xchg
push
dec
xchg
jp
cwtl
push
insl
xchg
sbb
notl
sub
or
add
gs
fwait
and
xor
fildll
adc
imul
shll
lahf
sbb
shrb
xchg
xchg
mov
cmpsb
cmp
sbb
jo
inc
cmp
fisubrs
mov
mov
inc
into
sbb
imul
cmp
insb
lret
repnz
data16
sub
loop
adc
cmp
dec
cmp
jb
mov
pop
add
in
les
scas
ljmp
ljmp
jae
aaa
pop
insl
push
jecxz
dec
fnstsw
sub
push
jno
inc
movsb
dec
adc
xchg
in
push
insb
mov
and
pop
jo
movsl
xchg
inc
push
pop
aaa
dec
nop
je
enter
in
cmpsl
sub
sub
add
push
mov
outsl
push
fcoms
or
sub
ds
loop
inc
adc
cmp
out
xor
outsb
jp
mov
mov
xorb
test
andb
outsl
daa
inc
xchg
shll
xor
dec
lock
xchg
inc
fprem1
repz
cmp
jmp
insl
fwait
out
test
daa
xor
mov
mov
fistpl
adc
inc
bound
bound
sbb
enter
lret
pop
xor
mov
and
and
mov
mov
inc
fldt
push
fidivs
sbb
or
cld
xchg
lcall
cmp
iret
dec
or
fimull
leave
sub
sub
sbb
repz
sbb
js
dec
mov
cld
es
xchg
pop
adcl
das
in
mov
inc
aaa
fildl
out
sub
dec
imul
dec
loop
jne
loop,pt
adc
add
faddl
fnstcw
jnp
lods
gs
mov
push
xorl
or
sbb
add
sbb
cwtl
and
es
pop
xchg
push
mov
in
iret
pop
jne
xchg
mov
enter
imul
sbb
push
shrl
mov
icebp
cmp
fmull
mov
lahf
inc
fisubs
xchg
shr
movsb
cmp
int
mov
ret
pop
sahf
nop
sbb
shrb
push
ror
push
mov
and
adc
dec
dec
and
mov
push
lds
cs
inc
fildl
cmp
dec
xchg
stos
xor
movsl
inc
push
repz
add
cs
xlat
xchg
popl
cli
lods
jmp
addb
insl
ss
bound
adc
sbb
mov
sub
pop
sub
lods
xor
and
xchg
repnz
xchg
adc
addr16
dec
dec
lret
mov
jbe
rclb
jnp
mov
mov
lahf
jno
pop
rolb
sub
cld
and
fdivs
fiadds
mov
xor
sbb
and
popa
repnz
push
or
in
pop
mov
scas
movsl
inc
add
cmp
xchg
int3
mov
sbb
sbb
addr16
popa
cmp
clc
sbb
add
sti
sub
add
outsl
imul
testb
mov
rcrb
dec
and
sub
addb
inc
jne
int3
into
imul
pop
adc
ret
mov
dec
push
popa
add
mov
fdivl
imul
mov
out
xor
imul
inc
clc
inc
xor
insl
pushf
mov
sahf
xor
sahf
faddl
push
cmpb
addr16
jg
fsub
cld
or
sbbl
in
or
test
insl
rclb
pop
movsb
mov
enter
insl
adc
ljmp
testb
adc
jle
jmp
imul
ret
aas
mov
jbe
test
push
cmc
inc
out
repnz
lods
and
jmp
lret
add
enter
fs
int
out
jb
or
xor
dec
pop
dec
mov
daa
ds
aad
dec
pop
ss
cmp
lret
out
push
test
or
stos
in
das
jle
nop
inc
ret
shrl
shll
arpl
cmp
es
xor
sub
jbe
call
adc
subb
lea
stos
enter
scas
pop
or
cs
cmp
test
push
mov
push
mov
sub
and
ss
pushf
test
fsubp
pop
cld
dec
cmpsb
testb
ds
sbb
popf
sub
inc
scas
mov
mov
pop
cli
jnp
movsl
mov
loope
in
pop
fists
mov
std
fadd
pop
push
test
and
repnz
mov
ss
push
fbstp
stos
jmp
mov
in
inc
shl
pop
cli
push
jbe
test
adcl
in
xor
cli
mov
inc
int
cmp
push
in
and
test
sahf
or
es
movsb
jae
enter
lock
xchg
inc
ja
mov
enter
fisubl
iret
sti
loopne
and
fs
dec
and
jecxz
int3
arpl
jge
push
scas
xchg
popa
jmp
jg
cmpsb
xchg
popf
rcrl
xchg
into
pop
in
sahf
sbb
setns
sbbl
mov
push
pop
ja
movsb
jae
push
lods
decl
out
xor
roll
mov
loop
scas
dec
rorb
xor
xchg
cmp
jg
push
add
rol
fldt
pop
sbb
mov
mov
fnstenv
push
cmp
inc
call
pusha
lock
mov
push
pop
fcoms
stc
fcoms
jl
or
in
dec
pop
out
test
sbb
ss
dec
ss
shr
ret
cmp
pop
xor
inc
sahf
mov
xor
mov
xor
push
hlt
jnp
jnp
sbb
mov
fsubs
adc
jmp
mov
xchg
inc
jae
xchg
movsb
insl
sbb
ja
pop
out
test
jne
inc
sbb
add
test
mov
aas
subb
ret
pushf
and
lea
les
das
les
jecxz
push
mov
lea
insl
xchg
pop
adc
mov
out
pop
cs
nop
ds
pop
stos
push
mov
aaa
xor
daa
dec
aaa
mov
cli
push
inc
fiadds
fmull
push
add
andl
aad
cwtl
pop
cmp
in
lcall
das
fxch
dec
pop
dec
cld
ja
sub
cmp
jl
adc
cmp
inc
cltd
cmp
sub
sbb
jb
dec
cli
push
repnz
xchg
js
or
cmp
dec
jecxz
mulb
mov
mov
add
sbb
out
xchg
adc
jne
inc
or
add
pop
call
and
out
add
add
cwtl
xor
or
out
cmp
popa
lcallw
call
jns
jg
sub
inc
lret
in
data16
mov
repz
lret
lret
cwtl
rcrb
and
inc
loop
xor
bound
cmp
xchg
pop
and
xor
add
std
xchg
mov
xchg
or
push
mov
adc
pop
cmp
arpl
daa
lcall
or
adc
sbb
pushf
cmp
pop
xor
in
data16
out
jb
xor
insb
mov
jmp
pop
xorb
cmp
aad
aam
jg
stc
scas
pop
push
cltd
int3
ret
test
shrl
out
mov
xchg
stos
mov
jnp
mov
pop
imul
pop
lods
cld
inc
inc
xchg
jae
lds
js
data16
andb
cltd
add
pop
out
sbb
or
add
es
gs
outsl
push
pop
outsl
daa
addb
ljmp
mov
push
or
shll
cmpsb
pushf
int
movsl
sbb
mov
fwait
insl
ja
insb
mov
and
cmp
nop
xchg
in
shl
xchg
xor
jmp
loop
sar
repnz
adc
inc
jns
mov
ret
fs
les
pop
xchg
cmp
push
daa
jmp
cmp
out
jno
outsl
inc
xchg
mov
call
call
or
das
mov
ja
mov
clc
or
mov
sub
mov
std
dec
mov
in
pop
jge
test
push
out
xor
xor
sub
inc
inc
mov
jmp
lcall
scas
jbe
inc
into
xor
jl
data16
push
xchg
mov
fsubs
cmp
and
jecxz
pop
dec
adcb
rcl
inc
andl
lret
adc
and
inc
out
xchg
jno
stc
inc
test
sbb
jmp
push
inc
and
xorb
pop
mov
nop
daa
ror
push
cli
sti
enter
xor
popf
ljmp
cmp
and
mov
stc
pop
loope
lods
adc
and
cmp
and
clc
add
fbld
stc
inc
test
pop
lahf
notl
call
sub
sub
xchg
int3
outsb
aad
pop
int
sub
pop
ja
push
cld
fs
mov
inc
int
insb
push
popf
jo
pop
cmp
push
push
inc
adc
pop
lds
inc
push
sub
push
inc
xor
inc
push
sbb
ret
loopne
inc
mov
repz
cwtl
imul
nop
mov
pop
xor
subb
icebp
sbb
pop
insl
orb
ficomps
lea
mov
mov
pop
jmp
into
into
movsl
sub
stos
in
push
cld
mov
inc
add
mov
jecxz
inc
xlat
out
mov
cmp
pop
add
pop
xor
dec
stc
lods
cmp
bound
pushf
rorl
repnz
outsl
push
xchg
xchg
jno
notb
mov
or
out
cli
mov
cmp
loopne
fwait
add
xchg
mov
jno
aaa
inc
push
adc
mov
pop
xchg
cltd
pop
int3
xchg
mov
cli
test
aaa
jecxz
fildll
cmp
mov
fistpll
in
cmpsb
sbb
mov
xchg
adc
xchg
mov
mov
mov
sbb
xor
insb
mov
lahf
cmp
imul
int
xchg
mov
lods
stc
nop
push
lds
cld
out
xchg
sbb
call
lea
pop
test
out
cmp
mov
sub
push
outsb
mov
or
or
pop
ficomps
xchg
test
in
popa
xor
out
ljmp
nop
cmp
adc
jb
pop
jo
rol
dec
mov
shlb
sub
mov
sahf
and
pop
fidivl
in
std
or
aaa
pusha
pushl
stos
mov
fcoms
push
push
dec
insb
add
mov
adc
insl
mov
cld
or
xchg
xchg
pop
mov
adc
test
shl
imul
cs
mov
mov
shl
pop
sahf
pop
in
fldenv
jl
cld
mov
movntq
pop
mov
ja
jmp
add
jbe
sbb
mov
jb
lods
clc
stc
mov
mov
sbb
push
mov
stc
adc
xor
movsl
mov
mov
push
jmp
dec
and
sarl
pushf
or
lret
clc
cmp
cmpsb
in
out
mov
add
push
repnz
out
rclb
mov
pop
in
scas
pushf
pop
test
mov
dec
cli
aas
imul
movsl
xor
dec
push
jne
mov
gs
sbb
mov
mov
cmp
dec
sub
repz
inc
xor
flds
push
xchg
jo
xor
and
inc
mov
mov
ret
out
add
xchg
xchg
lcall
and
inc
leave
loope
cmp
jmp
cmp
orb
gs
shrb
icebp
shl
mov
lock
scas
fidivs
adc
cmp
jae
lret
and
popa
scas
mov
sub
adc
ret
aaa
mov
pop
sbb
mov
daa
cmp
push
pop
add
outsl
xor
jae
lea
test
xchg
xchg
adc
pop
push
xor
mov
xor
jns
dec
lods
jge
and
push
cmp
rol
aaa
mov
xchg
ljmp
mov
arpl
add
xor
addb
mov
out
out
fs
call
jne
add
pop
jmp
call
cmp
inc
xor
adc
jmp
aas
aas
mov
cmpsl
hlt
xlat
sbb
sbb
jbe
outsb
lret
aaa
clc
repz
nop
xchg
mov
xchg
inc
shrb
add
inc
in
sub
xor
test
fwait
mov
fldenv
or
daa
popf
orb
jmp
mul
nop
xchg
push
out
mov
loop
mov
movsl
daa
pop
sti
es
subb
imulb
enter
int3
loopne
gs
bound
xchg
push
cld
adc
outsl
adc
and
popa
mov
fldcw
jo
cwtl
push
filds
sbb
rcrl
jl
xchg
sbb
aas
jge
out
add
push
rorl
jnp
jmp
push
xlat
stos
shrb
pop
fldenv
ja
das
aam
sbbl
inc
sbb
mov
bnd
das
lock
dec
bound
push
stc
inc
ret
xor
xchg
popa
and
bound
xor
jns
adc
pop
test
loope
mov
and
jo
push
lea
pop
cmp
fbstp
sbb
add
fmul
das
and
pop
lret
sub
in
fxch
dec
add
int3
mov
xchg
int
or
mov
and
mov
dec
add
call
fdivrl
pop
out
arpl
jle
sub
xor
pop
add
fcomps
xchg
mov
int3
jg
cwtl
sbb
in
les
dec
mov
mov
and
out
cmpsb
lods
inc
adc
repz
or
ret
jl
filds
shl
jge
mov
fsubrs
lea
push
lcall
sub
std
ds
jmp
in
loopne
call
jp
lods
cmp
sbb
mov
out
bound
mov
and
dec
std
jo
subb
shr
ret
enter
lods
sarl
cmpb
xchg
mov
loopne
mov
jbe
daa
rolb
xchg
loope
test
inc
pop
xchg
mov
mov
push
leave
pop
cmpl
mov
jmp
xchg
mov
xor
fs
aad
out
cmp
and
xor
mov
out
sbb
fsubrs
insl
movsl
and
mov
orl
loope
dec
adc
movsl
dec
nop
out
lahf
sub
push
mov
test
ret
test
wrmsr
sarl
pop
mov
push
out
push
roll
nop
mov
inc
jmp
sbb
fadd
jns
les
out
clc
xchg
add
dec
xor
bts
insl
xchg
je
cmp
scas
outsl
and
mov
pop
jb
fwait
sub
lcall
add
mov
push
xor
fisttps
aas
in
iret
dec
inc
push
pop
ret
cmc
pusha
cmp
pop
out
imul
adc
adc
js
lods
xlat
pop
lock
mov
add
and
xchg
idiv
push
scas
mov
sub
mov
xchg
shll
push
lret
popl
mov
xor
mov
xchg
sub
cld
test
out
inc
popa
clc
jb
mov
push
mov
adcb
lcall
test
xorl
xchg
push
fimull
outsb
xchg
fistpll
add
loope
or
sub
js
mov
dec
xor
cpuid
add
mov
lods
xchg
movsb
push
cmpsb
pusha
mov
and
or
jmp
mov
push
loope
sti
aam
sahf
lds
sar
sahf
pop
lock
push
fmul
call
int
xchg
test
mov
add
xchg
sarl
inc
out
adc
test
pop
inc
xor
jne
and
sahf
pop
loopne
cmp
add
push
std
xchg
mov
pushl
sahf
or
sbb
xchg
out
imul
xor
inc
cmp
jecxz
mov
mov
sti
lea
loop
or
icebp
or
pop
add
add
push
pop
lea
adc
mov
xchg
mov
jns
or
xchg
mov
and
push
dec
and
sbb
lret
add
xor
adc
push
or
mov
jmp
push
cltd
jle
pop
jmp
sub
repnz
cltd
std
sahf
aaa
xor
push
fldt
push
clc
nop
out
iret
enter
jecxz
add
push
loop
add
daa
jl
out
push
scas
mov
hlt
test
ja
ret
push
push
pushf
pop
rcl
xor
jne
xchg
dec
lahf
push
and
push
mov
push
adc
aad
jbe
cmp
or
and
push
add
in
dec
shrl
mov
fidivrs
cltd
xor
dec
outsb
and
stos
mov
sahf
jmp
pop
add
je
mov
xor
cmp
cmpsl
int
addr16
adc
addb
cmc
rolb
mov
cmp
orb
pop
popf
popa
jp
jecxz
sbbb
rcl
pop
les
push
inc
stos
xchg
addr16
adc
pushf
imul
jmp
add
fwait
xor
inc
incb
cmp
mov
add
fmul
adc
sub
test
push
loope
or
inc
in
jmp
subl
repnz
fwait
in
test
movsb
xchg
daa
fidivl
xor
mov
cmpsb
in
je
les
insb
call
add
mov
test
ret
in
pop
fsubl
lret
ret
mov
sbb
adc
aaa
ljmp
and
popf
dec
sahf
fdivl
cmp
mov
cli
cmp
push
add
jmp
repz
popa
or
jge
jge
mov
mov
stc
sbb
ljmp
fisttpl
fwait
es
leave
loope
and
pop
fwait
movsl
cmp
jg
push
es
fnsave
outsl
cs
orb
mov
movsb
inc
inc
pop
xchg
mov
cwtl
testl
sub
iret
pop
ds
roll
js
scas
inc
fsubl
filds
push
imul
adc
sbb
pop
mov
pop
pop
lock
ja
xchg
mov
push
push
pushf
insb
dec
xor
insb
mov
dec
add
push
daa
mov
mov
adc
shll
jno
jg
mov
shll
lea
mov
jbe
cmp
push
inc
pop
aaa
fisttps
mov
lret
into
data16
push
ss
jbe
sti
movsl
gs
test
scas
mov
ret
pop
sub
adc
addl
and
adc
xchg
pop
and
out
pop
sbb
stos
inc
cltd
mov
icebp
arpl
call
inc
es
test
adc
scas
inc
sub
pop
in
fidivs
sub
pop
cmp
test
fdivl
loopne
mov
les
rclb
mov
jecxz
pushf
or
pop
pop
mov
mov
cmp
sbb
mov
jl
pop
sbb
rcrl
out
mov
pop
cmpsl
and
cwtl
mov
inc
pop
data16
call
cmp
push
inc
and
mov
pop
mov
adc
aaa
out
daa
pop
arpl
push
dec
ret
or
add
sub
push
jb
test
clc
push
cmp
insb
out
imul
aaa
or
push
popa
clc
mov
js
and
aaa
push
jl
test
xor
pop
js
jecxz
ror
jo
adc
gs
adc
das
imul
mov
int
push
lods
mov
stos
divl
sub
pop
shll
add
or
adc
shr
or
cmp
dec
fpatan
mov
pop
rol
add
cs
pop
push
jg
out
jns
dec
stos
lods
add
pop
lret
pop
mov
add
xor
or
and
dec
adc
xchg
jno
shrl
leave
xchg
sbb
dec
loop
pop
cmp
push
jo
pop
loope
aam
psrad
movsl
shl
sub
ss
dec
mov
aad
int
in
idivb
scas
push
adc
jae
inc
leave
in
inc
bound
mov
je
inc
pusha
jle
xchg
arpl
js
pop
mov
loop
ds
idivl
mov
inc
jecxz
pop
cmc
mov
mov
mov
fildl
inc
or
cmpsl
xorl
mov
fstpt
leave
push
mov
inc
int
cmc
push
loop
orl
nop
rcl
xchg
insl
mov
out
mov
in
das
sbb
sarb
or
sbb
lods
cmp
loopne
pusha
iret
jge
mov
outsb
sub
pusha
pop
cmp
js
pushf
or
push
cmp
insl
aam
movsl
add
inc
repz
fistps
mov
inc
jecxz
in
mov
call
jmp
or
sarb
mov
stos
fnclex
dec
dec
adc
jge
and
insl
adc
shlb
jbe
movsb
mov
xor
or
sub
dec
sbb
push
or
pusha
pop
xor
fwait
jg
ficompl
sub
dec
pop
dec
sub
enter
rol
out
fsubrs
inc
ror
jle
adc
pop
xchg
add
cwtl
test
xorb
div
sbb
jns
xor
xchg
aas
iret
push
xor
out
mov
dec
shr
adc
jecxz
lods
fbld
xor
inc
adc
or
lea
outsl
scas
cmpsl
dec
ja
cli
inc
ret
loop
mov
call
je
test
sbb
adc
mov
arpl
xchg
pop
push
jae
mov
call
push
adc
push
ja
and
mov
movsl
jmp
or
inc
xor
fcoms
jns
aas
sbb
pusha
inc
aas
dec
in
or
ret
mov
cmpsl
sbb
arpl
mov
dec
fs
xchg
mov
dec
dec
aam
fmuls
bound
sahf
inc
cmp
push
and
xor
sub
stc
inc
adcb
mov
sub
cmpsb
movsl
in
mov
imul
jbe
leave
xor
push
das
pop
mov
fcompl
ljmp
push
adc
add
push
adcb
jne
sub
xor
sub
dec
loop
inc
sarb
fstl
push
cltd
out
push
jge
fldl
mov
jmp
and
push
lds
shrb
xchg
aad
pop
inc
add
adc
movsb
and
mov
xor
mov
insl
negb
out
mov
sbb
mov
sti
int
lds
xchg
jnp
push
xor
jno
subl
cmp
nop
inc
test
test
add
daa
scas
test
mov
mov
loopne
std
adc
and
sbb
push
lock
fidivs
dec
or
outsl
jnp
mov
cmp
xor
sbb
mov
sbbb
push
fisubrl
jg
adc
fsts
or
aaa
add
fidivl
push
mov
loope
mov
cld
call
sbb
inc
ret
jns
mov
insl
mov
or
sub
pop
dec
cmpb
push
mov
jge
scas
mov
pop
add
or
mov
mov
data16
cld
add
dec
sub
into
into
inc
add
je
mov
ret
pop
add
jno
imul
in
mov
ss
data16
cli
cmp
xchg
or
aaa
push
imul
jle
sahf
mov
dec
mov
jp
pop
add
fisubrl
dec
fiadds
jb
popa
push
subb
dec
test
cwtl
int3
push
mov
scas
insb
fmulp
popf
rcrb
fdivl
shlb
pop
scas
sub
je
in
cwtl
cmpsl
test
lcall
sub
dec
pop
dec
movsb
or
mov
daa
adc
adc
fdivl
cmpsb
jmp
test
push
lret
icebp
dec
push
inc
out
cmpsb
xchg
adc
insl
test
lods
lock
sub
inc
pop
inc
in
stos
dec
and
push
mov
ds
aas
in
fcomip
das
dec
add
daa
and
adc
bound
xchg
std
sub
jmp
lea
mov
or
pop
add
ds
cs
imul
jbe
addb
addr16
adc
icebp
int3
negb
pop
sub
popf
sub
enter
pusha
sub
xchg
mov
or
pushf
jg
xchg
cs
xchg
dec
ja
es
mov
mov
ds
jne
pushf
pusha
or
jb
call
push
or
cmp
popf
es
pop
jbe
sub
shrb
xchg
adc
dec
imull
movsb
js
mov
mov
jne
push
sbb
fstpt
push
mov
mov
popl
pop
iret
cmp
call
fbstp
out
add
xor
pop
shrb
inc
incb
pop
add
mov
jne
and
es
dec
add
stc
nop
es
decl
stos
int3
dec
push
or
lcall
pop
aam
cmp
pop
je
sub
and
pusha
add
ss
jne,pn
cmpl
xor
test
mov
push
sub
popa
addl
sbb
pop
ss
rclb
cmp
test
inc
add
jge
xchg
mov
ret
push
scas
inc
lahf
outsl
or
stos
sbbl
inc
and
andl
in
inc
add
mov
adc
or
add
push
dec
add
xor
inc
fidivl
std
mov
in
xchg
xchg
mov
xchg
add
pop
adc
les
push
lea
into
add
add
out
xor
pop
pop
cs
dec
xchg
mov
and
dec
mov
or
pop
jns
mov
ljmp
sbb
jbe
jae
push
mov
out
sti
dec
and
out
mov
push
in
pop
jno
popf
mov
mov
adcl
add
and
inc
pop
mov
jae
xchg
gs
fsubrp
roll
push
repz
inc
mov
into
loopne
mov
cwtd
adc
xchg
xor
sub
mov
movsb
hlt
dec
popa
adc
ljmp
xchg
cld
data16
jle
loopne
inc
cmp
stc
icebp
repnz
dec
mov
repnz
lret
addr16
ss
icebp
cmp
lret
into
sub
jp
aad
lret
cmp
insb
add
sub
pusha
subb
jmp
hlt
rolb
notb
dec
jno
and
in
push
xchg
sub
mov
adc
jo
cmc
mov
sbb
inc
out
mov
cltd
adc
lcall
out
and
xchg
jg
pop
movsl
inc
xlat
sbb
jp
out
pop
adc
decb
push
fisubl
test
dec
mov
pop
sub
mov
jo
inc
or
mov
sub
ret
pusha
pop
movsl
popa
fs
xchg
loope
inc
fwait
lds
jecxz
mov
daa
mov
mov
leave
imul
dec
movsb
xchg
pop
enter
daa
mov
ret
sti
mov
pop
mov
add
dec
stos
addr16
push
nop
xlat
stos
mov
mov
jne
movsb
cmpsb
mov
lahf
cmp
inc
pop
dec
js
pop
and
in
push
push
and
and
push
fbld
in
dec
negb
xchg
popf
fwait
lock
fistpll
insl
dec
add
mov
inc
pop
xor
ret
out
sbb
sbb
addr16
xchg
in
xchg
mov
cmc
adc
or
cmp
sbbl
push
das
repz
and
cmp
jns
jmp
popf
xchg
inc
pop
decb
pop
lods
stc
cwtl
movsb
scas
mov
scas
inc
int3
popa
cmpsl
addr16
lods
sbb
jge
mov
xchg
in
xorl
in
fwait
pop
out
xchg
lcall
pop
cmp
bound
ret
insb
push
jecxz
mov
rolb
pusha
sarl
xchg
jbe
ret
movsl
ss
cmp
cli
and
mov
cmp
test
lret
sub
into
xlat
movb
dec
mov
pusha
dec
subl
in
add
shl
and
push
xchg
xor
pop
cmp
fists
xor
xor
xor
pushf
jbe
ljmp
add
test
mov
jb
jg
rcl
mulb
fadd
mov
push
test
insl
not
insb
and
add
lret
ss
scas
lods
sbb
push
mov
data16
lods
xchg
mov
jle
out
or
sarb
imul
popa
aad
cs
push
xor
loope
dec
sarb
xchg
add
inc
inc
scas
add
dec
push
jmp
imul
mov
pop
les
int
jno
add
paddsb
and
xchg
aam
sahf
jle
iret
xor
xchg
dec
add
lods
jne
sbb
pushf
inc
pusha
inc
loopne
push
insb
or
push
scas
or
and
mov
hlt
fldenv
enter
fstp
push
push
mov
fcoms
testl
ja
aas
mov
xchg
jmp
stos
mov
ljmp
imul
mov
ffree
fldl
and
lds
in
push
fistpl
jp
lods
mov
mov
or
push
cltd
dec
xchg
pop
xchg
and
mov
gs
data16
lret
cld
test
sbb
jp
les
sbb
ds
into
aas
push
and
cmp
cmp
fisubl
adc
inc
sbb
je
dec
push
test
push
sub
xchg
sub
and
pop
loope
mov
xchg
aas
xchg
scas
jo
dec
add
lret
aam
andb
inc
out
xchg
lds
movsb
pop
mov
test
hlt
jnp
stos
xchg
addr16
mov
pop
mov
fisttps
ret
lods
inc
xchg
cmp
dec
cs
loopne
mov
or
pop
outsb
clc
xchg
inc
lods
fdivr
mov
inc
aaa
scas
mov
repnz
jge
pop
clc
adc
sub
aas
stos
test
cmp
test
shrl
jge
add
out
cmpsl
mov
fidivs
popa
mov
aas
ret
popa
xor
in
mov
out
xor
gs
mov
lret
addb
mov
jp
cltd
jo
mov
push
sbb
int
lock
fstpl
adc
out
adc
stos
add
push
cwtl
jnp
xor
pop
in
int3
out
js
ret
xchg
cs
ficompl
fwait
mov
sahf
and
or
ror
je
lret
lret
int3
pop
pop
mov
shll
lea
es
xchg
dec
aam
negb
inc
leave
and
pop
xchg
adc
dec
jl
xlat
outsb
xor
fcomip
mov
add
cmpsb
repnz
jl
clc
push
int
xchg
andb
popf
cmp
sub
rcrl
add
dec
sbb
sti
mov
clc
dec
mov
out
clc
clc
xchg
or
pop
mov
mov
pop
or
push
ds
inc
js
loope
es
and
sbb
xchg
lret
stc
or
mov
pop
stos
jo
faddl
adc
rclb
ficoms
mov
out
imul
pop
mov
cmpsb
jmp
cmp
in
jle
pushl
pop
lock
bound
popf
pop
stc
fisttps
sti
jg
jge
sbb
mov
nop
daa
jle
out
xor
test
les
mov
call
sub
mull
cmp
int
clc
inc
dec
scas
mov
les
inc
scas
sub
mov
jmp
ja
sbb
sbb
mov
dec
inc
rcl
pop
fbld
popa
push
ds
push
out
pushf
mov
and
push
fistpl
inc
mov
shr
test
sub
pop
loopne
adc
out
mov
mov
dec
shll
scas
mov
rcll
lds
inc
mov
and
mov
lret
xor
cs
inc
mov
dec
lock
jb
shlb
aam
mov
scas
adc
cltd
add
lds
mov
adc
push
xchg
mov
in
mov
push
pop
mov
shll
js
hlt
mov
sahf
xlat
mov
pop
lods
mov
shll
mov
xchg
imul
mov
addr16
ljmp
jb
mov
out
repnz
pmaxsw
inc
mov
out
jnp
mov
mov
arpl
pop
adc
and
sbb
pop
pop
cmp
add
mov
xor
push
mov
and
xor
cwtl
outsb
sbbb
add
nop
loope
and
jne
loopne
cld
jmp
lds
sbb
cmp
lods
icebp
inc
xlat
int3
mov
mov
pop
mov
xchg
cli
daa
ja
test
ljmp
pop
imul
rcrl
pop
popa
push
lods
sub
in
fwait
xchg
and
ret
es
addl
add
out
call
and
subb
xlat
and
pop
aaa
mov
test
mov
jp
push
add
iret
push
out
add
lcall
inc
popa
stos
pop
hlt
sbb
mov
xorl
cmp
jnp
shl
movsl
mov
test
cwtl
gs
fsubs
and
stos
add
inc
idivl
mov
push
cmp
or
mov
pop
ljmp
pushf
inc
sahf
out
fisubl
xchg
or
xchg
xchg
dec
add
data16
cltd
rorl
out
andb
pop
cmp
outsb
adc
mov
xchg
cmova
fwait
mov
fnstenv
pop
xor
aam
jmp
je
and
addl
andb
mov
adc
insb
xchg
call
pop
out
lods
les
pop
mov
out
pusha
sbb
push
stos
pop
sub
xchg
mov
int
inc
push
add
and
xchg
adc
daa
mov
jbe
xchg
jl
xor
mov
cmp
or
jne
icebp
pop
pop
cmpsl
cld
push
fcmovbe
mov
adcl
xor
xor
das
push
cmpsb
inc
out
adc
fistps
cmp
repnz
adc
clc
fsubs
xchg
dec
mov
repz
dec
push
mov
sahf
ljmp
adc
ret
adc
icebp
inc
out
xor
popa
cmp
ljmp
scas
cmp
or
mov
sbb
mov
cmp
cmp
lds
cmc
subb
push
push
pop
xor
mov
into
xchg
in
addr16
imul
or
xchg
push
mov
sub
test
leave
fidivs
push
push
push
dec
dec
enter
fnstenv
and
cmp
data16
dec
push
mov
or
adc
cltd
jp
fidivrl
fdivrl
or
sbb
add
mov
cmp
pop
adc
mov
or
push
add
mov
xchg
hlt
jo
xlat
repz
mov
mov
push
and
popf
rol
mov
and
jmp
and
mov
je
das
xor
mov
cld
or
insl
mov
xchg
push
push
outsl
outsl
jnp
int3
rcrb
mov
and
in
sbb
fildl
loopne
rclb
and
ret
mov
rolb
fwait
and
data16
push
in
int3
xchg
inc
js
jmp
nop
pop
inc
mov
xchg
ret
add
sbb
shrb
js
daa
fsub
orb
mov
xorl
jae
sub
add
mov
push
scas
add
filds
cwtl
fstpt
xchg
inc
push
dec
mov
bound
sbb
ds
pop
sub
inc
add
xchg
rcr
arpl
sub
out
imul
push
adc
testl
cmpsb
fdivp
mov
sub
rol
popf
push
inc
xchg
repz
xor
lock
sti
int3
cmpps
mov
xor
mov
stc
xchg
pop
setp
cmc
sbb
gs
les
jbe
in
mov
add
mov
pushf
xor
add
sbb
nop
daa
cmp
movsb
cmpsl
and
xor
lcall
mov
std
dec
jne
outsl
add
mov
jp
sbb
cwtl
mov
cmp
in
adc
idivb
arpl
mov
push
rcl
and
mov
out
roll
aam
pop
mov
js
push
outsb
pusha
cmp
or
mov
leave
sbb
add
add
and
lds
ret
cmp
jmp
jbe
xor
vmread
sbb
std
push
out
push
pop
and
mov
outsb
add
mov
mov
fldenv
jns
xor
into
in
insb
divps
or
stos
fs
mov
add
lret
dec
push
adc
fwait
jp
lcall
pop
fdiv
dec
jb
inc
jnp
mov
test
sub
xchg
testb
dec
sahf
shl
mov
mov
add
adc
jnp
xor
iret
imul
or
stc
test
dec
xchg
mov
push
subb
xor
int
call
sub
push
cmp
mov
lahf
outsb
ret
int3
lods
pop
and
aas
das
insb
push
push
je
push
add
hlt
mov
push
ja
xor
fucom
fildl
pushf
into
mov
popf
fdivrp
ljmp
and
pop
push
adc
addr16
sbb
push
adc
icebp
adc
popf
pusha
rorl
imull
ret
sub
mov
shlb
mov
pop
addr16
bound
call
movsl
jg
adc
adc
notb
jmp
nop
rcrl
mov
mov
fstl
lcall
or
imul
shrb
pop
push
int
icebp
or
push
and
es
adc
stos
push
mov
arpl
insl
aad
push
mov
scas
test
movsb
adc
adcb
shlb
mov
and
xor
adc
mov
cltd
sub
rcll
mov
int
jle
and
mov
iret
gs
ret
mov
sub
lock
or
jle
push
jmp
xlat
loopne
push
loopne
cmpsl
sahf
mov
xor
rclb
in
push
shrl
adc
push
mov
inc
jnp
xchg
pop
mov
das
rcrl
dec
fsub
xor
jmp
in
ja
or
inc
cmpsl
cmpl
mov
cmpsl
and
mov
ret
js
js
aam
fldcw
adc
jecxz
out
enter
scas
and
loop
xchg
aam
jmp
arpl
dec
cmc
inc
and
jae
daa
jle
lods
pop
outsl
lahf
inc
clc
adc
je
jge
imul
jnp
mov
sub
and
mov
scas
sahf
in
fisttpl
outsb
lret
jae
das
push
mov
lea
add
sub
iret
adc
mov
dec
cmp
outsb
insl
fs
xchg
cmp
int
dec
out
inc
sbb
insl
test
inc
es
ss
inc
xchg
push
mov
imul
out
xchg
movsl
push
int3
sub
out
xchg
or
pusha
mov
or
rdtsc
fdivs
jne
test
xchg
sbb
iret
dec
fmuls
lcall
push
xchg
push
and
lcall
arpl
aad
cmpb
les
push
or
and
movsb
cmp
leave
test
scas
push
dec
dec
aaa
into
cmp
aad
xor
xor
stos
cmp
mov
movsl
pop
data16
mov
mov
push
ljmp
xchg
mov
lods
mov
invd
mov
push
mov
ret
or
js
in
mov
arpl
sti
xchg
andl
cmp
mov
notl
loopne
cli
sti
xchg
xor
mov
xor
dec
or
fwait
popa
nop
pop
mov
cwtl
scas
aaa
pop
hlt
xchg
sahf
inc
fdivrl
pop
add
lds
fwait
xlat
sbb
in
movsl
cmp
movsl
pusha
push
adc
inc
dec
std
cmc
ds
push
dec
popf
loopne
push
xor
outsl
adc
jns
mov
lret
mov
push
jo
std
shrl
repz
xchg
lds
push
sbb
cmpsb
or
sub
xor
xchg
cmp
enter
dec
or
aam
jnp
aaa
add
les
mov
jge
pop
repnz
xor
mov
push
orl
push
cmc
sbb
std
pop
icebp
pop
pop
inc
jnp
shrb
fwait
dec
movsl
call
lea
iret
and
inc
pusha
mov
dec
std
jo
stos
xor
test
shlb
jge
gs
rcrb
xchg
les
mov
loopne
cmc
loope
pop
out
adc
sub
sbb
add
movsl
jae
and
jp
aam
push
icebp
inc
les
imul
es
addr16
shrb
dec
mov
scas
cmp
push
push
daa
outsb
ss
ret
stc
decl
jmp
or
notb
sub
je
aam
lret
movsb
ljmp
dec
xchg
add
ret
jl
stc
out
ret
ret
outsl
adc
sub
push
sub
in
fnstcw
pop
sbb
lea
mov
imul
cmp
dec
xchg
add
lds
pop
xor
mov
mov
inc
adc
mov
sbb
dec
mov
mulb
scas
pop
pushf
jmp
or
ss
fcompl
xor
out
cmp
shl
jl
add
test
aam
push
inc
dec
jne
movsb
mov
add
test
or
dec
loopne
jmp
das
adc
int3
insb
ficomps
or
pop
cmp
clc
pop
andb
icebp
jg
and
add
outsl
mov
adc
lcall
nopl
into
sub
xchg
popa
push
ret
and
dec
shr
cwtl
push
clc
mov
inc
pop
dec
cmp
je
aam
cmp
sbb
add
push
xor
sub
mov
repnz
and
call
cmpsl
ja
adc
xor
enter
dec
loope
mov
mov
cltd
mov
mov
imul
scas
cli
movsl
inc
mov
and
pop
mov
mov
mov
jle
dec
hlt
push
mov
and
mov
call
stos
pop
scas
fcompl
lcall
mov
cli
xor
outsb
xchg
ds
xor
push
dec
sub
aaa
cmp
es
pushf
inc
jecxz
ljmp
stc
xor
in
loope
in
add
inc
aaa
push
call
push
pushf
jg
xchg
lcall
hlt
lea
push
popf
pop
sahf
ljmp
jle
outsb
jg
mov
leave
inc
sahf
adc
jne
pop
cmp
sar
push
movsb
jg
xchg
call
es
cld
mov
test
mov
push
sbb
jmp
ja
pop
mov
xchg
jnp
jl
addl
lret
pop
daa
arpl
sti
es
out
mov
xor
push
testl
mov
sbb
call
or
out
pop
add
mov
push
sbb
subl
add
jmp
cs
and
push
dec
add
loop
mov
push
test
push
popf
imul
mov
and
or
pusha
fld
ret
or
insb
push
xchg
and
rol
out
ds
jle
popa
shlb
out
out
fwait
cld
add
mov
int3
sarb
mov
out
clc
mov
in
leave
enter
inc
push
sub
lods
call
xchg
ret
je
arpl
out
jnp
clc
shll
repz
fistl
and
fwait
add
clc
cmpsl
mov
xor
jne
mov
mov
inc
cs
scas
ret
cmp
insb
jg
pop
pushf
mov
mov
std
popf
stc
xor
adc
jecxz
mov
sbb
insb
push
and
jo
out
xchg
mov
in
dec
in
cmp
mov
insl
add
jl
sarl
int3
jl
cltd
lds
sub
mov
cmp
add
fdivs
push
je
and
push
mov
dec
leave
pop
dec
in
mov
lods
fs
cmpsb
add
sbb
addl
js
orb
icebp
cmp
out
cmpsl
fwait
in
pop
jbe
mov
dec
data16
and
adc
and
sbb
jmp
push
jmp
kaddb
xor
ljmp
pushf
test
lds
dec
addl
shr
in
ds
mov
mov
fs
imul
push
dec
ret
cmp
push
gs
xor
cmp
mov
dec
rcrl
icebp
repnz
push
lcall
cld
mov
xor
mov
loop
in
or
xor
jo
aad
jae
inc
imul
dec
movsb
es
lds
ret
addr16
pop
js
jg
jecxz
into
cltd
icebp
sbb
fildll
fbstp
scas
les
lcall
iret
mov
sbb
mov
dec
ljmp
mov
je
outsl
jmp
pop
xor
xchg
fsts
add
sbb
add
adc
scas
inc
push
xor
jbe
dec
icebp
hlt
outsb
xor
mov
or
jno
lods
cmp
lahf
icebp
insb
sbb
add
sbb
jne
ja
fs
hlt
mov
mov
mov
pop
xor
xchg
jns
outsb
xor
les
in
push
fcoml
sub
xchg
push
inc
pop
sub
fdivrl
cs
xorl
pop
fisubrs
ja
ja
jne
mov
loopne
test
pushf
sti
insb
enter
pop
jge
leave
scas
cmpsl
rol
out
sti
nop
jl
cmp
pop
jnp
or
xor
dec
pop
mov
jnp
pop
lahf
neg
xor
imul
pmullw
lea
dec
fcompl
mov
push
push
in
push
jo
aam
jns
mov
add
sub
pop
cwtl
out
or
push
and
xchg
ret
sub
xlat
mov
fbld
mov
fsubrs
xor
notl
std
int3
mov
xchg
xchg
aaa
into
sub
cmpsl
mov
sub
push
adc
push
push
js
repnz
push
mov
fsubrl
mov
movsl
lret
mov
cmp
inc
popf
sbb
mov
dec
test
lods
movsb
pushf
lahf
rolw
xchg
ljmp
out
xchg
movsl
lcall
add
mov
and
jg
sub
push
jo
jb
pop
rol
and
push
xchg
adc
inc
jecxz
std
xor
add
movsb
cmp
adc
mov
adcl
loop
xor
inc
test
jl
hlt
icebp
or
dec
pop
mov
repz
in
test
or
mov
je
in
leave
xchg
sub
rorb
les
loopne
lcall
aam
jbe
or
jne
movsl
movsl
lahf
dec
dec
sbb
insb
leave
jg
dec
loope
xlat
sbb
cmp
roll
mov
push
imul
pushf
sub
xchg
ss
mov
or
popf
outsl
mov
mov
inc
loopne
jle
cmp
push
xchg
rcrl
idivb
ss
aas
rcl
mov
push
je
fstps
pop
js,pt
jo
dec
dec
out
ljmp
stos
inc
inc
cld
jecxz
int3
out
push
outsl
imul
subb
mov
insl
out
ret
and
or
test
shrl
dec
pop
out
dec
je
loope
lahf
imul
repz
inc
pushw
ret
les
mov
pop
sarb
sub
mov
fbstp
cmp
pop
fidivl
std
sub
mov
cmp
adc
cwtl
pusha
inc
inc
loope
dec
into
xor
aas
push
mov
pop
cwtl
jae
je
enter
imul
ror
mov
pushf
sti
fimull
xorl
sub
mov
pushf
jmp
xor
inc
mov
mov
ljmp
imul
mov
push
imulb
cmp
lret
inc
lret
test
lea
or
notl
dec
push
mov
or
jecxz
xchg
movsb
test
enter
sahf
imul
jo
in
adc
and
cwtl
or
cs
jo
pop
icebp
pop
outsb
mov
inc
sbb
xor
xchg
mov
inc
jg
mov
push
lods
lret
xchg
adc
leave
adc
cmpsb
imul
aam
ret
fcmovb
fdiv
xlat
scas
mov
add
sbb
cli
push
mov
push
adc
push
mov
adc
jae
sub
dec
mov
jge
ds
fdivl
push
sbb
jge
gs
push
lret
mov
xchg
das
add
cmp
cld
je
outsl
outsl
fstpl
mov
or
hlt
mov
lock
jno
leave
and
loope
push
lahf
push
fistpl
pop
pop
xor
call
or
popf
xor
and
ss
mov
loopne
fldt
lods
inc
mov
push
icebp
inc
xlat
lret
mov
scas
sti
sub
push
xchg
pop
inc
push
mov
orl
mov
push
aam
mov
int
lret
bound
jmp
sbb
sarb
sub
pop
xchg
std
lods
mov
test
mov
cmpsl
dec
push
xor
fsubs
in
ret
ljmp
fwait
or
xchg
hlt
movb
mov
or
adc
push
clc
and
adc
aas
loop
mov
push
sbb
addb
les
popf
cmp
lcall
and
cli
xor
aam
add
jne
mov
jae
in
dec
bound
aam
cwtl
mov
cmc
add
adc
cli
test
lret
inc
mov
in
aas
mov
add
test
arpl
fiadds
mov
test
addr16
push
fldt
cmp
cli
jae
sub
add
fimuls
jg
inc
test
fsub
jge
and
add
pop
scas
or
lock
xlat
outsb
es
cmc
aam
sti
sbbb
je
fnsave
fdivl
call
and
cwtl
adc
jns
push
stos
adc
jl
je
or
stos
or
sub
js
int
xchg
xor
xchg
je
pop
dec
xchg
gs
adc
mov
stc
cmpsl
ja
fstps
aas
dec
cmp
push
push
inc
cmp
in
pop
adc
repz
mov
mov
sub
inc
and
lret
cmp
jno
add
cli
push
xor
shrl
ljmp
or
jmp
ret
xchg
insl
cmpsl
inc
in
jb
fs
cmpsb
rclb
fdivrs
mov
shl
rclb
jo
add
daa
cltd
and
cmc
stc
hlt
dec
xchg
sub
aas
mov
jno
std
mov
or
mov
test
in
aad
pop
mov
stos
in
push
push
fwait
or
mov
sub
ret
lahf
ja
mov
xor
mov
pop
dec
pop
gs
xor
testl
inc
mov
xchg
lret
mov
daa
iret
decl
imul
fstps
sahf
clc
data16
mov
xor
adcl
arpl
andb
adc
mov
and
sub
imul
add
push
in
insl
pop
sub
cltd
xchg
xor
inc
jp
in
or
inc
xchg
imul
dec
andb
xrelease
iret
fldcw
data16
int3
loopne
jne
repz
lods
cmpsl
or
mov
loope
cmp
jle
sbb
fldt
js
fcoms
or
sub
icebp
jl
dec
mov
jmp
test
testl
jle
jo
add
aas
subb
jne
add
into
or
addr16
cmpsl
rcll
das
xchg
adc
lret
mov
lods
xchg
fsubrl
repz
fld
ja
insb
sub
inc
xor
sbb
mov
push
out
cld
btc
dec
sub
xchg
adc
lods
sub
dec
mov
pop
xchg
mov
sub
les
or
xchg
dec
lods
add
jecxz
cli
ds
shl
cli
xor
pop
push
xchg
cmp
aas
mov
xor
sbb
inc
int3
adc
fstpl
push
sub
cmp
das
pop
mov
cmp
or
shll
negb
mov
sub
add
jae
fsubr
in
lods
sub
push
frstor
or
jne
shrd
mov
in
aam
mov
daa
inc
bound
dec
scas
sub
pop
xchg
out
dec
adc
pop
cmp
mov
dec
pop
push
popf
aam
xchg
pop
dec
push
cmp
shl
rcr
and
shll
or
scas
xorl
adc
and
out
jo
bts
jno
shll
clc
fcmove
sub
push
test
fidivl
jg
sbb
stos
pop
pop
orb
xor
shlb
mulb
pusha
sti
xchg
xchg
cmc
cmp
call
daa
loope
cli
add
mov
notl
divl
fwait
sbbl
jecxz
sub
push
rcl
sarb
pop
mov
mov
xchg
icebp
stc
inc
cmp
ja
rcrl
fstpt
js
jns
ret
mov
enter
xlat
or
scas
dec
ret
jle
dec
mov
leave
or
int
xchg
sub
cmp
dec
inc
dec
rcl
ds
pop
cmp
insb
mov
repnz
test
and
ret
xor
mov
bound
pop
inc
loope
inc
cmpsb
sbb
test
fnstsw
call
inc
and
cmpsl
jmp
add
cmp
popa
and
movsl
xor
mov
xor
test
xchg
ss
xor
inc
pop
fcoms
dec
das
lods
mov
or
xor
pop
divb
sarl
ret
pop
out
outsl
rcl
iret
dec
jl
dec
sub
jmp
aas
push
mov
pusha
cltd
mov
cmp
cmp
int
xchg
sub
gs
sbbb
or
mov
icebp
jp
xchg
lret
xor
popa
fwait
mov
ret
push
fbld
fsubs
xchg
cmpsl
adc
shrb
lods
jge
mov
xor
out
imul
out
adc
sub
ror
xor
pushf
xor
and
sbb
and
data16
jecxz
mov
in
movsb
test
mov
sub
xor
pop
dec
or
push
icebp
stos
pop
pop
shll
or
mov
addr16
mov
inc
outsl
daa
dec
mov
sahf
aam
mov
mov
cltd
ljmp
adc
jecxz
mov
mov
pop
xchg
mov
mov
sbb
repz
inc
out
aas
jns
mov
sub
das
sarl
loope
cmpsl
fdivs
mov
and
lret
push
add
cli
push
lods
sub
fs
loop
pop
hlt
xchg
sub
mov
mov
in
mov
adc
in
aaa
mov
mov
mov
or
sub
xor
and
iret
loopne
rcrb
xor
call
daa
push
sarb
add
nop
ss
pop
mov
dec
dec
or
dec
mov
xchg
int3
xor
lods
aas
loop
mov
js
mov
fists
addb
sarl
mov
popf
and
xchg
test
data16
dec
mov
fdivr
sbb
mov
xchg
pop
and
inc
sub
push
xor
xlat
cmpsb
mov
mov
mov
lea
ficoms
mov
cs
addr16
mov
out
jge
ljmp
jge
pusha
mov
xchg
push
and
xor
das
ret
andb
mov
xor
in
mov
cmp
or
cwtl
sbb
jge
jl
push
pop
lret
inc
repnz
xor
and
out
push
push
frstor
jae
cmp
rol
gs
push
or
jp
insl
sbb
inc
xlat
into
cltd
js
mov
in
lahf
fldcw
or
cmp
in
adc
or
or
xchg
dec
jg
stos
adc
jmp
xchg
xor
fucomi
jns
push
cmp
aas
mov
sbb
push
mov
aas
mov
jns
xor
jnp
subl
jp
cmpsl
fsubs
or
aad
add
pop
sub
mov
xchg
out
push
cmp
push
std
jl
and
mov
adcl
dec
push
scas
cmc
and
in
or
test
aaa
out
sub
sti
mov
clc
fcmovu
notl
xadd
cmp
dec
and
enter
flds
pop
mov
jle
mov
jne
icebp
jne
push
orl
test
xchg
push
dec
adc
icebp
out
pop
test
sbb
aaa
rcrb
push
or
lret
sub
cwtl
int3
sar
adc
cld
push
aaa
cmp
adc
sbbb
int3
pop
movsb
es
fsubrs
in
ja
push
enter
dec
popa
xor
mov
pop
mov
mov
sub
aaa
sbb
pop
mov
and
dec
cld
dec
popf
mov
movsl
dec
or
ss
mov
aas
iret
sbb
dec
gs
ficoml
add
daa
icebp
adc
popa
inc
jle
jmp
mov
sbb
out
push
push
mov
mov
jl
dec
dec
fistpll
inc
xor
mov
leave
and
popf
pop
ret
test
es
push
fldenv
jo
loop
jle
in
outsb
mov
mov
xchg
int3
pop
cmp
in
sbb
pusha
mov
or
jo
fildll
rclb
aad
jecxz
push
mov
push
xor
bound
jnp
pop
cmc
xchg
insb
fsubl
pop
xchg
lods
mov
pop
mov
repnz
xchg
inc
pop
loopne
mov
lods
jo
pop
mov
dec
xchg
and
inc
dec
and
insb
arpl
dec
or
data16
into
enter
adc
xlat
mov
or
dec
movhps
test
ja
xor
into
enter
rcrl
aas
in
iret
dec
or
jg
je
dec
mov
sbbb
out
in
push
dec
stos
leave
sub
lock
sub
inc
push
jge
push
cmp
leave
in
rcrb
lds
mov
mov
es
mov
and
xor
dec
cld
test
test
xchg
push
lods
mov
and
adc
pop
lret
pop
loopne
and
sub
jp
mov
or
mov
xor
sub
push
inc
xor
sbb
dec
fnstcw
or
and
fadd
inc
std
push
cli
cmpsl
xor
mov
test
enter
mov
pushf
dec
rcll
dec
dec
mov
outsb
orl
popf
loope
shrl
mov
out
inc
inc
pop
or
sub
or
xor
sub
cld
mov
xor
push
jmp
scas
and
loopne
jb
jae
dec
mov
pushf
pop
in
xchg
fnstenv
xchg
outsl
inc
loop
mov
shlb
jp
and
add
mov
aaa
mov
lods
cmpsb
and
xor
push
mov
xchg
mov
pop
mov
sub
in
daa
dec
mov
lcall
repz
mov
or
mov
xchg
popa
xchg
decl
xchg
or
cmp
or
push
pop
push
push
addr16
movsl
leave
shrb
push
call
or
andl
ljmp
call
ja
or
out
popf
cmpsl
test
pop
fsubrs
or
push
mov
inc
xor
mov
mov
dec
mov
push
add
ds
shl
xchg
xor
lret
in
pop
rcrl
aas
or
imul
cmc
sbb
daa
cmpb
ret
pusha
fbstp
adc
clc
into
pop
in
scas
mov
cmpsl
mov
push
jg
andl
pop
test
rol
insb
rcll
rcrb
arpl
cld
sahf
inc
fcmovne
in
movsb
fsubl
and
push
sbb
out
insl
mov
add
sub
xor
add
mov
mov
adc
add
jae
and
dec
stos
mov
cmp
cmp
mov
loope
dec
xchg
xchg
xor
mov
shrl
cmpsb
out
add
or
into
test
pop
bt
out
adc
xor
mov
jl
movsl
ss
xlat
cmp
fdivrl
mov
cmp
addps
jbe
loopne
mov
aas
pop
fbstp
xor
pop
icebp
std
cltd
and
lahf
fcmove
in
ss
add
cmp
outsb
dec
mov
ds
nop
or
das
dec
push
aas
dec
inc
cmp
imul
popa
loopne
pop
aas
aad
inc
imul
jmp
pusha
jnp
out
pushf
data16
inc
fstps
gs
sub
dec
in
ret
mov
imul
rol
dec
insb
imul
retw
mov
in
pusha
leave
fldenv
dec
inc
lret
xlat
inc
aam
and
iret
lahf
test
or
int3
clc
filds
cs
pop
out
movsb
xchg
adc
adc
mov
or
sub
jmp
sarl
aas
add
mov
int
addb
mov
sbb
rcrb
add
iret
das
xor
fs
xor
cmpsb
push
or
movsb
cmp
lods
shll
les
dec
push
mov
sub
arpl
pop
xchg
inc
and
test
push
stos
xchg
lret
mov
mov
adc
push
jns
push
jecxz
jne
mov
fstps
fcoml
stc
cltd
xchg
sbb
sbb
push
mov
mov
rcrl
es
xor
cmp
cmc
jge
test
push
pop
jge
into
jge
push
mov
cs
fadds
les
rclb
frstor
jp
out
adc
int3
inc
lret
and
stc
or
jecxz
add
mov
push
or
mov
sub
inc
pop
adc
in
sbb
rol
testb
inc
lea
clc
pop
cmc
out
shlb
mov
sub
ret
xor
mov
ja
xor
mov
push
test
sub
int3
dec
or
outsl
fwait
cmp
xchg
cmp
addl
jl
push
je
cld
fxtract
or
mov
bound
and
xchg
mov
sbb
add
lods
imul
stos
or
out
insb
mov
cmp
les
cmp
jmp
icebp
push
xchg
loop
sub
insl
pop
sub
mov
pop
lock
mov
scas
sbb
sub
jge
cmpsl
cmp
mov
aad
in
std
fwait
pop
mov
loope
mov
inc
movsl
xchg
inc
dec
dec
adc
pop
bound
inc
ret
pusha
inc
pop
xor
xchg
xchg
mov
mov
adc
lock
mov
test
filds
testl
mov
adc
sbb
aaa
lods
add
fistps
pop
ds
xchg
pop
jecxz
fildl
xchg
mov
icebp
ret
jne
push
adc
outsb
xchg
pop
push
aam
arpl
cmp
scas
loopne
adc
adc
stc
insb
imul
test
loop
dec
fwait
adc
mov
add
pop
or
mov
gs
dec
lahf
cmp
dec
lcall
fs
pushf
lret
out
ficoms
leave
out
negb
xor
test
outsl
push
jno
rcl
pop
or
cwtl
out
sbb
xor
js
xchg
lds
loopne
inc
xchg
ja
or
imull
and
pusha
sbbb
mov
shrl
mov
xchg
ljmp
lods
inc
add
lea
lret
xchg
jle
addr16
fs
fistps
mov
jns
sbb
pop
bound
jns
push
inc
std
push
out
test
imul
push
shl
lahf
mov
ret
ljmp
in
or
pusha
stos
and
repz
xchg
add
je
sbb
cmp
addl
gs
push
push
xchg
add
mov
sbb
jmp
adc
xchg
sub
pop
std
adc
nop
xor
ss
ror
ror
jl
ret
push
clc
sbb
cmp
cmp
ret
call
test
fidivrs
call
inc
leave
xchg
flds
fs
arpl
icebp
outsl
mov
incl
cmp
jp
push
fisttpll
hlt
icebp
loop
pop
outsb
out
decl
addr16
push
sub
add
stos
sub
int3
and
adc
lret
scas
add
fbstp
ja
adc
cmp
jl
test
push
popa
push
call
dec
mov
arpl
xor
out
mov
sbb
outsb
inc
push
jno
iret
es
lret
hlt
lods
inc
daa
sbb
ja
inc
ficompl
mov
push
xor
movsl
cmp
inc
insb
inc
cmpsl
dec
pop
sar
test
xchg
sbb
int3
in
divl
pop
cmpsl
jns
fnstcw
call
gs
add
xchg
clc
and
cmp
enter
or
subb
mov
bound
and
fs
xchg
daa
xchg
add
test
cwtl
lds
aad
jmp
cli
out
jne
aaa
sbb
sbb
jmp
mov
adc
js
lcall
sub
jne
test
ja
add
jb
aam
int
jge
les
idivb
xchg
inc
jns
lcall
and
pop
sub
lret
jb
cs
pop
mov
pop
out
lea
lods
xchg
test
addr16
fstps
mov
dec
aaa
jecxz
push
movsl
addl
xor
push
negb
pusha
push
xor
sbb
push
insl
loopne
adc
cmp
stos
ret
mov
add
incl
data16
mov
xor
xor
andb
fildl
add
fcomps
adc
bound
std
sbb
in
sar
push
cmpsl
or
cmp
bound
inc
mov
imulb
or
pop
jg
push
xor
leave
pop
fidivrl
scas
lcall
mov
inc
jp
push
pushf
cmpsb
pop
push
hlt
pop
jp
fsubrs
int
mov
lds
imul
mov
jl
jnp
sbb
or
mov
ljmp
lea
je
aas
push
inc
add
jb
or
negl
jnp
push
sbb
mov
inc
and
pop
push
or
dec
scas
xor
push
inc
test
jnp
outsb
ret
or
xchg
pop
inc
jg
lods
jo
ds
int3
scas
dec
sbb
add
jae
test
fcomp
mov
xlat
outsb
fisttpl
cmc
mov
xor
in
mov
inc
in
faddp
and
mov
mov
stc
lret
jo
bound
dec
movsl
xor
mul
lret
sbb
std
add
insb
cli
repz
cmp
loope
push
rcrb
sub
push
mov
sbb
adc
les
adcb
insb
js
dec
sub
insl
ret
lcall
lcall
and
lret
clc
test
sti
int
mov
fstp
push
mov
inc
dec
cmp
shrl
out
add
mov
imul
push
test
and
xchg
add
xor
rclb
xor
shrl
leave
sub
addr16
inc
pop
mov
int3
aaa
stos
test
lret
scas
ds
in
nop
inc
test
pop
icebp
in
jae
jo
shll
mov
andl
les
scas
outsb
mov
sbb
cltd
test
jecxz
je
jne
mov
add
in
xchg
mov
xchg
mov
fsubs
mov
push
cmp
jecxz
icebp
aaa
in
mov
dec
mov
nop
jmp
add
int3
movsb
push
jecxz
pop
xlat
sub
popa
inc
add
sbb
int3
pop
insl
cmp
hlt
push
dec
je
aas
std
sub
mov
hlt
test
cltd
ljmp
mov
test
fistps
outsb
xor
mov
push
jmp
cmc
xchg
pop
lret
mov
loopne
cmpsb
sub
and
sub
push
fistpll
in
in
inc
nop
fwait
inc
cld
and
movsb
pop
mov
pop
mulb
xchg
add
addl
mov
adc
aam
add
lret
bound
clc
or
test
or
mov
iret
push
adcb
adc
int3
fs
sub
dec
cmp
or
fs
clc
add
and
push
aas
in
out
pop
sbb
aaa
out
fists
mov
push
mov
scas
scas
inc
lcall
dec
xchg
aam
add
in
lods
xchg
mov
lret
repnz
shlb
mov
dec
mov
sbb
add
cmp
xorb
movsl
cmp
in
js
pusha
rol
lcall
sub
repnz
repnz
fs
bound
dec
lds
cwtl
cmpsl
sti
test
shl
cmp
shrl
cmp
hlt
mov
jp
popf
lods
mov
and
incb
mov
stc
cmp
call
fs
pop
lcall
pmaxsw
cld
mov
xorl
jge
xchg
jmp
mov
ret
jge
js
sbb
clc
cltd
inc
adc
push
out
xchg
sub
out
mov
dec
aam
and
cs
iret
fistps
mov
loop
fldt
add
and
outsb
insl
stos
das
inc
fisttpll
or
jnp
mov
mov
or
pop
imul
cmpsb
inc
leave
xchg
add
add
lcall
mov
sub
cld
scas
adc
sub
inc
inc
movsb
test
mov
pop
jle
push
aaa
inc
add
and
jnp
mov
xor
data16
clc
aas
mov
jle
dec
jecxz
rol
cs
bound
mov
insl
push
aad
xchg
sbb
ret
pop
lods
sbb
es
in
fldenv
or
sub
jns
add
jne
pop
stos
add
cmp
int3
add
and
ljmp
fsubr
gs
jecxz
cs
in
in
cmp
lcall
push
nop
add
jae
es
inc
mov
arpl
mov
aam
inc
pop
mov
les
push
das
fbstp
and
loop
lcall
dec
fdivrp
cmc
mov
lods
push
mov
jb
lods
jns
mov
lret
and
mov
dec
sbb
xchg
imul
mov
mov
mov
add
push
fbld
es
mov
ss
test
sbb
stos
test
push
sbb
mov
shl
shrl
pop
enter
or
pop
cmp
mov
stos
daa
pop
in
and
and
inc
bound
xchg
jbe
imul
jge
hlt
ja
cli
test
push
jbe
inc
sbb
pushf
mov
or
mov
into
inc
idivl
pop
push
cmp
mov
pop
mov
imul
nop
pop
add
or
test
jnp
cltd
push
popf
lret
xor
std
fldenv
push
push
sti
aaa
std
or
push
xor
and
mov
and
or
xor
add
and
pop
jo
mov
and
inc
test
dec
xchg
adc
xchg
inc
mov
imul
mov
or
and
and
xor
iret
or
adc
pop
repz
cltd
cmpsb
mov
repnz
mov
push
stos
inc
cmp
adc
mov
mov
sub
dec
jns
pop
stos
imul
cltd
jno
pop
sub
sbb
int
out
xor
stos
mov
aam
in
mov
add
pop
outsb
cwtl
imul
inc
roll
test
incl
push
push
jo
xchg
cmpsb
arpl
adc
dec
jmp
bswap
scas
pop
imul
jno
mov
mov
jp
mov
inc
push
xchg
fldpi
mov
mov
cmp
in
arpl
pop
lea
loop
xorl
sub
xchg
add
rclb
stc
xchg
adc
xchg
in
pop
sub
out
cmp
je
loope
rclb
add
fcmove
gs
mov
xor
xchg
insl
popa
xchg
push
mov
out
cmp
add
mov
test
ja
xor
jp
test
push
xchg
sub
xchg
outsb
push
movsb
cmp
hlt
mov
nop
enter
add
lcall
inc
dec
imul
mov
sbb
xchg
dec
lods
xchg
xor
fsts
data16
adc
xor
std
or
add
inc
shll
int3
fiaddl
and
fs
sbb
mov
push
jno
sub
xor
sub
push
faddl
mov
jmp
adc
inc
movl
pop
jecxz
dec
adc
adcb
daa
ficompl
dec
popa
clc
jns
mov
xlat
xor
mov
test
sbb
adc
xor
pop
pushf
enter
jmp
aas
sbb
and
xchg
push
pop
test
insb
jns
loope
into
mov
fs
jecxz
push
inc
out
mov
mov
add
stos
out
jmp
cmp
mov
jno,pt
pop
outsb
subl
jg
pop
xor
mov
push
out
test
xchg
sub
push
in
pop
jl
pop
scas
jle
fwait
scas
iret
jg
xor
inc
in
ljmp
inc
addr16
push
imul
xchg
sub
dec
into
and
inc
mov
call
hlt
sbb
adc
cmp
insb
xor
in
out
sub
cmp
cmp
sbb
push
in
adc
adc
js
in
dec
pushf
jae
and
xchg
and
cmp
subb
ret
leave
fidivs
mov
cmp
xor
jo
jmp
cltd
into
jo
cmp
dec
jnp
lods
mov
inc
and
pusha
je
int
inc
adc
lret
xor
insl
or
ljmp
out
xchg
dec
fcomps
andl
shr
rolb
mov
std
mov
cmpsl
or
loope
or
mov
icebp
mov
mov
ret
lds
or
or
inc
or
jae
xchg
jl
sbb
or
sbb
test
cmp
mov
and
mov
leave
call
rcl
mov
mov
cmp
int3
das
in
out
cmovp
jnp
mov
cmc
adc
sbbb
gs
mov
jno
inc
rclb
clc
or
add
xchg
outsl
pop
ja
decl
lods
push
vmwrite
mov
ret
and
jbe
xchg
iret
test
sti
inc
inc
fimuls
jne
insl
dec
push
jnp
cmpl
adc
ja
js
lcall
lret
xchg
fwait
and
lds
mov
mov
cmp
nop
add
daa
std
cmpsw
inc
dec
pop
and
aad
xor
cmp
inc
aad
stc
sub
in
push
pop
ret
xor
jne
mov
jecxz
in
mov
sub
push
xchg
push
loopne
adcl
ds
scas
jnp
push
sub
ja
jp
lret
mov
xchg
daa
mov
jmp
fmulp
cli
dec
dec
mov
sarl
shr
imul
out
sbb
cli
mov
xchg
add
loope
cmp
outsb
push
pop
cltd
push
inc
cltd
push
push
sub
call
std
test
jne
xchg
outsl
out
xchg
ljmp
pop
mov
aad
stos
xchg
test
xor
ror
pop
sub
xchg
xchg
mov
cmp
xchg
xchg
pop
pushf
ret
fimuls
push
stc
mov
pop
vsubss
mov
imul
add
dec
mov
mov
sub
inc
and
mov
sarb
mov
xor
ret
ljmp
movsb
mov
sub
bound
loopne
mov
push
sbbb
outsb
pusha
inc
pop
call
xor
sub
sarb
pop
popa
or
fildll
xchg
aas
push
and
pop
hlt
lcall
jecxz
call
mov
mov
fnsave
xor
fcoms
inc
test
rcrl
mov
push
iret
push
xchg
negl
movsl
imul
popf
dec
test
dec
mov
scas
xchg
or
iret
add
xor
sbb
pop
push
lods
mov
and
popa
lods
pop
mov
add
push
bound
sbb
daa
jo
push
push
jo
cld
push
stos
inc
xor
es
inc
inc
xlat
jne
daa
mov
pop
xchg
dec
fimuls
call
adc
bound
add
mov
andl
sub
mov
dec
and
mov
pop
imul
pushf
roll
cmpsb
rcl
pop
enter
hlt
or
pop
pop
pop
dec
repnz
fwait
push
and
jno
cwtl
jne,pn
dec
in
mov
jle
pop
insb
jle
fnstcw
in
and
iret
int3
xchg
insb
sbbb
enter
sbb
call
lock
sub
mov
or
pop
adc
lahf
xor
pop
test
and
and
aam
dec
add
push
jp
enter
rcrb
jmp
dec
gs
dec
push
je
es
pop
push
cmpsb
mov
fnsave
push
mov
mov
pop
xor
je
jecxz
mov
psadbw
mov
mov
gs
ret
xor
push
jb
outsl
mov
push
xor
lods
cltd
add
sbb
cmc
mov
fwait
scas
outsb
or
scas
sbb
and
shll
sub
cmp
jno
stos
xchg
and
ret
cmpsl
dec
dec
test
imul
and
test
dec
inc
dec
call
outsl
pop
out
nop
mov
insl
cmpb
mov
repz
xor
pop
push
std
pop
into
jp,pn
addr16
repnz
inc
and
out
inc
ds
fistl
ljmp
jg
movsl
mov
push
cmpsl
cmc
aaa
es
call
inc
stc
pop
stos
rorb
sub
sub
sub
xchg
xchg
and
ficoms
iret
mov
ljmp
imul
push
xor
orl
enter
outsb
add
add
adc
mov
shrl
pop
xchg
lods
add
xchg
adc
cld
xchg
or
lds
cmpsl
cmp
sub
ljmp
lret
cwtl
loopne
inc
cmp
add
mov
and
pop
repnz
js
inc
pop
aaa
dec
fwait
jmp
jns
es
cltd
insl
ja
rcl
cmp
icebp
repz
and
shlb
add
call
test
inc
test
mov
test
jns
inc
movsb
ret
testb
jnp
dec
mov
or
and
jle
rclb
test
mov
icebp
outsl
jne
fstl
and
add
movsb
cs
pop
jae
or
bound
popf
push
xchg
lcall
jns
loop
mov
insl
out
ja
and
or
xlat
xchg
popf
jge
xchg
mov
lods
fstpt
mov
mov
test
cmpb
dec
inc
fsubrs
xor
pop
sub
gs
lret
dec
in
mov
inc
mov
pusha
jl
cmp
loopne
cmp
shrb
dec
mov
insb
cmpsb
jmp
lahf
orb
iret
fcmovne
sub
cmpsl
pop
out
push
iret
mov
and
or
inc
fisubs
push
xor
test
inc
and
jmp
or
fdivl
loopne
pop
or
and
mov
add
fadds
js
shrb
dec
jbe
cmpsl
outsb
sbb
mov
outsb
mov
inc
fwait
and
stos
push
ret
lret
scas
mov
mov
xchg
testl
ljmp
mov
repz
lahf
push
cwtl
nop
mov
pop
out
mov
jp
sbbb
cmp
nop
pop
dec
push
bnd
pop
outsb
out
test
call
movsb
sbb
sub
xor
cmc
mov
lahf
pop
in
or
out
and
or
lods
jmp
lret
xchg
jae
or
nop
jbe
dec
push
xchg
sub
inc
mov
mov
inc
fdivr
mov
sub
fs
dec
xchg
sbb
sbb
mov
fisttps
or
sub
sub
sub
cmp
nop
xor
jnp
mov
push
jne
xchg
iret
cmc
sub
ja
push
push
aas
sbb
cmp
mov
jl
sbb
mov
push
or
pop
inc
mov
jge
outsl
hlt
mov
lds
xor
scas
sub
mov
mov
mov
in
mov
loopne
repz
jmp
dec
sbb
mov
clc
mov
data16
in
mov
mov
test
ja
daa
out
adc
and
xor
and
psubd
mov
aad
cltd
std
test
dec
mov
mov
scas
jb
dec
cmp
mov
fstpt
shrl
hlt
int3
rcrb
mov
inc
xor
test
fimull
out
cmpl
daa
stc
fidivl
mov
subl
mov
jmp
adc
andb
cmpsl
out
addr16
ja
cmc
or
push
sub
or
outsb
bound
xchg
movb
or
test
or
or
xchg
incl
psubsw
pop
cmp
pop
scas
or
loopne
mov
jns
add
mov
jbe
push
mov
and
imul
sub
ss
mov
gs
mov
lret
pop
sti
xchg
xchg
adc
mov
add
mov
loop
cmpsl
enter
jnp
sbb
pop
xlat
jmp
inc
sbb
or
mov
movsl
push
sahf
test
inc
and
lcall
int3
xchg
nop
xchg
pop
adc
es
ja
mov
sbb
inc
into
push
mull
cwtl
push
add
mov
popf
xor
into
mov
int3
gs
and
mov
mov
xor
sbb
movsb
pop
sbb
sbb
fcomp
xchg
outsl
push
jb
sub
outsl
and
dec
mov
loopne
mov
popf
into
movsl
dec
cltd
cmp
jmp
adc
jg
rorb
and
sub
sub
and
mov
cmc
mov
daa
loop
jo
je
add
pop
push
push
movsl
test
or
jmp
xchg
popf
out
leave
inc
or
bound
repnz
mov
fstpl
or
fidivrs
jno
and
xchg
stc
popf
addl
push
pop
xchg
sub
dec
lret
fs
ljmp
mov
push
inc
mov
arpl
add
cltd
icebp
xlat
pop
fldcw
and
jmp
stos
mov
lock
test
mov
fwait
xchg
jmp
xor
fmull
xor
adc
mov
sarb
divl
movsl
imull
mov
aaa
push
adc
mov
dec
movsl
mov
jae
inc
pop
inc
cwtl
pusha
clc
pop
sbb
sub
cmp
add
dec
push
idivb
sub
cld
inc
xchg
and
outsl
je
or
cmp
add
pop
nop
insl
mov
adc
dec
push
jae
fsubs
mov
pusha
into
adc
dec
fs
pop
and
mov
cmp
cmc
stc
mov
add
dec
ficoml
out
mov
or
mov
jle
sahf
out
pop
xchg
mov
int3
jecxz
cmpsb
mov
or
divl
xor
iret
jecxz
xchg
imul
cmp
dec
out
pop
push
ret
dec
add
jb
out
daa
out
sbb
add
into
cmp
in
out
dec
push
cmp
loope
dec
test
repz
sbb
and
xchg
xchg
push
scas
adc
insl
inc
call
jo
das
lret
lret
mov
mov
pop
in
jp
push
hlt
stc
cmpsb
mov
nop
mov
xor
dec
enter
outsb
and
pop
or
sub
mov
or
adc
loope
mov
leave
lea
roll
dec
mov
fwait
cmpsb
fisubrs
test
mov
cmpsb
sub
mov
cmp
mov
aad
sarl
lds
xchg
out
mov
fs
test
dec
mov
push
jo
push
ja
pop
mov
test
aad
pop
adc
xor
insb
arpl
addl
or
fdivrp
cmpsb
push
out
dec
and
mov
arpl
sar
aad
sub
fbld
add
test
mov
ss
push
xchg
dec
and
stc
jb
loope
lods
dec
mov
jl
addr16
and
cmp
push
jmp
and
xchg
push
repz
or
push
ret
pop
mov
xor
adc
ret
pop
fldenv
pusha
cli
test
ret
imul
in
popf
mov
mov
movsl
mov
xchg
pop
cmp
mov
imul
mov
xchg
jo
xchg
testl
cmc
dec
push
addr16
adc
aas
dec
rolb
xchg
imul
jo
pop
xchg
jne
hlt
mov
pop
mov
lock
shl
mov
mov
inc
mov
and
subb
adc
pop
lret
in
lret
sbb
ds
xor
mov
leave
addb
leave
repnz
inc
sbb
xor
mov
js
sub
inc
bound
cmp
rolb
das
repnz
inc
pop
in
cmp
icebp
leave
int
out
pop
mov
xchg
sbb
sbbl
jl
test
ljmp
cmp
xchg
nop
inc
outsl
sahf
xchg
aaa
pop
scas
cmpsb
ss
icebp
out
dec
dec
lahf
pop
loope
aaa
cmp
jg
loopne
push
dec
lret
inc
jns
pop
fidivrl
fwait
add
nop
and
mov
call
add
push
aam
stos
or
iret
fwait
stc
mov
lahf
fidivrl
mov
lret
add
jb
jnp
gs
popf
xor
xchg
or
aaa
jl
test
loop
pop
adc
or
mov
cmp
xchg
out
cltd
sbb
jecxz
jecxz
rcrb
add
rclb
bound
xor
or
scas
pusha
shr
call
dec
sti
push
mov
das
cmpxchg
dec
fimull
mov
mov
push
push
xchg
mov
retw
lcall
mov
lahf
loope
lds
mov
pushf
xor
inc
pop
mov
push
mov
mov
adc
dec
repz
int3
enter
mov
and
pop
cmp
enter
adc
cmp
xorl
loopne
and
mov
jae
cmpsl
mov
mov
subl
fsts
dec
or
cmp
aaa
stos
dec
movsl
push
jb
mov
lea
and
push
sbb
aam
sub
out
mov
and
jl
pop
sbb
test
add
das
mov
sub
xchg
jno
mov
adc
pop
cmp
pop
cmp
dec
test
add
jae
outsb
inc
jbe
xchg
test
shrb
lret
jmp
xchg
lods
andb
and
pop
les
cmpsb
dec
in
xor
mov
loope
mov
mov
loope
xor
or
mov
iret
jo
lahf
repnz
mov
jmp
insl
ja
fbld
test
shrl
hlt
outsl
sub
fld
sahf
lea
mov
pusha
push
push
xor
xor
and
cwtl
fucomip
inc
fs
cld
es
inc
sbb
jb
fistpl
aaa
cmpsb
push
add
jp
xchg
push
jo
inc
adc
and
aam
cmpsl
mov
mov
enter
sahf
sbb
lahf
pop
xchg
ljmp
jne
xchg
sub
dec
mov
stos
shrb
xlat
sub
xchg
scas
xchg
das
or
out
xor
cmp
and
mov
adc
xchg
or
add
sub
fstpt
mov
dec
xchg
xor
shrl
adc
scas
xchg
loope
or
sbb
push
int
inc
leave
in
add
ljmp
jl
cli
cmp
popa
adc
lahf
ret
loop
or
cmp
stos
pop
add
push
sub
add
lret
scas
mov
subb
push
repnz
das
mov
stc
push
jmp
loop
mov
shll
pop
out
mov
jne
sbb
cltd
lea
adc
pusha
or
xchg
push
imul
pop
out
in
call
adc
test
mov
cltd
adc
pop
cld
inc
aas
adc
scas
stc
aad
xor
xorl
dec
je
inc
xor
sbb
test
ret
je
loop
imul
inc
cmp
and
xor
push
js
aam
lock
pcmpgtd
shl
pop
cmp
mov
fnstsw
xchg
xchg
and
and
in
iret
sahf
xchg
pop
push
jb
repz
subb
sub
aas
jl
jl
mov
ret
jl
sub
js
adc
fiadds
repz
and
and
es
or
xchg
ds
stos
adc
jns
bound
mov
dec
xor
dec
shrb
out
xor
pop
adc
das
or
sub
adc
jb
nop
mov
jb
push
fs
mov
pcmpgtb
cmpsb
xlat
cwtl
add
mov
scas
mov
test
jmp
ds
cmpsl
out
pushf
jg
test
in
mov
mov
inc
in
pop
add
sbb
ret
jl
call
inc
sbb
outsb
fsubrs
fimuls
adc
jmp
jmp
jecxz
popa
or
mov
jle
jno
outsb
xchg
dec
leave
jb
cli
imul
fdivrs
mov
and
pop
out
push
loope
xor
icebp
popa
test
std
inc
test
cmc
mov
notb
cmp
arpl
sbb
mov
and
dec
mov
jbe
xor
and
test
in
jle
in
lea
lods
inc
leave
xchg
add
cmp
push
lea
aas
les
mov
add
mov
inc
mov
insl
leave
mov
xor
pop
mov
mov
sahf
test
xchg
pop
mov
mov
stos
loopne
pop
repz
adc
cmp
lret
and
std
adc
xchg
leave
sub
dec
fwait
xchg
lods
gs
lods
push
push
mov
sub
dec
daa
jle
lock
pop
inc
aam
jmp
dec
xchg
inc
stos
add
xor
mov
inc
hlt
pop
lcall
add
xchg
mov
cmp
fwait
in
add
mov
inc
shlb
cwtl
das
lea
stos
sbb
ljmp
xchg
add
sbb
repnz
scas
sub
xor
cs
pusha
xor
or
int3
sub
shll
cmp
lods
cmpsb
pop
xchg
add
mov
dec
movsl
ret
xchg
enter
arpl
sbb
add
xchg
mov
and
jns
push
lret
frstor
aaa
push
jg
mov
cmp
push
mov
popa
iret
inc
rcrb
inc
fucomi
ficoml
dec
nop
bound
ret
sbb
sbb
adc
test
mov
ds
test
or
stos
add
addr16
lcall
pop
add
pop
stc
and
aam
sub
or
dec
pop
dec
jp
shl
fdivrs
ja
jne
sub
xchg
loopne
dec
dec
int
dec
push
mov
ret
fbld
sbb
sbb
jecxz
jo
jp
pop
les
pop
ja
pop
cmp
and
push
pop
fcoms
out
mov
outsb
stos
lock
js
adc
push
inc
mov
sahf
cld
mov
in
lock
fnstenv
sbb
in
inc
pop
adc
xorl
inc
mov
fs
fsubrl
sbb
insl
scas
sub
jae
out
mov
cmp
mov
addr16
mov
inc
lods
ja
xchg
sub
cwtl
jnp
sbb
mov
aad
adc
mov
push
rcr
cmc
out
pop
pop
test
cmp
aaa
outsl
stc
cwtl
lock
mov
sub
rolb
sbb
ret
aas
adc
jecxz
clc
in
pusha
out
ret
das
test
call
mov
mov
xor
inc
add
pop
lahf
cwtl
push
lock
ss
adc
dec
dec
fwait
push
fistpl
mov
fs
xlat
adc
jmp
pop
aaa
inc
xor
js
xchg
out
dec
cltd
or
cmpsl
daa
xchg
xor
nop
mov
push
xchg
jns
inc
outsl
sbb
sub
xchg
xchg
jmp
push
xlat
out
cwtl
mov
fstpl
xchg
xchg
add
dec
test
call
and
divl
and
mov
add
ss
into
int3
jo
out
sub
into
fsubrl
lret
xor
jmp
fildl
sub
xchg
lcall
pop
adc
in
arpl
imul
or
jge
jo
popa
pop
jmp
je
inc
pushf
add
es
dec
jne
pop
sub
jge
pop
lahf
fcomip
xchg
sbb
outsb
into
cmpsb
mov
jnp
push
xchg
decb
adc
or
hlt
xchg
cmp
lahf
popf
stc
xchg
out
adc
imul
movsb
and
push
test
mov
sbb
ljmp
xchg
aad
add
movd
int3
out
dec
sub
mov
dec
loop
stos
xchg
lods
mov
pushf
pop
subb
fs
adc
aam
fwait
cmp
icebp
mov
aad
dec
aas
pop
fneni(8087
jbe
roll
cmp
insb
mov
jg
sub
cmp
pop
adc
pop
fistps
mov
mov
test
xor
adc
push
out
mov
cmp
cmp
add
scas
inc
sahf
pop
insb
jle
inc
push
fstpl
incb
pusha
dec
dec
dec
sub
scas
mov
cmp
not
hlt
jle
in
adc
pop
hlt
inc
cmp
insb
cmpb
into
daa
xchg
push
movl
pop
push
fcompl
aas
inc
sub
cmp
xor
xor
push
es
sub
cli
fnstsw
hlt
iret
testb
mov
cmpsl
test
sahf
mov
cmp
es
sbb
inc
pop
cmp
mov
cmpsl
movsl
mov
out
sbb
movsb
dec
repnz
mov
scas
cmp
push
shl
inc
cwtl
mov
gs
ja
cli
dec
fisubrl
sub
xchg
testb
jmp
out
adc
jg
jae
aam
jno
jmp
mov
inc
clc
mov
sub
mov
rolb
mov
mov
cmpsb
mov
lds
cmpsb
inc
xchg
test
arpl
add
jne
lods
adc
push
fidivrs
lret
icebp
stos
int
out
dec
dec
gs
xor
ret
rclb
jle
and
les
imul
enter
adc
dec
fnstcw
push
loope
fwait
arpl
lret
push
xorb
lods
cmp
lods
mov
pop
scas
jmp
in
xchg
inc
fsubs
inc
adc
pop
mov
mov
sarl
pop
sub
sub
mov
das
mov
or
mov
pop
hlt
bound
xor
cmpl
pop
pop
or
or
jle
aam
inc
lahf
sbb
je
sbb
fsubl
inc
dec
cs
xchg
sbb
pop
int3
push
fs
inc
sbb
inc
rcr
pop
mov
add
call
xchg
bnd
bound
or
sbb
loope
sti
in
testl
popf
pop
mov
iret
stc
out
mov
dec
lcall
or
xchg
mov
mov
gs
xchg
jg
div
xor
enter
mov
and
jns
xchg
add
jo
sub
jle
sbbl
cmp
mov
movsl
cmp
mov
ds
push
movsl
rol
add
or
in
and
inc
pop
mov
add
popa
out
jmp
sti
cltd
popa
sub
pushf
mov
and
and
in
adc
inc
inc
xchg
xchg
enter
push
in
mov
insl
and
inc
mov
push
xchg
popa
jl
jbe
jg
jmp
and
mov
loope
shrd
xor
jmp
imul
xor
adc
or
xchg
sarl
jmp
cmp
jp
mov
or
dec
push
jae
xorb
lcall
cmp
and
or
fimull
push
adc
pop
dec
mov
fdivrs
test
imul
gs
and
adc
rcl
das
dec
pop
scas
jg
cltd
sbb
pop
push
jmp
jle
adc
cwtl
add
imul
ret
icebp
push
test
or
dec
inc
jbe
stc
adcl
xor
fadd
xor
mov
lock
sbb
push
sbb
push
daa
in
mov
sbb
sub
insl
out
gs
lods
push
mov
imul
sarb
push
cmp
test
lcall
arpl
xchg
xor
lret
movsb
or
sti
xor
adc
pusha
push
aam
das
scas
mov
sub
out
ss
mov
push
jp
mov
ja
fdivp
fnstenv
xchg
ja
and
mov
pop
dec
in
sbb
pop
xchg
sub
pop
mov
xchg
add
lret
add
or
cmp
inc
cmc
mov
jae
insl
dec
cmp
into
lahf
out
mov
inc
int
push
popa
gs
aam
sub
xchg
mov
pop
jb
push
ja
jo
cmp
daa
stc
jl
sub
loope
enter
cmp
jae
xchg
movsb
imul
mov
fidivl
sbb
shrb
dec
pop
sahf
xchg
outsb
inc
sub
arpl
inc
ljmp
xchg
jo
scas
andb
mov
push
jbe
nop
adcl
inc
aas
sahf
clc
icebp
test
sti
movsb
pop
pop
test
pusha
orl
mov
adc
repz
lret
jb
xor
sub
mulb
push
push
pop
jne
mov
lret
jge
shlb
or
inc
jp
gs
cmp
add
adc
xchg
loopne
mov
or
and
xchg
or
lock
push
sbb
pusha
decl
scas
sbb
adc
cmpsl
pop
movzbl
out
and
call
sbb
xor
xchg
and
out
fsubrp
daa
stos
mov
orl
sbb
sub
shr
mov
dec
cmp
jmp
pop
repnz
shll
sbbb
dec
mov
lock
iret
shll
ja
scas
les
and
mov
push
mov
scas
out
mov
js
popa
mov
xlat
push
call
jle
outsl
rorl
mov
xchg
mov
imul
pop
cltd
and
xchg
pop
inc
fldt
adc
mov
int
imulb
fstpt
fwait
push
push
or
adc
arpl
clc
idivl
add
xchg
xor
lcall
andb
jae
push
mov
ja
je
outsb
mov
push
and
push
inc
mov
cwtl
or
jge
clc
inc
pop
sub
pop
push
inc
fisubs
std
mov
inc
es
out
mov
xor
das
mov
cld
push
xor
lock
lock
ret
test
cmp
mov
in
jne
sbb
pop
pushf
add
inc
fwait
cs
or
fsts
sub
mov
test
inc
ja
repnz
ret
lods
and
push
out
test
jp
cmpsl
data16
movsl
rclb
push
mov
and
inc
dec
loop
or
into
test
cmp
cmp
adc
adc
ja
cwtl
sti
adc
es
add
mov
lock
mov
cmc
push
js
aaa
aam
push
ret
hlt
adc
mov
mov
shr
xor
leave
fistps
mov
sub
push
repz
xchg
fisttps
sbb
xor
mov
test
enter
rcrb
fwait
jg
adc
jg
div
add
shll
mov
fnstsw
mov
and
lods
inc
scas
and
data16
ret
pop
jl
push
test
or
sub
repz
adc
inc
into
fidivl
mov
jne
mov
pop
test
pop
sbb
or
mov
loop
add
xchg
sbb
rorb
insb
fsubs
fdivp
rclb
fmull
xlat
loope
out
xorl
pop
sub
loope
mov
sbb
sarl
mov
stos
mov
fbld
in
cltd
aam
outsl
pop
dec
cmp
mov
add
inc
push
hlt
int3
mov
sbb
mov
sbb
mov
imul
mov
pop
dec
loopne
daa
fmull
jmp
lea
xor
sub
jl
pop
int
nop
das
inc
out
cmc
add
les
jp
push
mov
mov
push
push
outsb
fsubl
dec
xlat
xor
inc
mov
push
daa
push
adc
je
out
fwait
xor
sbb
lea
sub
jp
sub
xor
mov
sub
push
cld
cli
add
not
sbb
shlb
out
cmp
daa
sbbl
push
fsubr
jg
int3
nop
std
jp
push
cltd
sub
xor
repnz
pop
mov
push
add
xchg
push
jecxz
iret
or
cmp
push
jp
xchg
fsubrs
enter
stos
fnstenv
or
add
push
lods
xor
jl
ss
in
rcl
fcoms
fldl
out
test
mov
sti
divl
notl
movsb
movsb
push
out
repz
lahf
out
sub
js
popf
inc
pop
mov
andl
aas
cltd
in
sarl
sub
push
jmp
cmc
testb
fiaddl
pop
jb
inc
pop
loope
scas
pusha
adc
sub
jno
lret
lret
pop
mov
subb
xchg
pop
rcrl
sbb
fisttpl
and
ja
xchg
bound
xor
adc
int
mov
test
fwait
insb
mov
or
loopne
jge
xchg
xor
mov
dec
ja
add
dec
cs
aam
dec
mov
std
adc
shlb
icebp
insb
or
sbb
fildll
xchg
cmp
dec
and
call
mov
subl
mov
aam
push
add
test
and
adc
jl
pop
mov
jge
mov
adc
mov
test
jno
inc
sub
mov
ficompl
jl
sti
out
xor
inc
lods
mov
pusha
dec
nop
jae
pushl
sub
inc
push
lret
cmpsl
pop
mov
push
fwait
push
mov
adc
ficompl
es
jp
pop
jg
dec
in
cmpsb
pop
jge
sub
mov
lcall
add
dec
or
stos
shll
jg
clc
and
popa
std
push
pop
clc
sub
frstor
mov
adc
sarb
outsb
in
mov
cmp
add
jnp
insl
inc
arpl
inc
pop
cmpsb
flds
int3
mov
xchg
insb
out
cmp
and
pop
xor
cmc
lret
push
mov
sub
test
mov
sbb
xchg
mov
mov
lods
gs
jne
mov
rclb
sub
cli
or
into
push
js
popf
push
xor
in
jae
data16
stos
or
dec
xchg
or
sarl
dec
pop
mov
mov
pcmpeqd
and
cmp
dec
call
jmp
in
jle
jmp
mov
cmpb
insb
cmpsb
adcl
cltd
xor
movnti
addr16
cmp
pusha
fnstcw
enter
pop
ret
je
or
mov
lahf
cld
pop
mov
scas
xchg
jmp
jmp
frstor
jo
movsl
addr16
push
sti
nop
out
aaa
outsb
in
call
mov
or
cltd
loop
add
jnp
andb
and
adc
sbb
cmpsl
and
xchg
aad
fiaddl
shlb
mov
lret
ret
pop
push
pop
ja
add
mov
mov
push
jb
shll
inc
jle
insl
lock
cmp
test
rorl
jae
pop
int
popa
inc
mov
jecxz
sbb
arpl
shrl
jmp
pop
enter
lcall
cmpsl
sahf
arpl
iret
pop
outsb
ret
out
lock
or
jge
andl
mov
add
out
mov
lret
sbb
pushf
pop
int3
pop
xchg
mov
je
fcompl
sbb
test
add
push
push
shrl
mov
mov
fidivl
sbbl
cmp
sub
adc
andb
idiv
and
mov
and
aas
xchg
pop
inc
popf
ret
cld
pop
cld
lret
mov
pop
enter
jno
iret
sbb
cli
xor
cltd
cmp
jno
ret
or
mov
mov
and
mov
movsl
and
inc
sbbw
cmp
test
lods
pop
push
imul
cmp
sbb
loope
orb
lahf
loopne
pop
pop
clc
jae
inc
lahf
nop
mov
out
lea
adc
mov
scas
orb
xchg
lret
jns
outsb
add
loopne
adc
movsb
pusha
sahf
mov
movsl
mov
out
jbe
decl
icebp
mov
mov
iret
xchg
jmp
jb
pop
insl
push
std
adcl
scas
hlt
int
xchg
or
sbb
jmp
add
add
orl
test
and
loopne
adc
cld
push
jl
dec
pop
enter
cmpsb
jno
outsl
loop
fadd
je
push
js
sarl
sub
cmpl
pop
and
cltd
jae
and
addr16
jmp
xor
adc
imul
aad
mov
mov
stos
movsl
dec
shll
jl
dec
jecxz
pop
adc
test
cmp
mov
jnp
or
mov
int
loope
inc
out
mov
or
imul
in
cmpsl
cs
std
hlt
xor
push
lahf
sahf
inc
or
or
or
ja
in
fsubs
cmp
mov
dec
push
cmpsl
insb
jnp
arpl
sbb
jg
jecxz
inc
mov
movsl
mov
mov
inc
repnz
gs
xchg
push
jl
nop
mov
cwtl
daa
ret
int
mov
mov
mov
dec
adc
push
shll
sbb
sub
stos
jmp
or
stc
aad
daa
pop
push
stos
stc
dec
je
inc
mov
xchg
in
jl
push
cmp
or
add
fildll
data16
sbb
cmovnp
sub
or
dec
leave
mov
andb
je
or
in
dec
adc
shrl
or
xchg
push
push
fsubr
popa
mov
sub
icebp
cli
jne
sub
fsts
inc
mov
cmp
test
and
fdivl
sub
mov
es
es
push
jg
or
imul
stc
cmpsb
imull
xchg
mov
out
test
stos
into
jbe
rcr
xor
in
outsl
mov
add
es
test
aad
scas
push
fwait
sti
sub
notl
xchg
jmp
jo
ror
jmp
cmpsl
adc
fbstp
or
mov
andb
jbe
jecxz
mov
subb
fcoml
and
add
and
xchg
daa
sbb
arpl
scas
lcall
jo
lcall
fwait
push
cmpsb
cmp
xchg
cmp
clc
mov
mov
nop
add
cmp
adc
gs
stos
arpl
aas
add
jb
jbe
jbe
mov
sbb
aam
fs
mov
test
cmpsb
or
adc
inc
jl
int3
mov
sbb
pop
pushf
cmp
aad
in
rcll
mov
in
gs
dec
cld
data16
cld
outsb
scas
clc
push
and
std
movsb
mov
loope
cli
popa
dec
push
lcall
inc
lea
inc
add
stc
cmpsb
adcb
xchg
rclb
jp
cld
mov
fsubrs
lds
cli
or
int
cld
gs
shrl
mov
mov
mov
leave
cs
leave
aas
daa
data16
pop
sahf
sbb
shlb
pushf
repz
jb
adcb
loopne
insb
add
adc
dec
dec
jno
mov
leave
sbb
test
ljmp
es
and
mov
xor
or
in
ret
hlt
into
pop
dec
shl
shlb
push
or
ds
or
sbb
out
mov
out
movsb
and
dec
mov
adc
jle
adc
lret
pushf
xor
std
jns
cmpsl
xor
ja
ficoms
mov
sbb
sarl
dec
js
repz
aaa
movsl
out
cltd
adc
enter
cmp
bound
icebp
clc
addl
dec
push
xor
sbb
mov
stos
inc
sub
mov
push
and
orl
dec
mov
push
jb
mov
lea
scas
jge
mov
sub
xchg
and
fsubr
cmp
and
jnp
xchg
sbb
test
addr16
ret
xchg
sbb
jbe
sub
mov
loopne
jnp
pop
cltd
mov
stc
sub
fdivrs
pop
cmpsl
cmp
cmp
dec
lcall
repz
adc
cmp
stos
mov
int
push
test
clc
lods
lret
sbb
outsl
sub
push
jne
inc
lock
push
fstl
pop
out
je
add
sub
add
mov
subb
mov
xchg
scas
mov
in
das
inc
scas
add
xchg
cwtl
scas
ror
test
lcall
inc
pop
data16
mov
jge
andl
sbb
mov
test
cmp
push
inc
je
testl
xlat
in
std
sub
cltd
cmc
stc
dec
inc
std
popf
fiadds
mov
loop
pushl
out
test
add
inc
mov
lods
call
jb
or
es
adc
sarb
js
pop
mov
xchg
jnp
xchg
and
movsl
popf
and
pop
xor
mov
sarl
push
dec
adc
mov
ret
iret
rcl
rorl
xlat
ljmp
stos
lds
rcrb
inc
and
inc
cmp
xchg
pop
push
xor
xor
pop
sbb
js
fcmovnbe
jns
push
jno
xchg
test
loope
push
arpl
dec
sbb
incl
pop
xchg
cmpps
into
pop
ss
decl
inc
cmp
arpl
rcll
daa
mov
adc
add
lock
lods
mov
jecxz
sbb
push
addr16
in
mov
xchg
mov
iret
dec
ds
pop
scas
xchg
cmp
ret
rorl
loopne
in
int3
mov
in
and
in
lds
mov
jbe
add
sub
mov
push
iret
lea
ljmp
mov
test
jge
dec
xchg
mov
lods
jl
rcrb
mov
lods
aaa
or
pop
pop
mov
popf
xchg
push
pop
out
inc
repnz
insb
mov
in
repz
orb
sbb
orb
push
dec
stos
andb
push
fsubrl
sbb
clc
out
sar
and
rsqrtps
cmp
fsts
out
pop
sub
scas
lock
ljmp
out
dec
mov
jno
loop
sbb
lcall
imul
fisttps
loopne
add
lcall
loope
push
mov
xor
mov
adc
mov
les
loop
cmc
xchg
mov
insl
cmc
mov
in
imul
xchg
dec
push
jecxz
leave
push
pop
cld
pushf
rcrb
jg
ss
cmp
xor
test
mov
loop
sahf
mov
pop
jmp
int
repz
and
mov
jge
popf
sub
repz
mov
xchg
mov
clc
and
dec
mov
pop
dec
pop
push
aaa
pusha
lods
pop
push
icebp
cmc
jae
test
stos
and
inc
pop
das
cmpsl
or
int3
fmull
int
pop
pop
dec
pop
out
pop
lret
stc
bnd
sbb
pop
mov
jge
scas
inc
push
leave
clc
sahf
cltd
iret
jp
mov
pop
je
nop
push
dec
pusha
ds
in
lock
addb
hlt
mov
fsubr
mov
movsb
stos
int
ficompl
gs
push
lea
mov
sti
outsb
sub
sbb
fistpll
xlat
data16
add
movsb
mov
pop
jecxz
mov
arpl
and
jnp
aas
dec
shll
mov
cmpb
outsb
push
push
dec
rolb
in
out
add
rorb
jne
repnz
mov
mov
xchg
pop
xor
mov
shll
cmp
jno
xchg
ss
ficoms
sbb
jp
pop
xchg
jo
inc
arpl
mov
push
dec
inc
jb
add
xor
jne
cld
ret
or
and
mov
jmp
dec
push
dec
mov
sbb
xchg
and
or
scas
sub
mov
and
dec
sub
mov
lds
lods
fwait
ja
in
ficompl
push
or
adc
clc
inc
je
pop
mov
xchg
sbb
push
sti
fiadds
daa
incb
jae
jmp
xor
adc
ja
enter
dec
inc
jp
imul
fldcw
rclb
sbb
xor
nop
dec
mov
pop
rorb
pop
dec
loop
cmpsb
in
int3
mov
or
hlt
jae
mov
push
mov
movb
cwtl
push
mov
cltd
pop
mov
and
cmp
cli
inc
fldl
sub
push
push
in
das
sahf
stos
or
push
je
mov
push
test
insl
mov
rcrb
hlt
push
and
mov
push
fcoml
in
aad
pop
push
mov
sahf
lods
rcrb
jno
mov
push
dec
jp
mov
ret
stc
mov
mov
xlat
cltd
insl
nop
push
cwtl
inc
ss
push
cpuid
xchg
les
test
test
popa
das
fstpl
aam
in
popf
pop
jb
or
ret
repz
adc
int
xchg
and
xchg
xor
stos
popw
jb
sub
or
mov
ja
mov
inc
pushf
dec
insl
popa
rorb
fidivl
out
addl
sahf
cld
adc
xchg
or
lds
sub
arpl
jecxz
push
subb
xlat
icebp
sahf
adc
xchg
mov
jns
inc
add
xlat
movsb
dec
mov
cmc
movsl
adcb
movsb
pop
mov
pop
mov
cltd
pop
int
es
jecxz
ret
push
outsl
add
ret
add
movsl
and
out
add
xchg
out
and
mov
bound
jo
in
push
icebp
std
mov
jno
push
js
shr
jp
and
orl
dec
aam
addr16
inc
add
cmp
push
out
mov
push
pop
mov
push
dec
sub
je
inc
mov
sahf
inc
arpl
jecxz
cmp
fstps
aas
push
dec
cmp
push
clc
push
fnstenv
in
cmc
cmpsb
in
mov
pop
dec
push
in
add
xchg
mov
mov
fbld
mov
jo
test
hlt
or
or
xchg
sub
push
out
gs
sub
or
or
es
cwtl
repz
sub
xchg
inc
inc
xchg
push
mov
jne
push
sub
mov
pop
push
inc
gs
add
push
movsb
jl
mov
sub
jnp
dec
or
jbe
pushf
push
or
rsm
pushf
inc
int3
iret
ret
stc
mov
adc
daa
inc
sub
testb
incb
sub
pop
divb
dec
bound
sub
push
xchg
sub
adc
push
or
aas
mov
pcmpgtb
outsl
jmp
into
loope
jmp
test
xchg
xor
push
push
lcall
mov
fs
int
xor
sbb
sub
push
cmp
filds
das
inc
lret
pop
mov
xchg
jo
jne
sub
jg
and
or
notb
or
fwait
scas
inc
sahf
mov
jbe
in
mov
les
std
loope
addr16
iret
mov
test
movhps
stos
mov
jg
leave
adc
aas
neg
out
and
aad
pushf
sahf
xor
outsb
inc
ret
imul
dec
xor
xchg
test
mov
mov
mov
in
or
and
dec
xor
push
fiaddl
mov
and
clc
adc
push
xchg
jl
loopne
jmp
push
mull
roll
jb
test
add
mov
mov
adc
xor
iret
in
es
mov
add
xchg
pop
pushf
test
ds
xor
push
imul
xlat
aad
add
shrl
ss
in
stos
jp
pusha
cli
stos
ljmp
xchg
or
enter
out
jnp
ss
imul
mov
pushf
fwait
mov
into
ss
scas
sbb
js
sub
jg
mov
adc
mov
and
data16
xchg
cs
hlt
mov
nop
xchg
out
jle
mov
pop
jmp
cmp
mov
inc
loope
mov
sub
je
pop
ret
pushf
jo
lea
nop
fisubrl
pop
pop
xor
das
jne
or
xchg
fisttps
in
inc
xchg
lret
xor
cmp
dec
scas
aas
insl
push
loopne
mov
lret
out
push
xchg
cmp
repnz
stc
mov
inc
pop
outsb
sbb
stos
cmp
jp
sbb
js
pop
push
cmp
inc
jns
xchg
and
repnz
push
inc
xchg
sub
or
les
xor
inc
out
xorb
adc
aas
inc
mov
xchg
sbb
stos
sub
ja
jno
fstpt
fs
cltd
and
loope
sahf
fbstp
fiaddl
hlt
inc
jl
mov
lods
mov
cli
or
notb
ljmp
dec
cltd
stos
repz
in
iret
es
add
sbb
outsb
sub
or
stos
and
inc
out
ficompl
sub
outsl
dec
xor
ret
sub
scas
pop
xor
push
jae
ds
or
push
loopne
lea
outsb
pop
mov
xor
fdivrl
sbb
ds
cmp
mov
fdivrl
ftst
sbb
lods
jge
lock
ds
cmp
mov
mov
or
outsb
neg
mov
loopne
push
aas
nop
inc
call
push
or
mov
in
scas
sbb
popa
pushf
cmpsb
pop
lret
pop
pop
jg
ljmp
ds
fistpl
hlt
or
test
stos
stc
shlb
inc
pop
es
in
fistl
mov
cmp
jecxz
fsub
rol
add
push
cltd
jl
mov
cmp
cwtl
mov
fsubl
and
shlb
adc
popf
sbb
dec
movsl
ljmp
psubw
cs
adc
aam
cmpsl
movsb
out
mov
addr16
cmpsb
repz
jo
fwait
xor
jmp
icebp
std
data16
add
xchg
xchg
push
xlat
leave
xchg
out
bound
pop
mov
sub
pop
pop
push
mov
cmp
in
push
shll
xchg
imul
int3
mov
mov
pushf
add
cld
push
mov
jmp
lods
cmp
inc
pushf
pop
jo
out
cld
inc
cmc
movhps
inc
lret
push
clc
add
mov
cmpsb
cmpsb
mov
shrb
loopne
inc
mov
pop
mov
pop
ss
icebp
cmp
add
sahf
inc
and
cmp
mov
mov
iret
sti
enter
xchg
xor
pop
loop
or
push
mov
rcl
rolb
pop
in
push
into
pop
cld
nop
loope
lcall
dec
fcoml
jecxz
or
or
mov
cmc
lret
pop
rep
jmp
das
dec
dec
sub
andl
mov
je
cmp
rcl
aam
pop
push
js
mov
cld
pop
repnz
sbb
jg
dec
es
pop
lds
add
cmp
jns
jmp
loop
xor
dec
mov
test
adc
jmp
adc
pop
inc
sahf
ss
dec
imul
or
dec
pcmpeqb
insl
cld
mov
iret
cmpxchg
shrl
xchg
sub
pop
pop
je
sarb
lea
sub
jns
sbb
ss
aaa
sbb
into
mov
aas
or
sarl
push
jge
mov
ljmp
loop
dec
pop
testb
or
push
leave
in
outsb
sub
lahf
jne,pn
add
cmpsb
ret
pop
xchg
sub
or
sbb
popf
shlb
sbb
mov
xchg
pop
mov
sbb
loope
cli
in
aaa
test
bound
sbb
iret
mov
stos
popa
adc
lcall
shrl
testl
cmpsb
lock
xor
pushf
mov
gs
shrl
lds
mov
jle
push
sbb
and
cmpsl
mov
sbb
adc
in
xchg
jp,pn
cs
xchg
dec
sub
jl
shlb
jge
lods
jns
xchg
push
or
add
nop
sub
enter
idivb
in
jno
popa
in
repz
add
mov
enter
imul
je
lock
lock
push
cli
dec
outsb
add
inc
cmpsb
or
fdivrs
sub
jge
cmp
xchg
dec
in
or
jno
or
dec
out
fwait
xor
push
dec
xor
jb
test
or
ss
jl
daa
push
fwait
xor
mov
jae
xchg
xor
adcl
push
outsb
add
jns
mov
sbb
stos
out
xchg
adc
inc
jl
mov
fisubl
dec
lcall
xrelease
cli
xchg
enter
push
cmp
and
sbbl
dec
lahf
sar
sti
jb
xor
jle
push
leave
dec
dec
int3
push
push
imul
call
cmpsl
or
mov
jne
push
or
cmpsl
ja
pop
icebp
mov
pop
mov
inc
out
cmc
adc
rclb
and
pop
cwtl
mov
aad
mov
sbb
pushf
sub
out
je
inc
repz
xchg
cli
jne
adc
je
jns
lahf
test
fildll
adc
jp
inc
je
jne
xchg
cmc
inc
xchg
add
sub
sub
lret
mov
sahf
cs
iret
sti
push
loope
dec
hlt
mov
and
xchg
xor
xor
aaa
pop
ljmp
outsl
cli
dec
mov
nop
movb
pop
imull
mov
push
aas
jmp
pop
mov
pop
xorl
lret
int
out
shlb
adc
outsl
inc
stos
shlb
shrl
in
sbbl
adc
sbb
mov
fadds
ret
iret
mov
clc
ja
orb
std
imul
ficoms
and
imul
outsl
cmpsl
scas
inc
loopne
jge
and
push
data16
pusha
push
ret
adc
push
cs
scas
mov
mov
and
addr16
cli
cmp
mov
out
adc
mov
dec
outsl
aas
adc
mov
fwait
jo
ljmp
mov
bndldx
mov
and
mov
jmp
push
or
dec
movsl
jecxz
cs
das
pusha
subb
xor
jnp
push
xor
movsl
repz
stos
rorl
js
xchg
das
mov
movsl
mov
fistl
dec
outsl
push
mov
call
fistps
icebp
pop
ljmp
jmp
hlt
add
cld
lods
int
dec
in
lock
je
jbe
pop
je
lahf
daa
xor
push
jmp
imul
cmp
insl
popa
lods
mov
jl
xorl
xlat
cmc
imul
cmpsb
xor
xor
es
aam
mov
test
shl
cmp
pop
jmp
pop
loope
cmp
mov
dec
jle
push
outsb
dec
mov
pop
in
xlat
or
cmp
out
jl
fistl
jae
sub
ds
xor
xchg
lods
cmp
jo
hlt
pop
jp
sub
mov
jl
inc
jmp
fs
inc
cld
xchg
jae
addr16
adc
mov
dec
xchg
imul
icebp
xchg
fmuls
inc
fnstsw
fisubs
pop
scas
imul
call
aaa
add
lret
cmp
push
adc
mov
jne
mov
xor
cltd
jo
lcall
arpl
sub
dec
fsubr
shll
lcall
cltd
push
in
add
les
testb
mov
add
aad
sbb
testb
divl
jns
jecxz
jge
xlat
sbb
roll
stos
and
or
jle
bound
push
xchg
adc
sahf
xor
push
loopne
scas
and
jge
mov
imul
dec
cwtl
add
mov
jbe
sbb
scas
push
out
test
gs
jbe
xor
bnd
jmp
movsl
sub
ret
ds
aas
mov
in
adc
and
std
adc
test
dec
test
mov
sub
pop
cli
jmp
aam
add
test
and
call
mov
into
xchg
mov
push
cmpsb
inc
dec
cmp
imul
add
shlb
mov
dec
fidivrl
sub
and
xchg
jg
int3
loop
adc
and
and
jbe
mov
or
sbb
cld
or
sbb
subb
cmp
mov
pop
in
add
repz
xchg
mov
lods
rorl
jl
icebp
enter
pop
inc
cltd
inc
sbb
sub
push
insl
cltd
and
fidivl
adc
push
addr16
push
mov
push
addr16
popf
shrb
js
mov
fmuls
rorb
sub
cwtl
fimull
loopne
nop
xor
inc
out
pop
pop
arpl
mov
sub
or
and
lock
stc
sub
out
inc
js
test
adc
xor
pop
decl
repz
in
lcall
mov
js
and
and
add
int
negb
adc
xor
mov
mov
jns
ret
push
inc
jmp
xchg
loope
cmp
repz
pop
mov
push
data16
and
sub
push
mov
xor
loope
inc
sbb
idivl
ret
fstl
add
call
xchg
xor
inc
gs
push
dec
lods
sahf
nop
test
cld
in
or
in
js
jge
sbb
les
outsl
dec
stos
adc
push
push
mov
push
dec
test
cmp
xor
adc
cmc
push
pop
dec
add
jo
pop
xchg
mov
pop
je
xor
and
popa
or
mov
cwtl
fnstenv
je
cltd
out
std
push
push
cmp
jmp
sub
popf
or
jne
psrld
add
ret
push
jne
dec
dec
dec
add
sub
xor
pop
arpl
dec
adc
cs
rol
mov
jl
shrl
arpl
sbb
mov
in
jno
cmp
add
sbb
cli
dec
sub
bound
and
test
lods
mov
insl
jp
out
jg
in
bound
xor
addl
ds
sysexit
add
es
mov
stc
xchg
or
cltd
outsb
pusha
jecxz
movsb
xlat
and
or
and
test
pop
lock
cli
and
fdivl
push
test
xchg
int
sbb
cmp
data16
cmpsl
lahf
mov
xchg
jnp
pop
stos
cmc
jnp
cmpsl
lret
and
movsl
int3
stc
add
mov
xor
imul
mov
dec
cwtl
rcl
mov
mov
push
dec
jns
jo
pop
fbld
mov
and
shlb
popa
cmp
inc
fisttpll
xchg
fs
mov
or
push
outsb
and
xor
jle
movsl
das
fsubl
xlat
ret
jmp
mov
and
adcl
out
xorl
inc
pop
inc
cltd
nop
pop
outsb
daa
mov
lret
mov
stos
mov
sbb
fstpt
ret
sub
cmp
jl
sti
inc
and
mov
push
cmc
inc
xchg
fs
ror
sbb
push
idivb
add
cmc
jmp
dec
pushf
mov
sub
mov
or
push
pop
shl
adc
cmp
jae
xchg
add
pop
cli
rorl
stos
gs
js
xor
mov
daa
xchg
inc
mov
sti
movsb
pop
add
xchg
popa
sbb
inc
dec
or
jne
and
sahf
lcall
mov
xor
filds
push
mov
sbb
dec
xchg
xchg
out
pushf
mov
fs
fldcw
dec
ss
call
add
inc
mov
stos
push
filds
push
shlb
lds
lret
push
aas
imul
push
lahf
jo
push
bound
dec
add
loop
cmp
insb
insb
enter
pop
cmp
in
fimuls
dec
xlat
dec
jmp
mov
insl
pop
scas
mov
cmp
imul
xchg
or
enter
mov
mov
loop
xor
test
ljmp
inc
stos
inc
xor
ss
inc
pop
jns
into
gs
xchg
mov
adcl
in
cld
sub
das
add
inc
xlat
loope
mov
jl
jmp
fstpl
jnp
dec
and
push
or
scas
cmp
push
ljmp
jb
test
lock
mov
mov
jns
inc
cmp
jae
idivl
pusha
fbstp
push
iret
fistps
mov
or
cs
mov
xchg
scas
aad
orl
mov
test
in
xchg
cmp
pop
xor
scas
insb
mov
mov
sub
xchg
push
mov
rcll
adc
lock
pop
in
std
sub
imull
lret
popa
loopne
scas
sbb
fstp
xor
push
popa
test
test
ja
lea
xchg
ds
and
pop
sbb
test
daa
int3
sbb
fmull
fmuls
jmp
or
inc
nop
out
out
mov
nop
sbb
imul
aad
add
lods
pop
je
pcmpeqb
or
mov
aas
aad
aaa
mov
adc
movsb
stc
cmp
ret
shll
push
xlat
mov
push
aas
jmp
push
inc
push
sbb
xor
js
test
leave
aas
xchg
jle
out
stos
mov
jl
inc
cltd
insl
movsb
cmc
nop
pop
push
xchg
rcrb
jns
jmp
sti
adc
mov
sbbl
inc
imul
leave
adc
sub
mov
jns
xor
mov
fcompl
in
adc
adc
or
icebp
jae
in
test
adc
mov
sub
iret
xchg
cld
out
test
xor
or
xor
out
jle
jmp
and
imul
cmpsb
in
sub
sub
mov
dec
lcall
jne
push
and
cmpb
frstor
mov
pop
pop
pop
mov
jle
push
push
sub
cmc
xchg
push
mov
in
movsb
push
in
test
jb
insb
test
adc
sbb
adc
shlb
cli
in
sbb
rcll
xor
popf
fidivrl
andb
jg
fnsave
lods
in
and
push
jb
inc
adcl
cmpsb
cwtl
pop
mov
lret
cld
outsb
cmp
dec
shlb
pop
jae
add
outsl
dec
mov
lds
mov
cmp
into
pushf
cs
pop
daa
rcr
pop
out
fidivrl
pop
divb
lcall
mov
mov
mov
cmp
inc
push
lock
mov
js
fdivs
sbb
mov
mov
lds
dec
scas
cmp
fs
jecxz
pushf
dec
out
jp
in
sbb
adc
sbb
lahf
stc
mov
aam
cli
jg
sub
arpl
mov
mov
aad
int3
test
xchg
mov
inc
mul
shl
pop
mov
jg
xchg
cwtl
scas
sti
push
sub
mov
sub
dec
data16
push
sbb
fistpl
dec
arpl
cmp
into
jmp
adc
sub
mov
hlt
ljmp
mov
push
or
inc
in
out
jb
cmp
xchg
lods
idiv
or
pop
out
xchg
add
push
mov
adc
jecxz
std
sbb
mov
or
jp,pt
addr16
pusha
scas
mov
dec
fwait
out
inc
inc
aad
loope
fwait
enter
jmp
cmp
mov
aad
into
cs
arpl
mov
jge
shlb
cmp
enter
xchg
sub
fdivs
icebp
pusha
mov
loop
or
sarl
xchg
xor
push
aad
mov
in
sbb
ror
mov
mov
ja
loop
nop
push
sub
stos
shrb
fnstenv
dec
fisubs
push
fs
out
ret
lahf
daa
and
pop
lods
outsb
add
mov
xchg
lcall
sbb
or
or
cmp
jns
pusha
mov
cmp
gs
mov
lahf
mov
movsb
and
les
sub
stos
in
lods
cmp
cmp
dec
lcall
xchg
xor
pop
je
adcb
lds
fbld
divl
out
cmpsl
mov
psubq
mov
push
fsubrp
cltd
divl
stos
das
lds
xchg
stc
lods
mov
mov
sbbl
jmp
push
dec
pop
arpl
push
gs
or
mov
mov
xor
int3
pop
push
pop
aad
dec
xor
jne
sbb
sbb
inc
add
inc
into
push
outsl
daa
sub
cmpsl
jno
xor
int
mov
shlb
out
and
fbld
mov
stc
les
mov
or
and
arpl
clc
in
push
dec
sbb
add
pop
test
paddusb
subb
clc
add
popa
add
ret
adc
jecxz
mov
cs
xor
push
push
jmp
jge
pop
insl
sbb
and
mov
movaps
xchg
and
inc
sbb
push
hlt
sti
in
push
lods
mov
and
pusha
icebp
stc
pop
repnz
test
add
xchg
cmp
mov
mov
jp
test
adcl
pop
ret
jbe
jge
incl
fmul
mov
sub
mov
ud1
testb
push
sub
fwait
cmpl
dec
xchg
loope
pop
mov
cs
jne
adc
sub
sub
test
inc
dec
jg
mov
rclb
hlt
add
jne
jmp
add
sbb
push
sbb
pop
insb
sti
or
xchg
mov
lret
addr16
xor
adc
adc
adc
mov
movsl
cli
out
insb
push
mov
popf
das
cli
sbb
aaa
icebp
icebp
or
jns
outsb
add
ds
lock
mov
or
and
rorl
dec
mov
fistpll
mov
jnp
mov
mov
stc
shr
sub
jmp
call
add
push
sub
shll
cmc
mov
mov
xchg
mov
das
sub
fldcw
stos
shl
mov
push
arpl
stos
cmp
and
lea
mov
ret
int3
cwtl
bound
mov
loope
inc
xchg
clc
insl
leave
es
pop
fdivrs
xor
stc
fsubr
sub
push
mov
ret
xlat
mov
pop
jge
fldcw
pop
xor
mov
lods
mov
fistps
sbb
sbb
out
pop
pusha
aaa
mov
pop
insl
add
rcrb
pop
bound
mov
or
or
cmp
scas
fstps
push
loop
out
push
xchg
dec
rolb
jcxz
jp
out
repz
ds
push
ret
push
cmp
pop
lods
push
out
enter
jmp
aam
insl
rolb
dec
mov
add
jnp
push
aad
idivl
enter
xor
icebp
lret
jae
gs
insb
rorl
loop
add
mov
lea
push
push
lds
or
push
test
or
mov
fdivr
mov
and
call
xor
das
xchg
cmpsl
push
std
xchg
sub
jne
pop
call
xchg
es
adc
ret
add
shlb
fadd
imul
and
jne
out
dec
dec
dec
inc
and
jmp
sarl
push
ja
fwait
pop
mov
sarl
or
sbb
addl
in
or
movsl
je
jg
inc
jecxz
out
sbb
ret
movsl
std
loopne
cmp
pop
pop
ficoms
xor
pop
scas
inc
lea
lods
push
lret
mov
xchg
call
mov
sbb
inc
push
cmp
flds
push
rsm
in
xor
aaa
or
pop
xchg
out
nop
mov
cmp
xchg
imul
lods
popa
push
sahf
pop
mov
test
lds
out
test
mov
jmp
jo
and
cwtl
push
jle
mov
scas
push
aaa
mov
sarb
jge
or
mov
or
jmp
mov
ss
lods
aas
push
mov
jno
jecxz
jae
xchg
mov
push
call
repz
push
mov
pop
mov
cmp
mov
loop
pop
xchg
xchg
aad
lret
add
lret
popa
jmp
and
push
sub
repnz
ds
sarb
inc
xchg
xchg
cmp
mov
repz
adc
mov
xchg
adc
shlb
mov
and
sti
mov
fldt
xor
dec
fst
cmc
cmp
cs
rorb
scas
push
shrb
dec
mov
out
jp
lahf
fstpt
aad
lret
roll
jb
inc
lret
pop
mov
inc
push
dec
in
xchg
sub
popa
mov
nop
inc
js
rcl
mov
fadds
mov
ficoms
jo
xor
jae
clc
and
imul
adc
inc
loop
mov
mov
cmp
inc
pusha
sub
sub
hlt
add
addr16
push
repnz
jbe
scas
call
xchg
negl
or
add
inc
fldcw
outsb
lock
lea
cmpl
repnz
mov
pop
clc
or
je
scas
inc
dec
fsubs
std
leave
inc
fld1
jne
add
popf
xorl
dec
add
movsb
nop
ljmp
inc
test
stos
fnstcw
mov
inc
je
fnsave
sbb
xchg
testl
mov
jge
mov
or
icebp
xor
in
in
mov
and
mov
mov
adc
mov
enter
and
and
jns
inc
lret
insl
jle
int
icebp
sbb
test
addr16
outsl
sbb
lea
xchg
add
add
or
xor
pop
add
mov
rcl
movsb
add
jbe
ss
in
push
sub
out
out
test
dec
dec
fnstsw
xor
mov
test
in
test
dec
adc
insl
dec
in
shll
insb
sub
cli
xlat
mov
arpl
arpl
dec
jmp
jbe
mov
sub
pop
xor
icebp
push
lret
dec
pop
out
xlat
mov
jns
addr16
in
add
fsin
outsb
jae
or
dec
movsb
push
incl
jns
sub
out
and
fwait
and
lods
mov
inc
cmp
cmp
adc
fstl
sbb
scas
sbb
mov
loopne
loope
je
mov
cli
inc
cltd
jb
pop
hlt
outsb
mov
jnp
dec
cli
sbbb
push
lods
scas
mov
xor
or
sbb
cwtl
fs
scas
mov
inc
pop
add
fdivl
and
adc
test
sub
lcall
and
xorb
adc
dec
movsl
jle
fidivs
cmp
sub
sbb
mov
cmpsb
push
jmp
cmpsb
in
inc
inc
and
int
or
cwtl
lods
xchg
or
pop
aam
insl
sub
jecxz
cmpsl
iret
dec
cmpsb
mov
aaa
sub
lock
data16
ja
jne
in
inc
sub
push
test
or
and
jns
add
inc
stos
mov
pop
in
shrb
lret
and
lods
pop
mov
cmp
shr
out
xor
mov
orb
cmpsl
xor
movb
lcall
jbe
fwait
sbb
sbbl
je
mov
inc
xchg
mov
loopne
add
inc
push
sbb
jg
pop
in
lods
stos
xor
je
pop
jg
lods
xor
inc
sti
adc
or
rclb
pop
jo
outsl
out
and
mov
mov
xchg
cmc
pusha
jecxz
rolb
add
sbb
in
sub
mull
mov
push
stc
rcrl
mov
jne
push
daa
jns
bound
into
xor
mov
aad
dec
das
mov
test
mov
repnz
or
jbe
sahf
sti
scas
mov
mov
fs
rolb
repnz
lret
scas
push
aam
pushf
and
movsl
pop
sti
mov
or
jmp
and
and
dec
into
ds
popl
loopne
dec
xchg
and
cld
dec
add
popf
adc
popl
cmp
push
jl
popa
inc
xor
stos
mov
mov
popf
stos
cmpsl
xor
ret
cmp
sub
cmp
in
mov
add
fsubr
add
ss
push
push
jg
scas
scas
jno
fxam
cmp
movsl
out
bound
ss
and
xor
sub
je
jl
jge
sarb
out
mov
xor
mov
ds
les
sbb
aaa
out
out
imul
lods
add
cmpsl
mov
arpl
dec
jecxz
fisubl
adc
cmc
xchg
stos
and
dec
fnclex
arpl
cltd
jns
aam
mov
in
adc
icebp
rcr
pmullw
dec
fidivl
icebp
jl
and
clc
push
js
push
int3
cmpsl
fildl
shrl
or
jge
xor
or
inc
loope
mov
pop
out
outsl
xchg
test
lret
stos
call
decb
ja
scas
sbb
sahf
arpl
andb
and
inc
jns
mov
lds
lds
cmp
lret
lods
iret
gs
inc
inc
adc
jbe
or
js
call
lret
pop
mov
mov
cli
lods
xor
xor
jb
jp
xchg
pop
shrl
pop
fsubrl
push
fidivs
pop
push
pavgw
fs
fs
test
inc
inc
arpl
sub
ret
lret
sbbl
xchg
xchg
mov
repz
mov
mov
push
jp
test
or
pop
rolb
xchg
shll
and
repnz
fwait
test
adc
test
sbb
pop
outsl
xor
mov
lods
out
ret
shlb
push
les
xchg
push
and
js
cmc
sub
int3
shll
dec
push
jo
mov
movsl
mov
sub
push
test
hlt
imul
out
gs
xchg
pop
scas
sub
jb
stos
js
push
sbb
in
enter
mov
and
jnp
sub
scas
cltd
pushf
mov
ret
popa
cmc
loop
nop
dec
call
cmc
test
sbbl
js
scas
dec
cmp
lret
cmp
ret
sbb
jecxz
xor
jb
or
adc
cmpb
mov
ja
xor
mov
xlat
rorb
insb
push
mov
xchg
xchg
sub
mov
arpl
subl
out
aaa
hlt
sub
adc
lret
adc
sarl
and
mov
stos
inc
pop
xor
leave
dec
mov
loop
je
rcl
push
or
sbb
movsl
movsb
mov
adc
add
filds
test
mov
push
mov
inc
dec
jne
lahf
mov
lds
inc
cmpsl
push
cmp
push
xor
push
dec
adc
mov
aam
mov
xchg
dec
subb
mov
cmp
ret
dec
sub
lock
fnstenv
or
sbb
adc
sbb
pusha
stc
les
and
dec
js
mov
std
pushw
mov
pop
sub
mov
jge
dec
ds
jecxz
sbb
in
mov
or
gs
pop
and
dec
bound
insl
mov
push
hlt
cltd
xchg
fnstcw
aad
andl
xor
jmp
push
ss
and
push
gs
nop
adc
mov
add
lds
adc
orl
shr
xchg
mov
ficomps
mov
sub
arpl
cmp
jmp
jl
xorb
xchg
bound
test
mov
xor
mov
mov
test
sti
push
jle
lahf
push
or
sub
cmp
sahf
cltd
jae
dec
cmp
push
hlt
xor
mov
jecxz
cwtl
enter
mov
lods
cmpsl
mov
int3
cmp
xor
add
sub
mov
jecxz
loope
pushl
xor
jl
aam
pop
les
outsl
push
dec
out
jo
out
mov
mov
cld
aas
in
icebp
ret
in
outsb
call
scas
fisttpll
adc
dec
xlat
mov
insl
ljmp
add
xor
sub
pop
imul
pop
scas
fisttpl
sub
addr16
or
jae
pop
imul
std
gs
stos
jge
xchg
jl
mov
jns
dec
jle
mov
xchg
add
sub
mov
je
cmp
and
and
std
adc
add
imulb
cmp
xor
jle
scas
stos
mov
xchg
call
sub
dec
imul
inc
jecxz
add
mov
pop
sub
into
loop
lea
adc
jl
outsb
in
rcl
xchg
xchg
xlat
add
dec
dec
data16
push
nop
les
xchg
int
dec
lret
cmp
jecxz
xchg
leave
inc
fsubrl
pusha
fwait
and
cmp
mov
push
push
sub
jmp
hlt
rol
xchg
sbb
pop
cmpsl
ss
xlat
inc
or
xor
loope
pushf
fwait
sub
sti
cmp
pop
cmc
mov
sarl
mov
gs
lods
repz
enter
pop
clc
cmp
lcall
cmc
cld
mov
push
xchg
fbstp
jg
jecxz
test
and
scas
stos
in
mov
testl
fidivrs
fwait
loope
dec
jbe
sub
imul
xor
pop
stc
adcb
dec
int3
popa
fsub
sub
xchg
outsl
loop
mov
subl
cmc
cmpsb
lds
shrl
cld
inc
adc
cmp
data16
int
xor
push
std
or
popf
daa
fs
aaa
loop
arpl
cmp
ljmp
mov
movsb
fstpt
imul
mov
xchg
pop
cmp
push
repz
xlat
fldl
aas
mov
in
das
out
stos
fildll
lret
xchg
jg
gs
mov
ja
fsubrs
cmp
pop
div
inc
lds
je
pop
inc
gs
movb
cmpsl
ljmp
inc
cwtl
nop
arpl
jge
js
mov
push
loop
rorb
mov
mov
cmp
clc
ja
jno
cmp
pusha
xchg
cmp
push
mov
scas
xchg
or
adc
ja
pop
cmp
xchg
lods
popf
fildl
or
pop
inc
pop
cs
push
xchg
lods
inc
push
bound
mov
pushf
lcall
push
les
xchg
fs
add
jbe
jecxz
out
sub
mov
es
cmp
ret
dec
out
xorl
test
dec
lahf
arpl
shlb
xorl
jl
inc
fimuls
adc
nop
xor
or
out
mov
mov
lock
push
mov
fs
clc
xor
inc
popf
jno
aaa
mov
clc
jecxz
test
pop
sbb
pop
and
test
clc
sbb
outsb
fs
xchg
mov
insb
lahf
int3
fsts
jmp
scas
aas
sahf
xchg
cmpsb
mov
inc
push
insl
xlat
pop
mov
jg
lret
cli
sub
mov
loope
push
or
dec
addr16
jg
push
inc
scas
sbb
cmp
jb
movsb
mov
mov
cmp
mov
add
jmp
call
inc
out
jb
jmp
fidivs
mov
cld
and
std
mov
add
dec
xchg
and
imull
pop
lahf
sub
jp
inc
loop
icebp
pusha
add
sub
pop
fsubrs
adcb
jge
sbb
mov
out
pushf
add
aaa
pop
aaa
and
or
add
out
xor
arpl
sub
mov
js
fs
out
icebp
dec
rcrb
mov
mov
adc
mov
pop
stc
nop
cwtl
xorb
sarl
or
jecxz
add
insl
xor
xor
adc
xchg
or
fdivl
or
dec
push
add
test
rorl
popa
cmp
mov
sbb
fsts
in
mov
icebp
jp
ret
aas
xchg
shll
xchg
fildl
mov
sub
cmc
xlat
jmp
and
pop
jle
adc
mov
xor
mov
mov
add
cmp
std
ror
pop
dec
add
fs
test
ja
cmp
adc
test
mov
inc
mov
sub
pushl
and
int
lods
sbb
xchg
jns
mov
xlat
outsb
movsl
iret
inc
test
add
xchg
mov
or
push
xchg
mov
mov
push
sbb
roll
subl
xor
int
adc
and
dec
mov
shrb
fnstenv
mov
xor
adcl
mov
jp
cwtl
cmp
and
aam
cs
cmp
lods
sbb
xor
mov
int
adcb
dec
pop
sub
aad
ds
cmp
daa
mov
adc
shrd
adcb
insl
jl
ja
jo
loopne
bound
ljmp
mov
xchg
push
xchg
add
jmp
jg
cmpsb
mov
aad
jnp
fdivrs
or
xchg
adc
cmp
ds
mov
jg
mov
and
cmc
pop
cwtl
gs
add
dec
or
ret
testl
loope
adc
inc
add
loopne
push
shlb
xchg
xor
test
jle
xor
xor
push
neg
xchg
mov
aad
fdivr
mov
cmp
sbb
fists
jns
or
pop
xchg
inc
dec
shl
fdivrl
lret
std
lods
push
xor
jmp
dec
hlt
xor
sub
ds
mov
pop
notb
stos
in
inc
loop
movsl
adc
enter
mov
jge
test
adc
add
notl
loope
cmpsb
inc
jnp
jmp
mov
jge
and
or
xor
cs
xor
sub
andb
push
mov
and
ficoms
out
inc
fwait
mulb
ljmp
push
push
jb
jge
popa
xchg
cmp
call
push
in
add
cmp
cwtl
or
sbb
add
sub
push
mov
push
dec
push
test
mov
lds
pop
repz
xchg
out
jp
xchg
sbb
mov
mov
cmp
add
inc
inc
or
jle
sub
mov
addr16
lods
xchg
or
nop
jecxz
pop
cs
fcmovne
xchg
lcall
and
cli
jecxz
push
jp
xor
sub
xor
mov
pushf
xor
cmp
xlat
mov
mov
xor
adc
jp
in
mov
and
jno
add
pop
imul
xchg
mov
cli
adc
jbe
ljmp
cmp
add
inc
enter
insl
cld
push
lahf
lahf
add
mov
push
pop
rcr
enter
dec
loope
mov
push
shlb
jecxz
mov
fidivs
shlb
les
sbb
or
xchg
fcomps
mov
sahf
jnp
inc
mov
pusha
mov
adc
jle
ret
push
push
xchg
pop
out
lods
jecxz
adc
arpl
jle
xchg
jno
lahf
sbb
or
call
add
scas
mov
jb
push
ss
in
fucomp
or
push
jbe
lcall
leave
sbb
bound
push
shl
pushf
cli
push
mov
data16
pop
fsubr
inc
fmuls
stc
xchg
arpl
loopne
lcall
leave
fmuls
loopne
sub
mov
add
or
sub
dec
pop
sbb
xchg
xor
popf
fdiv
pop
sbb
fsubrs
stos
xor
jmp
aas
dec
cmc
in
outsb
mov
xchg
cmp
out
out
push
sbb
mov
add
scas
int3
jp
add
jb
daa
dec
test
call
sbb
mov
and
repnz
sub
repnz
mov
into
pop
cmp
jbe
div
push
dec
xchg
scas
jge
jne
push
int3
xchg
loope
dec
pop
rorb
ds
jecxz
sbb
lods
fisttps
movsl
out
sub
fiadds
push
mov
mov
test
sarl
int3
mov
push
mov
loope
jl
xor
jmp
rcrl
xor
dec
loope
mov
push
adc
xchg
xchg
add
out
and
mov
xor
stos
int3
pop
mov
push
dec
pop
jmp
cmp
call
sarl
or
aas
push
xorl
mov
pusha
int3
cmp
mov
mov
test
rorl
jo
and
cmpsb
js
push
mov
push
imul
lods
xor
push
icebp
xchg
outsl
aad
arpl
cld
mov
push
pminsw
fbstp
or
dec
mov
and
in
popf
rclb
add
jg
movsl
cmp
mov
arpl
mov
leave
mov
xlat
icebp
incl
cmp
loope
pusha
sub
aad
movsl
and
outsl
notrack
mulb
pop
shll
cmp
pop
sbb
nop
daa
jnp
pushf
cmp
cmc
inc
jne
cld
pop
add
cwtl
cmc
and
pop
popa
cld
outsl
pop
mov
sbb
cmc
push
and
call
fisubrl
leave
sarl
je
hlt
in
mov
push
and
addr16
jno
test
es
cmp
out
mov
fildl
or
dec
xchg
xchg
jno
sub
xor
xchg
dec
lcall
or
dec
ret
mov
push
lods
lahf
xchg
jno
shld
pushf
lods
sbb
push
mov
cmpsl
push
js
add
add
test
ja
push
test
std
push
lods
and
mov
int3
xor
or
dec
repz
arpl
daa
push
or
pop
lock
pop
outsb
aam
sbb
or
mov
ljmp
dec
push
addr16
stc
pop
setp
gs
sbb
out
add
lcall
fucomip
mov
outsl
ret
ja
es
popa
outsl
lcall
and
inc
fisubs
out
pop
adcl
cmp
or
cs
adc
jo
sub
int
push
pop
lret
dec
fucomi
pop
push
inc
add
inc
pop
or
out
test
adc
lds
gs
mov
jecxz
jmp
movsb
push
movsl
add
les
xchg
std
push
addb
daa
notl
mov
fsubr
xchg
rolb
sub
call
mov
dec
stos
mov
shll
rcrl
cwtl
mov
and
xchg
xor
mov
xchg
inc
inc
stc
cmp
shll
daa
fsts
cmpb
xor
xor
in
out
rcrl
cmpsl
out
jnp
xchg
mov
push
dec
sbbb
loope
xor
cmp
cmp
pop
lea
lods
mov
in
andb
xchg
cmc
fwait
mov
scas
repz
lods
sbb
in
push
mov
cmp
add
mov
inc
adc
and
xor
sub
outsl
and
ret
je
in
popa
imul
mov
shll
adc
sub
subl
xor
out
insl
sub
and
mov
sbb
inc
enter
scas
bound
push
adc
dec
sbb
push
fstpl
push
jne
dec
test
xlat
push
xchg
and
adc
sbb
cmp
and
or
sbb
lock
popa
fwait
cmpsl
mov
inc
sub
jecxz
mov
stos
rorb
xchg
adc
xchg
loop
fsubrp
fwait
push
dec
and
cwtl
push
mov
cmp
iret
cmpsb
int3
fs
xchg
das
jg
ja
les
inc
cmpsl
and
mov
jg
arpl
sbb
adc
arpl
pop
shld
jns
rclb
mov
xchg
and
lahf
sbb
cli
cmp
sub
xchg
cs
stc
sub
inc
mov
adc
xorl
rolb
sbb
push
dec
sahf
push
push
sbb
xchg
mov
sub
or
cs
cmp
sti
inc
popa
and
sub
movsl
lock
das
out
add
out
xchg
mov
gs
dec
int3
data16
or
aad
sti
jmp
cs
and
sub
clc
and
push
mov
pop
inc
or
fisubrl
test
xor
xchg
xlat
mov
out
mov
mov
shlb
les
lods
inc
push
jne
and
jae
cmpl
mov
and
rcll
fidivs
insl
adc
cmp
jns
cmp
imul
in
or
jo
jne
imul
popf
out
shrb
or
cmp
and
nop
add
jmp
xor
adc
xor
mov
insl
dec
out
repnz
jno
mov
das
cwtl
cs
jae
fidivrs
xchg
add
lahf
xlat
cmp
out
test
cmpsb
out
into
push
pop
std
xor
lock
arpl
jae
push
inc
lcall
push
mov
inc
jl
push
nop
jbe
loopne
push
mov
cwtl
pop
xchg
arpl
ret
mov
jecxz
or
ffree
int3
push
out
dec
sti
mov
data16
add
loope
sbb
pop
xor
sub
call
rcrb
movsb
jmp
push
jno
stos
sub
or
insb
ret
inc
arpl
lods
mov
outsb
push
in
fwait
inc
sbb
mov
cmp
aam
lcall
cwtl
mov
sbbl
cwtl
clc
or
ficoms
cmp
sbb
sbb
xor
sbb
adc
ret
jecxz
int3
xchg
test
cmp
mov
arpl
aaa
xchg
push
mov
addb
jb
cmpsl
ds
xchg
jp
inc
inc
shrb
out
int3
movsb
jecxz
std
pop
cmp
xor
dec
adc
fcmove
sub
pop
aad
lds
popf
or
mov
or
jle
rclb
es
inc
xlat
js
xchg
add
loope
jns
adc
pop
mov
pop
mov
xchg
xchg
rcrl
cmc
jecxz
add
ficompl
jnp
jg
in
and
or
dec
inc
dec
adc
scas
scas
clc
push
sub
pop
add
mov
push
scas
xchg
aad
lret
lea
rcrb
cmp
xchg
xchg
sti
inc
add
mov
push
mov
mov
repnz
popa
lret
int3
fnstenv
fsubrs
test
and
movsl
xor
inc
test
sbb
pushf
inc
push
sub
xor
mov
inc
inc
test
pop
sbb
sbb
imul
mov
fucomi
xchg
jno
xor
jecxz
sahf
mov
push
call
cs
and
imul
jno
in
int3
mov
mov
mov
cltd
aas
mov
insb
xchg
iret
imul
jp
mov
pop
cmp
xor
imul
cld
sahf
mov
inc
pop
adc
sbb
or
fsubr
pop
adcb
add
xor
push
xor
fcomp
pop
filds
xchg
adc
sbb
lahf
adc
call
push
xchg
daa
inc
les
je
push
cld
push
mov
xrelease
xchg
icebp
repnz
xor
add
xor
xor
clc
stos
mov
outsl
enter
jo
imul
dec
jecxz
adc
mov
push
shrl
scas
mov
aam
std
inc
adc
dec
xlat
or
insl
and
jb
dec
xchg
add
movsl
mov
jns
mov
bound
mov
jg
jnp
aad
leave
push
popf
aam
inc
fstp
loope
out
movb
addr16
jp
movsb
xchg
sbb
push
arpl
lret
mov
flds
out
or
popa
aad
in
test
lret
data16
in
divl
push
ljmp
push
lret
clc
sub
cmp
ret
ja
call
into
adc
pop
incb
pop
repnz
lret
cmp
fs
xchg
push
je
cmp
popa
pop
pop
ss
mov
icebp
xchg
xor
scas
cwtl
inc
push
jne
outsl
xor
into
xchg
adc
ret
gs
cmpsl
xchg
insb
cmpsl
xor
mov
jp
push
inc
jge
cli
inc
xchg
mov
fwait
inc
movsb
push
inc
lock
sbb
mov
imul
gs
out
das
pop
mov
int
sub
inc
push
call
jge
iret
mov
and
jecxz
fmul
push
shrl
inc
mov
movsl
lret
cli
inc
sub
adc
add
pushf
mov
push
adc
stos
aam
mov
adc
jp
xor
adc
cwtl
and
js
outsb
push
add
cmp
xchg
aas
xlat
test
mov
inc
ljmp
pop
sahf
ficomps
and
or
cmpsb
sbbl
jg
stos
inc
sti
testl
inc
in
ffreep
xchg
push
xlat
cmp
repz
and
mov
call
cmp
inc
out
cmp
mov
or
mov
push
jae
leave
push
inc
sti
xchg
out
mov
int3
push
rol
push
pop
pop
push
sbb
fnstsw
jecxz
nop
or
lret
cmc
jb
push
movsb
adc
inc
int
mov
hlt
and
rorb
clc
sub
popf
icebp
mov
push
fwait
add
cwtl
sbb
xor
mov
mov
loop
shlb
jp
ret
imul
cmp
int3
int
pop
inc
gs
repnz
sarl
push
sbb
insb
mov
dec
jae
out
into
dec
rcl
push
out
jne
inc
fstps
fisubs
mov
pushf
movsb
jno
pushf
cmp
outsb
stc
sbb
lcall
cmpsb
into
dec
and
insl
push
mov
jbe
and
stos
add
pop
es
imul
mov
and
gs
popa
outsb
gs
push
call
jmp
rcrb
cltd
sarl
aas
push
scas
loope
fnstenv
mov
and
lcall
lock
cltd
adc
ss
sgdtl
push
insb
into
sbbl
sub
sbb
pop
negb
pop
aaa
mov
adc
test
fdivl
fs
adc
sub
add
daa
inc
or
das
lds
mov
pop
ret
push
xchg
mov
push
sbb
cmp
and
mov
xchg
cli
mov
aaa
mov
leave
xchg
xor
or
push
fcmovnbe
test
repz
sub
js
outsb
and
aad
pop
in
sub
pop
int
inc
cwtl
sahf
or
inc
ror
add
sbb
jne
cmp
sbb
dec
jnp
lds
into
gs
push
in
push
ficompl
push
inc
stos
xchg
in
fidivl
js
loopne
push
cwtl
lods
jl
cmpsl
out
iret
cmc
mov
cmp
xchg
cs
pop
subl
testb
mov
dec
sbb
pop
sbb
jnp
ficoml
std
xchg
xchg
neg
mov
int
xor
mov
std
lock
cmp
push
out
xor
imul
icebp
mov
nop
jnp
mov
inc
add
jecxz
stos
out
into
aad
jle
out
add
or
mov
mov
jno
out
pop
adc
negl
mov
cmp
mov
pop
mov
stc
pop
clc
movsb
cmp
jg
or
js
in
in
dec
xchg
push
aas
in
pusha
movsl
lahf
xor
imul
fldenv
pop
scas
ret
subb
sub
cmpsb
out
test
aam
out
jno
add
sbb
mov
jbe
push
sub
inc
stc
adc
xchg
cmp
dec
adc
push
pop
adc
hlt
inc
sbbb
mov
jl
cmp
test
lret
cld
pop
mov
mov
inc
or
int
or
push
icebp
in
andl
pop
xor
jge
enter
push
mov
repz
das
push
cmc
pusha
mov
adc
andl
mov
loopne
aas
xchg
mov
cld
push
add
adc
push
add
mov
icebp
addl
fisttpll
int
mov
ret
test
sbb
mov
sbb
and
cmp
out
push
and
mov
out
repz
loop
lods
mov
mov
call
in
sub
and
stc
nop
xor
test
dec
fsubs
mov
push
xchg
hlt
lcall
js
lcall
jns
sub
int3
clc
iret
jns
pop
mov
mov
mov
rolb
imul
xor
mov
and
inc
add
dec
push
fucomi
inc
pop
adc
icebp
adc
xchg
ja
insb
sub
and
cmpsl
ficoml
pop
add
or
sbb
lret
loopne,pn
cmp
adc
and
xchg
pop
dec
cmc
clc
loop
aaa
and
mov
inc
and
mulb
incb
and
aaa
or
cltd
sub
cmp
xlat
cmpsb
bound
out
mov
movsb
imul
xor
push
fimuls
sbb
inc
dec
pusha
fistpll
mov
ret
dec
dec
jo
in
xchg
xlat
cmp
inc
sub
mov
lods
loopne
jl
inc
in
test
jbe
inc
fisubl
outsl
std
dec
andb
xor
popf
lods
cmc
mov
addb
aad
cli
lea
ret
loope
cmp
and
pop
push
cmp
push
mov
and
je
loopne
aaa
clc
rol
test
std
add
mov
ljmp
insl
stos
pop
das
aam
fistps
jo
popf
sbb
cmpsb
mov
out
or
push
outsb
jp
fnstenv
data16
idiv
into
gs
or
mulb
iret
jno
or
gs
mov
addr16
enter
repz
push
lods
js
pop
mov
loope
or
outsb
and
jb
pop
jp
mov
push
mov
add
inc
xlat
mov
fsubp
js
pop
les
inc
pop
inc
popf
rolb
popf
and
dec
shl
dec
push
call
into
push
add
hlt
popa
push
cwtl
popf
rcrl
das
imul
movsb
xor
inc
adc
mov
adc
lea
loope
add
cs
out
lods
out
jge
dec
fstps
inc
xchg
cmp
pop
cmp
mov
jmp
sahf
cmp
stos
out
xchg
lret
fs
mov
mov
decb
cmpsl
push
jp
dec
xchg
pop
test
out
loope
sti
jo
jg
sbb
and
loop
push
in
ljmp
call
or
loope
pop
inc
lods
mov
pop
mov
bound
add
inc
in
add
xchg
xchg
lahf
and
push
sbb
into
mov
ret
hlt
leave
adcb
sahf
lahf
and
call
shll
add
mov
mov
xor
push
mov
push
xchg
and
ljmp
repnz
fldl
push
inc
inc
xor
adc
mov
lock
xor
push
mov
jae
cmp
push
pop
sub
jmp
xor
nop
xchg
ss
outsl
icebp
mov
call
leave
mov
test
aam
jge
js
cmpsl
ret
pop
push
ja
or
lahf
fwait
in
fs
xor
bound
cs
or
into
pop
inc
pushf
push
mov
dec
hlt
inc
add
icebp
stos
push
arpl
mov
and
push
and
daa
lock
aam
daa
mov
pusha
or
jge
shrb
cli
iret
jge
jbe
pop
jg
sub
mov
xor
lret
setle
stos
mov
push
dec
fists
lea
jnp
xchg
cmp
pushf
data16
scas
shrb
lods
ss
push
fcmovnb
or
dec
fldcw
xor
js
sbb
jl
scas
mov
leave
or
mov
out
xchg
xor
jmp
push
arpl
stos
in
or
add
stos
ds
mov
arpl
popa
dec
rcll
xchg
cs
repnz
mov
mov
xchg
mov
daa
xor
adc
das
jmp
adc
call
es
mov
pmaxub
mov
pop
popa
orl
dec
dec
sahf
loope
or
and
mov
lidtl
cmp
xchg
adc
bound
ds
fnstenv
inc
fiadds
and
rcrl
out
xlat
mov
xor
mov
repnz
cwtl
jo
pop
fstpt
setg
out
xor
mov
imul
lahf
xchg
sbb
inc
dec
jbe
shrl
lret
jne
or
mov
cmp
jne
sub
jmp
cmp
fwait
test
adc
jae
ret
daa
shl
pop
sub
xchg
ret
jp
or
mov
and
adc
ret
lock
js
stos
cwtl
das
repz
push
push
test
loop
or
adcl
and
inc
dec
pop
andl
and
inc
aaa
gs
cmpsl
out
insb
xor
xorl
cmp
jo
pop
inc
push
adc
mov
push
mov
pop
cmp
and
cmpsl
dec
xchg
pop
aas
xchg
mov
lods
add
mov
hlt
xchg
imul
fldenv
sbb
cmp
aas
imul
iret
push
cmp
dec
cmp
cltd
loope
or
jp
push
clc
pusha
fdivrp
adc
rcll
and
out
aaa
mov
sar
inc
cmpsb
sbb
lret
outsb
out
cmp
mov
nop
cs
lods
ljmp
and
mov
mov
out
dec
push
les
and
repz
cmp
inc
xor
mov
sub
bound
pop
enter
shlb
dec
dec
fdivrs
icebp
enter
dec
push
filds
pminub
pusha
nop
adc
std
lret
negl
stc
inc
lret
push
xlat
shlb
mov
pop
push
fbstp
incl
xor
dec
dec
inc
addr16
inc
inc
pushf
sub
ret
shll
daa
mov
push
mov
scas
aas
shrl
mov
mov
leave
inc
and
pop
movsl
xor
mov
shrl
mov
and
mov
sbb
fsubrs
int3
inc
lret
inc
testb
addr16
dec
imul
cmpsb
pop
pop
xor
gs
mov
cmp
data16
push
jb
test
mov
shlb
test
push
addb
mov
pop
aaa
aas
fmuls
xchg
jb
mul
sbb
cmp
lret
xchg
ljmp
outsb
cmc
fcomps
sti
pop
dec
stc
pop
mov
adc
ds
pop
mov
sti
pop
jg
icebp
nop
cmp
pusha
sbb
inc
gs
jae
enter
lock
push
or
addr16
test
imulb
fwait
test
in
sbb
rclb
push
mov
xchg
mov
dec
test
test
sbb
call
add
outsl
jnp
and
jp
imul
mov
or
pop
std
sbb
mov
iret
xchg
xor
pushf
mov
mov
in
and
sbb
lods
xchg
adc
or
mov
xchg
sub
pushf
lea
lods
cmp
dec
call
sbb
popa
cmpsl
clc
sbb
lcall
jg
xor
pop
idivb
push
sarl
add
out
sti
inc
test
loop
shll
fs
inc
sbb
testl
mov
int3
pop
jo
mov
adcl
jae
ljmp
mov
daa
gs
cmp
pop
sbb
ret
sbb
and
daa
adc
outsb
sbb
adc
loopne
and
mov
jp
lock
aam
mov
sti
xchg
pop
daa
push
sti
add
adc
andl
adc
xor
les
stos
mov
clc
sbb
sub
pop
into
subb
iret
in
xchg
inc
lock
dec
mov
popa
arpl
mov
xor
js
mov
lods
xlat
lret
pop
jns
add
jbe
push
outsb
jle
push
xlat
sub
aad
xchg
ret
jmp
pop
dec
cmc
pop
push
inc
push
out
scas
inc
push
adc
adc
xor
lds
cmpsl
shr
cltd
pushf
xor
jg
xchg
inc
movsb
aas
and
fnsave
js
mov
in
push
outsb
fistpll
mov
rcr
scas
mov
sbb
cli
mov
push
adc
jae
mov
push
or
pop
daa
pop
mov
xor
dec
out
das
addr16
in
imul
lcall
cwtl
mov
ret
in
andl
inc
jl
imul
add
mov
aad
dec
jge
ret
mov
add
add
mov
fildll
call
mov
mov
int3
xchg
xchg
mov
mov
pop
enter
ds
pusha
jge
or
icebp
sti
mov
lods
cmp
cmp
add
imul
pop
jb
leave
jl
and
pop
leave
adc
xorl
lcall
sbb
pusha
inc
popa
mov
pop
jns
dec
sti
int
cmpsl
inc
push
lcall
fs
sub
jb
pop
cmp
jno
fstp
sahf
pop
out
push
dec
test
outsl
int3
jg
aaa
push
mov
push
adc
pop
mov
insl
add
jbe
mov
rol
or
ds
mov
xchg
lods
in
mov
fwait
adc
xchg
sub
push
idivb
in
in
lods
jo
std
mov
lods
lods
pop
sub
fidivl
lcall
clc
inc
popa
clc
jae
push
jmp
scas
add
rclb
pop
dec
stos
in
ja
lea
in
es
stos
out
out
jecxz
ljmp
in
or
jecxz
inc
inc
mov
loopne
adc
adc
pop
pop
rolb
jle
mov
xchg
ja
test
mov
xchg
mov
jl
call
mov
add
xlat
outsb
arpl
mov
or
test
shlb
pop
dec
lods
inc
push
adc
flds
jno
jb
mov
test
add
loop
pop
sahf
pop
arpl
jg
cmpsl
cmp
pop
in
rorb
mov
sub
aaa
test
popa
data16
jecxz
adc
sbb
sub
ds
xor
mov
cli
sbb
push
mov
xor
fisttpl
mov
jb
repz
xchg
jl
add
ret
rep
nop
insb
push
sub
std
inc
divl
jp
ret
cwtl
mov
add
push
movl
dec
cmpsl
xor
jle
les
pop
cs
repnz
ret
adc
sbb
sbb
pop
mov
push
in
es
repnz
repz
push
push
movsl
jo
orb
loope
xlat
loop
or
dec
hlt
out
mov
mov
fisubrs
jno
sarl
xsha256
cmpsb
adc
push
mov
pop
rcrb
and
rclb
and
xchg
xchg
hlt
fisttpll
out
sbb
add
shrb
pushf
xor
sbb
in
adc
repnz
push
rclb
rcl
in
inc
test
inc
lret
sub
jns
xor
pop
pusha
decl
iret
jge
xchg
sahf
aam
adc
imul
or
enter
sub
inc
int
mov
xor
out
call
loopne
lods
mul
loopne
incb
add
mov
or
mov
out
sbb
cmpsl
mov
cwtl
pop
lret
mov
dec
xorl
jg
lds
adc
xchg
cltd
nop
mov
add
mov
and
xor
sti
sahf
and
sub
cltd
jb
loopne
mov
popf
jns
sahf
pop
jnp
cld
adcl
xchg
arpl
in
test
out
jne
pop
je
push
notl
in
lds
xchg
out
fwait
and
add
cmp
mov
add
xchg
scas
xor
push
outsl
mov
popf
xchg
xor
test
js
add
test
movsl
xchg
lock
mov
xchg
lret
ret
mov
pop
add
stos
inc
fildll
lds
xor
jb
fwait
mov
mov
or
shrl
daa
or
std
xchg
mov
or
movsl
xchg
mov
pop
lret
jl
inc
fsubs
dec
jecxz
cmpsb
adc
mov
jbe
sub
or
push
jne
pop
fnstcw
lods
sbb
push
and
jno
out
adc
jno
sub
mov
jns
mov
andb
les
add
fcoms
das
leave
xor
add
test
imul
mov
adc
outsb
aad
dec
or
sti
xchg
ret
sub
xor
cli
loopne
or
inc
mov
jo
outsb
push
int
subb
dec
sbb
lea
xor
dec
xor
repz
sub
lret
xor
incl
dec
inc
loopne
cwtl
leave
pusha
lret
pop
adc
ffree
js
push
stos
call
rcl
loopne
aas
loope
test
cmp
inc
and
ljmp
push
in
subb
pop
mov
arpl
pop
jmp
inc
xchg
lret
in
test
jecxz
ljmp
xchg
stc
gs
pushf
sbb
push
dec
mov
sub
loop
jnp
jl
and
gs
xchg
int
cmp
outsb
and
pop
jae
cmp
in
test
jge
out
jnp
mov
cltd
jne
jmp
xor
bound
aam
testl
jmp
test
xchg
add
adc
jge
test
inc
dec
pop
sbb
enter
push
mov
mov
lcall
popf
or
add
mov
js
test
xor
jno
mov
xchg
negl
sbb
ja
or
cmp
mov
cmp
add
lret
nop
scas
insb
sub
out
add
icebp
lcall
mov
ja
popf
stc
or
mov
pop
inc
call
inc
adc
lret
aam
sub
addr16
cltd
pop
fldl
cmp
fidivrs
popf
lret
data16
aad
xchg
push
fisubrl
sarb
jecxz
add
mov
pop
cmpsb
cmp
jl
repnz
or
fcmovne
mov
cltd
xor
mov
and
push
sahf
nop
dec
pop
adc
sti
pop
sahf
adc
data16
mov
jnp
sarl
enter
push
inc
outsl
aam
inc
addb
sarl
cltd
pop
and
cmp
dec
stos
xor
sbb
inc
jno
cmp
pop
cltd
je
scas
ret
pushf
sti
pop
into
jge
sub
xchg
add
sbb
stc
pop
aaa
cmp
dec
add
sub
xor
rcr
out
mov
mov
in
cwtl
call
fidivl
cmp
outsl
dec
adc
mulb
int
dec
fnstenv
iret
data16
je
push
or
loopne
jae
out
mov
ljmp
bound
unpckhps
call
add
adc
cmp
jne
test
in
idivl
lods
dec
loope
test
sub
push
sbb
bound
movsb
rorb
add
inc
out
push
sub
sar
lock
dec
fucomip
out
sarb
in
jle
inc
das
mov
and
ficoml
mov
push
fildl
push
shrb
cli
xchg
sarb
cmpsb
sbb
lods
ljmp
mov
sub
stos
sub
movzwl
and
cmp
or
inc
pushf
sbb
dec
std
fucomi
test
ja
arpl
inc
jae
add
and
inc
jno
repnz
shlb
adc
adc
mov
xor
jl
pop
cmp
sbb
std
mov
repz
mov
in
subl
xchg
add
movsb
cwtl
sahf
je
mov
dec
and
xchg
out
mov
xchg
call
pop
and
fucomi
insl
cmp
sub
mov
push
mov
xlat
mov
cmp
scas
push
fstp
stos
cmp
mov
lock
dec
inc
xor
rcrl
dec
pop
jg
fdivs
dec
push
inc
dec
jmp
daa
push
xchg
pop
dec
mov
dec
xchg
and
xchg
xor
loopne
or
cmp
and
and
push
cmp
popa
add
or
and
and
mov
inc
insb
jno
popf
scas
inc
or
mov
int3
pop
xor
in
in
mov
xlat
cmp
in
test
movsl
nop
aaa
adc
add
fs
stos
jmp
push
sbb
mov
xor
pop
pop
insb
adc
inc
dec
push
test
sbb
adc
xor
cmp
inc
jmp
xor
popf
movsl
jge
lret
adc
or
insb
stos
fistl
data16
mov
inc
cmpsl
pop
fneni(8087
dec
sub
mov
sbb
xchg
inc
icebp
inc
dec
cmp
xor
stos
mov
les
pop
add
ror
lret
add
fmul
insl
fstps
push
adc
xchg
mov
cmp
jb
into
mov
xlat
sub
enter
xchg
ror
pop
mov
out
pop
cmp
loope
jmp
sbb
sbb
repz
lds
mov
imul
mov
cld
movsb
subl
arpl
or
xor
test
push
or
pop
pop
xor
shr
scas
hlt
add
jbe
hlt
pushf
dec
lcall
mov
push
out
cmpsb
outsb
jl
sbb
mov
pop
xor
dec
adc
and
pop
in
xor
push
dec
popa
and
pop
gs
aaa
xchg
cmp
arpl
repnz
into
lods
out
or
xor
icebp
dec
rcll
xchg
out
xchg
jg
fwait
lods
mov
push
mov
add
jl
insb
mov
inc
iret
and
jmp
rcrl
pop
fsubs
pusha
cld
outsl
imul
aas
std
pop
add
xchg
and
sbb
add
or
aaa
push
sbb
cld
scas
pop
repz
cmc
mov
sti
in
adc
push
jge
inc
or
fdivl
cs
in
adcl
mov
or
inc
add
outsl
test
lret
push
int
inc
js
mov
or
test
add
cld
jns
sahf
popa
mov
or
pop
cmp
out
aas
mov
fcompl
adc
cltd
xor
insl
dec
lcall
in
and
test
gs
add
mov
pusha
mov
int3
jge
and
int
gs
imulb
aad
pop
mov
in
rorb
pop
lea
aaa
rclb
push
popf
orl
and
push
fcompl
push
daa
lahf
ss
xchg
mov
mov
sti
cmp
not
xchg
sub
outsb
test
push
nop
adc
mov
rcrl
push
test
fidivrs
cmp
mov
dec
push
push
loopne
ffreep
loopne
fs
hlt
jo
hlt
mov
push
xchg
mov
rcrl
mov
sbb
outsb
push
inc
fisubrl
fwait
or
or
aas
jle
inc
pushf
dec
nop
out
mov
sbb
out
cmp
ret
pop
mov
les
jo
jmp
enter
dec
mov
cli
cli
aas
lock
sbb
cmp
lret
sbbl
lea
es
imul
add
imul
imul
ret
pop
xor
sahf
ss
pop
leave
int
mov
mov
fdivl
fwait
rclb
xor
and
push
loopne
inc
testl
loopne
xor
or
and
mov
and
shrl
mov
pop
loop
pop
lcall
fldl
xorl
fwait
xchg
idivb
mov
cmp
adc
fidivl
mov
outsb
push
fisubs
pushf
or
and
leave
clc
shrb
and
sub
cmp
pop
std
xchg
cmp
daa
cmp
dec
jg
into
out
sub
gs
xor
pop
cs
lret
hlt
cltd
std
sbb
es
or
dec
cmp
dec
or
ljmp
and
popa
test
push
cld
ror
cmpsl
xchg
cmp
dec
test
add
or
or
test
scas
mov
in
and
subb
dec
iret
loope
add
or
shr
pop
out
add
dec
push
ja
dec
shll
and
jle
repnz
jmp
push
jbe
jno
xchg
mov
push
std
cmpb
pop
add
push
mov
repnz
sti
jbe
inc
out
dec
imul
push
push
ja
scas
test
popf
add
out
std
and
xchg
push
dec
mov
jo
add
into
cmpsb
lock
xchg
and
push
or
aas
push
dec
add
loope
ret
stos
jbe
push
sbb
jmp
sub
mov
fstps
pop
adc
xor
xorl
xor
or
adc
jae
sub
jle
push
mov
push
inc
and
repz
adc
inc
jl
stc
dec
sbb
and
xchg
xchg
mov
lds
lods
inc
pop
outsb
adc
outsb
jns
orb
pop
inc
xor
stc
dec
loopne
fistpll
fs
stc
sbb
ljmp
pop
mov
mov
push
push
dec
fbstp
movsb
jg
dec
mov
data16
loop
aaa
sub
mov
pop
scas
jae
or
out
les
frstor
mov
sbb
test
xor
shlb
sbb
add
ss
mov
xor
les
lcall
or
clc
mov
mov
xor
call
into
sub
push
push
adc
idivl
xor
cld
xchg
and
cmp
aam
jno
hlt
sub
cmp
test
inc
adc
stc
jl
pushf
scas
mov
cmpsb
imul
pop
test
mov
xor
push
sub
xchg
andl
test
sbb
test
sub
dec
xor
sar
lret
lods
mov
push
fwait
shlb
mov
fisubl
inc
push
push
mov
jo
mov
jg
sbb
cmp
fmuls
aam
imul
mov
lods
das
ss
sbb
repz
pop
jns
aas
cmpb
push
adc
fdivrl
push
inc
cltd
lds
hlt
lahf
and
and
sub
inc
xlat
das
lret
jp
sub
fstpl
pushf
cli
mov
ret
movb
push
mov
scas
out
push
movsl
jg
into
xchg
push
mov
sbb
fsubrs
fcomps
loopne
ret
rorl
cmp
jne
fs
pop
push
ficompl
push
fs
xchg
or
out
inc
dec
imul
jl
shll
cmc
mov
adc
mov
xchg
repnz
mov
subl
or
sub
cmp
nop
outsb
add
mov
mov
in
outsb
ljmp
loop
add
hlt
sub
addr16
out
std
push
pop
fmull
shlb
aaa
out
jle
outsb
filds
adc
cmc
clc
shl
mov
aad
stc
mov
push
repnz
adcl
loop
fisubrl
sbb
push
jns
out
cwtl
ficomps
fisubs
pop
dec
addr16
add
jnp
enter
sbbb
jle
xchg
out
insb
lahf
xchg
jns
orb
clc
enter
jg
push
sahf
notl
std
jbe
xlat
push
int
pop
add
push
dec
or
daa
jmp
xor
sub
jae
cmp
into
aad
shll
loopne
das
addr16
mov
lahf
rcrb
jae
cmp
adc
push
cmp
in
pusha
ret
or
popf
mov
jge
mov
in
mov
mov
addl
dec
in
sub
movsl
cmc
push
mov
addr16
cmp
xchg
xor
andb
push
mov
movsl
in
sub
cmp
push
cmpb
mov
adc
lds
xor
aad
loope
sbb
add
mov
fstps
xchg
sbb
xchg
dec
mov
ljmp
out
stos
shlb
xchg
mov
scas
sub
push
or
jnp,pn
popf
or
fidivs
in
jbe
dec
mov
imul
inc
mov
int
cs
adc
push
int
fbld
jae
pop
lret
cmpsb
aaa
push
aam
imul
xchg
insb
stc
and
inc
or
cmp
enter
push
cmpb
out
cmp
add
repnz
iret
pop
aam
movsb
mov
mov
imul
stc
fdivl
cs
pop
jbe
cli
cmp
sbb
push
pop
neg
inc
or
and
test
scas
jnp
pop
in
dec
je
test
fxch
push
cmc
jmp
pusha
test
adc
and
mov
xchg
insb
jo
fdivrs
cmc
xlat
shll
pop
scas
add
scas
push
lods
insl
lea
test
pop
iret
mov
inc
loop
jl
mov
push
pop
fists
jb
mov
clc
xorb
jns
push
xchg
repnz
jns
jge
mov
push
aad
jb
mov
scas
pusha
cmp
xlat
divl
push
push
shl
adc
add
fnstsw
addr16
in
mull
xor
lret
in
stos
shll
arpl
jnp
adc
insb
mov
xchg
sub
inc
or
gs
setl
inc
push
pop
inc
jle
jnp
mov
mov
inc
cpuid
sbb
xchg
icebp
cld
inc
shl
push
xchg
dec
cmp
mov
test
xor
ficomps
into
aas
scas
cmp
insb
clc
xchg
movsl
mov
sub
or
stos
mov
lea
sbb
cwtl
jmp
jns
stos
add
lret
push
lods
adc
fidivrs
xor
jl
xlat
xor
inc
sbb
mov
push
add
cmpsb
push
int
sbb
out
add
lcall
scas
icebp
mov
lret
pop
jo
movsb
fstpt
add
lock
or
pop
insl
jge
aad
ret
lea
mov
mov
mov
sbb
mov
fistpll
push
and
incl
ss
cmpsb
scas
xchg
lea
add
and
pop
pop
roll
popf
jg
jle
test
cli
aaa
ficompl
dec
sbb
xlat
popf
and
ret
jbe
pop
cmp
sarl
aaa
fimull
bswap
xchg
add
mov
push
pop
add
inc
sbb
test
aaa
mov
and
mov
das
mov
lods
cmpsl
sbb
fldt
or
aaa
enter
out
inc
mov
and
inc
sahf
call
sbb
push
fidivrl
bound
out
les
into
pop
push
mov
jnp
out
cwtl
mov
mov
or
rol
jp
jne
jle
int
lcall
mov
add
adc
ror
repz
arpl
in
dec
mov
aad
xor
movsb
jecxz
or
cltd
es
loopne
pop
movsb
cmp
ficomps
jge
jge
or
inc
ja
and
les
add
ret
rcrb
sti
fwait
test
movsb
leave
jnp
jns
jo
adc
mov
daa
mov
imul
push
mov
jb
push
int3
cli
decb
out
xchg
enter
shrb
cmp
cmc
push
mov
jno
pop
fsincos
xchg
jge
xchg
add
jb
jge
sbb
imul
push
xchg
aas
addr16
mov
sbb
ret
push
sbbb
xchg
pop
loope
pop
imul
cmp
shlb
jg
mov
xchg
es
in
addb
dec
adc
ljmp
inc
popf
test
mov
stos
and
ret
lods
mov
in
jmp
mov
pop
jb
pop
cmpsb
mov
lock
add
pusha
lret
sbbl
lock
push
into
pop
ss
dec
loope
dec
jne
js
jmp
cmp
or
aam
push
fstps
fs
add
inc
cltd
jl
shll
insl
fildll
outsb
mov
pop
sub
shrl
pushf
cmp
insl
mov
xchg
adc
jno
sbb
sbb
daa
clc
call
and
xchg
add
pop
fimull
and
ficompl
mov
leave
int
dec
inc
adc
cmp
mov
rorl
nop
mov
jne
jmp
adc
movsb
cli
adc
push
jns
inc
shll
in
and
je
rcl
leave
pop
movsb
inc
fcom
pop
shrl
fsub
add
gs
fwait
fs
inc
fs
daa
out
dec
or
dec
stos
dec
stos
and
push
test
cmp
test
cmpsl
inc
aas
jg
mov
insb
lret
retw
mov
lock
mov
fs
arpl
fdivr
xor
imul
lock
xchg
repnz
dec
mov
ret
and
xlat
leave
sbb
lret
stos
aam
push
jecxz
cld
mov
sbb
cmp
dec
lcall
jl
int
movsb
xchg
test
jae
lock
jne
pop
out
or
inc
push
outsb
bound
mov
jns
xor
mov
inc
and
mov
bound
push
jle
mov
push
leave
xchg
fdivp
fisttpl
out
es
bnd
push
orb
ds
ja
add
ds
mov
cwtl
pop
int
rorb
xchg
sbb
sbb
in
cmp
cmp
push
out
roll
pop
je
lret
addl
mov
fdiv
mov
fildl
xor
inc
movsb
sbb
xchg
dec
repz
sub
into
gs
sbb
xchg
loopne
pushf
dec
adc
jg
mov
jle
jnp
sbb
sub
ja
insb
mov
fwait
jmp
mov
mov
rorb
ss
ficoms
dec
roll
loop
xlat
mov
dec
popf
push
pop
inc
dec
nop
bound
ja
dec
xor
inc
pop
jbe
cmp
jae,pt
mov
mov
lret
sbb
rsm
inc
fistl
jne
std
enter
fmuls
mov
shr
mov
shl
loopne
iret
adc
adc
imul
fs
jno
mov
adc
leave
xchg
adc
popf
sbb
pop
or
pop
add
push
dec
loope
mov
icebp
or
sbb
pushf
push
cmpsl
dec
mov
or
sbb
jns
xchg
jae
shlb
jp
xor
add
lods
push
jge,pn
in
pop
repnz
mov
mov
cld
lds
insb
psubusb
and
insb
push
popf
jo
sbbb
int3
xor
sahf
mov
push
or
lods
jb
ffree
stos
dec
shr
lret
repnz
aad
popa
add
sbb
daa
sbb
lods
faddl
mov
add
fs
movsl
xorb
sahf
sbb
popa
mov
shrl
mov
shl
ds
stos
push
mov
gs
xchg
fxch
jne
dec
cmpl
xchg
mov
int
cmp
outsl
push
xor
loopne
inc
repz
sbbl
pop
adc
cmp
mov
sbb
pop
movsl
push
fdivrp
addl
data16
push
shl
mov
fdivl
cli
imul
std
pushf
inc
inc
mov
and
mov
inc
cmp
out
addr16
push
rcr
jge
pusha
popa
xor
into
adc
jae
push
cmp
xchg
pop
rcrl
push
jnp
dec
mov
jge
data16
add
fwait
test
xor
mov
push
pop
mov
mov
pop
sahf
lods
xor
mov
daa
rorl
jb
hlt
repnz
loop
and
mov
fnstcw
jge
out
shlb
cltd
xor
test
mov
pop
jne
jo
mov
mov
xchg
xchg
xor
call
add
aam
test
fwait
push
rorb
mov
adc
das
test
mov
or
subb
cmpb
dec
or
pop
and
dec
sbb
aam
into
das
stc
pop
call
aas
mov
xor
scas
in
mov
inc
outsb
fidivl
lret
sbb
aas
push
fnstsw
inc
xchg
in
jbe
ficoml
jnp
adc
lret
fisubl
int
das
pop
jo
jbe
int
jnp
aam
dec
pop
call
push
sahf
icebp
das
mov
leave
movsb
lcall
fs
loopne
lds
test
out
dec
adc
mov
add
xor
es
push
cmc
sbb
pop
repnz
jno
test
repnz
sbb
xchg
ret
add
call
mov
js
insl
mov
pop
lahf
in
adc
push
add
sbb
dec
mov
andb
aaa
mov
test
loop
jl
push
inc
jns
mov
dec
mov
xchg
adc
lods
inc
lds
test
pop
xchg
fwait
in
test
cmpsl
call
add
clc
in
iret
notb
or
fisttpll
push
int
imul
xchg
in
push
in
out
rol
fstps
xor
into
gs
fnstcw
add
cmpsb
out
jns
call
sbb
cmp
pop
adc
xchg
mov
dec
hlt
test
mov
jmp
mov
fwait
xor
and
std
pop
mov
aam
outsb
jl
ret
jp
inc
filds
fidivrl
jg
test
push
sbb
dec
dec
adc
xlat
mov
sub
cmpsb
clc
xchg
call
or
lahf
add
data16
xchg
lods
inc
inc
dec
sub
lretw
test
test
fistpll
aad
rcrl
xor
push
mov
sub
lea
sbbl
and
es
scas
test
cli
adc
ds
dec
xor
sub
lcall
cmp
and
movsb
insb
shlb
out
jle
jns
xchg
and
add
push
mov
icebp
mov
and
out
je
add
sbb
jno
xchg
xor
inc
jb
sub
xchg
fnstenv
or
xchg
shlb
movsl
sbb
xchg
sub
hlt
in
les
cmpb
aad
inc
cmp
js
pop
push
int3
cs
xor
dec
dec
loopne
jl
jge
lock
std
xchg
add
adc
gs
jns
inc
mov
in
cmp
dec
cmp
insl
cmpsl
ret
inc
pop
xor
addb
shlb
pop
cmp
imul
fxch
sbb
mov
repnz
cmc
fwait
dec
pop
jp
sub
cmp
clc
sbb
xor
pop
adc
cmp
insl
fisubrl
sbb
sbb
icebp
adc
leave
div
sub
or
push
scas
or
in
das
popa
xor
outsl
out
push
fwait
and
xchg
es
int
and
xor
xor
cs
inc
sahf
sub
and
lods
inc
xchg
add
jbe
xor
sahf
xchg
jmp
cmp
sub
push
adc
xchg
std
adc
mov
pop
cmc
xchg
adc
mov
mov
cmpl
jl
xor
push
add
push
mov
mov
or
add
pop
enter
adc
shlb
clc
jg
pop
stos
xchg
cmp
xlat
or
outsb
mov
popl
ja
adc
push
push
cltd
cmp
aam
sub
out
bound
push
ds
adc
xchg
cmpsl
ret
cmc
cmc
mov
sub
mov
jo
pop
das
je
lds
fisubs
sbb
jmp
cmpsb
arpl
mov
cli
repnz
ljmp
test
lods
stos
movsl
shlb
arpl
dec
insb
repz
push
and
pop
jno
inc
shlb
mov
enter
and
pop
dec
mov
mov
aad
addl
jg
mov
pop
std
lods
enter
xor
dec
jno
or
mov
mov
lock
out
add
cli
inc
lret
sub
cmp
orl
push
push
int
jle
repz
dec
inc
push
mov
inc
lock
lods
popa
add
inc
cld
fsubr
sbb
outsl
in
test
push
loop
sti
repnz
sub
aam
rcll
sahf
sahf
fdivp
or
fsubl
out
mov
adc
rcrl
dec
sarl
push
jno
mov
add
fwait
sub
das
dec
pushw
lods
popa
pop
mov
loope
test
mov
lock
mov
push
pop
lods
lods
inc
fiadds
ss
xchg
fnstsw
test
test
ja
sbb
mov
jbe
ss
imulb
rolb
neg
in
hlt
or
adc
push
mov
fldenv
add
insl
push
xor
clc
cld
cmpsl
mov
mov
sahf
adc
in
out
arpl
fiaddl
or
or
lods
sub
xor
int
out
je
fcompl
fldl
lcall
aad
out
jo
lret
and
xchg
add
das
addr16
adc
mov
jmp
clc
js
fmull
scas
cmp
rorb
sub
mov
stc
sub
lods
pop
pop
sahf
pop
dec
clc
xor
xchg
adc
jae
and
mov
pop
lcall
mov
test
mov
out
jns
mov
mov
lret
jo
sub
es
pop
stos
jb
xor
jne
addb
xor
fsubrs
push
xchg
test
inc
cmpsl
sub
sbb
or
decb
mov
jns
pop
and
push
jp
int
pop
inc
je
test
ss
add
lea
test
jmp
mov
popa
xor
add
in
dec
sbb
out
ljmp
pushf
imul
in
les
xlat
aaa
adcl
in
loop
ds
dec
es
push
lds
dec
sar
jbe
arpl
nop
lahf
dec
jmp
inc
xchg
mov
push
out
xor
jl
test
out
enter
stos
mov
add
insb
inc
add
repz
sahf
mov
mov
adc
inc
sbb
mov
lods
jnp
dec
insb
inc
lods
mov
pop
push
daa
rol
inc
push
int
mov
jl
pop
stos
xchg
aas
sbb
cmp
push
add
call
push
fdivrp
xor
ja
cltd
jmp
movsl
mov
dec
movsl
mov
cwtl
mov
or
adc
jns
test
jp
lds
jecxz
imul
js
mov
cmp
loope
or
push
sbbl
loop
adc
fidivl
push
cmp
pop
sub
lea
sti
icebp
sub
loop
adc
cmp
sti
sub
fcomps
push
es
inc
pop
sub
lcall
push
jae
lcall
fldl
out
push
loope
and
mov
ret
es
loopne
mov
jge
loopne
add
sbb
ljmp
sarl
pop
popf
call
add
xchg
xchg
icebp
or
mov
inc
out
scas
and
pop
mov
lock
daa
out
std
popa
jp
adc
fcompl
mov
cli
loop
push
adc
andl
xor
inc
andl
cmc
adc
test
fs
pusha
jb
fidivl
xchg
fidivl
jg
mov
jno
jmp
hlt
inc
arpl
aam
xor
ljmp
jmp
xlat
pop
pop
pcmpgtw
xchg
cmp
stos
push
insl
adc
jno
pushf
xor
mov
shll
xlat
outsb
push
push
subb
sbb
icebp
xchg
leave
lods
aaa
pop
test
daa
jnp
add
lret
mov
addr16
push
inc
mov
insl
inc
sub
rcrl
mov
push
ficomps
addl
sub
int3
into
nop
dec
or
outsb
in
push
lods
sbb
mov
enter
ss
jmp
xchg
sub
sbbl
pop
cmp
shlb
testb
mov
pop
dec
xor
loope
aam
in
pop
or
jae
fst
jmp
outsl
ret
outsb
mov
cmpsb
loope
movsb
or
shrl
sbb
dec
sub
test
lret
subl
into
fiaddl
add
setb
and
mov
mov
ret
xorb
sbb
enter
jge
outsb
adc
push
insb
cmp
rorl
fisttps
scas
mov
adc
pushf
jmp
fidivs
mov
scas
iret
cmpsl
and
inc
loope
mov
mov
stc
popf
xchg
push
ret
pop
or
mov
mov
adc
lods
stos
or
mov
shll
les
loope
jmp
pop
loope
out
push
sahf
lock
pusha
mov
pusha
pop
xchg
add
cs
pusha
test
loope
adc
and
leave
cmp
sti
mov
mov
sti
pop
daa
mov
push
inc
fcmovnu
mov
fldcw
mov
mov
fwait
ret
mov
pop
push
mov
into
gs
andb
aas
or
push
shl
cmp
lock
sub
movsb
pop
push
push
das
push
sub
dec
mov
mov
mov
js
ss
mov
dec
repz
dec
sub
xchg
xchg
mov
xor
jecxz
pop
jmp
or
jo
push
or
mov
mov
jmp
std
cmp
in
std
fnstenv
mov
aam
cs
sarb
or
xor
hlt
js
dec
xor
sarl
cs
ss
pop
push
push
xchg
pop
cmp
cmp
daa
cmp
pop
rolb
pop
mov
and
scas
imul
popf
jp
jae
push
jns
cltd
test
in
rorl
and
pop
push
insb
add
not
outsb
sub
movsl
inc
cltd
lds
jecxz
sub
lret
cwtl
xor
loope
iret
adc
dec
sbb
xchg
mov
arpl
mov
das
mov
iret
dec
pop
shr
ret
aas
push
in
jo
popl
mov
pop
jecxz
fsubp
cmp
and
aad
mov
fadds
push
es
in
xchg
dec
mov
sbb
pushf
arpl
dec
adc
xor
je
sbb
add
stos
ss
push
enter
push
popa
stos
enter
pop
in
mov
and
inc
mov
js
addr16
jl
mov
cmpsl
xchg
xor
cmp
jae
xchg
jmp
lds
out
test
mov
and
jbe
xor
std
xchg
addr16
pop
add
mov
jl
adc
mov
in
test
push
pop
out
insb
addr16
dec
cltd
lea
ss
aad
ljmp
hlt
inc
popf
sahf
jns
int3
andb
fwait
mov
mov
clc
fmul
pusha
jle
xchg
mov
lahf
out
xchg
and
je
fwait
xlat
mov
mov
push
inc
sbb
inc
into
mov
insb
dec
xlat
mov
das
adc
mov
dec
mov
in
inc
cmpsb
push
pop
insb
xchg
sub
sti
dec
jmp
cltd
insl
addb
push
aaa
cmp
call
add
sti
xchg
shl
inc
loop
sbb
das
xchg
popf
xchg
and
dec
pop
jmp
aad
push
nop
ret
call
cmc
popf
iret
mov
jae
xchg
cmp
or
enter
loope
or
call
ja
lods
dec
test
gs
mov
cmpsl
repz
inc
fnstenv
cmpsl
dec
mov
iret
hlt
addr16
mov
and
sti
lret
sub
out
mov
adc
jmp
jle
cli
adcb
mov
xchg
inc
cmp
pop
dec
cmpb
inc
mov
and
lcall
xor
jbe
mov
mov
mov
fnstsw
out
test
lds
rolb
jg
jmp
xor
insl
pushf
adc
jnp
ljmp
mov
sbb
pop
aam
push
xor
pop
xchg
stos
sub
imul
rclb
cmp
cmp
andl
push
pop
mov
loope
jp
jae
push
out
testl
cld
test
in
stos
lret
cmpb
fidivl
mov
fidivl
mov
or
sbb
inc
push
dec
cmp
std
cltd
stos
shlb
mov
sub
cmp
and
cmp
mov
aaa
sbb
push
sub
hlt
mov
sbb
cli
mov
and
sbb
rorl
insb
pop
xchg
les
jl
jb
sub
mov
dec
or
mov
sar
sti
cmp
cmp
movaps
popa
sbb
shrb
orb
xchg
xlat
inc
jno
adc
test
rorb
push
jg
int3
jno
jmp
adc
ret
inc
mov
xor
shll
mov
pushf
test
bound
pop
roll
repz
lock
mov
cmpsl
mov
mov
jmp
mov
jbe
sbb
xchg
or
test
cs
es
inc
les
sbb
add
pop
sub
js
cmc
popf
or
mov
mov
and
xchg
fisttpl
push
fmull
mov
jnp
pop
nop
xchg
and
gs
push
aas
cwtl
enter
aam
add
ss
xor
xchg
imul
in
inc
daa
cmp
in
sub
into
and
in
mov
xor
mov
sub
or
mov
negb
ret
icebp
movsl
cld
icebp
sub
out
xchg
cli
push
addr16
pop
cmp
rcll
mov
mov
or
das
inc
iret
bound
jne
cli
jl
fisttpll
into
ss
in
xor
out
test
jle
ds
or
rol
loop
lods
mov
dec
pop
cmp
cmp
fildll
rcrb
aaa
pop
pop
xchg
or
push
loope
fstpt
ljmp
mov
rorb
faddl
ficoml
jecxz
repz
inc
negb
nop
mov
jle
pop
jmp
or
ds
iret
mov
xchg
aaa
mov
cli
int3
arpl
adc
inc
sbb
mov
fdivl
inc
jge
testb
sub
jnp
cltd
xchg
lret
sbb
es
lea
lret
jg
lock
mov
add
int
jbe
inc
gs
cmp
mov
ss
aad
inc
ds
mov
cmp
mov
repz
or
push
inc
in
movsl
add
xor
adc
lcall
sbb
popf
icebp
mov
lret
push
cld
mov
pop
and
xchg
sub
ljmp
scas
or
mov
fisubrl
fnsave
dec
imul
pop
ja
push
lods
cmpsb
lods
mov
cwtl
jb
push
push
inc
pop
lcall
inc
push
sub
dec
cmp
mov
lcall
or
iret
push
mov
or
xlat
pop
imul
paddw
in
cmp
inc
push
push
sub
jo
ljmp
stos
dec
and
sbb
aam
lock
push
cld
inc
pop
add
push
cmp
insb
clc
xor
je
xchg
xor
push
gs
ror
idivb
loope
xchg
loope
daa
pusha
orb
adc
push
mov
fsubrl
adc
cmc
inc
mov
add
jb
mov
insb
jo
pminsw
cmp
add
xchg
mov
mov
enter
and
mov
mov
inc
dec
orb
dec
inc
sti
out
movsl
inc
test
out
test
mov
insb
sarl
addr16
pop
add
xchg
out
xchg
in
sbb
push
pop
mov
divb
aad
roll
enter
sbb
pop
jo
mov
and
lods
pop
fidivrs
jmp
into
cmp
add
imul
std
dec
push
stos
push
daa
jmp
loope
push
add
test
aad
mov
mov
incb
sbb
sbb
subb
lahf
stos
lods
inc
ret
shld
fnstenv
scas
mov
in
xor
mov
outsb
sub
dec
fsubl
pop
mov
pushf
out
int
mov
sub
and
ret
add
aaa
movsb
mov
adc
jle
ljmp
popa
nop
sbb
ds
jnp
push
mov
cmp
stos
push
lcall
inc
add
adc
pop
and
pop
out
clc
xchg
or
shrl
xchg
jb
adc
dec
inc
andb
pusha
and
cli
enter
fldcw
dec
cmc
or
pop
testb
sub
jae
pop
xchg
pop
inc
rolb
in
mov
inc
repnz
adc
jp
insb
add
in
sahf
out
xor
ret
leave
call
aad
insb
repnz
jecxz
mov
add
pop
add
mov
stos
push
mov
cltd
lret
fldt
pop
mov
add
test
mov
sahf
mov
call
mov
xchg
mov
out
dec
mov
hlt
adc
or
idiv
and
jbe
cmp
inc
js
rcrb
stos
mov
call
fstpt
std
and
scas
adcl
and
inc
push
les
add
outsl
call
lea
idivl
int3
popl
in
sub
ror
sbb
ret
out
push
sbb
loop
mov
dec
incb
fistps
stos
xchg
dec
es
adc
fs
imul
popf
push
sub
jnp
xor
fbstp
aam
cmove
push
xchg
push
ljmp
jno
repnz
mov
aam
sbb
sub
aaa
into
sahf
dec
xor
mov
add
mov
push
jge
mov
xlat
adc
mov
xchg
call
in
decb
sbbb
lahf
jae
lea
mov
clc
stos
jo
mov
std
xor
leave
jno
stos
add
fiaddl
or
lock
cmc
popa
mov
mov
mov
rcrl
jl
mov
fistpll
mov
sbb
xor
adc
push
ret
pop
adc
push
add
lea
inc
lods
mov
mov
data16
adc
mov
stc
fwait
ss
dec
adc
pop
push
sbb
dec
jg
out
js
and
xor
xor
test
in
std
pop
out
push
mov
mov
or
cmp
mov
cmp
fisttpll
frstor
outsb
dec
pop
lcall
daa
into
adc
dec
or
mov
dec
aam
cmp
jecxz
lret
push
fdivrl
js
mov
dec
sub
lods
dec
jnp
mov
sub
cmp
pop
ret
pop
lcall
fucomip
faddl
das
sbb
nop
push
cmp
cmpw
decl
xor
xchg
ja
aad
cs
daa
repnz
testl
rolb
scas
xchg
pop
cmc
or
int3
mov
sbb
xchg
add
dec
adc
scas
pop
lea
pop
loopne
xor
jg
cs
stc
cmp
jle
cmp
stc
jo
cmp
jp
outsl
fs
adc
pop
mov
xchg
dec
stc
pop
cmp
insl
sub
sbb
repnz
cli
inc
shlb
adc
ror
xor
jnp
xor
inc
scas
inc
jp
lods
es
mov
leave
adc
pop
mov
pop
subl
pop
cmp
lea
mov
rcrb
cmpsl
jp
into
lret
cmp
shl
pop
mov
push
call
pop
ds
and
into
fldt
mov
sub
bound
jno
jnp
or
cmp
push
xchg
shll
das
cmp
cs
or
dec
ds
pop
fstps
and
mov
in
jnp
add
clc
sub
cltd
test
outsb
cmp
jae
enter
push
inc
dec
lret
call
and
aad
outsl
push
xchg
loopne
and
xchg
int
js
mov
aas
push
jmp
aaa
lret
js
cmp
push
sub
xor
call
dec
rclb
xor
cs
popf
mov
into
aaa
mov
pop
int3
inc
xchg
pop
jae
in
sti
lock
push
sbb
aaa
dec
mov
mov
cmp
xchg
sbb
cmp
mov
adc
rclb
sub
and
cmp
xor
push
pop
xchg
insb
xchg
pusha
enter
cmpsl
or
jge
adc
iret
pushf
and
call
lods
dec
subl
cwtl
bound
pop
inc
cwtl
pop
popf
pop
mov
ds
inc
and
mov
dec
jns
popf
mov
inc
pushf
xor
xchg
mov
mov
outsb
mov
into
sbb
es
pop
cmc
js
mov
push
sub
sahf
in
push
rcrl
inc
and
xor
inc
lea
xor
jle
push
pop
sbb
ja
shll
fstpt
pop
lcall
popa
jnp,pt
xor
sbb
out
add
mov
mov
aam
mov
pop
imul
es
mov
xlat
scas
out
bound
xor
mov
pop
outsl
jnp
xchg
sbb
sub
fnstcw
test
pop
mov
ljmp
or
push
adc
iret
sbb
ljmp
cmp
ss
stos
hlt
lock
out
pop
shlb
jne
sbb
and
outsb
mulb
inc
push
cld
test
ja
xchg
inc
mov
sbbl
mulb
pop
and
add
jb
jbe
mov
kmovd
sbb
push
mov
mov
repnz
mov
jle
mov
and
js
push
push
pop
insl
and
lock
imul
mov
dec
xlat
popf
lds
lahf
jge
pop
shrd
xor
jecxz
testb
fisubl
mov
test
pop
insl
adcl
loopne
rcrl
xlat
repnz
frstor
int3
xchg
out
rcr
negb
mov
pop
jb
add
mov
dec
push
push
jno
lds
movsl
sbb
dec
pop
mov
jae
js
xor
xchg
cltd
das
popf
jle
insl
jns
fidivl
mov
mov
stos
inc
xchg
bound
aam
jge
inc
pop
leave
pop
out
push
in
inc
push
push
jne
outsb
ss
bound
and
daa
std
push
fadd
clc
inc
lds
or
fcmovbe
scas
ss
sub
push
push
aas
or
pop
mov
ret
jle
rcrb
mov
push
loope
clc
dec
jp
jnp
inc
sahf
pop
sbb
xchg
movsl
and
inc
movsb
mov
pop
and
out
test
dec
popa
imul
push
mov
in
test
adc
inc
push
pop
mov
jo
sub
movsb
cmp
and
cmpsb
icebp
call
cmp
loope
inc
pushf
mov
ret
add
dec
pop
mov
add
mov
ror
out
stc
or
xchg
and
lods
pushf
mov
pop
dec
notb
das
or
ds
std
dec
dec
jg,pn
dec
pusha
pop
vpmullw
movsl
push
xor
cmpb
out
mov
idivl
addr16
cmp
push
xchg
or
and
cmp
mov
popf
pop
adc
jp
jge
into
inc
jno
pusha
mov
and
lea
pop
dec
sarl
pop
test
adc
adc
lret
mov
loop
push
sti
test
sub
rcrl
jle
adc
dec
dec
pusha
cmp
xor
push
jae
pop
inc
inc
inc
mov
mov
mulb
or
dec
jae
popf
sti
aad
fdivr
or
mov
xchg
and
cwtl
lea
and
sub
repz
insb
test
adc
pop
jae
lods
inc
adc
int
add
cmp
and
xchg
push
push
or
push
je
lods
addl
hlt
lcall
les
es
in
cli
jge
push
fucomp
ror
xchg
cs
outsl
push
and
mov
and
movb
outsb
fidivs
push
mov
xchg
mov
or
lcall
aas
jmp
popw
or
hlt
and
push
and
out
push
mov
jb
std
lods
repnz
dec
sub
xchg
mov
xchg
insl
jecxz
sbb
pop
add
fbstp
je
in
lret
aam
adc
ja
xor
lea
jo
int3
mov
jecxz
out
push
dec
push
mov
or
cmp
mov
inc
fcom
inc
pop
loop
sub
shrb
push
imul
das
pushl
and
mov
cmc
push
and
inc
inc
cmc
dec
in
out
sub
mov
push
push
push
int
adc
dec
inc
lods
and
in
dec
dec
fnstenv
in
mov
mov
clc
in
out
xchg
xchg
push
lods
cmp
xor
dec
popf
fildll
jle
test
cmc
xchg
jl
popf
lahf
cltd
mov
cld
inc
sahf
cmpsb
mov
mov
roll
or
adc
xor
inc
push
jp
pop
jns
es
add
mov
dec
lods
in
cld
adcl
pop
leave
mov
jnp
jbe
movsb
pushf
mov
or
mov
mov
inc
fistl
xlat
aad
aad
stc
push
iret
and
popf
inc
fadds
mov
ds
cmc
push
sub
sub
and
and
popa
test
bound
iret
push
jmp
testb
push
ret
sbb
fcmovne
mov
push
xor
sbb
dec
out
bound
fs
dec
test
or
in
xor
inc
ficoml
fcmovnb
inc
out
clc
fsubr
int
jge
cmpsl
jp
lahf
loop
dec
es
pop
jnp
test
std
cmpsb
lds
int
xchg
dec
mov
aas
sbb
lahf
scas
nop
pop
repz
push
jp
or
movsb
outsl
hlt
push
cwtl
xor
cwtl
mov
inc
movsl
aad
xlat
movsb
and
cmpb
mov
ss
push
pop
test
ds
mov
cmp
neg
pop
lods
dec
inc
outsl
add
outsb
xor
mov
inc
push
ljmp
es
sahf
addr16
enter
je
jge
loope
fdivr
mov
into
sbb
adc
fistpll
mov
enter
and
xor
mov
jmp
sbb
repz
mov
int3
imul
sub
iret
ror
cmp
aaa
sub
enter
je
dec
stos
xlat
cmp
inc
mov
data16
arpl
mov
push
in
jp
aam
fwait
je
mov
mov
cmp
daa
clc
lahf
fldl
dec
jmp
xchg
jl
and
mov
pop
pop
aas
jbe
sarb
test
push
insb
sbb
xchg
add
mov
push
dec
sub
icebp
or
stc
leave
push
inc
test
mov
sub
pop
lahf
mov
js
clc
cmpsl
cmp
cli
pop
sahf
push
or
mull
push
stos
enter
in
push
in
push
rolb
pop
insb
add
inc
stos
mov
adc
sbbl
out
in
pop
dec
push
inc
faddl
popf
fbstp
push
mov
ror
in
mov
cmpsb
lea
icebp
out
rcrl
hlt
adc
inc
jg
pop
fidivs
pop
jg
mov
push
mov
fnsave
stos
scas
adc
mov
mov
and
inc
nop
jbe
cwtl
leave
fld
mov
push
and
pop
repnz
sar
push
cmp
fucom
push
xchg
sti
andb
add
out
test
jmp
add
pop
lea
gs
add
cld
sub
pop
sahf
data16
inc
flds
ljmp
jmp
xorb
stos
in
add
adc
xor
cmpl
fldl
cwtl
inc
push
cltd
call
test
xor
cmp
inc
int
jno
fisubrl
adc
movd
lret
or
arpl
aad
decl
cli
outsb
add
sub
je
mov
pop
sub
cltd
xchg
add
mov
ret
shl
mov
dec
cld
adc
mov
scas
sarl
lret
out
mov
das
inc
jns
lret
and
dec
or
and
in
ds
leave
loopne
sbb
sub
scas
xor
scas
sub
xchg
adc
pusha
dec
pop
shr
xor
es
cbtw
out
push
test
test
fsubl
mov
cwtl
pop
mov
add
jg
scas
xor
in
fdivs
or
add
xor
or
testb
lods
mov
aam
xlat
outsb
push
cmc
push
push
xlat
inc
insb
sub
icebp
jmp
adcl
xchg
popf
test
dec
ret
push
das
cmp
out
cmp
idivl
cmpsb
nop
push
lods
rol
xchg
je
ss
and
mov
inc
inc
mov
dec
pop
cmpsb
imul
popf
sbb
adc
add
push
add
sub
pop
push
add
adc
push
ja
dec
div
pop
adc
adc
and
movsl
jae
add
push
stc
sub
cmp
jl
dec
adc
adc
sub
push
cmpsb
jl
jbe
movsl
cld
int3
stos
jne
sub
mov
ljmp
fldenv
add
out
pcmpgtb
test
mov
adcb
loopne
jo
out
xchg
sbb
arpl
stos
mov
ss
loop
addr16
sbb
xor
push
fwait
ss
popf
pop
loope
cmpsl
out
sti
mov
sub
dec
adcb
push
sahf
sbb
icebp
sub
lods
scas
repnz
int
xor
dec
adc
pop
insl
sti
ss
data16
sbb
mov
jp
push
mov
xchg
push
push
cmpsb
pop
and
fs
adc
jb
xor
jnp
push
pushl
pusha
ja
aaa
insl
test
sbb
popa
cli
mov
adc
out
cwtl
das
lods
pop
adc
shlb
sti
xchg
push
pop
fs
add
mov
test
in
enter
fiadds
test
inc
sbb
xchg
rcrl
mov
ss
rorb
cmp
xor
loopne
cmp
out
clc
mov
jbe
dec
mov
loopne
xchg
xchg
js
inc
subb
mov
xchg
and
lahf
jno
mov
test
push
rolb
dec
pop
popa
xor
pushf
arpl
outsl
jge
cmp
push
dec
mov
lods
jae
mov
pop
std
inc
mov
enter
pop
add
shl
sbb
jl
inc
sbb
int3
and
xchg
je
inc
xor
pop
out
xlat
lds
rcll
jb
clc
sarl
rol
mov
xlat
push
cmp
xor
push
jp
mov
cwtl
stos
fcoms
xor
fsubs
cwtl
icebp
stos
movsb
in
pop
int3
push
fisubs
push
outsb
out
popa
clc
or
jg,pn
pusha
pop
lcall
jnp
and
ss
sti
test
dec
pop
movl
push
xchg
js
repz
scas
lods
mov
or
dec
sti
std
push
or
xchg
enter
mov
stos
dec
flds
sbb
fcoms
xor
fwait
cmp
and
xchg
sbb
mov
mov
rorb
jecxz
inc
pop
loope
popf
xor
add
cmpsl
notl
or
sarb
lods
xor
pop
daa
mov
add
inc
sbb
sbb
imul
sub
cs
iret
inc
xor
loop
shrd
and
int
sub
sbb
mov
roll
jbe
sbb
and
mov
ret
scas
push
enter
sbb
cmpsl
adc
inc
cmp
es
add
xchg
xor
les
pop
push
cltd
adc
dec
imul
lds
lods
mov
fistps
das
cmp
xchg
cmp
movsl
sub
jae
xchg
mov
push
adc
sbb
sbb
jmp
aaa
in
imul
xor
aam
mov
iret
data16
in
mov
sub
and
jo
mov
adc
jns
pushf
adc
push
mov
mov
arpl
push
jae
pop
mov
lods
jo
mov
jmp
hlt
jbe
shl
mov
xor
repnz
enter
mov
push
push
and
in
adc
lret
jne
cmp
in
or
stos
scas
push
pop
icebp
lret
push
sbb
mov
ret
xchg
mov
xor
decb
xchg
aaa
in
out
popf
pop
sarl
aam
and
test
xchg
arpl
inc
mov
sbbl
sbb
aas
gs
inc
pop
cmp
add
xor
and
jge
jl
lcall
push
xchg
notl
sub
xor
fimuls
filds
loope
ret
dec
sar
xchg
repz
fldcw
sbb
leave
mov
and
pusha
iret
xchg
or
jno
pop
push
sbb
les
mov
mul
inc
dec
loop
mov
or
xlat
imul
lea
xchg
loope
movsb
es
jb
ja
push
data16
orb
and
sti
or
inc
nop
daa
jae
sbb
mov
shr
es
pop
or
xor
inc
push
mov
iret
lods
add
inc
xlat
mov
jecxz
push
and
movsl
adc
cmpsl
and
inc
scas
cmp
lret
pop
imul
sbb
add
mov
adc
fidivs
dec
sbb
mov
out
xor
in
adcl
decb
test
mov
pop
sbbl
xor
xor
add
ficompl
xchg
push
xchg
push
movsl
pop
adc
mov
cmp
mov
push
sbb
inc
sti
xchg
fs
sub
jae
push
out
xchg
dec
les
mov
insb
rorb
mov
roll
xlat
outsb
xchg
xor
mov
repz
dec
add
scas
rcrl
or
push
cs
push
mov
lds
rcrb
out
fadd
dec
lret
data16
mov
mov
mov
fcoml
xchg
dec
js
das
push
jmp
or
adc
pop
imul
ret
push
push
popf
jns
iret
pop
sbb
popf
sub
adc
jne
cs
fwait
mov
sbb
jnp
cmp
repz
pop
cmp
push
mov
int
cmp
inc
mov
pop
aas
add
bound
jno
push
scas
rcrb
stc
es
or
jp
add
iret
popaw
in
test
mov
push
fisubrs
sbb
inc
adc
push
bound
dec
div
sbb
addr16
ret
sbb
out
xchg
mov
or
ss
fidivrs
movsl
dec
test
xor
imul
flds
das
jo
popa
inc
mov
lcall
and
ret
adc
js
xor
imull
icebp
pop
dec
dec
ja
repz
mov
pop
repz
lcall
or
lods
mov
fsubs
fimuls
fsubr
lcall
push
fists
inc
jae
cli
push
xor
mov
adc
fidivs
push
xchg
sti
js
mov
gs
cld
cmp
adc
mov
mov
data16
lea
add
fidivrl
ret
test
outsb
or
pop
pop
dec
and
sub
push
sub
js
repnz
cmp
test
or
shlb
sub
outsl
inc
mov
fidivs
loopne
out
fsts
xchg
fdivp
add
xor
cltd
jno
pop
rorl
cltd
push
lret
lahf
mov
xlat
xchg
xor
jmp
cwtl
aaa
clc
sub
sub
cmp
push
or
inc
xchg
ret
pop
adc
push
push
shlb
mov
loope
pushf
das
int
ret
fucom
mov
add
xor
ss
pop
stos
int3
int3
arpl
lret
das
mov
cwtl
dec
insb
mov
test
add
dec
jns
lods
and
in
out
ss
inc
adc
jp
xchg
mov
mov
pop
adc
dec
xor
cwtl
lods
jmp
cmc
jns
xchg
aas
daa
out
xor
jg
dec
mov
xchg
jno
cltd
inc
adc
mov
mov
add
test
xor
dec
dec
jp
dec
push
sbb
adc
scas
out
int
dec
aas
pusha
cmpb
test
push
mov
rorb
icebp
dec
jp
sbb
push
cmp
xchg
jmp
imul
pop
and
cwtl
push
inc
flds
mov
lods
adc
add
fbld
mov
inc
in
push
loopne
in
std
stos
mov
cmp
sbb
xor
ljmp
xchg
adcl
mov
std
imul
adc
sbb
fstl
jnp
sahf
jae
dec
fisttps
ffree
jae
cs
mov
cld
xor
xchg
dec
test
mov
xor
push
pusha
sub
out
adc
add
xchg
and
jle
pusha
mov
pop
cmp
std
add
cmpsb
popf
xchg
mov
clc
or
in
pushf
lcall
or
pop
iret
scas
imul
push
push
sbb
je
je
jo
mov
popf
mov
or
cmp
rol
aam
mov
xor
fnsave
fistps
bound
mov
movsb
ss
add
dec
add
xor
sbb
inc
in
lcall
push
inc
cld
jne
fmul
ficoml
fisubrl
and
sub
test
and
push
dec
xchg
mov
mov
pop
push
fdivrs
push
push
jne
push
out
rcl
shrl
daa
push
call
mov
or
fnsave
add
aas
insb
sti
in
aam
cmc
sbb
jno
ret
pop
stos
pushf
cli
mov
imul
lcall
jnp
loop
add
or
into
aam
imul
pop
mov
xor
mov
cmp
fstps
mov
std
adc
mov
icebp
cmp
inc
lock
add
xchg
jge
mov
adc
sbb
fistl
xchg
mov
xchg
andb
sbb
xor
mov
inc
sbbl
call
rolb
nop
pop
shrl
sbb
fmull
mov
and
pushf
or
push
jmp
mov
xor
xlat
sbbl
fildl
xchg
inc
add
push
inc
push
fistpl
mov
jo
mov
sub
daa
cmp
lret
fs
sbb
xor
aaa
sti
aaa
into
or
fdivrs
push
cmp
cmc
test
add
mov
pop
hlt
mov
fsubl
ret
push
mov
jmp
cmp
xorb
test
sub
pop
inc
sbbl
aas
lahf
cmp
mov
mov
fcomps
cmp
add
inc
mov
xor
aaa
mov
or
sub
adcl
add
outsl
lods
jecxz
and
xchg
sbb
and
add
dec
popa
popa
push
mov
andl
inc
icebp
into
sub
in
ljmp
and
jno
inc
aaa
inc
sub
mov
cwtl
lods
cltd
mov
mov
mov
cmp
xor
mov
pop
jp
push
push
in
pusha
ss
inc
jmp
in
sub
adc
outsl
mov
and
mov
jp
mov
js
cmpsl
pushf
imul
sbb
or
std
jbe
jmp
subl
xchg
mov
sbb
inc
fcmovu
out
mov
mov
mov
out
insb
cmpb
pop
xchg
xchg
push
sbb
mov
or
call
xchg
sub
push
jb
nop
and
int3
push
mov
sbb
cli
and
lret
iret
push
dec
xchg
dec
push
sbb
cwtl
push
dec
inc
mov
lds
inc
fs
cmp
pop
pop
xchg
jmp
cli
cmp
pusha
ret
mov
stos
insl
insb
je
mov
xor
imul
mov
enter
and
test
xchg
and
int
and
sarl
rorl
mov
cmp
test
orl
enter
pusha
out
dec
sbb
test
data16
jbe
push
sbb
sar
cmp
cmpsb
and
jle
repz
jp
outsl
or
xchg
jge
or
cld
jg
cli
imul
mov
sub
popf
sti
push
mov
fstp
je
cmpsb
pop
sub
sub
jb
test
add
adc
push
test
cmpsb
mov
pop
xor
pop
xor
ds
sub
loop
cmp
sarl
cmp
mov
int3
xor
sarl
popf
adc
imulb
sti
popf
mov
jns
and
pop
divl
add
cld
cli
arpl
xchg
sbb
or
out
cmp
lret
aaa
xchg
push
out
movb
cmp
jae
add
mov
lods
jne
xchg
insl
inc
xchg
mov
into
jo
mov
add
add
inc
jne
inc
cs
adc
xchg
vzeroall
mov
nop
aam
scas
movsl
cltd
sbb
les
inc
lods
in
das
and
push
loope
lods
mov
dec
inc
push
lret
pushf
dec
mov
fcmovnbe
mov
jge
bound
add
fs
pop
data16
std
cmp
testb
xor
adc
test
scas
mull
push
inc
fisubrs
shlb
mov
das
arpl
je
cmp
int3
mov
fcoml
sub
js
mov
sub
test
inc
ficoms
dec
ret
into
shll
gs
dec
xchg
push
aas
dec
dec
push
fsubrl
lea
out
testb
fidivrs
and
ds
fadds
test
das
or
divl
mov
pop
and
sbb
jl
cs
sub
pop
insl
jge
xlat
cmp
aas
adc
jbe
clc
jae
sbb
cmpsl
dec
push
loop
add
pop
inc
movsb
shr
fsubrl
mov
or
inc
mov
inc
sahf
xlat
outsl
mov
jo
inc
test
jbe
cmpsb
and
insl
stc
addb
jae
add
clc
pop
in
push
sbb
mov
or
arpl
adc
data16
jno
cli
int
fildl
xor
sub
in
lret
je
pop
sub
je
and
push
int3
add
xchg
inc
test
adc
push
add
mov
push
leave
or
pop
lods
inc
dec
pop
mov
jb
push
rcll
xor
ret
lock
les
std
mov
pop
dec
push
in
jl
cmp
pop
sbb
xchg
orb
sahf
or
push
sub
movsl
fildl
loope
mov
es
scas
popf
aaa
dec
repnz
jecxz
mov
pushf
add
mov
ret
sub
mov
push
lret
push
es
dec
inc
clc
cmp
aad
inc
inc
arpl
mov
mov
mov
xlat
xchg
xchg
cmp
dec
pop
repz
pop
clc
mov
popf
add
iret
xor
lds
jo
mov
ja
jae
lahf
mov
or
and
push
xor
dec
xor
inc
arpl
xchg
inc
cmp
dec
pop
jp
popf
xor
jg
testl
jge
and
jl
ret
jmp
sahf
or
sub
sbb
pop
cmc
scas
cld
mov
je
mov
jnp
mov
hlt
cmpsb
xchg
push
adc
leave
arpl
sbb
push
ds
xchg
mov
clc
dec
repnz
sbb
adcl
jno
jnp
cmp
push
inc
clc
adc
sub
dec
xor
inc
fidivl
pop
jl
xlat
inc
inc
aad
jae
in
aad
popa
add
pop
stos
icebp
push
sub
in
sub
nop
movsb
dec
je
xor
and
into
or
add
inc
inc
fnstenv
push
fbstp
fstpt
push
lret
movsb
stos
mov
mov
pop
scas
xchg
scas
stos
inc
daa
xchg
clc
xchg
stos
cld
dec
adc
and
and
or
sub
daa
xchg
adc
hlt
cmp
sub
cmpsb
pop
xchg
sbb
inc
mov
inc
js
add
imul
ja
cli
sub
mov
repz
sub
jecxz
mull
and
bound
jle
repz
xchg
mov
xlat
je
add
in
cs
inc
mov
mov
xchg
addl
shrl
in
mov
fldcw
pop
pop
div
mov
jae
scas
je
mov
mov
mov
andl
clc
and
jmp
lods
iret
mov
repnz
lahf
or
mov
inc
pop
iret
mov
lock
in
repz
mov
pop
add
sub
jns
add
inc
mov
fcmovne
add
ret
pop
out
jl
rcrb
aam
inc
outsb
aam
popf
pop
mov
and
jo
pushf
outsl
cmp
jmp
pop
fmuls
inc
push
mov
sbb
mov
fnsave
arpl
and
add
cltd
sub
test
shl
call
push
or
pop
xchg
sbb
sahf
enter
jmp
mov
push
jle
dec
push
pop
fucomip
dec
push
loop
adcl
or
add
push
inc
lcall
fsubs
addb
sbb
sub
jecxz
jae
xchg
addr16
add
jg
pop
dec
inc
out
xchg
sub
test
fstp
lds
mov
sbb
dec
push
inc
pusha
jnp
jecxz
sbb
int
ss
sti
out
stos
sbb
xchg
pop
clc
jle,pn
cmp
xor
test
jmp
push
or
pusha
mov
or
sahf
sub
mov
je
int3
rclb
bound
into
jo
push
push
sbb
lret
add
ja
add
gs
jl
scas
popa
xor
int
mov
sub
pop
mov
fistpl
test
fucomi
cmpsl
scas
fnstenv
movsb
adc
aaa
jp
jl
je
xchg
sub
test
filds
mov
dec
mov
in
lods
movsl
icebp
mov
nop
add
mov
cmpsl
mulb
out
push
xchg
test
push
mov
lret
pop
cld
adc
mov
jb,pn
mov
lahf
lea
push
xor
push
push
jp
or
cmpsl
mov
mov
jg
int3
xchg
cmpsl
pop
jl
push
sbb
pop
outsl
arpl
mov
inc
lea
jne
andb
pop
sub
dec
mov
jb
in
out
sahf
xchg
mov
fimuls
mov
jb
popa
push
jns
retw
flds
jb
in
add
adc
jl
dec
cmp
xor
aam
jns
and
cli
cld
stos
ficoms
sbb
decl
movsl
arpl
push
mov
insb
push
xor
jmp
pop
xor
in
fistl
jecxz
stc
mov
fcmovnbe
sbb
xlat
xchg
mov
mov
sbb
inc
arpl
test
dec
sbb
mov
je
mov
out
inc
call
or
mov
ret
xchg
gs
push
pop
add
push
cli
and
mov
and
mov
stos
inc
ljmp
and
out
out
cmp
test
xor
loope
mov
jb
and
adc
hlt
fwait
push
mov
mov
fadds
xchg
js
mov
cmp
or
les
fwait
insb
mov
cmpsl
dec
inc
push
fwait
sti
insl
outsb
inc
and
inc
leave
push
add
push
in
push
mov
pcmpgtb
jno
das
and
sbb
iret
and
ss
pop
lea
mov
mov
mov
outsl
adc
fnstenv
mov
adc
ret
ficompl
lret
mov
enter
mov
stos
mov
mov
push
outsl
mov
push
jne
fsubrs
sub
sbb
pop
in
xchg
aam
dec
sarb
iret
add
jnp
pop
mov
popf
mov
into
ds
inc
push
aam
test
ljmp
sahf
cmp
jp
lods
pop
lcall
dec
fnstcw
adc
cwtl
lret
mov
mov
in
cmp
pop
fnstenv
lret
lock
push
out
sbb
jge
xchg
cmp
and
cmpsl
jae
sub
mov
inc
call
sbb
stos
push
mov
mov
scas
inc
sub
push
stc
xor
insb
pop
push
scas
inc
jg
ljmp
int
fnstenv
pop
insb
sub
pop
dec
dec
mov
sub
insb
in
rclb
push
ret
adc
mov
mov
jecxz
push
add
push
test
jp
ret
stos
pop
mov
dec
inc
dec
loop
out
inc
inc
je
or
loopne
mov
ret
sbb
cmpsl
jmp
iret
test
icebp
dec
fistpll
out
adc
in
inc
mov
ja
and
pop
push
mov
out
pushf
xor
movsb
sub
adc
addr16
mov
cmpl
or
stc
push
jge
sbb
pop
xlat
push
mov
imul
sub
jmp
fs
ds
call
mov
cmp
push
mov
xchg
bsr
cmpsl
cmp
ret
insb
icebp
insb
push
imul
push
je
in
sahf
std
push
ret
enter
pop
test
mov
cmpsl
sarb
mov
jns
stos
pop
jge
les
cmp
mov
sbb
jg
hlt
mov
sbb
lea
daa
lcall
inc
push
push
aam
pop
inc
add
push
je
fnstenv
mov
inc
cwtl
and
aas
mov
test
iret
inc
xchg
dec
jnp
or
push
rcll
pop
lock
or
push
sub
fcompl
xchg
fldenv
gs
jns
lret
bound
insl
jmp
xor
push
push
xchg
mov
shlb
jecxz
dec
rol
mov
pop
rcrl
std
loope
dec
fistpll
mov
fnstenv
push
jne
cmp
in
xor
out
dec
jno
add
jmp
mov
ja
pop
test
in
loope
popa
jg
rol
pop
and
stc
push
fistpll
pop
xor
das
and
mov
ret
mov
insl
cmp
mov
pop
xlat
out
rorb
std
cmc
int
xchg
ds
les
lods
fdivr
jo
push
push
sarl
cld
cmpsl
out
sbb
ret
dec
ljmp
dec
movsl
mov
fstl
adc
fidivs
ret
add
stos
fistl
or
aad
sbb
xchg
lods
push
rorl
repz
add
jecxz
xor
jne
or
mov
cmc
push
xchg
xlat
daa
and
cmc
push
dec
pop
or
rcrb
push
movlps
jnp
cli
insl
xor
cltd
addr16
cwtl
sub
dec
dec
push
add
xchg
jbe
push
inc
jb
mov
pushf
fadds
push
out
scas
cwtl
pop
test
xor
pop
and
repz
xor
xor
daa
ljmp
outsb
cmp
repz
sbb
mov
and
incb
and
in
lcall
and
add
nop
daa
sbbb
jnp
clc
adc
pop
inc
test
add
push
dec
cld
pop
fcom
push
or
les
push
adc
inc
cmc
mov
leave
and
mov
stc
pop
leave
and
jnp
pop
and
or
add
mov
int
std
testb
jge
in
dec
outsl
daa
pop
mov
pop
imul
xchg
and
and
repz
js
mov
lock
loope
adc
leave
mov
jo
out
cmpb
dec
rclb
nop
dec
xchg
sub
xchg
lahf
jne
jns
mov
add
xor
sub
mov
negb
mov
sarb
sbb
pop
loop
xchg
aas
imul
shl
xor
mov
add
lret
data16
addr16
pushf
scas
sbb
pushf
jae
sbb
dec
pushf
adc
jae
in
aas
jg
pop
insb
lahf
lahf
inc
adc
cmp
push
jnp
lahf
lods
push
or
or
fwait
mov
cmp
cmpsl
ljmp
or
pop
mov
daa
leave
fstps
adc
sub
sub
pusha
jb
aad
les
xlat
outsl
sbb
inc
cwtl
mov
int
shll
ja
js
daa
stos
add
scas
int
add
mov
pop
mov
fdivs
add
nop
repnz
sub
cld
pop
lret
mov
data16
and
mov
in
jle
fwait
cld
adc
test
test
clc
mov
test
push
loopne
xchg
popf
leave
pop
ja
out
push
xchg
fmull
ret
sahf
lods
mov
cmpsb
pop
imul
pushf
scas
add
gs
dec
stc
push
test
into
leave
add
xchg
xchg
scas
call
fbstp
mov
push
hlt
jo
sub
repz
movsl
or
mov
sbb
int3
xor
out
add
push
add
mov
push
outsb
cmp
pushf
lahf
shrl
or
lock
pop
insl
and
mov
arpl
mov
out
xchg
in
mov
sbb
cwtl
mov
insb
push
mov
test
adc
icebp
pop
ljmp
out
cmpsl
sarb
xor
in
fucomip
dec
divb
sub
sti
gs
mov
mov
lret
xor
push
pop
inc
icebp
into
mov
mov
ljmp
or
out
int3
or
cld
push
out
lcall
pop
pop
je
lds
add
pop
out
adc
dec
jbe
dec
into
pop
in
lods
sbb
push
or
mov
pushf
arpl
cli
stos
jne
mov
add
imull
cmp
iret
rorb
lret
and
push
pusha
ss
inc
mov
arpl
sbb
or
jge
mov
insl
add
into
mull
jo
in
mov
and
popf
ret
mov
jmp
cmpsl
movsb
addr16
xchg
lds
imul
xchg
push
mov
test
mov
mov
or
adc
sub
and
cwtl
dec
loopne
fsubs
jmp
adc
dec
addl
or
mov
xchg
or
jbe
pop
mov
push
ret
dec
test
lcall
xchg
dec
enter
cmc
in
addr16
sub
nop
push
push
pushf
in
jo
or
cmpsl
push
ljmp
jno
mov
repnz
and
loop
lods
inc
in
and
lcall
push
fnstenv
xor
jge
int3
dec
aam
int
dec
xchg
xor
stc
loop
mov
into
rcl
aam
mov
mov
sub
jae
cmpsb
sub
hlt
adc
mov
push
rcrb
and
ljmp
insb
mov
xchg
cmc
push
ja
or
mov
sub
jp
dec
or
adc
xchg
add
push
cmpsb
test
mov
adc
push
push
or
in
out
sbb
mov
gs
insb
add
imul
add
out
push
hlt
add
imul
pushf
push
jae
xchg
es
or
sub
push
sub
lcall
movsb
popf
loop
cmpsl
mov
movsb
jp
dec
push
sbb
dec
hlt
adc
or
scas
xchg
jb
mov
mov
and
or
out
bound
add
adc
mov
push
pusha
mov
mov
push
cs
cmpsl
pushf
aas
iret
dec
enter
es
xor
mov
shlb
add
jg
dec
inc
mov
push
repnz
cmp
addb
out
scas
sub
mov
or
or
pop
subb
and
test
pop
icebp
insb
inc
lahf
push
xor
jns
cmp
pop
and
test
lret
cmp
lret
cmp
xchg
mov
imul
cli
push
xor
ret
xor
stc
mov
nop
daa
or
mov
inc
pop
xor
int
jnp
dec
icebp
sbb
sti
jg
cld
dec
pop
xor
xor
sub
arpl
xchg
out
mov
mov
and
pop
and
dec
xchg
les
cmp
add
and
mov
jg
xor
incl
in
add
cmc
mov
inc
enter
mov
out
xchg
add
mov
mov
push
rcrb
sub
inc
fldenv
pop
cmp
dec
xor
cmpsl
dec
dec
mov
jns
dec
inc
movsl
shrl
lret
aas
mov
add
xchg
js
lods
test
bound
sbb
lds
xchg
sub
lods
cmpsb
ret
push
add
xchg
lea
pop
xchg
or
mov
ficompl
xchg
inc
and
pop
cmp
mov
aaa
stos
inc
push
jo
std
sbb
and
fwait
adc
push
push
popf
je
and
mov
lock
mov
mov
int3
je
cmpsl
cli
and
lret
test
leave
rcrb
mov
cmp
push
sbb
cmpsb
mov
popa
jno
call
je
dec
mov
subb
nop
pop
mov
lods
push
or
or
int3
fs
mov
fnstenv
pop
in
add
out
sbb
test
jle
push
fistpl
push
clc
or
outsl
xchg
je
insl
sub
cmpsl
add
jne
mov
push
in
jb
test
push
jle
push
dec
mov
push
sub
xor
shl
cmc
loopne
mov
push
inc
mov
xchg
sti
push
dec
ljmp
test
inc
sbb
xor
cmc
cmp
cmpsb
iret
mov
pop
pusha
loopne
fs
popa
add
ret
cld
or
mov
dec
ljmp
roll
add
andb
xor
f2xm1
adc
mov
or
adc
push
int3
iret
data16
or
sbb
scas
xchg
out
jnp
cmpsl
sbb
ret
sbb
test
daa
mov
mov
and
push
or
xchg
jbe
movsl
negb
cmc
mov
test
mov
add
sbb
xor
jno
outsb
shll
movsl
xchg
xor
and
xchg
pop
ret
rolb
in
mov
cwtl
xchg
test
cmpl
test
mov
sub
push
pusha
adc
insb
jl
jo
push
adc
xchg
into
dec
mov
mov
or
inc
jl
outsb
xor
xchg
dec
rcr
mov
outsl
dec
jnp
dec
mov
adc
xchg
xor
xchg
mov
inc
mov
cld
pop
xor
mov
sbb
js
dec
dec
push
sbb
nop
incl
jecxz
rcrl
mov
pusha
fistpl
inc
jb
ret
mov
loop
stc
inc
sbb
sti
loope
lcall
push
jmp
adc
mov
sub
push
inc
lods
mov
mov
mov
push
out
xchg
movsb
push
roll
xchg
mov
pop
test
and
xchg
push
inc
lcall
jmp
cmp
jecxz
js
lret
cld
lods
call
sbb
mov
sbb
pop
je
fwait
xchg
in
cmovbe
xchg
imul
les
cld
pop
mov
or
jecxz
and
dec
mov
addb
popa
jp
sbb
shlb
inc
sarl
sub
jecxz
cwtl
cmp
dec
add
test
push
test
pushf
jg
jne
jp
push
loop
mov
mov
pusha
testl
jle
inc
xor
out
gs
lret
mov
jl
out
jle
pusha
mov
cmpsb
les
pop
repz
adc
adc
and
ret
andl
xchg
mov
cs
out
sbbl
push
xchg
pop
popf
cmpsb
outsb
add
or
push
notl
loop
nop
in
std
xchg
les
sbb
lcall
cmpsb
jo
scas
xchg
add
or
adc
push
dec
mov
mov
popa
mov
xchg
insl
push
mov
pop
mov
fwait
cmpsl
outsb
mov
inc
mov
jg
jb
sarl
fistpll
mov
inc
push
push
jno
and
pop
pop
push
mov
xor
xchg
mov
mov
or
dec
mov
or
stos
push
sub
cld
sahf
imul
pop
lock
out
rcl
dec
inc
out
popf
xchg
loopne
divl
inc
outsl
xchg
mov
cmp
xchg
scas
aas
dec
pop
inc
stos
dec
mov
cmp
and
arpl
cmp
push
movsb
mov
mov
lcall
test
mov
sbbb
mov
xchg
dec
dec
bound
adc
sub
inc
pop
inc
sahf
cli
out
icebp
adc
mov
aaa
mov
iret
popa
add
ret
out
push
insl
in
idivb
jae
dec
dec
push
sbb
mov
rclb
popf
and
xchg
add
push
loopne
mov
pop
xchg
xchg
rcll
fisttpl
into
xchg
pop
ja
push
test
aad
aaa
and
pop
pop
jo
imul
arpl
sti
jae
ja
xchg
sub
sbb
aam
push
fwait
inc
adc
pop
mov
imul
inc
es
cwtl
rclb
xchg
ret
or
cmpsb
ds
ss
add
movsl
inc
dec
movsl
icebp
in
aam
fwait
adcl
daa
push
and
jb
xchg
jo
push
aas
imul
cmp
jl
xchg
scas
enter
jns
fbld
push
push
push
sub
jb
iret
loope
aad
stos
aad
jmp
addr16
gs
jb
test
or
push
mov
into
and
call
or
sub
jne
push
sahf
push
out
jne
and
xchg
add
gs
mov
adcl
ljmp
popa
or
sbb
dec
dec
icebp
shrb
das
adc
ror
adc
cmc
xor
xchg
sbb
and
lret
jl
lods
jmp
or
movsb
cmp
lcall
test
push
inc
inc
jl
je
iret
inc
sbb
mov
mov
xor
add
fmul
fcomps
xchg
jge
xchg
scas
mov
cmpsb
jl
mov
mov
push
in
cmpsl
cli
sti
push
test
xchg
dec
add
fadds
sub
je
scas
or
push
enter
or
jnp
inc
stos
xchg
stos
pop
lods
int3
lret
jae
sbb
lret
cmp
mov
out
mov
inc
aam
sub
addr16
inc
sbb
add
fldt
lcall
xor
lds
mov
jl
xchg
sbb
mov
cs
loop
and
imul
loop
xchg
in
or
or
jo
mov
imul
ja
rol
loopne
sub
pop
ja
pop
jbe
cmpsl
ds
jb
aad
out
lds
and
add
xorl
pop
shl
xor
test
dec
mov
lret
mov
or
xchg
aad
ret
lret
bound
into
cmpl
je
cmp
repz
push
ds
dec
cmpsb
fdivrl
pop
cltd
movsl
mov
ss
jo
inc
lahf
push
inc
mov
xchg
push
mov
sbb
roll
ljmp
cmp
das
jbe
loop
push
lea
loop
dec
loope
sarl
sti
jae
fldenv
push
int3
fiadds
pop
imul
int
in
sbb
mov
mov
shlb
jle
pop
aaa
js
mov
out
aas
add
mov
mov
movsb
jecxz
movsl
lds
push
lds
sub
jle
sbb
inc
sbb
movsl
in
jp
ss
push
dec
dec
push
test
and
push
rdmsr
dec
push
inc
cmp
and
mov
xchg
cmp
fistps
es
xor
pusha
aaa
je
adc
or
int3
fs
dec
into
xchg
fwait
shr
xchg
jno
test
rcrl
sub
push
mov
xor
test
adc
cwtl
adc
mov
sbb
sbb
sarb
fs
enter
xor
mov
mov
je
std
jle
movhps
int3
bound
pop
mov
mov
mov
stc
pop
nop
and
roll
lret
outsl
pop
outsb
ret
and
mov
adc
cmpsl
push
popa
add
adc
orl
sbb
push
les
adc
jne
mov
xorl
mov
shr
lds
add
pop
and
jp
sbb
mov
push
sbbl
jae
mov
insb
repnz
fbstp
in
mov
mov
in
dec
loope
sbbb
and
es
xchg
dec
imul
pop
or
sbb
subl
mov
negl
xchg
stos
dec
add
adcb
mov
lods
fidivrl
sub
mov
jmp
out
rcl
cs
das
es
and
ss
push
and
jmp
movsb
jmp
mov
ljmp
or
cmp
jp
push
add
lds
ja
imulb
rorl
mov
repz
imulb
and
test
xor
xchg
mov
jmp
sub
xor
pop
mov
jnp
push
pushf
adc
or
xchg
jge
lcall
les
insl
mov
pop
push
sub
sub
outsb
fstpt
mov
jg
mov
icebp
sbb
mov
adc
inc
mov
mov
out
jo
lcall
jo
sarl
adc
nop
lds
loop
inc
dec
fs
jl
cmc
mov
jmp
push
je
iret
mov
cmpsl
cld
fmulp
into
int3
cwtl
or
ret
jl
hlt
bound
or
addb
inc
sub
xor
outsl
add
jns
mov
or
stos
stc
or
addr16
add
sahf
arpl
aas
pop
lock
test
push
or
movl
jmp
sub
push
mov
push
jno
shl
cli
icebp
mov
sub
nop
pop
pusha
out
push
cmp
lahf
cmp
ret
call
mov
js
test
hlt
inc
subb
add
lcall
clc
inc
mov
int3
shll
push
test
pop
stos
xor
test
jge
and
xor
ds
jle
cld
inc
or
ss
sub
pop
insb
ret
adc
dec
dec
mov
push
loope
lahf
lds
idiv
cmp
in
test
dec
xor
shrl
test
lret
rolb
loop
and
lahf
add
xor
or
xchg
rcrb
mov
pop
cmp
push
ja
sbb
fcompl
mov
jmp
lods
lret
push
xor
inc
call
fisttpl
or
cmp
inc
cmp
arpl
movb
xchg
pop
aaa
popa
push
mov
jmp
decl
in
xlat
cmc
dec
sti
repnz
adc
fldenv
or
cmpsl
gs
insb
add
inc
popa
lds
stc
fdivr
mov
scas
push
jno
inc
clc
sbb
fisttpll
adc
push
pop
jne
mov
adc
sbb
mov
pop
ljmp
pop
fstpl
dec
mov
jecxz,pn
scas
and
mov
cmp
pop
out
xchg
addb
sub
dec
icebp
push
push
sub
xchg
es
std
rclb
add
test
cli
adc
loopne
add
mov
outsb
stos
mov
and
les
mov
xor
js
mov
xchg
outsb
push
push
pop
pop
mov
cli
sbb
inc
push
sbb
loope
dec
fisubs
dec
loopne
xor
add
fstl
add
xchg
mov
frstor
push
jge
adc
idivl
dec
mov
push
mov
adc
and
into
sub
and
mov
mov
lea
shl
cmp
loop
je
sbb
test
mov
sbb
insl
sbb
psrlq
fidivl
lcall
sbb
iret
adc
xchg
fs
jl
rcrl
inc
rorl
xlat
clc
mov
fildll
jnp
and
andb
cli
imul
or
dec
fs
aad
lcall
sahf
push
sub
adc
xor
bound
ljmp
xlat
mov
or
lea
sbbb
xchg
push
sti
fstpt
pop
mov
jae
cmp
imul
test
cmp
cmp
insl
dec
mov
add
mov
inc
or
mov
pop
mov
pop
filds
jno
or
les
adc
adc
inc
push
dec
es
jg
xlat
sbb
mov
data16
les
sub
jb
jmp
pop
and
repnz
xor
das
xchg
add
rclb
adc
xor
lods
mov
fidivl
lret
ja
popa
lods
push
inc
or
daa
inc
jbe
cmp
cmpsl
sub
mov
imul
test
enter
cmp
xchg
mov
cmpsb
movsl
sub
lahf
fdivs
xchg
pop
jle
jl
add
push
jns
add
ds
dec
int
dec
popf
or
rolb
int
ss
add
lods
mov
sub
pop
clc
adc
sub
pop
lret
das
cmp
adc
jno
test
mov
mull
cmc
mov
xchg
add
test
push
inc
add
insb
jle
fnstenv
jle
mov
xorb
rorl
stc
popf
rcrl
and
fisttpll
shrb
adc
inc
popf
ret
ficompl
lods
lods
clc
jnp
cmpsb
int
push
iret
out
adc
or
pop
mov
cltd
xor
jmp
ret
xor
xchg
shll
call
int3
push
ljmp
or
ss
pop
in
sbbb
pop
sbb
shlb
decl
push
loope
xchg
sub
out
gs
std
mov
xor
dec
aas
xchg
pop
xchg
xchg
mov
pop
imul
in
adc
popf
push
jmp
push
push
aaa
dec
arpl
xchg
lods
pop
mov
xchg
sub
fidivrl
mov
in
cmp
push
lea
adc
iret
add
out
dec
inc
adc
xchg
adc
dec
dec
mov
cmp
jo
das
and
shrb
inc
mov
or
cs
sbb
ret
adc
nop
ja
mov
test
std
xchg
cmp
lahf
test
nop
je
sub
cwtl
stos
inc
xchg
enter
push
inc
sub
cmp
testb
or
pop
jmp
in
inc
lock
or
fadds
sbb
jbe
call
pop
shl
dec
add
jecxz
nopl
movsb
out
mov
cmp
lock
in
fsubs
add
bound
test
bound
xor
mov
jo
pop
aaa
jae
aad
sahf
ret
data16
adc
icebp
mov
and
push
fs
ja
add
mov
and
mov
out
cmpsl
sti
xchg
add
xchg
stc
xor
and
pop
jbe
or
push
xor
dec
bound
sbb
imul
cltd
orl
fnstenv
gs
pop
clc
sbb
and
jae
cltd
and
push
push
jae
add
das
jne
mov
in
dec
mov
jge
lret
dec
mov
jp
mov
sub
jecxz
adc
hlt
and
fwait
repnz
lcall
push
jne
and
jle
add
inc
fwait
inc
inc
cli
test
sub
mov
pop
push
pushf
push
xlat
and
ret
inc
cmp
shll
mov
sahf
fdivs
pop
int
dec
sarb
sbb
dec
faddl
outsl
fdivp
roll
adc
fnstcw
fimull
mov
mov
cwtl
fadds
sub
loopne
hlt
and
push
adc
leave
inc
lea
push
fyl2xp1
sub
mov
add
and
fisubrs
mov
push
cmp
popf
xor
mov
push
dec
shrb
mov
dec
jp
pop
jae
adc
movsb
inc
dec
or
lods
int
je
inc
cmp
sbb
ret
mov
enter
cli
or
data16
arpl
xor
bound
dec
aad
xchg
gs
lods
cwtl
das
add
mov
sar
jp
out
add
imul
inc
fstl
pop
fs
mov
nop
test
ds
fisttpl
insb
mov
inc
ffree
and
lret
add
frstor
or
fs
outsl
mov
sahf
inc
aad
pop
mov
scas
xchg
sub
stc
stos
add
push
sbb
insb
mov
jge
jecxz
fwait
aam
fdivrl
push
push
aaa
scas
dec
pop
xchg
mov
jno
mov
xchg
mov
leave
cmp
or
xchg
mov
test
or
mov
test
mov
mov
xor
lahf
sbb
data16
test
out
call
int3
fsubr
out
inc
lret
sar
fidivl
cmp
mov
dec
dec
scas
push
sbbl
inc
fbld
jge
shrb
pushf
sub
ljmp
adcl
popf
fidivrl
std
mov
setb
ret
push
loope
xchg
mov
jmp
dec
mov
xchg
sub
pop
xchg
rcll
fbstp
in
rcll
jo
or
pop
cmp
or
and
dec
add
jge
les
mov
fbstp
clc
call
lock
dec
fmul
jns
jbe
push
cltd
fidivs
rclb
xchg
push
inc
sbb
cs
jns
inc
pop
cmp
jae
jno
aas
aad
mov
pop
repz
aam
js,pn
sbb
push
repz
sbb
push
mov
xor
or
jo
pop
fcoml
fcoms
test
jo
fnstenv
inc
fdiv
or
adc
dec
movsb
fsub
shrb
push
sub
and
scas
push
cmp
xchg
test
xchg
jp
cmpsb
ds
pop
and
mov
adc
fsubrl
outsb
add
test
decb
jg
pushw
adc
xchg
pushf
mov
loope
mov
cmpsb
mov
notb
lcall
and
push
sar
push
cmc
jg
dec
jae
dec
movsl
outsl
fnsave
xor
mov
das
sub
insl
test
mov
mov
inc
pushf
stos
fsts
dec
adc
shrl
pop
sub
sub
pop
gs
push
xchg
inc
dec
movsl
test
popf
xor
mul
push
fs
sti
add
ja
iret
mov
xchg
sti
fs
stc
mov
mov
roll
sahf
inc
popf
pop
pop
in
decb
and
testb
xchg
mov
push
mov
pop
filds
data16
es
cli
arpl
or
push
stos
ret
enter
dec
xor
nop
sub
inc
pusha
dec
sbb
orl
pop
cmpsb
ret
call
mov
es
loopne
mov
mov
adc
scas
push
idivl
int3
ja
popf
sub
js
push
mov
sub
outsb
sub
or
jno
decb
aam
mov
xor
mov
jmp
xchg
sub
lds
xor
cmpsb
mov
add
popa
add
int
jmp
aad
mov
dec
mov
push
ljmp
icebp
mov
mull
in
inc
fadds
sub
imul
mov
push
in
js
lahf
insb
aam
ror
push
cmc
mov
mov
es
push
movsl
lods
lcall
or
xor
inc
imul
and
loope
jns
add
push
xchg
lea
dec
cmp
out
test
jle
jae
in
imul
push
inc
push
test
inc
xor
cmp
int
rorl
scas
loop
rcrb
sbb
jmp
icebp
lcall
cwtl
movsb
mov
and
mov
sub
cmp
jmp
jno
in
sarb
in
dec
addr16
add
mov
cmpsl
test
mov
ds
lret
xor
cmp
dec
dec
fdiv
bound
push
inc
cmp
dec
jb
cmpsb
stos
scas
sub
adc
mov
std
lea
pop
sub
in
pop
notl
scas
call
clc
pop
and
sub
hlt
pop
adcl
mov
add
mov
lea
out
add
xchg
in
cltd
jl
shrl
scas
jne
shr
jb
push
jno
daa
mov
cmp
add
and
adc
les
sub
repz
rcrl
pop
mov
lahf
dec
lods
lea
pop
movsb
outsl
jle
scas
popa
rcll
inc
pop
rep
pop
fnstcw
inc
aaa
das
sar
cmp
shrb
mov
jo
lock
pop
pushf
decl
sbb
enter
repz
lock
adc
pop
pop
rcrb
testb
loopne
xor
jp
cmp
pop
outsb
mov
lock
cs
stos
orl
mov
xchg
addl
imull
push
subb
sbb
das
pop
and
je
ret
insb
stc
mov
sbb
push
outsl
mov
dec
addr16
mov
imul
cmp
pop
ja
clc
xchg
data16
cvtps2pd
repnz
dec
pop
je
lret
mov
popf
les
mov
cmpsl
fsubrs
lock
mov
fsubrs
repnz
mov
xor
jno
push
subl
je
sub
xchg
daa
cmp
popa
cli
in
ljmp
out
pop
stos
pop
mov
mov
fwait
lahf
add
ds
jno
mov
push
gs
add
int
xchg
arpl
cmpsb
add
xorb
pop
jb
inc
cltd
repnz
or
pop
adc
enter
add
add
fcoms
adc
ljmp
and
pop
or
icebp
inc
xchg
mov
cs
push
push
out
stos
sbb
add
mov
or
adc
xchg
iret
cmp
dec
fstps
nop
dec
gs
push
lods
bt
xor
cli
push
popf
fdiv
xchg
fidivrl
mov
iret
out
mov
lahf
aas
stc
jl
xor
jle
sub
insl
cs
dec
mov
inc
loope
push
and
jp
icebp
push
pop
jae
xchg
push
cs
mov
into
enter
sbb
jle
fs
jp
mov
ret
notb
cmp
in
mov
loopne
insb
pop
cmc
jno
and
outsb
cs
mov
jb
jg
mov
gs
loope
pop
lret
sbb
cmp
cmp
push
xor
and
lock
add
les
inc
stos
jmp
shrb
jbe
mov
ret
add
mov
insb
in
aam
jo
insb
sti
out
xchg
fnstenv
mov
add
rcrl
sub
fistpl
mov
inc
movsl
xor
mov
push
cs
pop
add
fimull
or
insb
rcl
stos
inc
cmc
push
fisubs
dec
gs
jns
ss
or
rorl
das
pop
mov
lods
push
pop
push
add
int
jbe
nop
sub
add
push
test
fimuls
push
aam
sbbb
filds
cmp
das
mov
fdivl
jb
mov
mov
int
fwait
loop
testb
dec
mov
and
and
inc
cmp
mov
int
clc
push
cmpsl
sahf
in
pop
fwait
iret
jge
pop
ja
xchg
pop
jecxz
adc
sub
pop
fldcw
jbe
jae
dec
xor
jp
pop
push
adc
cmp
rolb
fisttpll
out
std
bound
fsubr
sub
and
lea
push
adc
mov
add
xor
pop
scas
fidivs
or
jg
seta
out
test
push
fwait
xchg
or
cmp
or
dec
pusha
push
movsl
mov
loopw
push
inc
mov
fld1
inc
inc
push
testl
fcomps
pop
loope
mov
cmc
lods
mov
pop
sub
pop
cmp
imul
loope
loop
adc
clc
xor
fdivs
insl
sbb
popa
cmp
in
push
or
dec
pop
dec
lods
cmp
les
rclb
xor
into
and
jne
imulb
push
in
cmp
mov
test
shll
movl
jno
push
mov
mov
aas
mov
mov
pusha
test
mov
xchg
in
mov
xor
call
lret
and
sbb
nop
and
enter
sub
ret
lods
rorb
daa
mov
dec
push
or
inc
adc
out
add
repnz
cltd
or
sbb
pop
inc
int3
push
jmp
test
xchg
and
cltd
clc
inc
cmpsl
mov
mov
mov
or
adc
popa
cmpsl
and
fadds
jno
cmp
pusha
or
pop
clc
and
or
fnstcw
jge
nop
fidivl
ret
mov
out
enter
jnp
fnstenv
pushf
mov
lret
mov
cmc
or
les
xchg
ret
inc
movb
add
mov
xchg
scas
fldl2t
loopne
out
push
out
aad
xchg
outsl
aam
adc
lock
decl
push
ficoml
into
stc
fidivl
inc
rclb
popf
leave
jecxz
dec
outsl
jnp
or
or
les
push
mov
cmp
clc
lock
mov
insb
nop
sbb
or
test
adc
fiadds
popa
lods
sub
pop
test
ret
hlt
pop
add
pop
adc
jg
bound
sub
jnp
mov
sbb
push
dec
mov
push
nop
mov
fsts
dec
or
test
hlt
int3
insb
jle
sub
into
sbb
cs
sub
mov
jae
jnp
or
mov
sub
adcl
pop
lret
mov
jno
cli
nop
daa
lret
jecxz
bound
dec
mov
and
inc
push
sbb
leave
dec
and
ljmp
lock
add
lahf
jg
pop
lds
mov
les
add
push
lea
xor
or
mov
inc
fs
outsl
out
dec
loop
xchg
inc
aas
mov
xchg
mov
insb
hlt
stos
lock
imul
leave
es
loop
imul
inc
shll
xor
ds
fs
and
and
dec
enter
out
and
xchg
fcompl
xor
inc
fsubr
mov
inc
std
pushf
jge
iret
sbb
faddl
push
pushf
or
pop
out
test
mov
and
arpl
pop
lret
bound
and
add
fcomps
xor
inc
cmpsb
hlt
nop
jl
dec
mov
or
push
jnp
movsl
mov
aam
inc
lods
mov
in
or
lock
ret
in
cltd
movsl
jb
gs
lahf
dec
loop
lahf
xchg
jo
mov
mov
sti
add
inc
xor
sahf
cmp
inc
mov
cld
xchg
ljmp
fldcw
push
pop
imul
je
and
adc
cmp
into
insl
push
mov
lcall
aaa
xor
mov
push
loope
mov
mov
xchg
adc
hlt
scas
insl
jge
int3
and
js
mov
inc
jl
push
les
fisttpl
mov
mov
fmull
repz
add
test
mov
inc
dec
sarl
dec
loope
pop
add
dec
push
lahf
and
push
fstl
les
fbld
xor
out
inc
pop
push
testl
xor
push
lea
xlat
outsb
loop
or
fmuls
rcrl
or
dec
and
or
xchg
and
pushf
enter
push
ljmp
and
mov
cmpsl
and
dec
sbb
xchg
outsb
cmp
inc
test
mov
cltd
sbb
pop
stos
xchg
pop
out
sub
movsl
lods
mov
jns
data16
aas
fiaddl
ret
xor
pop
jp
xor
fwait
mov
fisttps
aam
push
sub
cmpl
add
adc
push
aaa
add
lea
jo
enter
dec
jmp
sub
in
repnz
xor
iret
iret
mov
aam
inc
test
aaa
xor
jo
push
movsl
mov
cmp
lods
jl
mov
xor
fisubrl
iret
push
add
inc
mov
in
aas
jno
xchg
cmp
lret
dec
push
mov
jmp
or
xchg
pop
movsl
cmp
xor
jle
sarl
cwtl
pop
mov
divl
data16
ja
inc
mov
pop
inc
push
sbb
loop
push
cltd
pop
cwtl
movsb
sub
test
mov
fnstenv
pushf
pushf
data16
dec
mov
jl
scas
out
popf
aad
sbb
repz
cltd
test
cltd
ret
fisubs
jp
pop
cwtl
scas
sbb
aas
dec
shlb
ret
fsubrp
mov
data16
lods
adc
pushf
jge
lcall
adc
sub
out
pusha
and
mov
jb
mov
les
cmp
xlat
aam
mov
cmp
mov
push
hlt
and
ljmp
mov
add
insb
cwtl
mov
es
or
cmp
loope
leave
pusha
and
inc
out
inc
aam
and
pop
sbb
in
mov
pop
outsb
shll
cmp
data16
cltd
push
pop
les
or
ret
mov
cld
and
ja
mov
stc
nop
cmc
jge
lret
pop
popf
or
popf
xor
test
rcrl
test
or
xor
cltd
push
in
fs
push
cmpsl
frstor
mov
mov
stos
ret
pop
out
xchg
jne
and
xchg
cmp
movsb
mov
in
scas
or
cmc
cmp
push
jmp
testl
sbb
loop
push
adc
and
sbb
inc
mov
movb
dec
in
int3
pcmpgtw
imul
mov
inc
and
and
repnz
sub
cltd
add
cmp
dec
mov
xor
adc
test
pop
shll
loope
mov
fistl
push
cmp
scas
and
sub
mov
push
mov
adc
sbb
ljmp
xor
and
xchg
pusha
rorl
loope
test
arpl
mov
call
adc
inc
movsb
mov
lret
sbbb
pushf
into
sbb
ret
jae
cmp
sbb
sbb
pop
inc
test
dec
or
call
lods
sbb
cld
push
push
and
inc
mov
pop
push
stos
outsl
cltd
lcall
and
inc
adc
sbb
or
adc
jle
and
xchg
sbb
inc
lret
js
shrl
lret
xlat
jns
mov
int3
cld
xor
sub
leave
int
stos
push
fwait
enter
mov
mov
lods
inc
push
xchg
sub
pop
push
cmp
fistpll
outsb
add
enter
inc
jmp
cmp
pop
out
cmpsb
repnz
fldenv
jne
and
cwtl
pop
insl
mov
aas
bound
ret
sub
xchg
add
dec
xor
std
inc
loope
or
xchg
fldt
mov
and
into
sbb
pop
or
push
add
xor
outsb
jl
movsb
xchg
leave
mov
mov
push
cmp
xchg
jg
hlt
inc
pop
shr
call
loopne
sbb
decb
sahf
adc
scas
pop
fwait
adc
lcall
pop
lock
les
mov
add
lret
scas
enter
sbb
mov
xchg
mov
rcr
lret
and
test
repz
dec
daa
adc
pop
cli
aad
mov
mov
lret
jmp
rolb
fdivs
push
fisubrl
mov
jno
mov
add
roll
lock
lock
int3
gs
pop
clc
arpl
sub
add
cld
push
xchg
and
movsb
dec
cmp
sbb
jl
stos
dec
cs
pop
xlat
rcr
jb
iret
popa
fcomps
push
movsb
inc
pop
add
out
mov
adc
cli
cmp
mov
adc
fmul
fdivl
into
or
xchg
int3
arpl
jmp
ljmp
push
shrb
xchg
mov
lock
mov
cmp
sub
and
pop
xor
testl
testl
lods
into
dec
mov
or
sub
sbb
test
iret
hlt
fwait
adc
sub
gs
out
js
xor
dec
xor
gs
pushf
xor
jne
cmp
pop
mov
shrl
sub
jg
cmp
xor
push
inc
dec
sub
outsl
fwait
push
inc
lea
sub
inc
idivb
mov
mov
mov
aas
pushf
pop
mov
sbb
jmp
lods
outsb
in
sbb
mov
pushf
ret
mov
and
ret
pop
icebp
sub
and
fcomip
fs
xchg
adc
dec
add
sub
dec
sbbb
inc
push
adc
mov
fstl
add
push
movsb
jns
mov
pusha
pushf
xor
int
divb
jl
fs
cmc
cs
cmc
xchg
jnp
push
jb
scas
test
lods
js
fists
test
popf
cmp
lret
cmpsl
movb
push
in
popa
lret
mov
xchg
cmp
push
mov
mov
imul
shl
inc
movsl
pushf
cmpsb
popa
lock
push
jb
add
dec
sbbl
add
jl
mov
sub
test
test
fldenv
cmp
push
test
inc
out
jnp
and
xchg
and
inc
sbb
mov
and
cmpsb
push
mov
mov
xchg
mov
mov
icebp
adc
insb
outsl
cmp
test
xchg
mov
aas
inc
fiaddl
js
mov
mov
ds
adc
cmp
and
iret
pop
add
bound
shrl
pushf
arpl
daa
inc
pop
jecxz
sbbl
pop
daa
inc
xlat
pop
inc
pop
sti
data16
jb
dec
notl
adcb
test
fdivl
imulb
xchg
jo
sbb
inc
pop
xor
dec
mov
jmp
cmp
fdivs
or
es
in
add
incl
mov
adc
aas
inc
mov
add
push
je
xchg
stos
arpl
lods
fnstcw
bound
and
subl
cmp
cltd
sbbl
mov
add
xor
int3
jae
aam
or
sahf
jl
divb
add
or
dec
dec
add
pop
mov
xor
mov
adc
ss
out
int3
dec
orl
mov
clc
iret
bound
icebp
pop
add
sub
mov
fidivrs
leave
xor
movsb
dec
in
xchg
subb
mov
sub
cmp
xchg
adc
int
sar
arpl
jne
adc
mov
mov
out
jle
cmp
pop
xor
mov
aaa
notl
adc
sbb
xor
xchg
cmp
sti
push
and
xlat
iret
fucomp
sbb
add
jae
and
lahf
inc
cmpsb
adc
xchg
aas
inc
push
in
shl
cmp
icebp
mov
inc
fadds
lcall
pop
lock
jmp
cmp
adc
mov
xchg
sbb
pop
imul
pop
imul
push
pop
loopne
lret
in
cmp
into
movsl
inc
sbb
aaa
adc
jmp
enter
ret
xchg
ret
dec
leave
in
jno
arpl
xchg
dec
ss
inc
sub
sub
push
ror
or
cmp
inc
inc
in
sub
xchg
inc
jmp
mov
jg
cltd
sbb
push
ret
push
mov
loopne
into
push
ss
push
pop
xchg
pop
out
or
xor
jmp
jbe
sbb
cwtl
or
enter
adc
add
bound
out
mov
adc
add
in
ss
mov
inc
scas
sahf
adc
cwtl
fs
adc
lock
mov
ret
xchg
stos
rorl
ret
pop
inc
cld
or
test
lret
icebp
and
mov
push
jge
pop
insl
cld
mov
xor
jmp
mov
cltd
mov
sbb
ja
or
in
aaa
cmp
stc
inc
lods
mov
adc
pop
pop
sbb
mov
cmp
rcll
mov
movsl
xchg
sub
lods
scas
mov
test
scas
sar
mov
imul
pop
sti
inc
xchg
cmpsl
lret
or
sti
sub
mov
dec
sahf
sub
ja
mov
repnz
sbb
push
xor
test
pop
ss
enter
mov
popf
imull
push
out
pop
and
fdivl
push
js
or
in
jne
cmpsb
jl
aam
add
or
xchg
mov
outsb
mov
fidivrl
in
scas
pop
data16
iret
jg
jle
push
jae
sub
and
popf
mov
inc
push
aad
ret
inc
cmp
cltd
xor
pop
xor
push
insb
movsl
mov
int3
mov
jnp
sbb
adc
hlt
push
call
push
add
dec
add
push
insl
outsb
cmp
pop
lcall
lret
je
popa
mov
pop
lea
add
jle
or
pushf
out
movsl
inc
jbe
adc
sbb
mov
mov
xchg
nop
das
mov
pop
imul
mov
mov
mov
jns
sbb
xor
test
mov
mov
adc
inc
popa
jnp
pusha
lods
sbb
js
dec
sti
xchg
xor
or
xchg
cmpsb
inc
push
xchg
loope
cli
jb
outsb
mov
adc
leave
adc
bound
mov
cli
xor
movsl
addr16
add
icebp
inc
push
mov
jo
lea
or
xor
int3
mov
fistl
test
xchg
and
test
fdivl
clc
push
sub
cmp
and
pop
pushf
outsl
mov
push
mov
loopne
rcrl
xchg
push
mov
push
mov
dec
int3
inc
fdivrs
cmc
icebp
mov
arpl
dec
mov
inc
outsl
lret
inc
fsubl
xchg
push
bound
movsl
xchg
jne
insb
mov
testl
add
iret
xor
inc
pop
push
cmc
mov
adc
jno
ficomps
cmp
mov
popa
mov
fs
cwtl
push
out
subb
bound
cmpsl
dec
data16
stos
cmp
lods
ja
mov
jb
lahf
lret
inc
je
cli
sub
lahf
pop
cmp
jne
clc
fidivs
dec
mov
push
push
dec
insb
scas
jle
out
aaa
pop
xchg
inc
inc
pop
sbb
mov
and
sbb
push
outsb
rclb
mov
hlt
stc
cltd
shll
dec
outsb
cs
push
ja
test
jno
lea
mov
adc
pushf
pop
dec
imul
xor
ljmp
pop
clc
push
push
rcr
je
ret
mov
push
cmpsb
mov
scas
mov
insl
sbb
enter
in
pop
pop
enter
xor
sub
shll
pop
cmpsb
rcll
mov
test
cltd
test
jle
movsl
adc
ljmp
stos
in
data16
lods
jbe
test
jg
stc
aam
cmc
mov
das
stos
ds
lret
mov
iret
cmpl
adc
loopne
cmc
ja
push
test
into
xlat
inc
jg
sbb
bound
call
fdivl
mov
sti
push
cmp
push
cwtl
mov
xor
popa
je
mov
lea
cmp
sub
adc
adc
sub
repz
sbb
push
stos
and
pop
imul
out
xlat
mov
adc
adc
mov
mov
mov
dec
xor
enter
mov
insb
push
movsl
mov
jmp
sbb
push
xchg
xchg
imul
popf
in
pop
jo
cld
popf
daa
pushf
xor
lea
dec
loope
notl
bound
shr
sub
movsb
xchg
sub
test
popf
ret
mov
xchg
cmpb
rorb
jno
push
mov
adc
sub
mov
stos
fsubl
jp
inc
add
inc
das
fisubrl
sbbl
out
imul
cmp
movsl
addr16
pop
clc
sti
dec
movsl
sahf
push
mov
dec
lret
in
push
rcl
lock
pop
push
insb
pop
mov
jb
pop
cmp
xor
shrb
mov
sahf
mov
fwait
cmpsb
aas
lea
mov
add
mov
xchg
cs
hlt
mov
lret
adc
out
sbb
insb
xor
lock
aas
fwait
mov
subl
loop
fdivrs
scas
push
ret
sub
mov
ljmp
out
jle
notb
inc
mov
cmp
mov
mov
inc
in
nop
pop
leave
cwtl
mov
sbb
mov
jecxz
add
mov
add
dec
add
pavgb
cmp
jge
pop
dec
adc
or
mov
gs
xchg
in
stc
push
cltd
clc
adc
arpl
ss
testb
lahf
shrl
jb
cmp
psllw
sti
pop
xchg
xor
lcall
mov
lock
sbb
cmp
pop
mov
add
sub
xor
in
pop
xchg
iret
int
cmp
data16
fidivrs
adc
ret
jb
repz
or
movsb
sub
in
clc
loop
insb
xor
and
out
fninit
add
fnstenv
xor
sub
stos
mov
repnz
inc
sub
loop
into
dec
and
movsl
mov
repnz
lret
lret
stos
ljmp
repz
cmp
adc
repnz
jge
pushf
mov
addl
lods
xchg
adc
pop
mov
mul
mov
jge
mov
scas
inc
xor
rcl
push
xchg
mov
or
pusha
sbbb
nop
ljmp
daa
mov
xor
imul
stos
inc
dec
adc
icebp
jno
loop
popa
adc
pop
xor
mov
pop
out
insl
jge
leave
pop
mov
mov
push
xlat
dec
out
ret
and
sbb
mov
sbb
mulb
or
out
enter
or
adc
int
loope
dec
push
inc
scas
inc
js
aad
mov
fstpt
dec
je
fsubrp
jo
push
fbld
fstpt
adc
aas
dec
jno
sub
cli
cmpb
repnz
outsb
stos
xchg
mov
or
add
push
jnp
pusha
addr16
outsl
jo
es
mov
aad
and
aam
jg
cld
mov
stos
mov
jl
popa
sub
or
add
xchg
std
mov
ret
jmp
push
stos
mov
sbb
jge
inc
fiadds
mov
imul
adc
idiv
test
cmp
and
mov
imul
mov
inc
push
ret
dec
in
xchg
cmpsl
les
jbe
dec
xor
cmpsb
and
sbb
pop
pushf
cmc
xor
test
fcoml
aaa
pop
lea
daa
jl
gs
int3
subb
insb
mov
push
jge
sbb
mov
add
add
and
jno
push
mov
add
mov
lret
in
fsubrp
adcl
mov
mov
sbb
dec
mov
lods
stc
pop
cltd
mov
adc
outsb
push
xchg
shl
js
outsb
aaa
xchg
push
daa
arpl
scas
xchg
in
jmp
xchg
fiaddl
sbb
rcll
andl
sbb
sbb
pop
mov
jg
fdiv
outsl
cwtl
mov
mov
xlat
jbe
cld
sub
ja
xor
rorl
sub
mov
in
cmpl
stc
dec
and
sbb
sahf
shll
mov
adc
dec
sbb
outsl
inc
mov
add
dec
negb
mov
sbb
test
sti
fldcw
popa
fldz
cmp
ss
mov
mov
and
jl
xchg
daa
dec
out
xchg
pusha
inc
popf
or
in
imul
scas
mov
roll
in
stos
push
cmp
jl
inc
mov
sbb
xor
scas
xchg
aam
les
add
dec
mov
lock
mov
test
inc
pop
push
jns
mov
ljmp
mov
xor
sbb
mov
int3
addb
scas
xor
push
push
fidivs
push
adc
adc
mov
fimuls
lods
or
enter
xor
inc
ja
jae
inc
fists
loope
xor
jmp
iret
ffree
mov
jecxz
sahf
scas
push
addl
pop
xchg
mov
pop
loop
xlat
pop
mov
xchg
sti
inc
movsl
cmp
ret
fnsetpm(287
jnp
ret
pop
lods
pushf
repz
ljmp
cmc
or
push
xlat
sti
and
insb
push
sbbb
and
dec
popf
xor
xchg
shll
cli
lea
jle
daa
and
or
cmc
testb
sbb
jbe
jp
mov
leave
inc
inc
es
imul
xchg
pop
lds
cmp
or
rcrb
adc
or
jle
das
test
and
dec
std
subb
pop
push
push
dec
fucomip
jle
mov
inc
sub
fcmovbe
xchg
sub
add
mov
jle
lock
mov
ret
pop
add
inc
es
or
or
jle
nop
hlt
or
jge
jmp
sbb
pop
mov
jmp
jmp
xor
pushf
ds
xchg
mov
add
subl
jnp
jl
mov
lret
jae
scas
mov
push
push
and
aaa
mov
add
inc
std
lret
push
in
jne
jl
adc
xchg
xor
mov
sbb
fstps
and
dec
and
cld
push
jg
add
xchg
mov
push
push
cltd
push
in
inc
repz
daa
std
sti
ficoms
jb
dec
and
stos
xor
daa
das
mov
push
sbb
add
sbb
cmpsl
pop
aaa
mov
pop
loope
out
mov
mov
std
or
cmp
push
fsubl
mov
push
jg
cwtl
mov
add
stc
pop
mov
adc
pop
out
push
mov
mov
lods
stos
mov
push
cmpb
js
mov
cld
out
test
pop
adc
or
out
into
stos
push
hlt
xorps
jae
add
sahf
in
les
dec
cmp
add
ret
adc
dec
push
mov
adc
mov
sub
mov
pop
mov
rol
xor
and
mov
add
push
ss
das
movb
dec
movsb
mov
repz
adc
into
cltd
das
xor
out
movsl
lods
inc
ret
mov
lcall
sub
pop
mov
or
fnsave
mov
int
push
or
inc
faddl
pop
mov
and
mov
insl
ret
mov
cmp
mov
test
cmp
xor
repz
fildl
adc
pop
mov
xchg
cld
xor
repnz
or
adc
inc
inc
ds
das
xchg
lret
jmp
push
or
adc
dec
int3
xor
shll
add
dec
cmp
outsl
loop
stos
lcall
xchg
sbbb
and
sbb
add
dec
sbb
xchg
jg
jmp
mov
push
lahf
mov
dec
pop
nop
fwait
xor
cmp
xor
push
pop
cs
movsl
mov
mov
sub
in
pop
outsl
hlt
test
imul
jae
movsb
and
sub
sbb
insb
js
sarb
lret
pop
xchg
push
push
lahf
stos
in
fcmovnb
int3
pop
out
dec
jecxz
shll
int
jecxz
scas
xchg
ljmp
je
lock
lods
mov
int
imull
lock
jmp
xor
cmp
dec
cwtl
xor
cmp
fcomps
mov
dec
xor
inc
jecxz
sbb
cmp
inc
xlat
adc
aas
mov
cmp
testb
lret
repnz
in
and
push
xchg
repz
xchg
push
xor
lret
jbe
std
lods
push
popf
clc
in
call
mov
add
loopew
data16
test
mov
mov
fldl
outsl
and
adc
rorl
and
shrb
xor
dec
jecxz
dec
cmpsb
xor
sbb
mov
cmp
inc
cmp
sbb
lds
mov
inc
imulb
push
retw
mov
mov
in
imul
mov
sbb
cmp
jae
or
lret
fnstsw
fs
adc
cmpsb
xorb
sub
mov
cwtl
data16
sub
dec
cmpsl
and
aam
arpl
mov
popf
push
fwait
testb
popa
jmp
dec
mov
push
out
mov
aas
push
repnz
mov
stos
mov
or
das
fsubs
imul
pop
aaa
add
or
nop
cld
xchg
mov
inc
fdivrs
adc
test
test
out
xor
mov
hlt
jnp
sub
lahf
push
cmp
cmp
into
mov
out
inc
lods
jmp
out
mov
push
dec
jecxz
push
out
sti
sbb
xor
or
mov
cs
fs
sub
push
mov
mov
and
imul
push
adc
ret
xor
inc
dec
sahf
mov
into
jo
mov
add
pop
mov
je
test
and
mov
sub
seta
movsl
repz
data16
push
dec
sub
in
icebp
add
and
test
adc
aam
cld
push
sti
int3
pop
inc
mov
push
aam
and
mov
test
mov
cmp
jmp
push
addl
pop
dec
dec
leave
pusha
subb
mov
out
jecxz
mov
jecxz
imul
push
jae
fld
cmp
and
mov
int3
mov
sbbl
nop
repnz
adc
mov
dec
enter
stos
cmp
jne
push
mov
std
pop
sub
xorl
and
xor
jmp
adc
ja
push
add
lret
in
jmp
push
call
les
sbb
xchg
js
dec
add
out
sti
insl
outsb
cmp
rcr
int3
or
sbb
ljmp
mov
in
inc
loopne
jb
jne
shrb
std
pop
dec
outsb
push
cmp
xchg
cld
jnp
jne
jl
shll
stos
sub
iret
and
rclb
mov
clc
xchg
cmpsb
dec
mov
jg
sbb
rcrb
ds
icebp
jmp
loop
in
fnstcw
inc
into
das
add
pop
test
fwait
xor
stos
mov
push
aas
loope
sbb
jbe
cmp
dec
mov
mov
mov
dec
xchg
daa
sub
xchg
add
push
fwait
out
cwtl
fldenv
scas
loop
mov
addr16
push
push
sti
ds
loopne
jo,pn
inc
gs
jbe
mov
movsl
xchg
out
or
out
fsubrl
lods
jmp
js
aad
sbb
inc
arpl
inc
stos
cmp
sbb
enter
nop
call
mov
in
xchg
out
add
cltd
xor
es
mov
into
dec
dec
fldl
pop
adc
addr16
sub
shll
sbb
movsl
and
pusha
sbb
dec
mov
test
and
test
xlat
push
mov
loope
jne
sti
mov
jnp
nop
jo
fwait
add
xor
xchg
movsb
sbb
xlat
sbb
lcall
jns
inc
sub
adc
sbbl
mov
and
ds
dec
pusha
mov
lret
out
mov
sbb
or
mov
sarb
pop
lock
jae
lods
rclb
mov
lods
jge
xchg
sbb
in
sub
fninit
add
ljmp
push
cmp
cmp
lock
mov
sti
or
add
jns
jmp
sub
arpl
adc
lods
daa
ljmp
imul
sahf
mov
mov
xor
fbld
mov
ret
aam
jl
loopne
sbb
test
mov
xchg
adc
mov
lds
in
aad
sbb
jle
insb
pusha
jo
lea
sbb
cmp
jns
xchg
scas
inc
xor
dec
fdiv
adc
sub
mov
mov
xor
into
fcom
ss
pop
scas
into
jne
cli
fwait
ret
es
out
jbe
adc
adc
dec
pop
dec
pop
xlat
repnz
or
cwtl
jle
or
mov
fwait
int3
xor
xchg
xchg
push
fmuls
stos
pop
into
fsubrl
xor
int3
mov
ds
scas
in
fwait
add
sahf
xor
jne
adcb
xor
mov
xchg
cwtl
push
fwait
in
or
sub
aad
sbb
movsl
xor
out
jbe
imul
push
xor
and
add
movsl
jns
add
ret
jmp
psadbw
xchg
stos
dec
push
cltd
xor
stos
loope
je
fucomip
lea
inc
or
jmp
push
movsl
xchg
push
lret
sub
in
push
insb
lcall
das
out
add
push
lods
mov
jbe
imul
xchg
mov
dec
pusha
popa
shlb
mov
inc
cmc
iret
data16
fdivl
jnp
decb
jbe
dec
stos
sub
adc
jle
shr
adc
arpl
cld
into
push
lods
cwtl
repnz
push
cmpsl
mov
nop
fs
into
xor
mov
mov
nop
sub
ret
add
jne
stos
and
mov
fs
pop
stc
lret
test
call
push
lods
outsl
sub
icebp
ss
stc
stc
nop
sub
fsubrs
sbb
test
mov
ljmp
mov
and
cmp
out
xchg
movd
fidivl
test
cmp
mov
cld
adc
mull
out
nop
sbb
add
sahf
aad
or
es
das
orl
or
lods
pusha
pop
imul
jmp
pop
ds
popl
xor
int3
call
cmovs
cmp
cmp
sub
andb
cli
outsb
clc
imul
xchg
or
mov
xor
xchg
mov
imul
leave
adc
pushf
mov
mov
aas
add
add
pop
push
clc
push
jl
daa
imul
movsl
dec
dec
xchg
addr16
ss
lahf
cmp
test
sbb
fs
out
pusha
in
mov
loopne
je
xchg
mov
pop
push
sbb
lds
dec
shlb
in
popf
xor
mov
mov
pop
xor
adc
mov
mov
jb
rcl
sbb
fs
incb
sbb
or
xor
fsubs
fnstcw
mov
dec
pop
mov
cli
mov
pop
sbb
mov
ja
pop
push
push
loop
sub
sub
lret
jg
repz
mov
lods
push
lds
lods
lock
sbb
fwait
sub
cmpsl
ret
negl
fadds
jecxz
aas
lcall
lret
adc
ljmp
fidivrs
je
push
call
mov
dec
in
sahf
ss
xor
shlb
add
aaa
sarl
mov
inc
cmp
scas
push
pop
lret
inc
mov
inc
xlat
repnz
sbb
loope
lret
scas
jne
push
je
xchg
ss
imull
mov
imul
cld
push
xchg
aas
fidivl
cld
test
mov
aad
dec
out
jmp
aad
mov
shr
adc
xchg
rcll
inc
lahf
insl
les
sbb
push
cvtdq2ps
push
int
pop
xor
pop
movsb
jo
dec
int3
fbstp
adc
lret
jp
push
cmp
sub
out
out
or
jl
jbe
mov
mull
into
pop
jne
add
dec
stos
or
divb
test
aam
ret
stos
mov
es
inc
aaa
idivb
push
pop
push
inc
push
jne
push
xor
xor
jb
push
in
lret
loop
dec
insb
mov
fdivp
mov
imul
push
xor
movsl
arpl
fcmovbe
push
into
mov
insb
cmp
jns
lret
xchg
call
rorb
dec
add
jb
adc
pop
or
mov
sbb
pop
push
push
and
repnz
jbe
sub
cld
or
fcomi
mov
mov
addr16
cmpl
js
adc
outsl
sti
mov
ret
in
shl
ljmp
push
or
cmpsb
mov
mov
insl
add
movsl
lret
inc
clc
mov
sbb
cmp
ud0
scas
pop
jno
ljmp
jno
test
mov
fs
nop
cwtl
adc
mov
and
test
sbb
sarb
testl
test
std
cltd
ret
mov
pop
cmpsl
or
mov
dec
xor
or
sub
inc
pop
out
scas
inc
or
xchg
xorl
push
cld
scas
loope
insb
add
lea
pop
mov
mov
cmpsb
jg
xor
lock
mov
adc
aad
ja
scas
mov
lds
scas
divb
or
sbb
jg
fsubrl
negb
push
mov
cmc
jle
aaa
loop
lret
loope
lcall
jns
ds
dec
add
hlt
sbb
pop
mov
push
cmp
imul
xor
int
push
jb
mov
sbb
pop
push
lret
jg
lret
aas
loop
mov
adc
inc
and
mov
mov
push
in
mov
pop
je
mov
add
push
sub
and
stos
testb
ret
test
push
jmp
mov
and
push
adc
aam
call
xor
add
push
fwait
xor
sub
mov
xchg
loopne
into
enter
test
inc
bound
pop
mov
cs
inc
arpl
or
adc
lods
ja
inc
mov
inc
ds
cwtl
repz
mov
movsb
idivl
mov
test
pop
jae
fdivrs
add
faddl
xor
stos
les
imul
ret
or
lcall
fldl2t
push
xchg
sub
lods
cmp
xchg
test
and
sbb
adc
mov
arpl
cs
ret
mov
notb
sti
add
in
xor
nop
add
andl
xor
lods
adc
xchg
push
stc
ror
mov
push
xchg
mov
xor
hlt
in
pushf
push
sbb
inc
insl
sti
mov
test
out
es
fdivrl
adc
and
imul
pop
jp
dec
jbe
ja
inc
sbb
sub
lret
imul
andl
outsl
pop
xchg
sub
mov
adc
or
jmp
push
out
mov
mov
filds
int
fbstp
mov
pushf
cld
mov
lcall
sbb
sbb
lea
pusha
stos
pop
mov
push
insl
jge
dec
sbb
aam
mov
rol
loop
or
dec
inc
cmpsb
cmpsb
sbb
icebp
xor
stos
jne
test
pusha
lods
sahf
movl
or
lods
inc
pxor
lret
inc
adc
pop
dec
cmpsl
mov
jl
std
dec
xlat
mov
and
inc
imul
call
or
adc
push
or
xchg
sub
test
mov
cmp
int
shll
lret
pop
imul
out
test
popw
jae
xor
rcll
rcl
cmp
loopne
jbe
jnp
xor
push
pushf
pop
insl
iret
push
pusha
divl
cmc
xor
cltd
add
mov
mov
inc
rclb
js
les
adc
xor
sub
iret
sbb
inc
es
dec
or
pop
ss
mov
fnsave
aam
das
lret
into
dec
sub
mov
fbstp
xchg
or
or
sub
jmp
push
or
sti
test
imul
pop
scas
test
mov
cmc
push
jnp
adc
and
ret
add
scas
aaa
scas
jns
mov
jo
and
xchg
sbb
jge
sbb
cmpsb
pop
popf
in
cmpsl
dec
push
sbb
xchg
rclb
sbb
adc
or
hlt
push
push
dec
or
jmp
dec
mov
outsl
add
das
xor
sbb
enter
lahf
adc
lret
es
xchg
mov
imul
add
jmp
popf
inc
adc
fs
repnz
lods
ja
loopne
inc
fs
dec
lahf
mov
out
pop
imul
outsb
pushaw
push
jns
in
mov
daa
test
punpckldq
add
enter
or
pushl
jle
movb
jp
lret
ficomps
out
cmpsb
std
or
and
addr16
push
mov
lahf
outsl
or
je
loop
ret
fsubp
mov
fsubrl
push
push
icebp
mov
mov
loopne
xor
add
push
shrb
bound
dec
adc
jno
adc
xrelease
adc
jmp
or
add
decl
aas
xchg
hlt
call
mov
jg
mov
mov
sub
push
fs
inc
jns
cs
jo
sbb
mov
std
mov
mov
dec
mov
outsb
xchg
push
subl
pop
sbb
pop
and
sbbl
cmp
mov
push
fldcw
xor
pop
sbb
imul
dec
sbb
clc
inc
jle
xorb
scas
cs
sub
mov
dec
mov
in
iret
pop
leave
mov
cmp
pop
mov
xlat
addr16
shl
jl
jnp
xchg
lods
push
sbb
pop
push
sbb
push
jae
sbb
outsb
in
cwtl
js
loopne
testb
jb
ret
mov
aam
push
fstpl
ret
or
das
dec
add
or
lods
sub
int
int
ss
mov
sub
repnz
lret
aaa
lret
pop
ror
jo
lcall
scas
sbb
or
in
xor
in
xchg
push
lret
xor
dec
push
test
in
cmp
push
lret
dec
into
xchg
ds
movsl
cmp
cmp
push
add
and
add
scas
xchg
mov
fisubrs
xchg
outsl
stos
les
add
mov
mov
mov
jne
sub
jnp
repnz
sub
xor
xchg
outsb
mov
adc
push
or
ja
push
es
push
sbb
dec
jns
jp
sbb
in
cmpsb
call
cltd
mov
inc
and
inc
sub
cmp
fldcw
or
test
xchg
and
pop
sbb
outsl
andb
push
lods
out
daa
outsl
inc
jae
fistpl
pop
insb
xchg
fst
sub
and
lcall
mov
clc
ss
lock
je
imul
test
xchg
stc
aad
dec
sub
jns
pop
cmpsl
or
out
ret
or
jmp
pop
aad
imul
pop
cmp
stc
ja
inc
jp
bound
sbb
add
mov
jnp
stos
inc
or
sub
js
out
push
jo
lock
dec
push
enter
inc
hlt
rorl
or
xchg
jl
mov
int3
add
js
mov
push
xchg
pusha
mov
fsub
cmp
xor
mov
pusha
sub
nop
fsubl
std
adc
fbstp
stos
outsl
mov
mov
jbe
mov
mov
push
lock
lret
adc
jg
cmp
inc
push
imul
sbb
mov
aam
sub
rcll
or
sub
in
mov
add
enter
ret
pop
movsl
cmp
jbe
jae
aad
std
pop
xor
inc
xlat
push
lcall
les
adc
fidivrl
xor
sbb
inc
mov
in
lahf
fucomp
mov
adc
dec
lock
xchg
mov
cmp
or
mov
sbb
or
daa
lret
mov
mov
pop
xor
dec
pop
sbbl
loope
pusha
mul
xchg
shl
xchg
clc
popl
fwait
dec
out
lods
sbbl
adc
push
in
mov
push
push
ljmp
fnsave
xchg
dec
jb
jge
add
mov
adc
int
push
mov
ja
testl
dec
add
push
in
jmp
mov
inc
add
fsubrs
test
mov
dec
fisubrs
mov
sub
mov
int3
mov
mov
bound
jns
mov
jmp
adc
inc
fwait
int
fdivl
out
push
out
jge
xchg
stos
mov
mov
pop
dec
xor
cltd
fildll
int
in
push
mov
sbb
mov
pop
std
sub
pop
jp
int
lods
pushf
xchg
or
and
jbe
xchg
out
sub
pusha
sbb
inc
sbbb
into
and
jne
aaa
dec
and
std
or
in
dec
jl
dec
fsubrs
aam
shrb
notb
mov
pop
bound
cmp
or
testl
xchg
push
adc
jns
or
and
call
pop
sahf
cmp
call
jge
loope
inc
adc
lock
or
xchg
mov
pop
cmp
mov
hlt
adc
aaa
into
ja
cmp
adc
je
rolb
ficoms
sbb
mov
inc
mov
jle
adc
pop
lahf
mov
xor
xchg
sub
outsl
dec
push
mov
in
jbe
xor
lret
pop
jae
push
movsl
fwait
pop
pop
idivb
jmp
inc
inc
lods
mov
out
push
lock
shlb
ss
fwait
out
dec
mov
sbb
sub
rorb
pop
cmp
cld
mov
stc
je
adcl
call
jae
xchg
into
jbe
ja
lret
inc
push
jne
and
mov
push
stos
imul
sbb
push
xor
pop
dec
or
mov
dec
pop
lret
xlat
stos
pop
sbb
jp
jns
lods
xchg
call
mov
filds
xchg
pop
aaa
stos
sbb
lods
out
lds
into
inc
inc
sub
mov
push
test
xchg
push
xor
je
push
mov
test
jp
push
pop
rcr
push
out
mov
inc
imul
mov
je
xchg
sub
shll
pop
xchg
enter
xchg
push
inc
movsl
or
jge
add
push
pop
pop
xchg
stc
stos
cmp
in
loope
stc
mov
add
mov
xchg
push
mov
mov
in
and
cltd
pop
aam
gs
cmp
mov
sub
cltd
jb,pt
jecxz
dec
popa
push
mov
or
or
inc
pop
sbb
sub
pushf
scas
sub
jp
and
int
and
icebp
pop
xchg
jmp
lahf
int
in
shlb
out
movsl
in
mov
add
adcl
jns
xor
adc
das
inc
repnz
xlat
mov
cwtl
add
cmp
lea
pop
scas
dec
adc
cmp
push
push
and
adc
std
ljmp
bound
cmp
push
mov
mov
pop
sti
fadd
jae
dec
movsl
out
jnp
xchg
mov
sbb
add
cmp
jno
pop
mov
or
jb
xchg
movsb
push
sbb
or
outsl
mov
fcomip
adc
jnp
pop
test
fiadds
sub
push
push
sub
shl
mov
cmp
cwtl
outsl
mov
inc
movsb
or
icebp
stos
shll
outsb
cs
xchg
cs
and
lret
mov
stos
push
mov
mov
inc
cmp
jle
mov
test
insb
mov
or
fstpl
test
mov
int3
test
std
xchg
in
test
mov
clc
test
cmp
cltd
aas
mov
inc
mov
cmp
push
mov
sarl
aas
cmp
jns
lds
pop
fcmovne
cmp
add
rolb
add
loop
mov
ss
inc
cmp
cmp
aaa
jb
stc
adc
jo
hlt
sbb
sbb
adc
pop
ss
mov
ljmp
adc
gs
movsb
inc
jns
fdivl
fsubs
fbld
rcl
dec
push
mov
fmul
pop
mov
sub
fsubrs
insb
jge
inc
fstpl
or
cmpsl
or
xchg
sbb
sbb
sub
in
mov
adcb
pop
lahf
xor
loop
test
lds
rorb
lea
int3
push
daa
mov
sti
mov
pop
scas
inc
stos
arpl
out
loop
push
or
ret
cmp
sub
lahf
xlat
pop
push
jecxz
xor
xor
mov
inc
xchg
or
xor
into
out
mov
test
ljmp
jmp
cli
jae
and
mov
jb
and
mov
ret
repz
into
push
fwait
and
ja
push
mov
popf
add
into
lea
rolb
outsb
jle
lods
push
loope
pop
cli
fnstenv
mov
adc
jecxz
movsb
xor
pusha
ja
ja
push
jp
jae
jnp
cld
daa
mov
scas
fimull
bswap
mov
or
xor
xor
xchg
idivb
cmpsl
mov
loop
lds
std
test
mov
popf
adc
pusha
inc
cli
push
add
popa
mov
jg
mov
arpl
sahf
jno
adc
cmp
rcr
loop
pop
loop
jns
imul
xchg
ret
xlat
je
ds
popf
lcall
loopne
jno
outsl
jnp
imul
cwtl
dec
lods
mov
sub
mov
fcoms
fwait
sti
mov
cltd
cmp
ret
in
rorb
mov
das
pop
inc
pop
pop
jg
fidivrl
adc
sbbl
fidivrl
xor
cmp
rolb
mov
jb
js
shll
push
mov
mov
push
jo
aaa
push
inc
cli
xchg
ss
lahf
loopne
xor
jns
cltd
mov
fs
pop
in
decl
xchg
jnp
popf
iret
movsl
repnz
cmp
fistps
out
push
jmp
cmp
enter
adc
xchg
arpl
popf
aam
jnp
xor
sub
loope
loope
adcl
mov
fisttpll
shlb
movsl
out
lods
jge
fldenv
jne
mov
cltd
mov
inc
sub
ret
in
ja
push
fistps
mov
mov
sarl
mov
arpl
sbb
add
or
push
sarb
outsl
das
sti
pop
inc
outsb
iret
xchg
in
add
mov
jg
out
push
push
sub
dec
lea
push
cwtl
xor
cltd
add
into
sub
xorb
mov
xor
xlat
pop
mov
js
mov
jae
sahf
push
push
loope
xchg
in
or
push
jge
mov
pop
sub
fnsave
inc
mov
xor
movsl
push
xlat
mov
adc
cmp
neg
mov
push
mov
shll
fisttpl
or
mov
insb
sbb
loop
mov
lock
mov
push
test
or
mov
out
mov
cmc
mov
sahf
lcall
mov
xchg
cwtl
xor
aas
outsb
loopne
push
inc
push
cmp
outsl
mov
gs
cs
cmp
mov
aad
aad
movsl
add
in
inc
dec
push
hlt
pop
in
cmpsl
pop
hlt
sub
cmp
sbb
dec
cmpsl
cmp
pop
aad
in
mov
lods
fsubrl
inc
push
mov
add
bound
inc
arpl
pop
ret
jmp
and
push
xor
jbe
rcll
pop
andl
mov
cwtl
loope
inc
mov
push
add
lcall
cmpsb
jmp
or
xor
xor
les
ja
into
and
rcll
ds
mov
or
sub
pop
mov
cmp
arpl
sbb
filds
mov
xchg
jmp
leave
add
mov
mov
xor
sar
xchg
shr
fwait
xchg
out
shlb
sbb
nop
cli
cmpsl
int
jg
lock
rcrl
stos
jae
push
jg,pn
sbb
ds
not
in
cmp
daa
push
pusha
mov
adc
mov
xchg
jmp
test
into
cwtl
ljmp
popf
inc
test
popa
pop
pop
insb
push
insb
xchg
jnp
cwtl
jns
pop
cmp
pop
add
sbb
inc
shl
movsb
xchg
lods
xor
test
pop
push
xchg
test
xor
lock
repnz
cmp
inc
outsl
pop
rol
or
gs
pop
cli
dec
daa
push
or
lahf
cli
out
es
cltd
imul
pop
dec
dec
aam
mov
fidivs
in
mov
or
add
pop
stos
sarb
nopl
in
and
test
test
in
add
int3
mov
xchg
lds
or
xor
mov
jge
sbb
sbb
dec
mov
inc
sbb
enter
das
cli
jl
rorl
gs
mov
jp
flds
lock
jle
js
dec
mov
push
mov
xchg
xor
push
ja
push
mov
pusha
xor
and
pusha
pop
xor
adc
or
xchg
bnd
sub
pop
jg
and
pop
aad
arpl
ja
bound
in
or
inc
jmp
scas
std
int3
push
inc
insb
pop
iret
bound
out
mov
jo
push
xchg
sub
jae
adc
call
inc
and
push
dec
ret
in
pop
ficompl
bound
add
fs
out
aad
or
dec
dec
lods
fdivrl
jo
lahf
push
dec
adc
ss
sub
imul
addr16
inc
dec
xchg
push
aam
or
sub
lahf
addr16
cmc
rolb
jmp
fists
pop
int
scas
out
pop
out
add
pop
dec
and
or
xchg
clc
sub
mov
cmp
stc
scas
mov
jae
mov
lods
lds
mov
out
cmp
out
and
ret
in
aas
cmpb
cmpsb
mov
jbe
mov
pop
fs
adc
mov
testb
mov
xchg
loope
or
test
push
aas
dec
popf
outsl
xchg
imul
popa
push
lds
mov
into
das
mov
pop
negb
jge,pt
jl
sti
adc
sub
iret
rolb
loopne
xchg
imul
jmp
pop
negl
rcrb
popf
cmc
insb
xor
jge
or
fiaddl
test
in
mov
imul
popa
cmpl
fwait
aad
fdivrs
push
sbb
add
xchg
xor
fsubr
pmulhw
jmp
daa
inc
test
adc
cli
int
call
pop
jmp
cwtl
jle
fildll
jg
or
popf
mov
dec
ss
jmp
test
push
push
divl
stos
fs
jle
pop
gs
or
or
das
cmp
jmp
xor
push
mov
pop
xchg
cmp
lahf
adc
pop
insl
cmpsb
xor
mov
push
inc
sbb
rorl
add
push
sahf
out
lods
jge
test
xchg
pop
call
sahf
xor
in
jmp
repnz
adc
movsl
add
icebp
aam
ficoms
arpl
or
inc
pop
fwait
push
or
jne
cmp
cmpsb
out
mov
jp
cmp
cmp
lahf
add
cs
push
sti
cmc
sahf
xor
outsb
cmp
std
pop
xor
push
mov
push
and
sti
fwait
push
pop
out
aaa
into
jmp
call
test
inc
xor
lret
xchg
arpl
subb
pop
mov
add
mov
mov
push
mov
pop
arpl
test
sbb
push
sbb
push
xchg
jl
loope
inc
inc
fldenv
incl
mov
xchg
leave
pusha
ret
xchg
outsl
cmp
arpl
rol
sahf
jle
dec
fidivs
push
push
adc
adc
int
loope
or
ds
popa
je
pop
sbb
jge
mov
add
in
jo
sbb
and
mov
pop
call
test
xchg
push
adc
push
pop
ss
cli
les
jg
pop
mov
stos
lret
enter
repnz
fs
inc
int
aam
fsubl
or
jbe
ret
and
and
lahf
insb
cmp
xchg
cmp
out
mov
idivl
dec
push
mov
inc
sbb
out
mov
lahf
cmp
mov
ja
sbb
mov
mov
inc
in
lcall
push
mov
inc
add
popf
js
cmpsb
std
push
xchg
outsl
cs
adcb
mov
aad
cmp
repnz
adc
jle
out
dec
and
call
push
test
mov
push
movsb
mov
clc
mov
addr16
xor
add
je
pop
fdiv
or
aam
push
repz
jle
into
xor
dec
dec
mov
cli
mov
arpl
push
shll
popa
sub
sbbb
popa
sarb
add
mov
pop
loope
shld
enter
push
or
gs
xchg
clc
mov
out
sahf
inc
push
cmp
loopne
call
push
push
cmp
fdivs
cltd
loop
int
mov
aam
mov
mov
addr16
xchg
sub
jo
mov
inc
popf
mov
lds
jnp
add
add
push
mov
leave
and
push
add
xor
mov
pushf
lcall
add
xor
dec
movsl
call
add
movsl
cmp
addb
pop
loope
les
mulps
push
mov
mov
in
and
stc
out
jns
mov
movsb
pushf
xchg
arpl
mov
ja
sbb
sub
testl
adc
mov
sbb
lcall
fbstp
je
aas
adcl
addb
loop
mov
loop
jne
dec
andps
mov
mov
out
ficomps
jae
jne
in
add
pop
jbe
sahf
push
adc
lret
jo
push
stos
sub
jb
dec
push
add
sbb
sahf
sub
scas
pop
aas
daa
lret
xor
xor
outsb
adc
fisttps
outsl
push
mov
je
and
rdmsr
stc
mov
cmc
lea
mov
xor
rcll
std
sbb
test
xor
mov
mov
pop
sub
inc
ret
test
sub
push
jae
cli
dec
femms
fs
and
iret
mov
aas
pusha
mov
xor
dec
cmc
pushf
bound
fldcw
cmp
pop
lahf
dec
cmp
xor
push
and
out
add
add
insb
xor
jecxz
repnz
outsb
add
call
or
mov
xlat
push
inc
xlat
jge
xchg
pop
adc
in
idiv
popf
sub
cmp
add
push
outsb
dec
fsubr
arpl
into
jp
out
ja
and
push
pop
jnp
jmp
je
and
jnp
jnp
rclb
push
add
or
mov
insl
test
or
push
and
cld
push
stos
cmpsb
lahf
bound
imul
gs
push
inc
out
mov
push
aaa
xor
sarl
gs
fsub
outsl
or
pop
adc
fiaddl
fwait
xor
mov
adc
mov
jae
add
push
adc
hlt
or
andl
mov
cmp
xorb
cmp
das
push
add
ljmp
imul
mov
adc
xlat
xchg
jb
adc
xor
and
mov
xchg
inc
popf
jg
cmpsl
dec
std
imul
cli
sbb
test
mov
arpl
push
addl
push
repnz
movsl
ret
shll
mov
inc
insl
arpl
addr16
pop
das
dec
mov
stos
mov
lcall
roll
shr
mov
push
xchg
mov
lcall
frstor
pushf
xor
sbb
imul
cmc
cmp
lea
adc
leavew
fwait
stos
test
lcall
push
mov
add
stos
inc
push
popa
pop
pop
mov
push
cltd
stos
sbb
push
mov
jno
mov
adc
dec
mov
push
scas
cmpsb
cmp
fwait
stc
inc
sbb
cmc
insb
add
inc
cmpsb
ret
mov
push
lcall
or
gs
push
gs
icebp
lret
jno
sbb
enter
and
repz
dec
pop
adc
jmp
and
and
outsl
or
mov
cld
xchg
lret
cltd
mov
jo
stos
mov
jbe
lods
add
pop
mov
sub
push
jne
adc
push
xor
jae
out
pop
dec
es
push
loope
and
mov
insl
popa
and
aaa
or
fnstcw
in
leave
pop
pop
mov
cli
xor
movsl
lds
int3
xlat
push
int3
push
pop
inc
int
rcrl
iret
push
inc
fcmovb
stos
fs
loope
clc
adc
ja
push
testl
in
cli
pop
cmp
and
setl
pop
lcall
inc
stos
mov
or
test
sub
sub
mull
movsl
and
fucomi
loope
lcall
push
mov
sbb
outsl
jae
push
xor
daa
outsl
xor
xlat
pop
stos
aam
shr
sbb
out
pop
icebp
cwtl
inc
sbbl
inc
loopne
adc
push
sub
mov
sub
scas
jno
push
cmp
clc
lret
imul
outsb
insb
pop
xchg
and
add
cltd
jge
dec
shlb
cwtl
outsb
push
sbb
mov
les
jo
popf
and
std
and
ret
and
lds
mov
and
jo
in
dec
lods
cmpsl
mov
fcmovne
add
inc
repz
test
mov
pop
sub
mov
fisttpl
into
int
fsubs
pushl
sti
adc
fwait
xchg
sub
lea
in
subb
inc
push
pushf
stc
cmp
movsl
icebp
dec
pop
jb
cmp
ljmp
mov
mov
xor
add
lahf
cltd
mov
gs
push
sub
inc
xlat
jmp
daa
movsl
mov
pop
inc
pop
ss
ljmp
pop
cmc
sbb
test
ja
in
leave
pop
dec
int
mov
nop
cld
push
add
adc
ljmp
js
repz
rcrl
mov
adc
shl
arpl
out
ljmp
adc
das
sub
fldcw
je
loop
popa
imul
je
xor
or
stc
sbb
pop
jmp
fdivrl
sarb
jbe
xchg
movsb
fidivs
pslld
xor
add
das
push
dec
dec
aam
push
minps
in
imul
push
insb
mov
mov
cs
push
jb
inc
ljmp
and
orb
adc
pop
outsb
jecxz
call
xchg
out
std
push
push
cmpsl
addr16
jbe
push
pop
dec
loope
adc
pop
cli
lea
or
cmc
gs
mov
repz
mov
shr
cmp
cli
and
push
out
bound
xor
dec
sub
and
dec
dec
popa
into
adc
arpl
push
cmp
xlat
dec
mov
rcrl
jl
sti
testl
in
rorb
pop
xchg
daa
outsl
scas
mov
mov
test
lods
shrl
mov
dec
notb
negl
cmp
sub
std
mov
std
cltd
out
mov
in
ret
dec
add
dec
dec
jp
aam
cmc
adc
int
rolb
mov
pop
jno
mov
dec
jnp
mov
and
push
mov
fnstsw
dec
xchg
lret
addr16
push
fmull
stos
cmp
std
push
and
out
dec
stos
loop
cmpl
and
xchg
std
lea
mov
jp
sahf
lea
cltd
stc
nop
lret
iret
int3
fmul
jmp
adc
mov
jno
inc
insl
data16
ds
mov
arpl
dec
sbb
ret
add
sub
cmp
stc
aam
xor
cmp
enter
dec
pop
pop
xor
or
jecxz
jbe
mov
shlb
daa
repz
jb
mov
mov
ret
adc
cmp
pop
pushf
movsb
or
mov
pop
mov
shlb
leave
sbb
insb
dec
xchg
enter
repz
inc
fisubl
mov
out
mov
lds
outsb
std
js
in
xorl
js
push
or
jge
ds
inc
dec
jecxz
out
cmpsb
adc
int
jle
cmp
mov
cmp
insl
outsb
mov
pop
repz
xchg
mov
sub
push
push
insb
mov
fldenv
ja
in
inc
cmp
aaa
iret
fstpt
adc
inc
and
lcall
shll
fisubrl
or
hlt
jb
lds
push
jecxz
nop
rcrl
xor
movsl
push
loopne
cmc
jp
mov
sbb
sahf
lahf
sub
pop
in
inc
arpl
sub
das
ss
mov
fs
inc
sarb
aam
or
lea
jle
cltd
xchg
stos
pop
test
shl
movsb
pop
xor
in
and
jns
dec
cwtl
das
shll
mov
jp
mov
sbb
sub
dec
cmp
mov
mov
adc
sbb
or
mov
js
mov
dec
sbb
xchg
in
sbb
shrb
ljmp
push
jns
xor
popf
push
inc
cmp
jle
movsl
icebp
pop
out
cmp
xor
pop
ljmp
ljmp
movsl
std
or
lret
pop
imul
loop
xor
mov
cltd
out
push
and
jne
dec
xchg
scas
dec
sbb
andl
or
cli
sbb
rolb
push
leave
arpl
xchg
ljmp
lret
lds
jne
pop
test
jne
movsb
les
xchg
iret
das
mov
sbb
fistl
out
and
adc
outsb
inc
pop
sbb
stos
inc
and
and
jnp
out
cli
dec
fidivl
insl
push
popf
jnp
dec
out
sbb
inc
imul
and
inc
out
or
lcall
push
out
hlt
cmpsb
cmc
cmc
cld
scas
lods
inc
stc
rcr
in
pop
aad
in
push
sti
add
or
mov
pop
and
adc
cmovle
xor
mov
lret
ret
inc
mov
or
push
add
mov
icebp
aad
pop
inc
add
emms
cltd
or
push
dec
cli
mov
in
mov
das
andb
nop
push
mov
xlat
sub
jb
shlb
popaw
jl
pop
jns
je
push
scas
jle
iret
inc
fiadds
sub
cltd
or
fcomps
in
inc
popf
adc
add
scas
add
roll
push
call
fdivl
inc
cmp
enter
pop
xchg
cs
jne
xlat
outsb
mov
je
fwait
pop
loop
lea
sbb
int
xor
mov
subl
popa
or
mov
fbld
in
test
mov
mov
jnp
stos
push
mov
test
scas
inc
adc
pop
inc
addr16
xchg
popa
pop
jae
mov
or
std
dec
cmp
dec
fistps
dec
xor
js
lret
lcall
lods
mov
movsl
lods
nop
test
sarl
mov
sbb
addr16
xchg
dec
xor
xchg
add
cmp
ss
dec
jb
push
adc
adc
xor
jmp
pop
sbb
cmp
movsb
dec
orl
mov
lret
je
jno
cmpsb
push
jle
into
mov
push
and
add
ret
shl
xchg
mov
cmp
dec
repnz
lock
out
cmp
dec
pop
add
xchg
ljmp
jne
mov
test
scas
int
out
inc
into
inc
arpl
gs
and
clc
xchg
adcb
sbb
test
popa
andb
dec
into
cltd
mov
das
jp
mov
ds
and
jns
je
xlat
sub
dec
push
sbb
dec
decl
push
pop
sub
add
shll
mov
movb
or
cld
push
inc
or
fidivl
je
mov
xor
test
out
cltd
arpl
cmpsb
xchg
and
es
testl
xor
out
pop
xchg
lahf
dec
insl
les
jmp
cmp
jmp
sub
iret
or
imul
xchg
or
dec
ljmp
cmpsb
fsubr
jns
out
cmc
sarl
add
adc
js
int
push
sbb
inc
in
rorl
mov
inc
push
jg
pop
jmp
push
cmc
mov
jl
push
and
fdivs
stc
and
jg
in
frndint
mov
scas
dec
movsl
xlat
clc
adc
push
lret
pop
adc
xchg
jge
mov
jae
push
dec
sbb
mov
shll
sbb
imul
aad
jnp
test
pusha
nop
lahf
inc
pop
dec
add
jo
push
mov
xchg
pop
sub
or
push
stos
daa
xor
mov
shrl
lods
inc
in
inc
cmp
ss
cmp
mov
out
adc
fimull
les
imull
inc
daa
cmp
xchg
scas
mov
stos
pop
inc
in
xlat
sbb
clc
out
loope
pushf
push
jns
ds
adc
cltd
int
cmc
adc
mov
lods
outsl
mov
pop
repz
lds
push
sbb
sub
testb
mov
movsl
cmp
es
cmpsl
push
cmp
and
jne
or
add
gs
add
jmp
and
loop
xchg
ljmp
cmpsb
in
xchg
sahf
inc
and
je
xlat
inc
mov
mov
pop
loope
adc
sub
inc
push
sub
dec
fisubs
xchg
leave
pusha
sbb
ds
aas
cs
pop
ret
ss
push
mov
xchg
fildll
ja
orb
mov
lock
and
push
cli
stc
aas
sub
into
ret
pop
or
loope
aad
adcb
xchg
add
xchg
jmp
rcrb
sub
add
mov
or
mov
addr16
addl
adc
and
mov
mov
je
adc
daa
fxch
mov
xchg
inc
movsl
lods
adc
pusha
jge
loopne
or
xchg
mov
lods
pop
mov
push
imul
jl
fs
std
addr16
jmp
jge
and
xlat
int
dec
out
shl
inc
xchg
inc
cld
add
cmpsb
fnstsw
dec
push
adc
sahf
jge
pop
push
jp
and
ljmp
inc
fucomp
out
mov
leave
pop
sub
adc
or
pop
repz
xor
push
and
lcall
dec
cmpsl
addl
jmp
pop
cld
outsl
and
mov
data16
adc
xor
out
dec
mov
xchg
inc
testb
dec
and
add
shr
mov
mov
aas
jecxz
mov
jb
aaa
pop
divb
dec
push
fbld
sub
imul
imul
stos
cmp
and
jecxz
out
mov
enter
test
dec
out
fwait
fs
add
hlt
idivl
mov
rorb
test
out
cmp
dec
das
mov
add
test
push
adc
mov
sub
mov
sub
xor
mov
push
out
mov
mov
xor
mov
test
jp
ja
cwtl
dec
loopne
xchg
icebp
jns
sub
sarb
sbb
icebp
mov
cmc
sub
test
sbb
pop
dec
mov
fidivs
pop
lock
lock
mov
lds
popa
pop
stos
sbb
sbb
mov
xchg
fcoml
pop
pop
lock
xor
mov
xchg
js
pushf
sub
pusha
mov
cs
and
sub
adcb
push
sbb
loopne
push
fdivrs
mov
mov
dec
add
jnp
mov
push
shrb
mov
mov
pop
mov
xchg
adc
iret
inc
lods
loope
std
lods
lret
pusha
je
fists
movsb
insb
orb
fiaddl
negb
xchg
arpl
mov
adc
inc
fstpt
dec
dec
sti
push
xlat
rolb
lods
pop
mov
xchg
lcall
shrl
cli
into
int3
mov
and
push
fstpl
jg
ja
stos
jmp
and
sbb
cld
sub
push
gs
js
stc
loopne
mov
dec
or
mulw
xor
dec
lret
dec
adc
sti
test
inc
sbb
adcb
add
push
mov
sbb
out
dec
and
inc
xchg
jae
and
push
sbb
popa
add
repnz
adc
xchg
xchg
movsl
lock
jno
imul
imul
rcll
sbb
add
in
das
jmp
outsl
xlat
push
call
flds
lea
sbb
mov
mov
out
arpl
and
arpl
or
mov
lods
dec
xchg
mov
add
push
mov
sub
dec
xor
push
jns
ja
jge
xchg
stos
sbbl
stc
jno
xor
adc
jle
mov
lods
mov
dec
sbb
sub
sbb
sbb
idiv
aad
and
loope
adc
xor
lock
and
inc
mov
jg
adcb
mov
pop
je
stos
sarl
outsb
adc
mov
jne
jg
call
lahf
or
test
add
test
aaa
cmpsb
adc
adc
pop
jns
outsl
jnp
in
push
lods
dec
jecxz
adc
ss
lods
pop
neg
faddl
test
lret
cmpsl
xor
shll
dec
cli
cmc
or
hlt
out
mov
mov
mov
push
scas
adc
inc
cmp
cmp
mov
pop
push
mov
cmp
arpl
adc
xchg
lcall
bound
xchg
cmp
sbb
push
xchg
mov
fmulp
sub
jmp
les
add
and
inc
xor
jp
xor
inc
gs
jo
lret
xchg
lea
add
jge
and
and
push
inc
xchg
fs
cmpsl
pushf
inc
dec
dec
enter
lock
push
std
push
add
add
inc
in
and
fscale
sbb
lret
cmp
rolb
rcr
sub
loopne
scas
sbbl
sahf
sub
lods
pushf
sub
push
pop
cmpsl
mov
ja
jp
movsb
and
dec
repz
repz
xor
mov
mov
test
fcomps
fs
xchg
outsl
dec
fiaddl
in
pop
pushf
sub
shr
xchg
inc
pusha
movl
pop
shlb
das
loop
popa
sbb
out
mov
inc
fs
fwait
and
pop
hlt
sub
and
leave
dec
outsb
add
push
xchg
inc
pop
lcall
xor
lcall
mov
insb
test
sahf
decb
xchg
fstpl
in
push
mov
sbbb
inc
and
dec
push
imul
xchg
mov
mulb
dec
in
add
cltd
lods
mov
and
or
add
xchg
sub
dec
pop
push
dec
or
pop
leave
xchg
sub
pop
sub
dec
sbb
mov
and
push
inc
arpl
jbe
cltd
xchg
test
cmp
cmp
cli
lcall
sbb
out
pop
out
xlat
iret
inc
mov
cmp
pop
push
inc
adc
jno
jno
fidivl
in
sbbl
addr16
xchg
mov
mov
jg
pop
shl
cmpl
dec
jno
xor
fildll
mov
pop
les
les
iret
dec
les
aas
mov
mov
lahf
ss
push
dec
loop
in
push
sbb
xchg
sub
fstpt
ds
cmp
int3
pop
lds
add
cmp
lea
cmpsl
cld
sbb
mov
pushf
out
cltd
xchg
arpl
pushf
imul
ljmp
pop
xchg
ret
mov
sbb
subb
mov
shr
add
mov
xchg
out
inc
out
and
fldenv
mov
shl
lret
scas
pop
xchg
pushf
add
dec
fbstp
or
popa
jecxz
pop
packsswb
shr
icebp
cmp
push
jno
std
test
das
ret
push
subl
sbb
jns
pop
icebp
rclb
add
jg
ret
adc
inc
cmp
outsb
jp
lret
dec
stos
insl
add
push
jecxz
js
mov
sbb
push
push
mov
jg
test
fstl
push
ret
loop
addr16
push
movsl
jge
xlat
sub
iret
test
int
add
arpl
xor
inc
arpl
push
cli
stos
cmp
nop
lret
subl
aaa
stos
lock
push
mov
mov
scas
pop
leave
jbe
dec
sbb
loope
jecxz
xor
lret
mov
into
cmpb
test
stos
or
push
jecxz
xor
lods
push
mov
xchg
ret
mov
pop
and
rcrb
rcrb
mov
in
sahf
and
push
mov
jo
and
test
push
xchg
mov
in
cmp
sub
scas
jmp
stos
and
xchg
push
int3
pop
inc
jns
cmp
test
rclb
adc
push
ss
sub
adc
nop
std
or
mov
in
notl
out
xchg
mov
idivl
mov
pop
dec
jae
inc
movsl
outsb
shrb
pop
into
jno
aaa
push
jb
flds
stc
ja
lahf
stos
aad
clc
pop
mov
lds
jno
ds
xchg
dec
les
sahf
mov
pop
data16
add
xor
out
add
out
test
cmovp
int3
fidivs
and
ss
or
xchg
and
inc
daa
jmp
insl
jg
ret
in
rorb
adc
dec
add
aam
in
mov
mov
and
movsb
inc
pusha
adc
insl
cmp
sub
sbb
decl
cmpsl
jp
sbb
out
mov
xchg
out
mov
sub
xchg
andb
outsb
insb
add
inc
mov
sub
and
mov
push
mov
dec
pop
xor
sub
int3
arpl
jecxz
add
mov
cmc
fadds
xchg
enterw
js
loope
cld
xor
push
jmp
push
cmpsl
mov
jecxz,pt
cwtl
stos
xor
aad
pop
jbe
nop
div
xchg
inc
xor
fiadds
pop
xchg
mov
jns
mov
add
mov
mov
pusha
sti
shlb
dec
push
jno
jle
dec
lret
test
outsb
gs
addr16
push
in
pop
scas
push
sub
cmp
ss
jnp
or
push
mov
ja
adc
popf
fistl
and
dec
mov
push
sub
push
dec
scas
mov
out
mov
arpl
mov
and
push
mov
xchg
add
movsb
in
std
aad
cmp
leave
das
stos
jno
in
dec
enter
loope
dec
add
testb
or
xchg
mov
shll
jno
xchg
pop
aam
adc
jmp
sub
jmp
mov
adc
shr
jmp
and
jmp
bound
out
insl
daa
jae
sbb
iret
or
lds
lret
aam
call
dec
pushf
ss
jp
push
jne
fwait
sarb
pop
mov
jo
xor
fs
iret
jne
lret
add
stos
inc
clc
and
js
or
dec
xchg
mov
xchg
xlat
cmp
dec
repnz
xchg
lret
push
gs
xchg
jne
repnz
jmp
mov
lcall
mov
sarb
ret
fdivrp
push
xchg
pushf
push
sub
and
aam
dec
mov
xchg
and
imul
sbb
imul
mov
cs
gs
xchg
mov
mov
sbbb
int3
xchg
adc
mov
ljmp
ds
ret
out
pusha
mov
or
xchg
cmc
shlb
sub
xlat
jl
ss
je
jmp
jo
jmp
push
pop
gs
jns
out
xchg
rclb
pop
out
jns
add
fsubr
gs
jg
jmp
inc
dec
push
mov
test
inc
push
iret
data16
lahf
fbld
in
push
sbb
imul
out
dec
fistl
jb
add
push
or
out
push
cltd
cwtl
loope
xchg
rorl
and
arpl
dec
sbb
xor
cmp
cld
mov
adc
jno
dec
shl
fistps
mov
dec
or
fsts
mov
out
notb
sub
mov
mov
sti
xchg
mov
adc
xor
insb
clc
jle
jne
enter
xchg
testl
mov
rcrb
xor
mov
lods
mov
fbld
mov
rorb
lea
les
or
sub
adc
pop
mov
shrb
subl
cs
ja
flds
comiss
andl
cmp
cmp
sub
test
push
dec
pop
icebp
jp
dec
mov
ret
leave
ror
icebp
and
psubsw
push
xor
push
or
inc
pop
cmp
cmc
push
pop
imul
shrb
mov
imull
sbb
ffree
pusha
inc
out
lods
push
loope
pop
in
dec
push
sub
fwait
sbb
bound
xor
add
mov
inc
xchg
es
mov
inc
or
pop
incb
push
mov
inc
test
add
jne
inc
and
pop
adc
imul
pop
outsb
popa
ljmp
xchg
xor
aaa
fnstsw
iret
mov
gs
aad
adc
sub
pop
pop
xchg
pop
cmpsl
cmc
add
clc
popf
lahf
sahf
pop
sbb
insb
dec
imul
pop
out
and
jbe
movsb
jmp
aaa
shll
jnp
or
pop
cmp
sbb
sub
jp
push
adc
mov
mov
es
cld
xchg
aad
mov
jge
inc
scas
idivl
push
cmp
pop
xor
mov
in
rcrb
jl
repz
dec
jle
xor
and
cmp
aaa
mov
add
inc
dec
scas
in
and
aas
decb
sti
jp
lods
dec
dec
repz
aaa
out
add
pop
jnp
xchg
lret
movsb
sub
lds
fs
dec
jmp
or
shll
xchg
sahf
call
adc
and
inc
loope
jnp
jmp
aad
fs
aaa
adc
outsb
nop
inc
repz
ds
xchg
xor
cltd
xchg
xor
push
push
je
xor
cwtl
mov
rorb
insb
cmpsb
cmp
cwtl
cmp
scas
outsl
scas
adc
push
nop
jbe
ret
lods
xchg
repz
xchg
push
lcall
aas
mov
test
and
mov
pop
in
xor
push
in
ret
insb
hlt
adc
xchg
sbb
jge
adc
sbb
inc
xchg
mov
fisubrs
xor
outsl
cmp
push
mov
adc
fildll
insb
addr16
ja
xor
jbe
inc
pop
lret
cld
cmp
pop
nop
aas
das
pop
dec
push
mov
and
test
inc
and
filds
push
in
xlat
jb
enter
ljmp
jmp
lret
iret
loopne
add
sti
pop
fiaddl
loopne
add
cmpsl
test
ja
imul
dec
test
flds
ss
imul
xchg
pop
hlt
fsts
in
or
je,pn
dec
dec
imul
add
rorb
pop
adc
in
outsl
test
add
cmpsl
sbb
inc
inc
cmp
sbb
ret
inc
and
jns
scas
je
inc
mov
xchg
adc
dec
inc
and
out
in
adc
sbbb
adc
ja
out
nop
ljmp
cmpsl
mov
ds
mov
push
mov
add
adc
fisttps
shlb
pop
adc
arpl
push
pusha
mov
pushf
imul
add
jne
aad
pop
cmp
idiv
fcoml
mov
sbb
orl
xchg
out
or
mov
hlt
cs
or
arpl
or
lock
adc
jnp
inc
stos
mov
sub
into
sahf
sbb
mov
xchg
sub
lods
aas
and
mov
ficoml
adc
cmp
xor
sbb
jp
lock
xor
les
dec
jo
mov
insl
mov
adc
icebp
xchg
push
outsb
and
fiaddl
cmpsb
mov
sbb
scas
pop
dec
sbb
icebp
and
adc
fwait
jae
lahf
mov
xlat
jo
mov
xor
adc
fcompl
sbb
xor
or
push
mov
mov
aas
into
fcompl
mov
js
push
leave
cld
ds
ljmp
clc
hlt
fcomi
stos
adc
jns
jmp
add
shrl
add
cs
pop
adc
xchg
sub
and
jb
nop
pop
repnz
pop
mov
fninit
sub
mov
icebp
aas
std
xchg
sub
test
mov
out
lret
inc
repz
mov
push
or
ss
mov
daa
push
mov
xor
jle
insl
imul
xchg
cmp
sbb
push
jns
xchg
lahf
jle
cmpsl
cmp
int3
popa
cmp
dec
push
jmp
xchg
push
cmp
pop
fiadds
dec
mov
push
jb
int
dec
dec
adc
mov
imul
cli
js
sub
mov
iret
pop
sub
insl
push
cwtl
adc
mov
xchg
outsb
inc
adc
mov
into
add
into
dec
movsb
mov
jle
inc
fcomps
mov
insl
jmp
mov
mov
dec
mov
enter
aad
mov
inc
fnsave
lods
and
popa
dec
mov
add
sub
je
sbb
decl
cs
sbb
jecxz
sbb
mov
test
mov
jmp
mov
faddp
iret
setp
mov
inc
pop
inc
fwait
pop
insb
fcomip
jbe
lahf
ss
jecxz
add
cmp
and
in
cld
hlt
lock
stos
lods
adc
aad
flds
out
mov
mov
cmp
xor
sbb
push
popf
adc
cli
xlat
mov
pop
loope
mov
aaa
xor
push
ja
inc
add
iret
shll
jmp
push
outsl
inc
dec
or
jg
xchg
add
push
xchg
pushf
fnsave
sub
xchg
mov
test
repz
sub
idivl
sub
sbbb
jns
popa
dec
popa
cmpsl
mulb
jg
jg
jmp
xchg
adc
adc
pop
lcallw
stos
and
xchg
xor
decl
test
cmp
aad
cmovg
testb
lods
and
movl
adc
sbb
push
aad
lret
imul
push
out
dec
dec
fdivrp
push
shlb
mov
dec
push
loope
iret
imul
adc
clc
pop
jmp
arpl
jo
dec
fnstsw
pop
mov
pusha
add
inc
pop
and
inc
add
aad
mov
or
mov
je
dec
pop
daa
and
addr16
pop
pop
bound
out
dec
and
scas
cs
pop
xchg
fldpi
les
mov
insl
in
or
push
cmp
sbb
add
in
fwait
dec
dec
pop
loop
out
xchg
inc
imul
call
leave
or
jns
mov
mov
mov
sti
fidivs
mov
mov
mov
xlat
fimull
int
xor
lods
xchg
mov
pop
repz
test
std
lcall
jae
nop
inc
lret
dec
repnz
push
jp
aas
fcom
daa
rcrl
jp
mov
hlt
mov
add
lret
push
aam
push
call
aad
in
mov
xchg
sub
out
sti
les
inc
fcompl
xchg
test
nop
sarb
movsl
std
mov
sbb
adc
push
mov
icebp
mov
cmpsl
dec
add
dec
divb
fdivrs
ret
adc
scas
xchg
sub
popf
sub
mov
mov
jge
clc
mov
or
jp
sbb
add
iret
xchg
sub
js
fistpll
cwtl
mov
jg
xor
cld
adc
fwait
test
xor
orl
sub
xor
jge
xchg
sub
lea
divl
jnp
push
sub
fldt
subb
xlat
insl
ds
mov
jo
push
fcoml
mov
mov
jb
xchg
mov
in
outsl
and
mov
das
pop
jo
jle
jmp
push
mov
lock
mov
inc
mov
add
and
in
ret
ss
pop
aas
or
pop
push
test
stos
insl
into
gs
lret
dec
sbb
sti
sbb
repnz
test
loopne
mov
ret
inc
out
das
movsl
pop
and
push
push
jmp
cmp
je
xchg
jge
dec
xlat
sti
mov
pop
cltd
adc
sub
xor
cmp
vdivss
aam
and
xor
dec
push
aad
out
into
add
repz
jbe
or
imul
push
decb
pop
bnd
das
ss
cmp
insl
sbb
xchg
js
aad
fldenv
leave
jbe
jg
cs
fdivr
cltd
push
sub
sbb
in
mov
imul
bswap
jb
push
movsl
sbb
mov
and
fistl
xor
mov
scas
jno
mov
fs
int
fidivs
and
jle
jp
dec
lahf
popa
xor
inc
cmp
xchg
insl
arpl
movsl
aam
xchg
dec
mov
mov
std
imul
scas
jbe
std
sub
insl
jns
jb
sti
xchg
ss
scas
pop
in
addr16
cmc
lea
or
loopne
mov
jmp
xlat
icebp
or
lcall
pop
leave
dec
arpl
cmp
inc
lret
jle
daa
mov
sbbl
out
add
jp
or
stos
lea
negb
cmp
mov
push
jnp
test
notb
and
mov
addb
jns
push
xlat
dec
cltd
cmp
popa
gs
loope
cwtl
push
sbb
icebp
icebp
test
inc
adc
inc
mov
lods
pop
inc
lahf
les
stos
cmp
mov
xchg
sub
pop
push
lret
jl
mov
xchg
mov
dec
ffreep
jns
inc
imull
das
push
sbb
jns
mov
stc
nop
adc
xchg
je
xchg
pop
repz
add
lret
jae
adc
mov
push
inc
sbb
mov
insl
add
xor
pop
in
in
mov
mov
jno
add
mov
outsl
ja
lods
aad
mov
pop
adc
jo
mov
clc
sahf
cmp
mov
notb
cmp
mov
push
pop
icebp
cwtl
pop
scas
leave
or
dec
mov
push
lods
test
pop
cmp
dec
and
inc
in
xor
push
in
mov
out
push
aam
rcr
fwait
or
jo
aad
mov
mov
xor
cmp
in
pop
pushf
adc
es
ja
das
jne
repz
sub
mov
imul
aas
cmp
nop
mov
push
stc
or
jbe
rclb
js
sbb
popl
cmp
adc
sbb
inc
inc
imul
test
add
xor
mov
lds
mov
fstl
xor
mov
das
push
enter
jns
dec
cmpsl
sub
mov
fistpll
leave
lods
add
mov
cmp
push
add
cltd
inc
xchg
icebp
mov
shll
push
push
ret
mov
sub
or
ds
and
adc
and
jbe
rcr
cwtl
ljmp
xchg
cwtl
xchg
add
mov
pop
and
mov
icebp
mov
frstor
out
pop
adc
xchg
pop
jle
mov
cli
sbb
ficoms
cmp
and
xor
xor
lcall
jle,pt
aaa
cli
push
push
jmp
sbb
inc
aas
decb
cmc
jns
bt
fwait
test
div
mov
out
std
jo
pop
mov
aad
mov
stc
mov
xchg
mov
aam
jp
pop
movsl
add
lret
mov
aam
and
jnp
push
jge
mull
rol
into
xor
adc
sarb
pushf
add
loopne
lock
sbb
js
add
xchg
repz
xchg
xor
lds
cmp
push
xor
adc
ficoml
jne
aaa
adcl
adcb
stos
inc
push
xor
cmc
mov
adc
xchg
fucomp
adcb
lods
xor
push
das
adc
fsubrl
rclb
popa
mov
fucomi
dec
lahf
fldt
push
mov
push
jmp
sbb
stos
inc
push
cmp
ffree
jl
test
sbb
adcb
in
jnp
imul
fs
sarb
sub
push
push
xchg
daa
into
stos
cmc
push
cs
push
push
das
jae
aas
cmp
mov
in
inc
xchg
add
imul
sub
popf
xor
mov
pop
or
xchg
mov
xor
lcall
xorb
andb
incb
mov
cmp
scas
jb
test
mov
repnz
push
sbbl
mov
jle
movl
sti
in
sti
sub
push
add
clc
mov
and
movsb
out
add
in
dec
into
addl
jne
out
push
std
jg
push
pop
inc
mov
gs
cwtl
mov
mov
loope
inc
sub
mov
dec
xchg
add
pop
out
sti
pop
mov
pop
sub
sbb
jns
mov
outsb
sarl
insb
mov
push
movsl
adc
sbb
mov
stos
arpl
pushf
cmp
mov
jmp
or
imul
cltd
movsb
hlt
add
lret
sbb
test
and
lods
inc
cmp
mov
mov
adc
pusha
sbb
loopne
jmp
sti
sbb
xchg
repnz
cwtl
inc
sub
dec
mov
rclb
shrb
call
or
rclb
scas
dec
xor
and
sub
or
jns
imul
outsb
aad
nop
push
imul
cmpsl
mov
lahf
add
out
adc
ss
das
push
push
ret
sub
shll
push
movsl
hlt
jb
push
int3
je
inc
xor
aad
pop
cld
or
sub
aas
sub
mov
ror
sbb
dec
pop
cmc
inc
mov
sub
sti
xchg
and
mov
imul
lds
stc
shl
push
dec
stc
pop
shlb
pop
out
fsubs
add
pop
pop
mulb
fmuls
mov
addr16
aaa
jns
pusha
pop
mov
sbb
je
lea
dec
inc
mov
cmp
fsubrl
pusha
cli
test
test
inc
loopne
movhlps
stos
into
or
sub
int3
adc
dec
inc
and
xchg
mov
shlb
inc
sahf
and
mov
and
jns
dec
loope
cli
pushf
adc
ss
push
push
addb
jmp
test
lahf
xchg
mov
test
shlb
xchg
mov
push
in
jbe
inc
loopne
insb
out
sbb
pop
fs
mov
adc
notl
out
xchg
clc
jle
jo
sub
push
pushf
mov
inc
out
xor
loope
scas
adc
test
mov
mov
daa
and
repz
inc
sbb
mov
ja
push
leave
fnstcw
push
test
sbb
adc
cmp
pop
lahf
dec
rcl
call
mov
lret
jno
xor
fimuls
xchg
fstl
bound
mov
xchg
cmc
pusha
lods
les
pop
mov
lahf
clc
notb
push
adc
cli
pop
jb
dec
mov
mov
pop
jae
jnp
push
pop
pop
adc
rcrl
pop
mov
scas
ljmp
inc
fcom
mov
add
ljmp
pop
and
pop
insb
rcll
cmp
mov
icebp
jge
and
pop
imul
out
xor
push
sti
lods
mov
add
std
sub
out
les
loope
adc
pop
or
jbe
subl
insb
push
inc
mov
push
xor
mov
adc
lret
pop
test
dec
cmp
and
les
int3
mov
jo
out
jnp
into
cmp
sti
push
xchg
popf
and
or
add
or
xor
push
rorb
adc
popa
xor
lcall
out
or
outsb
mov
pusha
scas
xor
mov
lret
mov
xor
fcoml
mov
mov
push
les
cmpsl
sbb
push
inc
in
stos
outsb
cltd
popf
mov
push
jge
out
sti
fidivrl
inc
cwtl
pop
das
cmp
or
sbb
cmp
and
xchg
in
nop
dec
jge
incb
mov
jnp
fidivrl
mov
jb
push
mov
aaa
iret
popf
mov
out
mov
loope
push
adc
sub
repz
aas
stc
or
sub
rcrl
jge
and
inc
jl
call
mov
push
adc
aas
popf
or
cmpl
inc
xchg
or
jno
lret
bound
enter
jo
and
ret
lods
inc
cmc
insl
xor
sahf
push
in
dec
mov
mov
fwait
adc
inc
mov
jp
lcall
or
inc
arpl
jae
jp
sub
mov
pusha
divb
sub
arpl
repz
and
mov
push
jne
adc
arpl
and
jnp
mov
jge
or
in
arpl
inc
insb
jp
pop
push
pop
jb
int3
outsl
out
dec
adcb
repnz
sub
and
xchg
sub
mov
cmpsl
bound
jo
les
int
pop
enter
sar
stos
test
xor
add
jnp
dec
in
inc
repz
out
dec
cltd
xchg
xor
sub
inc
fcomi
pop
in
push
inc
lahf
bound
mov
or
pusha
xor
fsts
test
xor
movsl
sbb
pop
hlt
jmp
scas
mov
xor
mov
adc
pop
mov
insl
jmp
jmp
hlt
int3
repz
sbb
or
aas
call
xor
xor
aam
fcomps
mov
sub
sbb
dec
das
pop
ja
push
lds
push
insl
xor
test
cmp
add
rep
and
scas
inc
sbb
pop
dec
test
add
pop
adc
xor
dec
mov
rclb
push
lret
push
cs
ucomiss
xchg
xchg
pop
jp
or
lret
add
mov
loopne
xchg
cwtl
ja
rclb
and
fidivs
pop
repz
sbb
scas
jp
out
mov
mov
add
mov
mov
fbld
dec
inc
xlat
stos
inc
call
pop
sti
push
outsl
pusha
sahf
or
adc
mov
mov
mov
call
jns
outsb
mov
lcall
xor
in
ljmp
leave
inc
lods
test
inc
fwait
pop
inc
lret
mov
jmp
andb
ror
push
xrelease
push
int3
mov
cmp
pusha
inc
out
ffree
insl
cmpsl
lret
fimuls
nop
cltd
cwtl
inc
or
icebp
rorl
xor
shrb
shll
outsl
xchg
sub
fdivl
js
lahf
nop
pop
movsl
xor
lahf
adc
icebp
mov
push
lret
mov
imul
xchg
repz
push
ss
shlb
mov
push
sub
nop
mov
lea
out
inc
sahf
dec
xor
es
mov
inc
and
xchg
add
lret
loop
mov
push
subb
ds
stos
notb
and
idivl
insl
or
adc
pop
inc
add
inc
movsl
pop
call
or
mov
in
out
test
sti
xchg
ljmp
jne
mov
daa
cmp
int3
mov
jbe
dec
fdivl
lock
adc
add
jge
movsb
scas
jp
sbb
shlb
clc
aam
sub
push
cmp
adc
fldenv
pop
jns
cltd
mov
fdivl
pop
ret
in
cmp
adc
lahf
push
dec
scas
cs
mov
lods
push
aam
and
or
jle
mov
fs
add
stos
stos
adc
bswap
mov
mov
push
push
shrd
aad
adcb
lret
sub
rolb
cmc
lret
inc
outsb
fsubr
pop
xor
ja
cmp
mov
pushl
ret
add
in
test
insl
lcall
out
add
adc
pop
cmp
xorl
push
fyl2x
les
sub
xchg
xor
push
lods
add
sub
cld
test
jp
xchg
lods
mov
pop
cmp
and
push
sub
fcoms
xor
cmpsl
mov
jbe
sub
stos
and
cmp
mov
mov
pop
push
pop
inc
mov
pop
xchg
insl
mov
and
int
aaa
jmp
or
inc
lods
arpl
loop
inc
pop
push
scas
sub
cmp
lcall
sbb
sbb
out
sub
stc
ret
pushf
xor
fucomip
mov
lock
test
and
cmp
sbb
sub
movsl
sti
pusha
dec
fldt
das
jnp
ss
pushf
jecxz
pop
nop
sub
and
cmpsb
xor
pop
xor
or
jle
test
int
or
jbe
pop
dec
sti
aam
jge
in
cwtl
pop
je
pop
repz
fcomip
cmp
sbb
jmp
dec
pop
popf
jg
aad
xor
xchg
shlb
scas
xchg
aas
shlb
leave
fsubs
addr16
xor
inc
fcoms
inc
pop
jns
outsb
add
movsb
or
jmp
pop
push
ljmp
jo
fstpl
mov
jnp
jmp
pop
ljmp
rcr
xchg
mov
mov
xchg
mov
dec
inc
popa
lods
jg
stos
dec
sub
sbb
inc
inc
jge
push
adc
inc
sbb
dec
xchg
movsb
int3
cmpsb
fstpl
pop
xor
inc
add
gs
pop
push
push
jae
out
ja
xor
fdivs
shlb
dec
pusha
in
jl
xchg
mov
mov
inc
mov
rclb
hlt
and
jns
add
imul
lock
sbb
mov
inc
testl
mov
sbb
push
aas
cmpb
pop
test
jae
fwait
leave
loop
sti
mov
sbb
cmp
mov
add
pop
sub
cli
xlat
adcb
mov
jp
popa
and
add
cmc
jbe
push
subl
dec
cltd
repz
in
shr
jae
gs
xchg
mov
inc
aad
mov
xchg
sub
ja
scas
pop
stos
or
pop
xor
or
mov
sub
and
push
in
ja
in
fs
jae
dec
push
mov
inc
jge
mov
lea
pop
mov
in
adc
pop
xor
mov
pusha
stos
add
mov
pop
in
fdivs
dec
in
add
hlt
lcall
int3
pushf
loope
push
out
sub
pop
lods
inc
mov
adc
stos
call
xor
daa
jne
sbb
add
repz
movsb
mov
add
pop
xchg
out
addr16
nop
mov
fucomp
mov
adc
testb
js
shrb
rcl
xor
mov
imul
mov
add
test
mov
les
mov
rcrb
jp
sub
dec
and
rcr
mov
sub
lret
mov
out
popa
or
add
or
cmp
sub
inc
sbb
pop
lock
add
jb
mov
cltd
cmpsl
xchg
int
push
fs
push
ljmp
popf
out
xchg
push
jae
jmp
test
lret
and
push
xor
mov
stos
insl
scas
inc
dec
jle
add
or
cltd
sar
fidivs
cmpsl
fsub
ja
inc
cmp
fldt
into
cmc
rcrl
inc
jnp
in
test
outsl
mov
jno
inc
fs
and
testb
sub
push
aam
test
dec
pop
mov
jmp
pushf
xchg
out
jecxz
jmp
mov
lret
lret
jp
vpaddd
and
or
imul
adc
xchg
sub
mov
repz
and
add
mov
je
jp
push
lods
push
sti
push
movnti
mov
push
jns
push
xchg
loope
dec
rorl
cmc
in
mov
popf
pop
push
jo
lods
inc
lahf
jmp
lret
pop
and
lds
jg
add
pop
popf
subl
sbb
call
cwtl
pop
jp
test
xchg
fwait
in
int3
fwait
sub
ljmp
or
leave
pusha
mov
or
xchg
cmp
ret
lods
push
inc
push
sub
stc
mov
insl
pop
in
imul
xchg
and
pop
xor
xor
shll
dec
fs
xor
fbstp
mov
sub
add
mov
mov
and
stos
es
stos
dec
stos
adc
or
ja
xchg
test
sbb
dec
mov
xor
adc
mov
pop
jns
outsb
jecxz
mov
popa
xor
shl
cmp
scas
cmpsl
cmp
adc
outsb
aad
cmp
xchg
sbb
mov
lret
mov
and
pop
sub
mov
jge
insl
scas
popa
inc
xchg
push
dec
jnp
xlat
loope
mov
in
mov
cmc
gs
sbb
flds
mov
push
inc
shl
jp
add
bound
xchg
fs
dec
and
inc
push
mov
sbb
mov
ja
in
jnp
inc
cli
push
cld
mov
outsb
mov
loopne
aaa
or
lahf
bound
gs
or
and
in
xchg
insl
mov
repnz
or
lret
add
fisubs
hlt
icebp
sahf
cmp
lret
imul
daa
fs
out
jae
int3
lcall
pop
icebp
imul
mov
adc
int
fwait
insb
adc
cmp
leave
rolw
fadd
shll
cmpsb
pop
mov
mov
pop
and
out
jns
out
insl
xchg
xlat
stos
pop
in
orl
or
adc
in
or
cmpsl
insb
imul
stos
inc
daa
dec
icebp
inc
fcmovne
cmpsb
add
cmp
and
fcmovu
push
das
in
xchg
lea
xchg
lods
stc
movsl
pop
mov
movsb
and
push
ret
test
xor
in
push
mov
std
pop
repz
sbbb
enter
aad
xor
or
icebp
sbb
adc
mov
push
pop
mov
les
jmp
jecxz
mov
out
xor
push
or
push
out
sti
mulb
mov
ss
xchg
mov
cwtl
push
sub
repz
xor
inc
js
jecxz
cmp
adc
imul
stc
addl
es
enter
fnstcw
mov
test
xchg
sbb
push
mov
mov
imul
add
nop
xor
mov
imul
sub
push
dec
int
out
out
lds
mov
sarb
cmp
loop
test
repnz
and
add
inc
fidivl
lods
sub
leave
sbb
das
cmp
mov
xor
dec
push
mov
jno
hlt
gs
fidivrl
xor
in
push
fidivrl
mov
add
or
inc
jo
ss
ja
fsubr
lea
sub
jbe
scas
mov
rcr
cmp
push
pop
stos
push
adc
lea
lock
js
jle
jae
js
lock
xor
dec
mov
xor
jns
in
xchg
dec
test
mov
jge
in
mov
gs
or
xor
pusha
pop
mov
mov
data16
setl
movsl
mov
adc
jnp
int
mov
int
bnd
je
mov
sti
aas
gs
lock
ret
adc
mov
and
jg
movb
cli
lea
jo
inc
stos
jbe
dec
jecxz
cmp
mov
and
and
fdivrl
dec
loop
jne
jb
cld
xor
cmpb
pop
pop
aaa
outsb
jmp
xchg
scas
sbb
shll
xor
lret
push
jb
repnz
and
dec
lods
popf
or
arpl
dec
dec
cs
popa
lret
addl
jmp
and
jp
pop
jns
lods
cmc
cmp
idivb
push
and
orb
adc
lock
pusha
mov
mov
sbb
jns
cmp
insb
add
int
pushf
adc
mov
andb
xor
xor
gs
out
mov
jle
stos
jne
inc
cmpsl
int3
add
adcb
in
jmp
inc
inc
add
pop
call
into
cmpsb
pop
push
sahf
mov
enter
in
notl
pop
je
pop
xlat
sub
and
sub
xor
stos
mov
push
push
push
lea
movsb
adc
imul
pop
out
int
mov
cld
shlb
fstps
neg
and
enter
fnstcw
in
aas
lods
dec
cmp
test
cld
or
test
add
pop
dec
gs
inc
push
int3
loopne
sub
jb
xor
jecxz
cltd
out
mov
cmp
push
cmp
lret
repz
jecxz
imul
jl
inc
pop
push
iret
loope
rorb
test
test
ss
mov
push
outsl
cld
leave
xlat
out
push
inc
add
or
loop
fisubl
push
andb
repz
sub
pop
jle
ret
inc
xor
popa
clc
fwait
xchg
add
mov
sbb
adcb
lock
in
scas
sahf
or
mov
xchg
inc
jne
pop
sub
cmc
js
jle
cwtl
mov
stc
pop
mov
idivb
test
leave
inc
movsl
jg
sti
in
push
fmulp
out
add
lods
xor
fcmovnu
test
mov
xchg
pop
xchg
add
mov
jns
and
mov
ljmp
ret
fidivrl
dec
lret
je
arpl
adc
jp
xchg
in
push
sahf
sub
and
stos
mov
iret
push
sub
jnp
jbe
stos
outsb
lods
xchg
jmp
sbb
xor
outsb
aaa
push
xchg
ds
cmp
mov
aaa
cmp
jecxz
inc
adc
or
adcb
dec
mov
mov
lret
pop
cmp
cmp
xlat
xor
loopne
push
je
fcompl
mov
movsl
roll
aas
push
pop
in
pop
xchg
fsubr
icebp
mov
int
lret
arpl
dec
pop
adc
sub
xchg
xor
push
mov
ds
push
add
xlat
pop
loopne
aaa
loopne
jo
sahf
addr16
jle
push
insl
mov
sub
les
loope
adc
fadds
dec
pusha
das
add
mov
push
call
push
inc
sbb
add
inc
mov
and
bound
je
stos
cmp
push
hlt
jl
jno
cs
mov
sbb
lds
jo
jnp
mov
dec
mov
fnstcw
inc
popa
ret
mov
scas
inc
cmp
jecxz
lock
daa
and
enter
sub
mov
aam
movsl
or
jnp
or
jge
push
inc
aad
xchg
sub
scas
add
cmpsb
mov
sub
push
or
mov
test
daa
and
xchg
xchg
cmc
call
sub
adc
dec
mov
sub
rcrb
std
xchg
icebp
test
push
cwtl
pop
aaa
pop
test
lcall
cmp
push
jae
push
shl
lea
shlb
ret
repz
push
dec
adc
mov
daa
mov
dec
ss
dec
pop
sub
xchg
hlt
adc
adc
cmc
jne
inc
negl
dec
gs
das
pushf
push
testb
adc
sub
push
push
mov
ret
bound
test
repz
jmp
xchg
das
data16
lds
loopne
mov
jo
out
fistpll
mov
test
hlt
ret
jp
int3
jae
adc
dec
cwtl
add
mov
sbb
movsl
fmuls
sbb
jg
popf
rol
add
data16
dec
daa
or
repz
dec
dec
fs
jg
jo
inc
pop
jle
lret
int
rsqrtps
inc
push
int3
pop
iret
popa
jo
sbb
ret
jle
mov
dec
fcmove
fnstcw
std
sub
fisttpl
adc
loopne
sbb
xor
sbb
cmpsb
test
lods
inc
jp
stos
mov
movsb
pushf
adc
lds
dec
sbb
push
mov
jl,pt
mov
in
or
add
out
sbb
nop
arpl
popa
pop
out
sbb
sub
cmp
dec
cmc
push
repnz
movsl
in
loop
mov
rorb
sbb
pop
mov
inc
lods
xor
mov
repz
mov
pop
cmc
push
int
mov
inc
jmp
sub
aaa
clc
test
insl
mov
pop
test
add
mov
mov
mov
stc
sti
aaa
add
ss
pop
jge
mov
and
inc
sbb
inc
es
pushf
pushf
scas
cli
jns
lea
leave
pusha
rolb
iret
inc
in
stos
push
gs
sub
jl
xor
add
test
insl
sub
xor
cmpsb
dec
sbb
pop
addr16
push
test
out
notb
fsubrs
int
pushf
or
das
inc
mov
jo
add
es
push
xlat
mov
je
les
stc
or
aam
push
add
into
mov
xchg
adc
jbe
lcall
mov
sub
mov
inc
outsb
sbb
jne
outsl
adc
fiadds
test
cld
sbb
mov
push
loop
jns
xchg
mov
into
loop
pop
pop
sub
incb
cli
mov
sbb
stos
icebp
dec
enter
icebp
and
mov
and
stos
cld
pop
pushf
mulb
xor
jl
sub
cltd
add
out
sbb
test
mov
out
sti
cwtl
jle
in
xor
adc
addr16
mov
insb
add
jb
xchg
mov
mov
gs
mov
jmp
xor
push
mov
mov
lret
or
or
in
ss
dec
dec
sub
cmp
rorl
jns
xchg
sub
or
stc
mov
jg
inc
movsl
int
dec
cwtl
and
dec
xor
xor
xor
bound
cmc
cwtl
sub
xor
add
repz
ret
mov
je
je
or
lea
jp
xor
push
push
xor
jmp
int
mov
ss
pop
repz
out
pop
dec
xor
rcl
inc
stc
les
xchg
jmp
insb
iret
lods
int
imul
mov
and
test
or
loopne
and
cli
push
or
mov
loopne
fs
ljmp
adc
mov
sub
push
sbb
hlt
mov
xchg
jnp
rol
pop
inc
sub
shll
dec
mov
dec
mov
jo
or
sbb
ret
mov
data16
sbb
mov
stc
stos
pop
jb
xchg
clc
pop
jb
mov
les
mov
jecxz
scas
dec
jle
movsb
cmp
inc
out
push
sub
mov
pop
fisttps
movsl
hlt
mov
ja
jecxz
ss
sbb
outsb
mov
mov
clc
mov
lea
ret
mov
fistpll
ror
lods
rcrl
clc
xchg
xchg
loop
jo
pop
roll
jns
ljmp
cmc
xor
ds
mov
xor
lcall
pop
in
sub
fnstenv
xor
jge
xor
inc
push
jno
imul
clc
ret
cwtl
outsl
add
xchg
outsl
sbb
dec
stos
xlat
in
test
sbb
xor
pop
loope
jl
daa
out
sub
dec
jb
cmp
mov
dec
push
cmpb
loope
push
sti
mov
pop
add
mov
sub
aas
dec
out
enter
cmp
sbb
les
hlt
fs
addr16
cld
loopne
call
inc
sbb
xor
divb
andl
inc
lahf
stos
andl
cmp
pushf
ds
fadds
clc
icebp
popa
sub
aad
repnz
jg
fnstsw
shrb
andl
das
sub
fyl2x
xchg
mov
jae
inc
in
stc
out
xchg
insl
aam
push
dec
ret
stos
cmp
imull
jl
nop
pop
sbbl
mov
sbb
pop
sbb
repnz
push
movsb
sbb
add
bound
ja
nop
in
sub
jg
xor
mov
push
adcl
stos
jle
inc
daa
mov
jl
add
test
and
sbb
inc
imul
mov
xchg
xchg
cmc
inc
pop
imul
push
sbb
lahf
mov
pop
clc
movsl
fisubrs
int
jge
jne
mov
jnp
cmp
or
push
cmc
add
xchg
popa
jp
push
mov
dec
and
adc
and
add
in
mov
mov
popa
or
mov
mov
or
and
aad
mov
ds
rcrl
jp
mov
sbb
and
mov
jmp
es
andb
ljmp
popa
roll
sbbl
and
jge
add
cmc
loop
xor
jge
xor
fmull
or
xchg
mov
movb
jge
mov
std
mov
nop
push
mov
out
and
mov
xchg
fists
scas
xor
mov
bound
cltd
mov
pop
js
rcr
imul
or
cltd
jp
and
shll
fwait
fs
push
imul
fwait
arpl
and
leave
icebp
movsl
push
fidivs
push
xchg
push
inc
shlb
shlb
gs
dec
add
cmpsl
mov
test
pop
xor
bound
nop
push
pop
push
fidivs
mov
push
aad
add
ficompl
outsb
popf
dec
mov
pusha
lods
fs
xor
mov
pop
testb
mov
out
push
andl
jl
add
pop
sahf
mov
nop
andb
mov
es
jmp
inc
sbb
push
or
mov
mov
cmp
sub
mov
cs
add
jno
shrl
inc
push
in
mov
lods
cmp
fstp
in
cmp
in
arpl
into
mov
ss
loopne
or
push
pop
lret
repnz
lea
cmpsl
repnz
sbb
adc
pop
arpl
stos
inc
lods
and
lret
ds
sbb
and
push
fcoms
push
sub
mov
outsb
jg
enter
lahf
pop
mov
pop
mov
mov
insb
je
cwtl
push
mov
stos
ficoms
dec
jecxz
call
inc
rdmsr
dec
jno
jns
insb
inc
xlat
jb
in
cmp
jle
pop
stos
insl
cmp
jbe
sbb
fsubl
jbe
jne
sbb
js
data16
jbe
mov
test
and
xchg
dec
mov
jnp
dec
dec
jl
arpl
push
clc
sub
jmp
or
adc
cmpl
pusha
xchg
dec
mov
mov
inc
dec
lds
das
addr16
lahf
sub
psrad
test
and
dec
push
cmc
das
addr16
cmp
mov
ret
aaa
into
hlt
push
rcl
sub
dec
lahf
and
xchg
push
test
jp
repnz
les
scas
mov
xchg
sub
xor
repz
in
leave
push
cmp
mov
jge
cmpsb
cmp
cmc
pop
rcl
sub
fistps
into
pop
lea
out
jnp
inc
xlat
stc
dec
es
jne
add
aam
jnp
xchg
fnstenv
cmc
dec
out
into
enter
sub
dec
int
aas
lret
inc
fdivr
pusha
jmp
shlb
inc
cwtl
fsubl
sbb
ret
sarl
fisubrl
lret
mov
hlt
mov
test
repz
in
push
jmp
cli
mov
add
jno
outsl
push
insb
xchg
lods
jmp
sub
inc
imul
lret
lret
cmpsb
jmp
push
xor
push
sub
cmpb
lock
push
cmpsl
ds
pop
call
mov
jge
enter
and
inc
std
xchg
js
inc
fcomp
cltd
cmc
mov
lock
js,pn
fnstenv
cltd
mov
iret
popf
shrl
add
imul
repnz
scas
or
inc
xor
lea
push
stos
mov
cmp
jecxz
xchg
bound
pusha
idivl
int3
mov
add
aam
push
ficompl
pcmpeqw
mov
stos
mov
mov
fisubrs
mov
in
xorl
adc
fnsave
push
mov
xchg
push
or
bound
push
inc
faddl
xchg
mov
fcompl
fnstenv
jns
inc
stos
push
ret
pop
mov
mov
fcmovne
aas
stc
icebp
call
inc
repnz
and
cmp
xchg
inc
call
ljmp
dec
insl
aam
loop
aam
mov
into
push
lods
mov
mov
pop
xor
lods
xor
sti
xchg
scas
inc
sbb
lods
xchg
ss
into
iret
data16
ljmp
cmp
xor
insl
pop
and
mov
loopne
add
push
arpl
xor
stos
inc
imul
iret
shlb
pop
adc
in
sub
cmp
push
mov
jne
mov
mov
adc
gs
sub
jns
addb
enter
or
sub
mov
jg
pop
cmc
mov
fwait
xor
aad
cmc
add
mov
and
jge
push
push
lret
lret
add
and
pop
cmp
outsl
jns
imul
insl
std
fst
insb
or
repz
repz
or
push
fwait
xor
int3
jns
cli
sbb
shlb
arpl
sahf
mov
or
dec
or
je
imul
mov
mov
mov
adc
roll
shll
push
pop
icebp
xchg
cmp
and
jg
clc
mov
xchg
sub
insl
xchg
mov
jnp
lods
test
je
add
je
fwait
test
es
mov
jns
mov
int3
jb
mov
jns
fwait
stos
xchg
mov
jno
mov
jns
scas
stos
xchg
insl
enter
movsb
push
push
cmc
mov
fidivl
jo
push
movsl
push
inc
fldl
fwait
mov
lret
leave
mov
jg
ljmp
jb
mov
jg
shrl
jb
mov
adc
mov
shrb
push
mov
jp
xor
mov
bound
xchg
inc
sbb
mov
fs
xor
imul
xor
imul
lcall
imul
testb
mov
mov
arpl
mov
push
push
jmp
out
loop
mov
mov
imul
ret
out
pop
mov
data16
push
lock
mov
iret
out
outsb
add
push
sbb
call
xor
arpl
mov
ljmp
imul
loop
test
cmpl
aas
push
inc
fcmovnbe
mov
shl
shrb
cmp
movsl
mov
fdivs
lock
das
outsl
lods
inc
xlat
fistpll
pop
icebp
jl
ds
lods
mov
sub
aaa
test
data16
movsl
push
or
out
ss
icebp
cmp
mov
icebp
ss
lods
data16
les
mov
loop
cs
scas
inc
push
mov
sbb
jno
stos
inc
pop
test
outsl
scas
inc
decb
subl
hlt
mov
lret
xchg
sub
pop
push
mov
sub
ds
mov
shl
popa
xchg
sub
and
out
push
mov
out
pop
imul
xor
pop
testb
dec
loopne
pop
dec
loope
bnd
mov
xchg
inc
add
ja
or
aaa
cwtl
cltd
xor
pop
cmpsb
cmp
sbb
es
iret
data16
xchg
das
mov
sbbl
out
jle
scas
xor
fisubl
mov
sub
dec
movsl
cmp
fdivs
into
das
lret
bound
xchg
sub
jp
pop
mov
jge
jbe
cltd
xor
test
mov
stos
cmp
mov
and
ret
and
xchg
pop
call
xchg
sub
cmp
jno
dec
out
xchg
add
add
sbb
xchg
iret
cwtl
das
add
jo
pop
frstor
mov
pop
sarb
fidivs
sarl
addl
je
dec
and
insb
in
sbbl
fidivs
jnp
dec
stos
imul
imul
inc
fprem1
and
jnp
push
popa
clc
inc
adcb
fidivrs
xadd
mov
es
sub
dec
jg
mov
cwtl
mov
outsl
jmp
add
inc
xor
mov
ret
mull
out
push
cmc
pop
mov
jnp
add
mov
negl
push
insl
dec
in
adc
push
insb
add
inc
insl
mov
or
xchg
mov
cmp
jmp
aas
mov
cmp
pusha
mov
testl
push
pop
loop
mov
stc
movsb
sbb
mov
loope
notb
inc
stos
shll
xchg
gs
pop
je
xchg
and
sbb
adc
das
jne
mov
gs
ret
xchg
mov
stos
rcll
or
pop
xor
in
sub
dec
shlb
mov
lret
pushl
add
inc
test
mov
fisttps
rolb
pop
sahf
push
sub
sub
lods
jl
cs
ja
lods
testl
out
popa
clc
lods
or
xor
pop
xchg
sub
mov
cmp
scas
or
or
imul
jb
jnp
push
push
sbb
mov
mov
xchg
push
add
subl
je
shlb
mov
jmp
pop
lock
or
popf
mov
ret
ja
xchg
inc
sub
push
pop
push
jmp
inc
sbb
cmp
xchg
add
das
sub
xchg
outsb
cmp
movb
add
adc
cli
sub
push
roll
jbe
dec
cwtl
hlt
mov
imul
out
and
pop
lahf
sti
or
lock
mov
pop
jecxz
sbb
incl
mov
scas
js
popl
cmp
cmp
add
adc
cltd
push
stc
and
push
cmp
repnz
popa
in
lods
sub
xor
les
jg
adc
fistpl
or
addr16
cmc
repz
adc
pop
lds
mov
and
and
inc
outsb
je
rdmsr
xor
insl
xchg
scas
mov
jne
mov
aas
std
add
dec
or
mov
les
das
mov
jmp
call
mov
ret
inc
fwait
jno
mov
pushf
xor
test
push
cs
inc
add
ds
lea
dec
jae
ja
xchg
xchg
mov
adc
loop
scas
lahf
push
push
cld
aad
mov
push
mov
in
pop
lcall
pusha
scas
jne
mov
out
in
xchg
ja
add
mov
lods
cld
bound
in
shlb
out
stos
imul
mov
clc
cli
or
lds
cmc
sbb
fwait
sbb
icebp
push
jl
mov
stos
inc
push
pushf
mov
dec
jbe
outsb
inc
push
jno
jo
mov
mov
mov
lods
mov
jecxz
mov
xchg
sub
inc
int3
out
ficompl
sbb
popf
add
pop
in
mov
ljmp
push
push
add
sbb
mov
add
fsubrl
xchg
lcall
enter
mov
ljmp
inc
ret
xor
ss
and
jb
mov
jp
fiadds
inc
ret
fidivs
xlat
cs
in
fcom
out
icebp
ret
aad
in
into
and
or
add
in
mov
or
cmpsl
andl
aad
xchg
mov
das
loop
stos
outsl
test
jp
nop
xor
sub
adc
or
dec
dec
insl
out
xchg
mov
xchg
pop
pop
mov
mov
cmp
pop
and
out
cmp
push
sbb
enter
loop
pop
and
inc
test
addr16
mov
push
push
out
xor
cmpsl
gs
xlat
outsb
add
mov
and
inc
outsl
pushf
test
imul
dec
push
sbb
test
cmp
rorb
xor
iret
xor
cmp
push
fildl
cs
test
ds
dec
and
fmuls
inc
push
lret
mov
xlat
pop
je
data16
out
inc
jb
xchg
dec
xor
insb
add
lods
cmpb
enter
xchg
mov
ja
inc
inc
mov
dec
mov
fmuls
or
cli
movsl
bnd
sub
addl
repz
sub
mov
push
cs
mov
ja
pop
fs
cmpb
mov
subb
aas
jbe
mov
cmp
es
and
adc
aaa
jbe
adc
cmpsl
and
inc
addl
andb
pop
movl
sub
xor
add
ret
jle
lret
imulb
sub
mov
mov
cli
jmp
fisubrl
mov
cmpsb
js
pop
sbb
sbb
cmp
pop
add
jne
inc
lret
negl
pop
loope
mov
ds
je
mov
testb
out
hlt
sub
test
jmp
fcomi
mov
sub
ss
mov
sub
xchg
stos
jmp
adc
adc
dec
mov
fbstp
clc
cmpsl
pop
icebp
outsl
es
inc
ret
mov
loopne
pop
add
mov
inc
hlt
sub
cmpb
out
push
add
cmp
cmp
adc
xchg
test
cli
push
pop
in
mov
gs
arpl
sbb
nop
pop
xlat
adc
pop
pop
xor
mov
pop
dec
add
fisubl
notl
jmp
inc
pushf
mov
imul
adc
adc
push
into
mov
jl
sbb
fnstenv
daa
test
mov
arpl
inc
xor
dec
loopne
imul
mov
xchg
je
cli
push
mov
jg
push
out
shlb
mov
xchg
cmc
pop
mov
mov
out
mov
popa
fwait
in
shlb
cltd
lods
clc
sub
or
scas
lods
aad
adc
push
jmp
js
inc
fwait
dec
sub
push
jne
jo
addr16
xchg
js
inc
out
inc
fwait
movsb
bound
inc
rorb
mov
cmp
in
dec
jne
add
jnp
or
ljmp
montmul
cmpsb
inc
loop
movsl
push
into
cmp
ss
data16
push
leave
push
int
pop
pop
or
mov
pop
out
and
addl
mov
fidivrs
adc
imul
pop
xchg
jle
stc
dec
int
les
leave
cmp
iret
cwtl
or
cld
leave
lahf
and
and
cmp
fadds
or
xchg
clc
push
jmp
fldt
jecxz
inc
movsl
ja
jnp
or
pusha
lcall
jne
push
push
imul
dec
fldl
imul
or
test
xor
dec
gs
ss
jecxz
je
cmp
in
adc
aam
push
xchg
jecxz
das
inc
out
bound
xchg
loop
loope
adc
add
xchg
loopne
stos
enter
scas
scas
push
in
insl
iret
movsl
pop
aam
aas
icebp
jle
mov
notl
movsb
push
mov
dec
xor
aam
arpl
iret
mov
lock
call
scas
add
stc
xor
in
pop
iret
sbbl
loopne
dec
in
movsl
rorl
mov
rolb
or
pop
jno
int
cmp
pop
dec
pop
out
inc
pop
dec
cmpsb
pop
jno
mov
pop
jne
nop
sub
and
cmpl
cmp
les
push
iret
cmp
aas
call
push
fstpl
in
fldcw
cmc
stos
fisubs
jp
iret
xchg
xchg
sarb
addb
in
imul
dec
loope
dec
cmp
lock
hlt
sub
and
movsb
and
repnz
mov
outsl
cmp
sbbb
add
jmp
push
negb
adc
jae
push
dec
movsb
out
repnz
mov
jb
inc
xchg
lea
push
push
shrb
ljmp
push
inc
scas
popa
pusha
aaa
cmp
mov
call
int3
aaa
inc
int3
add
aam
flds
rcrl
repnz
sub
mov
pop
inc
fmuls
adc
std
cmpsb
lret
jmp
mov
pop
stc
jns
sbb
xchg
pusha
adc
cmp
repnz
pop
cld
xor
push
shrl
sub
bound
sarl
lret
nop
mov
adc
jns
clc
pop
adc
int3
sahf
xor
out
mov
lods
in
xor
lret
ror
fdivl
rcll
insb
mov
inc
mov
adc
lock
xchg
aad
sub
fcmovb
jae
fcmovnbe
sub
mov
push
lret
movlps
add
xchg
movsb
cli
sub
mov
lret
bound
popa
lcall
pop
imul
dec
jl
dec
mov
repnz
mov
adc
stc
dec
cs
inc
movsl
into
or
mov
stos
inc
sbb
es
inc
mov
lods
adc
inc
nop
mov
fimull
xchg
fdivl
xchg
inc
add
mov
xchg
lods
test
popf
mov
hlt
sbbl
imul
xor
into
cmp
ss
fidivl
aam
inc
les
std
sbb
ret
pop
shrb
in
xchg
or
test
mov
xchg
rclb
pop
lret
fstpl
xor
pop
adc
maskmovq
xchg
mov
adc
xchg
xchg
sub
cs
arpl
xor
sahf
xchg
xlat
dec
cs
sbb
xchg
push
xchg
mov
ficompl
ja
idivl
mov
stos
inc
mov
rcr
pop
mov
add
sbb
mov
rol
rorb
les
xchg
call
sub
clc
stos
sahf
xchg
pop
loopne
stos
jbe
movsl
inc
fiaddl
inc
jns
or
int3
cmp
int
sbb
cmp
sti
push
add
outsl
mov
orb
roll
jp
sub
dec
rclb
roll
addl
ja
mov
sbb
mov
divl
in
stos
sahf
xchg
push
fisttpl
add
mov
sbb
out
test
jno
mov
sbbb
pop
add
pop
popf
push
push
in
adc
sbb
ja
add
test
cmc
mov
ret
or
mov
js
movb
mov
outsl
add
fwait
dec
arpl
sub
pop
scas
push
dec
mov
or
int
fbstp
push
mov
ficoml
xchg
xchg
pop
imul
pop
adc
inc
into
insl
sahf
loop
das
cmp
fdivrl
repz
inc
fldl
add
std
test
xchg
pop
inc
lock
aaa
scas
push
jl
inc
dec
rcll
in
mov
popf
xchg
pop
lahf
jo
sbb
mov
sbb
pop
mov
fcoms
xor
faddl
or
mov
and
negb
mov
repnz
pop
cmc
sbb
stos
scas
test
ljmp
or
ljmp
pushf
hlt
fidivrl
out
jne
mov
cld
shll
in
and
mov
out
shrl
ret
rolb
vandnps
imul
fiaddl
sahf
ss
jno
cli
repnz
cs
push
rcl
dec
xlat
mov
test
lret
les
in
std
xchg
test
inc
ret
lods
adc
scas
out
cmp
fsubr
popa
clc
sbb
or
lcall
or
adc
sar
and
arpl
push
sub
xor
stc
loopne
lret
dec
mov
mov
jecxz
mov
push
rcr
lahf
xchg
mov
and
pushf
aad
jns
push
into
sbb
adc
adc
xor
mov
xor
mov
repz
adc
pop
test
stc
xor
jle
sub
out
mov
clc
lret
pusha
sbb
cmpsb
pop
adc
mov
adc
nop
xchg
sbb
push
xor
jno
test
stc
jp
outsb
sahf
jne
sbb
xchg
xchg
out
add
test
xchg
fstpl
cmp
jl
xchg
jge
cmp
sbb
cmpsb
pushaw
xor
sub
cmp
sbb
mov
out
sbb
mov
cmp
gs
jnp
pop
imulb
insb
dec
mov
sub
loope
dec
lds
mov
mov
aam
mov
in
stos
pop
mov
insb
rcr
icebp
mov
into
xlat
lods
outsl
out
mov
mov
add
jg
sbb
mov
cmp
shlb
push
mov
push
scas
js
or
cs
mov
jb
in
ljmp
stc
pusha
into
in
sbbl
add
loopne
shll
push
lret
test
int
icebp
or
cmpsl
test
lret
jmp
icebp
mov
or
sub
sub
inc
test
gs
add
popa
mov
pushf
jg
fwait
xor
movsl
push
dec
cmpsl
mov
je
mov
jl
pop
sarl
imul
dec
mov
mov
pop
mov
xchg
xchg
jge
mov
jns,pn
xlat
cmp
mov
jne
fbstp
gs
lret
xor
xor
imul
dec
jo
xlat
xor
jecxz
cmpl
add
dec
dec
in
push
push
and
pop
mov
and
popa
addb
push
jne
popa
jo
cmp
xor
test
pop
mov
lahf
orb
or
dec
mov
lds
movsb
imul
sub
lds
and
faddl
xor
dec
dec
jle
popa
pop
movlps
pop
lahf
outsl
sub
and
test
pushf
stos
jb
xchg
sub
es
leave
pusha
ret
cmpb
ret
insl
add
jmp
lret
and
jmp
dec
mov
std
ret
dec
ret
data16
inc
push
cmpsl
scas
inc
imul
jnp
dec
lret
cmp
mov
mov
lods
or
cld
jl
test
mov
or
and
daa
in
jb
inc
lret
ss
push
sarl
or
inc
scas
pop
jecxz
jno
mov
subl
xor
add
ficoml
mov
mov
ja
orl
add
jbe
outsb
inc
push
xchg
outsb
outsl
es
inc
pop
pop
popf
mov
pop
iret
inc
push
push
xor
bound
dec
push
sbb
pop
dec
push
in
push
inc
shrl
dec
xor
add
jg
cmp
jns
sub
push
je
cmp
aas
cmp
cmc
xor
xchg
dec
mov
imull
mov
push
arpl
xchg
fs
aas
call
lock
mov
leave
inc
test
mov
dec
xchg
clc
xor
imul
cmc
pop
lcall
push
lea
roll
pop
shl
xchg
dec
mov
movsb
cmp
mov
in
or
shrl
add
xchg
hlt
push
adc
scas
cld
ficoml
notl
adc
ljmp
sub
arpl
inc
adc
mov
out
pusha
negl
xor
call
mov
out
mov
movsw
sarb
inc
fdivrs
into
dec
cs
push
int3
jo
rcrl
mov
mov
jb
xor
sbb
lret
test
sub
xchg
sub
jp
mov
cmp
je
cmp
and
out
xchg
jno
mov
out
adc
call
icebp
daa
lods
lods
popa
clc
sub
fistl
dec
pushl
cld
jno
ss
mov
mov
push
or
mov
dec
jl
mov
lods
inc
xchg
dec
popf
gs
cwtl
data16
xor
in
xor
adcl
push
leave
sbb
jmp
inc
shrl
push
mov
loope
jnp
push
cwtl
and
orl
fdivl
filds
push
xor
jno
xor
mov
add
mov
ret
pop
je
mov
sbbl
dec
loopne
add
mov
int3
push
mov
pushf
shrl
in
lahf
ss
test
sbb
mov
push
xchg
xor
sub
fwait
jno
cltd
sbb
and
mov
dec
inc
imul
xor
jbe
fisubrs
or
out
sbb
inc
fs
out
std
aas
int
inc
mov
fsubrp
inc
ficomps
stos
fcoml
cmp
andb
cmp
sbb
mov
in
inc
push
mov
inc
jmp
rol
xchg
jge
scas
cmp
stc
das
xchg
sub
sbb
stos
and
push
xchg
data16
mov
std
orb
xchg
in
lock
add
int3
cmp
sbb
sub
sub
dec
add
ds
xor
dec
sbb
mov
push
iret
jb
mov
clc
jg
cld
daa
mov
or
adc
es
adc
scas
div
mov
out
addl
mov
cld
dec
mov
lret
mov
push
push
mov
sub
xchg
pop
shrl
mov
inc
add
fldt
lret
es
adc
cmpsl
or
or
add
aad
arpl
jmp
mov
push
or
ret
pop
stos
dec
icebp
daa
pop
stc
mov
inc
outsl
mov
mov
lea
pushf
test
punpckhbw
lock
jge
js
mov
xor
and
leave
inc
jmp
adc
inc
fsubrl
mov
fimull
iret
dec
ret
jb
and
into
cmp
shrl
addr16
xlat
ret
fsubrs
jl
lret
dec
mov
mov
outsl
aas
icebp
xor
push
lods
sbb
xor
jl
imul
xchg
xor
cmp
cmpsl
fcoml
sub
or
mov
xlat
sub
sub
adc
fldenv
mov
mov
push
cwtl
cmpsb
nop
mov
cli
ret
inc
mov
fcoml
cmp
int
xchg
lret
xchg
rorl
loope
jecxz
xchg
test
repz
ret
pop
mov
out
cmc
mov
fidivrl
mov
sti
or
sub
mov
inc
cmpsl
lret
loope
cwtl
shrb
scas
push
mov
mov
lcall
add
mov
mov
fisttpl
mov
shll
mov
dec
and
outsl
jo
inc
arpl
loopne
sub
sub
stos
fwait
lea
sbb
xchg
in
pop
movsb
js
movsb
cmp
aam
adc
dec
rcrl
addl
pop
jmp
jp
sub
lea
aam
xchg
ret
pop
mov
xchg
jp
rcr
push
les
pop
dec
xlat
mov
ss
mov
in
push
jno
inc
push
mov
push
cmp
jns
pushfw
outsl
inc
jl
push
cmp
outsb
sbbl
pop
or
insl
mov
or
xchg
mov
mov
inc
je
int
inc
xchg
pop
jl
adc
sub
pop
sub
cmc
jl
push
adc
movsb
pop
jae
scas
jno
xor
sbbb
stos
inc
adc
insb
scas
jns
mov
jb
sbbb
mov
js
dec
notb
leave
dec
jle
outsb
shlb
nop
xchg
js
sbb
popf
mov
loopne
popa
xchg
cs
or
push
fwait
icebp
xor
adc
lahf
repnz
and
cli
lds
xor
cld
movsb
pushf
test
loopne
icebp
psllq
or
leave
ret
and
lcall
jne
dec
pusha
stos
rcrl
mov
mov
cld
icebp
je
loope
cmpsb
cmp
hlt
gs
call
setg
testl
orl
icebp
and
cmp
sbb
inc
adc
insb
cmp
jg
sub
fisttpll
xchg
jne
adc
cmp
adc
jp
mov
das
fadds
xor
outsb
push
inc
push
inc
es
pop
pop
xor
ja
mov
mov
imull
jno
mov
mov
sahf
and
cmp
mov
testb
insl
add
lcall
shrl
dec
roll
shll
pop
loop
mov
dec
adc
pusha
cmpsl
pop
roll
adc
and
mov
fdivl
pop
lret
xchg
pop
sahf
jae
adc
add
mov
or
jle
lea
daa
loopne
outsb
aad
dec
push
sbb
jns
mov
sbb
jg
jae
sti
dec
dec
pop
enter
mov
cmp
mov
push
cmp
cmp
pop
rcll
je
std
movsl
adc
xacquire
mov
out
movsb
cmp
or
pop
sub
mov
and
cmp
rcrl
leave
inc
iret
out
mov
and
scas
popa
mov
mov
xchg
add
xchg
cs
cmc
inc
mov
in
jns
int
xchg
cs
out
push
lods
lret
mov
dec
mov
or
mov
adc
movsb
addr16
pushf
xchg
imul
jg
insb
lods
sub
addb
cmp
insb
add
jp
sub
dec
stos
out
mov
rolb
mov
pushf
dec
mov
sti
sub
loop
pop
cmp
mov
addb
pop
test
sti
mov
test
inc
lds
dec
mov
sub
pop
out
sbb
push
aaa
repnz
sub
clc
aas
and
movsb
or
cmp
xchg
sub
fidivrs
sbb
sbb
pop
repz
ret
mov
sub
call
cld
inc
push
adc
insl
cmpsl
xor
xor
push
into
cmp
shrb
or
arpl
mov
mov
fdivs
cwtl
das
add
and
dec
mov
xchg
jp
xchg
cs
lcall
cli
jmp
jns
mov
mov
inc
jp
repnz
mov
jns
rorl
sub
insb
add
cmp
mov
das
lahf
add
push
xchg
adc
dec
test
inc
aas
leave
ljmp
int
dec
sub
enter
aam
sbb
xlat
movsb
cmp
sti
icebp
mov
dec
jg
loopne
mov
sub
xchg
add
dec
loop
and
imul
test
xchg
lret
out
cli
jmp
cmp
sbb
push
dec
ds
pop
jo
xchg
sub
xchg
loope
ret
ret
hlt
in
xchg
push
push
shrb
aaa
sbb
xchg
mov
pop
lock
sub
push
pop
popa
dec
loop
adcb
in
mov
add
shrl
pop
cmpsb
cmp
stos
lods
les
int3
or
jp
push
sub
dec
push
add
mov
ret
repz
push
inc
dec
pop
bnd
movsl
cmp
fwait
jns
int
ret
pop
in
out
xchg
and
loop
inc
inc
mov
jae
add
mov
mov
out
mov
pop
cmp
cmpsb
imul
mov
adc
fimuls
ud0
add
mov
test
push
xlat
movsl
cmp
stc
icebp
mov
sub
pop
pop
dec
cmp
ds
xor
xor
xchg
bound
pop
mov
add
out
notl
add
jp
xchg
sub
push
out
or
jne,pn
pusha
mov
ret
jecxz
xchg
sub
aam
stos
push
jge
mov
and
dec
lahf
ss
stos
inc
xchg
sahf
mov
pop
in
fstpt
imul
mov
xchg
mov
fdivp
mov
add
test
adc
mov
xchg
mov
enter
aas
and
cmpsb
pop
hlt
xlat
pop
lds
jnp
cs
pop
lock
push
int
pusha
divl
out
xchg
insb
adc
ds
xor
pop
mov
lds
mulb
rclb
jge
mov
fdivp
mov
fwait
jb
xor
andl
sbb
dec
out
inc
xorl
jne
in
pop
xchg
push
loope
mov
sub
stos
mov
xor
ss
cld
pop
sti
dec
add
pminub
or
lcall
cmp
fwait
sub
sarl
movsb
and
icebp
test
insb
test
pop
pop
std
push
sub
mov
sbb
sub
enter
inc
xor
mov
mov
leave
sub
dec
inc
imul
mov
idivb
scas
fnsave
inc
lds
xor
jno
fistl
mov
jns
xor
outsl
inc
and
and
push
lahf
add
aad
adc
xchg
mov
cmp
cmp
je
mov
fstp
rol
cmp
das
or
aas
out
hlt
rcl
push
int3
fwait
push
mulb
cmpsl
lods
dec
jno
xor
mov
fwait
and
int3
jns
popf
in
std
enter
jle
repz
sub
xchg
xor
jnp
jg
out
push
pop
rep
pop
xchg
stos
mov
rorb
fs
cwtl
insl
iret
fidivrs
fnsave
sbb
push
adc
cmpsb
xchg
dec
cmpsl
dec
push
add
das
or
mov
cmp
out
and
scas
jb
es
ljmp
ljmp
ret
test
hlt
pop
js
rclb
js
push
dec
mov
test
jns
jl
xchg
fldcw
fsubr
pop
in
dec
pop
int3
out
test
jae
xor
fmulp
cli
mov
jbe
lcall
or
and
xchg
in
push
adc
cmpsb
xorb
add
hlt
pop
into
roll
ds
adc
pop
inc
mov
push
rep
fisttpll
xorb
cmp
push
xchg
stos
ret
paddb
pusha
add
outsb
out
fnsave
iret
in
mov
leave
outsl
scas
jae
clc
sbb
lret
sub
jne
stos
dec
jp
lods
scas
aaa
stos
insl
daa
xchg
hlt
addl
pop
adc
sbb
pop
lea
dec
adc
cmp
adc
cltd
xor
icebp
ljmp
push
pop
lcall
int3
jg
jl
pop
sub
push
loop
icebp
mov
xor
into
mov
push
or
iret
leave
cmc
sbbl
jp
int
cwtl
std
xchg
or
fwait
xor
fisubrs
ror
insl
add
sub
repnz
cmp
aaa
add
cmc
enter
xchg
cmpsb
testl
pusha
cli
popa
mov
jbe
push
repz
mov
in
push
test
cmp
dec
daa
mov
cli
arpl
push
test
out
sbb
jb
test
nop
xlat
xor
or
pop
scas
repnz
out
lds
lret
pusha
jle
test
jns
test
adc
movl
testb
je
lahf
add
mov
mov
iret
mov
stos
sub
jne
movsb
loop
jb
mov
sti
pop
push
test
inc
adc
bound
rol
lret
imul
sbb
jecxz
nop
mov
out
jp
enter
add
je
push
pusha
add
pop
mov
cmp
lret
outsl
rcrb
cmp
pop
jle
pop
lods
xor
rcr
mov
push
add
nop
cmp
aad
popf
mov
xchg
dec
int
out
lahf
xchg
cmp
int3
shll
lea
int
sub
or
fcompl
negb
lea
lret
dec
orl
leave
in
jbe
jae
leave
pop
scas
rorl
lock
mulb
mov
sbb
jns
in
jbe
insb
add
jmp
cld
pushf
inc
cmp
inc
or
orb
popf
inc
jnp
in
jne
push
lret
rorb
subl
lock
mov
sbb
jne
roll
lret
inc
or
popf
inc
or
inc
or
aad
inc
adc
add
dec
dec
mov
lods
and
js
ss
add
xor
movl
sarb
hlt
popf
inc
push
push
cmp
movsb
icebp
jp
mov
sbb
std
pop
dec
push
daa
test
or
mov
ss
and
rolb
fcmovu
cwtl
pop
rcrl
decl
xor
inc
pop
xchg
add
ret
nop
inc
or
mov
ret
mov
add
ja
inc
or
arpl
dec
inc
jmp
negl
jg
ja
sbb
leave
add
and
xor
sarb
out
adc
ja
test
dec
xor
sarb
es
movsb
pop
mov
pop
repnz
ljmp
mov
out
xor
jg
pop
daa
fiaddl
xor
jg
mov
scas
out
or
sub
sub
xor
dec
or
mov
fdivs
stos
sub
mov
adc
repz
dec
adc
mov
cmpsl
sahf
jge,pt
ljmp
inc
cmc
xchg
popf
ds
dec
xchg
inc
aaa
cmp
xchg
cs
je,pt
jmp
adcb
popf
ds
mov
xor
rolb
adc
insl
iret
dec
push
add
icebp
popa
cmp
andl
xchg
inc
leave
xchg
push
add
adc
outsb
iret
stos
rolb
mov
mov
adc
call
hlt
popf
cmp
pop
xchg
push
add
test
jne
or
fnstcw
xchg
inc
push
mov
ds
add
test
xor
hlt
pop
or
mov
out
xchg
aas
xor
sub
pop
jle
inc
xchg
xchg
insb
sub
xchg
inc
xorl
pushf
cmp
ret
lock
test
mov
jo
aaa
fwait
bswap
mov
cmpsl
xor
xlat
movsb
xor
pop
clc
cli
jno
or
in
push
sub
mull
adc
mov
pushf
cmp
mov
mov
repnz
mov
xchg
inc
scas
scas
pushf
cmp
sub
rcll
mov
cmp
xor
std
repnz
add
in
repz
popf
cmp
pop
clc
cmp
xchg
inc
inc
adc
mov
pop
sti
jno
subb
arpl
stos
xor
js
adc
adc
pushf
cmp
xor
fdivr
out
push
in
and
adc
adc
xor
adc
mov
imul
addr16
sbb
pop
pop
dec
int
adc
dec
daa
inc
cmpsl
cs
lods
orl
arpl
mov
mov
sub
inc
jb
mov
mov
stos
das
roll
leave
lock
push
je
inc
or
add
sub
ljmp
test
sub
pop
xchg
fildl
mov
or
loopne
pop
add
test
and
pop
repz
adc
mov
mov
pop
add
test
cmp
pop
xbegin
xchg
fisttpl
sbb
push
mov
lods
mov
movsb
cli
inc
negl
out
inc
or
mov
mov
mov
movsb
daa
inc
cmpsl
xchg
cmp
xchg
push
jl
outsl
repnz
imul
xchg
inc
mov
outsb
into
xchg
cmp
ficompl
outsb
adcb
lock
rorl
hlt
xchg
xchg
enter
gs
xor
xchg
lods
fs
add
pop
mov
lea
shll
cs
ja
cmp
xchg
mov
adc
or
rorb
shll
cmpsl
mov
lods
cli
arpl
nop
cmp
lcall
add
xor
push
sti
arpl
lods
inc
fs
inc
sbb
pop
add
adc
sbb
into
imulb
mov
push
arpl
mov
mov
xchg
inc
dec
pop
xor
std
fnstsw
loop
scas
cs
sti
das
scas
test
xor
dec
mov
stos
sub
filds
daa
dec
jle
mov
cwtl
stos
sub
mov
inc
mov
test
dec
fsubs
in
mov
push
add
popa
out
adc
mov
mov
mov
cmpsl
insl
xor
lcall
mov
insl
dec
sbb
push
and
js
aaa
mov
xchg
jp
shrb
bswap
pop
cmp
addr16
sub
dec
dec
inc
pop
push
xor
aam
pop
sbb
sub
sarb
cmp
ljmp
mov
mov
push
cmpsl
aaa
movsb
fmull
sahf
mov
jne
jl
push
add
push
in
outsb
shrb
aad
sbb
xor
fnstenv
mov
mov
mov
dec
lods
xchg
inc
stos
xchg
jl
jns
and
rcr
je
push
and
cmp
movsl
dec
dec
clc
pop
cwtl
xchg
adc
dec
repz
test
sub
sub
scas
jg
dec
mov
mov
xchg
call
pop
pop
fisubrl
lods
aaa
inc
pop
rcr
sub
cmp
rcll
cmp
arpl
call
arpl
int3
mov
insb
fidivrl
loope
popf
ffree
xchg
ret
or
mov
dec
or
shrl
scas
out
repz
dec
in
sub
add
pop
cltd
aas
push
jnp
xorb
test
add
xchg
fisubl
lods
xor
lcall
popa
mov
jns
sahf
inc
shrb
loope
and
push
xchg
cmp
cwtl
clc
or
stc
int3
mov
dec
fidivs
pushf
inc
mov
xchg
ds
movsb
xchg
cmp
vmulpd
ds
jbe
push
and
sti
lock
lock
xchg
jno
shll
scas
lods
mov
addr16
cmc
arpl
test
imul
sub
dec
es
adcl
xchg
inc
xlat
ret
out
insb
xlat
or
dec
lret
add
adc
mov
roll
in
sbb
push
mov
out
lock
aam
and
pop
mov
sbb
inc
loop
adcl
test
ja
cmova
rclb
lods
xor
mov
inc
push
xlat
test
dec
hlt
or
push
in
mov
mov
inc
dec
cltd
sti
bound
shr
jb
sbb
sub
loopne
arpl
jg
pop
js
add
mov
push
inc
jbe
add
enter
leave
mov
leave
adc
jle
adc
pop
data16
cmc
test
mov
ljmp
es
jp
les
xchg
cmp
mov
mov
xchg
and
int
xor
lcall
jge
sbb
dec
out
jae
sub
fwait
repz
or
mov
fiaddl
in
lcall
pop
mov
xchg
test
mull
pop
not
mov
sti
push
jecxz
mov
stc
bswap
or
push
push
scas
sbbb
stos
xchg
xchg
aas
popf
mov
es
mov
ja
inc
fsubr
push
adc
pop
orl
jg
jecxz
xchg
mov
leave
nop
in
lds
inc
stos
xor
jnp
xlat
testb
fistps
mov
inc
lret
in
jbe
cltd
out
je
cmp
sbb
test
mov
dec
push
cmpsl
lret
mov
and
roll
stos
push
xchg
jo
sbb
jg
dec
loopne
mov
or
imul
xchg
movsb
cltd
aaa
lret
lret
pop
clc
pop
adc
mov
dec
add
jb
jmp
fildll
clc
incl
push
mul
in
ljmp
loopne
lret
mov
mov
ja
repz
les
shr
popa
iret
adc
lea
jmp
xchg
call
pusha
sbb
arpl
inc
int3
lea
cli
repz
push
and
add
jl
inc
adc
bound
mov
movsl
dec
or
mov
sub
sub
scas
inc
pop
jg
jge
mov
jecxz
mov
jns
addl
or
cld
cmp
outsl
dec
cmpsb
sbb
out
fnstcw
cmpsb
adc
and
lock
pop
ret
jb
lcall
pop
sbb
inc
or
movsl
and
cld
out
inc
pop
sti
icebp
pop
push
dec
out
imul
popf
jns
in
pop
push
dec
repz
out
popf
jecxz
sbb
dec
imul
aaa
jle
pop
mov
scas
sub
int
xchg
addl
jae
movsb
mov
insl
sarl
cld
pop
pop
push
pop
std
arpl
cmp
scas
push
push
popf
leave
test
mov
rclb
int
or
jp
test
xor
into
mov
push
cmp
mov
fwait
aas
ds
dec
push
push
jle
mov
pop
push
jg
mov
rclb
cltd
pop
loopne
sub
mov
pop
loop
jb
mov
shrl
add
cmpsb
scas
push
sti
sub
js
xchg
adc
cmp
lea
das
sahf
aas
pop
pop
aas
lahf
int3
push
rcll
push
ja
push
fstpt
mov
loopne
stos
daa
mov
mov
push
add
jae
pop
mov
fnstsw
ret
addl
and
aas
xor
xor
fidivs
sub
mov
leave
mov
jmp
pop
pusha
jne
rorb
cmp
sahf
add
adcl
pop
mov
inc
call
mov
cmp
leave
pop
pusha
testb
jecxz
mov
mov
sahf
negl
roll
pop
add
scas
sti
pusha
dec
cmpsl
fiadds
sbb
dec
lcall
or
mov
add
and
call
dec
push
es
cmp
leave
sub
jp
sbb
add
mov
fwait
cmp
ret
repnz
push
add
sub
push
push
add
mov
mov
rorb
dec
mov
jb
add
sarl
sar
std
pop
cmpsl
push
das
cmpsl
out
jg
sahf
stc
repz
xchg
inc
addr16
sbb
test
lret
pop
or
jl
cmc
pop
push
insl
cmp
andl
add
movsb
lcall
rcrb
sbb
xchg
xor
aaa
and
imul
add
mov
adc
mov
stos
lock
or
insb
lock
loop
push
enter
movsl
sub
push
std
cltd
js
dec
outsb
iret
dec
push
loop
mov
jmp
incl
shl
xchg
aas
fisttps
xor
ret
outsb
in
mov
rolb
fs
fidivrl
sbbb
push
out
imul
ja
jl
arpl
fsubs
stos
jb
test
insl
adcl
add
rsm
pop
fcoml
xchg
subl
fwait
inc
push
push
add
or
insb
jns
dec
push
je
loop
mov
notb
jnp
fidivrs
in
std
xchg
aam
or
iret
mov
push
jae
clc
sbb
int
mov
inc
push
mov
dec
push
repnz
mov
std
pushfw
clc
push
and
out
mov
mov
mov
dec
out
dec
or
push
incl
test
xchg
andl
xchg
pushf
jmp
mov
dec
or
scas
repz
pop
addr16
and
xchg
sub
adc
mov
mov
xchg
inc
jb
xchg
lret
xchg
fildl
push
rclb
int
mov
pop
lcall
pop
mull
dec
adc
jne
bound
mov
loope
js
adc
lods
cmp
add
outsb
stos
or
inc
jbe
push
cmp
jb
mov
out
push
inc
insl
dec
jecxz
sahf
clc
sarl
push
jno
movsl
frstor
pop
mov
stos
jl
sub
mov
stos
and
xor
aaa
cltd
xor
xchg
cmp
push
cld
xchg
xchg
jne
call
push
dec
adc
andb
int3
push
xchg
aas
ficoml
and
aaa
xchg
jns
les
push
pop
ret
ja
push
jnp
cmpsl
ljmp
lds
pop
push
in
pop
add
int
sbb
pushf
loop
mov
mov
pusha
push
push
dec
adc
lea
jp
enter
xor
cmp
mov
ret
and
fimull
into
jb
in
jo
negl
sub
mov
aam
call
shll
and
xor
insb
pop
jno
and
mov
cmc
push
jo
xchg
data16
lea
jns
shll
mov
add
push
cld
in
push
inc
or
stc
sbb
mov
add
outsl
mov
aam
mov
mov
pop
fisubs
leave
xchg
push
mov
aas
mov
xchg
and
jns
clc
imul
movsb
mov
clc
push
xor
iret
int3
jl
out
fwait
inc
lret
cmpsl
test
shlb
jmp
or
mov
mov
leave
inc
imul
fwait
mov
xchg
negb
dec
xchg
sbb
mov
ret
movsl
xchg
test
lcall
sbb
leave
push
sbb
cmpsb
and
cmp
mov
popa
ljmp
cltd
jo
arpl
out
jo
and
jecxz
and
jge
sub
cmp
xor
dec
push
sahf
and
test
mov
insl
lock
xchg
cmp
mov
stos
test
and
cmpsb
jo
fiaddl
dec
adc
add
jp
in
jno
insl
fadds
pop
aad
cmp
jae
ds
leave
mov
mov
adc
imul
outsb
mov
fistpll
in
mull
xor
imul
insb
in
gs
loop
and
mov
fcmovb
cmp
test
addr16
mov
outsb
dec
leave
add
mov
dec
or
lods
mov
cmp
mov
es
shr
insb
jmp
sub
mov
rcrb
pop
cmc
push
inc
sbbl
sti
data16
lea
mov
mov
scas
push
mov
xchg
or
mov
xlat
pop
jns
cmpb
cmp
bound
jp
ret
push
adcl
les
lcall
loopne
out
stos
pop
clc
pop
jecxz
lret
aad
mov
push
cmpsb
mov
mov
scas
cmp
out
cmp
mov
mov
add
ficoml
push
or
sbb
jbe
lret
fwait
sbb
sbb
xchg
or
add
pop
into
xchg
mov
lret
enter
sarb
sub
mov
sar
loope
adc
cmp
sbb
fwait
aaa
push
arpl
ret
jb
mov
iret
jp
push
repz
mov
and
lret
inc
lahf
cmp
ds
mov
or
xor
push
mov
sub
sbb
mov
test
outsb
jbe
fbstp
imul
lcall
sbb
jg
mov
sahf
xchg
push
cli
iret
negl
sbb
movb
push
fstpl
sbb
inc
or
pop
add
adc
int3
adcl
arpl
popa
in
push
js
jo
xor
shr
stos
ss
cld
popa
jnp
les
daa
inc
mov
push
xor
ss
fnstcw
sarl
nop
pop
jno
insl
cmp
jp
call
repnz
add
mov
test
lea
xor
pop
arpl
rclb
in
xor
xchg
sbb
dec
std
or
sub
pop
add
mov
orl
mov
shll
in
or
rcl
add
bound
pop
adc
imul
sbb
pop
inc
fildl
sub
leave
xchg
into
sahf
icebp
pop
pop
sbb
mov
xchg
insb
lock
enter
xchg
cmp
imul
je
push
les
mov
mov
fimull
aad
sahf
and
in
push
push
or
mov
push
and
loopne
test
jmp
jns
imul
cmpsb
inc
ja
inc
mov
mov
ret
xchg
cmc
push
test
xchg
pop
sahf
sbb
mov
arpl
jmp
int
faddl
fs
push
mov
fwait
pushf
inc
xchg
push
jmp
mov
test
push
clc
jo
sbb
in
insl
out
out
scas
xor
rorl
shll
xchg
cmp
xchg
mov
xor
and
lds
aas
mov
les
sub
mov
sti
jp
push
and
xor
lock
mov
sbb
out
outsb
mov
sub
xchg
loop
fistps
jnp
test
test
adc
mov
jl
pop
stc
jg
test
gs
inc
xorl
inc
cmpsb
push
mov
adc
out
sbb
inc
xor
or
pop
incb
aad
and
insl
jno
adc
fwait
hlt
mov
and
nop
pop
repnz
cmp
sahf
inc
sbb
filds
addb
insl
lcall
xor
ret
fs
out
aam
push
sti
in
addr16
push
repnz
fs
and
mov
pushf
cmp
loop
lahf
sub
into
test
xchg
xlat
jle
or
or
imul
sbb
sub
pusha
ljmp
enter
repz
add
mov
fdivl
test
push
xchg
sbb
rcr
jg
jno
push
pusha
cmp
jl
ja
pop
or
push
loope
xor
daa
call
outsl
out
dec
movsl
adcl
ss
push
stc
cmc
adc
and
loopne
loope
sub
cmp
call
in
lcall
push
cmpsb
cmp
in
mov
inc
or
xchg
mov
pop
shlb
dec
pop
add
clc
or
pop
hlt
test
push
push
sti
dec
pop
repz
pop
fwait
pop
mov
data16
push
pushf
popf
inc
inc
andl
adc
movsb
sub
xchg
jp
inc
or
lds
mov
fsubl
mov
test
out
push
ja
outsl
jns
mov
mov
scas
mov
xor
ja
aam
subl
push
je
orl
sbb
insl
pop
sarl
jg
scas
in
xchg
sar
popa
jne
dec
adc
aas
mov
shr
jge
xchg
or
and
roll
jecxz
lea
cli
lods
jle,pn
push
negl
ds
pop
dec
popf
cmp
imul
out
mov
jle
les
divl
out
adc
pop
dec
mov
ljmp
out
cmc
jnp
sti
scas
out
fwait
push
mov
aad
test
sub
xchg
jle
inc
test
mov
mov
popf
movsl
shll
int3
jle
cmp
aas
lcallw
test
gs
or
dec
loop
adc
inc
push
push
push
into
xchg
je
mov
pop
add
xor
lock
loop
jne
push
sub
mov
sub
push
sti
shll
and
in
adc
xorl
pushf
inc
push
add
gs
fidivrl
jle
pop
cmp
inc
and
icebp
pushf
jge
aam
das
test
pop
scas
addb
push
ljmp
stc
and
cmc
push
in
or
lahf
mov
adc
subl
jp
cmpsb
cmpb
cmpsb
mov
ljmp
pop
roll
jo
pop
std
fdivs
fwait
sub
push
enter
inc
lret
sbb
jle
or
cs
push
xchg
inc
xlat
pop
aam
xchg
or
mov
jle
test
inc
fisttpll
arpl
rclb
mov
push
inc
movsl
cs
pop
mov
aas
push
push
je
pop
inc
sahf
inc
das
xchg
int
in
cmp
jge
lcall
nop
xchg
test
je
stos
aad
dec
adc
add
mov
push
mov
mov
imul
enter
jmp
jmp
imul
out
mov
sbb
pmullw
xchg
sub
lcall
mov
sub
cmp
movsb
jl
scas
pop
stos
xor
mov
pop
add
push
pop
ja
ja
jb
xchg
gs
jo
adc
push
mov
push
jmp
mov
push
clc
cmp
sub
jp
dec
clc
pop
std
sub
aaa
mov
rolb
iret
sbb
aaa
mov
add
or
mov
mov
xor
inc
adc
fs
pushf
xor
test
mov
mov
jnp
jb
xchg
fnstcw
aad
and
add
pop
xor
sbb
inc
adc
inc
adc
leave
mov
jnp
cmc
cmp
inc
fadds
jp
movsl
pop
not
ja
mov
stc
inc
mov
jmp
subl
jg
mov
and
popa
jae
outsb
movsb
jae
add
mov
pop
sarb
sarb
pop
scas
xor
in
out
jne
jle,pn
in
in
imul
fiaddl
jmp
cmp
cwtl
inc
sti
jge
xchg
lock
dec
fdivrl
dec
adc
pop
mov
push
mov
idiv
fwait
inc
ja
xor
dec
fisttps
or
xchg
ffreep
fadd
sub
add
outsb
jge
fnstcw
data16
in
sti
push
outsl
jmp
jecxz
inc
sbb
inc
adc
inc
xchg
inc
add
call
pusha
xor
rcll
adc
xor
rolb
jne
xchg
test
lret
adc
dec
adc
inc
enter
insb
hlt
popa
imul
add
outsl
adc
xor
push
loopne
addr16
adc
negb
inc
ret
mov
xor
icebp
sbb
adc
pusha
lcall
cmp
lcall
fiadds
mov
sub
lds
test
sahf
aas
sub
cmp
pusha
inc
sbb
pop
rcrl
xchg
addr16
lret
adc
dec
xchg
inc
mov
mov
dec
out
sub
add
jl
fsubs
faddl
sbb
dec
jmp
or
pop
lods
xor
mov
jle
fdivl
or
inc
stos
pop
arpl
sahf
rcr
out
lret
xor
pop
mov
xor
pop
daa
ss
push
adc
mov
test
testb
sti
arpl
sbb
sbb
dec
or
mov
outsl
in
jae
das
lods
push
push
ljmp
adc
adc
loopne
fcompl
mov
cmp
dec
and
pop
loopne
std
inc
mov
xchg
popf
xchg
or
in
mov
movsl
sbb
sahf
in
inc
rcrl
and
out
clc
jg
pushf
dec
ljmp
in
nop
cmp
clc
xchg
cmp
hlt
sti
pusha
int
fadds
insl
push
jecxz
dec
jg
pop
push
cltd
mov
mov
mov
outsl
icebp
push
jp
pop
jmp
xchg
mov
mov
pop
stos
inc
mull
mov
in
jp
and
leave
arpl
lock
pop
jmp
mov
xlat
and
add
movsl
sub
in
fwait
sahf
cmp
divl
mov
xchg
sbb
inc
mov
mov
enter
lock
or
addr16
sub
xchg
pop
mov
mov
fnsave
push
mov
adc
cmp
xchg
xchg
add
std
data16
orb
insb
cmc
fistps
add
pop
add
push
sub
jo
cmp
sarl
pusha
jmp
xor
movsb
dec
hlt
mov
fldt
mov
lahf
inc
jmp
add
ja
mov
mov
test
or
cmp
pusha
in
mov
mov
pop
add
mov
xchg
inc
aas
repz
mov
xlat
test
cmc
data16
xchg
out
insb
out
adc
and
rcll
mov
inc
mov
pop
loop
leave
pusha
sbb
stos
pop
dec
clc
pop
xor
and
daa
es
lea
lds
loopne
mov
cwtl
hlt
fwait
inc
push
int
movsb
sub
pop
cmp
push
mov
xchg
push
xor
cmp
sub
sar
mov
int
les
mov
mov
enter
sub
xor
es
xor
lahf
sahf
sub
dec
sub
lcall
dec
and
push
rcrb
mov
icebp
push
jne
lods
cmpsb
je
pop
popa
mov
mov
jb
cwtl
les
cli
bound
fiaddl
leave
mov
jb
sbb
xchg
sbb
inc
push
stc
pop
mov
hlt
mov
aad
jmp
jl
and
dec
loopne
xor
arpl
pop
inc
je
repnz
xchg
push
decb
fbstp
adc
mov
test
xor
orl
jg
mov
jae
adc
inc
dec
xor
jp
push
mov
mov
xchg
das
ss
arpl
jp
mov
mov
sar
pop
gs
inc
adc
enter
add
test
addr16
lock
mov
arpl
xlat
outsb
mov
ret
cmpsb
fiaddl
adc
lahf
inc
imul
enter
jne
mov
jae
push
std
sub
lret
jmp
fidivs
scas
enter
lret
int
or
or
adc
scas
dec
cld
jge
xor
fnsave
dec
fucomip
jg
sbb
sti
pmullw
loopne
and
nop
cmp
insl
clc
arpl
jne
mov
mov
pusha
xchg
push
inc
mov
test
flds
es
mov
jl
ljmpw
rolb
push
sbb
cmc
gs
into
nop
and
outsl
xor
cwtl
cmp
sti
pop
cmp
jmp
imul
lret
dec
mov
or
scas
out
imul
jne
dec
jmp
push
rcrl
lret
mov
mov
push
mov
mov
adcb
jmp
scas
cmp
mov
mov
xchg
xchg
aaa
lret
lea
int
subb
insl
jne
push
mov
push
ja
jecxz
xchg
sbb
in
cwtl
mov
fs
push
pushl
shl
nop
in
out
xchg
inc
arpl
rolb
mov
std
pop
ret
mov
xor
inc
adc
sub
add
fwait
ror
mov
fstl
es
pop
cli
repz
adc
adc
dec
or
xor
jg
lock
clc
xchg
sub
adcb
cmpb
xchg
lcall
stos
push
sti
dec
je
icebp
lock
mov
push
insl
add
cmpsl
dec
nop
cmp
ret
pop
enter
xchg
jbe
rcll
pop
sbb
xor
adcb
sahf
cmp
hlt
bound
xchg
ja
mov
repnz
push
incl
mov
out
outsb
mov
mov
in
addl
data16
movl
xor
sub
insb
nop
mov
icebp
add
fwait
inc
je
clc
arpl
bound
daa
popa
jp
cs
int3
adc
aam
xor
jge
push
xlat
jp
push
xor
mov
scas
pop
adc
dec
push
lods
jg
push
jmp
cmp
daa
fdivrl
or
fsubrl
mov
sti
jecxz
ret
pop
mov
ret
cmc
pop
out
mov
mov
mov
adc
lds
jge
mov
push
mull
add
aas
jl
arpl
jne
jl
adc
inc
sub
mov
xchg
aad
adc
arpl
xchg
dec
test
lds
xlat
ja
and
fiadds
rcl
sarb
out
ds
pop
cli
xor
shrb
xchg
xchg
js
adc
rcll
mov
xchg
xorb
lcall
gs
inc
xor
lahf
ds
inc
push
push
xor
mov
leave
mov
pushf
adc
xchg
cld
insb
inc
push
test
adc
jmp
repz
call
clc
out
xchg
dec
int
repnz
imul
popa
out
outsl
mov
jno
mov
cmpsl
xor
sarl
and
in
push
adc
sbb
inc
adc
shll
push
mov
mov
xor
sti
xchg
push
movb
insb
in
inc
pop
mov
push
popf
rolb
and
inc
ds
fnstsw
in
add
arpl
imul
lahf
cli
pop
in
push
add
mov
xchg
sbb
xchg
inc
ret
fsubl
mov
jne
add
pop
clc
sub
cli
pop
divl
mov
mov
lock
fstpt
negb
cmp
jp
or
mov
lahf
add
nop
add
cmpsl
dec
rcll
fwait
adc
movsb
inc
arpl
popa
mov
sbb
and
mov
fcmove
sbb
mov
mov
cmpsb
adc
iret
shll
add
hlt
sub
mov
inc
lret
jns
iret
lret
jle
sbb
mov
dec
push
orl
push
in
or
cmpsb
cmp
pop
dec
les
adcb
into
shrl
xchg
and
int
pop
inc
push
mov
jp
subb
mov
pop
and
mov
push
inc
frstor
les
fidivs
dec
xor
imul
lock
xlat
push
movsl
or
fidivs
sub
pop
fs
xchg
xchg
jnp
loope
mov
mov
int
decb
cmp
cmp
xchg
push
pop
push
out
mov
cmp
lods
jne
ffreep
ret
pop
testl
loop
dec
push
mov
test
xchg
pushf
cmpsb
shlb
mov
out
test
adc
mov
xchg
sahf
sub
iret
mov
adc
lock
fbld
or
std
jae
mov
lea
imul
mov
mov
rclb
adc
mov
loopne
xchg
adc
dec
in
xor
mov
dec
imul
xchg
iret
mov
mov
rcr
push
in
or
cmpsl
ds
inc
lds
xchg
sub
shll
cwtl
push
and
pop
mov
js
subl
or
adc
sub
dec
xor
inc
fisubs
ret
repz
sbb
shrl
push
icebp
mov
aam
cmpsb
add
es
xchg
xchg
js
loop
mov
mov
lret
cld
pop
cmp
cmp
pop
out
mov
cmp
ffree
les
xchg
sub
pop
jecxz
dec
push
mov
subl
fwait
movsb
shlb
mov
out
test
aad
dec
or
jnp
pop
repz
pushf
sub
int
jp
in
dec
fistps
pop
cltd
xor
inc
data16
jno
mov
mov
aad
mov
mov
cmp
push
push
adc
mov
fdivrp
xchg
adc
dec
in
xor
mov
dec
insb
add
cmp
mov
mov
rcl
push
in
pop
repnz
and
je
pop
inc
pop
ja
xchg
sub
iret
mov
add
add
push
and
test
ds
leave
or
adc
rorb
adc
inc
ficomps
shlb
fidivl
sbb
aam
pop
data16
mov
rcll
cmpsl
add
fbstp
and
std
xchg
xchg
ja
jecxz
mov
mov
leave
push
sti
add
mov
dec
push
pop
out
mov
mov
ret
hlt
cld
xchg
sub
push
in
dec
dec
mov
subl
addr16
and
daa
push
aas
aas
dec
or
jns
pop
hlt
xchg
lcall
in
dec
fistps
ds
outsl
pop
mov
sbb
lods
insl
fsubp
mov
mov
rclb
adc
mov
fdivr
xchg
push
clc
dec
out
xor
mov
dec
insl
add
cmpb
mov
mov
iret
aam
in
add
daa
je
pop
inc
pop
jbe
xchg
sub
mov
ljmp
push
cmp
mov
cmpsb
mov
mov
loopne
hlt
adc
sub
dec
xor
fs
dec
fistps
mov
mov
or
test
sub
insb
pop
mov
mov
rcll
test
or
ja
and
push
pop
xchg
nop
jne
in
mov
mov
imul
add
shlb
mov
dec
push
pop
lock
aas
lahf
cmpsl
ja
fld
pop
repnz
xchg
sub
adc
jl
dec
mov
jg
add
sarb
out
xchg
inc
or
cmc
cwtl
sub
leave
mov
adc
ljmp
ss
insl
push
mov
sbb
stos
xlat
outsb
fsub
mov
mov
xor
adc
mov
xchg
or
das
sbb
jp
cmp
mov
mov
int
push
out
add
test
or
inc
pop
je
xchg
sub
int3
mov
call
shlb
cmp
mov
movsl
mov
mov
ficomps
nopl
ret
jnp
bound
loopne
sbbl
out
mov
or
xchg
pop
arpl
scas
mov
pop
call
or
js
and
push
pop
call
movsb
mov
mov
lds
testl
mov
dec
push
pop
icebp
test
aas
popf
cmpsb
js
fdivrs
xchg
sub
inc
dec
mov
jle
add
shll
lock
inc
xlat
cmp
movsl
jbe
pop
cmc
lea
jl
loopne
dec
loope
add
ljmp
push
xchg
xlat
outsb
movsb
cmp
cld
cmc
mov
xor
pop
dec
adc
mov
xchg
or
dec
out
cs
pop
inc
insl
add
cmpb
mov
mov
lret
rcrb
add
test
or
jb
xchg
sub
lret
mov
std
out
lcall
and
movsb
mov
mov
fcompl
or
jnp,pn
pusha
push
loope
sbbl
dec
push
ja
insb
pop
bound
mov
adc
cmp
xor
push
pop
add
mov
ret
insb
add
cmp
xor
mov
dec
push
pop
icebp
subb
pushf
mov
pop
out
notb
jge
dec
mov
jnp
add
xchg
pushf
shrb
mov
mov
and
inc
fdivrs
inc
push
movsl
jae
pop
testb
adc
out
loope
add
imul
mov
frstor
sub
dec
adc
jg
loopne
mov
xor
rcl
xchg
or
push
out
sub
pop
inc
outsb
add
scas
cwtl
mov
lret
out
add
stos
inc
push
and
push
aas
enter
xchg
sub
enter
in
fwait
push
sbb
push
push
mov
mov
fistpl
or
sub
inc
sub
dec
loope
sbbb
ljmp
push
ds
insl
pop
pop
movsl
cmp
jns
mov
int3
adc
aaa
push
xor
dec
pop
add
mov
ret
hlt
cld
cmp
sub
dec
pop
icebp
jg
stos
inc
fwait
mov
enter
xchg
sub
inc
inc
mov
js
add
imul
in
lock
or
cmp
push
movsl
jo
pusha
testl
jecxz
loope
add
jmp
mov
sbb
fcomp
movsb
cmp
testl
jle
loopne
mov
xor
rcl
xchg
push
repnz
call
pop
inc
outsl
push
jbe
cmp
stos
xchg
lea
int3
pop
out
std
ljmp
push
cmp
xchg
sub
nop
out
ret
dec
mul
add
imul
lock
mov
pop
testb
sub
adc
fs
loop
jle
xor
sarl
pop
cmp
xlat
outsb
push
pop
cmpsb
cmp
test
lret
sti
add
jp
sbb
leave
dec
push
add
lahf
test
mov
shrb
cli
cmp
and
dec
pop
bnd
stos
inc
cltd
sahf
jns
sarb
xchg
and
call
dec
jbe
push
popf
xchg
xchg
shrl
mov
mov
sbb
inc
fidivl
cmp
popa
clc
mov
jg
fsub
dec
loop
popf
xor
xor
add
mov
push
mov
fisubl
mov
cs
pop
pusha
dec
adc
js
popf
xor
into
aam
xchg
push
lock
call
pop
inc
outsl
push
je
cmp
stos
xchg
lea
int3
pop
lock
call
js
push
cmp
pusha
insl
jb
sub
rol
dec
mul
add
push
xor
mov
sahf
test
mov
lock
pop
testb
lds
jge
pop
fs
jecxz
jl
xor
iret
mov
and
xlat
outsb
push
pop
cmpsl
ds
jne
mov
enter
add
jnp
sbb
leave
dec
push
add
popf
test
mov
mov
ds
adc
repz
stos
inc
xchg
sahf
jp
sarb
cwtl
das
and
jg
inc
mov
jbe
push
popf
nop
xchg
aam
leave
mov
mov
sbb
inc
fidivl
push
popa
clc
xchg
jg
dec
jecxz
cld
popf
xor
xor
add
mov
pop
mov
fisubl
mov
les
dec
adc
jns
fwait
xor
int3
aam
xchg
add
daa
push
mov
inc
outsl
push
jb
cmp
stos
xchg
lea
out
inc
sbb
jns
push
cmp
pusha
imul
mov
les
pushf
adc
aam
dec
xor
mov
popf
addl
mov
pop
testb
das
movb
adc
arpl
xchg
jp
xor
mov
and
and
outsl
push
pop
test
lea
lea
adc
testl
xor
dec
push
add
fwait
cmpsb
and
out
clc
aas
sub
mov
jnp
lods
inc
xchg
pushf
jnp
into
mov
popa
call
or
cmpb
dec
je
pop
sahf
mov
and
mov
add
cmp
test
push
stc
test
adcb
fisttps
adc
sahf
xor
fs
mov
and
fsubs
es
pop
pop
inc
push
lods
js
jecxz
mov
xor
lret
cwtl
add
push
jmp
push
jo,pt
jo
cmp
and
cli
in
inc
push
sbb
adc
lret
outsl
cwtl
das
mov
ret
hlt
fldl
popf
push
push
aad
dec
das
and
pusha
imul
fnstenv
shll
add
xor
inc
and
dec
in
js
xor
lret
mov
and
push
fnstenv
pop
test
mov
les
jl
pop
xor
dec
push
add
lcall
pop
in
idivb
daa
jg
hlt
jns
lods
inc
xchg
lcall
out
cltd
xor
or
cmpl
pop
or
lds
repz
add
xor
adc
test
sbbl
push
stc
lahf
sub
imul
dec
mov
and
cmpsl
ds
stc
nop
and
inc
pop
scas
ja
jecxz
scas
cwtl
xor
cwtl
add
push
ljmp
jno
outsl
jne
aam
nop
es
repnz
jecxz
inc
adc
ss
bound
cwtl
das
lahf
mov
cmpb
pop
sahf
or
cs
mov
mov
popa
clc
add
jg
push
pop
dec
in
ja
xor
mov
add
lret
cld
add
and
sbb
test
mov
ret
push
lods
hlt
std
in
das
push
xor
lcall
and
in
hlt
aas
and
inc
pop
hlt
ja
scas
inc
xchg
cwtl
jnp
lret
arpl
jmp
xor
ds
jo
or
ret
lods
daa
mov
push
add
xor
adc
orl
sbb
fisttpl
or
mov
add
mov
and
aam
ds
repnz
xchg
and
lds
sbb
lods
xchg
ss
into
add
sbb
and
insl
jae
aad
mov
repz
scas
inc
adc
jnp
dec
xor
arpl
cltd
xor
mov
or
inc
sub
mov
xchg
jle
fldt
shlb
add
xor
cmp
adcb
pop
dec
out
jne
xor
loope
mov
and
push
stos
inc
xchg
nop
mov
rcll
repnz
out
sub
dec
add
jg
push
jmp
mov
jb
ljmp
sub
inc
pop
cmc
jne
scas
inc
xchg
xchg
jl
enter
in
lcall
cmp
dec
outsb
pop
or
shrl
mov
inc
adc
orl
dec
in
mulb
add
mov
and
shrl
xchg
and
pop
pop
inc
sbb
lods
xchg
ss
int
cltd
out
jmp
and
mov
imul
mov
les
cmc
fildll
adc
int3
arpl
xor
mov
lahf
or
xlat
outsb
inc
sub
mov
xchg
jl
fldt
into
stc
decl
xor
cmp
sbbl
mov
movsl
lods
outsb
add
clc
add
jae
push
stos
inc
test
sahf
cmpsb
leave
pusha
fdivrs
out
sub
aaa
into
inc
dec
add
in
xchg
sahf
and
call
or
divb
mov
xchg
jge
mov
gs
fwait
xor
add
test
cmp
mov
mov
loopne
mov
cld
inc
fisubrs
dec
gs
jg
xor
mov
sbbl
fmuls
or
mov
add
inc
mov
and
shrl
xchg
and
sbb
stos
xchg
aaa
into
lret
add
push
push
and
imul
sub
scas
inc
unpckhps
inc
xor
bound
xor
mov
or
inc
sub
mov
xchg
jp
fsubrl
int3
arpl
std
pop
xor
cmp
sbbb
pop
push
call
mov
les
and
sbb
je
push
stos
inc
subl
popf
movsb
leave
pusha
mov
out
sub
cmp
inc
dec
add
in
xchg
pushf
and
out
inc
fcomps
or
divb
mov
mov
iret
data16
fwait
xor
add
test
push
or
xchg
sub
cmc
mov
sti
dec
fildll
adc
jle
xor
mov
test
rcl
dec
out
repz
add
inc
rclb
mov
scas
cltd
fidivs
iret
test
xchg
pop
and
pop
push
inc
sbb
test
cmp
ret
leave
add
adc
ss
push
mov
cmc
icebp
fdivl
adc
das
into
gs
data16
xor
mov
or
aas
daa
sub
xchg
jns
lret
fs
cld
add
sbbl
push
push
call
mov
ret
mov
and
pop
fidivs
dec
stos
inc
subl
pusha
aam
sbb
daa
adc
rolb
add
out
xchg
lcall
out
inc
fcomps
ds
imulb
mov
lea
shlb
jecxz
xor
ss
movsb
xchg
sub
fcomp
cmc
mov
cli
dec
loopne
xor
stos
popa
dec
addr16
jge
xor
mov
test
aam
out
repnz
add
inc
rcrl
mov
lods
cwtl
fbstp
int
inc
jmp
xchg
sbb
sbb
cmpsb
nop
cmp
rol
fwait
clc
loop
out
adc
and
data16
inc
fcomps
mov
mov
or
jle
inc
sub
pushf
xor
mov
push
jmp
or
jo
and
testl
loop
gs
cli
add
xor
test
dec
push
push
jmp
mov
rol
repz
mov
inc
dec
lods
inc
jg
std
xchg
lcall
mov
repz
sarl
inc
push
popf
ja
pop
out
xchg
cwtl
and
leave
mov
or
sbb
xchg
sub
cmp
imull
mov
mov
shrl
loope
xor
add
xchg
xor
push
push
push
movsl
test
sub
lea
dec
loope
cs
pop
dec
push
leave
mov
xchg
add
movsb
cmp
and
ret
js
and
lret
stos
inc
std
jmp
leave
pusha
push
cmp
mov
jb
jle
mov
sarl
loopne
out
adc
and
dec
xor
fs
fstps
mov
mov
or
jg
inc
sub
addr16
bound
test
rorl
add
fidivl
and
rcll
mov
fbld
data16
clc
add
sbb
push
push
ljmp
jno
xlat
mov
sub
loopne
inc
dec
lods
inc
jge
xchg
cwtl
sahf
lret
sarb
jmp
sarb
pop
pop
lock
xchg
and
push
loop
inc
ficompl
add
sub
imul
mov
imul
lock
xor
movsl
addb
ret
aam
testl
pop
dec
push
lret
xchg
add
movsb
cmp
and
push
push
inc
ret
ja
and
xchg
loopne
lret
cld
out
xchg
sbb
lret
cmp
imul
mov
les
popf
cmc
ficomps
movhps
or
lcall
clc
in
mov
or
adcb
sub
addr16
popa
sahf
xor
scas
mov
push
out
or
add
and
rcll
nop
lea
fbld
data16
testb
int
pop
test
push
push
jmp
push
cmp
rcrl
nop
daa
sub
loopne
inc
dec
scas
inc
jl
xchg
xchg
popf
int3
arpl
mov
mov
lock
inc
or
lea
ja
loopne
inc
fistpl
add
stc
push
mov
xchg
shrb
ficomps
xchg
xor
addb
ret
rcr
clc
loope
sub
lods
pop
inc
push
lret
scas
cwtl
xchg
add
movsb
cmp
and
push
aas
ret
jbe
and
leave
lods
inc
sti
in
xchg
pop
sbb
sbb
imul
sarl
fcompl
or
jbe,pn
pusha
push
xchg
sub
aam
dec
push
or
shlb
pusha
lahf
ss
jp
test
or
incb
fdivl
pop
sub
push
pop
cli
jne
insb
inc
cs
jge
fwait
decb
and
imul
js
iret
dec
or
orb
mov
mov
mov
repz
add
adc
cmp
pop
roll
lret
add
dec
testb
dec
push
and
mov
lcall
mov
xor
adc
jg
dec
pushf
std
les
mov
in
xor
mov
push
cmp
pop
xorl
sbb
sub
xchg
xchg
add
jns
jecxz
lcall
jge
outsb
movsl
pop
scas
orl
aam
je
push
fcmovne
cld
bound
dec
or
pop
fs
pop
push
jmp
mov
std
mov
outsb
cltd
jecxz
vmovsldup
fidivl
mov
aad
out
aas
test
test
scas
mov
cmp
xrelease
mov
icebp
pushl
icebp
inc
inc
cmc
loop
testb
and
add
mov
fwait
sti
jae
and
pop
inc
xor
dec
stos
push
pop
adc
fsts
repz
add
sub
xchg
add
divb
clc
jl
sub
test
mov
ds
pop
sub
xchg
test
cmpsb
outsb
js
repnz
mov
fs
or
push
mov
data16
negb
dec
loopne
in
call
pop
dec
outsl
jne
loopne
loopne
in
cmpsl
add
xchg
dec
test
add
jno
pop
aad
cmpsl
xor
lods
daa
mov
xchg
pop
addb
aas
mov
nop
jne
fisubrl
iret
stc
arpl
cmp
pop
cmp
push
dec
je
jl
out
inc
dec
mov
fldt
or
stc
push
jp
ss
mov
pop
gs
leave
add
out
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
sub
shll
sub
adc
jb
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
test
xchg
rcr
add
pusha
jg
mov
jmp
jb
and
cmpsb
pop
xlat
jbe
dec
push
in
mov
leave
clc
mov
xorb
jle
pop
fnsave
cmp
lods
cmp
ret
.byte
