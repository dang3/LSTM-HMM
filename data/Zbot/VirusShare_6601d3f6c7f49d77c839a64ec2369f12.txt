push
mov
sub
movl
lea
mov
mov
add
mov
cltd
idiv
mov
lea
mov
mov
or
mov
add
cltd
idiv
mov
mov
pop
ret
push
mov
sub
movl
movl
mov
cmp
je
movl
lea
mov
lea
mov
mov
mov
mov
add
imul
mov
movl
movl
lea
mov
mov
mov
imul
add
mov
call
jmp
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
movl
lea
mov
mov
mov
and
add
imul
mov
movl
mov
imul
imul
mov
movl
mov
sub
mov
movl
movl
mov
cmp
je
mov
cmp
jl
call
jmp
lea
mov
mov
mov
or
mov
add
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
call
movl
lea
mov
mov
mov
sub
add
mov
movl
lea
mov
mov
mov
or
mov
add
cltd
idiv
imul
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
mov
or
mov
or
sub
imul
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
imul
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
jmp
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
movl
movb
movl
push
push
lea
push
push
call
mov
movl
lea
mov
mov
and
mov
mov
sub
mov
mov
push
mov
push
call
add
movl
jmp
mov
ret
mov
call
movb
movl
cmpl
je
movzbl
test
je
movl
mov
cmp
jne
movl
movl
lea
mov
mov
and
mov
imul
mov
sub
mov
push
mov
push
call
add
movl
cmpl
je
mov
sub
mov
jmp
movl
cmpl
jne
movl
lea
mov
mov
mov
or
sub
imul
mov
jmp
movl
lea
mov
lea
mov
mov
mov
or
mov
add
cltd
idiv
mov
sub
mov
movl
lea
mov
mov
mov
add
mov
sub
mov
cmpl
jl
movl
mov
push
mov
push
call
add
movl
call
push
push
call
add
movl
movl
movl
mov
and
sub
imul
mov
lea
mov
mov
mov
and
mov
or
imul
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
je
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
imul
imul
mov
mov
add
mov
cltd
idiv
mov
jmp
movl
movl
lea
mov
mov
mov
imul
add
mov
movl
mov
and
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
mov
mov
sub
imul
mov
cmpl
jne
movl
mov
add
mov
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
cmp
jl
jmp
movl
lea
mov
mov
and
mov
sub
add
mov
movl
lea
mov
mov
mov
imul
add
mov
push
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
xor
je
movl
movl
mov
or
add
mov
sub
mov
lea
mov
mov
mov
add
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
mov
add
add
mov
jmp
call
movl
mov
add
mov
cltd
idiv
imul
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
imul
mov
lea
mov
mov
and
mov
mov
and
imul
mov
call
jmp
cmpl
jl
movl
mov
and
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
imul
imul
mov
jmp
jmp
movl
jmp
mov
add
mov
cmpl
jge
call
call
movl
movl
mov
and
mov
or
imul
mov
jmp
movl
movl
lea
mov
lea
mov
mov
mov
and
mov
add
imul
mov
movl
mov
add
mov
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
mov
mov
and
sub
mov
call
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
mov
or
imul
add
mov
jmp
movl
lea
mov
lea
mov
mov
mov
mov
imul
imul
mov
jmp
mov
add
mov
pop
ret
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
call
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
or
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
or
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
sub
mov
mov
add
mov
sub
mov
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
and
mov
add
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jl
movl
movl
mov
add
mov
cltd
idiv
imul
mov
movl
mov
add
imul
mov
call
jmp
movl
jmp
mov
add
mov
cmpl
jge
call
movl
movl
mov
sub
mov
movl
lea
mov
movl
mov
mov
and
imul
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
mov
movl
mov
add
mov
movl
mov
and
mov
add
cltd
idiv
imul
mov
jmp
movl
cmpl
je
call
movl
mov
or
mov
sub
imul
mov
lea
mov
mov
and
mov
mov
or
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jl
movl
movl
lea
mov
mov
mov
imul
mov
movl
mov
add
mov
cltd
idiv
imul
mov
movl
mov
add
mov
cltd
idiv
mov
sub
mov
movl
cmpl
jg
call
movl
movl
mov
or
mov
sub
mov
mov
add
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
call
jmp
call
mov
pop
ret
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
movl
movl
mov
cmp
jl
cmpl
jne
movl
mov
add
mov
cltd
idiv
add
mov
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
sub
mov
mov
and
add
add
mov
jmp
movl
lea
mov
mov
mov
add
add
mov
movl
movl
mov
add
imul
mov
lea
mov
mov
mov
add
imul
mov
movl
lea
mov
lea
mov
mov
mov
mov
imul
mov
sub
mov
cmpl
jne
movl
movl
mov
or
mov
add
cltd
idiv
mov
sub
mov
call
movl
mov
add
imul
mov
jmp
movl
mov
add
mov
cltd
idiv
imul
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
mov
cmp
jg
movl
movl
mov
sub
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
call
call
call
jmp
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
mov
imul
mov
movl
lea
mov
mov
and
mov
sub
imul
mov
cmpl
je
lea
mov
mov
mov
imul
mov
sub
mov
call
movl
jmp
mov
add
mov
cmpl
jge
call
movl
mov
and
add
add
mov
movl
mov
imul
mov
jmp
jmp
movl
jmp
mov
add
mov
cmpl
jge
call
movl
lea
mov
mov
mov
imul
mov
call
jmp
movl
mov
add
mov
cltd
idiv
imul
mov
movl
mov
add
imul
mov
mov
pop
ret
int3
int3
push
mov
sub
call
call
mov
cmpl
je
jmp
movl
lea
mov
mov
and
mov
mov
sub
imul
mov
movl
lea
mov
mov
mov
sub
mov
lea
mov
mov
mov
and
mov
sub
imul
mov
mov
mov
mov
movl
mov
and
imul
add
mov
mov
push
call
add
mov
mov
mov
mov
add
mov
cmpl
jb
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
movl
mov
sub
mov
sub
mov
push
call
mov
movl
lea
mov
mov
add
mov
cltd
idiv
mov
movl
mov
imul
add
mov
lea
mov
mov
mov
imul
add
mov
mov
mov
mov
push
mov
push
push
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
and
mov
imul
mov
cmpl
je
movl
movl
mov
or
add
mov
call
movl
jmp
mov
add
mov
cmpl
jge
call
call
movl
lea
mov
mov
mov
sub
imul
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
call
call
jmp
call
movl
mov
add
mov
cltd
idiv
add
mov
mov
pop
ret
push
mov
sub
movl
movl
lea
mov
movl
mov
and
mov
mov
sub
mov
call
call
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jg
call
jmp
mov
add
mov
cltd
idiv
imul
mov
call
call
movl
movl
mov
mov
jmp
movl
movl
mov
sub
mov
sub
mov
lea
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
mov
and
add
mov
call
movl
mov
sub
mov
movl
mov
or
mov
and
sub
mov
sub
mov
mov
pop
ret
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
je
movl
mov
sub
add
mov
call
movl
lea
mov
movl
movl
mov
mov
or
mov
and
sub
imul
mov
jmp
call
call
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
jmp
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
movl
movl
mov
add
mov
cltd
idiv
mov
mov
add
mov
movl
mov
and
mov
or
add
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
mov
add
add
mov
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
call
call
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
movl
movl
mov
or
imul
mov
call
movl
mov
add
add
mov
lea
mov
mov
mov
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
ret
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
jmp
jmp
jmp
out
add
adc
add
cmp
add
add
pop
cmp
add
add
jle
add
mov
add
sahf
cmp
add
add
fidivrl
add
ljmp
add
cmp
add
cmp
add
cmp
add
add
add
add
mov
add
lcall
add
add
fidivl
add
ljmp
add
aaa
add
sbb
add
es
add
insb
add
inc
aaa
add
push
aaa
add
data16
add
jl
add
mov
add
xchg
aaa
add
cmpsb
aaa
add
mov
aaa
add
fidivs
add
in
aaa
add
pop
add
dec
add
xor
add
and
add
push
add
clc
xor
add
int3
xor
add
mov
add
pushf
xor
add
jbe
add
xor
push
xor
add
xor
add
sub
add
add
add
adc
add
idivb
add
cmp
add
cmp
add
cmp
add
cmp
add
add
mov
add
add
push
cmp
add
xor
add
inc
cmp
add
push
cmp
add
add
add
add
jle
add
nop
cmp
add
cmp
add
add
adc
add
push
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
add
bound
add
push
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
add
in
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
push
cmp
add
add
add
add
mov
cmp
add
cmp
add
add
add
and
bound
je
fs
popa
je
outsl
outsb
and
cs
and
and
outsb
imul
insb
add
add
outsb
imul
inc
arpl
and
je
and
imul
jne
data16
jae
jp
and
and
and
popa
insb
insb
add
add
push
push
inc
push
push
push
pop
inc
push
pop
dec
inc
inc
dec
dec
dec
inc
pop
inc
inc
inc
dec
push
dec
push
pop
push
push
dec
push
inc
pop
inc
pop
inc
inc
inc
inc
inc
inc
incl
inc
add
add
add
jmp
sub
clc
sub
xorb
add
aaa
add
dec
xor
add
add
add
sbb
add
add
add
fdivrl
add
loopne
add
cmp
add
inc
cmp
add
xor
add
add
add
xor
add
sub
add
cmpb
hlt
xor
add
cmp
add
cmp
add
cmp
add
add
pop
cmp
add
add
jle
add
mov
add
sahf
cmp
add
add
fidivrl
add
ljmp
add
cmp
add
cmp
add
cmp
add
add
add
add
mov
add
lcall
add
add
fidivl
add
ljmp
add
aaa
add
sbb
add
es
add
insb
add
inc
aaa
add
push
aaa
add
data16
add
jl
add
mov
add
xchg
aaa
add
cmpsb
aaa
add
mov
aaa
add
fidivs
add
in
aaa
add
pop
add
dec
add
xor
add
and
add
push
add
clc
xor
add
int3
xor
add
mov
add
pushf
xor
add
jbe
add
xor
push
xor
add
xor
add
sub
add
add
add
adc
add
idivb
add
cmp
add
cmp
add
cmp
add
cmp
add
add
mov
add
add
push
cmp
add
xor
add
inc
cmp
add
push
cmp
add
add
add
add
jle
add
nop
cmp
add
cmp
add
add
adc
add
push
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
add
bound
add
push
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
add
in
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
push
cmp
add
add
add
add
mov
cmp
add
cmp
add
add
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
fiaddl
dec
jae
bound
addr16
jb
jae
outsb
je
mov
inc
gs
imul
je
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
ret
outsl
jb
popa
je
gs
popa
addr16
add
add
push
popa
imul
insb
gs
bound
arpl
add
add
gs
js
stos
add
outsl
bound
dec
outsl
arpl
add
add
imul
je
jo
gs
bound
arpl
js
add
je
dec
popa
outsb
fs
add
add
push
popa
imul
insb
gs
bound
arpl
add
insl
jo
jb
push
je
imul
add
imul
outsl
jne
arpl
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
inc
jb
popa
je
inc
jbe
outsb
je
add
ret
add
jb
popa
je
gs
popa
addr16
add
cltd
add
je
imul
gs
add
add
imul
js
mov
jo
gs
jb
jns
and
jo
jb
push
je
imul
add
imul
imul
insb
gs
bound
arpl
add
outsl
bound
push
outsb
insb
outsl
arpl
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
add
jp
outsl
push
gs
jne
arpl
add
add
outsl
jae
dec
popa
outsb
fs
gs
add
gs
imul
pusha
add
gs
inc
imul
gs
gs
inc
imul
jae
jb
outsb
inc
add
and
inc
gs
imul
bound
gs
add
call
fs
gs
jne
arpl
add
add
je
jb
outsl
arpl
fs
js
push
add
bound
inc
jb
add
cmp
insb
jae
jb
outsb
push
add
xchg
add
je
jb
outsl
jb
outsl
fs
test
inc
gs
push
dec
outsl
arpl
add
popa
je
inc
jbe
outsb
je
add
daa
add
je
imul
bound
gs
add
mov
bound
inc
insb
insb
outsl
arpl
xchg
add
je
gs
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
inc
add
pusha
add
gs
je
push
imul
inc
add
je
outsl
jns
imul
add
je
gs
je
je
add
add
jbe
push
imul
fiadds
dec
gs
popa
addr16
gs
mov
inc
jb
ja
outsl
arpl
push
arpl
add
push
jae
push
imul
arpl
add
sub
push
gs
gs
jae
inc
popa
jo
jne
add
cmc
add
data16
je
arpl
xchg
add
outsl
ja
imul
jns
arpl
addl
imul
outsb
addr16
add
inc
add
imul
arpl
outsb
add
movsb
add
arpl
outsl
jo
jo
outsb
jne
add
imul
popa
jae
inc
add
inc
add
je
arpl
gs
imul
add
imul
popa
jae
push
add
inc
add
je
popa
jo
jne
add
addl
gs
imul
jae
add
add
fs
je
imul
inc
gs
insb
imul
je
or
inc
gs
jne
jae
jb
outsl
jae
add
insb
popa
je
push
arpl
add
je
jne
dec
outsb
jne
add
add
insb
gs
jae
inc
inc
add
push
outsb
fs
gs
popa
addr16
add
xchg
push
gs
imul
js
push
add
popa
add
gs
je
push
imul
push
add
add
arpl
outsb
jne
je
insl
add
inc
gs
outsb
jne
mov
fs
arpl
inc
add
push
imul
outsl
arpl
add
je
outsl
jns
arpl
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
jmp
inc
gs
arpl
gs
imul
add
je
outsl
jns
outsb
jne
add
push
outsl
jae
dec
gs
popa
addr16
add
cmp
inc
gs
outsb
jne
je
imul
add
dec
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
add
push
popa
jae
dec
gs
inc
jb
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
inc
outsl
push
outsb
imul
imul
xor
cs
insb
add
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
addr16
jb
popa
je
dec
gs
add
dec
outsl
outsl
imul
arpl
jne
je
imul
je
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
add
je
arpl
imul
imul
arpl
add
addr16
gs
gs
dec
gs
add
add
gs
push
gs
imul
jne
add
inc
add
push
popa
insb
imul
add
outsb
push
push
push
outsl
imul
lret
add
addr16
insb
outsl
jae
dec
gs
or
inc
gs
arpl
imul
imul
arpl
add
addr16
jb
popa
je
dec
gs
js
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
push
add
je
imul
imul
je
outsl
jb
je
add
add
arpl
outsl
imul
gs
bound
jae
imul
inc
push
dec
xor
cs
insb
add
jne
push
dec
inc
imul
jb
outsb
je
add
inc
dec
dec
xor
cs
insb
add
add
js
gs
pop
push
gs
add
dec
push
push
inc
push
push
cs
insb
add
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
insl
fs
outsb
add
pop
pop
addr16
popa
imul
lidtl
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
mov
pop
arpl
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
mov
add
add
add
fwait
pop
dec
lods
outsl
in
roll
dec
xchg
hlt
cmp
push
int
adc
or
adc
int3
repz
orb
cli
sub
push
mov
repnz
ss
das
and
hlt
jmp
push
xchg
jmp
scas
scas
call
jo
pop
xchg
sub
xchg
std
outsl
lds
jmp
js
jb
cmpsl
dec
mov
inc
negb
insb
push
jae
fs
push
fbld
pop
pop
push
dec
push
sbb
dec
fs
mov
mov
stos
or
push
push
pop
outsb
mov
mov
dec
mov
pop
outsl
out
mov
les
mov
inc
cmp
jns
pop
fistl
pop
call
cmp
mov
add
aam
mov
dec
mov
inc
nop
dec
jns
pop
jno
lock
adc
add
fcoms
push
aaa
sub
nop
dec
bound
mov
or
cmp
fistpll
mov
mov
jns
pop
adc
xchg
sub
cmp
inc
mov
cld
push
or
cli
jne
ret
nop
and
mov
stc
pop
jl
dec
mov
inc
scas
jnp
and
test
test
mov
dec
fimull
js
pop
pop
adc
xchg
push
andl
je
xor
pop
lods
jle
sbb
and
xchg
xor
push
fists
jnp
jp
mov
mov
dec
stc
xor
stos
jae
adc
jnp
and
ret
out
in
pop
fucomip
pop
and
push
subl
push
jne
mov
lret
mov
cmp
add
in
push
iret
add
mov
cmp
orb
jo
xor
sahf
fbstp
jno
inc
mov
mov
xchg
add
dec
cmp
jl
jbe
sbb
orl
mov
and
in
xorb
adc
inc
in
push
jns
pop
mov
sbbb
notl
lods
into
testb
das
push
jo
sub
jmp
imul
inc
out
loope
repz
mov
leave
jmp
stc
inc
mov
aaa
and
cli
pop
mov
xor
push
sub
mov
or
sti
mov
push
pop
sub
push
mov
or
fildll
jno
dec
inc
mov
mov
mov
cltd
nop
push
iret
adc
lock
lahf
xchg
jo
jge
pop
push
dec
push
movsl
aaa
das
fists
xchg
test
nop
sub
and
mov
stc
or
add
and
and
inc
or
mov
xchg
add
imul
and
jl
and
lret
repz
es
push
les
adc
xchg
pop
sbbl
hlt
pop
inc
mov
sub
mov
add
pop
cld
loope
dec
int
aad
jae
adc
mov
loopne
push
and
push
int3
sub
call
lock
xchg
and
jae
je
xchg
rorl
push
pop
sub
push
and
int
hlt
nop
ror
nop
clc
sbb
out
mov
jb
ret
adc
mov
and
test
xor
mov
mov
inc
lock
aas
outsl
xchg
push
mov
lcall
and
testl
pop
outsl
mov
and
jae
adc
lods
add
xchg
xchg
xorb
clc
push
mov
nop
pop
inc
add
outsb
fcomps
and
adcb
clc
or
lock
push
mov
ficoml
outsb
add
mov
out
sbb
cmp
pushf
pop
shrb
pop
fmul
mov
xor
pause
dec
pop
pushf
xor
ds
stc
push
cmpsl
xchg
pop
in
xchg
les
sub
in
or
mov
mov
js
cli
loope
lcall
fmull
outsl
rcll
sbb
insb
insl
scas
movsb
cld
or
xor
mov
es
in
in
push
test
movsl
into
fistpl
xor
xor
stc
movsb
pop
icebp
cmp
push
mov
popf
adc
pslld
faddl
pop
je
adc
dec
insb
xor
pop
hlt
rorb
hlt
and
dec
test
xchg
add
cmpsb
cwtl
xor
dec
or
dec
std
scas
and
cs
fsubr
lock
out
movsb
dec
cmp
xchg
addr16
add
jo
add
fwait
loopne
xor
mov
dec
mov
icebp
outsl
and
mov
sahf
ficoms
push
sar
sbb
enter
pop
js
maxps
or
and
dec
mov
sub
mov
pop
fwait
xchg
mov
fdiv
add
std
mov
dec
ja
dec
mov
sti
outsb
lock
outsl
add
xlat
fistpl
jno
lahf
test
aas
in
cwtl
pop
test
xchg
or
mov
push
icebp
mov
fdivs
rclb
fildll
fcompl
addr16
popf
bound
jg
out
cwtl
out
and
jo
xchg
cld
sub
fiaddl
ret
jnp
pop
dec
and
fwait
pop
lcall
xchg
sti
jg
xchg
adc
movsb
xchg
add
push
pop
jge
int3
fwait
mov
sbb
imul
sbb
jl
mov
dec
or
cmc
cmp
mov
or
test
push
dec
or
cwtl
adc
imul
inc
push
mov
add
push
fistl
testb
xor
inc
fidivrl
inc
scas
or
int3
jmp
rorl
hlt
push
shrl
in
push
adc
xchg
das
addb
insb
rclb
or
xchg
ud1
movsl
mov
mov
fwait
or
add
mov
popl
or
orl
cwtl
jg
adc
cmp
out
in
sbb
int3
or
test
inc
pop
mov
cltd
inc
out
jns
scas
pop
xor
sahf
sbb
sti
xlat
outsl
or
hlt
push
adc
or
push
daa
xor
pop
pop
add
mov
add
inc
push
jo
sarb
iret
xchg
mov
inc
sbb
mov
dec
or
mov
dec
cwtl
push
stc
push
mov
out
bound
cmc
xchg
jl
push
pushf
jns
roll
mov
aaa
enter
mov
dec
and
add
mov
jnp
out
aad
movl
int
xchg
add
push
fisttpll
incl
xlat
shl
movsb
imul
outsb
mov
cmp
jns
xor
mov
xchg
mov
fnstenv
and
test
in
cmp
ja
inc
inc
adc
mov
pop
mov
cmpb
stos
cmp
repnz
inc
enter
xor
int3
mov
sbb
push
jp
xor
cld
rcr
push
cmp
and
andl
inc
or
xor
into
push
jl
fwait
xchg
pop
xor
xchg
imul
push
orl
add
out
sbb
cld
cmc
xorps
mov
mov
nop
pop
mov
push
cmpsb
xchg
xor
mov
or
inc
stos
enter
lahf
and
aaa
mov
or
lock
and
and
arpl
mov
push
outsb
add
adc
xor
int
cmovle
adc
pop
int
xchg
int
sbb
xchg
mov
adc
push
popl
adc
in
rcl
jne
xlat
mov
xlat
aad
fbstp
push
addr16
jmp
pop
addr16
loopne
addr16
call
jge
outsb
fistpll
outsl
and
popa
loopne
addr16
jmp
andb
add
jmp
test
jmp
add
jmp
shlb
jmp
adc
sbb
or
and
adc
fnstenv
repnz
fnstenv
repnz
repnz
fnstenv
bnd
flds
bnd
inc
repnz
flds
ljmp
repnz
orb
loop
clc
out
mov
jecxz
lea
or
pusha
inc
enter
lock
fstpt
and
mov
inc
mov
jnp
push
add
clc
test
xorl
cs
pop
inc
sub
cmp
movsl
inc
test
test
mov
ret
cmc
jae
dec
sti
mov
jnp
je
cwtl
jg
loope
dec
mov
dec
push
sub
test
mov
pop
xor
andb
fadd
push
sbb
push
cmp
sysret
pop
push
imul
add
pusha
fstpt
ds
xorb
stos
out
or
sbb
cs
adc
mov
push
fnstsw
fdivrs
xchg
fldcw
push
dec
unpcklps
add
inc
jl
jg
fs
call
mov
fs
out
fs
call
cli
jno
xlat
scas
fstl
jg
fstl
jg
fst
jg
fstl
jg
fstl
jg
fst
jg
fstpl
jg
fstpl
jg
fstp
jg
fstpl
jg
fstpl
jg
fstp
jg
fstpl
jg
fstpl
push
mov
aad
mov
mov
cmp
fs
lock
call
jno
sbb
mov
icebp
jno
shll
jno
shll
cmpsb
shlb
jno
shll
jno
shll
movsb
shlb
jno
shll
mov
shll
vpinsrd
jno
shll
jno
shll
jno
shll
loopne
mov
shl
push
xchg
outsl
iret
scas
jmp
fsubr
jl
loopne
fs
scas
fs
out
fs
xor
jo
mov
mov
jae
lock
xor
jno
mov
mov
jb
icebp
fs
xor
jb
mov
mov
jno
repnz
xor
jae
mov
mov
jo
repz
xor
jmp
je
mov
call
xor
fs
call
ja
mov
call
cmp
js
mov
call
cmp
jns
mov
call
cmp
jp
mov
call
cmp
jnp
mov
call
jge
cmp
movsl
jle
xor
push
inc
xor
push
xor
push
inc
xor
add
mov
orl
add
mov
loop
leave
pushf
loope
stos
lea
sub
mov
shl
shlb
add
loope
jg
in
orl
loopne
dec
sbb
and
loope
dec
daa
loope
jg
loopne
dec
and
or
loope
mov
sub
or
pop
loope
dec
aaa
loope
jg
loope
dec
xor
push
jg
loope
dec
aas
loope
push
sub
pop
aas
insb
inc
pop
fdivrl
push
adc
cmp
ja
adc
mov
ja
adc
jg
hlt
adc
in
stc
mov
adc
aas
ja
adc
mov
jbe
adc
pmaxub
mov
test
xor
ljmp
jne
ret
push
ss
adc
incl
stos
xor
lds
negb
push
mov
test
mov
call
stc
negl
stos
lea
jmp
mov
sub
jae
stos
cli
sbb
sub
stc
sbb
in
lea
push
sub
xchg
dec
sub
mov
je
push
loopne
fistl
leave
ja
adc
mov
xchg
lock
mov
lds
push
jns
xor
fnstsw
fistpl
js
fwait
loopne
fcmovnu
lock
lock
mov
mov
fnclex
lock
sbb
jp
mov
lock
xchg
lock
aam
mov
fistl
aas
fistl
lock
fistl
fistl
lock
fistl
and
xchg
lock
fcmovnbe
lock
fistpl
and
shll
fistpl
lock
shll
repz
xchg
mov
adc
push
mov
adc
jne
cmp
jne
mov
jnp
sub
mov
lea
pop
call
cmc
stos
cmp
push
dec
popa
movq
pxor
imul
push
xor
pshufw
mov
loopne
cltd
dec
scas
push
xor
outsl
push
bnd
adc
add
xchg
loopne
jg
loope
pop
adc
jg
shl
addr16
loopne
jg
loope
movhlps
test
shl
in
xchg
loopne
jg
loope
jg
loope
jg
loope
jg
loopne
jg
fistps
aam
pop
jae
popa
lahf
ja
pusha
fistpll
pusha
and
popa
pusha
jnp
pusha
mov
jnp
pusha
and
popa
bound
pusha
arpl
mov
loop
test
movsl
sbb
or
es
xchg
lea
lea
push
push
sub
jno
shlb
stos
mov
cmp
movsl
outsb
pop
aad
mov
sub
xor
aas
mov
sbb
lea
jae
popa
sub
pusha
imul
bound
frstor
jae
xchg
loop
add
mov
insb
add
and
loope
lods
adc
or
dec
popa
sbb
call
loopne
outsb
call
outsl
pop
mov
jge
or
stos
js
add
push
pop
xor
jle
je
xor
mov
xor
aaa
jp
emms
jge
mov
scas
hlt
cmp
scas
mov
mov
fnstsw
jns
cmp
les
mov
jge
push
js
test
sti
jge
mov
jge
mov
xchg
push
cmp
std
cmpb
mov
jl
lds
xor
inc
xchg
xor
js
ds
mov
jle
mov
jge
push
popa
jge
mov
leave
mov
pusha
leave
aaa
loop
int3
ja
and
jl
arpl
mov
enter
dec
movsl
shl
fistpl
lock
and
push
adc
shlb
js
mulb
adc
div
stos
adc
cmp
popf
and
int3
scas
sub
add
push
scas
stos
cmp
movsl
xor
and
dec
mov
neg
xlat
das
mov
xchg
out
mov
aad
mov
adc
cs
adc
cwtl
aaa
enter
push
outsb
sub
mov
mov
push
mov
idivl
mov
xor
neg
mov
xor
test
xor
sbb
pusha
icebp
sbb
mov
xchg
sti
sbb
lods
stc
xlat
add
mov
movsb
cmp
inc
in
fs
and
mov
in
repz
arpl
and
jecxz
hlt
call
bound
and
loop
cmc
call
popa
insb
jbe
and
loope
imul
mov
insb
ja
and
loopne
imul
scas
imul
outsl
insb
js
das
insb
mov
call
outsb
insb
jns
cs
mov
rcll
jg
aam
mov
adc
adc
rclb
mov
adc
rorl
rorl
add
cs
std
adc
lea
mov
mov
fnsave
cmp
mov
mov
mov
jge
mov
jge
mov
mov
mov
jge
mov
jge
mov
mov
mov
jge
mov
jge
mov
cmp
jl
mov
mov
jge
mov
jge
mov
mov
jge
mov
jge
mov
mov
loope
cmp
popa
jge
mov
jge
mov
jge
mov
mov
jecxz
cmp
mov
mov
loop
mov
jge
mov
jge
mov
inc
mov
rorb
jge
mov
jge
mov
rorl
jge
mov
jge
mov
ret
jge
mov
jge
mov
jge
mov
jge
mov
les
jmp
inc
mov
jge
mov
lds
ljmp
cs
jl
je
mov
lods
idivl
mov
jge
mov
mov
idivb
mov
jge
mov
mov
stc
jge
mov
jge
mov
mov
mov
jge
mov
jge
mov
rorb
jge
mov
jge
mov
rorl
jge
mov
jge
mov
ret
jge
mov
jge
mov
jge
mov
inc
mov
les
jge
mov
jge
mov
lds
jge
mov
jge
mov
mov
jge
mov
jge
mov
mov
jge
mov
jge
mov
enter
repnz
jecxz
ja
test
in
mov
jne
cmp
ror
addr16
aam
cs
gs
orb
incl
mov
ja
stos
mov
mull
jne
cmp
ror
imul
and
cmp
test
dec
mov
jge
push
sub
mov
push
mov
jge
mov
jge
mov
xchg
mov
test
pop
or
sbb
pop
sub
lea
sub
mov
mov
hlt
inc
hlt
adc
out
xchg
adc
adc
imul
mov
std
shl
mov
mov
xchg
pop
jns
inc
mov
in
inc
fldcw
push
nop
mov
mov
cli
ret
and
mov
nop
push
mov
pop
jns
pop
cmp
xchg
test
or
xchg
les
fildll
leave
mov
push
xchg
push
cmpsl
fisttps
inc
mov
or
and
or
or
adc
xchg
xlat
orl
mov
mov
xor
and
ja
sar
cmpsb
dec
mov
out
jae
adc
mov
dec
push
sti
sbb
mov
push
or
mov
and
fildl
lahf
js
pop
push
adc
xchg
pop
sbbl
cli
mov
cmp
pushf
sub
sbb
adc
xchg
fwait
sbbb
push
adc
dec
inc
mov
test
mov
lea
icebp
mov
cmp
fisttps
mov
and
arpl
sbb
jecxz
xlat
addr16
mov
cmp
fbld
addr16
in
mov
arpl
sub
test
aad
mov
jns
inc
jae,pt
out
std
dec
aas
inc
push
lds
adc
add
cwtl
adc
pop
divl
cmpsb
or
xchg
mov
push
mov
clc
pop
xor
imul
adc
sub
inc
lcall
lcall
les
fmuls
cld
mov
test
adcb
mov
cmp
andl
xchg
adc
mov
xchg
add
out
jo
mov
mov
xbegin
fcoml
dec
add
add
idiv
cmp
mov
mov
fsubs
sti
jge
repnz
add
lahf
push
sbb
cmpb
mov
stc
movsb
leave
addb
push
cld
jne
pop
push
data16
push
je
arpl
mov
hlt
aas
rolb
xor
and
mov
push
mov
sub
dec
pop
lods
add
lret
adc
in
mov
adc
xchg
or
lock
inc
sbb
sti
xchg
sub
paddusb
orl
dec
xchg
inc
jae
sti
xchg
adcl
out
sbbl
inc
xchg
add
push
add
jne
push
or
mov
push
cld
sub
sbb
mov
inc
dec
cwtl
rorl
push
mov
dec
sbb
adc
pop
xor
dec
incb
cld
xchg
pop
adc
lahf
lret
ja
xchg
sbb
push
in
pop
or
adc
or
and
pop
rolb
xchg
or
pop
xor
push
sbb
cmp
inc
cld
push
lahf
stc
mov
xor
push
push
sti
andl
mov
mov
lods
dec
mov
mov
sbb
pop
nop
fwait
es
adc
sbb
loop
push
and
mov
sarb
mov
sti
xchg
xchg
addl
adc
push
adc
lock
sti
and
shl
push
add
adc
xlat
movsl
and
add
or
sbb
test
adc
pop
and
xor
xchg
jae
adc
mov
and
sti
adc
xor
sbb
int
rolb
adc
cld
xchg
add
adc
stos
mov
inc
sbb
push
aaa
pop
mov
push
cld
or
out
testl
adc
movsb
mov
pop
dec
inc
mov
lret
repz
jnp
adc
mov
inc
mov
sub
les
and
xor
dec
mov
cmp
lcall
pop
test
xorl
xchg
adc
nop
cli
sub
movswl
mov
sti
lods
and
sti
sub
nop
adc
cmp
popa
mov
cltd
and
mov
sahf
mov
dec
xchg
pop
pop
fcompl
pop
jo
jne
xor
xchg
push
or
dec
jne
sbb
cmp
fistps
sbb
fdivrp
push
dec
dec
cli
add
fdivrp
inc
adc
call
and
cs
push
xchg
ds
sti
lahf
out
cmpsb
push
enter
addr16
xchg
add
add
xor
inc
pop
mov
xchg
add
lcall
std
gs
pop
gs
fistps
add
and
add
notl
mov
rolb
test
adc
adcb
mov
push
lock
add
mov
aaa
pop
pop
adc
insb
lcall
shrl
clc
push
push
sti
or
scas
test
cmp
fdivrl
xchg
cwtl
filds
sbb
inc
je
inc
shlb
int3
sub
inc
jecxz
push
mov
nop
and
xchg
and
push
fcoml
push
dec
cld
cmp
cwtd
add
repnz
push
cld
xor
scas
scas
mov
jl
enter
inc
mov
lahf
cmp
int3
add
adc
cli
pop
and
enter
inc
push
pop
xor
filds
dec
adc
and
xor
mov
xchg
or
ss
xchg
loop
cld
lcall
fstpl
sbb
pop
mov
popf
nop
mov
test
mov
inc
fisttps
or
mov
adc
cwtl
icebp
pop
jnp
or
rolb
pop
fcomps
out
sbb
xchg
adc
cltd
add
fists
adc
cmpb
mov
inc
stos
fs
jnp
fmull
inc
adc
popf
cwtl
xchg
add
cmpsl
sti
dec
ds
push
mov
dec
stc
fisubrs
gs
add
sub
bound
mov
inc
outsl
cmp
dec
adc
cmp
sbb
ret
cmp
cwtl
out
fcomip
dec
icebp
push
fsubs
xchg
fdivrs
lret
movsb
call
sbb
clc
or
aam
js
in
push
lock
loop
addr16
nop
jo
out
fs
sbb
push
mov
sbbl
mov
mov
and
fmulp
movhps
in
pop
mov
dec
mov
imull
cmc
cmp
and
sub
sbb
mov
inc
testl
insl
xor
jns
nop
cmpsb
shlb
jl
addr16
mov
in
sub
push
lret
xor
gs
jo
xor
in
inc
ret
pushf
mov
lock
rorb
mov
mov
decl
xor
mov
push
jg
sarb
mov
mov
xlat
dec
fwait
in
and
jns
fildll
xchg
out
pusha
stc
mov
inc
incl
sub
jns
pop
lock
int
add
inc
mov
or
pop
outsl
or
fwait
out
cmp
and
outsb
in
sub
and
icebp
div
das
in
call
in
out
pop
jl
or
or
movsl
das
stc
loop
cmp
sbb
xor
add
sub
xchg
icebp
cmp
push
inc
in
cmpsl
nop
pop
cmp
pop
insb
add
add
mov
jb
jecxz
inc
lock
xchg
into
ljmp
lea
outsl
fwait
inc
insb
mov
push
out
jae
xchg
inc
mov
pop
sub
add
sbbb
pop
mov
in
mov
lock
and
and
jae
xchg
sbb
pushf
mov
fildll
aam
or
jge
outsl
mov
dec
in
lret
sub
pop
push
repz
out
dec
xchg
mov
lcall
push
add
insb
mov
lret
mov
js
jmp
cmc
out
pop
arpl
repnz
sbb
push
outsb
sub
incl
scas
in
mov
jmp
outsl
nop
jge
jb
and
pop
clc
rcrb
mov
sub
loopne
fs
pop
in
push
add
dec
unpcklps
test
xor
cwtl
or
push
sahf
clc
or
je
fmuls
xchg
sahf
cmp
mov
sbb
aam
js
in
push
xchg
pop
mov
pop
mov
jmp
in
mov
cltd
mov
rol
mov
sub
fbld
pop
pop
mov
outsl
add
mov
lods
fwait
cmp
pop
roll
in
cwtl
lea
push
push
fs
fsubl
out
add
in
mov
or
inc
icebp
cwtl
xor
adc
push
jge
daa
leave
in
and
xor
jns
shl
dec
pop
add
shrl
mov
cmpsl
subb
scas
sub
jnp
fimull
or
mov
xchg
out
in
add
mov
sbb
daa
mull
clc
push
aaa
addr16
jmp
cmp
daa
incl
inc
sub
cwtl
mov
lcall
pop
sub
repnz
push
inc
icebp
and
movl
leave
in
dec
push
push
jo
cmp
jge
add
xor
scas
adc
dec
mov
dec
sbb
mov
add
in
inc
ror
xor
dec
mov
dec
in
xorl
pop
lds
add
mov
dec
faddl
in
add
mov
sbb
iret
cmp
pop
push
addr16
in
movsl
loop
movsb
jg
jmp
insb
pop
mov
mov
and
mov
in
ss
outsl
mov
insl
in
sahf
mov
mov
js
ja,pn
aaa
aaa
in
bound
imul
mov
mov
in
inc
xchg
sub
lock
xchg
and
push
lea
adc
jg
test
and
ljmp
inc
out
mov
clc
add
lret
loopne
jns
xchg
fidivl
jmp
pop
push
insb
mov
into
les
cmp
mov
in
lahf
pop
mov
mov
stos
inc
jnp
call
cmp
adc
dec
mov
dec
in
sub
lret
jb
jns
in
insl
ss
dec
pusha
inc
jmp
pop
lea
jg
or
inc
test
lock
outsl
cmpsl
cmpsb
in
mov
in
popf
xor
cwtl
sahf
push
or
in
shrb
and
std
mov
stc
or
sub
pop
adc
fwait
inc
adc
adcb
adc
jl
and
test
mov
sahf
add
mov
xor
xchg
hlt
popf
nop
rorl
jge
std
mov
enter
in
xchg
pop
js
adc
lahf
and
test
shrb
and
mov
inc
xchg
lcall
xchg
sbb
cmp
pop
add
adc
cwtl
out
loopne
sub
and
inc
mov
jae
int3
add
and
sub
fcoms
sub
mov
incl
adc
mov
rorl
pop
in
pop
js
inc
es
xchg
jmp
out
adc
mulb
rorb
inc
insb
int
test
add
mov
mov
lret
mov
jmp
in
mov
cmp
xor
out
iret
xorl
jo
inc
sub
or
jmp
push
lods
and
jno
sub
jae
mov
mov
inc
fldt
shlb
in
cmpb
out
fdivrs
push
out
repz
cmp
sbb
insb
in
int3
mov
xchg
imul
or
ljmp
aaa
lahf
mov
push
pop
shlb
cli
scas
mov
add
outsl
xchg
adc
xor
or
jns
inc
cli
cmc
mov
lock
xchg
lcall
ja
inc
insb
add
fistl
in
pop
in
xlat
cmpsb
mov
in
dec
in
dec
int3
mov
lcall
and
insb
mov
cmp
aas
mov
fsubrl
loopne
outsb
jb
data16
repnz
shufps
mov
mov
inc
xchg
je
mov
push
xor
cmp
lcall
jmp
cmc
mov
xor
insb
fnstenv
cmpsl
xchg
sub
mov
cmp
fldt
lods
mov
into
ret
nop
mov
test
cmp
xchg
or
addr16
lock
and
int3
cmpsb
cmc
dec
jmp
sarl
aaa
dec
insb
pop
push
fidivrl
jae
push
in
sahf
lds
sbb
das
sub
in
mov
mov
adc
jg
icebp
push
call
cmp
sub
imul
enter
xchg
daa
lcall
mov
and
insb
fiadds
push
dec
les
in
lock
cmp
movsl
mov
inc
icebp
add
cmp
lea
lret
mov
scas
push
loope
movsl
stos
push
lods
fnsave
test
sub
decl
add
lods
lret
and
jle
ret
xor
pop
addr16
or
adc
add
push
adc
pop
mov
sub
cmp
loope
sbb
or
adc
out
sub
cs
outsb
inc
ljmp
mov
lcall
enter
mov
sub
push
popf
enter
je
cltd
dec
jo
xchg
int
mov
inc
in
int3
and
add
pusha
push
jmp
insl
jnp
ljmp
pop
rorl
xchg
cmpb
jg
adcl
fmull
pop
divl
or
pop
add
stos
mov
sbb
sbb
imul
ret
jb
popa
mov
mov
or
inc
iret
stos
adc
aad
jo
xorb
pop
cld
or
shlb
jnp
sahf
jle
ss
mov
aad
lret
mov
jns
lret
ds
jnp
js
rcl
mov
mov
frstor
mov
xchg
pop
jae
js
ret
js
pop
cmc
rcll
movsb
in
lea
pop
movb
movsb
push
icebp
lret
jnp
mov
mov
adc
adc
cmpsl
daa
sub
sub
lods
jge
mov
je
shlb
lret
jmp
cmp
int
mov
js
nop
dec
shlb
or
popa
bound
push
in
outsl
xchg
sub
pop
adc
mov
cmp
aam
ret
in
cmpsl
cmpb
je
scas
pop
pop
jne
inc
jno
xchg
aaa
sbb
push
adc
dec
pushl
call
out
movsb
iret
popf
lret
std
movsb
movsl
lea
hlt
repz
out
xchg
insl
in
loope
movsb
fidivs
mov
cmc
add
idivl
push
mov
mov
sub
pop
jne
mov
lret
jo
jge
adc
mov
lret
shlb
inc
and
mov
dec
sahf
xchg
pushf
pop
loope
out
loope
movsb
xchg
rcr
pop
fdivs
mov
add
push
or
fcmovb
dec
mov
and
je
lock
cmp
push
sahf
jge
push
call
js
mov
ja
lea
repz
iret
cmpl
jge
shll
mov
repz
or
or
sbbl
outsb
pusha
mov
xor
lret
lcall
sub
ja
sub
loope
addr16
iret
ljmp
lea
push
and
xchg
and
movsb
inc
imul
lahf
sbb
sub
bnd
mov
popf
fisubrl
cltd
std
popf
cmp
neg
cmp
gs
lahf
lret
fidivs
jle
pop
notb
or
adc
or
mov
and
mov
or
loope
movsb
xchg
shrl
inc
outsb
fisubl
mov
aam
sub
push
mov
push
fnstsw
pop
sti
mov
xor
jno
ljmp
xor
imul
aas
push
push
cmpl
out
mov
lds
mov
push
pusha
loope
movsl
jge
sbb
cmpsb
ficompl
ja
jmp
and
nop
jle
mov
mov
imul
lret
mov
fnstenv
cltd
jle
pop
jbe
xchg
rclb
adc
insl
clc
stc
and
out
lret
loope
movsb
inc
fisubrl
mov
jne
aam
dec
out
push
es
daa
jle
and
mov
lahf
pushf
lret
xchg
push
jle
ret
sub
or
enter
sarl
movsb
inc
fimuls
ficoml
add
push
inc
icebp
jnp
and
test
adc
clc
add
fbstp
xchg
mov
mov
nop
xchg
mov
cld
pop
sub
xchg
ret
cmpl
jae
adc
mov
and
test
dec
xlat
insb
add
mov
aaa
cmp
test
xchg
lret
and
mov
nop
push
mov
or
adc
xchg
pop
addl
jae
adc
test
cmpsb
xlat
popl
mov
and
std
nop
das
inc
mov
jle
mov
jp
xchg
icebp
adcb
ss
inc
fistpll
and
test
xor
mov
adc
or
inc
popa
call
adc
xchg
sti
subb
jae
adc
mov
mov
test
pop
mov
lock
inc
sti
hlt
and
mov
aam
and
xchg
cmp
leave
repz
adc
jnp
and
test
sbb
dec
mov
cmp
fisttps
mov
mov
mov
cli
test
shll
xchg
mov
xor
aaa
jae
adc
jnp
and
inc
in
xlat
mov
sbb
lahf
adc
jns
xchg
and
mov
jecxz
adc
pop
add
xchg
pusha
xor
dec
je
adc
nop
pusha
xlat
mov
mov
aaa
test
nop
lods
jae
je
and
mov
nop
lock
or
dec
xor
ja
pushf
inc
aam
xchg
and
xlat
mov
popf
mov
cmp
nop
es
aas
cli
sbb
nop
or
js
pop
jg
xlat
xchg
lea
mov
decl
leave
and
test
hlt
xlat
rolb
pushf
mov
cmp
jae
inc
and
mov
nop
stc
mov
xor
jns
pop
xchg
adc
dec
outsb
xor
xlat
jae
adc
jnp
and
test
jnp
inc
add
fucomip
adc
nop
xor
mov
xchg
and
mov
dec
and
adc
xchg
dec
addl
jno
inc
leave
jnp
and
add
mov
aaa
neg
xor
and
mov
nop
push
mov
inc
clc
jns
pop
fistpl
lock
mov
push
adc
and
jnp
and
mov
pusha
mov
aaa
jge
insb
adc
nop
clc
incb
xorb
xor
or
dec
adc
insl
mov
inc
and
and
mov
xlat
lds
in
sti
aaa
fistps
aas
mov
inc
and
mov
add
adc
xchg
mov
sub
lds
sub
fsubrs
add
fistps
pause
xchg
xchg
cmpsl
mov
nop
mov
pop
inc
adc
xchg
adcl
sub
inc
lret
and
popf
sbb
mov
aaa
test
lahf
adc
dec
sti
mov
push
mov
nop
push
mov
insb
pop
add
adc
xor
fwait
jae
adc
mov
and
xchg
add
inc
cmp
or
and
ja
psubd
and
inc
mov
jns
pop
stos
adc
xchg
and
dec
bnd
adc
popf
pusha
and
fldl
iret
cmp
fbld
adc
nop
shll
sti
das
and
mov
nop
sub
vmwrite
xchg
dec
test
xorb
test
pop
inc
mov
test
sub
add
das
mov
cmp
enter
jg
mov
and
pop
mov
nop
out
imul
js
pop
test
add
xor
xor
adc
mov
and
jmp
pop
mov
aaa
icebp
adc
ret
nop
rorb
dec
pop
in
lret
adc
pop
mov
pop
dec
scas
xor
jae
adc
shlb
test
adc
xchg
repnz
aaa
cli
fists
adc
nop
cmp
mov
cli
push
and
mov
inc
inc
js
pop
xchg
adc
aam
cmovle
xor
cmc
jae
adc
popf
inc
and
test
inc
xlat
call
cmp
nop
sub
mov
mov
nop
mov
mov
adc
xchg
rolb
movsl
jae
adc
mov
inc
dec
jl
and
test
add
and
cmp
fbld
mov
mov
nop
cmp
jecxz
mov
dec
adc
xchg
dec
cmp
mov
andl
test
xchg
xlat
scas
add
fists
adc
nop
push
push
mov
mov
nop
mov
gs
pop
ss
xchg
pop
and
fnsave
adc
mov
inc
sub
lods
and
test
dec
xlat
movl
outsl
fbstp
mov
mov
nop
xor
jns
pop
arpl
xchg
inc
orl
hlt
jae
adc
jnp
and
aas
xlat
mov
ret
adc
fidivs
subb
pop
add
ds
lock
imul
xchg
shll
jecxz
icebp
andps
cmovnp
outsl
jo
xchg
cmp
arpl
js
dec
lea
aad
mov
push
inc
dec
cmp
mov
lahf
and
test
mov
ljmp
aam
rep
outsl
mov
inc
xor
push
fs
mov
xor
inc
mov
cwtl
sahf
fistps
in
inc
aaa
xchg
negb
dec
mov
dec
push
gs
in
jle
pop
pop
dec
jbe
lock
mov
clc
mov
lahf
imulb
ja
mov
in
in
mov
push
clc
sub
movsb
fmulp
stos
dec
cs
pushl
or
push
addl
and
into
cs
jbe
in
insb
add
jg
in
loop
lods
mov
pushf
stc
push
sub
insb
insb
sbb
xchg
repz
sarl
in
sub
cwtl
cmp
lahf
inc
or
call
fstps
or
shrb
xchg
pop
and
sub
out
stos
sahf
je
push
xchg
adc
and
shl
cmc
xchg
sti
adcl
insb
jecxz
rorl
cmove
ljmp
add
add
pop
ficompl
inc
cmp
push
adc
pop
dec
xor
inc
lock
out
cmpsl
lret
test
call
pop
push
insb
dec
add
mov
lea
cmp
or
call
pop
mov
imul
fsubr
mov
stos
mov
popa
pop
lock
dec
or
mov
popa
add
nop
in
or
dec
pop
mov
push
push
or
jecxz
jge
lcall
sbb
cmp
add
jnp
push
imul
insb
leave
vmovups
mov
lock
lock
movsl
hlt
xchg
xchg
or
dec
call
jbe
and
sahf
subl
aaa
sbb
mov
adc
lods
loope
push
lock
cmp
and
add
pusha
jns
mov
insb
and
jp
iret
pop
in
in
in
aas
xlat
aad
fwait
jmp
out
vmptrst
popa
aad
or
cmp
adc
insb
mov
cmp
ds
call
adc
fdivp
dec
mov
mov
jl
jg
push
pop
xchg
adc
fwait
or
nop
inc
mov
mov
imul
add
mov
out
and
pop
dec
cmp
mov
rcll
fcomi
je
pop
pusha
and
adc
pushl
outsl
push
repnz
push
mov
xlat
in
mov
mov
mov
xor
inc
push
adcl
cmpsb
jno
cld
out
jns
xlat
push
dec
push
lock
mov
mov
jmp
jae
mov
jmp
push
xlat
leave
out
jp
arpl
push
mov
xor
add
mov
ss
lock
xchg
popf
loop
imul
lret
mov
in
test
sub
icebp
dec
mov
fisttpl
imul
adc
fwait
adc
das
dec
jp
sub
aaa
movsb
adc
mov
mov
add
dec
test
in
add
lret
mov
jmp
icebp
cltd
cltd
movl
xchg
jae
in
cltd
insb
mov
nop
xchg
inc
fdivp
add
out
dec
test
rcrl
out
mov
pushf
jno
fcoms
sbb
and
rol
out
and
push
icebp
add
inc
cs
loop
push
mov
mov
push
mov
imul
sbb
push
andl
into
pop
div
mov
sub
int3
jge
in
jmp
and
jle
out
insb
ret
pop
out
mov
in
jmp
cli
andb
pop
hlt
out
or
fmuls
add
add
mov
jmp
sar
xchg
push
inc
dec
mov
das
pop
outsb
insl
fdivl
insb
test
test
sbb
and
xchg
jmp
nop
jl
xchg
inc
jle
jnp
xchg
enter
and
xchg
jae
push
inc
jl
and
inc
fcom
xchg
add
insb
cmp
nop
jecxz
mov
movsl
and
mov
inc
mov
pop
data16
xchg
aaa
sbbl
lahf
mov
inc
dec
jl
and
lret
add
mov
cmp
nop
sub
and
mov
nop
cmp
jns
pop
push
adc
xchg
addr16
mov
jl
mov
jno
subb
nop
mov
dec
popa
nop
shr
push
sti
aam
mov
mov
pop
out
rclb
rclb
pop
mov
inc
sarl
ret
in
add
mov
aaa
inc
fistps
lea
cli
xchg
and
mov
nop
xchg
jns
pop
mov
rcll
pusha
inc
je
adc
mov
inc
mov
test
add
mov
cmp
adc
nop
dec
mov
mov
nop
push
mov
inc
test
push
adc
xchg
je
xor
xor
imul
inc
fstpt
and
js
xlat
mov
cmp
nop
add
push
and
mov
nop
sbb
jns
pop
mov
sbbb
xor
inc
and
and
mov
int
lock
das
fistpll
adc
fdivrp
in
and
mov
nop
icebp
pop
jns
pop
out
notl
xor
test
adc
mov
and
test
popf
xlat
or
popa
mov
cmp
insl
mov
mov
nop
es
cld
pop
or
pop
xchg
jge
or
xor
push
je
adc
pop
and
popl
mov
cmp
xchg
adc
inc
sti
scas
sub
pop
cli
adc
xchg
fiaddl
xchg
adc
adc
aad
ljmp
push
mov
cmp
inc
adc
nop
dec
dec
mov
cli
dec
and
mov
nop
mov
mov
lret
pop
into
adc
xchg
adc
sbb
jae
adc
jnp
jns
repnz
addr16
cli
and
sbb
sub
jns
pop
cs
xchg
inc
xorl
jae
adc
xchg
pop
push
mov
stc
mov
cmp
cmpsl
adc
push
sbb
xchg
and
mov
nop
add
jns
inc
cmc
andb
jae
adc
fs
lcall
mov
ret
add
mov
cmp
pop
adc
nop
cmp
cmp
jns
movsb
mov
nop
xchg
mov
inc
mov
jns
pop
sub
jbe
test
int
jae
adc
mov
inc
call
je
inc
mov
aaa
dec
fbstp
addr16
xor
xchg
cli
out
shll
inc
mov
jns
pop
mov
xchg
xchg
pop
andl
jge
push
inc
xor
and
test
sub
mov
aaa
jecxz
mov
adcl
frstor
dec
dec
push
inc
jnp
pop
push
jae
adc
jnp
and
fwait
xlat
xchg
add
fistps
movsl
mov
lods
and
mov
mov
pop
mov
xchg
mov
xor
jae
adc
mov
push
test
add
arpl
imul
adc
nop
sbb
and
mov
nop
push
std
js
pop
mov
push
xchg
push
cmpl
cld
jae
adc
mov
inc
add
and
add
cs
fcomip
adc
cli
jns
fwait
mov
nop
clc
mov
lret
adc
dec
or
shlb
dec
mov
inc
jnp
je
xchg
insl
mov
cmp
fcomip
adc
cmp
and
leave
nop
mov
js
pop
iret
adc
xchg
cmp
stc
sti
jae
adc
popf
loopne
jge
scas
test
flds
pop
mov
cmp
adc
lcall
cs
mov
pop
add
xchg
gs
ret
daa
jae
adc
jl
and
test
je
mov
adc
nop
lea
dec
xchg
dec
mov
sbbb
stos
xchg
mov
ret
inc
je
push
add
mov
xlat
and
in
pushf
aaa
ss
adc
aam
mov
scas
mov
nop
cmp
jns
pop
into
adc
xchg
add
iret
adc
imul
mov
pop
into
test
mov
jp
in
mov
cmp
adc
pusha
mov
or
mov
imul
pop
call
mov
cmpsl
cmpb
in
stc
jae
adc
movb
push
and
inc
add
mov
cmp
xchg
adc
xlat
mov
nop
xor
jns
pop
test
clc
xchg
roll
sbb
mov
and
lock
pop
add
mov
adc
sti
dec
and
mov
nop
jp
jns
pop
sbb
xchg
push
cmpl
pop
jnp
and
test
out
xlat
out
add
mov
adc
nop
repz
mov
mov
nop
mov
jns
pop
js
icebp
xchg
jo
sbb
cmp
and
orl
push
cmc
js
mov
mov
adc
inc
add
inc
add
adc
jo
inc
mov
inc
shl
js
pop
jmp
icebp
or
xor
loopne
inc
adc
rolb
mov
rorl
negl
or
dec
jl
dec
or
pop
inc
pop
dec
cmp
fnstcw
mov
inc
fwait
repz
jae
adc
sub
and
xrelease
xor
or
fisttpl
fcompl
dec
popf
or
jo
sbb
cmp
add
in
rcll
jns
adc
mov
add
push
test
inc
xlat
fadds
lock
inc
inc
mov
dec
inc
mov
or
cmp
jbe
lods
jl
sbbl
mov
pop
mov
mov
addb
int3
inc
inc
loop
fbstp
xor
mov
xor
sbb
inc
es
add
xchg
cmp
iret
lcall
test
scas
add
int
orb
mov
dec
sbb
clc
imul
jmp
js
mov
sub
or
jp
mov
lock
jg
lods
xchg
inc
js
cli
cmp
jg
dec
int3
sti
out
add
ja
clc
incb
or
pop
mov
push
out
mov
or
fiaddl
faddl
aam
cmp
jno
dec
cwtl
sbb
test
mov
sarl
inc
xchg
aaa
filds
mov
sub
cmp
arpl
sub
jle
pop
cmp
push
push
push
dec
mov
sub
clc
or
dec
dec
dec
xchg
adc
inc
cmpl
push
sub
dec
lcall
add
dec
dec
cmp
idivb
mov
enter
pop
pop
cmp
or
mov
outsl
dec
jg
out
or
and
dec
mov
mov
ret
inc
nop
push
fimuls
outsb
sarl
or
out
testb
insl
fwait
orb
add
mov
rcrl
decl
inc
repz
inc
xchg
sbb
aaa
rclb
lds
xchg
mov
inc
xchg
xor
andl
jnp
dec
sahf
int
das
push
icebp
aas
sbb
push
decl
lock
lock
nop
hlt
push
jecxz
inc
mov
mov
mov
add
ret
mov
mov
aaa
jmp
and
outsb
test
add
push
add
inc
fsubrl
jp
rcrb
cmp
cmp
push
cltd
push
scas
js
pop
mov
cmpb
movsl
xor
mov
mov
jno
push
jg
fildl
cmpsb
inc
xchg
mov
or
jg
faddl
add
mov
adc
shll
xchg
mov
clc
mov
rorb
out
jmp
xchg
cld
js
rclb
jnp
lahf
jp
outsl
xorl
inc
rol
or
mov
icebp
fcoms
and
adc
leave
push
jl
xchg
adc
inc
popa
xchg
ljmp
inc
add
and
addb
pop
pop
cwtl
int3
mov
or
cmp
cmp
jo
ljmp
push
rol
and
cld
fcomps
xchg
popf
xor
roll
adc
inc
pop
les
imul
push
popl
dec
add
xchg
or
rolb
pop
test
mov
fwait
lods
pusha
rorb
les
mov
lret
mov
lock
gs
mov
rorb
pop
pop
sub
js
mov
and
inc
std
je
lds
mov
mov
jnp
fwait
sub
clc
mov
mov
inc
add
cmp
das
icebp
test
push
mov
jge
jge
rcll
jns
dec
icebp
sub
sub
iret
jl
cltd
stc
stc
xlat
popa
movsb
pop
inc
shl
pushl
rcll
mov
rclb
adcb
lahf
lods
dec
aad
dec
popf
inc
sub
in
inc
loopne
lods
mov
xchg
arpl
lcall
pushf
push
dec
aad
mov
adc
mov
mov
les
xchg
xchg
sbb
fcompl
sub
push
and
mov
inc
mov
pop
lahf
dec
adc
or
fisttpl
cmp
mov
push
and
add
mov
outsb
roll
stos
pop
rorl
les
inc
test
inc
dec
mov
repz
sub
and
mov
loop
mov
sbb
or
add
xchg
repnz
jp
cmp
lea
xor
sbb
jnp
xor
cmp
test
stos
repz
jns
imul
int
test
mov
test
sahf
ret
add
mov
adc
inc
jns
inc
mov
dec
inc
les
push
xor
inc
cld
mov
fisubrs
mov
xor
cmp
lods
inc
push
cmp
lock
mov
add
pop
enter
aaa
xchg
add
mov
idivb
jnp
adc
sub
add
adc
shlb
jno
pop
inc
lds
or
cmp
pop
icebp
jp
jns
std
add
dec
push
pop
aas
ss
cli
cmc
push
sub
popa
popa
pop
aaa
sub
pop
jl
ffreep
idiv
xchg
jl
push
adc
stos
icebp
or
cld
xchg
mov
repnz
filds
imul
rclb
sub
and
xlat
mov
cltd
nop
sub
cmp
test
insb
test
in
adc
lods
in
into
dec
add
mov
bound
out
lods
inc
lods
adc
ja
out
lods
xlat
cmp
add
mov
ss
sub
mov
ss
sbb
jnp
int3
pop
jmp
aas
dec
stc
cmc
dec
cmp
adc
xchg
daa
inc
lock
ja
out
xor
dec
dec
inc
or
jno
sbbl
xchg
stos
xor
mov
loopne
hlt
ljmp
inc
insl
xchg
cld
pop
lahf
xor
ja
out
and
inc
incl
or
outsl
nop
mov
jne
cltd
push
jnp
cmp
or
xchg
test
inc
adcl
das
mov
push
xchg
scas
xchg
mov
sub
jg
sarb
inc
out
adc
iret
sbb
cmp
icebp
add
jle
in
es
cmp
hlt
xchg
pop
pop
and
mov
dec
inc
fbld
stos
jns
shl
in
push
push
or
lods
push
ss
inc
test
sbb
js
adc
mov
hlt
or
pop
xchg
imul
les
clc
mov
cmovo
mov
sub
cmp
cwtl
fadds
pushf
adc
sbbb
dec
jge
pop
xchg
test
sbb
mov
push
mov
stc
adc
orb
xchg
xchg
clc
repnz
inc
sbb
les
add
aaa
jmp
mov
xchg
cltd
and
xchg
add
mov
cmp
mov
shlb
mov
sti
sub
rolb
dec
dec
xchg
lock
fistpl
ror
mov
xchg
fimuls
mov
lahf
ror
xchg
cmpl
inc
jmp
cmpsl
fs
mov
mov
xor
hlt
popl
fcoms
pusha
cld
dec
xchg
movl
cmp
aam
and
les
add
inc
dec
dec
lods
mov
icebp
push
xor
lock
adc
cmp
mov
clc
inc
and
push
cmp
rcrl
cmp
scas
fistps
inc
dec
hlt
movsl
mov
fld
lret
sbb
in
int3
sbb
pop
add
outsl
leave
mov
rclb
adcl
loopne
sahf
jnp
lret
mov
or
or
cmp
imul
aaa
dec
adc
mov
mov
nop
mov
lahf
js
pop
xchg
adc
xchg
xchg
andb
xchg
xor
push
lds
pop
mov
jp
imul
mov
rclb
stos
aam
dec
adc
and
xlat
lret
jnp
cmp
pop
fsubrs
popa
xor
xchg
jecxz
repz
xchg
leave
pop
sbbb
push
nop
aam
mov
subb
decb
outsl
and
inc
mov
shl
pusha
pop
inc
mov
mov
test
out
xor
push
iret
lret
stc
inc
xchg
add
sbb
sub
leave
dec
addr16
push
stos
push
idivl
adc
adc
xchg
pop
xchg
fildl
push
iret
dec
sub
xchg
sbbl
inc
xlat
pop
xor
xorb
push
addr16
ja
popa
sub
mov
imul
mov
roll
pop
or
dec
mov
sbbb
or
add
mov
lret
int
mov
out
outsb
sbb
leave
pop
pop
pop
loopne
fs
lods
aaa
test
push
cld
jo
repnz
dec
adc
mov
or
lods
mov
dec
in
divl
xchg
or
insb
div
rclb
js
sbb
cmp
adc
jae
cwtl
ljmp
das
ja
pop
stos
mov
push
lods
jnp
jo
jle
or
mov
cmpsb
inc
stos
push
jb
call
es
or
cmp
adc
popf
adc
jp
xchg
lahf
xor
iret
fs
and
sbb
sub
sub
mov
add
roll
test
cmpsb
adcb
pop
repz
out
inc
push
pop
mov
xlat
or
sti
fmuls
jge
test
into
xlat
ror
js
rorb
dec
pop
shlb
pop
repz
xor
cmp
aas
int3
push
xor
icebp
cli
pop
push
or
add
jl
xchg
daa
pop
roll
pop
mov
mov
aas
adc
test
out
jne
enter
int3
adc
mov
push
arpl
mov
inc
lods
call
jae
sahf
sub
push
jo
shrb
repz
mov
test
or
je
ds
movsb
insb
pop
loope
cmc
push
loop
mov
inc
int3
fimuls
wbinvd
loop
mov
lock
aad
repz
and
daa
insl
and
popa
pop
scas
mov
pop
pop
mov
jae
sub
stos
fsts
mull
cld
data16
lcall
cmpsb
ds
loopne
jae
mov
repnz
aam
jno
add
lods
sti
sub
push
dec
jns
adc
push
movb
mov
fistpll
insb
xchg
cmp
nopl
imul
stos
fs
pusha
pop
idivl
pushf
cmp
adc
cmp
rolb
mov
mov
in
mov
pop
add
mov
mov
lret
into
mov
movsb
xor
and
jl
scas
xor
xor
int
sahf
insb
jno
xor
clc
xchg
aas
or
scas
mov
cld
or
lock
movsb
mov
in
pop
insl
loope
cmp
xchg
out
loop
xchg
push
and
xchg
out
dec
call
xor
ljmp
and
arpl
inc
repnz
inc
mov
nop
mov
or
jne
inc
jmp
xor
xchg
sub
add
jns
icebp
int3
shrl
inc
enter
insl
in
repnz
mov
aad
mov
push
xor
cmp
mov
loope
stos
jae
sbb
std
push
or
in
scas
imul
jl
jecxz
jecxz
loopne
out
and
adc
sub
mov
std
push
sbb
adc
xchg
pop
jae
xchg
repz
inc
lock
lret
int
lcall
sbb
into
jge
ljmp
or
mov
dec
sub
dec
lods
leave
fcmovnb
inc
mov
push
jmp
cmpsb
push
push
fucom
add
rorl
repz
pop
cwtl
xlat
xor
dec
inc
iret
push
dec
jae
daa
movb
cltd
dec
in
and
jmp
push
in
mov
inc
xchg
repnz
mov
pop
sub
hlt
mov
test
lock
xchg
jb
cmpsb
enter
adc
mov
insb
pop
inc
adc
push
inc
outsb
lods
js
add
rorb
enter
sbb
rcrb
sub
adc
stos
push
pop
xchg
jmp
lock
jo
jge
xchg
int
xchg
jns
pop
in
xor
das
test
inc
jno
mov
jg
sub
leave
icebp
inc
cs
sbb
scas
jo
shll
std
iret
insb
jb
pop
ficomps
incl
ret
sahf
or
mov
test
push
or
dec
push
cmp
ja
insb
rcr
in
lock
pop
out
pop
pop
sbb
mov
fdivl
dec
pushf
aas
fcmovnu
loope
jmp
push
xor
stos
mov
icebp
and
fs
loop
rcr
jb
faddp
mov
mov
and
adcl
cwtl
dec
inc
leave
pop
or
or
int
push
sbb
xor
push
cmp
xchg
std
ja
pop
ja
enter
jmp
rcll
mov
fisubs
ljmp
lods
loop
inc
into
sub
int
orl
jne
insb
repnz
jbe
and
loope
lock
test
add
push
fwait
scas
data16
outsb
jge
sbb
dec
loop
mov
ss
scas
ljmp
loope
es
lods
stos
dec
push
sub
fisttpll
test
pop
push
sbbb
xchg
dec
xchg
sub
jl
add
add
cmpsb
out
mov
scas
imul
xlat
ja
jbe
cmc
outsb
aaa
outsb
data16
and
aas
repz
in
mov
cmpsl
dec
xchg
push
sub
cmp
mov
cltd
scas
lds
lods
insb
cmp
pop
push
mov
jle
xor
lahf
ss
cwtl
loop
mov
add
push
pop
mov
mov
or
jbe
xchg
and
rcrb
and
mov
fstl
inc
xchg
push
inc
pop
mov
add
jp
scas
das
mov
jno
repz
fldl
ja
pop
in
addr16
push
fmuls
inc
jge
and
pop
pop
jl
pop
repnz
xorb
lock
adc
dec
fxch
lret
test
push
movsb
test
roll
roll
and
sbb
std
inc
mov
cld
pop
pop
dec
lods
add
and
sub
jns,pn
js
adc
shl
mov
xchg
xchg
or
xchg
or
or
imul
dec
inc
inc
icebp
pop
lret
add
ds
mov
out
aaa
push
fisubrs
pop
lea
inc
loope
mov
xchg
jbe
push
or
push
loopne
clc
xchg
data16
or
cli
aad
movb
mov
cltd
pop
push
rcrl
sub
pop
jecxz
mov
mov
mov
fs
in
adc
fsubl
sti
pop
cwtl
and
in
imul
pop
daa
in
and
and
loop
insb
fistps
imul
cld
add
ljmp
pop
adc
cmp
adc
stc
fdivp
stos
xor
es
adc
jp
push
movsb
mov
out
mov
sbb
fsubrs
fwait
lods
jp
sub
mov
mov
std
fisubrl
push
mov
mov
jge
mov
mov
loopne
insb
mov
mov
daa
push
clc
push
divl
xchg
push
fidivrs
clc
hlt
sahf
sbb
popf
sbb
cli
in
bound
dec
fisubs
int3
pop
sbb
push
idivl
in
mov
push
xor
mov
outsl
movsb
lods
clc
jmp
loop
jno
pop
movsb
jb
pop
fidivrl
out
add
mov
xrelease
mov
comiss
cmp
push
lods
testl
sub
jmp
out
je
sbb
jb
pushw
cmpsb
sub
outsb
sub
mov
cwtl
mov
imul
aas
fisttps
hlt
fbstp
xchg
and
mov
fucomp
pop
iret
lahf
movb
cld
inc
shrl
in
dec
jmp
fidivrs
fdiv
ret
cmp
mov
mov
pop
or
cmp
pop
xchg
flds
mov
rolb
shlb
cld
xchg
xchg
subps
and
push
outsb
pop
movsb
mov
in
jbe
nop
call
mov
fs
mov
fistps
sub
mov
in
leave
out
and
mov
push
add
push
jg
sub
ret
pop
test
mov
mov
adc
cmp
adc
pop
arpl
hlt
dec
pop
daa
mov
mov
dec
mov
js
or
mov
fld
insb
pop
fwait
lea
add
aad
jp
pop
jae
in
push
jp
adc
mov
cmp
out
cs
jno
icebp
xchg
sub
popl
aaa
jbe
inc
insl
negl
mov
leave
mov
out
out
loop
cmp
sub
daa
jo
movb
pop
mov
fcomps
jo
leave
xchg
push
pusha
lret
fsubrl
cwtl
push
shlb
lods
mov
das
movsl
mov
jo
idivl
cli
ret
iret
adc
lea
mov
test
shll
cmp
fidivrs
jg
lock
ja
scas
xlat
pop
insb
sahf
jmp
jp
repnz
sub
xchg
shll
mov
xchg
pop
push
and
jae
lcall
lock
mov
sub
aas
push
pop
daa
add
mov
call
lods
jmp
pusha
xor
mov
push
sbb
push
xor
dec
xchg
decl
pop
clc
dec
pop
mov
pop
jno
cltd
push
push
aas
cmp
pop
xor
inc
insb
push
ja
xchg
mov
inc
insb
and
jl
and
repnz
push
popf
fs
sbb
mov
sbb
mov
gs
loopne
stos
ja
in
sub
hlt
sbb
mov
out
lahf
dec
mov
mov
imul
adc
xor
push
pop
pop
call
jl
out
push
mov
pushf
pop
mov
ret
popl
push
add
js
push
push
jl
ret
int
jg
sar
dec
daa
les
and
push
inc
cmp
lods
js
sbb
incb
xor
shrb
jle
popf
jb
ficoms
loopne
lock
inc
jecxz
in
jg
pushf
cmp
adc
push
cli
add
daa
decl
pop
sub
or
lods
or
lock
sbb
jmp
cmpsl
nop
stc
add
es
dec
mov
cmp
adc
xchg
std
add
sub
sahf
lahf
ret
jns
push
adc
mov
sbb
gs
in
or
push
cmc
fisttps
xlat
mov
cmc
push
lret
mov
shll
cmp
ja
jg
jns
or
jle
inc
pop
imul
cli
clc
scas
cmp
jge
loopne
fwait
scas
dec
lret
shll
into
mov
repz
jb
pmaddwd
xchg
enter
mov
loop
in
das
add
outsl
mov
bound
je
fcmovb
lahf
out
stos
mov
out
push
ret
cli
add
div
or
cmc
or
dec
cmp
fldl
mov
into
push
stos
mov
stos
and
out
es
ja
fidivl
movsl
icebp
adc
out
imul
dec
stos
and
mov
iret
sbb
testb
push
mov
push
lret
lods
lods
pop
adc
pushf
mov
pop
insb
test
leave
aas
leave
fimull
inc
rcrl
jns
lret
ret
mov
pop
xor
push
insb
mov
cmpl
push
sub
jae
xchg
divl
mov
jae
push
fnstenv
cli
xor
or
dec
lcall
pop
mov
dec
sub
ror
inc
ret
adc
loope
add
int3
add
ret
add
push
push
lret
cltd
and
sub
lahf
push
pusha
movsb
sbb
adc
in
push
jmp
loop
mov
mov
xchg
add
movl
call
imul
add
fisubrl
jb
fsubr
sub
cli
negb
in
addr16
xor
fstpt
out
adc
and
xchg
sub
mov
loopne
dec
push
mov
pop
cld
push
xchg
push
jb
mov
mov
lcall
imul
data16
sub
in
pusha
stc
lods
sub
lock
jecxz
fisubl
inc
ds
testb
stos
call
and
call
or
mov
rolb
cld
sub
repnz
fmul
je
jmp
sbb
test
fisttpll
aas
scas
ss
shlb
add
sahf
or
inc
xchg
mov
rorl
mov
lret
mov
dec
test
fsubrs
jl
nop
sbb
imul
icebp
fidivs
mov
shrl
enter
incl
pop
jle
dec
push
sub
mov
repz
arpl
jo
js
fidivl
in
mov
sub
sbb
sub
push
cltd
fs
lcall
fidivrs
out
into
fcmovnbe
loop
push
jnp
mov
les
adc
mov
or
mov
adc
test
cltd
sub
aaa
jne
rclb
dec
cmp
pop
mov
adc
sub
adc
pop
mov
adc
push
push
dec
xchg
in
fwait
sub
pop
movsb
xchg
xchg
mov
push
leave
shl
sarb
mov
out
jns
push
fbstp
jb
adc
pop
jecxz
cs
cli
cmp
dec
cmpsl
push
push
lods
cmc
xor
popf
hlt
push
or
mov
xlat
pop
jnp
cwtl
jns
mov
ret
adc
jg
mov
mov
cmp
inc
repnz
enter
xchg
jle
and
jae
lret
pop
dec
mov
xchg
aas
mov
popa
adc
lock
pop
stos
mov
nop
xchg
repz
into
popf
imul
add
adc
in
sahf
sbb
dec
or
arpl
popa
xor
xchg
bound
shlb
int3
scas
in
loopne
fadds
jge
pop
and
adc
xchg
mov
sbb
sub
ret
dec
push
mov
add
push
inc
aas
aas
insb
mov
es
dec
scas
jne
ja
sub
sub
in
jp
rclb
sahf
gs
lea
out
lock
stos
jle
in
icebp
aad
lods
clc
jg
xchg
jle
les
add
mov
js
or
or
movl
push
lea
imul
jb
inc
xchg
cmp
outsb
mov
out
out
jmp
stos
mov
fdiv
sbb
outsl
aaa
bound
inc
rcrl
and
out
pusha
out
xor
fldenv
mov
sub
loop
int3
push
fisttps
push
data16
jmp
mov
sbb
movsb
ja
push
adc
and
aad
dec
xchg
adc
sbbb
in
je
cltd
idivb
and
clc
or
in
push
fisubl
iret
xor
dec
mov
ss
add
jae
adc
test
insb
jp
out
out
hlt
test
add
out
pop
in
mov
nop
sarl
ss
dec
adc
add
jns
mov
shrl
inc
fs
dec
fcomps
fwait
add
bswap
incl
insb
xchg
bound
cmp
push
in
enter
mov
cltd
in
shlb
inc
je
roll
aaa
subb
or
div
nop
pop
mov
add
cmpsb
dec
mov
xchg
or
movb
mov
dec
xchg
sbb
sub
lret
aas
stos
mov
jg
lcall
adc
insb
push
and
sbb
out
and
pop
jmp
fwait
insl
sub
outsb
nop
cmp
loopne
mov
mov
push
mul
and
imul
in
and
mov
daa
and
jno
mov
mov
cld
pushf
mov
cld
jmp
mov
mov
in
and
jge
imul
aaa
ja
outsw
pusha
lcall
dec
or
xor
jg
lds
pop
push
add
js
adc
mov
xchg
and
jecxz
mov
dec
add
divl
pop
mov
fidivs
ficoms
add
dec
push
mov
dec
in
adc
jae
push
je
fsubrs
mov
fbld
call
adc
out
rclb
jnp
jl
or
in
in
shr
mov
jne
pop
or
hlt
scas
add
ds
add
stos
jp
mov
je
adc
jno
pop
stos
mov
or
jg
lret
xor
fsubs
leave
les
sbb
lret
out
jp
rol
test
lods
sub
int3
sahf
in
jbe
fdivrp
inc
sbbl
test
mov
iret
push
aad
js
lods
cmpsl
clc
insb
sahf
pop
bnd
pop
icebp
jge
fs
fs
rclb
repz
cld
mov
stos
dec
pop
add
lahf
jns
in
push
roll
sub
iret
add
push
pushf
jns
rcrb
adc
ret
cwtl
jo
sbb
mov
xchg
dec
in
mov
sbb
and
and
fadd
inc
clc
pusha
dec
add
addr16
inc
inc
push
and
jl
adc
sti
movsb
inc
push
jp
mov
add
arpl
loop
cmc
sub
mov
lea
pop
xor
fwait
xor
adcb
enter
clc
or
jns
xor
stos
sbb
sub
xor
and
push
xorl
pop
ss
or
or
in
popl
mov
fbstp
hlt
xchg
cmp
xchg
sbb
mov
movsb
pop
inc
and
xchg
pop
ss
add
pop
scas
rcrb
sti
lahf
pop
sahf
orb
lret
loopne
dec
mov
sbb
push
clc
and
iret
mov
mov
das
pop
gs
push
dec
and
sub
stc
dec
nop
or
sbb
call
sub
cmp
mov
sub
xchg
sub
decl
rorb
call
dec
or
adc
jae
iret
add
or
dec
push
cld
mov
std
push
adc
jnp
leave
fs
xchg
movsl
jmp
bound
dec
or
mov
int3
add
and
push
js
in
out
out
lcall
or
dec
or
iret
sub
add
jecxz
adc
or
imul
cmp
test
insl
inc
mov
fsts
xchg
jp
dec
insb
mov
inc
inc
addr16
or
inc
mov
inc
add
mov
cld
sub
jl
inc
add
jl
dec
pop
test
pop
xchg
shrl
sbb
cmp
inc
je
in
insb
or
leave
push
movsb
jb
pop
lret
mov
push
lret
mov
adc
cmpb
cmp
pop
cwtl
xor
xor
adc
das
ror
cli
rcrb
adc
jp
sahf
or
jns
hlt
nop
add
cmp
bound
push
es
mov
fsubl
mov
mov
xor
pop
xchg
cld
cmp
inc
icebp
sub
lock
repnz
popa
pop
mov
out
pop
adc
adc
in
pop
movsl
add
jge
dec
add
fisttpl
mov
mov
fwait
pop
push
das
xchg
call
bound
mov
sbb
cltd
outsl
pop
pop
adc
jmp
aas
cmpsb
mov
jg
add
popl
push
inc
cmpsl
test
jmp
pop
cmp
hlt
jg
repz
insb
ljmp
int3
aaa
and
cmp
lods
or
xchg
pushf
add
fcomps
adc
faddl
dec
loope
stos
fucom
repz
scas
hlt
pop
andb
aaa
fistpll
icebp
cmp
les
decb
pusha
loope
call
sub
xchg
adcb
cmp
or
insb
sbb
les
xchg
adc
xor
push
push
mov
pop
dec
inc
xor
xchg
jle
inc
out
pop
mov
mov
mov
loope
mov
cmp
push
sbb
add
dec
idivl
int
dec
lods
cltd
dec
loopne
lds
pop
aas
dec
push
xor
shll
popa
aam
mov
xor
mov
cmc
mov
movsl
adc
mov
adcl
shlb
jl
add
cld
cmpsb
sti
pop
xor
pop
mov
adc
xor
cmpsb
out
cwtl
adc
push
mov
push
jg
jae
adc
xor
cs
jge
adc
sub
sub
fmuls
jmp
cld
xchg
mov
cmc
adc
inc
adc
pop
fnsave
xchg
inc
or
aas
and
pop
mov
mov
push
or
lods
mov
imul
lods
jns
mov
iret
xchg
and
add
mov
addr16
mov
inc
cmpb
mov
inc
cmpsb
jmp
xor
inc
outsl
in
add
lods
xor
fcomps
sarb
xchg
jae
data16
lahf
inc
dec
push
dec
stos
cli
lock
dec
sub
adc
add
sub
push
or
push
imull
push
xor
jbe
out
test
jmp
dec
es
inc
testl
leave
xlat
cld
enter
xchg
and
lods
mov
out
dec
outsb
pop
add
mov
push
rclb
cmp
test
push
cmpsl
andl
fadd
xchg
cwtl
popa
inc
testl
sti
dec
pop
idivl
out
add
cmp
js
jg
out
arpl
rorb
xor
xchg
fdivrp
mov
aas
add
xor
cmc
sub
push
mov
jno
add
js
popa
int3
lcall
lods
ja
ss
xchg
test
icebp
mov
imul
pop
cld
sti
inc
pop
dec
inc
insb
dec
mov
add
inc
loopne
and
push
xlat
mov
sub
je
add
ds
pop
mov
jae
add
jge
std
mov
adc
daa
xchg
rcll
movsb
lock
or
fwait
sarl
je
icebp
hlt
scas
add
lods
mov
xchg
and
dec
pop
add
ljmp
sub
cmp
icebp
or
cmp
test
rcll
je
xor
das
test
mov
mov
push
mov
jg
cmpsl
cmpsb
das
loope
push
das
sbb
mov
mov
lahf
dec
insb
adc
clc
in
das
sbb
sbb
inc
imul
push
mov
stc
adc
cld
push
test
sub
or
xchg
push
into
push
or
dec
xchg
adc
or
pop
fmuls
jo
mov
or
push
push
inc
xchg
xchg
mov
mov
cli
xor
dec
aaa
xor
mov
shrb
sub
fcoms
jle
mov
aas
or
inc
dec
rclb
cltd
or
xchg
mov
inc
mov
out
cwtl
push
arpl
int3
inc
or
mov
lret
push
xor
adc
lcall
add
sub
mov
mov
inc
push
mov
inc
test
lods
add
xlat
lods
ja
dec
je
sub
xor
inc
mov
mov
fstpt
lret
orb
test
jmp
and
cld
and
jo
iret
lret
xor
xlat
mov
lods
dec
stos
outsl
outsl
sub
jo
std
faddl
aam
lds
or
insb
rorb
mov
cmp
data16
cmp
std
dec
hlt
outsl
in
mov
cmp
cmpsl
outsb
mov
adc
sub
or
cmpsl
lret
jl
or
and
jne
out
lock
add
loopne
sub
mov
add
aaa
add
jns
mov
mov
inc
cwtl
cmpsl
stos
repz
pop
and
xor
push
xchg
jae
pop
out
push
add
push
push
sbbb
add
sarb
decb
scas
mov
mov
or
loop
es
movl
pushf
ffreep
hlt
sbb
push
dec
adc
test
adc
mov
jle
cmp
lds
jo
dec
iret
pop
cmp
cmp
nop
mov
jo
icebp
jp
rclb
jg
push
xor
ret
add
shlb
xor
leave
je
scas
mov
ret
int3
add
rol
push
test
test
lds
adc
cmp
pop
std
xor
outsl
jg
mov
xchg
pop
push
xchg
and
push
push
push
outsl
decb
lods
repz
or
mov
mov
xchg
cmpsl
fimuls
shrb
fbld
out
fmull
add
and
jmp
inc
push
data16
mov
dec
push
adc
dec
cld
cltd
xchg
outsl
lret
mov
in
das
lock
shll
or
insl
xchg
rclb
xchg
mov
shl
mov
addl
popa
cmp
xchg
jno
xor
mov
cmp
xchg
je
sti
mov
pop
pop
outsb
imul
repnz
fcoml
add
jmp
xchg
adc
xor
adc
dec
aas
add
jl
mov
ret
xor
xchg
rolb
daa
in
cmp
mov
lea
or
xchg
negl
rclb
rorl
add
ja
push
aaa
lock
cmp
push
push
rcrb
dec
or
dec
stos
jnp
and
cli
sbb
stos
dec
shlb
xor
cmp
mov
mov
sbb
inc
push
add
mov
xchg
popf
cmp
test
lret
adc
push
jne
fdiv
mov
jo
cmp
das
mov
or
mov
sbb
scas
arpl
xchg
hlt
dec
push
push
jp
dec
into
mov
jno
add
cmp
popa
addr16
or
icebp
jle
movsl
pushf
adc
in
cli
push
notb
hlt
inc
mov
push
adc
xor
jp
dec
ret
mov
push
mov
xor
mov
pop
jg
mov
out
mov
push
std
push
pop
mov
mov
shlb
test
fdivrl
icebp
aas
add
mov
hlt
push
out
xchg
into
rcrl
dec
mov
sub
xor
ljmp
jmp
jmp
sbb
cmp
xor
fs
mov
icebp
dec
and
mov
addr16
jae
shrb
shrl
jp
and
test
ret
xor
push
int
insl
sbb
nop
pushf
and
pop
jge
fbld
inc
add
ljmp
cmp
xchg
pop
hlt
mov
or
mov
add
push
or
sub
shrb
mov
cmpsb
fldl
aas
xchg
jl
sarb
rol
add
jmp
sti
xchg
mov
or
mov
add
sub
aas
stc
call
inc
in
fmull
aas
dec
stc
hlt
jecxz
les
dec
js
mov
les
mov
pop
hlt
dec
sahf
iret
scas
sti
pop
ds
jge
cmp
xor
add
lret
adc
push
mov
fadds
aad
clc
push
or
shlb
inc
lods
pop
pusha
adc
test
sub
pop
or
bound
mov
jp
repz
out
js
dec
adcb
cmp
or
roll
pop
scas
fldl
xor
push
pop
test
negl
xchg
jbe
add
test
and
ljmp
lods
leave
push
shlb
or
xchg
xor
shlb
and
inc
mov
repnz
clc
push
dec
cmpsb
jns
arpl
sub
adcl
sbb
sub
dec
jge
mulb
sbb
push
xor
pop
lahf
mov
cmpsb
xchg
and
mov
jg
jo
cltd
xchg
dec
push
or
orl
cmp
pop
rorl
pop
pop
test
xor
add
jg
jns
popa
mov
cli
fadd
add
pop
enter
mov
mov
fwait
or
pop
push
adc
fmulp
in
xchg
pop
pop
inc
cld
mov
sbb
pop
sbb
mov
jo
push
mov
or
mov
mov
push
lds
leave
mov
dec
insb
ret
mov
stc
loopne
lods
lds
lret
insl
xchg
mov
lcall
dec
test
les
mov
xchg
popa
push
push
cli
fsts
inc
mov
adc
adc
insb
and
lock
jns
mov
test
nop
mov
xchg
repnz
push
jo
scas
fdivs
les
mov
xchg
lock
sbb
xchg
test
daa
je
xor
cmpsl
scas
inc
loopne
push
and
in
cmovbe
std
mov
mov
sub
pop
add
or
jg
sub
rclb
outsl
sbbl
dec
inc
dec
dec
add
mov
jae
fadd
fdivrl
jmp
adc
mov
lock
mov
dec
cwtl
sbb
pop
push
xlat
xor
xor
lret
dec
lods
dec
mov
add
adc
mov
dec
aas
imul
push
sbb
sub
jnp
xchg
adc
test
dec
cmp
xchg
mov
xor
dec
sub
das
push
inc
sub
push
filds
cmpxchg8b
int3
dec
cmp
jmp
mov
cmpsb
sbb
inc
in
ret
pusha
mov
xchg
iret
pop
cmpsb
xchg
push
insb
cmc
dec
sbb
scas
mov
xor
or
xlat
mov
cmp
sub
mov
in
or
cmp
pop
mov
inc
movsl
ljmp
shrb
test
ds
xchg
shld
mov
rclb
shrb
in
mov
mov
lcall
lcall
stc
imul
sbb
enter
mov
inc
hlt
adc
aad
mov
popf
loop
pushf
hlt
inc
les
jae
adcb
imul
adc
push
test
sub
pop
add
sub
loopne
fcoml
mov
mov
fs
cmpsb
push
cmc
and
xchg
pop
pop
out
or
push
ljmp
jno
cmp
add
sbb
or
popf
das
adc
inc
in
leave
sbb
xor
xor
movsb
scas
cld
imul
ret
or
and
fwait
sti
or
dec
imulb
pop
lret
cmp
fstpl
inc
sbb
cmpsl
not
in
cltd
inc
cmp
xchg
mov
jo
out
cmpsb
icebp
insb
scas
inc
insb
xchg
and
adc
je
fcoml
imul
loop
dec
scas
sbb
shlb
add
mov
test
jns
mov
push
jp
jbe
stos
xor
pop
test
test
mov
inc
cltd
push
pop
push
or
xor
xor
call
pop
stc
xchg
pushf
loopne
add
xor
cmp
lret
pop
sub
out
je
lcall
les
lods
cld
insb
sarb
dec
test
sbb
or
adc
cs
cli
xor
ljmp
mov
int3
mov
jmp
cli
mov
hlt
xchg
mov
adc
cmp
and
xchg
out
mov
xchg
sti
cli
je
xor
xlat
in
pop
dec
inc
pop
je
stc
pop
mov
aam
adc
inc
mov
repnz
jmp
sbb
test
or
sub
cmp
push
jp
andl
mov
push
pop
test
cli
add
push
dec
div
sub
pop
sbb
inc
mov
rcrl
sub
test
push
lods
add
icebp
xchg
adc
mov
sti
sub
ljmp
jecxz
mov
incl
fisubl
movsb
push
mov
dec
ret
icebp
pop
push
mov
or
inc
jmp
mov
mov
push
mov
icebp
xor
dec
popl
adc
les
ss
sti
adc
mov
lods
repnz
fistpll
cli
cmp
jl
mov
mov
or
mov
movl
in
mov
jecxz
sub
aaa
adc
mov
lret
jl
loopne
es
push
add
mov
xchg
sti
es
fimull
imul
jb
cmc
sbbb
sbb
movntps
jns
dec
cmp
adc
leave
push
xchg
mov
push
xor
add
dec
popf
std
xchg
add
lods
mov
or
pop
sahf
or
ret
add
addl
cld
fcomps
inc
push
pop
xor
test
push
lods
dec
nop
loopne
enter
fdivs
or
maxps
adc
iret
je
inc
pop
sub
out
lods
jmp
sahf
adc
arpl
mov
xor
clc
rorb
push
ljmp
adc
dec
xchg
mov
scas
adc
jo
push
sub
xchg
jge
push
adc
dec
jbe
mov
cld
movsb
xchg
ret
mov
in
jb
push
mov
or
inc
std
cwtl
or
inc
out
dec
les
testl
sahf
pop
ret
pop
mov
dec
out
loope
or
inc
add
repnz
movb
shlb
mov
lahf
mov
dec
mov
mov
int3
inc
enter
rcl
inc
sub
jg
and
mov
xor
mov
arpl
add
adc
xchg
sti
gs
pop
test
pop
and
sub
mov
jge
hlt
jg
mov
mov
cmpsb
mov
cmp
mov
mov
and
js
push
xchg
inc
bswap
int3
call
add
cli
sub
movsb
ds
pop
iret
or
pop
mov
adc
xchg
and
aaa
cmpsb
int
xchg
lahf
sarb
fcoml
mov
dec
mov
ds
jnp
xor
lods
push
dec
add
shll
jle
sub
mov
or
xchg
sbb
das
movsb
mov
inc
ss
and
out
sub
xchg
xchg
add
mov
popl
in
mov
ret
inc
sbb
stc
cltd
dec
add
or
xor
je
outsb
and
pushf
leave
mov
cld
cld
and
aaa
scas
xor
xor
xor
movsb
sbb
sti
pop
sub
xchg
adc
push
adc
outsl
testl
push
sub
ljmp
insl
mov
push
push
jae
das
xchg
int
jp
and
xchg
xlat
sti
out
orl
dec
bound
dec
add
sub
jmp
and
xor
mov
push
call
mov
fisttps
ret
inc
xchg
lahf
mov
fists
outsb
and
cli
daa
or
mov
inc
push
pop
and
jno
add
add
gs
fldl
mov
push
test
mov
dec
mov
mov
lods
lods
adc
adc
or
sub
or
sahf
cmp
pop
lods
mov
or
push
mov
sub
dec
cld
in
hlt
adc
testl
mov
or
xor
fcomps
jns
jge
mov
jno
jg
xorl
mov
cmp
int
lss
or
mov
stc
mov
dec
sub
sbbl
stos
push
push
add
fiaddl
xor
sub
das
dec
nop
xchg
enter
xor
add
addl
push
icebp
xchg
mov
inc
jmp
jg
mov
mov
mov
loope
outsl
xchg
xchg
xor
repnz
and
pop
adc
dec
pop
jo
inc
xchg
stos
dec
pop
out
push
push
lods
std
lahf
ja
lahf
testb
push
lret
mov
loopne
adc
test
adc
pusha
pop
mov
push
jp
cltd
xchg
fstl
cmp
mov
in
std
mulb
hlt
xchg
lock
xchg
cmpsw
mov
push
add
popf
jb
fidivs
fsubrs
stc
jnp
psubd
lods
mov
lret
cmovns
les
stos
push
push
mov
mov
sbb
push
dec
mov
mov
or
xor
in
jnp
ret
nop
mulb
push
pop
mov
and
push
addb
sub
repnz
add
rol
test
or
or
test
xchg
xchg
and
std
js
mov
lea
hlt
mov
mov
cmc
js
or
pushf
mov
arpl
iret
sti
pop
lret
mov
and
test
test
test
pop
into
aad
jb
ljmp
add
adc
push
jbe
jnp
pop
mov
mov
inc
mov
jnp
idiv
mov
inc
lods
mov
sbbl
push
out
or
and
push
pop
ljmp
mov
xchg
xlat
jo
or
add
sub
mov
jmp
adc
jmp
inc
mov
jbe
add
sbbl
je
cmpsb
bnd
xchg
cmp
sbb
xchg
xchg
pop
xchg
xor
pop
imulb
sbb
rol
xchg
sub
cmpsb
inc
fdivrp
xchg
imul
lods
or
mov
jno
gs
cmp
into
push
call
lods
xchg
adc
rorb
or
icebp
mov
call
adc
mov
pop
jo
and
pop
inc
test
push
test
int
xchg
or
aas
ja
fwait
xchg
jp
add
std
ja
cmpsl
jmp
cmp
add
jbe,pn
add
ds
fwait
arpl
push
cld
fldcw
adc
stc
sbb
loope
xchg
fnstenv
test
mov
dec
icebp
lock
dec
das
cmp
sbb
cwtl
jmp
in
data16
mov
mov
in
push
fisubl
sahf
aaa
and
loop
pop
pusha
mov
or
insb
cmp
rclb
test
xor
mov
jnp
test
test
roll
je
ret
insb
xchg
cmpsb
out
in
cmpsb
int3
and
out
int3
mov
xchg
movsb
cmp
ljmp
pop
int
bound
dec
mov
mov
jbe
loopne
cmp
cmp
sub
nop
ret
mov
xor
push
xchg
xchg
and
inc
lock
dec
mov
jae
adc
pop
mov
ror
sub
adc
or
das
cmpsb
repnz
jle
jno
push
jge
xchg
cs
xor
push
xor
sti
inc
shll
nop
imul
xchg
sub
js
ljmp
inc
stos
clc
dec
or
daa
adc
xchg
sbb
test
fcomps
push
test
outsb
pop
xchg
pop
or
push
or
xor
push
dec
mov
add
lods
or
cltd
mov
xchg
stos
pop
and
push
mov
ret
hlt
xchg
lcall
int
mov
mov
or
cmp
mov
add
cmpsb
sahf
data16
inc
das
stc
das
inc
inc
les
inc
push
cwtl
or
cli
inc
add
testl
mov
rol
idiv
lcall
jo
dec
jge
jg
cmp
mov
xor
mov
pop
jae
and
das
jnp
or
hlt
jecxz
add
dec
jmp
push
mov
dec
xchg
add
mov
dec
cmc
jp
movl
shlb
mov
adcl
push
or
test
in
outsl
lods
mov
sbb
add
and
test
pop
jae
movsl
sub
loope
mov
stc
cmp
ss
sub
xor
push
adc
jle
outsl
xchg
das
stc
push
fcmove
mov
sbb
rol
in
lret
movl
xorb
cwtl
lds
add
mov
mov
sub
xchg
add
sbb
lods
mov
xchg
dec
repz
jno
or
pop
push
cmp
push
daa
lret
movsb
imul
mov
test
pushf
mov
roll
lret
shrl
je
out
jae
shr
push
and
jnp
and
imul
pop
or
movsl
mov
mov
push
lret
loop
mov
pop
das
sub
nop
pop
xchg
mov
xadd
mov
cmpsl
inc
mov
test
or
mov
jbe
jno
inc
adc
cli
cmp
xor
test
push
lock
int3
mov
mov
sbb
sbb
jmp
movb
lret
faddl
jno
or
sub
xor
into
push
or
les
inc
cs
lret
dec
mov
push
mov
sbb
int
mov
inc
bnd
mov
sub
out
inc
int
movsl
movsb
int
pop
xchg
jnp
adc
xchg
cli
mov
and
in
ljmp
mov
dec
inc
mov
sti
cmp
stc
xchg
push
lds
clc
fisttpll
mov
aas
fcmovnu
pop
and
push
clc
testb
push
jle
pop
and
cmp
xchg
clc
daa
fbstp
or
add
outsb
int
inc
test
jno
mov
lods
adc
cmpsb
add
inc
xor
clc
movsl
jle
dec
shrl
cmc
dec
add
sbb
cmp
adc
les
in
imul
xor
enter
mov
add
das
addr16
and
push
dec
mov
sub
dec
mov
mov
sbb
fisubrs
rolb
lcall
lret
stos
sub
neg
cmp
pop
orl
cld
popf
jbe
decl
mov
stos
adc
dec
incl
jns
mov
movsl
hlt
gs
add
xchg
scas
or
std
cld
push
push
insb
incb
push
insb
incl
push
adc
xor
jecxz
rorb
jb
and
sarl
sbb
lods
inc
cs
and
cmp
push
testb
jp
pop
test
mov
clc
mov
mov
xor
mov
std
lea
dec
cmp
adc
sahf
mov
scas
pop
movsl
sub
addl
stc
daa
sbb
repnz
and
fwait
add
push
sbb
popa
cmp
cs
push
jo
repnz
adcl
pop
lea
adc
js
push
push
xor
ds
cmovg
stc
sub
sub
push
hlt
xlat
pop
pop
or
fistl
sub
jecxz
adc
stc
pop
iret
cmp
or
push
lods
ret
loop
mov
incl
shll
jne
sub
pop
add
mov
xorb
neg
pop
add
or
cmp
xchg
mov
add
stos
call
les
ret
mov
add
jg
leave
adc
or
cwtl
stos
stos
add
fcoms
nop
adc
xchg
xchg
daa
dec
testl
addr16
nop
cmpsb
dec
jg
outsl
aas
lahf
sbb
sbb
mov
lock
das
mov
xor
test
inc
and
adc
cmp
cmp
and
out
dec
pop
pusha
push
repnz
mov
pusha
cwtl
pop
aaa
dec
mov
notb
out
dec
cmc
ljmp
lahf
arpl
aad
xchg
add
push
jo
jmp
into
loope
test
add
mov
mov
lahf
jae
idivl
xchg
mov
jp
push
jmp
outsl
in
lret
add
in
inc
xor
rclb
xor
sbb
pop
je
stos
mov
nop
mov
pop
mov
pop
cmc
addr16
xchg
jmp
sbb
cmp
adc
add
and
movl
ret
push
adc
stc
mov
in
sbb
cmp
cmp
inc
and
mov
xchg
sarl
inc
mov
test
outsb
iret
pop
xchg
jle
pop
push
add
notb
ds
pop
push
xchg
push
je
das
ds
push
push
or
cltd
pop
lea
jmp
stc
sub
fcompl
icebp
adc
mov
lock
push
ljmp
popaw
push
and
mov
pop
pop
movsb
inc
mov
xor
push
dec
adcl
aas
lcall
mov
incl
hlt
adc
push
sub
shlb
add
mov
add
repnz
sub
pop
mov
or
push
and
das
repnz
xor
xchg
add
mov
sub
dec
jno
popf
xchg
adc
hlt
add
push
jl
xor
dec
mov
cs
dec
test
push
mov
scas
sbb
repz
hlt
cs
data16
adc
addr16
pushf
jns
cmp
or
roll
or
push
daa
push
into
nop
and
adc
push
mov
cmp
adcb
add
mov
cwtl
and
inc
xchg
rcll
pushf
lcall
sti
out
pop
shlb
lods
cmp
push
pop
subb
sub
mov
cmpsl
enter
pop
mov
adc
pop
clc
xlat
adc
cmp
sbb
adc
push
lcall
dec
sbb
aam
adc
mov
mov
shrb
inc
add
int3
mov
cmp
pop
aam
clc
sbb
imul
mov
call
push
push
adc
cmp
mov
dec
xlat
movsb
lcall
gs
rorb
mov
push
mov
xchg
les
ljmp
mov
aas
imul
sbb
mov
jmp
push
adc
test
loopne
fwait
cmp
mov
lcall
sahf
push
mov
push
or
inc
test
push
dec
test
aaa
aam
outsl
xchg
lret
cmp
pop
out
cmp
push
mov
test
fldl
or
loope
call
cmpsb
xchg
mov
jmp
call
loop
pusha
mov
testb
hlt
push
pushf
fcom
adc
cmp
arpl
mov
add
cld
mov
jo
cmp
adc
ret
std
and
mov
out
sysenter
iret
xchg
mov
nop
hlt
sbb
pop
pop
push
sbb
cld
pop
or
xchg
mov
lcall
subl
adc
mov
cmc
add
sub
jae
add
add
pop
pop
repnz
rorl
divps
cmp
testl
popf
or
inc
push
add
cmp
cwtl
pushf
sti
xor
xchg
mov
jmp
mov
xchg
stc
iret
icebp
mov
aaa
inc
rol
cmp
pop
xchg
inc
and
dec
std
push
cmp
ja
jno
movsb
pop
ljmp
jg
jl
push
pop
xor
pop
ja
mov
pop
stc
or
fdivrp
inc
loop
xchg
outsl
pusha
inc
sbb
dec
out
addb
xchg
inc
mov
or
insl
nop
mov
xchg
in
adc
stc
mov
mov
fwait
cli
movsl
or
mov
mov
sahf
mov
add
xchg
repnz
lret
ret
jecxz
insb
pusha
lcall
shlb
sbb
les
sarl
ja
sub
xchg
adc
xor
pop
stos
das
xchg
mov
adc
mov
jns
scas
out
jmp
fucom
or
imull
scas
add
inc
scas
ret
cmp
lret
pushf
test
movsl
mov
sub
mov
pop
cmc
nop
and
mov
leave
inc
inc
xchg
lods
dec
dec
add
aad
movsl
add
xor
jne
xor
push
popa
dec
sub
mov
mov
sbb
mov
jle
hlt
popf
sub
addb
sub
cltd
ja
nop
ljmp
lods
gs
cs
leave
out
mov
ja
or
push
xchg
mov
pop
mov
mov
and
repz
xchg
push
scas
mov
or
add
test
adc
repz
fnstcw
dec
loopne
jb
fwait
mov
jle
ret
mov
inc
shlb
mov
sub
jp
cmp
in
xlat
mov
lods
mov
adc
add
add
clc
arpl
loop
inc
mov
xor
mov
cmpsb
addl
xchg
mov
and
cmp
sub
mov
cmc
int3
fwait
clc
cltd
popf
push
mov
dec
movsb
aam
ljmp
dec
sub
ret
mov
aas
cmp
jne
push
push
add
rcll
mov
mov
xor
shr
and
xchg
imul
subl
add
sahf
mov
test
out
enter
jge
lods
push
lds
roll
popl
pop
out
push
xchg
cltd
or
fists
into
std
ror
sub
stos
mov
mov
movsl
stc
adc
stos
jl
mov
testl
push
sbb
mov
loopne
and
cli
cmp
bnd
cwtl
cld
adc
fisttps
mov
dec
pop
mov
xchg
test
mov
imul
int
repz
jle
adc
add
fnstsw
ret
push
pop
shrb
stos
cmpsb
xor
test
jb
mov
cmc
stos
in
sub
and
xchg
push
mov
lock
jbe
jmp
movsl
sub
aam
fadds
pushf
push
xor
mov
outsb
dec
out
push
dec
adc
fdiv
adc
adc
mov
push
inc
mov
xor
rcrl
clc
mov
nop
loop
mov
cmp
insl
inc
mov
ljmp
in
dec
cltd
push
mov
xchg
dec
hlt
jp
pop
xor
mov
push
sbb
and
rdmsr
jns
insb
and
pmuludq
push
sbb
pop
lods
push
dec
rol
test
sub
rorl
test
xor
push
stos
cld
fistl
xor
in
hlt
adc
out
xchg
and
adc
dec
or
mov
and
mov
and
ja
out
mov
nop
cmp
cmp
add
xchg
test
test
ficompl
repnz
push
push
idivb
pop
add
aaa
jnp
js
mov
sbb
sub
sbb
inc
scas
xor
xchg
mov
sub
mov
pop
movsl
add
jmp
ret
aam
mov
outsl
mov
pop
mov
cmc
mov
mov
inc
add
out
dec
filds
add
cltd
lock
adc
push
fdivrl
pop
lret
loope
inc
or
nop
sbb
or
adc
mov
jecxz
push
dec
or
mov
pop
in
iret
cmp
bound
sub
and
inc
mov
xchg
mov
adc
test
pop
scas
push
das
stc
std
ss
sbb
dec
inc
dec
repz
out
xchg
outsb
jecxz
inc
lea
test
out
aas
xor
or
aas
outsb
in
ja
inc
es
xchg
nop
lea
ds
sbb
repz
jg
xor
movsb
aad
dec
test
inc
mov
daa
or
in
decl
inc
icebp
jl
add
jae
push
scas
push
and
pop
rorb
jns
cmp
add
es
jle
cmp
sub
das
mov
stc
lret
add
push
inc
and
scas
sub
mov
inc
or
push
mov
pushf
pop
int3
out
jmp
leave
inc
inc
mov
mov
jg
or
mov
scas
test
fnstcw
faddl
dec
fistpll
sbb
test
jg
out
xor
daa
dec
repz
or
jns
xchg
add
sti
in
inc
test
mov
es
stos
aad
lcall
addb
dec
xchg
jmp
mov
addb
mov
mov
sub
mov
mov
js
dec
pushf
xchg
adcl
mov
jnp
ja
jnp
lock
jmp
xchg
loopne
stos
fstps
loop
cld
dec
stos
repnz
or
stos
xchg
sahf
cmp
add
cld
inc
mov
sbb
popa
mov
out
sbb
lods
scas
jns
jge
insl
sub
inc
cmp
enter
lods
push
popf
enter
cs
sbb
or
xchg
adc
or
add
stos
sbb
mov
jns
xor
scas
push
xchg
pop
fadds
sti
cmp
mov
jns
sub
push
lds
jecxz
or
repnz
popf
sbb
out
sub
mov
enter
dec
xor
xchg
dec
imul
iret
xor
mov
outsl
dec
jns
insb
dec
adc
outsl
xchg
mov
jg
inc
sub
sub
and
imul
ja
out
sbb
fsts
sub
jne
dec
fisttps
repnz
add
subl
mov
mov
dec
shrb
sub
ds
dec
mov
pop
int3
mov
or
lock
das
xchg
cwtl
mov
sbb
in
fsts
sbb
pop
adc
in
jae
ret
std
idivb
aam
imul
xchg
push
sbb
lds
insb
aad
cmp
scas
jmp
ljmp
xchg
ret
xchg
mov
loopne
aas
and
adc
jle
mov
std
inc
jecxz
pop
int3
lock
inc
xor
leave
enter
sub
sub
lds
std
mov
xor
pop
call
adc
enter
cmp
stos
mov
leave
test
fstl
pop
jmp
push
mov
mov
or
lret
pop
popl
push
sbb
movsb
jno
and
scas
push
leave
lcall
ja
mov
pop
ja
sub
ja
sti
sub
stos
popa
mov
lock
jg
aam
inc
inc
mov
xchg
jae
push
jne
imul
pop
faddp
pop
xor
shll
xchg
or
xor
add
pop
inc
cmpsb
mov
shll
inc
arpl
jns
mov
or
sub
jno
add
cmpsl
jae
cld
lcall
ret
push
cmp
adc
ds
addr16
add
lock
mov
dec
icebp
jmp
mov
push
and
adc
mov
inc
pop
jmp
add
mov
inc
cmp
mov
push
or
add
test
fsubrl
sbb
stos
and
xchg
add
mov
aas
ds
sub
xor
pop
call
ljmp
jb
dec
mov
add
lahf
xchg
test
mov
das
and
sbb
pop
mov
or
ret
adc
sbb
decl
daa
mov
push
sub
xor
rorl
loopne
jge
clc
mov
xchg
sbb
or
dec
nop
cmc
mov
fcoms
cmp
cwtl
test
xchg
cmp
xor
jnp
dec
pop
in
jne
push
clc
push
xchg
das
jmp
sub
insb
orb
mov
addr16
cwtl
add
cmc
xchg
cmc
aam
loope
out
pushf
dec
repnz
sbb
sti
inc
sub
je
ljmp
mov
sbb
or
mov
add
insl
jb
call
mov
cmpl
addr16
cs
movsl
andl
lret
insb
pop
inc
or
or
pop
pop
mov
mov
lcall
pop
call
lock
sbb
add
xchg
jne
test
add
mov
shrl
idivl
mov
imul
add
mov
adc
stos
jmp
rol
mov
mov
push
jb
cli
call
push
mov
adc
dec
ret
test
or
loop
ds
mov
sub
mov
loop
push
mov
and
repz
faddl
adc
mov
loop
lea
mov
fdivrl
add
xor
jo
push
repnz
mov
repz
xchg
or
ret
dec
repz
bound
dec
push
cmp
dec
xchg
and
insl
push
stos
push
and
stos
inc
push
adc
aam
sbb
and
nop
cmp
sub
cmp
ljmp
pop
cmp
add
pop
cmp
sbb
lcall
sbb
aad
into
push
in
in
cli
aas
pop
ljmp
pop
das
in
xchg
mov
loop
nop
inc
in
cmc
dec
or
sub
ljmp
add
stc
push
mov
jns
les
mov
pop
ljmp
pop
inc
test
outsb
pop
push
sbb
dec
or
mov
sbb
xor
push
sti
in
sub
and
jle
inc
cmp
and
and
push
lret
movl
push
sub
vmwrite
jl
lds
pop
dec
gs
cltd
std
das
or
sub
mov
cmp
mov
fs
ret
mov
dec
sbb
dec
test
sub
or
xchg
std
into
clc
lea
ret
add
add
xchg
iret
add
into
loope
xchg
pop
in
and
cmp
mov
lock
cmp
jo
test
cs
push
call
test
push
cld
pop
xchg
je
mov
or
add
or
int
jle
push
das
and
clc
daa
ret
adc
add
push
jmp
outsl
sbb
add
fbld
jl
mov
jg
loope
loopne
and
call
data16
imul
adc
xchg
daa
mov
dec
xorl
jmp
cmp
lods
push
push
nop
div
push
ljmp
mov
dec
faddl
pop
sbb
scas
rorb
fidivl
dec
and
mov
cmp
mov
pop
cwtl
addr16
cmp
inc
push
xor
xorb
sub
ja
call
mov
std
lahf
cmpsb
xchg
sbb
inc
or
cmp
mov
or
jmp
xor
push
aaa
sub
cmp
cmpl
cli
mov
dec
mov
mov
int
add
lahf
movsb
mov
loopne
and
stc
rclb
out
xor
sbb
mov
xor
push
jno
add
mov
inc
jmp
scas
das
in
inc
adc
dec
enter
xchg
cmp
cmpsb
and
int3
movsb
movsl
cmc
das
jbe
cmp
xchg
or
in
addb
sub
mov
sahf
cmc
mov
adc
sub
aam
or
mov
pop
sub
sbb
add
sbb
bound
cmp
mov
sbb
cmp
sti
lahf
mov
cwtl
repz
xchg
cld
rolb
cmp
push
xor
xchg
pop
popf
pop
xchg
mov
pop
ret
iret
xchg
js
inc
aad
das
mov
adc
fists
cwtl
sub
cmpsb
xor
in
popa
mov
jmp
adc
mov
inc
pop
scas
or
add
out
mov
inc
shrl
nop
stos
cmpsl
insl
sbb
mov
and
dec
push
jle
test
aaa
and
arpl
fidivrs
sbbl
sbb
xchg
xorl
cld
mov
popl
imul
xchg
out
push
mov
outsl
cmp
nop
cmp
popf
ret
test
fsubl
repnz
inc
ja
rorb
cvtps2pi
ss
cwtl
notl
sahf
seto
or
iret
cmpsl
pop
shl
push
cmpsb
stc
cmp
xor
lcall
sub
and
fwait
mov
icebp
ds
xchg
in
imulb
int3
repnz
xchg
cld
cs
addr16
and
rclb
sahf
jns
sbb
ljmp
ds
xchg
mov
sbb
adc
cltd
cwtl
sbb
das
aas
stos
imul
cmpsb
sbb
cmpsl
movsb
in
test
cs
into
ror
pop
and
test
mov
mov
data16
movsb
mov
addl
xchg
test
stc
mov
imul
shrb
xchg
dec
int3
jo
bound
push
mov
sub
insl
call
and
mov
sub
test
stos
sub
pop
popf
xchg
xor
shrb
lock
sbb
xchg
stos
xor
aaa
pop
sbb
xchg
movsl
sbb
popa
cmp
sub
stos
mov
outsb
movsb
repz
jns
jmp
lock
scas
mov
mov
enter
cmp
pop
mov
addl
lret
or
and
adc
movsb
mov
cmp
shll
aam
arpl
jne
push
nop
sub
push
add
sbbb
test
pop
lea
scas
and
xor
mov
rsm
sub
es
and
hlt
sub
out
cmpsl
icebp
das
outsb
cltd
das
sub
roll
es
outsb
test
cmp
daa
movl
testb
inc
data16
jbe
sub
les
ss
rolb
jbe
sub
mov
add
imul
add
mov
cs
lcall
imul
stos
pushf
iret
out
in
ret
fcoms
dec
lahf
test
rcll
jae
bound
push
xchg
mov
ljmp
xchg
and
mov
mov
inc
or
mov
negl
sub
testb
push
out
sub
lods
mov
ret
test
sbb
adc
add
adc
clc
loopne
clc
xor
dec
adc
push
movsl
pusha
pop
dec
inc
stc
ss
fs
pop
push
les
xchg
mov
ds
inc
sub
mov
jmp
int3
imul
ffree
push
pop
jmp
imulb
lcall
adc
sub
fstpl
dec
out
arpl
lods
ss
mov
pop
outsb
fwait
in
push
sub
fildl
loop
mov
loop
sub
sbb
sub
cmpsl
hlt
jnp
rorb
test
inc
mov
roll
jo
sub
xchg
dec
or
lds
sbb
sahf
cmp
jecxz
int
mov
test
inc
stos
xor
enter
fstl
fs
mov
push
cmpsl
add
push
inc
lds
inc
stc
and
cli
sbb
jmp
lods
mov
mov
orl
stos
rcrl
dec
test
push
cwtl
mov
sub
push
cmp
lahf
add
xor
sub
int3
push
add
fsub
or
or
add
xchg
mov
sub
mov
clc
pop
push
mov
push
xor
push
jp
or
push
pop
push
adc
adcb
std
lcall
ljmp
out
push
push
mov
pop
push
fidivl
test
dec
inc
fidivl
xchg
dec
inc
cli
scas
mov
clc
sub
sub
fwait
push
stc
andb
les
lret
inc
cli
jl
pop
leave
clc
push
mov
repnz
jae
js
int
sub
cmc
lret
ds
pop
add
loopne
std
xchg
xchg
pop
gs
dec
mov
xor
lods
mov
dec
cmp
jbe
icebp
xchg
pushf
sub
xchg
and
mov
call
int3
or
mov
add
jbe,pt
or
enter
inc
jae
out
mov
fwait
popa
nop
sbb
addr16
addr16
mov
int3
incb
dec
adc
mov
ds
call
sahf
dec
rolb
inc
pop
notb
sub
and
test
das
cmp
push
ss
mov
sbb
pop
add
xchg
adc
sub
sbb
adc
ret
hlt
cmp
or
inc
loop
adc
clc
cmp
sub
jae
mov
push
leave
aas
push
ds
loop
and
push
jl
outsb
pop
mov
mov
cmp
out
add
xor
mov
movsl
outsl
xchg
dec
out
cmp
add
lds
fwait
mov
sub
cs
mov
or
or
adc
push
out
scas
and
fwait
xor
das
fcoml
arpl
pushf
lahf
lea
sub
aas
fidivrl
popl
mov
cli
mov
int
outsl
loope
xor
dec
xchg
push
inc
loope
lcall
fsubrl
aaa
mov
call
into
aam
inc
lock
pop
lret
outsl
lock
fwait
jmp
fisttpl
inc
outsl
sub
out
mov
or
mov
mov
jle
rcll
pop
mov
popa
cmc
adc
mov
cmp
mov
pop
or
xchg
int3
sbb
jno
cmpsb
movsb
imul
popf
scas
int3
movsl
movsb
orb
dec
scas
jl
hlt
movb
adc
mov
cmp
jmp
cmp
stc
or
movsl
lock
outsb
push
dec
add
sub
sub
sub
xchg
sbb
pop
mull
sbb
jo
and
xor
int
shlb
sub
cmp
and
add
pushf
sub
addr16
gs
mov
lods
pop
mov
mov
stos
leave
fidivrl
or
xor
out
push
hlt
sub
mov
fstpl
dec
cmc
popa
ljmp
lock
add
leave
mov
int3
sub
andb
mov
fwait
es
lret
cmp
scas
cli
mov
sbb
mov
sarl
pusha
loop
pushf
outsb
push
scas
sbb
arpl
sub
mov
inc
hlt
mov
dec
mov
dec
cmp
xchg
pop
inc
lret
je
loopne
lods
popa
cmpsb
and
cwtl
mov
inc
aad
and
hlt
jnp
mov
mov
cmp
add
call
xor
sbb
dec
addl
mov
pop
imul
mov
inc
in
jnp
sub
push
rcll
decb
mov
rcl
dec
std
xchg
push
mov
mov
je
push
or
data16
adc
out
ss
sar
rol
jg
adc
fwait
pop
mov
stos
xor
sub
dec
inc
xor
xchg
pop
cmpl
push
or
pop
push
mov
mov
lret
pop
repnz
or
scas
sub
sahf
in
or
adc
xor
adc
aas
cmpsb
xchg
and
push
push
jl
sub
add
cmpxchg
pop
push
ret
mov
inc
scas
mov
shrb
xchg
mov
push
out
sbb
adc
pop
imulb
pop
popf
push
add
push
mov
call
sbb
adc
and
decb
xor
out
mov
and
sbb
in
adc
scas
out
mov
jo
sub
hlt
sub
mov
push
sbb
dec
mov
xlat
jl
lds
movzbl
fwait
cmp
mov
inc
out
cmpb
mov
sub
mov
es
adc
push
ret
insl
mov
sahf
sub
dec
popf
inc
repnz
fnstcw
adc
dec
es
mov
hlt
or
jl
dec
inc
in
xor
fldz
xchg
rcl
decb
pop
test
xchg
out
ret
jmp
sbb
out
ljmp
sti
jo
pusha
pop
dec
insl
mov
sub
dec
mov
adc
imul
sbb
int
mov
imul
out
push
add
into
arpl
mov
lcall
pop
jns
cmc
outsb
or
sub
mov
dec
xchg
mov
dec
mov
std
adc
jns
lret
fs
xchg
push
test
loop
fcmovbe
scas
jl
xchg
dec
inc
rcll
movsb
notl
mov
and
idiv
xor
std
clc
jne
scas
into
dec
loop
xchg
mov
pop
lods
rcll
movsb
xlat
and
jnp
xchg
pushf
jmp
rolb
mulb
jnp
xchg
fbstp
mov
scas
xchg
push
nop
movsb
sub
adcl
int
out
and
pop
xchg
sbb
pop
sub
push
and
push
inc
movsl
test
and
orb
push
mov
cmpsb
sub
sbb
pop
inc
outsb
and
in
xchg
pop
push
sub
cld
flds
dec
inc
xor
outsb
mov
testl
mov
fs
icebp
mov
dec
dec
bound
ljmp
fldenv
sbb
sub
adc
or
popa
lret
mov
cmpl
dec
mov
and
sti
xchg
js
fwait
dec
cs
shr
inc
ret
sbb
adc
add
mov
xchg
jbe
push
lret
inc
test
aad
adc
cwtl
xchg
aam
jl
xchg
sbbl
pushf
push
ds
daa
push
je
push
add
out
xchg
jb
adc
and
shlb
pop
xor
pusha
movsl
rcrb
aaa
and
scas
adc
sbb
ja
test
adc
fcomip
aaa
aaa
mov
dec
push
push
fisubrl
punpcklwd
stos
rorl
js
loop
lods
in
rcrl
jp
adc
jae
mov
xor
pushf
mov
inc
testb
fidivrs
mov
mov
sub
mov
aad
push
cltd
adc
repz
data16
test
pop
out
xor
cmc
inc
loopne
sbb
loopne
in
sub
mov
fs
icebp
dec
hlt
adc
pusha
fs
js
iret
mov
inc
imul
loop
daa
pop
ljmp
out
fsubrl
aam
incl
add
jo
jo
push
xor
cs
sti
mov
inc
test
les
outsb
xorb
and
movsb
mov
mov
repz
mov
or
xor
sub
jle
cmpsl
dec
mov
stc
js
push
jmp
xchg
cmpsl
imulb
in
xchg
push
and
sub
pop
rcrl
push
and
push
or
xor
jae
arpl
dec
dec
mov
aas
sbb
pop
lcall
inc
add
arpl
ds
incl
repnz
adc
jmp
pop
xor
mov
adc
mov
das
adc
fidivs
push
test
sub
mov
pop
fnstenv
inc
mov
sub
and
pop
pusha
hlt
push
xlat
sbb
lods
mov
xor
mov
mov
jl
aaa
or
add
addb
das
ret
es
aam
rorl
xor
bsf
xor
icebp
iret
add
jmp
inc
out
mov
cltd
cmp
lock
in
mov
int3
xchg
push
and
xor
xor
dec
mov
in
add
push
int3
add
pushl
cmp
pop
mov
movl
rolb
xor
jns
test
fwait
mov
mov
xor
movsl
or
and
gs
jns
sbb
movsb
pop
fisttpll
aam
movsl
idivb
mov
inc
ficoms
mov
div
mov
hlt
lcall
mov
sub
fisttps
cmc
sub
fwait
out
int3
test
sub
cmpsl
scas
add
xchg
and
push
jmp
fildl
jb
imul
imul
mov
adc
sahf
enter
add
lcall
cli
jb
xor
mov
fbstp
cmp
lret
mov
pop
cmp
and
leave
imul
xor
and
xchg
ret
cltd
mov
mov
push
dec
cmc
and
dec
inc
rcll
clc
js
or
inc
dec
enter
jo
pop
sub
push
jno
xor
lcall
mov
and
inc
int
or
aam
adc
test
cmpsb
cmp
shrl
and
shlb
inc
dec
stc
scas
idivb
cmpps
fdivl
leave
lods
xor
lret
popa
leave
jg
and
aaa
pop
or
mov
sbb
push
add
sbb
dec
cmp
adc
cmp
subb
sbb
and
stos
mov
ss
lds
js
mov
int
cltd
push
xchg
and
adc
lock
pop
lods
sbb
leave
mov
lahf
inc
xchg
lds
ret
ficoms
inc
sbb
inc
adc
push
imul
sahf
les
mov
andb
xor
cmpb
push
popa
das
cmp
add
add
push
pop
cmc
lret
and
cmp
dec
sbb
add
jmp
aas
xchg
pop
jmp
sbb
out
push
outsl
dec
cli
das
mov
dec
ds
into
outsl
mov
mov
fidivrs
mov
mov
lret
lods
stos
add
lods
lret
xchg
shlb
mov
cltd
jmp
xchg
adc
repnz
adc
and
fcoml
pavgw
insb
arpl
hlt
push
jp
and
test
cmp
xcrypt-cbc
cmpsl
xchg
test
mov
out
addr16
add
push
int
or
fldt
fdivrl
add
adc
stc
mov
mov
or
mov
repnz
xor
addr16
push
out
lret
negb
xchg
in
cli
in
sbb
mov
mov
popf
popf
mov
push
xchg
ja
mov
adc
jne
rclb
push
js
xchg
fwait
nop
adc
add
cld
cwtl
pop
les
pop
outsb
call
popa
pop
mov
mov
mov
mov
cli
pop
das
and
js
int
dec
insl
sbb
add
stc
inc
int3
stos
add
inc
inc
clc
xor
xchg
cli
flds
push
cs
xor
loop
les
les
dec
inc
cmpsb
mov
sbb
pop
mov
dec
lret
adc
sub
mov
sub
cmp
dec
dec
lahf
mov
lea
push
or
add
iret
add
cmpsl
lock
inc
mov
mov
neg
pop
xor
xchg
jns
cmp
popa
fmull
pop
outsl
icebp
sub
dec
lahf
scas
cmp
adc
push
mov
jmp
test
loope
hlt
rcrb
fsub
jno
stos
xchg
std
and
and
test
sub
out
or
ficompl
dec
out
mov
lock
jnp
int
add
mov
xchg
test
cmp
test
repnz
xchg
mov
xor
negl
cs
dec
push
cld
nop
out
push
js
test
stos
sbb
mov
stos
lock
mov
sbb
ret
arpl
jecxz
lcall
iret
mov
adc
adcl
scas
scas
cli
fistps
subb
fidivl
jbe
incl
dec
sub
out
scas
sub
jbe
aaa
iret
or
dec
pop
mov
push
jg
scas
subl
cmpsb
jmp
lock
lds
je
dec
fwait
cmp
sbb
mov
cmp
push
out
push
mov
push
sub
jge
popf
das
orb
xor
std
cmp
adc
aad
mov
jg
popf
or
imul
mov
dec
inc
mov
pushf
movl
lea
push
or
js
hlt
or
scas
push
cmp
jno
mov
push
jmp
out
test
dec
push
and
add
imul
adc
mov
adc
push
mov
inc
fmuls
pop
mov
pcmpeqb
dec
sbb
movsl
xor
push
xchg
sbb
lods
nop
daa
andb
xchg
mov
stc
xchg
ja
push
sbb
nop
jl
add
mov
mov
or
icebp
dec
lret
movsb
insl
stos
cmp
cmc
scas
repnz
dec
push
ss
daa
shll
mov
outsl
fisttpl
shrl
xor
lahf
mov
inc
sub
cmpsl
hlt
push
inc
xor
scas
xorb
in
aas
lods
xlat
jnp
sbb
add
shrb
xor
adc
lods
call
arpl
test
mov
or
sub
mov
movsl
sub
nop
add
add
dec
pop
push
sahf
clc
dec
or
cltd
subb
xor
or
push
lock
int3
insb
push
int3
push
cmc
hlt
aam
cmc
dec
inc
cmp
mov
inc
xchg
jmp
dec
repz
cmpsb
xchg
lods
test
shrl
xchg
mov
loope
dec
movsb
sbb
mov
popf
push
fdivr
cwtl
ja
jb
push
popf
sbb
fdivl
adcb
adc
stc
lahf
sti
mov
and
jge
mov
sub
cmp
es
or
enter
cld
sbb
cmpsb
into
subl
push
jns
inc
mov
or
inc
out
mov
lcall
scas
lods
mov
inc
mov
or
cmc
mov
sbb
fwait
jecxz
inc
xor
imul
cmp
cltd
dec
adcl
inc
shlb
ja
adc
in
shlb
xor
int
scas
adc
mov
sbb
mov
mov
adcl
dec
dec
ret
fildll
add
fistps
mov
test
xor
sbb
jl
sub
ljmp
rcrb
cmpsb
lret
shrl
aam
stc
in
mov
insb
xor
sub
inc
mov
dec
xchg
cmc
mov
adc
repz
mov
mov
js
mov
mov
cli
dec
jo
push
xchg
jle
and
sysret
cmp
mov
and
push
dec
dec
in
outsb
lret
notl
adc
bound
in
dec
test
xchg
fists
inc
push
stos
jge
jo
mov
cmp
out
aad
dec
fldl
out
mov
je
insl
iret
repz
mov
dec
mov
aad
test
add
push
cmp
or
or
pushf
ds
aam
in
xchg
jns
imul
mov
jl
xchg
pop
or
shrb
mov
jmp
arpl
sbb
mov
dec
pop
out
jmp
add
ret
sbb
test
out
sti
int3
scas
clc
sub
cltd
mov
xchg
mov
xchg
cmpb
push
out
enter
lods
inc
xchg
xlat
movsb
mov
mov
cmp
in
xor
cmc
pop
sub
xchg
and
cmp
mov
mov
ret
into
arpl
lods
xchg
fidivrs
in
push
nop
lock
pop
cmp
inc
cli
scas
dec
in
dec
and
inc
xchg
sub
xchg
jecxz
mov
cmpsl
adc
outsl
mov
xchg
mov
rcrl
cmp
pop
sbb
sbb
aad
jge
push
cmp
popf
jo
int
inc
stc
adc
cmp
sub
ljmp
inc
dec
xchg
aam
lahf
mov
mov
sbb
dec
push
push
loopne
iret
xor
pop
in
xchg
mov
xchg
mov
stos
pop
daa
test
adc
pop
mov
jbe
cmpsl
and
mov
lods
jecxz
pop
lods
fimuls
mov
sub
sub
imul
jnp
push
adc
test
adcl
sub
push
and
fists
pusha
lock
jge
xchg
lret
lods
cmp
gs
cli
clc
sti
cld
insb
push
cmp
jne
loope
pop
jmp
push
and
jl
addl
cmp
es
stc
gs
jge
mov
sbb
ss
mov
jno
lahf
call
outsl
add
push
cmc
imul
push
xchg
mov
pop
lods
push
sub
fistl
add
aas
adc
jnp
fistps
sysret
fwait
cmpsb
mov
adc
jae
inc
lret
in
or
sbb
mov
cmp
push
add
pop
push
mov
shlb
xor
xor
fdivl
push
popa
sahf
jg
sbb
mov
lods
mov
xor
mov
mov
popf
loope
or
mov
xor
test
and
icebp
scas
stos
daa
mov
xchg
push
jle
mov
pushf
jmp
or
mov
sbb
mov
xchg
jns
jo
add
das
jl
mov
outsb
incl
dec
sti
jecxz
push
insl
mov
mov
sbb
dec
in
movl
lods
mov
sti
fidivl
in
xchg
hlt
mov
push
xchg
imul
js
out
jb
enter
jbe
scas
push
js
cs
popa
sbb
xorb
scas
jb
xorb
xchg
in
popf
insb
movsl
xchg
or
into
std
adc
add
mov
xor
adc
mov
dec
mov
cmp
cmp
or
mov
pop
adc
inc
jno
gs
insb
xchg
jg
outsl
shlb
negl
mov
or
movsl
sub
sarb
jne
fs
das
xchg
mov
cmp
mov
out
sub
testb
sti
mov
outsb
in
inc
xchg
push
jl
cmp
pop
dec
mov
clc
add
inc
das
cld
negl
and
add
aaa
adc
or
cwtl
jle
cmpsl
loope
call
xchg
iret
mov
inc
enter
insl
or
inc
arpl
fdivl
stos
pop
add
fisttpll
sbb
jmp
pop
popf
lcall
add
cmp
adc
loopne
repz
dec
test
inc
or
pop
lock
adc
or
lcall
add
and
mov
les
pop
fwait
xor
test
les
nop
roll
stos
lods
pop
mov
sti
pop
add
jecxz
mov
or
or
mov
push
pop
movsb
inc
xor
div
fcoms
ret
mov
jle
cli
in
xor
pop
sahf
inc
cmp
mov
fisttpll
je
sti
lods
fsts
add
notb
xchg
imul
push
mov
sbb
cld
fcoml
iret
adc
pusha
lods
push
addr16
xchg
sbb
or
adc
pushf
cmp
xchg
mov
inc
ljmp
stos
add
mov
xchg
mov
mov
mov
sbbl
dec
repnz
adc
and
ret
sbb
xchg
test
sub
loope
add
xor
movsl
push
fldcw
and
mov
and
adc
leave
mov
popa
repnz
sti
cmp
je
loopne
push
mov
cmp
aaa
test
mov
ljmp
mov
xor
in
in
jmp
popa
sub
jnp
add
cmpsl
add
mov
sbb
aam
aas
pop
adc
mov
aaa
test
or
popa
adc
int3
add
inc
add
jae
xchg
jmp
pextrw
pop
push
and
notl
xchg
stc
push
rcr
xchg
adc
in
pushf
ret
inc
xchg
cmp
cmp
add
popa
data16
push
jns
xlat
adcb
xchg
push
sub
cmp
flds
mov
pop
or
mov
ret
out
call
mov
scas
mov
adc
cmp
fists
or
xchg
xchg
cli
mov
aas
addb
mov
inc
aad
xor
xor
mov
jmp
adc
or
adc
jl
dec
insl
add
push
verw
cmpsb
test
dec
mov
pop
dec
sti
sub
and
scas
loopne
xor
mov
sar
cld
clc
outsb
fdivr
aaa
cli
push
lcall
jns
xchg
mov
orb
sub
out
lods
sub
jp
mov
inc
fld1
jg
aam
pop
stos
aad
sti
mov
sub
jge
inc
arpl
cmp
movsl
imulb
inc
roll
sahf
dec
mov
das
outsb
dec
xor
xchg
and
popf
and
pushf
mov
dec
push
mov
cld
xchg
push
icebp
fsubrl
mov
clc
clc
or
lret
inc
pop
popa
jae
test
fwait
divl
shlb
jmp
or
mov
ss
fs
jg
icebp
adc
ficoms
mov
movsl
inc
jecxz
movsb
pop
stc
nop
mov
lods
idivl
in
cmpsb
jb
or
xchg
outsl
jne
or
movsb
push
or
shlb
clc
push
or
push
fcomps
outsl
push
int
sbb
into
xchg
xchg
aad
and
cwtl
cmp
xor
sub
stc
cli
inc
aaa
rclb
push
sub
sub
fnsave
or
imulb
das
xchg
ss
adc
addb
test
aas
jno
and
or
out
sbb
repz
cli
rdtsc
xchg
add
fdivs
sbb
movsb
outsl
inc
out
adc
stos
push
push
jge,pt
mov
adc
loope
and
jno
repnz
mov
jp
mov
popa
adc
test
cs
loopne
adc
shll
and
jl
jo
xor
sahf
idiv
push
loopne
iret
mov
xor
push
mull
outsl
xorb
cltd
sub
inc
push
jmp
sarl
sbb
xchg
sub
std
cmp
popl
xor
adc
vmovaps
sub
pop
mov
xchg
mov
mov
repz
fldl
inc
icebp
pop
sbb
or
and
jge
mov
inc
xchg
cmp
std
xchg
sub
mov
test
or
outsb
dec
ror
cmp
subb
add
outsb
xchg
ds
xor
sub
add
adc
idiv
insb
inc
xchg
mov
das
jne
cmpsb
and
push
dec
sarl
jg
fcoml
cmp
or
adc
aas
add
xor
pop
mov
lods
pop
inc
mov
lock
das
inc
test
adc
inc
bound
aaa
adc
out
mov
lret
jg
and
xorl
fwait
jecxz
inc
mov
dec
enter
cs
pop
mov
cmp
xchg
sub
mov
mov
test
jne
ds
imul
arpl
clc
mov
lahf
and
dec
ljmp
xchg
daa
popf
and
add
lods
xor
clc
cmp
dec
xor
and
test
inc
jne
add
rcrb
aam
vsubps
lret
loope
push
push
pushf
subb
push
scas
mov
lods
out
stc
scas
loope
int
cmp
mov
mov
dec
push
repz
fmull
sub
mov
in
push
or
sub
push
jg
pop
xchg
inc
jbe
cli
mov
leave
rol
dec
add
stc
mov
out
xor
xchg
push
sbb
cmp
sbb
inc
lock
sbb
xor
or
mov
dec
daa
ret
mov
add
inc
test
mov
inc
outsl
enter
mov
mov
sub
mov
test
ja
lret
pushl
xchg
testl
jnp
and
fsubrl
fs
insb
sub
faddl
push
push
cmpsl
daa
in
cmpsl
cmp
lgdtl
pop
cmp
mov
mov
mov
mov
lret
popa
loop
push
outsb
sub
mov
lods
mov
add
or
sbb
daa
rorb
in
xchg
mov
mov
test
dec
mov
fcmovbe
adc
jo
pop
stos
inc
mov
notb
rcr
cmpsb
scas
lock
clc
xchg
leave
inc
mov
repnz
cmp
dec
pop
adc
iret
es
dec
enter
pop
mov
xchg
aam
jb
xchg
pop
cmp
fldcw
add
shld
int
dec
sbb
push
movsl
repz
or
out
call
xchg
das
ficoms
dec
jno
std
fidivs
mov
adc
cli
lret
gs
pop
lock
or
adc
out
dec
jne
in
mov
add
cli
sub
mov
add
jmp
lock
out
ret
lock
call
add
dec
cmc
in
adc
aad
and
mov
aas
pop
lock
push
std
sub
add
mov
pop
xchg
mov
andb
or
mov
sbb
daa
insl
dec
clc
aaa
aas
std
cwtl
sub
lods
dec
aaa
or
andb
adc
sub
xchg
pushf
mov
fwait
jg
sbb
sbb
jo
mov
xor
insb
pushf
int
add
js
mov
data16
fldenv
pop
pop
arpl
jo
adc
jb
enter
es
cmp
mov
push
fldt
and
test
pop
pusha
and
push
mov
lods
dec
sbb
testl
lods
fisubl
insl
or
push
pushf
mov
iret
mov
pop
into
repnz
or
inc
test
inc
mov
shl
mov
sub
pop
mov
mov
push
jl
and
cmc
or
cmc
jmp
dec
repnz
cmpsb
xor
push
ljmp
pop
or
out
cs
pop
lock
mov
jnp
inc
mov
or
mov
xor
mov
push
add
cmpsb
scas
push
and
and
mov
popf
push
cmp
mov
bswap
sbb
cmp
dec
inc
mov
sahf
aaa
pop
mov
bnd
sbb
dec
faddl
into
push
gs
jge
jae
lods
cmp
and
add
arpl
xchg
or
add
cmpsb
enter
inc
icebp
cmc
je
nop
sub
stos
xchg
aas
inc
or
jmp
pop
mov
ja
dec
push
mov
mov
jbe
pop
sub
push
jle
push
aas
mov
sbb
cs
push
ja
jb
arpl
jae
dec
pop
rcrb
enter
pop
imul
or
pushf
xchg
xchg
das
pop
lcall
and
inc
sbb
fdivrs
loopne
in
xchg
insb
adc
push
push
xor
js
inc
aam
imul
mov
add
shll
bound
jae
ud2
or
cmpsb
es
jg
cmp
test
icebp
pop
inc
pop
adc
inc
aad
fbstp
inc
inc
imul
out
repnz
rclb
adc
cmpb
scas
repnz
push
ss
pop
push
rcll
mov
scas
es
xor
cmpsl
sti
mov
insl
repnz
cwtl
stos
add
cmp
mov
testl
call
test
mov
call
xchg
add
inc
and
xchg
leave
sbb
cmp
cmp
jns
insb
dec
cli
mov
cmp
inc
mov
dec
sbb
and
ror
rcrb
jbe
into
push
or
fmuls
icebp
outsb
aad
outsl
inc
int
cmp
hlt
push
movswl
aam
divl
push
int
mov
out
lret
mov
les
cmpsb
in
and
mov
cld
scas
insl
mov
sub
incb
xchg
adc
inc
neg
test
rcll
icebp
in
adc
adc
dec
fstl
idivl
dec
inc
xor
hlt
in
cmc
xchg
fistl
push
imul
sbb
sub
sbb
xor
cwtl
mov
mov
imul
ja
iret
shl
std
clc
sub
adc
sbb
aas
push
or
dec
push
push
sarl
or
lock
or
sti
ss
sbb
or
cmp
xor
xor
dec
xchg
shr
push
test
xchg
jnp
cmp
mov
pop
sbb
stc
inc
push
push
dec
shl
cmpsb
arpl
add
sti
imul
jb
mov
pop
aas
in
xchg
mov
inc
sbb
das
jnp
mov
jnp
out
pop
jl
pop
jmp
fimuls
adc
decl
pop
add
xor
outsb
decl
or
mov
adc
aam
push
pop
adc
push
mov
adc
pop
shll
movups
and
in
adc
scas
orb
xor
sub
cmp
cld
adc
insl
ljmp
or
or
rcr
mov
and
insb
and
inc
loopne
stos
sbb
lahf
test
mov
gs
mov
pop
pop
lods
and
xor
cmp
je
mov
nop
mov
data16
push
scas
jge
jle
xchg
jnp
call
cli
repnz
bnd
pop
das
repnz
push
mov
out
pop
push
and
mov
add
fiadds
ss
or
stos
xor
pop
aas
inc
add
cmpsb
and
outsb
xchg
out
push
pusha
pop
add
das
xor
jo
jg
mov
popa
adc
cli
push
mov
jge
sub
aad
loope
dec
jb
mov
mov
mov
sbb
fwait
pcmpgtb
insl
je
mov
or
lret
repnz
push
lock
push
sub
pop
cltd
int3
push
push
call
js
mov
add
das
je
jb
add
adc
icebp
pop
mov
dec
fwait
shrb
push
fisubrs
push
cmpsl
push
cmc
repnz
mov
clc
push
push
les
sbb
inc
adcb
mov
notl
pop
push
jb
pop
jo
shlb
pop
repnz
or
push
and
lahf
push
sbb
mov
call
mov
mov
xchg
dec
jne
mov
mov
adc
push
jo
push
dec
cmp
pop
mov
in
movsb
pushf
xor
or
dec
test
pusha
cmp
popf
call
and
inc
sbb
mov
mov
or
stos
lea
adc
jne
iret
out
int3
cmpb
adc
sub
and
das
lds
inc
mov
lret
push
inc
pop
inc
js
sti
and
add
addl
pop
mov
ds
pop
inc
add
inc
divl
inc
and
fimuls
add
dec
sbb
leave
outsl
push
push
pushf
repz
xchg
mov
add
or
sbb
mov
mov
and
mov
testl
dec
cmc
fwait
inc
mov
mov
jle
xor
ss
cmc
xor
cs
mov
push
cvttps2pi
lock
stc
lods
ja
cmp
lods
mov
sub
pop
addl
js
ja
out
repz
jne
outsb
mov
push
cltd
out
lock
icebp
xchg
clc
or
add
imul
cltd
out
or
push
jl
adc
adc
jb
lods
insb
jmp
add
dec
dec
dec
push
inc
cmpsb
dec
or
xchg
mov
outsb
inc
push
add
add
xchg
pop
es
cmpsb
divb
pop
xorl
fs
ds
push
add
ja
mov
daa
adc
movb
fildl
cwtl
out
add
fcomps
pop
push
xchg
test
lahf
insl
mov
push
cmpsl
adc
mov
loope
loop
movsl
mov
aaa
es
mov
ja
push
jb
mov
mov
push
cmpsl
adc
mov
push
outsl
or
shlb
stos
jns
push
jne
and
and
mov
add
es
cld
pop
and
dec
es
ja
mov
xchg
dec
fwait
xor
aas
adc
repz
fwait
mov
and
mov
aas
or
or
xchg
mov
aam
or
jle
aaa
sub
xor
std
push
mov
mov
mov
push
daa
jmp
or
adc
pop
sub
divb
shrl
and
hlt
sbb
ljmp
jp
and
sbb
shll
dec
fldenv
int3
mov
xchg
lahf
xor
sub
or
test
std
dec
mov
icebp
lret
pop
imul
push
adc
mov
negb
out
mov
shrb
sbb
mov
jno
sub
fsts
dec
adc
pop
fs
and
push
iret
mov
pop
outsb
out
idivl
dec
cmp
dec
mov
enter
mov
mov
pop
add
cmpsb
rorb
cltd
jge
jg
out
push
shr
aad
push
adcl
inc
adcl
pop
mov
or
xor
fildll
mov
pop
add
sarb
and
mov
xchg
jmp
es
or
mov
pop
es
popf
pop
mov
sarl
stc
pop
insl
imul
aam
fdivr
push
bound
dec
sti
and
pop
repnz
filds
outsl
jle
cmp
pusha
iret
ret
cmp
push
sbb
or
test
push
mov
jb
dec
or
mov
scas
shlb
pop
jnp
jno
pop
inc
popa
negb
cmp
das
push
add
test
faddl
out
sbb
lcall
sbb
cmp
repz
add
xor
add
dec
icebp
xor
in
push
adc
jmp
cmpsl
inc
jbe
pop
sbb
cmpsb
lds
in
xlat
ja
or
hlt
xor
pop
mov
sti
jp
pusha
icebp
popa
cli
addl
imul
insl
xchg
fisttps
push
and
repz
sub
sub
ljmp
or
andb
gs
addr16
jno
xchg
insl
jns
or
rol
das
cs
mov
jno
shrl
test
lods
mov
clc
imul
ds
cmovnp
test
insl
sti
orl
inc
cmp
pop
xchg
sbb
mov
stc
cltd
notl
jnp
xchg
inc
pop
movsl
mov
or
int
repz
lods
mov
xchg
push
pop
movsb
pop
inc
ds
sbb
sbb
mov
lahf
repnz
cmpsb
sahf
pushf
and
mov
adc
mov
cmpsb
mov
testl
add
inc
cli
imul
fsts
mov
mov
dec
mov
sti
xor
addr16
mov
mov
or
mov
popa
repnz
jo
xor
cmpsb
jl
cltd
pop
mov
shl
xor
sbb
lds
imul
fildl
scas
mov
aam
mov
int
sbb
cld
repnz
adc
adc
es
test
shrb
jnp
pop
pop
sub
clc
jnp
xchg
mov
in
jno
fbstp
xchg
push
jbe
dec
add
ldmxcsr
subl
js
jnp
fucomip
loop
pop
lahf
cltd
lret
je
jns
xchg
mov
cmp
cmc
pop
popf
scas
jo
ss
cmc
bnd
lds
insl
fistpl
cli
nop
test
add
mov
add
mov
stos
nop
adc
and
repz
mov
dec
dec
inc
fisttpl
and
mov
push
mov
jp
dec
repz
test
addl
xchg
push
adc
push
push
xchg
out
pop
ret
cs
int3
add
cld
testl
fdiv
jo
pop
cli
push
fists
add
dec
mov
scas
and
push
imull
pop
mov
inc
movsb
mov
arpl
dec
jo
inc
in
mov
lock
mov
push
or
in
cmc
in
ret
insl
movsb
sahf
stos
add
xor
and
loopne
push
cmc
sbb
sbb
or
lea
aaa
lahf
mov
daa
dec
cmp
enter
pop
outsl
or
inc
dec
gs
jp
incl
loope
inc
dec
add
sbb
scas
scas
pop
popl
mov
xchg
cltd
jbe
add
sbb
ljmp
int3
jae
pop
mov
add
pop
in
cmp
mov
loopne
mov
mov
or
lea
popa
push
adc
dec
out
rcrl
pop
ss
inc
inc
pusha
daa
jnp
push
iret
add
sub
fiadds
jle
addr16
test
std
add
sub
mov
mov
mov
and
lds
xor
sub
xor
std
xor
aas
loope
mov
fisttps
stc
addr16
fs
mov
and
xchg
jl
lea
popf
stc
aas
add
sti
std
mov
xlat
dec
in
imul
iret
stos
dec
insl
sub
jns
lods
repz
adc
jmp
aas
das
and
lods
mov
ds
xlat
in
inc
into
xchg
cmp
outsb
lods
inc
lcall
dec
into
std
mov
add
jno
add
sub
mov
mov
inc
daa
add
scas
xchg
outsb
mov
dec
clc
and
cli
fs
add
cld
mov
ljmp
lret
leave
add
int3
test
dec
cltd
mov
jp
xor
ror
test
mov
arpl
enter
mov
aad
repz
imul
in
xchg
movsl
pause
sub
add
sbb
out
and
mov
cltd
shlb
arpl
jmp
xchg
xor
mov
mov
je
fisttps
xchg
xor
test
sub
sbb
test
mov
mov
loop
ss
stc
push
nop
dec
hlt
sub
pop
pop
negl
aas
pop
cmp
sub
mov
test
xchg
push
lret
jno
repz
fcomip
mov
pusha
pop
mov
push
es
cmp
leave
cmp
dec
arpl
pop
mov
inc
pop
stos
int
insl
cs
in
add
jg
add
jge
push
pop
sub
push
cmpsb
clc
or
outsb
repz
daa
pop
lcall
dec
hlt
and
pop
add
sbb
lahf
lea
cld
dec
sbb
negl
insl
clc
push
mov
aaa
sar
inc
cld
scas
pop
enter
mov
aaa
xchg
push
lahf
jp
icebp
pop
test
or
lock
inc
push
cmpsb
push
imul
ds
jg
pop
add
mov
stos
std
or
icebp
sti
add
adc
pop
adc
jmp
stos
idiv
outsb
cmp
xchg
call
leave
add
mov
push
test
inc
inc
ret
cli
xchg
xchg
mov
xchg
mov
push
inc
sbb
ret
sbb
cmpsl
mov
pop
sub
je
cmovge
mov
mov
rorl
pop
in
mov
jnp
dec
fs
sbb
shlb
jb
add
test
idivl
jo
inc
sbb
dec
cli
ljmp
and
imul
push
push
hlt
data16
out
inc
hlt
push
adc
addr16
aaa
push
inc
xchg
call
sub
cli
aas
xor
hlt
adc
fnstsw
sub
test
mov
into
sbb
push
jl
lds
inc
xchg
mov
loope
mov
je
cmpsb
pop
xchg
mov
mov
ds
shlb
dec
sbb
in
aad
pop
inc
xchg
pop
aam
push
add
inc
sub
xchg
mov
clc
ret
xor
int3
mov
dec
aam
cmp
pop
enter
fstps
test
ss
mov
nop
xor
je
sbb
or
sub
xchg
cmp
cs
bound
nop
enter
test
sub
cmp
push
daa
sub
out
dec
cwtl
mov
movsb
out
out
out
add
movsb
inc
insl
inc
shl
mov
xchg
rorb
xor
xchg
adc
inc
jne
add
and
add
aam
pop
ret
pop
scas
or
xchg
push
daa
pop
add
xor
add
insb
xor
leave
ret
sub
dec
mov
sub
addb
pushf
mov
mov
xlat
mov
jno
mov
es
test
xchg
sbb
jb
xchg
rcrl
lcall
enter
mov
lahf
cmc
je
sub
adc
insb
xor
dec
sub
rolb
mov
cmp
test
aam
lock
push
xchg
dec
push
mov
inc
jns
adc
inc
pop
dec
and
lahf
pop
clc
into
push
dec
pop
push
jg
mul
and
xor
andb
jne
imul
xchg
pop
test
pop
push
push
cwtl
fbld
std
dec
push
lret
incb
xchg
sub
push
add
xor
jno
fxtract
daa
push
cmpsb
add
dec
cwtl
add
mov
mov
out
mov
mov
repz
icebp
jge
aas
adc
fldt
mov
scas
dec
push
inc
pop
sbb
xchg
ds
mov
and
mull
fwait
daa
inc
mov
aam
mov
ficomps
add
cmpb
or
andb
pop
mov
inc
push
outsb
aas
loope
sub
sub
test
repnz
ss
push
cwtl
les
pop
cmp
jecxz
stc
sbb
and
xchg
pop
add
repnz
nop
jne
clc
mov
xchg
rol
inc
aaa
mov
nop
aam
aam
adc
push
mov
dec
adc
lods
dec
jecxz
mov
pop
out
xchg
arpl
pop
push
daa
adc
sti
scas
in
int3
sbb
cmpsb
sbb
mov
xor
and
sti
and
sub
repz
aam
sbb
sub
adc
sbb
dec
dec
xor
cwtl
mov
cmp
daa
fs
mov
icebp
jb
mov
push
and
test
push
dec
sub
xchg
icebp
inc
mov
lahf
cmc
ljmp
into
add
sub
inc
mov
dec
int
xor
es
mov
xlat
repnz
aad
mov
test
clc
pop
push
loop
js
inc
jnp
and
or
xchg
cwtl
or
pop
mov
or
inc
lock
add
mov
push
push
sbb
cmp
push
sti
cmp
push
pop
cltd
dec
push
mov
incl
fldenv
jmp
es
into
sub
lret
or
mov
push
jnp
mov
lea
sbb
push
js
std
dec
shll
pop
pop
lods
adc
cmp
pop
scas
cli
mov
notb
subl
adc
pop
pop
push
xor
jle
and
push
sub
enter
dec
cs
mov
das
inc
aas
lods
mov
insl
lcall
call
lock
cmp
fcmovnu
pop
xor
mov
dec
and
std
lock
mov
adc
testl
add
movb
js
xchg
imul
sub
dec
stos
xor
fisubs
repz
push
xchg
push
jne
jp
fimuls
bound
jns
movsl
mov
dec
aaa
jo
or
adc
mov
mov
out
test
imul
stc
fcomps
insl
jp
mov
cld
dec
sbb
pushf
mov
in
pop
pusha
xor
test
cwtl
lcall
enter
cltd
fcmovbe
xchg
inc
or
mov
inc
pop
push
xor
adcl
lods
into
adc
or
scas
mov
cmpb
sub
or
mov
subl
dec
icebp
popa
inc
pop
xchg
adc
adc
imull
adc
mov
push
push
adc
jno
pop
push
ret
xchg
sbb
mov
int3
xor
not
pop
stc
ret
pop
sbb
fldl
stc
pop
pop
int3
sbb
xchg
stos
or
jg
cltd
jb
jae
push
and
sbb
sub
ret
dec
fstpl
lcall
cmp
mov
inc
test
xor
mov
and
and
pop
std
outsl
jns
outsb
out
ret
mov
test
add
pop
pop
in
mov
sahf
js
inc
aam
sub
test
into
out
push
call
push
fdivrs
push
clc
movb
dec
addr16
mov
pop
clc
insl
push
mov
adcl
subb
ljmp
lret
push
mov
pushf
std
stc
xchg
xchg
stos
repnz
jne
repz
call
das
test
cmp
mov
cltd
js
cli
push
inc
xor
push
scas
dec
xchg
xchg
mov
das
or
add
add
or
dec
xor
mov
sbbb
int3
subb
scas
xchg
icebp
subb
dec
repz
lahf
sti
sub
push
add
cmpsb
or
mov
addb
loopne
das
roll
xchg
cmp
sub
xor
and
add
mov
xor
pop
push
inc
pop
mov
xor
mov
jge
into
in
je
out
cli
aam
mov
mov
jg
cmp
ss
je
adc
outsl
and
xchg
cli
sarl
pop
add
aas
cmp
jb
cmp
cmpsb
or
out
inc
dec
jmp
movsl
or
add
repz
and
push
daa
out
fildll
push
ret
std
pop
lahf
dec
sub
dec
sbb
mov
and
cmpb
cmp
sub
cwtl
inc
cs
test
out
clc
and
test
push
int3
ficoml
adc
xor
cmpl
inc
iret
pop
insl
pop
add
outsl
outsb
mov
punpckhwd
xor
mov
mov
sub
jne
sbb
push
push
mov
mov
sarl
sahf
fmuls
popf
push
fs
sti
xor
mov
dec
scas
add
push
mov
xchg
sub
sbb
mov
cmp
add
or
call
aas
sbb
lcall
adc
mov
mov
test
xchg
jle
adc
gs
mov
in
les
xchg
inc
outsl
jnp
hlt
gs
xchg
xlat
cmpsl
movsl
cmp
lods
bound
push
dec
in
lret
dec
mov
mov
lock
pusha
jp
in
sbb
lret
mov
hlt
fwait
mov
dec
aam
or
mov
imul
pop
imul
fnsave
mov
sar
xchg
xchg
xor
cmpsl
lds
out
pop
mov
subb
push
ds
lret
cmp
xor
pop
scas
mov
xor
xchg
stos
mov
rcrl
test
sbb
mov
movsl
inc
aam
jns
push
jnp
cwtl
fnstenv
mov
pop
jno
stos
or
repnz
imul
jne
idivb
out
hlt
mov
add
mov
jp
scas
dec
push
shrb
faddl
fucomip
dec
mov
testl
loopne
clc
push
add
pusha
negb
std
push
add
cld
sub
dec
xor
in
stos
push
mov
or
idivb
add
std
inc
hlt
xchg
or
add
mov
mov
das
adc
jl
dec
shl
jne
test
cmp
loope
enter
inc
pop
insl
xchg
ljmp
test
das
dec
add
mov
xchg
test
sub
sbb
lea
sbb
push
fcmovne
mov
push
imul
ret
fdivrl
daa
cmp
inc
pop
iret
mov
adc
mov
cmp
push
lock
cli
jle
dec
dec
add
sti
mov
mov
iret
ds
and
sub
aam
gs
subb
mov
in
or
test
popa
push
call
mov
lock
icebp
add
mov
pop
push
or
das
mov
in
push
push
outsb
sub
ret
dec
mov
int3
test
and
pop
inc
pop
mov
adc
xchg
filds
ljmp
jg
divl
jecxz
sub
incb
pop
or
jns
loop
add
pop
test
outsl
xchg
outsb
mulb
enter
add
cmp
push
xor
cmpb
pushf
xchg
add
sbb
or
mov
das
jnp
cmpl
push
popf
jae
lea
cwtl
push
cmp
or
out
add
push
sahf
adc
jno
sbb
mov
mov
fmull
popa
inc
jbe
xor
fucomip
test
or
add
adc
xchg
mov
iret
test
in
cmp
pop
or
inc
pop
dec
add
push
cwtl
aas
jge
notl
sub
add
ret
out
cli
push
or
push
xchg
inc
nop
xor
and
add
xor
stc
push
mov
pop
inc
xchg
xchg
xor
dec
xchg
xchg
daa
push
scas
mov
inc
std
and
inc
cld
sub
mov
rclb
xchg
testl
push
std
or
es
add
test
sysret
dec
imul
sub
push
pop
and
sbb
push
mov
sbb
movsb
xor
dec
mov
test
pusha
sub
add
mov
adc
std
movsb
int3
insb
cli
daa
push
je
pop
mov
movsb
lcall
aam
xor
dec
cwtl
add
push
mov
lock
push
call
aam
xor
mov
sub
mov
testl
std
sti
xchg
lahf
andl
adc
pop
xchg
negl
sarb
and
mov
mov
pop
adc
rorb
test
das
rorb
adc
int3
push
cli
push
dec
add
adc
lahf
repz
jge
xchg
lock
and
fmul
sbb
hlt
int
xor
std
imull
shlb
or
dec
sbb
and
sbb
inc
iret
inc
pushf
mov
lods
mov
pop
or
xchg
adc
scas
xchg
cs
add
rolb
xchg
pop
fdiv
mov
and
xchg
push
in
and
mov
push
jle
mov
dec
je
cmc
or
dec
nop
xchg
mov
fisttpll
out
cs
lea
das
sub
adc
mov
or
jb
add
icebp
mov
adc
adcl
aaa
push
fwait
mov
lahf
xor
mov
pop
xchg
imul
addb
jg
add
loop
sahf
inc
lods
outsb
jecxz
ljmp
aam
cmp
add
lcall
xor
jnp
add
or
dec
test
les
loopne
push
push
mov
std
dec
dec
mov
sbb
jmp
in
iret
add
fwait
push
stc
imul
push
out
je
mov
mov
pop
jp
filds
add
mov
out
mov
sub
and
lods
jle
ret
lahf
jge
sbbl
or
sub
mov
cld
mov
mov
das
cld
mov
scas
sbb
and
mov
pop
mov
out
in
repnz
movhps
mov
nop
sbb
xor
xlat
sub
movsb
icebp
xchg
and
mov
push
inc
ja
pop
push
sub
sbb
stos
sub
ficomps
mov
nop
and
shl
leave
shl
or
aaa
stos
popf
jno
dec
mov
jmp
sahf
enter
mov
push
cs
pop
stos
and
in
outsl
xorl
jecxz
out
cltd
push
jge
mov
push
mov
movsb
push
cs
fdivs
push
jno
cmp
cli
and
jle
cli
pushf
call
xor
mov
mov
adc
mov
popa
out
push
test
insb
and
pop
into
mov
mov
mov
scas
fcmovne
mov
mov
lods
clc
cld
rcr
out
lods
sbb
clc
jno
add
outsl
add
jl
cmc
jg
pop
int3
xchg
in
icebp
mov
dec
stos
jbe
inc
inc
jno
mov
repz
mov
fimull
pop
or
xchg
mov
int
dec
cmp
add
push
xor
add
sahf
adc
fcomp
and
cld
je
xchg
jae
adc
mov
sahf
mov
adc
pop
out
jbe
cmpsl
dec
cmc
add
fsts
push
sbb
inc
pop
mov
repz
cmpsb
sbb
sbb
aaa
jo
mov
pusha
aad
cld
mov
jmp
subl
addl
cli
mov
pushf
data16
pop
push
xchg
sub
lods
inc
adc
mov
call
inc
popf
les
jl
fwait
sbb
mov
push
inc
dec
cmp
cld
sub
xchg
ret
jmp
sbb
jnp
fwait
mov
xchg
push
ja
clc
jne
sub
popf
mov
xchg
cli
repz
aam
dec
push
fnstsw
sbb
adc
cmp
inc
adc
test
test
ret
cmp
mov
aad
cltd
sub
jo
pop
test
int3
sub
adc
sub
mov
js
sub
cmc
adc
cmp
mov
nop
mov
mov
pop
mov
pop
pop
add
jge
mov
lock
pop
sub
clc
call
lock
cld
scas
cmp
scas
lds
aad
push
pop
sbb
adc
push
std
mov
rclb
xchg
cmp
add
out
xor
pusha
aam
push
push
ljmp
jge
inc
testb
adc
sti
cmc
push
pop
adc
mov
rclb
rorb
jp
pop
lea
fidivrs
and
stos
and
jo
xchg
es
sbb
das
hlt
cmp
sbb
mov
mov
jl
xor
outsb
mov
jns
push
jmp
push
negb
fbstp
sti
stos
dec
outsl
inc
mov
cld
movsb
hlt
es
pop
call
adc
cmc
stc
sbb
testl
scas
inc
push
dec
xchg
andl
data16
mov
and
scas
mov
jbe
jns
mov
adc
jp
jle
jg
insl
adc
mov
pop
adc
add
dec
jl
cmpsl
add
shr
xchg
xor
jp
sub
ret
addb
mov
sub
clc
loopne
mov
jae
push
fidivl
add
push
mov
adc
test
aam
push
outsb
imul
aas
sti
mov
sbb
add
into
jg
call
jg
adcb
cld
pusha
pop
jnp
and
xchg
dec
cli
sub
and
test
and
xor
rorl
outsb
or
push
adc
imul
cmp
out
mov
ret
dec
xorb
or
mov
mov
out
dec
fdivrs
fwait
addl
sbb
push
cmc
sbb
xlat
std
sbb
xchg
lea
iret
push
scas
sbb
adc
aas
rcrb
in
add
jmp
repnz
stos
test
jl
inc
fildll
pop
push
adcb
add
mov
test
cli
jp
sbb
scas
dec
stos
lahf
add
or
sub
pop
pop
jg
movd
jecxz
mov
mov
xchg
repz
movb
stc
add
jnp
or
aas
or
enter
jo
aam
clc
add
orl
push
repz
rclb
xor
mov
cwtl
fcomps
test
pop
orl
movsl
arpl
pop
loopne
adc
lcall
je
mov
add
les
icebp
mov
add
sti
pop
test
out
push
or
pop
pop
mov
jo
test
jle
mov
pushf
push
mov
add
sub
push
add
add
outsb
loopne
jmp
in
xor
test
xor
popl
loope
cmp
adc
lods
fimull
out
loop
push
pop
test
mov
icebp
mov
test
or
fsubrl
mov
sti
mov
mov
push
pop
xor
fistpll
xor
pop
shlb
or
xchg
adc
dec
loope
clc
outsb
jge
das
add
ljmp
xchg
test
test
cli
icebp
pop
clc
movsb
push
cmc
dec
shlb
add
fldenv
gs
movsl
push
stc
sar
pop
mov
cli
inc
cld
jnp
mov
inc
xor
push
mov
jmp
sbb
xor
mov
pop
and
popa
cmpsb
mov
jns
mov
or
dec
inc
inc
or
std
cmpsb
pop
push
js
fwait
dec
add
and
mov
movsl
mov
sub
cltd
into
flds
mov
xor
jb
fcmovnb
mov
jbe
ret
mov
aas
pop
mov
push
jecxz
in
mov
addl
popa
xchg
mov
push
push
mov
xor
adc
orl
movsl
mov
adc
sbb
fists
mov
fs
push
jno
addb
pop
lcall
dec
mov
adc
mov
adc
mov
nop
lods
sarl
cmpsl
dec
add
mov
or
loope
jae
mov
and
test
jge
push
adc
cld
cld
cmpsb
sbb
mov
sbb
cmp
add
imul
xchg
nop
cmp
pop
cmp
pop
stos
cmp
mov
jno
push
mov
das
mov
dec
fisttps
and
mov
insb
sbb
jl
cld
ss
sub
mov
cmp
out
fsincos
jle
adc
mov
sti
out
or
sbb
inc
pusha
stos
push
js
int3
xchg
insb
stc
jmp
cwtl
loope
andb
shr
add
aam
repz
adc
mov
mov
repz
loopne
insb
add
adc
lret
mov
js
push
push
out
test
insb
pop
inc
icebp
mov
ss
in
js
ja
sub
pop
pusha
clc
jl
and
xor
mov
stc
lret
cwtl
mov
and
enter
loop
push
xchg
adc
mov
int3
fwait
sahf
in
ds
aad
dec
cmp
pusha
adc
jecxz
add
rol
movsb
lods
outsl
fsin
sub
lods
push
inc
mov
dec
adc
loope
xlat
and
jg
je
imul
cmp
stos
sub
fsubrs
xor
add
push
jle
add
out
out
mov
enter
icebp
lahf
call
adc
mov
shr
sarb
inc
scas
xchg
cmc
xlat
xchg
inc
test
fs
in
push
lods
mov
fs
adc
xchg
js
mov
sbb
mov
scas
adc
mov
fcmovb
loope
jo
mov
test
stc
cmc
clc
aas
rorb
pusha
repz
adc
dec
jl
push
enter
and
mov
xchg
jno
sub
lret
jecxz
leave
lods
bnd
pop
jns
mov
je
fsubp
in
out
and
cltd
aam
dec
loop
xchg
mov
negl
rcr
mov
andb
mov
aam
shll
add
adc
or
sbb
adc
stos
scas
add
xor
fs
fistl
int3
sub
push
lods
fdivr
push
out
outsl
adc
push
movsl
xchg
mov
into
inc
stos
mov
add
notl
xchg
sti
xchg
xchg
cmc
test
add
jge
push
outsl
and
subb
je
dec
pop
test
and
je
orb
cmp
adc
mov
xchg
testl
xchg
inc
mov
scas
xchg
adc
and
cmp
add
mov
cmp
addr16
jmp
icebp
xchg
push
aas
pushf
outsb
jns
push
push
mov
xor
mov
pop
je
outsb
lahf
call
imul
pop
cmc
add
aam
ret
inc
cli
sarb
mov
jne
xchg
jg
hlt
pop
cmp
xchg
adc
add
inc
das
jae
je
lahf
addr16
insb
xchg
pop
repz
hlt
scas
pop
mov
lods
jno
inc
push
int
sbb
test
sbb
cs
int
sbb
scas
xor
push
popa
cli
mov
cwtl
mov
roll
pop
fisttps
test
shl
sub
mov
pusha
cmpsl
mov
or
test
fidivrs
daa
sub
cmpsl
repz
pop
aaa
ljmp
cmp
dec
ss
or
insb
jo
bound
sahf
mov
out
xor
sbb
stos
add
cmp
in
and
xchg
in
out
inc
aam
and
mov
inc
mov
lcall
jmp
add
fdivs
sbb
mov
movsl
loop
pop
xchg
cmova
pop
and
pop
inc
sub
sbb
outsb
cltd
jno
lret
jp
cltd
inc
inc
shlb
xor
movsl
test
xor
and
shll
sub
subb
inc
sbb
in
push
loop
fstpl
cmpb
outsb
add
pop
jecxz
mov
out
pushf
test
ss
lds
dec
outsb
loopne
arpl
mov
adc
mov
xchg
push
out
lock
inc
push
xor
pop
xor
fs
push
push
hlt
movsl
in
sbb
stos
xchg
aas
ret
xchg
or
add
dec
and
pop
or
in
pop
pop
mov
inc
adc
idivb
loop
mov
sub
mov
push
fnsave
and
add
clc
add
push
push
js
add
sarl
push
push
xor
mov
and
loope
pop
test
inc
or
in
and
pop
cli
xor
sbb
adc
cwtl
mov
xchg
and
js
in
sub
xor
test
sbb
mov
mov
xchg
xor
out
in
fldt
sarb
xchg
or
fwait
mov
dec
insl
nop
out
nop
setno
mov
inc
ljmp
dec
rclb
add
push
jns
aaa
add
js
inc
lahf
in
inc
fldt
push
add
cmp
xor
mov
fdivrl
add
outsb
out
ss
pop
inc
aaa
add
aas
rolb
ds
adc
cs
imul
push
xor
cs
in
pop
sbbb
pop
data16
repnz
lock
nop
das
jno
std
fcompp
out
popa
xchg
push
cmp
fdivrs
jge
or
cmp
pop
cmp
jp
adc
lods
je
aas
inc
adc
mov
push
stc
lock
dec
cmp
out
in
aaa
test
test
inc
jmp
movsb
rcrl
mov
adc
dec
or
xchg
push
and
js
fstp
sub
adc
call
push
fiadds
push
mov
or
inc
in
and
jns
lock
les
cwtl
mov
adc
fstpl
rorl
lea
lods
ljmp
insb
or
jnp
adc
movsl
fiaddl
scas
str
rorb
cli
xor
fwait
inc
adc
outsl
arpl
xor
add
popa
pop
insb
daa
or
fildl
dec
js
andb
in
jo
push
pop
shll
push
ss
inc
aam
mov
dec
mov
add
lret
mov
jb
mov
inc
sbb
cli
xchg
cmp
pop
pop
nop
dec
outsb
push
sti
test
pop
sub
pop
call
mov
sahf
cmp
test
sub
push
push
lods
pusha
push
adc
lock
add
fcomps
inc
mov
xchg
imul
mov
cmp
sub
cmpsb
push
inc
scas
jnp
lea
inc
dec
xchg
jge
push
push
mov
adc
sub
loopne
sub
add
pop
sbb
mov
adc
jle
dec
frstor
mov
cmpsb
clc
pop
pop
lods
clc
pushl
lock
mov
lea
jnp
xchg
lret
bound
add
pop
push
subb
and
pop
add
hlt
xchg
cmpsb
icebp
pusha
test
repnz
cmpsb
notb
dec
test
inc
stc
repz
mov
sbb
rorb
movsl
popa
lea
or
dec
faddl
jl
or
stos
pop
inc
ljmp
lock
outsl
enter
adc
jg
add
int3
sub
xchg
lcall
cmp
inc
inc
xor
push
xor
mov
adc
nop
test
int
push
cmp
adc
xchg
inc
adc
xchg
ret
insl
jmp
out
test
ljmp
aaa
sarl
repz
repz
jg
cmp
cmp
cmp
test
aaa
into
dec
adc
sub
sbb
leave
or
aaa
out
andl
push
adc
dec
shll
dec
cmp
or
cmpsb
lahf
pop
pop
adc
sbb
sub
pop
mov
add
cmp
arpl
sbb
mov
iret
xorb
xchg
popf
cmpsb
dec
repz
sbb
mov
movsl
pop
ret
jecxz
fsubr
sub
lods
add
mov
or
iret
inc
scas
jnp
mov
fists
mov
jp
jbe
inc
sub
ror
inc
dec
aad
pop
std
mov
mov
xor
hlt
mov
adc
icebp
push
stos
pop
std
loopne
mov
or
and
nop
jmp
adc
scas
adc
push
push
xchg
insb
mov
mov
enter
stc
sti
push
hlt
sbb
mov
das
pop
xchg
pop
inc
stc
test
repz
xorb
stc
push
and
ret
xor
add
pop
xor
sbb
adc
cld
jae
out
cwtl
roll
pop
add
mov
cwtl
movsb
xchg
cmp
push
or
mov
and
and
sub
jno
rcrl
or
fwait
test
repnz
pushf
and
mov
andl
inc
int
rorb
popl
jno
xor
push
and
mov
rep
xchg
mov
test
mull
cmp
ss
sub
movsl
popf
jno
pop
add
cli
pushf
xlat
jg
push
push
sub
jnp
cmpsb
iret
fidivrs
jne
add
dec
lea
fmulp
cld
pop
inc
adc
sub
shrl
call
in
push
mov
inc
and
lock
lcall
xchg
xchg
push
and
cmp
push
out
test
sbb
xor
mov
mov
xchg
xor
jge
xchg
repz
jo
loopne
inc
stos
xor
sahf
adc
adc
xor
sub
aad
or
push
addr16
int3
inc
xchg
sub
insl
loopne
shll
ret
lcall
mov
in
arpl
call
idivl
outsl
sbb
jae
mov
cmp
cli
xchg
shrl
jns
cmp
mov
out
int
js
push
hlt
mull
pop
lock
sbb
incb
mov
add
cmp
stos
stos
sub
rcrl
mov
leave
test
or
adc
mov
call
jl
pop
mov
iret
xchg
cli
loopne
std
mov
icebp
fisubs
out
adc
stc
cs
test
pop
push
dec
pushf
ret
jmp
ss
pop
pop
pop
fwait
es
test
pop
add
or
nop
dec
dec
and
xor
bound
in
out
push
test
and
jmp
enter
push
cmp
mov
mov
inc
adcb
mov
into
lods
in
cwtl
add
xor
loope
in
idivb
or
cmpsl
call
jge
into
jecxz
sbb
add
cmp
dec
imul
adc
cld
or
cs
hlt
pop
jp
jmp
add
mov
push
icebp
clc
shll
add
push
mov
jp
push
or
or
hlt
ja
test
je
in
push
or
add
push
aas
sub
icebp
pop
cld
decl
add
cwtl
pop
std
dec
sub
pop
mov
ret
mov
or
ds
jge
add
es
aam
outsl
push
push
mov
mov
mov
cmc
cmp
imul
enter
test
push
ljmp
lds
mov
loope
hlt
rcll
pop
push
mov
cld
sbb
add
test
add
cwtl
fldl
sbb
pusha
mov
jmp
ljmp
push
adc
add
adc
nop
mov
sbb
mov
loop
pusha
adc
pop
int
ret
sub
cmpsb
sub
add
rolb
nop
scas
push
xor
push
mov
jno
xchg
xchg
add
fs
and
repz
cmp
xorl
sbb
cmp
fistpll
adcl
popa
out
std
out
ja
inc
cmp
mov
sbb
or
and
jmp
jmp
inc
aas
jno
shrl
inc
pop
and
aas
dec
push
out
xor
aam
or
ja
notl
add
cli
push
js
add
icebp
add
call
jge
data16
push
inc
mov
lock
fucomi
dec
mov
push
dec
and
cmpsb
sbb
add
pusha
sub
test
scas
pop
stc
lea
inc
xabort
xor
jb
pop
popl
popa
in
sub
inc
test
cwtl
jge
bound
shrb
mov
inc
clc
imul
ret
mov
cmp
pusha
cmp
arpl
dec
dec
scas
ljmp
xor
xor
jmp
adc
lods
jnp
cmpsl
imul
adc
imulb
add
test
lcall
xor
pop
push
xchg
jmp
pop
inc
mov
xchg
sbbb
jmp
jns
sub
sbb
sub
push
daa
cmp
jmp
add
jmp
mov
aas
add
xor
mov
rcrb
cmpsb
push
fwait
out
cmp
dec
mov
xor
mov
std
add
dec
add
xor
imul
rorl
testl
rcrb
out
shrl
cmp
xchg
cmpsb
loopne
div
cmpsb
sub
outsb
cmpsb
clc
sti
bound
es
rorl
ja
mov
mov
mov
repz
icebp
in
pop
mov
popf
cmp
jb
adc
fcompl
adc
mov
cmp
dec
and
inc
or
loope
enter
and
xchg
xchg
or
sub
pusha
inc
dec
cmp
aaa
dec
dec
loop
mov
scas
push
je
inc
xchg
mov
lods
movsb
push
fisttpl
push
sub
xorb
test
lcall
dec
test
sub
add
insb
rcrl
outsb
or
mov
inc
mov
mov
leave
adc
lds
movsl
rol
push
mov
add
push
add
xchg
cli
pop
incl
jecxz
jp
sub
cli
hlt
lods
mov
sub
gs
repnz
sarl
dec
jae
xor
repz
aad
dec
xchg
xor
push
mov
add
mov
mov
lret
xor
pushf
add
and
cli
ret
adc
push
repz
mulb
shl
dec
pop
and
xchg
stos
adc
sbb
stc
fwait
aam
fmuls
mov
es
or
add
push
push
xchg
mov
pop
mov
popf
or
jno
push
outsb
icebp
lock
adc
stc
add
iret
xlat
popf
stos
enter
rcll
stos
loop
mov
iret
pop
sub
cs
xor
adc
mov
add
outsl
pop
sub
jge
pop
fiaddl
cwtl
clc
repz
sbb
insb
adcb
xchg
and
push
pop
or
cmpsl
icebp
fwait
rclb
insl
adc
adc
jp
dec
das
les
cmp
jno
roll
pushf
js
add
mov
jae
mov
sub
sahf
imul
lods
push
jp
stos
xchg
inc
xchg
xchg
sub
cmp
xor
mov
in
adc
sbb
sahf
out
sbb
mov
sbb
mov
and
cwtl
push
dec
in
sub
lcall
fsubs
add
sub
clc
jl,pn
inc
decb
icebp
mov
push
jmp
fyl2xp1
add
jge
out
cmp
pop
test
iret
push
push
jmp
and
dec
xor
pop
adc
mov
xor
push
push
mov
ja
inc
lahf
into
call
fsubrp
in
shrb
je
call
arpl
out
xchg
inc
movsb
out
mov
inc
arpl
jno
mov
dec
dec
xor
and
sahf
repz
xor
out
sub
ficompl
lcall
mov
std
or
mov
push
mov
or
cmpsl
mov
mov
or
scas
lods
adc
shll
dec
cltd
lret
cmp
inc
and
addl
loopne
adc
add
or
mov
xchg
xlat
std
psubd
xchg
fists
pop
cmc
fcmove
movsl
inc
cmpsl
rorl
int3
mov
std
xor
or
test
in
xorl
xor
dec
cmpsb
sbb
and
or
shr
inc
push
or
hlt
mov
mov
arpl
add
jg
imull
adc
testl
mov
shrb
insl
loopne
and
xchg
pop
je
add
or
mov
lds
and
addl
pop
stos
inc
mov
cwtl
push
test
jno
subl
stc
mov
fisttpl
push
out
jb
xor
aas
adc
push
imul
sub
adc
addl
out
setno
scas
test
lods
mov
sti
mov
loop
lret
scas
enter
adc
or
js
adc
xchg
or
fcomi
push
repnz
rorb
ss
mov
push
ljmp
pop
neg
inc
jo
mov
push
adc
or
lods
sti
push
add
add
lock
hlt
lea
inc
lock
inc
repnz
or
add
cmp
add
arpl
aad
and
fildl
insb
inc
push
aad
out
pop
in
insl
cmp
push
arpl
xorb
xchg
pusha
fistl
sub
rcr
cmp
ss
add
sub
xchg
jb
imul
test
sahf
adc
adc
fsts
fmull
mov
cmpb
mov
test
sub
idivb
cmp
mov
mov
adc
bswap
mov
adc
sbb
dec
pop
sub
fidivrl
cmp
jl
dec
dec
mov
mov
cld
xchg
sbb
repnz
out
cld
daa
dec
dec
and
aam
jl
sbb
aad
dec
dec
mov
mov
push
add
clc
or
jns
sbb
aad
sbb
jg
jecxz
xchg
insl
pop
xor
mov
cwtl
sbb
dec
rcr
push
ja
push
insb
loopne
lods
or
in
inc
adc
js
xchg
xor
lock
test
lcall
push
push
adc
test
add
hlt
aam
pop
addl
mov
lock
popa
sub
fisubl
test
dec
test
int3
leave
or
xchg
movb
adc
mov
sub
add
adc
fstps
push
push
and
add
xor
mov
adc
insl
sub
in
jae
imul
aam
fnsave
and
js
scas
cmp
jmp
cli
test
xchg
test
cli
cmpsb
pop
dec
mulb
adc
ljmp
test
dec
sarl
sti
shrl
cwtl
xchg
add
xorb
sbb
dec
mov
loope
mov
mov
call
sub
add
aas
popf
mov
jo
cmpsl
int
je
push
pushf
loope
push
sub
xchg
lahf
lods
inc
test
jbe
fstps
mov
mov
mov
das
movsb
push
out
leave
enter
ret
pop
mov
inc
push
cld
cs
mov
dec
outsl
iret
adc
inc
mov
rcll
pop
int
or
xor
cmpb
mov
aaa
fistl
add
dec
or
or
divl
cmpsb
rolb
xlat
dec
jl
sub
cld
add
xchg
adc
scas
mov
mov
mov
and
push
test
lret
jae
rolb
xchg
sub
sbb
mov
or
dec
xor
mov
andb
xchg
mov
add
fs
fnsave
sub
jp
xchg
loope
and
mov
mov
pop
cmpsl
repz
xchg
push
das
adc
cld
fldcw
mov
sub
add
in
inc
sbb
cmpb
shlb
icebp
inc
lea
sti
add
ret
fistpll
fwait
inc
outsb
test
cmpb
xchg
lods
lock
daa
push
pop
lea
jnp
popa
or
cmp
sub
or
sahf
sbb
pop
int3
jo
or
ds
mov
mov
mov
push
mov
mov
jle
orb
imul
in
icebp
xlat
hlt
xorl
dec
inc
mov
stc
clc
ffreep
xor
loope
pop
mov
lea
add
mov
dec
add
mov
xchg
frndint
push
sub
cmpsb
or
cmp
sub
xchg
aas
sub
imul
sub
and
xor
pop
dec
cmpsl
lcall
lret
push
cli
in
jmp
fidivl
aaa
xor
jae
jmp
inc
xchg
jmp
inc
or
sbb
xchg
push
ror
shll
inc
xor
prefetcht2
icebp
dec
add
mov
push
sbb
mov
push
fidivrl
push
add
in
adc
fcoml
ret
dec
dec
sub
test
sub
pusha
inc
xchg
iret
xchg
dec
orl
nop
jb
inc
add
shrl
dec
pop
sub
sahf
jp
mov
bound
ud1
enter
stos
xchg
popf
inc
punpckhdq
adc
cld
leave
cmp
clc
je
test
pop
adc
mov
push
in
pop
data16
cmp
lods
push
cmpsb
sahf
and
fisubrs
dec
add
push
stc
adc
fists
rcl
std
pop
xchg
xchg
rorl
push
daa
jbe
cmp
cmp
lods
jg
ja
push
in
jnp
das
movsl
imul
shl
mov
sbb
or
add
push
inc
mov
fcoml
movsb
cmpsl
test
sarl
das
cmp
cmp
ret
scas
jp
pop
xchg
js
mov
mov
push
andb
or
insb
sti
arpl
scas
adc
das
mov
cs
aam
insb
inc
fists
push
push
sub
sti
fidivl
push
fidivs
aad
aas
imul
push
sub
aad
sub
pop
push
cli
movsb
test
ljmp
das
sub
in
add
outsb
icebp
mov
or
pop
xor
mov
sahf
in
mov
ffreep
shrb
test
divb
sub
dec
aas
mov
cmp
mov
rolb
lods
push
and
pop
mov
cmpsb
dec
aam
sub
ljmp
js
lock
dec
in
lret
push
adc
add
fidivl
mov
xchg
add
dec
sbb
and
add
mov
ret
cmp
pop
ds
or
stos
negb
pop
std
js
mov
test
mov
and
stos
aaa
inc
dec
test
inc
lods
push
cmp
movsb
xchg
push
ficomps
push
cli
enter
mov
lahf
test
adc
mov
filds
xor
xchg
test
cli
je
js
and
loop
test
cmp
jnp
stc
push
imul
jnp
dec
add
mov
push
fldcw
and
add
add
inc
adc
cmp
dec
xor
std
cltd
lods
jbe
push
jecxz
xchg
lea
decl
scas
add
mov
out
movsl
mov
xor
inc
andl
xor
call
sub
mov
push
jle
sub
and
jmp
imul
loop
ret
jne,pt
jecxz
ljmp
movsl
fnstsw
mov
sbb
add
or
push
sbb
movsb
inc
dec
out
and
add
push
push
mov
push
xchg
or
hlt
out
in
pop
mov
dec
xor
mov
jecxz
loopne
std
sub
out
jne
sbb
repnz
cwtl
loope
das
stc
push
push
mov
jne
jg
cmp
cmp
jl
in
xchg
push
jmp
xchg
mov
ret
repz
addr16
arpl
xchg
add
dec
cmp
cmpb
and
adc
pop
data16
outsl
xchg
or
pop
cwtl
in
adc
and
loop
je
mov
push
je
sub
mov
pop
fs
mov
mov
inc
popf
cmp
xor
lods
test
dec
imul
cmpsl
mov
fs
fwait
addb
cmpsb
dec
and
or
repnz
outsb
cmp
push
xchg
pop
cmc
mov
mov
or
push
jl
sbb
ljmp
push
jge
adc
xor
cmp
into
imul
fnstsw
xor
sbb
mov
call
test
sbb
xor
add
sub
mov
mov
popf
leave
popf
lret
and
movb
pop
mov
cs
xor
stos
addr16
stos
addr16
test
jb
mov
pop
push
and
cli
fistpl
pop
pop
es
out
xchg
mov
mov
and
xchg
or
sbb
paddsb
daa
xchg
xchg
mov
loopne
fisubrs
sarl
loop,pt
cmp
mov
arpl
repnz
hlt
mov
mov
fiaddl
sbb
xchg
loope
mov
xchg
pusha
jl
xchg
mov
addr16
add
sub
nop
xor
and
add
xchg
shl
mov
inc
xchg
xor
in
cvtps2pi
mov
cmp
push
mov
xor
inc
pushf
inc
stos
mov
jno
sbb
push
hlt
push
add
lods
sub
inc
jecxz
mov
xchg
dec
ficomps
stc
sar
outsl
mov
adc
repnz
push
dec
and
aas
out
mov
add
mov
sub
fdivrl
shrb
sub
add
loopne
cmp
jl
rorb
inc
int
jg
daa
push
ds
dec
aas
lahf
xchg
adc
imul
cmp
jb
movsb
fcomi
xor
add
aad
scas
push
out
scas
lcall
push
mov
out
mov
rcll
push
sbb
popf
movsl
int3
dec
add
jp
ret
inc
outsl
mov
mov
les
fs
and
std
xor
adc
jmp
jne
in
hlt
std
out
mov
mov
jno
fdivr
das
pop
out
sahf
bound
and
je
in
cltd
jecxz
push
mov
xor
or
nop
dec
or
inc
fdivrl
push
pop
adc
and
roll
and
dec
dec
mov
xchg
fildll
mov
lcall
fmuls
test
mov
push
das
xor
cli
mov
popl
push
test
or
daa
or
xchg
cwtl
push
sub
xchg
inc
subl
sbb
push
test
rorb
cltd
adc
sbb
dec
dec
icebp
sbb
fscale
sbbl
mov
xchg
leave
test
xor
mov
lahf
iret
push
mov
sbb
mov
into
fcmovbe
es
lcall
cmp
jnp
push
cmpsb
in
cmc
adc
loop
icebp
lcall
ret
xlat
rep
pop
inc
shll
add
mov
insl
adc
sub
mov
adc
test
cmpsl
add
fnstcw
mov
js
cli
mov
and
xchg
lock
rorl
rorl
rorl
dec
int
scas
sbbl
iret
mov
test
or
mov
sarl
jge
mov
int3
mov
mov
add
cs
jbe
and
hlt
mov
adcb
test
into
mov
jbe
mov
pop
loopne
push
xchg
sbb
pop
into
xor
lds
rorb
gs
xor
push
jg
out
adc
lret
xor
inc
mov
cmp
pop
call
xor
or
mov
xchg
inc
bound
dec
aad
mov
rorb
mov
sar
aam
xchg
cmpsb
push
xchg
dec
mov
mov
data16
ret
icebp
inc
lret
pop
mov
cmp
repnz
roll
inc
jo
cwtl
int3
insl
je
inc
mov
mov
add
sti
shrl
pop
jg
insb
mov
sub
dec
lcall
adc
aas
xchg
lcall
dec
jno
jb
pandn
or
sub
mov
bound
cmp
inc
inc
inc
test
adc
mov
fsts
sbb
xchg
pop
xchg
fiadds
sbb
mov
sbb
int3
repz
inc
imul
pop
mov
push
or
decb
jnp
rclb
mov
cmpsl
dec
adc
mov
cmp
movsl
mov
jmp
mov
lods
mov
ja
pop
mov
dec
dec
jg
dec
insl
add
and
mov
inc
shl
sub
stc
xchg
cmpsb
xchg
xor
nop
fiaddl
repnz
test
ljmp
jmp
shl
and
adc
data16
mov
mov
jae
out
sub
xor
inc
mov
xor
xchg
sbb
inc
repz
sbb
xor
pop
dec
aam
outsl
cwtl
jns
pop
int
sbb
sbb
cmp
mov
cmp
xor
cmpsb
pop
jno
xchg
insl
mov
jecxz
pushf
icebp
fwait
adc
mov
test
sbb
add
pushf
std
sbbl
and
xor
push
mov
sbb
je
iret
orb
cmc
xor
sbb
aad
xchg
pop
popf
xlat
ljmp
fsts
mov
test
cwtl
and
pop
add
fdivl
cwtl
test
daa
mov
mov
cli
sub
add
jecxz
rorl
imul
iret
mov
dec
loopne
int
add
in
or
into
add
mov
andl
xchg
dec
adc
jnp
or
les
enter
xor
inc
cld
jnp
cmp
mov
xor
mov
mov
push
pop
sub
adc
sbb
or
inc
sub
cmp
sbb
cld
sahf
jp
mov
ja
jg
cmp
mov
daa
jmp
sub
scas
pop
sarb
jae
adc
insl
lods
pusha
dec
ret
icebp
fwait
push
mov
or
cmp
pusha
mov
addb
fsubrl
dec
mov
push
out
imul
xor
leave
or
rorb
dec
and
push
sbb
inc
jge
cwtl
loopne
addb
iret
shl
inc
orl
js
je
lods
neg
out
mov
mov
mov
dec
xchg
sar
iret
sbb
pop
call
push
xor
push
xchg
push
jo
jl
mov
fwait
inc
loopne
dec
and
test
aam
push
jmp
pop
push
ja
inc
test
inc
xor
add
repz
divl
das
pop
xor
xchg
std
mov
in
scas
xor
cwtl
mov
es
pushf
add
arpl
mov
mov
xchg
cmp
or
adc
test
and
hlt
out
outsl
cmc
andb
notl
fcos
shld
sub
ret
dec
pop
out
add
sub
nop
cmp
adc
mov
ljmp
pusha
cmc
into
cwtl
std
mov
push
fs
add
pushf
pop
mov
push
repz
dec
or
mov
bound
dec
loop
loop
clc
xlat
ds
inc
jo
ss
imulb
notb
mov
stos
popf
dec
cmp
out
jnp
pop
dec
or
pop
stc
push
fistpll
mov
pop
and
dec
jge
inc
sbb
je
sub
daa
aas
nop
xor
jae
movsl
lock
pop
int3
xchg
stos
xchg
xor
adc
push
xchg
cmp
leave
mov
scas
notl
fwait
jecxz
jecxz
bound
lds
nop
cwtl
mov
mov
clc
mov
sahf
into
aas
mov
jmp
add
jp
lret
out
inc
enter
jns
mov
ficoms
xchg
adc
inc
add
fstpl
sti
or
rcrb
cmp
cmpsl
pop
pop
sbbb
mov
das
aas
mov
mov
in
xor
sub
mov
jae
add
es
pop
cmc
push
mov
mov
pop
pop
mov
mov
jb
stos
dec
sub
or
push
shll
repz
sub
adc
or
push
push
ret
mov
push
ret
cmp
jo
ret
in
ficompl
mov
and
ljmp
add
push
div
jne
pop
inc
adc
xor
cmp
pop
repz
pandn
inc
jne
aad
and
sbb
filds
in
push
jl
jbe
xchg
mov
pop
leave
in
push
xor
jbe
movsb
jns
push
lret
subb
rorl
mov
push
pop
je
pop
ds
int3
sarl
pop
lcall
pop
jge
dec
into
jae
push
mov
push
in
mov
adc
inc
mov
lds
cs
or
fmull
mov
cwtl
or
push
and
push
inc
jns
dec
aad
icebp
lock
jno
test
imul
mov
or
mov
lahf
mov
or
rcll
mov
insl
incb
aam
lret
and
xchg
lods
jo
es
sbb
out
lret
inc
dec
dec
cmp
mov
and
cs
popa
push
inc
imul
add
loop
mov
data16
aaa
xchg
repz
pop
xchg
cmp
pop
cmp
dec
push
adc
enter
mov
sub
cmp
inc
mov
jnp
and
mov
cmp
xchg
lahf
pop
xor
aaa
inc
lds
jmp
popa
sub
sti
mov
sbb
add
xchg
lods
cwtl
pop
or
dec
out
xchg
rcrb
push
mov
add
sub
ss
test
adc
aad
mov
jmp
mov
jnp
adc
aam
cmp
push
fcoms
pop
mov
mov
dec
mov
cmp
pop
orl
jl
sub
push
sub
dec
test
je
push
sub
push
jae
xor
sub
push
scas
cmc
push
jmp
sub
and
jp
out
test
xor
cld
stos
xchg
mov
push
add
pushf
mov
inc
sbb
xor
andb
inc
test
mov
jb
mov
dec
je
inc
mov
or
or
mov
hlt
jge
or
pop
clc
ret
jae
ja
sub
clc
sti
stos
jnp
shll
xor
sar
test
mov
dec
xchg
push
in
xchg
mov
mov
mov
pop
inc
pop
cs
rorl
xchg
push
or
xor
sub
add
inc
repz
fnstenv
lds
fnsave
mov
daa
add
adcl
mov
xchg
imul
inc
stos
sub
inc
lds
in
cwtl
cltd
sub
mov
mov
rorl
js
test
xor
jo,pt
movsb
leave
aam
jmp
iret
add
nop
add
mov
push
addr16
outsl
or
push
inc
int
test
xor
xchg
es
roll
insl
xchg
xor
mov
in
jnp
les
xlat
add
inc
push
xor
fnstcw
add
mov
loop
mov
aas
xor
mov
dec
mov
push
adc
das
out
rolb
movsb
cmp
add
jb
add
jbe
mov
pop
scas
xor
push
push
sbb
push
and
sub
cmp
xchg
push
mov
mov
mov
js
cld
mov
rcr
sbb
cmp
lods
jge
pop
mull
pslld
lods
add
xor
adc
mov
inc
lds
or
jl
mov
push
jg
popf
xor
and
xorb
dec
pop
repz
fxch
test
mov
lods
cmp
sub
inc
adc
jae
jo
lea
decb
sahf
push
sub
jp
inc
int3
cmp
add
or
sahf
adc
out
cmpsl
or
movsb
push
push
adc
das
outsb
push
lahf
shr
repz
or
xlat
scas
imul
rol
inc
icebp
cbtw
sbb
lret
lret
mov
sub
inc
scas
cmp
fisttpll
push
pop
add
xor
in
cld
add
lods
mov
xchg
insl
adc
mov
dec
imul
mov
lahf
push
xor
xchg
gs
mov
mov
outsb
shl
call
clc
lret
dec
test
dec
adc
fstpt
lcall
stos
outsl
out
xchg
test
shrb
adc
fisttpl
add
shl
and
inc
fiaddl
jnp
push
inc
jecxz
inc
pop
xorb
mov
sbbl
sub
arpl
mov
pop
shlb
and
ret
jmp
and
aad
or
jle
icebp
mov
pop
inc
push
xchg
sub
mov
sbb
scas
mov
mov
cmp
aas
inc
mov
sbb
fldenv
xchg
or
jecxz
add
imul
sub
mov
nop
mov
push
jg
stos
add
sub
xchg
notl
mov
cmovle
xchg
pop
js
inc
cmp
out
push
mov
arpl
movsb
mov
jo
das
inc
sub
dec
add
decl
or
dec
xor
mov
aaa
aam
shll
push
adc
cltd
fwait
xchg
mov
in
add
dec
cmc
mov
pop
xor
or
out
mov
das
mov
jecxz
xchg
mov
test
dec
daa
xor
pop
jae
dec
jge
ds
popa
shrb
adc
push
mov
clc
sub
and
cmp
or
xchg
jp
outsl
dec
sbb
or
int3
jg
push
lahf
js
dec
cmpsb
and
loopne
cmp
shr
inc
testb
mov
or
inc
sbbb
orb
pop
and
xor
xchg
rcl
popa
pushf
mov
jb
adcb
aad
xchg
stc
cmp
jp
fld
stos
adc
data16
xor
or
xchg
fisubs
dec
jnp
xchg
fists
mov
xor
sbb
gs
inc
ljmp
loope
stos
dec
pop
mov
xor
inc
jge
je
push
into
and
push
jne
mov
jge
dec
and
push
es
bswap
cmp
divl
fsubl
std
fimull
std
cmp
paddsb
mov
popa
mov
test
xor
cmpsb
cli
mov
popa
pop
bound
dec
sbb
scas
push
rcrl
xchg
or
outsl
cmp
int3
data16
push
jae
les
adc
ds
ja
scas
fadds
pop
xchg
and
imul
lsl
scas
add
stc
dec
or
cli
dec
sub
cmp
and
cli
out
or
push
adc
cld
lock
clc
and
daa
add
rcr
cmp
xchg
fstl
test
push
stc
test
dec
sbb
shl
cmp
cmp
xchg
adc
filds
addr16
push
shrl
rorb
incb
pop
xor
mov
xchg
mov
add
cli
pop
sbb
ss
fwait
lea
mov
sub
insb
iret
stc
das
pop
dec
dec
loop
cwtl
xlat
push
mov
pop
loop
sub
pop
xchg
lahf
stos
jge
imul
inc
les
out
rorl
push
pushl
and
cld
mov
sub
mov
xchg
mov
out
add
cmp
js
adc
lcall
pop
and
xchg
lock
in
sahf
fdivs
nop
nop
and
scas
add
xchg
cmc
in
cmp
dec
iret
inc
test
cmp
lock
sbb
aam
add
jbe
jmp
loope
inc
and
push
mov
xchg
arpl
hlt
mov
pop
dec
sub
xor
cmpsl
xchg
repz
outsb
or
bound
sbb
dec
xchg
mov
fs
rolb
seta
mov
adc
adc
std
jnp
dec
add
inc
rcll
sub
popa
std
xchg
push
idivl
adc
jns
iret
cmp
nop
lods
mov
and
push
or
mov
not
cltd
stc
mov
popf
add
orb
pop
pop
lahf
in
inc
test
inc
sub
arpl
pop
sbbl
add
movsb
jp
add
adc
mov
push
iret
imul
mov
out
or
iret
pop
cltd
adc
bound
push
xor
xchg
inc
loope
push
cwtl
inc
jle
outsl
cwtl
jb
and
pop
mov
push
int3
pop
add
mov
shrb
add
jnp
imul
lods
imul
adc
mov
cmp
adc
testb
mov
lahf
aad
xlat
dec
pop
lcall
inc
dec
adc
push
js
or
xor
xlat
push
inc
lods
xor
mov
xor
add
push
cmpsb
arpl
cmp
sti
xchg
cmp
lds
jl
cmp
jp
sbb
test
and
in
cli
clc
insl
cmpsl
dec
push
xchg
push
in
cli
dec
cmpsl
incb
cli
push
je
cmpsb
orb
je
pop
mov
sbbb
addr16
mov
or
and
inc
cmpsl
jae
or
mov
arpl
dec
sbb
dec
mov
les
leave
inc
rcrl
adc
jae
push
imul
movntq
in
cmpsl
push
repnz
pop
call
and
mov
or
jb
mov
ja
inc
mov
add
enter
out
cmpsb
les
outsl
scas
jbe
dec
popl
rcrl
inc
cmp
ds
je
dec
mov
fistpll
cmp
inc
les
xchg
jmp
adc
sub
and
xchg
pusha
test
mov
clc
jno
inc
cmpsl
repz
cmp
jne
jne
fldcw
test
je
test
sub
cmp
je
rorl
and
iret
les
gs
andb
adc
or
pop
fimull
mov
ja
add
pushf
dec
push
adc
xor
jnp
push
pusha
js
mov
dec
mov
jnp
rolb
jl
scas
mov
mov
mov
xchg
lahf
jne
adc
sbb
mov
xor
stos
mov
loopne
sbb
popa
sbb
jp
outsl
jle
mov
lds
dec
cmp
push
adc
adc
lcall
mov
adc
scas
les
out
jp
repnz
subb
sbb
ljmp
ja
push
cmc
inc
movsl
jmp
loope
xor
xor
into
repnz
push
ljmp
das
pop
add
jle
and
sub
int3
xchg
jg
hlt
jmp
xchg
jno
fisttpll
mov
cmp
in
je
popa
pop
ss
pop
pop
int
jg
data16
imul
adc
mov
lods
xchg
jnp
add
jmp
adc
cmc
push
adc
adc
sahf
sbb
xchg
mov
sbb
jge
or
imul
movsb
fisubrs
test
ljmp
daa
jnp
arpl
mov
inc
sub
gs
xor
out
xchg
mov
scas
dec
dec
lret
ret
test
add
jge
movsb
cmpsb
push
std
xchg
outsb
adc
das
push
push
or
in
add
ds
xor
lods
ljmp
rcll
jnp
and
outsb
jbe
jns
dec
xchg
lret
mov
jne
jge
jmp
dec
jg
lcall
lds
mov
mov
outsl
adc
jbe
fwait
aas
bound
es
fcmovbe
and
mov
loop,pn
cwtl
sbb
sub
mov
push
mov
sahf
data16
sbb
xor
xchg
addr16
sahf
adc
jne
sbb
std
scas
js
push
add
mov
pop
and
sar
mov
inc
pop
xchg
or
lea
and
repnz
mov
cld
xchg
mov
call
js
inc
jns
push
jecxz
mov
out
jnp
xor
cmpsb
pop
dec
cmp
mov
push
push
cmp
outsl
push
shl
push
add
mov
dec
fwait
lds
inc
scas
cmp
test
add
pop
lahf
or
sti
sub
jnp
cli
out
add
rcll
cmp
imul
inc
mov
sti
mov
xor
repnz
aad
mov
mov
pop
dec
jo
inc
and
push
rol
xchg
stos
and
mov
mov
das
dec
ljmp
pop
stc
cmc
push
out
push
or
mov
add
addl
mov
clc
adc
popa
out
and
push
cmpsb
xchg
sbb
sbb
into
lods
cmpsl
dec
sahf
bound
add
repz
xor
loope
and
ret
fists
stos
mov
cmp
repnz
les
add
add
pop
jne
cmp
pop
xchg
das
mov
cmp
jmp
mov
cmp
dec
lods
add
xor
mov
rcrb
andl
fsubrs
subl
xchg
push
ret
lods
push
sbb
mov
cmc
cmpsl
dec
sbb
cli
into
ret
or
cmpsb
jb
sub
sbb
xchg
add
int
ret
and
inc
mov
clc
rclb
sub
inc
inc
jne
hlt
aaa
or
jmp
push
xor
pop
int
cmp
dec
xor
inc
fmuls
mov
mov
add
lock
bound
jg
cmpsb
pop
xchg
xor
sbb
js
cmpsl
or
mov
hlt
adc
sbb
outsl
stc
inc
cwtl
imul
adc
aam
inc
ret
mov
gs
aas
sbb
cs
xchg
jl
inc
mov
pop
stos
sahf
dec
cltd
std
shlb
lods
and
aas
sub
pop
bound
xchg
insb
xor
movsb
xor
lret
imull
sahf
adc
and
sub
not
lock
inc
push
cmp
into
divb
mov
pop
shrl
lret
inc
idiv
imul
sti
std
or
adc
jge
sub
inc
pushf
or
std
adc
adc
xchg
jl
lock
jmp
inc
inc
repz
xorb
sbb
or
testb
dec
sub
mov
ret
fnstenv
testl
push
push
and
lods
aas
push
and
jmp
lcall
or
mov
add
sub
mov
xor
mov
jp
push
sar
sub
rorb
nop
adc
in
mov
cli
add
jns
lahf
xor
jbe
xor
aam
sub
pop
sub
cwtl
lcall
push
ja
fwait
mov
movsl
or
or
adcb
fisttpl
ja
pop
hlt
xor
mov
stc
adc
add
cltd
mov
pop
sahf
nop
jno
push
lea
imul
push
pop
je
xchg
pop
cld
xrelease
cwtl
jg
push
cli
sub
add
mov
mov
adcb
mov
std
mov
push
js
sti
dec
cmpsb
xor
enter
dec
cmp
xchg
aad
pop
fsubrl
mov
add
mov
addr16
pop
dec
adc
imul
test
mov
fdivs
and
test
sarl
mov
mov
out
adc
xor
mov
leave
loope
or
fs
imul
mov
arpl
popf
and
mov
mov
inc
mov
push
mov
add
scas
add
and
jp
xchg
ja
or
mov
xorl
inc
rcr
xchg
fisttpl
lods
jne
movsb
clc
or
idivl
jne
in
jnp
add
sahf
mov
push
inc
insb
jecxz
scas
xchg
xor
jns
cmp
out
inc
pop
inc
push
jb
dec
das
mov
inc
push
inc
mov
add
and
cmc
sub
popf
or
fimuls
jo
push
jb
in
sarl
lods
mov
stos
dec
add
or
subl
mov
cmp
addr16
pop
jo
jecxz
sti
mov
into
aas
xchg
sub
or
jae
adc
mov
or
mov
adc
rorb
out
das
sub
cmp
in
and
cmp
out
mov
xchg
jp
ss
in
sub
pushf
lea
out
mov
add
inc
xor
xchg
repnz
inc
xor
add
push
sbb
adc
mov
incb
xlat
cld
div
cmp
or
cmp
fidivl
push
sub
dec
jp
jg
fs
in
out
cmp
fldt
or
arpl
pop
push
and
adc
imul
or
lods
sbb
inc
mov
sub
sbb
ss
or
repnz
outsb
fwait
or
mov
add
je
out
inc
pop
add
adc
test
inc
and
test
aam
ret
dec
inc
int3
mov
popf
std
mov
scas
lcall
lcall
bnd
pop
pop
dec
or
inc
out
jge
mov
das
mov
stc
xchg
sub
or
sub
into
or
jns
xchg
dec
add
hlt
cs
in
clc
inc
xchg
push
rcll
stc
push
lock
xchg
sub
pop
popf
dec
inc
add
push
mov
stc
scas
and
filds
xor
lahf
mov
xchg
les
xor
insl
pop
and
lret
sahf
movsl
sub
mov
mov
data16
xchg
cmp
push
inc
xchg
dec
pop
xor
test
lret
mov
aas
cmpsl
sub
outsl
daa
insb
xlat
add
or
in
inc
xor
fbstp
mov
lods
repnz
xchg
pushf
push
dec
fsubl
pop
hlt
std
or
idiv
jmp
les
push
push
cli
inc
add
push
dec
inc
xchg
xor
test
aad
xchg
and
imul
add
sbb
es
jl
mov
mov
dec
push
shrb
mov
leave
xchg
jge
sub
lds
mov
mov
pop
sub
aas
mov
sahf
lahf
insl
push
add
and
test
jmp
leave
xor
sub
addr16
xchg
leave
lock
pop
test
add
pop
or
mov
mov
inc
test
aad
std
push
test
xor
stos
hlt
out
dec
fistpll
stos
pop
ja
out
dec
xchg
addl
movsl
in
loop
jge
mov
dec
scas
ret
adc
popf
pop
iret
cmp
lahf
scas
dec
sahf
xor
add
sarl
out
adc
mov
mov
icebp
mov
pop
push
sti
in
bound
adc
pop
lea
dec
sub
das
xchg
or
aas
sub
insb
xchg
out
cmp
push
addl
jle
in
mov
out
mov
inc
add
cwtl
rolb
movsb
ja
je
pop
push
add
sub
incl
aam
rdmsr
sbb
ret
sub
stos
jo
inc
mov
mov
jg
cmp
sub
xlat
sahf
adc
push
jae
mov
iret
cli
push
loop
pop
jle
scas
sub
lea
adc
lcall
mov
cmpsb
sub
test
cmp
into
mov
lock
add
cmp
add
cmpsb
mov
int3
mov
push
sti
nop
stos
inc
clc
inc
sarl
mov
stc
dec
cmp
fcompl
mov
ret
sti
mov
inc
test
add
xchg
cmp
fadds
cmpsb
shll
push
add
ret
mov
push
jge
rolb
ds
sbb
sbb
push
cli
pop
rolb
test
leave
repnz
mov
std
mov
sbb
or
fmull
xor
lock
cwtl
adc
sbb
and
idivb
lret
cmp
lahf
jne
push
out
sub
mov
lods
subl
aam
bound
or
mov
lds
pop
lahf
and
xor
lret
lret
les
pop
dec
loop
adc
scas
mov
inc
out
jbe
cmp
cmpsb
mov
hlt
nop
cmpl
cmp
inc
pop
ja
ret
gs
sti
xor
push
bound
sub
mov
push
and
xor
cs
idivl
test
or
sub
and
jb
or
out
pop
mov
cltd
in
sub
cmp
ss
les
ret
repnz
xchg
out
roll
jmp
lds
cli
xchg
jp
shl
les
sbb
ret
lock
fbstp
mov
add
and
mov
adc
xchg
mov
add
xor
jmp
adc
cmp
mov
loop
outsb
mov
pop
inc
xor
mov
movsl
out
lcall
fmull
lahf
xchg
scas
adc
mov
xor
aas
sub
xor
dec
rorl
lods
mov
bound
stc
jns
mov
lret
dec
sahf
sub
roll
mov
mov
lret
inc
mov
and
mov
pop
jb
mov
mov
xchg
mov
aam
aad
pop
dec
fmuls
outsb
add
jb
cmc
movsb
scas
add
lahf
cltd
cltd
xchg
cwtl
jae
dec
mov
hlt
sbb
mov
test
in
push
repz
sar
out
test
mov
cmp
loopne
test
mov
dec
and
and
dec
cmp
addr16
jbe
mov
daa
stc
movsl
rolb
stos
adc
ljmp
mov
sbb
and
adc
adcb
dec
jns
push
gs
lods
or
sub
adc
add
sbb
xchg
inc
pop
pop
adcl
xor
cmpsb
ja
scas
mov
int3
imul
mov
cld
mov
adc
mov
inc
hlt
cmc
pop
xchg
test
lods
sbb
push
outsb
ja
or
xor
lret
jmp
inc
push
outsb
scas
lret
cmp
lods
mov
cmpsb
pop
mov
pop
adc
ljmp
out
mov
jge
xlat
xor
daa
push
sub
mov
push
sub
into
adc
xor
fs
jg
rclb
mov
xchg
sbb
dec
scas
push
push
mov
out
rcrb
leave
pop
outsb
sbb
ljmp
and
andl
popf
or
lahf
cwtl
inc
lret
sbb
and
mov
ret
push
mov
push
push
cmp
lods
inc
push
in
das
sub
mov
mov
xchg
xor
xchg
les
xlat
gs
xor
inc
inc
js
adc
push
jl
stc
daa
sub
cmp
inc
stos
push
movsl
testl
adc
dec
push
mov
sbb
cmp
cltd
jecxz
pop
or
mov
jno
mov
imul
ljmp
mov
sbb
push
std
sub
mov
push
mov
jnp
imul
jnp
leave
xor
test
push
mov
adc
dec
xor
das
ss
sahf
pop
sahf
adc
xchg
js
sbb
cmp
fisubs
push
cltd
jae
repnz
pop
sub
adc
mov
imul
lock
call
test
cmp
jle
int
addl
xchg
ret
push
sti
int
jg
push
lods
imul
loopne
fnsave
sub
add
push
xchg
repz
add
es
fwait
fs
mov
pop
fadds
and
xchg
std
add
je
scas
sbb
dec
je
filds
push
lds
movsb
shlb
pop
jg
out
jecxz
btr
in
loope
jne
add
ss
lods
iret
int
or
add
icebp
shr
in
daa
aam
and
or
lahf
push
in
sub
lock
push
in
or
sbbl
cmp
sub
iret
add
push
mov
pop
cmc
or
mov
dec
fnclex
jmp
aaa
fnstsw
adc
inc
repz
arpl
inc
das
or
adc
leave
xor
cwtl
cmc
lock
add
fisubl
xchg
daa
repnz
shl
imul
sub
adc
inc
repz
mov
add
inc
test
inc
dec
ja
add
jl
hlt
in
mov
jb
dec
int
xor
roll
nop
stos
lods
mov
cmp
fiaddl
repnz
std
xchg
iret
pop
addr16
mov
testl
push
mov
stc
test
loope
cmp
pop
ljmp
lods
sub
or
mov
aas
dec
mov
cmp
sbb
cli
mov
andl
push
sub
cmpb
das
popa
test
xchg
sbb
int3
sbb
ret
data16
sub
cmp
divb
add
jge
ljmp
push
in
add
pop
or
pop
cmc
fidivrl
mov
repnz
shlb
dec
imul
inc
mov
test
inc
pop
call
sbb
add
ljmp
dec
pusha
adc
mov
mov
iret
mov
adc
dec
scas
cmp
adc
add
out
inc
xchg
pop
pop
imul
roll
aas
inc
js
fldenv
repnz
loopne
jmp
sub
push
push
sbb
xor
sub
inc
push
push
popf
cmpsl
or
sub
js
jg
jle
sbb
add
or
hlt
add
fistpll
subb
push
imul
out
dec
xorb
aas
fs
sub
xor
incl
push
in
pop
jp
lret
sar
add
push
xchg
mov
mov
mov
stc
push
aas
in
cmovbe
loop
lea
mov
iret
mov
sahf
push
jo
inc
loop
pop
cld
pop
mov
and
sub
lods
insb
mov
jl
dec
int
dec
mov
inc
inc
pop
repnz
outsl
mov
sbb
in
jecxz
dec
sub
lods
jne
test
and
das
fldt
add
cmp
add
cwtl
je
ret
mulb
dec
fwait
sub
test
ja
in
mov
cmp
cmpsl
push
mov
ds
in
in
scas
inc
dec
pop
mov
pop
stos
sub
cmc
ds
push
inc
aas
cmp
jle
mov
sub
and
cmp
jge
scas
std
or
iret
inc
sti
adc
fwait
repnz
movsl
insb
xchg
sub
cmp
repnz
ja
test
pop
aas
mov
add
arpl
dec
mov
mov
sub
inc
push
or
jge
mov
sub
hlt
inc
lret
stc
and
das
add
pop
xchg
lret
inc
in
lea
jnp
jb
and
loop
mov
repz
movsb
push
test
xchg
adc
pop
clc
push
xor
aas
adc
loop
sbb
stc
sub
sbb
sbb
adc
push
in
mov
fsubrl
jno
dec
outsl
pop
or
rclb
cmovs
iret
add
ljmp
xchg
fst
xor
orl
or
sub
mov
lcall
test
out
das
cmp
adc
xlat
inc
dec
push
add
repz
jl
das
cmc
rcl
mov
mov
jbe
pop
ret
fidivs
in
add
int3
adc
mov
and
mov
xchg
xchg
inc
push
cmp
leave
jle
daa
push
scas
push
lods
scas
xor
pushf
lahf
mov
bnd
xor
aas
inc
or
pop
jo
ja
int3
mov
lods
mov
fcoml
mov
out
js
cltd
jge
faddl
mov
rorb
aas
inc
adc
cmp
int
jp
mov
mov
pop
sbb
push
cmp
xchg
mov
mov
aam
es
movsl
xchg
das
jmp
mov
xchg
outsb
cs
insl
inc
jge
pop
push
insb
clc
popa
push
out
mov
int
sbb
or
loop
push
mov
das
adc
lret
ja
pop
xchg
inc
movsb
arpl
lock
addr16
in
cmp
lret
aaa
outsl
hlt
es
mov
cmp
mov
cmpsb
mov
cmp
mov
ljmp
mov
fisttpll
mov
subb
jns
push
rcrl
arpl
lods
push
popa
out
sub
mov
scas
fists
adc
in
int
lahf
push
lods
ret
outsb
nop
in
cmc
and
dec
popa
jns
jl
adc
mov
fildll
sbb
out
push
cmp
push
arpl
sbb
into
and
lcall
xchg
lret
lock
lret
pop
pop
iret
unpckhps
adc
repz
jp
daa
xchg
pop
or
scas
mov
mov
inc
xchg
sbb
cmp
push
rcll
inc
cmp
xchg
add
cld
aad
dec
in
idiv
arpl
dec
pop
push
add
hlt
push
mov
popa
and
add
xor
decl
cmpsb
dec
cltd
outsb
pop
sbb
outsl
jns
adc
adc
cld
clc
cltd
dec
jb
scas
icebp
rcll
mov
and
jp
pusha
aas
mov
int3
jg
sub
pop
mov
mov
lret
or
stos
sub
sarb
loopne
popf
xchg
adc
sbb
dec
mov
sub
mov
sar
adc
pop
iret
sbb
sbb
leave
and
mov
arpl
cli
hlt
add
fs
cld
sbb
xlat
sbb
stos
mov
stos
push
es
and
cwtl
add
xchg
rclb
ja
jecxz
mov
xor
dec
sahf
fisubs
xchg
jo
loop
or
push
data16
call
push
lods
dec
cmp
jp
popa
test
stc
inc
and
inc
xor
dec
jnp
into
sahf
add
iret
lods
cli
mov
pop
imul
ret
gs
xorb
test
adc
inc
insl
js
push
xchg
mov
fdecstp
rorl
cmp
clc
das
test
iret
push
xchg
out
mov
sbb
mov
repnz
and
movsl
imul
cmp
add
inc
rorb
dec
lock
mov
mov
test
je
sub
cmp
outsb
xorl
aas
jecxz
inc
lahf
xor
push
cmp
mov
adc
or
adc
dec
add
out
ljmp
aaa
add
insl
jno
cmp
xchg
cwtl
or
insl
inc
jl
dec
test
push
dec
mov
xchg
cmp
push
lahf
jle
gs
aas
or
popf
and
inc
out
push
lret
mov
adc
mov
sub
jmp
add
testb
or
inc
xorb
je
pop
mov
jo
jl
dec
fwait
and
fwait
lahf
jae
sbb
call
or
mov
jp
mov
int
and
mov
adc
adc
sbb
mov
and
daa
mov
and
fcoms
mov
and
jae
dec
xor
leave
fisubs
stos
roll
push
xchg
fs
andl
inc
stos
leave
mov
sti
cmp
mov
and
arpl
sub
mov
jbe
jecxz
aam
lock
cmp
dec
and
mov
xchg
cmp
push
test
and
test
lahf
orb
or
sbb
or
ret
push
in
hlt
ret
push
xchg
dec
test
loope
inc
inc
mov
mov
repnz
add
ret
and
rcrb
inc
dec
inc
scas
dec
repnz
cs
fdivl
push
jecxz
push
fnstcw
fstps
xchg
push
gs
insl
mov
leave
sub
lahf
mov
mov
mov
inc
int
movsb
nop
sbbb
adc
mov
stos
imulb
add
rorl
pop
outsb
mov
xor
mov
cltd
push
xchg
push
movsl
mov
sub
and
in
push
test
pop
xchg
add
pop
lods
xchg
mov
fisttpl
mov
icebp
clc
dec
outsb
push
shlb
mov
mov
out
push
push
mov
adc
add
jo
xchg
das
inc
cmpsb
call
sarb
adc
das
push
pop
push
sub
mulb
scas
inc
adc
fisttps
ljmp
or
xor
cmpl
arpl
lahf
fs
xchg
gs
mov
push
fisubrs
iret
js
jmp
insb
sarb
lds
mov
mov
sbb
jl
repz
jg
sti
out
orl
fwait
scas
xor
sar
add
divps
fmul
mov
sti
pop
fwait
stos
pushf
jecxz
or
popa
in
pop
ret
mov
mov
enter
aad
sub
and
cmpb
mull
icebp
jnp
lret
sbb
mov
test
rcll
lcall
outsl
or
clc
pop
scas
outsb
mov
ret
mov
and
stos
in
cmp
inc
push
sarl
ficoml
xor
fistpl
inc
stos
clc
push
sub
mov
aas
mov
push
jge
dec
je
cs
insl
loopne
loop
sub
jmp
pop
pop
nop
xchg
pop
cmpsb
xchg
fsubrs
xchg
mov
fisubl
inc
and
inc
pop
mov
sti
add
out
clc
adc
lods
and
jnp
stc
loop
mov
ljmp
pop
xchg
cmp
loope
xchg
push
xor
add
pop
cmc
fisubrs
jne
outsl
or
repnz
pop
ds
fsubrl
or
test
inc
adc
mov
sarl
cs
push
pop
lret
adc
add
and
dec
sbb
dec
stos
mov
pop
rcr
adc
test
roll
in
pusha
sbb
push
lock
cmpsb
ds
fstl
jg
push
sbb
shrb
aas
add
or
pop
jnp
mull
loope
or
lea
outsl
fwait
out
sub
pop
jg
add
fbstp
dec
ljmp
inc
pop
popf
add
cmp
dec
out
add
or
fs
call
mov
movb
mov
jl
xlat
faddp
lahf
mov
outsb
xorb
pop
cs
cli
in
mov
mov
je
mov
jb
jg
adc
dec
pop
add
jecxz
push
xchg
cmp
or
int3
out
in
inc
sti
jmp
pop
sub
cld
int3
dec
es
add
inc
stos
vunpcklps
popa
mov
out
jb
pop
insl
adc
scas
dec
jmp
or
movsl
test
hlt
xor
mov
mov
cmpsb
push
sbb
outsb
mov
int
gs
data16
lea
jmp
add
lods
sub
dec
push
rorl
pop
test
in
cld
popa
mov
mov
bnd
jp
jno
int3
push
mov
adcb
mov
mov
fcompl
rolb
outsl
inc
mull
into
xchg
lret
xchg
frstor
push
fisttps
or
or
test
sbb
orb
dec
jbe
cmpb
mov
pop
vpavgw
add
data16
rcll
dec
es
sub
popa
push
nop
les
ja
sahf
push
jle
jb
mov
dec
xchg
xchg
push
xor
clc
xchg
inc
lcall
lock
scas
insl
adc
cltd
js
jg
inc
pop
fs
movb
orb
lds
fxch
and
pcmpgtd
faddl
dec
adcl
imul
outsb
inc
fadds
xchg
jns
jae
repz
lret
mov
out
js
popa
pop
outsb
cmc
pusha
push
insl
mov
adc
dec
mov
xchg
sub
mov
push
inc
ljmp
dec
jl
pop
sub
scas
popf
cmp
inc
push
lods
je
arpl
adc
jnp
xchg
ds
fwait
ds
jb
stc
add
sub
outsl
stos
iret
xor
cmp
xchg
negb
outsb
leave
imul
mov
push
je
in
sahf
rorl
andl
xchg
std
imulb
out
out
das
pop
pop
out
add
popa
loopne
orl
jle
and
sub
cli
out
fistpl
clc
lea
mov
mov
out
call
jo
loopne
push
mov
orb
inc
inc
shrl
jns
sub
fildll
outsl
cmp
dec
out
sbb
jae
je
stc
lcall
jns
aam
mov
xlat
cli
pop
dec
xlat
mov
mov
or
jne
xchg
inc
addl
push
jge
inc
xor
mov
xchg
jle
adcl
add
push
lods
mov
add
pop
mov
adc
lcall
cmp
inc
jle
sbb
sub
push
push
adc
loope
js
dec
mov
xchg
mov
and
pop
jge
andl
mov
mov
dec
pop
cltd
outsl
sahf
lds
xchg
dec
gs
int3
sbb
cs
sbb
add
addr16
clc
sub
inc
mov
pop
sub
ja
lods
mov
add
pop
xlat
push
popa
push
aam
mov
sbb
pop
xchg
mov
xchg
outsb
add
cli
and
out
mov
mov
cli
push
lods
notl
and
imul
jle
xchg
movsb
mov
lods
insb
mov
mov
lods
or
cmp
cld
push
and
mov
out
test
mov
test
scas
mov
mov
push
les
mov
jne
pusha
in
scas
addr16
js
enter
inc
stos
sti
xchg
mov
test
cli
jns
subb
pop
mov
cmp
or
roll
pop
mov
dec
xchg
mov
out
jecxz
push
aaa
cs
sbb
mov
xchg
repz
fldenv
add
add
jae
ds
push
in
stc
loopne
mov
inc
fisubl
mov
dec
bound
in
shrb
mov
stc
or
aaa
inc
addr16
insl
mov
and
and
jle
mov
xor
jnp
dec
inc
dec
cltd
mov
pop
xchg
inc
adc
notb
lcall
adc
add
add
push
addr16
xchg
repnz
shrb
or
ret
mov
adc
pop
add
adc
or
adc
lcall
xchg
push
outsb
xor
sbb
ljmp
mov
fscale
test
xor
pop
dec
ds
and
andl
pop
dec
push
mov
cld
roll
je
stos
adc
hlt
mov
sbb
jle
adc
lods
gs
idivl
adc
or
subb
inc
push
jl
cltd
mov
pop
cs
xchg
test
call
xor
cmpsb
sub
std
xchg
lods
ret
mov
iret
push
jno
fdivrs
loop
add
lcall
add
in
adc
dec
mov
aam
mov
cmp
sarb
xor
push
addr16
dec
mov
xor
adc
divb
pop
icebp
adc
inc
add
int3
push
adcl
jge
jbe
call
dec
pushf
hlt
xchg
jl
mov
cmp
xchg
sbb
push
out
push
push
orb
pop
bound
adc
aas
inc
pop
out
dec
and
dec
mov
sub
in
adc
inc
or
pop
lahf
sub
mov
dec
adc
adc
push
dec
mov
mov
sub
jo
inc
daa
stc
adc
test
enter
adc
push
or
xor
mov
ret
xchg
daa
pop
icebp
mov
sub
std
jo
sub
sbb
mov
adc
inc
sub
push
fiaddl
sbb
push
add
push
push
push
adc
mov
dec
stc
insl
cmp
cmpsl
stos
in
scas
xchg
sub
insl
inc
xchg
xor
cmp
adc
inc
cmp
fnstcw
mov
pop
sti
pop
sarb
inc
mov
popf
sub
stos
add
or
dec
sub
push
icebp
sub
ds
xor
mov
repnz
or
mov
sar
sub
dec
adc
les
in
xchg
push
dec
jmp
cmpsl
jmp
cmp
loope
xchg
add
xchg
adc
add
js
mov
push
test
inc
xor
add
pop
inc
int
sti
xchg
in
and
jl
xchg
push
sbb
sbb
aad
js
outsl
rorb
loop
iret
jbe
cli
dec
mov
mov
mov
push
or
icebp
inc
and
mov
cmp
lahf
xchg
mov
in
inc
inc
test
clc
and
cld
sub
inc
scas
dec
fldcw
ljmp
popl
mov
cwtl
imul
in
arpl
pop
dec
xor
jp
add
mov
roll
cli
int3
add
fcomps
adc
dec
out
loope
and
adc
sbb
and
or
mov
mov
or
pop
push
adc
aam
rcrl
xchg
dec
mov
es
and
jb
xor
inc
jb
jbe
cltd
push
push
xor
mov
lods
outsb
jge
scas
fstpl
jmp
adc
loop
cmp
or
sub
out
loop
shlb
mov
js
mov
dec
jmp
adcb
repnz
add
arpl
scas
push
fnsave
in
in
jmp
cli
rcrl
xchg
ret
pop
nop
push
test
out
add
popa
push
sbb
cmpsb
repnz
cmc
pop
jle
shlb
xor
lods
cmp
fildl
loope
xor
cmp
push
jmp
xchg
addb
pop
lods
loopne
add
sti
mov
xchg
sub
lret
and
cmp
jmp
ds
int3
fcos
lahf
add
cltd
lea
imul
aad
add
shll
ds
sbb
sarl
subb
or
cmc
add
lock
inc
aam
dec
inc
pop
shrl
mov
ljmp
sbb
mov
in
dec
xorb
cld
sub
inc
mov
test
pushl
push
cmp
pop
enter
incb
rorb
mov
aaa
bound
sti
xchg
dec
inc
jb
mov
mov
mov
mov
add
sub
cmp
repz
ja
lahf
sti
xchg
loopne
push
int3
or
mov
sbb
insb
pop
cmpsl
push
adc
loopne
xchg
pop
repz
add
jbe
jb
enter
jbe
xlat
sub
js
imul
pop
add
stc
jle
shll
jle
das
sub
mov
loop
cmp
add
pop
aas
pop
mov
push
sub
cmpsb
insb
dec
icebp
das
daa
daa
xchg
jmp
push
push
mov
lods
pop
cltd
or
adc
and
jmp
into
mov
notb
outsb
push
or
xor
subb
push
sub
cmp
cmpsb
cmp
mov
jge
mov
arpl
in
add
das
mov
out
push
popa
das
bound
inc
jbe
rolb
scas
mov
jns
fmul
push
outsl
push
adc
lret
xchg
cwtl
xchg
dec
xor
fistps
enter
xorl
testb
push
faddl
sub
insl
jae
adc
fldcw
inc
mov
sbbb
clc
ss
jle
cmp
push
lret
add
call
ss
repz
mov
popf
mov
shr
pop
cmpsb
lret
movsl
dec
add
jno
adc
movsl
ds
enter
and
push
pusha
or
in
mov
repz
add
jp
push
pop
clc
pop
shrl
stc
in
sbb
adc
stc
adc
icebp
xor
movsb
aas
mov
add
bound
inc
test
test
rclb
inc
add
test
pop
dec
js
rol
add
dec
cmp
or
jp
xor
pop
dec
or
push
pop
ret
xchg
cmp
xor
imul
mov
shrb
and
jae
loop
dec
jae
cmc
ficoml
loope
insb
cltd
push
or
loop
mov
inc
nop
iret
xlat
push
mov
jb
or
sub
dec
inc
loope
push
pop
inc
add
mov
push
jnp
add
push
mov
sbb
xor
ret
jns
adc
xor
cs
push
and
jmp
shl
mov
adc
and
js
lods
fnstenv
ret
int3
rcrl
test
pop
cmpsl
sti
cwtl
lahf
cmc
sbb
mov
jne
cmpsb
dec
or
je
fmulp
inc
mov
std
rcl
std
fs
mov
scas
dec
jno
xlat
mov
nop
add
jl
fadds
pushf
fcomp
jmp
mov
sub
stc
nop
or
cmp
inc
mov
lock
pop
movsb
xchg
das
sub
or
or
push
jmp
shlb
mov
movsl
sub
std
aas
mov
and
call
mov
orl
nop
es
cmc
jecxz
sub
test
sbb
sub
fnstenv
shll
sub
out
pop
dec
add
test
fcomip
pushf
xchg
testl
subb
adc
sub
cmp
nop
lods
push
push
lods
divb
dec
iret
and
inc
js
mov
rcll
pop
shll
imulb
adc
xchg
xor
cmp
mov
mov
sbb
push
repnz
negb
testl
std
mov
push
inc
inc
pop
pop
cld
push
add
sub
bswap
movsb
add
sbb
fbstp
jmp
mov
ja
sbbl
mov
push
cmp
bound
fdivrs
sub
xchg
das
mov
inc
xchg
adc
cmp
in
mov
adc
xor
es
xor
das
xchg
dec
adc
mov
rorb
lods
je
jne
shrb
and
lea
cmp
add
enter
ret
push
fisubrl
or
rcr
stos
add
cwtl
cmp
arpl
cmp
adc
loope
js
add
sbb
das
or
add
push
add
std
inc
jmp
or
xchg
cmp
cmp
sbb
in
and
jns
icebp
dec
sub
jno
fstl
mov
xor
jnp
jl
inc
inc
pop
mov
pushf
data16
mov
push
frstor
dec
or
push
mov
jmp
popl
mov
cmc
mov
pusha
or
testl
pop
imul
or
js
mov
adc
mov
sahf
in
or
and
div
stos
jl
stos
in
sub
out
lods
mov
mov
addb
lods
sbb
stc
movl
pop
jb
dec
lods
jp
negl
push
insb
repnz
pop
addr16
sti
jb
mov
jnp
dec
xchg
andb
adc
xchg
adc
mov
andb
adc
scas
addb
in
inc
mov
popa
mov
or
adc
xor
push
jmp
inc
jmp
out
mov
dec
cmp
cmp
mov
ror
dec
cmp
loopne
sbb
or
xchg
test
jb
push
dec
add
iret
ljmp
js
xchg
fisubs
add
mov
stc
in
ret
testb
enter
xchg
sahf
arpl
xchg
popa
pop
mov
push
pop
xchg
daa
stos
mull
push
pop
dec
push
inc
mov
jg
aam
jnp
xchg
jne
and
or
jp
pop
push
mov
cmp
call
icebp
or
std
mov
mov
pop
scas
cmp
pop
mov
pop
in
fists
je
stc
nop
add
pop
addl
mov
mov
inc
sub
mov
xchg
lock
lods
or
inc
stc
mov
outsl
adc
nop
movsb
lahf
xchg
lret
and
dec
pop
les
xor
sub
loopne
out
dec
hlt
pop
add
lcall
shrb
push
add
dec
mov
push
inc
add
dec
inc
adc
icebp
pop
dec
fadd
xchg
rorb
or
cld
add
shl
xchg
xor
pop
pop
hlt
fldenv
mov
jle
mov
roll
js
xor
pop
xor
popf
aas
mov
out
in
aas
mov
insl
mov
fs
shrl
std
jnp
in
jp
data16
pusha
and
sub
adc
es
clc
lcall
push
loopne
in
inc
add
lret
push
mov
mov
mov
stos
stos
xor
mov
cwtl
in
push
leave
cmp
cs
sub
int3
outsb
int
shlb
icebp
subb
and
add
push
mov
push
test
sub
jecxz
lahf
adc
adc
xchg
lcall
lcall
mov
popl
stos
xor
mov
mov
shl
stos
push
adc
cltd
dec
fiadds
add
aas
repnz
push
jecxz
aad
in
lods
mov
sbb
xor
mov
or
mov
test
pusha
jb
cmp
xchg
pop
nop
inc
inc
xor
data16
mov
mov
add
mov
stc
push
decl
aam
out
jns
fistl
lock
ret
leave
or
cmp
mov
fdivrs
push
push
stc
dec
cld
into
es
or
mov
mov
ficoml
and
cmp
push
mov
mov
data16
stc
or
repz
or
adc
adc
test
pop
or
adc
mov
jno
fwait
mov
ljmp
call
and
rol
divl
push
mov
inc
mov
sub
cmpsl
mov
push
insb
ds
sub
add
adc
mov
push
shrb
cmpl
out
xor
mov
negl
mov
call
xchg
test
push
flds
out
flds
cmpsb
iret
sub
nop
mov
or
sahf
orl
cmp
jp
inc
or
arpl
lcall
cmpsb
inc
outsl
push
dec
aaa
ret
fwait
pop
das
pop
addr16
sti
mov
mov
jae
dec
jne
or
out
xchg
add
cwtl
push
stos
daa
sbb
xor
dec
mov
mov
jne
mov
aas
repnz
call
hlt
mul
sbb
dec
mov
sbb
out
xor
ja
packuswb
iret
shrl
pop
lahf
push
pop
test
test
ss
clc
xlat
sahf
out
mov
loopne
fldt
or
add
movsl
movsb
int
in
xchg
fisttpll
mov
aas
sti
mov
jbe
inc
ljmp
test
jg
mov
cs
fbstp
cmp
add
sbbb
dec
ret
push
mov
inc
mov
loope
mov
inc
mov
repz
sbb
sbb
push
xchg
fucom
pop
into
push
mul
push
inc
mov
psubb
orb
imul
ljmp
out
ss
sbb
ret
pop
jg
pop
mov
xor
aam
sbb
cmpsb
mov
push
adc
sub
jb
dec
out
cmp
xchg
push
push
sbb
inc
jnp
adc
xchg
inc
lods
mov
mov
in
imul
mov
andb
cmpb
cltd
addb
in
enter
in
push
je
pusha
xor
das
imul
hlt
mov
insw
inc
ja
insb
loop
xchg
stos
hlt
aaa
mov
dec
rolb
dec
push
test
jp
jl
dec
sub
or
inc
add
and
orb
fnstenv
add
push
test
and
int3
dec
cmp
subb
push
sbb
int3
inc
xor
jecxz
cli
in
and
mov
cld
out
mov
sbb
addb
xchg
cmp
cwtl
cs
xor
adcl
xchg
adcl
test
mov
inc
movsl
call
rol
adc
rcll
add
mov
jne
push
adc
test
stc
fistpll
push
pop
loopne
add
dec
sub
xchg
cmp
rcl
or
push
sti
sbb
testl
and
mov
popf
hlt
inc
pop
jno
aaa
jp
push
lods
ss
cmp
movsb
sub
mov
into
lods
testb
xchg
fdivs
shr
popl
jl
pop
sahf
int3
rcll
insb
xchg
inc
movsb
fcomps
jno
sub
cmpb
jb
int3
je
sbb
std
lock
sbb
ss
pop
imul
mov
imul
popa
add
popf
cmpsb
mov
lahf
jp
stc
scas
mov
daa
mov
push
mov
push
repz
mov
lods
xchg
rclb
es
les
mov
sub
adc
adc
xchg
das
lock
cmp
mov
imul
add
test
pop
jg
pop
iret
push
in
push
fwait
sub
and
imul
mov
add
fsincos
mov
adc
adc
push
xor
pop
aaa
and
or
or
or
hlt
lcall
aad
mov
inc
sub
mov
insl
and
jno
out
sbb
jnp
pop
call
jg
in
rcrl
subb
adc
stos
mov
pop
sub
mov
dec
pop
adc
inc
adc
xchg
or
inc
dec
fwait
arpl
fildll
or
rclb
lahf
das
fsubrl
setnp
sub
add
test
cmpsl
xchg
or
pop
ljmp
mov
sbb
mov
repnz
add
or
xchg
mov
add
cli
dec
lea
push
movsl
inc
dec
clc
stc
push
mov
mov
pop
ret
pop
push
in
mov
mov
out
inc
sti
jo
push
pop
idivl
inc
jmp
sub
mov
scas
mov
gs
adc
mov
stos
dec
lahf
add
int3
sbb
loopne
pop
sub
xor
jmp
sub
xchg
in
fisttps
aaa
aaa
ljmp
mov
xchg
cmp
lods
stc
inc
shll
inc
pop
xor
mov
jns
int
nop
inc
pop
cmpsl
and
rolb
ss
push
sub
jg
or
xlat
cli
daa
xchg
push
push
call
movsl
fmuls
sub
mov
shlb
sub
pop
add
jmp
cmpl
pop
mov
pop
sub
mov
cmp
push
xchg
test
jae
enter
fwait
andps
mov
test
xlat
mov
pop
and
push
jp
pop
or
ds
cmp
push
ret
push
ljmp
pop
lock
mov
jae
and
test
in
pop
imul
out
pop
adc
dec
jg
ljmp
mov
and
roll
jnp
xchg
xchg
add
pop
xchg
adc
mov
sub
xchg
cltd
aad
sbb
jns
push
dec
faddl
daa
pop
dec
mov
mov
ror
add
jae
push
cltd
mov
xlat
jnp
insl
jl
adc
mov
subb
sbb
into
and
cmp
cwtl
roll
mov
fcompl
jb
xor
cmp
loop
and
sub
and
pop
fs
inc
rolb
pop
add
faddl
lret
imul
push
iret
cmc
ret
jle
inc
dec
out
imul
arpl
les
jo
xchg
jb
xchg
or
pop
pushf
xchg
shlb
mov
es
fimuls
mov
inc
xchg
or
dec
push
push
outsb
add
mov
or
gs
cmc
and
cs
fisttps
repz
sbb
mov
lods
fwait
sub
xor
fists
xor
in
mov
jns
movsl
pusha
cmp
or
mov
scas
push
cmpsl
jge
xor
sub
dec
jo
push
sar
jge
sti
pop
shlb
push
sub
add
xor
imul
mov
cmpsl
outsl
je
and
push
rorb
daa
lret
sbb
sti
leave
xchg
jg
les
mov
cltd
popa
sub
add
mov
fisubrs
pop
ret
scas
outsl
loope
or
lods
push
or
and
pop
scas
mov
mov
test
mov
aas
dec
sub
mov
jmp
mov
push
not
and
mov
ljmp
cli
fistpll
add
mov
out
pop
mov
sub
cld
mov
pop
sbb
add
rcl
cmp
out
popa
xchg
jecxz
push
lret
xor
mov
ja
inc
mov
lahf
mov
clc
lahf
jp
shll
stos
dec
popa
not
outsl
add
sbb
adc
jmp
addb
xchg
xchg
mov
xor
xchg
add
mov
add
pop
fcoms
movsb
pop
cmp
mov
xchg
fsubrl
mov
outsb
arpl
pop
testb
rol
adc
push
iret
test
add
aaa
sbb
cli
rcl
sbb
add
addr16
mov
insl
jl
addb
or
xor
sbb
cli
lea
xor
inc
out
enter
in
inc
sub
repz
es
adc
cli
mov
shl
xor
cltd
push
mov
leave
cs
out
pop
pop
pop
inc
lods
ffree
jb
test
mov
ret
pop
out
add
dec
cmpsb
push
mov
dec
push
xor
sar
int
repz
sub
addb
sbb
adc
out
add
xchg
shr
cmc
inc
mov
lea
aaa
incb
mov
fs
adc
adc
clc
aas
addr16
or
cli
rcll
ss
ret
das
push
dec
je
mov
xchg
and
fldenv
sub
hlt
jbe,pt
pop
pop
shrb
pushf
adc
test
mov
outsl
push
shl
into
pop
jno
and
cli
data16
lds
fidivl
adc
sbb
xchg
in
jge
stos
inc
mov
xchg
push
adc
insl
in
and
lcall
orb
cld
cld
xor
movsb
frstor
mov
or
adc
inc
mov
adc
imul
jno
aam
std
sub
lods
sbb
dec
push
imul
cmp
mov
sub
cmp
lods
xor
or
lock
sub
and
or
mov
hlt
popf
xor
mov
sbb
hlt
mov
xchg
or
add
and
add
cwtl
sbb
enter
imul
loopne
cli
cld
add
mov
lock
lock
adc
ja
jecxz
lcall
inc
popf
xchg
orb
push
push
mov
cmp
pop
sbb
idivb
mov
cmp
int3
ja
out
subb
pop
pop
aaa
add
js
insb
mov
ret
add
je
frstor
popa
daa
sub
mov
sti
sub
pop
divl
pusha
repz
adc
mov
mov
mov
lahf
push
es
add
vcvtpd2dqx
movsl
mov
outsb
outsb
fldl2e
pop
inc
inc
insl
cmp
mov
xor
imul
pushf
mov
cmp
cmp
jbe
push
mov
lret
sub
stos
jp
call
push
lods
cmp
xchg
fmuls
sbb
clc
sub
mov
mov
inc
mov
cmp
or
icebp
iret
inc
loope
xor
mov
mov
push
sbb
imul
ret
clc
and
mov
dec
xchg
mov
jbe
add
leave
sar
testl
gs
dec
push
jge
call
scas
cli
add
mov
insl
mov
cwtl
mov
adc
mov
test
jbe
sub
cmp
imul
rclb
xor
mov
push
pop
leave
movsb
inc
imul
nop
out
or
or
xchg
fidivl
mov
and
mov
push
in
pop
mov
std
dec
and
pop
test
xchg
rorl
xor
xor
jbe
clc
cmc
lods
pop
ljmp
sarb
icebp
cmp
lods
and
and
outsl
jb
pop
daa
xor
cmp
clc
mov
inc
bound
add
rcrl
test
add
clts
add
inc
hlt
clc
sbb
ja
mov
sbbl
ljmp
out
xchg
inc
push
mov
mov
aas
test
nop
mov
loopne
push
mov
aam
nop
imul
sub
icebp
in
cmp
mov
mov
fisubrs
xor
imul
mov
pop
pusha
lock
stc
fsts
das
pop
fcoms
push
xor
divb
mov
adc
mov
repnz
ljmp
test
sbb
xchg
sub
cmc
mov
cld
aad
push
ljmp
fwait
and
inc
push
lods
psrlq
test
lods
mov
push
mov
jne
stos
sbb
sahf
popa
nop
add
outsb
cmp
xchg
cmp
out
aad
and
push
dec
cli
je
dec
clc
mov
gs
test
xchg
shl
or
dec
jecxz
pop
mov
mov
pop
out
mov
cmp
insl
and
sub
ret
cmp
sbb
sti
inc
outsl
movsl
jl
jo
sti
mov
mov
dec
shlb
mov
test
mov
repnz
cld
mov
cltd
mov
mov
test
sub
stc
jmp
addl
lret
icebp
outsl
or
pop
cmp
mov
pop
movsl
inc
test
sahf
int3
push
add
or
sbbl
xchg
cmpsb
push
lods
xlat
fbstp
mov
addr16
xchg
jae
test
nop
inc
idivl
call
mov
test
rcl
loope
jl
dec
sbb
adc
jmp
cmp
and
jl
das
xor
imul
xor
add
inc
fsubl
mov
push
sub
out
mov
leave
ds
bound
or
inc
mov
clc
cld
cmp
inc
mov
push
or
lock
out
mov
jo
inc
pop
push
hlt
fcmovbe
out
das
mov
cli
lock
test
gs
mov
mov
jg
add
dec
or
fnsave
inc
lds
stos
in
add
xchg
fsubrl
add
outsb
cltd
mov
xor
adc
and
aas
xchg
adc
incb
sub
mov
lahf
sub
pushf
jo
cwtl
repnz
sete
in
mov
ret
cli
add
pop
sbb
fimuls
mov
or
or
int3
ja
push
add
out
insb
push
push
mov
pushf
shl
orb
iret
push
inc
push
mov
je
push
jno
xor
push
inc
dec
pop
clc
fcompl
inc
cs
mov
int
fimull
mov
std
cmc
inc
mov
clc
mov
add
jmp
sbbb
shlb
cmp
jno
cwtl
std
dec
jns
sub
xchg
decb
dec
xchg
es
pop
xchg
test
sbb
aad
clc
xor
jae
fstps
adc
dec
movsl
pushf
xchg
push
sbb
fildl
sbb
push
pop
cwtl
sbb
sbb
lock
add
ja
jns
scas
int3
sub
sub
andl
push
dec
mov
mov
lds
int3
mov
mov
xchg
pop
in
das
nop
lock
ja
pusha
pop
insb
pop
mov
jge
les
fistps
cwtl
xchg
xchg
je
add
aam
dec
push
sbb
cmp
jno
xchg
nop
ds
sub
mov
rcrl
adc
fdivl
dec
lds
xor
loop
add
adc
lods
enter
mov
stc
jns
orl
imul
xor
movsl
xchg
sti
pop
popf
xor
mov
std
inc
jecxz
add
je
mov
push
jp,pn
mov
fisttpll
lods
xor
pop
add
mov
dec
repnz
push
sub
or
or
scas
sbb
insl
pop
daa
je
mov
lods
mov
repnz
cmp
ss
nop
fistpll
cmc
loope
and
push
shrb
sti
mov
in
push
xchg
imul
int3
xor
mov
pop
add
clc
dec
mov
xor
test
adc
lret
and
cmpsb
gs
adc
jmp
mov
push
mov
mov
andb
sub
jnp
in
popa
in
fldcw
cmc
dec
mov
or
xor
jns
mov
inc
lods
fs
call
sub
dec
cs
test
and
nop
dec
xor
inc
push
aas
mov
rcll
xchg
add
cmpsl
ret
xchg
rcrb
mov
stc
or
jmp
jg
inc
inc
stc
not
enter
add
jb
and
mov
mov
mov
dec
sub
mov
dec
lods
gs
add
sahf
out
add
jg
push
ss
mov
adc
mov
imul
pusha
sbb
add
xor
cltd
inc
inc
mov
sub
adc
or
mov
daa
adc
test
fisttpl
push
ud2
inc
iret
into
sti
cli
push
xor
stc
dec
mov
sbb
sbb
cltd
loopne
sbb
scas
add
or
mov
lock
and
push
clc
cld
jno
outsl
adc
mov
int
scas
arpl
sbb
movsl
xchg
jmp
push
idivl
nop
std
mov
sub
call
fs
dec
add
fwait
das
cmpb
out
mov
jp
xchg
mov
dec
xchg
fwait
test
in
negl
sub
push
rorb
or
sub
mov
daa
sahf
and
insb
sbb
adc
dec
inc
mov
add
adc
sub
xchg
push
pop
push
mov
pop
scas
adc
adc
mov
inc
pop
xchg
sbb
mov
filds
imul
mov
out
les
js
jecxz
mov
jmp
sub
mov
cmp
add
pop
jge
push
mov
pop
dec
push
iret
scas
aaa
test
push
pushf
test
xchg
xlat
add
xchg
sarl
inc
lahf
in
push
jge
dec
fwait
icebp
sbb
and
movsl
inc
negl
cld
out
das
push
jb
xor
movsb
shr
js
movsb
unpcklps
jg
push
sub
icebp
dec
inc
mov
xchg
push
out
add
sbb
ss
or
jl
push
stc
pop
inc
jg
jge
cmp
fmuls
jnp
add
add
jno,pt
add
pop
pop
inc
aad
inc
sbbl
sbb
sub
adc
pop
jbe
pop
and
cmp
xchg
cmp
push
lods
clc
sbb
add
fdiv
int3
fcomip
mov
xor
xchg
cli
scas
rcrl
lret
push
mov
sbb
stc
movsb
mov
leave
fwait
scas
test
mov
lret
fldt
mov
and
jp
test
cmp
pop
out
aaa
add
xchg
mov
and
xor
inc
sbb
loope
jp
xor
and
push
rcrb
add
cli
insb
cltd
notb
mov
test
pop
repnz
sub
mov
mov
sbbl
call
test
shlb
js
jnp
xor
push
adc
add
pop
mov
and
inc
xchg
aad
out
adc
leave
add
movsb
xor
fiadds
mov
or
pop
outsl
shll
in
pop
add
arpl
orl
adc
or
mov
mov
ficomps
jne
push
fsubrs
xchg
pop
ljmp
pop
popl
stos
insl
xchg
jl
outsl
iret
pop
push
mov
or
cmpl
or
adc
lret
push
xchg
jl
dec
xchg
ficoms
andb
fwait
push
sub
cmp
mov
ja
push
mov
mov
sbb
dec
or
inc
xor
add
mov
jg
arpl
push
repz
sar
cmp
mov
adc
clc
cmp
cli
jno
mov
out
movsl
shll
rol
sbb
mov
xchg
daa
int
jne
sub
sahf
jle
aam
mov
mov
js
add
push
mov
cmp
or
lods
scas
xchg
mov
fidivl
dec
push
and
inc
outsl
cmp
out
fiadds
mov
subl
fwait
outsb
push
aas
icebp
mov
out
dec
aaa
add
stos
cmc
adc
jmp
or
adc
and
push
sub
mov
arpl
stos
cmpsl
jle
sub
test
jp
sti
mov
test
mov
xchg
sbb
sbb
sbb
pop
push
cwtl
sub
push
cmp
cmp
mov
inc
or
lock
cmp
test
cmpsl
jle
incl
lahf
scas
sbb
pop
out
in
xchg
push
movsb
addl
inc
dec
aas
ljmp
out
push
or
xor
adc
pop
inc
jae
dec
dec
jo
clc
icebp
dec
in
out
cmpsl
lds
sbb
sbb
in
insl
add
mov
push
jne
mov
mov
push
pop
sub
add
mov
das
add
aaa
nop
psllq
push
jecxz
les
or
xchg
or
adc
mov
sbb
pop
mov
iret
xlat
or
jae
cmp
sbb
insb
pop
ljmp
loope
mov
cmp
xor
popa
loopne
pushf
push
orb
push
and
pushf
dec
les
faddl
insl
adc
aad
pop
int
shrl
in
pop
ror
ffreep
hlt
insl
and
ret
ja
imul
mov
xchg
es
adc
xor
push
mov
jecxz
push
dec
mov
sub
daa
mov
cmp
gs
in
mov
shrl
mov
mov
movsl
pop
mov
cli
or
sub
add
std
pusha
push
xorl
or
mov
xor
cltd
fcomip
mov
add
add
xchg
pusha
push
inc
sahf
sarl
fldcw
mov
cmp
jg
testb
dec
cld
push
jecxz
orl
push
cwtl
test
pop
jg
in
mov
insb
rol
xchg
mov
je
jecxz
mov
loope
shlb
outsl
orb
std
inc
push
es
shrl
jle
adc
dec
sub
inc
out
add
xchg
outsb
pop
aad
jno
cld
bound
mov
frstor
fcmovbe
xchg
sub
mov
or
out
xchg
js
aas
ret
mov
aam
sbb
int3
jbe
call
test
add
outsb
lods
dec
clc
scas
sub
iret
icebp
movsl
cmp
lcall
lea
cmpsb
push
cmp
orb
clc
inc
add
lahf
test
sub
enter
out
int
mov
xchg
les
aam
nop
mov
add
mov
hlt
mov
mov
je
dec
inc
mov
inc
cmc
cmc
or
repz
dec
mov
sub
adc
cmp
dec
jp
sub
bound
or
or
ja
mov
adc
int
or
loopne
lods
stos
jae
outsl
push
xchg
fcomp
stc
clc
mov
aad
fnstenv
adc
rcl
pop
outsb
rorl
jecxz
lcall
sub
lods
jne
lret
push
stos
cmp
out
lods
sbb
movb
clc
sub
fs
mov
inc
mov
add
nop
clc
adc
daa
jns
repnz
pop
arpl
movsl
jo
push
fnstsw
inc
mov
fimull
lock
call
or
push
outsl
out
mov
std
out
sarb
jo
xor
icebp
ds
insl
dec
mov
mov
or
sbb
shrb
push
movsl
sahf
clc
pop
sbb
xchg
push
jle
ret
sbb
pop
dec
xchg
not
movsb
f2xm1
add
das
mov
jmp
xchg
mov
mov
fwait
pop
mov
dec
push
pop
xchg
pop
inc
aaa
add
out
mov
xor
in
stos
jnp
pop
stos
add
dec
das
je
dec
es
jb
dec
nop
adc
leave
lcall
mov
pop
jo
xchg
mov
lahf
clc
mov
fiaddl
movsl
mov
mov
sub
xor
fs
out
sbb
movsb
fsubr
add
cmp
adc
jl
shlb
orb
mov
iret
fsubrl
bound
cli
hlt
cld
ficoms
add
pop
hlt
lds
xchg
ljmp
jmp
std
pop
dec
pop
or
test
mov
add
call
jl
leave
add
lods
das
and
cltd
xor
test
loope
pop
repz
pop
popf
xlat
mov
popa
adc
filds
fiadds
cmp
dec
push
sbb
out
test
pusha
cmc
or
jae
les
pop
mov
mov
dec
xor
pop
inc
adc
dec
sbb
test
push
pusha
inc
dec
mov
jl
xchg
mov
mov
pop
lahf
test
test
mov
inc
sbb
out
stc
loop
or
jb
cmpsb
pop
fisubs
ss
fmuls
data16
mov
sbbb
jae
dec
js
xchg
leave
inc
pop
push
push
lods
jb
mov
aas
mov
enter
inc
add
cmpl
aad
lods
mov
xchg
inc
sti
jg
nop
in
out
test
aam
fs
enter
ds
jmp
in
mov
js
in
add
sbb
adc
cs
test
fiaddl
jno
dec
lcall
add
sbb
mov
xchg
jle
inc
add
outsb
cmc
cmpsl
lods
adc
mov
cmp
js
jae
jns
aas
cmpsb
jp
shlb
jp
jne
into
mov
je
jne
jno
adc
or
lea
cli
mov
cmp
dec
xlat
jge
int
dec
dec
mov
adc
jb
sar
jo
daa
movb
inc
je
cli
sbb
jb
stc
roll
sub
push
mov
mov
cmp
jecxz
cld
cmp
scas
cmp
mov
lret
loopne
pop
out
mov
hlt
cmp
fs
cmpsl
sbb
out
dec
or
je
sbb
sbb
pop
add
imul
mov
jmp
jo
cmp
adc
stos
lock
add
sub
in
push
pop
andl
add
loop
stc
or
mov
push
mov
insb
test
mov
xor
jns
xor
mov
mov
pop
cltd
inc
pop
inc
fdivl
cwtl
sbb
scas
leave
leave
xor
insb
shrb
inc
xor
mov
xchg
test
sbb
pop
fistl
leave
shll
mov
xor
fstps
or
sub
rorl
add
xchg
popa
add
cli
jle
and
mov
xchg
mov
cmp
sub
lcall
mov
and
xchg
mull
cmpsb
gs
jmp
sahf
and
fistpl
insl
lret
aam
and
cwtl
movswl
lods
fisubs
fwait
cmp
jle
adc
pop
loopne
or
sbbl
mov
xor
cmove
pop
jb
mov
pop
cwtl
sub
repnz
outsl
jae
mov
pop
ss
sbb
rorl
add
call
js
popf
xor
lock
mov
dec
add
rol
pop
cmovne
sbb
cmp
and
xor
or
xor
push
inc
add
push
fidivl
nop
das
jbe
out
adc
test
xchg
pop
add
cmpsb
xchg
jmp
bound
lds
mov
jne
pop
sbb
fs
sub
aaa
jmp
sbb
adc
icebp
or
inc
mov
fistl
add
out
lahf
mov
repnz
dec
push
sbb
es
outsl
shrb
fs
popf
jb
adc
adc
out
lahf
dec
or
pop
pushf
sbb
stc
out
stc
xchg
dec
cmp
xor
xchg
xor
je
das
ljmp
arpl
fcmovbe
arpl
outsb
mov
push
adc
xchg
cmp
adc
fcmovb
movsl
and
xchg
lods
ljmp
sub
sub
and
pop
sub
dec
pop
pop
push
pop
lods
das
ljmp
sar
loop
lock
jno
pextrw
fistl
dec
fstpl
mov
inc
pop
scas
bound
sahf
cli
or
sbb
pushf
jp
std
adc
divl
cmpsb
fisttpll
fisubs
and
dec
mov
je
add
imul
mov
cmpsb
sub
aam
mov
xor
subb
scas
push
lret
je
pop
mov
out
pop
mov
xor
repz
jbe
pushf
mov
or
call
shrl
out
dec
dec
fidivrl
popa
addl
daa
pop
cmp
mov
cmp
out
sub
or
int3
add
arpl
stos
in
mov
cmp
mov
mov
push
push
lods
int3
xchg
sti
cmp
sbb
mov
inc
dec
xor
stc
lret
int3
cmc
or
sahf
xor
add
out
test
push
or
popl
test
cmp
ja
insb
out
sub
xchg
lcall
lods
add
hlt
push
je
cld
xlat
scas
mov
sub
pop
outsl
dec
push
add
add
inc
cmp
pop
xchg
cmpsb
nop
arpl
jl
in
cwtl
sbb
test
inc
push
mov
cmp
or
mov
stc
cld
dec
fsubrl
andb
daa
das
add
cmp
pop
jp
or
push
mov
enter
aas
cmpsb
jmp
out
xchg
push
mov
xchg
mov
test
sbb
push
mov
add
cltd
insl
dec
xchg
inc
add
and
cmp
adc
ja
je
movsl
fs
pop
sbb
aam
testb
pop
and
sub
add
sub
adc
int
andb
pop
lods
add
push
fdivs
lret
test
rcrl
and
xchg
dec
mov
dec
xor
lods
pop
loope
sub
cmp
push
mov
test
cltd
lret
psubd
ljmp
lahf
push
inc
lea
repz
add
shrb
sbb
push
cld
sub
inc
inc
push
addb
mov
popf
loopne
mov
push
adc
xor
test
sahf
sbb
out
add
xchg
jl
mov
xchg
in
int
inc
lock
sahf
cld
lcall
sub
mov
stos
dec
mov
fstl
jmp
pop
mov
jge
inc
mov
jno
dec
mov
or
insl
sbb
leave
and
sub
lret
jno
and
loop
gs
loope
mov
addl
xchg
push
adc
icebp
add
gs
out
cmp
lcall
jnp
outsb
lods
std
mov
cmpsl
daa
testl
dec
icebp
inc
cmpsb
jb
jo
jge
inc
xrelease
rol
sub
cld
xchg
or
in
inc
inc
or
inc
mov
cltd
sub
aaa
cmpl
inc
dec
add
cmp
popf
ja
fcmovbe
stos
bswap
nop
shrb
mov
aaa
pop
push
sub
add
in
mov
insb
int3
lods
notb
dec
push
xchg
jbe
xchg
gs
stc
in
mov
xorb
rcll
ret
add
mov
inc
dec
loop
jle
rolb
xchg
mov
aaa
sbb
int3
cwtl
je
pop
shll
lods
test
mov
jge
adc
pop
mov
inc
test
jl
adc
ret
into
sub
addb
mov
push
subb
push
daa
test
push
mov
push
sub
inc
popf
stos
test
imul
ficomps
jo
adc
hlt
or
push
fisttps
pop
outsb
js
or
imul
int
shrl
das
and
cltd
shlb
ja
inc
pop
add
popa
cmpsb
js
sub
mull
test
push
stos
pop
dec
jb
jno
pop
int3
add
sti
mov
clc
ret
jne
push
loope
xor
mull
or
jmp
mov
or
xor
stc
dec
frstor
add
xchg
jo
xor
cmp
inc
mov
cmp
dec
sahf
add
push
fabs
mov
gs
adc
sub
cmp
cmp
sahf
jmp
pop
cli
and
cmpb
out
addr16
cmp
dec
and
push
jmp
aas
adc
add
mov
sbbb
negb
mov
sub
xchg
mov
jle
inc
xchg
fimuls
popa
xchg
popf
pop
adc
mov
add
push
cmp
mov
add
rorl
notb
push
sub
mov
xchg
incl
pop
jp
add
inc
sbb
adcl
pop
mov
popf
je
aas
in
or
jle
fldl
jo
xlat
push
adcb
mov
cmp
out
add
cld
dec
xchg
cmp
jg
jne
out
arpl
mull
roll
cmp
js
andl
fidivs
dec
mov
mov
xor
pop
insl
pop
mov
ret
test
xchg
xor
mov
pushf
cmp
imulb
scas
dec
dec
repz
xchg
sbb
mov
sbbb
jno
jb
das
inc
push
jb
mov
lret
loope
jmp
dec
cmp
dec
push
sub
out
sti
dec
pop
aas
outsb
call
test
inc
pop
imul
adc
xchg
and
add
adc
pop
das
test
cmp
lret
inc
mov
sub
inc
dec
bound
mov
xlat
xchg
enter
idiv
aas
pop
mov
call
mov
pop
shrl
sub
or
and
or
xor
popa
xchg
sub
ret
sbb
add
inc
rclb
sbb
add
xchg
adc
int3
and
and
cmpsb
pushf
aad
rcll
out
cmpl
dec
sub
mov
ret
xchg
adc
test
push
jo
js
cmp
jae
xchg
pop
cwtl
test
ret
pop
xor
and
in
hlt
jnp
jae
nop
scas
orb
mov
add
add
imul
insl
ret
mov
pop
fiaddl
addl
popa
ss
lds
mov
push
jae
popa
scas
sub
mov
inc
addr16
sbb
inc
cwtl
movsb
pop
jnp
jbe
and
mov
mov
ljmp
inc
and
gs
repnz
pop
xor
std
adc
or
pop
icebp
and
hlt
and
inc
int3
mov
dec
ds
and
nop
ljmp
dec
jae
jae
jae
jmp
push
fldcw
cmp
imul
sbb
inc
or
and
adc
aas
ja
sub
lahf
enter
xchg
jl
shrl
fsubs
cs
lods
fs
adc
dec
sbb
push
icebp
pop
or
cmpsb
call
andb
dec
stc
std
mov
xor
pop
popl
xor
cmp
mov
and
mov
inc
push
mov
mov
sti
adc
push
fdivrl
addl
lret
dec
cmp
mov
fnstenv
and
test
out
mov
dec
cmp
call
dec
inc
mov
inc
adc
adc
out
aaa
test
repnz
mov
mov
leave
inc
adc
add
dec
ja
xchg
out
mov
scas
mov
dec
aad
arpl
adc
push
xor
xchg
push
in
outsl
and
and
xor
daa
sub
stc
and
hlt
push
pop
es
inc
icebp
lock
inc
xor
cmpl
movsb
cld
push
mov
test
xchg
adc
inc
xchg
mov
in
rdmsr
xor
imul
mov
sahf
repz
movsl
add
add
adc
pop
ret
push
rcrb
mov
jno
sub
fidivrl
jl
fwait
pop
insl
push
fcomps
push
xor
mov
xor
cmpl
lods
pop
jp
and
pop
mov
cld
sbb
call
movsb
das
xchg
sub
cltd
inc
sub
lods
in
mov
nop
xchg
inc
sti
dec
xchg
shr
sahf
add
mov
and
mov
xchg
mov
outsb
inc
aas
sub
fstps
mov
shlb
lock
jb
and
xor
movsl
mov
push
outsl
outsb
pop
dec
xor
mov
out
mov
jl
push
mov
dec
pop
adc
je
push
test
mov
jnp
out
movsl
sbb
add
loopne
lret
shlb
push
push
xchg
notb
mov
out
cwtl
jg
dec
pop
dec
sub
in
push
mov
dec
xor
lret
nop
push
dec
push
aad
aas
add
lea
sahf
jns
pop
js
shrb
and
stc
inc
fsts
lods
mov
cmp
lret
mov
in
dec
stos
xor
mov
mov
stc
add
sbb
pusha
shlb
xor
aam
rcll
xor
icebp
fwait
or
xchg
in
shl
pop
mov
sbbl
out
xor
cltd
push
pop
pop
jle
lcall
mov
xchg
inc
lea
sub
cmp
pop
jb
cmp
mov
xchg
pop
mov
adc
enter
mov
std
mov
sbb
mov
push
or
stos
inc
shlb
imul
xor
in
aas
sub
inc
cmp
inc
jmp
aas
lret
pop
cmp
push
test
outsb
sub
outsl
sbb
cmp
push
sti
cli
push
add
clc
jmp
in
and
mov
lea
or
scas
loope
add
and
inc
or
push
jnp
into
movsl
aaa
xor
xor
adc
inc
mov
cltd
mov
xchg
and
sarl
fisttps
cmp
sub
clc
stos
mov
bound
xchg
mov
sarb
sub
add
inc
adc
and
daa
or
ss
cmp
aad
xchg
dec
lods
lock
std
add
push
and
rorb
push
cld
sbb
inc
pop
sbb
test
inc
xchg
dec
mov
pop
adc
push
sti
xchg
add
cmpsb
jmp
adc
mov
mov
jae
adc
daa
call
cmp
repz
push
xchg
adc
out
call
cmp
aaa
aad
imul
nop
out
push
fwait
enter
repnz
push
outsb
aaa
xlat
test
add
js
outsl
mov
sbb
xor
mov
mov
dec
out
pop
sbb
imul
mov
movsl
xor
pop
shll
pusha
dec
xchg
popf
sbb
sub
ds
aas
out
add
xchg
or
pop
adc
mov
xchg
jp
jge
lret
adc
jg
mov
dec
loop
icebp
push
cmp
cs
mov
xchg
jae
into
test
mov
scas
cmp
bnd
sar
xorb
and
mov
fists
mov
xor
nop
or
cmpsl
inc
and
dec
imul
incl
pop
setne
movb
push
jbe
inc
add
cmp
xchg
xchg
pop
jle
outsb
imul
nop
jb
jl
xlat
clc
or
gs
stc
and
add
or
jb
lock
pop
sbb
xchg
jle,pt
fidivrs
cli
mov
hlt
mov
aas
or
gs
subl
adc
repz
inc
cli
cmp
mov
push
inc
sub
stos
xchg
or
int
xchg
sub
inc
xchg
add
jns
inc
sbb
and
push
repnz
mov
adc
adc
adcb
int3
sar
adc
mov
test
lock
inc
and
fwait
add
or
dec
rorb
lcall
jmp
fsubrs
out
or
ficompl
mov
jg
jmp
mov
pop
insl
lahf
mov
jge
or
sbb
je
lock
mov
sbb
sbb
in
push
lds
adcb
add
nop
sub
in
movl
mov
pop
pop
push
shlb
test
adc
inc
ds
movsb
leave
and
test
adc
cli
mov
dec
mov
mov
or
sub
sub
or
sbb
lret
cld
sub
push
xorb
cmp
jbe
and
or
rorb
and
push
testl
cmp
cltd
push
jecxz
jnp
jbe
aas
dec
mov
bound
ss
push
stc
cli
enter
xchg
jmp
out
leave
nop
mov
push
icebp
xchg
scas
or
test
xchg
icebp
cld
notl
dec
loopne
iret
push
xchg
push
inc
sbb
loop
scas
pop
add
add
pop
repz
jno
scas
dec
mov
sbb
jne
hlt
lds
faddl
mov
or
mov
call
inc
outsl
and
insl
mov
into
adc
pop
ret
mov
lret
jl
rol
or
or
cmp
push
repz
aas
int
mov
or
add
les
std
add
mov
enter
leave
pop
cmc
xor
vpmacssdqh
jns
dec
add
addb
jp
aaa
mov
mov
jg
inc
mov
ja
ret
push
rcll
and
lea
fdivrs
xlat
inc
scas
dec
and
test
je
repz
pop
mov
adc
push
push
andb
pop
and
mov
or
int
xchg
inc
nop
xchg
push
pop
mov
push
sahf
addl
js
mov
push
cmpsb
sbb
int3
xor
inc
xchg
push
adc
movl
mov
pop
push
pop
xor
inc
adc
ja
cmp
ret
in
scas
push
pop
stos
stos
adc
add
jo
ror
mov
inc
add
xor
push
and
mov
loopne
popl
test
insb
sarb
xchg
cltd
push
and
add
mov
lds
mov
lods
mov
cmp
mov
test
arpl
icebp
outsb
jmp
lds
adc
sbb
call
add
add
inc
lods
add
mov
adc
lcall
xor
lahf
xor
mov
mov
and
or
bound
cmpsb
xchg
add
ja
out
push
push
daa
mov
xor
into
mov
and
divl
inc
mov
out
pop
jbe
push
mov
icebp
xchg
sub
in
adc
lods
stc
and
pushf
cs
push
jo
and
dec
jns
push
jge
int
lea
icebp
add
jmp
test
mov
push
call
arpl
add
insl
inc
sar
push
daa
int3
or
mov
in
loopne
add
jae
hlt
push
inc
dec
subb
mov
sub
adc
mov
dec
and
icebp
adc
mov
test
inc
lock
inc
mov
icebp
jno
ucomiss
push
shll
lods
pop
push
adc
hlt
mov
pop
pop
ret
add
dec
add
sbb
fdivs
test
aad
add
ret
fwait
cld
mov
jo
mov
xor
push
aaa
test
test
inc
movsl
popa
out
dec
repz
mov
repz
jnp
dec
andb
dec
add
dec
lret
adc
mov
inc
add
cmpsb
inc
aad
inc
pop
lahf
xchg
lret
fistpl
pop
cmc
into
fimull
adc
pop
insl
xchg
mov
test
jmp
sbb
and
dec
scas
icebp
or
cmpl
adc
adc
mov
ror
mov
mov
or
push
sub
outsb
mov
or
xchg
stc
scas
mov
jno
lds
dec
daa
adc
xchg
shrb
lods
inc
mov
lret
outsb
jnp
and
mov
inc
pop
mov
fldt
cmp
scas
ret
shlb
mov
outsl
mov
or
movb
aaa
mov
jbe
pop
xorl
inc
add
je
dec
sti
sub
lock
push
cmp
les
movsl
inc
shrl
in
test
adc
push
pushf
nop
mov
insl
xor
cmp
int
jno
popa
in
add
in
mov
cmp
rolb
add
mov
mov
leave
jae
dec
add
lods
cmp
mov
inc
xor
push
cmp
xchg
int3
push
test
in
xchg
jl
int
jge
dec
adc
sti
test
js
dec
or
faddl
mov
mov
and
inc
jp
sbb
fistpll
je
dec
add
js
mov
addr16
xchg
adc
cwtl
add
rorl
jge
inc
int
addb
xor
pushf
leave
aaa
mov
mov
add
push
cmp
adc
cmp
sbb
icebp
lret
pop
dec
sub
push
xor
bswap
mov
inc
adc
inc
xor
imul
xor
xor
test
and
ret
xor
mov
cmpsb
jo
sbb
jle
rorl
mov
test
arpl
sahf
mov
sahf
pushf
aas
inc
xchg
cmp
repz
les
mov
bound
jg
nopl
iret
and
leave
inc
cwtl
sub
imul
rolb
cmpxchg
inc
dec
iret
jno
push
fwait
xchg
pop
jnp
popa
jle
push
mov
dec
dec
loope
shl
lahf
mov
xchg
adc
dec
pop
mov
je
mov
mov
xchg
adc
dec
imul
add
in
adc
push
sub
sub
popa
add
or
adc
insl
jb
sbb
aam
jnp
subb
mov
and
sbb
mov
mov
pop
shlb
movsl
popf
jns
adc
stc
movsb
inc
lahf
comiss
inc
cs
mov
and
sahf
cmp
cmp
mov
jmp
add
popf
pusha
xchg
aas
lods
aas
cmp
scas
mov
dec
push
fwait
cli
jp
ret
mov
outsb
repnz
cmp
jge
mov
fcmovnbe
sub
into
std
adc
cld
lock
mov
mov
or
pop
cmpsb
in
shll
jecxz
sub
filds
or
push
je
out
xchg
sti
stc
cmp
pop
in
ljmp
ds
push
xchg
or
jecxz
aaa
popf
cwtl
arpl
pop
out
mov
cmc
add
adc
mov
enter
dec
or
xchg
jmp
sub
cmpb
dec
out
scas
and
cmc
popa
adc
xor
lcall
insb
int3
orl
pop
jmp
lcall
or
mov
das
loop
hlt
dec
sub
push
or
xor
xor
mov
ffree
clc
nop
pop
cs
dec
sub
std
jle
add
xor
jno
mov
xchg
movsb
and
push
cltd
xor
pop
mov
mov
jmp
ret
mov
and
in
jns
cmp
inc
xchg
sbb
notb
add
or
hlt
xchg
mov
jbe
mov
and
std
cs
mov
ficompl
pop
lahf
inc
jno
call
pop
movsb
cwtl
mov
rorb
jl
test
add
imul
push
sub
mov
nop
arpl
mov
stos
mov
push
shlb
inc
cmpsb
ja
xor
adc
jl
mov
les
xchg
push
enter
test
lret
bsr
sub
xor
andl
push
hlt
pusha
test
adc
or
rcr
push
push
cmp
loop
add
sbb
xchg
add
sub
ret
insl
subl
out
inc
test
sub
pushf
add
adc
mov
jb
mov
jp
clc
lret
xchg
and
inc
sub
ja
push
or
mov
lock
xor
xor
inc
fmuls
in
pandn
sbb
in
inc
jge
jp
clc
cmp
mov
dec
sub
cmp
sub
fistps
xchg
cs
out
and
stos
stos
es
sahf
xchg
add
fdivrs
add
cmpsb
pop
dec
sub
or
pop
or
inc
mov
dec
test
mov
and
xchg
in
mov
inc
pop
or
dec
sub
shrl
and
mov
js
cmpsl
sub
or
jb
dec
ds
movsb
dec
push
setae
int3
je
xor
or
push
pop
movsb
mov
sub
into
fcomi
inc
dec
nop
xor
inc
xchg
inc
loope
pop
mov
mov
in
lods
mov
and
push
or
mov
into
add
out
mov
add
insb
sbb
out
loopne
adc
pop
jno
out
addr16
sbb
pushf
xor
pop
imul
push
imul
xor
mov
test
sub
repnz
int3
or
mov
cs
and
add
xor
imul
pop
cmpsl
outsl
test
xchg
adc
stos
mov
das
xor
xor
mov
dec
add
mov
je
and
mov
sbb
stos
movsb
sub
nop
mov
add
mov
jo
leave
fldl
repz
mov
enter
lock
push
and
test
jmp
in
push
add
mov
sbbl
jmp
pushf
outsl
sbb
inc
cld
push
pop
or
inc
adc
lds
xorb
popf
ja
jg
icebp
pop
xchg
xchg
mov
call
sub
lret
jb
jns
xchg
adc
dec
push
pop
leave
ljmp
iret
mov
dec
jl
sub
jo
mov
inc
jb
test
sbb
rcrl
je
cmpb
dec
outsl
push
leave
incb
out
ljmp
test
daa
lret
and
jns
repz
sahf
aas
and
ret
dec
lahf
mov
or
movsl
test
pop
push
movb
in
push
fisttpl
insl
and
cli
sahf
mov
fs
xor
cld
inc
mov
inc
or
jmp
lahf
push
pop
pop
adc
dec
icebp
call
jge
stos
aam
xor
adc
push
rorb
xor
iret
lds
xchg
test
ret
pop
je
cmp
stc
fimuls
sub
or
fsubs
adc
scas
movsb
adc
jge
xor
dec
pop
mov
outsb
pop
xchg
into
lds
out
fbstp
pop
dec
xor
jo
aas
push
repz
mov
pushf
cmp
scas
jge
inc
dec
jbe
imul
out
loope
lahf
aam
sbb
push
sbb
adc
addl
adcb
out
arpl
mov
notb
jae
fadd
fdivr
or
call
rcrb
mov
fucom
out
sbb
jne
cmp
dec
aam
lret
pop
enter
pop
aas
inc
pop
pop
adc
in
or
inc
or
insb
jl
push
in
call
add
add
push
sub
rcr
lret
lds
jns
das
rorb
clc
scas
scas
daa
je
leave
mov
cmpl
and
insl
aas
mov
mov
mov
dec
test
dec
or
or
xchg
cmp
repnz
or
adc
aas
je
xlat
pop
outsb
jne
test
jl
push
xor
and
pop
cltd
and
inc
hlt
mov
loop
push
daa
stc
add
sub
add
cmp
xchg
sub
dec
sub
sahf
or
ret
fadds
frstor
and
xchg
mov
jge
pop
jp
sub
push
cs
stc
pop
cld
enter
mov
lods
lret
fimuls
and
outsb
test
and
and
cmp
es
and
sbb
in
in
leave
add
jne
and
xor
push
cmp
jbe
into
mov
ret
aaa
xchg
cli
push
xchg
roll
xchg
or
or
and
lods
into
enter
mov
test
jg
lods
cmp
and
push
add
push
shlb
and
adc
insl
or
adc
int3
cltd
sbb
test
mov
push
xchg
mov
icebp
loopne
lock
adc
dec
lcall
fmul
imul
jl
cli
or
add
xor
mov
leave
mov
sbb
mov
xor
lods
mov
pop
sbb
or
call
mov
cmp
sbb
add
xor
or
mov
mov
arpl
xor
and
add
mov
stos
je
movsb
call
mov
icebp
in
test
pushf
jmp
mov
test
cmp
loop
xchg
add
cmp
jo
sub
dec
test
scas
adc
or
and
pushf
stos
mov
enter
cmpsl
mov
xchg
lcall
test
jl
out
sbb
cltd
lock
sub
xor
test
jg
push
cmp
and
scas
jo
or
xor
push
lock
jae
sti
rcrl
in
aaa
repz
sub
add
out
adc
js
dec
push
mov
push
lcall
cmpsb
clc
sub
push
mov
mov
xor
inc
movsb
pop
jae
arpl
sbb
into
xor
and
decb
cli
test
jg
jo
shrb
fstpl
cmpsl
ds
cli
loop
fwait
icebp
pushf
aas
das
dec
jge
adc
add
adc
add
add
adc
adc
adc
je
roll
lret
cmpsl
insl
push
test
lar
or
cmpsl
shlb
and
in
inc
jnp
lahf
inc
push
adc
dec
insb
sub
fldl
mov
sbb
jle
or
fiaddl
mov
mov
lcall
adc
fs
or
mov
cmpsb
pop
loope
dec
in
test
repnz
in
dec
gs
mov
fsubrl
fisttpll
cli
out
mov
jmp
arpl
movsl
lret
sub
lret
test
lods
pop
pop
lret
inc
sti
push
ds
mov
fdiv
loope
int3
push
and
adc
lcall
sbb
inc
addl
enter
sbb
jge
cmpsb
sarb
sbb
call
sbb
insl
fs
xchg
mov
pop
mov
ret
jl
jae
mov
test
xor
ficoms
pop
stc
sub
sub
inc
and
in
outsb
jne
cmpsb
xchg
hlt
movsb
mov
in
xor
daa
mov
daa
into
icebp
cmp
push
add
in
sub
add
adc
xchg
inc
push
mov
adc
aaa
lret
aaa
sub
movsb
mov
pop
addr16
sub
pop
mov
sub
cmp
jmp
sub
pop
movsb
roll
insb
movsb
sub
pop
fwait
cs
pop
sub
lcall
and
pop
pop
mov
xchg
mov
or
dec
or
cmp
jmp
cmp
jo
sbb
scas
add
call
lea
enter
lret
call
stos
cmp
cli
push
mov
and
js
fcoms
adc
inc
shll
mov
xor
pop
dec
decl
push
jno
and
sub
adc
jnp
xchg
aad
pop
sub
cmp
int
mov
cmpsb
das
mov
shlb
sbb
and
mov
adc
sub
popf
cld
popf
mov
stos
push
xor
pop
or
sub
mov
add
sub
pushl
in
inc
fsubl
in
or
outsb
mov
movsb
mov
mov
pop
adc
xor
add
xor
dec
ds
fldcw
jns
xor
scas
xor
dec
in
insl
pop
mov
mov
push
adc
cmpsb
and
or
ficoml
sub
mov
cmp
jmp
and
out
push
pop
imul
pop
aas
push
xchg
je
xor
cmpsb
sbb
add
pop
add
arpl
aam
fs
fucomip
movsb
push
cmpsb
sbb
mov
or
xlat
hlt
stc
and
jl
mov
imul
sub
sub
dec
lods
lahf
fs
xchg
icebp
xor
icebp
out
inc
cmpsb
icebp
lods
inc
pushf
icebp
push
shrb
iret
mov
mov
fimull
pop
bound
or
cmp
mov
cmpsb
jg
into
mov
adc
mov
ja
bnd
sub
pushf
cmpsb
push
stos
imul
push
cmpsl
decb
adc
idivl
dec
push
pop
cmpsb
dec
sbb
cmpsl
rorl
add
push
push
test
mov
inc
imull
cmp
xor
jmp
sbb
cs
iret
fiadds
call
or
push
xor
add
push
or
frstor
ret
dec
movsl
daa
push
add
pop
dec
loope
ss
stc
adc
push
cmp
mov
and
scas
sub
mov
out
xchg
lods
daa
xor
xchg
div
dec
dec
push
in
mov
loope
ret
mov
and
push
ds
xchg
xchg
dec
je
fistl
inc
sub
jmp
push
xor
dec
mov
sti
mov
push
xor
dec
pop
jbe
mov
leave
cmp
das
xchg
decb
sbb
test
push
cmpl
dec
sbb
movsl
sub
inc
movsl
push
imul
mov
popf
mov
jae
fiadds
out
and
enter
outsl
mov
sub
lret
mov
mov
adc
inc
aas
icebp
dec
enter
push
das
fidivl
clc
mov
xchg
or
add
mov
dec
daa
ficoml
iret
adc
sub
xchg
into
jnp
fs
xchg
mov
sti
sbb
push
cmp
repnz
pop
push
or
jb
in
clc
sub
xor
ret
adc
xor
and
xor
mov
push
sahf
sbb
movlps
mov
insl
pop
push
adc
inc
mov
cmp
pop
imul
jge
mov
sarb
and
rcrb
rcrl
and
mov
repnz
aam
les
xchg
out
or
jo
or
dec
jne
fsub
scas
inc
pop
mov
sub
sbbl
inc
xchg
push
cmp
icebp
adc
rolb
mov
pop
push
mov
sbb
aaa
cmp
and
mov
addr16
lods
and
pop
out
push
mov
insl
xchg
sub
outsl
mov
filds
inc
push
push
mov
or
xchg
in
repz
test
push
and
or
xlat
mov
and
adc
sti
push
mov
cmp
adc
cmc
and
clc
dec
repz
sub
shrb
jmp
xchg
push
xchg
mov
or
imul
icebp
sbb
dec
sahf
mov
mov
insb
inc
mov
mov
push
inc
mov
adc
cwtl
nop
nop
xor
cwtl
clc
sbb
popl
and
mov
out
cwtl
pop
ljmp
je
sbbl
sub
xchg
clc
or
xor
push
je
adc
loopne
push
test
ss
fsts
xlat
imul
in
adc
and
lods
push
and
sbb
adc
jle
sub
mov
inc
mov
push
and
mov
and
mov
cmc
lahf
and
push
fimull
adc
repz
pop
test
add
fcomip
adc
mov
repz
inc
push
idivb
pop
call
out
mov
cmove
cs
add
sti
and
hlt
incb
add
sub
cmpsl
aas
repnz
xlat
sahf
add
nop
add
mov
aaa
sub
xchg
adc
xchg
xchg
or
xor
sti
in
arpl
enter
adc
or
sbb
xor
pop
xor
dec
or
jl
and
cmc
add
xor
inc
into
aaa
imulb
nop
sarl
xchg
mov
pop
mov
add
mov
adc
nop
movsl
and
add
mov
push
sahf
adc
push
call
or
ja
andl
push
adc
mov
xor
dec
je
adc
add
insl
mov
sub
stc
lods
pop
test
pop
stc
orb
fwait
cwtl
xor
xchg
adc
or
pop
xlat
cmc
add
push
ljmp
push
jmp
add
aaa
cmp
mov
sub
xchg
mov
mov
jle
or
mov
mov
sahf
sbb
mov
mov
jb
das
mov
out
and
arpl
jnp
xor
and
xor
je
adc
add
jl
and
cld
or
icebp
add
mov
aaa
pop
fcomip
adc
push
pop
js
imul
stos
mov
inc
test
test
xlat
cmpsb
add
cwtl
aaa
xor
lcall
mov
mov
nop
mov
sbb
or
add
mov
push
mov
and
mov
push
dec
and
inc
and
mov
mov
sbb
mov
dec
stc
pop
pop
dec
adc
dec
dec
jbe
sbb
mov
aaa
add
nop
jmp
testl
test
add
cmp
stos
mov
mov
xor
sbb
push
sbb
xchg
in
push
sbb
lock
clc
and
dec
mov
and
adc
dec
add
or
dec
inc
hlt
or
inc
mov
nop
inc
mov
inc
pop
addr16
sbbb
pop
je
adc
cld
inc
push
jl
and
hlt
add
jmp
lock
pop
sub
cmp
stos
mov
inc
test
movsl
adc
xchg
cmpsb
xorb
xor
xchg
jno
pop
popf
mov
mov
test
sub
xchg
add
mov
dec
es
sti
adc
and
mov
inc
dec
js
pop
adcl
mov
test
push
mov
aaa
adc
clc
adc
nop
cli
add
pop
mov
xchg
xor
or
mov
xchg
or
dec
mov
xchg
mov
lock
xchg
xchg
add
cmp
sub
cmpsb
dec
test
ljmp
or
mov
or
arpl
rorb
pop
lret
mov
stc
push
push
add
push
xor
out
lock
adc
xor
arpl
dec
adc
dec
push
mov
dec
cwtl
aas
dec
mov
lods
nop
pop
pushf
mov
cli
cltd
and
mov
nop
xor
or
pop
or
xchg
or
sahf
dec
sysenter
pushf
enter
mov
and
test
xchg
xlat
jns
xchg
mov
cmp
nop
jg
mov
cli
jns
xlat
mov
nop
aad
jne
shrl
addb
orb
mov
xlat
and
mov
fbld
mov
movsl
mov
cli
mov
nop
cmp
sahf
inc
cmp
jns
pop
adc
xchg
adc
movsl
xor
adc
mov
and
test
pushf
xlat
add
lcall
adc
sar
and
mov
nop
fmull
jns
pop
jb
mov
xor
shll
adc
mov
out
jnp
cvtps2pi
adc
sub
test
nop
and
sbb
pop
sbb
xchg
sbb
scas
dec
pop
xor
cmp
adc
mov
and
test
mov
mov
cmp
nop
jl
and
mov
nop
lds
jns
pop
jnp
nop
xchg
jl
mov
xor
fdivs
adc
mov
aam
ja
shrb
mov
push
stc
jo
inc
insl
stc
mov
sub
stos
and
test
mov
add
sbb
mov
sbb
mov
cli
pushf
and
test
inc
push
les
aad
jae
adc
xchg
dec
lock
lahf
xchg
or
int
aas
orl
leave
xchg
mov
nop
add
and
mov
lcall
or
jle
mov
jg
mov
jae
xchg
cli
jae
shll
js
imul
sub
and
test
mov
add
cmc
rclb
cmp
pop
pushf
mov
cli
cltd
and
mov
nop
xor
or
pop
or
xchg
or
sahf
dec
sysenter
pushf
enter
mov
and
test
xchg
xlat
sub
adc
cld
lea
jnp
and
test
mov
je
xchg
push
out
and
test
inc
push
das
cmpl
mov
and
test
mov
sbb
scas
mov
cmp
nop
adc
and
mov
mov
xchg
push
sbbl
mov
and
test
xchg
xlat
jnp
mov
cmp
nop
jno
mov
cli
ja
aad
jne
rorl
jns
pop
insl
adc
sub
and
test
mov
mov
cmp
sbb
and
mov
nop
cmp
jns
pop
push
adc
xchg
pop
andl
int
lea
jnp
and
test
cwtl
xlat
add
xchg
mov
cmp
jp
mov
cli
jle
fidivl
inc
jae
xchg
adc
xchg
ja
orl
sub
sub
mov
fbld
adc
and
mov
xchg
xor
jge
popf
mov
pop
push
pop
outsl
sub
insb
and
mov
nop
out
push
jne
pop
adc
xchg
pop
xorl
jae
adc
mov
stc
jnp
and
in
xchg
mov
rcll
sbb
xchg
int3
fdivrl
jb
or
sbb
dec
rorb
xchg
push
jmp
mov
int3
repnz
mov
xchg
mov
jge
mulb
enter
jno
jbe
sub
das
dec
je
jo
cwtl
sbb
cld
call
jno
pop
xchg
rcll
in
jb,pn
subl
aad
sub
incb
mov
ss
cmp
or
loopne
loopne
pop
jo
adc
sub
dec
lea
das
lcall
ds
lahf
stos
pop
inc
pop
xchg
repz
insb
pop
cmp
sub
arpl
shl
cli
out
repz
cli
insb
insb
sub
push
lods
cmp
push
cmp
adc
xchg
inc
lret
sti
imul
cmp
cli
stos
je
xchg
mov
inc
dec
and
dec
xchg
test
sub
sahf
mov
sbb
pop
xchg
imul
flds
and
icebp
lods
fimull
mov
icebp
pop
sbb
sub
xlat
andb
push
repnz
mov
aas
sar
jno
mov
repz
cld
test
xchg
inc
adc
sub
stos
inc
outsl
fnstsw
orl
cwtl
mov
xor
add
push
inc
nop
push
aaa
xchg
sbb
dec
js
aam
movsb
pop
shlb
jns
dec
xor
int3
in
mov
lret
out
pop
or
aam
fs
cld
ja
inc
aas
pop
data16
push
mov
psrad
mov
nop
sahf
js
inc
push
jmp
mov
jle
pop
xor
xlat
push
in
je
das
fiadds
inc
jle
sub
bound
cmp
fdivs
dec
fsubs
dec
push
scas
imul
je
xor
add
cld
jge
aam
ss
inc
lods
mov
bnd
dec
test
dec
mov
mov
iret
test
mov
out
pop
sub
push
inc
adc
jb
mov
fmuls
cwtl
adc
or
or
mov
das
or
lds
das
dec
hlt
inc
dec
cmpb
add
inc
and
and
pop
jl
lds
pop
jecxz
xor
sbb
xchg
sahf
das
xchg
mov
int3
imul
loopne
pop
imul
shlb
scas
inc
fsubr
and
lret
js
mov
inc
lock
xor
jbe
movl
add
rol
int
adc
ljmp
cmp
fists
sbb
push
std
inc
aas
or
mov
daa
sbb
jns
out
jbe
ds
adc
repz
jle
adc
mov
shlb
jecxz
decb
cmp
mov
stos
xchg
push
xor
and
outsl
sti
push
dec
scas
ja
orb
xchg
rorl
mov
or
push
sbb
inc
leave
jg
lret
rorl
repz
mov
xchg
shlb
mov
and
push
sahf
sarb
cs
or
sbb
jno
in
mov
push
or
push
xor
add
fildll
lods
rol
jl
leave
jno
aam
fdivl
mov
add
xor
fcmove
dec
push
jmp
xchg
mov
xchg
jg
cs
pop
movsb
cld
jne
mov
mov
fisttps
xlat
xchg
stc
sub
add
inc
imul
sub
fsubrl
or
inc
hlt
mov
mov
fistps
fwait
addl
bound
popa
test
mov
xchg
arpl
in
sub
insb
sahf
pop
or
or
dec
imul
ljmp
ficompl
clc
das
dec
jb
jle
push
fildll
pushf
mov
fldl
jge
aaa
ss
call
jb
jmp
call
jne
test
inc
jns
pop
ret
lods
fidivl
cmp
mov
push
iret
adc
sub
mov
cmp
stos
cmpsb
xor
ret
adc
jl
xchg
mov
push
jg
and
add
and
or
mov
sub
dec
js
scas
cld
and
aad
int3
push
inc
mov
or
outsb
cmpb
jo
pop
rorl
xchg
pop
push
cmp
ja
std
pop
rcl
pop
ret
stc
xlat
xchg
mov
jecxz
add
push
cmp
orb
jb
scas
popl
popa
out
sbbl
shrb
cmc
stos
dec
icebp
test
addb
cmp
or
lea
outsb
dec
clc
jmp
xorb
andl
inc
jmp
std
lahf
lock
cmp
movsb
push
stos
and
xchg
and
loopne
lea
fcompl
push
inc
lods
mov
mov
dec
ja
and
mov
unpcklps
push
sbb
and
inc
shlb
and
lret
dec
sahf
mov
xchg
xor
stos
insb
leave
lahf
and
daa
xor
lcall
xor
int3
pop
and
sbb
lods
xor
out
ljmp
fs
sub
add
sahf
inc
jmp
orb
xchg
pop
mov
fwait
push
mov
inc
adc
pop
adc
les
lea
movsb
dec
push
push
fcomps
mov
sahf
outsb
xor
aas
int3
add
shlb
insb
into
sti
aas
sub
jo
jns
push
or
enter
xlat
hlt
add
ret
or
test
dec
xor
mov
add
outsl
mov
pop
push
xchg
pop
sbb
xor
dec
test
add
jb
popf
fbld
adc
nop
ds
mov
pop
test
orl
je
in
cvtps2pd
adc
sahf
cli
dec
and
mov
xchg
push
lret
popl
mov
nop
mov
dec
push
dec
cmp
insb
adc
and
mov
sbb
lret
nop
cmpsb
lods
lock
int
ret
addr16
test
add
adc
nop
loop
fisttpl
pop
xchg
push
addl
jo
clc
sbb
nop
adc
dec
pusha
mov
cli
test
xor
xlat
pop
aad
or
lea
sti
cmp
test
andb
test
leave
xlat
rolb
jecxz
hlt
add
cwtl
inc
jns
pop
jns
stos
xchg
sub
rorl
xor
push
lods
adcb
nop
add
lcall
nop
pop
mov
push
pusha
jb
loope
jae
push
les
ljmp
jae
adc
mov
fwait
mov
pop
pushf
or
mov
jnp
and
mov
or
jns
jbe
rcll
adc
xchg
dec
hlt
jno
decb
push
pop
mov
xor
dec
cmc
maskmovq
test
xlat
xlat
sub
mov
add
mov
insb
adc
dec
inc
mov
mov
xchg
jle
jno
fcomip
ja
outsl
divl
or
pop
pushf
out
push
fwait
aam
or
mov
mov
and
mov
repnz
add
test
add
mov
adc
cs
mov
lock
mov
mov
cmp
mov
js
ds
fdivl
or
mov
adc
cwtl
mov
xlat
pushf
add
ret
xchg
add
ret
adc
xlat
rorb
repz
hlt
and
xchg
loop
inc
adc
lret
nop
sbb
scas
inc
ds
jns
pop
jno
jnp
push
andl
jae
adc
repz
push
sbb
push
xor
mov
push
jno
dec
push
mov
insb
or
mov
nop
xchg
cltd
aas
xor
clc
jmp
ficoms
xor
shlb
adc
jnp
and
xchg
flds
adc
mov
and
sub
mov
or
or
mov
mov
mov
repnz
adc
push
test
add
fbstp
imul
cmp
mov
inc
add
mov
movsb
and
stc
or
add
cmpl
nop
icebp
cmp
inc
cltd
mov
pop
jmp
cmp
push
std
js
mov
and
pop
ljmp
adc
mov
dec
jnp
movsl
and
mov
repz
jmp
push
add
push
dec
mov
bound
jge
xchg
int
inc
jecxz
mov
cli
roll
lock
lods
aad
hlt
push
jbe
push
dec
adcb
clc
arpl
inc
push
push
arpl
je
pop
outsl
stos
jg
mov
pop
dec
std
dec
gs
fdivs
outsl
insb
mov
sbb
addr16
mov
and
inc
push
mov
dec
std
dec
mov
int3
xor
mov
mov
cwtl
adc
sub
push
cld
push
test
movsl
mov
jno
pop
push
mov
xchg
scas
pop
hlt
adc
popf
add
push
in
or
loopne
insb
adcb
out
daa
mov
add
pop
push
cmpsb
pop
in
leave
fstl
ljmp
push
jb
popf
push
or
or
push
mov
pop
adc
jns
pop
add
cli
pop
and
jae
add
mov
test
mov
push
pop
je
mov
push
or
mov
pop
or
adc
push
mov
push
mov
das
lcall
dec
dec
pop
push
outsb
inc
or
cmp
dec
jae
inc
aas
xchg
lret
repz
outsl
jne
je
inc
rolb
gs
push
mov
cwtl
adc
xchg
push
stc
repz
xor
mov
xchg
xchg
pop
int
movsl
aam
mov
pop
or
outsb
mov
outsl
nop
insb
push
mov
mov
mov
push
xor
lds
push
cmp
outsl
cmp
dec
sbb
xchg
dec
push
pop
fs
xor
lcall
mov
mov
pop
pushf
pop
mov
push
pusha
hlt
add
push
push
pop
cltd
pop
xchg
xor
lods
pop
or
mov
pusha
fs
cli
xchg
push
push
mov
push
test
fwait
repz
nop
pop
gs
dec
mov
bnd
mov
add
mov
adc
or
mov
push
ja
js
unpckhps
push
jne
cld
jl
nop
repnz
mov
clc
mov
pop
mov
mov
push
inc
and
fsubrl
jns
ds
pop
mov
dec
insl
movsb
mov
mov
mov
stos
sub
push
repnz
push
test
xorb
or
sbb
arpl
mov
pop
cld
mov
scas
shlb
mov
mov
cmp
ds
mov
mov
xchg
clc
add
icebp
xchg
imul
leave
pop
mov
jb
add
xor
jecxz
popa
lret
aas
gs
mov
gs
hlt
popf
or
movsb
cmp
cmpl
hlt
js
lock
pop
jb
out
repz
jmp
ret
ljmp
and
xor
out
and
shll
out
repnz
cmp
aam
dec
cmpsb
aam
adc
sti
sbb
outsl
xchg
mov
roll
sahf
jp
jne
mov
in
movsl
fstl
icebp
adc
inc
subl
mov
xor
rolb
test
pop
repnz
pop
pop
push
sbbl
cmp
adc
out
push
cltd
add
popa
inc
adc
fstpl
add
mov
jb
jbe
adcl
cmp
dec
jp,pt
dec
das
dec
and
dec
mov
sbb
sbb
decl
scas
adc
mov
sahf
cmc
lds
aad
dec
sub
das
jns
je
add
mov
push
sub
cmpw
inc
movsb
ficomps
arpl
push
push
lea
das
xor
or
rorb
test
stc
fwait
cli
inc
paddd
sub
retw
add
mov
andb
lods
repz
orl
fs
cmp
addr16
inc
cli
pop
jbe
push
sub
cmp
loope
fisttps
sahf
lahf
int
fwait
stos
cmp
adc
cwtl
push
cltd
lcall
sbbl
stos
stc
out
aad
pop
rorl
xchg
lcall
cmpsb
fdiv
push
cmpb
mov
pop
arpl
sbb
mov
cmp
dec
push
ficoms
ror
xchg
ja
mov
andb
xchg
pop
or
mov
pusha
daa
fdivrp
adc
add
cmpb
add
dec
push
xlat
fisubrs
mov
loope
fdivs
test
or
xchg
je
adc
shr
inc
push
ja
daa
loopne
dec
repnz
push
nop
pop
roll
cwtl
inc
test
test
adcl
or
enter
jno
sahf
sbb
out
lods
adc
xchg
loopne
push
shll
stos
dec
dec
test
dec
push
mov
in
mov
aaa
clc
nop
cmp
lcall
fsubl
mov
lahf
icebp
nop
pushf
mov
andl
icebp
jb
leave
push
xor
sub
push
repnz
ret
decb
dec
and
push
xchg
aas
push
pop
les
iret
clc
aad
outsb
loopne
sbb
mov
mov
icebp
ss
pop
loop
dec
inc
aam
imul
xchg
add
cltd
ljmp
push
push
push
shr
rcrl
outsl
mov
lcall
pop
stc
orl
jae
sar
iret
sbb
idiv
mov
add
jno
xchg
or
push
pusha
lods
orb
mov
xchg
cltd
add
lods
xor
idivb
repz
repnz
pop
sbb
pop
in
mov
add
shrb
jg
gs
hlt
mov
movl
lret
or
dec
loop
mov
popf
adc
push
movsb
xor
cli
jne
sub
stos
mov
xchg
ret
scas
lret
fwait
add
imulb
inc
and
push
jns
pop
cmp
mov
push
into
cmp
pop
outsl
orl
sbbl
xchg
mov
mov
xchg
push
jmp
xor
add
lahf
sub
mov
push
es
dec
les
je
inc
pop
push
pop
inc
cmp
out
pop
inc
daa
dec
test
jae
test
lret
xchg
out
cmp
and
xor
add
cmp
or
lods
pop
mov
inc
xor
mov
add
and
sub
dec
inc
jge
mov
insb
lret
test
and
jp
mov
dec
xchg
mov
fisubs
mov
push
and
push
mov
pop
sti
cmpsl
add
lods
xor
fldl
or
mov
nop
pop
jae
lahf
mov
clc
dec
cld
or
setae
xchg
cs
jns
movsb
push
movsb
addr16
iret
call
imul
mov
call
xchg
xchg
dec
cmp
jns
stc
xchg
je
icebp
mov
scas
pop
ret
or
pop
pop
ret
or
jmp
push
cld
test
sbb
mov
in
and
pop
arpl
ss
push
xchg
daa
and
mov
push
sub
push
inc
xorb
cmpb
pop
push
scas
sub
add
lock
push
add
jg
mull
fimuls
mov
pop
jns
js
dec
jnp
xor
mov
arpl
repnz
adc
and
xchg
mov
or
shll
or
cli
cld
popf
mov
pushf
ljmp
roll
inc
mov
adc
mov
mov
addb
or
scas
lcall
mov
outsb
lock
notl
mov
clc
xchg
lods
les
fiadds
mov
push
dec
icebp
cmp
sahf
xor
adc
je
bound
mov
jnp
cwtl
scas
fstps
in
repz
and
adc
push
mov
stos
pop
xchg
xorb
mov
pop
mov
arpl
cmpsb
pop
adc
arpl
dec
in
mov
hlt
pop
in
push
jle
lock
cmp
add
in
clc
fcomip
arpl
mov
sbb
or
cmp
mov
add
adc
lcall
sbb
mov
adc
inc
mov
popa
stc
jns
mov
in
sbb
dec
fbld
clc
dec
xor
adc
in
inc
data16
mov
mov
mov
dec
stos
sub
mov
or
mov
push
push
pushf
clc
stos
adc
jg
adc
and
orl
xchg
cmp
adc
sbb
mov
scas
test
das
sahf
cs
mulb
dec
mov
mov
sub
push
jae
or
xchg
or
adc
aaa
inc
mov
push
jl
neg
jae
ds
ljmp
sbbb
lahf
dec
or
fbld
xchg
clc
lods
push
hlt
rcl
push
inc
sti
or
enter
dec
scas
pop
push
inc
je
loop
outsb
add
add
sub
dec
aas
adc
insl
lahf
add
and
test
lret
pushf
mov
inc
popf
mov
ss
and
imul
cwtl
pop
xlat
sbb
inc
xor
data16
in
cld
push
mov
dec
push
jo
mov
dec
cs
ja
das
sahf
xchg
sub
mov
hlt
push
xchg
add
outsb
cmpb
xchg
push
mov
sahf
cld
adc
aam
jb
pop
cmp
popa
jle
pusha
push
mov
mov
mov
mov
dec
inc
sbb
and
ffree
sti
pop
test
xchg
mov
xchg
cmp
ds
sbb
jl
inc
sti
fdivrs
dec
iret
fstpl
jp
or
jp
inc
push
cwtl
mov
clc
cmpb
pop
xor
test
push
push
xor
movsb
cmc
pop
mov
mov
jg
int3
adc
outsb
jo
and
dec
in
movsl
enter
in
loopne
in
add
lods
cmp
inc
mov
mov
xchg
adc
add
mov
and
cmp
and
xchg
pop
push
inc
out
sbb
in
cwtl
hlt
out
dec
xorl
pop
and
add
cmpsb
nop
xchg
lods
adc
mov
push
pop
lods
push
cmp
rcrl
iret
stos
call
sahf
fisubrs
pushf
or
iret
jge
sbb
cmp
adc
inc
mov
pop
arpl
dec
add
adc
mov
push
sbb
mov
ret
ljmp
inc
stc
cmp
jo
cld
jb
pusha
loop
mov
fucomip
fs
dec
pop
fcomp
xchg
push
pop
push
sub
hlt
pop
pop
nop
mov
je
hlt
mov
fnstenv
hlt
fs
aaa
fs
pop
push
je
je
mov
outsb
mov
inc
push
scas
sbb
push
inc
sti
xchg
xchg
addr16
dec
incb
mov
pop
xchg
and
mov
xor
adcl
pop
and
xor
dec
repnz
sbb
adc
rcll
or
dec
lods
cli
inc
pop
pop
xchg
sti
sub
mov
popa
pusha
sti
push
and
push
sbb
lahf
adc
out
push
mov
fists
or
fwait
push
xor
mov
xchg
inc
lcall
outsl
mov
and
dec
sub
int
mov
mov
movsb
dec
mov
cmp
mov
inc
lods
inc
push
push
test
sbb
sub
push
dec
push
inc
jo
mov
add
sar
add
scas
xor
rorb
loope
sete
jmp
lods
push
sub
mov
orps
jne
jne
sub
adc
or
push
mov
leave
cwtl
mov
push
add
push
fimull
popa
fiaddl
pop
xor
jbe
pop
rcrl
addr16
fisubs
fsubs
xlat
movsb
dec
cs
dec
jle
ja
xor
dec
sbb
cmp
jae
mov
stc
mov
cmp
adc
inc
xor
inc
mov
out
or
push
subb
cli
aas
cld
push
dec
push
cmp
repnz
imul
mov
jle
adc
dec
fdivs
adc
lods
add
xchg
lds
mov
cmp
jno
mov
gs
mov
mov
loopne
add
xchg
movsb
neg
pushf
jl
sub
mov
iret
or
inc
dec
jp
rcrb
xor
sub
idivb
or
jns
sbb
push
xor
mov
data16
popa
or
add
repz
in
add
loop
mov
cmp
ret
cmp
je
or
cmp
dec
sti
cli
mov
clc
push
adc
ficomps
add
loope
lret
cmp
push
sub
sub
mov
mov
dec
sbb
mov
mov
call
mov
ja
push
rclb
jp
inc
mov
dec
stc
xor
rcll
ud2
mov
push
shrl
es
sub
jg
sub
xor
add
push
addr16
push
xchg
test
mov
out
vmptrst
mov
testl
sbb
pop
xor
xorl
cmpsb
mulb
jle
ss
mov
cld
int3
cmpsl
hlt
popa
cmp
pop
lahf
inc
sahf
repz
gs
icebp
mov
push
lahf
icebp
fwait
jmp
arpl
dec
xor
divb
or
mov
cli
outsb
in
add
fs
cwtl
andl
sbb
jmp
pop
sub
insb
outsb
mov
nop
sub
xor
push
iret
aas
mov
jnp
inc
xor
sahf
xor
dec
dec
adc
inc
push
mov
orl
jl
sti
add
xor
clc
incl
outsb
imul
lds
fwait
jae
jb
ljmp
scas
sbb
jle
adc
je
imul
jne
inc
jb
mov
push
imulb
ror
sbb
dec
pop
sbb
rcll
push
pop
dec
enter
ljmp
movsl
jbe
addr16
push
imull
addr16
pusha
mul
fcomp
pop
ljmp
mov
xchg
inc
add
cmp
xchg
pop
in
pop
mov
pop
in
out
mov
icebp
ljmp
mov
inc
mov
stos
movsb
jno
xor
xchg
sub
test
stos
inc
add
sub
sub
xchg
cmp
les
mov
xor
out
jae
adc
push
js
notl
ret
lods
roll
lcall
cwtl
sbb
inc
clc
mov
sbb
js
sbbl
jl
icebp
shrb
ja
cmp
test
or
mov
inc
add
or
incb
push
std
sbb
cmovle
mov
jns
inc
mov
inc
push
cmp
dec
sbb
push
cmp
xor
pop
add
adc
jle
sub
mov
xchg
add
mov
lods
add
mov
mov
cs
lods
fnop
or
outsl
sti
test
dec
in
fisttps
push
mov
mov
inc
push
mov
mov
jmp
lods
cld
repnz
jbe
adc
fcomip
stc
mov
fwait
mov
into
dec
cmpsl
cmp
mov
aam
inc
movsl
add
push
inc
jp
ja
fbstp
clc
jge
out
dec
bnd
mov
jg
dec
icebp
adc
push
imul
imul
cmc
psadbw
mov
movsl
hlt
mov
out
add
xchg
das
mov
xchg
fildl
repz
add
dec
icebp
inc
push
sbb
lret
xchg
movlps
xor
xlat
daa
or
jbe
mov
ret
js
hlt
xchg
es
inc
cmp
mov
push
add
loopne
sbb
cmpsb
mov
lahf
outsb
sub
inc
push
mov
insl
push
mov
xor
jecxz
dec
subb
cli
data16
or
dec
leave
fdecstp
hlt
cs
negb
xor
int
insl
jg
outsl
jne
sub
imul
pop
mov
out
nop
das
ljmp
push
aam
aaa
mov
inc
inc
hlt
cwtl
outsb
out
pop
dec
mov
pop
pop
dec
imul
outsb
stc
xor
xchg
sbb
sbb
xor
mov
mov
xlat
dec
or
push
inc
mov
outsb
js
push
xor
mov
inc
adc
or
insl
test
sti
add
mov
fdivrl
call
jmp
add
pop
xorb
add
sub
cmc
adc
xchg
adc
call
xor
mov
pop
jg
pop
adc
and
aas
js
aas
int
add
call
lahf
rolb
mov
fists
adc
fsubs
push
mov
mov
dec
mov
jl
rcr
ds
pushf
pushf
jecxz
aad
add
daa
push
ljmp
add
sar
jg
dec
mov
mov
das
or
jmp
pop
ljmpw
mov
dec
sub
and
lret
sahf
jns
inc
in
mov
loopne
daa
movsb
mov
dec
jae
jns
mov
addr16
out
xchg
cwtl
add
psubsb
cmp
push
push
frstor
mov
es
data16
jle
inc
ret
jmp
or
dec
out
leave
cmpsb
pop
xor
popa
hlt
lds
mov
pop
sarb
int
in
sti
roll
lret
fwait
add
push
push
pop
mov
cmpsb
and
xchg
fwait
scas
cmp
lods
arpl
or
mov
ljmp
neg
adc
les
stos
dec
dec
sub
jmp
pop
lahf
out
std
xor
stos
fs
cmc
ja
xor
inc
mov
inc
push
cld
out
adc
sub
shlb
mov
pop
inc
xchg
inc
inc
lock
fcompl
dec
insb
int
adc
int3
mov
sbb
sbb
insb
int
push
sub
cmp
and
mov
adc
jns
dec
cmp
shlb
pop
and
push
imul
xchg
dec
sti
or
into
dec
cmp
outsl
insb
cmp
dec
daa
insl
sahf
push
fisttpl
icebp
dec
icebp
cmp
cmp
aaa
nop
cmp
repz
jg
movl
mov
add
orl
pop
xchg
xor
mov
repz
cwtl
sbb
mov
dec
int
rcrb
sbb
push
pop
repnz
call
push
dec
push
mov
xchg
das
insb
mov
fdivrl
xchg
hlt
add
mov
mov
xchg
inc
inc
sub
outsl
pop
xlat
sbbl
pop
dec
xor
xchg
lret
add
sahf
dec
add
decb
mov
mov
dec
stos
stos
incb
pop
in
mov
stc
sub
mov
dec
aaa
add
lahf
rolb
cs
out
inc
xchg
xor
stc
out
mov
in
iret
jae
clc
lock
enter
roll
scas
hlt
mov
or
mov
cmp
fucomp
pusha
fdivr
mov
xor
jno
stos
lcall
sub
aaa
shrb
les
scas
aad
cli
out
inc
into
idivl
sub
jno
pushf
scas
negl
scas
icebp
xor
outsl
inc
test
out
xchg
pop
xor
lcall
lds
sti
inc
pop
out
mov
add
cltd
lods
icebp
cltd
repnz
inc
pop
inc
jne
aad
fldl
int3
xchg
inc
cmp
mov
lds
adc
xchg
movaps
fsts
imul
lret
sub
mov
xor
adc
jl
push
lahf
sahf
or
leave
lahf
int3
pop
fwait
push
or
addr16
xchg
xlat
sbb
xchg
or
dec
imul
ret
pop
adc
or
jge
add
test
jnp
xor
mov
adc
ja
mov
xlat
adc
loopne
sub
mov
js
insl
stc
adc
ficoms
xor
div
adc
testb
mov
mov
data16
push
das
scas
lret
int
dec
mov
sub
xorb
stos
pushl
and
sbb
stc
stc
aam
sbb
mov
mov
int
mov
pop
aaa
test
pusha
add
outsb
add
push
pop
add
jb
nop
inc
dec
jns
ljmp
dec
jo
and
jns
subb
mov
jno
xchg
or
jne
sub
pop
mov
mov
std
imul
push
cmp
add
xor
inc
mov
xor
ja
inc
sbb
pop
adc
lahf
aam
icebp
pop
ret
sbb
xor
adc
inc
jb
jo
mov
lcall
mov
inc
push
sbb
mov
cwtl
aaa
imul
out
inc
shrb
mov
jp
add
vpaddd
aas
rorl
jb
pop
mov
dec
imul
add
sbb
push
mov
xor
xchg
leave
mov
and
shl
clc
jge
lret
rcr
sbb
dec
out
dec
inc
xor
jbe
outsl
sbbl
data16
xchg
cmc
popa
stc
push
cld
and
pop
data16
sub
jno
inc
mov
ljmp
sub
js
jae
dec
push
push
mov
notl
add
ds
stc
push
pushf
daa
add
and
jnp
jecxz
mov
lcall
test
and
xchg
push
cli
sub
dec
ljmp
rorl
shrl
popa
sub
jne
lret
es
or
aad
fidivrl
shl
enter
push
lock
bound
sub
test
xor
lahf
sbb
cltd
pusha
mov
adc
add
mov
popf
dec
adc
push
sub
mov
cs
outsl
dec
stos
test
lock
in
sbb
loope
jns
and
mov
xchg
sub
movsl
cmpsb
xchg
cmp
ret
cli
push
xchg
fwait
inc
push
inc
sub
sub
lock
add
cmp
pop
cmp
jb
add
sbb
pop
push
out
gs
add
xchg
iret
adc
aas
imul
int
mov
add
or
mov
test
cmpxchg
jl
mov
loope
xor
stc
xchg
add
or
ja
and
in
mov
sub
cmp
std
push
pop
out
repz
sub
sbb
dec
xor
cwtl
cwtl
leave
adc
inc
dec
imul
xor
and
inc
jmp
push
test
add
inc
mov
xor
rorl
mov
rcr
scas
sbb
xchg
pushf
scas
mov
sbb
mov
leave
xor
nop
fidivs
push
sub
out
out
or
jbe
hlt
sub
call
lcall
dec
add
cwtl
push
rcl
outsl
xchg
mov
or
fdivrs
enter
addr16
cmpsb
xchg
sub
mov
mov
popa
mov
mov
jl
add
in
mov
adc
sbb
loop
notb
mov
std
dec
sarb
add
test
add
stos
sbb
xor
in
mov
mov
imul
push
insb
psubb
enter
cwtl
aam
jno
stc
aaa
mov
mov
or
addl
stos
stc
fldl
lea
xor
ret
adc
in
xchg
dec
movsb
sbb
cmp
popa
int
xchg
dec
shrl
sti
out
dec
inc
jmp
jmp
jecxz
mov
out
pop
inc
pop
imul
out
movsb
sbb
cmp
adc
and
sbb
dec
sbb
repz
sub
jne
sbb
inc
xor
mov
adc
mov
jg
std
fisubrl
sti
inc
push
jns
adc
lods
f2xm1
in
cmp
mov
loop
lret
mov
loop
out
sub
pop
dec
jl
test
and
ljmp
or
sub
ljmp
add
mov
lods
je
ljmp
mov
addl
lret
pop
lcall
xor
mov
push
push
pusha
sub
or
dec
bound
sbb
dec
mov
repnz
cmp
ja
mov
fadds
pop
imul
push
push
jne
fistps
mov
dec
cli
bound
or
mov
jmp
inc
or
xchg
mov
addr16
fwait
inc
xchg
pop
mov
mov
add
into
inc
mov
pop
jl
or
jno
loop
push
sarb
add
ja
cmp
mov
outsl
push
jns
insl
sub
adc
shlb
adc
cmp
add
push
push
mov
push
xchg
sub
or
and
dec
pop
icebp
mov
fnstenv
repnz
dec
in
into
lret
ss
lahf
mov
std
shrb
repz
test
idivb
outsb
roll
aaa
push
pop
aaa
jo
mov
sub
pop
cmpsb
push
scas
mov
jge
push
sti
ljmp
loopne
imul
sub
cmp
add
lock
pop
sub
mov
add
cmpsb
mov
lock
jnp
insl
icebp
dec
inc
xor
mov
test
rep
mov
dec
jno
inc
test
icebp
cmp
inc
sbb
add
xor
les
in
fwait
rorb
sbb
std
scas
ja
jno
cmpsl
pushf
mov
inc
xlat
div
jecxz
sti
pop
xor
inc
ds
jns
push
jmp
or
add
outsb
inc
adc
and
pop
lods
pop
dec
pop
jmp
sub
xor
shll
xor
js
adc
push
orl
jae
or
cltd
mov
andb
mov
inc
into
lods
incb
das
adc
fwait
imul
inc
aas
xor
xor
aaa
jle
aam
and
outsb
mov
push
pop
pop
fcmovnbe
add
jnp
add
sub
sti
push
mov
dec
cmp
cmp
sub
xchg
lret
ljmp
popl
inc
add
ljmp
cmp
sahf
push
add
add
or
inc
sahf
inc
pusha
adcl
mov
push
ja
sub
rolb
adc
outsb
ret
sub
dec
jg
nop
lods
dec
add
movsb
or
push
pop
notl
adc
or
imull
inc
insl
push
inc
or
push
lret
cltd
loope
xlat
repnz
aas
into
xor
pop
mov
sahf
shll
mov
xor
pop
sbb
mov
fs
pop
xor
mov
int
js
int3
xchg
sub
push
ljmp
add
cmp
xor
dec
pop
xchg
bound
add
mov
idiv
pop
cli
cmc
ds
dec
sub
dec
cmc
inc
int
popf
cwtl
cmpsb
scas
in
loopne
lret
push
fsubrl
and
bound
jns
int3
add
mov
ficoml
adc
pop
mov
jmp
pop
cmp
imul
dec
lea
xchg
fld
xchg
push
stos
test
mov
das
sbb
sbb
cmp
lret
fs
sti
dec
arpl
pop
cmp
movq
or
shrl
mov
sbb
xchg
mulb
dec
cmp
aas
dec
and
inc
adc
js
hlt
push
gs
lret
call
enter
mov
push
sbb
add
sbb
out
mov
sti
hlt
pop
aad
in
dec
pop
dec
add
sub
cmp
repz
pop
ds
insl
jno
inc
scas
xchg
sbb
sbb
sbb
mov
sbb
push
adc
nop
scas
mov
fwait
in
mov
push
add
mov
dec
roll
iret
es
adc
movsl
pop
loope
xchg
pop
std
aad
cmpsl
loop
jp
cli
pop
popa
fnstcw
data16
mov
ljmp
out
daa
mov
out
xchg
icebp
adc
sahf
xor
subl
mov
push
dec
sbb
icebp
daa
pop
stos
int
fwait
push
sub
jle
push
sbb
idivb
sbb
mov
test
and
adcl
dec
daa
xchg
cmpsb
xor
mov
sub
iret
das
lods
or
cwtl
sbb
mov
or
mov
mov
sbb
inc
add
ja
jns
loopne
mov
add
outsl
dec
sbb
jno
sbb
inc
push
daa
sbb
pop
pop
mov
in
push
sbb
add
add
push
dec
sbb
pop
cmp
cmp
xor
or
xchg
aaa
das
mov
and
add
scas
jae
int3
and
mov
cmp
dec
cmp
in
incb
test
sahf
or
sbb
inc
scas
xchg
and
jle
stos
mov
cltd
in
mov
add
xchg
xchg
shlb
nop
inc
xchg
ret
push
xchg
lock
cld
sub
xor
sub
add
dec
sub
xor
mov
and
mov
clc
xchg
mov
outsl
adc
test
mov
cld
or
cmp
int
cmp
faddl
jae
sahf
in
dec
jge
jle
xchg
push
imul
or
fcomps
cmp
xor
lods
ds
dec
lcall
sub
xchg
add
inc
sub
pop
push
and
in
je
mov
scas
cmpsl
test
sbb
fmuls
cmpsb
xor
test
hlt
mov
pop
stos
cmp
xor
sub
rorb
jnp
xor
mov
push
xchg
ss
sub
mov
aaa
cmp
add
push
outsl
mov
cld
sub
and
mov
movsl
and
sub
mov
pop
push
pop
popf
push
addl
ljmp
les
dec
push
int
jp
insb
je
fimuls
enter
dec
icebp
or
add
es
es
lcall
jg
pop
cmc
inc
sbb
lret
fwait
int
repz
mov
imul
fs
mov
ja
mov
imul
sarl
cld
dec
jp
push
dec
or
inc
adc
inc
stos
and
and
mov
outsl
or
lret
pop
or
add
fs
dec
and
sbb
addb
push
dec
add
pop
xor
lcall
xchg
rcrl
jo
addb
push
inc
or
divb
mov
adc
xchg
loopne
and
adc
adc
sbb
mov
xchg
mov
push
in
push
int3
push
dec
xchg
ljmp
aaa
xlat
xchg
cmp
mov
in
into
test
push
mov
push
inc
gs
push
fsubs
adc
mov
jns
out
and
xor
ljmp
outsl
sub
pop
mov
dec
in
add
sarb
jns
pop
xchg
cmpsl
outsl
lea
inc
xchg
jb
into
fsubs
loope
insl
jae
and
ja
imul
psubsb
out
fcoms
push
in
mov
popa
mov
push
hlt
mov
lahf
jnp
fdivs
mov
dec
xchg
add
jb
mov
subl
ret
pop
inc
push
xchg
xor
mov
cmp
lods
in
stos
in
popf
movsb
mov
jle
in
jle
in
jb
sbb
dec
fwait
pusha
fistps
push
icebp
mov
or
aam
pop
inc
mov
fisttpl
sub
and
shrb
pop
insl
repz
mov
cmp
mov
cltd
add
pop
cmp
icebp
mov
dec
push
push
cld
push
pop
sbb
lods
jb
inc
std
xor
addr16
jge
shl
shl
arpl
jbe
cmp
or
cmp
push
xchg
or
call
aam
ret
ljmp
pop
call
icebp
popa
push
mov
sbbl
mov
push
in
push
and
inc
lods
pop
or
add
inc
mov
enter
adc
cli
scas
ljmp
push
add
fs
scas
sub
xor
mov
push
in
push
cwtl
pop
xor
jae
cmp
lods
aam
pop
lds
in
inc
inc
lea
adc
adc
lods
sbb
mov
fcompl
rclb
popf
sub
add
ret
out
adc
and
cmp
xchg
repz
test
mov
jg
pushf
mov
dec
sub
adc
fildl
lahf
adc
lret
repnz
hlt
addl
fstpl
mov
and
dec
test
or
dec
daa
jb
add
sti
test
repnz
mov
mov
stos
push
mov
xor
sub
lods
pop
ljmp
ljmp
popa
sbb
push
icebp
xor
or
xchg
push
pushf
xchg
std
add
test
ljmp
stos
lahf
sub
inc
in
jno
add
jbe
push
add
pop
push
xor
pop
mov
push
dec
mov
test
adc
imul
push
call
or
js
push
bound
pusha
jle
stos
xorl
cmp
push
sub
in
int3
push
shrb
lret
call
rcrl
lea
sbb
test
sub
mulb
and
pop
ljmp
and
dec
push
loopne
aad
mov
jo
pushf
scas
add
ljmp
and
iret
sbb
and
sbb
add
inc
loopne
push
pop
clc
pusha
inc
cmc
xlat
repz
int3
mov
shl
and
data16
pop
xchg
icebp
sbb
and
cmp
push
pop
in
xor
xchg
inc
cmp
pushf
adc
in
popa
stos
pop
dec
and
xchg
mov
dec
pusha
repnz
pusha
jmp
dec
dec
mov
cmc
inc
pushf
xchg
or
or
es
dec
mov
jg
or
and
negb
jmp
sub
loop
push
aas
inc
xchg
mov
sub
push
jp
xchg
xchg
cld
sarl
lods
repnz
and
mov
fsub
sbbb
push
pop
inc
xor
mov
test
mov
sub
jmp
xlat
push
mov
arpl
mov
cmp
mov
frstor
movsl
test
dec
idiv
pop
pop
gs
mov
addr16
push
mov
in
mov
stos
aas
pop
adc
sti
push
stos
pop
mov
push
or
adc
and
scas
mov
iret
test
dec
leave
andl
and
dec
sarb
jmp
push
aaa
xchg
imul
dec
je
adc
mov
push
jmp
xchg
sbb
jb
jbe
mov
insb
rorl
movsl
push
and
movsb
je
sub
aam
inc
addr16
scas
adcb
aam
movb
cmp
adc
les
mov
cmp
jmp
cmpsb
shl
push
call
pop
hlt
clc
mov
mov
ffree
sub
dec
in
aaa
inc
loope
mov
xchg
adc
shlb
xchg
sbb
adc
push
jnp
fwait
add
mov
outsb
mov
in
imul
or
xchg
imul
cmp
addr16
sub
outsb
sbb
dec
inc
mov
inc
lods
mov
adc
sub
mov
or
jmp
inc
cmp
orb
fs
xor
data16
nopl
gs
ljmp
es
sarb
stos
pop
lret
out
ret
ds
sbb
add
mov
add
jmp
mov
jae
mov
pop
mov
outsl
jl
add
enter
sub
dec
test
out
push
sbb
jmp
sub
xlat
mov
lock
mov
jmp
adc
dec
ds
scas
mov
inc
add
dec
insl
mov
mov
mov
push
jecxz
push
bound
sbb
movsb
mov
sbb
lods
addr16
add
div
andl
dec
pop
shlb
aas
jle
sbb
mov
into
stos
mov
mov
jno
loopne
pop
repz
fisttps
xchg
test
inc
lret
cmp
into
lahf
sbb
add
sub
jns
add
fiaddl
xor
pop
sub
in
jecxz
clc
pop
pushf
repz
movsb
scas
inc
out
popf
jbe
aas
xchg
imull
jb
pop
add
scas
ret
sbb
popf
pop
pop
or
test
mov
stos
sbb
int
std
push
pop
cwtl
mov
xor
cltd
pop
das
jl
fidivrl
xor
shll
sahf
add
add
push
dec
stos
sub
fsubs
inc
push
aas
aam
popa
sbb
xlat
add
pop
xchg
jo
pusha
movsl
in
rolb
dec
movsl
iret
inc
imul
scas
inc
mov
bound
pop
cwtl
ret
cld
fbld
add
shl
fists
dec
sbb
or
xor
movsl
and
das
jno
and
mov
pop
pop
aas
add
or
xchg
jl
in
enter
out
mov
loope
subl
xchg
sbb
and
sbb
xlat
or
lret
repnz
popf
cld
hlt
mov
and
mov
movsl
xor
aas
adc
xor
add
aas
mov
mov
ja
inc
or
pushf
lock
jo
push
mov
push
cmp
add
mov
mov
pop
arpl
scas
add
shll
es
sbb
inc
js
andl
and
minps
daa
add
xchg
inc
cmpsb
pop
and
adcl
mov
clc
shrb
stos
cwtl
jae
add
cmc
arpl
nop
or
pop
imul
aas
testb
int
testb
dec
in
sbb
push
xor
rolb
adc
push
addr16
xor
js
sbbl
lods
enter
mov
xchg
sbbb
jmp
mov
inc
add
cmp
add
imul
repnz
mov
out
xchg
and
lods
mov
pop
insl
fs
xchg
loope
xchg
mov
mov
test
test
lods
ds
push
lahf
jecxz
daa
push
add
sbb
xor
jno
loopne
sbb
adc
push
add
popf
das
outsb
xchg
push
shl
pop
jecxz
adc
inc
fistpll
inc
js
sbb
xor
aam
subb
mov
arpl
sahf
mov
and
pop
push
jb
dec
shlb
scas
adc
sahf
or
push
jb
into
inc
add
daa
fists
cli
add
lret
pop
sbb
add
cmp
testl
cmp
push
js
ret
or
enter
inc
mov
test
mov
mov
mov
mov
fadd
shll
cs
loop
cmpsl
jmp
stc
repnz
nop
push
and
repz
out
ljmp
sub
mov
xor
jnp
inc
mov
movsb
inc
push
cmp
scas
mov
push
repz
or
rcrl
push
ljmp
push
sti
xor
adc
push
cmp
xchg
mov
sbb
adc
push
fwait
lods
mov
sub
mov
mov
fwait
outsb
adc
jo
lcall
mov
fmull
cs
stos
inc
add
xchg
mov
jecxz
mov
inc
test
cmp
dec
jo
pop
inc
xor
dec
dec
lret
mov
xchg
dec
lahf
xor
mov
mov
jo
dec
fnstcw
into
adc
call
inc
lock
mov
movsb
lahf
cmp
mov
pop
cmp
add
cmp
shlb
jmp
jmp
cmpsl
sbb
sub
and
sub
inc
cwtl
xchg
cwtl
loopne
mov
test
inc
mov
insb
pop
inc
pusha
test
stc
notb
sbb
shl
fcompl
xchg
push
ds
lret
dec
inc
cmpsb
xchg
pushf
jge
nop
sahf
sti
mov
add
lock
int
cmc
dec
mov
cmp
decb
xchg
pop
inc
dec
lods
mov
lahf
outsb
inc
xchg
or
pop
fsubl
jae
test
mov
sbb
inc
addr16
mov
adc
ss
pushl
xchg
dec
push
mov
xor
outsl
orl
push
jae
push
stos
adc
dec
outsb
cmpsl
push
addb
sbb
mov
pop
xchg
jae
mov
notb
popf
insb
and
sbb
mov
push
lret
testb
test
dec
daa
test
add
mov
mov
lods
adc
das
cmp
adcb
add
add
popa
dec
xor
cli
cli
lret
out
and
or
das
adc
sbb
jg
out
add
popa
iret
subl
inc
inc
nop
stos
xchg
mov
enter
sub
mov
repnz
add
sbb
scas
xorl
sub
inc
movsl
inc
into
ss
insl
cmp
nop
daa
sahf
lahf
jmp
push
inc
inc
adc
xchg
inc
jl
clc
in
nop
and
mov
push
insl
jns
mov
push
pop
mov
push
mov
clc
pushf
xchg
icebp
jmp
xchg
ret
mov
cmp
push
mov
adc
mov
in
sbb
sub
data16
test
stc
add
in
test
pop
fistpl
pop
cld
pusha
mov
cmc
dec
bound
repz
dec
inc
call
xchg
jl
popa
mov
pop
mov
into
mov
cmp
xchg
cmp
jo
xor
jmp
sub
sub
xor
inc
sbb
xchg
fidivl
add
into
clc
sub
dec
rcrb
mov
les
aas
push
shl
sbb
and
aas
popf
xor
pop
mov
inc
add
idivb
xor
fldcw
loopne
jmp
popa
jge
test
mov
push
sbb
mov
icebp
jecxz
js
ds
hlt
sub
lods
inc
push
adc
bound
fstpl
lret
in
mov
inc
cmpsl
cmc
mov
ja
sub
js
push
addr16
roll
orl
outsb
movsl
xor
xorb
stos
loop
pusha
jle
lret
jbe
imul
inc
dec
inc
mov
sub
test
nop
add
mov
loop
stos
xchg
test
lock
andb
jg
xchg
fwait
je
push
shrl
lods
add
mov
stos
test
add
push
sub
add
icebp
xorl
int3
sbb
or
adc
test
cmpsl
pop
dec
popa
adc
or
pop
and
ja
xor
pop
dec
insb
rclb
subl
dec
bound
push
mov
sarb
das
mov
mov
sbb
add
clc
hlt
adc
mov
dec
dec
pop
mov
cmp
js
and
mov
xacquire
imul
movsb
push
inc
dec
je
dec
ret
jg
scas
mov
sbb
mov
and
inc
push
sub
dec
imul
add
loop
das
movsl
mov
inc
mov
inc
cmp
or
dec
push
jo
mov
jg
into
jle
sbb
and
idivb
sbb
sub
jo
pop
jge
insl
jge
push
inc
add
mov
ret
push
mov
cmp
or
cmpsb
pop
jmp
les
cwtl
xor
idivb
push
jl
arpl
or
fdivrl
xor
pop
dec
adc
sbb
lods
fwait
inc
iret
ljmp
mov
add
or
dec
mov
dec
cmp
sub
pop
orb
cmpsb
dec
add
push
pushf
sub
lea
push
test
inc
imul
jg
mov
or
call
mov
mov
lods
insb
xor
xchg
xlat
cmp
pop
sbb
cmp
pop
cmpsb
cld
sub
test
sub
out
ljmp
icebp
inc
and
scas
sub
in
subl
xchg
pusha
dec
push
clc
out
jge
mov
mov
into
cmp
rcll
and
outsl
dec
pop
mov
insl
mov
lret
add
inc
mov
sbb
jo
shll
mov
cmpsl
pop
sub
xchg
mov
lret
aam
jg
into
ss
push
jmp
push
xor
xchg
call
and
inc
cmpb
shrl
and
cmpsb
shll
mov
dec
sarl
pop
je
rorb
lret
imul
cmp
jp
inc
add
push
push
push
hlt
mov
testl
and
jae
adc
mov
clc
pcmpeqb
out
inc
outsl
pop
pop
in
xor
mov
inc
xor
push
cmc
iret
popa
sbb
stos
cs
iret
or
faddl
fstps
fcmovnb
mov
lahf
aas
xor
mov
fcomps
test
jbe
xchg
pop
imull
adc
add
cmp
lcall
cmpsb
inc
loope
sbb
adc
lods
jbe
push
cmc
hlt
cmp
mov
adc
xchg
sti
adc
xchg
gs
clc
xor
or
scas
mov
test
dec
sbb
jp
clc
mov
cmpsl
dec
add
sahf
mov
sbb
aaa
rcrl
into
add
dec
mov
iret
jle
sub
fwait
jp
adc
xor
je
lret
xchg
cwtl
shrl
shll
rcll
push
std
clc
enter
or
hlt
or
adc
testl
sbb
sahf
ret
and
add
cmpsb
xor
into
rcl
je
rcr
or
andb
ror
popl
add
or
ljmp
mov
or
int3
cld
add
pop
push
loop
pop
sub
push
and
xchg
nop
push
push
loope
cmp
or
sbb
jbe
inc
loop
popf
inc
cli
imul
hlt
rcll
xchg
sbb
cld
fcoml
lds
cmp
or
push
or
xchg
or
rorl
sbb
das
leave
inc
call
dec
jl
ffreep
jp
jmp
push
cmp
jo
insb
jg
adc
loop
lock
or
fidivl
fs
loop
dec
push
jl
icebp
imul
and
jbe
add
mov
jl
icebp
loop
mov
ret
jb
push
lods
stos
jbe
lods
mov
fmull
xchg
stos
jecxz
mov
jnp
mov
push
lds
mov
cli
rcrl
xchg
lret
fistpll
pop
add
push
pop
add
int3
mov
movsb
ret
cmp
cld
lcall
cli
push
add
mov
jle
dec
movsl
aas
cmp
push
out
rcl
inc
xlat
sbb
adc
scas
rol
and
mov
daa
insb
icebp
test
xchg
lea
xchg
xor
popa
test
xor
push
lock
test
lea
cld
pop
cmp
into
cmc
out
pop
aas
daa
add
push
jo
adc
xchg
faddl
das
in
scas
jecxz
cmp
add
imul
jmp
fucomip
jmp
inc
insb
das
dec
rorl
mov
rclb
mov
or
add
ds
lret
jbe
rcrb
mov
pop
inc
sbb
leave
push
dec
push
stc
das
xor
jo
or
add
sahf
push
fsubrs
imul
add
fdivs
repz
test
xchg
adc
test
cmp
push
mov
shll
fisttps
jmp
or
mov
dec
xor
push
and
inc
popa
pop
jecxz
xchg
inc
repnz
dec
lds
pop
ljmp
push
lds
or
imull
push
or
add
xchg
cmpl
ds
pushf
or
mov
stos
mov
add
inc
adc
mov
les
mov
sub
adc
mov
mull
jge
or
imul
aas
lock
or
scas
int3
mov
test
repz
push
fdivrs
bound
ljmp
adc
ret
movsb
mov
push
in
das
fistpl
cmc
addr16
clc
mov
xchg
stos
push
sbb
cld
add
icebp
test
cmp
pop
adc
jl
outsb
movsb
sub
stc
and
idiv
and
test
out
push
push
movsb
dec
cmp
int
cli
mov
adc
int3
pop
pop
xor
mov
or
sub
fimuls
iret
inc
push
adc
mov
push
push
mov
shl
sbb
clc
pushw
dec
mov
sar
mov
xor
push
filds
pop
adc
fistpll
xchg
test
cmp
stc
inc
or
mov
insb
sbb
and
or
mov
into
dec
daa
adc
lock
lods
or
and
mov
stos
and
lock
mov
or
js
xor
es
and
push
dec
ret
outsb
cwtl
or
inc
cld
shl
pop
xchg
sub
inc
scas
adc
ds
nop
cld
shrb
icebp
stc
or
pop
enter
pop
mov
data16
lods
cmc
dec
ret
add
lds
loopne
inc
and
mov
xchg
out
sti
dec
pop
jo
cmp
insl
stos
cmpsl
cmp
fisubrs
add
int
adc
aad
cli
and
xor
sbb
fadds
call
add
or
fists
add
scas
jb
lcall
and
jb
sub
lods
sbb
pushf
data16
arpl
mov
loop
sub
mov
sti
cmpb
or
orl
fiaddl
push
push
mov
sub
icebp
adc
pop
das
cmp
mov
lea
insb
pop
mov
pop
cld
js
or
push
jg
addl
jo
fidivrs
xchg
pop
test
or
jne
cmp
inc
repz
xchg
call
pop
add
imul
xchg
std
adc
inc
mov
inc
jno
sbb
sub
add
sbb
lahf
xchg
ja
push
push
lods
repz
repz
flds
sbb
loope
aam
xchg
push
sub
cld
push
xor
fwait
fldt
mov
adc
std
mov
dec
jl
or
test
pop
rolb
jge
fs
push
xchg
stc
rorl
lret
jmp
mov
out
mov
rorl
dec
jne
jmp
fcomi
sbb
xchg
int
and
dec
or
scas
push
xor
cmovge
stos
inc
add
test
push
jg
test
ror
pop
cmp
push
cmp
inc
test
mov
std
or
push
fadds
mov
sbb
imulb
psrad
sub
or
into
or
or
ds
cmp
mov
stos
jmp
popa
mov
cld
js
idiv
cmp
int3
inc
rolb
mov
in
or
out
mov
es
mov
mov
mov
fcmove
jno
loope
fistps
lcall
xor
sbb
icebp
mov
fs
cli
mul
mov
jl
xor
lret
sbb
outsb
cmp
jno
add
and
add
data16
xchg
movsb
shrb
sub
lret
and
pop
xor
mov
cmpsl
jnp,pn
add
pop
mov
fistps
mov
loope
xchg
fucomi
lds
call
cltd
andb
daa
cmp
add
mov
xchg
push
in
dec
bound
add
add
xor
cld
ja
jg
mov
add
bound
testb
adc
mov
das
outsb
incb
push
bound
add
fbld
lret
xchg
cmpb
xor
xor
pusha
mov
xchg
or
test
pop
sub
mov
int3
mov
jno
scas
je
pusha
sub
popa
push
jp
inc
pop
dec
jecxz
mov
sbb
gs
jbe
adc
mov
push
add
xor
mov
inc
jo
into
stc
std
test
in
mov
movsb
mov
xchg
scas
lods
push
or
pop
int
pop
clc
loopne
pop
xor
ds
sbb
popf
jg
jo
test
int
divb
imul
xor
and
cli
mov
pop
mov
dec
pushf
push
aas
adc
adc
lcall
jns
sub
enter
hlt
rorb
lret
inc
es
fsubl
dec
ret
in
ret
icebp
or
or
cld
cmp
loopne
sub
jecxz
mov
std
push
stos
xor
ret
sbb
xchg
adc
outsl
xchg
sbb
lods
pop
loopne
dec
jecxz
inc
sbb
pushf
mov
mov
push
or
xor
cmc
jp
push
fiadds
xor
addr16
xchg
add
repnz
test
das
scas
xchg
js
jnp
hlt
or
dec
outsb
mov
xor
push
xchg
push
sub
mov
mov
aam
xlat
xor
xlat
nop
adcb
and
repnz
push
mov
cmp
dec
inc
mov
in
rcll
imul
mov
xorl
inc
xor
or
cmp
imul
stc
and
xor
push
sbb
or
cwtl
mov
sti
jmp
stos
out
push
inc
and
lods
mov
push
add
sarb
lds
mov
sbb
pop
lahf
dec
ds
fldenv
cmpsb
insb
push
and
nop
icebp
mov
rolb
loop
nop
mov
testl
cwtl
pop
stc
adc
xor
scas
roll
and
xchg
push
jecxz
fcoms
xchg
jg
jecxz
test
dec
adc
dec
push
push
mov
jge
jno
lods
mov
mov
add
imul
mov
dec
jo
stc
fnstsw
xchg
add
clc
adcl
push
or
repz
jg
pop
jno
mov
dec
push
pop
xchg
lret
inc
scas
and
xor
push
lcall
pop
or
cli
mov
cltd
loope
imul
scas
into
sub
jnp
push
int3
mov
mov
add
pop
fsubp
in
mov
int
mov
mov
aas
js
ljmp
lcall
push
mov
mov
int3
jl
adc
dec
sbb
or
cmp
dec
adc
push
loop
mov
scas
mov
dec
xchg
inc
and
sbb
xchg
push
ljmp
addl
inc
and
icebp
adc
pop
mov
jle
lock
inc
and
adc
dec
adc
add
pop
sahf
pop
cltd
xor
inc
daa
jns
mov
mov
insl
inc
push
fbstp
mov
orl
jo
mov
cmp
and
shlb
mov
or
pusha
xchg
add
xlat
cmp
add
mov
inc
cli
mov
sbbl
push
adc
pushf
insl
inc
lock
shlb
icebp
push
mov
movsl
loopne
rol
xor
sub
aam
jl
cs
jp
leave
fwait
or
push
jmp
lahf
je
ja
aaa
mov
call
cli
adc
cmpsb
sbb
adc
pop
popa
mov
ret
fistps
scas
daa
jecxz
jmp
daa
dec
sub
inc
aam
jne
mov
jae
sbb
out
sub
andl
outsl
dec
dec
aad
mov
fstpt
add
ja
in
mov
or
or
pop
push
or
cld
add
ss
push
push
xor
rcr
mov
and
sub
jnp
popa
push
jl
push
cwtl
adc
sbbb
sbb
outsl
and
xchg
adc
mov
pop
scas
xchg
push
test
jbe
into
mov
lea
pop
cmc
mov
movsb
dec
sub
fiaddl
fildl
push
pop
inc
inc
cmp
icebp
cld
lods
add
or
cs
mov
pop
insl
loopne
sahf
xchg
dec
cmp
cmpsb
mov
mov
jecxz
in
fdivrs
lods
fisubl
repz
add
fstps
rol
es
cli
inc
pop
pop
mov
rclb
mov
add
cwtl
push
aas
int3
mov
push
hlt
pop
gs
xlat
stc
pop
out
push
xchg
movsl
push
mov
stc
test
mov
or
adcl
int3
inc
rcrl
lahf
mov
out
scas
sbb
mov
xlat
and
sbb
out
xor
movsb
pop
js
or
mov
out
inc
pop
push
push
mov
sub
inc
mov
sbb
outsb
addl
adc
test
jbe
cmp
repnz
out
pmaxub
ret
push
xchg
insl
xchg
pop
fdivp
imul
hlt
push
sub
sub
push
jo
pop
add
inc
scas
jge
stos
fiadds
fs
ret
les
and
lret
ja
jle
and
aad
imul
sbb
xchg
jae
adc
inc
andb
mov
imul
dec
ret
adc
xor
mov
xchg
cmp
dec
add
out
incl
sub
inc
xchg
je
add
fucomip
pop
push
xor
cwtl
and
dec
cmp
add
dec
popf
mov
std
mov
ja
inc
push
mov
xchg
pop
inc
jmp
cmc
lcall
dec
xchg
pusha
mov
pop
aas
in
jmp
mov
out
xor
fsubp
jecxz
push
xor
cs
enter
bound
lret
dec
std
movsl
cs
roll
aas
push
xor
inc
ljmp
mov
jmp
pop
cmc
xchg
and
cs
and
cld
and
call
mov
sub
mov
outsb
imul
xchg
and
add
loopne
xor
or
insb
mov
test
jnp
jbe
fdivrs
outsl
aaa
loope
into
push
cmp
pop
cwtl
mov
imul
stc
cwtl
jecxz
es
loope
and
ja
xor
and
adc
and
push
inc
pop
aaa
inc
push
std
add
jnp
mov
xor
sti
lret
dec
jne
sahf
movsl
inc
push
dec
or
add
push
lea
adc
ds
scas
mov
push
fstpl
adc
and
fbstp
imul
repnz
inc
movsl
lods
mov
sbb
mov
andl
pop
or
andb
xor
repz
fdivrl
push
add
aaa
push
jnp
arpl
stos
jmp
sub
pop
jno
xchg
aam
negl
ficoms
cmp
leave
push
mov
push
cmp
or
sbb
fnstsw
stc
push
movsb
or
and
jno
ljmp
stc
pop
mov
pop
in
pop
and
pop
je
shrl
outsl
xchg
dec
jmp
lods
loopne
das
popa
jns
mov
repz
xor
vmwrite
lods
jge
inc
imul
xor
push
pop
push
cmpsb
test
mov
mov
add
repz
scas
jne
rcrl
xlat
cs
mov
xchg
movsb
inc
dec
xchg
pop
dec
lea
pop
pop
push
sar
add
cmpsl
into
adcb
xchg
jnp
jne
hlt
jmp
addr16
shlb
nop
adc
sbb
lods
add
test
inc
push
lea
js
ljmp
push
mov
ret
stos
mov
mov
test
js
out
stos
sti
or
sbb
inc
call
cs
mov
sbb
dec
mov
addb
imul
mov
ja
shll
jno
dec
xlat
lcall
or
jmp
jae
cmpsb
insb
xor
sbb
les
aas
cmp
jg
jl
mov
push
aam
and
scas
xchg
fs
xchg
int3
and
add
dec
xchg
loope
loope
mov
adc
push
pushf
mov
mov
ret
push
cmp
mov
imul
pop
and
icebp
xchg
mov
repnz
jmp
and
dec
jecxz
outsb
in
add
mov
add
pop
add
mov
test
dec
mov
pop
sub
popf
mov
lcall
cmp
pop
aad
or
xchg
pop
loope
fwait
sbb
pop
xchg
or
dec
jae
es
jne
sbb
xorb
ja
sbb
insl
sti
sbb
pop
xchg
jne
xor
mov
pop
xor
aas
mov
adc
test
inc
enter
and
sbb
ja
pop
push
fmull
mov
out
cmp
pop
iret
cli
in
mov
pop
and
push
and
pop
jns
add
add
daa
iret
popa
rcrl
movsl
mov
cmc
or
mov
bound
jo
push
adcb
adc
lret
dec
mov
add
mov
rorb
adc
fwait
xor
add
xor
pop
pop
cmp
scas
sub
loopne
inc
jge
sub
loope
add
andb
xlat
jb
dec
xchg
cmp
rolb
cmp
lods
mov
xor
icebp
xchg
xchg
push
nop
jg
leave
mov
int
sub
push
adc
repnz
mov
inc
sub
inc
cli
adc
mov
mov
add
addl
int
mov
aad
mov
clc
jae
movsl
mov
mov
xor
or
dec
pop
sbb
cmp
xlat
mov
and
xchg
xor
lds
dec
xor
inc
xor
mov
pop
cltd
pop
ljmp
das
enter
adc
not
and
dec
aam
das
jne
insl
addl
enter
push
push
in
pop
push
jns
lret
dec
xchg
mov
sub
mov
push
inc
pop
outsb
jne
pop
xor
inc
int3
iret
sub
es
push
dec
repnz
ljmp
roll
lods
pop
jno
jnp
adc
pop
cli
icebp
jmp
cli
fstl
ret
mov
icebp
lods
pop
lea
ljmp
add
sub
dec
pop
push
stc
pop
fistl
outsl
xlat
sbb
pushf
hlt
or
cli
pusha
inc
dec
add
fwait
aas
je
and
sub
out
adc
mov
lods
icebp
or
leave
pop
scas
mov
dec
hlt
jmp
xor
adc
adc
divb
into
inc
adc
add
or
daa
xor
xchg
xchg
scas
jge
and
mov
mov
xchg
add
popa
mov
mov
add
mov
or
andl
push
sbb
mov
adc
int
outsl
adc
fdivrp
sbb
shr
cmpsl
data16
arpl
icebp
inc
shlb
sub
mov
cld
cmp
mov
ret
pop
jecxz
test
repz
shl
sbb
add
mov
adc
pop
or
je
lret
es
mov
push
inc
jbe
cmp
jno
iret
mov
bound
shl
push
fcmovbe
lea
in
cltd
imul
add
lcall
icebp
sub
fwait
cmp
cmp
push
add
adc
call
fs
sbb
cmp
movsb
jnp
mov
stc
std
adc
clc
xchg
pop
lret
jecxz,pn
inc
add
inc
adc
jnp
or
dec
mov
popf
and
enter
orb
rorl
imull
sub
movsb
int
js
cmp
or
pop
rcrb
xchg
std
shlb
inc
aam
into
push
push
cmc
and
iret
pushf
mov
and
lods
cmp
out
cmp
push
sbb
test
outsl
lret
cli
ss
enter
in
push
cmc
cmpsl
xor
aam
pop
and
pop
lret
add
aas
lcall
push
mov
es
add
les
or
out
js
mov
or
shlb
aam
cmp
mov
xchg
rolb
imul
jmp
stc
std
push
pop
xchg
sub
mov
in
ret
test
add
jl
sub
xor
mov
dec
or
adc
aaa
pop
xchg
jp
push
test
sub
mov
aas
lret
jbe
scas
adc
mov
mov
arpl
push
fwait
repz
xor
rcrb
adc
push
mov
mov
sub
imul
aad
dec
rorl
mov
dec
bound
fmull
loopne
jmp
adc
pusha
xchg
mov
gs
shrl
sahf
aad
push
and
jns
dec
mov
pop
dec
ss
repz
lret
jmp
sbb
cltd
pop
sbbb
xor
orl
xchg
pop
fsubrl
xchg
xchg
fcomip
aaa
cmc
mov
enter
cmc
insl
push
ja
pop
in
pop
mov
adc
dec
and
lea
jge
sub
arpl
gs
lcall
mov
or
fwait
mov
or
cs
addr16
popa
jmp
notb
jns
or
inc
lods
shlb
repz
fbld
mov
jecxz
sub
cmp
pop
xor
test
jnp
mov
mov
call
out
lods
push
dec
cs
iret
dec
inc
fcompl
pop
xlat
lds
setg
cmpb
lret
es
sub
sub
push
aam
or
cmp
mov
hlt
jl
mov
adc
cld
or
imul
stos
mov
pop
xchg
cmp
loope
test
test
sbb
cmp
scas
mov
xchg
sbb
test
add
pop
sbbb
inc
xor
sub
ss
mov
loop
leave
cmpsb
ja
jg
add
push
out
fs
fldt
les
rcll
pop
add
xor
in
xchg
jmp
cmp
sbb
mov
pop
enter
imul
cmpsl
jno
in
gs
pop
adc
in
inc
imul
xchg
bnd
pop
sub
cs
pushf
xor
fwait
and
mov
or
push
fimuls
cs
mov
in
dec
mov
ljmp
pop
pop
clc
repz
sub
das
shl
mov
sbb
clc
jmp
out
negl
pop
jo
push
inc
int3
jns,pn
pop
pop
das
push
mov
or
or
inc
popf
call
movsb
cs
dec
les
push
aas
adcb
sub
jne
pushf
outsl
pop
mov
enter
dec
cmc
add
insl
clc
les
xor
pop
stc
out
lds
out
aam
mov
cmpsl
fidivs
test
and
packssdw
jle
test
gs
mov
mov
lods
xchg
xor
rcrb
or
sbb
inc
incl
clc
jmp
popa
int3
lret
or
into
sub
jge
arpl
outsb
xchg
xor
add
push
dec
pop
add
cmp
scas
sbb
into
push
adc
icebp
add
push
adc
mov
push
sub
sbb
jg
dec
or
subl
mov
movsl
sub
inc
in
imul
mov
dec
cwtl
or
push
add
adc
shlb
jl
stc
ret
inc
push
lret
jle
jo
dec
iret
add
sbb
inc
lods
fucomip
sbb
jne
pop
dec
into
xor
sbbb
jecxz
fistpll
jbe
int3
fs
mov
rorl
jg
sub
insb
cmp
sbb
xchg
xchg
jo
jmp
cmpsl
or
dec
dec
lock
cltd
push
test
adc
dec
xor
or
jnp
cmp
fistpll
jle
rorb
push
push
push
inc
inc
add
sbb
cs
stos
xchg
sarl
jno
testb
and
sbb
sbb
mov
leave
aam
cmp
xor
jmp
jns
cwtl
xor
jnp
adc
mov
repz
jno
in
pusha
loopne
mov
sub
pop
pop
test
or
mov
outsb
addl
fdivrp
jecxz
xchg
je
fisubrs
ret
movsb
push
test
dec
mov
lret
repnz
rcrl
loope
int3
cltd
icebp
arpl
scas
mov
mov
cmp
imul
sti
adcl
fwait
jmp
add
jecxz
inc
inc
and
iret
or
scas
cld
push
insl
adc
cmp
add
add
loopne
lcall
push
adc
fs
sbbl
lods
jne
jbe
ds
in
cld
lea
pop
adc
lret
add
hlt
mov
add
cld
mov
repnz
stos
xor
push
sub
das
stc
pop
cli
or
pop
push
lods
cmp
ja
cmp
stos
cmp
int3
repnz
inc
sti
insl
sbb
in
ret
jl
mov
xchg
or
cmp
add
and
out
sbb
ret
add
pushf
gs
inc
mov
aam
add
jno
dec
push
hlt
in
cmp
xorb
adc
out
aad
jbe
mov
push
add
jb
movsb
pop
xor
movsb
pop
mov
ljmp
add
iret
dec
cmpb
inc
icebp
inc
rolb
sub
shlb
push
dec
jge
movsl
cmp
cmp
add
scas
mov
aam
mov
scas
mov
sysexit
inc
adc
lret
mov
mov
add
adc
push
scas
icebp
dec
adc
cmp
addb
inc
xor
sti
sub
mov
pop
les
xchg
outsb
add
mov
cwtl
or
ret
mov
xchg
sub
cmpsb
lret
push
imul
push
jl
inc
push
icebp
orl
gs
jl
inc
stos
dec
enter
iret
popf
pop
cmp
in
ret
shr
mov
ret
enter
sub
lea
lds
mov
fisttpl
xor
daa
sarl
and
cs
mov
sbb
daa
idiv
pop
addr16
mov
inc
cmpsl
scas
xchg
ret
and
adc
fnstsw
xchg
xor
xchg
mov
es
addr16
lods
cmpsb
sub
pop
popa
and
cwtd
rcll
add
and
imul
mov
inc
aas
arpl
dec
add
mov
cmpsb
gs
jp
out
xchg
das
aad
adc
jmp
test
outsb
jmp
mov
addl
mov
int3
cs
cld
idivl
push
jae
in
inc
push
push
icebp
sti
dec
insl
xlat
mov
int
sbb
leave
dec
idiv
arpl
cmc
cltd
ficompl
pushl
mov
push
adc
add
jno
adc
ffreep
jo
outsl
cmp
cmp
cmp
xchg
pop
ret
jns
push
into
or
jbe
es
scas
in
inc
sbb
xorb
adc
or
xor
sub
sbbl
loope
adc
push
xchg
or
scas
icebp
and
std
mov
or
pop
pop
lea
test
add
sbb
adc
jp
outsb
ss
add
cmp
movsl
xchg
fwait
pop
xchg
mov
jge
lret
mov
popw
push
add
cs
ret
dec
stos
sbb
sbb
mov
orb
fstp
mov
xor
ljmp
aad
mov
test
and
das
cwtl
xor
outsl
mov
movb
enter
jge
mov
xor
jae
addl
add
sti
fisttpll
cmp
inc
xor
test
les
mov
imull
xchg
push
cmpl
pusha
or
call
notb
push
test
jmp
enter
mov
mov
xchg
into
aas
dec
xchg
rorl
adc
mov
xor
cltd
and
mov
sub
inc
inc
test
pop
mov
push
xchg
or
pop
cmp
jae
mov
imul
stos
sub
dec
sub
cltd
movsb
mov
jne
mov
mov
mov
inc
pop
pop
das
sub
pop
dec
cs
mov
int
jnp
push
mov
xchg
jno
jnp
popa
inc
mov
icebp
clc
dec
push
add
pcmpeqw
nop
add
dec
sub
mov
jno
xchg
or
pop
jnp
int
and
and
ja
pop
cmp
push
pushf
jo
sbb
mov
nop
scas
loope
ffree
inc
mov
cmp
call
icebp
fwait
out
sbb
dec
je
orl
or
pusha
sub
add
inc
mov
push
xchg
ljmp
movsb
sbb
xor
pop
mov
hlt
out
pusha
pop
dec
insl
cmp
int
lods
mov
jb
mov
lods
push
sbb
dec
scas
clc
adc
adc
xchg
mov
adc
insb
icebp
xor
in
pop
stc
addr16
icebp
lret
aas
lahf
movsl
xchg
sub
mov
es
les
into
lods
jno,pn
inc
cmpsb
dec
in
stos
ljmp
mov
jno
ljmp
cmp
idivb
adc
fidivl
xchg
vpsllw
ja
dec
dec
aas
roll
adc
or
push
arpl
mov
mov
add
add
cmpl
mov
add
sub
xor
repnz
rclb
les
arpl
test
notl
jmp
xor
jg
xorl
mov
cmp
insl
cmc
popa
push
xchg
push
out
mov
mov
mov
inc
dec
fwait
push
hlt
and
mov
adc
mov
pop
jge
inc
or
jns
jne
ja
adc
push
idivl
xor
sub
mov
inc
xor
psrlw
mov
enter
push
and
sbb
jno
cmp
mov
or
fcompl
pushf
cld
ret
ljmp
cmpsb
dec
cmp
xchg
test
cltd
xor
arpl
sub
dec
andl
mov
jl
in
pop
jo
inc
mov
lcall
enter
xor
inc
cli
lcall
dec
sub
inc
pusha
and
mov
cld
adc
icebp
subb
mov
jl
fstl
aam
insl
fsubrl
add
mov
popa
sub
loope
bound
fwait
into
push
adc
shl
cld
ret
push
aaa
out
in
mov
pop
pop
sbb
sbb
or
mov
jl
mov
pop
inc
pop
jbe
add
jne
pop
hlt
call
mov
xchg
cmpsb
repnz
loopne
pushw
jecxz
push
ficompl
jbe
inc
shll
das
cmpsb
ljmp
xchg
sbb
imul
inc
dec
addl
fdivrs
das
mov
pushf
loop
shr
daa
movsl
xchg
es
lcall
les
or
mov
and
rcl
xor
pop
imul
xlat
sub
xor
popa
xor
or
lea
or
mov
mov
shlb
test
and
nop
pop
scas
xchg
scas
or
mov
push
or
test
push
or
mov
imul
push
mov
in
sahf
inc
roll
push
or
into
lcall
lahf
dec
xchg
in
mov
jne
cmp
adc
rep
daa
dec
mov
test
mov
cmp
rep
clc
push
bound
push
nop
mov
inc
lcall
mov
lea
sub
xorb
cs
mov
push
fcoml
xchg
andb
jno
lret
jmp
cmpsb
jns
or
int
fsubl
mov
popw
mov
pop
rol
cmpsb
mov
sub
rorl
das
clc
mov
movsb
mov
mov
ds
or
daa
test
stc
xchg
sbb
test
test
fcomps
sub
inc
jecxz
pop
push
xchg
push
pop
mov
xchg
popf
scas
sub
mov
xor
jae
inc
les
push
out
mov
xchg
pop
loopne
nop
std
inc
push
data16
ljmp
in
push
imul
inc
or
sub
mov
ds
or
mov
cmp
nop
sahf
or
jmp
clc
sbb
mov
test
outsb
test
aam
mov
xchg
imull
shl
cld
or
xchg
lcall
std
nop
pop
xlat
xor
cmpl
jg
pop
mov
jno
sub
xor
adc
cmp
adc
mov
mov
mov
mov
jne
mov
hlt
xor
jns
dec
jmp
mov
mov
fwait
je
inc
in
jne
dec
jbe
adc
inc
mov
movl
sbb
xchg
fmull
js
enter
dec
lock
xchg
das
shll
jno
repz
hlt
jns
stos
fsubrp
mov
pop
pop
add
add
sub
lock
xchg
dec
shll
dec
mov
mov
scas
in
dec
nop
push
adc
loopne
sub
ret
sub
test
enter
scas
add
cmp
je
adc
push
mov
sbb
or
dec
ljmp
pop
jae
psubw
lds
ljmp
sub
pop
test
add
or
xor
jbe
pop
sbb
rorl
out
inc
mov
push
ljmp
dec
pop
adc
cmp
fists
xor
clc
mov
jle
into
stos
pop
jmp
idivl
mov
cltd
shrl
cmp
sub
imul
ljmp
or
add
loopne
nop
dec
jns
cmp
jnp
xor
sub
test
dec
dec
adc
dec
fwait
inc
mov
push
je
lods
cwtl
inc
pop
pop
mov
mov
push
rcrl
into
mov
push
mov
inc
repz
inc
cmp
cmpb
shrb
sbb
or
dec
aaa
xor
mov
adc
es
mov
sahf
sbb
push
push
inc
mov
mov
mov
or
dec
jecxz
mov
jp
cmpsb
in
cmp
loop
repnz
fisubs
jo
scas
add
out
cmp
jae
jmp
mov
push
out
std
sub
push
push
sub
jl
ror
jmp
aam
js
stos
jmp
add
or
clc
das
lahf
test
pop
pop
jns
dec
and
push
or
jnp
mov
int3
lahf
add
push
push
or
pop
cwtl
or
in
loop
and
adc
imul
ds
xchg
inc
je
mov
mov
or
movsl
clc
xchg
mov
sbb
cli
adcb
mov
stc
lds
sbb
fnstsw
ljmp
hlt
fwait
pop
icebp
out
lock
cmc
out
sub
rcpps
jmp
js
dec
or
movsb
inc
mov
rcll
mov
lret
xor
jecxz
test
xor
sub
in
call
iret
pop
push
cs
xchg
hlt
imul
push
or
mov
inc
sbbb
add
jns
orb
jecxz
cmpb
das
mov
mov
pusha
pop
jne
xchg
push
xor
scas
sub
hlt
aas
call
scas
fcoml
das
enter
fsubl
push
inc
push
call
cs
dec
lahf
cmpsb
jb
in
mov
scas
add
ljmp
push
dec
test
ljmp
fsubrs
pop
imul
out
mov
mov
mov
and
imul
xchg
inc
push
stos
movsb
push
scas
lods
sub
adc
jecxz
mov
adc
fsubrl
adc
sub
inc
cli
cmp
xchg
sub
test
or
sbb
adc
test
leave
adc
addr16
cmp
mov
cmp
or
rorl
ret
adc
xchg
mov
test
xor
movsb
cs
pop
int
jge
dec
pop
mov
popa
sub
shrl
aas
dec
ds
mov
dec
orl
leave
push
fcmove
fidivrs
hlt
xchg
fdivl
ds
insb
testb
push
cmc
push
enter
add
loopne
pop
mov
ret
lret
lds
testl
shlb
call
insb
test
idiv
jmp
inc
xlat
dec
mov
inc
in
dec
ja
lcall
lods
jmp
imul
cmpsl
ss
dec
fistpll
vmovsd
cmp
add
mov
sub
add
lods
push
sub
cmp
mov
hlt
cmc
xor
inc
aad
sub
push
movsl
daa
in
aas
lock
lea
cld
hlt
dec
jecxz
fists
cld
out
inc
or
lcall
xchg
push
cmp
jae
int3
push
sti
sub
stc
mov
icebp
cli
sarb
inc
loop
adcl
repnz
push
sbb
jmp
mov
adc
inc
lret
ficoml
pop
xchg
imull
xchg
inc
pop
xchg
sub
jge
mov
inc
jl
std
fldl
push
inc
fistps
es
lds
mulb
or
cmc
test
lock
ret
adc
jg
rorl
xchg
xchg
mov
jecxz
imul
mov
sub
nop
int3
push
sub
jnp
lahf
xlat
push
idivb
out
pusha
outsl
or
nop
dec
push
testb
dec
cmpsb
and
outsb
jg
mov
out
cmp
cld
pop
pop
inc
aas
lret
imul
aad
ds
mov
into
add
push
out
push
sub
sarb
mov
pop
int
shrl
test
adc
add
lea
add
add
std
jb
icebp
ds
nop
inc
xor
or
fdivrl
cmpsb
cmp
xor
dec
aad
outsl
jne
xor
mov
rcr
push
xor
cmp
pop
or
cmp
roll
and
lahf
mov
push
sbb
cmp
in
inc
hlt
sahf
dec
adc
dec
mov
mov
in
fst
pop
test
fwait
stos
into
cmp
jo
dec
push
ss
pop
sbb
movsl
mov
int3
add
pop
jl
and
and
lock
js
xchg
adc
xchg
clc
out
out
scas
or
mov
lret
icebp
lock
cmp
mov
es
into
dec
movb
call
pop
cmpl
les
add
in
or
or
mov
dec
or
add
popa
add
cmp
int
decb
stos
cs
fidivl
cmp
fistpl
pop
ljmp
cmpb
sub
mov
cmp
push
cmp
adc
insl
xor
into
stos
sub
dec
gs
dec
pop
add
pushf
cmp
jno
out
cli
dec
mov
cwtl
mov
lock
inc
push
stc
xor
fwait
adc
add
pop
jmp
popa
nop
mov
cmp
cltd
sbb
and
out
lret
fcmovnbe
pop
push
sub
or
inc
pop
or
pusha
stos
mov
test
rcrb
pushf
outsl
outsb
sbb
pop
cld
sub
sub
out
and
shlb
stc
inc
and
push
fiadds
pusha
inc
call
mov
out
std
fsubrl
jecxz
cmpsb
push
inc
mov
dec
fdivl
incb
gs
or
and
push
sub
push
dec
dec
jbe
or
pop
inc
and
pop
inc
adc
inc
je
inc
and
out
sbb
pusha
sti
sarl
xchg
inc
cmp
cmpsl
dec
cs
cmp
xchg
js
jp
cmp
pop
cmpsb
aad
cmp
ficomps
dec
rcr
push
mov
ljmp
scas
dec
inc
lods
inc
mov
verw
inc
cmp
outsb
mov
scas
out
ficoml
cmp
jg
mov
int3
push
movsb
fidivrs
jmp
mov
cmp
aam
adc
fiaddl
inc
dec
ljmp
ja
aam
xchg
lds
jmp
add
popf
xlat
in
pop
jns
push
or
repnz
sti
jmp
arpl
scas
cs
stos
or
imul
xchg
insb
xchg
int
push
hlt
lds
dec
add
and
pushf
mov
cmp
adc
xchg
aaa
pop
push
cmp
loope
xchg
repz
call
aam
leave
mov
fnsave
and
nop
lods
pop
dec
jno
cmp
dec
mov
into
xchg
push
enter
push
xchg
cmp
test
repnz
inc
es
sbb
add
loope
in
jno
stos
mov
stos
sub
xchg
int3
arpl
mov
lods
pop
hlt
test
jno
sbb
repz
gs
lods
mov
mov
push
push
or
cmc
lss
imul
hlt
les
mov
mov
mov
das
test
and
inc
mov
mov
pop
int
pop
push
test
inc
rorb
rcl
or
push
cmp
test
xchg
dec
into
inc
cmc
mov
inc
jge
mov
stos
add
sahf
in
mov
dec
sub
push
shl
dec
pop
fcmovne
dec
sbb
push
adc
mov
mov
sbb
push
push
push
sub
fwait
xchg
fs
inc
ret
push
jnp
adc
arpl
cltd
iret
cmpsl
fs
push
xor
mov
loop
xchg
xor
leave
out
sarl
js
lea
cmp
dec
ds
mov
sbb
cs
or
orb
inc
lret
inc
stc
mov
movsl
fsubl
jne
lret
subb
mov
ljmp
sbb
jne
adc
pop
in
out
sbb
mov
xchg
inc
rcl
mov
inc
sub
fimuls
mov
mov
orb
fisubs
mov
bnd
mov
subb
pop
stc
test
outsl
fsubs
insb
and
pop
mov
dec
dec
inc
scas
scas
mov
hlt
sub
cwtl
sbb
iret
or
sub
fildll
ja
mov
adc
daa
add
pop
sti
jg
mov
pop
jno
xchg
neg
xchg
mov
test
stc
lock
enter
scas
sub
pop
and
loopne
push
out
imul
cmpsb
imull
sbb
dec
cmpsb
loopne
fbstp
stos
lret
mov
lods
jo
scas
xlat
xor
xor
outsb
or
or
xor
adc
sbb
jae
in
mov
nop
hlt
cmp
mov
sahf
int
lods
mov
fadds
ret
inc
mov
ja
scas
pop
sub
lods
dec
push
sub
pushf
or
pop
ds
mov
sbb
jns
adc
test
incl
mov
mov
test
fists
add
pop
mov
push
clc
mov
sbbl
mov
mov
int
ds
sahf
xchg
das
scas
push
dec
sarb
adc
in
mov
sub
mov
inc
cmp
xor
data16
leave
mov
div
mov
jg
xchg
pop
jge
out
xor
dec
mov
aas
xor
cmp
aam
adc
in
push
insw
imul
sub
fldz
fnsave
pop
inc
scas
mov
fists
cmp
push
xchg
jb
jne
push
mov
pop
int3
pop
push
adcl
xchg
fcoms
mov
outsl
ss
fnstcw
xchg
ss
shrl
lods
jmp
push
stos
jno
inc
add
xchg
add
push
sbb
pop
mov
repz
push
or
mov
add
insl
xor
add
loopne
cli
int
mov
in
adc
stos
jns
test
lea
mov
sub
subb
std
into
or
jo
inc
adc
xor
popa
pop
jmp
mov
mov
add
or
xchg
xchg
inc
notl
daa
sub
mov
xor
adc
mov
xchg
outsl
pop
sub
mov
data16
mov
loopne
dec
add
cs
cmp
inc
repz
repnz
mov
and
sahf
sub
adc
jmp
movsb
cld
sub
data16
mov
mov
xor
lcall
add
sub
xor
mov
push
popf
cmp
jmp
xor
mov
pop
scas
ret
sub
aas
rcll
mov
xorb
pop
pushf
jge
sub
ds
mov
mov
xor
stos
mov
adc
inc
mov
loop
andps
sbb
mov
mov
push
and
sbb
repz
stc
sahf
test
jae
sbb
cmp
and
ja
mov
xchg
mov
cmpsl
jmp
mov
inc
mov
aas
into
imul
sbb
out
daa
cmovp
mov
pop
add
mov
fisttpll
xchg
clc
mov
dec
lea
iret
sahf
in
cmp
inc
push
push
aam
pop
cmpsb
test
lods
and
ljmp
and
pop
xchg
dec
iret
aas
jge
jb
mov
mov
inc
bound
roll
xchg
lds
movsb
je
mov
in
lds
loope
nop
or
mov
mov
imul
cmc
add
test
out
push
pop
lods
dec
dec
mov
mov
aam
repz
xor
cmpsl
ss
mov
xchg
lds
aam
das
push
push
lock
aad
test
mov
dec
add
push
sub
cwtl
outsb
xchg
ljmp
adc
dec
fistl
out
aas
imulb
mov
sub
mov
sub
test
xchg
je
mov
and
mov
aam
add
mov
out
add
mov
cmpsl
or
movsl
add
sti
push
xchg
divb
push
mov
jl
adc
loope
shlb
pushf
inc
cs
mov
adcb
jns
and
adc
dec
test
jbe
add
mov
adc
mov
jl
jne
xor
push
mov
or
inc
push
call
shl
xor
out
cmp
sub
inc
dec
repz
push
neg
and
mov
in
ds
stos
pusha
mov
pop
adc
movsl
adc
xchg
loopne
sti
stos
and
inc
test
rcrb
jae,pn
jo
cltd
imull
and
dec
mov
push
mov
jb
jmp
push
sub
repnz
mov
scas
scas
imul
adc
cmpb
jmp
push
sub
pop
aas
cli
rep
orl
jnp
mov
adc
dec
lock
enter
jge
push
js
loope
pop
jg
loope
scas
adc
jp
cmpl
fisttpl
in
mov
jnp,pn
mov
sbb
mov
pop
xor
and
jge
sub
mov
fiadds
sbb
cmp
push
sbb
ss
cmp
lock
loop
stos
mov
add
inc
insb
xchg
fnsave
jl
enter
icebp
xlat
pop
cmp
push
mov
aam
call
cmp
push
fimull
mov
and
mov
mov
aas
fs
aam
xchg
repnz
adc
popf
das
push
jmp
or
insb
fsubp
jl
add
cmp
seto
aaa
mov
dec
test
negb
fmul
testl
mov
inc
cld
mov
push
inc
pop
popf
xchg
pop
fcomip
adc
jo
lahf
mov
out
mov
and
push
sbb
sub
sub
mov
sarl
and
arpl
pusha
fs
xor
mov
scas
mov
psubsb
stos
xchg
aaa
sub
mov
loopne
stos
inc
subl
je
cld
pop
je
inc
gs
mov
add
xchg
inc
repz
mov
mov
add
adc
scas
cmp
pop
scas
hlt
mov
jg
cmc
in
fstpt
pusha
mov
xor
jg
push
pop
ud2
sub
add
xlat
add
movsb
inc
xor
dec
push
das
inc
jne
add
jnp
rorl
daa
sar
inc
add
mov
xchg
or
lods
jmp
sbb
mov
mov
cmovg
cmp
clc
sbb
add
dec
push
adc
mov
or
xor
cwtl
adc
push
hlt
ret
jl
cmpsb
js
fwait
test
sbb
mov
lods
cmp
fldt
fsubrs
sti
mov
jg
test
mov
jecxz
popa
pop
jecxz
popa
push
jecxz
popa
or
stos
popa
sbb
mov
popa
cmp
jecxz
popa
fsub
sti
shll
or
clc
xchg
sbb
mov
add
test
dec
ljmp
imul
outsb
jnp
push
outsb
fwait
ljmp
mov
ljmp
jmp
fsubrs
dec
jmp
or
lret
sub
cwtl
cs
ljmp
pop
ljmp
jnp
push
outsb
fwait
ljmp
mov
ljmp
jmp
fsubrs
dec
jmp
or
lret
sub
cwtl
push
cmp
test
dec
int
mov
dec
imul
jnp
push
fwait
int
stos
int
mov
int
fcmovne
enter
fmuls
or
mov
xor
test
dec
jne
pop
jne
xlat
imul
jnp
push
xlat
fwait
jne
xlat
stos
jne
xlat
mov
jne
xlat
xlat
jmp
fcom
sti
jae
inc
out
std
repz
mov
subb
stos
nop
sub
inc
lods
mov
push
lods
inc
das
arpl
pusha
das
subl
das
mov
lods
and
ret
lods
xor
shrl
shrb
rep
loopne
add
cmpb
frstor
mov
arpl
pusha
mov
xchg
sbb
adc
ret
sbb
sarb
sbb
lock
andb
jno
mov
loopne
add
mov
sbb
nop
lods
cmp
subb
loopne,pt
imul
lods
jnp
shrb
and
mov
jo,pt
fstpt
pusha
lods
jmp
push
movsl
sti
push
pop
in
pop
and
aaa
cmp
shrb
rcr
add
mov
sub
mov
daa
xchg
scas
call
xchg
iret
xchg
adc
and
int3
subb
sbb
jne
mov
mov
cld
dec
mov
dec
incb
push
icebp
out
xchg
sub
stos
mov
dec
scas
pusha
ds
mov
mov
xor
jp
cmpsb
sub
fsubl
daa
into
mov
aaa
je
js
mov
jne
xlat
ljmp
sub
pop
roll
mov
and
stc
std
push
clc
incb
sbb
fs
das
aam
push
xor
adc
out
mov
and
cmpsb
inc
sub
cmp
rcll
mov
adc
lret
repnz
dec
pop
mov
mov
ss
ljmp
mov
pop
fnop
cmpsb
pop
xchg
jae
data16
sbb
and
mov
out
lea
dec
std
cmp
shlb
jle
cmp
mov
mov
gs
mov
lods
lods
scas
push
lods
jmp
aaa
mov
mov
pop
push
cld
or
jns
fisttpll
xchg
sahf
and
call
xor
xchg
js
fcoml
xchg
iret
insb
jmp
sbb
scas
loopne
cmp
jmp
loopnew
add
or
bound
jge
outsb
test
jge
outsb
in
adc
add
loopne
sub
bound
jnp
mov
mov
jo
cld
aaa
mov
shlb
fsubs
sti
inc
out
imul
aam
jmp
repz
movsb
es
jno
jecxz
popa
loop
leave
movsb
cmp
jmp
mov
mov
jmp
dec
xor
std
into
dec
arpl
cmp
sbb
aam
nop
loop
fxch
bnd
call
sbb
mov
pop
pop
push
sarl
fs
sub
or
sub
cmpsb
xchg
sub
inc
sub
popf
jle
lcall
scas
pop
pushf
xchg
push
xchg
loop
mov
out
lret
cmc
cmp
cltd
ret
inc
loopne
rcll
cmc
mov
je
mov
leave
outsl
lods
cmp
loopne
xchg
es
fdivrs
and
lret
or
dec
mov
popfw
mov
or
out
fidivrl
dec
movsb
pop
mov
orb
jge
xor
orl
sbb
dec
ret
test
subb
mov
dec
adc
outsl
jno
jecxz
popa
adc
mov
popa
lret
iret
faddl
cmp
ret
xor
lock
js
int3
jecxz
and
or
mov
outsb
dec
or
push
cmp
repz
jl
cs
mov
fiadds
nop
fdivr
stos
pop
repnz
call
mov
mov
shrl
xor
loope
push
into
adc
mov
ss
jp
leave
mov
push
jns
fidivrs
mov
adc
cmp
idivb
mov
push
mov
aad
mov
add
shl
ja
or
in
shll
rcrl
lea
jno
pop
sbb
fs
jns
gs
js
mov
or
sbb
mov
negl
dec
sbb
push
cmp
scas
mov
xor
add
das
mov
sbb
jmp
int3
push
add
xlat
shlb
aad
out
popf
and
inc
rcrl
fs
in
sti
sub
sarb
mov
jbe
pushf
jne
cmpsb
pushl
mulb
enter
loop
mov
je
fisttpl
in
fs
sahf
push
loopne
inc
jo
fdivrs
or
mov
and
lods
aam
jl
jmp
fwait
cmpsl
jp
sub
cmpsl
or
sub
and
shr
push
cmpsb
cmp
push
movsb
daa
push
cmpsb
nop
adc
sub
sub
test
add
mov
push
cmpsl
scas
sbb
lea
sub
and
sbbl
notl
push
or
lret
fdivrp
add
dec
fwait
addl
insl
lret
jbe
and
jne
xorb
mov
fcompl
sub
pusha
jno
push
cmp
mov
mov
jne
rorl
lods
and
subb
popf
or
or
sbb
pop
imul
xchg
mov
adc
movsb
or
scas
rcll
push
fucomp
sub
and
jo
sub
mov
fisttpl
xchg
imul
jecxz
aam
cltd
pop
mov
pop
sub
lods
in
sbb
sub
inc
scas
adc
into
jmp
jns
cmp
test
outsl
in
xor
xor
js
jne
in
fdivrl
lea
ja
mov
mov
fucomp
push
dec
inc
pusha
int
ja
movsb
jne
mov
cs
in
mov
rclb
insl
dec
sub
or
pushf
cmovbe
jmp
ret
push
mov
ds
pop
cmp
cmp
push
pop
insl
sub
std
pop
sbb
xlat
mov
lods
mov
lcall
lods
jbe
jo
testb
push
xor
cld
orl
fldenv
std
xor
cmp
push
mov
xor
mov
imul
xchg
jne
xlat
fwait
jne
xlat
movsl
jne
xlat
scas
jo
ret
cmp
ljmp
outsb
xlat
jge
mov
push
outsb
loop
or
xlat
std
xor
mov
sbb
mov
jecxz
clc
scas
nop
xor
subl
push
dec
pop
xlat
jb
fs
mov
mov
jmp
lahf
addr16
jmp
mov
mov
mov
out
aad
out
aad
out
aad
out
aad
jecxz
or
or
xlat
adc
fistps
mov
es
cmpsb
jmp
push
mov
loopne
mov
jmp
insb
addr16
jmp
cltd
mov
jge
outsb
test
outsb
dec
xor
inc
sti
and
test
sub
mov
pop
and
sti
or
sar
ja
bound
dec
push
int
jae
jge
ja
mov
push
enter
movsl
andb
hlt
or
orl
and
cmc
ja,pt
xor
push
push
es
xchg
sbb
push
pop
mov
push
or
ljmp
ret
test
sbb
loop
fld
repnz
std
into
in
sbb
jns
pusha
bound
outsb
mov
mov
sub
iret
or
call
repnz
clc
cli
cwtl
flds
lods
fisubl
mov
dec
xchg
mov
dec
mov
pop
testl
add
mov
popl
xchg
outsb
repz
add
sub
inc
pushf
loope
scas
popf
sbb
outsb
add
nop
push
cmp
mov
add
cmpsl
xor
int3
test
mov
sub
xchg
jecxz
out
stos
and
sbb
inc
jge
mov
icebp
jo
lret
mov
xchg
adc
cmpsl
or
cltd
cmpsl
cltd
jecxz
mov
lea
es
fiaddl
push
in
add
mov
popf
movaps
into
jl
and
jne
subb
xchg
cmovle
push
mov
and
jmp
mov
mov
data16
jne
sahf
pushf
mull
mov
outsb
mov
ljmp
adc
leave
dec
out
out
push
int3
mov
negb
and
mov
aam
je
mov
add
xchg
xor
and
lret
add
mov
pop
out
adc
dec
pop
xor
fucomp
xchg
mov
add
cmp
icebp
and
mov
sub
mov
mov
adc
xlat
push
sbbb
jl
adc
ja
xor
xchg
es
test
pop
ret
push
adc
loopne
xchg
in
push
movsb
dec
jle
mov
sub
ret
ja
loop
test
sub
jge
jl
fs
jge
stos
scas
je
adc
in
test
cmc
push
popf
adc
popf
xchg
inc
cmc
adc
xor
cmpb
inc
add
mov
xor
mov
pop
stos
pusha
adc
push
push
push
jecxz
repnz
mov
xor
cmc
mov
inc
pushf
movsl
mov
dec
pop
inc
addr16
mov
pusha
aas
mov
sub
mov
sub
in
mov
test
pop
xchg
lods
inc
loope
add
sbb
in
stc
xchg
cmpsb
ret
xchg
mov
popf
xchg
ret
inc
loopne
sarl
push
jo
lea
lsl
xchg
ss
push
push
push
cmpsl
out
or
jno
mov
pushl
popa
xchg
int
mov
adc
lea
nop
js
repnz
loopne
or
mov
repnz
cmp
and
mov
push
mov
pop
sbbl
stc
or
xor
rclb
cmpsb
adc
mov
xor
jge
into
ja
bnd
adc
pop
pop
cmp
dec
cmc
mov
ljmp
jne
push
jg
rolb
sub
jne
sti
shrd
push
pop
mov
xor
js
xor
mov
lahf
loop
push
es
pop
pop
call
fwait
fwait
out
test
call
xor
dec
push
mov
xor
or
pop
rclb
jp
dec
paddw
sbb
push
das
pop
mov
ja
outsb
cltd
ss
fmull
inc
in
cmp
cld
cmp
lret
inc
sarb
clc
mov
sub
mov
sub
sub
mov
sub
popa
stc
nop
test
rcrb
mov
jge
stc
cli
cmp
adc
imul
xor
mov
or
cmpsb
xchg
push
mov
xor
stos
pushf
inc
xor
jle
fs
enter
emms
jmp
pop
mov
xchg
lock
mov
add
popa
jnp
mov
dec
les
lcall
jge
add
or
or
jno
loopne
mov
or
subl
xlat
push
xor
out
adc
enter
clc
aaa
mov
test
pop
stos
pop
ja,pn
outsl
das
pushf
mov
or
xchg
push
faddl
cmpb
inc
or
daa
jmp
std
or
push
lcall
pop
popf
pusha
jg
pop
jp
das
sbb
mov
dec
dec
inc
popl
xlat
jo
sub
adc
cmp
pop
cmpb
lds
jle
dec
addl
test
cmp
je
js
pop
sar
sbb
lahf
inc
dec
loop
dec
xorb
aam
cmpsl
fwait
imulb
dec
push
pop
mov
dec
nop
pop
fsubrp
fs
bound
adc
ret
sub
mov
adc
jno
dec
push
rolb
xor
lret
rorb
ret
shlb
cli
sbb
int3
or
xor
mov
push
mov
fldt
scas
outsl
clc
fsub
movsl
and
stos
cmp
or
test
fldt
shll
lea
cwtl
cwtl
jmp
stos
test
pop
xchg
rcll
and
cmpsb
add
ret
test
lods
in
decb
lods
cmpsl
cmp
push
push
sub
ret
out
cmp
fdivrl
scas
sti
pop
sbb
cmp
xlat
clc
pandn
es
stc
cltd
mov
call
cmpl
cli
cmp
into
test
test
orb
cmpsb
ja
and
repnz
ds
cli
adc
and
push
sbb
lcall
jmp
jne
loopne
aad
xchg
push
movsb
sub
mov
repz
mov
sahf
jg
cmp
xchg
aad
mov
sbb
sbb
and
int3
and
mov
push
aas
js
xor
pop
jmp
xor
xchg
cmp
or
and
ret
push
mov
jecxz
outsw
ja
bound
push
outsb
leave
mov
adc
in
push
xchg
push
jno
pop
stc
movsb
push
sbb
dec
push
mov
adc
mov
inc
xor
jg
ret
int
mov
clc
add
cwtl
mov
sbb
jge
into
pop
cmp
in
insl
sub
xor
adc
cmp
pop
mov
fistpl
push
adc
sar
adc
push
cmp
out
push
pop
inc
mov
cld
js
insb
in
mov
in
xchg
push
sbb
int
lock
out
pusha
aaa
inc
leave
movntq
fdivrs
negl
mov
dec
loop,pt
mov
loopne
aad
in
pcmpeqd
fsubp
cmc
aaa
icebp
std
test
xor
pusha
sahf
jge
outsb
fistpll
adcb
mov
jg
insl
push
ficoms
mov
mov
jbe
fnstcw
mov
pop
mov
push
or
inc
mov
cmp
fmull
test
xor
pop
lret
xchg
push
mov
mov
jns
repz
loop
xchg
add
xchg
addb
rclb
jp
sbb
or
sbb
insb
mov
ljmp
sub
lock
sub
orb
pop
subb
enter
sbb
rorl
xor
movsb
xchg
sub
push
loopne,pt
fs
sub
cmp
repz
mov
shlb
mov
mov
sub
sub
add
cltd
sub
sub
in
and
sub
xor
cmpsb
mov
movsb
ret
xor
cmpsb
pusha
orb
sahf
rcrl
fsubl
mov
insl
cmp
nop
insl
jo
ja
std
lret
pushf
addl
jg
inc
and
adc
and
test
mov
mov
pop
or
xchg
test
fnsetpm(287
lret
dec
ret
lds
mov
pop
lds
sbb
jp
orb
or
dec
lahf
lea
inc
mov
lds
cmp
repnz
fxch
icebp
jns
push
sbb
add
push
mov
mov
daa
inc
cmp
dec
popf
outsl
mov
mov
push
adc
femms
sbbl
mov
add
xlat
add
mov
mov
out
icebp
pop
push
stos
ss
mov
xchg
mov
lea
fldcw
cmp
and
leave
lcall
jg
lods
push
cltd
fidivrs
push
mov
dec
cmp
stos
fst
rcrb
fistpl
and
leave
cmpsl
cmp
add
int
mov
xchg
sub
stos
mov
das
bound
iret
das
hlt
pop
icebp
es
out
xlat
leave
fs
or
mov
sub
mov
mov
int
xorb
cmp
cmpsl
inc
mov
cmpsb
xchg
mov
inc
test
adc
sub
ds
test
jmp
add
aad
dec
repz
xor
adc
jecxz
jle
fld
push
jecxz
clc
jno
stos
or
xchg
and
xor
push
push
mov
ja
outsb
orb
pop
scas
jle
inc
lahf
dec
iret
in
and
iret
fisttpl
in
mov
aas
cs
inc
aas
lock
mov
ss
dec
sbb
xor
jle
inc
adc
nop
nop
movsb
mov
insb
jge
outsb
xchg
jge
outsb
scas
jge
outsb
xlat
dec
bound
fimuls
pop
cmp
icebp
and
jns
pop
insl
cltd
cmp
mov
fdivrs
and
idivl
fcomps
insb
in
xchg
xchg
aam
insl
outsl
jnp
dec
dec
sbb
stos
mov
jp
sbb
mov
subb
sbb
hlt
aaa
movsl
icebp
push
adc
xor
es
xchg
loope
aam
out
fs
sub
pop
xorb
mov
insb
in
pushfw
in
push
call
lock
fmull
inc
pop
popf
not
cmp
mov
jl
idivl
xchg
inc
adc
outsb
mov
into
call
cld
dec
testb
sbb
xchg
dec
inc
sub
cmp
lea
cltd
jno
movsb
mov
subb
outsl
test
cmpsb
fsubl
adc
pop
and
mov
cmp
stos
add
dec
xchg
int3
loopne
pushf
outsl
pop
inc
xor
ret
arpl
rorl
shlb
mov
adc
addl
fdivr
loop
jl
xchg
fbstp
clc
cli
cmc
and
mov
aaa
xor
mov
inc
mov
outsb
lea
cld
xchg
push
or
xchg
push
jbe
sbb
fcompp
xchg
lea
enter
pop
fs
push
arpl
push
cwtl
adc
push
cmpsl
cmpl
cmp
popf
arpl
outsl
pop
cmp
loop
fdiv
cmp
hlt
xchg
lcall
inc
cmp
jmp
adc
pop
inc
leave
pusha
cvtdq2ps
or
lods
push
mov
out
xlat
lods
out
in
cmp
cs
jo
fsubr
lret
repz
fwait
mov
jg
dec
popf
popa
int
ret
mov
add
cmpsb
repz
movl
add
int3
mov
es
cmpsl
or
lcall
popl
fiadds
mov
xor
adc
aad
inc
test
push
in
push
pop
xchg
scas
insl
flds
test
jns
rol
add
ret
scas
inc
pop
jb
cmp
adc
push
aam
cmp
or
dec
aaa
out
xor
loopne
push
xor
mov
pop
fsts
inc
nop
sub
and
add
push
pushf
fldt
std
mov
adc
fcompl
aad
cs
push
lret
or
mov
pop
js
arpl
ja
dec
int3
mov
popf
pop
leave
hlt
xor
xor
xor
loop,pn
fildl
testb
sub
shll
mov
mov
jne
in
jo
rcll
out
dec
std
imul
loopne
lahf
cmpb
lea
mov
in
fs
cmp
andb
pusha
xchg
mov
leave
outsl
nop
and
mov
sti
sarb
test
pop
inc
imul
push
xchg
add
and
dec
sbb
data16
mov
pusha
dec
scas
pop
enter
ds
mov
xchg
das
popf
into
ja
mov
adc
dec
inc
hlt
pop
and
cmpsl
fstpt
xor
sub
sarl
mov
sarl
mov
es
cld
cmpsl
mov
loopne
outsb
pop
jns
loopne
push
roll
stos
lahf
repz
mov
in
addr16
dec
lcall
xchg
pop
or
cmp
mov
mov
inc
push
mov
cmc
test
push
cmp
fs
rolb
decb
ja
subl
mov
xor
mov
test
xor
sub
fcom
int
xchg
or
mov
jg
sbb
js
movsl
ljmp
icebp
adc
into
rorl
aam
je
in
pop
sbb
enter
push
jbe
xabort
test
out
aad
out
aad
out
xlat
fbld
push
in
xchg
push
sbb
adc
pusha
out
fsub
notl
data16
movl
sbb
mov
push
ss
and
movsb
cs
xchg
xor
aam
mov
and
mov
xchg
orl
ja
test
clc
sbb
shlb
jae
fdivrs
cmp
jne
outsl
and
lcall
aas
mov
fadds
and
mov
imul
int3
int
loop
push
xor
and
data16
ret
or
pop
push
leave
in
pop
inc
mov
pushf
aaa
dec
scas
dec
push
dec
sahf
arpl
and
pusha
mov
sub
cwtl
adc
dec
jae
loop
jns
ror
rorb
fdivrp
xchg
mov
stos
inc
jle
xchg
push
rcrb
mov
add
lods
insb
in
test
popf
adc
push
push
pop
push
and
dec
dec
ffreep
xchg
loopne
pop
mov
xor
stos
mov
dec
mov
sub
js
sbb
in
insb
xchg
jle
and
ds
stos
inc
inc
fwait
repnz
clc
lods
mov
dec
push
loopew
hlt
sbb
add
fwait
in
stos
int3
and
dec
cmp
cmp
ret
push
shlb
test
pusha
outsb
or
mov
xchg
dec
mov
leave
or
pop
arpl
ret
cwtl
bound
ljmp
push
pusha
and
rcr
in
test
xchg
iret
cmp
mov
lret
out
shrl
jle
loope
sahf
mov
lds
in
fnstenv
popa
dec
pop
popf
test
adc
push
ljmp
jbe
inc
mov
cli
bound
and
inc
daa
scas
sbb
bswap
rcrl
aad
js
outsb
mov
or
aam
xchg
lret
ret
jmp
inc
and
sbb
sbb
int3
in
push
mov
outsl
jns
xor
adc
xchg
test
movsb
jo
sub
ljmp
fmuls
sbb
popa
or
aaa
mov
inc
mov
mov
mov
iret
or
mov
push
cmpsl
imul
into
testl
mov
int
mov
pop
in
xor
jl
mov
jmp
shll
lcall
icebp
js
out
out
xchg
pop
inc
add
pop
test
nop
mov
sbb
push
insl
inc
lret
dec
mov
sbb
cmp
nop
inc
cmp
outsl
int
dec
jmp
mov
out
xorl
scas
pop
jecxz
jnp
adc
lods
jp
jmp
jnp
cmp
xchg
pop
push
leave
in
rdtsc
jne
push
lods
int3
cmp
xlat
cmpsb
addr16
es
push
pusha
mov
mov
addb
xchg
jle
pop
es
jb
cmpb
popa
xor
fldcw
ds
das
inc
sbb
faddp
testb
cmp
ret
cs
or
jns
xor
pop
xchg
loop
push
adc
push
add
mov
fcomi
inc
sbb
jmp
ja
test
xor
insl
int3
or
arpl
lea
xchg
add
push
push
xchg
dec
dec
ret
aaa
lods
stc
sub
pop
decl
mov
mov
adc
dec
dec
pop
rorb
xchg
or
cmpsb
scas
pop
movsl
div
add
ljmp
jno
push
repz
and
sbb
loop
jp
data16
jo
stos
sbb
push
out
xor
cmpsb
xchg
jb
xchg
lds
shl
mov
daa
adc
inc
fisubrs
jmp
mov
xlat
repnz
jne
jle
iret
rcl
mov
mov
into
mov
out
sbb
jne
inc
and
sub
push
sbb
out
xchg
ret
and
cmp
ss
shrl
mov
enter
negl
loope
fisubl
push
add
add
add
inc
aad
and
inc
push
lock
xor
dec
andb
out
pop
jo
jae
xor
out
push
xor
out
je
gs
popf
pushf
repz
xor
scas
push
mov
lock
xor
jmp
push
cld
mov
and
int3
test
sub
fs
ficoms
loopne
out
std
mov
dec
xor
xor
clc
mov
xor
js
and
gs
xor
out
fsubr
test
outsl
pushl
gs
mov
fsubrp
incb
xchg
lock
mov
jp
clc
inc
xor
dec
stos
lcall
xor
add
mov
xor
pop
mov
jecxz
xor
out
inc
xor
out
incb
xor
jb
mov
xor
out
std
mov
fdivl
rolb
or
jae
xor
scas
test
fisubrl
xor
std
mov
fsubrp
incb
xchg
lock
mov
jnp
mov
out
decb
sbb
sub
repz
out
iret
stos
xchg
fsubrp
sarl
enter
out
fsubr
filds
push
fidivs
dec
add
test
icebp
insb
jnp
pop
dec
sbb
filds
mov
ret
hlt
fbstp
test
out
push
mov
jae
or
mov
xabort
mov
inc
inc
testl
ret
popf
xchg
repz
xor
sti
test
mov
shll
mov
repz
fsubl
sar
mov
fldt
or
fiaddl
iret
ret
mov
fsubrp
gs
mov
and
pop
mov
mov
ljmp
out
push
mov
jae
or
mov
xor
js
xor
xlat
leave
xor
out
xchg
inc
jae
or
push
in
popf
cwtl
repz
xor
cmp
out
mov
mov
je
fildl
pop
jo
dec
mov
inc
jae
or
out
dec
xor
popf
cwtl
repz
xor
scas
jae
inc
jae
or
out
mov
mov
je
fildl
pop
jo
sbb
xor
and
out
dec
xor
popf
cwtl
repz
xor
scas
push
mov
out
xor
dec
or
out
mov
fucomi
and
pop
push
mov
test
js
scas
pop
push
mov
fsubrp
jnp
out
xor
xchg
je
andb
out
mov
xchg
mov
pop
dec
jno
in
out
mov
dec
popw
xchg
mov
fbld
push
in
mov
stos
rorl
ret
push
fucomip
jnp
out
xor
jecxz
mov
fidivrs
and
inc
out
mov
popa
jnp
fiadds
sbb
xor
inc
or
mov
xor
jae
mov
jmp
mov
lret
insb
xor
out
jno
lods
mov
mov
ja
xor
xor
out
xor
scas
jb
push
das
test
xor
out
daa
pop
push
add
repnz
and
outsb
cmp
nop
enter
fs
pushl
fldt
mov
out
jno
pop
in
add
shlb
push
repnz
repz
jge
inc
mov
movsl
mov
insb
js
lea
or
xor
enter
xor
add
sub
out
xor
in
adc
mov
sbb
pop
aaa
fs
popf
push
arpl
xchg
lods
xchg
mov
fiaddl
mov
popf
pop
imul
fs
data16
popa
lock
stos
insb
fs
inc
jno
outsb
push
bound
inc
addr16
arpl
fs
jno
popa
pop
xor
test
imul
xor
out
xor
out
xor
out
xor
out
xor
mov
int3
add
add
incl
add
add
add
add
add
and
add
pop
add
addb
add
add
add
mov
add
mov
add
add
add
add
add
addb
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
pusha
add
call
add
add
add
add
add
test
add
lock
add
add
add
add
add
add
test
add
and
add
test
add
enter
dec
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
inc
add
dec
test
add
test
add
add
add
add
xchg
ja
or
add
add
ja
ja
inc
js
add
add
add
or
ja
add
js
inc
add
add
add
add
ja
mov
add
dec
js
or
push
add
add
add
ja
add
push
add
divl
inc
add
add
je
jg
jo
push
ja
inc
add
inc
dec
ja
add
divl
inc
add
xchg
lock
push
ja
dec
add
xchg
incl
or
divl
add
xorb
addb
add
push
ja
add
addb
add
push
js
inc
add
jg
jo
add
add
js
add
addb
add
pushl
add
pop
ja
pushl
add
add
pushl
add
xchg
jg
jo
add
add
push
ja
add
add
ja
lock
pop
jo
xchg
mov
add
xor
lock
add
incl
ja
xor
add
jo
ja
add
add
add
add
xor
lock
aas
addb
ja
add
add
add
ja
add
add
add
cmp
add
add
ja
ja
add
add
sbb
add
add
ja
js
add
add
add
add
pop
js
add
ja
or
aaa
aaa
js
add
cmp
jae
xor
inc
add
incl
add
incb
add
cld
add
pop
clc
add
add
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
incl
add
addb
push
pop
ljmp
add
add
add
add
add
add
or
add
add
addb
add
add
add
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
add
adc
push
adc
add
pop
pop
add
sbb
adc
pop
and
sbb
and
sbb
sub
and
sub
and
add
sub
sub
add
and
and
daa
sbb
add
adc
add
verw
or
add
pop
pop
add
or
pusha
adc
add
pop
add
add
sbb
and
cmpsl
daa
sub
scas
sub
add
xor
mov
aaa
add
cmp
add
inc
inc
add
inc
dec
add
dec
dec
add
push
push
add
push
pop
add
pop
pop
add
pop
bound
xlat
gs
add
insl
outsl
add
jo
add
jae
add
je
add
je
add
jno
add
imul
imul
mov
add
push
push
add
dec
add
inc
add
inc
add
add
add
add
cmp
cmp
add
cmp
xor
add
dec
add
push
push
add
push
push
add
pop
add
data16
push
jo
dec
jb
add
jp
pop
jnp
add
addl
imul
popl
dec
xchg
add
xchg
cltd
add
cwtl
sahf
add
pushf
mov
add
scas
add
stos
mov
inc
lods
mov
inc
mov
add
mov
add
ret
add
add
lret
int
popa
lret
arpl
rolb
gs
aam
imul
add
xlat
add
xlat
add
fadds
jl
fadds
adc
aad
mov
iret
add
mov
mov
add
test
movsb
cmpsb
cmpsb
add
mov
sahf
add
cwtl
cwtl
add
xchg
xchg
add
xchg
xchg
add
xchg
xchg
add
nop
xchg
add
nop
xchg
add
xchg
xchg
add
xchg
xchg
add
xchg
xchg
add
xchg
cltd
add
cwtl
lcall
fwait
pushf
add
pushf
sahf
add
sahf
mov
add
mov
cmpsl
add
test
lods
add
lods
scas
add
scas
mov
call
mov
add
mov
add
mov
add
mov
mov
add
rol
faddp
ret
add
lds
fcmovb
movl
lret
lret
int
jecxz
into
add
iret
roll
jmp
roll
out
rcl
add
flds
hlt
fcmovu
add
add
fstp
add
fnstsw
add
add
fnstsw
add
add
add
fstp
add
add
add
fcmovnu
add
fcmovu
add
add
fcmovu
add
fcmovnu
add
fucom
add
loope
add
in
add
jmp
out
add
in
lock
out
icebp
add
out
icebp
add
out
lock
in
out
add
in
in
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
out
add
out
lock
lock
add
repnz
repz
cmc
cmc
add
div
add
clc
clc
add
stc
cli
add
cli
sti
add
cld
cld
add
std
std
add
std
incb
std
incb
incb
incl
std
incb
packuswb
or
aaa
xor
xor
packuswb
aaa
cmp
dec
inc
aas
inc
inc
cmp
invd
add
dec
dec
dec
inc
dec
push
push
dec
inc
inc
cmp
or
invd
cmp
push
movsl
cmpsl
cmpsl
lods
mov
mov
or
pop
push
dec
inc
aaa
or
invd
cmp
stos
mov
mov
or
push
dec
inc
or
invd
cmp
add
mov
out
xor
lret
mov
inc
add
invd
aaa
aas
dec
or
push
pop
lret
mov
or
inc
cmp
packuswb
aas
dec
cmpsb
pop
or
or
int3
out
repz
data16
sahf
out
ret
test
dec
cmp
sysret
cmp
test
xor
or
icebp
div
cmc
divb
or
iret
out
leave
mov
add
sysret
inc
inc
push
mov
or
fwait
std
idiv
and
adc
out
int3
mov
inc
cmp
packuswb
aas
inc
dec
mov
ret
or
std
std
xor
or
mov
movsl
dec
inc
or
invd
insb
fwait
jne
aam
repz
and
std
data16
xor
std
imul
mov
mov
inc
dec
add
xchg
xchg
rcl
repz
adc
or
or
sar
stc
hlt
out
int3
mov
invd
pop
xchg
xchg
shr
icebp
std
insb
or
or
or
or
std
std
stc
clc
out
int3
mov
invd
pop
sahf
sahf
mov
je
or
or
or
cmc
in
leave
mov
inc
dec
cmp
invd
pop
jae
xchg
aam
sar
xchg
or
or
or
clc
repz
into
mov
invd
test
in
std
popf
or
or
idiv
std
std
cli
stc
imul
in
ljmp
invd
jp
nop
fsub
in
std
cltd
or
or
data16
std
std
cli
cli
clc
cmc
repz
rcll
outsl
pop
sbb
in
cmc
lds
or
or
vpaddw
clc
idiv
in
jmp
aad
sahf
lcall
pop
sbb
fnsetpm(287
jmp
or
sar
std
jne
aam
jne
popa
or
invd
outsl
pop
sbb
fsub
out
or
or
or
adc
jmp
xchg
jecxz
xchg
cmpb
packuswb
jecxz
out
or
or
sub
or
and
nop
mov
invd
jl
pop
nop
fsub
out
or
or
push
or
loop
lea
movlps
pop
xchg
or
or
adc
or
or
or
or
invd
and
in
sub
or
jbe
or
outsl
outsl
outsl
outsl
or
invd
sub
jg
nop
loop
or
or
loop
popl
invd
pop
jle
mov
or
nop
mov
invd
sub
mov
jle
mov
packuswb
sub
mov
outsb
imul
packuswb
or
or
or
ud0
inc
add
incl
add
incb
add
cld
add
pop
clc
add
add
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
incl
add
addb
push
pop
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
jo
add
insb
add
add
add
pop
add
add
add
add
add
mov
inc
or
pushl
and
and
incl
or
pop
pop
pop
incb
add
roll
add
xchg
add
sub
add
inc
add
add
jbe
or
fsts
movsl
sbb
sub
lret
inc
push
push
ljmp
daa
sub
xlat
push
push
jmp
incl
add
icebp
add
add
add
add
add
outsl
push
inc
inc
call
imul
loopne
nop
flds
popf
jmp
pushf
popf
fadds
add
add
add
fildll
inc
cmp
aas
push
ud0
add
mov
add
add
sbb
or
add
add
out
xchg
jmp
mov
mov
jmp
mov
sar
push
pop
incl
add
jmp
lahf
mov
call
imul
pop
incl
or
add
add
add
xor
add
mov
add
ljmp
adc
pushl
enter
mov
in
mov
push
rcl
sti
fdivr
and
push
cmp
sub
hlt
lret
faddl
popa
dec
fs
dec
dec
ljmp
add
incl
add
jbe
add
add
mov
cs
jmp
inc
incl
add
incl
add
pushl
in
push
cli
jmp
sar
add
add
add
add
jmp
call
fmull
popf
fdivs
mov
add
cmc
add
add
add
add
cs
aad
insb
jmp
mov
incl
add
incl
add
incl
add
cli
sti
std
idiv
std
idiv
jmp
add
add
lock
fstp
push
into
sar
ljmp
call
imul
sbb
xchg
add
add
add
add
add
xchg
enter
ret
jmp
lahf
mov
push
mov
add
add
add
cmc
out
icebp
push
sti
call
add
incl
push
idiv
stc
in
in
mov
ret
mov
push
dec
inc
inc
incl
add
aad
add
add
add
add
xchg
call
rcl
jmp
loope
push
lock
add
incl
add
incl
ljmp
cs
add
incl
add
push
div
std
cli
sti
cli
ljmp
icebp
leave
call
pop
pop
inc
inc
inc
lcall
add
add
add
add
add
gs
add
inc
fcmovu
ljmp
incl
inc
incl
add
incl
add
ljmp
imul
add
add
scas
scas
scas
std
std
std
cld
div
cli
call
fdivr
in
mov
xchg
incl
add
decl
incl
add
insb
add
add
addl
pushl
in
in
in
in
in
in
ljmp
add
incl
add
incl
add
incl
add
incl
add
dec
into
into
std
std
std
sti
sti
sti
push
in
push
fcmovnu
out
rol
flds
add
bound
pop
incl
add
jo
add
add
add
cltd
lahf
lahf
call
rcl
jmp
in
jmp
jmp
jmp
add
incl
add
incl
add
incl
add
lcall
pop
incl
add
push
div
jmp
jmp
call
mov
scas
addl
pop
cmp
incl
add
jo
add
add
cwtl
lahf
sar
jl
aam
mov
in
out
jmp
jmp
fdivr
add
add
add
add
add
add
jle
jle
std
std
std
cli
cli
cli
in
in
in
ljmp
pushl
stos
stos
pushl
add
data16
add
sbb
int3
decl
in
dec
lock
ljmp
incl
add
incl
add
incl
add
incl
add
incl
add
cld
cld
cld
clc
clc
clc
out
out
out
jmp
out
call
mov
movsb
movsb
call
pop
pop
cmc
add
add
add
add
decl
lcall
jmp
ljmp
add
incl
add
incl
add
incl
add
stc
stc
stc
push
div
cld
cld
sti
cli
stc
stc
call
rcl
fcmovnbe
xlat
fcmovnbe
xlat
dec
mov
xchg
mov
incl
add
mov
add
add
add
add
lahf
cmpsb
cmc
inc
stos
mov
xchg
fcmovu
pushl
fsubp
jmp
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
call
pop
in
cli
sti
decl
or
ljmp
out
decl
add
ljmp
xchg
lcall
add
add
lret
jge
aad
pushf
mov
clc
cli
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
pop
mov
loop
incl
add
jmp
sar
add
add
add
add
add
add
sbb
aad
add
incl
add
lcall
mov
add
incl
add
incl
add
incl
add
incl
add
ljmp
add
add
add
add
add
push
or
adc
call
push
push
sti
add
add
add
sub
mov
cmp
mov
push
add
call
incl
add
incl
add
ljmp
cmp
cs
inc
lcall
and
jmp
xchg
cmp
cmp
cwtl
jmp
add
insb
add
add
sub
rorb
mov
incl
fcmovu
incl
add
incl
add
incl
add
call
fucom
incl
lret
sar
push
mov
pusha
icebp
add
add
add
adc
add
incl
add
lcall
incl
add
decl
and
incl
push
incl
jne
push
mov
ljmp
int
pop
cmp
mov
mov
add
xor
add
sub
sbb
add
decl
outsb
fnstsw
mov
xor
movsl
lock
xor
mov
add
add
incl
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
sub
add
and
add
inc
add
add
add
add
add
add
add
add
adc
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
or
or
or
or
or
cs
or
add
or
or
inc
add
or
or
ss
or
push
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
or
or
add
and
add
adc
add
or
hlt
dec
pop
pop
notb
push
testl
add
sbb
add
add
add
add
add
or
or
or
or
add
add
add
popf
xor
add
andl
jmp
sbb
ljmp
inc
dec
ficompl
mov
add
ljmp
xor
pusha
sbb
decl
add
lret
add
add
add
add
add
add
or
or
or
or
add
add
add
out
jbe
adc
fistpl
dec
pop
pusha
mov
dec
dec
call
jae
fidivrl
dec
imul
inc
incl
sub
xchg
ss
ljmp
add
incl
add
mov
add
and
add
add
or
or
or
or
add
or
add
test
sbb
mov
push
push
incl
add
fidivrl
jmp
nop
xchg
jmp
xchg
jmp
xchg
xchg
jmp
mov
mov
call
add
add
jne
inc
jmp
jno
call
dec
push
jmp
push
push
loope
add
xor
or
or
or
or
add
add
jle
and
outsb
and
lcall
xchg
xchg
jmp
lcall
jmp
mov
in
mov
mov
decl
incl
add
call
cmp
out
pushf
jmp
mov
incl
add
jmp
push
push
out
add
add
add
or
or
or
or
add
add
cmpsb
cmp
incl
add
decl
add
lcall
stos
stos
out
mov
mov
ljmp
push
rcl
sti
rcl
cmp
pop
out
mov
mov
fmull
pop
call
push
incl
add
ljmp
add
add
add
or
or
or
or
add
add
add
pushl
dec
dec
decl
add
decl
pop
or
inc
inc
push
int3
into
push
in
mov
fdivr
in
out
lcall
add
push
or
dec
test
fmull
outsb
dec
arpl
fnstcw
dec
dec
dec
jg
adc
add
add
add
add
or
or
or
or
add
add
add
add
sahf
sbb
ljmp
incl
add
incl
add
incl
add
jmp
pop
in
out
clc
fsubp
clc
loop
std
lock
idiv
incl
aas
incl
add
incl
add
lcall
out
out
ret
fwait
sahf
jmp
cmpsb
cmpsl
jmp
xchg
xchg
fnstenv
dec
dec
dec
decl
or
add
add
add
add
or
or
or
or
add
add
add
outsl
imul
pop
call
jae
jmp
xchg
xchg
jmp
test
incl
xor
incl
add
incl
add
fst
sar
clc
stc
cld
hlt
cmc
cli
cld
push
repnz
das
das
incl
add
incl
add
call
jmp
push
fcmovu
push
into
sar
in
mov
movsb
fldl
jno
mov
aas
lcall
add
int
add
add
or
or
add
add
mov
xor
fidivrl
out
mov
in
rol
aas
xor
incl
add
incl
add
lcall
idiv
call
rcl
call
add
lcall
out
lock
std
in
out
clc
push
icebp
enter
mov
in
pushf
call
insb
outsb
dec
inc
inc
lcall
sbb
cmp
or
add
or
push
add
add
dec
adc
lods
sub
ljmp
gs
stos
lods
jmp
ret
into
sar
mov
incl
add
incl
add
incl
inc
cld
std
in
in
in
cmp
cmp
add
add
add
add
push
push
push
cld
out
repnz
fcmovu
out
ret
jmp
mov
fimuls
push
pushl
sbb
add
add
or
or
add
add
push
push
call
test
fdivr
jecxz
jecxz
icebp
out
out
pushl
add
incl
add
call
adc
fdivr
cli
sti
cli
decl
dec
incl
add
incl
add
ljmp
sub
fcomp
fdivr
std
idiv
cli
out
push
rcl
push
int
push
enter
test
mov
inc
inc
lcall
add
or
or
add
add
stos
lods
lods
pushl
int
fstp
fdivrp
call
repnz
lock
and
add
add
add
add
jne
jne
jae
jae
add
add
add
add
add
add
mov
mov
std
std
cld
cld
std
cld
repz
cli
in
push
fnstsw
push
int3
into
in
mov
jmp
xchg
xchg
incl
add
incl
add
pushl
or
in
add
or
or
or
push
push
push
mov
add
ljmp
mov
rcl
sar
loopne
loopne
jmp
ljmp
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
mov
cld
std
std
cli
cli
cli
stc
in
out
stc
loope
push
iret
sar
out
mov
sahf
call
jbe
fstps
incl
pmaddwd
or
aas
or
or
mov
xchg
call
mov
jmp
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
div
idiv
cld
cld
cld
push
div
out
in
in
push
fcmovnu
push
iret
sar
jmp
mov
ja
inc
inc
dec
call
dec
push
call
push
testb
or
or
add
or
xchg
ljmp
mov
js
popf
jmp
fsubp
jmp
in
std
std
std
ljmp
add
incl
add
incl
add
incl
add
incl
add
pushl
xor
jmp
in
cld
cld
cld
push
div
in
in
in
jmp
loope
jmp
loope
ret
mov
xchg
call
ja
cmp
sub
inc
or
or
add
push
lods
ds
mov
imul
leave
lcall
out
jmp
in
in
out
in
in
incl
add
incl
add
incl
add
incl
add
incl
add
incl
inc
jmp
out
std
std
std
std
std
std
clc
clc
clc
out
out
out
out
out
out
jmp
out
fcmovnu
fdivrp
mov
mov
stos
jmp
sub
repz
push
push
cmp
add
add
mov
decl
loopne
mov
icebp
repnz
jmp
jmp
add
incl
add
incl
add
incl
add
incl
add
incl
add
std
std
std
sti
sti
sti
clc
clc
clc
push
repz
in
in
in
jmp
loop
call
aad
inc
mov
lcall
add
incl
pop
pop
or
or
add
add
imul
push
mov
fdivrp
mov
ljmp
lock
jmp
cli
call
into
int
ud0
add
incl
add
incl
add
incl
add
mov
incl
add
sti
sti
sti
cli
cli
stc
in
jmp
ljmp
call
aam
pushl
xchg
xchg
incl
add
incl
or
or
or
or
add
push
push
xor
icebp
cs
cmpsl
pushl
mov
ret
jmp
call
out
out
repz
fsub
out
es
add
add
add
add
add
add
add
popa
popa
popa
mov
mov
std
std
cld
std
lcall
mov
call
fcmovu
call
fcmovu
mov
mov
incl
inc
incl
add
pop
or
or
or
or
add
add
add
add
sub
mov
loopne
scas
in
jmp
ljmp
sub
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
ljmp
outsb
in
cmc
cmc
dec
fcomp
ljmp
ss
lcall
out
ljmp
rcl
call
mov
sub
mov
stc
add
add
or
or
or
or
add
add
add
add
inc
inc
testl
into
decl
loope
pushl
out
lock
repnz
pushl
xor
add
add
add
add
add
add
add
sbb
lcall
add
incl
add
call
sub
ljmp
jg
lret
pushl
loope
incl
int
jmp
jg
incl
pop
pop
mov
or
or
or
or
add
add
add
add
add
add
lret
jns
aam
xchg
fcmovnu
jmp
out
dec
hlt
idiv
das
ss
add
incl
add
incl
add
incl
add
cmp
inc
mov
je
decl
adc
incl
add
incl
add
ljmp
ss
or
ljmp
lret
call
enter
xor
add
add
add
add
or
or
or
or
add
add
add
adc
xor
lret
js
sar
insb
enter
leave
iret
pushl
xchg
cltd
incl
add
incl
add
incl
add
incl
add
incl
add
call
adc
jmp
pop
or
add
add
add
add
add
add
add
add
or
incl
fwait
lcall
pop
incl
add
insl
or
or
or
or
add
add
push
and
inc
stos
mov
pop
aas
stos
mov
dec
mov
pushl
sar
mov
lock
nop
lcall
daa
daa
incl
add
incl
add
incl
jbe
lcall
sbb
cmp
dec
imul
push
push
ljmp
insb
jno
sub
cmp
outsl
incl
add
movsb
add
add
or
or
or
or
add
add
sub
add
dec
mov
mov
adc
stos
idiv
decl
jne
add
add
add
add
add
add
push
imul
xlat
nop
aad
jmp
out
pushl
aam
inc
mov
add
add
add
add
add
or
or
or
or
add
add
sbb
jecxz
nop
xchg
incl
add
incl
add
pushl
sar
test
jecxz
dec
je
incl
add
incl
add
incl
add
incl
push
xchg
in
incl
iret
aam
jo
aam
fs
aam
dec
mov
incl
add
incl
add
xchg
add
add
or
or
or
or
add
add
add
add
add
call
enter
fcos
dec
lods
mov
sbb
lcall
add
incl
add
decl
mov
lcall
sar
inc
stos
mov
and
incl
add
dec
or
or
or
or
add
add
add
popf
adc
cmp
push
pop
pop
incl
add
incl
add
incl
mov
add
add
das
xchg
popf
call
imul
pop
lcall
dec
dec
incb
sbb
add
add
add
or
or
or
or
add
add
add
inc
add
add
add
stos
add
adc
add
add
add
add
add
add
or
or
adc
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
add
or
jg
add
jg
add
add
js,pt
add
jo
add
jo
add
pusha
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
pusha
add
push
jo
add
js
add
jl
add
jle
add
addb
jg
add
add
pusha
add
add
add
add
add
add
add
and
add
add
andb
add
push
push
add
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
ltr
push
push
add
or
sbb
add
jno
add
lea
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
push
or
or
sldt
add
pop
add
add
add
lahf
or
add
sub
or
xor
pop
incl
jmp
and
jo
and
js
and
and
lcall
sbb
inc
or
pushl
add
lcall
pop
pop
incl
add
ljmp
add
add
or
add
add
str
sldt
add
xor
add
mov
add
repnz
ljmp
push
lcall
and
sbb
stos
sbb
ss
dec
push
call
pop
pop
call
dec
dec
inc
xor
stos
sbb
jmp
and
and
pop
sbb
jmp
add
add
add
add
add
sbb
str
sldt
add
add
add
xchg
add
stc
daa
add
pushl
or
mov
push
push
mov
sbb
daa
ljmp
sub
fnstenv
inc
push
push
ljmp
sub
mov
sub
mov
sub
leave
dec
dec
call
push
push
pushl
pop
pop
call
add
incl
add
jmp
str
sldt
add
inc
add
add
add
ljmp
dec
push
dec
pop
pop
call
fs
imul
outsl
jb
mov
dec
dec
fidivrl
fildl
xchg
fildl
cmp
dec
push
incl
add
incl
add
cmp
sbb
aaa
sbb
call
push
push
lcall
add
decl
add
add
add
str
sldt
add
push
add
add
push
aas
inc
dec
inc
inc
dec
push
push
call
imul
fidivrl
fiadds
nop
fnstcw
flds
pushf
jmp
pushf
popf
jmp
pushf
popf
jmp
pushf
popf
jmp
fwait
popf
fadds
incl
add
incl
add
incl
add
decl
outsl
jno
dec
dec
inc
cmp
jmp
push
ud0
add
lds
add
sbb
add
add
str
sldt
add
add
add
popa
or
add
jg
sbb
movsl
xor
js
xor
xchg
dec
imul
jnp
fiadds
xchg
jmp
cwtl
lcall
test
lods
jmp
lods
scas
jmp
lods
scas
push
mov
js
pop
incl
add
incl
add
incl
add
decl
xor
faddl
jg
fdivs
aam
push
aad
pop
inc
cmp
or
add
add
add
add
str
sldt
add
push
add
add
jnp
push
inc
inc
inc
call
pop
or
add
add
add
add
mov
xchg
xchg
jmp
cltd
pushf
jmp
mov
stos
ljmp
jmp
mov
sar
mov
sar
leave
lret
pushl
pop
incl
add
incl
add
incl
add
jmp
lahf
mov
jmp
xchg
call
jbe
call
imul
push
dec
inc
inc
incl
or
add
add
add
add
str
sldt
add
inc
add
sbb
dec
inc
dec
decl
and
add
add
add
add
bound
and
in
cmp
test
stos
jmp
mov
in
mov
ret
jmp
mov
test
repnz
int3
push
int
push
int
push
int
call
fdivr
push
push
incl
add
jmp
push
pop
fldt
call
mov
push
fdivs
call
push
call
pop
pop
dec
inc
inc
aas
or
incl
add
lds
add
or
add
add
str
sldt
add
adc
add
jecxz
add
mov
push
mov
or
incl
add
incl
add
ljmp
adc
lcall
xor
mov
jbe
clc
mov
leave
in
mov
mov
ljmp
out
rol
hlt
rcl
push
fcmovnu
sti
fdivr
aad
scas
jmp
push
incl
add
cmp
sub
cmc
leave
push
lret
out
stos
faddl
jno
lret
pop
popa
dec
pop
pop
dec
fs
outsb
jno
leave
dec
dec
lcall
add
incl
add
cltd
str
sldt
add
cwtl
sub
add
xchg
adc
ljmp
pop
pop
lcall
incl
add
incl
add
incl
add
incl
add
call
or
jmp
fcmovu
push
leave
out
mov
ret
push
enter
sar
neg
sti
out
sti
fsubp
decl
incl
add
incl
add
incl
add
call
jmp
mov
flds
jb
int
push
fstpt
dec
pop
pop
pushl
adc
incl
add
cli
add
add
str
sldt
add
aaa
or
pop
or
mov
cs
bound
jmp
mov
incl
add
incl
add
incl
add
incl
add
incl
push
push
pushl
out
stc
in
push
aad
push
cli
ljmp
push
hlt
sar
or
or
add
add
add
add
add
add
push
out
push
rcl
push
lret
int
in
mov
jmp
cmpsl
test
in
popf
fisttps
js
aam
push
call
add
add
add
add
add
str
sldt
add
or
add
fisubl
adc
cmp
incl
add
call
jo
faddl
mov
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
loopne
out
lock
sti
jmp
out
cld
icebp
repz
cld
icebp
repz
cld
mov
add
incl
add
incl
add
incl
add
lcall
lock
push
aad
push
in
mov
jmp
mov
out
test
loop
xchg
fldl
je
int3
push
pop
pushl
add
incl
add
push
add
add
str
sldt
add
inc
add
cs
aad
pop
call
push
fnstcw
jmp
mov
jmp
mov
test
incl
add
incl
add
incl
add
incl
add
incl
add
inc
mov
cli
sti
std
hlt
cmc
std
idiv
std
cmc
idiv
std
idiv
jmp
add
add
add
add
add
add
ret
push
repnz
clc
loop
push
fstp
push
fcomp
push
into
sar
out
mov
mov
in
mov
fidivrl
call
imul
push
pop
incl
add
fadds
add
or
add
add
str
sldt
add
lcall
inc
mov
pop
pop
fisttps
fwait
call
mov
sar
mov
decl
or
add
add
add
add
add
add
mov
std
repz
std
idiv
stc
sti
cli
cld
incl
add
incl
add
incl
add
lcall
call
repz
cli
out
stc
jecxz
push
rcl
out
ret
push
enter
mov
stos
jmp
lcall
int
fs
inc
inc
inc
inc
inc
jmp
pop
pop
incl
add
inc
add
add
str
sldt
add
add
add
sbb
add
hlt
movsb
and
dec
inc
inc
pushl
dec
dec
fiadds
mov
out
mov
lret
mov
xor
add
add
add
add
add
add
cs
icebp
stc
cld
push
sti
cli
std
dec
enter
adc
add
add
add
add
add
inc
inc
inc
std
clc
cli
push
idiv
sti
in
out
stc
in
push
int3
into
in
mov
enter
ret
mov
jmp
mov
mov
les
pushl
inc
inc
call
adc
add
add
str
sldt
add
add
add
dec
sub
or
call
cmp
pushl
data16
fstpl
jmp
mov
push
iret
sar
pop
dec
dec
incl
add
incl
add
incl
add
incl
add
inc
mov
clc
sti
call
aad
lcall
push
push
incl
add
incl
add
incl
add
incl
add
incl
clc
cli
cli
ljmp
repz
push
ret
jmp
mov
out
rol
loop
fwait
dec
pop
pop
mov
sub
push
incl
add
jmp
add
or
str
sldt
add
add
add
outsb
xor
xchg
incl
xchg
xchg
mov
rcl
jmp
fnstsw
jmp
loope
jmp
jecxz
push
lock
add
incl
add
incl
add
incl
add
incl
jmp
jmp
cs
add
incl
add
incl
add
incl
add
decl
dec
push
div
std
cli
sti
std
repnz
cli
ljmp
repz
iret
push
lret
icebp
leave
push
ret
call
mov
mov
inc
inc
mov
add
std
add
add
str
sldt
add
add
add
test
lahf
mov
test
jmp
rcl
loope
loop
jmp
out
out
out
out
out
dec
into
into
decl
or
incl
add
incl
add
incl
add
lcall
sbb
in
in
in
std
std
incl
inc
incl
add
incl
add
incl
add
incl
add
decl
dec
call
std
std
std
std
cld
std
cld
clc
stc
std
hlt
idiv
clc
loope
push
aam
clc
push
aad
push
in
mov
scas
incl
add
inc
inc
dec
call
gs
pushl
or
incl
add
mov
str
sldt
add
or
gs
test
mov
call
rcl
fcmovu
jecxz
jecxz
ljmp
push
cmc
cmc
stc
stc
stc
incl
inc
incl
add
incl
add
incl
add
incl
add
incl
imul
add
add
add
add
add
add
add
add
scas
scas
scas
std
std
std
std
std
std
sti
cld
cld
cld
div
cld
out
icebp
cli
call
loope
cmc
fdivr
icebp
leave
lret
mov
stos
jmp
xchg
xchg
fnstcw
shll
call
dec
dec
decl
incl
add
test
sldt
add
adc
pop
pop
repnz
stos
mov
mov
fdivr
in
in
jmp
jmp
lock
hlt
hlt
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
xchg
std
std
std
cld
cld
cld
cli
sti
sti
sti
hlt
cmc
cli
jmp
jecxz
neg
repnz
out
mov
lods
jmp
cwtl
lcall
imul
adc
incl
add
mov
sldt
add
push
or
addl
scas
scas
scas
lcall
mov
incl
add
fdivrp
in
in
in
in
in
push
icebp
icebp
in
in
in
ljmp
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
dec
into
into
std
std
std
cld
cld
cld
sti
sti
sti
push
hlt
hlt
push
in
stc
jecxz
push
fcmovnu
push
int3
iret
out
rol
in
mov
flds
pop
call
outsb
jno
ficoml
jmp
pop
incl
add
mov
str
sldt
add
pop
or
test
decl
lea
ret
fcomp
fdivr
out
out
out
out
jmp
jmp
cli
cli
cli
call
rcl
incl
pop
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
sti
sti
sti
clc
clc
clc
push
repnz
in
out
in
out
push
rcl
push
into
sar
in
mov
jmp
xchg
xchg
call
push
inc
inc
inc
dec
call
inc
dec
js
and
add
add
sldt
add
and
mov
ljmp
jo
xchg
lahf
ljmp
rcl
jmp
in
jmp
loope
jmp
jmp
cmc
cmc
cmc
jmp
pop
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
cli
cli
cli
push
div
push
icebp
icebp
jmp
jmp
loope
call
ffree
mov
addl
mov
jmp
cmp
incl
add
mov
sldt
add
pop
add
adc
dec
test
ret
ljmp
vsqrtsd
lret
ljmp
call
jmp
in
in
in
jmp
stc
stc
jmp
jecxz
decl
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
pusha
push
cmc
cmc
std
std
std
cld
cld
cld
cli
cli
cli
push
repnz
jmp
jmp
in
out
in
jmp
in
fcmovu
int
sar
test
xchg
xchg
lcall
movsb
movsb
incl
inc
incl
add
mov
sldt
add
push
add
repz
add
outsl
lret
sar
pop
mov
aam
lods
in
mov
out
lock
in
out
push
out
out
jmp
jmp
cli
cli
cli
fdivr
or
or
add
add
add
add
add
add
add
add
add
add
add
add
jle
jle
incl
add
std
std
std
std
std
std
cld
cld
cld
cli
cli
cli
push
repz
in
in
in
out
out
out
ljmp
fcmovnu
aam
aam
mov
mov
lcall
lcall
xor
add
sldt
add
add
add
mov
jl
lcall
int3
ljmp
incl
loopne
movsl
loope
pushl
out
lock
icebp
repz
jmp
repnz
sti
sti
sti
jmp
jecxz
decl
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
std
std
std
std
std
std
std
std
std
cli
cli
cli
stc
stc
stc
push
div
push
repz
out
out
out
call
loope
fcomp
fdivr
into
into
into
inc
mov
mov
test
test
cwtl
cwtl
cwtl
ljmp
sub
incl
add
mov
str
sldt
add
add
add
jnp
push
push
call
int3
jmp
int3
pushl
decl
loopne
pushl
in
out
dec
lock
fcomi
hlt
ljmp
push
icebp
icebp
jmp
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
call
incl
add
std
std
std
std
std
std
std
std
std
cld
cld
cld
cli
cli
cli
clc
clc
clc
push
repz
out
out
out
in
in
in
jmp
out
fdivrp
dec
int
mov
stos
stos
jmp
xchg
call
pop
pop
incl
add
jo
str
sldt
add
add
add
pop
push
xor
decl
ret
lret
incl
mov
loop
ljmp
ljmp
aad
hlt
inc
jmp
icebp
ljmp
imul
add
add
add
add
add
add
add
add
add
add
add
add
jg
jg
cld
cld
cld
std
std
std
sti
sti
sti
cli
cli
cli
clc
clc
clc
cld
cld
cld
push
repz
loop
ljmp
fcmovnu
rcl
sar
iret
iret
iret
jmp
addl
incl
add
sbb
str
sldt
add
add
add
sub
lahf
cmpsl
cmp
stos
decl
pushl
sar
popf
fucom
mov
jmp
ljmp
in
icebp
push
std
decl
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
stc
stc
stc
incl
add
push
div
cld
cld
sti
cli
cli
stc
cli
stc
stc
cli
clc
clc
call
rcl
jmp
xlat
xlat
xlat
fcmovnbe
xlat
fdivr
lret
mov
mov
stos
call
outsl
outsl
incl
add
cmp
cmp
add
add
str
sldt
add
add
add
add
add
mov
dec
push
lcall
mov
cmp
mov
pushl
in
lcall
mov
stc
std
call
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
pushl
xor
incl
add
incl
add
decl
clc
cli
stc
push
cld
std
push
call
pop
jmp
sub
mov
rcl
mov
fsubp
jmp
mov
decl
test
add
add
or
pop
incl
add
pop
add
add
str
sldt
add
push
add
adc
add
add
daa
cltd
mov
jnp
aad
xchg
fcmovu
jmp
call
lcall
jmp
lcall
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
call
pop
fsubrp
jmp
ljmp
or
decl
ljmp
scas
out
jmp
fcmovnu
jp
inc
mov
jmp
test
incl
or
hlt
add
add
add
add
str
sldt
add
sbb
add
jmp
je
cmp
mov
decl
fsubp
ljmp
out
jmp
jmp
jmp
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
aas
incl
inc
ljmp
xor
mov
out
pushl
jecxz
lcall
jl
call
mov
decl
add
lea
add
add
add
add
str
sldt
add
bound
mov
jmp
lret
ljmp
jge
aad
lcall
add
add
add
add
add
add
add
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
push
ljmp
push
push
incl
add
add
add
add
add
add
add
add
add
add
dec
pop
pop
dec
repz
mov
out
jmp
fsub
jle
fdivr
insb
enter
int3
sar
xor
add
add
add
add
add
add
add
str
sldt
add
add
add
enter
incl
jmp
leave
pushl
sar
adc
fdivrp
sahf
call
jecxz
dec
hlt
idiv
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
decl
repnz
jmp
popa
incl
add
incl
add
incl
add
incl
add
incl
or
ljmp
cmp
decl
fcomp
decl
int3
ljmp
enter
into
incl
decl
and
add
str
sldt
add
xor
add
clc
sbb
call
leave
jmp
leave
pushl
sar
adc
fdivr
pop
rol
mov
fcos
mov
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
xor
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
or
push
decl
adc
sbb
xor
call
sar
push
push
push
incl
add
roll
add
str
sldt
add
addl
adc
decl
mov
lcall
decl
mov
jmp
leave
pushl
sar
cmpsl
in
ljmp
daa
sub
add
add
add
add
add
add
add
add
add
add
add
add
push
or
decl
adc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
adc
adc
add
adc
es
dec
decl
mov
incl
add
out
add
add
str
sldt
add
mov
adc
pushl
mov
call
mov
cmp
mov
push
mov
lret
call
ljmp
push
jge
call
push
incl
add
incl
add
incl
add
incl
add
ljmp
cmp
xchg
iret
sar
cs
inc
call
es
sbb
and
inc
bound
popa
test
cmp
cmp
pushf
cmp
xchg
cwtl
incl
xchg
jmp
add
add
add
add
str
sldt
add
add
add
cmpsl
add
sbb
cmp
lcall
ljmp
movsb
call
mov
decl
fdivrp
mov
in
icebp
ljmp
inc
inc
incl
add
incl
add
incl
add
incl
add
call
mov
fdivr
ja
iret
lcall
out
lcall
loop
incl
mov
jmp
int
pop
lret
sar
and
add
add
add
add
add
add
str
sldt
add
add
add
mov
sbb
sub
call
leave
decl
mov
pushl
sar
jns
aam
adc
decl
fcmovu
jmp
cmp
incl
add
incl
add
incl
add
incl
add
incl
add
cmp
call
call
xlat
adc
jns
sar
jno
sar
pop
mov
ret
mov
pusha
incl
add
add
add
str
sldt
add
test
pop
pop
icebp
pop
insl
incl
mov
pop
int3
lcall
lret
jmp
int3
ljmp
iret
pushl
aam
adc
dec
incl
add
incl
add
incl
add
incl
add
incl
or
pushl
mov
incl
rcl
pushl
sar
outsl
lret
add
add
popa
int3
lcall
int
aas
mov
aas
incl
add
fildl
add
inc
str
sldt
add
xor
add
ret
add
push
jmp
insb
jb
inc
cmpsb
lods
call
lcall
jmp
lret
into
aam
ds
xchg
decl
and
decl
or
push
decl
adc
inc
jb
js
push
mov
decl
mov
jmp
lret
add
call
cmp
mov
incl
or
add
str
sldt
add
add
add
arpl
add
in
adc
insb
incl
mov
dec
mov
call
ljmp
mov
movsl
call
mov
dec
mov
mov
incl
add
incl
add
ljmp
pushf
mov
decl
mov
call
inc
dec
incl
add
add
add
add
str
sldt
add
push
add
add
add
mov
pop
sbb
or
inc
decl
pop
decl
outsb
lcall
jg
cmp
mov
dec
mov
movsl
call
cmp
pop
push
decl
xor
decl
es
add
or
add
add
add
add
add
add
str
sldt
add
sub
add
push
add
add
add
mov
add
lock
or
add
add
add
sbb
add
pop
repz
push
lock
add
add
add
add
add
add
sbb
add
add
str
or
sldt
add
add
add
add
add
add
add
add
add
add
add
or
add
push
push
add
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
ltr
push
push
add
incl
add
inc
add
incl
add
incb
add
incl
add
clc
add
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incb
add
add
add
add
add
aas
add
cld
add
add
pop
add
clc
add
add
pop
add
clc
add
add
sldt
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
lock
add
pop
add
lock
add
sldt
clc
add
add
pop
add
cld
add
add
pop
add
incb
add
add
add
incb
add
add
add
add
add
incl
add
rolb
add
add
jmp
add
add
add
push
add
ud0
add
cld
add
pop
incl
add
incl
add
clc
ud0
add
incl
add
add
add
add
add
call
add
and
add
add
add
add
sbb
add
add
add
add
and
add
add
add
add
xor
add
add
add
add
add
