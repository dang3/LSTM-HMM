pop
push
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
mov
call
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
sub
or
xor
cmp
je
sub
xor
movl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
call
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
call
jmp
ret
mov
push
pop
sub
lods
mov
mov
shl
lea
mov
movl
mov
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
ja
mov
sub
jne
mov
jge
popf
pushl
pop
dec
call
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
call
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
push
push
call
add
pop
mov
pop
mov
call
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
call
call
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
push
push
call
add
pop
mov
pop
mov
call
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
mov
call
incl
and
add
and
add
and
add
and
add
and
add
add
add
add
cwtl
and
add
add
mov
add
cmp
add
xchg
and
add
and
add
add
adc
add
movsb
and
add
and
add
add
add
add
pushf
and
add
add
xor
add
jp
add
outsb
and
add
add
and
add
add
fsubs
add
mov
add
mov
add
and
add
push
and
add
add
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
add
add
cwtl
and
add
add
mov
add
cmp
add
xchg
and
add
and
add
add
adc
add
movsb
and
add
and
add
add
add
add
pushf
and
add
add
xor
add
jp
add
outsb
and
add
add
and
add
add
fsubs
add
mov
add
mov
add
and
add
push
and
add
add
add
and
add
and
add
and
add
and
add
add
add
add
outsb
fs
je
insl
inc
add
add
je
jb
jbe
push
jns
gs
add
gs
jb
arpl
jae
gs
jo
add
add
insb
jae
gs
popa
insb
jne
add
insb
jae
jb
outsb
inc
add
mov
jo
outsb
fs
push
add
add
fs
imul
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
add
je
jb
jbe
je
push
jb
imul
push
add
gs
popa
jae
inc
jb
outsl
jb
add
add
gs
inc
imul
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
gs
insl
gs
push
add
roll
dec
gs
jo
jb
add
repnz
imul
jb
je
arpl
add
movb
gs
jne
jb
outsb
je
push
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
gs
je
imul
push
add
push
add
je
jb
arpl
jae
gs
imul
dec
inc
dec
xor
cs
insb
add
push
add
insl
push
insb
jne
dec
imul
add
add
je
gs
jo
popa
jbe
add
or
inc
push
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
add
insl
push
insb
jne
dec
imul
add
add
je
gs
jo
popa
jbe
add
adc
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
dec
inc
inc
inc
push
push
cs
insb
add
add
push
gs
outsl
add
fs
outsl
addr16
imul
inc
add
push
outsl
addr16
imul
add
add
push
fs
outsl
jne
je
jb
add
push
inc
dec
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
test
add
clc
data16
test
add
mov
or
add
addl
add
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
lods
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jl
jl
stos
lods
lods
add
cmpsl
cmpsb
push
mov
mov
mov
ret
lret
leave
lret
lret
int3
rcl
in
rcl
shl
rcl
shl
int
int3
hlt
leave
enter
leave
leave
out
vpmulhuw
mov
mov
lods
lods
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
rcl
sar
fcom
fdivr
fcomp
fdivr
fcom
aam
aam
ror
iret
dec
int3
int
aad
dec
rcl
inc
mov
mov
iret
movsb
movsl
movsb
xchg
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
scas
sbb
mov
jnp
mov
sar
dec
leave
lret
iret
sar
aam
aam
xlat
fcomp
call
fcom
call
aam
dec
into
int
int
into
call
aam
int
into
mov
mov
mov
std
test
cmpsb
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
into
into
call
rcl
fcom
fdivr
fcom
fdivr
aam
int
int
leave
leave
lret
dec
into
int3
inc
rol
mov
mov
ljmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
push
bound
fs
sbb
push
sub
sbb
ss
cmp
adc
pop
pop
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
mov
dec
enter
iret
sar
aam
call
aam
call
iret
sar
leave
enter
ret
mov
mov
ljmp
movsb
mov
xchg
xchg
cwtl
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jo
jle
jge
jge
jge
jb
jb
bound
mov
cmp
inc
inc
mov
outsl
jo
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
lret
lret
lret
enter
ret
mov
mov
ljmp
movsb
movsb
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
xchg
fwait
cltd
cltd
in
addb
push
push
or
add
add
add
add
add
add
add
add
add
add
add
jo
outsb
add
pop
or
jl
fcoms
test
jnp
jp
jp
jp
outsb
outsl
outsb
out
addr16
data16
je
jle
jge
jns
jp
arpl
inc
inc
cmp
sbb
sbb
adc
or
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsl
lcall
nop
incl
addb
xchg
xchg
xchg
lahf
lahf
lahf
sti
mov
xchg
xchg
mov
jns
js
xor
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
test
sahf
in
mov
incl
xchg
std
xchg
jg
jb
jo
je
jne
jg
jge
addl
addr16
cmp
and
and
jg
jg
cltd
cltd
cltd
lea
stos
test
sti
lods
stos
stos
lods
lods
lods
test
stos
std
mov
fwait
fwait
xchg
xchg
xchg
incl
jle
jns
js
jl
jnp
mov
xchg
movsb
movsl
movsl
mov
mov
mov
mov
mov
mov
mov
lods
scas
stos
test
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsl
out
lods
mov
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
push
pop
pop
push
push
push
push
xor
inc
dec
insl
imul
test
leave
lcall
out
lcall
std
mov
xchg
mov
mov
lea
fwait
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
test
call
lcall
incl
mov
xchg
xchg
xchg
pushf
sahf
popf
std
movsl
movsb
mov
out
xchg
xchg
xchg
in
xchg
xchg
xchg
in
xchg
push
jne
or
add
or
or
daa
daa
sub
dec
dec
outsw
jo
test
xchg
xchg
rclb
xchg
xchg
std
nop
decb
xchg
lcall
movsl
test
lods
test
lods
pushl
mov
test
rorb
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
sahf
cltd
lcall
mov
call
xchg
nop
xchg
xchg
xchg
popf
popf
popf
movsl
mov
test
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
popaw
pusha
bound
je
mov
jge
test
mov
mov
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
jbe
mov
movsb
mov
mov
mov
mov
movsl
add
mov
add
pusha
adc
mov
lcall
mov
xchg
xchg
xchg
call
xchg
lcall
cltd
fwait
lcall
movsb
movsl
movsl
std
mov
lcall
nop
xchg
xchg
les
lcall
xchg
cmc
xchg
test
std
xchg
je
cltd
push
cmp
dec
cmp
inc
jge
mov
jp
mov
jae
mov
outsl
ljmp
pcmpgtd
stos
or
lods
or
mov
jle
mov
mov
stos
pushf
mov
mov
add
mov
pop
pop
adc
mov
lcall
xchg
xchg
call
lcall
sahf
sahf
lahf
lcall
cltd
call
xchg
xchg
nop
xchg
nop
call
xchg
fwait
cld
cltd
cltd
pushf
stc
mov
xchg
pushf
cld
sahf
xchg
xchg
imul
xchg
dec
jp
fwait
je,pt
cltd
sub
sahf
pop
push
jmp
adc
ljmp
adc
lods
adc
lods
adc
mov
push
mov
push
mov
insb
mov
cltd
scas
mov
lods
lods
scas
movsb
movsl
movsl
sub
movsl
mov
add
add
add
mov
pop
pop
adc
mov
ljmp
pushf
call
sahf
popf
lcall
movsb
movsl
jmp
mov
cwtl
decl
mov
decl
js
cltd
jb
cltd
fs
xchg
dec
jnp
xchg
jno,pt
cs
decl
adc
or
pop
call
add
mov
adc
ljmp
sbb
mov
outsl
pushl
pop
jae
mov
and
shll
mov
xchg
lods
mov
scas
scas
mov
mov
movsb
movsb
add
pop
pop
adc
lods
mov
mov
cwtl
popf
lcall
mov
cmpsb
ljmp
test
jmp
fwait
pushf
call
pop
ja
mov
decl
sub
mov
pusha
decl
or
addl
decl
add
popl
push
call
add
sahf
add
or
pushl
daa
ja
mov
sub
shrl
inc
sub
jle
leave
xor
inc
inc
mov
leave
lea
cld
mov
mov
mov
mov
movsl
add
push
adc
test
ljmp
lahf
jmp
test
lods
ljmp
mov
scas
scas
scas
jmp
mov
mov
pop
incl
or
addl
incl
push
decl
add
popl
push
call
add
mov
add
ljmp
sub
inc
cmp
inc
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
cmpsb
ljmp
lahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
decl
or
test
push
incl
add
mov
push
call
add
sahf
add
mov
add
lods
add
sbb
xchg
leave
inc
dec
inc
call
inc
call
inc
nop
call
dec
xchg
call
dec
xchg
fmull
ficoml
call
test
std
mov
mov
movsb
movsb
movsl
arpl
mov
add
add
add
cltd
xchg
cwtl
add
inc
adc
jnp
movsb
sahf
mov
lcall
stos
test
pushl
mov
pushl
mov
mov
movsb
mov
decl
sbb
nop
sbb
mov
pop
decl
pop
push
decl
add
xchg
add
popf
add
mov
add
stos
add
mov
fs
es
into
dec
nop
call
push
cwtl
call
push
lcall
push
popf
fists
jmp
pop
pushf
jmp
pop
mov
jmp
pop
lahf
call
xchg
mov
mov
cmpsb
cmpsb
cmpsb
jne
lahf
mov
add
inc
inc
adc
ja
sahf
cltd
popf
jmp
lahf
fwait
sahf
ljmp
mov
pushl
mov
mov
pushl
movsb
call
arpl
xchg
and
xchg
and
xchg
and
xchg
sbb
or
nop
add
xchg
add
lcall
ljmp
add
mov
fs
mov
xor
fisubl
fbld
fbld
jmp
data16
jmp
cmpsb
jmp
data16
ljmp
jmp
test
mov
cmpsl
test
sahf
lahf
mov
add
inc
inc
adc
jp
xchg
cltd
call
mov
scas
lods
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
cltd
das
outsb
lcall
sub
xchg
push
callw
add
cltd
add
mov
add
lods
add
mov
pushl
movq
roll
jmp
outsl
stos
jmp
jno
call
jae
in
je
in
je
in
jbe
in
jbe
in
jb
jmp
mov
mov
test
lcall
lahf
add
jle
cmp
adc
outsb
js
mov
sahf
pushf
pushf
pushl
mov
mov
mov
mov
mov
cmpsb
lods
lcall
xor
sahf
cmp
mov
xor
lcall
call
add
mov
add
mov
pushl
add
leave
sbb
ficoml
jmp
jbe
ljmp
in
cmpl
push
test
push
test
ljmp
inc
mov
test
daa
sahf
mov
lahf
add
add
add
pusha
add
ss
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
inc
mov
lcall
cmp
movsl
inc
jle
mov
ss
fwait
sbb
xchg
add
popf
add
movsl
add
test
pusha
ljmp
add
add
ret
dec
es
movsl
call
mov
push
mov
push
nop
ret
xchg
ret
push
xchg
clc
xchg
clc
out
mov
fidivl
clc
stos
stos
stos
mov
popf
popf
xor
pushf
sahf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
nop
mov
mov
mov
mov
mov
mov
inc
mov
jmp
inc
jl
cmpsl
dec
jg
lods
dec
test
movsb
xor
lcall
add
mov
add
lods
add
mov
mov
add
enter
xor
jmp
js
out
xchg
push
lcall
repnz
cmc
pushf
enter
int3
cli
lahf
int3
cli
popf
into
cld
lcall
fistpll
cli
mov
mov
lahf
lahf
mov
add
add
add
cs
or
cmp
jecxz
pop
popa
call
mov
mov
mov
sar
inc
inc
mov
mov
ljmp
dec
xchg
movsl
sub
cltd
pop
pop
lcall
pop
ljmp
add
mov
add
enter
rorb
fiadds
in
lea
push
cmpsb
int3
push
movsb
into
push
cmpsl
into
cli
test
sar
cli
test
sar
std
test
sar
negl
int3
dec
lret
mov
mov
lahf
mov
xchg
add
cltd
lcall
xor
add
sub
or
bound
pop
xlat
jae
jno
mov
mov
mov
inc
ret
dec
enter
rol
mov
test
movsb
push
test
scas
push
mov
lods
dec
test
lahf
sbb
lcall
add
add
mov
mov
add
into
add
fadds
jae
ficoms
out
pop
cmpsb
push
sahf
lret
cld
lods
sar
sti
scas
aam
sti
mov
cld
mov
std
mov
cld
mov
mov
std
mov
pushl
sar
mulb
dec
leave
lret
mov
mov
sahf
mov
xchg
or
add
add
xor
add
sbb
dec
ss
outsl
mov
fsubr
aam
test
into
into
dec
lret
leave
dec
lret
lret
lret
mov
scas
ljmp
push
mov
lods
jg,pt
mov
add
lods
add
mov
arpl
mov
add
rolb
outsb
fadds
je
fiadds
jae
call
jb
cld
lods
sar
mov
fcos
cld
mov
cld
mov
xlat
cld
mov
xlat
std
rcr
mov
int3
jmp
mov
call
leave
int3
mov
lahf
mov
or
add
add
xor
xor
add
add
pop
pop
pop
or
leave
movl
ljmp
loop
loop
fucom
fdiv
xlat
cli
aad
std
int
iret
mov
push
test
stos
sub
mov
add
mov
mov
add
lret
add
add
fldl
jbe
jecxz
js
in
xor
sti
mov
loope
inc
loope
inc
loop
inc
fdivrp
std
loopne
std
fdivrp
dec
std
leave
loopne
std
dec
loopne
cld
mov
leave
call
lret
iret
mov
mov
xchg
adc
add
add
std
incb
std
std
add
incb
repnz
or
out
in
pop
jmp
out
sub
out
out
dec
call
call
jmp
aad
jmp
mov
xchg
cmpsb
cmp
mov
add
test
pusha
pushl
push
les
push
int3
add
add
loopne
jbe
jmp
inc
fwait
cli
mov
in
std
int3
in
std
int3
out
dec
in
dec
jecxz
std
int3
jecxz
dec
loope
std
iret
loop
call
in
call
jecxz
shl
cld
in
mov
xlat
inc
out
cmpsb
test
mov
cwtl
cwtl
add
add
add
std
std
add
std
std
add
clc
clc
add
hlt
icebp
add
repnz
out
lock
pop
out
icebp
out
cmp
out
out
pop
fsubp
loop
les
xchg
sti
mov
push
pop
jmp
add
mov
fs
mov
add
roll
jb
fildl
je
in
jp
jmp
jl
negl
cli
mov
std
shl
std
shl
call
call
call
jecxz
call
call
std
fsub
std
fucomi
std
fucompp
shl
push
ret
jecxz
lret
lret
stos
test
xchg
and
xchg
cwtl
add
cld
add
cld
stc
add
sti
clc
add
div
or
aam
mov
jb
negb
add
cmpsb
add
scas
add
mov
add
lret
add
roll
jno
fildl
ja
out
ja
out
sbb
cli
ret
fdivrp
cld
fsubr
std
std
fldlg2
std
fldl2e
fucomi
fucomi
fucomp
std
fsubr
jmp
jmp
fsubrp
std
loopne
shl
push
call
iret
sar
lods
stos
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loop
add
leave
sbb
lods
jge
repnz
and
lahf
add
test
pop
pushl
add
les
addr16
add
add
fiadds
jae
jmp
sub
shr
jmp
out
fucomp
fldl2e
std
xlat
call
shl
sti
iret
loop
cld
shl
clc
into
stc
int3
cmc
ret
aad
out
mov
fcom
sti
mov
mov
fwait
fwait
cltd
cmp
lcall
mov
mov
add
leave
adc
scas
mov
lcall
add
mov
arpl
mov
add
rolb
outsl
call
add
loopne
jns
ljmp
cld
xchg
cld
lret
cld
lret
sti
stc
mov
aam
hlt
mov
iret
push
mov
int3
call
mov
sar
call
shl
jmp
in
mov
mov
xchg
add
add
add
int
mov
sarb
lahf
xor
jmp
add
mov
gs
mov
add
int3
or
rorl
jne
fimull
jns
loopne
cmp
dec
xchg
ljmp
ljmp
std
loopne
ret
cld
loopne
ret
mov
neg
mov
enter
int3
in
leave
into
rcl
shl
aad
call
out
test
out
out
popf
ljmp
push
stos
lods
lods
adc
cmpsb
cmpsb
test
lahf
mov
ret
ret
roll
ret
ret
pop
mov
lods
aam
dec
cmp
sbb
cmpsl
push
imul
and
mov
jns
mov
inc
xchg
ret
push
mov
lret
test
mov
out
mov
mov
lret
int
ror
int
aad
shlb
rcl
jg
fcmovu
jb
gs
in
call
out
jmp
icebp
cmc
repz
div
and
repnz
fstp
or
mov
int3
add
add
add
mov
mov
les
imul
mov
pushf
in
mov
sarb
stos
mov
les
ret
ret
int3
leave
int
iret
int
addr16
rcll
rcl
dec
aad
rcr
xor
fcmovu
daa
fistpl
fcmovnu
fstl
fsubp
jecxz
jecxz
call
lock
add
cli
cmc
add
std
std
add
std
incb
std
add
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
rol
inc
ret
leave
xor
int3
leave
daa
lret
ror
and
aam
sbb
aad
adc
aad
or
fcom
push
rcr
xlat
add
add
add
in
add
jmp
add
xlat
add
incl
mov
mov
add
ret
ret
mov
mov
mov
mov
push
rol
or
enter
enter
leave
add
aad
add
aad
rcl
aam
aam
aam
aam
add
fsub
add
flds
loopne
loop
fstp
loopne
jecxz
call
add
incl
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
les
ret
ret
ret
mov
mov
ja
stos
test
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
enter
into
jmp
aam
cmc
rcl
aam
iret
into
sar
lret
int3
int3
stc
int3
int3
int3
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
into
into
iret
xlat
call
xlat
call
iret
iret
dec
iret
into
dec
int3
lret
mov
mov
cld
stos
stos
lods
icebp
cltd
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
je
je
fs
dec
dec
inc
cmp
sub
sub
aaa
aaa
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
inc
dec
lret
lret
rcl
call
aam
dec
int3
lret
inc
mov
sarl
ljmp
sahf
popf
cwtl
xchg
cwtl
jmp
outsl
jno
push
adc
add
add
add
add
add
addl
test
push
push
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jo
outsl
adc
mov
fstpt
mov
ret
mov
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
wrmsr
add
add
add
add
add
pop
cltd
cltd
cltd
add
fwait
cwtl
cwtl
fcoml
addb
jnp
jge
jns
jp
jp
jnp
jp
jnp
je
jae
push
push
push
cmp
aaa
popf
pushf
popf
mov
scas
lods
repz
scas
scas
sti
scas
scas
lods
std
cmpsl
test
std
popf
popf
sahf
call
test
call
mov
scas
jmp
scas
scas
leave
cmpsb
movsl
movsb
cltd
je
jae
adc
adc
add
add
add
add
outsl
outsl
insl
pop
nop
mov
mov
test
std
nop
mov
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsb
jo
mov
cltd
cltd
cltd
cltd
repnz
xchg
xchg
std
lea
call
sahf
sahf
ljmp
mov
mov
scas
mov
mov
mov
movsl
movsb
cmpsl
pop
addl
add
pop
pop
pusha
or
lods
mov
cmpsl
lahf
movsl
decl
call
xchg
xchg
std
sahf
lahf
sahf
sti
mov
cwtl
cltd
call
push
push
push
jo
pop
pop
outsl
imul
jg
subl
xchg
lock
nop
xchg
ljmp
jle
pushl
pop
mov
jge
mov
scas
stos
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
movsb
cmpsl
call
xchg
xchg
call
cltd
xchg
cltd
lcall
popf
popf
sahf
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
mov
nop
jne
notb
jle
pushf
dec
jnp
movsl
inc
jp
lods
xor
je
mov
outsb
ljmp
sbb
mov
mov
mov
jle
movsl
mov
add
add
add
popa
or
mov
in
movsb
cmpsl
lcall
sahf
popf
jmp
lahf
lahf
call
mov
xchg
jp
std
xchg
jno
cld
xchg
pop
cmp
dec
jns
xchg
cmp
nop
sub
xchg
sbb
adc
lahf
push
jmp
sbb
mov
outsb
pushl
pop
jno
mov
pop
mov
scas
scas
xchg
popf
popf
sahf
adc
add
add
pop
popa
pop
or
mov
test
mov
cmpsl
ljmp
test
lcall
cmp
mov
decl
adc
test
push
decl
add
xchg
add
pushf
add
cmpsl
or
pushl
sub
jge
lds
jge
xor
dec
pop
cwtl
inc
test
divl
test
add
add
add
popa
pop
pop
or
movsb
test
jmp
scas
scas
pushl
mov
jmp
inc
jno
mov
pop
decl
or
add
push
decl
add
mov
add
mov
insl
inc
aaa
cmp
inc
mov
rolb
rolb
call
inc
xchg
flds
call
arpl
stc
mov
mov
movsl
movsl
mov
add
add
add
pusha
or
lahf
mov
ljmp
mov
pushl
mov
ljmp
push
jl
pop
arpl
nop
sbb
adc
pop
decl
add
sahf
add
cmpsb
add
scas
add
mov
dec
nop
fcoms
fistpl
jmp
pop
mov
jmp
pop
mov
dec
test
cld
mov
mov
cmpsl
stos
movsl
xor
add
add
dec
pop
jge
jnp
pushf
xchg
cltd
jecxz
lahf
mov
pushl
mov
mov
jmp
cs
lcall
and
call
add
sahf
add
cmpsb
add
mov
arpl
mov
addr16
xor
fisubl
jmp
insb
test
in
lods
jmp
jo
in
jae
jmp
jp
call
test
std
mov
test
inc
addl
dec
pop
outsb
outsl
push
mov
xchg
pushl
mov
mov
mov
jne
lcall
cmp
popf
sub
xchg
or
lcall
pop
ljmp
add
or
call
dec
xchg
jmp
jp
jmp
cmpl
hlt
mov
push
mov
mov
test
push
cltd
lcall
sub
push
push
push
dec
pop
imul
mov
mov
mov
sarb
sarb
jmp
inc
cmp
sub
cltd
pop
pop
jmp
add
mov
gs
mov
adc
mov
push
xchg
cwtl
push
cltd
stc
fwait
lret
fwait
leave
push
cwtl
stos
inc
mov
lods
popa
mov
add
add
inc
pop
pop
pop
push
fisttpl
mov
mov
ret
ret
pushl
push
xchg
stos
dec
cmp
and
add
test
add
mov
add
fisubl
cmp
jnp
push
mov
sar
stc
test
sar
cld
stos
sar
std
stos
sar
sti
cmpsb
int3
jmp
mov
dec
mov
stos
jne
popf
pushf
or
add
add
dec
push
dec
aaa
je
je
test
int3
into
out
iret
lret
cmc
lret
sti
lret
std
leave
leave
mov
pusha
mov
stos
inc
jle
mov
add
mov
fs
add
int
outsl
fiaddl
xchg
push
xchg
std
mov
std
mov
fdivr
mov
xlat
mov
sar
ljmp
repz
lods
scas
mov
add
add
add
add
or
aam
dec
loop
fsubp
loope
fadd
fcmovu
fcmovnu
xlat
out
mov
data16
test
push
pop
pushl
add
enter
aad
jb
loop
jnp
repnz
mov
sti
std
loope
std
dec
std
lret
dec
loopne
cld
fdivr
out
mov
lret
divb
pushf
pushf
sbb
add
add
std
incb
std
std
add
jmp
or
in
in
sbb
in
in
xor
loopne
jecxz
lds
mov
mov
add
pushl
imul
faddl
je
call
insl
mov
std
ret
sti
shl
call
out
std
shl
shl
std
aad
call
push
xlat
fmul
sar
mov
mov
add
std
add
incb
std
cld
pop
aam
push
mov
pop
mov
popf
or
pop
pushl
add
rolb
outsl
fiadds
ja
out
pop
mov
stc
mov
cld
shl
std
fldl2e
std
cld
fsubr
xlat
jmp
fld1
cld
aad
push
enter
rcl
sti
mov
lahf
lahf
das
add
add
int3
into
int3
or
arpl
ljmp
inc
add
aad
jno
loope
jns
out
xor
sti
int3
loope
cli
leave
fdivrp
cmc
repz
icebp
ret
std
lock
sar
in
out
aam
ljmp
ljmp
test
incb
aad
push
mov
je
or
insb
inc
sbb
lret
and
cs
ficoms
clc
jecxz
mov
out
jecxz
lret
mov
lret
ror
fmulp
sarb
jecxz
fcompl
in
out
jns
rcl
dec
mov
add
add
mov
scas
xchg
movsl
les
pop
xchg
mov
fidivrl
jle
rol
stos
mov
mov
ret
nop
aam
jge
ror
int
rcl
rorl
cmp
loopne
das
jecxz
frstor
loop
lock
jmp
or
std
add
add
add
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
leave
and
aam
pop
rol
adc
rcl
or
loopne
or
int
add
std
std
add
std
incb
cltd
lcall
lds
int
into
add
std
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
fwait
add
rol
enter
leave
mov
rol
mov
scas
scas
scas
insb
lods
stos
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
lods
add
mov
jmp
aad
std
rcl
sar
into
into
int
mov
mov
sarl
gs
push
push
add
add
add
add
add
add
add
add
jae
jae
addr16
inc
inc
das
das
sub
inc
and
add
add
mov
mov
cmpl
ret
dec
int3
int
aad
sar
int
into
dec
enter
mov
lods
jmp
mov
push
add
add
add
add
jae
je
xchg
aad
outsb
outsb
ret
bound
outsl
outsl
outsb
jb
bound
pusha
pusha
pusha
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cwtl
cwtl
lds
jb
and
add
pop
add
add
jb
jb
fwait
xchg
fwait
mov
test
mov
xchg
test
addl
push
dec
dec
inc
mov
popf
into
movsb
mov
mov
decb
mov
popf
lcall
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
movsb
test
test
test
mov
xchg
xchg
xchg
cld
pushf
popf
sahf
cmc
lcall
mov
push
push
imul
jge
mov
xchg
notl
mov
pushl
imul
call
stos
stos
lods
add
add
add
test
test
xchg
xchg
xchg
call
cltd
lcall
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
xchg
bound
std
pushf
inc
ja
cmpsl
cmp
scas
sub
outsl
pushl
aaa
jge
mov
mov
imul
int
add
add
xchg
pop
scas
movsb
stos
test
popf
popf
sahf
jmp
movsb
cmpsb
call
push
decl
inc
jae
lea
imul
push
call
or
mov
sbb
mov
and
inc
sub
les
xchg
rcrb
subl
jae
push
mov
movsl
test
test
mov
pushl
mov
decl
or
xchg
push
decl
pop
jmp
adc
ret
dec
aas
mov
rolb
call
inc
call
push
xchg
dec
cwtl
mov
mov
mov
movsb
movsb
movsl
push
add
add
imul
test
lahf
mov
pushl
mov
mov
call
push
pusha
call
add
mov
add
mov
push
xchg
fstpl
loope
mov
jmp
cmpsw
call
fwait
mov
mov
mov
cmpsl
cmpsl
test
add
add
arpl
adc
popf
fwait
fwait
cld
mov
mov
mov
mov
mov
popf
dec
jle
fwait
xor
cwtl
and
xchg
pop
pop
lcall
add
mov
dec
xor
jmp
outsb
lods
jmp
jnp
out
jge
out
jg
ficompl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
mov
arpl
lcall
add
pusha
pushl
pop
insb
fimull
in
mov
notb
leave
push
xchg
jmp
cmpsl
mov
movsb
movsl
sub
aas
inc
inc
adc
push
xchg
xchg
mov
inc
ret
ret
inc
mov
xchg
ljmp
sbb
movsb
add
mov
gs
add
aad
jns
ljmp
cli
stos
sar
sti
scas
sar
cld
scas
sar
lods
sar
in
scas
lret
mov
movsb
ds
std
incl
xor
xor
inc
scas
mov
mov
mov
aam
fnop
rcl
out
lret
cli
mov
mov
jmp
add
add
aam
jb
out
xchg
stc
nop
mov
std
rcr
inc
cld
ret
lock
ret
test
addl
stos
stos
lods
add
in
jmp
jmp
call
in
fldenv
movsl
and
pop
mov
add
fiadds
jbe
out
aaa
xchg
cli
mov
std
into
in
dec
out
shl
std
aad
call
in
hlt
enter
int
lods
scas
scas
popa
jg
jg
std
incl
std
incb
int
shrl
sahf
sbb
stos
add
mov
add
jecxz
jp
hlt
push
cmpsl
inc
loope
std
aad
std
aam
std
aam
cld
aad
cli
shl
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
lods
add
push
rorb
jg
jmp
lods
cld
out
mov
shl
call
ror
out
shl
out
rcl
call
fcmovnu
scas
ret
vsqrtps
add
add
popf
lods
xchg
dec
and
shll
int3
jbe
mov
mov
int3
adc
int3
outsl
xlat
lret
iret
pop
dec
in
loope
call
out
in
sbb
mov
mov
cmp
mov
scas
push
mov
mov
ret
and
ret
fimuls
int3
int
or
push
incb
addb
add
add
add
mov
std
add
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
shlb
mov
and
insb
push
cmp
iret
insb
ja
mov
lret
sti
fbstp
sbb
xchg
sub
in
test
add
fmul
or
inc
inc
sub
sbbl
pusha
cltd
jle
mov
in
shrb
mov
aas
and
push
pusha
and
xchg
je
sti
movsl
mov
movb
xor
push
jg
mov
sahf
test
fnsave
mov
xchg
inc
dec
fnstenv
data16
aam
cmp
jmp
or
cmp
xor
js
jne
cltd
push
call
loop
outsl
push
sbb
lea
push
shlb
xchg
stos
inc
ret
stos
out
test
in
pusha
push
decb
das
cmp
jle
push
sub
orl
and
xor
popa
inc
test
jns
pop
divb
aam
adc
out
rclb
fwait
xor
fidivs
jnp
push
lods
xchg
cld
xchg
into
xlat
outsb
add
sbb
push
jge
ljmp
adc
inc
inc
xor
jb
xchg
sub
xchg
mov
lret
inc
in
push
shlb
xlat
int3
arpl
test
dec
fbstp
ret
data16
mov
sub
insb
lds
mov
loopne
cld
adc
sahf
xor
je
mov
adc
loope
pop
and
cwtl
das
sbb
jbe
cmp
xchg
mov
fisttpl
mov
adc
sub
pop
and
mov
mov
in
mov
add
loopne
dec
ja
and
cmpsl
cmp
fadds
pop
lock
cmp
add
ja
jle
pop
out
push
lahf
xchg
sub
ja
or
and
add
nop
inc
xchg
sub
and
lret
fadds
lock
notb
mov
xchg
sub
or
mov
loopne
xor
sbbb
push
imul
cmpsb
mov
testl
lods
dec
mov
jp
aas
jl
ds
divps
inc
iret
lds
jl
xchg
push
in
push
mov
xor
jno
pop
mov
repnz
xchg
and
lret
bound
ss
xor
andb
cmpsb
addl
mov
jb
stc
aad
mov
dec
daa
sbbl
outsb
icebp
mov
rorl
repnz
push
call
lds
jne
gs
jecxz
jae
xchg
movsl
mov
add
sbb
cmp
cmp
dec
pop
cmpsl
ds
fwait
mov
pop
loop
jne
out
add
jnp
sete
inc
push
add
xchg
test
mov
mov
addr16
ds
or
xchg
dec
pop
repz
or
adc
scas
sub
fcomip
cwtl
das
and
dec
loope
inc
mov
jbe
push
imul
xchg
sbb
movsb
cmp
adc
jle
cs
loopne
shl
dec
jecxz
repz
xchg
and
inc
sbb
ja
mov
mov
out
sbb
les
cmp
loop
mov
xchg
sub
aad
xchg
push
in
dec
push
sub
mov
aaa
shlb
jp
shrl
int3
pop
icebp
std
fisttpll
push
pop
jns
push
das
sub
pusha
jb
movsb
orl
not
data16
add
aam
dec
and
repnz
mov
rclb
das
movb
jbe
arpl
xchg
jno
xchg
mov
les
mov
or
roll
test
lea
out
cltd
scas
pop
loopne
jbe
in
add
jl
or
add
xchg
cmpsb
and
in
aas
sub
lock
push
insb
add
cmpsl
test
aad
inc
fisubrl
clc
ret
dec
mov
jp
inc
fnstcw
and
test
in
popf
xor
out
cmpsb
cmp
jo
insl
jbe
pop
sahf
enter
ret
jmp
ret
in
sbbl
pop
divb
add
outsb
xchg
fwait
xor
nop
mov
ficoml
test
pop
aaa
pop
sahf
fs
xchg
insl
xchg
mov
ds
rcll
or
scas
inc
or
mov
pusha
sub
movsl
pusha
subl
mov
pop
sahf
or
das
dec
out
xor
add
mov
xchg
rol
and
ljmp
dec
cmp
xchg
xchg
mov
pop
cmc
icebp
aad
adc
sbb
dec
and
jg
mov
enter
mov
hlt
sbb
dec
adc
scas
inc
outsl
pop
cmc
pushf
outsl
lds
jl
lock
add
je
cli
test
cmpsb
cmp
movsb
and
pop
push
jle
push
scas
into
add
cmpsb
sub
pop
adcb
adc
imulb
mov
xchg
pop
mov
push
mov
jo
movsb
movsb
aaa
fidivl
jle
js
mov
iret
cmpsw
sub
pop
jle
dec
scas
les
clc
jbe
pop
cmpsl
and
outsl
push
jle
in
scas
leave
push
jmp
jne
jb
and
enter
ret
cli
jl
pop
mov
dec
in
imul
cli
andl
and
aad
imul
sti
xorl
push
push
adc
addl
push
pushf
shrl
subl
cmp
aaa
into
mov
inc
fstpl
in
test
jp
test
ja
mov
add
sbb
pop
dec
js
shrb
mov
dec
jge
inc
mov
push
out
outsl
jg
sahf
push
mov
push
mov
imul
xor
outsb
jmp
lahf
sbb
adc
aam
rorb
outsl
inc
ficompl
test
jge
arpl
xchg
adc
aaa
into
mov
fs
cmovo
mov
or
jecxz
xchg
sbb
push
push
andl
fdivp
gs
sub
nop
aas
addr16
cmc
push
cmp
mov
das
push
xchg
es
movl
mov
aas
push
lcall
cmc
pop
inc
fimull
cltd
in
test
shlb
add
mov
xchg
inc
mov
pop
mov
insl
lea
pop
lret
bound
jmp
cmpsb
fxch
data16
sbb
dec
js
jl
loopne
jae
jp
stos
add
xor
add
xchg
add
mov
call
push
cwtl
pop
aad
ss
pop
mov
insl
xor
lahf
push
testb
push
shrb
rolb
mov
push
cmc
xchg
sub
jae
mov
jl
push
call
leave
sbb
dec
ljmp
lahf
cmp
subl
or
dec
ficoml
mov
pop
mov
in
xchg
int3
aas
shlb
leave
pop
pop
xlat
outsb
mov
cltd
push
mov
int3
in
pop
icebp
mov
enter
push
insb
add
lods
mov
andb
aad
stc
push
inc
fiaddl
movsb
gs
shrl
jg
repz
sub
adc
inc
movsb
stc
nop
shlb
clc
xchg
idiv
nop
and
inc
pop
scas
jae
xor
aaa
xchg
mov
lds
jnp
loope
adc
stos
add
imul
add
stos
out
fidivrl
inc
fisubrl
pop
icebp
jae
inc
faddp
xchg
pop
cmc
enter
xchg
push
xchg
sub
lcall
xchg
push
dec
loope
mov
out
lret
pushf
xchg
push
inc
fildl
cmpsl
stc
aam
xor
push
ss
cltd
xor
mov
xchg
out
inc
fiaddl
adc
insl
inc
sub
stc
pushf
ja
stos
movsb
mov
xchg
in
pop
lock
push
jg
cmp
sub
test
mov
movsl
int
shll
jae
daa
add
test
xchg
sbb
lds
loop
pop
cli
inc
fsubrs
inc
push
addr16
push
in
test
add
out
push
mov
std
imul
dec
xlat
out
jp
inc
xlat
rcrb
nop
cld
adc
cmp
mov
jb
das
inc
rclb
rcll
out
gs
xor
pop
imul
ret
add
iret
out
and
sbb
lahf
test
lret
call
fdivl
push
inc
fadds
add
imul
mov
fdivs
push
adc
imul
pop
push
insl
les
add
mov
mov
aas
adc
add
insl
add
out
dec
out
cmp
jg
mov
sarb
loopne
movsb
adc
xor
lret
add
mov
push
mov
icebp
mov
pop
inc
mov
adc
imul
add
fmull
imul
push
adc
lret
pop
sarl
push
xor
out
nop
cmpsl
insb
ret
push
testl
out
mov
loope
bound
lret
test
lea
mov
jle
sbb
pop
out
les
jo
nop
mov
pop
data16
insb
add
mov
mov
mov
into
adc
subl
mov
fs
mov
sbb
or
push
inc
faddp
enter
push
scas
mov
pop
icebp
push
testl
clc
dec
insb
and
sbb
inc
pop
mov
push
popa
add
dec
ret
xchg
sub
sub
daa
cmc
inc
push
ja
and
hlt
dec
rol
test
loopne
pminub
addr16
mov
sub
pop
imul
or
lock
in
mov
add
jns,pt
ret
jns
cmp
xchg
jno
sahf
inc
cld
int3
push
subb
fldenv
adc
jmp
cmp
je
lahf
out
xchg
addb
mov
sbb
rcrl
or
mov
mov
sbb
inc
sbb
pop
lds
mov
adc
cmpsl
inc
adc
int3
adc
stc
jg
xlat
push
fmull
sbb
push
cltd
push
sub
push
popa
pop
xor
out
movsl
pop
push
bound
mov
into
dec
xchg
dec
repz
adc
adc
lods
movsb
and
cmp
or
dec
cwtl
jno
mov
or
mov
push
in
enter
fldl
shlb
adc
aam
xor
ret
add
testl
pop
jns
jbe
jge
mov
imul
movsb
dec
testb
je
dec
inc
in
int
pcmpgtd
push
mov
push
xor
jmp
lods
icebp
ds
sub
andb
aad
hlt
add
mov
test
adc
and
xor
jle
ljmp
xchg
mov
lea
xor
scas
or
notl
mov
lret
inc
adcb
fbld
es
sub
xor
movsl
js
cmp
bound
mov
mov
mov
mov
pop
fisttpll
mov
mov
and
cmp
xchg
rcrl
xchg
pop
sbb
jmp
ficomps
je
and
sbb
jns
fcmovnbe
inc
xchg
xchg
jp
sbb
arpl
aas
outsl
push
cwtl
push
test
adc
mov
stc
nop
xor
scas
loope
aaa
into
pop
add
lret
dec
in
aad
cwtl
add
xsha256
cmpsb
xchg
push
aad
xorb
push
imul
mov
and
mov
cmp
daa
cmp
enter
push
add
inc
fidivrs
push
out
xchg
sbb
pop
insb
mov
fs
decl
arpl
push
pop
mov
dec
clc
movsl
cmp
mov
mov
inc
push
in
jbe
fidivs
xchg
je
leave
mov
xor
jecxz
sub
dec
les
xchg
lret
lods
loop
iret
inc
call
xchg
push
xlat
testb
add
rcll
mov
push
call
jne
jg
or
popf
xor
shll
scas
xor
int
dec
push
lock
cld
xchg
cmp
sbb
ds
iret
in
dec
loop
push
push
out
das
jnp
add
fiaddl
cmp
mov
ficompl
inc
fwait
repz
gs
mov
gs
xchg
and
in
test
sbb
sarb
into
jmp
add
sbb
dec
fbstp
cmp
data16
js
mov
sbb
jb
dec
inc
sbb
cmp
shrb
jl
pop
popf
add
fbstp
mov
mov
sbb
aas
or
sbb
or
sub
stos
adc
xor
mov
cltd
pop
sbbl
fstps
jo
ss
jg
mov
jb
xchg
push
popf
arpl
stc
nop
lea
inc
dec
pop
scas
imul
nop
ficoml
mov
push
ljmp
jno
out
test
das
add
nop
daa
gs
scas
inc
iret
dec
out
pop
call
add
negl
jmp
inc
and
mov
push
hlt
inc
fdivs
andb
mov
dec
out
filds
cli
pop
insl
add
adc
push
stos
sahf
xor
jle
mov
test
lock
or
pushf
xor
add
push
clc
cmp
mov
dec
xor
enter
mov
lds
adc
add
outsl
pop
xchg
cs
push
jmp
out
out
pop
cli
pop
loop
in
adc
es
push
add
pop
rcrb
mov
jne
bound
shr
xor
jnp
and
xchg
pop
cmp
sahf
movsl
cmp
mov
mov
sub
shrl
jns
sub
out
ret
mov
mov
push
movsl
sbb
shrb
ds
cwtl
and
xchg
pop
icebp
push
xchg
movsl
in
je
add
push
sub
push
mov
fcoml
add
adc
push
jae
shrl
pushf
movsl
cmp
ret
icebp
mov
ret
pop
pop
test
mov
ja
js
sub
xchg
jg
fidivrs
loope
movsb
add
sub
je
iret
jp
loopne
call
addr16
lock
mov
dec
sbb
gs
xchg
mov
ret
fcompl
mov
xor
ja
xchg
sub
sbb
ss
loope
fstpl
sti
cmp
mov
shrb
cwtl
das
dec
test
mov
aam
push
lret
ss
jecxz
sub
sbb
lcall
and
andb
fwait
shrb
push
out
sti
and
mov
xlat
lcall
cmc
call
add
jae
xlat
outsb
push
pushf
fwait
xor
sub
push
das
int3
and
lods
xor
mov
cmpsb
adc
mov
xor
push
movsl
popf
xor
jge
out
outsb
mov
add
call
adc
jg
ds
inc
pop
xchg
push
popf
ret
pop
jns
adc
cmp
push
inc
pop
and
stc
inc
dec
loop
sahf
outsb
adcb
mov
lahf
ss
sbb
mov
out
push
cmp
lret
bound
pop
repnz
xor
jns
adcl
mov
lods
xchg
lds
mov
sub
shrl
cs
mov
ljmp
jge
movsb
cmp
cs
loop
cli
out
dec
jecxz
adc
cwtl
cwtl
pop
jle
js
adc
rorl
xor
cld
sti
mov
imulb
jge
cwtl
mov
fwait
xor
adc
push
lahf
sahf
xor
leave
mov
push
call
fiadds
push
scas
cli
testb
ficoms
inc
dec
stos
inc
xor
pop
negb
jge
lock
xor
ret
idivl
stos
inc
pushf
and
gs
pop
mov
shrl
pushl
std
pop
repnz
push
nop
daa
dec
xor
mov
data16
inc
je
cmp
arpl
push
pop
repnz
out
adc
decb
lahf
daa
and
mov
adcl
inc
or
arpl
dec
and
gs
imul
ss
sbbl
jne
cmp
aas
sahf
pop
pop
out
shrl
stc
nop
pop
testl
cmp
mov
fxch
repz
mov
pusha
testl
add
aam
pop
mov
mov
aam
dec
fsubrs
push
pop
repz
testb
stos
adc
loop
mov
push
or
xchg
sub
push
call
cmp
push
sbb
lea
push
sti
xchg
frstor
inc
fwait
negb
mov
mov
pusha
xor
aaa
into
arpl
jle
test
add
add
sbb
arpl
cmc
jns
daa
inc
push
sbbb
push
inc
fnstenv
lods
mov
nop
jp
fdivl
xchg
pop
scas
inc
test
xchg
cmc
outsl
xor
mov
aad
cli
mov
aad
sbb
push
in
fistpl
jae
std
cmp
sub
inc
loope
pusha
pop
mov
test
call
decb
in
test
mov
cmp
sar
sub
sbb
ss
repz
iret
sbbl
jae
adc
cmp
cwtl
das
sub
inc
jg
mov
add
aam
pop
test
xorl
repnz
or
or
rolb
lods
push
out
outsl
xor
jecxz
mov
test
cmp
lods
mov
out
out
scas
inc
mov
ror
fs
mov
pop
mov
jmp
addr16
jp
nop
or
push
mov
into
adc
mov
cmp
imul
dec
loop
inc
popf
xor
xor
jo
lods
inc
out
cltd
xchg
out
pop
lret
fimuls
cmpsb
cmp
movsb
pop
les
int
sahf
push
loopw
mov
lret
or
lret
push
mov
cmp
ja
cmp
sub
pop
icebp
xchg
shrl
lods
inc
jns
xchg
sub
push
cs
xchg
jns
xorb
scas
mov
shll
mov
inc
rolb
adc
test
call
adc
adc
fwait
clc
pushf
xor
inc
mov
sbbl
sbb
ljmp
lods
js
stc
out
xchg
xor
fisttpl
sbbl
sbb
xchg
sub
scas
scas
inc
dec
lea
fs
and
jmp
out
dec
leave
pusha
jge
sbb
mov
cmp
fcomp
lds
fs
cmpsl
dec
jecxz
scas
rolb
cwtl
stc
ja
es
adc
mov
imul
enter
lret
repz
jecxz
cmpl
pop
sbb
nop
pop
ss
mov
popa
clc
cltd
and
imul
push
lahf
repnz
ficoml
cmpsl
and
lds
mov
in
jle
push
sbbb
jmp
push
mov
cmp
pop
fidivs
mov
mov
fbld
cmpps
pop
xor
mov
scas
mov
ret
lahf
ss
pop
or
lret
aad
lock
add
ss
shrl
push
jnp
addr16
add
rolb
jo
sub
mov
sub
inc
insl
jp
lds
mov
std
xchg
es
or
sub
dec
jge
jge
dec
loopne
lahf
cmpsb
cmp
jo
mov
and
enter
test
push
popf
xchg
loopne
shr
jbe
mov
nop
ja
addr16
jle
dec
leave
out
pop
les
repnz
adc
cmp
jae
xchg
xchg
lcall
mov
xorl
adc
movsl
mov
dec
scas
dec
mov
xor
rolb
lods
out
lods
arpl
cmp
imul
rcrl
mov
lea
sahf
stos
test
stos
jmp
lock
pop
xchg
jecxz
or
outsb
sub
push
pop
fistl
push
or
push
sub
ret
lea
push
mov
dec
xchg
cmp
dec
fidivl
mov
add
mov
cmc
cmp
mov
inc
xchg
movsl
loop
and
insl
xchg
or
push
push
jmp
push
sub
movsl
cli
lds
imul
push
outsl
into
insl
inc
ja
push
xchg
in
icebp
sub
call
aad
inc
xor
mov
and
push
into
adcb
cmp
clc
mov
or
fwait
dec
enter
inc
insb
xchg
push
test
sbb
jb
les
xor
or
lcall
mov
lret
mov
mov
xor
hlt
mov
idivl
sub
test
js
lahf
rolb
fsubrs
shlb
jp
mov
jo
ljmp
cmp
gs
cmp
jbe
pop
fstpt
adc
jge
sub
and
mov
jno
loope
push
and
mov
fldl
imull
xchg
lods
xor
fiaddl
mull
mov
dec
jns
add
mov
jb
mov
out
outsl
mov
sbb
xchg
or
imul
data16
sbb
or
or
xor
jnp
int
gs
imul
shll
daa
jl
dec
push
dec
sti
push
pop
mov
pop
push
mov
popf
xchg
std
popl
into
movsb
sbbb
pop
adc
mov
int3
cmp
xchg
sub
call
idivb
add
setl
std
mov
mov
dec
sahf
clc
add
push
cmc
push
mov
sbb
inc
mov
xorb
cmc
sub
fcmovu
mov
jp
data16
dec
fxch
sbb
fldt
xchg
xchg
xorb
out
fiadds
sbb
adc
mov
push
fisubrs
movsb
mov
dec
pop
shrl
adc
xchg
cmpsl
clc
daa
xor
inc
push
lret
sbb
jl
and
sub
insb
in
in
push
cltd
rcll
fwait
ret
jne
mov
mov
aaa
or
jle
cwtl
fidivl
mov
mov
test
subl
cmp
ss
xchg
call
cmpps
jno
mov
test
xor
loopne
push
in
mov
cmp
orb
int3
sub
mov
insl
ss
inc
loopne
mov
dec
neg
push
pop
out
pushf
mov
push
outsb
add
xchg
push
movsl
push
add
cmp
lret
jb
push
insb
lea
lahf
into
mov
inc
jb
daa
scas
sbb
aas
aaa
fs
insb
push
andl
mov
and
test
movsl
push
inc
pop
test
dec
dec
stc
out
iret
dec
sub
fwait
cld
push
in
sbb
mov
push
cmpsl
ja
cmp
or
xor
insl
xchg
or
xor
sub
xchg
cs
icebp
sub
pop
adc
lahf
ret
stos
and
xchg
jbe
add
fwait
mov
or
sbb
rorb
sti
sbbb
mov
jnp
sbb
stos
cmp
fimull
jecxz
aas
mov
rcrb
bswap
xchg
or
bound
inc
mov
push
sub
enter
sti
std
sbb
xor
stc
push
roll
stos
mov
ja
push
adc
mov
xor
jp
pop
inc
pop
ss
stos
enter
nopl
lret
sbb
mov
push
js
stc
adc
ljmp
pop
mov
pop
push
ret
mov
not
mov
mov
inc
leave
stos
mov
pop
sahf
je
xchg
or
sub
xchg
xchg
jmp
aam
mov
out
pop
push
and
nop
in
aad
sbb
dec
inc
xchg
sub
sbb
shl
cld
repz
sub
pop
jecxz
mov
sbb
outsb
outsb
lcall
or
in
sbb
pop
es
cmp
push
xchg
pop
lcall
cmp
dec
inc
aam
popa
or
xchg
int3
push
push
outsl
aam
inc
cmpsb
lret
call
sbb
daa
jbe
jl
pop
iret
pop
int3
pop
loop
lock
into
push
iret
push
mov
shrb
inc
or
xchg
push
push
mov
mov
sbb
mov
stos
movsl
push
cmp
dec
inc
mov
mov
js
jmp
mov
push
push
in
icebp
cmp
push
mov
cmpsb
push
jge
and
mov
bound
xor
xor
push
or
mov
repnz
mov
in
pop
or
in
int3
pop
inc
out
mov
movsl
cmp
popa
ror
push
lcall
jno
sub
lods
loope
add
mov
stos
in
lods
loopne
xor
fmuls
mov
cmp
mov
pop
jne
ljmp
stos
push
fnstsw
add
push
mov
addb
stos
xchg
stc
and
pop
insb
and
xchg
jl
loope
fwait
int3
pop
imul
xor
push
jbe
aaa
imul
popa
rol
lea
not
rcrb
iret
cld
push
repnz
lcall
sbb
push
sub
fadd
mov
in
les
cmp
push
xchg
cld
inc
or
aam
sub
inc
imul
jae
push
stos
aad
push
popf
xchg
mov
mov
mov
or
js
cli
inc
hlt
test
ljmp
push
dec
dec
cwtl
stc
fwait
ja
jg,pt
fsubrl
jle
in
mov
into
dec
out
or
loopne
sahf
push
sbb
jle
flds
fldcw
mov
mov
dec
adc
sbb
mov
repz
mov
cmp
ja
ror
cmpsl
adc
data16
pop
dec
lea
or
xlat
sub
stos
inc
stos
in
lds
pushf
mov
rcll
sbb
pop
mov
ficompl
push
push
ljmpw
mov
daa
movsl
add
xor
xor
in
icebp
push
mov
popf
jp
cwtl
pusha
insl
lods
call
adc
lret
xchg
sbb
mov
dec
lahf
jnp
push
adc
or
mov
xchg
scas
loopne
mov
lret
and
jo
sbb
fcomp
push
cmp
pop
mov
cmp
lods
mov
nop
loopne
adcb
test
jmp
xchg
inc
adc
push
mov
lock
ret
pop
in
push
dec
push
mov
pop
lods
pushf
lock
xor
dec
push
cwtl
mov
enter
pusha
ja
mov
loopne
inc
inc
fdivl
addr16
mov
mov
scas
stc
jae
jbe
jb
xchg
jmp
and
xor
mov
and
dec
fdivrl
jge
cmpsl
mov
fidivrs
xchg
fldcw
dec
and
and
jnp
std
js
stc
cmp
rcrb
leave
imul
xchg
repz
pop
dec
cmp
testl
xor
jle
sub
add
xchg
push
jge
sbb
sbb
xchg
ds
jmp
dec
or
xor
imul
std
ret
mov
mov
jmp
push
stc
sbb
out
jbe
movl
mov
loopne
add
push
sub
in
mov
repnz
inc
loope
push
cmp
imull
in
lret
js
fmul
jle
cmp
pop
negl
sarb
mov
mov
stc
jns
cmp
ror
lea
sub
pushl
hlt
sbb
mov
aam
test
cmpb
imul
rolb
out
pop
pop
mov
sbbb
adc
jb
jnp
outsb
xchg
hlt
or
jae
xchg
cmpb
scas
pop
dec
gs
enter
outsb
fcoms
xchg
jmp
dec
dec
lds
test
dec
adc
jle
add
jbe
push
jmp
dec
cwtl
jno
inc
lahf
repz
ljmp
js
adc
mov
mov
jae
dec
gs
movsb
ja
bound
loopne
mov
sti
rcll
rcl
inc
dec
mov
repz
nop
pop
test
and
iret
mov
sub
mov
mov
outsl
sub
jo
jb
sbb
movsl
add
out
jg
rolb
inc
mov
popl
in
cli
mov
mov
cmpsl
fistl
inc
push
sub
inc
aaa
sahf
stos
cmp
mov
aam
add
or
dec
add
jno
fmul
enter
xor
inc
push
scas
es
loop
push
inc
jecxz
mov
mov
pop
pop
push
cltd
sti
icebp
negb
dec
jp
dec
outsb
cmp
int
sarl
addr16
mov
adc
xchg
in
mov
fists
test
int3
cmpsl
scas
add
or
call
pop
and
lods
pop
and
shr
popf
in
ret
add
inc
aas
xchg
dec
or
pop
sti
cmp
add
bound
xchg
xor
fxch
push
sub
adc
pop
mov
mov
gs
mov
loopne
or
insb
xchg
lock
xchg
jns,pt
cmp
pop
xchg
fwait
in
loop
xor
mov
flds
hlt
sarb
and
ss
movsb
jns
jae
orb
into
loopne
es
lret
push
gs
imul
cmpb
and
iret
shr
cmpb
adc
cwtl
mov
sub
mov
aam
aas
cld
loopne
inc
outsb
inc
jne
push
les
mov
add
cmp
sub
xor
cmp
or
enter
fs
mov
or
add
jns
cmpsl
cmp
and
or
outsl
push
push
inc
jecxz
jb
repz
jl
sbb
and
add
cmp
out
sub
push
cmp
movsb
fs
xchg
mov
mov
cmp
push
add
mov
jnp
or
push
cmpl
mov
repz
or
jp
adc
pop
loop
cmp
cmp
pop
pushf
xchg
dec
sub
das
out
xor
mov
sbb
adc
not
sbb
lret
mov
and
subb
inc
lods
jl
ja
dec
insl
fnstsw
lea
and
outsb
rorl
mov
xchg
out
imul
mov
add
std
dec
rep
inc
outsb
popa
pop
out
aam
call
movsb
fwait
adc
inc
in
jae
cmp
jne
fninit
add
lods
mov
and
mov
xchg
imul
push
lods
fucom
adc
sub
sbb
lds
mov
sti
sub
dec
cmp
mov
mov
in
test
dec
pop
movsl
pop
xchg
push
add
push
push
shl
lretw
lea
xchg
ret
pop
ret
mov
inc
in
lds
xchg
inc
dec
mov
lods
aad
mov
or
bnd
out
xchg
stc
fidivrs
add
push
sarb
orl
cmc
xor
mov
sahf
and
or
push
ret
inc
adc
push
leave
dec
cmc
cmc
ret
jle
or
flds
ja
pandn
xor
mov
sbb
xlat
pushl
loopne
push
add
pop
dec
clc
mov
lds
push
cmpsb
loopne
mov
add
jo
push
dec
xchg
enter
ret
pop
aaa
mov
cmp
test
xorl
xor
push
sbb
addr16
loop
loopne
mov
ds
cmpsl
ss
hlt
call
or
addl
push
or
ss
xchg
jecxz
test
ret
pop
sub
data16
push
add
xor
and
popl
fucomip
mov
mov
mov
mov
inc
leave
push
and
mov
xor
int3
mov
cmp
out
aad
out
mov
lds
mov
mov
or
fndisi(8087
jmp
cwtl
dec
stos
dec
adc
lret
or
adc
jne
in
mov
popf
addb
mov
adc
mov
es
sbb
fisttpll
cmp
dec
mov
pop
push
jns
push
inc
cwtl
pop
into
add
cmp
notb
movntps
sbb
in
add
mov
inc
push
inc
jae
xor
xor
std
jg
pop
in
mov
insb
pusha
mov
pusha
clc
mov
loop
and
lret
mov
mov
inc
xor
inc
mov
int
into
fwait
mov
inc
inc
mov
fstpt
lock
and
add
into
test
lock
enter
push
test
cld
movsb
out
mov
cmpb
xor
sti
xchg
and
jne
cs
xor
and
jl
stc
outsb
es
pop
adc
pop
mov
in
outsl
fisubs
sub
int3
sub
adc
out
repnz
mov
mov
pop
cmpsl
jle
xorl
add
dec
push
sbb
in
out
lretw
dec
inc
xchg
je
int
fldl
lret
mov
inc
mull
dec
notb
mov
mov
ret
pop
push
jge
scas
xor
insb
movsb
shll
in
push
mov
into
icebp
or
jp
test
jbe
sub
ror
cli
push
or
jne
test
jns
xor
test
pop
dec
mov
push
and
mov
in
pop
or
mov
call
sbbb
sub
fdivs
stos
movsl
mov
mov
fildl
pop
jnp
movsb
xor
mov
daa
loop
imul
decb
mov
push
les
sbb
cs
xor
fcompl
jne
shlb
sti
inc
fcmovu
loope
cmpsb
shlb
mov
pop
test
jge
mov
mov
xchg
lret
sbb
sub
arpl
gs
test
cmc
movsb
mov
inc
fs
mov
addr16
and
mov
mov
xchg
or
hlt
or
jg
jae
mov
mov
jge
jge
loopne
sarb
dec
imul
jg
inc
push
mov
add
stc
mov
out
jb
inc
cmpsl
test
dec
dec
je
subl
fbstp
cmpsl
mov
roll
mov
out
std
int
loopne
sbb
xor
xor
sahf
roll
and
pop
lods
push
es
cmpsl
cld
mov
fs
rcl
popl
push
lea
or
mov
repz
cmp
icebp
mov
cmp
inc
sub
inc
mov
shlb
data16
cmp
cltd
adc
sub
rcl
sub
fwait
pushf
loop
mov
into
int3
sub
out
mov
hlt
sahf
outsl
scas
mov
cli
inc
out
cmp
repz
aaa
stos
adc
mov
and
out
movsb
lret
mov
or
lea
xor
out
add
dec
pop
es
scas
and
ljmp
int
xor
enter
inc
pushf
movsl
mov
andl
mov
jge
aam
inc
cmp
nop
inc
in
xor
or
mov
mov
sbb
mov
js
mov
jp
xor
push
add
jo
cmpsb
and
out
lock
andb
or
aad
stc
dec
scas
enter
xchg
cmc
pop
outsl
xor
mov
sub
jle
push
xchg
lret
push
lods
pop
sar
test
dec
adc
pop
dec
mov
adcl
xor
fld
mov
rolb
cmp
aam
sub
mov
int3
push
add
ret
jp
cmpl
jnp
adc
out
push
lcall
stos
fcomps
sub
lret
fistps
xlat
pop
ja
xor
jne
cmp
inc
jle
mov
mov
mov
xchg
xchg
or
fists
push
lds
outsb
push
mov
xchg
push
pop
pop
inc
repnz
negb
cmp
fdiv
mov
rcrl
sarl
pop
push
xlat
scas
xchg
out
inc
xor
sbb
in
repnz
mov
inc
or
or
jno
push
and
jae
adc
lock
add
imul
adc
test
ds
rol
lret
sarl
call
data16
adc
sub
cli
rcl
mov
mov
stos
and
out
iret
inc
sti
dec
sub
add
pop
scas
cmp
pushl
cmp
xchg
scas
add
adc
jnp
loop
mov
cmp
popf
inc
aad
in
xor
jmp
ss
cmp
lahf
adc
rcrl
sbb
or
bnd
js
and
xor
mov
xchg
inc
lcall
das
sub
pusha
sti
mov
outsb
ret
or
jae
pop
hlt
xchg
add
inc
mov
inc
stos
aaa
aad
arpl
mov
pop
push
lods
dec
sbb
fs
cmpsl
inc
fcomps
lahf
jbe
and
in
push
test
rolb
pop
addr16
ret
xchg
inc
push
es
jno
dec
mov
lods
insl
and
mov
clc
scas
sti
sar
dec
hlt
scas
mov
nop
mov
mov
add
cmpsl
in
pusha
push
or
jmp
aad
xor
cld
sbb
in
testb
in
pop
std
push
insl
mov
mov
or
cmp
jp
push
cmp
loop
es
add
xor
daa
cmc
cli
mov
push
inc
inc
xchg
dec
mov
int3
mov
or
push
add
stc
les
cwtl
jp
pop
lods
cmp
jns
out
xchg
or
fsts
lods
lds
push
pop
jg
add
es
or
jns
xchg
ss
xlat
sbb
loopne
xchg
pop
ljmp
rcrb
dec
pop
xchg
pop
cmc
mov
and
rol
jle
inc
dec
cmp
inc
jge
ror
fcomps
pop
and
jno
inc
test
out
or
pop
cmp
bound
lods
dec
movsl
aad
fisubs
mov
pop
sbb
pop
dec
sbb
insb
pop
scas
pop
and
out
lret
test
add
pop
pop
pop
jno
pop
fwait
jl
adc
es
push
sahf
cmpl
xchg
gs
add
dec
aad
orb
pusha
cltd
mov
jmp
bswap
lods
in
sub
or
fdivrp
sbb
sbb
cmp
xlat
shrb
jo
adc
mov
inc
pop
in
pusha
jne
jmp
push
cli
jge
add
fcompl
fs
mov
dec
fnstcw
jno
xchg
bound
in
lea
test
ret
cmp
push
and
pop
fstl
mov
xchg
pop
in
ja
in
xchg
ljmp
ret
sbb
cmp
cmp
sub
je
xchg
adc
sub
repnz
add
scas
add
and
repz
push
repz
pop
pop
xor
inc
cmp
mov
mov
and
inc
cmpsb
and
jne
xchg
push
mov
imul
pushf
xchg
loopne
fstl
inc
outsl
std
fwait
and
repz
ds
inc
divl
and
or
sbbb
xchg
aaa
bound
dec
mov
fstpt
out
dec
xchg
in
mov
mov
push
lcall
jle
repnz
sub
in
or
or
cmp
mov
xor
rolb
ret
pop
mul
js
repz
dec
popa
dec
push
add
mov
lea
xor
testl
cltd
in
das
je
ficomps
mov
add
dec
sbb
scas
or
xlat
ror
xor
dec
cli
push
xchg
sub
cltd
addr16
and
add
outsl
jae
or
lock
ret
fldl
xor
lods
adc
bnd
push
aad
lret
mov
mov
out
and
dec
pushf
div
sub
ss
mov
push
mov
les
push
adc
arpl
xchg
loopne
aaa
push
addl
outsl
jmp
mov
or
and
insb
fwait
push
push
pop
outsl
mov
pushf
mov
arpl
cmc
pop
nop
mov
call
push
les
je
bound
repz
cmp
sbb
cmp
testb
mov
adc
or
data16
bnd
adc
mov
out
or
push
pusha
notl
inc
es
sbb
sub
lcall
pop
dec
inc
ret
out
push
dec
sbb
fiadds
pop
jecxz
mov
int3
inc
xchg
push
push
or
push
xor
in
mov
ljmp
pop
and
mov
movsl
mov
pop
arpl
sbb
in
push
outsl
cli
sbb
fmull
cmpsl
pop
adc
int
jmp
xchg
pushf
faddl
ret
push
jo
xor
icebp
xlat
sub
cmp
pop
and
test
jno
xrelease
pop
out
test
mov
push
stc
sbb
mov
adc
and
stos
mov
loop
or
mov
iret
test
fisttps
sarl
in
popf
int3
add
inc
xor
divb
ficompl
shr
mov
xor
fdivrl
pop
mov
flds
inc
pop
jne
nop
in
outsb
mov
adc
mov
push
fwait
pushf
fisubl
scas
adc
push
add
outsb
repnz
imul
dec
push
lock
jle
adc
jge
xor
cmp
lods
inc
roll
mov
imul
rdpmc
cmp
movb
dec
xchg
cld
sti
cmp
inc
dec
inc
in
sub
call
lds
and
sbb
fwait
xchg
and
loopne
cli
fscale
xor
cltd
in
jnp
pop
out
cli
rcrb
xor
ds
adc
mov
sbb
scas
pop
sub
ljmp
cli
shrb
push
xor
cmp
cmp
pop
es
dec
sub
ja
cli
cmc
cmp
sub
mov
lcall
pushf
cwtl
gs
xchg
xchg
jb
push
inc
repnz
stc
jno
insb
xor
ja
pop
dec
movsb
movsb
popa
cmp
mov
sbb
sbb
aaa
pop
jne
adc
in
bound
pusha
adc
sbb
inc
test
inc
jmp
mov
cmp
movsb
pop
xlat
pop
lcall
add
imull
xor
bound
mov
lods
in
rorb
rcrb
jne
mov
stc
popa
or
jnp
rorb
cmp
inc
pop
add
inc
lahf
xchg
enter
in
mov
xorb
add
in
mov
pop
scas
call
xor
pusha
scas
sbbb
push
dec
xor
leave
inc
xchg
xchg
imul
cltd
pop
dec
pop
pop
pop
xchg
wbinvd
cmp
shll
lea
pusha
cltd
in
incb
js
out
lock
sahf
insb
fbld
pushf
out
xchg
lret
jbe
push
lcall
nop
test
sub
nop
cs
and
push
hlt
pop
sub
int
fs
rep
fstps
int
xchg
mov
jp
rcll
enter
sbb
pop
stc
addr16
nop
ja
xor
or
cmp
js
je
out
and
sub
pusha
xchg
jb
push
rclb
lods
pop
add
into
and
jge
pusha
cmpsb
and
jmp
nop
jmp
and
rcll
cli
dec
xchg
aaa
jle
sub
push
xchg
inc
add
mov
xchg
xor
push
add
bound
jp
arpl
std
xchg
das
push
cmc
pop
add
mov
fwait
ljmp
push
test
adc
sub
xor
add
cmp
notl
dec
push
pushf
or
push
mov
push
lret
xchg
lods
or
jp
sub
mov
inc
daa
and
adc
outsb
push
dec
mov
enter
push
push
pop
pop
mov
mov
mov
jle
fidivrl
lret
cs
inc
mov
ljmp
sub
jmp
pop
pop
cmp
adc
daa
inc
clc
add
add
in
xchg
aad
jae
inc
or
int
ljmp
cltd
insb
jb
gs
sbb
cld
sahf
xor
fwait
leave
adc
xchg
sub
cmove
popf
pop
push
pop
jg
movsl
fstpl
dec
int3
pop
ret
adc
in
mov
sbb
mov
mov
hlt
cltd
stos
js
push
mov
add
pop
lret
mov
insl
sti
sbb
ljmp
xlat
inc
loope
idiv
out
fld
psrlw
jle
cmp
push
xor
dec
in
out
xchg
out
mov
jne
outsl
jb
outsl
xor
loop
sbb
loopne
rcrl
dec
loop
jae
iret
mov
fmuls
aam
mov
push
fisttps
dec
sub
lock
mov
dec
jl
pop
stos
push
out
xchg
and
stc
cld
mov
push
rorl
test
adc
mov
iret
sub
sub
mov
in
jl
add
lods
fsubr
mov
repz
adc
or
aaa
jb
add
jmp
mov
sti
adc
xor
add
arpl
test
enter
fisubrl
lahf
jmp
add
sub
mov
lahf
aas
xlat
cs
dec
add
cmp
in
xor
out
inc
jae
stc
push
rcll
fldcw
sub
out
sub
fidivrl
fldcw
adc
and
mov
arpl
scas
pop
xchg
dec
push
cmc
jg
sub
scas
sti
outsb
jmp
sbb
int3
sub
fldcw
lret
dec
mov
xor
mov
stos
lock
jl
stos
lock
adc
aad
cmp
jnp
xchg
in
lret
int
mov
stos
xor
frstor
mov
bound
mov
add
push
ficoms
icebp
jnp
push
sbb
push
push
or
pushf
adc
insl
dec
ja
jnp
inc
in
and
mov
imulb
test
in
sbb
sub
hlt
ds
inc
sub
test
push
jmp
sub
sub
mov
inc
pop
bound
push
icebp
insl
sahf
div
pop
lods
int
test
jge
test
std
inc
mov
inc
mov
iret
mov
push
lock
stos
ret
outsl
jns
adc
mov
sub
int
lock
js
push
lock
fsub
xor
loop
or
test
mov
inc
lods
push
mov
push
pop
out
sub
and
stos
inc
push
cmpsl
push
inc
out
push
sbb
ds
inc
sub
mov
push
int3
inc
idivl
adc
xchg
mov
sub
fdivrl
pop
aaa
or
mov
in
dec
or
mov
jmp
test
mov
add
adc
push
mov
or
mov
jo
std
outsb
cltd
mov
jne
jge
negb
cmpsl
icebp
push
rorb
lods
dec
pop
xor
fwait
test
addb
cmpsl
sbb
sbb
ret
mov
sub
xor
in
mov
fcoml
cld
jp
push
cwtl
jns
pop
xchg
cwtl
outsb
cmpsb
out
xchg
mov
fs
fucomip
adcb
xchg
sub
xor
mov
lea
loopnew
inc
faddl
add
test
fs
pop
push
or
lods
cmpsl
daa
mov
stc
inc
fisubrl
and
pop
push
dec
pusha
idivl
js
popf
jnp
iret
movl
xor
sbb
dec
jne
aas
popf
xchg
shrb
mov
repz
adc
cmp
test
jae
and
mov
stc
sarl
dec
and
insb
in
test
mov
xchg
notl
sub
inc
sbb
xchg
imul
popf
mov
sti
out
jmp
push
cmp
or
cmp
pop
fbstp
loop
xor
jne
cmp
popl
cmpsb
or
inc
xor
imul
dec
in
push
out
test
cmpsl
fsubr
xchg
sub
cli
sub
inc
jne
dec
loop
xchg
int
enter
shr
jmp
sbb
xchg
and
or
ja
daa
mov
lret
fcoml
in
loope
push
xor
cli
gs
call
mov
fldenv
rcll
sub
data16
jo
stc
mov
ret
cld
jmp
add
ss
mov
jns
xchg
xchg
push
mov
mov
stos
in
jmp
pop
adc
ss
pop
mov
test
inc
in
enter
jecxz
cmp
movsb
cmp
aas
test
sti
xchg
fucomip
fdivl
add
cmp
call
cmp
cmpsl
jo
loope
add
cmp
insb
add
lods
inc
xchg
daa
lods
test
in
ror
hlt
mov
repnz
inc
sub
sub
inc
dec
jne
ja
xor
popf
cwtl
insl
add
mov
and
leave
xor
jp
lea
repnz
shrl
lods
and
leave
pusha
pop
inc
jb
jle
sub
dec
leave
ret
jmp
dec
adc
out
test
out
outsl
push
xor
outsb
add
adc
cmp
dec
xor
stos
inc
xchg
nop
mov
out
jmp
mov
ss
je
xchg
nop
xor
leave
mov
add
ljmp
dec
xor
leave
insl
insl
jmp
adc
loop
repnz
add
sarl
pop
mov
add
ror
stos
inc
repz
inc
dec
dec
stc
ja
fidivl
cwtl
out
xchg
lret
cmpsl
ds
jecxz
jne
pop
xchg
cs
ds
loop
jb
jge
mov
xchg
not
aas
or
arpl
inc
sub
pop
icebp
pushf
js
mov
mov
loop
cld
pop
aaa
into
inc
sbb
push
mov
lods
inc
mov
ret
cld
add
push
inc
pop
jle
mov
mov
aam
out
test
cmc
shrb
push
test
cmp
sub
stos
pop
aad
hlt
mov
testb
sub
xor
lret
xlat
xchg
cltd
xor
clc
testb
inc
inc
fidivrs
popf
xor
sahf
jp
enter
into
jmp
loope
sub
movsl
insl
dec
insb
add
jg
mov
fnstenv
pop
sub
sub
jbe
enter
pop
icebp
ret
ljmp
inc
xlat
push
inc
pop
icebp
jp
mov
lods
pushf
test
das
mul
cli
xchg
and
and
inc
inc
test
out
popf
mov
xor
call
rclb
push
jmp
mov
cmp
jmp
jmp
and
inc
outsl
inc
nop
daa
jg
repnz
fisubrl
fbld
es
popa
inc
mov
sarb
stc
add
sbbl
and
sbbb
pop
jae
stc
movsl
xchg
or
out
and
pop
cmp
aas
mov
lret
jmp
sbb
pop
cmp
arpl
cmpsb
test
jb
enter
loopne
push
sbb
pop
dec
cmp
mov
outsl
and
mov
loopne
xor
adc
jae
imul
xchg
mov
mov
mov
test
shrl
or
inc
fimuls
imul
xchg
js
inc
mov
les
mov
adc
mov
inc
imul
xor
mov
fs
or
outsb
aaa
adc
mov
push
and
xchg
scas
aas
xlat
mov
jb
mul
ja
adc
pop
dec
push
mov
mov
lods
and
out
cmc
pop
mov
adc
aaa
jbe
in
xchg
cwtl
fbstp
mov
and
cmp
arpl
jno
and
mov
fisubrs
mov
sub
mov
dec
adc
cmpsb
mov
lcall
in
insb
push
cs
pop
aas
sbb
scas
mov
iret
rcl
adc
pop
sub
xchg
pop
cmp
test
lret
call
outsl
push
pop
inc
sahf
xor
scas
cwtl
mov
rcl
pop
repnz
cli
xchg
sub
test
inc
sbb
jno
jae
stos
xchg
push
mov
lret
cmc
mov
out
mov
pop
xor
test
mov
ret
test
test
dec
cmp
test
imul
sbb
fbstp
or
xchg
sub
sub
mov
inc
mov
loop
shrb
add
test
daa
repnz
mov
jne
mov
fcmovnb
cs
popa
clc
sub
push
ljmp
jb
cmpsb
mov
xchg
hlt
divl
cmp
in
jb
mov
test
mov
je
jmp
pop
sahf
xor
xor
mov
lea
shlb
adc
xor
inc
outsb
dec
andb
xchg
jo
popf
scas
cmp
adc
mov
iret
push
orl
fldcw
rcrl
shr
jns
and
negl
cld
xchg
andb
shll
stc
adc
orb
adc
scas
fwait
bound
mov
repnz
ds
pop
mov
mov
stos
cmpsl
pop
out
lds
std
cmc
jo
sub
inc
mov
fs
xchg
aam
iret
mov
xchg
out
loop
lahf
sbb
xor
lods
imul
nop
xchg
mov
jecxz
cmp
pop
movzwl
sub
push
pop
out
test
call
aam
outsb
clc
idiv
inc
loopne
sbb
inc
dec
jbe
jne
pop
xchg
fwait
cmpsb
inc
mov
jo
or
mov
mov
adc
cld
sbb
popf
inc
or
dec
jbe
mov
jl
xlat
fwait
test
shl
lods
inc
out
or
inc
adc
ss
sti
xchg
inc
mov
xchg
lods
push
out
in
loop
fwait
sbb
sbb
mov
mov
icebp
mov
jb
jecxz
and
insb
or
stos
push
sahf
sbb
aas
mov
into
add
lret
scas
dec
pop
jae
ficompl
mov
jnp
adc
inc
imul
mov
adc
xchg
outsb
test
adc
xor
inc
repz
jge
das
jbe
gs
rcrl
push
cltd
and
ficompl
popa
or
scas
xor
imul
idiv
arpl
ja
add
push
into
icebp
addl
and
sub
movsl
add
dec
out
js
dec
xchg
or
pop
call
push
leave
imul
std
xchg
jne
push
mov
xchg
sbb
and
mov
out
xor
pop
ljmp
subl
sbb
mov
stos
sbb
inc
ljmp
test
ret
dec
pusha
or
cmpsb
cmpsb
dec
in
add
mov
and
adcl
sub
rclb
imul
pop
and
add
jne
inc
jmp
test
stc
mov
lods
dec
and
fistpl
out
push
xor
aam
xor
test
mov
and
outsb
lock
in
mov
sub
outsb
leave
jnp
add
addr16
leave
nop
and
inc
ret
test
jo
mov
jge
pop
bnd
out
mov
dec
in
mov
mov
aas
mov
mull
rcrl
daa
dec
ljmp
jno
shl
loopne
loop
sub
push
xor
xchg
mov
push
fisubrl
push
shlb
das
adc
mov
inc
fdivs
aam
fiadds
test
jns
add
int3
rclb
xchg
sub
pop
es
pop
shlb
jb
je
jb
add
test
jecxz
pop
lcall
push
dec
pushf
push
and
test
mov
int3
arpl
xsha256
cmpsb
xchg
arpl
mov
mov
mov
pop
pop
out
cmp
pop
mov
pop
data16
mov
adc
stos
and
fsubrl
add
xor
aaa
adcb
andb
or
and
dec
cli
xchg
jge
mov
mov
shlb
test
int
fsubr
test
fistl
xor
or
mov
shll
push
call
cmc
pop
sbbl
push
fnstenv
pop
rclb
lret
mov
xor
push
mov
out
cmp
and
push
cmp
lock
mov
jle
addr16
mov
xchg
sub
mul
les
sbb
push
jnp
add
roll
stos
inc
loop
xchg
gs
fsubl
ret
cmp
sub
mov
inc
fidivs
push
stc
mov
outsl
push
sbb
scas
inc
repnz
gs
dec
loope
test
jg
andl
roll
das
push
xor
mov
addb
ja
repz
cwtl
arpl
mov
fidivl
cli
addr16
movsl
sbb
sti
add
mov
cmpsl
and
in
add
jmp
dec
sbb
fdivl
jecxz
ret
mov
leave
lock
pop
ds
mov
ds
push
enter
ds
outsl
mov
xor
add
shr
sbb
fimull
and
inc
pop
divb
sbb
jb
ss
adcl
dec
pop
push
cmc
push
mov
jge
xchg
dec
cmpsb
mov
fsubr
loopne
adc
jb
lret
das
in
or
mov
xchg
stos
mov
pop
icebp
mov
in
cmpsl
sbb
xchg
sub
push
jmp
setl
or
mov
cmc
mov
push
sub
inc
repnz
notl
call
insl
out
test
inc
fmulp
cmpsl
xchg
fldz
gs
and
outsl
push
fmul
cmp
mov
mov
stos
inc
lret
sub
fnsave
xchg
sub
mov
pop
mov
xor
enter
cmpsl
ds
loopne
jns
cld
xchg
push
popf
outsb
lret
sti
insl
sbb
scas
jo
popa
sub
mov
push
and
aad
gs
push
sbb
mov
or
enter
push
cmp
das
loopne
mov
movsb
out
test
pop
lahf
mov
mov
dec
test
mov
divb
out
in
test
out
std
xlat
popf
pop
scas
int
jo
mov
das
mov
sarb
and
fsts
xchg
dec
xchg
hlt
mov
jp
cmpsl
imul
fimull
sbb
imul
jg
adc
adcb
fucom
jnp
in
daa
xlat
enter
push
rclb
loope
mov
xchg
mov
sarb
mov
and
push
daa
test
fisubl
mov
cwtl
popf
pop
lock
stos
testb
cs
lahf
xor
mov
scas
addr16
and
sbbb
push
pusha
testl
std
stc
into
jmp
add
pop
repnz
enter
in
pop
neg
jge
mov
mov
enter
out
mov
mov
ja
inc
sub
mov
loopne
mov
dec
jecxz
pop
out
jle
out
cwtl
jge
cld
outsb
pop
lock
pop
sbb
push
push
sub
orb
ds
pop
cmc
jbe
pop
lock
icebp
push
in
stos
cmp
fsub
pop
icebp
aad
and
popl
cld
dec
in
xor
data16
nop
daa
and
dec
stos
repz
out
imul
adc
pop
adcl
andb
inc
ficomps
fsubl
mov
sbb
xchg
sbb
gs
in
mov
clc
cld
mov
and
fwait
sub
pop
mov
and
push
sqrtps
adcb
mov
xor
scas
inc
jmp
jo
jo
fnstsw
sbbb
aaa
andb
mov
ret
add
inc
mov
hlt
sub
inc
fstps
adc
xchg
adc
test
xchg
into
gs
mov
push
popf
and
movsb
adc
rclb
pop
orl
daa
mov
jle
outsb
mov
popf
sub
mov
sbb
fcoml
ror
les
adc
insl
scas
shll
sub
xchg
pop
mov
jno
sbb
mov
cltd
or
aad
fcompl
fcomip
or
push
jmp
jo
test
push
jae
insb
adc
sub
aaa
cltd
shlb
mov
imul
mov
cmp
push
popf
xchg
aas
int
mov
adc
es
cmp
andb
jecxz
xchg
sub
hlt
jle
daa
or
gs
mov
aad
xchg
sub
xchg
xchg
sub
outsb
pop
pusha
add
mov
mov
insl
addr16
pop
or
add
cmp
or
mov
mov
insl
and
out
xor
punpcklwd
mov
ss
fnsave
lret
leave
out
cli
or
xchg
sub
mov
subl
pop
jne
fidivl
test
pop
cmp
int3
arpl
cltd
xor
mov
cltd
mov
sub
pop
subb
dec
icebp
pop
jecxz
lahf
ss
mull
call
incb
out
or
je
sti
mov
jg
stc
cmp
ljmp
jne
shlb
pop
enter
nop
montmul
cmpsb
add
pop
lock
test
inc
jne
add
push
popf
xor
push
jecxz
inc
hlt
cmpsl
ds
xchg
ja
add
push
or
inc
jae
jp
cwtl
mov
or
mov
inc
ficoms
pop
mov
xchg
outsb
clc
sub
imul
push
repnz
push
testl
lds
cwtl
das
inc
or
into
jns
ret
pop
xor
in
outsb
mov
insb
in
jbe
pop
arpl
xchg
xchg
sahf
pop
mov
push
or
inc
inc
cmp
jno
xor
hlt
clc
dec
in
clc
out
ljmp
add
cltd
mov
mov
lea
dec
mov
mov
out
xchg
xor
xchg
movsl
mov
ret
das
movb
hlt
enter
clc
addr16
sti
lods
inc
in
xchg
mov
inc
mov
jp
divb
std
js
out
jecxz
fbstp
lock
push
push
ljmp
sub
mov
mov
fs
ficoms
out
cltd
jbe
lret
imul
mov
in
cmp
data16
in
push
sbb
mov
out
xchg
lret
mov
mov
sub
lods
xor
arpl
test
out
sbb
push
jp
or
cmp
push
in
mov
loopne
out
imul
fistps
jo
push
lock
mov
push
out
daa
imul
mov
aas
mov
mov
jbe
shll
cmpsb
mov
push
pop
aas
stos
inc
jo
aas
inc
neg
jae
xchg
xchg
scas
out
test
cld
into
gs
sbb
sub
ficoms
flds
push
jmp
into
arpl
mov
scas
lds
xchg
daa
loop
and
xchg
mov
test
data16
inc
testl
and
lea
movsl
xor
ret
jne
mov
gs
ret
in
xchg
mov
aas
cltd
xor
adc
sub
out
test
ret
shrl
lcall
mov
mov
and
gs
cwtl
in
pop
fmull
int
and
add
lret
repz
mov
data16
test
cmc
mov
jo
arpl
loop
cltd
out
xor
mov
adc
out
test
out
mov
call
les
repnz
es
ss
jg
mov
int
ss
adc
sbbl
mov
mov
je
inc
mov
lds
or
inc
xchg
mov
daa
mov
lcall
mov
dec
pop
mov
outsl
fidivl
add
shll
push
mov
mov
repz
fnstenv
outsb
add
cmp
das
cmpb
jge
inc
ret
stos
push
mov
repnz
and
movsb
push
popf
nop
pop
scas
add
lret
cmpl
mov
push
lods
cmpsb
ss
jecxz
movsl
leave
pusha
pop
lock
and
pop
scas
cltd
stos
in
out
into
fwait
out
xchg
or
sbb
outsl
ds
jo
push
lods
pop
negl
daa
lahf
fbstp
mov
pop
sahf
inc
xchg
jno
leave
mov
xchg
nop
mov
popf
ljmp
sbb
fbstp
sbb
xchg
mov
jmp
mov
sar
mov
sub
xchg
push
push
out
test
add
jbe
out
xchg
ss
nop
test
or
or
adc
pop
das
inc
test
gs
call
add
adcb
rcrl
lea
jb
push
movsb
int3
std
xchg
mov
sbb
jl
jne
iret
movsl
inc
add
jmp
xchg
and
inc
out
xlat
pop
imul
dec
out
xchg
mov
ficompl
test
or
mov
das
ret
std
nop
or
loopne
cs
pop
mov
push
out
xor
mov
mov
pop
pop
test
lea
popa
loopne
xchg
daa
movsl
add
test
sahf
test
and
jge
clc
inc
fisubrl
mov
popa
clc
jnp
and
into
pusha
inc
fcoms
mov
mul
inc
mov
adc
pop
pushf
xor
dec
scas
inc
cmpl
outsl
jnp
xor
cltd
xor
push
mov
stos
call
jo
frstor
sub
pop
lods
inc
push
and
push
push
mov
or
mov
lods
cmp
les
stos
push
in
sbb
sahf
xchg
decl
adc
adc
inc
fisubl
and
in
shll
inc
pop
enter
push
out
nop
aad
add
jp
insl
inc
add
and
xor
lods
mov
mov
enter
dec
loopne
jns
imul
inc
mov
aaa
sbb
scas
dec
rclb
inc
fnstcw
stos
aad
sbb
pusha
std
xchg
push
push
sbb
add
daa
popl
iret
xor
push
jl
pop
lock
sti
int3
arpl
lods
xchg
fildll
lcall
mov
adc
dec
cmp
mov
in
and
xchg
sub
xlat
lock
daa
loop
mov
clc
mov
ljmp
and
rorb
pop
mov
es
pop
scas
add
xchg
sub
clc
ljmp
test
jg
pop
jno
nop
daa
dec
gs
push
ds
jae
push
rcrl
out
test
sbb
cmp
fnstcw
gs
stos
add
xor
jg
call
outsl
mov
mov
sub
hlt
xchg
sbb
dec
loope
or
jg
push
pusha
testl
push
in
cld
imul
lcall
lock
ss
repz
in
in
pusha
testl
push
pop
icebp
jg
pushf
xor
push
in
add
mov
lock
mov
aaa
into
insl
testl
mov
ja
mov
lret
aam
xor
gs
sub
mov
xor
inc
es
pushf
cltd
xor
inc
out
cmp
rclb
fnsave
cmpsb
cmp
sub
xchg
inc
mov
mov
jb
mulb
and
add
xor
mov
inc
pop
divb
jg
leave
repnz
in
mov
rcrl
lods
inc
mov
xlat
outsb
mov
xchg
cwtl
xor
cwtl
fs
dec
in
in
stos
adc
aam
faddl
lds
imulb
push
jmp
mov
mov
pop
repz
push
push
js
mov
leave
pusha
dec
mov
cld
xchg
inc
pop
mov
push
pop
cmp
xor
lock
dec
loop
push
clc
pop
das
jge
popa
imul
sbb
mov
setae
add
ret
pop
std
ss
insb
scas
cmpsb
pop
hlt
pop
sub
xchg
pop
push
push
mov
sbb
mov
push
lcall
in
cmp
lods
lock
push
lcall
inc
lods
aas
jns
adc
xor
push
in
nop
mov
jnp
les
movsl
mov
testb
push
and
mov
leave
dec
in
negb
int
test
in
pusha
imull
gs
movsb
sahf
and
mov
pop
hlt
into
in
shlb
push
jg
jbe
in
pop
lock
fs
cmpsb
outsb
or
pop
and
xchg
fs
pop
repz
xor
es
or
in
popa
clc
hlt
fs
inc
cmpsb
testl
cltd
arpl
insb
add
in
ret
add
in
jb
ret
cmpsl
cmpsb
add
xchg
je
mov
fs
or
mov
xchg
pop
mov
cltd
xor
xchg
mov
iret
lret
add
mov
aad
jl
shll
jo
or
adc
adc
add
ds
dec
dec
in
jb
fbld
push
jmp
pop
pop
test
pop
xor
daa
inc
mov
add
mov
or
icebp
cmp
lahf
test
lods
cltd
xor
das
and
dec
sbb
dec
fidivl
or
cmp
imul
in
mov
scas
and
cmp
pop
mov
mov
out
dec
fbstp
cltd
stc
nop
or
jmp
and
loopne
rcl
sahf
sub
mov
mov
sbbl
notl
and
and
mov
push
xchg
sub
adc
mov
stos
and
movsb
je
mov
scas
and
jns
or
iret
push
xchg
jae
lds
test
jecxz
inc
aad
scas
inc
arpl
imul
sbb
sub
jmp
adc
in
sbb
sbb
inc
loope
daa
mov
xlat
enter
add
shlb
mov
icebp
mov
cmp
push
stos
inc
jl
lahf
ss
jne
add
test
mov
rcrl
test
cs
scas
pop
in
dec
xlat
sbb
dec
push
test
push
push
in
aas
lret
xor
push
in
mov
mov
sahf
xor
push
mov
int
sbbl
mov
cli
xchg
sti
std
and
das
lock
loop
mov
fdivr
test
fwait
in
int
lds
out
xchg
cmp
mov
test
ret
or
or
addr16
arpl
lahf
push
jns
pop
stos
mov
jge
sub
inc
fcmovu
sbb
aaa
jnp
fnstenv
mov
std
pop
in
cmpl
pop
cmc
jno
push
mov
je
dec
pushw
rcrb
testb
imul
add
xor
mov
push
das
mov
push
sub
dec
jecxz
pushf
add
outsb
mov
mov
cmp
sub
jo
outsb
jmp
sub
adc
lea
xlat
jmp
or
jp
iret
sbb
push
jnp
mov
dec
cs
pop
mov
add
fs
dec
inc
push
out
xor
ja
cmp
mov
arpl
dec
or
mov
daa
or
and
adc
xchg
push
inc
fnstsw
fmuls
mov
pop
jle
jp
popf
jge
mov
insl
push
popf
pop
dec
mov
pusha
paddw
pop
pop
dec
pop
sahf
inc
ficoml
popf
hlt
jnp
fistpl
push
in
jl
add
out
sub
lods
sbbl
cltd
xchg
sub
add
lds
stc
nop
push
jle
xchg
jo
stc
nop
mov
push
popf
push
xor
xchg
xchg
loope
les
roll
pop
fdiv
testl
mov
repz
mov
rolb
xor
clc
mov
aas
jo
out
cmp
je
sub
stos
inc
lods
xchg
sub
jb
ja
cltd
mov
lret
xchg
or
shll
jb
mov
xchg
xor
jae
out
sub
pop
add
stos
jb
pop
hlt
or
addr16
incl
adc
lods
mov
outsl
cld
sub
mov
sbb
dec
dec
insl
add
loope
cmp
mov
aad
dec
push
repz
sbb
add
jmp
push
add
jecxz
push
inc
mov
std
stos
and
mov
gs
dec
movsl
mov
pusha
orl
je
mov
push
lock
sub
hlt
inc
jbe
inc
sbb
push
fs
fs
ja
jns
ror
pop
nop
dec
dec
jg
lods
xchg
inc
adc
mov
in
adc
js
dec
aaa
dec
sub
fwait
mov
jmp
sub
cmp
inc
xor
sbb
inc
out
push
outsb
sbb
mov
adc
and
ljmp
sbb
jmp
pop
sbb
inc
cmp
orl
mov
mov
dec
xchg
push
call
shl
push
rclb
dec
jns
lods
xchg
dec
push
sub
jmp
xchg
cmpsl
inc
dec
jno
sub
mov
mov
and
jb
enter
lret
pop
add
ret
pop
add
mov
scas
pop
cmp
dec
add
pop
orl
out
idivl
add
je
and
gs
adcl
jno
xchg
mov
sub
and
push
push
jg
imul
xchg
test
xchg
les
lret
pushl
movsl
adc
sub
and
enter
dec
mov
nop
rolb
cmp
push
hlt
push
cli
sub
fisttpll
mov
pop
fdivl
xor
ja
xchg
lgs
adc
icebp
push
xchg
in
test
fcmovne
xchg
cmp
pop
adc
std
cmc
inc
daa
adc
daa
setbe
mov
mov
adc
in
outsl
mov
popa
in
push
mov
pop
ret
inc
push
repnz
fnsave
flds
ljmp
dec
sarl
into
stc
mov
jmp
mov
ljmpw
inc
jns
cmpsl
xor
mov
mov
lock
mov
push
pop
and
inc
pop
mov
mov
jmp
sti
callw
sahf
inc
xchg
out
or
pop
pop
push
loop
cld
cmp
jge
ret
push
dec
imul
jge
and
jmp
xchg
orl
movups
stos
xor
dec
xor
scas
es
hlt
mov
jae
pop
push
enter
add
stos
sub
shr
imul
cmpsb
hlt
addl
or
in
loope
xchg
pop
or
push
enter
or
mov
movsl
orb
icebp
pop
rcr
cmp
pop
loope
push
sbb
lret
hlt
pop
jnp
sbb
push
mov
pop
pusha
lea
push
jnp
out
je
in
inc
jb
sub
push
test
sub
aaa
pushf
in
lcall
inc
xchg
aas
jbe
mov
mov
ret
test
aam
fcomp
out
clc
or
inc
loope
dec
mov
out
dec
cmpsl
dec
pop
imul
pop
popf
cwtl
mov
into
enter
pop
mov
gs
cmp
insl
shrb
jbe
je
mov
dec
cmp
dec
sti
pop
jns
sar
xchg
pop
fs
ret
or
movsl
pop
mov
cmp
jge
cwtl
leave
mov
clc
or
cltd
bound
lods
std
sbb
mov
lahf
adcb
or
xorl
xchg
call
cmc
cmpsb
xor
jb
inc
add
or
ljmp
aaa
mov
jecxz
ljmp
aad
outsl
xchg
mov
xchg
clc
fists
or
enter
xchg
out
add
out
lods
and
or
mov
sbb
and
and
int
movsl
jg
scas
js
mov
sarb
sub
xchg
es
es
or
fisubrs
mov
xchg
imull
sbb
inc
imul
mov
fiadds
mov
mov
xor
xor
pusha
stc
xchg
mov
mov
and
mov
push
stc
rol
cmp
mov
and
test
daa
jnp
out
push
popa
xchg
jmp
pop
cwtl
sbb
jp
push
mov
das
lahf
lock
mov
lcall
aam
add
das
sub
in
dec
gs
sar
add
mov
shl
out
clc
out
out
jp
pop
xchg
loopne
fisubrs
push
jne
xor
jge
inc
xlat
clc
gs
mov
push
mov
rorb
stos
out
pop
sbb
pop
inc
fidivrs
sub
bound
repz
loope
adc
add
repz
jecxz
xchg
or
or
aam
xchg
mov
mov
xchg
aas
or
leave
adc
out
pop
into
daa
out
mov
fcoml
ljmp
dec
add
mov
xchg
add
call
popf
arpl
rcll
lcall
outsb
push
mov
xchg
lock
mov
adc
dec
fdivrs
repz
mov
jae
sub
stc
mov
pop
mov
push
pop
mulb
push
sub
push
inc
insb
dec
sub
dec
loope
push
dec
adc
stc
sub
lahf
cmp
push
xor
xor
stos
pop
shlb
inc
sti
inc
lcall
push
aaa
dec
addb
jp
adc
add
roll
mov
mov
mov
mov
popf
aam
xlat
add
sub
pop
adc
adc
arpl
xor
mov
out
and
dec
push
or
cmp
push
sbb
jg
mov
and
cmp
js
loope
cmp
mov
test
movsl
mov
test
mov
or
mov
adc
pop
int
or
outsl
adc
and
loope
ds
icebp
flds
pop
cmc
sbb
add
dec
mov
popa
add
orl
adc
cmpl
jb
andl
leave
mov
jb
lcall
dec
mov
iret
adc
imul
cmpsb
add
fbstp
dec
xchg
add
lahf
clc
pop
pop
test
out
add
push
in
je
lret
push
sub
xchg
push
stos
jnp
jne
fcmove
add
dec
sub
xor
out
xor
xchg
scas
hlt
or
add
pop
pop
add
mov
mov
cmpsb
adc
mov
adc
xor
xor
out
lea
jmp
add
dec
decb
add
lods
pop
push
stc
cltd
mov
dec
push
xor
aad
dec
rcl
faddl
pop
popa
rol
dec
shlb
mov
jns
lds
mov
lock
lret
enter
jne
jecxz
add
add
add
cmovle
or
lock
sub
inc
daa
aas
jmp
cmp
pop
test
mov
jbe
sub
xchg
aam
mov
jmp
or
push
js
fcmovu
cld
xchg
mov
fwait
shlb
les
icebp
repz
shl
mov
stos
psubsb
add
mov
adc
je
sbb
andl
pushf
mov
out
xchg
xchg
xchg
sub
mov
popf
out
mov
sbb
and
push
mov
popa
clc
fucom
or
push
xor
stc
mov
ret
hlt
movsb
or
ss
imulb
ret
mov
loopne
jmp
addr16
cmp
xchg
outsb
in
test
nop
sbb
jb
ss
xchg
rcrl
mov
jnp
pusha
fnstenv
adc
lcall
and
aaa
mov
out
xor
fdivrs
scas
inc
insb
stc
push
call
rorb
jge
jmp
adc
or
mov
ret
sbbl
jne
pop
cmpsl
push
mov
xor
es
inc
or
data16
adc
in
test
push
or
in
popf
sub
xor
es
mov
std
movsb
and
push
lds
cmpsl
sbb
xor
imul
pushf
es
inc
pop
mov
leave
pusha
stos
cmovae
inc
int3
out
popa
popa
clc
xchg
pop
push
nop
adc
pop
scas
fs
ret
adc
dec
loope
fcoms
or
jno
pop
flds
popf
or
es
and
pop
shrl
fnstenv
shll
add
subl
negb
mov
popf
shll
iret
push
jmp
pcmpgtb
and
insb
jl
cmpsl
xchg
xchg
insb
adc
in
mov
push
sbb
cmp
test
pop
dec
jge
add
jae
cmp
xor
lock
imul
fs
insb
cli
xchg
icebp
or
fmuls
cmpsb
or
lea
sub
jl
loop
add
xor
imul
test
xchg
push
cmpsb
popf
xor
je
cmp
stc
mov
pop
cli
dec
fnstenv
sbb
jns
lahf
testl
and
push
mov
inc
xor
jne
cmp
call
xchg
call
jns
ljmp
das
cmp
pop
mov
nop
loope
pusha
adc
out
add
dec
xchg
lea
ficoml
in
sub
int3
pop
les
idivb
lahf
scas
pop
popf
xor
shlb
mov
pop
mov
nop
and
rclb
lcall
data16
dec
loope
repz
sbb
lods
lods
or
xor
ret
shlb
push
fdivl
add
imul
push
xchg
sub
js
mov
call
push
mov
mov
mov
jge
jmp
mov
mov
and
movsb
inc
pop
icebp
xor
pop
mov
push
lret
bound
xchg
sub
imul
add
andb
mov
sar
fsts
sbb
mov
outsb
es
bound
dec
inc
fnstcw
xchg
cmc
mov
ljmp
pusha
test
cmp
loop
mov
xchg
std
sbb
fbstp
cmp
and
int
aas
mov
loopne
mov
test
push
loopne
outsb
add
in
jg
js
add
or
movsl
popf
leave
jge
cmc
mov
push
out
out
push
pop
mov
mov
pop
in
bound
cltd
push
mov
fcmovbe
je
in
lret
incl
pop
loopne
jecxz
mov
fs
sbb
testl
cld
sarb
rol
mov
je
aam
in
hlt
cmc
push
out
test
jge
jns
cltd
xor
lcall
fsubrs
xchg
sub
shl
mov
sub
rcl
pop
vpaddusw
mov
fstps
daa
mov
or
das
int
sbbb
rcrl
inc
movsl
cwtl
push
out
int
or
and
fcomps
mov
fistps
add
jecxz
frstor
movsb
cmp
ret
cli
adc
mov
in
mov
arpl
aam
dec
in
lret
or
jp
mov
fsubr
or
lock
loop
inc
ficoml
or
or
or
std
xchg
fwait
das
sbbb
mov
movsb
cmp
stc
nop
inc
inc
stos
inc
jge
xchg
cs
and
xchg
pop
jne
cltd
inc
pop
cmc
mov
sub
xor
dec
jecxz
imul
stos
stos
push
insb
adc
lcall
roll
ret
shl
mov
aad
es
mulb
mov
push
or
push
lds
xor
das
ja
mov
ret
mov
mov
hlt
aad
dec
lods
iret
data16
push
xor
cli
push
mov
mov
testl
adc
fnstenv
rolb
push
lahf
ss
test
fnstcw
fbld
imul
rcr
cmc
xchg
push
mov
xchg
loope
cmc
mov
xchg
les
fnstsw
gs
push
dec
ds
outsw
adc
pusha
pop
pop
cmc
xor
fs
pop
adc
mov
test
jmp
sbb
out
stos
cmp
stos
dec
pop
icebp
nop
lret
lds
vmovss
adc
scas
ds
ret
fisttps
or
lds
repz
xchg
jns
or
jnp
lcall
mov
cmc
dec
cmc
mov
xchg
sbb
push
data16
jb
sahf
arpl
jl
push
xchg
testb
aaa
pop
xor
mov
jmp
adc
movsb
dec
loop
cmp
xor
dec
ret
mov
jecxz
sub
sub
or
mulb
jecxz
jle
or
pop
jnp
pop
lock
pushf
push
popf
or
cs
sub
sarl
xor
movb
sbb
fsub
dec
stc
cmp
push
mov
shrl
push
pushf
xor
insl
add
pop
add
mov
lds
popf
mov
out
xchg
xlat
xchg
sub
addl
fsubrl
stos
lcall
cmp
push
jmp
cli
pop
sahf
sub
rcr
jo
aaa
sub
test
sub
mov
pop
mov
pop
int
mov
insl
loopne
testb
mov
iret
aad
cmp
push
js
mov
cltd
cmp
jecxz
mov
out
test
dec
insl
add
mov
rcrl
xchg
fs
cltd
test
mov
cmp
mov
add
test
test
lret
bound
and
mov
nop
aaa
into
mov
pop
jne
lahf
repz
fsubp
cmp
push
add
cmpsb
cmp
or
inc
fistpl
mov
xchg
das
lea
lret
jbe
outsl
insl
popf
arpl
lahf
push
cmp
outsl
jne
cltd
data16
and
xchg
adc
sbb
mov
fnsave
lea
aas
or
mov
cmc
mov
cs
sub
jne
add
xor
sub
dec
jecxz
lret
add
mov
push
out
mov
ret
mov
outsb
add
lds
sub
xlat
sti
push
popf
call
mov
jnp
or
jnp
repnz
xor
das
dec
fbld
rcr
mov
cmp
and
mov
outsb
or
xor
fisubrl
lods
inc
in
test
lret
mov
xor
inc
xlat
adc
mov
es
add
cli
mov
push
and
movsl
in
jae
fiadds
adc
sub
dec
adc
sub
ds
cmp
adc
ss
outsb
mov
push
shrl
fstpt
int
jecxz
pop
out
and
sub
mov
jae
fwait
xor
xchg
cli
xchg
pop
stos
icebp
mov
sub
or
pop
add
add
sub
mov
pop
jb
repnz
add
ret
push
int3
arpl
test
lods
inc
test
mov
iret
out
test
stc
pop
hlt
sbb
hlt
mov
mov
push
in
testb
out
mov
dec
jp
fwait
xor
ds
mov
ror
mov
push
movsl
or
es
mov
mov
ficompl
mov
sti
movsb
cmp
push
mov
push
subb
or
adc
je
es
or
xchg
flds
sahf
pop
loope
adc
mov
or
dec
stos
or
cli
adc
sub
pop
lock
pop
jmp
dec
enter
inc
xor
push
adc
lret
push
rorb
decb
fcomp
jbe
stos
push
mov
jp
in
lods
xor
dec
cltd
dec
imul
sti
mov
inc
aad
outsb
insl
popa
cmp
rcrl
subb
fbstp
mov
scas
inc
xchg
inc
jl
ret
push
adc
jge
stos
lret
stos
sbb
mov
arpl
movsl
push
mov
shlb
lcall
adc
int
jbe
lods
data16
xchg
cld
mov
mov
jmp
fadds
adc
hlt
data16
hlt
into
mov
sub
lods
std
pop
add
test
test
cmpl
data16
and
push
xchg
subb
sub
data16
jns
pop
xchg
test
mov
dec
adc
sub
sub
or
dec
or
sbb
ljmp
push
and
lock
jno
fnstcw
push
int3
dec
push
es
cmp
push
mov
jp
pop
fsubrl
mov
jp
sbb
data16
nop
movsb
es
aam
mov
jp
push
das
inc
adc
mov
mov
inc
xchg
lock
jp
cmp
iret
pop
ret
adc
scas
jp
loope
xchg
mov
les
dec
xchg
aam
dec
test
insb
fisubrl
mov
adc
sub
lret
dec
push
in
xchg
inc
jmp
enter
mov
jne
aaa
pop
icebp
push
sub
jge
xor
lods
jbe
push
pop
lds
add
nop
jmp
pop
aad
stc
movb
ret
scas
jae
out
in
mov
and
fcoms
loope
dec
stc
inc
fldcw
push
xchg
pushf
dec
pusha
idivl
mov
popf
jle
iret
roll
pushf
xor
bound
xchg
inc
mov
xchg
fsubrs
pop
xchg
cs
testb
cmp
stos
insl
scas
shrl
mov
leave
mov
loopne
out
push
adc
cmpsl
cs
mov
mov
dec
jecxz
fldcw
add
enter
mov
sarl
jge
repnz
cmp
add
shr
sbb
stos
adc
mov
stc
or
mov
or
int
xor
xchg
add
out
mov
adc
fildll
and
iret
popf
stc
popa
in
cld
sbb
jg
repz
stc
push
sub
lea
cmpsb
jp
sbb
imul
enter
fstps
cmp
inc
dec
fnstcw
dec
dec
sub
repz
dec
lods
loop
imul
sbb
ret
add
in
push
mov
pop
push
rcll
xchg
test
movsb
cmp
leave
js
sti
inc
pop
xor
loopne
test
dec
mov
ret
shrl
clc
sbb
sub
repnz
cmp
jnp
adc
int
vpmaxsw
and
dec
in
inc
xchg
sub
imul
xchg
mov
mov
and
out
sbb
test
cmp
out
test
pop
lea
in
andl
into
popf
push
ret
int3
arpl
ljmp
clc
or
mov
jle
lret
ficomps
or
and
cmp
dec
rclb
mov
push
shr
ds
hlt
stos
inc
es
xor
dec
fbstp
popf
xor
xchg
movsl
cmp
in
rclb
aaa
xchg
imul
xchg
sub
sbb
jle
fidivrs
dec
or
cmc
lods
and
adc
dec
pop
add
xchg
dec
mov
sbb
push
aaa
pop
stos
movsl
xor
dec
mov
inc
dec
enter
mov
xor
push
jnp
outsb
insb
lock
jo
pop
pushf
xchg
xchg
cmp
icebp
adc
rcl
jl
outsl
sub
fdivrl
xchg
cmp
insb
and
dec
sbb
pop
pop
mov
xor
in
push
dec
cmp
stos
out
es
aaa
xchg
popa
push
lahf
scas
int3
jno
shlb
xchg
rcll
adc
push
mov
test
push
int3
adc
pop
xor
fsubrl
pop
jno
lods
or
jbe
xor
pop
push
lahf
jne
aam
bound
mov
cmp
jecxz
cmpsl
cmpsl
push
sub
cmp
loope
mov
loop
stos
add
mov
mov
mov
dec
add
jno
mov
movsl
xchg
xchg
imulb
lahf
xlat
xor
aaa
sarb
cli
lea
orl
adc
int3
data16
inc
fistl
in
test
je
mull
lds
fwait
cs
lahf
xor
dec
fbld
outsb
mov
pushf
inc
fs
je
aad
out
xchg
sbbb
push
hlt
lea
in
ds
pop
push
scas
mov
jle
lods
xor
loopne
add
ljmp
jo
mov
push
test
pop
hlt
movsb
cli
mov
sub
dec
shrb
sbb
cwtl
shrl
push
mov
ret
hlt
inc
inc
fidivl
out
test
data16
leave
push
xchg
cs
pop
jge
inc
fmul
in
add
sar
es
and
or
lret
mov
mov
data16
out
pop
imulb
or
test
dec
sbb
das
pusha
jge
xor
or
call
push
jmp
inc
fiadds
in
push
leave
mov
imul
jbe
push
aad
pop
rcll
mov
test
xor
andl
inc
xlat
mov
xor
movsl
aam
inc
aas
or
inc
or
push
dec
filds
add
imulb
inc
fcomps
in
shrl
add
jnp
xchg
inc
jmp
dec
lock
jl
xchg
call
xchg
jnp
pop
cmpsl
out
cmc
jle
pop
inc
push
lcall
pop
incl
jae
push
inc
push
mov
ds
lret
cld
sahf
push
lods
in
sbb
data16
pop
xchg
iret
les
push
fcomps
mov
cli
aaa
addl
mov
pop
dec
jecxz
mov
mov
popa
mov
repz
add
bound
rcrl
fdivrl
adc
bound
jne
gs
lea
xchg
test
stc
fdivrl
aaa
movsl
rcrb
fndisi(8087
sahf
push
repz
and
and
daa
push
shll
aas
fimull
mov
lods
pop
or
popa
pushf
pop
and
jae
push
cmpb
mov
insl
aam
aam
sbb
leave
pusha
push
cmp
imul
jp
ds
and
scas
cwtl
pop
or
mov
mov
xchg
sub
inc
xor
ss
xlat
pop
shrb
sti
addr16
sub
lret
bound
mov
xchg
and
adc
sub
ret
mov
int
mov
push
in
cwtl
push
mov
xchg
icebp
out
stc
jo
aad
lock
push
clc
inc
fwait
mov
and
into
dec
out
jmp
sub
xorl
pop
out
test
adc
and
mov
fstpt
or
in
mov
loope
push
xchg
sub
mov
push
lods
mov
movsl
cld
js
iret
xlat
outsb
out
call
and
mov
insb
out
mov
rolb
dec
cmpsl
loope
push
ror
inc
shl
push
shl
dec
mov
inc
cmpsl
ds
in
test
sub
ja
imul
cwtl
shlb
jle
xchg
push
dec
in
xorb
dec
mov
dec
loope
and
outsl
pushf
pusha
pop
mov
mov
pop
icebp
push
adc
pusha
mov
mov
sbb
push
jmp
sub
out
test
fucomip
adc
cmpsl
les
in
outsl
mov
sti
adc
addl
adc
jns
sti
dec
loop
movsl
out
test
inc
test
jg
sub
push
push
inc
or
push
mov
and
push
cmp
push
cwtl
aad
or
or
cmp
push
or
fwait
push
pusha
shrb
cld
test
xor
clc
flds
and
sahf
fnstenv
into
or
push
icebp
fdivr
push
mov
jecxz
pusha
idiv
add
add
push
stc
push
push
xlat
outsb
dec
jbe
out
jle
test
repnz
xor
sub
dec
mov
xchg
push
push
outsl
or
cmp
hlt
mov
fisubs
shl
sbb
xor
loop
movsb
jp
push
lods
pop
lock
mov
imul
mov
xor
jnp
dec
es
cltd
mov
xchg
sub
fwait
xor
icebp
jae
loop
xor
sahf
pop
push
out
dec
insb
or
push
lahf
cmp
orb
xchg
sbbl
adc
in
orl
inc
dec
or
cmp
insb
xchg
fimuls
or
push
popf
mov
mov
insl
push
imul
imul
inc
ss
aam
dec
dec
xchg
sub
outsb
hlt
test
mov
add
adc
scas
sub
rol
add
mov
and
imulb
ds
ret
call
les
cld
outsl
push
cs
mov
pop
push
mov
push
or
sbb
dec
je
std
movsl
and
iret
mov
mov
imul
pop
sbb
addr16
mov
inc
push
fdivr
xchg
push
jns
inc
dec
nop
pop
mov
pusha
mov
cmc
cld
jns
push
stos
push
dec
repz
int3
xchg
das
cld
cmp
mov
fsubl
shll
push
lods
stos
pop
mov
ret
mov
pop
jne
arpl
nop
divb
sub
sti
xchg
xchg
sbb
ss
cmpsl
pop
xor
push
enter
popa
jnp
cmpsb
dec
insl
sub
push
lods
or
add
stos
int3
enter
pusha
sarb
jnp
loop
mov
sub
enter
cmp
cmpsl
neg
fisttpl
or
mov
adc
lret
cwtl
xor
in
sbb
ret
jnp
push
xchg
sub
jmp
pop
sbb
mov
push
jmp
iret
mov
idiv
clc
cwtl
outsb
mov
add
ret
mov
ret
mov
or
sbb
push
fdivl
loope
and
add
pop
cli
cmpsl
cmc
add
adc
leave
ja
in
jbe
cmp
adc
pusha
faddl
inc
imul
push
movsb
push
inc
jns
out
mov
js
int
sub
js
inc
mov
mov
xor
push
adc
pop
lock
fsubp
ljmp
ja
addr16
mov
test
enter
sbb
adc
popa
shrl
cmpb
mov
loop
mov
das
add
jbe
push
cmp
outsb
insb
aas
push
inc
mov
mov
sub
clc
hlt
or
loopne
pop
mov
lds
mov
pop
sbb
mov
xchg
jg
int
stos
in
test
lods
pop
adc
lods
push
enter
pushf
sahf
sub
imul
fcomps
es
sbb
xchg
sbb
sub
cmp
push
dec
rcll
mov
int
rorb
cmpsl
sbb
insl
imul
mov
jns
inc
fcompl
inc
popf
in
mov
add
and
rcll
fdivl
xchg
mov
push
fbld
call
nop
addr16
shrl
dec
leave
insl
mov
arpl
rcrb
gs
sub
popf
xor
xor
stos
jl
mov
jg
out
pop
imul
xor
fisubrs
inc
andb
push
das
push
pusha
fidivs
jbe
inc
or
hlt
lods
dec
mov
mov
pushf
mov
jp
into
xchg
jns
popf
sarl
mov
enter
adc
shrb
mov
in
inc
adc
mov
enter
rcrb
ja
add
loope
pop
pop
and
push
xor
mov
int
out
sti
sahf
and
push
scas
or
sbb
cmp
xchg
sbb
xor
out
fnsave
dec
ror
mov
cmp
fstpl
or
insb
aas
test
int
cmpb
negb
mov
cltd
mov
pop
or
js
mov
lea
out
add
and
inc
xor
jle
jnp
cmp
inc
fcoms
sub
sub
cmp
sbb
outsb
cld
xor
push
ss
adcl
movsb
leave
call
or
jl
in
sbb
pop
dec
xchg
jge
repnz
test
cmp
fwait
lretw
ljmp
fimuls
add
insb
xchg
test
outsl
mov
push
jmp
inc
cmp
xlat
pop
pusha
bound
cmpsl
xchg
int
cli
xchg
push
mov
in
imul
push
lods
pop
lret
adcl
cmp
push
lods
pop
mov
dec
inc
outsl
lret
xlat
or
cmp
cmp
jg
jge
fstpt
test
xchg
pop
pushl
inc
pop
ficompl
imul
shll
mov
and
ljmp
jecxz
and
mov
inc
aaa
add
in
loope
pushf
pop
pop
sbb
lcall
adc
iret
shlb
inc
ja
dec
ja
push
test
pop
dec
cmc
mov
cmp
lods
lea
mov
mov
imul
mov
nop
popa
xchg
popa
jnp
adc
pop
mov
inc
and
imul
adc
xchg
test
cmpsb
push
scas
and
in
adc
outsb
adc
rcr
jo
jns
inc
loope
int
sub
jp
push
lods
shr
mov
and
imul
hlt
mov
ret
repz
mov
mov
xor
and
xchg
jnp
cmp
rorb
lret
leave
jo
adc
push
icebp
mov
adc
data16
mov
inc
cmpsl
fstps
lds
mov
ja
mov
jmp
xor
xchg
scas
leave
inc
mov
mov
jnp
or
jns
or
sub
pop
cmp
pop
cmc
push
xchg
aam
leave
outsl
inc
je
ja
xchg
cs
jb
into
xchg
fcoml
imul
test
rcrl
mov
dec
push
xor
push
sbbl
ret
push
test
jno
outsl
sbb
lods
sbb
ror
adc
dec
cmpl
mov
fisubs
lock
lock
sbb
lods
lods
dec
dec
jl
enter
push
sub
imul
pop
adc
hlt
mov
inc
inc
bnd
int3
xchg
xchg
xchg
pop
mov
in
fsub
fistpl
jp
out
sub
test
mov
les
cmc
ret
pop
cmovle
inc
cmp
jo
std
mov
arpl
jbe
lds
int
dec
cmp
jmp
pushw
sahf
lahf
popl
out
or
xchg
sub
outsl
jbe
inc
jne
cmpsl
fs
cmp
cmpsb
sbb
xor
ret
dec
jbe
mov
push
sbb
mov
addl
mov
adc
lock
mov
xor
cmp
fs
adc
sbbb
or
inc
daa
pop
add
pop
fs
xchg
xor
ljmp
idiv
scas
push
jno
adc
repnz
fidivrl
jbe
jne
movsl
adc
bound
mov
jae
hlt
movsb
data16
xchg
inc
scas
scas
frstor
sbb
mov
idivb
rcl
scas
sub
xor
mov
int
and
lcall
cmpsl
sub
and
aas
add
push
subb
sub
mov
hlt
mov
xchg
and
cmc
rcl
dec
imul
jmp
or
pop
sbb
lea
arpl
xchg
scas
pusha
sbb
popf
fcomps
mov
push
testb
sahf
aam
lods
jb
fnstcw
scas
fmul
dec
cmc
mov
pop
or
push
test
ja
or
jnp
movsb
daa
cmpsb
loope
je
or
test
sub
add
or
dec
inc
jnp
sbb
call
jecxz
jo
sub
hlt
mov
jae
inc
rcr
dec
call
lret
cmpsl
jo
pop
mov
outsb
mov
mov
pop
push
push
test
xchg
jno
push
fdivrs
add
cmp
mov
adc
mov
push
movsb
cmp
ss
pop
out
push
add
mov
add
decl
add
or
xchg
mov
adc
lods
xorl
outsb
scas
inc
mov
push
mov
ja
push
les
negb
push
adc
add
pop
xor
inc
lods
daa
movsb
mov
or
lods
ficoml
push
or
sbb
xor
jnp
push
push
jg
ss
sbb
cmc
xor
std
dec
xor
sub
mov
cmp
xchg
int
les
mov
xchg
gs
mov
sbb
in
adc
cmp
push
stos
and
xchg
xchg
dec
das
iret
cmp
add
sub
mov
xchg
xor
mov
inc
aas
mov
pop
xchg
bndldx
insb
or
scas
and
xchg
hlt
push
inc
pushf
adc
add
fsubl
xor
decb
das
nop
dec
rolb
dec
mov
mov
push
xor
inc
stos
mov
in
mov
mov
pop
flds
test
in
jb
mov
lds
in
mov
sub
push
adc
adc
fdivp
mov
sbb
aas
sub
pop
dec
arpl
cmpsl
subl
enter
sub
sbb
jg,pt
xor
xchg
sbb
inc
addr16
sub
add
insb
std
xchg
lods
out
mov
mov
inc
jns
adc
rorl
jns
add
imul
popf
sub
or
inc
sub
and
mov
mov
mov
pop
push
loope
pop
pop
sub
dec
jl
mov
stc
fidivl
shrb
cmc
loop
xor
and
inc
push
add
or
push
dec
add
mov
adc
addr16
call
xor
scas
mov
inc
cmpsb
aam
ljmp
push
mov
aam
sbb
filds
mov
bound
mov
int3
mov
jbe
mov
mov
jp
test
adc
inc
dec
daa
rorb
rorb
mov
ret
sbb
out
mov
sbb
imul
jae
jne
sub
dec
adc
xor
movsb
dec
adc
cltd
bound
lods
mov
dec
stos
clc
in
xor
fisttps
pop
mul
jge
pop
pushf
mov
mov
xor
stos
mov
or
dec
out
lods
adc
mov
mov
rcll
mov
call
mov
orb
les
dec
ficompl
rorb
and
aas
fstpt
cld
mov
mov
call
loopne
daa
push
addr16
in
je
xor
rolb
out
sub
or
push
push
mov
or
es
xor
sbb
movsl
popa
xor
dec
sub
push
aas
sbb
cmp
sbb
sbb
das
fucomip
jae
and
mov
int
push
pop
sub
mov
xlat
add
or
xchg
xor
add
pop
fcoms
dec
out
hlt
fisttps
mov
fbstp
adc
cli
or
dec
push
sbb
adc
cmp
jge
int
repz
and
mov
cmp
adc
fstps
shrl
mov
filds
outsl
xchg
clc
shl
mov
movl
stos
mov
enter
pop
mov
sahf
scas
shlb
push
icebp
shrl
push
es
or
xchg
enter
jp
jle
inc
repz
outsb
insb
imul
add
and
mov
ja
xor
pop
divb
aam
clc
shlb
dec
test
je
jmp
xchg
loop
jbe
adc
int3
dec
cmp
out
mov
sbb
or
mov
dec
cmp
rcrb
subb
mov
in
inc
test
jbe
cs
stc
pop
mov
push
psubsw
cli
xchg
xor
sbb
movsb
mov
popa
sub
mov
xlat
lea
popa
jae
pop
or
imul
and
pop
sbb
jne
loop
cmp
and
daa
add
icebp
pushf
cmp
repnz
fsubs
xor
xorl
movsb
pushf
ret
add
sbb
shl
es
mov
fbstp
xor
cld
lret
adc
aad
mov
mov
cmp
inc
dec
jbe
jne
lret
mov
push
sub
int
sub
lods
je
mov
xchg
fstpl
mov
out
cmc
out
xchg
xor
int
inc
fldl
push
shlb
sbb
mov
or
in
push
data16
aas
push
push
pop
repnz
mov
jbe
add
mov
sub
ss
int3
mov
stos
in
test
xor
fstl
notl
jns
adc
daa
loopne
dec
cmpb
and
mov
filds
scas
out
mov
out
pop
cltd
add
sub
test
mov
adc
aaa
or
fildll
jp
or
aaa
push
pop
or
imul
sbb
inc
xchg
jge
lret
loopne
pop
mov
es
dec
jb
mov
cmp
test
add
lret
sbb
lcall
mov
xchg
add
adc
xor
rcr
lea
loop
fidivl
sub
insb
pop
dec
out
xchg
clc
jmp
and
and
adc
add
push
xchg
outsb
sbb
dec
adc
inc
movsb
pusha
and
cmp
jne
jge
mov
enter
push
pusha
mov
inc
mov
imul
adc
outsb
mov
nop
sub
movsl
movsb
mov
movsb
cmp
pop
rolb
inc
push
nop
mov
mov
adc
mov
mov
push
call
or
cmp
inc
dec
pop
sub
lea
pop
je
adc
add
add
xor
dec
jbe
dec
or
cmp
pop
ss
push
and
popa
inc
std
xchg
cmp
repnz
sbb
xchg
jl
cmc
xchg
clc
xor
ret
cmpsb
aas
pop
int
in
rclb
sub
cs
popa
test
fs
dec
adc
lcall
pushf
push
pop
push
jmp
enter
and
adc
loop
fs
imul
ds
xchg
add
call
imul
mov
inc
mov
popa
xor
nop
das
test
popa
mov
sub
adc
and
int
stos
inc
mov
sarb
stos
repz
and
icebp
clc
rorl
movsb
popf
add
cwtl
das
les
pushf
xor
cmp
leave
stos
repnz
sub
int
jmp
push
testb
call
repnz
cld
mov
adc
loope
insb
xchg
jle
sbb
or
outsl
movsb
cmp
movsb
inc
fcoml
pop
loopne
dec
or
jnp
loope
icebp
jp
cmpsb
imul
dec
pop
aam
out
cltd
and
imul
pop
mov
add
inc
pop
and
data16
mov
sub
insb
scas
inc
sahf
dec
scas
inc
pusha
mov
lds
or
dec
lcall
popw
daa
xor
xchg
mov
lea
shrl
adc
shrl
iret
inc
xlat
fst
stos
inc
jmp
or
andb
ja
ror
xor
lcall
jp
lock
sbbl
stos
shl
mov
lret
insl
add
or
nop
inc
mov
scas
push
movsl
jmp
bound
movsl
cmp
ljmp
mov
adc
pop
sbb
adc
pop
scas
jb
in
sbb
in
in
mov
fistl
rolb
xchg
sub
mov
jns
repnz
cli
pop
shrl
sbb
cltd
pop
and
jbe
jge
mov
ja
xchg
test
lret
mov
add
pcmpeqw
jge
dec
int3
arpl
test
testl
int3
arpl
dec
loope
sahf
int
sbb
shrl
fisttpll
mov
out
add
cmpsb
test
lret
mov
sub
dec
inc
dec
outsl
push
inc
adc
lahf
ss
cs
xchg
into
cmp
je
inc
xor
push
mov
fidivrl
int3
and
nop
xchg
push
cli
xchg
inc
xchg
insl
shl
sub
pop
sbb
jge
pop
out
dec
cs
iret
push
out
mov
ljmp
push
int
cltd
cmp
lods
jmp
pop
sahf
cmp
call
mov
and
add
rclb
and
pop
xchg
and
jae
and
out
cltd
xor
fwait
push
shrl
jl,pn
sahf
repnz
loope
sbbb
xchg
mov
xor
mov
subl
cmpsl
sub
push
cld
jecxz
lock
xchg
lret
mov
fwait
xor
or
fs
js
xchg
gs
dec
movsl
xor
xchg
jge
sub
aaa
dec
dec
pushf
cmp
pusha
sar
pop
out
int
push
in
lret
fyl2x
jmp
add
fbld
mov
jle
jnp
mov
loope
push
sbb
jle
das
nop
insb
stos
and
cmp
sbb
ljmp
mov
int3
cs
imul
lock
and
pop
push
fdivrs
or
xor
sub
cmp
dec
call
xchg
dec
scas
push
push
xchg
sub
or
in
test
aam
push
xchg
push
scas
push
and
xchg
push
movsl
cmp
out
sbb
cmp
inc
in
jg
fsubl
imul
adcb
nop
dec
xor
arpl
scas
insl
push
inc
fmull
or
scas
xchg
pop
icebp
vpavgb
mov
fiaddl
lods
pop
adc
xor
subl
insl
mov
add
pop
leave
lds
inc
mov
aas
fstps
or
jb
fwait
or
cmp
jns
scas
dec
jl
sub
or
pop
xor
fs
pushw
xchg
cs
movb
jne
jnp
sti
sub
ret
cmp
jno
shlb
sub
jnp
cmpsb
das
jns
out
jno
mov
pushf
cmp
or
loope
sbb
adc
and
push
cmp
dec
fmuls
pop
int
jge
shrb
insl
inc
ret
pop
and
fdivrs
cmp
dec
jl
cld
cmpsb
mov
xchg
out
push
jle
mov
out
loop
or
pop
jns
lea
pop
clc
adc
mov
pusha
rol
cltd
xor
icebp
stos
inc
in
cmp
loop
testb
or
mov
dec
mov
inc
sub
icebp
mov
sub
call
cmp
adc
shrb
push
add
mov
cmc
xor
shrl
outsl
xor
leave
pusha
pop
push
cmc
mov
aam
stos
mov
stos
pop
int
fs
cmp
lods
imul
jae
cmp
add
loopne
and
or
xor
mov
fistps
pusha
add
jmp
pop
into
aas
jo
adc
mov
lock
mov
scas
jo
call
push
jno
test
pop
orb
jbe
loop
sub
popf
stos
xlat
inc
push
or
jns
lods
mulb
call
cmpsl
ja
mov
and
xor
repz
divl
xor
xor
push
psubsw
call
ds
sti
cmpsb
lds
xchg
jns
popa
ljmp
inc
int
xor
fnsave
enter
or
cmp
and
ret
pusha
jge
popa
scas
orl
xor
adc
xchg
cwtl
pop
icebp
pop
and
mov
and
mov
data16
add
push
sbb
addb
jns
or
movsl
scas
ja
sub
in
int
push
loop
negb
ss
xchg
outsb
xor
and
and
ret
fildl
or
pop
adc
jle
adc
mov
incl
sbb
repz
jne
fnclex
dec
fcmovu
mov
pop
push
int3
movsl
insb
xlat
mov
loop
insl
add
mov
adcl
lret
addl
jno
fs
sarb
loopne
test
ret
pusha
cmpsl
jbe
or
in
push
push
mov
pop
cmc
mov
test
lods
adc
in
out
sbb
out
inc
movb
in
shlb
add
test
pop
push
int
arpl
jecxz
call
push
movsl
cmpsb
in
lcall
clc
pop
aad
int3
jno
aam
aaa
in
or
push
jmp
sub
mov
ds
inc
jae
enter
jo
jnp
mov
mov
inc
or
add
sub
push
jne
in
test
lods
inc
push
mov
sub
dec
and
fnstcw
cli
imul
pop
mov
mov
mov
int
push
into
dec
cmp
sti
scas
inc
mov
mov
out
add
cltd
push
lods
lret
js
jmp
lret
aad
mov
notb
call
or
jg
cwtl
clc
vpshlb
jg
sbbl
mov
int
cs
mov
push
dec
xchg
outsb
ja
jne
pop
pop
add
daa
cmpsb
cmp
push
test
jbe
jns
cmp
push
aad
bound
mov
sbb
ds
inc
lea
xchg
sub
cs
xchg
pusha
mov
push
clc
orl
test
adc
fcmovb
push
call
int3
stc
aas
ret
dec
pop
in
fildl
shll
cwtl
popa
mov
push
stc
sbb
mov
sub
cmp
jb
sub
bound
scas
cltd
xor
sbb
pop
dec
xor
pop
inc
movsb
cmpsl
notrack
push
cmp
fsubrs
pop
fdivl
jae
daa
dec
xchg
imul
lock
mov
add
cmp
mov
mov
or
push
mov
jg
xchg
daa
cmp
pop
aad
nop
lahf
testb
inc
imul
adc
jge
test
xor
adcb
push
mov
or
enter
test
pop
call
or
pop
pop
ret
in
ret
pop
cmp
mov
fs
mov
push
shufps
mov
pop
pop
mov
repnz
jne
mov
loop
jmp
or
cwtl
xchg
imul
cmp
pushf
xor
mov
test
pop
mov
mov
push
add
call
push
or
mov
je
pop
dec
int
clc
fldt
push
inc
cld
adc
lret
cwtl
xor
push
pop
mov
cmp
popa
clc
adc
sbb
andb
hlt
add
es
movsl
mov
lds
fidivrs
shr
insl
add
or
mov
xchg
ret
insl
outsl
jecxz
adc
push
in
test
aaa
add
ret
movsb
push
out
mulb
mov
xlat
sbb
jmp
or
cmp
call
in
mov
jle
loope
or
jb
lret
bound
mov
cmpb
stos
mov
iret
data16
hlt
out
xchg
pop
out
test
or
mov
lret
shl
dec
loopne
pop
dec
loopne
cmp
addr16
lcall
sbb
repz
push
mov
xchg
js
rcrl
sbb
cmpsl
je
test
adc
sbb
jge
cli
scas
jecxz
in
xchg
ret
push
lods
xor
ljmp
or
sti
sub
ds
loope
cmp
xlat
pop
inc
fstpt
xchg
inc
in
aad
add
push
out
xchg
or
lret
rorb
test
mov
repz
adc
xchg
bound
jae
cs
cmp
pop
adc
mov
sbb
rcrb
sbb
je
push
sub
jo
adc
and
xor
jmp
fisttpl
cmp
popf
dec
adc
sbbl
int
ret
loop
rcl
xchg
out
xchg
mov
scas
cmp
lahf
jg
pop
jb
or
pusha
sub
mov
mov
cmc
xchg
je
movsl
out
mov
mov
loope
scas
mov
sti
pop
jecxz
dec
fs
add
shrl
mov
add
pushf
stos
inc
push
jl
mov
fwait
xor
in
into
out
leave
pusha
loopne
mov
outsb
xchg
incb
sbb
aas
add
fucomip
fstpl
add
in
push
xchg
cltd
push
scas
jne
inc
add
shl
leave
mov
add
jmp
mov
mov
dec
out
inc
enter
nop
fwait
jno
inc
test
sahf
sbb
dec
mov
mov
sahf
pusha
js
mov
jnp
test
stos
inc
lret
mov
enter
loope
pushf
addr16
inc
test
addr16
and
mov
sub
inc
test
jb
leave
fistpll
pop
hlt
les
ja
mov
xor
out
push
std
xchg
sbb
cmpsb
outsl
lahf
mov
into
enter
std
int3
mov
decl
jle
sub
xor
addb
add
test
andl
sub
pushf
add
dec
sti
xchg
aaa
pusha
daa
out
jmp
rol
sub
or
icebp
movsl
xchg
dec
shrl
push
out
das
adc
repz
or
inc
push
cmp
fildll
in
gs
xchg
sub
push
stos
mov
mov
inc
loope
dec
notl
in
or
adc
or
je
mov
adc
pop
cs
scas
pop
je
add
imul
or
pop
hlt
sbb
std
dec
sub
pop
into
addr16
push
data16
cltd
lods
imul
jne
ret
rol
fwait
cmc
arpl
lds
in
cmp
mov
push
jno
sbbl
xchg
lea
pop
adc
push
dec
cmp
stc
in
aas
xor
push
lds
jge
xor
or
clc
xchg
call
and
out
icebp
sub
push
add
push
dec
out
mov
hlt
push
fwait
push
or
icebp
mov
mov
adc
out
cltd
or
fwait
xor
cld
bound
dec
or
jle
add
gs
mov
dec
xchg
negl
pop
and
push
addr16
movsl
mov
adc
aas
push
mov
insb
pushf
sbb
push
jmp
add
adc
sub
push
and
push
cmp
ja
sahf
jge
shl
push
loop
repz
cmpsl
enter
pop
leave
push
dec
xor
test
ljmp
js
ret
or
loop
push
neg
add
push
mov
and
ds
repnz
in
repz
inc
pusha
mov
jo
mov
push
cwtl
testl
jl
int
in
cmp
lcall
jno
popf
sub
negl
adc
xchg
insb
rcl
and
pop
xor
or
adc
lock
mov
je
mov
mov
mov
into
pop
aad
scas
inc
movsb
notb
mov
call
adc
bnd
data16
and
int3
ss
sbb
aas
cmp
addr16
rcll
dec
push
in
andb
pusha
sub
dec
inc
sarl
mov
pop
imul
arpl
push
pop
mov
pop
mov
push
sbb
test
jp
mov
loope
jb
aaa
sahf
pusha
adc
pop
xor
and
cmc
std
dec
mov
and
cwtl
pushf
mov
or
push
mov
sbb
mov
fidivs
and
mov
fwait
cmc
mov
scas
jecxz
cs
testl
out
adc
insl
jge
or
mov
dec
mov
jg
mov
movsl
mov
and
aam
orb
or
decl
push
push
cltd
pusha
movsb
xchg
sbb
push
ljmp
jno
push
lods
cmc
pusha
jae
push
rolb
movsb
jmp
or
adc
inc
ret
xchg
es
inc
add
and
inc
jecxz
out
push
leave
mull
mov
pop
loop
test
mov
mov
ret
subl
rclb
pop
aas
dec
xchg
mov
inc
mov
jg
xchg
pop
xor
mov
sti
rorw
or
shll
dec
add
stos
fldenv
mov
or
fcmovne
fcmovnu
xorl
xor
scas
cs
cmc
dec
cmp
jo
cwtl
stos
aaa
xchg
cmp
fldl
lcall
cwtl
mov
sahf
clc
sub
mov
pusha
je
ror
out
rorl
pop
stos
mov
js
or
stc
daa
inc
loop
fs
sbb
xchg
sbb
xchg
jecxz
ret
in
pop
mov
sub
cmp
mov
jge
pop
scas
pop
aad
xor
cmp
fdivp
mov
sahf
iret
data16
adc
outsb
adc
xchg
sarl
adc
enter
mov
or
roll
add
inc
mov
inc
aaa
xor
out
add
cmc
lods
fs
xor
xchg
mov
out
sub
pop
mov
ret
dec
pop
pop
cwtl
xor
jle
fsubr
sbb
pop
xor
and
hlt
fs
and
fwait
addb
iret
or
rcll
cmp
icebp
std
dec
fisubrl
js
xchg
in
pop
xchg
mov
addl
lret
jmp
lods
xchg
jle
adc
mov
inc
pop
xor
in
xchg
xchg
xchg
shr
jge
sbb
sub
push
push
lahf
ret
inc
jmp
cmpl
or
cmc
add
xchg
fxch
pusha
or
sub
stc
inc
pushf
pop
xchg
cmc
mov
mov
fs
inc
popf
xor
aaa
sbb
imul
xchg
or
das
les
mov
stos
call
xchg
fldl
and
out
mov
sub
jns
mov
repz
mov
pusha
repnz
int3
or
movlps
push
inc
stc
xor
jne
fstl
sbb
ficomps
dec
mov
mulb
fxch
icebp
cmp
and
pop
fdiv
in
movsb
es
out
mov
xor
or
sbb
mov
pop
jne
push
xor
vpaddusw
jmp
cwtl
sbb
jecxz
lods
inc
pop
lret
xor
movsb
les
ret
out
faddl
and
int3
xor
inc
in
mov
icebp
out
xor
jns
mov
xchg
ret
sarb
ficoms
movsl
ds
mov
xor
inc
sbb
sub
jns
add
inc
stc
out
test
insb
filds
dec
dec
jno
lods
dec
pop
ficomps
stc
enter
push
xchg
movsl
jp
loopne
lretw
sub
and
sahf
shrb
and
ret
icebp
clc
mov
fnstsw
test
cmp
cmpsb
or
adc
fisubrl
into
sub
scas
ror
inc
std
jmp
subl
push
mov
dec
and
out
je
mov
adc
dec
ret
add
in
hlt
or
test
dec
idivb
cmp
mov
add
jg
test
fdivrs
mov
push
sbb
aad
sbb
mov
xor
push
sub
lret
push
push
push
adc
cmp
dec
mov
inc
add
mov
fcoml
jae
fisubs
jns
dec
stos
outsb
test
shr
es
cltd
inc
call
cmp
fadds
pop
mov
rcr
sub
js
dec
pusha
idivl
insl
sub
mov
adc
pop
pop
jmp
or
mov
in
les
lock
imul
lret
ficomps
dec
sub
testl
adcl
enterw
repz
cltd
test
xor
add
popf
mov
iret
xlat
or
mov
les
dec
sub
aam
mov
sbb
outsb
jl
mov
or
sbb
xchg
mov
dec
sbb
jle
mov
test
lret
cmp
shlb
mov
out
pop
push
pop
jns
or
and
sub
sarb
mov
in
sub
repnz
dec
rolb
jp
aaa
mov
adc
jb
call
nop
adc
fst
push
push
xchg
faddl
xchg
icebp
or
arpl
lret
sbb
rcl
push
cmp
add
lock
daa
scas
out
adc
lds
xlat
push
fisttpl
and
xor
push
xchg
mov
mov
aam
or
xor
daa
add
repnz
adc
xchg
adc
push
sahf
pop
lods
jmp
xor
ljmp
pusha
push
fsts
jns
fdivrs
lock
das
jns
into
add
inc
jge
sbb
pop
stos
inc
xchg
aad
inc
jl
leave
int
popf
lret
outsl
inc
sti
dec
xor
inc
andb
lea
loop
push
xchg
jle
push
imul
mov
jle
fisubrs
adc
jmp
cmp
cmp
int3
pop
lcall
and
push
int3
cli
stos
fiaddl
or
jmp
icebp
sub
shrb
dec
in
jae
xchg
imul
jb
je
xchg
fsubrl
cmp
pop
into
push
cmp
repz
loopne
push
sub
and
jecxz
push
icebp
sbb
dec
jo
std
rcl
mov
and
ss
insb
xor
arpl
push
ljmp
int
push
stc
test
xor
stos
lret
sahf
repz
adc
mov
in
js
je
arpl
shr
sti
add
xor
inc
cmpl
sub
addr16
clc
out
aaa
cmpsl
or
out
jo
and
inc
mov
je
bound
adc
dec
mov
mov
fistps
lea
and
cmp
xor
das
pop
add
lea
jecxz
scas
and
jmp
aas
rorl
test
std
pop
repnz
xchg
out
pop
test
pop
icebp
pop
push
icebp
iret
shlb
lea
in
mov
xchg
sub
dec
test
pop
sti
in
imul
and
iret
cmp
pop
fdivp
fsts
int3
cmp
fs
fxch
gs
mov
loope
xor
mov
mov
ljmp
sarl
add
and
pop
test
dec
jecxz
cmpsb
in
repz
out
add
filds
xor
ja
mov
ret
rorl
mov
cmp
push
fwait
mov
sarb
cs
or
sarb
aas
lods
addl
arpl
lret
push
aas
loope
push
pop
mov
shlb
scas
inc
ss
addr16
pop
insb
cmp
dec
daa
testl
lret
nop
loopne
mov
pusha
add
in
fnsave
jbe
jae
sti
and
and
enter
movsl
xchg
dec
mov
std
andb
ret
int3
xchg
popa
mov
leave
imul
iret
stc
xchg
sub
xchg
dec
loope
push
cld
outsb
cmp
jno
pop
inc
stc
pop
aas
scas
jno
std
js
in
xchg
add
dec
inc
push
xchg
jmp
xor
pop
pop
or
add
pop
inc
sbb
mov
imul
sbb
jns
and
addr16
jo
out
lods
cltd
in
stos
xchg
in
xchg
adc
mov
cli
repz
stos
int
outsl
fucomi
cmp
mov
add
nop
nop
daa
inc
adc
out
scas
lahf
adc
cmpsb
cltd
loope
outsb
loope
add
cmp
dec
cmpl
fwait
add
stos
movsb
cmp
aam
jnp
jbe
xor
sarl
lock
lods
mov
xorb
fsubr
xor
mov
xchg
sbb
sub
sbb
mov
pushf
aaa
sbb
imul
push
push
lea
jns
pop
rcl
xchg
loop
addr16
lcall
ja
les
cmp
out
je
mov
popa
inc
lahf
inc
jecxz
cmpsb
jns
add
test
arpl
push
aad
jecxz
loopne
pop
popa
cmp
daa
addr16
imul
popl
dec
loop
cltd
or
inc
fs
repnz
stos
pop
clc
nop
fldt
cmp
sbb
in
imul
test
mov
inc
sub
fisubl
or
scas
cmp
pop
jb
lea
inc
mov
or
out
outsl
repz
xchg
mov
scas
jbe
inc
jecxz
adc
int
cmp
cld
insl
lock
jmp
mov
xor
std
xchg
ljmp
cmp
inc
fcmovnb
mov
jp
nop
cmp
inc
lret
add
dec
test
pop
addr16
or
push
dec
out
mov
imul
paddw
dec
cmpsb
mov
cmc
int3
arpl
in
cmp
cs
jecxz
lahf
or
sbb
sbb
xchg
sub
popf
leave
gs
and
jae
aas
push
nop
pop
inc
xor
and
rcl
lret
dec
sarl
out
mov
jns
adcb
pop
fcmovnu
aaa
fisubl
fcoms
cltd
outsl
push
mov
xchg
jl
pop
cmc
or
pop
push
or
pushf
divb
xor
movsb
pop
inc
cwtl
or
fbstp
push
mov
inc
mov
nop
sub
add
and
sbb
inc
mov
xor
std
cmp
test
dec
xor
push
int
cmp
inc
dec
ret
xor
into
enter
mov
jns
mov
fldpi
inc
in
rclb
shrl
popf
mov
or
sbb
sbb
jbe
rolb
xchg
mov
ja
mov
nop
fsts
dec
hlt
cmp
outsl
in
mov
sub
nop
dec
inc
dec
bound
push
ljmp
hlt
int
cwtl
jmp
mov
push
inc
cmp
xchg
outsl
repz
rcrl
lea
sub
adc
inc
mov
pop
fsubp
mov
pop
jno
fisubs
gs
inc
js
cs
inc
loop
jb
jg
mov
test
sub
cld
fistps
mov
ds
hlt
insl
mov
mov
push
bound
lds
pop
lahf
push
add
pop
iret
push
icebp
wrmsr
fcompl
mov
mov
out
add
movl
add
mov
fsts
orb
movsb
pop
je
test
loope
xlat
push
aas
aaa
mov
cmp
inc
mov
pop
icebp
mov
pop
mov
mov
movsb
push
mov
push
sub
xor
push
xchg
push
jae
cmp
sbb
aas
cmp
cmpsb
pop
push
jbe
ret
std
mov
sarl
pop
aad
xchg
stos
xor
xchg
pop
leave
popf
push
pop
inc
mov
sti
jno
mov
insb
fidivrs
cmp
lahf
or
xchg
aam
inc
add
pushl
xor
xchg
jl
lret
pop
jbe
or
xchg
shlb
dec
cltd
sti
push
add
lods
outsl
push
jb
pop
sub
jp
lock
pushf
aad
ljmp
and
fmull
fisubrl
mov
sub
adc
cltd
mov
sub
ret
jo
call
loopne
push
cmpb
xorl
pop
popf
hlt
or
sub
insb
sub
outsb
sbb
repz
pop
jo
int
xor
xchg
mov
test
push
inc
sub
pmullw
xchg
push
jns
xor
cmpsl
sbb
sbb
je
pop
or
incb
gs
xchg
incl
scas
aaa
mov
ret
add
pop
in
push
shlb
sbb
out
dec
sub
inc
adc
sub
repnz
cmc
cltd
dec
repnz
fisttps
mov
loope
push
sub
out
insl
dec
jbe
test
scas
push
rcr
xlat
idivl
ficomps
inc
add
iret
push
and
adc
pop
into
mov
jns
mov
pop
sbb
ret
adc
inc
sbb
shlb
mov
dec
leave
add
dec
int
les
or
rclb
xchg
push
rcr
lock
mov
lret
div
xlat
and
push
jecxz
push
imul
hlt
push
leave
dec
pop
cmp
pop
sahf
push
mov
jnp
cwtl
mov
adc
xor
popf
lds
dec
idiv
pop
call
inc
stos
sahf
sub
jle
lock
xchg
loop
lahf
jb
mov
xor
sub
out
push
jbe
add
ret
mov
outsl
pop
mov
icebp
int
aad
stc
push
push
psraw
jbe
add
movsb
repz
sbb
test
sarb
mov
lods
lret
gs
push
and
in
cmp
cwtl
decb
inc
out
add
jl
data16
xchg
in
and
inc
sbb
xchg
jecxz
adcl
and
cld
xchg
push
out
ret
pop
leave
out
sti
int
push
xchg
add
mov
mov
mov
aas
fstl
in
lcall
stc
gs
mov
jnp
jge
mov
pop
push
in
add
mov
push
inc
stos
pop
icebp
lds
push
mov
pop
cmp
inc
inc
add
mov
call
xor
xor
xor
sbb
stc
mov
pop
push
sub
mov
adc
sub
or
push
xchg
sub
mov
std
mov
xlat
mov
notl
dec
xorb
pop
out
xchg
repz
mov
mov
ret
aad
push
push
popf
ja
aam
testl
dec
cmp
jp
add
inc
pop
dec
dec
loop
jb
xchg
cmp
mov
inc
cld
rclb
and
test
dec
je
rcrb
xchg
cs
inc
loopne
sub
dec
adc
jp
pusha
imull
sahf
lds
int3
xchg
pop
mov
jge
out
out
add
ja
cs
xlat
mov
cli
cwtl
sbb
popf
out
mov
or
test
add
js
mov
pop
xchg
add
fldcw
sbb
cs
add
mov
pop
mov
mov
das
movsb
es
or
mov
pop
cmp
outsb
shll
insb
mov
ljmp
out
imul
sbb
inc
mov
lock
movsl
out
dec
aam
or
scas
je
aas
adc
xor
push
int
in
jl
cmpsl
lods
pop
js
lea
adc
and
cmpl
in
and
ss
cmc
pop
adc
sahf
cmpsb
cmp
jle
mov
in
xchg
adc
mov
pushf
sbb
mov
push
xlat
fadds
mov
sbb
pop
and
inc
jp
xchg
or
movsl
jo
leave
pop
test
xor
inc
mov
push
fstl
adc
pop
cmpsb
or
sub
push
jle
fimuls
dec
dec
or
jge
and
sbb
scas
out
cmp
pop
jmp
lods
jle
xchg
mov
int
cltd
dec
inc
mov
ret
xor
cmpsb
mov
movsl
mov
mov
sbb
inc
fcomps
mov
jle
ss
insb
test
jbe
mov
add
mov
bswap
in
sub
inc
jmp
pushf
or
mov
and
repz
mov
adc
inc
fsubrl
sub
or
js
inc
ret
cmp
push
cmp
push
icebp
xchg
stc
and
divl
mov
mov
lds
ret
xor
cmp
test
cmpsb
pop
les
inc
or
mov
test
insb
dec
loopne
adcl
out
addr16
mov
inc
dec
jge
lret
shlb
mov
pusha
mov
jae
das
mov
stos
ljmp
fdivrp
dec
sarb
fwait
push
xchg
inc
popa
xor
sbb
dec
hlt
divl
pop
out
cmpsl
push
adc
sub
or
jne
pop
frstor
mov
aaa
jno
mov
inc
xchg
mov
into
and
and
adc
pop
test
lea
pop
ljmp
jne
jle
inc
push
xchg
fsubr
ret
add
or
in
sub
or
int
xchg
js
mov
and
out
mov
call
cli
xchg
sub
pushf
popf
notl
sub
popf
sti
test
sub
movsb
shlb
jne
lock
js
mov
adc
add
cmp
xlat
sbb
imul
and
push
cmp
pop
loopne
cld
xchg
jbe
sbb
int3
sar
jno
mov
sub
jg
push
xchg
cwtl
stos
icebp
das
sub
jge
movsl
mov
mov
fdivrp
out
into
sbb
pop
push
mov
shlb
loopne
and
xchg
inc
or
out
movl
cmpsb
adc
push
addb
lea
lock
lret
aas
sub
jo
and
add
pop
fstpt
add
push
nop
gs
mov
sahf
jle
in
sub
dec
mov
js
inc
data16
jge
insb
popa
xor
xchg
mov
jns
incl
aas
inc
push
ljmp
fwait
add
jo
es
mov
push
fs
xor
leave
jae
cld
and
scas
mov
pushf
pop
sbb
pop
mov
mov
rol
sahf
xor
lock
cmp
adc
lea
ds
push
rcrl
sbb
test
les
fnstsw
push
int3
adc
scas
fwait
xor
mull
repnz
mov
sbb
xor
xor
pop
movsb
xor
jae
push
push
inc
fidivs
adc
xor
push
out
outsb
mov
leave
aad
sbb
xor
pop
imul
out
vpermilps
mov
subl
dec
movsb
inc
shl
jp
pop
les
testb
rcll
mov
cmp
sbb
cmp
outsl
ror
cmp
data16
push
repz
into
jbe
inc
jp
mov
mov
popa
xor
mov
lret
push
icebp
sarb
fldcw
in
add
aam
push
pop
mov
mov
jns
xchg
fucomip
sbb
sahf
popa
cltd
sub
enter
sti
cmp
cmp
and
in
jae
jl
adc
ret
or
ja
std
inc
test
jne
add
test
lock
or
add
ret
lahf
adc
xor
shll
inc
and
push
and
pop
lret
cld
lods
push
dec
fldcw
movsl
add
cmp
inc
popa
scas
cmp
mov
mov
jb
fucom
dec
imul
lahf
cmp
dec
mov
outsb
sbb
jnp
mov
xchg
icebp
lahf
mov
pushl
xor
bound
mov
add
fdivl
cmp
sarl
mov
test
pop
pop
mov
sbb
ret
movsl
push
jmp
into
bound
test
in
or
mov
rcll
mov
repnz
xor
sub
andb
stos
insb
inc
popa
insl
scas
mov
adc
pop
cmp
pop
dec
movsb
cmp
pop
jbe
sbb
mov
cmpsl
insl
lcall
xchg
js
sbb
ret
inc
xchg
aam
scas
cmp
lret
addr16
push
data16
jmp
int
rcl
jno
jno
xchg
cmpsl
mov
or
cmpsl
movzwl
mov
fistps
scas
leave
sub
sbb
xchg
jmp
mov
sub
push
fnsave
ret
arpl
xchg
and
dec
mov
and
int3
mov
imul
movsbl
mov
cmpsl
ja
add
shll
sub
adc
sub
loope
clc
sarb
adc
push
aas
sub
xor
cmp
dec
push
mov
ret
sub
dec
dec
sbb
arpl
clc
cmpsb
xor
xor
inc
mov
sub
shlb
inc
sbb
pop
mov
outsl
sbb
adc
cmp
jo
icebp
loopne
mov
loopne
leave
cmpsb
mov
repnz
jbe
adc
je
pop
orb
mov
mov
lea
shrl
xchg
mov
fmuls
jo
aam
lods
mov
sbb
sbb
outsb
and
test
add
test
scas
outsl
add
or
js
in
lods
cltd
fnsave
inc
push
push
popa
lret
fsubrl
mov
and
dec
xlat
cmp
bound
icebp
ja
outsl
and
lret
cmpsl
ret
cld
cmc
add
and
push
cmpsl
mov
or
push
rcrl
sub
xchg
bound
mov
repnz
icebp
mov
push
xchg
sub
adc
insl
cs
mov
jmp
je
mov
fs
popf
mov
and
mov
pop
test
shrl
ficoms
push
or
sub
mov
ss
ret
fcomip
ja
pop
xchg
hlt
and
pop
divb
add
or
add
outsb
push
pop
mov
sbb
mov
ffree
pop
cltd
sahf
cmpsb
sbb
mov
gs
push
push
add
data16
mov
xor
add
test
and
inc
mov
or
les
insb
push
pop
into
xchg
jae
loope
repz
add
xchg
lcall
fs
cwtl
mov
test
cld
popf
addl
mov
addl
mov
pop
inc
bound
xchg
push
ds
test
incl
inc
andl
insl
jge
roll
hlt
aas
test
int
xlat
lret
inc
jae
or
lret
and
cmp
ret
dec
mov
and
clc
aaa
into
jo
xlat
outsb
loopne
dec
in
enter
int
stos
fmul
sub
inc
dec
add
mov
stc
sub
xrelease
xor
cmp
into
sbb
aas
adc
inc
cli
add
and
fwait
xor
mov
xchg
push
inc
pop
test
xlat
cmc
or
popf
mov
push
ja
stos
iret
sarl
lcall
in
pushf
add
in
adc
mov
push
pop
mov
outsb
fwait
ds
and
sarb
and
push
in
daa
pop
pop
dec
cmp
data16
into
push
inc
fdivp
cmp
movsb
fdivp
aad
rcrb
ret
xabort
out
dec
iret
push
xor
sbbb
inc
jmp
scas
movsb
cmp
cmp
loop
insl
int
ds
sbb
mov
int3
and
jae
lret
xor
inc
xchg
out
in
push
ljmp
negb
cmc
adc
arpl
mov
leave
jne
adc
inc
cmp
scas
loop
cmp
and
int
add
mov
cmc
push
sbb
in
or
pop
xor
mov
data16
clc
pushf
push
mov
push
mov
cmpsb
lret
rorl
xchg
sub
icebp
or
out
add
add
js
jmp
dec
arpl
mov
xchg
shlb
add
push
mov
arpl
mov
imull
jo
and
xchg
test
jb
icebp
and
sarl
and
ret
mov
dec
sbb
addr16
sbb
push
jmp
out
sti
jo
fs
add
push
ja
push
test
pop
jae
cmpsb
fs
jp
xchg
mov
shlb
popa
push
in
int
cmp
cmp
flds
imul
cmp
jecxz
fcompl
rorb
out
stos
test
loope
adc
mov
push
fisubs
cmpsl
xchg
mov
jne
mov
es
mov
ss
stos
lds
aas
inc
sbb
mov
lret
cmc
push
jne
es
cs
fadds
hlt
xchg
je
dec
out
gs
xlat
stos
push
dec
and
cltd
inc
fldt
out
leave
jo
add
lods
push
roll
ss
cs
jne
movsl
js
mov
adc
imul
in
scas
repz
inc
xor
jle
lods
repnz
shll
pop
cmp
push
ss
inc
jo
xlat
outsb
jns
data16
push
mov
sub
std
mov
adc
stos
inc
pop
fwait
dec
push
sub
jne
sti
push
out
mov
jmp
dec
ret
jge
push
push
ret
lods
inc
hlt
xor
mov
lods
jo
xlat
out
dec
push
and
cmpsb
cs
cmp
in
pop
push
mov
adc
inc
dec
inc
xor
or
notb
mov
xchg
pop
jg
fnsave
sbb
in
dec
sub
aad
mov
or
insl
shlb
imul
or
mov
mov
sbb
pushf
shrb
sbbb
inc
jno
pop
jecxz
aaa
std
push
icebp
shrl
and
arpl
xor
sbb
arpl
and
xchg
xor
popf
gs
clc
xchg
mov
sbb
in
fldenv
adc
lret
mov
icebp
inc
out
adc
mov
xor
js
loopne
add
or
adc
jg
lods
sub
enter
imul
sarb
and
lods
pop
sbb
xor
mov
adc
addr16
push
mov
mov
aam
mov
test
ror
mov
add
push
jae
ja
out
out
cmp
popf
scas
imul
dec
shlb
and
pop
data16
mov
inc
test
push
sahf
scas
sar
jecxz
xor
inc
in
add
sub
cmp
mov
sti
jge
mov
inc
inc
jg
shrb
mov
pop
sbb
inc
lcall
popa
mov
loop
jmp
lahf
jecxz
xor
cmc
jb
in
jg
push
add
jnp
cwtl
push
fmuls
scas
pop
mov
test
xor
cmp
jns
adc
mov
mov
in
mov
pusha
jl
mov
inc
and
xor
rcl
adc
je
in
mov
ret
jno
xor
gs
fs
dec
mov
fdivrl
pop
and
icebp
push
mov
push
das
jecxz
test
fidivrl
and
pop
inc
int3
stos
in
gs
jae
mov
cmp
icebp
adc
pop
xchg
xchg
mov
fmuls
pop
jmp
sub
or
je
ficomps
icebp
repnz
pop
jmp
adc
inc
movsb
and
out
mov
cmp
jmp
rorb
scas
ds
popf
inc
sub
into
pop
push
add
cwtl
cmp
xchg
ljmp
rorl
ds
gs
dec
jge
negl
mov
fbstp
mov
call
jne
lods
mov
or
cwtl
sub
and
mov
bound
push
popf
inc
jl
jne
adc
stos
xchg
imul
adc
mov
pop
in
and
xchg
lret
mov
jmp
das
jno
cld
shrl
int
decb
cmp
xchg
dec
fsubp
outsb
dec
in
inc
out
stc
ret
test
imul
mov
sub
dec
push
ds
xor
add
aas
mov
pushf
add
ret
or
mov
mov
ljmp
and
cmp
fidivrs
fidivl
or
das
xchg
jb
mov
cld
or
std
xchg
sub
out
mov
mov
shrb
jns
xchg
pop
or
or
dec
ja
jnp
cwtl
das
fsts
and
adc
dec
ja
icebp
mov
push
paddd
xchg
sub
add
xchg
insl
cld
add
push
add
in
push
jo
je
add
in
pusha
mov
into
cli
pop
outsl
jns
fildl
lahf
in
sub
repnz
xor
sbb
dec
cmc
xchg
mull
fsubrl
outsl
enter
sbb
push
adc
mov
cmp
adc
test
mov
mov
out
imul
sti
shl
nop
jno
mov
inc
dec
add
lcall
mov
sbb
js
mov
andb
out
test
shll
repnz
leave
pop
add
xchg
sub
fdivs
cmp
sub
xor
mov
scas
imul
add
add
dec
ffreep
rorl
fsubr
scas
lods
sub
xorl
in
cmp
xor
out
push
or
imul
lret
adc
cmp
push
jae
inc
adc
jmp
mov
xor
rorb
loopne
xchg
jle
std
mov
xchg
jmp
ds
imul
cmp
xlat
jmp
mov
and
mov
cmp
daa
insl
daa
mov
cmpsb
xor
loop
and
add
aas
and
orl
test
and
pop
shl
outsl
or
scas
shlb
icebp
repz
dec
js
sbbl
push
jns
ds
aad
in
mov
mov
fisubl
cmc
mov
out
and
into
push
nopl
lcall
pop
add
and
stc
push
stc
rolb
pop
lahf
add
fucomip
cwtl
call
das
mov
lea
cmp
push
xchg
pusha
shrl
negl
cmpb
stc
out
cwtl
lahf
pop
outsb
add
negl
and
jae
imulb
fnstenv
pop
mov
cmp
lcall
jge
mov
popf
xchg
rclb
pop
shll
aaa
jp
sub
xor
mov
test
mov
divl
shlb
mov
and
adc
mov
xchg
mov
stos
lock
jno
push
cmp
aaa
enter
scas
mov
and
xchg
cmp
int
in
movsl
out
xchg
adc
pmulhuw
mov
push
in
or
cmp
pop
push
or
or
in
daa
xchg
cmpl
xchg
push
and
jecxz
stc
sbb
and
outsb
push
fists
andb
outsl
push
mov
add
mov
mov
lock
inc
and
mov
pop
test
or
jle
stc
mov
pop
cld
push
adc
jae
sahf
sub
scas
cli
mov
dec
shll
cmpl
les
cmp
std
dec
xor
cmp
dec
repz
mov
add
aam
xlat
push
ljmp
fbstp
dec
lahf
pop
xchg
scas
dec
rcl
sub
inc
mov
in
ljmp
loop
sub
test
js
dec
push
dec
cmpsb
shrl
dec
lcall
loopne
xor
sbb
dec
xor
shlb
add
nop
ss
in
nop
bound
sub
jno
aaa
je
xchg
cmpsb
pop
xchg
repz
mov
int
and
inc
mov
xchg
sbb
xor
pop
dec
push
das
mov
mov
fcmovbe
addr16
rorl
push
ljmp
mov
gs
lock
push
call
decl
push
insl
insl
shrl
or
inc
into
mov
call
aam
xor
xchg
sbb
push
and
sub
and
pop
sub
mov
mov
fdivp
sub
push
jmp
dec
into
jno
repz
or
subl
jecxz
in
mov
push
mov
push
dec
mov
rol
rorl
arpl
cmp
in
imul
sbb
or
cmp
add
xchg
test
mov
mov
scas
mov
orb
out
cmp
pop
int3
sbb
mov
mov
imul
ret
sarl
dec
inc
sbb
ret
cmpsb
cmp
fnsave
stos
das
jno
andl
and
push
push
shl
ja
fnsave
cs
jmp
mov
cmp
push
pop
cmp
cmpsb
mulb
je
jge
loop
insb
cld
and
sub
js
add
xchg
pop
add
movsl
shlb
add
test
fisubl
sbb
imul
mov
int
pusha
jge
mov
insb
lods
fsubl
popf
and
les
and
daa
in
repz
or
aam
mov
bound
jg
popa
mov
enter
loopne
enter
lock
pop
adc
mov
mov
pop
pop
fiadds
pop
sbb
lods
fdivl
xchg
lds
js
xchg
stos
fs
jb
lahf
push
adcl
mov
adc
aaa
or
sbb
push
cmc
pushf
pop
ds
cmpl
repz
fnstcw
xor
xchg
sub
jne
dec
scas
iret
xor
je
ret
push
mov
imul
inc
sbb
push
push
add
ret
mov
and
sbb
mov
in
cmp
mov
sbbl
in
hlt
sbb
je
into
pop
aas
add
out
dec
out
cmc
je
xchg
insl
in
xorl
lahf
test
xchg
imul
pop
add
mov
inc
mov
jb
xor
xor
xor
sub
out
dec
fcmovnb
orb
cmp
out
inc
mov
inc
adc
or
pop
test
sarl
cli
jl
xor
push
inc
sbb
mov
xchg
data16
stos
mov
sub
jnp
fstl
mov
dec
jle
sti
fiadds
enter
pop
inc
xchg
lds
pop
pop
and
push
hlt
jp
and
sti
sbb
scas
test
xor
or
test
out
fwait
hlt
in
mov
les
cmpb
jle
fistpl
lea
or
test
or
addr16
push
jl
pop
ljmp
push
call
cmpsl
cmp
sbb
adc
sti
jbe
rcrb
xor
enter
lahf
les
dec
cmpsb
pop
xchg
adc
xchg
clc
sub
test
jne
fmuls
shrl
loopne
pop
arpl
hlt
add
jo
mov
adc
ret
aaa
sarl
pop
fisttpll
sti
push
icebp
mov
lahf
enterw
aam
out
push
xchg
mov
mov
scas
call
mov
add
mov
pop
pop
pop
or
fistpll
sbb
mov
out
rcrb
ror
andb
sbb
inc
adcl
xchg
clc
adcl
mov
or
inc
mov
mov
rclb
xlat
sbbb
mov
mov
inc
push
add
cwtl
mov
in
xchg
mov
mul
cmpxchg
or
sarb
aaa
fsubrl
push
hlt
cmpsb
push
add
push
push
mov
das
je
or
data16
or
mov
sbb
push
lods
adc
and
mov
add
pop
js
add
xlat
pop
mov
cmp
sub
cmp
xchg
xchg
das
mov
ret
lock
jecxz
loop
mov
std
jle
push
popf
mov
shll
fs
and
xor
cmp
dec
jg
stc
or
enter
gs
push
arpl
in
and
dec
pop
adc
inc
dec
adc
lods
cmp
divb
int3
pop
repz
fwait
aaa
std
mov
adc
push
sub
xor
xchg
ss
push
sub
cs
add
sbb
inc
bound
sarl
pop
add
jo
lods
jmp
add
jmp
or
xchg
push
dec
mov
cltd
xchg
pop
insb
orb
repz
out
mulb
xchg
lods
das
xchg
xor
jmp
jb
sub
cmp
ljmp
push
jno
sub
or
pop
pop
add
test
ret
push
hlt
dec
add
jne
gs
nop
in
nop
add
dec
push
sbb
nop
mov
mov
ret
cmp
aam
adc
stos
popf
js
inc
lret
xchg
int
jle
imul
iret
pop
pusha
or
sti
enter
iret
pushw
dec
pop
add
sub
xor
lods
and
roll
xchg
mov
jb
enter
adc
dec
add
gs
push
xchg
movaps
jb
stos
inc
sub
cltd
jne
xchg
es
jg
xchg
mov
out
mov
sub
aas
in
into
mov
nop
notl
ja
sarb
test
adcb
and
rcrl
push
mov
push
js
push
sbb
jns
push
mov
mov
ja
pushl
sbb
in
pushf
sub
jge
sbb
cmpsl
inc
sahf
cli
pop
cltd
ss
inc
fstpt
fwait
in
not
mov
test
xchg
mov
addr16
sti
mov
mov
test
adc
int3
dec
cmp
fsubs
pop
cmc
inc
mov
sti
jge
jl
sbb
pop
xor
xchg
xlat
cpuid
jo
pop
xor
jne
sbb
arpl
sbb
mov
add
or
mov
aad
sub
lds
sub
jno
leave
lret
xchg
mov
xchg
bound
jo
jp
xlat
dec
mov
add
mov
sub
popl
sub
jle
loop
cmp
mov
inc
test
mov
mov
and
sbb
mov
mov
dec
je
js
stos
mov
ds
pop
push
mov
sti
cmpsl
jecxz
jmp
or
mov
mov
mov
int
ljmp
je
inc
pop
dec
test
jg
mov
or
jo
inc
pop
dec
jb
addl
cmpb
repnz
add
mov
lds
mov
aaa
mov
sub
pop
xor
push
jae
cmp
sbb
xor
fbstp
push
add
rcrl
or
xchg
addr16
sub
xor
adc
mov
mov
into
cli
adcb
loopne
mov
ja
sub
lods
add
daa
inc
mov
pusha
adc
jmp
mov
push
push
or
push
mov
fidivl
sbb
adc
sub
mov
loopne
mov
inc
fisubl
sub
jno
test
jg
arpl
add
insl
jge
mov
adc
insb
lds
sbb
scas
xchg
sbb
or
cli
xchg
stos
rclb
pusha
lcall
jge,pt
sub
pop
imul
and
popa
mov
inc
out
pop
and
or
cmpsl
mov
mov
push
adc
push
push
frstor
ret
and
jp
repz
push
icebp
popa
out
outsb
adc
movsl
mov
lcall
push
ljmp
aaa
mov
addr16
xchg
adc
or
inc
mov
andb
adc
xchg
mulb
xchg
in
std
xchg
dec
xchg
cmpsb
std
mov
cs
data16
xor
mov
fcmovu
or
or
inc
cld
mov
popf
inc
pop
jecxz
fsubrp
negb
or
test
leave
pop
repnz
or
lea
pop
clc
or
sarl
add
scas
sbbl
fisttpll
nop
mov
int3
push
incb
ds
or
xchg
cli
jne
aad
dec
lret
mov
fidivl
fildll
inc
inc
dec
cmp
arpl
push
out
push
or
cltd
cmpsl
pop
sbbl
mov
int
mov
sub
icebp
add
xchg
repnz
jmp
xor
stc
mov
rol
push
std
mov
mov
call
pushfw
xor
xor
jle
add
inc
push
mov
shrl
adc
push
shl
xchg
int3
mov
cmc
shl
repz
mov
incl
loope
dec
ss
dec
call
fucomp
pop
xchg
cmpsb
mov
ret
and
out
push
cwtl
ret
negl
pop
push
in
ret
or
lods
xor
cli
jecxz
movsb
pop
into
pop
pop
jl
test
mov
sbb
jecxz
pushf
addr16
rcll
mov
or
mov
dec
mov
jno
sub
adc
rorb
pop
and
jge
out
sub
sbb
lret
mov
daa
push
andl
loopne
and
jmp
xor
out
sub
fildll
sbb
es
clc
sub
and
or
jg
repnz
xlat
movsl
and
xor
fs
dec
scas
jp
mov
lret
mov
dec
lock
mov
xor
ffreep
sub
or
lds
fldt
pop
jb
aaa
inc
ds
jecxz
dec
mov
lock
iret
std
cmp
mulb
jmp
adc
jmp
jns
lahf
dec
mov
mov
ljmp
rorb
hlt
xchg
pop
bndstx
xchg
mov
xchg
sbb
fnstenv
jle
mov
inc
mov
push
out
cmp
lds
mov
dec
mov
mov
dec
jl
mov
and
sub
push
jle
lock
std
push
adc
sbb
xchg
ja
mov
out
dec
push
imul
adc
and
insl
mov
mov
mov
and
push
loope
jb
cmp
xchg
adc
icebp
mov
xchg
mov
push
sbb
ja
shr
jmp
aaa
cmpsl
jns
mov
mov
fisubs
repz
daa
adc
sbb
mov
divb
or
mov
push
insl
aas
pushl
ret
xchg
jns
in
add
jno
lcall
push
ljmp
mov
and
sarl
and
hlt
pop
xor
xor
xchg
mov
pop
xor
push
mov
sarb
push
xchg
mov
xchg
loop
arpl
mov
fdivrs
jmp
xor
xchg
pop
movsl
or
imul
repz
inc
push
movsl
xor
movsb
xor
sub
scas
outsl
sahf
addr16
xor
out
or
in
aas
xor
dec
sub
hlt
pushf
and
mov
adcl
repnz
push
mov
jo
ss
pop
aam
mov
lods
jmp
loope,pt
nop
dec
fimuls
fiaddl
and
pop
incb
pop
lds
aam
xchg
ret
stos
and
adc
dec
jns
shrb
push
adc
jae
or
pop
cmpsb
cmp
jno
aas
xchg
pop
xchg
pop
test
xchg
imul
pop
iret
push
imul
add
add
and
xor
pushf
ret
cmc
cmpsb
ljmp
push
sahf
and
push
and
aam
mov
push
sbbb
xor
mov
xchg
inc
mov
or
and
xor
mov
add
dec
mov
call
out
xor
xchg
bound
scas
les
int
imul
inc
sbb
addr16
and
cmc
pop
jp
pop
les
mov
clc
and
pop
mov
pop
mov
ror
adc
mov
shlb
test
rclb
jbe
daa
push
add
pop
adc
pusha
xchg
dec
push
aad
sub
fstpl
push
adc
mov
sub
sbb
movsb
or
jecxz
aam
xor
ret
scas
jb
sub
push
mov
mov
push
xor
test
mov
shl
sub
adc
mov
sub
add
cmc
sub
or
rclb
mov
hlt
pop
loop
bound
push
enter
lahf
or
jnp
mov
or
nop
mov
mov
cmpsb
push
loope
sub
fistpl
mov
cmp
xor
aaa
fldenv
outsl
pop
lods
adc
mov
cmp
xchg
div
dec
mov
std
jo
pop
iret
roll
fiaddl
popa
push
out
das
adc
cli
dec
aaa
into
inc
scas
mov
jecxz
scas
and
aam
jge
jne
aaa
iret
jno
insb
add
shlb
mov
sbb
js
test
test
push
and
outsb
push
ja
test
fistps
ljmp
in
stos
hlt
nop
mov
mov
dec
push
ja
je
xor
lods
or
adc
push
sub
addb
shl
xor
push
push
hlt
test
adc
inc
scas
xchg
ja
sbb
fisubs
inc
and
jns
pushf
outsl
popa
push
in
inc
push
rolb
push
call
in
roll
jle
inc
daa
out
lahf
xchg
and
mov
data16
arpl
iret
orb
lods
ror
ror
into
sub
cmp
jl
and
push
cmpsb
mov
inc
insb
sbb
mov
imull
pop
dec
pop
jns
lret
mov
das
sub
mov
mov
test
std
test
push
shlb
jb
cmp
sub
dec
icebp
mov
ret
outsl
popf
movsb
mov
popa
xchg
scas
xchg
mov
dec
sub
shrl
sarl
xchg
push
cmpsl
cwtl
decb
mov
xor
rcrb
xor
cld
add
sahf
sahf
dec
push
sarb
pop
imul
or
ja
adc
call
pop
push
nop
push
filds
and
insl
clc
subl
dec
dec
popa
mov
mov
pop
mov
aad
ja
dec
test
sub
lea
mov
inc
xlat
add
dec
mov
ja
ljmp
sahf
xor
mov
add
scas
rcl
clc
inc
dec
aaa
xor
aaa
push
mov
dec
pop
icebp
jbe
fcmove
push
xchg
js
enter
push
sub
mov
std
mov
rcrb
mov
sub
clc
inc
popa
dec
jo
jge
add
stc
sub
fs
in
push
dec
mov
push
cmp
int3
mul
or
jae
movsb
or
sbb
xor
xor
xor
enter
jae
stos
or
das
ja
push
mov
push
outsl
iret
loopne
push
push
push
data16
mov
inc
mov
cmpsb
test
subl
jle
lods
scas
das
inc
popa
cmova
dec
mov
jmp
push
in
mov
pop
or
scas
movl
insl
mov
xchg
mov
mov
cmp
in
mov
leave
mov
push
push
sub
xchg
or
outsb
fsubrs
mov
ret
jne
sti
in
dec
mov
imulb
cmp
xchg
sub
lods
stc
xchg
mov
outsl
pop
aaa
cmpsb
jnp
or
jp
inc
mov
scas
ret
aas
sbb
outsb
in
inc
pop
pop
je
push
leave
fwait
sub
xor
inc
pop
jb
mov
push
sbb
mov
xor
push
add
mov
and
lock
rolb
and
pop
repz
pop
cli
cmp
mov
in
dec
add
xor
movsb
inc
fists
pushf
sub
mov
je
cmpsb
cmp
ds
lds
cld
mov
ljmp
loopne
rcll
lods
es
jne
jl
mov
sbb
xor
mov
dec
mov
xor
jle
mov
cmp
mov
dec
add
pop
scas
and
xor
mov
sbb
test
ds
mov
mov
imul
sbb
cmp
or
gs
push
lock
adc
mov
lret
jp
fsubrs
xchg
dec
pop
int3
test
notb
pop
jg
jb
xor
pusha
mov
pop
jns
aad
mov
mov
in
es
bound
repnz
jb
jmp
or
pop
xchg
sub
ds
in
outsb
cmp
lahf
or
mov
adc
ret
pop
repz
xor
fnsave
lret
adc
xor
cmp
pop
lahf
daa
mov
mov
imul
mov
adc
sbb
fwait
mov
or
leave
pop
sbb
jp
and
sbb
sahf
or
mov
pop
test
or
push
lock
es
dec
call
push
push
out
insb
xchg
cmp
cmpsl
or
pop
jmp
cmpsb
pop
pushl
adc
arpl
ds
adcb
ds
mov
xlat
push
ret
mov
dec
jg
jle
ljmp
sub
bound
es
and
mov
mov
xchg
sub
les
leave
push
outsb
jge
push
cld
push
jmp
stos
adc
cli
in
insb
clc
lcall
mov
scas
mov
sbb
std
movsb
pop
lss
or
or
ljmp
and
dec
cmp
das
xchg
or
lahf
jg
xchg
inc
jo
inc
sbb
jp
mov
xor
inc
mov
and
pop
imul
std
xchg
or
clc
mov
cwtl
mov
mov
mov
mov
cmc
cltd
xchg
sub
pop
xchg
movsl
pop
and
int3
fsubrp
mov
dec
fsubr
and
xlat
lds
pushf
fdivl
lods
dec
idivl
pop
jl
imul
fstpl
hlt
mov
filds
cmpsl
mov
jb
cmpsl
es
push
xor
or
out
mov
rolb
inc
fnsave
mov
fs
push
xchg
test
fcmovnu
das
push
sub
fcomps
adcb
aad
pop
jmp
in
jmp
rclb
aad
adc
out
test
cmpsb
stc
lea
aam
pop
xchg
jnp
push
mov
fcompl
or
lods
adc
ret
or
jb
sbb
stc
nop
mov
adc
lret
xchg
pusha
jmp
mov
inc
in
int
into
xor
mov
lahf
lods
lret
rol
in
lods
imul
jns
iret
lds
push
add
sbb
loopne
ds
shl
outsb
les
mov
jns
mov
xor
leave
cwtl
stos
cli
jo
test
xchg
and
cmpsb
cmp
clc
movsb
scas
dec
sti
mov
sbb
pop
inc
jecxz
push
adc
mov
dec
xor
xchg
sub
inc
lods
cmp
push
adc
inc
jne
inc
mov
sub
pop
xchg
xchg
cltd
out
xchg
jo
inc
push
popa
or
aaa
aaa
or
mov
lcall
mov
fsubrp
aas
jnp
pop
mov
adc
into
xchg
outsb
jne
mov
rolb
dec
test
push
outsb
mov
shl
cld
push
shlb
sub
sub
add
mov
xor
into
inc
sarl
push
xor
mov
or
xor
sub
sub
or
push
mov
es
ret
int
and
dec
add
add
popf
xchg
jmp
in
in
add
andl
push
mov
jp
jne
xchg
lods
adc
push
sub
pop
xlat
test
or
out
test
xchg
insl
loope
insb
sbb
imul
aad
scas
neg
adc
sbb
adc
xchg
imul
idiv
push
xchg
scas
roll
in
xlat
sub
stc
add
inc
dec
out
cld
jnp
ret
adc
imul
loopne
pop
cmc
jbe
mov
ja
pop
lea
lret
incb
jle
out
fistps
enter
test
test
fisubs
xchg
test
mov
xor
gs
pop
sbbb
addr16
cwtl
outsb
outsb
push
sbb
lea
and
or
or
pop
adc
jno
sbb
add
mov
ss
inc
stos
out
xor
in
fiaddl
mov
cmp
mov
sub
mov
xchg
xchg
mov
mov
jns
mov
push
sub
adc
filds
movb
outsl
cli
popf
mov
jle
xorb
push
stos
xchg
add
mov
xchg
icebp
or
cld
outsl
jae
pushf
xor
xchg
mov
loop
aas
mov
pop
adc
int3
push
popf
std
ja
test
xchg
push
jo
les
xor
jmp
outsl
push
adc
dec
xchg
push
enter
arpl
daa
ds
cltd
xor
mov
mov
add
add
adc
push
mov
dec
test
jnp
repnz
push
aas
sbb
dec
dec
test
xchg
add
rorl
dec
movsb
pop
pushf
mov
cmpsl
lea
and
insb
cmpsl
lea
mov
push
shr
ret
in
jmp
testb
notb
mov
rol
mov
xchg
and
rorb
add
cmpsl
mov
sub
in
push
lea
push
dec
out
mov
xchg
out
cmc
adc
or
nop
mov
fs
into
pop
sub
inc
jle
clc
aas
mov
jl
and
sbb
cld
mov
cwtl
das
dec
or
inc
add
das
stc
add
sbb
mov
jg
xchg
js
jmp
mov
jno
mov
and
test
in
adc
push
das
jge
popf
outsl
incl
daa
fisttps
mov
sub
cwtl
gs
inc
mov
dec
pop
jnp
int
sahf
pop
pop
repz
out
adcb
mov
lret
dec
xchg
cmpsl
idivl
or
dec
sti
pop
scas
nop
nop
and
int3
loop
jmp
insl
mov
insl
sbbl
ss
call
fcmovnbe
fnstenv
cwtl
cmc
push
or
xor
mov
loop
sub
enter
inc
mov
cmp
leave
sbb
jle
or
aam
cmp
rolb
pop
push
sbb
sub
xchg
add
outsl
push
leave
test
dec
mov
mov
inc
pop
test
popa
cwtl
mov
cwtl
or
lret
or
lods
sub
shrl
jge
and
push
decl
sbb
pop
xchg
mov
test
repz
repnz
stc
adc
add
rolb
sub
xchg
mov
sbb
mov
and
inc
stos
or
popf
popa
repnz
mov
stos
sti
jl
cli
xchg
scas
test
and
std
push
xchg
inc
mov
or
scas
fbstp
out
mov
xchg
lret
mov
sbb
fcomip
insb
clc
pop
subb
repz
dec
push
dec
mov
xlat
lret
fcoml
icebp
out
leave
mov
stos
inc
outsb
sarl
jmp
adc
or
decl
push
xchg
push
sub
inc
movsl
ret
sahf
out
outsb
push
adc
popf
xor
adc
xchg
mov
hlt
jno
aad
adc
fdiv
gs
icebp
mov
pop
pop
mov
jle,pn
fcomps
out
pop
negb
or
out
add
xor
inc
cli
in
in
leave
pusha
pop
ucomiss
pop
int3
es
jle
push
pop
fldenv
testl
mov
fistl
scas
repnz
lods
push
ss
ret
xor
push
cmp
std
jo
pusha
lret
in
cs
stc
daa
inc
or
dec
loopne
dec
addr16
imul
sarl
cld
lcall
mov
aad
iret
pop
stos
inc
pop
push
sub
jle
and
fnsave
adc
outsb
or
js
xchg
dec
fld
jg
xchg
pop
mov
into
sbb
jl
mov
cli
mov
or
push
cmp
pop
mov
rcr
and
adc
jbe
arpl
push
gs
jo
and
rorb
dec
iret
data16
mov
pushf
adc
dec
addr16
push
mov
iret
gs
add
sbbl
fdivp
rorl
popa
xchg
dec
daa
and
iret
and
and
scas
mov
aaa
daa
ret
jo
push
sub
repz
ret
sbb
or
xchg
out
int3
xchg
lea
dec
js
mov
dec
loop
mov
lcall
jae
aad
pop
nop
fdivrp
inc
sub
pop
dec
jo
lret
xchg
shlb
sub
xchg
bound
insl
rolb
sti
popa
adc
imul
mov
mov
sbb
sub
mov
je
sub
cmp
mov
rcrl
outsl
fldl
jb
sbb
sub
ds
les
or
loop
and
testb
int3
mov
cmp
xchg
jbe
ret
fsin
pop
mov
mov
cmp
push
or
inc
outsb
daa
mov
ja
mov
add
cmpsl
lret
ret
push
fnstenv
je
imull
movb
mov
and
sahf
cld
pushf
scas
and
sub
in
add
or
xor
fwait
push
subl
jle
sub
cmpsl
aas
mov
arpl
sbb
sub
dec
mov
jns
mov
in
mov
dec
aas
out
int
mov
int
in
xor
sbb
mov
inc
in
xchg
sbb
adc
push
aas
mov
aas
add
les
sbb
lret
cld
xlat
mov
mov
imul
mov
lret
cwtl
pop
test
dec
outsl
das
lret
std
cwtl
shlb
mov
repz
fs
push
movsl
add
outsb
cmp
mov
jbe
dec
test
mov
fnstcw
or
sbb
dec
cmp
cmpsl
loope
outsb
rclb
xor
xlat
push
pop
je
jne
fnstenv
inc
mov
add
mov
test
xchg
xchg
in
add
hlt
xorl
adc
add
lods
test
mov
mov
inc
adc
adc
dec
add
jae
jno
xor
or
rcrb
jae
loope
lret
dec
push
mov
mov
lahf
fildl
in
jge
fxch
sbb
mov
inc
insl
mov
push
push
iret
lods
lahf
pop
pop
out
ret
inc
cmpsl
xchg
cmp
fwait
sub
xor
lods
xor
mov
cmpb
jmp
push
andb
mov
out
fstpt
ja
inc
or
cwtl
incb
cmp
sahf
fwait
mov
xchg
or
pop
lods
sarb
repz
fiadds
adc
movsb
mov
xchg
out
std
push
rcll
pop
sub
push
cmp
popf
push
push
sarb
fidivs
and
add
mov
fisubs
fidivrs
pop
pop
lods
push
add
mov
lret
ljmp
xor
repz
mov
cli
fwait
imul
nop
dec
mov
or
addl
mov
dec
adc
sti
test
hlt
push
add
push
pop
add
popf
fs
mov
jbe
call
or
idivb
je
or
inc
inc
add
mov
sub
movsb
xor
std
pop
stc
nop
mov
or
out
imul
cltd
mov
sti
pusha
outsb
fimuls
sbb
nop
enter
out
ret
push
loop
mov
addr16
das
sub
push
cs
ljmp
scas
or
icebp
and
mov
and
ret
push
mov
in
inc
lcallw
mov
das
out
mov
xchg
mov
mov
jl
js
shl
lcall
rcl
sub
lds
cltd
hlt
pop
pop
adc
int3
jns
inc
jmp
sub
out
adc
add
cld
ds
jecxz
xor
lret
lea
dec
call
jae
cmp
faddl
and
test
movsl
add
add
je
inc
movsl
push
out
push
push
test
outsb
in
push
cs
push
fwait
xor
pop
repz
outsl
out
addl
out
jnp
mov
popf
push
mov
jae
data16
insb
je
popf
push
int
jmp
enter
or
and
jae
fwait
aas
mov
sbb
fisttpll
mov
adc
cmpsl
lods
jno
mov
shll
pushf
xchg
push
aas
xor
sysret
stos
in
inc
pop
adc
sub
inc
push
dec
sub
jns
cmp
test
add
xchg
punpckhbw
jecxz
mov
stos
aas
insl
loope
xor
push
mov
or
jb
xchg
sub
dec
lods
dec
sarl
add
add
add
sub
jbe
data16
inc
push
jl
add
push
mov
jne
or
push
loopne
repnz
inc
pop
xlat
sti
ror
push
cltd
out
insb
cwtl
mov
mov
xor
into
pop
inc
mov
ffreep
inc
mov
mov
stc
lea
scas
out
mov
imul
test
lahf
clc
outsl
int
sbb
mov
mov
lret
xor
cld
addr16
stos
cmc
fsts
call
sbb
mov
fisttps
sarb
sbb
sbb
ret
add
xchg
lcall
adc
daa
arpl
gs
leave
and
movsb
in
adc
pusha
ljmp
insb
sub
add
rorl
rclb
or
out
or
cmp
jg
jg
scas
dec
sub
iret
mov
cli
imul
out
andl
xor
cs
pushf
xor
into
mov
inc
jge
loopne
pop
inc
add
stc
jno
pop
mov
mov
push
shrl
inc
ret
mov
stos
bound
xchg
int3
fimuls
aad
or
cmp
bound
push
or
fistpl
and
sbb
xor
or
rolb
mov
iret
cmp
lods
and
mov
lret
sbb
cmp
cmp
add
cmp
mov
sub
pop
inc
adc
outsl
push
movsb
push
addr16
lds
insb
jns
out
stos
sti
cmpsl
aas
and
mov
xchg
pop
in
lock
inc
adc
scas
inc
bound
test
mov
das
inc
shr
scas
out
dec
push
popf
lcall
fs
xor
je
mov
cmp
pop
jle
sbb
dec
xlat
jns
ficomps
sbb
das
sarl
test
xchg
in
xor
mov
cwtl
and
pop
adc
pop
adc
fnstenv
sub
rcll
sbb
jo
push
outsb
jno
fimuls
rorb
fmuls
mulb
jp
dec
jecxz
dec
idivb
dec
shrb
inc
popa
and
xor
js
add
or
lods
dec
test
xchg
jmp
imul
popl
xor
scas
lock
mov
rcrl
aaa
orb
jge
or
adcl
xchg
jbe
mov
cmpsb
test
dec
add
stc
imul
jns
ljmp
xchg
ret
ljmp
jmp
push
inc
repnz
jnp
ljmp
inc
inc
arpl
loopne
adc
int
jg
xor
inc
pop
xor
jmp
inc
int
xchg
add
push
sub
stc
and
enter
sub
push
stos
xchg
cs
xlat
rcll
arpl
and
imul
sub
mov
fbld
ficompl
xorb
jecxz
jge
nop
or
mov
cld
xchg
xchg
xor
arpl
out
dec
cmp
fnstcw
sar
mov
pop
dec
mov
xchg
push
outsl
cmp
mov
shl
in
dec
mov
test
inc
leave
sub
notl
jbe
push
fidivl
mov
jp
pop
add
fstpt
adc
ds
inc
xchg
test
cld
loop
in
jp
and
jl
inc
fsubl
pop
jl
lods
and
cwtl
addr16
xchg
add
out
pop
cwtl
pop
test
xchg
add
roll
fs
ja
int
in
pop
inc
stc
test
jo
pop
cwtl
cmp
out
pop
cs
jo
adc
or
inc
push
movsb
jg
and
fdivl
cmp
xchg
jge
sbb
aaa
dec
xchg
push
mov
xchg
int3
jo
mov
inc
pop
mov
test
xlat
popf
and
sti
stos
mov
hlt
int
push
pminub
pop
jne
fildll
pop
or
lahf
mov
sub
mov
lcall
addr16
or
adc
mov
mov
add
jno
daa
lods
iret
push
filds
pop
aas
push
inc
xchg
push
dec
ljmp
aas
scas
jbe
shlb
fldcw
lcall
and
adc
nop
cmp
pop
insl
sbb
and
mov
mov
pop
in
add
enter
int3
push
xchg
lret
pop
push
stos
mov
mov
xor
inc
or
lret
or
scas
xchg
repz
cmp
adc
cmp
sub
xor
in
in
idivb
dec
mov
rclb
push
jl
insb
sub
push
jecxz
mov
mov
mov
popa
add
mov
les
insl
ficoms
out
add
mov
cs
sbb
rorl
subl
pop
stos
adc
das
push
adc
push
mov
pop
mov
aas
mov
pop
out
mov
adc
ret
fsubr
add
int3
xchg
jno
xor
cli
push
lret
jp
jno
inc
fwait
adcb
ja
dec
cmpl
shlb
mov
adc
sahf
dec
sbb
mov
test
mov
rorl
pop
xchg
xor
les
push
sub
xchg
inc
push
push
lods
sbb
pop
xlat
cld
cmp
ljmp
pop
mov
fsubrl
fildll
mov
rorb
push
mov
fcmovu
nop
xor
lcall
pop
ficoml
negb
sub
addr16
das
cmp
push
fldl
mov
xor
outsb
jno
add
enter
jmp
test
mov
frstor
ret
cmp
fdivrl
fs
js
ret
inc
xor
push
mov
stc
sub
ja
aam
jo
sbb
adc
fwait
xchg
cs
das
mov
mov
pop
test
jae
movsl
lods
cmpsl
in
jnp
lods
mov
aad
jmp
lods
fisttpl
xchg
cmp
push
pop
clc
pop
dec
xchg
inc
fwait
dec
mov
js
mov
outsl
int
mov
pop
inc
cmpps
mov
int3
mov
fcmovb
lea
scas
inc
jmp
shrb
push
xchg
stos
mov
out
in
cwtl
cs
dec
loope
push
xor
adc
push
insb
pop
xor
je
adc
andb
xor
dec
popf
pushf
or
lock
jecxz
sarl
lahf
jae
inc
in
adcb
cmp
or
sbbb
add
daa
inc
or
push
mov
in
roll
mov
xchg
fldenv
arpl
insb
mov
in
ret
pop
dec
or
cli
pop
out
push
addb
jg
xchg
and
mov
test
icebp
mov
ljmp
fldl
stos
insl
jns
mov
loope
adcb
lock
inc
mov
mov
push
into
insl
iret
mov
xchg
dec
pop
pop
ljmp
inc
xor
mov
js
js
popf
mov
pop
frstor
push
das
add
hlt
stos
sbb
mov
push
add
insl
cwtl
push
pop
mov
pop
push
mov
push
lods
stc
xor
inc
mov
fmul
pop
insb
xor
cmovle
inc
sub
cmp
movb
sub
test
fistpll
adc
into
mov
out
inc
xchg
pop
xchg
adc
add
movsl
mov
test
xchg
stos
test
sbb
into
add
jbe
dec
pop
ret
mov
repnz
jmp
fsubr
scas
xor
push
cwtl
fstpl
test
adc
xlat
dec
stos
adc
mov
and
xchg
xchg
loope
or
fwait
clc
and
pop
push
sbb
mov
in
fisubl
movsl
sbb
xor
cs
or
dec
clc
xor
jge
shrl
xchg
out
popl
nop
std
sbb
shlb
pop
arpl
mov
aaa
fmull
dec
mov
pop
repz
out
insb
aam
jp
sub
shr
cs
or
xchg
sub
mov
div
sarl
xchg
outsl
daa
popf
pop
es
scas
add
mov
fisubrl
sahf
test
push
ds
lcall
xlat
or
or
jbe
mov
jmp
jne
leave
scas
es
xchg
sub
cmp
xchg
ja
cltd
jo
sbb
dec
int
adc
mov
mov
push
jb
test
frstor
sbb
sub
pop
mov
pop
call
mov
lods
jl
cmpsl
sbb
add
or
jge
arpl
cmp
test
sbb
pop
mov
clc
mov
loop
pop
add
or
mov
mov
cmpsb
pop
sahf
and
jno
scas
and
mov
jbe
pop
mov
fcomps
mov
testb
nop
mov
mov
lds
stos
das
in
inc
popf
outsb
jbe
das
pushf
inc
mov
sub
shl
clc
popa
add
jb
cmp
fwait
ja
iret
xchg
sbb
mov
out
es
pop
adc
clc
xchg
sti
add
stos
mov
push
rol
and
xor
jle
aaa
xchg
in
inc
pop
xor
push
popa
out
xchg
xor
xchg
icebp
xchg
les
addb
or
mov
cltd
sub
cmc
xorl
cmp
jl
dec
jns
cmc
pusha
inc
cli
dec
gs
xorl
cld
aaa
in
imul
or
pop
sub
jbe
ds
sarl
int
jbe
dec
addr16
cmp
cmpb
repz
jg
xor
inc
clc
mov
sub
lds
pushf
ljmp
add
popf
adc
dec
popa
sbbb
sub
lods
les
jg
pop
icebp
adc
pop
cld
add
cmpsb
cmp
mov
mov
cmp
jge
arpl
pop
mov
test
test
jne
push
out
sub
add
mov
sbb
psrlq
add
cmp
sub
out
jns
push
push
mov
adc
cmpsb
cmp
mov
loopne
ss
ds
cwtl
inc
fisttpl
aam
clc
and
mov
sbb
pop
adc
xchg
pop
dec
popf
movsl
inc
iret
sub
cmp
jno
lcall
loope
xor
or
mov
cmpsb
andb
in
push
addr16
add
xor
daa
addr16
push
shl
jmp
aad
popf
or
repz
lea
mov
or
xor
into
divb
int
out
pop
xor
sbb
push
cli
push
seta
insl
inc
fsubrs
mov
daa
or
outsl
push
mov
mov
lret
fmuls
shll
adc
mov
stos
dec
sub
mov
or
lahf
jb
inc
cmpsb
mov
fmuls
mov
outsl
cli
inc
or
scas
cmp
lcall
xor
adc
rcll
test
xor
shrb
lahf
jo
shl
je
shrl
mov
mov
js
insl
lret
cld
mov
dec
fmull
jg
leave
jae
das
mov
xchg
push
out
mov
jo
scas
outsb
adc
ret
lcall
mov
xor
sbb
arpl
stos
xlat
js
dec
mov
jp
mov
ljmp
jecxz
les
insl
push
mov
cmpsl
mov
inc
das
outsb
divb
lock
orb
add
test
push
cmp
out
out
test
sub
jnp
lods
mov
std
sub
inc
cli
shl
xor
adc
jg
sub
add
xor
mov
sub
add
push
insl
jecxz
lahf
jne
pop
cltd
cld
lea
xor
xor
lret
and
inc
nop
imul
ret
stos
dec
ss
outsb
or
sub
adc
cmc
jns
inc
in
jns
inc
adc
cmp
push
fisubl
jns
ja
test
jg
sar
add
jae
inc
pop
sahf
push
test
inc
rcrb
int3
fs
lret
jmp
shll
xchg
dec
das
cmc
xor
inc
movb
cmpsb
push
xchg
push
pop
mov
add
cmp
and
ret
repz
js
add
adc
ret
outsb
fisubl
pop
imul
jnp
test
bound
xchg
mov
outsb
add
inc
cmp
pop
pop
jae
emms
jnp
test
scas
dec
cmc
mov
lcall
in
and
leave
icebp
adc
push
push
jmp
sbb
out
mov
les
jmp
mov
into
xchg
xor
data16
cmc
cmp
lcall
push
and
cli
adc
pop
lods
ja
or
ror
pop
cld
mov
clc
sub
sub
test
xlat
insb
orb
jb
sbb
sbb
jg
call
or
sbb
add
aam
repz
lods
inc
scas
int
loope
ror
cmp
xchg
fs
ret
stc
cmp
push
rorl
stc
mov
jae
aas
pop
cmp
fs
lret
enter
popf
in
or
test
cmp
outsl
in
cmpsb
sbb
fldl
out
mov
jo
push
out
push
std
ss
mov
mov
push
clc
pop
push
outsb
enter
push
inc
mov
mov
and
xchg
sub
test
pop
or
iret
and
stos
lea
dec
fsub
rep
lret
bound
vmovapd
lods
push
lods
dec
out
xchg
inc
loop
popa
jo
adc
imul
ja
ja
out
adc
pop
adc
mov
sbbb
jnp
cmp
cltd
subb
inc
lock
mov
in
psadbw
push
scas
pusha
and
mov
adc
iret
jp
sub
jle
mov
lds
fwait
mov
sub
iret
js
sbb
cwtl
stos
push
dec
push
leave
stos
cmp
push
shrb
push
data16
loope
inc
adc
aaa
sub
into
das
push
cmp
push
jo
pop
imul
inc
fstpl
mov
add
test
or
cs
idivl
das
sti
icebp
sub
pushf
xorl
xor
jge
outsw
mov
push
test
sbbl
cmp
aam
mov
out
jnp
outsl
stos
arpl
outsb
mov
push
xchg
mov
push
out
mov
cmp
rcrl
cmp
pop
loop
clc
sub
inc
add
popf
cmp
pop
mov
push
lods
mov
or
arpl
jmp
cmp
dec
imul
flds
ja
or
fcomi
jecxz
in
jns
add
sbb
insl
sbb
and
jecxz
fadds
les
mov
outsl
adc
js
lds
in
add
xchg
test
ds
cmp
lret
adc
pop
mov
mov
mov
mov
imul
xor
and
lcall
pop
cmp
insl
add
xor
jecxz
roll
out
filds
push
push
cld
jae
aas
popa
aad
jp
subl
inc
out
cmc
add
test
xlat
aaa
scas
enter
jb
imul
mov
mov
push
inc
mov
pop
inc
push
aaa
fdivl
dec
adc
xor
sbb
fnstsw
loopne
rclb
or
adc
aam
pop
loopne
or
lcall
xchg
or
insl
and
cmp
dec
mov
mov
cli
scas
lret
cmpsl
pusha
mov
xchg
add
jge
outsl
std
push
test
xchg
fldt
adc
aam
pop
test
les
pop
mov
adc
xor
mov
rcll
movsb
push
stc
fidivl
cmp
loope
nop
and
cmpsl
sub
add
and
mov
xchg
adc
and
mov
imul
arpl
push
das
loopne
inc
xchg
adc
and
add
jecxz
repnz
xor
out
xchg
in
pop
xchg
push
push
in
lea
or
cs
or
mov
lods
out
xchg
dec
xchg
pop
ljmp
call
pop
mov
adcb
sub
cli
mov
mov
or
push
cltd
jne
addr16
xlat
xchg
or
xchg
mov
out
bound
insl
sbb
xor
mov
mov
mov
pop
popf
adc
mov
in
lret
outsb
cmp
xchg
lock
or
adc
scas
sub
push
shr
test
enter
or
or
insl
dec
scas
dec
lahf
and
scas
aad
int
out
xor
push
out
loop
call
and
cmp
cmp
push
out
mov
fbstp
mov
mov
sub
xchg
jle
dec
jnp
xor
sahf
insb
adcb
jecxz
xor
dec
in
push
addb
movsb
scas
fistpl
or
jg
pop
call
or
test
in
adc
insl
cmp
fildll
and
mov
test
out
xor
iret
mov
fs
add
loopne
pop
jecxz
lret
sti
xchg
jno
jne
shrb
lds
mov
faddl
mov
fcmovbe
mov
mov
xchg
mov
psubb
mov
rcll
add
jnp
adc
inc
ljmp
sub
pop
push
cwtl
imul
inc
inc
or
int
shrl
mov
push
stos
adc
mov
mov
xchg
loope
sub
and
jb
shl
push
stos
leave
sbb
shll
xchg
loope
jg
xchg
mov
mov
ds
mov
add
jns
pop
jbe
movsl
push
jmp
dec
insl
jb
insl
jp
xchg
sbb
xchg
fwait
std
push
inc
mov
popf
xor
or
pop
cltd
leave
xorl
shlb
cltd
push
shlb
test
sub
jo
test
mov
and
push
loope
adcb
fwait
aam
sub
add
and
jecxz
inc
fcoms
sti
dec
jne
mulb
outsb
jge
mov
xor
pop
loope
or
out
jbe
addr16
cmc
mov
daa
aas
mov
mov
cmpsl
data16
push
cmp
push
push
mov
mov
inc
in
cld
js
or
ss
daa
mov
push
mov
mov
sub
fadd
xchg
jo
and
xchg
adc
sahf
sarl
shll
insb
filds
pop
adc
lock
ljmp
push
insb
xor
pop
imul
je
loope
adc
push
mov
sbb
pop
pop
push
dec
testl
dec
iret
shr
aaa
mov
rcr
lcall
dec
add
push
or
lret
test
les
sub
mov
sub
inc
pop
ja
xor
repz
ret
js
ret
mov
add
call
adc
or
mov
pop
push
es
iret
daa
xchg
push
xchg
sbb
out
mov
out
pop
mov
xchg
pop
jle
and
sbb
mov
pusha
fildl
mov
sub
and
inc
imul
push
cmpsb
jge
pop
lret
push
dec
pop
add
rcrb
call
and
aaa
imull
cwtl
mov
jg
sbb
inc
sahf
scas
jp
bound
mov
or
scas
jbe
pop
scas
push
cltd
jp
add
lods
inc
aad
das
xor
test
sub
popf
push
cwtl
imul
subb
xchg
add
adcl
xchg
jns
stc
divb
jecxz
push
or
cli
popa
pop
jae
movsl
cmp
fwait
cltd
xor
faddl
adc
insl
cs
jecxz
or
scas
inc
jns
jp
rcrb
push
repz
and
xchg
inc
cvtps2pd
iret
push
add
repnz
movsb
fiadds
icebp
fidivrs
pusha
pop
insb
shrb
push
ljmp
xor
jb
hlt
pop
arpl
cmp
push
cli
adcb
mov
mov
and
push
cmp
dec
mov
xchg
push
popa
aam
sar
cltd
add
pop
hlt
lret
mov
jmp
xchg
inc
aas
fmul
loopne
fdivrl
dec
mov
adc
cli
outsl
leave
jno
pop
pop
daa
into
in
leave
and
pop
jnp
adc
mov
jo
std
push
imul
adc
pop
scas
lret
push
out
jne,pt
in
rcrb
and
push
adc
sub
sub
xchg
pop
sub
pop
inc
add
sub
jle
lcall
lret
sbb
gs
or
ret
pop
stos
xor
fisttps
pop
xchg
and
data16
cld
rclb
inc
jne
shlb
lods
dec
fimuls
popa
fadds
in
jns
lock
sub
dec
in
pop
sub
cmp
sbb
test
aam
and
cmpl
icebp
cmp
add
ss
pop
dec
frstor
xchg
add
out
out
popl
add
jg
sahf
xor
or
ret
dec
xchg
aad
xlat
xchg
fmull
jnp
pop
test
or
adc
mov
fcomi
xchg
fimull
movsl
or
out
rcl
add
mov
aam
ja
ljmp
or
bound
pusha
mov
js
jl
and
lock
mov
shr
mov
fs
mov
mov
sub
inc
fxch
xchg
fldcw
lods
pusha
sbb
add
mov
adc
test
xor
adc
fneni(8087
loope
notb
fnsave
push
out
sub
push
sbb
sbb
fisubrs
mov
sarb
test
ds
fwait
fwait
adc
aaa
xorl
mov
mov
inc
aam
jg
inc
jecxz
jo
cwtl
mov
cmpsl
arpl
shlb
sbb
loope
dec
aaa
sub
dec
dec
xchg
dec
add
and
mov
cmpsb
sar
mov
fsubrs
mull
je
testb
cmp
clc
lcall
in
adcl
leave
inc
jne
mov
sub
adc
adc
cmp
jl
push
adc
push
or
fnsave
cli
jne
jnp
sbbl
push
and
imul
movhps
arpl
cltd
std
or
push
repz
mov
inc
fdivrs
pop
dec
fldt
push
fidivs
test
insl
es
cmp
in
push
dec
cltd
dec
mov
jg
or
inc
enter
sub
shll
or
js
pushf
xor
sub
dec
aad
into
and
jmp
pop
and
inc
in
pop
inc
xchg
pop
cli
cmp
popf
or
rorb
lret
fadds
popa
nop
push
pop
pop
bound
mov
mov
into
and
inc
and
mov
xor
aad
or
scas
in
cmpsl
mov
sbb
inc
ss
pop
push
fwait
push
adc
es
cmc
or
call
ja
outsb
jg
cwtl
mov
sbb
inc
in
loop
call
add
fwait
and
sbb
xchg
inc
fmull
dec
fdivr
out
arpl
andb
sbb
ss
ljmp
cmc
insb
push
inc
fmull
adc
test
popa
jecxz
add
pop
xchg
jge
jns
imul
sub
sbb
shll
cld
cli
xchg
xchg
outsb
add
call
call
push
mov
iret
idivl
xchg
sub
dec
sbb
int
xchg
in
mov
jno
fdivrl
sbb
dec
xchg
adc
dec
dec
add
pop
cli
xchg
mov
jne
in
mov
pop
std
scas
neg
ljmp
cmc
adc
cmpsl
into
adc
idivl
fs
cmc
aad
test
arpl
or
rcr
out
or
mov
ficoml
icebp
jmp
aaa
lods
jp
pop
scas
fst
cmp
mov
dec
xchg
mov
ret
pop
jns
lahf
and
movsb
xor
mov
sub
jmp
mov
push
mov
aad
xchg
jp
cltd
shrb
lods
or
pushl
call
jmp
subb
shlb
outsl
mov
push
in
les
jae
dec
or
sub
in
out
mov
ret
pop
or
rolb
jnp
arpl
xchg
int
cmpsb
mov
sbb
and
out
xor
mov
mov
dec
sti
push
ljmp
dec
mov
or
and
push
sbb
frstor
push
jg
in
jb
cltd
xor
jnp
mov
or
call
add
movsl
sbb
cmpsl
dec
sbb
pop
or
jge
cmp
dec
pop
sbb
jbe
std
add
add
inc
adc
jns
inc
xlat
mov
cmp
cmp
daa
adc
cmp
push
subl
mov
pop
and
mov
jae
loopne
addr16
insl
mov
rorb
jg
pop
cmp
and
fcomp
inc
pop
push
dec
mov
jnp
inc
mov
ret
dec
jl
jo
loopne
xchg
data16
ret
sbbb
sbb
inc
repnz
xor
mov
push
daa
xor
inc
inc
mov
push
out
enter
and
sbb
lods
cmp
push
dec
jecxz
test
pop
mov
xchg
pop
push
rcrb
sub
and
lock
cmp
loope
xor
pop
out
and
hlt
or
mov
rcl
movb
test
cmp
shl
in
loope
push
sub
xchg
dec
pop
mov
jl
add
xlat
ljmp
push
inc
mov
test
mov
mov
inc
cmp
push
lret
jns
and
mov
mov
xor
xchg
sbb
jp
push
movsl
ljmp
sbb
nop
and
aam
fcoml
movsb
dec
mov
repnz
test
es
xchg
sub
fidivs
and
das
inc
insl
lret
mov
inc
and
lods
xchg
mov
push
push
sbb
xchg
sub
push
mov
inc
xor
testb
outsl
inc
movsb
cli
pushf
mov
scas
out
mov
lahf
mov
ss
pop
imul
in
or
sti
cmp
shlb
or
xchg
push
mov
stos
jo
dec
ljmp
test
lret
addr16
mov
mov
mov
inc
sub
ret
out
or
mov
sub
xchg
add
inc
xchg
pop
xor
call
mov
es
clc
in
cmp
mov
or
mov
sub
jle
inc
inc
pop
sub
dec
mov
jmp
out
mov
inc
push
inc
mov
xor
lea
int3
cltd
repnz
pop
fidivs
pop
jle
adcl
fldenv
bound
mov
test
iret
or
bound
xchg
cmp
movsb
rcrb
add
rcrb
cmp
in
mov
fidivl
or
and
nop
int
sbbl
add
test
adc
ljmp
pop
and
lcall
insl
dec
adc
sahf
cli
sbb
je
popf
out
into
dec
xlat
mov
add
dec
mov
push
inc
add
dec
dec
dec
insl
push
inc
ret
jb
lock
push
fcompl
fdivl
or
xchg
add
push
jmp
xchg
stos
sbb
lret
add
or
inc
pop
cmc
jae
xlat
xlat
out
adc
pop
pop
sub
xchg
pop
icebp
ret
mov
fs
xchg
pushl
push
xchg
fldenv
push
aas
ja
cmc
insl
inc
fstpl
addr16
ss
cmpsb
push
test
mov
sub
bound
orb
je
pop
sub
mov
out
push
hlt
out
fwait
les
pop
test
cmp
adc
sbb
inc
push
fnstenv
repz
call
xchg
xor
adc
push
ficompl
or
push
add
pop
mov
xor
aas
testb
es
lret
hlt
dec
push
mov
fs
mov
xchg
mov
lcall
dec
pop
jg
andb
cmpsb
lds
adcb
lods
pop
into
outsb
test
cmp
inc
pop
adc
andb
popa
testl
mov
popa
fsubrl
rolb
popl
call
or
adc
and
cld
jae
xchg
add
jg
mov
and
stos
in
sbb
ds
orb
data16
popa
lret
adc
test
xchg
push
mov
mov
cmp
xchg
cwtl
js
cwtl
mov
jg
imul
add
outsb
xchg
mov
sub
cltd
testb
rorb
lcall
fldcw
aad
int
jbe
lea
adc
xor
pop
std
push
xor
sbb
and
mov
xchg
mov
pop
inc
add
jg
mov
xchg
mov
xchg
dec
mov
dec
mov
and
add
rcll
xchg
push
sbb
mov
int
or
mov
jno
add
and
ja
movsl
jnp
mov
mov
pushf
shl
jg
cltd
sti
or
mov
push
movsb
std
sbbb
movsl
add
sbb
push
add
xchg
jb
fnsave
out
mov
test
jmp
cmp
inc
pop
add
cmp
push
int3
xor
mov
test
cmc
and
push
cmp
and
out
fimuls
cwtl
inc
sub
add
pop
sbb
test
sbbl
cmp
lcall
mov
inc
xlat
fwait
lock
loop
pop
hlt
adc
lds
dec
loop
nop
test
add
loope
push
xchg
sub
and
repz
jp
sahf
imul
jno
mov
aam
or
sbb
jae
push
leave
and
subl
pop
jnp
or
sbb
inc
fmul
out
fwait
xor
cmp
lret
bound
mov
cld
xlat
out
leave
inc
aas
aaa
push
sub
inc
in
out
xchg
ficoml
lret
inc
push
outsb
dec
in
push
or
xor
jle
or
mov
xor
stos
inc
mov
or
loopne
sbb
ja
cmp
lret
cmp
lret
repz
and
xchg
dec
cmp
xchg
jae
lock
jb
mov
mov
xchg
aad
and
fs
paddusb
scas
jl
sub
mov
mov
daa
cwtl
inc
inc
adc
leave
pop
fwait
add
int
mov
push
in
adc
xchg
pop
out
loope
push
movsl
loope
jno
lahf
sub
adc
add
adc
jg
mov
sub
dec
out
es
in
sub
int
popf
shlb
xchg
mov
jnp
or
jnp
inc
ficompl
lods
movsb
cmp
or
jnp
mov
subl
in
test
mov
sti
test
fcomps
and
inc
fisttpll
mov
repnz
pop
sahf
xchg
movsl
cmp
mov
sar
lds
push
ljmp
dec
out
or
data16
push
out
mov
shlb
or
mov
cltd
test
lcall
loop
jae
pop
repz
sarb
fs
xchg
pop
cmp
das
outsl
sbb
cmp
jo
shl
or
mov
fbstp
add
adc
fwait
and
mov
add
pushl
sbb
cmpl
sub
jp
into
leave
add
scas
lds
testb
jns
jmp
mov
out
out
cmp
mov
les
mov
add
push
dec
loopne
adc
movsl
cltd
insb
in
sub
mov
mov
push
iret
xchg
cmp
loope
sub
les
mov
scas
pusha
mov
aad
pop
aas
insb
lret
mov
cmp
dec
pushf
data16
mov
mov
mov
dec
push
push
dec
pusha
or
xchg
lret
bound
cmp
xchg
outsb
outsl
adc
cmpsl
loop
pop
aam
pop
and
aas
pop
lock
dec
imulb
add
test
inc
jb
fst
test
mov
push
mov
inc
pop
mov
xchg
addr16
push
xchg
xor
mov
mov
mov
and
jnp
mov
inc
fsubr
jns
fs
mov
mov
or
mov
sub
inc
mov
or
dec
loopne
add
fisubl
and
jnp
data16
lahf
mov
mov
xchg
loopne
fnstenv
ja
sbb
sbb
test
inc
xchg
xor
jp
stos
imul
shl
sbb
pop
stos
fstpt
lds
lods
mov
push
mov
jp
lcall
sub
stos
push
and
add
insl
sub
stc
nop
sub
pop
addr16
lock
mov
xchg
jecxz
outsb
clc
xor
out
stc
sbb
cli
dec
sbb
adc
jns
mov
push
movsl
ret
xchg
push
popf
repz
sub
and
sub
fwait
push
bound
mov
xor
dec
pop
loope
add
mov
lea
das
fs
cmp
ret
iret
push
jb
dec
loopne
jno
pop
aaa
sub
insl
idiv
mov
push
ret
sbb
mov
cli
sti
repz
or
in
dec
cmp
in
loopne
jae
cwtl
sub
pop
xlat
cld
xchg
sub
mov
mov
outsb
repz
test
arpl
roll
cli
xor
push
jno
xchg
jne
and
inc
data16
lods
popf
cli
and
aas
adc
icebp
insb
mov
add
fisttps
movsl
push
push
jmp
imul
push
mov
ret
pop
lret
lds
sbb
insl
sbb
std
add
call
mov
je
ret
enter
dec
pushf
jb
mov
pushf
sub
repnz
pop
jp
lods
mov
es
clc
fcoms
jle
sahf
addr16
add
jl
jge
je
add
lods
js
add
cmp
scas
sbb
pop
sbb
xchg
insl
cmp
push
xor
pop
mov
sbbb
sbb
mov
sub
cmp
out
clc
sbb
fisubrs
popf
int3
decb
mov
pop
test
mov
xchg
mov
aam
ss
dec
mov
mov
inc
pop
sub
jb
dec
jecxz
cltd
das
js
popa
mov
sbb
fwait
aam
inc
and
fisubl
mov
fs
inc
jmp
push
push
jecxz
xor
ret
and
or
bound
scas
xor
push
sbb
inc
sbbl
or
inc
dec
cmp
cs
pop
out
rclb
cmpsb
push
add
pop
fldl2t
sbb
sbbl
pop
jnp
cmp
mov
cmp
jp
stc
fcoml
in
js
pop
lea
nop
pop
lret
mov
sbb
add
push
cltd
push
jb
mov
pop
fnstenv
xchg
mov
push
xor
pop
pushf
addr16
lretw
or
cld
mov
jmp
mul
push
inc
fiadds
sub
int3
incl
sbbl
cmpsb
jecxz
fadds
sbb
jle
hlt
scas
push
mov
cs
mov
dec
dec
in
into
mov
lds
push
lcall
xor
xchg
aam
mov
int
movsb
push
add
jmp
inc
cli
jbe
pop
pop
mov
mov
mov
jl
push
sarb
mov
into
sbb
int3
movsl
xchg
pop
rcrl
mov
test
sbb
in
or
adc
add
xorb
imul
sub
ret
in
lcall
cmpsb
cmp
cmp
lcall
jne
cmp
scas
orl
sub
cli
and
dec
xchg
or
push
loope
fstl
negb
mov
ds
rcll
add
je
sub
and
sub
mov
inc
shll
sar
dec
jbe
out
imul
ss
ja
dec
jle
mov
or
pop
adc
adc
cmp
sbb
jo
add
jge
movsl
lds
lahf
fcmove
cmpb
sti
out
int
or
push
add
adc
ret
jle
rolb
arpl
xchg
inc
fsubl
add
sub
stos
je
sahf
orb
or
cmp
add
cmp
popa
add
sub
jp
repz
pop
jl
dec
jecxz
lret
and
pop
jae
and
mov
pusha
ret
jmp
fiadds
lock
cmp
adc
push
shrb
mov
inc
mov
lods
jmp
mov
lock
movsl
push
scas
mov
sub
dec
or
dec
or
lahf
jecxz
add
das
gs
icebp
fbstp
stc
lods
mov
mov
xchg
addr16
cltd
jg
lcall
fwait
into
push
fwait
aas
lods
mov
bndldx
jo
out
stc
or
dec
inc
test
enter
icebp
xor
pop
lret
fcoms
sub
and
in
dec
cmp
outsl
lds
dec
shrl
repz
test
das
add
xchg
mov
sub
scas
dec
mov
ss
lret
movsb
or
ds
jb
in
mov
imul
inc
xlat
mov
jb
cmc
sti
or
shll
stos
ret
cmpsb
add
mov
in
push
mov
fwait
jl
fimuls
in
cmp
mov
mov
shrb
cmp
decb
xchg
mov
xchg
cmp
stos
test
inc
push
jbe
cmpsl
push
cs
jg
dec
popa
push
outsb
shl
test
mov
mov
js
xor
pop
mov
inc
sub
mov
fwait
in
mov
dec
add
ss
sbb
pop
lret
adc
call
mov
int
loope
mov
lods
test
lahf
and
xor
sub
add
cmpsb
jno
and
fdivl
push
add
fsubr
push
and
or
movb
leave
sar
xchg
and
jae
aam
jmp
inc
fisttpl
push
push
mov
addb
or
call
out
repz
push
mov
fstps
sbb
lock
sub
or
sub
lods
les
dec
cmpsb
lcall
xchg
dec
out
sub
sub
repnz
mov
in
daa
ljmp
imul
or
dec
adc
push
mov
pop
ja
jno
push
add
test
std
mov
icebp
mov
inc
jb
inc
stos
sub
adc
int
in
test
mov
aam
cmpb
movb
pop
in
les
cwtl
push
xchg
push
mov
arpl
mov
xor
sub
rol
popa
fs
out
out
pop
out
loop
mov
sbb
mov
jl
push
ja
notl
inc
jno
inc
pop
subb
sarb
movsb
xchg
repnz
vmwrite
pop
jge
pushf
mov
sahf
sbb
es
jmp
mov
fnstcw
mov
cmc
gs
insb
pop
dec
push
aaa
cltd
data16
cltd
lods
and
mov
pop
rcll
adc
inc
cmp
dec
cmp
arpl
add
in
orl
outsb
xor
xchg
cmp
lock
push
jmp
sub
dec
or
xor
test
arpl
fldl
mov
fwait
scas
out
outsb
inc
jns
jbe
sub
popa
clc
inc
dec
sbbl
inc
xchg
dec
aaa
and
int
dec
jp
sub
inc
push
addr16
xchg
clc
mov
mov
addr16
or
xorb
aad
cmp
pop
dec
scas
lock
into
loope
leave
or
dec
jbe
push
push
and
push
add
sbb
test
call
xlat
popf
or
hlt
roll
outsb
sub
ficoml
sbb
jmp
push
arpl
dec
lds
or
pop
lods
aas
dec
je
inc
subb
sahf
push
xchg
pusha
inc
xor
addr16
gs
xchg
pop
lds
ret
fidivrs
sub
movsl
mov
ds
andb
cmc
insl
add
add
in
adc
mov
and
dec
icebp
push
stos
adc
or
lcall
fs
jns
testb
mov
and
mov
add
mov
rcr
into
popa
lret
jns
stos
repnz
std
arpl
inc
test
mov
and
mov
stos
push
pop
pop
insl
jns
xor
fisttps
lret
ljmp
add
dec
notl
in
sbb
pusha
sbb
pop
ss
jp
sub
jb
xchg
add
lret
fwait
test
xlat
pop
jg
and
fs
mov
rcll
pusha
daa
and
dec
in
inc
jo
stos
clc
xchg
out
pop
inc
in
jg
adc
cmp
sbb
add
sub
add
movsl
lahf
mov
add
ja
mov
sti
mov
xchg
xchg
scas
xchg
xchg
jbe
and
subl
shlb
dec
push
inc
inc
adc
push
pop
jbe
dec
arpl
int3
pop
fmuls
or
xor
out
sbb
inc
cmpsb
mov
cwtl
or
int
add
jbe
adcb
or
mov
mov
ficompl
sbb
push
jnp
jnp
push
push
and
out
lods
push
test
mov
fimull
jae
xchg
dec
movsl
cmp
imul
repz
jno
mov
xchg
insl
and
cmc
and
in
push
daa
mov
mov
push
xor
dec
lds
add
push
stos
mov
imulb
mov
adc
cltd
xchg
jns
jbe
jo
sub
je
pop
mov
movsl
aad
jp
stos
into
aaa
mov
pop
mov
mov
dec
aaa
pushf
jl
inc
les
cmpb
andl
fsubl
arpl
push
lret
push
test
cld
pop
xchg
rorl
xchg
mov
xlat
sbbl
jns
push
inc
mov
lret
test
adc
xor
out
push
aaa
mov
pop
xlat
jmp
aad
cmc
mov
add
sub
mov
dec
jl
je
mov
jo
cmp
inc
mov
test
pop
cmp
nop
sub
fs
xchg
cwtl
je
mov
or
pop
inc
cltd
push
lret
and
cmp
cld
test
fidivs
adc
pop
pop
mov
ret
sbb
mov
cmp
sub
aad
jnp
fdivrl
into
xchg
pop
shr
in
sub
popl
orl
test
cwtl
pop
aas
push
push
shll
stos
adc
mov
sub
pop
fldenv
pop
pop
jae
inc
jl
cmp
sbb
sub
xor
push
movsb
sub
dec
sub
in
push
loopne
mov
ret
ret
lea
inc
pop
or
aam
sub
in
out
call
or
xchg
sbb
push
adc
out
ds
and
cwtl
xchg
aas
adc
dec
lcall
pop
jns
sbb
xchg
xor
cmp
adc
sbb
test
sbb
add
mov
repz
push
adc
push
pop
push
or
cs
loopne
stc
enter
jbe
dec
push
addr16
inc
loope
xchg
ss
jmp
std
shlb
addr16
sbb
inc
add
jp
xor
xor
jge
sbb
lret
scas
sub
lret
dec
popa
xor
mov
ret
sub
lahf
out
or
push
sbb
and
mov
stos
rolb
mov
in
adc
test
test
mov
shlb
lret
arpl
hlt
outsl
jl
cmp
bound
inc
pop
pop
je
dec
pop
lahf
aaa
std
inc
aam
pop
mov
dec
loop
loopne
mov
sahf
jl
or
sbb
mov
mov
fdivrl
aad
adc
push
imul
popa
rdpmc
stos
jns
clc
mov
cs
mov
mov
sub
ljmp
mov
jp
pop
mov
rorb
dec
xchg
xchg
mov
fnstcw
fwait
lock
les
xor
pop
cmp
lret
cmpb
movsb
repnz
sbb
bound
fwait
loopne
pop
sub
push
ja
inc
lock
sbb
ja
scas
mov
xor
inc
push
jno
adc
mov
mov
test
outsl
or
ret
push
cli
ret
cmpl
nop
xlat
push
insl
outsl
iret
ja
daa
dec
ret
adc
shlb
jle
xor
mov
lock
scas
xchg
arpl
sahf
in
mov
mov
mov
xor
jbe
loopne
mov
mov
push
xchg
cmpsb
cmp
mov
sbb
xchg
bound
in
dec
dec
xchg
cmp
cmpsl
sbb
cmp
pop
test
or
neg
repnz
lahf
cltd
dec
ret
mov
jmp
mov
inc
testl
cmc
mov
test
adc
loop
sub
in
jae
jmp
jmp
xor
scas
stos
je
out
push
inc
addl
adc
cmpsl
scas
mov
fldt
ficompl
out
adc
xor
jecxz
frstor
loop
es
push
push
call
dec
imul
cmp
pop
dec
fwait
repnz
cmp
bound
out
pop
pop
sub
addr16
arpl
and
or
int3
arpl
fadds
ljmp
jp
aaa
nop
xor
call
popf
mov
inc
icebp
cltd
mov
stos
sbb
psrad
cmpsb
iret
mov
push
or
aad
out
dec
xor
fbstp
sarl
inc
pop
cmp
shrb
xchg
mov
mov
hlt
push
ljmp
clc
sarb
fbstp
mov
fisubrl
aad
popf
jno
test
xchg
cld
mov
pop
rcrb
adc
inc
pop
adc
push
dec
and
xchg
push
test
cmp
mov
jo
call
jne
mov
pop
call
xor
push
cs
mov
sbb
dec
iret
mov
cmp
mov
movsb
xchg
push
stc
push
call
or
divb
jne
ret
pop
add
lcall
or
add
sbb
mov
sbb
pop
insb
or
les
xor
or
loop
mov
inc
fstps
inc
pop
jmp
or
adc
mov
or
fdivs
inc
mov
mov
inc
mov
icebp
mov
mov
push
mov
push
xor
adc
je
cmpsl
imul
pushf
mulb
push
cli
pop
jne
into
mov
and
pop
pusha
leave
inc
adc
xor
cld
adc
aaa
cld
and
clc
icebp
mov
call
jl
stos
out
push
mov
jbe
sub
int
lahf
mov
mov
and
push
xchg
push
or
ret
xor
mov
push
daa
shl
mov
mov
cmp
inc
ljmp
pop
sub
sbb
dec
inc
cmp
fildl
push
adc
jp
repz
pusha
jp
stc
lea
popf
out
cld
loope
inc
adc
xsha256
cmpsb
adc
imul
fucomip
test
enter
inc
mov
push
sub
mov
insb
test
pop
cmp
test
arpl
mov
pop
cmpsl
push
and
adcb
mov
and
mov
jle
mov
cmpsb
mov
fldl
arpl
test
clc
rcll
mov
pop
jl
pop
icebp
xor
jmp
in
nop
cli
pop
pop
pop
into
sbb
xchg
frstor
sbb
and
jbe
adc
pushf
mov
or
das
sub
lods
fstpl
or
adc
mov
call
mov
imul
xor
dec
mov
sub
xorb
pop
aas
and
shlb
jmp
out
add
fiaddl
jns
xchg
adc
mulb
ret
mov
loope
out
mov
sbb
mull
cmp
mov
data16
jns
fidivrl
jge
movsb
std
jo
gs
stos
out
xchg
sbb
mov
ds
jnp
ss
mov
mov
add
mov
lea
gs
sub
sbb
push
lea
adc
sbb
imul
inc
adc
stc
gs
lcall
adc
sub
mov
adc
mov
adc
mov
test
inc
jno
xor
insl
dec
cmpb
roll
jo
mov
fwait
imulb
sub
mov
cmpsl
inc
or
mov
fwait
pusha
sub
rcrl
jmp
mov
adc
ss
push
cmp
repz
jle
call
and
mov
popf
xchg
jle
lret
fbstp
sbb
imul
xor
out
cmp
mov
cmpsl
aaa
cmp
bsr
subb
mov
out
and
repnz
sbb
adc
cmpsb
lret
mov
jg
outsb
dec
fs
insl
pop
lock
leave
ss
stos
ja
cs
arpl
xchg
inc
sbb
ljmp
loopne
lret
push
cmp
inc
adc
push
lods
adc
lods
xor
enter
or
adc
stc
nop
arpl
cmp
mov
fwait
push
pop
lahf
jb
cmp
fnsave
cld
lcall
push
sub
out
aaa
icebp
mov
in
imul
outsb
or
in
sahf
cmc
mov
faddp
sub
cmp
leave
xchg
cltd
push
xchg
cmp
fbld
cmp
stos
xchg
hlt
sbb
stc
pusha
idivl
dec
addl
or
mov
dec
and
pmullw
popl
cmp
popa
icebp
adc
aaa
jbe
pop
sbb
inc
lock
push
inc
popf
popl
mov
jg
je
movb
pop
lret
data16
lcall
ja
data16
popa
mov
lret
loopne
ret
push
jmp
sbb
fidivl
push
div
pop
and
mov
jbe
es
mov
adc
ljmp
mov
pusha
test
popa
es
data16
js
mov
push
scas
leave
xchg
loope
xchg
dec
jo
mov
daa
push
mov
and
test
mov
push
mov
push
call
faddp
sarl
xchg
dec
adc
lret
mov
cltd
xchg
test
loopne
mov
fwait
adc
mov
mov
shll
mov
mov
adc
dec
scas
jmp
pusha
jnp
xor
imul
inc
lahf
fnstcw
jecxz
push
call
adc
pop
imul
or
mov
stc
push
pop
repz
push
ss
imul
inc
int
pop
pop
divb
pop
fadds
push
adc
cwtl
insl
sub
sub
shr
arpl
sbb
xchg
cmp
and
ret
test
xchg
popf
mov
inc
outsb
mov
in
std
cmp
and
aas
clc
gs
test
outsl
xor
out
mov
dec
test
cmp
loopne
add
cmp
and
dec
mov
sub
add
sub
lcall
insl
jo
pop
xor
andb
jns
inc
sahf
jne
cmpsl
fsubrl
les
sbb
jmp
push
cmc
adc
rcll
call
mov
pusha
ss
ljmp
inc
aad
arpl
scas
call
pop
and
sub
lock
mov
mov
cmpsl
and
pop
repnz
jg
push
jns
add
push
fwait
loope
adc
lea
adc
lods
mov
adc
push
jmp
xchg
fyl2x
jp
movsb
in
rcrl
aam
jb
mov
and
adc
or
pushf
xor
xchg
jnp
sti
mov
xchg
sub
pop
fsts
add
repnz
loopne
jb
sbb
add
dec
aaa
das
cmpl
push
sbb
or
imull
sub
adcb
jo
push
inc
aam
stc
jl
push
scas
sbb
and
loope
push
lcall
mov
shrb
pop
pop
sub
xlat
ljmp
icebp
jnp
les
mov
stc
test
push
or
mov
imul
shll
adc
je
mov
loopne
fcompl
cmp
mov
dec
pop
into
xor
jns
call
fsubrs
inc
scas
jb
cli
push
rol
pop
add
pop
mov
cmp
mov
cmpsl
add
add
cmpb
popa
or
sbb
adc
cmpb
imul
in
shl
fldcw
mov
orb
and
shll
push
cli
and
pop
mov
movsl
test
push
aas
xchg
fildll
add
scas
mov
ljmp
hlt
stc
mov
jnp
andb
xchg
fsubrs
push
cld
jle
adc
fstpl
into
gs
mov
jne
dec
cli
leave
fxch
roll
fs
jo
jle
xchg
icebp
stos
sbbl
pop
arpl
mov
les
cli
push
fidivrl
pushf
js
into
jmp
in
cmc
out
mov
fcompl
lahf
jp
xchg
into
jb
cmp
jl
mov
push
testl
icebp
jl
out
sub
add
jl
lcall
mov
insl
adc
mov
cmp
ss
iret
incb
ret
add
push
iret
insl
loopne
pop
jmp
push
andl
mov
mov
and
loop
sub
stos
add
fs
lods
sbb
ds
or
dec
sub
lret
shrl
mov
cmp
ss
cltd
cli
xlat
rcrl
imul
mov
pusha
inc
xlat
xchg
dec
pop
mov
mov
adc
sbb
xor
outsb
cmc
mov
outsl
rcrl
jnp
inc
sbb
fbld
mov
lea
adc
mov
xchg
push
pop
insb
pop
mov
xchg
in
xchg
js
into
es
jl
cli
mov
jmp
mov
jae
pop
add
jecxz
std
nop
mov
shll
shl
push
loop
xor
mov
jb
data16
inc
loopne
int
outsb
or
jmp
repz
into
lods
dec
enter
insb
dec
xchg
mov
iret
flds
jp
andl
pop
sahf
movsb
repnz
xchg
arpl
fistpll
dec
add
inc
inc
ljmp
daa
mov
mov
sarb
lods
call
dec
in
add
out
and
push
cmpsb
pusha
aad
cwtl
jmp
fsubl
leave
xor
xchg
cmc
inc
cld
ds
cwtl
decb
aas
push
jg
jb
test
cpuid
cmp
int
inc
out
sti
sbb
cmpsl
jp
popf
jge
inc
movb
mov
inc
aad
insl
push
mov
mov
dec
push
or
insl
cmp
clc
dec
cmp
jmp
mov
push
mov
mov
dec
adc
pushf
fs
insl
jge
hlt
daa
pop
push
js,pt
push
cmp
sub
pop
fldl2t
sbb
sub
ss
cwtl
pop
mov
and
mov
pop
sub
mov
xchg
xchg
sahf
sti
out
insl
cmp
dec
imul
sub
lret
dec
mov
sahf
adc
outsb
repnz
and
loope
add
dec
lea
mov
test
sub
xchg
pop
xor
outsl
push
xor
outsb
fwait
in
inc
aaa
adc
frstor
cltd
fdivs
shr
stc
pop
sub
fsubrl
sbb
xchg
add
push
sahf
sub
inc
fcmovne
rcl
sub
add
jno
adc
das
xor
insb
fs
cmpsb
cmp
out
inc
scas
cli
pop
inc
pop
or
mov
or
sbb
adc
dec
inc
stos
fidivl
sub
mov
push
lds
gs
addr16
popa
pop
mov
push
cmp
lds
pushf
test
inc
pop
lahf
mov
jae
dec
mov
js
mov
test
iret
pop
xchg
push
inc
jo
xsha1
cmpsb
mov
fldl
mov
jnp
std
das
lods
xchg
stos
int
pop
sbb
mov
roll
mov
xchg
push
mov
jns
xorb
imul
mov
jge
lret
mov
cmp
js
std
jmp
or
aaa
sbb
mov
lods
fsubrp
scas
inc
and
jae
sub
iret
sahf
mov
xor
push
inc
mov
push
pop
out
xchg
mov
pusha
call
mov
cmpsl
test
cltd
int
cli
push
out
and
scas
and
cld
jecxz
insb
sub
xorb
mov
fs
test
cltd
or
mov
push
test
dec
pop
fldcw
das
fbld
fucomip
jne
in
xor
imul
adc
jmp
pop
mov
stc
push
inc
sub
adcl
pusha
cmp
out
mov
sbb
dec
jle
fadds
sub
jno
and
or
push
cmc
push
jne
pop
xorl
jb
das
xchg
outsb
aam
loop
jp
shrb
jbe
lock
imul
push
icebp
adc
or
pop
arpl
je
add
add
out
push
aas
jg
dec
inc
xchg
mov
adc
andb
mov
ds
pop
adc
out
lods
adc
insb
jnp
inc
ret
adc
fisttps
sub
sbb
pop
ret
repz
mov
fucomp
cld
mov
shlb
repnz
in
addb
rcll
popa
dec
fucomi
jle
cltd
das
sbb
lock
cmp
push
call
testl
sub
cmp
sbb
fnstenv
scas
lods
mov
fldcw
lret
ret
dec
rcr
loop
call
mov
or
or
daa
lock
scas
in
in
inc
jb
out
aad
sub
sub
push
push
cmp
or
and
popf
mov
les
jb
mov
jp
ficompl
dec
leave
call
jbe
lahf
ret
sub
adc
lock
inc
out
notl
ja
icebp
test
jmp
mov
jae
inc
popa
sbb
outsl
jle
aaa
or
lahf
cmc
movsb
sub
mov
sub
sahf
std
xchg
adc
sahf
hlt
fnop
leave
ss
sub
fsin
call
mov
mov
fisubrs
mov
push
inc
mov
adc
xor
aad
sbb
lret
or
bound
adc
mov
push
aad
bound
cmpsb
ds
popa
ljmp
push
mov
out
ss
in
jle
xchg
stc
add
mov
pop
lock
stc
cmpsb
or
mov
adc
in
imul
inc
divps
out
insl
jge
jle
negl
adc
xchg
sarl
jge
loop
push
outsl
pop
inc
stc
adc
or
cltd
pop
popa
inc
adc
aaa
lahf
xor
iret
cld
test
inc
rorb
shll
mov
sahf
sub
ljmp
test
pop
lds
addr16
aas
adc
jno
lcall
push
sub
ss
pop
xor
popl
fildl
cmpsl
and
inc
push
test
cmpsb
lock
pop
js
pop
add
lcall
cwtl
cltd
sbb
cli
jl
int3
lcall
inc
mov
jg
add
or
adc
dec
push
icebp
pop
cltd
push
bound
repnz
lea
lods
sbb
fistps
jns
add
inc
orl
repz
out
add
fwait
cmpsl
adc
inc
hlt
pop
add
test
sub
xor
mov
aas
fmull
aam
aad
push
push
std
xchg
inc
sbb
add
cmp
fs
ror
push
insb
mov
les
pop
mov
xchg
jg
push
and
jge
cli
push
jae
repz
pusha
daa
fsubs
and
das
xor
pop
mov
mov
arpl
aam
xor
pop
mov
repz
or
je
inc
xorb
xor
mov
mov
xorl
loop
jmp
jle
loopne
out
popa
mov
sbb
ss
cmp
sub
jno
lock
out
mov
and
movsb
push
loope
add
dec
pop
iret
add
jle
arpl
ret
inc
ss
fistpll
jmp
in
in
xchg
rol
jge
nop
arpl
lods
jmp
gs
sbb
jns
add
mov
cmp
cmp
pop
cmp
mov
dec
sub
jmp
lret
adc
xchg
popa
test
fwait
bound
and
stos
outsb
sub
repz
jne
mov
popa
jp
shll
inc
int
insb
jg
out
ficomps
mov
mov
and
jb
mov
mov
mov
mov
addb
or
pop
and
in
pushf
je
mov
jb
jg
mov
cli
test
xor
push
xor
mov
pop
and
xchg
cmp
inc
mov
cmpsb
xchg
sub
add
cli
cld
xchg
out
push
or
cmp
pushf
int3
rcrb
jns
cmp
enter
sbb
jge
cmp
xchg
lcall
aaa
mov
mov
in
mov
jb
adc
ficoms
xchg
add
loopne
pop
out
add
adc
out
lcall
loop,pn
cmp
stos
cmpsb
lock
mov
pushf
hlt
addr16
iret
pushf
jno
push
lock
scas
aaa
mov
lahf
in
addl
push
out
sahf
sub
cmp
aaa
jne
and
jnp
sahf
inc
and
cli
mov
jmp
cmp
je
fcmovbe
clc
or
sbbb
inc
and
mov
add
sub
xchg
pop
mov
shlb
js
filds
nop
dec
nop
in
xchg
mov
jle
imul
inc
in
mov
sahf
inc
outsb
pop
jmp
cs
xor
insl
outsb
mov
lret
out
or
push
jmp
dec
loope
jmp
cwtl
sub
mov
mov
inc
xor
popa
lods
xchg
cmp
add
pop
mov
or
xchg
in
jnp
pop
inc
mov
stc
pop
hlt
sub
and
jno
stos
or
xorl
mov
int3
fnstenv
push
jmp
ret
rcrl
loopne
push
repz
lahf
pusha
xchg
mov
ret
sbb
cmp
mov
or
das
shr
adc
pop
outsl
push
and
adc
fildl
repnz
cmpsb
cmp
jbe
and
js
pop
xchg
popa
lds
cli
ss
ss
push
dec
mov
fldl
aas
ret
push
mov
inc
enter
jbe
push
sbb
leave
sub
mov
mov
jo
enter
in
sti
iret
and
add
jg
mov
xorl
mov
icebp
jno
jg
or
push
and
or
jl
xor
xor
push
int
xchg
mov
lcall
sub
scas
cmc
pop
mov
adc
cmpsl
fsubs
xchg
jo
jmp
inc
out
mov
repnz
mov
xchg
cmp
imul
mov
jmp
ret
rol
mov
inc
jmp
and
aam
cli
out
mov
insl
mov
clc
ljmp
lock
mov
nop
lods
int3
adc
jns
cli
xchg
sub
mov
xor
int3
xchg
sub
mov
pop
ficompl
scas
ret
xor
push
leave
cmp
call
cmp
or
jns
faddl
mov
es
add
push
sub
and
mov
loope
push
adc
int3
shll
jo
aad
xlat
ret
sub
sub
in
push
add
push
and
push
icebp
movb
and
das
fildl
pop
inc
push
rcr
out
dec
rorl
and
pop
cwtl
push
in
lret
xchg
pop
data16
ret
mov
sbb
push
mov
fcom
in
imul
adc
cmpsl
add
sub
addr16
bound
xchg
jmp
push
pop
mov
in
in
les
push
mov
std
mov
sbb
jge,pn
lea
mov
or
movsl
cmp
iret
das
popf
aam
sahf
lds
or
push
lods
inc
lret
cmp
aam
movsb
push
cmp
mov
sub
or
ss
cwtl
jae
cmpsl
mov
dec
push
orb
push
pop
or
mov
in
roll
rol
push
cs
inc
stos
xchg
lcall
push
mov
jne
xorb
shld
icebp
xor
movsb
sub
test
mov
pop
outsb
sbb
icebp
add
outsl
sbb
push
cwtl
leave
cmp
push
out
lcall
sbb
fisubs
dec
push
sbb
jle
xchg
test
ja
in
int
test
clc
and
jne
sbb
sub
negb
sub
ss
pop
add
push
js
daa
ret
cmp
pop
ret
fsts
pop
and
mov
pop
cmpsb
add
loopne
cmpsb
cmp
and
pop
cwtl
aaa
cld
mov
ret
jnp
adc
fcom
mov
adcl
mov
aam
ljmp
mov
adc
sahf
imul
lar
pop
adc
mov
pop
or
lcall
xchg
jecxz
daa
arpl
addl
push
ret
dec
movsl
pop
popf
xchg
out
mov
xchg
subl
out
mov
xchg
mov
mov
lahf
jo
decl
xchg
daa
add
add
dec
pop
cmp
enter
sbb
jno
and
xchg
mov
inc
fisubrl
fdivl
fimull
scas
pop
data16
loope
mov
add
adc
stos
sub
jo
inc
ror
mov
pop
imul
sarb
sub
jle
outsb
mov
mov
rcr
sub
loopne
hlt
dec
xor
daa
arpl
mov
cmp
push
imul
or
xchg
movsl
inc
pop
test
outsl
lds
push
mov
cwtl
orb
cs
sbb
sbb
lods
aas
nop
jbe
iret
imul
adc
push
sub
mov
jbe
das
sbbl
pop
add
pop
popa
pop
into
mov
out
aaa
loop
or
cmpb
and
arpl
mov
add
pop
mov
fldcw
cmp
sub
fildl
fs
rcll
xchg
cmp
fists
enter
cmpsl
adc
push
aad
sbb
pop
mov
cmpsl
dec
jnp
mov
dec
pop
or
ljmp
testb
push
jno
pop
cmp
adc
mov
adc
fnstenv
or
pusha
cmp
dec
mov
lds
dec
cltd
shll
add
shlb
cmpsb
pop
add
cmp
mov
xchg
dec
jmp
pusha
xor
loopne
push
in
cs
lret
pcmpgtd
ror
jae
call
jae
sub
gs
in
call
fisubs
ret
and
js
and
mov
mov
movsb
jbe
add
das
clc
ss
xor
inc
ret
es
ret
scas
mov
loopne
cmc
xchg
mov
adc
sbb
and
pop
ss
pop
lahf
xor
data16
push
jbe
or
and
cld
mov
mov
in
inc
call
int3
push
sti
cmp
xor
and
in
mov
xchg
pop
cmp
mov
in
adc
jmp
sub
mov
movsb
xor
push
mov
sbbl
xor
lea
add
cmc
pop
cltd
test
repnz
ds
aam
and
xchg
jno
xor
inc
mov
into
mov
notb
addr16
mov
shrl
cmc
sub
add
xor
lods
dec
dec
pop
jp
inc
fiadds
xchg
jae
stc
test
fmuls
mov
jg
ret
xchg
pop
mov
loope
cmp
repnz
pushf
aas
sbb
aad
pop
jnp
fnstenv
sarl
dec
jecxz
adc
push
adcl
xor
in
and
test
inc
dec
fdivs
mov
dec
cmp
fwait
enter
add
fistps
jb
dec
movsb
push
dec
mov
loopne
inc
fcoms
shlb
arpl
inc
addr16
jae
fldenv
mov
dec
add
shll
scas
inc
es
int3
pop
ret
fs
jle
xchg
popa
outsb
add
out
int
cmc
rorb
sbb
dec
cmpsb
pop
jbe
xchg
xor
pop
iret
daa
rcr
in
xchg
adc
mov
rclb
add
pop
push
jecxz
cmp
sbb
pop
jo
subb
testl
mov
repz
pop
bound
je
iret
fistpl
fldt
push
std
jns
stos
dec
xchg
push
mov
icebp
movsl
stc
xchg
cld
roll
jl
fwait
test
inc
inc
jecxz
lods
push
call
inc
scas
xor
and
pop
jns
out
lahf
add
sbb
ljmp
pop
adc
fsubrl
mov
rclb
in
aaa
sub
mov
xchg
scas
lods
jg
fbld
and
out
sbb
mov
pop
repz
adc
xchg
jp
inc
jl
fisubrs
adc
fwait
icebp
ffree
push
lahf
ss
add
inc
jge
mov
dec
ret
lret
pop
cltd
cmpl
jns
inc
xchg
mov
push
test
cmp
sbb
pop
pop
xchg
add
out
pop
adc
mov
mov
loop
xchg
sub
xchg
cmp
rcrl
mov
mov
shrl
or
mov
mov
or
xor
and
ss
stc
xchg
mov
mov
loopne
cld
mov
xor
rcrb
inc
pop
jno
jb
mull
popf
and
in
pop
pusha
shrl
dec
or
jne
cltd
xor
mov
cmp
push
push
filds
test
aaa
push
inc
jne
inc
imul
mov
ret
adc
hlt
xlat
outsb
cld
mov
in
xchg
xchg
in
shl
add
cmp
push
std
adc
pop
sbb
xor
pop
jmp
fdivrs
lahf
sub
jp
sbb
xor
mov
jae
pop
cmc
sbb
dec
adc
repnz
pop
lahf
push
lahf
scas
or
add
and
mov
das
inc
idivb
add
jo
sbb
cwtl
das
push
cmp
roll
push
jne
mov
mov
movsb
pop
inc
fmull
xor
repnz
movsl
lds
movsl
sub
dec
pop
ja
cmp
ja
jmp
rcrb
jp
addb
lret
add
or
or
lcall
push
cmpb
add
mov
mov
inc
mov
add
dec
inc
xchg
stos
jge
fistpll
fisubrl
loopne
imul
mov
stos
mov
fsubl
addr16
mov
out
cmpsl
sbb
or
lahf
cmp
dec
xchg
nop
lods
imul
and
popf
in
sub
pop
add
mov
outsb
loope
jo
mov
mov
cmp
and
or
mov
hlt
pop
icebp
cmp
cmpsb
dec
lahf
jge
cmp
push
mov
sbb
mov
in
fimull
push
in
adc
out
or
fnstcw
xchg
dec
pop
fucomi
jnp
dec
fxch
xorb
fildl
repnz
hlt
adc
jb
leave
xor
movsb
orl
shrl
std
repnz
das
pop
sub
lds
or
pop
push
test
mov
add
dec
push
mov
and
data16
inc
pop
push
mov
cmpsl
cmp
push
int
cmp
repnz
ret
hlt
pop
out
leave
fsubrs
int
xchg
push
cltd
testb
popf
adc
sbb
hlt
push
adc
push
sbb
pusha
pop
mov
jge
and
out
sbb
pop
testb
jge
leave
inc
aad
orl
push
dec
enter
mov
push
inc
push
hlt
xchg
popf
int
xchg
sar
xchg
pop
xor
pop
jmp
or
mov
sbb
mov
jns
shll
stos
push
sub
dec
pop
xor
cmpsb
test
sub
jnp
and
cltd
xor
dec
int3
pushf
sti
xchg
popf
add
jg
es
je
repz
pusha
fildl
jge
pop
out
push
outsl
pop
add
pushf
ret
call
flds
jo
pushf
ss
and
mov
mov
jb
jmp
or
sarl
fwait
lods
push
push
xchg
xor
mov
ffree
sbb
sbb
mov
push
js
push
sub
dec
mov
xor
lock
arpl
inc
xchg
xchg
sub
pop
lods
addb
mov
mov
mov
inc
xor
jp
adc
ss
frstor
rcrl
pop
jae
push
fbstp
loop
ret
test
adc
leave
sub
shrb
ljmp
sub
outsb
out
mov
mov
xorb
xchg
nop
inc
stos
cwtl
jbe
or
pushf
adc
mov
pop
jle
jp
test
push
hlt
cmp
popf
pop
mov
fucom
mov
aam
fprem1
pop
dec
cmpsb
xor
popf
jo
push
sub
push
pop
nopl
jae
jge
jmp
fwait
outsl
cld
jp
fimull
cwtl
push
mov
fcoml
or
jmp
loop
insl
mov
jg
inc
out
testl
enter
sarb
adc
ror
mov
std
repnz
fwait
rorl
sbb
push
sbb
rcr
out
xlat
outsb
and
add
xor
mov
mov
add
jb
shr
aas
pushf
sbb
push
dec
mov
jmp
xchg
adc
pop
sbb
movsl
ret
jg
insl
les
xchg
push
cmpsl
movsb
std
int
jecxz
sub
adc
push
push
pop
sub
mov
not
daa
adc
pop
cmp
fs
push
inc
add
out
pusha
pop
mov
dec
cmp
xor
dec
loopne
cmovae
mov
ja
dec
int
jge
divb
hlt
cmpsl
fs
fcoms
js
sbb
dec
pop
and
pushf
adc
push
and
movsl
repnz
jecxz
dec
and
jg
xor
adc
andb
pushf
test
inc
into
in
addl
and
jp
ds
pushf
sbbb
mov
cmp
popf
stos
pop
fdivs
dec
xchg
mov
dec
testl
pop
rcll
xor
cltd
jb
lret
mov
xchg
xchg
adc
cld
or
xor
sbb
aad
cmp
push
lods
jbe
fnsave
mov
int3
jg
pop
pop
jl
pop
sub
aaa
add
into
xor
cwtl
dec
dec
inc
jmp
inc
push
in
andl
or
pop
rcrb
xchg
scas
lock
bound
stos
mov
xchg
pop
subb
mov
insl
push
scas
test
xor
mov
ja
cld
movsb
adcb
adc
jne
add
inc
mov
mov
xchg
stos
inc
fsubrs
ss
pop
in
pop
aaa
dec
add
dec
inc
or
pop
mov
lock
outsl
push
dec
cmpsb
xlat
repz
in
cld
mov
cld
rorb
dec
pop
das
inc
imul
mov
cmp
add
daa
mov
xchg
sti
sub
popf
adc
cltd
mov
inc
jb
cmpsb
push
pop
shrl
cld
lret
popf
add
repnz
jnp
push
xchg
xchg
cmp
cmp
test
xchg
addr16
mov
inc
xchg
jo
add
push
aas
adc
jno
xor
push
or
pushf
lds
jecxz
add
push
lret
aaa
cltd
ljmp
adc
push
pop
aam
inc
jbe
push
cltd
fstpl
test
fldl2t
movsl
and
gs
vpmuludq
faddp
or
add
jo
sbb
xchg
sbb
int
out
enter
sub
xchg
push
adc
xchg
es
and
add
jns
jns
adc
daa
int3
xor
adc
push
es
insl
jmp
ss
sub
test
mov
jae
out
out
hlt
sbb
test
hlt
inc
sub
cmc
leave
fwait
jbe
add
xchg
inc
mov
add
jb
sbb
test
lcall
and
cld
mov
sub
mov
mov
je
add
push
cmp
fwait
add
je
ja
jmp
xor
idivb
test
lea
cmp
mov
adc
add
cmc
ds
daa
xor
aam
ret
inc
inc
xor
push
push
push
movsl
nop
add
sbb
lods
cmp
mov
inc
cmc
add
xor
xchg
cmp
sbb
jne
mov
inc
aad
ja
rolb
std
mov
cmp
dec
sub
jmp
scas
push
insb
cmp
inc
idivb
mov
push
jnp
mov
xchg
inc
and
and
mov
sub
shl
mov
and
xchg
or
xchg
dec
int
dec
lods
sub
mov
mov
paddusb
mov
ficomps
mov
scas
ds
and
out
add
icebp
out
das
and
dec
adc
cltd
std
aam
adc
cld
ficoml
test
sbb
rcll
adc
add
xchg
mov
sbb
or
movsb
or
cmpb
fdiv
push
cmpsb
mov
cltd
cmp
mov
cs
mov
ljmp
mov
dec
pop
and
aaa
pop
loopne
add
movsb
jne
jle
cmc
pop
jnp
gs
xor
jne
sub
sbb
imul
jae
mov
mov
fimull
aad
stc
ja
cli
inc
pop
jo
sbb
fiadds
aaa
jns
mov
cmpsb
jns
sbb
push
mov
in
cmpsl
out
and
xchg
add
adc
mov
push
and
pop
xchg
jmp
shrl
jp
inc
cmpsl
pop
jne
test
pop
adc
bound
call
or
das
mov
mov
pushf
or
xchg
jg
lcall
in
ds
push
jmp
fwait
sbb
push
jmp
and
call
adc
mov
cmp
and
repnz
out
dec
ret
pushf
cltd
cmp
fisubrl
aas
imul
fdivs
fcoms
pop
pusha
aaa
int
sti
push
inc
fstpl
stos
jns
ficoml
fistps
add
mov
cmp
sub
out
idivl
adc
fs
jno
xor
xchg
push
stc
clc
imul
icebp
hlt
pop
lods
shrb
mov
xchg
cmpsl
adc
fidivl
mov
imul
lock
mov
repnz
fwait
push
push
mov
lret
xor
repnz
mov
faddl
scas
adc
ficompl
das
mov
xchg
xchg
inc
popa
hlt
loopne
daa
ret
decl
and
push
rolb
mov
insl
jns
lods
cmp
push
in
inc
add
lret
mov
cmp
cmpsb
pop
lds
test
les
mov
sub
test
mov
scas
sub
adc
mov
pop
popa
jns
push
imul
adcl
and
adc
cmp
add
jmp
adc
data16
in
xchg
sbb
fimuls
cmp
push
shrb
test
jnp
dec
shlb
mov
jno
sub
dec
mov
insb
jmp
addr16
lea
es
mov
xchg
push
cltd
or
aam
je
pushf
xor
xchg
pop
mov
mov
mov
sbb
mov
mov
sbb
cmp
jp
je
mov
mov
and
xchg
push
out
push
in
mov
popf
pop
xchg
and
pushl
pop
mov
xchg
xchg
push
repz
adc
lods
jecxz
sbbl
bound
jnp
int
and
call
lret
inc
cmp
xor
in
orl
lods
rcrb
inc
fisttpl
jne
mov
pusha
in
jb
push
sub
loopne
js
mov
adc
inc
mov
jb
lret
dec
sarb
shrl
mov
mov
lret
push
adc
fsubr
or
idivb
sub
enter
cmc
clc
jne
fs
xor
call
push
mov
push
movsb
dec
enter
fidivl
sbb
ds
aas
push
in
xor
fidivrs
mov
pusha
leave
xchg
les
gs
xchg
push
cmp
push
outsb
add
xor
pop
addr16
adc
out
out
xor
pop
cmp
gs
add
daa
test
lahf
push
sub
loope
inc
xlat
push
jg
icebp
mov
pusha
jg
std
mov
fadds
popf
or
stos
lahf
jo
sub
in
mov
jmp
sub
pop
jl
dec
es
xchg
inc
testb
and
lea
dec
xlat
add
data16
lods
dec
sub
jo
cmpsl
in
mov
push
pop
jg
nop
lea
push
aaa
stos
shrb
loop
adc
cs
mov
pop
adc
or
mov
cwtl
sub
mov
sub
out
mov
ljmp
and
movsl
cmpsl
ds
stc
cmp
cmp
mov
inc
dec
test
xchg
inc
lock
in
mov
cmc
add
sbb
out
popa
mov
xchg
hlt
fwait
daa
mov
sarb
and
add
xor
ds
push
call
jg
outsl
push
push
push
clc
jne
xchg
cmpsb
test
xor
lret
cld
push
mov
xchg
xor
inc
fst
cmp
pop
inc
push
in
fimuls
cmpsl
add
push
mov
jg
xlat
insl
cmp
cmp
xchg
lock
sub
add
ss
outsl
add
jge
mov
add
dec
rclb
push
repnz
std
pop
jg
std
xchg
pop
jl
xor
sbb
mov
or
xchg
sub
cmc
ds
pop
arpl
or
sti
fldt
rorl
es
cmp
xor
add
mov
loopne
sbb
mov
pop
ss
aas
aad
mov
adc
jo
cmp
inc
test
pop
negb
mov
xchg
jmp
fcmove
in
aam
mov
mov
push
mov
je
xor
out
shl
loope
push
ljmp
jno
ret
push
scas
push
mov
mov
push
mov
sbb
adc
test
mov
or
pop
movsb
enter
test
int
or
jle
or
mov
sahf
sbb
sbbl
lahf
fwait
lods
shlb
mov
jbe
inc
fcmovnbe
rcr
push
sub
shll
mov
rcrl
mov
inc
stc
fbstp
push
fmul
pushw
je
cmp
and
add
aas
push
cmp
imul
mov
mov
pushf
popf
sti
sti
jg
sub
scas
fmull
cmp
inc
and
ret
fcmove
inc
xor
enter
mov
adc
cmc
negb
lods
inc
stos
repz
cmp
jle
loope
push
cld
xchg
mov
add
cltd
pusha
addr16
icebp
push
inc
shll
mov
pop
notl
mov
and
pop
pop
push
outsl
lea
les
jb
int
dec
push
jae
jp
dec
xchg
icebp
xor
pop
jae
or
jmp
lahf
stc
jo
sysexit
jge
xor
xchg
shll
subl
divl
push
sbb
mov
call
mov
mov
mov
mov
inc
outsl
jbe
push
or
dec
mov
mov
fcomip
and
scas
scas
inc
pop
cld
daa
mov
rcr
add
test
imul
lods
pop
inc
in
jbe
nop
bound
or
and
xchg
out
mov
int
jl
popa
adc
lea
push
cmp
psubq
mov
mov
fmul
loope
xor
mov
pop
lcall
addr16
xor
xchg
pop
inc
push
ja
bound
dec
and
outsb
or
out
jb
sbb
jge
pop
dec
lods
rcrl
je
repz
call
je
push
mov
push
fwait
push
or
cmp
pop
inc
ficoml
sbb
and
push
mov
xchg
cwtl
popa
xor
sub
data16
clc
orl
xchg
fcompl
add
leave
mov
xchg
jbe
or
mov
scas
jmp
jno
shrb
xchg
lea
loope
sbb
or
xor
rclb
push
aas
iret
inc
stos
xchg
in
rcrb
and
inc
rcrl
icebp
xchg
xchg
push
enter
or
loope
mov
popf
aas
dec
fstps
jnp
jge
add
pop
mov
fistpll
xor
push
inc
sbb
cmp
cmp
sbb
rol
pop
cli
lock
and
pop
jg
pop
icebp
icebp
pushf
mov
into
adc
jae
lea
jns
out
jle
iret
aam
aaa
clc
ja
lret
out
cwtl
jg
int
lods
xchg
cmp
dec
xchg
jo
pop
rol
dec
repnz
mov
mov
ja
add
imul
add
jmp
push
mov
sub
mov
dec
ret
and
dec
push
lds
cmp
ficoml
ja
fwait
je
das
call
test
mov
popa
mov
sbb
dec
dec
push
mov
test
mov
lods
mov
xchg
lods
rol
repz
rolb
cmpb
pop
lcall
jae
and
cmp
jbe
jne
lods
mov
movsl
jecxz
rcrl
sbb
xor
pushf
hlt
push
lahf
jmp
repz
push
adc
push
insb
adc
insb
push
pusha
xor
pop
push
mov
inc
mov
ljmp
stc
into
cwtl
pop
loopne
pop
adc
in
gs
sub
add
cli
shlb
jmp
int3
ret
mov
pusha
fidivs
rcr
subl
adc
adc
push
addb
cmp
lcall
sahf
push
and
xor
cmpsb
aaa
xor
pop
cld
stos
std
cmp
fst
sbb
aas
in
into
cmp
pushf
nop
out
int
cmp
adc
push
jae
inc
xchg
subb
jae
or
leave
pusha
pop
out
adc
sub
pushf
cli
arpl
xor
pop
bound
jbe
loopne
mov
adc
mov
cwtl
das
cmpsb
iret
fidivrl
xorb
into
adc
loope
out
aas
mov
dec
mov
rorb
push
fwait
dec
and
sahf
fcmovu
xchg
psubd
sbb
dec
xor
push
movsb
cmp
arpl
fld
ret
inc
mov
jns
ret
out
ss
les
inc
add
mov
lods
mov
xchg
sub
sub
or
test
js
inc
lock
mov
pop
mov
pop
or
in
cmpsl
sub
push
xor
sub
fs
pop
dec
pop
hlt
mov
xchg
leave
lock
movsb
mov
loopne
rolb
sbb
mov
paddb
xor
inc
dec
mov
mov
pushf
jae
pop
sbb
dec
jg
push
sub
push
je
push
stos
inc
xchg
shlb
sbb
add
jg
add
shlb
mov
cmpsl
daa
mov
and
inc
out
dec
loope
add
pop
imul
js
test
xor
sbb
xchg
cmp
imul
mov
mov
adc
or
out
imul
les
adc
ss
pop
enter
sbb
or
dec
xlat
xchg
jle
jo
mov
fwait
cmpsb
inc
mov
test
pusha
lods
movsl
or
pop
into
jmp
add
loopne
movsb
mov
in
sub
cmc
cmp
ror
jae
mov
adc
cmc
test
fwait
clc
popl
cmpsb
push
lods
jnp
aam
movsb
adc
and
mov
xchg
push
into
cmp
jns
mov
xchg
xor
dec
aaa
xchg
testb
xor
and
iret
enter
outsb
push
dec
inc
cmpsl
dec
push
pop
fdivrl
mov
push
shrb
sbb
nop
out
pop
sbb
inc
inc
imul
std
and
and
sbb
xchg
mov
lock
imulb
inc
aas
xor
pushf
orl
mov
stos
fsts
out
test
jbe
scas
stos
and
pop
push
lret
and
in
std
adc
and
inc
shlb
inc
and
cmc
xchg
xlat
or
fs
hlt
aad
scas
insb
in
ret
sbb
push
mov
push
cmp
inc
cld
lret
lods
loope
fbld
and
mov
pop
jmp
mov
push
in
pop
int3
and
je
int
cmpsb
mov
ret
xor
jnp
mov
jne
adcb
push
fldl
loopne
lret
mov
mov
lock
fstl
dec
xor
xchg
shrl
jne
das
push
and
pop
mov
movsl
int
iret
ljmp
insb
jmp
add
dec
dec
ja
div
nop
dec
mov
pusha
enter
loopne
cltd
lret
sahf
addr16
adc
jno
or
sbb
out
mov
adc
test
cmp
adc
shlb
lea
sbb
out
dec
sub
xor
push
and
fidivrl
sbb
inc
dec
adc
hlt
fsubr
xchg
push
ret
sbbl
orb
inc
iret
pop
push
flds
into
mov
dec
mov
sub
das
test
or
loopne
jmp
pop
aas
jae
das
cwtl
loope
outsb
adc
les
outsb
sbb
shlb
shl
and
repz
or
cltd
xchg
sub
adc
add
outsb
adc
fbstp
mov
jmp
cmp
stos
idivb
in
imul
ja
les
xchg
xchg
scas
add
mov
lret
jl
mov
in
imul
test
adc
lods
test
cmc
adc
testb
cmpsl
xor
or
loop
repz
aas
enter
jne
int3
addb
xchg
dec
ss
xchg
in
pop
fstpt
mov
push
cmpsl
mov
cli
jnp
lret
cmpsb
das
inc
fsubs
lret
push
xlat
scas
js
stc
gs
orb
or
mov
dec
popa
lods
jns
into
fbstp
sbb
cmp
iret
or
sub
xor
or
fsubl
das
mov
lcall
mov
aad
and
adc
sbb
pushf
lods
scas
push
and
adc
adc
xchg
test
ror
sub
lods
sbb
test
cld
mov
cs
iret
ret
subl
push
shl
xor
xchg
mov
inc
movsl
cmp
push
mov
xchg
mov
mov
std
jmp
out
push
lret
pop
push
mov
ljmp
push
add
add
addl
ficoms
iret
mov
pavgw
arpl
jno
call
inc
pusha
clc
or
pop
and
je
insb
into
cmp
rep
lock
and
pop
mov
push
int
mov
adc
outsl
daa
andb
cmpsl
sbb
aam
stc
int3
test
insb
loopne
fisubs
xchg
mov
push
cmp
mov
dec
jb
fidivrs
test
iret
out
leave
jae
sti
repnz
or
cs
or
pop
loope
mov
pop
subl
sbb
pop
xchg
push
dec
rcrl
icebp
mov
lods
jmp
popf
or
dec
pop
jns
push
test
mov
icebp
sarb
out
out
xlat
ja
or
push
pop
sub
mov
mov
sbb
sbbb
xchg
in
cltd
ss
push
adc
push
mov
or
out
lret
lcall
stos
mov
inc
stos
inc
dec
sub
sub
add
mov
test
pusha
out
loop
fwait
rcrb
xor
into
or
sub
xchg
dec
out
daa
xorb
xchg
pop
stc
out
cmpsl
out
fdiv
nop
pop
dec
pop
lret
adc
mov
dec
cmp
xor
mov
jno
out
jb
shrb
stos
adc
stos
in
call
cmp
loope
xlat
mov
add
xchg
or
sbb
pop
cwtl
mov
test
push
movsb
pop
aam
pop
pop
negb
mov
pop
stos
jge
or
mov
inc
in
push
jne
mov
call
sub
insl
pushl
adc
inc
fldt
out
rcr
loope
inc
lahf
adc
jge
xor
jp
and
push
push
or
add
popa
and
or
lcall
cmc
or
lea
cltd
dec
xchg
popf
sub
push
lods
jne
and
adcb
aas
mov
or
mov
adc
test
in
inc
bound
test
mov
mov
sbbl
or
jnp
pop
xor
movsl
cmp
xor
add
sub
sub
xor
push
dec
pop
mov
and
into
hlt
ds
pop
sub
cli
pop
pop
dec
mov
stc
nop
xor
icebp
loopne
fisubs
mov
fimuls
repnz
enter
mov
inc
leave
inc
enter
or
jge
rcl
cli
sbb
les
es
cs
adc
mov
daa
push
add
or
pop
mov
sbb
cmp
and
jle
bound
sub
and
sub
scas
rcrl
or
fldl
push
lock
scas
lods
jb
xlat
outsl
inc
xor
in
mov
ret
ficoml
mov
pop
mov
int3
scas
ret
fbld
movsb
sub
out
in
jbe
xchg
mov
mov
adc
dec
aaa
xor
sarl
jns
mov
jae
call
push
dec
test
or
outsl
fmul
rol
arpl
repz
add
fcoms
sub
cmp
pusha
int
push
test
int3
xor
bound
das
outsl
ret
leave
push
add
nop
pop
js
xchg
ret
mov
and
add
or
outsl
pop
adc
pushf
and
xchg
push
faddl
arpl
or
adc
pusha
in
adcl
repnz
cmp
push
vandps
xchg
adc
fstpt
ret
lods
pop
push
push
adc
test
aaa
add
stos
or
test
lret
arpl
popa
inc
dec
push
jle
jg
mov
jo
lds
mov
repnz
addr16
mov
inc
lret
cld
and
adc
mov
repnz
inc
and
in
cmp
mov
sarl
cmc
stc
jp
mov
loop
sahf
adc
insb
jbe
dec
in
mov
ret
ds
enter
mov
in
decb
pop
sub
mov
je
cmp
and
jl
xchg
and
adc
cmp
adc
movsl
pop
scas
pop
push
and
inc
push
sbbl
shll
mov
fcmovu
frstor
mov
call
xchg
and
int
cmp
and
cltd
mov
je
jg,pt
out
or
pop
cmp
push
loop
imul
or
add
es
pop
inc
icebp
xchg
mov
test
xchg
cwtl
daa
mov
push
xlat
mov
jge
xchg
push
lahf
add
inc
xlat
inc
jp
cmp
jmp
cmc
sbb
mov
push
cmp
pop
sub
mov
out
fimull
jl
outsl
sbb
xor
push
xor
cmpl
mov
add
inc
xor
xor
dec
or
xor
jge
fistl
add
dec
mov
movsl
lock
inc
in
enter
or
push
stc
push
sbb
jne
sub
popa
pop
xchg
or
add
sub
lret
pop
push
inc
fadds
mov
inc
mov
call
sbb
and
inc
inc
mov
xor
sar
xchg
mov
adc
cmp
cmc
sbb
shll
sbb
fbstp
cmp
pusha
and
inc
out
ja
adc
shlb
aad
fstpt
sarb
mov
repnz
lcall
icebp
sub
adc
dec
adc
jno
hlt
into
imul
adc
cmp
shrb
push
sti
sbbl
lods
push
and
dec
or
int3
dec
lret
mov
pushf
into
push
dec
xchg
dec
loop
outsl
inc
inc
shrl
aas
xchg
push
push
push
sahf
mov
pushf
xor
pop
popf
sub
mov
notb
es
add
leave
xchg
aaa
cmp
bound
push
mov
stos
pop
and
adc
aam
lcall
dec
xlat
push
and
es
int3
mov
imul
xchg
out
daa
cli
mov
mov
mov
push
pop
imul
mov
fdivrp
cmp
xchg
ja
test
or
lret
lods
mov
add
ds
and
lret
lods
adc
mov
std
mov
cmpsb
cmp
mov
sbb
pop
orl
push
lods
pop
sbb
mov
addl
jnp
sahf
adc
test
test
leave
xor
mov
jnp
popf
loope
pusha
filds
mov
mov
add
jl
mov
fldcw
std
orb
fldcw
mov
dec
sbb
inc
and
jge
add
adc
clc
sbb
pop
inc
gs
insb
xchg
cmp
fistps
adc
mov
sbbb
sbb
pop
jo
ficoml
sbb
popf
ret
jg
repz
pop
and
fidivs
ds
add
jo
xchg
stc
shll
pop
sub
push
test
and
sarb
js
jmp
adc
imul
add
ljmp
imul
mov
xor
sub
insb
popf
cld
lahf
and
sbb
push
arpl
sarl
mov
ret
push
or
or
sbb
adc
rcll
gs
js
icebp
push
insb
mov
call
jle
mov
add
and
xchg
aas
aad
push
dec
arpl
sbbl
and
jb
jb
js
popa
rolb
mov
add
add
push
loopne
lea
loope
jl
adc
rcl
mov
fmul
inc
das
xor
pop
sub
inc
push
mov
mov
data16
in
cmp
pusha
imull
test
test
add
stc
lret
add
jae
or
aaa
es
inc
xor
mov
add
call
xchg
adc
dec
jecxz
and
scas
std
test
sti
mov
jno
adc
xchg
sub
into
je
in
sub
leave
fdivl
fwait
pop
xor
out
jecxz
pop
lcall
filds
lea
jge
or
add
mov
out
dec
aad
or
pop
cwtl
inc
jnp
pop
mov
mov
xchg
out
xor
popf
sub
push
mov
repz
xor
sbb
leave
inc
mov
fidivs
cld
jb
or
gs
rorl
xchg
mov
pop
jge
mov
or
notl
scas
inc
je
adc
or
popf
cmc
scas
push
in
sbb
push
cs
and
sub
mov
mov
mov
addb
push
jne
lcall
mov
leave
mov
push
cmp
fidivl
lahf
sub
popf
xchg
pop
int
and
orb
pop
mov
loopne
test
xchg
stos
xchg
ret
int
out
xchg
sbb
mov
mov
pop
lock
pop
cs
or
pop
cmp
dec
adc
xor
data16
insl
mov
push
jbe
adc
xchg
mov
or
gs
aam
jg
adc
imul
sbb
mov
push
enter
jmp
jle
imul
lret
jecxz
inc
push
lret
int
mov
aas
or
lahf
shlb
rcll
sbb
lods
jp
jmp
mov
bound
pop
jmp
jae
in
in
test
dec
or
push
lock
xchg
cmc
push
and
movsb
mov
dec
jb
lret
mov
and
xchg
scas
ret
cmpsl
pop
std
aas
mov
stos
ret
jb
xor
or
pop
inc
iret
mov
bound
repz
jmp
and
mov
in
pop
hlt
xchg
sub
loopne
jnp
testb
cmp
sbb
mov
repnz
loope,pt
std
clc
xor
ret
mov
add
imul
and
adc
push
xchg
and
ds
inc
int3
mov
scas
push
jmp
push
inc
popa
mov
nop
hlt
scas
push
add
mov
call
loope
and
out
or
xchg
push
fistpl
jle
jl
repnz
xor
sbb
clc
out
gs
nop
xchg
add
mov
sub
gs
mov
sub
jne
mov
daa
stos
xor
rorl
mov
data16
pop
rorb
pop
imulb
lds
cmpsb
push
mov
scas
popa
and
adc
push
hlt
mov
jo
das
bound
and
dec
inc
cld
insb
ds
insb
dec
test
rolb
cmpsl
pop
add
push
add
jbe
cmp
in
ds
dec
ret
dec
mov
xchg
xchg
sahf
ljmp
movsb
push
mov
or
js
xor
push
jge
or
lods
fmul
and
aam
or
inc
pop
add
jbe
and
fidivs
test
and
jl
mov
mov
cmc
arpl
mov
out
insl
sbb
pop
adc
mov
mov
mov
jb
adc
test
dec
xor
jg
imul
pop
aad
pop
mov
data16
insb
lock
fistpll
test
in
insb
jecxz
lret
jmp
mov
pop
or
popa
dec
shl
data16
mov
xor
adc
inc
call
in
cmp
cmp
mov
les
stos
fmuls
test
inc
cmp
mov
mov
cmp
cmpsb
sub
cmc
ror
sbb
cmc
inc
cwtl
sub
lahf
stos
dec
jecxz
cmp
add
aas
fimull
push
lods
test
dec
cmpsb
in
cmp
movsl
outsb
push
ret
test
mov
notl
jno
xor
mov
data16
stos
inc
and
push
push
aad
jge
cld
shr
mov
and
mov
push
shlb
fs
fs
add
and
xor
dec
cmc
add
clc
push
in
adc
lret
call
and
stos
cmp
repz
and
aas
mov
std
push
sahf
arpl
xor
lock
push
and
loope
push
xchg
xchg
stos
xchg
repnz
je
sub
jno
or
inc
inc
pop
stc
xchg
sub
mov
sub
mov
pusha
das
fcoml
sbb
jns
adc
mov
aaa
data16
mov
and
loop
ret
mov
mov
roll
pop
ret
mov
xchg
pop
out
and
and
mov
fcmovbe
repnz
aam
add
push
mov
pop
mov
test
jne
inc
lret
popf
cmp
es
ficoms
dec
mov
or
pop
jo
adc
test
dec
xchg
insb
sub
xorb
cmpsb
ja
adc
enter
cmp
or
xor
ret
or
and
stos
adc
in
mov
fbstp
dec
pop
adc
div
sbb
insl
mov
pop
cmpsb
in
fwait
pop
in
dec
fwait
ja
and
fnstenv
shll
shll
sbb
jnp
mov
int
mov
xchg
addr16
jecxz
xchg
out
ret
sub
mov
push
lods
das
sub
lods
fwait
test
dec
add
mov
nop
test
mov
sub
mov
mov
stos
ror
sub
jmp
pushl
or
push
pop
dec
fcoms
rolb
loope
test
and
and
dec
jecxz
mov
out
pop
cmpb
fdiv
pop
mov
pop
add
jecxz
into
sbb
push
cmpl
iret
cmp
xchg
pop
sbb
mov
ds
pop
loop
shr
mov
jmp
sbb
pop
sbb
pop
test
scas
mov
cmpb
xchg
test
fsubrl
mov
scas
out
paddq
cmpb
jns
lret
int3
mov
dec
xlat
or
in
pop
mov
js
or
lret
pop
rorb
ret
xor
jne
jno
or
xor
int
lds
scas
pop
bound
mov
mov
das
mov
cmp
adc
add
jb
pop
in
movl
lret
xor
adc
cmp
jmp
sub
xor
xchg
popl
push
aad
push
pop
and
mov
inc
mov
sahf
clc
and
mov
add
call
xor
adc
push
inc
flds
push
adc
push
mov
push
sbb
mov
lds
insb
xchg
pop
lret
cmp
push
sbb
jmp
sub
icebp
mov
dec
xor
dec
mov
jmp
xor
lcall
gs
inc
lods
pop
xchg
arpl
push
mov
jle
cltd
inc
mov
mov
push
cmc
fsubrl
test
scas
or
je
test
and
sub
cmp
rcll
mov
xchg
cmp
mov
adc
inc
ja
pop
gs
and
rdtsc
in
xor
imul
data16
jae
mov
bnd
pop
scas
out
adc
ss
jb
cwtl
sub
push
cmp
mov
jmp
sahf
mov
pop
cltd
jl
jns
sbb
xorl
adc
repz
mov
aas
pop
jmp
jg
mov
mov
inc
mov
movsb
pop
frstor
mov
scas
jl
jmp
inc
fdivrl
add
in
nop
xchg
imul
mov
pop
imul
xchg
inc
std
and
and
push
into
xor
xor
popa
jne
pop
pop
ret
push
or
hlt
xchg
xchg
add
sbb
test
into
ss
hlt
ss
xchg
adc
xchg
in
xor
les
cltd
sbbl
adc
push
xor
enter
xlat
mov
push
fwait
cmpsb
out
sub
jge
xchg
mov
shrb
or
pop
mov
xchg
ret
pop
mov
scas
add
mov
pop
sti
icebp
loop
or
sub
lds
add
adc
sub
out
inc
cwtl
and
insb
add
jmp
add
or
push
jmp
cmp
sahf
out
inc
out
std
dec
and
and
movsb
in
push
and
push
fnstenv
jmp
xchg
xchg
ja
dec
and
lahf
or
and
ss
shrb
dec
xchg
mov
xchg
jns
test
mov
cltd
fldcw
or
or
aam
xchg
add
or
cmp
xchg
sub
or
out
add
pop
pop
int3
cmp
pop
sbb
cmp
ja
add
pop
mov
sub
add
pop
adc
cmp
repnz
test
add
mov
mov
inc
add
or
xchg
out
adc
jmp
adc
stc
fcompl
icebp
xchg
mov
xor
xor
jns
aad
scas
and
cwtl
pop
xor
out
cld
addr16
enter
pop
stc
inc
mov
popf
sbb
fs
mov
loope
aad
dec
pop
mov
mov
popa
add
cwtl
adc
ret
inc
push
mov
cs
xlat
mov
mov
iret
mov
sub
jge
in
or
movsl
jns
jg
test
sbb
mov
js
mov
insl
mov
insl
dec
int
les
mov
sbb
addb
xchg
out
cmp
ss
lds
repnz
cmpsl
dec
dec
pop
dec
andl
ficomps
xor
lret
ljmp
dec
xchg
jae
dec
insl
cmp
ret
shll
mov
gs
mov
loop
jmp
cmpsl
aam
mov
mov
dec
aaa
fnstsw
push
loope
mov
out
mov
js
sub
adcl
lods
mov
das
repnz
push
lock
mov
sbbb
dec
dec
fists
lock
pop
push
add
pop
lret
pop
jecxz
sbb
pop
lcall
js
mov
jp
and
int
lcall
andl
lret
fwait
std
jmp
fsub
xlat
and
jl
xor
lods
mov
aas
lcall
pop
call
xchg
loop
test
test
or
gs
les
popf
mov
push
mov
mov
push
inc
xchg
inc
into
sbb
hlt
mov
movsl
out
mov
rcrl
scas
and
fbstp
dec
and
aad
rclb
notb
daa
lods
pusha
xlat
lea
lahf
and
scas
sbb
inc
ds
in
jo
leave
mov
rcrl
pop
sbb
fimull
inc
popa
jecxz
test
fimuls
adc
ja
pop
mov
push
sbb
pushf
stos
inc
or
sbb
repnz
sarb
dec
testb
ss
int
loop
not
add
ja
xor
in
jnp
push
mov
test
loopne
mov
xchg
xchg
pop
stos
pop
adc
pop
outsl
outsb
jmp
fcomps
sub
sub
cmp
insb
xor
sbb
add
mov
xchg
cmp
cmpsl
aam
sub
cmp
mov
ret
pop
mov
lea
fidivrl
test
jb
out
into
shlb
pushf
pop
jp
or
pop
int3
movsl
xchg
jp
ret
xchg
outsb
cmpsl
mov
shll
iret
dec
movsl
cmp
adcb
sbb
and
mov
fldl2t
int
sub
xchg
imul
sbb
add
xor
mov
sub
jg
pop
stos
je
int3
and
and
pop
fcompl
sub
movsl
pop
insb
mov
stos
leave
xchg
popf
arpl
icebp
push
aaa
call
addl
xor
int
xchg
fs
add
repz
mov
add
mov
mov
out
lea
test
cmp
in
pop
les
jae
aad
das
cmpsb
cmp
in
mov
push
loope
pushf
fstpt
push
push
or
dec
ficompl
out
add
sub
test
xchg
pop
icebp
leave
pop
fmul
push
push
sbb
push
cmp
cmp
cmp
test
xchg
mov
add
push
mov
dec
enter
cwtl
or
jno
dec
fs
mov
roll
mov
int3
jecxz
push
and
inc
lcall
fwait
mov
xlat
cmc
out
mov
sbb
enter
mov
ljmp
jb
pop
xor
adc
imul
cltd
sbb
or
lock
pop
out
adc
mov
sbb
cwtl
test
add
imul
xor
cmp
xor
mov
inc
inc
inc
movaps
sbb
xchg
pop
sub
pop
xor
stc
dec
in
dec
fs
mov
pop
data16
push
aas
push
sub
mov
sbbb
cmpsl
push
sub
ret
or
jae
dec
mov
push
mov
jae
jge
pop
in
dec
push
call
in
jo
pop
loop
xchg
sub
jne
jl
aaa
inc
arpl
fnsave
push
xchg
xchg
xchg
and
adc
inc
mov
repnz
ret
mov
adc
jg
dec
add
or
repnz
pop
fisubrs
or
cmp
cmp
sarb
xchg
jge
xchg
and
fcoms
push
xchg
inc
scas
sbb
stos
in
pushf
bsf
push
loope
add
or
xchg
movsb
mov
lahf
cmp
xor
mov
leave
pusha
rorb
dec
insb
out
lcall
pop
and
loopne
adc
inc
stc
xlat
inc
inc
inc
mov
das
inc
call
xchg
jns
pop
jmp
sbb
jecxz
pushf
loopne
or
sub
mov
sub
xchg
and
xchg
xchg
fidivl
test
movsb
xor
repnz
out
xchg
sub
jbe
inc
in
mov
dec
rcll
cwtl
sti
test
imul
ret
dec
add
push
aas
inc
mov
inc
and
inc
dec
jno
push
ss
cmp
dec
add
daa
and
or
pop
lods
cmp
imul
clc
jg
subl
jo
aam
mov
xor
das
push
pop
adc
fsubrl
nop
push
rcpps
fstl
jns
mov
xor
imul
lods
addb
sub
mov
imul
adc
jo
xchg
addr16
adc
mov
sbbb
mov
das
jl
shll
fstl
mov
sbb
repz
je
mov
push
mov
jp
sub
cmpsb
loope
mov
sub
xor
push
dec
fimuls
rcl
in
outsl
and
aaa
or
add
scas
mov
jbe
cmpsb
cs
popf
inc
popa
aad
ljmp
xlat
pop
stc
mov
mov
pop
pop
cwtl
leave
xchg
shr
mov
loopne
sbb
cmc
adc
cmp
loop
pop
imul
inc
in
lock
es
pushf
adc
dec
mov
gs
push
inc
cmpsb
cmpsb
sub
jge
les
push
mov
insl
jge
mov
mov
mov
cltd
and
adc
stc
xor
xor
inc
cmpsb
mov
mov
or
pop
lret
mov
out
les
cltd
sbb
cs
pop
dec
and
jns
lret
pop
addr16
jl
and
stos
in
inc
fcomps
push
idivl
aas
pop
adc
movsl
cmp
nopl
inc
pop
mov
in
fistl
dec
psubd
mov
inc
sbb
mov
incl
in
jbe
mov
lock
dec
shl
jg
addr16
jl
sbb
dec
in
ja
mov
mov
daa
push
cltd
xchg
cltd
or
pop
icebp
lret
jnp
sub
out
lret
rep
mov
mov
pop
pop
or
dec
repz
push
dec
lock
in
sub
pop
jge
popf
cmpsb
out
mov
int3
and
push
ret
cmc
enter
push
in
and
insb
outsl
mov
inc
pop
mov
ret
mov
jo
xor
pop
mov
mov
rcll
mull
sbb
lret
mov
sub
pushl
xchg
repz
dec
in
push
std
loop
push
outsl
inc
push
push
mov
lahf
and
sarb
cwtl
push
dec
sbb
cmp
lcall
stos
sbb
xor
or
sbb
mov
pop
shr
cltd
or
pop
bound
jbe
loopne
add
xchg
and
pop
inc
lea
out
sub
inc
push
sahf
mov
lahf
pushf
div
outsb
std
lea
stos
xchg
jnp
loopne
inc
pop
jne
jns
mulb
and
sarl
jp
les
addr16
stc
movsl
lods
in
in
sti
inc
jbe
pop
jg
push
outsb
xchg
das
lock
and
inc
pop
stc
movsb
scas
lods
outsl
mov
inc
repz
cmp
push
inc
shrl
movsb
dec
adc
mov
push
or
enter
adc
jl
inc
insl
jb
sbb
mov
push
mov
arpl
test
outsb
mov
xor
mov
testl
mov
jmp
cmp
int
add
aaa
sbbl
outsb
jmp
sti
mov
mov
mov
mov
cmp
daa
mov
xchg
xor
stos
popa
int3
jecxz
mov
fwait
loope
test
adc
ja
imul
push
repnz
add
fwait
xchg
xor
inc
test
push
sub
inc
lods
sub
cmp
push
iret
adc
mov
loope
cmp
call
mov
inc
pop
mov
adc
jnp
ret
sbb
gs
cmp
push
leave
push
push
adc
xchg
loop
idivb
fdivrl
in
mul
mov
cli
addb
or
cmc
pop
pop
repz
mov
fs
lahf
ss
call
jecxz
or
sbbl
in
mov
add
fildll
shrl
scas
xor
insb
add
cmp
and
das
sub
pop
jg
out
insb
bnd
aas
pop
test
dec
and
inc
xchg
sarb
mov
jnp
pop
cmp
jno
scas
popl
mov
mov
adc
inc
and
push
arpl
pop
mov
push
stos
pop
push
xor
ss
mov
mov
cmp
push
dec
cmp
jp
jne
sub
js
mov
push
pop
mov
xchg
aas
mov
jae
shlb
or
incb
jge
xchg
jl
popf
es
push
mov
mov
shr
jl
pop
imul
or
xor
cmpsb
clc
adc
adc
adc
ss
mov
cltd
or
jo
aad
mov
stos
inc
mov
call
aam
outsl
add
rcll
add
xchg
outsb
test
inc
je
xor
pop
sahf
jb
loop
fsubp
jbe
pop
inc
scas
push
out
loopne
pop
cmp
inc
icebp
iret
dec
and
xchg
fidivrl
xchg
sub
pop
cltd
gs
sub
cmp
cmp
sub
pop
push
loop
fcomps
or
mov
xchg
dec
test
xchg
jp
shrb
ja
dec
aam
jecxz
test
rolb
cmp
dec
ret
in
ljmp
push
jg
adc
cmp
dec
pop
push
cwtl
cld
lcall
in
xchg
nop
sub
movsb
arpl
or
cmp
ljmp
gs
xlat
mov
mov
mov
mov
xchg
iret
push
mov
jnp
mov
out
pop
xchg
and
das
adc
dec
mov
or
jae
out
test
xchg
jmp
fistps
gs
sbb
sarl
lods
fnsetpm(287
pop
loope
jle
std
insb
jle
imulb
and
add
adc
cwtl
and
outsl
xchg
sub
xchg
js
scas
ljmp
insl
push
ja
cmc
adc
enter
pop
fbld
out
sbb
or
imul
les
pop
mov
dec
rcll
xor
sub
sbb
into
leave
dec
mov
dec
xor
fs
iret
mov
xchg
les
mov
out
xchg
dec
fistl
bound
scas
es
fistps
sbb
xorl
pop
not
outsb
sub
jb
lahf
cmc
pop
add
sub
or
sub
push
mov
jl
add
push
jns
push
push
scas
jns
xor
mov
pop
in
dec
cmp
loopne
ret
mov
add
jmp
jecxz
push
pop
cmc
aam
ljmp
xchg
sbb
repnz
mov
inc
add
dec
andb
and
jb
cmpsb
inc
loope
push
rcrb
sub
fldcw
sahf
lods
and
loope
sub
mov
push
aaa
or
test
sbb
inc
popa
push
nop
pop
insl
mov
mov
imul
xchg
sub
rorb
xor
mov
gs
mov
popf
pop
mov
or
mov
lret
push
pushf
and
lock
push
inc
fsubrl
sbb
mov
push
outsb
icebp
jne
stos
dec
cld
adc
adc
outsl
pop
popa
and
in
arpl
inc
andb
mov
in
mov
or
gs
or
dec
mov
loopne
push
loopw
xchg
pop
push
dec
jp
lods
aas
mov
inc
in
icebp
dec
jne
aam
inc
sbb
insl
lods
pop
sbb
inc
out
and
inc
xor
adc
pop
add
sub
adcl
fbstp
pop
sbb
ret
in
cmovbe
dec
pop
push
pushf
pushf
mov
test
into
dec
sub
mov
and
es
andl
push
int3
lret
xchg
sub
inc
sub
xchg
jge
xor
jp
cld
stos
fstpl
stc
nop
loopne
cmp
fimull
sbb
mov
iret
sub
scas
pop
push
and
test
lahf
xor
shl
pop
dec
stos
cmpsb
mov
pop
push
mov
cmc
stos
sbb
fdivl
and
xor
inc
mov
int
mov
push
int
jl
leave
fnstenvs
sbb
adc
mov
nop
psubq
sub
mov
ret
sbb
and
cmp
mov
jno
inc
add
addr16
insl
sbb
cld
or
mov
or
int3
insl
cmp
mov
test
push
inc
iret
leave
mov
adc
jp
push
out
dec
xor
mov
pop
iret
and
hlt
add
ficoms
ljmp
lret
jae
stc
jb
cmp
lahf
fldcw
aaa
or
push
pop
push
je
xor
jbe
leave
mov
add
sarl
fcompl
cmp
jmp
out
push
jne
or
sbb
test
andl
add
fbstp
xor
cmp
xchg
xchg
xor
adc
cltd
cwtl
test
es
repnz
adc
lods
inc
ja
jns
ret
jle
in
jo
mov
out
or
pop
mov
sub
dec
mov
lods
add
loopne
xchg
imulb
aas
mov
into
cmp
imul
adc
or
inc
pop
adc
push
mov
sbb
pop
dec
mov
adc
mov
addr16
jmp
fwait
jno
push
popf
dec
scas
and
loope
adc
cmp
or
pop
in
cmp
pusha
jmp
mov
rcrl
repz
fdivrs
gs
jae
push
aas
cli
shr
idiv
xchg
jnp
notl
popf
sbb
adc
or
fmuls
or
cmp
insb
aad
aam
pop
sbbb
imul
mov
inc
or
dec
pop
repnz
xchg
mov
scas
movsl
out
out
xlat
shlb
mov
aad
adc
dec
cltd
loopne
lret
imul
je
xor
out
pop
and
loop
and
fistps
aas
push
cmp
mov
pop
mov
fcomp
and
out
call
lret
mov
mov
or
jns
mov
movsb
xchg
xchg
das
xchg
inc
popf
ds
jno
shrd
xchg
aas
sbbb
push
lods
push
subl
or
addb
es
xchg
sub
imul
sbb
jo
add
jmp
inc
xor
jmp
mov
adc
or
or
mov
jecxz
fs
int
sarl
pop
xor
cs
inc
jb
jge
sbb
jp
add
mov
xchg
outsl
sbb
jbe
push
add
mov
faddp
lods
popa
bound
vzeroall
adc
lods
enter
mov
xlat
and
adc
add
dec
sub
pop
outsl
cli
push
inc
sti
pop
hlt
sub
pop
lock
leave
adcb
lahf
pop
cmc
sarb
jmp
leave
rep
dec
add
movsb
pushf
fnstenv
les
xchg
inc
lahf
and
or
pushl
mov
fisttps
xchg
jo
mov
out
sarl
jmp
jmp
sub
mov
push
loopne
lds
out
mov
lret
orb
cmp
loopne
test
adc
loop
cmc
mov
lret
mov
loopne
leave
leave
sbb
mov
lret
mov
int3
xlat
stos
sbbb
and
jp
sub
inc
fwait
sub
aam
icebp
pop
aaa
mov
inc
imul
jmp
out
jo
dec
mov
jbe
pusha
test
pop
cld
mul
xor
test
cmp
sub
lea
in
inc
test
dec
int
lahf
xchg
fiadds
push
sbb
sbb
hlt
nop
dec
loop
movsb
inc
xchg
mov
or
push
jg
dec
loop
mov
add
jb
cmpsl
sub
adc
ja
das
inc
add
stc
and
ret
fstl
mov
inc
movsb
aaa
mov
push
int3
mov
scas
mov
sub
daa
jmp
inc
pop
or
mov
add
jle
adc
mov
jno
ret
xchg
push
sbb
pop
dec
push
add
subl
pop
sbb
in
mov
mov
push
sahf
testb
cmp
repz
or
test
lock
mov
clc
xor
sarb
xchg
in
call
iret
adc
mov
or
and
iret
jne
add
mov
xor
xchg
jmp
popa
add
xchg
nop
movsl
js
jnp
dec
mov
sub
roll
sahf
inc
dec
fisttpll
sub
and
push
adc
adc
cmc
mov
movsb
push
popa
cmp
std
inc
jg
rcll
cmp
mov
xlat
xor
jmp
cmc
dec
and
dec
in
iret
sahf
aam
test
pop
cs
xor
xor
aam
cmpsb
popf
xor
inc
mov
mov
push
push
loope
cmp
add
jge
aad
imul
sahf
sbb
and
hlt
sti
dec
mov
push
int3
jnp
jle
iret
sub
test
xor
cli
pop
aas
mov
adc
dec
xor
test
getsec
push
xchg
cmpsb
rcrl
repnz
sbb
or
arpl
and
push
sub
mov
ret
outsb
xlat
cmp
pop
inc
shlb
imul
shl
outsl
pop
lret
std
xor
dec
sub
ja
inc
mov
push
out
ret
leave
into
jno
push
arpl
mov
aaa
aas
add
push
pop
adc
fisubrs
addr16
xchg
cmp
and
cltd
xor
mov
mov
fisubrs
sub
mov
repnz
icebp
insb
xlat
mov
outsl
push
sub
mov
sbb
pop
outsb
adc
and
jmp
ja
push
in
fsubr
mov
das
pop
dec
loop
sub
imul
fmull
sub
pop
mov
or
sub
add
clc
sub
icebp
or
or
mov
scas
subb
jnp
lods
sub
pusha
inc
sti
jne
sub
daa
push
std
jo
test
xor
mov
pop
add
adc
lret
call
add
sti
ljmp
sbb
icebp
es
lods
xorb
je
cmpsb
movsl
test
sbb
aad
jae
and
mov
jp
cli
and
jmp
les
inc
outsb
loope
push
cmpsb
mov
add
sub
pop
xor
dec
sbb
jg
sbb
andl
and
xchg
jge
mov
out
pop
leave
ss
test
or
xchg
cmp
mov
push
xchg
ja
dec
outsb
push
mov
in
pop
dec
fisttps
jp
sbb
push
iret
aam
or
mov
xor
loopne,pt
fdiv
xchg
rcrb
pop
loopne
jns
ret
jle
adc
inc
jo
popf
cmpsl
mov
push
shrb
xchg
aad
xlat
repz
cmp
cmpb
adc
test
and
loope
mov
add
mov
sub
inc
mov
push
and
pop
in
push
cmp
push
in
sbb
cmpsb
ret
test
popf
adc
xor
adc
push
bound
cmc
mov
push
nop
dec
fs
pop
in
push
dec
mov
mov
rorb
cs
stc
test
dec
adc
add
fucomip
in
xchg
adc
sub
adc
xor
in
hlt
icebp
in
scas
sbb
mov
test
scas
dec
daa
push
repz
mov
lcall
into
ja
stos
test
add
jno
adc
mov
sarl
mov
outsb
mov
jno
shrl
pop
push
mov
ss
xchg
pop
arpl
aad
in
jl
cmp
lds
cmp
xor
lea
xchg
stos
popf
call
lret
jmp
push
into
gs
adc
in
or
cmpl
and
push
lret
mov
pinsrw
or
cld
jmp
mov
dec
mov
jne
subl
rcrl
cmpsb
testb
and
fisttpl
push
xchg
add
xor
sbbl
popf
pop
loope
fsubl
andl
repz
out
cld
loopne
and
subb
sub
push
pop
subb
inc
leave
lret
cld
ljmp
setbe
cmpsl
or
cmpsb
mov
in
cmp
jg
cwtl
xchg
pop
xor
mov
mov
mov
mov
sbb
push
popf
mov
push
mov
xchg
inc
sbb
gs
lea
stos
mov
ljmp
cli
ret
sbbl
imul
pusha
sub
inc
out
inc
addb
mov
int
sahf
pop
lcall
ret
lea
es
test
insb
out
pop
mov
lea
mov
push
xor
xor
into
mov
cmp
mov
cmp
xlat
test
inc
pop
push
sbb
cmpsl
push
in
push
mov
mov
ja
lods
arpl
mov
inc
data16
and
mov
mov
xchg
test
rcl
aad
hlt
xchg
sub
mov
xor
mov
push
xchg
push
aad
sbb
mov
mov
es
xchg
xor
or
in
push
pushf
adc
push
xor
sbb
jl
push
int
sbb
ds
insb
addb
enter
sbb
push
inc
scas
rorl
dec
lcall
pop
in
mov
gs
jo
int3
shrl
lcall
xchg
pop
adc
test
mov
hlt
insb
dec
jne
dec
pusha
imul
addl
push
xor
leave
pop
inc
adc
stos
add
out
pop
jns
push
pop
cmp
andl
pop
mov
add
ret
js
daa
lret
sub
lret
fcomi
xchg
addb
ficoms
jl
shlb
and
test
incb
mov
xlat
inc
push
mov
mov
pop
out
jns
and
fidivl
mov
pop
and
lea
outsb
mov
scas
push
in
xor
xor
xchg
jbe
dec
and
pop
cld
push
push
cli
test
and
push
stos
inc
jno
lods
pop
lret
test
pushw
in
sahf
mov
adc
mov
push
mov
push
pop
bound
push
push
push
movsl
sub
adcb
jg
imul
inc
push
test
pop
repnz
insl
sub
adc
mov
xchg
insb
sbb
mov
adc
dec
pop
out
xor
outsb
lock
cmc
jo
mov
stos
inc
lock
mov
cmp
pop
lret
imul
sub
pop
loop
dec
add
lret
cmpsb
icebp
push
inc
mov
mov
sbb
aaa
xor
notl
inc
in
sti
popa
pop
push
int3
in
gs
lods
inc
add
inc
arpl
fidivs
ret
pusha
enter
xor
cmp
andb
mov
sbb
mov
int3
negb
adc
adc
cmpsl
scas
jp
cltd
dec
iret
data16
mov
stos
inc
jno
dec
lds
cwtl
in
aas
in
sbb
movsb
sahf
jne
stos
or
sti
xchg
add
nop
sbb
mov
push
jge
push
jae
and
xchg
push
test
das
add
and
xchg
test
push
xlat
sbb
add
fnstenv
and
ds
testl
xor
bound
les
insl
lods
push
lcall
lret
stos
inc
pop
or
pop
jbe
and
mov
pop
sub
outsb
add
lods
jmp
imul
cmc
stos
add
add
lds
or
popf
in
loop
incb
inc
arpl
add
int3
andl
adc
test
jnp
imul
or
rcll
loopne
je
mov
dec
mov
test
sbb
mov
push
rorb
push
xchg
ds
stc
pop
dec
pop
dec
jge
mov
mov
int3
fnsave
arpl
pop
mov
and
pop
pop
enter
or
and
fdivl
aas
push
push
jmp
popa
sbb
idiv
push
push
clc
and
or
inc
mov
xchg
sub
xor
shrl
push
out
push
dec
in
les
loopne
mov
cmp
imul
sbb
cwtl
dec
shlb
dec
sub
mov
outsb
popa
neg
mov
jle
push
inc
imul
jbe
dec
mov
cmp
mov
xchg
jg
jo
rcrl
mov
ds
jo
jg
xchg
adc
sbb
out
dec
and
mov
jle
idiv
inc
push
xor
and
or
and
sahf
mov
sbb
jae
add
fcoms
xchg
mov
popa
clc
mov
add
lret
xchg
jl
stos
pop
loop
cwtl
push
es
mov
adc
push
pop
push
fs
test
inc
dec
clc
fiadds
or
out
rorl
pop
hlt
sbb
mov
andb
inc
jbe
inc
sub
jl
jbe
inc
xchg
xorb
loopne
adc
jge
ret
imul
mov
pop
sub
ficomps
adc
outsl
adc
cltd
sub
jg
cmc
dec
or
xor
rol
leave
loopne
xchg
adc
lea
sbb
bound
outsl
and
pop
mov
dec
daa
sarb
mov
push
sub
and
aam
jl
shl
repz
jne
or
cmp
xchg
mov
shll
stos
adc
addb
in
ljmp
dec
pop
ds
jecxz
pop
and
fs
ret
push
push
idivb
leave
iret
mov
mov
cmpsb
insb
jle
mov
in
in
das
leave
sbb
dec
jecxz
jb
jle
push
imul
addb
or
jne
or
pusha
xor
mov
ret
bound
or
test
sbb
and
mov
add
nop
sbb
push
ja
jbe
dec
pop
dec
jae
icebp
data16
ficomps
sub
xchg
repz
pop
mov
and
and
js
mov
pop
push
mov
or
jmp
cmpsb
fsts
jo
jecxz
push
sbb
subb
leave
pusha
xchg
dec
pop
inc
pop
call
popf
xor
int
fucomi
mov
mov
add
xor
fwait
jbe
test
andl
jmp
in
shrb
addr16
cmpsl
dec
inc
push
out
dec
push
ljmp
jno
push
fsub
sub
out
addr16
sti
sub
xchg
sbb
pop
fsubrl
in
or
call
jae
out
mov
lahf
das
push
dec
int
lea
mov
jmp
jp
adc
adc
cltd
mov
repnz
push
sbb
call
pop
cs
test
mov
jle
cld
or
pop
orb
je
nop
daa
pop
nop
les
mov
dec
jecxz
in
int
or
lret
xlat
mov
mov
cmpsb
jnp
out
jnp
push
dec
xchg
xor
cmp
mov
mov
mov
call
xor
pop
aaa
enter
pop
cmp
jle
ds
dec
mov
clc
or
dec
sbbb
or
jbe
mov
cmp
sbb
cmp
dec
out
push
dec
test
not
bound
pop
movsb
inc
xlat
adc
push
inc
sub
movsb
mov
add
or
add
add
xchg
inc
mov
mov
and
sbb
xor
jmp
add
jbe
cmpsb
xor
xor
cld
cmp
cwtl
out
loopne
mov
leave
aas
sbb
xchg
dec
gs
addr16
in
push
add
adc
xchg
ret
xor
cwtl
imul
mov
pop
dec
fs
es
pop
xchg
mov
fsubp
js
icebp
psubsw
enter
inc
or
dec
push
sub
xlat
sti
adc
pop
xchg
pop
movups
aaa
clc
bound
leave
pop
add
add
stos
in
add
lock
test
sbb
push
adc
cmpxchg
push
jne
or
cli
mov
jno
and
es
jmp
sub
pop
cld
xor
scas
lcall
add
cld
js
sbb
sub
nop
daa
ss
cmpsl
xchg
xchg
ljmp
xor
pop
xchg
cmp
add
cmp
outsb
mov
mov
push
in
mov
push
je
inc
ret
frstor
adc
call
jns
cltd
push
in
inc
xlat
std
and
rorb
pop
mov
push
in
cmp
and
or
aad
clc
or
ret
cli
xchg
jne
nopl
fdivl
test
std
mov
push
xor
adcb
mov
outsb
inc
mov
movntq
out
mov
imulb
cmpsb
jbe
fldenv
pushf
ss
mov
int
add
int3
mov
jle
cs
lahf
stos
push
mov
ja
test
fbstp
and
popa
addr16
ja
xor
lret
jp
test
out
xlat
lea
lret
mov
daa
sub
adc
lret
mov
mov
push
xchg
aas
ja
pop
pop
sub
mov
data16
lods
aad
mov
subb
adc
or
cmp
leave
cmp
pop
out
dec
mov
les
adc
mov
shr
outsb
clc
sbb
xor
aas
mov
movsl
in
daa
push
jmp
and
jo
and
push
test
jle
xor
cwtl
jl
fimuls
xchg
inc
mov
ds
mov
or
and
in
mov
rcrl
andb
sub
inc
fstl
fistps
dec
lods
inc
jg
pushf
pop
jge
dec
data16
pop
ljmp
jno
adc
mov
cmp
push
in
mov
dec
je
jnp
sti
sbb
adc
inc
fs
popf
je
mov
cmp
cld
aaa
dec
orb
popf
jmp
fisubs
into
insl
mov
popa
jne
cltd
or
sbb
pop
ja
cmp
lcall
out
adc
mov
arpl
dec
fwait
test
scas
jne
idivl
xor
mov
enter
je
add
imull
push
leave
jmp
add
les
xor
add
jmp
or
cmc
test
push
ds
arpl
in
test
and
inc
adc
pop
rolb
jle
inc
push
hlt
pop
dec
cmp
shrl
sbb
shrl
popa
cwtl
mov
xor
pusha
gs
and
out
mov
fld1
addb
sub
cmp
inc
mov
movsb
and
leave
cmp
push
cmp
adc
rcl
xchg
sub
ljmp
ret
or
cmc
sbb
enter
call
mov
push
push
sahf
ret
jge
mov
pop
call
std
xor
and
mov
stos
movsb
xor
pop
or
rorb
dec
enter
outsl
jo
dec
sti
stos
jae
xlat
shrb
add
cmc
imul
push
cs
out
xor
aam
inc
or
push
add
xor
lret
sbbl
pop
ds
and
lahf
aad
lret
out
int
and
test
test
mov
add
lahf
mov
ss
cmpsl
cltd
xor
lret
mov
in
in
dec
dec
jle
flds
or
loope
mov
sbb
rorb
stc
xchg
push
fidivl
xchg
pop
outsl
out
insl
sbb
mov
fdivrs
xor
or
mov
and
and
lods
inc
hlt
jmp
jl
adc
cli
jecxz
repz
test
test
in
ljmp
aas
popa
mov
inc
cwtl
in
dec
imul
adc
in
loop
push
and
shrb
sbb
inc
shll
stos
enter
shr
inc
cld
fadds
imul
sarb
roll
pushf
pop
xor
jae
inc
imul
jo
jmp
ljmp
fidivl
sbb
jmp
or
enter
pop
mov
pop
lret
sub
sbb
aaa
mov
pop
mov
cmp
enter
and
sub
dec
dec
push
xchg
xor
or
test
adc
or
xchg
sbb
sub
pop
cli
mov
aam
leave
out
into
fwait
imul
addr16
call
pop
std
xchg
push
mov
sbb
mov
leave
mov
pop
sti
sub
pushf
loopne
pop
cmp
adc
inc
bnd
outsl
add
mov
jp
push
pop
out
mov
faddl
and
mov
pop
jnp
mov
and
outsl
add
fwait
dec
mov
inc
jo
inc
insl
stos
pop
outsl
outsb
pop
dec
rolb
pop
sbb
dec
scas
pop
ja
push
test
sbb
and
fmul
jecxz
sarl
es
icebp
xor
or
cmp
push
fcomi
fidivrl
mov
outsl
ret
mov
enter
outsl
mov
adc
cmpsl
jp
dec
stos
lahf
inc
cmpsl
inc
int3
add
cmpb
stos
mov
xchg
push
gs
or
aad
push
ja
ret
mov
push
mov
cmc
mov
and
or
sbbb
mov
jp
dec
mov
lcall
fisttpl
bound
sbb
shll
stos
jl
push
test
cmp
sub
mov
push
call
adcb
and
dec
inc
in
cmpsb
mov
push
icebp
mov
dec
pop
mov
pop
sub
mov
divb
xor
mov
dec
lods
inc
pop
ficoms
mov
scas
dec
les
cmp
mov
inc
loope
mov
adc
add
sub
outsl
push
test
out
pop
lock
lock
shlb
sub
std
dec
adc
cmp
push
ja
loopne
cmpb
xchg
add
xchg
stc
and
push
loope
adcb
inc
test
cli
pop
adc
add
js
inc
popa
sbbb
scas
imul
mov
dec
les
cltd
shl
sub
fidivl
negl
std
inc
fsubs
jns
sti
mov
stos
and
in
push
xchg
jmp
xor
lods
clc
push
push
push
jnp
sahf
in
sbb
fiaddl
mov
lods
lock
jmp
adc
es
fsubs
add
fstl
xor
shl
push
jmp
jne
in
sub
push
repz
test
sbb
mov
ficompl
sub
cmp
or
sbb
out
add
std
mov
repnz
push
pop
icebp
dec
outsl
mov
bound
or
push
xchg
stos
and
xor
fistps
enter
lds
mov
fisttpll
mov
sbb
lods
mov
sub
xlat
cltd
mov
je
xor
sub
inc
jl
ja
mov
sti
je
cmc
insb
xchg
push
lahf
adc
out
and
clc
xor
dec
rol
imul
ret
pusha
cs
or
ja
inc
pop
stos
jbe
addr16
fcomps
mov
mov
aad
in
or
hlt
xchg
inc
mov
xor
jns
dec
xor
add
sbb
cmp
test
mov
and
insb
arpl
dec
sbb
inc
push
xor
lods
or
sti
rclb
fidivrl
mov
add
lods
test
addr16
data16
cltd
inc
mov
sub
mov
dec
loope
stc
xor
ljmp
out
adc
cs
pop
lahf
fistl
mov
push
push
roll
mov
push
out
loopne
jge
adc
sarl
dec
pop
out
jg
sub
fwait
mov
pop
icebp
movsl
or
pop
pop
js
mov
inc
jb
out
mov
aam
add
cmp
dec
pop
dec
dec
notb
roll
ljmp
jno
scas
daa
mov
sub
sbb
imul
repnz
xlat
aad
push
and
fcompl
int3
jge
mov
add
dec
mulb
js
mov
les
mov
lock
dec
lods
push
jns
in
mov
mov
xor
mov
push
dec
and
testb
lods
or
mov
add
add
sbb
pop
imulb
sub
inc
push
gs
addr16
out
mov
dec
lret
push
ljmp
pusha
aaa
cli
push
out
push
testl
fadd
nop
ja
les
cmp
push
cmp
and
push
hlt
sbb
stc
add
scas
das
lds
sbb
in
sbb
test
xchg
sub
xchg
arpl
js
mov
sbb
mov
xchg
popa
jge
xchg
dec
lds
mov
cld
mov
pop
stc
nop
fisubrs
pop
scas
out
xchg
pop
int
ss
push
fsubrl
push
notb
mov
and
loopne
mov
repz
xor
xchg
and
hlt
fisubrs
push
popf
sbb
dec
arpl
lea
mov
ret
lea
xchg
scas
incl
sti
cmpsb
mov
pop
push
outsl
cwtl
enter
mov
ret
add
cmp
mov
js
mov
pop
cli
adc
jno
add
mov
in
in
adc
into
aas
inc
cwtl
cmpl
pop
sub
cli
mov
and
dec
aaa
hlt
nop
push
jo
cmp
inc
jmp
jmp
cld
xor
sbb
in
jle
sub
adc
clc
add
call
and
and
stc
push
mov
loopne
bound
div
push
sbb
mov
mov
jbe
mov
fidivrl
fstpl
roll
or
into
insl
es
fs
imul
xor
cmpsb
imul
inc
cmpsb
les
sbb
mov
sub
sub
xor
int3
fisubs
mov
inc
insl
gs
fst
push
rcrl
jp
sub
in
sub
fstp
nop
mov
push
xchg
xor
pushf
cmp
sub
int
decl
dec
in
inc
cltd
mov
or
fucomip
and
lds
int
pop
leave
mov
push
or
outsb
adc
lea
int
xchg
add
jge
outsl
scas
push
fmuls
aam
aaa
ja
imul
repz
stos
fxch
xchg
aad
test
test
xchg
push
call
sbbl
dec
and
out
mov
iret
stos
pop
or
jg
sub
jbe
push
lods
lods
fmuls
sub
add
fwait
test
scas
xchg
icebp
jno
xchg
sahf
jle
and
xchg
shll
dec
cs
imul
mov
or
pop
and
imulb
sbb
cld
mov
call
jmp
or
jge
cmpb
test
lret
testb
add
mov
aas
push
push
and
pop
test
ja
or
pusha
shll
js
inc
fwait
mov
xor
cmp
leave
test
fsubrs
xlat
pop
repnz
icebp
lcall
sbb
push
movsb
call
fidivl
mov
stc
or
pushf
lcall
movsb
dec
mov
popf
icebp
in
inc
sbb
ds
movsb
ljmp
inc
ret
sbb
jp
inc
jno
mov
xchg
adc
icebp
xor
lcall
mov
mov
jno
and
cmp
inc
leave
mov
jge
fldcw
adc
dec
das
hlt
xrelease
outsb
mov
pop
push
shr
xchg
dec
inc
mov
inc
push
cmp
daa
mov
jae
dec
out
dec
inc
mov
aaa
scas
cmpsb
fcmove
jo
aad
mov
inc
mov
mov
inc
stc
mov
dec
je
lock
jnp
pop
sbb
mov
cmc
lods
add
cli
adc
stos
data16
mov
dec
mov
cmp
fwait
hlt
mov
cmpsb
aaa
pop
inc
data16
push
pop
ljmp
rorl
stc
shlb
mov
cli
pushf
adc
add
sbb
jg
ss
es
inc
fnstcw
lahf
pusha
nop
dec
pusha
adcb
insl
xchg
push
push
out
jnp
andb
loopne
sub
test
cmp
sub
mov
lahf
push
test
cli
jp
cwtl
mov
imul
inc
test
mov
lret
push
or
imul
add
pop
imul
out
pushf
jge
cmp
sti
data16
mov
push
in
cwtl
adc
inc
mov
into
mov
adc
mov
and
in
ds
mulb
mov
loop
jg
enter
lock
out
loop
cli
xchg
mov
dec
sbb
std
insb
add
mov
call
mov
pop
dec
inc
lahf
add
ret
mov
in
xchg
repnz
dec
or
mov
arpl
jmp
stos
xor
xchg
sub
inc
scas
dec
repz
call
std
xor
sbb
loope
in
hlt
arpl
ljmp
clc
insl
adc
sbb
dec
pop
cltd
pop
movsl
cmp
inc
incl
test
ja
sbb
movsb
andl
jecxz
inc
cmp
lahf
cs
xchg
xchg
mov
dec
decl
lods
cli
jl
lock
in
inc
jecxz
sbb
sbb
jmp
jno
lea
mov
stos
aaa
jmp
imul
aad
lods
push
arpl
jns
test
aad
stos
jns
testl
mov
repz
mov
cmc
out
xchg
clc
mov
sub
sahf
imul
lahf
pusha
push
fldcw
jp
cmp
dec
mov
stos
xchg
lret
lock
das
adc
movsl
xor
xlat
sub
rol
dec
mov
mov
mov
clc
push
cmp
mov
mov
fimuls
cltd
fsubrl
inc
pop
sbb
mov
sbb
xchg
cmpsb
dec
jmp
stos
xchg
xchg
ret
add
adc
cmpsl
popf
int
out
movsb
mov
out
push
jae
das
mov
cmp
fmuls
nop
mov
dec
xchg
ret
push
jmp
xchg
mov
in
lcall
call
adc
and
sbb
cmp
aad
imul
ret
sbb
inc
loope
insb
out
popf
jmp
cmp
movb
push
pop
mov
pop
jae
cmpsb
lock
mov
xor
push
mov
cld
std
and
ja
add
adc
mov
xor
adc
jno
cmpsl
xchg
dec
push
lret
mov
mov
out
out
out
shl
dec
sub
fisttps
dec
xchg
pop
cmpsl
cmp
inc
mov
fs
pop
scas
ret
data16
add
adc
lods
cmp
in
xchg
pop
cmovbe
pushf
mov
icebp
imul
xchg
pop
and
movsb
xor
xor
pop
fidivrs
adc
orl
sbbl
pop
lods
ficomps
mov
lret
cmp
dec
xchg
jmp
and
test
shlb
sbb
or
repnz
mov
dec
aad
ds
bswap
enter
out
into
rcll
add
inc
aad
jne
sbb
mov
pop
jl
les
pusha
xchg
test
rcrb
sub
pop
pushf
fiadds
cli
sbb
jns
mov
sahf
adc
adc
dec
mov
xor
xorb
xchg
lds
pcmpgtw
xchg
nop
punpckldq
das
ret
iret
cmpsb
js
subl
pop
repnz
pop
shll
mov
sti
mov
jno
divl
jnp
cmp
xchg
xor
jmp
cmpsb
cmp
adc
cwtl
sbb
sbbb
sub
outsl
pop
arpl
or
mov
sbb
pop
hlt
bound
cmpsl
aam
xchg
cmp
mov
insb
lea
dec
mov
add
sbb
add
jb
popf
mov
mov
data16
fidivl
dec
fucomi
popf
stc
inc
dec
ljmp
dec
fstpl
call
lds
rclb
pop
mov
xchg
inc
iret
inc
mov
rorl
lock
add
or
pop
jge
loop
sbbb
or
mov
enter
cld
lret
mov
or
insl
lds
mov
sbb
sarl
cmp
mov
test
cmp
xor
ljmp
clc
cmp
or
dec
out
lods
dec
mov
sbb
es
xor
mov
mov
xchg
jl
mov
fcomi
sub
add
sahf
inc
mov
jne
mov
cmp
mov
decl
fldl
add
pop
roll
stos
sub
fsubrl
cmpsl
xor
xlat
xorl
jle
jo
in
das
loopne
stos
mov
xchg
ljmp
dec
add
test
mov
mov
leave
int3
and
bsr
sahf
xchg
fldenv
push
mov
jg
shrb
sbb
nop
icebp
or
lea
mov
fcoml
test
repz
je
cmp
sub
lods
add
mov
mov
mov
add
sar
push
jmp
insb
sub
cli
pop
int
jle
jns
sarb
mov
dec
cmp
dec
xchg
sbb
fwait
xchg
cmp
aaa
mov
sub
push
cwtl
incl
movsl
mov
lods
outsl
ret
sbb
ret
cmp
and
sbb
push
xchg
lods
inc
jecxz
loopne
pusha
cmpb
cld
gs
fstpl
jb
jmp
fdivrl
pop
add
in
cmpsl
vpsrld
push
negl
sub
movsl
pop
icebp
push
or
shll
mov
shll
or
js
add
fistps
push
decl
dec
pop
xor
nop
xchg
test
int
xchg
jb
lods
cmpsl
mov
and
sub
jae
inc
dec
icebp
xchg
lds
pushf
jg
cmp
jge
es
mov
jb
push
xchg
shrb
dec
cmp
mov
sub
shrb
outsb
adcl
lsl
rolb
cld
dec
add
cmpsb
or
ror
or
loop
jp
xchg
dec
mov
aaa
add
cmp
fnstsw
xchg
cmp
inc
sub
pop
pusha
rcrb
repz
inc
pop
adc
pop
push
jne
push
mov
pop
in
add
cmc
lea
ja
sub
mov
mov
in
int
or
pop
lcall
mov
mov
popa
cmp
insb
add
in
push
bound
fs
sbb
ret
pop
or
mov
mov
sub
jl
push
scas
mov
cmpsl
out
push
sbb
dec
sbb
daa
repz
mov
aam
mov
lods
push
imul
or
decl
and
popa
or
out
insb
test
in
lahf
xor
pop
mov
fbld
or
mov
mov
jbe
mov
sbb
cld
mov
mov
mov
dec
cltd
js
out
xor
int
sbb
shlb
movsb
cltd
sub
lcall
call
daa
lcall
adc
push
lret
and
push
cmp
inc
xchg
scas
pop
repnz
add
and
add
lret
and
sbb
jo
sahf
push
jns
jbe
xlat
imull
jle
xchg
adc
repz
pushf
scas
fcoms
or
cmp
pop
xor
cld
aas
test
mov
rorl
pop
insl
mov
jbe
mov
aas
popf
dec
jnp
xchg
fiaddl
shlb
xchg
push
js
pop
mov
gs
mov
push
dec
fwait
push
leave
sbb
push
add
scas
inc
mov
push
push
sbbb
in
dec
movsb
leave
mov
push
xlat
cmp
cmp
in
pushf
mov
ret
in
fwait
and
aad
xchg
inc
icebp
jno
jge
jl
aas
and
add
and
dec
test
fcmove
and
lods
sarb
jecxz
dec
adc
mov
xor
test
lret
push
in
testb
icebp
pop
jne
jae
bound
jmp
add
xchg
push
addr16
fucomip
icebp
or
jl
mov
mov
and
and
sbb
xor
into
pop
fidivrl
scas
sbb
test
jl
push
in
inc
scas
mov
jb
les
push
xchg
dec
popf
dec
jne
inc
iret
pop
inc
pop
mov
stos
lods
pushf
mov
xor
lahf
dec
mov
mov
push
inc
push
xor
call
cmp
fdivp
xor
insl
add
xor
add
xchg
pop
mov
popa
xor
lret
xchg
imul
dec
mov
subl
sub
mov
icebp
adc
ss
idiv
xchg
sub
push
bound
sbb
daa
lret
mov
fldt
adc
add
mov
fisubs
cltd
ret
imulb
push
je
testb
incl
xchg
aad
lea
icebp
jb
inc
dec
adc
or
cmp
mov
inc
enter
loop
nop
in
ss
pop
divb
mov
mov
mov
pop
jae
in
mov
ret
ret
arpl
cmp
pop
insb
dec
jae
fcoms
out
lods
test
pusha
gs
es
test
je
sub
cltd
xor
rorb
dec
test
inc
loop
jbe
or
bnd
dec
movsb
mov
ja
mov
sub
inc
sbb
mov
pop
mov
xchg
ss
stos
add
push
stc
int
ret
xchg
cld
xchg
les
xchg
cmp
shr
xchg
inc
test
aam
adc
stos
inc
test
xor
test
mov
int3
xlat
test
pop
or
jp
sub
fs
inc
push
out
xlat
xchg
sbb
inc
loopne
notb
aas
rclb
mov
mov
mov
nop
out
cmp
dec
rolb
ret
jg
add
sub
add
jp
aad
movsl
out
lods
cmp
ret
mov
in
mov
adc
jbe
jns
jno
dec
mov
pop
dec
xlat
cmc
push
movsb
mov
cltd
or
fldl
repz
mov
ret
or
jne
inc
cmpsl
int
movsb
dec
mov
popf
xchg
jmp
sarb
fs
or
repnz
clc
loopne
hlt
lea
or
cmp
xchg
scas
add
stc
jecxz
mov
sbb
sahf
and
cmpb
call
test
dec
fdivp
pop
add
pop
mov
sahf
imul
mov
out
jge
imulb
sti
nop
aaa
adc
mov
gs
mov
enter
xlat
jmp
cmp
and
jo
std
inc
push
test
inc
and
leave
fsubrs
and
pop
add
aam
dec
lret
call
and
fsin
jbe
add
xor
mov
mov
adc
add
cs
mov
and
mov
or
es
mov
push
insb
lcall
lahf
cld
xchg
or
xchg
pop
mov
sahf
adc
dec
jb
sub
sahf
cmp
mov
adc
push
pushf
adc
xor
insb
data16
xor
arpl
shll
fwait
and
movsl
das
inc
and
fists
fldcw
cmp
jbe
arpl
xchg
test
sub
repz
fiaddl
push
lcall
jno
or
mov
mov
push
sbb
xchg
fstpt
dec
cmp
push
lea
push
mov
mov
push
test
repz
je
mov
test
sarl
cltd
inc
pop
test
test
repnz
pop
subl
jno
jbe
aad
stos
shll
pop
scas
addr16
insl
sti
cmp
pop
incw
bound
test
xor
mov
cld
adc
sti
push
imul
stc
cwtl
push
sbb
jp
mov
loope
jo
and
xchg
mov
inc
add
add
scas
out
aaa
mov
and
push
pop
enter
cmp
movsl
add
sbb
cmc
mov
pop
ja
fistl
test
cmp
enter
dec
rorb
or
fdivrl
lods
cmp
mov
mov
mov
or
test
ret
leave
and
sbb
ds
das
iret
ljmp
popf
and
pop
insb
mov
xchg
adc
call
icebp
js
in
pushf
or
add
nop
inc
ljmp
mov
mov
scas
dec
mov
mov
pop
fildll
popf
test
daa
jl
ds
push
movsb
push
fimull
sub
repz
loop
cwtl
add
push
xor
xor
cwtl
pop
out
xchg
sahf
daa
dec
jecxz
jge
pop
mov
mov
cmc
dec
mov
loope
out
adc
lods
sbb
fnsave
cmp
jne
or
testl
mov
add
test
mov
incb
mulb
loop
add
shrl
fisttpll
or
es
arpl
lahf
ds
xlat
mov
into
hlt
test
push
inc
or
loope
insl
mov
jae
pusha
aas
insl
mov
sbb
sub
outsl
ljmp
pop
jg
mov
push
sub
push
inc
rcrb
or
add
subl
or
insb
shrb
gs
mov
push
shlb
cld
mov
cs
xor
mov
aam
pop
repz
pop
outsl
and
lds
sub
adc
inc
int
inc
jno
subps
fldt
sti
xchg
sub
dec
mov
jnp
lcall
outsl
jecxz
sahf
dec
daa
inc
mov
mov
stos
dec
inc
data16
pop
loop
popf
mov
into
sbb
lods
fcoml
mov
push
aaa
inc
cwtd
jl
and
stos
fistl
mov
adc
jne
repnz
pushf
das
lcall
lea
test
xor
adc
lods
or
pop
iret
gs
xchg
mov
mov
lods
fistpll
fildll
push
mov
adc
lahf
inc
add
hlt
xchg
and
nop
shrb
adc
insb
add
sarl
push
cmp
cwtl
lret
cld
mov
mov
addr16
lcall
dec
popf
fidivrl
mov
aaa
pop
dec
adc
mov
lcall
mov
cmp
dec
out
cld
les
sbb
nop
xor
xchg
xchg
ja
mov
es
xchg
add
adc
inc
mov
cmp
gs
add
adc
call
roll
hlt
outsl
adc
jo
jo
cltd
popa
js
aaa
clc
fiadds
adc
fbstp
mov
outsb
add
scas
sbb
lahf
dec
rclb
inc
jmp
cmp
in
jle
cmp
push
push
ja
jge
sbb
xchg
lcall
xor
repz
or
adc
fisubs
sub
push
out
and
jno
xchg
cwtl
data16
and
scas
call
xchg
mov
cmp
lcall
cwtl
je
es
cltd
xchg
pop
loope
jno
out
out
or
divb
push
xchg
loopne
es
scas
mov
lcall
popa
movsl
dec
bound
add
mov
flds
cmc
std
xor
dec
loop
cmp
nop
add
es
dec
and
movsl
xlat
inc
jg
push
imul
ja
andl
in
popf
adc
pop
jo
adcl
icebp
test
fucomp
pop
dec
pop
pop
cmp
adc
pop
ljmp
mov
add
ret
stc
push
addr16
mov
mov
lea
int
adc
test
repz
inc
rorb
sub
and
inc
push
xor
xchg
test
pop
sti
pop
aas
insb
adc
xchg
pop
push
lret
and
xchg
shrb
imul
ss
mov
stos
push
loopne
cmpsl
out
andb
cmpsb
xor
fistpll
ds
add
ret
ljmp
or
push
or
mov
sti
cmc
lcall
or
lret
test
sbb
push
aas
shll
or
jl
mov
hlt
cwtl
fsubrs
inc
pop
push
xlat
add
xchg
and
mov
call
jmp
ja
pop
gs
cmp
sahf
and
jne
popa
dec
insl
sahf
xor
pop
fidivl
pushf
imul
push
mov
adc
clc
cmpsl
shlb
movsl
dec
or
mov
lods
add
push
out
ja
sub
dec
adc
out
outsl
mov
test
fs
cmp
sbb
xor
movsb
ja
xor
filds
addb
jb
je
cltd
lahf
clc
nop
or
dec
scas
outsl
push
ja
into
lock
push
fdivrs
mov
ret
dec
sbb
iret
cmpsb
inc
sub
jp
daa
mov
cmp
xorl
jge
adc
lods
adc
fnstsw
jns
ljmp
cli
xchg
shll
sub
mov
dec
mov
xchg
dec
std
xchg
jl
inc
push
lods
push
sub
popf
cmp
pop
mov
stc
iret
mov
in
test
add
mov
push
and
popw
jg
push
das
cmp
or
cmpsb
dec
les
ret
std
cmp
inc
aam
dec
mov
lret
outsb
cmp
aad
jge
mov
cmp
int
out
jmp
or
mulps
movsb
data16
sbb
pop
shrd
and
xor
out
mov
popa
negl
mov
push
mov
nop
clc
out
xchg
pop
or
rolb
mov
test
fidivl
pop
sub
adcl
sub
inc
pop
sarl
std
mov
test
subb
mov
mov
js
inc
fwait
xchg
gs
outsb
lods
cli
and
xchg
adc
mov
add
negl
push
sub
lods
dec
into
cltd
jo
push
inc
popa
out
notl
icebp
std
adc
fildll
fistl
inc
cmp
push
into
xchg
mov
sbb
ss
and
mov
push
stos
xchg
push
fwait
pushf
inc
ss
jae
loopne
imul
mov
mov
push
inc
or
movl
pop
push
pop
pop
pop
push
rorl
mov
ljmp
mov
dec
leave
mov
rorl
lret
and
or
iret
imul
xor
sbb
mov
pop
call
push
push
imul
fcomps
ror
mov
pushf
sbb
add
call
sti
movsl
aas
pop
push
shlb
push
inc
or
or
shrl
push
cwtl
jb
jo
daa
scas
popa
xor
xchg
aad
push
xor
pushf
rcll
arpl
or
sub
les
xchg
roll
and
cmp
xchg
scas
stos
mov
scas
aas
sbb
repnz
lods
sahf
lods
lret
push
dec
push
fimull
cmp
divb
and
jno
push
pop
scas
cmp
mov
insl
roll
xchg
xchg
xchg
inc
inc
or
jnp
jne
fmull
or
and
out
sub
adc
jl
stos
xor
bound
iret
popa
je
or
push
inc
inc
pop
into
movsl
outsl
jg
and
mov
inc
or
mov
pop
fbld
xchg
xor
fs
cmp
add
mov
or
push
cld
repz
jge
lods
cmp
fwait
jecxz
ja
add
movsl
addr16
xor
sub
push
jmp
ss
fnstenv
cmc
jnp
cmpsb
jecxz
add
test
sub
sbb
mov
xchg
pop
xor
iret
xor
xchg
in
stos
lcall
push
dec
loop
xor
mov
sbb
sahf
push
pop
cmp
mov
jae
in
std
shlb
dec
pushf
pop
std
inc
lock
pop
fiaddl
add
insb
icebp
insb
push
and
rcl
rcrb
xor
lea
adc
xchg
jae
movsl
int3
test
popf
es
loopne
and
mov
aad
clc
dec
sub
dec
add
lock
push
aas
popa
xor
xchg
push
ret
mov
xchg
ljmp
and
rcrl
scas
mov
les
lcall
inc
in
outsl
jns
cltd
cltd
mov
sub
lods
pop
push
jb
lcall
sahf
mov
add
testl
stos
sti
xchg
fdivs
adc
mov
decl
dec
inc
ja
sbb
into
pop
mov
mov
cmp
rclb
mov
pop
cld
sub
test
mov
out
idiv
cmpl
dec
aam
jae
push
or
sbb
out
fucomip
push
inc
sbb
jg
shll
sbb
ja
pop
cmp
mov
shll
lods
add
les
jecxz
xchg
and
out
gs
pop
xchg
xor
lcall
fimull
dec
mov
jge
jecxz
sbb
mov
bound
xchg
cs
jge
jmp
movsb
int
aad
sti
fwait
enter
lahf
xor
lcall
lret
and
dec
add
sahf
cmc
cmp
jl
mov
cmp
sti
fwait
adc
pop
cmc
jge
and
pop
inc
mov
mulb
clc
mov
fs
sarb
xor
push
xchg
xorb
stos
xchg
sub
xor
dec
mov
and
movsl
push
int3
push
or
aad
xor
call
loopne
movsb
cmc
in
mov
insb
shll
loope
shr
rcr
add
push
mov
inc
repnz
in
lretw
xchg
cmp
jmp
sbbb
stos
mov
xchg
sub
dec
xor
mov
mov
out
cli
xchg
and
int
jmp
mov
cmpsb
xor
insb
jbe
sahf
mov
mov
xchg
sub
mov
test
scas
daa
leave
add
sub
negl
in
pusha
lahf
adc
inc
mov
testl
aam
mov
fld
pop
or
aaa
mov
ss
ret
dec
dec
rclb
shlb
xor
mov
fildll
ficomps
in
mov
pop
mov
add
push
test
mov
insb
loope
push
xlat
push
add
xchg
mov
cmp
fwait
pop
sahf
mov
and
sub
jne
add
mov
mov
fwait
mov
and
and
dec
insl
push
dec
fdivl
test
pushf
mov
into
in
pop
arpl
loopne
pusha
adc
jb
xlat
or
cli
je
psllw
sub
lds
scas
or
sets
xchg
or
rcl
or
popa
jl
mov
in
mov
out
cltd
inc
data16
cmpsb
xchg
mov
jecxz
test
inc
inc
out
pop
insl
sub
dec
mov
das
mov
jp
imul
jg
cmp
fucomip
in
nop
ljmp
mov
sub
mov
or
out
enter
push
sub
adc
rol
xor
popa
pop
jno
addr16
xchg
cmp
jg
loopne
mov
xchg
adc
add
fucomi
push
pop
jecxz
cmp
insb
dec
sub
jmp
and
fs
inc
ljmp
push
xor
enter
adc
or
xor
cmp
pop
outsl
loop
cwtl
cmc
jp
ret
adcl
jle
cs
mov
sub
test
push
dec
shr
jl
push
test
dec
popa
add
jno
or
mov
cmp
add
push
jg
mov
xlat
data16
ret
into
inc
pusha
add
cmpps
testl
xchg
cmpl
mov
xor
bound
mov
aam
jg
stc
ret
pusha
mov
xlat
xchg
daa
xor
add
push
jne
mov
and
or
jno
fcomp
out
cmp
sub
xchg
insb
mov
rep
cs
nop
sbb
ret
cld
ja
aad
inc
and
cmp
addb
aas
add
inc
flds
xor
inc
sub
inc
loopne
push
stc
mov
push
mov
je
inc
es
nop
stos
cltd
daa
into
mov
divb
fiaddl
cltd
clc
sub
je
ret
sbb
das
mov
lock
fsubrs
or
movsl
icebp
aam
bound
sub
sub
cmc
xor
enter
add
mov
outsl
mov
outsl
lea
sbb
push
mul
or
sub
nop
cli
xchg
mov
push
sbb
push
es
fiadds
in
notl
out
push
sbb
div
mov
push
adc
mov
nop
mov
cmpsl
imul
in
aam
cmp
int
mov
sahf
xor
jle
mov
stc
ds
mov
cwtl
mov
pop
adc
xchg
lods
movsl
jp
hlt
xor
jo
imul
pop
mov
out
and
cmp
cmc
jmp
mov
jp
pop
or
aad
mov
ret
or
dec
and
fsubrl
fisubrs
mov
mov
cwtl
lret
out
add
mov
cs
dec
xchg
cmp
inc
push
lahf
jnp
lret
int3
lret
mov
loop
int3
fwait
xor
adc
inc
xlat
mov
icebp
pop
xchg
or
fcompl
cmp
and
ss
mov
bnd
mov
add
push
nopl
iret
pop
not
rorb
dec
pop
add
xor
aad
add
scas
shl
sahf
or
lock
fbstp
cmp
arpl
loopne
loope
adc
pop
cmc
dec
or
jp
sub
in
sti
jg
je
sbb
add
push
out
xor
test
cmp
loopne
pop
push
pusha
push
pop
fsubrs
mov
pop
lods
add
dec
pop
push
movsl
jge
mov
arpl
mov
loop
push
stos
cmp
mov
outsl
dec
push
xor
mov
clc
bnd
aad
or
jns
dec
jae
das
and
inc
or
mov
mov
xor
shl
sbb
adc
test
aam
mov
push
or
pop
lds
leave
test
mov
arpl
into
out
imul
out
jp
leave
xor
push
movsb
stos
and
lods
pop
add
out
andb
cmp
adc
xor
xor
adc
xchg
insl
ss
jp
fidivl
fcomps
ficomps
out
loopne
jecxz
test
inc
inc
out
mov
shlb
test
adc
jl
xor
sbb
inc
push
dec
push
or
mov
outsb
pop
mov
insl
mov
mov
out
call
andl
adc
shrb
mov
pop
mov
jle
and
dec
add
mov
sahf
xor
pop
stos
mov
jl
lahf
stos
mov
leave
add
inc
add
int
sub
std
pop
popa
pop
inc
loop
mov
movsb
pop
neg
or
shll
sbb
movsb
int
xchg
repz
loope,pt
cmp
cmpsb
inc
aad
shrl
cmc
mov
cmp
mov
repz
lahf
pop
inc
push
dec
in
movsl
lea
mov
das
push
outsl
cli
cwtl
test
jl
clc
jno
mov
andl
sub
jle
adc
add
inc
dec
lcall
fadds
loop
xor
nop
setp
mov
xor
adc
cmc
push
sti
ror
out
adc
or
xor
pop
dec
popa
dec
jmp
cmp
lahf
ljmp
mov
movsl
xchg
pusha
fistl
jl
stc
in
jle
add
hlt
cmp
call
adc
js
jno
das
mov
xchg
ret
lahf
stos
pop
mov
sbb
mov
xchg
dec
xchg
mov
pop
rorb
cld
loope
xor
cmpsb
fstps
loop
mov
mov
stos
js
dec
pusha
mov
xchg
loop
repnz
nop
and
and
jp
inc
int3
fnstcw
divb
bound
mov
data16
push
mov
lds
imul
icebp
jns
call
imul
pusha
mov
notb
fsub
push
mov
pop
mov
orl
cmp
out
mov
jecxz
std
insb
cmp
dec
insl
cs
dec
mov
inc
in
add
cmp
in
xchg
add
dec
mov
mov
ss
xchg
ds
xchg
xor
add
nop
and
mov
sbb
xorl
mov
and
ljmp
jo
xchg
sbb
dec
add
loop
mov
movaps
cld
dec
push
pop
sahf
xchg
jl
dec
push
hlt
dec
xlat
addb
cmpsl
aas
mov
cmp
adc
mov
ljmp
mov
adc
movsb
jle
roll
ja
inc
mov
mov
jns
addr16
xor
push
push
adc
mov
sub
jecxz,pn
int
adc
in
push
mul
push
aad
lods
cmp
mov
pop
xchg
aaa
cmp
xlat
dec
pop
stc
mov
pushf
jmp
out
pop
push
sahf
xor
repz
sub
xchg
xor
jmp
lahf
lret
jl
mov
hlt
mov
mov
push
cmp
or
adc
jb
and
mov
enter
xchg
mov
pop
icebp
adc
mov
shr
ret
xchg
inc
popf
ret
xlat
mov
dec
sub
in
sar
add
insb
inc
push
jnp
push
sahf
pushf
fldcw
xchg
test
movsl
mov
add
pushf
insl
add
mov
add
add
fidivrs
gs
movswl
loop
xchg
stos
mov
mov
mov
leave
push
icebp
lds
notl
sbb
cld
mov
push
int
mov
push
sbb
jmp
sbb
sub
jmp
daa
jl
inc
enter
sti
xchg
sub
mov
dec
dec
insl
adc
sub
dec
bound
iret
outsb
xor
pop
std
in
mov
fwait
int3
fs
jl
or
rol
pop
inc
loopne
inc
outsb
mov
out
mov
jp
test
negb
shll
adc
xor
xchg
pusha
lret
sub
xchg
in
stos
ficoml
inc
leave
mov
dec
jle
cmp
rcl
mov
hlt
test
repz
aaa
sbb
inc
jp
xchg
pop
aad
fcomi
xor
adc
add
xchg
jns
das
gs
mov
inc
dec
sti
xor
sub
lea
mov
fwait
dec
mov
push
jns
xor
mov
or
adc
imul
xor
and
loop
rol
out
xchg
arpl
repnz
aas
xor
enter
push
cmpsl
xor
int3
in
xor
mov
xlat
or
sahf
jae
cmp
lods
mulps
and
mov
adc
cpuid
mov
or
bound
inc
adc
push
mov
adc
lret
push
std
jmp
or
scas
pop
repnz
fldcw
jns
aad
sbb
sub
adc
jo
loopne
mov
cmp
sub
lock
mov
jns
movsb
mov
push
or
inc
lds
ret
aad
sbbb
fcmovu
lret
pusha
and
mov
push
pushf
push
call
push
scas
inc
test
inc
pop
insb
adc
sub
mov
mov
xor
xor
icebp
test
jb
addr16
and
pop
mov
mov
xchg
xchg
negl
xchg
aas
xor
mov
jnp
mov
push
pop
dec
xchg
cmp
mov
lahf
and
mov
movsb
mov
push
shlb
sub
popf
adcl
mov
lahf
stos
inc
sbb
jl
add
cmpsb
mov
add
push
out
ficomps
or
sub
fisubrl
rorb
mov
adc
and
bound
pop
xchg
mov
loope
mov
cmp
fldenv
loopne
test
dec
aaa
dec
icebp
iret
movsb
bound
cmp
in
sbb
popa
mov
mov
mov
dec
popa
mov
jbe
leave
pop
or
add
sub
insb
outsl
jnp
inc
inc
ja
loopne
push
jecxz
xor
insl
sub
int
scas
pop
in
pop
jno
xor
or
cld
nop
fidivrl
mov
jg
inc
repnz
incb
lahf
outsl
pop
push
jmp
out
sbb
jmp
sarb
and
jmp
mov
and
adc
out
sti
push
push
xor
les
call
dec
pop
jle
inc
into
xor
and
aaa
repz
lret
and
sbb
jge
sti
lds
cmp
inc
sub
sbb
or
or
out
xor
mov
push
cli
and
test
jmp
mov
in
filds
and
inc
sti
movsb
xchg
sti
adc
push
xchg
ja
sahf
mull
xor
enter
mov
adc
xor
sar
add
notl
xlat
cmp
jo
push
aas
es
test
push
rcrb
mov
xchg
inc
xchg
outsb
test
fnstenv
jne
cs
fistl
xchg
or
mov
je
mov
mov
rorl
lds
sub
cmp
shr
inc
rorl
xchg
inc
fwait
test
push
ret
push
and
adc
aas
lds
scas
es
pop
iret
cmp
std
pmulhw
pop
lret
in
rclb
mov
adc
adc
and
mov
ret
xchg
fidivrl
fbstp
flds
and
lret
out
out
xchg
xchg
sub
cmc
mov
jne
scas
and
fwait
pop
addr16
leave
inc
bound
push
fwait
int3
lods
pop
mov
add
out
inc
mov
push
les
in
inc
mov
pop
jecxz
lcall
pop
out
fptan
pop
sbb
test
jp
jno
cs
add
iret
push
int
sub
sti
scas
into
xchg
xchg
andb
outsl
fstps
mov
pusha
sbb
les
js
push
and
jb
mov
pop
push
cli
pusha
cmpsb
cmp
mov
pushf
xor
rolb
testb
jno
cs
rolb
sbb
aas
mov
addr16
sbb
lea
jo
and
push
push
lcall
pop
jmp
mov
data16
or
lods
jge
mov
and
sub
cltd
nop
test
mov
out
jmp
sbb
xor
fs
shrb
jae
test
sbb
sub
cmpsb
cmp
jl
or
xchg
cmpsl
sub
jno
stos
add
push
fdivrs
mov
rcll
lea
jg
aaa
mov
push
mov
jbe
jle
xor
aam
or
mov
sahf
jae
aas
jo
hlt
pop
stc
mov
loop
shl
dec
xchg
ds
insl
test
pop
daa
outsl
nop
sti
addr16
in
movsb
or
les
cmp
sahf
cmp
cld
xchg
fildl
out
sbb
mov
testl
cmp
and
xor
jecxz
sub
or
or
xchg
pop
sbb
push
hlt
sub
jg
adc
addl
jge
stos
mov
popf
sub
jp
or
cmpsb
and
sbb
jp
je
jg
in
mov
inc
mov
mov
bound
outsb
jge
mov
mov
add
and
dec
xchg
data16
jg
cmp
aad
std
subl
push
lret
jae
ds
in
mov
and
scas
jmp
cli
push
out
xchg
stc
inc
arpl
inc
enter
lods
mov
lahf
test
mov
add
insb
xlat
out
test
jecxz
cmp
ret
leave
das
xor
push
cs
testb
sahf
adc
sub
adc
jmp
in
xchg
sub
out
jne
fs
pop
fnstenv
in
ret
add
dec
ljmp
xchg
lods
inc
fldenv
jns
cmp
faddl
out
dec
pop
cmpsl
hlt
mov
cmpsl
push
into
pop
mov
pop
xor
insl
aad
or
jl
inc
pop
push
pop
mov
sti
sbb
sbb
pusha
lods
mov
push
dec
lea
lcall
adc
pop
stos
mov
nop
addr16
fwait
or
sub
cmp
call
lods
cmpsb
imul
mov
out
jae
ja
test
loopne
xor
imul
int3
imul
movsl
scas
xor
jno
es
push
and
call
mov
pop
sbb
das
jecxz
and
push
stos
inc
xor
push
sbb
mov
data16
push
jmp
insl
xor
cld
push
sub
sbb
int
shl
lret
into
pop
pop
mov
pop
seta
imul
sub
jmp
mov
dec
aaa
cmpsl
ret
in
ffree
cs
sbb
inc
mov
pop
lods
clc
lods
repnz
jge
repz
mov
pop
jmp
lret
sti
pusha
jl
xchg
or
mov
cmpsl
fs
pop
push
scas
add
xor
sub
ret
outsl
sbb
fnsave
xor
rcl
lcall
out
mov
jle
test
jns
test
movsl
sbb
dec
arpl
ficompl
mov
push
out
and
adc
int3
pop
outsb
cld
jns
test
outsb
ss
add
jbe
scas
fs
orl
ljmp
mov
lea
les
sbb
popf
into
ret
sbb
aad
fwait
inc
push
jb
cld
jp
add
xor
aam
sbb
xchg
nop
fucomp
daa
mov
bound
addr16
add
cmp
jmp
push
xchg
add
adc
jo
pop
in
sbb
mov
hlt
inc
loop
divb
push
jne
pop
and
jnp
test
scas
pushf
push
mov
sub
loope
cmp
nop
add
and
or
shll
add
testb
and
push
sbb
icebp
lret
and
das
lret
popa
mov
sub
test
ljmp
push
sarb
lahf
clc
out
imul
andl
push
or
leave
cmp
into
js
lret
fldl
lcall
jne
rcr
mov
mov
mov
adcb
adcb
jmp
std
push
rorl
orb
pop
push
filds
and
mov
roll
loopne
adc
mov
sahf
idivl
lret
fs
sbb
ret
and
fld
pop
fbstp
aaa
add
xchg
sub
adc
cltd
test
clc
adc
sbb
dec
push
sub
pop
repz
jg
mov
sub
dec
fisubs
adc
lcall
sub
insb
hlt
and
jns
adc
inc
cmpsl
stos
mov
mov
mov
xor
push
sti
insb
push
cmc
sbb
adc
sahf
lret
xchg
lcall
adc
sbb
or
fimuls
gs
pop
loop
jne
and
lret
xlat
fsubrl
pop
fisubrl
fmull
or
stos
push
xchg
sahf
mov
ficompl
pop
push
inc
cmp
js
fsubl
clc
pushl
jae
cmp
fadd
iret
xchg
mov
cmpsl
push
lods
lock
pop
into
adc
jbe
push
mov
int3
adc
sbb
test
lods
sbb
hlt
loopne
and
jecxz
dec
pushf
daa
in
test
ret
jge
pop
rep
mov
lret
fs
addb
xchg
ds
push
inc
fstpt
xchg
in
sub
or
sbb
out
popf
pop
lods
mov
push
add
leave
rolb
adc
dec
lock
arpl
mov
mulb
mov
or
adc
cmp
inc
scas
mov
push
or
or
jns
std
mov
icebp
dec
adc
cmp
xor
inc
aad
leave
ret
orb
adc
loopne
in
leave
adc
jbe
ljmp
jp
add
ljmp
call
sub
xor
stos
in
push
lret
or
test
mov
inc
cmp
int
es
dec
into
inc
mov
imul
xlat
outsb
mov
pop
cmpxchg
mov
sbb
xor
push
dec
jno
inc
and
rcrl
cli
dec
in
sar
xchg
add
scas
sbb
and
loopne
aad
xsaveopt
rclb
mov
negl
shrb
lds
xchg
lods
sbb
sbb
xor
jno
pop
adcb
scas
pop
mov
push
sahf
loop
mov
dec
jle
mov
aam
fs
pop
dec
adc
clc
enter
popa
icebp
scas
inc
cmpsb
cli
or
leave
or
pop
int3
arpl
sub
push
mov
mov
popa
mov
insl
call
or
imul
push
and
ret
sbb
xor
inc
adc
in
rclb
cltd
outsl
test
pop
in
mulb
add
jno
push
sbb
mov
and
ds
ljmp
fnstsw
adc
insb
enter
cmpsb
add
pop
stos
mov
mov
mov
or
aaa
mov
cld
adc
cmp
and
ret
mov
mov
movsb
cmp
imul
cmp
fidivl
xchg
push
in
or
mov
adcb
aas
pusha
mov
leave
mov
mov
movsb
mov
cli
cmp
or
fwait
cmp
inc
xchg
add
mov
pop
inc
mov
insb
jle
hlt
cmc
dec
push
mov
fs
lods
fcom
mov
imul
mov
dec
or
fimuls
mov
xchg
and
push
mov
and
push
adc
pop
pop
jb
les
aaa
pusha
cmp
mov
mov
nop
in
mov
add
add
insl
xor
inc
push
or
pop
jmp
outsb
jb
lahf
movsl
ficoms
push
sbb
mov
daa
dec
ret
int3
mov
scas
aam
dec
adc
add
mov
add
inc
xor
xchg
xchg
insl
leave
sahf
cmpsl
sarl
xor
stos
dec
ret
into
sub
jmp
cmpsb
lock
or
decl
adc
mov
addr16
iret
data16
enter
popa
sub
cmpsl
nop
ss
ficompl
aad
adc
scas
int
jae
fnsave
das
xorl
push
adc
sti
rolb
adc
xchg
sbbb
aas
adc
adc
pop
js
int
or
ljmp
ss
faddp
sbb
pop
pusha
test
out
insl
push
nop
sub
idiv
sub
pop
and
mov
sbb
lods
inc
mov
pop
xor
sar
test
scas
mov
aad
inc
arpl
jge
je
mov
cld
mov
mov
cs
test
xchg
sub
mov
mov
inc
xor
sbb
pop
mov
lahf
or
mov
lret
lahf
mov
loop
testb
loopne
sub
mov
aad
adc
mov
in
das
adc
lea
inc
popa
test
push
ja
cli
test
arpl
insb
into
fistps
sar
out
shlb
nop
std
movsl
pop
scas
push
adc
scas
stos
pop
lods
push
add
es
xor
mov
dec
mov
insl
adc
and
pop
lock
sub
outsb
sub
sbb
xor
or
mov
dec
bound
push
test
sbb
ds
int
mov
adc
bound
or
or
sub
pop
inc
cld
daa
or
insl
nop
cltd
rcrb
stos
push
lea
xlat
jbe
adc
xchg
mov
jbe
inc
dec
adc
sub
ret
ret
sahf
xchg
sub
xor
xchg
loope
testl
jae
xor
dec
ret
fwait
dec
test
rcll
leave
aam
jge
loop
cwtl
or
inc
or
push
repnz
insb
push
sub
dec
adc
inc
lahf
xchg
add
jne
pop
jmp
enter
movsl
jmp
or
mov
sbb
push
mov
faddl
push
out
std
add
insb
inc
jp
inc
add
mov
stos
jae
sbb
fistps
xor
stc
outsb
shlb
popf
adcb
jns
mov
jae
js
gs
xchg
jnp
mov
clc
sahf
adc
les
loopne
shr
out
sbb
cmp
adc
inc
shrl
imul
sbb
ficoml
cmpsl
xor
bound
pusha
rcrl
movsl
ja
cmp
sub
scas
cmp
inc
xorl
sahf
mov
dec
out
cmp
lds
cli
dec
subl
xlat
jns
test
out
outsl
mov
xor
jmp
adc
adc
xor
mov
negl
and
clc
xchg
mov
lods
insb
xchg
jbe
cmpsl
out
xchg
cwtl
cltd
xor
sbb
mov
push
aaa
into
inc
pusha
sub
cwtl
fistl
push
xchg
jmp
hlt
push
jo
jle
popa
dec
inc
mov
xor
add
lea
gs
xchg
jge
mov
and
cmp
cmp
dec
test
arpl
inc
scas
push
sub
aad
dec
fstps
pop
fistps
lea
movsb
cmp
aas
jo
cmp
push
fadds
fcmovb
mov
popa
les
mov
mov
dec
sbb
adc
outsb
xchg
leave
mov
mov
xor
dec
inc
add
jnp
icebp
nop
test
jns
sbb
movsb
movl
rdmsr
iret
jle
idiv
ja
add
dec
mov
mov
inc
sub
repnz
mov
daa
mov
movsb
lock
int3
sub
and
loopne
outsb
popf
cld
xchg
sub
cmpsb
inc
fdivr
or
mov
mov
mov
mov
scas
jb
mov
jmp
pcmpeqw
pop
negb
push
int
add
cs
jne
push
scas
insl
mov
ss
addb
pop
sbb
sbb
andl
cltd
inc
push
mov
stos
imul
jmp
mov
jmp
cmc
sbb
mov
lock
movsl
xor
sub
test
lds
mov
dec
mov
mov
fwait
mov
loope
gs
adc
cmc
mov
shl
daa
aaa
mov
ret
jbe
jecxz
pusha
jmp
aam
aam
lds
mov
pusha
sbb
and
xor
mov
idivl
leave
icebp
adc
lea
mov
xchg
jp
in
mov
std
or
cmp
testl
sti
jbe
sub
in
test
pop
adc
cmp
push
mov
jbe
pop
fidivs
repnz
inc
arpl
adc
inc
jne
lods
jg
stos
adc
jp
mov
shrb
adcb
andl
stos
pop
xchg
push
mov
int
add
aad
lods
je
or
xlat
testb
xchg
mov
dec
hlt
sahf
movsb
dec
mov
cmpsb
cli
cmp
fwait
add
mov
push
sets
imul
push
fbld
shlb
jns
inc
push
jl
test
stc
dec
mov
xchg
pop
cmp
jl
jp
out
into
enter
push
scas
and
lea
xorl
popl
sub
test
sbb
repz
hlt
sbb
mov
in
int3
testl
dec
xlat
mov
enter
scas
stc
sti
cmpsl
mov
mov
mov
sti
push
test
int3
xchg
xor
test
stos
jecxz
and
lock
insl
xor
in
hlt
lahf
dec
fs
bound
stc
in
mov
dec
ljmp
test
lret
stc
seta
ret
push
fwait
stc
mov
loopne
cmpsl
cwtl
lea
inc
aas
push
gs
xor
in
inc
xchg
das
xor
mov
movsb
pop
loope
pop
test
cmpsb
lahf
scas
push
xchg
loope
out
test
fsub
dec
fists
mov
dec
push
push
lock
cltd
or
jg
fnsave
xchg
fucomip
iret
xor
mov
sbb
es
imulb
ds
inc
fdivrs
popf
divl
nop
mov
std
cltd
mov
pop
in
int3
mov
sbbb
icebp
pop
in
cmp
into
sbb
adc
popa
push
xchg
sbb
sar
icebp
scas
and
mov
call
fisubl
xchg
inc
pusha
pusha
jge
xchg
sbb
cmp
aad
addr16
lret
test
leave
cmp
cmc
imul
shl
push
insb
fs
cld
pusha
jmp
test
pop
rolb
test
gs
stos
push
cmpsl
aas
lds
sbb
das
mov
lock
out
add
mov
mov
sbbb
aad
fnstenv
pop
jb
jmp
or
cs
mov
movsb
rcrb
mov
push
out
repnz
push
or
xlat
sub
xchg
dec
xor
test
xchg
xchg
ds
cmp
pop
sbb
or
adcb
stos
add
pop
xor
aad
pop
mov
pop
xchg
inc
out
clc
cli
xchg
ljmp
lcall
and
stos
in
inc
fistpl
mov
stos
mov
mov
push
jo
inc
icebp
sahf
mov
daa
and
xorb
test
jnp
cmpsb
xchg
mov
sub
mov
aaa
cmp
cmp
fsubl
push
cmp
outsl
xchg
and
pop
mov
inc
rcrb
js
or
popa
inc
cmp
pusha
push
out
xchg
sbb
sti
or
inc
arpl
cmpsb
mov
push
mov
xchg
mov
testb
push
jns
pop
cmp
andb
jae
dec
and
lock
out
aaa
push
xchg
mov
jne
fmul
insl
adc
cmp
mov
sahf
shl
or
call
mov
fnstsw
or
xor
movsl
sbb
and
icebp
inc
das
adc
xchg
out
sub
stos
inc
ds
or
adc
mov
pop
cmove
imul
adc
push
push
lods
mov
cmpps
mov
fcomps
shl
fcmovb
jb
jb
stos
aad
mov
pop
mov
push
loope
mov
loopne
push
push
lods
and
in
orb
push
mov
or
mov
jb
call
cli
push
add
cmpsl
dec
adc
jae
and
xchg
aaa
or
cmp
sbb
fsubl
or
sub
inc
pop
dec
jge
outsb
scas
sub
jge
inc
iret
mov
sbb
popf
lods
filds
cmp
outsl
jge
outsb
aam
adc
data16
andb
xlat
scas
mov
test
and
popa
lods
mov
jae
sub
es
jp
jbe
jg
sub
mov
jmp
mov
roll
stos
xor
sub
sub
dec
mov
pop
mov
aad
push
jbe
mov
rcrb
ds
jno
sbb
ret
dec
sti
cmp
sub
rcrb
push
stos
imul
cltd
add
cmp
inc
pop
dec
mov
scas
xor
in
enter
sti
data16
xchg
sbb
cld
jge
xor
cmp
decb
in
sub
dec
loope
pushw
nop
ret
adc
push
jge
inc
cmpsb
xchg
or
orl
dec
mov
adc
fwait
sbb
lahf
hlt
dec
xlat
mov
inc
into
hlt
pop
pop
mov
and
stc
std
xchg
xchg
leave
in
lcall
sbb
mov
add
jbe
aaa
je
ja
add
shll
shr
pop
pop
test
dec
daa
in
push
mov
dec
mov
std
dec
or
shl
sub
icebp
sahf
out
jp
xor
popa
xchg
add
out
cmp
mov
adc
idivb
int3
sub
cmc
jge
mov
shll
and
out
fistl
cmpsl
out
stos
iret
mov
and
pop
add
mov
inc
fcmovnu
mov
sub
mov
es
dec
dec
dec
xchg
pusha
movq
adc
and
push
pop
mov
arpl
inc
xchg
es
mov
popa
xor
loopne
enter
add
rorb
inc
and
cmpl
std
pushl
pop
mov
pop
gs
mov
popa
fsubrs
jle
cmpsb
addr16
pop
xchg
jb
pop
cmp
mov
les
mov
jl
dec
push
inc
lods
sbb
scas
nop
jae
movsl
mov
cmp
stos
enter
lds
imul
int
xchg
add
pushf
jbe,pt
jo
cltd
stos
out
movsl
jo
pop
fwait
jne
adc
ret
mov
mov
inc
pop
nop
popa
xor
ret
jb
push
arpl
push
enter
inc
jbe
jnp
stos
lcall
mov
mov
or
not
xchg
adc
fwait
sub
adcl
rcrl
add
addr16
mov
icebp
test
adc
xlat
mov
pop
dec
fistpl
or
mov
push
cmpb
cmp
mov
adc
and
mov
xchg
push
xor
mov
add
test
inc
cmp
mov
mov
pop
std
gs
lret
fcoml
and
inc
cmp
dec
cmp
ljmp
repz
in
fldt
inc
int3
pushf
cmpsl
imul
clc
testl
sarl
and
and
es
cmp
mov
xchg
dec
pop
cmpsb
sbb
out
mov
adc
inc
fldenv
divb
push
inc
pusha
test
pop
cli
loope
inc
adc
js
cmp
inc
scas
in
out
pop
inc
lcall
jg
mov
xchg
orl
test
mov
jbe
pop
inc
adc
mov
ret
stos
xchg
les
mov
sti
cmp
adcl
test
lahf
stos
nop
testb
inc
in
sbb
mov
gs
dec
and
pushf
dec
mov
inc
rcll
test
xchg
and
jne
adc
ss
aas
das
push
dec
mov
and
fs
xor
xchg
je
and
push
dec
test
filds
stc
sbb
mov
int
mov
into
lods
cmp
in
and
xchg
mov
ds
in
jbe
test
and
lret
lahf
int
dec
aad
mov
xchg
push
in
push
je
cwtl
xor
xchg
sbb
pop
in
push
stos
xor
fucomi
cmc
mov
jno
jo
adc
xchg
test
clc
and
adc
rorl
out
jno
fiaddl
mov
sub
push
jns
lea
adc
and
rcl
and
cld
mov
push
and
imulb
pop
or
rcr
nop
movb
xchg
mov
add
inc
jb
aam
out
and
hlt
inc
jbe
lret
xchg
jmp
mov
mov
fmulp
xchg
iret
cmp
jge
push
dec
addw
mov
sbb
xor
lods
arpl
into
pop
shlb
pop
andl
enter
out
les
inc
out
bound
push
pop
push
jmp
pushf
push
mov
add
clc
or
dec
ja
loop
inc
lock
add
xor
cmp
cli
mov
pop
lock
sbb
xchg
and
pop
adc
sub
cmp
shll
mov
insl
pop
jecxz
add
cs
jns
xor
subb
xchg
cmc
adcb
pop
or
repz
xchg
xchg
scas
clc
cmpl
adc
jge
push
pop
pop
imul
and
das
mov
jp
dec
scas
loop
cmpsb
and
test
lods
fsubrl
or
push
mov
jmp
fsubr
pop
mov
pop
add
call
xor
push
fistpl
ds
fwait
out
movsl
sub
nop
out
lods
add
lods
push
icebp
sub
push
xor
push
add
mov
dec
mov
jge
sub
setnp
mov
loope
cmp
xlat
repz
jns
mov
push
lcall
xor
push
fiadds
js
or
gs
sbb
dec
loope
fnstenv
sbb
cs
pop
jp
sbb
cmp
cmp
emms
sub
int
cwtl
rolb
lock
repnz
jle
cs
add
lods
xchg
sub
icebp
pop
imul
xor
out
mov
mov
dec
cwtl
addr16
mov
ss
push
push
in
inc
pop
imul
sahf
cmc
pop
fiadds
xchg
mov
in
pop
dec
add
rcl
imul
sbb
addr16
xor
mov
cli
insl
idivl
lds
or
sub
les
pop
outsb
mov
add
mov
jb
mov
arpl
adc
fidivs
mov
outsb
test
pop
dec
mov
mov
jmp
pop
add
xlat
sbb
stos
fidivrl
push
in
pop
push
les
sbb
shrb
jo
test
pop
popf
adc
lds
xchg
shrb
das
xchg
xchg
stc
sub
or
xchg
pop
jmp
ds
sub
aam
mov
xchg
mov
in
sbb
cwtl
jns
pop
cmpsl
xor
or
jno
outsl
jl
imul
ret
shl
adc
add
jno
ret
xchg
mov
xor
fstps
in
out
std
pop
jecxz
add
jo
xchg
sbbb
or
mov
mov
fistpl
push
ljmp
lfs
push
push
cltd
pop
and
imul
arpl
ljmp
repz
ljmp
and
loopne
mov
aam
push
xchg
cmpsb
mov
loope
orb
dec
adc
rclb
pop
adc
pop
mov
xchg
or
mov
dec
xor
outsl
hlt
cld
pop
push
cs
push
cli
xchg
das
push
mov
lret
mov
cmp
jno
sahf
jge
leave
sbb
mov
bound
pop
mov
sbb
mov
into
test
shrb
loopne
mov
aaa
pop
jmp
lret
mov
mov
or
xchg
cs
loop
jae
and
nop
mov
add
cmc
or
icebp
mov
add
iret
flds
inc
push
cmp
loopne
push
cmp
aad
add
inc
pop
sbb
pop
mov
and
mov
loopne
out
insl
addl
push
or
xor
dec
mov
fsub
inc
adcb
cli
pop
cmp
inc
out
dec
cmp
rcrb
xchg
dec
loope
cmpsb
lret
mov
mov
adc
sbb
mov
jne
addr16
mov
sbb
mov
push
cld
mov
repz
fdivrs
lock
call
shlb
fidivrl
divb
dec
fdivrs
mov
dec
adc
aam
mov
mov
inc
lahf
sub
aaa
mov
inc
aas
xchg
stos
sbb
and
int3
out
sbb
push
pop
mov
loop
or
out
outsl
loop
ret
mov
or
cmp
imul
mov
pop
out
push
sub
jbe
mov
xchg
in
dec
xor
flds
push
or
jle
xor
mov
mov
adc
fs
cmp
pop
inc
push
sbb
push
ss
iret
imul
cwtl
test
dec
dec
mov
out
inc
shr
sbb
ror
push
mov
test
out
pop
mov
push
sub
aaa
xchg
cmp
mov
push
scas
jg
xchg
inc
das
mov
cmp
push
add
adc
adc
mov
daa
push
or
mov
ss
fcomps
pop
sub
js
dec
push
fldcw
mov
in
insb
push
mov
cmp
mov
lcall
es
xchg
xor
es
ljmp
mov
dec
sbb
xchg
idivl
pop
scas
pextrw
pop
cmp
js
call
sahf
mov
dec
dec
jle
cmc
add
loope
and
sub
insb
dec
adc
ds
sti
mov
lret
stos
adc
mov
adc
push
inc
hlt
xor
jg
outsl
adc
mov
fld
or
inc
ljmp
jno
arpl
cli
xchg
jb
imul
dec
add
push
arpl
xchg
outsl
imul
xchg
loop
nop
adc
sarb
repnz
lcall
ja
push
loopne
addr16
mov
lods
loopne
mov
and
jge
fsts
dec
cmpsl
cmp
das
test
sahf
outsl
mov
out
xchg
add
mov
pusha
popf
mov
sub
pop
fidivl
xor
mov
maskmovq
negl
adc
je
hlt
rep
dec
dec
push
xorl
aas
dec
fistpll
push
rorl
repnz
push
testb
sbb
flds
mov
shr
cmc
mov
mov
inc
jge
push
mov
sahf
mov
pop
mov
daa
cmp
mov
pop
lock
and
push
out
inc
dec
lods
out
fwait
out
int3
addr16
or
pop
mov
repz
mov
sahf
lea
mov
ja
cld
lahf
mov
dec
cmp
jg
push
and
dec
jne
sub
adc
dec
lock
psraw
je
movsl
dec
shrb
sbb
cmp
pushf
repnz
pop
hlt
inc
stc
ds
xchg
fs
and
mov
adc
mov
sub
mov
mov
call
addr16
and
lods
xchg
push
inc
lods
test
cmpl
xchg
sub
mov
cmc
mov
pusha
pop
ret
rcrb
pop
enter
outsb
data16
ficoml
push
xchg
mov
iret
sub
inc
loope
mov
repz
jo
rcr
dec
in
xor
xchg
add
lea
xchg
inc
in
addl
mov
push
jnp
out
loope
dec
mov
jmp
enter
cmp
xchg
aam
scas
inc
pop
lea
es
dec
mov
xlat
push
test
aam
int
not
insb
ss
data16
dec
mov
test
lea
mov
fdiv
cmp
in
mov
aam
cmc
mov
mov
jge
mov
out
xor
test
mov
mov
fcoml
sub
shl
daa
xor
pop
ljmp
nop
mov
push
jmp
xchg
inc
mov
leave
test
mov
or
and
mov
call
xchg
pop
xchg
cmp
or
jl
mov
divl
mov
pop
rcrb
add
cmp
jnp
out
sub
sarl
jp
add
cwtl
loopne
inc
arpl
xchg
fs
pop
jle
fldt
shlb
xor
cwtl
fcomps
shl
pop
xor
movsb
out
mov
popa
aam
rcl
mov
dec
ja
out
rcrl
sub
sub
xorb
jge
out
lods
mov
lcall
pop
mov
hlt
add
fsubp
call
xchg
mov
sbb
test
fs
pop
aaa
cmp
sub
mov
sbb
insl
jge
pop
xor
out
inc
cmp
js
mov
mov
out
movsl
sbbb
sbb
cmp
and
xor
dec
push
push
sub
jmp
dec
pop
adc
push
and
push
or
test
sub
inc
aad
test
add
in
and
sub
or
das
cmp
dec
inc
loop
and
notl
cmp
sub
xchg
push
mov
out
enter
push
or
je
test
ret
stos
lds
dec
mov
pop
lret
scas
and
mov
adc
insb
sbb
popa
and
pop
dec
popf
dec
and
clc
mov
imulb
xchg
test
popf
or
cld
inc
dec
xor
jg
pop
out
addl
or
sarl
sbb
dec
mov
in
movaps
pushf
cmp
dec
push
add
sub
and
inc
mov
mov
and
jns
jbe
adc
adc
jecxz
mov
pextrw
insl
leave
negb
enter
loopne
lods
dec
dec
sarl
pop
clc
nop
sub
mov
daa
mov
dec
fidivl
pushf
sub
loope
adc
stos
fs
daa
add
jb
fidivs
jmp
inc
mov
sbb
lods
xchg
xchg
cmp
push
jle
jb
and
mov
xor
jg
cmc
mov
lahf
mov
test
mov
cmpsl
ds
push
jmp
enter
loopne
pop
je
roll
xlat
js
out
cmp
stos
xchg
stos
fsubrl
nop
daa
insl
sbb
outsb
inc
xor
scas
jno
xchg
dec
lcall
inc
pop
cmp
stos
xchg
mov
pop
lock
xor
imul
icebp
mov
pop
add
mov
xchg
fistps
xor
loope,pt
pop
adc
add
sub
sbb
insl
add
pop
ljmp
loope
bound
xlat
loopne
out
stc
jae
shll
jbe
push
test
jmp
cmp
movsb
adc
pop
in
into
or
test
sbb
addr16
stos
adc
cs
inc
rcrb
mov
push
out
adc
cmp
mov
call
jno
in
xor
and
les
fldt
pop
sub
test
je
pushf
sub
addr16
mov
out
xchg
mov
out
pop
mul
jns
dec
jns
jle
dec
scas
dec
dec
xchg
dec
xor
icebp
xchg
lcall
and
sub
fiaddl
jne
sbbl
ljmp
int
cmc
mov
cmp
out
pop
xor
lret
outsb
loope
daa
xlat
mov
and
hlt
inc
cltd
stos
jne
xor
jb
add
jmp
adc
aaa
mov
inc
inc
stos
and
mov
out
test
std
xchg
cs
and
jle
mov
lods
xchg
cmp
pop
les
inc
das
lock
push
adc
add
xchg
lcall
fmull
imul
and
ficompl
jo
xchg
pop
sarb
test
loop
jae
sbb
test
or
scas
sbb
in
mov
enter
orb
push
jbe
mov
mov
pop
inc
push
pop
dec
jmp
mov
xor
xchg
arpl
ret
mov
mov
mov
in
adc
push
sbb
mov
iret
xor
sti
clc
fucomi
cld
mov
ja
xchg
sub
out
addr16
mulb
js
cmp
lret
dec
cmp
jno
mov
imul
adc
andb
loop
jg
arpl
jecxz
push
inc
jmp
ss
sbb
std
xchg
sub
jbe
mov
arpl
mov
adc
fsubrl
sbb
dec
inc
xchg
into
jne
pop
cmc
mov
subb
mov
cltd
outsb
in
icebp
push
add
cmpsl
push
dec
test
out
xor
push
jbe
dec
shll
lret
xchg
mov
int3
jo
cs
jne
mov
xor
xchg
mov
mov
loopne
addr16
stos
inc
pop
pushf
movsb
jnp
add
sbb
mov
rep
xchg
xchg
or
xchg
pop
sub
pop
in
fs
add
insb
mov
test
inc
push
insb
js
mov
enter
sahf
xchg
lcall
test
test
lret
icebp
and
loop
movsl
das
push
call
jp
sbb
mov
or
jcxz
pop
out
in
mov
pop
out
adc
mov
xchg
data16
sbb
lock
je
leave
ljmp
mov
cltd
popa
loopne
jp
push
push
insb
mov
adc
and
add
dec
mov
leave
ds
test
pop
inc
lds
sub
je
aam
je
lods
cmc
ret
bound
pushf
outsb
add
in
pop
stos
lea
je
mov
xchg
sbb
ret
sub
stc
in
xchg
xchg
add
pop
repz
push
dec
movsb
xchg
pop
ret
js
jecxz
jge
sub
jl
jmp
or
or
xor
inc
inc
push
jmp
repz
fdivl
mov
addr16
push
push
xor
xchg
mov
or
rcrl
hlt
das
push
loopne
test
test
pop
hlt
sahf
jecxz
lahf
fistpll
daa
leave
xor
aaa
into
int
je
jnp
aam
call
or
and
push
sub
lds
dec
les
mov
dec
iret
pop
mov
dec
or
movsl
cmp
add
xchg
adc
js
pop
mov
les
pop
lcall
inc
push
ja
repz
or
mov
pop
add
xchg
insl
or
add
push
stc
mov
fldt
ret
icebp
push
cmp
scas
movsb
push
aam
loopne
fstps
push
insb
sub
ja
arpl
ljmp
add
lea
into
subb
cmp
and
mov
xorb
mov
inc
jne
lret
jp
jnp
shr
ficomps
dec
inc
adc
test
idivl
leave
orb
push
pop
cmp
dec
lods
jle
push
mov
je
mov
sti
or
sub
xor
dec
jmp
jb
idivl
mov
xor
les
in
ficoml
das
mov
dec
rcl
sbb
or
pusha
and
dec
lret
in
push
xchg
sti
dec
mov
inc
aam
push
and
cmc
int3
dec
das
or
mov
xor
cli
adc
scas
jae
insl
movsl
into
bound
arpl
lds
adc
sbb
mov
and
sub
push
scas
lods
das
iret
scas
or
jne
ret
ljmp
mov
cli
out
sub
adc
mov
out
ret
inc
and
push
jl
bound
jae
xchg
stos
cwtl
push
mov
dec
pop
ja
scas
inc
jae
lcall
cld
cmp
roll
cmp
decb
adc
and
imul
hlt
mov
adcb
mov
sbb
jne
jp
jp
jmp
mov
pusha
aaa
lds
fs
orb
cmc
adc
movsl
adc
push
sti
js
sbb
and
mov
je
leave
xor
pop
ficoml
mov
iret
bound
cmpl
mov
push
push
add
outsb
rolb
lods
xchg
inc
jl
dec
mov
mov
data16
xchg
xlat
dec
mov
adc
pop
jne
lahf
sub
xchg
mov
sahf
xchg
stc
or
flds
lret
fcomi
sub
adcl
mov
fucomi
mov
or
sti
xchg
dec
test
lret
push
lods
mov
push
sbb
pop
test
mov
nop
imul
fbld
hlt
scas
sub
cmp
lahf
mov
test
cmp
loopne
dec
jp
and
cmovge
mov
jb
scas
loop
xchg
hlt
lods
popa
fcompl
dec
loopne
jl
sub
mov
pusha
jmp
icebp
xchg
xchg
adc
jne
aad
lcall
jmp
or
test
mov
jno
aaa
es
mov
adc
call
sarl
pop
popf
test
repnz
push
rcll
mov
dec
mov
or
dec
mov
sbb
mov
or
push
lret
test
sbb
push
movsl
in
adc
xchg
inc
jo
push
xchg
mov
xor
mov
and
and
inc
fisubrs
ret
repz
jb
sub
ds
sahf
jle
sarb
aad
fcmove
arpl
dec
pop
repz
shlb
adc
or
pushf
jae
divl
dec
cmp
cli
jb
out
rcrl
adc
jb
or
xchg
sub
insl
shl
mov
dec
mov
ficoms
test
xor
adc
jmp
cs
ficoms
test
xchg
xor
pop
mov
mov
xor
adc
mov
inc
lds
or
fstl
xchg
sbb
push
jmp
push
mov
imull
aas
leave
jno
mov
lods
lock
data16
mov
aad
mov
lea
or
rep
adc
xchg
add
jp
push
mov
int3
fcoms
cmp
pop
xchg
push
jge
clc
insl
mov
push
fcompl
repnz
xchg
inc
jns
mov
inc
xor
pop
cmp
xchg
sub
popa
data16
ficompl
popa
aam
sub
test
mov
sub
lods
push
daa
ror
cmp
mov
mov
cmp
iret
dec
add
sarl
mov
in
test
sbb
push
into
mov
mov
sub
jp
insl
mov
sub
dec
xor
push
mov
push
std
sbb
xor
xchg
cmpsb
push
or
mov
push
inc
mov
loopne
bound
adc
loopne
mov
xchg
xrelease
ds
imul
and
sti
or
mov
fildll
ret
nop
stos
cld
jnp
loopne
cltd
push
lcall
xchg
xchg
pusha
mov
aaa
std
dec
xchg
add
mov
and
fwait
stc
or
sbb
sbb
mov
inc
pop
inc
inc
jge
hlt
outsl
and
mov
jmp
xlat
imul
inc
test
fs
out
decl
jp
in
in
adcl
mov
popa
bound
call
mov
xchg
lods
cmp
jno
and
inc
neg
lret
sbb
js
call
insl
push
rep
pop
syscall
sbb
jge
push
add
mov
jns
xor
or
mov
cmp
aas
int
in
ret
sub
sbbb
aam
xchg
sub
call
ss
inc
inc
imul
andl
pop
mov
cmp
xlat
test
xlat
mov
or
mov
mull
pop
mov
cmpsl
or
aas
mov
iret
mov
adcl
xchg
repnz
cmp
addr16
mov
pop
test
insl
xor
push
sbb
mov
mov
jp
mov
and
aad
or
inc
adc
dec
stc
mov
aaa
cmp
aad
nop
dec
out
aas
enter
in
into
push
out
push
out
mov
aas
idivl
or
xchg
dec
fwait
out
add
and
leave
mov
xchg
loope
cwtl
cmp
push
xchg
aam
push
mov
scas
les
ss
mov
push
out
stos
jno
cmp
das
adc
enter
jbe
pop
das
mov
fadd
pop
xor
mov
pop
jae
lcall
and
fadds
mov
addb
fsubrl
or
sub
inc
mov
push
or
jge
pop
and
fidivrs
dec
adc
lods
xchg
jmp
lahf
stos
imul
mov
rcrl
cmpsb
ret
loope
and
leave
push
lods
jp
clc
inc
sbb
pop
fcoml
test
aas
ljmp
push
push
xorb
add
cmpsb
dec
popf
in
inc
dec
sbb
or
lret
pushf
cmp
pop
scas
ret
popf
mov
mov
sahf
inc
notb
mov
jne
int3
lret
mov
movsb
int
xor
popa
enter
andb
rol
in
xor
out
inc
sbb
push
dec
lahf
leave
mov
push
sahf
dec
roll
ss
dec
das
imul
test
sub
and
sbb
sub
jmp
or
rcll
xchg
mov
mov
mov
xchg
rcl
push
pop
out
je
inc
stos
loopne
jbe
in
push
fdivrl
loop
scas
and
fmuls
cld
ss
mov
xchg
cmp
insb
jae
jns
adc
daa
and
sbb
jne
cli
xchg
inc
outsb
shlb
outsl
jnp
scas
or
ja
mov
xchg
push
fbstp
xchg
mov
mov
ljmp
lock
movsb
movsb
mov
sbb
decl
movsl
cmp
aam
int
xchg
pop
xor
imul
or
adc
cmp
idivb
mov
insl
aam
adc
xchg
xor
pop
std
stc
jp
sbb
jle
into
hlt
filds
dec
adc
scas
ljmp
pushf
xor
scas
mov
push
jo
adc
popf
cltd
leave
push
mov
jo
sub
fidivs
inc
cmp
mov
gs
pop
cmp
mov
xor
xchg
lret
mov
cmp
rolb
add
pop
inc
movsl
or
mov
jnp
ljmp
imul
pop
shl
dec
inc
enter
push
sbb
and
or
jle
jne
push
jbe
jmp
aas
xchg
pop
ret
jne
repnz
mov
clc
sbb
xchg
jg
sbb
fwait
das
imul
mov
jbe
jg
pop
cltd
adc
sub
mov
stc
iret
jbe
xlat
and
fstps
pop
ljmp
jb
stos
rorb
fwait
int
es
sbb
call
jb
mov
gs
xchg
icebp
mov
inc
or
adc
pop
mov
and
sbb
xchg
adc
lret
sarb
insb
hlt
jns
cmp
push
dec
stos
ficoml
jl
or
mov
jmp
sub
ljmp
out
pop
adc
cld
inc
jns
aaa
stos
mov
sub
xor
mov
dec
fadds
sbb
xor
jne
das
jnp
pop
and
addr16
mov
sub
das
or
jae
sbb
push
jp
sub
jge
fildl
dec
jne
dec
jecxz
push
outsb
in
sbb
jmp
stos
andb
jmp
dec
cmp
push
mov
into
mov
and
gs
inc
cmc
add
sbb
or
mov
int
push
fs
adc
push
xchg
sub
pop
cmp
mov
xchg
cs
sub
mov
idiv
add
mov
fdivs
hlt
cmpsl
rol
shll
aas
aad
cld
je
aaa
fnstenv
sub
xor
pop
jno
pop
adc
mov
or
mov
sub
sub
fnsave
popa
or
out
daa
push
mov
scas
inc
test
int3
arpl
std
lock
insb
stos
inc
push
negb
out
inc
frstor
ret
or
ror
sbb
adc
push
or
fdivrp
setnp
push
adc
int
stc
pop
adc
inc
les
jne
aas
std
push
xchg
lods
push
adc
mov
je
or
push
fnsave
lret
pop
sub
dec
add
fidivl
inc
push
cwtl
jae
lcall
push
add
xchg
jnp
ss
push
add
dec
push
xor
jbe
les
test
pop
notb
ss
out
jb
or
lret
in
test
add
std
push
mov
push
fnstenv
mov
push
out
pop
sar
cmp
pop
pop
test
jp
pop
daa
push
repnz
sub
mov
insl
cmpb
mov
into
clc
orb
idivl
and
inc
addr16
sbb
in
xorb
xchg
mov
fnstcw
fldenv
negb
stc
outsl
mov
mov
ret
in
pop
cmc
aaa
gs
lret
cmpb
imul
aam
stos
pop
popa
outsl
xchg
push
call
xor
sub
jae
dec
mov
lds
jp
data16
cwtl
dec
fst
xor
pusha
fs
jg
or
mov
cmp
mov
test
int
cmp
ljmp
push
or
lods
ficoms
push
out
jl
and
fidivrs
mov
arpl
cs
cmpl
popf
or
out
inc
mov
lods
rorb
daa
arpl
and
dec
das
stos
mul
cwtl
jae
test
enter
and
pop
sub
aaa
sub
xchg
lret
xchg
fwait
adc
mov
or
in
test
push
jbe
in
push
popf
fcmovu
fisttpll
or
and
outsl
insl
push
andl
movsl
inc
cwtl
out
sub
sbb
jnp
xchg
mov
sbb
jge
ret
outsl
or
repz
fists
xchg
xchg
cmp
into
outsl
rcrb
push
add
lret
sbb
or
int3
pop
inc
dec
bound
jg
sahf
pusha
sbb
out
loope
push
loopne
mov
iret
jnp
add
xlat
or
or
stc
and
xchg
add
xor
jmp
pop
aam
popa
push
cmp
xlat
jne
and
sub
adc
pop
out
arpl
loopne
idivb
mov
push
test
jmp
mov
js
lcall
hlt
popl
mov
cli
in
lret
jae
cltd
loopne
mov
loopne
std
mov
xlat
scas
jns
push
add
or
push
mov
add
mov
and
jmp
fwait
cmp
icebp
sti
push
loopne
fadds
in
test
adc
lds
sti
aaa
in
test
and
xor
xor
icebp
sub
in
pop
pop
scas
lret
pop
sub
xor
push
incl
cmpsl
dec
popa
adc
cmp
pop
sbb
adc
in
and
loop
add
pop
sbb
imul
cmc
js
mov
adcl
daa
adc
mov
loope
lods
hlt
adc
scas
xlat
cmp
xor
xor
dec
sbb
sub
push
dec
mov
insl
lret
sbb
inc
pushf
cmp
xchg
dec
fnstcw
not
mov
mov
xchg
add
imul
mov
jge
add
testb
xor
aas
sbb
pop
push
mov
int
sbb
popf
or
push
movsl
icebp
fsub
or
adc
sbbl
adc
jo
pop
cltd
sbb
ss
jle
and
cmp
cmpsl
dec
mov
imul
push
mov
jbe
lock
xor
loope
adc
fnstenv
jbe
movsl
cmp
xor
mov
and
loopne
cmp
fndisi(8087
xor
mov
lcall
add
and
ljmp
aam
ret
jle
xorb
cmc
cmp
nop
cmpsb
lahf
adc
adc
or
push
push
sti
mov
jge
stos
mov
xlat
and
dec
adc
or
mov
data16
add
lret
mov
push
jl
add
push
and
bound
cmp
jae
jecxz
dec
adc
test
xorl
outsb
xor
in
dec
jle
movl
shrb
xor
repz
jle
mov
popf
insb
add
iret
loope
bound
jmp
xor
and
cmp
test
push
stos
jmp
mov
fwait
sub
ret
or
cltd
inc
pop
and
cmp
and
jo
add
mov
and
iret
cmpsl
std
xor
xor
cmp
in
pop
jo
aad
xchg
push
or
jns
adc
in
jns
add
je
les
pushf
scas
stos
setle
data16
pushf
xchg
and
in
scas
testb
xchg
jp
mov
add
push
repz
test
sbb
add
xlat
inc
xor
inc
loop
mov
and
jl
inc
stc
or
sbb
lods
dec
adcl
inc
mov
jns
gs
xor
or
xchg
lock
push
jmp
aaa
out
icebp
mov
insl
pusha
orl
push
or
fisubrl
das
and
imul
jge
push
outsl
clc
pop
repnz
and
inc
jbe
sub
sub
iret
jo
add
clc
cltd
repnz
lods
push
std
sub
test
mov
int
ss
mov
inc
imulb
xchg
out
mov
shl
push
fisubl
and
mov
mov
sub
lods
pop
test
add
cmp
jecxz
clc
bound
mov
cld
into
cmp
aaa
lret
cmp
pop
push
popf
or
lods
sti
sub
inc
out
std
mov
test
pop
xchg
cmp
stos
inc
and
sub
leave
int
js
and
jo
cmc
mov
mov
fwait
jb
xlat
and
dec
mov
xchg
jae
outsb
test
pop
shr
or
movsb
sti
dec
jnp
jno
ss
imul
dec
mov
mov
mov
mov
sub
jb
dec
movsl
lds
stc
lea
shrl
mov
mov
leave
loope
jb
or
inc
gs
inc
fsubl
in
bound
inc
push
sti
xchg
xorb
aaa
popa
sahf
stc
movsl
jmp
jne
mov
cltd
pop
div
fisubrl
push
shl
pop
shrl
ss
pop
xchg
popf
mov
pop
je
sbbb
stc
jle
cmp
stc
and
fld
cmp
xchg
into
sbb
adc
int
inc
sub
adc
bound
shll
test
sbb
fst
aas
adc
in
fnstsw
jb
jne
mov
xchg
stos
jo
cmc
adc
loope
popa
xor
rcll
push
xlat
xchg
sub
inc
push
mov
push
jns
rcl
fnsave
fs
inc
and
das
inc
xlat
mov
push
pop
cmc
test
imul
push
sub
pop
xchg
mov
pop
or
adc
les
pop
fstl
int3
shll
and
jmp
jg
inc
mov
xor
jb
or
xorb
cmp
adc
sub
mov
push
jne
int3
daa
stos
mov
sahf
int
in
jge
stc
scas
cltd
insb
idiv
sbb
jg
mov
or
or
add
sbb
push
int
inc
js
ljmp
push
sub
mov
pusha
int3
je
stc
nop
out
xchg
sub
mov
or
sub
pop
dec
loop
pop
inc
push
push
ret
lock
rclb
mov
add
push
cmpsb
push
inc
add
cmp
xor
dec
jno
mov
xchg
jb
xor
dec
dec
mov
dec
cwtl
push
inc
jle
add
dec
pop
mov
cmp
sbb
sbb
fistl
xchg
cltd
lock
ja
in
xchg
xchg
sub
jb
mov
mov
lock
jle
dec
sub
mov
dec
pop
addr16
fnstcw
mov
stos
into
shlb
cmpsl
push
outsl
jmp
and
lret
sub
fimull
cli
and
inc
ljmp
xor
jno
pop
jbe
dec
das
addr16
loopne
push
rclb
test
push
out
inc
aas
jae
pop
or
adc
fs
jb
hlt
mov
push
lea
fmull
jl
in
mov
es
cmp
outsb
sub
call
and
mov
xor
imul
fcoms
jmp
jne
lock
sub
adc
loopne
xor
add
cwtl
xor
out
dec
sahf
cmp
and
divl
xchg
pop
imul
lods
mov
mov
cmp
xorb
add
sub
push
mov
test
lock
and
and
gs
outsb
mov
add
das
mov
jmp
aam
loop
xchg
xor
loope
sbb
jb
xchg
inc
insb
sti
xchg
push
fs
fwait
or
lret
les
nop
into
aad
add
mov
leave
loope
pop
sbb
cmp
mov
cmc
mov
sub
add
jmp
mov
cltd
mov
shll
lea
jae
xchg
pusha
push
mov
lods
jp
mov
dec
hlt
cmp
shrl
push
xlat
cmc
dec
pop
pushf
push
out
cltd
jge
cs
and
dec
gs
xchg
roll
mov
and
iret
adc
push
loop
mov
out
mov
sbb
pop
mov
lds
mov
int3
mov
stos
das
add
jnp
mov
in
outsl
xchg
sbb
push
out
out
xchg
or
push
or
shrl
sbb
or
cli
push
movsl
xchg
push
push
mov
xor
mov
aaa
add
push
pop
push
pusha
stos
pop
pcmpgtd
cmc
cltd
insb
mov
cmc
adc
mov
push
shr
mov
inc
jl
dec
mov
sti
jo
xchg
sub
and
ljmp
call
jl
mov
pop
aas
pop
add
popa
xchg
std
test
dec
jnp
sbb
repz
idivb
andb
mov
fildl
sti
stos
outsl
sbbb
mov
in
dec
jns
lds
hlt
test
add
stc
or
pop
out
xchg
aas
les
bound
xchg
test
sbb
cmpsb
mov
sbb
lret
sbbl
insb
sub
jp
sbb
sub
cmp
push
jle
add
daa
push
fmull
lock
std
daa
lcall
stc
or
scas
and
push
aas
aad
in
test
imul
lret
idivl
imul
dec
int3
lock
das
push
jmp
mov
test
sbb
test
sbb
xchg
scas
sub
xlat
inc
push
out
je
or
lcall
lods
xchg
pushf
push
mov
dec
and
sarb
js
and
fisttps
adc
lahf
lret
sub
dec
adc
popa
sbbl
dec
dec
lret
sbb
aas
dec
dec
mov
into
mov
ss
ja
lds
lret
cltd
dec
push
pop
push
loopne
iret
ret
push
mov
jge
rcrb
in
andl
xchg
stos
cmp
xchg
clc
repnz
sub
pop
mov
decb
shll
push
or
aaa
sub
ja
add
jecxz
stos
clc
fstpt
stc
subl
fs
bnd
enter
pop
jle
push
sub
cmp
adc
lret
mov
lea
cmp
mov
das
shll
shl
cmp
daa
mov
adc
xchg
popa
gs
mov
inc
lds
scas
push
mov
stos
in
gs
pusha
jae
testb
cli
cmp
cld
cld
lcall
add
mov
and
hlt
fisubrl
adc
xchg
int
jo
shr
sbb
dec
adc
push
lods
shrb
sub
test
xchg
or
ss
pop
jo
dec
inc
add
cmp
adc
aaa
ret
xor
xor
add
push
call
into
cmp
mov
mov
add
cmp
pop
sbbb
jb
int
mov
mov
xchg
mull
cmpsb
inc
cltd
jnp
jne
mov
ja
and
push
or
push
mov
or
jno
sub
rcll
dec
fs
fisubrs
loope
insb
lret
bound
xchg
mov
push
shlb
inc
cmp
imul
lcall
scas
popf
addr16
loop
sbb
insl
add
sub
inc
repnz
imull
cmp
push
test
dec
pop
std
aas
repz
cli
mov
mov
or
jo
dec
dec
int3
pop
rep
or
movsb
ret
test
xchg
aaa
test
or
scas
in
lds
or
jno
fiaddl
or
dec
mov
dec
lods
inc
addr16
mov
iret
cwtl
call
dec
push
outsl
pusha
clc
cltd
mov
ljmp
pusha
divl
add
arpl
iret
xor
mov
shrb
fstpl
es
lcall
sbb
idiv
jp
sub
in
jno
ret
xchg
push
mov
jns
jl
rorb
andb
sbb
mov
fidivrl
ss
jns
cmp
cli
clc
idivb
mov
mov
sub
adc
add
in
dec
fbstp
cmp
push
add
pop
gs
push
or
jns
mov
shl
faddl
and
jmp
add
cmp
cmp
jg
inc
fdivl
leave
sti
xchg
shlb
sub
cmp
dec
xchg
mov
or
sbbl
push
je
leave
cmpl
ja
mov
inc
mov
loop
or
pop
add
loop
aad
mov
ljmp
mov
orb
loopne
xorl
add
ljmp
mov
fmul
lods
inc
lcall
lret
lret
imul
push
stos
sub
xor
test
cmpb
fdivl
jle
aam
jge
divb
push
nop
xchg
cli
in
std
mov
out
cmp
sub
imul
jae
negl
mov
sub
aaa
fs
test
add
jnp
jmp
add
add
inc
mov
jg
lret
lret
sahf
daa
int3
jmp
outsl
xor
adc
or
jae
xor
nop
out
in
xchg
jg
xchg
sbb
leave
mov
nop
dec
dec
outsb
dec
addr16
ret
repnz
pop
sub
repz
mov
sub
adc
fsubr
arpl
xlat
or
scas
inc
ja,pn
test
jno
cmpl
pop
incl
dec
leave
loope
add
shlb
add
test
xor
sub
cmp
xchg
push
mov
das
sub
in
insl
in
ret
pop
pop
xchg
nop
int
and
inc
scas
pop
test
adc
imul
and
mov
leave
cs
and
or
jp
inc
push
enter
mov
insb
cli
mov
add
cmc
ja
or
mov
xchg
lods
out
sahf
je
dec
add
adc
fcompl
stos
jne
aaa
sub
lahf
push
roll
mov
arpl
js
pop
mov
pop
js
jb
add
inc
scas
mov
test
jge
mov
fisubrl
xchg
sbb
xchg
mov
mov
pop
lcall
or
jge
xor
fisttpl
add
sub
push
outsl
fwait
stos
loopne
rolb
mov
mov
or
dec
subb
mov
aaa
int3
push
fisubs
inc
mov
jbe
std
cs
pop
jne
pop
pusha
or
push
addl
push
enter
ja
es
add
pop
ret
add
test
mov
jmp
fistl
icebp
sbbl
sbb
adc
repz
insl
inc
dec
add
mov
adc
gs
ja
dec
out
xchg
es
pop
lods
adc
out
loop
lcall
xchg
adc
sbb
xchg
mov
fcoms
or
sbb
fisubl
xchg
sub
mov
mov
sub
inc
or
or
into
enter
inc
pop
in
das
lret
bound
push
jae
and
pop
pop
xor
dec
sub
jns
mov
add
xorb
iret
cltd
subl
mov
outsl
insl
sub
lret
jg
mov
xor
sub
int3
ret
pop
pop
sub
sar
jmp
jo
and
mov
loope
sbbb
std
mov
or
sub
int3
mov
xchg
and
pop
nop
stc
nop
add
push
sbb
or
mov
js
ja
mov
and
push
bound
stos
xor
xor
xchg
icebp
dec
mov
clc
jae
pop
iret
mov
jl
loopne
notl
daa
mov
mull
push
fwait
scas
orl
sub
leave
jg
jbe
insl
mov
sahf
repnz
xor
mov
fwait
in
xchg
mov
cwtl
and
sub
jb
out
mov
icebp
xor
push
add
jl
mov
jge
into
pop
jl
pop
jge
jecxz
stc
or
ret
divl
jo
lods
fwait
cmp
movsb
sbb
sbb
lods
mov
addr16
bound
xor
out
shrl
subb
int3
lock
sahf
add
xchg
xchg
lods
push
daa
test
fwait
dec
shlb
push
into
dec
jbe
jge
sahf
pop
dec
inc
mov
loope
sti
add
jbe
jbe
xchg
fs
push
and
mov
popf
out
push
dec
stos
adc
dec
dec
sbb
mov
jnp
cmp
popf
push
mov
lods
fdiv
mov
shlb
sub
mov
cmp
data16
sbb
cmpsb
sbb
call
loope
cltd
adc
test
les
sbb
dec
dec
roll
inc
mov
lock
fdivrs
or
mov
dec
sub
cltd
int
xchg
repnz
mov
fildl
fiadds
enter
testl
pop
int3
mov
loopne
sbb
or
movsl
mov
lahf
outsb
jnp
pop
cmpsl
sbb
pop
mov
mov
nop
push
adc
cmpsl
and
mov
ret
in
fbstp
out
test
push
cmp
lcall
cmpsb
in
das
jmp
cwtl
stc
stos
pop
loopne
daa
out
cli
or
sbb
sbb
dec
pop
cmp
mov
pushf
mov
dec
mov
pusha
or
lea
fisubrs
mov
lret
inc
mov
and
std
mov
cmp
sub
ss
inc
push
ret
orl
jb
stos
adc
jmp
adc
push
dec
fnstcw
pusha
test
pop
ss
insb
jl
mov
jg
test
xlat
fildll
pop
xchg
sub
lcall
mov
push
mov
xlat
push
sbb
mov
sbb
or
dec
mov
cld
repz
out
jge
test
jnp
mov
mov
ljmp
fwait
mov
push
jae
je
in
test
inc
test
xchg
jb
movsb
or
pop
in
pop
dec
popf
lods
mov
mov
sbbb
inc
dec
mov
shlb
cld
pushf
repnz
dec
mov
scas
adc
cmp
cld
lret
sbb
bound
or
jns
addr16
inc
ja
in
cwtl
adc
jns
mov
jbe
sub
mov
test
jb
xor
add
mov
pop
imul
icebp
and
push
adc
iret
xchg
mov
and
jmp
outsb
xor
insb
mov
movsl
xor
out
into
insb
push
adc
imul
clc
test
mov
inc
inc
mov
stos
enter
mov
call
scas
mov
addb
clc
scas
add
loopne
ja
dec
or
test
repz
adc
or
sbb
xchg
stos
pop
mov
in
mov
push
int3
mov
stc
stos
imul
sbb
test
aas
dec
adc
or
dec
or
popf
ljmp
cmp
adcl
addr16
inc
push
pop
test
push
mov
or
cmp
test
sarl
insl
pop
mov
mov
rcll
incl
sahf
sub
lds
int
shl
cld
stos
xchg
sbb
jmp
in
or
xchg
lock
lret
ret
inc
push
mov
daa
mov
test
xchg
mov
imul
movsl
jecxz
fs
ja
clc
cmpsb
pop
flds
ret
inc
call
mov
cltd
mov
pop
jae
inc
hlt
mov
adc
cmp
test
test
mov
adcl
mov
mov
hlt
lds
aaa
ds
mov
xchg
or
stos
mov
xchg
and
fisubl
jb
jecxz
mov
jecxz
pop
ss
cmpsb
mov
cwtl
repz
in
push
sti
aad
stos
aad
fwait
sub
push
aaa
push
jge
mov
xor
andb
loop
rcrb
xor
mov
repnz
and
cmpsb
les
dec
lds
adc
les
ss
or
adc
sub
mov
pop
shll
pop
ficoml
dec
scas
push
rcll
jno
repnz
sub
sar
push
fwait
cmc
push
and
and
xlat
or
cmp
cmp
cmp
add
mov
inc
mov
xchg
adc
jno
fs
pop
loopne
mov
mov
rolb
xchg
jle
add
jb
gs
push
sbb
and
mov
out
pop
icebp
pop
mov
dec
sbb
and
popf
cld
sbb
push
inc
cli
xlat
icebp
adc
lret
ds
cmc
mov
out
adc
or
mov
add
aad
sub
dec
shrb
out
mov
pop
inc
pop
push
in
and
int3
lret
ror
cs
in
mov
dec
mov
adcb
aaa
pop
or
cmc
nop
pop
aad
sbb
push
or
jge
test
pop
rorb
dec
cmp
ds
scas
popa
mov
cmpsb
stc
jmp
daa
into
push
jne
lds
xor
jno
add
nop
out
jae
ret
and
dec
pusha
inc
jne
pop
lods
addr16
rorl
add
in
adcl
test
jnp
jmp
repnz
push
out
sbb
pusha
sbb
mov
arpl
je
push
sbb
mov
and
shrl
add
mov
xor
jb
popf
jl
jnp
lods
sahf
pop
dec
loop
jecxz
sub
mov
ret
and
mov
stos
dec
mov
enter
jle
loope
lahf
lods
testl
cmpsb
xchg
je
cmp
jl
push
cmpsl
icebp
popf
and
inc
or
cmpsb
jge
addr16
je
hlt
cmpsb
cmp
gs
lcall
cmp
xchg
psrlq
mov
pusha
and
je
push
mov
xchg
sub
loop
or
aas
sub
jo
inc
pop
or
js
mov
loopne
insb
dec
in
cmc
int3
lcall
and
scas
push
pop
std
test
pop
cld
je
cs
jmp
jnp
icebp
vdpps
add
mov
fcompl
fimuls
aad
push
cltd
inc
cwtl
jae
notl
movswl
addl
or
jecxz
sbb
into
sarl
out
adc
xchg
mov
cwtl
cmp
xchg
jae
lret
xor
adc
pop
and
inc
js
pop
lock
test
add
ret
jae
push
cmc
or
adc
mov
xor
addb
sti
jno
pop
mov
mov
iret
dec
out
dec
xor
shl
mov
sub
lods
or
cld
adc
data16
inc
lods
aaa
mov
dec
lcall
icebp
leave
push
shll
cmp
push
mov
out
call
adc
push
or
xchg
fsubrs
iret
das
and
fldenv
repz
insl
iret
cs
enter
inc
jmp
fwait
add
or
out
test
ds
xchg
pop
fdivl
add
stc
xor
sub
or
in
and
lods
xor
or
or
ret
jo
and
mov
outsl
pop
test
adc
adc
int3
mov
es
imul
jae
sub
add
movsb
lcall
rol
lods
lds
les
mov
inc
pop
in
xchg
jge
add
out
scas
test
mov
push
adc
into
add
pop
scas
mov
push
test
or
jge
sub
xor
dec
xlat
cmp
les
fnstenv
jmp
hlt
pop
xor
add
mov
ss
insb
pop
or
push
jae
and
xor
out
push
rcrl
mov
dec
int3
fcompl
lods
ret
dec
fwait
in
cmp
sarl
fidivrl
push
bound
xor
rcrl
inc
pop
test
xlat
mov
out
nop
rcll
into
out
push
bound
dec
clc
mov
sti
lea
inc
test
mov
fmul
mov
aam
xlat
shrl
dec
xlat
push
int3
fidivrs
xchg
faddl
adc
lahf
push
out
jmp
xchg
lret
cmp
iret
cmpsl
leave
adc
icebp
sti
fucomip
sub
mov
or
insl
jge
jg
inc
pop
push
sub
aaa
test
xor
mov
jle
sbb
sbb
dec
in
mov
lea
mov
lods
fmul
or
jbe
pop
insl
sub
mov
cld
xor
adc
jo
dec
sbb
test
outsl
jp
push
stos
mov
push
fnstcw
mov
rclb
dec
mov
jmp
push
jae
push
add
xlat
outsb
fwait
neg
cmc
adc
pop
pop
stc
scas
cmp
movsb
xchg
push
adc
jge
or
add
add
cmp
les
push
loope
call
movsb
aad
popa
or
mov
out
push
add
ret
repz
lods
dec
in
push
adc
pop
push
mov
push
and
pop
dec
dec
add
dec
dec
popf
inc
or
cmp
push
lcall
pop
jecxz
mov
dec
adc
inc
push
sub
test
pop
adc
jp
mov
mov
popa
fwait
mov
pop
aad
add
mov
and
push
cmpsl
ds
mov
add
xchg
inc
sahf
adc
and
or
frstor
fstpl
sahf
cmc
add
stos
or
or
cmpsl
pop
shlb
add
testl
insl
xchg
push
jecxz
loop
data16
xlat
dec
imul
out
dec
push
cmc
cmp
shll
cmc
mov
adc
mov
les
sub
pop
enter
xor
push
xchg
cmp
ja
scas
push
fwait
push
ret
in
imul
shrb
jecxz
jnp
mov
push
adc
cld
inc
or
sbb
cmp
push
icebp
leave
adc
jbe
rolb
jge
sub
adc
adc
mov
mov
aaa
mov
lock
stos
int3
mov
xchg
and
mov
pop
jbe
repz
int
jnp
shl
add
sbb
sub
and
adc
pop
mov
aad
cmc
pop
mov
sbb
fnstsw
jle
sbb
push
ret
cs
test
jne
inc
mov
adc
mov
push
out
and
loop
xor
sub
dec
jecxz
jecxz
orb
sbb
mov
shl
mov
cmc
xorb
dec
xchg
dec
and
add
xchg
sbbb
outsl
adc
shll
pop
pop
adc
mov
and
aaa
sti
dec
and
loop
aam
dec
push
inc
js
mov
adc
dec
mov
add
adc
rorl
adc
test
stos
fsub
adc
das
popa
addr16
pop
xchg
xor
sub
push
aas
and
lcall
push
gs
xorl
outsb
lcall
stos
mov
sub
cmp
lret
inc
arpl
or
ss
or
add
mov
xchg
dec
imul
dec
aam
xchg
nop
pop
negb
pusha
or
add
test
push
adc
roll
inc
cmp
inc
adc
pop
dec
pop
dec
iret
out
add
push
push
or
sar
and
lret
pmulhuw
mov
pop
push
mov
mov
outsb
xchg
xchg
mov
repz
nop
ljmp
inc
xor
lcall
jns
aam
xchg
lcall
mov
stos
mov
bound
jmp
test
or
mov
xchg
xchg
inc
rol
xchg
push
clc
mov
mov
cmpps
add
imul
xor
bound
ja
adc
fsubrs
or
pop
xchg
test
mov
data16
imul
orb
fwait
lds
push
stc
icebp
jns
out
xchg
push
movsl
cmpsb
jns
push
sbb
push
xlat
mov
rol
dec
aas
sbb
mov
ss
in
cwtl
or
jl
mov
add
sub
fs
pushl
inc
sub
xchg
inc
ja
inc
int3
jnp
mov
aas
dec
lock
push
pop
xchg
adc
pop
or
aad
mov
mov
lahf
lods
cwtl
mov
mov
mov
imul
xor
mov
faddl
stos
sub
rcll
and
mov
test
fincstp
sbb
rcll
xchg
insb
cs
fsts
mov
insb
clc
pop
stos
mov
aad
or
cmpl
fcoml
es
mov
jg
dec
mov
cmpsb
cmp
stos
mov
add
inc
inc
orl
imul
mov
cwtl
sbb
pop
stc
pop
mov
rcl
cmp
dec
cmc
or
mov
xchg
sub
out
int3
dec
dec
xchg
xor
jo
imul
std
nop
mov
aam
or
fwait
xchg
out
dec
cmp
push
xchg
in
lcall
dec
in
insb
sarb
loop
mov
push
aas
dec
cmp
push
ds
pop
jb
sub
xor
icebp
repz
mov
inc
mov
dec
lret
and
mov
jbe
call
dec
sub
sub
or
subb
ror
into
imul
adc
lods
rcr
and
stos
in
test
and
out
xchg
dec
repz
data16
cli
stos
ss
xchg
je
dec
rcrb
stos
cmpsb
test
ret
pop
jle
pop
push
mov
imul
popa
decl
popf
dec
pop
dec
sub
jmp
or
es
push
in
addl
rcrl
fwait
dec
lahf
mul
xchg
repz
cli
cmp
insl
inc
ficompl
dec
push
daa
inc
andl
sub
pop
hlt
jns
cmp
mov
aaa
arpl
int
adc
test
nop
mov
xchg
cmpsl
mov
cmp
adc
dec
gs
pop
loop
mov
pop
adc
imul
xchg
lds
fisubs
sbb
mov
adc
inc
ljmp
pop
movsl
aaa
stc
cmp
fcomps
test
lods
xor
lea
loope
stos
adc
mov
mov
cmp
push
pop
push
loop
test
movsl
lds
movlps
sbb
outsl
mov
test
mulb
and
xchg
mov
xor
mov
jge
cli
mov
jo
ficoms
dec
mov
shlb
dec
sbb
popf
jns
xchg
popf
lods
cmpsl
cmpl
movsb
jo
and
aaa
bnd
pushf
pop
out
and
xor
out
cmp
lock
jl
dec
jp
jnp
xchg
and
inc
andb
imul
subb
shrl
or
mov
aaa
stc
out
cmp
dec
pop
dec
xlat
xchg
imul
xchg
xor
imul
dec
shll
jge
sbb
dec
push
scas
ds
xor
pop
push
rcll
popf
jmp
inc
mov
mov
arpl
cmp
fmuls
push
jge
xchg
fiadds
into
aad
rcrb
cmc
ds
stc
or
int3
jg
leave
in
cld
cli
pop
out
rcll
xchg
outsl
jns
aas
cs
sub
icebp
cmp
jae
inc
cmp
jp
sub
pop
popf
or
mov
sub
inc
add
dec
push
cli
adc
mov
push
pusha
mov
sbb
dec
cmp
push
or
nop
pop
test
cmp
hlt
push
or
xchg
fwait
xor
cmp
dec
stos
das
mov
xchg
push
or
outsb
es
or
or
lock
fs
repz
stos
and
int
lret
xor
lea
mov
icebp
popa
add
and
pop
mov
push
cmp
jae
mov
mov
and
dec
cmpsl
lcall
int
insb
in
repz
int
cmpsl
jns
pop
adc
xchg
and
lret
adc
mov
push
add
dec
nop
pop
push
adc
das
popf
out
xor
adc
jl
xor
mov
jle
fnstsw
adc
scas
nop
push
mov
int3
imul
push
mov
dec
push
pusha
aam
data16
pop
aad
test
jbe
test
mov
cli
mov
data16
xor
xor
mov
popa
das
fisubrl
fdivl
xlat
inc
push
lcall
inc
loope
lock
jae
add
das
add
push
bound
and
adc
out
xchg
sbb
pushf
xor
mov
inc
sbb
pause
daa
sub
loop
sbbb
pop
add
add
push
jle
cld
outsl
lahf
sbb
or
cltd
insl
sbb
sub
jge
pop
sbb
mov
loop
shl
fiadds
dec
pop
jle
pushf
int3
or
fidivrs
adc
add
sbb
sbb
mov
cmc
insb
clc
imul
mov
cmpsb
cmp
gs
cmp
arpl
fptan
mov
sub
lret
test
dec
iret
std
and
xor
cmp
sub
sub
mov
paddb
dec
add
rol
stc
sbb
ror
inc
lret
imul
push
dec
roll
rcrl
fdivrs
add
jno
mov
aaa
jbe
cmpl
add
cmp
dec
pop
bound
dec
mov
xor
and
dec
add
push
and
imulb
repnz
test
int
divb
jge
and
push
or
push
iret
add
in
jns
sub
mulb
inc
pop
movsb
les
mov
pop
mov
fiaddl
jno
in
jg
mov
inc
cmp
dec
or
push
call
push
test
imul
inc
imul
jne
stc
push
mov
fmull
inc
test
adc
mov
rcrl
adcb
xlat
xchg
stos
xchg
repnz
repz
push
xchg
add
push
sub
inc
test
fcompl
and
jle
xchg
xchg
pop
mov
test
jmp
lods
sub
sub
mov
dec
cmp
or
and
insl
mov
push
test
jne
bound
outsb
push
test
lahf
cltd
lret
adc
jbe
leave
pop
add
and
or
jae
fcoms
lods
icebp
mov
push
loop
add
inc
ja
pop
mov
cmp
adc
hlt
push
arpl
stos
mov
insb
pop
and
push
or
dec
mov
mov
dec
and
repnz
cmp
mov
iret
push
pop
in
or
and
shll
je
repz
call
rcrl
dec
jae
and
jecxz
xchg
jno
cli
cmc
mov
dec
adc
dec
xchg
dec
adc
push
insb
scas
shlb
test
outsl
pop
test
add
mov
loop,pn
cmp
lahf
and
mov
lea
push
sub
lahf
fbstp
mov
push
mov
repz
dec
adc
xor
cmp
imul
cmp
bnd
pop
aaa
xchg
jl
repnz
push
jbe
mov
rcrb
mov
mov
ret
pop
xor
add
loop
adc
push
jmp
hlt
in
cmp
test
clc
push
adc
stc
lds
xor
mov
mov
mov
sahf
mov
test
pop
aaa
sub
lock
mov
popa
xchg
popa
rorl
sub
jae
ret
add
xchg
or
cmpsb
jns
mov
popf
push
inc
cwtl
jbe
jnp
out
push
and
and
add
xchg
idivb
pop
andl
sub
mov
clc
nop
or
loope
sti
cmp
ret
inc
arpl
mov
test
mov
push
cld
addr16
jne
xchg
es
or
pop
dec
out
mov
mov
jb
ds
insb
xchg
sub
dec
aaa
pop
lock
stos
out
inc
pushf
xchg
loopne
rcrb
xor
mov
cmp
mov
ficoms
jno
cmp
pop
insb
push
stc
negb
incb
add
in
aaa
sub
mov
push
lret
frstor
jle
ret
movsb
pop
xor
in
jno
in
and
xchg
rorl
ret
xchg
mov
dec
add
xor
pop
mov
cmpsb
dec
and
and
adc
sbb
divb
or
and
xor
mov
sub
jecxz
ja
mov
ljmp
pop
cmp
adc
add
daa
xchg
cmpsl
inc
lahf
enter
cmp
push
cmp
cmp
push
loope
ficompl
jnp
dec
loop
mov
lods
jns
mov
lret
dec
lret
je
psubsb
fs
imul
ljmp
pop
insl
pop
add
int
outsl
ds
in
xorb
nop
push
sti
dec
dec
faddl
xor
jns
xor
and
mov
mov
mov
js
push
push
pop
pusha
mov
xchg
pop
leave
and
sbb
inc
lahf
cmpsl
inc
in
cmp
repnz
scas
cmp
sbb
push
cmpsl
movsl
imul
jmp
out
xchg
add
aaa
xor
xor
nop
jno
mov
or
clc
ret
outsl
daa
sahf
fstpl
cli
or
cmp
mov
inc
rcr
sub
out
test
dec
mov
jle
ja
cli
int3
outsl
or
icebp
and
jns
xor
jecxz
fadds
xchg
inc
add
pop
inc
cmp
lret
setle
mov
jmp
cmc
mov
lahf
xchg
insb
sti
rclb
ja
sbb
cmpsb
cmp
sub
lcall
push
shlb
jmp
xorb
test
adc
inc
or
icebp
pop
mov
cmp
daa
pop
inc
and
push
mov
cwtl
xor
cmp
mov
inc
push
gs
add
push
sub
into
xor
js
aas
shrl
pop
inc
fwait
in
xchg
and
lahf
push
add
enter
shrl
in
sbb
xchg
pop
imul
loop
add
xlat
add
pop
subb
or
push
pop
loope
xor
add
jno
test
push
call
insb
adc
lret
mov
mov
loopne
cwtl
cmp
mov
sub
pop
mov
movsl
add
scas
and
xchg
xor
inc
imul
fwait
aam
movsb
dec
jmp
jl
jns
mov
mov
cmpsl
pop
repz
mov
sub
push
rcrb
in
enter
xor
cli
push
fld
lret
adc
or
jp
ss
aaa
stos
push
and
push
pusha
and
fdivrl
rorl
and
jno
xchg
pop
fs
test
pop
or
cmp
loop
les
out
or
les
pusha
pop
cli
jne
or
jmp
sbb
test
filds
or
int3
gs
es
push
cmp
ret
mov
pop
xlat
pop
pop
jb
xorb
add
cmpsl
sub
imul
or
frstor
int
es
movsl
std
mov
and
ror
pop
sbb
lea
ss
pop
jb
aam
loope
ds
in
out
sbb
mov
in
jbe
adc
stc
and
stc
cld
pop
outsb
jl
sbb
cmp
xchg
scas
and
pop
jno
jl
lods
rcrb
out
dec
inc
xchg
shrl
fcoml
lret
repz
shll
loopne
dec
sbb
jp
movsl
dec
mov
fistl
mov
add
shll
fistps
dec
outsl
inc
lods
push
test
add
in
lcall
push
jmp
adc
push
push
hlt
inc
testb
push
mov
pop
lea
leave
xor
fldl
adc
push
orb
push
cwtl
push
push
adc
cltd
data16
sbb
icebp
push
push
sbb
repz
jbe,pt
js
loop
test
mov
ret
ret
and
hlt
addr16
xchg
cmpsb
int3
add
push
push
sbb
in
push
outsl
sarl
ljmp
inc
or
cmc
jmp
hlt
xchg
cld
lods
dec
and
mov
fadds
std
movsl
mov
push
fisttpl
icebp
enter
adc
cmpb
lods
cld
mov
sub
stc
outsl
sbb
mov
or
and
adc
lcall
push
push
cmp
cltd
push
adc
sarl
pop
sbb
mov
mov
push
mov
test
lret
lock
push
sahf
add
inc
xchg
in
pushf
cmp
test
and
push
lock
push
mov
addb
push
lock
cmc
adc
jle
test
lahf
outsb
mov
xchg
add
sub
daa
mov
or
dec
or
add
mov
pop
notb
leave
pusha
push
jo
ficoml
testl
dec
arpl
or
push
adc
mov
outsl
in
ss
lret
or
test
or
adc
ja
rclb
dec
mov
xor
js
mov
and
rol
cli
repnz
and
fs
movsl
mov
aad
xlat
outsb
adc
lret
push
sub
jne
pushl
mov
inc
mov
bound
js
cmp
call
movsl
outsl
pop
cltd
fcmove
sub
mov
jb
fdivrl
lock
xlat
adc
loope
xor
push
and
adc
cmp
mov
outsl
or
dec
data16
lcall
mov
push
sahf
lods
and
popa
data16
push
mov
popa
rorb
xchg
fmul
mov
or
fmul
sub
outsl
add
xor
outsl
cmpsb
dec
cwtl
mov
lea
rcll
dec
in
jnp
subl
cli
xchg
pop
lock
and
out
xchg
and
shll
xchg
lds
inc
lds
out
sbb
mov
fwait
jbe
negl
sahf
adc
std
xchg
mov
ljmp
ss
and
out
fwait
cwtl
dec
xchg
int3
ds
into
xor
pop
fnstsw
cld
dec
sbb
sarl
insl
scas
sbbl
fistpl
je
add
ljmp
shrb
fbld
jb
and
stos
jecxz
rcl
cmp
pop
sub
or
dec
loopne
fisttps
icebp
mov
or
adc
pop
stos
push
sub
das
ja
in
clc
popf
aam
xchg
mov
add
cs
mov
repnz
xor
push
jo
mov
fmulp
sub
icebp
mov
mov
das
inc
lods
insb
jnp
xchg
sub
lods
inc
orps
loop
enter
xlat
stc
je
cwtl
mov
outsl
inc
out
sub
addr16
idivl
mov
sub
test
hlt
repz
dec
std
cld
call
push
inc
cmp
aam
xlat
pop
xchg
xor
cltd
or
cmp
xor
xor
adc
fsts
aas
aad
stc
xlat
cmpsl
mov
push
sbbb
js
cmp
imul
add
popfw
testb
xor
cmp
aam
mov
dec
xchg
aaa
or
lahf
stos
push
cmp
cs
stos
mov
mov
adcb
pop
outsb
jp
or
in
push
mov
imul
mov
inc
ss
inc
adc
cmp
clc
mov
repz
sub
push
mov
jne
mov
lods
in
dec
loope
mov
cli
mov
pop
decb
pop
mov
adc
dec
pusha
cmpsb
xor
ds
cmp
testb
stos
inc
fdivl
xor
ss
mov
cs
sbb
into
dec
adc
out
scas
cmp
jno
sub
mov
jg
scas
les
inc
shlb
dec
mov
mov
fdivrl
mov
andb
mov
leave
push
adcb
add
mov
mov
push
addl
pop
dec
stos
inc
mov
hlt
mov
or
clc
adc
pop
test
imul
jnp
xor
xor
or
lret
fstpl
in
mov
ljmp
jno
sbb
mov
pop
int
hlt
ds
out
jecxz
lcall
fdivl
cmc
js
loopne
loop
sarb
clc
mov
push
sbb
cmp
mov
push
popf
mov
jno
mov
mov
std
xor
daa
test
dec
and
dec
mov
jle
jns
int3
cmpsl
xlat
xchg
ret
inc
xchg
out
icebp
in
mov
sbb
and
lods
stos
xchg
cs
mov
add
not
pop
xor
dec
scas
xchg
mov
sub
dec
xor
dec
cld
adc
dec
pushf
dec
frstor
outsb
sub
fld
xlat
icebp
ret
cli
inc
fisubrs
sahf
gs
loop
test
popf
lss
mov
arpl
push
cmp
test
cmp
cltd
loope
pop
jecxz
cld
xchg
sbb
gs
insl
sbb
jecxz
jle
and
aam
or
ret
mov
pop
pop
scas
dec
mov
dec
jae
int3
sub
jae
inc
push
mov
dec
outsl
call
adc
aas
sbb
jae
sub
push
xor
sub
insl
pop
adc
or
data16
inc
sbb
add
lret
push
popf
imul
cld
mov
adc
adc
jg
sbb
dec
idivb
rolb
gs
and
sbbb
push
jecxz
or
cmp
xchg
sub
and
sahf
and
mov
push
ret
pop
sub
and
xchg
loope
notl
and
popf
mov
mov
dec
cli
push
leave
fucomip
lret
sbb
jo
add
jb
inc
push
push
scas
push
in
inc
sbb
jo
ljmp
mov
pushf
jg
std
sti
adc
les
add
rclb
inc
pop
jns
sbb
ljmp
loope
add
imul
loope
ficoml
insb
lds
testl
and
and
push
jmp
test
sbb
pop
adc
ds
outsb
out
push
mov
lock
test
mov
cmc
mov
data16
push
xor
in
inc
mov
push
lret
pushf
push
nop
jb
ret
mov
push
in
fidivs
push
or
or
aam
shrl
scas
pop
sbb
ss
jl
xchg
mov
jnp
pop
xchg
dec
arpl
cmp
sub
push
mov
das
mov
aad
clc
and
cmc
sbb
gs
mov
lahf
push
in
sarb
jmp
sbb
jb
out
inc
add
dec
add
incb
repz
sbb
leave
push
cs
testl
adcl
xchg
jge
sbb
stos
int
or
mov
fucom
adc
pop
dec
pop
test
aad
push
sub
shlb
mov
jb
int
repz
sti
loopne
clc
pushf
adc
lcall
lods
sbb
or
or
int3
jae
sti
int
in
sti
subb
inc
mov
cmp
inc
shl
mov
xchg
jl
int
fidivl
fbstp
test
enter
lock
and
pslld
fnstcw
das
fcomip
pop
das
pop
xor
cmp
push
or
and
dec
lods
xchg
jecxz
icebp
pop
jne
or
int
inc
jp
fs
movsl
lods
adc
xor
loop
adc
scas
test
add
lcall
xor
insb
js
ret
xor
rorb
dec
loop
mov
test
aaa
mov
out
inc
pop
imul
fcmovb
lea
jb
adc
lods
xchg
in
imul
dec
hlt
push
mov
xor
add
lods
xorl
pop
xchg
pop
or
cmp
pop
fcompl
add
adc
dec
or
sti
lods
out
push
mov
pop
xchg
mov
iret
xchg
mov
lock
sub
loope
or
mov
andb
int3
bound
psraw
or
push
in
adc
das
mov
lahf
pop
xchg
add
outsb
cmp
data16
jp
ljmp
xchg
enter
gs
adc
sbbb
movsb
cmp
fdivrl
lahf
mulb
imul
adcl
int3
add
lods
push
and
dec
push
pop
icebp
mov
sub
lret
adc
fwait
dec
jle
push
stos
dec
pop
mov
pop
roll
xlat
jb
xchg
push
shll
and
push
in
adc
stos
add
add
mov
leave
pop
das
cmc
and
add
sbb
xchg
mov
push
sbb
inc
iret
mov
enter
dec
sub
shl
jns
sarb
mov
sbb
pop
xor
popa
lods
mov
fmull
pop
repnz
cld
dec
add
movsl
hlt
push
cmpsl
inc
lcall
sahf
jno
jge
stc
pop
das
cmpsl
test
ljmp
icebp
adc
xor
inc
pushf
inc
push
dec
inc
pop
repz
dec
test
sahf
adcb
popf
into
hlt
popa
subl
les
push
out
imul
into
out
add
clc
and
pop
sbb
lds
inc
dec
add
pop
call
mov
jb
mov
or
push
bnd
xor
sub
pushf
arpl
test
int3
iret
mov
and
mov
sub
icebp
andb
fwait
pop
sbb
out
test
cs
aas
push
and
add
pop
outsl
clc
push
xchg
imul
pop
icebp
loop
and
jns
xchg
sub
movhlps
js
or
xchg
ja
xchg
dec
out
add
insb
test
leave
outsb
shll
pop
cli
cltd
insb
ret
add
xchg
dec
inc
insl
mov
hlt
xchg
sti
rcrb
dec
cmp
psubw
in
jl
jns
pop
mov
mov
test
cmp
mov
adc
bts
mov
pop
jmp
jns
rcl
adc
mov
add
shlb
cld
inc
fldl
push
je
test
popf
pop
shll
test
push
fisubrl
stos
inc
cmp
movsb
outsl
das
dec
or
dec
fwait
ret
es
fadds
xchg
loope
pop
dec
pop
dec
push
imul
mov
pop
out
cmpsb
inc
das
push
outsl
popa
and
mov
or
movl
sub
test
cmp
cmp
push
test
inc
fists
out
test
add
xchg
xchg
cmp
jmp
testl
and
outsl
iret
add
ss
mov
or
inc
int
and
pop
cmpl
mov
std
imul
pushf
push
mov
loope
int3
arpl
adc
les
outsl
iret
push
adc
adc
mov
cmpb
mov
push
jo
jne
jne
aas
mov
aas
mov
imul
fstpl
and
jmp
addl
dec
outsb
jl
lods
stc
adc
fdivs
adc
sub
jne
cmp
inc
cmp
insb
out
out
xor
sbb
mov
movsb
jmp
fidivrs
xchg
and
data16
stos
sbbl
mov
fldlg2
cmp
mov
fmull
out
pop
aas
adc
xchg
icebp
sub
mov
dec
or
mov
push
daa
or
movsl
jne
mov
arpl
scas
jnp
int3
hlt
idivb
aad
pusha
add
out
aaa
scas
stos
push
rolb
xchg
add
sbb
adc
icebp
sbb
jno
jp
test
and
imul
loope,pn
mov
sbb
dec
loop
enter
lcall
xchg
mov
pop
or
arpl
add
outsl
movsl
fs
xchg
dec
stos
dec
insl
adc
sbb
cmc
stos
or
fnstcw
sbb
je
data16
rorb
sub
sub
xchg
leave
addl
xchg
aad
jae
mov
pop
push
or
test
sub
inc
cltd
cltd
cmp
push
test
sub
aad
insl
lret
mov
xchg
mov
rcll
test
dec
int3
jnp
sub
nop
mov
xlat
mov
cmc
and
inc
sbb
adc
rcr
mov
adc
pop
test
fdivrs
cmp
cmp
mov
cmp
popa
adc
push
xlat
xor
fistpl
ja
pop
mov
pop
and
and
add
mov
jl
push
mov
cmpsl
and
fidivrl
cmc
xor
out
mov
loopne
push
xchg
lea
mov
jno
andb
fmulp
mov
jnp
and
dec
test
mov
or
daa
push
push
out
push
pop
push
pop
lcall
pop
push
inc
jno
and
repz
pop
push
cmp
int3
shrl
xchg
add
dec
add
mov
mov
sbb
aas
fsubrl
jne
push
mov
into
jne
loope
inc
fwait
jno
inc
pop
daa
daa
aam
mov
cmp
inc
sti
fadds
es
jp
out
lret
shll
dec
insl
push
xchg
test
push
cmc
lock
mov
loopne
adc
fs
jg
cs
add
mov
mov
sahf
nop
ljmp
out
mov
push
sub
xlat
xor
in
cmpsb
xor
es
push
sahf
mov
xor
push
out
jle
cmpsl
sahf
in
loope
rcl
mov
and
pop
adc
inc
xor
adc
daa
lcall
mov
ss
mov
sbb
pop
xor
movsb
es
pop
test
mov
xchg
sbb
pop
outsl
in
int
fcmove
es
jmp
cmpsl
pusha
lods
add
cmc
dec
add
inc
inc
xor
sbb
mov
push
cmp
lods
push
add
push
cmpsl
jno
xlat
pop
cmpsl
xlat
test
xor
push
jmp
push
fwait
cmpsl
dec
xchg
mov
insb
fadds
or
ficoml
push
sbb
inc
imul
mov
js
popa
jge
push
sahf
ret
gs
leave
sahf
sbb
aam
imul
push
fdivrl
icebp
mov
jb
mov
hlt
lret
dec
cmp
mov
jl
pop
loopne
cs
jns
stos
mov
cmpsl
and
mov
xchg
push
sbb
dec
xor
adc
pop
jne
mov
daa
xchg
out
jno
mov
add
icebp
xchg
sbb
xchg
jo
cwtl
push
mov
inc
pop
xor
gs
dec
or
jno
jp
ds
outsl
js
outsb
add
lret
lcall
sbb
add
cli
xor
nop
cmpsb
mov
loope
scas
sub
addl
mov
movsb
vcvtps2pd
jecxz
push
push
adc
rcll
out
aas
aad
outsl
test
jg
pusha
repz
or
mov
mov
add
xchg
lods
mov
popf
fnstenv
mov
xchg
out
addps
cwtl
or
cs
cmp
cmp
out
cmpsl
jl
jle
aas
sbb
and
int3
adc
test
adc
xchg
scas
xor
mov
mov
pop
lock
and
outsl
fwait
ja
int3
std
cltd
std
xor
sub
xchg
pop
std
add
inc
adc
filds
xchg
pop
clc
adc
lcall
aas
cmpsb
and
sarl
int3
jl
mov
cmp
je
aaa
jge
orl
cmp
sub
scas
inc
pop
add
push
fs
icebp
mov
arpl
aas
stos
ficoms
jp
jno
sbb
inc
in
push
sti
shlb
aam
xchg
nop
adc
pop
pop
mov
cmp
sub
jo
add
testl
cltd
outsl
lret
mov
inc
mov
and
sbb
in
test
xor
addr16
jb
jnp
adc
loop
inc
jge
push
cmp
test
pop
das
movsb
testb
sbb
iret
inc
mov
adc
addr16
cmc
xchg
cs
loopne
leave
xchg
mov
mov
out
ds
shlb
add
imul
testb
sahf
clc
aad
sub
mov
in
ljmp
sbb
subl
in
xchg
dec
mov
jle
dec
mov
dec
test
sti
rcl
fsubr
or
pop
mov
lahf
nop
mov
sbb
dec
jno
mov
adc
lahf
stos
xchg
xor
cmp
lods
movsl
cld
pop
xchg
dec
gs
jp
sbb
ds
pop
jmp
push
lds
and
cmpsl
mov
pop
xor
push
pop
repz
sub
rcr
sbb
out
sbb
xorb
movsl
shl
clc
xor
insb
jne
stc
push
xor
jg
lds
das
cmp
mov
pop
loop
movsl
push
sub
fbstp
dec
movsb
push
fwait
leave
mov
lcall
lret
lret
cmp
inc
aad
loopne
or
lods
pop
pop
push
cld
push
mov
push
sarl
push
pop
xrelease
pop
mov
xor
jo
cmp
scas
inc
fstl
int
sub
loopne
loop
ret
cmpsb
mov
push
and
sbb
push
lds
pop
pop
or
pop
mov
in
jnp
stos
inc
hlt
jecxz
xchg
cmp
pop
cmp
jl
jbe
movsb
adc
jmp
ljmp
test
scas
test
in
xor
lcall
in
insb
add
out
ret
mov
cwtl
push
or
ljmp
fsubrs
xchg
sahf
inc
inc
pop
out
push
mov
adc
pop
lret
imul
sub
aad
in
pop
icebp
pop
and
xchg
fwait
sti
mov
or
je
negl
mov
push
test
into
push
pop
dec
and
loop
push
adc
fs
je
fs
orl
and
loop
aam
or
mov
cmp
roll
sub
and
lret
sti
inc
mov
jmp
iret
lea
test
jae
rcll
out
daa
sbbl
dec
in
xor
pop
inc
add
mov
sub
cmp
test
xchg
push
and
adc
or
stos
loope
dec
xlat
fistpll
or
int3
mov
mov
fadd
jb
mov
ja
jg
cmp
aas
xchg
repnz
and
es
je
aas
ret
push
push
jecxz
addr16
mov
icebp
or
stos
push
sbb
xor
inc
ss
ljmp
pop
addr16
jno
mov
fmull
cmpsl
test
mov
push
cmc
aaa
into
add
push
inc
imul
adc
jmp
into
xchg
test
xchg
xor
cmp
push
cmp
ret
cmp
pop
push
xchg
and
adc
stc
popf
nopl
push
jl
ljmp
xchg
test
pop
popa
mov
int
xchg
mov
lret
dec
int
call
dec
aam
shll
gs
push
bnd
std
inc
push
daa
add
lcall
or
js
leave
cmp
sub
repz
ds
std
pop
mov
sarb
jmp
popa
sbb
pop
lods
fldt
int3
adc
inc
mov
mov
fistps
and
insb
jp
cmp
mov
push
pop
out
leave
mov
or
cld
xor
rol
andl
ret
xchg
test
insl
lret
pop
xor
mov
xchg
mov
mov
cs
leave
pop
cmp
insl
sub
insl
je
pop
cmp
in
cmpsl
jns
mov
pop
and
sbbl
xchg
test
gs
pop
mov
test
jle
rclb
mov
mov
xor
test
xchg
mov
xor
bound
dec
pop
pop
dec
pop
cmp
cld
gs
ds
and
push
fwait
cltd
and
shl
out
sub
sub
fidivs
add
dec
cltd
sub
mov
mov
adc
popl
xor
push
cwtl
sbb
pop
outsl
pop
ret
incl
mov
and
mov
and
nop
dec
into
jnp
mov
fmulp
data16
andl
adc
mov
loop
jl
sbb
insb
pop
inc
fimuls
daa
fidivl
test
stc
cmp
mov
pop
or
addr16
lods
test
push
dec
jg
jo
cmp
sbb
aam
fstl
sub
repz
xor
adcb
cmp
xor
push
adc
cwtl
and
xchg
mov
and
mov
mov
push
cmpsl
add
lret
rclb
cmc
sbb
iret
xor
mov
stos
mov
xlat
cmp
xor
pop
xor
and
add
and
fnstenv
xor
sub
jnp
aam
sub
or
push
lods
lahf
dec
mov
inc
aaa
inc
enter
jmp
les
insl
sub
sahf
imul
xor
or
jp
jb
js
xchg
sbb
adc
jle
ja
mov
push
lret
mov
and
lss
data16
ljmp
xor
rol
idiv
inc
fadds
ret
ret
loop
add
je
inc
rcrl
ds
fbstp
sub
ljmp
mov
mov
add
shll
adc
ret
fldcw
lret
movsb
mov
fnstsw
aaa
push
add
push
mov
mov
clc
rcl
jnp
movsb
out
mov
push
xchg
fcoml
or
fisubrs
cmpsb
orb
test
push
in
outsb
add
cltd
or
jp
jl
loopne
mov
sub
dec
adc
lods
iret
and
es
fcomi
mov
pop
sub
mov
jne
add
push
pop
inc
xor
xor
fmuls
lds
ds
push
add
xchg
xorb
sub
pop
sub
jl
dec
dec
push
fcomi
addr16
cwtl
repnz
dec
repnz
or
daa
outsl
jmp
jnp
loopne
imul
mov
in
rcl
jl
cltd
mov
mov
in
mov
popl
or
fnstenv
xchg
faddl
push
jle
imul
fwait
lret
and
ror
out
xchg
test
lret
lret
arpl
jg
into
repnz
xor
xchg
xlat
mov
negl
push
adc
negl
and
call
iret
roll
xchg
out
mov
and
mov
xor
adc
cmc
mov
mov
mov
cmc
imul
pop
cwtl
xchg
jge
daa
push
cmp
xor
sub
ljmp
mov
ja
pop
fistl
or
daa
jae
mov
pop
mov
adc
sbb
lret
adc
clc
icebp
jp
pusha
les
push
jo
pop
and
pop
pop
movsl
jp
mov
push
sub
push
aam
cmp
xchg
mov
ret
andps
pop
lock
add
outsl
ds
jne
sar
push
ds
add
push
lea
mov
test
pop
rorb
stos
inc
sub
imul
rorb
fnstenv
repz
mov
jmp
and
je
and
sti
push
out
cwtl
sub
inc
cld
mov
test
xlat
test
je
int3
fidivs
stc
nop
jmp
add
mov
jno
ret
out
pop
pop
insb
mov
imul
xor
fistpll
pop
mov
loope
lds
dec
mov
mov
outsb
jle
nop
out
dec
add
shlb
push
xor
dec
repnz
cmp
xlat
call
xchg
cmp
dec
repnz
xchg
mov
sbb
iret
mov
es
movsl
push
ficomps
lods
cli
fnstsw
xor
std
cli
xchg
out
cmpl
in
mov
mov
cmp
loope
movsb
aas
push
inc
cmp
cmp
sub
mov
dec
push
mov
aam
in
in
scas
push
xchg
cmp
ret
pop
sub
mov
pop
jl
adc
jge
sub
pop
inc
mov
inc
sub
mov
inc
call
pop
scas
int3
fsubrs
iret
cld
jg
xchg
idivb
stc
clc
xchg
dec
out
cmc
push
jne
ror
cmp
push
push
jae
push
out
jl
outsl
bound
outsb
loope
or
mov
mov
push
clc
cmp
cs
xor
pop
inc
fdivs
sbb
scas
or
pop
imul
daa
fcmove
add
rcr
pop
cli
jg
xlat
jb
mov
stc
aaa
cwtl
les
jp
je
aas
mov
les
test
push
push
ja
or
out
adc
sub
push
je
dec
inc
bound
ret
pop
mov
cmpsb
pop
je
std
aam
xchg
loopne
mov
adc
mov
adc
add
push
sub
inc
sub
dec
movl
xor
pop
leave
mov
mov
jmp
inc
lahf
ss
dec
loope
xor
add
sbb
popf
movsb
outsl
push
lea
adc
test
push
mov
or
jl
mov
sbb
push
or
push
jle
cmp
and
icebp
pop
repz
gs
jp
dec
out
jb
in
test
and
mov
test
xchg
iret
xchg
inc
loopne
mov
jns
inc
out
insl
push
lcall
sahf
and
jmp
test
scas
inc
dec
adc
pop
add
test
lock
and
test
clc
shlb
popa
fidivrs
inc
pop
push
mov
push
dec
in
xor
mov
add
inc
out
pop
data16
cs
scas
nop
out
add
jle
jg
and
aam
jecxz
lcall
push
out
cmp
fprem1
dec
jmp
aad
push
fwait
rol
test
stos
inc
and
enter
ret
sub
imul
xchg
xchg
lods
or
sub
std
mov
fisttpl
or
push
scas
mov
adc
fsts
enter
lods
bound
ret
sbb
cltd
repnz
jmp
int
in
fwait
push
jmp
nop
pusha
popf
fs
aad
push
and
jo
push
decb
sub
jl
inc
dec
sbb
sahf
mov
pushf
mov
fwait
testl
nop
sbbl
and
test
arpl
movsl
aaa
inc
ljmp
jae
jae
cmp
push
mov
popl
pusha
fnsave
pop
nop
loope
icebp
pusha
fwait
xor
add
jp
rcrb
xor
mov
btr
xor
inc
outsb
cmpl
iret
or
test
push
mov
loop
sub
pop
scas
aam
ret
and
mov
les
scas
pop
icebp
mov
loope
add
imul
xor
jg
xchg
in
xchg
sub
cmp
cmp
call
cmpsl
cmp
cmp
stc
pop
sti
or
je
and
xchg
outsl
sbbb
pop
out
dec
hlt
cmp
jb
mov
fildl
loopne
ret
inc
fnstenv
imul
pop
xor
out
das
sar
push
int3
adc
jbe
jae
mov
scas
and
inc
iret
in
shll
push
add
mov
ljmp
mov
xlat
out
xchg
sbb
sbbl
jp
push
fsqrt
dec
out
cmc
iret
test
repnz
adc
sbb
push
push
outsb
adcl
das
ds
std
push
mov
jae
ret
sti
mov
out
jmp
cld
cmpsb
mov
mov
adc
xchg
sbb
push
mov
arpl
lods
ljmp
jmp
leave
mov
rorl
or
imul
in
mov
andb
es
jbe
std
cmpsl
jl
js
fcompl
mov
pop
sti
add
mov
push
mov
jne
dec
testb
mov
insl
shll
pop
push
repnz
jne
mov
sbb
test
push
sub
cmpsb
adc
cmp
jle
xor
push
aas
mov
pop
mov
mov
fs
inc
fs
setbe
aas
out
add
xchg
test
ds
in
mov
out
xchg
cmpsl
shrb
mov
in
imul
cmp
inc
dec
add
jb
mov
bound
out
sbb
sbb
sti
xchg
mov
lret
stos
sbb
push
mov
dec
nop
addr16
push
or
decb
jg
xchg
call
aaa
out
jbe
xchg
sub
imul
out
sbb
xchg
cmpsl
dec
ljmp
mov
stc
and
pop
lods
fcoms
aam
int3
shlb
xchg
cmpsl
neg
out
mov
lds
xor
and
ljmp
push
xlat
int
aad
lahf
mov
je
nop
outsb
das
inc
jl
insl
add
xchg
xchg
add
insb
inc
in
xchg
dec
mov
sahf
adc
mov
pop
pusha
int3
es
stc
cmpsl
mov
cwtl
push
movsl
xor
mov
sub
ljmp
insl
ja
test
dec
xor
mov
loopne
cwtl
xchg
lods
inc
xlat
jb
push
sub
xchg
pop
iret
hlt
into
out
ja
ror
pop
sub
dec
int
inc
out
jns
push
out
dec
push
sarb
loope
mov
outsl
cli
fidivl
dec
sbb
and
or
call
adc
sti
shrb
cltd
fidivl
shll
aas
std
pop
mov
cmpsb
or
jg,pn
imul
inc
jns
outsb
and
fcoml
sarl
xor
mov
or
push
mov
push
sbb
clc
mov
ds
pop
mov
filds
pop
dec
cmp
mov
push
xor
cmp
mov
dec
mov
into
gs
sti
in
pop
loope
adc
std
mov
push
jge
pop
cmp
inc
fdivrs
pop
test
test
adc
js
nop
xchg
test
sbb
jp
stos
stos
sub
call
push
jmp
pop
or
stos
push
popf
fldt
add
adcb
and
dec
inc
lret
mov
imul
adc
mov
out
pushf
scas
jp
cmp
subb
daa
xor
lcall
loope
mov
rcr
out
gs
or
mov
sub
lock
cli
lods
pushf
mov
ljmp
pusha
ljmp
mov
xchg
push
inc
xchg
psubsb
pop
push
fnsetpm(287
dec
or
adc
fiaddl
jg
sub
xor
add
jbe
inc
cld
es
xchg
pusha
inc
lds
jmp
pop
sbb
pop
mov
push
xorb
insl
int3
jmp
cmpsl
sbb
mov
ds
jno
mov
adc
xchg
scas
sub
and
mov
insb
inc
mov
rcl
push
jb
and
xorb
mov
add
fistpll
sub
je
pop
mov
call
clc
loop
movsb
cmp
add
imul
push
cmp
in
fisttpl
in
loop
push
add
dec
fcomip
movsb
std
push
pop
data16
dec
sti
push
mov
lods
sbb
jle
xor
lock
mov
test
xchg
xchg
add
out
jp
dec
rcll
pop
rorl
and
idivl
dec
imul
jmp
and
fsubr
mov
jmp
mov
and
shrb
push
repz
shl
add
jb
jle
cmp
sbb
xlat
mov
mov
jbe
outsl
mov
xchg
daa
dec
pop
or
pop
sub
inc
sbb
add
movsb
jno
jle
shll
andl
enter
insb
jg
test
mov
fidivrl
sarl
add
push
repz
insb
or
sbb
int
pop
lahf
jecxz
shlb
push
mov
test
insl
pop
aas
mov
test
loope
ss
xchg
out
sti
enter
sub
sub
fldcw
xchg
pop
pushf
imul
dec
imul
dec
or
mov
lds
mov
js
pushl
das
dec
cld
mov
stos
popa
dec
adc
push
sbb
dec
test
xor
outsb
mov
jl
xchg
xor
cltd
mov
push
jmp
stc
nop
lret
mov
mov
cli
cmpb
and
xchg
adc
lcall
adc
jg
and
mov
stos
loope
add
adc
dec
pop
pop
dec
mov
cli
sahf
mov
test
enter
outsb
cmp
xchg
insb
cmpsl
inc
jg
or
fimull
sti
test
push
sbb
cli
jae
clc
push
lock
incb
or
pop
rorb
test
sahf
sub
ret
xor
leave
outsb
xchg
push
mov
push
inc
dec
test
xor
add
fs
jmp
mov
or
mov
jge
dec
int
es
push
addb
scas
inc
xchg
add
lret
push
imul
fdivs
shrl
push
mov
scas
cmpl
enter
jmp
lret
push
in
cmp
xor
push
lds
inc
dec
dec
lock
imul
xor
mov
cmpsl
dec
and
pop
popa
lret
clc
aas
imul
ljmp
xor
add
mov
ja
pop
inc
test
pop
mov
cltd
cli
jecxz
stos
mov
cmp
cmpsl
popa
cmp
jbe
jbe
out
cmpl
test
cmp
subl
fldcw
repz
popa
xor
mov
imul
lods
jmp
lds
xor
imul
and
ret
mov
fistps
aaa
data16
fwait
pop
sahf
int3
push
fdivs
shll
mov
inc
fistl
mov
arpl
roll
push
inc
data16
adc
in
or
add
xchg
outsl
adcl
fwait
mov
add
jge
and
out
leave
sbb
ljmp
add
aad
or
subl
mov
and
fisubl
cs
lods
mov
scas
add
adcb
pop
xor
cwtl
mov
jmp
aaa
mov
imul
mov
cmpsb
lea
jbe
aam
loop
ja
fdivrl
sbb
scas
push
insl
xor
and
pop
or
out
lea
dec
pop
pop
xorl
ljmp
or
das
pop
hlt
jbe
insl
jge
sahf
xor
mov
pushf
dec
push
cmp
xor
jae
mov
and
dec
pop
lcall
cwtl
movsb
xor
add
push
cmpsb
cmpsb
rol
push
jp
loop
inc
dec
cmp
std
test
stos
test
jb
mov
cmc
pusha
fcmovnu
inc
ds
cmp
out
repnz
stos
adc
mov
loopne
xlat
add
sbb
mov
lcall
pop
movsl
loopne
mov
jecxz
test
aad
orb
daa
cmpsb
push
mov
cmp
xchg
push
in
sahf
cmp
aaa
movsb
pop
add
ret
outsl
push
inc
and
js
cmp
push
shl
fstpt
mov
imul
cltd
jb
aam
and
push
or
and
mov
inc
cmp
push
xor
dec
xlat
xchg
sbb
mov
push
fisttpll
dec
mov
dec
mov
mov
sbbb
and
aam
rol
adc
ret
ljmp
fld
fwait
add
xor
test
sbbl
fs
addr16
nop
jmp
lods
pushw
into
cmp
lret
xabort
adc
jmp
das
test
mov
push
adc
mov
es
sbb
or
mov
in
mov
leave
mov
mov
jmp
std
cltd
dec
repnz
in
dec
bound
dec
pop
pusha
sahf
xor
xor
jge
cmp
fdivrs
mov
sbb
rolb
add
inc
stc
scas
mov
sbb
mov
inc
inc
push
fcompl
ljmp
pop
sahf
lahf
ja
xchg
sub
sbb
mov
sarl
cli
adcb
jg
fistpl
sbb
es
mov
jno
popa
xor
inc
dec
mov
lods
lds
adc
ret
fnstsw
gs
mov
dec
sbb
arpl
fwait
add
in
sbb
adc
ds
cmc
fidivs
lcall
lods
jl
mov
cmp
stc
bound
ficoms
lcall
and
or
sbb
scas
jecxz
sbb
aaa
int3
mov
mov
add
pop
mov
loop
movsl
mov
mov
mov
mov
cmp
psubusw
mov
clc
data16
test
mov
hlt
mov
cld
add
fs
out
pop
cmpsl
jp
in
inc
push
mov
divb
pusha
sub
jbe
mov
mov
or
xchg
mov
rcll
xchg
mov
fcompp
enter
adc
and
and
sub
jmp
sub
push
push
mov
aad
sbb
xchg
mov
decl
ret
xchg
push
aaa
test
stc
adc
in
xor
stos
inc
test
lods
or
push
es
sti
mov
pop
cmp
testl
dec
dec
ret
mov
mov
sahf
bnd
stos
int
mov
mov
mov
negl
mov
jo
xchg
xlat
outsb
mov
push
cmc
push
fnstcw
sti
outsl
add
mov
sub
xchg
xlat
jo
popa
test
cmc
ds
sti
nop
push
xchg
imulb
insl
mov
enter
stc
outsb
pop
mov
mov
mov
cmpsl
and
es
lods
dec
xchg
adc
shl
dec
cmc
sbb
mov
sbb
call
int3
rcrl
mov
ret
jbe
jge
les
jge
je
into
xchg
popa
add
in
mov
lahf
sub
pop
pop
push
clc
loope
push
push
inc
sbbl
bound
dec
mov
push
shr
inc
cmp
cwtl
mov
popf
push
inc
adc
mov
and
popf
cltd
add
sti
ljmp
cmpsl
adc
or
pop
xor
sbb
fucomp
hlt
inc
xchg
aas
jecxz
lcall
or
andnps
imul
sbb
and
mov
sti
in
dec
add
insb
adc
xrelease
jns
mov
stos
sub
mov
mov
xchg
mov
push
jg
add
and
mov
lock
and
xchg
mov
sbb
sahf
xor
fldt
xor
andl
das
xchg
movsb
cmp
mov
cs
cli
fwait
sub
adc
stos
sbb
int
shrb
daa
push
icebp
xchg
lods
mov
xchg
shlb
cmpl
xchg
testl
push
mov
cmp
aas
or
fdivrl
lahf
loop
pusha
out
xor
ja
loopne
fldl
insb
jl
cmp
or
test
xchg
aas
fisttpll
adc
sbb
iret
dec
push
xchg
jp
cmp
cmc
jecxz
insl
dec
or
pop
jl
test
fdivl
jmp
in
repnz
push
pop
sbb
sub
bound
pushf
lock
scas
pop
div
mov
cltd
rcr
pushf
mov
cmc
fs
mov
jb
xchg
sub
test
enter
cmpsb
iret
int3
sub
fs
repz
subb
and
xor
add
mov
xchg
scas
add
mov
loop
loope
les
dec
lods
ja
cmp
scas
jg
mov
and
and
pcmpgtd
pushl
or
ja
arpl
add
pusha
add
mov
cltd
std
or
gs
lods
mov
sbb
xchg
js
jmp
into
inc
addl
scas
in
ror
jb
or
pusha
loop
cmp
je
movsb
ds
loopne
xchg
lret
jg
push
popf
sbb
cmpsb
int
pop
mov
outsb
gs
mov
jb
cmc
or
xchg
cmp
xchg
inc
insb
js
sub
imul
lock
rorl
rcr
lods
jo
jge
in
push
inc
in
mov
or
dec
jno
pusha
subb
stc
mov
lret
or
in
jmp
gs
dec
and
or
notl
mov
inc
xor
add
sub
or
jmp
jbe
inc
pusha
lcall
cmp
xor
out
jmp
ret
dec
or
add
les
icebp
sbb
stc
sub
pop
sarb
and
cmp
fidivs
and
pushf
jae
enter
es
sbb
adc
imul
add
mov
fwait
add
xor
scas
mov
xchg
sbb
adc
sbb
ret
sub
pop
mov
fldpi
stc
ret
lods
fdivrs
or
jg
pop
addr16
adc
orl
pop
nop
cs
je
out
in
xor
insl
lahf
ljmp
lock
pushf
int
dec
scas
push
dec
in
leave
jle
je
cmp
mov
mov
jnp
call
aad
outsl
scas
mov
lds
push
inc
dec
and
jg
cmpl
sbb
cmc
fwait
mov
or
stos
mov
adc
fxch
adc
dec
jb
xlat
outsb
push
mov
mov
in
cmp
lds
xchg
daa
mov
vcmpss
lock
mov
pop
mov
mov
jno
xor
daa
xchg
lods
push
push
icebp
into
inc
inc
push
and
addr16
fcmovnbe
imul
ret
scas
jb
loop
lret
pushl
fdivs
jo
mov
adc
mov
dec
push
shl
sbb
roll
cmp
cmc
out
jb
or
in
mov
mov
inc
push
xchg
enter
and
mov
stos
cmpb
add
or
lods
jb
mov
and
sub
fs
and
xchg
clc
icebp
and
push
push
or
into
cmpsb
std
adc
dec
out
cmp
xchg
ljmp
adc
sbb
sub
aad
sarl
cmp
int3
mov
pusha
into
mov
lea
enter
add
inc
pop
add
xchg
dec
popf
sbb
mov
pop
adc
xor
sbbb
pop
cld
and
inc
push
xchg
inc
setno
mov
mov
ret
flds
cmpsb
cs
stos
testb
inc
mov
jb
sub
or
xchg
rcr
cmp
cmpsl
adc
xor
lea
sbb
data16
adc
js
std
outsb
add
adc
aam
cmp
roll
or
pop
push
sub
inc
data16
shrl
rcrl
adc
scas
lret
pop
sahf
or
arpl
mov
incb
pop
icebp
inc
or
mov
stos
daa
cmp
pop
pushl
xor
push
jecxz
pushf
mov
dec
sbbb
jno
test
adc
mov
inc
sub
add
pop
add
mov
inc
add
test
ljmp
sbb
mov
push
fwait
or
sub
add
mov
pop
cltd
pop
or
mov
push
xchg
ret
inc
rcll
je
mov
xchg
sbb
push
xorb
mov
push
insb
frstor
mov
sub
and
sub
adc
iret
jp
cs
adcl
enter
movsl
mov
xchg
in
js
test
mov
add
stos
jg
xlat
scas
das
iret
and
aaa
mov
jg
jmp
idivl
mov
cmp
xor
xchg
xor
je
or
mov
sbb
dec
insl
sti
push
xchg
jle
movsb
cmp
and
and
and
mov
or
inc
mov
sarl
jecxz
pop
pop
js
inc
cmp
loopne
pop
mov
xchg
sbb
sti
pop
outsb
add
out
xlat
add
test
idivb
in
insb
push
mov
push
movsl
or
icebp
mov
int
aam
pop
dec
pcmpgtw
xor
scas
fdivl
lds
notb
in
push
lret
js
push
scas
jno
aas
add
call
mov
jmp
test
sbb
xchg
mov
or
xchg
add
js
mov
test
loope
xchg
pushf
or
pop
add
mov
adc
mov
mov
popaw
fs
rcll
mov
mov
call
cld
scas
mov
xor
pop
mov
sahf
js
pop
jg
push
mov
in
or
push
inc
daa
inc
movsl
data16
test
xchg
sub
add
daa
test
mov
inc
fiadds
xor
in
fwait
dec
ds
stc
repnz
pop
cmp
pop
stos
into
dec
pop
je
xor
dec
lods
mov
hlt
mov
sahf
out
adc
std
or
xchg
jl
and
mov
cmp
cltd
add
aas
push
call
out
pop
popf
xchg
nop
in
sti
adc
stos
cmpb
jo
mov
mov
aad
arpl
mov
mov
shl
pop
mov
mov
int
pop
fdivrl
mov
sub
addr16
lds
lcall
mov
cmp
mov
mov
pop
outsb
dec
mov
sub
jp
int3
arpl
cmpsl
jno
add
jmp
iret
cltd
sbb
rcr
cmc
push
faddl
xchg
mov
add
shll
add
sub
cmp
adc
mov
outsl
sub
cwtl
jecxz
pushf
clc
in
shrl
sahf
and
std
cld
cltd
mov
jp
mov
mov
cmp
repnz
test
jns
imul
or
xor
outsb
cmp
cmpsl
add
data16
xorl
jp
shll
lea
mov
in
test
adc
sbb
dec
js
aam
cmpsl
mov
sbb
add
push
xor
mov
movsl
jl
aam
sub
jle
mov
inc
push
jnp
movb
aas
sarb
push
pop
nop
loop,pn
repnz
pop
push
mov
sub
lock
movsl
clc
scas
inc
rolb
push
mov
leave
lea
pop
add
dec
adc
dec
outsb
dec
dec
ret
icebp
mov
fs
addr16
outsl
scas
cmp
sub
xor
cmp
ljmp
dec
insb
dec
add
push
mov
mov
mov
sti
cmp
rolb
sbbl
jns
imul
push
lock
jns
xlat
dec
ja
orb
mov
shll
pop
arpl
lods
je
xchg
sti
xchg
daa
adc
movsb
and
popa
mov
mov
add
inc
mov
mov
fsubs
mov
lahf
out
shrb
ds
pop
pop
jbe
push
mov
jns
vmovhps
xchg
je
lret
fisttps
rcr
inc
xlat
in
stos
sbb
push
pop
shll
pusha
fbld
push
adc
nop
pusha
mov
mov
stc
inc
gs
enter
arpl
sub
push
mov
sub
arpl
lods
jg
push
or
and
xorb
aas
lahf
std
aam
das
mov
jmp
sbb
xchg
push
or
cmp
lods
ja
pop
pop
mov
aaa
or
pop
sti
xor
pop
push
aad
pop
nop
and
in
sub
mov
push
pop
lods
sbb
push
stos
cmp
dec
mov
pop
ja
insb
shlb
iret
pcmpgtb
fucomi
sti
mov
push
xchg
or
mov
dec
jmp
aaa
jecxz
sub
insb
sub
loop
ffree
sub
inc
jp
jno
out
orl
imul
dec
loope
jns
and
addr16
dec
jp
xorl
xchg
and
test
gs
fldl2e
mov
dec
pop
movsb
mov
fisubrs
mov
lahf
jbe
call
jl
xchg
nop
add
mov
ds
jo
mov
clc
sbb
lods
fs
and
sub
or
frstor
or
and
lods
or
cmpsb
mov
iret
pop
cmp
and
shlb
jo
fdivl
div
mov
add
jae
push
mov
xchg
fnstsw
rorl
adc
int
push
lds
mov
mov
push
jo
adc
test
mov
cmp
ja
dec
aas
push
and
jl
mov
arpl
jge
cwtl
insl
pop
popf
sbb
inc
jnp
xor
andb
and
mov
testb
out
sahf
aas
stc
icebp
xchg
cmc
aaa
push
ret
filds
mov
je
in
lret
adc
and
test
orb
add
sub
jmp
mov
xchg
test
jb
sub
jne
inc
idivl
js
imul
into
add
sub
lahf
imul
aas
and
out
push
jecxz
xor
push
fsubs
inc
leave
sub
mov
push
aam
lea
mov
fdivr
xchg
dec
sbb
pop
fidivrl
leave
dec
inc
or
mov
xlat
xchg
lret
or
dec
loopne
lock
sbb
lret
cmp
jns
ja
xor
fsubrs
pop
add
sbb
and
adc
fists
fistpl
push
jl
jmp
bound
lods
ljmp
pushf
or
cwtl
ret
rcrl
jg
and
jle
jg
push
iret
and
sbb
jnp
fs
adc
add
sahf
sti
call
sub
cld
inc
add
ljmp
jmp
xchg
lods
fwait
in
stos
mov
gs
cltd
out
xchg
push
mov
scas
inc
loope
xor
cmp
jns
dec
jecxz
cmp
cmp
aas
out
sub
jmp
in
insb
add
adc
mov
aas
divb
dec
inc
popa
jp
les
stos
mov
sti
pop
outsb
loopne
into
fsub
aam
sbb
pop
cmpsb
jp
jg
in
cmpsb
icebp
dec
pop
pop
cmp
mov
xorb
ret
jmp
lds
loope
xchg
sub
jo
loopne
mov
xlat
jne
lahf
jnp
sub
int
adc
in
repnz
or
aam
push
popf
mov
jnp
jb
jl
or
hlt
adc
sub
or
or
mov
mov
cwtl
dec
imul
jnp
mov
and
xor
out
test
jg
out
push
das
jle
aas
mov
test
outsl
nop
std
sbb
or
sub
mov
add
add
gs
pop
cmp
xor
and
xchg
cli
add
add
push
jge
sbbb
adc
or
sub
shrl
add
lock
call
in
sbb
lret
mov
aaa
fs
xchg
xchg
push
in
dec
cmp
sti
repnz
loop
ret
or
fmuls
mov
enter
mov
jbe
cwtl
imul
xor
adc
outsb
jmp
stos
cmpsb
xor
jg
cwtl
mov
inc
fwait
add
int3
filds
sub
mov
ret
test
xchg
mov
mov
xchg
lds
std
cmp
test
lock
push
mov
mov
aam
fcomip
loope
mov
daa
mov
mov
add
shlb
and
aaa
test
push
outsb
and
adc
sahf
ja
lock
or
loopne
ja
out
jge
inc
mov
xchg
mov
add
fadds
ret
cld
inc
xchg
xor
idiv
mov
cli
cmpsb
es
in
or
stos
mov
inc
das
js
cmp
ret
jle
xor
xor
xchg
sti
mov
inc
clc
mov
popf
push
ret
mov
sbb
lahf
and
inc
dec
lahf
xchg
inc
iret
dec
adcl
lods
fisubrl
sub
dec
xchg
sbb
aad
stc
pop
cmpsl
in
adc
pop
scas
adc
inc
shl
lahf
dec
jmp
dec
push
sbb
xchg
test
lods
cld
and
xor
loop
push
aad
mov
mov
lcall
cmpsb
xor
dec
jb
dec
sti
xchg
jecxz
lahf
inc
in
mov
daa
mov
rorl
adc
negl
mov
out
push
insl
es
dec
jmp
add
mov
cld
cmp
mov
mov
testb
je
inc
in
shr
pop
fistpl
dec
addr16
mov
popf
jl
jnp
aaa
pop
inc
in
push
inc
ret
jae
lret
push
aas
push
call
push
shl
imul
in
mov
incl
mov
cmc
gs
out
push
jne
inc
sub
ljmp
push
int
aam
ja
loopne
negl
adc
jl
jmp
cmp
ror
ja
and
xchg
aas
movsb
addr16
in
ljmp
jno
push
out
loop
je
mov
xor
cwtl
push
movsb
lds
rcrl
mov
inc
out
les
adc
inc
push
cmp
pop
xchg
xchg
xor
in
adc
sub
jecxz
repnz
mov
les
into
add
xor
int3
fsubrp
push
xchg
dec
mov
jp
jne
sbb
andl
and
out
add
aaa
and
cmp
popa
jp
sbbb
call
pushf
push
imul
out
jge
outsl
sbb
les
and
arpl
xor
and
dec
lret
mov
xchg
div
cmp
push
xor
pushf
lahf
xchg
sbb
sub
aad
jg
xchg
sbb
inc
dec
mov
jbe
jle
mov
outsb
daa
jl
mov
movsb
pop
mov
xchg
out
fmul
addr16
das
addr16
xchg
sub
es
loope
lahf
sub
push
cld
pop
fsubs
test
cmpl
test
lods
or
push
xor
mov
daa
out
mov
xor
subb
fistl
std
add
cmp
push
jo
pop
xlat
sub
mov
pop
icebp
xchg
xchg
mov
icebp
sbb
pop
jle
push
cmp
aam
and
xor
int
xor
rcl
stc
pushf
and
jno
shll
cmpsb
jbe
leave
lods
xlat
sbb
or
jae
jp
testl
or
jmp
jae
std
mulb
or
jae
sub
inc
outsl
add
xchg
push
fistpl
rolb
in
mov
or
rol
arpl
pop
shlb
inc
shlb
mov
dec
pop
ja
add
nop
mov
scas
jp
jge
cli
sahf
lock
mov
jns
pushf
xor
sbb
stos
mov
jnp
mov
jle
jo
sbb
push
in
fcompl
and
mov
mov
or
adc
xchg
hlt
test
js
jmp
jbe
xchg
test
mov
cld
xchg
adc
inc
or
test
jp
cltd
mov
sbb
add
add
inc
xchg
mov
mov
add
roll
mov
jae
pop
mov
push
lods
cli
lret
pop
xor
mov
outsl
jmp
add
or
imul
inc
inc
pop
push
fcomps
jmp
xor
push
nop
mov
mov
push
mov
aaa
mov
sti
dec
push
repnz
xor
and
jle
mov
cltd
mov
add
andb
add
push
or
stc
sbb
mov
add
fists
imul
push
and
jecxz
jne
xchg
in
cmp
ror
repnz
or
xchg
pop
and
sbb
adc
push
fdivl
or
sub
add
mov
xchg
fs
pop
sbb
pop
mov
xlat
loopne
andl
mov
jns
out
add
sahf
mov
lods
pop
sub
cmpsl
add
fmuls
xchg
out
popf
into
add
pop
lds
mov
mov
ret
inc
push
inc
sub
jp
mov
pop
pusha
jb
cmpsl
or
or
jo
cmp
nop
sbb
jb
or
lods
pop
mov
data16
cwtl
pop
lahf
add
add
dec
bnd
jge
xchg
push
mov
pop
in
sub
scas
divl
fiadds
out
add
mov
lret
shl
fsubl
cmp
and
jnp
sbb
pop
cmc
mov
jnp
adc
loopne
pop
call
or
aam
and
push
pop
xor
xor
pop
add
cltd
loopew
and
push
aas
and
stos
cmp
inc
out
lret
icebp
push
jno
movsl
adc
mov
dec
outsl
xor
cmp
jmp
cmp
and
movb
sti
mov
mov
faddl
popf
add
pop
xor
mov
cmp
lea
cmp
push
js
popf
out
iret
popl
dec
ffreep
bound
aaa
cmpsb
divps
inc
push
adc
pop
or
mov
into
ds
cltd
mov
sbb
mov
loopne
popa
push
repz
push
inc
push
fisubs
cwtl
fisubl
pop
scas
sub
jns
push
lcall
fwait
shlb
jge
addr16
xchg
sti
add
add
stos
in
ljmp
clc
pop
mov
mov
cltd
outsl
loop
pop
push
pop
push
pop
jp
mov
push
into
cmp
ds
jmp
and
ret
sub
cmp
inc
fisubrs
gs
and
mov
clc
bound
adc
in
sbb
pop
add
cmpsb
mov
pusha
sub
cwtl
imul
jmp
mov
push
ficoml
in
test
mov
jno
stc
lods
ljmp
es
sbb
add
dec
orb
notb
rorl
in
dec
nop
fistpl
mov
ret
pop
stos
xor
loope
or
xor
loopne
roll
loope
push
mov
dec
dec
push
adc
je
lods
dec
loope
jno
cmp
xchg
lock
addl
sbb
rcrb
sub
mov
repz
mov
shrb
imul
loope
dec
aaa
xchg
add
inc
add
xchg
jp
adc
lds
xchg
inc
cld
push
or
push
shll
mov
stos
inc
fmuls
pop
imul
in
ljmp
int
jns
mov
lds
push
mov
add
popa
xor
pop
ret
fwait
das
xor
add
and
sbbl
mov
jge
cmpsb
sbb
lods
jg
or
xchg
push
outsl
outsl
mov
lret
xchg
lods
outsl
test
inc
rolb
rcrl
lods
push
mov
dec
mov
scas
shl
dec
loop
call
adc
loope
adc
fneni(8087
lahf
mov
popa
iret
xor
and
data16
iret
xchg
jmp
inc
lret
jb
and
cmpsl
test
cmp
shll
mov
push
aad
out
xchg
xor
mov
jp
push
xchg
xchg
pop
jmp
sbb
ficoms
aad
push
mov
mov
leave
xor
or
cwtl
dec
dec
test
mov
adc
aaa
popa
or
adc
jg
adc
int
cmp
inc
cld
mov
dec
aaa
int3
push
push
subl
into
push
mov
stc
je
addr16
xchg
inc
mov
mov
and
jo
lock
jb
mov
dec
enter
je
mov
les
cmp
loopne
dec
ds
inc
push
in
mov
pop
icebp
call
mov
jl
out
add
xchg
lods
sub
insb
mov
jo
inc
into
scas
mov
bound
sub
int
xchg
ljmp
mov
xchg
jne
adc
hlt
adc
loope
adc
outsl
inc
xchg
push
adc
mov
jo
or
dec
subb
or
popf
test
lret
sti
push
dec
push
mov
jmp
pmaddwd
fisubl
mov
jmp
jbe
adc
cs
or
rcr
insl
andl
xlat
daa
stc
inc
and
iret
and
add
mov
lret
icebp
bound
lret
frstor
cs
and
mov
ljmp
in
outsb
out
jb
out
pop
sub
hlt
inc
int
lock
daa
mov
pop
repnz
cmp
out
pusha
gs
out
mov
sbb
into
popa
fmull
cmp
ljmp
mov
stc
sub
adc
mov
lds
jo
dec
push
xchg
fisubs
gs
cmpsl
push
dec
mov
push
out
inc
dec
xor
mull
mov
fistl
lea
popa
adc
xchg
clc
push
sub
sub
jb
cmp
clc
mov
shll
mov
shrb
xor
out
xchg
ret
lret
popl
add
push
insb
xchg
pop
cmp
cmc
mov
mov
adc
jae
cmp
leave
sbb
inc
lock
imul
mov
je
ds
cmc
scas
and
or
xchg
dec
mov
and
insb
sub
pushf
mov
imul
lods
push
mov
ret
pop
int
sbb
idivb
ds
cmc
out
movsb
cmp
int
ja
hlt
cmp
sbb
popa
adc
cmp
js
test
into
xchg
add
shrb
cmc
mov
lcall
sub
pop
cmp
stos
les
sahf
loope
int3
arpl
xchg
std
setne
cmpl
dec
stos
xchg
push
lret
or
push
mov
inc
jge
into
scas
sahf
into
enter
and
xor
fnsetpm(287
stos
mov
adc
or
push
fldt
mov
xchg
mov
fstpl
sub
cli
sti
adc
test
dec
mov
mov
mov
nop
push
inc
nop
push
aad
dec
xchg
in
sbbb
pop
push
inc
xabort
jle
aad
dec
pusha
mov
les
cli
mov
push
push
xor
inc
push
inc
push
lea
js
mov
ss
mov
dec
mov
pop
repnz
add
mov
sbb
ret
sbb
adc
xchg
out
and
xchg
mov
arpl
jbe
sbb
jo
mov
xor
and
or
xchg
mov
fistpl
jl
sbb
push
aas
push
icebp
sbb
fcoml
outsb
sbb
insb
out
inc
in
xor
sbb
push
xor
xor
lea
aaa
test
testl
cmp
stc
shrl
out
jbe
lods
add
push
data16
ret
push
rcll
imul
mov
das
les
out
inc
out
mov
neg
imul
cmp
xchg
lods
inc
sub
mov
mov
outsl
inc
lcall
and
int3
adc
cmp
xor
imul
dec
repnz
test
test
call
inc
bound
lods
mov
and
cmc
fadd
enter
daa
xor
in
mov
out
mov
sub
mov
mov
and
mov
or
aas
mov
cmp
incb
mov
shlb
clc
and
daa
sbb
fwait
into
repnz
ret
pop
or
popa
pop
push
push
adc
jmp
scas
jno
rcr
xor
rcrl
repnz
sti
pop
adc
pop
add
mov
push
xchg
enter
sbb
aas
xchg
dec
test
cmc
punpcklbw
mov
das
push
jae
int3
cmp
jae
scas
push
aaa
loopne
out
dec
in
xchg
ja
stc
cmp
cwtl
sbb
call
les
cmp
fisubl
pop
shrl
push
add
or
movsl
scas
or
or
and
mov
test
and
xchg
lea
inc
push
cmp
test
dec
loop
daa
pop
rclb
push
insb
push
ds
test
mov
mov
jp
std
add
into
sub
clc
adc
shrb
jns
les
imul
int
in
push
gs
repnz
push
fs
xchg
xchg
mov
or
xchg
shll
mov
scas
ret
jb
and
test
scas
movl
int3
outsl
adc
mov
and
xchg
dec
cmp
int
loop
loopne
stos
mov
adc
dec
inc
fcomip
insl
fstp
mov
mov
clc
xchg
cwtl
adc
lea
mov
push
mov
js
shll
ds
and
or
pop
dec
sahf
imul
lods
cs
cmp
adc
sub
loop
inc
fisttpll
stc
mov
push
bound
hlt
xchg
fsubs
mov
xor
pop
add
test
dec
add
insl
popa
shll
pop
pop
mov
fisttps
jecxz
test
dec
dec
out
rclb
cmp
cmc
hlt
pushf
dec
loop
push
add
fldcw
jge
fwait
xor
fwait
out
add
out
in
test
out
jmp
push
in
inc
in
cli
lods
xchg
cmp
pushf
mov
xchg
ja
mov
jp
pop
mov
xchg
movsl
mov
pop
cmpsb
or
loopne
push
mov
in
mov
pop
insl
mov
data16
jg
mov
movsl
xorps
ljmp
or
ss
xor
sti
js
cmp
fwait
outsl
rcrb
in
iret
push
cmc
shr
dec
sub
addl
out
mov
notl
or
cmp
push
ret
lods
dec
test
stos
repnz
pop
jmp
add
dec
pop
cld
dec
out
cmpsl
jge
in
aam
sbb
aad
nop
jnp
shll
cmp
or
adc
shr
pop
xor
mov
dec
loopne
loop
sub
stos
shll
sahf
outsb
mov
sbb
fistl
jle
mov
add
sub
lods
cmp
or
and
testl
ds
cmp
popf
lods
jnp
js
fs
fisttpl
adc
fucom
and
pop
jae
cmp
pop
loop
dec
jl
xchg
shlb
ds
xor
mov
xor
loopne
push
cltd
mov
push
sti
mov
cmp
call
cmp
bnd
inc
and
lret
ror
ss
cwtl
mov
mov
mov
addb
mov
mov
or
ljmp
insl
mov
pop
fistps
mov
push
movsl
sbb
std
add
cmp
mov
out
inc
or
cltd
jmp
xor
addb
inc
arpl
and
mov
call
sti
xchg
scas
daa
inc
push
cmovbe
lock
int
repnz
ja
pop
adc
push
adc
dec
dec
jecxz
mov
imulb
xchg
mov
and
push
stos
fidivl
shlb
divl
sbb
mov
std
cltd
sub
xchg
adc
in
test
inc
int
jecxz
addr16
push
test
jge
inc
dec
fstpt
lods
pop
sub
cmp
add
movb
cmp
xchg
addb
sbb
sbb
popa
mov
sbb
data16
notl
jb
adc
in
shll
or
xchg
fisubs
push
adc
cltd
and
fsubr
cwtl
pop
inc
mov
je
jp
pop
xchg
insb
popa
inc
jge
jmp
arpl
or
inc
adc
or
mov
adc
xchg
pop
stos
mov
xchg
stos
push
sbb
dec
in
jmp
outsb
test
add
and
xor
mov
push
xchg
scas
test
xchg
pushf
adc
jle
stos
repz
sbb
pop
dec
jp
sahf
xchg
jne
imul
and
pop
add
xchg
loopne
mov
fdiv
xchg
rcll
imul
mov
fsubrp
ljmp
cs
js
xlat
and
push
mov
and
popa
xchg
mov
roll
mov
xchg
pusha
flds
xchg
sti
inc
es
jl
inc
bound
mov
cmpsb
adc
cld
xchg
add
in
adc
or
es
insb
ffree
jle
jge
sbb
div
nop
daa
daa
sbb
scas
addr16
scas
pop
out
mov
loop
sub
fnstenv
loop
xlat
cmp
inc
push
cmp
cmp
push
es
outsl
sub
adc
push
jle
in
xor
test
in
test
sub
dec
stos
xchg
fcmovbe
lea
mov
ljmp
mov
dec
xor
call
divl
pop
scas
enter
lret
mov
pusha
push
leave
adc
shrb
in
cmp
mov
jnp
mov
out
or
inc
push
lea
pop
cmc
lahf
loop
insl
fwait
in
sub
or
lock
lcall
inc
loope
push
pushf
repz
subl
sbb
pushf
lds
or
lds
and
adc
lock
xor
adc
aaa
ja
and
int3
test
test
push
push
xor
sub
subb
mov
insb
mov
imul
adc
sbb
rcrb
inc
cmp
mov
jbe
dec
cmpsb
pop
outsl
push
pop
fstl
lcall
pop
addl
daa
aad
mov
jnp
cmpsb
push
and
mov
mov
cmpsl
repz
dec
add
pop
adc
ret
push
movsl
fldcw
and
xor
es
rep
fistps
jbe
push
loop
js
ljmp
roll
mov
aaa
rolb
or
lret
mov
jno
or
fmull
adc
fsts
push
loope
push
mov
push
pop
aam
jecxz
push
repnz
out
lret
rol
sarb
jl
add
outsl
and
mov
das
adc
jae
dec
std
cmp
repnz
out
lea
mov
popf
cmp
push
or
dec
clc
pop
in
and
sbb
mov
cs
insl
in
into
mov
jbe
mov
adc
jle
stos
xchg
idivl
sub
popf
sub
iret
sbb
and
and
jle
dec
mov
mov
push
cltd
xchg
ds
stos
jno
pushf
mov
push
sbb
mov
push
or
fadds
lcall
test
mov
iret
and
lea
ss
push
insb
das
into
add
jno
leave
mov
cmpsl
cmp
pop
and
mov
test
shll
int3
lcall
aaa
mov
push
mov
gs
add
pop
pop
addr16
ja
xchg
testb
jmp
sbb
es
sbb
aaa
cmpsl
adc
dec
je
jl
das
enter
js
divb
xchg
dec
xchg
xchg
repnz
inc
dec
jecxz
dec
mov
dec
dec
cmpsl
jp
mov
lods
push
cmp
mov
sbb
dec
xchg
xchg
push
jno
dec
enter
outsb
jle
xchg
jl
jo
mov
xor
fwait
push
lret
outsb
pop
mov
mov
imul
ljmp
cmp
out
mov
mov
and
arpl
lret
mov
xchg
sti
or
mov
add
lret
mov
dec
xchg
adc
jnp
dec
repnz
aas
adc
jp
mov
loop
outsl
in
dec
adc
stos
ds
out
sbb
xor
popf
js
fs
or
cmp
add
cmp
mov
and
ljmp
push
cmc
mov
es
add
pushf
push
nop
cld
fbld
cmpsb
sbb
inc
div
cmp
arpl
push
into
lahf
cmc
mov
and
ret
jne
cmp
mov
cs
inc
xacquire
stos
jp
jae
dec
pop
int3
lods
adc
outsb
decl
dec
push
mov
mov
aad
inc
fmuls
call
out
bound
sub
mov
cmp
inc
pop
std
mov
insl
mov
imul
push
or
inc
pop
cmp
add
cmp
inc
cld
pop
stc
and
push
sbb
imul
sub
cwtl
out
cmp
jle
mov
mov
sub
cltd
sbb
inc
push
insb
sub
cmp
xchg
adc
sub
cmpsb
sbb
lds
sahf
pop
ret
pop
lahf
jno
xchg
test
rcr
add
das
add
fisttps
xchg
jg
dec
pop
cmp
mov
movb
test
ja
mov
es
out
test
int
testb
sbb
fwait
rol
sbb
add
out
sbb
add
shlb
pop
jne
scas
cmp
push
in
cltd
sub
mov
xchg
mov
adc
or
test
stc
xor
pop
xor
pop
lret
int3
xor
dec
outsl
daa
push
jo
xchg
lcall
mov
push
ror
ret
in
cmp
push
mov
pop
icebp
popf
xchg
xor
scas
jae
and
pop
push
dec
lds
push
mov
fists
push
fdivrl
lock
scas
push
loopne
js
adc
push
icebp
mov
mov
cmp
jae
push
lcall
dec
mov
lcall
cmp
inc
imul
xor
test
mov
aam
pop
lods
andb
sub
add
dec
test
dec
sub
fcompl
xor
movsb
rcll
mov
jb
out
pop
ja
cmpsl
push
insl
add
mov
out
mov
sbb
inc
push
cmp
gs
in
add
or
lret
and
cmp
call
sbb
mov
mov
fs
adc
icebp
adc
out
pop
mov
mov
andl
push
pop
and
or
inc
ffree
sub
data16
pop
mov
arpl
inc
arpl
mov
cmp
mov
mov
xor
pop
fwait
andb
inc
mov
add
sbb
push
jne
jg
shlb
sub
repnz
cmc
mov
sub
jg
xor
mov
and
test
add
pop
mov
mov
es
pop
aad
jp
and
xchg
sbbb
cwtl
les
push
mov
lds
jl
adc
pop
enter
cld
pop
fstl
mov
ret
call
jge
mov
xchg
pop
cwtl
or
xor
fldl
mov
test
push
xor
add
jne
notb
pop
out
cld
cmp
orl
mov
addr16
jbe
je
xchg
and
pop
xchg
mul
mov
outsl
add
std
test
mov
add
sub
cld
in
outsb
jb
mov
or
insb
sub
adc
into
cmp
jno
dec
jno
add
fdivl
into
dec
insl
mov
dec
ss
mov
cmp
adc
sbb
orb
push
imul
push
daa
lcall
popa
int
xor
and
cmc
cmpsb
xor
test
inc
sahf
leave
or
mov
int3
sub
xor
pusha
mov
push
mov
xor
sbb
mov
in
test
fwait
sub
js
sub
mov
add
rclb
cmp
jbe
ja
popl
sbb
loope
push
jae
xor
xor
bound
xor
gs
in
repz
pop
and
in
fnstenv
dec
mov
mov
sbb
xchg
stos
jns
iret
cmp
and
push
jno
xchg
hlt
adc
in
ds
sbb
rorl
mov
fst
inc
sahf
mov
pop
fstps
inc
adc
je
push
push
mov
adc
ja
testl
mov
dec
push
dec
outsb
cmpsb
or
xchg
cmp
in
xor
repnz
addr16
jbe
insb
cmp
adc
inc
mov
test
fstpt
mov
mov
je
pushf
push
addr16
push
sub
repnz
xor
mov
cmpl
into
cmp
call
lock
mov
notb
xor
xchg
jmp
mov
push
push
arpl
lds
icebp
ljmp
rcl
mov
inc
mov
inc
movsb
cmp
push
lea
sub
scas
jbe
lret
sbb
dec
fistpl
loop
je
fsubrs
add
je
int
imul
add
xor
cltd
xor
outsl
nop
dec
mov
push
cmpsb
push
aam
test
es
xchg
jns
cli
xchg
lcall
sub
shll
or
or
jnp
data16
sarb
mov
into
and
movsl
push
lods
inc
test
and
repnz
into
gs
clc
int
cmc
inc
cwtl
stos
jno
pushf
ss
je
jg
inc
jnp
mov
or
jo
aad
pop
daa
ret
pop
adc
mov
jo
ds
jne
mov
mov
push
pop
add
shlb
push
subl
stos
cmp
mov
cmpsl
lret
dec
in
loope
xor
dec
shll
xor
movsb
dec
cmpb
pop
subl
sub
pop
sub
out
push
in
sarl
pop
test
xlat
mov
or
dec
add
push
cmpsb
aad
xchg
pop
adc
add
lock
ja
mov
fsubrl
add
and
mov
xchg
adc
loop
rorb
xor
adc
mov
jl
mov
int
xchg
ljmp
add
daa
jle
or
subl
ss
inc
xlat
imul
jns
mov
lcall
xchg
sar
out
xor
sar
xchg
add
shl
inc
lahf
mov
lea
xchg
lret
neg
mov
push
sub
and
jge
add
push
test
dec
adc
jecxz
data16
ror
xor
push
into
xchg
pop
jae
push
sub
dec
mov
das
jle
imul
push
cmc
aam
mov
adc
lods
es
jae
or
lods
pop
xchg
jg
out
sbb
adc
movsl
jb
xlat
or
mov
xlat
gs
jb
xor
cwtl
sub
fsubrl
in
cmp
pushf
mov
cmpl
sbb
xchg
outsb
aas
add
xchg
push
test
dec
inc
lock
inc
outsb
repz
jl
push
and
popf
jl
cmp
mov
xchg
scas
adc
loope
ret
jle
mov
int3
mov
cwtl
lret
push
out
mov
cmc
pop
imul
push
imul
jbe
cmc
pop
push
lahf
push
dec
repz
insb
dec
adc
inc
imul
lock
icebp
sbb
or
push
add
mov
sahf
and
push
jecxz
jae
mov
dec
fwait
sub
imul
rorl
sahf
xor
das
aaa
jmp
push
lret
popa
mov
cld
sbb
shrb
lea
dec
loop
mov
cwtl
das
xchg
xlat
mov
cld
sub
das
mov
cmpsb
lock
ljmp
inc
mov
leave
ds
mov
enter
xchg
mov
repnz
dec
and
test
push
test
xor
xor
xchg
xchg
pop
cmpsl
ds
pop
cli
jmp
xor
lahf
xchg
arpl
outsb
dec
push
in
loop
mov
lret
mov
cmpsb
test
test
mov
push
mov
push
iret
jmp
test
xchg
out
dec
test
adc
lea
repnz
pushf
cs
cltd
pop
lods
pop
jp
aam
push
push
or
mov
fisttpl
rcll
jns
mov
imul
jb
sahf
or
popa
cmpsb
std
loop
mov
inc
stos
dec
imul
mov
inc
shll
adc
lea
sbb
mov
jl
jle
shrl
mov
jnp
sarb
sub
mov
mulb
mov
dec
mov
shlb
aad
push
and
pop
cmp
aam
cmp
sbb
aas
fwait
mov
mov
and
scas
xchg
cmp
loope
js
mov
jp
mov
inc
fsubrl
jbe
add
arpl
jo
leave
inc
mov
sarl
bound
add
dec
xor
dec
fisttpl
pop
jbe
jnp
mov
inc
xor
mov
mov
inc
scas
mov
dec
lea
movsb
xlat
ret
or
mov
jle
xchg
repnz
lock
loopne
iret
shll
mov
xor
js
cmp
mov
pop
sbb
inc
mov
xchg
xchg
outsb
dec
ja
xchg
rcrl
xchg
sahf
dec
loopne
mov
inc
gs
loope
mov
mov
mov
mov
xchg
daa
jmp
pop
sub
enter
pop
mov
mov
adc
sarb
lods
xchg
mov
push
add
cwtl
push
rep
les
mov
cs
sti
aam
iret
push
test
cld
xchg
ret
sub
jg
rcrl
andb
adcb
nop
daa
mov
push
push
jno
scas
inc
push
je
xor
push
mov
cmp
xchg
daa
cld
iret
and
jns
hlt
sbb
mov
aaa
mov
cwtl
xchg
pop
ds
in
add
orb
sub
inc
jo
ss
xchg
jle
sqrtps
jae
xchg
cmp
out
or
mov
jp
sbb
mov
adc
mov
push
imul
pop
aad
jbe
mov
addr16
inc
or
clc
lahf
xor
mov
sarb
ss
lock
lds
out
out
sub
cmc
jg
pop
xlat
repz
sbb
inc
ffree
push
mov
in
sbb
icebp
mov
paddw
jbe
xor
or
sbb
in
hlt
loope
add
lcall
push
aad
sbb
cmp
std
sti
sub
sub
sub
dec
pop
lods
or
sub
test
lods
ljmp
push
xor
movsb
in
pop
adcl
mov
pop
jne
pop
icebp
js
dec
and
mov
dec
incl
fwait
xchg
pushf
cld
pusha
test
mov
inc
repnz
mov
sub
xor
xor
gs
cltd
je
lret
imul
popf
jg
xchg
add
sub
inc
jno
idivl
cmpsb
jbe
jns
add
out
sbb
rol
and
movsl
loop
stc
xchg
lret
cmpsb
cld
mov
push
call
test
adc
push
int3
ds
inc
cltd
cmp
repz
or
jp
outsb
or
jmp
pusha
add
inc
push
in
add
sub
cmp
stos
jb
xor
in
pop
xchg
stc
mov
push
sbbb
jecxz
enter
ja
mov
adc
mov
push
xlat
jmp
popf
dec
ss
gs
mov
add
cmp
inc
in
loop
dec
mov
roll
sub
rcr
les
insl
inc
mov
cli
mull
ret
and
aad
dec
mov
repz
lahf
push
push
jb
scas
and
sbb
dec
sbb
call
pusha
mov
lret
lods
mov
lret
pop
adc
adc
popf
xor
and
push
dec
lods
fs
sub
mov
push
mov
jne,pt
push
fwait
xchg
and
pop
dec
call
shll
add
sbb
shlb
adc
movsb
std
gs
in
and
aaa
leave
sbb
jecxz
leave
xor
mov
push
popf
ret
ficoml
das
data16
mov
stos
xor
add
mov
aad
loope
cmp
dec
pop
push
loop
dec
dec
call
in
ret
shll
sti
les
adc
sbbb
xchg
out
sbb
push
stos
adc
jle
ja
mov
or
dec
imul
sbb
jl
mov
decb
scas
ss
sbbb
or
sub
sub
clc
aas
dec
popf
das
lret
inc
lcall
and
or
fwait
adc
in
pop
lods
daa
ja
add
roll
sbb
adcl
jo
jmp
ss
add
lods
push
rcrb
mov
jns
in
inc
jmp
hlt
or
jg
mov
popa
adc
mov
jecxz
mov
jl
pop
rorb
add
aad
add
cmc
pop
inc
and
push
dec
and
shlb
fadd
sbb
cli
lods
insb
sub
cli
mov
sub
setp
clc
movsl
adc
sti
int3
call
lods
les
xchg
int
scas
mov
inc
push
or
lods
cmp
repnz
mov
add
ja
je
or
test
adc
cmp
mov
push
sub
dec
out
ljmp
movsb
js
jp
idivb
inc
xchg
aas
in
or
jne
in
daa
fsubrs
mov
movsl
enter
outsb
sbb
sbb
xor
mov
mov
leave
lea
ror
lods
mov
xor
test
add
inc
hlt
adc
fs
lret
fisubl
mov
into
fisubrs
mov
mov
dec
jnp
fcomps
test
test
scas
adc
repz
jmp
bound
pusha
shl
cmp
or
cmp
mov
jb
sub
insl
pop
push
test
subl
jns
flds
mov
pop
push
scas
mov
cmp
and
xchg
sti
xor
pop
mov
mov
cltd
in
adc
xchg
jno
adc
xchg
mov
dec
pop
in
pop
cld
or
in
pop
mov
jae
sub
xor
jg
fsts
mov
mov
rcl
jo
xor
in
inc
jmp
xchg
pop
addr16
xchg
xchg
shr
pop
cmp
out
dec
cmp
out
cmpsl
stc
aas
dec
mov
fidivs
inc
xlat
xchg
test
mov
out
scas
es
adc
in
or
or
and
je
movsl
test
xchg
out
mov
xchg
mov
lcall
shr
fnstenv
je
dec
int
neg
movsl
popf
gs
dec
pop
bound
cmpsb
ja
lock
lcall
jne
stc
pop
mov
cmpsb
daa
push
in
cld
add
dec
or
xchg
add
js
insl
inc
std
test
addr16
fwait
dec
and
aaa
push
sbb
mov
out
aas
lcall
mov
fidivs
jecxz
loop
test
popa
test
sub
mov
or
mov
mov
dec
lock
pusha
jae
popa
das
fsubrs
fnstcw
push
hlt
sub
pop
dec
test
andb
sbbb
lret
shl
mov
je
mulb
xchg
mov
xorl
dec
lock
mov
lahf
dec
pop
xchg
lods
out
loope
xor
popf
test
mov
fnstcw
mov
and
sub
ret
lock
xor
xchg
lock
sbb
mov
mov
aaa
sahf
adc
xchg
outsb
stos
popf
stos
int3
popf
arpl
int3
pop
test
cmp
daa
adc
jo
pushf
sbb
adc
sbbl
push
lahf
cwtl
les
in
test
or
mov
xor
into
scas
push
inc
xchg
push
cld
sti
cld
xchg
push
jne
lcall
fcoml
pmulhuw
stos
dec
insb
insl
cld
imul
sbb
std
xchg
aaa
or
xchg
dec
lahf
adc
inc
xchg
daa
jle
cltd
inc
inc
dec
leave
xchg
jno
loop
sub
daa
push
arpl
push
repnz
and
popa
mov
dec
sub
test
jle
lock
mov
push
xor
xchg
in
add
pop
mov
sti
and
fcmovu
jg
sbb
mov
xor
mov
test
ds
aaa
outsl
cltd
or
inc
addr16
inc
mov
pop
ljmp
jecxz
out
addl
mov
cwtl
lret
ret
in
adcl
cmp
lock
sub
mov
cmp
sbb
and
xchg
mov
imul
test
repnz
pushf
mov
test
cli
test
xlat
dec
dec
mov
mov
sub
dec
add
int
inc
and
sub
adc
das
cltd
rclb
mov
and
inc
adc
into
int3
jns
push
insb
test
sub
sub
out
add
imul
adc
lea
sbb
cmpsl
push
add
mov
test
jmp
sbb
pop
cs
rol
clc
pop
mov
jl
pop
je
sbb
test
scas
jge
loope
push
inc
in
mov
pusha
aas
insl
mov
adc
push
rcl
cmpsb
cwtl
or
frstor
mov
mov
scas
cmp
rcrl
sbb
and
xor
cld
pop
outsl
adc
or
inc
pop
cmp
push
sub
lahf
sbb
inc
or
ss
loopne
mov
test
sahf
das
sbb
push
cmp
adc
pop
test
mov
mov
cmp
xchg
xchg
push
adc
mov
xor
repnz
or
testl
setnp
cltd
xchg
or
fwait
test
jp
sti
ja
jns
pop
pop
out
xchg
jnp
lcall
jno
and
les
clc
aas
sub
cs
push
push
lds
sub
addr16
push
popl
or
popa
mov
mov
and
inc
pop
sar
fsubr
shll
in
lock
cmc
orl
ficoml
das
mov
call
xchg
iret
pop
out
fwait
cli
push
dec
mov
lret
and
dec
out
insl
jmp
pop
jg
js
ss
test
gs
aas
cmpsb
ds
cmp
push
push
mov
mov
outsl
adc
mov
add
and
sbb
inc
sub
add
adc
fstpt
and
and
test
inc
mov
aam
cmp
adc
push
xor
xchg
mov
fbstp
and
dec
and
pop
in
pusha
dec
dec
iret
xor
enter
inc
inc
mov
loope
loop
popa
sub
shlb
mov
fsubrl
fldt
adc
movsb
cld
lcall
in
pushl
fcmovnb
pushf
adc
faddp
insl
sub
sbb
lahf
xor
or
inc
jle
sub
xor
xchg
stos
sbb
test
out
xchg
sub
xchg
push
push
in
insb
mov
or
mov
popf
sub
out
or
inc
cltd
int
push
cmp
mov
dec
dec
andb
ret
lea
fwait
jg
cli
xor
inc
sub
push
push
into
test
out
jmp
mov
fnstsw
xor
ret
sub
icebp
into
mov
movd
fidivrs
add
enter
in
add
addl
add
mov
aam
in
repnz
mov
mov
pop
clc
or
gs
fistps
cmpsl
inc
mov
les
ret
ret
cmpsl
popf
je
in
dec
mov
movsb
sti
jns
mov
sub
icebp
inc
push
lods
js
push
xor
cmpsl
mov
stos
shlb
fucomip
mov
daa
sub
repz
loop
xchg
add
and
jae
add
testb
arpl
xor
add
rorl
nop
imul
insl
and
ljmp
inc
fs
jnp
xchg
cmpsb
dec
loop,pt
inc
fstl
mov
pop
push
bound
out
jl
cmpsl
and
mov
js
lock
mov
cltd
jbe
es
loop
mov
je
aaa
pop
lods
nop
iret
mov
ficoml
stos
or
jmp
pushl
dec
loop
xchg
jge
jge
mov
icebp
addl
push
add
add
sbb
and
mov
mov
sub
sbb
cmp
mov
jmp
and
aas
or
addr16
sbb
pusha
out
cli
popa
pop
mov
pop
imul
and
repz
jne
mov
loopne
out
add
xchg
xor
lods
add
adc
add
xchg
sub
inc
sub
mov
sub
fisubrl
repz
lcall
out
out
pop
and
xchg
pop
pop
xchg
cmp
sbb
ljmp
mov
pop
cwtl
jp
mov
jg
rolb
loop
push
inc
inc
sahf
xchg
test
mov
push
in
jno
scas
xchg
mov
inc
sbb
mov
push
adcl
punpckhdq
inc
mov
mov
xchg
insb
adc
adc
loope
add
mov
mov
out
test
cld
xchg
subb
sub
das
sbb
clc
xchg
fdecstp
inc
stos
test
test
push
pop
ss
lds
test
xlat
jo
push
mov
sahf
xor
test
inc
dec
stos
dec
add
cmp
pop
addr16
push
addr16
stc
lea
xchg
movsb
test
xor
int3
sbb
rcrb
test
inc
das
push
test
mov
mov
ds
mov
add
push
loop
mov
mov
cld
outsl
repz
pop
jecxz
mov
sub
pop
std
sub
mov
arpl
jne
ljmp
cmc
adc
push
pop
cmp
xlat
sbb
bound
mov
pop
cmpsb
jecxz
insl
aad
pop
test
mul
mov
add
xchg
test
xor
aaa
or
in
addl
lret
es
scas
in
mov
cmpsb
idiv
stos
add
std
cltd
aam
xor
mov
adc
cli
pop
jne
es
jle
cmpsb
lret
fnstsw
ljmp
inc
test
mov
adc
rorb
add
mov
clc
scas
push
xlat
push
enter
ficomps
pop
rclb
mov
jmp
mov
pop
inc
mov
addr16
stos
mov
jge
insl
add
dec
out
xor
cwtl
fwait
adc
push
aas
in
pop
sahf
inc
fadds
mov
pop
xor
jo
out
shrb
fucomip
xor
test
xor
cmp
test
inc
test
bound
pop
leave
into
jae
fs
fwait
mov
js
mov
xor
add
sub
lea
arpl
xchg
sbb
fwait
adc
hlt
inc
jge
nop
scas
sub
aas
nop
les
and
outsb
mov
push
in
loopne
add
in
aad
sub
mov
aas
dec
iret
movsb
add
cmp
mov
mov
adc
rcrl
mov
xor
lahf
mov
adc
les
out
xor
das
xchg
test
jae
push
pushf
push
test
cmp
xor
jae
es
xchg
inc
fwait
or
and
ja
push
dec
lcall
adc
mov
movsl
icebp
stc
nop
daa
out
shll
imul
enter
cmpb
imul
mov
pop
dec
in
stc
data16
mov
dec
fnsave
stos
repz
xchg
pop
ds
mov
in
out
push
ficoms
mov
out
es
sub
mov
nop
adc
or
lret
in
lods
fwait
in
xchg
push
mov
jae
insb
test
xchg
jmp
xor
mov
andb
repnz
aam
mov
fsts
hlt
cmpl
ds
and
out
inc
popf
add
xchg
shll
cwtl
push
les
les
les
jge
fwait
inc
out
push
in
scas
mov
mov
jecxz
cwtl
mov
sbb
jmp
or
xlat
loop
or
xchg
mov
rol
add
cmp
push
dec
rcrb
xchg
outsb
clc
dec
pop
mov
fistpl
mov
adc
aas
shll
inc
pop
xlat
pop
or
jae
loope
bound
pop
adc
cmp
imul
inc
notl
xchg
jae
jbe
call
test
out
pop
jne
mov
mov
test
pop
in
sbb
test
or
add
test
subl
cmc
jae
and
jo
loopne
xor
nop
cmp
cld
pop
scas
jmp
lock
xor
pop
fnstsw
pop
addl
aas
xlat
xlat
ret
fistps
lea
push
mov
repz
inc
loop
movsl
lock
insl
inc
dec
lods
xchg
and
mov
loop
mov
rorb
xchg
ds
mov
int
dec
xor
gs
fwait
push
xchg
sub
outsb
sub
sbb
ret
dec
pop
mov
int
sub
stos
stc
nop
fnsave
sbb
pusha
aam
pusha
icebp
mov
mov
and
lods
or
mov
sbb
pop
inc
leave
into
fdivrl
rorl
xchg
xchg
push
daa
je
push
repnz
push
fprem1
dec
add
dec
iret
inc
shl
cmp
std
daa
mov
fbstp
pop
andb
int3
outsl
pop
out
test
vpunpcklbw
jo
cmp
fisttpl
movsl
filds
test
mov
lret
xchg
fistps
shlb
mul
mov
icebp
mov
je
shlb
inc
cs
cli
sbbb
cmp
filds
leave
into
push
cs
xchg
xchg
lea
mov
adc
fstpt
push
cltd
stos
mov
test
sub
push
lret
aam
clc
clc
into
enter
loopne
mov
in
push
inc
add
xor
jg
xchg
popa
sbb
lret
xchg
pop
xor
sub
rcrl
bswap
push
xor
jp
arpl
lret
sub
mov
xor
push
imul
mov
and
in
stos
push
sub
dec
cmp
call
mov
sahf
xor
xchg
mov
pop
mov
jecxz
test
insl
sbb
sbb
push
adc
jne
pop
cmc
test
push
pushf
nop
lcall
xchg
test
mov
xchg
stc
xor
jnp
test
arpl
sub
mov
sub
pop
xchg
testb
dec
xchg
popf
dec
pop
jmp
inc
dec
sahf
or
and
arpl
xor
insl
scas
imul
push
out
xchg
addl
jecxz
xchg
jp
mov
push
mov
add
iret
push
cmp
sbb
out
adc
enter
ja
pop
and
pusha
jnp
movsl
and
jns
pop
lea
xor
loopne
sahf
mov
arpl
pop
fcoml
sub
rcll
mov
add
xor
sbb
les
mov
lods
out
jb
xchg
adc
rolb
lcall
sbb
add
jbe
std
roll
mov
push
out
jnp
jp
movsl
test
xchg
sub
leave
xchg
lea
in
inc
enter
loope
mov
sbb
sub
ss
xor
mov
jmp
andb
divl
and
add
jbe
pop
mov
outsl
jne
push
lret
xorps
lret
in
push
ffreep
imul
jle
inc
stc
nop
jne
xchg
jmp
or
xchg
cmpsb
inc
mov
pop
lods
out
test
lds
rclb
mov
ss
cmp
out
pop
push
jp
xor
shl
or
jb
fnstsw
jg
cmc
fs
into
rorl
adcb
and
add
mov
dec
cmp
cli
xor
aaa
aad
sbb
outsb
cmpsl
fcmove
sahf
push
lret
dec
cmpsb
sub
in
push
repz
popa
mov
clc
sbb
mov
mov
jg
pop
movsl
adc
inc
in
fwait
push
dec
push
sarl
pop
shlb
cmp
mov
loopne
mov
jmp
or
data16
ret
dec
ror
stos
in
rcr
cmp
test
out
mov
cmp
or
jmp
xchg
cmc
imul
jge
sbb
fiadds
push
pushl
push
int3
sub
pop
inc
and
pop
jo
cld
movsl
lahf
stos
cmp
iret
xor
clc
jo
and
out
adc
fcmovne
xor
std
shrb
enter
pop
mov
jns
xor
fwait
jns
test
mov
lea
outsl
inc
dec
mov
leave
mov
dec
sbb
mov
or
mov
ficoml
mov
cmpl
mov
pop
push
sub
and
mov
inc
data16
xchg
hlt
xor
dec
xchg
pop
outsl
xor
mov
sarl
movsl
je
lea
inc
sbb
cmp
fists
sbb
call
and
daa
lcall
stos
mov
imul
mov
and
jno
popa
clc
cli
xchg
xchg
jp
sbb
jl
movsb
in
loop
lock
in
adc
inc
sbb
dec
jns
cmpb
mov
add
cltd
data16
xor
xchg
add
mov
push
push
or
stos
sarl
cli
xor
jecxz
add
popa
cld
and
adc
in
sahf
mov
sahf
std
cld
adc
lods
aaa
mov
sbb
xor
or
jns
scas
mov
test
xchg
aam
stos
inc
pop
pop
cmp
inc
pop
sbb
and
out
test
jge
orl
jge
jb
or
cli
pushf
dec
and
fs
add
jge
mov
nop
mov
pop
push
xchg
aas
xchg
push
test
imul
mov
jl
jmp
pop
adc
mov
xchg
adc
cmpsb
sub
into
fldcw
mov
imul
jecxz
fstps
jmp
mov
mov
push
bound
dec
mov
xor
test
pop
jns
jne
add
notl
sti
cmp
jle
dec
repz
add
out
add
pusha
std
cs
and
gs
jmp
call
ss
mov
push
sbb
dec
mov
and
leave
iret
leave
jecxz
add
pushf
lock
push
bound
and
or
xchg
pop
pop
cmp
pop
rcrb
push
xor
xchg
popf
jle
call
rcrl
adc
pop
ss
leave
jo
mov
js
dec
cmp
fstpl
push
pop
inc
sub
dec
xor
lea
adc
cld
les
nop
movsl
xchg
pop
mov
xor
jl
int3
stos
std
dec
in
or
into
xchg
inc
outsl
imul
inc
bnd
sub
xchg
out
sbb
jle
daa
data16
test
lods
or
rclb
ds
out
xlat
inc
lds
add
mov
ds
sub
nop
imul
popa
ds
cwtl
out
push
popf
sbb
inc
lods
inc
cmp
xchg
sub
mov
in
je
into
in
adc
testb
cld
aas
jle
lods
imul
stc
inc
fnstenv
mov
scas
cmpsl
xchg
or
notb
lea
sub
cmpsl
ret
pop
mov
xorl
push
cwtl
movsl
iret
es
sti
lods
mov
sbb
daa
dec
call
fwait
inc
xor
popf
or
cs
clc
sub
test
pop
test
sarl
mov
test
mov
sub
call
push
scas
stc
cmp
pop
mov
cwtl
or
test
sub
in
cld
es
loopne
aas
lds
inc
dec
addb
sbb
nop
inc
stc
std
rcll
xchg
jno
mov
mov
fbstp
int3
jo
fnstcw
sub
stc
or
mov
popa
std
mov
cltd
rcrb
xchg
cmp
cmpsl
and
cld
daa
dec
and
mov
push
mov
jb
and
mov
in
icebp
jecxz
pushf
adc
hlt
jg
xor
mov
test
ja
enter
lahf
ljmp
mov
jo
fcomps
or
pushf
xchg
hlt
jle
stc
mov
popf
mov
cmpsb
popf
lds
imul
adc
sub
lret
testb
push
adc
push
mov
sub
je
std
xchg
dec
les
aas
das
outsb
mov
es
sti
cmc
cvtps2pi
xor
jmp
mov
mov
bound
jae
scas
aaa
add
xor
push
sahf
movsl
push
mov
mov
mov
or
or
jne
sub
pop
scas
popa
adc
iret
sbb
test
or
cs
loope
fisttpll
in
std
ret
lret
cmp
jmp
jae
fucomp
addb
inc
pop
test
cmp
sbb
jp
mov
sbb
loop
test
or
stos
shl
jnp
icebp
pop
fs
rcrb
dec
les
imulb
in
mov
cmp
sahf
add
mov
mov
push
mov
fsubrl
aam
sbb
or
pop
mov
stc
cmpsl
ret
cltd
int
xorb
push
js
mov
movsb
test
mov
cld
sti
or
push
dec
rolb
in
jg
cmp
xchg
inc
in
out
xchg
add
or
rorb
mov
frstor
out
pop
lret
sti
jnp
imull
sub
or
and
mov
scas
pop
push
popf
adc
stos
and
idiv
inc
sub
mov
inc
cmpsb
inc
pop
in
xchg
sub
mov
lea
dec
or
jp
sbb
inc
frstor
inc
fadds
rcl
adc
shrb
fs
popa
mov
cwtl
das
fstl
xchg
fs
inc
sub
ljmp
push
in
adc
hlt
sbb
jne
adc
aas
pop
bound
mov
pop
jl
loop
dec
pop
pop
cwtl
add
and
out
sub
and
mov
gs
xchg
mov
mov
sbb
iret
sub
ret
int3
mov
shrb
add
imul
xor
xor
movsl
or
adc
inc
fcoml
push
cmp
pop
mov
sahf
sarl
fninit
mov
movsb
cmp
inc
push
mov
dec
jmp
mov
push
popf
bound
sarl
and
lea
divb
xchg
dec
mov
fstl
dec
aaa
add
movsb
adc
loopne
lds
cltd
test
add
imul
stos
mov
nop
xchg
shufps
pop
jbe
cs
push
mov
dec
sbb
mov
jmp
dec
mov
xchg
out
sbb
mov
ja
inc
push
les
stos
flds
dec
icebp
enter
cmpsl
and
cmpsb
add
cmp
mov
lahf
clc
adc
mov
xor
dec
mov
cltd
add
cmp
cmp
stos
adc
test
mov
jns
push
mov
sar
pushf
jmp
mov
and
sub
mov
mov
mov
mov
jmp
add
movsb
or
jbe
sbb
xor
test
sbbb
and
or
dec
out
subb
repnz
add
dec
or
bound
pop
lock
outsl
jnp
jecxz
or
push
cli
sbb
in
cli
mov
or
aam
cmp
mov
xchg
and
sub
insl
push
mov
out
sub
mov
sbb
in
xor
shll
dec
loopne
iret
bound
inc
push
out
sbb
sbb
xor
pop
outsl
rclb
aam
int
jo
fldt
jl
sbb
les
jne
and
lods
ds
movsb
dec
pop
insb
sub
in
cwtl
xor
push
sub
ret
mov
orb
stos
adc
sub
icebp
andb
xchg
jns
aas
cs
sub
or
mov
inc
lret
pop
out
jbe
into
cmpsl
imul
dec
loop
push
in
scas
xchg
lods
xor
jae
mov
pop
cmp
sub
scas
cmp
lods
xchg
adc
lahf
lods
push
jecxz
cli
and
jo
xchg
scas
and
inc
les
xchg
xor
inc
jno
std
mov
or
sahf
mov
cs
cmpsl
arpl
lds
ja
outsl
and
bound
mov
repz
push
movsb
cmp
mov
aam
xor
xchg
dec
jmp
mov
pusha
fcmovne
dec
dec
dec
jne
movsb
cmpb
pop
push
mov
hlt
and
mov
push
mov
mov
jno
mov
dec
pop
rclb
push
lods
fwait
inc
fbld
mov
push
pop
call
dec
out
cmp
mov
out
mov
lret
cmp
mov
pop
stos
dec
test
iret
pop
test
shl
cvtdq2ps
pop
psubsw
add
clc
mov
adc
dec
fsts
pop
push
std
and
sub
pop
enter
testb
test
scas
inc
dec
or
data16
xchg
cs
dec
stc
mov
adc
push
pop
xor
mov
data16
and
call
out
cli
xchg
mov
xor
cmp
jae
jmp
das
cmp
inc
xorl
and
xor
mov
fcmovne
ficoml
shl
xchg
sbb
imul
sbb
movsl
cmpsb
cmp
or
mov
imul
push
pop
mov
daa
dec
aam
subb
or
ja
cld
sub
push
fstpt
jmp
loopne
adc
fwait
sbb
mov
lcall
pop
cmpsl
jg
mov
mov
or
test
aaa
jmp
dec
mov
pop
and
dec
pusha
aam
push
mov
lcall
loope
xchg
add
cltd
data16
test
mov
add
jmp
and
or
xor
aad
mov
pop
scas
push
aam
testb
add
ljmp
jno
sar
pushf
arpl
push
loope
loope
or
jle
push
in
jno
subl
test
adc
stos
outsl
rolb
cmpsl
inc
fcoms
sbb
scas
les
addr16
fnstcw
loop
jb
in
iret
adc
xor
iret
fldt
jmp
mov
jns
ds
or
scas
jb
mov
jmp
mov
and
or
negl
jo
aad
lcall
mov
fisttpll
ret
sub
iret
shlb
ret
fsubrp
mov
jns
subb
dec
dec
inc
adc
mov
sub
in
stos
mov
sahf
mov
jle
jns
mov
rolb
lds
dec
in
mov
into
mov
lret
mov
icebp
std
leave
cwtl
inc
sbb
js
xor
xchg
push
cmc
mov
mov
xchg
sbb
or
sbb
leave
sahf
sahf
mov
sbb
mov
test
push
lods
dec
testl
loop
mov
mov
nop
jne
test
mov
push
jae
insl
int
dec
pop
nop
push
sbb
mov
daa
inc
inc
test
jg
mov
fsubrs
pop
fucomp
notl
je
cmp
pop
dec
out
xchg
adc
out
pushf
inc
test
inc
out
inc
pushf
sub
and
mov
or
cmp
lods
sub
inc
mov
or
pop
push
sbb
jp
xchg
lods
in
mov
fwait
rcr
mov
cli
mov
mov
jmp
mov
push
jno
or
shlb
xchg
pop
int3
push
or
inc
xchg
dec
jns
pop
mov
mov
sub
int3
fistps
sub
sub
lock
or
int
cmp
jns
call
or
push
inc
mov
mov
adc
loopne
pop
popl
fs
push
jb
int
mov
fidivs
fstpt
test
mov
or
mov
es
loope
pop
adc
in
pop
mov
test
cmc
out
stos
nop
cwtl
add
inc
arpl
mov
lock
stos
adc
aam
lret
add
adc
or
dec
orb
sbb
out
aas
dec
jno
dec
push
aad
rcll
ljmp
in
cs
daa
sbb
add
in
sbb
cmp
ss
scas
jecxz
adc
sbb
dec
loope
imul
sub
jnp
and
lret
std
cltd
xor
fstpl
mov
out
dec
daa
mov
inc
mov
jb
test
cmp
sbb
sub
daa
mov
jne
inc
fisubl
enter
pop
dec
dec
sarb
push
and
add
mov
pop
scas
cmp
fidivl
push
add
pop
cmp
pop
cmp
out
pop
cmp
and
add
push
adc
test
cltd
std
dec
sub
loop
pop
and
pop
pop
mov
loope
xor
add
add
adc
int3
pop
xor
adcb
gs
insb
popf
sbb
outsl
test
cmpsb
iret
and
or
clc
add
adc
in
enter
lea
nop
sbb
pusha
daa
fs
les
pushf
xor
cld
stos
inc
bound
nop
imul
enter
mov
mov
push
enter
cmc
jmp
in
or
inc
xchg
sbb
stc
mov
push
cmc
daa
nop
push
inc
sub
push
cltd
mov
inc
rolb
xlat
mov
push
and
fnstcw
push
imul
pushf
pop
lret
push
rcll
out
les
loope
cmp
lea
out
bound
ds
es
sbb
lock
popa
or
xor
mov
pop
jle
mov
push
pop
jecxz
push
gs
inc
or
xchg
sub
aad
shrl
das
sahf
clc
cmp
xlat
mov
sbbl
pop
fcomp
jae
popa
push
cld
and
xchg
lea
mov
lret
adc
push
lods
rolb
mov
rol
insl
loopne
jnp
loope
mov
call
mov
or
dec
mov
or
dec
mov
pop
cmp
xchg
push
xor
fdivl
xchg
mov
das
inc
out
mov
in
and
inc
cli
enter
scas
inc
pop
movsb
jb
sub
xor
cmpsl
cmp
leave
orb
mov
sub
add
cmp
shl
outsl
sbb
mov
or
ss
gs
andb
xor
imul
sar
and
popf
cmpsl
shrl
andl
jmp
cwtl
mov
and
adc
out
rcl
shrl
negb
daa
mov
add
mov
in
pop
nop
mov
cmpsl
mov
push
cmpsb
dec
pop
fstps
push
sub
adc
lds
ds
xchg
sub
mov
sbb
sti
xchg
out
scas
pop
pop
call
jmp
sbb
jecxz
pop
call
jo
inc
in
sbb
out
cmpl
xchg
xor
xor
inc
cmp
and
sub
repnz
and
or
pop
cmp
out
les
mov
push
out
test
and
sar
cmp
daa
xor
inc
pusha
nop
mov
jmp
scas
js
mov
iret
push
mov
mov
mov
xor
add
inc
scas
xor
int3
pop
cmp
sbb
cmp
xlat
sub
fnstenv
shrl
andb
push
mov
jp
xor
sbb
inc
pop
outsl
jge
movsb
xlat
pop
add
xchg
mov
arpl
xlat
mov
mov
js
or
in
mov
or
push
mov
movsl
or
aaa
push
push
outsb
mov
stos
push
cwtl
jae
leave
sbb
ljmp
xor
das
subl
sub
enter
sub
add
add
cmp
imul
xor
sbb
mov
pop
std
ficoml
outsb
xor
lahf
push
and
xchg
and
add
sbbl
cmpsl
test
ljmp
xor
fimuls
mov
leave
daa
sub
insl
push
lods
cmp
sbb
aas
imul
push
adcl
inc
push
lods
cli
shlb
ret
jecxz
mov
or
inc
out
std
xchg
rcrb
hlt
xor
aaa
jae
sub
and
in
test
jae
jne
lods
lods
xchg
sub
mov
lahf
sbb
addr16
into
bnd
adc
ja
xchg
cmp
pop
idivl
lret
out
xchg
add
xchg
ss
sbb
mov
testb
pop
add
mov
popa
xchg
mov
fsubl
mov
pop
std
sbbl
xor
ss
dec
jb
mov
mov
xor
imul
out
sub
stos
stos
and
xchg
mov
in
in
xchg
push
mov
stc
arpl
stos
aas
sbb
jo
push
jl
fbstp
sahf
push
outsl
add
test
loop
mov
lock
cmpsl
in
sbb
inc
mov
test
fs
xchg
fldcw
push
pop
int
jne
lock
cmp
shr
lock
push
outsb
test
mov
sarl
pmaxub
mov
fnstenv
stos
nop
out
test
cmp
cs
inc
lods
pop
outsl
icebp
mov
clc
test
cmp
test
add
dec
clc
sbb
mov
or
push
repnz
arpl
in
pop
push
inc
fwait
repnz
sub
pusha
sbb
push
lods
inc
cwtl
pushf
daa
lcall
sti
mov
arpl
add
scas
xor
jno
fwait
popa
clc
add
add
add
iret
popf
mov
jo
xchg
fwait
insb
test
xor
jns
xchg
lcall
mov
leave
xchg
add
pop
into
loope,pn
jae
push
movsl
js
cmp
xor
and
jbe
ss
cmpsl
aas
mov
cmpsl
or
mov
xchg
jnp
adc
sub
int3
cmp
sarl
test
lret
lea
sub
fdivrs
hlt
shrl
jbe
xorl
xor
das
push
mov
inc
aaa
jae
dec
imul
repz
stos
imul
cli
nop
daa
in
fadd
shl
or
loope
lods
or
shl
cmpsb
cmp
movb
loope
push
pop
imul
xchg
sbb
add
xchg
mov
push
mov
imul
cmp
cmp
cmpsl
mov
inc
fsubs
inc
lods
sub
mov
movsb
mov
fidivrl
stos
in
sbb
std
mov
sbb
dec
daa
inc
test
rcr
ds
push
sbb
loop
loop
loope
jmp
stc
popa
int
jmp
push
xor
xor
dec
cmp
sub
push
inc
inc
loope
lea
cltd
jo
popa
pop
xor
and
into
out
dec
adc
sbb
nop
pop
mov
loope
jnp
int3
mov
sub
icebp
xor
cmc
das
or
sbb
outsl
lods
fsubr
loop
icebp
rcrl
or
mov
and
fiadds
xchg
scas
inc
mov
stos
mov
sub
ljmp
sub
sbb
divl
negl
scas
and
lahf
xchg
pop
fwait
loop
das
adc
loope
ljmp
pop
int
mov
test
aam
fs
aad
pop
cmc
dec
cmp
sahf
jne
sub
out
xchg
sbb
push
mov
aam
dec
mov
sbb
ljmp
add
in
mov
push
shlb
adc
mov
push
jg
mov
or
adcl
js
ja
push
test
mov
xchg
mov
scas
push
stc
lock
mov
int
and
adc
fdivrl
lcall
push
add
pop
lret
shrb
or
scas
sbb
cs
loop
sbb
cmpl
xor
mov
in
lret
mov
mov
leave
aam
sahf
and
inc
jnp
xchg
push
cmpsb
lock
rclb
xchg
sbb
mov
test
hlt
les
and
add
mov
mov
loop
add
arpl
enter
xor
cmp
testl
xor
lcall
mov
mov
mov
sub
mov
xor
pop
cltd
out
cwtl
jne
mov
xchg
add
pusha
and
rcll
cmpsl
mov
mov
into
test
clc
aas
imul
divb
out
shl
int3
push
add
ds
bound
stos
pop
into
jne
jne
and
push
sahf
stos
pop
into
sahf
fmull
adc
sbbl
ss
adc
rcrb
shll
cwtl
xchg
dec
add
xchg
rcrl
fistpll
movsl
enter
shlb
mov
jae
add
rorl
loope,pt
es
xor
mov
pushl
pop
or
sub
pop
dec
xchg
cltd
pop
xor
pop
pop
xchg
rcll
in
fucom
inc
inc
outsb
les
dec
pop
clc
push
subb
or
rcrl
push
stos
mov
ret
outsl
mov
imul
repnz
ljmp
stos
shlb
mov
stos
outsb
insl
fcompl
orb
or
rclb
sbb
push
jns
cmp
in
ds
mov
test
sub
jno
cmp
adc
aam
xchg
or
mov
jb
xchg
push
jmp
mov
lods
inc
gs
sbb
add
and
fs
push
add
push
ficoms
cwtl
jl
pop
popa
test
js
push
sahf
xlat
adc
jg
inc
sub
iret
fucomi
sbb
pop
xor
ret
shrb
jg
inc
es
mov
or
aam
out
mov
jle
sbb
and
les
jo
mov
jb
in
mov
inc
ret
sub
ret
iret
add
mov
mov
mov
adcl
test
xor
push
mov
mov
adc
push
nop
inc
sti
mov
gs
call
adc
inc
in
ja
mov
imul
adc
and
ret
idivl
dec
mov
push
cmp
pop
test
clc
popf
fdivp
mov
in
mov
test
test
out
jp
out
xor
arpl
shrb
jo
popa
mov
xor
cmp
rsm
mov
mov
mov
scas
sub
int3
arpl
sub
mov
sub
movsl
in
sub
pop
push
xor
mov
or
out
sub
mov
ror
and
pop
aad
insl
mov
or
ljmp
mov
sub
ds
xchg
mov
out
and
mov
dec
jp
aad
mov
lcall
subb
out
jp
cmp
dec
icebp
add
mov
xchg
mov
jno
daa
out
mov
and
out
add
push
xor
dec
mov
dec
rol
cmp
ja
test
sbb
fwait
adc
and
cmp
push
xor
ds
addr16
push
and
and
movsl
pop
mov
push
pop
scas
iret
sub
cmpb
and
cltd
pop
cmpsb
mov
mov
add
ret
xorb
shrb
cli
pop
mov
mov
jae
sub
lds
jmp
cs
push
add
xchg
mov
jge
cmp
jg
pop
iret
xchg
mov
cmp
cmpsl
jg
push
popa
lods
add
enter
stc
jne
and
out
jne
loope
and
jns
leave
jmp
dec
int
push
ret
mov
sub
sbb
aaa
cli
shrl
out
cld
gs
js
das
mov
xchg
lret
pushf
imul
inc
cmpsb
mov
cmpsb
test
mov
dec
imul
jmp
out
adc
jge
enter
sbb
out
fdivrs
loopne
enter
cmp
mov
inc
lods
xchg
jbe
lock
mov
aam
jb
movsb
xor
lock
adc
jge
daa
outsl
in
adc
adc
or
and
ljmp
add
das
popf
sub
xor
das
push
xor
out
jp
enter
mov
pop
mov
mov
popf
lds
sub
loope
push
sbb
ds
iret
jge
insb
loopne
dec
mov
pop
mov
shll
and
xchg
jmp
icebp
sbb
pop
xor
mov
push
adc
popf
fs
and
add
jg
xor
mov
mov
inc
push
ds
movsl
push
inc
and
movsl
cmp
adc
ret
sub
pop
test
jl
lds
cmp
dec
cmpsb
fsts
mov
test
stc
mov
cmp
in
jns
leave
cld
lcall
cltd
lret
addb
and
das
push
lods
pusha
sbb
arpl
xor
adc
hlt
mov
xor
leave
add
aas
cmp
cmpsl
mov
ficompl
xchg
add
add
mov
push
out
fcompp
jo
lea
dec
popa
sbb
push
and
inc
popf
stos
inc
enter
ret
sub
rcrl
jg
dec
pop
add
in
sarb
xchg
ljmp
pop
insl
push
and
out
mov
xchg
cmp
addr16
sub
xchg
xor
call
les
jnp
sub
adc
loop
pusha
jg
add
xor
xchg
mov
dec
repz
outsb
xor
bound
dec
stos
cmp
pop
cmpsb
insl
jl
test
inc
sbb
call
and
addr16
sahf
imul
movb
notl
ret
add
loop
push
jmp
fisttps
lods
int3
pop
xor
mov
outsl
or
mov
loopne
dec
aaa
addr16
xchg
cwtl
push
adc
xor
rcrl
stos
inc
mov
jb
sub
mov
xor
xor
mov
mov
push
rcrl
pop
loop
adcb
cmp
push
xlat
outsl
dec
xchg
add
nop
push
mov
sbb
dec
sbb
icebp
cmc
xchg
int
mov
inc
push
mov
call
sbb
mov
fldl
pop
mov
jnp
push
nop
sarb
ficompl
mov
rol
pop
mov
xchg
sub
add
jp
push
out
cmp
scas
cmp
mov
adc
leave
mov
inc
out
lret
in
shl
ss
jg
int
mov
sti
hlt
or
ss
pop
push
push
dec
sti
sub
iret
xor
mov
inc
mul
add
cmpsb
add
dec
push
xchg
pop
or
aad
or
aam
adc
mov
mov
out
push
js
test
inc
cmp
loopne
lahf
cld
rorb
repnz
rclb
mov
xchg
jnp
mov
fldt
dec
test
pushf
jg
call
rol
xchg
jl
lds
mov
sub
pop
jecxz
mov
push
out
and
fsubrl
mov
outsb
jl
leave
xchg
dec
push
sub
pop
outsl
fisttps
or
or
andl
jp
out
inc
sbb
test
cmp
scas
imul
pop
stos
in
lds
cmpsb
mov
dec
mov
cli
loope
movd
add
push
das
movsb
call
xchg
xor
ljmp
push
mov
popf
mov
fsubrs
test
divl
push
sbb
test
mov
add
divb
mov
adc
lock
mov
inc
adc
pop
adc
insl
rcl
adc
dec
stos
inc
mov
jl
das
daa
dec
pop
mov
cmpsl
stos
cmp
clc
sahf
mov
pop
adc
lret
jp
cld
jmp
mov
popf
insl
adc
mov
clc
jg
mov
push
jno
mov
shlb
fwait
or
cli
jne
mov
ja
inc
xchg
sbb
fld
adc
mov
clc
hlt
into
jl
pop
out
xchg
scas
pop
jg
sbb
andb
mov
clc
daa
int3
js
fildll
cmpsb
cmp
pop
mov
call
cs
add
xor
fcmovnb
and
push
imul
push
mov
mov
ljmp
decb
or
or
leave
leave
mov
dec
test
and
out
push
out
adc
push
pop
push
xor
fmuls
push
jne
cmp
lret
mov
lcall
add
pushf
inc
adc
xor
push
mov
rcr
jne
mov
test
lret
and
or
movsb
pop
orl
inc
pop
push
fiaddl
sbb
ja
mov
sti
insb
cmp
lods
sbb
mov
fmull
push
shll
dec
out
push
and
sarl
xchg
jno
clc
fwait
add
call
mov
pop
pop
jo
jo
subl
push
fwait
test
gs
sub
mov
lahf
xor
and
enter
insb
imul
inc
hlt
jns
daa
xchg
pop
add
pop
cmpsl
outsl
push
out
pop
push
rol
mov
dec
jb
dec
std
xchg
jg
mov
mov
mov
fdiv
cmp
hlt
mov
mov
mov
mov
cmpsb
popf
adc
adc
inc
imulb
cmp
ret
in
inc
in
daa
data16
sbb
mov
test
add
dec
stos
or
sub
push
push
mov
bound
js
notl
fstpt
lahf
dec
lock
es
sahf
dec
lcall
adc
inc
cmp
push
jmp
aas
outsl
lock
lret
std
ss
sbb
cmp
mov
xlat
mov
pop
in
mov
jae
mov
push
xchg
enter
test
insl
ds
movsl
in
mov
push
push
add
aas
and
xchg
sub
add
es
sbb
lret
push
cmp
jo
daa
clc
test
mov
sub
dec
lret
jb
dec
es
stc
dec
inc
jne
xor
std
xchg
xor
scas
and
lods
mov
jbe
mov
jp
js
cld
and
add
ds
pop
cmp
fsubrs
repz
dec
pop
sti
aam
in
outsb
sbb
push
rcrl
push
icebp
sahf
xlat
fs
sbb
in
cmp
or
jle
cwtl
das
pop
jg
jmp
jns
and
fwait
mov
cmp
push
or
lods
nop
imul
ret
adc
pop
inc
icebp
mov
cltd
aam
xlat
sbb
loop
mov
push
aam
jbe
cmp
sarl
loope
inc
fimuls
lcall
fnsave
cmp
push
movsb
and
fnstsw
xchg
fmul
jbe
add
aaa
mov
out
or
call
xchg
push
mov
fcoml
mov
test
nop
gs
cmc
mov
std
cmc
data16
dec
push
xchg
outsl
sbb
mov
popa
repnz
add
mov
sbb
and
or
add
mov
and
into
addl
in
xor
nop
jecxz
rcl
sbbb
mov
loop
add
aad
sbb
pop
mov
and
scas
stos
sbb
in
xor
adc
mov
call
sub
cltd
jbe
aas
pop
xor
mov
or
repz
inc
jmp
xor
popf
dec
mov
and
notl
push
or
push
push
add
inc
xchg
ret
inc
cmp
jne
fs
jno
pop
xchg
pop
and
cmp
sbb
in
push
sub
fistpl
shr
lds
dec
in
insb
je
dec
test
or
jp
aaa
xchg
cli
pushf
popf
jmp
adc
jle
cs
lret
shll
movsb
push
fwait
push
inc
dec
jne
ret
in
dec
sbb
xchg
mov
ret
dec
jnp
cmp
jnp
icebp
ds
aad
cmpsb
sahf
cmp
rol
jb
adc
mov
inc
push
hlt
repnz
cmp
into
xchg
jge
lods
mov
xor
jle
mov
test
jb
sbb
addr16
pop
stc
nop
mov
xchg
cs
pop
mov
dec
mov
fcmovnbe
nop
inc
push
imul
pusha
lock
pop
scas
adc
rcrb
jae
mov
call
dec
icebp
cmp
imul
clc
jle
scas
and
rclb
loope
in
mov
jg
mov
iret
push
push
cmc
jl
fnsave
movsb
aas
std
xchg
sti
and
jecxz
push
sub
lea
xchg
sub
sti
cmpsl
jecxz
lret
mov
rol
fisttpll
ret
insb
xchg
fistpll
xor
sbb
hlt
push
insl
test
inc
cmpsb
mov
aad
jae
mov
pop
mov
addr16
lret
mov
xor
das
jne
ja
imul
and
push
dec
les
jno
jnp
mov
call
sbb
mov
fbstp
sti
xor
push
add
add
inc
add
shlb
loop
out
add
fisubrl
out
pop
fmuls
test
aaa
ljmp
dec
dec
push
adc
in
mull
xor
sbbb
in
lock
add
in
push
popf
lods
xor
repnz
mov
in
inc
push
sub
repz
das
mov
cmp
imulb
les
pushf
mov
sbbb
fsubrl
mov
mov
and
xlat
add
aam
or
cltd
pop
fwait
sub
gs
xchg
aaa
dec
cmp
jb
addr16
or
inc
clc
and
add
testl
inc
adc
jg
out
ss
aaa
sbb
in
decb
sti
mov
arpl
xchg
test
stc
lahf
mov
mov
mov
sahf
sbb
cmpsl
ds
into
lret
push
or
add
iret
sahf
cmp
or
loope
dec
aad
sub
negl
xchg
sub
outsl
jnp
pop
add
add
push
fwait
push
call
cmpsl
popa
inc
mov
or
or
hlt
jmp
sub
pop
fldt
inc
mov
shlb
popf
adc
and
push
lcall
dec
pop
data16
shlb
test
ret
stos
hlt
fbstp
cs
cmp
sahf
push
sbb
fwait
std
sub
in
repnz
xchg
outsb
lret
in
cmp
je
cmp
lods
inc
sbb
cli
movl
icebp
xchg
into
jge
popf
mov
inc
arpl
mov
test
call
cmp
es
or
inc
call
aam
outsl
sbb
and
sub
add
adc
shr
lods
mov
mov
push
add
cmp
xchg
movsb
repnz
dec
pop
cmp
lock
fisubl
bound
clc
jb
and
insl
sbb
dec
xor
fwait
or
out
and
mov
iret
dec
loopne
in
pop
cmpsl
sbb
test
xlat
arpl
pop
outsl
mov
or
xor
gs
and
jbe
fcoms
mov
arpl
inc
in
add
push
shlb
sbb
dec
and
and
andb
les
add
dec
inc
movsb
mov
sbb
pop
mov
xor
xor
shlb
cmp
outsl
add
xor
mov
jne
sub
mov
dec
cmpsb
rolb
jb
sbb
and
lea
and
mov
cld
pop
cwtl
lcall
jle
xor
es
add
sarb
fnstenv
insb
fdiv
xchg
or
sbbl
push
xor
nop
jae
outsl
jle
xchg
and
mov
mov
jno
das
in
xchg
jl
mov
inc
test
pop
outsb
cmp
arpl
push
mov
pop
push
mov
pop
fld
xor
sbb
push
jecxz
int3
gs
cmp
sub
xchg
pusha
stos
push
xor
out
inc
lds
mov
push
xor
adc
jns
push
popa
clc
push
mov
lcall
daa
inc
fbld
push
jp
call
xchg
call
rclb
test
mov
sub
sub
imul
adc
and
sub
test
cmp
dec
mov
out
inc
and
lea
addb
lret
sub
lods
mov
jns
pusha
ss
pop
insl
adc
xor
aam
mov
shlb
lds
inc
popf
mov
fstpl
jg
cmpsl
push
inc
inc
push
notl
faddl
mov
stc
ret
dec
popf
mov
mov
outsl
push
or
mov
in
ljmp
cli
inc
sbb
jecxz
testl
out
pop
jns
stos
les
pushf
adc
sti
insb
xchg
stc
mov
jl
nop
out
cld
addb
hlt
mov
mov
lret
subb
jmp
jge
jbe
or
mov
mov
and
outsb
jno
mov
std
jno
icebp
rcll
add
popf
inc
scas
mov
jbe
jg
shrl
and
push
push
cmp
out
inc
xor
outsl
hlt
push
jle
push
sub
ja
sub
sub
pop
mov
inc
ss
add
jbe
pop
mov
cmp
or
xor
nop
lock
loop
into
push
popf
sbb
mov
jl
jl
mov
xchg
push
stos
inc
push
cld
xchg
call
dec
sbb
sub
jmp
push
pop
popa
jo
push
cmp
jo
inc
push
cmpsl
scas
stc
xchg
filds
push
js
aas
add
loop
and
sarl
in
hlt
sbb
sbb
jb
ret
int
mov
add
cmp
int3
arpl
mov
adcl
push
movsb
test
mov
andb
dec
dec
shrb
ds
and
push
out
ret
jp
scas
dec
dec
sub
cld
arpl
clc
cmp
push
sbb
pop
inc
inc
int
out
in
test
orb
sbb
or
push
enter
iret
jns
popa
dec
imul
ss
ds
loop
inc
test
popf
rcr
clc
jno
sub
jbe
cld
inc
push
ret
notl
dec
inc
sbb
ja
sbb
inc
fadd
in
dec
rcr
inc
pminub
les
xchg
pop
or
push
jp
shrb
sbb
push
inc
cmc
mov
ror
test
loopne
jbe
movsb
cmpl
or
test
ret
nop
in
or
mov
das
xor
or
or
cs
mov
je
and
fwait
lret
cld
mov
out
inc
xor
stc
bound
ds
scas
sub
add
je
mov
and
xlat
mov
or
push
pusha
and
xor
mov
stos
fidivs
rcrl
xchg
insl
cld
pusha
lret
test
push
xchg
inc
mov
data16
loop
in
adc
dec
ljmp
jno
inc
add
push
mov
mov
cmp
fnsave
lret
inc
mov
imul
xor
or
inc
fs
jmp
pop
xor
mov
mov
inc
ret
xor
scas
bound
ss
inc
pop
ja
inc
test
sahf
mov
xchg
decb
push
cmp
mov
lret
lods
adc
mov
loop
loope
or
adc
jns
test
popa
xor
pop
cwtl
js
aam
dec
cli
cltd
cld
insb
sbb
sahf
sbb
nop
insl
je
insb
rcrl
cmc
add
jle
fs
sub
repz
mov
into
sbb
arpl
pop
je
dec
inc
mov
jp
in
sub
test
push
xor
pop
xchg
loopne
in
ret
and
test
mov
xchg
sub
test
or
shl
mov
and
adc
pop
sbb
mov
push
inc
test
test
adc
repz
ret
popa
mov
xor
roll
ja
sbb
dec
dec
sbb
xchg
inc
dec
mov
js
pop
cmp
movsb
mov
and
js
inc
sbb
je
sti
or
push
call
push
xor
xchg
in
adc
mov
push
insb
mov
sbb
shlb
icebp
adc
repz
jb
mov
lock
xor
enter
cmp
pop
das
mov
out
fstpt
jno
stos
orl
fs
add
cmp
dec
test
xchg
mov
mov
icebp
or
scas
jp
loope
outsb
adc
mov
mov
lods
pushf
je
test
aaa
mov
decb
test
add
pop
fs
repnz
or
push
pop
dec
pop
cmpsl
orl
movsl
jg
sti
fwait
push
outsb
rorl
adc
loope
adc
or
jge
cs
adc
jns
ljmp
test
mov
jns
dec
loopne
inc
sub
jb
in
and
sbb
or
pop
and
sub
js
rcr
sub
stos
cmp
lock
call
dec
and
pop
push
mov
add
fisubrl
sub
cli
outsl
cli
xchg
fwait
arpl
test
lret
jae
imul
adc
test
testb
mov
cltd
std
lods
incb
ss
mov
mov
mov
test
jae
push
mov
pop
aad
movsw
inc
add
popa
mov
and
inc
xchg
cli
fucom
mov
pop
fnstenv
sub
repnz
jo
mull
dec
inc
lret
adc
lea
movsb
out
mov
iret
into
pop
or
xchg
aaa
mov
push
enter
jb
rclb
mov
inc
inc
pop
cmc
andl
cs
movsl
xor
cltd
lret
out
repnz
pop
mov
out
sahf
sub
and
add
jb
aam
cmp
stc
jecxz
sbb
pusha
call
mov
fcomps
cli
cmovbe
test
inc
inc
pop
xchg
dec
dec
popf
les
std
addr16
out
adc
repz
adc
cmpb
fdivs
testb
jl
out
lock
push
popf
nop
inc
loop
jg
stc
andb
mov
stos
enter
int3
shr
adc
or
lods
scas
mov
test
fnsave
mov
push
stos
ds
outsl
cmp
mov
pop
pushf
xor
icebp
xchg
outsl
fidivrl
test
adc
movsb
aaa
sti
dec
loope
push
aad
sub
sub
divl
xchg
push
cld
and
sub
push
push
and
mov
bound
ret
mov
in
xorl
in
popa
cmp
jp
dec
jmp
jp
jno
lds
cltd
sub
xchg
add
dec
and
push
into
lahf
aas
sbb
mov
call
jecxz
sub
add
mov
pop
sub
jno
std
test
mov
loopne
lcall
sbb
pop
xor
or
outsb
mov
adc
mov
out
cmp
aas
mov
lock
in
data16
icebp
push
push
jne
pushf
xchg
xor
xor
sub
xchg
daa
push
and
jecxz
push
jg
lcall
faddl
in
dec
xchg
push
stos
jp
mov
or
mov
into
push
or
mov
inc
outsl
push
out
popa
loop
lahf
out
insl
push
xchg
mov
inc
fmull
sbb
das
or
mov
pop
xchg
sbb
mov
out
rol
bound
and
fs
mov
mov
lock
sub
xorl
movsl
dec
pop
enter
or
and
jae
rorb
iret
xchg
hlt
shlb
jb
push
add
lea
arpl
movsl
ja
rolb
loop
fildl
and
repz
nop
imul
dec
push
scas
adc
popa
push
jnp
sarl
stos
loop
loopne
mov
xlat
and
mov
cmpsb
sti
mov
and
push
sub
mov
loop
mov
and
and
mov
push
jae
enter
mov
pushf
aam
adc
fwait
sub
enter
xchg
xor
data16
andb
rcll
scas
es
or
xchg
out
je
pop
or
cmp
cmp
mov
pop
or
lret
jmp
xor
push
inc
lahf
mov
repnz
jg
les
mov
mov
xchg
cmp
leave
ret
inc
cmp
ljmp
mov
loop
or
and
mov
ljmp
ret
negl
ja
cmp
imul
jnp
shlb
or
push
dec
stc
add
stos
xchg
xor
es
fldl
movsb
xor
fdiv
repz
xchg
xchg
mov
ss
or
std
cmp
xor
jl
and
ffree
shll
mov
xchg
cmp
jl
fcoms
aas
movsl
xor
fs
pop
cmc
or
and
movsl
cmp
lods
mov
fcmovnbe
sbb
push
sub
popf
shlb
fisubs
jmp
repz
das
lods
mov
js
in
jle
sbb
and
or
mov
in
mov
sbb
add
icebp
cs
lock
sbb
xchg
sub
rorl
call
or
or
mov
cmpsb
dec
xchg
jecxz
sbb
lea
lret
fbld
std
cmp
mov
hlt
sbb
sbb
in
pop
test
stc
push
cs
fcoms
inc
push
mov
pop
xchg
lret
pop
cmp
out
mov
ss
call
out
mov
xor
sub
push
mov
push
and
loope
xchg
add
mov
out
and
dec
aad
in
dec
aaa
dec
pop
je
sub
jmp
or
xor
dec
roll
test
dec
lret
lcall
add
mov
scas
pop
jo
pop
mov
mov
jo
jmp
fisubrl
add
mov
fwait
test
jmp
icebp
outsb
mov
mov
jl
add
pop
xchg
dec
cmp
int3
shl
aad
mov
mov
and
and
xchg
rorl
and
std
lret
push
cmpsl
test
out
or
adc
mov
popa
aaa
lret
sub
mov
leave
andb
ret
pop
xchg
bound
cltd
jb
and
add
inc
xchg
jbe
rcrb
cmpsl
cmc
nop
clc
xchg
mov
out
xor
xchg
adc
or
cmp
push
idivb
mov
int3
jg
and
rcll
or
popw
in
inc
or
push
sub
lds
sti
pop
or
out
stc
pop
xor
leave
lods
xchg
fimuls
xor
push
jbe
xor
xchg
inc
and
mov
push
es
cmp
aam
idivb
nop
push
clc
ljmp
and
stos
shr
arpl
and
ret
xchg
push
mov
fcmove
jecxz
ret
call
mov
mov
fwait
mov
lods
jns
inc
sahf
sbb
fstpt
jo
lret
int3
stos
push
ret
mov
mov
or
stc
mov
cmp
adc
shrl
jl
mov
js
repz
pop
add
pushf
les
jo
test
inc
lcall
loopne
sub
cmp
arpl
jb
repnz
cmp
mov
sub
shll
mull
popa
sbb
repz
scas
fidivs
push
repz
mov
ss
cli
xchg
jnp
push
in
dec
sbb
movsl
nop
fidivs
shrb
pushf
sub
addr16
pop
repz
mov
jo
pop
in
push
cmp
pop
xchg
pop
repnz
je
arpl
gs
imul
popa
ret
add
pusha
push
and
imul
cwtl
sbb
xor
adc
adc
mov
jae
int3
sub
stos
cmp
mov
into
adc
cmpsb
lock
push
fbld
add
ffreep
loope
ljmp
add
xorl
cmp
shlb
aam
mov
enter
xchg
pop
mov
cmp
xor
jle
lahf
mov
and
dec
loopne
les
pushf
test
xchg
out
aam
ja
mov
adc
jp
mov
cmpl
ljmp
aaa
adc
adc
stos
mov
fsubrs
xchg
jp
adc
je
mov
sbb
cmp
mov
pusha
cmp
lahf
daa
fdivrp
inc
xlat
sub
lds
sti
mov
push
ljmp
mov
shr
clc
cmpsl
mov
imul
icebp
popa
xchg
xor
pop
xchg
jo
cmp
or
fisubrl
rcrb
adc
sbbl
es
shlb
lret
mov
in
jg
shll
in
insl
cmp
and
pop
ds
lea
xor
dec
push
xlat
repz
add
incb
add
stos
xorb
lret
cli
xchg
arpl
fstl
incl
mov
mov
sbbl
jno
sub
xor
shlb
mov
pop
aad
mov
jmp
rolb
mov
fistl
cwtl
loop
mov
add
inc
andb
pop
std
adc
xor
xorl
loopne
push
sbb
mov
cltd
xchg
rcrl
divl
outsb
fbld
sbb
jb
pop
adc
testl
pop
mov
push
fstpt
in
mov
xchg
cmp
out
xchg
shlb
cwtl
push
ja
pusha
aaa
fldlg2
inc
test
shll
popa
jg
xor
sub
ljmp
in
pop
push
cmc
xchg
cmp
mov
clc
cmpsl
ret
push
add
scas
pop
daa
les
pop
es
or
rcrb
mov
push
lods
loope
inc
imulb
push
sti
fwait
and
cmp
or
inc
push
pminsw
jg
inc
fs
mov
std
xchg
mov
js
jmp
pop
icebp
dec
mov
cmp
mov
push
shll
std
rol
shlb
rclb
hlt
mov
push
jmp
push
mov
pop
jg
dec
jbe
out
push
lret
add
lahf
jae
mov
xor
or
mov
repnz
mov
pop
test
push
jb
cmp
push
out
pop
fisttps
push
addb
adc
insl
or
cmp
jmp
or
mov
f2xm1
out
call
outsl
out
xchg
aad
add
aaa
into
jno
scas
inc
aam
pop
mov
mov
ljmp
lret
bound
movsl
cmp
add
lahf
jb
dec
loopne
out
outsb
xlat
das
jp
lahf
fidivl
dec
jge
inc
xor
push
test
mov
push
icebp
pop
push
out
dec
push
sbb
lods
xchg
cmpsl
push
ljmp
xor
out
jg
mov
lcall
out
jmp
and
push
ja
inc
cmp
pushf
scas
movsl
cli
xchg
sbb
add
aas
cmp
xchg
lea
cvtps2pi
jl
push
or
inc
aad
call
jb
ljmp
js
dec
bnd
aad
xchg
repz
sub
push
repz
mov
repz
or
fs
xor
fmulp
movsb
mov
js
sub
jbe
inc
imul
dec
xor
dec
mov
sbb
add
jb
fwait
or
jns
xchg
clc
push
ljmp
pop
les
sub
cmp
sub
xor
pop
xchg
mov
pop
mov
jp
sbb
push
dec
pop
mov
addl
mov
roll
xorl
mov
sahf
mov
push
add
fwait
clc
push
mov
and
mov
cmc
addr16
or
orl
ret
into
lods
in
jg
imul
adcl
pusha
int
repnz
lea
arpl
jg
jbe
cmp
and
xchg
mov
inc
dec
fdiv
jns
mov
jnp
les
jo
add
mov
sbb
aaa
in
ds
inc
lock
xor
cld
mov
xchg
push
mov
pop
jecxz
inc
in
out
pop
push
adc
movb
mov
cmp
sbb
push
push
lret
popf
dec
pushf
xchg
cmpsb
mov
outsb
test
cmp
jns
cmc
push
pop
fistps
arpl
push
repz
imul
fs
xchg
dec
filds
out
int3
ljmp
scas
xor
mov
mov
or
gs
insl
mov
dec
pushw
fwait
lahf
sub
cltd
jl
lret
sti
movsl
fucomip
fdivs
dec
mov
scas
enter
mov
lods
out
lods
mov
cmp
and
jo
sbb
test
insb
add
leave
je
les
jb
sarl
mov
sbb
push
cmpsb
ss
insb
add
aaa
daa
ss
enter
scas
mov
ret
xor
mov
out
pop
pushf
adc
lea
sub
sbb
xor
xchg
insb
jle
xchg
mov
outsb
imull
pusha
notb
mov
sub
push
sub
jo
sbbl
std
inc
loopne
jno
jns
dec
stos
sbb
adc
pop
hlt
movsl
or
fistpll
dec
mov
dec
mov
idivl
jp
or
enter
mov
cltd
das
pop
insb
inc
ficomps
pop
je
mov
mov
stc
subl
sbb
popw
rcrl
pop
add
je
cmp
and
cmc
dec
outsb
xor
mov
xchg
out
orl
or
movsl
and
jnp
scas
mov
inc
test
xchg
sti
adc
cli
aam
lret
es
pop
test
es
xchg
sarb
pop
cmc
pop
inc
mov
pop
out
jl
lods
in
es
xor
sbb
cmp
add
sbb
xor
testb
fistl
mov
int3
loop
cld
in
mov
out
adc
shll
jmp
es
sbb
imul
pusha
cli
sbb
or
movsb
das
adc
inc
loopne
pop
in
scas
inc
dec
aaa
xor
movsb
aaa
adc
lret
cli
sbb
repnz
push
aam
mov
mov
sti
mov
adc
jecxz
aas
dec
inc
inc
stos
jg
fsubr
lds
insl
mov
xor
mov
mov
insl
scas
lds
bound
mov
or
adc
push
jmp
scas
add
mov
sub
mov
inc
jge
iret
sub
pop
pop
and
pop
dec
add
lret
int
push
and
add
mov
movsb
das
icebp
xchg
dec
mov
jl
adc
jbe
aam
cmp
testl
xor
addr16
xchg
dec
sub
add
fs
inc
fdecstp
pop
dec
push
push
ret
test
sbb
ss
jecxz
or
lahf
pusha
adc
sbb
and
movsb
mov
fidivrl
in
mov
sbb
add
rcr
and
add
pop
jge
jbe
cmp
xor
pop
inc
fldenv
out
in
insl
stc
pop
jne,pn
ffree
lea
call
or
add
cmp
xchg
leave
pop
lret
mov
insl
aad
and
jg
xchg
dec
jecxz,pn
je
add
pop
jb
xlat
cmp
scas
ljmp
test
cli
and
movsb
sbb
mov
mov
into
lcall
dec
mov
cs
xchg
sub
hlt
je
mov
rorl
dec
jg
pop
and
jge
icebp
pop
test
add
xchg
xchg
aas
and
sbb
push
shl
mov
xchg
sub
scas
pop
adc
test
je
popf
adc
bound
push
mov
in
push
push
mov
sbb
lahf
scas
mov
outsl
ret
pop
pop
aas
push
aam
sbb
xchg
ret
cltd
dec
push
cwtl
pop
repz
mov
lahf
aam
lock
xor
and
iret
mov
adc
pop
xor
cmp
repz
int3
xor
ficoms
jmp
test
jp
dec
mov
or
adc
inc
inc
outsl
or
out
cmp
inc
out
adc
ja
mov
add
into
sub
call
scas
jo
jnp
push
dec
jp
jle
xchg
mov
fwait
pop
jbe
test
lock
cmp
dec
sbb
divb
xchg
fidivl
adc
mov
inc
mov
gs
adc
cmp
ret
dec
dec
rol
imul
push
jle
cmp
jl
fnstenv
ljmp
clc
fcmovu
movsb
jl
repz
in
repz
iret
data16
pop
ret
sti
cmpl
test
jb
negb
hlt
ja
cwtl
xor
in
xchg
das
jne
dec
mov
add
inc
sbb
aad
cmpsl
fsubs
outsl
sahf
or
mov
iret
and
or
test
jle
push
iret
push
mov
push
loop
sti
mov
push
neg
jmp
not
test
iret
lods
inc
andl
sahf
call
inc
gs
lret
aam
push
gs
mov
sbb
jo
adc
pop
mov
adc
fmulp
test
lret
lret
jl
cmp
sbb
int3
fmuls
fwait
jl
mov
mov
arpl
push
call
xor
mov
ds
fs
push
popf
daa
xor
aaa
outsl
jae
lods
mov
int3
pop
cmp
jl
pop
int3
dec
and
fs
and
out
xchg
notl
sub
xchg
xor
jmp
mov
sub
mov
lret
cmp
mov
xchg
fdivrl
test
jb
int3
leave
pusha
pop
roll
inc
pop
sub
ss
out
es
adc
xchg
dec
out
ss
lahf
imul
inc
subl
lods
inc
shlb
or
pop
lea
clc
jbe
outsb
popa
jnp
pop
test
mov
or
add
nop
out
ret
insb
xchg
repz
dec
jbe
out
push
and
xlat
mov
push
test
addr16
sbb
lods
je
mov
insl
mov
push
aas
inc
adc
out
mov
or
adc
fisubl
push
push
cltd
mov
add
fcomps
pusha
daa
or
ss
cltd
sbb
sub
xchg
push
mov
pop
xor
test
add
sbb
daa
push
repnz
stos
sub
fistps
ss
jle
mov
pop
push
scas
in
stos
sub
mov
push
xor
add
jmp
sbb
in
pop
popf
cmp
dec
mov
add
movsb
rorb
jecxz
rorl
lods
mov
inc
lret
inc
mov
push
jne
jbe
in
and
xor
xchg
bnd
push
out
xchg
pop
fiaddl
cmp
negb
sbb
idivl
pop
outsl
icebp
insb
inc
clc
mov
add
aam
out
jo
push
cmp
xchg
sub
lahf
fcompp
mov
jae
imul
mov
mov
add
notb
scas
mov
jb,pn
mov
dec
cld
push
pushf
and
mov
in
mov
cmp
fs
dec
mov
push
jnp
leave
and
add
je
aas
sub
negl
mov
jge
cmpsb
xor
icebp
or
cli
lock
rcrl
fisubl
jbe
xlat
frstor
movsb
pop
mov
xor
cwtl
cmp
cwtl
mov
xor
addb
mov
pextrw
pop
push
and
xchg
div
pop
push
adc
and
rcrl
jmp
in
ja
jp
inc
mov
andb
sub
push
pop
movb
xor
jmp
xlat
xchg
lret
lea
mov
jmp
xchg
popf
add
cmpsl
xchg
scas
movsb
or
cmpsl
stos
popf
out
mov
mov
test
movsb
mov
imul
mov
insb
jmp
sub
mov
push
mov
shll
out
fidivrs
and
inc
psrad
mov
ret
out
pop
filds
jnp
scas
jno
sbb
jp
jmp
lret
ds
jae
cs
jl
aaa
pop
xchg
push
aam
in
jne
cmpsb
push
push
adc
sbb
add
adc
inc
pslld
xchg
xchg
mov
popa
adc
test
cmp
xchg
push
add
enter
sbb
xchg
and
ffreep
mov
dec
mov
dec
push
shrl
inc
inc
adc
cmp
clc
sbb
mov
xchg
popa
std
xchg
fwait
sahf
mov
jle
or
or
fdivrl
cltd
inc
cltd
nop
mov
imul
pop
ret
divb
pop
mov
and
xor
outsl
stos
and
aaa
push
mov
repnz
and
adc
push
jge
and
aam
lods
push
pop
or
and
mov
ret
stos
aaa
dec
lahf
adc
ds
cmc
xor
loop
jmp
pop
xchg
xchg
pusha
mov
mov
fistpl
dec
xchg
aam
lcall
add
xchg
insl
pop
inc
outsb
adc
push
jns
aaa
add
shll
loopne
or
ja
lret
out
dec
in
insb
pop
push
testl
push
fwait
xchg
jge
inc
loope
jp
cmp
dec
nop
lods
out
sahf
stos
pop
mov
loope
out
stos
dec
repz
or
mov
inc
aas
push
mov
jae
xchg
pop
icebp
jp
lods
sub
out
popa
xor
testl
nop
add
in
ljmp
jecxz
push
cmp
jecxz
sub
fistps
jns
dec
pop
dec
cmp
adc
pop
mov
dec
pop
cmp
xchg
add
mov
mov
adc
xor
xor
aad
xchg
lods
xor
pushl
rcrb
nop
lock
push
stos
stc
push
in
movsl
sti
jbe
dec
push
or
jo
pop
adc
xchg
bnd
sub
push
or
ja
popa
sub
xchg
xchg
divb
fwait
fwait
dec
inc
inc
mov
movsl
inc
cmpl
fidivrl
cltd
mov
mov
lret
jle
iret
cmpsl
sub
in
nop
mov
cmc
daa
cmp
fcomip
mov
mov
adc
stos
flds
add
clc
aas
push
mov
leave
out
mov
fsub
imul
add
dec
xchg
in
mov
sbb
add
insl
jge
repnz
inc
sbb
loop
pop
pushf
push
imul
push
enter
xchg
outsb
fidivs
aaa
aad
movsl
mov
sbb
add
ficoml
pop
fnstcw
jecxz
jmp
lock
xor
mov
jg
js
in
shrl
fs
imul
wbinvd
les
ljmp
lds
imull
iret
lods
sub
push
adc
or
fldl
sbb
mov
imul
insl
fldl2t
add
and
mov
test
jl
ficoms
mov
mov
stos
push
and
adc
jecxz
or
lock
rcll
int3
lret
push
fisubs
fdivl
jg
adc
lcall
mov
and
sbb
mov
in
mov
mov
fcmovnb
movsb
add
out
add
stos
addb
sub
push
xchg
lcall
insl
mov
jg
xchg
pop
pop
cmp
pushf
int3
pop
dec
sbb
jl
ret
movsb
fdivrl
and
xchg
push
into
enter
cmp
inc
stos
sub
mov
or
imul
fiaddl
adc
lea
mov
xchg
fs
jp
fldcw
mov
pusha
mov
fmul
xor
and
jmp
lcall
repnz
shrl
outsl
ja
loopne
ret
jecxz
jl
xor
sub
fcoms
mov
test
xchg
jmp
leave
adc
mov
arpl
mov
jecxz
enter
scas
movsl
dec
inc
lea
pusha
mov
out
cmp
sub
mov
mov
jno
adcl
and
pop
call
lcall
fistpll
adc
lret
mov
and
lds
and
daa
mov
mov
dec
sar
loop
arpl
add
subl
add
add
xchg
pop
adc
iret
mov
cs
jecxz
xlat
mov
cmp
ss
xchg
xchg
rcl
repnz
push
push
das
les
mull
enter
test
mov
inc
push
xchg
jns
mov
jno
xor
mov
ljmp
sbbb
mov
outsb
inc
or
xchg
sbb
dec
mov
addl
push
inc
jle
add
les
jp
fwait
clc
jp
loopne
xchg
jb
adc
sahf
push
lcall
scas
daa
add
imul
xchg
mov
jo
mov
mov
or
fwait
mov
ss
mov
cmpl
cltd
or
or
mov
test
sbb
test
rclb
pop
mov
loopne
jnp
cmpsb
enter
pop
imul
fsubrp
xchg
faddl
jle
mov
sbb
ss
outsl
jns
xor
and
cmpsl
les
shlb
mov
xor
sahf
jmp
andb
fcmove
js
add
fnstenv
arpl
mov
popa
sbb
out
mov
insl
push
inc
pop
leave
xor
lea
adc
or
xor
push
shl
loopne
push
push
in
icebp
xchg
or
jp
jecxz
test
stc
daa
cwtl
dec
and
das
fucomp
mov
xchg
decb
or
dec
mov
addb
nop
aam
inc
call
notl
cmpsl
pop
mov
and
push
and
cmpsb
push
inc
jmp
pop
xor
push
xchg
jb
js
out
sbb
mov
inc
loopne
imul
push
filds
sub
xor
in
inc
or
lahf
sbbb
lret
or
mov
mov
xchg
enter
jl
lcall
push
adc
xor
rclb
leave
mov
shll
hlt
sahf
xor
popl
mov
cmpsl
jle
pop
fnstcw
aad
leave
pop
test
lret
data16
sbb
add
into
outsb
icebp
xchg
aas
jp
inc
xchg
mov
aaa
into
dec
out
icebp
mov
popf
out
jno
aaa
sti
iret
mov
dec
es
push
add
or
sbb
shl
mov
fists
mov
push
icebp
fmul
imul
testb
mov
das
add
fsubrp
or
repnz
test
jb
in
mov
inc
shl
mov
add
jns
or
fdivrl
lret
lret
cmp
jmp
and
out
push
push
cs
test
aaa
aam
gs
cs
loope
enter
pop
ret
and
cli
xchg
xor
lods
sbb
cmpsb
xchg
push
sbb
ja
imul
mov
rclb
dec
out
cli
add
leave
xor
push
rcrl
adc
dec
lods
push
icebp
xor
cs
leave
aaa
inc
inc
imul
loopne
ret
xor
xchg
dec
test
sub
movsl
mov
xchg
xlat
pop
out
add
xor
mov
sahf
and
add
or
lcall
cmp
cmc
sub
lahf
lahf
cmp
insl
cwtl
sub
cli
mov
fsubr
pop
xlat
mov
inc
lret
and
cld
lcall
dec
fiadds
test
cld
fldcw
adc
lock
gs
movsb
inc
xchg
inc
pushf
jmp
xor
xchg
outsb
xchg
mov
cmp
adcb
sub
xlat
mov
mov
pushf
arpl
sbb
fsts
cwtl
lds
test
aaa
mov
pop
repnz
lods
std
arpl
ja
pop
jg
push
mov
nop
adc
les
lcall
push
out
sbb
dec
leave
pop
outsb
add
jnp
lea
or
jo
aam
pop
mov
minps
xchg
subl
and
setae
sarb
mov
pop
pop
fsubrs
sbb
out
sbb
hlt
mov
xchg
or
mov
outsb
adc
sub
inc
pop
outsl
inc
fwait
sbb
pop
xor
inc
fisubs
les
jle
loope
mov
lea
and
xchg
fnstsw
jnp
int
sub
mov
cmp
cmp
jnp
aas
sub
jl
fbstp
lds
mov
mov
inc
xor
insb
aas
sub
stc
in
das
mov
xchg
sbbb
sahf
in
stos
dec
je
or
inc
loopne
stos
push
jmp
ret
dec
and
xchg
iret
mov
icebp
lods
insl
xor
pop
adc
jae
cmp
jecxz
faddl
sub
dec
mov
push
mov
lea
insl
neg
mov
mov
dec
jo
inc
cmpsl
sbb
out
repnz
insb
ja
sahf
fwait
pop
adc
xor
xlat
cs
dec
mov
repnz
lret
push
cltd
or
leave
adc
shl
or
in
xchg
mov
mov
push
lods
jne
test
xor
and
jns
pop
jmp
pushf
xchg
imul
rcll
test
pop
adc
push
xchg
insl
pusha
in
xor
or
leave
jp
cmp
and
push
push
sarl
roll
or
inc
jg
sub
loop
psrad
negl
cmp
addr16
mov
jnp
and
xchg
insb
pop
xor
dec
push
push
mov
sahf
clc
xor
subb
cli
ljmp
cwtl
stc
sbb
pusha
pop
or
dec
pushf
stos
sar
jne
push
mov
lahf
leave
xchg
sub
shrb
or
pop
int
add
xchg
sub
fimull
dec
leave
mov
pop
sub
jno
mov
and
clc
dec
dec
cmp
push
hlt
repz
rorb
jl
out
lods
xor
xor
or
movsb
jb
mov
ret
shll
mov
and
add
pop
test
push
pop
xor
mov
add
sahf
mov
loopne
cmpsl
push
pushf
jl
mov
inc
fldcw
fs
fstps
popf
pusha
mov
test
mov
xchg
adc
punpckldq
mov
call
inc
lds
gs
rcll
mov
and
xchg
jbe
shlb
movsb
sbb
cmp
ja
aas
loopne
pop
add
push
fstpt
inc
jl
inc
pop
popf
int
mov
mov
mov
cmp
mov
xchg
imul
sbb
push
mov
insb
fs
iret
jg
test
shrd
lock
lret
add
cwtl
das
cmpsl
cmp
jbe
enter
push
mov
and
outsb
lods
inc
scas
mov
hlt
mov
or
adc
push
sbb
repnz
pop
dec
xlat
es
inc
or
ss
mov
pushf
scas
pop
repnz
pop
gs
pop
jmp
lea
xor
fdivr
mov
xor
sbb
lret
inc
fsubs
cmp
inc
or
push
lods
test
add
and
pop
fistl
fsubs
aas
pop
xor
sbb
std
jb
enter
push
test
shlb
stos
cmp
lds
cmc
cmc
mov
pop
sbb
cmp
xor
fldenv
jne
bound
stos
lret
xor
fildll
sub
addb
test
lret
mov
mov
or
xor
adc
lock
cmpsb
or
notb
add
mov
inc
in
in
sti
and
insb
mov
call
out
das
mov
jecxz
sbb
xchg
dec
enter
add
push
push
sbb
nop
das
mov
adc
in
push
mov
add
js
sbb
add
sub
sbb
push
lret
fidivl
faddl
mov
jmp
inc
int
adcb
pop
fs
pusha
and
pop
and
mov
daa
mov
jbe
cwtl
popl
cltd
mov
or
fiadds
imul
jge
ja
mov
ret
xchg
add
sbb
sbb
or
sub
xchg
shl
xlat
dec
mov
in
stc
data16
ret
fstpl
or
jg
adc
mov
xor
mov
mov
mov
mov
pop
xchg
mov
xor
jl
push
mull
movsb
xchg
sbb
mov
inc
jae
xchg
xor
popf
in
fiaddl
xchg
in
lock
adc
mov
mov
and
xor
ficoms
inc
fisubrs
ss
dec
mov
push
push
rolb
jb
xchg
pop
lods
xor
and
sahf
clc
mov
sbb
jmp
jmp
inc
pop
aam
cmp
mul
mov
adc
data16
rclb
hlt
pop
cmp
fidivs
lds
outsl
leave
loop
notb
add
push
in
xor
fs
js
xchg
lahf
in
jns
rorb
mov
lods
sub
fdivp
das
data16
pop
xor
sti
jbe
sbb
mov
shll
xchg
or
push
xchg
rcl
popf
clc
fsts
jg
lock
push
and
lea
mov
add
neg
lods
and
popf
dec
cli
jle
jo
xchg
dec
movsl
out
test
fdivrs
pop
paddusb
ljmp
shrb
jbe
mov
push
push
popf
mov
mov
call
mov
test
lea
pushf
leave
jecxz
adc
repz
sub
push
xor
je
cmp
addl
xchg
xor
add
notl
jb
int3
fisubrs
int3
xor
pop
outsl
jbe
push
jecxz
lcall
sbb
pop
mov
cmp
sub
movsb
aas
sbb
vhaddps
cli
orl
xor
ljmp
cltd
inc
xchg
mov
inc
fbstp
dec
jne
test
push
aad
or
adc
sub
pushf
test
test
stos
lcall
cmpsl
mov
xor
sbb
pop
jno
jne
int
cmp
pop
inc
gs
ret
ja
sbb
cwtl
test
sub
bound
mulb
adc
fsubr
pop
setp
ss
sbb
add
rorl
pop
cli
into
add
loop
and
dec
insb
scas
sarb
lods
lret
inc
fnstsw
fdivrs
into
add
test
movsb
pop
subl
mov
mov
dec
inc
sbb
mov
mov
cwtl
sbb
mov
push
xor
mov
dec
shl
in
cmp
ds
sub
fisttpll
push
outsl
mov
mov
lret
mov
aad
and
lcall
cmpsb
ljmp
cltd
leave
mov
or
push
or
inc
loop
inc
outsl
jnp
or
mov
std
adc
or
add
xchg
push
push
jmp
jmp
es
mov
shlb
jae
mov
push
push
ja
push
cmp
test
inc
fidivl
mov
jne
je
sti
mov
push
mov
mov
sub
subl
lcall
xor
mov
sbbb
mov
mov
inc
pushf
test
pop
and
jg
xchg
mov
cmp
push
repz
mov
cmpsb
sub
xchg
lods
jnp
push
pop
jae
or
imul
or
cli
test
andl
push
sub
clc
psraw
cwtl
xchg
inc
fdivrl
adc
mov
jmp
mov
jo
mov
popa
out
mov
jle
xchg
lods
lds
js
hlt
and
push
xchg
cld
mov
clc
add
adc
lds
jns
frstor
sti
push
dec
movsb
inc
fs
imul
push
mov
dec
cmc
mov
adc
jno
xchg
sbb
push
je
in
push
sbb
test
dec
or
add
clc
cmpsl
or
iret
sbb
sub
bound
int3
ss
das
cmp
jg
mov
add
hlt
andb
or
test
cltd
ror
dec
pop
and
inc
daa
es
sbb
jne
xchg
xchg
xchg
fcmovb
loope
xchg
adc
and
mov
add
pop
cmp
mov
lret
pop
xchg
testb
sbb
pop
ret
adc
fisubrl
in
test
jle
test
outsb
rcr
jne
inc
js
loopne
xchg
push
popf
lock
mov
ja
cltd
sbb
inc
or
out
mov
paddq
pusha
sbb
mov
cmp
jne
pop
scas
xor
lods
ljmp
add
repz
push
out
cmpl
cmp
outsb
std
mov
xor
les
mov
xor
mov
lds
out
cld
dec
sti
inc
fsubr
jp
call
pop
cmp
cld
lcall
cmpsb
sub
fidivrl
cmp
xchg
lods
push
push
and
notb
in
add
popf
iret
mov
scas
xchg
jecxz
fbld
stos
mov
xchg
mov
pop
out
movsl
jnp
sbb
mov
stc
sbbb
out
mov
cmp
ss
add
nopl
out
sti
sbb
jo
mov
mov
xchg
push
xchg
movsb
dec
out
out
push
cmp
outsb
jno
rcrl
je,pn
pop
add
test
mov
mov
je
pop
out
leave
loope
add
mov
les
addb
in
sbb
enter
nop
mov
in
pop
dec
fldl
hlt
addr16
sub
dec
shl
sbb
jecxz
shl
cmp
xor
and
mov
inc
mov
loopne
mov
push
add
and
add
mov
pop
clc
inc
cmpsl
fstpt
stos
mov
call
jne
sbb
sahf
inc
into
inc
cmpsl
pop
lret
sar
mov
movhps
divb
popl
pop
push
popf
nop
pop
add
and
repnz
outsl
mov
je
rclb
mov
add
mov
insl
fnstenv
std
cmp
pop
rclb
pop
sub
mov
clc
or
mov
ret
in
rcrl
iret
addb
sbb
out
and
cld
leave
ffreep
add
test
imul
adc
sbb
xor
jle
ret
fldt
movsb
enter
scas
ret
or
ret
int3
rcrb
clc
xchg
out
aaa
movsl
push
inc
ret
add
sub
sbb
xor
and
gs
xor
xor
bound
pop
xchg
jle
les
pop
icebp
fisubs
jmp
ljmp
idiv
adc
decb
movsl
fnsave
lea
lods
xchg
daa
inc
fstl
ficoml
sahf
sti
or
rcr
jo
add
daa
shlb
popa
fwait
movsb
popl
sub
ja
lret
test
push
out
lock
fistpl
dec
add
negb
mov
in
sub
ret
popa
leave
mov
ljmp
scas
ret
push
int3
adcb
jg
jbe
sbb
or
fidivrl
and
fs
mov
inc
in
jb
subl
call
inc
fadds
fwait
scas
jns
and
popa
xchg
repnz
mov
ret
ficomps
mov
arpl
pop
mov
arpl
pushf
and
sbb
ret
test
pop
dec
bound
mov
lods
ja
mov
dec
mov
inc
mov
push
inc
or
repnz
gs
adc
aas
lock
mov
nop
add
loope
outsb
or
imul
rcrl
add
push
ret
sbb
push
push
sarb
mov
outsb
pop
xor
lret
inc
clc
loopne
sub
imul
inc
iret
idiv
loop,pt
pop
sub
push
outsb
xor
js
dec
out
cmc
inc
jns
sbb
scas
and
cltd
sbb
dec
and
les
or
jl
fisubs
jns
or
mov
repnz
jnp
mov
cmp
std
xchg
sub
push
fmull
cmpsb
jns
sbb
mov
inc
in
cmc
push
push
adc
add
sbb
lds
pop
mov
cmpsl
popf
xor
in
mov
ds
std
xchg
jge
push
stc
outsb
sahf
sbb
pushf
fs
dec
gs
mov
mov
mov
mov
movsb
negb
pop
sahf
dec
sbb
mov
and
xorl
frstor
cwtl
mov
cmp
xor
mov
int3
cmpsl
inc
testl
ja
lods
lret
hlt
adc
or
icebp
int3
and
testl
dec
xorl
scas
fsubrs
pop
sub
stos
xchg
popa
add
in
jge
jmp
shl
fcmovu
call
push
ljmp
sub
inc
and
fdivr
imul
lret
fdivs
pop
subl
lods
push
xor
cmp
out
mov
xchg
loop
inc
enter
xlat
mov
mov
out
gs
or
mov
imul
push
jns
ds
jp
icebp
dec
push
xchg
xchg
pop
stc
jo
subl
xor
pop
mov
aas
xor
mov
test
sub
fisubrs
ss
sub
push
mov
jns
scas
ret
sub
int
fwait
xor
adcl
outsl
subb
cli
pusha
rolb
rorb
xchg
xchg
dec
arpl
mov
mov
js
cmp
cmpsl
mov
jnp
aad
add
inc
flds
loope
mov
nop
jbe
ret
mov
dec
cs
aam
rcr
cmc
and
js
mov
push
add
shrb
ja
jnp
add
pushf
jp
xchg
dec
mov
hlt
mov
cli
adc
movsl
xchg
jecxz
cmc
dec
lret
sbb
iret
enter
rcr
pop
mov
cmpsb
leave
cwtl
and
enter
xlat
adc
push
push
js
repz
popf
jne
std
gs
into
jb
or
pusha
lret
das
push
aad
dec
mov
cld
mov
scas
cmp
lret
mov
outsl
dec
rcrb
inc
xor
lods
iret
inc
dec
jle
pushf
test
sub
aam
sub
mov
in
ss
sub
or
mov
icebp
xlat
ret
lock
or
insb
notl
lods
into
pop
or
stc
mov
fstl
inc
gs
push
dec
mov
cwtl
bound
push
mov
neg
lret
mov
xchg
mov
les
fidivl
movsl
neg
xchg
in
xchg
xor
push
aas
mov
pop
pop
stc
ss
pop
sti
bound
inc
ret
icebp
mov
aaa
pushf
loopne
jecxz
xor
shlb
in
and
mov
push
hlt
and
out
sub
mov
movsb
xor
mov
xchg
xchg
or
mov
ret
sbb
push
jmp
and
jmp
lods
popa
pop
pop
lea
jecxz
push
lret
sub
lock
mov
test
hlt
pushf
dec
in
fcoms
mov
dec
mov
mov
pop
lock
daa
fadd
jmp
push
cmp
inc
out
sti
xchg
pushf
imul
fisubrl
stos
xchg
mov
stos
ret
leave
xlat
clc
faddl
sub
adc
repz
jbe
jbe
jl
or
xchg
data16
mov
xchg
fldl
das
mov
movsl
xor
push
shl
dec
insb
add
push
lret
ret
jne
add
das
out
or
pop
xchg
sub
cltd
call
dec
mov
rclb
cli
and
mov
aaa
and
loope
lret
bound
jae
shrb
or
sub
stc
je
cmc
pop
lock
inc
scas
into
lds
rorl
icebp
mov
adc
int
add
nop
stos
adc
imul
addr16
pop
in
xlat
int
leave
mov
aad
pop
pop
or
das
xchg
leave
jns
push
cmp
cmc
outsl
jno
popa
add
adc
imul
mov
je
inc
jle
or
xorl
add
fucomip
push
xchg
shl
dec
ss
repz
in
push
cmpsl
inc
sbb
push
jp
or
aam
mov
out
loope
clc
dec
xor
xorl
nop
xchg
adc
mov
ret
dec
jno
or
test
jo
sub
cmpsl
repnz
sbb
push
lods
mov
cmpsb
jne
bound
xchg
imul
jp
ret
addr16
scas
sahf
divl
call
cmp
int3
fstpl
je,pt
bound
into
gs
popf
in
push
sahf
int
add
lock
and
mov
enter
adc
call
leave
xchg
mov
jae
sbb
xchg
mov
xlat
cmp
or
ficompl
push
add
daa
adc
push
or
mov
fscale
pop
or
mov
sbb
inc
inc
push
cs
ficomps
inc
int3
or
mov
or
xor
cmp
in
push
int3
icebp
push
and
push
xor
inc
cmp
push
ljmp
outsb
cmp
into
mov
shrl
testb
nop
adc
sar
sbb
sbb
int3
pop
jge
mov
into
mov
mov
insb
rorb
ja
loopne
stos
in
jbe
gs
dec
lcall
enter
outsl
jno
sbb
inc
test
cs
push
cs
in
push
in
movsb
dec
mov
jne
mov
lods
push
mov
sbb
mov
xchg
inc
leave
lret
xchg
pop
jecxz
out
shll
inc
jbe
mulb
leave
pop
lds
rcrl
jl
inc
sub
mov
cmpsb
xchg
or
lahf
mov
xor
int3
cmp
mov
xchg
mov
ret
dec
cmp
jge
jns
adc
mov
jg
jp,pt
dec
mov
xchg
lods
and
in
cld
iret
das
fdivrl
sub
andl
push
aam
cmp
dec
in
outsl
add
subps
xchg
out
decl
xor
gs
push
enter
xlat
push
cwtl
xor
cmp
dec
dec
inc
dec
rcrb
sarl
loope
pop
pop
adc
adc
or
dec
pop
xlat
mov
mov
pop
pop
xchg
lret
cmp
mov
dec
mov
test
or
mov
mov
int
mov
mov
std
sub
dec
enter
outsb
xlat
outsb
mov
inc
cmc
push
or
push
sbb
xor
mov
add
xor
outsb
push
pop
stos
sarl
jl
movsb
movsl
lods
inc
jno
repz
adc
pop
jae
mov
fcomp
inc
movsb
mov
mov
and
and
outsb
inc
inc
push
cmc
jo
shll
dec
lock
fsubl
jae
shr
push
sbb
dec
sbbb
jo
cmpsl
xchg
sub
dec
sbb
sub
xchg
push
cmpsb
xor
orb
fdivs
sbb
cmp
leave
or
mov
icebp
mov
mov
movhlps
cmp
outsb
pushf
cli
ret
xor
clc
or
pop
adcl
and
dec
test
push
xor
clc
popa
or
xchg
mov
dec
das
jecxz
mov
subl
mov
dec
xor
imul
mov
mov
dec
jmp
les
lret
cs
dec
dec
repz
jge
cltd
pop
mov
pop
push
repnz
push
dec
in
cmp
loop
ss
scas
xor
mov
push
out
dec
pop
lock
fnstsw
out
cltd
sub
dec
pusha
mov
fldt
bound
loop
dec
notb
jns
mov
xchg
popf
xchg
orb
sub
test
sarb
sub
mov
mov
sub
sub
xchg
fiadds
lcall
and
out
shrb
shlb
pop
rcrb
fcmovbe
fstpt
pop
jecxz
popa
test
testl
fld1
dec
xchg
jmp
or
xchg
test
lods
cli
cwtl
pop
sub
daa
cli
add
lret
sub
imul
sahf
loopne
and
push
inc
cltd
ds
xor
test
adcl
mov
imul
mov
jecxz
jne
cwtl
and
xchg
icebp
mov
scas
mov
or
xchg
lret
xor
pusha
aaa
aad
pop
or
ja
negb
pop
xchg
dec
fdivrs
es
ficoms
xor
mov
push
movsl
stos
and
scas
mov
call
out
lret
pop
lods
dec
add
mov
mov
pop
imul
stos
fcmovb
loopne
push
adc
sbb
cmc
xchg
cs
loope
or
adc
fwait
sbb
imul
fdivrp
test
cmpb
jg
sbb
ss
ret
push
pop
ret
cmpsb
xor
mov
push
pusha
xchg
clc
inc
leave
cmp
jle
clc
jae
sbb
and
divb
xchg
cmc
js
inc
shll
call
xchg
inc
pop
or
insl
mov
push
scas
gs
shrb
std
xchg
adc
add
pusha
xadd
mov
outsl
jno
push
add
out
popa
fldcw
or
pop
dec
faddp
or
pop
jne
jecxz
ljmp
cmp
fnsave
insb
cmp
je
pop
cmpsb
cmp
pop
scas
mov
pop
adc
rcll
fstps
mov
out
sub
lret
xchg
xchg
push
adc
lea
call
clc
mov
in
push
gs
iret
cmpsb
outsl
xchg
jae
leave
aas
mov
es
add
mov
test
test
sub
pop
into
cltd
cwtl
cmp
test
pop
push
pop
lods
sarb
shlb
adc
pushf
imul
pop
cmp
mov
sub
lock
loopne
pop
std
inc
push
sub
lods
cld
push
adc
adc
into
clc
xchg
mov
lods
jbe
jns
dec
movsl
push
push
push
ret
scas
hlt
push
icebp
mov
imul
stc
inc
negl
aas
jmp
xchg
iret
xchg
mov
jecxz
mov
add
mov
cld
mov
shr
jge
mov
stc
movsb
aam
rcrl
pop
push
sub
push
xchg
nop
lret
mov
sahf
cmp
aad
in
pusha
dec
jbe
xchg
das
outsl
stos
xchg
dec
test
mov
pop
dec
mov
cmp
mov
hlt
push
stos
testb
and
push
lods
fldl
mov
push
stc
lea
adc
cmp
movsb
pusha
vsqrtss
mov
inc
test
xor
sbb
je
pushl
aad
or
cmovns
mov
mov
xchg
das
fimull
jne
std
es
xor
adc
mov
adc
pusha
push
jg
push
shrb
sbb
cltd
scas
xor
push
cmpsl
shl
fdivr
mov
dec
std
ds
inc
inc
pusha
jp
pop
add
lahf
mov
xchg
and
das
cs
nop
sub
xchg
mov
scas
xchg
mov
jecxz
cmp
std
stos
scas
mov
jns
jmp
cli
arpl
sbbl
sbb
outsl
movsl
js
xchg
jg
push
jecxz
xor
andl
push
cmp
scas
mov
jmp
stos
xchg
xor
mov
lods
push
mov
ljmp
mov
jl
xchg
sbb
cmpsl
cmpsl
sub
loop
movaps
mov
in
or
pop
cmp
jbe
sub
enter
push
out
pop
mov
jb
stc
cmp
and
cmpsl
cmc
jle
jmp
xchg
pop
movsl
enter
aam
mov
xor
mov
adcb
movsl
pop
inc
fistps
std
mov
pop
mov
cmp
stos
mov
punpckhbw
dec
jno
sub
mov
rcrl
inc
add
aas
sub
xchg
push
and
insb
and
scas
jo
xchg
add
pop
in
push
mov
dec
jecxz
sub
add
and
je
inc
push
cmp
scas
sbb
add
add
inc
cmp
push
loop
fs
pop
mov
cmp
jnp
pop
jo
les
fimull
pop
push
push
jmp
data16
aaa
popf
push
or
loopne
inc
mov
mov
fimull
das
popa
and
sbb
cmp
pop
sahf
sub
call
cwtl
loopne
pop
or
orl
or
cmp
xchg
scas
mov
jmp
lods
fidivs
pop
xchg
push
sub
out
pop
aaa
mov
adc
push
outsb
add
jle
movsl
xchg
xor
fisubl
mov
rorl
cmp
mov
jg
adc
cmp
std
shr
xchg
mov
pop
dec
xor
je
or
mov
mov
data16
je
iret
mov
or
xor
jns
pushf
adc
dec
ret
sub
imul
je
in
negb
lods
mov
rclb
lret
int3
or
push
sub
insb
xor
xor
cmp
out
adc
jg
inc
in
cmpl
mov
or
pop
out
xor
jecxz
xor
pop
loopne
mov
jnp
or
lds
out
aaa
mov
out
aaa
pop
pop
dec
jmp
jp
out
jb
stos
xchg
mov
stos
adc
sub
lcall
xchg
sub
dec
sbb
mov
sbbb
jae
clc
mov
push
inc
pop
lret
xchg
stc
push
mov
xchg
push
clc
aas
xor
addb
add
xor
dec
addl
mov
or
aas
adc
cmpsb
nop
outsl
dec
mov
jl
arpl
push
pop
pop
daa
repz
std
lret
enter
add
cli
mov
and
imul
adc
jns
cmp
mov
aam
lret
add
jg
cmpsl
cwtl
cmc
inc
inc
aam
call
ljmp
arpl
add
xchg
ss
in
push
push
fs
mov
fisubs
in
dec
or
popf
xlat
cld
bswap
dec
jge
mov
insl
sbb
mov
aam
aas
in
arpl
or
cmpsb
push
jg
enter
pop
inc
fwait
lods
inc
inc
enter
push
xor
pop
addl
inc
fnstsw
xchg
sub
dec
inc
lea
js
jno
or
fdiv
fisubrs
mov
mov
lods
imul
jl
incb
and
shrl
sub
mov
leave
pop
ljmp
out
inc
and
xlat
sub
add
rcr
dec
sbb
scas
push
out
loopne
jnp
pop
xchg
ja
daa
jle
xchg
scas
inc
xchg
test
ss
adc
jne
inc
push
jbe
jmp
shrb
clc
mov
mov
xchg
cli
pop
xchg
and
pop
sbb
pop
add
fimuls
jne
daa
je
dec
into
inc
push
outsb
in
push
cmp
test
cwtl
pop
xor
add
add
lret
cwtl
mov
fwait
push
cld
repz
shlb
fs
jp
lods
jecxz
dec
lcall
cmp
fisubrl
pop
test
dec
rcrb
into
pop
and
mov
and
push
out
arpl
repnz
or
notb
jge
cld
mov
fucomp
aaa
xchg
dec
mov
xor
fdiv
mov
imulb
arpl
imul
cld
push
pop
enter
decl
sub
repnz
xor
inc
movsb
std
stos
add
xchg
push
cli
jno
push
xor
scas
inc
jbe
inc
arpl
and
lods
push
cmc
mov
cmpsl
imul
inc
sbb
push
cmpb
leave
jecxz
push
pop
call
cmp
mov
and
sub
ja
imul
fidivrl
or
xor
out
mov
inc
ljmp
mov
fwait
in
cmp
mov
inc
sbb
movsl
test
and
jge
sbb
inc
adc
loop
mov
mov
mov
fsts
lods
imul
test
xchg
int
sub
fnstsw
hlt
sub
pop
imul
xorl
stos
rorl
ds
push
xor
xchg
lock
lods
repz
push
imul
mov
xor
pop
xor
movb
xchg
ret
gs
fidivrs
mov
push
stos
mov
rclb
test
sub
aaa
or
rcrl
sub
sub
mov
lea
add
cmp
xorb
repz
aas
lea
addl
ret
lock
std
in
pop
and
push
fadd
stc
push
cltd
sub
push
ljmp
cmp
and
xor
imul
stos
push
shll
inc
repz
jne
nop
clc
xchg
inc
bnd
sub
pop
xchg
outsl
or
int
and
rol
icebp
jmp
or
out
xchg
fdivs
mov
leave
loope
dec
nop
das
rcll
insb
das
data16
cwtl
data16
fidivl
dec
data16
mov
or
enter
into
out
jno
es
mov
xor
loope
dec
iret
bound
push
in
pop
sbb
ss
out
out
int
inc
xor
or
sub
dec
add
sub
xchg
push
mov
inc
repz
sub
xchg
xor
dec
cld
pop
rolb
stc
lret
pop
jne
stos
mov
mov
pop
lcall
daa
cmp
test
fnstsw
andl
shrb
pop
jl
inc
jmp
add
mov
xorl
insl
addr16
pop
arpl
gs
mov
adc
shr
fidivrs
adc
push
push
sub
push
out
xor
shlb
rorb
enter
daa
leave
xor
and
inc
mov
and
lods
cmp
or
mov
notb
mov
jp
jp
iret
pop
repz
out
xchg
inc
sub
cli
sbb
ja
shll
insl
in
in
jb
push
inc
fadd
mov
loop
scas
mov
inc
int
xchg
notb
lods
fdivl
loope
mov
dec
cs
in
test
popa
mov
mov
xchg
shl
add
or
test
subb
mov
xchg
lods
popf
jmp
jnp
or
xor
adc
mov
sbb
out
mov
into
jno
sub
ja
jge
stos
stos
add
cmp
stos
incl
in
sti
mov
negl
jne
adc
and
xor
inc
pop
push
sub
fwait
xor
xchg
push
aas
xchg
repz
fdivs
hlt
in
outsb
out
inc
icebp
cmp
mov
das
ret
lret
mov
lods
lea
fsubrs
fcomps
pop
xchg
shl
mov
sub
adc
mov
push
dec
sahf
sub
jl
pop
push
add
mov
jae
pop
in
push
cltd
je
mov
cltd
out
stc
push
popa
and
mov
repz
and
mov
nop
std
push
mov
push
je
mov
push
mov
enter
sbb
decb
mov
mov
filds
pop
movsl
push
sub
call
push
mov
pop
ljmp
mov
ret
pop
pop
icebp
xchg
bound
test
scas
in
lock
jbe
mov
adc
aaa
push
mov
pop
xchg
es
fstps
movsb
and
adc
imul
inc
scas
add
or
repnz
imul
dec
push
fs
mov
mov
loope
stc
es
lret
mov
les
mov
lret
xchg
adc
sub
pop
shl
push
pop
clc
pop
insb
and
loop
or
sub
lret
inc
int3
fistpl
xchg
and
mov
popa
cmp
pushf
dec
int
daa
lret
rcrb
inc
das
adc
int3
mov
into
sub
lods
xchg
add
pop
push
int3
test
dec
lock
lea
mov
mov
mov
mov
clc
pop
out
in
aaa
stos
fisubl
or
fsub
stc
scas
rcr
or
sti
enter
adc
xchg
jle
pop
adc
sbb
cli
inc
push
mov
inc
leave
fsubrs
movsb
int
inc
call
das
sti
mov
fcoml
pop
movsb
popa
sbb
out
adc
cwtl
mov
pop
loopne
xchg
or
rorl
mov
pop
sarb
ds
sub
dec
mov
add
push
xchg
jo,pn
sbb
jmp
lret
jns
pop
testb
and
lock
fdivr
push
push
icebp
insb
dec
cmc
and
cmp
dec
dec
lret
sbb
dec
mov
outsl
loop
xchg
cltd
push
sub
jmp
inc
push
ljmp
es
ror
sbb
mov
movsl
dec
xlat
in
pop
daa
sub
sbb
aam
or
test
out
imul
or
push
mov
pop
inc
jp
dec
jnp
cltd
jo
inc
out
dec
loope
rorl
cmp
sti
hlt
push
sub
inc
push
cmpsb
xor
xchg
inc
sub
test
mov
mov
arpl
imul
test
ret
xor
out
call
xchg
mov
lret
sbb
push
sub
jle
jl
pusha
xchg
jo
movl
cmp
adc
call
rcrl
loopne
mov
test
js
inc
jne
std
mov
sbb
stc
or
xchg
xorb
ret
mov
daa
cmpsb
jb
inc
mov
jae
fsub
and
mov
rcll
nop
mov
dec
add
cmc
dec
xlat
mov
out
imul
jbe
imul
adc
and
xchg
in
inc
push
aas
mov
popa
lret
cs
test
lods
sarl
popa
inc
inc
add
and
aas
mov
loopne
xchg
cwtl
sbbl
cs
xchg
jne
push
cmp
xchg
pop
dec
filds
pop
adc
mov
daa
jecxz
shl
mov
scas
mov
fucompp
test
xchg
stos
gs
lea
out
roll
lcall
cwtl
pop
adc
gs
out
xlat
pop
jne
xchg
scas
mov
cmp
in
mov
js
nop
and
inc
cmp
ds
cld
outsl
fxch
xchg
sub
inc
mov
jbe
insl
decl
les
pop
in
out
lods
inc
lret
xchg
sbb
lret
lcall
shrl
rcl
out
pop
pop
int
in
jne
adc
inc
mull
in
push
ljmp
lahf
ljmp
jecxz
mov
sti
fcmovb
mov
jne
xorb
mov
and
movsl
pusha
and
xchg
outsl
or
lods
rcr
ret
adc
out
iret
stc
ja
sub
lea
enter
mov
lahf
mov
in
adc
movsl
mov
jle
adc
lea
rcrb
outsb
sub
out
adc
pop
dec
mov
stc
je
scas
adc
hlt
push
mov
imul
lods
push
lods
int3
pop
push
jge
jle
sub
pop
lea
popf
pop
xor
pop
mov
dec
adc
lret
rcr
pop
loop
mov
dec
pop
addr16
lods
cmpsb
lock
lahf
pushl
push
in
mull
scas
fnstsw
lock
push
mov
pop
fistpll
or
lahf
mov
sub
shlb
mov
testl
sub
mov
in
inc
pop
mov
pushf
movb
in
sbb
push
dec
cmpsl
scas
sbbb
mov
movsl
sbb
stos
xlat
movd
and
fsubrp
enter
testb
sarb
jmp
or
hlt
dec
add
bound
cwtl
movsl
push
sub
xchg
inc
stos
sub
cltd
xchg
push
aas
scas
sbb
cmp
hlt
shrl
mov
add
jmp
inc
sbb
nop
and
mov
adc
mov
and
repz
sub
sub
int
jecxz
je
jle
and
sub
jb
out
dec
bound
adc
mov
clc
sbb
jne
ljmp
mov
inc
push
aad
mov
jbe
inc
pop
cmpsb
cmp
mov
fwait
daa
mov
out
in
fistl
in
les
lds
or
stos
aas
add
push
test
clc
insl
mov
inc
or
fs
jg
movsb
xchg
and
imul
mov
cmpsb
mov
popf
loop
or
lock
add
mov
adc
repnz
adcl
jns
jl
std
inc
lds
mov
data16
push
mov
mov
mov
das
jp
mov
or
and
xor
test
cmpsl
cwtl
icebp
mov
jbe
test
stos
xchg
mov
pop
loope
push
not
xchg
mov
punpckhwd
jnp
data16
jecxz
sbb
push
xor
data16
mov
push
push
push
add
fdivrs
pop
lcall
mov
pop
dec
hlt
add
and
jge
notb
xor
and
data16
fdivrl
mov
sbb
js
movsl
pop
mov
into
adc
cmp
cmpsb
add
fiadds
andb
addr16
cmp
imul
lods
lods
jge
mov
xor
lods
cmp
into
enter
mov
or
cmpsl
mov
in
and
out
push
cmpsb
xchg
cmp
rcrl
mov
ret
dec
outsl
daa
stos
mov
pop
jo
clc
aas
inc
pop
and
lcall
loope
repz
dec
mov
push
aad
sahf
scas
lods
dec
fwait
je
mov
lret
sbb
inc
out
cli
lahf
jge
sbb
loop
push
je
add
sti
mov
repnz
in
pusha
cmp
adc
jge
pop
pop
stos
adc
aam
cld
and
dec
sub
hlt
pop
mov
int3
bound
pop
ficoms
dec
enter
fidivrl
xchg
mov
iret
je
in
nop
push
scas
jb
xor
and
mov
lret
push
adc
add
push
add
inc
negb
mov
shlb
jbe
cwtl
aam
inc
pop
movsb
cmpb
lret
pop
repnz
inc
sbb
mov
xlat
adcb
push
mov
xlat
mov
inc
jb
aam
jmp
test
dec
push
frstor
inc
pop
jmp
std
or
push
sub
mov
andb
push
jp
jnp
cs
das
rcrl
mov
jb
ror
icebp
psubd
fisubs
fcmovnbe
fsubs
push
lods
cmp
in
scas
push
aad
fdivrl
xchg
push
int3
lret
fwait
out
fidivs
sbbb
inc
pop
subl
cmp
out
add
mov
xor
cmc
sub
psubw
repnz
cmpl
and
pop
imul
lock
bound
subl
js
xchg
dec
mov
add
fbstp
fisubrl
leave
pop
mov
cmp
lock
mov
xlat
push
pop
into
popa
pop
nop
jbe
lods
mov
std
or
or
adc
cmp
hlt
add
xchg
pop
cmc
call
jns
out
loope
and
mov
jmp
sbb
mov
dec
adc
fnstcw
int
test
dec
mov
outsl
and
ficoml
dec
and
shlb
sarl
push
inc
enter
push
sbbb
int
or
xchg
xor
mov
sbb
pusha
and
shrb
inc
out
cli
or
dec
sub
pusha
sub
stc
int
sub
dec
mov
cmc
mov
aas
push
das
lret
imul
jo
test
xorl
dec
adc
sbb
aaa
xchg
insl
or
or
xor
xlat
mov
test
mov
icebp
test
inc
add
mov
sbb
xor
xor
or
add
lcall
in
stos
stos
mov
repz
cmpsl
adc
fcomps
xchg
mov
test
arpl
test
xor
push
xchg
add
add
push
adc
repnz
xor
add
or
push
inc
xchg
test
cltd
inc
mov
xchg
stos
lods
mov
sbb
add
loopne
es
roll
xchg
in
mov
or
fstpl
cmpsl
add
in
rcll
pop
xchg
test
pop
lea
mov
fcoms
lds
jg
out
xor
cli
pusha
fsub
mov
adc
hlt
stc
push
test
lock
mov
lcall
adc
bswap
xor
gs
inc
fwait
adc
add
scas
jo
pop
jbe
sbb
jge
jmp
mov
in
and
decl
fisttps
xchg
clc
jmp
jo
sub
inc
pop
xchg
ljmp
fnstsw
fs
cmp
or
mov
sti
xor
scas
jb
fistl
fs
in
sahf
subl
mov
scas
mov
and
jmp
data16
popf
mov
mov
cwtl
ret
out
adc
xor
decb
fbstp
or
loop
setnp
adcl
shl
cmpsb
out
jns
cmp
imul
mov
cmc
popa
jecxz
xlat
xchg
pop
lahf
icebp
mov
cltd
cmpsl
test
mov
divb
jl
inc
dec
ja
lret
dec
dec
sub
push
rcrl
arpl
mov
mov
adc
rolb
popa
or
loopne
dec
test
aad
int3
clc
test
push
fists
aam
add
sti
nop
jle
movb
shl
add
inc
dec
inc
aam
jns
rorb
lods
dec
and
fisubrs
mov
ja
dec
mov
hlt
int
fidivrs
insl
stos
scas
insl
stc
cli
cwtl
mov
and
pop
sub
cmpsb
jb
adc
int
and
add
xchg
mov
cmc
sub
add
sbb
push
push
fstpl
xlat
adc
mov
or
xchg
xchg
dec
fwait
sbb
adc
stos
inc
adc
push
xchg
dec
loope
sbb
in
xor
push
inc
cmp
and
mov
adc
pop
xor
xor
add
jl
insb
adc
mov
adc
add
frstor
lret
inc
movsl
andb
pop
stc
or
or
xor
cmpsl
jns
jp
mov
pop
add
loop
addl
je
rcr
icebp
out
out
fnstsw
mov
adc
scas
stos
pop
jmp
and
cmp
cld
mov
loope
adc
movsb
adc
xor
shl
sbb
xchg
dec
fcompl
aas
std
shlb
mov
mov
out
pop
in
jp
jmp
mov
out
xrelease
dec
popa
pop
jns
xor
ja
ret
dec
sub
stos
jbe
adc
pop
into
and
jns
pop
test
dec
lahf
mov
mov
out
pop
mov
es
jbe
fcmovbe
cmpsl
ds
mov
mov
xchg
sbb
in
mov
mov
aas
jne
dec
mov
mov
pop
sahf
add
inc
dec
jne
and
out
lods
inc
jge
sbb
lods
add
sbb
pusha
inc
in
inc
inc
sbb
jbe
lret
loope
testb
movsb
mov
lahf
outsl
xor
call
xor
in
test
and
stos
das
xchg
pop
mov
inc
mov
dec
cmp
sub
hlt
mov
addr16
in
and
mov
or
iret
add
and
push
mov
mov
popf
ljmp
xchg
xchg
pop
sub
shl
pop
inc
jbe
icebp
cmp
cmc
push
ljmp
xlat
mov
and
in
xor
or
std
movsl
and
or
call
fadds
sarb
out
imul
jmp
sub
jmp
je
cmpsb
push
jno
cmp
out
aam
xchg
aam
cld
daa
repz
xor
mov
lods
and
pusha
gs
adc
jmp
pop
xchg
dec
inc
imul
jl
hlt
dec
stc
mov
xchg
add
adc
enter
flds
stos
sti
inc
jns
add
lret
stos
imul
jmp
sbb
mov
loope
in
call
xor
xchg
gs
jo
xchg
sbb
test
sbb
inc
jg
or
leave
mov
push
mov
pop
roll
mov
pop
push
jb
ret
mov
xchg
mov
push
dec
fwait
dec
or
cwtl
imul
bound
jecxz
inc
ror
mov
lahf
xchg
cltd
xor
cltd
std
xchg
jno
push
out
scas
inc
sbb
aas
int
jno
sbbl
jnp
lahf
xor
loop
mov
cmp
or
jb
daa
insl
sub
and
jnp
pop
hlt
sbb
loope
xchg
jnp
mov
fdivr
test
mov
repz
cmpsl
bound
xlat
cmp
mov
adc
bound
push
iret
repz
add
iret
xchg
add
test
movsl
pop
adc
pushf
push
repz
out
ret
sub
push
icebp
pop
addr16
xchg
sub
mov
dec
xchg
mov
and
dec
loope
fimuls
mov
cltd
mov
sbb
sub
xchg
dec
scas
add
pop
sbb
mov
shlb
sbb
and
inc
fdiv
add
push
jmp
es
sti
stos
in
xor
push
icebp
lea
ds
outsl
or
jecxz
call
imul
sti
out
inc
insl
fwait
push
imul
mov
loope
bound
stos
in
dec
mov
pusha
dec
mov
mov
gs
jns
xor
mov
rorl
mov
pop
xor
add
and
push
les
adc
cmpsl
fstpl
mov
add
jns
jl
insl
jno
scas
mov
int3
adc
cmp
es
stos
dec
mov
pop
pop
adc
insb
add
mov
test
or
stos
js,pt
mov
sarl
mov
pop
loopne
mov
fucomip
xchg
pop
cmp
aam
jae
cmp
mov
or
adc
clc
outsl
jne
push
pusha
dec
push
data16
mov
cmpsb
inc
and
xchg
xchg
inc
sub
pop
mov
insl
pop
iret
outsb
sti
in
shrl
or
mov
shrb
shr
xor
cmp
gs
dec
movsl
lds
mov
flds
push
xor
ffreep
mov
std
gs
popa
jae
insb
jge
jns
mov
lret
rol
adc
sbbb
sahf
pop
loop
test
mov
sub
mov
dec
ljmp
adcl
lcall
sbb
leave
pop
jne
adc
dec
mov
test
mov
repnz
ja
push
fwait
pop
lahf
inc
das
rcrb
inc
jl
ret
imul
jmp
hlt
stos
push
jge
or
inc
mov
inc
test
jmp
cmc
push
divl
xchg
push
sbb
sbb
xchg
push
mov
je
add
pusha
lret
movsl
xor
inc
out
xlat
jbe
mov
leave
bound
pop
js
mov
imul
cltd
xor
scas
and
xor
inc
inc
dec
add
push
jne
ss
pop
lds
dec
add
jecxz
push
lcall
mov
and
mov
sbb
negl
push
jo
pop
prefetchwt1
lret
cs
fdivp
mov
and
dec
mov
xchg
xor
lahf
pushf
or
xor
rcrl
sbb
pop
outsl
xor
movsb
add
clc
hlt
xor
push
outsb
icebp
mov
lret
dec
fadds
jo
shlb
fldenv
xchg
mov
out
inc
mov
into
in
adc
xchg
sub
sbb
rcll
clc
loop
push
stc
xchg
out
sub
and
lahf
sub
jae
stos
push
push
xor
mov
dec
lcall
out
xor
adc
or
cli
xor
adc
sub
adc
dec
shll
leave
mov
clc
sub
stos
mov
or
shlb
and
dec
hlt
fsubrs
arpl
in
mov
mov
jle
inc
fsubrl
lea
adc
stos
js
mov
int3
sbb
int3
lds
cmpsb
add
mov
inc
sti
and
cld
jecxz
mov
arpl
add
sbb
sub
gs
mov
inc
jbe
mov
test
push
cli
or
sbb
pop
pop
lock
pop
add
dec
out
push
mov
jp
repnz
jp
dec
or
fwait
pop
fsubs
push
inc
mov
xor
cltd
add
lret
inc
cmp
xchg
jno
mov
jmp
xor
leave
jns
jae
cli
push
add
loop
xor
push
into
mov
stos
in
pop
scas
pusha
lret
imul
in
jae
jne
daa
lcall
adc
dec
cmp
shl
fbstp
scas
xor
scas
les
outsb
xchg
pop
mov
adc
xor
pop
insb
sbb
mov
jle
sbb
dec
and
sbb
in
aas
and
sti
cld
lahf
mov
add
sbb
sub
add
scas
push
sub
mov
jmp
or
dec
movsl
out
pusha
imul
insb
rcll
xor
test
sbb
out
jle
std
mov
loope
in
rcl
and
sahf
maskmovq
divl
ficompl
or
sub
jmp
and
and
ror
inc
mov
arpl
pop
js
data16
cmp
in
das
inc
and
sbbb
popa
mov
leave
loope
pusha
push
sbb
out
fnstenv
lea
mov
imul
xor
inc
stos
mov
ja
lods
and
jae
repz
cmc
rol
and
lea
or
cmp
cmp
dec
dec
and
in
sahf
mov
roll
xchg
jns
subb
mov
scas
mov
inc
mov
pop
cmc
test
mov
fidivrs
insl
mov
iret
movsb
and
xlat
aas
ja
hlt
mov
mov
lahf
xor
fwait
xor
cmpb
dec
pop
popa
imul
mov
pushf
push
cmpsl
insb
mov
dec
dec
mov
cmp
mov
cmp
inc
outsl
jp
adc
mov
in
pop
nop
jp
mov
pop
jmp
pushf
popa
sbbb
cmp
xlat
shrb
push
icebp
jp
fsubs
sub
cmp
shlb
test
cmpl
test
add
and
sbb
sub
out
js
adc
les
nop
ret
mov
enter
inc
and
cmpsb
fisubl
push
adc
aam
cwtl
popa
int3
jg
xor
fstps
lods
js
xchg
rcl
inc
jecxz
mov
in
inc
mov
push
negb
or
fildll
or
jo
push
or
sbb
in
ds
push
scas
sbb
or
mov
or
xlat
into
and
fbld
cltd
cmp
xor
jne
push
pop
cld
es
push
jmp
fimull
push
hlt
jecxz
aaa
dec
icebp
test
add
mov
sbb
add
sbb
push
out
cmp
jae
xchg
pop
ret
rorl
sahf
fs
xchg
mov
in
clc
mov
notb
int
imul
ljmp
mov
sub
int
shll
inc
stos
mov
loopne
test
adc
cltd
or
adc
scas
push
dec
jne
sti
xchg
xlat
xchg
repz
stos
jne
aas
jecxz
cwtl
bound
test
int
mov
outsb
test
iret
mov
cmp
mov
xor
xchg
xor
lods
mov
mov
leave
sub
push
outsb
push
insl
sbb
jne
xor
jg
aaa
push
aas
jmp
mov
addb
pop
jmp
dec
sbb
notl
cmp
mov
sti
rcrb
inc
push
add
inc
mov
xchg
or
cmp
xor
repnz
push
or
icebp
aaa
mov
popa
sbb
xchg
xor
jb
ficoms
loope
stos
call
or
xor
push
mov
cmp
fldenv
sbbb
orb
inc
sti
mov
cs
push
clc
jae
icebp
or
and
inc
add
test
std
xchg
push
xor
and
stc
dec
pop
and
repz
dec
cmpsb
inc
mov
push
popf
xor
cmpsl
xchg
xor
push
in
pop
in
arpl
pop
aad
dec
mov
scas
pop
add
xchg
add
in
mov
or
sub
adc
mov
push
sub
jne
imul
dec
add
int3
out
je
icebp
xchg
pop
fnstenv
pop
jecxz
movsl
loopne
fildl
fnstsw
fwait
or
adc
mov
inc
fiaddl
mov
mov
sub
xor
inc
pop
add
aam
lea
jo
imul
imul
dec
popa
lods
int3
hlt
andb
inc
xor
ficomps
data16
inc
inc
lods
fdivrl
call
add
rorb
push
dec
mov
pushf
or
jmp
sbb
outsl
rcll
lea
lahf
and
pop
push
ljmp
scas
leave
xchg
push
repz
pop
sub
jle
pop
sub
xor
ljmp
xchg
push
inc
cld
push
pop
mov
pop
int3
add
push
subl
mov
mov
sbb
cmc
and
jp
add
decl
mov
or
mov
lret
xchg
push
sub
cmp
sbb
lcall
push
dec
stos
in
insl
and
xchg
mov
xor
push
inc
mov
ja
push
pop
sbb
jg
clc
popl
repnz
inc
xchg
and
hlt
pop
xor
mov
sbb
imul
rolb
push
mov
in
orl
push
cmp
roll
mov
cmc
cmp
and
mov
fdivrs
and
xor
out
negl
mov
mov
sub
push
jno
icebp
xchg
aad
sub
repnz
test
mov
lahf
insl
loopne
js
adc
xor
jb
sub
mov
xor
nop
sbb
dec
ds
jnp
movsb
addr16
pop
inc
idivl
in
xchg
dec
data16
mov
pop
push
or
jne
inc
rorb
sub
mov
add
fs
int
mov
adc
fs
jno
lods
call
and
dec
adc
mov
xchg
mov
stos
add
insl
out
cmc
je
xchg
mulb
les
divl
mov
pushf
xchg
loop
jecxz
imul
cld
leave
sub
jnp
mov
test
loop
das
mov
scas
xchg
push
subb
sbb
mov
pop
jae
sbb
jg
or
xchg
out
mov
push
sti
push
cmp
adc
adc
pop
sti
inc
cmp
push
inc
inc
pop
testb
xchg
outsb
test
nop
popf
adc
lods
cmp
rcrl
mov
sbb
and
adc
push
js
hlt
and
sti
pop
pusha
adc
pop
leave
sub
sub
mov
ffreep
inc
ret
scas
pop
cmp
sbb
outsb
in
cmp
xchg
dec
sbb
pop
cmp
dec
cmp
mov
pusha
popf
inc
lods
call
and
iret
dec
cld
pop
imul
leave
push
dec
out
fistpll
loop
movsl
insl
aad
stos
data16
jmp
sbb
test
outsl
lcall
xchg
cltd
jl
cwtl
lods
pop
out
sbb
push
in
push
xchg
xor
mov
test
insb
fildll
mov
cmp
cwtl
stos
sbb
mov
ret
rcll
jg
repz
cwtl
or
jge
xchg
scas
add
fists
inc
mov
xlat
sub
arpl
dec
repnz
jno
inc
and
xchg
pop
cmp
or
insb
or
dec
mov
adc
negl
pop
jns
sub
or
sub
adc
fwait
cli
add
mov
mov
es
or
mov
cli
sahf
mov
leave
out
jmp
adc
dec
adc
cmp
loope
lods
adc
xor
je
or
push
hlt
jbe
stos
ja
jbe
ja
xchg
xchg
lods
lds
sarl
mov
mov
pop
imul
negb
push
imul
andb
mov
xchg
data16
jnp
aad
jns
shr
call
add
nop
push
scas
icebp
shll
add
test
sub
pop
cmpsb
pop
xchg
sub
jp
mov
dec
fmuls
pop
mov
inc
loop
adcl
push
jecxz
xor
fiaddl
sub
adc
test
mov
adc
xor
lret
xchg
repz
push
cltd
repnz
adc
adc
adc
or
and
push
aam
xor
out
cwtl
fwait
arpl
dec
insl
jg
sbb
dec
xchg
or
lret
and
popa
push
cld
lret
ret
jno
jnp
nop
repnz
test
adc
mov
adc
xor
into
jg
pop
movl
inc
sub
mov
lods
ja
xor
pop
cmp
sbb
nop
xchg
sub
mov
testb
and
dec
dec
jne
mov
and
incb
jbe
adc
mov
out
gs
sbbl
xchg
popa
repz
cmp
rorb
add
xchg
pop
xor
loop
adcl
sbb
aas
jmp
repnz
ret
cmpsl
cmp
push
push
ss
xchg
fcomps
mov
imul
andb
fs
adc
fnsave
mov
push
inc
and
cmp
int3
lret
sub
outsl
arpl
lahf
pop
xor
sarl
inc
test
pop
mov
or
out
jle
cmp
lods
cmp
movsb
mov
fstpt
lods
div
lock
sub
push
dec
push
mov
mov
rcr
cmc
add
cli
and
ja,pn
push
or
inc
add
xlat
cmp
xlat
out
dec
sub
cltd
hlt
pop
mov
sti
xor
mov
popa
mov
cltd
push
inc
inc
bound
xchg
sub
in
push
dec
fdivl
cmp
outsb
mov
cli
pop
push
xchg
adc
in
add
push
push
mov
sti
xchg
sub
xchg
xor
pop
jne
rcrb
fidivl
dec
fbstp
jne
cmp
pusha
lcall
shlb
movsb
loop
andl
adc
repz
sbbl
cmp
lahf
xor
pop
shll
mov
fwait
xor
push
jns
inc
les
jp
es
iret
mov
imul
pcmpeqw
xchg
xchg
cmc
ja
xor
xchg
test
mov
mov
aam
enter
in
repnz
stos
xor
jns
sbb
movsb
mov
sub
sti
lock
loopne
pop
pushf
lret
in
lods
cmp
mov
sub
and
add
mov
rolb
loopw
in
pop
jbe
fsubs
lcall
and
dec
loop
std
ficoms
mov
sbb
mov
sbb
pop
pusha
jl
fimuls
sbb
fisttpl
ljmp
clc
xchg
sub
rclb
xor
imul
mov
into
andb
and
mov
fisubrl
lahf
movsl
or
xor
es
inc
call
pushf
ds
jecxz
xchg
dec
push
push
in
sub
mov
cmp
inc
movsb
nop
fsts
fxch
pop
adc
ret
int3
pop
or
aas
add
mov
jne
adc
or
sub
or
gs
and
fwait
or
mov
sbb
std
sbb
sbb
out
mov
divl
pop
stos
gs
enter
shll
fidivrs
push
and
shlb
popf
imul
xchg
sahf
aaa
inc
push
fiadds
out
xchg
inc
mov
cmc
repz
inc
xchg
cmp
jnp
sub
sub
fcompl
mov
mov
mov
mov
pop
lock
xchg
lcall
stc
jecxz
fbld
outsb
ljmp
fisttpl
adc
push
ret
add
push
cmp
jge
jb
js
sbb
mov
jbe
or
testb
imulb
push
lea
je
repnz
push
dec
add
push
sbb
or
mov
pop
mov
xchg
or
scas
insb
ret
jo
cmp
test
dec
popf
arpl
subl
inc
xlat
popf
lret
adc
mov
push
out
shll
shll
mov
adc
jecxz
sub
jbe
mov
add
popl
xchg
and
lahf
xor
mov
insb
cli
cmp
aam
les
stos
sub
push
arpl
test
adc
and
out
xchg
ljmp
es
pop
scas
push
subb
jge
push
ffree
xchg
mov
outsl
cmp
lcall
out
dec
mov
ret
into
sbb
sbb
inc
pop
sarb
outsl
into
jl
loop
sub
loop
imul
mov
mov
dec
les
stos
aam
int3
xor
ljmp
dec
rclb
mov
fidivs
mov
push
out
xchg
cli
movsb
movsl
jl
jg
dec
icebp
lea
mov
pop
enter
sbb
xor
jno
ss
xor
stc
inc
fwait
mov
out
lret
dec
lds
pop
xchg
insb
cmpsb
fbstp
outsl
insl
or
ss
cwtl
mov
mov
mov
aaa
adc
lret
in
in
scas
xchg
sub
lcall
sbb
repz
xchg
dec
aam
mov
shl
cmp
lcall
or
dec
xchg
dec
rcr
out
fistpll
jmp
out
fnsave
mov
sti
push
in
inc
jg
data16
shlb
cmpsb
dec
jmp
call
pop
adc
cmp
fsubs
mov
aad
or
jecxz
mov
pop
jae
push
out
mov
sbb
sub
aaa
pop
mov
fsubr
jmp
loop
cld
xor
push
inc
sbb
dec
jle
xor
in
and
cmp
xor
test
xor
fadds
lret
sbb
lods
and
test
inc
loopne
insl
or
xchg
es
jle
test
outsl
pop
jne
lcall
dec
jmp
xchg
inc
mov
sub
ljmp
push
jne
lock
mov
mov
in
jne
aaa
test
fldcw
mov
mov
pop
mov
pushf
add
insl
lcall
arpl
push
out
pop
gs
pusha
mov
iret
movsb
or
cs
pop
stos
push
inc
ljmp
and
rclb
fimuls
mov
imul
mov
sbbb
faddl
push
or
daa
jbe
push
xor
iret
negl
xor
cld
sbb
adc
cmp
jg
cmp
pop
push
cwtl
or
xchg
add
and
scas
pop
das
sub
mov
in
std
and
or
mov
xchg
lods
test
fbstp
lds
das
shr
sbb
pop
push
pop
nop
cmpsl
repz
pop
test
ss
cmc
push
loope
adc
adc
rcll
sahf
pop
and
lahf
out
rcrb
adc
or
leave
popf
xor
sub
sbb
sti
mov
movsb
xor
sti
pop
fadd
orl
inc
and
sti
outsl
push
insb
xchg
lock
add
or
into
insl
inc
popa
jbe
ljmp
scas
in
pop
push
je
mov
stc
mov
jg
sub
inc
into
sub
out
ret
iret
pop
sarb
cmpsl
mov
cmp
lds
mov
dec
inc
inc
jb
je
outsb
hlt
pop
xchg
xchg
std
daa
mov
aas
sbb
fbstp
lret
and
lods
std
cmpsw
mov
inc
jecxz
cmpsl
out
popf
out
sub
es
jp
andb
movsl
cltd
xor
and
icebp
repz
sti
adc
insl
add
hlt
adc
cwtl
data16
inc
or
xchg
sub
xchg
add
jg
jno
mov
rclb
mov
insb
lods
pop
jp
rorb
xor
inc
out
inc
movsl
inc
xchg
lds
dec
rcrl
adc
cmp
or
adc
movsb
out
test
jp
push
and
push
hlt
mov
jp
sbb
sub
mov
xor
jecxz
inc
jmp
loope
jb
and
xor
pop
or
jne
icebp
mov
stos
add
inc
into
leave
pop
mov
out
js
incb
jp
hlt
imul
push
xlat
sub
pop
movsl
push
adc
pop
dec
lcall
xchg
in
test
sarl
add
push
push
add
lods
add
add
lea
movl
jg
push
in
fdivp
jb
or
lret
xor
mov
lcall
xor
dec
fwait
adc
inc
xchg
xor
push
push
daa
aas
loope
xor
push
data16
and
pop
or
mov
pop
mov
jns
mov
cs
or
sbb
xor
int3
pop
jle
inc
popf
ja
ret
js
push
ret
pop
xor
les
fmull
aam
and
pop
mov
mov
xor
add
xchg
sub
and
cmp
jno
lcall
loop
dec
cmpsb
enter
outsl
jmp
pop
addr16
sbb
pop
mov
mov
dec
call
lods
push
fdiv
imul
push
push
ds
push
jmp
call
jecxz
adc
sbb
ret
or
fisttpl
ja
sti
mov
sub
mov
cmp
aaa
xchg
ficomps
das
scas
ret
movsb
clc
jns
mov
test
cli
mov
test
outsl
leave
push
or
add
imul
and
cmp
add
mov
or
leave
ja
jl
jns
and
adc
lret
adc
and
out
cmp
jmp
pop
ret
pop
xchg
add
loope
fcmovnbe
adc
aas
popw
daa
xor
ljmp
mov
roll
push
xchg
popf
xor
das
dec
in
mov
cmp
sub
mov
std
pusha
cmp
adc
cs
pop
cmp
pushf
scas
mov
cmpsl
pop
cmp
sub
xchg
loopne
mull
test
sahf
push
mov
hlt
data16
shl
mov
or
cltd
adc
sti
mov
lret
lret
xchg
jmp
xlat
jno
stos
xlat
les
insl
loopne
mov
arpl
xchg
lea
mov
push
popf
stc
fdivrl
stc
nop
jecxz
sbb
test
filds
repz
or
data16
js
dec
in
sbb
jle
cmp
ljmp
imul
mov
dec
loop
sbb
loop
xor
sbb
es
imul
jne
sti
inc
stos
xchg
xor
inc
int
out
add
add
rol
outsb
inc
shlb
and
adc
cmp
mov
push
test
lcall
sub
test
scas
mov
stc
adc
cmp
pop
dec
pop
dec
push
std
in
stos
xor
push
adc
adc
jmp
ret
nop
sbb
pop
lds
arpl
bound
sahf
push
frstor
pusha
mov
sub
pop
lock
lcall
insl
inc
call
xchg
movsb
dec
add
push
fucomp
xchg
in
cmp
aaa
fldt
add
popa
sarl
insl
fidivs
cmp
in
shlb
xchg
inc
mov
rcll
aam
jb
fs
mov
test
idivb
sub
icebp
clc
sub
dec
ret
pop
in
sbb
lahf
xor
add
ret
or
inc
sub
cli
cld
jmp
cmp
lds
cmp
cmc
repz
mov
jb
mov
rcrl
pop
fiadds
out
xor
pop
lahf
aam
roll
fld
mov
shll
movsl
int
pop
xor
jecxz
popa
stc
int
stc
ljmp
adc
xlat
pop
aas
les
pop
repnz
jno
insl
nop
dec
mov
leave
flds
fcom
jp
inc
xor
loope
cmp
icebp
mov
mov
add
fsubl
jmp
mov
jl
aad
inc
nopl
cmpsb
sub
dec
push
pushf
xor
push
mov
pop
mov
loope
or
push
inc
ljmp
cmp
pop
cld
andl
sarl
pop
movsb
out
aas
cltd
mov
push
cmp
je
sbb
jbe
cli
aam
jae
mov
mov
cmpsb
call
inc
sbb
cli
jmp
sub
fadd
popa
add
and
xchg
sahf
mov
mov
and
sub
mov
dec
jge
or
mov
jno
or
loopne
jo
cltd
and
cmp
push
out
add
ss
das
mov
or
das
movsl
mov
das
shll
outsb
cld
xchg
pop
inc
sbb
xchg
jl
mov
clc
shrb
jne
adc
jle
xor
das
xchg
sub
push
dec
ljmp
repnz
test
mov
cmp
add
sbb
jp
popa
lods
movsl
dec
or
clc
mov
cs
int
mov
pop
jae
sbb
xchg
pop
int
orb
mov
mov
mov
mov
and
js
ljmp
hlt
fldenv
fidivs
add
jbe
push
fimull
loope
cmp
mov
loop
cwtl
iret
jne
insb
arpl
and
or
pop
jns
ret
jmp
sahf
pop
popa
or
mov
notl
add
aaa
jecxz
mov
cltd
std
pop
incb
jecxz
jp
cmp
popw
daa
mov
call
in
lods
movsb
mov
pushf
in
push
lret
xor
xor
arpl
iret
jecxz
pop
jo
xlat
scas
mov
jns
js
jp
mov
test
bound
adc
push
inc
lea
fs
lret
shl
mov
cmp
push
add
ret
jnp
mov
enter
dec
add
lret
inc
dec
jb
fucomi
add
add
inc
inc
rorl
mov
mov
mov
inc
add
and
shrb
dec
inc
pop
jns
aaa
into
xor
jle
into
dec
loope
cmp
popf
xor
push
mov
mov
lods
cmp
lods
fucomi
inc
pop
imul
sub
jl
dec
lea
mov
lahf
xchg
imul
pop
lods
sub
mov
cmp
aam
mov
jge
ret
mov
mov
jnp
push
pop
pushf
popa
out
mov
js
jo
lret
dec
mov
jbe
inc
out
in
and
jl
jbe
pop
sbb
pop
adc
fwait
mov
aaa
or
lods
jecxz
jle,pn
popf
mov
push
in
lahf
outsb
and
push
jno
push
xor
xchg
fiaddl
jae
shlb
sbb
in
mov
mov
int3
test
pusha
mov
fmull
es
sbb
imul
inc
pop
lods
std
sub
pop
or
scas
out
fs
or
mov
es
daa
into
lahf
jnp
inc
stos
or
mov
aam
inc
les
jno
shrl
push
push
mov
sbb
aad
es
and
cltd
popa
lods
lret
ss
hlt
leave
mov
ljmp
cwtl
or
sbb
popf
insl
cmc
mov
pcmpgtb
add
lret
icebp
jg
lds
jae
sbb
sar
mov
push
jo
jg
and
cmp
movsl
scas
int
cmp
cmp
fcmovbe
cmpsl
add
sbb
and
inc
pop
or
int
imul
sbb
mov
xlat
mov
mov
fisubrl
fldl
les
push
test
stos
inc
cmp
push
mov
adc
pop
ds
add
mov
sub
cmp
repnz
sbb
clc
jae
sbb
add
sbb
inc
ljmp
out
test
out
pushf
sub
jle
add
movb
rol
xchg
dec
dec
out
je
cmp
insb
mov
jp
adc
ficoml
shlb
cli
out
jb
out
pop
pop
int3
mov
outsb
into
mov
addl
add
fisttpl
xchg
scas
inc
xor
repnz
ds
repnz
jnp
adc
jo
xchg
lahf
gs
cwtl
xor
in
das
adc
and
xchg
sub
push
subl
stos
enter
or
ss
jo
lea
test
dec
pop
test
sahf
lods
imul
addr16
mov
cmp
mov
aam
mov
pop
repnz
cs
sbb
leave
inc
fcmovnbe
in
push
mov
es
stc
sub
xlat
cld
outsl
lds
add
push
or
mov
stos
dec
ficomps
cwtl
cmpsb
inc
out
std
rcrl
lret
ljmp
lcall
or
or
mov
mov
and
xchg
in
inc
arpl
mov
sub
pop
outsb
jp
jmp
mov
arpl
aam
rorl
mov
or
mov
pop
sarb
dec
and
fbld
lock
xchg
dec
cmp
dec
dec
mov
adc
in
push
gs
lret
dec
cmpsb
arpl
rorl
xchg
mov
jmp
push
push
or
cmp
lods
das
sub
add
or
jae
sub
lahf
mov
adc
insb
stc
popf
ret
mov
and
rcll
xor
andl
int
mov
add
mov
dec
out
addr16
and
and
and
push
xor
mov
inc
xor
shl
mov
push
sbb
cs
stos
in
mov
push
cmp
sbb
loope
aad
cmc
adc
sbb
jmp
and
xchg
push
lret
mov
and
ret
mov
inc
jmp
mov
aaa
pop
js
jno
push
jae
arpl
push
cmp
add
sahf
add
xor
lods
xchg
std
mov
mov
popf
cltd
push
repz
imul
jp
mov
fidivl
adc
cwtl
das
sub
scas
mov
cmp
or
fcomi
jecxz
popf
push
dec
mov
lret
bound
jle
loop
jmp
aam
fildl
push
add
pop
addr16
lret
inc
add
mov
test
addl
mov
xlat
shll
mov
xchg
and
rclb
in
out
repnz
rdtsc
add
ret
ja
outsl
mov
fdiv
lock
in
std
dec
ja
jl
stos
es
adc
mov
inc
inc
in
cld
inc
sbb
mov
movsb
inc
adc
ret
test
loop
scas
negb
fsub
mov
in
adc
stc
lods
jg
lds
mov
push
stc
rcr
stos
and
enter
mov
aad
lret
cmp
xor
insl
aam
xor
jp
cmp
sbb
cmc
sarb
nop
mov
adc
jne
pop
push
jmp
dec
xchg
nop
aaa
in
dec
mov
push
pop
divb
test
lods
cli
fldt
jnp
shlb
sbb
inc
cli
mov
rcrl
jge
sub
mov
jecxz
inc
test
movl
stc
push
sbb
lea
test
fimull
popf
loopne
aas
adc
stos
mov
lcall
stc
je
jno
push
and
leave
xor
pop
das
bound
test
mov
je
pop
fs
push
mulb
mov
test
loope
sub
std
cmp
sub
jb
cltd
fnstenv
add
push
mov
and
push
insl
testl
xor
pusha
and
push
dec
pusha
push
xchg
sub
cmp
mov
jle
sbbl
mov
mov
push
xor
rcrb
fcompl
fcmovnu
aaa
jb
cmp
outsb
scas
test
inc
or
subb
lods
mov
push
div
inc
jnp
sub
stos
pop
push
icebp
inc
repnz
in
cs
push
mov
jnp
sahf
nop
hlt
aad
stos
call
repz
pushf
sahf
repz
int3
fwait
lret
orl
jae
inc
lods
jl
push
jae
in
adc
jne
pop
testb
nop
out
sar
enter
jl
push
cmpsl
ret
rorl
or
scas
mov
lock
scas
test
iret
scas
push
jbe
or
pop
sub
loope
push
and
pop
es
mov
int
cmp
inc
jp
iret
jle
cmpsb
dec
hlt
mov
jnp
adc
sub
sub
test
or
push
cmp
stos
js
jmp
jmp
cmp
push
sub
xchg
scas
ret
dec
inc
lods
dec
lods
leave
mov
call
sub
add
daa
xlat
sbb
les
cwtl
das
inc
sti
push
pop
fdivl
ljmp
xchg
int
rol
or
cmpsl
xchg
test
mov
decl
stos
test
js
xor
inc
jns
xor
addr16
stos
bound
ret
loope
and
in
xor
sub
and
xchg
mov
lods
out
jns
pop
mov
popa
pop
out
lahf
add
or
adc
add
cmpsl
mov
or
jnp
cmpsl
sbb
fs
xchg
xchg
cmp
and
dec
out
rcll
add
ss
xlat
cs
movb
xchg
je
ss
cmp
xchg
add
inc
pop
mov
jnp
pop
xchg
repnz
mov
mov
push
aaa
jg
adc
mov
clc
inc
jge
cmp
dec
adc
mov
in
and
xchg
xchg
sahf
cmp
dec
sbb
aas
adc
scas
sti
add
nop
mov
cmc
cmpb
pop
test
pop
adc
sub
pop
lahf
cmp
inc
sub
leave
insb
cli
bound
xchg
inc
mov
push
mov
lret
mov
adc
pushf
addr16
dec
mov
xor
mov
ret
das
jmp
add
xor
mov
mov
mov
cmpsl
sbb
jle
outsl
je
pop
cmpsb
es
xchg
pop
in
sahf
inc
sub
rcrl
xchg
push
mov
fcoms
in
ds
jmp
pop
sub
dec
mov
sti
add
sbb
ss
dec
fmuls
stc
scas
mov
add
nop
mov
addr16
lcall
push
inc
inc
jle
std
xor
je
cld
sarb
subb
int
out
icebp
add
les
popl
out
jle
inc
pop
sarl
bound
adc
sub
lret
cld
jns
aad
stc
inc
and
push
notb
and
dec
fstpt
cmc
mov
mov
xchg
cmp
frstor
xchg
cmpl
mov
push
out
es
inc
imul
mov
sub
cmp
mov
vpmaskmovd
mov
xchg
ss
xor
push
push
insb
sbb
mov
std
jecxz
paddsw
lret
inc
cmpsl
idivl
push
mov
rcrl
adc
test
or
fidivs
push
lds
lret
sub
outsl
mulb
test
push
lea
sub
cmp
xor
movsb
lcall
pop
jne
xor
push
mov
sbb
pop
sbb
lods
add
mov
inc
fdivl
daa
mov
xchg
arpl
icebp
in
and
shll
outsl
pop
out
mov
ficompl
sub
and
lea
push
mov
xor
xor
adc
mov
push
fcomps
pop
pop
mov
pusha
jl
rorl
jge
in
mov
xchg
js
inc
nop
sbb
fimull
xchg
bound
test
inc
insl
daa
loope
hlt
pop
xor
movsb
stos
aad
jge
xchg
pop
icebp
jge
lahf
push
insb
xchg
xor
xor
cmp
dec
pop
jns
xchg
mov
imul
or
and
in
mull
mov
mov
mov
xchg
mov
adc
sbb
insb
andb
vmptrst
std
in
mov
rcrl
jg
jecxz
jecxz
test
iret
xchg
add
xchg
fistpl
mov
imul
adc
and
inc
arpl
lods
mov
or
stos
dec
mov
ljmp
pop
mulps
cmp
jmp
das
addb
dec
nop
push
shlb
inc
insb
push
pop
imul
cmp
inc
adc
clc
dec
mov
aas
jnp
and
sub
dec
leave
dec
in
stos
push
jno
into
loop
push
int
test
test
mov
lcall
mov
sbb
int3
std
xchg
mov
inc
in
stos
pop
xchg
cwtl
pmuludq
loopne
outsb
outsb
jne
lods
shrb
mov
push
mov
cmc
mov
es
sahf
mov
jbe
stc
addr16
xor
test
mov
mov
xor
ret
out
and
and
mov
mov
negl
lock
out
cld
mov
lret
lods
sti
push
mov
pop
xchg
movsb
sti
clc
into
enter
cmp
push
in
stos
push
inc
jns
mov
in
aas
xor
push
fisubrl
faddl
sbb
cbtw
gs
fsubrp
mov
mov
test
sub
sahf
xchg
dec
inc
arpl
jbe
loope
xlat
cmpsl
out
push
push
test
mov
rorb
gs
jmp
adc
loope
mov
stos
call
or
cli
andb
shl
test
stos
ret
xchg
add
addl
or
sub
lock
leave
loope
xor
adc
test
in
xchg
popf
xor
mov
pop
push
mov
mov
shll
xchg
aam
lds
jb
pop
in
pop
in
add
pop
xor
test
repz
jnp
adc
cmp
mov
ss
sbb
jb
aaa
pop
scas
orl
ret
out
popf
push
xor
mov
xor
nop
push
insb
mov
jb
push
xor
add
push
jmp
cmp
mov
and
inc
or
lds
jge
mov
sub
pop
or
clc
cmp
lahf
jg
daa
dec
and
stc
dec
add
sub
out
testb
xor
ja
mov
clc
sahf
jle
xor
and
pushf
mov
add
inc
pop
dec
divl
push
jecxz
sti
mov
lods
jmp
pop
ret
popf
cmpsl
jg
or
aad
shl
sbb
testl
sub
pop
dec
mov
shrb
jg
fwait
pop
es
sub
int
jmp
stos
and
outsl
jns
jbe
repnz
jae
andb
dec
in
inc
loope
cli
out
aaa
mov
dec
ret
scas
adc
shlb
and
addr16
dec
call
xchg
mov
fsubs
mov
pop
cmp
xorb
int3
fwait
xlat
sbb
pop
sbb
js
jno
movsl
icebp
fucomp
daa
mov
inc
imul
pop
fdivrs
fsubl
mov
arpl
leave
int
xor
stos
movl
rcr
fisttpll
lods
testb
test
xor
mov
adc
jb
push
in
movsb
jmp
gs
inc
je
lods
pop
fsubl
fwait
adcl
mov
jp
and
dec
aaa
pusha
leave
pop
cmp
xchg
lcall
loope
push
repnz
ret
arpl
outsb
xor
mulb
popf
mov
add
or
push
subb
shlb
or
enter
jmp
push
sbb
inc
push
jl
xor
dec
in
and
xor
lods
stos
inc
ficoms
test
das
push
dec
test
daa
lods
aad
lea
out
add
xchg
mov
cmp
test
imul
sbb
mov
roll
xchg
loope
sbb
pop
mov
mov
data16
inc
inc
add
es
lahf
sbb
bound
bound
or
fs
inc
push
sbbb
xor
xchg
jns
nop
mov
jmp
xor
jecxz
clc
jg
mov
jnp
mov
loopne
mov
call
mov
add
pop
mov
jge
std
inc
pop
mov
aam
das
xchg
rorb
mov
shll
popf
int3
jmp
push
push
iret
aam
adc
jne
pop
fnstsw
fldenv
les
insb
cmpsb
stc
dec
add
sahf
cmpsb
test
fdivrs
enter
xor
cmpsl
mov
ss
jbe
xchg
loopne
xchg
push
fists
das
in
pushf
and
leave
sub
je
hlt
in
sbb
popa
ss
stos
add
cmp
imul
outsb
imulb
dec
push
and
add
rolb
cmp
dec
leave
and
popa
scas
call
imul
insb
adc
lahf
insl
sub
test
sahf
adcl
aad
and
mov
mov
pop
imul
add
je
call
hlt
and
dec
mov
rep
jmp
adc
popf
push
rol
cld
gs
pop
add
and
imul
add
test
jl
dec
inc
cld
lcall
movsl
repnz
bound
stc
pushf
aad
loopne
xchg
inc
mov
enter
pop
in
sbb
aas
outsb
and
aam
std
shl
xor
pop
in
pop
dec
mov
imul
rcrl
push
lea
mov
mov
jnp
sarb
lret
xchg
xchg
adc
jmp
mov
loop
cmp
fisubs
notb
sbb
icebp
in
sbbb
ret
repz
out
cmp
leave
call
adc
jnp
mov
std
push
out
push
pop
in
test
call
and
cltd
push
into
shlb
mov
icebp
push
lods
mov
repz
lret
aam
and
ret
and
cmp
out
repz
and
fadds
jnp
adc
icebp
sbb
inc
xchg
add
mov
insl
sahf
out
aad
jmp
sub
fistps
iret
stos
sub
mov
aas
add
jb
dec
cmc
pop
call
and
hlt
xchg
lods
ret
adcl
adc
hlt
mov
lcall
push
push
push
popf
cmpsl
fcmovne
addl
mov
mov
xor
loope
mov
gs
nop
cltd
dec
js
dec
ljmp
inc
divb
and
loop
push
or
out
inc
fnstcw
ss
aam
enter
lret
lret
mov
pop
sahf
cmc
lahf
in
sub
insl
fwait
scas
nop
cli
cmpsb
add
mulb
and
iret
inc
stos
add
test
test
dec
sbbb
bnd
aam
sbb
mov
pop
jbe
dec
lret
cmp
cmpsl
rcrb
and
sub
push
int
mov
xlat
and
lods
mov
data16
mov
out
jns
jae
das
push
mov
loope
cmpsb
adc
pushf
ret
es
or
mov
fsubrl
mov
sub
dec
sbb
mov
movsl
imul
mov
pop
imul
loop
cmp
lock
and
loopne
psubb
and
xorb
pushf
daa
mov
insb
add
sbb
push
ret
sub
pop
int
inc
push
mov
cmpsl
les
cmpsb
leave
mov
mov
fistl
nop
pop
xchg
scas
cmp
lret
fdivrs
lss
sub
inc
mov
xchg
pop
int3
push
fcom
in
push
jle
add
jge
adc
mov
or
mov
dec
dec
pop
add
mov
xchg
fs
push
test
push
frstor
rep
in
sub
mov
pop
not
insb
call
push
in
fsubr
sbb
add
mov
loopne
mov
movsl
mov
cwtl
aaa
mov
sub
xchg
and
pop
mov
nop
nop
xor
jp
pop
xchg
inc
stos
sbb
mov
faddp
iret
outsl
loopne
pop
pushf
push
pop
fld
jbe
sub
jo
dec
jns
dec
cmc
stos
movsb
mov
xlat
pushf
and
inc
jge
fists
out
and
sub
mov
adc
push
xlat
or
sub
jge
imul
call
sahf
jmp
inc
push
lret
bound
push
ss
mov
pop
dec
fadds
movsb
repnz
sbb
cld
add
add
push
cmp
ja
adc
aad
or
fs
sub
jo
cmp
add
push
pushf
jae
or
addr16
cwtl
pop
into
or
mov
sub
ret
mov
dec
outsb
jnp
outsb
in
push
mov
push
pusha
or
pop
mov
cmp
dec
and
cmp
sub
adc
cmp
xor
jbe
pop
xor
clc
sub
movsl
adc
push
adc
or
dec
shrl
dec
aaa
mov
ret
xor
sti
xchg
lds
push
fucom
sbb
sahf
mov
jge
dec
add
fldcw
shrl
adc
lret
sbb
ja
and
sub
decb
push
dec
mov
fnsave
sub
jno
jne
lods
inc
xchg
mov
lods
addb
mov
addl
mov
mov
jmp
adc
sub
and
ret
mov
scas
dec
cmc
iret
lcall
add
not
or
add
and
clc
scas
and
push
test
cmpsb
cmp
ds
in
push
adc
xchg
and
les
inc
and
cmp
ja
mov
inc
dec
push
stos
imulb
mov
xchg
dec
mov
cmp
xor
or
xor
mov
xor
scas
ret
ficoml
fldl
fsubl
cmp
add
xor
adc
dec
cmp
stos
inc
stc
rorl
movsl
lock
idivl
jge
and
fwait
add
inc
sbb
sbb
xchg
insl
pushf
sti
push
cmp
pushf
ja
push
cs
push
imul
mov
orl
imul
aas
mov
mov
sbb
xchg
loop
dec
dec
mov
add
mov
mov
pop
xor
dec
mov
ret
lret
mov
test
cmp
insb
sub
out
aaa
xchg
and
js
mov
push
loopne
xchg
out
adcb
test
dec
in
or
add
or
mov
test
es
adc
mov
xchg
out
dec
xchg
sbb
das
mov
push
xor
push
lret
divb
fistps
or
xor
sbb
arpl
mov
or
cmp
jno
fadds
sub
add
lahf
iret
mov
jle
ss
xor
mov
mov
rcrl
out
or
aaa
sub
je
rorb
int
aam
sub
in
lods
push
inc
sub
pushf
js
fcmovb
jbe
xchg
mov
sarb
cmpsl
sahf
sub
mov
mov
mov
add
dec
mov
xor
cmp
push
and
jmp
outsb
jp
in
ljmp
cli
adc
jge
fstps
icebp
pop
xchg
push
popa
add
ret
leave
test
dec
sahf
imul
scas
mov
lock
addl
int
xchg
sbb
outsb
and
push
push
popf
inc
fnstenv
mov
stos
and
xor
lret
mov
and
sbb
mov
xchg
mov
add
mov
int
arpl
mov
paddb
or
lahf
push
aad
jnp
push
in
pushf
pushf
mov
in
dec
cmp
inc
fwait
lcall
sbb
sub
mov
in
xor
jb
lea
shrb
push
loope
iret
lds
aas
dec
out
mov
fucomip
lds
jge
xor
mov
adc
inc
jnp
aam
scas
inc
cmpsb
mov
test
ja
test
femms
aam
and
cltd
xchg
clc
xchg
ja
stc
sub
adc
adc
cmc
je
in
movsl
push
xchg
mov
sbb
dec
jg
push
xchg
xchg
dec
adc
lods
jbe
ret
dec
movsl
inc
jnp
xchg
sub
scas
dec
dec
lret
xchg
out
movsl
adc
int3
aam
gs
or
mov
dec
jo
cmp
into
dec
cmc
mov
cld
imul
push
jl
outsb
jp
call
push
sahf
popa
xor
dec
sub
cmp
cmpsl
cld
sbb
loop
dec
pop
adc
faddl
cmp
jmp
hlt
push
adc
jns
in
sub
in
movsb
ja
sbb
adc
mov
pop
xchg
imul
les
mov
or
pop
lods
jge
xlat
or
push
jno
ds
lods
out
ret
pop
fisttpl
rcl
mov
sar
xchg
mov
in
loop
insb
out
xchg
sbb
push
sbbl
cmpsl
xor
add
sub
adc
pop
or
arpl
xchg
or
push
das
les
xchg
sbbl
rclb
adc
jo
dec
in
sbb
stc
fdivs
lea
flds
pop
in
jge
lcall
jp
bound
fs
dec
sbb
jo
cs
fnsave
push
ret
adc
and
lahf
dec
add
mov
data16
fisubl
dec
jne
adcb
xchg
insb
jle
test
sbb
pop
call
mov
push
mov
jbe
je
cmp
imul
jge
mov
movsb
jp
add
mov
in
jl
outsl
mov
fs
sub
add
addr16
fsts
pop
lret
jmp
loop
pop
add
xor
mov
and
xor
data16
mov
adc
or
fdivrl
out
jmp
mov
push
push
pop
pusha
sbb
mov
in
inc
cmc
daa
imul
ds
lahf
out
movsl
xor
gs
or
in
or
rolb
xchg
movsb
mov
add
or
pop
sub
pop
xchg
and
mov
out
xor
inc
int3
out
push
movsl
or
jle
mov
pop
adc
mov
push
in
inc
out
insb
popf
out
pop
dec
inc
sbbl
scas
push
cmc
int3
out
nop
andb
pop
xor
add
out
adc
fs
lods
xor
mov
pop
mov
pop
push
cmp
test
jno
add
pop
sub
adc
add
inc
sbb
xorb
jmp
mov
jg
adc
pop
mov
dec
mov
jmp
nop
pop
inc
push
aam
scas
push
xchg
ss
mov
jae
xchg
jmp
addr16
lea
inc
sbb
stos
movsb
test
adcl
and
lcall
and
inc
xchg
inc
xor
push
mov
in
das
mov
iret
jae
fistpl
je
nop
into
addr16
jo
push
out
sbbb
xchg
push
cltd
cmp
rol
sub
xor
jo
popa
pop
cmp
push
pop
jne
mov
pop
sbb
mov
xchg
fldcw
cmp
xor
pop
add
fldl
push
mov
das
push
mov
adc
cmp
fdiv
sub
or
stc
cld
pop
mov
daa
scas
jmp
or
or
fs
mov
jb
jecxz
cli
xchg
push
lods
sub
imul
and
jbe
cmp
cmpsl
sub
dec
mov
out
and
andb
imul
outsl
dec
loop
clc
lea
ret
pusha
push
xchg
mov
mov
jmp
inc
or
dec
jmp
dec
jns
sub
mov
int
dec
inc
and
mov
mov
cmp
repnz
xchg
sub
iret
das
xor
lods
lock
inc
xor
out
add
pop
mov
insl
sbb
sbb
in
add
mov
or
sub
dec
fisttpll
lock
in
in
ljmp
inc
lock
or
into
enter
iret
dec
mov
int
cmp
lods
iret
out
inc
data16
ret
pop
xor
cmp
ljmp
jno
dec
insb
cmpsb
xchg
lcall
orb
pusha
jno
out
ja
push
daa
mov
adc
inc
fidivs
arpl
test
jmp
out
stos
call
icebp
xchg
imul
divb
adc
jbe
xchg
mov
ss
sub
out
pop
sbb
mov
jecxz
push
push
push
dec
push
inc
jecxz
fidivs
mov
pop
mov
cmpsl
call
insl
cs
das
and
mov
bound
push
cmpsb
arpl
jbe
jo
and
adc
fwait
sbb
fidivs
xor
or
cmp
lea
ret
inc
push
ja
mov
lret
adc
ds
add
repnz
movsl
xlat
or
push
imul
xor
leave
push
cmpsb
lock
stos
das
xchg
sub
in
fincstp
jbe
imul
out
sub
cmp
xor
or
cmpsb
inc
mov
jmp
pop
cmpsb
mov
or
cli
cli
mov
inc
pop
sub
push
lret
adc
dec
aaa
das
ja
js
int
test
and
xchg
mov
inc
push
test
mov
sub
ficomps
lret
and
pop
setp
test
rep
jg
lock
dec
sub
and
sub
stos
test
pop
jg
xchg
sub
in
scas
xchg
incb
add
repz
gs
popf
faddl
popf
aaa
testl
xchg
xchg
lock
push
int
ljmp
inc
pop
cli
data16
inc
inc
push
sbb
stos
dec
jns
inc
jmp
xor
inc
jae
addr16
mov
sbb
mov
ds
or
vcmppd
add
test
cmp
lds
cmp
push
dec
insb
add
jno
lods
cltd
in
dec
stc
adc
pop
cwtl
inc
aad
add
xor
into
leave
push
or
jp
movsb
ss
lret
or
imul
jo
mov
jne
jne
loop
sbb
int3
mov
or
int
imul
sub
xor
cmc
movsb
lret
or
or
push
loope
fmulp
loop
movsl
scas
ja
loope
cmp
mov
xor
push
mov
and
xor
in
mov
cmp
fnstenv
sbb
sbb
stc
or
pop
popa
xor
xchg
cmpsl
push
inc
pop
cmp
les
insb
mov
pop
push
xor
ljmp
icebp
pop
xor
or
and
push
and
test
ds
shll
xchg
test
sub
xchg
sub
dec
lds
add
jbe
lret
mov
xchg
dec
pop
imul
cwtl
out
adc
sbb
shrb
and
subb
inc
push
xor
out
shlb
sbb
mov
xor
mov
or
sti
cmp
lahf
cmp
mov
inc
cltd
inc
dec
aaa
negb
or
xor
cmpsb
jp
adc
pop
mov
in
enter
inc
pop
jo
mov
movsb
or
stc
add
aam
pop
pop
pop
lock
cltd
sub
jg
loop
aam
mov
adc
sub
jl
div
jo
jecxz
aad
call
adc
mov
inc
push
adc
xchg
add
ficomps
cmp
xor
inc
test
cmp
shlb
dec
pop
cmp
mov
imul
mov
sbb
jo
sbb
loop
out
jmp
test
or
sbb
sub
cmp
andl
int
or
leave
push
lea
ljmp
add
sbb
jbe
jmpw
adc
lods
sbb
cmp
ja
pushf
pop
sbb
pop
test
adc
fsubp
cmp
dec
cmp
fldl
push
call
sbb
enter
leave
pusha
mov
inc
movlps
insb
movsb
popf
mov
enter
cs
dec
mov
cmp
in
lret
aaa
sub
sarl
sarl
adc
lahf
sbb
lret
push
in
xor
sbb
dec
dec
dec
je
out
push
mov
fisubl
ds
popa
push
fdivrp
or
ret
btc
jle
inc
push
les
xchg
sub
inc
ss
fmull
enter
and
fldl
adc
dec
cltd
std
jecxz
fcmovne
test
pop
ja
in
out
ret
adc
repz
aaa
sub
aad
push
pop
push
movsl
dec
pop
ss
cmpsl
mov
mov
cmp
mov
test
mov
pushf
or
cmp
pop
repnz
sub
enter
xchg
xchg
in
arpl
dec
xchg
xor
xchg
xor
and
icebp
cmp
mov
into
mov
pop
lret
xlat
jg
mov
xchg
xorl
or
fnsetpm(287
arpl
adc
andb
test
push
sbb
insl
pop
lret
or
jne
xlat
xchg
shlb
idivl
add
jno
and
adc
push
xchg
in
test
clc
or
push
adc
xchg
mov
filds
push
jmp
aaa
jo
push
dec
es
add
dec
mov
pop
sbb
and
mov
mov
xor
pop
stos
mov
inc
aaa
pusha
out
enter
jl
push
mov
pop
mov
insb
jg
cmp
add
negl
jo
jb
jle
adc
mov
and
jns
loope
shrl
mov
ljmp
popa
sbb
outsb
pop
xchg
cmp
test
and
shlb
dec
and
sub
insb
dec
shll
shll
pop
jns
outsl
jmpw
cli
mov
lahf
xchg
and
rolb
lret
or
sub
push
lods
jle
loop
inc
mov
out
or
enter
int
notl
dec
push
lods
dec
in
icebp
jecxz
aas
xor
insb
imul
ret
add
mov
mov
inc
sub
xchg
sti
push
je
outsb
pop
pop
inc
pop
mov
dec
int
jl
xchg
mov
jns
jns
xchg
stos
iret
inc
add
mov
loopne
adc
insl
mov
jnp
sbb
pop
adc
leave
or
xchg
das
movsb
sub
bnd
mov
movsl
sbb
xchg
adc
add
mov
pop
sub
ret
pop
repz
out
and
ja
cmp
xor
inc
bound
add
pop
or
idivl
pop
dec
aad
push
ret
js
negb
mov
or
cmp
out
push
pop
xchg
jp
das
outsl
adc
cld
clc
out
xor
popa
in
pop
inc
pop
test
imul
cmpsl
xchg
add
push
xchg
arpl
push
popa
std
adc
mov
adc
pop
test
add
xor
pop
ds
scas
ds
pop
dec
mov
mov
nop
popa
mov
lret
int3
test
pop
imul
cs
pop
pop
fiadds
sub
fisttpl
mov
rcl
movsb
mov
mov
jl
mov
clc
sub
pop
mov
jl
push
sbb
mov
dec
mov
pop
dec
push
push
xchg
cmp
popf
hlt
push
sbb
rcll
pop
pop
bound
lods
fisubs
mov
push
push
movl
jge
push
add
repz
loopne
gs
mov
push
inc
cld
adc
mov
pop
dec
rcll
adc
mov
adc
jbe
nop
in
popa
adcl
mov
and
xchg
sbb
sub
mov
or
insl
and
inc
mov
fists
lock
jle
mov
mov
push
jmp
cmc
mov
pushf
mov
mov
das
jns
adc
mov
sub
pop
sub
xchg
scas
fistpl
jl
inc
xlat
adc
dec
out
sub
xor
adc
bound
push
pop
call
lods
insl
divl
sub
shrb
popf
cwtl
pop
xchg
out
mov
pop
repz
inc
fiadds
dec
cmpsl
imul
sbb
xor
aam
xor
fwait
pop
ds
aaa
push
lahf
loop
xchg
adc
iret
jl
push
sbb
inc
mov
jns
xor
out
ljmp
test
lahf
push
mov
pop
int
fcomps
jl
inc
into
cmpsb
dec
or
ret
sub
loope
pop
stos
js
xchg
inc
outsl
mov
xchg
ret
xor
xorl
xchg
sbb
adc
dec
dec
popa
movl
inc
fwait
cmp
dec
adc
ds
test
pop
xor
stos
push
jns
mov
les
pop
push
ror
jno
mov
mov
jp
imul
mov
add
fldenv
scas
push
inc
sbb
xor
push
popf
je
xor
jns
inc
sti
xchg
xor
push
mov
push
orb
sub
out
xor
sbb
mov
mov
sahf
sub
and
enter
gs
lea
mov
pop
incb
inc
dec
mov
aaa
lret
jno
xchg
sarb
mov
xor
mov
inc
andl
out
in
inc
push
jo
enter
push
scas
inc
dec
fwait
inc
fstps
loopne
inc
or
push
lods
repnz
lret
fsubrl
movsb
inc
icebp
sbb
mov
cmp
mov
inc
lahf
add
pop
leave
mov
mov
cld
mov
mov
mov
decb
fs
aad
add
push
repz
xchg
dec
ds
aaa
cwtl
outsl
cmp
clc
insb
jne
pop
or
sbbb
aam
dec
push
fstl
xchg
fs
or
xor
jbe
jmp
cmpl
sbb
movsl
pop
pusha
ss
push
ret
cmp
out
ljmp
lods
in
stc
xchg
pusha
adc
sti
rclb
mov
in
inc
test
bound
data16
into
test
dec
lahf
ss
inc
push
aaa
mov
dec
lea
addr16
cmp
add
pop
cmp
dec
sbb
xchg
jp
push
xchg
repz
jno
add
popa
adc
ja
jmp
xor
push
je
clc
push
imul
repz
add
mov
nop
xchg
mov
jb
jmp
xchg
jge
adc
fwait
sti
bound
ja,pn
push
addr16
test
fstpl
sub
sbb
inc
lret
pop
sub
pop
xchg
icebp
inc
cmp
push
or
stc
lea
pop
mov
aam
out
pop
push
jp
dec
addr16
adc
jne
xchg
mov
jl
mov
add
insl
jbe
test
mov
jae
out
xchg
xchg
and
xchg
inc
rorl
mov
inc
jp
sbb
push
add
loop,pt
aad
aam
bound
ror
arpl
mov
cmc
cwtl
out
mov
sbb
je
xor
lods
enter
mov
inc
icebp
daa
pop
movsb
sbb
inc
sub
addr16
lods
xor
push
push
insl
fnstenv
and
stc
mov
std
lods
inc
jmp
sbb
clc
pop
inc
lcall
xchg
push
test
out
je
lahf
outsb
mov
add
add
adc
pop
sub
pop
icebp
push
dec
orl
add
mov
sbb
xchg
xchg
in
jae
in
xchg
jmp
xchg
mov
jae
adc
sbb
pop
adc
cmp
fiaddl
push
int
lret
mov
cmp
push
out
jnp
or
sub
shll
cmpsb
xchg
sub
shll
mov
repnz
imul
or
dec
mov
or
inc
fcmovbe
cmp
adc
loopne
pop
mov
mov
cmp
dec
push
sub
ds
je
inc
add
jne
sti
pusha
and
out
daa
adc
cs
cmp
inc
cmc
pop
cmpsl
std
and
enter
in
and
fwait
mov
or
dec
cmp
test
push
pop
dec
xchg
call
cmp
cli
push
in
jno
mov
xchg
icebp
je
ljmp
sub
clc
lods
or
sbb
xchg
cli
test
insb
cmp
jecxz
jge
mov
pop
lahf
add
mov
and
dec
fwait
cltd
jns
jae
pop
cmp
stos
mov
pop
imul
fdivrl
xor
out
push
mov
sbb
mov
in
inc
pop
sarb
sub
nop
adc
mov
icebp
push
dec
lcall
cmc
xchg
je
ds
push
out
adc
loop
cltd
adc
push
loopne
sbb
cmpsb
jmp
xor
xchg
sbb
out
cmp
arpl
int
jp
cmp
xor
mov
aad
dec
mov
fndisi(8087
adc
mov
stos
jmp
ret
pop
rol
in
jl
mov
mov
les
push
jle
mov
dec
rorb
adc
mov
xor
xchg
jae
pop
dec
out
dec
movsl
negb
hlt
ja
ficoms
pop
xchg
popa
jb
insl
ljmp
xor
sbb
popa
or
or
pop
xchg
sub
or
je
lods
pop
fsts
mov
lock
mov
sub
xor
jge
adc
xchg
rorb
pop
imul
adc
imul
sub
cmpsb
mov
or
aas
icebp
jecxz
xor
shll
icebp
addr16
adc
mov
sub
pop
sub
mov
imul
out
fwait
sbb
icebp
dec
cmp
xor
sub
arpl
outsl
insl
add
mov
cmc
inc
cmc
and
xchg
popf
lods
jmp
jno
popf
inc
jp
cmpsl
mov
mov
dec
pusha
fadds
ljmp
lret
mov
repnz
ret
loopne
pop
lret
out
popl
dec
mov
push
subl
clc
aas
jmp
jmp
mov
in
pop
test
in
leave
push
mov
adc
insl
mov
xchg
adc
into
xchg
cmp
push
xor
insl
cli
jae
pop
adc
push
ljmp
adcl
xor
loopne
lds
mov
mov
pop
pushf
lahf
in
push
inc
shlb
pop
es
adc
orb
cmpsb
call
pop
xor
jnp
enter
push
xor
lret
xor
leave
shll
push
nop
jmp
repz
fsts
or
addr16
cltd
daa
aad
in
inc
sbb
int3
inc
ret
cmpsb
iret
push
mov
lods
into
jne
inc
xor
loop
outsl
daa
testl
pop
movsb
cmp
xchg
sub
push
jg
sbb
loope
xchg
add
mov
roll
addr16
int
add
pop
cmp
nop
std
adc
or
jb
dec
jle
push
jo
push
and
lret
mov
fdivl
push
cmp
mov
rcrl
add
sub
and
subb
mov
or
push
stos
xlat
mov
pop
sub
pop
mov
sahf
mov
pop
loope
int
test
lods
inc
and
loope
sqrtps
pop
push
jmp
xor
inc
sbb
shrb
icebp
xchg
sbb
mov
or
out
mov
xchg
add
mov
fs
mov
add
and
inc
jbe
out
add
sbb
es
pop
add
cmp
xor
dec
pop
mov
push
push
out
pop
or
inc
push
dec
cmp
sub
icebp
adc
lds
or
test
push
lret
shrb
jmp
mov
out
mov
inc
xor
leave
out
hlt
or
es
mov
dec
sub
data16
lret
loop
loopne
rorb
push
insb
inc
mov
ds
mov
bound
jecxz
inc
push
or
out
dec
nop
and
shl
jl
subb
mov
fiaddl
cwtl
in
inc
push
dec
jb
fbstp
out
out
ja
fwait
sub
dec
jecxz
sbb
movsl
cmp
cmp
lcall
test
data16
mov
or
cwtl
mov
or
cmpsl
pop
push
jbe
movsb
repz
jge
aas
mov
sar
dec
mov
xor
mov
xchg
pop
or
push
fcmovbe
icebp
jg
push
and
or
pop
std
inc
pop
mov
cmc
mov
clc
or
push
loopne
mov
ljmp
sub
lea
mov
sub
xorl
or
jle
dec
loope
outsb
jbe
dec
shll
pusha
jmp
mov
mov
das
push
xor
xchg
shll
mov
xchg
xor
xchg
adc
icebp
outsb
mov
push
push
fstl
mov
fldenv
bound
sti
jle
lock
push
jl
fdivrl
idiv
hlt
insl
loopne
xchg
sub
lcall
inc
iret
arpl
mov
aad
add
cmp
add
inc
or
cwtl
lods
push
pop
fadd
push
xchg
addr16
sahf
lret
out
jg
jo
push
pop
addr16
cmp
or
imul
mov
mov
or
jo
mov
push
ret
cmp
cmpsl
pop
scas
sbb
int
adc
bound
and
pop
and
or
aam
inc
movsb
nop
mov
das
push
mov
push
insb
shll
push
ret
xchg
or
mov
stos
cmp
outsb
sub
repnz
cmp
in
fs
xor
xlat
pop
xor
scas
fwait
and
push
jne
jne
adc
adc
gs
mov
mov
ds
sub
cwtl
test
xor
or
outsb
int3
pop
mov
add
mov
cld
adc
pop
cwtl
jge
mov
sbb
push
xor
pop
mov
fistpl
mov
iret
jo
add
sti
mov
cwtl
mov
push
lret
cs
stos
mov
sbb
std
or
xlat
and
cmp
mov
loop
aas
cld
adc
adc
push
mov
adc
mov
add
push
fisubl
jl
jmp
cld
sbb
aam
xchg
rcl
cltd
or
inc
imul
and
adc
adc
push
mov
arpl
addb
xor
shl
mov
xor
xor
psubsw
mov
xor
adc
and
jle
cmp
addr16
fsubs
sub
push
bound
push
lock
sbb
sub
lret
xor
sbb
xchg
lods
jl
xchg
pushf
test
adc
insl
sub
lods
mov
gs
mov
pop
xchg
adcl
das
pop
in
pop
xor
sub
mov
dec
jecxz
adc
ds
sub
xor
iret
mov
stc
push
xchg
cs
outsb
sub
jge
gs
or
xchg
pop
fiadds
pop
lds
jge
mov
push
inc
into
stos
cmp
inc
pop
int3
repnz
mov
xchg
cmp
adc
mov
dec
outsb
insl
mov
popa
out
scas
ss
pop
cmp
cs
fadds
sbb
pop
sub
jg
xchg
mov
sub
and
jns
sbb
pop
dec
add
int3
lds
mov
in
in
sub
sarl
sub
adc
in
dec
dec
push
inc
sbb
lcall
enter
and
inc
dec
out
mov
insl
pop
push
xlat
inc
es
mov
pushf
test
xchg
mov
lea
xor
fsubs
mov
jecxz
xor
lret
dec
and
popa
in
stos
iret
pop
call
insb
mov
push
push
js
insb
add
pop
or
out
sub
in
sbb
lds
dec
mov
ss
dec
bound
mov
stos
jmp
xchg
int
push
fisubl
jae
push
gs
js
or
addr16
xchg
xchg
out
cwtl
mov
and
sub
inc
sub
xchg
rcrb
lods
inc
movsl
dec
fcompl
pop
sahf
dec
std
pop
cld
cmp
pushf
sub
and
push
push
xor
aaa
loopne
movsb
insl
mov
push
xor
jno
insl
jno
nop
and
pop
ret
js
clc
subb
jns
fldt
stos
data16
mov
adc
mov
xor
push
test
dec
repz
mov
mov
sbb
loope
pop
or
inc
in
push
ret
mov
mov
sub
jmp
bt
mov
jno
push
add
sbb
mov
mov
std
dec
test
jmp
fdivrs
test
mov
fidivs
loop
mov
and
dec
iret
cmc
jmp
or
cmp
in
not
dec
ds
lret
and
movb
enter
add
das
lret
xor
dec
dec
scas
fs
aam
test
mov
out
ret
sub
adc
push
sub
sbb
and
jae
pop
push
and
cmpsb
jnp
xchg
test
in
shl
xchg
add
lret
icebp
xchg
mov
or
mov
push
xchg
cmp
and
cmpl
dec
fcoml
pop
xor
sbb
mov
push
or
pop
stc
mov
sub
dec
fs
pop
add
sbb
mov
sub
pop
cmc
sub
pop
mov
dec
jl
xchg
enter
xchg
adc
in
mov
dec
jo
aaa
xor
notb
xor
imull
dec
pop
ja
xchg
insb
sbb
push
mov
lahf
popa
jnp
adc
sarl
jmp
es
test
xchg
sbb
xor
mov
mov
loop,pt
mov
xchg
aaa
fadds
and
cmp
out
push
xchg
lea
xchg
and
cmp
nop
cmc
cmp
jmp
test
sub
std
mov
in
aas
loop
adc
inc
add
cld
xchg
mov
dec
sarb
ret
iret
push
push
cmp
jns
mov
dec
mov
pop
shl
xchg
stc
mov
inc
inc
mov
ret
lret
shlb
jl
jb
inc
movsb
pop
sti
subl
mov
fisubs
push
jno
inc
andl
mov
pop
sarb
fiaddl
mov
aad
pop
ffree
push
getsec
call
push
in
pop
lcall
lret
pop
insb
mov
shrl
mov
jg
pop
repnz
or
jg
clc
sahf
cmp
in
movsb
ja
sti
sbb
xor
ljmp
icebp
xor
sub
outsl
daa
ficoms
repz
jg
jno
jmp
fldenv
mov
adc
xchg
xor
and
xor
jle,pt
mov
push
nop
and
push
out
outsl
xlat
mov
push
and
insl
pandn
jg
sub
popf
and
sub
sub
push
xlat
hlt
inc
jecxz
jae
into
mov
pop
mov
sbb
jecxz
jge
stos
outsb
and
xor
and
loope
mov
test
ds
mov
iret
insl
xor
daa
jecxz
inc
push
sbb
outsl
xchg
fucomp
adc
cmp
adc
jmp
push
sbb
pop
cmpsl
cmpsb
jne
fmul
fistpll
repnz
sbb
jmp
sar
scas
test
sub
into
mov
jno
push
and
call
test
inc
dec
pop
push
inc
sub
pop
sub
nop
mov
xchg
cmp
scas
mov
dec
jg
sub
outsb
shll
repz
aad
lret
mov
mov
pop
stos
or
lods
nop
or
sbbb
or
ss
sub
scas
mov
push
mov
test
add
bound
push
cmp
add
enter
rol
in
rcr
jl
shl
adc
pop
out
push
leave
jecxz
dec
pusha
jp
pop
stos
addl
cmp
shl
mov
mov
ljmp
aam
and
and
mov
pop
jb
xchg
mov
push
push
pop
mov
fsubl
and
dec
icebp
cmpsl
jns
cmpsb
adc
pop
dec
loope
push
hlt
pusha
pop
insb
sti
int
xor
adc
call
fisubrs
cs
xchg
jb
popf
xor
lock
pop
sub
cwtl
imul
and
test
adc
push
xor
and
inc
data16
mov
jne
push
loop
stos
push
inc
and
cmpsb
mov
push
ret
xor
mov
mov
fs
aad
push
inc
mov
push
push
jne
sub
rol
mov
dec
orl
sbb
push
jo
pop
push
inc
pop
ss
testb
dec
pop
in
push
dec
sbb
adc
pop
mov
pop
mov
loop
jno
add
xchg
ret
lahf
inc
scas
stos
add
mov
loopne
xor
xchg
nop
sahf
cmc
inc
sbb
cwtl
lret
iret
push
out
push
fdivrs
fs
sbb
into
push
inc
and
out
orb
lretw
fidivs
xchg
pop
xor
sbb
add
addr16
rclb
orl
or
inc
les
insl
fldl
mov
icebp
movsb
sbb
or
insb
xchg
mov
sti
adc
ret
inc
pop
test
pop
sbb
mov
adcb
sbb
and
das
push
out
sub
js
iret
xchg
addr16
or
push
mov
cmp
data16
int
cli
popf
sub
dec
inc
adc
aaa
ds
push
test
jae
insl
inc
test
fnsave
pop
adc
push
jo
clc
mov
les
mov
out
add
sahf
mov
loopne
cmp
int
dec
insb
ds
lret
call
mov
cmpsb
push
pushf
jg
fisubs
dec
mov
xchg
int3
out
punpckhdq
outsb
subl
and
std
int
inc
sub
cmp
or
pop
or
jp
dec
fstpl
mov
movsb
not
outsb
sub
cmc
sbb
sub
mov
jle
dec
addb
cmp
lret
pushf
sbb
mov
jmp
dec
clc
mov
mov
in
cmpsb
lcall
mull
movsb
add
push
mov
aad
jo
adc
adc
repz
outsl
mov
and
push
jne
ljmp
mov
jmp
call
popa
mov
xchg
imul
loop
xlat
mov
mov
xor
int3
addr16
lcall
dec
pop
addr16
scas
mov
ffree
stc
aam
inc
test
mov
pop
clc
pop
clc
jl
cmp
add
xchg
xor
push
xchg
cwtl
out
popf
xchg
mov
enter
xchg
ffree
sahf
ror
jno
jne
jae
faddl
fnstsw
insl
cwtl
or
xor
pop
cmpsb
jg
add
adc
mov
sub
mov
cs
lods
lods
inc
xor
into
out
mov
xor
or
and
shr
sbb
xchg
sbb
xchg
jg
add
inc
mov
pop
sub
sahf
sbb
mov
repnz
or
xorb
push
sbb
xchg
test
pushf
pushf
xchg
cmp
insl
xor
shr
mull
lods
inc
fwait
pop
xor
cmp
sti
arpl
jl
jns
sbb
push
xchg
imul
push
inc
push
jo
arpl
movsl
dec
rcrl
fwait
mov
rorl
xor
jne
pop
xchg
pop
and
dec
into
sbb
dec
std
or
stos
lret
pop
mov
lahf
popf
and
and
call
jns
xor
mov
and
pop
mov
dec
fidivs
jmp
lods
ljmp
pushf
xor
hlt
shrl
ret
sti
pusha
sub
lcall
and
hlt
dec
ljmp
ss
scas
addr16
outsl
push
jmp
sbb
or
xor
incb
and
cmp
movsb
mov
data16
push
push
xor
iret
mov
inc
pop
xor
xor
roll
mov
jge
sbb
scas
rcll
loopne
inc
mov
cmp
lods
lsl
stc
sti
fwait
aaa
jmp
dec
or
stc
outsl
ljmp
repnz
cmp
jo
adc
repnz
fwait
sub
push
push
hlt
push
dec
xchg
incl
rdpmc
add
push
test
in
add
sub
cmpsl
outsl
pushf
fcomps
and
arpl
rcrl
call
fildll
xor
add
scas
test
test
in
lret
dec
mov
idivb
imul
setle
add
icebp
int3
sub
lahf
ss
sti
into
ds
and
adc
cwtl
sub
fs
stc
mov
jecxz
daa
testb
jns
pusha
loopne
dec
adc
dec
loope
std
xchg
cmp
dec
push
dec
repnz
cmp
test
jle
rorb
adc
daa
movsl
sbb
lods
cmp
fidivs
or
or
aaa
mov
pop
jp
test
popa
push
inc
xchg
stos
fldt
nop
iret
cmp
jle
jle
and
std
inc
and
push
push
js
in
cs
xor
cmpsl
cmp
mov
xchg
jnp
push
mov
sub
rcrl
insl
sbbb
mov
sub
out
mov
insb
ss
pop
inc
adc
jbe
cli
sbb
insb
int3
lret
aaa
bound
pop
mov
inc
cmpb
pmaxsw
add
jns
cs
push
into
mov
pop
pop
dec
fldenv
sahf
sar
sub
mov
or
xchg
add
jp
data16
nop/reserved
enter
jg
xchg
mov
stos
xchg
adc
mov
jmp
cmpl
or
orps
loope
stos
jmp
loop
adc
addr16
ds
inc
stos
mov
pop
repz
pushf
push
xor
test
sti
push
ret
ret
jmp
lahf
pop
dec
pop
mov
stos
and
cmpsb
cld
jbe
cmpsl
mov
gs
inc
dec
xor
rcl
jns
das
cmp
das
push
mov
sub
mov
push
int
add
inc
push
mov
iretw
outsl
leave
jne
jne
mov
mov
xchg
mov
inc
push
cmp
loope
shl
jg
and
inc
push
jne
rcrb
lea
or
sbbb
mov
sub
sub
addr16
cltd
dec
pop
lret
in
cwtl
mulb
inc
and
pop
scas
jmp
sbb
mov
sub
push
outsl
push
or
dec
popa
pop
push
adc
aam
jmp
lods
dec
call
clc
push
sahf
lret
iret
jle
pop
shlb
jp
inc
mov
cmpsb
stos
ljmp
lds
dec
jp
sub
in
or
and
hlt
rcll
mov
or
pop
ss
pop
fwait
dec
imul
enter
js
addr16
adc
mov
cmp
push
ds
push
lock
hlt
out
int3
shll
sub
fisubl
xchg
push
insl
dec
lret
cltd
ss
mov
push
and
or
cmc
mov
aaa
int
clc
or
lods
ja
push
add
jp
loop
xor
imul
xor
pop
mov
and
add
icebp
lahf
stos
push
pushf
mov
aas
out
aaa
pop
fimull
or
adc
mov
cwtl
movsl
std
mov
mov
addl
mov
test
jno
xchg
out
or
cwtl
dec
sahf
xor
arpl
and
push
popa
fisubs
push
or
cmp
pop
mov
nop
mulb
stos
adc
icebp
packuswb
xchg
aad
fldl
cli
mov
mov
adc
push
mov
movsb
fdiv
fdivl
rol
push
sub
pop
push
cmp
adc
jl
lods
xor
fisubl
fdivs
add
jnp
fistpl
push
jo
or
test
subb
cs
inc
test
fs
addb
push
in
mov
test
pop
jae
pusha
dec
or
jl
pop
orb
nop
jmp
test
push
push
cmc
xchg
push
mov
cmpsb
push
subl
mov
test
add
pusha
jnp
or
shl
fstl
iret
mov
idivl
and
cltd
ljmp
enter
cmpsb
test
lahf
xchg
cs
cmp
dec
icebp
jns
outsb
push
push
sub
pop
jno
lcall
mov
mov
adc
pushf
mov
jne
js
pop
xor
add
mov
fwait
sahf
xchg
inc
out
in
pusha
pop
push
cmp
mov
xchg
lods
xor
dec
fldenv
outsl
daa
pop
fidivs
mov
fstps
pop
dec
push
cwtl
jnp
pusha
test
jmp
iret
xchg
mov
cmp
and
jg
enter
xlat
push
popf
or
pushf
cltd
pop
cmp
push
outsb
sbb
cmp
daa
in
fcompl
fldenv
js,pt
cmc
mov
ret
push
push
stos
insb
inc
aam
fwait
xor
test
xor
and
nop
push
ja
inc
stc
subb
xchg
sub
inc
xchg
pusha
jge
ss
sbb
dec
cmpsb
push
jbe
outsb
dec
es
cmp
popl
shlb
gs
mov
adc
mov
xor
mov
mov
push
jmp
ficoml
ljmp
xchg
lret
fistps
mov
hlt
jp
xchg
test
ficoms
lods
lock
movsb
inc
stos
mov
xchg
add
fmul
fcomps
test
stc
xchg
imul
jbe
pop
mov
or
lret
pushw
scas
jmp
jge
pusha
or
int
jg
fstps
mov
call
ret
cmp
test
mov
push
mov
das
ljmp
jno
je
xor
push
daa
sub
stos
in
sbb
ficomps
xchg
call
call
repnz
mov
popf
jl
xchg
xchg
sub
rcll
xchg
popa
das
pop
sarb
call
mov
mov
jg
fstpl
cmp
in
lods
ljmp
pushf
mov
mov
cmpsb
cmp
stc
leave
xor
pop
inc
push
fidivrl
lods
xor
cmpsl
loop
insb
inc
sbb
out
addr16
lds
or
add
pop
fdivrl
inc
mov
xor
and
call
cmp
mov
ja
repz
sbb
and
mov
push
cmp
jecxz
dec
dec
clc
xchg
cltd
push
mov
outsl
cmpsb
push
fwait
cmp
pushf
lret
push
sahf
lock
jg
inc
incb
pop
cmp
cmp
popf
or
cmpl
mov
dec
stc
sub
out
jns
icebp
pop
sbb
notb
js
je
bsr
dec
scas
lcall
movsb
push
jae
fdivrl
scas
jo
or
inc
adc
sbb
mov
imul
out
mov
xchg
daa
ret
pcmpeqb
xchg
arpl
insl
loopne
call
ret
popl
scas
outsl
into
dec
sbb
adcb
push
jno
ljmp
fiaddl
into
enter
jl
lret
mov
mov
xchg
xorl
xchg
pop
je
inc
mov
push
inc
dec
adc
fxch
fs
push
and
pop
jbe
mov
mov
xchg
pop
iret
aad
add
jne
or
push
das
mov
cmp
jno
inc
repnz
or
push
test
out
mov
lahf
push
add
or
or
lods
xchg
mov
popf
push
sbb
lahf
jl
xchg
cld
and
inc
insb
jl
jge
jp
jo
je
or
shrl
inc
nop
popa
jmp
xchg
add
mov
cmc
cmpl
lcall
sbb
nop
sbbb
cs
adc
js
sahf
clc
push
test
mov
stc
sub
add
fldt
dec
sbb
stc
jbe
fidivs
sarl
pop
fucomip
add
jae
push
movsl
icebp
stos
jo
shrl
jbe
add
xchg
jo
xchg
xor
lret
push
shr
fistl
xchg
fiaddl
inc
mov
jle
push
mov
ss
lods
pop
mov
mov
js
jno
clc
scas
jb
leave
cld
lcall
cwtl
mov
cmpsl
mov
lods
incb
sbb
insb
inc
lock
inc
fisttps
pop
push
je
jno
mov
das
addr16
lods
push
mov
and
adc
shrb
pmaxub
and
mov
roll
cmp
inc
mov
jmp
clc
mov
xchg
inc
xchg
jno
std
or
int
hlt
mov
xchg
out
xchg
add
fcompl
mov
ds
jbe
loop
xor
xchg
popa
mov
sub
or
leave
aam
mov
mov
fwait
std
sub
leave
lret
xchg
xchg
aas
mov
add
add
test
jns
stc
shl
xchg
adc
adc
or
or
js
nop
mov
lods
popa
mov
mov
into
xor
in
scas
pop
pop
and
fsubr
lret
jbe
mov
mov
xor
mov
loopne
arpl
mov
adc
cmp
sub
pop
stos
decb
insb
shl
test
dec
shlb
stc
gs
out
in
pop
push
cwtl
fbstp
cmp
mov
pop
scas
jg
cmp
pusha
test
and
and
pop
mov
pop
hlt
xor
call
aam
jo
mov
pushf
push
xor
outsl
test
aam
cmc
or
or
imul
adc
sub
lods
mov
sbb
jl
test
imul
das
aad
jmp
fidivrl
movsb
popa
lods
aad
popa
adc
push
movsl
mov
ret
or
push
xchg
fdivrs
adc
push
jg
push
in
cmpsl
fimuls
aas
lock
fcmovne
pusha
imul
xchg
jp
stc
and
mov
stos
shll
jle
fldt
sti
ss
sbbb
push
fldenv
add
push
jnp
jmp
arpl
ret
repz
xor
mov
or
mov
loop
fistpl
fdivrl
push
int
stos
push
fwait
mov
and
lods
jle
dec
test
inc
xlat
sub
pop
add
sub
mov
cmpsl
es
pop
enter
js
scas
xchg
aad
lods
dec
mov
fsubs
stc
or
fsubrs
sub
stc
jp
lea
int3
adc
testb
stc
pop
xor
dec
sbb
dec
unpckhps
jecxz
cmpsl
stos
inc
pop
sub
sti
aam
leave
pusha
mov
lret
pop
jae
dec
arpl
add
jecxz
sub
int
mov
dec
mov
jp
xchg
jno
adc
repnz
jg
pusha
mov
mov
pop
push
int3
int3
push
addr16
test
mov
jb
sub
stc
sbb
les
dec
imul
adc
stos
cmp
pop
fistpl
cmpb
mov
out
test
ss
call
push
out
out
scas
popa
sub
rcrb
cmc
scas
or
fsubrs
fcmovbe
push
cmp
xor
shrl
sub
jns
and
mov
dec
mov
sbb
jecxz
inc
jne
in
push
jmp
test
pop
test
mov
jne
mov
and
mov
sub
mov
aam
inc
stos
jmp
aad
shlb
mov
frstor
dec
or
mov
lock
imull
add
ret
aas
xchg
push
popf
aad
rorl
add
pushf
sub
mov
xchg
xor
and
pop
add
jmp
das
stos
nop
das
or
lahf
ss
sub
aam
mov
mov
sbb
stos
dec
clc
xor
mov
add
pop
loope
or
mov
lods
inc
out
push
in
test
movsb
lret
gs
xor
jne
cltd
out
cld
xchg
lea
and
icebp
sbb
push
fdiv
mov
push
jmp
lock
cmp
ret
xchg
leave
int
and
push
fsts
xor
xlat
mov
pop
xchg
orb
int3
adc
jns
mov
jne
mov
outsl
or
mov
jo
jge
sbb
and
xchg
pop
inc
test
push
fcmove
and
and
shl
and
fisubrs
inc
dec
out
lds
add
repz
cmp
fld
sbb
push
mov
ja
push
mov
lret
xlat
lods
or
cld
adc
cmp
std
dec
sbb
ja
add
jno
stos
jb
push
xchg
leave
push
xchg
repnz
incb
mov
push
push
enter
gs
push
mov
add
enter
fbstp
gs
shll
adc
xor
jbe
inc
pop
add
jl
popa
shlb
jbe
or
push
ret
dec
adc
xchg
fs
loope
xchg
clc
clc
or
nop
int
hlt
jmp
sbb
sub
popl
mov
inc
sahf
mov
cltd
push
pop
sub
mov
movsl
ja
sbb
push
dec
lcall
push
aas
dec
xor
faddl
ret
rclb
jmp
rol
jp
lret
xlat
pop
int
aad
gs
lret
cmp
pcmpgtb
jl
ret
movsl
aaa
into
leave
cmc
cmc
mov
pushf
std
or
cmp
mov
adc
push
shll
sub
pop
push
jle
loop
push
ficoms
repz
adc
sub
dec
jge
jne
sub
mov
aam
movsb
data16
jle
push
mov
das
loopne
rclb
dec
xchg
ja
pop
icebp
dec
cwtl
pop
sub
outsl
mov
mov
and
cltd
shrl
pop
in
xor
adc
or
dec
out
xchg
mov
jnp
cmp
lcall
push
icebp
dec
bound
dec
iret
movsb
stc
or
fdivrl
jecxz
xchg
xchg
pop
pushf
jno,pt
mov
ds
push
jb
sub
shll
dec
cld
jns
mov
dec
aad
push
roll
pop
sub
adc
fildll
inc
jb
and
stos
jns
js
clc
lea
pop
push
dec
fs
xchg
cs
push
sarb
in
mov
cltd
lds
test
jl
mov
and
push
fsubrp
test
jb
and
outsb
or
dec
cmpsl
add
fwait
push
xor
and
sub
lretw
xchg
repz
ret
mov
lds
sti
sub
jp
cwtl
aas
or
sbb
cwtl
pop
cmp
jle
push
into
gs
ja
and
ret
into
test
sub
xor
fcoms
mov
xchg
mov
daa
pop
push
lahf
inc
sbb
sbb
repz
popf
mov
mov
jmp
jne
jp
xchg
xor
lods
sahf
stos
mov
in
add
call
or
jnp
lods
imull
enter
test
fistpll
xor
insl
xor
bound
xchg
xor
add
mov
and
test
push
mov
fisubs
jecxz
scas
ret
fdivl
into
pop
sub
and
lret
mov
mov
xlat
or
sbb
fadds
in
js
lret
test
add
inc
sahf
pop
dec
das
popa
inc
adc
cli
inc
cmp
add
mov
sbb
in
test
inc
popa
add
add
xor
jne
int3
dec
pop
lods
add
test
or
aam
dec
mulb
decb
scas
test
andb
imul
pop
test
or
or
cmpsb
stc
pop
mov
fcmovnbe
cmp
ja
cmp
mov
pop
xor
pop
and
dec
popf
jns
sbb
pop
out
sbb
ret
cwtl
sbb
push
imul
xor
outsb
add
jo
nop
das
jecxz
lret
xlat
cmp
sub
mov
sbb
std
pop
out
push
ss
in
lret
cmp
js
subb
fs
xor
mov
push
cmp
cmpb
enter
lock
inc
fdivs
cld
xchg
xlat
jb
jne
push
and
ret
pop
or
lds
shl
orb
sbbl
clc
or
sub
jecxz
ret
mov
int
lock
push
call
or
xor
lea
inc
add
cmp
xor
inc
pop
add
fs
and
xchg
test
inc
lahf
push
xchg
shl
sub
or
push
push
mov
ror
xor
loop
pop
sub
push
push
out
xorl
fwait
push
dec
and
xlat
adc
cmp
and
push
test
inc
bound
std
mov
stc
pushw
fincstp
emms
js
test
and
xor
cmpsb
je
mov
inc
mov
repnz
add
mov
push
in
push
ds
xchg
or
mov
test
add
add
pop
out
sbb
in
divl
fsubrp
mov
pop
or
xchg
add
in
push
sbb
fsubl
add
mov
and
lds
mov
test
loop
pop
mov
mov
add
fiadds
mov
xlat
mov
adc
out
pop
es
xorb
movsb
out
repnz
jno
stc
dec
jge
push
pop
jg
mov
mov
loop
rorb
nop
mov
inc
iret
mov
add
push
ret
mov
adc
cmc
mov
fisubrs
mov
popa
repnz
lods
mov
mov
cmp
xchg
adc
test
xchg
adc
je
cmp
sub
inc
cmpsl
pushf
std
adc
mov
xlat
cmp
lea
inc
sbb
cmpsl
ret
xor
rcrl
test
push
test
pop
sub
hlt
jmp
scas
xor
out
jno
test
cmp
or
sbbb
and
ja
lret
push
test
data16
pop
lret
push
scas
daa
mov
pop
rcrl
add
outsb
push
fldl
movsb
pop
mov
mov
leave
push
mov
pop
push
shrb
cmpsb
cmp
mov
lcall
lea
popa
clc
xchg
or
jg
scas
xchg
dec
in
iret
or
in
and
outsl
push
jo
mov
faddl
in
fmulp
in
push
out
test
outsb
lea
pop
loop
cmp
insb
aam
lods
sub
addr16
adc
mov
fdivrs
enter
cmp
std
inc
mov
mov
sbb
sbb
sub
les
mov
loop
data16
mov
test
push
jmp
mov
lea
test
sbb
sub
fs
push
call
in
into
cmp
pop
push
movl
adc
and
test
or
pop
iret
jp
sub
xchg
cmp
fdivrs
pop
sbb
or
dec
adc
mov
mov
das
in
ficoms
mov
jbe
icebp
add
add
mov
mov
adc
xchg
xchg
add
mov
add
fidivrs
pop
pop
test
and
xor
cmpsl
jl
jnp
insb
pop
sahf
jle
lret
inc
sub
jae
push
sub
divb
xor
sub
adc
leave
fsts
sbb
inc
xor
js
test
lret
sbb
sub
mov
shlb
or
test
jno
mov
femms
aam
pop
jnp
nop
jne
mov
lods
inc
fidivl
sbb
lret
mov
loop
int
pop
imul
sub
cmp
add
jecxz
mov
lods
test
sub
movsl
adc
mov
xor
cwtl
push
push
add
je
arpl
cmpsb
xchg
decl
and
sub
je
xlat
outsb
or
dec
fcmove
stos
cmc
mov
test
adc
and
xchg
xchg
lret
fsubr
je
insl
or
daa
mov
mov
dec
jle
clc
into
push
mov
xchg
xchg
push
pop
mov
inc
out
sbbl
cli
fs
out
pushf
mov
mov
inc
pop
outsb
xchg
jg
inc
es
test
or
testb
jge
xchg
pop
push
shl
imul
sub
dec
dec
filds
sub
xchg
enter
shrl
adc
shll
std
insl
jnp
orb
mov
jae
pop
jne
cmp
lods
mov
rcl
sub
pop
cmp
cld
testl
movsb
mov
fnsave
stos
sbb
and
jbe
sbb
and
test
mov
popf
xor
imul
xor
inc
push
push
popa
clc
inc
lock
imull
jg
inc
je
movsl
push
or
rcl
push
mov
dec
pop
ss
rorl
add
mov
push
sbb
sahf
fisttps
ss
jge
lds
jg
mov
pop
je
sbb
sbbl
pushf
sub
fwait
ret
outsb
andl
inc
mov
mov
add
dec
jb
aas
outsb
shll
add
xchg
xchg
sub
jns
mov
xlat
lahf
jle
add
xor
add
sub
dec
adc
and
pop
dec
stc
mov
notl
je
and
add
enter
mov
lret
aas
cmp
xor
les
sbb
mov
fdivl
fwait
ret
lcall
sbbl
aas
push
scas
aam
sbb
add
mov
scas
xchg
xor
in
jp
push
and
or
leave
std
cltd
jge
fdivrl
ret
dec
inc
push
shrl
ret
jnp
loope
dec
xor
into
stos
sbb
jmp
hlt
jmp
xlat
xchg
out
sub
adc
scas
aaa
jo
int
syscall
cmp
pop
clc
out
cmp
out
sbb
xor
addr16
ja
sti
out
add
mov
subb
pop
in
sbb
sbb
leave
enter
fs
test
pop
add
dec
clc
sub
fucomip
les
cltd
icebp
movsb
out
sarb
stc
and
cltd
push
mov
mov
or
adc
push
dec
pop
sahf
xor
and
mov
dec
lcall
aas
inc
test
enter
inc
fildl
mov
pop
lahf
jge
inc
jecxz
sbb
adc
in
add
sub
popl
push
sub
stos
jne
inc
pusha
pop
daa
xor
xlat
and
mov
fiadds
aam
mov
mov
fidivl
jl
mov
sbb
inc
cltd
les
inc
dec
jo
push
cmp
sbb
fistps
jp
into
arpl
sbb
je
mov
push
cmp
adcl
cli
xchg
mov
push
xchg
inc
or
hlt
cwtl
pop
mov
jmp
jbe
and
repz
sbb
adc
testl
jle
add
push
insl
out
push
jb
orl
adc
jle
inc
mov
nopl
dec
dec
dec
inc
loop
pusha
shrl
sub
insl
pop
bnd
popl
les
jns
movl
dec
int3
rorl
jl
insl
lea
xor
movsl
aad
mov
inc
insl
jge
add
xchg
pop
mov
or
or
mov
cld
xchg
pop
sub
test
mov
fxrstor
rolb
shl
and
dec
loop
fucomp
cli
cmpxchg
icebp
test
imul
mov
sub
or
notl
adc
movsb
sbb
push
push
xchg
sub
leave
adc
xchg
shlb
add
pop
cmc
mov
into
movsl
cmp
pop
cmp
add
or
cmc
adc
lret
mov
test
mov
fnstcw
out
movsb
or
and
mov
in
mov
push
imul
cs
mov
mov
push
push
ljmp
sub
or
mov
adc
sbbb
pop
mov
sub
sbb
push
sbb
mov
jbe
sahf
and
sbb
jmp
sbb
call
rcll
loopne
xor
fcomps
jge
iret
fs
add
andb
jge
lret
adc
mov
mov
call
mov
adc
sub
es
push
jle
push
out
sti
fxch
adc
xor
and
sub
adc
bound
dec
icebp
ret
call
test
inc
and
jle
cmp
out
sbb
sub
pop
mov
fndisi(8087
inc
sbb
mov
je
in
int
push
popf
pop
icebp
enter
pop
mov
mov
push
xchg
stc
les
xchg
pushf
fisubl
pop
xchg
sti
and
and
fdivs
aad
mov
add
mov
fldcw
aaa
dec
jnp
ljmp
dec
mov
andb
nop
sub
jne
mov
mov
sbb
mulb
adc
jne
xor
mov
popf
mov
adc
mov
stos
in
mov
mov
outsl
out
dec
lret
add
test
xor
xor
loope
and
xchg
pop
in
pop
les
scas
pop
or
mov
lods
mov
ss
jge
loopne
xor
fsubrp
cmp
scas
mov
mov
mov
add
orb
mov
xchg
mov
pop
cmpsb
add
test
mov
outsl
loopne
aaa
aad
xlat
push
sbb
stos
push
mov
xchg
out
mov
test
jne
loope
andb
push
mov
pop
int3
push
lahf
incl
out
popf
jecxz
iret
adc
int3
sbb
push
push
cwtl
or
or
out
popa
sbb
pinsrw
inc
sub
mov
aas
mov
stc
inc
push
ret
xor
test
mov
dec
sbb
fmul
cwtl
inc
out
pop
cs
stos
fistpl
js
add
cltd
push
and
add
les
and
push
cmp
scas
cmp
ja
stos
out
jno
dec
pop
ret
jge
notl
int
sbb
in
mov
daa
call
test
mov
cmpsl
filds
mov
xchg
lods
sub
push
push
clc
in
cmp
outsb
inc
push
inc
push
and
shlb
imulb
add
fnsave
adc
movsb
std
add
sub
mov
xchg
mov
push
mov
dec
jmp
in
faddl
push
pop
pop
ret
dec
jae
xchg
data16
ss
in
insb
std
rorb
xor
mov
test
popa
mov
cmc
xchg
sbb
fnstenv
push
stos
push
and
mov
popa
add
dec
pop
mov
sti
cmpsl
ds
iret
jg
push
mov
jno
push
pop
cli
subl
stos
inc
rorb
pop
dec
push
jae
lods
inc
pusha
adc
mov
fisubrl
jbe
jmp
cwtl
sti
in
adc
sub
or
sub
out
into
and
cmp
mov
cs
xchg
mov
cmc
push
jmp
jge
sbb
jb
and
int3
xchg
push
mov
xchg
ljmp
dec
pop
xchg
shlb
xor
pusha
testl
jle
repnz
push
push
sbb
mov
inc
jb
movsb
mov
lahf
pop
addb
push
imul
ret
xor
bound
in
rcll
int
hlt
rcrb
mov
cmp
dec
lret
loop
sbb
hlt
pop
rcrb
cmp
not
daa
scas
arpl
inc
shrb
add
inc
or
mov
in
xchg
add
cmp
mov
in
fimuls
adc
mov
push
hlt
inc
in
cmp
loope
add
pop
fsubs
or
cs
xchg
scas
mov
shl
cwtl
push
mov
xor
out
inc
sub
fnsave
cmp
fimuls
jg
jne
data16
xchg
dec
inc
sbb
das
xchg
lahf
jns
and
xchg
pop
xorl
xchg
mov
sub
shll
xchg
test
pop
pop
sbb
mov
popf
mov
shlb
mov
pushf
sbb
inc
pop
inc
icebp
out
outsb
stos
pop
movsb
ja
sbb
mov
rorl
push
sahf
xchg
jns
repnz
and
mov
je
jmp
fsubl
xor
das
push
dec
loop
push
cltd
aam
cmpsb
jno
xlat
xor
ljmp
push
mov
cmp
jmp
adcb
in
inc
fstps
cmpsb
or
pop
cmp
mov
pop
lds
daa
iret
fistpl
mov
dec
shlb
jmp
push
not
sbb
dec
int3
mov
and
cmpsb
mov
adc
cmc
adc
out
push
dec
pop
jl
jmp
insb
sub
out
ds
xchg
pusha
sub
mov
inc
push
sub
pushf
push
cli
rol
mov
sub
es
rcrl
jo
xor
xchg
or
mov
jecxz
sub
add
jae
adc
jb
mov
sbb
jg
jae
push
xchg
adc
cmpsb
cld
dec
dec
push
fcomps
ds
lcall
cmpsb
cmp
mov
out
jecxz
test
mov
or
lods
ss
repnz
pop
mov
add
jnp
loop
aaa
dec
jle
adc
aad
les
jns
push
pushf
ucomiss
jle
push
inc
mov
inc
loop
insb
dec
cmp
jae
loop
ja
dec
movsl
rolb
mov
pop
js
jne
adc
sbb
imul
int
or
lahf
xor
cmp
and
xchg
cmpsl
push
cmp
sub
in
movsb
cld
xchg
add
lods
arpl
inc
xlat
mov
insb
call
pop
pop
cmc
mov
popa
xchg
and
popa
mov
mov
xchg
xchg
enter
lods
std
imul
repz
es
xchg
mov
adc
and
jp
jg
mov
pop
mov
pop
les
lcall
sub
mov
adc
xlat
outsb
jg
shrl
inc
or
sti
sub
inc
mov
mov
subl
sub
and
sbb
mov
out
jae
cld
cwtl
rcll
sbb
in
add
in
subl
das
cmpsb
fwait
mov
shrb
pop
xchg
mov
fbstp
bound
lods
inc
dec
mov
leave
push
ljmp
and
std
or
adc
loop
pushl
ja
xchg
into
fadd
add
sbb
sub
push
mov
hlt
pop
stos
insl
dec
adc
jmp
push
cmp
stc
mov
mov
pop
sbbb
jbe
mov
mov
mov
inc
les
add
jns
adc
es
movsl
icebp
insb
daa
mov
outsb
test
add
test
cmpsb
ss
ret
sub
mov
loope
addr16
push
out
add
and
xor
push
cltd
pop
out
jg
movsb
adcl
or
sbb
sub
push
add
ljmp
test
dec
daa
sub
lahf
sbb
aad
movsb
push
cmp
ds
out
or
mov
mov
int3
or
or
stos
or
in
movups
inc
pop
das
or
push
cli
push
sub
add
jp
cld
daa
and
icebp
inc
fisubrs
int3
push
je
inc
push
mov
cmp
fucomi
int
cwtl
ja
or
scas
mov
cmp
in
bound
lret
and
out
adc
xchg
in
test
inc
jo
xchg
mulb
mov
inc
repz
lods
mov
pop
scas
xchg
popa
cmc
sub
push
leave
daa
sahf
shlb
push
divb
jle
imul
and
push
loop
fidivrs
add
jp
outsl
jnp
imul
push
ret
imul
jp
nop
push
sbb
icebp
dec
and
mov
push
dec
sbb
xor
cmp
stos
dec
aam
int
jle
adc
vpshab
lods
push
jge
fsubrl
inc
fwait
xor
jno
xchg
in
sub
adc
fwait
test
lret
dec
push
cmpb
cmpsl
fs
xchg
push
shr
adc
inc
lret
or
cmpsb
imul
dec
std
ds
mov
add
inc
pop
xor
push
outsl
ds
inc
popf
stos
push
test
push
and
insl
jo
xlat
jmp
inc
insl
mov
iret
sbb
mov
lret
jno
jmp
or
and
or
jmp
test
xchg
stos
test
out
push
sahf
cltd
sbb
inc
xor
outsb
cmp
mul
xchg
out
xchg
jl
pop
scas
jmp
aad
add
push
inc
pop
adc
pop
test
dec
pop
xor
sti
adc
inc
stos
cmp
jp
outsl
hlt
sbbl
inc
hlt
xchg
fists
mov
movsb
stos
inc
mov
clc
out
xlat
leave
pusha
rorb
std
shl
stc
das
stos
adcb
push
fcomip
jge
and
in
adc
adc
stos
jg
addl
xchg
push
mov
cmpsb
sbb
mov
dec
adc
push
data16
xchg
jns
into
ret
aam
in
dec
ds
sbb
call
sbb
xor
es
pushf
pop
pop
inc
pusha
dec
xor
mov
mov
sbb
outsl
loop
loope
icebp
dec
and
ljmp
ret
rdtsc
icebp
lret
psubsw
stos
mov
xchg
xor
in
pop
push
cli
cmpsb
mov
mov
mov
enter
aad
and
mov
xor
adc
pop
sbb
dec
jns
pop
lahf
inc
aam
cmp
fistpll
sahf
addr16
sbb
ficomps
cs
inc
mov
andl
inc
adcl
mov
shlb
and
jl
pop
fs
pop
imul
mov
sub
mov
push
sub
pop
xor
mov
mov
fimuls
push
inc
int
lcall
jae
das
cmpsl
xchg
cs
aas
scas
test
aad
scas
xchg
jmp
push
test
mov
sbb
test
pop
aam
inc
in
ljmp
sub
mov
inc
daa
scas
sbb
and
push
addl
dec
jnp
adc
add
xor
arpl
lods
cmp
icebp
inc
pop
mov
loop
and
add
push
test
and
test
xor
mov
mov
scas
or
cld
pop
popa
xor
lods
movsb
push
dec
popa
adc
movsl
dec
les
jg
enter
or
xchg
cmp
idivl
push
lock
pop
sbbl
pop
lret
imul
es
cmpl
add
popa
mov
cltd
pop
jge
in
scas
and
mov
xor
dec
out
scas
mov
movsb
or
scas
push
pop
fcompl
fcompl
rorb
mov
ss
dec
sub
lds
int3
pop
cwtl
out
data16
movntq
inc
jl
daa
out
in
pop
pop
cmp
inc
divl
int
dec
and
push
adc
sub
inc
daa
call
inc
pop
push
cwtl
ret
das
daa
outsl
or
shll
mov
clc
mov
inc
stc
or
lret
lock
gs
outsb
in
enter
repnz
andl
mov
adc
push
cmpsb
sbb
pop
stos
cmp
fucomp
and
adc
pop
adc
iret
test
xchg
cwtl
mov
cmp
stc
xchg
cld
xchg
fwait
test
lds
dec
pop
dec
mov
in
xchg
mov
jne
movsb
das
push
xor
mov
adcb
insl
lds
sub
jecxz
dec
pushf
repz
sbb
sbb
lret
hlt
mov
out
pusha
xor
xchg
pop
shlb
adc
push
sbb
inc
push
rol
mov
or
cmp
xchg
and
aam
xchg
adc
das
lcall
mov
imul
or
rorb
test
push
je
cmp
cmp
test
jge
pop
aaa
sbb
xlat
jne
addr16
lods
mov
aad
rorl
es
out
cmp
sti
gs
aas
adc
js
shlb
mov
in
xchg
loope
int3
sbb
fadd
in
push
jmp
pop
test
das
mov
cmp
mov
aas
or
cmpsl
mov
loope
or
push
pushf
jno
std
mov
in
in
test
lods
popa
ljmp
call
stos
fcoms
mulb
add
enter
adc
xor
ds
das
je
popf
pop
jmp
sub
cmpsb
mov
inc
cltd
in
dec
adc
and
loope
push
pop
std
fsubrs
mov
rol
cmpsb
or
lcall
sbb
stos
or
jmp
pop
add
xor
imul
sub
or
mov
roll
fmuls
and
mov
scas
out
lcall
inc
int3
out
mov
mov
jnp
sahf
adc
ret
push
jnp
std
rol
pusha
jo
jns
in
movsl
cmp
or
fists
stos
sbb
lods
clc
inc
jecxz
repz
gs
loopne
orb
mov
hlt
mulb
mov
dec
cld
mov
ljmp
jno
xchg
xor
xor
cmpsb
dec
mov
filds
cli
pushf
gs
into
mov
sub
aad
leave
das
lahf
jle
stos
mov
inc
lret
out
lock
roll
stos
leave
add
addr16
imul
insl
fdivl
xchg
test
mov
or
pop
mov
lea
pop
jp
ss
into
repz
dec
push
push
add
gs
pop
loopne
push
jae
in
in
cmc
and
mov
dec
dec
pop
xchg
adc
cwtl
pop
or
sahf
scas
aas
adc
outsl
fisubs
jge
outsl
cwtl
fdivrl
jg
out
add
pop
xchg
sub
xor
bound
mov
sub
jo
adc
notb
xor
push
sub
adc
add
push
ds
adc
bound
ss
in
jmp
cmp
push
ret
test
ss
xchg
fnstenv
xchg
pop
cmp
mov
jmp
mov
out
mov
and
lea
fnsave
sub
test
mov
push
lods
ljmp
pushf
cmc
outsl
loop
xor
sbb
mov
sar
in
xchg
xor
pop
lcall
test
adc
inc
push
adc
shl
js
aaa
scas
add
clc
out
fdivl
and
shrl
out
sti
add
lea
sub
loopne
ret
sub
mov
or
xchg
jge
mov
leave
xorl
sub
inc
pop
or
jg
and
inc
or
lret
cld
cli
xchg
daa
mov
in
xor
cmp
cmp
andl
dec
jo
cmp
bts
fwait
xor
arpl
dec
sub
addb
add
movsb
cmp
in
inc
dec
inc
dec
jo
mov
cwtl
xchg
cmc
test
scas
mov
xor
and
fwait
insl
pop
cld
inc
jge
loopne
inc
dec
push
fwait
clc
mov
mov
mov
ret
outsb
dec
mov
iret
cwtl
sub
cld
lods
mov
sbb
cli
mov
push
xchg
xor
in
xor
push
out
push
imul
push
je
pop
jl
movsb
movsb
sbb
jae
push
pop
mov
imul
pop
cmp
mov
inc
xor
mov
adc
mov
lret
cmpsb
dec
mov
xor
jle
mov
fimull
jg
and
ss
lcall
into
push
mov
leave
mov
sahf
test
xchg
jmp
adc
xor
sahf
push
arpl
cmpl
ret
sub
int
aaa
imul
cs
movsl
dec
lods
pop
push
add
xchg
mov
and
dec
lds
sahf
dec
outsl
repz
sub
and
lods
in
js
sbb
lcall
in
adc
push
xlat
scas
aad
aad
lret
lock
push
lea
ror
int
notb
movsl
test
and
cltd
push
into
call
in
push
fdivl
adc
cli
ds
push
adc
xor
std
out
lcall
in
outsb
xor
imul
into
mov
outsb
fnstcw
sti
xchg
imul
aad
enter
or
std
xchg
cld
repnz
jno
cwtl
dec
add
sub
lods
scas
dec
js
icebp
outsl
push
in
lahf
mov
inc
pushf
cmp
int3
push
aas
lds
mov
es
pop
mov
std
pushf
scas
pop
sub
mov
pop
addr16
mov
cmp
aam
xor
mov
popa
lret
cmp
clc
addr16
je
pushf
test
mov
scas
inc
dec
dec
pop
sub
mov
or
loopne
jle
inc
hlt
sub
daa
mov
sub
cmpsb
aam
mov
imull
fdivs
fstps
or
psrld
aad
mov
pop
pop
adc
lcall
or
lock
push
pusha
xchg
xchg
orl
mov
xor
sti
and
and
out
lea
add
imul
xchg
push
jno
jmp
xchg
je
add
inc
cwtl
push
clc
ror
aaa
mov
cmp
sbb
sub
adc
repnz
sub
jae
dec
lret
dec
xchg
pop
jmp
sub
pop
leave
jl
jg
push
sub
mov
fwait
xor
lahf
cmpsl
dec
aaa
fwait
les
pusha
and
sbb
cs
cwtl
lea
mov
push
loop
shrl
lret
pop
imul
dec
sub
lcall
jl
bound
popf
jbe
les
out
or
pop
inc
sbb
repz
clc
pop
repz
ljmp
arpl
sahf
mov
cmpb
push
outsl
fnstcw
push
outsb
scas
pop
inc
lods
add
das
inc
inc
sub
cltd
mov
xor
in
inc
scas
cmp
jmp
sbbl
cmp
xlat
js
jno
scas
mov
sarl
movsb
cmp
xor
les
cwtl
daa
ja
xchg
push
out
ret
jecxz
int3
push
clc
add
lock
movsl
shrb
clc
aaa
call
ja
adc
mov
adc
mov
push
xchg
cwtl
or
loopne
pop
jmp
jnp
cwtl
das
aad
movsb
cmp
dec
add
decl
dec
fstps
mov
loopne
push
in
mov
shll
ret
jge
out
out
mov
mov
mulb
aas
sub
fiaddl
ds
push
aam
push
cmp
mov
icebp
lret
inc
popf
das
pop
xchg
aaa
pop
imul
lock
sti
subb
pushf
dec
dec
push
lds
xorl
inc
leave
mov
mov
pop
insl
enter
cs
mov
shl
add
mov
fcmovbe
xor
push
mov
imul
sbb
dec
jge
data16
sub
cs
in
call
test
add
inc
mov
mov
fwait
or
and
mov
mov
cmp
adc
out
xor
mov
je
jns
jg
fistl
pop
cmpsl
xor
jge
push
loopne
mov
xchg
cmp
insl
out
sti
in
add
in
mov
mov
cli
mov
xor
stos
imul
into
jl
pop
dec
testl
into
int
aad
lret
jo
inc
aam
cli
mov
xchg
pop
cmp
or
add
test
or
mull
pop
loope
pop
mov
or
movsl
hlt
insl
idivb
cmpsl
jle
cmp
xchg
jmp
cmp
loop
es
fistpll
sti
bound
adc
mov
movsb
cmp
rol
ret
mov
jbe
cld
push
mov
pop
lea
sti
inc
stos
mov
pop
aad
xor
jg
insl
cltd
out
outsl
aas
dec
lret
cmp
inc
imul
lret
or
add
xchg
pop
or
jae
in
mov
dec
pop
sti
insl
inc
xor
and
jnp
jg
mov
push
sub
loope
adc
inc
xlat
loop
into
fstpl
dec
test
pop
and
or
orl
pop
imul
ljmp
and
lea
inc
fnstcw
sahf
pusha
rolb
or
xlat
ss
inc
and
xor
int
sub
stc
es
xor
and
stos
add
dec
xchg
jno
test
push
cld
inc
pop
pop
insb
pop
insl
mov
in
cmc
lret
rcrl
incl
push
sbb
fldl2t
sub
mov
lock
stos
adc
xor
pop
aam
cmp
enter
lahf
sbb
jae
cli
mov
popa
inc
scas
bound
int3
push
jb
fwait
xor
and
or
adc
mov
jg
jb
mov
mov
sbbl
fcoms
lods
or
movsl
cmp
outsl
loope
mov
inc
mov
insb
xor
and
xchg
cmp
pop
jg
sub
je
sub
fstpt
cli
sbb
jnp
dec
ja
imul
add
or
inc
or
or
mov
ljmp
pop
adcb
inc
out
iret
inc
fiadds
add
mov
push
aam
jl
jb
inc
dec
aad
jle
hlt
dec
pop
test
push
mov
jno
jnp
lds
and
push
fwait
inc
out
ja
mov
sbb
fstpt
iret
or
and
adc
push
in
pop
xor
addr16
arpl
mov
fistl
mov
xchg
xor
inc
imul
hlt
ja
pop
loope
loop
or
repnz
cld
dec
out
outsb
xchg
ficoml
js
mov
jp
and
ret
loopne
cltd
push
mov
aam
xor
mov
mov
push
lods
imul
jnp
rep
aas
cltd
imul
push
lea
sbb
jecxz
jmp
xchg
addr16
pop
mov
pop
std
mov
ss
xchg
inc
aaa
shll
push
icebp
or
add
sarb
icebp
loopne
cmp
pop
icebp
inc
jp
push
pushf
and
fldenv
cmc
xor
stos
jle
xor
out
cmp
jo
repz
xchg
push
inc
push
out
gs
loope
repz
push
out
sub
add
hlt
std
popa
dec
clc
or
mov
clc
lock
movsl
dec
pop
or
push
mov
mov
pop
xor
scas
xor
inc
test
xor
jae
lea
aaa
clc
cli
cltd
push
jbe
mov
mov
dec
cli
imull
adc
sub
negl
fildll
test
ss
and
pop
pusha
jnp
xor
repz
iret
data16
repz
stc
in
jl
lock
or
cmc
notb
out
decl
dec
fs
rcr
mov
xor
call
out
jle
lea
mov
dec
lcall
jno
and
cmp
jp
fsubrl
stos
add
pop
fidivs
jmp
cld
mov
ljmp
sub
dec
jecxz
sbb
adcb
or
push
call
and
xor
bound
lahf
ss
out
mov
pop
clc
in
pushf
push
inc
add
push
icebp
pop
sbb
call
outsb
std
push
mov
push
sahf
adc
fnstenv
mov
lea
andl
add
or
bound
xchg
xor
mov
iret
dec
and
rcll
shrl
jns
dec
lods
xor
leave
gs
bound
push
call
outsl
xor
test
shrl
call
out
popf
mov
int
in
add
icebp
es
loopne
mov
xor
leave
adc
inc
mov
xchg
scas
int3
fidivs
mov
out
add
xchg
test
sub
add
push
repz
pop
jle
es
cld
dec
sub
cmp
cmpsb
js
pop
aas
enter
inc
push
lods
dec
out
add
xor
arpl
mov
mov
shrl
shrb
iret
jne
xorl
je
mov
adc
push
push
mov
jne
movsl
pop
inc
sbb
push
lcall
push
stos
sbb
out
frstor
imul
sbb
sbb
cmp
sbbb
lods
add
lock
in
cld
loope
pop
sbb
imul
sarl
inc
xchg
out
mov
inc
sub
inc
jne
nop
cmp
mov
mov
lret
push
loopne
sub
dec
bound
addl
stos
mov
mov
push
add
jo
insl
pusha
ss
xor
idiv
push
inc
xchg
inc
scas
cs
fisubrl
xchg
pop
test
lods
mov
fadds
add
jnp
adc
jmp
loopne
movsb
adc
imul
xchg
mov
ja
ljmp
fsubrs
push
or
addr16
aam
xor
inc
arpl
mov
inc
rcrl
xchg
js
add
or
and
lcall
es
je
sub
sub
jns
sbb
addb
icebp
adc
pop
xchg
mov
xchg
cmp
mov
mov
xchg
mov
stos
inc
test
inc
dec
cmc
jge
fs
pop
inc
inc
ja
fisubl
into
cwtl
sti
fnsave
testb
adcb
mov
inc
fldenv
add
aas
jbe
pusha
lock
xlat
mov
ds
mov
lcall
and
popf
ss
iret
push
daa
fsubs
cmc
mov
cmpsb
or
loope
jno
sub
jbe
imul
aaa
scas
in
sbbl
sub
aam
sti
lcall
pop
das
push
scas
cmp
lcall
dec
daa
mov
cwtl
xor
int3
movsb
out
push
aad
push
insb
and
push
mov
cmp
inc
mov
das
fucomp
fdivrl
pop
ds
das
xchg
pop
mov
dec
mov
push
xor
sbb
dec
xchg
add
xchg
and
mov
movsl
push
mov
mov
mov
or
xor
scas
or
rorl
cmp
cmp
push
lock
jl
mov
pop
and
mov
push
mov
scas
add
int3
xchg
pop
sahf
stos
dec
add
jb
adc
stos
lds
sub
lahf
rolb
cmpl
cltd
sbb
rcrl
enter
push
sbb
inc
ja
cmc
es
xchg
popf
aam
rcrb
test
repz
aam
push
jecxz
pop
fdivrs
mov
leave
test
add
or
cmpsb
adc
cmp
xor
mov
push
adc
into
shl
int3
lret
inc
aam
cli
loope
sub
arpl
aad
sbb
mov
pop
inc
ljmp
cwtl
xchg
arpl
and
xlat
mov
arpl
int3
fimuls
push
out
loopne
fdivl
fldenv
jecxz
mov
jp
bound
js
leave
popa
mov
cli
lods
inc
stos
cmpsb
dec
pusha
mov
pop
stos
mov
jge
into
jno
mov
ret
and
or
push
sub
fsubrl
std
std
shl
ror
jmp
dec
out
out
clc
or
xchg
and
lods
jg
cmpsb
sub
fsubr
inc
pop
stos
std
sub
xchg
dec
out
pop
lods
mov
mov
rcrl
test
push
jns
jbe
xor
inc
test
std
dec
inc
inc
cwtl
xor
rclb
pusha
je
loop
test
pop
mov
push
sar
lret
outsl
pop
fidivl
nop
pop
lock
xor
push
push
adc
in
adc
jmp
stc
fimuls
js
mov
lret
rcll
ss
mov
add
gs
enter
stc
inc
push
ret
dec
cmpsl
jnp
lret
mov
leave
in
jl
add
inc
movq
cmp
xor
mov
leave
incl
shll
pop
flds
xchg
mov
sbb
ds
dec
loopne
ljmp
sub
inc
mov
jne
dec
mov
mov
sub
mov
loope
out
push
xor
mov
mov
test
dec
inc
stos
or
or
stos
filds
xlat
jecxz
jmp
dec
mov
int3
xor
cmp
movsb
adc
scas
xchg
scas
xchg
fs
ljmp
test
and
sahf
fwait
aaa
pushf
insl
repnz
mov
fistpl
nop
dec
ljmp
fnsave
nop
sahf
adc
or
jne
xchg
cmpsb
push
mov
dec
inc
mov
push
mov
jns
pop
and
adc
mov
fwait
out
fcmovnbe
xor
insl
pop
mov
adc
ja
pop
sub
sbbl
dec
out
jecxz
and
roll
push
push
imul
dec
mov
pop
add
arpl
addr16
outsb
loope
mov
clc
mov
sub
xor
jmp
and
xor
lcall
inc
adc
cmp
mov
aas
cltd
icebp
lret
sahf
add
jb
mov
inc
mov
fstpl
leave
movsb
jne
jb
out
in
xchg
jg
jno
jecxz
fisttps
dec
add
xor
adc
sbb
ljmp
xor
jmp
xor
xor
mov
ljmp
push
hlt
dec
sub
push
adc
lret
pop
in
add
mov
std
xchg
xchg
cmp
push
movsb
xchg
xchg
inc
xchg
ja
or
pushf
sbb
pop
dec
mov
pushf
adc
icebp
nop
or
fdivs
jle
jg
xchg
xor
cmp
mov
inc
daa
ds
cltd
lcall
adc
jo
sub
ss
test
inc
mov
in
or
inc
inc
xchg
lahf
xor
jl
mov
iret
or
lret
pop
jo
inc
mov
xchg
out
or
in
sbb
rorb
jns
jg
loop
ds
cld
into
inc
mov
mov
int
mov
decl
or
mov
lahf
push
movsl
dec
pop
xlat
aaa
lds
cmp
stos
sbb
mulb
pop
popa
xchg
cs
movsl
or
rcr
insb
push
lcall
cmp
xchg
dec
loope
mov
in
popa
lock
push
fidivrs
mov
ljmp
inc
ror
pusha
ret
xor
in
lret
pop
mov
std
sub
orl
xor
mov
jg
orl
inc
test
dec
or
pushf
icebp
xlat
imull
xchg
cmp
adc
je
cmpsb
jp
push
in
jnp
mov
lods
cmpsb
cmpsl
sti
aam
arpl
sahf
mov
push
xor
pop
jp
mov
je
repz
loope
repnz
insb
ljmp
mov
pop
cltd
js
push
pushf
pop
sub
lret
js
loopne
sub
in
dec
sahf
es
cmp
lahf
xorb
cld
jo
out
mov
jbe
test
repnz
push
xchg
ljmp
imul
popf
sub
addb
sub
mov
sahf
gs
shll
add
pop
jl
inc
jb
cld
jo
lcall
sub
xor
xchg
cmp
xor
and
loopne
hlt
inc
pop
cmc
jne
mov
pop
jge
fwait
mov
test
pop
cmpsl
inc
sbb
subl
pop
pop
repnz
add
or
cmpsl
push
lcall
mov
pop
imul
lret
and
cltd
or
and
int
mov
mov
xchg
aaa
push
inc
add
arpl
sbb
aad
adc
push
jmp
jmp
test
pop
inc
inc
pop
xor
inc
dec
fildll
shlb
add
mov
add
jmp
je
cltd
movsl
xorb
outsb
arpl
push
sti
int3
bound
lock
nop
std
xchg
ret
and
xchg
popa
sbb
mov
leave
xchg
pop
lock
xchg
sub
inc
cli
xchg
inc
popf
lods
mov
sbb
aaa
outsb
shlb
inc
into
sbb
pop
outsl
es
adc
pop
mov
mov
mov
ss
or
les
addl
push
in
push
mov
push
cltd
jne
or
cs
scas
pop
insb
cmc
dec
pop
inc
outsl
push
jo
add
mov
lea
xchg
mov
or
inc
bound
ret
pop
pushl
push
idivb
popf
je
or
repz
or
lret
adc
mov
sarl
add
ss
push
or
jg
xchg
and
shl
or
and
xor
mov
mov
call
adc
je
orb
push
data16
or
dec
mov
jp
jmp
in
dec
sahf
adcb
rcll
mov
sbb
add
out
mov
push
insl
jge
cmp
int
xorb
and
scas
enter
cmpsb
bound
xchg
aas
add
xchg
mov
xor
pop
mov
aaa
call
or
and
pop
fnsave
data16
iret
sbb
nop
mov
mov
dec
outsl
and
inc
bound
iret
cld
xchg
ljmp
es
lret
jb
inc
aam
stos
add
xchg
aam
push
or
repnz
inc
insl
or
ret
push
shrb
rcrl
mov
data16
mov
mov
test
mov
mov
fimuls
push
test
ficompl
jl
repz
or
jl
test
adcl
les
pushf
test
jnp
mov
push
lcall
push
cmc
imul
gs
pushf
dec
mov
out
mov
or
popa
sub
pop
mov
pop
xor
out
jp
int
push
jmp
fistl
scas
adc
jl
cmc
insl
movsl
push
and
xchg
adc
add
xchg
hlt
shrb
pminub
and
sub
leave
pop
ror
dec
add
fbstp
mov
inc
mov
xchg
adcb
ja
or
loop
pop
sbb
ficoms
or
lea
jns
push
add
xor
push
es
dec
add
addr16
insb
pop
adc
adc
aaa
imul
cld
jmp
inc
popf
jno
jno
pusha
mov
mov
pop
nop
daa
xchg
inc
fdivl
mov
xchg
inc
mov
scas
adc
aad
in
stos
mov
sbb
shlb
ror
lds
clc
cld
jno
test
nop
arpl
rclb
push
jmp
pop
xchg
xor
mov
add
mov
nop
dec
sbb
daa
ljmp
mov
dec
leave
clc
adc
push
pop
or
scas
rcrb
inc
inc
push
push
sbb
xlat
mov
leave
loope
push
pop
mov
mov
call
lret
mov
insl
jp
pusha
cmp
inc
sbb
lds
xchg
shrb
cmc
mov
shlb
mov
inc
mov
or
pusha
add
jns
cmp
dec
xchg
mov
imul
out
gs
outsl
cmp
lret
cmp
cmp
movsb
jl
inc
std
and
pop
ret
pop
je
inc
xor
mov
imul
adc
rcrl
sbbl
pop
sbb
fadd
sub
addr16
adc
ficomps
pushf
shl
fisubl
jb
mov
mov
fs
cwtl
das
cmp
iret
add
sub
pop
call
push
std
ljmp
leave
stos
mov
and
jno
es
cmp
int3
cmp
add
and
insb
push
fwait
xor
xor
dec
iret
push
fdivrs
mov
lods
jno
fmulp
cmp
incb
sub
adc
aaa
dec
in
push
push
lds
cmpsb
lods
fisubs
pop
enter
push
fisubrl
push
movsl
xchg
push
mov
xchg
imul
add
fisubrl
popa
clc
xor
jg
test
and
jecxz
rcll
inc
icebp
pop
add
iret
js
mov
popf
stc
mov
aaa
fwait
add
addb
fmulp
mov
popa
xor
or
test
testl
mov
mov
push
mov
mov
push
aas
shrl
out
or
imul
scas
jns
shr
cmp
aaa
cmp
insl
pop
inc
fcmovnu
mov
sahf
insb
stc
bound
sbb
xlat
push
push
popf
or
lock
ret
and
dec
loope
mov
pop
loope
dec
fdivl
repz
sub
sti
xchg
test
mov
xchg
repnz
jmp
nop
sbb
push
xor
test
and
mov
sbb
cli
aad
xor
or
push
push
movsb
or
bound
sub
ja
stos
sbb
add
xchg
insb
and
repz
hlt
enter
mov
test
add
mov
lods
ss
aaa
mov
jbe
ja
js
movsb
sbb
aas
dec
pop
mov
jbe
mov
mov
addb
pop
sahf
dec
fdivr
stos
dec
mov
cwtl
call
jmp
inc
inc
or
je
addr16
jl
push
or
cmp
scas
fdivrl
fwait
push
ljmp
jno
call
dec
adc
daa
mov
fldl
pop
mov
sub
cmp
dec
cmp
pop
insb
outsl
dec
cli
adc
push
push
inc
pop
and
push
xchg
and
xchg
ficompl
jae
fisubrl
adc
cli
xchg
lret
pop
rol
xor
stc
xchg
addr16
jmp
fcomip
mov
xor
in
lcall
xchg
jmp
call
adc
andb
pop
push
insb
push
hlt
mov
xchg
loope
add
inc
push
divl
jle
and
inc
push
sbb
data16
jnp
fnstsw
loop
xchg
loop
push
push
cmp
nop
gs
lods
ss
hlt
es
ljmp
mov
cmpsb
push
sub
outsl
dec
pop
cs
loop
lahf
cwtl
xor
iret
xor
sbb
xor
or
push
hlt
inc
aad
ret
cli
or
jno
daa
or
xchg
shlb
mov
sbb
inc
mov
pop
adc
fidivs
lret
in
sub
push
mov
mov
push
xchg
cmp
or
jecxz
sbb
sbb
mov
fidivl
mov
sahf
inc
lds
sahf
and
inc
montmul
cmpsb
subl
sub
pop
sbb
in
outsl
cmp
cli
int
sarl
outsb
iret
pop
mov
jle
sub
sub
sub
or
sbb
insl
push
inc
mov
jp
sbb
cmp
push
inc
xchg
mov
adc
cmp
cmp
cwtl
ret
sub
shrb
mov
enter
aaa
aas
fldl
in
xchg
inc
or
pop
and
jo
fsubrp
add
ret
outsb
push
daa
stc
dec
jb
mov
unpcklps
mov
add
xchg
mov
call
int3
popf
jmp
imul
sti
push
mov
or
ret
jmp
lret
xlat
adc
mov
sbb
mov
mov
jbe
add
fidivl
or
and
lea
fistpl
insb
dec
or
daa
cmp
cwtl
inc
jne
fisubrs
xor
inc
insl
xchg
fs
fwait
cmpsl
stos
mov
sarl
mov
push
jb
movsl
pop
sbb
scas
push
fwait
js
test
rorl
cmc
loop
adc
xchg
mov
and
hlt
nop
mov
push
inc
bound
ret
pusha
jg
mov
mov
push
repnz
or
fsubrs
js
xor
dec
testb
cmpsb
xchg
xlat
dec
sub
sub
pop
or
mov
xor
fidivl
cmp
mov
cmp
sbb
cmp
mov
sarl
jns
push
shll
in
out
out
adc
cs
arpl
in
xchg
or
and
sbb
fsubr
jbe
ds
xor
or
push
cld
outsb
xlat
or
and
sti
mov
cld
push
call
mov
mov
es
and
aaa
clc
dec
test
sbb
std
repz
jae
mov
js
mov
mov
xchg
and
push
push
mov
fscale
punpckldq
mov
push
inc
push
xlat
outsb
xchg
jnp
shll
mov
repnz
js
test
int3
arpl
jg
stos
dec
sub
sub
and
dec
xchg
into
jecxz
mov
add
loope
popf
sbb
dec
jmp
in
dec
pop
inc
mov
sub
cmpsl
ljmp
notb
decl
sub
push
pop
addr16
int3
arpl
pop
push
lea
cmpsl
outsl
cltd
cmp
dec
insb
jecxz
mov
nop
dec
sub
dec
dec
in
mov
sbb
mov
cli
xchg
adc
xchg
jle
sub
push
dec
leave
enter
push
push
addr16
mov
adc
adc
sbb
fsubr
leave
pushf
pop
cmpsb
js
pushf
mov
push
and
dec
outsb
iret
dec
add
sub
pop
out
nop
inc
xor
insl
push
dec
mov
das
mov
fisubs
leave
sti
xchg
data16
ret
stos
xchg
insb
and
call
cltd
shrl
push
inc
test
mov
arpl
push
lahf
scas
mov
neg
jp
hlt
mov
xchg
lahf
dec
xor
cmpsl
std
iret
pop
mov
addr16
aam
mov
cmp
sub
mov
stos
inc
in
es
jno
lods
leave
pusha
fbld
push
inc
shr
adc
adc
jae
mov
adc
nop
cld
retw
xor
dec
xchg
aaa
into
loope
xchg
lds
mov
add
aad
and
movsl
dec
pop
mov
ret
add
adc
jns
test
sbb
fstl
jmp
lea
ret
add
mov
adc
lret
and
js
xchg
add
stc
pop
sbb
mov
ljmp
push
push
push
pushf
je
xor
mov
jns
jl
mov
xchg
dec
lods
cmp
setg
outsb
cld
sbb
cmp
jns
js
inc
scas
mov
loope
jmp
rcl
add
arpl
pop
push
ds
andl
jnp
inc
adc
sbb
loopne
loopne
push
mov
decb
mov
cli
jmp
xor
mov
mov
stc
loopne
fwait
adc
mov
pusha
push
xchg
sarl
scas
jbe
cmp
or
xor
sti
mov
loopne
sub
xlat
lret
xchg
mov
sbb
stos
xorps
or
push
xor
jp
popf
pushf
xor
call
lea
cmpb
mov
lahf
pop
adc
mov
pop
andl
shrb
mov
lods
aaa
xor
nop
hlt
loopne
jbe
ljmp
fdivl
aad
lret
pusha
mov
rcrl
int3
insb
adc
push
and
pop
imul
test
fwait
push
out
mov
sbb
fwait
daa
adc
rcrl
in
mov
addr16
and
jl
push
pop
sub
xchg
into
stc
or
pop
sahf
add
or
push
es
mov
lret
mov
les
jg
sbbl
xor
mov
push
xlat
rcrb
sbb
stos
inc
out
pop
pop
mov
add
popf
push
sub
dec
faddp
sbb
pop
dec
fucomip
dec
xchg
cmc
push
loop,pn
pusha
aas
push
in
mov
cld
add
sub
imul
cwtl
jb
leave
stos
or
add
data16
rclb
cmp
dec
xor
or
add
sbb
popa
incl
push
imul
jns
iret
mov
dec
leave
fisubrs
invlpg
sub
movsb
mov
mov
cmp
popf
add
rep
mov
lea
shrb
addr16
dec
sbb
in
imul
mov
aam
mov
pop
xchg
mov
out
pop
and
stos
cmp
mov
divb
cltd
inc
aaa
call
mov
adc
push
cmp
add
aam
jae
cmp
mov
lret
fstpl
adc
insl
lds
push
hlt
test
cltd
pusha
lret
sub
cmpb
inc
cmc
out
ds
imul
xor
sti
sub
sub
sub
arpl
mov
sbb
mov
das
fs
jbe
push
popf
ret
inc
ret
pop
sbb
sub
repz
dec
sub
xchg
daa
inc
out
and
lcall
dec
pop
sbb
cmp
lods
xor
push
repnz
cmc
faddl
push
rcll
stos
or
cmpsb
mov
add
jle
or
arpl
in
test
mov
dec
aam
decl
dec
jecxz
xlat
sbb
mov
mov
jmp
pop
rclb
pop
jno
mov
std
nop
shrl
or
or
lahf
sub
sbb
xchg
mov
mov
sub
mov
mov
pop
rorl
lock
lcall
cltd
das
and
mov
jl
movsl
cmp
mov
jns
je
sub
or
movsl
lret
lret
cmpsl
mov
popf
mov
push
es
push
push
cmp
mov
lret
mov
mov
cld
xchg
add
pop
insb
or
ss
shlb
pop
inc
mov
sbb
in
xor
mov
sbb
outsl
inc
in
sbb
mov
mov
jns
and
push
push
sub
cmp
mov
or
jns
add
decb
leave
das
data16
push
and
aam
popf
popf
or
mov
aam
mulb
dec
js
add
imul
icebp
mov
inc
mov
pop
sub
shld
cs
in
es
push
fmulp
mov
push
ss
add
xchg
push
xchg
les
aas
xchg
roll
fsubrp
adc
add
add
inc
add
pop
dec
test
in
and
out
in
push
subl
sbb
test
mov
in
mov
push
inc
in
jae
mov
dec
aad
jl
push
push
ja
pop
jge
and
mov
scas
jle
mov
clc
stos
arpl
cmp
mov
adc
rcrl
add
popf
mov
cmp
lcall
push
pop
lods
mov
push
lcall
pop
shll
dec
out
push
and
sub
pop
mov
inc
cmpsl
add
push
in
push
or
enter
into
fidivrs
ret
shrl
out
mov
stc
lret
inc
in
movsb
mov
je
int3
jns
ljmp
jb
addr16
dec
xchg
mov
lods
mov
add
stos
cltd
or
adc
arpl
mov
jl
sbb
mov
subb
stos
mov
push
mov
jmp
das
sysenter
lret
inc
pop
adc
mov
push
dec
mov
push
dec
fstps
inc
jne
ljmp
fwait
movsl
imul
pop
mov
dec
and
or
fs
es
pop
loope
movsb
sub
nop
fistps
in
and
push
das
shr
mov
cmp
or
mov
mov
jne
movsb
cmpsb
mull
scas
xlat
push
sahf
push
jmp
out
pop
fisubs
and
inc
dec
lret
mov
ret
xchg
scas
add
mov
bound
mov
rcl
push
out
sub
inc
daa
mov
jge
mov
add
pop
push
jbe
mov
addr16
fld
pop
or
inc
sub
cmp
push
bound
xchg
ret
xor
movsb
xor
xchg
sbb
fisttpl
and
mov
mov
test
dec
fmull
dec
pop
es
das
bound
or
pop
mov
orl
dec
mov
xlat
es
lods
mov
push
hlt
daa
mov
jp
xchg
out
lret
cld
adc
ss
notl
and
dec
ds
pop
mov
sbb
subb
and
jnp
insl
test
cmpsb
movsb
dec
push
js
shrb
rolb
cs
pop
repnz
dec
pushf
and
push
mov
push
and
adc
cmpb
mov
adc
pop
leave
adc
loop
sub
int
mov
pop
sbb
test
pop
xor
int3
xchg
dec
rclb
dec
in
dec
fidivs
xor
sbb
and
mov
and
rcrl
sub
ja
inc
xchg
or
mov
int
gs
add
xchg
sub
lret
ja
and
xor
jae
xchg
lods
call
mov
jne
pop
xor
xchg
adc
test
inc
and
fwait
mov
xchg
icebp
mov
push
mov
pop
insb
cmp
call
repz
in
inc
sbb
mov
mov
xor
test
lahf
mov
cmpsl
sahf
xor
repnz
loopne
ja
lods
hlt
call
cmpsl
iret
movsb
dec
cmpsl
enter
enter
jecxz
sub
sbb
inc
outsl
cld
dec
rcrb
js
ficompl
mov
xor
sbb
lods
rcrl
imul
ss
aas
out
adc
sarb
into
loop
arpl
mov
push
rcl
mov
aas
add
mov
mov
in
mov
pop
add
nop
lcall
stc
cmp
sbb
pop
hlt
lds
pop
and
iret
sub
loop
lds
insb
jbe
or
mov
fadd
push
repz
rcrl
mov
test
cmp
int
les
leave
jns
test
adc
or
and
lcall
int3
cmp
sbb
out
pop
add
push
sub
aad
and
repnz
cmp
or
xchg
into
jnp
jns
out
or
cwtl
jbe
push
test
sub
addb
cld
cmp
sbb
ret
dec
mov
hlt
aas
in
clc
test
leave
or
cli
test
add
int3
leave
lcall
ds
cmc
add
mov
mov
out
xor
stos
gs
xchg
fstl
pop
add
mov
push
aas
push
test
popf
and
mov
in
insl
xchg
cld
push
movsb
xchg
clc
loopne
clc
xlat
mov
loopne
inc
gs
lock
inc
mov
push
adc
mov
xor
in
test
call
or
int
into
pop
pop
out
sub
mov
jg
in
add
ja
push
loopne
aaa
mov
mov
arpl
jp
sub
sarl
repz
sbb
stos
cmp
adc
iret
das
cmp
shrb
pusha
or
into
cmp
movsb
cmp
rcrl
mov
pushl
loope
cmp
push
and
sahf
out
mov
scas
inc
popa
jb
jno
icebp
mov
cmp
add
out
rcrl
push
ljmp
pop
xor
aad
sti
mov
pop
jae
cwtl
test
xchg
loop
mov
push
add
mov
mov
or
pop
movsb
ret
add
xor
popf
gs
dec
push
inc
outsl
and
adc
mov
popf
push
mov
jne
gs
xchg
xchg
xchg
xor
in
mov
ret
daa
mov
xor
nop
ja
push
lock
push
lret
cmc
insl
mov
pop
jae
decb
jp
mov
stc
adc
or
sub
adc
jns
stc
stos
or
jb
sbb
call
xor
add
inc
push
sub
into
pushfw
mov
imul
orb
test
cltd
push
xchg
fdivs
xchg
call
cld
out
cs
jecxz
mov
fwait
adc
dec
mov
insb
es
dec
xor
popa
jns
in
or
pop
ds
aam
shl
and
repz
ja
sbb
insb
pop
in
inc
mov
add
adc
std
xchg
mov
ret
xor
jbe
cmp
xor
sbb
lock
sbbl
inc
cmc
mov
push
pop
fstps
mov
dec
inc
addr16
icebp
fsubrl
add
pop
push
addr16
sbb
inc
add
mov
stos
aad
lock
push
jae
dec
popf
xor
xchg
or
push
dec
lea
fisubl
mov
lcall
push
sti
mov
stos
inc
dec
mov
push
cwtl
jno
cwtl
sbb
int3
cmp
xor
in
in
scas
or
push
cmp
and
or
jecxz
jbe
in
pop
mov
test
add
jmp
insl
rcl
out
add
andl
inc
out
pop
fcomip
adc
aas
cwtl
pop
out
loope
out
or
jbe
sbb
into
dec
and
clc
std
js
fists
mov
repnz
fwait
pop
add
mov
adc
inc
pop
and
cltd
ljmp
lret
std
insl
jge
popa
jne
and
sti
gs
shrl
push
xchg
neg
pop
sub
mov
inc
mov
das
jl
dec
into
push
mov
xchg
or
bound
loop
lock
dec
enter
xor
arpl
and
add
pushf
xchg
outsb
jmp
in
jns
xchg
pop
es
mov
jle
negb
aam
xor
ret
call
das
cmp
xchg
sarl
inc
fisubrs
xchg
inc
ret
jl
xchg
cs
cwtl
jle
out
cmp
jle
sete
dec
mov
int
or
addr16
icebp
xchg
sbb
jns
add
cmp
jp
dec
mov
in
push
aam
das
xchg
fdivrp
cmp
dec
cmpsl
insb
pop
jbe
out
aad
dec
dec
data16
out
js
sbb
push
push
jnp
jno
mov
int3
inc
nop
jecxz
mov
data16
sub
adc
idivl
xchg
fstl
addb
xchg
inc
xor
add
data16
mov
cmp
fsubl
mov
pop
sub
int3
lea
imul
jmp
notb
sub
out
sub
lock
or
jbe
dec
mulb
jge
xor
in
dec
dec
in
mov
add
int3
call
test
xchg
fidivl
mov
cmc
pop
lds
rclb
rol
jb
pop
clc
and
pause
lea
in
test
sub
mov
jne
xchg
cmpsl
add
sbb
adcl
or
mov
mov
sub
filds
dec
mov
aaa
rorb
cmp
push
les
lds
push
add
xor
push
lret
fs
mov
push
sub
mov
sti
xchg
stc
les
test
pop
cli
subb
pop
ds
sbb
push
jle
loope
push
or
rcll
pop
add
mov
cwtl
push
cmpsb
rcrb
jno
movsl
push
jg
mov
jae
cmp
mov
mov
test
xor
ljmp
cmpsl
mov
dec
cmp
stc
xor
imul
and
mov
push
outsl
fs
shr
aam
insl
and
stos
dec
cmp
loop
popa
cmpb
popf
test
mov
xor
nop
mov
ljmp
pop
mov
or
bound
out
cmp
icebp
pop
insl
and
pushw
ds
ret
and
pop
add
mov
repnz
lret
mov
mov
movsb
cmp
inc
aaa
cmp
mov
loopne
push
ret
sar
sbb
add
in
nop
or
pop
filds
mov
pop
scas
and
and
test
insb
jp
jbe
cmp
ret
inc
cltd
movsb
stc
out
dec
sbb
sub
daa
aam
fwait
or
sub
movsb
pop
scas
ficomps
xor
ret
cmpsb
fsts
arpl
dec
pop
sbb
and
pop
pusha
testl
cmpb
lods
imul
add
hlt
aas
dec
out
inc
cmp
jmp
out
jnp
mov
jmp
jle
fcoms
pop
test
hlt
jno
jmp
pop
arpl
fists
jmp
dec
push
data16
nop
push
jmp
mov
sahf
out
insb
jae
push
out
xchg
js
test
inc
pop
pop
jae
fs
pop
pop
ret
add
jl
adc
ss
pop
jecxz
fwait
inc
jmp
mov
ja
fists
pusha
fsubrs
and
or
xchg
ja
fbstp
xorb
sbb
notl
in
and
jge
lods
divb
fwait
scas
pop
xor
xor
mov
cld
cmpsb
inc
jmp
lods
jno
sti
push
mov
incb
sbbb
cmp
divps
mov
xchg
cmpsb
orb
stos
push
out
sbb
data16
sub
mov
xor
push
add
fisubl
lds
add
push
mov
in
push
inc
fildl
repz
ret
sarb
ret
cmpsb
mov
xchg
icebp
aam
and
repnz
stos
ret
mov
pop
and
jne
inc
sti
xchg
hlt
push
add
cmp
mov
or
push
jo
mov
push
and
leave
in
hlt
xchg
ljmp
in
enter
mov
add
pop
or
mov
pop
jnp
add
iret
fidivs
push
push
inc
dec
loopne
cmp
fstpl
push
mov
call
sbbl
int
mov
int
clc
out
mov
aad
jbe
adc
xchg
push
mov
jnp
inc
and
rcl
arpl
or
leave
xchg
xor
rolb
adc
cld
xchg
sub
pushf
pop
mov
sbb
incb
mov
psrlq
dec
rclb
xlat
and
mov
pushl
and
push
inc
into
mov
pop
push
mov
xchg
rolb
outsl
mov
aad
movsb
in
cmp
inc
mov
js
mov
das
bound
push
in
shrl
rcrl
repnz
or
ss
xchg
popf
xor
pop
mov
in
jmp
pop
les
ja
lret
push
sti
inc
dec
in
push
iret
jno
pop
adc
jmp
or
adc
cld
int
xchg
test
out
jno
lahf
sbb
aam
mov
shlb
mov
dec
pop
pop
sbb
jp
clc
adc
xchg
cmpsb
fwait
cmpsl
jecxz
lods
xchg
test
bound
cmc
dec
gs
push
jmp
jg
outsl
push
fwait
sbb
repnz
jge
es
xchg
xor
stos
jmp
and
popa
sbb
sub
mov
jg
pop
test
leave
mov
ret
test
pusha
sub
and
incb
lods
orb
pop
imul
and
dec
xchg
lods
inc
mov
ficoml
jg
pop
dec
repnz
sahf
adc
mov
out
inc
pop
push
push
adc
hlt
inc
gs
cmp
jp
cmp
sarb
mov
xor
cltd
xor
clc
mov
cmp
movsl
dec
in
cmpsl
adc
vpor
sbb
and
les
aam
stos
jecxz
inc
cmp
cmpsb
add
jecxz
cmp
cltd
xchg
jns
lret
mov
jg
hlt
ja
sub
or
dec
cmp
pop
jecxz
mov
push
mov
out
adc
lds
sbb
xchg
dec
popf
nop
jmp
xchg
mov
and
pop
in
arpl
mov
push
fdivs
pop
mov
xchg
sub
mov
inc
sub
enter
popa
mov
insb
ds
sbb
mov
jecxz
jnp
outsl
push
lds
ds
es
sti
repnz
adc
push
jne
aam
ss
arpl
xor
stc
mov
daa
xchg
inc
pop
xchg
inc
jmp
sub
mov
imul
lcall
add
xchg
inc
sbb
les
fcomps
mov
pop
inc
testb
icebp
sbb
push
out
or
pop
cmc
sbb
mov
xchg
sub
push
mov
adcl
and
xlat
sub
pop
aad
jl
dec
dec
loope
adc
push
enter
add
leave
xchg
in
sti
sub
clc
lret
adc
xchg
sub
lret
aad
mov
push
sub
fnsave
sbb
mov
jns
in
jecxz
pop
mov
std
inc
in
or
xchg
and
lret
xor
dec
jecxz
out
mov
frstor
or
pop
dec
sahf
xor
jnp
xchg
pop
dec
mov
dec
pop
cmc
call
or
pop
and
sbb
add
lcall
xlat
imul
lret
or
shll
inc
test
dec
xchg
sub
imul
ud2
push
and
mov
jmp
lea
stos
aas
and
inc
jl
inc
mov
mov
pop
ds
mov
sub
mov
fs
inc
xchg
mov
js
rcll
movb
rcrb
inc
mov
sbb
xor
mov
rorl
push
inc
loop
test
mov
lods
inc
enter
enter
inc
in
sub
mov
mov
pop
cmp
lret
pop
push
pop
loop
sbb
sbb
test
enter
dec
cltd
data16
in
test
out
sbb
cmp
popa
cmp
pop
mov
loopne
xchg
lods
adc
out
movsl
imul
addr16
jecxz
mov
shll
cwtl
into
arpl
push
mov
pop
mov
into
sbb
fimull
iret
jl
pop
cmp
add
shll
mov
or
ret
dec
aaa
xor
andl
jle
push
mov
stos
rcll
pop
or
or
outsl
cmp
adc
pop
pop
mov
pop
xor
mov
shlb
inc
test
pushf
or
push
jmp
mov
jns
mov
add
imul
pop
mov
jl
pop
repz
adc
js
push
popf
call
xchg
movsb
repnz
or
scas
orl
mov
sti
and
addr16
adc
or
enter
mov
xor
outsl
push
mov
cli
xchg
lea
mov
and
das
out
mov
aaa
or
shl
jno
adcl
mov
push
outsl
xchg
cmp
les
test
pop
dec
or
dec
in
pop
fstpl
pushf
sbb
je
jecxz
lea
mov
xor
loopne
sbb
cmp
mov
les
data16
jge
mov
rorb
loop
jns
ret
cmpsl
in
imul
pushf
push
mov
test
fistpll
mov
jns
mov
sahf
fistpl
jp
outsl
enter
mov
shl
scas
jmp
sar
data16
and
push
clc
mov
fsts
into
add
insb
jns
jnp
dec
sub
aam
sbb
cwtl
push
shll
int
aaa
pop
jne
ss
dec
cwtl
and
lret
stos
gs
mov
cwtl
mov
inc
clc
push
xor
jo
xchg
inc
adc
mov
lea
and
sbb
mov
cmpsb
or
push
sti
push
rcll
xchg
lret
stc
sbb
imul
add
imul
dec
int
out
mov
mov
sbb
outsb
popf
aam
imul
inc
leave
or
push
outsb
mov
pop
xor
popf
sbb
mov
nopl
mov
popf
clc
popl
jbe
shlb
push
lods
push
pop
pop
out
xchg
or
aas
sti
xchg
sub
popa
jne
xchg
dec
stos
inc
xorb
rolb
insl
cmp
ljmp
inc
add
insl
fistps
sbb
dec
mov
insl
rcr
orb
sbb
inc
insl
mov
call
mov
sub
sahf
test
adcb
push
cwtl
movsl
jnp
jno
jnp
mov
push
sbb
pop
vmovq
aam
mov
iret
sbb
mov
andl
test
or
je
mov
dec
mov
stc
lea
lods
add
es
xchg
push
push
jle
lahf
sbb
cltd
cmp
mul
pop
cmpsl
sub
mov
mov
icebp
das
inc
sbbb
mov
mov
sti
sbb
test
enter
and
aam
call
roll
incb
movsb
pop
push
stos
jge
jp
xchg
fsts
jo
test
dec
inc
xor
mulb
mov
outsl
pop
repnz
sub
jns
ret
mov
mov
lock
stc
in
cmove
pop
in
ljmp
fwait
jl
jb
int3
mov
jo
xlat
adcl
jne
xchg
cmpsb
cmc
loope
fcoms
test
into
gs
dec
xorl
andb
xor
pop
mov
dec
sbb
cltd
xchg
test
xchg
aam
pop
cs
dec
sbb
in
fcmovne
pop
insl
bound
xchg
mov
sti
movsl
adcl
mov
sbb
addb
loope
mov
leave
jge
fisubrl
adc
dec
aad
pusha
nop
rolb
cmpsl
mov
mov
dec
add
aas
push
mov
pushf
stc
stos
jge
cli
sahf
fs
out
adc
insl
inc
imulb
mov
dec
mov
add
add
ret
xor
cmc
lret
ljmp
mov
call
sub
jno
in
or
cmp
mov
mov
addr16
adc
jae
cs
adc
add
lea
shll
adc
jl
sbb
sbb
mov
sbb
sbb
ret
hlt
jo
js
xor
lcall
mov
sbb
aad
sahf
mov
addb
stos
std
push
mov
in
xor
test
jo
add
xchg
jge
dec
into
scas
push
sbb
add
push
ljmp
mov
mov
lret
imul
mov
in
mov
dec
and
notb
stos
test
scas
dec
imul
shl
test
lea
push
arpl
mov
sub
mov
mov
outsl
ss
ret
xchg
das
adc
inc
aam
orl
out
jge
jle
std
sub
hlt
into
loop
cmp
iret
insb
dec
xchg
orl
cmc
nop
aam
std
stos
hlt
aas
pop
cmp
sbb
jne
pop
mov
scas
jne
sahf
stos
lea
jnp
mov
xchg
filds
xor
push
sbb
fmuls
push
sar
lds
xchg
adc
xor
pusha
call
dec
loop
ficoml
and
das
das
stos
push
aas
icebp
adc
mov
in
insl
insb
mov
or
cmp
dec
rorl
cmp
sbb
sbb
mov
mov
dec
lods
xor
push
and
test
nop
das
addr16
push
jmp
ja
shll
daa
call
add
sbb
ja
lea
pop
jne
scas
or
jbe
inc
sbb
push
movsb
inc
movsl
sub
addr16
jp
data16
lock
jl
mov
rol
jbe
and
nop
jbe
fidivl
or
sbb
xchg
sbb
xchg
sti
icebp
adc
or
loop
in
push
or
mov
adc
lahf
popa
pop
dec
jl
ljmp
mov
rorb
xchg
fadd
sub
ret
gs
cmp
dec
pop
mov
mov
jle
push
push
in
jns
and
ficoml
inc
outsb
fiaddl
shlb
ret
push
adc
jbe
inc
lock
out
sahf
pop
push
ret
sub
repnz
inc
clc
mov
jmp
in
and
inc
je
loop
ret
orb
fwait
das
orb
pop
and
or
sbb
outsb
mov
mov
or
pushl
adc
rcl
or
jl
ds
outsb
jb
pop
sub
xor
pop
loope
repz
mov
cltd
mov
daa
or
mov
iret
push
aam
dec
int
or
pop
fisttps
mov
in
fstpt
stos
cwtl
lcall
dec
cmp
jne
sbbb
add
stc
data16
mov
fbstp
adc
inc
push
add
jl
pop
scas
or
adc
mov
jp
sub
add
fdivs
ret
lret
mov
lods
and
sbb
repz
mov
and
mov
xor
notb
loop
ja
mov
jae
dec
ret
loop
cmp
fmul
xchg
je
adc
xchg
scas
imul
js
icebp
cmc
push
pop
lret
int3
stos
mov
sbb
jbe
xchg
cmpsl
cltd
push
in
lret
lret
xchg
pop
es
scas
inc
inc
adc
mov
xorb
in
rol
dec
mov
icebp
loop
mov
jnp
sbb
push
fisubs
sbb
loop
or
jg
shl
pop
adc
cmp
popa
dec
aaa
add
push
cmp
movsl
ds
bound
fcmovb
push
dec
int
divl
enter
insb
lret
js
notl
imul
mov
out
lret
bound
push
push
sub
xor
mov
idivl
fildl
dec
icebp
in
aas
xlat
je
push
push
sub
out
shrl
jbe
xchg
stos
scas
xchg
xor
adc
test
and
mov
lcall
fwait
xor
jmp
xor
push
ljmp
cmp
leave
adc
loopne
fs
xor
xor
es
inc
or
jmp
sub
loopne
cmovbe
ficomps
cli
lcall
lds
fstp
adcb
mov
add
lds
inc
sbb
je
std
stos
js
push
bnd
ds
adc
xor
jno
sbb
int3
mov
js
dec
pop
xor
imul
cmpsb
mov
push
dec
mov
mov
dec
out
push
push
cmp
imul
cmp
sub
add
mov
xchg
or
sbb
gs
cmpsl
sbb
enter
idivb
mov
loope
cmp
fistps
xor
cmp
enter
out
cmpsb
dec
pop
sub
sbb
cwtl
inc
popf
inc
mov
mov
sbb
push
pop
fisubl
ret
push
cmp
adc
sbb
sbb
sub
rorb
xchg
mov
int3
and
in
cmp
mov
adc
fsub
arpl
fdivr
push
jmp
cmp
rolb
mov
dec
leave
pop
xchg
push
and
xor
loop
push
cmpsl
jne
int3
and
sub
xor
movsb
sbb
lret
mov
push
and
add
fs
insl
pop
add
add
dec
repnz
mov
pop
adc
cmp
pop
int
or
fucom
js
fs
and
push
sub
dec
fs
rorl
and
mov
loopne
jo
inc
pusha
test
lret
cld
arpl
shll
push
lcall
lds
or
xchg
mov
lds
mov
sahf
in
js
fdivl
pop
hlt
push
mov
sbb
std
sbb
mov
xchg
sub
xchg
cmp
jo
mov
outsb
pop
shrl
add
aam
lods
or
xor
lahf
pop
repz
xchg
push
dec
ja
jp
ss
dec
cmp
ss
dec
cs
pop
in
lods
adcl
lcall
push
daa
cmp
and
push
lods
sbb
lods
js
sbb
or
je
mov
and
fstps
push
or
jmp
inc
and
ss
sbb
lods
cmp
add
push
adc
xor
pop
lods
inc
pop
sbb
int
lret
jecxz
inc
and
adcb
jl
cmpl
add
popf
or
subb
andl
lds
pop
rcrl
out
xchg
call
fistpll
in
popf
in
imul
fsubs
pop
push
cli
push
jnp
ret
ljmp
insb
test
stos
mov
ljmp
cmc
dec
push
pop
je
cmp
js
loope
push
shl
lret
lea
dec
and
call
add
xor
push
pushf
pop
mov
cmp
fucomip
iret
push
cmp
pop
jns
dec
test
jbe
sub
xchg
mov
mov
mov
mov
in
les
mov
mov
sti
xchg
or
dec
mov
mov
jle
in
jnp
mov
int
popl
jbe
xchg
repnz
push
std
sbb
lret
sub
sbb
sahf
pop
push
dec
jp
dec
out
pushf
shll
je
insl
sbb
mov
push
stos
xor
nop
mov
and
dec
fucomp
jl
dec
inc
xor
es
push
daa
outsl
loopne
test
sbbb
pop
xchg
aad
push
dec
dec
sbb
bound
inc
pusha
jp
and
aam
adc
jns
xchg
mov
pop
lahf
stos
imul
shlb
hlt
mov
pop
fld
in
shr
jp
daa
outsl
mov
sbb
push
adc
inc
cmp
out
jmp
aas
outsb
mov
pop
insb
pop
in
test
lock
fistps
ds
or
pop
insl
out
mov
int
sbb
inc
sub
inc
pop
push
pop
add
ljmp
push
jecxz
xor
push
cmp
xchg
andb
stos
flds
fdivrl
test
shlb
ljmp
dec
mov
sbb
lcall
add
or
je
fbstp
mov
inc
lahf
test
inc
xchg
xor
neg
push
in
enter
xchg
fsubrp
xor
pop
push
mov
ret
or
mov
fisubl
dec
roll
fldenv
imull
cmp
mov
push
cmpsl
fisttpl
div
bndstx
movsb
das
push
popf
sub
shlb
bound
and
and
ficoml
dec
fisttps
stos
inc
movsl
cltd
in
xchg
aas
aad
and
cmpsl
add
or
notl
jne
sub
not
and
or
jnp
inc
jne
and
pop
iret
loope
incl
jl
dec
mov
lcall
movl
clc
loop
shl
xor
jae
dec
lea
aam
fxch
push
or
xor
dec
cmp
xchg
inc
scas
pop
jne
jb
dec
shl
mov
rcrb
inc
and
rcl
inc
push
mov
mov
inc
dec
pop
aad
xor
jle
lock
inc
jo
insl
adc
sahf
dec
test
mov
pop
das
add
testl
mov
or
int3
xchg
incb
shlb
aaa
sub
dec
or
xchg
pop
push
jns
inc
out
icebp
shll
dec
push
jb
xchg
pop
js
push
xchg
jae
addr16
pop
cli
lea
sbb
fsubrl
cld
sbb
insl
sub
push
sub
sbb
fldt
mov
jae
dec
les
lea
sub
into
fnstcw
cli
mov
jb
stos
nop
pop
cs
scas
push
jmp
mov
jmp
mov
data16
loop
or
add
mov
fcomip
insl
lods
mov
mov
movsb
jge
jmp
sbb
inc
in
cmpsl
jae
mov
lahf
lock
sti
or
mov
sti
mov
cltd
jae
enter
scas
ljmp
repnz
pop
inc
iret
mov
in
imul
pop
ficompl
lea
jnp
cmp
test
arpl
mov
cmp
inc
stos
push
ret
jmp
sahf
imulb
in
in
movsl
push
jmp
les
decl
and
cs
fdiv
cwtl
push
pop
xor
mov
jo
lret
lret
sti
mov
mov
imul
outsl
pop
and
andb
sbb
sub
sbb
mov
lods
mov
shrb
pop
loop
mov
dec
mov
idiv
xchg
xor
repnz
fidivs
push
lret
jns
mov
mov
jle
mov
cmp
jl
xor
outsl
sub
stos
mov
or
xchg
or
add
mov
test
adc
xchg
jne
push
addr16
sbb
xor
or
xor
push
loope
popf
les
cmp
adc
xchg
cmp
jg
or
or
xchg
decb
ja
xor
mull
aad
xchg
cmp
mov
dec
or
pusha
add
pop
cmp
xor
xchg
cmp
inc
mov
cmp
lods
dec
push
mov
mov
cmp
and
xchg
aam
ret
or
xchg
pop
lcall
or
sub
mov
repz
negl
in
cld
arpl
test
test
lret
shr
mov
sub
xor
je
mov
inc
adc
popf
stc
into
push
dec
pop
cmp
add
cmpsb
test
mov
test
pop
dec
stos
scas
jb
insb
mov
pushf
ret
pop
inc
push
rcrb
orb
xchg
lods
adc
enter
data16
adc
test
movsb
test
push
xor
pop
ficomps
ljmp
mov
iret
sub
sub
pop
sub
lds
lcall
and
cmp
nop
mov
xchg
arpl
aas
sahf
xor
cwtl
inc
enter
xchg
jb
pusha
mov
mov
jmp
hlt
repnz
mov
xchg
mov
ret
jecxz
inc
fbld
or
scas
inc
aad
mov
shrb
cli
popf
and
addl
enter
lea
subl
jge
push
xchg
cmpsb
notl
fidivrl
xchg
xor
mov
and
xchg
and
add
jno
cld
push
mov
pusha
dec
mov
push
push
adc
add
cmp
pop
mov
sbb
rcll
mov
in
repz
out
sbb
and
scas
jbe
xchg
pop
shl
cmp
mov
xchg
fs
inc
pop
and
lock
pop
out
mov
dec
xor
jle
xchg
sub
sub
fsubl
mov
and
enter
gs
mov
push
mov
sbb
sub
aas
xor
mov
testl
cwtl
dec
xor
and
sar
dec
xor
adc
rcl
mov
inc
jb
and
mov
into
insl
xor
arpl
or
inc
lods
pop
out
push
imul
lods
dec
bound
push
dec
add
ljmp
vpmadd52huq
mov
cmp
sbb
rcl
xchg
mov
xor
loope
mov
dec
inc
fnsave
mov
push
divl
xchg
pop
xchg
sbb
in
es
push
inc
lcall
xor
out
dec
mov
push
adc
les
pop
icebp
push
xchg
out
scas
mov
ljmp
and
pop
push
lcall
ja
ljmp
movsb
or
ja
cmp
lea
ljmp
in
movl
outsl
outsb
fldenv
inc
ret
sub
enter
data16
pop
lahf
xchg
inc
repnz
adc
aad
gs
sub
mov
mov
jnp
lods
stc
cmp
mov
xor
mov
fildl
sbb
ds
ja
data16
dec
push
leave
pop
outsb
out
test
dec
or
in
dec
mov
xorl
cltd
cltd
dec
in
popw
imul
bound
xchg
bound
pop
icebp
iret
out
xchg
push
stos
decl
icebp
inc
out
jg
arpl
pop
dec
leave
and
push
inc
xor
dec
cmp
incb
push
imul
popa
or
jmp
inc
add
sub
in
scas
cmp
cmp
cmp
jg
xor
push
lods
mov
cltd
cld
cmp
or
mov
stos
movsl
fs
lods
pop
mov
add
leave
cmp
mov
cltd
dec
aas
ds
hlt
sbb
or
cld
jle
negb
jle
cmp
and
adc
mov
gs
inc
mov
jp
in
dec
popf
sub
jno
mov
mov
insb
sub
add
movsl
cmp
or
and
cld
in
and
mov
pop
nop
repnz
mov
mov
js
dec
xchg
sub
inc
pop
sub
or
mov
pop
xchg
xor
dec
cmp
add
pop
adc
fisubs
inc
mulps
inc
loopne
sbb
sbb
lret
ss
imul
fwait
push
add
aad
scas
pop
pushf
scas
mov
iret
iret
xchg
notl
pop
and
push
bound
popf
jecxz
nop
in
jp
nop
fdivl
in
icebp
js
mov
notb
in
add
insl
cltd
int
mov
out
loopne
xor
inc
pop
mov
mov
pop
repnz
fisubs
stos
in
xor
jb
xlat
mov
and
fsub
sbb
inc
loope
jbe
fs
push
scas
or
mov
push
daa
dec
xor
int3
out
and
ljmp
movsl
cmp
push
pop
outsb
fnstenv
pop
lea
and
xchg
ss
leave
inc
das
xchg
or
icebp
lcall
jns
pop
mov
sahf
mov
or
es
xchg
es
outsl
mov
test
or
sub
add
enter
pushf
outsl
push
lret
jl
mov
adc
sbb
ffree
ds
je
movsb
repnz
adcb
iret
bnd
cmp
stos
xchg
jmp
mov
mov
shrb
bound
test
gs
sbb
xlat
sub
adc
adc
cwtl
push
pop
push
repnz
lods
jle
cli
push
pop
push
daa
pop
xor
mov
mov
and
aam
stos
adc
in
jle
loope
pop
inc
ds
enter
sub
mov
jl
into
fs
lods
mov
aam
cmp
jno
clc
pop
push
and
sahf
pop
xchg
movsl
js
xor
loope
add
arpl
test
sahf
xlat
inc
ss
outsl
jnp
test
cmp
dec
push
movsl
mov
xchg
sub
pop
cli
lods
fisubrs
cmp
repz
scas
pop
stos
mov
adc
sbb
shl
into
gs
bound
gs
fcomi
mov
es
hlt
push
cli
lea
jo
sbb
shrl
cmp
repz
dec
ja
mov
xchg
popa
fsts
gs
cmpl
xsave
pop
fwait
adc
push
das
mov
xchg
push
nop
lret
in
std
iret
nop
cmp
xor
andl
sub
jnp
rcll
xchg
or
fldcw
and
add
fidivs
shlb
mov
sbb
dec
jmp
sub
in
sub
pop
je
ja
cmp
pop
sub
rorl
add
test
mov
cmp
add
mov
xchg
push
scas
dec
mov
adc
arpl
adc
hlt
push
stos
add
push
mov
fucomip
adc
mov
call
cmp
test
xor
push
jnp
mov
aam
adc
add
lods
xor
cmpsb
and
fs
data16
scas
mov
adc
cltd
and
mov
mov
push
cmp
jg
and
and
fdivl
arpl
fdivl
cmc
fdivl
mov
mov
inc
cltd
fisubrs
mov
enter
in
adc
xchg
pop
icebp
sarb
pop
lods
icebp
js
loopne
lea
es
flds
or
inc
inc
cld
push
push
cmpsb
cmp
adc
scas
dec
ja
cmpsb
sbb
xchg
cs
pop
jmp
pop
mov
cmp
shrb
cmp
aas
pop
mov
in
and
jnp
jnp
test
or
mov
test
sub
sub
sbb
inc
mov
mov
decb
mov
lods
insb
jnp
sahf
int
jae
call
scas
cli
adc
lahf
mov
mov
xor
repz
imul
push
test
pop
fwait
sahf
enter
nop
repz
out
jo
or
call
jecxz
loopne
push
cmc
out
jp
aam
dec
aaa
or
orb
insl
mov
jo
rolb
outsb
loop
lret
xlat
sarb
dec
mov
or
bound
ja
mov
ret
adc
mov
jbe
pushl
sbb
outsb
push
mov
ss
pop
push
inc
push
loope
xor
fwait
dec
lock
inc
jnp
data16
testl
test
scas
push
popa
xchg
inc
mov
jns
bound
fldl2t
lods
push
lea
mov
bound
imul
in
test
xchg
jnp
enter
out
cltd
std
inc
cmp
stos
jbe
or
xchg
or
imul
mov
xchg
out
push
orb
xchg
cmpsl
hlt
mov
adc
sti
xchg
cmp
push
lods
mov
fbstp
push
inc
int
xor
movsb
sub
fwait
dec
pop
cmp
dec
loopne
stos
push
jmp
popa
addr16
rolb
aaa
xchg
mov
mov
aas
push
sbb
ja
into
stos
inc
shrl
dec
inc
pop
lock
adc
shrl
mov
ds
stc
nop
dec
lods
out
fisubrs
lds
mov
add
add
or
in
addl
jb
lods
sub
cmp
pop
xor
icebp
mov
cmc
fwait
std
xor
lock
lea
leave
adc
push
fstpt
aad
mov
pop
cmp
aad
test
leave
pusha
sub
xchg
cs
out
jecxz
pop
out
inc
or
cmpl
mov
jl
cs
lcall
out
stos
aad
mov
mov
mov
rcl
decb
mov
xchg
dec
daa
mov
loop
adc
inc
inc
inc
fdivs
pop
notb
mov
ljmp
mov
push
ja
xchg
mov
mov
mov
sbb
fildll
add
and
cmpsb
inc
lds
fidivl
xchg
pop
lock
ss
lret
bound
scas
jmp
test
lock
dec
addr16
jge
std
xchg
js
test
lahf
mov
sar
testl
jge
ja
call
sbb
dec
pusha
popa
clc
xchg
insb
je
sahf
mov
push
call
sbb
cwtl
das
pop
jo
iret
mov
leave
pop
icebp
cli
rcrl
sub
pop
adc
push
inc
jl
adc
lahf
fnstsw
ja
lret
popa
loop
sbbb
pop
repz
insl
xchg
mov
movsb
cmp
flds
sub
push
in
cmp
dec
mov
cltd
mov
fwait
in
inc
insl
add
push
and
rclb
pusha
mov
movsl
cmp
popf
pop
mov
cmp
pop
imul
aam
andb
sub
pop
aam
sbb
jge
add
daa
lahf
ss
rorb
push
mov
stc
nop
pop
sarl
ret
std
xchg
popa
lret
incl
mov
push
jo
or
lds
shl
out
xchg
sarl
pop
addr16
jb
mov
in
movsl
or
or
mov
sub
xchg
xchg
cld
into
sub
fidivl
add
mov
pushf
add
and
push
jmp
or
ds
repnz
pop
ljmp
scas
dec
in
xor
sbb
xor
mov
test
jle
or
adc
and
xor
jno
dec
jecxz
cwtl
pop
lock
jo
push
in
xchg
sub
ja
pop
movsl
cmp
xor
icebp
mov
mov
in
test
imul
inc
test
mov
or
mov
jo
jle
outsb
scas
aad
jle
js
push
inc
jne
ds
pop
or
insb
mov
jl
adc
push
repnz
xor
gs
inc
cwtl
pop
add
mov
push
in
or
iret
data16
pop
and
mov
test
adc
adc
cmpsb
inc
test
pushf
or
sbb
mov
outsl
push
rcl
leave
add
pop
adc
rcl
fiadds
pop
enter
in
test
insb
add
pop
leave
pusha
xchg
sbb
and
add
mov
sbb
imul
add
xchg
pushf
sbb
es
ljmp
add
jg
mov
jmp
clc
push
and
xchg
sbb
insl
in
test
jle
push
scas
into
jle
pushl
mov
jge
push
mov
scas
inc
add
popf
pop
fnsave
pop
idivb
push
mov
into
mov
scas
inc
or
je
pop
jne
inc
jnp
loopne
flds
or
pop
lods
adc
jae
jne
sbb
jb
pop
mov
jl
mov
push
movsb
lcall
jb
leave
xor
sti
imul
pop
call
cld
pop
jae
lea
bound
jecxz
lret
jmp
aas
addr16
insl
cltd
add
ljmp
or
out
lret
cmpsl
cmp
repnz
jns
add
in
sbbl
xor
xchg
imul
in
and
push
fwait
or
std
pop
leave
pusha
nop
sub
pop
xchg
ret
pop
fs
xchg
lea
lret
lret
bound
xchg
xlat
outsb
ret
into
out
pop
repz
lcall
in
loope
pop
pop
or
lea
cmp
lcall
movsb
mov
adc
sub
jp
push
loopne
cmpb
mov
lahf
mov
negb
mov
and
clc
js
pop
sahf
test
or
mov
push
and
rcll
mov
jnp
xchg
sub
out
call
xor
pop
jno
mov
je
into
shrl
out
jp
sbb
jae
xor
pushw
enter
loopne
js
and
clc
arpl
mov
sarl
add
and
inc
sub
sub
mov
or
incb
pop
mov
sbb
orl
adc
roll
sbb
lahf
mov
in
idiv
mov
fwait
pop
testb
enter
cli
leave
pusha
sub
arpl
std
xchg
sub
into
gs
clc
sub
sub
loop
pop
hlt
pop
scas
sub
cmpsb
cmp
jle
adc
ret
insl
sti
xchg
lahf
in
cmp
mov
lods
in
rcrl
loop
cmp
or
sbb
xor
cli
xchg
fisubl
inc
fcoml
jo
and
test
shrl
xchg
in
sbb
or
imul
cmp
fucomp
nop
mov
outsl
aas
loop
jb
popa
mov
arpl
adc
in
test
xchg
mov
mov
xor
and
adc
repnz
std
imul
mov
xor
clc
pop
pop
or
sub
mov
int3
decb
xor
dec
data16
mov
cmp
xchg
outsl
movsl
push
call
mov
loopne
add
push
add
xorl
aad
movsb
xchg
test
mov
fstp
jb
dec
jmp
andb
fnstcw
test
repz
fisubrl
adc
jb
sbb
shlb
add
call
push
js
mov
dec
cltd
fnsave
fnstenv
pop
decb
cmc
xor
cli
xchg
sbb
adc
imul
jae
stc
mov
fists
adc
sbbl
mov
lahf
cmp
lret
mov
fimuls
jge
idivb
enter
pop
hlt
inc
lds
jne
xchg
xor
and
mov
push
in
outsl
ret
pop
push
popa
or
mov
and
paddq
pop
adc
inc
scas
jg
testb
mov
loopne
sti
xlat
inc
in
sbb
adc
icebp
push
add
addr16
adc
pop
mov
cli
xor
call
scas
das
add
insl
mov
lahf
cli
push
jp
pop
inc
push
dec
mov
push
cmp
add
hlt
and
jg
inc
es
lcall
addl
mov
iret
repnz
outsb
ret
xor
int
pop
lcallw
jb
jne
mov
icebp
push
ror
repz
xchg
mov
inc
mov
sahf
pushl
in
adc
adc
rcll
clc
xchg
pop
repz
mov
idiv
dec
lds
mov
xor
scas
orb
xchg
jge
mov
fmull
fabs
cs
aad
aad
in
pop
ret
lds
aam
pop
sahf
sub
add
mov
hlt
lea
movsb
sub
sbb
inc
fnstcw
fists
mov
stc
cwtl
jge
sbb
cltd
push
jmp
xchg
int
cld
out
sbb
and
aas
movl
pop
or
push
sbbb
jo
xchg
mov
pop
ss
mov
sub
dec
fwait
je
out
in
inc
mov
ljmp
inc
test
xchg
mulb
pusha
aaa
movsl
insl
add
andl
cmp
movsb
orb
test
mov
xorb
mov
push
xchg
pushf
add
mov
cmp
pushf
jae
and
and
sub
popa
xor
push
jae
popa
push
mov
std
adc
xchg
push
dec
adc
imul
gs
adc
adc
arpl
notl
push
cli
rsqrtps
or
xorl
mov
loop
fwait
adc
pushf
imul
xchg
daa
jle
aaa
or
cmp
sub
enter
or
inc
mov
rorl
or
jo
mov
mov
frstor
jp
sub
push
lods
lea
inc
push
and
movsl
inc
mov
pop
loope
repz
jp
sub
enter
adc
and
jl
sbb
dec
xchg
lret
nop
shll
mov
xlat
gs
dec
scas
jecxz
add
loope
mov
das
and
cwtl
jne
mov
imul
mov
mov
shlb
scas
ljmp
mov
pop
or
lods
lcall
movsb
xchg
roll
sbb
cmpsl
imul
in
jmp
sub
repnz
les
jl
xchg
ret
aad
dec
shlb
call
mov
xchg
mov
sbb
sbb
mov
icebp
xor
fisttps
out
adc
and
lock
aam
call
dec
loop
testl
lahf
js
xchg
xchg
sub
pusha
or
fstps
adc
inc
int
fisubs
pop
in
aas
icebp
add
xchg
sbb
pop
sbb
enter
inc
lret
lock
mov
jg
in
sub
inc
sub
add
dec
arpl
stc
ds
mov
imul
push
lds
testb
ds
adc
and
cmp
stos
je
leave
cmp
sbb
in
sub
pop
mov
cmp
arpl
and
in
lds
adc
inc
or
pop
negb
mov
push
jo
pushf
jp
mov
cmpsb
dec
sbbl
in
in
pushf
mov
mov
or
cld
pushf
xchg
dec
in
sbb
mov
cmc
sbb
jns
lods
outsl
pop
pop
pop
lds
xchg
mov
xor
inc
push
outsl
xchg
insl
push
adc
pop
sub
orb
loop
or
xor
add
lret
push
push
mov
jne
repz
dec
jmp
insb
jnp
ljmp
pop
rorl
test
xor
sbb
out
pop
xchg
fcoml
aas
push
cld
ja
stos
xchg
dec
xor
cmpsb
xchg
xor
xchg
xchg
mov
mov
dec
loopne
daa
mov
lahf
cs
daa
adc
out
sub
cwtl
das
cmpsb
jo
add
lds
and
sub
fcoml
dec
jns
mov
and
shlb
mov
jle
jge
add
and
adc
add
mov
adcb
push
adc
stos
pop
daa
je
sarl
arpl
out
gs
mov
and
orl
ljmp
pop
jbe
pop
lods
shrb
cmpl
push
pop
pop
mov
repnz
insl
iret
cwtl
pop
in
pop
push
inc
enter
inc
inc
in
jecxz
inc
popl
sti
js
jecxz
mov
adc
inc
subl
dec
mov
loop
insl
push
jmp
jg
sahf
inc
fimull
filds
adc
sbb
cmp
jge
jae
mov
scas
data16
loopne
sub
xchg
mov
add
push
xor
xchg
mov
pop
int
int
and
rorl
call
iret
jbe
xlat
push
or
out
mov
out
push
mov
dec
cs
mov
xor
lods
xor
testl
inc
inc
lcall
xchg
and
cs
xor
adc
jbe
fwait
cmpsl
gs
shl
xor
cmp
in
filds
or
push
add
daa
add
jl
jg
cmc
cmp
test
mov
les
mov
aaa
call
aas
lea
notl
js
mov
mov
sbb
pusha
cli
sbb
ja
mov
dec
fistps
adc
mov
cmp
mov
hlt
shrb
push
imul
push
push
rclb
mov
pop
inc
into
pusha
rorb
ret
dec
movsl
stos
aam
adc
xchg
popf
lods
add
out
mov
out
in
scas
jo
or
or
lcall
ret
add
rorb
mov
loope
or
inc
xchg
mov
inc
mov
ss
jae
cwtl
das
int
cld
sub
in
daa
in
call
push
loopne
ret
outsb
jns
push
jae
pop
push
mov
scas
fmuls
lea
sub
and
mov
mov
dec
inc
cmpxchg
dec
nop
sub
ret
cs
cmp
sub
cmpsl
int
pop
add
cmp
mov
scas
jae
popa
mov
inc
mov
nop
add
mov
sub
jp
lods
dec
mov
push
sbb
mov
nop
call
xor
divl
sbb
or
dec
loopne
sub
sub
mov
call
repnz
ret
mov
out
sub
pop
iret
add
fcoml
pop
fs
loope
sub
imul
stos
in
and
sbbl
ja
cmpsb
add
sbb
stc
add
or
sub
sub
gs
out
cmp
and
xor
ds
xchg
jl
adc
pop
lahf
in
sbb
add
js
leave
pop
sub
mov
xor
jl
xlat
daa
popf
dec
jno
cmp
lret
jno
scas
push
loop
jbe
pop
dec
mov
aam
pop
repz
sbb
mov
cmp
jbe
adc
lds
or
fsubr
sbb
imul
insb
popf
das
pop
lret
mov
jne
xor
and
js
mov
stos
pop
push
std
pop
orl
adc
pop
add
std
mov
add
repnz
xor
and
sbb
inc
popf
rcl
repz
mov
mulb
rclb
outsl
add
clc
xlat
cmp
aam
adc
iret
repnz
mov
fmuls
fdivs
popa
adc
test
lret
xchg
pop
lds
mov
and
mov
fiadds
sub
mov
je
push
out
dec
xchg
and
popa
xchg
icebp
sub
sub
les
adc
cmpl
jbe
and
insb
mov
cmc
lods
data16
mov
mov
mov
insb
push
cld
and
dec
pop
jmp
mov
push
lock
mov
movsb
jl
hlt
or
int
xchg
cs
into
push
mov
pop
mov
mov
lock
dec
mov
sub
aad
dec
loop
or
lahf
test
jg
sbb
orb
pushl
push
enter
rclb
jmp
inc
jg
xor
sbb
test
inc
sbb
mov
mov
mov
inc
jge
js
mov
push
popf
ret
inc
and
lahf
push
inc
inc
nop
xchg
inc
push
cmpl
addl
mov
jb
out
mov
jns
jg
out
xchg
jle
add
mov
push
xchg
repnz
mov
loope
cwtl
out
add
or
hlt
mov
hlt
fisttpll
sbb
lods
test
pop
std
in
mov
mov
lock
bnd
ljmp
nopl
fidivl
xchg
ljmp
xchg
aas
xor
cmp
sbb
cmp
lock
stc
jg
mov
popf
mov
lahf
jmp
scas
pusha
test
inc
mov
jmp
stos
scas
mov
andl
mov
push
pop
frstor
cmp
notl
push
in
push
in
ret
pop
cmc
mov
push
leave
sahf
mov
inc
mov
int3
mov
xchg
xchg
mov
fsubrl
loopne
mov
jp
push
clc
mov
negl
jg
cwtl
xchg
push
mull
jg
outsb
add
repz
int
insl
mov
aam
inc
adc
test
sbbl
je
adc
cmpsb
in
imull
and
lock
pop
push
sub
inc
jle
xchg
ja
cmp
outsl
mov
cmp
fisttpl
loopne
sub
loop
jg
cmp
cs
jae
lahf
adc
daa
dec
mov
or
cmpsb
cmp
outsl
cli
sub
and
xor
pop
lcall
data16
add
in
daa
mov
sub
mov
sbbl
pop
ret
add
sub
jmp
popa
sub
lret
jl
insl
inc
mov
cmp
fs
outsl
adc
scas
jno
popa
mov
inc
xlat
lcall
iret
test
std
jo
int
rorb
xchg
fisubl
loopne
in
orb
loope
pushf
shll
jo
lret
jo
mov
pushf
mov
imul
fisubrs
int3
push
jnp
xor
jl
shrl
pop
xor
pop
cmp
jne
jle
xchg
rorb
jp
outsb
loopne
mov
cld
jo
adc
xchg
int
stc
sahf
adc
and
das
loope
shlb
dec
dec
xchg
jp
ds
aas
jns
lcall
das
insl
add
mov
into
push
pop
outsl
jns
inc
xchg
mov
mov
outsb
in
orl
loope
add
cmp
pop
lods
xor
cmpsb
jno
add
cltd
jecxz
jg
mov
ret
inc
push
roll
out
dec
mov
mov
mov
sbb
pop
addl
and
dec
and
jle
popf
rorl
data16
sbb
sbb
das
hlt
push
pusha
add
dec
xchg
and
and
les
or
inc
inc
cmp
add
jno
sbb
pop
or
cmp
test
or
mov
idiv
xor
push
fiadds
fmul
push
out
dec
mov
cmp
pop
or
pushf
das
out
xor
and
mov
in
lods
sbb
adc
std
into
inc
into
adc
andl
push
mov
rclb
aam
ljmp
pop
mov
movsb
adc
hlt
mov
mov
mov
out
pop
outsb
pop
repz
xor
and
adc
mov
out
push
mov
fldcw
sarl
mov
std
cmc
or
xor
movsl
sarb
fdivr
unpckhps
mov
out
fnsave
insl
dec
sbb
xchg
pop
mov
insl
in
repz
jne
aaa
into
in
mov
insl
lods
adc
insb
mov
fisttps
push
es
mov
test
pop
inc
and
lea
pop
rorb
lds
out
push
dec
shlb
sarl
ljmp
arpl
adc
mov
les
aam
mov
jmp
lods
pop
shlb
gs
inc
mov
aaa
into
stos
scas
and
cs
xlat
mov
repz
scas
enter
movsb
into
test
bnd
call
or
lahf
sbb
dec
orl
inc
inc
out
push
aad
addr16
aam
int
ror
jnp
loope
fsubrl
hlt
fimull
out
jo
pop
scas
mov
xor
xchg
aam
insl
ljmp
pusha
sbb
mov
mov
repnz
dec
fsubs
xchg
xchg
test
mov
pop
ss
xor
outsb
sub
das
movb
push
or
pop
push
or
out
pop
mov
aad
test
sbb
std
mov
inc
pop
push
leave
cmp
repnz
or
jge
jmp
mov
lods
loopne
repnz
inc
fdivrp
aam
sbb
or
mov
lock
aam
xor
ds
sbb
or
clc
nop
ja
pop
mov
and
loope
lods
bound
fistl
mov
stos
jae
icebp
movsb
sbb
jo
fistps
test
mov
hlt
pop
cmc
scas
mov
sub
into
adcl
lock
push
mov
and
mov
insb
movsb
jne
push
std
jl
push
mov
test
pop
repnz
cmpsb
movsb
add
sub
xchg
and
std
fidivrl
push
popa
leave
ficoml
sub
std
les
and
ret
pop
lock
push
pop
adc
jae
test
aaa
and
out
movsb
fs
push
ret
xchg
jb
test
les
ret
pop
lret
orl
fbstp
fisttpll
mov
xchg
stc
sub
adc
mov
js
jb
iret
cs
nop
mov
je
mov
inc
movb
or
or
and
aam
out
popl
or
movb
adc
fs
mov
sti
push
jl
test
add
lret
sbb
shr
sarl
roll
adc
sahf
mov
rol
arpl
repz
mov
and
mov
icebp
cmp
mov
repz
fisubrs
inc
fcomps
dec
pop
fildll
adc
pop
mov
in
mov
mov
mov
popa
cmpsl
icebp
mov
mov
xor
scas
fsubs
cs
jbe
sub
sbb
idivl
sbb
jns
push
shrb
xchg
scas
lahf
ss
fisttpll
add
jbe
jecxz
pop
leave
mov
mov
mov
adc
sub
cwtl
xchg
shrl
shrl
call
add
fcomp
or
in
xchg
jp
aad
pop
mov
ficoml
adc
in
out
mov
fimull
cmc
and
push
add
or
mov
mov
jle
ss
lds
mov
mov
pop
ret
push
fisttpl
mov
outsb
lahf
jge
mov
add
pop
xchg
daa
out
and
cmp
xchg
inc
jmp
xor
jne
daa
dec
mov
fmull
xor
jbe
mov
mov
and
sarb
cmp
push
sbb
imul
mov
mov
sub
sti
sbb
rorl
ljmp
sub
sub
repz
in
ficoms
cmc
mov
jmp
xchg
jge
int3
or
js
into
gs
sub
lcall
mov
clc
je
in
sbb
lret
dec
add
xor
xchg
xchg
popf
adc
mov
lods
jno
roll
ficoml
shrb
mov
xor
test
inc
lret
jmp
mov
sbb
out
inc
pop
mov
lret
popf
inc
jne
adc
ss
xchg
lods
push
ljmp
push
lods
xchg
outsl
lret
push
out
nop
sbb
pop
or
lods
fs
sub
add
dec
ja
mov
arpl
cltd
mov
sarb
ljmp
xlat
cmp
ds
pop
cmp
dec
repnz
pop
mov
out
scas
mov
fiadds
in
fcoml
push
popf
mov
or
scas
xchg
loop
cmc
roll
cmc
mov
cltd
xchg
adcb
out
push
outsb
mov
sbb
hlt
movsl
adc
gs
cmp
mov
std
jmp
mov
ljmp
adc
loopne
roll
testl
and
pop
mov
daa
call
mov
fsubrl
into
pop
cmpl
cs
dec
xchg
xchg
insl
lds
test
scas
in
adc
bnd
xlat
pop
fmuls
mov
jp
les
insl
cmpsb
nop
xchg
add
cmc
sub
imul
mov
idivl
pop
xchg
js
sbbl
movsl
ret
cmp
inc
cmp
inc
aam
push
pop
pop
mov
push
push
mov
inc
popf
ja
sub
test
imul
dec
rcrl
movsl
imul
cmpsb
sub
cmc
es
mov
cmp
in
imul
push
xor
out
lock
pop
ja
je
in
ret
lret
add
aad
aaa
in
je
out
sbb
xor
out
mov
std
xchg
or
and
and
xor
or
les
cltd
cmp
jbe
std
push
add
xlat
lret
ss
cmc
ror
lret
add
in
subl
cmpb
push
push
rcrb
dec
jo
jl
out
aad
pop
mov
daa
add
jl
jle
cmp
jo
sub
push
lret
out
pop
and
inc
mov
popa
loopne
mov
cmp
fcomps
lret
sub
mov
sbb
and
cwtl
push
ficomps
push
xor
cmpb
gs
rorb
aam
in
pop
cmpsl
fucomi
xor
mov
jmp
xchg
cwtl
sbb
popa
cmpsb
cltd
or
push
scas
sbb
mov
ret
mov
add
jbe
sub
clc
and
and
xor
int3
dec
xor
mov
data16
or
pop
pop
test
hlt
xor
leave
pusha
push
xchg
sub
insb
loop
xor
sahf
aam
sub
dec
das
fsubrs
inc
leave
out
inc
mov
adc
pop
lock
jb
add
cmp
xchg
mov
in
jp
fnstcw
scas
xor
scas
push
stc
repz
cmp
adc
imul
mov
push
in
mov
test
js
fs
pop
jmp
lods
sub
adc
movsb
pop
sub
add
mov
repz
cmc
push
jb
jle
arpl
shll
mov
lock
fmull
out
jg
sub
or
inc
mov
cmpl
in
push
xchg
or
mov
xor
ss
mov
in
mov
ficompl
mul
adc
inc
cwtl
movsl
aaa
clc
icebp
adc
and
push
sbb
movsl
idivb
lahf
arpl
repz
ror
push
or
icebp
movsl
popa
rcr
call
shrl
xchg
test
sbb
lds
cmp
repnz
popa
add
mov
sbbl
shll
movsb
dec
negb
fdiv
or
int
or
add
or
fistps
mov
push
in
insl
xchg
dec
sar
mov
repz
cs
aam
add
shrl
out
push
cld
fcoml
cld
push
loopne
adc
push
pop
hlt
int
fwait
gs
sub
cs
add
add
std
out
test
out
je
fiadds
loope,pt
iret
jae
fsubp
sub
enter
sti
and
mov
out
cmpsl
pop
iret
fiadds
pop
lea
adc
mov
add
movsl
or
cmp
stos
mov
loopne
lods
pop
mov
test
push
add
into
cmp
lds
stos
aam
es
mov
inc
subl
js
je
sbbb
sub
in
pop
push
cmc
mov
daa
inc
in
jb
into
gs
add
int
and
and
ds
inc
sub
mov
fdivrl
push
out
sti
pop
xor
sbb
mov
mov
mov
imul
mov
mov
jae
jge
cmpsl
scas
test
xchg
mov
lds
fstps
scas
or
dec
jecxz
sub
int
je
add
mov
stc
iret
jb
add
cmpsl
ds
and
pop
mov
shl
repz
adc
cltd
inc
sbb
orb
mov
outsb
or
jmp
or
cmp
inc
fldl
jnp
mov
xchg
scas
cltd
xor
mov
sbb
add
cmp
push
insl
xchg
mov
fnsave
adc
xor
push
sbb
shrb
insb
add
sti
push
in
sub
mov
ja
je
jg
test
lret
sub
jmp
pop
sbb
aas
in
jno
into
gs
add
int3
in
mov
out
or
push
mov
xchg
inc
ffree
fstpt
or
das
cwtl
das
popa
aaa
sbbb
xorb
mov
fidivrs
mov
fdivl
jl
cmpsl
lods
test
xchg
mov
cs
sbb
push
sub
int
jae
add
mov
clc
int
or
sbb
sub
pop
sahf
jae
inc
movsl
mov
int
clc
adc
lcall
and
popf
mov
out
sub
cmp
inc
fiadds
jl
mov
cld
push
lock
add
dec
ss
xchg
mov
pop
dec
adc
test
mov
mov
sub
aas
ret
mov
mov
loopne
cmp
imul
xchg
ret
sti
movsb
pushf
outsl
dec
add
xchg
xor
push
cmp
adcl
andl
and
push
dec
loope
pusha
sahf
xor
aam
cld
xchg
in
jle
sub
fwait
sti
sub
sbb
jge
inc
fdivrs
test
rcrb
pop
and
dec
mov
xlat
ds
outsl
clc
add
cs
dec
dec
pusha
testl
gs
fcoml
sub
mov
addr16
cwtl
mov
ret
pop
mov
pop
addr16
push
push
inc
pop
mov
push
xchg
xor
arpl
outsl
into
jne
push
cmpsl
out
dec
sbb
xchg
mov
mov
std
xchg
iret
xchg
xchg
dec
repnz
pop
push
or
or
cli
dec
add
mov
and
arpl
cltd
or
out
mov
mov
jp
pop
sahf
jo
bound
repnz
jne
fwait
dec
lahf
aad
inc
xchg
inc
cwtl
sbb
push
and
dec
add
add
imul
jae
sbb
pop
addr16
and
cld
push
push
push
les
jae
push
xor
add
aam
movsl
sub
push
ljmp
ja
cmp
pusha
xor
adc
push
mov
xchg
das
or
cld
sti
xor
out
cmp
xor
mov
inc
dec
pop
and
imulb
mov
ljmp
js
dec
stos
adc
pop
bound
cmp
add
popa
cmc
popf
arpl
mov
aaa
lock
pop
imul
enter
cmp
inc
fdivrl
addr16
add
adc
push
imul
mov
lds
inc
push
dec
or
andps
stos
aad
arpl
xchg
cmp
es
insl
jmp
xchg
popf
mov
dec
xchg
into
or
jne
mov
fwait
icebp
sbb
jnp
add
push
rol
adc
hlt
mov
sbb
xor
pop
cmp
push
fldcw
jno
fidivs
jnp
out
out
loopne
jns
jno
push
jge
outsl
ret
loopne
mov
lds
fadd
insl
mov
sub
push
icebp
loopne
xor
in
jno
mov
inc
scas
jb
add
pop
in
int3
mov
push
ret
sbb
mov
int3
push
mov
mov
lock
xchg
jbe
repz
inc
cltd
dec
sar
pop
movsl
loope
add
int
out
mov
and
xlat
sub
xchg
sub
nop
inc
and
xchg
xor
lahf
bound
enter
jmp
pop
lahf
sbb
mov
les
mov
stos
inc
push
in
mov
push
and
sbb
icebp
inc
fsubp
push
call
and
pop
sbbl
lods
xor
push
adc
es
es
int3
pop
idivb
push
aad
inc
fsincos
xchg
lret
out
daa
mov
pop
mov
jl
testb
out
adc
mov
shlb
pop
scas
add
arpl
shrb
call
and
xor
adc
in
lds
shrb
jbe
xchg
push
sub
cmp
fldt
pop
into
gs
mov
dec
loopne
aaa
adc
data16
daa
xor
push
pop
test
mov
adc
cwtl
xchg
pop
std
mov
mov
aam
sub
ds
cmp
pusha
hlt
jno
js
jmp
in
lods
aaa
jnp
loopne
add
inc
dec
mov
cmpsl
xor
lock
mov
cs
inc
adc
xor
hlt
push
add
xor
aad
mov
stc
mov
add
mov
sub
pop
cli
roll
movb
sbb
insb
adcb
scas
sub
inc
push
rcrl
mov
call
repz
in
add
mov
cmpsb
aas
xchg
push
lcall
pop
and
imul
sbb
outsb
add
mov
movsl
mov
hlt
leave
test
je
jmp
mov
inc
dec
xor
leave
loopne
das
mov
icebp
adc
fisubrs
addr16
movsb
jecxz
shlb
mov
xchg
dec
mov
cs
jae
mov
push
icebp
filds
mov
scas
movsb
sub
jbe
fidivrl
lahf
inc
sbb
and
inc
push
jno
xchg
cmp
mov
jmp
jecxz
xchg
cmp
pusha
mov
fmuls
loopne
sbb
adc
mov
xchg
sub
scas
inc
ret
rclb
mov
inc
push
ret
sbb
adc
push
lods
lcall
xchg
addb
je
mov
sub
fdivl
cltd
adc
pop
sub
push
gs
nop
cltd
ja
push
dec
lret
jnp
call
cld
loop
xchg
xchg
inc
or
ret
scas
jg
mov
xchg
clc
fs
rorl
xchg
pop
mov
xchg
and
cltd
cmp
sub
cwtl
cmp
pop
cwtl
int
adc
jecxz
jmp
push
xchg
mov
js
mov
in
mov
inc
push
rcrb
orl
out
rol
icebp
pop
xor
out
jbe
cmpsb
sub
mov
jp
in
loope
out
stc
stc
arpl
rcrl
cmp
stos
xor
pop
push
clc
jp
pusha
out
test
mov
push
clc
mov
lods
sub
jle
push
clc
sti
push
out
in
jmp
mov
leave
xchg
pop
fstl
cmp
stos
xor
or
lcall
jp
dec
or
arpl
sub
rcrb
addr16
mov
xchg
inc
je
sahf
cmp
cld
aas
sub
push
movsl
mov
pop
mov
mov
cmpsb
ss
sbb
pop
mov
mov
jns
and
pop
cmp
out
subb
test
cmpsb
ss
popf
mov
jnp
orl
mov
aaa
movsb
repnz
dec
pop
cmp
notl
outsl
in
int3
ds
jmp
sbb
mov
pop
testl
ret
push
ljmp
cli
jmp
adc
sub
push
dec
rolb
or
push
js
insb
out
pop
sbb
inc
dec
mov
cs
cmp
xor
fldcw
arpl
add
dec
mov
sbb
test
test
test
sbb
fdivl
jae
cmpsl
pop
adc
or
and
mov
and
je
mov
add
in
addr16
xor
mov
into
cltd
cmp
xor
cmp
es
es
push
je
jbe
xchg
push
xchg
and
and
xor
sarl
mov
sub
lock
pop
popf
out
ret
xchg
sbb
sub
mov
lahf
rcrb
mov
sbb
mov
xor
add
mov
sarb
inc
adc
out
lcall
outsl
dec
mov
and
pop
sbb
mov
enter
push
adc
mov
push
aad
mov
call
repz
loop
cld
cmp
push
lods
movsl
arpl
and
jnp
mov
das
in
imul
mov
mov
out
fdivs
mov
cld
aas
sbb
aad
shlb
cmp
mov
test
sub
xchg
mov
adc
aad
dec
out
xlat
add
bswap
xor
movsb
das
push
xor
dec
mov
push
adc
mov
dec
loope
push
add
push
dec
lods
sub
or
xchg
inc
cmc
outsb
inc
push
aam
or
or
pop
jge
sub
scas
mov
in
xchg
mov
ret
aam
test
jmp
sti
call
mulb
mov
mov
sub
insl
jno
adc
jb
sahf
call
mov
jecxz
jae
push
in
addr16
push
mov
ja
inc
sysenter
push
lahf
ja
mov
dec
push
mov
testb
dec
enter
notl
push
add
movsb
sub
cwtl
out
push
sbb
movl
push
aaa
dec
or
and
pop
cltd
call
or
xchg
inc
enter
stc
sbb
mov
into
mov
xor
loope
jmp
mov
adc
fwait
add
or
icebp
pop
adc
addr16
scas
inc
sarl
rorb
mov
xchg
adc
dec
push
imul
icebp
pop
and
pop
push
popf
xor
mov
xor
lods
sub
cmp
mov
push
inc
insl
stc
arpl
cmpsl
sbb
sub
flds
mov
xlat
mov
mov
sbb
mov
mov
test
inc
pop
sbb
ss
and
fistpll
shll
cwtl
or
push
sti
or
pop
xchg
cmp
or
cmpsb
inc
add
xchg
push
popf
inc
adc
lea
popf
out
add
xchg
push
xor
mov
cli
pop
mov
mov
add
dec
std
out
outsb
setae
pop
push
sarl
cmpb
inc
inc
push
mov
mov
sbb
mov
stos
daa
adc
pop
pop
dec
stos
inc
jle
in
ficompl
clc
pop
notl
call
int
ja
sub
and
jne
stos
push
add
sbb
mov
movsb
mov
mov
repz
cmp
inc
and
movsb
dec
xchg
inc
test
mov
dec
std
scas
cmp
cmp
stc
pop
into
sub
jp
pop
sub
roll
sub
fnstcw
or
or
push
jmp
mov
inc
push
add
test
jmp
jnp
int
std
push
push
shll
adc
dec
or
lret
mov
mov
arpl
or
mov
pop
push
sbb
mov
data16
inc
adc
cmp
pop
andb
inc
fidivs
dec
int3
or
ret
shrl
pop
adc
mov
sub
jno
jo
cld
bound
aam
jmp
jmp
inc
jb
and
xor
pop
and
es
sbb
loopne
cmp
sub
cwtl
or
sub
push
add
lods
xchg
out
xchg
test
std
lret
lret
sub
mov
jo
pop
test
out
outsl
mov
stos
jnp
gs
mov
push
add
sbb
sbb
mov
pop
out
mov
jns
fidivrl
bound
rcl
dec
or
mov
xor
sub
into
mov
cltd
int3
fadds
mov
iret
push
iret
xchg
mov
or
scas
add
and
xchg
mov
push
aad
sub
dec
adc
roll
lret
and
or
loop
push
jae
inc
jle
push
add
mov
gs
cmp
andl
scas
cs
mov
fsts
xor
mov
iret
mov
cmp
mov
adc
inc
scas
pop
cld
or
mov
jae
or
push
sbb
lret
lret
jnp
subb
pop
sahf
mov
mov
add
imul
jmp
stc
fnstcw
repz
mov
cmp
mov
pusha
jns
popf
test
dec
ret
pop
and
cmc
push
fnstenv
popa
in
dec
adc
sbb
movsl
xor
lret
pushf
xor
push
test
mov
in
js
rolb
es
or
stos
cld
mov
add
sub
aaa
jb
sarl
fistpl
stos
sub
xchg
jmp
sbb
imul
out
push
in
inc
mov
mov
lret
mov
or
push
jle
cmp
jl
les
popf
fildl
xor
xchg
in
sbb
push
es
ret
cwtl
inc
jbe
mov
arpl
addl
push
hlt
jb
mov
push
les
shlb
aaa
movsb
cwtl
cmp
into
cmc
les
xlat
pcmpgtb
mov
fnstcw
lods
or
add
pop
xchg
sub
xchg
int
les
aam
fucomip
in
bound
aaa
sahf
and
int
add
repz
cli
popa
sbb
ret
mov
dec
and
jae
adc
mov
lods
lods
fisubrl
mov
mov
sbb
cmp
adc
push
jnp,pn
lahf
addl
cld
iret
sub
shr
or
out
push
mov
in
pop
add
push
into
addr16
sub
and
lcall
sbb
aam
mov
icebp
push
ljmp
push
inc
or
pop
push
js
insb
hlt
sbb
xlat
les
dec
gs
mov
enter
and
lods
mov
mov
mov
test
rcll
and
cltd
jae
cltd
inc
fs
in
in
adc
or
jmp
fstpl
shlb
addl
push
adc
jle
rorb
imul
mov
mov
sbb
pop
ret
xchg
loope
cmp
or
push
ret
rcll
add
lret
sub
roll
dec
cs
inc
xchg
es
pushf
or
dec
out
or
jae
inc
fimuls
ds
outsl
ret
fldl
movsb
sub
int
cmpsb
pop
out
jno
mov
xchg
fdivp
pop
jno
in
push
sub
inc
lea
mov
add
movsl
and
out
xor
cs
int3
xchg
inc
cmp
sbb
adc
xchg
add
jmp
or
jmp
adc
dec
daa
mov
sarb
xchg
shrl
jne
or
jne
inc
push
mov
add
loope
or
sar
fsubrs
push
sarl
jne
sbb
fimuls
into
inc
scas
xor
mov
cmp
sbb
cmp
stos
sbb
icebp
mov
mov
lock
roll
adcb
jecxz
es
inc
jg
or
sbb
cmp
cmpsl
out
daa
mov
sbb
loopne
dec
pop
push
enter
or
mov
push
pop
mov
test
leave
mov
and
test
xor
or
adc
prefetch
or
repnz
das
cltd
cmp
inc
jnp
pop
lods
arpl
mov
cmp
pop
ret
jmp
cwtl
inc
popa
stc
lea
jbe
inc
pop
lret
sbb
xchg
lea
sarl
sub
in
scas
xor
hlt
les
pop
jnp
sub
in
add
es
pop
or
cltd
mov
sbb
and
test
je
inc
xchg
jb,pn
sti
xchg
in
xchg
fldl
push
popf
inc
or
pop
push
mov
lcall
push
iret
push
mov
jmp
adc
loopne
repz
sbb
jge
mov
mov
mov
lods
mov
cmpsb
aad
add
pop
stc
pop
pop
rcr
jle
test
mov
sub
cs
fnstsw
xor
push
mov
lds
idiv
mov
movsb
sub
cmp
std
data16
popa
ljmp
add
inc
jg
mov
add
pushf
inc
adc
in
inc
mov
push
pushf
cmp
orb
int
and
jp
inc
cmp
popaw
pushf
data16
push
mov
mov
mov
test
sub
addl
push
jmp
pop
sar
icebp
outsb
in
cmp
and
cmp
inc
cmpsb
es
movsb
mov
cmp
sub
lahf
cmp
scas
outsb
out
push
mov
inc
mov
shrl
hlt
lea
mov
xchg
stos
std
dec
adc
loopne
pop
inc
call
xchg
xchg
aad
and
jl
in
sahf
es
imulb
lock
jmp
pop
mov
mov
cmc
cmp
cmp
add
or
scas
jo
insl
daa
mov
inc
cmp
out
pushf
pushf
cmp
jns
push
and
popf
cmp
das
test
xor
xchg
movsb
leave
pusha
mov
rolb
mov
cmp
test
or
dec
bound
adc
in
jo
aad
dec
mov
or
bound
and
flds
xor
in
mov
mov
test
fwait
test
adcb
cmp
fldt
jns
les
lods
enter
loop
push
push
sbb
mov
negb
loop
xor
lret
xchg
mov
icebp
push
dec
mov
flds
repnz
xor
or
cmp
inc
mov
xchg
fdivrp
cltd
cmp
add
scas
rclb
dec
or
adc
inc
jecxz
sub
inc
mov
pop
xchg
out
test
push
ret
sarl
andl
fadds
dec
or
les
rorl
enter
push
insb
pop
int
sbb
cmp
enter
pop
loopne
jg
push
sti
cmpsl
outsl
cld
fs
mov
add
fnstcw
add
pop
leave
sbb
ret
mov
xlat
inc
test
test
fstpt
push
lcall
es
sub
out
lds
stos
add
ljmpw
xchg
xor
fidivl
push
fs
or
orb
push
add
cmpsl
nop
inc
div
sub
stc
inc
sar
pop
lods
lahf
mov
ficoml
rolb
ljmp
adc
mov
xchg
cs
push
mov
shlb
and
mov
popf
lods
push
jl
dec
rcr
sub
cmp
call
jns
cmp
or
shrl
xchg
fidivrs
cmp
and
pop
and
stos
repz
test
ja
lods
sub
outsl
xlat
test
stos
or
into
rcll
ret
jl
sbbb
mov
fadd
push
add
sbb
cmc
sbb
cmpsb
xor
mov
addr16
jmp
add
pop
std
inc
insb
out
inc
out
mov
ret
mov
and
int3
cltd
inc
and
fcmovnb
mov
push
into
mov
cmpsb
xor
xor
sbb
pop
dec
dec
jge
std
xchg
lods
sub
loop
jnp
das
cmp
aad
stos
sub
add
push
fstps
push
faddl
inc
add
dec
bound
adc
cmp
outsl
jmp
in
ficompl
test
lods
rol
movsl
mov
dec
mov
out
imul
pop
idivl
out
imul
clc
dec
or
push
push
movsl
mov
pop
inc
xchg
xor
in
js
out
push
movsl
xchg
repz
mov
fidivrl
fdivrl
cmc
mov
sub
pop
xchg
fs
xchg
int3
push
mov
ja
cwtl
test
xchg
aaa
dec
mov
xchg
ds
xor
sub
mov
or
cmp
ljmp
clc
cmp
fs
addr16
mov
loope
sarl
cmc
xchg
cmp
mov
rcpps
pop
adc
xor
sbb
out
push
in
mov
lods
adc
sub
push
inc
xor
mov
add
loop
mov
scas
sub
aam
lcall
lock
cli
pop
idivl
mov
or
mov
lods
sub
das
test
jb
xor
sub
inc
punpckhdq
mov
ja
add
arpl
inc
or
test
das
lret
stos
popf
inc
push
sbb
nop
aaa
outsl
mov
jbe
mov
cmp
sbb
les
push
cld
sub
repz
push
jnp
popa
aam
sub
aas
jmp
xchg
into
pop
add
rolb
mov
push
enter
pop
aaa
outsl
lea
fidivrs
sahf
adc
sbb
testb
out
inc
push
jge
popf
sub
adc
add
add
xchg
and
sub
push
cmp
repnz
adcb
pop
sahf
xchg
mov
mov
cmpsb
xchg
mov
adc
xchg
outsl
sbb
je
incl
fdivrl
pop
stos
sub
sbb
adc
jle
push
lcall
push
out
and
mov
xor
push
jge
addr16
mov
orl
test
jae
inc
js
icebp
push
js
jecxz
pusha
jb
add
mov
cld
mov
insb
out
in
fiadds
cli
or
xchg
mov
rorl
insl
cli
data16
sub
out
mov
add
and
cmp
xchg
push
or
sub
movsl
out
add
enter
and
mov
cmp
and
mulb
mov
movsl
xor
xor
mov
addr16
fnstsw
jle
enter
imul
mov
cwtl
mov
mov
or
jmp
fs
icebp
roll
and
cmp
jne
adcl
stos
and
test
xor
adc
xor
sub
test
imulb
nop
daa
pop
daa
dec
loopne
jge
test
les
mov
or
jecxz
mov
popa
hlt
les
adc
imul
shlb
call
ljmp
cwtl
callw
pop
stc
setl
sbb
scas
and
mov
cmp
addr16
stc
ds
mov
mov
aam
fdivr
stos
sub
lcall
xor
adcl
mov
mov
in
sub
imul
mov
sbb
fdivrs
repz
add
add
daa
lods
sub
rorl
push
mov
push
dec
or
xchg
test
dec
adc
jle
rclb
sbb
push
adc
jno
test
js
push
rcrl
push
sbb
popa
and
jae
mov
add
inc
or
push
xchg
cmp
sub
pushf
mov
sbb
jae
mov
std
insb
mull
out
pop
push
sub
in
movsb
xor
mov
sub
repz
dec
or
mov
push
into
pop
mov
fildll
xchg
inc
lret
aad
cwtl
or
cmp
into
popf
ds
ja
jg
out
imul
xor
fildl
shll
fnstcw
jge
xchg
mov
movsl
loope
push
inc
xacquire
xchg
lea
ss
xchg
pop
cmpsl
lret
xchg
mov
lods
sub
jne
lcall
outsb
hlt
mull
pop
ret
out
add
push
repnz
in
sub
and
stos
pop
pop
add
inc
or
pop
and
jmp
or
or
imul
aas
sahf
fldcw
pop
sti
inc
adc
inc
rolb
add
movsb
imulb
push
je
lcall
popa
ret
mov
cltd
inc
rcl
pop
add
lds
adc
dec
rcll
jae
and
dec
or
jns
iret
xchg
lods
sub
adc
mov
cli
pop
adc
je,pt
in
and
pop
mov
inc
cld
fnstenv
dec
xor
enter
out
je
fidivl
int3
jne
aaa
mov
mov
jmp
mov
flds
and
and
push
and
out
mov
popf
test
mov
data16
incb
iret
mov
in
ja
dec
call
pop
sbb
cmpsl
dec
mov
lods
in
repnz
insb
idivb
cmpsb
fs
adc
jbe
add
push
cmp
push
push
inc
or
jp
into
js
mov
mov
push
jbe
ljmp
mov
mov
sbb
out
adc
push
addb
cmpsl
bound
fstl
test
mov
cmp
hlt
pop
out
sbb
lcall
mov
push
xchg
dec
add
jns
das
lods
adc
add
dec
repnz
psllq
push
cmp
mov
mov
imul
fs
xchg
inc
push
jp
jle
mov
fdiv
mull
add
insb
loop
push
add
cmp
bsf
test
push
fisubl
add
mov
faddl
mov
dec
adc
cmpsl
sbb
aad
dec
adc
or
push
add
sbb
xchg
cmp
add
leave
fs
cmp
mov
aaa
lcall
and
insl
cmp
sarb
mov
repz
mov
cmp
xor
or
inc
and
jnp
push
xor
mov
dec
icebp
pusha
dec
cs
addr16
cwtl
cmp
clc
scas
jae
mov
xor
push
stc
xchg
and
inc
jmp
sub
and
aas
lahf
inc
cmp
push
out
dec
jne
pop
negl
and
sub
push
xlat
orl
fisttps
pop
std
popl
adc
mov
mov
mov
lea
dec
or
push
mov
pushf
xor
ja
adc
lods
sub
sarl
ds
add
and
adc
movsl
sub
mov
es
inc
enter
dec
sbb
xchg
mov
stos
hlt
pop
sub
aas
rorl
stos
xor
daa
lret
mov
cs
insb
icebp
lcall
jns
addl
sbb
dec
rclb
outsl
and
and
scas
xor
loope
das
mov
repnz
mov
nop
pop
mov
sti
pop
enter
repnz
int
leave
in
pop
shlb
mov
addr16
cmc
in
jns
scas
hlt
cltd
xor
jns
int
dec
xchg
mov
adc
imul
pop
add
lods
jmp
dec
aas
adc
mov
movsb
xchg
dec
adc
and
jecxz
ss
lea
xor
xlat
xchg
cmp
lds
mov
push
fbstp
mov
or
xchg
shrl
inc
inc
into
push
add
mov
sbb
and
pusha
cmp
pushf
dec
jnp
jns
xchg
xor
ljmp
and
aaa
inc
cmovae
dec
aam
add
scas
mov
mov
mov
mov
mov
test
sub
stc
and
rolb
fdivs
dec
mov
repz
pop
cmp
push
hlt
cmpsl
out
jp
push
clc
jne
orb
xchg
jnp
hlt
arpl
gs
cld
inc
push
mov
jne
outsl
sbb
pop
xchg
inc
adc
inc
lret
fidivl
adc
in
sbb
jp
xchg
out
fsubr
cli
pusha
xchg
or
cmp
sbbl
sarb
std
les
pop
insl
rcll
push
adc
aaa
out
lds
sbb
lret
lods
xor
pop
add
aam
dec
and
xchg
cmp
cltd
notb
cld
das
mov
sub
mov
stos
out
push
rorl
scas
xchg
je
xchg
cmp
mov
lock
add
adc
inc
xchg
cmp
nop
dec
adc
lret
xchg
aaa
stc
xor
scas
xor
xor
aaa
bound
xchg
cmp
aaa
jmp
out
jo
xchg
inc
lcall
and
jbe
cmp
aaa
xchg
sarl
xchg
inc
jno
mov
rclb
sti
pop
rorl
adc
dec
xlat
sbbl
test
iret
sub
inc
in
add
inc
sti
mov
dec
rcrl
fsubrs
repnz
ss
xor
fimull
xchg
or
mov
mov
mov
cltd
push
add
sbb
push
filds
push
xchg
adcl
sbb
mov
repnz
aaa
mov
jg
pop
push
arpl
push
cwtl
pop
cmp
mov
sti
lea
mov
scas
or
stc
mov
in
fiadds
leave
nop
cmp
mov
or
loop
ja
sub
imul
cmp
mov
inc
inc
adc
jle
pusha
jp
cltd
pusha
jp
push
pusha
jle
frstpm(287
jg
test
sti
jg
sub
popf
xor
out
negb
and
jae
mov
lret
pop
mov
jb
push
inc
cmp
das
mov
stc
fwait
cmp
stos
pop
cld
pushf
sbb
pop
xchg
lds
mov
add
mov
mov
xchg
mov
lcall
repz
lods
mov
stos
adc
cmp
sub
paddq
dec
adc
cmp
xchg
fs
rcll
loop
repz
and
push
jb
enter
inc
jmp
loopne
movsb
repz
push
cmpsb
xor
xchg
xchg
sbb
lods
insb
adc
mov
mov
sub
xchg
es
fwait
cmp
aaa
add
pop
add
imulb
shll
out
test
iret
dec
adc
push
mov
outsb
inc
je
pop
jl
das
imul
jbe
push
push
and
and
sub
xor
jmp
cmp
and
mov
cli
xchg
das
int3
cwtl
das
push
jl
sbb
out
jbe
dec
scas
ss
les
or
lea
pop
negl
pop
mov
xor
xor
imul
push
mov
lods
cmp
mov
mov
leave
sti
je
in
adc
sub
mov
out
xor
jb
leave
lea
adc
clc
push
mov
mov
cmp
imul
psrld
jbe
andl
popf
xlat
pop
add
lret
ja
rorl
dec
mov
xchg
test
es
mov
cld
adc
subb
mov
dec
jne,pn
inc
sti
xor
adc
and
pop
outsb
add
jo
fs
inc
popa
pop
add
imul
pusha
daa
pop
shrb
daa
cmpsl
popa
pop
jae
repz
arpl
enter
sbb
jne
xchg
sub
inc
add
xchg
push
mov
sbb
or
add
push
ss
insb
in
pop
sub
in
insl
js
pop
std
andb
xchg
mov
repnz
pop
sti
fisubs
cmp
add
mov
icebp
mov
cmp
push
xchg
in
push
mov
shlb
mov
mov
clc
pop
stos
shrl
into
mov
pop
add
adcl
sbb
gs
cmp
out
or
cltd
ficoml
dec
hlt
push
mov
ret
pop
mov
or
rolb
push
or
push
daa
pop
cmp
mov
mov
push
decl
fbld
push
pop
mov
and
aas
pop
xlat
jl
das
call
ss
add
test
push
mov
dec
push
xor
aas
mov
xchg
loope
xchg
rcrl
fs
dec
sti
flds
or
xchg
xor
or
es
inc
sub
pop
mov
ss
mov
stos
pop
add
fs
enter
int
sahf
sarl
in
fadds
mov
mov
add
pop
clc
mov
out
or
push
adc
add
aad
sbb
mov
inc
mov
rol
adcb
mov
jle
and
xchg
xchg
std
pop
stc
sarb
xor
cmp
mov
popa
repnz
lods
jbe
xlat
xchg
repnz
and
aas
addr16
cld
sub
push
xchg
rcl
daa
int
push
xor
lcall
out
pop
aad
je
das
or
in
bound
out
jae
sbb
mov
sbb
aam
mov
mov
dec
cmpsb
mov
fs
mov
ffree
cltd
jb
sbbb
xchg
jl
or
pop
push
outsb
jmp
pop
jns
dec
mov
add
into
repnz
adc
std
xchg
imull
shrb
mov
mov
xchg
add
cmc
pusha
scas
pop
adc
mov
xor
insb
add
sbb
cmp
lock
and
gs
enter
xchg
hlt
mov
repz
test
xor
jecxz
sar
shrl
arpl
push
mov
in
je
std
lret
pop
push
sbb
les
mov
lods
inc
or
shll
cmp
push
cmpsb
push
pop
add
mov
scas
call
cli
xor
fs
adc
mov
dec
inc
cli
pop
loopne
cld
mov
mov
scas
add
das
pop
orb
sbb
in
mov
imul
pop
test
mov
mov
dec
popa
push
push
mov
sub
jmp
push
cld
repz
aad
out
sti
adc
ss
push
jo
fldl
mov
insb
out
and
aam
jae
push
sahf
push
xorl
xor
mov
dec
js
aad
lahf
sub
mov
mov
sarl
jbe
sbb
cmp
jmp
scas
push
jecxz
push
mov
push
jecxz
add
popa
push
cmp
ds
dec
adc
leave
cs
adc
mulb
add
xchg
inc
jecxz
daa
dec
xchg
call
sub
mov
inc
mov
test
xchg
pop
jmp
push
lahf
xorl
mov
sbb
jg
mov
fnstcw
icebp
test
xchg
mov
pop
clc
add
aas
lcall
adcl
pop
xor
inc
ud1
in
mov
mov
dec
or
leave
mov
fists
int
mov
insb
call
adc
xor
add
push
out
je
xchg
mov
ret
jl
clc
mov
push
fsubr
jle
loop
pop
lret
sahf
repnz
mov
out
sbb
xchg
std
outsl
repz
ret
jnp
fs
imul
fildl
xor
int3
pop
and
ror
inc
jmp
sbb
pop
add
cs
pop
pop
mov
xchg
push
mov
mov
sarl
or
repz
sub
mov
cwtl
jle
shrb
inc
fiadds
or
gs
push
pusha
aad
xchg
je
sbb
mov
test
dec
pop
xor
mov
jne
stos
dec
in
sar
repnz
insb
add
adc
mov
dec
mov
andl
aas
aam
push
out
jmp
or
cmp
pop
xchg
sub
mov
dec
jecxz
and
aaa
aas
ds
pop
out
xchg
stos
or
adc
aaa
cwtl
das
imul
dec
mov
fst
imul
test
xor
mov
mov
cmpsl
mov
rcrl
lds
out
fbstp
sub
inc
std
xchg
je
push
lods
xchg
sbb
add
cmp
sbb
cmpsb
cmp
imul
cmpsl
mov
mov
fists
cwtl
dec
xor
mov
test
data16
cmp
test
adc
sub
mov
xchg
jge
shrb
inc
fiadds
or
dec
and
push
pop
aad
xchg
jae
sbb
mov
test
dec
push
xor
mov
sahf
test
cld
xchg
icebp
sti
insb
add
dec
mov
andb
xchg
mov
push
out
call
or
cmp
in
jns
xchg
sub
mov
dec
loop
and
ss
push
out
xchg
stos
or
adc
cwtl
das
push
mov
rcr
aam
push
hlt
test
xor
mov
mov
cmpsl
mov
rcrl
lds
out
fbstp
sub
inc
std
xchg
jae
push
lods
xchg
sbb
jmp
cmp
pop
and
out
imul
mov
fstl
cltd
dec
xor
mov
or
mov
ds
in
test
adc
inc
sub
mov
xchg
jnp
shrb
fdivrp
or
std
push
pop
insl
jno
sbb
les
stos
xor
rcrl
xor
xchg
jbe
cmpsl
dec
out
mov
insl
add
adc
inc
dec
mov
jle
cmp
xchg
lahf
test
out
out
pop
and
ja
cmp
jl
pop
xchg
sub
cwtl
add
loopne
and
xor
aas
insl
push
lock
test
movsl
fchs
jnp
adc
sub
sub
cltd
xor
dec
loope
xchg
call
fcmovbe
insb
or
xchg
pusha
inc
movsb
cmp
adc
lret
movb
ja
es
in
aas
xchg
jno
imul
xchg
sbb
ret
lret
mov
std
in
rcll
ss
out
addr16
pop
movsb
mov
mov
fistl
dec
cs
pusha
imul
pushf
adc
out
aam
test
adc
inc
daa
or
pop
bound
jns
shrl
dec
or
decb
xlat
outsb
lea
sbb
scas
cmc
mov
ret
hlt
add
xor
xor
test
ja
movsl
push
out
mov
outsb
add
inc
dec
mov
jl
cmp
xchg
popf
stos
inc
iret
mov
lock
enter
js
cmp
jge
pop
xchg
sub
lods
mov
fsubrp
and
xor
inc
xlat
imul
test
cmpsb
xlat
fidivrs
stc
sub
xor
loop
test
add
fcom
insl
or
xchg
and
mov
movsl
cmp
jg
test
leave
shll
movl
and
in
notrack
test
sbb
and
jecxz
rclb
pop
lock
pop
mov
ret
in
cmc
ficoml
fwait
dec
sub
and
mov
inc
xlat
in
shr
xchg
es
adc
js
ret
fwait
xor
lret
sti
push
mov
decl
fsubrs
outsb
xchg
faddp
movsb
cmp
call
xor
xor
subb
lcall
xchg
in
cmc
outsb
add
inc
dec
mov
jp
cmp
xchg
fwait
stos
inc
int
pop
icebp
in
enter
jns
cmp
jge
pop
xchg
mov
dec
fsubp
and
xor
inc
xlat
imul
cmc
mov
fdivrl
stc
lds
xor
jecxz
cmpl
iret
insl
or
mov
and
hlt
mov
cmp
scas
xchg
les
iret
xor
add
loop
sbb
add
cmpsb
nop
push
mov
mov
stc
loop
rcll
sbb
icebp
outsb
pop
mov
shl
repz
fwait
inc
sub
dec
pop
and
shrb
mov
lock
pop
idivb
pop
jge
nop
ja
ret
test
fwait
xor
leave
dec
loope
add
push
sbb
dec
push
fsubrs
outsb
xchg
mov
shll
cs
xor
subb
lcall
xchg
in
rep
add
aas
inc
mov
js
cmp
inc
lret
mov
repnz
enter
jp
aaa
aas
out
jno
cwtl
das
mov
mov
fucom
and
xor
inc
xlat
push
mov
mov
fstpt
clc
lds
das
lcall
cmpb
into
aad
insl
pop
lock
and
hlt
mov
cmpsb
cmp
lods
xchg
les
into
xor
jmp
dec
out
cmp
xchg
insl
jae
add
mov
mov
mov
clc
loopne
rcll
sbb
icebp
arpl
pop
lahf
test
mov
out
repnz
xchg
sub
inc
sub
xchg
jge
imul
or
cmp
push
movsl
push
pop
jle
jne
ret
cmpsb
mov
xor
dec
loope
add
add
fnstenv
insb
xchg
sahf
test
movsl
cmp
cld
adc
pop
inc
dec
xor
jg
loop
cwtl
mov
add
and
pop
mov
inc
lea
pop
cmp
inc
lret
repnz
leave
pusha
sbb
ds
jo
cwtl
das
mov
mov
fninit
and
das
ss
fsubs
repnz
mov
jge
or
lds
cs
xor
dec
jecxz
cmpl
outsb
push
out
mov
and
cmc
mov
cmpsb
cmp
lods
xchg
les
int
enter
jns
and
push
cmp
xchg
imul
movsb
mov
mov
lds
nopl
icebp
popa
insb
leave
pusha
sahf
cmpb
mov
xchg
sub
inc
sub
xchg
jnp
imul
or
cmp
push
movsl
push
pop
jg
mov
ret
movsb
scas
popf
xor
lds
testb
push
xor
imul
xchg
push
pushf
test
fidivrl
push
lods
sub
les
dec
xor
jle
loop
xchg
lahf
push
jmp
call
or
mov
inc
mov
lea
pop
repnz
lret
add
xor
cwtl
das
xchg
mov
and
adc
aam
sub
dec
repnz
mov
jle
or
lds
inc
dec
jecxz
cmpb
lret
outsl
add
daa
testb
jp
stos
stos
xchg
les
int3
xor
std
in
jns
pop
push
call
imul
mov
les
rorl
cs
icebp
pop
imul
popf
cmpb
mov
xchg
sub
inc
es
pop
fs
imul
or
cmp
xsha256
cmpsb
push
pop
adcb
jno
les
ret
dec
loop
add
add
push
stc
nop
fdivrs
pop
scas
sub
lds
xor
jp
popf
push
ljmp
jno
and
and
je
ds
xchg
lods
inc
lods
pop
repz
lret
bound
jp
xor
subb
das
test
mov
xlat
loope
mov
sub
fisubl
repnz
popa
clc
mov
adc
or
lds
sub
xor
inc
dec
jecxz
jg
push
mov
push
enter
add
mov
sbb
testl
stos
nop
les
lret
xor
cld
jecxz
jns
push
push
jmp
addr16
pop
mov
ret
mov
or
lods
inc
dec
sub
icebp
pop
push
bound
jmp
sub
inc
and
dec
push
arpl
mov
test
lret
cld
pop
arpl
cmp
sbbl
mov
rorl
mov
add
mov
cltd
movsl
stc
nop
xlat
mov
pop
scas
sub
lds
xor
jp
pushf
push
ljmp
jno
and
and
jae
ds
xchg
lods
inc
stos
pop
repz
lret
bound
jp
xor
jmp
das
orl
dec
loopne
mov
sub
inc
fisubl
mov
popa
clc
mov
adc
or
lds
sub
jecxz
jle
push
mov
push
rcr
jo
jmp
testl
test
lret
sti
loop
jns
sbb
add
mov
ret
hlt
fnstcw
or
lods
inc
dec
sub
pop
imul
imul
sub
inc
and
xchg
jbe
imul
push
arpl
aaa
sbb
cmpsb
dec
pop
sbbl
lahf
stos
lahf
ss
dec
loop
mov
add
data16
cwtl
movsb
stc
nop
mov
pop
scas
sub
xor
jp
fwait
push
ljmp
jno
pop
push
and
jb
ds
xchg
lods
inc
lds
lret
bound
std
jp
das
cmp
subb
orb
dec
aad
and
imul
inc
fisubl
repnz
clc
mov
adc
or
lds
sub
jecxz
jge
push
scas
xchg
push
rcr
jo
call
testl
test
les
leave
xor
cli
loope
jns
sbb
jmp
outsb
jo
mov
rorl
or
pop
icebp
pop
push
js
scas
mov
xchg
sub
inc
and
xchg
jne
imul
add
xsha1
cmpsb
dec
push
sbbl
sahf
stos
lahf
fdivrl
mov
add
jb
mov
xchg
mov
cmpsb
cmp
daa
or
pop
ds
xor
jp
lcall
jecxz
jno
push
add
es
ds
xchg
lods
inc
les
lret
bound
cld
jp
cs
subb
das
orl
mov
sub
inc
fisubl
repnz
popa
clc
mov
adc
pop
out
lds
sub
jecxz
jl
push
scas
xchg
push
jo
out
pop
sbb
testl
cmpsl
les
enter
loopne
jns
sbb
dec
xor
xchg
fs
jo
lahf
test
mov
rorb
or
icebp
pop
addr16
bound
mov
xchg
sub
aas
and
xchg
je
imul
add
cli
xor
push
sbbl
popf
test
dec
loop
cld
mov
add
mov
xchg
mov
cmpsb
cmp
es
pop
cmp
pop
jecxz
nop
cltd
push
ljmp
jno
sbb
ds
es
ds
xchg
lods
inc
ret
test
repz
lret
bound
sti
jp
sub
dec
cwtl
das
orb
dec
rcr
and
imul
inc
fisubl
repnz
popa
clc
mov
adc
push
out
lds
sub
jecxz
jnp
push
lods
xchg
push
into
fnstenv
out
pop
sbb
testl
cmpsb
mov
pop
mov
jns
sbb
dec
xor
xchg
arpl
sahf
test
mov
mov
cmp
pop
adc
icebp
pop
lretw
bound
mov
xchg
sub
cmp
pop
es
movsl
mov
fndisi(8087
icebp
mov
add
xor
adc
xchg
lds
dec
jecxz
cli
mov
add
arpl
nop
shlb
pop
scas
and
pop
cmp
xor
jnp
xchg
push
ljmp
jno
sbb
and
outsb
push
aas
xchg
pop
hlt
fsub
lret
bound
jnp
sub
jmp
xor
pop
sahf
mov
insb
es
ficompl
repz
popa
clc
mov
adc
add
das
push
es
xor
aas
dec
in
jns
push
stos
xchg
imul
int3
fnstenv
in
and
and
push
aaa
cmpsl
imul
pop
mov
fucom
jp
sbb
dec
xor
cwtl
popa
push
or
es
aam
aam
adc
repnz
fs
arpl
mov
sub
or
mov
push
pop
daa
mov
mov
repnz
add
pop
adc
test
lcall
in
clc
mov
add
fdivl
popa
mov
xchg
sahf
cli
xchg
shlb
scas
and
pop
cmp
int
pop
in
lea
add
sbb
and
insb
push
inc
xlat
test
pop
cmc
loopne
arpl
clc
jl
sub
andl
or
rcr
es
and
inc
fistpl
hlt
mov
stc
scas
cwtl
adc
add
xor
sbb
sahf
xor
outsb
ja
push
test
lret
cld
loop
and
stc
nop
push
xor
pop
scas
mov
ret
xor
jnp
push
push
jmp
add
lcall
daa
in
sarb
aad
imul
and
repz
int
xchg
jbe
adc
leave
cwtl
das
sti
or
mov
dec
pop
sub
mov
ret
hlt
fs
das
push
adc
subb
cltd
mov
dec
in
idivb
add
dec
fdivl
pusha
mov
xchg
pushf
cli
xchg
into
mov
inc
in
sbb
cmp
int
pop
out
mov
add
fsubp
jb
pop
add
mov
push
inc
fadds
movsb
pop
not
fmulp
arpl
idivl
sub
ljmp
test
lahf
mov
mov
mov
and
inc
fistpl
cmc
mov
stc
lods
xchg
adc
add
xor
sbb
sahf
xor
insl
jne
push
cmpsl
mov
ror
jno
loope
and
sbb
nop
dec
xor
inc
outsw
pop
scas
mov
shll
or
push
jmp
sub
jb
cwtl
jg
mov
jmp
aas
add
pop
hlt
push
pusha
int
xchg
jne
adc
enter
push
or
dec
pop
sub
mov
shl
repz
fs
sub
dec
sbbb
addr16
cwtl
mov
dec
out
hlt
mov
add
jns
mov
xchg
lcall
in
sbb
cmp
ss
pop
out
mov
add
or
aaa
nop
daa
imul
inc
mov
arpl
idivb
sub
ljmp
test
lahf
mov
mov
mov
and
inc
fistpl
cmc
mov
stc
lods
xchg
adc
call
lahf
ss
cmp
imul
mov
mov
fisttps
xchg
dec
xor
scas
lahf
test
pop
mov
ss
fsub
jl
adc
inc
sub
lcall
and
ljmp
inc
and
push
pop
into
gs
jae
adc
cltd
xor
add
mov
rorb
inc
mov
gs
sub
adc
jg
xor
xchg
mov
dec
out
repz
add
js
mov
cltd
sti
xchg
lret
mov
inc
loop
sbb
ss
into
outsl
push
out
mov
add
or
xchg
sub
inc
fadds
mov
int
push
hlt
jge
es
andb
xor
or
int3
aad
mov
and
inc
fcompl
cmc
mov
arpl
stos
xchg
adc
out
enter
aaa
push
cmp
imul
add
fdivl
fisttpll
xchg
dec
xor
mov
add
mov
aaa
into
lock
in
or
push
in
inc
sub
lcall
and
jmp
or
cmc
push
pop
iret
data16
jno
adc
les
mov
dec
push
sub
xchg
outsb
pushf
cmpsl
dec
mov
data16
sub
adc
inc
dec
test
jge
xor
xchg
sahf
mov
out
icebp
rclb
outsl
push
cmp
jbe
lea
scas
stos
inc
loopne
sbb
xor
cmp
insl
push
call
in
mov
loopne
or
sti
and
sub
xchg
sub
inc
fnstcw
mov
mov
fcmove
gs
jle
and
in
andl
xor
or
lret
mov
push
es
fstl
testb
xchg
adc
ret
lret
cld
in
leave
adc
ss
out
jno
push
mov
fnsave
mov
or
cs
inc
pusha
imul
pushf
or
iret
out
aam
jge
adc
inc
daa
add
pop
bound
xchg
jns
mov
out
inc
xlat
cld
or
testb
lea
adc
scas
out
test
ret
hlt
add
push
inc
push
sub
test
outsl
lcall
in
mull
sub
adc
sbb
popa
xor
xchg
pushf
mov
call
and
jo
cmp
jbe
pop
mov
lods
lods
inc
fsubrp
sbb
jg
lret
das
cmp
aaa
lea
push
in
cmp
jge
iret
dec
fwait
stc
adc
popf
js
add
mov
shlb
push
fidivs
ret
dec
mov
pop
out
cmc
sbb
test
lret
cld
pop
mov
cmpsb
stc
and
sbb
jb
loope
dec
mov
fimull
stos
in
mov
sub
push
xor
sahf
mov
cwtl
pop
push
fnsave
mov
out
or
sub
xchg
ss
xchg
pop
mov
je
cmpsl
mov
xchg
add
jno
xchg
xchg
pop
inc
mov
pushf
fistpl
minps
adc
inc
add
leave
mov
scas
mov
adc
or
xorl
das
lahf
fwait
jp
pop
popf
or
ret
adc
notl
mov
jns
jmp
lds
inc
and
xorb
clc
jmp
lea
shl
enter
push
ror
xchg
sbb
cwtl
enter
adcb
fldenv
mov
sti
sub
pop
pop
push
push
adc
das
sti
iret
int3
je
mull
pop
dec
sub
pop
sbb
pause
sub
jmp
ret
sub
in
mov
xchg
or
push
jbe
cmp
push
or
xchg
push
sub
lret
xchg
loopne
cmp
gs
fs
js
stc
pop
dec
sbb
add
push
sbb
rcrb
fs
mov
jns
or
rcrb
call
testb
dec
enter
fisubs
pop
lret
xchg
gs
xchg
iret
nop
sahf
lock
subb
fs
cwtl
xchg
gs
aam
mov
xchg
mov
inc
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
pushf
xchg
adc
xlat
loopne
bound
aaa
sti
and
cwtl
test
cmpl
mov
cltd
andb
fs
arpl
adc
inc
adc
adc
leave
scas
adc
ja
mov
adc
xor
add
push
xchg
je
dec
pop
mov
test
jae
adc
call
jge
inc
xchg
lods
adc
mov
cli
mov
movsl
or
jle
jno
xor
dec
fucomip
adc
adc
jp
adc
mov
mov
imul
pop
pop
sub
stc
imul
sbbb
ljmp
std
jg
mov
ljmp
imul
repz
addr16
lods
test
test
scas
mov
add
stc
add
add
cmp
pushf
xor
sub
add
sub
aam
mov
adc
icebp
pop
inc
adc
outsb
out
or
dec
xchg
movsb
je
xchg
int3
push
loope
repnz
jecxz
xchg
cmpsl
nop
or
daa
lcall
sbb
push
push
add
enter
mov
int3
push
inc
fidivs
xor
push
mov
cmp
daa
out
sub
jae
lahf
int3
mov
int3
cld
shlb
xchg
out
addr16
xchg
repz
mov
cmp
mov
hlt
dec
mov
jnp
mov
push
dec
icebp
test
sub
out
push
jecxz
jmp
jmp
imul
in
insb
ret
and
rcrl
sbb
push
mov
jnp
sub
shrb
adc
mov
cli
add
cmp
and
mov
icebp
scas
fimuls
shll
aaa
push
pop
movsl
scas
and
jle
lcall
stc
sbb
jb
in
jo
jmp
mov
daa
and
push
std
mov
xor
fwait
iret
xor
insl
inc
mov
xor
js
xor
pop
mov
popf
push
inc
xor
stos
test
dec
fstpl
mov
stos
out
test
mov
or
ficoml
lret
fwait
mov
jo
push
and
xchg
sub
insl
jb
movsb
dec
or
xor
pop
cmc
dec
xchg
cmc
sbb
movsl
xchg
imul
and
rcl
mov
orb
popa
add
ja
jno
popa
dec
mov
pop
dec
mov
jecxz
mov
inc
mov
dec
mov
mov
or
fists
xor
xchg
dec
or
dec
jns
jno
fcoml
adc
shlb
mov
pop
out
movsl
movsb
das
fisubs
rcrb
rolb
and
iret
stos
fisubl
push
and
aad
sarl
out
sub
fs
sbb
fwait
in
fs
push
mov
movsb
fcmove
cmp
movsb
mov
cmc
dec
mov
mov
arpl
xchg
out
jecxz
rolb
push
mov
mov
push
loope
pop
sbb
mov
push
in
push
std
repnz
adc
repnz
pusha
icebp
mov
mov
dec
cmp
movsl
lods
out
sbb
add
and
cmp
and
scas
pop
mov
in
adc
mov
ja
mov
ret
cmpsl
jnp
cwtl
and
test
arpl
fsubl
repz
or
fisttpl
xlat
repnz
cli
cltd
clc
jl
sub
pslld
aam
lcall
xor
adc
sub
inc
lds
cmpsb
aad
jge
mov
test
mov
lds
into
jae
dec
xchg
cmp
shrb
popa
out
hlt
pop
add
sub
es
ret
dec
inc
fwait
mov
jle
addr16
pop
ljmp
sbb
scas
push
aaa
lret
xor
ret
cmp
jnp
mov
jnp
lret
jg
out
mov
lods
adc
loope
dec
test
mov
xorl
pop
cld
popa
sub
lret
cmp
mov
and
add
jmp
jl
mull
rcr
and
test
pop
cmp
pop
inc
mov
sar
bound
adc
jae
dec
outsl
xchg
mov
pop
pop
movsb
cltd
aad
movsw
scas
xchg
out
pop
ja
and
and
outsb
pop
xor
les
ss
pop
shrb
jb
rorb
jb
xchg
clc
lret
xor
xor
push
jnp
jnp
xor
test
push
jge
push
and
dec
adc
cmp
jbe
and
cli
mov
inc
add
test
sub
dec
dec
test
daa
gs
movl
dec
inc
inc
xor
inc
aas
sub
aad
add
inc
mov
cs
push
shll
addb
outsl
repnz
add
std
or
push
push
lds
pop
jge
scas
mov
mov
mov
ret
frstor
inc
enter
inc
sub
mov
mov
push
xor
jp
or
inc
cmp
loopne
or
inc
cmp
push
lock
cmp
xchg
xlat
or
imul
dec
xor
or
jle
xchg
mov
inc
push
daa
push
inc
cmp
hlt
rorl
or
add
stc
push
popa
add
cmp
cmp
outsb
mov
or
hlt
cmp
addr16
int3
out
jecxz
pop
cmpsl
add
xchg
mov
inc
mov
movsl
sti
mov
pushl
in
fisttpl
push
adc
jl
sbb
xchg
jmp
dec
std
stos
push
push
ret
xchg
mov
lahf
lret
testb
cmp
lret
jg
insb
sarl
enter
in
xlat
cmp
sub
mov
xchg
push
stc
mov
std
ljmp
int
mov
xchg
cmc
insb
aam
enter
xchg
outsb
shrb
pushf
sub
bound
ret
outsb
mov
dec
in
add
aaa
cmp
mov
pushf
in
pop
adc
movsl
call
enter
rol
cmp
mov
fcoms
stos
fistpl
or
scas
cmc
in
rclb
rol
push
ror
in
or
mov
dec
mov
inc
mov
mov
inc
mov
mov
inc
scas
push
mov
inc
lods
jl
out
pop
pop
in
cmpl
movsl
add
push
popf
inc
ljmp
test
popa
jle
xor
mov
sbb
inc
mov
mov
cmpsb
pop
jmp
jmp
xor
push
ljmp
xchg
test
and
lahf
inc
int
inc
sarl
xchg
cmp
orps
lahf
pop
adc
mov
call
inc
cltd
mov
mov
adc
push
mov
fcmovnb
mov
cmp
mov
mov
leave
mov
pop
pop
popa
jae
inc
inc
dec
mov
jne
pop
rcl
aam
jno
jnp
leave
shlb
gs
mov
mov
pop
les
ret
xor
and
outsl
fsubs
mov
aad
js
and
mov
sub
nop
jno
push
mov
mov
movsb
mov
cmpsl
test
cmp
jg
pushl
daa
insb
and
subl
fs
popf
sbb
mull
int3
push
dec
enter
cmpb
inc
inc
out
pop
insl
popf
mov
rol
rcll
int
lock
push
mov
in
mov
hlt
aad
inc
adc
jg
movsl
lahf
jns
xchg
movsl
aam
and
je
xchg
add
pop
pop
not
in
jo
sbb
int3
push
push
out
lods
sbb
inc
push
leave
sbb
jl
inc
mov
out
cmc
rcr
mov
jb
dec
pop
mov
dec
sbb
push
adc
xchg
rcr
and
inc
pushf
adc
pop
inc
push
shrl
push
and
pushf
inc
push
imul
add
int3
xor
add
xor
fimuls
mov
sbb
mov
mov
push
scas
les
cs
fbld
ds
mov
addl
and
loopne
sub
popf
and
mov
fldenv
jp
out
inc
clc
fimuls
stc
dec
