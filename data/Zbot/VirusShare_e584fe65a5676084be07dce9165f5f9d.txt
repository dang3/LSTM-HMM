sbb
add
add
mov
sub
gs
or
add
add
hlt
out
fdivs
pop
mov
mov
jecxz
cli
data16
jle
pop
aad
xchg
mov
aad
xlat
in
rolb
cmp
mov
push
insb
jge
popl
and
std
ds
iret
push
sub
pop
stos
mov
push
or
mov
xchg
cmp
mov
outsl
jne
mov
fnstcw
int
jge
mov
xchg
popa
cltd
cs
inc
push
cld
and
popf
ljmp
incb
aas
sbb
dec
and
lahf
bound
add
push
xor
in
pop
aas
insb
cltd
mov
inc
outsb
mov
aam
shr
and
jb
cmp
lock
mov
leave
aad
fildl
sarl
jecxz
daa
xchg
js
mov
aaa
icebp
xchg
insb
cmp
sub
lea
inc
xor
nop
gs
jecxz
mov
sub
or
bnd
sub
es
lahf
mov
hlt
cmc
mov
dec
scas
roll
fnstenv
mov
mov
pop
lock
cmp
movb
sahf
push
cmp
in
loope
aas
lret
cmc
dec
mov
test
aad
cmp
push
mov
lahf
mov
sub
pop
subl
enter
mov
jmp
pop
xchg
push
in
mov
mov
push
int3
adc
mov
je
push
test
bound
and
mov
sbb
popf
mov
pushf
mov
jp
pop
test
add
xchg
cmp
movsl
divl
mov
fbld
dec
cs
add
mov
cwtl
rdpmc
into
pop
pushf
fwait
jns
enter
mov
ss
mov
inc
inc
jno
sbb
sub
in
jecxz
mov
xor
jle
push
scas
mov
addr16
or
or
xchg
fwait
xchg
shlb
xchg
dec
xor
adc
push
inc
push
icebp
and
std
rorb
sbbl
aaa
xorb
fiaddl
jne
xchg
or
sarl
test
pmaxsw
lods
rolb
pop
inc
lcall
lods
mov
ss
push
xchg
adc
mov
sub
add
call
add
mov
push
cwtl
inc
inc
jle
rcr
scas
push
jle
roll
cmpsl
pcmpgtd
or
pop
mov
mov
lret
xchg
jg
jnp
addr16
cmp
push
test
xchg
sub
xchg
ss
inc
call
outsb
cmp
sbbl
sbb
lock
xchg
and
in
or
loopne
xor
repnz
jnp
xor
rolb
test
mov
cmpsb
jecxz
sub
gs
ret
pop
fisttps
push
pop
push
jns
stos
fldenv
sbb
mov
and
sbb
jne
sti
in
and
adc
enter
lds
sbb
add
sub
xlat
pop
dec
jl
xchg
dec
jnp
jmp
xchg
jle
out
mov
inc
aas
inc
and
cmc
push
fildl
rcr
inc
push
jl
mov
movsl
or
mov
sbbb
or
jne
mov
jge
pushf
pop
clc
xor
mov
push
sti
adc
xchg
cli
or
pop
iret
mov
das
scas
out
or
cmpsl
outsb
push
xor
inc
ljmp
enter
mov
or
pop
pop
into
ret
sub
loop
mov
ret
xor
push
add
jge
push
and
pusha
cmc
das
fstpt
xor
or
aas
shll
pushf
sub
aaa
fs
loope
jmp
cmp
sbb
sbb
adc
sub
push
and
jo
push
loope
out
mov
fbstp
and
scas
aad
mov
rclb
pop
cmpb
dec
sbb
and
movsl
imul
jg
enter
xor
lcall
out
out
mov
rcll
jo
in
xor
cli
xor
or
fsubl
ficompl
cld
mov
push
fs
hlt
mov
mov
mov
ljmp
adc
lahf
mov
push
data16
mov
dec
sub
mov
ret
fldenv
cli
pop
mov
icebp
cld
scas
insb
roll
cld
inc
xor
or
loope
inc
fimuls
nop
loop
mov
dec
int
or
ljmp
pop
push
addl
dec
imul
lods
aam
cmpb
jbe
mov
pop
stc
dec
gs
sub
xchg
stos
cli
data16
insl
mov
push
inc
mov
pop
outsb
jb
lahf
nop
xor
jmp
bound
push
aad
inc
adc
inc
pop
or
int
mov
daa
mov
lret
add
jae
jge
cmp
rep
leave
jmp
xor
inc
sub
out
push
cmp
inc
negb
sbb
jmp
leave
test
dec
outsl
into
mov
xor
push
xchg
dec
data16
push
mov
and
xchg
test
jg
rcr
in
or
stos
ret
sub
leave
dec
mov
sbb
inc
in
outsl
push
in
sbb
aam
or
dec
xchg
sbb
int3
xchg
or
adc
inc
jecxz
stos
cmp
icebp
test
mov
adc
lret
sarb
mov
inc
lock
sub
arpl
rorl
sub
pop
loop
pop
mov
lock
das
les
repz
sbb
das
and
mov
and
pop
jo
scas
out
mov
push
mov
jp
push
ljmp
cmpsl
iret
out
mov
sbb
xor
sbb
shl
rep
xor
test
lds
fiaddl
cmp
inc
or
or
fcomip
sub
sarl
pop
jg
cmp
loop
inc
std
push
mov
jp
xchg
add
hlt
outsl
mov
sub
adc
adc
xor
sbb
dec
stc
call
test
cli
fcmovnbe
pusha
icebp
shl
loopne
ljmp
mov
scas
loope
dec
aad
xor
insb
lods
popa
fiaddl
aaa
prefetch
test
sbb
ja
addr16
cli
fs
imul
and
fcmovb
jecxz
ret
ficoml
sbb
cld
sar
stos
adc
inc
sbb
ret
jnp
jl
adc
inc
pushf
xchg
inc
testl
mov
je
dec
rcll
adc
cmp
sarb
adc
icebp
das
and
lea
out
push
aad
mov
jg
pusha
in
mov
cmpsb
outsl
jl
ljmp
out
mov
mov
out
jmp
push
addr16
in
adc
dec
fwait
cli
js
pop
push
mov
leave
push
mov
int3
shrb
jp
loopne
repnz
pop
and
out
lods
outsb
fldl2e
jbe
lret
inc
pop
adc
xorl
adc
cltd
int
mov
and
xor
pop
ljmp
jno
add
decb
es
jns
jo
jns
and
sbb
xchg
jmp
xchg
shl
test
dec
repz
icebp
bound
adc
test
in
aas
stos
jne
lret
icebp
stc
pop
xchg
loopne
sbb
adc
ret
xor
aam
and
fs
and
sub
mov
dec
cmp
push
mov
jmp
ret
aad
pushf
into
push
xor
ret
xchg
mov
jle
xchg
data16
lret
inc
clc
mov
shlb
in
test
inc
outsl
dec
stos
mov
jb
pushf
fildl
enter
xchg
xchg
mov
cmp
and
push
mov
xchg
data16
rcll
adc
and
push
pop
fdivrl
dec
dec
int3
fldl
adc
push
mov
and
mov
adc
lock
mov
inc
divl
xchg
popf
jo
cli
jmp
jp
dec
mov
sub
sub
mov
ret
push
mov
push
popa
or
icebp
dec
in
jns
pop
add
stos
add
stc
data16
enter
test
clc
inc
lret
push
test
sbb
jno
pop
add
jmp
lea
push
mov
mov
pop
jne
jnp
les
ljmp
pushf
ja
movsb
push
rolb
mov
out
xchg
in
push
xor
lods
ret
hlt
repnz
and
and
inc
xlat
and
insl
pop
mov
outsl
int
mov
jno
xlat
ret
sub
push
inc
push
icebp
mov
add
nop
sbb
gs
xor
iret
sbb
mov
ret
adc
mov
cmc
fwait
add
fs
cld
in
cmovae
mov
mov
and
pop
testl
aaa
pusha
fimuls
mov
sub
mov
mov
leave
sti
xchg
ss
test
mov
clc
cs
sbb
lods
mov
jecxz
stc
in
xor
in
jb
push
aaa
mov
pop
outsl
mov
clc
in
dec
int3
clc
je
xchg
enter
es
ret
loope
enter
cwtl
les
xor
rorb
adc
push
pop
jmp
fsubrl
mov
mov
inc
mov
rorl
mov
push
xor
xchg
out
jns
jecxz
sbb
xlat
xchg
mov
xor
pusha
inc
out
std
pop
gs
sub
lock
jecxz
mov
inc
fldcw
sbb
and
inc
mov
sbb
arpl
and
jmp
pop
push
lods
mov
mov
bound
mov
cwtl
cli
push
mov
hlt
mov
fwait
sub
dec
stos
pop
xor
test
add
lods
pushl
pop
ja
rcl
lock
std
movsb
inc
sub
lods
movsl
testb
fisttpll
fdivrp
pushf
aad
pop
mov
lcall
ficomps
lahf
mov
push
stos
loope
clc
inc
push
lock
jmp
pop
addr16
pop
xlat
fbld
xor
xor
popa
and
aam
fwait
xchg
push
cmpsl
bound
jae
dec
enter
out
dec
dec
dec
push
cmp
jae
in
fs
jne
adc
dec
repnz
pop
pusha
into
test
mov
ljmp
daa
test
scas
aas
mov
pop
pop
mov
pushf
add
mov
push
jp
fldenv
adc
inc
scas
nop
adc
ret
xor
cmp
dec
xchg
das
push
pop
sti
push
xor
arpl
sbb
inc
push
lret
lods
orb
xchg
push
mov
imul
nop
cmp
mov
xor
in
xor
cmp
dec
stos
mov
loop
cli
mov
in
and
mov
mov
shll
inc
aad
push
adc
push
mov
jl
push
jb
test
push
fucomp
add
fdivl
mov
sub
pop
or
stos
sbb
xor
cmp
adc
sbb
inc
adc
addr16
pop
push
int3
cltd
call
xchg
nop
ja
push
cs
xor
cs
mov
sbb
xchg
mov
mov
cmp
xchg
cs
popf
std
jmp
lds
fadds
xchg
addb
xor
pop
scas
or
aas
sbb
inc
mov
out
xchg
adc
and
cld
adc
sbb
or
cmp
out
push
movsl
enter
lcall
xor
jge
js
pop
push
nop
aam
pushf
fwait
shl
mov
xchg
jbe
mov
test
push
aam
adc
mov
and
xor
jbe
ret
pop
idivl
add
es
push
fs
fcomip
pop
dec
rclb
enter
in
mov
sbb
arpl
enter
mov
push
fsqrt
cwtl
int3
movsb
popf
lfs
dec
movsl
orb
mov
pop
popa
enter
das
xor
push
xchg
push
lret
ja
mov
pop
mov
inc
fucomi
jle
xchg
mov
push
lahf
lea
xor
mul
scas
and
xor
xchg
mov
push
aam
dec
mov
shl
or
leave
add
popf
cmp
insl
xchg
add
pop
movsl
jmp
insb
adc
push
adc
imul
adc
xchg
and
push
sahf
add
fdivs
in
nop
mov
pop
xchg
inc
pusha
jg
std
in
pop
xchg
sub
xchg
xchg
sbb
mov
and
mov
xchg
lcall
mov
nop
sbb
xor
jnp
ljmp
lcall
cmpsb
adc
out
loopne
pop
xchg
pop
repnz
mov
sbb
or
cmp
out
pop
add
mov
and
loope
pop
dec
mov
xchg
or
je
cmp
movsl
aad
enter
out
shl
dec
ret
test
mov
jne
add
push
push
test
faddl
pop
xchg
out
mov
pop
popf
sarb
xchg
xorb
into
ret
sbb
ss
lahf
data16
stos
mov
add
popa
pop
enter
adc
cmp
repnz
lahf
rcll
and
cmpsl
fisttps
into
sub
or
stos
addr16
add
xor
mov
xor
adc
sahf
push
stc
lret
adc
and
xchg
push
fsts
loope
shl
imul
fwait
mov
jo
push
sub
jae
push
aam
sub
jmp
pop
xor
jo
dec
jmp
and
xchg
call
mov
or
push
or
sbbl
insb
xchg
dec
lea
scas
movsb
xor
push
incb
or
repnz
jp
rcl
lods
call
insl
adc
jp
and
nop
xchg
jae
insb
jbe
mov
lcall
push
push
outsl
data16
mov
pop
xchg
incl
frstor
mov
jns
in
lret
lea
dec
mov
jp
sbb
and
sbb
outsb
out
std
or
mov
and
xor
andl
jmp
mov
ficoms
xlat
pusha
aad
pop
test
add
sbb
sub
imul
aam
mov
aaa
pop
nop
test
arpl
inc
jl
jns
mov
pop
xlat
adc
movsl
lock
ss
neg
adc
jbe
rep
or
and
dec
pop
lea
add
out
lahf
xchg
sub
mov
inc
movsb
inc
test
mov
mov
dec
xchg
adc
cltd
test
stos
stc
mov
mov
inc
test
mov
xchg
cmp
jecxz
fsubr
add
dec
xlat
fsubrs
cld
dec
in
xor
out
dec
mov
sub
fwait
mov
sti
sbb
dec
arpl
adc
jo
xor
pop
sub
xor
push
xchg
hlt
push
push
jg
insl
pop
int
shlb
mov
jb
add
fisttpll
cli
add
jmp
arpl
data16
in
test
xchg
outsb
jle
dec
mov
push
mov
or
jne
and
lahf
movsb
cmp
pusha
xchg
es
mov
shrb
mov
lcall
mov
mov
mov
pop
leave
bound
ja
or
fimuls
icebp
xchg
adc
mov
jle
pop
mov
cmp
cltd
sar
dec
sbb
push
jb
mov
adc
rclb
in
inc
ror
fiadds
push
aaa
lods
push
cmp
mov
mov
jns
into
sbb
popf
lcall
mov
mov
inc
or
ljmp
lods
or
sti
enter
test
jmp
repnz
ds
arpl
jp
or
out
stos
mov
shl
ljmp
pop
pop
push
stos
imul
adc
addl
inc
mull
testb
fucomp
addl
ljmp
mov
sub
lret
pop
fbld
mov
sbb
push
leave
sbb
sub
sub
cli
mov
mov
aad
and
and
pop
cli
rclb
movsb
adc
es
sub
movsb
or
xchg
int
fcmovnbe
add
push
je
pop
mov
loop
mov
loop
in
int3
jbe
aas
mov
add
sti
pop
mov
cmp
mov
mov
and
xlat
out
out
mov
lret
or
mov
push
cmp
repnz
cld
xchg
inc
repnz
fs
roll
jp
imul
test
inc
xchg
mov
dec
imul
test
mov
jo
test
add
push
mov
sbb
push
pop
rorb
cmpsb
sar
inc
mov
and
or
sub
mov
mov
xor
push
cli
dec
fcompl
test
call
xchg
mov
aas
callw
mov
in
fisubs
loopne
sbb
in
add
pusha
popa
aad
xchg
mov
rep
lcall
cwtl
imul
or
xstore-rng
cmpsl
movl
push
leave
cmp
mov
jb
push
out
mov
xlat
popa
push
xor
in
test
sub
enter
inc
repnz
adc
stc
and
add
outsb
jg
xor
push
mov
out
jge
loope
clc
gs
jmp
dec
lea
cmpsb
xchg
xchg
lods
and
push
fistpl
xor
sahf
mov
mov
in
mov
or
adc
lret
cld
test
ret
lret
add
cwtl
inc
lea
ds
sbb
jecxz
popf
stos
sti
sbb
leave
adc
add
imul
pop
xchg
mov
movsb
iret
jo
sbb
iret
test
and
pusha
insb
mov
aad
aas
jge
mov
hlt
xor
jae
ret
add
mov
xor
test
push
cmp
and
call
sub
xchg
jb
scas
js
testb
addr16
dec
sbb
mov
mov
xor
rorl
test
pop
bound
aaa
js
sbb
inc
out
cmp
das
pop
clc
inc
xlat
inc
xor
dec
xlat
jge
inc
cli
mov
push
xor
mov
and
add
push
aas
inc
xchg
les
or
out
push
loop
data16
sbb
clc
insb
int
mov
ret
xchg
sar
std
xchg
and
sbb
loopne
xor
aaa
jecxz
push
in
mov
popf
xchg
dec
lret
push
add
adc
movsl
sub
xchg
mov
enter
scas
adc
fidivl
roll
or
test
rcrb
shl
and
mov
xor
sub
insb
sbb
and
add
mov
fdivr
mov
dec
loope
add
mov
in
jbe
xor
jno
gs
fistl
or
fists
adcb
push
in
insb
xor
push
jle
ds
mov
fnstcw
in
push
hlt
jle
xor
notb
sbb
or
scas
cmpsl
lcall
fucomp
movsb
jbe
push
ja
filds
push
jmp
fdivl
dec
lret
fwait
xor
lahf
adcb
xor
or
jno
jl
jno
jae
and
and
mov
adc
jg
lret
xchg
stos
add
pop
lret
enter
dec
sbb
sub
aaa
dec
sarl
inc
outsl
pop
je
popa
sub
call
bound
cli
jl
dec
mov
roll
sbbl
add
xor
gs
and
xchg
enter
arpl
scas
xorb
iret
fistps
in
sti
in
sbb
push
test
leave
mov
jmp
xorb
xchg
xor
sbb
xchg
mov
mov
xchg
out
push
adc
pusha
bound
repz
inc
or
and
out
mov
in
adc
push
lcall
dec
je
out
and
mov
sbb
push
cs
mov
mov
mov
mov
or
dec
fcmovne
and
pop
xchg
bound
cmpsl
inc
and
add
and
mov
lret
dec
fiadds
addr16
ret
cltd
push
sbb
call
rolb
out
cld
popf
pop
xor
xchg
push
loopne
or
gs
pop
daa
out
cmp
outsl
sub
xlat
sbb
stc
adc
mov
adc
cwtl
jno
inc
sub
dec
inc
fdecstp
mov
cli
jp
cmp
es
bound
ljmp
sbb
test
dec
xor
inc
je
mov
stc
adc
ja
ret
or
sbb
push
jae
xchg
ja
and
testb
mov
jl
inc
aas
call
add
adc
xchg
insb
jae
pop
dec
sub
push
xchg
mov
jp
dec
mov
into
mov
in
gs
stc
mov
mov
aam
mov
add
and
lcall
sahf
jecxz
aaa
pop
mov
pop
outsl
jge
mov
rcpps
inc
data16
imul
mov
iret
sbb
subl
or
cmc
dec
aas
add
xchg
test
test
mov
mov
push
jbe
dec
aad
jb
adcl
movsb
pushl
cwtl
or
test
aam
xchg
mov
adc
mov
or
jne
es
iret
mov
push
adc
gs
mov
sbb
inc
add
and
xor
sbb
xor
outsl
cs
xor
das
mov
jmp
icebp
pushf
xchg
or
dec
dec
scas
push
std
sub
pop
jge
and
mov
subb
pop
sub
jle
cs
or
and
push
mov
ret
fiaddl
jecxz
add
push
in
repz
rcll
repz
xor
jge
negb
insb
mov
jno
xchg
cmp
jo
les
cmovb
sbb
jle
and
mov
daa
jl
sti
jo
jns
inc
or
loope
daa
push
and
int3
js
movsl
sbb
addl
movsb
jo,pn
cmp
sbb
add
mov
xor
adc
sarl
pop
xor
popa
ret
xor
pop
sbb
jmp
push
cmp
stc
or
les
or
xchg
sarb
loop
inc
xor
xchg
scas
jl
int
dec
pop
xlat
loope
jmp
ss
movsl
insb
cs
pop
sub
stos
out
pop
pop
mov
cmpsl
imul
pushf
ss
mov
xchg
xchg
cs
pop
arpl
lahf
popa
jae
mov
mov
aam
jnp
into
inc
and
push
testb
popf
mov
outsb
mov
stc
hlt
fbstp
push
sbbb
lock
es
dec
push
fidivs
insl
and
stc
les
jnp
js,pt
mov
dec
arpl
mov
pop
movsb
testl
lds
dec
das
into
rolb
mov
lods
mov
push
loopne
pushf
add
cld
mov
mov
outsb
aaa
mov
or
popf
cmpb
mov
and
bound
sub
fisubrl
pop
sbb
xchg
js
sub
mov
jl
mov
cltd
andb
loopne
push
push
jne
mov
xchg
and
sub
cmp
das
xchg
mov
xchg
hlt
cwtl
push
jecxz
orl
pop
cmc
pop
iret
out
sbb
movsb
xor
push
inc
add
test
pop
ja
out
mov
sbb
jle
hlt
or
rclb
cmpsb
imul
and
mov
mov
or
xchg
inc
lock
pop
mov
fists
stos
arpl
in
shrl
imul
sbb
rcrb
mov
outsl
xchg
popa
lret
dec
insl
xlat
xchg
inc
out
and
pop
hlt
adc
mov
mov
jecxz
xchg
jne
out
cmp
jno
lcall
or
pop
or
xor
dec
mov
je
pop
cmp
insl
pop
jl
es
cs
push
dec
pop
xor
or
and
ficomps
int3
xchg
test
rcrl
dec
ds
sub
xchg
cmp
cmc
mov
xchg
shrb
dec
xor
fnsave
mov
lods
icebp
sbb
fisubs
lds
jbe
loopne
xchg
push
out
test
stc
dec
outsb
adc
gs
aas
cmp
loop
mov
or
add
jmp
aam
mov
inc
popf
sarb
pop
sub
mov
lret
jo
cmpsb
aad
dec
mov
loope
les
sahf
sub
push
jns
es
clc
sti
in
sti
lods
cmp
adc
loop
adc
cmc
fistps
jne
jl
pop
psubq
xor
dec
mov
mov
mul
test
inc
insb
dec
push
push
outsl
movsl
cltd
pop
daa
bound
sbb
int
call
fidivs
leave
in
sub
xchg
rcrl
add
clc
mov
xor
xor
sti
ret
fcoml
std
lods
or
add
in
mov
mov
push
xor
push
dec
add
push
popf
sti
daa
fistl
sbb
mov
dec
test
xor
loope
push
inc
js
in
ret
jp
leave
mov
sbb
cmp
inc
femms
pop
rcrl
int3
mov
xchg
pop
mov
xor
inc
lock
sbb
and
stos
out
cmpsb
mov
mov
movsb
and
push
push
stc
mov
dec
jno
das
movsl
xchg
addr16
push
jo
stos
mov
addr16
jl
loop
movsb
push
push
aad
push
fsubr
pop
in
ss
in
testl
loop
push
jno
push
pop
mov
out
dec
mov
mov
push
shr
jg
and
pop
insl
dec
cwtl
mov
adc
dec
fldt
add
jg
push
out
push
loopne
mov
cli
inc
pop
jmp
push
and
ss
push
icebp
push
decl
mov
and
arpl
cmpsb
cmp
insl
mov
add
xor
inc
sbb
fstpt
sbb
movsl
lods
push
push
adc
pmuludq
iret
ret
call
fcmovb
mov
ja
lock
inc
lahf
aam
jmp
nop
xchg
push
mov
xor
fistpl
jp
push
imul
std
adc
mov
and
in
fbstp
add
nopl
mov
addb
pop
es
loopne
dec
jge
push
jae
mov
or
xlat
ret
fistpl
push
xlat
repnz
rorb
loopne
hlt
push
cltd
pop
scas
mov
and
test
scas
push
cmp
test
pop
pop
xchg
data16
mov
inc
adc
pop
lods
add
and
movsl
and
mov
and
pop
xchg
push
pop
cmpsb
in
mov
pushf
push
sub
pop
out
pop
cmp
push
repnz
in
cmp
lahf
xor
aad
add
aas
fnstsw
movsb
sub
sub
jno
inc
jg
push
jne
movsb
sub
cmp
mov
fisubrl
push
fidivl
outsl
fucomi
inc
adc
cmp
sub
in
lods
add
aas
xor
jb
cmp
jnp
sub
aaa
test
iret
jno
hlt
cmpsb
jge
call
inc
sbb
pop
pop
lea
dec
call
mov
push
xchg
inc
into
mov
xor
cmpsl
outsb
mov
inc
std
repnz
xchg
dec
pop
imull
js
sbb
andl
jbe
scas
jecxz
mov
mov
jne
mov
ret
sbb
cld
xchg
add
mov
and
cmp
das
es
adc
xor
daa
push
adc
fwait
dec
test
mov
icebp
mov
cli
xchg
ljmp
rolb
stos
jno
mov
pop
loopne
sub
mov
pusha
js
mov
mov
jmp
and
push
mov
mov
mov
inc
stos
mov
lds
xchg
sbb
xchg
pop
cmpsb
cmp
cmpb
addb
xchg
mov
test
popa
mov
loop
rcl
sub
jg
das
xchg
xor
mov
mov
jg
xchg
cmp
pusha
xchg
mov
mov
pop
mov
jge
cli
out
xor
jnp
pop
dec
push
out
pop
jne
inc
add
adc
test
dec
iret
leave
or
lcall
xchg
lods
dec
pop
in
mov
aam
ljmp
push
mov
add
sub
sbb
push
leave
add
pop
mov
mov
and
xchg
fildl
aaa
js
fdivr
adc
jns
xor
jp
cmp
call
imul
mov
andnps
data16
cmc
scas
leave
pop
xchg
cmp
sub
mov
cmp
sti
cmpsl
filds
and
adc
jno
push
jae
daa
mov
fs
in
sbb
test
mov
xor
jnp
mov
xor
in
jns
jbe
jbe
add
xchg
pop
ja
cli
bound
stos
inc
lcall
sbb
xor
test
add
imul
mov
out
test
pop
sub
data16
dec
pop
sbb
mov
xchg
in
xor
xchg
out
pop
f2xm1
dec
cld
fs
fistpl
ret
call
shrl
sub
mov
iret
imul
mov
or
shr
xchg
pop
jecxz
xchg
out
or
or
out
popa
arpl
and
mov
out
int3
into
pop
in
repz
test
scas
jmp
dec
xor
mov
push
xorb
adc
and
ds
stos
shl
pop
push
loopne
in
sub
push
sbb
pop
xchg
sub
test
mov
xchg
add
pop
push
in
stos
push
stos
call
aam
int3
mov
sub
mov
ds
xchg
addr16
cld
mov
xchg
loop
std
fs
stos
nop
movsl
dec
lcall
xor
out
push
shl
jae
in
xor
cmpsb
dec
sbb
pop
stos
push
jb
adcb
xchg
test
push
sbb
clc
xor
fwait
leave
imul
pusha
xchg
jl
mov
ret
in
fmull
outsl
loope
pop
jge
push
inc
jnp
inc
cli
sub
jp
filds
mov
lcall
push
test
stos
repnz
fcoml
imul
inc
push
inc
mov
pop
mov
icebp
les
lcall
shl
xchg
sbb
pop
jp
push
hlt
adc
shl
insb
das
adc
adc
test
arpl
scas
mov
lcall
lret
push
push
idivb
sar
imul
ficompl
push
movsl
sbb
xor
push
jecxz
movsl
pop
int
xor
filds
cmp
mov
scas
pop
and
testb
clc
push
and
lea
push
mov
pop
mov
push
pop
cmp
xchg
std
sub
es
cld
mov
push
cs
add
aaa
aaa
xor
in
cwtl
pop
sbb
cwtl
dec
fsubs
pop
adc
lods
and
std
mov
cltd
int
out
sub
push
jg
mov
sub
movsl
adc
aam
pop
xor
stc
push
aaa
cmp
xchg
cmc
sub
movsb
movsb
mov
arpl
jns
nop
inc
mov
imul
imul
mov
sbb
mov
imul
xchg
pop
pusha
push
shl
xor
jg
xchg
sbb
fwait
das
mov
sub
jle
sub
fbstp
sbb
mov
mov
in
cmc
lahf
push
nop
enter
mov
iret
pop
sub
push
fiaddl
xchg
adc
mov
outsb
xchg
add
and
mov
cmp
filds
adc
sub
fists
std
fdivr
dec
stos
pop
pop
xchg
scas
lds
adc
push
out
icebp
aad
addr16
push
subb
jo
lret
push
inc
or
xor
je
or
sbb
std
push
enter
testb
shll
roll
fcmovne
push
fs
lcall
loopne
lock
jbe
fidivrl
push
mov
fs
addl
out
adc
sbb
push
and
je
xchg
addr16
aas
aaa
mov
bound
cltd
cld
stos
mov
sbb
sub
mov
mov
and
addr16
pop
cmpsb
lock
dec
adc
ret
push
out
or
bound
sbb
push
lcall
mov
ds
push
jl
inc
cmp
roll
sbb
aad
and
jne
dec
cltd
jnp
mov
out
rorl
subl
call
outsl
push
mov
vmulsd
xchg
cltd
nop
and
les
nop
subl
insl
data16
out
shrb
orb
xor
imul
inc
ja
cwtl
int
scas
cmp
pop
sbb
cmp
xchg
xchg
fidivrl
outsb
loope
in
adc
adc
rol
mov
je
enter
movsl
push
dec
ret
aam
int
mov
push
jae
mov
mov
and
arpl
test
int
adc
jg
cmp
jae
les
xchg
push
jmp
xor
push
jb
cmc
aam
dec
lret
into
mov
aaa
pop
jae
or
js
adc
xor
pop
xchg
in
cmpsb
cwtl
jae,pn
fcmovne
bound
mov
sub
xchg
imul
adc
push
mov
lods
pop
nop
arpl
lret
adc
sbb
bound
sarb
xchg
jno
cld
jb
in
jno
mov
insb
out
and
movsl
aas
jae
shr
cmp
adc
mov
pop
aaa
mov
movsl
shlb
rorl
sub
or
push
sarl
ret
push
jecxz
adc
jae
push
push
lcallw
adc
xchg
sbb
fdivr
pop
cmpsl
or
loopne
hlt
mov
rcll
add
out
mov
or
ljmp
loope
dec
sbb
out
push
cwtl
shrb
jle
xchg
lret
stc
cld
inc
jle
mov
sub
scas
std
mov
push
xchg
call
mov
lods
sahf
add
mov
fdivs
mov
rcll
sub
insb
sbb
mov
ret
es
sub
mov
dec
aas
add
ret
movsl
jo
sub
jb
and
cld
sub
ss
dec
test
stos
xchg
push
mov
popa
lcall
int
arpl
xor
and
in
lock
xor
lea
xchg
fdiv
cmpsl
hlt
aad
data16
jmp
bound
loopne
outsb
subl
or
sub
sarl
sub
xchg
mov
stc
test
push
pop
repz
jmp
out
jecxz
add
fadds
dec
test
dec
fmul
mov
jne
in
inc
sub
pop
sbb
out
mov
sub
notl
push
cld
pop
and
sub
das
or
and
pop
imul
icebp
insl
call
lods
mov
sti
test
mov
js
jnp
jne
fstl
clc
outsl
jno
ja
in
jns
mov
push
fists
push
pop
loopne
or
xchg
test
int
sub
cmc
adc
sbb
push
push
inc
fnstsw
shll
cmp
add
aam
sub
in
stos
sbb
add
fs
mov
es
enter
and
out
pop
mov
or
call
inc
mov
cltd
mov
out
cmpsb
xchg
cmc
arpl
add
dec
and
mov
ret
xchg
arpl
out
jo
or
outsb
ja
test
out
int
xor
mov
test
sbb
imul
xchg
not
xlat
stos
aas
cmp
mov
sub
push
push
js
cmp
mov
or
cmp
adc
and
je
jbe
push
ja
or
push
sbb
insb
aam
and
mov
lds
fwait
inc
cld
stc
mov
loope
shufps
inc
adcl
sarl
out
fldenv
shl
pop
push
flds
insl
mov
popf
mov
fcompl
mov
loop
dec
jge
add
cmp
cmp
psubusw
xor
or
inc
les
jge
loope
sbb
jecxz
sahf
pop
js
mov
je
orl
pop
ret
jg
in
mov
mov
lret
shrb
xchg
pop
cmpsb
loop
out
loope
pop
test
loope
pop
int
sbb
sti
std
adc
sbb
pop
mov
lcall
loopne
inc
clc
pop
loop
xor
ss
dec
cmp
cmp
xchg
mov
xchg
lcall
ss
cmp
xor
xchg
dec
cmc
je
add
mull
ja
dec
add
js
dec
cmpsl
ret
push
std
pop
mov
cmc
jno
push
arpl
mov
ficoms
lea
mov
push
aas
int3
aad
out
inc
adc
dec
addl
lcall
pop
subb
adc
xchg
das
sub
push
cmc
cmp
cltd
out
fidivrl
in
pushl
sarl
frstor
subb
sti
cmpb
sub
out
hlt
xchg
mov
mov
xor
adc
jge
xchg
sbb
mov
imulb
pop
imul
loop
sbb
aam
inc
mov
add
das
aas
dec
xlat
jae
cmp
push
std
insb
mov
jns
loopne
mov
int3
bound
stc
push
je
popa
sahf
es
cltd
cmp
push
push
add
scas
add
sbb
js
inc
adc
lret
imul
sub
iret
stos
stc
pop
aad
loop
mov
add
mov
xor
insl
or
mov
pop
inc
push
dec
fsubrl
cmp
pop
add
out
repnz
divl
push
sub
clc
imul
adc
xor
mov
mov
ljmp
cwtl
repnz
sti
insl
pop
mov
pop
jge
pop
or
fisubrs
hlt
dec
push
add
cmp
jmp
push
test
movsl
pop
arpl
mov
inc
adc
xchg
lods
xchg
jno
push
lea
es
push
divl
roll
out
mov
cmp
mov
jp
xchg
cs
sub
mov
jno
ffreep
call
add
movsl
jecxz
mov
iret
lds
dec
outsb
dec
fdivs
mov
shl
int3
sti
roll
mov
xchg
fcom
lahf
xor
add
sub
mov
call
jno
and
loope
nopl
push
hlt
jg
sbb
loope
pop
lods
stos
adc
xor
in
stos
push
into
push
js
adc
bound
popa
dec
and
lahf
jo
fistps
icebp
faddl
cli
mov
loop
cli
jg
push
sbb
dec
cmp
fdivs
int3
out
jg
mov
xor
mov
mov
fidivl
pop
and
mov
inc
fwait
xlat
pop
cltd
pop
lcall
lret
xor
je
dec
xor
mov
adc
jns
call
pop
sbb
mov
inc
bound
dec
mov
inc
in
dec
mov
cltd
inc
push
lcall
push
lret
mov
jecxz
cmp
mov
xor
mov
sbb
cmp
imul
push
mov
test
jnp
enter
pushf
jmp
xlat
pop
das
adc
enter
pop
movsl
jmp
or
jle
lea
fcmovbe
pop
xchg
inc
xlat
mov
inc
xchg
cwtl
push
xchg
mov
aad
inc
fwait
push
cs
cmp
mov
lahf
jne
test
jne
adc
addr16
lret
fbstp
fcmovb
jp
sbb
out
fcoms
jae
dec
nop
and
mov
rcrb
dec
ljmp
dec
inc
or
jae
and
std
and
sbb
add
xor
movsl
test
inc
xchg
cvtdq2ps
sub
and
push
std
pop
push
push
lods
incl
cmp
aad
pop
icebp
idivb
jbe
out
jecxz
inc
mov
jg
add
movsb
cltd
orl
outsb
ljmp
dec
rorb
xchg
daa
sti
repnz
push
and
add
jns
cltd
cld
ljmp
pop
test
fsubrp
ffree
mov
sub
mov
gs
add
clc
or
mov
or
orb
je
aas
lock
shr
push
ja
loopne
bsr
in
mov
sub
dec
mov
sbb
outsl
out
addr16
inc
jnp
xchg
cmp
mov
inc
mov
cmc
jb
pop
aas
mov
pop
mov
enter
xchg
sub
add
add
xor
and
addr16
ds
pushf
imul
inc
mov
mov
jb
das
int3
jg
adc
lods
movsb
xor
pop
pusha
cltd
pushf
xor
or
jl
sub
cmp
ret
popf
inc
add
cmpl
mov
sahf
icebp
xchg
arpl
fldl
jne
sbb
or
jl
mov
test
test
add
push
or
or
jg
mov
mov
or
aaa
xchg
xchg
mov
pop
sub
leave
inc
jbe
shrb
js
es
cmpsb
dec
in
push
sbb
ds
int3
cltd
sarb
les
sub
mov
dec
sub
movsl
orl
fdivrl
sbb
gs
fcomps
pop
leave
and
fs
bound
iret
mov
js
fcompp
cmpsb
in
lcall
out
lcall
push
sub
loopne
ret
movsl
call
rcll
fnsave
add
mov
dec
aam
cmpsl
jmp
sub
push
xchg
stos
sub
or
imul
dec
sti
int
dec
addr16
in
popf
cmp
bound
aas
mov
push
rcrl
xor
andl
and
dec
jmp
out
add
mov
fwait
sub
iret
sub
shlb
mov
loopne
daa
xchg
jnp
jg
test
or
aam
test
aam
dec
adc
clc
lods
and
jno
ja,pt
jbe
lods
or
cld
pop
cli
inc
js
cmpb
push
pusha
push
and
push
fmull
movsl
and
data16
sub
pop
pop
xchg
lret
fdivrs
inc
mov
pop
push
ljmp
push
xor
cmp
inc
jp
push
push
fnsave
dec
sahf
mov
sbb
sbb
icebp
das
scas
shlb
mov
mov
repz
movsl
repz
sub
sahf
dec
push
lcall
mov
mov
out
mov
ja
adcb
xchg
mov
fmuls
out
jmp
in
mov
sub
mov
xchg
dec
into
jns
sbb
mov
incb
fcomip
cld
jle
add
pop
mov
xchg
lods
mov
xchg
jge
subb
mov
jcxz
repnz
mov
pop
or
fidivs
ror
sarb
xchg
or
cmp
pop
leave
into
pusha
mov
push
sub
jne
cmpsb
xlat
enter
xchg
jbe
repz
addb
lea
mov
pop
clc
loopne
js
inc
mov
sub
repz
rorb
movsl
enter
inc
push
imul
dec
scas
pop
sbb
out
and
rol
icebp
lea
jp
dec
inc
ret
stos
fimull
push
xor
testb
cs
jl
or
outsb
mov
jg
in
imul
mov
mov
clc
pop
or
les
ret
mov
inc
scas
add
iret
sti
jg
dec
pop
cmp
fdivrl
add
jne
lds
jmp
dec
dec
les
movsl
mov
and
inc
xchg
rcll
push
ljmp
sub
cmp
pusha
dec
and
mulb
jbe
adc
dec
std
or
and
adc
mov
jno
je
or
mov
or
sub
adc
or
mov
pop
leave
push
pop
scas
mov
xor
pop
iret
push
mov
out
xchg
into
and
sbb
js
xchg
mov
data16
cltd
mov
sub
add
jns
addl
mov
icebp
adc
daa
push
and
pop
je
cmpsb
sub
loope
adc
fisubrl
pop
push
insb
push
dec
mov
cmpsb
mov
push
push
mov
adc
push
fdivl
xor
call
mov
jmp
mov
movsl
jnp
add
xchg
outsb
pushf
mov
push
jge
nop
test
inc
jge
sti
cmpsl
rorl
or
push
shll
sub
or
imul
and
ds
loop
jl
lock
or
or
cwtl
and
rcr
sub
lods
xor
jb
push
test
in
or
adc
nop
shll
mov
shrw
xlat
dec
cli
xchg
cmp
mov
lea
negl
xchg
lock
out
scas
push
movsb
vpcmpeqd
sbb
push
shrl
cmp
xor
jbe
pop
mov
mov
test
push
fnstenv
lret
sahf
aas
loop
fstps
inc
adc
push
push
pop
fnstsw
insl
rolb
cmp
mov
push
pop
dec
xor
cli
inc
les
loope
mov
adc
mov
xchg
push
mov
aam
arpl
mov
mov
mov
and
inc
dec
cltd
inc
cmp
lret
jb
add
out
xor
xchg
fs
gs
inc
std
pop
addr16
incb
dec
inc
xchg
js,pn
sbb
hlt
inc
cmp
jnp
into
or
pop
push
and
imul
frstor
adc
or
adc
test
cmc
cmp
out
jp
aam
outsl
aad
aaa
mov
xchg
rcll
add
repz
lods
push
push
ds
xor
stos
xchg
dec
mov
jns
inc
js
shll
sub
adc
add
mov
cli
fs
mov
fwait
stc
jno
jns
outsl
jb
jno
cltd
dec
jo
testb
rclb
and
mov
pop
sub
xor
subl
and
xchg
mov
sbb
or
mov
pusha
sub
test
sahf
jge
mov
aas
push
divl
jne
mov
jg
aaa
insb
out
rolb
and
les
dec
fstps
add
mov
mov
jecxz
mov
ficoms
mov
push
jno
dec
js
lcall
inc
hlt
lcall
push
cs
mov
mov
pusha
lret
es
dec
push
cld
cmc
adc
cmp
ret
sbb
cs
imul
sub
mov
mov
adc
addr16
nop
or
pop
adc
ret
jge
jecxz
inc
mov
and
test
inc
xlat
dec
ljmp
xor
xchg
lea
push
add
xlat
xor
sti
or
fsts
dec
mov
dec
xchg
xlat
xor
subl
gs
xor
cli
ljmp
mov
out
xchg
xor
dec
lret
stos
jmp
xorb
xchg
mov
in
pop
rol
push
push
lods
jno
lods
mov
push
mov
sbb
xchg
xchg
sub
repz
mov
sub
push
cmp
and
int
in
outsl
je
repz
add
pop
sets
out
sti
movsl
push
cmpsb
das
mov
stos
mov
cli
je
pop
mov
mov
scas
cwtl
stc
push
lret
xor
sbb
sbb
aas
sbb
pop
test
sub
xor
sti
in
inc
mov
xor
mov
jle
ret
sbbb
stos
or
inc
push
testb
adc
lret
inc
out
test
stos
dec
sub
push
int3
jae
icebp
daa
cmp
out
push
int3
add
bswap
sbb
dec
adc
sahf
jbe
sub
jmp
and
mov
mov
test
inc
negl
loop
ficoml
cmp
in
mov
sub
leave
xchg
test
iret
push
inc
out
sub
add
notl
imul
jp
clc
jno
jae
dec
mov
cmp
das
jl
or
popa
jo
fidivrl
test
out
lods
aaa
dec
pop
sub
xor
in
add
pop
cmp
adc
pop
mov
mov
push
sub
adc
lods
je
mov
ss
mov
mov
inc
xchg
xor
scas
add
jnp
or
sub
out
pop
imul
test
pop
mov
mov
and
lods
loopne
mov
push
push
mov
mov
sub
aaa
shl
jl
rol
stos
mov
iret
sub
xchg
je
cmp
mov
sub
mov
andb
pop
lret
mov
pop
dec
shr
cmpsb
adc
mov
sbb
jo
push
pop
add
sbbb
fwait
mov
dec
push
inc
cltd
mov
call
inc
sub
imul
jle
jp
iret
loopne
push
mov
in
adc
inc
inc
flds
push
push
nop
out
xchg
arpl
out
into
add
ja
add
scas
dec
scas
pushf
movsb
in
outsl
mov
mov
push
pop
sub
ja
xchg
or
fstpl
sub
mov
xchg
sub
imul
insl
mov
sbb
add
lahf
xchg
jmp
sub
fsubp
out
mov
je
pop
scas
inc
pop
popf
icebp
mov
popa
outsb
lcall
sub
mov
in
mov
roll
mov
rcrl
pop
repz
insl
scas
lods
push
scas
pop
bound
sub
sbb
lods
insl
sub
xor
pop
push
jnp
aaa
or
sbb
es
rorb
xchg
sbb
cmp
bound
jmp
pushl
cmpl
and
enter
cmp
xor
xchg
sbb
stos
mov
in
and
int3
stos
or
mov
xor
push
dec
das
push
movsb
mov
repnz
xchg
pop
stos
mov
notb
fsub
xchg
dec
mov
pop
mov
cwtl
xor
cltd
pop
andb
inc
jge
push
mov
xchg
dec
mov
jecxz
mov
xor
rcrb
dec
cmp
stos
pop
push
bound
lods
mov
stos
push
stos
aam
fists
or
push
loopne
push
push
outsb
call
dec
mov
int3
jecxz
adc
bound
cmp
stos
xor
sahf
mov
popl
int
lcall
xchg
pop
mov
rcrl
mov
xor
shl
inc
mov
roll
mov
jne
push
adc
imul
pop
sbb
sbb
cmp
and
adc
lock
jmp
sub
fists
das
clc
pop
sbb
pop
add
fsub
inc
xlat
add
arpl
push
ret
js
dec
pushf
pop
push
les
scas
adc
pushf
rcr
cs
cmp
ljmp
lcall
lret
inc
out
mov
mov
sarl
xor
insl
lds
pop
jb
das
lret
adc
int
dec
mov
nop
insl
in
aad
scas
or
sbb
aas
push
js
mov
xchg
xor
lods
pushf
loopne
lret
jmp
dec
in
jl
shl
xor
test
data16
add
popa
inc
shl
adc
mov
in
and
hlt
jp
cmpsb
adc
pop
inc
pop
ss
stc
dec
pushl
pop
mov
dec
xchg
into
mov
popa
mov
out
sub
arpl
xchg
movsl
mov
dec
pop
das
imulb
jl
dec
jb
cmpsl
cmp
cltd
test
rclb
fistps
dec
mov
outsb
xor
arpl
cwtl
pusha
sub
cs
sarb
scas
pop
repnz
sbb
xchg
div
xor
mov
popa
roll
and
ret
cli
mov
lcall
add
push
sahf
pop
dec
mov
repz
pop
lea
mov
cs
xchg
pusha
outsl
sub
adc
mov
jmp
inc
xor
inc
flds
sub
out
jg
pusha
cmpsl
mov
jmp
bound
test
stos
pop
cld
int3
push
sbb
push
mov
mov
icebp
sbb
mov
mov
dec
rcrl
ret
ret
push
dec
not
mov
xor
js
pop
mov
lea
cmp
cmpsb
jp
js
or
jno
lahf
push
call
lahf
pop
inc
adc
xchg
pop
ret
cmp
jg
push
sub
adc
adc
mov
jmp
mov
js
je
inc
push
dec
push
fldenv
mov
and
xor
or
cld
mov
jnp
pop
cmp
or
sahf
pop
mov
fisubrl
inc
push
adc
mov
rorl
popf
das
lea
xchg
inc
sub
mov
addb
inc
cmpsb
mov
lcall
aam
loopne
jo
xchg
ljmp
fcompl
mov
push
mov
adc
mov
stc
fisubs
adc
cli
sbb
jb
mov
mov
call
add
popf
fwait
into
inc
xchg
imul
dec
rorb
aas
mov
cltd
sub
lret
insl
aad
add
mov
jp
jns
push
insb
mov
cmp
adc
repnz
xchg
push
loope
imul
mov
adc
adc
data16
jbe
xor
jno
jl
out
adc
lret
sbb
out
cmp
pushf
and
push
push
push
ss
in
outsb
icebp
movsl
inc
xchg
mulb
in
cli
insb
cld
ja
je
movzbl
sub
leave
in
mov
xor
jbe
fsubrl
mov
lcall
sub
pop
and
push
or
jae
adc
into
mov
in
mov
xchg
dec
push
das
or
ret
fidivs
int
push
in
sbb
lea
cmpsl
adc
mov
mov
mov
popf
nop
ljmp
sti
inc
pop
pop
sub
cmp
adc
fisttpll
dec
xor
lods
rorl
sub
mov
gs
dec
ficoml
and
or
mov
sbb
cli
xchg
lock
cs
cmpsb
fcompl
push
jmp
cmp
shr
dec
aam
and
in
rol
daa
xchg
sub
mov
not
mov
stc
cmpsl
fdivrs
push
sub
pusha
mov
scas
inc
push
mov
mov
pop
mov
mov
push
cmpsl
mov
or
sub
js
adc
scas
ret
pop
stos
xor
xor
pop
lcall
ss
mov
loopne
cmpsl
xchg
out
shll
faddl
and
fstps
sahf
mov
gs
lcall
xor
mov
jb
pop
in
or
nop
jnp
jl
icebp
mov
fistpl
xchg
or
in
out
pmaxsw
or
cmp
in
lock
ds
sub
ret
repnz
add
cmpxchg
add
cs
fisubl
dec
push
inc
jne
cld
mov
mov
mov
aad
leave
aas
pop
xchg
mov
ds
icebp
inc
adc
jmp
xorl
rorb
cmp
pop
adc
repz
rorb
cld
hlt
in
stos
push
lahf
xor
jae
dec
inc
aas
lret
sbb
or
pop
and
and
in
mov
xor
js
mov
mov
icebp
pop
xchg
jae
lcall
iret
dec
cwtl
das
inc
fwait
test
sub
inc
sub
bound
addr16
lds
push
push
or
jg
clc
dec
int
nop
or
or
inc
xchg
add
mov
and
mov
xchg
popa
add
jecxz
adc
outsl
cmpsb
loopne
push
clc
jl
outsb
in
push
in
jo
das
scas
daa
hlt
and
es
sar
insb
pop
mov
pop
pop
out
fstp
and
dec
mov
dec
push
sub
mov
sbb
sbb
lods
pop
mov
mov
push
sbb
adc
clc
jne
call
pushf
adc
stc
dec
mov
pop
loop
std
pop
fstpl
lods
ss
cltd
mov
add
dec
fldt
dec
inc
adcb
out
or
xchg
dec
call
mov
sub
cmp
or
ret
cmpsl
sub
mov
stos
imul
inc
adc
or
mov
aas
jle
scas
dec
imul
movsb
jge
xor
mov
inc
xchg
out
push
call
adc
xchg
sbb
mov
jecxz
insl
xchg
pop
add
xor
xchg
hlt
xor
adc
xchg
jle
call
cmpsl
pop
xchg
aas
and
insb
negl
push
fists
popa
jp
mov
movsb
sbb
jle
mov
sahf
inc
push
mov
xlat
test
pop
mov
dec
in
lock
jbe
and
je
mov
loope
xchg
stc
pop
lds
repz
push
enter
sub
arpl
and
adc
mov
pushf
dec
gs
sub
shr
je
inc
mov
cwtl
dec
push
inc
push
js
mov
adc
in
push
xchg
mov
daa
mov
gs
int
pop
mov
pop
adc
xor
dec
mov
subb
shll
faddl
pop
xor
arpl
shl
push
cs
push
adc
outsb
psubd
jecxz
sahf
lods
scas
sti
jmp
adc
xor
dec
shrb
lods
gs
dec
xor
mov
push
scas
call
push
jno
test
jnp
test
fwait
popf
cmp
popf
imul
pop
cld
cmp
mov
ja
dec
ret
add
mov
mov
movsb
fnstsw
mov
out
cmp
or
in
ss
movsl
decl
mov
test
dec
cmp
push
test
pop
loop
sbb
subb
jne
test
cmp
shr
lret
xchg
stos
addl
jb
in
imul
mov
and
cmp
xor
jecxz
dec
pop
in
push
or
mov
cmp
pop
fildll
fdivl
dec
cmp
leave
lea
jecxz
jp
xor
and
mov
jne
mov
jmp
mov
fnstenv
pop
cs
pop
pop
pop
push
dec
pop
cltd
shll
inc
or
lcall
adc
stc
mov
pop
fldcw
iret
jae
popa
adc
andb
jg
rorl
lods
mov
push
imul
dec
pop
dec
inc
dec
std
mov
jecxz
repnz
mov
popf
ljmp
and
dec
and
xchg
mov
xchg
sbb
xchg
adc
and
dec
outsb
imul
imul
je
pop
pusha
jecxz
sbb
loope
scas
mov
xchg
stos
aam
fmul
in
add
mov
or
pop
cli
push
test
pop
push
add
push
aas
lcall
negl
aaa
mov
mov
sti
adc
fdivl
mov
inc
sti
ljmp
sbb
jo
adc
outsb
dec
lidtl
in
mov
or
mov
test
sbb
repnz
out
mov
stos
int
xlat
mov
mov
or
jae
popa
popf
or
mov
sbb
out
movsl
js
inc
ljmp
clc
and
fdivrs
adc
ficompl
mov
or
sbb
cmp
push
enter
xor
and
rcll
rclb
rolb
sbb
push
test
cmp
mov
cmp
negl
jmp
out
fcomi
mov
subl
popa
and
jno
inc
xor
loopne
xor
das
inc
pop
out
mov
icebp
xor
movsl
addr16
xor
dec
dec
js
ret
cmc
ljmp
and
shl
xor
scas
gs
ret
cmc
lahf
out
sub
lahf
cmp
pop
mov
repz
dec
xchg
push
lods
mov
out
add
ja
std
push
lds
ja
lea
add
dec
xor
adcb
xor
add
xchg
mov
out
daa
ljmp
das
add
addl
and
jns
addb
adc
loope
rcl
mov
lcall
outsb
sub
pop
push
pop
xchg
popf
cmpsb
jns
mov
lds
push
imul
sahf
in
mov
rolb
iret
mov
jl
cmpsl
imulb
fbstp
in
pop
inc
int3
mov
fwait
xor
outsl
jg
sbb
mov
int3
mov
cmp
mov
aas
jo
push
xchg
xchg
push
lret
push
add
mov
adc
es
shlb
addr16
imul
ja
cmpsl
push
mov
gs
mov
dec
cmp
jg
repnz
or
add
bound
pusha
push
and
loope
fidivrl
jne
into
sub
lcall
jp
lds
sub
sub
xor
and
xchg
xor
call
mov
bound
xchg
hlt
movsl
push
dec
mov
std
test
jb
sbb
scas
push
cmpsb
push
bswap
cld
jp
pop
push
orb
loop
mov
jno
jp
pop
or
clc
inc
sub
xchg
add
out
lods
cmc
mov
mov
iret
sbb
dec
xchg
mov
out
insl
push
xchg
push
aam
jno
sahf
cmc
sbb
frstpm(287
pop
sahf
hlt
jmp
cmp
push
pop
scas
inc
and
dec
xor
maskmovq
loop
push
imul
rcrb
jg
cwtl
stc
xchg
test
mov
scas
enter
adc
lock
movsl
mov
mov
scas
add
and
mov
bound
jp
sub
xchg
and
rcr
mov
bound
daa
mull
lret
out
dec
mov
adc
inc
insl
jmp
out
fisttpl
jecxz
movsl
jp
push
out
outsl
lret
ss
jmp
cmpsb
cli
sub
call
int
fs
lock
sbb
shl
aam
clc
into
pop
test
lret
pop
inc
xchg
push
xorl
fisubl
leave
mov
loopne
push
cmp
stos
popa
jnp
clc
adc
sbb
rcl
sbb
mov
bnd
test
xchg
ret
jae
inc
out
or
rcr
int
int
out
fstl
stos
sbb
sub
rorl
imul
mov
sti
add
ss
pop
loope
loope
sbb
push
fwait
sbb
ja
inc
icebp
inc
add
jns
into
adc
movsl
cmp
clc
inc
test
sub
shll
mov
dec
mov
js
std
pop
rorb
outsb
hlt
inc
sbb
mov
mov
mov
enter
adc
scas
int
bound
pop
imul
popf
push
push
gs
cmc
fdivrp
jecxz
mov
int
sub
cmpsl
clc
test
gs
cwtl
dec
xchg
pop
loopne
dec
add
lock
out
xchg
pop
daa
sub
clc
jl
xchg
dec
cmp
mov
mov
out
cwtl
mov
push
mov
inc
cli
popa
xchg
push
mov
xchg
fimuls
movsb
pop
jmp
hlt
nop
jp
pop
mov
out
enter
pop
add
mov
xor
cmpsb
lcall
jbe
ljmp
xchg
lods
dec
push
jae
aad
cmp
pop
in
sub
xor
jne
aam
js
sub
pop
insl
jge
mov
pop
pop
and
push
movsb
jo
mov
or
loopne
mov
rcrb
mov
sub
push
inc
sub
xor
mov
in
xor
sbb
lret
adc
imul
mov
dec
in
or
imul
sbb
sub
lods
inc
outsl
sub
rol
sbb
outsl
xchg
mov
rcll
inc
rcrb
incb
lret
inc
sbb
mov
pushf
aaa
jmp
testb
lea
daa
cmpl
mov
cmpsb
lea
pop
sbbl
pop
push
ror
pop
and
mov
mov
subl
inc
mov
arpl
adc
xor
push
jbe
jbe
dec
mov
lcall
jle
lods
mul
jl
mov
xchg
xchg
cli
movsl
push
cmp
or
mov
mov
jnp
leave
push
mov
inc
push
arpl
cmp
jb
inc
pop
fisubrl
sbb
inc
idivb
jmp
ret
ja
stos
aam
mov
sbb
mov
mov
mov
cmc
xor
sub
cmp
ret
std
push
in
or
push
mov
jmp
jno
out
sub
push
mov
call
xchg
sub
mov
mov
mov
mov
dec
dec
jns
in
daa
in
es
mov
call
lods
xor
sbb
cmp
inc
cld
pop
movsl
add
sub
imul
pop
int3
jnp
cld
sub
hlt
xchg
ja
cltd
pushf
cs
sbb
mov
cmp
dec
push
mov
fdiv
xchg
sti
adcl
mov
stc
xchg
xor
stos
dec
mov
dec
jmp
push
and
inc
pop
stos
xchg
popa
add
push
fstl
mov
mov
inc
jg
lret
cmp
lock
fwait
call
jb
inc
dec
sub
mov
cli
fwait
mov
sub
arpl
jge
mov
dec
test
ja
xor
xchg
pop
pusha
mov
test
gs
icebp
insl
negl
rcrb
outsb
divb
dec
xchg
mov
loop
test
outsl
imul
sbb
in
or
out
insl
roll
mov
or
fldl
sysret
fcmovnu
pop
mov
aaa
fiaddl
scas
and
mulb
push
inc
daa
mov
out
imul
jns
mov
into
subl
push
push
aad
xchg
enter
ljmp
loop
mov
push
hlt
pop
das
xor
and
jle
lahf
jle
clc
test
cld
sti
and
mov
repz
sub
fnstenvs
out
addb
gs
paddw
cmc
and
sub
jno
popa
push
rcrb
sbb
ja
mov
cli
test
imul
test
cli
insb
out
lods
add
inc
rcr
jo
pop
test
pop
sbb
and
pushf
ljmp
test
ret
aaa
mov
jp
push
jo
loope
inc
mov
rcrb
ss
jb
mov
xor
mov
pop
sub
or
push
or
loop
and
fldcw
jg
add
inc
pop
inc
mov
cmp
adc
cmpsb
cwtl
lcall
xor
movsl
mov
mov
push
adc
addb
mov
leave
push
push
or
cwtl
mov
popa
mov
pop
out
pop
scas
mov
idivb
mov
and
mov
repnz
lret
js
es
dec
insb
aam
pop
jle
cli
dec
or
pushf
fistl
cmp
dec
xchg
mov
roll
mov
xchg
fs
jmp
sbb
gs
inc
mov
or
fdivl
sahf
in
mov
sbb
mov
adc
mov
cmp
leave
cltd
call
cmp
imul
xor
jmp
imul
and
sahf
sti
pop
mov
lods
jle
and
imul
and
and
scas
imul
inc
jecxz
lcall
sti
pusha
pop
push
arpl
shr
or
in
stos
pop
add
add
or
dec
mov
mov
mov
adc
imul
inc
jmp
test
or
fldcw
mov
inc
sub
cmpsl
jbe
addl
ds
sti
sahf
daa
fcompp
movsl
lcall
fsubrl
ljmp
clc
scas
mov
jmp
xchg
sub
lret
test
xor
adc
arpl
inc
push
dec
arpl
fwait
enter
dec
mov
and
mov
xor
rorl
je
ja
cmc
mov
jg
jae
jbe
cmp
pop
rol
xchg
sub
pop
jne
fiadds
mov
inc
or
aaa
test
add
int
ds
push
aam
lods
pop
lret
lahf
inc
mov
mov
orb
rolb
mov
stos
pop
inc
arpl
xchg
icebp
jg
xor
in
add
xorl
imul
test
into
push
sbb
shll
adc
mov
pop
aad
cmpsl
mov
lahf
stos
or
or
dec
ds
and
dec
std
xchg
jo
es
cmpsl
mov
sti
sub
or
test
jno
sub
push
jns
and
sbb
dec
push
insl
es
xchg
xor
jae
fwait
in
and
lds
mov
mov
jne
mov
in
xchg
testl
mov
dec
mov
push
cmpsb
push
add
adc
dec
or
lcall
add
jo
cmp
cltd
out
sbb
insl
mov
or
xchg
ret
jo
push
decb
mov
inc
cmp
mov
push
mov
std
xchg
jnp
adc
in
out
dec
test
xchg
and
push
mov
pop
jbe
dec
ret
daa
es
sub
loop
andb
add
lods
xor
mov
sahf
cmp
sbb
popf
pop
clc
test
cli
rcl
outsl
cmp
adc
push
sbb
insb
add
cltd
dec
mov
add
or
pop
pop
incl
and
and
insl
adc
loope
adc
iret
add
inc
mov
and
jmp
mov
ss
jbe
jl
and
in
jo
push
inc
pop
pusha
and
jmp
adc
cmp
pop
mov
fldenv
dec
cld
or
rolb
inc
mov
mov
push
in
test
jecxz
sub
adc
pop
sbbl
xor
fwait
jl
jbe
mov
jne
pop
cltd
pop
ds
ret
insl
pop
lock
push
mov
pop
nop
data16
or
push
cwtl
cmc
lock
lret
mov
test
movsb
xchg
cmp
aam
addr16
jae
jge
jnp
cmc
shlb
negb
scas
xchg
jg
fsts
cmpsl
iret
inc
dec
pop
push
jp
push
lea
cmp
pop
pop
dec
inc
xchg
mov
ret
push
gs
push
in
mov
push
cmp
pop
xchg
jl
adc
into
ror
jmp
js
les
ret
adc
jno
insl
mov
sbb
shl
movsb
and
inc
hlt
dec
int3
mov
jnp
xchg
pop
insl
lea
sahf
lret
dec
shrb
movsb
jo
push
jnp
or
or
cmp
mov
loopne
fmul
test
mov
sbb
jl
pop
jle
sub
sub
push
repnz
xor
hlt
fsubrs
lods
mov
adc
scas
adc
inc
movsb
scas
or
inc
xchg
in
sarb
jge
out
adc
fsubs
cmp
jmp
jle
aas
insb
bnd
lcall
outsb
push
jns
push
repz
jno
aas
push
int3
push
movsb
rorb
cwtl
cmp
dec
lahf
sbb
xor
orb
sti
call
mov
mov
push
jecxz
cmc
xchg
cmpsl
jmp
test
xor
add
pop
xor
shl
and
mov
sarl
inc
dec
sbb
repnz
out
nop
lds
mov
and
mov
adc
sti
and
push
pop
mov
cmpsl
mov
stc
shrb
in
jge
inc
add
sbb
pusha
xor
inc
push
xchg
clc
shll
sub
in
mov
icebp
in
loopne
hlt
inc
adc
jge
or
adc
sbb
es
rcrb
movsl
mov
out
aad
dec
lahf
repnz
test
popf
divl
pop
cmp
insb
ds
lock
push
xchg
mov
fdivr
cmpsl
fiadds
xor
rcrl
out
pop
push
cmp
pushf
add
and
aaa
sub
sub
cmpsb
sbb
stos
js
shl
clc
in
loope
mov
and
mov
mov
les
js
lcall
sub
iret
punpckhdq
lret
dec
pop
jle
xor
adc
xor
inc
lea
push
sahf
dec
mov
int3
and
sub
stos
cmp
push
pop
test
mov
jg
in
scas
jmp
sbb
or
push
jl
fstpl
lds
mov
cmp
std
fidivrl
out
fisttpll
xchg
leave
inc
adc
lock
xor
loopne
pop
das
push
pop
inc
mov
setae
fsubrs
imul
lock
sti
sub
push
ljmp
cmp
xchg
jns
repz
sti
xchg
pop
mov
add
aas
ss
mov
les
test
test
adcl
in
inc
out
out
and
negl
flds
lods
fdiv
mov
pop
testl
stos
cmp
outsb
sbb
and
enter
mov
cli
daa
sbb
lahf
fidivrs
subb
iret
and
shrl
addr16
mov
or
pop
ja
adc
pop
add
mov
rorl
sub
mov
push
inc
fisubrl
mov
jnp
adc
repnz
pushf
and
ja
or
out
jle
or
push
dec
shll
pop
sub
mov
push
jne
and
int
xlat
sbb
daa
lds
adc
ret
or
xchg
sahf
jo
in
sbb
sub
mov
push
sbb
cmc
add
mov
data16
fmuls
into
adc
cwtl
sar
sub
xchg
lret
mov
push
jo
mov
jno
jge
test
push
pusha
xchg
daa
jmp
mov
je
xlat
push
push
pop
inc
sahf
lds
mov
ljmp
mov
jo
mov
jg
push
or
pop
or
cs
lods
int
ret
xchg
jp
loopne
mov
and
loop
ficompl
mov
cmp
fdivr
and
push
in
daa
cld
scas
pop
xor
xchg
sahf
out
xchg
sbb
nop
cmp
lahf
sahf
xor
mov
or
mov
pusha
adc
ds
loopne
and
jmp
xchg
mov
dec
lcall
push
outsb
pop
pop
pop
xor
mov
es
cmp
or
std
add
leave
add
push
xchg
fadd
fs
je
and
movsb
dec
xchg
lret
cmp
or
or
fdivrp
iret
fs
push
xchg
cmp
push
push
dec
ja
jl
mov
pop
lds
addr16
xor
shl
xor
add
mov
rcrb
out
loope
outsl
mov
sub
cmpsb
mov
adc
cld
shlb
loope
aad
mov
nop
push
add
xchg
dec
test
mov
mov
stos
sbb
loop
mov
clc
adc
cmp
cmp
pop
and
xor
mov
push
add
popa
rclb
jmp
fisttpll
cltd
cmp
pop
cltd
mov
stos
cmp
fbstp
lds
mov
xorl
fldenv
loope
cmc
push
inc
int
movsb
sti
inc
test
cli
sub
push
mov
push
filds
push
pushf
xlat
cs
jae
cld
cld
mov
testb
fdivp
jl
movsb
sub
aas
add
fwait
mov
inc
xchg
push
inc
dec
sub
push
addl
xchg
das
dec
mov
js
cmp
arpl
and
gs
jae
out
inc
inc
sub
sbb
int
jns
shll
pop
add
or
pop
js
push
sub
stos
mov
pop
shr
mov
ljmp
movsb
sbb
cmpsb
repnz
jo
inc
or
mov
loop
ret
fxch
mov
lock
push
ffree
in
cmpsl
inc
mov
popf
rorb
sub
adc
shl
ds
subl
neg
js
ja
adc
mov
pop
fs
inc
jle
mov
push
js
pop
xor
xchg
ljmp
push
shrb
push
dec
rol
test
mov
inc
mov
pop
fwait
out
sbb
adc
fistpll
xchg
out
add
add
ss
lret
popf
stc
mov
mov
cmpsb
xor
cmp
ficomps
or
pop
mov
lret
mov
mov
inc
pop
scas
push
adc
pusha
rsqrtps
mov
push
jns
mov
pop
insl
xor
iret
sbb
bound
add
fnstenv
fldenv
lds
jb
adc
pusha
inc
cmp
mov
jns
pop
xlat
sub
into
imul
push
or
cmpsl
sbb
cmpsb
shrb
adc
dec
aas
dec
andb
or
push
arpl
int3
dec
scas
mov
lret
lds
sub
push
fcoms
cltd
sti
test
adc
adc
and
sub
xor
adc
dec
inc
imul
adc
ret
or
dec
pmovmskb
out
push
xorb
pop
lea
sar
shlb
xchg
repnz
orb
cmp
cmp
jl
dec
adc
iret
xor
jnp
lret
sbb
dec
pushf
repz
lea
inc
xchg
cmpsb
aam
ret
outsb
adcb
inc
sub
imul
jbe
std
movsl
in
scas
loopne
pop
jbe
lahf
dec
movhps
lock
pop
out
pop
xor
xchg
cmc
jecxz
xorb
outsl
fldt
movsl
jne
or
js
mov
mov
xor
push
or
push
pusha
ret
push
pop
adc
out
xor
fstpl
loop
pusha
mov
lods
sahf
dec
jne
dec
ret
es
dec
mov
sahf
jmp
je
imul
stos
or
push
or
or
shlb
in
mov
add
nop
mov
loop
xchg
jl
adc
jnp
scas
mov
cmp
adc
jb
lock
add
gs
icebp
adc
or
xchg
ds
dec
rorl
xchg
push
mov
push
in
rcrl
jl
mov
xchg
fistpl
dec
aam
mov
inc
out
dec
cld
in
dec
xchg
push
and
dec
pop
sahf
dec
mov
es
jmp
and
shll
fisubs
in
scas
pop
leave
inc
jb
xchg
jno
mov
push
repnz
xchg
js
subl
rolb
xor
and
sub
cwtl
cmc
repnz
dec
dec
cmpsl
push
adc
and
xlat
adc
and
add
fcomps
rcll
movsb
hlt
stc
mov
scas
pop
cld
xchg
or
pop
inc
test
fwait
popa
insb
es
xchg
push
stos
cmpsb
or
cmp
pop
xlat
repz
cmpsl
fidivrs
enter
adcb
sbb
sub
sbb
mov
jb
cld
rolb
sbb
cwtl
ds
hlt
rcrb
inc
cmpb
clc
jbe
cmp
jne
cmpsl
jnp
add
lcall
shlb
fsubrp
jo
test
mov
rcrb
in
push
adc
sbb
dec
push
adc
sub
shll
int3
pop
mov
jno
lahf
int3
pop
jns
loop
mov
imul
test
sub
pop
xor
xor
push
movsb
lea
mov
adcl
push
pop
pop
dec
out
pop
insb
jno
fwait
or
cli
fwait
sub
popf
filds
mov
push
cmc
iret
cmp
push
ja
add
stos
jbe
jno
push
gs
loopne
int
idivl
jns
idivb
or
mov
pop
pop
inc
dec
mov
jmp
call
imulb
ja
sbb
xchg
out
int3
xchg
subl
jl
popf
xor
and
ds
lock
xchg
cmp
in
or
mov
pusha
daa
xchg
hlt
jge
dec
sbb
gs
push
repnz
icebp
mov
cmp
jmp
mov
adc
leave
leave
lods
inc
sbb
inc
dec
sbb
cmp
xchg
ds
sub
mull
push
test
enter
scas
pop
pop
mov
fisttps
mov
push
notl
loop
xor
in
clc
jb
sahf
shl
xchg
inc
stc
inc
mov
dec
stos
cs
inc
pop
push
es
mov
cmpsl
negb
mov
push
cmc
roll
scas
push
jb
lods
mov
fnsave
mov
cmpsl
bound
xchg
mov
test
xor
push
adc
push
iret
adc
mov
jne
jo
sbb
xor
mov
and
pop
dec
mov
xchg
mov
pop
ret
imul
fldl
cli
sti
inc
dec
ficoml
pop
cmp
fnstenv
mov
and
pushf
mov
add
cmp
sbb
lods
ret
addr16
jp
jne
arpl
and
stos
jbe
mov
sti
fdivrs
adc
or
xor
inc
and
inc
pop
cs
repz
lods
jae
icebp
pop
dec
pop
mov
aas
adc
and
mov
pusha
push
push
xor
notrack
ljmp
xchg
lods
xor
or
fidivs
pop
pop
scas
jb
add
xchg
mov
jmp
xchg
lret
gs
icebp
decl
sub
shll
stos
cmp
pop
je
xor
cmp
dec
sbb
and
xchg
mov
dec
xor
lret
or
adc
into
enter
mov
scas
mov
ds
sub
pop
test
cmp
and
into
loope
lahf
inc
into
fstpl
packssdw
je
in
inc
gs
dec
dec
nop
xor
dec
inc
mov
mov
bound
fadds
or
repz
push
in
mov
jge
enter
pop
xchg
adc
adc
fidivs
fildll
outsl
fnstcw
sub
inc
pop
dec
mov
or
imul
out
pushf
decl
movsb
in
in
add
mov
test
pusha
es
mov
cwtl
sbb
sub
push
mov
jp
andb
dec
lea
xchg
jp
mov
popf
inc
jae
mov
pop
dec
sub
repz
adc
in
or
imul
xchg
iret
sbb
pop
rclb
or
cmp
pop
pop
xor
xchg
adc
je
xchg
orb
movsl
in
mull
mov
cltd
shll
push
cmp
iret
push
push
mov
filds
hlt
mov
loopne
es
adc
xor
mov
popf
je
out
repnz
xchg
es
inc
sub
push
ret
jnp
jecxz
repz
mov
dec
int3
push
push
shl
push
pop
int3
cmpsb
xchg
xor
mov
aaa
loopne
mov
jge
test
aas
and
rol
or
mov
scas
and
aam
lds
pushf
out
repz
nop/reserved
in
xchg
ljmp
popa
adc
lahf
mov
cwtl
mov
sub
cmc
insl
jg
subb
fcoml
out
int
push
jno
adc
iret
dec
dec
stos
lret
pop
test
js
jle
movsl
lock
loopne
out
jp
xchg
lods
xor
pushf
add
and
sbb
js
push
cmp
pop
lcall
sub
cmp
ljmp
rcrb
insl
movsl
jb
aas
dec
jne
dec
add
add
hlt
push
push
sbb
cmp
lcall
jns
gs
scas
jp
xor
cld
or
fisubrl
cmp
sub
pop
xchg
push
into
mov
and
stc
sbb
pop
lret
add
or
jge
int3
arpl
mov
sub
mov
and
pop
popf
fcmovnbe
aam
out
sub
daa
pop
or
popf
inc
insl
ret
jle
ds
sahf
inc
push
hlt
jge
fcoml
or
xchg
addb
mov
adcb
pop
or
jae
jecxz
and
inc
movsb
je
pop
and
dec
inc
nop
ljmp
jo
stos
push
aad
inc
mov
aam
jo
cs
aas
cltd
lods
push
es
dec
rcr
push
cwtl
mov
mov
inc
and
lahf
inc
jne
adc
sub
imul
hlt
iret
push
cmp
mov
xchg
mov
add
clc
and
add
jle
loope
mov
ret
push
in
push
mov
push
cmp
ds
cmp
cmp
sbb
clc
or
rcl
jp
xchg
leave
fsubl
fimull
repz
scas
jns
mov
xchg
or
lret
sub
xor
push
adc
nop
or
aaa
mov
mov
jg
in
test
outsb
bound
shrl
or
inc
lret
je
pop
outsb
idivl
arpl
inc
outsl
pop
lret
push
test
jmp
pop
mov
leave
sbb
mov
sbbb
lret
push
in
subb
pushf
mov
xchg
jg
int
xchg
inc
icebp
aas
aas
sub
loop
test
dec
testb
cmpsl
movsl
inc
cmpsl
push
add
andb
adcl
ret
mov
divl
mov
sbb
mov
cmp
xchg
push
or
aad
push
loopne
and
pop
sub
push
hlt
outsb
addl
lahf
leave
repz
popf
fcomip
jae
cmpsb
loope
push
sbb
xchg
sub
adc
sub
jle
addb
jmp
dec
xor
aam
shl
into
or
movsl
and
test
and
xchg
add
in
incb
mov
push
les
mov
mov
dec
js
cmp
mov
addb
pop
test
sub
idivl
scas
pop
or
cli
fldenv
test
mov
xor
inc
icebp
jg
out
jns
lret
lcall
mov
es
pop
call
inc
push
mov
sbb
jb
popf
stos
fwait
sarb
mov
sbb
mov
add
dec
dec
imul
fisubrl
mov
add
pop
xor
sub
cwtl
scas
xchg
xor
filds
dec
mov
pop
cli
imul
xchg
leave
outsb
in
movb
add
aam
and
add
push
popa
mov
inc
push
movsl
inc
jp
sbb
insl
dec
push
pop
fistps
cmp
xlat
pop
sbb
scas
lea
scas
lods
roll
push
cmc
into
test
lock
mov
test
sbb
push
jnp
pop
cmp
cmpsb
sarb
jmp
mov
mov
adc
gs
xor
xor
mov
sbb
ss
in
cmp
mov
out
pop
push
int3
or
lahf
jo
jmp
xchg
icebp
jno
sbb
gs
inc
xorb
stos
call
adc
lahf
enter
dec
mov
clc
and
or
daa
dec
push
push
bound
adc
rcll
xchg
xchg
lea
mov
inc
pop
inc
mov
movsb
xchg
mov
xor
pop
mov
add
lods
rol
sub
popf
leave
cs
aad
sti
rcll
mov
lahf
xorl
aad
stos
sti
stos
pop
inc
ja
shlb
sub
fstps
xchg
xor
cmp
add
rclb
jp
adc
stos
repnz
mov
adc
ret
pusha
leave
lods
mov
popf
in
jb
mov
jecxz
mov
fbld
add
popf
repz
lods
sahf
jl
addr16
xor
lods
dec
leave
adc
mov
lret
bound
subl
inc
sub
test
lret
push
lock
stos
sub
shufps
mov
outsl
subb
ja
movsl
movsb
mov
inc
repz
adc
pop
xor
xchg
fstcw
add
mov
and
inc
pop
scas
jns
into
adc
or
jns
in
stos
push
mulb
jge
sbbb
jmp
pusha
lds
or
and
gs
or
mov
jmp
scas
lea
inc
adc
hlt
dec
vmread
jnp
in
iret
ret
cs
shlb
gs
ret
ja
ljmp
inc
stos
fnstsw
bound
std
iret
push
lock
lock
cmpsl
enter
dec
les
or
ljmp
leave
shll
sub
movsb
jno
icebp
jns
or
adc
and
lcall
mov
dec
xor
push
jecxz
sbb
sbb
add
sbb
lea
dec
daa
cmc
test
sahf
xchg
inc
inc
xchg
pop
inc
cmp
aaa
sbb
orb
popa
pop
lret
sub
xor
lock
mov
lods
arpl
inc
cli
negl
stos
rcrb
inc
lods
decl
rdmsr
inc
cmp
leave
hlt
pop
mov
xor
hlt
faddl
xchg
pop
loop
cmp
mov
xor
sub
jge
addb
cmp
xchg
dec
add
ja
jg
inc
inc
xor
sbb
clc
sti
std
gs
push
ss
pop
inc
sbb
mov
lods
fimuls
inc
mov
adc
fisubrl
push
imul
mov
cmp
cs
lcall
sahf
xchg
xchg
dec
popa
sub
lahf
sbb
mov
mov
inc
and
pop
cmpsb
pop
enter
sbbl
jmp
out
dec
icebp
rdmsr
jnp
mov
dec
xor
mov
push
and
mov
pop
out
leave
hlt
inc
or
addr16
rorb
movsb
add
test
sub
clc
mov
leave
cld
and
inc
aam
push
jns
push
arpl
lea
xor
push
inc
jg
aam
cmp
jp
ljmp
sar
fs
dec
popf
dec
iret
outsl
adc
es
repz
mov
imul
pop
pusha
jo
iret
stos
mov
fidivrl
iret
jb
outsl
popa
jae
ret
mov
daa
fildl
aaa
loope
xor
sub
xchg
inc
xor
out
jmp
or
xor
jns
pop
lret
jns
sub
push
into
sub
idivb
lea
test
imul
jnp
push
or
lds
mov
mov
add
jecxz
and
add
scas
jo
xor
mov
push
push
inc
out
sbb
sub
orb
mov
test
fiadds
loope
ss
mov
xchg
jmp
adc
cmpsb
arpl
jmp
dec
sbb
mov
iret
adc
outsb
lds
hlt
lcall
or
sub
add
xchg
imulb
lret
or
sbb
out
xor
and
or
mov
jp
xchg
or
add
push
xchg
pop
int3
lcall
daa
sub
leave
mov
out
jg
mov
test
and
dec
jmp
jne
fmuls
jle
and
push
negl
int3
movsl
testb
mov
aam
ds
inc
test
add
daa
nop
mov
fcompl
nop
dec
pop
popf
pop
idivb
loop
mov
inc
rcrb
and
push
push
shl
es
dec
out
hlt
data16
fdivrl
cmc
sbb
xor
dec
dec
jae
bound
add
into
or
in
sarb
int
xchg
cmp
ja
lahf
mov
adc
pop
popf
sti
xor
jge
add
pushf
sub
in
mov
mov
add
push
dec
sbb
nop
jnp
and
lcall
mov
pop
adc
pop
fisttpll
mov
jl
pop
or
and
xorl
loope
adc
xlat
movsb
inc
mov
jg
jbe
push
stos
fwait
sahf
leave
cmp
inc
push
cmp
xor
add
adc
test
lock
fwait
dec
mov
mov
push
scas
mulb
lds
xchg
or
fsts
sarb
ret
push
mov
pushf
enter
fs
mov
test
bound
int
jecxz
xchg
xchg
arpl
mov
cmpsb
xchg
pop
popf
lahf
jbe
xchg
jo
jne
jmp
inc
in
or
add
pop
dec
mov
mov
xchg
jnp
clc
nop
js
and
mov
adc
xor
adc
and
mov
adc
push
fldenv
adc
xchg
cmp
xchg
ja
arpl
jb
sbb
jo
jle
mov
data16
cmp
cmpsb
sbb
cmc
loop
out
dec
xchg
xchg
jnp
jecxz
dec
xchg
jl
and
hlt
loope
loopne
push
aam
test
out
fcompl
sbbl
out
adc
jecxz
rclb
cmp
xor
insb
cwtl
dec
cmc
lods
xor
dec
test
je
test
xor
outsb
insl
addr16
mov
push
mov
xor
negl
push
aaa
ss
imul
push
and
outsl
add
sub
mov
stc
in
jecxz
lcall
xchg
out
cs
andb
sub
sbb
test
ret
and
jae
xchg
inc
cmp
in
out
mov
movsl
rcll
rol
inc
xor
ds
mov
xlat
push
mov
push
out
mov
out
dec
arpl
inc
jecxz
cmpsl
mov
loope
push
in
mov
jbe
popa
add
imul
out
cmpb
xchg
lret
fldl
adcb
pop
fwait
jb
je
mov
pop
icebp
test
cli
mov
fisttpl
sbb
xchg
or
sub
imul
push
nop
inc
andb
dec
mov
jmp
pop
add
fwait
sbb
pop
sbb
or
mov
icebp
stos
mov
pop
ja
jmp
mov
jb
mov
not
dec
cs
push
jle
loopne
pop
outsb
outsb
repnz
lcall
ljmp
mov
xchg
addr16
mov
xor
out
cmpsb
insb
and
and
or
in
add
scas
lcall
push
imul
ljmp
push
sar
stos
sub
stos
fs
xchg
and
mov
flds
mov
ljmp
mull
mov
in
sbb
addr16
cmp
enter
dec
cwtl
aaa
ror
js
mov
fstps
cmp
mov
mov
adc
jne
add
jp
ret
inc
lahf
xor
fcompl
imul
out
stc
jbe
mov
int
xchg
jp
push
add
xchg
xor
xor
or
lret
xchg
cmpsl
sar
stc
push
lds
ret
adcl
mov
daa
xchg
cmp
cld
mov
int3
inc
adc
sbb
mov
inc
xor
push
push
loope
lcall
jbe
pop
enter
mov
sti
lds
sbbl
jbe
sub
lret
cmp
mov
cmp
lea
lock
mov
enter
ja
xlat
insl
and
dec
push
push
into
sbb
or
inc
mov
cmp
out
mov
or
cli
sbb
xchg
pusha
push
stos
push
push
mov
mov
xchg
jmp
fwait
jle
xchg
adcb
mov
popf
imul
jmp
dec
cmc
lret
add
push
int
mov
xchg
sub
hlt
xchg
mov
dec
das
in
jbe
push
jae
movsl
inc
mov
jne
sub
xchg
lahf
es
mov
data16
clc
out
test
loopne
mov
mov
in
cmpsb
fwait
nop
dec
sub
mov
shlb
mov
sahf
add
jo
push
ja
insl
pop
mov
es
or
add
pop
negl
xchg
pop
xor
ss
dec
shll
pop
imulb
testb
stos
lods
sbb
and
xor
dec
or
cmp
push
loopne
loope
insl
dec
lods
int
adc
pop
jno
mov
inc
ret
mov
cmc
adc
add
movsb
movsb
mov
ret
mov
ja
xlat
insl
mov
mov
add
push
dec
or
nop
insl
adc
inc
jg
lcall
sbb
lret
add
adc
jmp
repz
in
ret
bound
leave
jne
lds
leave
or
jbe
jle
adc
stc
push
ljmp
jo
jle
fidivrs
mov
xchg
in
ret
in
pop
pushf
jne
cmp
push
cmpsl
or
popa
je
ret
mov
and
imul
pop
push
xchg
sbb
push
incb
arpl
sahf
mov
inc
in
or
loopne
cmp
stos
mov
jge
or
mov
lds
xchg
inc
mov
jae
inc
jns
adc
scas
ja
mov
mov
call
into
xchg
in
cmpsl
sub
add
imul
push
mov
add
cltd
daa
sbb
aam
pusha
cmpsb
or
inc
xchg
mov
xorl
popf
popf
jg
stos
or
push
push
fbstp
cwtl
inc
mull
push
jnp
movsb
cltd
or
pop
rclb
xchg
aas
jecxz
cmpsb
fsts
jne
and
aam
pop
or
inc
sub
sub
sub
int
js
pusha
add
cmp
mov
inc
rcll
mov
mov
mov
or
adc
xor
xchg
inc
mov
sti
pop
pop
xorl
xchg
ljmp
aas
or
push
jno
xor
testl
inc
dec
or
adc
arpl
push
cmc
xor
mov
pushf
ja
cmpsl
mov
sub
push
test
insb
ret
push
ljmp
fldln2
fcmovnb
inc
aaa
dec
inc
cli
ret
jmp
fstp
popf
and
out
inc
pop
and
pop
sbb
shrb
in
inc
imul
daa
or
push
bound
in
xor
mov
stos
data16
js
xchg
in
or
test
loop
mov
xor
and
mov
fucomp
jmp
testl
cmp
push
ja
fdivrs
xchg
add
sub
xchg
push
inc
sti
outsb
pop
fisttps
out
mov
ljmp
cwtl
ds
daa
sbb
ljmp
xor
add
xlat
xor
jbe
xchg
mov
adc
xor
xchg
xchg
aam
inc
add
stos
aam
add
data16
mov
inc
jmp
ds
mov
dec
inc
add
pop
adcb
inc
adc
in
cmpsb
pop
or
adc
pop
or
mov
movsb
or
loop
jae
xchg
add
push
lock
and
std
cmp
in
inc
std
loop
in
and
xor
dec
and
push
scas
test
repz
xor
outsl
push
out
pusha
mov
adc
int
or
inc
or
xchg
mov
mov
jns
jge
jb
in
mov
fcmovu
adc
hlt
sub
xchg
push
ret
dec
adc
xchg
push
and
ror
jecxz
ljmp
push
xor
pop
adc
adc
out
inc
inc
in
stc
mov
fnstsw
stos
mov
lds
fldcw
mov
ljmp
movsb
mov
cld
js
std
into
insb
adc
scas
stc
mov
xchg
aad
lahf
inc
jp
and
bound
mov
push
or
mov
adc
adc
inc
ds
pop
sti
lret
push
loop
mov
dec
sbbb
int
es
pop
and
sahf
xor
imul
inc
mov
fwait
nop
xchg
dec
sbb
testb
fnsave
pop
pusha
mov
and
mov
push
dec
inc
ficomps
aam
or
pop
adc
fiadds
cmp
cs
leave
cwtl
lods
mov
add
fsts
xor
xchg
es
loop
and
add
jb
inc
push
push
jmp
repz
push
xor
gs
test
sbb
cmp
hlt
ret
cmp
bound
out
leave
sub
popf
test
mov
loop
lcall
bound
jle
je
jbe
sub
fstpt
ret
sbb
jbe
dec
dec
and
mov
mov
out
test
stos
sub
pop
cmc
add
pop
mov
jmp
push
cmp
mov
cmp
mov
xchg
cmp
out
cmp
mov
inc
aaa
add
jp
lods
or
lret
mov
mov
push
add
in
mov
es
mov
sti
incb
hlt
leave
loopne
repnz
jo
and
mov
and
dec
xchg
sar
push
mov
cmpb
push
out
pop
inc
fwait
hlt
lret
pushl
popf
inc
mov
xor
das
xor
cmp
cmp
aaa
ficompl
pop
pushf
xchg
adc
insb
pop
add
xor
in
insl
mov
in
mov
inc
jmp
in
inc
sub
test
fwait
push
add
cwtl
out
fs
pop
repz
popa
mov
or
xchg
movsb
fistl
pop
jbe
inc
inc
push
mov
cmpb
mov
addl
mov
xlat
lahf
sbb
outsl
popa
mov
test
shr
mov
dec
xchg
mov
hlt
fistpl
cmp
add
cli
addr16
adc
loope
mov
adc
fdivrl
adc
lahf
stc
xchg
inc
or
mov
push
mov
cmp
pop
fcompl
inc
es
test
fwait
push
test
loopne
jp
dec
popa
xchg
and
dec
daa
or
in
mov
data16
leave
insl
int
lds
mov
or
or
inc
cmp
and
loopne
ja
rorb
daa
call
psrlq
int3
aas
rorl
mov
cmpsl
jecxz
mov
daa
js
jl
fs
mov
lret
xor
inc
ljmp
inc
lcall
xchg
stc
add
test
xchg
nop
xchg
mov
fidivl
push
fmull
inc
fs
jbe
lahf
lcall
insl
adc
adc
inc
push
dec
scas
sbb
jno
push
test
inc
pop
not
aam
lods
cli
xchg
popa
mov
sti
sub
aam
sbb
pop
fistpl
adc
leave
ficomps
cmc
in
jg
pop
cmc
xchg
int3
push
rcll
arpl
mov
repnz
scas
outsl
repnz
and
push
subl
jmp
shl
push
insl
dec
mov
pop
andb
push
xor
sbb
pop
push
jb
jae
xchg
lcall
jmp
bound
fdivrl
jle
leave
sub
bound
adc
fisttps
adc
ss
into
orl
out
sub
shl
pop
clc
mov
push
cmp
pop
sbb
fldl
xchg
lret
sub
test
fmull
mov
scas
sub
int3
push
ret
and
iret
test
or
xlat
je
add
mov
sahf
jl
outsl
or
rcl
pushf
fsts
push
addr16
jle
cs
stc
or
nop
sub
push
stos
into
fxam
add
inc
mov
repz
out
or
cli
add
into
and
adc
lret
out
fsubr
sbb
pop
fdiv
mul
cmpsb
xchg
pushf
mov
jp
push
sub
inc
jl
sbb
out
repnz
xor
mov
push
and
mov
data16
xor
mov
cmpsb
inc
sbb
inc
inc
bnd
mov
loope
push
aas
dec
xor
pop
sbb
aas
loope
push
and
int3
push
test
insl
inc
rorb
popa
pop
stos
xor
adc
mov
mov
add
repnz
push
in
sub
test
dec
outsb
and
mov
sbb
sti
in
cli
inc
mov
ret
mov
ds
dec
jle
lret
stos
icebp
xchg
arpl
xor
pop
push
hlt
loop
std
ds
mov
lea
decb
fsubr
sti
jae
addr16
adc
mov
aaa
fdiv
aam
xchg
scas
mov
lret
pop
jecxz
loopne
test
sahf
cmp
aad
inc
loope
dec
scas
pop
jl
fnstcw
xor
cmp
ret
mov
lret
jecxz
mov
rcr
pop
mov
stos
cmpsb
jp
xchg
and
subb
stos
shlb
dec
dec
mov
inc
or
or
ret
inc
jbe,pt
dec
push
andb
les
sub
and
xor
jae
dec
push
shrb
or
in
ficomps
ljmp
jp
test
and
add
movsb
orl
fcoml
xor
lds
shl
pop
mov
inc
mov
dec
rolb
push
mov
lock
popf
pop
xor
dec
jno
loop
lock
jne
cmc
push
cmp
mov
jge
add
imul
sbb
testb
cld
and
xchg
inc
and
or
cmp
xchg
sub
pop
jl
push
push
jne
leave
pop
xchg
inc
rcll
out
pop
add
enter
mov
cmp
and
inc
cmp
dec
fistpl
mov
stos
sub
ja
icebp
inc
in
loope
hlt
mov
insb
inc
push
jge
sahf
pop
lock
lret
arpl
jns
imul
dec
popa
jns
mov
push
mov
sbb
rcrl
adc
jecxz
arpl
cmp
mov
push
mov
cmp
jno
mov
pop
jl
inc
cmpsl
or
adc
sbb
lret
xlat
sar
imul
mov
xchg
cs
out
int3
inc
stos
out
jbe
stos
xchg
stos
ret
fstpt
cwtl
lret
in
ljmp
xchg
or
mov
cmp
xchg
dec
pusha
mov
movsb
sti
gs
mov
ljmp
test
rorl
ljmp
ret
cmp
xchg
mov
cmp
adc
cmp
out
aad
dec
push
gs
fs
adc
add
sbb
pop
mov
clc
adc
movsl
lret
nop
lods
inc
cmp
adcl
ja
popf
dec
dec
out
sbb
mov
and
out
push
loop
add
sub
xchg
cmp
dec
pushf
sub
movsb
push
ljmp
adc
jnp
xchg
inc
or
adc
imul
mov
imul
nop
and
incl
out
inc
sbb
jbe
int3
int
mov
out
sbb
inc
push
aad
fsubrl
xchg
es
test
xchg
xor
repz
inc
sbb
stc
jo
lcall
and
sub
test
xor
lcall
pop
loope
testl
stos
out
outsl
add
test
cmp
inc
dec
ljmp
divb
ljmp
inc
mov
mov
hlt
les
jmp
mov
in
aas
mov
out
dec
sub
fisubrl
mov
cmpsl
cli
ljmp
iret
dec
dec
cltd
inc
cltd
mov
movsb
and
push
sbbl
push
scas
add
lahf
inc
or
lcall
shrb
sub
inc
divl
insl
lret
test
ja
push
mov
mov
movsl
mov
pop
push
pop
xchg
jno
in
fnstenv
sbb
or
cli
in
ljmp
pop
adc
jnp
and
gs
push
pop
sbb
sub
sub
jo
add
add
nop
pop
bound
movsl
add
stos
imul
or
add
faddl
in
das
mov
mov
shlb
mov
cmp
mov
daa
pop
sub
pop
ss
and
cld
xor
scas
push
rol
mov
insb
cmp
popa
sarb
hlt
gs
mov
fstpl
inc
cmpb
mov
into
shlb
js
sub
nop
shlb
mov
or
jb
out
xor
cmp
fwait
mov
lods
fidivl
xchg
lods
add
cmp
push
push
dec
jo
stos
adc
sarl
dec
push
inc
rcll
mov
leave
adc
cmp
push
cmc
push
out
cmc
mov
jg
aas
into
sub
dec
in
movsl
push
xor
jne
jo
aas
jb
mov
testb
adc
out
enter
or
push
leave
iret
xlat
nop
xor
stc
loope
ss
or
je
push
roll
push
and
push
dec
ljmp
jmp
mov
xchg
repnz
fldl
clc
lcall
xchg
xor
mov
in
xchg
je
dec
inc
lods
test
mov
cmp
add
xchg
es
push
cmpsl
stos
gs
lock
sbb
jl
out
add
mov
outsl
insb
mov
out
add
mov
xchg
pop
dec
icebp
fcomp
xor
scas
clc
pop
sar
jmp
push
out
inc
test
mov
cmp
dec
add
sbb
test
add
push
fcmovbe
sub
aaa
clc
cmp
imul
movsb
lahf
mov
cmpsl
sahf
adcl
bound
js
insl
jno
mov
cli
xor
sbb
in
stos
and
jno
fwait
xchg
jno
shlb
or
fistps
xchg
pushf
jb
jb
xor
icebp
inc
imull
mov
jge
xchg
aaa
inc
add
sub
sbb
andb
xchg
lea
push
cmp
xor
les
lcall
dec
lcall
mov
enter
shr
pop
enter
jp
inc
adc
cmpl
jg
cmp
test
fwait
sbb
jbe
pop
sti
lcall
mov
xor
and
fsubrl
ret
and
fistpll
xchg
bound
lods
bound
xchg
fsubr
fcmovnu
lret
sub
aad
mov
negl
push
add
push
into
pusha
and
mov
pusha
data16
test
mov
sti
movsl
inc
popa
fs
cld
push
sbb
sbbb
push
cmp
inc
enter
xchg
xchg
cwtl
jge
scas
dec
push
xchg
push
jle
cwtl
aad
out
mov
xor
and
cld
loope
push
push
jae
mov
hlt
stos
int3
jns
lret
std
sub
negb
mov
ss
imul
xchg
adc
sbb
push
cmp
dec
paddsb
es
loope
and
sub
xchg
lea
xor
bound
aam
inc
dec
cmpsb
fcmovnu
jp
or
dec
loop
stos
dec
loopne
out
lock
jno
out
or
jns
roll
mov
popf
movsb
out
mov
push
sti
mov
mov
add
fwait
scas
icebp
sub
clc
nop
loopne
ja
arpl
clc
test
mov
jno
mov
xor
cli
add
add
xor
mov
xor
inc
push
loope
and
stos
xchg
jecxz
mov
push
lret
sub
sub
dec
std
pop
sbb
loopne
ret
ljmp
lock
jbe
divl
add
pop
rcrl
xor
pop
test
add
cmp
daa
daa
adc
js
lods
fdivrs
fcompl
xor
clc
adc
scas
popa
or
xchg
cmp
int3
outsl
addr16
popl
jno
inc
and
sub
dec
fistps
es
insl
mov
cmpsb
mov
sbbb
or
jne
push
scas
sbb
sub
rorl
ljmp
test
pusha
cld
cmp
fildll
loope
test
fsts
mov
mov
and
stos
pop
xchg
dec
loopne
test
test
mov
sub
ja
mov
ret
mov
test
xchg
mov
in
das
mov
cmp
mov
cmp
hlt
addr16
orb
mulb
or
inc
jns
das
push
mov
push
aam
mov
mov
dec
lods
ret
dec
xchg
xor
mov
sub
adc
repz
lret
fstps
inc
xchg
jmp
add
and
sbb
mov
mov
mov
jle
addl
ds
out
adc
stos
lods
add
pusha
je
popf
int3
mov
jp
xchg
rcr
mov
dec
imul
ljmp
inc
lahf
xchg
inc
scas
adc
add
nop
insl
and
mov
sub
or
adc
in
mov
mov
xchg
inc
lahf
hlt
pop
cmpsb
mov
push
out
ljmp
and
call
xor
test
cmp
push
loopne
lock
leave
or
mov
cmc
push
adc
rorb
and
and
mov
inc
dec
cmp
push
xor
inc
push
fisttpl
jo
push
out
in
jne
cmp
subl
fucom
xchg
inc
mov
jp
or
pop
ja
xchg
pusha
pushf
sub
jns
daa
push
lea
add
jle
or
cmpsb
mov
movsl
xchg
popf
cmpsl
fnsave
in
int
cmpsl
stc
inc
inc
rol
add
add
ficoms
mov
mov
leave
jo
ficompl
inc
repnz
ret
sub
loop
js
mov
adcl
xchg
es
push
int3
adc
or
push
adc
loope
add
fsubs
daa
cmc
shll
dec
lcall
nop
jp
pminub
inc
adc
inc
sahf
dec
push
push
xor
arpl
cltd
es
sbb
mov
or
lret
les
fsubrl
call
mov
sub
jge
in
sbbb
mov
mov
cmp
aam
adc
pop
gs
add
xchg
pop
loop
divl
fldcw
mov
insl
adc
jns
in
es
les
shl
das
stos
imul
dec
fdiv
lock
shlb
out
insb
jno
mov
clc
push
rep
repz
iret
loope
sub
shll
call
aam
mov
push
lcall
mov
lock
aaa
scas
ret
aam
or
mov
dec
wrmsr
jecxz
adc
shll
mov
cli
loop
in
push
int3
cltd
mov
cmp
dec
mov
cmpsb
test
flds
xorb
push
enter
xor
dec
rol
aad
dec
sbb
jbe
fdivrs
xor
mov
mov
fbstp
cs
imul
xchg
insl
adc
sub
in
test
shl
rclb
push
lcall
dec
lahf
sub
push
and
rcrl
ljmp
lea
movsb
cmp
cmpb
fidivrl
insb
fstp
adc
mov
shl
gs
les
cmc
push
stos
gs
mov
fdivs
mov
test
ljmp
and
outsl
adc
rol
pop
inc
loop
or
sub
or
lods
xor
xchg
jge
movsb
int
xor
or
and
addl
mov
and
ficomps
push
push
or
add
pop
imul
pop
xchg
add
fs
test
push
in
jo
push
mov
or
rcl
subl
loopne
in
adc
mov
mov
jae
cmp
dec
movsl
mov
sub
shll
addb
pop
inc
clc
lea
hlt
lea
push
dec
es
mov
in
and
add
sub
dec
jne
das
and
mov
arpl
sbb
hlt
mov
sbb
mov
push
lock
jecxz
jns
pop
dec
imul
jno
xchg
mov
xor
mov
cltd
movsb
inc
pop
sub
push
dec
cmp
pop
fiadds
fistps
ret
xchg
call
inc
jp
mov
pusha
push
sbbl
xor
test
mov
bound
xor
inc
lret
xor
aam
in
sub
das
stos
imul
or
roll
out
jno
mov
pop
jecxz
dec
inc
scas
into
or
cmc
jo
mov
cmp
mov
or
stos
cwtl
push
lret
jne
mov
lock
sub
cmpsl
test
aam
imul
sub
or
mov
int
mov
add
popa
mov
ljmp
mov
in
add
inc
ret
push
cmp
test
push
insl
scas
insl
loopne
xchg
sbb
repz
mov
addr16
fdivrp
jb
decb
sbb
mov
fwait
clc
push
sub
add
dec
insb
pop
dec
test
push
fldcw
daa
mov
dec
pop
mov
and
mov
hlt
push
jmp
stos
mov
fnstsw
push
add
out
xlat
incb
loope
and
scas
pop
sub
sbb
inc
cld
fiadds
addr16
test
and
sahf
mov
pop
dec
add
xlat
fnstsw
sbb
xchg
xor
dec
scas
pop
les
cmp
cltd
adcb
mov
and
ds
adc
loop
sbb
dec
ljmp
inc
xchg
pop
outsl
incl
mov
jg
loope
aad
lock
fisubs
ffreep
mov
mov
cli
insb
xor
sbb
inc
test
int3
jmp
stos
push
pop
hlt
or
into
sahf
dec
into
imul
cwtl
jge
pop
mov
xchg
dec
addl
into
push
mov
fnsave
pop
das
pop
pop
in
imul
xor
mov
fildll
sbb
inc
fimull
mov
push
xchg
sub
push
xchg
aaa
dec
inc
ds
jp
fcomps
add
loope
ja
nop
pop
jmp
dec
loopne
shrl
cwtl
inc
sti
xor
add
sub
push
push
imul
push
iret
test
shl
xchg
lcall
shrb
lea
sbb
mov
and
jg
pop
out
jbe
hlt
or
imul
rclb
push
pop
nop
repz
in
mov
cmp
mov
sub
xor
inc
jns
lahf
out
cwtl
cmp
jns
ds
pushf
popf
pop
adc
push
or
int
arpl
push
adc
add
adc
mov
cmp
ljmp
mov
stc
pop
xchg
xlat
ja
neg
cld
jmp
and
add
icebp
scas
push
into
pop
ret
push
in
xchg
mov
mov
gs
add
sub
stos
sub
ret
sbb
inc
push
inc
outsl
pop
mov
add
or
adc
insb
popa
mov
fwait
je
jbe
push
fidivrl
loopne
mov
stos
cmp
and
xlat
test
stos
mov
stos
and
and
out
lds
arpl
dec
pop
adc
ljmp
fstpl
fldcw
adc
lahf
sar
test
mov
fwait
sub
inc
ds
dec
push
or
push
repz
pop
mov
pusha
testl
xchg
jno
push
in
cmpsb
popa
dec
frstor
dec
mov
out
add
cli
inc
pusha
add
imul
mov
adc
or
insb
arpl
addr16
cld
std
push
js
sbb
sub
repz
mov
scas
xchg
sub
icebp
into
push
test
mov
cmp
fnstenv
lea
test
mov
or
mov
cmp
test
sub
leave
fldcw
les
jbe
or
fs
popa
popa
jmp
xchg
xchg
ja
daa
xchg
jno
mov
movsb
pusha
xchg
lahf
mov
fimull
jle
arpl
pop
or
out
ret
push
mov
and
inc
sahf
shl
sub
dec
jnp
mov
cmovle
aam
test
outsl
xchg
lahf
daa
popl
mov
cmp
sub
mov
fdiv
mov
arpl
jecxz
aas
std
popl
adc
cmp
scas
jnp
jo,pn
jno
mov
in
pop
sub
outsl
outsb
and
mov
jl
jb
stos
cltd
mov
ljmp
mov
mov
inc
fwait
push
repz
xchg
mov
int
jno
mov
jg
repnz
fists
rorl
lahf
sbb
add
les
test
data16
vxorps
pop
sti
lock
nop
in
or
andb
xchg
loopne
xchg
add
in
or
loop
nop
mov
mov
sarb
inc
mull
ret
icebp
cmp
xor
pushf
jb
pop
mov
sub
paddd
sti
xchg
dec
mov
or
stc
sbb
sub
insl
stos
mov
out
dec
push
jg
push
cmp
jg
mov
mov
ffreep
cwtl
push
into
dec
loope
sbb
notl
adc
mov
stos
mov
push
scas
je
test
test
mov
cmp
jb
test
orb
inc
cmc
mov
jae
mov
sbb
add
popf
cli
add
cmp
xchg
jnp
out
jne
mov
sub
sub
cmp
call
pop
push
lods
jae
mov
addb
ljmp
rcrb
xor
xchg
arpl
sbb
loope
iret
cli
pop
sbb
pushf
into
sub
sbb
mov
jp
pop
sub
fnstsw
ret
jle
push
xor
mov
inc
jo
icebp
dec
sub
cmp
pop
addl
adc
repz
jmp
sti
repnz
imul
adc
fmul
mov
xchg
in
fisttpll
outsb
cmp
dec
cltd
ret
scas
xchg
push
je
xchg
arpl
or
nop
sbb
jmp
insl
mov
rcrl
outsb
xor
push
ret
jg
pop
jnp
movsl
rorl
int
or
cmp
pop
ljmp
xor
test
std
je
xor
pop
scas
lahf
es
pop
outsb
jg
fisttpl
or
movsb
lret
mov
or
adc
xor
lret
cwtl
add
sub
iret
out
pop
fdivl
push
sub
mov
cmp
mov
pop
scas
add
mov
jno
aam
in
xchg
sbb
and
xchg
cli
dec
lret
mov
add
lret
cwtl
ljmp
int
xor
sbb
iret
ret
jle
xor
mov
inc
leave
jl
dec
je,pt
add
add
and
or
sbb
call
dec
pop
mov
cli
movsl
sahf
inc
lcall
inc
dec
sahf
aas
sub
pop
dec
adc
xorl
adc
shr
inc
imul
test
lea
es
enter
jge
aaa
cmp
adc
push
int
pop
ja
jb
faddl
pop
or
scas
xchg
sbb
pop
mov
inc
jnp
adc
ss
jmp
sahf
je
xchg
sbb
sbb
xor
subl
mov
lds
push
or
mov
out
adc
adc
mov
scas
scas
cmc
jns
into
mov
scas
mov
dec
or
dec
ss
dec
aam
mov
outsb
mov
jb
jno
push
cld
rcrl
sub
jno
push
push
stc
push
pop
and
and
xorb
notl
xchg
dec
xor
lahf
sub
xor
fcompl
push
pop
out
mov
sub
cmpb
mov
enter
jnp
out
aam
add
xor
sub
dec
aas
dec
inc
imul
push
xor
and
testl
std
loopne
and
cmp
loopne
inc
popf
xor
cmp
adc
mov
mov
or
inc
imul
dec
imulb
inc
push
jp
adc
addr16
leave
dec
adc
push
push
call
movsl
sbb
bnd
and
mov
movsb
lret
sub
fs
jg
lock
sbb
jp
inc
inc
imul
dec
mov
lcall
lret
add
or
inc
lods
or
mov
je
mov
mov
ffree
push
and
inc
and
inc
sub
xlat
xchg
aam
dec
inc
in
inc
enter
xor
popa
jb
cld
addr16
bound
lea
clc
and
dec
push
xchg
mov
mov
jmp
rcrw
mov
jne
insl
and
mov
push
rol
xchg
iret
testl
and
mov
xchg
imul
imul
and
add
xlat
icebp
in
jns
cmpsb
mov
add
dec
sbb
popa
mov
hlt
mov
test
in
addr16
in
adc
inc
insb
mov
aas
and
push
test
mov
jmp
add
push
imul
lret
test
push
decl
inc
fisttpl
cmpsb
scas
loopne
sub
sub
lods
ljmp
mov
push
inc
adc
and
insl
je
adc
outsl
addr16
lods
cli
mov
mov
cltd
sbb
add
mov
jp
call
ss
movsl
pop
in
mov
push
ds
call
into
inc
ja
push
mov
mov
push
xor
imul
pop
xchg
or
mov
dec
and
push
sti
andb
xor
push
filds
or
mov
push
hlt
pop
jecxz
push
je
mov
jmp
xor
lock
lock
bound
xchg
in
jns
or
es
and
pop
dec
adc
pop
jae
into
inc
mov
sbb
jmp
daa
sbb
inc
sub
aaa
scas
rorb
adc
mov
sbb
sbb
fmulp
push
and
negl
repnz
push
nop
lods
fists
rcl
popa
test
push
btr
sbb
add
or
testb
sahf
ja
ljmp
call
ds
bound
in
mov
xchg
inc
adc
xchg
sub
outsb
jns
mov
ds
jne
push
sar
lcall
data16
adc
xor
pop
mov
aaa
fbld
int3
rclb
stos
jae
sub
aas
loop
mov
add
out
and
or
adc
xor
jecxz
inc
sbb
mov
mov
int
mov
loopne
mov
fdivrs
jl
add
push
out
aaa
inc
inc
aas
inc
and
imul
lret
xchg
fimull
fisubs
xor
std
sub
add
jo
add
mov
movsl
js
imul
ss
jle
add
mov
pushf
inc
mov
imulb
and
enter
aad
aas
cmp
cmpsb
or
fwait
or
int
fwait
inc
ja
ljmp
mov
inc
mov
mov
jmp
cmpsl
aam
inc
dec
and
adc
fdivl
jge
push
xor
sahf
cmp
cli
loope
sarb
fistpll
std
les
repnz
and
mov
pusha
sbb
mov
ret
nop
cmpsb
dec
push
add
push
out
addb
lods
hlt
stos
mov
dec
aaa
mov
mov
fstl
ja
or
lret
int3
sbb
jne
adc
enter
pop
dec
movsl
mov
pop
cli
jl
push
pop
or
pop
sub
loopne
xor
mov
jmp
jno
int
sbb
lahf
push
lods
sarb
sub
lret
fs
push
add
jne
shrl
aam
cmp
daa
and
sbb
fstpl
lods
sbbl
fisubs
or
insl
sub
push
js
out
ret
lahf
inc
outsl
hlt
and
sub
push
ds
push
mov
inc
dec
aas
push
sbb
rcll
pushf
push
jb
int
xor
mov
lret
jle
sbb
adc
sbb
stos
cmpsb
insb
inc
popa
sub
and
cmp
pop
xchg
in
mov
icebp
in
loope
test
repnz
jmp
lock
jne
int
lret
mov
pop
inc
lods
ja
mov
loopne
mov
or
mov
outsl
aas
stos
pop
fistl
mov
fildl
xchg
jl
or
jno
fcomps
mov
xlat
loopne
push
shll
mov
stc
or
pop
aad
sti
stos
imull
imul
outsb
mov
push
repz
sahf
std
stc
imul
dec
popa
ja
mov
push
xlat
adcl
cmp
rorl
ret
pop
pop
loope
inc
mov
jmp
popa
sub
stos
and
ret
push
jecxz
or
in
jnp
call
dec
int
sbb
and
cmp
xchg
in
out
cmp
push
mov
aaa
push
xchg
out
adcb
data16
sar
out
gs
stc
xorb
adc
in
sbb
loop
inc
fisubrs
mov
nop
movsb
fldl
dec
sbb
fnstcw
mov
cmpsb
inc
test
or
stos
push
or
sub
nop
aam
xlat
sarl
rorb
xor
xchg
lret
inc
test
lcall
dec
test
in
sub
xor
mov
mov
aas
lods
inc
xlat
scas
insb
xchg
mov
mov
push
outsb
push
pushf
sbb
ret
pop
ret
push
gs
mov
ss
stc
push
sbb
cmp
inc
cs
loope
mov
dec
pop
mov
jmp
imul
dec
mov
xor
xchg
adc
xchg
daa
mov
xor
add
bswap
out
jno
mov
lret
mov
loopne
in
in
mov
inc
xchg
jg
xchg
push
ror
push
icebp
add
ljmp
sub
cmpsb
movsb
sti
push
cli
sti
dec
ljmp
xor
ss
jb
sub
cmpsb
dec
mov
movsb
aam
mov
es
rcrb
mov
mov
mov
and
jg
cmp
fwait
in
popf
cmc
mov
nop
cli
add
sub
xchg
push
sub
xchg
or
pop
aaa
mov
xor
mov
frstpm(287
sbb
lret
das
add
xor
in
aad
pusha
push
add
into
popf
leave
movsb
jge
lock
or
inc
mov
pop
nop
aam
cmp
leave
ret
loope
push
rorl
pushf
cmp
int3
bound
jae
lock
pop
add
push
xchg
xchg
mov
pop
mov
ljmp
cmc
in
push
jae
loop
pop
xor
cmp
cmp
pop
cwtl
xchg
lret
in
scas
ds
rolb
pop
cmp
je
xor
incb
dec
popf
icebp
fcompl
leave
cmp
adc
lret
outsl
cmpsl
push
sub
adc
shrl
mov
dec
ret
lock
addb
mov
push
dec
andb
mov
adc
adc
jae
inc
mov
imul
xor
push
dec
fwait
and
aam
pop
jmp
aas
sbb
mov
adcl
inc
mov
out
pop
pop
rolb
insb
out
std
cmpsb
or
add
test
mov
ljmp
lret
jmp
adc
lret
sarl
lret
shr
jno
in
adc
int3
cmc
pop
jb
iret
je
or
js
mov
push
lcall
cmpsb
push
ret
mov
movsb
and
adc
sub
cmc
aas
ds
cld
std
sbb
insb
sub
aas
jg
jb
sub
ja
jo
push
movsb
mov
imul
outsl
arpl
jmp
xchg
add
lret
test
lea
pop
inc
or
test
call
insb
rcrl
incl
jns
xadd
sbb
out
out
in
stos
mov
mov
xor
adcb
push
dec
enter
in
and
fisubrl
jecxz
movsl
xor
jg
xchg
outsl
or
mov
fistpl
cltd
iret
push
or
xor
inc
or
sbb
add
js
mov
or
cmpsl
ja
les
xor
adc
sbb
xchg
jne
fcompp
jae
xor
sub
leave
lds
mov
stc
inc
pushf
mov
and
aas
push
and
out
test
xchg
loopne
loope
mov
pop
jne
outsl
jb
and
sub
leave
jmp
aam
pop
inc
and
pop
pusha
pop
out
dec
js
mov
clc
cmpsb
mov
xor
data16
testl
in
mov
lcall
lods
and
mov
mov
dec
mov
sbb
movsl
xor
mov
imul
add
insb
jnp
popf
xchg
xor
mov
jmp
into
fnstcw
push
int3
fsts
sbb
xchg
fsubl
pop
and
xchg
outsb
mov
or
mov
out
lods
ret
fldcw
mov
inc
loopne
push
int
sbbl
js
add
adc
das
sbb
aas
or
mov
pusha
cli
inc
and
cmp
pushf
leave
dec
loop
xchg
insl
out
sarl
mov
bound
outsl
mov
mov
or
sub
hlt
push
fidivs
cwtl
mov
test
in
aaa
sarb
fsubl
fdivs
sub
in
ljmp
xchg
dec
xor
inc
enter
and
push
iret
imul
pop
and
adc
jne
sti
pop
daa
jne
outsl
stc
in
fld
decl
jns
sub
or
sti
inc
mov
inc
jge
int3
test
xchg
aam
sub
adc
rcrl
or
pushf
rcr
fwait
mov
ja
pop
popa
mov
cmc
out
outsb
mov
xchg
clc
test
stos
dec
dec
in
push
cmc
mov
cld
popa
jmp
pusha
in
sbb
insb
mov
pusha
jb
mov
into
push
jl
subb
dec
xlat
xchg
sbb
jno
xchg
je
mov
inc
aam
sbb
mov
jnp
outsl
shl
mov
mov
push
dec
lods
lock
sti
fwait
and
lcall
jp
lods
jl
dec
adc
push
or
out
pop
dec
and
sti
pop
add
adc
mov
xchg
scas
popf
xor
mov
mov
ja
ret
cmpsb
add
movsb
inc
icebp
movsl
push
enter
xchg
mov
xor
sub
fwait
movsb
loopne
stos
adc
daa
das
test
mov
mov
xor
sbb
gs
outsb
dec
sub
stos
pop
mov
cmp
faddp
call
xchg
pop
adc
sahf
cmp
xchg
sbb
push
mov
and
sar
sbb
aas
inc
mov
xchg
repz
mov
out
xchg
or
and
or
test
pop
xchg
mov
mov
pop
cwtl
pop
xchg
xchg
mov
cmpsb
sbb
pop
sbb
sbb
cmp
stc
push
cmp
rcl
jmp
mov
pop
xor
lahf
xlat
or
jno
jo
xchg
dec
es
sbb
lahf
je
xchg
push
adc
out
movsl
xchg
fisubrl
and
stc
sub
pop
adcl
inc
mov
pop
cmp
loope
fimuls
dec
mov
mov
cltd
cmp
ja
pop
inc
lret
mov
mov
shl
test
int3
stos
popa
loopne
test
mov
stc
daa
pop
les
add
push
pop
iret
and
in
ret
je
test
cmpsl
or
push
pop
stos
xor
mov
adc
push
xor
stos
xor
in
adc
lods
imul
ret
dec
xor
adc
dec
imull
pop
insl
jge
cs
testb
adc
push
mov
aad
movsl
test
jg
sbb
fdivr
xor
in
push
or
scas
lret
mov
jae
push
and
inc
xchg
popa
push
jbe
loopne
dec
popa
test
add
adc
inc
xor
arpl
cmc
lods
ja
hlt
jl
arpl
jo
fildll
cmpl
stc
mov
xchg
sub
imulb
mov
cli
dec
jp
add
movsl
mov
jmp
add
call
jo
gs
dec
push
sub
test
lods
jg
and
in
cli
mov
popa
push
shlb
notb
in
adc
out
inc
sub
addr16
stos
and
out
pushf
and
ljmp
add
and
add
fbld
mov
loop
mov
mov
mov
mov
xorl
insl
add
sub
dec
xchg
dec
push
inc
mov
jae
cmp
sti
cmp
stos
sub
movsl
push
add
daa
mov
or
rcrl
sar
shll
pushf
push
jbe
mov
mov
sbb
mov
in
lods
xchg
sub
adcl
fisubrl
stos
mov
push
jge
xor
sbb
inc
stos
cmpsl
out
dec
ss
dec
lret
stos
cmpsb
call
insl
int3
dec
cwtl
arpl
psubq
js
add
add
pop
call
sbb
sub
push
das
pop
jecxz
xchg
cmpsb
leave
jne
int
addr16
pop
mov
jge
popf
push
mov
xchg
push
dec
mov
test
mov
mov
shll
push
pop
movsl
mov
ds
and
xor
pop
or
or
jb
ret
sahf
dec
and
ljmp
or
cmpsb
into
cs
mov
push
cwtl
or
stos
dec
dec
add
repnz
lcall
xlat
inc
sub
dec
push
icebp
sbb
mov
ja
mov
js
lods
loope
pusha
jecxz
hlt
pop
mov
sub
pushf
or
mov
test
scas
mov
push
aad
jge
imul
push
mov
outsb
retw
test
push
cmc
push
and
dec
gs
pop
inc
mov
jbe
test
call
jmp
test
imul
pushf
xchg
bound
repz
or
wbinvd
cmpsb
orb
dec
stos
popa
fsubl
adc
sbb
int3
pop
sbb
or
out
jns
inc
and
mov
rclb
mov
jno
inc
xchg
aas
jmp
inc
pop
xchg
mov
icebp
test
sbb
outsb
push
mov
xchg
gs
call
xchg
pop
cmc
lret
xor
imul
sbbb
push
test
scas
insb
mov
jae
push
push
xchg
dec
xchg
mov
inc
test
mov
psrad
pushf
jo
loop
jo
popf
and
mov
repz
dec
sub
ja
daa
ljmp
test
adc
add
ljmp
in
leave
leave
imul
pop
xchg
repnz
push
xor
insb
pop
hlt
xchg
out
ja
mov
xor
mov
aaa
lret
add
xor
dec
pop
sub
and
add
jae
subl
in
hlt
push
clc
push
popa
adc
aaa
ret
inc
popa
fisttpl
xchg
loope
pop
imul
sbb
rcrb
mov
jae
xor
bound
in
add
jg
rorb
ss
mov
imul
sbb
jl
mov
dec
push
addb
clc
pop
nop
mov
loopne
arpl
icebp
mov
int
jne
popf
sbbl
jecxz
daa
in
jne
jp
jo
nop
push
add
xchg
fcoms
sub
ja
jae
pop
push
cmp
fcmovb
repnz
andl
push
ret
pop
mov
sahf
or
sub
sub
lcall
xor
aad
or
add
test
and
sbb
rolb
scas
pop
jno
adc
jne
push
retw
add
clc
inc
jae
cmp
data16
insl
fdivs
add
pop
add
hlt
push
and
dec
xchg
xorl
mov
cli
xchg
negl
rorb
cmp
hlt
rorl
das
je
outsl
stos
mov
mov
call
shl
inc
movsl
sbb
ja
xor
sbb
xchg
mov
mov
loopne
sub
pop
xchg
dec
cmp
ficoms
cwtl
inc
imul
xchg
rclb
inc
add
bound
inc
pop
add
fcomip
adc
xchg
mov
xor
jbe
nop
nop
and
in
cmpl
mov
and
xchg
rcll
out
push
mov
xor
call
outsl
sahf
jns
xor
mov
movsb
imul
and
faddl
xchg
aam
mov
inc
jle
dec
adc
pop
idivb
icebp
and
aad
cld
xor
mov
iret
add
jb
aas
jo
cmp
push
test
inc
cmp
dec
mov
pop
movsl
ja
out
inc
test
cs
sarb
or
sbb
scas
cli
sbb
push
add
out
insl
test
test
cmp
lea
dec
mov
fstpt
adc
insb
sub
jp
loop
jbe
jl
data16
xor
imul
adc
pop
or
clc
add
cltd
sub
push
or
dec
test
dec
push
outsl
xchg
sarl
arpl
fidivs
lea
add
cmp
adc
lahf
data16
icebp
sub
inc
lods
inc
adc
sub
out
rcr
imul
arpl
pusha
fldenv
lods
shll
in
mov
jecxz
lock
sbb
add
sbb
or
std
jbe
push
mov
adc
pop
movsb
mov
repnz
test
lea
bound
cmpsb
stos
in
and
xchg
sarb
fcoms
loope
sub
pop
es
sahf
mov
out
cmp
lret
mov
adc
scas
pushf
jo
jle
ja
mov
popa
pop
in
mov
xlat
xor
sub
xor
test
mov
fcmovbe
dec
jl
fildll
sub
dec
insl
sub
ds
popa
jecxz
aas
movb
inc
dec
hlt
inc
pusha
testb
add
sti
dec
dec
loopne
test
inc
sub
xchg
loop
push
mov
sahf
mov
insb
jp
shll
mov
repnz
and
sbb
aaa
into
or
mov
jb
cmp
adcb
lds
add
in
pop
loop
in
jmp
dec
add
cmp
jo
mov
ds
xor
fsubrs
pop
rorl
mov
out
cli
push
gs
xchg
cmp
inc
cwtl
add
adc
and
nop
stos
push
or
iret
imulb
pop
mov
adc
mov
stos
xor
sbb
ljmp
cmp
dec
sbb
or
mov
rclb
addr16
add
mov
and
add
mov
mov
adc
xor
scas
in
movl
cli
dec
mov
aad
test
pop
and
out
mov
test
jnp
xlat
jne
pop
mov
andl
push
aad
pmuludq
inc
jae
movsw
jp
pop
jnp
std
es
and
xor
vmwrite
sti
xchg
fidivl
mov
fwait
and
addb
cwtl
or
sub
inc
movsl
jmp
dec
in
outsl
cltd
mov
stos
push
inc
ss
adc
pushf
mov
lcall
adc
movl
fisubrl
outsl
or
pop
test
xor
ja
cmp
pushf
cmp
gs
cld
and
mov
sarl
mov
mov
sub
jl
or
and
lods
cmp
daa
mov
adc
jge
jbe
adc
cmp
pop
pop
leave
test
ljmp
int3
mov
add
mov
cmpsb
push
mov
aas
nop
fdivl
cld
mov
and
sbb
pop
mov
movsl
fnstcw
mov
subb
or
mov
scas
xchg
lds
std
das
lea
sarb
and
out
sbb
nop
cmp
add
pop
lods
mov
push
and
subl
push
lods
or
popa
mov
loop
cwtl
inc
or
xor
inc
mov
nop
push
sub
rorl
and
cmpsl
mov
mov
add
or
fiaddl
test
dec
dec
pop
gs
mov
lods
loope
pop
jg
cmp
push
insl
lahf
gs
daa
lahf
or
in
loopne
sbb
add
fnsave
nop
outsb
scas
cs
fstl
popa
ljmp
cmpsl
pop
mov
ja
bound
xchg
adc
push
lahf
and
out
or
adc
push
cmp
adc
mov
mov
and
insb
cmpsb
loop
push
jecxz
xor
jl
or
pop
daa
sbb
dec
jo
or
dec
pop
dec
adc
cmp
jb
mov
scas
adc
shll
lret
mov
gs
xchg
lods
sub
fists
push
les
ss
adc
mov
insl
fdivrp
ret
cmpsb
push
loope
cmp
and
jnp
pop
xchg
and
mov
sub
jle
fld1
push
push
ficomps
lcall
jbe
xor
jmp
shll
addr16
arpl
filds
mov
xchg
dec
cmp
adcb
sahf
inc
pop
in
pusha
inc
popa
mov
add
inc
stc
leave
mov
pop
hlt
nop
inc
jp
cmpsb
pop
dec
mov
in
cmp
addb
decb
aas
dec
sub
mov
or
adcb
jl
dec
xchg
push
fdivl
adc
mov
aad
lock
lret
sbb
inc
dec
dec
inc
jmp
xchg
sub
dec
mov
jl
fdivrs
fstps
jl
pop
cmp
inc
cmpl
push
adc
xor
inc
cld
mov
or
sub
loop
mov
sub
fwait
and
leave
cs
xchg
jno
jb
sub
mov
dec
outsl
mov
aas
je
push
mov
and
rclb
cmp
or
in
cmp
or
sub
fistpl
jns
in
push
rolb
mov
xor
ljmp
sbbb
mov
dec
loop
mov
cmp
mov
in
add
jle
xchg
dec
pop
sub
or
pop
mov
ror
dec
jb
push
and
cmp
cmp
cmpsb
movsl
pusha
ret
lea
sbb
push
das
cld
fmulp
leave
or
mov
sub
jb
fcoms
push
cli
in
call
mov
in
xor
sbb
fsts
sub
mov
cltd
xor
add
nop
xchg
jb
sbb
cli
ror
mov
stc
sbb
pop
jns
sub
mov
dec
dec
int3
sub
flds
jecxz
and
jnp
je
lret
inc
push
xor
mov
fsubs
sti
push
add
xchg
pop
jmp
dec
jmp
add
gs
pop
push
push
sub
sbb
sbb
call
addr16
pop
stos
push
push
dec
cmp
jo
jg
jns
or
ljmp
add
adc
mov
ds
out
sbb
push
lods
andb
jno
xor
js
mov
int
stos
insb
stc
push
repz
xchg
xchg
jg
imul
movsl
inc
mov
or
dec
adc
add
add
push
int
jg
mov
add
lods
pop
push
jae
in
and
in
inc
arpl
cmp
pop
mov
xchg
xchg
push
inc
rcrl
fcoml
sub
adc
add
popa
mov
je
xchg
sbb
and
mov
ret
xchg
mov
push
daa
and
inc
pop
and
lea
outsb
sbb
jnp
inc
fdivrp
test
jns
rolb
mov
mov
testb
push
repnz
pop
cmp
fnstenv
push
mov
xor
ret
lcall
movsl
stos
inc
bound
adc
andl
fnstenv
jmp
ja
mov
xor
cmp
jp
dec
cmp
int
rorl
sub
jecxz
arpl
pop
into
xchg
inc
adc
sub
mov
popf
and
aam
and
dec
popf
pop
inc
or
jo
push
sbb
dec
and
ret
es
jno
add
inc
scas
dec
jae
or
mov
iret
xchg
pop
push
out
fisubs
cmc
mov
or
push
js
xchg
loopne
stos
mov
leave
cmp
mov
jae
in
sbbb
inc
add
xor
mov
xchg
mov
adc
push
dec
lea
int3
mov
je
xchg
pushl
mov
hlt
lea
jp
inc
in
mov
pop
repz
pop
addb
and
or
pop
jmp
movsb
xchg
adcl
or
repnz
sub
in
jg
rolb
mov
add
jecxz
in
jmp
sbb
outsb
sbb
cmp
pusha
enter
mov
cmc
push
inc
mov
dec
bound
popl
pop
inc
mov
out
cmp
mov
dec
xchg
push
jno
test
xor
xlat
rcl
jg
outsl
fistpll
xchg
leave
adc
repz
xor
mov
es
nop
push
mov
fistps
mov
mov
lods
fldenv
dec
add
mov
pop
pushl
fistpll
jns
sub
or
sbb
xorb
lds
jae
out
mov
xchg
xor
mov
and
leave
in
cmp
cmp
jg
mov
inc
fistl
and
mov
mov
stos
sbb
out
pop
dec
xor
les
push
cli
xchg
lods
fmuls
insb
xsetbv
loopne
adc
pop
insl
push
jne
cltd
fsubrl
or
and
ficoml
mov
mov
ss
imul
insb
and
and
mov
push
out
push
lock
rcl
push
cmpsb
jo
inc
xchg
xchg
mov
add
cmpsb
movsb
xorb
push
jne
mov
movsl
or
sub
push
sub
inc
lcall
js
addr16
loopne
inc
mov
mov
mov
xor
lret
pushf
movsb
lcall
pop
add
xchg
lods
inc
nop
push
push
out
out
sti
inc
fistpll
lock
insb
loopne
push
mov
pop
stos
mov
ret
je
xor
mov
lcall
push
out
mov
loope
xchg
xor
xchg
popa
bound
shrb
inc
xorb
fs
push
movb
push
and
xor
ljmp
js
jmp
jle
subb
mov
mov
icebp
xchg
scas
cmp
mov
out
pop
mov
mov
jae
or
adc
sub
enter
xor
sbb
popa
das
mov
ret
mov
loop
mov
and
xor
in
mov
outsb
push
shl
push
xor
test
fcmovbe
aas
pop
dec
orl
movsb
andb
mov
nop
ja
adc
push
js
repz
dec
mov
xor
inc
popa
lds
clc
outsl
es
mov
mov
add
xchg
test
cmc
cld
inc
insb
xorl
jmp
lret
and
sbb
add
int3
inc
repnz
pop
shll
pop
mov
mov
fiaddl
inc
popf
mov
aad
sub
dec
inc
add
and
lds
pop
cmp
mov
xor
dec
js
or
fistl
stos
jnp
ja
adc
fistps
and
ret
imull
sub
notb
dec
int3
aaa
stos
call
push
sbb
test
and
xchg
lcall
popf
adc
sub
mov
mov
in
pop
out
mov
pop
push
daa
sti
daa
or
sbb
dec
xchg
repnz
call
out
filds
jne
xchg
pop
out
insb
clc
mov
jmp
cmp
and
lcall
fnstcw
cltd
xchg
in
mov
lret
mov
xchg
or
cmp
gs
pushf
loop
jp
rcll
pop
mov
jo
mov
mov
mov
mov
inc
mov
xor
xchg
cld
sarl
repnz
sbb
or
xor
cwtl
enter
jmp
sub
arpl
ret
scas
stc
sbb
cmpsl
stos
enter
in
sbb
push
mov
nop
lahf
lret
push
inc
or
rcrb
fdivrp
sbb
sbb
lcall
inc
lods
leave
mov
jg
rcrl
dec
pop
pop
mov
and
add
sbb
movsb
add
or
pop
cmp
aad
mov
inc
fnop
lods
add
push
rorl
dec
test
and
loop
into
stc
adc
sbb
mov
rol
xlat
hlt
add
repnz
xchg
add
scas
das
mov
stc
inc
pop
jg
or
cmp
call
fnstenv
jne
loope
jnp
stc
cmp
out
les
and
mov
add
or
cmp
call
stos
ror
xor
adc
lods
decb
ljmp
cmp
pop
loop
xor
mov
into
imul
xchg
test
cwtl
sub
into
popa
inc
add
ret
mov
cli
mov
scas
fiaddl
sub
push
test
pop
jmp
xchg
add
jbe
cmpsb
or
outsb
jmp
push
mov
and
je
or
rolb
flds
adc
and
mov
ret
dec
pop
pop
jge
xchg
rolb
fs
or
cmp
mov
push
rclb
push
dec
inc
in
xor
and
pusha
xchg
push
fucomip
repz
sub
mov
mov
inc
mov
cmp
lret
inc
ja
aam
sbb
enter
jnp
das
mov
fidivl
jnp
cmpsb
push
sarb
aaa
push
sub
mov
jno
movsb
cld
dec
xchg
dec
scas
or
repnz
jo
xor
sub
sub
jp
cmp
dec
ds
pop
jb
aaa
or
clc
sbb
jle
cs
out
mov
movsb
push
in
push
pop
pop
or
icebp
ffree
aas
sti
pushf
xchg
in
inc
les
std
cmp
or
les
outsb
jmp
adc
jbe
lea
pop
push
xor
nop
mov
push
push
jmp
and
in
aam
push
inc
bound
sbb
xchg
cli
jo
mov
jbe
ret
rorb
lock
jne
lret
xor
and
xor
scas
mov
pop
sbb
aaa
pop
jecxz
int3
cmp
lock
cmpsl
mov
pop
push
mov
movsl
mov
mov
into
aam
insl
and
lds
rcr
and
push
pop
and
mov
lret
dec
sbb
add
pop
jl
inc
dec
or
pusha
adc
mov
lahf
js
fbld
push
mov
mov
dec
mov
fwait
and
pop
outsb
adcb
es
cmp
inc
fwait
pop
sub
pop
out
imulb
in
dec
pop
sbb
mov
ja
and
movsb
movsb
shrl
mov
pop
add
dec
addb
pop
movsl
or
mov
sub
addr16
mov
xchg
lahf
adc
mov
cmp
mov
sbb
popa
cmp
std
bound
push
into
fimuls
fucom
mov
push
jecxz
mov
dec
xor
cmp
in
lret
lods
push
popf
addr16
mov
add
jno
inc
pushl
mov
push
mov
in
daa
xlat
movsb
xor
js
lahf
push
es
pushf
mov
fistl
lods
test
cmpb
iret
push
flds
cwtl
loope
aad
pop
pop
cmp
sbb
pop
lahf
aas
mov
push
arpl
cs
and
xor
dec
mov
sahf
cmpsl
das
insb
mov
sub
lea
fidivrl
jmp
das
and
pop
push
dec
jecxz
xchg
and
mov
jp
rcll
xor
push
outsb
adc
jmp
dec
aaa
aam
dec
imul
sbbb
or
repnz
das
fdivr
das
cmp
jp
sahf
mov
in
fdivrs
cmp
aaa
dec
idivl
data16
pusha
cmp
stos
fstps
js
xor
sti
sbb
mov
and
into
stc
rcll
addr16
or
xchg
imul
jge
mov
mov
add
imul
pop
cmp
cmp
test
mov
xorb
add
adcl
mov
lcall
fstl
add
les
inc
frstor
mov
xor
iret
pop
cmp
aam
mov
sbb
testl
int3
cmpsb
iret
mov
sub
mov
arpl
xchg
lahf
leave
ja
push
sti
in
dec
jmp
add
add
das
xchg
enter
xor
sahf
push
das
xchg
inc
inc
pop
imul
mov
mov
fildll
sbb
inc
iret
dec
inc
xchg
mov
pop
jmp
sub
sbb
clc
aas
icebp
lds
gs
inc
rcrb
mov
shlb
push
cmp
add
inc
add
insl
ja
push
insl
cmc
jge
push
mov
xchg
subl
fdivs
into
insl
hlt
ja
dec
push
dec
rcrb
data16
mov
lock
pop
xor
lock
xchg
cmp
das
les
lcall
rol
jo
inc
mov
aad
mov
push
mov
sbb
enter
aaa
jmp
fisubrs
lds
call
sub
cld
jns
stos
loop
pop
cwtl
ret
cmp
rolb
dec
mov
pusha
push
out
enter
mov
push
sub
sub
in
push
or
outsb
arpl
push
test
aad
jne
popf
movsb
ret
lods
int3
sbb
sbb
xchg
xchg
dec
xchg
ljmp
and
mov
sub
les
mov
stos
xchg
jg
fchs
imulb
push
cmpsl
dec
fneni(8087
mov
test
pop
movsl
sub
cmp
mov
pushf
ret
hlt
add
lods
js
rcrb
in
ja
std
ret
pop
in
sub
cmpsl
aas
jle
push
inc
cmp
insl
and
data16
adc
pop
movsb
xchg
and
ds
rsm
hlt
ljmp
jg
aad
arpl
icebp
insl
sub
int
dec
push
jg
xchg
adc
fabs
out
dec
mov
je
ss
decb
xchg
out
inc
pop
pop
ret
xor
mov
scas
mov
jo
jo
xchg
fwait
int
test
xchg
xchg
fidivrs
cmpsb
in
adc
out
fisubs
loope
mov
addr16
cmpsl
push
push
lock
in
adc
or
rcll
and
jg
or
cmp
loopne
lock
test
mov
inc
stc
and
jo
mov
mov
add
sahf
lahf
icebp
push
jg
mov
aam
bound
xor
out
dec
popa
inc
aas
inc
sub
cltd
xor
aas
pop
dec
or
fdivl
and
xchg
sti
inc
gs
add
lcall
icebp
or
jo
les
sbb
aad
push
sub
sti
repz
or
clc
sbb
sub
jmp
call
sub
mov
jle
and
xlat
cmpsb
xor
pop
fstl
sub
mov
addr16
test
nop
lods
pop
into
mov
or
xchg
mov
fdivrs
aad
mov
imul
and
or
divl
idiv
add
rolb
pop
mov
cwtl
dec
mov
enter
mov
pushl
test
xor
jns
inc
bts
js
mov
insb
push
lret
mov
xchg
mov
scas
dec
or
std
add
jne
stos
gs
or
cs
adc
pop
mov
mov
test
insb
lahf
mov
std
fidivrl
add
inc
xchg
ret
mov
adc
dec
dec
mov
dec
fimuls
movntq
je
aad
in
push
mov
inc
mov
push
mov
std
sahf
cmpsb
xchg
dec
stos
or
sub
jbe
fisttpl
aaa
xor
mov
mov
mov
stos
push
cmc
loopne
out
rep
sbb
stos
outsl
insl
or
xchg
pop
and
and
mov
adc
sahf
adc
adc
and
je
or
mov
ret
arpl
adc
add
lret
pop
daa
mov
shlb
or
and
pop
dec
xor
add
mov
arpl
int3
push
loop
push
popa
xchg
dec
jmp
or
stc
jnp
sahf
mov
arpl
lods
mov
movsl
fidivrl
adc
jp
inc
sbb
push
push
inc
icebp
pop
jnp
pop
add
xchg
lds
jecxz
rclb
fdivrs
and
pop
xchg
stc
es
or
xor
and
mov
test
in
cs
out
test
xor
and
push
push
xlat
pop
jl
mov
ds
notb
inc
inc
pop
xchg
mov
lods
in
sub
adc
stos
ds
ja
fwait
and
jno
gs
out
cmpsl
imulb
xor
addr16
int
add
in
jns
jge
rorb
mov
xor
rcll
or
aam
mov
mov
loope
pushf
cs
pop
clc
cld
mov
lahf
and
stos
inc
mov
jns
ljmp
pop
push
fstps
out
or
lret
xchg
clc
mov
int3
and
cmp
popf
mov
xchg
and
cmc
shl
lds
pop
outsl
je
push
je
outsl
test
cmpsl
or
inc
and
insb
xor
push
dec
cs
rclb
movsl
cmp
sbb
fwait
in
ja
rcll
adc
int
adc
mov
mov
jle
mov
xor
add
and
sub
aad
dec
mov
addb
push
or
out
es
sub
or
ja
jmp
cmp
pop
call
push
push
dec
fwait
ds
imul
fldt
je
cli
negb
jbe
add
das
push
cmp
orb
lahf
jmp
mov
cmp
stc
adc
mov
cltd
iret
daa
fwait
pop
add
pop
fidivs
pop
shll
xchg
bound
push
and
mov
jl
repnz
sub
dec
out
jno
push
les
lods
repnz
pusha
mov
xor
sub
int
mov
test
cld
mov
or
and
pop
daa
ds
adc
loope
xor
dec
jae
popa
add
outsl
mov
cli
stos
idivb
les
movsb
jb
clc
test
rclb
rorb
mov
movsb
leave
mov
pop
scas
cmp
push
cli
xchg
outsl
jb
mov
testb
or
das
cmp
cmc
sar
iret
ret
sub
pop
daa
push
sub
ds
add
hlt
jns
adc
xchg
xor
mov
jo
mov
pop
outsb
lea
pop
stos
add
pusha
fadd
cmp
push
or
fs
add
or
push
loopne
dec
dec
jae
and
es
test
cmpsl
mov
add
sbb
movsl
faddl
xor
out
notb
cmp
add
stc
push
out
xchg
sti
push
lods
outsb
mull
add
emms
sbb
rcll
into
xor
repnz
int3
and
andb
push
push
dec
cmp
loope
lea
xor
or
pop
xchg
fs
mov
push
add
dec
xchg
arpl
or
in
rolb
mov
cwtl
push
xor
and
jbe
push
cmp
cmp
xlat
outsl
jp
xchg
lods
cmc
int3
fidivs
dec
into
in
xor
enter
cmp
sub
xor
mov
jmp
inc
fwait
add
cld
ljmp
mov
aaa
mov
sub
xchg
out
sub
mov
in
inc
inc
sbb
rcr
mov
icebp
mov
or
bound
cmp
dec
xchg
cmp
or
dec
lcall
add
aad
adc
sub
cmp
jns
xor
pop
test
adc
mov
mov
cmpl
lret
push
pushf
lcall
fsubrs
pop
jle
outsl
test
shr
ds
daa
in
cmp
mov
ja
popf
int3
loopne
shrl
ljmp
mov
test
in
cmpb
jae
add
ljmp
jb
jbe
fsubs
adc
popa
jo
or
or
dec
int
mov
fisubrs
adc
add
loope
jne
sahf
jmp
js
dec
cmp
gs
push
cmp
pop
enter
mulb
std
loop
in
in
jo
jbe
aad
mov
sahf
mov
data16
popf
jl
pop
pop
les
mov
adc
pop
add
mov
xchg
adc
xchg
sbb
jns
pop
push
clc
dec
lds
mov
cmpsb
icebp
inc
int3
xchg
mov
cmp
xor
pop
je
je
insl
mov
push
xchg
pushf
xor
xor
push
xchg
adc
jb
ret
dec
mov
push
cltd
inc
jge
push
pop
cmc
xchg
sub
xchg
mov
fs
notb
sbb
sbb
mov
mov
popa
adc
icebp
repnz
ficoml
xor
insb
cmpsl
rcrb
shrl
lret
mov
jg
aam
inc
pop
lods
push
out
ljmp
pop
xchg
js
push
dec
inc
js
jno
jae
fsts
shl
pop
call
lock
loope
fistpll
lods
sbb
aad
maxps
int
push
pushf
aas
int3
mov
call
fstpt
imul
add
outsl
lds
adcb
mov
push
es
aam
fstpt
and
add
jecxz
int3
xchg
mov
mov
push
sub
shl
lds
mov
je
aam
jno
pop
out
mov
jg
cs
je
sbb
leave
shll
xchg
xor
lock
fcomip
xlat
into
xor
cmpsl
or
popa
and
jp
das
shlb
int
mov
sbb
test
pop
dec
stos
push
push
mov
dec
and
fimull
or
std
lea
dec
std
aad
jbe
je
xlat
leave
cmpsl
pop
repnz
sarb
aad
dec
dec
jne
call
fidivl
xchg
and
jae
or
pop
jmp
loop
xor
cmp
mov
sbb
cmp
enter
addl
xor
lea
xlat
and
xchg
imul
imul
aam
jecxz
push
leave
xor
shlb
in
repnz
adc
xchg
rcr
cmp
cmp
jmp
sbb
jo
test
sub
cmpb
lret
mov
xchg
daa
or
inc
push
subl
je,pt
insl
xchg
loope
cmp
push
pop
pop
add
in
pusha
cmp
pop
not
popf
pop
movsb
adc
adc
icebp
sub
and
jae
lods
popa
call
imul
out
mulb
fs
aas
pop
ficoml
pop
pop
mov
mull
push
popf
add
mov
mov
cmpsb
mov
inc
idivb
icebp
xchg
in
pop
xor
adc
cli
ret
xchg
pop
xor
rorl
fisttpl
test
je
mov
inc
insl
adc
lcall
push
js
mov
outsb
lea
not
scas
sub
inc
cmp
adc
sub
mov
in
insl
movsl
or
sbb
and
or
insl
addl
jle
xchg
jno
sbb
xchg
mov
jne
aaa
test
imul
enter
cmp
mov
xchg
jl
sbb
faddl
imul
xchg
and
loopne
add
mov
gs
and
jecxz
sbb
in
ret
cld
mov
dec
jl
jae
hlt
mov
mov
add
dec
retw
mov
fsubl
sar
xchg
bound
sbb
movl
rcrb
sahf
jge
cmp
call
mov
das
mov
sarl
mov
push
pop
push
jl
lret
mov
xlat
mov
call
lret
lret
cld
mov
cmpb
and
push
iret
adc
mov
mov
mov
call
nop
inc
push
iret
out
xor
cmc
or
js
jecxz
xchg
xchg
dec
outsl
cs
or
scas
aas
fnstcw
lret
push
inc
data16
mov
shlb
lcall
sti
stc
jns
inc
jbe
mov
insl
inc
repz
hlt
in
fildl
add
dec
popf
loop
inc
inc
xchg
jg
add
mov
jmp
mov
lds
adc
mov
push
popf
jb
popf
jmp
aaa
inc
mov
arpl
or
push
decl
pop
fcmovnu
push
pop
in
mov
mov
inc
sbb
jmp
pop
shr
or
scas
and
push
or
sahf
divl
add
pushf
push
arpl
push
sub
leave
xchg
jb
jae
das
das
jo
xchg
int
dec
jne
popa
inc
cld
push
cmp
pop
cmpsb
cwtl
stos
dec
es
out
pop
mov
or
fisubrl
out
repz
mov
ret
xorb
jl
add
sub
jmp
repz
lcall
mov
pushf
enter
dec
xor
ss
cld
out
add
aaa
inc
mov
jg
sti
sbb
outsl
mov
dec
lret
icebp
push
int3
mov
dec
pop
repnz
test
cmpsb
xor
push
lock
ds
mov
shlb
cli
push
sub
push
xor
xchg
ljmp
popa
pushf
xchg
xchg
fnstenv
push
mov
jb
mov
movsb
stc
scas
leave
dec
ret
je
imul
fisubrl
sbb
pushf
ret
lods
xorl
cmp
or
sbb
mulb
and
lds
mov
enter
dec
mov
adc
cmpsb
jbe
cmp
mov
add
mov
out
dec
sbb
repnz
data16
dec
push
sub
push
enter
mov
mov
push
mov
and
push
fistpll
lds
divl
loope
enter
rolb
cmp
test
dec
mov
jl
jecxz
nop
xor
jo
mov
pop
or
inc
mov
jle
xlat
xor
icebp
cmp
loopne
icebp
xchg
scas
scas
dec
push
mov
out
scas
dec
ja
or
add
in
imul
cmp
add
add
popa
js
adc
sbb
imul
cmp
insl
adc
pop
test
push
push
mov
mov
jo
mov
cmp
mov
or
fwait
in
cmp
pop
dec
fidivrl
inc
pushf
pop
rorb
mov
adc
push
cmpsb
clc
push
cmc
scas
lret
fs
popf
xor
mov
scas
mov
mov
imul
jge
mov
sub
push
or
out
mov
insl
sbb
pop
mov
sub
inc
movsb
adc
xorl
dec
jne
enter
push
cmc
push
in
jo
dec
cmp
rcr
cmc
cmp
shll
or
adc
cli
sub
or
lret
adc
lods
or
movsl
adc
mov
fwait
inc
dec
inc
mov
aad
or
shrb
sahf
inc
in
pop
test
mov
addr16
cmpsb
rcrb
scas
int3
shll
icebp
mov
test
test
fidivrl
adc
xchg
pop
test
xor
dec
dec
fwait
pop
mov
aas
cwtl
add
jmp
inc
jl
mov
xchg
mov
mov
lea
add
cltd
dec
cmpl
sub
gs
daa
cld
xor
loop
jmp
mov
lahf
cmc
in
movsl
mov
and
jg
jbe
push
mov
push
mov
movsb
push
xor
mov
mov
push
adc
test
pop
pop
push
stos
cmpb
aas
stos
lahf
jnp
cmp
xchg
jnp
cmpsl
fsubs
sahf
pusha
mov
jecxz
lret
frstor
mov
out
cli
adcl
sbb
pop
outsl
movsb
adc
inc
imul
xor
repz
xchg
repz
jns
push
add
mov
pusha
imul
or
imull
pop
mov
les
sbb
sub
test
push
mov
jno
adc
out
sti
xor
and
xchg
ljmp
dec
pop
pusha
jmp
imul
scas
jnp
std
pop
dec
out
cltd
arpl
out
fisttpl
mov
cwtl
xchg
outsl
pop
jno
pop
cmp
sub
ds
in
out
and
mov
pop
jle
mov
jo
dec
xchg
adc
xor
loop
sbb
std
mov
mov
stc
mov
repz
movsb
or
dec
pop
js
insb
lods
dec
or
sbb
mov
out
gs
push
adc
cmc
jmp
outsb
cmp
not
paddd
les
data16
mov
pop
cs
jnp
sbb
loopne
and
push
jne
das
cmp
jge
jnp
dec
xchg
inc
les
mov
inc
sbb
cltd
add
scas
xor
cltd
pop
or
enter
jne
push
dec
cmc
mov
test
rol
std
cmp
pop
std
lcall
scas
mov
mov
sub
into
and
push
sub
mov
sub
pop
testb
jns
lds
adc
test
add
xchg
lcall
shll
lret
in
mov
es
cmp
jb
cmp
mov
cmpsl
cmp
mov
mov
push
jns
sub
adc
cli
jne
sub
and
dec
sbb
mov
ret
mov
pop
ret
dec
out
mov
pop
sub
test
dec
ljmp
or
pop
loop
or
adc
jecxz
in
mov
push
jno
dec
enter
or
data16
add
inc
lcall
aam
sbb
jae
adc
in
xor
mov
lahf
mov
rcll
pop
stc
dec
add
lret
ss
mov
mov
jge
fst
aad
lret
popa
jp
cmp
sbb
int3
push
faddl
mov
push
cmc
cmp
fidivrs
xlat
mov
outsl
push
ret
jb
pop
bound
sub
inc
adc
insb
aaa
out
push
pusha
push
push
je
frstor
mov
ror
imul
inc
jecxz
pusha
test
dec
faddl
xor
cld
outsb
scas
sti
cmp
xor
xor
fcompl
icebp
divl
mov
pop
sub
jecxz
aam
mov
add
xlat
out
cwtl
cmp
in
xchg
fdivl
lds
fildl
mov
or
aas
push
cld
dec
fcoms
xchg
push
sub
xor
jb
test
push
mov
jg
inc
rcll
iret
leave
xchg
dec
lods
push
or
jmp
and
xchg
in
xchg
mov
sub
jae
mov
bound
rorl
and
out
inc
mov
outsl
cmp
push
jmp
and
aaa
push
sbb
push
sbb
adc
inc
daa
out
pop
mov
sbb
pop
jo
pop
scas
out
loop
xor
inc
add
loopne
repnz
cmc
jmp
sbb
jns
jmp
lds
sahf
xchg
xor
fwait
sub
push
pushf
xor
mov
cmp
xchg
repnz
out
xchg
jbe
insl
out
leave
out
jecxz
mov
mov
jmp
stos
jae
lock
cmpsl
push
inc
cld
into
jecxz
add
pushf
loope
in
push
imul
xor
ficoms
dec
pop
jmp
in
mov
je
push
mov
add
or
sar
mov
and
fcomps
xlat
push
pop
mov
dec
xor
hlt
ljmp
aad
sbb
les
xor
imul
adc
negb
sub
mov
adc
stos
jbe
mov
cmp
xor
sahf
aad
les
aad
jg
loope
ret
sub
cmpsb
cmp
sbb
cmpl
jg
pop
stc
pop
call
notl
inc
mov
or
add
dec
lods
in
popa
sbb
dec
cmpsl
xchg
mov
pop
sub
leave
pusha
xor
dec
dec
ret
jp
mov
adc
pop
clc
push
out
sbb
test
leave
cmc
out
jge
dec
pop
mov
cmpsl
call
mov
std
test
push
pop
out
stos
xchg
add
mov
mov
lods
frstor
clc
pop
jecxz
pop
and
pop
lods
xchg
mov
fbstp
movsl
gs
aad
subb
sub
fisttpl
add
bound
mov
jg
sub
subl
add
fsubp
and
add
cli
sub
xchg
cmpsl
cmp
imul
inc
push
test
jg
int3
sarl
sbb
leave
stos
pop
fcoml
cmp
push
inc
outsl
xchg
movsb
ss
mov
cwtl
jo
lahf
jge
mov
jne
inc
dec
pop
sub
xor
sub
ret
inc
cmp
iret
pop
ja
xor
lret
mov
jae
push
sub
lahf
rcr
mov
gs
inc
ss
and
rcl
int3
push
jnp
mov
scas
xor
and
ljmp
call
out
xchg
cli
adc
iret
sbb
sub
cmp
mov
fimuls
ss
cmpb
es
cmp
dec
sti
insb
push
pop
add
mov
imul
jo
jnp
or
jo
pop
adc
dec
popa
in
xchg
mov
mov
xchg
jge
pop
inc
or
sub
sub
ja
les
mov
addr16
and
arpl
fs
xchg
fsts
mov
cltd
or
sti
mov
in
sub
out
cs
cmp
js
xor
mov
mov
dec
pusha
iret
push
scas
fistl
in
lds
shl
mov
lea
or
sti
push
pop
sahf
mov
mov
imul
popf
mov
mov
rorl
jbe
sub
ljmp
mov
mov
add
mov
pop
decl
push
pop
add
pop
sbb
cmpb
addb
add
arpl
sub
inc
sahf
into
test
and
xorb
fwait
lcall
mov
xchg
je
popa
xchg
js
jae
imul
sub
fwait
and
jbe
sub
xchg
out
push
sub
inc
push
into
dec
or
rorb
jb
ret
lds
xchg
cltd
leave
es
xchg
push
sbb
popf
lret
stc
mov
push
ret
faddl
imul
test
pop
mov
mov
add
or
test
divl
sub
add
jp
in
lcall
xchg
mov
mov
arpl
scas
push
jl
add
or
je
cli
test
sub
testl
loop
jo
arpl
dec
notb
pop
fwait
std
sbb
push
into
push
repnz
ljmp
in
ficoms
sar
dec
jb
lret
aas
lea
xlat
pop
dec
mov
mov
cmp
imul
subl
inc
mov
pop
inc
mov
xor
addr16
aas
andl
jns
mov
jns
dec
lods
mov
cmp
mov
mov
std
xchg
pop
jge
enter
cltd
lret
enter
push
xchg
test
dec
inc
adc
inc
mov
cli
dec
xchg
lea
xchg
adc
out
adc
imul
inc
xor
into
jl
adc
xor
inc
adc
test
adc
movaps
into
or
push
jge
fnstcw
mov
addr16
or
sbb
dec
mov
test
jbe
xor
pop
in
or
cmpsl
ror
fistps
imul
push
in
jne
popf
sbb
sarb
xor
pop
pusha
xchg
stc
or
repz
stc
std
sub
std
xor
sub
ja
dec
outsb
mov
mov
pcmpgtd
cli
jp
pop
mov
mov
dec
xor
aaa
push
scas
rclb
cmp
ljmp
arpl
test
popf
out
cwtl
popa
push
mov
pop
iret
jle
or
iret
push
mov
sub
in
insb
dec
test
hlt
xlat
shll
cmpsl
sub
jo
or
sub
roll
in
mov
out
arpl
cwtl
gs
sub
mov
packsswb
cmp
gs
and
mulb
mov
add
add
in
test
stos
adc
dec
pop
lds
sub
lret
xchg
mov
xchg
push
lahf
pop
push
xchg
xchg
lahf
lds
test
add
adc
lcall
push
fwait
movsb
mov
inc
stos
adc
jge
pop
call
mov
xchg
jl
add
daa
push
outsb
jecxz
pop
enter
push
das
je
jns
mov
ljmp
into
push
sbb
popa
mov
lods
aas
push
inc
call
cmp
dec
fwait
aam
xchg
sub
shll
stc
stos
and
dec
xchg
shll
mov
scas
mov
or
inc
xor
cmc
cwtl
or
inc
int
repnz
icebp
pop
sub
pop
mov
push
cmpsl
dec
inc
ljmp
push
mov
stos
inc
xchg
imul
jo
cmp
mov
cmp
and
mov
jns
jge
lock
aad
lods
or
xor
cmp
xor
mov
iret
in
pop
or
jne
sub
mov
arpl
loopne
scas
addr16
je
ds
push
outsb
lret
int
pop
std
fsts
jno
xchg
test
leave
das
loop
sub
sub
push
rcrb
shrl
ror
adc
sbb
jnp
test
hlt
out
jg
sub
pop
jecxz
and
call
push
inc
cmovg
stos
rclb
inc
cmpsl
mov
mov
mov
jbe
imul
fstps
mov
fcomp
push
out
test
and
daa
pusha
mov
cwtl
movsb
jmp
loope
ljmp
pop
pop
jecxz
lahf
fs
ret
mov
stos
inc
imul
cltd
cmp
cwtl
push
pop
cs
adc
fdivrs
leave
push
idiv
lret
mov
sbb
ljmp
xchg
pop
pop
fidivrs
iret
mov
sbb
mov
xlat
loope
mov
mov
adc
xchg
insl
add
pusha
inc
ret
pop
addr16
mov
mov
outsl
loopne
ss
and
and
cmp
adc
sub
mov
pop
inc
lahf
movsl
das
adc
jmp
arpl
stc
sti
jl
xchg
sbb
lahf
notb
cwtl
mov
jp
es
test
in
inc
imulb
in
out
lcall
mov
cmpsl
dec
add
dec
push
mov
jecxz
cmp
sarl
cmc
jecxz
dec
lods
dec
xor
pop
xchg
je
jmp
popl
dec
or
mov
inc
mov
es
sub
push
mov
cmp
je
sub
inc
and
lock
cmpsl
lahf
push
idivb
in
or
in
clc
sbb
xchg
jg
push
or
faddl
popf
mov
icebp
sbb
fsubrl
or
fists
cmp
sub
mov
pop
add
stos
or
pushf
inc
dec
pop
lock
imul
mov
xlat
in
sbb
jbe
fs
lods
pusha
shll
lods
inc
ja
rorl
xchg
xchg
fistpl
data16
fcoml
xor
cmp
test
cmpsl
adc
pop
cmp
or
lds
leave
rclb
in
dec
sbb
popf
inc
inc
pop
nop
inc
js
test
sbb
ret
pop
sarl
xchg
mov
inc
gs
sub
pop
mov
or
mov
sbbl
inc
movsb
test
push
mov
and
push
aam
push
pop
add
stos
mov
lds
dec
or
in
xor
pop
xor
stc
add
stos
pop
xor
mov
add
or
or
push
mov
dec
pusha
jg
jg
pop
lods
idivb
gs
mov
cmc
mov
insb
cs
test
sub
aad
sbbl
jb
mov
xchg
xchg
es
push
push
cmpl
inc
fwait
ss
mov
jb
hlt
mov
ja
lds
xchg
sub
fisttpl
ja
pop
sar
lret
fs
sti
mov
gs
out
push
or
mov
mov
mov
inc
xlat
stos
xorl
arpl
repz
xchg
scas
les
je
lock
mov
js
and
push
and
xor
scas
stos
daa
sarb
mov
test
sub
fisttps
dec
adc
and
mov
lods
sbb
stos
sahf
pop
pop
jne
mov
sti
push
jge
and
loope
inc
pop
jp
shrb
aaa
jmp
xor
mov
or
pushl
aaa
fsts
js
addr16
xor
xlat
xchg
lds
jo
mov
sahf
fildll
inc
jno
pop
mov
movsl
sbb
cmp
gs
sbb
jb
xor
inc
cmpsl
dec
xchg
or
mov
xor
or
loope
andl
inc
jo
pop
enter
or
or
mov
pop
push
ds
enter
idiv
leave
repz
adc
cmp
sub
aam
inc
sub
xor
adc
rcrb
stos
add
sub
cld
sub
jge
movsb
hlt
rclb
mov
fcmovnb
fidivrs
pop
xor
repz
insl
mov
xor
add
scas
stos
loope
lock
addr16
mov
scas
repnz
pop
or
insb
sbb
adc
jecxz
sbb
xchg
cmp
test
daa
int3
aad
cmp
dec
imul
mov
out
push
in
fists
pop
cmp
inc
mov
xor
mov
jecxz
or
mov
mov
cld
lahf
xchg
fdivrp
fdivrs
gs
sub
test
xor
dec
jg
orb
cli
mov
lret
test
arpl
sbb
ret
mov
jno
fcmovne
cmpsl
pop
inc
loopne
call
lods
and
movb
mov
adc
imul
mov
push
pop
out
xchg
jmp
aam
inc
push
test
jae
mov
cmp
xor
push
add
mov
jmp
push
fldenv
add
imul
jg
xor
jne
xor
add
out
cmp
repz
pop
sub
cmpsl
sbb
cmp
daa
lcall
ret
int
shl
fwait
iret
adc
cld
jbe
xor
in
lds
mov
enter
cs
push
sub
out
mov
addr16
mov
add
and
call
js
sub
xor
ret
roll
cltd
xchg
add
push
push
ljmp
pop
mov
stc
movsb
cli
cmp
xchg
mov
clc
out
leave
sti
or
in
cwtl
or
in
dec
test
loop
adc
ljmp
xorl
decl
jg
nop
clc
lahf
rcll
addr16
add
inc
pop
mov
sahf
hlt
or
jg
sbb
jl
sub
mov
fildl
out
mov
rclb
pusha
pop
arpl
jb
sahf
lea
lds
mov
mov
and
mov
jp
xchg
cmc
and
lods
xchg
mov
ljmp
insl
pop
fs
in
inc
adc
iret
mov
mov
pop
fwait
cmpsl
cld
aaa
xchg
cli
cwtl
es
mov
int
mov
push
xchg
outsl
sbb
lock
mov
pop
int
xchg
pop
sub
pop
xor
and
enter
or
scas
lods
push
pop
iret
out
jle
push
cmp
in
stos
sub
loope
inc
sahf
cmp
into
lock
jg
sub
cmpsb
test
sarb
mov
pop
cmp
sbb
mov
xchg
jbe
popa
mov
xchg
push
fsubrp
jbe
sub
adc
test
pusha
jns
push
jnp
push
fwait
outsb
lret
lcall
add
mov
lret
mov
scas
jbe
inc
adc
push
lea
das
popf
mov
test
mov
jg
lret
cltd
movsl
hlt
orl
test
sub
imul
adc
gs
test
sbb
pop
int3
and
mov
dec
adc
out
mov
xchg
aad
cmp
xor
roll
scas
add
es
nop
mov
cmp
mull
lcall
add
push
add
insl
fdivrl
xor
fbstp
fisubs
mov
push
popf
dec
xchg
in
push
cs
fldenv
insb
xlat
mov
push
popf
stc
adc
ret
outsb
cwtl
loope
cltd
int3
bound
imul
in
or
dec
mov
pop
loopne
cld
addr16
adc
xor
jp
xchg
xchg
ljmp
lcall
dec
sub
fcmove
jecxz
cs
lret
xchg
repnz
out
insb
inc
sub
sub
cmp
cmp
shrb
mov
pusha
push
xchg
push
lods
inc
jl
popf
jo
gs
leave
jecxz
ret
movsb
sti
ja
test
xchg
and
popf
lret
jns
pop
in
and
sbb
pop
fldl
fwait
data16
in
imul
push
push
into
dec
lret
or
push
clc
lahf
cld
pop
or
adc
adc
in
aaa
push
ja
sub
les
clc
pop
movsl
add
aam
outsb
cmpsb
fnstsw
out
mov
adc
mov
sub
loopne
mov
cmpsb
and
pop
sbb
iret
fildl
mov
outsl
sub
in
insb
in
shll
stos
and
inc
outsl
sub
lcall
xor
rorl
lret
sbb
fnstenv
fidivl
adc
lods
xchg
jo
imul
xor
jl
hlt
adc
sub
xchg
fnsave
aad
enter
pop
les
jge
or
or
cmpsb
lock
lods
roll
adc
sbb
int3
fnstenv
mov
mov
cmp
mov
stc
pop
mov
test
cmp
repz
dec
mov
aad
sbb
push
cwtl
outsl
aas
addl
xchg
or
jle
cmpsl
shll
outsb
pop
cmpsb
inc
lds
mov
stos
jmp
outsb
inc
lret
mov
adc
std
or
xchg
xchg
mov
push
inc
repnz
add
imul
cmpsl
xorl
pop
scas
inc
or
mov
pop
sbb
movsl
fldln2
idiv
movsl
das
xchg
outsl
add
push
add
inc
stos
shlb
ss
mov
mov
fdivrs
scas
mov
test
fidivrs
adc
stos
push
dec
lret
or
out
setge
lods
ret
enter
sbbb
lods
in
cwtl
aas
jp
sub
cmp
stos
cmp
ds
push
dec
or
jne
mov
inc
sbb
imul
pop
sbb
dec
jecxz
roll
stos
push
lret
mov
scas
sbb
out
adc
ret
xor
cld
movsb
or
inc
sbb
jae
inc
jg
arpl
push
inc
cmp
sub
push
or
adc
jo
fcompl
mov
fs
and
popf
xchg
scas
imul
movsl
jp
cltd
je
push
add
or
jb
xchg
pop
dec
mov
arpl
push
and
pop
jno
cmp
xlat
sar
out
inc
mov
sbb
cmpsb
pop
stc
pop
xor
add
cmpsl
outsl
iret
out
sbb
hlt
push
fcomi
mov
icebp
or
xacquire
in
pop
test
push
and
aad
jmp
dec
sub
cs
fisttpll
cmp
addr16
out
mov
in
sbb
cmp
dec
imul
jbe
jle
or
in
mov
mov
push
jmp
popf
pinsrw
daa
mov
mov
shll
iret
test
pop
jnp
cmp
and
subb
dec
cmpsl
push
adc
addb
repnz
jle
pop
lds
lods
int
fs
cmp
xlat
sbb
cmc
je
or
adc
lret
test
lea
mov
push
fucomp
in
xchg
xor
lcall
in
xchg
lea
xor
cmpb
jnp
lret
cmp
jnp
unpckhps
mov
dec
loop
xchg
xchg
pop
out
je
std
push
sub
bound
fidivs
add
mov
xchg
push
sub
imul
bound
inc
add
xor
lret
xor
pop
icebp
ss
mov
pop
bound
xchg
mov
sbb
pop
ljmp
inc
xchg
ret
sub
mov
int
pop
adc
fisubl
cld
rcrb
mov
mov
in
es
or
sub
add
adcb
bound
das
rcrb
inc
push
cli
jno
mov
push
aaa
xchg
lret
ret
loop
mov
mov
outsb
orb
push
imul
mov
pop
repnz
std
insb
test
mov
out
adc
pop
stos
dec
sbb
inc
dec
fsubr
loop
lcall
inc
daa
das
pop
cmp
xchg
rorb
inc
int
and
xchg
call
and
dec
addr16
xchg
xchg
mov
arpl
push
sub
jns
inc
in
fisubrs
or
mull
dec
dec
jne
repz
mov
inc
aad
inc
nop
sbb
xchg
xchg
mov
add
imul
inc
jle
rclb
cmc
jl
in
inc
mov
push
scas
sub
movsl
sub
sub
enter
xchg
testl
xchg
lahf
lock
adc
mov
das
xor
or
mov
test
sbb
or
iret
addb
mov
outsb
sarb
fs
push
in
lcall
icebp
xor
mov
adcl
mov
jbe
sub
inc
adc
pop
sub
mull
aad
in
movsl
inc
scas
xor
inc
addb
test
arpl
ljmp
in
push
cmp
and
push
pop
lret
push
jb
test
mov
sbb
adc
sub
test
pop
mov
xchg
mov
lret
sub
pop
pop
test
repnz
iret
sub
lods
pushf
call
aad
pop
xchg
xor
xchg
shll
pushf
nop
adc
push
test
xchg
xchg
aam
pop
scas
mov
movsl
nop
jns
jo
mov
fdivr
jae
jb
fists
xchg
ficomps
push
je
dec
hlt
lds
pushf
iret
lods
sub
hlt
jne
popf
sub
mov
jmp
pop
imul
inc
lret
loopne
mov
inc
test
jge
mov
sarl
movsl
in
sbb
add
mov
in
inc
pop
lea
mov
fiaddl
mov
jae
cmp
arpl
push
fisubrl
push
js
add
fstps
jb
mov
mov
pop
sub
pop
lea
ja
mov
or
and
cmpl
mov
js
iret
and
enter
jmp
add
mov
rolb
push
inc
bound
movl
scas
insb
cmp
jg
fists
sbb
mov
sub
mov
mov
xchg
shrd
xor
jmp
jg
add
in
cmpsl
mov
cmp
in
jle
das
xchg
sbb
sbbb
in
mov
out
mov
add
jg
negb
xchg
xor
int
mov
int
inc
and
or
ja
rcll
inc
xchg
mov
movsb
adc
mov
aaa
push
rcll
into
inc
divb
jp
rcrl
push
mov
pushf
or
xchg
mov
incl
cwtl
movsb
in
lcall
adc
in
aas
cli
testl
ja
inc
pop
fiaddl
jno
fstpl
and
stc
cld
ljmp
mov
jg
popf
jp
pop
mov
pop
bound
or
xchg
push
mov
or
jo
jg
pop
sub
lods
ja
xor
sbb
or
lods
sbb
addr16
push
sub
ret
cmpsb
iret
and
push
fistpll
popa
xor
pop
orb
or
sahf
ficoms
pop
adc
sbb
push
sub
ss
andb
stc
lock
cmp
jae
xchg
inc
push
insl
adc
stc
mov
adc
xlat
mov
xor
pop
cs
or
pcmpeqd
int
pop
push
cld
dec
add
dec
pusha
jnp
and
or
jbe
test
mov
ss
mov
jg
inc
scas
jecxz
or
cmc
dec
addb
jge
call
mov
mov
or
mov
inc
dec
test
outsb
pop
dec
push
add
mov
add
or
orl
out
ficoml
and
sbbl
sub
inc
and
ret
dec
xor
addr16
lret
test
xchg
push
mov
jge
xchg
js
popf
stos
cli
sarb
pushf
xor
lods
insb
dec
mov
loope
fcom
outsl
into
sbb
popf
and
sub
call
inc
dec
or
mov
add
and
pop
shlb
cmp
int3
outsb
lock
add
jp
inc
test
push
sub
arpl
xorb
ficoms
sbb
cmpsl
jmp
loop
pop
out
fsubrl
lds
fucomi
fisttps
jle
aad
pop
xor
mov
xor
loop
dec
xor
orb
fs
cmpl
mov
mov
ds
lods
lock
cmp
cmp
xor
dec
popa
int
inc
cmc
jge
mov
ficompl
pop
movsb
sbb
push
loope
mov
push
sub
mov
pop
mov
jge
xchg
or
in
popa
js
mov
mov
cmpsl
mov
out
jae
dec
clc
pushf
jno
pusha
loopne
push
lods
xor
xlat
aad
sub
das
cmpsb
sbb
and
enter
rclb
push
pushf
jb
sub
push
rorl
nop
jno
push
add
jle
stc
mov
jg
movups
xchg
jo
bound
outsb
adc
leave
icebp
and
leave
inc
push
xchg
subl
mov
data16
in
out
mov
jl
inc
jmp
fildll
add
xchg
cld
jnp
mov
ja
mov
popf
sub
int3
jns
push
notb
mov
mov
out
xor
xchg
xchg
daa
add
shrl
mov
fcomip
xor
je
pop
push
fidivl
fbstp
push
in
cli
sbb
negb
cmp
jle
dec
inc
popf
cwtl
fs
jle
xor
push
insb
fidivrl
mov
cltd
clc
movzwl
es
aad
test
inc
ljmp
shll
repz
adc
sbb
outsb
out
xor
sub
hlt
xor
mov
rolb
mov
dec
sub
jb
xchg
test
lahf
arpl
and
hlt
xor
cmpsl
dec
lods
sbb
mov
enter
push
outsb
mov
repnz
rol
cmpsl
hlt
xorb
xchg
cld
loopne
popf
aas
add
scas
dec
sbb
mov
into
pop
xorb
push
pop
stc
pusha
push
lds
popf
out
out
in
sbb
fisubl
pop
loop
adc
fwait
adc
icebp
mov
push
pop
inc
shll
pop
push
pop
pop
leave
mov
cs
and
je
cmp
nop
clc
push
and
test
push
test
inc
sbb
jae
ds
xchg
mov
mov
dec
stos
insb
and
mov
xor
mov
divb
jg
stos
out
std
and
dec
je
mov
jno
iret
or
ret
pop
ljmp
addb
repz
pop
push
lret
dec
sub
ja
xor
mov
adc
movsb
mov
jbe
imul
inc
mov
xchg
adc
pusha
mov
loopne
jecxz
testb
pop
ja
std
xor
sbb
pop
stos
les
lds
fstl
jb
and
inc
xchg
loopne
ja
mov
mov
xor
adc
sub
inc
push
sbbl
adc
lods
imul
and
and
sbb
inc
add
rorb
adc
movsl
adc
pop
das
and
sub
pop
les
shr
iret
bound
fs
aaa
sti
push
faddl
cltd
das
pop
pusha
repnz
in
jle
or
jns
cwtl
mov
xor
add
pusha
idiv
cmp
mov
mov
mov
fistpll
mov
xchg
sahf
add
insb
pushl
addl
pop
cmp
ret
into
aas
lods
adc
mov
jmp
aad
push
test
mov
mov
xlat
rolb
data16
leave
rorb
cmp
xchg
fwait
xchg
je
ja
orl
test
repnz
je
adc
dec
int
sub
or
mov
fstpl
in
ljmp
jns
jecxz
push
sahf
add
call
mov
cmp
pop
add
pop
add
inc
jge
lods
sub
push
fsubl
jno
leave
adc
push
sub
mov
lcall
repnz
jno
push
push
or
xor
pop
xor
shrl
in
mov
test
mov
mov
pop
test
cmpsb
lods
ljmp
cli
leave
inc
jne
xchg
cwtl
lahf
mov
add
scas
and
jns
xor
mov
push
orb
out
jg
inc
push
xchg
adc
jae
lcall
negl
push
jl
adc
mov
mov
subl
fcmovb
jo
pop
xchg
out
xor
xor
call
int3
int
push
xor
pop
adc
ss
outsb
jg
rcrl
lods
and
cmp
sub
loop
push
lret
and
mov
adc
loopne
pop
sbb
mov
inc
sbb
insl
fisttps
ret
mov
or
and
pusha
js
pop
jnp
sbb
jl
out
xor
je
pop
jnp
xrelease
add
sti
xchg
pop
push
mov
mov
jns
sbbl
int
inc
sarb
lret
jo
jne
dec
insl
push
dec
sub
dec
out
ljmp
push
sar
call
xchg
shrb
in
cwtl
jne
jg
mov
pop
xchg
push
push
movsl
push
mov
cmp
or
push
aas
test
adc
mov
lock
ret
add
push
mov
sbb
sbb
mov
hlt
add
xor
jle
inc
add
mov
data16
in
sub
sub
xchg
pushl
adc
aad
in
fnsave
mov
rcll
adc
fdivp
test
ja
mov
xchg
mov
sbb
and
pop
aaa
pop
dec
pusha
jmp
popa
imul
clc
shlb
addr16
add
dec
rcll
cltd
repz
imul
insl
add
pushf
push
into
and
sbb
testl
ror
inc
xchg
mov
pop
sub
pop
or
leave
jle
mov
lods
scas
and
adc
in
sti
bound
aad
jno
enter
pusha
add
mov
and
xor
sbb
int3
xor
lret
mov
push
stos
aad
outsl
jg
mov
sysexit
cmp
mov
pop
inc
sub
test
mov
jae
subl
mov
mov
in
hlt
fildl
adc
outsb
jns
push
adc
scas
test
out
mov
loop
out
jbe
fwait
inc
cmp
nop
and
push
sub
or
outsl
fwait
aad
pop
gs
inc
call
sub
xor
lods
mov
mov
push
xchg
inc
mov
and
rcll
mov
pop
stos
mov
int3
das
pusha
push
jbe
in
rolb
add
adc
push
mov
leave
jbe
movsl
adcb
push
mov
inc
sbb
mov
loop
dec
inc
sbb
fdivr
dec
out
xchg
push
jl
imul
mov
push
leave
hlt
rclb
mov
push
imulb
lret
outsl
ja
pop
cli
jae
sub
pusha
pop
loope
leave
fadd
mov
cld
sahf
lods
push
xor
pop
push
daa
jp
mov
cmp
add
xlat
adc
lret
ds
jge
popa
mov
push
enter
mov
lret
and
leave
out
cmp
inc
fdivr
mov
sbb
les
imul
inc
mov
nop
xor
cmp
xchg
movsl
rcl
fdivl
add
outsb
pop
jecxz
mov
push
stos
jb
test
or
and
dec
cmp
icebp
and
in
ret
ficompl
jbe
sbb
pop
add
pop
adc
adc
and
or
lcall
scas
cmp
mov
add
jb
sub
repz
mov
lods
mov
cld
and
lret
mov
lahf
pop
movsb
or
dec
out
or
lds
into
fadds
je
je
or
jbe
pop
mov
icebp
fcmovnb
jae
mov
jb
sub
xor
jns
mov
outsl
xchg
xchg
pop
xlat
repnz
in
cmpb
es
lock
cmp
mov
jge
inc
cmpsl
push
ret
xchg
rsm
lock
pop
push
sarl
mov
xor
sub
mov
sbb
jg
xchg
and
sbb
jge
and
outsl
and
sbb
scas
push
xor
add
lock
ds
jecxz
jbe
popf
inc
mov
pop
pop
lods
stos
jmp
outsb
insb
mov
push
inc
pusha
test
leave
push
movhlps
add
push
addb
jge
out
pusha
dec
ja
mov
cli
test
inc
mov
popf
adc
and
or
imul
and
mov
add
sub
lds
cmp
dec
xor
or
inc
clc
insl
xchg
sbb
in
sbb
int3
andb
fimull
sti
push
int
pushf
xchg
ds
mov
pushf
loope
in
pop
xchg
mov
dec
sbbb
fs
adc
mov
or
in
out
mov
add
lea
lea
lret
arpl
push
cmp
pop
push
stos
mov
pop
rcl
clc
xchg
adc
mov
mov
aaa
aad
pop
or
adc
or
jle
mov
mov
mov
mov
jbe
sti
mov
pop
cs
cmp
jge
andl
shlb
add
jno
xor
add
sarl
movsl
jo
xor
or
nop
cmpl
sub
xchg
inc
or
scas
jg
cmpl
mov
mov
push
std
sub
lds
movsl
sbb
add
xlat
cld
pusha
cli
adc
mov
out
sbb
mov
mov
cwtl
jno
fildl
mov
add
loope
jbe
mov
push
adc
mov
das
add
js
mov
insl
or
jmp
pushl
lret
jno
sahf
stos
leave
dec
push
xor
imul
fwait
js
lods
stos
adc
fidivrl
pop
inc
shl
pushf
or
loop
xor
movsl
sub
push
sbb
dec
xchg
add
fucom
cmp
push
ja
cmp
stos
pop
cmpl
sbb
fdivl
inc
movsb
pop
xor
push
push
js
mov
int
cmp
clc
and
adc
jge
or
adc
scas
gs
push
xor
mov
mov
lret
mov
mov
pop
inc
pop
mov
cld
in
mov
mov
pop
or
jp
addl
sbb
mov
jp
push
int3
inc
adc
mov
inc
subl
push
and
xchg
stos
pushf
aad
bound
gs
jns
xchg
mov
iret
mov
mov
es
mov
mov
loopne
or
xor
sub
syscall
pop
mov
and
and
cltd
pop
faddl
subl
call
cmp
out
rolb
dec
scas
inc
mov
rorb
das
daa
repnz
neg
imul
push
xchg
xor
jb
mov
add
movsb
fdivrl
ret
fdivp
xor
in
subb
test
push
in
mov
pop
jae
ljmp
loope
stc
xor
inc
sbb
xor
push
sub
jb
jne
rclb
push
cli
insb
loop,pt
pop
lea
lds
jo
fcomip
xchg
call
cmpsl
and
cltd
mov
cmpsl
loope
mov
loopne
in
pop
xor
shr
jg
rcl
out
pop
aaa
inc
mov
or
filds
sbb
pop
sub
cs
mov
daa
push
xor
or
xchg
cmpsl
mov
out
gs
lret
mov
rcrl
xchg
int3
jle
mov
gs
adc
sti
mov
fidivrl
imul
cmp
add
push
inc
and
inc
shr
push
pop
and
inc
xchg
pop
mov
pusha
pop
jns
inc
out
imul
xor
or
stc
or
popa
xchg
orl
subl
inc
inc
lea
leave
fidivs
movsb
jle
cwtl
fstpt
xchg
loope
mov
sub
cmp
mov
dec
and
push
cld
dec
sbb
stos
scas
mov
xor
sub
movsb
icebp
lock
ror
lahf
in
pop
shl
into
into
inc
cld
mov
adc
movsb
movb
gs
out
addr16
lock
aaa
push
mov
aas
lahf
sub
jne
xor
shrb
les
dec
aam
in
decb
cwtl
or
ret
inc
or
outsb
sub
icebp
repz
ljmp
inc
xchg
xor
mov
fwait
gs
pop
mov
enter
xor
stos
pop
inc
mov
xchg
in
cli
and
test
clc
loope
lds
test
and
mov
or
cli
pop
ja
inc
dec
dec
inc
push
push
scas
loopne
pop
shl
and
jle
stc
push
inc
xchg
push
mov
dec
mov
out
and
cmp
cmp
movsl
in
dec
sbb
adc
push
pushl
cli
dec
out
das
pop
sbb
rcr
adc
cs
xchg
fldl
dec
mov
mov
jae
ret
cmpsl
mov
dec
ss
xchg
push
leave
pop
mov
shrl
jmp
mov
dec
aas
dec
mov
sarl
in
dec
push
scas
push
aas
xchg
repz
jo
mov
pop
rolb
movb
movsl
fcmove
fsubl
pcmpgtw
ret
cmc
out
push
test
mov
rcrb
push
ret
mov
leave
in
inc
cli
mov
repz
shll
pop
jmp
ret
xchg
pop
aaa
fldt
ljmp
lcall
adc
sahf
cmp
mov
scas
inc
jbe
cmp
shrb
xor
std
aad
loopne
cmp
jne
or
sbb
push
add
add
mov
dec
jbe
fs
repz
test
icebp
in
pop
sub
dec
insl
inc
loope
jae
pop
mov
sub
aaa
orb
fstpt
dec
mov
xor
mov
pop
rcl
push
dec
and
xchg
test
inc
lahf
mov
sub
xor
push
enter
nop
std
pop
adc
adc
add
fimull
popf
push
divb
inc
decl
es
adc
mov
xor
int3
outsb
lds
popf
mov
les
pop
gs
pop
push
mov
test
push
aas
and
add
xchg
mov
movsb
dec
mov
lock
adc
popl
sub
xor
cltd
scas
mov
andl
cmp
out
pop
cmp
fists
and
loope
xor
dec
mov
mov
mov
mov
add
sbb
imul
pop
mov
in
adc
stos
cwtl
mov
data16
pop
adc
jbe
push
xorl
xchg
clc
inc
fisubrs
imul
or
nop
mov
jge
fwait
push
push
test
and
test
lods
fwait
loop
ja
push
scas
repnz
jp
insl
dec
imul
jns
pop
orb
fwait
mov
sbb
les
sbb
divl
xchg
outsl
xchg
clc
sub
div
gs
add
mov
jp
cmp
xchg
enter
fisttps
sarb
push
xor
inc
aas
dec
sbb
out
xchg
shll
cs
sarl
sbb
mov
push
popa
and
ja
je
mov
xchg
push
xchg
ljmp
fwait
arpl
sahf
outsl
imul
hlt
clc
mov
push
and
dec
mov
es
aam
xchg
mov
push
movsb
push
xchg
push
jns
add
out
ljmp
mov
stos
lods
stc
ret
pop
push
rcr
mov
xchg
imul
fildl
je
and
div
lret
inc
lods
sbb
mov
pop
cli
movsb
test
push
inc
jl
cld
mov
frstpm(287
popa
jp
pop
jp
jg
mov
fcmovb
or
push
mov
push
inc
shlb
adc
fbstp
shlb
repz
imul
cli
repnz
cwtl
pusha
dec
mov
mov
loope
xchg
mov
imul
aad
cmpb
adc
inc
fwait
ljmp
inc
and
pop
dec
or
movsl
jb
cmp
out
sub
stc
push
arpl
push
daa
in
rcr
into
mov
in
stc
in
push
jno
push
push
roll
mov
push
adc
push
mov
sbb
aas
fs
jmp
bound
jle
in
je
into
cmp
xor
aas
ret
fcomps
cmp
pop
addr16
and
arpl
add
ret
jle
sub
cmp
aam
inc
xor
stos
jecxz
inc
jp
nop
cmpsl
es
mov
imul
jmp
stc
mov
and
inc
mov
fisubrs
lock
inc
push
sub
fnstcw
jl
xchg
rcll
or
aad
shlb
jo,pn
jge
xor
lret
sbb
clc
loopne
or
xchg
inc
rcl
sbb
ret
push
cs
push
sub
cld
mov
mov
sub
daa
enter
jmp
cld
inc
mov
das
pop
sbb
sbb
mov
scas
mov
test
mov
call
cwtl
out
cld
in
pushf
insl
sbb
stc
lret
gs
or
inc
jge
pop
and
fdiv
mov
jl
fadd
mov
mov
mov
mov
xchg
inc
scas
flds
add
ss
xchg
arpl
inc
xchg
pop
lret
fnsave
scas
jae
adc
sub
inc
popf
ljmp
push
dec
vmread
scas
jo
dec
xorb
lds
jge
push
aaa
adc
or
push
loopne
ljmp
dec
push
xchg
push
fsubl
xor
out
fldenv
cwtl
xchg
dec
sbb
addr16
mov
popa
pop
mov
cmpsl
xor
aam
or
jg
push
lcall
jmp
cmp
xor
sub
mull
add
sbb
clc
cmpb
icebp
xlat
data16
sbb
aas
ds
in
or
mov
fwait
and
test
inc
inc
gs
push
outsb
ja
ljmp
setle
push
and
dec
rol
lods
push
cwtl
xchg
fistl
iret
jl
xchg
repz
xchg
and
rclb
mov
out
fdivl
jmp
inc
ja
push
lret
insl
outsl
scas
in
xor
lcall
test
add
hlt
mov
fcompl
fdivrs
push
repz
pop
movsl
push
mov
sbb
xor
pop
ja
dec
inc
mov
in
or
aad
mov
repnz
dec
arpl
int
fiadds
out
pop
jg
jne
sbb
les
mov
movsl
cs
xor
data16
or
mov
pushf
ss
dec
sahf
xchg
ja
adc
mov
int
in
pop
data16
scas
sbb
fs
mov
aam
inc
xchg
out
dec
or
mov
cld
popa
mov
push
int3
add
jl
pop
xor
xchg
push
loopne
sub
pop
bound
imul
stos
xchg
pop
imul
outsb
push
mov
pop
and
sub
dec
pop
cmpsl
out
sbb
or
sub
sahf
sub
adcl
lahf
mov
andl
xor
stos
test
fcoms
dec
adc
xchg
lahf
add
cmp
lahf
mov
cmpsl
fnstcw
cmp
movsb
jmp
push
out
enter
add
inc
lea
mov
mov
insb
decb
or
mull
and
or
negb
stos
mov
mov
inc
into
cmp
shrl
xchg
mov
add
das
xchg
pop
sub
and
pop
adc
pop
cmp
into
stos
or
in
shl
add
mov
fwait
je
les
pop
add
pop
in
lea
bound
insl
pop
push
int
xchg
mov
push
inc
dec
sub
lret
xchg
inc
xchg
ret
mov
lods
adc
test
out
int
test
ds
pop
jmp
mov
std
adc
sub
arpl
sbb
stos
nop
cmc
push
mov
mov
mov
xchg
pop
nop
pop
adc
adc
xor
lea
test
dec
xorb
pop
out
mov
sub
or
adc
pop
in
bound
or
mov
xchg
adc
lock
hlt
jae
ljmp
subb
popf
imul
cmpsb
and
and
pop
inc
stos
jle
add
pop
jge
push
sahf
ljmp
es
aaa
add
or
sub
pop
dec
cmp
jg
pop
nop
inc
enter
ja
call
dec
cmc
lret
stos
jle
push
sbb
stc
loopne
into
and
iret
pop
mov
mov
stos
int3
push
rolb
lea
dec
mov
aaa
test
out
mov
dec
jb
xchg
movsl
mov
cmp
cmp
lds
xchg
fists
cmp
js
or
xor
add
xchg
xor
and
sub
or
mov
repz
cmp
dec
push
data16
jnp
pop
pop
aaa
mov
push
aad
jl
inc
cmp
xchg
xlat
mov
ficomps
pop
xlat
test
sarb
jecxz
lock
cmp
xchg
roll
mov
sbb
xor
dec
xchg
mov
mov
sub
fwait
repnz
int
inc
enter
inc
and
outsb
das
out
shll
fwait
sbb
and
push
pop
adc
push
adc
leave
pop
aam
pop
ret
xor
cmpb
dec
xchg
push
enter
adc
jo
bound
aas
test
mov
mov
push
pop
or
push
xchg
sarl
ljmp
mov
push
add
inc
pop
xchg
inc
rorl
mov
rolb
and
insl
sub
inc
xor
fs
popa
sahf
ret
jb
js
scas
loope
mov
and
adc
and
xchg
xchg
pop
mov
mov
rol
aaa
add
movsb
pop
stos
push
pusha
into
mov
mov
dec
shlb
stc
xlat
add
xor
in
or
add
xorb
sub
jae
jns
cmp
inc
imul
notb
movsb
add
pushf
sbb
movl
pop
mov
and
add
jmp
sub
ret
push
cmp
mov
out
push
ror
outsb
xor
or
push
pop
movsl
lods
jmp
mov
scas
pop
xchg
pop
fcmovnb
movsb
scas
mov
xchg
int
xchg
add
insl
sbb
xchg
fildl
sub
stc
jae
push
xor
and
jo
sub
ret
inc
les
dec
sar
test
lahf
movsb
add
js
jo
cmovae
out
push
subl
inc
std
push
pop
sub
in
inc
fsubr
pop
and
dec
mov
adc
data16
rorb
and
imul
xor
icebp
add
nop
jb
cmpsb
out
and
imul
and
pop
sar
mov
jmp
gs
push
pop
int3
mov
xchg
das
add
jp
sbb
mov
cmpsb
aam
pop
xor
or
sub
jno
inc
push
xchg
push
cmpsl
addr16
dec
hlt
lcall
push
xchg
inc
sbb
out
mov
sbb
sub
mov
sub
dec
mov
push
pop
insl
jecxz
push
cmpl
add
fmull
movsb
dec
icebp
jno
clc
mov
pusha
pop
mov
ret
test
lcall
inc
jno
fsubrl
das
mov
out
xchg
mov
push
jg
cmp
xorl
addps
xchg
mov
jecxz
imul
adc
ficompl
jno
mov
scas
sub
sbb
mov
dec
jle
fcomps
jnp
fwait
out
std
mov
pop
jne
sbb
scas
aam
xor
popa
insl
lahf
rolb
jge
mov
jb
sahf
pop
lcall
jbe
test
push
loope
cmp
mov
loop
pop
pusha
aad
lcall
mov
or
mov
push
cmc
movsb
inc
fld
xchg
out
pop
sahf
add
cmp
repz
outsb
cmc
push
repnz
scas
repz
clc
testl
jp
andl
push
mov
dec
testb
sub
add
or
loopne
pop
rorl
ss
add
decb
fs
xchg
adc
popa
pop
mov
icebp
outsl
ja
enter
in
test
lock
pusha
pop
and
mov
clc
xor
inc
and
sarl
pop
adc
aad
dec
sub
push
js
pusha
sti
sbb
dec
xlat
pop
sbb
pop
nop
imul
inc
mov
scas
mov
repz
sub
lods
and
and
subb
or
adc
loopne
pop
rcr
adc
dec
lods
push
notl
mov
sub
test
jle
je
mov
pop
je
sub
mov
lret
mov
stos
shll
cli
push
movsl
ds
lods
lods
lret
mov
out
fucomi
test
roll
or
pop
gs
push
cltd
aaa
push
js
fmul
inc
pop
adcl
push
sbb
out
insb
sub
push
push
push
test
mov
mov
int3
jbe
xchg
inc
jns
sub
and
mov
mov
or
mov
sbb
dec
loopne
aas
xchg
aaa
je
inc
jno
pop
push
xor
inc
out
mov
mov
shlb
mov
je
out
call
inc
push
rclb
and
out
inc
pop
mov
jo,pt
int
stos
jle
ffreep
outsl
sahf
push
xlat
lret
test
pop
cmp
cmp
pushf
cltd
arpl
outsb
mov
les
cmp
in
sub
jle
mov
decb
daa
repnz
cmc
das
adc
pop
int3
jbe
add
mov
cs
pushf
stos
popf
mov
sub
mov
mov
pop
and
jae
jecxz
push
jmp
jne
adc
lcall
test
js
das
pop
sbb
push
pop
shlb
jecxz
cli
xchg
sub
and
dec
je
lahf
jb
cmp
jmp
lods
flds
lcall
pop
iret
movsb
mov
jmp
fnstenv
xchg
out
in
fistpll
adc
jo
pop
mov
push
add
sbb
arpl
inc
add
call
pop
movsl
cmp
jmp
nop
outsl
hlt
fldl
sub
lahf
in
nop
shrb
push
lock
in
jno
clc
loop
das
jae
jge
dec
xor
not
cmp
dec
addl
mov
cld
test
jb
xchg
adc
pop
testl
or
stc
xor
arpl
cmc
jns
dec
in
out
call
dec
loope
test
mov
pushf
fldl2t
sub
icebp
call
in
add
cmpsl
fildl
xor
les
lahf
mov
mov
mov
xchg
push
jmp
arpl
filds
mov
jns
xor
jg
mov
xchg
in
out
mov
sub
push
pop
into
nop
scas
xchg
add
in
sub
enter
fisubl
jnp
push
test
imul
jno
stos
adc
jle
out
addr16
lret
or
push
cmp
pop
push
xchg
push
shll
lea
or
xchg
adc
insb
mov
jbe
cmpsb
xchg
test
jp
jne
lahf
or
mov
or
mov
inc
xor
sti
push
adc
fadds
sub
sub
mov
and
popf
mov
push
fbstp
inc
xchg
inc
inc
add
ss
pusha
dec
add
sub
sbb
jp
ja
je
pop
sub
push
loopne
xchg
outsl
mov
mov
mov
pusha
dec
setne
shr
cs
repnz
sti
adcb
dec
iret
pop
pop
int3
push
pushf
movsb
ljmp
shrl
mov
or
loope
push
dec
loope
sbb
or
int3
pusha
jmp
xchg
mov
popf
push
mov
outsl
or
pop
mov
pop
stc
daa
aaa
iret
dec
lahf
push
adc
xchg
xchg
aad
hlt
out
nop
call
shrl
pop
push
test
negl
sahf
pushw
stos
jle
dec
out
aas
pop
je
hlt
sbb
rcl
mov
mov
dec
in
loopne
xor
jge
sbb
movsb
sbb
cmpsb
filds
mov
mov
cmc
pop
ja
icebp
jno
dec
stos
jg
stc
adc
lock
adc
sub
add
cwtl
dec
ss
pop
pop
and
inc
xchg
mov
rcrl
cmp
push
dec
mov
aad
in
jo
or
xchg
mov
mov
mov
sbb
inc
sbb
outsl
xchg
and
mov
nop
mov
cltd
adc
mov
outsb
jg
pop
push
stc
push
mov
push
repnz
push
dec
adc
test
pop
adc
cli
push
dec
test
lret
lret
lods
in
in
push
mov
mov
daa
cli
ficoms
jne
push
outsl
xchg
and
push
pop
outsb
xchg
sub
std
push
mov
push
mov
jmp
cld
and
mov
aam
add
cmp
xchg
xlat
ja
and
pop
pop
das
mov
loopne
dec
in
cli
movl
xchg
cmp
lahf
adc
add
xchg
dec
add
push
mov
cmp
aad
ret
fnstsw
push
int
lea
pusha
pop
dec
rcl
and
repnz
in
mov
sub
aas
in
add
mul
aaa
sbb
stc
mov
pop
lret
xor
xor
mov
aas
xor
add
add
mov
cltd
xor
sub
sti
push
sbb
aad
or
cwtl
in
arpl
push
dec
adc
test
enter
mov
mov
mov
out
lcall
icebp
pop
sbb
outsb
mov
rcrb
and
das
ljmp
bound
and
outsl
jns
sub
data16
lea
fsubrl
rcrb
sub
push
in
ljmp
cmp
sbb
inc
adc
push
adc
mov
pop
and
iret
or
in
repz
leave
pop
xchg
and
imul
and
push
dec
dec
pop
mov
mov
mov
push
sbb
sbb
test
xor
fwait
iret
push
sbb
sbb
fdivr
outsl
jb
or
mull
popf
cmp
add
sahf
dec
cs
out
jmp
cmpsb
or
adc
in
inc
pop
mov
cmp
sbb
scas
add
pop
xor
sbb
mov
cmp
xchg
mull
or
add
in
shll
loope
movsb
inc
adc
int3
int
loopne
ss
or
or
and
fnsave
mov
dec
or
jge
push
adc
aam
add
pop
sbb
and
adc
fisubl
jae
aam
les
idivl
push
sub
mov
int3
push
lret
xor
out
pop
jecxz
jo
clc
enter
out
inc
push
push
shll
mov
push
lret
dec
cmp
scas
pop
stos
push
push
xchg
sti
inc
push
jnp
jmp
jne
xchg
sbb
loope
mov
xchg
inc
es
push
sub
pop
and
xchg
cmp
scas
mov
pop
movsl
aaa
call
sub
out
add
shll
mov
insb
mov
hlt
or
scas
mov
dec
sbb
jle
negb
and
or
out
outsb
or
scas
mov
test
jb
xchg
xchg
adc
mov
jl
daa
sub
mov
xchg
adc
outsb
fidivrl
aad
jno
and
cmpsb
mov
fldl
xchg
ljmp
cs
in
fdivl
inc
popf
sarl
xchg
stos
push
pop
fistpl
fs
out
pop
imul
stos
jnp
out
lret
int
loopne
das
rol
cmp
shrl
xor
push
xlat
pop
movsb
popl
imul
push
xchg
add
ss
lret
mov
in
rcr
ja
push
out
movsb
aam
push
jnp
adc
cmpsl
filds
pop
jns
add
xor
and
xchg
jns
jp
orl
jmp
in
mov
mov
sti
cmp
mov
sbb
std
movb
push
pop
mov
sahf
add
packsswb
pop
xlat
aam
pop
out
mov
add
xor
sub
ds
rorl
dec
orb
divb
das
mov
mov
inc
mov
ds
jnp
mov
bnd
imul
xchg
lock
pop
stos
jecxz
xchg
inc
out
test
addr16
add
cmp
jbe
xchg
je
stos
ret
movsl
arpl
test
sbb
flds
scas
dec
mov
lcall
jge
pushf
stc
cld
mov
jb
ret
xor
cs
mov
push
js
les
repz
call
and
xor
ret
test
jb
and
test
mov
or
cmp
imul
or
gs
and
sarb
inc
push
pusha
adc
pop
cmp
out
mov
push
pop
out
dec
push
inc
lock
or
lea
add
pop
popf
xor
xchg
ds
mov
xchg
aaa
jg
sbb
pop
stos
pop
pop
xchg
daa
mov
ficomps
xor
cmp
jne
xchg
push
rolb
mov
push
jb
arpl
outsl
les
push
outsl
stos
pop
insb
mov
outsb
or
cwtl
dec
ret
mov
test
add
mov
push
inc
xchg
out
lods
scas
out
lock
dec
and
add
cltd
pusha
int3
or
out
in
add
inc
add
mov
sub
lcall
jnp
pop
adc
xchg
je
mov
sahf
push
int3
jne
and
xchg
dec
sti
cmp
add
mov
inc
mov
cmp
cmpsl
pop
movsb
sbb
cmp
sub
out
jmp
dec
and
stc
ror
inc
lcall
imul
ljmp
div
adc
sarl
int3
ja
aas
ret
inc
aam
inc
jmp
cmp
or
mov
jmp
ds
xchg
mov
sbb
mov
fwait
movsb
mov
fistpl
sub
imul
xchg
inc
fcomps
xor
cmpb
dec
xchg
fisubrs
push
adc
imul
int
sub
xlat
lret
ret
fdivs
scas
add
stos
push
ss
push
test
cltd
mov
sti
shlb
insl
clc
jbe
mov
gs
nop
xchg
push
push
inc
popa
ds
cli
ror
call
push
jnp
bound
movsb
daa
mov
cli
cmp
add
xchg
jl
xorl
jge
jg
push
adc
clc
addr16
dec
pop
mov
pop
pop
test
push
cli
adc
xchg
iret
pop
push
call
popa
movsb
repz
xor
das
inc
movsb
mov
jo
fwait
lret
cwtl
sbb
popa
iret
aaa
cmpsl
aaa
lods
cwtl
cltd
push
loop
cmp
fidivs
adc
cmpsl
jle
jle
pop
aaa
dec
dec
dec
dec
xor
stos
push
rep
ljmp
outsl
fisttps
pop
and
sbb
push
adc
hlt
mov
lock
jns
lcall
dec
add
insl
jecxz
flds
add
push
mov
sub
scas
jns
popa
mov
aam
mov
loope
mov
enter
clc
rcl
sub
push
fists
in
popa
aas
sub
jo
sbb
jo
fldenv
enter
jge
clc
fsubp
sub
mov
cmp
test
fistps
xor
shrb
icebp
mov
test
fmuls
pop
jmp
add
movhlps
inc
inc
cmp
jno
aaa
outsb
pushf
and
ss
cmp
aas
fdivr
gs
xchg
xchg
in
filds
jg
loope
inc
jne
mov
shr
ja
ljmp
xor
sub
das
pushf
scas
inc
loop
xor
call
in
adc
jae
pop
cmc
push
aaa
sub
aam
rol
mov
pushf
mov
imul
into
dec
and
mov
ret
enter
insl
adc
inc
adc
sbb
js
gs
add
push
lcall
inc
in
jnp
xor
push
adc
jmp
push
mov
faddl
roll
inc
adcl
sub
push
pop
pop
rolb
pop
push
aad
mov
nop
scas
fadd
inc
or
sahf
les
xchg
aam
stc
cmp
or
jno
push
dec
pop
out
das
xchg
mov
mov
jmp
testb
cmp
bnd
iret
mov
jl
xchg
xchg
out
dec
push
push
shll
pop
jmp
enter
xchg
loope,pn
imul
mov
fnsave
loope
sub
pop
out
ss
dec
sub
cltd
sbb
inc
add
mov
mov
xor
popf
dec
mov
mov
push
movsb
push
dec
lock
xor
mov
lock
inc
in
fdiv
and
sbb
sbb
fsubl
jno
insb
int
push
push
pop
mov
out
pusha
mov
dec
dec
pop
lcall
loope,pn
adc
xchg
pop
xor
jb
in
push
out
add
ffree
cmp
xchg
idiv
nop
insb
add
icebp
cmpsl
mov
loop
ss
or
inc
lds
sbb
sbb
xor
xchg
sbb
pushf
loope
fucom
or
cmp
sub
or
and
ljmp
xchg
cwtl
gs
cmp
sub
or
sub
shll
and
adc
xchg
xor
jb
inc
xor
fcmovne
jecxz
rep
in
pushl
and
fnstsw
cmc
cmp
mov
pop
imul
push
dec
stos
xchg
bound
xor
mov
call
lret
sarl
lock
sub
xor
fnstenv
int3
rcl
push
ds
sbb
push
cmp
in
lea
shll
and
mov
push
sbb
js
das
adc
icebp
data16
lods
stc
in
sbb
mov
outsb
sbb
rorb
cmc
mov
push
xlat
xor
shrb
dec
add
ja
sub
or
orl
popf
shlb
in
or
sub
and
int3
push
pop
daa
lret
or
xchg
mov
jge
or
in
fsubl
int3
cmpsb
mov
les
repnz
mov
ja
shl
scas
mov
mov
mov
adc
sbb
out
lods
int3
call
sbb
lahf
insb
repnz
es
ds
push
aaa
into
cmp
adc
int
inc
shll
push
add
mov
das
gs
mov
mov
jge
pop
push
inc
and
repnz
lahf
push
sub
fbld
push
arpl
out
mov
sarl
test
push
cli
loopne
or
mov
fldcw
mov
pop
scas
popa
dec
mov
rcr
push
mov
call
int3
test
xchg
inc
stos
rol
dec
jae
xchg
add
clc
push
adc
mov
lods
pop
dec
pop
xlat
and
outsb
flds
lock
push
xchg
jle
hlt
add
stos
push
xor
dec
mov
adc
xchg
mov
pop
test
insl
movsb
fstps
aad
sarb
xchg
fwait
adc
push
or
sbb
add
fisubs
insl
jo
pushl
arpl
push
mov
dec
mov
and
or
add
push
lods
test
sub
hlt
call
adc
shld
cmp
xlat
int
aaa
sbbl
xchg
shll
aam
xchg
imul
cs
lds
or
lock
sbb
in
mov
xor
push
sub
repz
sbb
cltd
jno
cmp
dec
into
cmp
mov
xor
popf
cltd
cmpsb
or
jle
rorb
out
xorl
xlat
in
dec
ret
adc
scas
imul
fcoml
jl
andb
popf
mov
fnstcw
or
repz
mov
sbb
shrb
es
or
inc
loop
mov
pop
pushf
lret
mov
hlt
mov
cs
xchg
popa
add
mov
pushf
adc
cmpsb
imulb
xor
cmp
push
jp
pushf
lods
sahf
test
stos
sbb
testl
or
and
sbb
pop
iret
adc
xchg
mov
ret
movsb
push
fnstcw
cmc
fidivrs
dec
dec
jmp
lea
mov
push
je
ja
movsb
lods
cmpl
scas
mov
lahf
lock
cmp
sub
pop
cmp
adc
push
adc
jb
lods
or
pop
bound
mov
mov
jmp
jge
pop
rcll
aam
or
cltd
shrb
dec
ret
loopne
imulb
call
push
cli
popf
ret
inc
roll
int
fimuls
stos
sub
daa
incb
pop
jecxz
push
inc
xor
mov
pop
cmp
in
mov
or
out
xchg
sub
outsl
sub
shlb
cmp
dec
inc
jne
push
xlat
mov
ficoms
aam
call
cwtl
inc
fwait
xchg
ljmp
test
cmpsl
rcll
scas
push
cmp
clc
fisttps
and
jb
mov
dec
frstor
xchg
mov
test
shlb
scas
push
sbb
loop
mov
dec
lahf
test
mov
rol
loop
movsl
hlt
and
push
aad
int
outsb
push
pop
dec
sbb
dec
lea
xor
push
sbb
push
mov
and
push
pop
sbb
lcall
sahf
adc
jmp
arpl
popa
repnz
stos
fisttpll
dec
inc
dec
pop
mov
add
ja
cmp
pop
repnz
cmc
lcall
mov
out
xchg
xor
enter
mov
jns
push
mov
dec
lahf
imul
inc
mov
ja
outsl
ljmp
in
pushf
sahf
push
push
sarl
das
insb
and
fidivrs
fildll
fmuls
or
out
adc
sbb
adc
xlat
dec
sbb
test
dec
repnz
shr
push
mov
subb
push
sahf
sbb
pop
inc
loop
dec
and
idivb
and
mov
les
inc
pop
add
loopne,pt
mov
sbb
pop
push
sub
and
sbbb
call
mov
jb
xor
xor
and
jmp
inc
pusha
jne
jbe
add
mov
jmp
rcll
push
imull
lcall
popf
pop
fmuls
push
or
test
adc
push
sti
xchg
mov
aad
scas
jo
or
daa
and
adc
lds
xchg
nop
adc
hlt
xorl
cwtl
ja
mov
sub
loopne
mov
inc
mov
subl
xchg
stos
sbb
cmp
inc
sti
adcl
push
shlb
aam
xchg
sub
jp
pushf
mov
and
sub
addb
pop
ficomps
fsubr
in
cmp
xchg
inc
add
push
pop
pop
iret
out
mov
mov
add
dec
andl
pop
mov
sbb
dec
fsubrp
add
pusha
enter
aad
sbb
push
inc
lcall
inc
sub
sub
mov
push
out
test
mov
mov
mov
aad
popf
addr16
or
cltd
jne,pn
sub
loope
jge
or
pushf
sub
shl
ret
mov
stos
mov
movsl
sub
aam
jae
mov
addr16
jno
jns
test
int3
popf
cs
sbbl
lahf
mov
jp
mov
adc
dec
jl
stos
mov
imul
jl
mov
cli
aaa
mov
adc
and
lret
out
sub
jno
cli
ret
mov
and
mov
add
or
cmc
lock
sbb
push
cmp
cmp
rolb
subl
scas
shll
cmp
pop
insb
icebp
jge
addl
inc
lret
adc
subl
stc
push
stos
imul
xchg
imull
sar
sub
mov
scas
bound
dec
sub
push
mov
mov
sub
jmp
pop
or
dec
pop
dec
pop
lea
pop
xlat
lock
mov
ret
jmp
dec
push
orl
xchg
push
icebp
dec
push
out
inc
jb
lods
jg
push
aaa
bound
loop
mov
inc
inc
jae
push
outsb
inc
test
jecxz
lahf
jbe
xor
pop
fisubl
lahf
shll
mov
cmp
mov
out
insl
push
add
mov
ja
sbb
xchg
dec
leave
dec
and
inc
inc
add
movsb
jmp
in
dec
or
pop
sub
sbb
int
cmp
pop
iret
sub
mov
in
or
cwtl
add
lods
or
imul
sbb
cmp
icebp
adc
addr16
mov
inc
push
lea
icebp
scas
push
insb
push
jne
xor
int
iret
cli
inc
inc
ret
add
adc
test
xchg
mull
or
jae
rcl
js
and
mov
adc
out
scas
sahf
mov
fadds
and
sahf
fisubrl
gs
xor
pop
test
inc
mov
xchg
in
ds
lods
lods
mov
push
int
pop
push
cmp
das
cmova
scas
icebp
outsb
repz
xor
repz
clc
iret
or
mov
add
test
cmc
mov
or
ja
add
mov
rcl
enter
js
adc
into
pop
jecxz
stos
pusha
inc
mov
cwtl
outsl
pop
ljmp
test
pop
xor
leave
inc
lock
jns
fnstcw
inc
orb
movsb
add
dec
ja
dec
add
cmp
push
dec
cmp
mov
lods
in
jo
in
mov
imul
repnz
adc
jp
push
outsl
xor
aad
mov
xchg
push
popa
jge
flds
fnstenv
or
das
loope
dec
pop
or
stc
addr16
jl
adc
in
lcall
mov
outsb
sbb
lret
xchg
cwtl
in
mov
insl
xchg
jmp
mov
push
and
imul
sbb
js
dec
test
xorl
cwtl
xor
xchg
outsb
arpl
sbb
aaa
sbb
and
fcmove
mov
mov
andb
inc
fldenv
lods
dec
leave
mov
mov
popf
aam
inc
jns
or
mov
fcmovbe
mov
mov
jb
adc
cld
testb
inc
pop
mov
sub
or
bound
sbb
mov
mov
xchg
das
sub
pop
adc
sbb
ss
sbbb
xchg
pop
lds
test
adc
das
mov
mov
mov
mov
shlb
lret
cld
pop
sbb
ret
ss
and
outsl
sub
adc
cwtl
and
xchg
mov
and
jg
cld
shll
outsb
mov
mov
jo
cmp
idiv
jmp
push
or
cmp
shlb
pop
push
imul
aas
shll
jb
mov
jns
outsl
cmc
addl
push
cmp
pusha
or
stos
clc
incb
add
ffreep
cmp
aam
dec
std
jbe
mov
scas
push
loope
mov
push
sub
test
xchg
fiadds
adc
xchg
mov
inc
aaa
sub
jl
negb
jmp
add
mov
dec
lret
les
mov
or
int3
aad
pop
shl
mov
or
push
es
xlat
or
loop
outsb
ljmp
push
and
addr16
lcall
mov
clc
jne
cld
cmc
in
les
cmp
cmp
cmp
jnp
or
jl
add
inc
daa
insl
mov
sti
data16
inc
add
repnz
sbb
cmp
adc
xlat
jae
push
add
cs
cmc
and
jbe
pop
add
cmpsb
les
mov
iret
push
cmp
das
xchg
add
movsl
mov
sbb
dec
or
adc
repz
add
std
push
push
dec
icebp
jne
fstpt
dec
imul
xor
xchg
cmpsl
test
aas
insb
mov
xorl
ljmp
into
xchg
dec
adc
xor
cmpsl
jo
negb
imul
inc
lock
or
mov
sub
iret
xor
ja
or
push
jge
pop
sub
rorb
mov
ja
or
fnstsw
pop
int3
gs
push
std
lock
ja
pop
sbb
cwtl
sbb
insb
push
jmp
inc
pop
mov
jmp
or
arpl
sbb
jo
ds
push
mov
fwait
jmp
or
mov
add
js
lds
out
mov
imul
push
mov
outsl
roll
or
stc
stos
mov
mov
or
insb
rcrl
inc
push
out
or
mov
xchg
outsl
rorl
pop
or
xorb
sarb
leave
inc
cmpsl
pusha
loope
dec
mov
dec
std
loop
mov
inc
aaa
or
jne
push
dec
push
pop
nop
jb
test
lahf
bound
inc
mov
mov
xor
out
movsb
push
pop
cld
xor
loop
aaa
add
sbb
pop
sti
xor
insl
cmpb
mov
pop
sub
test
loope
or
jecxz
xorb
fcoml
cmp
fsubl
sub
mov
subb
ret
loop
mov
das
loopne
icebp
leave
mov
movsb
stc
sbb
push
dec
mov
jle
or
xchg
bound
insl
xor
sub
rorb
test
loope
xlat
mov
iret
ljmp
fwait
dec
cld
jo
cmp
inc
in
ret
cmpl
and
xchg
addb
mov
pop
push
jno
mov
dec
sbbb
in
add
repnz
jbe
jecxz
lds
jp
mov
std
add
lock
test
mov
addr16
lods
in
add
mov
mov
pushf
mov
dec
cmovs
aaa
xor
daa
idiv
mov
sti
xchg
and
mov
dec
jl
cmp
dec
cld
or
icebp
xchg
repz
nop
push
cmp
or
mov
sub
fucomp
ja
ret
or
stos
jae
test
and
cli
imul
popa
mov
pop
pop
push
inc
jne
es
in
jae
lret
cwtl
jge
push
mov
mov
dec
cmp
mov
sub
cmp
mov
js
bsr
movsl
mov
xlat
test
flds
sbb
insb
inc
insl
mov
ret
shrl
jl
lock
xor
jmp
ror
fcmovnb
lcall
rcrl
mov
xchg
mov
rorb
lcall
les
dec
sub
sbb
aam
dec
lock
gs
insl
sarb
jnp
mov
sub
inc
add
cmp
mov
and
push
outsb
or
pop
pop
mov
push
dec
lahf
fs
fsts
cmp
cmc
inc
testb
mov
add
adc
push
test
das
inc
arpl
jmp
cmp
cmp
fiaddl
cli
ja
xchg
adc
jge
push
adc
mov
cmp
je
aaa
fildll
jb
sbb
rcrl
int3
and
jne
bound
out
sub
fcmovbe
gs
pop
sbb
rcrb
mov
bound
cli
jmp
push
cmp
mov
ja
jmp
stos
jb
incb
xor
sbb
insb
pusha
jp
xchg
mov
xor
mov
jbe
lahf
sbb
cmp
add
adc
jbe
or
or
iret
pop
push
cmp
mov
inc
in
jle
cmpl
inc
xor
inc
fs
shrb
dec
cmpsb
xchg
loopne
add
aam
stos
adc
push
in
test
movsl
dec
data16
pop
sub
lea
aad
test
pop
mov
or
mov
gs
jecxz
std
adc
rcrl
loope
es
enter
sub
inc
sbb
ficoms
or
mov
cmp
push
outsb
xor
fstpl
mov
cmpsb
xchg
dec
inc
nop
or
outsb
cmc
jg
enter
ret
insl
push
add
les
sahf
das
pop
pop
popa
and
mov
jne
int3
add
lcall
ss
adc
mov
in
fstl
mov
sahf
push
push
xchg
jecxz
xchg
test
hlt
sbbb
roll
pop
xchg
mov
mov
lds
pop
push
rcrb
lods
scas
push
mov
lret
push
shr
mov
scas
jl
cmpsb
fimuls
mov
mov
scas
jae
sub
cmpxchg
push
push
or
mov
ljmp
mov
ret
jbe
push
xchg
and
pusha
xchg
push
add
addb
shlb
sub
iret
call
pop
cmc
pop
xchg
add
in
in
jp
xor
xchg
cli
or
xchg
inc
push
addr16
adc
pop
pop
sahf
pop
shl
pop
sahf
cmp
loope
xor
nop
dec
pop
add
call
push
adc
clc
lret
mov
es
ret
int
and
mov
dec
sahf
ret
jmp
add
enter
or
dec
daa
or
das
test
ss
ret
mov
pop
inc
sbb
xchg
lods
cmp
loop
xchg
jno
outsb
xchg
mov
cmpsb
ss
xchg
cmc
xchg
jmp
pop
jnp
cmp
loope
push
ret
adc
jle
xchg
jge
or
insl
aaa
sti
or
scas
xchg
inc
leave
aaa
mov
mov
lahf
add
jb
mov
push
sti
push
sbb
cmp
outsb
cwtl
jne
jle
vpcmpgtb
maxps
dec
mov
cli
xchg
mov
and
mov
dec
jo
inc
lods
jecxz
inc
pop
fsubr
mov
pop
mov
outsl
mov
test
sbb
mov
ffree
stos
mov
add
jne
cmpsl
jne
mov
xchg
xchg
pop
icebp
imul
dec
outsl
xor
in
test
lds
xchg
pop
scas
subb
imul
cmc
mov
mov
or
mov
pop
es
jecxz
xchg
aam
shll
xor
inc
xor
pop
iret
clc
ja
f2xm1
push
adc
pusha
shlb
int
aaa
push
inc
cld
mov
addr16
xor
mov
lock
sti
std
mov
sahf
popf
mov
pop
cmc
stos
xchg
xor
mov
aad
stos
dec
add
dec
xchg
xor
lret
jbe
call
inc
mov
call
cmp
pop
cltd
push
ja
js
mov
push
ds
inc
sbb
xor
sbbl
ss
lcall
sbb
inc
pop
pushf
dec
movsb
out
adc
inc
icebp
aad
cmpsb
and
jae
insb
cmp
mov
inc
jae
lds
mov
ficoml
sarb
add
add
or
pop
push
adc
movsb
fmuls
cmpsb
or
push
pop
and
mov
outsl
dec
jecxz
call
xchg
jne
xchg
loopne
imul
loopne
sahf
mov
push
xor
sti
leave
popa
jg
outsl
lret
xor
pop
scas
stos
jne
xchg
popf
cmp
and
mov
ljmp
push
xchg
jecxz
xlat
shll
cmp
xchg
mov
test
dec
adc
inc
inc
add
sbb
push
pop
sbb
sub
adc
sub
push
insb
mov
adc
hlt
in
sub
pop
fidivrl
inc
imul
inc
sti
cld
scas
pop
cld
lods
lcall
ret
inc
or
mov
aaa
out
push
and
stc
jp
ss
push
or
cmp
pop
cmp
insb
aaa
cmpl
mov
dec
pop
mov
dec
outsb
aad
sub
cmp
stos
pop
or
and
mov
lock
sbb
lock
adc
addr16
mov
repz
fsubrs
cmp
fnstsw
pop
loopne
pop
mov
inc
adc
lock
aaa
ret
adc
test
loope
sbb
shl
nop
rcrl
sbb
int3
enter
clc
iret
adc
out
sahf
jo
pop
add
pop
mov
or
call
ret
mov
sbb
ret
sub
xor
icebp
cmpl
into
cmpb
push
mov
xor
xchg
push
dec
push
fs
dec
cmc
aam
cmc
xorb
mov
pop
hlt
rorb
stos
mov
cmp
mov
xchg
lcall
fldcw
mov
sbb
scas
outsl
xchg
lcall
iret
dec
or
cmpb
shlb
mov
ss
fdiv
mov
dec
leave
fcomi
cmp
jmp
mov
fs
js
test
cld
push
cmp
inc
sub
repnz
subb
ds
cmpsl
pop
pushf
movsl
mov
imul
add
adc
sbbl
sahf
pop
in
pop
lds
xorl
lods
adc
out
cli
push
hlt
stos
fadd
mov
bound
call
enter
xchg
xchg
daa
pop
pop
ret
fsubrs
add
je
enter
arpl
sub
aad
mov
sldt
add
hlt
ret
jns
test
test
ds
inc
mov
movsb
repz
push
xor
inc
mov
icebp
in
movsl
dec
xchg
mov
das
push
int
lea
aas
sbbb
and
adc
xchg
pushf
xor
sbb
adc
clc
mov
clc
lret
test
pop
std
push
loope
cmp
inc
dec
dec
cmpb
iret
mov
jbe
popf
mov
out
or
fdivrs
add
test
jmp
nop
lahf
test
mov
push
add
mov
inc
mov
add
js
adc
idivl
testl
lock
or
scas
sahf
mov
ds
mov
nop
or
out
add
test
xchg
pop
mov
sti
enter
nop
inc
adc
mov
jmp
adc
push
lock
testl
mov
mov
pop
lods
pusha
icebp
jb
mov
pop
adc
pop
adc
ds
sbb
push
test
insl
je
or
add
push
mov
jl
lahf
adc
ja
lea
and
jl
pop
sti
sbbb
cwtl
or
push
mov
in
inc
hlt
xchg
xchg
call
dec
repnz
mov
nop
shll
repnz
scas
dec
adc
fs
inc
cld
dec
into
mov
rcll
push
pop
sub
sub
inc
lods
jae
js
or
out
mov
xor
in
mov
in
jnp
lock
mov
inc
adc
scas
mov
pusha
mov
jne
sbb
test
lods
sbb
xor
adcb
mov
xchg
test
rcll
popa
testb
lods
inc
imul
sbb
or
scas
sbb
repnz
cmp
push
push
jbe
popf
repnz
ljmp
out
mov
mov
inc
inc
push
rcrl
cmpb
shl
int3
inc
outsb
adc
dec
mov
iret
arpl
movl
push
fdivrl
aad
jo
sbbl
popa
jae
aam
outsb
and
lds
je
and
mov
inc
nop
xlat
xor
inc
in
xchg
mov
aam
push
call
add
dec
pushf
ljmp
inc
in
lods
sbbl
jg
mov
out
notb
inc
and
out
pushf
cmp
data16
xor
test
rclb
or
push
or
add
loopne
inc
push
fistpll
jecxz
lahf
sbb
sub
js
fcmovnb
mov
dec
push
and
imulb
push
pop
sti
xchg
mov
stos
ljmp
add
add
push
mov
hlt
faddp
loop
or
out
adc
sbb
lea
loopne
xor
out
sbb
add
insb
xor
out
iret
inc
inc
leave
push
xchg
add
inc
pop
mov
dec
pop
outsl
and
stos
or
jg
ret
paddusb
dec
sub
cmpsl
repz
xchg
sti
jp
ret
sub
push
ret
scas
sbb
cmpl
loopne
xor
fadds
and
cs
popl
inc
test
xchg
ja
bound
xlat
loopne
push
mov
jecxz
push
adc
jp
and
stos
imul
into
jbe
dec
les
pop
or
add
jge
mov
out
mov
pushf
cmp
mov
cmp
fwait
stos
insb
loopne
insb
pop
mov
push
push
loopne
imulb
xchg
ljmp
sbb
and
aaa
push
adc
push
xchg
cmpb
into
aad
cmp
pop
data16
and
xchg
inc
test
divl
sbb
repnz
mov
mov
clts
pop
enter
xchg
push
in
je
cmp
imul
pop
xchg
cmp
dec
iret
adc
fimuls
nop
cmp
cmp
out
mov
sub
addl
outsb
jmp
dec
loope
mov
inc
sti
push
fldt
ret
push
fldl
cmp
sbb
aam
shll
inc
and
test
inc
add
pop
push
js
repz
mov
cli
pop
lds
outsl
mov
out
divl
or
cmpsb
xor
pop
lds
adc
iret
mov
popa
sub
add
inc
imul
pop
shlb
mov
sub
ss
push
mov
mov
rorl
fbstp
adc
jp
dec
sub
jbe
jp
adc
dec
mov
cmp
jmp
pushl
mov
xchg
jmp
and
loope
aaa
cmc
mov
in
and
adc
add
push
test
fimuls
fdivrl
dec
icebp
nop
xor
sbb
inc
mov
dec
push
std
mov
or
xchg
xchg
mov
shrl
jne
xchg
jg
fld
xor
divl
pop
jmp
push
pop
mov
insl
mov
mov
inc
cld
mov
xchg
push
addr16
or
lds
cmp
dec
mov
xor
nop
stos
mov
imulb
inc
sbb
arpl
les
std
outsb
das
mov
xor
sbb
xchg
xchg
xchg
and
inc
adc
pop
stos
cmp
rolb
cmp
loope
mov
jp
ds
jae
movsb
dec
popa
cmpsl
sub
cli
or
outsl
loope
pop
lods
push
lret
sbb
mov
and
dec
test
mov
pop
mov
imul
iret
les
xorl
fisttpl
lahf
daa
mov
shlb
outsb
mov
notl
dec
ds
lea
xor
or
fwait
dec
pop
in
push
sbb
out
push
cld
shlb
aas
cmpsb
dec
pop
jns
adc
xor
jnp
daa
test
lock
dec
push
stc
fwait
int3
add
jnp
cmp
push
paddb
mov
movsb
mov
jns
or
clc
test
pop
sub
inc
sub
jge
lret
push
cmpsl
cmp
inc
daa
xor
inc
mov
sbb
fdivrl
roll
inc
or
mov
xor
out
add
jno
es
pop
lahf
sarl
mov
ficompl
mov
adc
fwait
dec
dec
pop
pusha
cs
adc
pop
mov
inc
cmp
lock
inc
mov
jno
jnp
cmpsb
inc
aad
lods
fstpl
adc
cwtl
es
out
dec
pop
daa
sahf
pop
fmul
adc
sub
daa
adc
mov
adc
sbb
pop
mov
sbb
fildl
std
insl
and
lret
into
inc
lock
cmp
mov
sbb
inc
bound
pusha
mov
fstl
testb
clc
cmp
xchg
adc
test
xor
lds
lods
pop
jl
mov
adc
lahf
or
loop
mov
xchg
jecxz
hlt
lods
inc
jno
cmp
push
push
jl
outsl
test
sti
pop
rorl
xchg
or
aas
rolb
cmp
nop
insb
cmp
add
add
jmp
xchg
pop
xor
jl
xchg
jp
mov
stos
mov
enter
dec
sub
or
in
push
movsb
stos
add
data16
or
inc
xor
sbb
and
inc
sub
or
jl
push
shll
mov
dec
mov
les
add
push
inc
dec
imulb
test
addr16
and
add
inc
incb
lcall
cltd
int3
push
roll
cltd
andb
enter
jbe
cmp
out
sub
jo
rclb
jmp
icebp
insl
and
rcrb
mov
ret
cmp
mov
sarb
daa
push
xchg
stc
sti
mov
ror
inc
jle
mov
imul
xchg
test
imul
fdivr
je
mov
pushf
pop
adc
stos
dec
sahf
cli
pop
mov
inc
pop
cmp
xchg
aaa
jo
hlt
lret
cltd
lahf
les
test
inc
ljmp
xchg
andb
inc
push
jg
test
mov
xchg
test
xor
jle
into
inc
sbb
mov
in
xchg
jg
dec
sub
sub
repz
push
jnp
cmp
insb
out
arpl
add
dec
popa
ret
loopne
sbbb
mov
mov
fwait
and
and
push
cmp
adc
mov
incl
mov
sub
jl
into
dec
adc
cmp
rorb
push
testl
mov
cltd
lahf
jno
inc
scas
mov
push
sbb
xchg
pop
jb
mov
push
fidivrs
andb
bound
sahf
aaa
pop
mov
mov
pop
adcb
fs
push
cmp
test
xor
pop
mov
daa
adc
aas
mov
pop
es
leave
add
inc
mov
pop
popa
repnz
sbb
inc
pop
ss
mov
push
jne
push
pop
imul
js
mov
frstor
xchg
fisubl
xor
xor
jnp
mov
and
push
aam
int3
jp
aam
cltd
push
clc
scas
inc
scas
jmp
inc
cs
daa
cmpsl
push
cmp
cmp
dec
or
sub
das
sub
hlt
iret
scas
cltd
jnp
fadds
imulb
and
leave
jl
inc
sub
jne
insb
fdivrl
fimuls
xchg
push
xchg
xchg
dec
addl
mov
dec
push
pop
popf
cmpb
int3
out
mov
fisttps
fcmovbe
addr16
sub
mov
adc
xchg
xor
and
lret
imul
mov
or
pop
cmp
push
mov
cmp
repz
dec
mov
mov
cmp
ret
hlt
or
clc
mov
in
xchg
in
icebp
pop
push
or
insl
mov
pop
js
or
in
mov
dec
dec
pop
call
fsubs
dec
adc
jnp
sarb
int3
enter
mov
or
add
das
inc
xor
cmpsb
icebp
and
fidivrl
das
jo
push
es
mov
pop
mov
inc
into
scas
movsl
and
in
stos
xor
cmp
sbb
pusha
cmp
mov
sub
jne
test
cmpb
aas
cli
pop
das
nop
push
push
jl
popa
vfrczsd
dec
pop
popf
or
jle
push
push
outsl
or
mov
push
dec
fs
dec
cmpsb
stos
call
mov
and
ss
icebp
mov
add
lret
movl
and
imul
adc
scas
rcr
push
test
repnz
push
mov
addb
clc
loope
xor
sub
call
lock
fiadds
subl
ja
stos
xor
dec
ud0
add
mov
jmp
loopne
dec
mov
in
sbb
das
je
mov
mov
das
jne
xchg
dec
out
sbb
rorl
pop
lret
loope
lcall
pop
push
cmpsb
outsb
jmp
loopne
insl
popf
call
xchg
dec
testl
sbb
call
push
je
mov
cmp
push
pop
xchg
xchg
inc
in
cmp
leave
mov
jecxz
setp
aaa
cli
aas
sub
shll
fmuls
push
outsl
je
out
mov
nop
int
push
ret
inc
sbb
xchg
mov
das
hlt
icebp
ja
pop
xor
int
and
ret
iret
ds
push
xchg
ja
inc
jl
fdiv
hlt
jge
rcrb
pop
xor
fnstcw
int3
push
cmp
ret
test
lods
lods
cli
clc
ror
and
add
mov
adc
test
mov
int3
popa
fiaddl
pop
int
loope
push
gs
lret
arpl
into
inc
cmp
aaa
popf
syscall
jns
add
sub
jge
ss
pop
xchg
mov
popa
out
mov
leave
inc
mov
into
or
inc
leave
push
mov
xchg
push
cmp
and
lahf
push
add
aaa
das
push
fmull
lret
ljmp
idivl
mov
adc
ja
xchg
arpl
adc
stos
iret
add
add
jmp
cmp
cs
inc
cmp
inc
roll
adc
call
xchg
imul
mov
out
push
and
loopne
mov
popf
mov
ret
mov
sub
repz
mov
lods
cli
mov
mov
or
xor
lcall
mov
inc
cmpsl
outsl
and
push
or
clc
push
lock
jmp
lahf
cmp
cwtl
push
cmp
loop
sub
je
cwtl
ror
push
or
imul
shlb
fstpt
ror
out
fldenv
jge
iret
jmp
xor
das
mov
push
xlat
dec
dec
jl
add
int3
dec
int3
mov
stos
arpl
scas
icebp
ljmp
xor
scas
lcall
lcall
call
dec
xchg
sub
div
loop
mov
in
imul
cmp
pop
dec
les
gs
aaa
movsb
hlt
push
sbb
aaa
jecxz
inc
ficoms
cmp
pop
adc
orl
or
mov
ret
shr
fimull
and
into
fistpl
mov
fstp
dec
aam
push
xchg
push
lods
cltd
lds
xor
mov
xor
xor
xchg
adc
adc
fcmovnb
int
out
iret
insl
and
inc
push
fstps
and
les
cmp
inc
and
scas
sub
mov
sbb
jmp
cmp
sbb
jne
mov
lea
inc
scas
mov
in
add
mov
adc
leave
adc
jae
lods
fidivl
rcrb
xchg
lea
rolb
adc
shrl
jecxz
shlb
bound
push
xor
repnz
iret
or
shl
imul
adc
lods
pop
jb
xorb
sti
cmp
int3
lock
push
fistl
sub
cmp
add
xchg
adc
cli
push
inc
jmp
xlat
movsb
inc
dec
bound
fldl
dec
or
pop
add
into
outsb
inc
in
push
fcmovbe
mov
push
mov
icebp
insl
cmp
les
mov
add
int3
cmp
xchg
and
dec
push
xchg
pop
jne
cmpsl
lock
xchg
cmpsb
mov
push
rep
mov
rcll
lds
imul
mov
aad
cltd
inc
pop
xor
xchg
enter
cmp
mov
sub
movlps
data16
lcall
nop
sti
mov
out
adc
mov
pusha
arpl
adc
popa
outsb
jnp
add
adc
and
pop
popf
cmp
cmp
ds
rcrl
push
int
ss
sub
gs
inc
sub
data16
add
inc
test
inc
fldcw
push
insl
lds
adc
mov
pop
jbe
cmp
add
shrl
xor
call
dec
scas
shrb
dec
jns
push
xchg
idiv
in
lds
sbb
ffree
iret
sbb
les
xor
aaa
cmp
out
sti
jo
mov
adc
inc
loope
push
jg
mov
loope
push
mov
jmp
arpl
mov
mov
inc
inc
fadds
xchg
aam
sarl
test
outsb
scas
sbb
and
insb
js
cltd
add
sub
xchg
insb
lea
xor
fcoms
scas
addr16
adc
cltd
test
lods
xchg
movsb
je
mov
xchg
jno
mov
add
insb
push
fsubl
mov
mov
pop
sbbb
add
push
jb
pusha
sbb
fistpl
mov
rorb
outsl
sti
addr16
mov
mov
sub
nop
call
mov
cmp
fxch
cmp
sbb
iret
jbe
sbb
or
and
jbe
push
movsl
sbb
test
frstor
pop
xchg
add
push
jp
pop
add
xor
cwtl
testb
mov
inc
jne
and
popf
stos
adcl
sarl
push
into
cli
jb
xor
nopl
xchg
jmp
fdivrs
dec
sub
pushf
arpl
ret
rcll
push
cmp
movsl
push
cmpsl
mov
dec
jl
loope
push
gs
mov
push
aas
std
clc
aam
sbb
aam
lahf
and
adc
inc
xor
scas
or
shll
aad
mov
fwait
mov
xor
imul
dec
rcrb
ljmp
dec
ss
in
and
jle
repz
cmp
jge
inc
addr16
mov
fldenv
popa
cmp
pop
adc
aaa
push
xchg
cmp
add
lods
inc
pop
pop
gs
xor
xlat
fisttpll
mov
jne
test
dec
ds
test
popf
sub
xchg
dec
cmp
ja
mov
enter
out
dec
repnz
mov
outsl
sub
or
cmp
ljmp
jo
xchg
xchg
or
cmc
jnp
jp
inc
add
cli
js
imul
xchg
orl
xchg
lds
shll
and
sarl
jns
ret
test
pop
lock
dec
mov
add
sub
mov
push
cs
mov
xchg
push
cmc
and
pushf
pop
push
xor
cli
pop
pop
pop
inc
ss
inc
sbb
xchg
cltd
mov
xor
fistl
imul
pushf
sub
int
test
cmp
fiaddl
xor
das
out
jp
dec
xor
jo
vaddsubps
sbb
cld
aam
mov
popa
mov
jno
pop
fldt
inc
or
mov
aas
inc
or
mov
pop
int3
frstor
and
arpl
lock
sub
fs
adc
icebp
add
xlat
rol
mov
rclb
xor
mov
jnp
insl
test
xchg
or
push
shlb
ficoms
mov
xchg
leave
sbb
fcom
fbstp
mov
xor
jmp
mov
dec
js
pop
sub
pusha
das
dec
jmp
ljmp
jns
int3
inc
out
mov
xlat
sbb
cld
mov
sbb
xor
and
add
cli
and
sbbl
sbb
or
and
add
mov
xlat
sub
clc
sti
test
sbb
daa
cmp
stc
push
mov
cwtl
xchg
loop
jno
je
xor
jge
pop
leave
bound
mov
pop
sbb
mov
adc
cs
imull
jnp
sbb
addb
jno
pushf
mov
mov
test
arpl
lret
jmp
add
mov
inc
mov
sub
repnz
cmp
mov
inc
or
pop
mov
inc
jnp
pop
clc
lds
or
and
test
mov
push
int
lcall
push
jecxz
loopne
push
in
add
fcomp
inc
popa
mov
movsl
cmp
pop
shll
iret
jnp,pt
lods
sub
mov
sbb
jecxz
cmp
lret
pop
cmp
imul
pop
lahf
jne
movsl
ret
push
inc
jp
loop
and
repz
lret
ret
and
call
dec
stos
push
jbe
push
repnz
xor
mov
jnp
imull
rclb
cmpsb
int
ret
xor
add
out
lcall
push
addl
xchg
mov
sarl
popa
cmp
inc
testl
sbb
shlb
icebp
inc
sbb
std
mov
or
sub
dec
xchg
lret
mov
sarl
lret
push
mov
mov
mov
and
idivb
cmp
aad
xchg
or
mov
aaa
std
cmc
xchg
jno
cmpsl
adc
ror
test
cmc
pop
add
jo
ds
sahf
push
test
or
iret
mov
jmp
xchg
or
mov
xor
xor
pop
jg
dec
stc
jp
addr16
xor
add
icebp
cmp
rcrb
jns
pusha
mov
jge
in
loop
movsb
ja
pop
jl
neg
sbb
pop
dec
mov
dec
stc
xlat
xchg
sbb
ret
add
jnp,pn
sbb
lock
mov
xchg
ret
xchg
test
mov
or
mov
lea
repz
negb
add
sub
or
pop
call
inc
jbe
mov
mov
jl
movsb
xchg
add
sti
loopne
or
and
push
fisubrs
sub
push
lcall
push
xorl
jb
outsb
pop
nop
je
fimull
jb
rclb
movsb
ljmp
adc
out
arpl
xchg
add
xchg
aas
fistpll
addr16
push
dec
add
push
loop
jnp
insl
pop
mov
pop
pushf
iret
aam
mov
jno
hlt
inc
sub
mov
movsb
ds
fcomps
insl
mov
out
inc
cmp
push
adc
int3
jmp
xchg
xor
insl
ret
popa
loope
daa
add
imul
push
popf
mov
lock
hlt
int3
jle
icebp
sub
lds
pop
incl
iret
sbb
lds
loop
push
dec
rclb
xchg
xchg
cmp
mov
scas
push
xchg
mov
pop
pop
adc
adc
test
stos
mov
pop
xchg
repnz
pushf
das
cs
adc
cmpb
iret
push
in
sub
into
push
mov
xchg
pop
add
dec
mov
in
jno
ss
out
fisttps
mov
repnz
xchg
pushf
repz
dec
loope
xor
scas
xchg
sar
mov
xchg
ret
outsl
fldcw
mov
cmp
jbe
std
mov
mov
outsb
mov
fsubr
mov
fnstcw
push
xchg
inc
lea
cmp
push
aaa
pop
xchg
mov
jle
inc
shll
mov
push
lds
push
push
cli
sbb
mov
repz
adc
cli
cmpsl
mov
xor
test
dec
nop
loopne
pop
mov
push
mov
jmp
adc
cs
arpl
stos
popa
popa
lret
mov
mov
dec
nop
jg
sub
ss
bound
jno
or
outsb
mov
jno
loope
test
cs
mov
call
dec
int
mov
push
ret
insb
ret
push
push
push
idiv
cmp
shll
int3
icebp
mov
ret
popf
jmp
jbe
mov
aaa
das
lret
repnz
dec
cmp
enter
sbb
ja
mov
aas
aad
mov
rorb
std
push
dec
daa
jns
imul
addr16
ja
mov
sub
cmp
in
rcll
or
pop
or
dec
stos
xchg
dec
sbb
clc
jns
pop
xchg
push
cmp
shl
push
frstor
add
mov
loop
in
xor
mov
sub
jle
push
bound
jp
das
pop
push
fstpt
xor
cmpb
testb
cs
dec
scas
adc
sahf
sub
pushf
stos
inc
mov
adc
scas
js
ja
mov
jg
jg
in
ss
sti
push
and
dec
test
push
inc
xchg
outsb
push
andl
add
mov
shll
or
addr16
jg
ja
sbb
pop
xchg
push
sbb
pop
jecxz
push
inc
cli
push
pop
push
movsl
popa
and
in
xor
sub
cmp
data16
ljmp
nop
mov
dec
mov
and
push
gs
mov
sub
or
lret
out
adc
ljmp
scas
jno
jecxz
cmp
mov
stos
jge
insl
loop
push
xor
mov
xchg
adc
mov
test
ror
sbb
xchg
repz
or
add
jg
xchg
lcall
int3
les
jnp
cmp
push
fbld
or
cmp
rcr
out
mov
fdivs
mov
push
pop
cmp
icebp
jmp
and
jnp
ss
pushf
mov
adc
fidivs
cmc
or
xor
into
lds
mov
or
cmc
cmpsl
icebp
xchg
push
lock
outsl
cmpsl
sub
and
sub
jl
les
cmp
cmp
test
std
jl
shrb
testl
clc
lods
sbb
cmpsl
add
pop
cmpsl
js
or
out
popf
es
inc
lcall
add
sub
or
sti
or
or
inc
outsb
sub
imul
cmp
inc
mov
inc
xor
cwtl
dec
sub
pop
xor
cmp
shl
mov
dec
xor
pop
jnp
insl
lds
push
fisubrs
push
cmp
pusha
enter
incl
in
ds
push
xchg
jle
outsl
xchg
into
icebp
mov
sbb
fistpll
cltd
lods
das
xchg
stc
dec
pop
mov
pop
jne
xlat
add
xchg
sahf
cmp
inc
jmp
mov
mov
test
inc
enter
shlb
sahf
test
out
sub
loop
outsl
cwtl
cmp
and
decb
shrb
and
enter
adc
enter
imul
shl
inc
sub
adcl
fnstcw
push
xor
rcr
fidivrl
sbb
in
ja
lret
inc
rolb
cwtl
pop
xor
jo
pop
jp
scas
cmp
pop
into
mov
mov
mov
inc
jp
aam
mov
lcall
imul
adc
push
inc
aaa
popf
push
loope
pop
loope
mov
xchg
xchg
imul
jb
shrl
xchg
cmp
insl
add
stos
fcmovne
add
jo
std
popa
xchg
dec
xchg
ret
icebp
sbb
dec
nop
xchg
inc
inc
adc
and
call
or
sub
insb
ljmp
sbb
mov
or
pop
or
dec
pop
scas
xor
jl
xchg
sbb
das
aaa
clc
repz
xchg
test
int
cltd
rcll
sbb
mov
popa
loopne
ret
dec
rorb
adc
lods
daa
ss
xor
xchg
push
inc
setns
call
lret
lods
or
fsubrs
sbb
nop
faddl
into
xchg
popa
xchg
loope
sub
aas
fcoms
xchg
sbb
fsubl
push
mov
inc
loope
xchg
mov
fnstcw
loopne
mov
jle
inc
dec
into
mov
inc
mov
inc
jnp
jbe
icebp
ss
mov
dec
addr16
sub
insb
out
or
aad
lods
in
and
xchg
insl
das
mov
mov
inc
ret
jae
adc
aam
jnp
out
push
imul
sub
outsl
stos
push
pop
mov
inc
neg
jo
popa
lret
es
cs
xchg
lods
pusha
push
xorl
lock
mov
xchg
xlat
sub
jbe
mov
outsl
ja
call
ret
inc
inc
jo
mov
int3
push
xchg
ja
push
push
jns
ljmp
lods
pop
pop
into
cmp
sub
xor
aaa
fwait
sbb
adc
and
push
mov
mov
adc
mov
pop
orl
insb
jg
in
xor
jbe
js
test
or
inc
pushf
pop
or
cmpb
outsl
addr16
mov
lahf
dec
popf
push
inc
mov
leave
mov
sub
out
rcrl
dec
mov
xchg
sub
sub
sar
mov
add
xchg
pop
pop
jae
push
inc
lcall
xchg
inc
jp
mov
adc
in
mov
pop
hlt
cwtl
sbb
inc
cmp
push
xor
out
je
and
rcl
das
dec
call
aas
lcall
pushf
dec
mov
mov
test
pop
int3
adc
movd
call
stos
jecxz
adc
dec
jg
xchg
shr
aas
add
pop
xchg
int3
push
sbb
sub
add
test
dec
cmpsl
mov
repz
jns
fnstenv
jb
push
ret
adc
add
ficompl
aad
imul
ljmp
xchg
ss
lret
inc
imul
push
sbb
push
mov
jl
into
into
in
sti
into
pop
dec
xor
xor
sahf
outsl
repnz
mov
insb
cs
lcall
mov
sar
aam
sbb
shrl
dec
scas
fistl
xchg
stos
stos
shlb
and
std
mov
push
cltd
mov
xor
subl
sub
negb
arpl
or
lea
bound
test
jge
push
lea
hlt
ret
insl
sarl
sbb
fmuls
dec
pop
scas
aad
lods
pushf
je
repz
stos
imul
or
and
adcb
ret
test
ja
xchg
lret
scas
inc
and
stos
and
pop
dec
sub
cs
jne
notb
jmp
mov
dec
inc
add
pop
sti
inc
cmp
dec
roll
nop
push
sbb
aad
inc
aad
lea
insb
scas
insl
cmpsb
adc
push
sahf
dec
dec
leave
in
pushf
inc
pop
insl
sub
mov
sub
int
mov
mov
out
mov
mov
in
iret
mov
ds
punpckldq
jns
mov
dec
cmp
cmp
mov
cltd
test
mov
jge
stos
in
inc
and
mov
inc
cmpsl
inc
xchg
ljmp
xor
adc
insb
xchg
gs
lret
or
and
movsl
jle
dec
lea
inc
dec
out
xor
cmpsl
test
xor
mov
dec
std
outsb
xchg
jle
cli
in
jb
add
add
mov
shrl
push
add
lock
jo
ficoms
lods
cmpsl
dec
gs
scas
push
fsubs
fs
dec
push
add
cli
aad
sub
mov
mov
inc
xor
mov
test
out
adc
fwait
push
dec
cmp
lret
mov
fistpl
push
add
sbb
push
and
adc
ljmp
adc
adc
test
xor
sbb
fdivr
add
xor
inc
cmp
ljmp
cmpsb
mov
fildll
ret
xor
aam
dec
lock
and
push
or
push
adc
push
push
repnz
rolb
inc
in
rcll
jb
dec
or
jl
inc
xchg
je
fisttpl
jg
mov
mov
xchg
xor
mov
jno
sahf
stc
pop
fiadds
lock
fnstsw
cmp
pushf
filds
in
mov
push
xchg
cmp
dec
data16
std
int
cmc
mov
mov
or
in
jnp
in
cmpsb
ljmp
shlb
lcall
push
out
je
ds
insl
lods
test
xchg
adc
inc
adc
jp
rcl
pop
fwait
ds
scas
clc
pop
and
sarb
filds
pop
cmp
rcrl
rcrb
mov
xchg
pushf
cmc
or
je
imul
add
pop
push
jg
push
push
pop
pop
and
repnz
or
add
fucom
jbe
loopne,pt
into
sbb
shr
nop
lahf
jo
xchg
adc
pop
sti
scas
repnz
pop
out
imul
mov
or
xchg
push
andl
sub
sbb
inc
jae
xor
scas
mov
arpl
sub
jecxz
mov
xor
lea
andb
push
cli
xchg
cmp
jne
mov
cmp
xor
jne
ret
addr16
mov
nop
mov
cmove
add
inc
add
mov
and
cmc
stos
mov
int
dec
rcll
shrb
icebp
je
mov
test
pop
std
fld1
cmpsb
out
xor
lea
inc
in
les
js
je
test
xor
xchg
add
dec
push
cmpsl
loopne
lret
push
ret
incl
adc
sahf
and
popa
cmpb
mov
mov
jmp
mov
aam
inc
pop
mov
sub
inc
push
xor
sub
or
dec
mov
jle
int3
sub
iret
call
sti
nop
ret
es
fmull
or
call
sub
jnp
mov
into
lods
jns
pop
popa
pop
stos
mov
roll
addr16
int3
mov
ret
loop
dec
sarb
insl
in
mov
out
push
sahf
xchg
jp
cmpsb
ja
es
repz
ret
iret
xor
sub
mov
xchg
xor
cld
mov
mov
xchg
adc
mov
popf
fldt
aam
rolb
js
mov
es
sbb
cmp
fs
imul
jnp
pop
sbb
push
aam
or
cltd
lea
xchg
mov
xchg
mov
inc
cli
aad
or
add
xchg
std
push
push
scas
mov
cwtl
jle
out
dec
icebp
adc
inc
mov
sarl
out
sbb
mov
sub
pop
mov
pop
leave
ja
das
int3
mov
jle
fucom
test
cmpb
jns
test
fst
lcall
nop
jns
fistpll
insl
cmp
and
jmp
sub
push
mov
aad
lahf
nop
jo
cli
out
xchg
push
adc
push
jo
repnz
jge
in
nop
fdivs
pop
fbstp
and
inc
jge
repz
daa
frstor
add
xchg
and
lock
adc
mov
inc
stc
or
xorl
mov
jp
fmuls
iret
jecxz
pop
sub
mov
pop
mov
dec
cmpsb
hlt
adc
adcl
scas
xchg
insb
pop
add
or
fisubrs
mov
fists
xchg
or
out
dec
fs
mov
mov
or
scas
inc
mov
inc
outsl
cmp
lds
lcall
pop
std
inc
dec
fisubrs
loop
add
pop
adc
mov
mov
push
cmp
rcr
mov
xor
inc
fists
popf
shrl
fdivl
aad
in
std
into
mov
jns
outsb
mov
not
loopne
in
cmp
mov
scas
xchg
xor
out
pop
and
push
dec
lret
inc
pushf
nop
or
stos
test
cmp
stos
insl
sti
aam
lcall
shll
xor
lret
ffree
shll
call
jb
cmp
and
leave
outsl
and
jbe
xlat
pop
rcll
inc
jbe
jmp
loopne
pop
clc
inc
xchg
je
jbe
push
clc
fwait
inc
mov
xor
ljmp
lret
and
sbb
jmp
movsl
ljmp
jl
loop
lret
mov
clc
push
jb
fnsave
nop
mov
int3
cmp
mov
mov
dec
push
cmp
mov
mov
cmp
je
fcomp
and
inc
and
or
xor
adc
ret
inc
mov
fcoms
out
and
dec
or
mov
loope
jne,pn
sbb
sub
fwait
mov
or
insl
mov
scas
mov
insb
xchg
stc
call
movsl
in
ljmp
ljmp
popf
push
mov
idivl
push
xchg
cmp
xor
dec
adc
adc
js
mov
sub
inc
std
push
lahf
lret
and
dec
sub
adc
add
jl
inc
movsb
hlt
pusha
ficoml
in
mov
mov
call
xor
ret
pop
mov
fcmovnu
jnp
pop
lds
add
pop
sub
adc
mov
cli
dec
jecxz
dec
pop
mov
xor
inc
test
dec
dec
lods
cmp
sub
in
pushf
mov
jl
inc
lahf
pushf
xor
in
xchg
in
lock
adc
out
and
pop
add
fisttps
and
and
mov
jb
or
jo
add
aaa
or
test
adc
sbb
jmp
call
jmp
mov
fidivl
jge
pop
fsubrp
arpl
rcrl
xchg
gs
jmp
add
fcomp
mov
inc
iret
cwtl
push
in
jge
mov
cmp
scas
xchg
xchg
or
rorl
and
xor
pop
ljmp
adc
push
sub
rcll
mov
xchg
dec
jne
xchg
jb
mov
leave
push
cs
andl
jae
pop
xor
lock
in
sub
xor
sub
dec
icebp
mov
std
outsl
fs
push
lret
mov
push
adc
cltd
adc
mov
fs
inc
xor
ret
ss
es
daa
mov
pop
pop
fs
jmp
lahf
lahf
ja
and
xlat
daa
enter
push
iret
insl
fnstsw
push
ffreep
test
scas
lea
jo
dec
xor
mov
shll
gs
and
rcrl
inc
inc
adcl
int
xlat
les
pop
ficompl
out
xchg
cmpsb
push
in
sub
push
scas
fucomi
outsb
loopne
shlb
jnp
add
pop
xchg
dec
cli
inc
dec
pop
mov
loopne
movsb
cld
adc
test
nop
jnp
out
addb
dec
scas
push
sub
xchg
cltd
sbb
pusha
addr16
enter
call
dec
pop
cmpsb
push
inc
push
data16
push
jmp
jb
bound
mov
inc
jnp
ss
push
xchg
loop
cmp
andl
divl
mov
ret
inc
or
fstpl
xor
mov
insl
ds
cmp
sbb
sub
int
into
lds
negl
into
xor
test
sub
mov
push
push
mov
mov
dec
pop
into
ds
sbb
inc
subl
or
or
out
in
aad
ror
test
dec
rolb
xchg
jg
jnp
insl
pop
cmp
mov
mov
lods
lret
pop
ss
ljmp
shlb
lcall
out
fidivs
jno
sub
int
xor
popa
or
sub
sahf
out
loopne
dec
cmp
sbb
inc
push
test
in
lret
insl
cli
inc
repz
adc
cmpsl
jge
les
mov
cmp
popf
shll
push
add
sbb
pop
lret
and
xor
in
and
xchg
or
sub
std
std
out
adc
lret
adc
adc
and
jne
cmp
js
imul
mov
imulb
push
dec
add
xchg
cmp
clc
ffree
sbbl
inc
xor
outsl
or
lea
sub
pop
cmp
mov
inc
mov
ds
lret
ja
sub
sbb
dec
sub
add
push
ret
add
fs
outsl
lds
xchg
fildl
mov
in
jmp
xor
pusha
xchg
lahf
push
fiaddl
fdivs
in
fs
mov
xor
xchg
mov
rolb
rcrl
jge
mov
adc
in
and
xlat
dec
inc
sub
lods
fdivr
lock
enter
mov
dec
fldt
out
xchg
es
popf
hlt
out
enter
loopne
dec
adc
jns
push
adcl
pop
xchg
add
je
dec
ljmp
lret
xor
pusha
fucomp
push
arpl
jle
sub
adc
ds
and
cmpb
jne
pop
pop
addr16
mov
vpmaxsw
mov
ljmp
push
iret
aaa
int3
push
push
fistps
pop
out
int3
mull
or
les
push
or
int3
in
push
inc
imul
loope
daa
outsb
xchg
adcl
inc
adc
push
es
xchg
lret
fbld
ljmp
scas
outsb
lcall
cmpsb
sbb
xchg
loope
jge
pop
das
pop
mov
imul
pop
mov
jae
pop
and
loopne,pn
adc
mov
pop
and
pop
jb
cs
cmp
pop
pop
sbb
mov
xchg
cld
xchg
sbb
and
scas
in
insl
fldl
int3
imul
hlt
jle
jbe
call
test
lahf
or
and
ret
out
je
call
movsl
stc
pop
xor
add
inc
sub
rol
mov
je
or
lods
ficoms
push
xor
js
mov
push
in
es
std
movsb
and
or
jge
ret
pop
jno
outsl
bound
pop
inc
xchg
xchg
ret
lea
incb
jno
fstl
out
jno
repz
rcrb
loope
add
int
xor
sbb
insb
clc
movsl
cmp
mov
pop
movsb
mov
es
sub
nop
cmc
mov
lods
adc
fsubp
pop
shlb
or
jge
push
xor
mov
xor
in
in
popf
push
mov
into
sbbb
mov
push
jle
push
mov
pop
sbb
popf
repnz
out
aam
sbbb
test
mov
jl
cmpsl
mov
lcall
ds
xor
ja
cmp
jb
imul
inc
outsb
inc
jg
punpckldq
pusha
inc
push
imul
out
rcl
shl
xchg
or
mov
mov
and
jno
fcomp
sub
mov
scas
dec
or
adc
repz
sub
add
shrl
add
outsb
ja
and
and
adc
and
pop
adc
dec
das
hlt
cmp
mov
jle
rorl
addr16
dec
sbb
xor
xor
and
dec
or
dec
dec
and
addl
jp,pt
imul
mov
stos
cli
out
shl
in
icebp
cmp
push
sub
push
test
mov
jbe
cmp
xchg
inc
or
mull
cli
mov
jae
rcrb
or
movsb
lods
push
inc
notl
add
out
dec
je
in
loope
int3
sar
imul
int
sar
pop
dec
push
mov
and
and
jns
andl
xor
loope
add
mulb
loope
cwtl
cmpsl
mov
mov
xor
es
and
cmp
mov
mov
orb
in
or
dec
push
test
pusha
sahf
mov
xor
mov
ss
repz
icebp
jmp
xchg
mov
dec
fneni(8087
cmp
mov
cmovg
ja
pop
cmp
adcl
ljmp
leave
mov
es
jb
and
fcompl
cmpsl
pop
movsl
flds
xchg
or
sub
loop
sbb
int3
hlt
pushf
test
ljmp
fs
xchg
and
push
sub
mov
pop
insb
data16
push
pop
mov
jge
outsb
jl
into
stos
enter
aam
mov
mov
xchg
lret
xlat
es
mov
repz
sbb
fdivrs
jnp
inc
pushf
mov
rclb
aad
cmp
push
adc
xchg
ds
mov
es
sub
xor
sbb
cmp
push
cmpsl
dec
rcrl
es
and
xor
mull
das
test
jo
mov
push
cwtl
jo
imul
and
jge
lcall
data16
pop
adc
aas
mov
addr16
cli
addr16
jb
cmp
fucomip
mov
shlb
jl
lea
add
mov
mov
sahf
or
inc
ljmp
sub
sbbl
int3
pop
jmp
addl
mov
xchg
jg
mov
repz
int3
popf
inc
xor
jo
out
sub
sbb
bnd
and
repz
pop
dec
mov
xor
out
leave
adc
push
mov
sbb
cwtl
xchg
adc
adc
xor
sbb
leave
mov
push
test
mov
pop
pop
ret
inc
popfw
mov
lcall
icebp
cs
dec
loop
mov
repz
test
push
rcr
movsl
into
movsl
lods
xchg
repz
push
adc
push
ror
adc
inc
jbe
ret
jbe
adc
and
pop
add
add
fistl
outsb
sbb
adc
aam
xchg
jbe
testl
out
xchg
xchg
mov
cli
les
and
xchg
push
ja
push
xchg
pop
dec
sub
sbbb
adc
ficompl
aaa
pop
loop
push
push
mov
std
ja
add
sbb
mov
pop
add
mov
and
hlt
xchg
or
loope
mov
dec
in
leave
test
idivb
idiv
lea
pop
dec
ljmp
fistl
dec
xlat
orl
dec
stos
mov
pushf
xchg
mov
into
into
cmp
xchg
and
push
lret
inc
xchg
mov
and
iret
jns
out
sub
dec
sbb
cmpsb
inc
cmpb
lret
mov
fcoms
mov
aaa
mov
jne
sbb
fwait
jnp
mov
inc
inc
push
pop
and
add
out
mov
sub
adc
fstp
or
mov
jecxz
insb
or
add
divb
hlt
cmp
cltd
pop
scas
and
gs
ss
cld
add
fidivs
inc
mov
xor
or
js
inc
pop
and
push
dec
cmp
repnz
jmp
mov
cld
iret
mov
dec
push
ja
fcmove
rcl
cmp
js
jl
les
fst
or
adc
push
stos
cmpsl
add
add
out
ret
dec
xor
movsl
push
xor
out
xor
mov
fs
sarb
icebp
es
jmp
xchg
jne
stos
mov
cmp
mov
stos
mov
ret
adc
cmp
ds
cld
insb
cmpsl
jbe
add
fnsave
pop
bound
sbb
inc
adc
int
mov
outsb
into
divl
int
cmc
add
and
addl
ljmp
mov
and
movsb
push
popa
psubsb
dec
test
sbb
mov
push
outsl
cmc
add
adc
jg
push
out
sub
lret
cmp
ja
out
aaa
stos
sub
mov
insb
outsl
cmpsl
movsl
ja
sbbb
jle
stos
dec
xor
jecxz
xor
xor
lret
pop
mov
push
sbb
ljmp
sub
lds
outsl
loop
aas
repnz
shr
push
pop
cld
je
sbb
push
push
xchg
repnz
cld
aas
adc
xchg
imul
push
es
movsl
pop
js
mov
int
std
and
or
sti
loopne
add
sarl
mov
dec
cmc
or
push
test
icebp
pop
movsl
dec
aad
fnstenv
fs
je
push
cwtl
xor
pusha
xchg
pop
mov
test
mov
ds
loop
mov
popa
sahf
and
xchg
adc
enter
add
pop
ds
insl
cmovno
popf
in
push
rcrb
mov
xchg
mov
fcmovnb
fmuls
pop
sarb
jp
or
stc
insb
add
popf
mov
sahf
dec
push
lahf
xchg
cmpsl
in
stc
adc
out
out
mov
add
jle
outsb
jb
mov
ljmp
cmpsb
rorb
scas
and
lods
and
push
sub
lods
and
lcall
jns
jmp
add
aas
mov
loop
pop
dec
test
sub
jns
mov
sbb
popf
pop
xchg
xorl
into
jmp
dec
mov
loopne
shlb
adc
dec
adc
or
ljmp
or
ret
xchg
mov
xchg
lea
insl
or
cltd
pop
mov
xor
xchg
mov
mov
push
jb
mov
cmp
decl
push
ja
xchg
into
push
fcoms
scas
movsl
push
cltd
fstpt
fbld
insb
adc
or
xchg
and
js
jb
pop
repnz
rorb
cld
or
add
lret
addr16
aas
sub
das
pushf
fcomps
jp
cmp
mov
cmpsb
lahf
xchg
std
pop
and
mov
inc
scas
dec
adc
dec
jg
adc
add
mov
lcall
fs
mov
dec
pop
sbb
in
cmpsb
mov
mov
push
adc
jo
jae
xchg
and
es
cs
xor
mov
call
mov
arpl
dec
aaa
inc
xchg
into
lea
adc
test
gs
mov
ljmp
cmp
xchg
test
aas
insb
fwait
cmpsb
push
ret
xor
jmp
ret
jp
mov
and
jp
sbb
cs
lock
dec
in
icebp
push
lsl
mov
cmp
daa
inc
jne
fdivl
or
adcb
xor
sub
mov
iret
push
cmp
sub
mov
les
testl
sti
stos
mov
push
lods
fwait
hlt
cmpsb
sub
in
and
mov
push
rcll
into
pop
cmp
sub
movsl
icebp
rcrl
sub
jbe
pxor
int
cmp
test
repz
mov
nop
pushf
sbb
adc
push
mov
js
test
mov
jge
and
aas
cltd
mov
nop
andps
dec
mov
mov
dec
aaa
cmpsl
in
push
mov
or
cmp
out
rolb
xlat
xchg
ds
stos
mov
data16
dec
lahf
insb
jg
xchg
fwait
lods
xchg
insl
sub
and
mov
dec
cltd
lea
popf
jle
mov
adc
or
xlat
out
cmp
inc
mov
imul
rcll
mov
jae
push
mov
ss
mov
mov
pop
adc
cmp
dec
loop
add
dec
out
int
pushf
cs
jnp
mov
neg
jl
imul
mov
test
mov
mov
jnp
xor
das
scas
mov
or
divl
rol
out
pop
rcl
inc
push
pop
mov
out
and
jne
xchg
imul
push
push
xor
fnstenv
or
sub
bound
cli
cmp
in
add
mov
lds
test
or
cmc
or
lret
in
jae
sbb
jno
das
jne
imul
dec
inc
push
fwait
andb
mov
cmp
pusha
xor
aad
out
xchg
xlat
add
sti
enter
pop
stos
add
xchg
mov
sbb
popf
jo
or
push
push
shl
mov
cmp
pusha
push
jg
scas
stc
xchg
mov
adc
incl
fcmovu
pop
pop
shrb
xlat
adc
in
lret
lods
lock
imul
jecxz
outsb
adc
cmp
iret
sti
and
shr
pop
jmpw
enter
sbb
test
mov
sub
lods
inc
std
jae
jnp
add
inc
imul
adc
mov
mov
pop
out
add
ret
mov
fisubrl
and
je
xor
iret
push
mov
aam
outsb
notl
in
das
xor
push
and
jb
pop
outsb
sub
and
or
test
inc
andl
int3
dec
movsb
imul
or
inc
dec
ret
ljmp
ja
addl
scas
iret
je
out
repz
dec
hlt
mov
cmp
dec
cmp
sub
push
jle
pop
pop
fisttpl
in
movsl
repnz
cld
fnstcw
loop
adc
mov
jecxz
xor
lret
add
imul
mov
sbb
pop
loop
inc
jns
stos
mov
inc
rorb
dec
adc
dec
add
jge
or
mov
cmp
into
dec
test
add
adcb
or
mov
pop
js
jle
inc
push
inc
ljmp
jg
insb
lret
clc
enter
ficompl
mov
gs
mov
mov
lahf
sbb
jl
sti
jno
pushf
ja
fisubrs
insl
push
dec
xor
mov
movsl
out
fstl
imul
lcall
sub
xlat
hlt
movsl
loope
mov
lods
jns
divb
stc
pop
pusha
cmp
shlb
xlat
or
xchg
or
inc
jecxz
xchg
adc
lds
repnz
jns
and
ljmp
cld
mov
out
cmp
les
add
inc
popa
jmp
cli
jo
dec
scas
mov
sbb
jno
pop
imul
ss
outsb
shll
or
loop
iret
out
dec
jns
jno
dec
xchg
cld
push
adc
jp
push
orl
cmpl
or
xor
lods
sahf
inc
insb
sbb
or
mov
leave
movsl
cli
xchg
dec
arpl
fisubs
add
pop
nop
mov
mov
pop
popf
xchg
jg
incb
fldcw
repz
sarl
bound
push
sub
cmp
sarl
ds
jns
loope
lahf
gs
xchg
test
pop
int3
and
mov
es
cmp
in
es
imul
sbb
cmpsl
out
sub
add
or
call
test
int3
mov
mov
xchg
sbb
leave
sub
or
pushf
jmp
add
jle
add
or
pop
mov
xor
call
subb
sub
scas
test
decb
movsb
and
and
jnp
jb
cli
xor
adc
cmpsl
pop
lds
out
push
xchg
or
pop
lcall
stc
int
push
test
sbb
test
jbe
adc
aaa
mov
adc
andl
inc
mov
xor
sub
cmp
stos
leave
popf
xchg
aam
pop
inc
ja
aaa
lea
in
popa
aaa
test
jg
roll
add
dec
loope
test
xchg
enter
adcb
imul
callw
popf
or
and
stos
jno
int3
or
into
fcmovne
jle
popa
inc
inc
adc
or
mov
insl
jmp
jmp
fwait
jmp
push
jne
je
dec
xor
sbb
outsl
addr16
inc
test
sub
jp
push
mov
dec
test
ret
mov
push
mov
shl
or
lea
hlt
xor
lret
pop
jae
scas
xchg
mov
jo
add
imull
mov
xor
xchg
js
mov
push
incb
insl
aaa
scas
stos
pop
popa
fdivl
jge
cvttps2pi
int
aas
add
add
icebp
push
and
xchg
mov
mov
enter
inc
sbb
mov
pop
xchg
mov
idiv
inc
loopne
jle
cmp
and
cmp
jle
sbb
push
in
movsl
sub
out
mov
xchg
push
sarb
cld
mov
inc
mov
bound
lea
and
xor
mov
xlat
sarb
test
lea
stos
cld
mov
jmp
add
push
pop
mov
push
or
sbb
rcrl
lods
imul
lods
ficomps
dec
mov
xchg
roll
jmp
packuswb
cwtl
jbe
cwtl
cmp
dec
outsl
sub
stos
mov
sub
inc
lahf
fisttpll
sbb
clc
mov
jno
repz
sbb
ljmp
stos
or
xchg
xchg
fstpt
sub
lret
and
popa
or
imul
cmc
xor
mov
loop
dec
movsl
inc
hlt
jno
inc
insb
out
jns
cmp
mov
mov
cs
cmp
pop
mov
out
mov
or
push
cmc
adc
aam
test
rcrl
or
mov
sbb
in
mov
fldl
xchg
jne
nop
add
data16
ret
mov
shl
jno
out
rcr
mov
sbb
mov
cmpsb
mov
mov
inc
adc
ret
test
mov
shrl
mov
test
adc
push
xor
mov
lods
mov
lods
cmpsl
fs
movsl
xchg
fucomi
sub
shr
add
outsb
ja
movsl
in
sbb
fisttps
add
lcall
inc
adc
inc
fs
mov
adc
dec
dec
xchg
stc
into
pusha
xor
mov
pop
movsb
xchg
cld
inc
xor
rcll
jnp
push
mov
fwait
jb
iret
out
les
loope
js
adc
mov
add
repnz
loope
btr
fimuls
mov
push
sbb
popa
push
sub
sub
inc
subb
ds
rcl
sub
pop
imul
test
cs
subb
sub
shl
and
lods
or
js
push
frstor
mov
fwait
dec
mov
mov
aas
inc
mov
stos
sub
stc
jge
mov
cmp
and
xchg
pop
icebp
icebp
xorb
add
sub
stos
pop
repz
xor
sti
add
sbb
inc
daa
push
push
lods
sub
lods
mov
loop
mov
mov
shrb
mov
lock
sbb
mov
mov
aam
popa
jbe
sbbl
xchg
add
sub
es
inc
sahf
lret
je
ljmp
jns
xor
cmp
push
outsb
push
insb
dec
loope
daa
mov
dec
loop
or
stos
punpckhdq
je
sti
pushf
and
xor
add
imul
jb
stos
cmp
jnp
stos
pop
or
mov
xchg
inc
cmp
mov
adc
push
lods
pop
or
sub
das
adc
in
ds
xor
leave
sarb
mov
mov
push
out
inc
fnstenv
nop
and
lds
rorl
jno
scas
and
test
push
mov
and
or
loope
pop
push
mov
jne
in
loop
adc
xchg
add
xor
inc
pushf
add
enter
nop
inc
dec
js
sbb
adc
lcall
sbb
push
adc
orb
outsb
dec
into
xor
xor
jae
add
stos
notl
xor
mov
dec
push
stos
sti
repnz
movsb
adc
sbb
cs
mov
insb
lds
mov
adc
pop
jg
xor
je
or
xchg
mov
adc
outsl
push
inc
pusha
sti
stos
ds
xor
shlb
cmp
lret
stos
xchg
inc
or
in
cmpsb
mov
jge
adc
loopne
dec
dec
jle
dec
loop
in
mov
jecxz
loopne
xor
insl
test
cld
cmp
jg
push
enter
add
mov
aaa
addr16
adc
and
sbb
push
icebp
dec
andb
mov
idiv
mov
mov
push
mov
enter
aad
cli
fildl
ja
fdivrs
test
and
stc
pop
ds
arpl
insl
cld
pop
mov
lea
mov
dec
mov
xchg
imul
clc
fwait
inc
adc
in
xor
mov
jecxz
dec
inc
mov
in
sub
adc
icebp
cltd
cmp
cmp
daa
repnz
pushl
js
lds
or
xchg
push
stos
jb
js
mov
cmpl
dec
or
aas
and
aas
icebp
mov
and
daa
dec
push
cltd
mov
insl
fldenv
xor
andb
and
jb
adc
icebp
mov
cmp
popf
pop
inc
ds
adc
sahf
push
into
es
or
hlt
fmuls
jmp
pop
cmp
xor
sbb
xchg
mov
and
adc
test
idivb
je
adc
ficoms
enterw
lret
push
aaa
inc
in
xlat
pop
push
mov
cli
ljmp
push
push
jno
rcll
daa
dec
jbe
dec
and
lcall
cmc
pop
mov
lock
hlt
ficoml
in
rclb
je
out
sub
dec
ficompl
mov
dec
and
dec
inc
test
mov
adc
sti
push
mov
xchg
and
lcall
or
stos
insl
subl
ds
mov
imul
aam
fucomip
test
aam
lods
push
data16
test
ja
cmp
ret
adc
bound
push
jl
ja
aam
pop
ds
into
pop
test
dec
testl
adc
mov
xchg
enter
imul
roll
mov
jne
mov
cmp
int3
cmp
adc
int3
push
clc
icebp
push
cltd
sbb
addb
xchg
cmpsb
adc
pop
push
cli
dec
mov
mov
cmp
fdivrl
sbb
add
xchg
push
push
add
cwtl
inc
fwait
mov
mov
lcall
or
and
leave
in
jl
xchg
push
in
jne
rorl
jge
jnp
das
out
cmc
mov
inc
pop
std
adc
mov
mov
popa
xor
mov
add
icebp
fxch
scas
js
cmp
or
jp
rcll
mov
and
and
data16
stc
pop
icebp
ret
pop
mov
ret
cltd
or
sbbb
repz
lods
add
adc
push
mov
lds
or
cwtl
loopne
push
andb
xlat
fsubl
xchg
popa
sar
inc
shlb
push
jbe
frstor
mov
inc
cmp
xchg
dec
fstl
xchg
or
fmuls
jns
or
inc
les
mov
mov
push
fsubs
scas
sub
add
dec
push
test
popl
out
push
stos
mov
inc
cmc
xor
outsb
add
clc
cmp
xor
je
mov
hlt
out
stc
sti
imul
xchg
imul
imul
dec
cwtl
xor
icebp
pusha
jb
adc
in
movsb
loope
pop
rcll
mov
jmp
mov
pop
hlt
push
pop
and
dec
call
fidivrs
imull
mov
or
into
popa
lahf
and
aaa
xchg
add
call
inc
adc
in
xchg
ss
xchg
fisttpll
outsb
inc
je
cmp
shl
jecxz
cli
movsl
xor
xor
mov
out
insb
xor
pop
pcmpeqb
or
test
mov
mov
mov
repnz
call
dec
jbe
cmp
mov
push
loope
cmp
jmp
sti
push
addl
cmc
sti
mov
pop
dec
pop
rcrl
arpl
mov
dec
sahf
popa
arpl
mov
scas
cs
mov
lock
or
jl
sub
or
out
push
xor
icebp
out
jle
inc
add
push
out
dec
insl
test
lods
lret
loopne
mov
jecxz
jecxz
or
mov
int3
inc
lahf
push
cli
push
jle
pop
mov
cmp
jae
xor
notb
adcl
shrl
or
adc
push
and
lahf
and
lods
jno
and
mov
js
aaa
outsb
xor
testl
popf
cmp
or
mov
loop
sub
mov
mov
xchg
icebp
xchg
sub
neg
mov
loope
lret
xor
ss
and
out
xchg
arpl
pop
pop
je
pop
adcl
push
mov
inc
jge
aam
cmpb
addb
ror
arpl
xchg
popf
push
gs
push
nop
sti
add
inc
mov
jl
mov
sbb
loopne
and
mov
mov
sub
pusha
addr16
mov
outsl
jmp
mov
and
sbb
jb
sub
int3
fnstsw
xchg
jnp
jp
inc
arpl
sbb
into
mov
mov
jge
cs
mov
and
mov
xchg
fwait
rcr
mov
in
jne
push
and
bound
mov
test
mov
ret
mov
xchg
dec
dec
jle
xor
das
xor
lods
pop
sub
divb
scas
in
pop
cmp
cmpsl
dec
sbbb
pusha
mov
test
push
stc
outsl
test
sbb
mov
ret
or
jne
push
gs
sub
insl
or
inc
dec
inc
adc
sahf
call
or
xchg
mov
int3
movsb
outsb
aad
cmpsb
pushl
popf
daa
mov
add
mov
rcll
out
cld
mulb
and
or
jecxz
in
lret
pop
jg
pop
sub
mov
mov
push
test
imul
sbbb
ret
cmpsl
cmc
movsb
cwtl
cmc
mov
sbb
arpl
fmulp
add
jle
or
and
insb
mov
xchg
pop
mov
xchg
pop
loopne
je
adc
popa
pop
bound
sub
pop
test
popa
push
sub
stos
jnp
sub
pop
sbb
popf
sbb
dec
cld
jmp
fists
pop
lea
iret
and
xchg
aam
bound
jbe
insl
outsl
jge
adc
lret
pop
mov
jecxz
and
xlat
inc
dec
xor
and
sbb
cmp
push
xchg
jecxz
lock
shl
loopne
lds
sahf
test
pop
lcall
jp
pop
test
imul
cmp
or
andl
stos
repnz
adc
inc
and
xchg
add
push
mov
out
fwait
mov
ljmp
mov
into
push
lock
jle
test
push
push
inc
mov
xlat
xlat
pushf
shlb
dec
pop
push
sub
mov
pop
outsl
fnsetpm(287
add
sarl
int3
imul
lea
dec
dec
mov
cs
sahf
sti
pop
dec
jecxz
sbb
xchg
les
les
shlb
shll
ljmp
or
repnz
push
insl
cwtl
xchg
xor
sarl
sarb
sub
xchg
test
push
out
push
into
mov
ss
lret
sub
pop
sahf
cmp
clc
cmp
xor
or
or
out
dec
push
pop
jp
insl
adc
lcall
and
jne
bound
jae
fsubr
mov
shr
jbe
imul
cmp
jp
ret
or
add
in
xor
addr16
lea
mov
pmaxub
mov
std
adc
xchg
or
xlat
pop
push
pop
push
pusha
push
outsb
test
xchg
cli
inc
lahf
ja
andl
and
xor
adcl
cmp
rol
lds
int
adc
xchg
adc
dec
jmp
jbe
test
and
int3
subl
xor
mov
addb
and
inc
xchg
or
mov
dec
ds
or
arpl
mov
popf
mov
icebp
push
push
cltd
fsubl
arpl
inc
sub
add
push
or
in
dec
dec
push
mov
aad
cmp
push
cld
adc
cmp
sti
cmp
test
ljmp
mov
shll
pushf
aas
cmp
pop
in
scas
lock
inc
bound
jge
adc
loop
in
sub
sbb
push
aas
mov
xor
sub
mov
movsl
rcrl
mov
iret
add
jmp
les
mov
ds
popa
ret
xchg
cmpsb
popa
xchg
xor
sub
sub
cmpsb
jge
pop
sbb
das
adc
mov
xor
adc
and
inc
rorb
imul
inc
sbb
test
jl
out
pop
rclb
fcompl
jp
mov
mov
jecxz
adc
xchg
inc
jbe
fs
outsl
cmp
pushf
push
and
test
fcompl
xchg
ljmp
mov
lret
sbb
dec
sub
fdivr
and
clc
das
test
pop
mov
outsb
xor
push
je
mov
ja
mov
sti
cli
cwtl
aas
mov
dec
add
aad
movl
push
aad
rcrb
jbe
xor
jb
iret
mov
shlb
das
stc
jl
hlt
pop
lods
jmp
repz
ss
push
lods
notb
mov
xor
xchg
in
js
insl
cmpsl
adc
push
fwait
je
lds
pusha
stc
xlat
lds
testl
imul
stos
adc
mov
stos
mov
test
dec
add
aam
adc
in
pushf
cmpsl
sbb
mov
jl
mov
stos
jmp
rcrb
mov
jp
mov
or
xlat
xor
dec
lcall
negb
dec
loop
lahf
repnz
je
cmp
int3
in
push
inc
out
shlb
cmpsb
das
or
push
xchg
imul
repnz
mov
sub
lret
loop
outsb
push
push
cs
lea
and
iret
mov
pushf
pop
push
xchg
imul
sub
sti
fisubrl
mov
inc
mov
fwait
in
fisubrl
push
or
outsb
pushl
push
mov
fsub
sub
ja
add
xor
fnsave
daa
sbb
ffree
pop
sbb
xlat
sbb
test
out
repz
dec
cwtl
fisubrl
pop
out
lods
mov
gs
ss
in
ret
xchg
adc
mov
xchg
xor
inc
mov
add
popf
or
inc
inc
adc
into
in
lea
loop
add
sbb
mov
inc
sub
pop
insl
adc
insl
xor
jp
movsb
xor
ljmp
pop
sbb
cmp
ja
sub
ljmp
or
out
test
scas
xor
loope
fwait
out
jp
push
xor
and
mov
mov
xchg
add
or
lahf
dec
lret
sub
mov
dec
pushf
add
stos
or
sub
push
push
pop
adc
sti
mov
add
ror
cmpsb
sub
ss
push
add
fidivrs
int3
arpl
mov
fwait
ret
and
idivb
mov
jnp
pop
inc
subb
adcb
jl
and
jne
shrl
xchg
push
mov
test
sti
add
enter
pop
negb
shrl
mov
movsb
ret
sub
dec
icebp
popa
loop
or
add
adc
cmp
enter
inc
int
push
scas
and
sub
lods
dec
shl
data16
mov
jno
pop
and
pop
xchg
push
jmp
fisubs
repz
sbb
popa
xor
fwait
into
jb
aad
sub
std
scas
xchg
out
call
cmp
or
stos
js
aas
sbb
ret
sbb
arpl
xor
dec
xor
fdivrs
xchg
mov
call
mov
jns
das
idivl
mov
sbb
sub
mov
stos
gs
in
call
jne
push
mov
das
daa
ldmxcsr
or
shrb
and
jecxz
mov
add
call
pop
adc
lods
subb
push
mov
inc
mov
jg
stc
add
jle
dec
lods
pop
mov
or
mov
add
mov
repnz
cmpsl
push
enter
mov
jbe
loop
imul
sbb
xchg
icebp
xchg
or
or
and
add
xor
add
insb
mov
fidivrs
mov
std
aas
sub
add
ja
fwait
xchg
lret
cmc
mov
pop
mov
push
test
jns
mov
pop
sbb
mov
cmp
xor
cs
jb
xorb
push
sar
fyl2x
icebp
loope
xor
xchg
cld
cmc
int3
cmp
cmp
iret
jmp
jb
movsl
fmull
or
arpl
xchg
sub
cmpsl
fs
fadds
leave
int3
sbb
jp
jl
data16
outsl
mov
loop
jmp
sbb
mov
loope
adc
xor
jb
cmp
aad
pop
lret
jp
js
inc
test
std
in
ja
pop
loop
sbb
sub
scas
ja
sbb
pop
cmp
push
sbb
or
ret
out
test
mov
jg
cs
mov
ljmp
mov
inc
test
jb
xor
xchg
dec
loope
inc
mov
or
cmp
xlat
cli
xor
stos
ss
fsts
sbbl
mov
sbb
mov
push
jb
les
adc
jg
ja
cmp
ret
aaa
gs
ss
cs
adc
punpckhdq
mov
ret
fdivs
inc
adc
mov
mov
or
jp
imulb
cld
mov
fucom
cmp
fisubs
cld
std
push
pop
movsl
mov
outsl
push
mov
pop
sarb
adc
les
inc
and
push
stc
mov
addl
nop
xchg
xor
ret
jne
ret
push
adcb
sub
add
ss
repnz
pop
or
adc
lret
cld
xchg
je
inc
shll
add
ficompl
dec
or
or
stc
divl
inc
mov
mov
movsl
mov
rclb
out
inc
je
addb
dec
mov
stos
push
les
xchg
ret
ljmp
push
cmpsb
inc
jp
incb
xchg
lahf
rcr
stos
or
stos
xor
mov
adc
push
xor
es
inc
imul
add
mov
loope
call
repnz
cmp
and
push
mov
jae
and
movsl
xlat
jae
fcomip
pusha
dec
pop
rcr
lock
out
xlat
dec
jo
das
or
mov
iret
test
inc
xchg
popa
in
out
jge
push
jne,pt
jnp
sti
and
test
stos
xor
xor
jle
aam
test
fisubs
inc
jle
sub
loop
out
mov
xchg
iret
fstpl
sub
mov
bound
jmp
cmp
cmp
push
fcmovu
or
aaa
out
xchg
jg
mov
dec
scas
test
cmpsb
pop
inc
ret
push
lods
mov
lret
lods
and
mov
fldl
es
xchg
add
out
jl
fmull
scas
add
int
and
sti
dec
lea
lahf
faddl
mov
pop
ret
fists
xchg
loop
shll
fwait
int3
add
mov
jne
lods
add
cli
int
adc
jb
jmp
xor
call
pop
or
ret
jnp
data16
inc
cmc
sahf
cmc
mov
or
xchg
and
fidivs
cmc
jl
les
aad
sbb
fists
and
mov
jb
or
sbb
in
and
adc
mov
ret
jg
add
dec
testb
or
mov
insb
lods
mov
sbb
mov
jmp
int
imul
mov
inc
xor
lods
daa
sub
sub
mov
sbb
ljmp
dec
cmp
mov
pop
jge
jbe
enter
insl
mov
jge
ljmp
loopne
mov
xor
mov
cs
sahf
insl
shr
inc
sub
or
push
ret
adc
inc
xor
inc
int
cmpsl
lds
test
mov
fwait
xchg
jb
pop
dec
cwtl
jmp
scas
stc
rolb
xor
push
rol
cmp
push
jns
cmpsb
pushf
pushf
hlt
sbb
or
pushf
scas
fsubs
insl
xchg
test
mov
jge
adcb
rcrl
mov
ljmp
out
xor
imull
cltd
nop
or
add
mov
jae
fsts
sbb
mov
popf
mov
mov
inc
xor
pop
mov
sahf
push
cmp
iret
ljmp
jno
jno
and
and
js
mov
sub
mov
mov
repz
push
xchg
icebp
mov
frstor
stc
xor
sub
jno
icebp
cmpsb
push
clc
sub
inc
inc
push
xchg
xchg
movsl
xchg
jp
push
cmpsl
xchg
in
paddusb
in
arpl
dec
inc
ja
out
aaa
jle
xchg
pop
push
dec
shrl
in
push
and
scas
add
cwtl
neg
sbbb
mov
cld
icebp
mov
lds
roll
add
lea
push
fildl
sahf
icebp
lret
jl
cmpsl
jnp
mov
mov
or
and
mov
and
jecxz
add
xorl
aaa
imul
filds
push
and
fisubs
xor
in
xlat
push
mov
shlb
pushf
insl
xchg
fstpt
mov
nop
sub
jnp
loope
xchg
add
sti
mov
iret
and
fdivl
sbb
sarl
xchg
adc
mov
in
inc
xchg
xchg
sbb
int
add
pop
xor
fildl
pop
bound
sbb
movb
dec
jne
in
mov
lea
add
mov
mov
mov
mov
inc
out
cld
jne
mov
mov
shrb
jnp
mov
dec
push
addr16
daa
repz
aaa
xor
and
sub
mov
lahf
xor
loope
fs
jbe
lock
pop
into
xor
cmp
imulb
roll
in
mov
dec
pop
rcrl
ret
or
and
cmc
cmp
js
jl
pop
insl
ljmp
movsl
test
popl
mov
icebp
and
lds
jnp
in
scas
jo
scas
push
andl
inc
inc
mov
push
mov
popa
mov
jp
or
and
ljmp
and
sti
jp
and
push
jb
sbb
lret
popl
mov
fmull
xchg
cmp
xor
lret
std
mov
xchg
pop
cmovp
inc
enter
xchg
repz
jg
rclb
decl
jnp
scas
sub
pop
push
cmp
jbe
cwtl
mov
inc
in
mov
in
lahf
test
cmpsb
sub
sub
lea
mov
sarb
xchg
sbb
sbb
vcvttss2si
fstpt
pop
cld
filds
inc
xlat
push
dec
cmp
daa
dec
and
out
out
jns
pop
jns
outsb
pop
ret
mov
add
enter
nop
lea
cs
inc
pop
push
aad
arpl
or
es
pop
fldl2t
push
iret
push
scas
test
jns
movsl
test
inc
lret
jnp
test
adc
addr16
loopne
sub
inc
pop
int
aam
adc
cmpsb
xor
lret
dec
cmp
mov
cli
aam
fsubl
jno
outsb
mov
mov
fcmovbe
lcall
mov
xlat
call
nop
xor
cmp
jge
lahf
movsb
cmc
jecxz
push
lods
dec
mov
test
cmc
mov
pop
test
xchg
dec
jge
sbb
fdivs
cld
iret
push
cltd
pusha
sub
xlat
call
aad
jno
xor
rep
stc
fs
in
gs
sub
xchg
jbe
jl
es
cmp
into
shrb
jp
cmpsb
cmp
pop
pop
jecxz
es
cmp
es
sarl
loop
add
fisubl
or
int3
sub
pop
les
jecxz
cmc
loopne
testl
bound
cltd
in
mov
shlb
fisttpll
jle
jle
int3
mov
inc
sub
mov
inc
and
dec
jb
or
xchg
dec
mov
sub
loope
xchg
ja
pop
dec
push
leave
and
lods
mov
and
inc
jae
xchg
mov
stos
xchg
cmp
inc
loop
push
xchg
xlat
xchg
pop
adc
push
xor
push
jno
xchg
out
sbb
cmp
pop
repz
xor
pop
je
dec
jg
mov
out
and
add
rorl
xchg
movswl
cmpsb
ja
pushf
das
movsl
mov
lahf
loop
xchg
leave
mov
shll
cs
xchg
test
mull
mov
or
sbb
jl
mov
jae
mov
arpl
andb
jnp
and
cli
insl
in
pop
jge
mov
push
mov
pop
pop
xchg
aas
rcr
pop
mov
or
jl
sub
and
scas
out
test
lea
xor
mov
gs
mov
adc
ficoms
push
into
scas
jg
push
lds
js
test
pop
mov
mov
lahf
rcrb
rolb
vmwrite
adc
rclb
jns
movsl
jb
aaa
popa
testb
stos
scas
or
das
pop
add
cli
mov
popf
cmc
fmuls
pop
jmp
insb
inc
push
test
mov
jne
jle
sbb
subl
sub
sub
inc
pop
aad
jae
addb
xor
loop
lds
popf
pop
jge
or
insb
sti
mov
shlb
repnz
not
adc
pop
rcrl
mov
add
ja
mov
xchg
lret
leave
pop
or
stos
xchg
dec
jno
xor
mov
jns
jg
sub
loope
sub
es
daa
and
jae
pop
cmp
sub
repz
shr
add
lds
lods
loope
in
aad
nop
sub
les
or
or
fisttps
jbe
sub
push
xor
rcrl
and
xchg
sahf
in
aad
pusha
jl
ffreep
dec
cmc
add
inc
pop
xchg
rorl
dec
mov
mov
mov
dec
mov
cmp
test
loopne
out
mov
mov
movsb
push
cli
sub
adc
add
out
cwtl
jb
jbe
xlat
cmp
ljmp
xchg
pop
adc
push
out
inc
aas
fwait
cld
and
jmp
test
inc
jg
loop
leave
aaa
test
sbb
popf
jnp
mov
pusha
push
call
iret
pop
fidivrs
push
mov
test
sub
aam
lock
aaa
or
aaa
rorl
xor
rcll
flds
das
adc
cmp
cmp
mov
xchg
jbe
pop
push
adc
hlt
sub
rorb
inc
rcr
out
ret
lock
jnp
dec
and
push
in
jl
mov
iret
ja
lock
aaa
jno
sub
xor
or
stc
fisubrl
xchg
dec
add
mov
push
inc
in
das
sbb
jno
stos
bound
lret
je
xchg
mov
xlat
addr16
sbb
sub
in
jbe
dec
sbb
test
shlb
pop
or
scas
cmp
fstpt
or
inc
and
or
inc
outsb
mov
in
inc
mov
lret
jecxz
xchg
pop
jmp
sub
xlat
cltd
out
mov
mov
jae
mov
mov
mov
jle
push
ja
sub
iret
mov
sbb
add
pop
es
movsb
sbb
imull
stc
cmc
push
shrb
mov
xchg
add
xchg
lods
popf
out
dec
mov
inc
pop
and
xor
mull
sub
cld
xchg
lods
sub
fisubrs
cli
and
es
adc
fwait
pop
push
nop
fisubs
mov
fisttps
dec
leave
fmull
int3
nop
xchg
fstpt
fcmovb
ss
mov
inc
cmp
roll
mov
cmpsl
inc
aaa
inc
out
xor
ja
mov
ljmp
imul
loop
sub
addr16
jns
push
push
adcl
push
jb
divl
mov
fdivr
outsl
adc
bound
fidivrl
xor
pop
out
cwtl
leave
fidivs
adc
enter
xchg
repz
leave
mov
repnz
add
xchg
aas
push
sbb
dec
xor
add
sub
push
sbb
cmpsb
xor
movsb
xlat
sbb
shll
xor
inc
inc
dec
mov
and
sbb
test
inc
xchg
int3
arpl
popa
pop
in
inc
fwait
mov
xchg
mov
xlat
loope
sub
push
test
inc
ret
xchg
mov
adc
movsl
jns
xchg
incb
push
or
loopne
pop
fildl
inc
jmp
pushl
movsl
add
mov
sbb
cmpsb
cli
call
mov
cmpsb
sbb
movsl
test
mov
movsl
outsb
jl
sbb
or
popa
xor
adc
movsl
movsl
mov
gs
enter
lcall
xchg
adc
dec
xor
or
mov
xor
jae
loop
pop
shl
or
ret
sbb
shll
cmpsl
xchg
cmc
daa
xchg
xchg
lds
push
lods
mov
sbb
fcmovnu
sbb
int
mov
sub
adc
test
mov
out
insb
lods
lcall
inc
loop
mov
movsl
mov
lods
ss
pop
lcall
mov
xchg
push
sub
je
andl
push
push
sahf
ja
or
add
cwtl
stos
cld
mov
punpckldq
push
outsb
jmp
test
or
xchg
int
test
jge
popa
rcll
jg
outsb
mov
fwait
ret
mov
xor
lret
stc
lahf
das
leave
int
xchg
sar
shlb
and
ss
push
mov
xor
test
jne
pop
jle
outsl
push
outsl
daa
notb
dec
mov
lods
mov
or
xchg
out
fs
push
mov
xor
test
notl
imul
test
out
mov
xchg
out
mov
jmp
out
or
or
bound
xor
mov
jp
inc
mov
push
cmp
outsb
mov
pop
inc
cmp
mov
hlt
lahf
push
xchg
jmp
dec
test
ret
jp
xor
repnz
jae
scas
imul
mov
movsb
xor
leave
adc
and
adc
mov
scas
ret
xchg
dec
vrcpps
jb
std
pop
adc
adc
int
ret
lods
gs
inc
loop
xchg
sbb
test
test
sbb
push
movsl
sub
and
into
and
add
mov
jbe
in
sbb
movsl
lods
push
xor
popa
sti
cmp
cmp
imul
imul
cmpsl
xchg
lcall
mov
push
stos
mov
fwait
fs
sub
addr16
incl
or
iret
push
dec
imul
sti
stos
outsb
xor
je
xchg
in
jl
xchg
mov
jp
outsl
dec
cmp
mov
jae
call
lret
ljmp
jo
frstor
mov
cmp
and
loop
or
xor
scas
pop
mov
mov
out
add
mov
out
mov
sub
cli
cltd
add
pop
sub
adc
xchg
push
jno
add
inc
sub
sbb
arpl
cmp
xor
testb
rclb
or
dec
push
out
ret
mov
popa
fadd
xchg
fiaddl
sbb
out
test
jbe
add
clc
xor
or
clc
cli
addl
arpl
repz
ret
test
mov
scas
pop
sub
aaa
push
into
xchg
and
dec
pop
and
not
mov
inc
pop
mov
out
iret
xor
lods
jle
mov
jne
ja
sub
mov
adc
ds
fidivs
shlb
jp
adc
adc
pushf
leave
sbb
pop
lds
adcb
jl
sarl
and
pop
ljmp
popf
and
cmp
pop
pop
movsl
cmpl
pop
test
and
mov
jb
jo
jae
rorl
pushf
xchg
ret
insb
mov
pop
loop
jbe
cmp
ret
or
out
pop
cmpsl
aam
cld
mov
mov
sub
insl
pop
shlb
les
mov
xchg
mov
lahf
and
aam
fucomp
jp
nop
pop
jb
mov
push
mov
test
mov
push
popf
ret
mov
shrb
out
fs
sub
mov
jmp
push
xor
into
dec
insl
test
into
dec
and
mov
ja
icebp
dec
insl
sbb
movsl
adc
lods
cmp
test
sub
dec
jno
in
sbb
nop
pop
push
movsl
push
mov
or
repnz
dec
cmp
movsl
xchg
fcmovnu
sbb
adc
insl
mov
dec
jnp
xor
nop
add
cmpsb
cmp
sub
sbb
ljmp
aad
mov
aas
shll
xorb
push
sbb
xchg
sti
popf
push
sbb
dec
das
repnz
icebp
sub
push
inc
and
das
or
dec
ss
int
data16
lahf
lret
pushf
mov
or
inc
aam
pop
and
out
lcall
adc
les
mov
sarb
scas
jle
data16
insb
pop
add
pop
jecxz
mov
mov
inc
jl
xchg
popa
mov
test
xchg
gs
popf
pop
ret
clc
push
es
shlb
pop
shll
out
fnsave
pop
test
addb
rolb
loopne
mov
add
pop
repz
lea
aam
sub
mov
mov
sbbb
xchg
dec
leave
xor
ja
adc
pusha
dec
pop
xor
sbb
leave
jl
outsl
in
lret
xchg
repnz
sti
or
loopne
xor
addr16
iret
cmpsb
xor
inc
mov
push
cmp
xor
pop
mov
fimull
mov
fstpl
jb
aas
fwait
je
or
inc
pop
decl
out
sbbl
xchg
add
sub
xlat
xor
loop
loop
lcall
cs
sub
jne
push
pop
movsl
xchg
cmp
mov
insl
mov
and
pop
or
and
pop
push
sbb
xor
dec
loope
arpl
jecxz
outsb
mov
adc
fldcw
sahf
dec
jp
dec
call
sbb
js
lahf
push
std
js
mov
mov
mov
mov
clc
mov
test
inc
leave
jmp
mov
flds
adc
movsl
cld
inc
sbb
xor
jne
ss
mov
pop
sbb
dec
ds
loop
shr
and
int
or
mov
cmp
popf
and
lods
inc
xchg
in
sub
push
out
xlat
aaa
sbb
arpl
fisttpl
inc
test
pop
xor
aad
lods
icebp
jg
mov
pop
insl
repz
mov
adc
out
xchg
idiv
dec
cltd
cmpb
lcall
xchg
jo
dec
sahf
fwait
cmp
sub
inc
sub
out
icebp
mov
test
jl
popa
out
push
popfw
daa
mov
push
lret
xchg
xchg
insb
mov
mov
push
sti
push
in
xchg
pop
test
or
pop
test
lea
push
in
or
ret
or
and
dec
fs
or
ss
aam
mov
scas
cmc
dec
rcr
mull
les
xchg
and
jecxz
andb
mov
push
ret
inc
pop
xchg
pop
xchg
ret
jno
jo
aam
loop
adc
xchg
in
iret
outsb
pop
mov
add
jae
jmp
mov
lahf
aaa
sbb
int3
xchg
xchg
and
enter
jecxz
cmc
sbb
jecxz
cmpsb
fisttps
fcmovu
orl
xor
scas
mov
js
sub
nop
idiv
sub
cmpsb
aad
ja
sub
enter
loopne
xchg
inc
or
push
cmc
into
out
icebp
out
outsl
inc
jo
xor
shll
nop
push
shll
sub
mov
sbb
xor
mov
xor
sbb
jg
and
stos
sub
out
adc
xchg
push
push
mov
add
inc
in
push
or
addr16
out
cld
push
sbb
inc
push
add
or
and
flds
sub
pop
je
aam
in
addr16
adc
or
pop
and
xchg
mov
xor
or
pop
fmul
dec
sbb
loopne
cmp
lods
dec
int3
inc
xor
sbb
mov
mov
cli
ss
jmp
loope
xchg
sub
jg
addr16
xor
mov
or
mov
cmc
add
mov
rol
jne
hlt
xor
or
mov
pop
lods
pop
jns
push
xchg
xor
sub
mov
pop
ror
scas
push
out
add
popa
in
cmp
inc
inc
test
lea
add
xor
stc
mov
sub
mov
insb
jns
in
dec
lods
jmp
imul
aam
cld
mov
mov
mov
icebp
jo
cli
mov
fbld
mov
lahf
jecxz
mov
adc
jbe
pop
pop
pop
addl
mov
mov
movsl
in
cmpb
cmpsl
pop
lods
lret
cmp
test
xchg
add
mov
aad
int3
in
jl
add
mov
push
push
mov
mov
shll
loopne
adc
out
stc
cmp
xchg
mov
in
ret
fisubrl
dec
xor
and
sbb
lcall
arpl
out
add
xchg
jp
xchg
cli
sbb
fstpl
pop
xchg
leave
jae
inc
lods
ja
add
sahf
int
add
enter
inc
rcrb
pop
mov
stos
xlat
dec
add
add
notl
pushf
cmp
nop
test
std
in
test
nop
bound
insb
les
lret
mov
ret
int3
push
jbe
pop
std
mov
pop
into
xchg
addr16
push
jmp
push
pop
lods
lcall
and
adcl
and
mov
mov
ret
mov
mov
daa
insl
rcl
push
push
addr16
and
and
ljmp
loop
xor
outsl
adc
pop
mull
lret
mov
push
dec
dec
and
xor
scas
inc
repz
jecxz
in
test
xchg
dec
mov
or
repz
push
mov
pushf
push
fmuls
lods
loop
repnz
sbb
jg
mov
lahf
jnp
mov
popf
pop
repnz
arpl
adc
cltd
ds
lahf
or
stos
ret
into
jmp
test
and
mov
and
shrl
testb
pop
add
mov
push
insl
add
insl
or
and
rolb
leave
pop
lret
loope
fpatan
aas
jns
lods
and
loop
int
loop
mov
dec
mov
jmp
dec
cltd
xchg
adc
xchg
js
pop
stc
bound
cs
mov
addr16
mov
mov
fistpl
jb
push
into
sbb
xchg
in
add
addl
inc
js
cmc
xchg
pop
in
jne
sbb
outsb
jae
test
aad
cmp
mov
sbb
and
xchg
out
loop
testl
sbb
mov
data16
fdivs
mov
mov
dec
mov
inc
shrb
popf
mov
mov
mov
cmp
repnz
jle
and
cmp
shlb
adc
lcall
jl
sub
jmp
aad
lret
nop
das
fs
pop
mov
add
mov
dec
test
xor
stc
pop
or
insb
mov
push
test
push
cmp
inc
pop
incb
or
inc
mov
popf
das
mov
sub
aam
jle
in
ror
cwtl
push
sbb
xor
pop
mov
imul
cmpsb
je
enter
push
out
sub
stos
jne
js
adc
pop
mov
add
cld
mov
hlt
mov
and
mulb
shl
dec
push
pop
jbe
push
jbe
repz
mov
call
lahf
je
or
pop
lcall
lods
jnp
mov
dec
test
sbb
outsb
sbb
lea
pop
mov
movsl
cmp
insl
enter
insb
out
test
pusha
aaa
pushf
lcall
pop
sub
cmpb
aas
dec
mov
divl
pop
push
ret
mov
adc
enter
cmp
mov
gs
sarb
cmpsl
inc
sahf
aam
stos
insl
in
sbb
aad
out
push
jae
inc
out
mov
into
jecxz
xor
fistpll
std
aam
xchg
cmp
arpl
add
gs
nop
loope
add
jmp
xor
dec
push
inc
cmp
imul
and
cs
xor
repz
push
shlb
mov
pop
lea
jle
xor
negl
in
xchg
fistl
push
mov
jbe
ret
outsb
aaa
mov
lahf
xor
addr16
ror
je
outsl
push
xor
popa
cmp
mov
pop
cmp
fstl
loop
movsb
pop
stos
aaa
xor
fwait
jo
sub
push
xor
fs
test
repz
jbe
ret
xor
mov
lea
outsb
and
add
mov
dec
into
std
add
or
sbb
cwtl
jno
mov
sahf
shll
test
aaa
idivl
ljmp
mov
mov
loop
shlb
xchg
ljmp
jecxz
inc
push
outsl
xchg
fninit
ja
mov
push
inc
mov
fadd
mov
pop
push
test
xchg
pop
jp
in
fcom
xor
push
push
push
imul
mov
scas
js
adc
neg
mov
cmc
bound
int3
mov
sbb
mov
test
xor
shl
mov
add
fwait
mov
mov
fcompl
rolb
inc
mov
negb
outsb
xchg
into
std
dec
mov
mov
ljmp
outsl
lea
add
outsb
fnstsw
hlt
or
iret
push
mov
xorl
imul
mov
out
jecxz
jmp
inc
je
mov
xchg
out
jmp
aad
mov
lahf
out
fcmove
push
push
sbb
adc
adc
pop
ret
mov
movsb
stos
pop
mov
xor
sahf
dec
cs
push
xchg
scas
sub
out
pop
xor
pop
push
inc
test
xchg
pop
rcll
sbb
call
xlat
jns
enter
xchg
imul
or
inc
dec
adc
sbb
mov
and
push
dec
call
push
sub
fildll
aam
dec
dec
lret
sub
jae
iret
xchg
xchg
xor
dec
inc
mov
dec
mov
in
aaa
mov
sbb
call
xchg
shlb
inc
xor
sbb
jnp
pop
and
cmpsb
mov
aam
std
and
and
stos
orb
enter
lret
insb
mov
mov
xchg
fists
dec
fs
movsl
adc
jge
jge
loopne
cmp
stc
pushf
pop
mov
stos
add
fwait
lahf
xchg
and
dec
mov
movsl
dec
int
add
jae
lcall
mov
adc
pop
adc
clc
jg
mov
add
mov
jmp
add
sub
add
add
fwait
insb
mov
lock
inc
aaa
pop
ss
dec
sub
movsb
cs
in
jmp
sub
jle
repz
gs
mov
push
xor
jg
xchg
push
sub
imul
fsts
push
cltd
pop
push
cli
xchg
std
aam
and
cmp
adc
psubb
enter
sbb
or
call
mov
sbb
cmpsl
imul
inc
jno
mov
imul
stos
addr16
ds
inc
jp
int3
or
mov
pop
icebp
cmpsl
dec
add
fisubs
cmp
data16
sub
iret
movsb
pop
lods
cmc
adc
and
flds
cwtl
sbb
lods
insl
jns
mov
adc
jge
push
and
pushl
mov
test
hlt
xor
add
popa
or
pushf
cwtl
es
movsl
pandn
cwtl
jns
addb
incl
pop
jns
insl
lahf
shll
insb
lods
mov
repnz
fidivl
hlt
mov
sbb
jns
inc
fcomps
mov
enter
call
push
or
xchg
lret
inc
fcompl
push
pop
sbb
and
mov
jecxz
test
es
mov
ds
repnz
fstpl
aad
pop
loopne
inc
arpl
dec
js
push
out
sub
fucomi
add
dec
popa
adc
lcall
mov
inc
xchg
aaa
adc
add
lret
dec
sub
int3
leave
fucom
das
mov
xor
lret
ds
dec
mov
insb
jmp
lock
add
je
out
xor
sub
outsl
sbb
or
xlat
clc
ret
inc
lods
icebp
lret
arpl
mov
fidivs
pop
dec
outsl
faddp
and
sbb
push
fimull
scas
mov
orl
ja
sti
sub
sub
push
jecxz
and
mov
dec
mov
pop
out
ret
xchg
dec
sbb
in
fsubs
imul
mov
fcomps
push
fdivrl
push
enter
jmp
jg
aam
cli
mov
add
fadd
popf
cmpsb
aaa
out
jbe
mov
mov
lahf
push
lfs
out
das
push
pop
push
mov
push
add
add
icebp
dec
loopne
stos
lods
xor
pop
popa
pop
aam
mov
xchg
push
clc
rolb
lcall
ficoms
insl
dec
aas
outsl
adc
dec
push
sbbb
or
mov
lods
cs
sbb
push
stos
sub
test
scas
mov
jle
dec
or
sbb
std
inc
insl
pop
lahf
mov
lds
movl
mov
adc
aas
jmp
pop
adc
clc
repz
push
clc
movl
mov
cmp
cltd
fldcw
adc
sub
test
leave
cwtl
dec
in
push
mov
test
or
mov
mov
data16
cmc
popa
int
jo
out
or
stos
jnp
test
pop
repnz
lods
roll
jns
cmpsb
mov
clc
jae
ss
ljmp
and
mov
leave
jmp
pop
or
jmp
and
xchg
imul
push
mov
adc
cs
jnp
insb
pop
jo
and
cmc
movl
mov
inc
push
loopne
pop
dec
sub
es
out
aam
aas
push
adc
negb
imul
imul
pushf
push
sub
shlb
mov
push
imul
xchg
stc
mov
push
sub
insl
sub
out
cmc
push
mov
fmuls
xor
icebp
cs
ljmp
xchg
xchg
sbb
fsts
bound
fldt
mov
sub
inc
add
cmp
pop
push
lea
mov
dec
xor
into
in
test
inc
adc
cmc
iret
pop
js
movsb
dec
ficomps
push
jp
fxch
mov
dec
fstl
cld
jns
aad
lds
mov
push
mov
sub
fldcw
mov
std
mov
sub
sbb
dec
adc
sub
xchg
mov
mov
jnp
sub
xchg
mov
lods
push
push
hlt
in
xor
movsl
cmc
inc
repz
mov
jp
sti
xchg
xchg
dec
add
inc
cs
add
dec
sbb
or
mov
add
dec
add
jle
xor
pop
pop
jge
outsl
fcmovne
stos
inc
jnp
movsb
icebp
dec
out
add
xchg
inc
adc
lcall
xchg
inc
pop
orl
arpl
dec
sbb
paddb
and
xchg
and
mov
clc
pop
mov
in
xchg
sahf
lea
dec
pop
xchg
cmp
roll
je
cli
aam
pop
xchg
push
je
rcrb
dec
cli
mov
push
add
pop
repnz
push
das
pop
pop
mov
mov
adc
cli
inc
lcall
push
pop
cmp
aaa
mov
es
imul
bound
sub
or
in
lods
sub
aam
or
jne
inc
ficompl
or
mov
aam
negb
lea
icebp
mov
fisubrs
ja
mov
jecxz
push
lret
ds
sub
sub
push
in
xchg
mov
pushf
jge
aaa
mov
xlat
lahf
int
and
popa
xor
sub
xchg
adc
xor
arpl
xor
daa
or
fnstcw
sub
aam
and
out
sbb
push
fucom
pop
mov
rcll
leave
pop
sub
and
mov
out
mov
imul
popf
aas
pop
stos
enter
adc
mov
sbb
ds
adc
mov
out
outsl
mov
cmp
push
rol
out
jns
and
mov
jnp
mov
mov
loope
dec
scas
dec
adc
daa
xchg
mov
cs
cld
adc
jge
add
inc
je
or
inc
test
inc
xor
call
sub
mov
inc
out
mov
jns
daa
mov
xor
ss
scas
cmp
scas
xchg
filds
dec
push
inc
cmp
fisubl
dec
lcall
das
jne
icebp
inc
fwait
sub
aas
xor
push
popf
lret
mov
movsl
lds
sub
je
adc
rcrb
dec
lret
in
pop
jb
stc
xchg
or
leave
out
iret
aas
dec
or
in
xlat
cmp
push
xchg
in
push
inc
jl
sub
cmp
lea
test
mov
xlat
sub
push
add
push
adc
pusha
cmpsb
push
jne
pusha
xchg
sub
nop
xchg
jmp
mov
and
push
adc
mov
mov
lret
dec
jnp
dec
push
shl
call
cmpsl
mov
and
jnp
or
pop
sbb
filds
sahf
aad
ss
sub
push
enter
loopne
xchg
or
subl
outsb
pop
daa
push
jnp
add
pop
ljmp
push
push
sbb
jae
mov
sar
je
sbb
cmc
sub
ret
jns
sbb
loop
ds
mov
push
pop
clc
test
fwait
xor
pop
jle
stos
je
add
sbb
mov
addr16
lods
aad
mov
mov
flds
cmc
imul
adc
les
es
js
dec
ljmp
jl
mov
pop
push
ja
mov
es
pusha
ds
repnz
xchg
cmpl
xchg
cmp
mov
dec
mov
mov
loop
test
cmp
popa
cmpsb
fists
mov
je
and
inc
in
shlb
push
clc
iret
clc
jle
cmp
pop
xchg
inc
inc
int
sbb
mov
mov
pop
sahf
std
and
mov
sub
inc
mov
xor
inc
xor
enter
fsubp
sub
sub
and
sbb
dec
clc
push
add
adc
add
fidivrs
call
jae
fcmovne
inc
jecxz
mov
sub
lods
cmpsb
mov
sub
push
sbb
sti
orl
xchg
jne
fdivrs
xchg
ds
xor
stc
cmp
and
dec
pusha
pop
fst
jb
shl
push
pop
je
stos
jbe
iret
int
scas
and
dec
cld
lahf
add
hlt
cmp
push
adc
dec
shll
xor
stc
popf
add
push
mov
jbe
cmp
jne
and
push
adc
fldenv
and
notb
popf
sbb
jb
pop
cmp
jl
insl
into
negl
xchg
pop
jl
push
sti
out
cmp
mov
insb
jp
add
or
xchg
lods
ljmp
pop
pop
inc
ljmp
push
shll
sbb
pop
inc
dec
sub
inc
mulb
cmp
adc
mov
xor
push
cmp
sbb
push
sqrtps
movsl
dec
mov
jmp
out
idivl
orl
mov
push
inc
and
test
mov
outsl
cmpsb
cltd
insb
inc
repnz
hlt
ss
push
dec
call
sbb
cwtl
or
pop
mov
stos
or
or
jno
ds
mov
mov
pushl
inc
fidivs
aad
lock
inc
arpl
mov
aam
and
stc
cmp
mov
ret
add
jl
adc
dec
daa
xor
daa
out
negb
cltd
fidivrl
cmpsb
xor
or
ret
and
or
fimull
or
sbb
xor
test
cmp
or
cmp
mov
cmp
je
cltd
addl
lret
lcall
bound
adc
mov
jg
insl
pushl
inc
cmp
fsubrs
xchg
adc
fists
fnstcw
test
test
vcmppd
stc
jns
add
push
jmp
cmp
push
stos
add
pop
adc
pop
inc
xchg
jae
dec
mov
mov
jnp
cmpsl
es
xchg
hlt
dec
push
aaa
lahf
mov
je
mov
pusha
popl
pop
out
insl
jle
mov
mov
adc
push
stos
push
xor
test
adc
dec
mov
and
outsl
dec
jns
stos
push
pop
jnp
xor
jne
clc
aaa
mov
popf
cmp
xchg
push
sbb
and
repz
bound
ds
xchg
sarb
add
mov
jno
movsb
jne
pop
xchg
dec
cli
push
lods
push
stos
adc
mov
adc
mov
adc
pop
lahf
jp
inc
cmp
push
aaa
mov
roll
lahf
movsl
cmc
push
sti
mov
fsubrl
insl
cmp
das
out
mov
dec
cli
lahf
popa
mov
push
rorl
test
jne
add
dec
and
mov
cltd
mov
add
mov
sub
push
fdivrl
xor
xchg
loopne
push
repnz
pusha
enter
xor
pop
mov
mov
jns
rol
fs
lahf
mov
pop
or
enter
loop
mov
pop
fstpl
pop
out
add
loopne
jmp
les
fdiv
aaa
jo
mov
dec
pop
mov
into
xchg
out
dec
insl
xor
lods
dec
nop
sbb
dec
sbb
call
ror
lea
inc
sti
repz
std
or
add
sub
dec
hlt
pop
aam
out
xor
outsl
lahf
add
mov
mov
bound
rcrl
imul
or
sbb
jno
dec
in
mov
insl
add
add
stc
and
and
loopne
sbb
add
xor
hlt
lds
aam
int3
adc
xchg
jbe
sbb
cmp
lods
mov
repz
and
pop
mov
loop
fstpl
les
and
sbb
fimull
ss
mov
pop
cmpsl
in
push
cmp
sub
ret
pop
mov
inc
ret
pop
es
adc
lahf
cmp
inc
fistl
pop
xchg
hlt
adc
push
outsl
js
jl
in
imul
push
mov
ss
hlt
mov
imul
xchg
pusha
sbb
cmp
cmp
ret
mov
sub
xor
cwtl
pop
dec
mov
add
adc
fwait
rolb
inc
aaa
mov
pushf
mov
arpl
sbb
fnsave
cmp
lea
adc
fwait
xor
push
insl
jae
or
cli
imul
orl
and
je
ficompl
push
sub
inc
aam
pop
stos
inc
add
mov
xlat
inc
adc
and
mov
and
lea
pop
orl
sub
setle
lock
sub
xchg
cs
dec
xor
push
inc
sbbb
cld
xlat
addr16
xor
aas
sub
inc
roll
and
dec
push
sarb
out
stos
xchg
pop
addl
mov
aad
cwtl
mov
and
add
jbe
adc
xchg
nop
pop
xchg
push
or
adc
jno
push
mov
sub
icebp
mov
add
stos
outsl
xchg
add
jbe
outsl
lods
push
sbb
mov
aad
push
in
out
lret
fbld
insb
mov
clc
sub
jb
enter
test
jge
roll
daa
es
call
cmp
cli
js
addr16
sbb
mov
sbb
cmpsb
sbbb
and
nop
ds
push
out
jb
xchg
xor
sub
pop
xor
dec
in
fwait
icebp
out
inc
sub
inc
fwait
ljmp
outsl
or
xchg
push
or
sub
out
and
cmpl
imul
and
xchg
dec
jb
xchg
rclb
adc
jl
mov
pop
inc
mov
std
dec
adc
enter
inc
xchg
inc
mov
cmpsl
dec
jo
bound
xchg
cmc
fstp
dec
dec
sub
sub
fwait
int
adcb
insb
xor
sbb
popf
mov
clc
fadds
aad
xor
lds
sbb
sbb
in
cli
fnsave
xor
int
and
aad
xlat
mov
fiaddl
fnsave
mov
shlb
leave
jae
mov
xor
test
mov
repnz
add
dec
mov
and
sbb
mov
das
clc
dec
out
push
sbb
ljmp
or
push
xchg
xchg
imul
push
xchg
jbe
dec
pop
push
jbe
fisttps
addr16
negb
loop
icebp
and
pop
ret
xchg
lea
mov
movsb
and
repnz
movsb
jecxz
out
aam
iret
jmp
sub
lods
jg
leave
call
sarb
jl
push
arpl
cmpsb
xor
jae
push
sub
into
dec
cwtl
pop
mov
jne
inc
ss
push
cs
jns
mov
sub
adc
pop
jbe
adc
xchg
sbb
loop
or
sub
in
sbb
jno
mov
and
test
in
add
mov
adc
mov
cmpsb
push
push
mov
subl
mov
jns
mov
mov
cmpsl
lahf
int
mov
cmpsl
out
pusha
loope
ljmp
mov
xlat
pusha
jg
cltd
jbe
pop
test
push
int
push
cli
mov
mov
xchg
cmp
cmp
jmp
xor
movb
sarl
pop
inc
xchg
sbb
sub
imul
orl
mov
inc
arpl
dec
fstps
jb
fsubl
int
gs
mov
pusha
push
aas
mov
cmp
cmp
sbbl
jo
jno
popl
xchg
adc
repz
cmp
clc
sub
mov
das
mov
sub
lea
gs
xchg
sbb
cmp
lock
lea
dec
pop
imul
mov
push
out
repnz
dec
xchg
xchg
cmpsb
cld
jns
jno
ds
jge
mov
xlat
lock
stos
cld
out
lock
pop
imul
and
das
inc
outsl
sti
std
insl
pop
dec
fwait
daa
fstp
lods
popa
js
aaa
xor
push
xor
cmp
rcll
xchg
mov
mov
int3
adc
push
aas
cli
ja
mov
subb
sub
aaa
daa
dec
mov
sahf
add
and
cld
shlb
xchg
test
add
ret
imull
xchg
pop
aad
lcall
push
daa
insl
ret
ljmp
mov
push
notl
sbb
outsb
push
loop
inc
mov
mov
dec
pop
jge
test
loop
jp
insb
in
and
rol
or
mov
call
jo
or
dec
andl
xor
fwait
push
fs
test
dec
mov
sub
jae
and
inc
adc
mov
add
stos
outsb
pop
adc
xchg
iret
lods
bound
mov
jp
lret
pop
push
mov
addr16
mov
test
testl
roll
stos
nop
movsl
stos
call
and
dec
addr16
in
stos
imul
daa
cld
or
sbb
xor
or
sub
xchg
rol
fstpl
cmp
cmp
pushf
insb
repz
rol
imul
push
in
xchg
lock
push
imul
cmp
pop
lea
adc
imul
pop
push
in
lock
add
mov
pop
mov
stc
rcrb
adc
paddw
adc
dec
or
and
adc
dec
push
adc
or
insb
icebp
xchg
mov
xlat
cmp
dec
insl
jl
bound
sub
cmpsb
aad
mov
shlb
aad
sub
loopne
push
popf
push
add
xchg
fcmovne
adc
inc
cld
fsubs
cmp
jmp
xchg
lcall
mov
jmp
and
ljmp
push
xchg
jg
inc
insb
rcrl
cmp
xor
int
aam
adc
xorb
adc
clc
xor
popa
hlt
bnd
mov
inc
lret
in
mov
les
dec
push
or
mov
punpcklwd
cmc
xchg
mov
test
imulb
lods
imul
cmpsl
in
cmpsb
cmp
inc
mov
sahf
inc
rcrl
mov
and
int
push
xchg
in
mov
mov
jecxz
gs
jecxz
js
insb
mov
jmp
out
mov
jae
std
cli
sub
jne
ja
pop
push
pop
mov
loop
cwtl
cld
ds
lods
ds
sub
inc
rorb
mov
dec
pusha
sbb
jno
nop
in
mov
mulb
scas
mov
aam
push
mov
mov
jns
out
gs
aad
sahf
pop
xchg
adc
call
or
cmc
mov
or
or
icebp
mov
fadd
adc
mov
jnp,pn
cmpsb
push
adc
dec
push
lods
sbb
mov
out
sbb
test
fstpt
ljmp
mov
inc
inc
lods
imul
pop
dec
lock
or
mov
sbb
loopne
outsb
arpl
xchg
cmp
sub
je
stos
pop
test
fdivrp
clc
out
mov
xor
das
mov
repz
fnstenv
shlb
ret
data16
xor
stos
sub
repz
gs
fbstp
jnp
in
xor
push
xchg
aam
xchg
testl
sbb
pop
mov
jmp
jp
add
lods
xchg
fiadds
clc
lock
cmp
cmp
push
jns
orb
loopne
int
int
xchg
xchg
inc
jl
inc
or
rol
mov
dec
inc
mov
inc
jo
mov
cmpsl
mov
pop
add
jb
enter
cmp
fsubs
aam
dec
sub
jb
pop
xchg
orb
ficoml
jno
shlb
mov
sub
dec
jle
jmp
pop
mov
add
add
aaa
add
pop
push
nop
lods
push
cmpsb
and
mov
mov
pop
enter
test
push
jecxz
dec
and
add
in
fstp
outsb
xchg
and
mov
test
mov
xchg
pop
jecxz
cli
sub
pop
xchg
add
sbbl
jmp
xchg
adc
rol
inc
pop
sub
incl
lahf
pop
inc
mov
or
or
xlat
call
push
fdivrs
mov
push
sub
push
rorb
fmuls
push
outsl
lds
inc
push
xchg
xchg
out
fidivs
push
add
test
mov
imul
icebp
sub
lods
xor
sub
cmpsl
in
add
pop
call
hlt
scas
adcb
dec
enter
xor
mov
xor
adc
js
xchg
xor
insb
xchg
and
nop
dec
xorl
cld
jecxz
sbb
ja
or
fldl
adc
orl
mov
in
ficoms
testl
pushf
mov
je
xchg
mov
shlb
enter
cs
or
push
sbb
and
cmp
outsl
out
adc
and
call
fldenv
mov
stc
sar
mov
and
pop
add
psubq
dec
testl
xchg
inc
int
jg
jl
mov
out
jg
jo
test
mov
lea
xchg
or
add
pushl
sbb
pusha
popf
pop
push
cmp
sub
sti
pushf
pop
scas
cld
adc
mov
orb
fidivl
and
or
hlt
push
cmp
inc
cmp
jbe
mov
movsl
push
mov
scas
loope
shl
movsl
lock
jbe
xor
push
cwtl
in
rep
insl
mov
inc
orb
xchg
negl
out
arpl
movsl
jle
in
pop
dec
popf
mov
adc
adc
sub
inc
xchg
lods
adc
movsl
cmpsl
mov
lret
add
jo
sub
scas
jl
jns
dec
das
push
sbb
add
notl
shrl
int
mov
pop
sarb
push
pop
mov
mov
mov
jno
add
fmuls
or
dec
loop
or
imul
rol
sbb
rolb
lret
dec
scas
xchg
sub
mov
psubusw
in
aaa
pop
es
arpl
loopne
push
jbe
leave
mov
mov
sub
xlat
sub
lret
mov
lods
insb
jno
into
jne
push
sbb
push
xchg
clc
ja
mov
sub
enter
xchg
mov
and
xchg
pop
pop
sbbl
das
xchg
aaa
pushf
outsb
in
cmp
mov
mov
sub
xor
and
arpl
stos
xor
dec
repnz
test
push
dec
sub
shll
movsb
in
sbb
mov
and
popa
jecxz
adc
cwtl
fisttpl
lret
leave
cwtl
ss
push
pop
movb
lods
sub
add
cmc
icebp
stos
mov
mov
test
cmc
mov
out
jg
xchg
jb
mov
jle
les
xlat
aad
push
mov
sbb
test
xor
cmpsl
mul
pop
loop
out
push
sbb
inc
add
sarl
cltd
jg
pop
sbb
jge
cmp
add
or
lods
inc
movsl
or
test
lahf
pop
in
orl
jle
fcoml
in
inc
fmulp
dec
clc
andl
insl
xlat
arpl
dec
inc
pusha
inc
inc
dec
or
adc
incb
xchg
add
dec
xrelease
hlt
int3
or
rcrb
fwait
push
cmp
add
les
xor
gs
idivl
sbb
mov
sbb
or
mov
jno
mov
daa
fcmovbe
xorb
cmp
insl
push
lret
cmp
xlat
call
xor
int
dec
cmp
movsl
ficoml
std
sub
hlt
pusha
pop
cmp
imul
inc
in
inc
movsl
add
imul
and
pop
test
stos
cli
add
data16
pop
lds
jne
seta
adc
lcall
clc
subb
stos
into
iret
test
adc
jae
daa
pop
cmp
pop
rcrb
in
jl
mov
fwait
daa
lcall
jg
xchg
aas
jae
mov
xor
inc
mov
test
aam
inc
imul
push
rclb
clc
jne
adc
cmpsb
jno
into
ja
mov
xchg
fldenv
bnd
lods
or
in
cs
push
push
push
loop
and
imul
ffree
xlat
in
jp
xor
movsb
lods
and
les
daa
popf
xlat
loop
popf
sahf
sbb
mov
stc
aam
daa
push
ret
inc
daa
push
test
aaa
rorl
push
lahf
lea
add
xlat
aad
cmp
push
add
add
mov
push
dec
and
sbb
mov
mov
push
add
jg
mov
pop
ret
das
std
dec
pushf
imul
cltd
cmp
mov
pop
and
mov
jp
mov
jae
xchg
push
inc
xchg
mov
mov
or
enter
sub
repz
in
push
movsl
cmpsl
pop
aam
shlb
loop
xchg
mov
mov
jo
dec
sbb
jae
push
mov
pop
fsub
pop
leave
mov
mov
cltd
iret
testb
fs
clc
ret
fwait
negl
and
sar
xchg
aaa
repz
int3
aas
das
pop
rclb
out
pop
in
imulb
dec
sub
in
cmpb
call
lods
lock
or
lds
pop
and
movl
lock
jp
jnp
ss
push
pop
sahf
push
imul
sbb
mov
rol
push
clc
fwait
ljmp
ljmp
jnp
dec
mov
ret
out
je
outsl
and
adc
push
add
popa
cs
add
dec
push
adc
cmp
mov
xchg
aad
mov
test
mov
add
mov
sub
dec
pop
xchg
inc
lret
dec
out
in
xor
mov
mov
jle
mov
jnp
and
and
movsb
scas
and
push
jns
mov
addl
icebp
add
xchg
mov
addl
mov
sbb
clc
pop
inc
std
lods
pop
in
add
or
cmpsl
push
mov
outsb
add
stos
cltd
in
jnp
aas
xchg
daa
subl
out
mov
push
bound
fnsave
ljmp
jno
test
pushf
jb
add
fwait
push
in
pop
in
call
mov
lods
mov
aaa
scas
sahf
jle
sub
dec
xchg
scas
add
fwait
arpl
mov
xor
sbb
mov
adc
push
ljmp
cmpl
jnp
add
shl
lcall
xlat
mov
push
jno
or
and
mov
dec
adc
cmc
push
cs
inc
cmp
mov
jo
xlat
inc
cmp
leave
pop
arpl
xchg
mov
outsl
xchg
jle
movsb
ret
mov
xchg
sub
stc
test
cmpsl
mov
jl
stos
and
stc
shll
mov
sbb
repz
jp
outsb
fwait
add
jp
push
es
xchg
jle
dec
add
inc
sub
xor
aam
stos
sbb
and
xorl
out
inc
jg
jmp
or
push
xlat
or
xchg
pop
leave
add
mov
icebp
dec
adc
adc
roll
divl
mov
xchg
xor
mov
push
jp
aam
xchg
loopne
jns
cmpsb
mov
das
cld
sbb
idiv
sti
xor
mov
mov
retw
popf
sbb
dec
in
arpl
pop
out
popa
xchg
sub
pop
mov
inc
out
mov
inc
jg
jno
mov
aad
adc
mov
add
mov
out
in
inc
call
cmovno
xchg
pop
push
aad
mov
pop
inc
xor
sub
jbe
lahf
dec
xchg
dec
or
aam
xchg
imul
sbb
add
ljmp
repz
inc
mov
gs
and
fldt
cmp
add
cmp
jb
es
sub
mov
fwait
xor
ljmp
jge
inc
hlt
leave
sbb
xor
rclb
insl
in
mov
cmc
pop
rcll
faddl
out
adc
push
mov
stc
jge
fs
js
xor
dec
repnz
sub
jp
jmp
adc
outsb
outsb
dec
inc
mov
pop
push
xchg
pop
mov
push
iret
push
cli
popa
sub
dec
stos
sahf
push
xor
cmp
push
jae
dec
pusha
cmp
divb
test
xor
xor
inc
call
aam
loopne
xchg
hlt
sbb
xor
popl
xlat
mov
bound
dec
inc
xchg
ret
fsubrp
es
add
sub
xlat
push
lock
stos
out
adc
enter
ljmp
jp
inc
pop
outsb
pop
cmpsb
outsl
ljmp
lret
hlt
sbb
xlat
pop
adc
lahf
orb
cwtl
inc
test
nop
mov
gs
mov
mov
and
lods
or
jle
loope
lcall
xor
mov
xlat
xor
fstps
test
adc
adc
int3
das
loopne
xor
mov
leave
aad
lods
inc
stos
xchg
and
loopne
add
mov
rol
call
jns
xchg
lcall
inc
jbe
dec
sbb
call
xor
pop
add
cmc
cmp
mov
rorb
mov
movsl
subl
out
aam
sub
lock
icebp
inc
icebp
mov
cmp
into
push
push
and
mov
cmp
test
mov
stos
je
mov
inc
fimull
mov
jg
lock
sub
arpl
ljmp
or
aaa
shrl
scas
cmp
dec
je
xor
lock
sub
scas
in
push
fimull
sbb
ds
adc
repnz
pop
ds
and
sub
adcl
test
cltd
lret
mov
lods
loopne
xchg
lret
bound
mov
inc
xchg
xchg
mov
mov
xchg
mov
fdivrs
sahf
rcr
scas
mov
xor
cltd
pop
arpl
ret
xchg
cmp
les
push
test
xor
push
xor
testl
gs
cmp
es
add
dec
add
xor
out
dec
adc
test
push
iret
divb
test
or
clc
dec
imul
pusha
or
mov
sub
mov
and
sbb
mov
push
xchg
push
cs
subb
cli
jg
pop
jp
inc
and
lods
dec
add
negl
scas
ret
xchg
sub
pop
mov
xor
sarl
cmp
add
xchg
mov
sbb
xchg
sub
adc
xor
mov
push
cmp
cwtl
sbb
dec
std
push
mov
pop
sub
shll
outsl
lret
jmp
repnz
rcll
xchg
rolb
std
out
sub
out
lea
cmp
outsb
add
inc
pop
or
lock
aam
mov
fmulp
pop
pop
fildl
ja
nop
xchg
pop
lods
dec
sub
lret
fucomi
adc
xor
add
inc
jbe
test
jae
repz
ss
or
push
aad
cs
rcrl
and
mov
add
lcall
lcall
aam
scas
or
xchg
icebp
ret
arpl
jb
daa
cltd
mov
mov
mov
mov
mov
mov
mov
pop
js
sub
out
inc
jo
movsl
inc
sub
cli
aad
sbb
xchg
add
std
xchg
fstpl
inc
ss
pushf
dec
push
add
rcrb
movl
stos
pop
call
xor
addb
lcall
roll
xlat
mov
jg
movsb
sub
pop
inc
jge
bound
imul
jb
inc
xor
pop
lahf
leave
pop
push
and
cmp
not
fnstsw
pop
ljmp
xorl
dec
cltd
test
cmp
xchg
aam
adc
xchg
pop
mov
into
and
cmp
xchg
pop
mov
jg
std
scas
fistpl
ja
inc
pop
popf
leave
cmpsl
and
inc
push
cmp
into
rolb
mov
lds
and
dec
push
daa
jno
imul
pop
push
fsubrl
enter
jbe
in
sub
dec
inc
ds
icebp
in
es
xor
test
mov
movsb
adc
sub
cmc
inc
loopne
adc
sbb
sbb
sub
call
dec
stos
inc
push
jg
sahf
and
sbb
rorb
test
scas
xor
push
sbb
add
ret
cli
lods
insb
pop
insb
lea
mov
mov
and
jae
nop
inc
jo
sub
xor
jg
arpl
xchg
in
cmp
int3
fs
mov
pop
loopne
or
mov
loop
inc
es
and
cmp
mov
fdivl
mov
push
cmp
dec
xorb
push
push
sarl
insb
lahf
or
lret
mov
popa
adc
push
mov
sub
lret
dec
inc
push
adc
mov
in
mov
cmp
test
pop
leave
xchg
or
fsubrl
mov
jp
pop
lret
or
sahf
icebp
movsl
mov
sbb
fnstsw
shl
out
movsb
jmp
mov
bound
lock
push
sbb
cmp
ficompl
inc
outsl
stos
and
xchg
repz
lcall
hlt
clc
sahf
push
or
xchg
xlat
adc
cli
mov
popa
dec
add
test
std
cmpsb
mov
inc
iret
dec
lods
sbb
pop
sbbl
dec
inc
mov
and
test
icebp
sbb
jnp
or
push
mov
lea
mov
jg
fldcw
cmp
das
adc
sbb
fisttpll
aaa
call
push
out
call
xor
lret
loope
fnstsw
xor
int
jle
in
jle
aas
daa
or
pop
add
mov
mov
int
push
xchg
and
lock
xor
cmp
mov
mov
add
jp
stos
pop
cmp
sbb
push
jne
stc
dec
out
andl
outsl
push
sahf
in
sub
stos
sti
mov
inc
jb
adc
jb
sbb
cmp
inc
decb
popa
cmp
mov
push
in
xor
aam
jmp
jae
or
stos
test
das
mov
xor
push
popf
xor
adc
cmp
scas
insb
movsl
jg
xchg
in
sahf
cmp
jl
insb
lds
scas
jb
xchg
add
pop
dec
and
test
lods
push
inc
sti
das
inc
push
enter
call
lods
popf
out
loop
in
in
mov
or
push
inc
mov
push
cmc
inc
sub
popa
pop
mov
pop
enter
mov
shll
shll
or
mov
into
popf
push
mov
ljmp
loope
movsl
stos
mov
fnstsw
jo
xchg
fisubs
loopne
aaa
ds
jmp
jno
mov
jb
je
adc
movl
out
push
js
push
mov
les
fisubs
shlb
out
inc
adcl
subl
and
int
xchg
fisttpll
popa
ficoms
inc
daa
dec
das
dec
push
mov
xor
daa
sti
subb
dec
test
adc
shll
pop
mov
sub
icebp
sbb
mov
xor
pusha
xchg
mov
ja
pusha
jecxz
push
std
gs
or
loopne
dec
lret
lret
cmp
lahf
pop
or
outsb
lods
pop
arpl
js
and
into
cmp
add
mov
jns
sub
cld
loop
and
js
repz
sub
xchg
or
adc
decb
xor
popa
push
or
std
adc
xor
repz
daa
push
clc
loopne
repz
and
xlat
fiadds
hlt
lret
popa
or
pusha
jno
pop
lahf
sub
mov
mov
sbb
movsl
mov
pop
xor
les
jae
sub
jae
out
adc
fwait
mov
xchg
lret
out
jb
nop
sub
cld
imul
adc
jnp
and
and
cmp
inc
jp
lods
fdivrp
jnp
add
xchg
std
sub
lret
iret
xchg
hlt
ret
jg
stc
adc
jmp
loop
pusha
cmp
out
adc
xchg
inc
dec
movsl
scas
movsl
sbb
stos
adc
ds
xchg
test
dec
adc
iret
lret
sub
test
loope
popa
sbb
stos
fcompl
sbb
fnsave
or
in
daa
add
push
push
inc
stos
cmpsb
push
jns
and
add
cli
fmulp
clc
inc
mov
fmuls
cmp
test
jmp
fistpll
push
dec
push
in
lock
mov
repz
cmp
pop
xchg
pop
xlat
mov
pop
mov
xor
loop
and
push
pop
out
sahf
sbb
dec
sub
push
jl
mov
sbb
sbb
inc
sub
sbb
inc
xor
cmp
fists
fmulp
mov
jmp
sahf
cmp
inc
dec
dec
in
out
xchg
pop
xchg
mov
mov
pop
jae
pushf
imul
ds
sbb
sahf
out
jae,pn
xchg
data16
mov
sub
adc
fstpl
inc
sub
push
add
pop
dec
and
scas
es
std
sti
push
dec
lock
aaa
shlb
cli
inc
mov
jno
je
test
ficoms
push
mov
sub
shll
ja
sbb
out
jp
gs
xchg
sbbb
ror
ljmp
clc
sbb
arpl
jb
xlat
stc
lret
daa
push
sub
xchg
icebp
imulb
lcall
add
pushw
bswap
cs
jae
add
fiadds
adc
ret
cwtl
cmp
int3
mov
test
pop
fbstp
test
adc
out
inc
jb
mov
movsb
xchg
jg
pop
cmp
cmpsl
pop
xor
mov
adc
enter
scas
inc
ds
mov
shl
fs
scas
stc
dec
leave
push
les
imul
dec
jp
or
ljmp
lods
ja
cmp
loop
adc
stos
pop
jnp
add
test
addb
xor
adc
outsb
pop
mov
outsb
rcr
popa
mov
outsl
fisubs
xchg
adc
cwtl
or
lret
jecxz
xchg
push
repnz
sub
add
mov
loopnew
mov
inc
es
push
jo
enter
mov
int3
inc
push
mov
jnp
mov
sbb
nop
outsb
sbb
dec
or
ja
xchg
push
lahf
push
xchg
mov
shll
test
ja
inc
jae
pop
nop
ret
inc
outsb
jnp
das
push
xchg
jge
andb
jmp
dec
sub
fistl
out
stos
in
push
pop
mov
leave
jle
cs
inc
mov
pusha
shll
xchg
loop
ja
and
pop
sub
pop
mov
mov
test
dec
decb
mov
aad
mov
dec
mov
cwtl
sbb
jne
or
shlb
lock
jl
ret
add
inc
add
or
dec
add
push
mov
mov
pushf
mov
mov
ja
rclb
rorb
fildl
sti
jns
push
xchg
dec
xchg
imul
ret
mov
pop
movsb
faddl
mov
mov
iret
outsl
pop
stos
pop
pop
enter
and
sbb
lret
inc
and
pushl
lods
adc
jb
push
xor
lds
pop
inc
push
pop
pop
stos
xchg
or
mov
movsl
mov
mov
loope
jmp
mov
daa
and
outsb
sub
xchg
push
adc
sbb
or
mov
in
inc
push
cmp
jg
les
jbe
sahf
push
scas
jb,pt
xchg
lcall
nop
rorb
xor
cmp
addb
shll
sbb
or
or
cmpsb
mov
iret
inc
jns
jns
insl
inc
push
lea
out
inc
push
rol
cwtl
or
mov
fdivp
nop
cmp
adc
inc
ljmp
dec
push
les
cmp
test
or
jnp
repnz
add
cld
gs
or
ljmp
leave
fnstsw
scas
cmp
jge
adc
mov
xlat
push
mov
jbe
js
out
bound
and
nop
inc
addr16
add
inc
call
jle
test
add
xchg
jmp
push
add
push
xor
pop
cmc
jge
xor
push
mov
out
cltd
dec
aad
sub
mov
ja
imul
lds
mov
inc
ret
decb
inc
jmp
aam
xor
call
xchg
out
popf
test
shrl
add
addl
fs
popf
jb
inc
iret
inc
bound
push
sbb
or
jno
mov
call
ficoml
jnp
icebp
sbb
imul
jae
lret
xorl
repz
pusha
pop
add
mov
xlat
xor
mov
ficomps
mov
pop
imul
ja
jno
push
movsl
inc
in
imul
out
cmpsb
enter
push
das
inc
mov
xchg
xchg
das
cmp
dec
and
ret
sub
and
sbb
out
mov
sub
test
mov
mov
test
andb
movsb
mov
ror
in
lcall
or
or
call
lcall
or
sub
das
or
jns
scas
lock
sub
jne
int3
sbb
mov
inc
sub
xchg
and
ljmp
lock
imul
outsl
xlat
test
nop
rolb
lock
into
xchg
shll
sahf
add
xchg
jl
jge
cmp
sub
imul
mov
data16
gs
mov
jae
aas
arpl
push
mov
lods
mov
xor
fsubrp
scas
movsl
cmp
loop
and
lret
add
repz
inc
rol
mov
enter
mov
mov
sub
aad
mov
jp
xor
into
inc
lret
mov
mov
loopne
lahf
jmp
fsave
mov
adc
leave
jo
dec
es
or
push
out
mov
icebp
and
and
jb
cmpsl
sub
loop
jp
test
addr16
push
inc
ja
cmp
inc
sbb
xor
push
rcrl
push
jb
clc
and
es
xchg
inc
sbbl
les
lock
xor
or
push
or
jl
repnz
ret
or
data16
js
adc
in
ss
lcall
out
pop
cltd
lock
cmp
mov
push
cmp
mov
inc
jp
in
add
fildll
adc
push
fidivrs
jns
or
cld
out
scas
fcomps
xlat
out
mov
mov
xor
add
fnstenv
add
push
loop
outsb
fmuls
int
pop
test
iret
jmp
enter
gs
roll
or
or
dec
shr
mov
cmpsb
lock
and
cmpsl
push
pusha
push
sarl
nop
leave
cmp
or
dec
mov
loope
sub
mov
jge
mov
in
add
gs
push
pushl
jcxz
xor
inc
cwtl
cmp
mov
dec
dec
test
inc
pop
pop
jne
dec
adc
and
mov
and
mov
push
std
div
push
add
sbb
inc
mov
cltd
jns
jnp
aad
orl
ret
lret
cmp
call
sub
xchg
lahf
in
sbb
inc
movsl
and
into
lods
mov
jge
ss
pop
jno
jmp
mov
inc
mov
dec
pop
xchg
rep
jle
mov
push
in
push
xor
prefetch
fcoml
or
adc
xchg
js
stos
sub
jp
pop
in
jae
cmp
cmp
jle
sub
rolb
xchg
mov
lret
repz
or
pop
ds
je
in
in
xor
adcl
jae
pop
push
cmp
jp
ret
and
add
jns
mov
jl
jb
test
jne
sub
fisttpll
or
outsl
imulb
ds
or
jnp
jbe
cmp
xchg
mov
xchg
pop
xchg
dec
or
xchg
mov
jmp
sbb
jns
push
ljmp
sbbb
iret
sub
mov
lds
or
and
sbb
jl
jb
cmp
mul
dec
scas
sbb
cmp
int3
out
shlb
fs
lcall
sub
sahf
cmp
pop
dec
ss
notb
inc
mov
cmp
fiaddl
jmp
cmp
jecxz
fwait
and
aas
cltd
inc
adc
sbb
xor
push
rorl
sub
and
pavgw
push
imul
mov
jb
sahf
sbb
in
lods
outsb
out
mov
jb
fldt
pop
fwait
push
push
test
adc
jl
shlb
cmp
mov
int
ds
mov
or
shl
rol
mov
push
int3
decl
pop
aaa
fnstsw
mull
push
aaa
rcrl
test
push
jb
popw
orl
inc
mov
out
dec
test
cmp
daa
add
add
pop
je
sub
clc
pop
mov
push
and
repnz
movsb
mov
outsl
and
xchg
daa
insl
jle
xchg
std
adc
mov
ss
and
movsl
xor
rclb
sub
add
cmpsl
and
xor
in
jp
push
add
dec
cmc
xchg
inc
fists
gs
in
stc
xor
push
ja
pusha
push
sbb
jnp
mov
movsb
fcom
test
dec
sahf
and
clc
stos
jg
test
cmc
add
xor
push
adc
in
dec
in
dec
imul
aas
mov
sbb
fs
inc
ss
stos
push
pushf
in
in
lret
jle
push
mov
popf
sbb
and
loopne
addr16
imul
fisubs
mov
jle
cmpsl
cmpsb
les
adc
shl
add
test
aaa
fcomi
loope
cmpsl
cmp
push
add
jns
mov
cmpsb
je
popa
in
inc
sub
or
fistpll
adc
sbb
ret
pop
push
adc
cmpsl
enter
push
mov
lret
pop
shll
cmp
call
aas
shr
cmp
inc
add
jnp
add
inc
mov
or
stc
bnd
stos
stc
jecxz
addr16
cwtl
jecxz
daa
addr16
std
inc
fstpt
xor
mov
ret
xchg
fsubrl
or
jp
stos
out
or
inc
cli
dec
xlat
mov
mov
add
add
cwtl
add
or
mov
mov
test
inc
push
inc
aad
aad
jmp
xor
xor
xor
clc
cmp
rcll
in
mov
mov
mov
repz
aaa
popa
xor
sahf
call
add
jecxz
lods
imul
pop
xchg
or
xchg
out
pop
and
and
dec
dec
push
mov
jbe
test
cmc
in
pop
sbb
pusha
jmp
sub
pop
mov
pusha
idivb
aad
jae
aam
xchg
inc
ja
sbb
and
cmp
stc
mov
addb
mov
enter
sbb
movsl
cmp
aad
mov
sbb
test
mov
test
sub
or
dec
outsl
outsb
ljmp
cmpsl
es
icebp
mov
pop
add
sahf
jb
jo
cmp
in
je
test
bound
mov
test
pop
xor
xchg
jle
push
mov
mov
jge
in
sub
pop
pushf
inc
and
out
fst
cld
iret
mov
aad
aad
lcall
mov
jp
adc
push
push
or
mov
push
movsl
pop
repz
mov
stc
mov
pop
ds
inc
push
mov
adc
fcomps
cmp
xchg
sbb
ss
jae
je
pop
fwait
stc
jle
daa
iret
cmpsl
xchg
jecxz
fsubr
dec
cmp
out
int3
xchg
inc
filds
in
call
ja
sbb
iret
fdivr
jbe
popf
dec
lahf
mov
ret
xor
cmp
mov
cmpsl
test
aad
push
outsb
in
lret
daa
xlat
or
cmpb
dec
mov
dec
push
push
xlat
mov
in
xchg
pop
shl
jb
xlat
inc
dec
cmp
leave
decl
mov
adc
jbe
mov
sbb
mov
cmc
scas
xor
jle
shl
aas
inc
xchg
lods
mov
pop
add
gs
repnz
jg
out
ds
or
adc
xlat
or
sub
and
xor
pop
sbb
cmp
pop
push
into
rcrl
sub
imul
mov
adc
dec
flds
sub
jb
nop
jle
mov
jecxz
test
mov
pop
daa
add
mov
notl
push
pusha
mov
popf
jmp
fiaddl
sbb
int
inc
rcrl
lahf
xor
loop
inc
xchg
xchg
addr16
inc
fstpt
adc
scas
mov
js
loop
in
ds
pop
lcall
jl
mov
push
inc
and
mov
mov
xchg
adc
dec
popf
or
into
and
adc
sub
inc
push
enter
sbb
mov
push
mov
popa
xchg
sbb
ret
call
addr16
mov
xor
xchg
adc
and
jle
mov
jecxz
clc
adc
enter
inc
xchg
loopne
cmp
aaa
idiv
movsb
cmpsb
jns
add
inc
lds
pop
std
lds
rcll
loopne
adc
test
mov
loop
stc
pushf
leave
sbb
arpl
fnstenv
in
and
ja
sbb
je
mov
push
push
push
jl
popf
lods
les
fisttpl
dec
gs
test
mov
cmp
pop
mov
add
sub
sub
loop
clc
in
es
or
add
daa
iret
lret
and
ds
lods
test
stos
in
sbb
subl
mov
jg
shl
lds
xchg
ljmp
je
mov
sahf
mov
add
dec
dec
cld
sbb
mov
push
sub
jmp
outsb
insl
je
inc
ljmp
adc
pop
jns
ss
sub
cli
pop
mov
jmp
fimull
inc
clc
lret
sbb
push
dec
pop
es
leave
mov
xchg
xor
add
imul
dec
push
dec
cmp
jne
es
scas
mov
fmuls
movsl
mov
cmp
out
adc
into
mov
shr
fiadds
or
mov
adc
and
cmp
mov
roll
mov
sbbb
lods
outsb
movsb
pusha
mov
sbb
das
and
popa
xor
cli
mov
ret
fs
cwtl
lods
adc
idivb
hlt
pop
sub
fnstsw
int3
es
out
test
movsb
xchg
sub
mov
pop
add
lods
dec
aad
xchg
inc
inc
pop
ja
into
push
lcall
pop
adc
insl
and
sub
mov
dec
orl
add
jge
std
scas
push
pop
xor
and
cmpsl
fiaddl
insb
decb
mov
das
insl
inc
pop
mov
cmp
cmp
xchg
divb
adc
out
and
imul
stos
sub
icebp
xchg
gs
stos
sbb
insb
jnp
mov
addr16
sub
xor
add
daa
jb
inc
stos
jl
fs
push
das
pop
aas
test
pop
outsb
andl
pop
push
ficoms
and
inc
in
mov
nop
filds
mov
cltd
adcb
imul
aaa
push
imul
sbb
jnp
pop
jge
mov
add
ret
arpl
rcrb
add
mov
in
mov
dec
enter
pop
roll
xor
sarb
cmp
repz
inc
lds
xchg
lret
std
test
ss
mov
cwtl
repz
lods
mov
neg
and
adc
dec
or
lahf
push
fwait
jne
mov
leave
dec
loop
mov
lcall
pop
cmpsb
jno
repnz
sbb
mov
in
pop
pushf
mov
cmpsl
or
jno
ja
cmp
cmp
test
push
push
popf
xchg
xchg
mov
inc
jae
or
in
lds
leave
jp
fwait
xor
mov
xor
popa
or
xor
js
mov
or
and
and
mov
enter
cmp
mov
sub
xchg
test
xchg
rol
or
and
movsl
psadbw
fnstsw
pop
push
xlat
ret
xor
ss
ljmp
jge
push
mov
lret
jb
call
fcomps
and
mov
lea
mov
mov
inc
rclb
aas
sub
and
jmp
pop
sbb
dec
sub
pop
add
pushf
mov
outsb
pop
xor
fldenv
int3
cmp
jo
jp
popf
rol
mov
adc
add
xor
sbb
lret
adc
loopne
aaa
lds
icebp
xorb
arpl
scas
pop
push
cmpsb
cli
ficoml
test
outsl
loopne
cmp
rclb
cltd
xchg
xor
push
repnz
mov
lret
popf
cltd
enter
mov
aaa
gs
jmp
dec
xchg
xchg
lret
or
add
arpl
push
and
mov
js
jbe
cmp
push
pop
push
cmp
mov
pop
xchg
hlt
mov
enter
cs
xor
outsl
cli
outsl
push
in
fbstp
sub
out
mov
and
inc
test
scas
xor
sbb
sub
cmp
hlt
je
dec
fxch
out
repnz
mov
xchg
or
outsb
lcall
mov
outsl
sti
stos
pop
shll
and
dec
in
cmpl
inc
fbld
push
out
and
dec
inc
mov
clc
shl
stos
test
push
ss
xor
push
cmp
andl
out
mov
mov
mov
add
test
sti
adc
or
cs
hlt
outsb
scas
add
in
movsl
hlt
jle
push
push
fcoml
adc
xor
xor
mov
push
loop
push
add
dec
lock
mov
aam
lea
mov
jl
js
arpl
sub
or
push
sbb
adc
inc
adc
shlb
sub
fprem
inc
jmp
in
mov
jb
sub
aaa
dec
rcl
daa
mov
mov
lahf
inc
and
dec
inc
mov
sbb
je
imul
jl
push
adcb
pop
std
jl
nop
test
pop
std
gs
sets
cmp
mulb
dec
out
mov
sbb
cwtl
fs
int
xchg
lahf
sub
in
repnz
xlat
mov
xchg
and
arpl
add
jl
and
mov
sub
jp
add
inc
pop
fsubrl
mov
or
lds
mov
ret
dec
aam
xchg
xchg
inc
in
rcl
dec
popf
or
or
lods
out
jge
sbb
mov
mov
imul
or
cmpsb
cwtl
pop
push
pop
aad
rcll
pop
inc
add
cld
cmp
repz
xchg
push
ds
gs
dec
insl
jbe
cli
leave
jge
adc
cmp
test
int
mov
mov
std
and
orb
mov
push
stos
dec
add
repz
lahf
inc
jo
mov
dec
xchg
dec
cmc
jmp
mov
sahf
xor
rcr
mov
inc
add
nop
aam
mov
bound
add
and
xchg
dec
idiv
mov
and
outsl
and
xchg
mov
movb
and
xchg
jmp
xchg
mov
out
jl
insl
sbb
scas
pop
lods
push
popf
dec
mov
ret
mov
test
sbb
dec
or
out
push
sub
bound
fmull
out
or
cwtl
inc
xor
fnsave
or
lods
cmp
dec
sub
mov
sub
sbb
fwait
push
lcall
fwait
sti
and
jge
adc
xor
inc
fwait
enter
sar
test
dec
rclb
aad
push
and
inc
fbld
jb
sbb
jae
daa
mov
icebp
inc
cmp
adc
and
and
mov
cwtl
xor
xchg
mov
jg
push
gs
mov
pop
or
adc
fisttpll
sub
cmpsl
sub
cld
movsl
push
inc
xchg
push
mov
add
lock
fdivr
lock
popa
add
ficompl
aam
testb
cwtl
out
outsb
xchg
shll
sub
imul
sub
cmpsb
push
sub
daa
cmp
clc
repnz
movsb
adc
sti
push
mov
add
push
pop
rclb
pop
adc
adc
sti
movsb
mov
shll
loopne
inc
outsl
pop
clc
in
mov
aaa
or
mov
push
inc
xchg
pop
pop
sub
dec
call
test
xchg
out
dec
stos
lcall
sahf
mov
dec
xor
xor
dec
insl
cmp
push
lcall
dec
movsl
mov
pop
xlat
add
or
popa
adc
dec
lahf
jae
pushl
lods
jbe
lods
jnp
jge
jae
ss
mov
movsb
negb
pop
lods
ss
outsl
lcall
jge
dec
xchg
lea
cmp
inc
idiv
mov
jp
dec
mov
iret
sahf
cltd
das
xchg
mov
mov
pop
es
outsl
cld
jp
or
ret
sub
into
lods
lret
push
pop
cmp
mov
lret
xchg
incl
and
scas
mov
fidivrs
mov
dec
adc
fs
movsl
mov
scas
lret
lret
inc
pop
add
xchg
and
arpl
fs
sbb
mov
and
cld
pusha
aam
ja
roll
sbb
movsl
mull
pop
js
xchg
ss
repnz
mov
add
data16
aad
iret
fstl
dec
loopne
aas
scas
pushf
mov
mov
test
mov
mov
icebp
ret
sti
xchg
jge
out
mov
popa
cmpsl
and
or
addr16
cltd
dec
not
nop
popf
stos
sbb
decb
pop
jb
test
scas
mov
stc
and
sbb
push
push
cs
stos
push
mov
movsb
sub
jbe
dec
jmp
or
les
inc
lret
in
pop
stos
pop
mov
sahf
push
mov
movsb
dec
jmp
fucom
in
shrl
add
std
lock
mov
stc
mov
xchg
pop
cs
inc
dec
imul
mov
sbb
leave
xchg
or
repz
test
sub
loopne
push
jbe
xchg
add
xchg
pop
leave
add
fbld
pop
mov
rclb
and
jb
je
repz
cmp
mov
mov
jl
pop
push
mov
cltd
int3
or
dec
inc
repz
shrb
adc
dec
dec
call
jae
push
push
jne
movsl
insb
xchg
ljmp
aad
fldcw
in
into
cmp
ret
push
pushf
leave
sti
fucom
or
add
lret
in
lcall
in
xchg
out
lret
out
push
clc
mov
pop
movsb
movsl
mov
mov
out
xor
inc
xor
dec
lahf
ss
push
cmp
sbb
mov
inc
jo
inc
ret
adc
mov
mov
shrl
or
sbb
xchg
pushf
je
ja
aam
lods
je
aaa
daa
mov
daa
adc
mov
push
sahf
fistps
inc
outsb
ja
sti
int3
cmpsb
sbb
cwtl
rcrl
cmp
sar
divb
pusha
add
scas
adc
dec
outsl
mov
inc
jo
and
xchg
jp
and
lods
mov
cli
add
lock
rclb
xor
push
jne
repz
inc
scas
sbb
icebp
xorb
cmp
cmp
jge
xchg
and
jno
pop
out
icebp
cli
push
mov
add
jmp
js
mov
jb
push
push
xchg
mov
and
xchg
inc
fsub
hlt
sbb
push
outsb
lret
stc
pusha
mov
pop
aam
mov
jae
stos
andl
movsl
ja
lret
in
pop
fs
xor
pop
lret
outsb
fsubr
cwtl
lods
dec
mov
mov
ficomps
pop
mov
daa
std
icebp
mov
jae
inc
nop
fmul
adc
xor
push
xchg
shll
insl
xchg
mov
mov
nop
rolb
jle
leave
out
ja
xorb
lods
push
shll
push
testl
int3
test
lea
mov
das
ss
ror
mov
out
and
xor
pop
jge
mov
fistpll
sbb
fdivrs
mov
aaa
fistpll
push
mov
mov
test
and
add
lds
cwtl
cmp
sbb
xchg
test
push
jbe
inc
cmpsl
adc
push
push
xorl
push
jae
cmp
cmp
mov
jmp
les
movb
adc
jmp
lds
dec
jl
in
or
jl
pop
aas
pop
adc
aas
mov
out
es
or
cld
movsl
adc
and
daa
ja
icebp
add
jmp
div
mov
mov
push
push
repz
movsb
mov
xchg
push
lock
stos
movsb
dec
or
dec
ss
mov
xchg
jle
cmpl
sub
hlt
mov
je
ror
push
mov
scas
sub
dec
cmpsb
mov
push
shrl
pop
arpl
stos
bound
push
stos
fmulp
add
push
mov
jae
push
out
mov
mov
pop
mov
xchg
insb
insb
sbb
lds
dec
pushf
cmc
pop
fstpl
sbb
add
mov
adc
out
jo
insb
cwtl
or
mov
lods
popf
dec
cmpb
mulb
sub
push
mov
sub
stos
jno
shlb
arpl
cmp
insl
jmp
inc
ljmp
mov
imul
jl
fidivrl
and
mov
mov
pop
je
addr16
push
dec
sub
test
fs
imul
mov
push
loopne
mov
push
fs
push
cltd
lock
or
dec
ja
adc
lock
stos
sub
shr
jmp
lahf
or
dec
sbb
push
xchg
test
xor
inc
jge
xchg
sarl
test
pop
pushf
mov
clc
push
dec
mov
cs
das
xor
shlb
xor
enter
aaa
and
pop
aaa
insb
jno
pop
cli
add
push
push
fimuls
shr
xchg
movsl
xchg
repz
push
loopne
ljmp
sbb
pop
add
push
ret
outsl
ljmp
cmp
and
mov
push
dec
cwtl
aas
pop
pop
or
cmp
rep
push
bnd
add
addr16
cmp
pop
mov
psadbw
cmp
cmp
ss
mov
bnd
or
pop
mov
adc
push
push
dec
rcll
mov
popa
xor
fs
mov
insb
sbb
xlat
movsl
pop
push
xchg
fstl
ljmp
jmp
push
adc
push
or
lret
push
fdivrl
dec
sub
mov
pop
jp
mov
testb
add
adc
cltd
jns
inc
mov
movl
push
jnp
rclb
in
divb
jno
insb
or
adc
enter
repz
aam
xchg
cmp
sub
jb
loop
mov
cmp
addl
sbb
xchg
scas
imul
add
xor
jmp
push
ljmp
jge
int
cmp
pop
fwait
lods
adc
sbb
mov
and
shlb
out
popf
std
adc
mov
and
negb
dec
ljmp
xchg
in
inc
xchg
pop
je
mov
add
mov
mov
js
ss
sub
addb
xchg
sbb
scas
adc
xchg
adc
mov
xor
jo
les
sub
cmpsl
jbe,pt
stos
lds
mulb
andb
lcall
jl
lret
dec
dec
add
hlt
jo
aam
jmp
mov
cs
aaa
fucomi
je
cltd
mov
fisttps
jecxz
lret
icebp
cmc
mov
imul
mov
sub
xlat
push
popf
push
mov
mov
test
pop
xor
hlt
push
inc
or
loopne
add
repnz
mov
push
jle
add
stc
rol
push
jecxz
xchg
push
iret
cwtl
icebp
in
mov
into
mov
mov
mov
rclb
inc
sbbl
nop
daa
xchg
loopne
addr16
rcr
push
push
jmp
jo
jl
arpl
gs
inc
psubw
movb
inc
cld
jb
sbb
ss
in
lcall
loop
popf
mov
add
dec
aas
popf
addr16
sub
cmpsl
mov
out
add
push
les
lea
imul
add
sbb
cld
xchg
mov
or
and
pop
push
mov
push
jns
push
push
dec
pop
add
stos
and
xchg
lds
or
out
ficompl
jle
or
mov
std
mov
add
shrb
outsb
stc
stc
fisttpl
mov
jle
fwait
test
adc
mov
mov
mov
add
dec
cmp
das
pop
out
xor
hlt
jle
jl
pop
pop
xchg
jp
or
cmc
sbb
fadd
ficoms
inc
dec
call
loop
arpl
cmpsb
stos
mov
push
insl
cmc
cmp
push
lret
fildl
dec
dec
sbb
daa
push
std
dec
or
out
inc
push
sbb
jns
xor
cmp
ror
call
xchg
addb
scas
xor
out
or
mov
cld
and
cltd
xchg
out
lret
and
ds
add
loopne
pop
lds
add
push
jg
xlat
cmc
enter
call
test
pop
sub
aaa
mov
into
not
daa
ss
pop
and
add
out
imul
jnp
sub
and
jno
imul
mov
pop
lods
imul
jnp
jnp
inc
dec
dec
into
sti
and
jb
xchg
test
pushf
jnp
lods
or
dec
fmuls
cmp
imul
stos
push
jl
out
jp
data16
inc
test
aas
mov
lds
sub
enter
mov
cmp
lcall
lock
outsl
cmc
sarb
sbb
xor
sbb
mov
push
into
cmp
lds
xor
cmp
aas
loopne
stos
xlat
ret
inc
mov
lret
dec
sahf
cli
mov
pop
scas
sub
sbb
bound
jae
dec
lret
test
call
xchg
add
rcll
or
inc
jle
jle
add
insb
popa
lds
fisubl
and
nop
push
xchg
adc
imulb
rclb
cmp
pushf
rol
push
mov
setb
jbe
ficoml
out
out
mov
adc
pop
ljmp
push
sti
or
mov
js
sbb
insb
mov
xchg
mov
and
mov
push
inc
xchg
xchg
adc
jnp
mov
push
std
test
outsb
insl
adc
clc
ja
jp
push
gs
ds
enter
lcall
sahf
mov
stc
xchg
and
fisttps
push
xor
push
pusha
sbb
cld
dec
adc
jge
dec
xchg
int
xchg
pop
mov
fldenv
add
dec
mov
sbb
dec
cmp
sbb
inc
popa
imul
sub
in
into
xchg
fdivrl
ja
fwait
or
in
insl
aad
outsb
xchg
cmp
add
orb
mov
movsl
and
dec
in
adc
sti
mov
fstpl
and
mov
push
or
cmp
fistpll
pop
mov
and
std
scas
push
cmp
in
mov
push
pop
cs
inc
jl
mov
and
mov
aad
popf
cmpsl
cmpsb
lahf
xlat
mov
ja
mov
sti
enter
pushl
push
dec
cmpsl
jno
lret
cli
inc
nop
sbb
pop
xor
loopne
pop
pop
call
adc
jnp
in
int
inc
adc
lods
outsb
or
jmp
imul
stc
xchg
dec
dec
inc
jo
and
cs
dec
mov
sbb
mov
cmp
or
fmull
sub
negb
jecxz
pop
mov
push
dec
or
fldenv
sbb
fwait
push
pop
bswap
mov
pop
inc
fs
mov
dec
or
ss
aas
or
mov
repz
mov
aaa
mov
lock
or
icebp
bound
or
xlat
or
inc
loope
insl
jp
dec
push
add
adc
pop
sti
aad
data16
andb
push
xor
insl
jle
daa
cli
jge
xor
aas
add
mov
dec
push
cmc
adc
cld
adc
cli
mov
arpl
setne
jo
mov
jp
mov
xor
adc
in
sub
jo
pop
dec
or
cmc
cmpsb
dec
push
jl
pusha
bound
imul
jnp
or
out
mov
sbb
pop
popa
ret
mov
repz
xchg
xchg
nop
loopne
add
add
adc
sub
or
andb
adc
inc
inc
jl
cmpsb
xchg
movl
mov
scas
pop
add
scas
xchg
inc
sub
lmsw
pmullw
inc
xchg
pop
and
lahf
push
cltd
mov
mov
push
lea
js
outsl
cwtl
stc
dec
int3
lahf
xchg
loop
ret
adc
jne
fsubs
out
xor
pop
fisubrs
jo
sub
add
cmc
movl
inc
repnz
ror
jno
int3
cmp
push
das
pop
mov
mov
adc
or
in
jmp
ss
lods
js
call
test
and
add
dec
inc
push
in
inc
out
sti
cmove
cmp
bnd
or
add
lds
dec
je
jns
lahf
je
dec
scas
jge
mov
leave
dec
lcall
jno
jecxz
mov
cwtl
pop
cwtl
cmp
dec
dec
jmp
push
jp
pusha
mov
daa
jp
in
fs
xor
dec
mov
std
dec
dec
xchg
dec
call
pushf
stc
test
mov
fcoms
popa
jae
mov
or
pop
jnp
iret
aaa
aad
in
xor
icebp
repz
aam
adc
loope
cmp
out
sbb
xchg
push
lahf
inc
outsb
cmp
je,pn
andb
js
leave
lods
or
mov
testl
stc
dec
mov
icebp
std
ljmp
inc
xlat
cmp
fdivrl
aad
insl
fabs
addr16
push
ficompl
loope
mov
mov
call
xchg
dec
testb
lahf
mov
in
aad
cmp
jge
pushl
out
decb
dec
adc
xchg
aad
jo
ja
jmp
mov
out
push
push
mov
cmp
xor
sbb
test
mov
into
lods
lret
lods
dec
inc
in
sub
cmp
lret
mov
mov
sub
daa
mov
fsubl
xchg
and
adc
fnsave
mov
mov
xchg
cmp
mov
call
scas
mov
popf
pop
in
imul
add
ret
bound
push
add
dec
inc
cltd
shlb
nop
push
gs
out
daa
jbe
andl
imul
cmp
pop
sub
dec
out
cmp
lahf
lods
push
pop
xor
mov
xlat
xor
adcb
test
sub
and
jmp
adc
lret
cld
ret
pop
loop
call
mov
push
int
pop
adc
psrld
mov
sahf
lret
icebp
repnz
enter
cs
xorb
mov
sbb
clc
inc
xchg
scas
xor
mov
sbb
and
mov
mov
loop
mov
outsb
adc
sub
loop
addb
adc
cwtl
or
pop
es
cmp
xchg
outsl
dec
jp
pushf
in
pushf
mov
fbstp
mov
outsb
jns
rcll
and
and
aaa
push
lret
jae
adc
rorl
repz
jecxz
mov
daa
adc
lods
insb
cmp
mov
cmc
xor
sbb
ficomps
push
pop
lock
xchg
aaa
addr16
adc
cs
jmp
mov
not
inc
push
js
je
and
or
stos
fwait
xchg
mov
nop
out
sbb
movsl
mov
addr16
cmp
insl
xor
sub
sbb
je
es
push
pushf
add
dec
adc
dec
sub
or
scas
mov
mov
xchg
inc
sahf
add
cltd
jae
xchg
stos
xchg
mov
test
es
jmp
clc
push
subl
jp
and
aad
nopl
enter
leave
fmull
inc
inc
and
rorl
jle
pop
push
push
nop
or
sub
mov
addr16
frstor
loope
xor
neg
dec
jl
mov
sub
aad
sub
mov
shll
mov
pop
arpl
inc
sbbl
aad
add
test
inc
dec
cld
push
push
dec
jnp
insl
iret
pop
cmp
cmpsl
ret
jecxz
es
lock
cmp
cmp
scas
mov
or
aaa
cli
push
sub
jb
push
lods
jmp
movsb
les
mov
insl
mov
inc
sub
fisubs
mov
fwait
lods
icebp
push
mov
pop
enter
.byte
.byte
.byte
sbb
add
add
mov
sub
gs
or
add
add
hlt
out
fdivs
pop
mov
mov
jecxz
cli
data16
jle
pop
aad
xchg
mov
aad
xlat
in
rolb
cmp
mov
push
insb
jge
popl
and
std
ds
iret
push
sub
pop
stos
mov
push
or
mov
xchg
cmp
mov
outsl
jne
mov
fnstcw
int
jge
mov
xchg
popa
cltd
cs
inc
push
cld
and
popf
ljmp
incb
aas
sbb
dec
and
lahf
bound
add
push
xor
in
pop
aas
insb
cltd
mov
inc
outsb
mov
aam
shr
and
jb
cmp
lock
mov
leave
aad
fildl
sarl
jecxz
daa
xchg
js
mov
aaa
icebp
xchg
insb
cmp
sub
lea
inc
xor
nop
gs
jecxz
mov
sub
or
bnd
sub
es
lahf
mov
hlt
cmc
mov
dec
scas
roll
fnstenv
mov
mov
pop
lock
cmp
movb
sahf
push
cmp
in
loope
aas
lret
cmc
dec
mov
test
aad
cmp
push
mov
lahf
mov
sub
pop
subl
enter
mov
jmp
pop
xchg
push
in
mov
mov
push
int3
adc
mov
je
push
test
bound
and
mov
sbb
popf
mov
pushf
mov
jp
pop
test
add
xchg
cmp
movsl
divl
mov
fbld
dec
cs
add
mov
cwtl
rdpmc
into
pop
pushf
fwait
jns
enter
mov
ss
mov
inc
inc
jno
sbb
sub
in
jecxz
mov
xor
jle
push
scas
mov
addr16
or
or
xchg
fwait
xchg
shlb
xchg
dec
xor
adc
push
inc
push
icebp
and
std
rorb
sbbl
aaa
xorb
fiaddl
jne
xchg
or
sarl
test
pmaxsw
lods
rolb
pop
inc
lcall
lods
mov
ss
push
xchg
adc
mov
sub
add
call
add
mov
push
cwtl
inc
inc
jle
rcr
scas
push
jle
roll
cmpsl
pcmpgtd
or
pop
mov
mov
lret
xchg
jg
jnp
addr16
cmp
push
test
xchg
sub
xchg
ss
inc
call
outsb
cmp
sbbl
sbb
lock
xchg
and
in
or
loopne
xor
repnz
jnp
xor
rolb
test
mov
cmpsb
jecxz
sub
gs
ret
pop
fisttps
push
pop
push
jns
stos
fldenv
sbb
mov
and
sbb
jne
sti
in
and
adc
enter
lds
sbb
add
sub
xlat
pop
dec
jl
xchg
dec
jnp
jmp
xchg
jle
out
mov
inc
aas
inc
and
cmc
push
fildl
rcr
inc
push
jl
mov
movsl
or
mov
sbbb
or
jne
mov
jge
pushf
pop
clc
xor
mov
push
sti
adc
xchg
cli
or
pop
iret
mov
das
scas
out
or
cmpsl
outsb
push
xor
inc
ljmp
enter
mov
or
pop
pop
into
ret
sub
loop
mov
ret
xor
push
add
jge
push
and
pusha
cmc
das
fstpt
xor
or
aas
shll
pushf
sub
aaa
fs
loope
jmp
cmp
sbb
sbb
adc
sub
push
and
jo
push
loope
out
mov
fbstp
and
scas
aad
mov
rclb
pop
cmpb
dec
sbb
and
movsl
imul
jg
enter
xor
lcall
out
out
mov
rcll
jo
in
xor
cli
xor
or
fsubl
ficompl
cld
mov
push
fs
hlt
mov
mov
mov
ljmp
adc
lahf
mov
push
data16
mov
dec
sub
mov
ret
fldenv
cli
pop
mov
icebp
cld
scas
insb
roll
cld
inc
xor
or
loope
inc
fimuls
nop
loop
mov
dec
int
or
ljmp
pop
push
addl
dec
imul
lods
aam
cmpb
jbe
mov
pop
stc
dec
gs
sub
xchg
stos
cli
data16
insl
mov
push
inc
mov
pop
outsb
jb
lahf
nop
xor
jmp
bound
push
aad
inc
adc
inc
pop
or
int
mov
daa
mov
lret
add
jae
jge
cmp
rep
leave
jmp
xor
inc
sub
out
push
cmp
inc
negb
sbb
jmp
leave
test
dec
outsl
into
mov
xor
push
xchg
dec
data16
push
mov
and
xchg
test
jg
rcr
in
or
stos
ret
sub
leave
dec
mov
sbb
inc
in
outsl
push
in
sbb
aam
or
dec
xchg
sbb
int3
xchg
or
adc
inc
jecxz
stos
cmp
icebp
test
mov
adc
lret
sarb
mov
inc
lock
sub
arpl
rorl
sub
pop
loop
pop
mov
lock
das
les
repz
sbb
das
and
mov
and
pop
jo
scas
out
mov
push
mov
jp
push
ljmp
cmpsl
iret
out
mov
sbb
xor
sbb
shl
rep
xor
test
lds
fiaddl
cmp
inc
or
or
fcomip
sub
sarl
pop
jg
cmp
loop
inc
std
push
mov
jp
xchg
add
hlt
outsl
mov
sub
adc
adc
xor
sbb
dec
stc
call
test
cli
fcmovnbe
pusha
icebp
shl
loopne
ljmp
mov
scas
loope
dec
aad
xor
insb
lods
popa
fiaddl
aaa
prefetch
test
sbb
ja
addr16
cli
fs
imul
and
fcmovb
jecxz
ret
ficoml
sbb
cld
sar
stos
adc
inc
sbb
ret
jnp
jl
adc
inc
pushf
xchg
inc
testl
mov
je
dec
rcll
adc
cmp
sarb
adc
icebp
das
and
lea
out
push
aad
mov
jg
pusha
in
mov
cmpsb
outsl
jl
ljmp
out
mov
mov
out
jmp
push
addr16
in
adc
dec
fwait
cli
js
pop
push
mov
leave
push
mov
int3
shrb
jp
loopne
repnz
pop
and
out
lods
outsb
fldl2e
jbe
lret
inc
pop
adc
xorl
adc
cltd
int
mov
and
xor
pop
ljmp
jno
add
decb
es
jns
jo
jns
and
sbb
xchg
jmp
xchg
shl
test
dec
repz
icebp
bound
adc
test
in
aas
stos
jne
lret
icebp
stc
pop
xchg
loopne
sbb
adc
ret
xor
aam
and
fs
and
sub
mov
dec
cmp
push
mov
jmp
ret
aad
pushf
into
push
xor
ret
xchg
mov
jle
xchg
data16
lret
inc
clc
mov
shlb
in
test
inc
outsl
dec
stos
mov
jb
pushf
fildl
enter
xchg
xchg
mov
cmp
and
push
mov
xchg
data16
rcll
adc
and
push
pop
fdivrl
dec
dec
int3
fldl
adc
push
mov
and
mov
adc
lock
mov
inc
divl
xchg
popf
jo
cli
jmp
jp
dec
mov
sub
sub
mov
ret
push
mov
push
popa
or
icebp
dec
in
jns
pop
add
stos
add
stc
data16
enter
test
clc
inc
lret
push
test
sbb
jno
pop
add
jmp
lea
push
mov
mov
pop
jne
jnp
les
ljmp
pushf
ja
movsb
push
rolb
mov
out
xchg
in
push
xor
lods
ret
hlt
repnz
and
and
inc
xlat
and
insl
pop
mov
outsl
int
mov
jno
xlat
ret
sub
push
inc
push
icebp
mov
add
nop
sbb
gs
xor
iret
sbb
mov
ret
adc
mov
cmc
fwait
add
fs
cld
in
cmovae
mov
mov
and
pop
testl
aaa
pusha
fimuls
mov
sub
mov
mov
leave
sti
xchg
ss
test
mov
clc
cs
sbb
lods
mov
jecxz
stc
in
xor
in
jb
push
aaa
mov
pop
outsl
mov
clc
in
dec
int3
clc
je
xchg
enter
es
ret
loope
enter
cwtl
les
xor
rorb
adc
push
pop
jmp
fsubrl
mov
mov
inc
mov
rorl
mov
push
xor
xchg
out
jns
jecxz
sbb
xlat
xchg
mov
xor
pusha
inc
out
std
pop
gs
sub
lock
jecxz
mov
inc
fldcw
sbb
and
inc
mov
sbb
arpl
and
jmp
pop
push
lods
mov
mov
bound
mov
cwtl
cli
push
mov
hlt
mov
fwait
sub
dec
stos
pop
xor
test
add
lods
pushl
pop
ja
rcl
lock
std
movsb
inc
sub
lods
movsl
testb
fisttpll
fdivrp
pushf
aad
pop
mov
lcall
ficomps
lahf
mov
push
stos
loope
clc
inc
push
lock
jmp
pop
addr16
pop
xlat
fbld
xor
xor
popa
and
aam
fwait
xchg
push
cmpsl
bound
jae
dec
enter
out
dec
dec
dec
push
cmp
jae
in
fs
jne
adc
dec
repnz
pop
pusha
into
test
mov
ljmp
daa
test
scas
aas
mov
pop
pop
mov
pushf
add
mov
push
jp
fldenv
adc
inc
scas
nop
adc
ret
xor
cmp
dec
xchg
das
push
pop
sti
push
xor
arpl
sbb
inc
push
lret
lods
orb
xchg
push
mov
imul
nop
cmp
mov
xor
in
xor
cmp
dec
stos
mov
loop
cli
mov
in
and
mov
mov
shll
inc
aad
push
adc
push
mov
jl
push
jb
test
push
fucomp
add
fdivl
mov
sub
pop
or
stos
sbb
xor
cmp
adc
sbb
inc
adc
addr16
pop
push
int3
cltd
call
xchg
nop
ja
push
cs
xor
cs
mov
sbb
xchg
mov
mov
cmp
xchg
cs
popf
std
jmp
lds
fadds
xchg
addb
xor
pop
scas
or
aas
sbb
inc
mov
out
xchg
adc
and
cld
adc
sbb
or
cmp
out
push
movsl
enter
lcall
xor
jge
js
pop
push
nop
aam
pushf
fwait
shl
mov
xchg
jbe
mov
test
push
aam
adc
mov
and
xor
jbe
ret
pop
idivl
add
es
push
fs
fcomip
pop
dec
rclb
enter
in
mov
sbb
arpl
enter
mov
push
fsqrt
cwtl
int3
movsb
popf
lfs
dec
movsl
orb
mov
pop
popa
enter
das
xor
push
xchg
push
lret
ja
mov
pop
mov
inc
fucomi
jle
xchg
mov
push
lahf
lea
xor
mul
scas
and
xor
xchg
mov
push
aam
dec
mov
shl
or
leave
add
popf
cmp
insl
xchg
add
pop
movsl
jmp
insb
adc
push
adc
imul
adc
xchg
and
push
sahf
add
fdivs
in
nop
mov
pop
xchg
inc
pusha
jg
std
in
pop
xchg
sub
xchg
xchg
sbb
mov
and
mov
xchg
lcall
mov
nop
sbb
xor
jnp
ljmp
lcall
cmpsb
adc
out
loopne
pop
xchg
pop
repnz
mov
sbb
or
cmp
out
pop
add
mov
and
loope
pop
dec
mov
xchg
or
je
cmp
movsl
aad
enter
out
shl
dec
ret
test
mov
jne
add
push
push
test
faddl
pop
xchg
out
mov
pop
popf
sarb
xchg
xorb
into
ret
sbb
ss
lahf
data16
stos
mov
add
popa
pop
enter
adc
cmp
repnz
lahf
rcll
and
cmpsl
fisttps
into
sub
or
stos
addr16
add
xor
mov
xor
adc
sahf
push
stc
lret
adc
and
xchg
push
fsts
loope
shl
imul
fwait
mov
jo
push
sub
jae
push
aam
sub
jmp
pop
xor
jo
dec
jmp
and
xchg
call
mov
or
push
or
sbbl
insb
xchg
dec
lea
scas
movsb
xor
push
incb
or
repnz
jp
rcl
lods
call
insl
adc
jp
and
nop
xchg
jae
insb
jbe
mov
lcall
push
push
outsl
data16
mov
pop
xchg
incl
frstor
mov
jns
in
lret
lea
dec
mov
jp
sbb
and
sbb
outsb
out
std
or
mov
and
xor
andl
jmp
mov
ficoms
xlat
pusha
aad
pop
test
add
sbb
sub
imul
aam
mov
aaa
pop
nop
test
arpl
inc
jl
jns
mov
pop
xlat
adc
movsl
lock
ss
neg
adc
jbe
rep
or
and
dec
pop
lea
add
out
lahf
xchg
sub
mov
inc
movsb
inc
test
mov
mov
dec
xchg
adc
cltd
test
stos
stc
mov
mov
inc
test
mov
xchg
cmp
jecxz
fsubr
add
dec
xlat
fsubrs
cld
dec
in
xor
out
dec
mov
sub
fwait
mov
sti
sbb
dec
arpl
adc
jo
xor
pop
sub
xor
push
xchg
hlt
push
push
jg
insl
pop
int
shlb
mov
jb
add
fisttpll
cli
add
jmp
arpl
data16
in
test
xchg
outsb
jle
dec
mov
push
mov
or
jne
and
lahf
movsb
cmp
pusha
xchg
es
mov
shrb
mov
lcall
mov
mov
mov
pop
leave
bound
ja
or
fimuls
icebp
xchg
adc
mov
jle
pop
mov
cmp
cltd
sar
dec
sbb
push
jb
mov
adc
rclb
in
inc
ror
fiadds
push
aaa
lods
push
cmp
mov
mov
jns
into
sbb
popf
lcall
mov
mov
inc
or
ljmp
lods
or
sti
enter
test
jmp
repnz
ds
arpl
jp
or
out
stos
mov
shl
ljmp
pop
pop
push
stos
imul
adc
addl
inc
mull
testb
fucomp
addl
ljmp
mov
sub
lret
pop
fbld
mov
sbb
push
leave
sbb
sub
sub
cli
mov
mov
aad
and
and
pop
cli
rclb
movsb
adc
es
sub
movsb
or
xchg
int
fcmovnbe
add
push
je
pop
mov
loop
mov
loop
in
int3
jbe
aas
mov
add
sti
pop
mov
cmp
mov
mov
and
xlat
out
out
mov
lret
or
mov
push
cmp
repnz
cld
xchg
inc
repnz
fs
roll
jp
imul
test
inc
xchg
mov
dec
imul
test
mov
jo
test
add
push
mov
sbb
push
pop
rorb
cmpsb
sar
inc
mov
and
or
sub
mov
mov
xor
push
cli
dec
fcompl
test
call
xchg
mov
aas
callw
mov
in
fisubs
loopne
sbb
in
add
pusha
popa
aad
xchg
mov
rep
lcall
cwtl
imul
or
xstore-rng
cmpsl
movl
push
leave
cmp
mov
jb
push
out
mov
xlat
popa
push
xor
in
test
sub
enter
inc
repnz
adc
stc
and
add
outsb
jg
xor
push
mov
out
jge
loope
clc
gs
jmp
dec
lea
cmpsb
xchg
xchg
lods
and
push
fistpl
xor
sahf
mov
mov
in
mov
or
adc
lret
cld
test
ret
lret
add
cwtl
inc
lea
ds
sbb
jecxz
popf
stos
sti
sbb
leave
adc
add
imul
pop
xchg
mov
movsb
iret
jo
sbb
iret
test
and
pusha
insb
mov
aad
aas
jge
mov
hlt
xor
jae
ret
add
mov
xor
test
push
cmp
and
call
sub
xchg
jb
scas
js
testb
addr16
dec
sbb
mov
mov
xor
rorl
test
pop
bound
aaa
js
sbb
inc
out
cmp
das
pop
clc
inc
xlat
inc
xor
dec
xlat
jge
inc
cli
mov
push
xor
mov
and
add
push
aas
inc
xchg
les
or
out
push
loop
data16
sbb
clc
insb
int
mov
ret
xchg
sar
std
xchg
and
sbb
loopne
xor
aaa
jecxz
push
in
mov
popf
xchg
dec
lret
push
add
adc
movsl
sub
xchg
mov
enter
scas
adc
fidivl
roll
or
test
rcrb
shl
and
mov
xor
sub
insb
sbb
and
add
mov
fdivr
mov
dec
loope
add
mov
in
jbe
xor
jno
gs
fistl
or
fists
adcb
push
in
insb
xor
push
jle
ds
mov
fnstcw
in
push
hlt
jle
xor
notb
sbb
or
scas
cmpsl
lcall
fucomp
movsb
jbe
push
ja
filds
push
jmp
fdivl
dec
lret
fwait
xor
lahf
adcb
xor
or
jno
jl
jno
jae
and
and
mov
adc
jg
lret
xchg
stos
add
pop
lret
enter
dec
sbb
sub
aaa
dec
sarl
inc
outsl
pop
je
popa
sub
call
bound
cli
jl
dec
mov
roll
sbbl
add
xor
gs
and
xchg
enter
arpl
scas
xorb
iret
fistps
in
sti
in
sbb
push
test
leave
mov
jmp
xorb
xchg
xor
sbb
xchg
mov
mov
xchg
out
push
adc
pusha
bound
repz
inc
or
and
out
mov
in
adc
push
lcall
dec
je
out
and
mov
sbb
push
cs
mov
mov
mov
mov
or
dec
fcmovne
and
pop
xchg
bound
cmpsl
inc
and
add
and
mov
lret
dec
fiadds
addr16
ret
cltd
push
sbb
call
rolb
out
cld
popf
pop
xor
xchg
push
loopne
or
gs
pop
daa
out
cmp
outsl
sub
xlat
sbb
stc
adc
mov
adc
cwtl
jno
inc
sub
dec
inc
fdecstp
mov
cli
jp
cmp
es
bound
ljmp
sbb
test
dec
xor
inc
je
mov
stc
adc
ja
ret
or
sbb
push
jae
xchg
ja
and
testb
mov
jl
inc
aas
call
add
adc
xchg
insb
jae
pop
dec
sub
push
xchg
mov
jp
dec
mov
into
mov
in
gs
stc
mov
mov
aam
mov
add
and
lcall
sahf
jecxz
aaa
pop
mov
pop
outsl
jge
mov
rcpps
inc
data16
imul
mov
iret
sbb
subl
or
cmc
dec
aas
add
xchg
test
test
mov
mov
push
jbe
dec
aad
jb
adcl
movsb
pushl
cwtl
or
test
aam
xchg
mov
adc
mov
or
jne
es
iret
mov
push
adc
gs
mov
sbb
inc
add
and
xor
sbb
xor
outsl
cs
xor
das
mov
jmp
icebp
pushf
xchg
or
dec
dec
scas
push
std
sub
pop
jge
and
mov
subb
pop
sub
jle
cs
or
and
push
mov
ret
fiaddl
jecxz
add
push
in
repz
rcll
repz
xor
jge
negb
insb
mov
jno
xchg
cmp
jo
les
cmovb
sbb
jle
and
mov
daa
jl
sti
jo
jns
inc
or
loope
daa
push
and
int3
js
movsl
sbb
addl
movsb
jo,pn
cmp
sbb
add
mov
xor
adc
sarl
pop
xor
popa
ret
xor
pop
sbb
jmp
push
cmp
stc
or
les
or
xchg
sarb
loop
inc
xor
xchg
scas
jl
int
dec
pop
xlat
loope
jmp
ss
movsl
insb
cs
pop
sub
stos
out
pop
pop
mov
cmpsl
imul
pushf
ss
mov
xchg
xchg
cs
pop
arpl
lahf
popa
jae
mov
mov
aam
jnp
into
inc
and
push
testb
popf
mov
outsb
mov
stc
hlt
fbstp
push
sbbb
lock
es
dec
push
fidivs
insl
and
stc
les
jnp
js,pt
mov
dec
arpl
mov
pop
movsb
testl
lds
dec
das
into
rolb
mov
lods
mov
push
loopne
pushf
add
cld
mov
mov
outsb
aaa
mov
or
popf
cmpb
mov
and
bound
sub
fisubrl
pop
sbb
xchg
js
sub
mov
jl
mov
cltd
andb
loopne
push
push
jne
mov
xchg
and
sub
cmp
das
xchg
mov
xchg
hlt
cwtl
push
jecxz
orl
pop
cmc
pop
iret
out
sbb
movsb
xor
push
inc
add
test
pop
ja
out
mov
sbb
jle
hlt
or
rclb
cmpsb
imul
and
mov
mov
or
xchg
inc
lock
pop
mov
fists
stos
arpl
in
shrl
imul
sbb
rcrb
mov
outsl
xchg
popa
lret
dec
insl
xlat
xchg
inc
out
and
pop
hlt
adc
mov
mov
jecxz
xchg
jne
out
cmp
jno
lcall
or
pop
or
xor
dec
mov
je
pop
cmp
insl
pop
jl
es
cs
push
dec
pop
xor
or
and
ficomps
int3
xchg
test
rcrl
dec
ds
sub
xchg
cmp
cmc
mov
xchg
shrb
dec
xor
fnsave
mov
lods
icebp
sbb
fisubs
lds
jbe
loopne
xchg
push
out
test
stc
dec
outsb
adc
gs
aas
cmp
loop
mov
or
add
jmp
aam
mov
inc
popf
sarb
pop
sub
mov
lret
jo
cmpsb
aad
dec
mov
loope
les
sahf
sub
push
jns
es
clc
sti
in
sti
lods
cmp
adc
loop
adc
cmc
fistps
jne
jl
pop
psubq
xor
dec
mov
mov
mul
test
inc
insb
dec
push
push
outsl
movsl
cltd
pop
daa
bound
sbb
int
call
fidivs
leave
in
sub
xchg
rcrl
add
clc
mov
xor
xor
sti
ret
fcoml
std
lods
or
add
in
mov
mov
push
xor
push
dec
add
push
popf
sti
daa
fistl
sbb
mov
dec
test
xor
loope
push
inc
js
in
ret
jp
leave
mov
sbb
cmp
inc
femms
pop
rcrl
int3
mov
xchg
pop
mov
xor
inc
lock
sbb
and
stos
out
cmpsb
mov
mov
movsb
and
push
push
stc
mov
dec
jno
das
movsl
xchg
addr16
push
jo
stos
mov
addr16
jl
loop
movsb
push
push
aad
push
fsubr
pop
in
ss
in
testl
loop
push
jno
push
pop
mov
out
dec
mov
mov
push
shr
jg
and
pop
insl
dec
cwtl
mov
adc
dec
fldt
add
jg
push
out
push
loopne
mov
cli
inc
pop
jmp
push
and
ss
push
icebp
push
decl
mov
and
arpl
cmpsb
cmp
insl
mov
add
xor
inc
sbb
fstpt
sbb
movsl
lods
push
push
adc
pmuludq
iret
ret
call
fcmovb
mov
ja
lock
inc
lahf
aam
jmp
nop
xchg
push
mov
xor
fistpl
jp
push
imul
std
adc
mov
and
in
fbstp
add
nopl
mov
addb
pop
es
loopne
dec
jge
push
jae
mov
or
xlat
ret
fistpl
push
xlat
repnz
rorb
loopne
hlt
push
cltd
pop
scas
mov
and
test
scas
push
cmp
test
pop
pop
xchg
data16
mov
inc
adc
pop
lods
add
and
movsl
and
mov
and
pop
xchg
push
pop
cmpsb
in
mov
pushf
push
sub
pop
out
pop
cmp
push
repnz
in
cmp
lahf
xor
aad
add
aas
fnstsw
movsb
sub
sub
jno
inc
jg
push
jne
movsb
sub
cmp
mov
fisubrl
push
fidivl
outsl
fucomi
inc
adc
cmp
sub
in
lods
add
aas
xor
jb
cmp
jnp
sub
aaa
test
iret
jno
hlt
cmpsb
jge
call
inc
sbb
pop
pop
lea
dec
call
mov
push
xchg
inc
into
mov
xor
cmpsl
outsb
mov
inc
std
repnz
xchg
dec
pop
imull
js
sbb
andl
jbe
scas
jecxz
mov
mov
jne
mov
ret
sbb
cld
xchg
add
mov
and
cmp
das
es
adc
xor
daa
push
adc
fwait
dec
test
mov
icebp
mov
cli
xchg
ljmp
rolb
stos
jno
mov
pop
loopne
sub
mov
pusha
js
mov
mov
jmp
and
push
mov
mov
mov
inc
stos
mov
lds
xchg
sbb
xchg
pop
cmpsb
cmp
cmpb
addb
xchg
mov
test
popa
mov
loop
rcl
sub
jg
das
xchg
xor
mov
mov
jg
xchg
cmp
pusha
xchg
mov
mov
pop
mov
jge
cli
out
xor
jnp
pop
dec
push
out
pop
jne
inc
add
adc
test
dec
iret
leave
or
lcall
xchg
lods
dec
pop
in
mov
aam
ljmp
push
mov
add
sub
sbb
push
leave
add
pop
mov
mov
and
xchg
fildl
aaa
js
fdivr
adc
jns
xor
jp
cmp
call
imul
mov
andnps
data16
cmc
scas
leave
pop
xchg
cmp
sub
mov
cmp
sti
cmpsl
filds
and
adc
jno
push
jae
daa
mov
fs
in
sbb
test
mov
xor
jnp
mov
xor
in
jns
jbe
jbe
add
xchg
pop
ja
cli
bound
stos
inc
lcall
sbb
xor
test
add
imul
mov
out
test
pop
sub
data16
dec
pop
sbb
mov
xchg
in
xor
xchg
out
pop
f2xm1
dec
cld
fs
fistpl
ret
call
shrl
sub
mov
iret
imul
mov
or
shr
xchg
pop
jecxz
xchg
out
or
or
out
popa
arpl
and
mov
out
int3
into
pop
in
repz
test
scas
jmp
dec
xor
mov
push
xorb
adc
and
ds
stos
shl
pop
push
loopne
in
sub
push
sbb
pop
xchg
sub
test
mov
xchg
add
pop
push
in
stos
push
stos
call
aam
int3
mov
sub
mov
ds
xchg
addr16
cld
mov
xchg
loop
std
fs
stos
nop
movsl
dec
lcall
xor
out
push
shl
jae
in
xor
cmpsb
dec
sbb
pop
stos
push
jb
adcb
xchg
test
push
sbb
clc
xor
fwait
leave
imul
pusha
xchg
jl
mov
ret
in
fmull
outsl
loope
pop
jge
push
inc
jnp
inc
cli
sub
jp
filds
mov
lcall
push
test
stos
repnz
fcoml
imul
inc
push
inc
mov
pop
mov
icebp
les
lcall
shl
xchg
sbb
pop
jp
push
hlt
adc
shl
insb
das
adc
adc
test
arpl
scas
mov
lcall
lret
push
push
idivb
sar
imul
ficompl
push
movsl
sbb
xor
push
jecxz
movsl
pop
int
xor
filds
cmp
mov
scas
pop
and
testb
clc
push
and
lea
push
mov
pop
mov
push
pop
cmp
xchg
std
sub
es
cld
mov
push
cs
add
aaa
aaa
xor
in
cwtl
pop
sbb
cwtl
dec
fsubs
pop
adc
lods
and
std
mov
cltd
int
out
sub
push
jg
mov
sub
movsl
adc
aam
pop
xor
stc
push
aaa
cmp
xchg
cmc
sub
movsb
movsb
mov
arpl
jns
nop
inc
mov
imul
imul
mov
sbb
mov
imul
xchg
pop
pusha
push
shl
xor
jg
xchg
sbb
fwait
das
mov
sub
jle
sub
fbstp
sbb
mov
mov
in
cmc
lahf
push
nop
enter
mov
iret
pop
sub
push
fiaddl
xchg
adc
mov
outsb
xchg
add
and
mov
cmp
filds
adc
sub
fists
std
fdivr
dec
stos
pop
pop
xchg
scas
lds
adc
push
out
icebp
aad
addr16
push
subb
jo
lret
push
inc
or
xor
je
or
sbb
std
push
enter
testb
shll
roll
fcmovne
push
fs
lcall
loopne
lock
jbe
fidivrl
push
mov
fs
addl
out
adc
sbb
push
and
je
xchg
addr16
aas
aaa
mov
bound
cltd
cld
stos
mov
sbb
sub
mov
mov
and
addr16
pop
cmpsb
lock
dec
adc
ret
push
out
or
bound
sbb
push
lcall
mov
ds
push
jl
inc
cmp
roll
sbb
aad
and
jne
dec
cltd
jnp
mov
out
rorl
subl
call
outsl
push
mov
vmulsd
xchg
cltd
nop
and
les
nop
subl
insl
data16
out
shrb
orb
xor
imul
inc
ja
cwtl
int
scas
cmp
pop
sbb
cmp
xchg
xchg
fidivrl
outsb
loope
in
adc
adc
rol
mov
je
enter
movsl
push
dec
ret
aam
int
mov
push
jae
mov
mov
and
arpl
test
int
adc
jg
cmp
jae
les
xchg
push
jmp
xor
push
jb
cmc
aam
dec
lret
into
mov
aaa
pop
jae
or
js
adc
xor
pop
xchg
in
cmpsb
cwtl
jae,pn
fcmovne
bound
mov
sub
xchg
imul
adc
push
mov
lods
pop
nop
arpl
lret
adc
sbb
bound
sarb
xchg
jno
cld
jb
in
jno
mov
insb
out
and
movsl
aas
jae
shr
cmp
adc
mov
pop
aaa
mov
movsl
shlb
rorl
sub
or
push
sarl
ret
push
jecxz
adc
jae
push
push
lcallw
adc
xchg
sbb
fdivr
pop
cmpsl
or
loopne
hlt
mov
rcll
add
out
mov
or
ljmp
loope
dec
sbb
out
push
cwtl
shrb
jle
xchg
lret
stc
cld
inc
jle
mov
sub
scas
std
mov
push
xchg
call
mov
lods
sahf
add
mov
fdivs
mov
rcll
sub
insb
sbb
mov
ret
es
sub
mov
dec
aas
add
ret
movsl
jo
sub
jb
and
cld
sub
ss
dec
test
stos
xchg
push
mov
popa
lcall
int
arpl
xor
and
in
lock
xor
lea
xchg
fdiv
cmpsl
hlt
aad
data16
jmp
bound
loopne
outsb
subl
or
sub
sarl
sub
xchg
mov
stc
test
push
pop
repz
jmp
out
jecxz
add
fadds
dec
test
dec
fmul
mov
jne
in
inc
sub
pop
sbb
out
mov
sub
notl
push
cld
pop
and
sub
das
or
and
pop
imul
icebp
insl
call
lods
mov
sti
test
mov
js
jnp
jne
fstl
clc
outsl
jno
ja
in
jns
mov
push
fists
push
pop
loopne
or
xchg
test
int
sub
cmc
adc
sbb
push
push
inc
fnstsw
shll
cmp
add
aam
sub
in
stos
sbb
add
fs
mov
es
enter
and
out
pop
mov
or
call
inc
mov
cltd
mov
out
cmpsb
xchg
cmc
arpl
add
dec
and
mov
ret
xchg
arpl
out
jo
or
outsb
ja
test
out
int
xor
mov
test
sbb
imul
xchg
not
xlat
stos
aas
cmp
mov
sub
push
push
js
cmp
mov
or
cmp
adc
and
je
jbe
push
ja
or
push
sbb
insb
aam
and
mov
lds
fwait
inc
cld
stc
mov
loope
shufps
inc
adcl
sarl
out
fldenv
shl
pop
push
flds
insl
mov
popf
mov
fcompl
mov
loop
dec
jge
add
cmp
cmp
psubusw
xor
or
inc
les
jge
loope
sbb
jecxz
sahf
pop
js
mov
je
orl
pop
ret
jg
in
mov
mov
lret
shrb
xchg
pop
cmpsb
loop
out
loope
pop
test
loope
pop
int
sbb
sti
std
adc
sbb
pop
mov
lcall
loopne
inc
clc
pop
loop
xor
ss
dec
cmp
cmp
xchg
mov
xchg
lcall
ss
cmp
xor
xchg
dec
cmc
je
add
mull
ja
dec
add
js
dec
cmpsl
ret
push
std
pop
mov
cmc
jno
push
arpl
mov
ficoms
lea
mov
push
aas
int3
aad
out
inc
adc
dec
addl
lcall
pop
subb
adc
xchg
das
sub
push
cmc
cmp
cltd
out
fidivrl
in
pushl
sarl
frstor
subb
sti
cmpb
sub
out
hlt
xchg
mov
mov
xor
adc
jge
xchg
sbb
mov
imulb
pop
imul
loop
sbb
aam
inc
mov
add
das
aas
dec
xlat
jae
cmp
push
std
insb
mov
jns
loopne
mov
int3
bound
stc
push
je
popa
sahf
es
cltd
cmp
push
push
add
scas
add
sbb
js
inc
adc
lret
imul
sub
iret
stos
stc
pop
aad
loop
mov
add
mov
xor
insl
or
mov
pop
inc
push
dec
fsubrl
cmp
pop
add
out
repnz
divl
push
sub
clc
imul
adc
xor
mov
mov
ljmp
cwtl
repnz
sti
insl
pop
mov
pop
jge
pop
or
fisubrs
hlt
dec
push
add
cmp
jmp
push
test
movsl
pop
arpl
mov
inc
adc
xchg
lods
xchg
jno
push
lea
es
push
divl
roll
out
mov
cmp
mov
jp
xchg
cs
sub
mov
jno
ffreep
call
add
movsl
jecxz
mov
iret
lds
dec
outsb
dec
fdivs
mov
shl
int3
sti
roll
mov
xchg
fcom
lahf
xor
add
sub
mov
call
jno
and
loope
nopl
push
hlt
jg
sbb
loope
pop
lods
stos
adc
xor
in
stos
push
into
push
js
adc
bound
popa
dec
and
lahf
jo
fistps
icebp
faddl
cli
mov
loop
cli
jg
push
sbb
dec
cmp
fdivs
int3
out
jg
mov
xor
mov
mov
fidivl
pop
and
mov
inc
fwait
xlat
pop
cltd
pop
lcall
lret
xor
je
dec
xor
mov
adc
jns
call
pop
sbb
mov
inc
bound
dec
mov
inc
in
dec
mov
cltd
inc
push
lcall
push
lret
mov
jecxz
cmp
mov
xor
mov
sbb
cmp
imul
push
mov
test
jnp
enter
pushf
jmp
xlat
pop
das
adc
enter
pop
movsl
jmp
or
jle
lea
fcmovbe
pop
xchg
inc
xlat
mov
inc
xchg
cwtl
push
xchg
mov
aad
inc
fwait
push
cs
cmp
mov
lahf
jne
test
jne
adc
addr16
lret
fbstp
fcmovb
jp
sbb
out
fcoms
jae
dec
nop
and
mov
rcrb
dec
ljmp
dec
inc
or
jae
and
std
and
sbb
add
xor
movsl
test
inc
xchg
cvtdq2ps
sub
and
push
std
pop
push
push
lods
incl
cmp
aad
pop
icebp
idivb
jbe
out
jecxz
inc
mov
jg
add
movsb
cltd
orl
outsb
ljmp
dec
rorb
xchg
daa
sti
repnz
push
and
add
jns
cltd
cld
ljmp
pop
test
fsubrp
ffree
mov
sub
mov
gs
add
clc
or
mov
or
orb
je
aas
lock
shr
push
ja
loopne
bsr
in
mov
sub
dec
mov
sbb
outsl
out
addr16
inc
jnp
xchg
cmp
mov
inc
mov
cmc
jb
pop
aas
mov
pop
mov
enter
xchg
sub
add
add
xor
and
addr16
ds
pushf
imul
inc
mov
mov
jb
das
int3
jg
adc
lods
movsb
xor
pop
pusha
cltd
pushf
xor
or
jl
sub
cmp
ret
popf
inc
add
cmpl
mov
sahf
icebp
xchg
arpl
fldl
jne
sbb
or
jl
mov
test
test
add
push
or
or
jg
mov
mov
or
aaa
xchg
xchg
mov
pop
sub
leave
inc
jbe
shrb
js
es
cmpsb
dec
in
push
sbb
ds
int3
cltd
sarb
les
sub
mov
dec
sub
movsl
orl
fdivrl
sbb
gs
fcomps
pop
leave
and
fs
bound
iret
mov
js
fcompp
cmpsb
in
lcall
out
lcall
push
sub
loopne
ret
movsl
call
rcll
fnsave
add
mov
dec
aam
cmpsl
jmp
sub
push
xchg
stos
sub
or
imul
dec
sti
int
dec
addr16
in
popf
cmp
bound
aas
mov
push
rcrl
xor
andl
and
dec
jmp
out
add
mov
fwait
sub
iret
sub
shlb
mov
loopne
daa
xchg
jnp
jg
test
or
aam
test
aam
dec
adc
clc
lods
and
jno
ja,pt
jbe
lods
or
cld
pop
cli
inc
js
cmpb
push
pusha
push
and
push
fmull
movsl
and
data16
sub
pop
pop
xchg
lret
fdivrs
inc
mov
pop
push
ljmp
push
xor
cmp
inc
jp
push
push
fnsave
dec
sahf
mov
sbb
sbb
icebp
das
scas
shlb
mov
mov
repz
movsl
repz
sub
sahf
dec
push
lcall
mov
mov
out
mov
ja
adcb
xchg
mov
fmuls
out
jmp
in
mov
sub
mov
xchg
dec
into
jns
sbb
mov
incb
fcomip
cld
jle
add
pop
mov
xchg
lods
mov
xchg
jge
subb
mov
jcxz
repnz
mov
pop
or
fidivs
ror
sarb
xchg
or
cmp
pop
leave
into
pusha
mov
push
sub
jne
cmpsb
xlat
enter
xchg
jbe
repz
addb
lea
mov
pop
clc
loopne
js
inc
mov
sub
repz
rorb
movsl
enter
inc
push
imul
dec
scas
pop
sbb
out
and
rol
icebp
lea
jp
dec
inc
ret
stos
fimull
push
xor
testb
cs
jl
or
outsb
mov
jg
in
imul
mov
mov
clc
pop
or
les
ret
mov
inc
scas
add
iret
sti
jg
dec
pop
cmp
fdivrl
add
jne
lds
jmp
dec
dec
les
movsl
mov
and
inc
xchg
rcll
push
ljmp
sub
cmp
pusha
dec
and
mulb
jbe
adc
dec
std
or
and
adc
mov
jno
je
or
mov
or
sub
adc
or
mov
pop
leave
push
pop
scas
mov
xor
pop
iret
push
mov
out
xchg
into
and
sbb
js
xchg
mov
data16
cltd
mov
sub
add
jns
addl
mov
icebp
adc
daa
push
and
pop
je
cmpsb
sub
loope
adc
fisubrl
pop
push
insb
push
dec
mov
cmpsb
mov
push
push
mov
adc
push
fdivl
xor
call
mov
jmp
mov
movsl
jnp
add
xchg
outsb
pushf
mov
push
jge
nop
test
inc
jge
sti
cmpsl
rorl
or
push
shll
sub
or
imul
and
ds
loop
jl
lock
or
or
cwtl
and
rcr
sub
lods
xor
jb
push
test
in
or
adc
nop
shll
mov
shrw
xlat
dec
cli
xchg
cmp
mov
lea
negl
xchg
lock
out
scas
push
movsb
vpcmpeqd
sbb
push
shrl
cmp
xor
jbe
pop
mov
mov
test
push
fnstenv
lret
sahf
aas
loop
fstps
inc
adc
push
push
pop
fnstsw
insl
rolb
cmp
mov
push
pop
dec
xor
cli
inc
les
loope
mov
adc
mov
xchg
push
mov
aam
arpl
mov
mov
mov
and
inc
dec
cltd
inc
cmp
lret
jb
add
out
xor
xchg
fs
gs
inc
std
pop
addr16
incb
dec
inc
xchg
js,pn
sbb
hlt
inc
cmp
jnp
into
or
pop
push
and
imul
frstor
adc
or
adc
test
cmc
cmp
out
jp
aam
outsl
aad
aaa
mov
xchg
rcll
add
repz
lods
push
push
ds
xor
stos
xchg
dec
mov
jns
inc
js
shll
sub
adc
add
mov
cli
fs
mov
fwait
stc
jno
jns
outsl
jb
jno
cltd
dec
jo
testb
rclb
and
mov
pop
sub
xor
subl
and
xchg
mov
sbb
or
mov
pusha
sub
test
sahf
jge
mov
aas
push
divl
jne
mov
jg
aaa
insb
out
rolb
and
les
dec
fstps
add
mov
mov
jecxz
mov
ficoms
mov
push
jno
dec
js
lcall
inc
hlt
lcall
push
cs
mov
mov
pusha
lret
es
dec
push
cld
cmc
adc
cmp
ret
sbb
cs
imul
sub
mov
mov
adc
addr16
nop
or
pop
adc
ret
jge
jecxz
inc
mov
and
test
inc
xlat
dec
ljmp
xor
xchg
lea
push
add
xlat
xor
sti
or
fsts
dec
mov
dec
xchg
xlat
xor
subl
gs
xor
cli
ljmp
mov
out
xchg
xor
dec
lret
stos
jmp
xorb
xchg
mov
in
pop
rol
push
push
lods
jno
lods
mov
push
mov
sbb
xchg
xchg
sub
repz
mov
sub
push
cmp
and
int
in
outsl
je
repz
add
pop
sets
out
sti
movsl
push
cmpsb
das
mov
stos
mov
cli
je
pop
mov
mov
scas
cwtl
stc
push
lret
xor
sbb
sbb
aas
sbb
pop
test
sub
xor
sti
in
inc
mov
xor
mov
jle
ret
sbbb
stos
or
inc
push
testb
adc
lret
inc
out
test
stos
dec
sub
push
int3
jae
icebp
daa
cmp
out
push
int3
add
bswap
sbb
dec
adc
sahf
jbe
sub
jmp
and
mov
mov
test
inc
negl
loop
ficoml
cmp
in
mov
sub
leave
xchg
test
iret
push
inc
out
sub
add
notl
imul
jp
clc
jno
jae
dec
mov
cmp
das
jl
or
popa
jo
fidivrl
test
out
lods
aaa
dec
pop
sub
xor
in
add
pop
cmp
adc
pop
mov
mov
push
sub
adc
lods
je
mov
ss
mov
mov
inc
xchg
xor
scas
add
jnp
or
sub
out
pop
imul
test
pop
mov
mov
and
lods
loopne
mov
push
push
mov
mov
sub
aaa
shl
jl
rol
stos
mov
iret
sub
xchg
je
cmp
mov
sub
mov
andb
pop
lret
mov
pop
dec
shr
cmpsb
adc
mov
sbb
jo
push
pop
add
sbbb
fwait
mov
dec
push
inc
cltd
mov
call
inc
sub
imul
jle
jp
iret
loopne
push
mov
in
adc
inc
inc
flds
push
push
nop
out
xchg
arpl
out
into
add
ja
add
scas
dec
scas
pushf
movsb
in
outsl
mov
mov
push
pop
sub
ja
xchg
or
fstpl
sub
mov
xchg
sub
imul
insl
mov
sbb
add
lahf
xchg
jmp
sub
fsubp
out
mov
je
pop
scas
inc
pop
popf
icebp
mov
popa
outsb
lcall
sub
mov
in
mov
roll
mov
rcrl
pop
repz
insl
scas
lods
push
scas
pop
bound
sub
sbb
lods
insl
sub
xor
pop
push
jnp
aaa
or
sbb
es
rorb
xchg
sbb
cmp
bound
jmp
pushl
cmpl
and
enter
cmp
xor
xchg
sbb
stos
mov
in
and
int3
stos
or
mov
xor
push
dec
das
push
movsb
mov
repnz
xchg
pop
stos
mov
notb
fsub
xchg
dec
mov
pop
mov
cwtl
xor
cltd
pop
andb
inc
jge
push
mov
xchg
dec
mov
jecxz
mov
xor
rcrb
dec
cmp
stos
pop
push
bound
lods
mov
stos
push
stos
aam
fists
or
push
loopne
push
push
outsb
call
dec
mov
int3
jecxz
adc
bound
cmp
stos
xor
sahf
mov
popl
int
lcall
xchg
pop
mov
rcrl
mov
xor
shl
inc
mov
roll
mov
jne
push
adc
imul
pop
sbb
sbb
cmp
and
adc
lock
jmp
sub
fists
das
clc
pop
sbb
pop
add
fsub
inc
xlat
add
arpl
push
ret
js
dec
pushf
pop
push
les
scas
adc
pushf
rcr
cs
cmp
ljmp
lcall
lret
inc
out
mov
mov
sarl
xor
insl
lds
pop
jb
das
lret
adc
int
dec
mov
nop
insl
in
aad
scas
or
sbb
aas
push
js
mov
xchg
xor
lods
pushf
loopne
lret
jmp
dec
in
jl
shl
xor
test
data16
add
popa
inc
shl
adc
mov
in
and
hlt
jp
cmpsb
adc
pop
inc
pop
ss
stc
dec
pushl
pop
mov
dec
xchg
into
mov
popa
mov
out
sub
arpl
xchg
movsl
mov
dec
pop
das
imulb
jl
dec
jb
cmpsl
cmp
cltd
test
rclb
fistps
dec
mov
outsb
xor
arpl
cwtl
pusha
sub
cs
sarb
scas
pop
repnz
sbb
xchg
div
xor
mov
popa
roll
and
ret
cli
mov
lcall
add
push
sahf
pop
dec
mov
repz
pop
lea
mov
cs
xchg
pusha
outsl
sub
adc
mov
jmp
inc
xor
inc
flds
sub
out
jg
pusha
cmpsl
mov
jmp
bound
test
stos
pop
cld
int3
push
sbb
push
mov
mov
icebp
sbb
mov
mov
dec
rcrl
ret
ret
push
dec
not
mov
xor
js
pop
mov
lea
cmp
cmpsb
jp
js
or
jno
lahf
push
call
lahf
pop
inc
adc
xchg
pop
ret
cmp
jg
push
sub
adc
adc
mov
jmp
mov
js
je
inc
push
dec
push
fldenv
mov
and
xor
or
cld
mov
jnp
pop
cmp
or
sahf
pop
mov
fisubrl
inc
push
adc
mov
rorl
popf
das
lea
xchg
inc
sub
mov
addb
inc
cmpsb
mov
lcall
aam
loopne
jo
xchg
ljmp
fcompl
mov
push
mov
adc
mov
stc
fisubs
adc
cli
sbb
jb
mov
mov
call
add
popf
fwait
into
inc
xchg
imul
dec
rorb
aas
mov
cltd
sub
lret
insl
aad
add
mov
jp
jns
push
insb
mov
cmp
adc
repnz
xchg
push
loope
imul
mov
adc
adc
data16
jbe
xor
jno
jl
out
adc
lret
sbb
out
cmp
pushf
and
push
push
push
ss
in
outsb
icebp
movsl
inc
xchg
mulb
in
cli
insb
cld
ja
je
movzbl
sub
leave
in
mov
xor
jbe
fsubrl
mov
lcall
sub
pop
and
push
or
jae
adc
into
mov
in
mov
xchg
dec
push
das
or
ret
fidivs
int
push
in
sbb
lea
cmpsl
adc
mov
mov
mov
popf
nop
ljmp
sti
inc
pop
pop
sub
cmp
adc
fisttpll
dec
xor
lods
rorl
sub
mov
gs
dec
ficoml
and
or
mov
sbb
cli
xchg
lock
cs
cmpsb
fcompl
push
jmp
cmp
shr
dec
aam
and
in
rol
daa
xchg
sub
mov
not
mov
stc
cmpsl
fdivrs
push
sub
pusha
mov
scas
inc
push
mov
mov
pop
mov
mov
push
cmpsl
mov
or
sub
js
adc
scas
ret
pop
stos
xor
xor
pop
lcall
ss
mov
loopne
cmpsl
xchg
out
shll
faddl
and
fstps
sahf
mov
gs
lcall
xor
mov
jb
pop
in
or
nop
jnp
jl
icebp
mov
fistpl
xchg
or
in
out
pmaxsw
or
cmp
in
lock
ds
sub
ret
repnz
add
cmpxchg
add
cs
fisubl
dec
push
inc
jne
cld
mov
mov
mov
aad
leave
aas
pop
xchg
mov
ds
icebp
inc
adc
jmp
xorl
rorb
cmp
pop
adc
repz
rorb
cld
hlt
in
stos
push
lahf
xor
jae
dec
inc
aas
lret
sbb
or
pop
and
and
in
mov
xor
js
mov
mov
icebp
pop
xchg
jae
lcall
iret
dec
cwtl
das
inc
fwait
test
sub
inc
sub
bound
addr16
lds
push
push
or
jg
clc
dec
int
nop
or
or
inc
xchg
add
mov
and
mov
xchg
popa
add
jecxz
adc
outsl
cmpsb
loopne
push
clc
jl
outsb
in
push
in
jo
das
scas
daa
hlt
and
es
sar
insb
pop
mov
pop
pop
out
fstp
and
dec
mov
dec
push
sub
mov
sbb
sbb
lods
pop
mov
mov
push
sbb
adc
clc
jne
call
pushf
adc
stc
dec
mov
pop
loop
std
pop
fstpl
lods
ss
cltd
mov
add
dec
fldt
dec
inc
adcb
out
or
xchg
dec
call
mov
sub
cmp
or
ret
cmpsl
sub
mov
stos
imul
inc
adc
or
mov
aas
jle
scas
dec
imul
movsb
jge
xor
mov
inc
xchg
out
push
call
adc
xchg
sbb
mov
jecxz
insl
xchg
pop
add
xor
xchg
hlt
xor
adc
xchg
jle
call
cmpsl
pop
xchg
aas
and
insb
negl
push
fists
popa
jp
mov
movsb
sbb
jle
mov
sahf
inc
push
mov
xlat
test
pop
mov
dec
in
lock
jbe
and
je
mov
loope
xchg
stc
pop
lds
repz
push
enter
sub
arpl
and
adc
mov
pushf
dec
gs
sub
shr
je
inc
mov
cwtl
dec
push
inc
push
js
mov
adc
in
push
xchg
mov
daa
mov
gs
int
pop
mov
pop
adc
xor
dec
mov
subb
shll
faddl
pop
xor
arpl
shl
push
cs
push
adc
outsb
psubd
jecxz
sahf
lods
scas
sti
jmp
adc
xor
dec
shrb
lods
gs
dec
xor
mov
push
scas
call
push
jno
test
jnp
test
fwait
popf
cmp
popf
imul
pop
cld
cmp
mov
ja
dec
ret
add
mov
mov
movsb
fnstsw
mov
out
cmp
or
in
ss
movsl
decl
mov
test
dec
cmp
push
test
pop
loop
sbb
subb
jne
test
cmp
shr
lret
xchg
stos
addl
jb
in
imul
mov
and
cmp
xor
jecxz
dec
pop
in
push
or
mov
cmp
pop
fildll
fdivl
dec
cmp
leave
lea
jecxz
jp
xor
and
mov
jne
mov
jmp
mov
fnstenv
pop
cs
pop
pop
pop
push
dec
pop
cltd
shll
inc
or
lcall
adc
stc
mov
pop
fldcw
iret
jae
popa
adc
andb
jg
rorl
lods
mov
push
imul
dec
pop
dec
inc
dec
std
mov
jecxz
repnz
mov
popf
ljmp
and
dec
and
xchg
mov
xchg
sbb
xchg
adc
and
dec
outsb
imul
imul
je
pop
pusha
jecxz
sbb
loope
scas
mov
xchg
stos
aam
fmul
in
add
mov
or
pop
cli
push
test
pop
push
add
push
aas
lcall
negl
aaa
mov
mov
sti
adc
fdivl
mov
inc
sti
ljmp
sbb
jo
adc
outsb
dec
lidtl
in
mov
or
mov
test
sbb
repnz
out
mov
stos
int
xlat
mov
mov
or
jae
popa
popf
or
mov
sbb
out
movsl
js
inc
ljmp
clc
and
fdivrs
adc
ficompl
mov
or
sbb
cmp
push
enter
xor
and
rcll
rclb
rolb
sbb
push
test
cmp
mov
cmp
negl
jmp
out
fcomi
mov
subl
popa
and
jno
inc
xor
loopne
xor
das
inc
pop
out
mov
icebp
xor
movsl
addr16
xor
dec
dec
js
ret
cmc
ljmp
and
shl
xor
scas
gs
ret
cmc
lahf
out
sub
lahf
cmp
pop
mov
repz
dec
xchg
push
lods
mov
out
add
ja
std
push
lds
ja
lea
add
dec
xor
adcb
xor
add
xchg
mov
out
daa
ljmp
das
add
addl
and
jns
addb
adc
loope
rcl
mov
lcall
outsb
sub
pop
push
pop
xchg
popf
cmpsb
jns
mov
lds
push
imul
sahf
in
mov
rolb
iret
mov
jl
cmpsl
imulb
fbstp
in
pop
inc
int3
mov
fwait
xor
outsl
jg
sbb
mov
int3
mov
cmp
mov
aas
jo
push
xchg
xchg
push
lret
push
add
mov
adc
es
shlb
addr16
imul
ja
cmpsl
push
mov
gs
mov
dec
cmp
jg
repnz
or
add
bound
pusha
push
and
loope
fidivrl
jne
into
sub
lcall
jp
lds
sub
sub
xor
and
xchg
xor
call
mov
bound
xchg
hlt
movsl
push
dec
mov
std
test
jb
sbb
scas
push
cmpsb
push
bswap
cld
jp
pop
push
orb
loop
mov
jno
jp
pop
or
clc
inc
sub
xchg
add
out
lods
cmc
mov
mov
iret
sbb
dec
xchg
mov
out
insl
push
xchg
push
aam
jno
sahf
cmc
sbb
frstpm(287
pop
sahf
hlt
jmp
cmp
push
pop
scas
inc
and
dec
xor
maskmovq
loop
push
imul
rcrb
jg
cwtl
stc
xchg
test
mov
scas
enter
adc
lock
movsl
mov
mov
scas
add
and
mov
bound
jp
sub
xchg
and
rcr
mov
bound
daa
mull
lret
out
dec
mov
adc
inc
insl
jmp
out
fisttpl
jecxz
movsl
jp
push
out
outsl
lret
ss
jmp
cmpsb
cli
sub
call
int
fs
lock
sbb
shl
aam
clc
into
pop
test
lret
pop
inc
xchg
push
xorl
fisubl
leave
mov
loopne
push
cmp
stos
popa
jnp
clc
adc
sbb
rcl
sbb
mov
bnd
test
xchg
ret
jae
inc
out
or
rcr
int
int
out
fstl
stos
sbb
sub
rorl
imul
mov
sti
add
ss
pop
loope
loope
sbb
push
fwait
sbb
ja
inc
icebp
inc
add
jns
into
adc
movsl
cmp
clc
inc
test
sub
shll
mov
dec
mov
js
std
pop
rorb
outsb
hlt
inc
sbb
mov
mov
mov
enter
adc
scas
int
bound
pop
imul
popf
push
push
gs
cmc
fdivrp
jecxz
mov
int
sub
cmpsl
clc
test
gs
cwtl
dec
xchg
pop
loopne
dec
add
lock
out
xchg
pop
daa
sub
clc
jl
xchg
dec
cmp
mov
mov
out
cwtl
mov
push
mov
inc
cli
popa
xchg
push
mov
xchg
fimuls
movsb
pop
jmp
hlt
nop
jp
pop
mov
out
enter
pop
add
mov
xor
cmpsb
lcall
jbe
ljmp
xchg
lods
dec
push
jae
aad
cmp
pop
in
sub
xor
jne
aam
js
sub
pop
insl
jge
mov
pop
pop
and
push
movsb
jo
mov
or
loopne
mov
rcrb
mov
sub
push
inc
sub
xor
mov
in
xor
sbb
lret
adc
imul
mov
dec
in
or
imul
sbb
sub
lods
inc
outsl
sub
rol
sbb
outsl
xchg
mov
rcll
inc
rcrb
incb
lret
inc
sbb
mov
pushf
aaa
jmp
testb
lea
daa
cmpl
mov
cmpsb
lea
pop
sbbl
pop
push
ror
pop
and
mov
mov
subl
inc
mov
arpl
adc
xor
push
jbe
jbe
dec
mov
lcall
jle
lods
mul
jl
mov
xchg
xchg
cli
movsl
push
cmp
or
mov
mov
jnp
leave
push
mov
inc
push
arpl
cmp
jb
inc
pop
fisubrl
sbb
inc
idivb
jmp
ret
ja
stos
aam
mov
sbb
mov
mov
mov
cmc
xor
sub
cmp
ret
std
push
in
or
push
mov
jmp
jno
out
sub
push
mov
call
xchg
sub
mov
mov
mov
mov
dec
dec
jns
in
daa
in
es
mov
call
lods
xor
sbb
cmp
inc
cld
pop
movsl
add
sub
imul
pop
int3
jnp
cld
sub
hlt
xchg
ja
cltd
pushf
cs
sbb
mov
cmp
dec
push
mov
fdiv
xchg
sti
adcl
mov
stc
xchg
xor
stos
dec
mov
dec
jmp
push
and
inc
pop
stos
xchg
popa
add
push
fstl
mov
mov
inc
jg
lret
cmp
lock
fwait
call
jb
inc
dec
sub
mov
cli
fwait
mov
sub
arpl
jge
mov
dec
test
ja
xor
xchg
pop
pusha
mov
test
gs
icebp
insl
negl
rcrb
outsb
divb
dec
xchg
mov
loop
test
outsl
imul
sbb
in
or
out
insl
roll
mov
or
fldl
sysret
fcmovnu
pop
mov
aaa
fiaddl
scas
and
mulb
push
inc
daa
mov
out
imul
jns
mov
into
subl
push
push
aad
xchg
enter
ljmp
loop
mov
push
hlt
pop
das
xor
and
jle
lahf
jle
clc
test
cld
sti
and
mov
repz
sub
fnstenvs
out
addb
gs
paddw
cmc
and
sub
jno
popa
push
rcrb
sbb
ja
mov
cli
test
imul
test
cli
insb
out
lods
add
inc
rcr
jo
pop
test
pop
sbb
and
pushf
ljmp
test
ret
aaa
mov
jp
push
jo
loope
inc
mov
rcrb
ss
jb
mov
xor
mov
pop
sub
or
push
or
loop
and
fldcw
jg
add
inc
pop
inc
mov
cmp
adc
cmpsb
cwtl
lcall
xor
movsl
mov
mov
push
adc
addb
mov
leave
push
push
or
cwtl
mov
popa
mov
pop
out
pop
scas
mov
idivb
mov
and
mov
repnz
lret
js
es
dec
insb
aam
pop
jle
cli
dec
or
pushf
fistl
cmp
dec
xchg
mov
roll
mov
xchg
fs
jmp
sbb
gs
inc
mov
or
fdivl
sahf
in
mov
sbb
mov
adc
mov
cmp
leave
cltd
call
cmp
imul
xor
jmp
imul
and
sahf
sti
pop
mov
lods
jle
and
imul
and
and
scas
imul
inc
jecxz
lcall
sti
pusha
pop
push
arpl
shr
or
in
stos
pop
add
add
or
dec
mov
mov
mov
adc
imul
inc
jmp
test
or
fldcw
mov
inc
sub
cmpsl
jbe
addl
ds
sti
sahf
daa
fcompp
movsl
lcall
fsubrl
ljmp
clc
scas
mov
jmp
xchg
sub
lret
test
xor
adc
arpl
inc
push
dec
arpl
fwait
enter
dec
mov
and
mov
xor
rorl
je
ja
cmc
mov
jg
jae
jbe
cmp
pop
rol
xchg
sub
pop
jne
fiadds
mov
inc
or
aaa
test
add
int
ds
push
aam
lods
pop
lret
lahf
inc
mov
mov
orb
rolb
mov
stos
pop
inc
arpl
xchg
icebp
jg
xor
in
add
xorl
imul
test
into
push
sbb
shll
adc
mov
pop
aad
cmpsl
mov
lahf
stos
or
or
dec
ds
and
dec
std
xchg
jo
es
cmpsl
mov
sti
sub
or
test
jno
sub
push
jns
and
sbb
dec
push
insl
es
xchg
xor
jae
fwait
in
and
lds
mov
mov
jne
mov
in
xchg
testl
mov
dec
mov
push
cmpsb
push
add
adc
dec
or
lcall
add
jo
cmp
cltd
out
sbb
insl
mov
or
xchg
ret
jo
push
decb
mov
inc
cmp
mov
push
mov
std
xchg
jnp
adc
in
out
dec
test
xchg
and
push
mov
pop
jbe
dec
ret
daa
es
sub
loop
andb
add
lods
xor
mov
sahf
cmp
sbb
popf
pop
clc
test
cli
rcl
outsl
cmp
adc
push
sbb
insb
add
cltd
dec
mov
add
or
pop
pop
incl
and
and
insl
adc
loope
adc
iret
add
inc
mov
and
jmp
mov
ss
jbe
jl
and
in
jo
push
inc
pop
pusha
and
jmp
adc
cmp
pop
mov
fldenv
dec
cld
or
rolb
inc
mov
mov
push
in
test
jecxz
sub
adc
pop
sbbl
xor
fwait
jl
jbe
mov
jne
pop
cltd
pop
ds
ret
insl
pop
lock
push
mov
pop
nop
data16
or
push
cwtl
cmc
lock
lret
mov
test
movsb
xchg
cmp
aam
addr16
jae
jge
jnp
cmc
shlb
negb
scas
xchg
jg
fsts
cmpsl
iret
inc
dec
pop
push
jp
push
lea
cmp
pop
pop
dec
inc
xchg
mov
ret
push
gs
push
in
mov
push
cmp
pop
xchg
jl
adc
into
ror
jmp
js
les
ret
adc
jno
insl
mov
sbb
shl
movsb
and
inc
hlt
dec
int3
mov
jnp
xchg
pop
insl
lea
sahf
lret
dec
shrb
movsb
jo
push
jnp
or
or
cmp
mov
loopne
fmul
test
mov
sbb
jl
pop
jle
sub
sub
push
repnz
xor
hlt
fsubrs
lods
mov
adc
scas
adc
inc
movsb
scas
or
inc
xchg
in
sarb
jge
out
adc
fsubs
cmp
jmp
jle
aas
insb
bnd
lcall
outsb
push
jns
push
repz
jno
aas
push
int3
push
movsb
rorb
cwtl
cmp
dec
lahf
sbb
xor
orb
sti
call
mov
mov
push
jecxz
cmc
xchg
cmpsl
jmp
test
xor
add
pop
xor
shl
and
mov
sarl
inc
dec
sbb
repnz
out
nop
lds
mov
and
mov
adc
sti
and
push
pop
mov
cmpsl
mov
stc
shrb
in
jge
inc
add
sbb
pusha
xor
inc
push
xchg
clc
shll
sub
in
mov
icebp
in
loopne
hlt
inc
adc
jge
or
adc
sbb
es
rcrb
movsl
mov
out
aad
dec
lahf
repnz
test
popf
divl
pop
cmp
insb
ds
lock
push
xchg
mov
fdivr
cmpsl
fiadds
xor
rcrl
out
pop
push
cmp
pushf
add
and
aaa
sub
sub
cmpsb
sbb
stos
js
shl
clc
in
loope
mov
and
mov
mov
les
js
lcall
sub
iret
punpckhdq
lret
dec
pop
jle
xor
adc
xor
inc
lea
push
sahf
dec
mov
int3
and
sub
stos
cmp
push
pop
test
mov
jg
in
scas
jmp
sbb
or
push
jl
fstpl
lds
mov
cmp
std
fidivrl
out
fisttpll
xchg
leave
inc
adc
lock
xor
loopne
pop
das
push
pop
inc
mov
setae
fsubrs
imul
lock
sti
sub
push
ljmp
cmp
xchg
jns
repz
sti
xchg
pop
mov
add
aas
ss
mov
les
test
test
adcl
in
inc
out
out
and
negl
flds
lods
fdiv
mov
pop
testl
stos
cmp
outsb
sbb
and
enter
mov
cli
daa
sbb
lahf
fidivrs
subb
iret
and
shrl
addr16
mov
or
pop
ja
adc
pop
add
mov
rorl
sub
mov
push
inc
fisubrl
mov
jnp
adc
repnz
pushf
and
ja
or
out
jle
or
push
dec
shll
pop
sub
mov
push
jne
and
int
xlat
sbb
daa
lds
adc
ret
or
xchg
sahf
jo
in
sbb
sub
mov
push
sbb
cmc
add
mov
data16
fmuls
into
adc
cwtl
sar
sub
xchg
lret
mov
push
jo
mov
jno
jge
test
push
pusha
xchg
daa
jmp
mov
je
xlat
push
push
pop
inc
sahf
lds
mov
ljmp
mov
jo
mov
jg
push
or
pop
or
cs
lods
int
ret
xchg
jp
loopne
mov
and
loop
ficompl
mov
cmp
fdivr
and
push
in
daa
cld
scas
pop
xor
xchg
sahf
out
xchg
sbb
nop
cmp
lahf
sahf
xor
mov
or
mov
pusha
adc
ds
loopne
and
jmp
xchg
mov
dec
lcall
push
outsb
pop
pop
pop
xor
mov
es
cmp
or
std
add
leave
add
push
xchg
fadd
fs
je
and
movsb
dec
xchg
lret
cmp
or
or
fdivrp
iret
fs
push
xchg
cmp
push
push
dec
ja
jl
mov
pop
lds
addr16
xor
shl
xor
add
mov
rcrb
out
loope
outsl
mov
sub
cmpsb
mov
adc
cld
shlb
loope
aad
mov
nop
push
add
xchg
dec
test
mov
mov
stos
sbb
loop
mov
clc
adc
cmp
cmp
pop
and
xor
mov
push
add
popa
rclb
jmp
fisttpll
cltd
cmp
pop
cltd
mov
stos
cmp
fbstp
lds
mov
xorl
fldenv
loope
cmc
push
inc
int
movsb
sti
inc
test
cli
sub
push
mov
push
filds
push
pushf
xlat
cs
jae
cld
cld
mov
testb
fdivp
jl
movsb
sub
aas
add
fwait
mov
inc
xchg
push
inc
dec
sub
push
addl
xchg
das
dec
mov
js
cmp
arpl
and
gs
jae
out
inc
inc
sub
sbb
int
jns
shll
pop
add
or
pop
js
push
sub
stos
mov
pop
shr
mov
ljmp
movsb
sbb
cmpsb
repnz
jo
inc
or
mov
loop
ret
fxch
mov
lock
push
ffree
in
cmpsl
inc
mov
popf
rorb
sub
adc
shl
ds
subl
neg
js
ja
adc
mov
pop
fs
inc
jle
mov
push
js
pop
xor
xchg
ljmp
push
shrb
push
dec
rol
test
mov
inc
mov
pop
fwait
out
sbb
adc
fistpll
xchg
out
add
add
ss
lret
popf
stc
mov
mov
cmpsb
xor
cmp
ficomps
or
pop
mov
lret
mov
mov
inc
pop
scas
push
adc
pusha
rsqrtps
mov
push
jns
mov
pop
insl
xor
iret
sbb
bound
add
fnstenv
fldenv
lds
jb
adc
pusha
inc
cmp
mov
jns
pop
xlat
sub
into
imul
push
or
cmpsl
sbb
cmpsb
shrb
adc
dec
aas
dec
andb
or
push
arpl
int3
dec
scas
mov
lret
lds
sub
push
fcoms
cltd
sti
test
adc
adc
and
sub
xor
adc
dec
inc
imul
adc
ret
or
dec
pmovmskb
out
push
xorb
pop
lea
sar
shlb
xchg
repnz
orb
cmp
cmp
jl
dec
adc
iret
xor
jnp
lret
sbb
dec
pushf
repz
lea
inc
xchg
cmpsb
aam
ret
outsb
adcb
inc
sub
imul
jbe
std
movsl
in
scas
loopne
pop
jbe
lahf
dec
movhps
lock
pop
out
pop
xor
xchg
cmc
jecxz
xorb
outsl
fldt
movsl
jne
or
js
mov
mov
xor
push
or
push
pusha
ret
push
pop
adc
out
xor
fstpl
loop
pusha
mov
lods
sahf
dec
jne
dec
ret
es
dec
mov
sahf
jmp
je
imul
stos
or
push
or
or
shlb
in
mov
add
nop
mov
loop
xchg
jl
adc
jnp
scas
mov
cmp
adc
jb
lock
add
gs
icebp
adc
or
xchg
ds
dec
rorl
xchg
push
mov
push
in
rcrl
jl
mov
xchg
fistpl
dec
aam
mov
inc
out
dec
cld
in
dec
xchg
push
and
dec
pop
sahf
dec
mov
es
jmp
and
shll
fisubs
in
scas
pop
leave
inc
jb
xchg
jno
mov
push
repnz
xchg
js
subl
rolb
xor
and
sub
cwtl
cmc
repnz
dec
dec
cmpsl
push
adc
and
xlat
adc
and
add
fcomps
rcll
movsb
hlt
stc
mov
scas
pop
cld
xchg
or
pop
inc
test
fwait
popa
insb
es
xchg
push
stos
cmpsb
or
cmp
pop
xlat
repz
cmpsl
fidivrs
enter
adcb
sbb
sub
sbb
mov
jb
cld
rolb
sbb
cwtl
ds
hlt
rcrb
inc
cmpb
clc
jbe
cmp
jne
cmpsl
jnp
add
lcall
shlb
fsubrp
jo
test
mov
rcrb
in
push
adc
sbb
dec
push
adc
sub
shll
int3
pop
mov
jno
lahf
int3
pop
jns
loop
mov
imul
test
sub
pop
xor
xor
push
movsb
lea
mov
adcl
push
pop
pop
dec
out
pop
insb
jno
fwait
or
cli
fwait
sub
popf
filds
mov
push
cmc
iret
cmp
push
ja
add
stos
jbe
jno
push
gs
loopne
int
idivl
jns
idivb
or
mov
pop
pop
inc
dec
mov
jmp
call
imulb
ja
sbb
xchg
out
int3
xchg
subl
jl
popf
xor
and
ds
lock
xchg
cmp
in
or
mov
pusha
daa
xchg
hlt
jge
dec
sbb
gs
push
repnz
icebp
mov
cmp
jmp
mov
adc
leave
leave
lods
inc
sbb
inc
dec
sbb
cmp
xchg
ds
sub
mull
push
test
enter
scas
pop
pop
mov
fisttps
mov
push
notl
loop
xor
in
clc
jb
sahf
shl
xchg
inc
stc
inc
mov
dec
stos
cs
inc
pop
push
es
mov
cmpsl
negb
mov
push
cmc
roll
scas
push
jb
lods
mov
fnsave
mov
cmpsl
bound
xchg
mov
test
xor
push
adc
push
iret
adc
mov
jne
jo
sbb
xor
mov
and
pop
dec
mov
xchg
mov
pop
ret
imul
fldl
cli
sti
inc
dec
ficoml
pop
cmp
fnstenv
mov
and
pushf
mov
add
cmp
sbb
lods
ret
addr16
jp
jne
arpl
and
stos
jbe
mov
sti
fdivrs
adc
or
xor
inc
and
inc
pop
cs
repz
lods
jae
icebp
pop
dec
pop
mov
aas
adc
and
mov
pusha
push
push
xor
notrack
ljmp
xchg
lods
xor
or
fidivs
pop
pop
scas
jb
add
xchg
mov
jmp
xchg
lret
gs
icebp
decl
sub
shll
stos
cmp
pop
je
xor
cmp
dec
sbb
and
xchg
mov
dec
xor
lret
or
adc
into
enter
mov
scas
mov
ds
sub
pop
test
cmp
and
into
loope
lahf
inc
into
fstpl
packssdw
je
in
inc
gs
dec
dec
nop
xor
dec
inc
mov
mov
bound
fadds
or
repz
push
in
mov
jge
enter
pop
xchg
adc
adc
fidivs
fildll
outsl
fnstcw
sub
inc
pop
dec
mov
or
imul
out
pushf
decl
movsb
in
in
add
mov
test
pusha
es
mov
cwtl
sbb
sub
push
mov
jp
andb
dec
lea
xchg
jp
mov
popf
inc
jae
mov
pop
dec
sub
repz
adc
in
or
imul
xchg
iret
sbb
pop
rclb
or
cmp
pop
pop
xor
xchg
adc
je
xchg
orb
movsl
in
mull
mov
cltd
shll
push
cmp
iret
push
push
mov
filds
hlt
mov
loopne
es
adc
xor
mov
popf
je
out
repnz
xchg
es
inc
sub
push
ret
jnp
jecxz
repz
mov
dec
int3
push
push
shl
push
pop
int3
cmpsb
xchg
xor
mov
aaa
loopne
mov
jge
test
aas
and
rol
or
mov
scas
and
aam
lds
pushf
out
repz
nop/reserved
in
xchg
ljmp
popa
adc
lahf
mov
cwtl
mov
sub
cmc
insl
jg
subb
fcoml
out
int
push
jno
adc
iret
dec
dec
stos
lret
pop
test
js
jle
movsl
lock
loopne
out
jp
xchg
lods
xor
pushf
add
and
sbb
js
push
cmp
pop
lcall
sub
cmp
ljmp
rcrb
insl
movsl
jb
aas
dec
jne
dec
add
add
hlt
push
push
sbb
cmp
lcall
jns
gs
scas
jp
xor
cld
or
fisubrl
cmp
sub
pop
xchg
push
into
mov
and
stc
sbb
pop
lret
add
or
jge
int3
arpl
mov
sub
mov
and
pop
popf
fcmovnbe
aam
out
sub
daa
pop
or
popf
inc
insl
ret
jle
ds
sahf
inc
push
hlt
jge
fcoml
or
xchg
addb
mov
adcb
pop
or
jae
jecxz
and
inc
movsb
je
pop
and
dec
inc
nop
ljmp
jo
stos
push
aad
inc
mov
aam
jo
cs
aas
cltd
lods
push
es
dec
rcr
push
cwtl
mov
mov
inc
and
lahf
inc
jne
adc
sub
imul
hlt
iret
push
cmp
mov
xchg
mov
add
clc
and
add
jle
loope
mov
ret
push
in
push
mov
push
cmp
ds
cmp
cmp
sbb
clc
or
rcl
jp
xchg
leave
fsubl
fimull
repz
scas
jns
mov
xchg
or
lret
sub
xor
push
adc
nop
or
aaa
mov
mov
jg
in
test
outsb
bound
shrl
or
inc
lret
je
pop
outsb
idivl
arpl
inc
outsl
pop
lret
push
test
jmp
pop
mov
leave
sbb
mov
sbbb
lret
push
in
subb
pushf
mov
xchg
jg
int
xchg
inc
icebp
aas
aas
sub
loop
test
dec
testb
cmpsl
movsl
inc
cmpsl
push
add
andb
adcl
ret
mov
divl
mov
sbb
mov
cmp
xchg
push
or
aad
push
loopne
and
pop
sub
push
hlt
outsb
addl
lahf
leave
repz
popf
fcomip
jae
cmpsb
loope
push
sbb
xchg
sub
adc
sub
jle
addb
jmp
dec
xor
aam
shl
into
or
movsl
and
test
and
xchg
add
in
incb
mov
push
les
mov
mov
dec
js
cmp
mov
addb
pop
test
sub
idivl
scas
pop
or
cli
fldenv
test
mov
xor
inc
icebp
jg
out
jns
lret
lcall
mov
es
pop
call
inc
push
mov
sbb
jb
popf
stos
fwait
sarb
mov
sbb
mov
add
dec
dec
imul
fisubrl
mov
add
pop
xor
sub
cwtl
scas
xchg
xor
filds
dec
mov
pop
cli
imul
xchg
leave
outsb
in
movb
add
aam
and
add
push
popa
mov
inc
push
movsl
inc
jp
sbb
insl
dec
push
pop
fistps
cmp
xlat
pop
sbb
scas
lea
scas
lods
roll
push
cmc
into
test
lock
mov
test
sbb
push
jnp
pop
cmp
cmpsb
sarb
jmp
mov
mov
adc
gs
xor
xor
mov
sbb
ss
in
cmp
mov
out
pop
push
int3
or
lahf
jo
jmp
xchg
icebp
jno
sbb
gs
inc
xorb
stos
call
adc
lahf
enter
dec
mov
clc
and
or
daa
dec
push
push
bound
adc
rcll
xchg
xchg
lea
mov
inc
pop
inc
mov
movsb
xchg
mov
xor
pop
mov
add
lods
rol
sub
popf
leave
cs
aad
sti
rcll
mov
lahf
xorl
aad
stos
sti
stos
pop
inc
ja
shlb
sub
fstps
xchg
xor
cmp
add
rclb
jp
adc
stos
repnz
mov
adc
ret
pusha
leave
lods
mov
popf
in
jb
mov
jecxz
mov
fbld
add
popf
repz
lods
sahf
jl
addr16
xor
lods
dec
leave
adc
mov
lret
bound
subl
inc
sub
test
lret
push
lock
stos
sub
shufps
mov
outsl
subb
ja
movsl
movsb
mov
inc
repz
adc
pop
xor
xchg
fstcw
add
mov
and
inc
pop
scas
jns
into
adc
or
jns
in
stos
push
mulb
jge
sbbb
jmp
pusha
lds
or
and
gs
or
mov
jmp
scas
lea
inc
adc
hlt
dec
vmread
jnp
in
iret
ret
cs
shlb
gs
ret
ja
ljmp
inc
stos
fnstsw
bound
std
iret
push
lock
lock
cmpsl
enter
dec
les
or
ljmp
leave
shll
sub
movsb
jno
icebp
jns
or
adc
and
lcall
mov
dec
xor
push
jecxz
sbb
sbb
add
sbb
lea
dec
daa
cmc
test
sahf
xchg
inc
inc
xchg
pop
inc
cmp
aaa
sbb
orb
popa
pop
lret
sub
xor
lock
mov
lods
arpl
inc
cli
negl
stos
rcrb
inc
lods
decl
rdmsr
inc
cmp
leave
hlt
pop
mov
xor
hlt
faddl
xchg
pop
loop
cmp
mov
xor
sub
jge
addb
cmp
xchg
dec
add
ja
jg
inc
inc
xor
sbb
clc
sti
std
gs
push
ss
pop
inc
sbb
mov
lods
fimuls
inc
mov
adc
fisubrl
push
imul
mov
cmp
cs
lcall
sahf
xchg
xchg
dec
popa
sub
lahf
sbb
mov
mov
inc
and
pop
cmpsb
pop
enter
sbbl
jmp
out
dec
icebp
rdmsr
jnp
mov
dec
xor
mov
push
and
mov
pop
out
leave
hlt
inc
or
addr16
rorb
movsb
add
test
sub
clc
mov
leave
cld
and
inc
aam
push
jns
push
arpl
lea
xor
push
inc
jg
aam
cmp
jp
ljmp
sar
fs
dec
popf
dec
iret
outsl
adc
es
repz
mov
imul
pop
pusha
jo
iret
stos
mov
fidivrl
iret
jb
outsl
popa
jae
ret
mov
daa
fildl
aaa
loope
xor
sub
xchg
inc
xor
out
jmp
or
xor
jns
pop
lret
jns
sub
push
into
sub
idivb
lea
test
imul
jnp
push
or
lds
mov
mov
add
jecxz
and
add
scas
jo
xor
mov
push
push
inc
out
sbb
sub
orb
mov
test
fiadds
loope
ss
mov
xchg
jmp
adc
cmpsb
arpl
jmp
dec
sbb
mov
iret
adc
outsb
lds
hlt
lcall
or
sub
add
xchg
imulb
lret
or
sbb
out
xor
and
or
mov
jp
xchg
or
add
push
xchg
pop
int3
lcall
daa
sub
leave
mov
out
jg
mov
test
and
dec
jmp
jne
fmuls
jle
and
push
negl
int3
movsl
testb
mov
aam
ds
inc
test
add
daa
nop
mov
fcompl
nop
dec
pop
popf
pop
idivb
loop
mov
inc
rcrb
and
push
push
shl
es
dec
out
hlt
data16
fdivrl
cmc
sbb
xor
dec
dec
jae
bound
add
into
or
in
sarb
int
xchg
cmp
ja
lahf
mov
adc
pop
popf
sti
xor
jge
add
pushf
sub
in
mov
mov
add
push
dec
sbb
nop
jnp
and
lcall
mov
pop
adc
pop
fisttpll
mov
jl
pop
or
and
xorl
loope
adc
xlat
movsb
inc
mov
jg
jbe
push
stos
fwait
sahf
leave
cmp
inc
push
cmp
xor
add
adc
test
lock
fwait
dec
mov
mov
push
scas
mulb
lds
xchg
or
fsts
sarb
ret
push
mov
pushf
enter
fs
mov
test
bound
int
jecxz
xchg
xchg
arpl
mov
cmpsb
xchg
pop
popf
lahf
jbe
xchg
jo
jne
jmp
inc
in
or
add
pop
dec
mov
mov
xchg
jnp
clc
nop
js
and
mov
adc
xor
adc
and
mov
adc
push
fldenv
adc
xchg
cmp
xchg
ja
arpl
jb
sbb
jo
jle
mov
data16
cmp
cmpsb
sbb
cmc
loop
out
dec
xchg
xchg
jnp
jecxz
dec
xchg
jl
and
hlt
loope
loopne
push
aam
test
out
fcompl
sbbl
out
adc
jecxz
rclb
cmp
xor
insb
cwtl
dec
cmc
lods
xor
dec
test
je
test
xor
outsb
insl
addr16
mov
push
mov
xor
negl
push
aaa
ss
imul
push
and
outsl
add
sub
mov
stc
in
jecxz
lcall
xchg
out
cs
andb
sub
sbb
test
ret
and
jae
xchg
inc
cmp
in
out
mov
movsl
rcll
rol
inc
xor
ds
mov
xlat
push
mov
push
out
mov
out
dec
arpl
inc
jecxz
cmpsl
mov
loope
push
in
mov
jbe
popa
add
imul
out
cmpb
xchg
lret
fldl
adcb
pop
fwait
jb
je
mov
pop
icebp
test
cli
mov
fisttpl
sbb
xchg
or
sub
imul
push
nop
inc
andb
dec
mov
jmp
pop
add
fwait
sbb
pop
sbb
or
mov
icebp
stos
mov
pop
ja
jmp
mov
jb
mov
not
dec
cs
push
jle
loopne
pop
outsb
outsb
repnz
lcall
ljmp
mov
xchg
addr16
mov
xor
out
cmpsb
insb
and
and
or
in
add
scas
lcall
push
imul
ljmp
push
sar
stos
sub
stos
fs
xchg
and
mov
flds
mov
ljmp
mull
mov
in
sbb
addr16
cmp
enter
dec
cwtl
aaa
ror
js
mov
fstps
cmp
mov
mov
adc
jne
add
jp
ret
inc
lahf
xor
fcompl
imul
out
stc
jbe
mov
int
xchg
jp
push
add
xchg
xor
xor
or
lret
xchg
cmpsl
sar
stc
push
lds
ret
adcl
mov
daa
xchg
cmp
cld
mov
int3
inc
adc
sbb
mov
inc
xor
push
push
loope
lcall
jbe
pop
enter
mov
sti
lds
sbbl
jbe
sub
lret
cmp
mov
cmp
lea
lock
mov
enter
ja
xlat
insl
and
dec
push
push
into
sbb
or
inc
mov
cmp
out
mov
or
cli
sbb
xchg
pusha
push
stos
push
push
mov
mov
xchg
jmp
fwait
jle
xchg
adcb
mov
popf
imul
jmp
dec
cmc
lret
add
push
int
mov
xchg
sub
hlt
xchg
mov
dec
das
in
jbe
push
jae
movsl
inc
mov
jne
sub
xchg
lahf
es
mov
data16
clc
out
test
loopne
mov
mov
in
cmpsb
fwait
nop
dec
sub
mov
shlb
mov
sahf
add
jo
push
ja
insl
pop
mov
es
or
add
pop
negl
xchg
pop
xor
ss
dec
shll
pop
imulb
testb
stos
lods
sbb
and
xor
dec
or
cmp
push
loopne
loope
insl
dec
lods
int
adc
pop
jno
mov
inc
ret
mov
cmc
adc
add
movsb
movsb
mov
ret
mov
ja
xlat
insl
mov
mov
add
push
dec
or
nop
insl
adc
inc
jg
lcall
sbb
lret
add
adc
jmp
repz
in
ret
bound
leave
jne
lds
leave
or
jbe
jle
adc
stc
push
ljmp
jo
jle
fidivrs
mov
xchg
in
ret
in
pop
pushf
jne
cmp
push
cmpsl
or
popa
je
ret
mov
and
imul
pop
push
xchg
sbb
push
incb
arpl
sahf
mov
inc
in
or
loopne
cmp
stos
mov
jge
or
mov
lds
xchg
inc
mov
jae
inc
jns
adc
scas
ja
mov
mov
call
into
xchg
in
cmpsl
sub
add
imul
push
mov
add
cltd
daa
sbb
aam
pusha
cmpsb
or
inc
xchg
mov
xorl
popf
popf
jg
stos
or
push
push
fbstp
cwtl
inc
mull
push
jnp
movsb
cltd
or
pop
rclb
xchg
aas
jecxz
cmpsb
fsts
jne
and
aam
pop
or
inc
sub
sub
sub
int
js
pusha
add
cmp
mov
inc
rcll
mov
mov
mov
or
adc
xor
xchg
inc
mov
sti
pop
pop
xorl
xchg
ljmp
aas
or
push
jno
xor
testl
inc
dec
or
adc
arpl
push
cmc
xor
mov
pushf
ja
cmpsl
mov
sub
push
test
insb
ret
push
ljmp
fldln2
fcmovnb
inc
aaa
dec
inc
cli
ret
jmp
fstp
popf
and
out
inc
pop
and
pop
sbb
shrb
in
inc
imul
daa
or
push
bound
in
xor
mov
stos
data16
js
xchg
in
or
test
loop
mov
xor
and
mov
fucomp
jmp
testl
cmp
push
ja
fdivrs
xchg
add
sub
xchg
push
inc
sti
outsb
pop
fisttps
out
mov
ljmp
cwtl
ds
daa
sbb
ljmp
xor
add
xlat
xor
jbe
xchg
mov
adc
xor
xchg
xchg
aam
inc
add
stos
aam
add
data16
mov
inc
jmp
ds
mov
dec
inc
add
pop
adcb
inc
adc
in
cmpsb
pop
or
adc
pop
or
mov
movsb
or
loop
jae
xchg
add
push
lock
and
std
cmp
in
inc
std
loop
in
and
xor
dec
and
push
scas
test
repz
xor
outsl
push
out
pusha
mov
adc
int
or
inc
or
xchg
mov
mov
jns
jge
jb
in
mov
fcmovu
adc
hlt
sub
xchg
push
ret
dec
adc
xchg
push
and
ror
jecxz
ljmp
push
xor
pop
adc
adc
out
inc
inc
in
stc
mov
fnstsw
stos
mov
lds
fldcw
mov
ljmp
movsb
mov
cld
js
std
into
insb
adc
scas
stc
mov
xchg
aad
lahf
inc
jp
and
bound
mov
push
or
mov
adc
adc
inc
ds
pop
sti
lret
push
loop
mov
dec
sbbb
int
es
pop
and
sahf
xor
imul
inc
mov
fwait
nop
xchg
dec
sbb
testb
fnsave
pop
pusha
mov
and
mov
push
dec
inc
ficomps
aam
or
pop
adc
fiadds
cmp
cs
leave
cwtl
lods
mov
add
fsts
xor
xchg
es
loop
and
add
jb
inc
push
push
jmp
repz
push
xor
gs
test
sbb
cmp
hlt
ret
cmp
bound
out
leave
sub
popf
test
mov
loop
lcall
bound
jle
je
jbe
sub
fstpt
ret
sbb
jbe
dec
dec
and
mov
mov
out
test
stos
sub
pop
cmc
add
pop
mov
jmp
push
cmp
mov
cmp
mov
xchg
cmp
out
cmp
mov
inc
aaa
add
jp
lods
or
lret
mov
mov
push
add
in
mov
es
mov
sti
incb
hlt
leave
loopne
repnz
jo
and
mov
and
dec
xchg
sar
push
mov
cmpb
push
out
pop
inc
fwait
hlt
lret
pushl
popf
inc
mov
xor
das
xor
cmp
cmp
aaa
ficompl
pop
pushf
xchg
adc
insb
pop
add
xor
in
insl
mov
in
mov
inc
jmp
in
inc
sub
test
fwait
push
add
cwtl
out
fs
pop
repz
popa
mov
or
xchg
movsb
fistl
pop
jbe
inc
inc
push
mov
cmpb
mov
addl
mov
xlat
lahf
sbb
outsl
popa
mov
test
shr
mov
dec
xchg
mov
hlt
fistpl
cmp
add
cli
addr16
adc
loope
mov
adc
fdivrl
adc
lahf
stc
xchg
inc
or
mov
push
mov
cmp
pop
fcompl
inc
es
test
fwait
push
test
loopne
jp
dec
popa
xchg
and
dec
daa
or
in
mov
data16
leave
insl
int
lds
mov
or
or
inc
cmp
and
loopne
ja
rorb
daa
call
psrlq
int3
aas
rorl
mov
cmpsl
jecxz
mov
daa
js
jl
fs
mov
lret
xor
inc
ljmp
inc
lcall
xchg
stc
add
test
xchg
nop
xchg
mov
fidivl
push
fmull
inc
fs
jbe
lahf
lcall
insl
adc
adc
inc
push
dec
scas
sbb
jno
push
test
inc
pop
not
aam
lods
cli
xchg
popa
mov
sti
sub
aam
sbb
pop
fistpl
adc
leave
ficomps
cmc
in
jg
pop
cmc
xchg
int3
push
rcll
arpl
mov
repnz
scas
outsl
repnz
and
push
subl
jmp
shl
push
insl
dec
mov
pop
andb
push
xor
sbb
pop
push
jb
jae
xchg
lcall
jmp
bound
fdivrl
jle
leave
sub
bound
adc
fisttps
adc
ss
into
orl
out
sub
shl
pop
clc
mov
push
cmp
pop
sbb
fldl
xchg
lret
sub
test
fmull
mov
scas
sub
int3
push
ret
and
iret
test
or
xlat
je
add
mov
sahf
jl
outsl
or
rcl
pushf
fsts
push
addr16
jle
cs
stc
or
nop
sub
push
stos
into
fxam
add
inc
mov
repz
out
or
cli
add
into
and
adc
lret
out
fsubr
sbb
pop
fdiv
mul
cmpsb
xchg
pushf
mov
jp
push
sub
inc
jl
sbb
out
repnz
xor
mov
push
and
mov
data16
xor
mov
cmpsb
inc
sbb
inc
inc
bnd
mov
loope
push
aas
dec
xor
pop
sbb
aas
loope
push
and
int3
push
test
insl
inc
rorb
popa
pop
stos
xor
adc
mov
mov
add
repnz
push
in
sub
test
dec
outsb
and
mov
sbb
sti
in
cli
inc
mov
ret
mov
ds
dec
jle
lret
stos
icebp
xchg
arpl
xor
pop
push
hlt
loop
std
ds
mov
lea
decb
fsubr
sti
jae
addr16
adc
mov
aaa
fdiv
aam
xchg
scas
mov
lret
pop
jecxz
loopne
test
sahf
cmp
aad
inc
loope
dec
scas
pop
jl
fnstcw
xor
cmp
ret
mov
lret
jecxz
mov
rcr
pop
mov
stos
cmpsb
jp
xchg
and
subb
stos
shlb
dec
dec
mov
inc
or
or
ret
inc
jbe,pt
dec
push
andb
les
sub
and
xor
jae
dec
push
shrb
or
in
ficomps
ljmp
jp
test
and
add
movsb
orl
fcoml
xor
lds
shl
pop
mov
inc
mov
dec
rolb
push
mov
lock
popf
pop
xor
dec
jno
loop
lock
jne
cmc
push
cmp
mov
jge
add
imul
sbb
testb
cld
and
xchg
inc
and
or
cmp
xchg
sub
pop
jl
push
push
jne
leave
pop
xchg
inc
rcll
out
pop
add
enter
mov
cmp
and
inc
cmp
dec
fistpl
mov
stos
sub
ja
icebp
inc
in
loope
hlt
mov
insb
inc
push
jge
sahf
pop
lock
lret
arpl
jns
imul
dec
popa
jns
mov
push
mov
sbb
rcrl
adc
jecxz
arpl
cmp
mov
push
mov
cmp
jno
mov
pop
jl
inc
cmpsl
or
adc
sbb
lret
xlat
sar
imul
mov
xchg
cs
out
int3
inc
stos
out
jbe
stos
xchg
stos
ret
fstpt
cwtl
lret
in
ljmp
xchg
or
mov
cmp
xchg
dec
pusha
mov
movsb
sti
gs
mov
ljmp
test
rorl
ljmp
ret
cmp
xchg
mov
cmp
adc
cmp
out
aad
dec
push
gs
fs
adc
add
sbb
pop
mov
clc
adc
movsl
lret
nop
lods
inc
cmp
adcl
ja
popf
dec
dec
out
sbb
mov
and
out
push
loop
add
sub
xchg
cmp
dec
pushf
sub
movsb
push
ljmp
adc
jnp
xchg
inc
or
adc
imul
mov
imul
nop
and
incl
out
inc
sbb
jbe
int3
int
mov
out
sbb
inc
push
aad
fsubrl
xchg
es
test
xchg
xor
repz
inc
sbb
stc
jo
lcall
and
sub
test
xor
lcall
pop
loope
testl
stos
out
outsl
add
test
cmp
inc
dec
ljmp
divb
ljmp
inc
mov
mov
hlt
les
jmp
mov
in
aas
mov
out
dec
sub
fisubrl
mov
cmpsl
cli
ljmp
iret
dec
dec
cltd
inc
cltd
mov
movsb
and
push
sbbl
push
scas
add
lahf
inc
or
lcall
shrb
sub
inc
divl
insl
lret
test
ja
push
mov
mov
movsl
mov
pop
push
pop
xchg
jno
in
fnstenv
sbb
or
cli
in
ljmp
pop
adc
jnp
and
gs
push
pop
sbb
sub
sub
jo
add
add
nop
pop
bound
movsl
add
stos
imul
or
add
faddl
in
das
mov
mov
shlb
mov
cmp
mov
daa
pop
sub
pop
ss
and
cld
xor
scas
push
rol
mov
insb
cmp
popa
sarb
hlt
gs
mov
fstpl
inc
cmpb
mov
into
shlb
js
sub
nop
shlb
mov
or
jb
out
xor
cmp
fwait
mov
lods
fidivl
xchg
lods
add
cmp
push
push
dec
jo
stos
adc
sarl
dec
push
inc
rcll
mov
leave
adc
cmp
push
cmc
push
out
cmc
mov
jg
aas
into
sub
dec
in
movsl
push
xor
jne
jo
aas
jb
mov
testb
adc
out
enter
or
push
leave
iret
xlat
nop
xor
stc
loope
ss
or
je
push
roll
push
and
push
dec
ljmp
jmp
mov
xchg
repnz
fldl
clc
lcall
xchg
xor
mov
in
xchg
je
dec
inc
lods
test
mov
cmp
add
xchg
es
push
cmpsl
stos
gs
lock
sbb
jl
out
add
mov
outsl
insb
mov
out
add
mov
xchg
pop
dec
icebp
fcomp
xor
scas
clc
pop
sar
jmp
push
out
inc
test
mov
cmp
dec
add
sbb
test
add
push
fcmovbe
sub
aaa
clc
cmp
imul
movsb
lahf
mov
cmpsl
sahf
adcl
bound
js
insl
jno
mov
cli
xor
sbb
in
stos
and
jno
fwait
xchg
jno
shlb
or
fistps
xchg
pushf
jb
jb
xor
icebp
inc
imull
mov
jge
xchg
aaa
inc
add
sub
sbb
andb
xchg
lea
push
cmp
xor
les
lcall
dec
lcall
mov
enter
shr
pop
enter
jp
inc
adc
cmpl
jg
cmp
test
fwait
sbb
jbe
pop
sti
lcall
mov
xor
and
fsubrl
ret
and
fistpll
xchg
bound
lods
bound
xchg
fsubr
fcmovnu
lret
sub
aad
mov
negl
push
add
push
into
pusha
and
mov
pusha
data16
test
mov
sti
movsl
inc
popa
fs
cld
push
sbb
sbbb
push
cmp
inc
enter
xchg
xchg
cwtl
jge
scas
dec
push
xchg
push
jle
cwtl
aad
out
mov
xor
and
cld
loope
push
push
jae
mov
hlt
stos
int3
jns
lret
std
sub
negb
mov
ss
imul
xchg
adc
sbb
push
cmp
dec
paddsb
es
loope
and
sub
xchg
lea
xor
bound
aam
inc
dec
cmpsb
fcmovnu
jp
or
dec
loop
stos
dec
loopne
out
lock
jno
out
or
jns
roll
mov
popf
movsb
out
mov
push
sti
mov
mov
add
fwait
scas
icebp
sub
clc
nop
loopne
ja
arpl
clc
test
mov
jno
mov
xor
cli
add
add
xor
mov
xor
inc
push
loope
and
stos
xchg
jecxz
mov
push
lret
sub
sub
dec
std
pop
sbb
loopne
ret
ljmp
lock
jbe
divl
add
pop
rcrl
xor
pop
test
add
cmp
daa
daa
adc
js
lods
fdivrs
fcompl
xor
clc
adc
scas
popa
or
xchg
cmp
int3
outsl
addr16
popl
jno
inc
and
sub
dec
fistps
es
insl
mov
cmpsb
mov
sbbb
or
jne
push
scas
sbb
sub
rorl
ljmp
test
pusha
cld
cmp
fildll
loope
test
fsts
mov
mov
and
stos
pop
xchg
dec
loopne
test
test
mov
sub
ja
mov
ret
mov
test
xchg
mov
in
das
mov
cmp
mov
cmp
hlt
addr16
orb
mulb
or
inc
jns
das
push
mov
push
aam
mov
mov
dec
lods
ret
dec
xchg
xor
mov
sub
adc
repz
lret
fstps
inc
xchg
jmp
add
and
sbb
mov
mov
mov
jle
addl
ds
out
adc
stos
lods
add
pusha
je
popf
int3
mov
jp
xchg
rcr
mov
dec
imul
ljmp
inc
lahf
xchg
inc
scas
adc
add
nop
insl
and
mov
sub
or
adc
in
mov
mov
xchg
inc
lahf
hlt
pop
cmpsb
mov
push
out
ljmp
and
call
xor
test
cmp
push
loopne
lock
leave
or
mov
cmc
push
adc
rorb
and
and
mov
inc
dec
cmp
push
xor
inc
push
fisttpl
jo
push
out
in
jne
cmp
subl
fucom
xchg
inc
mov
jp
or
pop
ja
xchg
pusha
pushf
sub
jns
daa
push
lea
add
jle
or
cmpsb
mov
movsl
xchg
popf
cmpsl
fnsave
in
int
cmpsl
stc
inc
inc
rol
add
add
ficoms
mov
mov
leave
jo
ficompl
inc
repnz
ret
sub
loop
js
mov
adcl
xchg
es
push
int3
adc
or
push
adc
loope
add
fsubs
daa
cmc
shll
dec
lcall
nop
jp
pminub
inc
adc
inc
sahf
dec
push
push
xor
arpl
cltd
es
sbb
mov
or
lret
les
fsubrl
call
mov
sub
jge
in
sbbb
mov
mov
cmp
aam
adc
pop
gs
add
xchg
pop
loop
divl
fldcw
mov
insl
adc
jns
in
es
les
shl
das
stos
imul
dec
fdiv
lock
shlb
out
insb
jno
mov
clc
push
rep
repz
iret
loope
sub
shll
call
aam
mov
push
lcall
mov
lock
aaa
scas
ret
aam
or
mov
dec
wrmsr
jecxz
adc
shll
mov
cli
loop
in
push
int3
cltd
mov
cmp
dec
mov
cmpsb
test
flds
xorb
push
enter
xor
dec
rol
aad
dec
sbb
jbe
fdivrs
xor
mov
mov
fbstp
cs
imul
xchg
insl
adc
sub
in
test
shl
rclb
push
lcall
dec
lahf
sub
push
and
rcrl
ljmp
lea
movsb
cmp
cmpb
fidivrl
insb
fstp
adc
mov
shl
gs
les
cmc
push
stos
gs
mov
fdivs
mov
test
ljmp
and
outsl
adc
rol
pop
inc
loop
or
sub
or
lods
xor
xchg
jge
movsb
int
xor
or
and
addl
mov
and
ficomps
push
push
or
add
pop
imul
pop
xchg
add
fs
test
push
in
jo
push
mov
or
rcl
subl
loopne
in
adc
mov
mov
jae
cmp
dec
movsl
mov
sub
shll
addb
pop
inc
clc
lea
hlt
lea
push
dec
es
mov
in
and
add
sub
dec
jne
das
and
mov
arpl
sbb
hlt
mov
sbb
mov
push
lock
jecxz
jns
pop
dec
imul
jno
xchg
mov
xor
mov
cltd
movsb
inc
pop
sub
push
dec
cmp
pop
fiadds
fistps
ret
xchg
call
inc
jp
mov
pusha
push
sbbl
xor
test
mov
bound
xor
inc
lret
xor
aam
in
sub
das
stos
imul
or
roll
out
jno
mov
pop
jecxz
dec
inc
scas
into
or
cmc
jo
mov
cmp
mov
or
stos
cwtl
push
lret
jne
mov
lock
sub
cmpsl
test
aam
imul
sub
or
mov
int
mov
add
popa
mov
ljmp
mov
in
add
inc
ret
push
cmp
test
push
insl
scas
insl
loopne
xchg
sbb
repz
mov
addr16
fdivrp
jb
decb
sbb
mov
fwait
clc
push
sub
add
dec
insb
pop
dec
test
push
fldcw
daa
mov
dec
pop
mov
and
mov
hlt
push
jmp
stos
mov
fnstsw
push
add
out
xlat
incb
loope
and
scas
pop
sub
sbb
inc
cld
fiadds
addr16
test
and
sahf
mov
pop
dec
add
xlat
fnstsw
sbb
xchg
xor
dec
scas
pop
les
cmp
cltd
adcb
mov
and
ds
adc
loop
sbb
dec
ljmp
inc
xchg
pop
outsl
incl
mov
jg
loope
aad
lock
fisubs
ffreep
mov
mov
cli
insb
xor
sbb
inc
test
int3
jmp
stos
push
pop
hlt
or
into
sahf
dec
into
imul
cwtl
jge
pop
mov
xchg
dec
addl
into
push
mov
fnsave
pop
das
pop
pop
in
imul
xor
mov
fildll
sbb
inc
fimull
mov
push
xchg
sub
push
xchg
aaa
dec
inc
ds
jp
fcomps
add
loope
ja
nop
pop
jmp
dec
loopne
shrl
cwtl
inc
sti
xor
add
sub
push
push
imul
push
iret
test
shl
xchg
lcall
shrb
lea
sbb
mov
and
jg
pop
out
jbe
hlt
or
imul
rclb
push
pop
nop
repz
in
mov
cmp
mov
sub
xor
inc
jns
lahf
out
cwtl
cmp
jns
ds
pushf
popf
pop
adc
push
or
int
arpl
push
adc
add
adc
mov
cmp
ljmp
mov
stc
pop
xchg
xlat
ja
neg
cld
jmp
and
add
icebp
scas
push
into
pop
ret
push
in
xchg
mov
mov
gs
add
sub
stos
sub
ret
sbb
inc
push
inc
outsl
pop
mov
add
or
adc
insb
popa
mov
fwait
je
jbe
push
fidivrl
loopne
mov
stos
cmp
and
xlat
test
stos
mov
stos
and
and
out
lds
arpl
dec
pop
adc
ljmp
fstpl
fldcw
adc
lahf
sar
test
mov
fwait
sub
inc
ds
dec
push
or
push
repz
pop
mov
pusha
testl
xchg
jno
push
in
cmpsb
popa
dec
frstor
dec
mov
out
add
cli
inc
pusha
add
imul
mov
adc
or
insb
arpl
addr16
cld
std
push
js
sbb
sub
repz
mov
scas
xchg
sub
icebp
into
push
test
mov
cmp
fnstenv
lea
test
mov
or
mov
cmp
test
sub
leave
fldcw
les
jbe
or
fs
popa
popa
jmp
xchg
xchg
ja
daa
xchg
jno
mov
movsb
pusha
xchg
lahf
mov
fimull
jle
arpl
pop
or
out
ret
push
mov
and
inc
sahf
shl
sub
dec
jnp
mov
cmovle
aam
test
outsl
xchg
lahf
daa
popl
mov
cmp
sub
mov
fdiv
mov
arpl
jecxz
aas
std
popl
adc
cmp
scas
jnp
jo,pn
jno
mov
in
pop
sub
outsl
outsb
and
mov
jl
jb
stos
cltd
mov
ljmp
mov
mov
inc
fwait
push
repz
xchg
mov
int
jno
mov
jg
repnz
fists
rorl
lahf
sbb
add
les
test
data16
vxorps
pop
sti
lock
nop
in
or
andb
xchg
loopne
xchg
add
in
or
loop
nop
mov
mov
sarb
inc
mull
ret
icebp
cmp
xor
pushf
jb
pop
mov
sub
paddd
sti
xchg
dec
mov
or
stc
sbb
sub
insl
stos
mov
out
dec
push
jg
push
cmp
jg
mov
mov
ffreep
cwtl
push
into
dec
loope
sbb
notl
adc
mov
stos
mov
push
scas
je
test
test
mov
cmp
jb
test
orb
inc
cmc
mov
jae
mov
sbb
add
popf
cli
add
cmp
xchg
jnp
out
jne
mov
sub
sub
cmp
call
pop
push
lods
jae
mov
addb
ljmp
rcrb
xor
xchg
arpl
sbb
loope
iret
cli
pop
sbb
pushf
into
sub
sbb
mov
jp
pop
sub
fnstsw
ret
jle
push
xor
mov
inc
jo
icebp
dec
sub
cmp
pop
addl
adc
repz
jmp
sti
repnz
imul
adc
fmul
mov
xchg
in
fisttpll
outsb
cmp
dec
cltd
ret
scas
xchg
push
je
xchg
arpl
or
nop
sbb
jmp
insl
mov
rcrl
outsb
xor
push
ret
jg
pop
jnp
movsl
rorl
int
or
cmp
pop
ljmp
xor
test
std
je
xor
pop
scas
lahf
es
pop
outsb
jg
fisttpl
or
movsb
lret
mov
or
adc
xor
lret
cwtl
add
sub
iret
out
pop
fdivl
push
sub
mov
cmp
mov
pop
scas
add
mov
jno
aam
in
xchg
sbb
and
xchg
cli
dec
lret
mov
add
lret
cwtl
ljmp
int
xor
sbb
iret
ret
jle
xor
mov
inc
leave
jl
dec
je,pt
add
add
and
or
sbb
call
dec
pop
mov
cli
movsl
sahf
inc
lcall
inc
dec
sahf
aas
sub
pop
dec
adc
xorl
adc
shr
inc
imul
test
lea
es
enter
jge
aaa
cmp
adc
push
int
pop
ja
jb
faddl
pop
or
scas
xchg
sbb
pop
mov
inc
jnp
adc
ss
jmp
sahf
je
xchg
sbb
sbb
xor
subl
mov
lds
push
or
mov
out
adc
adc
mov
scas
scas
cmc
jns
into
mov
scas
mov
dec
or
dec
ss
dec
aam
mov
outsb
mov
jb
jno
push
cld
rcrl
sub
jno
push
push
stc
push
pop
and
and
xorb
notl
xchg
dec
xor
lahf
sub
xor
fcompl
push
pop
out
mov
sub
cmpb
mov
enter
jnp
out
aam
add
xor
sub
dec
aas
dec
inc
imul
push
xor
and
testl
std
loopne
and
cmp
loopne
inc
popf
xor
cmp
adc
mov
mov
or
inc
imul
dec
imulb
inc
push
jp
adc
addr16
leave
dec
adc
push
push
call
movsl
sbb
bnd
and
mov
movsb
lret
sub
fs
jg
lock
sbb
jp
inc
inc
imul
dec
mov
lcall
lret
add
or
inc
lods
or
mov
je
mov
mov
ffree
push
and
inc
and
inc
sub
xlat
xchg
aam
dec
inc
in
inc
enter
xor
popa
jb
cld
addr16
bound
lea
clc
and
dec
push
xchg
mov
mov
jmp
rcrw
mov
jne
insl
and
mov
push
rol
xchg
iret
testl
and
mov
xchg
imul
imul
and
add
xlat
icebp
in
jns
cmpsb
mov
add
dec
sbb
popa
mov
hlt
mov
test
in
addr16
in
adc
inc
insb
mov
aas
and
push
test
mov
jmp
add
push
imul
lret
test
push
decl
inc
fisttpl
cmpsb
scas
loopne
sub
sub
lods
ljmp
mov
push
inc
adc
and
insl
je
adc
outsl
addr16
lods
cli
mov
mov
cltd
sbb
add
mov
jp
call
ss
movsl
pop
in
mov
push
ds
call
into
inc
ja
push
mov
mov
push
xor
imul
pop
xchg
or
mov
dec
and
push
sti
andb
xor
push
filds
or
mov
push
hlt
pop
jecxz
push
je
mov
jmp
xor
lock
lock
bound
xchg
in
jns
or
es
and
pop
dec
adc
pop
jae
into
inc
mov
sbb
jmp
daa
sbb
inc
sub
aaa
scas
rorb
adc
mov
sbb
sbb
fmulp
push
and
negl
repnz
push
nop
lods
fists
rcl
popa
test
push
btr
sbb
add
or
testb
sahf
ja
ljmp
call
ds
bound
in
mov
xchg
inc
adc
xchg
sub
outsb
jns
mov
ds
jne
push
sar
lcall
data16
adc
xor
pop
mov
aaa
fbld
int3
rclb
stos
jae
sub
aas
loop
mov
add
out
and
or
adc
xor
jecxz
inc
sbb
mov
mov
int
mov
loopne
mov
fdivrs
jl
add
push
out
aaa
inc
inc
aas
inc
and
imul
lret
xchg
fimull
fisubs
xor
std
sub
add
jo
add
mov
movsl
js
imul
ss
jle
add
mov
pushf
inc
mov
imulb
and
enter
aad
aas
cmp
cmpsb
or
fwait
or
int
fwait
inc
ja
ljmp
mov
inc
mov
mov
jmp
cmpsl
aam
inc
dec
and
adc
fdivl
jge
push
xor
sahf
cmp
cli
loope
sarb
fistpll
std
les
repnz
and
mov
pusha
sbb
mov
ret
nop
cmpsb
dec
push
add
push
out
addb
lods
hlt
stos
mov
dec
aaa
mov
mov
fstl
ja
or
lret
int3
sbb
jne
adc
enter
pop
dec
movsl
mov
pop
cli
jl
push
pop
or
pop
sub
loopne
xor
mov
jmp
jno
int
sbb
lahf
push
lods
sarb
sub
lret
fs
push
add
jne
shrl
aam
cmp
daa
and
sbb
fstpl
lods
sbbl
fisubs
or
insl
sub
push
js
out
ret
lahf
inc
outsl
hlt
and
sub
push
ds
push
mov
inc
dec
aas
push
sbb
rcll
pushf
push
jb
int
xor
mov
lret
jle
sbb
adc
sbb
stos
cmpsb
insb
inc
popa
sub
and
cmp
pop
xchg
in
mov
icebp
in
loope
test
repnz
jmp
lock
jne
int
lret
mov
pop
inc
lods
ja
mov
loopne
mov
or
mov
outsl
aas
stos
pop
fistl
mov
fildl
xchg
jl
or
jno
fcomps
mov
xlat
loopne
push
shll
mov
stc
or
pop
aad
sti
stos
imull
imul
outsb
mov
push
repz
sahf
std
stc
imul
dec
popa
ja
mov
push
xlat
adcl
cmp
rorl
ret
pop
pop
loope
inc
mov
jmp
popa
sub
stos
and
ret
push
jecxz
or
in
jnp
call
dec
int
sbb
and
cmp
xchg
in
out
cmp
push
mov
aaa
push
xchg
out
adcb
data16
sar
out
gs
stc
xorb
adc
in
sbb
loop
inc
fisubrs
mov
nop
movsb
fldl
dec
sbb
fnstcw
mov
cmpsb
inc
test
or
stos
push
or
sub
nop
aam
xlat
sarl
rorb
xor
xchg
lret
inc
test
lcall
dec
test
in
sub
xor
mov
mov
aas
lods
inc
xlat
scas
insb
xchg
mov
mov
push
outsb
push
pushf
sbb
ret
pop
ret
push
gs
mov
ss
stc
push
sbb
cmp
inc
cs
loope
mov
dec
pop
mov
jmp
imul
dec
mov
xor
xchg
adc
xchg
daa
mov
xor
add
bswap
out
jno
mov
lret
mov
loopne
in
in
mov
inc
xchg
jg
xchg
push
ror
push
icebp
add
ljmp
sub
cmpsb
movsb
sti
push
cli
sti
dec
ljmp
xor
ss
jb
sub
cmpsb
dec
mov
movsb
aam
mov
es
rcrb
mov
mov
mov
and
jg
cmp
fwait
in
popf
cmc
mov
nop
cli
add
sub
xchg
push
sub
xchg
or
pop
aaa
mov
xor
mov
frstpm(287
sbb
lret
das
add
xor
in
aad
pusha
push
add
into
popf
leave
movsb
jge
lock
or
inc
mov
pop
nop
aam
cmp
leave
ret
loope
push
rorl
pushf
cmp
int3
bound
jae
lock
pop
add
push
xchg
xchg
mov
pop
mov
ljmp
cmc
in
push
jae
loop
pop
xor
cmp
cmp
pop
cwtl
xchg
lret
in
scas
ds
rolb
pop
cmp
je
xor
incb
dec
popf
icebp
fcompl
leave
cmp
adc
lret
outsl
cmpsl
push
sub
adc
shrl
mov
dec
ret
lock
addb
mov
push
dec
andb
mov
adc
adc
jae
inc
mov
imul
xor
push
dec
fwait
and
aam
pop
jmp
aas
sbb
mov
adcl
inc
mov
out
pop
pop
rolb
insb
out
std
cmpsb
or
add
test
mov
ljmp
lret
jmp
adc
lret
sarl
lret
shr
jno
in
adc
int3
cmc
pop
jb
iret
je
or
js
mov
push
lcall
cmpsb
push
ret
mov
movsb
and
adc
sub
cmc
aas
ds
cld
std
sbb
insb
sub
aas
jg
jb
sub
ja
jo
push
movsb
mov
imul
outsl
arpl
jmp
xchg
add
lret
test
lea
pop
inc
or
test
call
insb
rcrl
incl
jns
xadd
sbb
out
out
in
stos
mov
mov
xor
adcb
push
dec
enter
in
and
fisubrl
jecxz
movsl
xor
jg
xchg
outsl
or
mov
fistpl
cltd
iret
push
or
xor
inc
or
sbb
add
js
mov
or
cmpsl
ja
les
xor
adc
sbb
xchg
jne
fcompp
jae
xor
sub
leave
lds
mov
stc
inc
pushf
mov
and
aas
push
and
out
test
xchg
loopne
loope
mov
pop
jne
outsl
jb
and
sub
leave
jmp
aam
pop
inc
and
pop
pusha
pop
out
dec
js
mov
clc
cmpsb
mov
xor
data16
testl
in
mov
lcall
lods
and
mov
mov
dec
mov
sbb
movsl
xor
mov
imul
add
insb
jnp
popf
xchg
xor
mov
jmp
into
fnstcw
push
int3
fsts
sbb
xchg
fsubl
pop
and
xchg
outsb
mov
or
mov
out
lods
ret
fldcw
mov
inc
loopne
push
int
sbbl
js
add
adc
das
sbb
aas
or
mov
pusha
cli
inc
and
cmp
pushf
leave
dec
loop
xchg
insl
out
sarl
mov
bound
outsl
mov
mov
or
sub
hlt
push
fidivs
cwtl
mov
test
in
aaa
sarb
fsubl
fdivs
sub
in
ljmp
xchg
dec
xor
inc
enter
and
push
iret
imul
pop
and
adc
jne
sti
pop
daa
jne
outsl
stc
in
fld
decl
jns
sub
or
sti
inc
mov
inc
jge
int3
test
xchg
aam
sub
adc
rcrl
or
pushf
rcr
fwait
mov
ja
pop
popa
mov
cmc
out
outsb
mov
xchg
clc
test
stos
dec
dec
in
push
cmc
mov
cld
popa
jmp
pusha
in
sbb
insb
mov
pusha
jb
mov
into
push
jl
subb
dec
xlat
xchg
sbb
jno
xchg
je
mov
inc
aam
sbb
mov
jnp
outsl
shl
mov
mov
push
dec
lods
lock
sti
fwait
and
lcall
jp
lods
jl
dec
adc
push
or
out
pop
dec
and
sti
pop
add
adc
mov
xchg
scas
popf
xor
mov
mov
ja
ret
cmpsb
add
movsb
inc
icebp
movsl
push
enter
xchg
mov
xor
sub
fwait
movsb
loopne
stos
adc
daa
das
test
mov
mov
xor
sbb
gs
outsb
dec
sub
stos
pop
mov
cmp
faddp
call
xchg
pop
adc
sahf
cmp
xchg
sbb
push
mov
and
sar
sbb
aas
inc
mov
xchg
repz
mov
out
xchg
or
and
or
test
pop
xchg
mov
mov
pop
cwtl
pop
xchg
xchg
mov
cmpsb
sbb
pop
sbb
sbb
cmp
stc
push
cmp
rcl
jmp
mov
pop
xor
lahf
xlat
or
jno
jo
xchg
dec
es
sbb
lahf
je
xchg
push
adc
out
movsl
xchg
fisubrl
and
stc
sub
pop
adcl
inc
mov
pop
cmp
loope
fimuls
dec
mov
mov
cltd
cmp
ja
pop
inc
lret
mov
mov
shl
test
int3
stos
popa
loopne
test
mov
stc
daa
pop
les
add
push
pop
iret
and
in
ret
je
test
cmpsl
or
push
pop
stos
xor
mov
adc
push
xor
stos
xor
in
adc
lods
imul
ret
dec
xor
adc
dec
imull
pop
insl
jge
cs
testb
adc
push
mov
aad
movsl
test
jg
sbb
fdivr
xor
in
push
or
scas
lret
mov
jae
push
and
inc
xchg
popa
push
jbe
loopne
dec
popa
test
add
adc
inc
xor
arpl
cmc
lods
ja
hlt
jl
arpl
jo
fildll
cmpl
stc
mov
xchg
sub
imulb
mov
cli
dec
jp
add
movsl
mov
jmp
add
call
jo
gs
dec
push
sub
test
lods
jg
and
in
cli
mov
popa
push
shlb
notb
in
adc
out
inc
sub
addr16
stos
and
out
pushf
and
ljmp
add
and
add
fbld
mov
loop
mov
mov
mov
mov
xorl
insl
add
sub
dec
xchg
dec
push
inc
mov
jae
cmp
sti
cmp
stos
sub
movsl
push
add
daa
mov
or
rcrl
sar
shll
pushf
push
jbe
mov
mov
sbb
mov
in
lods
xchg
sub
adcl
fisubrl
stos
mov
push
jge
xor
sbb
inc
stos
cmpsl
out
dec
ss
dec
lret
stos
cmpsb
call
insl
int3
dec
cwtl
arpl
psubq
js
add
add
pop
call
sbb
sub
push
das
pop
jecxz
xchg
cmpsb
leave
jne
int
addr16
pop
mov
jge
popf
push
mov
xchg
push
dec
mov
test
mov
mov
shll
push
pop
movsl
mov
ds
and
xor
pop
or
or
jb
ret
sahf
dec
and
ljmp
or
cmpsb
into
cs
mov
push
cwtl
or
stos
dec
dec
add
repnz
lcall
xlat
inc
sub
dec
push
icebp
sbb
mov
ja
mov
js
lods
loope
pusha
jecxz
hlt
pop
mov
sub
pushf
or
mov
test
scas
mov
push
aad
jge
imul
push
mov
outsb
retw
test
push
cmc
push
and
dec
gs
pop
inc
mov
jbe
test
call
jmp
test
imul
pushf
xchg
bound
repz
or
wbinvd
cmpsb
orb
dec
stos
popa
fsubl
adc
sbb
int3
pop
sbb
or
out
jns
inc
and
mov
rclb
mov
jno
inc
xchg
aas
jmp
inc
pop
xchg
mov
icebp
test
sbb
outsb
push
mov
xchg
gs
call
xchg
pop
cmc
lret
xor
imul
sbbb
push
test
scas
insb
mov
jae
push
push
xchg
dec
xchg
mov
inc
test
mov
psrad
pushf
jo
loop
jo
popf
and
mov
repz
dec
sub
ja
daa
ljmp
test
adc
add
ljmp
in
leave
leave
imul
pop
xchg
repnz
push
xor
insb
pop
hlt
xchg
out
ja
mov
xor
mov
aaa
lret
add
xor
dec
pop
sub
and
add
jae
subl
in
hlt
push
clc
push
popa
adc
aaa
ret
inc
popa
fisttpl
xchg
loope
pop
imul
sbb
rcrb
mov
jae
xor
bound
in
add
jg
rorb
ss
mov
imul
sbb
jl
mov
dec
push
addb
clc
pop
nop
mov
loopne
arpl
icebp
mov
int
jne
popf
sbbl
jecxz
daa
in
jne
jp
jo
nop
push
add
xchg
fcoms
sub
ja
jae
pop
push
cmp
fcmovb
repnz
andl
push
ret
pop
mov
sahf
or
sub
sub
lcall
xor
aad
or
add
test
and
sbb
rolb
scas
pop
jno
adc
jne
push
retw
add
clc
inc
jae
cmp
data16
insl
fdivs
add
pop
add
hlt
push
and
dec
xchg
xorl
mov
cli
xchg
negl
rorb
cmp
hlt
rorl
das
je
outsl
stos
mov
mov
call
shl
inc
movsl
sbb
ja
xor
sbb
xchg
mov
mov
loopne
sub
pop
xchg
dec
cmp
ficoms
cwtl
inc
imul
xchg
rclb
inc
add
bound
inc
pop
add
fcomip
adc
xchg
mov
xor
jbe
nop
nop
and
in
cmpl
mov
and
xchg
rcll
out
push
mov
xor
call
outsl
sahf
jns
xor
mov
movsb
imul
and
faddl
xchg
aam
mov
inc
jle
dec
adc
pop
idivb
icebp
and
aad
cld
xor
mov
iret
add
jb
aas
jo
cmp
push
test
inc
cmp
dec
mov
pop
movsl
ja
out
inc
test
cs
sarb
or
sbb
scas
cli
sbb
push
add
out
insl
test
test
cmp
lea
dec
mov
fstpt
adc
insb
sub
jp
loop
jbe
jl
data16
xor
imul
adc
pop
or
clc
add
cltd
sub
push
or
dec
test
dec
push
outsl
xchg
sarl
arpl
fidivs
lea
add
cmp
adc
lahf
data16
icebp
sub
inc
lods
inc
adc
sub
out
rcr
imul
arpl
pusha
fldenv
lods
shll
in
mov
jecxz
lock
sbb
add
sbb
or
std
jbe
push
mov
adc
pop
movsb
mov
repnz
test
lea
bound
cmpsb
stos
in
and
xchg
sarb
fcoms
loope
sub
pop
es
sahf
mov
out
cmp
lret
mov
adc
scas
pushf
jo
jle
ja
mov
popa
pop
in
mov
xlat
xor
sub
xor
test
mov
fcmovbe
dec
jl
fildll
sub
dec
insl
sub
ds
popa
jecxz
aas
movb
inc
dec
hlt
inc
pusha
testb
add
sti
dec
dec
loopne
test
inc
sub
xchg
loop
push
mov
sahf
mov
insb
jp
shll
mov
repnz
and
sbb
aaa
into
or
mov
jb
cmp
adcb
lds
add
in
pop
loop
in
jmp
dec
add
cmp
jo
mov
ds
xor
fsubrs
pop
rorl
mov
out
cli
push
gs
xchg
cmp
inc
cwtl
add
adc
and
nop
stos
push
or
iret
imulb
pop
mov
adc
mov
stos
xor
sbb
ljmp
cmp
dec
sbb
or
mov
rclb
addr16
add
mov
and
add
mov
mov
adc
xor
scas
in
movl
cli
dec
mov
aad
test
pop
and
out
mov
test
jnp
xlat
jne
pop
mov
andl
push
aad
pmuludq
inc
jae
movsw
jp
pop
jnp
std
es
and
xor
vmwrite
sti
xchg
fidivl
mov
fwait
and
addb
cwtl
or
sub
inc
movsl
jmp
dec
in
outsl
cltd
mov
stos
push
inc
ss
adc
pushf
mov
lcall
adc
movl
fisubrl
outsl
or
pop
test
xor
ja
cmp
pushf
cmp
gs
cld
and
mov
sarl
mov
mov
sub
jl
or
and
lods
cmp
daa
mov
adc
jge
jbe
adc
cmp
pop
pop
leave
test
ljmp
int3
mov
add
mov
cmpsb
push
mov
aas
nop
fdivl
cld
mov
and
sbb
pop
mov
movsl
fnstcw
mov
subb
or
mov
scas
xchg
lds
std
das
lea
sarb
and
out
sbb
nop
cmp
add
pop
lods
mov
push
and
subl
push
lods
or
popa
mov
loop
cwtl
inc
or
xor
inc
mov
nop
push
sub
rorl
and
cmpsl
mov
mov
add
or
fiaddl
test
dec
dec
pop
gs
mov
lods
loope
pop
jg
cmp
push
insl
lahf
gs
daa
lahf
or
in
loopne
sbb
add
fnsave
nop
outsb
scas
cs
fstl
popa
ljmp
cmpsl
pop
mov
ja
bound
xchg
adc
push
lahf
and
out
or
adc
push
cmp
adc
mov
mov
and
insb
cmpsb
loop
push
jecxz
xor
jl
or
pop
daa
sbb
dec
jo
or
dec
pop
dec
adc
cmp
jb
mov
scas
adc
shll
lret
mov
gs
xchg
lods
sub
fists
push
les
ss
adc
mov
insl
fdivrp
ret
cmpsb
push
loope
cmp
and
jnp
pop
xchg
and
mov
sub
jle
fld1
push
push
ficomps
lcall
jbe
xor
jmp
shll
addr16
arpl
filds
mov
xchg
dec
cmp
adcb
sahf
inc
pop
in
pusha
inc
popa
mov
add
inc
stc
leave
mov
pop
hlt
nop
inc
jp
cmpsb
pop
dec
mov
in
cmp
addb
decb
aas
dec
sub
mov
or
adcb
jl
dec
xchg
push
fdivl
adc
mov
aad
lock
lret
sbb
inc
dec
dec
inc
jmp
xchg
sub
dec
mov
jl
fdivrs
fstps
jl
pop
cmp
inc
cmpl
push
adc
xor
inc
cld
mov
or
sub
loop
mov
sub
fwait
and
leave
cs
xchg
jno
jb
sub
mov
dec
outsl
mov
aas
je
push
mov
and
rclb
cmp
or
in
cmp
or
sub
fistpl
jns
in
push
rolb
mov
xor
ljmp
sbbb
mov
dec
loop
mov
cmp
mov
in
add
jle
xchg
dec
pop
sub
or
pop
mov
ror
dec
jb
push
and
cmp
cmp
cmpsb
movsl
pusha
ret
lea
sbb
push
das
cld
fmulp
leave
or
mov
sub
jb
fcoms
push
cli
in
call
mov
in
xor
sbb
fsts
sub
mov
cltd
xor
add
nop
xchg
jb
sbb
cli
ror
mov
stc
sbb
pop
jns
sub
mov
dec
dec
int3
sub
flds
jecxz
and
jnp
je
lret
inc
push
xor
mov
fsubs
sti
push
add
xchg
pop
jmp
dec
jmp
add
gs
pop
push
push
sub
sbb
sbb
call
addr16
pop
stos
push
push
dec
cmp
jo
jg
jns
or
ljmp
add
adc
mov
ds
out
sbb
push
lods
andb
jno
xor
js
mov
int
stos
insb
stc
push
repz
xchg
xchg
jg
imul
movsl
inc
mov
or
dec
adc
add
add
push
int
jg
mov
add
lods
pop
push
jae
in
and
in
inc
arpl
cmp
pop
mov
xchg
xchg
push
inc
rcrl
fcoml
sub
adc
add
popa
mov
je
xchg
sbb
and
mov
ret
xchg
mov
push
daa
and
inc
pop
and
lea
outsb
sbb
jnp
inc
fdivrp
test
jns
rolb
mov
mov
testb
push
repnz
pop
cmp
fnstenv
push
mov
xor
ret
lcall
movsl
stos
inc
bound
adc
andl
fnstenv
jmp
ja
mov
xor
cmp
jp
dec
cmp
int
rorl
sub
jecxz
arpl
pop
into
xchg
inc
adc
sub
mov
popf
and
aam
and
dec
popf
pop
inc
or
jo
push
sbb
dec
and
ret
es
jno
add
inc
scas
dec
jae
or
mov
iret
xchg
pop
push
out
fisubs
cmc
mov
or
push
js
xchg
loopne
stos
mov
leave
cmp
mov
jae
in
sbbb
inc
add
xor
mov
xchg
mov
adc
push
dec
lea
int3
mov
je
xchg
pushl
mov
hlt
lea
jp
inc
in
mov
pop
repz
pop
addb
and
or
pop
jmp
movsb
xchg
adcl
or
repnz
sub
in
jg
rolb
mov
add
jecxz
in
jmp
sbb
outsb
sbb
cmp
pusha
enter
mov
cmc
push
inc
mov
dec
bound
popl
pop
inc
mov
out
cmp
mov
dec
xchg
push
jno
test
xor
xlat
rcl
jg
outsl
fistpll
xchg
leave
adc
repz
xor
mov
es
nop
push
mov
fistps
mov
mov
lods
fldenv
dec
add
mov
pop
pushl
fistpll
jns
sub
or
sbb
xorb
lds
jae
out
mov
xchg
xor
mov
and
leave
in
cmp
cmp
jg
mov
inc
fistl
and
mov
mov
stos
sbb
out
pop
dec
xor
les
push
cli
xchg
lods
fmuls
insb
xsetbv
loopne
adc
pop
insl
push
jne
cltd
fsubrl
or
and
ficoml
mov
mov
ss
imul
insb
and
and
mov
push
out
push
lock
rcl
push
cmpsb
jo
inc
xchg
xchg
mov
add
cmpsb
movsb
xorb
push
jne
mov
movsl
or
sub
push
sub
inc
lcall
js
addr16
loopne
inc
mov
mov
mov
xor
lret
pushf
movsb
lcall
pop
add
xchg
lods
inc
nop
push
push
out
out
sti
inc
fistpll
lock
insb
loopne
push
mov
pop
stos
mov
ret
je
xor
mov
lcall
push
out
mov
loope
xchg
xor
xchg
popa
bound
shrb
inc
xorb
fs
push
movb
push
and
xor
ljmp
js
jmp
jle
subb
mov
mov
icebp
xchg
scas
cmp
mov
out
pop
mov
mov
jae
or
adc
sub
enter
xor
sbb
popa
das
mov
ret
mov
loop
mov
and
xor
in
mov
outsb
push
shl
push
xor
test
fcmovbe
aas
pop
dec
orl
movsb
andb
mov
nop
ja
adc
push
js
repz
dec
mov
xor
inc
popa
lds
clc
outsl
es
mov
mov
add
xchg
test
cmc
cld
inc
insb
xorl
jmp
lret
and
sbb
add
int3
inc
repnz
pop
shll
pop
mov
mov
fiaddl
inc
popf
mov
aad
sub
dec
inc
add
and
lds
pop
cmp
mov
xor
dec
js
or
fistl
stos
jnp
ja
adc
fistps
and
ret
imull
sub
notb
dec
int3
aaa
stos
call
push
sbb
test
and
xchg
lcall
popf
adc
sub
mov
mov
in
pop
out
mov
pop
push
daa
sti
daa
or
sbb
dec
xchg
repnz
call
out
filds
jne
xchg
pop
out
insb
clc
mov
jmp
cmp
and
lcall
fnstcw
cltd
xchg
in
mov
lret
mov
xchg
or
cmp
gs
pushf
loop
jp
rcll
pop
mov
jo
mov
mov
mov
mov
inc
mov
xor
xchg
cld
sarl
repnz
sbb
or
xor
cwtl
enter
jmp
sub
arpl
ret
scas
stc
sbb
cmpsl
stos
enter
in
sbb
push
mov
nop
lahf
lret
push
inc
or
rcrb
fdivrp
sbb
sbb
lcall
inc
lods
leave
mov
jg
rcrl
dec
pop
pop
mov
and
add
sbb
movsb
add
or
pop
cmp
aad
mov
inc
fnop
lods
add
push
rorl
dec
test
and
loop
into
stc
adc
sbb
mov
rol
xlat
hlt
add
repnz
xchg
add
scas
das
mov
stc
inc
pop
jg
or
cmp
call
fnstenv
jne
loope
jnp
stc
cmp
out
les
and
mov
add
or
cmp
call
stos
ror
xor
adc
lods
decb
ljmp
cmp
pop
loop
xor
mov
into
imul
xchg
test
cwtl
sub
into
popa
inc
add
ret
mov
cli
mov
scas
fiaddl
sub
push
test
pop
jmp
xchg
add
jbe
cmpsb
or
outsb
jmp
push
mov
and
je
or
rolb
flds
adc
and
mov
ret
dec
pop
pop
jge
xchg
rolb
fs
or
cmp
mov
push
rclb
push
dec
inc
in
xor
and
pusha
xchg
push
fucomip
repz
sub
mov
mov
inc
mov
cmp
lret
inc
ja
aam
sbb
enter
jnp
das
mov
fidivl
jnp
cmpsb
push
sarb
aaa
push
sub
mov
jno
movsb
cld
dec
xchg
dec
scas
or
repnz
jo
xor
sub
sub
jp
cmp
dec
ds
pop
jb
aaa
or
clc
sbb
jle
cs
out
mov
movsb
push
in
push
pop
pop
or
icebp
ffree
aas
sti
pushf
xchg
in
inc
les
std
cmp
or
les
outsb
jmp
adc
jbe
lea
pop
push
xor
nop
mov
push
push
jmp
and
in
aam
push
inc
bound
sbb
xchg
cli
jo
mov
jbe
ret
rorb
lock
jne
lret
xor
and
xor
scas
mov
pop
sbb
aaa
pop
jecxz
int3
cmp
lock
cmpsl
mov
pop
push
mov
movsl
mov
mov
into
aam
insl
and
lds
rcr
and
push
pop
and
mov
lret
dec
sbb
add
pop
jl
inc
dec
or
pusha
adc
mov
lahf
js
fbld
push
mov
mov
dec
mov
fwait
and
pop
outsb
adcb
es
cmp
inc
fwait
pop
sub
pop
out
imulb
in
dec
pop
sbb
mov
ja
and
movsb
movsb
shrl
mov
pop
add
dec
addb
pop
movsl
or
mov
sub
addr16
mov
xchg
lahf
adc
mov
cmp
mov
sbb
popa
cmp
std
bound
push
into
fimuls
fucom
mov
push
jecxz
mov
dec
xor
cmp
in
lret
lods
push
popf
addr16
mov
add
jno
inc
pushl
mov
push
mov
in
daa
xlat
movsb
xor
js
lahf
push
es
pushf
mov
fistl
lods
test
cmpb
iret
push
flds
cwtl
loope
aad
pop
pop
cmp
sbb
pop
lahf
aas
mov
push
arpl
cs
and
xor
dec
mov
sahf
cmpsl
das
insb
mov
sub
lea
fidivrl
jmp
das
and
pop
push
dec
jecxz
xchg
and
mov
jp
rcll
xor
push
outsb
adc
jmp
dec
aaa
aam
dec
imul
sbbb
or
repnz
das
fdivr
das
cmp
jp
sahf
mov
in
fdivrs
cmp
aaa
dec
idivl
data16
pusha
cmp
stos
fstps
js
xor
sti
sbb
mov
and
into
stc
rcll
addr16
or
xchg
imul
jge
mov
mov
add
imul
pop
cmp
cmp
test
mov
xorb
add
adcl
mov
lcall
fstl
add
les
inc
frstor
mov
xor
iret
pop
cmp
aam
mov
sbb
testl
int3
cmpsb
iret
mov
sub
mov
arpl
xchg
lahf
leave
ja
push
sti
in
dec
jmp
add
add
das
xchg
enter
xor
sahf
push
das
xchg
inc
inc
pop
imul
mov
mov
fildll
sbb
inc
iret
dec
inc
xchg
mov
pop
jmp
sub
sbb
clc
aas
icebp
lds
gs
inc
rcrb
mov
shlb
push
cmp
add
inc
add
insl
ja
push
insl
cmc
jge
push
mov
xchg
subl
fdivs
into
insl
hlt
ja
dec
push
dec
rcrb
data16
mov
lock
pop
xor
lock
xchg
cmp
das
les
lcall
rol
jo
inc
mov
aad
mov
push
mov
sbb
enter
aaa
jmp
fisubrs
lds
call
sub
cld
jns
stos
loop
pop
cwtl
ret
cmp
rolb
dec
mov
pusha
push
out
enter
mov
push
sub
sub
in
push
or
outsb
arpl
push
test
aad
jne
popf
movsb
ret
lods
int3
sbb
sbb
xchg
xchg
dec
xchg
ljmp
and
mov
sub
les
mov
stos
xchg
jg
fchs
imulb
push
cmpsl
dec
fneni(8087
mov
test
pop
movsl
sub
cmp
mov
pushf
ret
hlt
add
lods
js
rcrb
in
ja
std
ret
pop
in
sub
cmpsl
aas
jle
push
inc
cmp
insl
and
data16
adc
pop
movsb
xchg
and
ds
rsm
hlt
ljmp
jg
aad
arpl
icebp
insl
sub
int
dec
push
jg
xchg
adc
fabs
out
dec
mov
je
ss
decb
xchg
out
inc
pop
pop
ret
xor
mov
scas
mov
jo
jo
xchg
fwait
int
test
xchg
xchg
fidivrs
cmpsb
in
adc
out
fisubs
loope
mov
addr16
cmpsl
push
push
lock
in
adc
or
rcll
and
jg
or
cmp
loopne
lock
test
mov
inc
stc
and
jo
mov
mov
add
sahf
lahf
icebp
push
jg
mov
aam
bound
xor
out
dec
popa
inc
aas
inc
sub
cltd
xor
aas
pop
dec
or
fdivl
and
xchg
sti
inc
gs
add
lcall
icebp
or
jo
les
sbb
aad
push
sub
sti
repz
or
clc
sbb
sub
jmp
call
sub
mov
jle
and
xlat
cmpsb
xor
pop
fstl
sub
mov
addr16
test
nop
lods
pop
into
mov
or
xchg
mov
fdivrs
aad
mov
imul
and
or
divl
idiv
add
rolb
pop
mov
cwtl
dec
mov
enter
mov
pushl
test
xor
jns
inc
bts
js
mov
insb
push
lret
mov
xchg
mov
scas
dec
or
std
add
jne
stos
gs
or
cs
adc
pop
mov
mov
test
insb
lahf
mov
std
fidivrl
add
inc
xchg
ret
mov
adc
dec
dec
mov
dec
fimuls
movntq
je
aad
in
push
mov
inc
mov
push
mov
std
sahf
cmpsb
xchg
dec
stos
or
sub
jbe
fisttpl
aaa
xor
mov
mov
mov
stos
push
cmc
loopne
out
rep
sbb
stos
outsl
insl
or
xchg
pop
and
and
mov
adc
sahf
adc
adc
and
je
or
mov
ret
arpl
adc
add
lret
pop
daa
mov
shlb
or
and
pop
dec
xor
add
mov
arpl
int3
push
loop
push
popa
xchg
dec
jmp
or
stc
jnp
sahf
mov
arpl
lods
mov
movsl
fidivrl
adc
jp
inc
sbb
push
push
inc
icebp
pop
jnp
pop
add
xchg
lds
jecxz
rclb
fdivrs
and
pop
xchg
stc
es
or
xor
and
mov
test
in
cs
out
test
xor
and
push
push
xlat
pop
jl
mov
ds
notb
inc
inc
pop
xchg
mov
lods
in
sub
adc
stos
ds
ja
fwait
and
jno
gs
out
cmpsl
imulb
xor
addr16
int
add
in
jns
jge
rorb
mov
xor
rcll
or
aam
mov
mov
loope
pushf
cs
pop
clc
cld
mov
lahf
and
stos
inc
mov
jns
ljmp
pop
push
fstps
out
or
lret
xchg
clc
mov
int3
and
cmp
popf
mov
xchg
and
cmc
shl
lds
pop
outsl
je
push
je
outsl
test
cmpsl
or
inc
and
insb
xor
push
dec
cs
rclb
movsl
cmp
sbb
fwait
in
ja
rcll
adc
int
adc
mov
mov
jle
mov
xor
add
and
sub
aad
dec
mov
addb
push
or
out
es
sub
or
ja
jmp
cmp
pop
call
push
push
dec
fwait
ds
imul
fldt
je
cli
negb
jbe
add
das
push
cmp
orb
lahf
jmp
mov
cmp
stc
adc
mov
cltd
iret
daa
fwait
pop
add
pop
fidivs
pop
shll
xchg
bound
push
and
mov
jl
repnz
sub
dec
out
jno
push
les
lods
repnz
pusha
mov
xor
sub
int
mov
test
cld
mov
or
and
pop
daa
ds
adc
loope
xor
dec
jae
popa
add
outsl
mov
cli
stos
idivb
les
movsb
jb
clc
test
rclb
rorb
mov
movsb
leave
mov
pop
scas
cmp
push
cli
xchg
outsl
jb
mov
testb
or
das
cmp
cmc
sar
iret
ret
sub
pop
daa
push
sub
ds
add
hlt
jns
adc
xchg
xor
mov
jo
mov
pop
outsb
lea
pop
stos
add
pusha
fadd
cmp
push
or
fs
add
or
push
loopne
dec
dec
jae
and
es
test
cmpsl
mov
add
sbb
movsl
faddl
xor
out
notb
cmp
add
stc
push
out
xchg
sti
push
lods
outsb
mull
add
emms
sbb
rcll
into
xor
repnz
int3
and
andb
push
push
dec
cmp
loope
lea
xor
or
pop
xchg
fs
mov
push
add
dec
xchg
arpl
or
in
rolb
mov
cwtl
push
xor
and
jbe
push
cmp
cmp
xlat
outsl
jp
xchg
lods
cmc
int3
fidivs
dec
into
in
xor
enter
cmp
sub
xor
mov
jmp
inc
fwait
add
cld
ljmp
mov
aaa
mov
sub
xchg
out
sub
mov
in
inc
inc
sbb
rcr
mov
icebp
mov
or
bound
cmp
dec
xchg
cmp
or
dec
lcall
add
aad
adc
sub
cmp
jns
xor
pop
test
adc
mov
mov
cmpl
lret
push
pushf
lcall
fsubrs
pop
jle
outsl
test
shr
ds
daa
in
cmp
mov
ja
popf
int3
loopne
shrl
ljmp
mov
test
in
cmpb
jae
add
ljmp
jb
jbe
fsubs
adc
popa
jo
or
or
dec
int
mov
fisubrs
adc
add
loope
jne
sahf
jmp
js
dec
cmp
gs
push
cmp
pop
enter
mulb
std
loop
in
in
jo
jbe
aad
mov
sahf
mov
data16
popf
jl
pop
pop
les
mov
adc
pop
add
mov
xchg
adc
xchg
sbb
jns
pop
push
clc
dec
lds
mov
cmpsb
icebp
inc
int3
xchg
mov
cmp
xor
pop
je
je
insl
mov
push
xchg
pushf
xor
xor
push
xchg
adc
jb
ret
dec
mov
push
cltd
inc
jge
push
pop
cmc
xchg
sub
xchg
mov
fs
notb
sbb
sbb
mov
mov
popa
adc
icebp
repnz
ficoml
xor
insb
cmpsl
rcrb
shrl
lret
mov
jg
aam
inc
pop
lods
push
out
ljmp
pop
xchg
js
push
dec
inc
js
jno
jae
fsts
shl
pop
call
lock
loope
fistpll
lods
sbb
aad
maxps
int
push
pushf
aas
int3
mov
call
fstpt
imul
add
outsl
lds
adcb
mov
push
es
aam
fstpt
and
add
jecxz
int3
xchg
mov
mov
push
sub
shl
lds
mov
je
aam
jno
pop
out
mov
jg
cs
je
sbb
leave
shll
xchg
xor
lock
fcomip
xlat
into
xor
cmpsl
or
popa
and
jp
das
shlb
int
mov
sbb
test
pop
dec
stos
push
push
mov
dec
and
fimull
or
std
lea
dec
std
aad
jbe
je
xlat
leave
cmpsl
pop
repnz
sarb
aad
dec
dec
jne
call
fidivl
xchg
and
jae
or
pop
jmp
loop
xor
cmp
mov
sbb
cmp
enter
addl
xor
lea
xlat
and
xchg
imul
imul
aam
jecxz
push
leave
xor
shlb
in
repnz
adc
xchg
rcr
cmp
cmp
jmp
sbb
jo
test
sub
cmpb
lret
mov
xchg
daa
or
inc
push
subl
je,pt
insl
xchg
loope
cmp
push
pop
pop
add
in
pusha
cmp
pop
not
popf
pop
movsb
adc
adc
icebp
sub
and
jae
lods
popa
call
imul
out
mulb
fs
aas
pop
ficoml
pop
pop
mov
mull
push
popf
add
mov
mov
cmpsb
mov
inc
idivb
icebp
xchg
in
pop
xor
adc
cli
ret
xchg
pop
xor
rorl
fisttpl
test
je
mov
inc
insl
adc
lcall
push
js
mov
outsb
lea
not
scas
sub
inc
cmp
adc
sub
mov
in
insl
movsl
or
sbb
and
or
insl
addl
jle
xchg
jno
sbb
xchg
mov
jne
aaa
test
imul
enter
cmp
mov
xchg
jl
sbb
faddl
imul
xchg
and
loopne
add
mov
gs
and
jecxz
sbb
in
ret
cld
mov
dec
jl
jae
hlt
mov
mov
add
dec
retw
mov
fsubl
sar
xchg
bound
sbb
movl
rcrb
sahf
jge
cmp
call
mov
das
mov
sarl
mov
push
pop
push
jl
lret
mov
xlat
mov
call
lret
lret
cld
mov
cmpb
and
push
iret
adc
mov
mov
mov
call
nop
inc
push
iret
out
xor
cmc
or
js
jecxz
xchg
xchg
dec
outsl
cs
or
scas
aas
fnstcw
lret
push
inc
data16
mov
shlb
lcall
sti
stc
jns
inc
jbe
mov
insl
inc
repz
hlt
in
fildl
add
dec
popf
loop
inc
inc
xchg
jg
add
mov
jmp
mov
lds
adc
mov
push
popf
jb
popf
jmp
aaa
inc
mov
arpl
or
push
decl
pop
fcmovnu
push
pop
in
mov
mov
inc
sbb
jmp
pop
shr
or
scas
and
push
or
sahf
divl
add
pushf
push
arpl
push
sub
leave
xchg
jb
jae
das
das
jo
xchg
int
dec
jne
popa
inc
cld
push
cmp
pop
cmpsb
cwtl
stos
dec
es
out
pop
mov
or
fisubrl
out
repz
mov
ret
xorb
jl
add
sub
jmp
repz
lcall
mov
pushf
enter
dec
xor
ss
cld
out
add
aaa
inc
mov
jg
sti
sbb
outsl
mov
dec
lret
icebp
push
int3
mov
dec
pop
repnz
test
cmpsb
xor
push
lock
ds
mov
shlb
cli
push
sub
push
xor
xchg
ljmp
popa
pushf
xchg
xchg
fnstenv
push
mov
jb
mov
movsb
stc
scas
leave
dec
ret
je
imul
fisubrl
sbb
pushf
ret
lods
xorl
cmp
or
sbb
mulb
and
lds
mov
enter
dec
mov
adc
cmpsb
jbe
cmp
mov
add
mov
out
dec
sbb
repnz
data16
dec
push
sub
push
enter
mov
mov
push
mov
and
push
fistpll
lds
divl
loope
enter
rolb
cmp
test
dec
mov
jl
jecxz
nop
xor
jo
mov
pop
or
inc
mov
jle
xlat
xor
icebp
cmp
loopne
icebp
xchg
scas
scas
dec
push
mov
out
scas
dec
ja
or
add
in
imul
cmp
add
add
popa
js
adc
sbb
imul
cmp
insl
adc
pop
test
push
push
mov
mov
jo
mov
cmp
mov
or
fwait
in
cmp
pop
dec
fidivrl
inc
pushf
pop
rorb
mov
adc
push
cmpsb
clc
push
cmc
scas
lret
fs
popf
xor
mov
scas
mov
mov
imul
jge
mov
sub
push
or
out
mov
insl
sbb
pop
mov
sub
inc
movsb
adc
xorl
dec
jne
enter
push
cmc
push
in
jo
dec
cmp
rcr
cmc
cmp
shll
or
adc
cli
sub
or
lret
adc
lods
or
movsl
adc
mov
fwait
inc
dec
inc
mov
aad
or
shrb
sahf
inc
in
pop
test
mov
addr16
cmpsb
rcrb
scas
int3
shll
icebp
mov
test
test
fidivrl
adc
xchg
pop
test
xor
dec
dec
fwait
pop
mov
aas
cwtl
add
jmp
inc
jl
mov
xchg
mov
mov
lea
add
cltd
dec
cmpl
sub
gs
daa
cld
xor
loop
jmp
mov
lahf
cmc
in
movsl
mov
and
jg
jbe
push
mov
push
mov
movsb
push
xor
mov
mov
push
adc
test
pop
pop
push
stos
cmpb
aas
stos
lahf
jnp
cmp
xchg
jnp
cmpsl
fsubs
sahf
pusha
mov
jecxz
lret
frstor
mov
out
cli
adcl
sbb
pop
outsl
movsb
adc
inc
imul
xor
repz
xchg
repz
jns
push
add
mov
pusha
imul
or
imull
pop
mov
les
sbb
sub
test
push
mov
jno
adc
out
sti
xor
and
xchg
ljmp
dec
pop
pusha
jmp
imul
scas
jnp
std
pop
dec
out
cltd
arpl
out
fisttpl
mov
cwtl
xchg
outsl
pop
jno
pop
cmp
sub
ds
in
out
and
mov
pop
jle
mov
jo
dec
xchg
adc
xor
loop
sbb
std
mov
mov
stc
mov
repz
movsb
or
dec
pop
js
insb
lods
dec
or
sbb
mov
out
gs
push
adc
cmc
jmp
outsb
cmp
not
paddd
les
data16
mov
pop
cs
jnp
sbb
loopne
and
push
jne
das
cmp
jge
jnp
dec
xchg
inc
les
mov
inc
sbb
cltd
add
scas
xor
cltd
pop
or
enter
jne
push
dec
cmc
mov
test
rol
std
cmp
pop
std
lcall
scas
mov
mov
sub
into
and
push
sub
mov
sub
pop
testb
jns
lds
adc
test
add
xchg
lcall
shll
lret
in
mov
es
cmp
jb
cmp
mov
cmpsl
cmp
mov
mov
push
jns
sub
adc
cli
jne
sub
and
dec
sbb
mov
ret
mov
pop
ret
dec
out
mov
pop
sub
test
dec
ljmp
or
pop
loop
or
adc
jecxz
in
mov
push
jno
dec
enter
or
data16
add
inc
lcall
aam
sbb
jae
adc
in
xor
mov
lahf
mov
rcll
pop
stc
dec
add
lret
ss
mov
mov
jge
fst
aad
lret
popa
jp
cmp
sbb
int3
push
faddl
mov
push
cmc
cmp
fidivrs
xlat
mov
outsl
push
ret
jb
pop
bound
sub
inc
adc
insb
aaa
out
push
pusha
push
push
je
frstor
mov
ror
imul
inc
jecxz
pusha
test
dec
faddl
xor
cld
outsb
scas
sti
cmp
xor
xor
fcompl
icebp
divl
mov
pop
sub
jecxz
aam
mov
add
xlat
out
cwtl
cmp
in
xchg
fdivl
lds
fildl
mov
or
aas
push
cld
dec
fcoms
xchg
push
sub
xor
jb
test
push
mov
jg
inc
rcll
iret
leave
xchg
dec
lods
push
or
jmp
and
xchg
in
xchg
mov
sub
jae
mov
bound
rorl
and
out
inc
mov
outsl
cmp
push
jmp
and
aaa
push
sbb
push
sbb
adc
inc
daa
out
pop
mov
sbb
pop
jo
pop
scas
out
loop
xor
inc
add
loopne
repnz
cmc
jmp
sbb
jns
jmp
lds
sahf
xchg
xor
fwait
sub
push
pushf
xor
mov
cmp
xchg
repnz
out
xchg
jbe
insl
out
leave
out
jecxz
mov
mov
jmp
stos
jae
lock
cmpsl
push
inc
cld
into
jecxz
add
pushf
loope
in
push
imul
xor
ficoms
dec
pop
jmp
in
mov
je
push
mov
add
or
sar
mov
and
fcomps
xlat
push
pop
mov
dec
xor
hlt
ljmp
aad
sbb
les
xor
imul
adc
negb
sub
mov
adc
stos
jbe
mov
cmp
xor
sahf
aad
les
aad
jg
loope
ret
sub
cmpsb
cmp
sbb
cmpl
jg
pop
stc
pop
call
notl
inc
mov
or
add
dec
lods
in
popa
sbb
dec
cmpsl
xchg
mov
pop
sub
leave
pusha
xor
dec
dec
ret
jp
mov
adc
pop
clc
push
out
sbb
test
leave
cmc
out
jge
dec
pop
mov
cmpsl
call
mov
std
test
push
pop
out
stos
xchg
add
mov
mov
lods
frstor
clc
pop
jecxz
pop
and
pop
lods
xchg
mov
fbstp
movsl
gs
aad
subb
sub
fisttpl
add
bound
mov
jg
sub
subl
add
fsubp
and
add
cli
sub
xchg
cmpsl
cmp
imul
inc
push
test
jg
int3
sarl
sbb
leave
stos
pop
fcoml
cmp
push
inc
outsl
xchg
movsb
ss
mov
cwtl
jo
lahf
jge
mov
jne
inc
dec
pop
sub
xor
sub
ret
inc
cmp
iret
pop
ja
xor
lret
mov
jae
push
sub
lahf
rcr
mov
gs
inc
ss
and
rcl
int3
push
jnp
mov
scas
xor
and
ljmp
call
out
xchg
cli
adc
iret
sbb
sub
cmp
mov
fimuls
ss
cmpb
es
cmp
dec
sti
insb
push
pop
add
mov
imul
jo
jnp
or
jo
pop
adc
dec
popa
in
xchg
mov
mov
xchg
jge
pop
inc
or
sub
sub
ja
les
mov
addr16
and
arpl
fs
xchg
fsts
mov
cltd
or
sti
mov
in
sub
out
cs
cmp
js
xor
mov
mov
dec
pusha
iret
push
scas
fistl
in
lds
shl
mov
lea
or
sti
push
pop
sahf
mov
mov
imul
popf
mov
mov
rorl
jbe
sub
ljmp
mov
mov
add
mov
pop
decl
push
pop
add
pop
sbb
cmpb
addb
add
arpl
sub
inc
sahf
into
test
and
xorb
fwait
lcall
mov
xchg
je
popa
xchg
js
jae
imul
sub
fwait
and
jbe
sub
xchg
out
push
sub
inc
push
into
dec
or
rorb
jb
ret
lds
xchg
cltd
leave
es
xchg
push
sbb
popf
lret
stc
mov
push
ret
faddl
imul
test
pop
mov
mov
add
or
test
divl
sub
add
jp
in
lcall
xchg
mov
mov
arpl
scas
push
jl
add
or
je
cli
test
sub
testl
loop
jo
arpl
dec
notb
pop
fwait
std
sbb
push
into
push
repnz
ljmp
in
ficoms
sar
dec
jb
lret
aas
lea
xlat
pop
dec
mov
mov
cmp
imul
subl
inc
mov
pop
inc
mov
xor
addr16
aas
andl
jns
mov
jns
dec
lods
mov
cmp
mov
mov
std
xchg
pop
jge
enter
cltd
lret
enter
push
xchg
test
dec
inc
adc
inc
mov
cli
dec
xchg
lea
xchg
adc
out
adc
imul
inc
xor
into
jl
adc
xor
inc
adc
test
adc
movaps
into
or
push
jge
fnstcw
mov
addr16
or
sbb
dec
mov
test
jbe
xor
pop
in
or
cmpsl
ror
fistps
imul
push
in
jne
popf
sbb
sarb
xor
pop
pusha
xchg
stc
or
repz
stc
std
sub
std
xor
sub
ja
dec
outsb
mov
mov
pcmpgtd
cli
jp
pop
mov
mov
dec
xor
aaa
push
scas
rclb
cmp
ljmp
arpl
test
popf
out
cwtl
popa
push
mov
pop
iret
jle
or
iret
push
mov
sub
in
insb
dec
test
hlt
xlat
shll
cmpsl
sub
jo
or
sub
roll
in
mov
out
arpl
cwtl
gs
sub
mov
packsswb
cmp
gs
and
mulb
mov
add
add
in
test
stos
adc
dec
pop
lds
sub
lret
xchg
mov
xchg
push
lahf
pop
push
xchg
xchg
lahf
lds
test
add
adc
lcall
push
fwait
movsb
mov
inc
stos
adc
jge
pop
call
mov
xchg
jl
add
daa
push
outsb
jecxz
pop
enter
push
das
je
jns
mov
ljmp
into
push
sbb
popa
mov
lods
aas
push
inc
call
cmp
dec
fwait
aam
xchg
sub
shll
stc
stos
and
dec
xchg
shll
mov
scas
mov
or
inc
xor
cmc
cwtl
or
inc
int
repnz
icebp
pop
sub
pop
mov
push
cmpsl
dec
inc
ljmp
push
mov
stos
inc
xchg
imul
jo
cmp
mov
cmp
and
mov
jns
jge
lock
aad
lods
or
xor
cmp
xor
mov
iret
in
pop
or
jne
sub
mov
arpl
loopne
scas
addr16
je
ds
push
outsb
lret
int
pop
std
fsts
jno
xchg
test
leave
das
loop
sub
sub
push
rcrb
shrl
ror
adc
sbb
jnp
test
hlt
out
jg
sub
pop
jecxz
and
call
push
inc
cmovg
stos
rclb
inc
cmpsl
mov
mov
mov
jbe
imul
fstps
mov
fcomp
push
out
test
and
daa
pusha
mov
cwtl
movsb
jmp
loope
ljmp
pop
pop
jecxz
lahf
fs
ret
mov
stos
inc
imul
cltd
cmp
cwtl
push
pop
cs
adc
fdivrs
leave
push
idiv
lret
mov
sbb
ljmp
xchg
pop
pop
fidivrs
iret
mov
sbb
mov
xlat
loope
mov
mov
adc
xchg
insl
add
pusha
inc
ret
pop
addr16
mov
mov
outsl
loopne
ss
and
and
cmp
adc
sub
mov
pop
inc
lahf
movsl
das
adc
jmp
arpl
stc
sti
jl
xchg
sbb
lahf
notb
cwtl
mov
jp
es
test
in
inc
imulb
in
out
lcall
mov
cmpsl
dec
add
dec
push
mov
jecxz
cmp
sarl
cmc
jecxz
dec
lods
dec
xor
pop
xchg
je
jmp
popl
dec
or
mov
inc
mov
es
sub
push
mov
cmp
je
sub
inc
and
lock
cmpsl
lahf
push
idivb
in
or
in
clc
sbb
xchg
jg
push
or
faddl
popf
mov
icebp
sbb
fsubrl
or
fists
cmp
sub
mov
pop
add
stos
or
pushf
inc
dec
pop
lock
imul
mov
xlat
in
sbb
jbe
fs
lods
pusha
shll
lods
inc
ja
rorl
xchg
xchg
fistpl
data16
fcoml
xor
cmp
test
cmpsl
adc
pop
cmp
or
lds
leave
rclb
in
dec
sbb
popf
inc
inc
pop
nop
inc
js
test
sbb
ret
pop
sarl
xchg
mov
inc
gs
sub
pop
mov
or
mov
sbbl
inc
movsb
test
push
mov
and
push
aam
push
pop
add
stos
mov
lds
dec
or
in
xor
pop
xor
stc
add
stos
pop
xor
mov
add
or
or
push
mov
dec
pusha
jg
jg
pop
lods
idivb
gs
mov
cmc
mov
insb
cs
test
sub
aad
sbbl
jb
mov
xchg
xchg
es
push
push
cmpl
inc
fwait
ss
mov
jb
hlt
mov
ja
lds
xchg
sub
fisttpl
ja
pop
sar
lret
fs
sti
mov
gs
out
push
or
mov
mov
mov
inc
xlat
stos
xorl
arpl
repz
xchg
scas
les
je
lock
mov
js
and
push
and
xor
scas
stos
daa
sarb
mov
test
sub
fisttps
dec
adc
and
mov
lods
sbb
stos
sahf
pop
pop
jne
mov
sti
push
jge
and
loope
inc
pop
jp
shrb
aaa
jmp
xor
mov
or
pushl
aaa
fsts
js
addr16
xor
xlat
xchg
lds
jo
mov
sahf
fildll
inc
jno
pop
mov
movsl
sbb
cmp
gs
sbb
jb
xor
inc
cmpsl
dec
xchg
or
mov
xor
or
loope
andl
inc
jo
pop
enter
or
or
mov
pop
push
ds
enter
idiv
leave
repz
adc
cmp
sub
aam
inc
sub
xor
adc
rcrb
stos
add
sub
cld
sub
jge
movsb
hlt
rclb
mov
fcmovnb
fidivrs
pop
xor
repz
insl
mov
xor
add
scas
stos
loope
lock
addr16
mov
scas
repnz
pop
or
insb
sbb
adc
jecxz
sbb
xchg
cmp
test
daa
int3
aad
cmp
dec
imul
mov
out
push
in
fists
pop
cmp
inc
mov
xor
mov
jecxz
or
mov
mov
cld
lahf
xchg
fdivrp
fdivrs
gs
sub
test
xor
dec
jg
orb
cli
mov
lret
test
arpl
sbb
ret
mov
jno
fcmovne
cmpsl
pop
inc
loopne
call
lods
and
movb
mov
adc
imul
mov
push
pop
out
xchg
jmp
aam
inc
push
test
jae
mov
cmp
xor
push
add
mov
jmp
push
fldenv
add
imul
jg
xor
jne
xor
add
out
cmp
repz
pop
sub
cmpsl
sbb
cmp
daa
lcall
ret
int
shl
fwait
iret
adc
cld
jbe
xor
in
lds
mov
enter
cs
push
sub
out
mov
addr16
mov
add
and
call
js
sub
xor
ret
roll
cltd
xchg
add
push
push
ljmp
pop
mov
stc
movsb
cli
cmp
xchg
mov
clc
out
leave
sti
or
in
cwtl
or
in
dec
test
loop
adc
ljmp
xorl
decl
jg
nop
clc
lahf
rcll
addr16
add
inc
pop
mov
sahf
hlt
or
jg
sbb
jl
sub
mov
fildl
out
mov
rclb
pusha
pop
arpl
jb
sahf
lea
lds
mov
mov
and
mov
jp
xchg
cmc
and
lods
xchg
mov
ljmp
insl
pop
fs
in
inc
adc
iret
mov
mov
pop
fwait
cmpsl
cld
aaa
xchg
cli
cwtl
es
mov
int
mov
push
xchg
outsl
sbb
lock
mov
pop
int
xchg
pop
sub
pop
xor
and
enter
or
scas
lods
push
pop
iret
out
jle
push
cmp
in
stos
sub
loope
inc
sahf
cmp
into
lock
jg
sub
cmpsb
test
sarb
mov
pop
cmp
sbb
mov
xchg
jbe
popa
mov
xchg
push
fsubrp
jbe
sub
adc
test
pusha
jns
push
jnp
push
fwait
outsb
lret
lcall
add
mov
lret
mov
scas
jbe
inc
adc
push
lea
das
popf
mov
test
mov
jg
lret
cltd
movsl
hlt
orl
test
sub
imul
adc
gs
test
sbb
pop
int3
and
mov
dec
adc
out
mov
xchg
aad
cmp
xor
roll
scas
add
es
nop
mov
cmp
mull
lcall
add
push
add
insl
fdivrl
xor
fbstp
fisubs
mov
push
popf
dec
xchg
in
push
cs
fldenv
insb
xlat
mov
push
popf
stc
adc
ret
outsb
cwtl
loope
cltd
int3
bound
imul
in
or
dec
mov
pop
loopne
cld
addr16
adc
xor
jp
xchg
xchg
ljmp
lcall
dec
sub
fcmove
jecxz
cs
lret
xchg
repnz
out
insb
inc
sub
sub
cmp
cmp
shrb
mov
pusha
push
xchg
push
lods
inc
jl
popf
jo
gs
leave
jecxz
ret
movsb
sti
ja
test
xchg
and
popf
lret
jns
pop
in
and
sbb
pop
fldl
fwait
data16
in
imul
push
push
into
dec
lret
or
push
clc
lahf
cld
pop
or
adc
adc
in
aaa
push
ja
sub
les
clc
pop
movsl
add
aam
outsb
cmpsb
fnstsw
out
mov
adc
mov
sub
loopne
mov
cmpsb
and
pop
sbb
iret
fildl
mov
outsl
sub
in
insb
in
shll
stos
and
inc
outsl
sub
lcall
xor
rorl
lret
sbb
fnstenv
fidivl
adc
lods
xchg
jo
imul
xor
jl
hlt
adc
sub
xchg
fnsave
aad
enter
pop
les
jge
or
or
cmpsb
lock
lods
roll
adc
sbb
int3
fnstenv
mov
mov
cmp
mov
stc
pop
mov
test
cmp
repz
dec
mov
aad
sbb
push
cwtl
outsl
aas
addl
xchg
or
jle
cmpsl
shll
outsb
pop
cmpsb
inc
lds
mov
stos
jmp
outsb
inc
lret
mov
adc
std
or
xchg
xchg
mov
push
inc
repnz
add
imul
cmpsl
xorl
pop
scas
inc
or
mov
pop
sbb
movsl
fldln2
idiv
movsl
das
xchg
outsl
add
push
add
inc
stos
shlb
ss
mov
mov
fdivrs
scas
mov
test
fidivrs
adc
stos
push
dec
lret
or
out
setge
lods
ret
enter
sbbb
lods
in
cwtl
aas
jp
sub
cmp
stos
cmp
ds
push
dec
or
jne
mov
inc
sbb
imul
pop
sbb
dec
jecxz
roll
stos
push
lret
mov
scas
sbb
out
adc
ret
xor
cld
movsb
or
inc
sbb
jae
inc
jg
arpl
push
inc
cmp
sub
push
or
adc
jo
fcompl
mov
fs
and
popf
xchg
scas
imul
movsl
jp
cltd
je
push
add
or
jb
xchg
pop
dec
mov
arpl
push
and
pop
jno
cmp
xlat
sar
out
inc
mov
sbb
cmpsb
pop
stc
pop
xor
add
cmpsl
outsl
iret
out
sbb
hlt
push
fcomi
mov
icebp
or
xacquire
in
pop
test
push
and
aad
jmp
dec
sub
cs
fisttpll
cmp
addr16
out
mov
in
sbb
cmp
dec
imul
jbe
jle
or
in
mov
mov
push
jmp
popf
pinsrw
daa
mov
mov
shll
iret
test
pop
jnp
cmp
and
subb
dec
cmpsl
push
adc
addb
repnz
jle
pop
lds
lods
int
fs
cmp
xlat
sbb
cmc
je
or
adc
lret
test
lea
mov
push
fucomp
in
xchg
xor
lcall
in
xchg
lea
xor
cmpb
jnp
lret
cmp
jnp
unpckhps
mov
dec
loop
xchg
xchg
pop
out
je
std
push
sub
bound
fidivs
add
mov
xchg
push
sub
imul
bound
inc
add
xor
lret
xor
pop
icebp
ss
mov
pop
bound
xchg
mov
sbb
pop
ljmp
inc
xchg
ret
sub
mov
int
pop
adc
fisubl
cld
rcrb
mov
mov
in
es
or
sub
add
adcb
bound
das
rcrb
inc
push
cli
jno
mov
push
aaa
xchg
lret
ret
loop
mov
mov
outsb
orb
push
imul
mov
pop
repnz
std
insb
test
mov
out
adc
pop
stos
dec
sbb
inc
dec
fsubr
loop
lcall
inc
daa
das
pop
cmp
xchg
rorb
inc
int
and
xchg
call
and
dec
addr16
xchg
xchg
mov
arpl
push
sub
jns
inc
in
fisubrs
or
mull
dec
dec
jne
repz
mov
inc
aad
inc
nop
sbb
xchg
xchg
mov
add
imul
inc
jle
rclb
cmc
jl
in
inc
mov
push
scas
sub
movsl
sub
sub
enter
xchg
testl
xchg
lahf
lock
adc
mov
das
xor
or
mov
test
sbb
or
iret
addb
mov
outsb
sarb
fs
push
in
lcall
icebp
xor
mov
adcl
mov
jbe
sub
inc
adc
pop
sub
mull
aad
in
movsl
inc
scas
xor
inc
addb
test
arpl
ljmp
in
push
cmp
and
push
pop
lret
push
jb
test
mov
sbb
adc
sub
test
pop
mov
xchg
mov
lret
sub
pop
pop
test
repnz
iret
sub
lods
pushf
call
aad
pop
xchg
xor
xchg
shll
pushf
nop
adc
push
test
xchg
xchg
aam
pop
scas
mov
movsl
nop
jns
jo
mov
fdivr
jae
jb
fists
xchg
ficomps
push
je
dec
hlt
lds
pushf
iret
lods
sub
hlt
jne
popf
sub
mov
jmp
pop
imul
inc
lret
loopne
mov
inc
test
jge
mov
sarl
movsl
in
sbb
add
mov
in
inc
pop
lea
mov
fiaddl
mov
jae
cmp
arpl
push
fisubrl
push
js
add
fstps
jb
mov
mov
pop
sub
pop
lea
ja
mov
or
and
cmpl
mov
js
iret
and
enter
jmp
add
mov
rolb
push
inc
bound
movl
scas
insb
cmp
jg
fists
sbb
mov
sub
mov
mov
xchg
shrd
xor
jmp
jg
add
in
cmpsl
mov
cmp
in
jle
das
xchg
sbb
sbbb
in
mov
out
mov
add
jg
negb
xchg
xor
int
mov
int
inc
and
or
ja
rcll
inc
xchg
mov
movsb
adc
mov
aaa
push
rcll
into
inc
divb
jp
rcrl
push
mov
pushf
or
xchg
mov
incl
cwtl
movsb
in
lcall
adc
in
aas
cli
testl
ja
inc
pop
fiaddl
jno
fstpl
and
stc
cld
ljmp
mov
jg
popf
jp
pop
mov
pop
bound
or
xchg
push
mov
or
jo
jg
pop
sub
lods
ja
xor
sbb
or
lods
sbb
addr16
push
sub
ret
cmpsb
iret
and
push
fistpll
popa
xor
pop
orb
or
sahf
ficoms
pop
adc
sbb
push
sub
ss
andb
stc
lock
cmp
jae
xchg
inc
push
insl
adc
stc
mov
adc
xlat
mov
xor
pop
cs
or
pcmpeqd
int
pop
push
cld
dec
add
dec
pusha
jnp
and
or
jbe
test
mov
ss
mov
jg
inc
scas
jecxz
or
cmc
dec
addb
jge
call
mov
mov
or
mov
inc
dec
test
outsb
pop
dec
push
add
mov
add
or
orl
out
ficoml
and
sbbl
sub
inc
and
ret
dec
xor
addr16
lret
test
xchg
push
mov
jge
xchg
js
popf
stos
cli
sarb
pushf
xor
lods
insb
dec
mov
loope
fcom
outsl
into
sbb
popf
and
sub
call
inc
dec
or
mov
add
and
pop
shlb
cmp
int3
outsb
lock
add
jp
inc
test
push
sub
arpl
xorb
ficoms
sbb
cmpsl
jmp
loop
pop
out
fsubrl
lds
fucomi
fisttps
jle
aad
pop
xor
mov
xor
loop
dec
xor
orb
fs
cmpl
mov
mov
ds
lods
lock
cmp
cmp
xor
dec
popa
int
inc
cmc
jge
mov
ficompl
pop
movsb
sbb
push
loope
mov
push
sub
mov
pop
mov
jge
xchg
or
in
popa
js
mov
mov
cmpsl
mov
out
jae
dec
clc
pushf
jno
pusha
loopne
push
lods
xor
xlat
aad
sub
das
cmpsb
sbb
and
enter
rclb
push
pushf
jb
sub
push
rorl
nop
jno
push
add
jle
stc
mov
jg
movups
xchg
jo
bound
outsb
adc
leave
icebp
and
leave
inc
push
xchg
subl
mov
data16
in
out
mov
jl
inc
jmp
fildll
add
xchg
cld
jnp
mov
ja
mov
popf
sub
int3
jns
push
notb
mov
mov
out
xor
xchg
xchg
daa
add
shrl
mov
fcomip
xor
je
pop
push
fidivl
fbstp
push
in
cli
sbb
negb
cmp
jle
dec
inc
popf
cwtl
fs
jle
xor
push
insb
fidivrl
mov
cltd
clc
movzwl
es
aad
test
inc
ljmp
shll
repz
adc
sbb
outsb
out
xor
sub
hlt
xor
mov
rolb
mov
dec
sub
jb
xchg
test
lahf
arpl
and
hlt
xor
cmpsl
dec
lods
sbb
mov
enter
push
outsb
mov
repnz
rol
cmpsl
hlt
xorb
xchg
cld
loopne
popf
aas
add
scas
dec
sbb
mov
into
pop
xorb
push
pop
stc
pusha
push
lds
popf
out
out
in
sbb
fisubl
pop
loop
adc
fwait
adc
icebp
mov
push
pop
inc
shll
pop
push
pop
pop
leave
mov
cs
and
je
cmp
nop
clc
push
and
test
push
test
inc
sbb
jae
ds
xchg
mov
mov
dec
stos
insb
and
mov
xor
mov
divb
jg
stos
out
std
and
dec
je
mov
jno
iret
or
ret
pop
ljmp
addb
repz
pop
push
lret
dec
sub
ja
xor
mov
adc
movsb
mov
jbe
imul
inc
mov
xchg
adc
pusha
mov
loopne
jecxz
testb
pop
ja
std
xor
sbb
pop
stos
les
lds
fstl
jb
and
inc
xchg
loopne
ja
mov
mov
xor
adc
sub
inc
push
sbbl
adc
lods
imul
and
and
sbb
inc
add
rorb
adc
movsl
adc
pop
das
and
sub
pop
les
shr
iret
bound
fs
aaa
sti
push
faddl
cltd
das
pop
pusha
repnz
in
jle
or
jns
cwtl
mov
xor
add
pusha
idiv
cmp
mov
mov
mov
fistpll
mov
xchg
sahf
add
insb
pushl
addl
pop
cmp
ret
into
aas
lods
adc
mov
jmp
aad
push
test
mov
mov
xlat
rolb
data16
leave
rorb
cmp
xchg
fwait
xchg
je
ja
orl
test
repnz
je
adc
dec
int
sub
or
mov
fstpl
in
ljmp
jns
jecxz
push
sahf
add
call
mov
cmp
pop
add
pop
add
inc
jge
lods
sub
push
fsubl
jno
leave
adc
push
sub
mov
lcall
repnz
jno
push
push
or
xor
pop
xor
shrl
in
mov
test
mov
mov
pop
test
cmpsb
lods
ljmp
cli
leave
inc
jne
xchg
cwtl
lahf
mov
add
scas
and
jns
xor
mov
push
orb
out
jg
inc
push
xchg
adc
jae
lcall
negl
push
jl
adc
mov
mov
subl
fcmovb
jo
pop
xchg
out
xor
xor
call
int3
int
push
xor
pop
adc
ss
outsb
jg
rcrl
lods
and
cmp
sub
loop
push
lret
and
mov
adc
loopne
pop
sbb
mov
inc
sbb
insl
fisttps
ret
mov
or
and
pusha
js
pop
jnp
sbb
jl
out
xor
je
pop
jnp
xrelease
add
sti
xchg
pop
push
mov
mov
jns
sbbl
int
inc
sarb
lret
jo
jne
dec
insl
push
dec
sub
dec
out
ljmp
push
sar
call
xchg
shrb
in
cwtl
jne
jg
mov
pop
xchg
push
push
movsl
push
mov
cmp
or
push
aas
test
adc
mov
lock
ret
add
push
mov
sbb
sbb
mov
hlt
add
xor
jle
inc
add
mov
data16
in
sub
sub
xchg
pushl
adc
aad
in
fnsave
mov
rcll
adc
fdivp
test
ja
mov
xchg
mov
sbb
and
pop
aaa
pop
dec
pusha
jmp
popa
imul
clc
shlb
addr16
add
dec
rcll
cltd
repz
imul
insl
add
pushf
push
into
and
sbb
testl
ror
inc
xchg
mov
pop
sub
pop
or
leave
jle
mov
lods
scas
and
adc
in
sti
bound
aad
jno
enter
pusha
add
mov
and
xor
sbb
int3
xor
lret
mov
push
stos
aad
outsl
jg
mov
sysexit
cmp
mov
pop
inc
sub
test
mov
jae
subl
mov
mov
in
hlt
fildl
adc
outsb
jns
push
adc
scas
test
out
mov
loop
out
jbe
fwait
inc
cmp
nop
and
push
sub
or
outsl
fwait
aad
pop
gs
inc
call
sub
xor
lods
mov
mov
push
xchg
inc
mov
and
rcll
mov
pop
stos
mov
int3
das
pusha
push
jbe
in
rolb
add
adc
push
mov
leave
jbe
movsl
adcb
push
mov
inc
sbb
mov
loop
dec
inc
sbb
fdivr
dec
out
xchg
push
jl
imul
mov
push
leave
hlt
rclb
mov
push
imulb
lret
outsl
ja
pop
cli
jae
sub
pusha
pop
loope
leave
fadd
mov
cld
sahf
lods
push
xor
pop
push
daa
jp
mov
cmp
add
xlat
adc
lret
ds
jge
popa
mov
push
enter
mov
lret
and
leave
out
cmp
inc
fdivr
mov
sbb
les
imul
inc
mov
nop
xor
cmp
xchg
movsl
rcl
fdivl
add
outsb
pop
jecxz
mov
push
stos
jb
test
or
and
dec
cmp
icebp
and
in
ret
ficompl
jbe
sbb
pop
add
pop
adc
adc
and
or
lcall
scas
cmp
mov
add
jb
sub
repz
mov
lods
mov
cld
and
lret
mov
lahf
pop
movsb
or
dec
out
or
lds
into
fadds
je
je
or
jbe
pop
mov
icebp
fcmovnb
jae
mov
jb
sub
xor
jns
mov
outsl
xchg
xchg
pop
xlat
repnz
in
cmpb
es
lock
cmp
mov
jge
inc
cmpsl
push
ret
xchg
rsm
lock
pop
push
sarl
mov
xor
sub
mov
sbb
jg
xchg
and
sbb
jge
and
outsl
and
sbb
scas
push
xor
add
lock
ds
jecxz
jbe
popf
inc
mov
pop
pop
lods
stos
jmp
outsb
insb
mov
push
inc
pusha
test
leave
push
movhlps
add
push
addb
jge
out
pusha
dec
ja
mov
cli
test
inc
mov
popf
adc
and
or
imul
and
mov
add
sub
lds
cmp
dec
xor
or
inc
clc
insl
xchg
sbb
in
sbb
int3
andb
fimull
sti
push
int
pushf
xchg
ds
mov
pushf
loope
in
pop
xchg
mov
dec
sbbb
fs
adc
mov
or
in
out
mov
add
lea
lea
lret
arpl
push
cmp
pop
push
stos
mov
pop
rcl
clc
xchg
adc
mov
mov
aaa
aad
pop
or
adc
or
jle
mov
mov
mov
mov
jbe
sti
mov
pop
cs
cmp
jge
andl
shlb
add
jno
xor
add
sarl
movsl
jo
xor
or
nop
cmpl
sub
xchg
inc
or
scas
jg
cmpl
mov
mov
push
std
sub
lds
movsl
sbb
add
xlat
cld
pusha
cli
adc
mov
out
sbb
mov
mov
cwtl
jno
fildl
mov
add
loope
jbe
mov
push
adc
mov
das
add
js
mov
insl
or
jmp
pushl
lret
jno
sahf
stos
leave
dec
push
xor
imul
fwait
js
lods
stos
adc
fidivrl
pop
inc
shl
pushf
or
loop
xor
movsl
sub
push
sbb
dec
xchg
add
fucom
cmp
push
ja
cmp
stos
pop
cmpl
sbb
fdivl
inc
movsb
pop
xor
push
push
js
mov
int
cmp
clc
and
adc
jge
or
adc
scas
gs
push
xor
mov
mov
lret
mov
mov
pop
inc
pop
mov
cld
in
mov
mov
pop
or
jp
addl
sbb
mov
jp
push
int3
inc
adc
mov
inc
subl
push
and
xchg
stos
pushf
aad
bound
gs
jns
xchg
mov
iret
mov
mov
es
mov
mov
loopne
or
xor
sub
syscall
pop
mov
and
and
cltd
pop
faddl
subl
call
cmp
out
rolb
dec
scas
inc
mov
rorb
das
daa
repnz
neg
imul
push
xchg
xor
jb
mov
add
movsb
fdivrl
ret
fdivp
xor
in
subb
test
push
in
mov
pop
jae
ljmp
loope
stc
xor
inc
sbb
xor
push
sub
jb
jne
rclb
push
cli
insb
loop,pt
pop
lea
lds
jo
fcomip
xchg
call
cmpsl
and
cltd
mov
cmpsl
loope
mov
loopne
in
pop
xor
shr
jg
rcl
out
pop
aaa
inc
mov
or
filds
sbb
pop
sub
cs
mov
daa
push
xor
or
xchg
cmpsl
mov
out
gs
lret
mov
rcrl
xchg
int3
jle
mov
gs
adc
sti
mov
fidivrl
imul
cmp
add
push
inc
and
inc
shr
push
pop
and
inc
xchg
pop
mov
pusha
pop
jns
inc
out
imul
xor
or
stc
or
popa
xchg
orl
subl
inc
inc
lea
leave
fidivs
movsb
jle
cwtl
fstpt
xchg
loope
mov
sub
cmp
mov
dec
and
push
cld
dec
sbb
stos
scas
mov
xor
sub
movsb
icebp
lock
ror
lahf
in
pop
shl
into
into
inc
cld
mov
adc
movsb
movb
gs
out
addr16
lock
aaa
push
mov
aas
lahf
sub
jne
xor
shrb
les
dec
aam
in
decb
cwtl
or
ret
inc
or
outsb
sub
icebp
repz
ljmp
inc
xchg
xor
mov
fwait
gs
pop
mov
enter
xor
stos
pop
inc
mov
xchg
in
cli
and
test
clc
loope
lds
test
and
mov
or
cli
pop
ja
inc
dec
dec
inc
push
push
scas
loopne
pop
shl
and
jle
stc
push
inc
xchg
push
mov
dec
mov
out
and
cmp
cmp
movsl
in
dec
sbb
adc
push
pushl
cli
dec
out
das
pop
sbb
rcr
adc
cs
xchg
fldl
dec
mov
mov
jae
ret
cmpsl
mov
dec
ss
xchg
push
leave
pop
mov
shrl
jmp
mov
dec
aas
dec
mov
sarl
in
dec
push
scas
push
aas
xchg
repz
jo
mov
pop
rolb
movb
movsl
fcmove
fsubl
pcmpgtw
ret
cmc
out
push
test
mov
rcrb
push
ret
mov
leave
in
inc
cli
mov
repz
shll
pop
jmp
ret
xchg
pop
aaa
fldt
ljmp
lcall
adc
sahf
cmp
mov
scas
inc
jbe
cmp
shrb
xor
std
aad
loopne
cmp
jne
or
sbb
push
add
add
mov
dec
jbe
fs
repz
test
icebp
in
pop
sub
dec
insl
inc
loope
jae
pop
mov
sub
aaa
orb
fstpt
dec
mov
xor
mov
pop
rcl
push
dec
and
xchg
test
inc
lahf
mov
sub
xor
push
enter
nop
std
pop
adc
adc
add
fimull
popf
push
divb
inc
decl
es
adc
mov
xor
int3
outsb
lds
popf
mov
les
pop
gs
pop
push
mov
test
push
aas
and
add
xchg
mov
movsb
dec
mov
lock
adc
popl
sub
xor
cltd
scas
mov
andl
cmp
out
pop
cmp
fists
and
loope
xor
dec
mov
mov
mov
mov
add
sbb
imul
pop
mov
in
adc
stos
cwtl
mov
data16
pop
adc
jbe
push
xorl
xchg
clc
inc
fisubrs
imul
or
nop
mov
jge
fwait
push
push
test
and
test
lods
fwait
loop
ja
push
scas
repnz
jp
insl
dec
imul
jns
pop
orb
fwait
mov
sbb
les
sbb
divl
xchg
outsl
xchg
clc
sub
div
gs
add
mov
jp
cmp
xchg
enter
fisttps
sarb
push
xor
inc
aas
dec
sbb
out
xchg
shll
cs
sarl
sbb
mov
push
popa
and
ja
je
mov
xchg
push
xchg
ljmp
fwait
arpl
sahf
outsl
imul
hlt
clc
mov
push
and
dec
mov
es
aam
xchg
mov
push
movsb
push
xchg
push
jns
add
out
ljmp
mov
stos
lods
stc
ret
pop
push
rcr
mov
xchg
imul
fildl
je
and
div
lret
inc
lods
sbb
mov
pop
cli
movsb
test
push
inc
jl
cld
mov
frstpm(287
popa
jp
pop
jp
jg
mov
fcmovb
or
push
mov
push
inc
shlb
adc
fbstp
shlb
repz
imul
cli
repnz
cwtl
pusha
dec
mov
mov
loope
xchg
mov
imul
aad
cmpb
adc
inc
fwait
ljmp
inc
and
pop
dec
or
movsl
jb
cmp
out
sub
stc
push
arpl
push
daa
in
rcr
into
mov
in
stc
in
push
jno
push
push
roll
mov
push
adc
push
mov
sbb
aas
fs
jmp
bound
jle
in
je
into
cmp
xor
aas
ret
fcomps
cmp
pop
addr16
and
arpl
add
ret
jle
sub
cmp
aam
inc
xor
stos
jecxz
inc
jp
nop
cmpsl
es
mov
imul
jmp
stc
mov
and
inc
mov
fisubrs
lock
inc
push
sub
fnstcw
jl
xchg
rcll
or
aad
shlb
jo,pn
jge
xor
lret
sbb
clc
loopne
or
xchg
inc
rcl
sbb
ret
push
cs
push
sub
cld
mov
mov
sub
daa
enter
jmp
cld
inc
mov
das
pop
sbb
sbb
mov
scas
mov
test
mov
call
cwtl
out
cld
in
pushf
insl
sbb
stc
lret
gs
or
inc
jge
pop
and
fdiv
mov
jl
fadd
mov
mov
mov
mov
xchg
inc
scas
flds
add
ss
xchg
arpl
inc
xchg
pop
lret
fnsave
scas
jae
adc
sub
inc
popf
ljmp
push
dec
vmread
scas
jo
dec
xorb
lds
jge
push
aaa
adc
or
push
loopne
ljmp
dec
push
xchg
push
fsubl
xor
out
fldenv
cwtl
xchg
dec
sbb
addr16
mov
popa
pop
mov
cmpsl
xor
aam
or
jg
push
lcall
jmp
cmp
xor
sub
mull
add
sbb
clc
cmpb
icebp
xlat
data16
sbb
aas
ds
in
or
mov
fwait
and
test
inc
inc
gs
push
outsb
ja
ljmp
setle
push
and
dec
rol
lods
push
cwtl
xchg
fistl
iret
jl
xchg
repz
xchg
and
rclb
mov
out
fdivl
jmp
inc
ja
push
lret
insl
outsl
scas
in
xor
lcall
test
add
hlt
mov
fcompl
fdivrs
push
repz
pop
movsl
push
mov
sbb
xor
pop
ja
dec
inc
mov
in
or
aad
mov
repnz
dec
arpl
int
fiadds
out
pop
jg
jne
sbb
les
mov
movsl
cs
xor
data16
or
mov
pushf
ss
dec
sahf
xchg
ja
adc
mov
int
in
pop
data16
scas
sbb
fs
mov
aam
inc
xchg
out
dec
or
mov
cld
popa
mov
push
int3
add
jl
pop
xor
xchg
push
loopne
sub
pop
bound
imul
stos
xchg
pop
imul
outsb
push
mov
pop
and
sub
dec
pop
cmpsl
out
sbb
or
sub
sahf
sub
adcl
lahf
mov
andl
xor
stos
test
fcoms
dec
adc
xchg
lahf
add
cmp
lahf
mov
cmpsl
fnstcw
cmp
movsb
jmp
push
out
enter
add
inc
lea
mov
mov
insb
decb
or
mull
and
or
negb
stos
mov
mov
inc
into
cmp
shrl
xchg
mov
add
das
xchg
pop
sub
and
pop
adc
pop
cmp
into
stos
or
in
shl
add
mov
fwait
je
les
pop
add
pop
in
lea
bound
insl
pop
push
int
xchg
mov
push
inc
dec
sub
lret
xchg
inc
xchg
ret
mov
lods
adc
test
out
int
test
ds
pop
jmp
mov
std
adc
sub
arpl
sbb
stos
nop
cmc
push
mov
mov
mov
xchg
pop
nop
pop
adc
adc
xor
lea
test
dec
xorb
pop
out
mov
sub
or
adc
pop
in
bound
or
mov
xchg
adc
lock
hlt
jae
ljmp
subb
popf
imul
cmpsb
and
and
pop
inc
stos
jle
add
pop
jge
push
sahf
ljmp
es
aaa
add
or
sub
pop
dec
cmp
jg
pop
nop
inc
enter
ja
call
dec
cmc
lret
stos
jle
push
sbb
stc
loopne
into
and
iret
pop
mov
mov
stos
int3
push
rolb
lea
dec
mov
aaa
test
out
mov
dec
jb
xchg
movsl
mov
cmp
cmp
lds
xchg
fists
cmp
js
or
xor
add
xchg
xor
and
sub
or
mov
repz
cmp
dec
push
data16
jnp
pop
pop
aaa
mov
push
aad
jl
inc
cmp
xchg
xlat
mov
ficomps
pop
xlat
test
sarb
jecxz
lock
cmp
xchg
roll
mov
sbb
xor
dec
xchg
mov
mov
sub
fwait
repnz
int
inc
enter
inc
and
outsb
das
out
shll
fwait
sbb
and
push
pop
adc
push
adc
leave
pop
aam
pop
ret
xor
cmpb
dec
xchg
push
enter
adc
jo
bound
aas
test
mov
mov
push
pop
or
push
xchg
sarl
ljmp
mov
push
add
inc
pop
xchg
inc
rorl
mov
rolb
and
insl
sub
inc
xor
fs
popa
sahf
ret
jb
js
scas
loope
mov
and
adc
and
xchg
xchg
pop
mov
mov
rol
aaa
add
movsb
pop
stos
push
pusha
into
mov
mov
dec
shlb
stc
xlat
add
xor
in
or
add
xorb
sub
jae
jns
cmp
inc
imul
notb
movsb
add
pushf
sbb
movl
pop
mov
and
add
jmp
sub
ret
push
cmp
mov
out
push
ror
outsb
xor
or
push
pop
movsl
lods
jmp
mov
scas
pop
xchg
pop
fcmovnb
movsb
scas
mov
xchg
int
xchg
add
insl
sbb
xchg
fildl
sub
stc
jae
push
xor
and
jo
sub
ret
inc
les
dec
sar
test
lahf
movsb
add
js
jo
cmovae
out
push
subl
inc
std
push
pop
sub
in
inc
fsubr
pop
and
dec
mov
adc
data16
rorb
and
imul
xor
icebp
add
nop
jb
cmpsb
out
and
imul
and
pop
sar
mov
jmp
gs
push
pop
int3
mov
xchg
das
add
jp
sbb
mov
cmpsb
aam
pop
xor
or
sub
jno
inc
push
xchg
push
cmpsl
addr16
dec
hlt
lcall
push
xchg
inc
sbb
out
mov
sbb
sub
mov
sub
dec
mov
push
pop
insl
jecxz
push
cmpl
add
fmull
movsb
dec
icebp
jno
clc
mov
pusha
pop
mov
ret
test
lcall
inc
jno
fsubrl
das
mov
out
xchg
mov
push
jg
cmp
xorl
addps
xchg
mov
jecxz
imul
adc
ficompl
jno
mov
scas
sub
sbb
mov
dec
jle
fcomps
jnp
fwait
out
std
mov
pop
jne
sbb
scas
aam
xor
popa
insl
lahf
rolb
jge
mov
jb
sahf
pop
lcall
jbe
test
push
loope
cmp
mov
loop
pop
pusha
aad
lcall
mov
or
mov
push
cmc
movsb
inc
fld
xchg
out
pop
sahf
add
cmp
repz
outsb
cmc
push
repnz
scas
repz
clc
testl
jp
andl
push
mov
dec
testb
sub
add
or
loopne
pop
rorl
ss
add
decb
fs
xchg
adc
popa
pop
mov
icebp
outsl
ja
enter
in
test
lock
pusha
pop
and
mov
clc
xor
inc
and
sarl
pop
adc
aad
dec
sub
push
js
pusha
sti
sbb
dec
xlat
pop
sbb
pop
nop
imul
inc
mov
scas
mov
repz
sub
lods
and
and
subb
or
adc
loopne
pop
rcr
adc
dec
lods
push
notl
mov
sub
test
jle
je
mov
pop
je
sub
mov
lret
mov
stos
shll
cli
push
movsl
ds
lods
lods
lret
mov
out
fucomi
test
roll
or
pop
gs
push
cltd
aaa
push
js
fmul
inc
pop
adcl
push
sbb
out
insb
sub
push
push
push
test
mov
mov
int3
jbe
xchg
inc
jns
sub
and
mov
mov
or
mov
sbb
dec
loopne
aas
xchg
aaa
je
inc
jno
pop
push
xor
inc
out
mov
mov
shlb
mov
je
out
call
inc
push
rclb
and
out
inc
pop
mov
jo,pt
int
stos
jle
ffreep
outsl
sahf
push
xlat
lret
test
pop
cmp
cmp
pushf
cltd
arpl
outsb
mov
les
cmp
in
sub
jle
mov
decb
daa
repnz
cmc
das
adc
pop
int3
jbe
add
mov
cs
pushf
stos
popf
mov
sub
mov
mov
pop
and
jae
jecxz
push
jmp
jne
adc
lcall
test
js
das
pop
sbb
push
pop
shlb
jecxz
cli
xchg
sub
and
dec
je
lahf
jb
cmp
jmp
lods
flds
lcall
pop
iret
movsb
mov
jmp
fnstenv
xchg
out
in
fistpll
adc
jo
pop
mov
push
add
sbb
arpl
inc
add
call
pop
movsl
cmp
jmp
nop
outsl
hlt
fldl
sub
lahf
in
nop
shrb
push
lock
in
jno
clc
loop
das
jae
jge
dec
xor
not
cmp
dec
addl
mov
cld
test
jb
xchg
adc
pop
testl
or
stc
xor
arpl
cmc
jns
dec
in
out
call
dec
loope
test
mov
pushf
fldl2t
sub
icebp
call
in
add
cmpsl
fildl
xor
les
lahf
mov
mov
mov
xchg
push
jmp
arpl
filds
mov
jns
xor
jg
mov
xchg
in
out
mov
sub
push
pop
into
nop
scas
xchg
add
in
sub
enter
fisubl
jnp
push
test
imul
jno
stos
adc
jle
out
addr16
lret
or
push
cmp
pop
push
xchg
push
shll
lea
or
xchg
adc
insb
mov
jbe
cmpsb
xchg
test
jp
jne
lahf
or
mov
or
mov
inc
xor
sti
push
adc
fadds
sub
sub
mov
and
popf
mov
push
fbstp
inc
xchg
inc
inc
add
ss
pusha
dec
add
sub
sbb
jp
ja
je
pop
sub
push
loopne
xchg
outsl
mov
mov
mov
pusha
dec
setne
shr
cs
repnz
sti
adcb
dec
iret
pop
pop
int3
push
pushf
movsb
ljmp
shrl
mov
or
loope
push
dec
loope
sbb
or
int3
pusha
jmp
xchg
mov
popf
push
mov
outsl
or
pop
mov
pop
stc
daa
aaa
iret
dec
lahf
push
adc
xchg
xchg
aad
hlt
out
nop
call
shrl
pop
push
test
negl
sahf
pushw
stos
jle
dec
out
aas
pop
je
hlt
sbb
rcl
mov
mov
dec
in
loopne
xor
jge
sbb
movsb
sbb
cmpsb
filds
mov
mov
cmc
pop
ja
icebp
jno
dec
stos
jg
stc
adc
lock
adc
sub
add
cwtl
dec
ss
pop
pop
and
inc
xchg
mov
rcrl
cmp
push
dec
mov
aad
in
jo
or
xchg
mov
mov
mov
sbb
inc
sbb
outsl
xchg
and
mov
nop
mov
cltd
adc
mov
outsb
jg
pop
push
stc
push
mov
push
repnz
push
dec
adc
test
pop
adc
cli
push
dec
test
lret
lret
lods
in
in
push
mov
mov
daa
cli
ficoms
jne
push
outsl
xchg
and
push
pop
outsb
xchg
sub
std
push
mov
push
mov
jmp
cld
and
mov
aam
add
cmp
xchg
xlat
ja
and
pop
pop
das
mov
loopne
dec
in
cli
movl
xchg
cmp
lahf
adc
add
xchg
dec
add
push
mov
cmp
aad
ret
fnstsw
push
int
lea
pusha
pop
dec
rcl
and
repnz
in
mov
sub
aas
in
add
mul
aaa
sbb
stc
mov
pop
lret
xor
xor
mov
aas
xor
add
add
mov
cltd
xor
sub
sti
push
sbb
aad
or
cwtl
in
arpl
push
dec
adc
test
enter
mov
mov
mov
out
lcall
icebp
pop
sbb
outsb
mov
rcrb
and
das
ljmp
bound
and
outsl
jns
sub
data16
lea
fsubrl
rcrb
sub
push
in
ljmp
cmp
sbb
inc
adc
push
adc
mov
pop
and
iret
or
in
repz
leave
pop
xchg
and
imul
and
push
dec
dec
pop
mov
mov
mov
push
sbb
sbb
test
xor
fwait
iret
push
sbb
sbb
fdivr
outsl
jb
or
mull
popf
cmp
add
sahf
dec
cs
out
jmp
cmpsb
or
adc
in
inc
pop
mov
cmp
sbb
scas
add
pop
xor
sbb
mov
cmp
xchg
mull
or
add
in
shll
loope
movsb
inc
adc
int3
int
loopne
ss
or
or
and
fnsave
mov
dec
or
jge
push
adc
aam
add
pop
sbb
and
adc
fisubl
jae
aam
les
idivl
push
sub
mov
int3
push
lret
xor
out
pop
jecxz
jo
clc
enter
out
inc
push
push
shll
mov
push
lret
dec
cmp
scas
pop
stos
push
push
xchg
sti
inc
push
jnp
jmp
jne
xchg
sbb
loope
mov
xchg
inc
es
push
sub
pop
and
xchg
cmp
scas
mov
pop
movsl
aaa
call
sub
out
add
shll
mov
insb
mov
hlt
or
scas
mov
dec
sbb
jle
negb
and
or
out
outsb
or
scas
mov
test
jb
xchg
xchg
adc
mov
jl
daa
sub
mov
xchg
adc
outsb
fidivrl
aad
jno
and
cmpsb
mov
fldl
xchg
ljmp
cs
in
fdivl
inc
popf
sarl
xchg
stos
push
pop
fistpl
fs
out
pop
imul
stos
jnp
out
lret
int
loopne
das
rol
cmp
shrl
xor
push
xlat
pop
movsb
popl
imul
push
xchg
add
ss
lret
mov
in
rcr
ja
push
out
movsb
aam
push
jnp
adc
cmpsl
filds
pop
jns
add
xor
and
xchg
jns
jp
orl
jmp
in
mov
mov
sti
cmp
mov
sbb
std
movb
push
pop
mov
sahf
add
packsswb
pop
xlat
aam
pop
out
mov
add
xor
sub
ds
rorl
dec
orb
divb
das
mov
mov
inc
mov
ds
jnp
mov
bnd
imul
xchg
lock
pop
stos
jecxz
xchg
inc
out
test
addr16
add
cmp
jbe
xchg
je
stos
ret
movsl
arpl
test
sbb
flds
scas
dec
mov
lcall
jge
pushf
stc
cld
mov
jb
ret
xor
cs
mov
push
js
les
repz
call
and
xor
ret
test
jb
and
test
mov
or
cmp
imul
or
gs
and
sarb
inc
push
pusha
adc
pop
cmp
out
mov
push
pop
out
dec
push
inc
lock
or
lea
add
pop
popf
xor
xchg
ds
mov
xchg
aaa
jg
sbb
pop
stos
pop
pop
xchg
daa
mov
ficomps
xor
cmp
jne
xchg
push
rolb
mov
push
jb
arpl
outsl
les
push
outsl
stos
pop
insb
mov
outsb
or
cwtl
dec
ret
mov
test
add
mov
push
inc
xchg
out
lods
scas
out
lock
dec
and
add
cltd
pusha
int3
or
out
in
add
inc
add
mov
sub
lcall
jnp
pop
adc
xchg
je
mov
sahf
push
int3
jne
and
xchg
dec
sti
cmp
add
mov
inc
mov
cmp
cmpsl
pop
movsb
sbb
cmp
sub
out
jmp
dec
and
stc
ror
inc
lcall
imul
ljmp
div
adc
sarl
int3
ja
aas
ret
inc
aam
inc
jmp
cmp
or
mov
jmp
ds
xchg
mov
sbb
mov
fwait
movsb
mov
fistpl
sub
imul
xchg
inc
fcomps
xor
cmpb
dec
xchg
fisubrs
push
adc
imul
int
sub
xlat
lret
ret
fdivs
scas
add
stos
push
ss
push
test
cltd
mov
sti
shlb
insl
clc
jbe
mov
gs
nop
xchg
push
push
inc
popa
ds
cli
ror
call
push
jnp
bound
movsb
daa
mov
cli
cmp
add
xchg
jl
xorl
jge
jg
push
adc
clc
addr16
dec
pop
mov
pop
pop
test
push
cli
adc
xchg
iret
pop
push
call
popa
movsb
repz
xor
das
inc
movsb
mov
jo
fwait
lret
cwtl
sbb
popa
iret
aaa
cmpsl
aaa
lods
cwtl
cltd
push
loop
cmp
fidivs
adc
cmpsl
jle
jle
pop
aaa
dec
dec
dec
dec
xor
stos
push
rep
ljmp
outsl
fisttps
pop
and
sbb
push
adc
hlt
mov
lock
jns
lcall
dec
add
insl
jecxz
flds
add
push
mov
sub
scas
jns
popa
mov
aam
mov
loope
mov
enter
clc
rcl
sub
push
fists
in
popa
aas
sub
jo
sbb
jo
fldenv
enter
jge
clc
fsubp
sub
mov
cmp
test
fistps
xor
shrb
icebp
mov
test
fmuls
pop
jmp
add
movhlps
inc
inc
cmp
jno
aaa
outsb
pushf
and
ss
cmp
aas
fdivr
gs
xchg
xchg
in
filds
jg
loope
inc
jne
mov
shr
ja
ljmp
xor
sub
das
pushf
scas
inc
loop
xor
call
in
adc
jae
pop
cmc
push
aaa
sub
aam
rol
mov
pushf
mov
imul
into
dec
and
mov
ret
enter
insl
adc
inc
adc
sbb
js
gs
add
push
lcall
inc
in
jnp
xor
push
adc
jmp
push
mov
faddl
roll
inc
adcl
sub
push
pop
pop
rolb
pop
push
aad
mov
nop
scas
fadd
inc
or
sahf
les
xchg
aam
stc
cmp
or
jno
push
dec
pop
out
das
xchg
mov
mov
jmp
testb
cmp
bnd
iret
mov
jl
xchg
xchg
out
dec
push
push
shll
pop
jmp
enter
xchg
loope,pn
imul
mov
fnsave
loope
sub
pop
out
ss
dec
sub
cltd
sbb
inc
add
mov
mov
xor
popf
dec
mov
mov
push
movsb
push
dec
lock
xor
mov
lock
inc
in
fdiv
and
sbb
sbb
fsubl
jno
insb
int
push
push
pop
mov
out
pusha
mov
dec
dec
pop
lcall
loope,pn
adc
xchg
pop
xor
jb
in
push
out
add
ffree
cmp
xchg
idiv
nop
insb
add
icebp
cmpsl
mov
loop
ss
or
inc
lds
sbb
sbb
xor
xchg
sbb
pushf
loope
fucom
or
cmp
sub
or
and
ljmp
xchg
cwtl
gs
cmp
sub
or
sub
shll
and
adc
xchg
xor
jb
inc
xor
fcmovne
jecxz
rep
in
pushl
and
fnstsw
cmc
cmp
mov
pop
imul
push
dec
stos
xchg
bound
xor
mov
call
lret
sarl
lock
sub
xor
fnstenv
int3
rcl
push
ds
sbb
push
cmp
in
lea
shll
and
mov
push
sbb
js
das
adc
icebp
data16
lods
stc
in
sbb
mov
outsb
sbb
rorb
cmc
mov
push
xlat
xor
shrb
dec
add
ja
sub
or
orl
popf
shlb
in
or
sub
and
int3
push
pop
daa
lret
or
xchg
mov
jge
or
in
fsubl
int3
cmpsb
mov
les
repnz
mov
ja
shl
scas
mov
mov
mov
adc
sbb
out
lods
int3
call
sbb
lahf
insb
repnz
es
ds
push
aaa
into
cmp
adc
int
inc
shll
push
add
mov
das
gs
mov
mov
jge
pop
push
inc
and
repnz
lahf
push
sub
fbld
push
arpl
out
mov
sarl
test
push
cli
loopne
or
mov
fldcw
mov
pop
scas
popa
dec
mov
rcr
push
mov
call
int3
test
xchg
inc
stos
rol
dec
jae
xchg
add
clc
push
adc
mov
lods
pop
dec
pop
xlat
and
outsb
flds
lock
push
xchg
jle
hlt
add
stos
push
xor
dec
mov
adc
xchg
mov
pop
test
insl
movsb
fstps
aad
sarb
xchg
fwait
adc
push
or
sbb
add
fisubs
insl
jo
pushl
arpl
push
mov
dec
mov
and
or
add
push
lods
test
sub
hlt
call
adc
shld
cmp
xlat
int
aaa
sbbl
xchg
shll
aam
xchg
imul
cs
lds
or
lock
sbb
in
mov
xor
push
sub
repz
sbb
cltd
jno
cmp
dec
into
cmp
mov
xor
popf
cltd
cmpsb
or
jle
rorb
out
xorl
xlat
in
dec
ret
adc
scas
imul
fcoml
jl
andb
popf
mov
fnstcw
or
repz
mov
sbb
shrb
es
or
inc
loop
mov
pop
pushf
lret
mov
hlt
mov
cs
xchg
popa
add
mov
pushf
adc
cmpsb
imulb
xor
cmp
push
jp
pushf
lods
sahf
test
stos
sbb
testl
or
and
sbb
pop
iret
adc
xchg
mov
ret
movsb
push
fnstcw
cmc
fidivrs
dec
dec
jmp
lea
mov
push
je
ja
movsb
lods
cmpl
scas
mov
lahf
lock
cmp
sub
pop
cmp
adc
push
adc
jb
lods
or
pop
bound
mov
mov
jmp
jge
pop
rcll
aam
or
cltd
shrb
dec
ret
loopne
imulb
call
push
cli
popf
ret
inc
roll
int
fimuls
stos
sub
daa
incb
pop
jecxz
push
inc
xor
mov
pop
cmp
in
mov
or
out
xchg
sub
outsl
sub
shlb
cmp
dec
inc
jne
push
xlat
mov
ficoms
aam
call
cwtl
inc
fwait
xchg
ljmp
test
cmpsl
rcll
scas
push
cmp
clc
fisttps
and
jb
mov
dec
frstor
xchg
mov
test
shlb
scas
push
sbb
loop
mov
dec
lahf
test
mov
rol
loop
movsl
hlt
and
push
aad
int
outsb
push
pop
dec
sbb
dec
lea
xor
push
sbb
push
mov
and
push
pop
sbb
lcall
sahf
adc
jmp
arpl
popa
repnz
stos
fisttpll
dec
inc
dec
pop
mov
add
ja
cmp
pop
repnz
cmc
lcall
mov
out
xchg
xor
enter
mov
jns
push
mov
dec
lahf
imul
inc
mov
ja
outsl
ljmp
in
pushf
sahf
push
push
sarl
das
insb
and
fidivrs
fildll
fmuls
or
out
adc
sbb
adc
xlat
dec
sbb
test
dec
repnz
shr
push
mov
subb
push
sahf
sbb
pop
inc
loop
dec
and
idivb
and
mov
les
inc
pop
add
loopne,pt
mov
sbb
pop
push
sub
and
sbbb
call
mov
jb
xor
xor
and
jmp
inc
pusha
jne
jbe
add
mov
jmp
rcll
push
imull
lcall
popf
pop
fmuls
push
or
test
adc
push
sti
xchg
mov
aad
scas
jo
or
daa
and
adc
lds
xchg
nop
adc
hlt
xorl
cwtl
ja
mov
sub
loopne
mov
inc
mov
subl
xchg
stos
sbb
cmp
inc
sti
adcl
push
shlb
aam
xchg
sub
jp
pushf
mov
and
sub
addb
pop
ficomps
fsubr
in
cmp
xchg
inc
add
push
pop
pop
iret
out
mov
mov
add
dec
andl
pop
mov
sbb
dec
fsubrp
add
pusha
enter
aad
sbb
push
inc
lcall
inc
sub
sub
mov
push
out
test
mov
mov
mov
aad
popf
addr16
or
cltd
jne,pn
sub
loope
jge
or
pushf
sub
shl
ret
mov
stos
mov
movsl
sub
aam
jae
mov
addr16
jno
jns
test
int3
popf
cs
sbbl
lahf
mov
jp
mov
adc
dec
jl
stos
mov
imul
jl
mov
cli
aaa
mov
adc
and
lret
out
sub
jno
cli
ret
mov
and
mov
add
or
cmc
lock
sbb
push
cmp
cmp
rolb
subl
scas
shll
cmp
pop
insb
icebp
jge
addl
inc
lret
adc
subl
stc
push
stos
imul
xchg
imull
sar
sub
mov
scas
bound
dec
sub
push
mov
mov
sub
jmp
pop
or
dec
pop
dec
pop
lea
pop
xlat
lock
mov
ret
jmp
dec
push
orl
xchg
push
icebp
dec
push
out
inc
jb
lods
jg
push
aaa
bound
loop
mov
inc
inc
jae
push
outsb
inc
test
jecxz
lahf
jbe
xor
pop
fisubl
lahf
shll
mov
cmp
mov
out
insl
push
add
mov
ja
sbb
xchg
dec
leave
dec
and
inc
inc
add
movsb
jmp
in
dec
or
pop
sub
sbb
int
cmp
pop
iret
sub
mov
in
or
cwtl
add
lods
or
imul
sbb
cmp
icebp
adc
addr16
mov
inc
push
lea
icebp
scas
push
insb
push
jne
xor
int
iret
cli
inc
inc
ret
add
adc
test
xchg
mull
or
jae
rcl
js
and
mov
adc
out
scas
sahf
mov
fadds
and
sahf
fisubrl
gs
xor
pop
test
inc
mov
xchg
in
ds
lods
lods
mov
push
int
pop
push
cmp
das
cmova
scas
icebp
outsb
repz
xor
repz
clc
iret
or
mov
add
test
cmc
mov
or
ja
add
mov
rcl
enter
js
adc
into
pop
jecxz
stos
pusha
inc
mov
cwtl
outsl
pop
ljmp
test
pop
xor
leave
inc
lock
jns
fnstcw
inc
orb
movsb
add
dec
ja
dec
add
cmp
push
dec
cmp
mov
lods
in
jo
in
mov
imul
repnz
adc
jp
push
outsl
xor
aad
mov
xchg
push
popa
jge
flds
fnstenv
or
das
loope
dec
pop
or
stc
addr16
jl
adc
in
lcall
mov
outsb
sbb
lret
xchg
cwtl
in
mov
insl
xchg
jmp
mov
push
and
imul
sbb
js
dec
test
xorl
cwtl
xor
xchg
outsb
arpl
sbb
aaa
sbb
and
fcmove
mov
mov
andb
inc
fldenv
lods
dec
leave
mov
mov
popf
aam
inc
jns
or
mov
fcmovbe
mov
mov
jb
adc
cld
testb
inc
pop
mov
sub
or
bound
sbb
mov
mov
xchg
das
sub
pop
adc
sbb
ss
sbbb
xchg
pop
lds
test
adc
das
mov
mov
mov
mov
shlb
lret
cld
pop
sbb
ret
ss
and
outsl
sub
adc
cwtl
and
xchg
mov
and
jg
cld
shll
outsb
mov
mov
jo
cmp
idiv
jmp
push
or
cmp
shlb
pop
push
imul
aas
shll
jb
mov
jns
outsl
cmc
addl
push
cmp
pusha
or
stos
clc
incb
add
ffreep
cmp
aam
dec
std
jbe
mov
scas
push
loope
mov
push
sub
test
xchg
fiadds
adc
xchg
mov
inc
aaa
sub
jl
negb
jmp
add
mov
dec
lret
les
mov
or
int3
aad
pop
shl
mov
or
push
es
xlat
or
loop
outsb
ljmp
push
and
addr16
lcall
mov
clc
jne
cld
cmc
in
les
cmp
cmp
cmp
jnp
or
jl
add
inc
daa
insl
mov
sti
data16
inc
add
repnz
sbb
cmp
adc
xlat
jae
push
add
cs
cmc
and
jbe
pop
add
cmpsb
les
mov
iret
push
cmp
das
xchg
add
movsl
mov
sbb
dec
or
adc
repz
add
std
push
push
dec
icebp
jne
fstpt
dec
imul
xor
xchg
cmpsl
test
aas
insb
mov
xorl
ljmp
into
xchg
dec
adc
xor
cmpsl
jo
negb
imul
inc
lock
or
mov
sub
iret
xor
ja
or
push
jge
pop
sub
rorb
mov
ja
or
fnstsw
pop
int3
gs
push
std
lock
ja
pop
sbb
cwtl
sbb
insb
push
jmp
inc
pop
mov
jmp
or
arpl
sbb
jo
ds
push
mov
fwait
jmp
or
mov
add
js
lds
out
mov
imul
push
mov
outsl
roll
or
stc
stos
mov
mov
or
insb
rcrl
inc
push
out
or
mov
xchg
outsl
rorl
pop
or
xorb
sarb
leave
inc
cmpsl
pusha
loope
dec
mov
dec
std
loop
mov
inc
aaa
or
jne
push
dec
push
pop
nop
jb
test
lahf
bound
inc
mov
mov
xor
out
movsb
push
pop
cld
xor
loop
aaa
add
sbb
pop
sti
xor
insl
cmpb
mov
pop
sub
test
loope
or
jecxz
xorb
fcoml
cmp
fsubl
sub
mov
subb
ret
loop
mov
das
loopne
icebp
leave
mov
movsb
stc
sbb
push
dec
mov
jle
or
xchg
bound
insl
xor
sub
rorb
test
loope
xlat
mov
iret
ljmp
fwait
dec
cld
jo
cmp
inc
in
ret
cmpl
and
xchg
addb
mov
pop
push
jno
mov
dec
sbbb
in
add
repnz
jbe
jecxz
lds
jp
mov
std
add
lock
test
mov
addr16
lods
in
add
mov
mov
pushf
mov
dec
cmovs
aaa
xor
daa
idiv
mov
sti
xchg
and
mov
dec
jl
cmp
dec
cld
or
icebp
xchg
repz
nop
push
cmp
or
mov
sub
fucomp
ja
ret
or
stos
jae
test
and
cli
imul
popa
mov
pop
pop
push
inc
jne
es
in
jae
lret
cwtl
jge
push
mov
mov
dec
cmp
mov
sub
cmp
mov
js
bsr
movsl
mov
xlat
test
flds
sbb
insb
inc
insl
mov
ret
shrl
jl
lock
xor
jmp
ror
fcmovnb
lcall
rcrl
mov
xchg
mov
rorb
lcall
les
dec
sub
sbb
aam
dec
lock
gs
insl
sarb
jnp
mov
sub
inc
add
cmp
mov
and
push
outsb
or
pop
pop
mov
push
dec
lahf
fs
fsts
cmp
cmc
inc
testb
mov
add
adc
push
test
das
inc
arpl
jmp
cmp
cmp
fiaddl
cli
ja
xchg
adc
jge
push
adc
mov
cmp
je
aaa
fildll
jb
sbb
rcrl
int3
and
jne
bound
out
sub
fcmovbe
gs
pop
sbb
rcrb
mov
bound
cli
jmp
push
cmp
mov
ja
jmp
stos
jb
incb
xor
sbb
insb
pusha
jp
xchg
mov
xor
mov
jbe
lahf
sbb
cmp
add
adc
jbe
or
or
iret
pop
push
cmp
mov
inc
in
jle
cmpl
inc
xor
inc
fs
shrb
dec
cmpsb
xchg
loopne
add
aam
stos
adc
push
in
test
movsl
dec
data16
pop
sub
lea
aad
test
pop
mov
or
mov
gs
jecxz
std
adc
rcrl
loope
es
enter
sub
inc
sbb
ficoms
or
mov
cmp
push
outsb
xor
fstpl
mov
cmpsb
xchg
dec
inc
nop
or
outsb
cmc
jg
enter
ret
insl
push
add
les
sahf
das
pop
pop
popa
and
mov
jne
int3
add
lcall
ss
adc
mov
in
fstl
mov
sahf
push
push
xchg
jecxz
xchg
test
hlt
sbbb
roll
pop
xchg
mov
mov
lds
pop
push
rcrb
lods
scas
push
mov
lret
push
shr
mov
scas
jl
cmpsb
fimuls
mov
mov
scas
jae
sub
cmpxchg
push
push
or
mov
ljmp
mov
ret
jbe
push
xchg
and
pusha
xchg
push
add
addb
shlb
sub
iret
call
pop
cmc
pop
xchg
add
in
in
jp
xor
xchg
cli
or
xchg
inc
push
addr16
adc
pop
pop
sahf
pop
shl
pop
sahf
cmp
loope
xor
nop
dec
pop
add
call
push
adc
clc
lret
mov
es
ret
int
and
mov
dec
sahf
ret
jmp
add
enter
or
dec
daa
or
das
test
ss
ret
mov
pop
inc
sbb
xchg
lods
cmp
loop
xchg
jno
outsb
xchg
mov
cmpsb
ss
xchg
cmc
xchg
jmp
pop
jnp
cmp
loope
push
ret
adc
jle
xchg
jge
or
insl
aaa
sti
or
scas
xchg
inc
leave
aaa
mov
mov
lahf
add
jb
mov
push
sti
push
sbb
cmp
outsb
cwtl
jne
jle
vpcmpgtb
maxps
dec
mov
cli
xchg
mov
and
mov
dec
jo
inc
lods
jecxz
inc
pop
fsubr
mov
pop
mov
outsl
mov
test
sbb
mov
ffree
stos
mov
add
jne
cmpsl
jne
mov
xchg
xchg
pop
icebp
imul
dec
outsl
xor
in
test
lds
xchg
pop
scas
subb
imul
cmc
mov
mov
or
mov
pop
es
jecxz
xchg
aam
shll
xor
inc
xor
pop
iret
clc
ja
f2xm1
push
adc
pusha
shlb
int
aaa
push
inc
cld
mov
addr16
xor
mov
lock
sti
std
mov
sahf
popf
mov
pop
cmc
stos
xchg
xor
mov
aad
stos
dec
add
dec
xchg
xor
lret
jbe
call
inc
mov
call
cmp
pop
cltd
push
ja
js
mov
push
ds
inc
sbb
xor
sbbl
ss
lcall
sbb
inc
pop
pushf
dec
movsb
out
adc
inc
icebp
aad
cmpsb
and
jae
insb
cmp
mov
inc
jae
lds
mov
ficoml
sarb
add
add
or
pop
push
adc
movsb
fmuls
cmpsb
or
push
pop
and
mov
outsl
dec
jecxz
call
xchg
jne
xchg
loopne
imul
loopne
sahf
mov
push
xor
sti
leave
popa
jg
outsl
lret
xor
pop
scas
stos
jne
xchg
popf
cmp
and
mov
ljmp
push
xchg
jecxz
xlat
shll
cmp
xchg
mov
test
dec
adc
inc
inc
add
sbb
push
pop
sbb
sub
adc
sub
push
insb
mov
adc
hlt
in
sub
pop
fidivrl
inc
imul
inc
sti
cld
scas
pop
cld
lods
lcall
ret
inc
or
mov
aaa
out
push
and
stc
jp
ss
push
or
cmp
pop
cmp
insb
aaa
cmpl
mov
dec
pop
mov
dec
outsb
aad
sub
cmp
stos
pop
or
and
mov
lock
sbb
lock
adc
addr16
mov
repz
fsubrs
cmp
fnstsw
pop
loopne
pop
mov
inc
adc
lock
aaa
ret
adc
test
loope
sbb
shl
nop
rcrl
sbb
int3
enter
clc
iret
adc
out
sahf
jo
pop
add
pop
mov
or
call
ret
mov
sbb
ret
sub
xor
icebp
cmpl
into
cmpb
push
mov
xor
xchg
push
dec
push
fs
dec
cmc
aam
cmc
xorb
mov
pop
hlt
rorb
stos
mov
cmp
mov
xchg
lcall
fldcw
mov
sbb
scas
outsl
xchg
lcall
iret
dec
or
cmpb
shlb
mov
ss
fdiv
mov
dec
leave
fcomi
cmp
jmp
mov
fs
js
test
cld
push
cmp
inc
sub
repnz
subb
ds
cmpsl
pop
pushf
movsl
mov
imul
add
adc
sbbl
sahf
pop
in
pop
lds
xorl
lods
adc
out
cli
push
hlt
stos
fadd
mov
bound
call
enter
xchg
xchg
daa
pop
pop
ret
fsubrs
add
je
enter
arpl
sub
aad
mov
sldt
add
hlt
ret
jns
test
test
ds
inc
mov
movsb
repz
push
xor
inc
mov
icebp
in
movsl
dec
xchg
mov
das
push
int
lea
aas
sbbb
and
adc
xchg
pushf
xor
sbb
adc
clc
mov
clc
lret
test
pop
std
push
loope
cmp
inc
dec
dec
cmpb
iret
mov
jbe
popf
mov
out
or
fdivrs
add
test
jmp
nop
lahf
test
mov
push
add
mov
inc
mov
add
js
adc
idivl
testl
lock
or
scas
sahf
mov
ds
mov
nop
or
out
add
test
xchg
pop
mov
sti
enter
nop
inc
adc
mov
jmp
adc
push
lock
testl
mov
mov
pop
lods
pusha
icebp
jb
mov
pop
adc
pop
adc
ds
sbb
push
test
insl
je
or
add
push
mov
jl
lahf
adc
ja
lea
and
jl
pop
sti
sbbb
cwtl
or
push
mov
in
inc
hlt
xchg
xchg
call
dec
repnz
mov
nop
shll
repnz
scas
dec
adc
fs
inc
cld
dec
into
mov
rcll
push
pop
sub
sub
inc
lods
jae
js
or
out
mov
xor
in
mov
in
jnp
lock
mov
inc
adc
scas
mov
pusha
mov
jne
sbb
test
lods
sbb
xor
adcb
mov
xchg
test
rcll
popa
testb
lods
inc
imul
sbb
or
scas
sbb
repnz
cmp
push
push
jbe
popf
repnz
ljmp
out
mov
mov
inc
inc
push
rcrl
cmpb
shl
int3
inc
outsb
adc
dec
mov
iret
arpl
movl
push
fdivrl
aad
jo
sbbl
popa
jae
aam
outsb
and
lds
je
and
mov
inc
nop
xlat
xor
inc
in
xchg
mov
aam
push
call
add
dec
pushf
ljmp
inc
in
lods
sbbl
jg
mov
out
notb
inc
and
out
pushf
cmp
data16
xor
test
rclb
or
push
or
add
loopne
inc
push
fistpll
jecxz
lahf
sbb
sub
js
fcmovnb
mov
dec
push
and
imulb
push
pop
sti
xchg
mov
stos
ljmp
add
add
push
mov
hlt
faddp
loop
or
out
adc
sbb
lea
loopne
xor
out
sbb
add
insb
xor
out
iret
inc
inc
leave
push
xchg
add
inc
pop
mov
dec
pop
outsl
and
stos
or
jg
ret
paddusb
dec
sub
cmpsl
repz
xchg
sti
jp
ret
sub
push
ret
scas
sbb
cmpl
loopne
xor
fadds
and
cs
popl
inc
test
xchg
ja
bound
xlat
loopne
push
mov
jecxz
push
adc
jp
and
stos
imul
into
jbe
dec
les
pop
or
add
jge
mov
out
mov
pushf
cmp
mov
cmp
fwait
stos
insb
loopne
insb
pop
mov
push
push
loopne
imulb
xchg
ljmp
sbb
and
aaa
push
adc
push
xchg
cmpb
into
aad
cmp
pop
data16
and
xchg
inc
test
divl
sbb
repnz
mov
mov
clts
pop
enter
xchg
push
in
je
cmp
imul
pop
xchg
cmp
dec
iret
adc
fimuls
nop
cmp
cmp
out
mov
sub
addl
outsb
jmp
dec
loope
mov
inc
sti
push
fldt
ret
push
fldl
cmp
sbb
aam
shll
inc
and
test
inc
add
pop
push
js
repz
mov
cli
pop
lds
outsl
mov
out
divl
or
cmpsb
xor
pop
lds
adc
iret
mov
popa
sub
add
inc
imul
pop
shlb
mov
sub
ss
push
mov
mov
rorl
fbstp
adc
jp
dec
sub
jbe
jp
adc
dec
mov
cmp
jmp
pushl
mov
xchg
jmp
and
loope
aaa
cmc
mov
in
and
adc
add
push
test
fimuls
fdivrl
dec
icebp
nop
xor
sbb
inc
mov
dec
push
std
mov
or
xchg
xchg
mov
shrl
jne
xchg
jg
fld
xor
divl
pop
jmp
push
pop
mov
insl
mov
mov
inc
cld
mov
xchg
push
addr16
or
lds
cmp
dec
mov
xor
nop
stos
mov
imulb
inc
sbb
arpl
les
std
outsb
das
mov
xor
sbb
xchg
xchg
xchg
and
inc
adc
pop
stos
cmp
rolb
cmp
loope
mov
jp
ds
jae
movsb
dec
popa
cmpsl
sub
cli
or
outsl
loope
pop
lods
push
lret
sbb
mov
and
dec
test
mov
pop
mov
imul
iret
les
xorl
fisttpl
lahf
daa
mov
shlb
outsb
mov
notl
dec
ds
lea
xor
or
fwait
dec
pop
in
push
sbb
out
push
cld
shlb
aas
cmpsb
dec
pop
jns
adc
xor
jnp
daa
test
lock
dec
push
stc
fwait
int3
add
jnp
cmp
push
paddb
mov
movsb
mov
jns
or
clc
test
pop
sub
inc
sub
jge
lret
push
cmpsl
cmp
inc
daa
xor
inc
mov
sbb
fdivrl
roll
inc
or
mov
xor
out
add
jno
es
pop
lahf
sarl
mov
ficompl
mov
adc
fwait
dec
dec
pop
pusha
cs
adc
pop
mov
inc
cmp
lock
inc
mov
jno
jnp
cmpsb
inc
aad
lods
fstpl
adc
cwtl
es
out
dec
pop
daa
sahf
pop
fmul
adc
sub
daa
adc
mov
adc
sbb
pop
mov
sbb
fildl
std
insl
and
lret
into
inc
lock
cmp
mov
sbb
inc
bound
pusha
mov
fstl
testb
clc
cmp
xchg
adc
test
xor
lds
lods
pop
jl
mov
adc
lahf
or
loop
mov
xchg
jecxz
hlt
lods
inc
jno
cmp
push
push
jl
outsl
test
sti
pop
rorl
xchg
or
aas
rolb
cmp
nop
insb
cmp
add
add
jmp
xchg
pop
xor
jl
xchg
jp
mov
stos
mov
enter
dec
sub
or
in
push
movsb
stos
add
data16
or
inc
xor
sbb
and
inc
sub
or
jl
push
shll
mov
dec
mov
les
add
push
inc
dec
imulb
test
addr16
and
add
inc
incb
lcall
cltd
int3
push
roll
cltd
andb
enter
jbe
cmp
out
sub
jo
rclb
jmp
icebp
insl
and
rcrb
mov
ret
cmp
mov
sarb
daa
push
xchg
stc
sti
mov
ror
inc
jle
mov
imul
xchg
test
imul
fdivr
je
mov
pushf
pop
adc
stos
dec
sahf
cli
pop
mov
inc
pop
cmp
xchg
aaa
jo
hlt
lret
cltd
lahf
les
test
inc
ljmp
xchg
andb
inc
push
jg
test
mov
xchg
test
xor
jle
into
inc
sbb
mov
in
xchg
jg
dec
sub
sub
repz
push
jnp
cmp
insb
out
arpl
add
dec
popa
ret
loopne
sbbb
mov
mov
fwait
and
and
push
cmp
adc
mov
incl
mov
sub
jl
into
dec
adc
cmp
rorb
push
testl
mov
cltd
lahf
jno
inc
scas
mov
push
sbb
xchg
pop
jb
mov
push
fidivrs
andb
bound
sahf
aaa
pop
mov
mov
pop
adcb
fs
push
cmp
test
xor
pop
mov
daa
adc
aas
mov
pop
es
leave
add
inc
mov
pop
popa
repnz
sbb
inc
pop
ss
mov
push
jne
push
pop
imul
js
mov
frstor
xchg
fisubl
xor
xor
jnp
mov
and
push
aam
int3
jp
aam
cltd
push
clc
scas
inc
scas
jmp
inc
cs
daa
cmpsl
push
cmp
cmp
dec
or
sub
das
sub
hlt
iret
scas
cltd
jnp
fadds
imulb
and
leave
jl
inc
sub
jne
insb
fdivrl
fimuls
xchg
push
xchg
xchg
dec
addl
mov
dec
push
pop
popf
cmpb
int3
out
mov
fisttps
fcmovbe
addr16
sub
mov
adc
xchg
xor
and
lret
imul
mov
or
pop
cmp
push
mov
cmp
repz
dec
mov
mov
cmp
ret
hlt
or
clc
mov
in
xchg
in
icebp
pop
push
or
insl
mov
pop
js
or
in
mov
dec
dec
pop
call
fsubs
dec
adc
jnp
sarb
int3
enter
mov
or
add
das
inc
xor
cmpsb
icebp
and
fidivrl
das
jo
push
es
mov
pop
mov
inc
into
scas
movsl
and
in
stos
xor
cmp
sbb
pusha
cmp
mov
sub
jne
test
cmpb
aas
cli
pop
das
nop
push
push
jl
popa
vfrczsd
dec
pop
popf
or
jle
push
push
outsl
or
mov
push
dec
fs
dec
cmpsb
stos
call
mov
and
ss
icebp
mov
add
lret
movl
and
imul
adc
scas
rcr
push
test
repnz
push
mov
addb
clc
loope
xor
sub
call
lock
fiadds
subl
ja
stos
xor
dec
ud0
add
mov
jmp
loopne
dec
mov
in
sbb
das
je
mov
mov
das
jne
xchg
dec
out
sbb
rorl
pop
lret
loope
lcall
pop
push
cmpsb
outsb
jmp
loopne
insl
popf
call
xchg
dec
testl
sbb
call
push
je
mov
cmp
push
pop
xchg
xchg
inc
in
cmp
leave
mov
jecxz
setp
aaa
cli
aas
sub
shll
fmuls
push
outsl
je
out
mov
nop
int
push
ret
inc
sbb
xchg
mov
das
hlt
icebp
ja
pop
xor
int
and
ret
iret
ds
push
xchg
ja
inc
jl
fdiv
hlt
jge
rcrb
pop
xor
fnstcw
int3
push
cmp
ret
test
lods
lods
cli
clc
ror
and
add
mov
adc
test
mov
int3
popa
fiaddl
pop
int
loope
push
gs
lret
arpl
into
inc
cmp
aaa
popf
syscall
jns
add
sub
jge
ss
pop
xchg
mov
popa
out
mov
leave
inc
mov
into
or
inc
leave
push
mov
xchg
push
cmp
and
lahf
push
add
aaa
das
push
fmull
lret
ljmp
idivl
mov
adc
ja
xchg
arpl
adc
stos
iret
add
add
jmp
cmp
cs
inc
cmp
inc
roll
adc
call
xchg
imul
mov
out
push
and
loopne
mov
popf
mov
ret
mov
sub
repz
mov
lods
cli
mov
mov
or
xor
lcall
mov
inc
cmpsl
outsl
and
push
or
clc
push
lock
jmp
lahf
cmp
cwtl
push
cmp
loop
sub
je
cwtl
ror
push
or
imul
shlb
fstpt
ror
out
fldenv
jge
iret
jmp
xor
das
mov
push
xlat
dec
dec
jl
add
int3
dec
int3
mov
stos
arpl
scas
icebp
ljmp
xor
scas
lcall
lcall
call
dec
xchg
sub
div
loop
mov
in
imul
cmp
pop
dec
les
gs
aaa
movsb
hlt
push
sbb
aaa
jecxz
inc
ficoms
cmp
pop
adc
orl
or
mov
ret
shr
fimull
and
into
fistpl
mov
fstp
dec
aam
push
xchg
push
lods
cltd
lds
xor
mov
xor
xor
xchg
adc
adc
fcmovnb
int
out
iret
insl
and
inc
push
fstps
and
les
cmp
inc
and
scas
sub
mov
sbb
jmp
cmp
sbb
jne
mov
lea
inc
scas
mov
in
add
mov
adc
leave
adc
jae
lods
fidivl
rcrb
xchg
lea
rolb
adc
shrl
jecxz
shlb
bound
push
xor
repnz
iret
or
shl
imul
adc
lods
pop
jb
xorb
sti
cmp
int3
lock
push
fistl
sub
cmp
add
xchg
adc
cli
push
inc
jmp
xlat
movsb
inc
dec
bound
fldl
dec
or
pop
add
into
outsb
inc
in
push
fcmovbe
mov
push
mov
icebp
insl
cmp
les
mov
add
int3
cmp
xchg
and
dec
push
xchg
pop
jne
cmpsl
lock
xchg
cmpsb
mov
push
rep
mov
rcll
lds
imul
mov
aad
cltd
inc
pop
xor
xchg
enter
cmp
mov
sub
movlps
data16
lcall
nop
sti
mov
out
adc
mov
pusha
arpl
adc
popa
outsb
jnp
add
adc
and
pop
popf
cmp
cmp
ds
rcrl
push
int
ss
sub
gs
inc
sub
data16
add
inc
test
inc
fldcw
push
insl
lds
adc
mov
pop
jbe
cmp
add
shrl
xor
call
dec
scas
shrb
dec
jns
push
xchg
idiv
in
lds
sbb
ffree
iret
sbb
les
xor
aaa
cmp
out
sti
jo
mov
adc
inc
loope
push
jg
mov
loope
push
mov
jmp
arpl
mov
mov
inc
inc
fadds
xchg
aam
sarl
test
outsb
scas
sbb
and
insb
js
cltd
add
sub
xchg
insb
lea
xor
fcoms
scas
addr16
adc
cltd
test
lods
xchg
movsb
je
mov
xchg
jno
mov
add
insb
push
fsubl
mov
mov
pop
sbbb
add
push
jb
pusha
sbb
fistpl
mov
rorb
outsl
sti
addr16
mov
mov
sub
nop
call
mov
cmp
fxch
cmp
sbb
iret
jbe
sbb
or
and
jbe
push
movsl
sbb
test
frstor
pop
xchg
add
push
jp
pop
add
xor
cwtl
testb
mov
inc
jne
and
popf
stos
adcl
sarl
push
into
cli
jb
xor
nopl
xchg
jmp
fdivrs
dec
sub
pushf
arpl
ret
rcll
push
cmp
movsl
push
cmpsl
mov
dec
jl
loope
push
gs
mov
push
aas
std
clc
aam
sbb
aam
lahf
and
adc
inc
xor
scas
or
shll
aad
mov
fwait
mov
xor
imul
dec
rcrb
ljmp
dec
ss
in
and
jle
repz
cmp
jge
inc
addr16
mov
fldenv
popa
cmp
pop
adc
aaa
push
xchg
cmp
add
lods
inc
pop
pop
gs
xor
xlat
fisttpll
mov
jne
test
dec
ds
test
popf
sub
xchg
dec
cmp
ja
mov
enter
out
dec
repnz
mov
outsl
sub
or
cmp
ljmp
jo
xchg
xchg
or
cmc
jnp
jp
inc
add
cli
js
imul
xchg
orl
xchg
lds
shll
and
sarl
jns
ret
test
pop
lock
dec
mov
add
sub
mov
push
cs
mov
xchg
push
cmc
and
pushf
pop
push
xor
cli
pop
pop
pop
inc
ss
inc
sbb
xchg
cltd
mov
xor
fistl
imul
pushf
sub
int
test
cmp
fiaddl
xor
das
out
jp
dec
xor
jo
vaddsubps
sbb
cld
aam
mov
popa
mov
jno
pop
fldt
inc
or
mov
aas
inc
or
mov
pop
int3
frstor
and
arpl
lock
sub
fs
adc
icebp
add
xlat
rol
mov
rclb
xor
mov
jnp
insl
test
xchg
or
push
shlb
ficoms
mov
xchg
leave
sbb
fcom
fbstp
mov
xor
jmp
mov
dec
js
pop
sub
pusha
das
dec
jmp
ljmp
jns
int3
inc
out
mov
xlat
sbb
cld
mov
sbb
xor
and
add
cli
and
sbbl
sbb
or
and
add
mov
xlat
sub
clc
sti
test
sbb
daa
cmp
stc
push
mov
cwtl
xchg
loop
jno
je
xor
jge
pop
leave
bound
mov
pop
sbb
mov
adc
cs
imull
jnp
sbb
addb
jno
pushf
mov
mov
test
arpl
lret
jmp
add
mov
inc
mov
sub
repnz
cmp
mov
inc
or
pop
mov
inc
jnp
pop
clc
lds
or
and
test
mov
push
int
lcall
push
jecxz
loopne
push
in
add
fcomp
inc
popa
mov
movsl
cmp
pop
shll
iret
jnp,pt
lods
sub
mov
sbb
jecxz
cmp
lret
pop
cmp
imul
pop
lahf
jne
movsl
ret
push
inc
jp
loop
and
repz
lret
ret
and
call
dec
stos
push
jbe
push
repnz
xor
mov
jnp
imull
rclb
cmpsb
int
ret
xor
add
out
lcall
push
addl
xchg
mov
sarl
popa
cmp
inc
testl
sbb
shlb
icebp
inc
sbb
std
mov
or
sub
dec
xchg
lret
mov
sarl
lret
push
mov
mov
mov
and
idivb
cmp
aad
xchg
or
mov
aaa
std
cmc
xchg
jno
cmpsl
adc
ror
test
cmc
pop
add
jo
ds
sahf
push
test
or
iret
mov
jmp
xchg
or
mov
xor
xor
pop
jg
dec
stc
jp
addr16
xor
add
icebp
cmp
rcrb
jns
pusha
mov
jge
in
loop
movsb
ja
pop
jl
neg
sbb
pop
dec
mov
dec
stc
xlat
xchg
sbb
ret
add
jnp,pn
sbb
lock
mov
xchg
ret
xchg
test
mov
or
mov
lea
repz
negb
add
sub
or
pop
call
inc
jbe
mov
mov
jl
movsb
xchg
add
sti
loopne
or
and
push
fisubrs
sub
push
lcall
push
xorl
jb
outsb
pop
nop
je
fimull
jb
rclb
movsb
ljmp
adc
out
arpl
xchg
add
xchg
aas
fistpll
addr16
push
dec
add
push
loop
jnp
insl
pop
mov
pop
pushf
iret
aam
mov
jno
hlt
inc
sub
mov
movsb
ds
fcomps
insl
mov
out
inc
cmp
push
adc
int3
jmp
xchg
xor
insl
ret
popa
loope
daa
add
imul
push
popf
mov
lock
hlt
int3
jle
icebp
sub
lds
pop
incl
iret
sbb
lds
loop
push
dec
rclb
xchg
xchg
cmp
mov
scas
push
xchg
mov
pop
pop
adc
adc
test
stos
mov
pop
xchg
repnz
pushf
das
cs
adc
cmpb
iret
push
in
sub
into
push
mov
xchg
pop
add
dec
mov
in
jno
ss
out
fisttps
mov
repnz
xchg
pushf
repz
dec
loope
xor
scas
xchg
sar
mov
xchg
ret
outsl
fldcw
mov
cmp
jbe
std
mov
mov
outsb
mov
fsubr
mov
fnstcw
push
xchg
inc
lea
cmp
push
aaa
pop
xchg
mov
jle
inc
shll
mov
push
lds
push
push
cli
sbb
mov
repz
adc
cli
cmpsl
mov
xor
test
dec
nop
loopne
pop
mov
push
mov
jmp
adc
cs
arpl
stos
popa
popa
lret
mov
mov
dec
nop
jg
sub
ss
bound
jno
or
outsb
mov
jno
loope
test
cs
mov
call
dec
int
mov
push
ret
insb
ret
push
push
push
idiv
cmp
shll
int3
icebp
mov
ret
popf
jmp
jbe
mov
aaa
das
lret
repnz
dec
cmp
enter
sbb
ja
mov
aas
aad
mov
rorb
std
push
dec
daa
jns
imul
addr16
ja
mov
sub
cmp
in
rcll
or
pop
or
dec
stos
xchg
dec
sbb
clc
jns
pop
xchg
push
cmp
shl
push
frstor
add
mov
loop
in
xor
mov
sub
jle
push
bound
jp
das
pop
push
fstpt
xor
cmpb
testb
cs
dec
scas
adc
sahf
sub
pushf
stos
inc
mov
adc
scas
js
ja
mov
jg
jg
in
ss
sti
push
and
dec
test
push
inc
xchg
outsb
push
andl
add
mov
shll
or
addr16
jg
ja
sbb
pop
xchg
push
sbb
pop
jecxz
push
inc
cli
push
pop
push
movsl
popa
and
in
xor
sub
cmp
data16
ljmp
nop
mov
dec
mov
and
push
gs
mov
sub
or
lret
out
adc
ljmp
scas
jno
jecxz
cmp
mov
stos
jge
insl
loop
push
xor
mov
xchg
adc
mov
test
ror
sbb
xchg
repz
or
add
jg
xchg
lcall
int3
les
jnp
cmp
push
fbld
or
cmp
rcr
out
mov
fdivs
mov
push
pop
cmp
icebp
jmp
and
jnp
ss
pushf
mov
adc
fidivs
cmc
or
xor
into
lds
mov
or
cmc
cmpsl
icebp
xchg
push
lock
outsl
cmpsl
sub
and
sub
jl
les
cmp
cmp
test
std
jl
shrb
testl
clc
lods
sbb
cmpsl
add
pop
cmpsl
js
or
out
popf
es
inc
lcall
add
sub
or
sti
or
or
inc
outsb
sub
imul
cmp
inc
mov
inc
xor
cwtl
dec
sub
pop
xor
cmp
shl
mov
dec
xor
pop
jnp
insl
lds
push
fisubrs
push
cmp
pusha
enter
incl
in
ds
push
xchg
jle
outsl
xchg
into
icebp
mov
sbb
fistpll
cltd
lods
das
xchg
stc
dec
pop
mov
pop
jne
xlat
add
xchg
sahf
cmp
inc
jmp
mov
mov
test
inc
enter
shlb
sahf
test
out
sub
loop
outsl
cwtl
cmp
and
decb
shrb
and
enter
adc
enter
imul
shl
inc
sub
adcl
fnstcw
push
xor
rcr
fidivrl
sbb
in
ja
lret
inc
rolb
cwtl
pop
xor
jo
pop
jp
scas
cmp
pop
into
mov
mov
mov
inc
jp
aam
mov
lcall
imul
adc
push
inc
aaa
popf
push
loope
pop
loope
mov
xchg
xchg
imul
jb
shrl
xchg
cmp
insl
add
stos
fcmovne
add
jo
std
popa
xchg
dec
xchg
ret
icebp
sbb
dec
nop
xchg
inc
inc
adc
and
call
or
sub
insb
ljmp
sbb
mov
or
pop
or
dec
pop
scas
xor
jl
xchg
sbb
das
aaa
clc
repz
xchg
test
int
cltd
rcll
sbb
mov
popa
loopne
ret
dec
rorb
adc
lods
daa
ss
xor
xchg
push
inc
setns
call
lret
lods
or
fsubrs
sbb
nop
faddl
into
xchg
popa
xchg
loope
sub
aas
fcoms
xchg
sbb
fsubl
push
mov
inc
loope
xchg
mov
fnstcw
loopne
mov
jle
inc
dec
into
mov
inc
mov
inc
jnp
jbe
icebp
ss
mov
dec
addr16
sub
insb
out
or
aad
lods
in
and
xchg
insl
das
mov
mov
inc
ret
jae
adc
aam
jnp
out
push
imul
sub
outsl
stos
push
pop
mov
inc
neg
jo
popa
lret
es
cs
xchg
lods
pusha
push
xorl
lock
mov
xchg
xlat
sub
jbe
mov
outsl
ja
call
ret
inc
inc
jo
mov
int3
push
xchg
ja
push
push
jns
ljmp
lods
pop
pop
into
cmp
sub
xor
aaa
fwait
sbb
adc
and
push
mov
mov
adc
mov
pop
orl
insb
jg
in
xor
jbe
js
test
or
inc
pushf
pop
or
cmpb
outsl
addr16
mov
lahf
dec
popf
push
inc
mov
leave
mov
sub
out
rcrl
dec
mov
xchg
sub
sub
sar
mov
add
xchg
pop
pop
jae
push
inc
lcall
xchg
inc
jp
mov
adc
in
mov
pop
hlt
cwtl
sbb
inc
cmp
push
xor
out
je
and
rcl
das
dec
call
aas
lcall
pushf
dec
mov
mov
test
pop
int3
adc
movd
call
stos
jecxz
adc
dec
jg
xchg
shr
aas
add
pop
xchg
int3
push
sbb
sub
add
test
dec
cmpsl
mov
repz
jns
fnstenv
jb
push
ret
adc
add
ficompl
aad
imul
ljmp
xchg
ss
lret
inc
imul
push
sbb
push
mov
jl
into
into
in
sti
into
pop
dec
xor
xor
sahf
outsl
repnz
mov
insb
cs
lcall
mov
sar
aam
sbb
shrl
dec
scas
fistl
xchg
stos
stos
shlb
and
std
mov
push
cltd
mov
xor
subl
sub
negb
arpl
or
lea
bound
test
jge
push
lea
hlt
ret
insl
sarl
sbb
fmuls
dec
pop
scas
aad
lods
pushf
je
repz
stos
imul
or
and
adcb
ret
test
ja
xchg
lret
scas
inc
and
stos
and
pop
dec
sub
cs
jne
notb
jmp
mov
dec
inc
add
pop
sti
inc
cmp
dec
roll
nop
push
sbb
aad
inc
aad
lea
insb
scas
insl
cmpsb
adc
push
sahf
dec
dec
leave
in
pushf
inc
pop
insl
sub
mov
sub
int
mov
mov
out
mov
mov
in
iret
mov
ds
punpckldq
jns
mov
dec
cmp
cmp
mov
cltd
test
mov
jge
stos
in
inc
and
mov
inc
cmpsl
inc
xchg
ljmp
xor
adc
insb
xchg
gs
lret
or
and
movsl
jle
dec
lea
inc
dec
out
xor
cmpsl
test
xor
mov
dec
std
outsb
xchg
jle
cli
in
jb
add
add
mov
shrl
push
add
lock
jo
ficoms
lods
cmpsl
dec
gs
scas
push
fsubs
fs
dec
push
add
cli
aad
sub
mov
mov
inc
xor
mov
test
out
adc
fwait
push
dec
cmp
lret
mov
fistpl
push
add
sbb
push
and
adc
ljmp
adc
adc
test
xor
sbb
fdivr
add
xor
inc
cmp
ljmp
cmpsb
mov
fildll
ret
xor
aam
dec
lock
and
push
or
push
adc
push
push
repnz
rolb
inc
in
rcll
jb
dec
or
jl
inc
xchg
je
fisttpl
jg
mov
mov
xchg
xor
mov
jno
sahf
stc
pop
fiadds
lock
fnstsw
cmp
pushf
filds
in
mov
push
xchg
cmp
dec
data16
std
int
cmc
mov
mov
or
in
jnp
in
cmpsb
ljmp
shlb
lcall
push
out
je
ds
insl
lods
test
xchg
adc
inc
adc
jp
rcl
pop
fwait
ds
scas
clc
pop
and
sarb
filds
pop
cmp
rcrl
rcrb
mov
xchg
pushf
cmc
or
je
imul
add
pop
push
jg
push
push
pop
pop
and
repnz
or
add
fucom
jbe
loopne,pt
into
sbb
shr
nop
lahf
jo
xchg
adc
pop
sti
scas
repnz
pop
out
imul
mov
or
xchg
push
andl
sub
sbb
inc
jae
xor
scas
mov
arpl
sub
jecxz
mov
xor
lea
andb
push
cli
xchg
cmp
jne
mov
cmp
xor
jne
ret
addr16
mov
nop
mov
cmove
add
inc
add
mov
and
cmc
stos
mov
int
dec
rcll
shrb
icebp
je
mov
test
pop
std
fld1
cmpsb
out
xor
lea
inc
in
les
js
je
test
xor
xchg
add
dec
push
cmpsl
loopne
lret
push
ret
incl
adc
sahf
and
popa
cmpb
mov
mov
jmp
mov
aam
inc
pop
mov
sub
inc
push
xor
sub
or
dec
mov
jle
int3
sub
iret
call
sti
nop
ret
es
fmull
or
call
sub
jnp
mov
into
lods
jns
pop
popa
pop
stos
mov
roll
addr16
int3
mov
ret
loop
dec
sarb
insl
in
mov
out
push
sahf
xchg
jp
cmpsb
ja
es
repz
ret
iret
xor
sub
mov
xchg
xor
cld
mov
mov
xchg
adc
mov
popf
fldt
aam
rolb
js
mov
es
sbb
cmp
fs
imul
jnp
pop
sbb
push
aam
or
cltd
lea
xchg
mov
xchg
mov
inc
cli
aad
or
add
xchg
std
push
push
scas
mov
cwtl
jle
out
dec
icebp
adc
inc
mov
sarl
out
sbb
mov
sub
pop
mov
pop
leave
ja
das
int3
mov
jle
fucom
test
cmpb
jns
test
fst
lcall
nop
jns
fistpll
insl
cmp
and
jmp
sub
push
mov
aad
lahf
nop
jo
cli
out
xchg
push
adc
push
jo
repnz
jge
in
nop
fdivs
pop
fbstp
and
inc
jge
repz
daa
frstor
add
xchg
and
lock
adc
mov
inc
stc
or
xorl
mov
jp
fmuls
iret
jecxz
pop
sub
mov
pop
mov
dec
cmpsb
hlt
adc
adcl
scas
xchg
insb
pop
add
or
fisubrs
mov
fists
xchg
or
out
dec
fs
mov
mov
or
scas
inc
mov
inc
outsl
cmp
lds
lcall
pop
std
inc
dec
fisubrs
loop
add
pop
adc
mov
mov
push
cmp
rcr
mov
xor
inc
fists
popf
shrl
fdivl
aad
in
std
into
mov
jns
outsb
mov
not
loopne
in
cmp
mov
scas
xchg
xor
out
pop
and
push
dec
lret
inc
pushf
nop
or
stos
test
cmp
stos
insl
sti
aam
lcall
shll
xor
lret
ffree
shll
call
jb
cmp
and
leave
outsl
and
jbe
xlat
pop
rcll
inc
jbe
jmp
loopne
pop
clc
inc
xchg
je
jbe
push
clc
fwait
inc
mov
xor
ljmp
lret
and
sbb
jmp
movsl
ljmp
jl
loop
lret
mov
clc
push
jb
fnsave
nop
mov
int3
cmp
mov
mov
dec
push
cmp
mov
mov
cmp
je
fcomp
and
inc
and
or
xor
adc
ret
inc
mov
fcoms
out
and
dec
or
mov
loope
jne,pn
sbb
sub
fwait
mov
or
insl
mov
scas
mov
insb
xchg
stc
call
movsl
in
ljmp
ljmp
popf
push
mov
idivl
push
xchg
cmp
xor
dec
adc
adc
js
mov
sub
inc
std
push
lahf
lret
and
dec
sub
adc
add
jl
inc
movsb
hlt
pusha
ficoml
in
mov
mov
call
xor
ret
pop
mov
fcmovnu
jnp
pop
lds
add
pop
sub
adc
mov
cli
dec
jecxz
dec
pop
mov
xor
inc
test
dec
dec
lods
cmp
sub
in
pushf
mov
jl
inc
lahf
pushf
xor
in
xchg
in
lock
adc
out
and
pop
add
fisttps
and
and
mov
jb
or
jo
add
aaa
or
test
adc
sbb
jmp
call
jmp
mov
fidivl
jge
pop
fsubrp
arpl
rcrl
xchg
gs
jmp
add
fcomp
mov
inc
iret
cwtl
push
in
jge
mov
cmp
scas
xchg
xchg
or
rorl
and
xor
pop
ljmp
adc
push
sub
rcll
mov
xchg
dec
jne
xchg
jb
mov
leave
push
cs
andl
jae
pop
xor
lock
in
sub
xor
sub
dec
icebp
mov
std
outsl
fs
push
lret
mov
push
adc
cltd
adc
mov
fs
inc
xor
ret
ss
es
daa
mov
pop
pop
fs
jmp
lahf
lahf
ja
and
xlat
daa
enter
push
iret
insl
fnstsw
push
ffreep
test
scas
lea
jo
dec
xor
mov
shll
gs
and
rcrl
inc
inc
adcl
int
xlat
les
pop
ficompl
out
xchg
cmpsb
push
in
sub
push
scas
fucomi
outsb
loopne
shlb
jnp
add
pop
xchg
dec
cli
inc
dec
pop
mov
loopne
movsb
cld
adc
test
nop
jnp
out
addb
dec
scas
push
sub
xchg
cltd
sbb
pusha
addr16
enter
call
dec
pop
cmpsb
push
inc
push
data16
push
jmp
jb
bound
mov
inc
jnp
ss
push
xchg
loop
cmp
andl
divl
mov
ret
inc
or
fstpl
xor
mov
insl
ds
cmp
sbb
sub
int
into
lds
negl
into
xor
test
sub
mov
push
push
mov
mov
dec
pop
into
ds
sbb
inc
subl
or
or
out
in
aad
ror
test
dec
rolb
xchg
jg
jnp
insl
pop
cmp
mov
mov
lods
lret
pop
ss
ljmp
shlb
lcall
out
fidivs
jno
sub
int
xor
popa
or
sub
sahf
out
loopne
dec
cmp
sbb
inc
push
test
in
lret
insl
cli
inc
repz
adc
cmpsl
jge
les
mov
cmp
popf
shll
push
add
sbb
pop
lret
and
xor
in
and
xchg
or
sub
std
std
out
adc
lret
adc
adc
and
jne
cmp
js
imul
mov
imulb
push
dec
add
xchg
cmp
clc
ffree
sbbl
inc
xor
outsl
or
lea
sub
pop
cmp
mov
inc
mov
ds
lret
ja
sub
sbb
dec
sub
add
push
ret
add
fs
outsl
lds
xchg
fildl
mov
in
jmp
xor
pusha
xchg
lahf
push
fiaddl
fdivs
in
fs
mov
xor
xchg
mov
rolb
rcrl
jge
mov
adc
in
and
xlat
dec
inc
sub
lods
fdivr
lock
enter
mov
dec
fldt
out
xchg
es
popf
hlt
out
enter
loopne
dec
adc
jns
push
adcl
pop
xchg
add
je
dec
ljmp
lret
xor
pusha
fucomp
push
arpl
jle
sub
adc
ds
and
cmpb
jne
pop
pop
addr16
mov
vpmaxsw
mov
ljmp
push
iret
aaa
int3
push
push
fistps
pop
out
int3
mull
or
les
push
or
int3
in
push
inc
imul
loope
daa
outsb
xchg
adcl
inc
adc
push
es
xchg
lret
fbld
ljmp
scas
outsb
lcall
cmpsb
sbb
xchg
loope
jge
pop
das
pop
mov
imul
pop
mov
jae
pop
and
loopne,pn
adc
mov
pop
and
pop
jb
cs
cmp
pop
pop
sbb
mov
xchg
cld
xchg
sbb
and
scas
in
insl
fldl
int3
imul
hlt
jle
jbe
call
test
lahf
or
and
ret
out
je
call
movsl
stc
pop
xor
add
inc
sub
rol
mov
je
or
lods
ficoms
push
xor
js
mov
push
in
es
std
movsb
and
or
jge
ret
pop
jno
outsl
bound
pop
inc
xchg
xchg
ret
lea
incb
jno
fstl
out
jno
repz
rcrb
loope
add
int
xor
sbb
insb
clc
movsl
cmp
mov
pop
movsb
mov
es
sub
nop
cmc
mov
lods
adc
fsubp
pop
shlb
or
jge
push
xor
mov
xor
in
in
popf
push
mov
into
sbbb
mov
push
jle
push
mov
pop
sbb
popf
repnz
out
aam
sbbb
test
mov
jl
cmpsl
mov
lcall
ds
xor
ja
cmp
jb
imul
inc
outsb
inc
jg
punpckldq
pusha
inc
push
imul
out
rcl
shl
xchg
or
mov
mov
and
jno
fcomp
sub
mov
scas
dec
or
adc
repz
sub
add
shrl
add
outsb
ja
and
and
adc
and
pop
adc
dec
das
hlt
cmp
mov
jle
rorl
addr16
dec
sbb
xor
xor
and
dec
or
dec
dec
and
addl
jp,pt
imul
mov
stos
cli
out
shl
in
icebp
cmp
push
sub
push
test
mov
jbe
cmp
xchg
inc
or
mull
cli
mov
jae
rcrb
or
movsb
lods
push
inc
notl
add
out
dec
je
in
loope
int3
sar
imul
int
sar
pop
dec
push
mov
and
and
jns
andl
xor
loope
add
mulb
loope
cwtl
cmpsl
mov
mov
xor
es
and
cmp
mov
mov
orb
in
or
dec
push
test
pusha
sahf
mov
xor
mov
ss
repz
icebp
jmp
xchg
mov
dec
fneni(8087
cmp
mov
cmovg
ja
pop
cmp
adcl
ljmp
leave
mov
es
jb
and
fcompl
cmpsl
pop
movsl
flds
xchg
or
sub
loop
sbb
int3
hlt
pushf
test
ljmp
fs
xchg
and
push
sub
mov
pop
insb
data16
push
pop
mov
jge
outsb
jl
into
stos
enter
aam
mov
mov
xchg
lret
xlat
es
mov
repz
sbb
fdivrs
jnp
inc
pushf
mov
rclb
aad
cmp
push
adc
xchg
ds
mov
es
sub
xor
sbb
cmp
push
cmpsl
dec
rcrl
es
and
xor
mull
das
test
jo
mov
push
cwtl
jo
imul
and
jge
lcall
data16
pop
adc
aas
mov
addr16
cli
addr16
jb
cmp
fucomip
mov
shlb
jl
lea
add
mov
mov
sahf
or
inc
ljmp
sub
sbbl
int3
pop
jmp
addl
mov
xchg
jg
mov
repz
int3
popf
inc
xor
jo
out
sub
sbb
bnd
and
repz
pop
dec
mov
xor
out
leave
adc
push
mov
sbb
cwtl
xchg
adc
adc
xor
sbb
leave
mov
push
test
mov
pop
pop
ret
inc
popfw
mov
lcall
icebp
cs
dec
loop
mov
repz
test
push
rcr
movsl
into
movsl
lods
xchg
repz
push
adc
push
ror
adc
inc
jbe
ret
jbe
adc
and
pop
add
add
fistl
outsb
sbb
adc
aam
xchg
jbe
testl
out
xchg
xchg
mov
cli
les
and
xchg
push
ja
push
xchg
pop
dec
sub
sbbb
adc
ficompl
aaa
pop
loop
push
push
mov
std
ja
add
sbb
mov
pop
add
mov
and
hlt
xchg
or
loope
mov
dec
in
leave
test
idivb
idiv
lea
pop
dec
ljmp
fistl
dec
xlat
orl
dec
stos
mov
pushf
xchg
mov
into
into
cmp
xchg
and
push
lret
inc
xchg
mov
and
iret
jns
out
sub
dec
sbb
cmpsb
inc
cmpb
lret
mov
fcoms
mov
aaa
mov
jne
sbb
fwait
jnp
mov
inc
inc
push
pop
and
add
out
mov
sub
adc
fstp
or
mov
jecxz
insb
or
add
divb
hlt
cmp
cltd
pop
scas
and
gs
ss
cld
add
fidivs
inc
mov
xor
or
js
inc
pop
and
push
dec
cmp
repnz
jmp
mov
cld
iret
mov
dec
push
ja
fcmove
rcl
cmp
js
jl
les
fst
or
adc
push
stos
cmpsl
add
add
out
ret
dec
xor
movsl
push
xor
out
xor
mov
fs
sarb
icebp
es
jmp
xchg
jne
stos
mov
cmp
mov
stos
mov
ret
adc
cmp
ds
cld
insb
cmpsl
jbe
add
fnsave
pop
bound
sbb
inc
adc
int
mov
outsb
into
divl
int
cmc
add
and
addl
ljmp
mov
and
movsb
push
popa
psubsb
dec
test
sbb
mov
push
outsl
cmc
add
adc
jg
push
out
sub
lret
cmp
ja
out
aaa
stos
sub
mov
insb
outsl
cmpsl
movsl
ja
sbbb
jle
stos
dec
xor
jecxz
xor
xor
lret
pop
mov
push
sbb
ljmp
sub
lds
outsl
loop
aas
repnz
shr
push
pop
cld
je
sbb
push
push
xchg
repnz
cld
aas
adc
xchg
imul
push
es
movsl
pop
js
mov
int
std
and
or
sti
loopne
add
sarl
mov
dec
cmc
or
push
test
icebp
pop
movsl
dec
aad
fnstenv
fs
je
push
cwtl
xor
pusha
xchg
pop
mov
test
mov
ds
loop
mov
popa
sahf
and
xchg
adc
enter
add
pop
ds
insl
cmovno
popf
in
push
rcrb
mov
xchg
mov
fcmovnb
fmuls
pop
sarb
jp
or
stc
insb
add
popf
mov
sahf
dec
push
lahf
xchg
cmpsl
in
stc
adc
out
out
mov
add
jle
outsb
jb
mov
ljmp
cmpsb
rorb
scas
and
lods
and
push
sub
lods
and
lcall
jns
jmp
add
aas
mov
loop
pop
dec
test
sub
jns
mov
sbb
popf
pop
xchg
xorl
into
jmp
dec
mov
loopne
shlb
adc
dec
adc
or
ljmp
or
ret
xchg
mov
xchg
lea
insl
or
cltd
pop
mov
xor
xchg
mov
mov
push
jb
mov
cmp
decl
push
ja
xchg
into
push
fcoms
scas
movsl
push
cltd
fstpt
fbld
insb
adc
or
xchg
and
js
jb
pop
repnz
rorb
cld
or
add
lret
addr16
aas
sub
das
pushf
fcomps
jp
cmp
mov
cmpsb
lahf
xchg
std
pop
and
mov
inc
scas
dec
adc
dec
jg
adc
add
mov
lcall
fs
mov
dec
pop
sbb
in
cmpsb
mov
mov
push
adc
jo
jae
xchg
and
es
cs
xor
mov
call
mov
arpl
dec
aaa
inc
xchg
into
lea
adc
test
gs
mov
ljmp
cmp
xchg
test
aas
insb
fwait
cmpsb
push
ret
xor
jmp
ret
jp
mov
and
jp
sbb
cs
lock
dec
in
icebp
push
lsl
mov
cmp
daa
inc
jne
fdivl
or
adcb
xor
sub
mov
iret
push
cmp
sub
mov
les
testl
sti
stos
mov
push
lods
fwait
hlt
cmpsb
sub
in
and
mov
push
rcll
into
pop
cmp
sub
movsl
icebp
rcrl
sub
jbe
pxor
int
cmp
test
repz
mov
nop
pushf
sbb
adc
push
mov
js
test
mov
jge
and
aas
cltd
mov
nop
andps
dec
mov
mov
dec
aaa
cmpsl
in
push
mov
or
cmp
out
rolb
xlat
xchg
ds
stos
mov
data16
dec
lahf
insb
jg
xchg
fwait
lods
xchg
insl
sub
and
mov
dec
cltd
lea
popf
jle
mov
adc
or
xlat
out
cmp
inc
mov
imul
rcll
mov
jae
push
mov
ss
mov
mov
pop
adc
cmp
dec
loop
add
dec
out
int
pushf
cs
jnp
mov
neg
jl
imul
mov
test
mov
mov
jnp
xor
das
scas
mov
or
divl
rol
out
pop
rcl
inc
push
pop
mov
out
and
jne
xchg
imul
push
push
xor
fnstenv
or
sub
bound
cli
cmp
in
add
mov
lds
test
or
cmc
or
lret
in
jae
sbb
jno
das
jne
imul
dec
inc
push
fwait
andb
mov
cmp
pusha
xor
aad
out
xchg
xlat
add
sti
enter
pop
stos
add
xchg
mov
sbb
popf
jo
or
push
push
shl
mov
cmp
pusha
push
jg
scas
stc
xchg
mov
adc
incl
fcmovu
pop
pop
shrb
xlat
adc
in
lret
lods
lock
imul
jecxz
outsb
adc
cmp
iret
sti
and
shr
pop
jmpw
enter
sbb
test
mov
sub
lods
inc
std
jae
jnp
add
inc
imul
adc
mov
mov
pop
out
add
ret
mov
fisubrl
and
je
xor
iret
push
mov
aam
outsb
notl
in
das
xor
push
and
jb
pop
outsb
sub
and
or
test
inc
andl
int3
dec
movsb
imul
or
inc
dec
ret
ljmp
ja
addl
scas
iret
je
out
repz
dec
hlt
mov
cmp
dec
cmp
sub
push
jle
pop
pop
fisttpl
in
movsl
repnz
cld
fnstcw
loop
adc
mov
jecxz
xor
lret
add
imul
mov
sbb
pop
loop
inc
jns
stos
mov
inc
rorb
dec
adc
dec
add
jge
or
mov
cmp
into
dec
test
add
adcb
or
mov
pop
js
jle
inc
push
inc
ljmp
jg
insb
lret
clc
enter
ficompl
mov
gs
mov
mov
lahf
sbb
jl
sti
jno
pushf
ja
fisubrs
insl
push
dec
xor
mov
movsl
out
fstl
imul
lcall
sub
xlat
hlt
movsl
loope
mov
lods
jns
divb
stc
pop
pusha
cmp
shlb
xlat
or
xchg
or
inc
jecxz
xchg
adc
lds
repnz
jns
and
ljmp
cld
mov
out
cmp
les
add
inc
popa
jmp
cli
jo
dec
scas
mov
sbb
jno
pop
imul
ss
outsb
shll
or
loop
iret
out
dec
jns
jno
dec
xchg
cld
push
adc
jp
push
orl
cmpl
or
xor
lods
sahf
inc
insb
sbb
or
mov
leave
movsl
cli
xchg
dec
arpl
fisubs
add
pop
nop
mov
mov
pop
popf
xchg
jg
incb
fldcw
repz
sarl
bound
push
sub
cmp
sarl
ds
jns
loope
lahf
gs
xchg
test
pop
int3
and
mov
es
cmp
in
es
imul
sbb
cmpsl
out
sub
add
or
call
test
int3
mov
mov
xchg
sbb
leave
sub
or
pushf
jmp
add
jle
add
or
pop
mov
xor
call
subb
sub
scas
test
decb
movsb
and
and
jnp
jb
cli
xor
adc
cmpsl
pop
lds
out
push
xchg
or
pop
lcall
stc
int
push
test
sbb
test
jbe
adc
aaa
mov
adc
andl
inc
mov
xor
sub
cmp
stos
leave
popf
xchg
aam
pop
inc
ja
aaa
lea
in
popa
aaa
test
jg
roll
add
dec
loope
test
xchg
enter
adcb
imul
callw
popf
or
and
stos
jno
int3
or
into
fcmovne
jle
popa
inc
inc
adc
or
mov
insl
jmp
jmp
fwait
jmp
push
jne
je
dec
xor
sbb
outsl
addr16
inc
test
sub
jp
push
mov
dec
test
ret
mov
push
mov
shl
or
lea
hlt
xor
lret
pop
jae
scas
xchg
mov
jo
add
imull
mov
xor
xchg
js
mov
push
incb
insl
aaa
scas
stos
pop
popa
fdivl
jge
cvttps2pi
int
aas
add
add
icebp
push
and
xchg
mov
mov
enter
inc
sbb
mov
pop
xchg
mov
idiv
inc
loopne
jle
cmp
and
cmp
jle
sbb
push
in
movsl
sub
out
mov
xchg
push
sarb
cld
mov
inc
mov
bound
lea
and
xor
mov
xlat
sarb
test
lea
stos
cld
mov
jmp
add
push
pop
mov
push
or
sbb
rcrl
lods
imul
lods
ficomps
dec
mov
xchg
roll
jmp
packuswb
cwtl
jbe
cwtl
cmp
dec
outsl
sub
stos
mov
sub
inc
lahf
fisttpll
sbb
clc
mov
jno
repz
sbb
ljmp
stos
or
xchg
xchg
fstpt
sub
lret
and
popa
or
imul
cmc
xor
mov
loop
dec
movsl
inc
hlt
jno
inc
insb
out
jns
cmp
mov
mov
cs
cmp
pop
mov
out
mov
or
push
cmc
adc
aam
test
rcrl
or
mov
sbb
in
mov
fldl
xchg
jne
nop
add
data16
ret
mov
shl
jno
out
rcr
mov
sbb
mov
cmpsb
mov
mov
inc
adc
ret
test
mov
shrl
mov
test
adc
push
xor
mov
lods
mov
lods
cmpsl
fs
movsl
xchg
fucomi
sub
shr
add
outsb
ja
movsl
in
sbb
fisttps
add
lcall
inc
adc
inc
fs
mov
adc
dec
dec
xchg
stc
into
pusha
xor
mov
pop
movsb
xchg
cld
inc
xor
rcll
jnp
push
mov
fwait
jb
iret
out
les
loope
js
adc
mov
add
repnz
loope
btr
fimuls
mov
push
sbb
popa
push
sub
sub
inc
subb
ds
rcl
sub
pop
imul
test
cs
subb
sub
shl
and
lods
or
js
push
frstor
mov
fwait
dec
mov
mov
aas
inc
mov
stos
sub
stc
jge
mov
cmp
and
xchg
pop
icebp
icebp
xorb
add
sub
stos
pop
repz
xor
sti
add
sbb
inc
daa
push
push
lods
sub
lods
mov
loop
mov
mov
shrb
mov
lock
sbb
mov
mov
aam
popa
jbe
sbbl
xchg
add
sub
es
inc
sahf
lret
je
ljmp
jns
xor
cmp
push
outsb
push
insb
dec
loope
daa
mov
dec
loop
or
stos
punpckhdq
je
sti
pushf
and
xor
add
imul
jb
stos
cmp
jnp
stos
pop
or
mov
xchg
inc
cmp
mov
adc
push
lods
pop
or
sub
das
adc
in
ds
xor
leave
sarb
mov
mov
push
out
inc
fnstenv
nop
and
lds
rorl
jno
scas
and
test
push
mov
and
or
loope
pop
push
mov
jne
in
loop
adc
xchg
add
xor
inc
pushf
add
enter
nop
inc
dec
js
sbb
adc
lcall
sbb
push
adc
orb
outsb
dec
into
xor
xor
jae
add
stos
notl
xor
mov
dec
push
stos
sti
repnz
movsb
adc
sbb
cs
mov
insb
lds
mov
adc
pop
jg
xor
je
or
xchg
mov
adc
outsl
push
inc
pusha
sti
stos
ds
xor
shlb
cmp
lret
stos
xchg
inc
or
in
cmpsb
mov
jge
adc
loopne
dec
dec
jle
dec
loop
in
mov
jecxz
loopne
xor
insl
test
cld
cmp
jg
push
enter
add
mov
aaa
addr16
adc
and
sbb
push
icebp
dec
andb
mov
idiv
mov
mov
push
mov
enter
aad
cli
fildl
ja
fdivrs
test
and
stc
pop
ds
arpl
insl
cld
pop
mov
lea
mov
dec
mov
xchg
imul
clc
fwait
inc
adc
in
xor
mov
jecxz
dec
inc
mov
in
sub
adc
icebp
cltd
cmp
cmp
daa
repnz
pushl
js
lds
or
xchg
push
stos
jb
js
mov
cmpl
dec
or
aas
and
aas
icebp
mov
and
daa
dec
push
cltd
mov
insl
fldenv
xor
andb
and
jb
adc
icebp
mov
cmp
popf
pop
inc
ds
adc
sahf
push
into
es
or
hlt
fmuls
jmp
pop
cmp
xor
sbb
xchg
mov
and
adc
test
idivb
je
adc
ficoms
enterw
lret
push
aaa
inc
in
xlat
pop
push
mov
cli
ljmp
push
push
jno
rcll
daa
dec
jbe
dec
and
lcall
cmc
pop
mov
lock
hlt
ficoml
in
rclb
je
out
sub
dec
ficompl
mov
dec
and
dec
inc
test
mov
adc
sti
push
mov
xchg
and
lcall
or
stos
insl
subl
ds
mov
imul
aam
fucomip
test
aam
lods
push
data16
test
ja
cmp
ret
adc
bound
push
jl
ja
aam
pop
ds
into
pop
test
dec
testl
adc
mov
xchg
enter
imul
roll
mov
jne
mov
cmp
int3
cmp
adc
int3
push
clc
icebp
push
cltd
sbb
addb
xchg
cmpsb
adc
pop
push
cli
dec
mov
mov
cmp
fdivrl
sbb
add
xchg
push
push
add
cwtl
inc
fwait
mov
mov
lcall
or
and
leave
in
jl
xchg
push
in
jne
rorl
jge
jnp
das
out
cmc
mov
inc
pop
std
adc
mov
mov
popa
xor
mov
add
icebp
fxch
scas
js
cmp
or
jp
rcll
mov
and
and
data16
stc
pop
icebp
ret
pop
mov
ret
cltd
or
sbbb
repz
lods
add
adc
push
mov
lds
or
cwtl
loopne
push
andb
xlat
fsubl
xchg
popa
sar
inc
shlb
push
jbe
frstor
mov
inc
cmp
xchg
dec
fstl
xchg
or
fmuls
jns
or
inc
les
mov
mov
push
fsubs
scas
sub
add
dec
push
test
popl
out
push
stos
mov
inc
cmc
xor
outsb
add
clc
cmp
xor
je
mov
hlt
out
stc
sti
imul
xchg
imul
imul
dec
cwtl
xor
icebp
pusha
jb
adc
in
movsb
loope
pop
rcll
mov
jmp
mov
pop
hlt
push
pop
and
dec
call
fidivrs
imull
mov
or
into
popa
lahf
and
aaa
xchg
add
call
inc
adc
in
xchg
ss
xchg
fisttpll
outsb
inc
je
cmp
shl
jecxz
cli
movsl
xor
xor
mov
out
insb
xor
pop
pcmpeqb
or
test
mov
mov
mov
repnz
call
dec
jbe
cmp
mov
push
loope
cmp
jmp
sti
push
addl
cmc
sti
mov
pop
dec
pop
rcrl
arpl
mov
dec
sahf
popa
arpl
mov
scas
cs
mov
lock
or
jl
sub
or
out
push
xor
icebp
out
jle
inc
add
push
out
dec
insl
test
lods
lret
loopne
mov
jecxz
jecxz
or
mov
int3
inc
lahf
push
cli
push
jle
pop
mov
cmp
jae
xor
notb
adcl
shrl
or
adc
push
and
lahf
and
lods
jno
and
mov
js
aaa
outsb
xor
testl
popf
cmp
or
mov
loop
sub
mov
mov
xchg
icebp
xchg
sub
neg
mov
loope
lret
xor
ss
and
out
xchg
arpl
pop
pop
je
pop
adcl
push
mov
inc
jge
aam
cmpb
addb
ror
arpl
xchg
popf
push
gs
push
nop
sti
add
inc
mov
jl
mov
sbb
loopne
and
mov
mov
sub
pusha
addr16
mov
outsl
jmp
mov
and
sbb
jb
sub
int3
fnstsw
xchg
jnp
jp
inc
arpl
sbb
into
mov
mov
jge
cs
mov
and
mov
xchg
fwait
rcr
mov
in
jne
push
and
bound
mov
test
mov
ret
mov
xchg
dec
dec
jle
xor
das
xor
lods
pop
sub
divb
scas
in
pop
cmp
cmpsl
dec
sbbb
pusha
mov
test
push
stc
outsl
test
sbb
mov
ret
or
jne
push
gs
sub
insl
or
inc
dec
inc
adc
sahf
call
or
xchg
mov
int3
movsb
outsb
aad
cmpsb
pushl
popf
daa
mov
add
mov
rcll
out
cld
mulb
and
or
jecxz
in
lret
pop
jg
pop
sub
mov
mov
push
test
imul
sbbb
ret
cmpsl
cmc
movsb
cwtl
cmc
mov
sbb
arpl
fmulp
add
jle
or
and
insb
mov
xchg
pop
mov
xchg
pop
loopne
je
adc
popa
pop
bound
sub
pop
test
popa
push
sub
stos
jnp
sub
pop
sbb
popf
sbb
dec
cld
jmp
fists
pop
lea
iret
and
xchg
aam
bound
jbe
insl
outsl
jge
adc
lret
pop
mov
jecxz
and
xlat
inc
dec
xor
and
sbb
cmp
push
xchg
jecxz
lock
shl
loopne
lds
sahf
test
pop
lcall
jp
pop
test
imul
cmp
or
andl
stos
repnz
adc
inc
and
xchg
add
push
mov
out
fwait
mov
ljmp
mov
into
push
lock
jle
test
push
push
inc
mov
xlat
xlat
pushf
shlb
dec
pop
push
sub
mov
pop
outsl
fnsetpm(287
add
sarl
int3
imul
lea
dec
dec
mov
cs
sahf
sti
pop
dec
jecxz
sbb
xchg
les
les
shlb
shll
ljmp
or
repnz
push
insl
cwtl
xchg
xor
sarl
sarb
sub
xchg
test
push
out
push
into
mov
ss
lret
sub
pop
sahf
cmp
clc
cmp
xor
or
or
out
dec
push
pop
jp
insl
adc
lcall
and
jne
bound
jae
fsubr
mov
shr
jbe
imul
cmp
jp
ret
or
add
in
xor
addr16
lea
mov
pmaxub
mov
std
adc
xchg
or
xlat
pop
push
pop
push
pusha
push
outsb
test
xchg
cli
inc
lahf
ja
andl
and
xor
adcl
cmp
rol
lds
int
adc
xchg
adc
dec
jmp
jbe
test
and
int3
subl
xor
mov
addb
and
inc
xchg
or
mov
dec
ds
or
arpl
mov
popf
mov
icebp
push
push
cltd
fsubl
arpl
inc
sub
add
push
or
in
dec
dec
push
mov
aad
cmp
push
cld
adc
cmp
sti
cmp
test
ljmp
mov
shll
pushf
aas
cmp
pop
in
scas
lock
inc
bound
jge
adc
loop
in
sub
sbb
push
aas
mov
xor
sub
mov
movsl
rcrl
mov
iret
add
jmp
les
mov
ds
popa
ret
xchg
cmpsb
popa
xchg
xor
sub
sub
cmpsb
jge
pop
sbb
das
adc
mov
xor
adc
and
inc
rorb
imul
inc
sbb
test
jl
out
pop
rclb
fcompl
jp
mov
mov
jecxz
adc
xchg
inc
jbe
fs
outsl
cmp
pushf
push
and
test
fcompl
xchg
ljmp
mov
lret
sbb
dec
sub
fdivr
and
clc
das
test
pop
mov
outsb
xor
push
je
mov
ja
mov
sti
cli
cwtl
aas
mov
dec
add
aad
movl
push
aad
rcrb
jbe
xor
jb
iret
mov
shlb
das
stc
jl
hlt
pop
lods
jmp
repz
ss
push
lods
notb
mov
xor
xchg
in
js
insl
cmpsl
adc
push
fwait
je
lds
pusha
stc
xlat
lds
testl
imul
stos
adc
mov
stos
mov
test
dec
add
aam
adc
in
pushf
cmpsl
sbb
mov
jl
mov
stos
jmp
rcrb
mov
jp
mov
or
xlat
xor
dec
lcall
negb
dec
loop
lahf
repnz
je
cmp
int3
in
push
inc
out
shlb
cmpsb
das
or
push
xchg
imul
repnz
mov
sub
lret
loop
outsb
push
push
cs
lea
and
iret
mov
pushf
pop
push
xchg
imul
sub
sti
fisubrl
mov
inc
mov
fwait
in
fisubrl
push
or
outsb
pushl
push
mov
fsub
sub
ja
add
xor
fnsave
daa
sbb
ffree
pop
sbb
xlat
sbb
test
out
repz
dec
cwtl
fisubrl
pop
out
lods
mov
gs
ss
in
ret
xchg
adc
mov
xchg
xor
inc
mov
add
popf
or
inc
inc
adc
into
in
lea
loop
add
sbb
mov
inc
sub
pop
insl
adc
insl
xor
jp
movsb
xor
ljmp
pop
sbb
cmp
ja
sub
ljmp
or
out
test
scas
xor
loope
fwait
out
jp
push
xor
and
mov
mov
xchg
add
or
lahf
dec
lret
sub
mov
dec
pushf
add
stos
or
sub
push
push
pop
adc
sti
mov
add
ror
cmpsb
sub
ss
push
add
fidivrs
int3
arpl
mov
fwait
ret
and
idivb
mov
jnp
pop
inc
subb
adcb
jl
and
jne
shrl
xchg
push
mov
test
sti
add
enter
pop
negb
shrl
mov
movsb
ret
sub
dec
icebp
popa
loop
or
add
adc
cmp
enter
inc
int
push
scas
and
sub
lods
dec
shl
data16
mov
jno
pop
and
pop
xchg
push
jmp
fisubs
repz
sbb
popa
xor
fwait
into
jb
aad
sub
std
scas
xchg
out
call
cmp
or
stos
js
aas
sbb
ret
sbb
arpl
xor
dec
xor
fdivrs
xchg
mov
call
mov
jns
das
idivl
mov
sbb
sub
mov
stos
gs
in
call
jne
push
mov
das
daa
ldmxcsr
or
shrb
and
jecxz
mov
add
call
pop
adc
lods
subb
push
mov
inc
mov
jg
stc
add
jle
dec
lods
pop
mov
or
mov
add
mov
repnz
cmpsl
push
enter
mov
jbe
loop
imul
sbb
xchg
icebp
xchg
or
or
and
add
xor
add
insb
mov
fidivrs
mov
std
aas
sub
add
ja
fwait
xchg
lret
cmc
mov
pop
mov
push
test
jns
mov
pop
sbb
mov
cmp
xor
cs
jb
xorb
push
sar
fyl2x
icebp
loope
xor
xchg
cld
cmc
int3
cmp
cmp
iret
jmp
jb
movsl
fmull
or
arpl
xchg
sub
cmpsl
fs
fadds
leave
int3
sbb
jp
jl
data16
outsl
mov
loop
jmp
sbb
mov
loope
adc
xor
jb
cmp
aad
pop
lret
jp
js
inc
test
std
in
ja
pop
loop
sbb
sub
scas
ja
sbb
pop
cmp
push
sbb
or
ret
out
test
mov
jg
cs
mov
ljmp
mov
inc
test
jb
xor
xchg
dec
loope
inc
mov
or
cmp
xlat
cli
xor
stos
ss
fsts
sbbl
mov
sbb
mov
push
jb
les
adc
jg
ja
cmp
ret
aaa
gs
ss
cs
adc
punpckhdq
mov
ret
fdivs
inc
adc
mov
mov
or
jp
imulb
cld
mov
fucom
cmp
fisubs
cld
std
push
pop
movsl
mov
outsl
push
mov
pop
sarb
adc
les
inc
and
push
stc
mov
addl
nop
xchg
xor
ret
jne
ret
push
adcb
sub
add
ss
repnz
pop
or
adc
lret
cld
xchg
je
inc
shll
add
ficompl
dec
or
or
stc
divl
inc
mov
mov
movsl
mov
rclb
out
inc
je
addb
dec
mov
stos
push
les
xchg
ret
ljmp
push
cmpsb
inc
jp
incb
xchg
lahf
rcr
stos
or
stos
xor
mov
adc
push
xor
es
inc
imul
add
mov
loope
call
repnz
cmp
and
push
mov
jae
and
movsl
xlat
jae
fcomip
pusha
dec
pop
rcr
lock
out
xlat
dec
jo
das
or
mov
iret
test
inc
xchg
popa
in
out
jge
push
jne,pt
jnp
sti
and
test
stos
xor
xor
jle
aam
test
fisubs
inc
jle
sub
loop
out
mov
xchg
iret
fstpl
sub
mov
bound
jmp
cmp
cmp
push
fcmovu
or
aaa
out
xchg
jg
mov
dec
scas
test
cmpsb
pop
inc
ret
push
lods
mov
lret
lods
and
mov
fldl
es
xchg
add
out
jl
fmull
scas
add
int
and
sti
dec
lea
lahf
faddl
mov
pop
ret
fists
xchg
loop
shll
fwait
int3
add
mov
jne
lods
add
cli
int
adc
jb
jmp
xor
call
pop
or
ret
jnp
data16
inc
cmc
sahf
cmc
mov
or
xchg
and
fidivs
cmc
jl
les
aad
sbb
fists
and
mov
jb
or
sbb
in
and
adc
mov
ret
jg
add
dec
testb
or
mov
insb
lods
mov
sbb
mov
jmp
int
imul
mov
inc
xor
lods
daa
sub
sub
mov
sbb
ljmp
dec
cmp
mov
pop
jge
jbe
enter
insl
mov
jge
ljmp
loopne
mov
xor
mov
cs
sahf
insl
shr
inc
sub
or
push
ret
adc
inc
xor
inc
int
cmpsl
lds
test
mov
fwait
xchg
jb
pop
dec
cwtl
jmp
scas
stc
rolb
xor
push
rol
cmp
push
jns
cmpsb
pushf
pushf
hlt
sbb
or
pushf
scas
fsubs
insl
xchg
test
mov
jge
adcb
rcrl
mov
ljmp
out
xor
imull
cltd
nop
or
add
mov
jae
fsts
sbb
mov
popf
mov
mov
inc
xor
pop
mov
sahf
push
cmp
iret
ljmp
jno
jno
and
and
js
mov
sub
mov
mov
repz
push
xchg
icebp
mov
frstor
stc
xor
sub
jno
icebp
cmpsb
push
clc
sub
inc
inc
push
xchg
xchg
movsl
xchg
jp
push
cmpsl
xchg
in
paddusb
in
arpl
dec
inc
ja
out
aaa
jle
xchg
pop
push
dec
shrl
in
push
and
scas
add
cwtl
neg
sbbb
mov
cld
icebp
mov
lds
roll
add
lea
push
fildl
sahf
icebp
lret
jl
cmpsl
jnp
mov
mov
or
and
mov
and
jecxz
add
xorl
aaa
imul
filds
push
and
fisubs
xor
in
xlat
push
mov
shlb
pushf
insl
xchg
fstpt
mov
nop
sub
jnp
loope
xchg
add
sti
mov
iret
and
fdivl
sbb
sarl
xchg
adc
mov
in
inc
xchg
xchg
sbb
int
add
pop
xor
fildl
pop
bound
sbb
movb
dec
jne
in
mov
lea
add
mov
mov
mov
mov
inc
out
cld
jne
mov
mov
shrb
jnp
mov
dec
push
addr16
daa
repz
aaa
xor
and
sub
mov
lahf
xor
loope
fs
jbe
lock
pop
into
xor
cmp
imulb
roll
in
mov
dec
pop
rcrl
ret
or
and
cmc
cmp
js
jl
pop
insl
ljmp
movsl
test
popl
mov
icebp
and
lds
jnp
in
scas
jo
scas
push
andl
inc
inc
mov
push
mov
popa
mov
jp
or
and
ljmp
and
sti
jp
and
push
jb
sbb
lret
popl
mov
fmull
xchg
cmp
xor
lret
std
mov
xchg
pop
cmovp
inc
enter
xchg
repz
jg
rclb
decl
jnp
scas
sub
pop
push
cmp
jbe
cwtl
mov
inc
in
mov
in
lahf
test
cmpsb
sub
sub
lea
mov
sarb
xchg
sbb
sbb
vcvttss2si
fstpt
pop
cld
filds
inc
xlat
push
dec
cmp
daa
dec
and
out
out
jns
pop
jns
outsb
pop
ret
mov
add
enter
nop
lea
cs
inc
pop
push
aad
arpl
or
es
pop
fldl2t
push
iret
push
scas
test
jns
movsl
test
inc
lret
jnp
test
adc
addr16
loopne
sub
inc
pop
int
aam
adc
cmpsb
xor
lret
dec
cmp
mov
cli
aam
fsubl
jno
outsb
mov
mov
fcmovbe
lcall
mov
xlat
call
nop
xor
cmp
jge
lahf
movsb
cmc
jecxz
push
lods
dec
mov
test
cmc
mov
pop
test
xchg
dec
jge
sbb
fdivs
cld
iret
push
cltd
pusha
sub
xlat
call
aad
jno
xor
rep
stc
fs
in
gs
sub
xchg
jbe
jl
es
cmp
into
shrb
jp
cmpsb
cmp
pop
pop
jecxz
es
cmp
es
sarl
loop
add
fisubl
or
int3
sub
pop
les
jecxz
cmc
loopne
testl
bound
cltd
in
mov
shlb
fisttpll
jle
jle
int3
mov
inc
sub
mov
inc
and
dec
jb
or
xchg
dec
mov
sub
loope
xchg
ja
pop
dec
push
leave
and
lods
mov
and
inc
jae
xchg
mov
stos
xchg
cmp
inc
loop
push
xchg
xlat
xchg
pop
adc
push
xor
push
jno
xchg
out
sbb
cmp
pop
repz
xor
pop
je
dec
jg
mov
out
and
add
rorl
xchg
movswl
cmpsb
ja
pushf
das
movsl
mov
lahf
loop
xchg
leave
mov
shll
cs
xchg
test
mull
mov
or
sbb
jl
mov
jae
mov
arpl
andb
jnp
and
cli
insl
in
pop
jge
mov
push
mov
pop
pop
xchg
aas
rcr
pop
mov
or
jl
sub
and
scas
out
test
lea
xor
mov
gs
mov
adc
ficoms
push
into
scas
jg
push
lds
js
test
pop
mov
mov
lahf
rcrb
rolb
vmwrite
adc
rclb
jns
movsl
jb
aaa
popa
testb
stos
scas
or
das
pop
add
cli
mov
popf
cmc
fmuls
pop
jmp
insb
inc
push
test
mov
jne
jle
sbb
subl
sub
sub
inc
pop
aad
jae
addb
xor
loop
lds
popf
pop
jge
or
insb
sti
mov
shlb
repnz
not
adc
pop
rcrl
mov
add
ja
mov
xchg
lret
leave
pop
or
stos
xchg
dec
jno
xor
mov
jns
jg
sub
loope
sub
es
daa
and
jae
pop
cmp
sub
repz
shr
add
lds
lods
loope
in
aad
nop
sub
les
or
or
fisttps
jbe
sub
push
xor
rcrl
and
xchg
sahf
in
aad
pusha
jl
ffreep
dec
cmc
add
inc
pop
xchg
rorl
dec
mov
mov
mov
dec
mov
cmp
test
loopne
out
mov
mov
movsb
push
cli
sub
adc
add
out
cwtl
jb
jbe
xlat
cmp
ljmp
xchg
pop
adc
push
out
inc
aas
fwait
cld
and
jmp
test
inc
jg
loop
leave
aaa
test
sbb
popf
jnp
mov
pusha
push
call
iret
pop
fidivrs
push
mov
test
sub
aam
lock
aaa
or
aaa
rorl
xor
rcll
flds
das
adc
cmp
cmp
mov
xchg
jbe
pop
push
adc
hlt
sub
rorb
inc
rcr
out
ret
lock
jnp
dec
and
push
in
jl
mov
iret
ja
lock
aaa
jno
sub
xor
or
stc
fisubrl
xchg
dec
add
mov
push
inc
in
das
sbb
jno
stos
bound
lret
je
xchg
mov
xlat
addr16
sbb
sub
in
jbe
dec
sbb
test
shlb
pop
or
scas
cmp
fstpt
or
inc
and
or
inc
outsb
mov
in
inc
mov
lret
jecxz
xchg
pop
jmp
sub
xlat
cltd
out
mov
mov
jae
mov
mov
mov
jle
push
ja
sub
iret
mov
sbb
add
pop
es
movsb
sbb
imull
stc
cmc
push
shrb
mov
xchg
add
xchg
lods
popf
out
dec
mov
inc
pop
and
xor
mull
sub
cld
xchg
lods
sub
fisubrs
cli
and
es
adc
fwait
pop
push
nop
fisubs
mov
fisttps
dec
leave
fmull
int3
nop
xchg
fstpt
fcmovb
ss
mov
inc
cmp
roll
mov
cmpsl
inc
aaa
inc
out
xor
ja
mov
ljmp
imul
loop
sub
addr16
jns
push
push
adcl
push
jb
divl
mov
fdivr
outsl
adc
bound
fidivrl
xor
pop
out
cwtl
leave
fidivs
adc
enter
xchg
repz
leave
mov
repnz
add
xchg
aas
push
sbb
dec
xor
add
sub
push
sbb
cmpsb
xor
movsb
xlat
sbb
shll
xor
inc
inc
dec
mov
and
sbb
test
inc
xchg
int3
arpl
popa
pop
in
inc
fwait
mov
xchg
mov
xlat
loope
sub
push
test
inc
ret
xchg
mov
adc
movsl
jns
xchg
incb
push
or
loopne
pop
fildl
inc
jmp
pushl
movsl
add
mov
sbb
cmpsb
cli
call
mov
cmpsb
sbb
movsl
test
mov
movsl
outsb
jl
sbb
or
popa
xor
adc
movsl
movsl
mov
gs
enter
lcall
xchg
adc
dec
xor
or
mov
xor
jae
loop
pop
shl
or
ret
sbb
shll
cmpsl
xchg
cmc
daa
xchg
xchg
lds
push
lods
mov
sbb
fcmovnu
sbb
int
mov
sub
adc
test
mov
out
insb
lods
lcall
inc
loop
mov
movsl
mov
lods
ss
pop
lcall
mov
xchg
push
sub
je
andl
push
push
sahf
ja
or
add
cwtl
stos
cld
mov
punpckldq
push
outsb
jmp
test
or
xchg
int
test
jge
popa
rcll
jg
outsb
mov
fwait
ret
mov
xor
lret
stc
lahf
das
leave
int
xchg
sar
shlb
and
ss
push
mov
xor
test
jne
pop
jle
outsl
push
outsl
daa
notb
dec
mov
lods
mov
or
xchg
out
fs
push
mov
xor
test
notl
imul
test
out
mov
xchg
out
mov
jmp
out
or
or
bound
xor
mov
jp
inc
mov
push
cmp
outsb
mov
pop
inc
cmp
mov
hlt
lahf
push
xchg
jmp
dec
test
ret
jp
xor
repnz
jae
scas
imul
mov
movsb
xor
leave
adc
and
adc
mov
scas
ret
xchg
dec
vrcpps
jb
std
pop
adc
adc
int
ret
lods
gs
inc
loop
xchg
sbb
test
test
sbb
push
movsl
sub
and
into
and
add
mov
jbe
in
sbb
movsl
lods
push
xor
popa
sti
cmp
cmp
imul
imul
cmpsl
xchg
lcall
mov
push
stos
mov
fwait
fs
sub
addr16
incl
or
iret
push
dec
imul
sti
stos
outsb
xor
je
xchg
in
jl
xchg
mov
jp
outsl
dec
cmp
mov
jae
call
lret
ljmp
jo
frstor
mov
cmp
and
loop
or
xor
scas
pop
mov
mov
out
add
mov
out
mov
sub
cli
cltd
add
pop
sub
adc
xchg
push
jno
add
inc
sub
sbb
arpl
cmp
xor
testb
rclb
or
dec
push
out
ret
mov
popa
fadd
xchg
fiaddl
sbb
out
test
jbe
add
clc
xor
or
clc
cli
addl
arpl
repz
ret
test
mov
scas
pop
sub
aaa
push
into
xchg
and
dec
pop
and
not
mov
inc
pop
mov
out
iret
xor
lods
jle
mov
jne
ja
sub
mov
adc
ds
fidivs
shlb
jp
adc
adc
pushf
leave
sbb
pop
lds
adcb
jl
sarl
and
pop
ljmp
popf
and
cmp
pop
pop
movsl
cmpl
pop
test
and
mov
jb
jo
jae
rorl
pushf
xchg
ret
insb
mov
pop
loop
jbe
cmp
ret
or
out
pop
cmpsl
aam
cld
mov
mov
sub
insl
pop
shlb
les
mov
xchg
mov
lahf
and
aam
fucomp
jp
nop
pop
jb
mov
push
mov
test
mov
push
popf
ret
mov
shrb
out
fs
sub
mov
jmp
push
xor
into
dec
insl
test
into
dec
and
mov
ja
icebp
dec
insl
sbb
movsl
adc
lods
cmp
test
sub
dec
jno
in
sbb
nop
pop
push
movsl
push
mov
or
repnz
dec
cmp
movsl
xchg
fcmovnu
sbb
adc
insl
mov
dec
jnp
xor
nop
add
cmpsb
cmp
sub
sbb
ljmp
aad
mov
aas
shll
xorb
push
sbb
xchg
sti
popf
push
sbb
dec
das
repnz
icebp
sub
push
inc
and
das
or
dec
ss
int
data16
lahf
lret
pushf
mov
or
inc
aam
pop
and
out
lcall
adc
les
mov
sarb
scas
jle
data16
insb
pop
add
pop
jecxz
mov
mov
inc
jl
xchg
popa
mov
test
xchg
gs
popf
pop
ret
clc
push
es
shlb
pop
shll
out
fnsave
pop
test
addb
rolb
loopne
mov
add
pop
repz
lea
aam
sub
mov
mov
sbbb
xchg
dec
leave
xor
ja
adc
pusha
dec
pop
xor
sbb
leave
jl
outsl
in
lret
xchg
repnz
sti
or
loopne
xor
addr16
iret
cmpsb
xor
inc
mov
push
cmp
xor
pop
mov
fimull
mov
fstpl
jb
aas
fwait
je
or
inc
pop
decl
out
sbbl
xchg
add
sub
xlat
xor
loop
loop
lcall
cs
sub
jne
push
pop
movsl
xchg
cmp
mov
insl
mov
and
pop
or
and
pop
push
sbb
xor
dec
loope
arpl
jecxz
outsb
mov
adc
fldcw
sahf
dec
jp
dec
call
sbb
js
lahf
push
std
js
mov
mov
mov
mov
clc
mov
test
inc
leave
jmp
mov
flds
adc
movsl
cld
inc
sbb
xor
jne
ss
mov
pop
sbb
dec
ds
loop
shr
and
int
or
mov
cmp
popf
and
lods
inc
xchg
in
sub
push
out
xlat
aaa
sbb
arpl
fisttpl
inc
test
pop
xor
aad
lods
icebp
jg
mov
pop
insl
repz
mov
adc
out
xchg
idiv
dec
cltd
cmpb
lcall
xchg
jo
dec
sahf
fwait
cmp
sub
inc
sub
out
icebp
mov
test
jl
popa
out
push
popfw
daa
mov
push
lret
xchg
xchg
insb
mov
mov
push
sti
push
in
xchg
pop
test
or
pop
test
lea
push
in
or
ret
or
and
dec
fs
or
ss
aam
mov
scas
cmc
dec
rcr
mull
les
xchg
and
jecxz
andb
mov
push
ret
inc
pop
xchg
pop
xchg
ret
jno
jo
aam
loop
adc
xchg
in
iret
outsb
pop
mov
add
jae
jmp
mov
lahf
aaa
sbb
int3
xchg
xchg
and
enter
jecxz
cmc
sbb
jecxz
cmpsb
fisttps
fcmovu
orl
xor
scas
mov
js
sub
nop
idiv
sub
cmpsb
aad
ja
sub
enter
loopne
xchg
inc
or
push
cmc
into
out
icebp
out
outsl
inc
jo
xor
shll
nop
push
shll
sub
mov
sbb
xor
mov
xor
sbb
jg
and
stos
sub
out
adc
xchg
push
push
mov
add
inc
in
push
or
addr16
out
cld
push
sbb
inc
push
add
or
and
flds
sub
pop
je
aam
in
addr16
adc
or
pop
and
xchg
mov
xor
or
pop
fmul
dec
sbb
loopne
cmp
lods
dec
int3
inc
xor
sbb
mov
mov
cli
ss
jmp
loope
xchg
sub
jg
addr16
xor
mov
or
mov
cmc
add
mov
rol
jne
hlt
xor
or
mov
pop
lods
pop
jns
push
xchg
xor
sub
mov
pop
ror
scas
push
out
add
popa
in
cmp
inc
inc
test
lea
add
xor
stc
mov
sub
mov
insb
jns
in
dec
lods
jmp
imul
aam
cld
mov
mov
mov
icebp
jo
cli
mov
fbld
mov
lahf
jecxz
mov
adc
jbe
pop
pop
pop
addl
mov
mov
movsl
in
cmpb
cmpsl
pop
lods
lret
cmp
test
xchg
add
mov
aad
int3
in
jl
add
mov
push
push
mov
mov
shll
loopne
adc
out
stc
cmp
xchg
mov
in
ret
fisubrl
dec
xor
and
sbb
lcall
arpl
out
add
xchg
jp
xchg
cli
sbb
fstpl
pop
xchg
leave
jae
inc
lods
ja
add
sahf
int
add
enter
inc
rcrb
pop
mov
stos
xlat
dec
add
add
notl
pushf
cmp
nop
test
std
in
test
nop
bound
insb
les
lret
mov
ret
int3
push
jbe
pop
std
mov
pop
into
xchg
addr16
push
jmp
push
pop
lods
lcall
and
adcl
and
mov
mov
ret
mov
mov
daa
insl
rcl
push
push
addr16
and
and
ljmp
loop
xor
outsl
adc
pop
mull
lret
mov
push
dec
dec
and
xor
scas
inc
repz
jecxz
in
test
xchg
dec
mov
or
repz
push
mov
pushf
push
fmuls
lods
loop
repnz
sbb
jg
mov
lahf
jnp
mov
popf
pop
repnz
arpl
adc
cltd
ds
lahf
or
stos
ret
into
jmp
test
and
mov
and
shrl
testb
pop
add
mov
push
insl
add
insl
or
and
rolb
leave
pop
lret
loope
fpatan
aas
jns
lods
and
loop
int
loop
mov
dec
mov
jmp
dec
cltd
xchg
adc
xchg
js
pop
stc
bound
cs
mov
addr16
mov
mov
fistpl
jb
push
into
sbb
xchg
in
add
addl
inc
js
cmc
xchg
pop
in
jne
sbb
outsb
jae
test
aad
cmp
mov
sbb
and
xchg
out
loop
testl
sbb
mov
data16
fdivs
mov
mov
dec
mov
inc
shrb
popf
mov
mov
mov
cmp
repnz
jle
and
cmp
shlb
adc
lcall
jl
sub
jmp
aad
lret
nop
das
fs
pop
mov
add
mov
dec
test
xor
stc
pop
or
insb
mov
push
test
push
cmp
inc
pop
incb
or
inc
mov
popf
das
mov
sub
aam
jle
in
ror
cwtl
push
sbb
xor
pop
mov
imul
cmpsb
je
enter
push
out
sub
stos
jne
js
adc
pop
mov
add
cld
mov
hlt
mov
and
mulb
shl
dec
push
pop
jbe
push
jbe
repz
mov
call
lahf
je
or
pop
lcall
lods
jnp
mov
dec
test
sbb
outsb
sbb
lea
pop
mov
movsl
cmp
insl
enter
insb
out
test
pusha
aaa
pushf
lcall
pop
sub
cmpb
aas
dec
mov
divl
pop
push
ret
mov
adc
enter
cmp
mov
gs
sarb
cmpsl
inc
sahf
aam
stos
insl
in
sbb
aad
out
push
jae
inc
out
mov
into
jecxz
xor
fistpll
std
aam
xchg
cmp
arpl
add
gs
nop
loope
add
jmp
xor
dec
push
inc
cmp
imul
and
cs
xor
repz
push
shlb
mov
pop
lea
jle
xor
negl
in
xchg
fistl
push
mov
jbe
ret
outsb
aaa
mov
lahf
xor
addr16
ror
je
outsl
push
xor
popa
cmp
mov
pop
cmp
fstl
loop
movsb
pop
stos
aaa
xor
fwait
jo
sub
push
xor
fs
test
repz
jbe
ret
xor
mov
lea
outsb
and
add
mov
dec
into
std
add
or
sbb
cwtl
jno
mov
sahf
shll
test
aaa
idivl
ljmp
mov
mov
loop
shlb
xchg
ljmp
jecxz
inc
push
outsl
xchg
fninit
ja
mov
push
inc
mov
fadd
mov
pop
push
test
xchg
pop
jp
in
fcom
xor
push
push
push
imul
mov
scas
js
adc
neg
mov
cmc
bound
int3
mov
sbb
mov
test
xor
shl
mov
add
fwait
mov
mov
fcompl
rolb
inc
mov
negb
outsb
xchg
into
std
dec
mov
mov
ljmp
outsl
lea
add
outsb
fnstsw
hlt
or
iret
push
mov
xorl
imul
mov
out
jecxz
jmp
inc
je
mov
xchg
out
jmp
aad
mov
lahf
out
fcmove
push
push
sbb
adc
adc
pop
ret
mov
movsb
stos
pop
mov
xor
sahf
dec
cs
push
xchg
scas
sub
out
pop
xor
pop
push
inc
test
xchg
pop
rcll
sbb
call
xlat
jns
enter
xchg
imul
or
inc
dec
adc
sbb
mov
and
push
dec
call
push
sub
fildll
aam
dec
dec
lret
sub
jae
iret
xchg
xchg
xor
dec
inc
mov
dec
mov
in
aaa
mov
sbb
call
xchg
shlb
inc
xor
sbb
jnp
pop
and
cmpsb
mov
aam
std
and
and
stos
orb
enter
lret
insb
mov
mov
xchg
fists
dec
fs
movsl
adc
jge
jge
loopne
cmp
stc
pushf
pop
mov
stos
add
fwait
lahf
xchg
and
dec
mov
movsl
dec
int
add
jae
lcall
mov
adc
pop
adc
clc
jg
mov
add
mov
jmp
add
sub
add
add
fwait
insb
mov
lock
inc
aaa
pop
ss
dec
sub
movsb
cs
in
jmp
sub
jle
repz
gs
mov
push
xor
jg
xchg
push
sub
imul
fsts
push
cltd
pop
push
cli
xchg
std
aam
and
cmp
adc
psubb
enter
sbb
or
call
mov
sbb
cmpsl
imul
inc
jno
mov
imul
stos
addr16
ds
inc
jp
int3
or
mov
pop
icebp
cmpsl
dec
add
fisubs
cmp
data16
sub
iret
movsb
pop
lods
cmc
adc
and
flds
cwtl
sbb
lods
insl
jns
mov
adc
jge
push
and
pushl
mov
test
hlt
xor
add
popa
or
pushf
cwtl
es
movsl
pandn
cwtl
jns
addb
incl
pop
jns
insl
lahf
shll
insb
lods
mov
repnz
fidivl
hlt
mov
sbb
jns
inc
fcomps
mov
enter
call
push
or
xchg
lret
inc
fcompl
push
pop
sbb
and
mov
jecxz
test
es
mov
ds
repnz
fstpl
aad
pop
loopne
inc
arpl
dec
js
push
out
sub
fucomi
add
dec
popa
adc
lcall
mov
inc
xchg
aaa
adc
add
lret
dec
sub
int3
leave
fucom
das
mov
xor
lret
ds
dec
mov
insb
jmp
lock
add
je
out
xor
sub
outsl
sbb
or
xlat
clc
ret
inc
lods
icebp
lret
arpl
mov
fidivs
pop
dec
outsl
faddp
and
sbb
push
fimull
scas
mov
orl
ja
sti
sub
sub
push
jecxz
and
mov
dec
mov
pop
out
ret
xchg
dec
sbb
in
fsubs
imul
mov
fcomps
push
fdivrl
push
enter
jmp
jg
aam
cli
mov
add
fadd
popf
cmpsb
aaa
out
jbe
mov
mov
lahf
push
lfs
out
das
push
pop
push
mov
push
add
add
icebp
dec
loopne
stos
lods
xor
pop
popa
pop
aam
mov
xchg
push
clc
rolb
lcall
ficoms
insl
dec
aas
outsl
adc
dec
push
sbbb
or
mov
lods
cs
sbb
push
stos
sub
test
scas
mov
jle
dec
or
sbb
std
inc
insl
pop
lahf
mov
lds
movl
mov
adc
aas
jmp
pop
adc
clc
repz
push
clc
movl
mov
cmp
cltd
fldcw
adc
sub
test
leave
cwtl
dec
in
push
mov
test
or
mov
mov
data16
cmc
popa
int
jo
out
or
stos
jnp
test
pop
repnz
lods
roll
jns
cmpsb
mov
clc
jae
ss
ljmp
and
mov
leave
jmp
pop
or
jmp
and
xchg
imul
push
mov
adc
cs
jnp
insb
pop
jo
and
cmc
movl
mov
inc
push
loopne
pop
dec
sub
es
out
aam
aas
push
adc
negb
imul
imul
pushf
push
sub
shlb
mov
push
imul
xchg
stc
mov
push
sub
insl
sub
out
cmc
push
mov
fmuls
xor
icebp
cs
ljmp
xchg
xchg
sbb
fsts
bound
fldt
mov
sub
inc
add
cmp
pop
push
lea
mov
dec
xor
into
in
test
inc
adc
cmc
iret
pop
js
movsb
dec
ficomps
push
jp
fxch
mov
dec
fstl
cld
jns
aad
lds
mov
push
mov
sub
fldcw
mov
std
mov
sub
sbb
dec
adc
sub
xchg
mov
mov
jnp
sub
xchg
mov
lods
push
push
hlt
in
xor
movsl
cmc
inc
repz
mov
jp
sti
xchg
xchg
dec
add
inc
cs
add
dec
sbb
or
mov
add
dec
add
jle
xor
pop
pop
jge
outsl
fcmovne
stos
inc
jnp
movsb
icebp
dec
out
add
xchg
inc
adc
lcall
xchg
inc
pop
orl
arpl
dec
sbb
paddb
and
xchg
and
mov
clc
pop
mov
in
xchg
sahf
lea
dec
pop
xchg
cmp
roll
je
cli
aam
pop
xchg
push
je
rcrb
dec
cli
mov
push
add
pop
repnz
push
das
pop
pop
mov
mov
adc
cli
inc
lcall
push
pop
cmp
aaa
mov
es
imul
bound
sub
or
in
lods
sub
aam
or
jne
inc
ficompl
or
mov
aam
negb
lea
icebp
mov
fisubrs
ja
mov
jecxz
push
lret
ds
sub
sub
push
in
xchg
mov
pushf
jge
aaa
mov
xlat
lahf
int
and
popa
xor
sub
xchg
adc
xor
arpl
xor
daa
or
fnstcw
sub
aam
and
out
sbb
push
fucom
pop
mov
rcll
leave
pop
sub
and
mov
out
mov
imul
popf
aas
pop
stos
enter
adc
mov
sbb
ds
adc
mov
out
outsl
mov
cmp
push
rol
out
jns
and
mov
jnp
mov
mov
loope
dec
scas
dec
adc
daa
xchg
mov
cs
cld
adc
jge
add
inc
je
or
inc
test
inc
xor
call
sub
mov
inc
out
mov
jns
daa
mov
xor
ss
scas
cmp
scas
xchg
filds
dec
push
inc
cmp
fisubl
dec
lcall
das
jne
icebp
inc
fwait
sub
aas
xor
push
popf
lret
mov
movsl
lds
sub
je
adc
rcrb
dec
lret
in
pop
jb
stc
xchg
or
leave
out
iret
aas
dec
or
in
xlat
cmp
push
xchg
in
push
inc
jl
sub
cmp
lea
test
mov
xlat
sub
push
add
push
adc
pusha
cmpsb
push
jne
pusha
xchg
sub
nop
xchg
jmp
mov
and
push
adc
mov
mov
lret
dec
jnp
dec
push
shl
call
cmpsl
mov
and
jnp
or
pop
sbb
filds
sahf
aad
ss
sub
push
enter
loopne
xchg
or
subl
outsb
pop
daa
push
jnp
add
pop
ljmp
push
push
sbb
jae
mov
sar
je
sbb
cmc
sub
ret
jns
sbb
loop
ds
mov
push
pop
clc
test
fwait
xor
pop
jle
stos
je
add
sbb
mov
addr16
lods
aad
mov
mov
flds
cmc
imul
adc
les
es
js
dec
ljmp
jl
mov
pop
push
ja
mov
es
pusha
ds
repnz
xchg
cmpl
xchg
cmp
mov
dec
mov
mov
loop
test
cmp
popa
cmpsb
fists
mov
je
and
inc
in
shlb
push
clc
iret
clc
jle
cmp
pop
xchg
inc
inc
int
sbb
mov
mov
pop
sahf
std
and
mov
sub
inc
mov
xor
inc
xor
enter
fsubp
sub
sub
and
sbb
dec
clc
push
add
adc
add
fidivrs
call
jae
fcmovne
inc
jecxz
mov
sub
lods
cmpsb
mov
sub
push
sbb
sti
orl
xchg
jne
fdivrs
xchg
ds
xor
stc
cmp
and
dec
pusha
pop
fst
jb
shl
push
pop
je
stos
jbe
iret
int
scas
and
dec
cld
lahf
add
hlt
cmp
push
adc
dec
shll
xor
stc
popf
add
push
mov
jbe
cmp
jne
and
push
adc
fldenv
and
notb
popf
sbb
jb
pop
cmp
jl
insl
into
negl
xchg
pop
jl
push
sti
out
cmp
mov
insb
jp
add
or
xchg
lods
ljmp
pop
pop
inc
ljmp
push
shll
sbb
pop
inc
dec
sub
inc
mulb
cmp
adc
mov
xor
push
cmp
sbb
push
sqrtps
movsl
dec
mov
jmp
out
idivl
orl
mov
push
inc
and
test
mov
outsl
cmpsb
cltd
insb
inc
repnz
hlt
ss
push
dec
call
sbb
cwtl
or
pop
mov
stos
or
or
jno
ds
mov
mov
pushl
inc
fidivs
aad
lock
inc
arpl
mov
aam
and
stc
cmp
mov
ret
add
jl
adc
dec
daa
xor
daa
out
negb
cltd
fidivrl
cmpsb
xor
or
ret
and
or
fimull
or
sbb
xor
test
cmp
or
cmp
mov
cmp
je
cltd
addl
lret
lcall
bound
adc
mov
jg
insl
pushl
inc
cmp
fsubrs
xchg
adc
fists
fnstcw
test
test
vcmppd
stc
jns
add
push
jmp
cmp
push
stos
add
pop
adc
pop
inc
xchg
jae
dec
mov
mov
jnp
cmpsl
es
xchg
hlt
dec
push
aaa
lahf
mov
je
mov
pusha
popl
pop
out
insl
jle
mov
mov
adc
push
stos
push
xor
test
adc
dec
mov
and
outsl
dec
jns
stos
push
pop
jnp
xor
jne
clc
aaa
mov
popf
cmp
xchg
push
sbb
and
repz
bound
ds
xchg
sarb
add
mov
jno
movsb
jne
pop
xchg
dec
cli
push
lods
push
stos
adc
mov
adc
mov
adc
pop
lahf
jp
inc
cmp
push
aaa
mov
roll
lahf
movsl
cmc
push
sti
mov
fsubrl
insl
cmp
das
out
mov
dec
cli
lahf
popa
mov
push
rorl
test
jne
add
dec
and
mov
cltd
mov
add
mov
sub
push
fdivrl
xor
xchg
loopne
push
repnz
pusha
enter
xor
pop
mov
mov
jns
rol
fs
lahf
mov
pop
or
enter
loop
mov
pop
fstpl
pop
out
add
loopne
jmp
les
fdiv
aaa
jo
mov
dec
pop
mov
into
xchg
out
dec
insl
xor
lods
dec
nop
sbb
dec
sbb
call
ror
lea
inc
sti
repz
std
or
add
sub
dec
hlt
pop
aam
out
xor
outsl
lahf
add
mov
mov
bound
rcrl
imul
or
sbb
jno
dec
in
mov
insl
add
add
stc
and
and
loopne
sbb
add
xor
hlt
lds
aam
int3
adc
xchg
jbe
sbb
cmp
lods
mov
repz
and
pop
mov
loop
fstpl
les
and
sbb
fimull
ss
mov
pop
cmpsl
in
push
cmp
sub
ret
pop
mov
inc
ret
pop
es
adc
lahf
cmp
inc
fistl
pop
xchg
hlt
adc
push
outsl
js
jl
in
imul
push
mov
ss
hlt
mov
imul
xchg
pusha
sbb
cmp
cmp
ret
mov
sub
xor
cwtl
pop
dec
mov
add
adc
fwait
rolb
inc
aaa
mov
pushf
mov
arpl
sbb
fnsave
cmp
lea
adc
fwait
xor
push
insl
jae
or
cli
imul
orl
and
je
ficompl
push
sub
inc
aam
pop
stos
inc
add
mov
xlat
inc
adc
and
mov
and
lea
pop
orl
sub
setle
lock
sub
xchg
cs
dec
xor
push
inc
sbbb
cld
xlat
addr16
xor
aas
sub
inc
roll
and
dec
push
sarb
out
stos
xchg
pop
addl
mov
aad
cwtl
mov
and
add
jbe
adc
xchg
nop
pop
xchg
push
or
adc
jno
push
mov
sub
icebp
mov
add
stos
outsl
xchg
add
jbe
outsl
lods
push
sbb
mov
aad
push
in
out
lret
fbld
insb
mov
clc
sub
jb
enter
test
jge
roll
daa
es
call
cmp
cli
js
addr16
sbb
mov
sbb
cmpsb
sbbb
and
nop
ds
push
out
jb
xchg
xor
sub
pop
xor
dec
in
fwait
icebp
out
inc
sub
inc
fwait
ljmp
outsl
or
xchg
push
or
sub
out
and
cmpl
imul
and
xchg
dec
jb
xchg
rclb
adc
jl
mov
pop
inc
mov
std
dec
adc
enter
inc
xchg
inc
mov
cmpsl
dec
jo
bound
xchg
cmc
fstp
dec
dec
sub
sub
fwait
int
adcb
insb
xor
sbb
popf
mov
clc
fadds
aad
xor
lds
sbb
sbb
in
cli
fnsave
xor
int
and
aad
xlat
mov
fiaddl
fnsave
mov
shlb
leave
jae
mov
xor
test
mov
repnz
add
dec
mov
and
sbb
mov
das
clc
dec
out
push
sbb
ljmp
or
push
xchg
xchg
imul
push
xchg
jbe
dec
pop
push
jbe
fisttps
addr16
negb
loop
icebp
and
pop
ret
xchg
lea
mov
movsb
and
repnz
movsb
jecxz
out
aam
iret
jmp
sub
lods
jg
leave
call
sarb
jl
push
arpl
cmpsb
xor
jae
push
sub
into
dec
cwtl
pop
mov
jne
inc
ss
push
cs
jns
mov
sub
adc
pop
jbe
adc
xchg
sbb
loop
or
sub
in
sbb
jno
mov
and
test
in
add
mov
adc
mov
cmpsb
push
push
mov
subl
mov
jns
mov
mov
cmpsl
lahf
int
mov
cmpsl
out
pusha
loope
ljmp
mov
xlat
pusha
jg
cltd
jbe
pop
test
push
int
push
cli
mov
mov
xchg
cmp
cmp
jmp
xor
movb
sarl
pop
inc
xchg
sbb
sub
imul
orl
mov
inc
arpl
dec
fstps
jb
fsubl
int
gs
mov
pusha
push
aas
mov
cmp
cmp
sbbl
jo
jno
popl
xchg
adc
repz
cmp
clc
sub
mov
das
mov
sub
lea
gs
xchg
sbb
cmp
lock
lea
dec
pop
imul
mov
push
out
repnz
dec
xchg
xchg
cmpsb
cld
jns
jno
ds
jge
mov
xlat
lock
stos
cld
out
lock
pop
imul
and
das
inc
outsl
sti
std
insl
pop
dec
fwait
daa
fstp
lods
popa
js
aaa
xor
push
xor
cmp
rcll
xchg
mov
mov
int3
adc
push
aas
cli
ja
mov
subb
sub
aaa
daa
dec
mov
sahf
add
and
cld
shlb
xchg
test
add
ret
imull
xchg
pop
aad
lcall
push
daa
insl
ret
ljmp
mov
push
notl
sbb
outsb
push
loop
inc
mov
mov
dec
pop
jge
test
loop
jp
insb
in
and
rol
or
mov
call
jo
or
dec
andl
xor
fwait
push
fs
test
dec
mov
sub
jae
and
inc
adc
mov
add
stos
outsb
pop
adc
xchg
iret
lods
bound
mov
jp
lret
pop
push
mov
addr16
mov
test
testl
roll
stos
nop
movsl
stos
call
and
dec
addr16
in
stos
imul
daa
cld
or
sbb
xor
or
sub
xchg
rol
fstpl
cmp
cmp
pushf
insb
repz
rol
imul
push
in
xchg
lock
push
imul
cmp
pop
lea
adc
imul
pop
push
in
lock
add
mov
pop
mov
stc
rcrb
adc
paddw
adc
dec
or
and
adc
dec
push
adc
or
insb
icebp
xchg
mov
xlat
cmp
dec
insl
jl
bound
sub
cmpsb
aad
mov
shlb
aad
sub
loopne
push
popf
push
add
xchg
fcmovne
adc
inc
cld
fsubs
cmp
jmp
xchg
lcall
mov
jmp
and
ljmp
push
xchg
jg
inc
insb
rcrl
cmp
xor
int
aam
adc
xorb
adc
clc
xor
popa
hlt
bnd
mov
inc
lret
in
mov
les
dec
push
or
mov
punpcklwd
cmc
xchg
mov
test
imulb
lods
imul
cmpsl
in
cmpsb
cmp
inc
mov
sahf
inc
rcrl
mov
and
int
push
xchg
in
mov
mov
jecxz
gs
jecxz
js
insb
mov
jmp
out
mov
jae
std
cli
sub
jne
ja
pop
push
pop
mov
loop
cwtl
cld
ds
lods
ds
sub
inc
rorb
mov
dec
pusha
sbb
jno
nop
in
mov
mulb
scas
mov
aam
push
mov
mov
jns
out
gs
aad
sahf
pop
xchg
adc
call
or
cmc
mov
or
or
icebp
mov
fadd
adc
mov
jnp,pn
cmpsb
push
adc
dec
push
lods
sbb
mov
out
sbb
test
fstpt
ljmp
mov
inc
inc
lods
imul
pop
dec
lock
or
mov
sbb
loopne
outsb
arpl
xchg
cmp
sub
je
stos
pop
test
fdivrp
clc
out
mov
xor
das
mov
repz
fnstenv
shlb
ret
data16
xor
stos
sub
repz
gs
fbstp
jnp
in
xor
push
xchg
aam
xchg
testl
sbb
pop
mov
jmp
jp
add
lods
xchg
fiadds
clc
lock
cmp
cmp
push
jns
orb
loopne
int
int
xchg
xchg
inc
jl
inc
or
rol
mov
dec
inc
mov
inc
jo
mov
cmpsl
mov
pop
add
jb
enter
cmp
fsubs
aam
dec
sub
jb
pop
xchg
orb
ficoml
jno
shlb
mov
sub
dec
jle
jmp
pop
mov
add
add
aaa
add
pop
push
nop
lods
push
cmpsb
and
mov
mov
pop
enter
test
push
jecxz
dec
and
add
in
fstp
outsb
xchg
and
mov
test
mov
xchg
pop
jecxz
cli
sub
pop
xchg
add
sbbl
jmp
xchg
adc
rol
inc
pop
sub
incl
lahf
pop
inc
mov
or
or
xlat
call
push
fdivrs
mov
push
sub
push
rorb
fmuls
push
outsl
lds
inc
push
xchg
xchg
out
fidivs
push
add
test
mov
imul
icebp
sub
lods
xor
sub
cmpsl
in
add
pop
call
hlt
scas
adcb
dec
enter
xor
mov
xor
adc
js
xchg
xor
insb
xchg
and
nop
dec
xorl
cld
jecxz
sbb
ja
or
fldl
adc
orl
mov
in
ficoms
testl
pushf
mov
je
xchg
mov
shlb
enter
cs
or
push
sbb
and
cmp
outsl
out
adc
and
call
fldenv
mov
stc
sar
mov
and
pop
add
psubq
dec
testl
xchg
inc
int
jg
jl
mov
out
jg
jo
test
mov
lea
xchg
or
add
pushl
sbb
pusha
popf
pop
push
cmp
sub
sti
pushf
pop
scas
cld
adc
mov
orb
fidivl
and
or
hlt
push
cmp
inc
cmp
jbe
mov
movsl
push
mov
scas
loope
shl
movsl
lock
jbe
xor
push
cwtl
in
rep
insl
mov
inc
orb
xchg
negl
out
arpl
movsl
jle
in
pop
dec
popf
mov
adc
adc
sub
inc
xchg
lods
adc
movsl
cmpsl
mov
lret
add
jo
sub
scas
jl
jns
dec
das
push
sbb
add
notl
shrl
int
mov
pop
sarb
push
pop
mov
mov
mov
jno
add
fmuls
or
dec
loop
or
imul
rol
sbb
rolb
lret
dec
scas
xchg
sub
mov
psubusw
in
aaa
pop
es
arpl
loopne
push
jbe
leave
mov
mov
sub
xlat
sub
lret
mov
lods
insb
jno
into
jne
push
sbb
push
xchg
clc
ja
mov
sub
enter
xchg
mov
and
xchg
pop
pop
sbbl
das
xchg
aaa
pushf
outsb
in
cmp
mov
mov
sub
xor
and
arpl
stos
xor
dec
repnz
test
push
dec
sub
shll
movsb
in
sbb
mov
and
popa
jecxz
adc
cwtl
fisttpl
lret
leave
cwtl
ss
push
pop
movb
lods
sub
add
cmc
icebp
stos
mov
mov
test
cmc
mov
out
jg
xchg
jb
mov
jle
les
xlat
aad
push
mov
sbb
test
xor
cmpsl
mul
pop
loop
out
push
sbb
inc
add
sarl
cltd
jg
pop
sbb
jge
cmp
add
or
lods
inc
movsl
or
test
lahf
pop
in
orl
jle
fcoml
in
inc
fmulp
dec
clc
andl
insl
xlat
arpl
dec
inc
pusha
inc
inc
dec
or
adc
incb
xchg
add
dec
xrelease
hlt
int3
or
rcrb
fwait
push
cmp
add
les
xor
gs
idivl
sbb
mov
sbb
or
mov
jno
mov
daa
fcmovbe
xorb
cmp
insl
push
lret
cmp
xlat
call
xor
int
dec
cmp
movsl
ficoml
std
sub
hlt
pusha
pop
cmp
imul
inc
in
inc
movsl
add
imul
and
pop
test
stos
cli
add
data16
pop
lds
jne
seta
adc
lcall
clc
subb
stos
into
iret
test
adc
jae
daa
pop
cmp
pop
rcrb
in
jl
mov
fwait
daa
lcall
jg
xchg
aas
jae
mov
xor
inc
mov
test
aam
inc
imul
push
rclb
clc
jne
adc
cmpsb
jno
into
ja
mov
xchg
fldenv
bnd
lods
or
in
cs
push
push
push
loop
and
imul
ffree
xlat
in
jp
xor
movsb
lods
and
les
daa
popf
xlat
loop
popf
sahf
sbb
mov
stc
aam
daa
push
ret
inc
daa
push
test
aaa
rorl
push
lahf
lea
add
xlat
aad
cmp
push
add
add
mov
push
dec
and
sbb
mov
mov
push
add
jg
mov
pop
ret
das
std
dec
pushf
imul
cltd
cmp
mov
pop
and
mov
jp
mov
jae
xchg
push
inc
xchg
mov
mov
or
enter
sub
repz
in
push
movsl
cmpsl
pop
aam
shlb
loop
xchg
mov
mov
jo
dec
sbb
jae
push
mov
pop
fsub
pop
leave
mov
mov
cltd
iret
testb
fs
clc
ret
fwait
negl
and
sar
xchg
aaa
repz
int3
aas
das
pop
rclb
out
pop
in
imulb
dec
sub
in
cmpb
call
lods
lock
or
lds
pop
and
movl
lock
jp
jnp
ss
push
pop
sahf
push
imul
sbb
mov
rol
push
clc
fwait
ljmp
ljmp
jnp
dec
mov
ret
out
je
outsl
and
adc
push
add
popa
cs
add
dec
push
adc
cmp
mov
xchg
aad
mov
test
mov
add
mov
sub
dec
pop
xchg
inc
lret
dec
out
in
xor
mov
mov
jle
mov
jnp
and
and
movsb
scas
and
push
jns
mov
addl
icebp
add
xchg
mov
addl
mov
sbb
clc
pop
inc
std
lods
pop
in
add
or
cmpsl
push
mov
outsb
add
stos
cltd
in
jnp
aas
xchg
daa
subl
out
mov
push
bound
fnsave
ljmp
jno
test
pushf
jb
add
fwait
push
in
pop
in
call
mov
lods
mov
aaa
scas
sahf
jle
sub
dec
xchg
scas
add
fwait
arpl
mov
xor
sbb
mov
adc
push
ljmp
cmpl
jnp
add
shl
lcall
xlat
mov
push
jno
or
and
mov
dec
adc
cmc
push
cs
inc
cmp
mov
jo
xlat
inc
cmp
leave
pop
arpl
xchg
mov
outsl
xchg
jle
movsb
ret
mov
xchg
sub
stc
test
cmpsl
mov
jl
stos
and
stc
shll
mov
sbb
repz
jp
outsb
fwait
add
jp
push
es
xchg
jle
dec
add
inc
sub
xor
aam
stos
sbb
and
xorl
out
inc
jg
jmp
or
push
xlat
or
xchg
pop
leave
add
mov
icebp
dec
adc
adc
roll
divl
mov
xchg
xor
mov
push
jp
aam
xchg
loopne
jns
cmpsb
mov
das
cld
sbb
idiv
sti
xor
mov
mov
retw
popf
sbb
dec
in
arpl
pop
out
popa
xchg
sub
pop
mov
inc
out
mov
inc
jg
jno
mov
aad
adc
mov
add
mov
out
in
inc
call
cmovno
xchg
pop
push
aad
mov
pop
inc
xor
sub
jbe
lahf
dec
xchg
dec
or
aam
xchg
imul
sbb
add
ljmp
repz
inc
mov
gs
and
fldt
cmp
add
cmp
jb
es
sub
mov
fwait
xor
ljmp
jge
inc
hlt
leave
sbb
xor
rclb
insl
in
mov
cmc
pop
rcll
faddl
out
adc
push
mov
stc
jge
fs
js
xor
dec
repnz
sub
jp
jmp
adc
outsb
outsb
dec
inc
mov
pop
push
xchg
pop
mov
push
iret
push
cli
popa
sub
dec
stos
sahf
push
xor
cmp
push
jae
dec
pusha
cmp
divb
test
xor
xor
inc
call
aam
loopne
xchg
hlt
sbb
xor
popl
xlat
mov
bound
dec
inc
xchg
ret
fsubrp
es
add
sub
xlat
push
lock
stos
out
adc
enter
ljmp
jp
inc
pop
outsb
pop
cmpsb
outsl
ljmp
lret
hlt
sbb
xlat
pop
adc
lahf
orb
cwtl
inc
test
nop
mov
gs
mov
mov
and
lods
or
jle
loope
lcall
xor
mov
xlat
xor
fstps
test
adc
adc
int3
das
loopne
xor
mov
leave
aad
lods
inc
stos
xchg
and
loopne
add
mov
rol
call
jns
xchg
lcall
inc
jbe
dec
sbb
call
xor
pop
add
cmc
cmp
mov
rorb
mov
movsl
subl
out
aam
sub
lock
icebp
inc
icebp
mov
cmp
into
push
push
and
mov
cmp
test
mov
stos
je
mov
inc
fimull
mov
jg
lock
sub
arpl
ljmp
or
aaa
shrl
scas
cmp
dec
je
xor
lock
sub
scas
in
push
fimull
sbb
ds
adc
repnz
pop
ds
and
sub
adcl
test
cltd
lret
mov
lods
loopne
xchg
lret
bound
mov
inc
xchg
xchg
mov
mov
xchg
mov
fdivrs
sahf
rcr
scas
mov
xor
cltd
pop
arpl
ret
xchg
cmp
les
push
test
xor
push
xor
testl
gs
cmp
es
add
dec
add
xor
out
dec
adc
test
push
iret
divb
test
or
clc
dec
imul
pusha
or
mov
sub
mov
and
sbb
mov
push
xchg
push
cs
subb
cli
jg
pop
jp
inc
and
lods
dec
add
negl
scas
ret
xchg
sub
pop
mov
xor
sarl
cmp
add
xchg
mov
sbb
xchg
sub
adc
xor
mov
push
cmp
cwtl
sbb
dec
std
push
mov
pop
sub
shll
outsl
lret
jmp
repnz
rcll
xchg
rolb
std
out
sub
out
lea
cmp
outsb
add
inc
pop
or
lock
aam
mov
fmulp
pop
pop
fildl
ja
nop
xchg
pop
lods
dec
sub
lret
fucomi
adc
xor
add
inc
jbe
test
jae
repz
ss
or
push
aad
cs
rcrl
and
mov
add
lcall
lcall
aam
scas
or
xchg
icebp
ret
arpl
jb
daa
cltd
mov
mov
mov
mov
mov
mov
mov
pop
js
sub
out
inc
jo
movsl
inc
sub
cli
aad
sbb
xchg
add
std
xchg
fstpl
inc
ss
pushf
dec
push
add
rcrb
movl
stos
pop
call
xor
addb
lcall
roll
xlat
mov
jg
movsb
sub
pop
inc
jge
bound
imul
jb
inc
xor
pop
lahf
leave
pop
push
and
cmp
not
fnstsw
pop
ljmp
xorl
dec
cltd
test
cmp
xchg
aam
adc
xchg
pop
mov
into
and
cmp
xchg
pop
mov
jg
std
scas
fistpl
ja
inc
pop
popf
leave
cmpsl
and
inc
push
cmp
into
rolb
mov
lds
and
dec
push
daa
jno
imul
pop
push
fsubrl
enter
jbe
in
sub
dec
inc
ds
icebp
in
es
xor
test
mov
movsb
adc
sub
cmc
inc
loopne
adc
sbb
sbb
sub
call
dec
stos
inc
push
jg
sahf
and
sbb
rorb
test
scas
xor
push
sbb
add
ret
cli
lods
insb
pop
insb
lea
mov
mov
and
jae
nop
inc
jo
sub
xor
jg
arpl
xchg
in
cmp
int3
fs
mov
pop
loopne
or
mov
loop
inc
es
and
cmp
mov
fdivl
mov
push
cmp
dec
xorb
push
push
sarl
insb
lahf
or
lret
mov
popa
adc
push
mov
sub
lret
dec
inc
push
adc
mov
in
mov
cmp
test
pop
leave
xchg
or
fsubrl
mov
jp
pop
lret
or
sahf
icebp
movsl
mov
sbb
fnstsw
shl
out
movsb
jmp
mov
bound
lock
push
sbb
cmp
ficompl
inc
outsl
stos
and
xchg
repz
lcall
hlt
clc
sahf
push
or
xchg
xlat
adc
cli
mov
popa
dec
add
test
std
cmpsb
mov
inc
iret
dec
lods
sbb
pop
sbbl
dec
inc
mov
and
test
icebp
sbb
jnp
or
push
mov
lea
mov
jg
fldcw
cmp
das
adc
sbb
fisttpll
aaa
call
push
out
call
xor
lret
loope
fnstsw
xor
int
jle
in
jle
aas
daa
or
pop
add
mov
mov
int
push
xchg
and
lock
xor
cmp
mov
mov
add
jp
stos
pop
cmp
sbb
push
jne
stc
dec
out
andl
outsl
push
sahf
in
sub
stos
sti
mov
inc
jb
adc
jb
sbb
cmp
inc
decb
popa
cmp
mov
push
in
xor
aam
jmp
jae
or
stos
test
das
mov
xor
push
popf
xor
adc
cmp
scas
insb
movsl
jg
xchg
in
sahf
cmp
jl
insb
lds
scas
jb
xchg
add
pop
dec
and
test
lods
push
inc
sti
das
inc
push
enter
call
lods
popf
out
loop
in
in
mov
or
push
inc
mov
push
cmc
inc
sub
popa
pop
mov
pop
enter
mov
shll
shll
or
mov
into
popf
push
mov
ljmp
loope
movsl
stos
mov
fnstsw
jo
xchg
fisubs
loopne
aaa
ds
jmp
jno
mov
jb
je
adc
movl
out
push
js
push
mov
les
fisubs
shlb
out
inc
adcl
subl
and
int
xchg
fisttpll
popa
ficoms
inc
daa
dec
das
dec
push
mov
xor
daa
sti
subb
dec
test
adc
shll
pop
mov
sub
icebp
sbb
mov
xor
pusha
xchg
mov
ja
pusha
jecxz
push
std
gs
or
loopne
dec
lret
lret
cmp
lahf
pop
or
outsb
lods
pop
arpl
js
and
into
cmp
add
mov
jns
sub
cld
loop
and
js
repz
sub
xchg
or
adc
decb
xor
popa
push
or
std
adc
xor
repz
daa
push
clc
loopne
repz
and
xlat
fiadds
hlt
lret
popa
or
pusha
jno
pop
lahf
sub
mov
mov
sbb
movsl
mov
pop
xor
les
jae
sub
jae
out
adc
fwait
mov
xchg
lret
out
jb
nop
sub
cld
imul
adc
jnp
and
and
cmp
inc
jp
lods
fdivrp
jnp
add
xchg
std
sub
lret
iret
xchg
hlt
ret
jg
stc
adc
jmp
loop
pusha
cmp
out
adc
xchg
inc
dec
movsl
scas
movsl
sbb
stos
adc
ds
xchg
test
dec
adc
iret
lret
sub
test
loope
popa
sbb
stos
fcompl
sbb
fnsave
or
in
daa
add
push
push
inc
stos
cmpsb
push
jns
and
add
cli
fmulp
clc
inc
mov
fmuls
cmp
test
jmp
fistpll
push
dec
push
in
lock
mov
repz
cmp
pop
xchg
pop
xlat
mov
pop
mov
xor
loop
and
push
pop
out
sahf
sbb
dec
sub
push
jl
mov
sbb
sbb
inc
sub
sbb
inc
xor
cmp
fists
fmulp
mov
jmp
sahf
cmp
inc
dec
dec
in
out
xchg
pop
xchg
mov
mov
pop
jae
pushf
imul
ds
sbb
sahf
out
jae,pn
xchg
data16
mov
sub
adc
fstpl
inc
sub
push
add
pop
dec
and
scas
es
std
sti
push
dec
lock
aaa
shlb
cli
inc
mov
jno
je
test
ficoms
push
mov
sub
shll
ja
sbb
out
jp
gs
xchg
sbbb
ror
ljmp
clc
sbb
arpl
jb
xlat
stc
lret
daa
push
sub
xchg
icebp
imulb
lcall
add
pushw
bswap
cs
jae
add
fiadds
adc
ret
cwtl
cmp
int3
mov
test
pop
fbstp
test
adc
out
inc
jb
mov
movsb
xchg
jg
pop
cmp
cmpsl
pop
xor
mov
adc
enter
scas
inc
ds
mov
shl
fs
scas
stc
dec
leave
push
les
imul
dec
jp
or
ljmp
lods
ja
cmp
loop
adc
stos
pop
jnp
add
test
addb
xor
adc
outsb
pop
mov
outsb
rcr
popa
mov
outsl
fisubs
xchg
adc
cwtl
or
lret
jecxz
xchg
push
repnz
sub
add
mov
loopnew
mov
inc
es
push
jo
enter
mov
int3
inc
push
mov
jnp
mov
sbb
nop
outsb
sbb
dec
or
ja
xchg
push
lahf
push
xchg
mov
shll
test
ja
inc
jae
pop
nop
ret
inc
outsb
jnp
das
push
xchg
jge
andb
jmp
dec
sub
fistl
out
stos
in
push
pop
mov
leave
jle
cs
inc
mov
pusha
shll
xchg
loop
ja
and
pop
sub
pop
mov
mov
test
dec
decb
mov
aad
mov
dec
mov
cwtl
sbb
jne
or
shlb
lock
jl
ret
add
inc
add
or
dec
add
push
mov
mov
pushf
mov
mov
ja
rclb
rorb
fildl
sti
jns
push
xchg
dec
xchg
imul
ret
mov
pop
movsb
faddl
mov
mov
iret
outsl
pop
stos
pop
pop
enter
and
sbb
lret
inc
and
pushl
lods
adc
jb
push
xor
lds
pop
inc
push
pop
pop
stos
xchg
or
mov
movsl
mov
mov
loope
jmp
mov
daa
and
outsb
sub
xchg
push
adc
sbb
or
mov
in
inc
push
cmp
jg
les
jbe
sahf
push
scas
jb,pt
xchg
lcall
nop
rorb
xor
cmp
addb
shll
sbb
or
or
cmpsb
mov
iret
inc
jns
jns
insl
inc
push
lea
out
inc
push
rol
cwtl
or
mov
fdivp
nop
cmp
adc
inc
ljmp
dec
push
les
cmp
test
or
jnp
repnz
add
cld
gs
or
ljmp
leave
fnstsw
scas
cmp
jge
adc
mov
xlat
push
mov
jbe
js
out
bound
and
nop
inc
addr16
add
inc
call
jle
test
add
xchg
jmp
push
add
push
xor
pop
cmc
jge
xor
push
mov
out
cltd
dec
aad
sub
mov
ja
imul
lds
mov
inc
ret
decb
inc
jmp
aam
xor
call
xchg
out
popf
test
shrl
add
addl
fs
popf
jb
inc
iret
inc
bound
push
sbb
or
jno
mov
call
ficoml
jnp
icebp
sbb
imul
jae
lret
xorl
repz
pusha
pop
add
mov
xlat
xor
mov
ficomps
mov
pop
imul
ja
jno
push
movsl
inc
in
imul
out
cmpsb
enter
push
das
inc
mov
xchg
xchg
das
cmp
dec
and
ret
sub
and
sbb
out
mov
sub
test
mov
mov
test
andb
movsb
mov
ror
in
lcall
or
or
call
lcall
or
sub
das
or
jns
scas
lock
sub
jne
int3
sbb
mov
inc
sub
xchg
and
ljmp
lock
imul
outsl
xlat
test
nop
rolb
lock
into
xchg
shll
sahf
add
xchg
jl
jge
cmp
sub
imul
mov
data16
gs
mov
jae
aas
arpl
push
mov
lods
mov
xor
fsubrp
scas
movsl
cmp
loop
and
lret
add
repz
inc
rol
mov
enter
mov
mov
sub
aad
mov
jp
xor
into
inc
lret
mov
mov
loopne
lahf
jmp
fsave
mov
adc
leave
jo
dec
es
or
push
out
mov
icebp
and
and
jb
cmpsl
sub
loop
jp
test
addr16
push
inc
ja
cmp
inc
sbb
xor
push
rcrl
push
jb
clc
and
es
xchg
inc
sbbl
les
lock
xor
or
push
or
jl
repnz
ret
or
data16
js
adc
in
ss
lcall
out
pop
cltd
lock
cmp
mov
push
cmp
mov
inc
jp
in
add
fildll
adc
push
fidivrs
jns
or
cld
out
scas
fcomps
xlat
out
mov
mov
xor
add
fnstenv
add
push
loop
outsb
fmuls
int
pop
test
iret
jmp
enter
gs
roll
or
or
dec
shr
mov
cmpsb
lock
and
cmpsl
push
pusha
push
sarl
nop
leave
cmp
or
dec
mov
loope
sub
mov
jge
mov
in
add
gs
push
pushl
jcxz
xor
inc
cwtl
cmp
mov
dec
dec
test
inc
pop
pop
jne
dec
adc
and
mov
and
mov
push
std
div
push
add
sbb
inc
mov
cltd
jns
jnp
aad
orl
ret
lret
cmp
call
sub
xchg
lahf
in
sbb
inc
movsl
and
into
lods
mov
jge
ss
pop
jno
jmp
mov
inc
mov
dec
pop
xchg
rep
jle
mov
push
in
push
xor
prefetch
fcoml
or
adc
xchg
js
stos
sub
jp
pop
in
jae
cmp
cmp
jle
sub
rolb
xchg
mov
lret
repz
or
pop
ds
je
in
in
xor
adcl
jae
pop
push
cmp
jp
ret
and
add
jns
mov
jl
jb
test
jne
sub
fisttpll
or
outsl
imulb
ds
or
jnp
jbe
cmp
xchg
mov
xchg
pop
xchg
dec
or
xchg
mov
jmp
sbb
jns
push
ljmp
sbbb
iret
sub
mov
lds
or
and
sbb
jl
jb
cmp
mul
dec
scas
sbb
cmp
int3
out
shlb
fs
lcall
sub
sahf
cmp
pop
dec
ss
notb
inc
mov
cmp
fiaddl
jmp
cmp
jecxz
fwait
and
aas
cltd
inc
adc
sbb
xor
push
rorl
sub
and
pavgw
push
imul
mov
jb
sahf
sbb
in
lods
outsb
out
mov
jb
fldt
pop
fwait
push
push
test
adc
jl
shlb
cmp
mov
int
ds
mov
or
shl
rol
mov
push
int3
decl
pop
aaa
fnstsw
mull
push
aaa
rcrl
test
push
jb
popw
orl
inc
mov
out
dec
test
cmp
daa
add
add
pop
je
sub
clc
pop
mov
push
and
repnz
movsb
mov
outsl
and
xchg
daa
insl
jle
xchg
std
adc
mov
ss
and
movsl
xor
rclb
sub
add
cmpsl
and
xor
in
jp
push
add
dec
cmc
xchg
inc
fists
gs
in
stc
xor
push
ja
pusha
push
sbb
jnp
mov
movsb
fcom
test
dec
sahf
and
clc
stos
jg
test
cmc
add
xor
push
adc
in
dec
in
dec
imul
aas
mov
sbb
fs
inc
ss
stos
push
pushf
in
in
lret
jle
push
mov
popf
sbb
and
loopne
addr16
imul
fisubs
mov
jle
cmpsl
cmpsb
les
adc
shl
add
test
aaa
fcomi
loope
cmpsl
cmp
push
add
jns
mov
cmpsb
je
popa
in
inc
sub
or
fistpll
adc
sbb
ret
pop
push
adc
cmpsl
enter
push
mov
lret
pop
shll
cmp
call
aas
shr
cmp
inc
add
jnp
add
inc
mov
or
stc
bnd
stos
stc
jecxz
addr16
cwtl
jecxz
daa
addr16
std
inc
fstpt
xor
mov
ret
xchg
fsubrl
or
jp
stos
out
or
inc
cli
dec
xlat
mov
mov
add
add
cwtl
add
or
mov
mov
test
inc
push
inc
aad
aad
jmp
xor
xor
xor
clc
cmp
rcll
in
mov
mov
mov
repz
aaa
popa
xor
sahf
call
add
jecxz
lods
imul
pop
xchg
or
xchg
out
pop
and
and
dec
dec
push
mov
jbe
test
cmc
in
pop
sbb
pusha
jmp
sub
pop
mov
pusha
idivb
aad
jae
aam
xchg
inc
ja
sbb
and
cmp
stc
mov
addb
mov
enter
sbb
movsl
cmp
aad
mov
sbb
test
mov
test
sub
or
dec
outsl
outsb
ljmp
cmpsl
es
icebp
mov
pop
add
sahf
jb
jo
cmp
in
je
test
bound
mov
test
pop
xor
xchg
jle
push
mov
mov
jge
in
sub
pop
pushf
inc
and
out
fst
cld
iret
mov
aad
aad
lcall
mov
jp
adc
push
push
or
mov
push
movsl
pop
repz
mov
stc
mov
pop
ds
inc
push
mov
adc
fcomps
cmp
xchg
sbb
ss
jae
je
pop
fwait
stc
jle
daa
iret
cmpsl
xchg
jecxz
fsubr
dec
cmp
out
int3
xchg
inc
filds
in
call
ja
sbb
iret
fdivr
jbe
popf
dec
lahf
mov
ret
xor
cmp
mov
cmpsl
test
aad
push
outsb
in
lret
daa
xlat
or
cmpb
dec
mov
dec
push
push
xlat
mov
in
xchg
pop
shl
jb
xlat
inc
dec
cmp
leave
decl
mov
adc
jbe
mov
sbb
mov
cmc
scas
xor
jle
shl
aas
inc
xchg
lods
mov
pop
add
gs
repnz
jg
out
ds
or
adc
xlat
or
sub
and
xor
pop
sbb
cmp
pop
push
into
rcrl
sub
imul
mov
adc
dec
flds
sub
jb
nop
jle
mov
jecxz
test
mov
pop
daa
add
mov
notl
push
pusha
mov
popf
jmp
fiaddl
sbb
int
inc
rcrl
lahf
xor
loop
inc
xchg
xchg
addr16
inc
fstpt
adc
scas
mov
js
loop
in
ds
pop
lcall
jl
mov
push
inc
and
mov
mov
xchg
adc
dec
popf
or
into
and
adc
sub
inc
push
enter
sbb
mov
push
mov
popa
xchg
sbb
ret
call
addr16
mov
xor
xchg
adc
and
jle
mov
jecxz
clc
adc
enter
inc
xchg
loopne
cmp
aaa
idiv
movsb
cmpsb
jns
add
inc
lds
pop
std
lds
rcll
loopne
adc
test
mov
loop
stc
pushf
leave
sbb
arpl
fnstenv
in
and
ja
sbb
je
mov
push
push
push
jl
popf
lods
les
fisttpl
dec
gs
test
mov
cmp
pop
mov
add
sub
sub
loop
clc
in
es
or
add
daa
iret
lret
and
ds
lods
test
stos
in
sbb
subl
mov
jg
shl
lds
xchg
ljmp
je
mov
sahf
mov
add
dec
dec
cld
sbb
mov
push
sub
jmp
outsb
insl
je
inc
ljmp
adc
pop
jns
ss
sub
cli
pop
mov
jmp
fimull
inc
clc
lret
sbb
push
dec
pop
es
leave
mov
xchg
xor
add
imul
dec
push
dec
cmp
jne
es
scas
mov
fmuls
movsl
mov
cmp
out
adc
into
mov
shr
fiadds
or
mov
adc
and
cmp
mov
roll
mov
sbbb
lods
outsb
movsb
pusha
mov
sbb
das
and
popa
xor
cli
mov
ret
fs
cwtl
lods
adc
idivb
hlt
pop
sub
fnstsw
int3
es
out
test
movsb
xchg
sub
mov
pop
add
lods
dec
aad
xchg
inc
inc
pop
ja
into
push
lcall
pop
adc
insl
and
sub
mov
dec
orl
add
jge
std
scas
push
pop
xor
and
cmpsl
fiaddl
insb
decb
mov
das
insl
inc
pop
mov
cmp
cmp
xchg
divb
adc
out
and
imul
stos
sub
icebp
xchg
gs
stos
sbb
insb
jnp
mov
addr16
sub
xor
add
daa
jb
inc
stos
jl
fs
push
das
pop
aas
test
pop
outsb
andl
pop
push
ficoms
and
inc
in
mov
nop
filds
mov
cltd
adcb
imul
aaa
push
imul
sbb
jnp
pop
jge
mov
add
ret
arpl
rcrb
add
mov
in
mov
dec
enter
pop
roll
xor
sarb
cmp
repz
inc
lds
xchg
lret
std
test
ss
mov
cwtl
repz
lods
mov
neg
and
adc
dec
or
lahf
push
fwait
jne
mov
leave
dec
loop
mov
lcall
pop
cmpsb
jno
repnz
sbb
mov
in
pop
pushf
mov
cmpsl
or
jno
ja
cmp
cmp
test
push
push
popf
xchg
xchg
mov
inc
jae
or
in
lds
leave
jp
fwait
xor
mov
xor
popa
or
xor
js
mov
or
and
and
mov
enter
cmp
mov
sub
xchg
test
xchg
rol
or
and
movsl
psadbw
fnstsw
pop
push
xlat
ret
xor
ss
ljmp
jge
push
mov
lret
jb
call
fcomps
and
mov
lea
mov
mov
inc
rclb
aas
sub
and
jmp
pop
sbb
dec
sub
pop
add
pushf
mov
outsb
pop
xor
fldenv
int3
cmp
jo
jp
popf
rol
mov
adc
add
xor
sbb
lret
adc
loopne
aaa
lds
icebp
xorb
arpl
scas
pop
push
cmpsb
cli
ficoml
test
outsl
loopne
cmp
rclb
cltd
xchg
xor
push
repnz
mov
lret
popf
cltd
enter
mov
aaa
gs
jmp
dec
xchg
xchg
lret
or
add
arpl
push
and
mov
js
jbe
cmp
push
pop
push
cmp
mov
pop
xchg
hlt
mov
enter
cs
xor
outsl
cli
outsl
push
in
fbstp
sub
out
mov
and
inc
test
scas
xor
sbb
sub
cmp
hlt
je
dec
fxch
out
repnz
mov
xchg
or
outsb
lcall
mov
outsl
sti
stos
pop
shll
and
dec
in
cmpl
inc
fbld
push
out
and
dec
inc
mov
clc
shl
stos
test
push
ss
xor
push
cmp
andl
out
mov
mov
mov
add
test
sti
adc
or
cs
hlt
outsb
scas
add
in
movsl
hlt
jle
push
push
fcoml
adc
xor
xor
mov
push
loop
push
add
dec
lock
mov
aam
lea
mov
jl
js
arpl
sub
or
push
sbb
adc
inc
adc
shlb
sub
fprem
inc
jmp
in
mov
jb
sub
aaa
dec
rcl
daa
mov
mov
lahf
inc
and
dec
inc
mov
sbb
je
imul
jl
push
adcb
pop
std
jl
nop
test
pop
std
gs
sets
cmp
mulb
dec
out
mov
sbb
cwtl
fs
int
xchg
lahf
sub
in
repnz
xlat
mov
xchg
and
arpl
add
jl
and
mov
sub
jp
add
inc
pop
fsubrl
mov
or
lds
mov
ret
dec
aam
xchg
xchg
inc
in
rcl
dec
popf
or
or
lods
out
jge
sbb
mov
mov
imul
or
cmpsb
cwtl
pop
push
pop
aad
rcll
pop
inc
add
cld
cmp
repz
xchg
push
ds
gs
dec
insl
jbe
cli
leave
jge
adc
cmp
test
int
mov
mov
std
and
orb
mov
push
stos
dec
add
repz
lahf
inc
jo
mov
dec
xchg
dec
cmc
jmp
mov
sahf
xor
rcr
mov
inc
add
nop
aam
mov
bound
add
and
xchg
dec
idiv
mov
and
outsl
and
xchg
mov
movb
and
xchg
jmp
xchg
mov
out
jl
insl
sbb
scas
pop
lods
push
popf
dec
mov
ret
mov
test
sbb
dec
or
out
push
sub
bound
fmull
out
or
cwtl
inc
xor
fnsave
or
lods
cmp
dec
sub
mov
sub
sbb
fwait
push
lcall
fwait
sti
and
jge
adc
xor
inc
fwait
enter
sar
test
dec
rclb
aad
push
and
inc
fbld
jb
sbb
jae
daa
mov
icebp
inc
cmp
adc
and
and
mov
cwtl
xor
xchg
mov
jg
push
gs
mov
pop
or
adc
fisttpll
sub
cmpsl
sub
cld
movsl
push
inc
xchg
push
mov
add
lock
fdivr
lock
popa
add
ficompl
aam
testb
cwtl
out
outsb
xchg
shll
sub
imul
sub
cmpsb
push
sub
daa
cmp
clc
repnz
movsb
adc
sti
push
mov
add
push
pop
rclb
pop
adc
adc
sti
movsb
mov
shll
loopne
inc
outsl
pop
clc
in
mov
aaa
or
mov
push
inc
xchg
pop
pop
sub
dec
call
test
xchg
out
dec
stos
lcall
sahf
mov
dec
xor
xor
dec
insl
cmp
push
lcall
dec
movsl
mov
pop
xlat
add
or
popa
adc
dec
lahf
jae
pushl
lods
jbe
lods
jnp
jge
jae
ss
mov
movsb
negb
pop
lods
ss
outsl
lcall
jge
dec
xchg
lea
cmp
inc
idiv
mov
jp
dec
mov
iret
sahf
cltd
das
xchg
mov
mov
pop
es
outsl
cld
jp
or
ret
sub
into
lods
lret
push
pop
cmp
mov
lret
xchg
incl
and
scas
mov
fidivrs
mov
dec
adc
fs
movsl
mov
scas
lret
lret
inc
pop
add
xchg
and
arpl
fs
sbb
mov
and
cld
pusha
aam
ja
roll
sbb
movsl
mull
pop
js
xchg
ss
repnz
mov
add
data16
aad
iret
fstl
dec
loopne
aas
scas
pushf
mov
mov
test
mov
mov
icebp
ret
sti
xchg
jge
out
mov
popa
cmpsl
and
or
addr16
cltd
dec
not
nop
popf
stos
sbb
decb
pop
jb
test
scas
mov
stc
and
sbb
push
push
cs
stos
push
mov
movsb
sub
jbe
dec
jmp
or
les
inc
lret
in
pop
stos
pop
mov
sahf
push
mov
movsb
dec
jmp
fucom
in
shrl
add
std
lock
mov
stc
mov
xchg
pop
cs
inc
dec
imul
mov
sbb
leave
xchg
or
repz
test
sub
loopne
push
jbe
xchg
add
xchg
pop
leave
add
fbld
pop
mov
rclb
and
jb
je
repz
cmp
mov
mov
jl
pop
push
mov
cltd
int3
or
dec
inc
repz
shrb
adc
dec
dec
call
jae
push
push
jne
movsl
insb
xchg
ljmp
aad
fldcw
in
into
cmp
ret
push
pushf
leave
sti
fucom
or
add
lret
in
lcall
in
xchg
out
lret
out
push
clc
mov
pop
movsb
movsl
mov
mov
out
xor
inc
xor
dec
lahf
ss
push
cmp
sbb
mov
inc
jo
inc
ret
adc
mov
mov
shrl
or
sbb
xchg
pushf
je
ja
aam
lods
je
aaa
daa
mov
daa
adc
mov
push
sahf
fistps
inc
outsb
ja
sti
int3
cmpsb
sbb
cwtl
rcrl
cmp
sar
divb
pusha
add
scas
adc
dec
outsl
mov
inc
jo
and
xchg
jp
and
lods
mov
cli
add
lock
rclb
xor
push
jne
repz
inc
scas
sbb
icebp
xorb
cmp
cmp
jge
xchg
and
jno
pop
out
icebp
cli
push
mov
add
jmp
js
mov
jb
push
push
xchg
mov
and
xchg
inc
fsub
hlt
sbb
push
outsb
lret
stc
pusha
mov
pop
aam
mov
jae
stos
andl
movsl
ja
lret
in
pop
fs
xor
pop
lret
outsb
fsubr
cwtl
lods
dec
mov
mov
ficomps
pop
mov
daa
std
icebp
mov
jae
inc
nop
fmul
adc
xor
push
xchg
shll
insl
xchg
mov
mov
nop
rolb
jle
leave
out
ja
xorb
lods
push
shll
push
testl
int3
test
lea
mov
das
ss
ror
mov
out
and
xor
pop
jge
mov
fistpll
sbb
fdivrs
mov
aaa
fistpll
push
mov
mov
test
and
add
lds
cwtl
cmp
sbb
xchg
test
push
jbe
inc
cmpsl
adc
push
push
xorl
push
jae
cmp
cmp
mov
jmp
les
movb
adc
jmp
lds
dec
jl
in
or
jl
pop
aas
pop
adc
aas
mov
out
es
or
cld
movsl
adc
and
daa
ja
icebp
add
jmp
div
mov
mov
push
push
repz
movsb
mov
xchg
push
lock
stos
movsb
dec
or
dec
ss
mov
xchg
jle
cmpl
sub
hlt
mov
je
ror
push
mov
scas
sub
dec
cmpsb
mov
push
shrl
pop
arpl
stos
bound
push
stos
fmulp
add
push
mov
jae
push
out
mov
mov
pop
mov
xchg
insb
insb
sbb
lds
dec
pushf
cmc
pop
fstpl
sbb
add
mov
adc
out
jo
insb
cwtl
or
mov
lods
popf
dec
cmpb
mulb
sub
push
mov
sub
stos
jno
shlb
arpl
cmp
insl
jmp
inc
ljmp
mov
imul
jl
fidivrl
and
mov
mov
pop
je
addr16
push
dec
sub
test
fs
imul
mov
push
loopne
mov
push
fs
push
cltd
lock
or
dec
ja
adc
lock
stos
sub
shr
jmp
lahf
or
dec
sbb
push
xchg
test
xor
inc
jge
xchg
sarl
test
pop
pushf
mov
clc
push
dec
mov
cs
das
xor
shlb
xor
enter
aaa
and
pop
aaa
insb
jno
pop
cli
add
push
push
fimuls
shr
xchg
movsl
xchg
repz
push
loopne
ljmp
sbb
pop
add
push
ret
outsl
ljmp
cmp
and
mov
push
dec
cwtl
aas
pop
pop
or
cmp
rep
push
bnd
add
addr16
cmp
pop
mov
psadbw
cmp
cmp
ss
mov
bnd
or
pop
mov
adc
push
push
dec
rcll
mov
popa
xor
fs
mov
insb
sbb
xlat
movsl
pop
push
xchg
fstl
ljmp
jmp
push
adc
push
or
lret
push
fdivrl
dec
sub
mov
pop
jp
mov
testb
add
adc
cltd
jns
inc
mov
movl
push
jnp
rclb
in
divb
jno
insb
or
adc
enter
repz
aam
xchg
cmp
sub
jb
loop
mov
cmp
addl
sbb
xchg
scas
imul
add
xor
jmp
push
ljmp
jge
int
cmp
pop
fwait
lods
adc
sbb
mov
and
shlb
out
popf
std
adc
mov
and
negb
dec
ljmp
xchg
in
inc
xchg
pop
je
mov
add
mov
mov
js
ss
sub
addb
xchg
sbb
scas
adc
xchg
adc
mov
xor
jo
les
sub
cmpsl
jbe,pt
stos
lds
mulb
andb
lcall
jl
lret
dec
dec
add
hlt
jo
aam
jmp
mov
cs
aaa
fucomi
je
cltd
mov
fisttps
jecxz
lret
icebp
cmc
mov
imul
mov
sub
xlat
push
popf
push
mov
mov
test
pop
xor
hlt
push
inc
or
loopne
add
repnz
mov
push
jle
add
stc
rol
push
jecxz
xchg
push
iret
cwtl
icebp
in
mov
into
mov
mov
mov
rclb
inc
sbbl
nop
daa
xchg
loopne
addr16
rcr
push
push
jmp
jo
jl
arpl
gs
inc
psubw
movb
inc
cld
jb
sbb
ss
in
lcall
loop
popf
mov
add
dec
aas
popf
addr16
sub
cmpsl
mov
out
add
push
les
lea
imul
add
sbb
cld
xchg
mov
or
and
pop
push
mov
push
jns
push
push
dec
pop
add
stos
and
xchg
lds
or
out
ficompl
jle
or
mov
std
mov
add
shrb
outsb
stc
stc
fisttpl
mov
jle
fwait
test
adc
mov
mov
mov
add
dec
cmp
das
pop
out
xor
hlt
jle
jl
pop
pop
xchg
jp
or
cmc
sbb
fadd
ficoms
inc
dec
call
loop
arpl
cmpsb
stos
mov
push
insl
cmc
cmp
push
lret
fildl
dec
dec
sbb
daa
push
std
dec
or
out
inc
push
sbb
jns
xor
cmp
ror
call
xchg
addb
scas
xor
out
or
mov
cld
and
cltd
xchg
out
lret
and
ds
add
loopne
pop
lds
add
push
jg
xlat
cmc
enter
call
test
pop
sub
aaa
mov
into
not
daa
ss
pop
and
add
out
imul
jnp
sub
and
jno
imul
mov
pop
lods
imul
jnp
jnp
inc
dec
dec
into
sti
and
jb
xchg
test
pushf
jnp
lods
or
dec
fmuls
cmp
imul
stos
push
jl
out
jp
data16
inc
test
aas
mov
lds
sub
enter
mov
cmp
lcall
lock
outsl
cmc
sarb
sbb
xor
sbb
mov
push
into
cmp
lds
xor
cmp
aas
loopne
stos
xlat
ret
inc
mov
lret
dec
sahf
cli
mov
pop
scas
sub
sbb
bound
jae
dec
lret
test
call
xchg
add
rcll
or
inc
jle
jle
add
insb
popa
lds
fisubl
and
nop
push
xchg
adc
imulb
rclb
cmp
pushf
rol
push
mov
setb
jbe
ficoml
out
out
mov
adc
pop
ljmp
push
sti
or
mov
js
sbb
insb
mov
xchg
mov
and
mov
push
inc
xchg
xchg
adc
jnp
mov
push
std
test
outsb
insl
adc
clc
ja
jp
push
gs
ds
enter
lcall
sahf
mov
stc
xchg
and
fisttps
push
xor
push
pusha
sbb
cld
dec
adc
jge
dec
xchg
int
xchg
pop
mov
fldenv
add
dec
mov
sbb
dec
cmp
sbb
inc
popa
imul
sub
in
into
xchg
fdivrl
ja
fwait
or
in
insl
aad
outsb
xchg
cmp
add
orb
mov
movsl
and
dec
in
adc
sti
mov
fstpl
and
mov
push
or
cmp
fistpll
pop
mov
and
std
scas
push
cmp
in
mov
push
pop
cs
inc
jl
mov
and
mov
aad
popf
cmpsl
cmpsb
lahf
xlat
mov
ja
mov
sti
enter
pushl
push
dec
cmpsl
jno
lret
cli
inc
nop
sbb
pop
xor
loopne
pop
pop
call
adc
jnp
in
int
inc
adc
lods
outsb
or
jmp
imul
stc
xchg
dec
dec
inc
jo
and
cs
dec
mov
sbb
mov
cmp
or
fmull
sub
negb
jecxz
pop
mov
push
dec
or
fldenv
sbb
fwait
push
pop
bswap
mov
pop
inc
fs
mov
dec
or
ss
aas
or
mov
repz
mov
aaa
mov
lock
or
icebp
bound
or
xlat
or
inc
loope
insl
jp
dec
push
add
adc
pop
sti
aad
data16
andb
push
xor
insl
jle
daa
cli
jge
xor
aas
add
mov
dec
push
cmc
adc
cld
adc
cli
mov
arpl
setne
jo
mov
jp
mov
xor
adc
in
sub
jo
pop
dec
or
cmc
cmpsb
dec
push
jl
pusha
bound
imul
jnp
or
out
mov
sbb
pop
popa
ret
mov
repz
xchg
xchg
nop
loopne
add
add
adc
sub
or
andb
adc
inc
inc
jl
cmpsb
xchg
movl
mov
scas
pop
add
scas
xchg
inc
sub
lmsw
pmullw
inc
xchg
pop
and
lahf
push
cltd
mov
mov
push
lea
js
outsl
cwtl
stc
dec
int3
lahf
xchg
loop
ret
adc
jne
fsubs
out
xor
pop
fisubrs
jo
sub
add
cmc
movl
inc
repnz
ror
jno
int3
cmp
push
das
pop
mov
mov
adc
or
in
jmp
ss
lods
js
call
test
and
add
dec
inc
push
in
inc
out
sti
cmove
cmp
bnd
or
add
lds
dec
je
jns
lahf
je
dec
scas
jge
mov
leave
dec
lcall
jno
jecxz
mov
cwtl
pop
cwtl
cmp
dec
dec
jmp
push
jp
pusha
mov
daa
jp
in
fs
xor
dec
mov
std
dec
dec
xchg
dec
call
pushf
stc
test
mov
fcoms
popa
jae
mov
or
pop
jnp
iret
aaa
aad
in
xor
icebp
repz
aam
adc
loope
cmp
out
sbb
xchg
push
lahf
inc
outsb
cmp
je,pn
andb
js
leave
lods
or
mov
testl
stc
dec
mov
icebp
std
ljmp
inc
xlat
cmp
fdivrl
aad
insl
fabs
addr16
push
ficompl
loope
mov
mov
call
xchg
dec
testb
lahf
mov
in
aad
cmp
jge
pushl
out
decb
dec
adc
xchg
aad
jo
ja
jmp
mov
out
push
push
mov
cmp
xor
sbb
test
mov
into
lods
lret
lods
dec
inc
in
sub
cmp
lret
mov
mov
sub
daa
mov
fsubl
xchg
and
adc
fnsave
mov
mov
xchg
cmp
mov
call
scas
mov
popf
pop
in
imul
add
ret
bound
push
add
dec
inc
cltd
shlb
nop
push
gs
out
daa
jbe
andl
imul
cmp
pop
sub
dec
out
cmp
lahf
lods
push
pop
xor
mov
xlat
xor
adcb
test
sub
and
jmp
adc
lret
cld
ret
pop
loop
call
mov
push
int
pop
adc
psrld
mov
sahf
lret
icebp
repnz
enter
cs
xorb
mov
sbb
clc
inc
xchg
scas
xor
mov
sbb
and
mov
mov
loop
mov
outsb
adc
sub
loop
addb
adc
cwtl
or
pop
es
cmp
xchg
outsl
dec
jp
pushf
in
pushf
mov
fbstp
mov
outsb
jns
rcll
and
and
aaa
push
lret
jae
adc
rorl
repz
jecxz
mov
daa
adc
lods
insb
cmp
mov
cmc
xor
sbb
ficomps
push
pop
lock
xchg
aaa
addr16
adc
cs
jmp
mov
not
inc
push
js
je
and
or
stos
fwait
xchg
mov
nop
out
sbb
movsl
mov
addr16
cmp
insl
xor
sub
sbb
je
es
push
pushf
add
dec
adc
dec
sub
or
scas
mov
mov
xchg
inc
sahf
add
cltd
jae
xchg
stos
xchg
mov
test
es
jmp
clc
push
subl
jp
and
aad
nopl
enter
leave
fmull
inc
inc
and
rorl
jle
pop
push
push
nop
or
sub
mov
addr16
frstor
loope
xor
neg
dec
jl
mov
sub
aad
sub
mov
shll
mov
pop
arpl
inc
sbbl
aad
add
test
inc
dec
cld
push
push
dec
jnp
insl
iret
pop
cmp
cmpsl
ret
jecxz
es
lock
cmp
cmp
scas
mov
or
aaa
cli
push
sub
jb
push
lods
jmp
movsb
les
mov
insl
mov
inc
sub
fisubs
mov
fwait
lods
icebp
push
mov
pop
enter
call
outsb
dec
lods
mov
ds
sbbb
test
or
xchg
loop
jle
xchg
icebp
push
mov
hlt
cmp
or
movsl
push
out
std
dec
sarl
leave
dec
jnp
sub
pop
xchg
inc
bound
icebp
adc
pop
inc
lahf
popa
mov
and
ja
dec
xor
xor
jle
adc
mov
sahf
aam
adc
pop
in
inc
cmc
jb
jle
or
cmpsb
outsl
push
mov
push
and
xor
xor
aam
das
push
repnz
mov
leave
mov
push
stc
in
loop
mov
jb
scas
rep
pop
lock
sub
mov
mov
inc
fwait
and
cmpsl
cmpsb
jne
pop
inc
push
outsb
dec
inc
in
push
pop
xchg
xchg
mov
pusha
test
out
fadd
mov
sub
les
mov
roll
jge
or
sarl
iret
aaa
imul
repnz
into
fsubr
or
sbbb
mov
scas
pusha
outsb
xchg
xchg
test
sbb
lahf
jno
ret
in
sub
andl
jg
adc
cmp
dec
fsubrl
setns
adc
int3
icebp
mov
adc
xchg
mov
mov
cmp
shl
mov
outsl
mov
sub
insb
sbb
add
inc
scas
jge
xchg
mov
sti
loopne
in
pop
and
add
movsl
mov
lods
mov
bound
ja
data16
mov
je
xchg
add
jecxz
cmpsw
loop
push
xchg
fmull
cmp
cmc
mov
sub
sub
lret
push
adc
sbb
dec
js
sub
sub
ret
loop
mov
fwait
stos
mov
push
mov
aaa
sub
popf
cmp
cs
pushf
xchg
jl
sub
pop
dec
pop
movsl
and
cmp
ljmp
lcall
mov
adc
jle
jo
pop
lret
mov
or
xchg
mov
inc
mov
adc
out
into
sbb
xor
std
fdivp
loope
push
ret
mov
jne
mov
mov
inc
sub
mov
lcall
add
test
xchg
pop
rcll
and
in
ja
add
out
pop
call
out
mov
xor
addr16
push
test
arpl
jns
fsubs
pop
cmp
xchg
push
xor
xchg
lret
nop
arpl
into
mov
inc
jecxz
into
je
mov
mov
cmp
sub
sub
xor
sub
xor
outsl
xor
jno
into
lods
hlt
fildll
jb
jmp
in
or
cmc
fiaddl
outsl
jbe
std
xor
push
movsb
mov
sbb
add
or
mov
bound
or
insl
sahf
int
dec
loop
and
mov
mov
outsb
mov
imul
inc
pop
cmp
add
vxorps
shr
mov
stc
jge
lahf
pop
xorl
and
push
xor
call
mov
scas
sub
pop
adc
mov
mov
and
cmp
shrl
in
stc
sbb
dec
mov
mov
push
push
into
rcrl
int3
sbb
mov
xchg
pop
out
unpcklps
inc
mov
sbb
pop
les
mov
add
and
push
mov
repnz
jns
pop
mov
cmpsl
add
daa
mov
int
iret
xchg
sbb
add
mov
jp
add
jns
mov
or
lea
push
and
mov
sub
sub
lahf
fwait
and
jp
jo
fbld
mov
sub
inc
add
fcoml
mov
fisubl
adc
xchg
aas
inc
in
std
in
nop
adc
push
dec
leave
adc
pop
jle
pop
pop
push
pusha
lock
movsl
mov
inc
sbb
out
out
scas
sbb
jbe
dec
pop
mov
or
in
leave
or
cmp
or
inc
push
adc
sarl
repz
stos
mov
popf
jb
std
mov
lds
push
add
into
adcl
cmp
sahf
cmpsl
imul
dec
je
loop
mov
popa
adc
lea
js
mov
stmxcsr
call
mov
sbb
mov
adc
xchg
sahf
movsl
je
or
sub
imul
stos
mov
cs
test
jge
sbb
aam
das
and
icebp
push
xchg
mov
rorb
mov
mov
cmp
mov
lea
hlt
pop
xchg
and
ljmp
mov
xchg
jo
add
pushl
das
xor
xchg
add
cli
jbe
insl
adc
popf
icebp
aad
movq
dec
mov
push
imul
into
in
arpl
fsubrp
and
mov
and
int3
inc
add
and
xchg
dec
pop
xor
fwait
ja
mov
in
xlat
jno
ja
out
or
int
mov
aas
add
mov
cmp
dec
and
mov
push
pop
out
jg
mov
les
mov
dec
rcll
pop
adc
adc
roll
jb
sahf
cmpsb
sub
adc
mov
insb
mov
jno
dec
lret
out
cmp
jae
leave
push
cmp
inc
mov
add
cmpsb
incl
push
outsl
add
loope
loop
jg
push
inc
cld
add
cld
jbe
mov
inc
fs
add
jnp
sbb
add
pop
add
mov
pop
jp
xor
sbb
ss
mov
cltd
push
in
add
mov
orl
inc
scas
cwtl
xchg
adc
fisttpll
cmp
gs
cmpsl
rol
rol
repz
mov
out
pushfw
sub
jae
and
out
sbb
sbb
jge
arpl
test
pusha
lds
mov
daa
xor
imul
hlt
sub
cmp
iret
mov
dec
cli
inc
jb
scas
lods
mov
int
jo
sbb
mov
mov
lret
shlb
xchg
jmp
dec
add
xchg
testb
xchg
sbb
cwtl
gs
sub
ret
mov
cmp
jl
leave
mov
add
out
jb
inc
push
push
push
inc
frstor
add
mov
je
and
sahf
pop
xchg
mov
jbe
lods
in
negb
lock
dec
jl
dec
loop
mov
mov
sbb
lcall
and
inc
xor
xor
jno
dec
inc
sarb
xor
sbb
xchg
pop
sub
mov
insb
es
cmp
stos
lea
fs
lahf
aas
dec
je
test
mov
pop
cwtl
push
jnp
push
aad
fisttpl
daa
ja
mov
mov
les
sahf
adc
adc
pop
mov
dec
cwtl
test
cmpsl
ret
aaa
lds
or
ss
or
mov
pusha
xchg
add
stos
inc
jp
das
into
push
stos
adc
addr16
fidivrs
pop
inc
add
inc
pop
aad
setnp
arpl
imul
iret
sub
or
jnp
xor
lds
stc
pushf
push
outsl
ss
js
ret
mov
into
fwait
sbb
neg
lret
push
and
mov
dec
push
or
imul
ret
or
dec
movsl
mov
xchg
mov
mov
xchg
pop
das
pop
mov
jl
jge
rclb
cmp
add
sub
sti
rcll
xor
lahf
jecxz
jne
loop
mov
jo
cmp
mov
dec
dec
in
xchg
dec
orb
and
fst
push
or
out
dec
jns
xor
scas
jle
adc
xchg
cmpsl
xchg
jb
dec
and
or
popa
je
imul
inc
cmp
sahf
gs
das
not
pop
insl
in
in
mov
aaa
jnp
jns,pn
and
inc
sub
fistl
loope,pt
jbe
pop
xor
out
fldenv
into
int
cld
shlb
push
sub
lea
add
clc
aad
insb
repnz
popf
js
jb
jge
add
xor
iret
out
xor
sti
shlb
nop
adc
scas
out
jmp
ss
insb
mov
jne
shll
and
sub
cli
cmc
mov
pop
pop
movsb
bound
jb
sbb
lret
stos
andl
mov
xor
jnp
add
mov
or
and
pop
mov
in
inc
xchg
int3
out
inc
leave
push
in
ja
mov
xchg
or
aam
imul
daa
sahf
inc
dec
add
mov
add
mov
xchg
sub
pop
adc
dec
and
mov
out
jle
loop
subb
cmp
insb
mov
push
mov
shrl
mov
jnp
shrl
mov
push
shlb
lds
jecxz
lret
push
lock
pop
icebp
aaa
adc
push
lcall
push
xchg
ds
push
cmpsl
fucom
out
mov
movsb
xchg
in
xor
jg
jge
mov
lret
cmp
xlat
cmp
add
pop
lea
stc
jmp
inc
cld
mov
mov
sbb
inc
adc
lds
popf
fwait
out
mov
mov
das
call
mov
fnstsw
rcrl
jl
or
add
roll
push
dec
xor
xor
fimuls
pop
scas
stos
jno
adc
shll
sub
xchg
sti
add
in
jae
adc
jmp
sub
cmp
les
mov
ss
push
mov
xchg
shl
inc
in
add
jne
enter
jecxz
pop
cmpsb
shll
dec
lds
mov
jbe
sbb
das
out
push
cmp
rolb
in
into
xchg
ret
out
ss
mov
jp
dec
adc
js
jb
inc
mov
mov
lods
pop
andb
andb
test
add
push
xchg
pop
sbb
mov
divl
or
push
test
push
inc
mov
andl
popf
std
mov
add
add
sahf
and
out
pop
push
xchg
cmp
test
jne
or
bound
push
insl
jae
push
or
sub
sbb
xor
pop
cmovnp
mov
jl
cwtl
rolb
mull
mov
lcall
rorb
jp
lcall
in
mov
add
jmp
fists
mov
loop
xor
daa
push
mov
adc
ds
xchg
adc
ret
sub
ja
lret
repz
adc
sub
scas
push
mov
ljmp
sbb
adc
in
test
repz
insl
dec
push
dec
stos
repnz
out
clc
filds
fs
out
rol
ret
repz
pop
and
lret
cmp
fisttpl
or
jle
std
cmp
jmp
add
or
lock
stos
lods
xchg
dec
insb
lods
pop
jb
stc
loop
dec
repnz
test
aad
adc
cld
test
pop
data16
mov
scas
push
push
cltd
movsl
std
icebp
or
pop
fwait
mov
push
push
dec
js
leave
mov
filds
mov
dec
cmp
jmp
jmp
shll
enter
arpl
lock
jb
push
and
cmpl
lcall
in
inc
mov
jmp
and
pop
mov
mov
je
ficomps
ret
inc
out
imul
jmp
jbe
out
sbb
ds
fdivp
imul
dec
fiadds
rol
push
lds
roll
jl
in
scas
cmpb
inc
adc
pop
call
negb
jp
test
fistpll
dec
cltd
testb
lods
push
aaa
sbb
dec
sub
mov
jno
fldenv
in
mov
cltd
lods
mov
lahf
cmpsl
xor
sub
subl
add
push
inc
jecxz
aad
shr
inc
imul
fstp
jne
pop
inc
dec
repz
pop
int3
add
cmp
pop
pop
sbb
xchg
fidivrl
push
cmc
leave
outsb
xor
loopne
dec
or
push
cmpxchg
cmpb
and
push
popf
lds
or
mov
push
jmp
and
pop
sub
insb
in
or
or
subl
xchg
cmpl
ja
dec
subl
and
in
or
call
mov
out
ret
sbb
pop
outsl
in
aad
push
sub
or
xchg
inc
scas
or
jmp
call
jge
mov
inc
sti
push
insl
jle
out
dec
push
inc
movsb
test
ss
push
lock
mov
jo
mov
lea
icebp
movsb
inc
sbbb
pop
out
push
stc
hlt
jge
jno
jle
leave
ds
lock
enter
cs
xchg
jbe
mov
add
call
movsl
mov
mov
and
cmp
jno
adc
lods
xor
or
bound
xchg
cmpb
fnstcw
xchg
pop
lcall
mov
xlat
fs
flds
adc
xchg
mov
in
inc
out
sbb
cmp
frstor
pop
dec
cmp
lods
movsl
ficoms
mov
pushf
xlat
int
or
stc
or
adc
xchg
cmp
push
xchg
xchg
push
insb
or
and
lea
xor
xor
xchg
mov
dec
or
fisubs
xchg
bound
imul
test
div
dec
dec
movsl
cmp
repnz
pop
mov
sub
inc
das
insb
xor
or
lods
mov
and
xchg
mov
mov
mov
lret
mov
sub
xor
add
jmp
dec
and
lock
dec
add
and
xchg
stc
fs
jo
xchg
loope
cmpsl
mov
test
in
jp
xchg
ja
xor
or
xor
sahf
xlat
fildl
add
add
jge
addr16
outsb
test
pop
out
icebp
cli
sub
mov
jnp
xorb
icebp
js
jb
subb
insl
iret
cmp
nop
xor
mov
fsub
cmp
push
add
or
je
clc
testl
bound
scas
addl
mov
std
cld
mov
sbb
insl
subb
inc
sbb
mov
scas
in
dec
sub
mov
jle
cmpsb
testb
ds
push
dec
dec
inc
enter
ficoms
in
pushf
sbb
inc
lret
in
ret
and
push
adc
push
mov
jne
cmp
popa
leave
fcmovb
pop
sti
xchg
dec
dec
sub
dec
pop
dec
mov
sbb
xchg
into
push
test
shlb
jg
mov
stos
lds
cld
sub
jecxz
jl
dec
jb
and
lds
mov
mov
fsubl
xchg
jg
xor
test
jp
pop
orl
mov
pop
je
jecxz
leave
ja
movsb
pop
stos
dec
xchg
xchg
lods
inc
add
pop
mov
mov
cmp
sbb
sbb
dec
cwtl
inc
scas
dec
les
aaa
mov
inc
sbb
adcl
jns
frstor
jl
adcb
movsl
mov
cwtl
jp
sub
jmp
lahf
pop
push
out
mov
push
ret
dec
pop
xor
push
insb
je
xor
sti
dec
dec
sub
sahf
inc
into
aad
xlat
test
sub
ret
stos
cs
cmp
push
pop
scas
add
xor
sti
rep
pop
adc
xorl
loopne
mov
mov
loop
jns
pop
fimull
xchg
xchg
xchg
popa
jo
push
lods
scas
xor
jne
leave
mov
leave
sti
loope
inc
or
lahf
jno
lahf
push
add
lods
cli
lea
cltd
inc
jne
inc
pop
pop
lret
divl
ret
and
mov
mov
add
rorb
imul
jl
lock
stos
das
dec
fcomip
stos
jae
loop
xor
jge
mov
mov
push
mov
cmpsb
inc
xchg
arpl
push
cld
push
xchg
inc
sub
idiv
or
mov
and
dec
into
aad
and
dec
pop
cltd
sub
and
mov
lcall
sub
add
scas
es
das
mov
adc
sub
and
lods
push
pop
mov
test
mov
sub
insb
or
rclb
aas
pop
nop
rcrl
and
lcall
inc
cmpsb
xchg
sub
inc
ret
inc
je
cmp
lods
roll
inc
scas
mov
mov
push
jo
leave
loope
push
mov
loope
scas
mov
sub
bound
adc
sub
icebp
jle
sbb
das
push
mov
sub
lods
mov
stos
es
das
aas
outsl
fsubl
add
lods
ret
data16
dec
and
sbb
xchg
jge
js
adc
jecxz
pop
adc
xchg
fcmovnb
adcb
nop
pop
cs
lea
jb
stos
mov
mov
cmpsl
test
daa
ss
pop
push
pop
cmpsb
cmp
dec
rcll
fisubrs
popf
cmpsl
nop
daa
xor
hlt
adc
out
in
xchg
dec
mov
mov
cmp
and
sarl
into
add
fstps
mov
push
je
xor
ds
outsb
inc
inc
stos
sub
mov
mov
or
aas
and
arpl
jmp
mov
and
aam
sti
push
jnp
scas
jecxz
pop
js
sub
jns
mov
or
and
ss
jnp
inc
scas
dec
in
mov
sub
and
cmp
icebp
loopne
fs
adc
push
jnp
sbb
xchg
jae
rorl
imul
in
jge
movsl
mov
mov
xchg
mov
xchg
cmp
pop
push
nop
loope
pop
inc
dec
inc
lock
sub
and
cmp
inc
or
stc
rcrl
lret
pop
mov
push
cmc
jns
mov
push
jns
adc
movsl
leave
mov
mov
inc
dec
test
push
fistpl
push
sbbb
stos
add
cmp
cmp
xor
data16
mov
sahf
dec
mov
sub
sub
mov
in
push
push
pop
pop
repz
lds
mov
push
fwait
cli
and
mov
mov
mov
pop
popf
std
daa
add
imul
fistl
call
adc
or
sbb
mov
mov
test
push
aam
dec
xchg
fucom
pop
jnp
add
enter
popa
pop
add
jge
lcall
ret
mov
mov
add
bound
je
push
and
imull
lret
cld
psubsb
lock
test
pop
fisttpll
add
add
push
jo
lcall
xchg
sahf
xor
jecxz
mov
and
pop
popf
ljmp
push
scas
cmc
mov
push
adc
cwtl
in
dec
jg
cmp
or
mov
sub
pushf
dec
test
or
dec
ret
imul
repnz
lret
cmp
lret
push
cmp
dec
shl
test
cs
ss
arpl
arpl
push
ret
cmp
sbb
nop
ds
fildl
push
pop
lret
ficoms
lds
push
int3
and
enter
test
jmp
int
mov
fadds
sub
das
cmp
cmp
sub
lods
jo
insb
lahf
dec
test
imul
jl
mov
or
and
les
mov
fidivl
stos
dec
ret
cmp
gs
sti
insb
test
pop
jo
pop
stc
jp
sbb
int
bndldx
sub
mov
icebp
je
ss
imulb
fildll
jb
cli
and
pop
cmp
stc
fs
std
fmul
sti
dec
pop
int3
je
mov
fwait
rclb
rcl
out
pop
inc
xchg
lret
movsl
xor
jmp
dec
pop
push
inc
jmp
test
push
mov
rcrl
dec
mov
adc
and
nop
inc
jbe
shlb
add
inc
and
sub
arpl
push
mov
mov
jp
adc
push
cltd
push
aaa
imul
ds
add
roll
push
lea
push
jae
movzbl
mov
jne
or
les
cmp
rolb
addb
mov
popa
push
inc
ret
stc
cmp
repnz
hlt
add
subb
xchg
pusha
loopne
aam
xchg
mov
pop
mov
test
and
lret
stc
mov
lahf
mov
rcll
xor
cld
adc
sarl
or
mov
pop
push
test
mov
mov
cmc
push
int
inc
jp
pusha
repz
fsubs
adc
xchg
leave
rorb
add
cmp
js
mov
daa
cmc
daa
lahf
jg
jle
add
and
out
push
into
mov
pop
and
xor
pop
or
cmc
push
lock
bound
ds
jb
jae
mov
sbb
cwtl
pop
adcb
lret
sub
popa
mov
shll
jb
inc
nop
je
mov
loop
pop
movsl
jecxz
nop
scas
inc
out
mov
std
adc
into
adc
add
test
scas
push
shrb
sti
mov
idiv
sbb
ljmp
sub
cmpsl
pop
into
fistpll
das
shlb
jecxz
ret
adc
xchg
push
outsb
mov
xor
push
cmp
outsb
fistpll
out
jnp
lods
hlt
push
mul
add
cmp
adc
jmp
stos
adc
int3
divb
mov
mov
xchg
or
std
out
adc
and
nop
ljmp
mov
daa
movsl
add
pusha
cltd
jnp
push
mov
xchg
ljmp
vandpd
mov
mov
jle
inc
sbb
and
mov
mov
mov
arpl
fdivrl
or
stos
xchg
in
cmp
or
mov
add
cmp
push
mov
iret
data16
add
cmp
stos
stc
xor
push
loopne
xor
shl
mov
fsts
mov
ljmp
inc
sub
mov
enter
xlat
std
xchg
push
int3
ds
call
repz
inc
outsl
mov
into
lods
pop
mov
lahf
add
jns
sbb
popf
xor
push
inc
icebp
push
js
popa
push
add
scas
adc
je
inc
push
add
xor
shl
lods
push
xor
jecxz
jns
inc
cld
mov
les
lea
lret
push
mov
adcl
ss
push
jo
or
pop
mov
xor
test
sbb
mov
or
out
mov
push
outsl
sbb
pop
aam
movb
mov
inc
nop
ss
negb
dec
sbb
adc
out
and
add
jg
push
mov
xor
push
aaa
out
fisubl
or
dec
mov
data16
pop
dec
ljmp
pop
mov
jbe
xchg
push
mov
or
mov
mov
popf
dec
add
fldl
mov
arpl
cltd
mov
out
cmp
cmp
roll
cmp
pop
aas
mov
pop
inc
mov
xchg
loop
adc
rolb
shll
xchg
aam
mov
iret
cmp
enter
mov
int3
in
ret
in
cli
ja
and
iret
mov
and
jg
jb
das
into
daa
not
mov
or
scas
data16
inc
push
sti
and
xor
in
pop
movl
fcmovu
dec
and
pop
lcall
cltd
xor
hlt
mov
cmp
add
push
mov
add
shr
fwait
scas
mov
mov
inc
sbb
jge
lock
lea
test
mov
adc
or
sbb
add
flds
cmpb
leave
sub
hlt
out
in
cmp
add
push
mov
lahf
fists
stc
mov
lret
mov
adc
xlat
outsl
ret
xor
mov
add
jae
repnz
aam
fisttpll
test
mov
mov
je
stos
in
in
pop
mov
aam
lcall
jae
lods
mov
pop
push
jge
rclb
repz
inc
push
sbb
pop
and
shll
mov
lret
or
inc
sbb
cmp
loopne
inc
and
pushl
hlt
mov
mov
jle
int3
incl
int
dec
stos
push
aaa
cld
pusha
rorb
nop
cli
ret
cli
outsb
loopne
and
xor
and
sbb
stos
sbb
or
in
xchg
push
cmpsb
scas
ss
dec
sbbl
addl
aad
mov
testl
jnp
ds
and
dec
subl
lock
push
outsl
and
sti
mov
adc
push
push
pop
stc
call
xor
adc
xchg
outsb
std
pop
pushl
sbb
popf
out
fisubs
push
stc
add
or
lret
clc
lret
fst
scas
fldt
add
mov
bound
inc
push
js
mov
fsubl
scas
shl
or
xchg
mov
scas
imul
cmp
mov
dec
mov
cltd
bound
dec
scas
push
mov
sti
ret
dec
mov
push
aad
scas
leave
clc
dec
cli
inc
out
jne
movb
js
pop
add
add
shl
decb
movsb
in
inc
repnz
push
repnz
inc
ret
dec
cltd
sbb
inc
lea
clc
or
lods
insb
mov
push
stos
daa
shll
or
mov
mov
and
movsl
lahf
lret
sahf
cld
adc
adc
pushf
ret
shrb
sub
addb
icebp
mov
test
inc
jg
leave
pop
ficompl
mov
lods
cld
xchg
fcomps
sub
lahf
inc
pop
xor
mov
and
dec
dec
add
and
inc
or
movsb
dec
clc
xor
bound
fstl
push
cmc
fwait
cmpsb
mov
fstps
inc
fwait
insl
rcrb
mov
cwtl
lret
dec
leave
xchg
mov
adc
cwtl
jnp
lods
push
test
xchg
mov
adc
imul
ret
mov
mov
and
ds
push
addr16
sti
stos
std
or
iret
xor
pop
pop
shll
jns
dec
xchg
shlb
test
pop
int3
xor
inc
xor
xor
gs
jno
mov
jns
pop
push
fisubrl
and
gs
sahf
mov
sub
cmpsl
std
aas
pop
stos
or
cld
lahf
into
mov
sbb
mov
pop
mov
hlt
inc
add
int3
shll
adc
stos
lahf
sbb
jnp
decb
scas
loopne
ja
jbe
out
stc
or
cs
lea
flds
mov
imul
imul
fisubs
mov
inc
sub
push
ds
dec
cli
nop
scas
xor
push
out
in
movsl
or
call
add
xor
mov
and
jmp
add
mov
pop
mov
push
mov
imul
cltd
popa
inc
or
loope
mov
lcall
adc
loope
xchg
out
aam
fwait
dec
ljmp
les
mov
xchg
pushf
push
stc
xor
pop
fs
je
push
insl
cmpsb
add
int3
and
cmpsb
mov
fadd
das
jnp
push
mov
mov
ret
sbb
jp
in
mov
jle
xchg
ljmp
repnz
sbb
jnp
pop
loopne
jnp
stos
fwait
dec
imul
fwait
iret
push
out
rorb
cwtl
sbb
jle
lret
imul
xlat
xor
dec
mov
sarb
mov
out
ret
mov
cmp
imul
enter
push
test
jge
fadds
adc
inc
dec
inc
xchg
cmp
mov
out
xchg
mov
clc
insb
push
outsl
pop
sbb
test
pushl
sub
adc
imul
xchg
int
cli
mov
dec
sbb
int
mov
cmp
scas
push
fnsave
das
and
cwtl
or
jns
insb
inc
ja
fistl
int
rorl
xor
leave
sbb
cmpsl
pop
inc
xor
or
jl
xor
ret
movsb
das
mov
mov
fldenv
jg
lods
sbb
and
jnp
in
mov
ljmp
pop
dec
call
icebp
cmp
mov
xor
jnp
and
sbb
inc
mov
inc
inc
out
lds
pop
fwait
jmp
pop
lods
mov
xchg
mov
mov
test
sbb
fmuls
stos
pop
cmp
xchg
lcall
dec
pop
ret
leave
mov
call
xlat
jg
xor
sbb
jo
fs
out
out
scas
pop
mov
push
sbb
mov
dec
bound
std
adc
es
sbb
or
data16
out
shll
mov
fadd
out
sub
pop
int3
call
aad
jl
and
imul
in
cltd
rclb
mov
xchg
sub
cmp
mov
pop
outsl
mov
push
call
adc
cmp
xchg
addr16
cmp
push
insl
sub
mov
push
mov
test
repnz
mov
in
and
lock
cmc
mov
ret
inc
and
fs
cmpsb
rolb
sub
cmp
test
test
mov
push
or
cmpsl
cld
cmp
mov
les
pop
rcrl
mov
inc
xor
movb
jns
test
adc
dec
cmp
adc
aaa
aam
fnclex
add
and
stos
outsb
jno
push
ljmp
mov
rclb
jmp
push
pop
or
lods
ja
outsb
ljmp
ficompl
xchg
cld
in
add
inc
push
sbb
imul
ret
push
jns
mov
ja
dec
cmp
cmp
sbb
ret
push
outsb
rorl
or
jle
gs
xchg
cwtl
repnz
mov
add
cmp
add
out
mov
fbld
loopne
cltd
inc
adc
enter
mov
sarl
jo
xchg
inc
or
fdivp
jnp
je
ds
ljmp
jne
rclb
ljmp
xor
or
test
xchg
test
cmpsl
sub
jae
or
das
push
in
sbb
add
hlt
dec
inc
imul
push
lahf
mulb
or
insb
orl
push
insb
jmp
inc
mov
mov
out
cltd
sub
fnstenv
or
xlat
sahf
jle
int
leave
stc
loope
xor
mov
daa
push
jno
movsb
shrb
push
push
sbb
xor
cmp
push
pop
cmpsb
ficoml
jno
mov
cltd
ss
lds
and
loope
out
jle
mov
inc
pop
mov
jle
sub
add
push
mov
sarl
mov
hlt
cmp
mov
fistl
popa
jle
dec
into
xchg
cld
jle
cld
mulb
mov
jl
repnz
cmpsb
shll
enter
mov
or
cld
adc
cmp
dec
mov
cmp
mov
or
movsl
and
out
popa
xchg
into
xchg
loop
faddl
rcr
call
js
sti
scas
adc
mov
push
add
subl
outsl
imul
and
lret
dec
adc
xchg
pop
pop
popa
jp
stc
mov
ret
outsl
leave
mov
lcall
mov
cmpsb
and
inc
vpackssdw
sbb
mov
lea
shld
loop
dec
mov
inc
mov
fimull
mov
outsb
pusha
mov
add
and
pushf
push
in
dec
inc
mov
lods
jle
ds
loope
cmc
xchg
pop
and
in
in
jbe
add
sub
fidivl
sbb
push
inc
aas
test
mov
mov
imull
fstps
out
imul
sti
xlat
adc
iret
loop
aam
ljmp
lret
insb
jge
jge
mov
das
push
push
add
out
aam
dec
mov
dec
jecxz
dec
dec
mov
mov
shll
mov
pop
dec
fisttpll
dec
jp
xor
jno
jbe
cli
mov
sti
push
addl
mov
xor
les
pop
push
jae
jmp
xchg
es
inc
dec
sbb
push
hlt
push
imul
test
loope
or
popf
xor
cmpl
lcall
mov
adc
sub
mov
sbb
scas
mov
xchg
mov
push
adc
push
mov
xchg
cmp
les
adc
imul
add
sbb
icebp
std
clc
mov
lods
movb
pop
sahf
rcr
mov
or
jae
inc
cld
popa
adc
pop
jecxz
in
cmpsb
or
daa
outsl
cld
cmc
jg
xor
mov
sahf
adc
ja
call
and
out
jb
sbb
lret
xlat
or
inc
enter
inc
dec
cmpl
fwait
add
shlb
fucomi
push
inc
clc
push
mov
push
in
addb
add
bound
sbb
pop
xor
cmp
fisubl
lret
or
mov
clc
hlt
cwtl
scas
mov
lret
ftst
pusha
cmpsb
fisubs
pushf
outsb
jmp
add
loop
in
inc
sti
and
adc
push
jns
enter
adc
jle
ss
inc
dec
nop
xchg
scas
jns
loopne
and
jae
movsl
mov
adcl
stc
sti
push
out
test
xor
idivb
jl
push
mov
and
and
ja
subb
inc
movsl
xor
dec
out
cmp
pop
xchg
sbb
lcall
cwtl
popf
into
mov
lods
lea
sub
jmp
lock
lea
xchg
mov
push
push
jb
lcall
add
xchg
test
pusha
or
movsb
pop
jo
shll
test
rcll
mov
mov
loop
mov
in
jp
xchg
adc
push
movsl
sub
cmp
enter
int3
lea
popa
adc
test
xchg
or
lock
leave
mov
xchg
roll
push
incb
cmp
arpl
mov
lahf
loope
add
pop
inc
sbb
mov
xorl
mov
pushf
adc
xchg
adc
shll
sahf
pop
rcrl
jle
or
mov
and
mov
pusha
int
and
jmp
js
dec
push
lcall
push
test
imul
push
dec
ljmp
mov
jb
jge
xlat
gs
aam
imul
pop
mov
test
mov
lret
daa
ljmp
aas
inc
popf
push
es
sbb
jno
adc
xor
adc
outsl
loop
lret
push
insb
inc
rcl
scas
pop
xchg
adc
fsubrl
mov
sbb
in
movsl
mov
or
mov
jne
push
movsl
adc
xchg
sbb
fwait
pop
imul
pop
sub
test
push
nop
cmpl
mov
cmp
and
lcall
inc
mov
push
or
fadds
add
push
pop
nop
and
jns
lock
push
jae
je
dec
insl
add
decb
jmp
dec
sti
loopne
or
pop
rol
mov
jge
mov
adc
repnz
sbb
in
in
push
xor
mov
es
je
xor
sbb
fiadds
gs
cmovb
decb
adc
paddq
xchg
test
and
dec
nop
inc
inc
not
xchg
ret
in
in
test
cmpl
ljmp
repnz
ret
sbb
xchg
fcomps
std
insb
mov
xchg
mov
std
mov
imul
pop
fwait
jb
adc
push
repz
jg
andl
and
lods
imul
xchg
fs
cli
cmp
fwait
push
pusha
gs
xchg
out
call
nop
pop
into
pop
cmc
sub
lret
push
and
mov
in
int3
mov
or
loopne
xor
mov
les
int
int
adc
loopne
fs
add
or
decl
aas
jmp
outsl
out
stc
lcall
xor
dec
mov
xlat
hlt
call
pop
call
loope
cmp
inc
fnstenv
loopne
push
sub
jae
mov
arpl
mov
and
pop
pop
sub
adc
sub
cli
push
push
outsl
mov
repnz
push
xchg
std
fnstenv
imul
xchg
or
xchg
jb
scas
insl
fdivl
cli
lock
lret
out
sub
mov
sub
repz
cli
adc
shrb
jnp
adc
pushf
ret
or
mov
xor
test
fwait
pushf
jecxz
xchg
mov
and
jg
mov
adc
adc
jle
fmulp
xchg
push
insb
out
pop
xchg
lret
mov
mov
add
aaa
mov
mov
daa
mov
mov
shlb
push
in
cs
add
pop
into
mov
jge
ja
add
pop
jae
les
jno
sarb
mov
mov
push
test
mov
fstpl
jns
in
out
pop
rcrb
dec
push
cld
lahf
adc
movsb
out
sub
das
push
xor
insb
mov
mov
repz
call
mov
sbb
mov
sahf
adc
and
cmp
negl
push
pop
ss
arpl
xchg
inc
push
inc
je
rep
jl
iret
es
xlat
lds
cmpl
insb
sub
sub
add
sub
lea
nop
faddl
iret
lret
loop
roll
testl
add
out
add
xor
jmp
test
inc
mov
adc
fs
or
dec
lahf
inc
loop
dec
mov
cwtl
clc
test
add
pusha
cmp
inc
inc
rclb
outsl
inc
dec
dec
or
or
hlt
and
out
mov
fxch
mov
outsb
orl
shrl
scas
xchg
mov
inc
fisttpl
inc
fiaddl
or
dec
lea
popa
xchg
jle
enter
loop
insl
sahf
lods
mov
and
mov
push
dec
sub
hlt
cltd
jae
scas
ss
adc
adc
popa
cmp
dec
out
movsb
outsb
pop
adc
cltd
ljmp
adc
mov
jo
xchg
popf
cmpl
orps
mov
in
pop
jcxz
aaa
loop
flds
dec
push
inc
pushf
and
paddq
test
rorb
push
pusha
outsl
addr16
xchg
push
aad
lret
and
aam
es
push
test
adc
adc
adc
pop
dec
leave
or
rep
jns
sbb
lcall
stos
pop
cltd
lea
lret
cmp
push
dec
mov
jo
add
jle
pop
fcoms
loope
iret
sbbl
mov
outsb
mov
inc
test
popa
mov
out
mov
lahf
mov
pop
in
fwait
ret
xchg
jecxz
int3
shlb
dec
iret
rcll
loop
sub
cltd
inc
imul
cmp
es
insb
fldcw
xchg
stos
jo
cld
jno
int3
or
push
insb
and
mov
jg
pop
cmc
sbb
cmp
rcr
pop
sub
aas
adc
in
fildl
push
xor
push
punpcklwd
pop
out
decl
arpl
push
subb
add
int
clc
pop
sbb
out
fidivl
stos
mov
imul
xor
data16
add
adc
jae
setp
sub
pop
ljmp
cmpsb
pushf
daa
lcall
mov
and
cmp
mov
xchg
push
sbb
decb
and
mov
mov
add
test
pop
sarl
aad
std
fcomps
xor
push
test
test
call
sbb
iret
shll
push
add
mov
and
cmp
mov
mov
int
jle
cltd
adc
in
out
je
and
push
xor
inc
fldenv
ja
or
cwtl
pop
jmp
enter
ja
cmp
mov
cmp
pop
mov
fnsave
push
sahf
sub
xchg
xor
add
jle
pop
xchg
pusha
mov
pop
mov
fstpl
call
mov
sub
aad
push
xchg
jge
cmpsl
mov
jb
sub
sub
cmpsb
shl
dec
cld
sbb
sub
daa
mov
or
adc
imul
gs
xchg
pop
mov
sub
mov
pop
xor
sahf
xlat
mov
cwtl
push
repz
cs
mov
xor
imull
or
pop
icebp
cmp
flds
add
scas
loopne
stos
xor
lock
int
pop
mov
pop
cmpsb
mov
add
lock
test
leave
sti
test
fdivrs
and
and
stc
in
adc
loopne
cmp
push
jns
popf
push
ss
jg
pop
cmp
mov
jmp
movsb
cmpsb
xor
pop
jmp
clc
sbb
xor
stos
xchg
lds
sub
int3
stc
pop
mov
das
out
xchg
xlat
rcrl
in
pop
mov
push
dec
popf
inc
add
jns
call
mov
leave
push
rclb
sub
add
push
cmpsb
js
or
dec
fldl
mov
mov
add
stos
stos
cmc
sti
ljmp
inc
push
scas
clc
push
cmc
sbb
or
negl
aas
sub
sub
cmp
imul
ret
movsb
inc
sub
aaa
or
push
xor
or
dec
pop
jae
adc
dec
rcrb
in
cltd
inc
int
scas
xor
fwait
or
int
pop
pop
xor
mov
les
je
pop
or
or
leave
jmp
mov
pop
ret
xor
in
int3
cltd
inc
out
push
pop
jno
cmpl
dec
fcompl
sbb
js
mov
rcrl
repz
lea
lods
out
and
mov
les
push
cmp
mov
dec
into
or
sub
imul
mov
mov
sbb
cmp
jle
cmp
jb
rcrb
jb
and
faddl
scas
xor
add
jne
js
adc
dec
mov
cli
adc
mov
push
or
push
in
xchg
add
dec
adc
fsubp
mov
push
xchg
jg
mov
repz
lods
faddp
dec
mov
lock
xor
das
mov
push
stos
out
adcb
or
mov
lods
test
lods
push
add
shrb
xor
in
lea
or
stos
int
rclb
pop
add
sbb
push
jne
ds
gs
pop
sbb
pop
adc
jl
pop
push
xchg
in
insb
mov
vpminsw
faddl
fmul
jo
xchg
loopne
gs
lret
js
popf
mov
adc
dec
mov
xor
cwtl
iret
fs
mov
fwait
jle
mov
jns
cltd
fisttpll
rol
and
jnp
in
leave
into
xor
cmpsl
xlat
or
pop
in
cmp
pop
and
and
fisttpl
dec
push
rsm
aas
add
or
jnp
lcall
push
cmp
push
movsb
mov
js
mov
add
fistl
mov
cwtl
jge
xor
dec
in
jb
fisubrl
mov
xchg
js
mov
jmp
pop
cmpsl
shrb
into
ret
push
mov
mov
inc
movsl
jg
rcrb
call
pushf
cs
les
out
sbb
mov
cli
es
scas
cmp
pop
mov
aas
call
sub
xlat
testl
cs
xor
cmp
jmp
mov
pop
test
dec
xchg
adc
orb
jg
js
hlt
jp
repz
das
xchg
bound
and
push
decl
push
andl
jmp
sub
loope
les
xor
and
addr16
push
outsl
orl
push
and
enter
ds
xor
pushf
jge
lret
dec
cmp
mov
cmpsl
xchg
popa
sub
int
xor
mov
pusha
aaa
or
cmp
push
and
gs
and
cmp
outsb
xchg
pusha
repnz
sbb
bound
cwtl
outsl
sbb
cli
cmc
rcrl
stos
in
fs
sub
pushf
fiadds
push
cmp
loope
mov
add
sbb
cli
mov
jne
sub
stos
adc
imul
arpl
fcomip
adc
cmp
in
add
inc
and
mov
sarl
cmpsl
or
mov
xor
push
inc
sub
clc
icebp
pushf
das
dec
lcall
in
sbbb
bound
cmp
shrl
aad
push
not
cmp
scas
sub
fs
jp
fisubrs
cmp
pop
sub
bound
aaa
stos
mov
dec
icebp
fcoms
jmp
and
pop
dec
pushf
xor
sub
push
data16
pop
mov
mov
mov
mov
nop
jb
cmp
popa
fldt
outsl
dec
xchg
mov
pop
sub
outsl
loopne,pt
mov
mov
clc
dec
mov
mov
dec
sti
into
jo
outsl
clc
sub
push
mov
jmp
mov
lret
out
add
cs
adc
mov
and
xchg
push
movsl
xor
les
pushl
cmp
leave
jge
cmp
inc
fnsave
cld
daa
adc
push
outsl
mov
das
aam
lock
sbb
enter
ret
mov
popa
xchg
aam
test
fs
inc
int
jae
popf
faddl
insb
xor
mov
push
ss
fsubr
test
out
mov
pop
inc
or
scas
int3
scas
enter
scas
scas
lea
gs
xchg
xor
xchg
dec
dec
rcr
mov
int
or
push
jae
dec
test
inc
pusha
into
cmpsb
adc
insl
cmp
imul
loopne
jbe
loop
sub
pop
mov
push
cmc
jp
mov
stos
fbld
fsubs
fsubs
inc
popa
lret
fimull
push
or
push
popa
pop
add
and
sbbl
mov
or
pop
mov
outsb
push
and
jo
rcrl
xchg
mov
outsl
fprem1
fwait
xchg
inc
mov
jmp
pop
outsb
sbb
sahf
loopne
jl
sub
jecxz
and
xor
cli
hlt
inc
mov
imul
cmpsb
dec
insl
mov
stc
out
mov
add
adc
lret
test
jg
je
and
fdivrl
cmp
mov
inc
inc
xchg
add
scas
mov
dec
mov
sbb
jne
scas
push
pop
dec
aam
dec
add
mov
push
popa
sahf
pop
addl
rorl
lcall
aaa
mov
lret
arpl
mov
cmp
inc
fwait
dec
xchg
movsb
jne
cs
push
es
cs
xchg
test
mov
not
filds
andl
ret
push
cmp
push
hlt
imul
jae
movsl
lods
shll
jbe
adc
lods
std
xchg
add
loope
insl
mov
ja
sub
outsb
push
sub
adc
sti
adc
or
sub
scas
dec
pop
adc
sbb
jbe
adc
mov
bound
jnp
push
fcoms
lock
mov
in
jmp
fs
jae
shrl
scas
aam
push
pop
lret
push
xor
push
ret
xor
adc
add
loopne
or
aam
daa
mov
insb
mov
mov
lds
mov
cltd
xlat
sti
mov
fisubrs
xchg
pop
div
jns
test
mov
orl
mov
dec
test
arpl
dec
shrl
inc
add
ja
rcrl
push
push
cmp
shlb
adc
mov
call
fimuls
lea
jge
sbb
dec
into
jl
mov
std
push
outsl
outsl
mov
cmp
mov
in
jnp
xchg
in
sbb
daa
subb
sbb
gs
jmp
insl
das
cmp
dec
cmp
or
add
out
fstpt
cmpb
sub
hlt
sbb
mull
inc
fmuls
stc
cmpsl
xchg
push
movsb
stos
jno
stos
xchg
movsl
cli
test
ja
xchg
hlt
in
jnp
inc
add
mov
in
mov
ss
or
stos
mov
lahf
popa
mov
repz
xchg
ja
incl
jl
stc
adc
inc
pushl
out
lret
roll
ret
xor
xor
pop
and
xor
lret
jbe
into
shlb
pop
jbe
jecxz
pop
call
lahf
stos
cmp
jbe
out
out
pop
scas
xchg
aas
fmul
mov
xchg
dec
inc
cmp
cwtl
call
hlt
sbb
mov
sbb
push
or
add
mov
inc
sahf
aad
loope
mov
nop
fbstp
ss
or
inc
scas
pop
lods
repnz
mov
fimull
fucomp
test
lahf
pop
add
repz
dec
mov
shll
imul
mov
test
or
cli
xchg
or
pop
mov
adc
enter
cmp
sbb
rcr
xor
in
mulb
inc
pop
add
repz
lock
cli
jnp
push
aam
xchg
roll
sbb
scas
jbe
push
xor
mov
jmp
fdiv
cs
cwtl
jae
dec
cs
add
cmp
adc
mov
popf
bound
popa
pushf
daa
adc
push
repz
dec
mov
into
push
add
es
push
sbb
lret
jo
pop
jb
je
imul
movsl
stos
sbb
std
push
in
bswap
ds
cmp
mov
lret
arpl
cli
xchg
loope
ja
mov
lret
dec
and
cmp
or
loope
cltd
mov
gs
adc
dec
mov
fwait
or
push
sub
push
mov
in
leave
cld
das
or
cltd
ret
xlat
push
int3
xlat
mov
out
int
xlat
or
adc
or
pop
mov
cmp
jns
or
pop
lahf
dec
cmp
arpl
mulb
je
adc
fucomi
mov
inc
test
or
movb
add
pop
outsb
xor
loope
add
out
and
lret
jnp
test
cmc
jnp
ret
adc
inc
mul
in
cld
negb
add
adc
pop
imul
daa
adc
mov
in
jae,pt
cli
imul
icebp
std
mov
jnp
fmull
push
fmull
popaw
and
mov
lds
scas
shlb
push
mov
loope
mov
cld
sti
stc
cld
dec
jno
adcb
cmp
adc
and
jns
fidivs
push
int
push
dec
cwtl
fwait
test
and
mov
jne
mov
inc
data16
inc
dec
lock
ret
xor
xchg
lret
mov
adc
dec
cmpsb
loope
bound
pusha
mov
mov
mov
dec
lahf
add
cmp
frstor
bound
outsl
lods
fiaddl
sub
mov
loope
jbe
mov
dec
sub
rorl
add
sub
jnp
out
sbb
push
sbb
ret
fidivrl
mov
cmpsl
pushf
into
add
int
xchg
xor
inc
stos
push
and
add
or
inc
xor
xchg
cmpsb
push
push
dec
xchg
and
xchg
incb
pop
cmp
mov
pop
test
arpl
aaa
repnz
jae
mov
sbb
jno
aaa
xor
stos
imul
movsl
in
out
or
sub
shlb
stc
cltd
xchg
int3
mov
dec
and
loope
sbb
aam
icebp
fs
insl
scas
and
mov
xor
sub
dec
inc
mov
lods
dec
fdivs
sbb
aad
sbb
xchg
xchg
dec
cmpsb
fcoms
les
out
cld
jns
mov
mov
mov
leave
adc
scas
push
or
dec
xlat
mov
mov
lahf
andl
or
add
cltd
imul
push
lock
sbbb
lret
pop
mov
movsb
add
dec
jne
adc
cmp
push
jne
or
mov
adc
pop
int3
push
daa
insl
or
test
inc
jl
mov
xor
and
and
ficoms
dec
xor
mov
pop
or
ja
sub
or
cmpsl
popa
mov
testl
and
mov
cmp
add
stos
orb
ficomps
in
sub
push
pushl
cmp
mov
ret
pop
shl
xchg
push
or
jge
das
jp
shl
dec
mov
out
sti
adc
in
dec
mov
enter
inc
sbb
lcall
test
sub
test
idivb
leave
in
fs
mov
iret
insb
sub
mov
mov
lret
push
jne
scas
movsl
aam
xchg
movsl
sub
call
xchg
xchg
add
stos
in
dec
add
dec
jge
push
jp
mov
mov
dec
call
arpl
int3
movsl
ss
jle
cmp
xor
inc
dec
cmp
cld
int3
push
test
iret
pop
push
lock
mov
dec
sub
cmpsl
pop
fsubp
std
pop
jbe
mov
sbbl
sub
bound
xchg
loop
push
data16
into
xchg
push
dec
mov
jae
sub
add
ja
push
sbb
lds
cltd
outsl
int
sub
mov
imul
shrl
xor
adcl
cmp
cld
out
or
pusha
int3
push
fwait
adc
mov
out
outsb
add
stc
cmp
jno
inc
into
shlb
popa
mov
test
pop
xchg
in
out
mov
and
pop
in
movsl
insb
inc
cli
push
mov
xchg
push
cmp
lock
jl
mov
imul
pop
popf
lea
cltd
sahf
insl
jge
jle
or
sub
jp
mov
fwait
cmp
aam
gs
xchg
fbld
fdivs
mov
jnp
movsb
inc
sub
les
rol
lods
push
icebp
jns
loope
xchg
stos
sbb
mov
int
mov
push
sbb
add
cmp
xchg
adc
ljmp
outsl
stos
cwtl
push
test
sub
or
lock
push
cmpsb
push
sub
mov
pop
and
jno
cmpsb
jmp
pop
fdivr
push
sti
sti
mov
inc
adc
adc
mov
mov
jmp
movsb
add
adc
lods
xor
sub
mov
mov
mov
mov
pop
dec
add
cmpsl
jecxz
mov
cmp
mov
ret
pushaw
mov
mov
push
push
mov
push
cltd
push
and
xor
jo
xor
add
scas
inc
dec
es
aaa
outsl
ljmp
mov
push
sub
hlt
add
pop
lock
and
imul
jo
ret
ret
mov
pop
sti
lods
lock
imul
mov
daa
mov
and
xchg
dec
mov
imul
cmp
inc
popf
andb
out
lea
xor
cld
lods
add
fidivrs
cld
dec
mov
xchg
xchg
sbb
or
sbb
rclb
adc
mov
gs
fs
test
es
lock
andl
push
mov
stc
sahf
les
ss
cwtl
test
popa
mov
pop
dec
les
jge
lret
fwait
test
aas
mov
out
jno
mov
cmc
inc
dec
mov
push
lret
push
mov
nop
inc
mov
ret
xchg
iret
imul
test
xlat
push
mov
ss
fbld
scas
push
sbb
fsubs
lcall
jecxz
add
repnz
xor
sarl
mov
xchg
in
jp
jbe
push
add
add
aad
add
fists
push
test
faddl
cmp
sub
and
lahf
pop
pop
mov
inc
sahf
cmc
xchg
out
cmpsb
and
lods
adc
loopne
cmp
lea
out
dec
scas
imul
je
es
inc
int3
cmp
push
repz
lds
mov
cmp
push
es
push
push
adc
push
in
in
or
or
pusha
mov
pusha
das
adcb
add
test
loopne
out
shlb
movd
test
inc
mov
or
idivb
xor
out
pop
aaa
js
imul
lock
and
out
loopne
shrl
ds
std
push
call
pop
sub
pushf
mov
lea
jb
cmpb
cmp
leave
and
lret
lahf
dec
xchg
push
mov
dec
inc
cmpsb
or
pminub
lret
enter
call
sub
popf
lea
test
fdivp
punpckhbw
js
cltd
fucomp
mov
shr
mov
jae
adc
scas
jbe
pop
fsubrp
adc
or
xchg
push
pop
sub
sbb
add
dec
popa
sbb
lahf
in
jns
imul
jno
jo
shll
cmp
in
mov
xor
push
push
jne
cmp
negb
jp
xorl
data16
add
pop
or
mov
andb
push
ficompl
inc
xor
insl
inc
xchg
adc
inc
push
xor
xor
mov
push
shl
test
inc
push
pop
rol
mov
lods
add
adc
jge
and
or
cwtl
or
mov
mov
jge
enter
mov
dec
mov
inc
iret
movsl
dec
xor
repnz
stos
mov
mov
jno
xor
push
fwait
outsl
lods
scas
jb
pop
mov
and
mul
xor
and
mov
cmp
push
and
daa
pop
dec
pop
fists
xchg
pop
lcall
cmp
sub
icebp
dec
not
xchg
sbb
adc
pop
les
jns
push
jp
sub
shlb
push
dec
in
sahf
adc
push
int
rol
loop
push
jb
sub
push
dec
stos
aad
mov
icebp
ds
sti
jae
insb
nop
scas
incb
or
cmpsb
add
rorl
sub
loop
imul
out
xchg
repz
iret
mov
movsl
out
lods
aaa
rcrl
mov
push
outsb
je
int3
cmc
clc
lret
test
pushf
mov
mov
pop
xor
adc
push
pushf
inc
gs
jb
fldt
dec
mov
repnz
jge
out
mov
test
lods
mov
dec
xchg
or
imul
adc
pop
dec
sahf
jbe
int
aam
cwtl
fisttps
test
lcall
adc
xchg
inc
iret
adc
xchg
sbb
cmp
lods
in
xorl
push
lods
sbb
or
fdivrl
test
sbb
jbe
jp,pn
sbb
popf
loop
std
sbb
push
jns
adcb
mov
arpl
push
movsl
inc
pop
in
mov
into
cmp
sub
js
imul
orl
lret
mov
xor
or
outsb
add
xor
mov
dec
lea
mov
sub
out
mov
add
iret
lods
or
push
mov
nop
inc
dec
ljmp
inc
pop
pop
jl
mov
cmp
mov
ja
push
pop
data16
add
lock
mov
jl
movsl
cwtl
outsl
pushl
add
dec
scas
mov
int
pusha
mov
jo
loope
fcomip
xchg
pop
sub
sub
notl
fwait
add
jns
sub
popf
insl
cmp
aas
push
mov
fcoms
insb
in
cwtl
adc
dec
ja
stc
pushf
call
in
and
xor
aam
mov
and
mov
mov
xor
cmp
notl
imul
cwtl
cltd
mov
scas
xor
loopne
cmpsb
adc
rorl
pop
mov
mov
cmpsl
push
inc
cmc
ja
test
xchg
in
mov
jmp
wrmsr
push
scas
icebp
pop
add
dec
mov
mov
mov
mov
push
popf
adc
adc
cmp
outsb
roll
in
lea
fisubrs
jae
cmp
jle
scas
lock
aas
jmp
cmp
cmp
mov
ljmp
adc
or
out
mov
negb
pop
pop
addr16
mov
mov
sub
test
adc
add
xor
push
mov
sub
jmp
loopne
pop
add
repz
cmpsb
jmp
iret
imul
xchg
gs
dec
daa
mov
into
mov
fcomip
cmp
ljmp
jnp
cmc
pushf
lahf
jnp
dec
ret
or
sbb
out
insl
add
lods
mov
cltd
xchg
mov
popa
and
mov
nop
cmp
ss
sbb
add
or
push
das
dec
sub
insb
js
scas
xchg
pushf
inc
lret
push
in
xchg
mov
sti
scas
shll
es
push
gs
or
sbb
add
imul
jnp
adc
repnz
bound
mov
aas
scas
cmp
push
or
jle
or
lret
ljmp
mov
or
xchg
lds
out
dec
aaa
mov
jmp
pop
and
jg
clc
stos
push
pop
jge
icebp
xchg
adc
into
je
push
fcoml
pop
dec
iret
and
inc
sbbb
lods
mov
xor
sbb
hlt
leave
dec
pop
mov
lea
pop
aam
or
xchg
shlb
mov
addl
push
add
outsb
mov
jne
push
xchg
ret
mov
mov
jmp
inc
outsb
add
mov
mov
outsl
pop
sub
mov
mov
insl
rolb
push
test
or
aad
imul
fldenv
xor
loop
jno
xchg
leave
adc
sbb
push
roll
xor
imul
sbb
push
jge
inc
test
mov
addr16
mov
mov
repnz
pop
lcall
push
lcall
dec
inc
loopne
mov
inc
loopne
sbb
sbb
pop
sub
dec
pop
dec
or
out
movsb
dec
rolb
or
add
shrl
and
push
inc
dec
mov
icebp
aas
movsl
add
xchg
mov
pushf
push
sub
mov
repnz
enter
aad
dec
dec
dec
pop
outsb
sub
add
pop
push
cmpsl
loope
in
mov
sti
xor
push
xor
movsl
or
fdivrs
ljmp
cmp
nop
in
shlb
lret
je
pop
mulps
fsubl
push
aaa
out
ret
imul
fwait
gs
fsub
pop
jbe
sub
ret
scas
leave
sbb
filds
inc
cmp
or
cltd
push
test
cmp
ret
or
int3
addb
push
and
xlat
gs
stos
ror
xchg
mov
sub
test
fs
loope
mov
aad
repz
cmp
lods
jo
loopne
aaa
push
lock
xor
xchg
mov
sti
mov
xchg
fwait
xchg
fmul
sbb
fs
cmp
cs
dec
and
cmpsl
int3
fildl
addr16
jns
jbe
inc
inc
jo
mov
leave
test
les
outsl
lar
mov
aas
int
push
and
mov
rcrl
repz
loopne
std
in
push
add
rcrb
pop
mov
pop
pushf
test
int3
add
pop
and
lcall
jo
fstl
js
xor
stc
fmull
imul
pop
cli
xchg
cld
std
sbb
insb
pusha
inc
jo
hlt
pop
xchg
js
push
aam
inc
adc
js
divl
test
enter
add
outsb
in
ds
cmp
sbb
jg,pt
stos
pop
lods
inc
xor
fbld
adc
js
and
sbb
sub
push
mov
outsb
cmp
inc
mov
insl
popf
rcr
add
xor
pop
fcoms
in
inc
jne
in
mov
push
int3
loope
add
and
pop
loop
mov
loop
incl
jmp
jo
lret
sbb
jbe
xor
mov
or
andb
out
int3
into
pop
dec
pusha
dec
dec
xor
cs
fcoml
cmp
out
call
aas
mov
pop
xchg
sbb
jecxz
fidivl
movsb
push
sub
loopne
mov
nop
jg
mov
inc
jl
add
dec
mov
cmpsl
mov
fisubl
jmp
inc
test
dec
fimuls
mov
xor
push
pop
jmp
pusha
push
cmc
jb
sub
fistpl
and
push
sub
sub
repz
sbb
lea
incl
dec
inc
sub
mov
leave
jmp
bound
push
lods
loopne
std
fnstcw
jo
andl
imul
dec
dec
sub
cwtl
movsl
das
and
fldl
push
xchg
pop
sbb
dec
imul
adc
pop
pop
pop
xor
jne
and
dec
scas
adc
nop
test
test
ficomps
mov
cs
popf
loop
ljmp
and
adc
int3
mov
push
call
imul
mov
arpl
sub
pop
mov
nop
mov
lcall
cmp
dec
push
mov
cmp
xchg
notb
jnp
add
push
add
dec
mov
push
add
xor
mov
popa
mov
adc
out
inc
shlb
pop
mov
mov
lds
or
dec
sub
cltd
das
out
pop
into
icebp
dec
pop
dec
jge
pop
or
sahf
vmovdqu
in
repz
adc
stos
jb
mov
xor
cltd
lods
fwait
inc
mov
insl
lods
stos
cmc
push
clc
leave
fmull
sub
adc
adc
xor
es
enter
loopne
and
push
mov
scas
mov
test
xchg
fs
push
loop
pop
inc
stos
pop
pop
and
sar
mov
xchg
imul
adc
cs
int3
lds
int3
inc
jo
mov
into
cltd
pop
scas
xchg
pop
lahf
leave
shlb
roll
pop
outsb
jae
lock
aas
pop
addb
in
jmp
jb
xor
mov
pop
fcom
mov
daa
jb
pop
xchg
sbb
pop
jo
dec
pop
jae
xchg
jl
leave
mov
insb
dec
mov
push
mov
cs
fnstsw
inc
push
xchg
push
and
stos
shlb
adc
setns
fwait
pop
pop
ret
push
cli
jb
ss
lds
mov
into
adc
pop
fstl
sub
sbb
mov
or
jmp
fwait
xor
lahf
cmp
inc
cmp
scas
lods
inc
in
adc
adc
fnstcw
fwait
xor
pusha
dec
jnp
movsl
pop
pop
pop
fwait
addr16
stos
in
cwtl
and
aad
rolb
jo
dec
sbb
mov
lods
ret
sbb
lea
jp
sarb
adc
out
fildll
clc
aas
cmp
sbb
sbb
pushf
mov
mov
hlt
cmp
imull
push
lcall
cmpsb
cmp
lret
std
jmp
jns
inc
mov
cld
out
xchg
xor
loope
mov
sub
divl
mov
daa
and
repnz
xchg
and
and
xor
or
or
and
sub
pop
cmpsl
push
sub
cmc
shlb
inc
mov
ret
insl
fisttpll
dec
pop
pop
mov
test
int
inc
sarb
dec
push
inc
jne
repnz
pop
sbb
scas
push
mov
jnp
pop
add
pop
jno
les
shlb
sbb
and
into
xor
loop
and
lahf
lcall
mov
add
stos
pop
add
ret
or
sub
pop
lret
test
subb
cltd
das
cmp
clc
andl
call
mov
sbb
ss
cmpsl
adc
pusha
inc
mov
aas
jo
cmp
popf
xchg
orl
stos
je
push
cmp
xor
mov
xor
add
mov
bound
js
inc
movsl
int3
or
sbb
jns
addr16
mov
pop
mov
test
cmp
push
fxtract
sbb
call
jp
sub
dec
ljmp
movb
gs
testl
dec
xchg
add
adcb
imul
jge
add
xor
imul
push
test
rcrl
adc
in
adc
pushf
into
imul
or
repz
xchg
mov
pop
dec
stc
fisttpl
sbb
pop
push
adc
jp
or
fstl
push
call
xlat
jbe
les
xor
xor
hlt
icebp
adc
outsl
jmp
aas
loopne
rcrl
cmpsl
clc
lcall
dec
fs
push
or
repz
xchg
add
push
fstpt
push
cmc
clc
pop
cwtl
push
aam
cmp
jge
cmp
jnp
rclb
jg
test
or
cs
add
push
inc
xchg
cmp
xchg
add
lds
bound
test
in
ljmp
nop
or
xchg
adc
test
lods
insb
mov
fs
jo
loope
fcomip
sahf
lock
adc
dec
or
scas
add
cmp
xor
mov
sbbb
push
jmp
addr16
fcomp
cs
mov
fwait
mov
mov
js
js
xchg
pop
call
test
sub
nop
shufps
in
pop
and
mov
loope
testl
fcoms
mulb
add
sbb
mov
loop
sub
xor
cwtl
push
addr16
outsl
lock
adc
and
and
mov
jns
push
pop
add
adc
cs
dec
ljmp
sub
pop
pop
fldt
stos
shl
in
cmpsl
jle
fstps
pop
bnd
lea
cmp
shll
insl
enter
addr16
inc
out
adc
bswap
rcll
fcoms
fs
mov
dec
inc
negl
insl
push
stos
fidivs
outsb
jbe
fcomi
pop
lahf
sbb
ss
aas
ss
aaa
lea
movsb
std
mov
mov
adc
arpl
adc
scas
dec
push
clc
inc
xor
cmp
insb
mov
dec
dec
pop
int
scas
and
data16
inc
xchg
add
and
lods
loopne
out
mov
or
cmp
pop
mov
sub
adc
gs
loop
xor
cmp
lahf
ja
dec
aaa
inc
mov
adc
mov
cli
mov
fdivrs
shll
sub
jne
into
jp
ret
push
je
inc
out
cmp
and
ss
rcrb
popf
cmp
test
pop
sub
fisttps
mov
lret
insb
out
jge
testl
stos
out
mov
sbb
out
stos
cmp
shrb
ljmp
mov
shlb
imul
fsts
stos
ja
jnp
std
dec
and
shll
and
add
lods
mov
adc
jl
or
imul
enter
or
mov
hlt
lahf
mov
int
or
jne
and
pop
shlb
xchg
push
cmp
lock
add
sbb
inc
push
daa
aam
gs
popa
loopne
cld
jl
and
mov
push
test
cld
je
pushf
sub
sar
fs
add
pushf
clc
inc
iret
hlt
push
mov
dec
mov
outsb
pop
cmp
jae
or
sbb
xor
arpl
inc
mov
cmpsl
xchg
adc
insl
les
lock
or
push
mov
std
popf
mov
add
test
icebp
jge
pop
and
sti
sub
push
mov
stc
push
adc
popa
jl
into
jg
and
lods
add
pop
sub
call
jl
or
adc
loope
shll
rolb
jnp
jne
pop
sbb
lock
sbb
into
insl
xchg
and
inc
ds
xchg
test
cmp
inc
jno
add
pop
and
out
adc
mov
xor
sbb
movsl
insl
sbb
fs
inc
rcrb
out
jnp
jnp
js
cmp
xorb
arpl
aaa
pop
mov
mov
lret
test
out
loop
jmp
repnz
addr16
inc
pop
out
aas
sahf
jmp
mov
sbb
adc
pop
lods
jge
iret
or
jbe
adc
movsb
and
xchg
sub
movsl
mov
dec
jae
sub
div
and
dec
pop
adc
into
xor
insl
jmp
sbb
sub
inc
imul
xchg
add
push
pop
rcrl
jge
sbb
xor
sahf
jns
sub
pop
jns
in
pop
lock
pop
mov
mov
enter
adc
jge
sbb
mov
int
xchg
mov
and
pop
push
dec
out
jecxz
mov
xchg
pop
xchg
rcrb
loop
es
shl
jae
xlat
push
jb
bound
sarl
shrl
or
mov
mov
daa
xor
cmp
testb
je
int3
shrb
or
pop
mov
sub
les
test
rcrl
dec
mov
mov
push
aam
lods
fimuls
call
adc
pop
sbb
or
loope
icebp
push
mov
lret
jecxz
nop
cmpl
pop
ja
jmp
add
jmp
jg
shl
test
sbb
ret
clc
je
push
insb
jg
nop
daa
inc
push
push
call
aam
out
mov
mov
inc
ficompl
inc
pop
inc
fsubs
fwait
movsl
pushf
xor
add
fst
mov
test
stos
repnz
add
loop
mov
and
and
mov
jns
pop
pop
mov
add
mov
ja
orl
mov
mov
loope
add
mov
gs
cmp
rcr
cmp
cmp
cmp
sub
jne
scas
xlat
jle
sub
stos
push
dec
and
sbb
cmpsl
addr16
loope
mov
mov
ss
pushf
out
inc
fsubrs
cli
mov
repnz
enter
dec
jnp
add
fmull
jns
repnz
adc
lods
cmp
pop
repnz
xchg
lret
jmp
cwtl
fadd
sub
fildll
psubsw
jle
xor
movb
testl
sub
jge
popa
inc
push
cwtl
sbb
mov
lock
sub
mov
pop
mov
push
lods
cs
sti
add
lahf
je
adcb
repz
imul
adc
mov
mov
xor
shr
loop
sub
jno
sub
jge
inc
stos
cmp
adc
adc
and
or
shll
ja
jg
daa
xor
cwtl
jecxz
pop
movsb
ss
xor
popa
push
sbb
cmpsl
push
sbb
mov
inc
ds
adc
out
outsb
fildll
pop
pop
ret
cmp
adc
les
xchg
repz
push
or
mov
sub
sti
repz
mov
sub
fldenv
addr16
fimuls
stc
ret
scas
sbb
lcall
lahf
and
add
lea
add
out
sub
xor
or
fisubrs
xchg
sub
cmp
ds
sbb
sub
xchg
dec
jge
pushf
ja,pt
ds
sbb
jns
sub
pop
ljmp
test
es
int
fidivrs
clc
mov
xor
lea
sub
mov
scas
dec
and
nop
sub
add
hlt
cmp
xor
pop
cmpsl
mov
dec
test
and
arpl
in
cmpsb
cltd
lods
jl
inc
jp
leave
push
xlat
out
push
popa
mov
aaa
add
fimuls
nop
cs
fildll
ja
jl
adc
mov
dec
nop
fiaddl
mov
int
fisubrs
ss
insb
subb
sti
mov
cmpsl
jmp
cmpsb
cmpsb
les
adc
stos
movsl
data16
rcll
mov
dec
and
sub
pop
cmp
rorb
das
stos
rcll
xchg
and
mov
sub
mov
lret
addr16
jg
sbb
imul
or
decl
push
push
sub
cmp
xchg
stc
cmp
popf
xor
imulb
leave
push
xchg
shl
sbb
mov
loop
add
jg
in
xchg
or
stos
xchg
push
mov
loopne
lock
jns
fmull
idiv
mov
int
lods
cmp
mov
addb
fcmovnbe
mov
push
jb
lcall
sbb
dec
ds
test
rolb
addr16
orl
mov
push
je
mov
in
adc
rolb
sub
sbb
in
cmpsb
mov
or
clc
ret
loope
daa
xchg
cmp
mov
sbb
inc
push
xchg
sub
mov
das
jns
mov
and
hlt
pop
sub
lret
sbb
mov
leave
pop
add
cmp
fisubl
and
sub
test
inc
mov
dec
test
lds
outsl
stc
push
mov
inc
and
clc
xor
pop
or
push
adc
in
pop
sbb
pusha
fs
push
xchg
jae
sbb
push
dec
jno
push
lds
call
push
mov
call
int3
jle
or
popf
sbb
in
neg
ret
out
mov
cld
scas
ret
inc
in
jl
mov
rorl
test
hlt
or
mov
or
dec
rcrb
mov
js
mov
jne
ja
add
cwtl
movsl
lahf
rolb
push
xchg
je
jg
pop
aas
jge
jnp
enter
mov
fwait
and
shll
shll
ljmp
lcall
mov
pop
push
jo
fdivs
in
pop
data16
call
push
add
aas
imul
xchg
hlt
sub
gs
shl
push
mov
xchg
push
inc
pop
ja
ljmp
mov
sbb
and
cld
dec
xlat
xchg
popf
add
pop
pop
inc
fisttpll
arpl
pop
or
dec
push
int3
addl
jnp
mov
fisubrs
sbb
push
mov
sub
adc
jge
pop
cltd
outsb
sbb
xchg
pop
or
test
pop
dec
movsb
jo
mov
ja
cmp
and
repnz
mov
stos
fs
push
jo
jb
lahf
xor
xor
or
or
or
mov
push
sub
andl
push
sub
jp
dec
test
hlt
js
mov
cs
sbb
jl
gs
bound
bound
push
popa
das
in
and
je
dec
divl
xor
scas
std
push
mov
mov
sarb
pop
aam
pushf
or
xor
inc
cmp
loopne
xor
pop
into
icebp
add
sub
imul
mov
inc
add
xor
out
xor
lcall
pop
aaa
jnp
aam
lcall
repz
mov
fadd
out
enter
adc
test
pop
add
ljmp
int3
lea
sbb
xchg
xchg
aam
cmc
xor
jae
inc
mov
cmpsl
pop
jp
popa
jle
cmpb
shrb
idivb
aas
xchg
mov
sbb
outsb
sahf
or
cmc
pop
movsl
sti
xor
cmpsl
loop
sbb
cmp
mov
fidivs
popf
popa
in
aaa
push
into
cmp
pop
dec
push
sbb
xchg
cltd
inc
push
movsl
mov
std
pop
pop
mov
bound
and
dec
icebp
lock
int
mov
mov
mov
sahf
mov
js
xchg
insl
iret
fdivs
pop
adc
sarb
xchg
lahf
stos
xchg
sbb
xor
add
pcmpgtb
ja
js
pop
insb
je
lahf
jbe
call
mov
jne
mov
pop
pushf
push
stos
shrl
xchg
dec
scas
xchg
jns
ss
call
mov
mov
or
mov
int3
xsaveopt
sahf
das
pop
and
mov
sbb
adc
scas
cmp
mov
ds
sbb
repnz
push
lret
mov
pop
sbbl
and
fwait
xorb
fadd
cmp
inc
or
mov
mov
out
daa
lret
sbb
in
negl
or
movsb
mov
je
push
or
mov
bts
xchg
jbe
fs
jp
je
repz
mov
inc
movsb
insb
cmc
mov
adc
jp,pn
pop
dec
mov
dec
loope
js
out
adc
mov
enter
in
add
mov
mov
mov
addr16
jp
int3
ds
lds
xor
fimuls
xchg
cmp
popf
or
movsb
lahf
mov
dec
test
lahf
out
je
pop
loop
lret
jmp
or
enter
sub
inc
inc
inc
je
xor
push
pop
std
iret
ds
add
dec
pop
dec
movsb
test
loope
subl
movsb
sbbl
cmc
and
fisttpll
jmp
sarb
cmc
adc
cld
insb
out
mov
inc
lods
mov
lret
div
sub
cli
mov
mov
sub
push
dec
cmpsb
ret
add
icebp
scas
jne
pop
mov
and
addl
xchg
addb
out
nop
std
outsb
repnz
loop
sub
adc
pop
add
sub
mov
in
shll
sbb
testb
push
cs
xchg
rep
dec
outsb
jp
cmc
dec
pusha
mov
xchg
outsl
test
gs
cli
lds
scas
mov
sbb
nop
mov
loopne
sbb
pop
mov
jge
aaa
mov
roll
xchg
sub
jp
push
xor
clc
adc
dec
jo
lods
sti
data16
ja
outsb
js
add
add
mov
cmp
and
xor
fmul
jae
lahf
cmp
cmp
lcall
outsl
cmp
or
adc
inc
sahf
es
mov
cmp
cmp
cs
xchg
shrd
aas
fmul
dec
push
lods
inc
xchg
add
in
pushf
adc
rorl
push
mov
outsb
sub
aad
cs
mov
cmp
sbb
pop
loop
rolb
adc
mov
icebp
jae
andl
sbb
iret
push
in
in
inc
mov
dec
dec
lock
fisubrl
mov
mov
dec
or
pop
clc
sbb
popa
lods
movsl
mov
mov
fbstp
mov
adc
das
jmp
ss
push
push
xchg
or
dec
stos
push
sbb
out
insl
lea
jnp
and
adc
aam
add
mov
push
xlat
ret
leave
xor
mov
das
mov
pop
pop
push
xor
imul
vcvtsi2ssl
inc
pop
in
mov
call
std
popf
nop
xchg
rorl
pop
mov
clc
xorb
and
jge
dec
push
popf
mov
pop
stc
xchg
pop
pop
mov
shrl
xchg
mov
pushf
mov
push
xchg
aaa
push
adc
sbb
inc
enter
mov
dec
or
lcall
sub
dec
dec
fwait
adc
push
out
add
jg
shlb
arpl
imul
mov
fimuls
inc
mov
mov
mov
cmp
clc
and
mov
jno
adc
fdivrl
fmuls
fcmovnb
mov
aas
xor
jmp
stos
xchg
rcll
push
rolb
sti
jae
or
xor
in
xchg
xchg
lock
ljmp
ret
sub
lods
mov
in
pushf
push
xchg
jl
sahf
cld
jl
popa
dec
in
add
test
call
rcl
pusha
xor
inc
movsb
in
stos
mov
jmp
push
sbb
sbb
dec
xchg
sbb
inc
call
and
pop
mov
fildl
ds
and
mov
aad
xchg
je
or
cmp
push
push
fnstsw
insb
mov
cmp
fdivrl
out
dec
in
fcoms
lods
mov
add
loopw
push
cmpsb
inc
and
dec
sub
jns
aaa
ds
es
insb
or
scas
test
or
and
jbe
fdivp
sbb
sbb
mov
cmc
cmp
dec
cwtl
xor
or
pop
stc
adc
xorl
mov
sub
sbb
xchg
jecxz
les
out
idiv
ret
xlat
mov
dec
jne
jle
addb
push
cmpl
mov
in
mov
cmp
mov
mov
cmp
ret
mov
push
popa
fcmovne
imul
cmp
push
fisubrs
cmp
push
cmc
cs
mov
cmpsl
adc
movsl
push
pop
repz
call
cwtl
ret
leave
out
push
mov
fadd
lret
test
sar
gs
loope
es
jnp
out
sahf
addr16
mov
frstor
xchg
int
jbe
lods
push
fs
es
dec
xor
ret
outsl
aaa
punpckldq
das
or
and
sti
xor
idiv
out
movsl
cmp
cmp
mov
pop
pop
in
cmpsl
sbb
in
leave
xchg
jmp
xchg
xchg
mov
push
xor
jl
sub
jnp
or
xchg
fisubs
out
adc
push
cwtl
call
jmp
mov
rorl
jg
testb
inc
push
xchg
sbb
xorl
dec
or
icebp
lock
cmp
add
sbb
enter
je
push
jo
push
movsl
jecxz
sbb
ljmp
in
dec
outsb
sbb
lea
out
inc
add
lock
lea
mov
pop
or
dec
divl
repz
movsb
popa
rcrl
add
pop
mov
mov
mov
mov
xor
cmp
cltd
sbb
inc
je
pusha
imul
inc
ss
dec
inc
xchg
cmp
iret
popf
push
cmp
xchg
in
mov
jecxz
rorb
adc
and
mov
shll
cmpsb
lea
mov
and
rclb
fdivrs
fs
enter
and
repnz
and
out
ja
mov
shlb
pop
popa
mov
addb
adc
push
or
stos
out
lods
aas
inc
mov
push
jb
test
clc
inc
movsb
mov
adc
aaa
test
cmp
jge
mov
push
sahf
or
frstor
mov
fisubl
shl
movsl
jge
inc
inc
stc
enter
idivb
stc
pushf
clc
inc
das
mulb
in
xor
fwait
inc
and
jne
push
pop
adc
addr16
jns
outsb
push
dec
pushf
mov
dec
clc
daa
ds
fbld
cmpsb
fcomp
inc
orl
pop
dec
mulb
mov
xchg
xor
mov
jmp
outsl
xorl
sbb
push
sub
stos
and
lods
cli
testb
pop
cs
cmc
test
shrb
int3
or
mov
push
rorl
mov
dec
shl
pusha
jp
scas
dec
mov
dec
add
cltd
aad
mov
hlt
sub
loop,pn
adc
fcomps
jnp
nop
lcall
clc
cmpsl
and
xchg
mov
enter
mov
xchg
pusha
or
push
mov
rcrb
xchg
fbstp
subl
bound
shll
rorl
sub
outsb
cmpsl
iret
xchg
jae
gs
jo
cld
fwait
setg
xorb
and
mov
lods
dec
adc
inc
xchg
scas
inc
fyl2x
daa
push
out
jb
add
or
cmpb
leave
sbb
clc
aaa
sbb
xchg
lock
xchg
jb
sti
incb
xchg
push
out
out
ds
xor
popf
fwait
push
or
jns
je
std
lods
out
inc
shrb
das
xor
mov
pop
adc
cmpsb
xchg
or
pop
imul
dec
test
jb
inc
inc
imul
fsubl
adc
jae
xchg
ficoms
mov
cmp
inc
sub
das
nop
jb
push
dec
enter
pop
stc
mov
int3
cld
pop
loope
jecxz
sbb
mov
xchg
lahf
mov
rolb
jle
sbb
test
adc
rorb
cmp
push
or
insb
pop
sub
cmp
or
aam
mov
loope
add
je
jmp
sbb
mov
dec
push
dec
jp
xor
clc
push
in
das
outsb
push
inc
adc
outsb
aam
xor
xchg
adc
and
ror
pop
mov
outsb
push
push
icebp
dec
hlt
cmpb
or
jp
adc
lods
adc
jg
jno
sti
notl
test
inc
scas
mov
pop
std
test
cmp
scas
out
or
movsl
xor
cs
ds
mov
out
push
and
addl
enter
scas
test
sbb
dec
bound
xchg
xchg
lahf
xor
cmp
jbe
xchg
icebp
lsl
pop
or
ficoms
lds
subl
cmp
pop
outsl
mov
mov
push
mov
repnz
mov
xor
mov
incl
adc
cmp
adc
ret
pop
sub
or
xor
jge
sub
adc
shlb
xor
cltd
mov
jae
lea
sbb
mov
sarb
add
insl
es
out
adc
arpl
shlb
outsl
pusha
out
sbb
adc
jmp
imul
data16
popf
mov
jne
xor
mov
lods
jne
stos
mov
mov
in
loop
xor
mov
pop
rcll
gs
ja
adc
mov
addr16
es
test
ret
jle
push
shll
jbe
sub
pop
pop
and
lcall
popa
aas
testb
fnstsw
clc
movb
pop
std
inc
out
xor
xchg
out
sbb
xchg
and
aaa
dec
popa
shrl
movsl
repnz
orl
mov
inc
mov
xchg
pop
pop
insb
push
cmpsb
cmp
outsl
mov
cmc
push
push
jae
scas
inc
lods
insl
push
stos
inc
inc
dec
fwait
mov
inc
jl
mov
dec
cmp
pop
sbb
je
push
adc
adc
das
mov
xor
sub
test
inc
mov
sbb
lods
insl
or
and
das
and
xchg
dec
in
pop
ss
scas
add
std
mov
jb
add
cli
jb
cmp
out
mov
adcb
mov
dec
mov
mov
sub
bound
scas
mov
stos
push
pop
scas
xor
repz
or
cld
ds
and
cli
xor
lock
jmp
or
mov
mov
popf
dec
xchg
xchg
push
aad
pop
imul
adc
cmp
repz
or
or
dec
jne
js
insb
cmc
mov
daa
bnd
cld
and
addb
inc
aam
arpl
insl
and
movsb
neg
in
mov
aas
push
xor
hlt
ud1
adc
mov
stos
adc
and
jecxz
push
cltd
fcompl
sub
lock
push
push
pushf
mov
or
add
add
or
jns
cld
imul
mov
mov
sbb
arpl
adc
ja
sbb
and
mov
dec
icebp
pop
sub
aaa
les
dec
push
in
icebp
sbbl
test
decl
jns
scas
sbb
dec
pop
sbb
sbb
push
lahf
lods
sbb
xor
or
adc
adc
push
jle
mov
rcr
stos
dec
cwtl
mov
mov
stos
scas
xchg
add
stos
ds
mov
mov
fistpll
mov
cmpsb
popf
jb
sbb
add
js
push
repnz
lea
mov
rolb
int
add
hlt
mov
in
cmpsb
add
out
mov
cmp
test
push
mov
bswap
ljmp
push
and
into
in
pop
add
insb
dec
add
imull
or
xchg
stc
aaa
in
movsl
bound
mov
inc
daa
cs
hlt
push
xlat
and
in
lea
mov
add
dec
ds
jne
pop
push
rolb
out
pop
and
xor
inc
jp
ficompl
sbb
inc
or
pop
js
mov
not
pop
sub
addb
rcl
icebp
cmp
add
test
repnz
and
popa
jl
sbb
nop
adc
js
mov
adc
fimuls
mov
mov
cmpsl
sbb
cmp
shll
sahf
dec
jg
divps
adcb
cmp
gs
add
aad
jp
movsb
xchg
xchg
sahf
adc
test
in
add
push
addr16
push
mov
push
aaa
pusha
xchg
push
push
leave
mov
cmpsl
out
loopne
jbe
addb
push
stc
push
pop
push
push
dec
loop
and
shll
icebp
fisttpl
xchg
sbb
ret
leave
bound
jmp
jns
mov
jg
movsb
or
push
xor
jecxz
xchg
pop
adc
mov
jns
data16
cmp
mov
lock
test
lods
xor
lock
aam
fwait
pop
fsubrl
inc
in
aam
data16
xchg
jmp
cmc
pop
out
icebp
rorl
outsb
add
cmc
stc
adc
in
ja
jp
ja
ficomps
xchg
clc
xchg
int3
pop
jmp
sarl
xor
divl
pop
fadds
push
push
stc
mov
inc
dec
pop
push
cwtl
je
dec
push
jnp
aas
push
call
je
cmc
cld
loop,pn
cli
stos
mov
inc
nop
push
insb
fdivl
je
ficompl
mov
mov
adc
fwait
popa
mov
fnstsw
loope
js
test
pop
push
jnp
aam
sbb
xchg
aam
ret
rolb
pushf
ja
pushf
adc
imul
fsubrl
test
pop
push
push
and
cmc
std
jae
sub
gs
hlt
int3
out
lea
mov
xchg
sar
lods
bound
pop
cmp
mov
adc
cmpl
sub
mov
xchg
movsb
pop
push
and
in
xor
cmpsl
jo
mov
add
mov
mov
dec
pop
hlt
sub
cmp
dec
lret
loop
out
xchg
inc
adc
jl
add
pop
rolb
fidivs
aaa
je
out
push
dec
mov
jns
outsl
fldl
test
mov
int
xchg
dec
jle
push
inc
jne
xchg
cmp
sti
add
insl
adc
and
push
rorl
jl
xor
sub
inc
pop
inc
xor
cmp
insb
fildl
inc
inc
ret
or
and
or
fldenv
mov
lcall
and
mov
pcmpgtb
into
fistl
cmc
mov
cmpsb
xchg
or
sub
call
pop
test
sub
push
mov
pop
xlat
pushf
fwait
cmp
mov
sbb
push
cmpsb
mov
push
xchg
cmp
inc
inc
pop
mov
pop
push
sahf
ss
std
lods
inc
push
fcomps
addb
inc
and
call
dec
jno
mov
fnstsw
cs
das
inc
loope
mov
mov
sbb
adc
lcall
enter
repz
mov
push
fisubrs
inc
gs
and
inc
sub
cltd
add
addr16
push
sarb
std
adc
loope
outsb
test
sar
ret
lret
jne
pop
sti
xchg
xchg
mov
aam
in
clc
fs
jp
popf
fimull
xchg
mov
push
dec
push
fs
pop
rcll
add
mov
popf
ds
outsb
xor
jb
addr16
push
repz
pop
push
sbb
mov
je
and
js
jl
js
sub
jno
inc
jns
into
xor
lods
xorl
fisubrl
mov
repnz
mov
sub
mov
mov
popf
les
leave
cmp
jnp
cld
mov
push
sbb
ss
lret
int3
jge
push
push
popa
cmp
jno
aas
adc
lock
fisttpll
or
incb
clc
adc
jmp
fwait
push
add
dec
cmp
adc
adc
add
dec
aad
ucomiss
shlb
leave
push
inc
ds
sbb
add
orb
cs
inc
movsl
xor
aad
fnsave
insb
mov
jl
dec
sbb
cmp
ret
fmuls
cld
adc
aas
add
outsl
sub
push
mov
iret
out
xor
xor
mov
jns
cmpb
fwait
jno
hlt
stc
rol
push
in
push
sub
aam
or
xchg
jmp
mov
push
mov
outsb
rolb
mov
enter
les
mov
push
xor
ret
cli
out
imul
outsb
push
ljmp
push
cmc
xchg
pop
imul
fcomip
jno
dec
inc
add
mov
push
pop
lods
and
lods
jmp
insb
in
shlb
insb
cmp
rorl
push
jp
pop
bound
lahf
mov
xlat
popf
jge
jge
fsub
adc
adc
or
mov
mov
popf
mov
movsl
imul
test
cld
jo
dec
mov
in
or
cmove
mov
mov
shll
inc
gs
push
arpl
adc
inc
mov
mov
and
int
cmc
sti
es
inc
into
mov
cmp
xchg
sbb
mov
js
mov
sti
and
mov
stc
insl
mov
sbb
shll
mov
mov
ror
jle
call
scas
and
pop
iret
sbb
es
dec
out
loop
ja
inc
and
cmc
mov
xor
push
je
mov
mov
mov
xlat
rorb
and
or
xchg
push
popa
mov
dec
fwait
ja
push
ss
mov
sbb
lds
xchg
mov
sbb
ret
adc
cmp
data16
loopne
push
mov
lock
xorl
nop
mov
fsubrp
xchg
arpl
mov
mov
imul
sar
ret
movzbl
hlt
rolb
mov
mov
xlat
mov
leave
leave
xor
ja
addr16
pop
daa
pop
ret
cmp
movsb
enter
jl
addb
div
inc
push
adc
cmp
pop
fisubrl
pusha
repz
lock
dec
es
mov
sbb
jmp
sbb
push
das
int
lds
loopne
sub
test
sub
fildl
dec
or
movsb
cmpb
hlt
jae
dec
paddd
sbb
dec
adc
xor
lcall
cmp
jo
imul
jno
leave
add
xor
ret
jne
add
roll
pop
inc
add
repz
mov
sbb
icebp
testl
push
inc
xor
adc
mov
stos
push
sbb
shll
pop
pop
cmp
pop
loopne
push
hlt
es
sbb
dec
adc
mov
jle
xor
mov
mov
adc
mov
sbb
jp
incl
in
mov
mov
mov
push
int3
lcall
push
js
sub
xlat
lea
mov
mov
call
insl
sbb
imul
shrl
mov
rorl
mov
rclb
clc
cli
js
mov
pop
int3
xchg
and
sti
cmp
cmpsb
mov
pop
or
lret
insb
insb
ret
jl
mov
pop
xchg
jb
dec
mov
cmpb
pop
mov
nop
xchg
inc
jne
call
cmpsb
add
mov
adc
aas
cmp
subl
call
decb
clc
fwait
adc
mov
inc
sub
cld
lods
push
mov
dec
xchg
test
nop
adc
stc
inc
ret
pop
das
sbb
aaa
sub
or
sub
js
enter
cwtl
mov
jmp
test
cwtl
push
js
adc
xchg
mov
cmp
jne
xor
jmp
loope
out
lock
jo
js
xor
mov
shlb
sahf
cmp
or
mov
push
sbb
push
or
push
addl
sti
enter
push
les
jl
into
xchg
sub
aas
adc
push
fs
add
mov
push
adc
cmpsb
sbb
repnz
cwtl
xor
pop
or
or
fildl
adc
xor
xor
nop
pusha
sub
aam
or
jne
jno
jnp
or
push
mov
fldl
notb
push
int
add
dec
xor
cltd
in
rcll
cmp
and
mov
shll
loop
push
cs
sbb
push
hlt
aas
inc
repz
pusha
ds
mov
test
lret
adc
enter
fcompl
jmp
lcall
cmpb
fdivrs
mov
xor
in
popa
jno
int3
mov
add
mov
shlb
mov
cmp
cmpsb
sub
and
jne
mov
jb
mov
jl
sahf
or
sarl
es
mov
stos
sbb
enter
adc
cwtl
repz
push
or
xchg
push
jp
mov
xlat
daa
xor
inc
xchg
inc
pusha
ret
add
or
data16
inc
out
mov
adc
stos
mov
mov
repnz
inc
int
mov
jp
cmp
cmp
jp
inc
xor
xor
pop
jbe
pop
mov
inc
test
adc
cmp
outsb
mov
jns
and
cmpb
dec
rcr
aam
mov
mov
xchg
mov
sub
sahf
shlb
std
jbe
xchg
int3
movl
cmc
cs
dec
add
out
fwait
or
stos
xchg
cwtl
dec
lds
add
adc
push
xor
das
lds
test
push
je
flds
inc
pop
sbb
clc
mov
sub
dec
jg
sub
inc
push
adc
mov
inc
push
jns
mov
jge
je
clc
sbb
jae
xor
ror
bound
inc
cmp
pop
xor
push
adc
xor
push
xchg
sub
pop
or
rolb
les
add
sub
mov
add
xchg
lds
outsl
mov
movsl
mov
clc
mov
add
lds
and
popa
xchg
mov
inc
mov
ljmp
dec
int3
mov
outsb
mov
mov
aad
dec
lock
inc
push
insl
mov
out
sub
xchg
add
mov
and
mov
mov
lret
negb
jno
sub
adc
xor
repz
cltd
pop
stos
inc
rolb
jne
mov
mov
xchg
das
mov
mov
dec
or
xchg
pushf
jae
xchg
pop
int3
jmp
arpl
js
cmp
rclb
mov
nop
adc
push
jo
in
cmp
fwait
inc
pop
cli
bound
mov
js
push
lds
push
movsb
decb
jmp
enter
mov
jge
lret
pop
int3
and
jo
adc
mov
xchg
push
cs
push
or
fildl
loop
clc
lret
xor
push
lds
mov
lea
icebp
stos
sbbb
stc
cmp
cwtl
lahf
pop
leave
dec
cmp
clc
xor
popa
addr16
sub
lock
mov
inc
mov
cmp
into
jp
xchg
jnp
lods
std
outsl
gs
pop
push
mov
inc
cltd
and
jno
inc
xchg
es
adc
test
test
push
mov
cmp
popa
jnp
repnz
xchg
inc
sub
xor
xchg
xchg
jns
xchg
push
loopne
pop
sub
repz
loopne
call
ds
cs
xor
cmc
mov
cs
mov
shrb
in
mov
fbld
pop
pop
xchg
cs
dec
xchg
jmp
stos
sbb
cmpsl
xor
dec
ja
std
push
repz
stc
ss
xchg
ret
movsb
imul
in
xchg
in
sahf
adc
jb
pop
cmpsb
lea
insb
mov
movsl
pop
add
into
test
sbb
jp
mov
jl
daa
jg
clc
dec
dec
scas
movsb
data16
into
fisubrs
lods
sarb
add
adc
sbb
sbb
xor
insl
jge
push
orl
aam
dec
sarb
mov
cmp
pop
inc
jo
es
xor
sti
inc
mov
adc
sbb
popa
das
mov
out
xor
aaa
insb
cmpsl
and
jle
rolb
arpl
jl
cmc
push
mov
js
fsubs
insb
fsubr
aas
fs
or
sub
aaa
mov
xchg
mov
gs
push
and
lret
les
or
adc
jns
push
dec
loope
push
pop
das
jb
test
icebp
pusha
inc
mov
sub
out
arpl
push
jg
jecxz
test
aad
out
aam
xchg
sbb
ficoml
insb
cmpl
ficoms
dec
and
jmp
mov
cmc
scas
mov
cmpsb
mov
in
sbb
cmp
int3
xchg
xlat
pop
sbb
popf
ss
cli
nop
jns
push
sbb
sbb
mov
jnp
mov
push
jne
push
push
add
cli
dec
cmp
pusha
loope
push
xor
mov
and
pop
lock
in
mov
bnd
loop
mov
mov
cld
aas
test
dec
test
or
js
jl
arpl
push
jg,pt
mov
pop
cmpsb
sbb
pusha
mov
or
hlt
xchg
ret
adc
fisttpl
cmp
dec
movsb
cmp
mov
js
dec
mov
xor
adc
lods
out
dec
mov
xorl
lods
shll
pop
inc
ss
pop
repnz
adc
adc
lcall
jnp
out
push
push
not
movsl
stc
and
xorb
addr16
xchg
xchg
mov
aam
mov
cld
push
push
xor
push
nop
out
xchg
push
enter
mov
pop
jo
fidivrl
leave
jne
ficomps
ss
pop
fcmovb
mov
lcall
loopne
cmp
fisttpl
push
mov
and
cmp
stos
and
icebp
rolb
xchg
int
push
inc
push
adc
cmp
shll
mov
cltd
out
jbe
jns
sub
dec
pop
mov
cmpsb
cmc
les
mov
add
and
inc
cltd
fdivs
push
sub
fcompl
xor
test
adc
adc
loop
adc
rorl
sarb
out
push
dec
std
adc
jecxz
ret
cmp
jmp
fs
pop
mov
aaa
orl
cmp
stc
lods
nop
cli
jae
cmp
fbld
xlat
shlb
cli
pop
lea
div
and
xor
inc
xchg
cwtl
call
xor
push
sbb
sub
adc
xor
pop
jge
mov
mov
adc
rclb
call
adc
cmpsb
test
sbb
movsl
outsb
push
or
or
movsb
inc
mov
mov
mov
test
in
ffreep
mov
cmp
dec
in
out
or
adc
push
and
pusha
cmp
add
cmpl
jne
mov
sbb
push
mov
fwait
arpl
mov
xchg
mov
dec
fs
lods
nop
cmpsb
outsl
pop
pop
loopne
mov
scas
mov
dec
mov
adc
sbb
fistps
sub
leave
jp
adc
or
dec
mov
fimull
cmp
arpl
sbb
pop
into
insb
jb
ror
mov
add
iret
adc
xlat
xor
jb
xchg
push
lcall
cltd
mov
adc
pop
fimuls
fistpl
fsubl
sub
pop
frstor
lock
lods
nop
sub
fnstcw
int
pop
adc
inc
imulb
shl
jno
and
cmpsl
xlat
ds
cwtl
fdivl
sti
pop
cmp
pop
dec
aaa
fdivrs
insb
sub
notb
jmp
frstor
stos
notb
gs
in
gs
fistpll
dec
dec
insb
push
outsb
pop
cli
sbb
cmpsb
adc
rcrl
test
das
cmp
dec
mov
push
mov
push
negl
loopne
push
cmpl
push
pushf
andl
xchg
xchg
jne
addr16
pop
or
mov
jmp
clc
repnz
scas
sbb
and
push
push
cmpsl
shlb
ss
rorl
leave
dec
mov
lods
lahf
int3
insl
rcr
cmc
insl
push
push
and
jb
dec
mov
sbb
adc
out
mov
js
sbb
sbb
enter
sahf
pop
push
fs
mov
cmp
out
xchg
mov
repz
inc
test
call
or
test
pop
arpl
lea
fbld
dec
pop
jg
mov
sbb
stos
mov
lods
aam
inc
xor
into
lods
scas
stos
inc
enter
and
ret
mov
push
aam
mov
and
mov
ljmp
inc
pop
sbb
loop
cmp
in
js
nop
xor
pop
or
push
sbb
sub
push
mov
adc
imul
pop
push
mov
outsl
mov
cmp
xchg
xchg
xlat
inc
mov
mov
ret
insb
jbe
mov
das
push
mov
jbe
and
pop
fildl
scas
lea
mov
mov
or
push
mov
mov
xchg
mov
jl
cmp
mov
xor
xchg
pop
fldt
cmpb
mov
loopne
cmc
add
jecxz
mov
test
in
xchg
adc
aad
ljmp
cmp
icebp
or
mov
xor
or
daa
xor
shlb
cmp
jl
fwait
xor
add
mov
jecxz
pop
and
cmp
jnp
pop
insl
jg
in
and
and
arpl
push
jmp
callw
adc
in
jge
mov
xor
les
js
push
nop
pop
call
dec
lock
dec
mov
xchg
lea
outsb
sub
jo
ss
les
add
jle
frstor
pop
mov
push
popa
mov
cmp
test
or
pop
mov
add
stos
loopne
xchg
das
fcmovnbe
adc
jmp
mov
mov
mov
ss
dec
std
aam
mov
mov
cli
jo
inc
jl
xlat
adc
pop
clc
jb
inc
imul
and
and
sbbl
pop
add
inc
adc
sub
cli
lret
testl
loop
test
fidivs
push
xor
movsl
out
ss
popl
push
pop
mulb
mov
rclb
ror
dec
jne
outsl
daa
dec
dec
mov
jns
sar
gs
add
mov
pop
push
pop
xchg
dec
daa
mov
jecxz
xchg
pop
sbb
jmp
or
stos
lret
add
test
stc
push
pop
jne
cmpsb
adc
sbb
loope
inc
mov
movsl
xor
inc
cwtl
andb
addr16
dec
das
jge
mov
mov
mov
push
adc
xor
inc
hlt
xorl
insb
out
sbb
push
int
repnz
in
or
jp
test
mov
inc
clc
das
cmp
mov
add
test
insb
mov
xchg
mov
jge
ficoms
inc
mov
push
pop
jns
inc
loop
cs
and
cld
add
lods
les
dec
and
push
adc
pop
jl
mov
stos
sbbl
out
insb
sub
and
hlt
add
push
aas
pop
adc
dec
daa
cmpsb
test
cmp
ljmp
push
cmp
pop
mov
loop
lret
xor
mov
xchg
and
sbb
mov
inc
jmp
in
sbb
iret
jmp
sbb
xor
lea
jg
jbe
notb
dec
jb
mov
fcoms
pop
aaa
xchg
jns
sbb
sub
pop
and
ljmp
xor
insb
push
push
frstor
fiaddl
jno
lahf
push
or
pop
outsl
lds
jmp
mov
sti
shll
dec
rcrl
daa
jp
fsubrs
ljmp
push
int3
and
cmpsb
adc
sbb
xchg
dec
mov
hlt
inc
jne
inc
sbb
in
mov
iret
or
and
and
pop
insl
stos
orl
lock
call
ja
addr16
aad
sbb
shlb
mov
insb
sub
pop
xchg
outsb
es
movsb
sbb
rep
sbb
cwtl
iret
cs
or
shld
pushf
in
call
sbb
incl
mov
xchg
inc
pop
sub
jg
insl
arpl
test
push
xor
rorl
cmovs
outsl
jne
pop
mov
inc
repnz
xor
lret
mov
mov
lret
jmp
call
rol
ds
sti
or
dec
push
iret
fs
sbb
loope
mov
in
test
add
pop
loopne
frstor
adcl
mov
mov
pop
movl
lods
jae
pop
mov
and
jb
push
les
std
cmpsb
unpcklps
mov
add
pop
push
jp
mov
lahf
lods
pop
in
jg
xchg
and
inc
dec
gs
cmp
or
or
mov
aam
je
xchg
into
dec
aam
mov
fcmovne
sti
and
sbb
scas
push
pop
push
imul
fnstenv
les
push
das
sub
add
repnz
dec
insb
fs
mov
ror
ss
ja
pushf
pop
cmp
push
popa
push
mov
mov
lahf
xor
ret
in
sti
dec
xchg
in
xor
mov
add
icebp
stos
dec
pusha
rcr
aam
outsl
aaa
sub
lods
push
decb
fisubs
sbb
orl
jb
adc
scas
mov
data16
cltd
ror
int
mov
call
stc
rolb
pop
dec
push
loop
mov
addr16
mov
push
lret
or
push
clc
mov
lret
xor
pop
movsb
pop
fiaddl
mulb
jne
sbb
stc
dec
push
cmp
je
fwait
jo
cmpsl
popf
xchg
insb
clc
enter
movsl
adc
mov
test
mov
xchg
mov
inc
pop
adc
push
daa
mov
imul
lock
mov
xor
jo
sbb
mov
push
push
popl
push
daa
xor
xor
xchg
fwait
es
stc
dec
repz
inc
cmp
push
or
loop
mov
shrb
or
cwtl
xor
push
mov
repz
sub
jle
shll
mov
je
ror
inc
sbb
dec
fsubrs
and
adc
in
loop
cmc
and
out
jne
inc
es
repz
adc
test
or
mov
cli
mov
and
adc
add
ja
cmp
mov
rcll
adc
shrb
pop
fdivrl
cmp
sub
dec
pop
jns
ret
test
leave
sub
or
lea
mov
push
mov
jg
ftst
cmp
imul
dec
cwtl
mov
push
jmp
jp
mov
mov
mov
dec
push
or
mov
out
inc
pop
jmp
inc
scas
notb
pop
pushf
jp
or
outsb
cmc
std
pop
clc
add
cli
adc
inc
aam
outsb
movsl
push
jecxz
sub
adc
out
jbe
out
adcl
push
mov
push
adc
mov
lahf
popa
xor
int
into
cmp
stc
je
inc
shlb
fldl
and
adc
adc
dec
sbb
aad
sbb
xchg
jmp
push
sub
push
cmpsb
mov
mov
ds
push
xchg
cmp
lods
xor
add
and
jbe
aas
out
push
addr16
fs
rcrb
push
outsl
sbb
xchg
dec
jmp
jbe
push
mov
cld
cltd
repnz
xor
or
dec
sub
pop
imul
mov
add
pop
repnz
mov
les
jmp
mov
xchg
sbb
mov
sub
cs
repnz
mov
data16
and
ss
popa
dec
xchg
dec
xor
xchg
sbb
push
or
pop
iret
jl
dec
pop
sbb
nop
lea
or
jecxz
addr16
call
mov
iret
push
xchg
mov
lret
xor
cmc
push
sbb
enter
mov
jb
shl
rcrl
aaa
aam
stos
lods
ffree
imul
int
fiaddl
in
xor
sbb
int3
into
ret
sub
pop
inc
xor
mov
ds
inc
inc
test
mov
stos
inc
test
push
icebp
cmp
data16
clc
popa
sub
mov
out
pop
add
movsl
outsb
sbb
mov
dec
andl
imul
pop
jbe
xchg
fcoms
cmp
or
sbb
imul
orb
and
jnp
and
ret
dec
imul
cmpsb
scas
js
test
cmpsb
lret
jecxz
ss
test
cld
loopne
rcl
into
data16
aaa
jl
sbb
dec
ret
fldenv
jle
mov
and
sbb
push
inc
inc
outsb
hlt
je
mov
jg
mov
daa
nop
mov
jecxz
mov
inc
loopne
idivb
adc
fsubrl
out
negl
loop
sti
insb
inc
pop
fwait
xor
nop
leave
loope
aam
cmp
jp
cmp
mov
test
jmpw
adc
sbb
pop
push
jle
jnp
stos
adc
mov
jle
decl
std
xchg
cmpsb
sub
lret
subl
jne
xchg
fdivr
jbe
jnp
outsl
push
jl
xchg
nop
idivb
inc
jne
aaa
or
xor
dec
enter
cmp
sti
or
sbb
clc
cltd
js
push
or
aam
lds
gs
fcoml
shlb
in
cmp
push
ss
pop
mov
int
xchg
sub
sbb
out
add
iret
inc
dec
push
pop
movsl
sbb
rcrb
mov
xchg
pop
pop
pop
mov
xor
stos
or
cmpsl
pop
int3
sub
js
ja
jl
push
mov
add
aam
into
lods
shrb
xchg
pop
mov
jge
dec
adc
inc
lods
push
pop
xchg
sbb
loopne
xor
xchg
add
sbb
in
aas
adc
jecxz
xor
mov
stos
or
mov
push
out
adc
hlt
stos
mov
pop
fidivrs
xchg
pop
mov
repz
mov
xor
or
iret
dec
push
pop
xchg
pop
mov
iret
fs
ja
lea
lret
ss
mov
aaa
cmc
mov
decb
mov
jge
jg
ja
dec
inc
jl
mov
jmp
sti
or
iret
push
into
push
std
dec
das
shrb
leave
pop
jle
aaa
andl
hlt
aad
cli
adc
mov
sarb
adc
and
and
and
sbb
or
mull
mov
lea
fisubrl
cmp
popf
outsl
push
add
mov
mov
out
mov
pop
sahf
xor
mov
push
sub
add
xchg
iret
inc
jmp
fdivr
inc
xchg
inc
js
push
test
xchg
pop
testl
pop
test
xchg
cwtl
enter
jle
inc
dec
dec
shl
and
imul
fdivrs
xchg
and
aaa
dec
jbe
mov
scas
and
add
mov
mov
and
and
frstor
sbb
movsb
movsl
loop
je
push
repnz
pop
pop
or
inc
mov
sub
mov
xchg
adc
mov
imul
pushf
adc
movsl
out
xchg
xchg
adc
add
jne
xchg
jmp
xchg
mov
in
add
jo
lahf
ja
repz
pop
fiadds
in
or
mov
lock
ret
es
and
and
dec
sub
gs
aas
scas
and
mov
adc
jno
addb
scas
sub
xchg
cs
push
xor
sub
test
push
sbb
scas
dec
pop
xchg
add
mov
popf
cmpsb
aas
jge
out
xlat
scas
sbb
insb
and
sbb
add
push
out
pop
push
sub
sbb
test
dec
and
cmpsb
clc
mov
es
insb
jl
dec
push
popa
jecxz
inc
stos
movsl
mov
and
ljmp
xor
push
pop
pop
imul
lea
cli
icebp
cld
cmpsl
in
out
shr
pop
xor
pop
fs
insl
loop
xchg
cmp
and
and
sbb
sarb
push
jns
loope
jnp
push
or
movsb
lea
sub
push
std
call
inc
stos
jne
mov
negb
sub
jnp
loope
scas
daa
arpl
cmp
xchg
mov
or
outsb
imul
jae
xchg
push
adc
sub
push
dec
add
dec
std
mov
in
cmp
iret
jno
and
movsl
adc
xchg
jle
adc
call
ss
xorb
loopne
stc
cs
fwait
aad
outsl
inc
xchg
cltd
in
sahf
push
push
jp
int3
push
or
shrb
pop
and
arpl
out
mov
imul
pop
es
add
xor
aas
and
insb
stos
and
dec
es
push
or
loope
xchg
movsb
xchg
push
repz
xor
pop
movb
pop
fwait
pushl
outsl
mov
punpckhwd
add
jae
imul
fidivl
xchg
push
into
daa
cltd
mov
jecxz
mov
subb
mov
add
test
lret
jb
negl
cmpsb
movsb
add
inc
add
mov
jb
fs
and
lret
stos
in
out
ja
inc
lret
and
dec
and
in
fisttpll
sub
jae
push
test
dec
xchg
js
cmp
xchg
xchg
shlb
cvtps2pi
repnz
add
sbb
je
cmpsl
jge
icebp
add
lods
inc
loope
insl
dec
shrd
jno
fs
cmp
scas
mov
inc
jg
sub
mov
test
mov
ja
sbb
or
mov
mov
scas
in
ljmp
jae
fs
in
pop
lahf
mov
pop
cmpsl
negl
call
sbb
imul
mov
pop
sbb
jno
mov
iret
into
test
jp
jnp
in
xor
pop
cmp
in
and
mov
mov
mov
sbb
rcl
adc
sub
popa
in
jmp
adc
mov
lahf
push
adc
insl
popa
bound
sarl
add
andb
loop
movsl
aam
push
sbb
loopne
xchg
jbe
imul
pop
sbb
addb
inc
cmp
lcall
rorl
out
xor
xor
mov
out
iret
sub
dec
xchg
pop
test
lds
pop
das
repz
movsl
add
pop
lds
or
xor
inc
sub
lret
inc
mov
cmp
lahf
mov
into
pop
add
aaa
jbe
and
lea
cmp
fcoml
rorb
cltd
mov
dec
mov
dec
sub
xor
js
inc
sub
dec
dec
subl
xor
or
test
test
pop
testl
insl
mov
fmuls
push
icebp
push
call
lds
inc
mov
xlat
outsb
aas
mov
sub
in
jge
dec
int
inc
hlt
push
mov
jp
xchg
fwait
sub
sbb
scas
cmp
lock
or
sbb
lds
into
pop
or
mov
xor
cli
imulb
aas
pop
mov
cltd
gs
pop
mov
ret
repz
cmpl
insl
cmpsb
xchg
fs
mov
and
popa
mov
jmp
inc
or
loop
stos
xchg
imul
rcr
pop
fdivr
pop
pop
cld
inc
sahf
jg
and
sbb
aas
or
mov
xchg
mov
stc
scas
cmp
sbb
out
stc
mov
sub
mov
sub
cmp
sbb
arpl
ret
fbld
mov
pop
nop
push
mov
and
pusha
divl
dec
cmpsb
outsl
fnstcw
aas
mov
ret
mov
dec
push
mov
mov
inc
mov
nop
mov
push
jns
adc
mov
pinsrw
cmpb
inc
orps
sbb
or
into
cmp
test
adc
lahf
fildll
push
and
stos
inc
mov
ret
and
adc
mov
inc
loope
arpl
mov
xchg
pop
jg
daa
lret
inc
inc
je
add
cs
cmp
jge
imul
mov
push
aaa
mov
and
mov
ljmp
in
mov
mov
jg
cmp
xor
ss
pop
mov
sbb
aas
insb
or
mov
mov
xchg
xor
or
and
cmp
mov
sti
dec
test
add
aas
in
push
push
xchg
push
stc
ljmp
fnstcw
test
lods
inc
ret
mov
inc
insl
addr16
dec
movsb
test
mov
stos
pop
ret
push
and
stc
and
bound
mov
test
add
out
dec
lods
cmp
and
pop
in
xorb
xchg
inc
in
sbb
lds
mov
outsb
and
fidivrs
movsb
xor
out
mov
inc
mov
pop
into
int
push
pop
mov
sbbl
aad
arpl
call
push
fadd
push
mov
test
push
sbb
push
in
test
xor
fwait
sbb
adc
xchg
jp
xor
loope
inc
pop
stc
sbb
jle
movsb
test
jecxz
sbb
pop
pusha
ss
imul
add
test
dec
inc
ret
dec
repz
xchg
sub
out
adc
and
dec
popl
inc
repnz
mov
fisubs
mov
out
sub
push
mov
out
ljmp
inc
cmc
fnstsw
pop
push
je
call
nop
in
not
sbb
or
inc
dec
mov
pop
das
js
into
cmp
loopne
xor
xchg
lea
jb
xchg
pop
push
out
nop
lcall
inc
push
bound
cmp
cmpsl
cmp
xor
jl
xchg
clc
cmpsl
or
repnz
das
insb
cs
jb
je
pop
sbb
test
or
gs
shl
xchg
iret
dec
pushf
push
push
rcll
addr16
fwait
and
sarb
push
cs
add
lods
push
mov
mov
mov
sub
mov
jp
int
sahf
shrb
loopne
xor
cmpsl
loopne
add
lods
sub
dec
push
jno
and
repnz
sbb
cmpb
mov
sbb
test
ucomiss
mov
jne
mov
mov
cmp
push
loopne
adc
inc
xchg
xchg
push
repz
and
inc
es
sbb
cmp
sti
and
push
mov
and
dec
out
in
xchg
fstpt
enter
pusha
aaa
repnz
push
xchg
lahf
adc
inc
test
in
sbb
inc
mov
ret
gs
mov
lods
pusha
shlb
cltd
push
push
xor
leave
movsl
scas
pop
xchg
push
or
popa
dec
dec
push
xchg
daa
dec
xor
cmpsb
sbb
push
das
xlat
mov
inc
ljmp
or
jmp
sub
jno
and
xchg
xor
push
pop
fwait
sub
adc
sub
sub
inc
jmp
sbb
mov
test
cmp
inc
jno
mov
xor
ja
jne
adc
jb
or
push
ljmp
imul
call
hlt
jbe
mov
or
sbb
sahf
push
mov
push
jae
add
repnz
adc
cmp
xchg
in
jecxz
jno
data16
imul
push
add
outsb
mov
xor
jno
in
in
out
mov
frstor
dec
nop
gs
sbb
cmpsb
mov
orl
mov
fcomps
loopne
clc
andb
test
icebp
inc
inc
push
int
mov
aad
dec
adc
cmp
lods
pop
jne
imul
inc
outsl
mov
mov
sbb
cmp
mov
leave
test
push
lock
add
jg
not
bound
adc
add
ljmp
and
push
and
push
imul
inc
mov
addl
cwtl
test
orb
dec
into
jo
divb
add
jge
xor
inc
push
loope
mov
gs
fsubrs
lcall
stc
subl
sbb
fistl
xchg
inc
push
pusha
aam
xchg
ret
mov
push
mov
sahf
dec
das
mov
mov
sti
adc
sar
push
dec
lret
mov
nop
push
push
scas
arpl
xor
enter
jb
mov
mov
inc
jmp
jecxz
leave
sti
out
xchg
fld1
test
scas
add
cmc
sub
fbld
push
out
inc
cmpsb
sbb
and
ds
sbb
shlb
pop
ds
mov
lea
push
hlt
negl
repnz
jmp
mov
sub
loope
cmp
mov
mov
aad
scas
pop
push
in
mov
mov
aas
push
pop
loop
js
fistpll
lea
lea
fidivs
leave
push
ds
mov
fsts
movsl
xor
xchg
push
dec
adc
inc
pop
jmp
enter
inc
push
jle
inc
in
mov
das
or
pop
xchg
imul
scas
sbb
or
mov
bound
fstp
sbb
lcall
mov
pop
pop
push
stos
xor
push
sub
mov
sahf
inc
stos
xor
pop
scas
aad
dec
shlb
ret
and
ret
jg
mov
aad
dec
out
inc
ficoml
fneni(8087
cli
ljmp
cmp
cmp
dec
gs
xlat
cld
fisubrl
mov
cmp
jg
xchg
mov
jecxz
dec
jnp
push
push
fimuls
xchg
data16
out
cmp
dec
idivb
outsb
inc
cmpsl
jl
aam
cmp
rol
stc
fst
push
addl
sub
push
push
dec
push
pop
sbb
and
stos
mov
repz
out
inc
scas
adc
jl,pt
adc
negl
scas
and
mov
pushf
iret
mov
jge
paddw
cmpb
out
dec
lock
insl
test
daa
inc
nop
nop
sub
cld
and
jp
movsl
or
sub
xor
and
mov
insl
enter
mov
pop
cmp
ja
test
dec
inc
adc
in
jnp
and
mov
inc
add
cmp
adc
int
int
and
cmpsb
add
pop
sub
adc
sbb
mov
lea
loop
test
mov
fldcw
xchg
inc
adc
add
ljmp
push
jmp
fsubl
arpl
das
push
and
cmovne
and
jno
mov
mov
out
push
adc
call
scas
and
sub
jge
jnp
sbb
mov
mov
push
ds
lea
jnp
movsb
sahf
dec
adc
xchg
flds
dec
sbb
out
xchg
icebp
jo
mov
ret
loopne
push
sbb
inc
insl
stos
inc
add
std
adc
sub
in
jmp
jg
mov
jb
push
xor
mov
sbb
fcmovnb
inc
sub
jne
jge
and
addl
js
cmp
xlat
xchg
insb
mov
xchg
fwait
jae
rolb
cmp
jno
fsts
shlb
sub
jnp
mov
cmpsb
pop
or
cmp
add
js
pushf
adc
mov
lock
arpl
aam
and
pop
dec
loop
xor
rcll
jo
mov
mov
and
mov
adc
push
push
pop
cmpsb
js
mov
inc
outsb
sbb
inc
in
cmpsb
sbb
jmp
rcrl
cmp
enter
xchg
in
xchg
arpl
cwtl
repnz
push
xchg
cwtl
adc
and
leave
std
sub
dec
shll
push
push
hlt
into
fpatan
dec
loop
and
lods
pop
mov
xor
xchg
mov
repz
fbld
jmp
mov
sub
mov
popf
mov
lcall
shll
pop
mov
insl
data16
mov
pop
ficomps
repz
fdivrp
sub
push
inc
insb
mov
loope
fistps
out
mov
xor
mov
pop
pop
push
imul
mov
sub
data16
push
cmp
adc
mov
orl
sbb
in
es
and
push
mov
pop
stc
jl
cmp
stc
or
daa
sbb
xor
mov
iret
push
repz
call
iret
sbb
xor
test
and
and
push
xor
sub
mov
hlt
enter
sub
jns
cld
scas
js
jnp
dec
dec
dec
scas
push
jle
js
inc
pop
jae
mov
int
cmp
xchg
lods
dec
fistpll
mov
ret
das
and
dec
addr16
mov
adc
into
jmp
insl
rcrb
mov
inc
lcall
out
push
std
adc
jmp
sti
outsl
sbb
mov
lds
push
mov
mov
fdivrp
rcl
and
push
sbb
scas
std
ret
insl
push
call
xorb
call
cs
xor
je
arpl
int3
pop
lret
es
add
scas
in
gs
sub
mov
sbb
sub
sarl
aaa
aam
mov
cmp
sub
dec
je
and
popl
bound
inc
mov
ret
and
add
arpl
rcll
xchg
icebp
pop
pop
hlt
jle
sub
push
in
scas
and
andl
sti
mov
dec
mov
push
mov
xor
pop
cli
in
and
xor
fwait
pop
out
jnp
cmp
loopne
push
jle
mov
fld
dec
loop
insb
xor
mov
cmp
dec
mov
mov
mov
mov
addr16
in
call
lds
shl
mov
jbe
fisttpll
jno
test
add
push
push
sar
inc
cld
adc
ljmp
outsl
jecxz
push
js
and
rorl
lahf
xor
cmp
es
or
incb
cs
orl
jae
popf
daa
in
int
cwtl
int
or
push
ljmp
or
cld
sahf
bound
cmp
inc
add
popa
cmc
lods
sarb
pop
jle
stos
test
decl
or
pop
ljmp
mov
inc
movsb
call
fstpt
jle
mov
je
fistpll
cmpsl
sti
cmp
cli
inc
and
or
jb
out
push
sbb
fldenv
mov
push
dec
xor
xor
push
jnp
pop
cmp
lods
test
xchg
lods
cmpsb
mov
icebp
dec
stos
mov
jmp
or
in
lock
stc
xor
fbstp
push
pop
mov
xchg
dec
jo
jecxz
pop
test
pop
mov
jno
stos
psubusb
mov
call
push
scas
mov
push
inc
arpl
pop
adc
call
nop
icebp
cmpsl
xchg
mov
fcompl
xor
push
les
xlat
cmpsl
sbb
adc
mov
loopne
into
sub
ret
inc
pop
xlat
mov
push
fs
iret
ljmp
jne
arpl
mov
jle
test
int
cmp
int
mov
or
xor
lcall
bound
imul
sub
mov
or
mov
inc
push
fsub
pop
jmp
mov
out
sub
or
push
arpl
repz
in
mov
stc
and
shl
fnsave
stos
fcom
sti
cmp
rorl
aad
in
insb
pop
push
enter
fdivrs
push
pop
sbb
enter
pop
ss
pusha
jmp
xlat
and
push
imul
sbb
push
push
dec
mov
call
push
mov
inc
cmp
dec
xchg
mov
and
movsb
jmp
cs
hlt
popl
subb
imul
inc
int3
sub
lret
lahf
jo
or
mov
fdiv
inc
lret
fcmovu
lret
cmp
xor
cmp
sbb
gs
pop
xchg
push
rorl
loopne
pop
imul
outsl
add
fsubl
dec
sub
or
aas
insl
dec
dec
sbb
outsb
imul
divl
mov
daa
hlt
pushf
sbb
and
es
outsl
lret
cmc
inc
aad
in
sub
sub
pusha
jno
cs
faddp
int
inc
xor
fs
xor
aas
jl
mov
sahf
lds
fistpll
adc
xor
adc
addr16
hlt
add
or
movsb
mov
mov
pop
sub
outsl
outsl
dec
imul
fldt
imul
fldcw
mov
sub
cmp
mov
inc
pop
insl
mov
jecxz
sbb
jg
sbb
pop
insb
mov
adc
jmp
xchg
adc
cmp
cltd
and
repnz
cltd
inc
int3
mov
xor
scas
data16
test
arpl
jb
mov
push
jno
dec
dec
test
sbb
fcoml
xchg
fcomp
push
fcoms
and
mov
hlt
adc
scas
jns
lea
xor
jbe
cmp
js
push
ja
and
jne
nop
rcr
jbe
mov
push
add
fsubs
mov
mov
mov
shl
mov
out
inc
adc
xchg
filds
stos
out
in
sub
xor
mov
add
std
ljmp
or
cli
push
pop
lcall
mov
jns
pop
and
push
sbb
mov
loope
push
mov
add
xorb
cld
xorb
mov
mov
lret
xor
psadbw
mov
jae
test
mov
jns
pop
jmp
fistpll
stos
sub
fmul
ds
add
pop
and
ret
mov
and
mov
mov
sbb
push
cltd
sarl
repnz
adc
rcll
in
cwtl
mov
push
out
jo
cmp
pop
loop
jecxz
jo
pop
ja
lods
fs
aad
scas
and
ds
dec
int3
mov
dec
inc
dec
fs
cmp
mov
mov
mov
xchg
xchg
rclb
popa
add
xor
ss
js
mov
test
adc
mov
cmp
fsubrs
jp
mov
pop
inc
xor
loopne
adc
or
mov
dec
test
dec
adc
pop
jno
ficoms
in
call
ds
mov
leave
and
imull
push
aam
inc
sahf
test
fs
shrl
scas
cmp
into
xchg
lcall
jnp
dec
pushf
and
inc
jge
and
push
add
or
stos
add
mov
lahf
frstor
lret
fcoml
sbb
fnsetpm(287
stc
cmp
inc
test
pop
mov
jecxz
push
push
xchg
aad
nop
xchg
xor
cmp
pop
push
add
hlt
push
and
std
add
mov
inc
lret
mov
lret
xchg
into
and
imul
jle
sti
dec
pop
pop
jns
das
pop
lods
fisttps
push
aaa
sub
or
cmp
and
inc
nop
in
out
mov
cwtl
aaa
ret
xor
shr
ljmp
test
loope
jge
xor
stos
fldenv
dec
pop
into
lea
push
mov
jle
cmc
adc
and
xor
shll
aas
xchg
call
sub
sbbl
pop
pop
xorb
rol
leave
test
mov
pop
fdivl
out
xchg
adcb
out
add
jnp
adc
and
jecxz
mov
mov
aad
negb
cltd
fs
xchg
mov
mov
push
push
add
enter
aaa
dec
repz
outsl
or
inc
and
push
dec
mov
cld
outsb
test
and
mov
out
pop
movsl
sub
xchg
aaa
add
adc
leave
dec
dec
idivb
jo
sbb
mov
and
pushf
or
lret
jae
jo
test
popa
sbb
pop
add
popf
push
or
stos
fwait
mov
adc
loope
pop
sti
cli
push
xchg
imul
pop
jne
mov
jnp
push
sbb
sbb
mov
jle
inc
rorl
mov
and
lock
shl
lret
cltd
jmp
pop
add
sti
cs
cli
xor
xchg
outsl
ret
cmp
mov
in
call
movsl
inc
les
popa
iret
mov
repnz
cmpsl
loopne
into
movsl
movsb
dec
loop
xor
out
mov
dec
je
xchg
movsb
jge
mov
xlat
adc
dec
jle
jns
push
in
cmc
mov
inc
hlt
shl
adc
hlt
pushf
pop
lcall
mov
aas
pop
ds
mov
mov
mov
xor
mov
add
push
add
sub
lods
dec
pusha
scas
jno
jo
mov
add
testl
push
push
test
or
imul
repnz
or
xchg
jl
sbb
rcll
lods
dec
mov
push
call
mov
cltd
pop
xchg
shlb
mov
or
fnsave
sarl
mov
xor
or
aam
lods
jecxz
or
jbe
cmp
mov
inc
stos
loop
sub
je
pop
cld
outsb
or
mov
ss
push
pop
divl
mov
mov
mov
icebp
or
paddusw
inc
je
or
lods
cld
inc
sub
ds
add
pop
test
add
xor
mov
loop
mov
and
lods
testl
push
push
int3
dec
rorb
mov
andb
arpl
movsb
sahf
cltd
jb
cmp
or
daa
scas
pusha
sub
dec
sub
cwtl
movsl
jl
mov
aad
inc
mov
test
dec
out
arpl
jl
sbb
push
das
fimull
sbb
dec
push
pop
sbb
popf
ret
les
ficoms
ret
adc
xor
lret
sti
pop
rclb
je
jno
inc
cmc
nop
cmpsl
xchg
xchg
lcall
dec
mov
dec
jns
hlt
xchg
adc
lcall
inc
jge
dec
scas
mov
push
enter
push
push
cmp
and
sub
or
mov
mov
push
inc
xchg
fiadds
jle
testl
xor
addl
xlat
mov
jne
arpl
pop
fidivrl
xor
sub
cmp
xor
jbe
fstpl
stos
pop
push
mov
bound
sbb
nop
iret
call
mov
rcrb
pushl
scas
dec
outsb
jo
test
and
and
sub
sub
cmp
or
aaa
xor
mov
push
hlt
xchg
cs
test
jns
xor
mov
aas
loope
add
xchg
adc
or
pop
jae
adc
es
xorl
out
adc
sbb
add
popf
inc
ljmp
in
or
inc
and
xor
jno
movsb
adc
cmpsl
inc
out
enter
or
dec
dec
inc
inc
inc
enter
mov
push
sbb
ficomps
jecxz
in
pushl
cmp
xchg
push
dec
out
mov
inc
test
inc
add
mov
add
lods
ja
shlb
lret
inc
pushw
or
fsubrs
pushf
xor
int3
dec
push
jecxz
rolb
mov
xor
sub
insl
cmp
orb
push
mov
cmp
icebp
mov
repnz
or
jno
pusha
stos
call
aad
push
mov
aaa
push
into
fistpl
ret
cmp
leave
in
outsb
xor
pop
mov
sub
pop
insb
or
pusha
int3
push
jl
or
movsb
add
addr16
arpl
mov
call
dec
jns
jo
clc
add
pushf
jnp
inc
adc
pop
inc
pusha
ficomps
popa
lock
jmp
cmc
pop
xchg
add
arpl
or
cmp
dec
pop
subl
shr
gs
sub
xor
inc
fwait
lods
xor
xchg
push
and
test
cmp
xor
push
fldenv
jl
mov
push
jo
int3
sub
mov
push
mov
cmp
leave
fadd
dec
adc
js
dec
aas
pop
cmp
call
mov
adc
mov
dec
fcomps
cmp
add
sub
xor
test
movsb
repnz
dec
jnp
mov
pop
divl
inc
and
pop
or
pushf
std
mov
mov
sbb
jmp
scas
mov
adc
movsb
fwait
cmc
sarl
inc
mov
xchg
xchg
test
xor
test
add
and
jl
add
mov
jne
scas
lea
sbb
cmpl
popa
daa
xchg
xchg
scas
cltd
nop
iret
xor
repz
or
insl
fs
adc
jmp
arpl
add
imul
iret
add
mov
adc
pop
cmp
fidivrs
leave
inc
sbb
sbb
add
inc
loope
fs
lods
in
iret
loop
dec
cmp
test
js
sbb
push
in
jb
add
xchg
adc
das
xchg
iret
fnstcw
loope
iret
popa
and
lret
ja
gs
push
loopne
push
ljmp
aad
bound
pop
xchg
xor
out
inc
xor
xchg
cmc
pop
adc
mov
sub
inc
or
push
xor
ja
nop
dec
and
mov
adcl
push
test
inc
adc
inc
std
xor
push
mov
sub
mov
lods
push
les
jl
push
subb
lcall
pop
mov
pop
xlat
inc
popf
das
ret
fadd
mov
cwtl
jl
jmp
ds
dec
mov
add
pop
dec
jge
mov
sarl
add
leave
xchg
inc
inc
xor
mull
jb
ja
and
and
into
jne
jg
xchg
mov
roll
pop
xor
mov
sbb
push
shlb
push
rorb
outsb
pop
and
cmp
lods
adc
outsl
jecxz
mov
cmp
je
icebp
pop
pop
sbb
push
inc
outsb
shlb
or
jecxz
shl
movsl
adc
xor
or
arpl
adc
rclb
shr
jae
das
daa
sarb
jg
scas
sti
cltd
xor
pop
cwtl
sbb
dec
mov
in
clc
cmp
nop
fsubr
or
sti
jns
xor
dec
into
adc
jae
ja
add
push
std
in
inc
push
stos
dec
test
jae
roll
pop
xchg
pop
imul
jp
rcll
imul
mov
jg
mov
daa
xor
movsb
add
jp
pusha
jp
cmp
xchg
push
insl
pusha
lret
sti
jl
orb
ficompl
cs
push
test
shr
cmp
push
movsb
ret
jg
ljmp
shll
and
ds
pop
loopne
fstps
ds
adc
xor
test
testl
cmpsl
and
insl
stos
add
jg
stc
xor
add
and
fidivrl
push
dec
xchg
sub
adc
out
fildl
daa
inc
mov
or
dec
mov
scas
sbb
add
mov
xchg
repz
add
add
dec
imul
sbb
rorl
sbb
sbb
aam
addr16
xchg
push
std
fs
gs
imul
mov
cld
adc
pop
lret
pop
fcomps
add
mov
sub
fmull
dec
out
out
mov
and
or
xor
xor
or
les
sbb
jae
push
add
add
mov
ret
pushf
xor
outsb
push
jmp
adc
roll
popa
shll
mov
addr16
xorb
pop
jnp
shll
jb
mov
xor
movsb
xor
popf
repnz
mov
mov
push
mov
stos
lea
xchg
dec
dec
fdiv
dec
mov
xchg
icebp
mov
movl
addr16
fidivs
data16
adc
push
mov
mov
jno
mov
push
xor
jge
adc
out
push
std
fbstp
cwtl
mov
fisubrl
in
bound
out
out
shr
shll
cmp
mov
mov
enter
push
sarb
xchg
inc
loopne
inc
test
sbb
stos
mov
sbb
add
pusha
lods
xchg
mov
sahf
pusha
add
insl
lahf
sub
ret
sti
and
jnp
and
fmuls
jb
dec
loop
sbb
push
mov
idivb
cmp
jns
sbb
int3
int
add
adc
adc
cmp
add
dec
idivl
xor
sti
lods
outsl
xchg
jnp
shlb
pop
push
push
cmpb
stos
pop
ret
adc
sbb
adc
psrlw
mov
inc
dec
ljmp
jecxz
and
push
jmp
xchg
and
inc
push
scas
rorl
inc
test
lcall
mov
or
inc
outsl
pop
pop
in
aad
xchg
pop
sti
in
fs
adc
or
mov
js
pop
add
and
dec
fwait
dec
push
in
inc
push
icebp
or
scas
push
dec
mov
mov
or
dec
sahf
aam
xchg
and
add
jo
test
add
das
xchg
xor
inc
ret
test
pop
pop
loope
std
repz
sub
pop
cmp
adc
pop
outsl
aam
mov
adc
fbstp
loope
xor
xor
xchg
xchg
push
push
mov
pusha
enter
jge
leave
or
out
fistps
mov
aad
roll
out
js
mov
xchg
xchg
xchg
mov
cmpsb
xchg
lcall
mov
mov
cmpsl
pop
inc
mov
mov
push
inc
out
and
lret
sub
mov
dec
push
lods
les
push
push
push
xor
sbb
out
sbb
adc
test
iret
inc
sbb
xchg
cmc
mov
aaa
adc
clc
aaa
jle
nop
sti
adc
dec
xchg
rcl
or
push
xchg
outsb
inc
shlb
xchg
fidivrl
bound
sub
jl
in
imul
sarb
jecxz
jge
xor
popf
dec
imul
lock
das
and
xor
packssdw
scas
fldl
jp
iret
xchg
aad
les
int
les
shll
and
das
mov
hlt
add
mov
inc
cli
leave
pop
and
adc
loop
lea
mov
sarl
in
jae
dec
xor
cld
cwtl
xor
jno
cmpsl
lret
jle
lret
and
xchg
push
xor
ss
int
les
xlat
inc
push
mov
mov
sti
cld
inc
aas
push
repz
sbb
shll
cmp
lret
and
and
sbb
lock
pop
push
cli
mov
ret
fisubrs
leave
ljmp
sbb
fbld
test
pop
mov
push
jmp
sti
fs
idiv
daa
cmp
dec
adc
insl
xchg
pop
push
adc
pushf
adc
xor
sbb
popf
adc
sbb
stc
pop
mov
sbb
mov
mov
jl
ret
sbb
push
jno
pop
xlat
cmp
jnp
and
or
mov
dec
mov
mov
xchg
xchg
mov
pop
dec
outsb
xor
scas
ss
push
lds
inc
gs
popa
jo
push
mov
pop
jno
movsb
ret
insl
arpl
mov
iret
mov
cmp
getsec
and
or
movsb
hlt
inc
lret
and
cmp
neg
and
cli
fisubrs
cs
fs
aas
stos
out
enter
ds
and
xchg
adc
push
inc
inc
data16
and
and
pop
sarl
lock
lods
sub
test
stos
popf
xor
hlt
out
pop
xchg
pop
sahf
adc
fildll
repz
pop
jge
xlat
aad
mov
testl
jge
clc
neg
incl
inc
dec
addr16
pop
cmpsl
in
repnz
sub
push
mov
cmp
daa
aam
cmp
outsl
push
imul
mov
jns
xor
push
push
out
out
mov
roll
sbb
xor
mov
jmp
das
xor
add
inc
mov
pop
xor
in
mov
sahf
mov
shrl
and
push
stos
roll
cmpsl
popa
loope
mov
leave
sti
or
sub
inc
jo
clc
dec
stc
sti
insl
inc
xor
and
jnp
imul
outsl
fldl
push
lret
cld
stc
orb
popa
mov
xchg
arpl
es
sub
addw
push
pushf
push
jnp
lods
nop
or
dec
mov
mov
dec
xor
test
int3
test
testb
test
popf
fisttpl
ret
mov
movsb
aas
mov
mov
dec
sbb
std
ret
mov
xchg
and
fcmovu
mov
adc
scas
mov
dec
test
fsub
mov
jg
loopne
push
loopne
xor
mov
lcall
dec
sub
std
adc
mov
pop
fnstenv
cmpsl
jb
xorl
std
pop
cmpsb
cmp
loop
fmuls
sbb
nop
cmpsb
arpl
add
movsb
vmread
sub
ret
jae
sub
pusha
add
mov
pop
push
or
dec
fnstenv
shlb
jge
or
pop
or
stos
scas
mov
enter
ljmp
add
flds
mov
or
cmp
stos
mov
call
ret
je
xchg
ss
jmp
mov
add
test
sbb
mov
leave
dec
dec
mov
addl
or
and
jbe
lock
outsb
push
add
aas
push
cmpsl
out
xchg
andl
rcrb
insb
jne
aaa
cmp
test
xor
jae
je
fcomp
lods
dec
mov
sbb
mov
filds
jns
call
pop
stos
dec
mov
pop
pushf
aas
jno
add
xchg
cmp
push
or
scas
push
xchg
fcmovu
inc
ljmp
popa
jmp
pop
je
mov
notl
movsl
dec
cmc
cwtl
mov
xor
addl
xor
cmp
dec
adc
icebp
inc
or
shr
dec
or
lock
ret
xor
pop
xchg
push
test
dec
pop
push
test
into
fstl
test
cmpsb
jmp
mov
shrb
stos
pusha
jecxz
sti
jecxz
aam
push
ljmp
aad
leave
push
jne
dec
cmp
pop
in
aas
gs
xchg
xchg
popa
fadds
cmp
jl
cmp
inc
sbb
push
je
jno
inc
pop
cmp
out
sti
dec
lcall
sub
sbb
ss
les
cmp
push
sti
fs
or
sub
js
or
add
or
sahf
in
add
mov
mov
call
leave
jmp
xchg
inc
mov
in
aam
icebp
add
push
pop
outsl
shrb
or
dec
cmpsb
push
scas
nop
out
dec
push
ja
xchg
adcl
outsb
adcl
mov
add
inc
ds
jmp
mov
inc
inc
sub
inc
sbb
lahf
mov
nop
jecxz
dec
mov
and
push
dec
test
loopne
add
xor
and
xor
inc
shlb
push
aam
add
loop
mov
inc
xor
int
or
mov
sub
pop
lock
negb
xchg
cmp
mov
mov
leave
adc
mov
xchg
fimull
inc
mov
pop
dec
cmp
push
jl
sub
xchg
cltd
cwtl
jp
ret
andl
mov
loopne
mov
das
fs
mov
iret
out
outsl
cwtl
adc
push
lcall
rol
out
mov
cltd
cmp
je
cmpsl
or
flds
ljmp
mov
or
js
insl
xlat
shl
es
mov
mov
xchg
repz
mov
mov
popf
mov
nop
scas
cmp
loope
jecxz
mov
rcr
and
jns
adc
shll
jns
fs
les
and
rolb
inc
xor
or
mov
or
cmp
test
ret
decl
add
xchg
gs
mov
pop
inc
out
cmp
dec
sub
mov
cmp
test
xlat
mov
popf
int3
imul
or
fstpt
movsb
adc
clc
movl
lret
jecxz
inc
lock
ficoml
mov
push
cmpsb
mov
xor
icebp
mov
add
out
pop
cwtl
cmpsb
insl
lret
dec
popf
into
std
stos
mov
and
nop
out
in
cmp
fstpt
mov
dec
push
pop
xor
inc
jno
pop
dec
gs
xor
in
scas
lea
std
inc
xor
sub
mov
ret
jne
jle
push
xor
cmp
les
add
jle
sti
jae
mulb
jl
sub
in
daa
cmp
jge
sbb
in
push
fsts
lods
lcall
cmp
decl
shlb
xor
hlt
stos
xchg
mov
int
push
jle
fucomi
jnp
add
leave
pop
das
leave
fs
jmp
push
xlat
fcompl
pushl
add
xor
fiadds
fwait
cmc
pop
jg
aas
mov
push
add
int3
xlat
xor
notb
mov
out
mulb
fmul
clc
loope
add
data16
mov
in
add
mov
fnstenv
push
push
sub
pusha
xchg
hlt
jns
test
test
mov
mov
or
add
mov
xchg
outsl
or
mov
pop
jmp
mov
sub
into
rcrb
sti
sbb
or
xor
roll
lret
pop
addr16
decb
mov
test
nop
aam
clc
mov
data16
cmp
leave
jl
fwait
inc
outsb
xchg
pop
jae
pop
cmp
xor
dec
in
loop
test
lods
cmp
ljmp
cmc
push
jne
mov
adc
sbb
andb
decb
jb
dec
sbb
inc
cld
addr16
pop
cwtl
jo
aas
shll
cld
xchg
mov
mov
jns
push
or
rolb
cmc
mov
popf
stos
push
sub
add
lret
stc
jbe
ljmp
outsl
jbe
icebp
fcmove
shlb
inc
sbb
shrl
std
int
or
or
movsl
ljmp
loopne
cwtl
es
cltd
les
jge
ljmp
mov
or
inc
jmp
mov
pop
xchg
outsl
dec
push
repz
xor
lret
jb
and
push
mov
cmp
loopne
cli
pop
pop
repnz
push
xor
pusha
push
clc
ljmp
lds
mov
insl
fsubrl
fbld
push
mov
push
out
mov
pop
repnz
shll
dec
lock
lret
mov
dec
loop
and
sti
xor
loope
pop
cld
test
pusha
add
into
and
inc
aad
push
push
pop
inc
sub
int3
mov
outsb
inc
or
test
rcr
or
insb
fdiv
stc
jge
jae
loop
sbb
jp
frstpm(287
push
cli
andl
xchg
and
mov
int3
in
pop
xor
lock
aas
repz
std
xorb
popf
and
pushf
and
fldt
sti
imul
sbbl
mov
cmp
mov
jp
ret
or
notb
je
sub
loopne
lods
in
int
mov
test
fiaddl
repnz
adc
mov
pop
loopne
je
mov
add
out
shll
sbb
and
add
inc
pop
mov
pop
jno
or
or
call
add
jp
sub
pop
mov
pop
sbb
or
sbb
inc
aaa
adc
xchg
aas
in
iret
mov
push
jb
pop
dec
loop
cmp
mov
mov
movsb
stos
out
pop
push
fisubl
lahf
int
xlat
jne
add
insb
into
ret
jno
out
cmp
loop
fs
cmpb
xor
mov
and
inc
je
xchg
fistps
mov
clc
mov
push
pop
sbb
sarb
xchg
insl
stos
dec
mov
add
out
sbb
mov
dec
mov
push
ja
ja
adc
jnp
push
jg
pop
mov
jne
adc
jns
xor
outsl
fsts
enter
stc
inc
lods
out
ret
cmpsl
repz
fnsave
add
add
add
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
nop
nop
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
fadds
add
sbb
add
add
push
add
add
add
add
addb
add
js
add
mov
add
add
add
addb
add
lock
addb
add
sbb
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
cmp
add
or
add
xor
add
pop
add
xor
add
addb
xor
add
test
add
rolb
add
clc
add
xor
add
and
xor
add
dec
add
xor
add
jo
add
cwtl
add
sub
add
rolb
out
add
add
add
sub
add
adc
add
cmp
add
pusha
add
add
mov
add
mov
add
add
add
or
add
add
pop
push
add
mov
add
or
add
add
or
add
or
add
xchg
add
mov
add
or
add
cltd
add
mov
add
or
add
add
add
fwait
add
mov
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
cmp
add
or
add
lods
add
call
add
add
add
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
add
add
add
add
add
add
add
or
add
add
add
add
add
add
mov
add
mov
add
or
add
add
adc
add
mov
add
or
add
roll
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
rolb
add
or
add
add
add
loopne
add
or
add
or
add
add
add
add
mov
add
or
add
add
shr
add
mov
add
or
add
lock
mov
add
or
add
daa
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
mov
add
or
add
add
mov
add
call
add
add
add
add
add
jo
add
call
add
add
add
add
dec
add
rolb
add
or
add
add
add
call
add
add
add
add
add
add
or
add
push
add
pop
movb
add
add
add
add
add
add
push
add
add
add
or
add
add
aam
add
jo
add
adc
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
bound
and
dec
add
je
ja
outsl
add
imul
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
popa
add
and
inc
add
popa
add
add
add
outsb
add
outsl
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jne
je
and
push
add
outsl
add
add
add
ja
outsl
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
outsl
add
add
data16
add
and
inc
add
outsb
add
add
and
push
add
outsl
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
imul
sub
add
js
add
add
add
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jns
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
leave
add
cwtl
leave
add
loope
add
mov
add
in
leave
add
mov
add
add
leave
add
leave
add
add
add
int3
leave
add
adc
add
push
lret
cs
ds
dec
lret
pop
lret
add
add
push
add
add
add
add
add
mov
add
add
add
cmpsb
lret
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
jb
imul
add
outsb
imul
insb
add
outsb
je
jne
je
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
outsl
arpl
imul
fs
je
add
push
gs
imul
push
add
dec
outsb
je
jb
gs
outsl
outsb
imul
outsb
gs
jb
jae
imul
outsl
data16
jne
dec
outsl
popa
fs
gs
popa
add
