push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
pushl
shlb
pop
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
pop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
jmp
ret
std
xor
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jbe
mov
popf
dec
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
incl
add
add
sub
add
pop
and
add
and
add
add
and
add
add
xchg
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
add
add
and
add
and
add
add
les
add
inc
and
add
add
xchg
and
add
add
ljmp
add
add
mov
add
add
add
cmp
add
and
add
add
or
add
add
add
add
add
add
adc
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
andb
movsb
and
add
and
add
add
pop
and
add
and
add
add
and
add
add
xchg
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
add
add
and
add
and
add
add
les
add
inc
and
add
add
xchg
and
add
add
ljmp
add
add
mov
add
add
add
cmp
add
and
add
add
or
add
add
add
add
add
add
add
je
jb
jbe
je
push
jb
imul
push
add
insb
jae
jb
outsb
inc
add
rolb
dec
gs
jo
gs
jb
jns
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
outsb
je
outsl
insb
add
add
je
jb
jbe
push
jns
gs
add
add
imul
jb
je
arpl
add
dec
add
popa
insb
dec
outsl
arpl
cmp
fs
imul
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
push
push
je
imul
inc
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
popa
jo
jb
add
out
inc
gs
imul
bound
gs
add
jge
dec
jo
outsb
dec
jne
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
gs
inc
imul
insb
outsl
jae
dec
popa
outsb
fs
add
inc
jne
jb
outsb
je
push
add
data16
je
je
dec
popa
outsb
fs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
and
inc
js
jb
arpl
outsl
outsb
inc
add
mov
push
push
gs
popa
addr16
outsl
js
add
lods
add
gs
insb
inc
bound
je
add
insb
imul
outsl
outsb
add
add
addr16
imul
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
sbb
inc
jb
addr16
jne
jb
inc
imul
inc
jb
addr16
arpl
jo
inc
imul
dec
inc
gs
popa
insb
insb
outsl
arpl
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
mov
push
dec
inc
gs
gs
imul
push
dec
inc
jb
add
mov
inc
push
dec
inc
dec
dec
xor
cs
insb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
inc
gs
jbe
imul
imul
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
inc
ljmp
push
fstps
mov
mov
push
or
cmpsl
pop
mov
lods
xchg
insl
cmp
xchg
cwtl
jg
out
scas
push
inc
bound
packsswb
xlat
pop
pop
aas
std
push
nop
mov
mov
sub
jl
ljmp
shrl
ja
adc
in
cmp
sahf
mov
popa
xchg
xlat
sahf
lock
aaa
xchg
xor
and
sbb
push
mov
rorl
into
and
mov
pop
mov
xlat
dec
sarl
pop
les
scas
add
dec
jo
rcrb
push
outsb
xor
push
mov
cmpsl
sub
rcr
outsb
repnz
xor
dec
in
call
cli
das
les
sbb
jge
roll
imul
ss
imull
or
int
scas
sbb
loopne
mov
dec
sbb
dec
je
pop
or
cld
adc
std
clc
or
pushf
add
push
out
push
gs
in
enter
add
xlat
dec
movb
shrl
sub
enter
mov
xchg
sbb
mov
xor
pop
shlb
sbb
pop
adc
aaa
xchg
in
cmp
mov
pusha
mov
pop
inc
add
add
in
mov
xor
mov
lea
mov
lret
jle
xor
and
xchg
inc
xor
pop
sbb
std
lcall
mov
fimull
andb
mov
lods
jns
mov
lods
aad
in
mov
pusha
dec
push
repnz
sub
xlat
aas
pop
pushf
push
addb
icebp
test
les
and
sti
jns
inc
xlat
out
jbe
push
adc
inc
out
dec
and
outsl
fadd
int3
dec
rorl
or
push
out
or
cmpsb
cmp
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
addl
add
cmpsb
add
test
add
mov
or
add
roll
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
lcall
jg
add
jnp
stos
lods
stos
add
test
mov
mov
mov
ret
leave
lret
int
int3
rcl
in
rcl
shl
rcl
shl
int
int3
hlt
enter
leave
out
mov
in
mov
mov
lods
lods
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
mov
leave
leave
lret
rcl
cld
fcom
std
fcomp
xlat
fcom
fdivr
aad
rcl
iret
dec
int
aam
rcl
iret
inc
ret
std
mov
mov
scas
iret
movsb
mov
mov
cs
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
scas
sbb
mov
jnp
mov
mov
dec
lret
rcl
sar
aam
aad
fcomp
fcom
call
aam
dec
int
dec
into
int3
call
aad
dec
int3
int3
mov
mov
mov
std
cmpsl
test
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
push
pop
add
inc
add
push
add
or
inc
or
sbb
push
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
into
call
rcl
call
fcomp
fcomp
call
aam
dec
int
dec
lret
leave
dec
int
inc
mov
mov
mov
cmpsl
cmpsb
test
mov
fwait
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
popa
or
push
bound
fs
push
sbb
sub
sbb
ss
cmp
sub
and
adc
pop
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
sarb
mov
sar
aam
call
aad
call
rcl
inc
enter
inc
ret
mov
mov
ljmp
mov
sahf
xchg
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jge
jle
jle
jge
jo
jno
bound
mov
cmp
inc
mov
outsl
jo
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
leave
dec
leave
leave
dec
leave
inc
mov
mov
scas
scas
scas
jmp
fwait
call
xchg
xchg
xchg
xchg
xchg
lcall
lahf
ds
push
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
pusha
nop
mov
incb
jp
jnp
jp
outsl
outsb
outsb
out
pushw
data16
jne
jge
jle
js
js
gs
inc
cmp
sbb
sbb
adc
or
lods
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsb
lcall
nop
xchg
incl
test
xchg
xchg
xchg
mov
mov
xchg
mov
jp
jp
cs
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpl
mov
mov
mov
addb
decb
mov
jge
jge
jo
jo
je
jae
jg
jge
addl
xchg
push
cmp
ss
cmp
mov
test
icebp
stos
lods
stos
sti
stos
lods
stos
lods
lods
lods
test
mov
cltd
xchg
xchg
xchg
incl
jge
jp
jp
jp
jns
mov
cwtl
movsl
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
pop
pop
push
push
femms
xor
inc
dec
insl
insl
imul
test
lcall
out
cltd
lcall
mov
mov
xchg
mov
lea
lcall
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
cmpsl
scas
call
fwait
xchg
cltd
incl
xchg
decb
xchg
xchg
sahf
sahf
popf
std
movsb
movsb
movsb
stc
mov
xchg
xchg
in
xchg
nop
in
xchg
push
jne
cmovp
add
inc
or
or
daa
sub
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
nop
decb
xchg
lcall
cmpsb
cmpsl
ljmp
lods
pushl
lahf
mov
mov
mov
mov
mov
ljmp
mov
add
pop
adc
mov
jmp
sahf
cwtl
lcall
mov
nop
xchg
call
xchg
xchg
popf
sahf
popf
movsb
movsl
movsb
stos
stos
test
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
popaw
popa
arpl
jae
mov
lahf
test
mov
nop
xchg
in
nop
xchg
testl
lea
jmp
mov
mov
pop
mov
mov
ss
mov
js
mov
cmpsb
mov
mov
lods
lods
mov
movsl
add
mov
add
pop
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
xchg
xchg
cltd
fwait
cltd
fwait
pushf
pushf
mov
movsb
movsb
std
movsb
movsl
mov
out
xchg
xchg
mov
cwtl
aad
cwtl
cltd
in
xchg
cwtl
out
mov
nop
stc
xchg
test
std
xchg
jae
lcall
jmp
inc
jge
mov
jns
mov
jb
mov
insl
ljmp
adc
lods
or
or
mov
jle
mov
mov
stos
pushf
movsb
movsl
movsb
and
add
add
mov
add
pusha
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
popf
sahf
lcall
sahf
sahf
call
xchg
xchg
decl
xchg
xchg
call
cltd
cld
cltd
cwtl
popf
stc
mov
xchg
popf
cld
popf
mov
xchg
imul
xchg
dec
js
lcall
pushf
push
push
jmp
adc
test
ljmpw
adc
lods
adc
mov
push
mov
push
mov
insb
mov
lcall
lods
scas
lods
scas
movsl
mov
movsb
add
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
lahf
sahf
jmp
mov
mov
decl
mov
decl
js
cltd
jno
cltd
fs
xchg
push
jnp
xchg
cmp
call
sbb
pop
decl
add
pop
lcall
push
pop
jmp
sbb
mov
insl
pushl
sbb
je
mov
and
shlb
mov
xchg
lods
mov
scas
scas
mov
sahf
mov
movsb
add
pop
pop
adc
lods
mov
mov
cltd
sahf
lcall
movsb
mov
ljmp
test
cmpsl
lcall
jle
decl
jo
mov
imul
sub
mov
pusha
incl
or
incl
add
mov
push
decl
add
xchg
add
lcall
jmp
and
mov
jne
mov
sub
sub
ret
inc
sub
cmp
enter
enter
mov
mov
lret
movsb
dec
mov
mov
add
add
add
stos
mov
push
adc
test
mov
mov
mov
test
stos
lods
lods
ljmp
mov
ljmp
mov
mov
mov
push
incl
or
test
push
incl
add
mov
push
decl
add
xchg
add
cltd
add
mov
add
scas
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
cmpsl
ljmp
lahf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
mov
mov
arpl
xchg
push
decl
adc
mov
push
incl
add
push
decl
pop
call
add
mov
add
stos
add
mov
jb
ret
cmp
int
mov
roll
call
inc
mov
dec
xchg
call
dec
xchg
fisttpl
fisttpl
ficoml
call
xchg
std
mov
mov
mov
mov
mov
add
add
add
dec
inc
adc
jl
sahf
mov
jmp
test
pushl
mov
pushl
mov
mov
scas
mov
movsb
xchg
decl
sbb
sbb
mov
decl
or
add
nop
add
xchg
add
popf
add
mov
add
test
pop
gs
and
nop
call
push
cltd
call
push
cltd
fistl
fistl
jmp
pop
sahf
ficomps
jmp
pop
lahf
jmp
pop
mov
fadds
mov
mov
jne
mov
mov
add
add
add
inc
inc
adc
ja
mov
mov
lahf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jbe
nop
pop
call
and
xchg
and
xchg
sbb
nop
or
call
add
cltd
add
mov
add
lods
add
mov
data16
mov
xor
call
pop
fwait
fisubl
fisubs
fbld
jmp
fs
in
cmpsb
call
push
test
jmp
test
mov
cmpsl
cmpsl
mov
mov
add
add
add
xchg
xchg
xchg
add
aas
adc
jb
fwait
xchg
cwtl
call
sahf
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
lcall
pop
call
add
lcall
jmp
add
mov
pushw
adc
roll
fsubl
jmp
jo
jmp
jo
jmp
jb
ljmp
in
je
out
je
in
jbe
out
jae
jmp
xchg
mov
cmpsb
cmpsb
lcall
sahf
add
jle
cmp
adc
insl
js
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
movsl
scas
lcall
outsb
lcall
cmp
sahf
xor
lcall
call
add
movsb
add
add
mov
arpl
mov
data16
mov
sbb
fistl
jecxz
mov
call
jge
in
jg
out
cmpb
lock
push
cmpl
jmp
mov
mov
cmpsl
popf
pushf
popf
daa
sahf
sahf
mov
add
add
add
pop
add
aaa
cmp
pop
pop
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarb
rol
pushl
insl
mov
fwait
cmp
movsl
inc
jge
mov
aaa
ja
lcall
lcall
pop
ljmp
add
mov
fs
mov
add
shll
cmp
movsl
jmp
mov
push
sar
xchg
ret
nop
ret
xchg
nop
push
xchg
mov
in
nop
sar
mov
inc
ret
lods
stos
stos
mov
pushf
pushf
xor
sahf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
mov
ljmp
inc
jp
cmpsb
dec
jg
stos
dec
test
movsl
xor
popa
lcall
add
add
lods
add
mov
mov
add
leave
add
call
xor
out
xchg
push
cltd
enter
push
cltd
lcall
stc
pushf
lret
cli
popf
int3
cld
lahf
int
cli
cwtl
lret
xchg
sar
mov
dec
mov
rcrb
nop
add
add
add
xor
outsb
push
dec
dec
jecxz
pusha
call
mov
mov
mov
sar
ret
ret
inc
enter
mov
lahf
lcall
push
xchg
scas
dec
mov
movsb
sub
cltd
pop
pop
lcall
add
stos
add
mov
mov
add
movl
je
loopne
xchg
in
lea
push
movsb
int3
push
movsl
into
push
test
sti
test
cli
cmpsb
iret
cli
test
iret
stos
sar
cld
test
push
lahf
jmp
mov
dec
leave
int3
std
mov
mov
sahf
mov
xchg
add
lcall
xor
add
sub
or
inc
bound
pop
xlat
je
jb
mov
rol
rol
mov
ret
ret
inc
ret
ret
inc
enter
ret
pushl
push
test
scas
push
mov
scas
dec
xchg
sahf
sbb
popf
add
mov
add
mov
arpl
mov
add
int3
add
add
fists
jl
out
pop
cmpsl
push
sahf
leave
sti
lods
sar
cli
scas
cli
mov
sti
scas
sar
cld
mov
mov
cld
mov
std
mov
pushl
sar
mulb
call
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
outsl
jo
mov
fsubr
aad
test
int3
into
dec
lret
lret
lret
lret
lret
mov
scas
jmp
push
mov
lods
cmp
lcall
add
stos
add
mov
fs
mov
add
roll
outsl
call
add
add
call
jb
sti
lods
aad
std
mov
cld
mov
fdivr
mov
xlat
cld
mov
fcos
inc
mov
int
out
call
leave
int3
mov
sahf
mov
or
add
add
xor
add
add
add
or
enter
loop
out
call
test
jecxz
leave
fsub
fcmovu
fcomp
fsqrt
aam
std
int
iret
mov
push
test
stos
sub
mov
add
mov
arpl
mov
add
leave
add
aam
jae
fildl
ja
in
js
out
xor
sti
mov
loope
inc
loopne
inc
loopne
std
std
fdivrp
dec
fdivrp
std
leave
dec
loopne
inc
std
leave
loope
sti
mov
lret
lret
mov
mov
xchg
adc
add
add
incb
std
std
add
std
incl
repnz
testb
out
jmp
in
out
in
sub
out
in
dec
jmp
ljmp
in
in
fsubr
ret
mov
xchg
test
js
mov
add
test
add
mov
add
int3
add
fadds
jb
filds
ja
ljmp
sti
mov
jecxz
dec
loop
std
int3
in
dec
in
dec
jecxz
std
int3
loope
dec
loopne
std
shl
shl
call
in
call
in
cli
ret
fcos
out
mov
xlat
inc
ret
ret
cmpsb
test
xchg
xchg
xchg
sbb
fwait
lcall
add
add
incb
std
std
add
stc
testb
repnz
repz
out
icebp
out
pop
in
icebp
out
cmp
out
out
pop
fsubp
loop
mov
xchg
sti
lahf
and
pop
jmp
add
mov
fs
add
movl
jno
flds
jbe
in
jp
jmp
jl
negl
sti
mov
cld
shl
cld
iret
in
shr
std
shl
shl
call
std
jmp
std
fucompp
std
iret
loopne
repnz
jmp
aad
dec
lret
lret
repz
test
xchg
xchg
xchg
and
xchg
xchg
add
std
sti
add
cld
stc
add
cli
clc
add
cmc
repz
aam
sarl
lcall
jmp
add
mov
add
leave
add
add
faddl
ja
call
sbb
stc
jbe
cli
ret
loopne
xlat
ljmp
fucomp
fucomp
fucomp
std
fucomip
fucomip
fsubrp
std
shl
push
ret
aad
out
iret
rcl
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loop
add
leave
lds
lods
jnp
repnz
and
sahf
add
add
mov
mov
add
into
add
aad
jae
loopne
jne
call
sub
shl
fucomip
std
fucomp
std
fldpi
std
fsub
cld
aam
cld
aam
cld
shl
cld
iret
loope
clc
into
test
out
mov
fcos
sti
mov
mov
lcall
add
add
add
aad
mov
mov
mov
lcall
add
mov
arpl
mov
add
iret
add
add
add
call
aaa
xchg
cli
cwtl
enter
cli
lret
loop
cld
test
aad
repz
iret
push
mov
int3
call
mov
sar
ljmp
imul
fsub
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
int3
int
mov
sarl
sahf
xor
jmp
add
mov
gs
mov
add
int3
or
rorl
jbe
js
loope
cmp
dec
xchg
ljmp
call
scas
leave
std
loope
cld
fbstp
neg
mov
leave
ljmp
iret
into
xlat
shl
fcmovb
call
out
test
out
lock
jmp
lret
lods
lods
stos
adc
cmpsl
cmpsl
cmpsl
add
ret
mov
sahf
stos
aam
dec
cmp
sbb
test
insb
scas
and
mov
ja
mov
dec
test
ret
stc
lret
arpl
hlt
rorl
out
mov
mov
enter
lret
rcl
lret
mov
into
shlb
fcom
jg
jb
loopne
gs
in
out
jmp
xor
div
cmc
and
icebp
lock
fcmovnu
or
mov
int3
add
add
add
rolb
mov
les
push
lock
xchg
ljmp
mov
sarb
mov
les
ret
ret
mov
leave
int3
jp
int3
iret
addr16
iret
rclb
rcl
dec
fcom
inc
aam
aam
daa
fcomp
fcompl
fcmovu
ficoms
fsub
jecxz
loopne
in
call
icebp
out
add
cli
testl
std
add
std
incb
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
ret
push
ret
inc
ret
xor
int
daa
lret
rcl
and
aad
sbb
aam
adc
rorl
rcl
aam
rcr
xlat
add
fcmovnu
add
add
in
add
jmp
add
xlat
add
std
incb
mov
mov
add
ret
ret
les
mov
mov
mov
push
rol
or
enter
mov
add
aam
add
xlat
aam
rcl
add
aad
aad
add
fsub
add
flds
fsubp
loope
fstp
filds
jecxz
call
add
std
add
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
mov
mov
mov
test
stos
dec
test
xchg
xchg
pop
add
add
add
add
add
add
scas
mov
adc
mov
aam
iret
into
jmp
aam
cmc
rcl
aam
iret
into
into
cli
int
int3
stc
int3
lret
lret
mov
mov
fwait
xchg
xchg
xchg
dec
aas
ds
and
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
leave
cld
iret
iret
iret
aad
call
xlat
xlat
call
rcl
dec
int
dec
lret
mov
mov
stos
icebp
xchg
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
je
je
fs
dec
inc
dec
cmp
sub
sub
aaa
xor
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
lret
rcl
sar
rcl
sar
lret
inc
mov
mov
ljmp
sahf
lahf
xchg
cwtl
cwtl
jmp
jno
xchg
adc
add
xor
add
add
add
add
cmpl
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
push
insl
insl
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
mov
ret
mov
vshufps
mov
mov
cmpsl
test
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
cltd
lcall
xchg
cltd
fcoml
addl
jmp
jp
sarb
jnp
jp
jp
jb
je
push
push
push
cmp
aaa
popf
pushf
pushf
mov
scas
scas
rep
scas
lods
sti
scas
lods
lods
std
test
test
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
movsb
movsb
cltd
je
jae
adc
adc
add
add
add
add
outsl
insl
insl
pop
xchg
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
jo
outsl
orl
cwtl
repnz
xchg
xchg
std
mov
call
sahf
lahf
ljmp
test
std
mov
scas
mov
xlat
movsl
mov
addl
add
add
pusha
popa
pop
or
scas
mov
cmpsb
mov
mov
mov
nop
call
sahf
mov
negl
jg
stos
push
push
push
jo
pop
pop
outsl
insb
outsl
outsl
xchg
subb
mov
std
xchg
mov
ljmp
jg
pushl
pop
mov
jnp
mov
lods
lods
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
nop
call
xchg
xchg
lcall
cwtl
lcall
popf
pushf
cli
xchg
xchg
xchg
jmp
xchg
mov
nop
orb
xchg
imul
sahf
dec
jl
mov
aaa
jbe
scas
daa
jb
mov
outsl
ljmp
sbb
pop
mov
mov
scas
scas
jle
mov
add
add
add
popa
pop
pop
or
mov
lcall
popf
sahf
jmp
mov
xchg
decl
addl
xchg
jb
cld
xchg
pop
cmp
dec
js
cmp
nop
sub
xchg
sbb
adc
mov
push
imul
mov
outsb
pushl
pop
jno
mov
pop
xchg
mov
lods
scas
xchg
lahf
lahf
popf
adc
add
add
pop
pop
pop
or
lods
mov
stos
mov
mov
ljmp
test
cltd
decl
imul
sub
pop
pop
incl
or
mov
decl
add
fwait
add
or
je
mov
das
jl
ret
jg,pn
xor
dec
pop
xchg
inc
test
divl
test
sbb
add
add
pop
pop
pusha
or
movsb
stos
in
mov
test
mov
scas
pushl
mov
jmp
jno
mov
pop
decl
or
xchg
decl
add
xchg
add
mov
add
mov
insb
inc
cmp
iret
inc
mov
roll
xlat
inc
xchg
fmuls
call
bound
stc
mov
mov
movsl
movsb
mov
add
add
add
popa
or
popf
mov
ljmp
mov
mov
mov
ljmp
push
jl
sbb
decl
or
mov
push
call
add
cmpsl
add
lods
add
mov
dec
nop
fstps
ficompl
jmp
pop
mov
jmp
pop
mov
dec
cmpsl
mov
ret
cmpsl
xor
addb
add
add
dec
pop
jge
jp
fwait
xchg
cwtl
jecxz
lahf
mov
pushl
mov
mov
jmp
sub
imul
and
xchg
push
pop
call
add
add
scas
add
or
int3
xor
jmp
outsb
test
out
stos
jmp
jb
in
jb
call
cmpsl
mov
shrl
cmpl
dec
dec
dec
pop
insl
insl
push
mov
xchg
pushl
mov
mov
mov
je
lcall
cmp
sahf
sub
call
add
movsl
add
stos
add
mov
inc
or
call
inc
xchg
jmp
js
ljmp
push
test
hlt
mov
mov
push
fwait
fwait
lcall
sub
push
push
push
dec
pop
pushw
mov
mov
mov
ret
mov
sahf
jmp
inc
cmp
sub
cltd
or
add
test
add
add
lret
adc
mov
push
xchg
ret
push
cwtl
cwtl
push
fwait
enter
lret
cwtl
jmp
stos
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
inc
ret
mov
test
cmpsl
push
mov
lods
dec
cmp
pop
imul
add
pusha
pushl
add
lret
add
and
push
mov
into
stc
test
sar
sti
lods
sar
stos
sar
cli
cmpsb
int3
jmp
mov
dec
mov
stos
jne
popf
pushf
or
add
add
push
dec
push
aaa
jae
je
test
int
out
iret
lret
cmc
lret
lret
enter
enter
mov
ljmp
adc
test
add
rolb
dec
add
fildl
je
ljmp
sti
mov
cld
mov
std
mov
fdivr
sti
mov
xlat
std
mov
jmp
rol
scas
lods
lods
mov
add
add
add
add
or
rcl
dec
loopne
loop
loope
fcmovnu
ffree
fcmovu
aam
out
shlb
test
je
movsb
pop
pusha
pushl
add
enter
aad
je
loop
jp
icebp
push
mov
std
std
dec
dec
loopne
dec
loopne
dec
cld
fdivr
lock
lret
mov
xchg
pushf
sahf
pushf
sbb
add
add
std
std
add
std
std
add
jmp
or
in
in
sbb
jmp
xor
loope
loop
mov
mov
mov
add
pushl
add
into
add
fldl
jbe
call
insl
mov
sti
ret
std
iret
out
call
in
shl
std
shl
call
out
fsubr
std
shl
push
enter
int
stc
mov
mov
add
std
incb
std
incl
cld
std
pop
aam
push
mov
pop
mov
sahf
or
pop
pushl
add
roll
outsl
jmp
add
out
pop
mov
cli
mov
cld
shl
std
fsubr
fsub
std
cld
fsub
cld
shl
push
jmp
iret
xlat
sti
mov
sahf
sahf
das
add
add
int3
int
or
bound
ljmp
add
enter
aad
jb
loop
jns
out
das
xchg
stc
lcall
stc
lret
test
aad
icebp
ret
aam
lock
sar
in
aam
in
shl
jmp
shl
jecxz
fucomp
enter
test
std
incl
aam
push
mov
je
or
mov
imul
pop
jae
int
jge
sub
lcall
mov
out
loop
lret
jmp
fnstsw
lret
sarl
in
fistpl
out
out
jns
rcl
dec
mov
add
add
mov
scas
xchg
mov
ljmp
xchg
fidivrl
jle
rol
lods
mov
mov
les
rol
int
ror
iret
pop
rcl
rorb
fcomp
cmp
loopne
das
in
frstor
jecxz
repnz
in
jmp
fcmovnu
fildl
std
std
add
add
add
std
add
mov
jns
mov
mov
mov
mov
shrb
enter
aam
pop
sarb
or
loope
or
into
int3
add
std
incb
std
incl
lcall
shufps
or
into
int
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
cltd
add
rol
enter
enter
mov
mov
scas
scas
insb
stos
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
enter
sar
aam
aam
rcl
sar
iret
iret
into
std
mov
mov
cmpsl
test
sarl
gs
push
pop
add
add
add
add
add
add
add
add
jae
jae
data16
inc
dec
das
das
das
das
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
into
call
aam
dec
int
inc
enter
mov
lods
lcall
mov
push
add
add
add
add
jae
je
xchg
adc
outsb
jo
bound
mov
push
outsl
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cltd
cltd
lds
jae
es
add
add
add
jae
jae
pushf
xchg
lcall
xchg
clc
xchg
test
addl
push
dec
push
inc
mov
pushf
into
movsb
mov
mov
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorl
cmpsl
test
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
popf
sahf
pushf
cmc
lcall
mov
push
push
imul
jge
mov
xchg
testl
mov
mov
jo
mov
mov
stos
lods
lods
push
stos
lods
stos
add
add
add
scas
test
xchg
xchg
xchg
lcall
lcall
cltd
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
xchg
bound
std
lcall
ljmp
and
mov
insl
pushl
popf
lods
lock
mov
imul
into
add
test
pop
scas
movsl
stos
test
popf
popf
sahf
jmp
movsb
call
jge
lea
xchg
inc
jae
mov
push
lea
pop
call
or
scas
sbb
mov
and
jp
ret
aas
test
mov
mov
subl
jne
push
movsb
pushf
lahf
test
test
cmpsb
pushl
scas
mov
lahf
xchg
decl
or
mov
push
decl
add
mov
adc
shll
int3
aas
mov
iret
inc
mov
aad
call
push
xchg
dec
lcall
movsb
movsb
movsb
push
add
add
push
xchg
xchg
test
mov
scas
pushl
mov
movsb
call
arpl
sbb
mov
pop
call
add
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
cmpsl
call
pushf
mov
mov
mov
cmpsl
test
pop
add
add
popa
popa
bound
pushf
pushf
pushf
cld
mov
scas
mov
mov
scas
lcall
xor
cwtl
and
call
add
add
mov
xor
jmp
jnp
push
jl
push
jle
fistpl
mov
movsb
movsb
movsb
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
sar
mov
jmp
inc
jle
mov
add
ljmp
add
ret
fisttpl
in
lea
cmc
xchg
push
xchg
leave
stc
xchg
enter
inc
mov
movsl
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
mov
xchg
ljmp
sbb
movsl
add
mov
gs
add
aad
js
in
insb
lods
push
test
stc
stos
sar
sti
lods
sar
sti
scas
sar
std
lods
iret
ljmp
fldenv
incl
xor
xor
scas
mov
mov
aam
mov
aad
fnop
rcl
out
lret
leave
lret
xchg
jmp
add
ret
call
add
out
xchg
notl
cld
rcr
std
ret
cld
ret
cld
rcr
icebp
mov
ret
test
jg
add
add
lods
stos
stos
add
in
in
or
call
in
outsb
fcmovu
fisubl
movsb
daa
outsb
ljmp
add
lret
add
fiadds
jbe
lock
std
into
out
dec
in
shl
shl
std
aad
push
enter
int
lods
scas
scas
popa
jg
jg
std
add
std
push
lret
int
sub
lahf
sbb
lods
add
mov
add
jecxz
js
hlt
push
cmpsl
inc
loopne
std
aad
aam
std
shl
std
aad
sti
aam
push
xlat
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
scas
push
gs
mov
push
je
fstpl
jg
jmp
lods
cld
out
mov
aam
call
mov
shl
out
aad
ljmp
scas
ret
les
lcall
rol
or
popf
stos
xchg
dec
and
shll
js
mov
fdivrs
lret
vmovdqu
int
pop
fst
xlat
dec
in
loopne
out
out
out
out
out
sbb
mov
mov
cmp
movsb
lods
arpl
mov
les
les
ret
sbb
bswap
into
int
aam
push
std
std
add
addb
std
add
add
add
rol
incb
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
in
cwtl
pop
mov
lock
mov
popa
xor
sbb
lods
cltd
mov
adc
push
or
push
ljmp
mov
jbe
lds
lret
cmp
push
pop
add
jle
int
and
push
fildl
sbb
jl
out
test
movsl
popa
gs
mov
fisubrs
lea
push
lret
mov
and
mov
repnz
ficoms
subl
sbb
out
pusha
jge
xchg
mov
xor
xchg
mov
nop
add
mov
push
dec
fs
clc
cmpsl
push
movsl
cmpsl
lahf
or
sbb
iret
test
mov
sbb
adc
and
cmp
ds
jno
ljmp
jno
jecxz
and
xor
sbb
dec
pop
lret
pop
mov
jl
or
ret
adc
sahf
js
pushf
js
jbe
in
ss
jg
push
add
add
dec
adc
pusha
inc
imul
pop
and
push
cmp
aad
pop
sub
lahf
pop
adc
aaa
imul
out
cmp
pop
add
lcall
aam
push
pusha
lahf
inc
out
jnp
loop
lea
sarl
xchg
cmp
lods
push
mov
sub
or
fnstcw
mov
pop
into
cmp
jmp
adc
in
sub
cmp
subl
faddl
cltd
adc
mov
xor
add
mov
call
or
push
mov
or
jns
inc
pushf
mov
mov
xlat
adc
push
cmp
jg
or
mov
jns
xlat
ja
outsl
in
jne
fidivrl
outsb
fnstsw
mov
push
pop
add
mov
inc
scas
inc
pop
cmc
fbld
aas
xchg
xor
xchg
pop
sub
addr16
xor
and
dec
xor
add
ss
mov
outsl
push
sub
cmp
lock
xor
adcb
adc
mov
dec
mov
cmp
or
rorb
xor
roll
aaa
sbb
int
push
ljmp
pop
xlat
xchg
jl
es
and
aad
test
mov
dec
lahf
pushf
aaa
cmp
arpl
test
add
cmp
sub
scas
jne
shlb
mov
cltd
stos
mov
mov
push
int3
jno
or
mov
ja
adcl
or
outsb
fwait
das
push
lock
push
sub
and
pop
rolb
mov
pusha
repz
fdivs
rclb
shll
mov
mov
test
cmp
loope
inc
push
adc
dec
rol
jno
dec
ds
sbb
ja
and
mov
mov
subl
icebp
and
out
les
push
lret
adc
inc
inc
test
shr
mov
mov
dec
lret
outsl
xchg
dec
dec
les
sbb
sbb
dec
fisubs
out
loope
jnp
pop
stc
cmp
je
es
jecxz
jg
and
fdivrl
aas
sti
out
push
xchg
and
push
pop
inc
lahf
stc
dec
xor
dec
inc
loope
push
aaa
jmp
jns
scas
add
xchg
mov
adc
mov
leave
and
xchg
lea
mov
sub
mov
int3
jmp
pop
icebp
inc
xchg
sbb
mov
daa
test
aam
push
lahf
hlt
popf
push
inc
sub
jg
sarl
gs
pop
add
cmp
clc
pop
push
and
push
dec
divb
xor
lret
adc
pop
sti
jp
hlt
add
fdivl
pop
out
insb
adc
dec
out
mov
dec
or
xlat
lds
jbe
in
cmp
lods
cmpl
jmp
mov
pop
jae
inc
adc
insl
addr16
ljmp
out
sbb
mov
loope
cmp
pop
cli
data16
ret
xchg
aam
inc
fsubrs
adc
inc
cmp
and
imul
mov
and
mov
and
fcom
ss
sti
add
pop
inc
sub
in
jge,pn
mov
arpl
mov
adc
push
pop
movsl
clc
and
fadds
sarb
push
cmp
sub
fidivl
cltd
int3
jne
or
test
pop
cmp
nop
inc
call
mov
repnz
push
ret
insl
call
aas
ror
xchg
mov
and
or
cs
out
sbb
js
outsl
rclb
sbb
add
stc
popa
inc
insl
push
insb
ds
push
mov
cmp
mov
mov
pop
imulb
sbb
test
loopne
dec
sbb
jno
sub
sbb
es
pop
pusha
cli
jo
fidivrs
mov
insb
push
mov
dec
push
adc
sbb
mov
mov
shlb
mov
and
icebp
mov
jg
push
fs
push
icebp
mov
cwtl
mov
ds
scas
pop
insl
in
cmp
lock
mov
mov
adc
ljmp
sub
jnp
jno
mov
add
or
xchg
adc
addb
fwait
xor
out
roll
cli
xchg
out
fs
rcll
jo
and
xchg
je
mov
cmp
xchg
xchg
push
dec
call
cmp
dec
sub
mov
insb
and
xchg
flds
xor
cmp
push
clc
mov
jp
cmp
pusha
mov
jno
mov
clc
jp
pop
cmc
es
push
lods
int
jnp
out
inc
ficompl
scas
mov
jno
lods
inc
xor
jg
les
bound
test
mov
mov
jge
movsb
xor
sbb
loope
sub
clc
sub
jae
adc
inc
mov
and
insb
lcall
jno
inc
pop
push
in
push
pusha
insb
lret
jae
dec
das
xor
jp
dec
mov
mov
pop
sbb
cld
sahf
dec
push
jmp
cmpsl
sbbl
enter
aad
roll
sbb
dec
daa
pop
out
pop
insl
addr16
sahf
jns
or
icebp
int3
xchg
sub
adc
push
gs
jb
push
ljmp
xchg
cmp
pop
sbb
ret
fwait
mov
shl
mov
pop
icebp
xor
imul
xchg
push
xchg
cmpsl
xchg
sub
out
mov
sub
les
dec
shrb
pop
loop
lea
add
loop
lock
xchg
ds
cmpsl
repnz
loopne
mov
jle
mov
rol
adc
rorl
aad
pusha
mov
sar
mov
xor
cmp
scas
xchg
add
lret
stos
adcl
call
cmp
stc
mov
push
push
inc
or
inc
push
pusha
add
int3
das
shll
jo
mov
jne
loope
in
dec
lahf
adc
add
dec
push
push
sub
aaa
ja
insl
test
lret
cld
stos
addr16
fistpl
test
jo
enter
cmp
mov
outsb
add
daa
push
std
xchg
jp
stos
inc
in
fwait
sbb
inc
in
cmp
push
out
xchg
aas
push
out
jo
add
or
pop
and
cmp
xchg
sub
pop
inc
lods
pusha
neg
mov
mov
adc
push
lock
inc
int
mov
adc
js
arpl
pop
cmc
or
and
cmpsl
mov
dec
in
dec
aas
ds
or
inc
push
cmc
push
ljmp
and
adc
xchg
inc
fidivs
push
loope
movsb
stos
sbb
jnp
cmpsl
ds
and
pop
pop
rolb
sar
scas
jecxz,pn
mov
div
sub
out
cld
xchg
lret
in
outsl
ljmp
push
or
popf
xor
test
xor
adc
das
push
shlb
lret
sbb
push
mov
push
jmp
je
imul
sbb
imul
ljmp
xor
push
out
adc
mov
test
push
scas
inc
mov
pusha
test
ret
pop
pushl
cli
arpl
mov
inc
mov
push
and
inc
add
fistps
and
jnp
mov
pop
dec
out
ja
rcrl
std
xchg
push
xchg
adcb
stc
adc
xchg
or
sub
and
xchg
pop
aad
dec
xor
sahf
gs
add
dec
loope
addl
cli
adc
pop
icebp
cmpsl
jo
sbb
xchg
xchg
cmp
pop
lods
xor
test
cmp
addr16
rcr
call
jecxz
rcrl
js
jbe
and
or
nop
sub
pushf
aaa
mov
or
inc
out
in
adc
mov
xchg
in
jbe
sbb
adc
sti
push
push
lods
xchg
outsb
mov
and
and
jle
push
adc
mov
push
outsl
push
inc
in
stos
inc
sbb
inc
pop
mov
push
call
fwait
mov
std
cmp
mov
sbb
mov
out
aaa
mov
lret
pop
mov
cmp
dec
mov
dec
outsl
daa
mov
xchg
pushf
xor
adc
mov
clc
xchg
aad
or
cmpsl
cld
xchg
fisttpl
fidivrl
je
cmp
dec
cmp
mov
pop
or
dec
repnz
add
adc
mov
xcrypt-cbc
cmpsl
adc
out
cmp
stos
mov
stos
mov
fisttpll
mov
xor
insb
add
lahf
je
add
pop
push
jae
cmp
loop
lcall
les
dec
call
test
inc
lahf
ss
je
out
cmp
outsl
xchg
adc
sbb
or
push
mov
daa
xlat
aas
xchg
sub
rcr
jne
dec
add
jnp
jp
xlat
adc
movb
adc
out
or
pop
jle
jae
jmp
test
js
xor
mov
les
mov
loope
outsb
les
add
inc
xlat
fcmovu
out
or
int
out
mov
mov
mov
adc
mov
sub
shrl
out
fcoml
mov
call
addl
icebp
fwait
ja
rclb
gs
cmpl
movsb
dec
loope
xor
xchg
addr16
adc
leave
sub
mov
addr16
cmpsl
outsb
add
loope
or
mov
push
mov
xchg
negl
lea
div
mov
mov
mov
mov
rcrl
jp
pushf
popa
shrl
cmp
je
cmp
dec
xchg
dec
sbb
mov
jbe
scas
dec
fistps
xchg
mov
inc
dec
in
insl
xor
imul
sbb
sbb
imul
mov
fstps
mov
cli
and
mov
jo
and
adcb
fdivrs
push
push
insl
sbb
outsb
mov
or
mov
pop
mov
pusha
enter
test
and
inc
cmpsb
cmp
pop
pop
int3
arpl
add
pop
leave
add
inc
repnz
testl
cwtl
movsl
inc
xlat
push
aaa
out
push
and
xor
add
lret
cli
xchg
push
mov
push
enter
aam
jb
pop
outsb
xchg
push
in
add
mov
xchg
fldcw
cmp
movsb
dec
loopne
dec
mov
xchg
ss
sbb
pop
xor
fcoml
add
inc
stos
into
gs
push
daa
mov
lock
outsl
sbb
out
lods
pop
jl
or
mov
pop
loopne
mov
hlt
mov
and
das
in
fidivl
push
sbbl
pushf
nop
daa
mov
push
ss
sub
pop
sahf
and
outsl
popa
mov
dec
loop
push
testl
push
fwait
xor
fstpt
cmpsl
imul
inc
cld
pop
add
xor
pop
mulb
sbb
cmpsl
dec
inc
push
call
sbb
pop
inc
lods
aam
fisubrl
add
mov
pop
mov
data16
jo
arpl
nop
add
xchg
aas
mov
jae
rorl
addr16
mov
nop
daa
dec
mov
out
xchg
sbb
fldcw
xchg
sub
sub
add
xchg
repz
add
xchg
sub
cmp
mov
push
cli
xchg
test
adc
lods
subl
mov
pusha
shlb
cmpsb
push
out
pop
xor
mov
test
lret
mov
fiadds
iret
mov
mov
loop
inc
fidivl
inc
cmp
xchg
xchg
into
gs
sub
jbe
sub
lcall
test
dec
iret
inc
stc
ret
popa
testb
je
ss
sbbb
xchg
mov
jo
mov
es
lods
sbb
mov
push
in
mov
xlat
outsb
jl
lock
adc
dec
in
jo
jmp
ja
clc
in
sub
ds
or
xchg
jge
mov
mov
dec
push
jmp
mov
ret
scas
inc
mov
stos
inc
xor
dec
out
shl
cli
call
pop
into
sti
mov
cmp
push
out
js
test
adc
sahf
xor
movsl
rcl
sti
push
movsl
mov
jb
lret
fsub
jns
sbbb
mov
push
xchg
sub
xor
mov
adc
and
imul
pop
outsb
add
test
jns
inc
leave
dec
loope
fs
cs
jnp
pop
insl
adc
lcall
and
jl
xchg
xor
ja
scas
rcrl
mov
add
push
cmpsl
jb
push
lds
ljmp
jp
jbe
icebp
fwait
sbb
test
jg
xchg
movsl
mov
push
test
mov
dec
add
in
hlt
and
popf
xor
sahf
shrl
into
lret
inc
iret
dec
sarl
dec
stc
test
leave
jo
inc
pop
ljmp
inc
jmp
cmp
fsubr
sub
mov
add
rcl
out
mov
cmp
xchg
insb
das
mov
xchg
notb
adcb
dec
movsb
cmp
into
gs
mov
hlt
test
jmp
fwait
shl
push
or
inc
mov
jl
lcall
and
arpl
jge
push
scas
inc
inc
mov
xchg
call
mov
loopne
fsubs
sbbl
loope
cmpsb
cmp
jae
insl
add
shrb
in
mov
repnz
mov
sub
idivl
out
xchg
add
imul
ss
mov
aad
cs
jnp
cmp
mov
ror
insl
add
jmp
or
jbe
xchg
leave
pop
repz
push
popf
jae
sbb
das
call
call
scas
adc
pop
sahf
mov
insb
add
and
inc
ret
sti
cmp
lret
nop
sbb
adc
stos
inc
bound
sub
mov
mov
sbb
cmpsl
ds
lds
mov
add
out
stos
add
lods
adc
mov
ss
bound
push
fistpl
int3
test
pop
repnz
rol
fimuls
int
into
test
xchg
add
pushf
xchg
into
jbe
mov
inc
loop
jle
call
fwait
dec
cmc
jnp
ja
adc
int
in
adc
repz
rorb
rsqrtps
hlt
push
lods
and
and
subb
mov
xchg
insl
loopne
fistpl
push
call
sbbl
pop
pushf
push
mov
xlat
sub
nop
movsl
nop
pusha
das
push
aaa
daa
push
sbb
xchg
fmull
clc
sub
jne
jae
out
pusha
sbb
xchg
mov
out
lods
ljmp
jno
xchg
popa
ss
arpl
xor
push
sub
rcll
jmp
jl
ret
sub
inc
subb
pusha
adc
cmp
sbbb
imul
in
inc
cmp
fnstenv
mov
and
idivl
popa
test
sar
das
rcll
cmp
fistpl
mov
shl
movsl
mov
lret
rclb
jns
leave
stos
or
lock
mov
mov
jmp
cmp
xlat
pop
jg
dec
pop
xor
xchg
adc
inc
test
lret
lock
lds
xchg
sub
sbb
push
push
mov
xchg
sub
dec
xchg
sub
mov
xor
movsl
hlt
mov
sub
jno
sbb
stos
dec
jl
popa
pop
imul
jge
push
inc
insb
fnstenv
addr16
nop
cmp
gs
jge
cmp
in
test
into
lea
cwtl
das
xrelease
mov
jns
stc
adc
rcrl
pop
scas
mov
ret
mov
fstl
test
xchg
adc
leave
std
push
lods
mov
cmp
add
js
or
daa
mov
pop
mov
hlt
mov
sbbl
cmp
pop
pusha
testl
sahf
loop
adc
outsb
add
mov
mov
jbe
cmpsl
ds
cmp
testl
ror
mov
jecxz
out
cmc
push
lret
sub
lret
in
and
aad
sbb
add
ret
loop
ljmp
mov
jle
fldcw
ret
mov
add
xchg
xlat
mov
leave
cs
mov
xor
mov
mov
mov
cmpb
lds
dec
loop
lock
add
sbb
mov
lret
sub
fwait
push
aas
orb
cmp
lcall
and
inc
int3
mov
mov
xchg
pusha
testl
in
mov
dec
or
scas
push
push
ljmp
push
out
ficoml
push
jmp
sti
adc
loope
dec
loop
add
mov
ret
aaa
aaa
jmp
mov
lret
aaa
into
mov
xchg
xlat
outsb
add
adc
adc
xchg
mov
mov
ljmp
das
inc
out
test
clc
clc
fistpl
lock
dec
loope
xchg
xor
gs
dec
insl
rclb
mov
out
push
pop
fwait
bound
and
imul
jmp
cs
pop
mov
adc
pusha
sahf
inc
push
lods
jge
mov
sub
inc
cmp
icebp
mov
pushf
add
sbb
test
mov
outsl
lock
dec
pop
cmc
inc
enter
or
nop
pop
stc
dec
negb
pop
mov
push
mov
leave
pushf
in
add
jmp
rcll
jno
test
push
sbb
fsubrs
jle
clc
insl
dec
lock
outsl
cmp
cmpl
cmp
inc
stos
fmuls
dec
adc
jns
mov
dec
pop
jae
imul
adc
sub
lods
insl
repnz
mov
jg
fdivl
xchg
cwtl
das
xor
cmp
adcl
push
repnz
pop
push
adc
pop
pushf
js
inc
stos
mov
mov
lock
mov
pop
cltd
fdivl
mov
cwtl
das
mov
popf
xor
xlat
leave
pusha
or
popf
xor
adc
in
jecxz
mov
cmp
pushf
lret
cld
mov
nop
daa
cmpsl
das
fwait
xor
mov
adc
aaa
cld
xchg
ja
popf
xor
cwtl
insl
add
js
gs
push
icebp
mov
mov
lret
sub
push
mov
loopne
nop
rolb
pusha
loope
adc
aam
xchg
jecxz
add
xchg
jnp
xlat
dec
mov
test
jo
cmc
dec
pop
push
movsl
push
mov
mov
jno
mov
es
xchg
add
and
adc
cmp
shlb
sbb
test
das
and
cmp
push
inc
cmp
fdivl
inc
xor
sub
cmp
fnstsw
pushf
xor
xor
jge
inc
xor
push
dec
cwtl
das
pop
jae
lret
mov
dec
lds
jecxz
lds
xor
lods
mov
push
jecxz
ss
add
jl
mov
testl
or
bound
mov
outsl
push
and
iret
data16
pop
mov
int
dec
hlt
loope
mov
sahf
xor
add
inc
xor
jbe
xchg
push
call
sub
dec
es
cmpl
sub
pop
sbb
stos
iret
jnp
loopne
cmpsb
cmp
xchg
add
ja
mov
fcos
xchg
mov
adc
xor
ja
shrl
cwtl
inc
fsubs
cmpsb
mov
iret
inc
sbb
fstpt
lret
loope
inc
fnsave
shll
leave
adc
push
out
repz
jecxz
pop
lock
mov
push
xchg
adc
test
in
sbbl
jecxz
cwtl
int3
and
cwtl
inc
out
xchg
and
je
ret
mov
mov
outsb
inc
pop
cmp
mov
mov
dec
out
mov
adc
in
adc
cwtl
movsl
cmp
lret
sti
add
pop
repz
fstl
and
mov
pop
lret
lods
mull
mov
mov
fstpt
add
andl
cmp
cmp
pop
xchg
sub
scas
lahf
ss
repz
int3
adc
sbbl
leave
pusha
adc
sbb
ret
mov
clc
mov
mov
fsts
out
xchg
addr16
pusha
push
aaa
into
inc
repnz
adc
out
je
daa
insl
call
out
outsl
push
call
jl
cmp
out
cld
xchg
or
push
flds
cmp
or
add
or
in
mov
pop
mov
jns
lods
lret
bound
rcll
rclb
mov
cmpsb
cmp
mov
aaa
into
enter
inc
jmp
push
call
in
arpl
stos
ds
and
pop
into
pop
icebp
sarl
dec
hlt
sbb
mov
ret
hlt
cwtl
pop
lock
adc
push
push
pushf
adc
icebp
mov
mov
sbbl
adc
int
xchg
sub
sti
test
in
jno
mov
es
int
movsl
cmp
dec
daa
mov
jnp
lret
mov
pop
icebp
and
mov
int3
loop
sub
dec
cmpsb
jp
mov
mov
push
rorl
xor
cmpsb
xchg
js
or
insb
add
dec
aad
dec
rcl
push
and
pop
xor
sbb
pop
popf
movsl
cmp
cmp
lods
mov
xor
sarb
cmp
xor
testl
and
mov
fiaddl
mov
flds
jle
je
xchg
sub
pop
pop
filds
add
lods
xlat
dec
out
sbb
xor
in
adcl
int
dec
addb
and
xor
fs
push
call
bnd
mov
adc
push
popa
cmp
addl
jno
loope
pushf
dec
mov
jbe
jb
jns
es
es
mov
cwtl
cmp
mov
xchg
aam
jbe
stos
ficoms
bswap
ss
adcl
mov
xchg
lods
push
iret
decb
sub
sahf
mov
dec
mov
mov
out
or
shl
dec
loopne
xlat
inc
int3
jecxz
adc
jmp
loop
and
lahf
fs
or
je
bound
cmp
imul
sub
add
imul
and
fnsave
cmp
xchg
and
lea
negb
lock
in
push
dec
xchg
cmpsb
pop
stos
hlt
push
inc
mov
out
inc
leave
or
adc
in
imul
add
inc
mov
js
mov
jnp
pop
iret
xchg
cmp
dec
mov
clc
lahf
adc
cmpsb
fiaddl
jns
fdivrl
das
mov
jb
pop
out
and
cmc
jl
pop
icebp
es
mov
sbb
fs
cmp
cmp
push
dec
pop
mov
jae
pop
movsl
cmp
xorb
pop
push
mov
xchg
ja
inc
cmpsl
std
xchg
mov
add
cwtl
fcomps
mov
mov
dec
fistps
mov
out
sbb
mov
cmc
bound
mov
dec
mov
fwait
pop
pop
ret
pop
mov
push
aaa
fsubrl
bound
xchg
cmc
ja
rclb
add
into
iret
dec
loop
lock
adc
out
push
xor
arpl
lcall
test
shlb
adc
mov
mov
pop
repnz
mov
std
ss
adc
out
inc
mov
pop
mov
mov
movsb
or
les
inc
std
popf
or
xor
and
mov
repnz
jbe
data16
mov
fsubl
gs
sbb
ljmp
negl
xlat
test
lahf
inc
aad
mov
cmp
sub
mov
test
dec
incl
pusha
test
add
mov
mov
add
ja
jno
mov
pop
inc
pop
les
cmpsb
gs
pop
sbb
sub
bound
aaa
bound
dec
rolb
add
cmp
xlat
xor
inc
add
mov
mov
fidivrl
shr
mov
inc
ficomps
sarb
icebp
lahf
fs
sbb
es
adc
fisubl
mov
adc
xor
mov
xor
xchg
aaa
dec
testl
adcb
mov
iret
pop
arpl
push
popa
daa
mov
pop
jo
aaa
gs
xchg
mov
pop
add
aam
lret
outsb
pop
mov
cmpsl
nop
jg
test
repz
and
arpl
cmpsb
add
dec
out
push
jnp
roll
je
outsl
test
sbb
mov
lods
mov
mov
fisubs
cmp
mov
ja
loopne
sar
jne
mov
cmc
roll
sahf
jge
add
sbb
pushf
sub
iret
inc
aam
stc
and
pop
sbbl
mov
sub
xor
mov
add
sbbl
xchg
ffree
lret
sbb
shll
and
stos
pop
out
fmul
enter
xor
ffree
je
idiv
imull
scas
in
sti
call
mov
adc
mov
fmul
shll
xchg
call
dec
jmp
pop
inc
sub
mov
mov
mov
fcmovnbe
xor
scas
imul
aad
inc
clc
mov
fnstsw
jg
scas
pop
lret
ret
inc
cmp
sbb
pop
mov
cmp
fbld
repnz
lcall
push
sbb
imul
jae
jl
aaa
into
push
popf
insl
dec
mov
les
push
out
push
mov
outsl
cmp
xchg
ja
xlat
mov
jbe
mov
and
dec
mov
push
std
push
xchg
sub
je
pminub
and
jnp
mov
sbb
and
sbb
mov
xchg
incl
xchg
aam
push
lods
cmp
and
pop
in
mov
pop
iret
test
pop
jge
adc
push
call
outsb
fwait
es
into
das
call
lret
repnz
inc
dec
rclb
push
cmp
fs
jne
cld
mov
mov
push
in
inc
dec
sahf
jecxz
call
out
fstpl
aad
popa
add
sbb
test
in
adc
scas
or
nop
fld
mov
mov
inc
sub
lods
popa
inc
or
or
cmp
or
jmp
and
or
cmp
jle
mov
stos
pop
stc
mov
jecxz
sbb
jmp
add
out
push
cmpsb
shr
stc
jno
sbb
or
lods
inc
cmp
movsl
cmpsl
add
mov
lds
adc
fistl
scas
or
push
pop
stos
rcll
cli
jne
test
sti
into
rol
in
outsb
fnsave
hlt
mov
push
or
mov
std
inc
inc
adc
repz
std
mov
ds
push
or
addl
jmp
add
call
push
sbbl
test
idivl
cmp
mov
or
jmp
xchg
pop
popa
dec
arpl
leave
sub
sbbb
cmp
cld
xor
cmp
mov
xchg
cltd
rcr
imul
data16
out
call
mov
shlb
pop
scas
notb
lcall
mov
mov
std
scas
mov
inc
fcmovnb
arpl
xchg
je
dec
punpckhdq
jns
mov
xchg
jno
adc
xor
pop
lret
mov
movaps
inc
fcom
mov
fs
fistps
les
nop
sbb
sub
jbe
shll
cltd
js
mov
int
add
repnz
andl
aad
dec
cmc
push
xchg
sub
cmp
sar
imul
stos
or
xor
and
shl
and
inc
mov
lret
repnz
xchg
inc
test
pusha
fists
mov
gs
movsb
shlb
mov
fbstp
shlb
in
leave
xchg
ss
add
gs
imul
jecxz
jl
push
scas
push
aaa
mov
or
inc
xlat
jge
pop
clc
sti
sub
adc
pop
inc
mov
inc
adc
insl
dec
mov
adc
jne
fsubrp
cmc
cmp
inc
fwait
xor
ljmp
pmullw
cmpsb
xor
pushf
lret
into
xor
adcl
out
cmpsb
cmpsl
jecxz
xor
push
pop
or
mov
sbb
jp
add
mov
sbb
cmp
nop
jg
or
scas
ds
out
lcall
sbb
and
or
inc
add
icebp
pop
sbb
aaa
rcrb
rcrl
bound
test
scas
inc
or
dec
jecxz
test
mov
insb
dec
jae
out
jbe
je
cmpsb
imul
addb
ja
std
mov
and
cmp
pop
push
sbb
arpl
rcll
inc
mov
sbb
inc
aas
add
lock
inc
pop
stos
mov
stc
insl
pop
pop
addr16
jns
or
pop
test
addr16
rcrb
push
sbb
lea
mov
jne
std
leave
jnp
push
and
int
dec
sbb
outsb
inc
and
sbb
addr16
fdivrl
push
jle
mov
lret
sbb
rclb
test
jne
mov
or
into
aam
test
and
and
mov
pop
scas
xchg
mov
shrb
ja
repz
movsl
and
cld
xchg
and
int3
lock
aam
cs
shll
fs
xchg
xchg
jmp
jp
ret
repz
out
or
inc
dec
in
cmpl
cmp
cmpb
xchg
mov
test
mov
lds
out
cli
hlt
js
imulb
ja
xor
jne
and
mov
pusha
inc
cmp
pop
and
incb
das
xor
testb
or
mov
jmp
pop
das
lds
mov
rol
mov
sub
mov
leave
aaa
aam
hlt
jle
shrl
sbb
mov
xchg
mov
sar
enter
call
mov
sub
pushf
movsl
xor
xchg
sbb
lahf
xor
jmp
inc
mov
mov
pop
jbe
lock
dec
lea
jg
push
lock
movsl
cmp
lahf
ds
cmp
mov
pop
sbb
inc
inc
imul
pop
daa
enter
mov
jg
mov
hlt
push
testl
pop
or
xchg
cmpsl
add
rcrb
clc
repnz
stos
jmp
sub
repnz
sarb
fstl
push
add
dec
in
cmpl
inc
aam
in
push
mulb
sub
jne
lock
sbb
mov
iret
sub
cmpsl
fcoms
jg
ss
jg
stc
mov
mov
ret
stos
and
sub
inc
test
mov
fimuls
push
in
push
aas
adc
adc
inc
fstl
inc
pop
mov
pop
mov
aas
shr
out
sub
idivl
push
out
jns
loop
and
xchg
adc
mov
mov
mov
ret
rorb
loopne
or
shl
out
dec
loope
sbb
xor
ds
sub
sub
adc
imul
in
mov
out
nop
cld
out
sub
inc
enter
xchg
cmp
push
mov
jb
cli
popa
xor
inc
inc
mov
movsb
cmp
ror
inc
fdivs
lods
insl
shll
ds
ret
xchg
pop
loop
imul
push
lock
lahf
je
in
xchg
popa
ljmp
les
sahf
lret
xchg
xchg
jbe
pop
pop
sbb
stc
jb
jl
insb
pop
clc
push
nop
ja
ret
int
out
test
sub
mov
push
fldpi
or
inc
fistl
imul
popa
push
je
int3
lret
sti
in
inc
push
xor
outsb
sbb
pop
dec
sbb
mov
dec
cmp
sbb
inc
das
sbb
in
pop
pop
repnz
sbb
xor
rcll
push
push
jmp
shlb
adc
imul
mov
jb
sti
ljmp
in
rcrb
lret
sbb
sti
mov
int3
jnp
js
lds
lods
dec
test
es
clc
orl
push
cmc
ficompl
sarl
idivl
daa
push
rorb
mov
test
pusha
mov
xchg
xorb
mov
repnz
jle
je
andb
sub
cmp
fisttps
rorl
mov
stos
adc
or
or
ret
cmp
fldenv
push
push
test
jge
stc
hlt
sbb
mov
xchg
fnstenv
push
sub
mov
sahf
mov
or
jmp
add
lds
mov
jecxz
or
test
imul
sub
stos
mov
jne
lods
jp
mulb
inc
fcoml
mov
scas
gs
shr
mov
lds
stos
pop
lods
pushf
xor
mov
leave
pusha
push
pop
aad
sbb
cs
pop
pop
pcmpgtb
sbb
das
and
inc
test
aam
movsl
mov
aaa
dec
mov
aaa
test
cwtl
mov
jns
gs
fnstsw
cld
cmc
sbb
dec
adc
push
push
call
das
leave
stos
jge
into
jmp
or
loope
outsb
lods
inc
sub
ds
pop
cs
cmp
xor
arpl
fwait
aaa
into
int3
int
xchg
ja
push
jbe
add
dec
jecxz
push
mov
push
jnp
mov
jo
repz
jne
push
movl
add
xchg
ja
in
pop
jl
cmpl
mov
jmp
sahf
mov
divb
call
mov
test
std
push
in
pop
mov
mov
fsubr
leave
and
xchg
push
lcall
cmp
xchg
lods
inc
lds
mov
sub
out
insb
lcall
push
mov
enter
xchg
pop
std
dec
stos
inc
jl
cmpsb
inc
inc
test
pop
into
and
rolb
shrb
repz
xchg
xor
push
scas
sbb
xor
into
lods
push
lahf
sbb
subl
add
loopne
add
adc
outsl
imul
pop
inc
cltd
dec
mov
in
adc
sbb
repnz
notl
push
dec
sub
adc
sbb
out
inc
push
sub
cmp
pushf
or
shll
xchg
push
mov
push
mov
mov
enter
fucomp
rclb
push
es
sbb
adc
icebp
mov
sbb
aas
cmpsb
pusha
nop
insl
sti
xchg
push
cld
mov
loope
aaa
in
icebp
fiadds
add
into
sbb
add
inc
in
mov
add
and
cmpb
xchg
push
dec
clc
mov
or
jbe
test
jno
cli
mov
sub
clc
dec
push
dec
cwtl
sbb
ljmp
stc
inc
mov
and
dec
fiadds
repnz
xor
stc
les
cld
add
jo
xor
mov
add
iret
movsb
cmp
cltd
les
push
je
dec
pop
and
das
imul
call
dec
cmp
lret
xor
out
inc
icebp
call
pushf
je
xchg
repnz
in
xchg
fldl
imul
cltd
or
movsl
in
clc
jne
inc
push
test
cmp
sbb
lods
push
xchg
das
xchg
sub
cwtl
mov
xchg
out
dec
push
lcall
dec
cwtl
outsl
or
jle
pop
icebp
jb
push
jmp
jmp
repz
fnstenv
hlt
sbb
cli
sub
cld
pushf
pop
jmp
mov
jecxz
jecxz
hlt
xor
loope
mov
cltd
ret
mov
jo
ja
scas
mov
nop
add
xor
divl
push
cmpsl
mov
jbe
and
insb
sbb
enter
inc
pushf
xchg
rolb
cmp
sub
sbb
pusha
pop
ror
fbstp
les
popf
xor
sub
das
xchg
in
test
sub
add
xor
stc
nop
imul
outsb
push
les
or
cwtl
jnp
insl
jl
xchg
push
repz
inc
inc
sbb
cmpsb
sbb
sarb
mov
aam
dec
xlat
mov
sahf
push
push
and
pop
mov
and
orl
mov
mov
sub
in
xor
or
and
sbb
je
push
sbb
xor
push
jp
xchg
rcrl
push
push
out
xchg
xchg
ljmp
out
sbb
scas
lret
cmpsl
cmp
iret
mov
cmpsb
je
mov
movb
decl
out
scas
test
add
lock
stos
add
push
mov
pushf
dec
in
xlat
xchg
sbb
xorl
rcll
xchg
or
xchg
xchg
ficoms
push
sub
mov
cmp
xchg
insl
lret
mov
stc
fxch
cmp
cmc
add
pop
iret
cmp
mov
imul
and
xchg
jle
lock
cmpsl
mov
pusha
pop
leave
inc
leave
pusha
ja
jb
push
jae
test
clc
xor
test
js
clc
mov
jae
loope
imul
fisubl
mov
nop
push
fidivs
xor
jl
inc
scas
std
mov
cmp
aam
icebp
shrl
repnz
sbb
fildl
leave
xchg
inc
xlat
pop
xchg
mov
ja
sbb
mov
mov
xchg
and
out
faddl
mov
xor
mov
sub
mov
gs
arpl
xor
loope
and
sti
outsb
ss
sbb
xchg
jmp
cmc
cli
icebp
nop
xchg
mov
cmp
nop
fwait
mov
ret
mov
roll
andl
inc
dec
xchg
es
stos
rol
lea
sbb
lahf
ss
cmp
fstpt
mov
xchg
mov
cld
mov
cltd
xor
cmp
push
mov
and
sbb
sub
call
cmp
scas
adc
ret
and
aas
sub
xchg
fsub
dec
into
out
out
mov
inc
or
aaa
fcoml
or
adc
outsl
das
outsb
jp
mov
fimuls
sbb
dec
lds
inc
daa
sbb
push
imul
outsb
add
pushf
jmp
cli
xchg
loopne
fcoml
xor
dec
aas
into
jle
fildll
pop
mov
jo
hlt
inc
sub
push
or
mov
pop
xor
leave
mov
sub
adc
out
into
or
fwait
push
popf
loop
jecxz
sahf
jbe
stos
ficoms
cmp
rol
test
aaa
jno
push
test
inc
push
jnp
cmp
pop
push
and
cltd
outsl
dec
test
imul
mov
jne
popf
test
mov
dec
in
test
lcall
push
xchg
sub
dec
pop
pop
cmpsb
insl
add
mov
aas
cmp
arpl
rep
outsl
les
sbb
cld
in
in
fisttpl
daa
adc
out
sbb
adc
jl
cwtl
ret
push
add
add
stc
push
cmp
inc
ss
dec
test
lret
cld
shll
add
out
test
push
jmp
mov
ret
sub
hlt
enter
adc
lods
inc
dec
addr16
cwtl
outsb
lret
bound
shr
repz
cmp
adc
lahf
orl
mov
fnstenv
std
in
cli
mov
cmc
push
mov
movsb
adc
mov
mov
lret
das
stc
lcall
dec
sub
pop
mov
addb
in
pop
popa
test
mov
mov
jle
clc
sti
sbb
pop
dec
and
je
out
in
fs
fdivrl
cltd
jl
popf
adc
dec
fildll
sbbb
lods
jo
aad
scas
cmp
push
and
addb
stos
movsl
sbb
bound
jno
or
cmpsl
dec
fwait
pop
lock
imul
mov
lahf
cli
push
cs
fisttps
fstpt
pop
mov
int3
or
movsl
shlb
jle
pusha
aaa
mov
stc
movsb
shl
mov
jl
cwtl
mov
mov
jbe
sbb
mov
mov
rcl
test
pop
jne
and
adc
add
sub
fistps
or
sub
and
shrl
jno
outsb
enter
mov
mov
push
sub
or
mov
lods
rcrl
dec
shr
stos
xchg
and
adc
repnz
les
rorb
aas
rcrb
scas
loopne
das
mov
fwait
mov
aad
rolb
lds
pop
jb
pop
scas
pop
cmp
sti
in
in
aas
mov
pop
out
aaa
jns
mov
dec
mov
fstpl
xchg
inc
pushf
scas
addl
outsl
jnp
mov
cmp
loopne
add
inc
cs
or
data16
sti
cmovge
lock
int
testb
inc
adc
insb
lcall
adc
fisubl
cmp
add
ja
dec
into
mov
outsl
jmp
dec
lahf
arpl
test
loope
bound
jo
inc
popa
mov
or
push
xor
insl
cwtl
inc
fmull
or
sub
fisubrs
clc
mov
arpl
mov
je
imul
jo
fwait
mov
adc
cmp
push
fisubrl
add
sub
ds
out
inc
aaa
rol
pop
or
mov
jg
xor
sub
popf
mov
mov
inc
cli
aam
insb
xor
movsb
test
and
ljmp
ja
into
out
out
mov
xchg
fisttps
popf
call
mov
jg
dec
jns
jle
inc
movsl
fwait
dec
stos
int3
enter
das
jnp
cmp
lea
iret
or
iret
movsb
push
ss
xchg
aas
daa
lcall
push
mov
jne
adc
jnp
shll
inc
in
xchg
jmp
inc
fbstp
jno
mov
test
cltd
out
ret
fldenv
mov
mov
adc
pop
adc
pop
adc
mov
mov
mov
aam
push
outsb
pop
add
mov
cltd
push
xchg
push
adc
repnz
lea
pop
push
dec
sbb
sti
or
stos
add
cltd
out
test
jns
and
jle
xchg
cwtl
outsl
mov
daa
je
mov
push
paddusb
add
xchg
jbe
mov
roll
sarb
enter
mov
fbstp
mov
dec
popf
inc
cwtl
mov
popa
pop
rclb
xor
andl
pop
jo
inc
rclb
xor
daa
push
ss
pop
fildll
test
mov
decl
stos
test
aad
movsb
mov
loope
and
es
cmpl
or
pop
xchg
sub
sbb
std
notl
stos
insb
xor
mov
cltd
jnp
out
sub
push
sbb
fsubrs
insl
stos
xchg
jns
or
push
mov
mov
xchg
cmpsl
sahf
hlt
mov
push
mov
test
bound
cmp
xor
cmc
roll
mov
jge
arpl
dec
out
fdivs
addl
icebp
mov
sbb
push
inc
adc
jle
ret
sbb
lahf
rcrb
in
out
mov
sahf
jb
xchg
push
push
cmp
xor
xor
jnp
movsl
jp
jg
ret
xchg
push
sbb
xor
push
mov
fdivp
xchg
xor
jbe
movsl
xor
mov
lret
pop
xchg
lret
mov
xor
xchg
push
movsb
or
out
cmpsl
cmp
sub
dec
adc
dec
aaa
push
in
xchg
pop
out
inc
jmp
jbe
cwtl
add
push
mov
aaa
fbstp
dec
shrb
inc
lds
cmpsb
je
inc
cmpsl
insl
cli
rcll
cltd
mov
mov
cltd
and
xchg
mov
dec
fwait
js
sub
sub
icebp
xchg
lret
es
mov
test
repz
fucomp
sti
push
inc
popa
movsb
dec
lods
dec
jl
xchg
cmp
pushf
aas
jmp
mov
lods
outsl
push
ffree
sbb
rorl
mov
into
dec
sub
sahf
pop
dec
loopne
mov
gs
jo
and
push
jp
bound
icebp
adc
int
pop
mov
rclb
mov
pop
arpl
lods
xchg
fdiv
or
pop
das
add
sub
xor
dec
cmp
mov
lahf
mov
pop
jmp
test
mov
jmp
sub
mov
or
or
jno
dec
and
pop
repnz
push
push
or
pop
pushf
xor
push
and
call
inc
cmp
inc
sbb
mov
inc
pop
sub
push
cmp
test
sub
push
out
cli
ret
jne
jbe
jmp
adc
pop
inc
adc
or
in
fucomip
push
out
sub
mov
push
jle
mov
dec
mov
test
popf
inc
testl
push
and
dec
pop
mov
imul
push
inc
fiaddl
es
add
int3
std
mov
mov
mov
clc
sub
mov
jnp
movsl
jecxz
mov
cmp
mov
loop
scas
inc
stc
leave
jecxz
pop
xlat
dec
in
xor
xchg
dec
imul
xor
mov
fnstsw
enter
mov
fistl
mov
fs
pop
xchg
xor
fs
rcrl
hlt
dec
test
mov
jmp
dec
fcompl
sbb
adc
cmp
mov
push
jecxz
rorl
mov
lock
in
pushf
xor
mov
cmpsb
jp
mov
sbb
mov
and
leave
pop
mov
push
sub
out
or
test
outsb
inc
andl
pushf
push
mov
xor
fadds
fisttps
scas
fsubrs
in
pop
dec
lds
movsl
arpl
fs
inc
div
jbe,pn
push
and
nop
push
je
mov
data16
adc
inc
out
inc
sbb
lret
es
or
out
cmpl
lock
xor
fsubl
xor
pop
adc
sbb
add
xchg
movsl
test
lcall
and
jne
aas
xchg
mov
aas
mov
ljmp
ret
inc
mov
in
pusha
mov
lock
add
sub
insl
int
mov
dec
sub
cltd
jecxz
mov
sar
xor
mov
and
and
rorl
mov
jne
cmp
sbb
popa
sti
xchg
xchg
inc
stos
push
jecxz
hlt
sub
push
pop
xchg
inc
testb
jl
mov
xchg
mov
andl
stc
adc
sti
mov
pop
ret
cmp
mov
aas
sbb
xchg
push
or
add
ja
push
in
arpl
lock
rorb
mov
fwait
mov
sahf
xor
and
mov
add
out
movsl
pushf
add
mov
sbb
out
shrl
out
stos
mov
aas
dec
in
mov
push
adc
jbe
xor
into
cwtl
push
pop
out
cmpb
addr16
mov
scas
fwait
in
fs
or
add
push
mov
inc
rcl
jmp
inc
xchg
and
imul
repnz
clc
sbbb
or
mov
stos
push
stc
leave
fcomps
adc
inc
pop
sbb
push
stos
ret
or
or
lret
cmpsb
out
iretw
push
fmuls
jecxz
bound
leave
mov
lds
sahf
or
dec
dec
ljmp
mov
xor
xchg
or
lret
sbb
sbb
pop
jmp
fbld
xchg
cltd
shlb
xchg
out
dec
mov
sub
and
faddl
addb
out
addr16
cltd
dec
xchg
pop
out
fwait
xor
push
fwait
repnz
popa
mov
std
mov
aaa
aad
mov
fdivrl
icebp
outsb
jb
cwtl
in
cmpsl
sub
or
xchg
sub
push
pop
and
sbb
dec
scas
inc
repnz
rcll
lret
stos
dec
adc
cltd
outsl
in
jp
push
out
cmpsl
inc
repz
cmpsb
bnd
pushf
dec
call
adc
cmpsl
ret
and
inc
mov
jle
test
xchg
sbb
or
pop
sbb
scas
inc
clc
mov
lret
andb
rcrl
je
push
pop
jmp
sbb
push
cmpsl
insb
sbb
jo
sahf
ficoml
icebp
add
sub
sbb
leave
xor
push
push
fildll
push
mov
or
and
push
cmp
cmp
mov
ret
iret
scas
dec
adc
roll
shll
out
push
push
add
aaa
push
call
add
xchg
fnsave
adcb
mov
sti
xorb
repz
fdivrl
push
in
xchg
test
fld
das
cmc
jle
fstl
sahf
dec
pop
shlb
arpl
arpl
jb
or
mov
lretw
xchg
sbb
cmpsl
jns
xchg
ljmp
xchg
xor
cmpsl
popa
fcoml
jb
pushl
pop
xor
push
push
sbb
xor
pop
and
popa
int
xchg
loope
sub
dec
inc
xchg
repz
and
mov
repz
xor
xchg
cmp
xor
dec
iret
jnp
sub
stos
scas
std
pop
sbb
mov
jl
out
lods
dec
push
in
inc
xor
push
js
jae
iret
bound
icebp
aas
and
into
fcompl
decl
aas
pop
call
les
mov
das
repz
lret
sub
xchg
sub
pop
sub
inc
andb
sbb
lods
cmp
jnp
cld
xlat
ret
fisubs
mov
out
imul
dec
sbb
nop
ror
popa
add
sub
jg
push
test
sub
dec
cwtl
dec
inc
popa
mulb
addl
sub
and
adc
icebp
xchg
fdivs
cmpsl
xchg
mov
fcmove
pusha
or
xor
adc
inc
push
iret
out
xor
xor
out
jmp
push
sbb
lock
pop
pop
and
clc
in
mov
pop
add
insl
test
dec
pop
or
pop
sahf
cmp
pop
repz
jne
cwtl
movsl
decl
stos
jnp
ja
lret
xor
or
fs
out
xchg
pop
in
idivl
adc
add
fadd
xor
lods
inc
sub
icebp
mov
mov
adc
data16
inc
xor
les
push
jnp
sbbl
cmp
sub
cmp
fs
in
mov
shl
push
push
xchg
add
xchg
pop
sbb
mov
pop
pop
jl
shr
mov
pop
jl
pop
sahf
lret
in
das
movsb
data16
inc
adc
iret
or
jmp
insb
iret
jb
jmp
test
push
ja
fwait
iret
or
imul
push
andb
push
in
jp
subb
nop
cltd
pop
add
out
dec
popa
lods
mov
push
pop
aam
sub
sbb
mov
mov
ja
call
jns
add
xchg
push
cltd
in
inc
jg
or
jnp
std
lods
ljmp
fadd
pop
xlat
pop
lods
es
cmp
add
push
adc
push
cld
fsub
mulb
xchg
pop
hlt
pusha
inc
mov
lahf
sti
rorl
loop
shl
jno
mov
mov
mov
jge
push
test
xor
jae
mov
fldl
adc
stos
dec
insl
add
mov
xchg
mov
mov
xchg
popa
cmpsl
dec
aad
mov
and
push
sbb
xlat
dec
cld
cmp
das
in
stos
pop
xchg
dec
inc
and
orb
sub
add
xlat
test
and
int3
insl
dec
lahf
aad
addb
sub
push
push
or
inc
push
jp
enter
push
shlb
mov
cmp
or
ret
dec
or
pop
cmp
lods
iret
popf
sarb
push
out
das
or
xor
xchg
testb
and
jg
mov
cmpsb
cwtl
int
std
pop
scas
and
dec
stc
cmpb
xchg
xor
repnz
cmp
or
jne
inc
cmpsb
mov
arpl
add
push
insb
pop
push
xor
fiaddl
popf
and
pop
test
mov
imul
lea
sbb
mov
loopne
in
mov
cli
mov
into
dec
lret
frstor
outsb
add
xchg
jl
loope
movsl
jmp
in
sub
adcl
pop
leave
movsb
sbb
adc
cmc
imul
jl
das
push
jbe
movsb
mov
fildl
in
js
pop
adc
cmp
xchg
mov
mov
ljmp
jno
xchg
lahf
mov
dec
cmovbe
jl
rorb
mov
aad
mov
out
into
fdivrs
test
movsb
cmp
pop
jo
pop
movsb
xchg
pop
loop
stc
std
add
data16
lret
add
les
ds
push
push
lods
inc
inc
cwtl
movsl
icebp
mov
shl
lcall
lods
fiaddl
inc
pop
int
call
cmp
push
popf
xchg
pop
mov
push
les
jb
sbb
add
lahf
lods
push
and
sub
mov
mov
movsl
adc
bound
insl
adc
and
popf
mov
inc
xchg
inc
rcrb
pop
and
sti
loop
sbb
in
stc
testl
repnz
or
jmp
jecxz
push
mov
mov
xchg
cmp
stos
mov
aam
pop
jno
imul
pop
sahf
pusha
hlt
add
popa
jae
inc
popf
out
cmpsl
mov
lds
jg
fidivs
sbb
xchg
shr
xor
inc
cmpsb
out
sub
ss
add
andb
xchg
sub
xor
xchg
sub
packuswb
jae
dec
fdivrs
cwtl
test
nop
xchg
fiaddl
movsb
shrb
mov
sbb
rclb
test
outsb
iret
dec
leave
stos
push
jg
inc
leave
and
push
insb
or
subb
xchg
insl
jle
clc
rcll
mov
addr16
icebp
mov
xchg
pop
insb
push
inc
outsl
nop
jae
dec
nop
mov
dec
jno
shll
lock
popf
pushf
rol
dec
xchg
xchg
pusha
cmp
rcr
pop
imul
add
scas
sub
mov
pop
mov
fxch
xor
push
mov
loopne
push
push
icebp
add
pop
adc
fiadds
nop
hlt
inc
or
mov
sbb
dec
movsb
scas
nop
scas
xor
ljmp
or
iret
xchg
mov
lods
aaa
into
sbb
sbb
inc
jbe
jge
mov
test
push
shrl
add
cmc
mov
xor
repnz
lahf
imul
sbb
mov
jmp
out
push
int
test
mov
jmp
jmp
xor
icebp
insb
out
fcoms
ljmp
push
in
lock
cmc
pop
jae
push
mov
push
push
je,pn
mov
mov
ret
adc
int
das
movb
or
cmpsb
mov
push
xor
arpl
fadds
sbb
popa
pop
cmc
outsl
loope
test
lret
sbb
push
push
ret
cmp
fdivs
insb
arpl
aaa
xchg
notl
jb
xor
sahf
ja
outsl
rorb
shr
incb
xchg
fbstp
inc
add
int3
pushf
lret
lahf
fwait
test
scas
pop
jl
pop
stos
cmc
mov
add
pushf
cld
insl
js
mov
jecxz
mov
bound
scas
and
mov
pop
cmp
add
fdivp
dec
inc
mov
lret
xlat
xor
fldl
out
ljmp
inc
pop
xchg
insl
aam
push
xchg
in
add
push
push
mov
loopne
push
add
push
mov
add
jbe
push
or
shrl
out
mov
push
mov
pop
dec
shll
add
jge
in
dec
test
repz
into
fs
andb
push
mov
inc
mov
fnstsw
fdivs
out
clc
mov
bound
cmp
sub
rolb
pop
mov
aas
les
rorl
int
sbb
dec
jne
in
xchg
jp
mov
adc
andl
repnz
jge
gs
mov
mov
mov
or
sbb
orl
jge
test
call
aad
mov
outsb
outsl
mov
dec
xor
mov
pop
push
pop
es
aas
or
mov
scas
fsubl
lods
sarb
mov
imul
sbb
imul
rcrb
and
jno
fbstp
fisubs
mov
mov
aas
push
rolb
clc
lock
ret
lret
sti
in
mov
leave
mov
fistpl
sahf
idivl
andb
or
mov
cmp
mov
cmc
imul
shll
push
leave
rclb
outsl
sub
mov
inc
push
test
or
push
js
xor
into
sbb
fisttpll
cmp
pop
ret
arpl
out
cmp
mov
mov
daa
push
rcrl
sbb
xchg
sub
mov
lret
mov
or
in
ss
dec
out
fstpl
sbb
out
xor
push
imul
scas
cmp
call
test
jns
xor
fists
adc
and
mov
mov
loop
mov
rorb
ficoms
jns
in
cwtl
xchg
scas
les
fdivrp
xchg
scas
xor
lods
cli
or
aaa
jae
fisubrl
inc
mov
fsts
mov
and
shll
roll
out
jno
test
lds
daa
outsl
jb
nop
push
mov
mov
call
stos
inc
sahf
imul
icebp
aam
and
loop
or
push
push
jbe
shrb
jecxz
aas
xchg
sub
jno
lods
inc
or
cmp
jne
int
xlat
xchg
fdivl
mov
ljmp
push
les
pop
es
loope
jns
stos
xchg
cli
jne
mov
add
test
in
in
or
mov
int
scas
leave
cmpps
gs
adc
inc
mov
xor
jae
inc
dec
sub
dec
xor
or
imul
xchg
xor
xchg
aaa
push
pop
push
jne
xor
cmpsl
and
push
fstpl
insb
js
sbb
fidivs
inc
sub
icebp
cld
push
lret
lret
cli
pop
add
add
pop
rorl
insl
mov
mov
daa
add
sahf
push
sub
lahf
int3
arpl
addl
clc
loop
mov
dec
cmp
or
andb
fcomps
out
pusha
int3
pop
push
cmp
pop
shr
je
adc
jbe
push
jbe
outsb
hlt
push
stos
cmp
pop
scas
shll
and
xor
adc
test
xor
cmp
out
adc
or
sahf
mov
dec
and
int3
sbb
adc
imul
adc
sbb
shlb
mov
imul
or
sub
adc
sbb
popa
mov
fdivs
sbb
sarb
aas
mov
scas
cld
adc
into
into
xor
in
adc
out
test
cmpsb
sbb
mov
imul
std
add
repnz
nop
pop
loop
xor
and
push
pop
sahf
mov
aas
in
xlat
mov
ret
cmp
sbb
fcoml
or
xchg
stos
outsb
mov
push
lock
pushf
jmp
ljmp
shll
fbstp
mov
sub
jbe
loopne
mov
fst
hlt
push
cwtl
addr16
dec
aaa
hlt
dec
repz
add
push
mov
out
jo
pop
mov
cmc
repnz
dec
ret
hlt
outsl
in
nop
jge
arpl
adc
int
and
pop
or
ret
cltd
and
mov
or
and
xor
or
ja
jno
fs
adc
and
outsl
jnp
push
stos
push
dec
or
loop
inc
repz
inc
and
adcb
pop
pushf
addr16
leave
iret
lds
lret
jne
imul
mov
inc
mov
int3
cmp
jle
mov
enter
vunpckhps
shl
iret
inc
xor
mov
stc
lds
push
imul
add
repz
dec
cld
lods
and
jbe
repz
negl
push
jne
inc
pop
repnz
and
sbb
inc
insl
or
and
inc
loope
cmp
inc
inc
mov
push
sub
ja
outsb
ret
call
and
xlat
fldl
lss
xchg
adc
push
leave
lcall
addr16
push
lcall
xor
repz
out
jne
jmp
jb
mov
adc
and
xchg
fwait
mov
dec
js
fiaddl
test
dec
ds
and
sub
les
push
loop
push
push
mov
fwait
imul
icebp
nop
pop
cmp
test
xchg
add
lds
lcall
and
movsl
insb
dec
repz
push
jp
push
insl
cmc
leave
mov
adc
add
ja
imul
cmp
out
mov
xor
mov
push
ror
dec
pop
adc
ficompl
daa
push
and
adc
cmc
jns
stos
mov
mov
movsb
loopne
imul
mov
cmc
test
aas
mov
sub
faddl
pop
push
imull
mov
jae
jmp
xchg
das
icebp
cli
xchg
sub
mov
mov
notb
mov
sub
pop
jae
rep
xchg
imul
fs
repz
movl
ds
add
cli
push
jmp
cmc
mov
stos
pop
es
inc
mov
and
adc
inc
dec
mov
insl
call
stc
jmp
inc
hlt
leave
push
dec
popf
cmpsb
into
jo
in
or
cmpsl
cmp
mov
outsb
xchg
mov
daa
iret
das
mov
test
lret
jb
mov
xchg
shrb
outsl
ss
sub
dec
loopne
out
add
dec
mov
mov
ja
sub
dec
or
pop
mov
or
or
inc
icebp
jecxz
cmp
jno
mov
ds
mov
lahf
push
stos
and
sti
or
mov
sarb
stc
mov
sbb
or
add
out
cld
stos
jl
push
xor
es
push
imul
inc
insb
lahf
lock
mov
push
fsub
inc
fcoms
mul
iret
dec
lret
lods
xchg
repz
test
xor
mov
icebp
push
shl
mov
sub
xchg
sub
pop
cmc
mov
jl
pop
cmp
pusha
mov
shll
mov
lock
add
add
lds
push
sti
xchg
inc
inc
lods
fildl
add
cmpb
dec
fwait
lahf
jge
add
dec
fstps
test
cmp
aaa
aad
stos
add
in
jp
pushf
cmp
das
das
push
mov
aaa
jns
mov
sbb
xor
bound
adc
jge
or
push
cmpsl
andl
sbb
mov
imul
inc
nop
jnp
fdivrp
test
jp
negb
or
or
dec
lcall
and
ss
jne
and
je
push
ror
mov
add
mov
gs
int
jecxz
and
push
xchg
or
sbb
push
sbb
leave
jae
cli
xchg
in
xor
lret
mov
xor
inc
lea
mov
add
adc
lret
les
rorb
ljmp
mov
mov
sub
cmpsl
mov
pop
fisubrl
cs
js
dec
mov
pop
lahf
inc
test
call
cmp
and
aas
add
xchg
push
xchg
mov
repz
mov
clc
add
mov
or
pop
ret
adc
out
sti
sbb
rorl
xor
addr16
lods
jne
dec
or
and
jns
in
mov
outsb
add
xchg
imul
add
push
inc
pop
aad
xchg
sbb
cmc
inc
xlat
fists
pop
adc
pop
or
lods
cmp
in
movsl
adc
push
xor
lret
mov
lods
or
jp
sbb
dec
iret
adc
ss
add
popa
and
add
mov
push
in
jnp
and
imul
xor
stos
xchg
mov
mov
xchg
popa
and
loopne
nop
sbb
sub
jo
pop
push
dec
es
xchg
jp
test
sarl
mov
sbb
jmp
mov
out
push
enter
pop
fucom
push
in
mov
fdivl
xchg
xlat
outsb
sub
sbb
cmp
shl
pop
fisttpll
lods
aam
sbb
cmpsb
mov
lods
xchg
adc
mov
xor
cmp
cmp
stos
ret
xchg
addr16
xchg
in
lea
adc
xchg
bsr
adc
jo
roll
paddsw
insb
stc
push
xchg
add
es
cmp
fsubs
sti
outsl
jno
stos
and
dec
pop
push
inc
push
inc
out
xchg
inc
test
fsubl
mov
shr
add
sub
repz
leave
imul
bound
arpl
scas
adc
andb
inc
xor
or
lea
pop
imull
sub
jns
arpl
jbe
lea
lret
mov
hlt
xor
xor
insb
lcall
xor
lods
cwtl
mov
or
sub
sbbb
movsl
lret
mov
cmp
in
ljmp
push
hlt
cmp
cmp
dec
leave
jl
vpunpckhqdq
and
or
xor
pushf
fistpll
sbb
xor
push
loopne
jmp
leave
insl
std
push
xchg
xchg
mov
mov
xor
dec
and
inc
push
or
dec
cmp
ret
ret
mov
scas
fiaddl
mov
sub
outsb
add
out
ja
pop
repnz
mov
rorb
adc
mov
aas
les
push
shlb
jno
mov
into
popa
sub
sarb
pop
mov
subb
dec
loope
and
add
add
call
shrb
lds
call
xor
into
data16
call
lcall
std
adc
or
inc
stos
ftst
mov
das
in
jb
jle
jecxz
sub
ficomps
leave
test
subps
adc
inc
pop
cmp
into
aas
dec
pop
xor
mov
dec
inc
mov
jecxz
push
pushf
and
je
in
add
push
jne
stos
xor
mov
mov
std
mov
ljmp
and
mov
jno
fldl
cmp
movsl
cmp
add
mov
in
fs
inc
gs
jbe
sub
out
clc
xchg
subl
scas
adc
ljmp
jo
pop
lea
jbe
icebp
xor
cmp
xchg
sbb
mov
mov
push
push
je
and
xor
movsl
dec
mov
fcompl
cmpsl
cmpsb
pushf
fdivrs
adc
mov
test
aas
sbb
mov
and
stc
xchg
cmpsl
repz
xchg
in
add
mov
insl
scas
cmp
mov
xorb
xor
pop
icebp
jb
sub
push
les
and
mov
pop
imul
aam
and
les
mov
testl
mov
inc
dec
in
sub
mov
push
pop
mov
mov
and
pop
sti
jb
inc
jno
cmpsb
enter
adc
inc
je
fnstsw
pop
xor
mov
inc
push
pop
sahf
aas
fs
jb
dec
pushf
call
aam
scas
ret
pop
mov
nop
rolb
pushl
test
push
xor
xchg
outsl
mov
ret
jmp
xchg
jmp
pop
cltd
xchg
jge
pop
mov
movsb
pushf
shlb
ficoml
push
sahf
test
jnp
and
pop
push
dec
sub
popf
jg
cmpb
daa
in
dec
das
xchg
sar
xchg
fdivs
push
cmp
stos
cli
jge
mov
stos
jnp
fdivl
jb
stc
cmc
push
push
daa
jbe
push
dec
int
scas
leave
arpl
or
pop
add
mov
pop
gs
sub
mov
dec
pop
mov
bound
gs
stos
cwtl
jg
movsb
aad
lock
test
out
ret
lcall
lea
stc
loope
lahf
mov
or
ljmp
jle
js
sbb
ss
inc
and
push
pushf
and
jl
enter
or
pop
loopne
jns
xor
push
enter
cmp
mov
sub
loop
test
or
mov
mov
mov
scas
push
jle
xor
call
leave
out
sti
push
cltd
mov
push
jge
and
rcl
or
sbb
jg
insb
into
ficoml
add
stos
adc
pop
and
mov
in
push
inc
fs
lods
jmp
xlat
cli
test
mov
fisubl
inc
cmp
sbb
lock
xchg
xor
iret
or
jle
or
dec
add
sbb
jp
xchg
cmp
mov
cwtl
adc
xor
mov
push
cmp
cmp
je
pop
mov
add
inc
sbb
shrl
cmp
mov
addr16
je
nop
xchg
out
dec
out
and
mov
pop
popa
xchg
inc
mov
imul
movsl
push
jno
lahf
inc
inc
cs
fwait
in
adc
mov
and
fcmovne
jmp
mov
cltd
ret
stc
xor
mov
mov
xor
jns
in
mov
call
aaa
sbb
sahf
rcrb
mov
xor
daa
scas
std
and
rcrb
xlat
pop
hlt
mov
sub
ljmp
pop
mov
lds
lret
outsb
loope
or
add
or
and
cmpsb
sbb
adc
add
jns
add
add
sbb
sbb
in
lods
fdivs
push
fs
or
push
lahf
and
and
cld
loopne
mov
jb
imul
out
mov
cmp
icebp
jp
testb
push
outsb
out
int3
shlb
adc
fsts
pop
jb
jno
mull
ret
in
and
scas
mov
push
push
fsub
out
adc
ja
popl
lahf
rclb
addl
pop
or
repnz
inc
pop
out
push
inc
ljmp
imul
cld
and
cmp
scas
cmc
cmp
inc
les
enter
jo
mov
adc
pop
inc
int
ror
cs
sbb
mov
mov
int
jecxz
xchg
cwtl
mov
addr16
insl
nop
mov
dec
scas
push
scas
in
or
fistl
andb
push
leave
and
testl
adc
sbb
stos
cs
push
jo
inc
inc
popa
sbb
jo
sti
inc
pushf
sbb
mov
inc
ss
repz
rorl
xchg
sub
cwtl
push
push
or
or
scas
cmp
adc
lahf
daa
pop
xchg
jp
les
shrb
cmpsl
loop
sbb
dec
imul
xchg
mov
js
rorl
sub
out
test
push
pop
mov
in
or
pop
push
dec
dec
loope
and
rorl
add
lock
in
xlat
push
lock
mov
mov
fisubs
dec
mov
cmp
ret
mov
xchg
lret
fxam
mov
inc
jo
push
iret
es
mov
mov
sub
clc
dec
xchg
pop
inc
cwtl
sub
sbb
mov
cmpsl
ja
insb
imul
lods
push
push
and
push
or
adc
add
test
mov
push
loope
popa
add
pop
adc
fdivp
ds
gs
add
dec
enter
inc
lods
test
sub
hlt
sbb
mov
sti
test
cli
sbb
cmpsb
inc
mov
sbb
addr16
lods
push
popa
imul
mov
adc
jo
pop
mov
int3
jnp
sub
ret
mov
bound
ret
cli
inc
mov
mov
bound
jbe
lahf
jg
rcr
push
aam
mov
pop
pop
xor
xchg
dec
cmp
aam
mov
xor
test
std
insl
pushl
cmp
aam
mov
jmp
mov
inc
mov
mov
out
push
sub
mov
lahf
pushf
mov
addr16
sub
mov
cmpsb
and
nop
inc
test
xor
cmp
aad
fdivl
in
std
cmpsl
aaa
stos
add
aad
xchg
mov
pop
cmpl
lcall
xorl
sbb
cmp
mov
icebp
mov
pop
xsha1
cmpsb
mov
loopne
outsl
test
xor
fwait
cli
cmp
les
hlt
xor
fwait
cmp
mov
sub
pop
adc
test
movl
bnd
sbbb
cmp
and
mov
insl
popf
stos
orb
stos
or
sbb
pop
test
out
pop
sub
out
mov
and
add
andl
aam
mov
loopne
xor
stos
inc
and
fwait
xchg
dec
dec
push
sub
xor
sarb
sub
sti
pop
push
dec
out
pop
push
add
mov
xor
and
mov
mov
inc
icebp
push
cs
clc
imul
aam
pop
add
daa
cmp
add
cld
std
and
push
sub
cmp
mov
pop
or
call
pop
rcrl
in
mov
stc
lret
mov
inc
stc
jl
test
or
push
incb
arpl
sbb
pop
dec
rorl
lds
xor
xchg
nop
aaa
push
mov
cmpsb
xchg
sbb
lcall
iret
add
sbb
aad
inc
xchg
jns,pn
out
sahf
pop
ret
movsb
inc
pusha
stc
fs
sub
add
lds
pop
out
js
push
testb
dec
and
push
xor
fldenv
rcrl
sub
pop
mov
pop
hlt
lret
test
mov
mov
rcll
pop
inc
cmpsb
ja
jo
hlt
dec
cli
xchg
outsl
jns
sbb
sbb
jne
mov
popa
clc
data16
xor
mov
xor
xchg
cmp
push
jne
cmp
mov
pop
mov
fidivl
pop
add
sbb
dec
pop
scas
cmp
mov
out
sarb
cwtl
add
sbb
jno
or
inc
pop
sub
aam
push
sub
pop
jno
fs
inc
add
mov
popf
dec
int
mov
mov
jecxz
jg
fcmovnbe
push
stos
add
ret
jle
mov
lods
and
int
pop
or
enter
and
sbb
xor
inc
cwtl
pop
jg
jns
scas
mov
pop
jle
dec
jge
dec
shr
pop
jecxz
pop
xor
push
vpextrw
lds
push
rorl
or
push
repnz
jo
xlat
jae
test
xchg
push
sarb
insb
aaa
pop
imul
sub
pop
fisubrs
in
cmpsl
loope
and
aas
add
xchg
je
xlat
inc
mov
lock
xchg
or
mov
and
jae
mov
jle
mov
cmpsl
stos
add
xor
aam
inc
pop
jle
imul
out
out
insl
jno
adc
jno
test
rcl
shll
icebp
icebp
ds
loopne
xchg
jns
or
sub
std
out
and
mov
js
pop
mov
subb
sbb
ret
jg
jno
sbb
adc
lahf
fistpl
dec
lock
dec
mov
inc
data16
adc
xor
aaa
mov
lcall
mov
mov
push
ret
int3
and
inc
fidivs
scas
js
and
sub
jo
xor
push
inc
xchg
gs
cmp
repnz
inc
mov
xor
arpl
mov
loopne
cmp
mov
aam
decb
rcll
shrl
or
icebp
mov
dec
jecxz
mov
push
jne
insb
add
sahf
sti
mov
or
pushf
and
mov
ss
fsubrs
aaa
jo
push
jge
and
xchg
cld
addb
iret
in
add
pop
mov
xchg
out
pop
inc
in
enter
pop
movsb
xchg
xchg
dec
aas
push
xchg
mov
popf
xor
addr16
fs
pop
into
adc
loop
das
jl
fmul
movsb
mov
and
enter
fisubl
mov
and
mov
aam
jge
sub
shll
insl
ds
mov
jbe
or
dec
mov
adcl
sbb
push
adc
fnsave
call
cs
mov
ljmp
dec
jne
mov
mov
or
sarb
xchg
dec
repz
adc
aas
loop
filds
fdivl
pop
ja
or
scas
sub
out
mov
outsb
push
cs
xchg
maxps
dec
dec
sbb
xchg
es
adc
and
das
adc
dec
cwtl
cmp
and
push
insl
lods
pop
rcrb
lods
call
mov
sahf
or
repnz
xlat
pusha
js
insb
jl
es
xchg
fbld
cmpsb
and
aas
cmp
dec
dec
shrl
inc
out
in
hlt
std
or
jbe
jle
mov
mov
mov
add
pop
aaa
dec
dec
in
mov
and
gs
fldt
in
pop
lods
sbb
jne
jle
out
adc
neg
stos
ds
iret
inc
inc
cmp
lds
nop
push
cld
xchg
sbb
jle
movsb
push
pusha
lock
xchg
test
sub
add
popw
lret
mov
mov
push
adc
cmp
call
jb
imul
in
inc
push
lcall
inc
sub
lret
loop
sbb
jno
pop
fsubrl
cmc
and
mov
mov
adcb
shlb
bndldx
jno
data16
lods
xchg
xchg
idiv
add
mov
fsts
mov
sub
outsl
xchg
cmp
add
lret
stos
jmp
ret
push
movsl
push
sub
in
test
mov
xchg
push
xchg
lods
xorb
adc
adc
fistpl
cmpb
stc
loop
pop
lret
neg
xor
push
lea
les
dec
out
inc
leave
int
xchg
stos
outsl
cmpl
mov
and
scas
hlt
dec
jbe
jae
test
daa
pop
inc
mov
icebp
push
bnd
cmp
cwtl
jge
loop
movsb
lret
iret
push
in
inc
lock
hlt
add
call
or
add
loopne
imul
scas
inc
mov
adc
stos
sbbb
movsb
imul
mov
xor
sub
fisubs
push
out
inc
add
and
jl
faddl
dec
js
lret
dec
add
jnp
fisubs
fstpl
push
dec
sbb
mov
push
sub
imull
rcl
fcomip
leave
test
adc
sub
sub
pushf
pop
sbb
clc
test
mov
bound
pop
fs
push
and
test
xor
mov
sarb
pusha
push
and
push
or
stos
push
xlat
mov
pop
fcompl
mov
test
xchg
add
sub
jg
pushl
push
xchg
dec
lods
lcall
pusha
out
xchg
lcall
xchg
mov
shlb
or
xchg
cmp
xchg
out
icebp
enter
mov
sub
inc
testb
jns
in
inc
repnz
jecxz
scas
lahf
les
mov
mov
ret
in
jb
mov
cmp
dec
loopne
hlt
jp
pusha
and
out
jns
shl
out
leave
pusha
mov
or
pop
jge
scas
add
inc
mov
stos
jmp
fldl
adc
mov
push
shl
in
pop
enter
movl
adc
add
xchg
push
pusha
xchg
pop
arpl
jbe
cmpl
push
jae
push
movsl
aaa
cmp
cltd
rcl
pop
mov
xor
je
or
sbb
cmc
faddl
out
dec
stc
addr16
cmp
lahf
cli
mov
mov
lea
in
leave
out
jge
inc
ror
inc
daa
push
lock
in
mov
jle
test
ret
push
sti
rclb
in
jns
movsl
inc
pushf
adc
and
into
mov
add
xchg
sbb
sub
xor
cmc
shlb
sarl
in
nop
push
in
test
pop
lds
rcrl
mov
or
mov
psrlw
into
push
pop
jbe
xor
aam
cmc
loop
xor
add
cmpsl
mov
or
jns
outsl
stos
mov
mov
or
into
ja
in
sub
fsubp
cmp
xor
out
or
pop
cmp
jnp
fsubr
pop
ljmp
dec
and
dec
pop
aam
push
imul
xor
pushf
and
add
dec
pop
cli
cli
in
je
nop
xchg
pop
hlt
enter
add
ljmp
or
fdivrs
mov
movsb
jno
mov
test
mov
gs
add
cmp
mov
sbb
or
mov
cmp
rclb
fisttps
popa
and
cmp
jle
or
and
out
add
int
sahf
jecxz
test
or
xor
call
leave
cmp
fstpl
in
mov
inc
cmp
nop
je
test
je
and
repnz
xchg
stos
mov
or
dec
in
rorb
into
dec
call
mov
imul
inc
movsb
js
in
sub
or
or
test
xlat
fdivs
outsl
push
das
sub
stc
aaa
fimull
iret
pop
das
add
adc
mov
leave
mov
add
in
cmp
pushl
push
aas
push
mov
inc
les
mov
push
add
subb
mov
sbb
ja
mov
push
nop
fstpl
jle
cmp
movsb
jns
pop
sub
stc
sti
dec
movsb
fwait
lods
into
test
loope
scas
popa
sbb
roll
mov
imul
cmp
fldt
sub
call
test
mov
jp
data16
in
jmp
sub
leave
mov
adc
ljmp
or
jecxz
sub
cs
popa
push
jnp
pop
xor
dec
pusha
mov
lds
jae
and
jmp
ljmp
pusha
add
add
repz
insb
add
out
xor
dec
pop
sbb
mov
repz
jne
and
dec
addr16
icebp
push
mov
cs
mov
adc
pop
push
bound
dec
ja
push
sub
pushf
js
lds
push
mov
or
sub
js
nop
cmp
adcl
enter
mov
lods
imul
sahf
sti
sarb
mov
lea
stos
dec
out
xchg
push
xchg
inc
adc
arpl
fstl
sub
push
in
test
push
cmp
shl
fnstenv
sbb
jecxz
aas
leave
nop
call
dec
sub
ja
fsubrp
cmp
sub
inc
dec
js
lea
test
outsl
jp
stc
roll
mov
inc
xor
adc
mov
fdivrl
iret
stos
test
in
ja
push
xor
insl
jge
cs
mov
pop
rcrb
jle
andb
bound
dec
cmp
jb
dec
inc
popf
mov
sbb
iret
orl
in
mov
cmpb
lods
cmp
lock
mov
mov
scas
iret
outsb
in
xor
arpl
add
push
pop
in
pop
fld
xor
cmp
cld
xchg
pop
cmpsb
clc
pusha
sub
pusha
in
stos
adc
xor
mov
enter
leave
mov
jne
fidivrs
jle
pop
scas
mov
aam
test
enter
mov
sub
sbb
dec
push
inc
xchg
push
mov
ljmp
add
pop
out
mull
xchg
inc
xchg
sahf
jne
xor
shl
jo
imul
or
push
cltd
sub
push
pop
cli
lods
jg
jne
sbb
aad
pop
ret
fwait
and
xchg
xor
mov
xor
xchg
mov
fbstp
lods
fcmovb
jbe
es
xchg
push
cmpsb
hlt
push
imul
ret
inc
xor
rcrb
inc
dec
add
cmp
test
das
ficoms
test
daa
sbb
dec
fbstp
icebp
out
dec
imul
adc
mov
ret
bnd
adc
sbb
mov
arpl
sarb
hlt
call
mov
dec
add
jp
nop
push
imul
je
sbb
mov
inc
xor
push
lret
add
or
outsb
in
dec
repnz
xchg
add
bound
jns
lahf
xchg
sub
jle
gs
iret
pop
pop
icebp
dec
out
aad
pushf
mov
cmp
push
pusha
mov
test
sbb
test
mov
out
push
jb
movsb
mov
rol
sbb
div
sahf
imul
cmp
jecxz
or
mov
or
mov
add
call
mov
jno
stos
xlat
or
int3
inc
adc
pushf
decl
out
jp
sbb
les
jo
push
icebp
inc
cmc
mov
push
jmp
cmp
jg
or
cmp
sbb
pop
lcall
into
pushf
mov
mov
jmp
add
xchg
in
stc
aaa
inc
in
add
andb
orl
ljmp
xchg
mov
ret
into
adc
pushl
xor
js
pop
imul
dec
add
push
cmp
xchg
cwtl
outsb
push
insl
sbb
daa
icebp
adc
addr16
sahf
in
mov
mov
loopne
xchg
xlat
scas
roll
sbb
lahf
and
shll
add
jle
loopne
xchg
adc
inc
mov
sbb
fisubrl
cmp
pushf
xor
push
sub
dec
ja
dec
movsb
sarl
jecxz
popf
enter
sbb
mov
loopne
cmp
daa
push
jmp
sarb
cmpsl
sbb
loopne
dec
movsl
xor
bound
push
out
sub
pop
js
mov
lods
incl
out
dec
out
xchg
push
jo
movsl
in
stos
inc
arpl
sbb
dec
xchg
inc
cmovbe
pop
xchg
and
push
sub
cmp
stos
test
push
cmpsb
loopne
fwait
jge
out
pop
jns
jns
stc
mov
sub
add
divb
or
dec
insb
aam
ret
mov
js
movsb
in
jge
cmp
in
nop
stos
inc
pop
dec
fs
repnz
cmpsb
jecxz
mov
aam
mov
xchg
daa
mov
inc
adc
enter
cmpl
cmp
or
cmp
mov
push
ds
shll
push
jnp
int
cmpsb
lock
push
in
or
lahf
mov
sbb
iret
mov
stc
mov
shll
xchg
int3
mov
mov
ret
jmp
lds
cmp
push
pop
sbb
dec
pusha
dec
movsl
jno
xchg
jns
adc
testl
pop
loopne
nop
and
inc
lds
mov
jl
jb
fdivs
add
das
and
repz
cld
in
cmpsb
sbb
xor
xlat
cli
lahf
divl
mov
or
sbb
dec
xchg
or
notl
push
dec
mov
ds
leave
push
mov
xor
push
xchg
je
inc
mov
aas
or
mov
mov
testb
pop
or
jbe
or
or
mov
cwtl
cmp
add
inc
mov
mov
xchg
jecxz
ficoms
xchg
addr16
mov
push
popf
lret
adc
push
push
ljmp
push
push
pushf
in
push
cmp
mov
mov
fmull
mov
jns
pop
repnz
inc
add
mov
push
iret
data16
pop
loopne
and
lea
xor
adc
lods
mov
jno
sbbb
sub
adc
jae
and
pop
dec
cli
or
js
pop
mov
sbb
lea
out
xlat
inc
mov
lds
fmuls
rcrb
mov
and
dec
loopne
aam
push
push
cmp
and
sbbl
inc
rcl
imul
outsl
imul
or
mov
mov
mov
dec
bound
add
ja
push
gs
mov
or
test
dec
xchg
aas
outsb
incl
stos
inc
cmp
push
mov
addl
cmp
mov
repnz
push
xor
jo
cmp
lods
imul
push
xor
cmp
imul
nop
insl
loopne
mov
cmp
mov
mov
sti
sub
nop
sbb
inc
stc
xor
lock
jbe
mov
incb
cmpsl
shlb
add
add
mov
jno
or
push
jg
in
test
pop
cmp
fisttps
sbb
mov
scas
in
out
push
shrl
dec
in
movsl
cmp
pop
sub
push
mov
outsb
mov
mov
cmp
inc
cmpsl
ds
jge
mov
icebp
lds
cmpsb
sbb
adc
insl
mov
popa
fsubr
jp
out
sbbl
pop
add
bound
les
daa
enter
mov
jbe
sbb
test
repnz
mov
lods
lret
jg
adc
sarl
xor
mov
jle
or
and
stos
rcrb
dec
push
stos
mov
cld
popl
movsb
outsb
loope
aas
dec
xchg
adcb
or
push
push
jecxz
pop
mov
mov
ret
sub
in
mov
cmp
fisubrl
jbe
icebp
inc
push
inc
cmpl
or
jo
popa
sub
push
notb
jg
sbb
in
lea
or
add
mov
inc
mov
jb
xorb
gs
addb
xchg
shrl
adc
add
fisubl
xchg
stc
inc
test
ljmp
sbb
adc
mov
cmpl
add
mov
lea
or
xchg
pop
add
pop
xor
pushf
scas
pop
lcall
mov
xchg
jns
int3
mov
daa
clc
data16
addr16
aaa
mov
fbstp
mov
add
mov
mov
adc
stos
stos
mov
inc
fwait
dec
push
and
push
out
aas
mov
and
rolb
push
lods
cmp
leave
pop
push
push
jl
adc
outsl
lret
push
out
push
mov
pop
jne
jmp
mov
ficomps
fwait
jb
es
push
lea
jb
jno
fistpl
xchg
xchg
rorb
sbb
in
xor
outsl
out
pusha
rcrb
stos
push
mov
xchg
andl
iret
popf
xor
inc
mov
jns
adc
jg
mov
filds
adc
cmp
push
fs
pusha
in
fsubrs
xchg
insl
lret
in
pop
ret
leave
mov
inc
stos
xor
dec
cmp
test
icebp
xchg
std
lods
rcr
imul
cmpsl
push
push
push
pop
adc
movsl
cltd
or
inc
stos
or
lock
nop
push
pusha
das
popf
mov
rorl
bnd
sbb
dec
lahf
push
clc
and
fildl
cmp
inc
shrb
xor
stos
mov
mov
pop
xchg
pop
popfw
cmp
inc
or
cmp
ss
push
negl
mov
lret
lds
in
push
xlat
push
inc
into
mov
dec
sub
fisttpl
lods
sbb
adc
pop
pop
jb
loope
add
cmp
xchg
adc
aas
jl
cmp
adc
inc
in
jge
jae
enter
push
or
mov
pop
stos
inc
cmp
inc
fs
nop
push
inc
repnz
int
mov
mov
fildl
mov
js
sahf
test
scas
push
call
int3
inc
hlt
mov
mov
inc
fs
in
not
mov
daa
fistps
adc
push
int3
pop
adc
bnd
leave
sti
mov
out
xor
pusha
bound
xchg
test
push
and
push
aas
les
mov
imul
stos
dec
pusha
ss
sub
jle
insb
jmp
adc
jb
cld
xor
fldenv
cwtl
add
shlb
stos
cwtl
das
fstl
jle
int3
jge
jp
dec
sub
sahf
add
jbe
in
cmpsb
cmp
jl
fcmovu
push
push
fiadds
pop
jmp
fstps
inc
cli
fwait
adc
jbe
sbb
fscale
pop
dec
sub
xor
lcall
jns
push
push
push
adc
mov
int
push
inc
mov
dec
imul
fcomip
adc
dec
and
push
insl
aam
stos
dec
lods
pop
int
shll
pop
mov
dec
dec
push
insl
lret
cmp
repz
fidivs
mov
push
push
loopne
cmp
pop
push
jns
pushf
pusha
repz
sarb
cltd
push
mov
xchg
cld
fldenv
adc
mov
cld
jecxz
adc
xor
out
pop
imul
scas
inc
in
adc
sub
jmp
xor
jae
jno
fadds
fs
sbb
fidivrs
or
aaa
outsl
cmp
pop
decl
dec
iret
mov
xor
pop
mov
push
test
xor
mov
inc
negl
mov
add
pop
lds
xchg
stos
std
push
jne
mov
test
xor
aad
ss
mov
incb
sbb
cli
mov
mov
or
xchg
dec
sub
sbb
sahf
pop
jo
out
ret
pop
and
pop
adc
lods
sbb
mov
xlat
mov
pop
jbe
cmp
fstps
into
es
mov
and
mov
push
sbb
in
add
and
xor
nop
sbb
sbb
test
ja
pop
mov
ret
loope
hlt
xchg
mov
mov
aam
ficompl
adc
and
sbb
imul
adc
in
adc
inc
out
mov
xchg
lea
mov
mov
inc
aas
adc
xchg
loope
push
or
mov
xor
jle,pn
add
lret
pushf
adc
sub
push
imul
das
fsubr
rclb
mov
aam
inc
xchg
rcrl
xor
popa
fistpll
xchg
or
push
push
iret
mov
xchg
mov
addb
sub
adc
outsl
stos
in
xchg
adc
movsl
xor
out
test
jle
inc
popa
hlt
lds
push
js
test
cmpsl
idiv
pop
jp
aad
cmp
pop
shlb
outsl
cltd
cmp
ret
or
fiaddl
ds
dec
and
mov
push
movsb
and
insl
jge
adc
or
sbb
jmp
fmuls
mov
jmp
dec
scas
cmc
mov
mov
vmfunc
cs
idivl
leave
lret
icebp
add
lcall
pop
pop
leave
aas
pop
clc
mov
js
ficoml
jge
pop
cmp
push
jbe
push
xchg
mov
jp
lods
scas
push
sbb
pushl
cltd
and
shrl
aam
mov
add
cltd
scas
xchg
xchg
mov
repnz
xor
xchg
jle
pop
pop
mov
rcrb
push
push
out
adcb
imul
lret
arpl
sub
mov
sub
sub
sbb
dec
int
imul
and
pand
repz
adc
inc
push
cli
test
mov
jg
dec
cmpsb
push
cmp
xchg
cmc
sti
sub
std
pop
je
xor
push
xor
mov
mov
hlt
xor
lahf
fstpt
les
jmp
ja
mov
cmc
pop
push
or
inc
cli
mov
aaa
cs
dec
mov
xlat
ror
mov
fcom
fbstp
call
int
ljmp
stos
or
in
dec
ficompl
mov
mov
bound
ds
lds
cmp
sbb
xchg
cmp
jle
pop
mov
pop
jb
mov
add
das
outsb
and
sti
jb
inc
jbe
push
test
jae
cltd
arpl
push
mov
xchg
outsb
sahf
sub
push
cli
lahf
outsb
lret
cmpl
and
jae
in
xchg
mov
xchg
or
dec
sbb
xor
jmp
inc
loopne
mov
push
and
lock
cmp
push
pop
repnz
mov
add
jl
xlat
pop
mov
call
subb
fdivrs
lock
jl
xorl
stos
adc
sub
adc
or
pop
ljmp
in
cmp
aaa
mov
fcom
cmp
push
lret
mov
mov
roll
jnp
cmp
pop
sahf
out
pop
outsl
jge
push
xor
xchg
pusha
add
insb
mov
push
push
dec
cmp
jl
pop
lret
pop
popf
pop
insb
dec
imul
lods
pusha
or
mov
shld
sti
jl
inc
mov
inc
pop
sub
pop
nop
ret
jo
pop
mov
add
sbb
pop
sbb
insl
scas
cmp
mov
push
out
call
and
aad
inc
shrb
sti
pop
rorb
in
mov
icebp
inc
popf
fiaddl
or
pusha
mov
xchg
ja
ds
ficoml
push
xor
sub
jge
insb
aam
fmuls
stos
stos
nop
sub
xor
pop
dec
jg
xor
pushf
jns
xchg
xlat
rcl
add
sub
hlt
imul
insb
daa
imul
addb
scas
push
lock
jge
nop
add
mov
stos
test
cmp
fld
loope
stos
mov
iret
dec
lahf
ss
add
in
jecxz
and
fs
pop
mov
pop
mov
in
cltd
dec
fmul
jp
jnp
cs
dec
inc
lds
arpl
shr
into
sbb
fpatan
pushf
jecxz
outsb
hlt
or
xchg
add
sbb
dec
xor
mov
inc
stc
xchg
jl
add
jmp
ret
lds
insb
shlb
dec
sti
mov
mov
stc
inc
test
jl
mov
in
ljmp
cld
cltd
jle
ficomps
movsl
sub
jl
and
jge
cltd
pop
jno
dec
cs
jne
repnz
icebp
sub
jle
xor
addr16
daa
xchg
jnp
cmc
es
jp
fistps
out
mov
and
incb
cmpsb
jno
and
add
pop
repz
jmp
lret
jne
xor
addl
out
pop
inc
fistps
jg
mov
push
add
sti
nop
std
scas
outsb
xchg
add
leave
adc
or
pop
adc
jo
push
movsb
pop
leave
pusha
mov
es
xchg
mulb
js
mov
pop
xor
in
addr16
xchg
jns
jns
jle
pop
mov
ret
imul
xchg
movsl
lahf
ret
rolb
pop
sub
fcmovnu
pop
xor
sub
out
ljmp
aaa
lock
and
and
adcl
sbb
int3
ja
repnz
xchg
jae
in
mov
test
push
jne
sbb
mov
add
test
cmp
in
mov
leave
sub
or
aas
scas
fstpl
pop
and
push
jo
stc
or
daa
popa
clc
jle
aam
loope
cli
test
and
aas
mov
lret
mov
lock
inc
inc
push
xchg
dec
jecxz
rorb
push
fwait
sbb
jle
jo
and
xchg
loopne
push
push
fsubl
mov
mov
arpl
addr16
cltd
inc
sahf
or
and
xchg
ret
outsb
push
xchg
lcall
and
in
push
iret
rclb
cmp
lds
fdivrl
mov
mov
scas
jl
jbe
fdivrs
inc
clc
sub
and
adc
xor
test
add
repz
and
ret
out
push
js
lods
pop
mov
fldenv
or
or
ficoml
testb
movsb
mov
movsb
pop
dec
ficoml
outsl
sbb
xchg
lret
mov
xor
aaa
iret
and
movsl
notb
mov
jae
js
inc
pop
aaa
movl
bnd
popf
sub
shrb
in
mov
popa
lock
dec
test
fisttpll
loope
rclb
sub
dec
aas
or
push
xchg
in
mov
mov
and
data16
lods
jg
orl
jbe
iret
sbb
shll
inc
inc
and
dec
jecxz
push
add
in
test
push
sbb
cmc
xor
psadbw
subb
or
xchg
insl
jg
or
sti
fwait
aam
inc
or
ds
dec
pop
lock
popa
or
sbb
and
sub
dec
jecxz
jp
mov
dec
xchg
mov
std
xchg
lret
shr
cld
mov
test
test
push
call
xchg
sbb
cmpb
dec
mov
jl
push
bound
loop
lods
aad
push
xor
mov
dec
cmp
pop
ds
cmc
dec
jl
or
movsb
arpl
shr
pop
sub
int3
inc
notl
push
fsubp
ja
test
imul
loope
loop
push
pop
cmc
mov
rorl
lcall
and
stos
hlt
xor
add
fadds
fiaddl
aam
insb
repz
adc
aam
xor
stos
jp
pushf
xor
pop
icebp
in
sbb
cli
ficomps
pop
sbb
dec
imul
sub
movsl
insl
leave
xchg
adc
popf
int3
out
push
mov
xor
and
imul
xchg
popa
int3
fldt
popa
add
imul
mov
jg
xchg
dec
arpl
mov
sbb
push
je
or
data16
cli
jecxz
stos
insl
sbb
int
cmpsl
das
imul
add
lods
int3
xchg
mov
push
loopne
dec
sub
dec
pop
sub
cmpsb
cmc
dec
pop
out
ret
sar
stos
cmp
dec
test
loopne
jle
xchg
cmp
jno
add
mov
test
stos
outsl
idivl
mov
xchg
out
add
es
sti
popf
ss
iret
sbb
and
dec
enterw
lds
mov
pushf
inc
movsb
fdivl
std
add
cs
push
pop
aam
jg
push
icebp
dec
mov
add
xchg
add
sub
sub
dec
cwtl
dec
stc
mov
mov
arpl
test
xor
and
add
push
daa
jne
sbb
popf
fldenv
pop
xlat
in
or
in
lods
jge
push
push
mov
lcall
and
es
cld
test
stos
dec
add
pusha
imul
lea
es
and
fdivrp
mov
aaa
inc
cmp
jae
fwait
lods
int
rcl
push
add
xchg
in
lds
push
dec
adcl
dec
cli
jne
or
add
ss
pop
icebp
push
add
jge
rcl
cwtl
out
jg
lretw
pop
dec
cmc
arpl
cmpl
in
jb
jnp
daa
adc
je
out
xchg
pushf
adc
aas
mov
ret
sbb
lock
cmp
jg
dec
lds
push
sbb
sub
stos
xchg
cmpsl
pop
int3
push
sub
push
in
pop
fstpl
lahf
fimull
mov
push
int
dec
bound
iret
movsb
test
fadds
loop
into
or
out
cmp
xchg
call
sbb
jno
push
jnp
mov
loop
jno
insl
add
test
and
out
mov
in
jle
push
jg
lods
mov
fdivrs
xchg
adc
sar
lea
es
pop
bound
cmp
or
push
push
test
fdivs
mov
clc
xchg
and
or
movsl
cld
sbb
shrb
mov
std
cmc
cmpsb
cmpsl
fcoml
pop
pop
lahf
ss
stos
outsb
loope
jnp
mov
add
mov
out
sub
insl
jg
inc
xor
divb
sub
andl
js
testb
mov
or
sahf
mov
lock
sub
lahf
outsl
inc
out
jl
shlb
xor
out
test
adc
add
jp
xor
aad
push
jp
dec
and
xchg
add
in
xor
cmp
test
add
jmp
cmpsl
mov
push
cmp
orl
mov
fsubrl
repnz
iret
xchg
adc
orb
or
gs
xchg
test
mov
sbb
xchg
adc
testw
pop
insl
pusha
pop
push
insb
jae
mov
mov
xor
into
adc
lret
popa
outsl
mov
outsl
push
call
and
and
pop
cmp
add
mov
mov
les
mov
or
dec
dec
sbb
jo
xor
dec
and
adcb
cmp
and
push
insb
in
adc
xchg
mov
test
adcb
or
sbb
add
lea
xor
push
lret
stos
pop
imulb
cmp
mov
push
scas
jnp
dec
xchg
je
bound
mov
xchg
xlat
mov
out
mov
dec
popf
ficompl
or
mov
or
jne
adc
mov
ss
bound
mov
xor
mov
scas
xchg
push
scas
repnz
in
adc
pop
aam
xor
sub
loope
stc
in
hlt
nop
pop
sub
ficoml
insl
test
mov
int3
sbb
popf
mov
dec
fldenv
inc
repnz
cmp
hlt
sti
mov
aam
scas
mov
test
cwtl
out
xor
mov
test
pop
jb
jl
xor
cltd
movsl
xchg
push
aam
ret
push
and
fld1
pop
mov
add
js
fs
in
sbb
push
int
jns
mov
frstor
push
dec
push
in
cmp
jno
push
testl
iret
les
pusha
xchg
add
xor
fsubr
mov
push
xchg
or
mov
jp
pop
pop
push
out
cmp
insb
fwait
mov
lds
jmp
dec
mov
insl
test
aaa
add
push
push
aad
sbb
leave
pusha
fldt
sarb
inc
push
mov
sub
lods
pop
push
push
aam
lahf
movsl
arpl
inc
dec
xchg
push
cmp
lea
movsb
inc
rcrl
inc
adc
insl
inc
das
sub
dec
enter
aam
movsl
nop
adc
mov
dec
sub
sub
and
xchg
cli
pushf
popf
dec
dec
loopne
mov
mov
mov
lret
and
pop
mov
mov
push
xchg
jne
sub
sti
fimull
shl
mov
jle
xorb
or
lods
jle
sub
dec
mov
incb
cmpsl
stc
lret
push
popa
push
fnstenv
repz
cli
xor
sub
cmp
in
sbb
ljmp
mov
int
jnp
pop
lods
int
jmp
or
in
add
push
lcall
aam
cmp
push
cmp
mov
dec
call
cmp
test
pop
cmpsb
mov
iret
push
cltd
std
outsb
mov
push
movsb
clc
xor
pop
call
scas
inc
enter
subl
jo
fstpt
shlb
ds
and
mov
add
dec
push
mov
xor
mov
cmpsl
adc
subl
push
push
imul
mov
xchg
jl
mov
add
mov
mov
push
mov
call
sti
xor
xchg
int
mov
push
xlat
sub
pop
fbstp
mov
fidivl
push
jl
push
outsb
popw
jg
mov
xchg
sub
cld
fwait
or
and
mov
scas
mov
daa
cmp
es
add
sti
cmp
pop
mov
insb
ljmp
push
or
pop
jbe
mov
lods
loop
andl
dec
mov
xchg
jmp
popf
mov
mov
fistpll
dec
push
cltd
icebp
mov
sub
fistl
pop
jne
imul
repz
add
cwtl
pushf
xor
mov
push
pop
sbb
xor
ja
in
fcom
out
pop
rorl
loopne
jl
inc
add
mov
in
arpl
cld
int3
ret
fimull
push
dec
pop
jecxz
daa
ds
sbb
out
mov
divb
push
add
lea
fmuls
sub
pusha
divl
fsubs
leave
mov
pushf
lret
mov
out
mov
sbb
jno,pt
movsl
mov
scas
loope
loope
sbb
add
adc
sbb
imul
xchg
mov
test
jmp
fdiv
adc
mov
mov
icebp
adc
mov
cmp
push
jne
jnp,pt
int
notl
jmp
loope
testb
or
lds
sbb
scas
mov
fsubrp
rolb
popa
fcoml
rol
sub
or
xor
loope
adc
xchg
daa
cli
dec
lcall
aas
or
pop
aam
cmpsl
add
push
leave
repz
jae
outsl
nop
das
jge
andl
fsubrp
sbb
cmp
movsb
cmp
pop
or
cld
mov
jl
sub
dec
dec
js
dec
jge
jne
jmp
mov
dec
rcrl
jmp
int3
aas
cltd
inc
dec
shrb
cld
mov
loop
mov
dec
in
daa
mull
push
push
sub
shrb
dec
xlat
or
enter
pop
cmpsb
jg
call
and
mov
dec
out
into
mov
dec
adc
inc
popf
jo
mov
jno
jns
push
sahf
jo
xlat
mov
out
das
cmc
fnsave
movhps
sar
push
push
sbb
stos
movups
repz
xor
vmptrld
cwtl
and
sbb
add
mov
push
daa
jge
aam
jp
mov
test
push
xor
sarb
cmc
ds
mov
test
add
faddl
loope
lcall
jae
xlat
outsb
inc
mov
xchg
cmp
xor
sbb
add
dec
repz
int3
or
push
sbbl
nop
arpl
and
stos
mov
cmpb
fistl
xchg
out
mov
and
aad
mov
pop
add
adc
and
pop
repz
fadd
dec
roll
jecxz
cmpsl
call
sub
jle
mov
or
push
pop
dec
les
jle
fnstenv
dec
mov
mov
ljmp
sbb
add
nop
adc
mov
xchg
mov
push
and
push
mov
inc
push
es
dec
dec
sub
test
pop
or
add
cltd
jne
mov
push
and
push
cmp
shlb
mov
fadds
sbb
inc
mov
aas
es
inc
xorl
xchg
loopne
fdivl
add
pop
add
in
repz
fwait
pop
xor
cmp
aas
js
ret
stos
jl
mov
sbb
loop
pop
cmp
mov
dec
adc
cmpl
in
jmp
inc
push
mov
je
xorl
lcall
loope
push
shl
lods
add
push
lcall
jge
sbb
pop
jo
push
push
fs
daa
dec
xchg
adc
icebp
mov
and
lea
repnz
incl
andb
cld
push
mov
arpl
fsts
dec
lret
mov
xchg
shrb
insl
and
sti
sbb
sarb
sbb
or
dec
test
fucomi
push
lcall
push
mov
jge
mov
mov
fdivrp
jbe
jbe
arpl
mov
imul
ret
pop
lahf
jg
add
test
incl
mov
clc
test
adc
int
mov
outsb
cwtl
inc
push
xchg
mov
and
sub
xchg
mov
gs
rol
xchg
loope
inc
push
lods
jg
cmpsb
dec
test
xchg
cmp
jecxz
push
adc
imul
loopne
lret
mov
mov
loopne
cld
repnz
jle
jecxz
outsl
loop
push
mov
lea
dec
xchg
cld
leave
xchg
gs
mov
fcmovne
dec
and
cs
inc
mov
not
xor
lods
callw
pop
xchg
scas
hlt
icebp
push
mov
add
inc
cltd
sbb
mov
mov
mov
inc
shll
dec
scas
or
lods
mov
pop
stos
xchg
inc
cwtl
mov
in
cs
int
sbb
out
cmpsb
pop
shl
pop
call
jo
sahf
clc
pop
jne
inc
cwtl
or
sti
ds
fidivrs
imul
pop
push
add
sarb
inc
pop
shr
or
roll
xlat
jo
ja
mov
pushl
inc
stc
xor
imul
je
lcall
inc
repz
gs
xchg
push
mov
call
into
mov
jb
mov
cli
cmp
inc
clc
sub
jnp
in
cmp
in
nop
xchg
in
aam
sbb
cmp
push
jno
mov
icebp
test
repz
adc
cmpsb
inc
or
adc
mov
sahf
xor
test
outsb
daa
ficomps
pop
ds
xor
addl
add
and
pop
xchg
push
sub
mov
dec
aas
je
out
das
loope
fbstp
cs
in
mov
mov
or
jae
lods
adc
popl
sub
cmp
aam
push
sahf
lods
xor
mov
fsubs
inc
faddl
fildll
pop
insb
fsubrs
out
jecxz
xorb
cmp
aad
push
loop
cmp
mov
sarl
ljmp
sub
dec
mov
sub
pop
into
jns
lea
loop
xor
jnp
add
jb
mov
xchg
xchg
sub
adc
ss
push
aas
mov
pop
fisubs
cmpsb
out
fnstsw
arpl
je
fidivrl
push
shlb
pop
imul
adc
xor
aad
scas
push
lea
push
js
in
inc
lret
dec
sbb
call
aam
ds
fdivrs
pop
push
add
xchg
cmpsl
pop
arpl
stc
push
loopne
cmpsl
test
xchg
ja
mov
xor
and
aas
jo
dec
jecxz
imul
mov
cmp
pop
adc
push
dec
dec
pop
fimuls
in
push
fdivrs
xor
mov
ljmp
mov
jo
movsl
push
in
mov
punpcklwd
clc
in
lds
push
cmpsl
mov
pusha
movl
cmc
shrl
jno
jecxz
out
inc
test
pcmpgtd
lret
xor
cmp
repnz
idiv
inc
dec
mov
mov
outsb
lret
out
add
sub
je
addr16
or
mov
psrlw
add
call
mov
popf
mov
ss
iret
es
sbb
pop
popf
icebp
bound
dec
inc
shrl
sbb
dec
jp
lods
inc
push
jg
adc
add
lcall
push
in
pop
lahf
xor
jmp
sbb
mov
mov
mov
xor
outsb
jl
in
or
xor
mov
roll
frstor
add
insb
jl
fcomp
mov
inc
push
or
xlat
nop
sbb
outsb
sarl
ret
imul
dec
test
in
andl
or
dec
cmp
pop
mov
data16
xchg
inc
ret
mov
data16
lock
aas
cmp
jo
cmp
iret
into
cmp
adc
lcall
cmpsb
lock
add
hlt
dec
and
mov
xchg
adc
gs
xchg
mov
mov
jns
ret
mov
xor
dec
add
jo
mov
lret
add
xchg
data16
sub
push
or
in
ret
fwait
popa
mov
jge
inc
mov
xchg
sub
lock
call
inc
add
mov
arpl
adc
out
xor
push
jmp
hlt
push
pop
lret
das
lcall
mov
xchg
cmpsb
rcrl
mov
fbld
out
or
mov
js
add
add
dec
lahf
lods
clc
adc
cmp
xchg
pop
mov
jge
int
test
inc
stos
mov
jg
add
or
es
adc
mov
mov
and
inc
in
pop
bound
xlat
pop
je
lea
outsl
mov
adc
lea
lret
adc
cld
das
cmp
xor
adc
inc
xchg
test
dec
and
rclb
adc
mov
cmpsb
outsl
pop
ja
adc
inc
xor
cltd
push
xchg
int3
sub
in
push
cmp
sub
xor
xor
ljmp
lea
mov
dec
leave
fisttpl
and
xchg
or
xchg
sub
push
mov
mov
imul
fidivrs
jnp
outsl
decb
jge
outsl
mov
hlt
sub
out
xorl
pop
pop
and
pop
scas
or
cltd
loopne
and
nop
lock
jo
cmp
dec
mov
out
clc
pop
jle
out
xor
and
and
icebp
and
push
adc
ja
adc
ret
test
sub
jnp
mov
cmp
stos
fyl2x
iret
and
mov
in
cmp
sub
lcall
lock
xor
push
sbb
das
cmp
insb
imul
lods
cmp
lea
mov
fnstcw
mov
pop
gs
mov
xor
lds
sahf
imul
push
pop
lods
jmp
cmpsl
andl
hlt
icebp
daa
push
push
xchg
popf
or
pop
xor
jmp
jle
xchg
dec
pusha
jns
cmc
xchg
movsb
adc
sti
lret
pop
scas
xor
data16
dec
adc
jge
xor
jecxz
popa
dec
out
sbb
or
loop
out
movsb
cmp
clc
sub
shr
fwait
mov
inc
inc
and
dec
sarb
stos
inc
jp
pop
mov
jecxz
mov
xchg
add
sub
adc
sub
dec
xchg
add
jb
test
add
movq
pop
cs
sub
inc
lods
mov
push
fstpl
adc
adcb
dec
outsl
mov
jnp
or
sbb
inc
pop
scas
push
push
jmp
popa
into
and
shll
cli
inc
inc
sub
xor
rolb
int
int
shlb
pop
inc
sbb
loope
jno
pop
shlb
ficoml
movsb
cmp
cmp
aad
mov
sahf
sub
sbb
jb
cmp
pop
in
xor
xchg
ja
and
jne
ds
test
popa
pushf
shll
fwait
sbb
rcr
dec
lret
inc
pop
and
jne
addl
xchg
call
leave
fucomi
mov
ret
outsl
in
push
lock
dec
out
adc
shlb
inc
fldcw
fsubl
mov
mov
xor
xlat
insl
movsb
push
adc
xor
add
dec
mov
pop
rclb
js
movsb
mov
subl
inc
cmp
jae
leave
jmp
xchg
loop
fisubl
push
jge
imull
mov
lds
pop
add
and
lret
or
inc
aad
jb
add
push
jmp
shll
in
xorl
pop
add
insb
insl
jae
insb
xchg
push
add
mov
repz
mov
shl
dec
sbb
out
popf
mov
rcll
sti
mov
outsb
dec
inc
or
imul
adc
test
shl
test
adc
ret
lahf
jp
cld
popf
ficoms
sub
fdivrs
mov
xorb
insl
fdivs
in
adc
mov
js
addr16
mov
or
jbe
jb
xchg
xor
bound
cmp
addb
cmp
jno
cld
std
lds
inc
ret
test
cmpb
mov
out
scas
pop
pop
cli
xchg
leave
test
cmp
insb
add
push
add
jl
popa
into
jnp
pushf
fwait
das
sahf
sbb
lea
and
mov
sbb
cmpsb
pop
in
pop
cmp
aam
movsb
nop
xor
lahf
lock
pop
and
add
test
mov
psrad
ja
jl
mov
adc
fstpl
jmp
inc
sub
xchg
adc
out
rolb
cmp
sbb
dec
push
jl
shl
cmp
push
inc
loop
dec
das
mov
fwait
cmpsb
lods
xlat
pop
cwtl
mov
lret
cmpsl
and
mov
loopne
push
stos
imul
inc
ret
dec
mov
sarb
push
jp
jbe
mov
insb
xchg
jnp
mov
hlt
stc
into
icebp
lcall
mov
dec
gs
dec
cmp
imulb
rcrb
sbb
outsb
shl
repnz
or
lds
hlt
popf
ret
jle
lods
fisubs
pop
imul
movsb
out
lods
pusha
ljmp
outsl
mov
sbb
aas
loop
in
or
fstps
gs
mov
cmc
loope
sbb
xor
mov
dec
neg
xor
into
lahf
or
hlt
inc
stc
add
mov
push
dec
fildl
loope
jo
jnp
add
inc
imull
pusha
jp
inc
sbb
push
sub
je
out
loope
cmp
pop
fsubl
sti
insb
iret
cmpsl
jmp
xchg
test
scas
fmuls
outsl
pop
mov
pop
lret
mov
ja
mov
pop
icebp
inc
add
sub
pop
inc
insb
push
lods
xchg
lcall
xlat
cmpsb
xor
aad
pop
cld
push
mov
xor
dec
fcomip
push
notb
scas
out
andl
sub
push
push
mov
lret
or
popa
lock
repnz
jno
mov
sbbl
popf
lahf
push
or
mov
jnp
xchg
lods
sbb
das
jno
mov
xchg
xor
out
pushf
dec
in
and
lahf
mov
sub
cmpsl
mov
mov
cmp
sub
inc
cmpsb
jp
pop
movsl
aad
or
popf
clc
inc
nop
into
fcmovbe
insl
or
mov
mov
pop
int3
or
push
jg
or
mov
jnp
adc
mov
pop
pusha
mov
mov
mov
or
and
dec
and
out
ficomps
popf
es
mov
in
test
es
sub
inc
pusha
cs
mov
jp
icebp
sub
pop
add
sahf
ficoml
xchg
add
adc
or
hlt
mov
aad
enter
mov
xor
sub
mov
cmp
and
pop
rclb
jnp
sub
push
dec
mov
xlat
sub
vandnps
fs
jl
sub
dec
out
cmc
ss
nop
std
dec
xor
stos
ds
add
push
lea
cmp
xor
scas
and
lahf
add
xor
outsb
loope
movsl
adc
ficoms
pop
ss
adc
jg
or
cld
out
adc
mov
ficoms
pop
add
loop
stos
adc
aad
pop
sarb
push
scas
xchg
imul
sub
ror
aas
xchg
addr16
lods
xchg
add
jnp
mov
mov
aad
push
icebp
jge
sarb
xchg
pop
outsb
les
cmc
xchg
add
adc
fstpt
mov
mov
dec
scas
adc
or
jns
out
sahf
mov
push
push
jp
jle
sub
xchg
pop
push
dec
adc
rcrl
repz
cwtl
arpl
mov
inc
dec
fwait
cmp
cmpsl
sub
xor
dec
sbb
add
scas
push
mov
lods
mov
push
adc
sub
daa
inc
lcall
and
stos
loopne
int3
cmp
ljmp
daa
popa
shll
inc
fisttpl
fsubr
mov
repz
xchg
fnstenv
fadds
sbb
fsubrs
pop
xor
pop
mov
jge
cmp
roll
sub
xor
test
das
sub
clc
sbb
push
jno
mov
cmp
loop
push
cmp
mov
xchg
push
out
mov
pop
test
js
xor
xor
push
stos
jb
pop
js
cld
pop
imul
out
pop
aaa
test
xchg
and
adc
sbb
or
xchg
sub
fwait
dec
add
dec
bound
popa
sub
int3
push
mov
iret
stos
xchg
pop
sahf
popa
add
mov
xchg
dec
push
fcomps
test
subl
repz
jp
popl
mov
rcr
jb
lock
cmp
test
jmp
xor
and
xchg
mov
movsb
fcmovu
jns
out
cmp
dec
jae
and
in
cmp
stc
push
sub
dec
stos
aaa
int3
int3
inc
dec
inc
bound
xchg
jnp
pushf
jno
inc
imull
sub
dec
dec
xchg
out
sub
xlat
jbe
mov
adcl
clc
and
push
sbb
lods
mulb
fidivl
pop
pop
ds
and
nop
mov
mov
push
scas
call
insl
sub
mov
sub
mov
das
pop
hlt
jp
cmp
imul
pop
test
xor
mov
addr16
shrl
mov
stos
cwtl
push
pop
cmovs
loop
pop
mov
sub
sbb
mov
insl
mov
mov
into
lret
inc
gs
mov
inc
aaa
xchg
repz
inc
adc
in
sub
push
pop
inc
imul
aad
sbbl
into
aaa
out
add
xlat
rorb
fsubs
icebp
insb
dec
xor
push
mov
in
shll
pop
jl
push
inc
xlat
inc
mov
jns
push
xchg
daa
test
adc
scas
inc
outsl
lcall
dec
leave
jmp
mov
les
lcall
and
repnz
stc
pusha
js
xchg
sbb
jbe
out
mov
sbb
fnsave
mov
xchg
hlt
sbb
in
cmpsb
iret
fs
jb
xor
jmp
lahf
popf
and
rcrb
push
roll
pop
and
lahf
xchg
outsb
out
add
mov
data16
repz
jae
loopne
sub
push
in
pop
sarb
adc
lret
mov
aad
and
jp
cmpsb
and
mov
dec
inc
icebp
push
lods
rcrl
sbb
cld
mov
mov
pop
cmp
mov
pop
mov
dec
fldenv
sub
pop
pop
je
pop
cmp
sahf
mov
pusha
mov
fstpl
out
xlat
push
out
sub
fidivrs
loope
fstpl
jb
push
movsb
aas
and
dec
add
xor
test
stc
mov
fildll
sub
lcall
mov
js
das
push
mov
inc
mov
insl
lock
mov
mov
or
fistps
lret
sbb
aas
push
or
xlat
cmp
scas
pop
add
add
jp
jae
pop
jecxz
push
sub
mov
stos
in
stos
xchg
jmp
mov
stos
mov
push
data16
pop
jge
repnz
aad
push
jo
jns
loopne
mov
dec
jb
lock
adc
mov
jmp
and
cmpl
add
je
subl
jnp
mov
pushf
scas
push
dec
or
cltd
xchg
jnp
push
ds
stos
and
sub
dec
scas
cmp
add
fcoml
dec
mov
mov
out
into
push
push
ret
xchg
mov
pop
mov
cmp
push
sbb
iret
imul
pop
mulb
sti
jp
dec
add
jno
mov
fiadds
bound
mov
jmp
rcrb
xchg
bound
xchg
dec
pop
pusha
les
repnz
push
fstl
mov
cmp
pop
mov
mov
bound
cld
hlt
inc
mov
fcomps
add
repnz
push
mov
push
xchg
add
loop
adc
dec
fiaddl
out
jl
and
mov
je
scas
sub
cli
xchg
leave
mov
out
ljmp
cs
add
insb
and
mov
call
mov
pop
int3
fs
push
xchg
cmpsl
mov
jl
scas
aas
push
or
ja
sbb
outsl
dec
fdivr
xchg
or
mov
mov
rclb
mov
test
inc
popf
addr16
jle
hlt
or
push
mov
mov
rcll
fisttpll
daa
mov
arpl
mov
es
push
and
or
pop
testb
cmpsb
pop
jg
pop
cli
add
pop
add
in
pop
bound
mov
cmpsl
jns
jecxz
mov
je
jb
sbbb
cmp
bound
dec
xor
cmp
xchg
pop
cmp
jmp
fsubp
dec
cltd
adc
and
xchg
mov
jp
mov
pop
cmp
enter
fwait
cmp
outsl
popf
outsl
outsb
sarl
testb
lds
mov
inc
jns
ret
ds
scas
jno
out
ficoms
add
iret
push
lods
ljmp
call
cmp
loopne
dec
sbb
outsb
std
sbb
mov
cmp
push
stos
movsl
in
pop
mov
adc
adc
cmp
lds
adc
inc
mov
sarl
lret
data16
xlat
mov
dec
fwait
sti
out
in
out
mov
idivb
aad
cli
icebp
ja
xchg
xor
mov
movsb
adc
mov
pop
mov
movsl
cmp
or
inc
pop
das
imulb
inc
pop
or
testl
js
jp
in
mov
sub
xor
lds
xor
xor
ret
dec
pop
xlat
adc
out
push
cwtl
sbb
xchg
add
repz
mov
push
fwait
lds
shll
dec
addr16
mov
jg
movb
andl
repz
jno
fidivl
int3
xlat
icebp
repz
adc
imul
sti
imul
or
pop
sahf
scas
cmp
cs
pop
test
jg
push
out
gs
and
push
pushw
fnsave
insb
inc
fdivl
sahf
xchg
lods
cmc
ljmp
inc
dec
orl
sbb
or
mov
rclb
adc
popf
push
add
sub
pop
xchg
mov
xchg
mov
loope
adc
and
and
aaa
mov
pop
xchg
outsl
xlat
mov
pop
movsl
xchg
adc
cmp
add
daa
pushf
xor
mov
mov
pop
adc
fs
enter
pop
pop
push
or
cli
pop
jb
push
jbe
push
imul
mov
enter
fdivl
shll
aad
rolb
imul
adc
pop
lock
ss
lahf
and
loopne
push
cli
cli
pushf
mov
cmp
iret
outsl
fisttpl
popf
and
cmpsl
cwtl
jne
sbb
test
dec
push
cmpsl
in
inc
ret
mov
divb
out
cmpb
inc
mov
jge
enter
ret
mov
mov
rorb
fistl
sbb
lods
outsb
notb
xchg
cli
push
inc
out
sahf
or
xchg
or
adc
lods
insb
fists
and
dec
es
xor
xor
in
push
xor
inc
mov
pop
jecxz
and
and
sti
ret
jns
stos
inc
je
mov
aad
in
out
cmp
or
test
jmp
or
lret
aas
cmp
mov
xorb
sub
pop
test
mov
sti
inc
test
xchg
jg
lret
call
lods
pop
jno
push
inc
push
mov
mov
xor
and
cwtl
lods
stos
mov
movsb
add
es
cli
lods
icebp
jno
or
cmp
add
icebp
inc
roll
out
push
push
fdivs
fidivl
aaa
mov
pop
sub
jg
fsub
insb
mov
test
arpl
mov
in
mov
push
push
stc
jg
jmp
not
stos
or
arpl
cmc
sub
sub
jb
testl
mov
jle
iret
lret
push
cmp
fcomps
jp
mov
pop
movsb
loopne
ss
lcall
inc
test
and
adc
dec
add
sub
int3
xchg
lock
mov
ret
mov
jo
and
pop
insb
and
arpl
mov
sbb
arpl
and
fstl
subl
add
sbb
scas
dec
popf
pop
mov
push
es
push
mov
into
js
cmp
movsl
mov
js
adc
xor
mov
sbb
and
jo
adc
scas
pop
adc
and
js
adc
add
outsl
pop
sub
push
push
cmp
and
addr16
xchg
mov
jmp
inc
or
jg
or
loop
push
pop
inc
inc
xlat
ja
push
insb
lahf
cwtl
pop
cmc
push
push
jge
ja
mov
std
push
mov
les
cwtl
jg
mov
and
rorl
jg
fsubr
cmp
mov
cmpsb
cs
xchg
xlat
mov
cmpsb
or
fwait
repnz
push
xchg
dec
movsb
or
dec
stos
or
push
mov
fwait
lock
outsb
pop
repz
insb
jnp
sahf
pop
jns
sbb
mov
jecxz
cmp
xor
mov
mov
arpl
add
xor
inc
rorb
or
lcall
push
pop
sbb
jbe
stc
fistpll
xlat
inc
and
stos
xchg
ljmp
push
mov
stos
and
cwtl
fsubs
add
ret
lret
je
cltd
test
fdivrl
fldt
stc
xorl
test
js
lods
cmp
outsb
jl
insl
fiaddl
dec
mov
vaddps
push
pop
repz
lock
fldt
xor
jae
adc
stc
lods
xor
sub
push
scas
jge
jl
pop
data16
xchg
xchg
mov
aaa
jl
repnz
fstl
bound
xchg
jmp
sbb
jle
mov
gs
inc
dec
insb
sub
lods
loop
or
add
ss
in
mov
pop
sub
nop
push
aas
lods
pop
stos
sbb
adcb
stc
jle
inc
xchg
leave
fpatan
rcl
enter
vmovupd
jbe
cmpsl
or
xchg
pop
hlt
add
fsubrl
inc
pop
xchg
dec
jg
hlt
jmp
xor
out
imulb
repnz
sbb
ret
xchg
aas
and
push
pop
pop
ret
fincstp
ss
shrb
mov
adc
or
leave
mov
pop
pusha
adcb
lret
popa
dec
sbb
imul
pop
and
nop
adc
cs
pushf
and
je
sti
ljmp
pop
xor
testb
adc
das
push
es
rclb
mov
bound
or
add
xchg
aaa
mov
shlb
mov
cmp
cmp
les
shll
or
addr16
arpl
cmc
mov
into
out
cld
repz
movsl
jg
add
ljmp
into
and
jb
add
push
mov
mov
cmp
xchg
nop
pop
dec
inc
pop
icebp
xor
rcrl
and
insb
sub
sub
dec
mov
mov
addr16
es
xor
test
push
andb
hlt
mov
mov
fwait
xor
push
xorl
mov
mov
test
jmp
mov
mov
call
sahf
clc
and
inc
fwait
cmpsl
jno
jge
fnstsw
add
ja
decl
je
push
push
rcl
pop
cmp
lods
shl
clc
out
pop
lock
cmovae
sub
scas
xorb
cs
repnz
addb
xchg
es
add
test
nop
daa
outsl
mov
outsb
fbstp
into
addr16
aad
sub
xor
outsb
sbb
sahf
adc
and
mov
sub
mov
adc
mov
xchg
jge
aam
mov
mov
mull
xor
pop
jo
bound
pushf
sub
sbb
pop
out
inc
sbb
cmp
adc
in
leave
mov
pop
push
stos
push
ds
pop
push
cli
lret
adc
add
xor
xor
dec
dec
and
and
loop
cmpsl
call
inc
gs
shll
lods
xor
push
into
imul
dec
mov
aaa
loopne
add
jmp
cmp
repz
rclb
les
cmpsl
aad
out
mov
lds
fnstenv
lods
adc
in
das
mov
add
out
lods
inc
loopne
iret
data16
mov
and
pop
cmpsb
leave
push
nop
repz
jg
pop
inc
or
sbbb
sub
insb
fnsave
out
sarb
jmp
xchg
aad
jmp
mov
push
shlb
call
mov
mov
xchg
jge
push
jb
and
sahf
imul
sub
mov
ljmp
pop
cmpl
mov
in
in
jge
mov
aam
filds
scas
cmpsl
sbb
mov
xchg
sarl
mov
xchg
imul
xor
mov
into
adc
sbb
out
dec
js
loop
dec
loope
sbb
sbb
push
add
pop
rcrl
lock
xor
pop
or
call
pop
movsl
pop
or
cmpsl
je
sbb
cmpsl
cmpsl
jae
mov
adc
pop
aad
inc
nop
cltd
andl
aad
mov
sbb
mov
rolb
mov
push
imull
adc
cli
iret
jge
and
sahf
dec
in
cld
cmp
add
pop
repnz
stos
mov
outsb
add
and
pop
lcall
lcall
lcall
psubsw
inc
xchg
lock
pop
mov
cmp
fldenv
in
testl
rcrb
xchg
sub
dec
aam
filds
dec
jle
jle
pop
adc
les
jnp
push
scas
pop
jmp
push
pop
outsb
mov
in
push
mov
arpl
jl
xchg
push
out
outsl
aad
jp
mov
or
xor
fisttps
adc
js
dec
test
mov
jo
mov
sarb
pop
enter
jno
sbb
flds
cmpsb
xchg
cltd
mov
inc
mov
jno
imul
fwait
add
test
insl
adc
xchg
loope
sar
push
or
xor
xchg
push
push
add
fstps
lret
sub
or
cwtl
stos
mov
mov
jnp
fs
fmuls
mov
test
push
ret
and
es
dec
mov
inc
push
pop
dec
dec
sti
xchg
xor
sbb
mov
pop
cmp
stos
test
loopne
mov
jb
cmp
enter
jge
pop
pop
out
inc
inc
and
mov
sbb
or
mov
add
xchg
xchg
adcb
jecxz
fldt
jmp
jbe
in
add
push
mov
insl
shll
loop
pop
lahf
pop
xor
cmp
aas
pop
mov
push
cld
cmp
xchg
test
adc
pop
mov
mov
movl
lcall
subb
sahf
and
icebp
pop
push
push
adc
cmp
dec
fiaddl
sub
jns
fcompl
into
scas
inc
sbb
scas
add
int
and
mov
in
pop
dec
cld
inc
imul
in
std
ljmp
fisubrs
mov
sub
add
and
movsl
sub
sub
pushf
push
cmp
fdivs
xchg
push
sbb
fnstenv
push
test
clc
addb
jle
cmp
xchg
fwait
test
out
adc
jae
cs
add
push
fwait
cmp
pop
sub
nop
mov
inc
iret
mov
rcll
jecxz
repnz
scas
mov
aad
xor
lret
in
cmp
cmp
cltd
jle
lahf
push
in
int
ja
imul
loope
mov
in
xchg
stos
mov
dec
sbb
cmc
cmp
push
or
ret
sub
pop
pop
mov
cmp
cmpsb
fwait
mov
stc
sbb
ja
ljmp
shrb
push
mov
loope
into
gs
push
ficoms
jnp
push
mov
xor
or
inc
sahf
cmp
adc
js
bound
testl
push
xchg
sub
iret
sbb
adc
push
in
aas
adc
jge
mov
hlt
sbb
pop
xor
adc
dec
iret
ss
push
jno
cmp
pop
sbb
aaa
int
sbb
push
mov
push
mov
in
test
adcl
or
sti
pop
loopne
and
inc
test
cmpb
sbb
addr16
int3
mov
sahf
xor
lock
jecxz
dec
cmp
or
xor
cmpsb
push
inc
stos
xchg
jo
adc
in
je
mov
inc
push
inc
stos
ret
lock
rclb
pop
mov
jp
mov
sbb
enter
or
mov
or
sub
fwait
ds
cmp
xor
test
mov
and
pop
dec
aaa
popl
xchg
outsb
movsb
jnp
mov
add
gs
add
out
testl
mov
xor
or
outsb
add
lahf
jbe
ljmp
ss
dec
fildll
iret
data16
add
cs
adc
repz
pop
xor
add
testl
jl
sti
in
test
cmp
lods
inc
xchg
mov
int
sbb
divl
int
or
repnz
jno
xchg
xchg
cmc
pusha
dec
fadds
popf
pop
sub
in
dec
fidivl
xor
and
pop
lahf
cmp
cmpsl
clc
add
movb
jg
sbb
xorl
das
stc
ja
sahf
loop
cmp
shlb
fmull
pop
add
stos
dec
adc
pop
das
xor
inc
ds
adc
mov
lret
shlb
movsb
shll
pop
or
shrb
sub
imul
add
add
lret
sbb
and
repz
jbe
in
cmpl
xchg
pusha
mov
std
xor
fcoms
into
xor
add
mov
push
andb
outsb
or
mov
and
outsl
push
pusha
mov
sbb
js
cld
jnp
sbb
fcmovb
sbb
mov
lahf
roll
mov
cmpsl
out
xor
insl
mov
lods
inc
xor
testl
or
cli
cmp
jmp
ljmp
test
mov
pop
push
fnstcw
std
sbb
clc
fdivrl
push
mov
xor
adc
xchg
or
xchg
add
fidivl
xchg
sub
jge
jnp
add
leave
int3
inc
xorb
and
push
cmc
mov
in
adc
clc
into
cld
andb
add
out
push
lock
addr16
cmp
inc
jbe
jb
test
pop
add
adc
sbb
push
jo
cwtl
xor
mov
sbb
mov
fnstsw
sub
repz
in
cmp
push
jae
arpl
nop
cs
xor
cld
or
xor
sub
addr16
bound
andb
pusha
hlt
xchg
test
mulb
vmovapd
dec
setnp
lea
out
adc
jns
adc
adc
stos
test
je
sarb
test
adc
das
or
add
das
outsb
mov
sub
mov
xlat
insb
push
pop
rol
nopl
mov
enter
jg
cmp
outsb
sub
outsl
rorb
mov
ss
ss
lea
xchg
aaa
lcall
xor
lock
inc
mov
ret
push
loop
inc
dec
and
enter
jnp
cs
divl
or
daa
inc
add
sbb
and
ja
test
pop
out
test
movl
adc
adc
das
adc
push
mov
push
sub
xchg
idivl
dec
out
ss
insb
push
mov
jmp
lea
pop
pop
movsb
jecxz
push
movsl
mov
cmp
ljmp
push
sbbb
jl
mov
cmc
xlat
cmp
mov
pop
and
push
icebp
cmp
and
out
mov
fnstcw
int
out
fwait
call
stos
mov
add
push
ss
mov
inc
push
loop
xor
xorl
push
push
xchg
push
and
and
xlat
pusha
bound
dec
mov
dec
movsb
jbe
adc
hlt
rcrb
ljmp
fimull
insb
cmp
cltd
das
sahf
test
out
pop
mov
push
sbb
and
inc
xor
pusha
fldt
adc
inc
subb
jmp
mov
fildll
sbb
and
jo
cwtl
jns
lcall
inc
popf
mov
adc
lea
stos
mov
loopne
cld
jmp
jecxz
sub
sarb
leave
pop
lcall
dec
in
fwait
or
mov
jg
in
andl
rcrl
or
add
fmull
xchg
fwait
inc
jecxz
fucomip
jmp
out
mov
jle
loope
xlat
dec
popa
adc
icebp
mov
xchg
mov
pop
rclb
cwtl
mov
mov
repz
call
movsb
mov
lret
add
xchg
pop
mov
cmp
inc
enter
jae
pop
imul
call
mov
stos
insl
cmp
out
imul
or
fstpt
data16
pushf
sahf
add
mov
fdivr
cwtl
faddl
scas
adc
inc
or
lds
aad
jbe
fs
scas
mov
in
lods
fcmovne
and
mov
mov
adc
cmpsl
ret
pop
or
mov
repz
pop
jb
loopne
sbb
loope
mov
or
sti
or
popa
and
sbb
mov
cmp
cs
std
sbb
add
dec
leave
out
out
rclb
mov
pop
insb
jo
or
inc
mov
or
add
or
mov
rcl
sub
scas
push
cmpsb
push
xchg
mov
cmc
or
test
and
aas
sbb
test
cmp
aam
sbb
dec
popa
mov
sbbl
jl
and
rorb
mov
mov
and
mov
cwtl
jae
into
cwtl
jle
inc
pop
add
nop
mov
ljmp
xchg
xor
push
je
xor
cs
lods
enter
mov
bound
and
aas
jae
xor
mov
in
fidivl
arpl
pop
aaa
shll
jne
imulb
outsl
outsb
sar
jl
lock
sbb
push
shrl
outsb
sbb
pushf
or
cmp
jnp
insb
pop
push
or
add
outsb
int
sub
xor
push
inc
test
xor
ret
jmp
cwtl
decb
and
fildl
push
jo
outsb
add
int3
push
jns
mov
mov
out
mov
pop
test
dec
out
incl
add
xchg
pushl
push
imul
pop
cmp
mov
cmp
jmp
xchg
lret
dec
jecxz
nop
add
push
nop
jae
jge
or
lods
push
cmp
xchg
cld
test
das
xor
testl
rclb
and
jg
ds
sbb
inc
lret
mov
cwtl
bound
inc
mov
cld
push
stos
inc
inc
add
jb
xor
mov
andb
push
aas
sbb
mov
xor
loope
jne
mov
lods
lods
cli
jmp
loope
or
pusha
orb
jnp
es
cld
mov
xchg
sub
lock
dec
shrb
shrl
push
out
jns
mov
add
fwait
repnz
push
out
pop
or
hlt
adc
sub
add
dec
and
pushf
shll
push
out
jns
adc
std
lret
inc
shrl
and
cmp
mov
jbe
cld
lahf
xor
inc
scas
xchg
inc
and
and
cmc
mov
call
xlat
mov
or
push
bswap
jae
cs
xor
sub
outsl
push
pop
adc
aam
xor
ja
push
addl
pop
xchg
in
ret
mov
clc
mov
fidivrs
or
daa
leave
jnp
popf
xor
mov
mov
mov
mov
lahf
xchg
inc
fidivl
fcoml
push
sub
add
inc
inc
sahf
or
movb
shll
bound
add
jge
sub
stos
jae
xor
adc
cmp
mov
imul
cld
mov
mov
mov
lock
cmp
push
movsb
out
es
jns
adc
xor
lock
sbb
ret
sarl
lret
xor
sbb
aas
cmp
lods
shll
lret
push
call
ss
addr16
insl
add
push
ja
lret
cmpsb
mov
fsubr
jmp
mov
stos
cmp
icebp
sbb
cs
daa
daa
bound
push
mov
sub
jo
lcall
mov
fmuls
int3
mov
rcll
dec
mov
jp
lret
sti
sub
imul
sbb
mov
pop
stc
rcrb
jle
inc
mov
jno
cld
and
repz
add
fldt
adc
mov
arpl
xchg
xor
ret
sbb
cmpsl
adc
pop
and
mov
fs
test
inc
dec
adc
mov
adc
lret
das
push
add
jne
xchg
jge
xchg
popf
jo
stc
loopne
cs
shrl
decb
loop
xchg
mov
or
in
sbbb
les
xor
je
int3
movsl
mov
mov
out
push
push
lock
push
lods
aaa
mov
sub
adc
sarb
cmp
sbb
jnp
inc
ficomps
out
mov
lds
mov
xchg
xchg
cmp
sbb
push
cltd
and
sbbl
inc
outsb
hlt
js
fsubrp
in
adc
jge
and
fists
insl
add
cld
dec
mov
xor
test
out
ja
cs
ljmp
xchg
mov
insl
je
enter
addr16
cmp
imul
push
add
inc
hlt
movsb
aaa
iret
mov
enter
pop
cwtl
sbb
xor
int
loopne
out
stos
jecxz
ror
sbb
cmpsb
pop
adc
rol
and
rclb
sbb
aaa
xchg
jl
fwait
repnz
test
ret
and
or
push
inc
jge
mov
mov
test
scas
gs
ror
xor
in
ret
int3
inc
notl
andl
xchg
movsb
jo
push
mov
mov
mov
mov
push
jecxz
jp
loop
js
push
xchg
dec
fwait
lods
dec
out
inc
sub
mov
sti
adc
sarl
mov
xor
xrelease
xor
imul
stos
push
and
fcoms
or
push
mov
mov
xor
mov
in
and
stc
and
incl
imul
mov
jmp
and
mov
lods
popa
ljmp
into
mov
push
and
aaa
mov
out
xchg
clc
push
push
out
ds
arpl
add
sbb
adc
sub
ss
imul
jge
add
mov
inc
outsb
sbb
jle
mov
lods
lds
out
push
hlt
fistpll
cli
insl
fwait
push
imul
jne
ret
sar
pop
cli
lods
shrb
jno
test
ficoms
mov
test
jle
js
jbe
ret
xchg
out
movb
inc
jbe
push
pop
jg
pop
scas
push
fdivrs
dec
or
and
clc
xchg
bound
xchg
sbb
mov
fidivl
fisttpll
insb
shrl
mov
pop
dec
insl
add
xchg
divb
xchg
test
cltd
jno
xor
das
adc
gs
ds
outsl
push
inc
mov
ss
fists
lret
out
ss
and
mov
ret
scas
lds
pop
sbbl
cmp
gs
test
xor
stc
je
xor
sbb
jp
int3
test
push
idiv
lock
sbb
jae
push
mov
stc
nop
jge
cmpsb
test
sub
jno
repz
push
bound
jne
in
xchg
xchg
shrl
jecxz
popf
sub
inc
cmp
call
mov
mov
or
movsl
sub
push
sti
jmp
aam
les
movsl
adc
add
or
paddq
jae
sub
xchg
jne
sbb
xchg
stos
test
jecxz
push
ljmp
test
add
arpl
cwtl
out
std
leave
insl
lret
es
ja
adc
scas
inc
adcl
leave
arpl
fstpl
xchg
arpl
sbb
or
loopne
and
mov
sbb
int3
and
dec
aad
mov
push
dec
adc
fprem
pop
mov
jns
push
out
push
cmpsl
inc
fnstenv
adc
fisttps
daa
outsl
iret
or
add
into
orl
xchg
adc
or
xor
jle
outsb
insb
add
sbb
mov
aaa
cmpb
outsl
jmp
sbb
stc
lahf
push
fisttps
out
test
cmp
xchg
aas
stos
mov
dec
xor
icebp
push
movsb
mov
jb
in
lods
dec
ja
insl
xlat
mov
and
ljmp
int
push
sub
loope
out
xchg
mov
or
cwtl
dec
cmp
stc
mov
pop
das
and
mov
lods
call
and
or
push
inc
fbld
push
xchg
cltd
mov
sbb
scas
sbb
dec
jl
jno
jne
pushf
iret
cmpsl
mov
jns
out
repnz
cmpsb
cmp
lea
jmp
stos
ret
push
sbbl
and
arpl
fwait
mov
lret
loop
das
and
cld
push
mov
xor
es
fisttpll
jmp
in
pop
das
std
out
shrb
test
pop
pop
and
icebp
gs
inc
mov
pop
sbb
push
xor
or
push
inc
mov
inc
sbb
mov
in
test
cmp
rolb
insl
aaa
lahf
stos
push
insl
jbe
fcoml
or
enter
popfw
mov
fdiv
mov
ret
inc
push
test
cmpsb
std
scas
repz
or
popf
mov
pop
xchg
pop
arpl
int
xlat
outsl
xor
pop
mov
mov
jg
pop
or
pop
loopne
test
mov
adc
jne
sub
ja
fs
mov
ret
cmpsl
adc
push
rorl
pop
mov
xlat
mov
push
popf
xsha1
cmpsb
into
adc
daa
mov
inc
cli
aad
scas
and
cmp
xchg
mov
push
fs
xor
fidivs
cmpl
out
js
mov
fbld
test
mov
aaa
xchg
stc
jae
cmp
fistl
or
lcall
test
push
mov
popl
cmp
pop
ret
dec
adc
and
xlat
mov
or
add
movsl
xor
push
sub
push
mov
clc
call
cmp
adc
in
push
fiaddl
mov
out
js
insl
scas
sub
sub
sbb
in
mov
sbb
push
adc
xor
mov
push
enter
mov
pop
inc
scas
pushf
fwait
test
mov
mov
fidivl
dec
mov
loop
clc
and
adc
pushf
add
arpl
sbb
mov
cmp
pop
cli
jno
push
mov
dec
sbb
imulb
xor
stc
push
or
jmp
call
pop
push
xor
add
pop
add
shll
xchg
sub
push
fwait
sub
aad
pusha
jmp
jno
sbb
mov
adc
imul
outsl
mov
pop
mov
mov
jmp
push
xor
lods
addr16
negb
sub
imull
push
jle
mov
xchg
test
mov
aad
mov
out
into
sbb
mov
mov
loop
mov
ret
cmp
cld
xchg
sbb
inc
gs
jne
add
fiaddl
lock
mov
cmc
push
or
fucomi
mov
iret
or
or
pop
push
nop
sub
and
jge
mov
lock
out
or
out
dec
test
fbld
movsl
xor
or
sbb
sbb
add
mov
push
movsb
fdivs
push
cmp
and
dec
dec
mov
loop
loope
pop
push
lds
mov
xor
scas
fs
cmpsl
dec
pop
push
mov
mov
dec
or
xlat
leave
xorb
ds
test
pop
jne
xchg
repz
jae
push
int3
pop
mov
add
and
inc
arpl
ss
sarb
xor
iret
and
adc
mov
out
sub
mov
or
ljmp
notb
clc
pop
adc
sbb
int
and
mov
mov
ljmp
imul
jmp
xchg
out
cld
cld
lret
jb
cmp
mov
sub
adc
xor
jl
sbbb
cltd
jno
fwait
mov
sbb
into
xor
inc
cmp
inc
imul
cli
ss
and
and
into
xchg
xor
add
mov
dec
jns
dec
xlat
outsb
addl
mov
fidivrl
movsb
mov
repnz
mov
mull
aad
inc
and
shrb
out
pusha
fcmovnbe
sbb
jl
mov
jle
jns
xor
pop
jecxz
adc
pop
mov
bound
stos
dec
sarl
mov
shll
enter
mov
loopne
dec
call
in
push
jbe
mov
test
loope
inc
iret
scas
bound
bound
inc
aas
mov
mov
ds
testl
pop
xlat
out
xchg
xor
dec
sbb
push
pusha
xchg
dec
andb
sub
jne
sub
scas
shl
cld
outsl
fidivrl
aaa
inc
lods
cli
inc
test
loopne
nop
out
lret
push
loope
xchg
add
sbb
dec
pop
out
jge
fcmovne
mov
mov
xlat
outsb
repz
push
mov
int
fdiv
push
xchg
fsubrl
nop
mov
mov
jb
push
xlat
in
in
stos
add
jecxz
shrl
or
mov
jmp
cmp
pop
or
ljmp
popf
stc
push
mov
jnp
push
xor
fwait
ja
lds
lods
push
add
xor
adc
in
add
in
pop
jmp
mov
jmp
cmpsl
adc
xchg
adc
sbb
add
fistpll
cmc
push
icebp
test
ficompl
inc
xchg
mov
fists
xchg
shrl
inc
pop
popa
and
inc
out
mov
test
jns
sub
int3
sbb
dec
in
sub
xchg
and
nop
ja
jno
and
add
sbb
push
ret
jecxz
mov
imul
leave
mov
jno
into
ljmp
fucomip
and
jp
in
mov
outsl
or
pop
and
add
js
mov
ret
rcrb
fwait
lods
lret
mov
daa
scas
jns
rorb
sub
imul
xor
sub
out
cmp
lea
sarl
xchg
imul
push
cli
popa
movsl
push
andl
jg
or
or
add
adc
scas
sbb
hlt
jno
cmp
cmp
shlb
leave
or
fmull
mulb
sbb
adc
dec
dec
sub
mov
pop
int3
arpl
mov
or
lods
jo
dec
xchg
pusha
inc
fistl
xchg
mov
inc
cmpsl
push
cmp
ja
jg
pop
dec
shll
ja
out
pop
out
es
popa
mov
sarb
jmp
mov
jb
es
cmp
adc
xor
sub
mov
or
jae
xor
cmp
xor
inc
insb
dec
testb
lods
adc
or
shr
jo
xor
push
daa
xchg
push
leave
dec
mov
and
push
insl
in
cmp
cmp
and
test
adc
mov
pop
push
mov
jbe
filds
lea
fwait
xchg
add
fdivrp
lock
enter
mov
je
jl
fisubrl
pop
cld
push
adcl
xor
bound
test
push
stos
lds
adc
cwtl
xchg
jae
loope
out
popa
test
ja
fsubrs
lods
and
pop
out
jge
cmc
xchg
daa
cmc
jl
lds
jns
jle
popa
push
sbb
push
pop
cmc
test
adc
sub
jl
pop
sub
sbbl
xor
push
dec
movsl
adc
out
dec
fcompl
dec
xchg
xor
mov
adc
push
shl
mov
ss
cli
xchg
sbb
sub
mov
xchg
cld
mov
xor
outsb
cmp
xchg
mov
add
jecxz
inc
mov
and
jl
pop
mov
cwtl
lock
popa
out
add
sub
cmp
pop
sahf
mov
ja
cmp
pushf
sbb
test
rcrb
or
fwait
adc
js
das
inc
sti
test
pop
cmp
sub
mov
xor
add
ss
ds
ljmp
xchg
inc
adc
pop
inc
cli
test
push
lock
mov
popf
mov
push
movsl
jo
divl
popf
scas
jmp
mov
ss
mov
idiv
fiaddl
stos
call
mov
mov
stos
inc
cwtl
fsubr
fmuls
xchg
lods
pop
stc
int3
out
dec
outsl
xchg
loop
lods
aad
pop
pop
into
jle
add
pop
aaa
and
xchg
dec
out
xchg
inc
push
insb
mov
xor
fdivrs
xchg
shrb
cs
sbbb
into
les
add
scas
incl
inc
int
outsb
aad
pop
popf
cli
jp
xchg
hlt
outsb
sub
les
and
pop
pop
pusha
mov
loope
or
add
fcomi
outsb
lock
adc
rorl
and
nop
xor
aam
test
aad
imul
jb
fisubl
dec
adc
sbb
push
mov
pop
out
sub
mov
in
outsl
loop
mov
jno
mov
fsubrl
xor
test
mov
int
lds
divb
push
fsubrs
dec
mov
sbb
shrl
pop
pop
mov
mov
ficompl
push
pop
jge
dec
scas
sar
xchg
add
aad
repnz
sub
lds
mov
mov
or
mov
ja
sub
popf
pop
adc
aam
fildl
add
cmp
std
push
dec
mov
sahf
out
mov
fisubrl
popa
mov
mov
push
sub
mov
outsb
sbb
jecxz
mov
fmul
mov
jbe
push
sub
push
sti
pop
lds
adc
mov
aas
out
leave
or
fcom
sbb
jle,pt
subl
add
daa
pop
mov
lds
insb
jnp
mov
int
push
xor
or
test
rolb
mov
je
jnp
mov
ljmp
je
fcomi
pop
xchg
testb
mov
mov
mov
imul
sbb
sbb
push
bound
in
pop
stc
adc
clc
mov
pop
xor
mov
adc
push
sbb
cmpsl
or
xlat
jns
stos
jne
push
pop
imul
mov
stos
rolb
jg
push
repnz
icebp
sbb
popa
jmp
or
inc
mov
mov
out
inc
adc
divb
jne
cmp
cmp
cltd
mov
mov
jmp
ja
out
adc
push
mov
ret
test
mov
pop
adc
sbb
jle
pop
mov
dec
jle
push
adc
std
inc
jb
push
mov
outsl
xor
dec
cmp
lods
or
dec
cltd
sub
lds
std
sub
andl
int3
lahf
clc
dec
shr
sbb
jle
jmp
stos
pusha
push
pop
lock
add
repnz
xchg
sub
inc
test
pop
ffree
push
jge
int
icebp
rol
and
add
mov
push
aam
out
bound
dec
fnstsw
add
jno
xor
shlb
int
xchg
push
bnd
aas
leave
repz
lret
enter
mov
jne
fdivrs
or
call
repnz
repnz
arpl
iret
rolb
jb
adc
popf
lret
arpl
push
movsl
iretw
xor
jle
push
add
out
rcl
sti
xor
cwtl
scas
movsb
inc
lret
into
cmp
loope
mov
into
xor
sub
movsb
test
xor
adc
mov
fstpl
pop
fs
daa
into
scas
fucomp
cs
imul
ja
test
mov
test
out
sbb
inc
mov
adc
xor
xor
imul
aas
cld
push
dec
jno
inc
xchg
sub
dec
inc
loop
fbld
adc
mov
cld
mov
jecxz
push
sub
mov
idivl
dec
bound
insb
lret
mov
test
mov
jno
ljmp
xor
xchg
jg
mov
loop
push
jae
call
inc
xor
fst
lret
or
repz
mov
xchg
cmp
dec
std
inc
xchg
and
lcall
sbb
or
out
outsl
out
jne
dec
mov
sub
jnp
mov
in
xchg
es
les
push
jo
ss
xchg
pop
mov
cmp
stos
jae
xchg
arpl
push
aam
les
mov
sahf
or
cli
bound
adc
sahf
test
cld
xchg
pop
lcall
cwtl
mov
and
dec
inc
icebp
push
mov
rolb
in
in
movsb
pop
leave
aad
cmp
movsb
ficoms
push
mov
aam
adc
pop
repnz
or
pusha
lret
jae
cmp
inc
nop
mov
sbb
add
bound
inc
fildl
xchg
filds
or
stos
inc
cs
rolb
notb
aaa
repz
push
push
mov
xchg
shrb
jle
test
hlt
push
fwait
pop
ja
clc
xchg
pusha
mov
mov
cmp
cmpb
aam
sahf
and
and
inc
and
cmpsb
mov
pop
jb
iret
pop
out
xchg
add
sbb
xor
ret
scas
ds
xchg
and
sbb
testl
je
clc
test
cmp
outsb
stos
jle
sub
xor
rcrb
sub
xchg
add
popf
aas
mov
ficoms
mov
cmp
inc
test
inc
push
mov
mov
jle
cmp
sub
sub
adc
xor
jbe
adc
adc
testb
xlat
imul
sub
int
dec
cmp
pop
pop
and
sub
cmpsb
mov
or
sti
test
in
xchg
push
lcall
cmp
mov
int3
push
jmp
clc
dec
sub
xchg
js
scas
cmp
pop
in
mov
ret
xchg
mov
dec
and
je
std
mov
mov
cmp
sbb
jl
cmp
xlat
pop
into
aam
mov
pusha
dec
shl
movsl
shl
movq
mov
and
push
inc
cmp
mov
std
pop
push
out
lods
sub
daa
data16
insl
adc
xchg
pushf
stc
xchg
ss
xor
xchg
ljmp
cmpsl
and
or
cmpsl
cmpsb
jns
mov
loop
je
repz
nop
and
or
fwait
test
inc
mov
jne
adc
inc
outsl
jne
push
sub
or
in
gs
pop
fists
repz
mov
in
jecxz
sbb
enter
outsl
mov
cmp
ficoml
lods
add
mov
jp
lds
enter
iret
js
jle
and
imul
inc
push
pop
mov
dec
sub
cmc
fwait
loop
push
inc
lcall
fcomps
sub
xor
dec
loop
shlb
sub
in
pusha
mov
adc
jp
sbb
loope
inc
jbe
sbb
push
aam
mov
shll
and
adc
es
arpl
pop
in
pop
aam
scas
dec
out
popa
jno
lods
cmp
icebp
dec
ret
out
dec
into
inc
std
pop
outsb
mov
push
lret
lahf
mull
mov
adc
mov
mov
jecxz
jl
dec
or
sbb
sub
fs
mov
or
jge
cmp
xchg
jne
test
cmpsl
push
ret
insl
ss
daa
or
cmc
xor
lods
inc
out
aas
in
pop
sub
sbb
jg
push
pop
test
loop
loopne
adc
out
cmp
dec
movsb
pop
push
decl
repz
dec
xchg
std
shlb
cwtl
xchg
pop
sub
mov
lret
jp
jg
std
jl
mov
lock
imul
or
lret
mov
and
pop
dec
int3
cmpps
popa
mov
cmc
int3
sub
xlat
push
fdivr
or
mov
mov
dec
loop
scas
mov
pop
test
fcmovbe
shlb
pop
out
cmp
jo
adc
dec
cmp
arpl
jp
adc
loop
pop
call
std
and
lods
cs
and
leave
aaa
aad
and
dec
lret
mov
push
fistpl
xchg
mov
lods
aaa
imul
add
jecxz
icebp
dec
in
mov
adc
shll
dec
inc
stos
ds
subb
mov
testb
mov
daa
test
ret
shr
mov
imul
out
je
sub
push
loope
xor
clc
xchg
jnp
or
enter
jp
bound
out
lret
out
xor
mov
call
mov
ss
pop
loope
jg
icebp
insb
jns
xchg
push
addr16
mov
cwtl
sbbl
xor
adc
pop
pop
ja
dec
xchg
adc
pop
or
insb
sbb
ds
mov
sbb
add
fnstcw
pop
pushf
mov
lods
add
jge
frstor
mov
mov
data16
and
xor
mov
xchg
sbb
push
push
jbe
cmp
sahf
xchg
sub
add
inc
gs
bound
setge
je
xchg
push
or
mov
ljmp
in
inc
xor
mov
pop
pop
add
inc
push
xor
jo
subb
shlb
cld
popa
test
inc
pusha
inc
stos
movsl
mov
pop
mov
add
dec
dec
stc
mov
lds
sub
movsb
dec
in
loop
add
mov
rcrb
ss
push
mov
leave
test
loopne
imul
mov
scas
fwait
mov
jle
insl
stc
ss
dec
inc
sub
xor
adc
push
pop
pop
js
dec
ljmp
lar
cmpsb
dec
subb
popa
mov
add
cmp
mov
out
rcrb
or
dec
arpl
inc
rcll
aad
sub
lods
jmp
xchg
mov
xor
lods
jo
pop
dec
mov
test
jne
loopne
je
pop
loop
mov
or
sbb
mov
mov
outsl
les
fwait
loop,pt
cmc
fstpt
outsb
loope
ja
pop
xchg
jecxz
pop
sarl
xor
xchg
dec
stos
js
mov
xchg
andl
int3
popa
jg
mov
jg
scas
loop
rclb
push
jne
decb
out
mov
shlb
jecxz
rcrb
jb
sub
fstpl
pop
lret
fisttpl
iret
lods
fs
cltd
mov
out
roll
insl
dec
push
inc
pshufw
lcall
rcrl
ds
addr16
pop
cmpsb
fcoms
push
inc
mov
js
call
pop
push
sahf
addr16
xor
test
mov
fcoms
outsb
add
nop
stos
loope
mov
or
lock
outsb
enter
int
ljmp
pusha
popf
mov
dec
push
add
insb
push
shr
jp
cmpsl
aas
jl
xchg
add
mov
leave
and
xchg
in
xor
pushf
pop
les
mov
mov
ret
fs
imul
outsl
inc
gs
cmp
mov
dec
stos
dec
adc
sbb
scas
jno
jge
ss
xor
repz
loopne
insb
divb
add
xlat
pop
xor
lcall
adc
cs
fldcw
and
fiaddl
fstpt
shlb
jecxz
adc
dec
or
mov
or
cmp
fwait
or
repz
loopne
in
xchg
mov
out
aas
loope
xor
sub
or
dec
mov
scas
ficoms
and
sub
sti
add
mov
test
leave
enter
inc
lods
gs
mov
call
or
mov
and
stos
xchg
loop
inc
in
jp
hlt
int3
fwait
xor
jb
push
push
dec
ja
cmp
addr16
mov
lcall
nop
arpl
mov
sbb
fiadds
nop
jne
push
mov
xor
adc
imul
add
mov
jl
add
mov
loopne
loope
in
xchg
in
imul
jmp
inc
sbb
aam
jle
aas
add
aad
flds
xchg
pop
ss
or
mov
movsl
or
scas
lcall
mov
mov
pop
repz
adc
and
pop
push
xor
cmc
xchg
and
or
pop
sub
jge
jge
adc
mov
inc
inc
push
rorb
xor
fnstcw
movl
gs
adc
mov
test
lods
cmpsb
and
adc
add
mov
fldt
repz
xchg
and
jle
in
outsb
mov
inc
movsl
jge
sub
inc
cmp
cmpsl
cmp
stos
cmp
das
jno
lea
push
inc
sbb
aam
out
mov
or
adc
xlat
mov
add
into
sahf
and
xor
insb
scas
push
scas
mov
aad
xor
pop
testb
jge
push
adc
adc
xchg
add
pop
adc
les
xchg
stos
mov
push
mov
push
xorl
lods
bnd
lret
push
sub
int3
dec
inc
xchg
shll
inc
nop
lods
mov
xor
pop
jnp
dec
pop
bound
mov
rorl
and
add
push
std
pop
ret
orb
mov
push
mov
icebp
insl
sub
or
stos
mov
mov
into
in
jae
mov
frstor
incb
mov
push
or
adc
daa
flds
adc
pop
fsubl
js
call
lock
add
es
sbb
pop
loopne
xor
pop
repnz
inc
xchg
sub
mov
push
pop
inc
mov
scas
mov
xor
iret
add
add
stos
shlb
inc
in
inc
call
out
test
int
frstor
aad
aas
sub
mov
xor
cld
push
mov
inc
push
or
rolb
jl
inc
mov
or
pop
pusha
aad
lea
andb
sub
test
jne
jno
dec
mov
test
push
pusha
xchg
sbb
cmp
push
outsl
lock
adc
xor
inc
imul
fisubs
mov
mov
push
jp
nop
inc
xchg
jns
ficomps
call
and
pop
icebp
push
mov
sti
test
xor
iret
lock
dec
dec
pop
xor
loopne
cmp
cmpsb
add
push
mov
xchg
cld
xchg
adc
aad
cli
bound
ja
and
sbb
aas
mov
dec
lret
pop
cwtl
addl
fidivrl
push
add
lods
cwtl
cmp
push
dec
outsl
push
jnp
js
sub
mov
icebp
cmp
test
repnz
mov
stos
sub
out
test
push
cltd
cmp
std
lds
mov
sti
mov
sbb
das
cs
mov
in
iret
cmpl
dec
inc
fstpt
push
into
push
arpl
jnp
add
scas
movsl
jne
xlat
adc
ds
dec
in
cmp
sub
test
sbb
mov
mov
cmp
mov
mov
cli
push
shlb
test
dec
pop
out
mov
lods
or
call
ret
arpl
sbb
mov
or
inc
cmc
sti
cmpsl
arpl
xor
mov
jnp
mov
test
mov
mov
dec
jg
cmp
sbb
mov
add
aaa
nop
cmp
mov
jae
mov
push
add
stos
inc
lock
jne
xor
jmp
and
dec
es
adc
xor
fnstsw
mov
int
inc
lds
loopne
mov
jns
cmp
testl
lahf
testl
aas
or
sarb
popa
cmp
sbb
nop
jge
icebp
adc
cmp
push
push
pop
fsubrs
jp
mov
sub
ret
fcmove
not
mov
jecxz
jnp
imul
push
inc
fsubr
jg
je
int
and
xor
sahf
cwtl
out
add
cmp
das
addl
jno
shrl
test
xchg
ss
outsl
mov
clc
and
sub
add
imul
sti
mov
cmp
loope
pop
stos
adc
in
sahf
mov
cmpsl
push
sti
push
mov
push
fldenv
dec
test
aas
push
push
mov
mov
sbb
sbb
xchg
dec
mov
add
in
bound
xor
sbb
addr16
nop
fisubrl
loopne
insb
pushf
sub
addr16
push
sbbb
adc
cmp
or
arpl
xor
mov
inc
les
es
mov
jp
inc
bound
mov
stos
push
or
xlat
rorl
adc
jno
dec
rcrb
lcall
inc
pop
shll
arpl
mov
mov
fildl
scas
sbb
insl
test
sub
jno
jbe
in
or
out
les
aaa
dec
push
repz
adc
push
add
dec
test
xor
and
cwtl
pop
jmp
push
mov
xor
popa
mov
mov
out
movsl
notl
sub
xchg
popf
cwtl
cli
adc
lock
lock
mov
dec
loopne
jns
sarb
add
shr
xchg
pop
data16
out
mov
sub
shl
xchg
inc
je
sbb
aaa
sbb
cmp
jae
push
xchg
pop
lock
push
sub
cmpsl
push
call
adc
cmc
and
adcb
or
ja,pt
mov
dec
xchg
out
add
jle
mov
imul
clc
shrb
cld
sub
mov
jecxz
pop
xor
divl
push
add
cld
xchg
adc
rcl
bnd
inc
or
or
push
sti
aad
sarl
adc
insb
or
add
scas
jbe
xor
les
pop
in
mov
mov
stc
inc
pop
stc
jb
stos
sbb
out
leave
mov
sub
fdecstp
sahf
sbbl
mov
push
ss
mov
call
or
or
inc
cmp
loopne
push
cs
cltd
out
push
and
mov
gs
loopne
icebp
movsl
cmp
jle
hlt
adc
lahf
dec
aaa
add
fnsave
mov
rolb
mov
lea
loopne
xor
cmp
pop
iret
push
xorb
test
sub
in
sti
lea
faddp
mov
popa
xor
push
test
push
aad
lds
jecxz
js
test
shr
sub
lcall
xor
push
dec
movb
hlt
or
lea
test
aad
mov
test
mov
or
cli
repz
arpl
inc
test
bswap
xchg
dec
aaa
pop
or
pop
pop
lret
daa
jmp
push
adc
idiv
jb
mov
enter
push
ljmp
cmp
xchg
pop
mov
scas
inc
inc
mov
into
loop
test
mov
rorb
and
stos
dec
cmp
dec
movsb
cmp
xor
dec
iret
inc
inc
adc
in
pop
jmp
adcb
shlb
gs
inc
outsl
in
scas
in
lret
lret
fisttps
inc
push
sub
repz
std
and
add
or
inc
push
mov
fstl
cltd
xchg
lods
xchg
push
xor
mov
jbe
add
sti
ja
sub
stc
fistps
ja
push
mov
pusha
jbe
fstp
adc
scas
out
mov
xchg
fdivl
mov
xchg
lcall
popa
out
xor
fldl
xchg
cmp
lahf
cltd
shll
ret
sbb
dec
repz
test
jp
xchg
xchg
xor
pop
icebp
enter
mov
aaa
xor
mov
push
leave
push
push
adc
pop
test
and
sub
pop
aas
pop
es
jecxz
adc
leave
rorb
or
mov
lods
dec
in
pop
dec
sub
imull
add
pop
adc
inc
xor
and
dec
and
cmp
fistps
fnclex
push
mov
mov
sbb
movsl
cltd
out
mov
add
test
cwtl
mov
pop
cmp
pop
inc
movsb
inc
mov
dec
mov
pop
jbe
fidivl
lds
cli
leave
jg
xchg
sbb
out
test
jp
xchg
aas
dec
ret
lahf
in
jg
xchg
sub
out
inc
cld
test
pop
dec
sub
and
idivb
sub
pushf
xchg
pop
icebp
idivl
mov
fistpll
std
dec
aad
xchg
popa
loop
unpcklps
or
fdivrs
scas
lods
pop
xchg
mov
jae
imul
xchg
or
and
xchg
mov
mov
dec
jno
insl
jecxz
gs
pop
xor
cmpl
mov
adc
lea
repnz
scas
xor
push
and
aam
lds
and
add
pop
out
mov
pop
jbe
mov
xchg
lret
in
repz
call
jne
outsl
adc
mov
stc
je
xchg
pop
mov
enter
dec
notl
mov
mov
inc
in
pop
mov
cmc
sub
out
and
lret
cmp
jae
loopne
jns
mov
lcall
je
test
sahf
mov
in
jl
push
add
test
push
jo
mov
inc
sbb
call
out
lea
rol
jo
nop
dec
cmp
loop
sar
lock
cmp
add
sub
fcomps
add
fistps
testl
sub
movsl
mov
pop
mov
mov
pop
ret
mov
cs
punpckhbw
mov
insl
mov
stc
andb
mov
jle
testl
add
imul
insb
adc
fnsave
pop
sbbb
cmpsb
loop
fsubrs
shrb
out
xor
sub
in
push
cmp
orb
sub
stos
mov
fwait
mov
call
sub
jo
adc
pop
cltd
mov
pop
icebp
mov
push
sbb
out
push
andb
jne
fistps
sti
sub
les
es
out
cmp
push
mov
mov
mov
fsubrs
lods
pop
mov
jecxz
push
aam
sti
xchg
mov
xchg
pop
in
jae
mov
rcrb
in
xor
xchg
mov
sub
sub
push
loope
jo
cmp
fisubl
inc
jo
in
dec
dec
clc
jl
ret
test
fwait
xchg
xchg
or
icebp
adc
sub
cmp
lods
sbb
or
or
cmpsl
and
mov
add
lds
repnz
mov
orb
xchg
cmpsb
imul
jae
das
adc
jecxz
and
sbb
lret
jb
cld
push
sub
lds
and
pusha
in
cltd
dec
ss
jb
sbb
mov
mov
xor
push
fcoms
leave
inc
sub
mov
sbb
jnp
add
arpl
cltd
sbb
js
cld
dec
pop
inc
sub
nop
shrl
cmp
mov
push
fisubs
jbe
mov
xor
jcxz
push
mov
cltd
xor
add
or
das
mov
pop
or
cs
adc
mov
aad
fcompl
dec
rclb
scas
stos
in
sub
cmp
inc
inc
int
sub
sbb
and
popf
inc
pop
xchg
pop
push
dec
ret
inc
push
movsl
jb
cs
dec
andl
cli
mov
mov
imul
inc
mov
mov
inc
cli
dec
clc
iret
cld
sbb
mov
ret
xor
lret
in
test
loop
addr16
xchg
mov
cmc
sarl
sbb
cmp
fdivs
orb
outsl
aaa
pop
add
rcrl
inc
jns
sbb
xchg
cmp
and
das
scas
mov
sti
scas
xor
xchg
or
aas
pop
rcrl
testb
inc
and
cmp
xchg
lods
dec
roll
cmc
or
test
ffreep
cld
jnp
pop
or
cwtl
icebp
sbb
xchg
mov
cmp
es
pop
sub
lock
jb
mov
daa
je
aam
loop
mov
cs
das
movsb
xor
mov
adcb
pop
es
fucom
jo
mov
xor
popa
add
xlat
outsb
xorb
je
popa
jb
lret
push
adcl
xchg
sbb
sub
or
push
mov
dec
loope
inc
mov
insb
mov
xchg
add
mov
enter
adc
lahf
push
call
or
or
nop
loopne
call
jl
jb
ret
push
or
enter
mov
fcompl
sub
stc
rcrl
flds
lret
fisttpll
int
pusha
mov
loope
add
jecxz
data16
in
sbb
cmp
daa
push
push
ds
out
out
push
or
and
mov
adc
push
inc
and
rcr
mov
fs
mov
psubsb
pop
dec
adc
cmc
je
lret
dec
push
push
or
and
add
movsb
shrb
or
repnz
daa
jecxz
lods
pushf
mov
ljmp
out
lea
pop
mov
and
sub
ljmp
out
pusha
add
push
scas
ffree
pop
push
push
xorl
push
mov
or
fldl2t
lret
adc
add
les
dec
lcall
inc
mov
xor
xor
sub
xchg
mov
cmp
loopne
xchg
adc
xchg
lret
repz
add
xchg
lcall
jno
inc
ficoms
mov
sub
movups
inc
mov
mov
xor
rclb
das
dec
and
js
leave
pusha
cmpsl
mov
cmp
fadds
movsb
mov
sub
push
xor
mov
pop
mov
jb
lret
movsb
sbb
daa
pop
out
cmpsl
and
clc
adc
test
xchg
inc
sbb
jns
dec
mov
adc
lret
ret
lcall
clc
inc
scas
add
mov
mov
test
call
jae
push
pop
repnz
lcall
sub
pop
or
sbb
fidivrs
mov
xchg
pop
xchg
pop
cmp
xlat
xchg
jns
jmp
vmovups
or
jno
out
mov
jmp
pop
push
xchg
add
cmpsb
adc
inc
aad
pop
dec
loop
int
mov
add
dec
mov
pop
xor
xchg
lock
push
enter
pop
lcall
and
sub
and
dec
ret
cs
pop
xchg
cmc
insb
das
sub
adc
ds
dec
sub
jo
adc
not
inc
mov
rcll
mov
xlat
cmp
not
sub
nop
push
pop
or
pushf
add
mov
popa
jmp
aas
xor
js
adc
sbbl
repnz
stc
lret
mov
loop
mov
lcall
push
mov
outsl
sbb
mov
cmp
out
fcomps
ret
add
test
jne
lock
pop
ja
push
insb
pop
push
in
test
and
test
ficomps
xor
pop
cmc
hlt
pushf
push
add
cltd
dec
int3
mov
scas
inc
dec
les
cwtl
lret
xchg
jmp
cmp
loop
xchg
outsl
mov
push
or
dec
jecxz
push
dec
mov
or
mov
mov
es
push
jbe
addr16
ds
pop
nopl
mov
jno
gs
fisubs
push
push
je
cwtl
in
mov
xchg
mov
push
and
rorl
mov
fidivrs
mov
fisttpl
xlat
jecxz
sbbb
faddl
push
movsl
mov
lcall
mov
icebp
adc
add
xor
push
jno
pop
shrb
adc
dec
cmc
jb
imul
or
mov
or
mul
int3
adc
cmp
mov
fisttps
lret
loope
cmpsl
and
sub
aas
aam
das
mov
adc
jbe
inc
add
rcl
xor
push
xchg
adc
es
xchg
fwait
xchg
loopne
test
orl
cmp
cli
test
cld
push
rcll
xchg
popa
ja
dec
test
adc
sbb
test
add
push
jl
loopne
mov
jg
sbb
out
push
scas
xchg
test
jl
mov
mov
pop
movsb
stc
mov
add
lds
orb
cmp
insl
dec
test
pop
xchg
ljmp
add
imulb
stos
inc
cmc
push
sar
jno
sub
and
cwtl
pop
sbb
je
pushf
arpl
int
sti
xchg
lea
dec
divb
aam
orb
xchg
lcall
adcb
jmp
imul
adc
stos
ficoms
inc
into
push
xchg
mov
rcrl
push
xor
mov
stos
jne
cmp
cmp
fcmovnb
jnp
lods
stos
fldcw
jbe
jmp
repz
jmp
test
lret
jb
adc
push
in
xor
pop
cmpsl
vorps
fdivr
or
repnz
es
cs
movsl
movsb
ss
cmp
pop
test
movsl
into
shl
dec
mov
ret
adc
cmp
sbb
cld
cmpsb
lret
es
jo
out
inc
std
aam
out
js
adc
inc
test
inc
sub
jae
jo
mov
mov
mov
mov
sbb
pop
push
scas
lods
inc
dec
repnz
insl
lret
pop
idivb
std
lods
int
std
pop
stc
push
lcall
and
inc
ret
fidivrs
xlat
push
aas
popa
popf
mov
inc
mov
call
out
lcall
shrb
nop
cmp
icebp
xchg
leave
dec
out
aam
or
fdiv
ret
shld
mov
testb
sbbl
aas
and
and
sbb
xlat
ret
fstl
add
lret
lret
fs
mov
xchg
test
sbb
cli
push
and
sub
lcall
inc
repnz
xchg
jle
jmp
fdivrl
mov
cmc
xor
aaa
int3
mov
stos
xor
adc
test
push
sahf
jbe
or
jbe
inc
xlat
int
cmovg
pop
xor
dec
iret
mov
cmp
push
mov
enter
lahf
xchg
sub
cltd
lcall
call
sbb
inc
xor
jmp
mov
add
jg
enter
xchg
lret
inc
std
rol
jnp
add
int
sarl
outsl
mov
pop
xor
fstpt
pop
clc
add
push
mov
ja
out
nop
push
xchg
aas
insb
fbstp
mov
and
repnz
cltd
xor
js
out
cmpsb
inc
orl
add
mov
mov
cmp
dec
rorl
cmpsl
inc
add
sbb
iret
mov
cmp
inc
jp
inc
nop
daa
push
push
jae
mov
mov
inc
insb
inc
arpl
loopne
fdivp
xor
push
xor
rclb
cs
sub
mov
gs
aaa
adc
mov
inc
pop
xor
call
das
mov
sbb
push
jecxz
je
xchg
shrb
in
lods
loopne
sbb
dec
je
dec
mov
fcmovnb
aas
inc
aad
std
add
xchg
jg
insl
inc
jne
loop
mov
rorl
cmovae
cwtl
insb
jle
mov
mov
test
pop
leave
bound
sub
rcrb
inc
pop
inc
sbb
or
cmpsb
push
mov
jnp
adc
shlb
in
shrb
push
dec
pop
ljmp
es
xorl
xchg
jle
cmpsl
sub
pop
sbb
pushf
push
daa
dec
repz
bound
adc
orb
lea
adc
fldenv
mov
or
test
mov
rcl
mov
or
xchg
xor
cmpsb
imul
and
ss
aad
cmp
sub
xchg
rorl
xorb
push
sub
arpl
jns
sub
dec
out
xor
dec
pop
add
bound
lods
daa
cmp
mov
push
mov
dec
jno
shlb
iret
mov
fiadds
stos
jne
sub
and
dec
idivb
cmp
pop
aad
pop
pop
scas
mov
push
in
ss
sbb
ret
dec
pop
inc
mov
insl
in
lret
cmp
xchg
rorb
xlat
inc
push
insb
clc
in
lds
xchg
sarl
cmp
mov
cmc
ja
and
xchg
aad
mov
or
arpl
push
mov
sub
insl
push
lcall
in
cmpl
mov
add
rclb
aaa
stos
pop
std
or
xor
inc
push
data16
test
sbb
dec
mov
int3
lods
sub
mov
or
mov
out
and
outsl
rcrl
fs
dec
aam
adc
xor
imul
pop
lock
repnz
and
lds
negl
mov
push
addr16
mov
andl
pop
repz
mov
iret
inc
jge
jbe
cmp
loopne
shl
push
dec
mov
xchg
or
push
in
test
out
xchg
in
jmp
pusha
push
mov
add
lcall
pop
in
mov
push
cli
roll
inc
add
inc
popf
nop
addr16
mov
pop
cltd
dec
aam
sbb
dec
push
loop
popa
fsub
mov
cmc
cwtl
jno
lahf
mov
adc
sbb
add
lods
clc
dec
notb
insl
into
pushf
es
mov
push
mov
cmpsb
cwtl
fdivs
push
pop
push
pop
and
lea
or
sub
pop
cmp
push
xor
je
aas
nop
fwait
sub
pop
int
jnp
add
xor
push
xchg
dec
inc
push
test
push
out
add
mov
add
lret
bound
stos
popl
jle
mov
mov
push
insl
sub
mov
into
jmp
pop
in
pop
mov
popf
dec
push
in
xor
sbb
mov
pop
int3
inc
inc
mov
xchg
inc
or
sbb
push
in
xchg
out
jecxz
in
push
xor
push
roll
adc
add
jge
mov
inc
mov
add
and
int3
xchg
inc
adcl
call
add
push
xchg
mov
pusha
dec
mov
jb
lods
mov
popa
add
sbb
or
test
std
insb
out
out
int
push
icebp
and
dec
data16
cmp
sarb
fucomi
out
push
lods
orb
aas
insl
dec
fsubl
mov
je
adc
pop
bound
test
inc
movsl
lds
cmpsl
or
stc
dec
add
dec
cmp
cmpsb
lcall
shlb
aad
and
fs
test
pop
sbbb
adc
repnz
mov
xor
dec
in
cmp
cmc
into
inc
cmp
lds
jne
iret
stos
add
lock
mov
andb
dec
mov
in
mov
stos
mov
call
inc
mulb
andl
dec
push
fsubrp
jle
leave
mov
xlat
data16
out
test
inc
in
mov
aad
insb
call
push
aad
cmp
dec
jno
mov
sub
test
adc
pushf
mov
les
xchg
and
test
int
outsb
dec
pop
pop
pop
mov
mov
pop
pop
cld
jnp
insb
orb
imul
in
test
rolb
sbb
out
jb
mov
aam
adc
imul
push
inc
adc
out
arpl
into
mov
push
repz
push
pop
clc
pop
mov
fwait
loop
fistl
cltd
hlt
or
stc
cmp
xlat
cltd
add
iret
jmp
arpl
pop
rorb
jno
pop
xchg
and
push
fsubr
adc
mov
add
inc
push
push
add
cmc
shl
jns
xchg
mov
adc
or
mov
enter
shl
push
and
sbb
insl
pop
lods
fistpll
xor
or
adc
jle
xor
lahf
jnp
jge
cld
sti
sub
cmp
pop
mov
dec
loop
mov
mov
and
sbb
push
dec
pop
das
nop
mov
aad
jle
lahf
jne
mov
mov
xchg
repz
jne
cmp
notl
sbb
out
jle
push
das
cmp
and
push
test
inc
loop
icebp
or
dec
pusha
scas
mov
jb
shrl
push
nop
imul
ljmp
loopne
fsubl
jmp
mov
nop
adc
jecxz
stc
add
ret
mov
cmpsb
jg
in
shrb
sbb
jae
lcall
or
shll
push
push
mov
pop
jmp
les
loopne
andb
in
inc
out
or
rorl
int3
call
or
mov
push
or
mov
push
mov
inc
mov
fcmovb
dec
push
xor
jno
or
mov
notb
fstpl
mov
fcoms
int
ret
testb
dec
and
cli
xchg
iret
push
cmpsb
out
popf
push
mov
sub
js
mov
jp
dec
out
sbb
jbe
pop
dec
or
pop
adc
cmp
xchg
sub
out
das
jbe
add
outsl
repz
stos
add
jbe
fs
xor
cld
dec
sbb
sbb
sub
fcomip
stos
and
mov
mov
cs
arpl
lcall
aas
pop
inc
mov
imul
insb
xchg
fmul
inc
int
or
jp
jmp
inc
aad
or
fbstp
loopne
dec
adc
pop
addr16
add
mov
es
nop
xlat
or
aaa
movsl
andb
pop
mov
iret
fwait
xchg
pusha
testl
push
iret
xchg
rcll
mov
adc
inc
rcll
inc
jecxz
mov
adc
aam
and
scas
xor
test
adc
dec
andb
stc
mov
or
aam
iret
push
ficoms
nop
daa
je
sub
jmp
mov
lcall
rsqrtps
pop
pop
jle
mov
mov
or
mov
dec
ds
mov
cmpsb
jp
add
lock
add
xchg
sub
das
cmp
xsha1
cmpsb
dec
and
xchg
inc
aam
fidivs
xor
fcoms
add
sahf
fsubrp
iret
jg
ljmp
jl
mov
xchg
cmp
fdivr
mov
jl
and
nop
daa
fdivrl
lods
aam
mov
sarl
repnz
out
loop
push
adc
in
pop
gs
adc
add
mov
inc
sbb
mov
or
shrb
mov
leave
cmp
sub
sub
xor
xchg
jg
shr
xor
xchg
inc
and
arpl
or
lea
cmp
dec
out
ss
sbb
aam
jo
push
or
imul
or
and
into
into
mov
in
stos
dec
or
ljmp
pop
sbb
cmpps
out
mov
pop
mov
out
pop
clc
and
mov
mov
fdivrl
mov
loopne
cmc
fldt
test
mov
dec
and
dec
dec
mov
xchg
je
scas
lds
movsl
icebp
aad
stos
and
push
mov
jo
insb
cmpsb
xchg
xlat
repz
xchg
or
inc
jg
cld
xchg
pop
pop
scas
mov
pop
cs
in
out
insl
dec
rcr
out
mov
cmpsb
iret
push
sbbb
gs
in
jnp
add
incl
sbb
push
push
pop
push
or
push
mov
cmp
inc
ljmp
std
or
mov
adc
jo
movsl
testb
in
das
filds
test
rcll
in
test
cli
out
jb
mov
adc
jnp
mov
add
pop
ljmp
push
in
sbb
jnp
test
je
pop
fstl
clc
dec
mov
mov
xor
jmp
pop
jae
add
cmpsl
xorb
cwtl
test
xor
cltd
test
mov
in
aas
sets
pop
jno
cmpsb
daa
cli
call
incb
or
cltd
arpl
int3
cltd
repz
addr16
cmp
sbb
fidivrs
dec
adc
rol
mov
sahf
mov
cmc
sbbb
dec
shll
or
scas
pop
outsb
loope
hlt
mov
mov
ja
mov
xchg
idivb
dec
xchg
test
dec
jo
fsubs
dec
lods
pop
jb
pop
cld
cmc
mov
mov
mov
lret
jb
je
mov
out
inc
xchg
and
push
pusha
inc
push
js
je
aad
sub
out
scas
adc
adc
jmp
sbb
and
scas
popf
mov
lods
xchg
hlt
ret
adc
movsl
icebp
or
test
xor
loop
xchg
addl
fs
cmpsl
jl
jns
ret
add
cmp
out
fwait
shlb
or
mov
stos
orl
out
insl
add
lea
mov
push
xlat
fadd
push
jno
jb
stos
mov
into
mov
xchg
mov
sbbl
sub
sbb
movsb
dec
aad
dec
rcrl
inc
imul
mov
pop
repz
push
ja
repz
push
mov
and
mov
movb
repz
sub
xor
daa
pop
xchg
xor
scas
ja
mov
jmp
add
sbb
lahf
push
notb
lods
repz
mov
shrb
clc
sahf
in
inc
pop
push
add
xor
add
in
es
xor
lods
mov
mov
pusha
subl
pop
loop
aas
inc
inc
inc
xor
gs
inc
es
jl
fstps
stos
incb
or
popa
fbld
pop
xor
test
repnz
jecxz
mov
xor
fdivrs
stos
cmp
lock
jbe
mov
shlb
loop
push
mov
test
adc
data16
cmp
xor
sub
pusha
pop
aam
sbb
in
mov
idivl
in
jo
pop
mov
mov
cmp
sbb
mov
and
rcr
iret
lods
mov
andnps
pop
jb
jbe
mov
cli
and
aas
frstor
mov
cmp
inc
add
in
push
lret
mov
loop
in
or
imul
nop
inc
xchg
sbb
dec
jno
or
jecxz
jle
sti
jl
fs
dec
mov
loopne
aam
fistpl
mov
jae
xchg
int
xchg
mov
push
out
imul
or
dec
jl
imul
xchg
mov
js
loopne
push
mov
push
arpl
das
jnp
dec
push
mov
mov
xchg
lahf
jge
or
cmpsb
push
stos
imul
cli
jmp
shll
mov
nop
push
pop
dec
ret
jnp
jnp
sbb
jns
ret
xor
insl
add
add
push
shrl
insb
xlat
fwait
es
mov
addr16
push
xchg
shll
pop
jecxz
inc
adc
pop
push
in
cmpb
sub
add
adc
xchg
xchg
xchg
scas
out
or
fcomps
or
fisttpll
sbb
or
push
dec
xor
sbb
pop
leave
mov
mov
fnstcw
sub
in
cmp
sbb
fidivrl
inc
pop
ret
mov
dec
push
popf
adc
inc
pop
cmp
fs
push
push
sub
mov
or
dec
fiadds
jecxz
and
test
std
les
pop
insl
and
repnz
mov
stc
mov
pop
outsb
adc
je
pop
test
and
fnstcw
call
stc
pushf
cld
dec
xchg
and
pop
popa
jg
or
aam
mov
pop
fldl
and
test
imul
int
icebp
dec
xchg
cwtl
repz
imul
out
xchg
push
dec
or
nop
sbb
imul
pusha
push
inc
mov
ss
cli
xchg
add
int
mov
stc
and
and
cmp
and
lcall
test
test
and
cmpsl
jnp
bound
mov
pop
pop
adc
add
into
addr16
jp
jle
stos
dec
std
test
ja
push
xchg
arpl
mov
sub
and
jno
add
dec
jmp
lea
fildl
clc
push
mov
inc
jg
iret
sbb
inc
ss
push
lds
adcb
add
jo
adc
call
jmp
setne
jbe
popf
mov
mov
es
or
lahf
and
pusha
xchg
aaa
jae
mov
dec
jno
cmp
test
push
push
add
mov
int
mov
shr
icebp
gs
and
sahf
sbb
pop
icebp
adc
pop
mov
jnp
test
repnz
xor
test
xchg
test
dec
pop
adcl
in
fiadds
insb
js
mov
fldt
push
xchg
jno
pop
push
add
mov
repz
shrb
je
xor
aaa
pop
inc
gs
mov
sbb
addr16
mov
dec
je
mov
jg
in
pop
aas
mov
vphaddbw
sti
xchg
and
sub
sbb
or
dec
faddl
aam
cli
xor
mov
push
movsl
jnp
fidivrl
inc
lret
cmpsl
sub
lahf
in
jbe
mov
push
es
imul
fs
ja
test
ret
mov
mov
js
push
and
hlt
pop
flds
popf
add
stos
push
addb
xchg
sub
insl
sahf
ss
push
mov
adc
mov
popf
sbb
inc
cwtl
leave
pop
fwait
int
inc
fstpt
jp
movsl
ffree
dec
push
pop
jno
push
inc
fdivl
bound
aas
jmp
sub
pop
mul
xchg
cwtl
aaa
push
adc
into
push
cmp
gs
mov
mov
aad
mov
jns
push
pop
adc
add
repz
mov
mov
je
ds
pop
mov
je
pop
nop
mov
rcll
movsl
adc
push
outsb
and
xchg
push
jae
and
push
adc
add
enter
ljmp
fcoms
ret
sti
jl
ss
or
jns
adc
jl
rorb
arpl
push
sbb
fistl
jbe
icebp
mov
or
push
xor
mov
dec
stos
xor
push
dec
mov
mov
fstpl
int
mov
fcompl
out
cli
arpl
adc
sbb
addr16
loope
push
dec
popf
or
sbb
mov
jp
adc
imul
inc
inc
push
push
xor
ret
mov
xchg
push
shl
mov
jge
movsl
add
shrl
and
push
jns
jnp
test
cmc
std
mov
or
in
cs
in
add
or
xchg
sti
mov
iret
push
xor
stos
in
inc
test
js
fwait
sar
shrb
loop
fisubl
xor
mov
push
ret
mov
je
stos
inc
cwtl
xchg
jno
mov
ret
xchg
je
push
lods
enter
repz
rcll
gs
cs
jecxz
cli
movsb
enter
les
inc
icebp
cltd
insl
jecxz
sahf
mov
adc
push
pop
adc
push
popa
push
xlat
iret
int
inc
sti
cs
xor
pop
dec
rolb
mov
fldcw
popa
push
mov
sbb
adc
mov
leave
popa
std
xchg
sub
popf
mov
repz
adc
popa
jns
xchg
mov
dec
mov
in
lea
mov
push
sbb
mov
push
out
into
lock
push
insb
negl
xor
sbb
popa
jbe
or
dec
daa
mov
mov
adc
push
mov
addr16
xchg
int
sub
stc
stos
mov
in
inc
lods
clc
inc
rep
mov
jle
pop
mov
sub
pop
mov
andl
decb
cmp
int
js
lahf
out
pop
jne
shrl
mov
mov
stc
lock
mov
rcll
ss
cltd
in
repnz
lret
push
jmp
inc
cld
cmp
arpl
imul
xchg
movsb
std
out
arpl
shlb
xchg
push
adcb
add
sbb
loopne
je
pop
mov
sarb
ja
xchg
rolb
sbb
fnstenv
mov
xchg
daa
mov
sar
ficomps
sub
xchg
pop
ret
sbb
jg
sbb
push
rcl
cmp
sub
push
sbb
xchg
jns
mov
mov
cmpsl
dec
sarb
lahf
fdiv
inc
hlt
mov
cmp
dec
ds
fdivrs
iret
or
mov
les
es
lcall
ret
fimuls
push
sub
pop
movsl
in
les
leave
punpcklbw
push
xor
cmpsb
mov
pop
ret
cmp
sbb
mov
repnz
mov
sub
add
jecxz
inc
push
and
xchg
xchg
cmp
xchg
xorb
cmp
mov
les
sbb
cmpsl
and
insl
mov
fcmovne
cmp
push
cmp
sbb
xchg
mov
repnz
rorl
js
movsb
fucomip
aad
push
push
push
adc
and
sbb
in
cwtl
sbb
cwtl
xor
pop
ja
leave
mov
sub
sbbl
mov
in
mov
jo
dec
mov
mov
popa
adc
sbb
jecxz
mov
push
add
push
rcrl
sahf
jge
adc
loopne
pop
nopl
mov
stos
jge
mov
lds
into
ljmp
in
mov
inc
xor
popf
pop
xor
pmaddwd
loopne
jl
xchg
add
lcall
jns
sbb
mov
out
push
sub
pop
popf
fnsave
sbb
stc
jns
inc
mov
xchg
add
cld
psubsw
mov
cmp
inc
ret
sub
add
movsb
das
jns
add
lds
ss
inc
xchg
jmp
mov
out
xor
inc
lcall
inc
lods
mov
or
xor
stc
jns
scas
out
gs
adc
roll
mov
mov
and
push
call
cwtl
push
xor
cs
lock
dec
xchg
rorb
jno
cmpsl
call
sbb
cmp
pop
je
sub
push
pop
insl
ret
jae
mov
cmp
pop
popf
xor
sahf
imul
push
mov
aaa
push
sbbl
repz
inc
mov
sbb
outsl
faddl
addr16
int
sub
movb
shl
repz
pop
lahf
mov
fwait
xor
stos
cmp
je
inc
pusha
push
xchg
aaa
fidivrl
aas
mov
mov
adc
xchg
into
icebp
cwtl
jnp
push
cwtl
jg
lret
or
mov
idivl
add
movsb
imul
cmpsl
orb
cmp
add
or
out
add
fidivs
inc
or
or
aad
and
aas
notb
incb
fdivrl
movsl
sbb
push
mov
jmp
and
mov
add
xor
lea
dec
loope
lods
aam
sub
dec
mov
addb
sbb
mov
je
xor
daa
push
push
lret
push
mov
mov
cmp
inc
add
insl
sub
rcrl
pop
xor
ror
data16
sbb
outsl
mov
jns
mov
hlt
lret
sti
ss
or
xor
lahf
mov
mov
mov
pop
js
cmp
xlat
loope
mov
mov
sub
dec
aam
js
rcl
push
fnstenv
sub
mov
repz
jg
xchg
hlt
mov
and
push
xlat
jg
scas
and
hlt
mov
cmp
xlat
sub
xchg
mov
xchg
outsl
xchg
addr16
addr16
jno
out
shlb
xchg
mov
outsl
cmc
loopne
jnp
push
add
sbb
loopne
pop
adc
or
cmc
ds
jl
arpl
imul
sub
dec
add
adc
fs
sbbl
mov
mov
cli
sbb
add
out
and
lds
imul
bound
dec
imul
scas
sub
inc
push
and
inc
sbb
push
dec
and
testb
sbb
imul
dec
cmp
jp
adc
cmp
fidivrl
je
xchg
pop
xlat
jbe
and
dec
cld
mov
insb
sti
pushf
mov
mov
scas
and
jns
cmp
cmpsl
das
ret
aad
or
jns
popa
imul
popf
subb
scas
lahf
stos
fistpll
jne
xchg
push
icebp
ds
popa
lods
divb
cmpsb
lea
pop
ja
imul
imul
dec
cwtl
lret
dec
ret
push
je
fisubs
sub
lret
js
lret
lret
nop
cmpsl
mov
in
mov
bound
fmuls
test
test
stos
subb
daa
outsl
sahf
int3
sbb
or
ja
mov
scas
add
arpl
out
jb
push
mov
fsqrt
xchg
test
inc
sbb
and
jmp
and
aad
cwtl
pop
cmp
bound
iret
lahf
adc
dec
sbb
repz
and
push
cmp
fnstsw
push
mov
sub
aas
arpl
int3
mov
cmp
pop
out
and
ja
stc
inc
fmull
jnp
shlb
fsubs
jmp
test
push
ret
dec
bound
push
lahf
scas
arpl
xchg
shlb
push
js
jle
and
insl
pushf
dec
imul
es
ja
clc
push
mov
sbb
xchg
push
sub
inc
push
lea
repnz
popf
stc
lock
cld
popf
or
push
add
mov
sub
pop
hlt
dec
out
or
fwait
cmpsb
insl
jbe
lret
sti
xchg
std
xchg
enter
push
sub
jns
hlt
mov
sbb
dec
push
jg
aam
push
aaa
fcmovbe
jae
std
xchg
xchg
dec
shlb
fidivrs
ja
inc
jmp
andl
and
sti
not
cmpsl
cld
push
in
mov
add
pop
xchg
outsl
mov
sub
shlb
inc
loopne
cmp
adc
in
rcrl
add
mov
xor
jmp
xor
mov
xorb
repz
iret
adc
mov
imul
dec
cmp
ja
pusha
xchg
pusha
aad
xchg
dec
out
mov
out
iret
cmpsb
mov
popf
xlat
scas
sbb
adc
and
ss
push
xor
mov
sbb
dec
adc
cmpsl
idiv
out
mov
inc
add
cmc
fmull
xor
ds
jo
jle
xchg
and
push
nop
aad
int3
inc
rol
add
adc
mov
lods
mov
dec
vunpcklpd
aas
push
adc
xchg
jnp
cmpsl
fsts
lods
loopne
shll
jbe
je
test
xor
xchg
jnp
in
dec
int
out
js
push
lret
mov
mov
stos
mov
dec
sbb
mov
jbe
xchg
cmp
lret
dec
jns
sub
cmc
in
rcrb
gs
jge
pop
and
add
gs
cmp
arpl
dec
cmp
test
mov
int
mov
les
xor
or
bound
and
outsl
sbb
jb
das
jmp
pop
cld
xchg
push
rcrl
and
or
or
sub
xor
ljmp
xor
orb
adc
and
insl
aaa
jb
incb
lcall
mov
sbbl
je
mov
sub
inc
cld
hlt
jno
push
fwait
add
push
sub
mov
cmp
and
dec
fisubs
mov
movsl
in
outsb
sbb
mov
dec
gs
insl
add
fidivrl
iret
loope
imulb
aas
and
sub
sbb
mov
pop
int
ds
loopne
jge
xchg
xchg
cmp
testb
rorb
lea
jg
divl
lret
in
in
into
cmp
out
lods
and
pop
stc
push
mov
push
mov
inc
sbb
ljmp
jbe
pop
nop
mov
in
push
and
add
adc
mov
push
xchg
idivb
jl
leave
dec
in
mov
imul
and
push
decb
and
dec
fadd
sub
enter
mov
sub
dec
and
mov
gs
xor
jg
adc
movsl
test
lds
cmp
in
pop
jg
cmp
add
pop
dec
jns
sbbb
popf
jecxz
std
cltd
shl
sti
inc
decl
mov
sub
and
icebp
outsb
xorl
push
nop
daa
xchg
fildl
test
fisubrs
add
pop
test
jbe
mov
ljmp
inc
mov
jge
dec
in
dec
test
nop
sub
loopne
push
add
roll
sub
movsl
pop
jl
repnz
mov
jb
or
lret
fnstenv
lea
mov
lahf
cmp
pop
xchg
clc
outsl
sub
dec
adc
icebp
cs
sbb
aad
jl
xorb
movsl
ret
xchg
adc
jmp
mov
divl
pop
or
jecxz
lods
mov
lea
mov
mov
inc
sub
leave
jae
inc
mov
cmp
cmp
ljmp
outsl
mov
xchg
aaa
push
mov
outsb
add
push
arpl
sti
nop
popf
push
inc
icebp
push
mov
adc
cmc
mov
popa
outsb
push
sbb
mov
lods
push
jp
push
mov
push
popa
addl
mov
fstpl
add
jo
and
inc
es
xor
dec
lods
inc
jp
dec
xor
bound
jge
adc
lcall
cmpsb
cmp
data16
and
in
adcl
mov
movsl
sti
dec
loope
in
rcll
adc
addr16
gs
fisubl
mov
adc
add
lret
ficoms
mov
lret
mov
call
jge
pop
daa
or
shlb
pop
lods
ss
jns
and
cmp
aaa
rcrl
sti
sub
dec
xor
dec
in
push
jnp
jns
out
push
data16
and
add
pop
lret
mov
sub
xchg
jmp
adc
je
lea
mov
in
orl
popf
or
int
shrb
popf
dec
fstps
shl
adc
xchg
scas
jge
jb
push
xchg
lcall
and
dec
and
cwtl
das
dec
sbbb
fnsave
nopl
jnp
add
xchg
rcll
add
sbb
push
or
dec
ffree
pop
xchg
lret
arpl
push
out
insl
and
ret
cs
loopne
jnp
pop
lods
dec
jp
cmp
lcall
or
push
sbb
gs
ret
scas
outsb
in
adc
inc
inc
shll
or
push
insb
xor
xchg
xchg
inc
rcll
sbb
pop
and
scas
push
jmp
repnz
in
jb
inc
jo
sahf
mov
adc
jbe
or
cmp
xchg
push
cli
push
jbe
aad
js
inc
jle
sbb
nop
bound
add
mov
push
cmp
or
cltd
xor
sbb
dec
sbb
iret
dec
imul
pop
fldenv
lea
pop
mov
push
or
pop
fists
fdivr
cmp
sbb
fildl
fisubl
dec
lahf
xchg
fcomp
ret
clc
jne
sub
stc
pusha
fcmovb
dec
add
dec
aad
data16
xchg
fdiv
mov
jmp
jle
mov
mov
scas
mov
jbe
cs
fstpt
mov
sbb
aas
add
imul
jno
or
imul
lods
or
icebp
mov
push
insl
loopne
pushf
xsha1
cmpsb
int
mov
cli
dec
inc
mov
addb
xor
mov
mov
call
aas
fwait
and
mov
inc
jg
cmp
imul
pop
mov
adc
sub
fists
jbe
icebp
pop
inc
hlt
push
mov
or
push
movsb
gs
pop
pushf
mov
fcompp
pushf
xor
lcall
and
mov
sub
in
das
pop
add
xchg
pop
loopne
or
pushl
xlat
xchg
aaa
les
inc
outsb
aad
and
scas
lret
repz
jne
loopne
adc
mov
aaa
into
xchg
std
lahf
push
stos
ds
in
outsl
int3
mov
or
adc
lahf
mov
or
sub
mov
jbe
mov
test
push
mov
or
movq
movsb
sbb
mov
cld
pop
mov
add
sbb
jecxz
movsb
sbb
jl
jmp
pop
jle
insl
das
sub
aam
lock
scas
push
cmpsb
cmp
xchg
mov
test
xchg
mov
inc
arpl
jecxz
mov
mov
jl
sarb
or
inc
sbb
les
inc
int
das
ljmp
imul
mov
lds
pop
sub
icebp
outsl
or
cmpl
imul
js
testl
jp
addr16
and
flds
xchg
cmp
sbb
push
out
es
leave
mov
xor
push
push
cwtl
dec
les
xchg
lea
push
fucomp
and
push
pop
sub
mov
pop
push
insb
mov
and
jge
inc
int3
jg
mov
pushf
or
fnstcw
fstps
orb
mov
dec
push
mov
pop
fwait
jne
push
mov
xchg
incb
cmpsl
dec
or
or
and
sub
imul
mov
dec
repnz
sub
in
arpl
call
or
mov
repnz
je
adc
sub
shlb
adc
in
pop
pop
notl
stc
mov
jne
lock
fs
test
jbe
loop
pusha
xchg
cmp
pop
fbld
sarb
mov
inc
cmpsl
lods
aas
mov
cld
jge
pop
jmp
pop
or
push
mov
push
cmc
es
scas
adc
and
jo
pop
sub
push
sbb
lcall
inc
push
sbb
test
xlat
dec
pop
jle,pt
rolb
sub
push
sbb
std
cmp
das
scas
xchg
imull
adc
inc
je
stos
movsl
pop
cmp
jno
cs
inc
adc
test
data16
cmpsb
pop
mov
sub
hlt
stos
pusha
stos
push
insl
sbb
hlt
xchg
sub
scas
cltd
push
loope
ds
mov
rcl
out
dec
loope
outsb
cmp
fcomi
and
rcl
imul
shlb
sbb
stc
sti
and
jbe
fdivl
xchg
cmp
lods
pop
stos
mov
xor
clc
push
xchg
orl
out
popa
sbb
jmp
push
pop
pop
inc
out
mul
mov
jb
repnz
push
movsb
sbb
insb
out
test
mov
cs
jne
xor
mov
xor
cmpsl
les
cs
or
jo
mov
mov
aam
lret
ret
sub
xor
dec
loop
adc
imul
mov
mov
ret
movsl
cmp
jb
std
mov
int
xor
cmp
sbb
inc
inc
in
push
dec
in
sti
jbe
push
fidivs
fwait
inc
fmuls
mov
jne
mov
sbb
xchg
movsb
imul
ja
inc
sbb
push
jo
mov
enter
cmpsb
sub
fnsave
add
jae
add
cltd
icebp
xor
cmp
mov
clc
dec
sbb
and
sub
sbb
sbb
mov
or
lock
jns
pop
mov
repnz
loop
adc
stos
cmp
cltd
std
outsb
sbb
mov
pop
in
das
rclb
movsb
sarb
daa
scas
and
stos
loop
mov
xchg
mov
dec
push
sub
cli
push
sbb
out
add
je
push
xchg
dec
mov
pop
sub
scas
not
jo
iret
sbb
jo
test
push
idivb
in
sbb
mov
cmc
mov
xlat
stos
ficoml
xor
push
jno
fsubl
adc
lods
and
mov
gs
xor
imul
dec
pop
daa
adc
je
jl
mov
lcall
out
cmp
cmc
enter
lods
xor
push
imul
cmp
or
inc
lock
mov
pop
push
dec
mov
loopne
sub
jg
mov
mov
inc
mov
cmp
jns
mov
rcrl
adc
pop
addr16
outsb
loope
nopl
cmp
insb
fsubr
xchg
mov
and
push
in
or
call
nop
mov
stos
cmp
or
enter
push
mov
insl
mov
adc
cltd
mov
ret
outsb
xlat
in
test
mov
mov
dec
fcomip
ja
add
adc
test
repnz
fstpl
pop
adc
jno
imul
or
iret
push
xchg
in
xchg
out
push
xchg
inc
adc
lds
lods
xchg
dec
out
ja
jle
cmp
testb
popf
cmp
xlat
ret
push
lcall
or
inc
outsb
or
cmp
je
movsl
popl
nop
ds
js
test
fldl
fsts
or
leave
fs
test
jmp
or
fnstsw
loopne
sti
adc
sbbb
mov
mov
dec
and
mov
cmp
jae
xor
stos
xchg
out
push
sub
push
xlat
outsb
jle
cmp
pusha
push
ret
test
xor
xchg
dec
out
ljmp
xor
cltd
gs
pop
adc
loopne
push
push
mov
sub
enter
or
cmc
sub
cmc
mov
or
call
cld
jae
das
dec
push
outsl
xlat
add
sbb
xor
push
sbb
push
fcmovnb
dec
push
jle
fnsave
sti
push
imul
cmp
mov
addl
or
test
and
repz
and
out
popa
dec
into
xorl
pop
jp
cld
xchg
push
mov
loop
mov
into
mov
roll
and
push
jbe
push
mov
int
repz
mov
sbb
and
push
movl
dec
sub
or
push
rcrl
mov
test
push
sub
out
jge
jbe
or
pop
out
in
xchg
xchg
jmp
ret
xchg
mov
hlt
out
outsl
jns
lods
jnp
mov
mov
dec
or
subl
pop
lahf
dec
lods
daa
sbb
xchg
inc
mov
push
cli
in
out
pop
lcall
idivl
xchg
stos
fwait
mov
inc
sbb
dec
pop
and
sbb
cmpsb
ds
dec
fxch
push
lds
in
je
jecxz
pop
xchg
data16
mov
sub
sbb
setno
sti
sti
sbb
shrb
repz
add
into
cmp
sbb
cwtl
imul
cmp
pop
iret
icebp
adc
insl
movsb
imul
or
and
rcr
cmp
out
stos
xor
sub
sbb
lock
nop
xchg
or
stos
mov
mov
ja
pop
jecxz
in
jp
call
test
fiadds
cmc
repnz
and
jmp
stc
fsubl
sbb
lds
shlb
jge
push
push
pop
movsb
cmp
fimull
add
lock
sub
or
push
aas
push
dec
or
pop
cmpsb
jge
sbb
popf
adc
inc
mov
cmpl
mov
test
and
inc
mov
push
xchg
mov
aad
jns
inc
fisubrl
xor
cmc
inc
push
inc
notl
pop
stos
int3
out
insl
inc
cmc
adc
adc
ds
mov
push
in
mov
mov
mov
push
and
into
ret
inc
enter
lret
int3
push
lcall
dec
dec
dec
imul
pushf
sarl
xor
cmpsl
arpl
mov
dec
push
sbb
jl
fisubrs
dec
dec
inc
hlt
mov
inc
fmuls
push
test
mov
push
call
and
cmp
xchg
mov
stos
inc
adc
and
insb
sti
dec
pop
sub
xchg
and
push
dec
pop
repz
jbe
cmp
push
xchg
sbbb
mov
or
cmp
pop
mov
sub
mov
dec
repnz
push
jmp
mov
popa
jns
jns
stos
stos
mov
mov
jne
outsb
ss
and
mov
cmp
out
xor
stc
dec
sbb
mov
cs
and
pop
jo
and
test
xchg
rcrb
pop
mov
mov
dec
scas
sub
sub
in
inc
mov
jne
sub
pop
shr
push
add
cwtl
orl
cmp
push
lcall
push
jae
dec
imul
push
mov
rcrb
pop
lods
movsl
push
in
jg
pop
idivb
mov
mov
ss
ljmp
inc
scas
sbb
cmpsl
adc
lods
inc
ss
aam
xchg
mulb
mov
out
mov
cli
xchg
dec
loopne
xor
inc
aaa
pop
add
arpl
nop
or
sub
sub
sti
xor
stos
jl
popa
push
adc
jae
pop
cmp
ficoms
shll
jmp
repz
jns
push
scas
mov
loopne
loopne
and
cmp
cmpsl
push
xor
cmp
test
push
cmpb
push
xchg
sbb
dec
insl
sbb
aam
cmp
pop
cld
xchg
push
add
jmp
pop
jle
pop
loopne
inc
sub
push
in
sub
jo
cmp
pusha
loope
xchg
push
add
mov
rcl
dec
inc
sbb
adc
out
mov
dec
or
outsl
movsl
xchg
push
xchg
cs
push
xchg
sbb
pushf
daa
fbstp
pop
mov
inc
sub
fsubl
pop
inc
das
das
popa
popa
es
enter
xchg
not
shlb
or
scas
pop
out
adcb
or
or
bound
jo
jbe
out
out
jecxz
jle
mov
sbb
sahf
iret
add
jo
cld
jb
out
add
cmp
fdivr
adc
pop
jae
xor
adc
fdivr
mov
ss
out
add
sahf
in
std
xchg
enter
imul
cli
xchg
mov
clc
iret
jmp
xorl
push
adc
subl
lcall
iret
arpl
std
cmp
sti
ret
pop
and
push
jmp
xchg
add
jno
sub
pop
lcall
arpl
fdiv
xcrypt-ofb
cmpsl
stos
test
lock
mov
bound
add
mov
jbe
pop
sbb
popa
dec
mov
mov
scas
cmp
fildll
repz
jno
pop
add
mov
sbb
test
cmc
stos
jne
cltd
adc
adc
and
lret
stc
stc
mov
les
mov
call
pop
sub
aad
loop
repnz
xor
adc
pop
repz
gs
shrl
or
push
cltd
mov
mov
notb
les
xchg
test
daa
mov
lret
popa
rol
jmp
loopne
fdivs
push
ds
addr16
push
mov
add
adc
lock
mov
sub
orb
jecxz
push
inc
outsb
sbb
mov
mov
mov
xchg
push
into
push
test
int
lods
pop
xlat
insl
lret
jns
hlt
lea
test
je
mov
cltd
lods
hlt
inc
mov
clc
jae
lods
or
sub
out
pop
shrb
das
and
sub
add
stc
mov
sub
push
lds
out
mov
jmp
inc
data16
or
mov
ja
or
and
pop
adc
jecxz
clc
xchg
dec
dec
loopne
mov
daa
push
jle
mov
sub
mov
push
imul
nop
out
or
or
shrl
inc
pop
push
insb
aas
into
loope
cld
imul
push
xor
inc
add
ljmp
inc
cmp
loope
fwait
adc
pushf
cld
ljmp
push
mov
test
jae
or
inc
cli
push
mov
dec
pop
xor
pop
add
sbb
mov
sub
xor
je
inc
mov
adc
or
and
push
push
and
push
js
rol
dec
iret
shl
repnz
adc
inc
dec
mov
cli
je
lods
dec
cmp
aaa
ds
jae
pop
adc
dec
dec
fsubs
das
jge
pushf
xlat
mov
mov
mov
jae
sbb
stc
or
push
insb
sarl
loopne
cld
das
mov
mov
fistps
cmp
ret
enter
sub
inc
scas
nop
pop
fnsave
imul
xchg
adc
lods
sbb
js
ficoml
ljmp
add
ss
ljmp
mov
jecxz
es
pop
cmc
jns
mov
aad
addr16
and
js
xlat
dec
lock
fnstsw
xchg
jmp
xchg
pop
mov
loopne
loopne
cmp
dec
push
add
fidivrl
xchg
add
xor
push
fcompl
sub
pushf
pop
pop
mov
lock
lods
xchg
ret
insb
push
iret
outsl
push
sbb
aad
enter
cmpsb
leave
fisttps
xchg
das
jnp
ja
add
pop
sbb
add
adc
or
aaa
jne
jge
mov
pop
push
and
loope
xchg
sub
mov
jo
shll
test
lahf
jmp
cmp
mov
push
fiadds
pop
stos
sarb
in
push
inc
or
and
jno
inc
push
popf
scas
add
daa
aas
xor
dec
or
xchg
xchg
sbb
and
mov
mov
or
mov
xchg
xor
loop
lods
stc
add
xor
insb
jns
outsl
xchg
fiadds
aaa
cmpsl
shlb
out
cmp
add
call
jg
pop
mov
lds
jne
dec
fildl
sbb
push
dec
sub
fstpt
es
in
stos
in
inc
fsubrs
push
scas
xor
push
data16
cmpsl
cwtl
cmp
jns
and
and
xchg
cmp
shrl
lods
cli
in
push
cmp
mulb
pop
rcrl
and
inc
mov
fimull
jae
lods
bound
pusha
in
repz
and
add
jp
inc
movsl
das
fstp
sbb
lods
cltd
pop
mov
adc
into
and
inc
push
sub
adc
into
sar
loopne
jmp
jno
not
iret
pop
or
push
je
in
and
dec
dec
and
in
movsb
mov
mov
or
push
jne,pt
xchg
cmp
fcoms
movsb
dec
fistps
jae
pop
bound
or
stos
in
iret
mov
adc
xor
bound
mov
push
sub
dec
scas
pop
ja
lock
push
pop
pop
insl
insb
jne
leave
jb
rcrb
add
nop
roll
popf
aas
jg
cld
push
cmp
cmpsl
mov
or
inc
mov
leave
in
das
push
mov
addr16
mov
or
out
pushf
push
loopne
mov
mov
cmp
leave
push
add
fidivs
sbb
push
je
mov
scas
inc
adc
jp
or
adc
std
cltd
mov
dec
sbb
jne
or
xor
lods
fwait
xchg
mov
ret
push
dec
mov
mov
sbbb
fstpt
add
sub
push
rcl
xchg
insb
jp
dec
fnsave
jge
inc
jne
loop
and
sbb
xor
aad
add
rcll
mov
arpl
inc
fnstsw
je
popf
mov
into
adc
jns
cmpsl
aas
push
push
dec
jecxz
movb
shrb
xor
mov
clc
add
push
cmp
call
test
fnstsw
cmp
fldcw
icebp
push
or
dec
daa
xor
jmp
xchg
popa
mov
cs
mov
shrb
xchg
xlat
sti
jge
jecxz
rolb
icebp
leave
enter
push
loop
xchg
sbb
mov
repz
add
mov
add
push
fstpt
enter
push
stc
inc
repz
xor
push
hlt
les
sbbl
test
or
jns
and
lds
testb
aas
mov
inc
es
xchg
icebp
push
aam
or
das
iret
mov
shr
ljmp
cmp
cltd
imul
testb
movsl
int
xor
jns
add
cmp
das
inc
adc
neg
push
jne
shr
rorl
mov
insb
sub
insl
xor
mov
push
add
sub
arpl
pop
or
mov
addb
jns
mov
lods
lcall
sub
mov
dec
repz
cmp
rclb
subb
repnz
iret
scas
stos
scas
or
dec
pop
les
add
xchg
icebp
mov
loope
xlat
nop
add
sub
push
ljmp
je
rcr
mov
push
fildl
mov
loop
push
sbb
mov
addr16
mov
stos
mov
dec
xor
cs
rolb
lea
push
arpl
jp
mov
cld
inc
adc
xchg
inc
popw
jecxz
lret
cwtl
stos
push
sbb
adcb
outsl
sbb
mov
dec
jge
inc
push
add
inc
repnz
or
pop
adc
in
into
testl
clc
iret
inc
std
mov
cmpsb
fs
jo
push
jns
xchg
subb
mov
xchg
shl
jg
pop
outsb
fidivrs
imul
fwait
and
xchg
adcb
push
inc
pop
mov
lock
divl
or
inc
enter
cmp
je
lds
xchg
lock
sti
inc
inc
or
xor
pop
js
pop
adc
mov
cmp
fwait
adc
inc
jp
push
inc
add
je
push
in
in
pop
cwtl
outsl
cmc
mov
mov
adc
xchg
dec
and
fwait
add
js
popf
pop
fsubs
xor
fwait
adc
insl
xrelease
popa
icebp
xchg
iret
add
xchg
jecxz
push
out
mov
xchg
ss
mov
mov
nop
adc
inc
cmp
or
jle
mov
adcb
mov
sbb
adc
sbb
lcall
mov
push
insl
jae
pop
and
jle
mov
xchg
js
movsl
mov
pop
ret
jnp
rcrl
iret
pushf
sbb
into
mov
push
es
push
aad
push
jne
or
pop
push
shrl
xchg
mov
out
xchg
xchg
fcomps
js
stos
cs
gs
mov
cmp
shrl
std
jne
adc
mov
mov
dec
pop
push
or
lock
call
or
scas
jno
sbb
add
sahf
mov
sbb
xchg
mov
rcrb
jmp
mov
dec
or
mov
test
pop
inc
es
mov
jno
fcompl
je
shl
shlb
cmp
adc
jo
cli
loope
test
cmp
dec
ds
add
mov
mov
movsl
sbb
int
dec
adc
pop
xlat
shrl
jg
test
cmpsb
xchg
push
clc
inc
push
lods
pop
inc
pop
jne
in
add
push
jae
mov
mov
pop
xchg
jmp
mov
cwtl
xchg
sbb
jle
jae
ds
mov
pop
inc
xchg
adc
gs
stos
dec
sub
jae
aaa
imul
addr16
or
dec
loope
push
xor
xlat
mov
fistpl
add
jmp
sbb
or
mov
sub
scas
lahf
cmp
les
add
pop
iret
dec
or
mov
or
mov
push
insl
mov
dec
lret
je
bound
cmpl
jno
insb
pop
out
add
pop
dec
loope
cmp
out
push
inc
test
push
inc
cmc
mov
fdivrl
rcl
lds
dec
dec
push
imul
mov
lret
inc
mov
cmp
push
imul
xchg
add
push
or
mov
adc
jecxz
add
rol
xor
popa
push
xor
cld
popa
das
leave
in
xor
mov
aas
fldl
iret
je
push
push
mov
pop
icebp
jecxz
mov
mov
xor
mov
and
pop
xchg
clc
adc
fnsave
cmp
std
xchg
xorb
fcompl
jnp
inc
ret
loopne
sbb
and
cld
arpl
inc
xlat
lock
ficompl
add
cmp
adc
sbb
out
rcrl
fisttps
lret
add
dec
dec
repnz
ret
mov
das
addr16
or
popl
inc
inc
daa
cli
fstsw
aam
int
mov
ficompl
mov
popf
movsl
sub
fwait
mov
test
leave
pusha
pusha
imul
or
add
push
inc
lods
inc
push
lea
leave
xor
or
ljmp
jecxz
adc
and
aas
dec
pop
jno
test
lret
dec
leave
outsb
sub
outsl
push
outsb
mov
xchg
imul
call
arpl
sub
pop
out
sahf
rclb
mov
shlb
or
mov
fcoms
jne
xchg
mov
jle
adc
loopne
cmp
ret
cmp
fldl
je
push
jb
jno
enter
js
fcoms
lods
push
ret
sbb
nop
lret
outsb
mov
stos
test
sub
decl
ja
sbb
xor
inc
mov
mov
fbstp
push
js
adc
xchg
cltd
into
loop
mov
or
inc
sub
and
out
mov
mov
test
push
mov
xchg
scas
mov
dec
bound
mov
push
outsb
sbb
push
cltd
aam
mov
adc
adc
pop
addb
dec
ja
jle
lods
dec
pop
jmp
in
rol
dec
xor
xor
mov
nop
mov
sub
push
or
dec
dec
mov
jecxz
push
mov
ficoms
sbb
mov
push
jae
push
mov
popf
hlt
cwtl
pop
daa
mov
jno
inc
mov
mov
add
mov
pusha
xchg
inc
pop
pusha
test
mov
push
sti
psllw
ds
xchg
add
xor
fistpll
int3
rorl
sbb
lods
popf
in
add
dec
mov
pop
and
stos
in
test
enter
sbb
scas
stc
popf
sub
or
jo
test
jg
jge
pop
mov
add
lret
sti
aam
icebp
mov
xlat
xchg
pop
fs
lock
add
test
adc
push
mov
jp
mov
mov
push
mov
ljmp
scas
cmp
popf
sbb
loope
mov
dec
pushl
pushf
mov
push
jno
jno
stc
push
xchg
or
pop
outsl
mov
dec
mov
mov
cmp
ss
stc
nop
lea
movsb
add
mov
jo
xor
and
outsb
jp
movsb
pop
xlat
xchg
add
xchg
sahf
ja
clc
push
mov
xchg
inc
outsb
stos
orb
imul
lock
inc
insb
stos
mov
push
xor
mov
repz
jno
sbb
int3
insl
out
sahf
pop
mov
lea
xchg
and
insb
das
jge
push
cmp
clc
imul
jl
leave
mov
xchg
subl
mov
rclb
scas
into
pop
add
ja
sbb
ja
mov
pushl
call
pop
add
insb
lods
rol
test
cmp
xchg
jle
mov
inc
and
mov
or
jns
cltd
mov
pop
cmp
bound
sahf
inc
loop
mov
test
cltd
xor
je
lock
rorl
outsl
xor
out
mov
mov
add
insl
rcll
push
ja
ror
pop
int3
pop
cmpsb
aas
push
fdivrl
cmpsb
lock
mov
mov
fsubrs
aaa
sub
mov
loopne
into
arpl
iret
mov
xchg
adc
or
or
xchg
jne
sbb
mov
js
popa
daa
dec
mov
call
add
xchg
xor
pop
mov
lods
or
insl
clc
mov
xor
pop
std
xchg
push
test
jo
lahf
xchg
add
bound
ret
adc
inc
pcmpeqd
outsb
add
or
adc
hlt
out
ljmp
into
or
mov
push
sbb
mov
inc
mov
int
dec
dec
mov
jne
leave
cmp
int3
mov
or
cmc
fs
insb
aad
lds
ret
mov
pop
or
mov
inc
sub
cmpl
test
lahf
arpl
daa
movsl
icebp
mov
adc
bound
inc
mov
ret
sub
insb
push
scas
adc
push
jle
adc
insb
pop
xchg
fisttpl
call
incb
mov
rcl
or
cmp
les
add
pop
pop
add
mov
push
lods
nop
xchg
dec
xchg
cmp
imul
xchg
dec
xor
je
jb
xor
and
mov
loope
xchg
leave
and
stc
xor
hlt
pop
mov
gs
in
cld
lret
lcall
and
clc
and
sti
pmullw
int
jne
and
mov
popa
addb
mov
push
or
mov
lods
sub
nop
sub
movsb
scas
inc
adc
mov
mov
ret
inc
dec
in
stos
in
mov
mulb
mov
imul
xrelease
iret
adc
adc
loopne
clc
mov
mov
ret
ror
pop
aam
push
mov
pop
es
xchg
insl
test
mov
fcmove
movups
and
adc
mov
fidivs
mov
and
ss
mov
fcom
jae
sub
add
and
mov
cmp
cld
xchg
stos
push
rclb
in
cld
mov
sbb
xor
popa
clc
or
push
or
cli
lea
jecxz
mov
mov
push
jmp
out
pop
push
push
push
jge
cmc
lods
jmp
mov
adc
cli
push
adc
sub
daa
mov
in
xchg
cs
push
mov
mov
push
movsl
or
shll
shlb
sub
sbb
mov
jecxz
xor
inc
fcmovbe
rol
fnstcw
repz
dec
cmp
inc
dec
loope
rorb
push
icebp
stos
push
fldl
ja
int3
xor
sbb
jmp
mov
movsl
ss
mov
and
sub
outsb
mov
xchg
test
add
jo
adc
fs
testl
sarl
xchg
pop
pop
dec
enter
sbb
sbbb
xchg
lods
and
repz
stos
ja
cmpsb
and
lret
data16
cs
out
and
xchg
hlt
or
ficoms
mov
fcoml
pop
je
cmp
cwtl
popa
aaa
stc
arpl
jp
mov
test
adcb
insb
cmc
loope
roll
mov
ret
pop
popf
sbb
lahf
hlt
ret
fistps
or
and
popa
push
inc
push
xchg
fisubrl
cmc
adc
pushf
jo
andb
cmp
les
outsl
test
and
pop
mov
mov
fidivrl
das
lret
popa
nop
xchg
lahf
adc
cltd
push
sbb
xchg
push
test
aad
sub
xchg
mov
xor
inc
mov
aaa
sti
pop
jl
repnz
sub
pop
mov
mov
jns
adc
and
xchg
sub
jle
int3
jo
sarl
xchg
out
stos
lahf
das
in
cmp
sbb
loop
xor
popf
out
lcall
push
cwtl
or
adc
outsl
addl
into
cs
pop
push
inc
fcomps
dec
bound
jne
push
mov
imul
ftst
test
and
jp
lock
push
das
inc
push
jo
pop
bnd
movsl
pop
int
ja
in
ds
mov
push
subl
pop
mov
cmc
in
sarb
push
daa
mov
pushf
fists
in
mov
lea
add
insl
test
andb
mov
add
ljmp
pop
mov
cld
mov
outsl
dec
ret
push
ss
lea
subl
mov
jbe
inc
sub
movsl
sbb
xchg
add
mov
jmp
nop
adc
pop
xchg
mov
mov
push
push
outsl
jae
ljmp
es
xlat
fwait
inc
clc
clc
andb
sbb
rorl
jno
push
ljmp
add
and
xchg
pop
fcoms
out
out
sub
or
je
shll
stc
sub
cmpsl
aas
or
es
mov
xchg
cmpsl
out
mov
fwait
sub
push
push
aas
or
fwait
and
xchg
faddl
push
es
adc
sahf
mov
hlt
sub
adc
jbe
xor
movsl
out
mov
lods
ljmp
call
pushf
cmp
push
dec
hlt
fcomps
push
jo
shrb
lret
push
push
inc
pop
jmp
jnp
lds
inc
sti
inc
std
les
addl
ss
cmp
cmp
sahf
cmpsb
movb
and
jnp
ret
pop
xchg
out
das
aas
dec
popa
aaa
jnp
push
data16
xor
dec
pop
fldt
xor
add
or
outsl
or
mov
cmp
cmp
sbb
xor
push
ss
xor
fmul
and
inc
in
andl
push
xchg
mov
sub
negl
mov
sbb
loope
sub
xchg
sub
call
mov
adc
roll
js
mov
outsb
fnsave
call
mov
out
scas
sbb
add
sbb
jne
or
out
pushl
xor
xchg
pushf
pusha
shlb
es
rorb
movsb
loopne
ja
fwait
inc
sbb
jecxz
inc
sub
pop
cmc
cwtl
jl
inc
sub
xchg
and
pop
dec
mov
hlt
adc
push
push
cmp
rorl
xor
sbb
jns
rclb
ljmp
xchg
push
add
jns
jl
inc
jle
mov
bound
sub
loopne
mov
mov
std
andb
cld
push
jmp
leave
xor
loopne
aaa
lahf
insl
sbb
pop
push
mov
lock
sbb
xor
inc
out
bound
jle
adc
pop
sbb
xchg
lret
xchg
sbb
cwtl
push
movsl
add
pop
or
mov
push
mov
jmp
stos
inc
mov
daa
pop
adc
int3
test
popa
clc
mov
fidivrl
inc
dec
mov
test
inc
push
outsb
repz
adc
dec
lods
pop
cltd
loop
in
cs
stos
cmc
int3
inc
std
mov
sub
push
movsb
jecxz
fwait
mov
sbb
fdivp
mov
sbb
push
shrl
cmpsb
arpl
and
cmp
in
ss
int
lahf
neg
out
inc
xchg
stos
or
sub
sub
int3
xchg
and
cwtl
cmp
mov
repz
add
or
inc
mov
lea
dec
xor
mov
sbb
lock
add
cmc
in
stos
xadd
or
adc
jle
gs
jns
xchg
add
stos
cmp
inc
std
lret
out
leave
mov
xchg
out
jo
cmp
pop
movsl
mov
fbld
test
mov
inc
xchg
jne
ficompl
pop
lahf
neg
lcall
push
clc
sub
insl
sub
outsb
jbe
dec
add
rcrl
xchg
ja
jmp
in
push
sub
mov
mov
imul
cmc
push
lcall
xchg
adc
inc
cmpb
arpl
das
inc
inc
fbld
cmp
push
insb
out
cld
sahf
push
and
adc
les
adc
aad
and
fwait
adc
movsl
and
push
insl
sub
and
xchg
jo
hlt
mov
xchg
push
mov
nop
mov
inc
bound
xor
fidivrl
je
push
pop
xchg
fwait
pop
pushf
ret
add
je
repz
push
adc
dec
inc
jae
shll
pop
mov
jns
cmp
stos
cmpsb
pop
ja
lcall
lret
into
sbb
and
adcb
mov
or
ret
mov
idivl
mov
popf
cld
xchg
into
fbstp
xchg
xchg
dec
pop
stc
fbstp
leave
mov
data16
rcrl
in
orl
cmp
rcl
in
inc
in
pushf
out
clc
push
push
sahf
in
xchg
jo
cmc
fcoml
mov
inc
jg
test
adc
jns
adc
adc
int
fildll
inc
loop
fndisi(8087
sub
bound
test
mov
jo
mov
ja
aas
dec
mov
and
out
push
dec
dec
shr
mull
cmpsb
test
pushf
pusha
cli
cltd
sbb
rcrb
movsb
and
dec
lock
lret
cld
xchg
std
icebp
add
je
icebp
and
xchg
stos
adc
es
mov
inc
xor
jne
rsqrtps
lret
aam
push
jno
mov
inc
mov
ret
movsl
aam
pushf
xorb
das
mov
repz
ret
mov
xor
add
cli
lcall
adc
and
mov
push
inc
cmp
in
lock
fisubrl
cmp
dec
xor
pop
scas
int
mov
arpl
fcmovb
jo
dec
fstpl
into
push
jno
imul
sbb
into
or
cmpsb
cmp
cli
xlat
xchg
in
dec
lds
sub
aas
add
les
adc
inc
add
cmpsb
and
outsl
add
xchg
or
pop
cmp
mov
jae
jge
mov
je
adc
add
rorl
cmpsl
push
fistps
and
lods
lret
test
sub
xchg
scas
in
das
cltd
aaa
dec
in
cmp
inc
popf
add
mov
push
scas
push
popf
lcall
ds
mov
shrb
cmpsb
adc
jecxz
rcl
cmp
test
adc
xlat
lret
filds
popa
clc
mov
mov
xchg
test
mov
pop
scas
cltd
lcall
jecxz
or
pushf
hlt
pusha
out
inc
jecxz
mov
cs
inc
lock
loope
es
incl
in
jg
and
adc
test
out
pop
movsb
add
mov
mov
inc
mov
orl
fdivs
fidivrl
fildll
mov
ret
mov
sbb
sub
pop
cmpb
pushf
mov
add
iret
mov
pushf
dec
xor
xor
bound
notb
pop
jno
insb
add
es
fdivrs
imul
shlb
adc
xchg
cmpsb
stos
dec
in
adc
mov
fsubrs
and
mov
cmp
pop
jb
and
cmp
pop
jne
pop
mov
ret
outsb
mov
ja
mov
xor
mov
cs
jl
jns
mov
jp
or
xchg
fwait
aam
pop
inc
addr16
mov
jae
or
addb
fisttpll
dec
pop
mov
xor
andl
cmp
in
mov
addr16
or
imul
lock
jp
jo
inc
ljmp
lods
mov
mov
outsl
aad
xlat
subb
push
movsl
mov
lock
ret
imul
cmc
sub
sbb
push
loopne
pop
scas
mov
loope
mov
cmp
inc
cmpsl
push
fildl
sahf
cmpsl
add
out
adc
sub
outsl
jns
push
xchg
jnp
adc
cwtl
and
xor
adc
test
mov
dec
jb
or
aas
shrb
ret
sbb
sub
xchg
leave
or
jg
loope
js
mov
jle
mov
mov
mov
sahf
scas
popa
cmc
adc
mov
stc
fsubr
out
dec
sbb
push
pop
jle
jae
aaa
frstor
push
adc
xorl
xor
mov
inc
inc
pop
rcrl
ret
jge
popa
lcall
jnp
mov
jb
lea
imul
adc
outsb
rorl
cmpsb
pop
dec
mov
ljmp
test
test
repnz
jg
sahf
ret
test
mov
fucomi
ret
push
jmp
stos
popa
jns
cmc
mov
rcl
sbb
call
in
repz
stc
or
push
push
call
mov
outsl
push
bound
sbb
cmp
lcall
insb
adc
in
imul
sub
mov
cld
pop
pop
adc
sti
xchg
mov
sbb
insl
adc
filds
dec
mov
sub
cmp
pop
loopne
incl
push
sub
into
in
in
mulb
mov
pop
ds
fcomps
shlb
shl
xchg
push
fldenv
popf
pop
push
jb
xor
jno
inc
test
and
sbb
and
xchg
jo
stc
nop
and
adc
or
adc
and
das
movsl
clc
and
dec
dec
dec
loop
sub
popa
aas
andl
xchg
mov
lret
das
cmpsl
lea
and
fistps
fcomps
sub
xchg
jecxz
adc
mov
mov
outsb
aaa
mov
xchg
jns
out
sub
sbb
sbb
lea
pushf
xor
pushf
ljmp
lods
fdivrs
xchg
insl
mov
out
mov
fstpl
cmp
das
orl
xchg
rorb
dec
or
aam
pop
ljmp
xchg
push
loop
cmpsb
notb
mov
xchg
mov
dec
bound
ds
mov
cmpsb
sub
out
scas
andb
adc
sub
sub
dec
add
push
sub
sbb
mov
aam
jbe
fisubs
mov
imul
push
out
push
mov
test
aad
ror
stos
out
add
adc
pusha
fdivl
push
push
cmpb
dec
cmpsb
inc
lcall
cli
pushf
int
enter
outsl
rcll
and
stos
pushf
sbb
dec
dec
mov
inc
lret
inc
lahf
cld
outsl
adc
test
hlt
mov
je
leave
xor
add
pop
lahf
in
sbb
inc
mov
dec
shrb
fcomi
mov
jmp
mov
outsl
xchg
outsl
xchg
nop
jnp
cli
add
xchg
aam
mov
jne
push
test
mov
sub
cmc
sbb
pop
and
roll
jae
lcall
sub
out
test
outsb
aad
stc
jnp
aam
inc
xor
cs
fsubrl
enter
inc
xchg
les
push
out
pop
insl
add
adc
jae
jnp
test
loopne
xor
pop
sarl
scas
es
mov
mov
adc
lcall
push
dec
mov
push
ret
mov
xchg
mov
pushf
lcall
test
mov
cmp
sahf
lcall
js
sub
push
jns
push
aam
nop
data16
cmpl
mov
popf
subb
pop
testb
int
sbb
push
and
adc
xor
xlat
rclb
jl
pop
mov
jmp
xor
add
lock
aaa
and
call
mov
aas
incb
repnz
mov
sub
cs
xor
repnz
lret
and
mov
cwtl
outsl
int
sbb
ds
lret
movsl
jne
cmpsl
push
clc
or
and
add
sbb
xchg
scas
adc
sti
adcl
dec
mov
and
push
push
or
add
mov
cmp
jne
adc
cmp
mov
mov
push
or
xlat
addb
loopne
cs
mov
xchg
mov
repz
hlt
fwait
adc
and
jns
inc
xchg
adc
enter
dec
or
jbe
jbe
xchg
sub
mov
mov
out
and
mov
ficompl
cld
or
push
inc
movsl
sbbl
and
movsl
out
push
dec
lock
inc
dec
cmp
push
push
add
xchg
jb
std
out
mov
dec
aam
and
xchg
mov
push
inc
lret
jbe
incb
into
or
test
sub
inc
mov
lock
repz
sbb
sbb
and
cmp
sar
pop
imul
xor
insl
scas
mov
jno
mov
pop
call
popa
les
mov
sbb
jae
lods
or
cli
dec
inc
pop
int3
es
loope
mov
mov
int3
cmpsb
xlat
stos
in
xor
push
or
sub
cmpsb
mov
and
xchg
enter
lahf
ret
in
pop
cmpb
lret
sub
iret
lods
jg
xchg
hlt
js
bound
popf
push
mov
push
outsl
sahf
hlt
lret
hlt
sti
loopne
adc
or
icebp
lods
pop
ficoms
adc
sbb
or
lret
shr
fldt
pusha
test
adc
dec
dec
mov
or
hlt
jge
daa
cmc
dec
fisttpll
and
xor
jne
mov
icebp
and
js
xor
push
sub
pop
incb
dec
loop
test
hlt
icebp
outsl
movd
or
push
jo
push
mov
imul
mov
xor
lods
xor
movsb
sbb
inc
mov
mov
ds
sub
loop
jne
push
cmpsl
adc
popa
hlt
int
insb
pop
adc
out
addl
mov
pop
push
test
sub
xor
cltd
test
push
mov
add
shl
mov
imul
and
push
shll
bound
sbb
rol
icebp
shl
jmp
ret
inc
sub
mov
mov
fsubp
mov
roll
stos
insl
mov
jb
ret
jae
bound
loope
jno
push
pop
cmp
xchg
pusha
pop
out
shll
repnz
dec
adc
rcr
xor
loop
push
out
fbld
adc
mov
test
jg
or
cmpsb
mov
dec
jecxz
pop
inc
bound
or
stos
stc
mov
aaa
test
dec
xchg
sbb
cmp
loope
or
adc
mov
arpl
stos
cmp
jnp
dec
xchg
mov
mov
jge
sub
daa
inc
in
sub
jle
lea
dec
or
mov
aas
dec
mov
lahf
jmp
jle
popa
push
xchg
bound
shrb
lods
frstor
xchg
pop
xor
cmpsl
data16
stos
xchg
cmc
pop
leave
sbb
mov
push
in
push
cmc
cmp
rorb
sub
dec
scas
inc
xor
cld
in
fdivs
fstpl
pop
sub
into
pop
cmpsb
push
clc
in
roll
leave
push
mov
lea
sub
adc
int
out
stc
insb
xchg
jb
imul
fdivrs
push
les
pop
pop
stos
mov
neg
lods
into
lcall
xchg
js
jae
inc
mov
loope
add
mov
jnp
enter
xor
repz
xor
insl
pop
notb
cmp
pop
jmp
add
dec
fnstcw
xlat
int3
pop
divb
mov
mov
lret
frstor
js
mov
and
pop
aaa
or
outsl
mov
mov
add
mov
aad
inc
push
mov
lds
pushl
imul
popf
adcl
push
jne
xchg
xchg
fcomps
rcrl
jl
fidivl
mov
test
inc
push
stc
mov
mov
out
cmp
scas
jno
pop
cmp
xchg
mov
or
adcl
jbe
dec
push
cwtl
jl
add
ds
pushf
xor
cmpsl
push
or
dec
dec
es
aas
jne
aas
mov
mov
dec
bound
dec
stc
test
dec
push
iret
ja
imul
cs
jge
inc
bound
sub
push
insl
dec
mov
clc
movsl
xchg
jno
inc
inc
frstor
ret
mov
dec
cmp
out
mov
andb
adc
push
or
push
mov
mov
shll
push
lahf
gs
sub
add
mov
ljmp
shlb
shlb
ficomps
imul
cli
cmp
in
mov
addr16
aaa
pop
push
addr16
push
mov
test
push
ljmp
insb
jg
pop
cld
xchg
nop
xchg
loop
clc
loop
mov
std
rol
xor
mov
push
out
pushf
cmpsl
std
shl
cs
and
pop
sub
push
jle
xchg
lea
adc
loopne
std
in
push
fists
sub
inc
mov
dec
mov
mov
movsb
inc
inc
dec
dec
out
jbe
out
sub
scas
inc
push
mov
int
aas
cs
rolb
rcrl
in
das
out
int
add
inc
xor
dec
out
aaa
inc
scas
xchg
mov
fdivrs
pop
repnz
test
hlt
dec
sub
clc
push
fcmovne
ja
bound
xchg
repnz
or
sbb
dec
add
jge
mov
push
stos
inc
mov
fbld
pop
inc
int3
leave
bnd
and
sbb
mov
jmp
and
push
dec
mov
lret
jp
test
mov
shr
pusha
ret
lock
add
aam
jle
and
push
xor
xchg
lret
movsl
dec
testl
es
mov
cltd
dec
in
insl
sbb
hlt
mov
jp
in
mov
or
cmp
and
pop
pop
imul
pop
rorb
and
xchg
insl
mov
jl
lgs
mov
add
push
cmp
std
pop
ljmp
push
mov
mov
data16
jp
mov
push
dec
push
cwtl
subl
fwait
outsl
xor
dec
xor
mov
loop
sub
inc
or
or
sub
dec
cmpb
arpl
lcall
jecxz
out
sbb
dec
andb
into
push
jne
in
push
outsl
in
loope
xchg
ljmp
ss
pushf
pop
xor
dec
mov
lret
cwtl
test
lods
xchg
fnstenv
push
xchg
inc
loopne
or
test
sub
jb
fwait
outsl
in
sbb
repnz
pop
cmp
xchg
test
rorb
pushf
int3
fmulp
lcall
mov
dec
out
shll
data16
xchg
hlt
mov
inc
sbb
inc
ret
rcl
stos
test
stos
xchg
sbb
mov
xlat
pop
lret
bound
in
mov
cmpb
std
scas
sub
out
ljmp
cmp
mov
or
or
jbe
pop
sbb
xor
lods
bnd
mov
je
movsl
add
pop
sub
push
test
call
or
leave
loopne
inc
pop
insl
enter
into
xorl
sub
inc
push
in
pop
mov
insb
mov
roll
pop
jl
mov
enter
inc
push
push
cmp
hlt
pop
hlt
lds
xchg
mov
daa
mov
adc
ljmp
addr16
xchg
int
mov
jmp
inc
pop
lret
xchg
cld
fwait
sbb
fnstenv
out
mov
movsb
jmp
jmp
std
and
inc
andb
int3
jnp
lret
mov
push
insl
jl
push
push
cli
loopne
adc
push
mov
sbb
insb
scas
inc
ret
inc
mov
xchg
xchg
pop
mov
mov
test
sbb
lea
mul
xchg
loope
or
mov
dec
lahf
dec
lods
nop
xor
fldenv
mov
mov
xchg
push
pusha
rorl
push
dec
jae
sub
xchg
mov
arpl
jno
ss
adc
icebp
imul
and
mov
addr16
clc
mov
cs
jno
mov
cmp
inc
shl
pop
shr
nop
xchg
lcall
popf
add
sbb
cmpb
outsl
lods
sub
std
cmpsb
adc
add
dec
sub
cltd
cmpsl
pushf
adc
inc
mov
lcall
adcl
mov
in
imul
stos
imul
inc
cmpl
std
jle
mov
xchg
sbb
jle
push
out
xchg
dec
push
cmp
xor
jge
test
outsl
imul
xchg
bound
add
sahf
clc
lret
fildll
je
rorb
addr16
pop
adc
add
cmp
test
push
in
stos
mov
push
fdiv
sub
int
mov
sarl
and
pop
push
xchg
fwait
xchg
test
jl
bound
adc
mov
stos
outsl
ds
mov
ds
pop
lods
sbb
rcrl
sbb
jbe
test
xchg
cmpsl
push
repz
lods
pop
movsl
enter
push
fildll
neg
and
mov
dec
adcl
mov
cltd
mov
and
mov
scas
jg
adc
lods
mov
scas
xchg
mov
cmp
daa
jp
xchg
pushl
mov
push
ss
je
in
mov
js
in
and
adcb
mov
orl
shll
ret
gs
mov
pop
dec
push
in
add
int3
loop
ret
push
ljmp
sti
push
adc
jo
jg
dec
sub
lret
jae
xor
jg
fldt
lea
add
dec
sti
or
sti
jle
cli
call
pushf
xor
sub
jo
enter
mov
test
enter
mov
ja,pn
xchg
inc
pop
add
dec
in
mov
insb
sub
movsb
in
mov
aas
jl
or
xor
dec
loopne
inc
dec
xor
add
int
notl
and
scas
stos
jecxz
jmp
pop
popf
lods
scas
xlat
insb
push
cmc
stos
pusha
lahf
xlat
ds
dec
out
repnz
test
jecxz
push
push
jno
jb
arpl
jns
adcl
xchg
pusha
push
repz
andb
dec
mov
ficoml
int
push
loop
mov
dec
mov
mov
pop
rol
aad
adc
jp
dec
lahf
out
rcrl
adc
inc
jno
lahf
mov
mov
das
mov
or
sbb
inc
jg
out
or
inc
mov
pop
jge
es
mov
mov
aam
repnz
pop
jo
pop
outsb
std
jne
pusha
insl
ss
adcb
fnsave
mov
push
fwait
das
adc
int3
inc
pop
jmp
add
or
scas
call
movsl
cmc
bound
in
inc
aaa
fs
dec
mov
ds
ljmp
mov
push
nop
push
xor
xorl
cmp
fcmovbe
mov
ret
dec
in
push
adc
scas
jno
jne
outsl
fstpl
aam
push
mov
lahf
fs
jne
adc
inc
data16
pop
push
cld
out
arpl
mov
mov
mov
sarb
pop
outsb
sbb
fldcw
xlat
pop
sbb
mov
add
add
push
into
cwtl
addl
daa
xlat
adc
mov
in
cmp
add
inc
pop
mov
int3
cs
notb
adc
sahf
inc
cmpsl
stc
push
subb
sbb
mov
jmp
mov
insb
test
in
or
mov
lock
lock
fcoms
in
xor
dec
mov
jnp
xchg
sbb
add
or
mov
aaa
jg
stos
jo
cmpsl
repz
stos
mov
out
jp
mov
jnp
sub
pop
fsubl
sub
jae
jg
sub
push
push
int
sbb
arpl
dec
das
hlt
sbb
insl
rol
test
or
xchg
or
popa
mov
add
lock
insb
add
mov
cltd
lock
xor
xchg
mov
and
in
cmp
xor
mov
adc
jl
push
mov
leave
cmc
and
adc
fsubp
mov
hlt
fwait
and
mov
jg
hlt
call
jle
imul
mov
iret
push
inc
jnp
popa
clc
aad
lret
pop
das
orb
xchg
add
cmp
pop
dec
pop
xchg
out
jns
push
mov
rclb
fbstp
cmpsl
fidivs
shll
xchg
inc
push
bound
hlt
dec
xor
ss
out
dec
jb
inc
push
mov
lods
out
cmpsb
jmp
lret
push
and
fcoml
in
test
mov
dec
and
push
push
jns
inc
stos
jno
popf
jae
mov
ja
adc
sub
pop
dec
dec
aad
sub
add
mov
pop
cmp
jo
lcall
out
lods
cmp
movsb
std
in
jb
sarl
dec
pop
stc
inc
mov
aas
imul
hlt
out
sbb
jmp
clc
mov
cld
cltd
sahf
push
pop
push
out
stos
xchg
xchg
mull
lret
cmpl
imul
fstp
cmc
aaa
mov
or
lods
add
dec
mov
scas
mov
cs
idivl
inc
into
adc
movsb
sti
rclb
push
pop
jge
jmp
lods
or
push
mov
jb
push
test
daa
push
push
sbb
das
repnz
into
mov
test
sbb
stos
flds
leave
dec
test
rcrb
and
shrb
pop
out
jb
xchg
mov
stos
mov
js
repnz
push
pusha
test
or
aas
cmp
inc
in
mov
push
clc
test
pop
sub
cmpsb
pop
cmc
mov
aaa
test
stos
xchg
push
xor
jp
add
inc
mov
or
xor
es
in
cmp
add
inc
jbe
clc
daa
add
push
xor
mov
xor
enter
shrb
popfw
adc
jbe
cltd
pop
mov
cmp
push
testb
lock
fistpll
pop
ret
orb
pop
cmp
fnstenv
out
subl
lea
pop
mov
loopne
push
fcomip
adc
cld
cmpsl
jnp
cmp
shlb
leave
rcl
cmp
in
hlt
inc
aam
jmp
sarb
xchg
mov
or
cltd
pop
mov
sub
mov
std
jl
daa
mov
fidivrl
mov
stc
sbb
cltd
or
adc
shr
negl
aas
mov
adc
mov
cwtl
jae
xchg
sbb
outsb
sub
fldt
or
xor
add
arpl
aas
in
dec
jmp
inc
rolb
jl
xor
jnp
mov
or
xor
stos
daa
sete
or
and
imul
rolb
pop
fisttpl
cwtl
mov
popf
cmc
add
dec
in
add
mov
outsb
lock
and
inc
sbb
sbb
stc
lahf
push
push
repz
arpl
lea
dec
mov
scas
mov
push
out
or
adc
scas
ja
cmp
and
in
push
cmp
push
in
adcl
stc
scas
lods
cmpsb
cmp
mov
les
sar
sbb
dec
push
xchg
mov
jecxz
cmc
add
sarb
jp
add
sahf
cmpsb
mov
movsl
adc
mov
outsl
mov
ret
add
jo
add
xor
cltd
pop
sti
xchg
rcll
inc
aam
hlt
sbb
mov
ja
sub
pop
inc
nop
ss
dec
negl
jmp
dec
lds
and
xlat
mov
pop
dec
loop
les
mov
mov
popf
imul
mov
addr16
fst
jg
pop
andl
shlb
pop
andb
cltd
ljmp
cli
fistpl
inc
fadd
mov
fmull
jae
inc
inc
stc
cmp
test
sub
add
daa
in
and
insl
lret
mov
xchg
cmp
xchg
in
test
mov
xchg
out
or
jecxz
cmp
push
and
pop
das
fsts
sahf
pop
loop
xchg
out
xchg
jbe
mov
push
or
imulb
xchg
sub
dec
pop
repz
mov
jnp
stc
inc
push
popf
shlb
aas
test
out
out
ss
mov
xchg
cmpsb
mov
cmpsb
pop
not
sbb
xor
xchg
mov
mov
and
lock
fs
sub
pop
insl
dec
negl
pop
sbb
mov
mov
ds
cld
insl
inc
adc
pmaxub
and
fwait
xor
sub
outsl
out
mov
ss
in
std
out
jg
int
mov
sub
push
sbb
jae
xchg
movsl
in
jno
ret
fisubs
gs
aas
push
stos
xor
add
int
jge
aad
mov
lock
hlt
push
mov
cmpsb
maxps
push
xor
inc
mov
ljmp
mov
xor
xchg
inc
push
mov
mov
xor
jo
dec
jne
jge
sbb
aaa
inc
add
xchg
sub
pop
repnz
scas
mov
adc
lcall
cwtl
popa
add
ja,pn
jbe
mov
ja
int3
cmp
sbb
adc
je
hlt
cmp
adcb
call
jae
inc
movsl
outsl
sahf
xor
dec
lahf
cwtl
stc
mov
mov
ss
outsl
or
xor
sbb
ret
ret
push
dec
mov
loope
loop
out
mov
xor
jnp
loop
cltd
shl
ja
cmp
shll
xor
jae
and
pop
ljmp
xchg
xchg
aas
aas
imull
stos
popf
sub
addb
lock
xchg
lea
dec
jae
push
cmpsb
sbb
addr16
lock
mov
dec
pop
testb
inc
or
push
cwtl
dec
push
lods
inc
test
cmpsb
push
outsl
xlat
lret
aad
les
ret
rorb
insb
xchg
mov
pop
call
push
fcomps
mov
out
cld
or
test
movl
je
cmc
enter
inc
inc
in
stos
sub
cmpsl
repz
ljmp
lahf
mov
jne
jl
jp
rol
out
sbb
ret
lcall
rolb
shll
mov
mov
outsl
fdivs
push
loope
adc
lea
push
lret
jb
lahf
mov
mov
push
and
aam
xchg
in
gs
mov
or
in
push
sbb
mov
je
push
add
sbb
call
inc
mov
jbe
xchg
shl
jo
cmp
into
dec
dec
mov
idivb
es
clc
icebp
jnp
push
scas
xor
pop
sub
shrb
mov
push
jbe
fdivr
mov
sbb
data16
lcall
push
push
mov
jne
pop
add
mov
xor
cltd
mov
pop
xor
dec
cmp
or
movsb
jecxz
xchg
in
test
pop
push
xchg
icebp
mov
sub
pop
inc
cmpsb
dec
mov
or
and
int
shl
sbb
outsb
jp
mov
fs
push
mov
lods
dec
cmc
xchg
jl
in
xor
leave
mov
loop
lea
stos
les
or
fsubrs
pusha
out
fadd
cmp
ss
sti
out
push
sahf
inc
jno
push
mov
sbb
decb
mov
lods
push
cwtl
cmp
lock
sbb
mov
dec
popa
negl
jmp
popl
jg
cli
sub
orl
into
push
mov
fdivrl
add
pop
jmp
mov
mov
sahf
or
dec
in
pop
fsubr
pop
iret
cmp
push
sub
adc
jns
stos
mov
pop
mulb
adc
push
std
xor
cwtl
addl
les
push
sbb
dec
mov
pop
hlt
psubusw
mov
fcmovnb
adc
ja
subb
lods
mov
das
push
loop
dec
add
loope
inc
mov
lock
bound
addr16
mov
popa
sbb
jmp
and
fcmovne
popa
mov
cmp
loop
pop
in
in
cmp
sbb
ds
fsubrs
pop
sub
adc
movsb
mov
mov
lcall
pop
xchg
xor
jg
mov
mov
push
ret
adcb
mov
jne
mov
dec
sbb
test
lcall
push
jp
dec
add
adc
pop
xorb
pop
sub
add
mov
cltd
repz
cli
or
loope
adc
adc
jbe
and
jge
pop
fiaddl
aad
daa
pop
mov
sbb
outsl
shr
xchg
or
cmp
mov
enter
ljmp
shl
das
adc
idivb
enter
das
or
pusha
lahf
mov
mov
pop
inc
sahf
iret
enter
cld
inc
fcomps
xor
adc
inc
xchg
test
movsb
jge
sub
pop
mov
adc
sbb
mov
loop
cmp
pop
or
jae
sbb
add
jle
out
push
sbb
jp
leave
jp
pop
mov
pop
fs
jmp
in
sub
mov
push
imul
shlb
pusha
inc
xor
dec
pop
jb
scas
and
out
or
jne
adc
gs
jb
sbb
pop
xchg
popa
in
xchg
and
adc
push
das
mov
fsub
and
inc
test
cltd
sub
out
cmp
lcall
pop
adc
and
lcall
stc
sbb
in
scas
call
adc
sbb
jns
mov
xchg
jle
add
in
icebp
jnp
rcl
push
push
and
lea
and
xchg
mov
imul
jae
jno
mov
arpl
in
jno
and
ljmp
cmpsl
sbb
add
mov
cmpsl
das
add
aad
push
lods
inc
jno
sub
dec
xchg
lret
xlat
ret
outsl
bound
and
add
call
fisubrs
sub
xchg
pop
test
call
xchg
out
lods
outsb
or
mov
pop
shl
mov
pushf
lahf
push
mov
xchg
mov
dec
cmp
out
outsl
push
or
xlat
lret
xchg
pop
mov
mov
sub
mov
lods
xchg
shlb
sahf
inc
cmp
repz
xor
fsubrp
sbb
iret
ja
pop
sub
bound
sbb
sahf
loop
and
xchg
add
loop
int
testb
cwtl
repz
sbb
cmpsl
dec
push
cmp
mov
call
mov
out
clc
lret
dec
stos
inc
dec
shlb
icebp
dec
outsl
mov
iret
jecxz
push
fidivrl
or
mov
add
daa
dec
cs
sub
sahf
pop
inc
flds
jecxz
enter
jbe
dec
dec
lock
sub
push
mov
lret
dec
pushf
dec
pop
mov
addr16
xor
mov
fsubr
lods
or
sbb
and
outsb
data16
dec
stos
es
cltd
pop
pop
mov
mov
jo
xor
xchg
sub
pop
loopne
mov
dec
mov
cmp
sub
mov
in
rcrl
out
sbbb
pop
sbb
dec
loopne
out
push
adc
addr16
pop
mov
pop
sbb
imulb
xchg
test
lds
insl
mov
loope
cltd
frstor
mov
mov
jmp
and
add
arpl
sti
inc
push
mov
inc
or
cli
enter
imul
pop
stc
push
popa
jl
xchg
fucompp
lds
stc
sub
loope
insb
shlb
mov
push
pop
loop
adc
mulb
rcrl
mov
or
in
jmp
test
push
rolb
push
fs
shll
lods
aad
xchg
push
dec
aaa
jbe
inc
aam
jbe
xorb
incb
or
jno
lret
data16
loop
mov
lds
or
fstl
push
inc
jecxz
test
xchg
arpl
data16
xchg
push
inc
and
sbb
test
and
xchg
test
cmc
sub
cmp
xchg
push
hlt
inc
xchg
int
mov
mov
hlt
adc
inc
push
xor
pop
std
xchg
loope
outsb
pop
ds
movsl
addr16
shl
cmp
negb
push
push
mov
addr16
lret
lret
pop
cld
jg
mov
fnstenvs
sub
mov
fildl
outsl
gs
fcomps
sub
adc
push
pop
cmpsb
jle
fsubrl
movsb
dec
ja
rcl
xchg
mov
cmc
arpl
dec
jl
cmp
push
xchg
push
insl
jmp
sbb
cmp
push
cmp
mov
sub
cs
enter
lods
scas
int3
push
cli
sti
enter
scas
jno
daa
ficoms
loope
sub
dec
stc
mov
adc
std
jae
dec
fidivs
mov
orb
dec
ret
stos
pop
hlt
inc
push
jne
notl
ds
test
int3
cli
lock
xchg
xorl
mov
idivb
pusha
mov
ja
jno
adc
sub
jne
test
repz
stos
bnd
pop
add
push
je
and
xor
rorl
insb
xchg
subb
add
xor
push
push
rol
xchg
cwtl
push
addr16
pop
scas
cld
pop
mov
shll
pop
loop
push
push
mov
adc
aam
aas
or
xlat
jge
mov
in
mov
cmp
add
not
adc
mov
cmp
dec
push
sub
push
mov
incl
mov
daa
cltd
cltd
jl
leave
xchg
scas
jb
ljmp
sti
xchg
leave
pop
adc
stos
icebp
fsubp
mov
mov
jmp
movsl
sbb
test
jecxz
mov
adc
pop
sub
les
scas
cmc
push
std
cmp
jbe
call
jae
jns
jge
sti
cli
pop
sub
lret
cmpl
push
les
jne
ljmp
xorl
fmull
iret
data16
lret
repz
pop
dec
cmpl
pop
mov
in
add
mov
bound
aam
subb
daa
fidivrl
push
xchg
movlps
lods
mov
mov
jg
and
mov
fdiv
imul
aam
jnp
in
push
inc
outsl
loop
aaa
cld
insb
mov
jp
dec
fdivr
mov
into
push
mov
mov
lcall
mov
xchg
push
arpl
mov
fstl
aaa
add
or
sbb
cmp
lea
in
cs
fucompp
mov
popa
orl
and
sub
aas
cmp
pop
dec
je
imul
xchg
ja
mov
cmp
scas
movsb
push
pop
pop
scas
or
xchg
jmp
movsl
pop
or
lods
jge
sub
les
or
or
stc
pop
jmp
orl
xor
loopne
mov
mov
int
push
xchg
les
inc
cmp
adc
cmp
add
stc
push
js
loop
test
test
idivb
pop
mov
and
cmp
mov
fdiv
mov
push
jecxz
pop
sar
xchg
add
mov
mov
jo
fsubs
int
pop
push
cmp
dec
imul
mov
inc
cli
jl
aam
inc
dec
jno
stc
jno
pop
scas
lods
flds
int3
test
mov
push
test
mov
movsb
inc
sbb
out
push
ds
pushf
scas
in
mov
ss
test
fidivrs
aad
pop
ret
cs
repz
lds
scas
loopne
xchg
fwait
iret
xor
add
leave
jae
sbb
ret
or
push
dec
lea
sub
cld
incb
stos
inc
cs
push
mov
jbe
sub
ss
outsl
xorl
cmc
fbld
popf
xchg
clc
mov
add
mov
fwait
xor
gs
ds
mov
movsb
stos
cmp
adc
mov
xchg
insb
cld
cmp
cmp
cwtl
pop
int
vhaddpd
push
sahf
outsb
stos
fwait
repz
pusha
clc
in
cld
test
push
orb
dec
push
fcompl
and
mov
fwait
or
push
inc
sbb
ficomps
ss
nop
and
clc
cmp
and
and
insb
bound
xchg
addr16
sub
jge
fiaddl
push
push
xchg
push
cmp
ficoml
cmpsl
inc
ffree
lods
sub
loopne
cmpsl
dec
xchg
stos
aas
xor
ljmp
xchg
xor
fs
mov
jg
sub
in
or
idivb
push
int3
jns
jg
insb
sub
lahf
movsb
push
xor
fs
push
jnp
xchg
xchg
lods
mov
mul
xchg
add
jmp
mov
ret
ja
stos
mov
pop
mov
shrb
leave
pop
or
xchg
sub
inc
add
jnp
mov
es
es
les
dec
loope
in
push
dec
xor
ss
push
lds
in
rorl
xchg
addr16
sbb
dec
cmp
sbbl
push
or
jb
mov
mov
test
out
jns
sub
sbb
mov
add
mov
and
and
nop
mov
mov
into
mov
rcr
cmp
and
sub
mov
jbe
fistpll
push
jb
imul
mov
outsb
push
dec
add
sub
in
sbb
push
cmp
movl
jne
jae
and
mov
jb
das
icebp
mov
pop
mov
dec
out
loop
inc
pop
or
mov
in
dec
xchg
sub
loopne
enter
cmp
lahf
ss
xchg
inc
inc
in
scas
out
ret
sbb
pop
mov
gs
mov
jle
cwtl
cmp
or
fdivl
xchg
add
push
cmp
push
xchg
mov
or
inc
jns
xchg
and
cli
aas
in
dec
ds
lods
xor
mov
inc
mov
mov
mov
adc
push
repnz
push
subl
cmp
mov
xor
loopne
pop
out
test
mov
sub
pop
and
xor
fistl
add
aaa
xor
das
and
out
mov
xchg
ret
cld
add
dec
jl
jo
sub
shr
pop
or
push
nop
popa
popa
in
push
or
adc
test
repnz
add
add
ds
pop
xchg
into
enter
mov
lretw
in
jne
push
clc
and
or
hlt
stos
enter
fildl
out
ja
cmp
call
subb
call
jb
or
sbb
xchg
out
xlat
mov
dec
jl
in
imul
jl
cmpb
mov
inc
inc
out
in
dec
mov
insl
mov
inc
aas
sarb
mov
flds
mov
jmp
and
mov
cmpsb
push
movsl
cs
mov
out
xor
mov
push
cmp
mov
jg
or
mov
mov
xchg
inc
push
loopne
out
push
popf
ja
shlb
and
int
jge
add
ja
mov
psubd
test
into
lahf
cli
adc
into
inc
adc
imul
and
cltd
xchg
sti
mov
arpl
add
or
sarb
out
pop
ds
jl
fsubl
lds
addl
rolb
shlb
jmp
int
popf
sub
lcall
stc
daa
cmp
jbe
ja
dec
xchg
push
push
mov
mov
dec
xchg
xchg
enter
jbe
mov
faddl
xchg
or
aas
mov
call
out
js
pop
dec
cmp
and
adc
lahf
adc
push
pop
lods
setp
int3
fnstcw
icebp
mov
cmpsb
push
pop
nop
adc
and
or
insl
rorb
pop
call
mov
loope
sarl
pop
xchg
xchg
addr16
push
ficoml
jmp
mov
push
cmp
jmp
push
cmp
sahf
repnz
int
into
cwtl
and
ljmp
lret
push
cltd
cmp
pop
jbe
xorl
aas
daa
mov
sbb
mov
pop
in
xlat
cwtl
movsb
or
lret
lret
sub
pushl
add
fwait
ret
add
test
mov
fdivl
pusha
adc
gs
sbb
xor
jnp
test
gs
mov
xlat
enter
lods
pop
jecxz
or
mov
xchg
test
xchg
and
xlat
pop
gs
and
iret
out
sbb
frstor
in
negb
scas
pop
add
mov
lret
push
pop
enter
repnz
loope
setl
or
mov
fisttpl
shrl
sub
dec
fstpl
pop
sub
or
es
pop
test
mov
fistpll
add
movsl
jno
mov
xor
jne
out
xchg
loopne
cmp
add
insb
sbb
mov
inc
mov
rol
cltd
addb
inc
bound
gs
jmp
jbe
rolb
and
imul
lea
adc
in
ret
sar
out
repnz
inc
scas
mov
fbstp
faddl
add
repnz
mov
jne
test
push
out
cltd
xchg
out
das
cmc
call
add
fwait
leave
or
stos
test
js
xor
pop
in
outsb
rol
sbb
pop
cmpsl
xchg
cmpb
imul
xor
inc
out
mov
and
insb
cmpsl
loop
adc
in
cwtl
inc
inc
mov
adc
lock
dec
jge
jo
insb
sti
and
cmp
insb
add
mov
sbb
adc
enter
jmp
jno
push
push
gs
adc
adc
sub
mov
fldenv
and
getsec
lret
mov
iret
addb
testl
sub
add
into
xchg
push
out
seta
sbb
add
or
outsb
mov
ds
pushf
insb
adcb
enter
clc
xchg
mov
pop
dec
mov
dec
sub
ds
dec
inc
ret
jp
hlt
sub
aad
scas
pop
push
pop
bnd
pop
mov
push
adc
sub
sub
and
repnz
pushf
stc
adc
out
or
imul
mov
rcr
push
lret
xor
inc
adc
in
out
cmp
ljmp
jns
dec
bound
jg
repz
push
xor
dec
js
sbbb
push
sub
push
lods
push
xchg
shlb
in
mov
push
je
jo
xlat
cli
shll
popa
sub
pop
push
xchg
dec
mov
iret
fiaddl
popf
je
out
in
push
in
sti
mov
mov
ret
push
push
sahf
les
push
or
xor
inc
test
stc
mov
sub
xchg
sarl
rcl
jg
arpl
sbb
fbstp
ds
sbb
std
nop
mov
in
cmpsl
loopne
pop
dec
dec
fnstenv
adc
mov
push
inc
mov
and
iret
psubd
cmp
cmp
pop
leave
je
test
add
repnz
mov
add
pop
outsb
rcll
mov
scas
inc
mov
roll
jo
mov
in
xchg
mov
call
pop
fwait
xor
fwait
mov
dec
aas
inc
jp
jae
stos
cmp
je
or
insb
sti
xor
mov
bound
insb
fistpll
outsl
mov
mov
movsb
add
in
aas
mov
mov
hlt
cmp
dec
int
mov
aaa
push
test
in
scas
pop
imul
pop
fisttps
mov
cmp
lds
cmp
sub
or
pop
lock
pop
or
lahf
push
in
addr16
fnsave
movsl
sbb
int3
jl
push
inc
push
cmpsl
jne
aam
call
jno
dec
loop
xchg
lahf
lcall
and
or
jo
mov
or
push
inc
hlt
and
pop
fiaddl
pop
stos
and
mul
jnp
xchg
mov
pop
xchg
adc
and
mov
or
leave
test
movsb
shrb
lock
icebp
and
pop
adc
in
stos
stos
xor
mov
jae
cmp
cmp
std
stos
xchg
sub
loope
ret
nop
jb
adc
andl
mov
xor
mov
mov
mov
sbb
rep
mov
mov
push
aaa
into
jno
xchg
int3
daa
in
subl
jno
aam
and
push
popa
cld
fwait
loopne
sub
sahf
sub
inc
movsb
mov
mov
cmpsl
jnp,pt
xor
pushf
pop
shl
ja
sub
scas
and
fcmovnu
adc
sbb
inc
iret
xchg
imul
jle
aam
or
scas
icebp
add
jmp
dec
xchg
scas
out
pusha
and
enter
test
and
xor
in
mov
std
mov
adc
mov
mov
add
lods
sbb
adc
adc
aas
push
sub
cmp
loopne
ja
imul
aad
push
or
inc
xlat
sub
or
js
or
aas
xor
in
dec
mov
mov
cmpsb
sub
fildll
rorl
mov
je
mov
popa
inc
pop
xchg
mov
sarl
sahf
push
sub
pop
insl
jnp
push
test
rolb
pop
xlat
xchg
pop
mov
call
cmp
jg
mov
inc
adc
or
mov
inc
cwtl
iret
shrl
xchg
xor
pop
and
movsl
inc
out
ss
test
pop
sub
adc
outsb
xchg
cmp
leave
les
xchg
sub
out
stos
shrl
mov
push
mov
shll
add
stos
subl
add
inc
push
push
loop
in
and
mull
xchg
dec
mov
mov
pop
jne
shrb
jl
int3
test
and
call
lock
inc
mov
sub
push
in
shll
arpl
add
and
sub
push
or
inc
mulb
mov
pop
adc
jg
jns
pusha
jno
xchg
push
xchg
xchg
or
mov
ret
push
gs
mov
js
icebp
inc
jb
mov
dec
sub
pop
test
and
pushf
jg
add
xchg
add
jnp
and
add
push
fs
jp
pushf
in
xchg
pusha
mov
push
cmpsl
psrad
push
jno
push
lea
lock
lcall
outsb
adc
dec
inc
dec
jg
shl
cs
pop
jns
jmp
in
jmp
inc
fildll
in
add
jno
test
lods
or
cmpsl
in
in
arpl
test
mov
in
push
or
mov
adc
out
in
mov
add
lret
adc
testb
in
add
xchg
sub
mov
out
sbb
std
adcb
mov
jle
pop
xchg
scas
xor
mov
xchg
jnp
les
mov
or
out
jle
cmc
jecxz
pop
sarl
pushf
ljmp
mov
jbe
add
les
in
lret
push
adc
imul
jb
inc
mov
lods
jle,pn
lods
dec
movsl
in
add
mov
sub
lods
mov
test
ja
mov
out
shll
enter
imul
sub
pop
das
push
sub
sahf
mov
dec
mov
and
out
dec
jno
push
fwait
in
push
push
adc
xchg
cs
sub
cltd
pop
push
inc
lock
xchg
inc
pop
or
rcrl
mov
xor
minpd
push
and
xchg
icebp
jl
pop
pop
mov
xchg
or
mov
xor
jne
mov
loopne
adc
fidivrl
dec
mov
pop
in
push
rcl
out
jl
cld
lea
shll
push
mov
orps
ja
ja
jp
add
mov
push
pop
xor
shl
int3
pop
flds
orb
sub
dec
enter
lods
sub
push
xchg
ljmp
test
cltd
or
movsl
add
out
out
fadds
and
dec
test
xchg
aaa
test
ds
pop
loope
in
out
inc
sub
lock
jb
xor
aaa
push
dec
int
js
xchg
jbe
dec
push
mov
xchg
adc
orl
inc
xchg
jmp
pop
test
xchg
fcmovnbe
loopne
bound
pop
nop
pop
mov
cmp
jl
cltd
inc
mov
cwtl
jmp
sti
sbb
data16
stc
push
test
dec
xlat
mov
out
in
push
jg
insb
lret
cld
dec
dec
sbb
rcr
cmp
mov
pop
dec
out
sbb
sbb
mov
sbbl
mov
pop
dec
faddp
icebp
sub
or
mov
lahf
sub
push
mov
outsb
sub
scas
inc
call
popa
aaa
out
inc
cmc
push
fwait
jno
or
daa
mov
push
xchg
pusha
ss
jg
mov
add
mov
mov
inc
repnz
das
xchg
jnp
pusha
xchg
xchg
shr
repz
jbe
loop
dec
mov
stos
dec
das
cmp
xchg
daa
push
and
pop
mov
ret
repz
jbe
and
xorl
test
leave
lods
popa
sbb
fmuls
flds
jecxz
and
aam
mov
in
inc
mov
mov
push
pop
mov
pop
cmp
leave
icebp
mov
mov
sti
jle
call
scas
in
mov
loopne
repnz
test
add
stos
nop
pop
out
xchg
sub
lock
pusha
sbb
js
push
inc
call
in
jge
cwtl
mov
mov
dec
je
jg
inc
stos
das
jge
inc
sub
inc
pop
pop
cltd
inc
test
mov
sbb
int
add
test
fistpl
cmc
int3
pop
inc
sbb
lods
jle
dec
cmp
addr16
cmp
sub
sbb
iret
daa
inc
lret
insb
xor
stos
hlt
std
fwait
mov
pop
adc
lahf
ss
stos
sbb
pusha
mov
push
negl
lret
fdivr
inc
mov
mov
pop
mov
les
push
push
xchg
and
push
lods
xchg
lret
mov
adc
ss
mov
decb
or
adc
ja
addl
pop
inc
out
shl
jnp
sbb
or
inc
inc
fidivrl
loope
or
mov
call
arpl
adc
repz
push
push
cld
or
lds
shrl
mov
cmp
leave
mov
sbb
mov
cmp
test
pop
or
leave
jo
outsl
and
and
fidivl
cld
ja
cs
call
aad
sbb
fs
les
fwait
mov
scas
in
cmp
and
jb
lcall
or
xor
in
es
adc
sbb
test
dec
sub
testb
push
lock
and
lcall
lods
mov
fildll
add
sub
push
mov
pushf
fcompl
mov
enter
adc
lea
repz
dec
out
cwtl
jge
int3
mov
fwait
sub
lret
cmpsb
cmp
lds
inc
addr16
sub
pop
xor
inc
dec
aad
inc
adc
xlat
mov
fstps
cld
popf
inc
jno
aad
or
adc
jmp
popf
cmp
outsl
sbb
adc
or
adc
sbb
mov
leave
cwtl
imulb
and
cmpsb
stos
jmp
pop
fidivs
jmp
add
imul
inc
mov
jbe
mov
into
arpl
test
jbe
push
and
test
sbb
xchg
inc
fistps
fwait
jle
push
or
xor
sub
pop
pusha
push
cwtl
das
cmp
popa
fdivl
shll
or
in
cld
mov
mov
xchg
dec
ljmp
cmp
lret
cmpsl
in
jno
rorb
push
fisttpll
xchg
testb
or
mov
jp
cli
lods
adc
cmpsb
jge
xor
xor
mov
insb
fcompl
or
xor
sub
rclb
and
mov
shrb
add
mov
je
movsl
fsubrs
pop
add
iret
sbbb
and
push
scas
call
mov
les
lcall
adc
push
addr16
andl
pop
mov
lcall
loope
pop
or
int3
pusha
cmp
sbb
jae
movsb
mov
inc
lret
pop
xchg
mov
mov
push
ret
gs
adc
clc
lea
leave
adcb
pop
or
ret
jmp
dec
rcl
jae
stc
idiv
dec
mov
sar
and
unpcklps
or
mov
jae
add
xrelease
pushl
xchg
jbe
mov
rol
adc
ss
pusha
data16
xchg
pop
dec
iret
add
or
pop
pop
outsl
loope
repnz
add
push
mov
stos
inc
pop
into
std
sub
insl
push
inc
cmp
rcr
inc
mov
fisttpll
cmp
sbb
cwtl
test
adc
cli
out
sub
push
cmpsl
lock
xchg
shl
outsl
sub
lcall
lret
iret
and
xchg
push
pop
mov
xlat
xchg
outsl
shl
add
or
push
int
pop
inc
pop
sti
mov
jl
push
and
sar
lds
std
cmp
inc
into
fs
cld
mov
scas
xor
addb
adc
add
lock
and
bound
jns
xor
xor
inc
pop
cmp
popf
sub
into
gs
lahf
push
insb
ret
sbbb
nop
and
cmp
cmpsl
test
mov
jo
push
lods
pop
mov
ljmp
xchg
and
fucomip
jnp
xorb
xchg
xor
sahf
pop
cmp
dec
pop
sar
in
sub
or
aas
lret
cld
lods
movsb
in
stc
xchg
pop
subb
sub
pop
inc
mov
cmc
mov
xor
rorl
mov
dec
out
dec
dec
push
mov
mov
arpl
lds
aaa
push
jmp
out
pop
insb
icebp
loop
mov
imull
fdivrs
ds
dec
mov
retw
and
data16
and
sbb
fwait
xchg
jmp
push
mov
lea
iret
loope
pxor
fdivrp
xor
xor
xor
movsl
mov
jmp
cli
outsl
sti
rcrb
sbb
icebp
push
mov
xchg
js
movsb
mov
test
scas
inc
inc
loope
xor
imul
add
add
push
fistl
lret
sar
xor
nop
mov
into
adc
mov
xor
ret
imul
push
sbbl
ja
loopne
lds
jne
out
cli
ret
inc
add
adc
dec
fs
sbb
outsb
jb
jp
jbe
xrelease
mov
xor
dec
inc
push
ret
icebp
movsl
cmp
and
std
repz
das
dec
jno
add
loop
movsl
into
dec
push
into
imul
cmpsb
mov
pop
inc
lret
sti
popa
jecxz
jae
jbe
movsl
lods
lcall
insb
rclb
lret
jne
adc
jbe
sub
sub
jl
ja
cwtl
test
cwtl
test
pushf
sbb
js
aaa
into
add
mov
or
movsb
dec
mov
push
pop
sahf
and
xchg
or
and
mov
add
mov
inc
leave
jmp
dec
pusha
lds
dec
pop
mov
lods
pop
push
push
mov
frstpm(287
jne
out
ficoms
shlb
cmp
lcall
dec
arpl
cmpsl
cmpsl
mov
xchg
sub
sbbb
dec
cmpsb
testb
mov
push
jae
and
insl
jmp
fbstp
xchg
aas
fs
inc
lock
testb
insb
cmp
add
pop
sti
cmp
sub
jno
dec
out
add
sub
lods
inc
xchg
add
lret
xchg
dec
cmpsl
dec
adc
xchg
jns
lahf
stos
bnd
loopne
add
pop
jg
mov
lcall
pop
fs
mov
js
pop
fnsave
aam
xchg
fcmovu
mov
fcompl
inc
fs
cmp
xor
out
mov
fcompl
inc
mov
int
cwtl
mov
test
and
cmp
add
push
test
mov
gs
sbb
stos
shll
jnp
pop
js
add
xor
or
xchg
cmp
and
cwtl
jb
in
or
test
test
inc
fwait
sbb
jae
aas
movsl
mov
fdivrl
and
xor
mov
dec
cmp
push
dec
mov
xchg
lret
add
mov
mov
push
ret
movl
add
movl
adcl
pop
into
rcrl
adc
bound
call
push
ret
in
cs
xor
mov
call
pop
imul
mov
push
leave
xchg
scas
addr16
int3
push
fisubs
aad
xchg
sub
movsb
out
add
pop
enter
add
xor
jl
into
orl
xchg
scas
ficoms
dec
pop
into
repz
mov
jo
mov
cmp
adcl
xchg
scas
call
jmp
out
movzbl
xor
jp
sub
out
mov
push
jne
int
addl
mov
insl
or
sbb
adc
popa
jnp
sbb
mov
pop
fidivrs
xchg
mov
fwait
push
inc
std
aad
pop
sbb
mov
ret
sbb
push
stos
mov
les
stos
jns
push
lret
mov
pop
dec
jmp
xchg
xor
iret
addr16
enter
push
lods
lret
mov
sbb
inc
lcall
and
ljmp
add
push
and
fcomp
subl
push
out
bound
ds
dec
xchg
rcr
int
xor
or
mov
mov
inc
ret
push
inc
stos
add
mov
cmpb
aad
mov
andb
pop
jae
sti
jbe
sbb
pop
xor
xor
fcmovnu
les
inc
dec
lcall
inc
inc
cmp
jno
xchg
mov
in
adc
add
mov
push
jns
cmp
lcall
and
cmp
cmpsl
popf
js
sbb
notb
scas
add
add
push
mov
int
shl
mov
sbb
scas
out
stos
cmp
cwtl
testb
in
repz
test
push
aas
push
push
lcall
cld
mov
push
jge
push
fcompl
rol
lods
stos
popa
stos
dec
outsb
mov
xor
and
out
orl
jo
jmp
adc
xchg
add
popa
ret
adc
xorb
mov
inc
leave
int
pop
fcomip
fmuls
xchg
push
adc
cs
xor
mov
mov
xor
xchg
scas
mov
insl
and
pop
mov
jb
dec
mov
jecxz
xchg
cwtl
in
pop
pusha
inc
add
cli
xchg
xor
fistps
rcr
inc
inc
stos
mov
xchg
test
mov
and
mov
sbb
sub
daa
cmp
push
cmpsl
xchg
out
inc
and
in
push
pop
cmp
adc
mov
sbb
fwait
push
fistl
cli
hlt
inc
cld
mov
jg
push
push
arpl
rclb
push
sub
or
mov
add
push
jg
push
cs
jnp
mov
js
loope
sbb
cmp
js
push
stos
repz
add
sbb
lcall
lea
lret
inc
subl
rol
popa
cmc
movsb
xor
daa
sub
add
aam
add
xor
in
nop
test
fsubrp
scas
pop
jl
pop
out
cmp
sarb
rcll
add
add
loopne
adc
pop
jae
xchg
cmp
and
cmp
fistpll
sahf
lods
jne
sbb
mov
mov
xlat
mov
mov
jbe
or
mov
rol
jnp
jno
adc
mov
push
fidivl
shll
xor
in
cmc
repz
and
movb
adc
cmc
into
lds
cs
mov
add
loope
ja
out
pop
ljmp
fwait
sbb
mov
and
xlat
mov
mov
in
lods
and
sbb
mov
ljmp
stc
push
imull
jmp
lds
out
inc
pop
cld
cmpsl
sub
pop
or
in
jmp
repz
xchg
test
outsl
in
cld
pop
sahf
lods
fstpl
aaa
popf
add
mov
andb
cmpsl
out
push
bound
stos
stos
hlt
xor
int3
jno
cmpl
inc
xchg
cs
adc
cmpsb
and
cmp
pop
sub
idivb
cmpsb
mov
pop
rcll
jo
xor
stos
add
fldt
or
push
sbb
iret
std
je
xor
cli
or
and
mov
dec
add
or
jmp
lcall
jge
sub
test
inc
aas
mov
dec
jnp
out
sbb
dec
add
mov
je
or
stc
cmp
popf
loop
lret
cmp
cmpsb
push
jle
pushf
and
ret
es
or
aaa
mov
aam
adc
and
fcomps
lods
std
cltd
pop
add
in
mov
std
push
inc
sbb
cwtl
pop
pop
inc
mov
mov
xor
fdivs
notb
dec
sbb
xchg
mov
inc
fcomip
out
sbb
mov
je
mov
mov
xchg
fmuls
jnp
jne
cli
adc
mov
sub
in
pop
mov
jno
fs
push
xor
or
mov
hlt
into
out
aad
mov
inc
sub
mov
sti
sbb
mov
xchg
mov
imul
pop
sbb
in
mov
jmp
jno
lret
xchg
in
and
aam
mov
mov
pop
dec
xchg
insb
outsb
xchg
jl
add
dec
ss
add
pop
rol
in
shrl
ret
pop
icebp
push
mov
push
jae
imul
xchg
mov
aas
sbb
mov
jns
or
xor
out
push
stc
fimuls
mov
push
pop
mov
add
shr
jo
in
orl
insl
sub
mov
stos
push
jg
adcb
xchg
ss
mov
push
xadd
insb
out
push
sbb
stos
cmp
insb
push
shlb
cmpsl
stc
popa
and
mov
bound
fstps
inc
into
jmp
dec
lock
and
gs
dec
mov
jecxz
sbb
jle
adc
fs
mov
dec
fimull
out
cmp
cmc
fstps
sahf
xor
dec
bound
jb
pop
adc
jnp
mov
test
xchg
fs
mov
flds
gs
enter
rol
xchg
push
jecxz
movsb
jecxz
mov
mov
or
mov
sbb
inc
fildl
bound
int
and
xor
push
sbbl
inc
add
mov
inc
jae
pop
ja
mov
sub
rclb
mov
sbbl
xchg
mov
int
mov
adc
fiadds
push
add
mov
and
scas
ds
lret
push
test
and
addl
and
xchg
mov
pusha
push
sti
cli
pushf
xor
pop
mov
dec
mov
and
mov
int
addl
into
mov
and
inc
imul
outsb
jno
push
jno
cmp
clc
jp
repz
out
mov
sbb
add
iret
sti
std
pop
iret
in
out
loope
je
nop
jo
fstl
in
rcrb
jbe
dec
test
cwtl
stos
fcom
inc
xlat
les
pop
mov
or
jle
test
inc
mov
test
inc
mov
fimuls
ja
xchg
int
enter
pop
xor
sbb
add
cmp
fcoml
add
insb
push
je
lret
xlat
jl
pop
jbe
jns
pop
cmpsl
lods
cmp
or
pop
adc
jmp
and
lret
push
or
stc
push
or
pop
cltd
xor
repnz
enter
stos
or
pop
jg
push
fnsave
arpl
addb
fsts
clc
pop
out
inc
subl
sub
xor
loope
out
jnp
movsl
cmp
pop
mov
daa
cmp
dec
mov
ficompl
xor
out
cli
notl
std
jmp
cmp
pop
addl
int3
repz
das
fcmovb
in
jns
out
addb
xor
test
pop
pop
jne
sbb
pop
sbb
cwtl
jo
int3
bswap
xorb
scas
push
popa
mov
lods
sub
cmp
adc
add
add
push
fisubrs
fwait
arpl
pop
hlt
movsb
int
outsl
push
xor
adcb
inc
xlat
and
push
int
cmc
cmpsb
pop
scas
jp
jl
in
fwait
ss
xchg
test
push
jb
mov
sar
jmp
ret
cwtl
and
xchg
xor
mov
shl
fidivs
mov
push
cwtl
ljmp
pusha
push
push
cmc
rcrl
mov
cmp
sbb
or
iret
bound
xchg
xchg
inc
test
out
xchg
call
and
fsub
sub
popa
jne
aad
stos
lcall
mov
pop
mov
pop
aaa
xor
rcrb
sub
mov
scas
rorb
loope
push
mov
xchg
shl
mov
pop
mov
mov
pop
push
and
pop
cld
mov
cmp
push
mov
dec
push
sub
pop
cmp
imul
and
out
xchg
pushf
or
mov
loopne
mov
xchg
cmp
add
mov
mov
leave
sub
stos
jle
sahf
jo
inc
or
lret
pop
ss
mov
mov
pusha
test
sbb
mov
push
xor
in
cmp
sub
xchg
inc
enter
push
es
sbb
push
mov
push
wbinvd
sbb
mov
ud2
mov
xchg
mov
cmp
ficomps
xor
or
mov
xor
rolb
jmp
mov
pop
nop
adc
xchg
in
or
push
outsl
test
inc
sti
sub
push
jmp
xchg
fwait
jge
pusha
scas
mov
cmpsb
cmp
mov
les
in
add
lcall
mov
stos
add
adc
push
xor
leave
es
fidivrs
xorb
add
adc
push
adc
push
lods
aad
jno
mov
jg
pop
mov
dec
and
outsl
lahf
divb
mov
movsl
mov
pop
movsb
inc
out
scas
push
lea
into
mov
mov
pop
and
imul
lock
fstps
xor
sahf
dec
mov
and
std
nop
sub
and
into
movsl
sub
xor
pusha
jle
ja
fpatan
out
inc
pop
mov
lods
sub
sbb
push
lret
sub
fcmovb
fs
out
xchg
mov
test
sarb
loopne
faddl
inc
or
dec
or
pop
and
pop
mov
or
mov
mov
pop
pop
cmp
bound
mov
and
aam
jne
in
std
ja
icebp
xorb
pop
dec
mov
lods
gs
jl
push
int
out
aad
jno
jo
mov
cli
fsubr
xor
cmp
ss
mov
mov
mov
stos
jg
repnz
or
push
popf
out
sti
sti
incb
push
mov
jns
into
das
add
adc
dec
jne
lret
data16
dec
pop
shrb
jmp
ret
xlat
inc
jbe
push
js
mov
loopne
mov
push
fidivs
ljmp
sub
dec
add
push
mov
int
mov
adc
inc
mov
pop
repnz
mov
or
sub
mov
int
jecxz
addr16
in
mov
xchg
jmp
xchg
and
jge
ss
cmp
popf
or
lea
push
scas
dec
out
xor
insl
push
ret
pushf
pop
adcb
sub
cmp
jle
outsl
xchg
fwait
push
mov
lcall
sbb
mov
xor
mov
inc
push
loop
das
push
mov
cs
rcrl
mov
test
cmp
sbb
in
or
aad
xchg
scas
mov
add
add
push
movsb
sub
jbe
std
push
div
mov
xchg
jmp
sub
inc
cs
or
outsl
cmp
dec
dec
mov
pop
insl
decl
insl
cmc
add
ret
jnp
xor
pop
xchg
mov
ret
dec
push
sar
jno
repz
xor
inc
pusha
push
test
jae
pop
dec
pop
xchg
jmp
push
mov
fsub
sti
or
inc
sahf
bound
repnz
xor
lods
ljmp
dec
lcall
inc
xor
push
cld
jp
sbb
lods
loopne
pop
les
mov
pop
adc
shll
jo
cltd
sar
push
std
inc
add
repnz
scas
psadbw
pop
xchg
add
adc
sbb
ds
pop
jle
imul
sbb
ja
xor
pop
shll
insb
inc
pop
xlat
xlat
push
or
fbstp
sbb
iret
cmpsb
cmc
add
push
pop
or
push
push
mov
and
push
adc
pop
clc
addr16
mov
cmp
mov
jnp
jb
pushf
movsl
aas
xchg
push
adcb
xor
jno
pop
movsl
negl
or
nop
jmp
inc
aam
sub
mov
ficompl
shrl
dec
nop
dec
inc
xor
push
es
add
cwtl
hlt
mov
rcll
clc
in
push
mov
or
fidivl
stos
iret
aaa
jns
stc
rolb
pop
sahf
movl
insl
jge
push
call
inc
push
jo
pop
aas
in
gs
add
mov
aas
inc
jne
dec
aam
in
and
xchg
mov
bound
subl
cmpsb
xor
push
sbb
pop
push
add
xchg
add
insl
lods
add
dec
jae
or
scas
add
loopne
cmp
popa
shll
mov
xchg
stc
or
push
sub
inc
mov
mov
loopne
adc
lock
iret
lods
aam
int
push
dec
daa
insb
pop
sbb
stc
xchg
pop
dec
insl
sub
incb
jmp
ds
inc
lods
mov
pushf
and
ljmp
aaa
jge
cmp
push
inc
fadds
mov
out
dec
movsb
sub
iret
sub
cmp
cmc
pop
daa
add
cli
push
mov
sub
repz
inc
mov
xor
xchg
push
mov
sub
push
aam
dec
and
loope
jmp
test
lods
and
repnz
pusha
enter
mov
push
out
les
jg
out
divb
xor
js
nop
sbb
xchg
mov
clc
mov
xchg
shlb
or
and
in
fildll
xchg
sbbb
adc
cmp
les
mov
pop
ja
cmpsb
add
lret
mov
mov
add
or
lea
cmp
std
sub
pop
sbb
cmc
mov
movsl
stc
fidivs
sahf
jge
stos
dec
xor
xchg
pop
ficoms
and
mov
out
popa
jge
sub
out
mov
out
xchg
iret
hlt
dec
mov
inc
test
mov
mov
xor
aad
and
cmpsl
out
xor
leave
int
lock
outsb
adc
pusha
xlat
aad
cmc
adc
mov
int
mov
mov
fdivl
enter
xchg
jge
dec
cmp
scas
inc
movsb
push
fwait
ss
mov
fldt
push
scas
push
cmpsb
lea
and
es
and
mov
jg
lods
and
ljmp
mov
mov
add
pop
out
lahf
out
jno
lret
mov
cltd
jbe
cmc
pop
xchg
test
cmc
adc
dec
fsubrl
divb
adc
mov
lea
cwtl
stc
adc
scas
mov
add
pop
ljmp
xor
in
mov
ret
pop
jae
and
ss
sub
cmp
xorl
test
orl
jmp
outsb
jo
out
jnp
push
pop
sub
cmpsb
shll
lods
cwtl
xor
pop
mov
xchg
loop
nop
cld
lcall
fldenv
repnz
or
test
loope
outsb
cmp
sbb
xorl
cli
enter
pop
shlb
icebp
subb
aad
idivl
aas
pop
ds
test
fistpl
cmpsl
or
inc
jge
cmp
cmpsl
das
mov
cwtl
cmp
sbb
mov
sbb
xor
pop
dec
mov
pushf
test
push
push
xlat
sahf
dec
rcrb
add
adc
xor
test
sub
fsubr
arpl
bound
stos
add
and
or
jns
outsl
mov
cmp
cmp
adc
inc
add
jne
lret
lret
lods
jb
sub
cmp
clc
xchg
xor
mov
call
xor
das
adc
mov
push
addr16
imull
jle
inc
and
xchg
out
push
or
adc
pop
test
xlat
mov
adc
aaa
imul
add
and
fisttpl
mov
ficomps
push
xchg
les
cmc
add
jns
lahf
xor
enter
inc
aas
movsl
pushf
out
iret
mov
xchg
data16
xor
push
fcompl
inc
cmp
add
imul
pusha
or
dec
stc
pop
xchg
daa
dec
xchg
mov
lret
pop
xor
adc
mov
xlat
repz
sub
cmp
aas
lock
lcall
mov
cmp
jb
dec
sbb
pminub
mov
nop
jnp
std
adc
hlt
fldcw
mov
adc
adc
stc
dec
fnsave
dec
xchg
inc
mov
jl
enter
repnz
andl
adc
popa
loopne
popf
ficomps
xor
and
call
or
lods
sbb
add
je
mov
pop
or
pusha
jp
movsb
cmp
pop
fmuls
lods
and
and
jmp
dec
pop
daa
insl
sub
xlat
pop
mov
push
mov
jno
loope
std
leave
popf
mov
sbb
dec
sti
or
std
fisubl
add
push
out
mov
mov
inc
jp
pop
scas
testb
xor
xchg
fsubr
ret
mov
jl
fisttps
pop
jecxz
xchg
in
push
gs
mov
mov
mov
ret
jge
sbb
mov
into
scas
sub
jnp
insl
std
ss
into
cmpsl
add
roll
sub
push
insl
mov
movsl
out
adc
adc
sbb
or
sub
scas
cmp
push
adc
xchg
mov
stc
jns
cld
outsl
out
jae
inc
or
dec
fabs
decl
xor
out
dec
inc
flds
xchg
xchg
and
out
cli
mov
mov
ds
pop
push
stos
es
movsl
mov
cmp
mov
ss
mov
push
pop
inc
push
stc
pop
out
xchg
icebp
xchg
cmp
sbb
xchg
test
pop
sub
subb
nop
cmp
les
add
rcrl
adc
mov
ds
into
jb
pop
sbb
push
inc
jns
bound
andb
sub
mov
pushf
push
dec
sbb
push
in
mov
call
pop
xor
inc
scas
inc
popf
lcall
pop
test
sub
enter
xchg
mov
sbb
fs
mov
nop
push
movsl
sub
push
test
mov
adc
xor
hlt
pop
and
aaa
cld
repz
in
test
wrmsr
pop
sarb
cmp
adc
dec
stc
lds
cwtl
adcl
mov
and
iret
push
inc
sbb
xchg
sbb
out
xchg
xor
jmp
dec
pop
push
lods
jno
adc
les
adcb
sbb
shr
mov
imul
mov
inc
data16
mov
and
pop
mov
mov
clc
xchg
add
in
in
or
fsubr
mov
leave
sub
fnsave
add
loopne
lahf
pop
mov
push
ss
xlat
sub
adc
mov
dec
bnd
jle
out
dec
fldl
out
test
in
sti
in
sahf
stos
out
fsubrs
push
je
pop
mov
and
jle
push
and
jb
call
or
pusha
movsb
push
pop
push
adc
mov
push
push
int
scas
imul
pusha
fwait
adc
ljmp
arpl
aaa
cmpsb
imul
sub
dec
insb
jl
jbe
push
xchg
add
push
mov
jb
in
rcl
and
xor
clc
inc
sub
jmp
or
cmp
or
xchg
mov
push
cmp
inc
push
pop
mov
jge
dec
scas
repz
inc
dec
push
insl
insl
sbb
decl
hlt
inc
cmp
ljmp
bt
imull
and
xchg
push
cli
jmp
test
icebp
mov
testl
sub
push
fisubrl
inc
lret
inc
xchg
jle
iret
lcall
jmp
fadds
jmp
pop
inc
or
xor
into
jb
inc
xchg
call
fstps
push
inc
cmp
leave
inc
xchg
sbb
mov
xchg
mov
data16
xor
push
testl
ja
aad
icebp
fs
cli
jne
sub
xor
addr16
push
push
push
std
movsb
cmp
sbbb
add
or
lock
xchg
icebp
sahf
pop
repz
repz
adc
push
mov
into
lret
sbb
vucomiss
xor
push
imul
push
in
sbb
sbb
cmp
orl
dec
dec
xchg
mov
outsl
sbb
fidivs
icebp
push
in
and
std
adc
or
das
repnz
fcoml
jo
cmp
xor
xor
mov
out
sub
pmaddwd
ss
mov
pop
lock
inc
cld
pop
mov
ja
jmp
mov
ret
das
inc
jnp
mov
mov
loop
subl
cld
sti
std
push
ljmp
jno
and
dec
aaa
cld
cwtl
xor
lock
fs
mov
cwtl
test
xor
push
jno
popa
das
ds
add
mov
mov
sub
push
out
mov
lods
fwait
xchg
sub
sub
es
push
or
pop
scas
mov
movsl
jge
pusha
aaa
inc
mov
add
out
adcl
mov
bound
and
jmp
xchg
inc
xchg
sub
incl
mov
jle
les
jl
mov
shrb
mov
sub
sbb
int3
xor
mov
lds
ret
add
cmp
sbb
lods
and
sub
jno
xchg
mov
jnp
jbe
push
dec
xor
out
aam
icebp
push
pushf
mov
adc
cmpsb
mov
add
sbb
xchg
mov
leave
test
and
adc
aaa
xsha256
cmpsb
xlat
and
mov
test
popf
mov
sbb
cmp
xchg
push
jge
je
out
push
push
cmc
mov
daa
ja
movsl
int3
int
mov
xchg
xchg
dec
lret
pop
cmp
les
mov
pop
xlat
jp
mov
jnp
fs
xchg
les
xor
adc
mov
rcrl
or
ja
movsl
mov
adc
or
movsb
mov
push
rcl
mov
adc
or
xchg
pushf
cmpsl
sub
pop
sub
pop
add
pop
addr16
or
sbb
sub
mov
push
push
inc
pop
outsb
mov
xor
jno
mov
dec
fnstenv
jmp
jnp
push
into
lcall
insl
or
push
fidivrs
stos
jp
pop
ficoml
push
adc
push
xor
rep
push
fidivl
nop
decw
mov
stc
stc
test
mov
add
js
xlat
ja,pn
inc
push
push
mov
fimull
sbb
add
mov
and
jns
or
addl
and
cmp
jle
jbe
mov
lahf
in
std
pcmpeqd
fnstenv
aad
stos
call
and
or
cwtl
leave
xchg
mov
and
and
add
xorb
aad
cmp
jns
in
cmp
jae
xchg
pop
loope
or
push
mov
inc
dec
jb
divl
leave
cmp
loop
or
mov
loop
push
sub
mov
pop
mov
pushf
stc
rorb
cmp
pop
xor
mov
enter
jae
jnp
xchg
insb
mov
out
outsb
lea
punpckhbw
push
in
stos
ja
add
mov
andb
out
sub
into
enter
jns
inc
enter
jp
sbbl
xor
data16
loopne
mov
mov
and
fdiv
dec
loope
shr
out
in
pusha
push
ret
jno
sbb
je
mov
adc
inc
dec
push
pop
in
inc
ljmp
les
decl
ja
sub
fisubrl
add
idivl
and
cwtl
jp
inc
gs
das
clc
jo
cwtl
das
mov
clc
aaa
pop
rclb
mov
adc
mov
pop
test
dec
or
cli
inc
stc
in
pop
adc
push
inc
mov
mov
mov
fidivl
xchg
xor
cli
adc
fdiv
jp
cmp
sub
fstps
adc
pop
jnp
mov
lods
add
push
push
add
jne
mov
stc
sub
adc
shl
dec
xchg
mov
or
inc
sub
jge
subl
inc
or
fdivr
push
jmp
cmp
push
aam
cmpsl
inc
xchg
mov
movb
int3
or
cmp
dec
jle
adc
incl
mov
push
loop
cmp
hlt
jmp
sub
mov
sub
adc
xlat
mov
or
in
jne
js
cmp
jo
push
mov
dec
jp
mov
adc
lea
and
pusha
mul
push
fidivs
jnp
fcompl
xor
inc
std
movsl
cmp
adc
popa
push
push
cmp
adc
lods
inc
scas
das
shll
mov
scas
inc
clc
cltd
mov
xchg
out
push
std
cwtl
mov
mov
push
out
cwtl
das
or
sub
jo
pop
hlt
mov
int
push
and
push
jo
test
cmpsb
sti
aad
loopne
xorb
fistpll
sbb
pop
in
lahf
call
add
lods
jne
sub
aas
ficomps
shll
sub
pop
adc
xchg
test
loopne
movsb
aaa
test
cmpsb
cli
outsb
daa
es
mov
enter
sbb
leave
enter
jle
mov
add
or
push
sbbl
mov
mov
sub
test
test
inc
fcoml
push
jo
push
insb
add
xor
push
and
cmpsb
xchg
fxam
mov
out
aad
sub
dec
lods
movsb
adcb
inc
shrb
icebp
ror
mov
sbb
or
in
cmp
pop
outsb
push
stos
inc
jle
push
jmp
inc
mov
jb
xchg
popa
cmc
mov
cmp
inc
insb
das
pop
lock
std
cwtl
das
cs
mov
clc
addr16
xor
shrb
xor
inc
std
lock
and
pusha
xchg
repz
iret
adc
shll
jle
pop
pop
testb
mov
push
jle
xor
dec
mov
inc
jecxz
pop
cmp
pop
jecxz
pop
std
pop
add
push
ljmp
jae
push
or
push
jno
push
shll
jne
aam
popa
push
mov
inc
push
or
xor
push
int
insl
pushl
out
mov
leave
push
xchg
sub
pop
sbb
nop
ljmp
inc
ja
mov
leave
inc
adc
stos
mov
pushf
xor
aas
cltd
pop
bound
push
or
jbe
loopne
fdivrl
add
add
arpl
iret
aas
adc
addr16
pushf
jae
sarb
jecxz
arpl
aas
sahf
jb
aad
sub
scas
rcrl
pop
repz
outsb
xchg
inc
pop
ret
mov
adc
les
sbb
or
adc
andl
inc
inc
aam
rorb
mov
and
mov
leave
mov
je
push
sbb
jne
shrb
xchg
inc
jne
hlt
movsb
js
movsb
mov
leave
sbb
out
sbb
dec
add
iret
js
lock
adc
pushf
rcl
sar
frndint
lcall
mov
stos
and
dec
loop
dec
cmc
adc
inc
scas
dec
stc
es
notl
inc
adc
cmp
aad
dec
xor
jge
lods
mov
fldenv
and
jnp
mov
mov
test
imul
clc
xchg
push
fidivrs
mov
mov
sarl
pusha
mov
xchg
rolb
out
out
and
pop
jb
mov
push
mov
hlt
add
cmp
pop
jmp
push
sub
jbe
icebp
push
movsb
fbstp
jmp
cld
mov
pop
leave
call
daa
outsl
mov
je
ss
add
sbb
push
inc
ds
mov
mov
int3
movsl
adc
movsb
call
in
jg
push
xchg
pop
ret
jg
stc
popf
xchg
mov
jmp
sub
xlat
xchg
aad
xor
data16
push
mov
ja
mov
in
sets
push
push
mov
std
cltd
jae
push
call
pop
icebp
xchg
arpl
xchg
mov
pushf
mov
sub
notb
mov
mov
or
jo
push
sub
push
popf
sbb
push
mov
mov
lods
add
lea
into
cmpsb
cmp
test
and
ss
pop
push
cmpsb
dec
cmp
packsswb
pop
xchg
pop
shrb
xchg
mov
into
jo
lds
cmp
cmc
cmp
in
jg
shrl
mov
outsb
xchg
mov
push
fs
mov
jne
idivl
sub
pop
adc
sbb
popa
mov
int
mov
je
push
cmpsb
push
je
adc
jae
jle
push
mov
loope
jp
mov
mov
xlat
lret
data16
imul
dec
jns
dec
cs
push
nop
lock
and
push
nop
push
and
das
iret
pop
pop
outsl
addl
insl
mov
mov
jnp
dec
insl
movsl
push
push
sarl
and
push
sahf
adc
inc
mov
sti
xchg
xchg
push
fadd
lret
or
outsb
jmp
lcall
xchg
mov
in
jb
xor
jp
or
es
lods
daa
ds
shll
dec
adc
push
sub
aaa
loopne
ret
and
sub
sahf
pop
shl
xchg
sub
and
mov
cmp
mov
icebp
adc
jmp
push
xorl
neg
mov
mov
inc
cld
xchg
add
adc
xor
js
hlt
cmpsl
sbb
testb
xor
jp
jne
stos
mov
int3
or
jmp
push
addr16
addr16
gs
sbb
arpl
mov
sti
or
sbb
fwait
or
pushf
rcl
addr16
or
jae
push
mov
adc
sub
imul
jg
add
mov
push
test
in
pop
xchg
or
lods
jmp
fstp
popf
xor
std
outsl
gs
dec
inc
popa
andl
pop
mov
jp
int
adc
xchg
and
push
cmc
xchg
cld
add
cmp
repnz
mov
mov
frstor
in
rcrl
push
out
lds
inc
lods
repz
sbb
or
sbb
push
or
mov
sbb
jb
and
adc
or
outsb
sub
xor
push
call
mov
pop
add
sbb
cmpsb
data16
push
hlt
mov
mov
cs
movsb
pusha
notl
sub
jle
test
out
xchg
pushf
repz
push
push
movsl
pop
mov
xor
repz
or
inc
inc
push
sub
lds
sub
and
sub
leave
pop
iret
or
push
mov
aaa
pop
mov
sub
mov
xor
es
rclb
repnz
icebp
movsl
pop
sub
mov
xchg
dec
or
ret
jmp
jmp
loopne
push
in
call
cmp
jecxz
jo
dec
fadds
jo
xchg
jnp
mov
into
sbbb
gs
icebp
popf
pop
scas
ljmp
and
ss
add
int
mov
in
mov
scas
push
push
aas
hlt
cltd
jo
fdivs
jne
inc
xor
xor
xchg
dec
dec
pop
push
xchg
inc
outsl
sub
push
mov
fmuls
lods
dec
call
or
jo
xor
mov
pop
pop
incl
cmpsb
shll
test
lahf
jmp
adc
in
and
xchg
push
push
lahf
mov
xchg
add
xor
cmpsb
push
and
inc
aas
cmpsl
jns
gs
pop
pop
add
inc
stos
int3
gs
movsl
lcall
out
jbe
and
mov
cmp
mov
ds
ret
xor
rcl
fwait
js
mov
fcomps
shll
jne
push
sbb
adc
vandnpd
fwait
jbe
fcmovb
inc
or
cmpsl
pop
fcoms
imul
xchg
add
and
test
pop
stc
fs
les
sahf
std
fiadds
popl
and
rcrl
addr16
mov
outsl
sti
daa
test
jle
stc
popf
movsl
push
inc
xchg
xor
movlps
cmpsb
mov
mov
fistpll
out
xor
rcrb
insb
adcb
add
mov
inc
cltd
fidivrl
stos
xor
imul
lcall
dec
pop
imul
fs
sub
add
mov
pop
xor
test
sarl
jo
push
ss
scas
xchg
add
mov
and
imul
sbb
pop
enter
and
sti
cld
push
movsb
arpl
xchg
xor
outsb
push
xchg
or
scas
rcrl
pop
fisttpl
pop
jl
lods
outsb
mov
scas
icebp
movsl
sub
aam
mov
mov
add
fimull
js
ja
shr
adc
sbb
jl
cmp
fsub
jge
mov
out
add
das
test
cli
push
inc
ret
add
mov
xchg
movsl
mov
mov
xchg
hlt
sub
mov
stc
mov
out
les
xor
cmpsl
sub
fbstp
xor
add
cmp
mov
stos
sub
sbb
lock
mov
gs
loope
pop
out
call
pop
sti
sbb
add
in
lock
out
dec
fsubrp
lea
inc
push
mov
or
data16
jge
and
lcall
mov
fwait
cmc
lret
loope
popa
out
push
xor
adc
cli
xlat
mov
test
outsb
mov
pushf
jle
jbe
sub
xchg
and
push
xor
hlt
jns
adc
lahf
int
shlb
iret
int
ret
inc
push
jp
mov
jecxz
fmull
je
sbb
jle
sti
xchg
sbb
mov
sbb
outsb
lahf
andb
adc
xchg
pusha
movsl
mov
dec
push
stc
sub
xor
xor
test
idivb
cmpsb
dec
jp
je
pop
cmpsb
pop
lods
mov
fidivrs
aam
sbb
out
xor
jns
or
fwait
mov
pop
nop
jl
pop
call
dec
inc
fwait
cmp
lahf
pop
and
js
mov
pop
sar
xchg
mov
fldl
repnz
sub
imul
add
loope
repnz
jecxz
mov
push
outsb
cmp
mov
lret
shlb
mov
iret
mov
cs
push
icebp
mov
pop
loopne
or
mov
lock
pop
mov
or
or
icebp
popf
lods
out
pop
cmp
sub
cmp
divb
cmp
jb
call
gs
mov
pop
xor
lea
fcompl
outsl
lret
cmc
lret
xor
dec
in
jge
movsl
mov
insl
nop
daa
pop
dec
aad
xchg
div
push
popf
out
inc
cmc
mov
mov
idivl
test
push
sahf
sarl
pop
icebp
mov
or
push
xor
adc
mov
sti
push
jne
adc
dec
loope
xor
push
or
mov
out
mov
popf
mov
int
dec
int
sbb
inc
add
arpl
popa
sub
inc
mov
xchg
fwait
in
ficompl
paddusw
mov
test
cmp
sti
imul
jge
jge
testl
mov
mov
lret
iret
pop
or
pop
cltd
add
les
rol
out
mov
imul
sbb
iret
andb
adc
pop
jbe
xor
cmp
test
mov
mov
test
leave
jge
cli
in
mov
inc
push
pushf
mov
and
jbe
push
push
mov
gs
inc
adc
les
ret
or
inc
sub
pop
movsb
push
lods
inc
xchg
jl
daa
fiadds
ret
lods
push
dec
mov
xchg
adc
sbbb
xorl
ret
jmp
and
arpl
jno
mov
jecxz
sub
mov
mov
pop
ja
push
jmp
lock
lret
xlat
sub
inc
ss
stos
js
adc
aad
mov
ret
jge
jp
mov
sbb
push
loop
lods
mov
loope
sbb
pop
rcl
or
sbb
test
xchg
rcr
sub
stc
mov
and
lods
jno
or
stos
pop
push
in
imul
mov
in
jno
push
sub
inc
clc
xchg
mov
iret
repz
sub
xchg
sub
addr16
in
sbbl
addr16
or
xor
es
clc
cltd
push
adc
scas
add
ljmp
aaa
and
aas
pop
add
sahf
loopne
imul
adc
xchg
fisttps
in
pop
das
fistpl
or
imul
imul
lock
mov
jns
sbb
mov
addb
cs
nop
lock
bound
movsl
mov
shll
lds
jns
xchg
icebp
cmp
nop
aaa
fld
pop
fmul
aaa
xchg
fs
or
fs
ficoml
pop
push
rolb
push
add
add
das
push
mov
fstpl
sub
mov
fsubs
xlat
mov
xor
push
mov
mov
xor
testl
pop
sub
add
xchg
or
or
mov
testb
clc
lea
inc
sbbl
inc
insl
lahf
pusha
mov
push
or
sarl
and
xchg
inc
sahf
push
aaa
cmp
or
mov
imul
jle
test
and
shlb
and
rorl
push
pop
sbb
inc
mov
push
ljmp
mov
fiaddl
xor
or
fdiv
and
xor
jne
pushf
mov
rclb
push
cli
mov
arpl
test
or
loope
xor
jb
cmp
cmp
stc
aaa
xchg
in
sbb
sub
jp
test
sbb
add
in
test
inc
fldenv
pusha
lahf
clc
mov
daa
outsb
mov
incb
mov
fs
inc
pop
dec
out
mull
mov
mov
fistl
cltd
fists
jae
push
shll
loope
jae
bound
loopne
int
cmp
sbb
push
cmc
insl
mov
pop
in
and
mov
stc
xchg
sub
mov
iret
pop
std
js
lods
jle
out
rcll
pop
mov
dec
pop
inc
aad
cmp
lods
movsb
jg
add
loop
push
adc
call
cli
lret
lahf
jge
sbb
loope
shll
ljmp
or
dec
cmp
push
test
push
and
out
mov
sub
jnp
add
loope
out
int
scas
inc
mov
gs
scas
xchg
jle
push
lahf
rcrl
mov
mov
mov
cwtl
out
subl
rcll
inc
inc
jecxz
rclb
pop
mov
ret
imul
mov
cmp
and
add
pop
mov
int
fucomi
cmp
mov
sbb
jle
add
sbb
iret
sbb
frstor
mov
loopne
and
inc
fildl
adc
inc
in
test
mov
movsl
mov
cld
loope
sub
xor
xchg
adc
into
movsb
imul
cmpsb
push
fdivl
inc
inc
pop
loope
scas
movsl
cmp
mov
jnp
pop
dec
or
aas
adc
push
xacquire
orb
or
sbb
ret
sub
dec
data16
test
and
or
xor
cmp
add
sub
lods
rcrl
jecxz
push
je
push
addr16
fadd
out
push
xor
xor
xchg
ficoms
out
or
sbb
insl
ja
imul
mov
bound
loope
and
jmp
pop
shll
mov
andb
jb
nop
add
sbb
push
dec
and
rcr
loopne
sahf
mov
dec
dec
fmuls
in
push
je
mov
inc
push
leave
int
cmp
or
mov
xchg
popa
jnp
and
pop
push
cmp
sahf
mov
mov
push
es
pop
stos
mov
mov
xor
sub
mov
add
es
jge
or
ja
adc
outsb
dec
testb
sub
push
sbb
mov
xchg
fbstp
push
mov
dec
sub
ss
xchg
adc
jb
ljmp
idivb
mov
cmpsl
pop
xor
inc
lcall
imull
ds
test
mov
subl
xchg
adc
push
jnp
and
cli
ja
cld
repnz
mov
ret
push
inc
sub
cmp
xlat
xchg
fdivl
xchg
sub
sbb
daa
ret
int
push
scas
sbb
sub
cmpsl
sub
int
sbb
call
insl
sbb
push
sbb
pop
mov
adc
or
jmp
int
popf
adcb
cld
lods
mov
xchg
adc
popf
jmp
add
jbe
dec
cmp
push
call
psllw
psraw
push
push
loope
outsl
jne
push
call
inc
xor
mov
xor
int
sub
or
pop
xor
add
clc
or
sbb
push
test
xchg
push
cmc
int
sbb
push
aas
cmp
jo
scas
and
sbb
stc
pop
lahf
sub
not
cmpsb
mov
fldenv
rorl
notl
movsl
into
data16
inc
in
adc
les
insl
call
popa
fsubl
dec
jg
push
cmc
xor
inc
hlt
insl
hlt
dec
call
jnp
mov
mov
pop
jb
cmp
push
inc
adc
fldt
push
leave
xor
adc
pusha
insb
fs
fxch
pusha
iret
scas
repz
lods
jo
aad
xchg
shlb
jp
lock
pop
mov
push
scas
or
sbb
mulb
push
push
sahf
inc
sahf
dec
mov
xlat
jo
inc
fmuls
ret
pop
insl
jmp
out
test
popa
xlat
ds
add
seta
xchg
out
inc
test
jns
lea
icebp
jg
pop
lods
sbb
adc
add
mov
lock
jns
add
sbb
inc
ds
jecxz
and
mov
inc
insl
xor
popa
jmp
fidivrl
lods
int3
arpl
fldl
jl
pop
scas
inc
movsb
sub
aam
int
std
cmc
fisttps
sbb
xchg
ret
shl
xchg
xchg
in
push
test
pushf
xor
test
push
in
jmp
add
cmpsb
xchg
push
rcll
in
jl
or
cs
shr
inc
cltd
add
push
pop
jp
mov
xor
filds
lcall
popa
xor
dec
outsb
or
imul
cmp
and
dec
test
sahf
and
cltd
stc
mov
dec
or
ljmp
mov
arpl
jmp
xchg
movsb
cmp
inc
xchg
les
lret
inc
aam
shll
add
mov
mov
mov
fdivs
mov
mov
outsl
cmpsb
ds
push
mov
ret
js
rcr
lds
aad
inc
lret
out
fwait
or
pusha
push
imul
xchg
ja
mov
mov
xor
sub
fwait
jle
fs
fwait
rcrl
shl
jno
mov
mov
loopne
movsb
mov
lret
loop
mov
cs
loope
jns
mull
pop
xor
mov
dec
popa
cli
aas
out
shrb
enter
sahf
jnp,pn
jecxz
cmp
addr16
mov
lcall
push
mov
roll
stos
fisubrl
lret
je
movsl
cmpb
pop
mov
add
cmpsb
stos
scas
cmp
test
pop
das
lods
and
iret
mov
movsl
sahf
and
inc
test
mov
loopne
push
idivb
pop
or
mov
movl
dec
add
mov
dec
cmc
dec
je
xor
inc
sub
jo
sub
lock
lock
push
scas
and
inc
call
mov
stos
pop
cmp
cmp
mov
cmp
mov
dec
lret
not
mov
push
adc
sti
push
sub
jp
xor
in
out
jo
sub
in
pop
mov
repnz
jmp
push
scas
add
xor
push
xor
mov
xorl
cmp
int3
inc
add
fstpt
mov
adcb
and
xor
insb
mov
mov
jne
fildll
faddl
and
data16
pop
cmp
dec
add
add
mov
scas
loop
add
jecxz
cli
push
daa
cmp
ljmp
outsl
clc
jae
mov
stc
out
cmp
mov
test
mov
js
adc
fisubs
stc
cmp
jp
pop
scas
rolb
stc
nop
xor
fcmovnb
pop
addl
mov
cmp
sbb
sbb
inc
in
addr16
mov
jle
incb
in
sbb
loop
std
fstps
or
ficomps
sub
add
dec
test
jl
mov
stc
sbb
ret
mov
incb
ret
mov
cmpsb
ficoms
push
ss
aaa
cmp
movsl
test
jb
or
pop
loop
insb
push
cmovnp
dec
add
or
lock
out
pop
sbb
or
aam
xor
arpl
pop
jb
js
out
pop
sbb
addl
push
stos
repnz
or
mov
xor
cmp
pop
pop
adc
jmp
fucomp
insb
loopne
adc
jnp
fs
sub
and
mov
sub
dec
decl
mov
mov
dec
hlt
or
push
sub
dec
jb
enter
mov
jge
mov
inc
rorl
in
mov
out
fwait
jg
inc
imul
pop
arpl
lret
mov
mov
je
sarl
sub
mov
mov
fisttps
nop
fxch
and
add
mov
or
cmp
cltd
je
mov
jle
and
sub
loop
push
es
inc
push
inc
arpl
gs
jb
push
mov
adc
adc
sahf
and
jno
scas
pop
mov
nop
sbb
ds
cmp
xor
arpl
movsl
sbb
mov
pop
ja
jg
mov
in
cmp
scas
hlt
xor
jb
out
push
or
adc
or
and
das
push
nop
insb
adc
cmc
cmc
mov
aas
mov
int
mov
jmp
push
mov
cltd
in
or
faddp
inc
push
notl
out
pop
fmuls
or
cmpsb
dec
adc
lcall
add
inc
cltd
imul
mov
icebp
nop
fucom
in
fwait
adc
and
xor
ret
and
lret
cld
ret
aam
sbb
movsl
dec
push
mov
out
pop
sub
dec
or
mov
data16
push
inc
std
adc
test
push
pop
cmp
jmp
nop
test
hlt
adc
and
sti
data16
fisubl
push
push
cmc
mov
sub
and
inc
add
sub
lret
testb
jl
xchg
or
jl
xchg
cmp
gs
lds
aaa
cwtl
in
add
xor
sub
arpl
mov
fldl
and
push
mov
pop
mov
xchg
add
add
ss
test
and
mov
lret
iret
shl
out
sbb
push
sub
dec
fsubr
lret
arpl
cmpsl
dec
add
cltd
cwtl
mov
xor
dec
mov
loope
dec
adc
mov
cmp
jbe
cs
imul
nop
mov
push
imul
scas
mov
jb
stos
repz
mov
cli
cmc
insb
push
in
lea
lock
lcall
rclb
xchg
pop
xor
das
jne
aad
or
mov
pop
scas
add
xor
cwtl
aad
data16
sbb
test
nop
sbb
push
sarl
jle
repnz
sbbl
inc
mov
in
aam
in
mov
add
add
mov
in
xor
test
mov
mov
jns
insb
sahf
lods
les
cmp
mov
jb
sub
popa
cltd
vandnps
fildll
aaa
mov
ss
adc
call
sahf
lock
mov
mov
sbb
ret
addr16
or
test
dec
xor
testl
push
push
sub
dec
shll
inc
fidivs
and
lahf
sbb
xor
sbb
loop
mov
pop
adc
add
cwtl
mov
fstpl
jmp
scas
mov
xchg
inc
cmp
jns
xchg
push
cwtl
mov
pop
jne
ret
cli
xor
std
jecxz
xor
fadds
jecxz
push
push
add
dec
mov
inc
xlat
xor
mov
adc
pop
lcall
inc
push
add
inc
arpl
jo
jp
pop
mov
pop
mov
mov
sub
jle
icebp
mov
mov
and
xchg
pop
inc
cmp
int3
jp
fstpt
clc
in
xchg
mov
dec
inc
and
icebp
ds
es
mov
scas
lods
inc
loope
mov
add
nop
out
ret
mov
ret
mov
fcompl
inc
inc
out
cld
adc
imul
stos
loope
movsb
loope,pt
jo
mov
jmp
jbe
aam
mov
dec
shlb
out
insb
pop
sub
lea
ficompl
inc
mov
lcall
sahf
or
mov
sbb
repnz
icebp
in
xlat
push
inc
or
jns
xor
pop
pop
push
stos
inc
int3
xor
xor
das
add
cmp
xlat
out
or
loop
xor
das
xchg
pop
loop
or
mov
mov
mov
loop
fucomip
insl
and
mov
mov
inc
and
stos
xchg
dec
push
xor
fwait
pop
xchg
repz
daa
and
pop
jmp
pop
pop
dec
cmp
push
inc
ds
dec
js
mov
cltd
shrb
clc
out
sahf
sub
jmp
mov
movsl
add
jle
cmp
test
adc
loop
push
imul
paddw
jns
and
sub
stos
ret
pop
adc
jp
mov
mov
push
shrl
lea
xor
xor
sarb
push
push
in
and
dec
imul
in
cs
aaa
sub
test
outsb
jge
inc
lcall
cmp
mov
mov
xor
cs
je
mov
testl
loopne
aas
push
lret
sti
std
scas
es
cwtl
push
push
jbe
jbe
insb
pop
imul
iret
hlt
jbe
loope
je
jg
pop
add
test
es
lods
xor
rolb
xor
stos
aad
shlb
xchg
loope
push
adc
fists
movsb
inc
or
sub
sub
repz
or
sbb
lcall
js
mov
inc
frstor
aaa
shlb
add
loopne
aas
imul
cwtl
data16
movsl
push
sbb
cmp
jp
int3
pop
sub
pop
insl
insb
fistps
sbb
mov
ret
test
xchg
sub
iret
add
or
pop
in
dec
and
inc
psllw
and
mov
mov
testb
addr16
cwtl
imul
dec
mov
in
sahf
sbb
in
dec
add
lods
out
mov
fst
insl
mov
pop
in
lock
or
lahf
and
jae
pop
movsl
or
push
andb
pop
cmp
fwait
mov
fnstenv
lahf
or
outsl
divl
jp
jo
cli
jne
cmpsl
cwtl
das
fsts
mov
daa
es
dec
cltd
negl
xchg
outsl
push
jae
scas
lds
cmc
popa
inc
imul
test
xchg
pop
outsl
or
je
int
ds
jg
dec
test
sarb
rclb
nop
cli
test
lret
jnp
test
lret
dec
repz
in
or
or
imul
fadds
mov
mov
add
fcompl
push
in
cmpsl
push
mov
pop
mov
mov
inc
mov
mov
inc
repnz
adc
sub
add
jmp
or
cmp
dec
dec
mov
lock
mov
or
leave
pop
sti
fwait
pop
inc
movsb
push
jb
mov
clc
xchg
push
adc
lret
fadds
cmp
jmp
adc
mov
mov
fisubl
outsb
adc
or
repz
push
mov
mov
mov
mov
in
inc
fidivl
dec
and
add
cmp
fxrstor
imul
sbb
data16
mov
xchg
inc
adc
jge
fsubrs
test
pop
lods
cmp
inc
jns
dec
dec
fwait
test
dec
loop
dec
or
mov
pop
movsb
pusha
lea
ret
out
int3
push
je
lcall
pop
pop
mov
lods
test
lret
lret
lods
mov
fyl2x
aas
repz
jecxz
inc
test
mov
push
xlat
xchg
or
sbb
fstps
std
test
popa
test
push
cmpsb
sub
sbb
ret
push
add
cmp
pushf
repnz
push
sbbl
out
mov
xor
outsb
pop
addr16
iret
sub
mov
insb
push
fs
mov
in
pop
inc
dec
fmulp
imul
stos
fsubrp
aad
ds
testb
dec
leave
in
hlt
sbb
xor
leave
mov
cwtl
or
inc
mov
rolb
lret
gs
push
out
lds
addb
mov
cltd
xchg
dec
aaa
jmp
dec
pop
aad
fcomp
ret
test
loope
or
push
mov
enter
aaa
sbb
repz
and
inc
fldcw
dec
lock
into
sub
and
mov
jp
fnstcw
add
int3
loope
mov
push
xor
mov
rorb
jnp
inc
dec
pop
lock
std
addr16
ficompl
arpl
pop
mov
adc
test
mov
or
pop
push
cmpsb
cmp
and
xchg
adc
sbb
mov
rorl
cmpsb
std
push
cmp
adc
sub
ret
les
add
mov
iret
push
stos
sub
pop
lcall
cli
sub
sub
in
fcmovnb
jns
testl
adc
inc
dec
adc
imul
ud2
lds
pop
push
out
out
jnp
adc
sti
aad
and
idivb
in
adcb
dec
data16
xchg
mov
in
popf
xlat
pop
js
jle
and
mov
aam
stos
mov
and
mov
and
ss
stos
jns
and
xor
push
data16
mov
add
add
mov
int3
or
cmpl
mov
fdivrs
or
call
jnp
outsb
pushf
xchg
xor
testb
mov
mov
xchg
out
stos
fidivrl
xor
or
scas
out
scas
testl
gs
fidivrs
cli
adc
das
stos
in
add
or
fsubrs
or
test
fsubrl
ds
pop
testb
jp
cmpsl
ds
aam
cmpsb
mov
fdivs
int
test
and
jns
jno
dec
ror
ja
loop
jg
xor
pop
std
mov
mov
cwtl
pop
xor
jg
mov
cmpb
pop
aaa
dec
cmp
rclb
dec
out
jle
popa
out
outsb
insl
test
mov
mov
enter
xlat
inc
test
fcompl
mov
cmp
mov
dec
xor
pop
ret
xchg
fdiv
lret
in
mov
push
into
gs
ja
sar
xchg
and
insl
jnp
int3
mov
js
leave
mov
xchg
inc
dec
scas
cli
xchg
loope
movsb
mulb
xchg
adc
jg
lret
push
xchg
pop
or
ja
arpl
rclb
xor
push
dec
or
mov
je
cmp
add
sbb
adc
repz
dec
adc
ja
icebp
mov
mov
mov
mov
fwait
les
push
aas
xchg
sub
fidivrl
and
es
loopne
pushl
clc
sbbb
shlb
int
in
ja
mov
add
xor
out
in
lods
inc
sarb
lea
shlb
mov
out
fnstsw
or
mov
call
ds
pusha
scas
les
shl
jo
pop
rcr
insl
mov
mov
out
cwtl
xchg
sub
sub
xchg
dec
sub
out
mov
jmp
sub
add
out
fisubs
sbb
and
mov
daa
or
jns
mov
in
stc
aaa
int3
in
cmc
push
sub
dec
inc
mov
push
aam
push
imul
or
xchg
or
shlb
add
rcrb
xchg
repz
xor
sub
xlat
push
jle
sbb
jo
insl
inc
in
pushf
mull
mov
jb
sbb
int
int3
xchg
call
sarb
je
repnz
sbbl
icebp
cli
jns
fdiv
pop
loop
std
xchg
pop
dec
push
insl
xor
add
push
popa
addb
ja
insb
push
outsb
je
mov
push
arpl
popf
das
push
icebp
aad
into
popf
jnp
pop
dec
stos
and
std
aam
ds
mull
rorl
add
pop
fisttps
data16
loopne
stos
mov
fadds
in
stos
xchg
jecxz
push
lahf
mov
roll
add
fs
stos
and
inc
mov
jo
lret
popa
mov
cltd
mov
jbe
adc
mov
xor
dec
iret
sbb
popa
add
arpl
test
push
shrl
cld
sub
jbe
and
nop
dec
inc
call
push
push
sbb
mov
jp
sub
inc
jns
and
andl
sbb
shl
cmp
jmp
mov
ret
xor
sub
andb
popa
imul
xor
xchg
rcrb
mov
mov
fisubrl
xlat
outsl
sub
sbbl
out
jb
push
mov
xlat
sub
sbbl
mov
and
or
ds
insb
jmp
ljmp
inc
fmull
adc
fdivrs
xchg
mov
fnstenv
aad
xlat
out
inc
mov
add
pop
or
push
jb
lcall
arpl
lock
out
cmpsl
push
andl
test
pop
jmp
dec
sti
jne
jecxz
mov
aaa
mov
mov
lgs
ss
fimull
scas
or
sbb
mov
test
add
sahf
cmpsl
pusha
cmpsl
pop
dec
pop
dec
mov
insb
rorb
aaa
fcompl
sbb
cmc
pop
mov
mov
sbb
fisubrl
push
xor
push
cmp
popf
jns
es
lds
cmp
pop
data16
pushf
mov
ss
mov
xchg
pop
insl
push
lahf
xchg
lods
and
mov
repnz
push
or
loop
or
fnstsw
mov
int
test
fidivs
clc
jae
sub
or
into
ficomps
mov
cmp
imull
mov
and
mov
jecxz
mov
repnz
into
fnstsw
mov
test
push
dec
inc
sub
stc
pop
mov
sub
pop
leave
add
mov
lods
and
pop
arpl
and
and
ds
adc
cmc
loop
mov
stc
adc
xchg
mov
mov
jle
or
and
push
jle
or
daa
mov
pop
mov
push
stos
test
adc
ret
cmp
xchg
sub
loope
icebp
mov
mov
loopne
or
pop
bound
stos
mov
pop
sarl
mov
or
mov
pop
mov
or
aaa
jg
rcrb
xchg
ss
jmp
xchg
push
sbb
sub
mov
pop
fs
cwtl
stos
mov
sbb
lret
popa
fdivrl
int3
test
mov
fistpl
hlt
push
jbe
mulb
mov
lods
sub
or
es
test
push
lods
and
inc
mov
stos
inc
inc
shlb
in
sub
jbe
sbb
jae
and
mov
mov
lahf
arpl
push
in
out
lock
mov
iret
loop
pop
test
aad
cltd
push
loope
sbb
orb
out
inc
mov
mov
push
dec
jle
sbbb
xor
mov
xor
mov
movsl
ret
pushf
es
xchg
stos
mov
push
mov
arpl
adc
pop
mov
cmpsl
pop
insl
sbb
push
lcall
push
ljmp
jmp
bound
pop
sahf
pop
pop
xor
clc
js,pt
daa
xchg
je
pushf
lock
in
popa
cmp
xchg
out
bound
xor
xchg
mov
call
jbe
jecxz
lods
mov
and
mov
lcall
out
sub
daa
or
aaa
repnz
or
adc
cvtpi2ps
and
fwait
sub
pop
rcll
les
lods
xchg
mov
push
adc
sub
insb
mov
fdivl
lret
adc
cmp
insl
fs
adc
icebp
and
push
push
sbb
add
jbe
aad
or
stos
das
shr
xor
pop
repz
aam
mov
movsl
lahf
rcr
imul
sti
or
pop
dec
scas
and
popf
ljmp
insb
push
mov
mov
dec
cmp
cmp
add
and
fs
sub
adc
sbb
sti
dec
xor
in
sbb
insl
cmp
xchg
dec
movsb
cmp
mov
popf
popa
dec
enter
jae
sub
popa
mov
loop
out
ja
and
pusha
mov
std
loopne
sub
callw
dec
pop
mov
mov
and
nop
cmp
cld
in
cmpsb
sahf
or
or
pop
mov
lahf
jmp
or
cmp
add
sub
push
xchg
dec
fwait
test
sub
je
jle
fsubs
jns
bound
xchg
daa
mov
jp
nop
ss
nop
mov
push
or
push
popf
daa
cmp
inc
shrl
repz
push
or
jecxz
mov
push
lock
mov
sti
jbe
std
adc
xor
lea
inc
call
or
idivb
fdivrl
mov
mov
adc
testl
or
push
rorb
stos
pop
push
fisubrl
adc
out
pushf
cmpsl
cmp
ljmp
xor
stos
mov
push
pop
cmc
adcl
add
fcmove
and
push
mov
cmp
into
inc
fcos
pop
jmp
ret
xchg
mov
scas
xchg
icebp
dec
call
or
xor
fwait
and
push
fdiv
xchg
pop
push
sbb
jl
scas
xor
pop
iret
fstl
out
and
xchg
sub
fwait
sti
mov
dec
divl
cmpsl
mov
and
adc
in
shrl
and
icebp
pop
lret
and
dec
icebp
add
dec
andb
aam
push
inc
lret
daa
push
xor
ds
test
aad
mov
xor
pop
jecxz
cwtl
aaa
push
leave
push
pop
testb
push
jmp
pop
sub
push
inc
jb
cwtl
jnp
aad
mov
jne
adc
push
outsb
push
or
pop
push
xchg
cltd
push
repnz
pop
cltd
pop
xor
sbb
adc
push
add
daa
cmpsb
sbb
push
pop
icebp
aaa
in
jg
jmp
stos
lea
aam
dec
outsb
jmp
inc
inc
mov
xor
or
pushf
mov
pop
cld
fldenv
std
sbbl
stos
stc
int
cmp
int3
mov
and
pop
jne
add
adc
ja
gs
enter
movlhps
mov
sbb
inc
add
inc
in
out
dec
pop
aaa
fisubl
cli
into
sbb
sar
jle
push
jmp
and
in
inc
adc
cli
lcall
and
popa
cmp
es
xor
aas
jnp
les
int
and
ror
push
aaa
jae
aad
mov
test
test
mov
aam
popa
jmp
sbb
mov
or
inc
sub
mov
sarl
push
and
repz
rolb
test
jmp
inc
fnsave
lret
test
add
pop
cmp
add
pop
sbb
or
pushf
stos
cmp
repnz
call
xchg
out
cmp
leave
notl
mov
sbb
inc
insl
nop
ss
rcll
popf
mov
in
inc
in
push
incl
sbb
jp
adc
subb
repz
push
insb
mov
imul
adc
sbbl
scas
sbb
aaa
ret
hlt
pop
fcmove
jns
gs
jae
add
dec
mov
mov
clc
daa
div
pusha
aas
push
pop
jae
push
aaa
mov
aas
jno
test
push
sub
cwtl
test
clc
jae
cs
mov
cmpsb
out
addl
or
xchg
add
fnstenv
mov
mov
loope
mov
int
xor
and
adc
push
jge
pop
and
into
add
cltd
in
mov
xor
mov
xchg
imul
int3
nop
aas
push
clc
aaa
mov
and
pop
sub
shl
jns
mov
lret
movsl
mov
sub
call
pusha
xor
out
mov
adc
jecxz
test
sar
imull
xor
mov
pop
addr16
add
repnz
rcrb
shll
lods
inc
gs
mov
push
sbb
cmpsl
sub
icebp
dec
test
inc
out
orl
push
mov
and
inc
and
loopne
les
mov
popa
xor
ror
hlt
mov
shll
inc
mov
aas
push
mov
add
or
cmp
adc
jle
pop
scas
sub
push
js
add
and
stos
xchg
inc
pop
in
jae
xor
aad
out
bound
jle
jbe
push
push
fcomp
das
mov
cli
movsl
outsb
cli
roll
push
mov
dec
outsl
push
repnz
cmpsl
ret
ficomps
cs
js
add
cli
push
mov
lret
daa
lret
aaa
stos
pop
lret
cmp
sub
aaa
frstor
push
out
inc
mov
std
movsl
ljmp
mov
push
in
jmp
mov
inc
mov
or
es
sar
nop
daa
sub
dec
dec
pop
lret
ret
daa
gs
push
xchg
outsl
lcall
sbb
loopne
test
addr16
loopne
popa
adc
cmp
jno
fs
add
fwait
stos
push
sub
mov
repnz
out
lret
bound
jne
js
jge
mov
xchg
xchg
leave
ss
sub
imul
sahf
lods
mov
pop
mov
xor
in
adc
out
test
ss
cmpsl
or
pushf
dec
movsb
xor
popa
shll
jnp
jb,pn
inc
mov
jg
xchg
es
sub
mov
mov
call
or
aas
cmpsb
sub
push
cmc
dec
adc
jae
add
repz
dec
or
xor
mov
xchg
push
sbbl
insl
add
notb
test
inc
cmpsb
jns
add
mov
adc
dec
pop
vpmulhw
add
inc
rcll
mov
or
dec
cmp
inc
imul
cmc
cwtl
mov
fdivrp
lods
pop
cli
ljmp
lret
ficoms
iret
xor
stos
pop
lcall
sub
add
fcoml
mov
gs
pop
movsb
xchg
loope
jp
mov
loop
stos
adc
xor
jne
iret
push
jecxz
jbe
imul
cwtl
loope
jge
nop
mov
lret
aad
adc
push
pop
loope
ss
jg
mov
fidivl
mov
mov
pusha
sti
testb
movsl
xchg
rcll
xchg
fsubr
test
rorl
sub
lcall
cmpsb
sbb
test
cmp
xchg
mov
pop
test
aas
lahf
repz
js
lock
xchg
ljmp
push
or
loopne
lret
mov
and
sbb
dec
clc
aaa
into
sub
jmp
fdivr
pop
mov
andb
xchg
lock
in
shll
add
cmpsb
and
push
lock
adc
adc
adc
adc
gs
movsb
repz
sti
push
mov
cmc
adc
aas
arpl
sbb
outsb
sbb
das
fimull
insl
out
xchg
cmp
pop
repnz
mov
lock
push
inc
in
mov
pushf
pop
je
in
das
enter
mov
fistpll
push
aam
dec
pop
repnz
sbb
mov
int
lds
movsb
repnz
scas
das
mov
in
or
dec
test
push
sbb
push
sbbb
xchg
incl
sbb
inc
and
jg
test
fisubs
xor
xchg
out
lcall
fdivrp
sub
jg
lret
mov
inc
dec
dec
stc
sub
push
scas
cmc
mov
jb
mov
xchg
fcomip
add
mov
in
pusha
rorl
xor
test
cmp
inc
pop
out
add
popf
cld
mov
pop
imul
dec
push
rorl
xchg
testb
jae
addr16
fwait
imul
jmp
stos
push
xchg
mov
pop
clc
xor
jnp
cs
es
mov
sbb
test
sub
inc
cmc
popa
ss
push
lods
xlat
push
push
xor
or
arpl
push
xor
mov
loopne
fs
push
sbb
frstor
cltd
sub
loope
push
insl
in
sbb
je
cmp
stos
sbbl
push
pusha
jnp
or
cltd
es
popa
push
sub
gs
mov
sbb
rclb
adc
xchg
test
xor
clc
push
ja
cli
pop
dec
imul
cmp
das
imul
lods
inc
fucom
mov
into
xor
xor
insl
xchg
adc
pop
outsl
pop
aaa
les
push
inc
sub
inc
or
test
adcl
popf
jno
ljmp
mov
lea
jnp
test
js
push
ret
fimuls
xchg
jo
loopne
pop
push
shl
jo
or
shlb
pop
imul
insb
xchg
mov
fs
xchg
jne
mov
ret
rclb
adcl
dec
pushf
hlt
ret
dec
sarb
sub
xchg
push
push
int
xor
cltd
cmpsl
adc
aam
fsts
pop
ljmp
scas
lea
mov
and
xchg
mov
js
cld
adc
inc
repnz
add
lods
inc
leave
jecxz
mov
outsl
rcrb
pop
mov
repnz
sbb
je
clc
jns
in
dec
xchg
jp
aad
mov
call
mov
inc
pop
sbb
scas
aaa
mov
add
cli
or
mov
xchg
out
popf
lcall
mov
push
ss
ljmp
jne
idiv
push
push
sbb
icebp
addr16
lods
into
icebp
icebp
enter
lret
stc
mov
adcb
or
and
out
fisttps
and
pop
outsb
mov
pop
movsb
pop
push
ljmp
xor
rclb
and
repz
loope
dec
xchg
lods
add
fstps
mov
mov
lea
add
lahf
jmp
and
pop
xor
sti
mov
cmpsl
das
andl
fmulp
fcompl
push
push
inc
mov
stos
dec
outsl
push
sbb
mov
shlb
xchg
cli
stos
rcll
dec
cwtl
sub
push
and
ret
mov
xchg
xchg
dec
add
mov
xlat
xchg
mov
inc
sub
xchg
jl
call
or
pop
sub
fiadds
divl
jo
xor
inc
int3
mov
jle
sub
sbb
mov
in
imul
aad
push
pop
fbstp
and
xchg
mov
loopne
stos
aam
mov
mov
fldcw
cld
das
cli
lods
jmp
aas
xor
popa
mov
xchg
add
lock
aaa
mov
push
and
ret
int
enter
sti
aam
jp
hlt
aad
add
xchg
and
in
fidivl
pop
jle
int
jg
out
out
pushf
mov
shll
or
adc
dec
cmpsb
das
addr16
or
sub
ja
cld
insb
fildll
leave
or
or
sub
iret
xchg
mov
cmp
enter
push
imul
inc
jo
cwtl
mov
dec
mov
je
pop
mov
xchg
push
frstor
popf
push
imul
into
sbb
cli
inc
and
jb
pop
int3
sub
sbb
push
push
mov
pop
and
cmp
cltd
sub
idivb
inc
xchg
repnz
dec
mov
sti
cmp
lret
pop
popl
lods
jb
push
call
jo
sahf
clc
push
xchg
mov
add
fsubl
cmpsl
ds
mov
lds
inc
outsl
jge
xchg
push
add
out
push
call
fstl
jo
ja
call
shrl
in
and
and
jno
shll
mov
jno
ljmp
fcmovne
mov
ficompl
stc
nop
mov
js
movsl
insl
enter
xchg
jne
push
into
fnsave
mov
imul
in
dec
cmpsl
lds
cmp
ret
mov
fbld
sub
adc
push
cmp
sub
cmc
insb
mov
andl
movsb
jge
fwait
sub
mov
int
ficoms
jno
daa
sub
xorl
xlat
outsb
push
cwtl
test
sbb
repnz
imul
pop
pop
int3
popa
mov
pop
cmp
mulb
hlt
mov
sub
jp
mov
js
and
push
out
clc
lret
and
ja
sub
pop
inc
cmp
fiaddl
cmp
jne
cwtl
cmp
int
cmp
jecxz
sbb
and
pop
jecxz
shlb
ret
gs
add
xchg
push
stos
popa
push
call
aad
outsl
push
shl
mov
xchg
cmp
and
test
out
xchg
inc
push
or
cmp
ja
push
sub
test
or
movsb
inc
popa
xchg
mov
xor
leave
inc
sbb
dec
mov
mov
mov
pop
incb
sahf
or
cmpsb
test
or
lcall
xchg
sub
cmpsb
repz
sti
sbb
mov
sbb
jp
sbbb
cwtl
lea
xor
push
pushw
call
cmp
pop
into
sub
scas
mov
loopne
xchg
pop
sbb
xchg
mov
sub
mov
insb
outsb
sub
movsl
cwtl
mov
es
or
inc
lahf
jo
jmp
lds
sbb
call
lea
call
sti
gs
xorb
test
popa
clc
outsb
jg
mov
out
je
notl
xor
add
dec
je
clc
cmp
gs
mov
shlb
test
mov
ret
iret
pop
cmp
int
nop
cmpsb
test
mov
dec
inc
fiaddl
mov
fmull
sub
ja
cmp
xlat
mov
cltd
mov
outsb
xchg
insb
icebp
mov
or
push
aad
and
inc
out
notl
adc
stc
test
mov
dec
sbb
cmp
rol
sbb
cmc
repz
loope
xor
add
out
dec
loop
aad
ds
fdivl
js
sbb
xor
push
sbb
dec
je
dec
sbbb
hlt
dec
mov
fcoms
mov
inc
test
dec
jo
cmc
cs
push
daa
inc
cmp
pop
call
and
repz
fimull
scas
mov
lock
leave
lahf
xor
in
out
add
out
nop
mov
sarl
mov
sbb
push
mov
push
aas
mov
cs
dec
pusha
adc
nop
jg
or
mov
jo
in
xor
hlt
push
cmpsb
jg
mov
xchg
sub
ret
daa
pop
imul
add
sbb
out
lret
dec
roll
shr
jg
aam
scas
nop
sub
popf
pop
in
adc
xchg
cmp
or
jb
jnp
data16
lret
xchg
ja
lds
xchg
pusha
jge
repz
hlt
push
or
push
into
es
int3
xor
xchg
sub
pop
cmp
fwait
dec
in
sbb
imul
cmp
outsb
les
adc
jmp
jbe
cmp
stos
and
loop
jae
out
pushl
dec
adc
jp
sub
gs
xchg
les
jno
xchg
es
into
fdiv
inc
sbb
in
ret
xor
negb
or
popa
xor
out
daa
inc
rorl
test
xchg
lea
pop
mov
mov
dec
dec
stos
push
rclb
int3
lret
xor
les
cli
in
mov
push
sbb
insl
dec
sub
out
ljmp
push
rdtsc
enter
inc
test
lret
mul
add
inc
enter
sahf
mov
daa
sbb
xor
xchg
pop
out
jge
xor
outsb
ss
mov
mov
sub
xor
decl
mov
data16
rcrl
pop
repnz
xor
js
in
das
repz
scas
and
jo
add
cmc
ret
mov
sbb
mov
or
dec
das
lods
cltd
or
push
sarb
jne
scas
movsl
outsb
adc
imul
aas
mov
std
xchg
or
xor
sbb
mov
outsb
inc
arpl
mov
in
lcall
xor
push
cmp
leave
ret
sbb
addr16
mov
pop
jns
es
iret
sub
mov
and
mov
cmp
shlb
xchg
fs
xchg
or
sbb
orb
pop
cmp
fdiv
add
or
out
ja
mov
sbbl
or
imul
es
inc
gs
xor
aas
out
pop
adc
pop
test
cmpsl
cmp
aaa
dec
pop
out
push
cmp
push
mov
fisttps
aas
adc
pop
lods
lret
xchg
mov
jecxz
outsb
add
sti
cltd
das
fnstenv
mov
shl
inc
xchg
adc
xlat
subl
lret
pop
sub
push
movsb
adc
pop
dec
and
sub
call
sti
rol
push
pop
inc
and
leave
cmp
ds
pop
aam
inc
scas
popa
cli
sbb
jmp
dec
push
ret
fisubrl
jno
lret
mov
jecxz
cmp
mov
js
pop
adcl
cmp
outsl
loop
shrl
adc
test
xor
in
adc
push
int
lods
aaa
andb
push
jo
sub
testl
rorl
test
icebp
sbbl
push
rcrl
fwait
or
inc
lcall
and
js
loope
ds
test
orl
xchg
mov
and
rorl
push
test
fdivl
cmpsl
mov
fcomps
fwait
push
cmpsl
out
mov
sbb
scas
aad
lahf
pop
jp
aam
push
sahf
sbbb
pop
addr16
pop
std
xchg
std
push
out
scas
sbb
mov
fsubl
push
or
mov
dec
jbe
mov
outsl
push
or
sub
xchg
data16
mulb
pop
out
push
cmpsl
sub
jecxz
xchg
lea
js
cs
sbb
push
adc
sub
cmp
xor
mov
or
cmp
push
loop
push
mov
push
movsl
icebp
loopne
aaa
lcall
sub
stos
pop
ja
cmpsl
cmp
not
lea
movsb
dec
mov
inc
mov
cmpsl
xchg
jb
mov
stc
xchg
sbb
outsb
push
mov
push
jge
aam
fs
je
int
jmp
outsl
in
inc
push
in
fisttpl
mov
dec
fldenv
mov
out
jns
push
fstpl
xor
or
and
out
pushf
cmpsl
cmp
ficoms
lds
imul
mov
js
icebp
fiadds
lcall
and
add
and
cmp
and
scas
fwait
aas
lret
adc
cmp
inc
dec
dec
call
ja
std
iret
jp
sbb
and
xchg
cli
push
icebp
packuswb
xchg
std
mov
sbb
ret
and
iret
imul
imul
inc
loopne
sahf
inc
add
ret
je
addl
xorl
lea
pop
lcall
push
cmp
mov
sub
in
enter
push
jmp
out
dec
and
and
pop
jbe
xchg
or
sub
or
cmc
xchg
mov
out
stos
stos
or
adcb
fsubr
cmpsl
cmp
lahf
xchg
movsb
icebp
mov
or
or
jns
lock
inc
fidivrl
fsubl
ljmp
addr16
test
faddp
pop
hlt
rcrb
sub
mov
push
daa
inc
pop
add
pop
mov
lcall
push
mov
movsl
fcmovnbe
fildl
in
mov
xchg
push
ljmp
dec
nop
xchg
xor
insl
popa
xor
and
inc
sub
push
pop
dec
lcall
int
and
cmp
insb
popf
dec
stos
inc
dec
ficompl
push
push
pusha
popf
sub
jge
in
out
outsb
es
pop
or
mov
cmp
jecxz
cmp
ret
sbb
lods
rcl
jmp
dec
test
or
sahf
push
js
jb
iret
in
dec
into
in
add
test
fs
test
add
mov
xchg
mul
mov
mov
xchg
sbb
push
orl
and
inc
fwait
into
or
inc
cltd
fisttpl
sub
scas
mov
int3
cmpsb
mov
mov
mov
pop
mov
dec
lods
inc
shrb
mov
push
mov
pushf
jae
inc
cmp
fbld
xrelease
and
xor
fsts
mov
sub
lods
jg
mov
jns
push
dec
pop
mov
xchg
lahf
jb
cwtl
inc
push
dec
dec
fucom
js
iret
lds
push
es
fs
mov
pop
ja
xor
pop
adc
orb
jnp
out
xor
xor
inc
or
inc
jmp
push
xor
or
cmp
push
or
jmp
xchg
fdivs
pushf
repz
mov
cs
jns
pop
push
mov
test
sub
stc
outsl
ret
push
ret
std
cld
mov
test
mov
pop
loop
clc
xor
xchg
cmp
push
cld
xchg
test
jno
and
dec
push
jmp
aaa
and
mov
fldcw
movsb
cld
addr16
sub
jp
ljmp
xor
pop
pop
outsl
jb
add
aaa
pop
push
and
int
roll
repnz
loopne
mov
bound
je
and
cmp
mov
dec
outsb
cltd
les
rcl
roll
out
cld
mov
fidivrl
dec
daa
or
sub
xchg
adc
add
lds
mov
bts
jle
xchg
lds
mov
lret
pop
inc
bound
ljmp
or
push
repnz
lds
jbe
xchg
inc
adc
pop
std
mov
inc
pop
enter
test
and
stos
xchg
sub
shrb
out
cs
loope
out
pop
mov
inc
xchg
mov
dec
jg
loop
aaa
pop
mov
jge
insb
shrl
test
sbb
cld
or
lret
jae
insl
fsubl
cmpsl
mov
dec
add
pop
mov
sti
lea
and
ret
inc
fiadds
pop
xchg
sahf
jae
loopne
xchg
test
dec
les
sub
dec
mov
jb
dec
cmpsb
shrb
lods
inc
sub
rolb
arpl
in
pushf
cs
aas
xor
sbb
daa
jg
outsl
add
mov
add
fsts
aaa
or
fsubl
icebp
clc
xchg
push
cmp
out
inc
cmp
cli
pop
jo
and
xchg
cmpsl
jl
shl
cmp
int
fcomps
sub
sbb
push
pop
mov
mov
adc
roll
ficoml
and
mov
dec
ljmp
or
jns
lea
sbb
cmp
pop
rcrl
xor
xor
jp
mov
push
mov
add
filds
xchg
imul
mov
call
and
jo
cli
stos
and
pop
clc
lock
fwait
and
loop
push
inc
pop
lods
cmpb
cmpsb
lods
cs
push
jecxz
shlb
data16
lods
int3
or
testl
clts
rcll
daa
inc
mov
lahf
xor
dec
xlat
lahf
dec
andb
and
cmp
stc
clc
popa
cli
fwait
adc
or
ret
cmp
cld
icebp
sub
xchg
ficomps
int3
lods
dec
cltd
push
out
cmp
imul
push
lock
test
and
sub
fnsaves
js
mov
leave
xchg
jmp
nop
mov
leave
rol
adc
test
into
xor
push
sub
iret
nop
imul
or
dec
popa
sahf
repz
jmp
shrl
lahf
mov
mov
xor
stos
cmpb
pop
fcoml
add
rclb
es
inc
popf
mov
add
pop
push
push
fiadds
dec
ret
or
sub
fidivl
jle
and
push
fistpl
jno
adc
bound
fs
xor
shl
cmp
xchg
pop
push
xlat
mov
ja
loop
popf
filds
dec
testl
mov
aad
js
adc
push
call
mov
and
jne
sbb
addl
xor
ljmp
call
dec
test
mov
outsl
movsb
cmp
cmp
jg
mov
inc
or
stc
xlat
call
outsl
mov
nop
push
lock
pop
ja
fcompl
shll
popf
mov
inc
pushl
dec
mov
out
inc
imul
mov
fisttps
test
pusha
stos
popa
push
test
jge
jae
cs
stos
xchg
mov
lahf
daa
ffreep
adc
mov
scas
and
adc
cmp
fs
mov
ret
cmpl
add
xor
stos
dec
mov
popa
dec
xchg
push
mov
cmp
sub
jb
sbb
sbb
andl
lcall
and
mov
sbb
cli
adc
movsb
add
sub
jge
xor
mov
mov
xchg
repz
xorl
stc
stc
je
pop
xchg
sub
iret
mov
sbb
add
cs
and
mov
adc
jno
pop
and
shlb
ficomps
ljmp
jge
sub
mov
lret
stos
lahf
adc
insl
gs
test
pop
int3
add
js
mov
mov
mov
jnp
mov
dec
jns
jg
shlb
mov
in
pusha
lods
and
cltd
push
int
push
ds
cmpsl
cmpsl
ds
xor
movsb
stos
jmp
mov
js
mov
adc
sbbl
shll
pusha
movsb
adc
out
mov
adc
pop
xor
xor
mov
sbb
pop
cld
xlat
mov
jl
cmc
icebp
out
pop
sbb
mov
imul
call
shrb
std
or
test
out
aad
and
cmp
jle
rcrl
insb
pop
push
sbb
pop
ret
mov
or
outsb
lahf
lods
fdivp
insl
mov
mov
and
jmp
int3
push
or
fisttpll
or
adc
xor
or
push
inc
ficompl
jns
jle
cmp
dec
outsb
pusha
lret
cmp
lods
sahf
adc
cmp
xor
fdivs
std
shlb
rcll
pop
pop
adc
aam
adc
dec
lcall
or
adcl
sub
test
pusha
cmp
xchg
sbbb
in
in
push
dec
mov
ret
pop
insb
jp
pop
mov
sbb
data16
sub
cs
js
outsb
cs
jmp
fsubs
pusha
cs
mov
mov
shll
jl
mov
cltd
sbb
popf
jne
push
ret
sbb
jge
mov
popf
ss
into
je
inc
push
dec
add
jp
mov
sub
xchg
sub
dec
xrelease
mov
pop
adc
es
in
mov
std
popf
pop
jp
push
notl
popa
mov
push
or
mov
stos
mov
push
fmull
in
negl
jno
inc
pushf
cmp
and
and
sti
cmc
mov
leave
adc
and
loop
je
add
imul
jl
adc
sbb
ret
fnsave
push
test
addr16
pusha
adc
sbb
inc
aaa
xchg
imul
mov
jg
and
sub
inc
test
jge
lods
and
orb
fsubrs
les
pop
imul
into
neg
repnz
sub
xchg
mov
in
lock
ret
add
inc
dec
loop
nop
data16
fwait
push
flds
dec
loop
push
scas
inc
push
lods
imul
dec
ljmp
pop
std
jo
jp
or
push
movsb
repnz
cmp
push
pop
ja
mov
test
or
adc
dec
xor
gs
sub
xor
in
daa
xchg
rolb
sub
cs
inc
inc
push
xchg
jl
or
dec
push
outsl
lret
test
inc
daa
adc
push
add
cmpl
xchg
shl
sbb
js
out
out
arpl
lahf
mov
sub
inc
divl
and
sub
sbb
fstl
cmp
stos
movsb
fists
mov
mov
or
and
xchg
andl
mov
es
imul
lahf
filds
ret
mov
dec
push
lods
repnz
jno
sbb
test
ds
retw
jle
adc
inc
xor
jle
sbb
adc
mov
push
ret
fisttpll
sbb
and
and
lods
and
inc
movb
sbb
incl
ja
push
pop
mov
lret
repnz
dec
aad
cmc
pop
adc
mov
sbb
fisubl
mov
mov
mov
jl
rep
rclb
push
add
jo
adc
or
jl
add
aad
pop
or
mov
rorl
in
adc
jo
out
testb
dec
mov
pushf
lock
and
adc
push
mov
in
test
in
dec
addr16
pop
push
xor
stos
jp
shrb
jb
xor
sbbl
mov
mov
pop
imul
add
adc
jne
ljmp
hlt
jns
add
sbbl
push
ret
arpl
fwait
xlat
outsb
int3
je
fisubrl
cmc
push
ss
dec
mov
cld
lds
fbld
adc
inc
test
inc
xchg
cs
jb
sub
dec
and
lods
adc
or
adc
mov
push
push
cwtl
les
arpl
pop
fmuls
sbb
cmp
lods
xor
xchg
cli
xlat
xor
sub
repnz
cltd
pop
mov
push
add
outsb
adc
scas
inc
ja
adc
or
cmp
xchg
imul
mov
aas
add
in
bound
fcomp
xor
gs
arpl
and
or
ss
pop
mov
rcr
dec
inc
insb
xlat
mov
pop
and
cmc
sub
sub
test
cli
cs
sub
or
inc
enter
jmp
lods
dec
sub
mov
les
adc
xor
push
or
mov
ret
roll
sbb
test
add
xor
das
stos
adc
mov
out
lret
pop
sub
cmp
stc
lea
dec
pop
sbb
xor
insl
jne
jmp
int
add
pop
aam
scas
loope
jno
or
fucomp
dec
and
pusha
xor
cmp
inc
fmul
lret
sbb
inc
push
add
clc
mov
add
scas
and
cmp
icebp
shlb
std
cld
dec
xchg
fs
fscale
inc
add
popf
mov
and
hlt
xor
adc
js
mov
test
imul
out
pusha
fxch
sbb
ret
jle
push
out
mov
test
mov
lock
orb
sbb
cmc
adc
cmp
add
in
push
xor
or
inc
ficoms
rcr
push
aam
jae
adc
sub
jns
mov
jae
pop
hlt
dec
xchg
aad
and
ss
mov
mov
inc
stc
jae
mov
add
jns
enter
lahf
cmp
and
jle
cmp
loope
xchg
mov
out
jo
mov
cmpsl
cmp
pop
adc
jp
xchg
push
mov
mov
add
shlb
subl
bound
sbb
cmp
pop
cmp
mov
pop
jb
das
lcall
push
push
mov
mov
das
fs
xchg
jno
scas
cmp
lods
mov
mov
cmpsb
mov
adc
ret
in
lret
and
jno
jne
dec
dec
cmp
push
test
arpl
ficomps
xor
sbb
andl
push
or
dec
mov
jbe
pop
repnz
lahf
in
dec
scas
dec
sbb
std
sbb
mov
fsub
or
mov
loop
jb
xor
mov
idiv
or
xor
into
stos
push
test
push
int
mov
jno
xchg
sub
fidivrl
xchg
sbbl
lcall
ljmp
dec
adc
cmc
adc
cmp
and
mov
xchg
shrb
shll
or
ret
orl
pushf
or
cmpb
int
adc
pop
gs
cmp
adc
stos
jno
in
inc
gs
sub
xchg
jmp
push
sbb
addr16
push
inc
adc
leave
and
lock
mov
cmpsl
sbb
push
outsl
lods
lods
popf
pusha
push
lret
jae
lret
data16
cltd
cmp
enter
mov
and
nop
sbb
arpl
leave
into
sbb
mov
bound
sbb
pusha
sub
push
mov
sbbb
aad
push
rcrl
mov
lds
pushf
fidivrs
inc
mov
ficoms
jl
jl
dec
sbb
inc
ja
mov
add
and
js
push
mov
mov
into
insb
in
pop
repnz
imul
sbb
out
test
xchg
mov
scas
inc
inc
xchg
mov
and
cmpsl
neg
xorl
hlt
push
js
and
inc
enter
aas
lcallw
mov
jo
inc
gs
or
cli
roll
cltd
or
hlt
sbbl
aad
sbb
push
inc
std
outsb
or
out
inc
lcall
and
daa
lahf
fucomp
jp
jmp
cli
pop
mov
orl
jl
xchg
mov
jo
cmp
pop
pop
cmc
dec
inc
xor
ds
incl
sti
in
cmp
popa
adc
in
adc
shll
pop
dec
stos
push
xor
sub
mov
je
jae
cmp
push
lret
push
cmc
enter
xchg
mov
fstp
insb
sub
cmpsl
ret
or
sarb
sub
pop
fwait
sbb
das
imul
sbb
int
cmp
add
sub
jp
xchg
fwait
fs
jle
xor
mov
add
insl
mov
xchg
jle
xchg
ret
sub
or
repz
aam
out
push
adc
lds
test
and
sub
cli
xchg
cmp
or
out
popa
add
cmp
test
inc
aas
sbb
lods
in
lds
scas
out
leave
adc
sub
popf
adc
xor
mov
jp
pop
es
jmp
jle
mov
xchg
pop
adc
sub
rorb
sbb
dec
adc
loope
or
and
ret
adcb
daa
inc
mov
rcll
mov
push
imul
push
adc
movl
dec
push
add
cwtl
das
aaa
and
fld
cmpsl
lock
imul
scas
outsl
push
hlt
push
inc
pusha
imull
mov
xor
cmp
divb
in
or
lds
into
and
push
xchg
mov
repnz
popf
lods
aam
fidivs
inc
inc
mov
into
lret
stos
sarl
adc
pushf
mul
dec
les
ficomps
and
xchg
insb
pop
popa
clc
dec
mov
and
push
ljmp
es
xor
mov
fcmovbe
mov
sub
xchg
stc
sub
or
cmpsb
cmp
sbb
imul
mov
mov
xor
out
aas
push
into
dec
insb
das
sahf
es
pop
aaa
dec
in
cmc
mov
gs
shr
pop
add
sbb
sbb
cld
mov
inc
pop
inc
rcl
mov
jnp
push
fs
add
mov
stos
jge
dec
mov
add
loopne
sbb
iret
ficoms
mov
and
mov
in
jge
sti
jne
xor
fnstcw
mov
stc
inc
or
pop
mov
imul
popf
dec
rorl
jo
pop
imul
subb
insb
and
mov
push
jle
sbbb
dec
jno
and
hlt
push
inc
cli
dec
lcall
add
push
cmp
xchg
fcompl
add
dec
in
lea
je,pn
test
cld
push
fidivrs
add
fidivs
cmpl
test
arpl
fnstsw
add
cwtl
in
outsl
cltd
daa
lret
movsl
xchg
pop
sbb
outsb
imulb
add
loop
mov
dec
add
push
stos
test
sub
mov
ja
es
je
mov
sti
jle
sbb
add
clc
dec
loop
cmp
cmp
idivl
pop
sub
gs
or
stos
loope
pop
and
push
dec
in
rcl
push
out
cmpsl
cmp
fadd
xlat
push
outsb
mov
mov
cmp
out
or
out
mov
adc
mov
inc
jo
inc
mov
ljmp
push
inc
nop
lods
mov
mov
mov
test
dec
and
adc
and
mulb
cwtl
stos
cmp
das
xor
inc
stc
mov
mov
adc
push
lret
or
clc
pop
push
popw
sbb
out
lret
or
xchg
sbb
stos
or
mov
pop
jns
add
addr16
loop
and
fcmovu
jno
dec
jmp
push
imul
cwtl
sbb
test
cmpsl
nop
push
inc
xchg
and
stos
sbb
movsl
jnp
cmp
cmp
inc
mov
cltd
leave
fld
iret
stos
in
bound
fnstsw
popa
pop
mov
pop
pop
mov
orl
jecxz
sbb
inc
dec
cmp
mov
push
test
je
je
cmpsl
mov
cmp
rcrl
xor
orb
mov
insl
iret
dec
jecxz
jge
add
push
xchg
jns
lret
jo
mov
out
xor
pop
enter
dec
repnz
hlt
adc
add
push
pop
xorb
orps
mov
fsubl
int3
adc
sbb
into
into
mov
repz
popf
or
jmp
fcoms
loopne
jns
in
or
pop
std
inc
or
subl
sub
scas
jle
and
fcompl
xchg
jns
jle
mov
inc
in
stc
xor
pop
dec
and
ret
lahf
lods
xchg
inc
setns
xchg
and
jne
xor
xchg
add
enter
outsl
mov
loope
xchg
fsts
mov
test
subb
push
xor
push
addr16
xchg
mov
mov
repnz
sub
mov
in
sub
jno
movsb
sub
cmp
insb
fwait
sbb
push
mov
sub
fdivl
divb
pushf
xchg
repz
xchg
insl
add
lock
jbe
add
insb
cli
inc
push
sbb
roll
add
push
mov
jns
and
aam
xchg
iretw
test
mov
fnsave
lret
mov
shl
mov
jb
sbb
scas
mov
fcomp
mov
xchg
push
xor
dec
sub
adc
sbb
sbb
jle
mov
out
insl
pop
loope
leave
jns
lds
mov
xor
fnstcw
sar
andb
in
pop
outsl
pop
xchg
fwait
xor
sbb
jp
mov
fnstsw
stc
popf
inc
ret
jne
add
cmpxchg
push
ljmp
pop
xchg
xchg
mov
pushf
sub
out
popf
idiv
clc
das
sbb
popf
pusha
test
mov
cmp
je
ss
in
mov
test
or
pop
jne
sub
scas
dec
sub
scas
dec
xor
ds
out
out
imul
fmul
jae
pop
js
cmp
mov
sbbb
cld
jmp
movsl
popa
mov
test
mov
push
dec
loope
mov
jae
cmp
roll
push
sub
filds
insb
add
add
jns
clc
inc
cld
lods
filds
xchg
adc
sbbl
pop
mov
mov
enter
data16
push
cmp
popa
adc
sarb
das
add
dec
fbld
fcompl
test
mov
and
bound
es
ss
inc
fcomps
ficomps
pop
insb
pop
loop
jl
add
cmp
jno
sahf
xor
repz
out
xlat
clc
pop
lock
lods
rcrb
testl
stc
adcb
decb
les
push
lods
mov
pop
movl
xchg
cld
pop
and
enter
dec
aas
sub
popf
pop
jbe
movsb
cmp
pop
sub
repz
mov
cmc
jno
gs
add
movsb
lcall
push
fsubrs
repnz
lea
push
ja
pop
and
or
addr16
test
nop
test
sti
pop
sahf
xor
es
ja
bound
xor
jg
test
cmp
xor
xchg
push
push
fwait
pop
sbb
mov
lcall
pop
negb
or
movsl
jl
loopne
stos
out
lods
div
mov
xlat
mov
mov
outsl
fidivl
cmpsl
push
push
push
inc
mov
xor
frstor
mov
pop
popf
rcr
xchg
adc
in
out
xor
add
lods
xor
sbb
stos
sbb
and
stc
mov
sub
rcl
xor
aam
sub
cld
xchg
out
cmp
lock
cmp
push
subb
mov
jge
into
xchg
mov
pop
fstpt
xchg
adc
lea
das
ret
mov
add
dec
stos
inc
mov
les
jns
repnz
shr
int3
outsb
fdivl
or
pop
adc
lret
sub
cmp
lret
and
repz
adc
xchg
hlt
jle
daa
pushf
icebp
insl
sbb
bt
push
add
in
shll
adc
movsl
sbb
jae
inc
xor
lock
inc
fwait
nop
xchg
adcb
lods
inc
retw
or
cmp
adc
jecxz
push
add
lock
jns
push
add
mov
outsl
sub
xor
mov
ret
inc
xor
sti
cwtl
mov
sub
adcb
push
repz
adc
ret
mov
sar
or
into
popf
notb
push
inc
pop
pop
or
cmp
mov
outsb
imul
jae
dec
lea
dec
in
lea
jo
stos
mov
lret
bound
ljmp
aas
mov
mov
arpl
das
ljmp
insl
xor
push
fwait
push
in
adc
mov
std
jno
dec
push
lds
or
jecxz
inc
adc
mov
outsb
sub
loopnew
mov
loope
lcall
cli
stos
dec
mov
data16
mov
push
cli
jne
pushf
xchg
mov
cwtl
push
insl
lods
fnsave
mov
pop
sbb
insl
pop
knotw
imul
mov
fcoml
jg
lcall
lret
or
mov
cmp
mov
les
imull
nop
jb
mov
lea
outsl
js
push
jb
out
pop
ja
xchg
jns
into
push
jecxz
pop
out
dec
hlt
cld
scas
and
pusha
cmp
adc
rcl
mov
or
lds
mov
enter
add
push
adc
pop
icebp
mov
inc
test
in
bound
rcll
adc
es
jno
pop
mov
or
int
loop
gs
mov
test
push
cmpsl
xor
jo
dec
test
aam
xchg
mulb
sbb
mov
repz
jle
mov
dec
lods
xorb
stos
pushf
das
sbb
testb
jnp
fcmovbe
jnp
mov
and
icebp
lds
ljmp
push
mov
data16
repnz
ret
sbb
imul
or
jge
jns
cmp
inc
sbb
push
jne
xor
adc
inc
fidivrl
sbb
hlt
out
fwait
jmp
sti
mov
mov
inc
pop
bound
jl
loopw
aas
pop
popf
fisttpl
pop
lcall
jne
and
adc
mov
lock
dec
and
mov
imul
out
sbbl
jae
scas
xor
sbb
stc
sub
cmp
pop
imul
outsl
in
jne
ret
push
inc
lods
stos
outsb
sub
test
inc
push
imul
push
lcall
hlt
jo
jp
mov
pop
sbb
aam
cmp
sbb
scas
out
jge
rcrl
cmp
xchg
mov
int3
xchg
icebp
iret
cwtl
pop
ret
mov
sub
scas
das
sub
hlt
dec
cmc
cmp
ror
pop
fnstenv
icebp
mov
sbb
xchg
pop
mov
push
idiv
lcall
push
in
inc
push
dec
cmp
bnd
fsubr
cli
or
mov
push
lods
dec
mov
ja
out
xor
sbb
out
jae
lahf
and
fisubrs
xor
roll
dec
jns
js
push
sbb
adc
pop
lret
sbb
jl
jbe
icebp
aaa
xor
sbb
mov
int3
mov
mov
lahf
inc
cmp
sti
adc
lods
int3
xor
mov
dec
test
lods
outsl
xchg
mov
rcrb
inc
negl
inc
mov
jle
adc
mov
call
jnp
cli
in
sub
mov
mov
mov
in
add
dec
and
pop
test
in
pusha
stc
gs
lcall
int3
sti
popl
jle
sahf
fmuls
daa
test
xchg
jmp
cltd
inc
cltd
inc
out
or
xor
daa
outsb
pop
fidivs
jno
test
cmp
fcmove
mov
push
repnz
stc
or
rcll
cmp
aad
loopne
or
jmp
lea
xchg
xchg
aam
in
repnz
mov
xchg
shl
push
movsl
stc
push
popf
fxch
leave
pusha
scas
cmp
out
push
imul
lret
pop
hlt
sti
push
enter
jnp
repz
std
xchg
ret
sbb
and
loopne
stos
rorb
xchg
xchg
mov
cmpsl
movsl
mov
sub
dec
push
sbb
push
xchg
imul
lock
mov
dec
repnz
icebp
jmp
adc
pop
cmp
js
insl
adc
mov
xchg
sub
xchg
or
cmpb
roll
dec
scas
xor
lock
sub
repnz
sbb
cs
or
jb
daa
test
cwtl
or
adc
mov
adc
pop
data16
inc
popf
lret
xlat
inc
aam
faddl
adc
push
jmp
push
sbb
xchg
lcall
push
dec
xlat
adc
jno
fsubr
pushf
xchg
ret
fldln2
sbbl
sub
stc
mov
imul
xchg
push
xor
fs
jle
or
sbb
and
ja
inc
rol
loopne
push
jmp
jns
sub
cmc
xor
dec
cmc
mov
ss
subl
cmp
cld
sub
loopne
shrl
adc
das
add
lods
notl
dec
in
jnp
in
mov
pop
cmc
lcall
fnstenv
cwtl
cmp
push
scas
dec
push
push
jecxz
cmp
inc
outsb
pop
loope
dec
cmpsl
mov
es
push
push
xorl
push
fisubs
sub
add
mov
mov
fcompl
xchg
sub
lret
or
jbe
int3
mov
sbbb
ss
inc
dec
aaa
clc
shrl
dec
pop
xchg
push
pushl
pop
repnz
in
xchg
mov
pop
jo
nop
dec
hlt
loopne
cltd
mov
outsb
addr16
mov
ljmp
ficomps
mov
mov
into
lock
push
or
sbb
push
pop
lods
movswl
test
mov
and
cmpsb
test
out
pop
in
sti
jb
pop
mov
sub
and
jne
mov
movsb
push
fwait
and
cltd
and
xchg
push
ljmp
ljmp
jp
std
imul
sbbb
adc
inc
lods
mov
mov
jno
fisttpll
fimull
jl
pop
xchg
stc
jg
fdivl
stos
sub
loopne
pop
call
sbbl
fs
daa
cmpsl
test
movsb
jb
scas
add
testb
jo,pt
pop
pop
sub
jmp
add
test
inc
mov
cmpsl
hlt
jnp
lret
je
cld
mov
scas
adc
or
and
xchg
adc
xor
std
cmp
push
lock
sub
inc
pop
test
jbe
iret
gs
in
lds
mov
sub
or
pop
cmp
mov
pop
leave
decb
test
hlt
mov
xlat
lahf
ss
add
mov
repz
and
jp
fnsave
les
cmpsl
pop
mov
mov
add
lea
sbb
xchg
cmp
enter
push
outsb
jp
jo
rcrl
cltd
ljmp
ret
sub
inc
dec
arpl
mov
stc
je
cld
push
push
or
sub
xor
push
or
mov
add
sub
fdivrl
jae
rcrl
add
les
xor
or
cmp
and
push
cs
add
or
rcrb
iret
mov
orl
repnz
out
cld
dec
andb
sbb
push
inc
aaa
das
ret
fwait
xor
mov
jecxz
dec
in
dec
mov
xchg
shll
addr16
imul
add
loopne
dec
push
mov
adc
and
add
push
and
jne
jno
mov
jp
push
adc
test
cwtl
aaa
out
das
js
cmp
inc
pop
ja
cli
mov
mov
scas
sbb
xor
js
sbb
push
mov
mov
div
insl
fsubl
xchg
sbb
repnz
push
ja
mov
push
leave
jo
push
push
fcompl
xor
add
cmp
cmp
inc
push
out
call
int
or
jns
jb
push
jmp
push
dec
jo
jg
push
data16
mov
test
cwtl
pushf
scas
mov
adc
mov
inc
sbb
loope
enter
lret
jmp
push
inc
mov
mov
push
fwait
xor
mov
sti
mov
mov
in
mov
inc
inc
fistpl
lods
mov
and
mov
cwtl
mov
jo
mov
push
dec
jp
sti
shr
sub
dec
test
daa
in
dec
lds
sub
movsl
xchg
sbb
xchg
popf
cmp
or
mov
out
cmp
adc
cmc
pop
out
test
imul
dec
inc
test
push
call
push
out
xlat
les
fnstcw
jne
fidivl
adc
mov
push
scas
cmp
sbb
sub
subps
xchg
dec
out
xchg
mov
xchg
dec
add
sub
out
stc
and
mov
pop
out
mov
push
or
fdivs
dec
cmp
xor
mov
rorl
ret
mov
pusha
xchg
cmp
nop
xor
add
js
pop
jb
cmpsl
push
inc
xchg
mov
insl
shll
push
mov
xchg
pop
clc
fdivs
mov
imull
inc
mov
je
xor
mov
cmp
pop
add
sub
fs
xchg
repz
push
mov
push
rclb
add
xor
lahf
test
cmc
pop
test
mov
push
mov
and
ljmp
push
inc
xor
gs
iret
aam
orb
adc
stc
pop
mov
push
filds
notb
test
mov
xchg
rcrl
xor
dec
popw
data16
dec
ja
cmp
ret
push
and
push
mov
cmp
in
sbb
insl
cmpsb
cmp
push
shl
repnz
sub
xor
cmp
sbb
mov
les
aam
mov
xor
testb
daa
test
lcall
ss
popf
lea
sub
push
add
jecxz
sbb
fdivl
leave
xchg
add
sbb
fimuls
cli
inc
dec
push
and
cmp
arpl
and
sub
jnp
int
cs
inc
aad
push
sti
sub
sbb
jle
mov
test
inc
mov
fwait
insb
xchg
sbb
or
cltd
and
inc
push
mov
adc
popfw
je
ja
jb
popa
je
xchg
sahf
imul
ss
stc
movsl
jbe
faddp
loopne
xchg
jp
and
mov
and
adc
pop
xchg
mov
lcall
loop
and
addr16
mov
jno
push
jmp
mov
hlt
cmp
sbb
xchg
dec
and
pop
jmp
sub
pop
sub
iret
sbb
adc
or
adc
into
enter
imul
pop
pop
je
imul
adc
pusha
inc
pop
ja
je
mov
out
and
mov
cmp
cmp
push
pop
andb
or
or
daa
lcall
inc
xlat
mov
lods
pop
cmp
jecxz
dec
sub
stos
sbb
popa
jl
cltd
pop
cmc
daa
jge
test
xchg
sub
mov
clc
cmpsl
mov
sub
xchg
inc
stos
sub
outsl
jne
mov
push
cmp
das
and
push
add
and
pop
rol
mov
or
xor
adc
dec
or
test
pop
adc
jg
inc
lea
or
xchg
add
add
lret
push
sbb
repz
aad
dec
out
repnz
cmc
cmp
shrl
xor
sub
xchg
and
jmp
nop
arpl
inc
xchg
repz
adc
mov
mov
adc
sub
jl
push
aam
jl
pushf
sub
out
std
xor
enter
xor
mov
leave
aad
pop
inc
insl
repz
aad
out
jg
rcrb
xor
ds
mov
mov
out
shrb
add
push
lods
inc
mov
mov
int3
jp
je
adcb
jmp
push
out
out
arpl
cli
rolb
pop
nop
ficompl
pop
push
imul
scas
test
mov
lods
mov
test
xchg
pop
std
js
hlt
cs
fdivl
xchg
adc
sti
fwait
cmp
inc
push
scas
xchg
jmp
and
inc
xchg
sbb
push
mov
pop
lds
mov
pop
mov
lds
cmp
sub
mov
add
jl
cwtl
loope
in
adc
cltd
inc
jb
push
cmp
bound
stos
mov
imul
and
sbb
or
mov
movsl
inc
sbb
addr16
push
lret
sahf
insl
test
call
ret
stos
push
push
js
mov
out
out
popf
shll
cmc
cmpb
aad
or
fnstsw
or
cld
cmp
sub
sbb
mov
pop
mov
rcrb
jbe
sub
jp
stos
inc
jb
pop
mov
js
sub
push
xchg
mov
shr
xor
les
movsb
sti
adc
inc
movb
pop
ljmp
xchg
mov
fcomps
push
jo
mov
inc
mov
fs
sbb
lret
or
mov
sbb
lock
lds
sub
lods
jno
lcall
cmpsb
jne
ret
loop
call
push
movsl
jne
add
in
xchg
lret
cmc
cmp
sbb
push
push
mov
sub
dec
jge
jle
clc
xchg
pushf
inc
lods
pop
dec
jmp
mov
mov
aam
lods
cmpb
icebp
das
xchg
push
aas
inc
or
xor
sub
addl
mov
and
cld
adc
or
les
cmp
arpl
push
mov
into
push
call
jl
insb
scas
adc
lock
insl
xchg
sub
shll
pop
pusha
mov
or
out
or
lret
cld
jge
fs
push
and
mov
lea
cmp
pusha
stc
aam
sahf
pop
setp
bnd
and
lahf
clc
cmpsl
jp
and
lcall
add
call
lret
sbbl
test
stos
ret
fisubrl
pushf
ffreep
das
push
shl
test
sub
popa
outsl
jl
jo
arpl
into
sbb
loope
push
icebp
into
mov
cmpsb
stos
push
lods
popf
lret
fucomp
cld
mov
mov
stc
loop
jg
push
add
pop
adc
jns
iret
sbb
testb
cmp
addr16
mov
xchg
add
insb
push
andl
add
xchg
icebp
sub
dec
out
jge
and
push
dec
inc
lcall
out
lock
test
rol
xchg
ret
fbld
sbb
inc
sub
and
push
inc
out
push
sub
in
mov
fisubs
push
cli
mov
and
rcll
in
ror
pop
mov
out
int3
sbb
cmp
das
aaa
xor
dec
lret
cwtl
fmul
jle
aaa
push
and
pop
cmc
loope
cwtl
cmpl
sub
sbb
add
or
jae
stos
in
lods
mov
lcall
into
ds
in
je
inc
pop
jo
test
sbb
push
stos
aas
or
in
mov
mov
mov
mov
out
xlat
pop
fisubrs
jge
push
fwait
adc
sbb
enter
or
stos
sbb
aas
jno
lea
mov
mov
and
ljmp
insl
mov
adc
xchg
xchg
jmp
push
inc
pop
call
add
sbb
lret
sbb
push
test
fcmovnu
addr16
jno
pop
mov
cmc
in
mov
pop
insl
dec
sbbb
insl
jle
ficomps
dec
sbb
sub
out
or
in
cmp
dec
icebp
sbbl
mov
popa
xor
adc
mulb
lret
adc
lret
or
test
dec
mov
xchg
daa
ljmp
push
leave
pop
jle
sub
daa
scas
mov
ror
movsl
in
jl
add
movsb
iret
sub
xchg
cld
xchg
leave
arpl
ljmp
lcall
cmp
jbe
mov
and
dec
push
jmp
into
cmc
fnsave
rolb
add
adc
jp
scas
and
sbb
pop
mov
lds
jo
sub
lea
mov
fildll
xchg
negl
pusha
push
sahf
in
and
femms
mov
xchg
mov
xchg
add
das
rcll
mov
cwtl
das
push
outsl
test
xor
sahf
int3
daa
outsb
jp
in
call
jle
fmul
push
pop
mov
sbb
xor
mov
pop
sbb
cmp
call
loopne
xchg
and
in
js
jmp
inc
movsb
pop
mov
adc
adc
and
sti
testl
out
popf
aas
in
jbe
ljmp
shrb
cmp
jbe
inc
cmp
mov
sbb
out
dec
jmp
xchg
sub
sub
dec
jo
jl
icebp
xchg
sub
sbb
out
dec
shrl
push
jmp
jmp
push
daa
adc
popa
popa
mov
popf
mov
inc
out
testb
sbb
int
movsb
dec
mov
fstl
or
notrack
sti
in
sti
xchg
cmc
cmp
out
rcrb
repz
out
add
ja
dec
xor
adc
in
add
enter
cmp
push
sub
nop
test
cmove
pop
cltd
push
mov
test
sbb
xchg
lret
sarb
shl
sbb
scas
add
adc
repnz
in
sub
cmp
inc
outsb
inc
testl
popf
cmp
rclb
xlat
sbb
push
mov
inc
dec
clc
push
fwait
aaa
fxch
aas
inc
push
mov
jbe
out
sbb
paddsw
jae
lret
add
cli
push
pop
inc
insb
add
jle
xchg
dec
jns
sub
negb
gs
push
ljmp
call
popf
leave
pop
push
ljmp
lock
push
xor
xchg
and
ret
mov
into
cli
sbb
mov
xchg
popf
rol
sar
std
xor
cmp
jp
movsb
cmp
rcl
push
adc
data16
jg
dec
mov
sub
cmp
sahf
and
adc
lret
repz
and
pop
in
test
imul
pop
ljmp
jno
xor
dec
in
lea
ss
mov
adc
lods
loopne
add
dec
mov
dec
shrl
mov
jmp
pop
sbb
mov
sub
shrl
fiaddl
das
and
cld
in
sbb
add
popa
mov
jle
gs
ss
or
pop
adc
repz
and
add
clc
sbb
push
dec
inc
jbe
mov
or
stos
ds
repnz
sub
dec
scas
fsts
iret
sbb
sub
pusha
lcall
jbe
fimull
xchg
dec
in
fcmovnbe
pop
in
pop
mov
mov
gs
cmpsb
jge
xchg
dec
mov
repnz
lret
lret
pop
mov
jmp
cmp
lcall
mov
jle
pop
mov
inc
inc
push
enter
int3
ficomps
mov
rorb
jecxz
rcrb
mov
dec
pop
aam
arpl
xchg
xchg
adc
int3
dec
les
es
dec
test
pusha
imul
popf
jo
xchg
sub
stc
divl
adc
je
mov
jnp
push
inc
lock
mov
lahf
std
mov
xchg
mov
es
adc
clts
repnz
arpl
hlt
daa
inc
push
jle
cwtl
pop
adc
test
stos
inc
adcb
push
clc
out
mov
push
std
inc
lock
lahf
fwait
adc
cmp
int3
aam
adc
pop
dec
sub
cs
les
popa
subb
cld
out
aaa
lds
out
clc
cs
imul
cmp
sbb
adc
or
mov
add
xchg
sub
in
xor
jno
mov
dec
jno
scas
imul
xchg
in
push
cwtl
push
stc
inc
xor
add
xor
sar
lods
inc
in
inc
pop
adc
mov
mov
jnp
imul
mov
aad
xchg
lcall
cltd
jne
nop
daa
mov
and
xchg
sub
sbb
fidivl
dec
sbb
in
push
cmp
push
add
js
sbb
dec
addr16
addb
mov
adc
pop
testb
ds
jbe
add
sahf
js
stc
test
int3
cwtl
sbb
jmp
andb
lds
shr
sahf
dec
stos
rcl
aam
lods
add
cmpsl
xor
in
stc
nop
jns
jnp
loope
jle
mov
sbb
sahf
sbb
stos
sbb
repz
mov
push
mov
jp
das
mov
adc
sbb
js
into
and
mov
add
mov
movsb
enter
add
mov
imul
shrb
nop
mov
bswap
bound
aaa
push
add
xor
cmp
push
mov
aad
jb
inc
arpl
xor
shrb
adc
mov
xchg
pop
inc
cmpsb
lcall
xchg
xor
or
repz
push
inc
icebp
cmp
movsl
dec
xchg
jbe
stos
pop
mov
daa
cmpsb
and
movsl
push
scas
push
fs
rol
mov
cmp
pusha
in
xchg
cmp
addr16
xchg
sbb
jle
xor
shr
cltd
xchg
push
je
rcr
and
jg
insb
jmp
mov
xor
sarl
addr16
in
test
int3
mov
test
sub
cmc
sbb
test
cltd
cmc
repnz
lcall
and
fbstp
js
int3
fidivs
push
scas
inc
test
movsb
cwtl
es
arpl
sub
lods
repz
paddb
jg
cmp
sub
dec
repnz
fsub
add
mov
xchg
jae
into
in
push
add
gs
std
sub
add
lock
jp
push
pusha
add
mov
pop
sahf
mov
and
sti
sbb
cmp
push
outsl
dec
mov
pop
into
mov
jp
popa
push
cwtl
mov
or
mov
mov
out
push
filds
jns
cmp
andb
pop
mov
cmpsb
mov
push
fistl
and
leave
jmp
xchg
add
outsb
or
pop
mov
cmp
and
out
mov
cltd
adc
lds
add
loope
dec
lret
testl
fstpt
and
mov
int
nop
jmp
dec
xlat
int3
or
xor
loope
pop
clc
call
mov
inc
mov
jmp
inc
aas
jle
fcomi
pop
mov
mov
rol
sti
es
inc
adcb
or
ret
cmp
pop
mov
or
stc
icebp
push
mov
rcll
push
fdivrs
xchg
pusha
dec
xor
popf
jecxz
inc
adc
mov
mov
push
lret
in
imul
inc
mov
pusha
push
mov
add
je
and
clc
adc
arpl
repnz
mov
das
in
or
dec
and
jge
adc
xchg
test
rol
mov
mov
adc
inc
sbbl
out
inc
push
mov
in
in
scas
ljmp
pushf
imull
in
xchg
mov
fdivs
pop
mov
pushf
mov
xchg
cmp
adc
jne
call
int3
sub
mov
pop
pop
in
add
stos
sub
mov
dec
lods
cli
mov
xchg
sti
lahf
pusha
push
pushf
cli
inc
sahf
paddsw
push
mov
sub
mov
adc
repz
lods
jp
test
or
push
jmp
fnstenv
movsb
inc
or
std
js
stc
jb
popf
mov
stc
repnz
aaa
mov
xchg
sbb
fiadds
shr
mov
sahf
add
inc
pushf
pop
add
cmp
add
fisttps
sbb
loope
call
into
es
adc
notl
push
jb
adc
lret
and
inc
inc
test
mov
aaa
xor
fucomip
xor
enter
lcall
ds
lcall
and
sub
imul
add
sub
movsb
cmp
lret
ret
push
inc
stc
dec
or
mov
sub
pushf
call
jg
aad
popa
cmpsl
add
xchg
mov
mov
mov
aam
loope
jne,pt
outsb
test
sbb
dec
and
jns
mov
je
and
xor
sub
xor
lods
jmp
imul
or
cmpsb
dec
into
lds
jmp
enter
std
or
jnp
shrb
popf
pop
mov
dec
add
and
lea
mov
sbb
push
xchg
call
sbb
cmp
pop
out
decl
negb
dec
mov
ret
clc
dec
sbbl
mov
testl
arpl
pusha
pop
out
adcb
addr16
leave
mov
int
data16
xchg
cli
mov
clc
inc
iret
mov
mov
sub
push
inc
sub
push
sub
int3
addb
push
int3
pop
fildl
xor
push
int
je
out
jge
push
cmp
daa
notb
inc
inc
jae
jb
lahf
adc
sbbb
mov
mov
mov
pop
pop
or
insl
xor
mov
or
out
mov
cld
fisttpll
movsl
sahf
sbb
shl
sub
cmp
and
out
dec
adcb
lret
mov
std
pop
mov
inc
in
daa
or
mov
ja
adc
xor
cmp
xor
mov
jne
jbe
lods
cmp
jns
leave
cli
push
sti
cmp
mov
sub
addr16
dec
dec
icebp
es
mulb
out
inc
jne
rdmsr
movsl
mov
rcr
adc
or
xchg
jmp
jae
es
in
adc
cld
push
jae
leave
shlb
push
vpandn
enter
loope
ds
ss
sbb
and
shrl
pushf
push
das
mov
cmpb
mov
xchg
mov
pushf
sbb
mov
jecxz
scas
adc
incb
jno
mov
pop
ljmp
mov
xor
xor
sub
push
mov
push
xchg
push
lea
aas
push
mov
inc
lock
in
xlat
ja
pop
notb
jmp
jne
pushf
cmp
push
ljmp
mov
xchg
sub
loop
mov
and
and
loop
xor
movsl
ljmp
sar
pop
or
sbb
mov
add
jne
xor
ss
test
cmp
push
cmp
mov
pushf
lret
enter
loope
adc
xchg
jne
fidivrs
rclb
or
sub
ficomps
mov
xlat
arpl
add
mov
stos
inc
inc
lahf
fnsave
lods
lret
dec
xchg
mov
sbb
addr16
insb
inc
addr16
shll
aad
outsl
mov
test
sub
mov
int
cmp
ss
push
pop
or
imul
xchg
testb
cmp
or
sbb
add
out
stos
jmp
cld
inc
call
ficomps
enter
xor
fistl
cltd
adc
xchg
fildl
icebp
push
jg
mov
out
stc
nop
popa
add
bound
outsb
shrb
mov
movsl
pop
fwait
sti
outsb
pop
pop
xchg
mov
xchg
mov
dec
inc
mov
and
xchg
cmpb
leave
mov
cmp
xor
addr16
adc
bound
push
outsb
mov
xor
cltd
jbe
inc
sbb
inc
fwait
mov
cmp
push
or
add
jno
xchg
jg
xor
mov
leave
out
leave
flds
xor
cld
mov
cmp
cmp
rolb
icebp
jecxz
inc
enter
add
push
bnd
cltd
into
iret
xchg
cmpsl
jo
sbb
je
add
add
out
test
push
ljmp
pushf
pop
mov
bound
cmp
mov
iret
pop
mov
push
push
xchg
pop
xchg
push
adc
fstpt
xchg
xor
pushf
lea
dec
adc
jne
out
pop
and
mov
scas
xchg
inc
inc
lea
inc
push
add
dec
xchg
xor
loopne
in
std
loope
outsl
shl
cwtl
stos
mov
push
jb
fidivl
inc
in
adc
dec
movsl
push
sti
mov
inc
mov
dec
adc
jno
mov
lods
mov
sub
int3
dec
inc
add
adc
dec
or
lock
sub
lret
test
xlat
push
mov
adc
xchg
or
sub
adc
jl
scas
test
and
xor
fistl
and
adc
leave
push
leave
je
inc
push
repz
mov
psrad
lahf
sbbl
mov
inc
xchg
jo
in
and
mov
into
push
hlt
out
ret
mov
mov
rcll
cmpsb
ret
sbb
jb
ja
pop
out
xor
mov
sub
notb
inc
call
test
pop
rclb
push
or
xchg
mov
and
fistl
dec
xchg
jb
push
sub
xor
inc
dec
in
cs
scas
aaa
pop
in
dec
out
jnp
sarl
inc
and
test
scas
iret
lret
das
or
imul
sarl
in
ret
xchg
and
pop
sbb
jmp
dec
add
xor
adc
loope
push
and
dec
sbb
pushf
icebp
jae
and
add
mov
push
and
ss
adc
cmp
sbb
lret
pop
fdivl
xor
pop
lahf
sub
sbb
xchg
insl
and
cmp
mov
int
ds
cli
and
rcrl
lret
insb
pop
push
shlb
mov
stos
mov
jmp
int
jo
mov
jo
lcall
out
jne
jno
pop
xorl
mov
adc
fisttpll
fnstcw
rolb
add
fwait
jbe
and
fnstenv
ja
xor
adc
pop
or
jbe
jbe
imull
scas
push
mov
cld
add
ljmp
xorb
or
ret
push
inc
lcall
jle
hlt
insl
ljmp
mov
inc
insl
es
gs
lahf
add
mov
aam
cli
and
or
pop
add
stos
int3
out
push
mov
or
negb
montmul
cmpsb
mov
leave
inc
popa
mov
add
fisttps
push
adc
sub
jecxz
in
adc
jmp
jle
fcmovnb
push
bound
les
cmp
scas
adcb
adc
mov
sub
push
enter
xor
fmul
push
mov
push
inc
and
enter
daa
fdivs
cltd
jbe
cwtl
pop
and
shr
xchg
les
sub
xchg
jo
mov
std
adc
and
jnp
xchg
cltd
fildll
sbb
popa
mov
out
dec
jp
nop
jecxz
jbe
adc
ss
test
add
mov
push
xor
xchg
push
test
rol
jecxz
inc
jp
pop
movsb
xor
inc
movsl
icebp
out
jmp
add
mov
cmp
cs
jl
ds
lods
mov
sbb
xchg
pop
push
adcb
shr
lcall
popa
mov
inc
add
fildl
mov
ret
add
in
into
mov
lods
fcompl
lds
mulb
or
cmp
cmp
call
sub
push
sbb
clc
shrb
jo
loopne
jnp
lods
add
negb
dec
lahf
test
es
enter
add
mov
in
repnz
xlat
fs
ja
fistpll
shlb
data16
sbb
dec
stos
orb
hlt
pop
push
rcpps
or
aas
cmc
cmp
and
in
xlat
mov
mov
sub
je
mov
cwtl
scas
dec
cmp
xchg
popa
adcl
decb
insl
and
ret
mov
adc
sbb
arpl
in
push
pop
pop
hlt
jle
insl
xor
cmp
es
movsl
fwait
mov
cmc
mov
pop
push
clc
pop
lahf
out
gs
aas
inc
mov
test
sbbb
pop
dec
jp
xor
incl
movsl
dec
push
fildl
cmpsl
arpl
ret
pusha
inc
mov
loop
and
pop
movsl
icebp
jne
inc
fwait
ret
xchg
imul
test
shll
mov
jb
das
mov
or
pop
jmp
lret
pop
xchg
rcrl
adc
inc
mov
fsubr
cli
cmc
rcll
std
pop
adc
jl
testb
dec
push
or
sub
jns
fwait
jbe
push
cld
aam
inc
sbb
lods
ret
push
pusha
cmp
je
or
mov
test
xor
push
les
into
push
icebp
int3
movsb
pop
shr
cltd
arpl
leave
ret
sub
cmpsb
fwait
jb
and
add
fsubr
xor
mov
or
outsb
mov
cmp
cmc
add
or
xadd
bound
arpl
inc
push
jno
push
fldenv
fmulp
inc
cli
jmp
jge
addr16
arpl
push
scas
ret
xor
xchg
and
sbb
cwtl
or
cmp
aad
sbb
pop
repnz
mov
mov
mov
mov
mov
repnz
cmp
repnz
clc
and
cmpb
xchg
fnstenv
out
xchg
call
xchg
add
xor
xor
test
mov
aaa
test
jae
adc
fwait
mov
add
imul
xor
in
mov
jo
mov
dec
jo
mov
dec
sub
cld
outsl
outsl
enter
pop
iret
mov
pop
dec
ss
dec
add
iret
mov
inc
add
xchg
pop
pop
push
sahf
xchg
movsb
out
mov
ret
insb
scas
and
adc
push
fldl
nop
mov
mov
jmp
loop
fsubs
aad
xchg
dec
sarb
jno
jl
pop
pop
ds
jge
data16
aam
pop
or
mov
mov
push
mov
imul
adc
int3
arpl
daa
popf
mov
pusha
sub
ja
pop
std
or
pop
popa
xchg
mov
test
in
add
negb
dec
cmpsl
mov
push
dec
jmp
jne
jns
ljmp
and
aad
mov
ret
push
sub
lds
add
mov
insl
add
mov
ret
jo
insb
sarl
jo
pop
ss
ret
pop
xchg
lods
xchg
hlt
dec
mov
push
shl
lea
jae
cmp
outsb
jl
in
mov
or
ds
pop
popf
gs
jo
mov
ret
xlat
call
dec
fistpl
cmp
inc
cmc
cltd
cmpsb
out
mov
fs
mov
ret
jbe
xchg
or
cmp
inc
xlat
daa
pop
ds
jg
loope
jge
das
insb
push
push
push
xorl
lea
jmp
adc
inc
cmp
xor
fs
adc
push
iret
dec
add
push
fld
add
int
xchg
cmp
lods
outsl
jbe
in
push
mov
sbbb
out
dec
mov
loopne
repnz
enter
jns
in
js
imull
outsl
loop
fmull
add
in
inc
mov
adc
lret
jle
mov
dec
aad
cmp
test
hlt
cmpsb
in
aaa
sahf
lret
cmp
mov
sbb
cmp
jl
cmp
cli
jne
inc
xchg
vpermil2ps
push
sub
sbbb
in
imul
mov
jle
mov
repnz
out
sbb
out
in
xor
out
fs
add
scas
mov
push
aas
mov
jo
jg
ljmp
stc
push
jb
mov
jl
in
dec
adc
mov
cmp
mov
pop
sub
stos
mov
pop
dec
adc
pop
cltd
fs
adc
movb
push
dec
addr16
cmp
in
sti
sub
roll
jno
inc
mov
mov
icebp
xchg
negl
pop
pusha
out
dec
mov
hlt
mov
dec
int
jl
icebp
in
mull
sarb
repz
rcll
mov
iret
xor
sti
jp
ret
lds
sarb
add
pop
ja
xor
mov
push
push
ret
pop
clc
mov
sub
mov
cmp
stos
push
lret
loope
push
aaa
inc
nop
pusha
andb
and
jecxz
insl
and
int
or
in
in
sbb
ror
cmc
cmp
cmp
rcrl
stos
jne
std
mov
in
xor
xorb
les
xchg
pop
inc
push
ss
daa
mov
xor
lds
shl
jns
mov
cmp
imul
in
lea
sub
jnp
stos
mov
pop
dec
bound
ret
nop
sbb
test
or
push
cmpsb
fldt
adc
daa
inc
inc
xchg
iret
adc
xchg
adc
or
xor
jns
push
mov
sbb
mov
lret
push
xor
and
fcmovnu
mov
js
pop
ret
xor
jecxz
test
mov
jp
je
pop
scas
sub
test
loope
xor
fnstcw
sub
clc
push
lock
jmp
or
xchg
push
pop
dec
andb
sbb
adcl
pop
gs
and
iret
and
out
sbb
fsubl
les
les
mov
mov
in
or
push
mov
or
or
sti
adc
xchg
xchg
insl
icebp
or
mov
push
out
xlat
insl
cmp
sub
lea
inc
fisubrs
sub
sbbb
dec
mov
fildll
inc
imul
inc
lods
jmp
mov
gs
pop
rorl
lea
xor
pop
push
cli
push
inc
push
and
mov
pop
loope
or
push
sub
sub
jle
flds
fldenv
iret
popf
call
addl
pop
jge
sbb
and
lahf
mov
inc
dec
cmpsb
bound
push
mov
repz
das
or
adc
xchg
rcr
dec
mov
andb
pop
jle
push
add
add
divl
cltd
subl
repnz
and
daa
push
push
mov
mov
jno
xchg
jnp
push
data16
or
imul
movsl
inc
adc
sub
sub
xchg
fs
push
mov
add
lock
stos
mov
cli
inc
push
jno
incl
pop
pop
shrb
mov
push
je
roll
pop
cmp
push
or
fildll
aad
iret
enter
add
dec
movsb
cmp
jl
das
dec
ret
push
push
fisttpll
fcompl
mov
mov
jl
jae
sti
jp
popa
dec
dec
in
fcomip
in
dec
mov
adc
stos
xor
outsl
jnp
xchg
inc
fstpt
fisubl
es
push
jp
dec
fstps
xchg
incl
sahf
xchg
in
jecxz
lds
mov
pop
aaa
dec
push
in
imul
je
or
xchg
fadds
push
mov
add
in
arpl
inc
xor
repz
test
inc
in
ds
daa
mov
mov
dec
insl
call
popa
or
pop
jp
adc
xor
mov
int
stos
sti
xchg
fdivl
lds
mov
enter
inc
aam
dec
push
jmp
int3
shr
aam
jo
nopl
popa
sbb
dec
mov
sbb
cmp
add
clc
cmp
enter
icebp
test
push
ljmp
jno
ret
cwtl
mov
iret
dec
call
test
mov
xchg
sub
push
or
adc
stos
push
add
cmp
push
push
or
push
mov
arpl
push
faddp
pusha
fidivrl
in
xor
xor
dec
rorb
dec
dec
add
ss
addr16
mov
andb
and
cmc
jg
sub
lock
sahf
mov
lahf
push
fstpl
mov
cmpsb
scas
fidivs
push
roll
mov
pushf
xor
mov
std
mov
mov
mov
cwtl
lret
ret
jns
cmp
sbb
xchg
sarl
mov
jmp
xchg
std
dec
cmp
cmp
mov
pop
sub
mov
in
push
repnz
xchg
jg
jge
and
add
nop
dec
out
and
adc
dec
pop
xor
lea
xor
cmp
subb
xchg
push
test
jge
mov
sbb
mov
adc
jmp
xchg
push
xor
inc
movsl
aad
sub
sbb
xchg
mov
xor
loop
repz
jmp
cmp
jb
scas
lock
add
dec
nop
daa
andl
add
jbe
lds
mov
mov
mov
stos
fstp
xor
pop
inc
scas
outsl
mov
insl
sarl
das
insl
and
xchg
cld
icebp
ja
xor
inc
xchg
mov
xchg
mov
pop
mov
ret
inc
rorl
popf
jne
xchg
cmpsl
cli
pop
mov
mov
cmp
pushf
sub
xchg
lcall
ljmp
dec
cmpsb
daa
sahf
decl
cli
pushf
inc
faddl
add
out
cmpsb
and
add
aaa
enter
std
fstpl
loopne
mov
sbb
sahf
push
fcoml
mov
jbe
dec
dec
sar
std
cmpsb
popa
push
push
jne
subb
decl
insb
scas
mov
mov
jo
xor
in
add
push
or
xchg
adc
adc
sub
daa
inc
repz
js
insl
cltd
sbb
into
sub
pop
or
divl
xchg
mov
fsubp
add
fs
adc
sti
popf
and
aad
das
add
repz
jne
inc
sarl
out
cmp
lock
xor
dec
mov
mov
mov
out
xchg
xor
sub
test
mov
xor
pop
fcoml
or
mov
lret
inc
dec
jg
xor
incb
xchg
add
inc
daa
cmp
pushf
add
ficomps
sahf
xor
call
mov
fnsave
inc
lret
jmp
lret
mov
into
xchg
ljmp
aam
cmc
inc
stos
in
jb
push
call
test
jge
push
sbbl
stos
lret
pusha
gs
jae
pop
xsha1
cmpsb
mov
sub
dec
int3
mov
fcoms
mov
daa
cmp
pop
sahf
call
shr
test
cmpsl
mov
movsb
mov
add
or
lahf
rcrl
shll
mov
sub
fsubrl
sbb
and
ret
add
fsubrs
pop
lahf
daa
inc
jge
outsl
pop
pop
mov
or
cmc
mov
sub
nop
daa
cmp
lods
xlat
sti
pop
pop
xor
dec
mov
and
rcl
insb
push
pop
xchg
and
mov
dec
lods
enter
jns
xchg
add
push
push
aas
inc
fisubrs
imul
mov
or
pop
cmpsb
cwtl
imul
aas
fstl
xor
out
add
cmpb
aad
push
sbb
pop
inc
xlat
cmp
loop
sub
push
cmp
and
sti
mov
xchg
stos
inc
cmp
int
cmpl
mov
pop
xchg
lods
jae
js
jnp
int
dec
je
clc
subl
arpl
mov
jae
cmp
and
imul
mov
addb
mov
shrb
mov
cmp
aad
add
xor
adc
xor
ret
jle
stc
fwait
push
out
mov
shl
int
inc
inc
cmp
mov
dec
and
push
lock
subb
sub
lret
stos
adc
jmp
in
aaa
pushl
lcall
frstor
hlt
cmp
push
xchg
adc
xchg
addl
jl
sub
mov
xchg
js
lods
dec
add
out
movsl
hlt
jo
jae
or
xchg
push
dec
xchg
pop
ljmp
out
inc
sbb
pop
xor
push
sti
leave
pusha
sbb
xor
xor
or
push
push
inc
jns
ja
out
aad
std
pop
adcl
mov
nop
rcrl
jnp
repz
stc
ror
xor
or
xor
sahf
pop
mov
jo
cltd
or
std
sbb
dec
push
add
das
roll
mov
dec
jnp
inc
mov
cmpsb
sahf
mov
std
pop
sahf
cs
pop
xorl
imull
aam
ret
enter
and
loop
or
dec
dec
sub
insb
xchg
jmp
or
sahf
or
imul
and
adcl
cltd
push
notl
pop
scas
aas
and
dec
adc
ret
xchg
pop
cmp
push
sub
roll
sub
in
and
aas
pop
push
xor
push
int3
jae
jnp
xchg
test
dec
ret
hlt
imul
jno
int
sbb
popa
sti
mov
iret
or
push
mov
add
add
jbe
loop
fwait
test
or
sti
or
mov
sbb
scas
inc
push
cmp
cmp
push
stos
cmp
push
loope
hlt
icebp
inc
push
stos
cmp
jno
pop
outsb
loopne
fcomps
fisttpll
mov
jle
mov
scas
fwait
and
push
popf
pop
cmp
mov
cltd
mov
mov
xchg
xchg
dec
sti
or
mov
push
fwait
call
push
sbb
push
popf
lods
xchg
mov
or
mov
pop
in
fists
in
dec
lock
outsl
xchg
or
push
xor
push
inc
fidivrl
xor
push
and
shll
push
fsubrs
sub
cmpsl
mov
mov
into
cltd
mov
pop
mov
mov
add
push
out
out
push
cmp
jmp
inc
jo
aaa
mov
dec
mov
sub
scas
mov
cmp
inc
out
call
hlt
cltd
icebp
ret
jp
out
stc
aad
rolb
sbb
adc
lds
aas
ja
in
pop
pop
shll
and
push
call
out
call
mov
cmp
xchg
push
cmp
mov
je
jo
xchg
jno
add
sbb
daa
xchg
jmp
stos
popl
mov
ret
lock
dec
flds
fidivs
mov
jge
lea
push
scas
bound
icebp
movsb
push
hlt
and
xchg
mov
mov
scas
lahf
jns
fmulp
mov
sti
xchg
mov
sub
and
add
and
adc
loop
stc
mov
pop
lahf
sarb
shr
inc
stos
xchg
xor
sub
sbb
call
mov
scas
sbb
push
or
xor
jp
mov
shll
push
xor
and
rcll
or
pause
rorl
cmpsb
aam
push
outsb
cmpsl
das
ret
mov
mov
adc
loop
in
jge
ds
adc
adc
lret
adc
cmpb
inc
aaa
pop
fmul
and
inc
sub
arpl
into
sub
mov
mov
cmpsb
repz
push
imul
or
xor
dec
inc
or
sbbb
mov
mov
jp
jp
and
movsb
scas
ljmp
dec
push
xor
pop
adc
nop
xchg
scas
inc
mov
xchg
lods
shlb
das
jns
xchg
cltd
adc
mov
xchg
adcb
inc
pop
and
dec
push
int
adc
adcb
popa
add
sbb
push
je
std
nop
out
subb
stc
mov
fists
push
xor
or
ljmp
std
out
aaa
jle
mov
insl
std
test
ljmp
inc
out
adc
jns
std
in
sahf
xor
sbb
fldenv
sahf
into
fmuls
out
adc
insb
mov
arpl
xlat
hlt
fs
inc
bound
rcrl
lcall
mov
imul
nop
sbb
jl
cmp
jne
cmp
sub
ja
fwait
and
inc
adcl
adc
sub
pushf
jne
cmc
ss
lret
push
cmp
aas
push
test
xor
cli
dec
shlb
push
adc
dec
pop
call
or
adc
pop
test
inc
loope
les
and
and
xchg
shll
cld
push
cmp
jno
push
inc
aas
call
mov
pop
jge
aaa
push
jne
in
inc
jb
shrb
xchg
push
mov
ss
cmpsl
bound
jb
or
cmpsl
arpl
fcmovnbe
out
or
idivl
push
test
ljmp
out
dec
push
fldenv
scas
and
xchg
xchg
cltd
std
push
test
sub
jmp
stos
idivb
gs
fldl
gs
push
cmp
push
dec
xchg
xlat
lods
inc
or
or
out
push
pop
xchg
mov
xchg
jg
scas
cmp
xor
stos
xor
jb
test
movsb
sahf
daa
ss
popa
stc
xchg
sub
pop
push
mov
shll
add
and
xchg
push
roll
xchg
ja
xlat
pusha
mov
je
cld
fdiv
mov
test
mov
xor
xor
fidivl
fdivr
test
ret
stc
sbb
addb
setno
fidivs
cmp
mov
sub
dec
lahf
sub
rcrb
dec
jno
std
push
je
cmp
cmpsb
push
int
pop
mul
push
insb
adc
jle
sti
mov
ds
mov
stos
ss
xor
jp
mov
jle
aam
xor
jno
mov
cs
cmpsl
out
rorl
jnp
pop
mov
mov
int
aam
sbb
nop
pushf
loope
lds
dec
dec
push
pop
jle
add
pop
mov
and
lcall
icebp
jne
lods
mov
inc
int
data16
lret
add
lods
inc
mov
sahf
inc
arpl
and
dec
mov
loop
inc
pop
lods
mov
mov
int3
lock
xor
movsl
ja
mov
push
aad
divl
push
shl
cmp
add
add
xor
add
add
push
push
daa
mov
inc
int
hlt
cmpsl
in
sub
lret
jo
aaa
jae
ror
sub
add
not
xor
push
push
aam
scas
rorb
test
test
fcoms
push
daa
jbe
call
or
jbe
loopne,pn
dec
pop
xchg
dec
inc
lock
mov
add
adc
inc
mov
mov
cmp
push
fstl
stc
push
dec
add
xor
pop
pushf
dec
clc
sub
lods
cmp
out
jae
adc
je
aad
insb
pop
enter
scas
xor
movzwl
mov
add
cmp
mov
push
outsl
les
daa
mov
xor
dec
loop
test
xchg
lea
lods
stos
inc
sub
ror
xchg
sub
jge
and
mov
out
and
loopne
movsl
mov
clc
cmc
cmpb
out
into
push
cmp
add
push
pop
jecxz
out
push
movsl
cli
mov
fmull
jbe
push
push
out
push
rcrl
cs
xor
mov
lret
jp
jmp
insl
inc
je
loop
jecxz
into
adc
imul
jb
stos
add
jmp
andb
cmpsl
sbb
inc
mov
fisttpl
out
or
inc
inc
add
dec
cmp
push
dec
sti
scas
fwait
icebp
jo
and
rcrl
jg
mov
ficompl
sub
mov
or
scas
fcomps
mov
jbe
into
cmpl
sbb
pushf
aam
add
jmp
dec
xchg
call
cmpsb
pop
mov
sbb
cmpsb
mov
jo
xchg
adc
insb
fnsave
jns
jp
cltd
stos
movsl
add
jle
xor
mov
adc
fidivrl
inc
daa
mov
loope
int3
out
pushf
ds
js
cs
pop
dec
xor
jns
imul
lock
pop
inc
test
add
ds
cmp
inc
mov
cli
call
mov
stc
xor
xlat
xchg
test
leave
jle,pn
xchg
arpl
test
cmp
fsubl
mov
jbe
daa
pop
mov
ret
sbb
mov
call
test
xor
push
loope
cwtl
rcrl
dec
lock
and
fwait
insb
fwait
jns
mov
in
jmp
cli
xor
lds
or
aam
dec
ret
xchg
lret
xor
pop
mov
push
xor
sbb
or
mov
loopne
in
imul
call
jge
add
push
mov
jg
subl
adc
cmp
into
and
js
pop
jae
xchg
mov
dec
sar
cmp
pop
out
test
dec
lret
jbe
fcmovne
cmpb
xor
and
or
or
pop
enter
add
dec
in
imul
std
mov
sbb
fldenv
ret
scas
mov
inc
xlat
lods
cs
add
sub
cli
pushf
push
jle
fcompl
jp
adc
add
imulb
aad
sbb
adc
repnz
or
clc
xchg
cltd
cmp
pop
add
cmp
in
movsl
repnz
addb
pop
mov
data16
xchg
mov
into
jg
jmp
jne
mov
xor
lods
fldt
xchg
xor
repz
fstpt
add
sub
adc
and
testl
xor
testb
in
xor
push
fwait
cmpsl
mov
lcall
repz
and
push
ja
push
cmp
push
inc
jb
ret
mov
enter
xor
je
jne
mov
lds
jge
fidivs
dec
cmp
lahf
das
pop
add
pop
icebp
sbb
sub
outsb
loop
xchg
pop
push
mov
ljmp
leave
xchg
sar
insb
mov
je
mov
push
jp
nop
mov
test
popf
dec
jp
icebp
fwait
stos
adc
jl
lcall
cmpsb
sbb
mov
adc
xchg
icebp
push
dec
cmpl
lcall
jne
daa
out
fisubs
rclb
negb
push
subl
inc
mov
mov
or
in
push
fsts
stos
test
push
sub
dec
in
push
ret
pop
sbb
push
js
inc
push
xlat
mov
push
or
mov
jns
adc
int3
dec
inc
popf
fwait
mov
cld
outsl
sub
ficoms
popa
inc
pop
ljmp
cmc
push
ret
cld
jecxz
ljmp
mov
jmp
out
xor
xchg
mov
in
lcall
idiv
push
sub
jmp
push
dec
or
outsb
xor
adc
je
sbb
and
fistps
stos
mov
fsts
mov
add
jns
leave
rolb
loope
lods
outsl
ljmp
testb
add
ret
push
pop
cmp
sub
fcoms
das
mov
sbb
cmp
push
mov
je
cs
test
aaa
popa
clc
adc
ss
cmp
jno
mov
jb
out
fdivs
insb
push
int
add
out
mov
clc
jae
loopne
jg
jb
jnp
stc
sbb
setl
insb
jp
loop
sbb
into
xor
adc
ljmp
push
add
enter
loopne
loop
xchg
push
test
decb
xchg
es
jno
jno
icebp
and
push
test
jno
sbb
ret
out
adc
test
es
test
mov
inc
xor
fldl
outsb
push
xor
mulb
push
cmp
lods
je
aaa
mov
aaa
cmc
sub
scas
inc
push
mov
mov
gs
push
out
jl
sub
js
push
or
jne
fwait
inc
push
xchg
and
cmpsb
add
ss
xchg
jbe
out
pop
ror
into
mov
into
pop
loop
imul
inc
cmpl
push
ds
sbb
cmp
inc
mov
sbb
fs
dec
and
adc
sbb
mov
clc
out
mov
aaa
and
inc
push
call
fwait
and
test
insl
pushl
movsb
xor
call
imul
dec
inc
in
push
int3
arpl
and
jl
and
mov
add
nop
fidivrs
jnp
test
std
dec
inc
lea
jle
jnp
aad
mov
jo
lahf
push
insl
sahf
pop
stc
shll
or
inc
pusha
push
jmp
push
xchg
ja
orb
or
sahf
int
and
imul
cmp
pop
and
pushf
jae
dec
xchg
jnp
pop
jno
in
inc
test
mov
xor
add
xchg
sub
shll
pop
stos
jge
or
lcall
lcall
clc
vpmacsswd
fucomi
aas
orb
loopne
adc
mov
movsl
sbb
imul
test
dec
jmp
rolb
pop
adc
cmpsb
push
es
dec
enter
ljmp
sbb
mov
inc
test
leave
mov
shll
gs
stos
leave
int
das
scas
mov
bound
xchg
loopne
pop
sub
mov
not
push
ret
test
roll
push
adc
xchg
ja
and
clc
add
in
ljmp
ss
in
pusha
ffreep
push
scas
mov
aam
jge
daa
adc
movsb
lds
adc
push
jnp
call
xor
jbe
pop
aas
dec
pusha
pop
xlat
dec
xchg
lea
mov
les
lods
adc
cmp
push
sbb
push
sbb
into
sbb
es
arpl
call
mov
imul
xchg
outsb
mov
in
dec
mov
inc
mov
mov
pusha
hlt
loopne
lret
sti
mov
loopne
add
mov
adc
mov
sbb
mov
daa
inc
sub
cli
push
mov
pop
clc
data16
sbb
pop
popf
addr16
ds
push
insl
xlat
sbb
imul
outsb
fimull
mov
mov
inc
dec
loop
xchg
out
clc
test
shll
mov
push
icebp
push
movsl
and
into
inc
xchg
jnp
call
cld
aad
outsb
mov
icebp
jl
jbe
fsubrs
cwtl
xacquire
out
xor
negb
aam
push
ret
hlt
xor
test
sbb
mov
add
sub
mov
movb
cli
push
icebp
dec
mov
jmp
rcrl
cmp
pusha
jmp
mov
pop
cwtl
movsl
xchg
sub
adc
iret
test
es
mov
cli
xchg
out
stos
add
cmp
stc
dec
add
mov
push
stos
lret
cli
dec
pop
fcoml
xchg
xchg
sbb
dec
pushf
je
adc
sarb
cli
sub
inc
fldt
je
push
dec
cmp
jae
sub
fwait
or
jp
xchg
lods
fwait
data16
dec
mov
mov
lret
clc
arpl
inc
loopne
adcb
adc
inc
leave
pusha
hlt
mov
insl
push
or
or
shll
cmp
in
cmp
xor
pushf
or
lods
jmp
mov
repz
xlat
xchg
inc
and
mov
mov
adc
loopne
outsb
add
jno
mov
shlb
pop
repnz
ja
dec
mov
jns
sbb
out
bound
xor
sub
dec
cld
push
jbe
or
ret
cs
pop
inc
std
pop
loop
pop
icebp
mov
shlb
push
in
pop
ret
ja
hlt
adc
int
sub
inc
cmp
jb
mov
push
pushf
sub
fsts
pop
adc
xor
xor
mov
or
shll
mov
jmp
and
in
pop
lahf
xchg
roll
cld
mov
repz
inc
sahf
mov
lret
lcall
xchg
xor
push
push
cmc
mov
dec
sub
xor
pop
xor
divb
test
and
mov
lret
dec
mov
mov
movsl
sbb
lcall
ret
mov
sbb
sub
dec
xlat
mov
test
mov
push
or
dec
outsl
push
shlb
cwtl
rorb
imul
js
lds
adc
fdivrl
shlb
mov
les
out
or
xchg
and
fistps
cmp
mov
testl
gs
stos
inc
addb
out
mov
outsb
shr
fcomip
dec
sub
jp
addr16
loop
das
adc
sarl
pop
push
out
push
pop
xchg
int3
outsb
add
insb
and
xor
lea
rcr
mov
lods
push
addr16
lds
push
and
cmp
mov
test
pop
inc
mov
int
fsub
dec
dec
cmp
cmp
add
mov
pop
popa
addb
outsb
mov
jno
push
pop
dec
jns
jle
sbb
or
shlb
sbb
outsb
jb
out
js
sbb
lock
ljmp
dec
mov
adc
xchg
or
sbb
daa
bnd
mov
hlt
jl
push
push
sub
jl
push
lret
mov
fs
shl
push
mov
addr16
enter
jns
je
dec
mov
outsb
dec
dec
sbb
mov
lcall
je
mov
clc
mov
push
out
xor
data16
and
xor
ret
xchg
mov
adc
jb
xchg
sub
sub
aad
and
sub
cmp
jge
and
adc
mov
fsubrs
sub
xchg
repz
mov
pop
mov
lahf
stc
dec
ljmp
cmp
mov
lds
pop
test
or
pusha
xchg
sub
repnz
fucomi
ffree
std
cmp
sbb
rcrb
imul
mov
fnstcw
out
in
notb
in
lock
popf
call
cmc
sub
mov
ret
pop
push
fdivl
jg
imul
mov
icebp
push
imul
jo
sahf
sbb
dec
les
icebp
adc
and
fsubrl
stos
pop
fwait
pop
call
push
call
add
mov
adc
mov
popa
shrl
in
enter
push
mov
mov
cmp
sti
pop
pmulhw
mov
mov
in
mov
popa
in
xchg
inc
fstps
jbe
adc
or
jle
xor
popf
jne
bound
push
xchg
lcall
clc
cmpb
dec
sahf
adcl
sbb
xchg
iret
fidivrs
dec
in
lods
pop
ret
das
cmp
insb
inc
pop
sbb
lock
dec
xor
sbb
gs
bound
cmp
add
inc
xchg
inc
push
xor
cli
or
ficomps
mov
mov
push
xor
inc
mov
idivb
mov
out
ret
jae
out
mov
pop
imul
cmpl
add
fstps
mov
std
pop
mov
fiadds
mov
fdivrl
imul
inc
call
aaa
into
ljmp
inc
aaa
lret
jae
or
or
pop
mov
push
sub
xchg
mov
jne
cmp
cmpsb
lahf
adc
mov
imul
cld
cs
and
inc
adc
inc
xchg
mov
fstpl
adc
mov
mov
shl
jg
push
jmp
loope
in
js
sub
cmp
mov
mov
jns
add
dec
mov
out
inc
xlat
mov
add
jg
imul
xlat
mov
push
stc
sbbl
inc
or
paddw
cli
lea
inc
sbb
cmpsl
jp
xchg
jmp
icebp
sahf
mov
adcl
fst
clc
ja
ljmp
sbb
ss
int3
lods
lods
jae
pop
xor
lods
fisubrl
pop
pop
enter
test
push
ds
jg
cld
nop
shlb
sbb
mov
dec
out
dec
inc
xor
or
and
fs
jns
xchg
jge,pn
fisubs
pop
outsl
dec
add
adcl
call
fwait
inc
fdivrs
pop
sbb
insl
jge
jge
fdivs
xor
ret
xor
insl
ret
loope
xlat
push
sbb
mov
dec
sbb
js
xor
imul
pop
repnz
in
lcall
movsb
sbb
sbbl
mov
enter
fnstenv
mov
out
push
hlt
loop
sub
sbb
push
mov
js
leave
add
out
shl
xchg
or
out
mov
push
xor
push
mov
jge
cmp
lock
push
mov
fdivrp
daa
mov
je
add
inc
aaa
clc
or
in
sbb
call
sti
test
sub
decb
sarb
test
test
mov
or
fldt
leave
lods
test
sbb
and
fnstenv
call
in
xchg
test
dec
popf
jge
dec
mov
clc
dec
movd
jg
mov
test
xor
outsl
pushf
cmpl
test
jbe
mov
mov
stc
fbstp
mov
lret
out
rcrb
push
mov
and
lods
ja
int3
mov
jnp
lret
xor
sbb
mov
clc
pop
adc
stos
inc
das
nop
adc
dec
mov
push
repz
nop
dec
or
clc
mov
gs
push
mov
push
icebp
or
sti
adc
shrl
fnstsw
mov
mov
out
mov
and
das
fiaddl
xchg
ret
ja
and
out
add
in
lds
or
arpl
ficoms
jmp
inc
xor
outsb
and
mov
cmpsb
clc
mov
stos
jmp
push
mov
aam
movsl
cmp
daa
add
mov
loop
mov
push
xor
mov
shrb
or
lods
pop
repz
add
nop
daa
xchg
xor
sti
outsl
jb
cli
xor
sbbb
cmp
dec
mov
ja
mull
push
lds
mov
inc
orl
or
mov
shlb
stc
pop
out
dec
das
lock
mov
ja
sti
aaa
into
mov
dec
fsubs
fldcw
add
int
and
repz
aaa
test
add
inc
fsub
and
sbb
mov
xor
mov
inc
xchg
movsb
jns
jo
sti
movsl
inc
add
andl
subb
cmpsl
lret
push
xor
mov
push
push
fnsave
lods
pop
cmp
sbb
dec
lds
or
repz
stos
ja
add
push
mov
dec
jbe
sbbl
jmp
enter
or
cmpsl
add
mov
sarl
inc
rcrl
dec
scas
mov
pop
sbbl
and
sbb
lcall
daa
jns
push
jmp
mov
imul
mov
call
cmc
push
out
cpuid
aad
data16
dec
js
hlt
inc
je
adc
push
std
nop
fnsave
sar
push
fsubrs
mov
xchg
shlb
mov
or
mov
out
cmp
std
lahf
jl
xchg
fs
cltd
xlat
adcb
cmp
test
inc
pop
es
fidivrs
popf
icebp
pop
cmp
ret
inc
scas
xor
pop
xor
cmp
or
or
push
jo
sbb
dec
and
pop
cmpsb
mov
mov
out
icebp
push
cmp
push
add
pop
idivb
or
pop
xor
add
int3
lret
mov
xchg
dec
mov
aad
mov
adc
mov
ret
test
out
out
aas
sbb
shlb
push
loope
imul
mov
adc
aad
pop
jge
stos
cmpsl
in
lret
dec
loop
jo
addb
sub
add
lcall
cmpsb
mov
xchg
pop
mov
add
cltd
adcb
ss
xlat
icebp
pop
pop
sarb
fs
sahf
pop
jmp
ficomps
xchg
adc
dec
fxch
loope
mov
adc
int3
inc
pop
outsb
test
mov
stc
or
movsl
enter
xchg
sub
outsl
or
divb
ds
pop
repz
xchg
pop
fsubp
lods
cmpsl
dec
mov
mov
mov
iret
jbe
inc
stos
add
xor
jae
xchg
or
sbb
mov
mov
sub
mov
fwait
or
cli
stos
or
test
pop
lahf
mov
daa
das
xlat
inc
or
xchg
add
pop
and
ss
pop
sti
idivb
cmp
adc
aaa
dec
inc
cld
inc
filds
lcall
add
adc
and
das
adc
jo
scas
mov
pop
xlat
mov
cmpl
imul
sar
cli
sub
int
pop
mov
fnsave
mov
inc
mov
sbb
mov
cmp
leave
je
imul
xlat
movsb
or
loop
add
xchg
enter
or
push
das
jmp
xor
out
loope
push
outsl
sub
sub
outsl
push
pusha
lea
in
mov
mov
lahf
fsubrp
popa
and
mov
lods
outsb
add
sbb
or
adc
inc
mov
push
cmpsb
add
inc
jecxz
int
push
add
xchg
rorl
add
nop
xchg
mov
aam
mov
inc
push
xor
rcll
pop
hlt
movsl
adc
pop
ds
sar
push
mull
inc
jmp
fcmovnbe
fcmovne
pop
mov
stos
xchg
in
xchg
inc
ja
out
mov
lock
or
adc
pop
out
pop
loop
stos
push
dec
add
fistl
outsl
push
out
frstor
rorb
inc
cs
adc
sub
fidivl
cltd
fs
les
jp
dec
cmpsb
jge
or
mov
jle
mov
pop
into
cmp
mov
mov
das
scas
xor
mov
xor
pop
in
test
mov
cwtl
lock
xchg
in
add
and
aas
in
imul
jno
xchg
fildl
out
lds
ss
or
push
mov
pop
enter
leave
fwait
push
push
jmp
xchg
shlb
jb
push
inc
inc
jmp
jl
frstor
adc
xchg
jbe
cltd
jbe
mov
popa
jns
int
add
dec
out
pop
test
xchg
inc
mov
mov
sar
not
fldl2t
pop
sbb
jmp
pushf
push
or
iret
mov
xchg
xor
setno
test
mov
les
adc
lods
xchg
cli
or
call
shll
fldl
mov
mov
add
mov
ja
xor
fbstp
lcall
adc
sbb
insl
lods
insb
cmovbe
cmp
in
adc
jae
icebp
push
mov
push
movsl
bound
cmpsl
scas
add
getsec
mov
ret
push
lods
inc
nop
and
inc
mov
jae
in
jl
aam
pop
adc
aas
sahf
loope
and
sub
test
mov
aad
clc
icebp
sti
dec
popa
sub
inc
mov
std
jb
outsl
jo
add
fsubs
lock
data16
aaa
add
mov
push
lahf
pusha
pop
add
clc
sahf
add
push
scas
mov
xlat
jnp
add
cmp
jecxz
shr
insl
adc
notb
mov
push
int
add
out
hlt
les
push
ja
mov
and
jmp
pop
stc
shr
out
mov
push
mov
push
mov
popf
dec
mov
cld
adc
xchg
test
into
push
inc
arpl
sub
and
jmp
xor
pop
xchg
xchg
jle
pop
test
or
mov
scas
in
dec
stos
add
sti
dec
cmpsl
sub
cmpl
jmp
lahf
fimuls
pushw
mov
sub
cmp
popf
xchg
jle
imul
call
mov
pop
lods
sbb
popf
fnstcw
out
jle
out
xor
outsb
sub
pop
lahf
mov
insb
fwait
aad
out
or
cli
or
jl
xchg
sub
lret
xchg
jne
sub
xchg
int3
cmpsl
mov
sub
mov
cmp
ret
outsl
sub
pop
xchg
mov
push
mov
or
xor
push
jmp
test
test
dec
and
jne
fcoms
xchg
or
fidivrl
pop
dec
aad
fmuls
int3
dec
pop
inc
jge
cmpsb
jge
xchg
test
mov
mov
and
jb
cld
in
jne
add
xor
xorl
xchg
test
cmp
fcmove
testb
mov
add
cmp
sub
f2xm1
mov
and
out
and
sbb
pop
cltd
cmp
xor
addr16
cltd
xlat
mov
mov
les
loopne
xor
outsb
jl
mov
dec
iret
mov
pusha
insb
testl
lods
pop
lods
pop
pusha
jae
dec
jno
out
xchg
inc
out
lock
jmp
fdiv
int3
and
outsb
outsl
or
std
daa
lock
aad
mov
fisubs
jns
push
sub
fwait
shr
les
push
lea
jnp
fdivrs
aas
jbe
cmp
jecxz
pop
leave
pushf
aas
lret
pop
outsl
out
dec
loopne
add
adc
mov
add
out
jo
ds
xorb
imull
mov
cmpps
dec
jae
pop
in
xchg
rcll
adc
outsb
mov
pusha
push
cwtl
dec
rorb
pop
push
sahf
and
sub
rcrl
jnp
lods
adc
lahf
ret
jnp
jecxz
into
sbb
jns
dec
mov
pop
dec
push
aaa
mov
popa
bound
xor
or
daa
aam
jb
es
mov
repz
dec
pop
mov
add
push
inc
notl
bswap
lret
jge
mov
cli
xchg
std
cltd
movsl
dec
repnz
fldcw
sub
dec
in
dec
cmp
inc
dec
inc
lock
or
xchg
arpl
pop
aas
mov
aaa
mov
adc
mov
in
mov
int
lods
inc
cmp
lock
push
clc
cmp
jmp
lret
or
sbb
dec
out
adc
fcmovu
pop
push
mov
imul
pop
fwait
add
dec
jecxz
xchg
shrl
xchg
push
mov
mov
pop
or
push
sbb
xchg
test
add
cmc
arpl
xlat
gs
dec
int3
add
gs
push
shl
test
negl
dec
mov
push
cmp
push
pop
fistpll
and
cmc
pop
cli
or
fisubl
lcall
xchg
mov
push
lea
mov
xor
inc
xor
or
loop
repnz
jbe
sub
aaa
out
push
outsb
outsl
adc
push
ss
fnsave
in
adc
popa
lret
push
sub
call
popf
push
cld
popa
or
inc
push
sub
mov
push
jp
cli
aas
cmpsb
outsb
test
xor
adc
jge
xor
sbb
xor
xlat
jle
sbb
daa
fstl
fcoml
mull
push
pop
pop
inc
sbb
jle
adc
mov
mov
and
jae
cli
xchg
sub
mov
rcr
inc
lea
loop
and
cmc
repz
sbb
jecxz
push
mov
adc
subb
out
add
fiadds
sahf
jmp
addr16
call
lods
cmpsb
mov
xor
adc
and
loope
insb
sbb
das
inc
push
add
push
cwtl
pop
icebp
in
cmpsl
in
pop
scas
cmp
mov
ret
and
pop
stc
inc
mov
jo
fdivrl
pop
push
imul
inc
fst
out
jns
ret
sbb
dec
mov
jp
sub
xor
rorb
into
faddl
inc
daa
ljmp
cmp
and
jp
xor
mov
mov
cmp
ja
add
aas
clc
test
mov
or
xor
inc
cmp
pushf
dec
jne
into
sbb
lods
and
test
cmpsb
sbb
mov
stos
hlt
sub
icebp
xchg
or
sub
xor
push
icebp
sbb
ret
outsl
pop
mov
pop
test
enter
neg
jb
orl
xor
lahf
div
cmp
mov
add
fmull
ljmp
xchg
jbe
mov
cwtl
mov
lds
mov
in
sbb
push
push
out
pop
pop
mov
popf
and
mov
aam
sti
filds
adc
scas
dec
inc
push
gs
or
int
ljmp
mov
xor
push
jmp
aam
lret
sbb
pop
pop
and
xchg
mov
ljmp
jne
clc
mov
loop
lods
into
mov
bound
adc
stos
pop
mov
enter
inc
push
cld
push
adc
loopne
sbb
sbb
insb
cmpsb
cmp
test
cmp
or
and
fstpl
sti
fucomp
adc
mov
pop
clc
movsb
push
cmpsb
mov
dec
fbstp
push
imul
and
pop
dec
inc
sbb
push
int
out
in
stc
xor
xchg
and
cwtl
cmp
push
fnsave
adc
lods
lret
adc
xlat
xchg
insl
mov
movsb
mov
pop
ljmp
out
test
aaa
or
sub
ret
fisubs
jno
js
mov
jp
xchg
mov
mov
fcoml
xchg
or
and
sbb
or
mov
popf
jge
loopne
pushf
mov
lahf
xlat
sub
int
imull
jmp
jbe
push
mov
scas
pop
pop
mov
mov
adcb
mov
ja
int3
fbstp
shrl
cld
inc
xchg
xor
clc
testb
test
sub
xor
das
pop
sbb
mov
lds
aad
rorl
in
clc
sbb
sbb
cmp
sbb
insl
xlat
cld
mov
mov
mov
mov
in
stos
clc
call
inc
divl
xor
ja
jle
test
leave
jle
addb
sbb
das
les
pusha
fcmovnb
push
inc
mov
mov
std
out
sbb
jbe
or
cltd
xchg
mov
xor
fs
mov
dec
jns
inc
cli
cmpsb
mov
fsubl
pop
pop
and
std
cltd
movsl
pop
incl
adc
or
push
lods
jl
push
mov
push
xchg
mov
mov
fldenv
pusha
mov
pop
daa
push
lods
cwtl
outsb
pop
sbbb
lods
ljmp
mov
sbb
push
arpl
cli
mov
notb
xchg
ja
sbb
aaa
test
push
mov
rolb
mov
sbb
sbb
push
fldl2e
cmp
icebp
push
pop
xor
dec
mov
sub
or
mov
or
dec
aas
ljmp
testl
inc
mov
adc
lods
jae
nop
addr16
aas
loop
sbb
bound
sti
cmc
cmp
mov
cli
lds
mov
movsl
test
push
mov
or
shrb
addr16
pop
imul
leave
mov
je
rorb
mov
mov
in
mull
jns
cmp
cmp
xlat
cs
cmp
xchg
pop
clc
clc
dec
data16
outsl
push
popf
inc
pop
rcll
lea
mov
xlat
xor
xor
daa
arpl
cmpsl
cmp
dec
leave
cmp
or
push
jo
push
negl
ja
sbb
sub
cmpsb
enter
inc
out
and
in
cmpsl
xor
jae
and
jb
test
push
adc
or
adc
jge
inc
cmpsb
sbb
jae
cmp
inc
adc
sti
into
mov
std
mov
js
cli
sbb
mov
add
mov
fwait
xchg
mov
or
mov
stos
adc
fdivr
jnp
rcrl
adc
mov
sbb
mov
inc
sbb
hlt
pop
popa
lods
pushf
scas
fldl
loop
outsb
into
cmp
stc
mov
es
gs
movsl
cwtl
scas
ret
inc
or
jecxz
push
adc
push
fnstenv
mov
xchg
inc
testl
dec
fwait
xchg
and
inc
popf
fs
sbb
popa
xor
jne
pop
adc
lods
jmp
adcb
xchg
pop
sbb
mov
jo
stos
movsl
lret
jg
repnz
std
mov
les
insb
cli
jne
enter
add
or
repnz
or
dec
push
shrl
push
in
inc
push
sarl
pop
outsl
bound
pop
hlt
arpl
push
call
repz
ljmp
mov
imul
add
arpl
sbb
add
push
or
scas
outsb
in
movsb
stos
mov
xchg
int
jns
dec
loopne
aas
sub
xchg
push
mov
leave
andl
mov
icebp
adc
push
movsb
add
cld
pop
push
enter
ret
pmulhuw
xor
ret
clc
xchg
sub
cld
xchg
test
bound
lds
orl
pop
jo
arpl
out
xorb
std
lods
pop
addr16
insb
into
std
sbb
stos
aaa
inc
add
scas
push
mov
stos
sub
fnstsw
loopne
jne
jg
cwtl
stos
mov
fldt
fwait
or
std
inc
rcll
dec
rcrl
cmc
mov
adc
dec
pop
xor
lock
std
push
in
jmp
sti
lret
fidivl
mov
clc
jae
inc
stos
xchg
ficompl
jb
jmp
jg
bound
divl
mov
jg
in
push
insb
sbb
mov
arpl
mov
mov
mov
test
adc
xor
mov
mov
inc
and
rorl
popa
clc
mov
mov
or
lea
fsubl
jge
inc
mov
int
loopne
xor
and
jmp
mov
push
sub
or
shlb
xchg
adc
jp
cltd
arpl
xor
mov
push
sub
icebp
insb
push
jg
or
fcoms
xchg
pop
or
push
sub
mov
pop
mov
sbb
cmp
filds
inc
xchg
mov
aad
fildl
ja
jmp
and
stc
pop
sahf
sub
mov
fdivp
ret
hlt
push
gs
aaa
icebp
jl
rcrl
add
or
movsl
cmp
inc
nop
jb
mov
mov
jmp
jnp
and
mov
rclb
mov
xchg
adc
mov
inc
inc
popf
stos
xor
jmp
xchg
mov
das
out
ret
push
dec
add
mov
daa
xor
inc
pop
sub
addr16
jne
imul
mov
dec
mov
mov
loop
movsb
jge
hlt
cli
xorl
sbb
dec
jb
cli
mov
iret
mov
mov
dec
or
es
sub
and
xchg
sub
and
pusha
mov
pop
adcb
sub
sub
mov
add
in
jae
loopne
in
scas
dec
lds
mov
jp
leave
push
xchg
fwait
pop
loop
cmpsl
testl
popa
mov
ljmp
test
dec
in
sahf
xchg
or
or
fisubs
cmp
or
lcall
arpl
lods
jmp
negl
jecxz
and
nop
mov
cwtl
cmp
call
insb
jns
mov
repnz
push
data16
pop
lock
push
xor
mov
mov
dec
into
xor
fcomip
mov
in
test
cmp
sbb
dec
fcmovnbe
and
mov
fstpl
out
cmpsb
mov
fsubs
push
or
je
cmp
mov
insl
xor
pop
cmc
in
push
in
movsl
leave
add
xchg
je
test
xchg
or
mov
cmp
inc
inc
addb
jbe
aad
cmp
hlt
dec
dec
pop
cmp
pop
mov
mov
mov
pop
add
lods
pop
mov
mov
xchg
push
addr16
xor
test
xor
jbe
adc
dec
pop
mov
cmp
cmp
sub
pop
repnz
push
sbb
mov
pushf
fs
outsl
mov
mov
adc
mov
jbe
jbe
pop
out
mov
jbe
fsubrp
pop
adc
dec
test
sub
push
into
or
push
in
pusha
adcl
jae
sahf
jbe
rcrl
jae
loop
mov
icebp
dec
in
pop
xchg
decl
lods
adc
xchg
scas
int3
outsb
jl
adc
and
stos
scas
call
jo
sahf
lods
push
inc
inc
fwait
add
in
mov
jl
sub
dec
ss
dec
loopne
jge
jnp
fwait
cmpsb
cmp
lcall
mov
lods
pusha
jmp
shrb
pop
add
sub
cmp
out
inc
pusha
testl
jle
inc
int
sti
inc
cmp
xor
aaa
andb
aas
in
and
mov
jb
jne
fcoml
ss
inc
push
ljmp
jno
push
inc
xor
dec
out
xchg
movsl
mov
pop
sbb
mov
nop
test
pop
imul
cmpsb
les
jge
push
inc
or
sti
cmp
jne
nop
cmp
add
mov
ret
inc
andl
pop
cltd
ja
clc
pop
sbbb
jl
sbb
mov
pop
dec
roll
int
mov
rcrl
stc
xchg
out
mov
dec
faddl
push
xor
scas
mov
test
dec
fisttps
xor
xchg
jmp
pop
pop
xor
or
sbb
enter
mov
cltd
jg
mov
adc
test
pop
add
dec
xor
mull
in
sub
gs
or
sahf
das
icebp
cli
cmp
shll
xor
ljmp
jge
lea
adc
inc
adc
rorb
lcall
test
mov
push
lods
xor
fucomip
std
nop
lods
dec
dec
push
inc
loope
cmp
jecxz
cmp
ret
movsl
subl
and
mov
in
jmp
mov
aaa
push
jp
ss
in
mov
ds
inc
lahf
ss
fsubs
stc
insl
jb
das
sahf
scas
sbb
nop
call
sub
outsl
rcrl
xor
cmovbe
mov
cmpsl
sahf
xor
mov
leave
lcall
or
sti
sti
popf
xor
mov
daa
mov
jecxz
push
in
dec
xor
xlat
fcmovb
stc
mov
test
or
int
out
gs
mov
sbb
mov
mov
jns
stc
clc
push
frndint
sbb
leave
add
out
pop
mov
loope
jle
add
pusha
test
cmpsl
mov
cwtl
cs
sub
mov
call
subl
mov
dec
out
xor
or
ja
je
ja
fisubrs
push
add
frstor
or
cltd
ss
sahf
xor
cmc
add
xor
js
cmp
fbstp
jmp
push
mov
dec
push
outsl
mov
dec
test
aad
cmp
xor
fs
out
into
and
int
cmc
xor
dec
arpl
outsb
mov
or
push
mov
ficoms
xchg
cs
into
jecxz
sbb
and
mov
cld
mov
sub
cltd
fnstenv
push
out
fidivs
addr16
mov
test
push
inc
enter
rol
jb
push
xor
xlat
shll
push
pop
imul
and
and
push
push
fcoml
cs
mov
test
xchg
xchg
lods
lret
push
dec
pop
xor
scas
adc
nop
movd
bound
mov
fnsave
pop
mov
mov
xorb
aas
out
sub
aam
add
sbb
mov
gs
sbb
loope
dec
add
xor
data16
xchg
jge
sbb
dec
pop
cltd
inc
outsl
fldt
inc
dec
in
fnstsw
cmp
push
jle
dec
das
jbe
fs
push
mulb
add
pop
push
and
cmp
dec
jl
aam
sbb
outsb
sub
popa
loopne
adcl
loopne
mov
movsb
mov
mov
or
rcll
push
add
pop
jmp
test
jae
mov
cli
sbb
arpl
inc
push
aaa
add
pop
xchg
nop
insl
dec
gs
mov
or
and
pop
add
out
notl
jl
loopne
mov
lods
cs
add
mov
jo
mov
idivl
je
pushf
or
hlt
mov
fisubrl
mov
lds
add
dec
sub
add
lods
jg
and
out
inc
push
or
shr
mov
pushf
cli
mov
add
push
or
inc
jmp
pop
pop
jmp
test
ljmp
pop
dec
dec
jl
lcall
and
aaa
mov
ss
repz
leave
mov
je
fadd
and
out
push
cltd
pusha
sub
jns
loopne
imul
or
and
lds
mov
pusha
push
dec
push
mov
lcall
cwtl
dec
std
ret
jo
lret
int3
adc
and
adc
push
lds
js
mov
lock
mov
mov
jns
mov
lds
enter
aaa
inc
outsl
inc
negl
inc
or
shrb
sub
dec
loop
sbb
imul
pop
add
div
sbb
ja
sub
sbb
pusha
sahf
inc
sbb
lock
mov
push
jae
sub
mov
jg
in
and
sub
lds
lahf
cmp
cltd
dec
lods
test
fcmovu
ds
adc
inc
lock
ret
arpl
mov
sbb
jl
lods
out
inc
lds
lea
dec
or
jnp
call
lahf
daa
mov
xor
addl
filds
push
mov
in
ja
cmp
jbe
notb
and
adc
and
xchg
lret
sbb
inc
lea
xor
mov
scas
cld
sbb
inc
sti
mov
mov
pop
cmc
jge
test
jge
cmpsb
les
xchg
mov
push
mov
ror
or
cli
lea
inc
fwait
xor
mov
pusha
mov
mov
pop
sahf
lods
fadd
mov
loopne
adc
std
add
cmpsl
or
push
adc
aaa
cmp
mov
sahf
jae
testl
and
adc
fwait
ja
push
jne
jg
push
xchg
fdivl
lods
inc
filds
add
ret
sub
cmp
fs
es
nop
mov
sbb
xchg
ja
popf
jp
into
pop
icebp
adc
pop
dec
dec
aad
mov
nop
mov
push
call
dec
pop
mov
xor
into
sub
test
movsl
jp
adc
into
roll
mov
mov
inc
loopne
mov
jmp
into
test
popf
mov
xor
insb
and
push
xchg
std
xchg
leave
jl
out
fcompl
ljmp
aas
push
aam
shl
ds
sarb
mov
xchg
push
mov
dec
pop
add
adc
mov
enter
inc
mov
xlat
out
cmp
hlt
js
mov
cli
in
adc
incl
mov
mov
mov
or
add
jns
int
jl
mov
scas
push
rolb
jb
sarb
jp
pop
xchg
fldt
dec
cmpsl
push
out
xchg
mov
into
incb
pop
loope
jnp
dec
iret
popa
push
xor
adc
stc
pop
icebp
mov
aaa
scas
mov
insb
cmp
out
addr16
and
jbe
popf
xor
xchg
cmp
mov
out
sub
fists
pop
and
cwtl
mov
stos
jmp
and
addl
sbb
inc
or
add
ror
sbb
mov
push
aam
push
out
test
rcr
jle
fisttpl
shl
mov
pop
outsb
adc
push
pop
pop
repnz
cmp
std
cwtl
pop
out
adc
dec
inc
xor
jmp
adc
sub
aaa
outsl
mov
shlb
sarb
adc
dec
mov
jl
cmpsl
loop
fldpi
fcomip
sbb
xor
cltd
scas
loope
loope
dec
cmp
out
imul
mov
and
stc
xchg
jo
ljmp
lock
test
lahf
pop
in
mov
loopne
add
cmovle
clc
sub
aad
xchg
mov
aaa
fsubrs
and
sbb
cmp
mov
adc
pop
dec
loop
sub
and
movsb
jmp
dec
add
cmp
adc
add
gs
lahf
testl
adc
stos
gs
jmp
fisttpl
add
ficoms
int3
loop
mov
push
aaa
hlt
dec
xor
test
xchg
push
insl
dec
mov
js
jl
out
loopne
lea
lret
outsb
jl
sbb
lea
popa
add
ljmp
insl
dec
adc
mov
dec
ret
jb
xchg
testl
sub
add
jmp
sti
enter
xchg
cmp
out
jo
push
iret
mov
aas
es
ljmp
xchg
cltd
push
push
push
sahf
scas
xor
xchg
push
imul
mov
sbbb
clc
mov
cmpsl
mov
into
fidivs
leave
and
inc
inc
pop
pushf
rolb
and
flds
divl
jno
dec
xchg
cwtl
add
popa
jge
mov
fnstsw
es
mov
or
aad
pop
stc
xor
adc
inc
inc
mov
icebp
into
fdivrl
sub
mov
inc
sub
or
jmp
inc
push
movsl
aaa
xchg
cmpsb
mov
cs
cmpsl
daa
arpl
inc
es
pop
inc
jmp
scas
pop
movsb
cmp
jecxz
loopne
inc
sub
ret
pop
push
adc
xchg
xor
pop
in
add
sub
mov
inc
lcall
dec
fldenv
lcall
push
cmp
xor
add
push
sbb
je
cwtl
adc
jnp
shlb
mov
adc
and
in
negl
push
dec
mov
rcl
arpl
movsl
test
inc
ss
pop
xor
int
mov
les
ljmp
andl
lcall
ror
cmp
jle
cltd
mov
mov
in
loope
cmovbe
mov
sub
iret
cmp
sub
mov
ret
sub
pop
xor
shll
stos
jne
dec
insl
sub
and
jl
adc
xor
jno
dec
dec
imull
shrb
mov
fbstp
repnz
ss
roll
push
fmuls
push
push
push
jne
dec
fstps
mov
push
jns
pop
outsb
sub
xchg
push
sbbl
insl
jge
cltd
xor
lods
mov
push
test
inc
out
xor
pop
jmp
aaa
sub
mov
cmp
insb
cmpb
ret
insb
pop
sahf
sub
in
pop
icebp
push
xchg
add
inc
xchg
repz
cmp
mov
std
fildll
push
push
lock
and
dec
mov
ja
loop
adc
out
inc
bound
lahf
scas
rcll
mov
jle
lods
outsl
outsb
addr16
lahf
nop
popf
jmp
out
addl
dec
jb
out
idivb
fldl
into
pop
hlt
cmp
sub
dec
jge
lock
arpl
pusha
mov
insl
rol
pop
add
cmp
push
fistpll
and
inc
aad
jb
mov
addl
rol
cs
mov
sar
push
out
sub
push
inc
adc
inc
push
push
mov
fnop
mov
xchg
cli
xchg
cmc
test
sbb
das
in
dec
loop
setnp
mov
outsl
movb
dec
in
cmp
arpl
xchg
jo
push
lret
xchg
lods
jmp
pop
sbb
pop
out
sub
popa
repz
jmp
sti
adc
pop
inc
jne
sahf
xchg
call
pop
out
aas
xchg
sbb
ret
in
push
imul
leave
sar
xor
xor
xor
fwait
popa
aad
xchg
cld
testl
mov
adcb
movsl
jb
cmp
imul
jae
push
push
inc
sbb
push
nop
roll
rcr
add
jnp
add
mov
rorl
test
mov
and
inc
jno
sub
ljmp
daa
cmp
test
add
int
testl
lret
or
inc
fsubl
ret
mov
mov
xchg
cmpb
mov
sub
js
mov
push
dec
xchg
mov
bound
jo
mov
mov
mov
loop
sub
cs
rcrb
xor
stos
dec
addr16
mov
out
mov
jne
inc
xor
mov
adc
jnp
cmp
push
adc
push
sahf
jno
sbb
les
fsubr
add
inc
sub
cs
sbb
negl
mov
xchg
pop
icebp
cltd
testb
arpl
loopne
xchg
test
pop
aaa
sub
cld
jnp
mov
mov
and
sbb
push
mov
push
pop
xchg
rcrb
jne
das
jmp
xor
jne
vmread
pop
xor
pop
mov
add
pusha
cmpsl
insb
das
or
fwait
js
pop
lret
and
dec
or
pop
dec
bound
jae
pop
sub
sub
jno
in
cmp
roll
mov
xchg
out
xor
bound
fwait
popa
mov
repz
enter
sti
movsl
in
or
pusha
cmp
out
jb
cltd
jge
shll
mov
fldt
out
inc
inc
movsl
imul
jae
fildll
mov
xchg
xchg
fs
setbe
je
push
mov
pop
push
fwait
scas
inc
cld
sbb
test
lret
js
dec
lds
pop
add
outsl
push
cwtl
es
arpl
push
int3
testl
daa
mov
je
je
aad
aas
xchg
xorb
clc
fldenv
mov
outsl
enter
lret
fs
xchg
dec
cli
inc
iret
jp
movsl
addb
add
subb
pop
mulb
addr16
mov
xorb
pop
in
or
inc
cmpsb
push
jns
fbld
xchg
or
mov
clc
mov
insb
mov
sahf
pushf
mov
mov
xor
ret
pop
pop
push
jl
inc
lock
xchg
inc
inc
pop
mov
bound
sbb
sbb
dec
jle
aas
dec
and
push
ljmp
inc
sub
inc
jns
sub
imul
adc
push
leave
mov
pop
fst
push
je
push
mov
sbb
push
sbb
push
dec
cmp
adc
jge
xchg
and
mov
in
test
sub
loopne
sub
add
lods
movsb
aas
movb
popf
test
loopne
and
push
aas
sbb
je
ret
mov
imul
clc
out
out
mov
dec
push
mov
adc
loop
jae
aam
push
dec
mov
pop
insl
jecxz
add
mov
les
insb
push
add
es
jb
fsub
adc
or
jbe
rcl
es
mov
adc
jno
mov
fldcw
int3
mov
inc
les
pushf
push
jns
mov
sub
movb
jae
sbb
das
nop
lea
lods
fsubr
lret
adc
mov
sub
push
and
imul
addb
pop
xchg
movsb
not
mov
mov
lds
pop
pushf
aas
mov
gs
fisttps
lods
cmpsl
aas
fildll
retw
punpckldq
pop
vpackssdw
cmpl
aad
test
hlt
mov
mov
and
aas
es
xor
bnd
xchg
pusha
ret
out
dec
cmp
aad
addl
dec
mov
push
mov
mov
dec
push
jno
sub
adc
cld
popa
clc
sub
out
inc
out
out
or
sahf
sbbl
ret
filds
cmpsl
xchg
hlt
ret
fwait
add
jbe
mov
pop
fwait
inc
movsb
xchg
in
xor
dec
cmpsb
out
insb
pop
or
or
pop
fidivl
mov
jnp
das
xchg
sbb
aam
scas
dec
into
mov
mov
mov
xchg
xchg
cs
movhps
mov
dec
jmp
add
pop
jbe
jno
mov
sbb
lock
mov
shlb
cli
lea
test
push
mov
adc
jl
mov
pop
icebp
les
imul
mov
out
dec
std
fstpl
jge
jmp
xchg
sub
pop
mov
mov
xchg
bound
cwtl
mov
aaa
ds
arpl
repnz
lahf
lods
add
cmp
int
adc
cld
and
cmp
sub
push
frstor
repz
jne
out
xorb
ret
das
sbb
ljmp
adc
mov
or
mov
mov
jb
movsb
dec
adc
aas
jb
dec
pop
test
add
mov
fwait
fs
and
mov
push
jbe
cltd
inc
mov
arpl
cltd
daa
incb
lods
test
sbb
jmp
sub
mov
push
int
sub
xrelease
lahf
cs
inc
sbb
imul
sbb
push
jno
js
sub
push
pop
outsb
pop
mov
sbb
popf
pop
cmp
cwtl
movsl
push
cmpsb
cmp
in
aad
mov
pop
mov
sahf
cmp
inc
stos
add
js
fadds
push
add
notl
sbb
dec
xchg
in
sbb
clc
xchg
shlb
xchg
add
xchg
idivl
sti
pop
out
in
shll
dec
icebp
mov
stc
ds
fnstcw
aas
dec
sahf
cli
push
loopne
lock
repnz
jae
cmc
movsb
and
lods
sbb
xor
fldl
sbb
int
aas
cmp
push
sub
mov
sub
jbe
cli
cs
xlat
jle
repz
in
inc
je
adc
out
mov
xchg
loop
pop
lods
mov
push
sub
clc
arpl
pop
imul
cli
mov
push
mov
dec
ja
lcall
lea
cmp
pushf
sub
cmp
or
leave
mov
scas
cmp
xchg
pop
les
jecxz
arpl
jnp
aam
push
inc
aas
add
dec
cmpsb
inc
cltd
fisubrl
aad
div
or
inc
push
mov
jmp
and
int3
ret
ficompl
cs
stc
nop
shr
push
ret
xchg
repnz
add
lea
fisttpl
movsl
pop
inc
fs
jno
pop
and
pop
cmp
cli
addr16
aam
nop
inc
ficoms
mov
stos
push
je
int3
jl
mov
jle
aaa
sbb
dec
pop
mulb
lcall
and
sbb
sub
jae
xor
mov
scas
loopne
push
or
shrb
sbb
std
imul
movsl
sub
cmp
mov
aad
adcl
push
inc
dec
inc
push
lahf
notb
cmp
outsl
push
pop
sub
jecxz
xchg
sub
push
jmp
dec
mov
cld
mov
rcl
push
test
dec
xlat
lahf
adcl
push
inc
adc
mov
cmp
mov
add
dec
gs
mov
shr
repnz
mov
and
pop
orb
pop
or
aas
xchg
xchg
xor
insl
add
cli
test
sbb
mov
jp
adc
and
cmp
push
cwtl
adc
mov
lret
push
adc
adc
popa
lret
lea
dec
mov
xchg
jae
mov
outsb
orb
lret
jne
ret
mov
insb
lds
sti
lods
pmuludq
adc
or
and
mov
inc
push
dec
or
pop
dec
mov
cmp
jne
xor
pop
mov
inc
repnz
mov
jmp
xorl
add
mov
adc
pop
jmp
js
jno
add
jo
sbb
xlat
dec
cmp
and
mov
rcrl
mov
jb
jno
jl
mov
push
mov
mov
sub
cmp
pop
idivb
mov
sub
dec
mov
dec
xchg
popf
shrb
pop
jbe
lock
stos
inc
test
fsubrs
add
enter
fsubr
jnp
mov
rcr
cmp
insb
pop
adc
mov
pop
add
aam
cwtl
pop
xor
out
outsb
sbb
xor
xor
ror
pop
fsubrs
sti
jge
pop
or
ret
push
test
lret
xor
push
or
push
push
adc
push
mov
f2xm1
xchg
aaa
cltd
ss
mov
xchg
jecxz
sub
lods
xchg
call
inc
sub
mov
xchg
fs
adcb
mov
shl
sbb
mov
or
ja
xchg
and
loope
sbb
push
xchg
sbb
int3
push
or
mov
lret
mov
cltd
std
adc
std
aam
push
loop
sub
bound
jbe
add
jne
icebp
push
pop
mov
dec
loope
xchg
mov
gs
sbb
decl
xor
pop
dec
sub
scas
out
push
inc
stos
sbb
mov
jmp
or
sub
sub
sub
push
cmp
cltd
insl
js
or
loopne
sub
hlt
push
test
dec
sahf
cmp
adc
xchg
pop
cmc
test
mov
jl
cmpsb
add
adc
ljmp
mov
xchg
mov
mov
adc
mov
mov
addl
popa
bound
rorb
mov
je
inc
fstpt
pop
or
cs
jo
xchg
push
push
sbb
pop
mov
mov
inc
call
cmp
sub
addl
hlt
aas
dec
roll
lcall
and
mov
push
inc
data16
imul
and
xchg
imul
inc
cs
add
call
in
mov
aam
int
fnstsw
addr16
lods
andb
daa
shl
cs
or
mov
jl
lret
mov
mov
in
xchg
mov
in
call
or
test
mov
mov
rcr
ret
std
je
out
mov
jg
scas
or
imul
pop
jnp
xchg
mov
sbb
adc
sub
sahf
mov
iret
pop
das
iret
mov
int
mov
push
xchg
imul
into
push
adc
xchg
pop
fisttps
pop
cmpsl
std
add
pop
fadd
pushf
pop
lods
cmp
adc
and
incb
ret
sub
out
dec
bound
sub
jmp
call
xchg
mov
or
sbb
addr16
xchg
jb
cltd
xchg
outsl
inc
mov
xor
aad
stos
icebp
mov
sbb
testb
dec
cmc
jno
daa
outsl
int
mov
mov
push
ss
outsb
mov
loope
adc
xor
lock
aas
stos
xor
js
push
jge
into
jp
and
jnp
cltd
pop
xchg
cmp
sbb
out
push
lahf
push
inc
add
xor
lock
cmpsb
cmpsl
push
test
mov
lods
mov
in
ret
sub
jbe
dec
dec
das
stos
pop
mov
sbb
dec
jno
enter
sbb
jg
cwtl
fs
sub
lea
adc
stc
daa
pop
sub
es
push
bound
xor
fdivr
xchg
sub
and
cmp
mov
add
int
mov
sub
fistpll
scas
pop
es
sbb
loope
inc
loop
js
ret
stos
stc
je
mov
enter
pop
frstor
inc
sarl
jg
scas
jno
sbb
orb
xor
mov
mov
outsl
leave
addl
xchg
dec
outsl
jl
mov
inc
fdivrs
jp
mov
fs
sub
mov
jmp
push
adc
aaa
movsl
cmp
mov
ret
fbstp
or
mov
int3
mov
xchg
dec
push
inc
lahf
stc
bound
fistl
aad
scas
jae
bound
in
leave
pop
inc
loope
jno
sub
je
mov
and
pop
dec
pop
stos
jl
cmp
xchg
insl
mov
arpl
loopne
inc
dec
push
cmp
push
mov
mov
pop
lret
dec
cmpsb
xor
add
adc
les
fnsave
out
mov
mov
inc
pusha
jnp
ret
pop
pop
xlat
pop
jl
adc
ja
call
lods
divl
je
iret
frndint
lcall
in
xchg
sub
xor
shrb
popa
insb
xor
aas
mov
sub
xchg
rcr
add
sbb
add
stos
addb
sbb
mov
or
and
aad
lret
out
adcb
jmp
add
ss
loope
rcrl
je
dec
sbb
xchg
sub
jle
lock
mov
stc
andl
stc
je
out
popa
outsl
and
clc
fisubrl
xchg
fwait
jb
sbb
roll
inc
rcl
arpl
fisubl
inc
or
std
jo
cmpsl
sbb
int3
xchg
insb
incl
xchg
push
subb
imul
addl
or
into
adc
sbb
adc
add
xor
jecxz
pop
lcall
dec
fisubrs
cld
push
adc
addr16
imul
mov
divb
adc
ret
jge
lcall
push
loopne
sbbb
xor
mov
add
je
push
in
insb
xchg
sub
dec
shrb
jp
adc
jmp
pop
xor
cltd
test
mov
push
and
sahf
sub
push
sahf
dec
mov
lds
mov
insb
xchg
inc
sti
adc
pop
imul
enter
inc
aaa
or
jns
in
push
scas
jb
loopne
cli
shll
test
test
adc
mov
add
ss
stos
adc
bound
jae
mov
in
in
repz
lock
test
cld
leave
into
lcall
push
hlt
pop
imul
bound
pop
mov
movsl
repz
shll
jmp
mov
imul
and
mov
cmp
cwtl
mov
push
popf
nop
and
or
cltd
jecxz
lret
xor
inc
fmul
flds
push
jnp
adc
popa
cld
repz
sti
push
push
add
lahf
mov
add
mov
iret
fs
sbb
movsb
int
out
lcall
clc
or
push
xor
cmc
add
lods
inc
cs
scas
bound
or
push
lahf
xchg
imul
mov
testl
push
in
jl
into
fsubrp
out
pop
cli
insl
pop
orl
sbb
cmpsb
les
fmull
cmc
sub
adc
xchg
dec
push
mov
sbb
cli
repnz
ret
jnp
fwait
test
aaa
add
cmc
aad
mov
pop
call
or
pop
ret
lahf
push
shl
loopne
insb
in
stos
xchg
inc
ljmp
jnp
dec
adc
push
test
jle
lods
inc
xlat
pop
push
xchg
push
push
cmp
fsubr
pop
or
cltd
adc
mov
js
arpl
pusha
cmp
addr16
dec
je
xchg
mov
mov
dec
add
sub
andb
pop
adc
jno
popa
scas
jns
and
add
and
mov
cmpl
cmp
aad
pop
enter
xchg
lcall
inc
cld
cmc
imul
add
add
lret
push
cmpl
and
push
ficoml
and
mov
cmpsl
out
fnstsw
xchg
sub
mov
insb
xor
fists
jp
and
mov
sets
add
pusha
out
mov
mov
sahf
mov
push
cmc
jnp
xor
loopne
nop
cmp
jno
lahf
popf
push
fldt
movsl
xor
dec
sbb
jmp
fwait
push
add
adc
movsl
fs
inc
repz
nop
sbb
xchg
or
pop
and
mov
push
inc
test
fsubl
add
roll
mov
or
push
pusha
xor
test
movsl
sub
add
sbb
inc
dec
inc
push
jnp
stos
inc
push
xchg
shll
and
jg
sub
sbbb
loope
or
insl
cmpsl
clc
inc
push
out
ss
mov
dec
es
jg
test
jle
cmp
test
inc
sub
test
and
or
adc
cmp
rcl
sub
mov
add
and
cld
sub
ds
or
scas
mov
pusha
lods
jle
test
stos
gs
pushf
in
or
out
push
mov
sbbb
data16
rorl
mov
fisubrs
lcall
push
call
xchg
in
out
call
dec
jmp
into
aam
icebp
leave
stos
rcr
mov
jae
add
es
pop
jo
fdivl
jl
mov
push
inc
pop
out
xchg
pop
hlt
lds
scas
inc
cld
arpl
and
sbb
das
nop
sbb
stos
mov
fwait
xor
fnstcw
icebp
shrb
adc
xlat
cwtl
das
or
data16
ret
repz
testl
adc
adc
test
dec
mov
cwtl
jbe
popa
xor
sarl
push
setns
inc
outsl
div
jge
xor
dec
aas
dec
stc
or
jl
adc
enter
mov
in
sub
in
xchg
adc
shll
cmp
movsb
lcall
pop
fcomps
pop
bound
jg
mov
cmp
dec
repz
pop
add
push
mov
lock
xchg
cltd
pop
out
cmc
sbb
call
lahf
arpl
popa
and
mov
out
inc
call
lods
fidivl
push
jne
jb
andb
push
imul
rorl
xchg
pop
lret
mov
addr16
mov
mov
inc
push
sub
sbb
xchg
and
leave
push
cmc
cli
mov
call
or
popf
std
jbe
xchg
notb
mov
push
cmpsl
add
in
inc
cmpsb
fbstp
dec
cmpsb
lea
cld
xchg
jns
xchg
lcall
dec
lcall
push
ljmp
pop
sub
shlb
notb
jnp
hlt
lods
cmp
jo
cli
push
cmp
or
push
nop
xor
mov
out
in
test
or
fwait
cmp
test
lds
mov
in
jl
and
push
mov
pop
push
syscall
pop
stos
insl
mov
das
mov
push
out
push
int
mov
lret
enter
scas
jmp
mov
lock
fistpll
xchg
lret
ffreep
pop
gs
pop
add
add
push
in
daa
and
inc
inc
inc
cli
pushf
jmp
mov
push
test
mov
out
test
lret
push
aaa
fs
cli
lret
lret
xor
ret
push
adc
in
xchg
xor
call
mov
je
push
sub
test
push
push
es
jmp
popf
adc
mov
xor
push
xor
sbb
pop
push
shlb
lahf
push
xchg
add
push
cmp
jmp
scas
ljmp
jg
mov
adc
scas
add
mov
xchg
into
xchg
add
lret
and
jno
xor
pushf
adcl
call
mov
pop
mov
in
add
push
addr16
pop
xchg
test
cli
sub
jne
aaa
mov
mov
sbb
xchg
and
ja
mov
jp
mov
mov
push
jae
sbb
xchg
push
scas
pop
push
jne
je
gs
lods
dec
jmp
andb
hlt
out
ljmp
int
outsl
or
test
orl
xchg
add
mov
pusha
outsl
dec
xchg
adc
cmpsb
cmp
inc
out
pop
jbe
cmp
or
pusha
jns
movsl
mov
xorb
sbb
inc
repz
test
insl
imul
fwait
rolb
and
or
sahf
sub
pushf
inc
sub
mull
jg
test
pop
jge
cmp
mov
bound
mov
inc
in
cld
bndstx
lahf
mov
xchg
sub
fdivr
add
sub
cltd
mov
stos
decb
add
mov
fdiv
xchg
repnz
push
scas
jno
and
adc
mulb
fbstp
lea
cmp
and
cmp
jno
rclb
adc
and
sbb
movsb
xor
sub
jae
jb
lahf
adc
fldenv
imul
mov
jecxz
lock
fcomip
cmp
mov
aaa
stc
and
sbb
orl
jne
inc
push
in
pop
cs
add
mov
test
sub
jb
mov
rcll
out
push
and
shrb
test
addw
pushf
popa
or
jno
dec
add
mov
sbb
sbb
inc
leave
adc
notb
fidivrs
test
int
mov
dec
loopne
iret
imul
imul
iret
lods
lret
insb
mov
popa
sbb
mov
pop
dec
pop
jle
sarb
sahf
enter
cmpb
xor
scas
xchg
mul
push
sub
out
xchg
pushf
test
mov
and
cmpb
shll
ljmp
popf
jg
jl
ljmp
inc
mov
ds
imul
fsubrl
arpl
sbb
push
sbb
xchg
movsl
inc
adc
pop
sub
loope
push
hlt
lret
xor
pop
test
clc
mov
outsb
add
mov
mov
call
mov
inc
mov
testb
pop
es
push
rolb
shl
loope
fists
mov
lcall
pop
dec
sbb
cmp
mov
lret
cmp
aad
push
ja
add
test
addr16
mov
cwtl
inc
sbb
push
jbe
pop
mov
jno
xor
test
fdivrs
sub
dec
cmpl
movsl
mov
jmp
cmc
inc
or
fldt
push
hlt
sub
xor
fidivrs
mov
xor
sbb
cmpsb
test
lds
imul
daa
add
mov
xor
push
jbe
xchg
stos
fimull
or
fldl
add
pop
cmc
sub
mov
sub
dec
mov
lahf
daa
push
and
lods
push
push
sub
stc
xor
cmp
and
sub
and
nop
pop
sub
push
mov
mov
pop
neg
push
movnti
loope
insb
loop
fstpt
repz
clc
xchg
nop
adc
push
ja
pop
dec
aam
xchg
movups
stos
arpl
je
je
push
movsb
dec
add
scas
adc
xchg
pop
jnp
popa
lock
mov
adc
ja
cld
test
sub
or
scas
aaa
push
or
in
jne
add
xor
adc
xor
pop
int
mov
sub
mov
xchg
add
pop
jl
or
call
imul
int3
aam
mov
movsb
icebp
out
or
xchg
in
gs
fistpll
jge
mov
push
ret
adc
aaa
in
push
bnd
andb
enter
ja
push
rcrb
sbb
xchg
daa
in
inc
imul
daa
inc
out
push
rolb
add
mov
stc
mov
add
xchg
aam
testl
pop
es
out
xlat
cmc
and
or
rolb
cmpsl
push
jae
aas
movl
pop
test
mov
xlat
jmp
sbb
add
adc
loop
cmp
insl
dec
es
int
sub
jmp
sub
sub
mov
dec
mov
cmp
es
into
out
popa
add
cmp
inc
fcmove
adc
push
lret
sarb
shlb
lock
mov
and
mov
sahf
ret
and
ss
mov
push
hlt
xchg
cmp
lret
int3
sbb
inc
aas
jo
fdivp
fst
sub
and
add
repz
jb
iret
loopne
jns
orl
xor
aam
add
xchg
rcll
push
inc
jnp
sub
aaa
jae
push
repnz
add
pop
mov
dec
aad
adc
data16
add
loop
push
xlat
mov
repz
arpl
push
jge
rclb
insb
shrb
icebp
cmp
out
imul
stos
push
push
fldl
mov
pop
adcl
inc
fucompp
ja
sub
sahf
mov
jb
aaa
cmpsl
out
stc
outsb
and
add
push
mov
sbb
loop
xchg
aam
shr
nop
mov
xor
lcall
call
les
jecxz
shll
test
popf
push
jge
std
mov
xchg
roll
xchg
rep
jb
dec
movsb
dec
je
add
lret
and
cs
inc
cmc
dec
loope
push
cmpsl
push
js
arpl
enter
ja
insl
movsl
mov
fnstcw
or
mov
mov
call
js
test
pop
sub
pop
popf
xor
and
mov
lock
call
or
inc
push
fsubl
stos
jl
mov
lret
mov
sub
push
stos
bound
les
jbe
mov
out
lret
and
add
enter
enter
mov
loope
mov
xchg
jb
leave
ror
xchg
push
adcb
mov
repz
xchg
imul
sub
stos
mov
adc
and
and
std
mov
rolb
mov
dec
adc
or
loop
subb
pop
mov
jbe
and
pop
xchg
lret
jns
stc
fwait
popa
jnp
out
dec
cmp
xor
insb
jp
in
inc
pusha
jo
adc
aaa
sub
lcall
dec
inc
push
or
movb
cmp
movsb
sarb
push
in
pop
dec
dec
outsl
mov
pop
cmpl
fnsave
fadds
decl
lods
pop
scas
cmp
movsb
xlat
outsb
adc
pusha
jnp
jne
xlat
pop
mov
mov
fs
xchg
fistpl
incb
mov
or
rclb
pop
nop
in
jns
xor
add
sub
out
fwait
push
test
sub
and
xchg
fsts
test
or
in
pop
jmp
decb
xor
dec
out
stos
lahf
arpl
leave
inc
inc
jle
cwtl
scas
in
push
call
adc
clc
out
aas
inc
lahf
push
dec
dec
push
xor
daa
dec
movb
mov
cs
les
insb
daa
push
mov
iret
insb
cmpsl
jne
push
loope
or
rclb
js
mov
mov
xor
shll
or
hlt
mov
mov
push
xchg
cs
mov
mov
mov
pusha
cmp
fistl
vmread
pop
xchg
pop
adc
cs
lea
in
mov
jp
fistps
dec
sub
cs
jae
sbb
int3
inc
mov
loop
xchg
xchg
pop
ret
jp
mov
adc
mov
and
int3
mov
push
addr16
sub
out
jbe
aam
les
and
push
push
fnstenv
and
test
xor
lods
lods
xor
data16
int
mov
rol
mov
xchg
je
roll
pop
pop
add
out
hlt
leave
xchg
in
and
jns
sub
fs
sahf
mov
jmp
mov
lds
fldt
or
lahf
pop
push
jo
xor
mov
enter
push
stc
pop
stos
cmp
out
sbbb
ret
aam
push
xchg
jb
sbb
scas
iret
sub
roll
mov
sbb
xchg
xchg
cld
mov
call
fbld
sbb
mov
vmread
gs
dec
loopne
adc
push
mov
out
xchg
in
movsl
cmp
jp
lret
mov
shrb
dec
inc
sbb
ror
mov
dec
aas
and
push
jb
in
fdivl
scas
cmp
mov
inc
mov
sti
sahf
andb
mov
call
orl
jle
push
insl
insl
out
lcall
jns
pop
xchg
enter
outsl
push
mov
or
push
testb
pop
in
movsb
mov
lods
ss
fiadds
aad
pop
xchg
gs
notl
add
daa
add
pop
mov
sbb
push
ret
insl
push
andl
leave
mov
cld
xchg
pop
pop
inc
add
pop
jb
sbb
lods
jl
jge
andl
pop
mov
cltd
sub
flds
or
test
adc
test
test
rorl
mov
mov
sub
lret
jb
push
sbbb
outsb
outsb
mov
lods
xchg
scas
cmp
push
mov
aas
scas
xchg
test
imul
sbb
aam
and
arpl
ds
ljmp
int3
inc
sarb
xchg
pop
pop
lret
push
mov
adc
inc
sbb
rcrb
and
xchg
xor
mov
push
push
xchg
mov
mov
icebp
imulb
rcl
out
aaa
push
daa
pop
lods
xchg
inc
cwtl
mov
mov
loopne
jae
aam
xchg
stos
add
repnz
inc
jno
sbb
push
je
cmp
std
pusha
mov
lock
and
jg
adc
sbb
sbbl
mov
ret
call
inc
cltd
out
add
cmp
dec
mov
push
sub
jg
jp
jne
dec
rol
push
aaa
sbb
ret
imul
sbb
or
cli
call
stos
testl
sub
push
xchg
pushf
jecxz
sbbb
xor
cwtl
aas
xchg
mov
mov
iret
xchg
and
ror
pushf
int
inc
lock
iret
sbb
insl
dec
pop
sbb
and
xchg
sub
int
stos
je
dec
ja
cmp
inc
adc
int
jmp
int
les
int3
xor
cmpsl
inc
cmp
jae
sbb
push
or
jmp
and
popf
cmp
mov
icebp
andb
inc
je
jns
or
sbb
iret
cmpsb
add
in
fdivl
add
xor
dec
enter
inc
push
mov
cltd
cmc
mov
fnstsw
dec
dec
mov
lods
ds
sti
mov
insb
jp
jne
jo
in
or
inc
inc
inc
sub
jno
fwait
cmp
xchg
aad
jns
push
dec
popf
int3
iret
in
pop
cmc
inc
pop
cmp
ss
and
lahf
in
fwait
mov
daa
push
imul
adc
scas
jmp
ficompl
xchg
pop
mov
fsubrp
mov
test
cmp
adc
adcl
mov
sbb
lret
sbb
push
ret
adc
mov
pop
jno
cmp
cmp
div
jge
xor
rorl
out
dec
les
sub
jp
test
push
das
mov
fldt
iret
push
hlt
cmp
fmull
cmp
int
loope
adc
fldenv
mov
inc
pop
mov
mov
or
je
dec
add
jge
inc
pop
ret
stc
test
sbb
cmc
lods
cmp
fdivrs
adc
dec
sub
insl
jnp
enter
test
mov
into
jb
mov
jl
lds
stos
fimuls
in
mov
sbb
fidivrl
inc
in
sahf
push
fsubr
out
test
sbb
fcomip
lods
xlat
jge
inc
add
fbstp
xchg
adc
rcrl
add
xchg
aas
push
xor
stc
dec
gs
sub
lods
jbe
mov
push
xlat
pop
iret
into
cmpb
cmp
jecxz
sub
mov
dec
jecxz
jae
imul
add
dec
mov
test
fcmovbe
cmp
roll
mov
pop
insl
dec
add
aam
loope
push
or
aas
fidivl
movsl
mov
and
std
mov
int3
mov
mov
mov
cld
sbbl
and
add
push
into
jno
das
pop
fistpl
xor
dec
sahf
jbe
out
xor
in
and
fs
in
adc
xor
and
mov
outsb
inc
lret
mov
cmpsl
push
insl
popf
add
fimull
ret
mov
sub
rcrb
pop
or
and
push
stos
lods
inc
dec
lret
shlb
mov
aam
int3
mov
jge
lods
mov
pusha
jecxz
out
addb
test
mov
scas
pusha
mov
mov
jne
into
push
adc
adc
inc
lahf
scas
push
inc
fstps
aas
jnp
xor
jae
push
push
cs
sti
stos
scas
je
xchg
sbb
mov
enter
mov
cmpsb
imul
ss
pop
out
mov
dec
aas
lock
popa
push
scas
jbe
lret
je
mov
inc
push
imul
addb
pop
jne
adc
cmp
pop
cmpsb
sti
xchg
add
cmp
jge
mov
sbb
mov
scas
mov
fwait
add
or
sbbl
scas
rolb
cmp
aad
aam
es
out
cmpsb
cmp
mov
shll
push
adc
andb
cmp
mov
movsb
mov
ficomps
pop
pop
loopne
mov
aad
inc
test
not
push
jmp
popf
out
mul
jp
xchg
or
mov
dec
sub
xchg
popf
data16
aad
cwtl
push
out
fwait
sbb
mov
inc
sbb
mov
fst
sbb
pop
jno
aad
mov
aaa
sbb
or
je
dec
in
test
push
mov
gs
sbbl
jle
decl
adc
xchg
sub
or
daa
arpl
add
aad
out
pop
or
cld
xlat
aaa
mov
push
mov
xchg
push
in
sarb
jae
push
jnp
hlt
inc
cmc
subl
jnp
adc
dec
cmpsl
in
cmp
insb
outsb
or
add
adc
iret
push
add
cmpsl
imul
add
lcall
or
js
mov
dec
js
out
add
cmp
sbbl
push
aam
in
and
xchg
pop
call
xor
mov
jecxz
inc
xchg
imul
add
dec
test
sub
jno
push
adc
adc
sbb
lcall
mov
xchg
ljmp
pop
cmp
imul
push
daa
movlps
mov
mov
fpatan
inc
or
xor
popa
push
xor
imul
insb
inc
pop
sbb
cwtl
inc
xchg
and
jl
insb
adc
stc
cmp
pop
out
cmpsl
rcr
mov
mov
sub
mov
add
adc
add
cmc
fsubr
daa
hlt
aas
push
int3
or
ss
fstps
loope
fisttpl
mov
filds
pop
xchg
fstpt
pop
xor
lcall
and
xchg
cmp
pop
fsubrs
inc
inc
push
in
and
or
pop
xor
inc
add
shll
mul
aaa
cwtl
mov
cs
leave
je
sbb
xchg
lods
mov
inc
pusha
dec
xlat
outsl
cmpsb
mov
jb
push
ds
push
insl
shrl
aad
ror
test
ret
sbb
pop
inc
push
rcrl
shrb
mov
data16
xor
hlt
ds
fildll
imul
push
aam
mov
fisttpl
cmpsl
jge
dec
sub
and
or
out
jle
pop
rorb
dec
xor
dec
repnz
rorb
mov
adc
cld
sub
lcall
xchg
loopne
movsl
add
ja
sub
hlt
mov
mov
fistpl
pop
pop
cmp
jne
cmp
gs
iret
lret
mov
fs
movsb
mov
mov
push
popa
pop
push
insb
popf
jbe
test
inc
loopne
lret
adcl
xchg
cmc
imul
mov
xor
pop
xchg
ficomps
dec
loop
sbbl
xchg
dec
cmp
lahf
pop
pushf
cs
and
scas
out
add
cmpsl
jno
aam
scas
xchg
cs
or
inc
pop
adc
fimull
int
ret
mov
rclb
sbb
xor
pop
cmc
or
scas
jl
fmuls
push
inc
aaa
mov
jb
push
push
test
mov
jl
sub
push
pop
fsubrs
arpl
sahf
cmp
pop
imul
cld
in
lea
push
sbbl
and
jg
cli
pop
jmp
sti
dec
rep
gs
movsb
jns
xchg
push
and
call
and
inc
jae
sbbl
fcmovnu
es
push
aam
mov
pusha
mov
mov
mov
arpl
lret
sbb
dec
hlt
fdivrs
into
insl
push
xchg
pop
cmpsb
mov
int
movsl
or
and
jle
sar
xchg
cwtl
push
cmp
jecxz
dec
push
loop
std
adc
push
push
and
decb
loope
xchg
sub
dec
negl
mov
lahf
and
sub
inc
pop
mov
pop
jle
int3
jge
aas
outsl
add
adc
mov
inc
mov
xor
ljmp
faddl
scas
mov
arpl
stc
mov
jmp
fmuls
fiadds
mov
adc
insb
addl
lahf
repnz
adc
and
data16
mov
imul
adc
shlb
mov
mov
mov
mov
mov
lds
xchg
clc
push
pop
stos
or
movsl
sbb
sub
fwait
add
push
inc
mov
xchg
loope
dec
jmp
mov
jb
xchg
mov
cltd
lds
leave
cltd
push
sub
divb
add
mov
jmp
data16
int3
cltd
sub
pop
subb
push
mov
xor
mov
dec
out
popa
in
sti
push
cwtl
dec
ljmp
iret
dec
lret
ds
jecxz
or
xor
cwtl
ss
dec
pop
lock
jg
xchg
loopne
mov
loopne
ds
xchg
test
test
or
dec
mov
inc
and
rcll
inc
fucomp
js
mov
decl
xor
in
out
mov
popf
in
jge
xchg
fsubr
xor
loopne
pusha
arpl
out
shll
jb
in
ret
pop
int3
or
cli
sub
je
pmulhw
xor
and
xchg
sbb
push
xor
imul
in
inc
outsb
jl
cmp
xor
gs
jg
nop
push
stc
test
xchg
andb
mov
pop
pop
ljmp
push
xor
int3
into
push
dec
xor
enter
inc
rclb
lret
out
shl
or
in
sti
stc
and
inc
push
push
pushf
xor
int
pop
fcmovbe
mov
out
dec
jne
mov
dec
or
stc
sti
mov
ret
scas
push
jnp
lds
mov
stc
mov
xchg
sbb
icebp
adc
xchg
jae
cli
mov
pushf
pop
jbe
shrb
js
adc
push
lock
into
out
iret
pop
imul
xchg
jno
lea
xor
push
cld
xor
and
int
repz
fwait
jp
movsb
dec
cld
stos
stc
test
sub
nop
mov
frstor
pusha
pop
ja
aad
sbb
lret
dec
and
inc
sbb
adc
jp
cmpsb
and
es
iret
add
inc
and
jecxz
xchg
dec
sub
and
in
cmp
ds
outsl
mov
mov
jmp
mov
jns
mov
outsl
pop
ljmp
push
fstpl
js
push
int
loopne
push
xchg
test
mov
lret
cmp
loopnew
inc
dec
or
imul
jmp
cmpb
mov
inc
mov
fsubr
xchg
sub
das
jp
push
imul
addb
mov
imul
fs
add
imul
mov
mov
add
sahf
sub
dec
aam
mov
jne
std
stos
jge
cmc
push
mov
dec
in
sti
jbe
fisubrs
jmp
daa
or
pusha
aas
xor
dec
cmp
movsl
popf
sub
out
std
and
cwtl
neg
cmc
les
cmp
lock
cmp
push
ret
loopne
dec
lea
incl
rolb
stos
xchg
pushf
shl
test
popa
mov
xor
in
fsts
mov
adc
xchg
imulb
daa
hlt
or
pop
repz
jmp
popf
lock
sub
mov
xor
xlat
pop
in
xchg
inc
xor
push
dec
jbe
jnp
inc
repnz
stos
lahf
gs
into
xchg
or
sub
cmp
lret
addr16
aam
data16
pop
mov
mov
rolb
insb
pop
fucomip
nop
int
xchg
or
inc
fwait
mov
pop
in
sbb
push
movsl
pop
jnp
cmpsl
out
sub
push
xlat
lds
inc
out
jge
insb
aam
rcl
lods
pop
iret
lock
sub
xor
imull
lea
movsb
jl
das
scas
loop
pop
cmp
xchg
cs
or
shrb
mov
jge
jb
jl
insl
in
adc
cld
sub
hlt
or
testl
stos
sub
and
in
inc
sub
in
xor
outsb
add
mov
fldcw
mov
jns
or
jge
add
pop
mov
cmp
jns
mov
outsb
andl
mov
mov
je
dec
dec
lods
movsb
jb
pop
mov
andb
ds
repz
or
and
int
sub
xchg
xor
and
mov
dec
rorl
fadds
in
jp
cmp
repz
fsub
inc
dec
dec
jbe
pop
cmp
stos
cmp
cmc
pop
cmp
cltd
sub
adc
jmp
repnz
out
and
push
xor
sti
pop
addl
insl
testl
cmp
out
test
pop
and
iret
mov
xor
data16
cwtl
dec
fisttpl
inc
xchg
dec
push
add
fnstsw
mov
sub
jnp
inc
sbb
das
aad
push
sbb
mov
lret
ret
inc
bound
sti
in
call
pop
sbb
je
jns
std
xchg
cmc
xchg
or
cmp
and
in
xchg
fcompl
add
push
mov
mov
iret
ss
pop
imul
sbb
aad
out
lock
and
xlat
ret
in
rcrl
xor
data16
cs
loopne
inc
int3
sub
pop
call
xor
adc
jbe
or
mov
sub
mov
fbstp
hlt
aad
loopne
sub
les
repz
aaa
movsl
push
cwtl
scas
jb
rorl
jae
imul
fwait
mov
lret
push
lods
and
test
xor
dec
subb
xchg
mov
push
int
jbe
jb
in
sub
decb
pop
xlat
xchg
add
pop
ljmp
cmc
jns
out
dec
fists
inc
in
ljmp
lds
ds
lret
out
stc
rorl
pusha
xor
or
push
int
or
mov
movsl
sbb
adc
cmc
and
cli
fs
sub
sahf
test
ret
mov
lds
aaa
mov
daa
pop
mov
xchg
jp
ss
loope
xor
fcomip
in
test
iret
push
clc
mov
andb
dec
jmp
push
popl
int
ljmp
fists
scas
mov
mov
mov
push
repnz
into
es
test
nop
mov
jle
cmp
cmp
iret
pop
popf
repnz
push
dec
je
cmp
ss
mov
and
sub
pop
lret
movsb
xor
mov
clc
inc
imul
push
pushf
and
addr16
mov
testl
jo
repnz
stos
push
lods
inc
or
out
repz
loop
push
mov
inc
push
adc
mov
fiaddl
mov
xor
push
aaa
sbb
dec
dec
int
jo
or
loope
insl
adc
mov
xchg
lahf
xor
nop
es
gs
or
movsl
mov
addr16
ljmp
ret
or
or
push
push
arpl
sbb
and
test
dec
popa
sub
mov
cmpsl
rcrl
dec
lods
lods
jmp
stos
inc
rorl
in
mov
in
push
jae
loop
xchg
movsl
in
mov
sbb
push
mov
aam
mov
mov
insl
imul
pushf
pop
mov
inc
iret
pop
pop
ds
xchg
sub
cmp
push
or
pop
aas
rcl
and
jg
ret
or
scas
fdivrs
xor
jo
push
inc
xor
dec
jno
dec
dec
aas
xchg
shrl
subb
cwtl
repz
or
test
sbb
testl
mov
push
lret
outsl
xchg
out
popa
lods
aas
test
push
psubd
xchg
fdivl
cmpb
add
cmc
mov
cmp
push
aaa
into
or
dec
clc
cltd
aad
xchg
cltd
sub
lahf
mov
pop
int
mov
std
mov
es
jb
adc
mov
xorl
loopne
and
stos
jnp
das
dec
enter
jle
js
stos
shlb
or
lea
cmp
adc
stc
insl
in
sbb
jno
insl
inc
sub
fbstp
cmp
jmp
xlat
rcll
test
xchg
imul
mov
mov
test
daa
ret
mov
and
fmuls
out
mov
mov
cmp
push
cmp
icebp
add
inc
rorb
xor
and
jecxz
and
ds
mov
inc
lods
add
cmp
cwtl
lret
lret
cwtl
mov
aas
sbb
inc
xlat
hlt
xchg
lock
sarb
jnp
lock
call
popf
push
push
movsb
in
jno
xor
mov
inc
rclb
jne
mov
cmp
adc
das
imul
mov
jns
jnp,pt
pop
mov
outsl
sbb
pop
and
and
pop
sarl
sbb
add
gs
jl
sbb
out
xchg
clc
add
jmp
loop
loopne
mov
sub
out
nop
outsl
jo
enter
push
pusha
xor
mov
mov
add
adc
adc
jne
xor
insl
jl
adc
movb
leave
pusha
popf
lcall
ljmp
push
addl
mov
xor
xchg
inc
and
mov
jb
mov
adc
test
lcall
xor
push
cld
pop
push
cmp
pop
or
xor
cli
mov
push
orb
sbb
cli
sbb
daa
pusha
ss
cmc
data16
std
rclb
in
jne
cltd
ret
outsb
xchg
push
cmpl
sub
push
sub
pop
inc
inc
push
mov
adc
inc
fsub
mov
jecxz
negl
cwtl
icebp
loopne
aam
mov
xor
popa
add
jbe
jo
adc
dec
dec
aam
pop
lcall
clc
xchg
mov
push
xor
mov
cmp
stos
imul
adc
inc
jl
out
cmpsl
fimuls
dec
loope
cmp
shl
jb
ja
lds
push
push
add
mov
out
cwtl
fucomp
jl,pn
jbe
rorb
xchg
cmpsl
or
in
jns
mov
ret
ret
jns
jne
inc
cmpsl
jle
fisubs
add
dec
add
subl
cltd
sub
and
mov
cmp
sub
pop
mov
jge
mov
dec
xchg
mov
and
mov
imul
dec
mov
jb
mov
push
out
outsb
bound
popf
pop
outsb
sub
test
adc
cli
xchg
inc
sbb
push
call
inc
lret
mov
inc
push
cmp
or
push
loop
adc
pushf
daa
mov
mov
inc
pusha
stos
shrl
cmpsl
dec
mov
fs
mov
xchg
adc
push
not
imul
imul
fisubl
mov
mov
mov
stos
je
addb
js
sub
push
push
push
sub
sahf
fdivs
sbb
mov
xchg
inc
je
jmp
mov
adc
push
sub
mov
lahf
sub
scas
lock
push
loope
pop
jno
iret
orl
cltd
sub
cli
in
xchg
pop
fisubrs
jge
xchg
push
adc
rclb
out
cmp
in
fsubs
orl
sbb
lret
loope
jne
cwtl
es
mov
nop
mov
mov
pop
or
ja
clc
adc
int
ljmp
sub
bound
ljmp
add
stc
adc
lods
js
popa
sbbb
mov
test
cmp
xchg
inc
add
and
push
push
or
mov
xchg
adc
push
push
mov
rorb
add
mov
jnp
mov
mov
mov
les
mov
loopne
cmp
inc
mov
pop
or
gs
lock
dec
je
jmp
xor
shlb
sub
inc
fldl
stos
mov
jne
ja
sbb
jbe
jp
pop
cs
jg
adcl
mov
adcl
hlt
fidivl
int
cwtl
cmp
push
outsb
ljmp
lret
stc
stc
dec
add
sbb
cld
enter
jecxz
fwait
sub
mov
int3
xorb
mov
xor
mov
popa
sub
sbb
inc
notl
jp
push
mov
push
bound
xor
mov
add
and
mov
mov
jno
imul
fmuls
nop
push
sub
mov
out
leave
adcb
cmp
mov
and
jae
xchg
inc
add
mov
std
je
mov
xor
sbbl
mov
mov
fwait
xchg
aam
dec
int3
xor
jbe
test
mov
jg
pop
clc
xor
xor
outsl
shlb
sub
jmp
cmp
xchg
scas
fisubs
inc
inc
int3
scas
sbb
adc
dec
in
mov
test
push
insb
jmp
mov
push
jnp
mov
jmp
and
popl
dec
xchg
mov
nop
sbb
pop
sub
dec
fs
movsb
sub
ja
pop
repnz
and
adc
hlt
cmp
stos
push
das
fidivrs
mov
mov
pusha
test
lea
or
mov
or
xor
out
mov
pop
sub
mov
or
sbb
push
sbb
sub
imul
lea
and
cwtl
jae
ljmp
xor
xchg
adc
cld
pop
das
mov
insl
cmp
xlat
rorb
dec
add
xor
jge
adc
mov
cmp
pop
mov
pushf
lcall
xor
adc
push
cli
xchg
in
or
stc
call
mov
push
or
adc
sbb
fldl
pop
jbe
jbe
sti
das
or
lods
jae
jae
jmp
mov
shl
xor
scas
pop
adc
push
or
rorb
mov
mov
xchg
hlt
inc
iret
data16
fwait
sti
jle
push
cwtl
or
mov
rcrl
jl
jp
push
test
lods
inc
insb
and
xchg
pop
int3
push
sbb
lret
inc
jecxz
leave
adc
test
fsubp
fwait
clc
int
mov
cmpsl
xchg
lcall
mov
xor
das
push
cmp
sub
scas
into
mov
dec
add
push
jg
sahf
push
push
out
ljmp
and
aaa
push
mov
aam
cmp
fdiv
mov
xor
shll
test
fimuls
and
xor
add
push
pop
dec
lock
xor
scas
and
out
arpl
inc
xor
fistps
mov
xchg
lock
sbb
mov
adc
cmp
xor
sub
loopne
rcrl
lret
jle
jmp
xor
cld
pop
mov
sbb
xchg
test
popf
negl
xchg
sub
jns
mov
imul
pop
xor
jecxz
jnp
pop
sahf
shrl
leave
pusha
xor
pop
idivb
add
mov
nop
and
or
xor
loop
dec
rolb
lds
inc
popa
clc
xor
xlat
outsb
aad
hlt
mov
inc
sbbb
inc
movsl
cmp
in
xor
loop
xor
dec
es
inc
add
xchg
jecxz
or
push
mov
inc
dec
xor
add
lock
in
cmp
xor
jecxz
or
outsb
cltd
xor
lods
inc
dec
fwait
xor
outsl
mov
pop
inc
and
outsb
mov
gs
pop
lds
mov
jae
jb
imul
push
rcr
jno
or
cmp
xchg
loope
push
fstps
int3
adc
aad
pop
jnp
dec
xchg
sbb
add
icebp
mov
sbb
mov
push
dec
sahf
sbb
cmp
jl
push
inc
stos
out
inc
inc
mov
push
test
fsubs
dec
lret
mov
push
cmp
pop
adc
xchg
adc
pop
xor
es
or
ss
ret
bound
filds
fs
sbb
cwtl
lea
and
jle
pop
jno
movsl
xor
mov
or
jg
cmpsl
mov
loope
adc
add
lock
jbe
fidivl
test
mov
sbb
add
test
es
aad
popa
xchg
mov
sti
mov
fistl
orl
int3
xchg
jge
mov
cmp
or
jmp
xor
ja
cwtl
cmpl
xor
fmulp
in
sbb
movsl
push
test
scas
and
mov
cmpsl
dec
shll
push
push
aas
push
cs
sub
cwtl
inc
loope
add
enter
dec
mov
pop
adc
ret
das
into
mov
inc
call
lret
decb
and
xchg
push
adc
out
loopne
cmpsl
cld
dec
inc
mov
stos
ja
in
mov
jo
sbb
adc
adcl
cmc
aad
adc
add
insl
xor
mov
stc
jmp
xor
aaa
sti
push
aam
sbb
sub
fcoml
mov
clc
ud0
mov
adcl
push
fadd
pop
rcl
adc
cmp
loope
aad
inc
fadd
dec
cmp
cmp
pop
repnz
jecxz
into
out
sub
push
jmp
mov
ret
xor
add
mov
pop
sar
cmc
pop
nop
mov
push
scas
addl
loop
xor
loopne
fwait
inc
push
xor
fs
inc
int3
test
jg
inc
pop
cltd
lahf
or
adc
jl
call
mov
repz
iret
mov
sbb
dec
in
push
adc
mov
les
and
dec
test
cli
bound
cmpl
adc
rcrl
mov
mov
jmp
mov
mov
cmpsl
stos
arpl
das
mov
out
fsubl
dec
rcrb
or
scas
les
dec
dec
adcb
movsb
dec
mov
fs
cmp
out
iret
mov
shl
mov
iret
and
popf
sub
loopne
cwtl
ljmp
xor
jae
sti
mov
movsl
adc
or
cmp
and
and
movb
xchg
xor
push
jo
testl
pop
fistl
or
cmp
add
add
mov
bound
leave
roll
and
pop
notb
lods
movsb
addr16
shl
sub
mov
sarb
stos
lret
int3
mov
or
out
add
das
pop
push
or
cmp
sub
mov
shll
fists
sub
popf
fwait
jns
cmp
shrb
adc
and
setl
push
jecxz
add
mov
sahf
sarb
setl
xor
xchg
adcb
mov
shll
add
testb
das
ja
int3
sub
dec
clc
jne
cld
push
clc
pop
bound
and
push
test
push
mov
lret
in
cmp
or
sbb
subb
rcrl
or
cmc
pop
aaa
cmp
rorl
inc
into
dec
cwtl
shrb
jmp
or
and
gs
sub
repz
inc
sub
sbb
pop
ljmp
pop
sub
fildl
dec
push
push
jg
idivl
pop
cmpsb
adc
mov
std
in
repnz
xchg
mov
pop
repnz
lret
pusha
sub
mov
xchg
or
les
mov
mov
xchg
cmpsl
imul
cmp
mov
iret
cwtl
insb
jns
test
fwait
mov
lret
or
sub
jo
daa
daa
fdivp
cmp
popa
iret
xor
mov
scas
jno
sbb
adc
push
in
mov
add
ljmp
arpl
jmp
mov
push
inc
jecxz
xchg
and
int
dec
in
jnp
dec
dec
bound
lods
mov
jb
jb
jmp
dec
xchg
fdivr
rsqrtps
push
add
xchg
sub
mov
in
push
addr16
add
add
out
sbb
sub
cmp
xchg
popl
loopne
push
inc
sbb
ja
dec
mov
je
ja
mov
mov
jo
pop
scas
ret
dec
pop
jne
xchg
mov
jg
call
rorl
cmpl
out
test
mov
pop
stos
mov
mov
lods
rclb
mov
jnp
gs
push
cmpsl
loope
dec
adc
push
adc
lahf
push
rorl
stos
lahf
rcr
inc
clc
shlb
mov
cmc
inc
fisubl
xchg
popa
jns
int
mov
mov
push
cs
inc
lcall
inc
cltd
mov
sbbb
inc
jne
adc
sbb
lret
sub
mov
jp
pop
add
dec
addr16
push
aaa
lods
fstl
test
cwtl
movsb
in
mov
push
aad
sarb
dec
and
cli
ja
movsb
cmp
shrl
or
push
cmp
xor
mov
call
in
test
loop
imul
mov
enter
or
pop
shrb
out
xchg
cmc
push
push
lods
push
mov
fnstenv
clc
aaa
sti
sub
imull
mov
mov
pop
xchg
sub
imul
outsl
adcb
dec
out
shl
mov
lcall
cmp
loope
insb
jle
loopne
sbb
fs
cltd
push
leave
iret
adc
pop
fwait
and
and
push
cld
bound
bound
leave
stos
or
mov
push
imul
sbb
mov
fstpl
pop
aas
cmp
addb
mov
bound
xlat
addb
jge
cmpsb
jecxz
cmp
orl
fiadds
aam
mov
cmc
cmpsb
jle
leave
xchg
cmc
xchg
add
les
fldcw
loope
dec
adc
xor
xchg
add
cmp
das
addr16
lcall
inc
loope
nop
cmp
fstps
sub
adcb
push
mov
call
or
sbb
pop
jecxz
pusha
xchg
in
add
add
or
inc
cli
cmp
pop
stc
xorl
push
or
js
movsb
xchg
jno
jno
daa
fldenv
mov
jl
mov
scas
shl
sub
dec
int
cltd
dec
xchg
stos
loopne
pusha
outsb
popa
xor
outsb
icebp
push
aas
or
or
mov
dec
sub
dec
shrb
sbb
jl
pop
icebp
xchg
mov
fbld
stos
stos
dec
rorb
push
pop
movsl
dec
add
cmp
push
mov
cmpsb
lret
cmp
stos
inc
push
xchg
scas
shll
call
sarl
mov
imul
test
or
repz
cmp
inc
or
fsubrl
inc
in
int3
lds
jae
cmpsb
sub
hlt
lahf
mov
imul
or
adc
js
or
inc
ffreep
mov
mov
leave
adc
push
add
es
xchg
sub
daa
loope
mov
lods
adcb
arpl
adc
cmp
ja
or
dec
cmp
adc
pop
lock
cli
daa
and
mov
add
fcomps
aad
mov
fisubs
or
push
cmp
xchg
mov
or
jns
push
fistl
and
jp
xchg
cmp
addb
inc
cld
xchg
jns
add
call
lods
pop
inc
mov
sub
int
cmpsl
dec
push
out
push
jmp
dec
jmp
cli
mov
adc
cmpsb
lcall
cld
aam
add
push
sahf
sub
xor
dec
xlat
mov
ja
pop
addr16
xor
in
push
inc
int3
mov
or
in
and
cli
cmp
or
aam
sbbb
jmp
or
mov
add
lcall
add
cmpsl
xchg
sub
out
mov
cmp
inc
sbb
scas
dec
mov
jne
test
cmp
dec
jge
jg
inc
push
lcall
icebp
int3
inc
dec
mov
dec
and
push
outsl
xchg
inc
popf
and
inc
dec
inc
jecxz
pop
jmp
xchg
shl
sub
fsubs
xchg
int3
pop
loope
outsl
cld
fsts
mov
pop
cmc
shld
sub
outsb
mov
ja
dec
mov
lock
and
stos
add
lock
xor
aaa
pop
push
ja
add
pop
lock
rcll
fmull
cmpsl
test
enter
xchg
cmp
dec
aaa
sub
ret
pop
add
pop
jmp
mov
ja
js
sbb
cmc
pop
jecxz
shll
push
lea
fidivs
fisubl
pushaw
fwait
jl
jns
xchg
data16
xchg
popa
mov
shrb
hlt
and
ss
insl
stos
jle
mov
mov
xor
inc
aam
loopne
and
aas
add
mov
jae
adc
jne
cmpsl
add
jae
mov
sub
dec
or
add
cmp
dec
mov
dec
lock
pop
mov
test
cmp
adc
and
adcb
inc
pop
mov
push
loopne
ret
test
jae
shlb
jnp
lock
test
xlat
pop
jbe
repz
cmp
add
and
gs
adc
add
sub
push
aad
scas
ret
mov
repz
pop
fcmovbe
jns
inc
jg
imul
adc
aaa
dec
cs
cmp
insb
xchg
mov
push
cmp
lret
test
inc
sub
mov
mov
dec
dec
mov
cmpsb
sbb
xchg
add
out
scas
pop
and
mov
fmull
xchg
adc
xor
mov
cmpb
push
test
lret
loope
sub
lods
shlb
mov
lock
push
lock
push
icebp
stos
mull
mov
iret
arpl
mov
lea
push
mov
shll
or
lock
testb
mov
push
add
jbe
insb
xchg
xchg
xchg
test
idiv
cs
out
xchg
mov
xlat
inc
mov
je
es
sbb
data16
or
dec
fisttpll
add
orb
inc
mov
shrl
sbb
scas
xor
fadd
push
fsubl
iret
test
mov
mov
jbe
mov
les
fnop
inc
mov
out
mov
mov
push
inc
movsb
or
cmp
sbb
iret
dec
dec
pop
fs
lret
aam
dec
dec
fbstp
jo
xchg
xor
into
hlt
pop
fsubs
push
push
mov
fs
adc
ficomps
inc
in
or
mov
mov
mov
out
movsl
dec
add
test
jo
pop
outsb
loopne
xchg
inc
cmpsl
int
pop
fsubr
push
inc
mov
inc
fwait
add
and
or
mov
rclb
test
jb,pt
stos
aas
sub
mov
xchg
div
insl
add
cmp
or
adc
mov
jecxz
and
pop
mov
pushf
add
jnp
or
cmpsb
decb
dec
pushf
mov
lret
dec
rol
lcall
call
loope
jo
das
add
stc
sub
jnp
popf
stos
das
pop
icebp
insl
mov
mov
cmp
and
push
inc
daa
sti
out
rorb
adc
inc
cltd
std
jmp
into
cmp
or
dec
sub
jnp
scas
mov
fisubs
das
test
cmp
pop
mov
stos
insb
jge
pusha
sub
stos
sbb
div
jmp
lret
andb
pop
rcl
lret
dec
xchg
repz
lods
ret
jge
xchg
out
insl
xchg
int3
int3
mov
movsb
mov
int
push
call
std
xor
leave
mov
sti
sarl
mov
cltd
fwait
cld
dec
shl
aaa
add
xor
in
sti
icebp
or
and
push
inc
jno
push
cmp
mov
leave
mov
lods
jae
dec
or
test
shll
loop
cltd
jecxz
lret
enter
nop
lods
int
jmp
lret
add
notb
inc
popf
je
push
test
mov
cld
dec
mov
lret
dec
fimull
repz
pusha
loope
rcrb
jo
adc
push
rcl
pop
adc
jle
dec
add
or
inc
stos
sbbb
pop
lret
jns
lahf
ja
rcll
push
fiadds
test
or
add
xchg
sbb
mov
shlb
xchg
fnstcw
xchg
addr16
mov
xchg
pop
jmp
fstl
insl
in
add
xchg
cmp
sub
lea
sub
pop
mov
mov
sbb
xor
push
push
in
inc
je
mov
lret
in
stc
icebp
addr16
popf
cmpsb
stos
jae
lahf
dec
and
pushf
fcompl
or
adc
movsl
into
loop
imul
sbb
pushl
add
push
inc
inc
fucomp
jbe
int
lods
dec
mov
rclb
and
in
aas
xor
xchg
scas
orb
movsb
stos
ret
ffreep
icebp
inc
mov
pop
sbb
rcl
mov
clc
ds
out
push
cmp
andl
pop
xlat
xchg
or
loop
insb
add
mov
mov
sti
imul
sub
je
hlt
cmp
dec
rorb
icebp
nop
push
pop
sti
shrb
sbb
lcall
inc
call
cmpsl
xor
call
pop
icebp
xchg
jp
insl
jne
mov
or
mov
cmp
pop
mov
jnp
push
les
movsl
or
mov
mov
lds
or
das
mov
mov
and
decl
fsubr
test
or
je
outsb
out
inc
adc
inc
call
and
ja
mov
popf
mov
es
cmpl
inc
mov
outsl
mov
fildl
or
dec
jp
dec
aas
mov
add
sbb
sahf
outsl
outsb
add
ret
or
icebp
mov
pop
jne
scas
mov
jnp
mov
and
jno
imul
movsl
adc
xlat
aad
dec
cmp
add
rorb
cmp
sub
iret
jnp
sarb
mov
lahf
imul
outsl
cmp
pop
repnz
push
js
ds
mov
movsb
mov
lret
pop
lock
jne
out
pop
fyl2x
add
mov
arpl
lock
testl
bound
xchg
ja
dec
and
jo
outsl
pop
test
xchg
or
fadd
mov
jnp
push
pop
scas
xchg
xor
cmpsb
movl
nop
daa
sbb
adc
mov
jg
dec
mov
sub
ljmp
dec
into
dec
test
lock
fisttps
cmp
jno
lahf
cmpsb
jnp
xor
nop
out
ret
scas
das
and
pusha
scas
in
daa
ret
and
lret
or
and
lcall
gs
add
xor
push
stos
inc
pusha
lret
test
jmp
pop
dec
push
pop
inc
cmc
jns
loop
stos
and
lods
jae
sbb
dec
push
pop
sti
fwait
mov
mov
xchg
ds
or
loopne
sbb
cmp
dec
jge
lea
adc
movsb
jae
pop
push
mov
js
leave
fprem
jge
hlt
mov
cmpl
xchg
imul
in
sahf
out
or
sti
mov
sbb
mov
sahf
stc
ljmp
sbb
or
mov
fsubr
fwait
add
js
test
mull
mov
fnstcw
or
inc
daa
dec
pop
cmp
dec
cmp
mov
add
adc
out
outsl
jl
push
cli
push
leave
out
pop
cmp
cmc
dec
mov
call
or
sub
sarb
pop
shll
xchg
jge
lahf
sbb
fldl2t
sub
in
pusha
jne
mov
ss
xchg
inc
mov
sbb
arpl
loop
push
xchg
cmpsl
sub
rcll
dec
mov
hlt
push
nopl
scas
loopne
mov
lods
pop
insb
movsl
mov
daa
mov
and
popa
mov
xchg
test
xchg
in
sbb
insl
cmp
addr16
mov
and
mov
push
inc
arpl
enter
loop
stos
adc
pop
mov
test
push
sahf
push
stc
dec
jbe
dec
mov
int3
int
ljmp
popf
nop
add
lods
cs
adc
jnp
cmp
hlt
and
lds
jp
loope
dec
lods
imul
lds
adc
and
fs
int3
out
adc
or
mulb
clc
aam
jmp
dec
out
or
nop
lock
mov
cmc
nop
pop
and
sbb
add
cltd
xor
inc
pop
push
push
pusha
ss
jne,pn
lods
in
neg
mov
stc
xchg
xor
push
sbb
mov
test
outsb
out
cltd
xor
dec
and
mov
mov
fdivl
repnz
or
andb
xchg
stos
cmpsl
notl
test
xchg
cmp
xchg
push
xor
mov
mov
dec
aad
out
nop
lods
sbb
vaddpd
movsb
cmp
or
es
or
inc
pusha
jl
push
inc
mov
pop
ds
pop
push
mov
out
dec
fiadds
mov
mov
xor
in
out
insl
sub
xor
mov
pop
dec
dec
inc
adc
cltd
mov
and
or
inc
push
jmp
loop
xor
xor
cmc
jne
enter
xchg
pop
fnstsw
mov
mov
roll
les
lods
mov
push
rcll
push
shl
jae
jecxz
dec
fists
lret
xor
rorb
cli
rcrl
insl
lret
inc
add
xorb
xchg
mov
popa
scas
sbbl
loop
add
ds
inc
repz
jae
cmpsl
push
jmp
mov
jo
cmp
cmp
inc
dec
push
sbbb
xlat
push
popa
sti
aam
pop
xor
testb
xchg
inc
ficoms
cltd
std
or
outsl
push
pop
dec
cmp
jp
add
mov
cmp
loopne
xlat
loopne
inc
and
xchg
das
std
movsl
mov
loop
pop
loopne
ret
out
cmc
pop
stos
inc
mov
lods
dec
sbb
inc
sbb
push
and
arpl
data16
stc
push
pop
mov
xlat
mov
jne
mov
stos
fstpt
cmp
cli
lret
mov
pop
clc
inc
out
mov
mov
cmp
inc
dec
dec
dec
cld
cmpsb
aas
adc
pop
inc
and
push
xchg
clc
loope
or
mov
ds
push
or
fstl
mov
push
adc
mov
movsl
fdiv
outsb
outsb
andb
leave
xchg
jo
cli
rorb
add
mov
fildl
push
dec
mov
inc
or
shrb
std
je
jg
cmp
les
vcvttss2si
rorl
and
out
das
xchg
xor
mov
jne
cli
sbb
lods
stos
xchg
popa
or
pop
mul
mov
mov
es
jo
into
enter
ljmp
mulb
popf
sub
and
hlt
mov
pop
sub
xchg
ss
arpl
mov
out
outsb
out
sbb
jno
xor
mov
inc
in
daa
or
test
push
adc
ss
lcall
mov
xlat
and
fistpl
xor
jmp
xchg
mov
or
gs
inc
and
push
imul
adc
mov
incl
mov
xchg
call
lock
xor
sbb
lret
push
sti
mov
popf
lods
ss
xor
repnz
mov
test
scas
push
stos
pop
or
stos
shrl
jmp
mov
divl
mov
sbb
jge
dec
outsl
add
cmc
lods
xor
mov
jp
inc
add
mov
cli
adc
cs
add
mov
es
adc
cmp
sub
in
icebp
movsl
in
loope
pop
jmp
fisubl
in
adc
ljmp
adc
sbb
out
pushf
add
hlt
lcall
xchg
outsb
shll
add
movsl
jge
adc
mull
push
outsl
sub
ret
push
jecxz
rolb
pop
repz
scas
adc
mov
lods
inc
int3
and
sub
dec
hlt
testb
xchg
fucomip
inc
in
xor
popa
xor
xchg
test
in
stc
inc
or
mov
pop
pop
pop
icebp
push
aaa
dec
in
mov
orb
xor
inc
xor
popf
xor
mov
mov
sbb
and
les
pop
xor
adc
pushf
pop
test
and
mov
lods
ljmp
bound
aaa
add
js
mov
roll
cs
add
scas
cmpsl
add
in
mov
sub
jb
iret
jno
aam
and
mov
stos
inc
in
movsb
dec
mov
ret
pop
ret
adc
pop
imul
dec
or
mov
js
xlat
arpl
mov
jns
sub
adc
popf
nop
into
pop
push
arpl
cmp
inc
out
or
outsb
xchg
xchg
lods
pop
dec
loop
dec
je
mov
sbb
fimull
pop
hlt
scas
cmp
rcrb
mov
inc
addl
jmp
sahf
ja
mov
out
ja
add
xlat
mov
push
jle
jb
sbb
sbb
mov
data16
cwtl
push
sub
movsl
jge
fidivl
inc
jns
stos
or
jne
stos
js
subb
andb
fs
lahf
fimull
scas
xchg
aaa
iret
es
shlb
test
xchg
jg
xor
rol
sbb
inc
pop
sub
lret
aaa
push
xchg
adc
inc
push
jo
movsl
mov
loop
mov
cli
pusha
cli
mov
daa
jle
cmc
cmp
js
add
icebp
inc
clc
test
enter
sbb
sub
xchg
data16
pusha
push
ss
out
or
jmp
fldcw
addr16
push
inc
fwait
jbe
stc
popf
call
and
mov
sub
outsb
mov
lcall
and
int
in
xchg
push
cmpsb
sub
or
es
sub
or
mov
adc
dec
sub
sub
adc
mov
xchg
dec
lret
jnp
imul
call
cwtl
data16
mov
je
mov
mov
mov
lods
andl
test
lods
test
fldcw
cmp
push
jae
mov
sub
add
or
sbb
popf
orb
lea
lods
jle
sbb
or
push
mov
test
or
hlt
mov
aam
sti
and
jmp
mov
xchg
adc
dec
mov
cmp
mov
mov
loope
addb
fistpl
mov
pop
jns
inc
sarb
ss
inc
ret
push
out
mov
arpl
pop
out
test
or
outsb
adc
pop
xor
icebp
movsl
and
movsw
cli
xchg
jge
lds
lods
inc
mov
lds
rcll
mov
or
sahf
js
inc
in
mov
stos
int
push
jnp
js
jge
add
cltd
sub
pop
mov
pop
test
ficomps
pop
jo
push
mov
push
jae
pop
mov
cmc
mov
mov
pop
lock
in
add
inc
jae
ftst
loope
js
fdivs
mov
jmp
pop
sub
sbb
jmp
xchg
daa
pop
adcl
pop
xchg
test
shll
std
xchg
push
sub
out
test
into
mov
cs
sahf
dec
inc
dec
cwtl
data16
xchg
push
inc
scas
je
mov
je
push
add
je
jg
adcb
xchg
addr16
jecxz
mov
push
test
push
push
rolb
testb
popa
xor
push
mov
popa
sbb
xchg
test
in
mov
push
dec
ss
test
inc
inc
add
outsl
dec
mov
mov
aas
movsb
dec
xchg
adc
movsl
mov
mov
inc
cmp
ljmp
pop
fdivrp
subb
sub
cmp
repz
push
call
or
sub
pop
dec
out
xor
loope
push
lcall
movsl
js
and
push
hlt
xorl
cmc
sti
adc
cmpsl
test
jmp
fbld
out
leave
add
mov
cmp
xchg
addb
xlat
or
lods
xchg
or
lcall
inc
fmull
xor
mov
repz
mov
ss
cli
pop
lods
inc
dec
or
lods
dec
lods
and
mov
imul
pop
adc
cmp
iret
bound
xor
popa
pop
inc
push
fistps
mov
mov
mov
xchg
cmp
and
in
adc
sub
adc
pop
inc
pop
bound
jbe
out
xchg
mov
or
mov
sub
out
movsb
inc
int3
sub
dec
push
es
in
js
fdivrl
mov
outsb
add
mov
pop
cmp
outsl
mov
xchg
mov
sbbl
pop
pop
jl
dec
dec
nop
cmp
xchg
fldl
aaa
sbb
cmp
xor
dec
lahf
push
sbb
xchg
inc
cmc
in
shrb
xchg
adcl
test
inc
test
push
push
xchg
shrl
rol
enter
imul
mov
jl
cmp
mov
imul
stos
xchg
ret
xchg
or
arpl
repnz
lods
test
jmp
fcoms
push
mov
jae
dec
push
mov
jb
sarb
mov
cs
fcmovne
or
shll
rclb
cs
push
iret
les
icebp
jae
movsl
andb
mov
push
adc
bound
xchg
and
repnz
mov
inc
faddp
xorb
sahf
xor
rclb
pusha
mov
push
stos
dec
aas
sbb
outsl
pusha
inc
dec
push
std
push
ret
ret
xor
adc
outsb
int
add
dec
out
mov
lods
xchg
out
je
mov
push
pop
and
xorl
iret
and
sbb
and
mov
mov
push
xchg
lret
fucomp
inc
push
stc
loopne
pop
sub
aas
mov
and
out
enter
push
jmp
jne
clc
jo
pop
xchg
sub
push
dec
hlt
out
mov
negl
cmp
std
mov
imul
mov
mov
pop
xor
mov
sti
mov
or
mov
inc
repnz
dec
dec
jns
mov
cmpsl
dec
dec
add
mov
fmul
not
push
add
mov
lret
dec
fucomi
xchg
incl
mov
or
adc
iret
fsubrs
or
pop
pop
lods
insl
inc
pop
lods
sub
jbe
xchg
stos
clc
stos
mov
mov
xor
callw
dec
dec
enter
movb
xchg
ds
jo
add
jne
js
push
ret
lcall
jecxz
jnp
inc
fldcw
sbb
xor
mov
push
mov
push
push
cmp
repnz
xor
iret
fildl
into
cmc
cmp
jb
cld
jb
cmp
mov
in
cld
push
sub
int3
shrb
repnz
jae
add
push
xchg
inc
aas
push
inc
pop
inc
and
pop
mov
xchg
rol
ds
jg
xor
adc
mov
and
lahf
sbb
sub
dec
and
test
aad
stos
and
push
mov
cwtl
test
inc
in
nop
fs
roll
nop
jl
add
nop
mov
pop
int
inc
pusha
popf
push
mov
outsl
inc
and
dec
fisttpll
int
mov
fs
pusha
lods
mov
jb
mov
push
je
imul
aaa
inc
sbb
outsb
outsl
add
fldcw
mov
loope
fisubl
shlb
pop
gs
mov
fistpll
pop
popf
test
sbb
mov
cmp
loope
mov
in
shrb
sub
jo
and
mov
into
mov
inc
out
aam
cmpsl
ret
xor
gs
pop
and
adc
mov
mov
arpl
cmp
xchg
cmpl
mov
nop
lret
rol
out
pop
mov
pop
ficoms
mov
or
mov
push
push
movsb
imul
les
stos
js
clc
ret
or
test
pop
push
sbb
cwtl
pop
sbb
dec
sub
and
lock
cmp
into
je
mov
adc
negb
or
dec
filds
add
imull
xor
sahf
mov
mov
ja
popf
repnz
xchg
xchg
inc
in
out
push
mov
mov
push
sarb
leave
xchg
push
loopne
imul
cmc
xor
push
xchg
mov
divl
lock
push
inc
lcall
mov
sub
fisubl
dec
xchg
sub
outsb
mov
les
insl
lods
xchg
fmuls
mov
jne
ds
test
jge
lret
add
xchg
mov
or
je
xchg
mov
cmpsb
cs
pop
movsb
inc
mov
sbb
es
out
cmp
in
popf
dec
mov
and
jb
ret
xchg
lcall
imul
xchg
sbb
dec
pop
fmulp
add
and
cmp
xchg
lahf
adcl
out
inc
add
add
sub
ds
lds
cmc
jmp
addr16
mov
sub
or
shl
xchg
dec
ljmp
mov
adc
out
test
aaa
and
push
in
mov
sbb
int3
ret
xlat
jnp
or
xor
or
data16
sub
in
subb
pop
mov
loope
shll
arpl
int3
and
push
mov
inc
nop
push
pop
or
push
cli
adc
or
adc
loope
or
lea
or
lods
add
sbb
pop
rcrb
pop
sarl
into
push
push
pop
push
jne
adc
rorb
xor
insb
jge
jne
sahf
scas
inc
rorb
xor
dec
adc
test
jg
add
mov
mov
fmull
pop
cs
addl
xlat
int
add
dec
cltd
call
pushl
leave
lret
sbb
sahf
addl
jmp
push
cwtl
into
out
enter
gs
or
and
jmp
push
and
pop
stc
adc
andl
xlat
cli
ret
mov
cmc
adc
xor
mov
dec
loop
xor
jmp
mov
dec
inc
stos
dec
cmp
loope
sbb
mov
hlt
mov
fpatan
lods
lock
dec
cmpsb
ret
mov
and
ret
stos
jne
js
lods
jo
add
mov
and
data16
dec
ret
dec
pop
pop
cmp
bts
repz
popa
js
inc
fstps
pop
jmp
shl
pop
adcl
mov
frstor
jae
es
fwait
lahf
into
or
nop
jl
in
add
popf
pop
clc
sahf
je
push
popa
inc
hlt
jbe
ficoml
sub
sub
xchg
clc
rol
mov
sbb
mov
jmp
pusha
xchg
jg
insb
and
mov
lret
sbb
cmp
add
mov
inc
adc
ds
sub
imul
xor
int3
cmpsl
mov
pop
bound
lods
mov
dec
fists
ljmp
dec
or
out
add
ss
fbstp
lock
or
mov
loope
jb
daa
outsl
stos
push
pop
scas
daa
subl
stc
in
leave
mov
mov
xchg
sti
jbe
xor
pusha
add
enter
or
mov
mov
dec
mov
scas
jno
sub
enter
push
pop
hlt
sbb
adc
sub
pusha
add
daa
dec
cmp
and
mov
leave
and
dec
loope
xchg
mov
pushl
popa
enter
loope
mov
sbbb
inc
xorl
insl
add
xor
imul
icebp
pop
fisubs
dec
cmp
outsb
clc
sahf
ret
mov
popf
movsb
inc
rcll
cmp
inc
cwtl
dec
lds
lock
in
lods
sub
push
decl
in
cmp
pop
pop
push
push
adc
push
inc
xor
xor
ss
jae
data16
rorb
cmp
bound
dec
iret
pop
mov
adc
sbb
int
cltd
orl
xchg
mov
andl
and
adc
fdiv
dec
xchg
push
lcall
test
mov
pop
mov
cmpsl
out
push
and
movsl
dec
adc
ja
loop
mov
jae
push
adc
jno
jp
jbe
dec
mov
ds
adc
jbe
inc
pop
loop
in
fsts
out
push
ds
dec
repz
fistpll
pop
fwait
stos
jne
fnstenv
adc
or
fnstcw
xchg
lret
mov
mov
daa
fsub
fstp
in
ud0
jbe
incb
das
sti
stos
inc
popf
sub
leave
jo
jne
pop
cs
loop
jns
push
in
or
js
adc
jae
mov
ret
sarl
sbb
adc
inc
pop
call
test
pop
xchg
cmc
push
mov
jb
mov
testb
cwtl
adc
dec
or
mov
stos
mov
clc
mov
add
minps
movsb
icebp
loope
mov
or
push
leave
clc
shlb
jbe
xchg
test
lret
je
addr16
lahf
xchg
xchg
into
inc
dec
pushf
xor
sub
xchg
test
outsb
aaa
lret
push
cli
pop
add
or
cli
sarl
push
xor
mov
repnz
dec
lock
mov
mov
aaa
stos
pop
insb
in
sbb
pop
ret
shlb
lock
sahf
jbe
sar
add
out
test
and
movswl
sub
bound
cmp
inc
ljmp
sarb
aad
cmp
das
mov
mov
cltd
push
lock
jae
ja
push
pushf
cli
pop
mov
arpl
jmp
fsubr
cmp
lcall
add
movsl
add
cwtl
xor
loopne
test
cwtl
fcompl
decb
mov
test
sub
xchg
in
fwait
out
mov
jmp
cmc
in
fildll
leave
xchg
inc
repnz
int
pop
add
test
mov
ss
psllq
mov
fcoml
or
inc
addl
jmp
jp
or
jbe
mov
es
mov
movsl
int3
movsb
lret
jl
ljmp
sub
shll
push
ret
xlat
xchg
xor
jmp
lcall
jge
cli
jg
sub
in
sti
sti
imul
aad
mov
sbb
push
imul
pushf
js
jne
jl
add
pop
jo
test
pop
push
pop
ficoms
mov
int
shl
les
loop
lret
dec
out
loope
test
leave
mov
aad
pop
repz
stos
add
les
lret
bound
cmpsl
jmp
and
adc
insb
xchg
push
mov
fs
pop
mov
or
xchg
dec
loop
mov
xor
daa
lock
and
enter
test
test
icebp
cld
sbb
pop
jne
subl
lret
xor
or
scas
sarl
mov
or
insl
or
call
push
dec
outsl
push
jg
ds
adc
pusha
mov
pusha
jo
sbb
jp
sub
jne
mov
ss
jg
inc
pop
jge
sbb
and
cmp
mov
test
cltd
pop
add
data16
daa
inc
stc
out
sub
daa
clc
outsl
xor
xchg
xchg
fcoms
clc
ja
or
ffree
jo
mov
pop
and
jmp
sub
das
sbb
sbb
dec
outsl
push
orb
xchg
out
xor
push
insb
add
push
loop
std
lods
fmuls
pop
lea
adcb
mov
out
xlat
cmc
ret
es
push
xlat
outsb
mov
xor
cmc
mov
ds
lcall
lcall
mov
in
and
in
push
mov
cmpsl
add
movsw
mov
fisubrl
in
sahf
mov
outsb
mov
popa
sbb
add
clc
sub
dec
popa
cmp
fimull
sbb
popa
add
in
dec
lods
aam
cmp
mov
dec
pop
xor
loope
test
mov
enter
lea
cmpsl
stos
push
add
insl
or
mov
inc
adc
mov
gs
rcrl
jecxz
mov
dec
out
ljmp
in
adc
push
aaa
cmp
loope
sbb
and
cmp
jecxz
or
pop
ret
jb
std
sbb
push
dec
dec
cmp
call
and
inc
jbe
test
cli
mov
pop
xor
pop
inc
out
repnz
fildl
adc
stc
sbb
mov
pop
enter
jle
pop
bound
cmp
into
xor
inc
aas
pop
out
test
jp
push
ret
cmp
jecxz
es
pusha
or
test
xor
cs
xchg
push
sub
mov
out
sub
jno
dec
sub
popf
lods
dec
ret
push
sti
fsubrs
loopne
test
cltd
mov
lcall
jno
mov
sbb
inc
pusha
mov
add
xor
and
inc
push
cld
xchg
sbb
and
push
mov
mov
or
mov
sbb
push
xlat
into
in
jg
pusha
mov
in
or
push
push
rcl
add
mov
pusha
jge
mov
insl
mov
aaa
sarb
or
mov
adc
pushaw
fisttpll
xor
rcrb
jnp
jmp
mov
pop
mov
mov
push
mov
jp
in
in
mov
ljmp
mov
inc
rol
enter
cmp
push
das
addr16
xor
shll
je
hlt
or
mov
dec
mov
fistl
jg
pop
and
inc
loop
ljmp
xchg
pop
mov
cwtl
stos
mov
add
les
je
mov
ja
lds
es
sbb
mov
fldenv
pop
repnz
addl
or
repnz
add
fbstp
cmc
push
enter
loope
inc
sbb
repz
cwtl
das
jl
in
mov
dec
test
dec
clc
nop
add
dec
stc
mov
jmp
add
jnp
leave
jae
dec
mov
aas
daa
testb
sbb
test
jmp
fst
outsl
cmp
stos
enter
dec
ja
sarl
pop
insb
aam
into
mov
and
leave
imul
imul
sarb
adc
dec
cmpsb
mov
mov
je
add
stos
sbb
add
sbb
repz
or
in
sahf
rcr
leave
pusha
addb
pop
stos
push
sub
pop
cmc
repnz
jge
dec
fcoms
or
call
and
push
fmuls
or
push
jb
sub
adc
imul
jnp
inc
and
rcrb
add
insl
outsb
loopne
dec
push
imul
xchg
xor
aaa
mov
mov
dec
adc
adcl
repz
pop
add
repz
inc
into
cmp
flds
out
xor
arpl
inc
fidivl
xor
push
mov
xchg
push
sbb
or
mov
iret
ss
mov
shrl
cmp
cli
dec
add
addl
popf
add
aad
repz
addr16
jo,pn
popf
stc
or
push
mov
push
pop
movl
push
call
das
inc
cmp
test
cld
stc
mov
fmul
enter
cmp
movsl
mov
outsb
xor
push
imul
fs
xor
outsb
xor
sub
mov
push
ja
bound
mov
cli
xchg
jnp
test
pushf
xor
sti
or
in
incb
test
or
int
iret
repz
lahf
shr
fbld
inc
dec
mulps
andb
mov
clc
ret
test
xor
frstor
nop
or
shlb
cmp
pop
cwtl
inc
mov
mov
sub
popa
mov
inc
jb
lcall
adcl
ja
je
jae
cmp
sbb
repnz
movsl
cmpsb
add
mov
cmp
je
push
int3
sbbl
add
lods
out
mov
mov
aaa
push
out
movsl
cmpsb
cld
fisttps
in
test
jl
cmpsl
ret
mov
pushf
mov
lds
mov
pop
out
adc
shl
mov
stc
subb
jmp
mov
nop
pop
xchg
ss
lds
or
cmp
aad
stos
leave
loope
sub
test
sbb
ss
lret
pop
xor
popf
lods
and
pop
movb
mov
test
jmp
sub
dec
push
sub
push
fdivs
push
mov
jle
cmpsb
add
pop
lcall
cwtl
pop
mov
arpl
pop
mov
out
out
jne
fisubl
pmullw
out
mov
rolb
push
or
xor
ds
jge
fldenv
arpl
aad
mov
push
ja
mov
test
lods
add
popa
mov
or
fnstsw
xchg
lcall
mov
pop
lret
stos
lea
lock
fildl
xor
movsb
jbe
popf
stos
or
bound
icebp
ljmp
lods
dec
in
mov
fmulp
sub
adcl
fmull
testl
cmp
into
xchg
shrb
ds
pop
fildl
out
dec
mov
mov
xor
into
fwait
stc
push
sub
sbb
bound
out
cmpsl
jo
and
mov
pop
or
push
mov
cwtl
or
cltd
arpl
cmp
cmp
lods
loope
sbbb
sub
push
call
or
mov
and
mov
dec
xchg
out
test
sub
cld
ja
adc
test
in
aam
inc
xor
sarb
adc
add
dec
dec
in
push
pop
dec
lret
cld
sub
sbb
jns
out
popa
inc
mov
outsb
or
mov
nop
push
imul
mov
xchg
out
je
dec
cmp
push
imul
cltd
lahf
mov
pop
fldcw
fldenv
arpl
into
dec
mov
repz
call
add
sbbb
sbb
ret
repz
dec
xor
movb
insl
ja
push
push
pop
in
jg
loope
xor
mov
lea
inc
xchg
jle
sub
cmpsl
lock
cltd
xchg
add
cld
xchg
stos
insb
scas
dec
sbb
sbb
lods
stc
jecxz
sbb
cltd
inc
sbbl
or
fldt
jmp
stos
stos
jge
test
and
popf
push
lock
cld
xchg
fdivs
sbb
cmp
jge
sbb
in
cmp
push
cmp
xor
in
repz
lret
cmp
neg
xchg
scas
push
movsl
adcb
cmpsl
lods
xor
popf
mov
fs
mov
aad
aad
adc
loopne
rcll
test
pop
in
adc
sbb
pop
pop
and
lret
inc
dec
jb
or
mov
mov
cltd
mov
cmp
dec
push
lret
sbbb
cli
mov
in
les
mov
xchg
jbe
out
rcrb
mov
int
popf
out
inc
jmp
xorl
in
loope
mov
mov
cmpsb
repnz
mov
push
sub
pop
roll
imul
push
lea
ret
shll
test
fsubrp
or
xorl
or
rorb
hlt
pop
jge
jp
sub
and
lds
mov
rol
pop
rcl
mov
out
aaa
in
lods
out
push
fildl
cmpsb
and
fstpt
mov
add
mov
sti
fwait
inc
mov
jmp
xchg
sbb
add
repnz
push
stc
je
fisubrs
inc
loopne
xchg
push
xchg
jae
dec
jp
sahf
ret
jne
mov
push
push
xor
ljmp
xchg
fisubl
jb
dec
sub
adcl
inc
sar
mov
loopne
jmp
adc
jp
push
inc
rcr
pop
mov
mov
jmp
daa
adc
lods
inc
cwtl
dec
adcl
call
inc
in
imul
pop
xor
mov
jl
dec
fstpl
sbb
bound
mov
sub
mov
ljmp
jne
or
mov
cmpsl
es
inc
testl
adc
lods
daa
out
lahf
gs
sahf
adc
jno
aas
inc
adc
xchg
insb
enter
and
xchg
xor
repnz
xor
fcom
rolb
jnp
es
loope
notl
push
out
sub
negl
lods
xchg
xchg
sub
cmc
or
ficompl
ret
test
test
mov
out
lds
inc
shl
sbb
pop
mov
xchg
call
dec
push
cli
repz
in
loope
push
daa
loope
jecxz
jne
pop
mov
iret
xor
mov
dec
inc
inc
nop
xchg
or
nopl
jns
sub
in
mov
movsb
cmp
lret
and
ret
sub
popa
or
mov
xor
into
sbb
add
shrl
cmp
hlt
js
sub
xchg
cltd
jo
jle
out
mov
cmpsb
xor
cmpb
cmpsb
popa
jmp
mov
leave
stos
cmp
jnp
int3
movsl
xchg
xchg
in
push
lret
dec
add
xor
stos
jae
jo
repnz
inc
xor
sbb
cli
sbb
dec
xor
mull
in
ret
dec
sbb
mov
pop
divb
popf
sti
test
sub
loopne
jp
mov
xor
dec
in
cmp
cli
xchg
jnp
jle
insb
pushf
sbb
xchg
mov
or
adc
mov
iret
data16
push
dec
fldl
nop
cmp
jae
add
hlt
mov
imul
mov
gs
dec
mov
xchg
bound
lret
push
out
xlat
mov
scas
and
sbb
xchg
popa
cmc
clc
or
sub
sub
leave
stc
pushl
xor
bound
jecxz
cli
mov
leave
xchg
dec
cmp
repz
stos
add
sbb
lcall
xor
xchg
or
gs
jns,pt
repz
sbb
dec
bnd
push
out
mov
lahf
stos
shll
insl
add
xchg
lcall
test
rclb
mov
cmc
cmp
sbb
mov
test
pop
pop
fdivs
sub
cmp
popa
arpl
jle
pop
jae
movsb
sub
out
or
push
cmc
sub
add
add
rol
lock
jl
jae
xchg
or
pop
ds
repnz
in
dec
mov
mov
or
push
jl
stos
mov
and
cmp
and
or
andb
and
xor
sbb
mov
cmc
cmp
clc
les
repnz
and
jns
xor
ljmp
xchg
xor
gs
jnp
negb
aas
pop
xchg
popa
aad
aaa
pop
mov
inc
sbb
xchg
stos
and
out
xchg
and
xor
in
jp
and
jne
adc
shlb
call
inc
stc
shlb
xor
jmp
imul
repnz
mov
add
mov
daa
sbb
push
std
push
in
stos
cli
cmpsl
out
ss
jge
adc
ret
push
inc
fscale
popf
scas
out
cmp
lahf
stos
mov
xor
test
cmp
inc
or
mov
inc
into
push
jnp
fnstcw
push
movsb
pop
xchg
and
xchg
add
icebp
mov
add
in
pop
and
mov
jae
mov
push
xor
xchg
dec
loop
sbb
or
xor
lret
cld
dec
loop
jg
jb
lret
je
popa
xchg
push
out
xchg
stc
lahf
mov
adc
popa
pop
add
mov
push
je
cmp
or
sub
push
mov
lods
add
jo
dec
aaa
adc
out
jns
push
fnstenv
jp
sbb
jp
cmpb
sub
push
fidivl
and
gs
mov
lods
inc
popa
xchg
and
dec
cmp
std
adc
das
push
inc
pushf
faddl
clc
xchg
into
xchg
dec
sub
dec
pop
push
mov
fsubrl
fdivrs
push
fwait
or
mov
lock
sub
xor
dec
cli
pusha
ret
mov
sbb
mov
imul
loop
enter
mov
jecxz,pn
les
mov
stc
jl
jmp
xor
mov
fwait
cmpsl
lods
adc
test
adc
stc
ja
xor
cmpsl
adc
in
adc
mov
loopne
lcall
xor
pop
push
out
push
mov
ja
sbbl
xchg
fmuls
dec
adc
out
push
scas
in
mov
mov
inc
push
xchg
cli
mov
mov
divl
cmp
mov
stos
or
lods
cltd
imul
pop
inc
ficomps
js
fisubrl
xor
insw
jle
clc
mov
sub
push
aad
jnp
out
test
out
repnz
adc
xorl
sbb
jnp
mov
cmpsl
push
scas
and
in
xlat
jmp
ss
inc
ret
dec
cmpsb
sbb
adc
sub
inc
clc
lcall
addr16
cmpsb
popaw
fsubr
arpl
stos
mov
jle
pusha
leave
cmp
call
dec
xchg
xor
xor
popl
jmp
cmp
rcrl
mov
es
sbb
jne
lea
sbb
add
cmp
push
jae
imul
inc
test
inc
sahf
ss
ss
ds
push
jo
cmp
sub
inc
adc
xchg
pop
sub
and
fwait
lds
mov
xor
stos
cmpsb
pop
sub
loope
cmp
inc
xchg
je
xchg
bound
nop
mov
shlb
out
aaa
clc
notl
and
adc
sbb
and
mov
mov
pop
xchg
cmp
js,pt
lahf
loopne
scas
fistps
xlat
pop
adc
mov
pop
xor
imul
add
dec
fmuls
std
insb
lds
fdivrl
jl
test
xor
jmp
adc
daa
lods
add
or
imull
fnstenv
mull
cld
lret
jne
fisttps
in
arpl
cld
cmp
jno
mov
mov
negl
xchg
xor
xor
push
in
sub
sub
sub
cmpsb
inc
pop
cmp
test
aam
lock
fldt
shr
lahf
insb
and
push
push
cmp
imul
mov
xor
mov
push
aam
push
je
xchg
mov
inc
adc
jbe
pop
jmp
enter
call
repnz
leave
xchg
out
loop
je
ss
jle
clc
cli
push
mov
or
sub
stc
popl
inc
xchg
pop
sub
test
scas
jo
call
in
imul
in
test
and
adc
stos
xchg
mov
or
in
and
stos
xchg
insl
pop
test
dec
and
sbb
fisubrs
cmc
sahf
decl
in
xor
mov
sar
push
cmpsl
dec
mov
hlt
enter
out
sub
adc
out
sub
fnstenv
les
shl
add
xchg
adc
cwtl
sub
xor
sub
sbb
cwtl
test
imull
cmp
inc
add
jae
pop
movsb
lret
lea
mov
fwait
cld
arpl
sub
cmp
cmp
push
jno
sahf
inc
gs
mov
repz
in
mov
ss
notl
test
enter
pop
daa
in
jl
negl
adc
mov
ljmp
sub
into
inc
sbb
into
sbb
inc
add
xchg
cwtl
sbb
in
add
xchg
mov
ret
sub
insl
xor
xchg
jbe
dec
shr
and
push
cwtl
test
push
sub
lods
scas
test
addr16
jecxz
mov
andl
fsubs
cld
stos
or
push
out
repnz
fimuls
cmp
cmpsl
cmp
mov
inc
fxam
jl
outsb
sub
push
daa
sahf
in
mov
mov
ljmp
mov
pop
je
sti
jne
xchg
cs
xchg
dec
jl
add
pushf
repnz
loop
add
pop
in
cwtl
pusha
sbb
pop
mov
ret
clc
dec
add
inc
inc
add
insl
pop
and
sub
daa
sarb
or
xchg
hlt
xchg
cmp
fs
in
test
mov
test
sbb
dec
popf
or
jnp
sub
dec
inc
fidivrs
repnz
dec
and
push
push
dec
jmp
mov
ja
movsl
sub
insb
aam
aam
enter
jmp
outsw
push
fnstcw
add
std
xchg
jecxz
sbb
je
mov
pop
stos
pop
out
bound
or
push
mov
cltd
test
xor
sub
dec
push
stc
or
shll
sub
bound
shl
mov
mov
aad
loopne
xor
scas
arpl
add
add
adc
in
das
aas
outsb
loope
push
nop
stos
inc
mov
mov
fwait
insb
enter
ret
pop
inc
xchg
mov
jg
push
and
loopne
inc
fnstcw
xor
sub
lock
push
sub
xchg
gs
dec
mov
inc
aas
jne
sahf
arpl
xchg
mov
jmp
pop
cmp
hlt
or
jle
stos
lcall
fmul
pushf
xor
rcll
inc
xchg
mov
fsubs
into
xor
pusha
pop
enter
and
xor
sub
jecxz
loopne
addb
mov
gs
int
cmp
sbbl
ljmp
dec
inc
jbe
adc
daa
icebp
aad
jae
xor
pop
sahf
lods
fwait
out
test
dec
pushf
jo
push
or
fldt
lret
push
ja
mov
fprem
cmp
jae
out
push
xchg
jno
loop
dec
mov
fcomp
and
or
mov
mov
jecxz
cltd
mov
mov
imul
sbb
push
pop
popa
xchg
sub
lea
xchg
test
ret
loopne
fldenv
xchg
push
pop
mov
sbb
movsb
dec
xlat
add
loope
jp
loopne
aad
das
push
fs
and
and
data16
add
add
scas
sub
xchg
nop
mov
out
insb
mov
in
cld
jle
cmpsl
sbb
pop
jl
dec
sbb
push
aaa
in
cmpsb
les
mov
xor
jb
mov
sub
das
lcall
jecxz
daa
das
sub
lcall
data16
xorb
leave
fldenv
mov
or
sti
mov
ret
pop
sub
out
sub
xor
test
jl
dec
je
aaa
mov
cmp
sbb
xchg
dec
in
subl
outsb
jg
mov
fdivrl
sub
sbb
in
lcall
inc
ja
jns
dec
sub
inc
hlt
fldenv
les
pop
jne
stos
mov
push
xor
add
dec
cmc
mov
popa
dec
cli
jne
or
aam
or
cmp
xor
les
in
push
std
pop
cmc
daa
lcall
adc
lds
cld
ja
jmp
bound
pop
movsl
lds
aas
popf
dec
das
js
notb
adc
les
sbb
push
dec
mov
jg
sub
cmp
dec
decl
sub
xor
pop
lret
cmp
mov
subb
or
hlt
jbe
jp
ret
stc
aas
sbb
push
add
sbb
rcrb
xorl
inc
sub
mov
xchg
pop
out
mov
popa
nop
push
add
fwait
popf
mov
mov
aam
and
stos
jbe
cmp
cli
nop
adc
addb
pop
jmp
pop
jns
shll
insl
insl
pop
imul
hlt
mov
lock
jg
enter
add
pop
xor
jmp
sar
ljmp
dec
inc
andl
aam
mov
lea
loope
xchg
xchg
orb
enter
xchg
adcl
dec
mov
add
sbb
mov
cmp
push
cmp
push
fistpll
stos
and
sub
fisttpl
std
stos
mov
add
imul
or
cmc
sbb
scas
orl
ret
pop
ret
filds
testl
and
cmp
pop
std
addr16
mov
jo
mov
nop
adc
ljmp
push
mov
jecxz
and
inc
dec
shl
fidivl
neg
push
dec
arpl
lcall
enter
mov
cmp
or
ud1
sbb
inc
jo
push
aaa
cmpsb
or
int
xchg
sbb
mov
incl
mov
cmp
cmp
lcall
aad
popa
incb
addr16
popa
dec
out
stos
cmpsl
pop
jb
lret
ss
mov
cmp
jle
dec
inc
test
mov
fldl
pusha
testl
ficoml
pop
mov
jmp
jnp
ds
pop
adc
iret
adcb
mov
dec
std
jp,pn
or
dec
mov
mov
add
and
std
push
lret
daa
outsl
pop
inc
mov
cmc
xchg
jae
lea
arpl
popf
xchg
in
stos
lret
addr16
aam
xchg
xor
pushf
imul
rcrl
shl
mov
dec
je
aas
out
popf
ret
frstor
mov
mov
jg
mov
fsubs
push
repz
push
jae
loopne
or
jp
andb
ja
roll
mov
cwtl
int
sub
psraw
and
scas
fucomp
sub
popl
xor
arpl
pop
jno
repz
cs
fs
and
push
adc
jg
and
cmp
sbb
cs
stos
cltd
out
xchg
lods
out
add
cltd
js
repz
fwait
mov
icebp
fwait
add
xor
inc
cmpsb
js
repz
insb
pop
fnstsw
xchg
xchg
lods
cmp
mov
popa
cmc
jle
add
cmc
xor
cmp
sbb
adc
cmp
outsb
loope
mov
jbe
adc
popa
fdivrl
push
push
dec
sub
out
pop
pop
movsl
mov
sahf
sub
aaa
xor
and
inc
mov
inc
fnstenv
cmp
xorl
jp
inc
pop
cmpsb
inc
out
enter
aad
loope
xor
fbld
loop
xor
dec
enter
sub
jmp
lds
lock
fistps
addl
xlat
outsb
inc
loopne
cmpb
xor
mov
dec
arpl
in
inc
jmp
mov
inc
clc
out
out
outsl
xor
adc
in
push
rcll
cmpsl
cmpsb
sbb
out
and
cld
push
sbb
loopne
rcr
scas
out
data16
mov
cmp
hlt
ljmp
sbb
or
adc
ss
in
stc
int3
jae
xor
xchg
imul
dec
mov
xchg
scas
fcmovu
mov
sub
leave
ds
je
jp
je
int
inc
std
and
scas
ror
cltd
or
fsubrs
inc
daa
inc
jae
sbb
sbb
mov
jp
nop
push
jnp
xchg
ja
adc
xchg
jb
setb
inc
or
or
jmp
enter
mov
and
icebp
cmp
dec
sti
mov
pop
bound
in
mov
or
test
aad
xchg
inc
or
xchg
pushf
shll
aam
pop
jne
adc
push
nop
ja
xchg
pop
push
dec
push
in
mov
aas
push
xchg
enter
aad
movsb
enter
or
rolb
adc
icebp
or
test
or
dec
dec
mov
cwtl
jge
mov
pusha
jns
cwtl
inc
sarb
push
lods
mov
mov
rcl
mov
pop
jl
aam
ds
out
inc
or
sahf
pop
xchg
push
jge
mov
sub
push
inc
and
pop
adc
cli
insb
jbe
xor
lahf
lock
addr16
pop
out
test
test
xor
xchg
in
vaddps
into
outsl
add
cmc
xchg
icebp
push
push
push
mov
mov
mov
mov
rcl
outsl
push
jle
cmp
mov
shrl
lds
inc
jne
ljmp
dec
add
dec
outsl
pop
movsb
jl
jmp
mov
push
bound
lcall
xchg
adc
imul
push
inc
pushf
xchg
or
mov
inc
push
arpl
sub
fwait
jmp
inc
stos
xchg
in
jg
addl
daa
mov
mov
mov
in
pop
les
mov
jle
mov
stos
xchg
call
lods
cmc
mov
add
cmpsb
pusha
mov
inc
jnp
fsubrl
mov
sti
mov
cwtl
notl
lret
adc
add
testb
in
push
sti
addr16
pop
lret
cwtl
leave
adc
sub
cli
shlb
movb
ret
daa
dec
cs
or
fnstenv
orb
aad
mov
inc
in
sbb
in
daa
mov
pop
xor
fwait
dec
dec
dec
mov
faddp
sar
ljmp
call
push
in
test
xchg
dec
arpl
int3
or
stos
lea
push
lods
push
mov
mov
enter
mov
xor
out
out
adc
jp
imul
or
out
addr16
fisubs
mov
ret
scas
xchg
int
dec
push
lret
aam
mov
ja
in
xchg
xor
push
dec
pop
add
out
ret
and
push
sub
mov
jno
scas
xchg
and
lock
enter
fldl
mov
xchg
insb
pop
inc
xor
orl
add
leave
xor
cmp
loopne
ja
pop
outsb
mov
dec
or
cwtl
cld
sbb
mov
or
daa
outsl
shlb
jp
cmp
mov
ja
shrl
pslld
sub
movsl
cmp
push
je
loope
jl
das
pop
push
sbb
and
add
daa
add
fimull
sub
sti
pop
hlt
add
mov
orb
dec
arpl
movsb
xor
and
int
inc
jle
cmp
icebp
jae
jmp
adc
cmp
lret
xchg
cltd
pushf
xor
loop
sbb
hlt
ja
add
lret
rsm
mov
push
orl
inc
xchg
xor
popf
shlb
cmp
mull
cmp
fildl
out
leave
out
fs
in
cmp
outsl
jbe
dec
cmp
js
adc
jmp
jbe
adcl
adc
xchg
cmpsl
sbb
insb
nop
cmp
scas
inc
add
pop
cmpsb
mov
fcmovnb
imul
push
test
push
dec
cli
inc
mov
push
add
jo
insl
mov
cmc
fs
jge
rcll
filds
outsb
jp
movsb
jecxz
jge
mov
jge
dec
sbb
call
je
adc
lock
xor
adc
rol
pop
repnz
mov
inc
xchg
sub
clc
pushf
fst
sbb
jns
ljmp
xlat
out
in
push
sub
jmp
or
sub
jmp
dec
or
mov
rcr
outsl
inc
or
ss
push
int3
out
orb
or
leave
sub
sahf
adc
repnz
stos
jns
lds
xor
jo
jns
int
mov
imul
rep
mov
iret
andb
fsts
iret
inc
cli
in
arpl
xchg
xor
les
sbbl
int
shlb
mov
push
lcall
lret
ja
pushf
test
shrb
jmp
addr16
or
pop
les
and
fsts
call
cli
stos
pushf
and
scas
mov
xor
sbb
div
push
in
test
sub
gs
in
dec
jb
loope
pop
movsb
mov
inc
cld
xchg
insb
jnp
mov
fidivrl
pop
inc
sub
nop
or
sub
dec
sub
pop
dec
sbbb
pusha
sub
jne
cmpsb
lock
inc
es
mov
or
jge
andl
xchg
lods
enter
inc
fs
gs
shrl
mov
mov
jnp
pusha
jnp
adc
push
push
push
daa
or
stos
jmp
in
pop
fnstcw
push
xchg
adc
cmp
sarb
hlt
jbe
shl
xchg
and
mov
xor
int
movsl
addr16
mov
ja
ds
or
adc
xor
inc
inc
sub
jo,pn
insb
fisubrs
imul
mov
sub
push
jns
xor
or
int3
mov
int
fucomip
iret
test
out
jbe
out
xchg
xchg
dec
xchg
adc
out
sub
aaa
sbb
xchg
out
and
and
sar
ja
push
pushf
xor
out
aas
push
cmp
fsubrs
lds
jno
scas
cmpsl
jg
xor
int
jp
dec
test
sbb
xor
jno
push
ret
pop
push
pusha
xchg
stos
mov
repnz
dec
sbb
insb
or
mov
dec
daa
stc
out
test
or
data16
cmpsb
sbb
or
lret
sub
sub
mov
les
mov
add
inc
adc
or
inc
push
xchg
hlt
lahf
or
aas
xor
aad
sti
into
aad
mov
dec
sahf
into
mov
push
ss
adc
mov
mov
int
loopne
inc
cs
add
sahf
popa
imulb
call
adc
shlw
jp
test
mov
mov
add
cmp
push
xchg
xlat
cmc
jae
jnp
leave
dec
cmp
in
mov
cmp
xchg
lea
cli
cmp
xchg
cmc
into
out
aam
fadds
lahf
lods
hlt
sti
out
add
jmp
adcl
lahf
sub
rolb
xor
aas
fs
xchg
in
push
bound
sbb
xor
fs
fucom
jno
and
mov
ja
mov
push
jne
jo
inc
daa
clc
mov
sbb
popf
pop
jg
or
pushf
addb
jb
stc
push
insl
ret
mov
cmc
inc
in
lods
loop
inc
cmp
xlat
ss
dec
xchg
test
push
cmp
cmp
ja
xor
cld
pop
cmpsb
pop
data16
inc
stos
pop
pop
dec
lahf
or
jbe
add
mov
jne
xor
popf
sbb
sti
addl
test
aam
fistpl
cmp
movsb
dec
dec
popa
xchg
rclb
addl
pop
add
test
les
mov
loop
xchg
cmp
and
push
and
imul
inc
xlat
mov
fstps
arpl
imul
mov
jae
jb
outsl
scas
inc
jno
add
pop
xchg
int
sahf
popa
mov
jecxz
aas
or
filds
sub
rcl
movsb
movsb
sub
lds
jns
xor
and
inc
shr
ljmp
into
aaa
mov
test
sub
dec
shlw
mov
push
pop
fdivs
pop
enter
adc
lret
in
or
lods
fisubrl
mov
inc
out
sbb
insl
adc
cmp
insl
add
out
subb
cmpsl
and
imul
es
mov
ror
ret
and
lock
jmp
jns
mov
rep
mov
sub
cwtl
sbb
and
mov
les
insl
sbb
bound
ss
jge
loope
jge
adc
jg
pop
test
cmp
mov
sbb
sbb
sub
test
or
sti
add
imul
in
mov
out
mov
aad
inc
pop
push
pop
stos
mov
dec
loopne
mov
icebp
movsl
insb
cmp
cmp
nop
aad
jge
dec
iret
mov
dec
dec
dec
mov
repz
insl
movsl
fbstp
aaa
jmp
mov
inc
in
std
aad
mov
mov
cmc
dec
mov
fadds
rcrl
push
in
adc
fidivl
jb
push
xor
aad
jae
lock
xrelease
loopne
adc
mov
mov
mov
outsb
sbbb
pop
test
cmp
sbb
push
dec
lods
add
sub
ja
repz
push
inc
xor
add
lock
lret
dec
test
mov
ret
fdivrl
push
fimuls
sbb
dec
ret
js
add
lea
sti
in
pop
rcl
popl
pop
cmp
dec
repnz
cmp
cmp
mov
mov
and
test
addr16
out
call
scas
das
pop
pop
fsubl
adc
out
pusha
iret
xor
lahf
inc
lret
inc
cli
iret
xor
lcall
arpl
in
pushf
sahf
jo
and
pop
stc
mov
sub
pop
je
mov
fidivrs
cwtl
cmp
pop
scas
ss
movsb
inc
nop
pop
sub
inc
adc
xchg
sahf
orb
push
pop
jmp
cmc
sbb
jo
hlt
popa
xor
xchg
jmp
xchg
or
bound
mov
inc
data16
out
in
ds
in
add
mull
dec
int3
outsl
jnp
pop
cli
or
lods
jmp
adc
and
jo
and
mov
xchg
in
rcrl
rol
outsl
gs
mov
es
and
or
repnz
js
push
xor
cwtl
loope
out
scas
inc
hlt
mov
fimull
out
inc
jmp
stos
sub
or
mov
jns
lret
xor
mov
int
in
push
fidivrs
mov
push
inc
inc
push
mov
lods
xor
mov
aam
and
adc
mov
xchg
into
ficompl
cld
add
or
mov
and
test
cmc
xchg
addl
push
dec
dec
and
jmp
add
test
fadds
dec
cmp
jbe
out
stos
repz
sbb
push
inc
inc
adc
push
faddl
cmp
movsb
xor
popa
jno
push
ljmp
std
out
sbb
push
push
inc
loope
xor
inc
aas
lds
sbb
mov
dec
loop
and
nop
adc
or
rcrb
bound
js
pop
outsl
out
sbb
xchg
sub
xchg
hlt
mov
dec
in
sbb
push
insb
es
or
mov
ficoms
cmpsl
or
add
dec
lds
cmp
sbb
mov
repnz
mov
ret
mov
loopne
xchg
fmull
mov
clc
in
rcrb
sbbb
call
aaa
roll
enter
lret
pop
inc
inc
mov
push
adc
js
add
cmpsl
cs
scas
arpl
leave
mov
xlat
push
rcr
jo
pusha
in
pop
xor
fsubrp
add
bound
in
mov
pop
repz
push
call
or
shlb
notl
lods
fldl
xor
in
ljmp
aaa
xchg
jne
les
xor
loopne
add
lods
inc
enter
stos
popf
inc
gs
or
gs
jl
xchg
mov
mov
push
fwait
adc
pop
rclb
testb
sti
es
pop
dec
or
dec
adc
adc
std
dec
push
xor
inc
jle
mov
movsl
mov
outsl
daa
scas
loopne
inc
push
dec
pop
ret
call
adc
dec
fucomip
das
cmp
or
xchg
orl
push
push
popf
mov
xor
push
mov
loope
jge
push
mov
out
sub
lret
mov
or
push
add
subl
adc
cmp
add
out
cld
add
fldt
stos
andl
sub
lret
pop
mov
cmp
jge
mov
push
push
shr
out
sti
xor
test
ret
add
mov
sar
and
inc
rcrb
movsb
test
xchg
stc
dec
nop
daa
jne
in
loop
cli
mov
rcll
fisttpll
add
mov
incl
push
loope
jmp
orl
aad
mov
subb
mov
push
sub
hlt
sub
mov
adc
je,pn
jmp
lahf
push
and
pop
imul
fisttps
dec
mov
leave
cmpsl
sub
hlt
rclb
fisubrs
outsl
jo
jmp
mov
lahf
push
mov
pop
adc
gs
or
sbb
cmp
sbb
cli
shll
fstps
lahf
loopne
push
cmp
ficoms
testb
jno
mov
and
aam
test
dec
adc
mov
xchg
inc
call
adc
pop
ja
adc
arpl
fcomps
aas
mov
testb
adcb
pop
lea
ret
outsb
and
push
call
js
sub
sbb
jmp
lret
jae
sub
push
sar
fidivs
inc
clc
cwtl
cmp
push
je
cmp
test
inc
push
jge
stos
mov
cmp
bound
xchg
jnp
leave
push
jl
cwtd
pusha
lret
decl
ja
loopne
mov
jo
rcl
push
daa
inc
sub
mov
dec
clc
or
sub
add
in
xchg
scas
or
and
mov
add
mov
dec
cmp
daa
pop
loop
movsl
fisttpll
add
adc
add
scas
test
into
stos
ljmp
dec
pusha
test
push
adc
or
push
and
ret
mov
jno
lret
mov
int
inc
jb
lret
mov
ss
gs
fmull
dec
loop
lcall
mov
xchg
add
enter
xor
push
sub
aam
and
bound
int
or
add
imul
movsl
add
pop
xorl
loope
push
sbb
call
insl
das
add
push
mov
mov
cmp
mov
lahf
mov
jne
push
out
sbb
mov
cmp
jmp
mov
dec
mov
insl
repnz
idiv
sbb
pop
sbb
add
inc
mov
jge
jecxz
sbb
cld
push
sbb
out
outsb
pusha
iret
or
jae
or
testb
mov
pusha
xchg
daa
jmp
lret
insl
insb
add
mov
outsl
cmp
xchg
pushf
and
ficompl
push
pop
sti
cmp
mov
loopne
shl
inc
fcoml
hlt
mov
adc
fsubr
clc
decl
shll
cltd
js
test
incl
ss
movsb
push
inc
lret
cmovae
leave
xor
dec
push
mov
in
cmp
pop
outsb
into
aas
jbe
movsl
sub
xchg
pop
mov
mov
cmp
mov
mov
out
xor
imul
jbe
stc
in
jo
pop
bndstx
sbbl
and
rcrb
sarb
mov
sbb
jo
cwtl
shll
mov
add
add
sahf
decl
xchg
mov
sbb
sub
mov
je
push
and
setne
pop
mov
fwait
sub
mov
in
add
push
or
jge
mov
cltd
pop
mov
es
aam
pop
push
mov
out
negl
push
sbb
out
push
sbb
or
outsb
jne
and
sti
es
xchg
pop
push
movsl
dec
cmpsb
jns
fs
push
mulb
sbb
jge
and
inc
sbb
cmp
data16
mov
shlb
loop
sub
sbb
sbb
mov
sbb
ret
fwait
sub
or
dec
pushf
mov
lret
jmp
inc
and
daa
cs
into
mov
cmp
test
or
int
xchg
bound
add
cmp
repnz
pushf
mov
mov
sbbl
add
jl
lret
push
mov
push
add
lahf
cmc
cmp
shll
lock
je
push
add
nop
xlat
adcb
mov
and
xchg
inc
popa
jg
dec
out
push
insl
mov
shlb
testb
dec
mov
fnsave
cs
imul
or
pop
cmp
pop
loope
or
inc
mov
fists
pop
push
in
js
popa
mov
xor
dec
test
cmpsl
xchg
daa
int3
adc
sub
adc
xchg
sub
cmc
mov
cmp
enter
lods
xchg
jns
pop
hlt
cld
sbb
nop
dec
adc
dec
inc
add
or
js
sub
ficompl
dec
scas
das
sub
scas
in
cmpsl
mov
jmp
push
aad
adc
or
data16
jbe
lds
fs
popf
outsl
push
mov
aaa
push
xor
mov
test
sub
out
xchg
ds
cmc
jl
je
and
inc
cmp
test
sbbl
cmp
cmp
repnz
xchg
adc
mov
rcll
or
mov
xor
lahf
lsl
mov
addr16
in
xlat
push
cwtl
das
dec
hlt
fstl
js
repnz
xor
or
pop
inc
cmp
ja
mov
mov
mov
fistps
xchg
lds
push
sub
xchg
xchg
jmp
xchg
adc
ret
js
or
stos
adcl
cmp
xor
xchg
in
pop
cmp
mulb
mov
jno
inc
xchg
out
repz
ds
xchg
push
inc
fidivs
mov
cmpb
shl
and
mov
and
mov
dec
xchg
aad
or
imulb
xorl
out
jae
test
xchg
cmc
repz
cmp
movsl
cmp
loope
mov
pinsrw
mov
jns
mov
mov
add
xchg
out
je
pop
sub
dec
fwait
notb
lahf
xchg
xchg
lcall
dec
dec
ss
push
mov
xchg
loop
pop
clc
push
sub
std
jecxz
pop
mov
jg
les
cmpsb
xchg
mov
push
pop
adc
inc
dec
or
cmp
sub
jmp
fstps
repnz
pusha
ds
cmp
orb
sarb
cld
mov
add
lcall
shrl
pop
out
inc
int3
mov
data16
xor
hlt
scas
call
jnp
ljmp
mov
sarl
enter
pop
jge
sbb
dec
fdivl
cmpsb
mov
cld
mov
stos
mov
xchg
fsubl
cmp
mov
test
fwait
mulb
push
xor
dec
or
cs
mov
fwait
clc
in
popf
add
cmpsl
dec
dec
pop
xor
mov
insl
insl
int
pop
mov
inc
jle
xlat
sub
adc
cmpsl
sbb
cmp
stos
pop
das
ret
fwait
andl
adc
aam
jecxz
xor
ja
jg
or
dec
ficoms
out
push
je
test
insb
xor
adc
in
sub
push
notl
mov
pop
push
jnp
fldenv
cmpsb
cmp
xchg
push
cmpsl
lock
testb
push
xchg
mov
jno
pop
ljmp
add
xchg
jmp
and
test
mov
lcall
mov
popa
int
xlat
rcll
jne
cmp
mov
movsl
inc
and
js
mov
in
lods
mov
or
fbld
push
xchg
jecxz
mov
ficoml
lahf
lahf
mov
and
mov
jge
cld
pusha
mov
mov
push
xchg
scas
add
aad
in
push
fsubr
negb
push
dec
pushf
cltd
cmc
std
fsubl
or
andb
pop
xchg
fs
push
imul
cmc
mov
xchg
mov
adc
cmp
mov
push
mov
aad
ret
push
out
and
sbb
or
adc
movsb
repnz
leave
outsl
aas
lret
push
add
loope
decb
aas
stos
push
out
stos
enter
mov
xlat
addr16
cmp
dec
jno
out
cmp
add
jne
fadds
dec
fdivl
popa
lret
in
inc
and
cld
aas
shrb
notl
fwait
test
cli
aaa
sub
xor
loop
sbb
mov
movsl
or
popa
mov
stos
sub
adc
iret
pop
icebp
cmp
pop
xchg
pop
js
lock
sub
sbb
les
jecxz
or
and
popa
and
push
inc
jbe
mov
lret
lcall
iret
fmull
xchg
scas
xor
out
popf
push
in
enter
loop
mov
mov
mov
enter
in
adc
jnp
inc
iret
inc
mov
and
jg
out
cld
add
sti
mov
and
popa
and
in
push
mov
test
cmpl
test
xor
popa
lds
out
push
pushf
imul
int3
je
push
inc
mov
sbb
xlat
sbb
mov
jo
pushf
cs
adc
xchg
icebp
out
stos
mov
idivb
jbe
mov
mov
xchg
lahf
adc
or
xor
cmp
popa
repnz
daa
test
cmp
and
cld
ja
inc
fisubl
push
ficoml
dec
cmc
rorl
lea
mov
jle
mov
pop
testb
xchg
adc
addb
pusha
lcall
call
xor
mov
and
imul
mov
call
pop
subl
dec
ja
jle
rcrb
sbb
int
nop
int3
into
aam
bound
rolb
dec
inc
and
push
jmp
pop
rcr
out
inc
mov
lods
mov
insl
sti
mov
lahf
sub
or
xchg
jnp
push
repz
mov
push
add
das
lret
and
jmp
aad
mov
jge
pop
into
fidivrs
mull
pop
inc
push
insl
je
lea
cltd
xor
mov
lock
stos
ficoml
mov
inc
jb
outsb
aam
enter
je
jns
out
movb
lcall
lahf
inc
xchg
fsubr
cmpsb
pop
fwait
lock
leave
movsl
sub
jecxz
xchg
sarl
mov
rol
pop
fmul
fstl
aad
jae
push
outsl
mov
loopne
add
xchg
or
adc
idiv
popf
test
sub
mov
pop
movl
push
push
in
cmp
inc
ficomps
xlat
jmp
mov
fisubl
addr16
xor
add
repnz
jae
dec
xchg
in
int
add
mov
adc
aaa
push
rcrb
pop
pusha
int3
sub
xor
rclb
int3
dec
mov
loop
pop
push
shl
mov
jo
clc
imul
fidivrs
insl
mov
leave
lahf
push
mov
pop
nop
xor
cli
stos
xor
push
outsl
addr16
lret
xor
rcrb
mov
and
je
push
sub
push
dec
xchg
loopne
sti
int3
arpl
xchg
jbe
hlt
xchg
and
sbb
push
out
fimuls
call
xchg
xor
lcall
out
popf
loopne
iret
fs
jae
sub
mov
push
push
stc
inc
xor
outsl
xor
fsubl
lret
ret
push
flds
into
int3
inc
imul
jle
mov
push
sbb
adc
cwtl
das
addr16
add
sub
push
int3
popf
in
test
xchg
es
in
or
and
test
and
add
aas
xchg
pop
xor
pop
lahf
cmp
cli
adc
out
mov
push
out
rcll
mov
aaa
ja
scas
das
popa
fadd
inc
lret
fs
negb
popa
cmp
cmp
sub
adc
and
add
mov
xchg
jno
repz
dec
xchg
mov
adc
xchg
adc
ret
jb
push
push
mov
test
cmp
sti
pop
inc
mov
fs
ret
mov
cltd
test
and
imul
or
imul
scas
jns
pop
clc
js
or
orl
jae
mov
bound
cmp
sub
andl
js
rcrb
loopne
loopne
sbb
mov
movsl
popl
shll
sub
jg
fcompl
test
jg
fwait
stos
mov
sbb
add
push
xor
repz
mov
mov
mull
cmp
out
xor
punpcklbw
sub
sahf
inc
leave
dec
cmpsb
or
int3
mov
fxch
xchg
add
sahf
xchg
lods
lret
aaa
push
jmp
dec
cmp
in
push
aaa
repnz
stc
lret
xchg
stos
add
orl
pop
sbb
hlt
adc
test
gs
pop
mov
cmpsl
adc
xchg
stos
call
aaa
psadbw
lahf
out
inc
pop
add
fcoms
inc
lds
movsl
es
dec
or
and
push
mov
push
pop
inc
ss
cmpsb
out
sub
in
cmp
xchg
jl
out
cmp
imull
outsb
sub
inc
add
ss
lock
pop
pop
xchg
add
sti
testl
jno
leave
fldenv
lds
push
jno
in
insl
sub
cmp
and
jo
xchg
add
mov
jp
mov
popl
xorl
fmuls
loope
cmp
int3
movsb
sbb
adc
shr
jg
mov
cmc
xchg
cwtl
push
mov
add
xchg
add
js
inc
or
xor
sub
mov
xor
addr16
loope
pop
icebp
aam
mov
imul
lahf
ljmp
inc
cmpsl
les
adc
adc
jecxz
inc
enter
fwait
pop
ret
adc
pop
mov
cmc
push
pop
xchg
stos
xor
repnz
mov
and
xor
inc
lds
stos
lods
jmp
or
mov
jge
and
sub
mov
insb
jecxz
fsts
cmp
add
lcall
push
mov
cld
mov
ss
les
xor
fldl
lcall
fcomp
cmc
in
xchg
adc
adcb
mov
outsb
jnp
dec
and
scas
add
addr16
lods
mov
clc
sub
xlat
shrb
add
xchg
subb
cmp
hlt
or
push
cltd
mov
fmull
mov
pop
xchg
sbb
mov
cmp
leave
stos
insl
xchg
imul
mov
lret
jne
push
decl
outsb
mov
es
pop
pusha
cli
pop
jae
or
scas
aam
push
pop
xchg
call
dec
loopne
mov
sahf
test
addr16
cld
jo
lds
pop
mov
jmp
fwait
testb
dec
daa
out
sbb
push
sbb
xchg
cmpsb
mov
cmpsl
adc
sbb
imul
int3
mov
lcall
cwtl
mov
hlt
add
mov
int
shll
mov
nop
nop
stos
mov
vpmullw
hlt
lret
int3
sbb
dec
mov
sbb
iret
outsb
inc
sbb
aas
negb
dec
cmp
mov
xchg
adc
fwait
add
scas
mov
jae
jne
popa
call
or
adc
dec
xchg
mov
push
pop
addr16
cmpsl
push
mov
xchg
es
jle
inc
or
mov
stc
stos
mov
scas
test
fnstsw
aad
fmull
into
out
add
jge
pop
cmp
dec
cmp
repnz
push
rcl
mov
dec
mov
mov
stos
cmp
test
mov
sbb
cmpsb
std
inc
sbbl
cld
cs
popf
jg
sub
fisubs
sbbl
xor
xchg
insb
add
adc
adc
adc
pop
in
loop
out
sub
mov
cmc
push
jb
and
test
push
pop
mov
sub
xor
pop
jg
adc
pop
mov
add
pop
out
aas
adc
pop
dec
inc
es
xor
ja
movsb
add
fadd
mov
jno
in
xor
fmul
push
lcall
xor
seta
shlb
mov
sub
xor
sbb
and
and
incb
inc
or
push
scas
inc
loop
jb
inc
test
pusha
xor
mov
daa
arpl
aam
movb
sbb
inc
stc
cli
cli
pushf
cmp
loopne
jg
jmp
jnp
mov
dec
iret
in
imul
cmp
nop
inc
lahf
outsl
push
loope
push
les
pop
jmp
mov
js
xor
mov
pushf
pop
insl
sarb
jae
jns
cmp
mov
fdivr
pop
push
xchg
or
sarl
mov
enter
clc
pop
mov
jg
inc
leave
sub
mov
mov
jge
jno
insl
sarb
xchg
pop
aas
out
jae
shrl
jle,pt
stos
es
dec
cmp
arpl
jle
mov
movb
push
out
or
out
xchg
dec
mov
into
adc
xchg
mov
push
jbe
or
test
das
dec
xchg
packssdw
sbb
mov
inc
rolb
xlat
arpl
sub
push
inc
cmp
jae
insl
xor
sbb
ret
out
xor
scas
fidivrl
push
dec
repz
xchg
out
xchg
mov
sbb
ljmp
inc
orb
and
inc
hlt
and
adc
in
jae
cmp
cs
jnp
xchg
outsl
inc
dec
or
mov
lahf
subl
sub
ss
lret
loop
in
cmp
cmc
adc
in
in
mov
push
je
jae
push
dec
aaa
xchg
mov
xchg
in
stos
dec
pop
lods
divl
adc
and
rorb
outsl
fidivs
sarb
pusha
mov
jb
pop
loopne
sbb
push
mov
and
xor
repz
push
in
outsl
xchg
dec
mov
pop
ret
inc
xlat
fisubl
pop
lock
add
ja
jge
or
jmp
dec
xor
pop
and
inc
fidivl
inc
pop
iret
mov
mov
sub
sbb
or
mov
pop
into
cmc
cmp
fisubl
inc
cmp
mov
pop
or
pop
mov
testl
mov
adc
fidivrs
mov
fs
mov
js
lcall
and
xchg
lods
cmp
fxch
jmp
xchg
jns
adc
xchg
xor
cmp
mov
ret
xor
sbb
mov
mov
mov
lock
add
jl
cs
xchg
jbe
popf
xor
inc
cltd
xor
enter
in
mov
pop
insl
jns
sbb
rol
inc
or
fnsave
andb
fisubrs
push
daa
inc
fsts
imul
dec
cmp
test
mov
or
xor
sbb
shrw
flds
pushl
cmp
xchg
adc
mov
sub
test
mov
push
rclb
fistps
xchg
dec
sub
and
clc
inc
sbb
lret
cmc
or
inc
cmp
inc
sub
or
xor
loop
jle
loop
dec
cmp
aam
lock
fs
mov
aas
sbb
jle
aad
fwait
pop
std
jp
inc
mov
stos
jg
call
lea
mov
std
mov
xor
dec
lret
xchg
adc
sbb
cmp
test
xor
fucomp
jo
test
sbb
mov
cmp
adc
push
jo
pop
cmp
ja
xor
stc
add
inc
pop
xor
sub
loopne
jg
mov
push
aas
add
pop
mov
lds
mov
rolb
mov
cmp
outsb
dec
pop
lods
mov
lods
mov
fnstsw
std
sti
dec
mov
push
or
add
outsl
pusha
sub
jae
sahf
lds
ss
lds
dec
cwtl
lea
jmp
out
sbb
cmpsl
sbb
mov
iret
pop
jno
test
jnp
in
jle
pushf
mov
xchg
fwait
repnz
inc
pop
add
jo
dec
dec
sbb
insb
sub
repz
cmp
imul
jne
int
inc
fisubrs
mov
leave
mov
aam
xchg
add
xchg
mov
incl
addr16
add
cmpsl
js
add
jmp
add
inc
and
or
ret
nop
add
dec
pop
stc
or
pop
outsb
jo
aad
insb
popa
scas
out
fs
shlb
xor
andb
adc
or
mulb
stos
repnz
pop
out
ja
in
aam
cmp
out
mov
int3
sub
pop
cmp
xor
sub
and
clc
std
clc
mov
movsl
or
mov
sbbl
addr16
test
xchg
imul
repnz
shlb
push
popa
in
xchg
loope
and
int
pop
pop
in
loop
mov
xor
sbbb
adc
loope
or
aam
adc
jne
hlt
stos
jbe
dec
xor
cmp
out
pop
popf
dec
mov
jge
jo
stos
sub
insb
pop
cmp
mov
pop
or
xchg
lock
jo
jle
dec
xchg
and
dec
aam
iret
arpl
mov
cmp
jns
sti
bound
sbb
inc
xlat
fs
pop
dec
inc
jecxz
notl
add
push
out
fldenv
jne
sub
int3
push
scas
jl
push
in
fdivs
std
out
mov
cmp
push
roll
popf
inc
repz
and
sbb
add
out
insl
add
or
sbb
sub
ss
std
fwait
xor
jbe
or
mov
stos
jbe
adc
ds
mov
int3
inc
outsb
cmp
imul
adc
ss
out
test
icebp
std
jecxz
cs
or
movl
pop
jge
fdivs
sbb
clc
or
xor
mov
dec
adc
or
push
xchg
add
inc
cmp
fwait
xchg
mov
daa
ret
cmc
jns
sub
mov
sar
push
aam
xor
in
xor
and
ds
divl
inc
shlb
lcall
or
xor
lds
call
push
adc
imul
xor
pop
int
lea
clc
push
cs
push
lods
cld
push
cmpsb
mov
pop
mov
cmp
sbbb
sahf
fdivs
push
pop
cmp
inc
add
lea
in
fmul
sbb
sbb
aas
ss
int3
loopne
es
cmp
or
in
inc
cmp
add
push
xchg
test
frstor
or
mov
mov
dec
popf
add
cmp
push
iret
popf
test
inc
and
mov
stos
sbbb
mov
out
test
dec
cld
mov
fucomp
push
cltd
inc
mov
mov
shlb
sbb
cli
test
arpl
push
lds
jecxz
pop
jle
inc
les
cltd
std
es
and
push
psubsw
mov
pop
mov
jmp
test
push
or
cs
push
hlt
adc
cmp
cmp
xor
movsb
fcmovnu
lock
dec
in
and
cld
dec
add
mov
lods
inc
inc
xorl
pop
movsb
movsl
xchg
insb
adc
mov
test
mov
xchg
in
push
outsl
sbb
cmp
ljmp
xor
jno
dec
scas
inc
push
in
jcxz
xchg
aaa
push
arpl
out
mov
mov
pop
mov
mov
jne
mov
fwait
cltd
cld
push
movsl
mov
test
iret
lret
mov
mov
dec
lret
sbb
jne
pop
aas
sbb
repnz
xchg
lods
cmc
pop
jae
adc
sub
lahf
sub
outsl
das
in
push
push
sbb
jb
pop
mov
or
or
and
popf
lods
push
jp
ret
mov
enter
mov
out
in
fwait
and
jle,pt
pop
pop
jns
dec
dec
fpatan
repz
mov
sub
mov
data16
scas
les
xchg
adc
daa
xchg
aad
movsb
pop
pop
andb
test
jg
xchg
mov
pop
das
je
insl
out
in
xor
ret
shl
dec
ds
cmc
ds
repnz
push
repnz
xchg
sub
pop
sahf
das
cmp
fadds
ffreep
enter
jecxz
popf
mov
jg
loope
lods
sub
lahf
fdivs
mov
or
mov
mov
xorb
aaa
pop
lods
adc
push
inc
mov
in
inc
mov
push
jg
stc
lods
gs
fiaddl
or
test
dec
int
pushf
xchg
xchg
mov
test
push
out
xchg
sbb
pop
test
mov
sub
loopne
mov
lret
cmpsb
mov
inc
cmpsb
dec
push
push
mov
mov
adc
mov
stos
adcb
rcll
dec
gs
fdiv
movsb
push
sub
into
jge
mov
loope
mov
mov
cmp
fimull
jmp
out
push
jmp
out
and
mov
sbb
mov
pushf
mov
lcall
mov
test
jb
xchg
xor
adc
dec
imul
imul
mov
cmpsl
cmc
aam
iret
fs
mov
xor
bnd
loopne
scas
cmp
mov
and
out
scas
in
push
sub
inc
jecxz
out
clc
pop
loope
add
xchg
mov
jae
push
mov
lcall
cmp
in
rclb
cmp
push
icebp
cwtl
test
push
push
pop
mov
popa
orb
sbbl
fs
int3
in
push
aas
dec
jb
aad
pop
pop
and
jp
test
xor
es
inc
arpl
lea
mov
addr16
mov
inc
jl
bound
outsl
scas
call
test
scas
ret
pushf
jb
xchg
adc
mov
cmp
cld
lcall
mov
xor
mov
push
inc
cmp
data16
sti
insl
inc
push
in
add
pop
shll
xlat
add
fsubs
mov
push
dec
js
sub
push
dec
dec
xor
sbb
inc
lock
push
adc
ja
std
insl
mov
decb
mov
es
imul
and
inc
push
inc
movsl
push
jmp
call
cmc
adc
frstor
mov
inc
dec
dec
test
js
pop
mov
push
xchg
mov
jl
mov
jg
shrl
leave
pop
cmp
and
cmp
mov
test
dec
xchg
repz
lock
pop
ja
xlat
in
jnp
dec
stos
jae
lods
ja
popf
push
lcall
shlb
inc
and
dec
repnz
stc
inc
incl
xor
and
mov
scas
rcrb
sub
jo
add
lret
ja
shl
es
xor
and
cmpsb
movb
ss
loop
loopne,pt
xor
loop
dec
dec
cs
int3
out
dec
dec
push
xchg
jno
rorb
inc
fs
shr
adc
adc
or
xchg
in
xor
push
repz
and
cmc
xchg
repnz
add
mov
dec
jne
jl
sarb
jnp
addb
int3
arpl
xchg
cwtl
jl
imul
cli
add
add
inc
in
push
test
sarl
nop
push
out
inc
cltd
pop
ss
fistl
dec
sub
iret
imul
ret
test
sbb
test
mov
pop
jp
ficomps
xchg
mov
inc
scas
pop
sub
jp
rol
inc
xlat
jmp
or
mov
xlat
outsb
repz
ja
adc
mov
inc
push
jecxz
dec
lock
push
cmp
fisubl
inc
push
cmp
mov
pop
jne
jo
xchg
loop
mov
sbbl
not
out
dec
jle
mov
push
shrl
push
xchg
aad
cmc
inc
out
imul
push
cmp
cltd
sub
pop
cld
push
cmp
mov
sub
lret
mov
cltd
fs
int3
xchg
or
sub
sbb
add
inc
sahf
push
or
xlat
arpl
jbe
jecxz
scas
inc
jnp
xchg
les
xor
in
sti
and
bound
dec
int3
lds
lcall
mov
push
insl
loopne
hlt
out
jp
mov
add
js
dec
out
sbb
repz
call
mov
pop
outsl
icebp
or
adc
fs
push
sub
stc
push
mov
js
or
cmp
stc
gs
inc
cmp
lock
in
sahf
popf
inc
pop
cmp
fs
and
inc
dec
repz
mov
inc
in
fwait
repnz
sahf
mov
cmpsl
and
add
in
dec
and
cltd
lahf
sbb
push
sub
and
hlt
sbb
dec
adc
out
or
xchg
ja
movsb
fbstp
cmp
xchg
lods
add
mov
ds
lds
in
xorl
jecxz
push
push
or
push
cmp
je
mov
jmp
or
push
mov
pop
mulb
aad
jno
jle
popf
scas
xchg
andb
dec
and
test
fdivp
push
in
sbb
pop
aaa
mov
stos
stos
add
cmc
ret
inc
pop
addr16
jl
mov
ret
je
arpl
aam
rcrl
jae
pop
pop
setb
inc
cmpsl
pop
sbb
movsb
mov
add
or
mov
imull
daa
cmp
pop
dec
jle
fldl
push
int3
nop
pushf
adc
xchg
cmp
adc
sbb
ljmp
push
or
jno
inc
sbbl
and
pop
popf
cmp
xor
insl
js
dec
stos
insl
fwait
add
test
xor
cmp
stos
in
or
mov
pop
test
lret
sub
ja
ja
neg
and
ret
bnd
pop
test
lcall
aas
inc
inc
push
or
jbe
push
xor
popf
gs
inc
aas
movmskps
mov
lds
dec
pop
test
dec
pop
jnp
insb
out
shrb
pmuludq
aas
les
mulb
fldl
mov
loopne
lods
inc
roll
ret
pop
xor
or
push
loope
mov
jb
test
in
add
idiv
sbb
dec
pop
mov
or
sbb
mov
cmc
ljmp
lret
adc
out
das
add
jmp
push
popf
push
pop
out
fwait
add
je
imulb
fstl
jb
std
cmp
cmc
pop
dec
sbb
ljmp
adc
lret
dec
push
adc
call
repnz
bound
fists
mov
jnp
std
outsl
addr16
into
inc
sar
aas
pop
xor
iret
cwtl
repnz
fdivs
or
stos
push
fldcw
sbb
and
xor
lahf
sbb
je
in
rcrl
aas
mov
ljmp
inc
xor
gs
in
inc
cmpsb
outsb
mov
inc
inc
pop
jl
or
push
sub
sub
push
cltd
cmp
mov
push
jbe
inc
mov
mov
sahf
in
dec
into
fdivrl
sahf
lods
movsb
and
mov
mov
out
xchg
subl
in
push
mov
mov
in
enter
out
cld
test
and
xchg
flds
std
mov
out
mov
in
mov
xor
mov
imul
enter
imul
outsb
and
sbb
shr
pop
mov
mov
dec
pop
cmp
sahf
aas
dec
or
push
int3
fadds
pushf
and
adc
scas
out
nop
sbbl
pop
filds
xlat
and
sbb
call
jge
pop
add
shll
pop
mov
adcb
jmp
lahf
cli
jnp
arpl
mov
xchg
inc
and
push
gs
mov
lock
and
shl
jl
xor
in
and
sub
repz
push
jmp
or
mov
flds
scas
lds
push
push
nop
and
aaa
lea
mov
push
pop
loope
push
stos
dec
loop
mov
inc
test
pusha
pop
mov
cmp
lret
in
das
lahf
push
fsubs
aam
insb
mov
sbb
repz
popf
aaa
shl
mov
and
mov
lret
gs
orl
rcrb
pop
shll
hlt
xor
jne
push
mov
je
mov
lock
dec
shlb
sbb
in
or
adc
xchg
xor
cltd
pop
xor
cmpsl
lret
push
cltd
hlt
testl
xchg
je
sarb
dec
mov
mov
lcall
add
sbb
xchg
repz
xchg
scas
mov
ret
pop
xchg
sub
jno
aam
ds
and
fwait
add
inc
push
into
jns
movsl
jno
xlat
imul
jecxz
movsb
jmp
sub
sbbl
xchg
jno
pop
bound
mov
pop
mov
mov
aad
inc
fildl
stos
cmpsb
sbb
mov
lcall
out
pop
jbe
jbe
add
cmp
cmpsl
mov
rcl
ja
xchg
pop
mov
adc
jnp
imul
pop
insb
jmp
sbb
or
pop
icebp
or
dec
int3
sub
ss
sub
mov
aas
popa
jmp
aas
dec
xor
sub
push
mov
cwtl
xor
fs
adc
inc
cltd
xchg
pop
jo
inc
cmp
pushf
aaa
int3
arpl
mov
xor
cmpl
test
fdivp
adc
aas
push
hlt
xchg
cmp
fwait
cmpb
sbb
in
push
lea
xchg
adcb
or
jp
stos
mov
adc
int3
cwtl
incb
adc
jl
pushf
lea
fisubl
fbstp
inc
or
dec
fistpl
inc
or
dec
jb
pop
movsb
outsb
mov
sbb
xor
fucomp
dec
sub
push
dec
lcall
xchg
mov
or
cmpsl
add
test
int3
xor
ret
mov
mov
or
les
jmp
shlb
jp
into
mov
adc
cmp
pop
pop
push
jne
mov
jg
popa
cmpl
shll
ss
jbe
pop
jp
mov
xchg
sub
lods
mov
pusha
scas
stc
xchg
lahf
pop
pushf
cli
rorl
fldl
mov
andb
insl
mov
jg
test
sub
fists
push
cli
xchg
lret
xchg
sti
sub
jecxz
add
ja
inc
in
push
dec
rorl
out
jbe
in
cmp
cli
test
sub
gs
xor
mov
orl
bound
xchg
fdivs
cmp
nop
ljmp
lods
clc
and
mov
outsb
push
mov
or
mov
shrl
sbb
mov
je
into
ret
dec
cmpsl
lea
stos
adc
test
add
inc
mov
pusha
movsl
out
sbb
jl
cmp
subb
xchg
mov
fs
mov
sahf
aas
loop
jmp
test
xor
pusha
xlat
mov
or
das
add
fs
push
aam
mov
mov
or
pop
jne
mov
std
xchg
dec
pop
daa
jg
decb
and
mov
ret
ror
aad
inc
pop
mov
aas
rorl
shl
subl
mov
pop
jno
pop
xchg
adc
fnstsw
xor
fucomip
push
xchg
stos
test
movsl
and
sbb
or
leave
mov
xchg
aam
mov
dec
fiadds
fmulp
xlat
push
dec
pop
es
scas
pop
cmp
pop
mov
inc
jmp
imul
movsl
in
mov
mull
fildll
mov
jbe
rorl
push
movsb
mov
test
leave
and
push
repnz
sub
int
lret
ja
repz
inc
popa
push
sub
cld
push
xor
and
loopne
push
fucomip
inc
mov
fistpll
mov
andl
mov
or
jne
test
pop
imul
stos
mov
cmp
jecxz
inc
fisubrl
scas
and
movsb
push
test
addr16
sbb
sub
flds
fldl2t
xor
iret
pushw
cmpsl
cmc
sbb
mov
add
mov
cltd
aas
rcrb
inc
sarb
jb
pop
jb
sbb
mov
push
sub
mov
dec
roll
cs
or
xchg
out
fsts
aaa
pusha
mull
cmp
sbb
mov
dec
es
arpl
mov
add
sub
cmp
hlt
mov
jnp
mov
hlt
daa
insl
mov
dec
out
pop
outsb
sbb
fdivp
movsb
cmp
cmp
in
pop
or
das
andb
dec
pop
add
push
mov
push
addr16
fcoml
mov
lock
nop
sbb
sbb
mov
out
mov
and
cld
push
je
fistps
outsl
mov
push
cld
sub
cmp
fcomps
test
aas
loope
call
movsl
js
mov
movsb
lret
adc
sbb
mov
sbb
cmpsb
in
mov
aam
shr
pop
or
sbb
jnp
add
js
out
pop
or
and
xor
ljmp
mov
lret
xlat
shl
xchg
pop
mov
dec
mov
lret
sbb
xor
pop
loop
sti
movsl
cld
stc
cmc
les
fstps
push
out
jmp
or
addr16
pop
cwtl
iret
lret
or
xor
mov
ret
shl
addr16
add
add
xchg
mov
jl
xor
iret
mov
pop
or
mov
outsl
leave
in
or
in
or
mov
jo
out
andb
jo
add
mov
pop
mov
lret
mov
mov
js
sub
gs
pop
mov
shrl
out
ficomps
mov
popf
sub
push
sbb
jp
loopne
inc
adc
cmp
ljmp
mov
icebp
sub
movsb
aam
das
mov
mulb
jo
out
roll
and
int3
test
ret
jno
cmp
adc
adcl
test
mov
mov
push
sbb
fidivrs
jle
std
scas
lds
xchg
subb
push
test
add
shl
dec
and
jl
xor
pop
lock
ljmp
jno
jnp
or
sbb
inc
out
movsl
ret
jge
lods
mov
out
sbb
imul
insl
mov
push
mov
subb
mov
psllq
rolw
add
stos
adc
and
pop
sbb
dec
sub
test
add
repz
push
mov
adc
push
je
or
adcl
cmp
sub
ss
stos
loop
popa
pop
aaa
or
adcl
outsl
mov
loop
sub
inc
push
rclb
js
in
cs
rolb
shrl
repz
sbb
icebp
mov
loop
xchg
adc
subb
test
int
outsb
xor
mov
std
xchg
xor
fisubrl
test
adc
push
lret
mov
sub
stc
repnz
inc
jmp
repz
adc
daa
cltd
rcl
test
dec
jo
fdivrl
in
sub
or
pop
adc
or
add
loope
fdivl
push
movsl
fldl
mov
add
sub
push
mov
fwait
and
cmovne
scas
or
push
pop
vmptrst
subl
cmp
int
mov
mov
int3
inc
mov
repz
jg
xchg
rclb
test
mov
push
or
std
xchg
push
mov
aas
sbb
pop
mov
pop
push
out
js
fcmovbe
jl
mov
inc
inc
dec
mov
mov
adc
inc
fldenv
xchg
mov
fildll
push
mov
sub
cwtl
cmpsb
ds
cmp
dec
data16
fstpl
add
mov
mov
inc
push
pop
or
xchg
test
frstor
jo
or
add
xor
xchg
sbb
aam
shlb
sub
out
mov
in
xchg
std
inc
sub
push
push
popf
mov
sbb
pop
and
or
push
jmp
mov
mov
pop
cmp
clc
jmp
push
sub
aam
sub
fs
push
outsb
loope
mov
mov
fwait
xor
loope
dec
pusha
mov
daa
jmp
add
cmc
aas
or
mov
imul
xchg
rol
incl
loop
rolb
and
pop
lods
mov
mov
pop
or
dec
cmp
xlat
std
xchg
loope
adc
add
ljmp
std
and
jmp
clc
jo
or
or
stc
lea
cmp
pop
imull
mov
leave
daa
jnp
pop
clc
lret
ret
sub
mov
xor
ss
adc
sbb
add
mov
lock
sarl
xlat
jecxz
xor
xlat
subl
mov
push
divb
fstpt
or
and
xchg
push
push
cmp
xor
fdivl
movsl
lcall
outsb
jno
pop
aam
jecxz
jne
push
in
fistpl
xchg
stos
cmp
cmpsb
inc
dec
mov
jge
add
js
enter
xor
pushf
daa
or
sbbb
fimuls
cs
je
dec
push
cmp
loopne
jp
aaa
stos
int
lock
mov
sub
sarb
leave
cld
jae
cs
pop
jle
jbe
pop
aas
push
mov
fldl
cmp
popl
mov
xlat
adc
xchg
repz
test
mov
jge
mov
sub
and
add
push
hlt
mov
repnz
into
gs
stos
imull
push
mov
test
mov
or
cmp
mov
shll
inc
xor
fs
pop
jp
dec
cwtl
test
cmp
jl
xor
movsl
lods
inc
push
sbb
mov
lret
iret
je
add
xchg
sub
addb
push
scas
pop
cmp
rcr
into
imul
std
test
add
leave
test
sti
out
sub
and
dec
xchg
lcall
jnp
aad
pop
or
pop
cmpsl
fsubrp
pop
dec
sahf
mov
loopne
decl
jp
lret
sbb
testb
repnz
sbb
adc
in
dec
jnp
popa
mov
lock
cmp
push
pop
lods
or
sub
movsl
sub
sti
sub
gs
adc
push
adc
outsb
imul
jmp
cmp
dec
add
jge
stc
inc
inc
enter
inc
lea
sahf
lret
rclb
cmp
mov
adc
jge
mov
dec
stos
add
inc
add
enter
jmp
mov
inc
or
cmp
push
lret
ret
stc
sbb
and
hlt
dec
stos
dec
jge
or
in
hlt
in
stos
dec
fwait
sbb
xchg
shl
mov
loop
cmp
pop
sub
fimull
shr
xor
inc
fisubrl
add
xor
jae
sti
sub
ret
popa
loop
test
adc
push
enter
loope
out
fwait
mov
aad
icebp
test
sbb
out
subb
push
push
jne
mov
jp
mov
stos
inc
ss
leave
xchg
adc
cmp
sub
mov
cli
cmp
icebp
push
je
pop
das
add
and
push
outsb
repz
sbb
gs
cwtl
sub
or
mov
cwtd
ret
xchg
nop
stos
jle
lods
mov
push
aam
pop
pop
aaa
shlb
les
jb
pop
sub
and
sub
sub
jle
push
lods
nop
sti
xchg
les
shrb
sbb
addl
ss
out
xchg
dec
dec
in
movsb
aaa
call
test
jo
pop
leave
add
movsb
scas
and
sbb
cs
mul
and
imul
fcoms
popf
xor
ret
fs
inc
shl
jbe
xor
mov
add
push
stc
xchg
cmp
or
mov
and
addr16
std
sub
rcrl
mov
add
or
popf
std
sub
xchg
push
leave
sbb
mov
pushf
and
sahf
iret
mov
cwtl
mov
shl
cmpsl
in
adc
pop
fdivs
cmc
aad
cmpsb
xchg
xchg
aaa
add
stos
loop
xor
add
mov
xor
or
mov
xchg
test
call
rorb
insl
lcall
mov
dec
fdivrl
shlb
add
inc
sub
pop
ss
push
mov
or
cmp
xchg
outsb
pop
xchg
call
in
outsb
iret
pop
add
jle
mov
aas
xchg
lahf
insb
dec
or
hlt
inc
adc
push
cld
mov
pop
jae
and
lahf
dec
ret
jne
jno
jae
adc
out
xchg
pop
out
ret
pop
sub
xchg
pop
push
push
hlt
aas
push
inc
popf
orb
ret
fs
or
addr16
cmpsb
daa
dec
outsl
jo
push
pop
clc
inc
lcall
mov
xor
pop
pop
mov
stos
mov
aam
fisttpll
lret
push
pop
pop
imul
sbb
mov
sbbb
or
add
movsl
repnz
popa
mov
inc
cs
icebp
aad
stos
or
ljmp
or
dec
push
test
push
jb
cmpsl
jmp
jmp
icebp
jmp
scas
sbb
popa
addb
adc
test
int
ret
sahf
xchg
push
jb
dec
loope
xchg
cmc
into
cmp
imul
inc
or
mov
push
push
movsb
pop
push
jno
rcll
or
ja
pop
xor
hlt
test
shll
shlb
fstpl
in
in
adc
outsb
sbb
jge
adc
fwait
jp
mov
mov
add
sbb
fsubp
sub
test
js
push
nop
aam
mov
sbb
repnz
in
ds
lds
shl
pop
out
push
inc
push
adcb
pop
jae
fucomi
scas
sbb
into
dec
push
icebp
icebp
push
lods
inc
je
stc
sahf
loopne
aam
jg
call
fdivrs
enter
cmpsl
ds
xor
pop
js
push
pop
push
cmp
or
lea
out
insl
jecxz
pop
jecxz
inc
popf
pop
add
sti
imul
aad
pushf
int
jns
mov
cmpb
cmp
xchg
jbe
pop
sahf
inc
divl
aaa
data16
push
dec
aas
test
insl
xchg
pushf
repz
nop
mov
mov
sti
mov
adc
cmp
jge
inc
mov
loopne
inc
xlat
pop
jo
jne
mov
fstl
add
ljmp
out
fdivr
add
jns
jae
push
not
ds
aad
in
shl
inc
lea
add
jo
push
mov
fmull
jl
mov
xor
pusha
push
xchg
jmp
pop
icebp
test
xchg
ficomps
and
insl
push
inc
fisubl
sbb
inc
insl
movsb
addr16
fnstsw
jno
and
fs
mov
pop
subb
movsl
xchg
pop
pusha
repnz
jp
adc
in
lods
and
cs
nop
inc
out
cmp
popw
sub
mov
sti
mov
xchg
push
in
mov
xchg
add
push
imul
out
std
xchg
mov
addl
repnz
cmpsb
stos
movsb
push
ljmp
call
sti
mov
rcrl
leave
ljmp
lods
jnp
out
lock
mov
test
repz
icebp
js
mov
xor
pusha
lahf
pop
hlt
inc
push
jae
jecxz
lea
push
test
gs
lock
stos
xor
xchg
cmp
movsb
xchg
testb
movsb
lea
movsl
pop
dec
sub
inc
push
cmp
lea
mov
mov
sub
mov
add
int3
adc
inc
inc
push
add
out
cmp
pop
dec
outsb
imul
lds
test
push
icebp
scas
cli
outsb
mov
mov
lock
jmp
xor
cmp
outsl
jns
fdivp
ss
or
pop
dec
pop
test
or
mov
xchg
sub
into
pop
pop
push
lods
sub
jmp
push
sbb
xor
es
mov
adc
fidivs
xchg
ret
aaa
mov
out
lods
pop
je
xlat
mov
jp
dec
and
cmpsl
lods
xchg
jmp
sahf
sbb
push
or
aad
sub
lret
int
jl
testl
sub
or
cltd
or
data16
nop
push
out
je
pop
sbbb
gs
sbb
adc
scas
loopne
cmc
dec
jo
jns
lea
test
push
jne
cmp
fsub
or
dec
popa
mov
push
in
add
outsl
jle
je
dec
cmpsl
xor
lods
mov
push
scas
inc
inc
lahf
inc
lcall
adc
sbb
xor
ss
loope
fcoml
mov
and
dec
loope
xor
js
cmp
mov
aas
pop
sbb
dec
and
lahf
divl
pushf
mov
inc
cmp
insb
stos
aas
rcll
sbb
push
test
xorb
mov
int3
add
ret
jnp
adc
xchg
lret
std
mov
into
mov
das
subb
insb
sub
fdivs
inc
int3
jecxz
dec
mov
in
stc
mov
stos
inc
test
outsb
cmc
jne
cmpsl
enter
stos
or
jne
sub
push
mov
or
and
loop
call
jno
rclb
pop
scas
test
fisubl
push
mov
es
and
add
insb
dec
stos
xchg
mov
and
push
cld
sub
repz
iret
decl
adc
fs
sub
push
sti
dec
mov
pop
lret
xlat
jge
sbb
xchg
add
sahf
cmc
mov
scas
inc
adc
pop
xchg
in
push
jg
gs
jno
pushf
mov
lret
push
fadd
out
sub
fisubrs
push
pop
repz
inc
cli
test
jle
sub
popl
push
in
in
sub
push
lods
mov
bnd
into
jb
sbb
inc
pop
andb
push
hlt
sub
adc
xchg
and
cs
jne
ja,pn
sub
loop
push
fdivrs
movsl
jbe
outsl
push
adc
dec
cmp
lret
xor
sub
inc
lds
fsts
pushl
or
mov
cmp
dec
mov
stc
inc
ficompl
inc
jge
js
mov
add
call
or
xor
insl
insb
aaa
xchg
jns
inc
fstl
int3
pop
mov
jecxz
sahf
scas
jae
lcall
lock
mov
xchg
aam
push
test
xchg
add
aad
add
frstor
push
mov
loope
adc
ud1
inc
nop
lock
inc
jge
sub
or
mov
sbb
sbb
sahf
subl
sub
push
push
fwait
inc
enter
js
sbb
or
mov
push
jb
test
shl
push
in
pop
jno
mov
dec
test
ficoms
push
cmpsb
and
addr16
jecxz
bound
pushf
mov
cmp
stc
nop
idivl
into
out
dec
or
add
mov
movb
mov
data16
lcall
xchg
movsl
vmovlps
pusha
inc
adc
repnz
sub
sub
pop
outsb
or
pushf
or
mov
mov
adc
jg
xorb
mov
les
dec
test
insl
sub
faddl
hlt
popw
fiadds
popa
in
xchg
ja
outsl
dec
fiadds
pop
cmp
pop
pop
sbb
aam
jno
add
cmp
sbb
test
add
xchg
lret
clc
pop
push
call
xlat
and
or
fsubr
mov
mov
mov
xchg
ror
lcall
popf
cli
pop
movsl
and
or
mov
int
inc
js
adc
push
je
sbb
mov
mov
mov
fdiv
inc
adc
pop
push
push
mov
ret
and
mov
stos
lahf
adc
ss
out
imul
popl
cltd
negl
aas
add
out
bnd
or
jg
xchg
jle
sbb
es
ja
sbb
insl
sarb
xchg
mov
rclb
inc
stc
xchg
and
adc
inc
roll
xor
out
push
push
jns
mov
xor
cmp
push
and
movsl
mov
sub
rcr
sbb
push
out
and
mov
clc
mov
sti
adcl
push
jbe
dec
or
stos
cmp
insb
sub
mov
pop
mov
xlat
das
cmp
andb
xor
mov
mov
stos
mov
nop
push
in
sub
or
dec
push
mov
push
mov
addb
dec
jecxz
scas
xchg
sbb
lods
push
jecxz
mov
outsl
insl
pop
decb
push
mov
je
test
or
cmp
inc
mov
xlat
sub
mov
mov
js
and
jp
dec
jl
add
data16
xchg
push
bound
stos
or
out
and
pop
xor
jb
or
pop
push
mov
jae
xchg
push
dec
dec
or
xor
cmpsl
cmc
inc
repz
sbb
cld
jle
cmp
lods
inc
adc
xchg
add
int
mov
push
mov
stos
mov
mov
jg
mov
adc
test
fidivl
mov
movsb
nop
stc
and
jle
or
imul
or
xor
movsb
hlt
mov
cmpsb
and
add
rcrl
out
inc
hlt
jmp
or
call
iret
arpl
push
popf
xor
pushf
shll
hlt
mov
adc
fldcw
mov
cmp
std
mulb
ret
xlat
pop
inc
cs
cmp
xor
pusha
enter
xchg
adc
and
jge
stos
adc
xor
js
ljmp
fdiv
fbld
out
fstpl
lods
call
scas
xchg
jl
lea
pop
mov
xor
ret
cmp
lahf
jnp
sub
inc
pop
popf
mov
cmp
or
leave
sti
sub
jge
out
mov
imul
mov
rclb
lret
dec
loopne
fdivp
and
leave
int
cld
and
push
mov
fnsave
sti
addl
adc
ficomps
cmc
xor
dec
in
ret
decl
inc
fwait
mov
aad
rcrl
scas
test
or
mov
enter
shll
fs
cmp
std
jge
sub
or
cmpsl
cltd
das
loope
filds
lds
stc
push
iret
out
fisubrs
gs
pop
lahf
out
jno
lods
mov
xor
cmp
hlt
clc
nop
fidivrl
and
pop
push
stos
or
cli
mov
test
aad
ljmp
jmp
jl
and
jp
insb
mov
mov
js
cmp
sub
je
lahf
xchg
inc
hlt
add
fs
jns
clc
push
sahf
ret
xor
aam
movl
or
es
mov
ljmp
aas
pop
sub
or
or
jb
adcb
push
cmp
push
leave
das
xchg
add
push
hlt
sub
mov
out
add
or
pusha
xchg
stos
mov
ret
sbb
ljmp
nop
or
icebp
repz
in
cltd
cli
xchg
pop
dec
dec
rcrl
inc
data16
es
into
xor
jnp
outsb
and
fwait
sub
mov
sbb
sub
shll
fbld
dec
xchg
addr16
fldenv
leave
arpl
mov
fildl
push
and
push
das
mov
scas
adc
add
shrb
pop
imul
cmp
enter
ljmp
xor
push
inc
jae
mov
test
shlb
int3
mov
dec
xlat
sub
push
pop
mov
stos
xor
xor
clc
cmp
cmp
sub
push
push
out
and
frstor
mov
hlt
mov
loop
sub
mov
cmp
push
cli
jecxz
movsl
ja
add
test
orl
into
sbb
pop
dec
mov
sbb
mov
mov
or
cltd
subb
xor
cltd
gs
cmp
mov
sbb
fldenv
movl
shlb
mov
outsl
add
mov
mov
inc
sub
sbbb
int
testb
sub
addb
mov
xor
out
add
invd
dec
icebp
sbb
mov
mov
sub
mov
xchg
sar
adc
add
std
xor
inc
sub
dec
stos
xchg
mov
dec
loopne
scas
cmpsb
inc
adc
test
or
icebp
pop
xor
mov
lock
mov
add
lods
push
movsb
shll
xor
das
add
lods
icebp
pop
mov
enter
outsl
add
xchg
pusha
movsb
insl
or
mov
xchg
add
cltd
push
jno
cmc
test
imul
ret
mov
mov
ja
cmc
shrb
or
ret
shll
test
lea
cmp
sahf
insb
notl
mov
push
lea
test
and
ret
mov
fstl
lods
fimuls
jne
iret
lods
jae
js
inc
cmp
shrl
fwait
pop
and
add
hlt
dec
mov
pop
xsha256
cmpsb
nop
mov
sub
jp
ds
mov
jnp
jp
mov
and
xchg
mov
stos
decb
cmpsl
xor
lret
aam
icebp
sub
jne
repz
les
fildl
mov
lods
jmp
stc
dec
popf
call
and
sbb
and
dec
not
mov
aad
jnp
push
sub
adc
test
pop
bnd
inc
or
clc
adc
lods
jae
aam
fdiv
subl
das
xchg
cld
mov
inc
orl
fmul
in
insl
loopne
addr16
call
add
ja
or
stc
sub
ds
or
repnz
cli
pop
jge
or
cltd
push
lds
cmpl
push
sub
rcrl
mov
lock
inc
mov
cld
loope
cltd
andl
subl
ret
in
out
popf
cmp
out
push
mov
push
das
inc
cld
mov
lret
adc
adc
fs
shlb
pop
pop
jecxz
enter
mov
jae
mov
stos
rclb
cwtl
cmpsb
test
in
adc
repz
enter
movsl
call
mov
cltd
testb
and
add
xor
testl
bound
xchg
jno
outsb
rorb
movsb
aam
pop
lret
es
stos
into
gs
in
inc
jne
in
inc
pop
scas
fwait
pop
and
lret
inc
out
sar
cmova
push
in
loopne
or
push
and
or
cmpsb
pop
pop
inc
add
jne
cli
adc
fistpl
dec
divl
into
xorb
mov
cmpsb
les
sub
xchg
mov
pop
mov
push
inc
bound
cmpsb
mov
out
or
test
xchg
add
das
adc
sub
push
insl
mov
lahf
jbe
jp
int
add
js,pn
push
movsl
mov
ror
push
shlb
or
les
nop
mov
out
mov
gs
nop
les
xor
test
pop
push
push
xchg
push
ss
stos
fiaddl
sbb
in
movnti
sbb
mov
mov
sub
inc
dec
fistps
lret
sbb
and
js
je
aas
into
fucomi
push
test
fistpl
shlb
jno
insl
sbb
lcall
pushf
negb
insb
je
jmp
cli
shrl
inc
loopne
sbbl
jbe
outsl
adc
mov
sbb
jnp
jle
cmp
pop
or
clc
imulb
and
mov
aaa
dec
adc
fisttpll
outsb
jle
popa
fstpl
sbb
mov
add
mov
mov
in
lret
loop
dec
adc
push
gs
cmp
xchg
cs
stos
inc
mov
dec
cmc
ljmp
leave
dec
or
xor
in
movsl
pusha
inc
pusha
sahf
xor
mov
adc
xor
pusha
stc
jl
js
xor
adc
xchg
loopne
and
shlb
data16
sbb
out
cmp
testl
xor
popa
cmp
insb
or
loop
ljmp
cmp
pop
inc
fwait
mov
in
and
push
push
shrb
in
xor
addr16
lods
aam
pop
add
sbb
mov
xor
outsl
insb
out
lea
mov
clc
xchg
mov
clc
xchg
cmp
sub
mov
fisubs
or
mov
outsl
xor
pop
ja
scas
movsb
shr
jns
dec
jmp
jge
sbb
push
xchg
mov
fsts
in
jle
inc
add
pop
lods
js
pop
cmp
adc
jno
sbbb
out
sub
sbb
and
cwtl
and
pop
jo
dec
mulb
xchg
pop
sbb
jle
pop
mov
leave
push
sub
cmp
lock
lret
inc
jmp
and
jo
jmp
ss
pop
xchg
mov
push
js
scas
mov
arpl
mov
ret
insb
xlat
cmp
add
std
jno
dec
fbstp
bound
xchg
lock
mov
cmp
sar
xor
xchg
or
pop
inc
mov
pop
rcr
sti
or
push
gs
sbb
and
push
add
fstpt
push
mov
sahf
and
and
stos
and
outsl
push
aas
dec
hlt
mov
pusha
lea
arpl
aas
push
enter
mov
fidivs
ja
in
jnp
and
jge
xor
fwait
jecxz
add
sbb
jmp
jnp
stc
shrl
and
cmc
fisubl
movsl
lds
jae
aas
int3
add
sbb
movsb
ret
cmp
in
adc
pop
sub
pop
or
shlb
cmpsb
daa
push
cmp
negl
daa
out
ret
lret
jb
dec
fcoml
xchg
inc
movsl
pushf
xor
loopne
jmp
loopne
or
dec
pop
insb
shlb
inc
sub
loope
jb
js
pushf
sbb
iret
or
jmp
repnz
dec
in
adc
pop
or
xchg
bound
popf
jno
sti
push
cmpsb
mov
in
lcall
and
movl
fimull
and
fyl2x
fnstsw
mov
stos
jle
push
jmp
mov
xchg
es
int
jl
insl
push
lcall
adc
out
adc
jecxz
out
fcoml
andb
xlat
pop
insl
pop
inc
sahf
pop
sti
or
inc
lea
sahf
lods
xor
cmc
dec
ja
orb
fsubr
pushf
test
xor
dec
jp
mov
adc
mov
ret
fdivp
adc
ja
adc
icebp
andl
pop
loope
inc
int3
xchg
sti
xor
cmp
icebp
mov
scas
ja
sbb
fisubs
scas
testl
sar
movsb
mov
test
ret
mov
nop
and
out
lock
or
nop
daa
or
jecxz
pop
sub
cmp
dec
push
ds
scas
mov
mov
add
out
and
and
loope
les
imull
aam
loop
cwtl
mov
add
in
subb
sbb
ss
in
mov
pop
cmp
mov
mov
fildl
mov
pop
sbb
scas
dec
jle
inc
imul
aad
jne
in
push
mov
adc
inc
in
iret
aas
push
rolb
or
pop
push
clc
stos
inc
mov
jle
out
mov
mov
je
insb
arpl
fisubs
mov
mov
into
cmp
test
cltd
loope
pop
arpl
push
jo
xchg
testl
cld
out
xor
pusha
sbb
shlb
bound
pop
hlt
xchg
out
int
cmp
push
cmp
cld
mov
popa
std
dec
dec
loop
jp
test
sahf
mov
mov
mov
icebp
xlat
mov
pop
lods
push
repz
cli
mov
sti
jle
adc
movsl
call
out
ljmp
sbb
cmp
das
insl
mov
adc
sahf
jle
sbbb
aad
mov
cltd
mov
cmp
popa
repz
mov
and
lds
mov
add
mov
or
bound
jmp
mov
mov
mov
inc
cld
pushf
loop
cli
xchg
leave
pop
lds
loop
negl
mov
test
sub
mov
rol
jmp
fs
popa
sbb
mov
cmp
jg
add
neg
enter
fwait
pop
popa
sbb
pop
loope
gs
jnp
cmpsb
cmpsl
add
xchg
push
insb
add
lret
jae
jecxz
jp
bnd
adc
fimull
push
dec
outsb
ret
in
aas
pop
dec
inc
jl
movb
dec
mulb
ret
jge
enter
imul
or
ret
push
mov
xchg
addr16
cltd
mov
repnz
ds
mov
lret
sbb
inc
adc
push
sub
jbe,pt
pusha
add
xor
xchg
xor
ficomps
or
jp
pusha
sbb
sbb
in
inc
fidivrs
loopne
jnp
mov
and
xchg
jno
inc
mov
lds
pop
addb
cmp
adc
pop
push
and
ds
push
ret
sti
les
stos
sub
rcrb
outsb
add
or
orl
adc
lret
pop
pushf
mov
in
stos
pop
shrl
sbbl
jae
or
js
ret
rcrb
xchg
xchg
fucom
es
daa
adc
fldt
mov
in
test
push
mov
add
nop
push
mov
loopne
mov
in
test
push
or
mov
es
lret
jge
dec
dec
out
jns
lock
sub
or
bound
jge
mov
inc
fcmove
sbb
data16
jo
clc
stos
sbb
mov
inc
jg
mov
clc
and
xor
sbb
std
push
push
xor
insb
and
mov
or
and
sbb
int3
in
fxtract
adc
fsubrs
cmp
shrb
out
sub
scas
ret
int
and
popf
mov
mov
mov
lret
mov
add
mov
fcomps
push
lahf
push
std
pop
cmpsl
cs
es
lock
adc
sbb
jo
loop,pt
jae
mov
dec
xchg
sub
cmc
dec
adc
mov
fdivl
fcomps
into
jle
loop
insl
jne
push
dec
imul
and
jg
fs
ljmp
movsl
and
sti
inc
popf
sub
in
lods
test
cld
insb
decl
mov
adc
mov
jne
or
in
jle
add
lahf
jae
add
ror
inc
jmp
rcrl
bt
loope
add
add
sti
jnp
push
cltd
push
dec
xor
fsubs
lret
enter
testl
and
xor
add
inc
shll
mov
rcrl
dec
imul
mov
icebp
lahf
mov
cmp
jle
call
add
imull
stc
xor
loope
cmp
mov
rol
outsb
pop
dec
lea
orl
das
or
add
hlt
mov
pop
es
movsb
hlt
xchg
add
cld
mov
and
xchg
dec
jns
pop
sub
lcall
in
movsb
mov
mov
lock
pop
les
xor
push
cmp
xor
cmp
jp
pop
mov
leave
mov
and
pusha
dec
int
cmp
std
aad
das
dec
mov
idiv
sbb
movl
pop
sahf
cmpsl
popa
dec
out
cmp
and
out
or
cld
cmp
pop
ss
xor
pop
mov
inc
xor
enter
scas
je
push
leave
and
movsl
jno
push
imul
out
adc
inc
adc
mov
add
and
jmp
xor
movsl
outsb
aas
shl
ja
mov
ret
in
cmc
jns
in
lods
fs
int3
and
sub
cmpsb
notl
mov
sbb
popa
and
mov
jmp
shrl
sbb
mov
or
push
and
cmpsl
xorl
or
dec
fwait
test
addb
jle
sti
inc
add
fsts
mov
shrb
fsubrl
pop
lock
inc
xchg
jns
or
sub
dec
inc
lods
add
cmp
jbe
fcoms
mov
push
aaa
xor
sbb
dec
add
xchg
out
and
subb
out
popa
jo
xchg
jbe
xor
mov
mov
sahf
inc
arpl
lods
inc
adc
shr
lahf
xor
pop
push
mov
ljmp
mov
ds
push
mov
lea
or
mov
in
adc
add
daa
mov
cmpsb
cmp
xchg
cmp
fwait
subl
jb
hlt
lret
jecxz
sub
pshufw
pusha
cli
push
pop
adcl
fdivl
incb
fsubrl
adc
add
push
sub
adc
push
shll
data16
mov
addr16
sbb
pop
lds
enter
add
push
loope
adc
inc
cmp
adc
int3
mov
jge
vpcmpeqw
les
xor
mov
dec
xchg
pop
dec
cmpsl
inc
inc
jne
pop
cmc
xchg
sbb
int3
mov
ja
mov
movsb
out
sub
push
push
cmp
std
dec
lahf
pop
scas
xlat
push
inc
repz
dec
fs
sbb
loop
jge
mov
ds
sub
xor
adc
mov
aad
mov
pushf
jge
lcall
and
xor
sub
hlt
xor
and
cwtl
dec
out
adc
xchg
and
mulb
fs
or
mov
jecxz
int3
or
jecxz
jge
pop
popa
dec
push
dec
pop
movsb
cli
imul
ja
mov
dec
fists
mov
adc
out
fidivrs
xchg
das
repz
cmp
push
cmp
vmovapd
and
dec
loope
push
call
adc
mov
adc
jecxz
insb
jle
mov
cmc
push
ret
add
popw
fimull
sbb
and
lret
sub
cmpsb
xor
lcall
lods
mov
cmp
or
lds
int3
pop
and
and
shlb
mov
shlb
add
dec
shlb
jbe
insb
mov
test
loop
and
jle
aad
mov
cmp
fsubrs
aaa
push
push
jo
repnz
lea
lahf
xchg
lret
xor
loop
mov
adc
push
cli
mov
fdivrs
and
mov
pop
repnz
and
aam
mov
pusha
clc
mov
and
xchg
sub
sub
xchg
into
test
mov
xchg
iret
mov
inc
in
sbb
inc
ds
and
scas
and
or
mov
and
test
sub
xor
add
inc
cli
es
fs
mov
mov
adc
sbb
mov
add
add
loope
and
movsb
cmp
in
mov
adc
mov
push
mov
adc
sbb
aad
pop
repz
test
push
push
add
mov
faddl
jl
mov
popf
cmp
frstor
mov
out
aaa
mov
and
pop
mov
ss
adc
dec
inc
in
test
movsl
or
jecxz
mov
ret
push
dec
aas
dec
imul
cmpsl
cmp
sbb
push
xor
sbb
mov
pushw
inc
sbb
xchg
sub
es
scas
cmp
popa
push
xchg
xchg
adc
pop
inc
mov
jns
popa
fxch
dec
iret
lcall
and
mov
jne
or
jne
imul
dec
pop
xchg
xor
push
or
loopne
data16
nop
daa
sub
lret
scas
mov
and
jo
xchg
and
mov
mov
das
mov
xchg
jnp
movsl
inc
cmp
fiaddl
mov
outsl
jecxz
and
cmpsb
sub
test
mov
push
data16
lret
ret
stc
mov
movsb
and
and
mov
idivl
in
mov
dec
sahf
add
out
aam
ss
nop
jno
push
jno,pn
test
add
mov
mov
sahf
sbbb
test
movsb
push
stc
cs
das
jg
and
or
lock
dec
xchg
outsl
jbe
push
std
mov
sbb
mov
adc
xor
xor
fcmovb
test
jmp
pop
and
mov
mov
aas
movsb
mov
dec
add
add
mov
jbe
int3
adc
add
in
xchg
xlat
push
out
call
cs
mov
test
and
and
iret
data16
inc
pop
jb
lret
xor
ljmp
mov
mov
pop
lock
push
cmc
ficoml
into
ret
lea
cmp
xor
std
insl
pop
in
push
pushf
jg
aas
mov
shrb
xchg
jle
mov
jle
outsl
and
iret
pop
fisubrl
push
daa
ljmp
dec
sub
jne
add
stos
sub
in
push
loope
push
lcall
cs
lret
jbe
pop
call
hlt
lahf
cli
mov
andl
pop
clc
repnz
lods
jbe
xchg
push
inc
dec
aam
scas
sbb
mov
or
sarl
inc
lahf
xchg
cmp
fxch
fstps
repz
pop
pop
push
ja
xchg
xorl
popl
test
cmpsl
leave
ljmp
mov
add
rclb
enter
pushf
push
dec
shlb
and
inc
cmc
inc
in
mov
push
adc
jl
aam
outsl
and
xchg
jae
add
out
pop
mov
dec
bswap
rol
incl
fsts
movsl
push
add
in
jo
mov
loop
cmpsl
sbb
sub
cmp
stc
jb
mov
dec
lods
jg
test
push
int3
jp
fldt
out
lock
test
and
movsb
mov
ficoms
popf
stos
adc
jbe
mov
mov
push
aas
mov
xchg
jo
xlat
test
sbb
shl
jle
cltd
pop
testb
nop
jmp
fbstp
orb
mov
insw
or
data16
hlt
imul
push
mov
mov
and
dec
or
add
add
negl
call
push
out
mov
mov
jmp
iret
push
movsl
loope
stos
jne
shrl
xor
stc
xchg
inc
push
dec
fbld
dec
data16
push
mov
adc
dec
lock
mov
and
ja
or
xlat
outsb
iret
inc
je
mov
insb
jle
ret
bound
cmp
sub
loope
mov
sahf
push
lods
ret
inc
cmp
sbb
stc
xchg
xchg
xchg
cmp
lcall
sbb
rorb
pop
xchg
and
push
add
mov
push
clc
testb
inc
pop
cmovs
cmp
xchg
and
jo
ret
sbb
in
mov
and
sbb
and
insl
inc
pop
xchg
je
xor
fs
jo
repnz
in
testb
push
push
jge
lret
push
or
sbb
inc
gs
outsb
xor
fidivs
data16
das
aad
pop
mov
rcrb
jg
add
mov
arpl
imull
aaa
cmp
stc
mov
mov
or
add
push
mov
mov
sub
ja
xor
out
in
fdivs
pop
cmc
out
push
xchg
add
inc
rcrb
test
movsb
pop
jno
jmp
clc
xor
cmp
dec
dec
xchg
inc
xor
add
cltd
int
inc
loope
nop
fsts
mov
pop
mov
add
add
negb
add
stc
or
andb
dec
jnp
iret
lea
aam
mov
daa
mov
or
mov
fisubrl
test
add
inc
xor
mov
jno
add
push
std
adc
jmp
je
fmul
imul
xchg
fistpll
es
data16
push
xor
mov
js
sub
adc
rorl
stc
push
leave
push
mov
cltd
test
fisttps
sbb
dec
hlt
lret
std
inc
jecxz
pop
lcall
daa
xor
pop
ret
dec
push
out
cmpsl
pop
push
pop
mov
nop
push
je
jmp
pop
jbe
test
add
je
test
ljmp
out
jge
mov
and
fistps
int
or
push
arpl
inc
fnstenv
cwtl
das
mov
or
movsb
cmp
stos
pop
mov
dec
push
data16
inc
mulb
sti
jl
adc
out
adc
xchg
inc
xchg
cmp
inc
fstp
rorb
mov
out
adc
pop
imulb
sub
pushf
xchg
imul
push
movsl
popf
test
out
xlat
stos
xchg
insl
test
stos
xor
dec
je
repnz
mov
fisttps
aam
jb
ljmp
faddl
nop
sti
cmc
mov
aad
adc
out
aaa
dec
xchg
cmp
jmp
rclb
icebp
dec
jle
shl
lret
sbb
and
xchg
ljmp
pop
mov
xchg
sbb
xchg
fbld
lahf
stos
sub
jns
mov
xchg
in
leave
pop
movsl
jae
xor
imul
stc
pop
lcall
xor
xor
rcrl
mov
stos
daa
std
push
sbb
je
fisubs
pmuludq
loopne
push
and
data16
dec
inc
sbb
aas
mov
push
or
fdivr
mov
xchg
movsl
les
pop
sar
xchg
fsubrp
lahf
div
pop
pop
loop
xchg
scas
stc
mov
inc
and
mov
dec
test
inc
mov
mov
sbb
mov
cwtl
adc
jbe
sub
cs
ret
dec
sti
bswap
dec
outsb
sub
adc
mov
cld
mov
out
lea
xchg
lock
pusha
ret
lock
aaa
stos
std
pop
pop
repz
xor
dec
imul
add
or
cld
outsb
out
sbb
adc
nop
xchg
loop
sbb
daa
int3
aaa
pop
jns
sbb
cltd
repz
sub
xchg
or
mov
out
int
adcl
sbb
xor
xchg
filds
add
xchg
and
lahf
push
mov
imul
mov
xlat
lahf
gs
call
mov
imul
adc
mov
enter
jnp
std
dec
out
pop
bound
int3
push
hlt
add
ret
daa
mov
rorl
in
jnp
or
push
xchg
cld
mov
jnp
les
int3
outsl
push
out
out
inc
std
xlat
xorl
jno
outsl
mov
ret
hlt
lret
xchg
scas
adc
into
fistpl
mov
stos
frstor
xchg
xchg
stos
enter
sbb
mov
lret
mov
mov
or
mov
in
mov
jge
xorb
jbe
mov
int
or
shl
mov
adc
out
xor
mov
pop
pop
inc
fnsave
push
or
push
adc
and
xchg
loop
inc
sbb
mov
and
cmp
dec
inc
jmp
test
adc
push
push
and
adc
into
enter
jb
xor
ret
repz
mov
sbb
add
mov
and
aaa
xchg
sub
mov
jg
insb
xor
nop
mov
fsts
fldenv
mov
in
and
pop
fs
xor
popf
and
fcoms
mov
xchg
pushl
adcl
cld
cmc
jb
negl
int
in
and
or
clc
mov
outsl
shrl
out
mov
es
mov
iret
sbb
push
pop
movsl
lea
cmp
jae
aam
jae
inc
test
inc
xchg
stc
add
mov
adc
outsl
or
dec
loope
sub
icebp
adc
popf
push
out
mov
outsb
ds
addr16
pop
xchg
pop
mov
inc
and
cmp
inc
xchg
pop
mov
push
add
call
cmpsl
push
cmp
jnp
outsb
hlt
push
out
rol
ds
dec
in
add
push
pop
negl
inc
xor
adc
test
dec
stc
repnz
cmp
lahf
insb
in
nop
mov
insl
jge
fisubs
popf
addr16
out
ljmp
pop
bound
in
fxtract
in
push
imul
fsubs
or
ret
and
ljmp
push
scas
inc
push
adc
frstor
push
jb
mov
lret
add
pusha
xor
mov
fisttpl
sub
movsl
sbb
xlat
jmp
pop
das
mov
in
stc
jbe
sub
in
scas
cli
push
dec
sbb
mov
sub
test
pop
or
cmp
sbb
jo
movsb
pop
cmp
sub
mov
sub
fsts
cmp
call
cmp
int3
mov
sahf
shrb
push
mov
sub
mov
add
rol
jnp
cmp
pop
sub
pop
in
jle
nop
or
add
clc
add
lods
cmp
xchg
mov
imul
push
imul
dec
xor
add
test
sti
dec
lcall
iret
data16
in
dec
sub
imul
pop
jb
jecxz
push
call
cmp
sbb
sbb
sub
in
dec
sbb
insb
xchg
push
icebp
jg
adc
add
lds
xor
nopl
dec
sub
fwait
into
fiadds
mov
push
push
ret
test
fwait
ljmp
mov
in
mov
cs
cmpsl
or
lcall
xchg
sbb
mov
mov
ficoml
lcall
and
add
aam
insl
xor
mov
or
inc
push
dec
jb
sub
insb
testb
mov
cmpsl
rcrl
mov
push
push
leave
cwtl
jle
lcall
jo
lods
push
inc
aam
push
xlat
adcb
es
paddsw
pop
mov
xor
cmp
ficompl
in
pop
push
adc
lods
jbe
add
cli
add
vminsd
mov
push
xchg
sbb
int3
cmp
jns
movsb
or
fisubl
mov
pusha
sbb
iret
cmp
xlat
push
insb
popa
fadds
push
mov
shl
add
je
pop
call
mov
jmp
out
jmp
mov
out
lds
fwait
sti
xchg
int
xchg
jne
dec
cwtl
das
movsb
aad
mov
jae
cmpb
cwtl
add
out
ds
jg
es
mov
jbe
ret
fnsave
inc
cwtl
test
gs
mov
fnsave
push
icebp
js
inc
arpl
push
add
xor
push
jecxz
fnsetpm(287
mov
cld
push
outsl
cmpsl
or
leave
das
es
dec
leave
lret
and
popf
addl
loope
add
xor
mov
pusha
xor
sbb
test
mov
addr16
pop
loope
xchg
adc
pusha
cmpl
push
jno
shlb
cmp
lods
xchg
js
pop
addr16
adc
mov
pushf
or
insb
sub
sbb
mov
sub
cmp
mov
popa
shrl
out
test
dec
or
push
ss
gs
test
std
js
sbb
mov
pop
loope
push
cmc
ja
add
in
fs
pop
mov
and
lret
push
sub
cmp
in
xchg
call
add
inc
fs
dec
sbb
scas
xchg
pop
jns
pop
lock
sbb
pop
pop
sbb
sti
fnstenv
sbb
jne
sbb
test
jns
xchg
xor
enter
lods
push
test
mov
lods
out
es
pop
or
jmp
imul
outsb
push
cmp
cmp
lds
sbb
sahf
test
fsubrs
dec
xchg
ficompl
sub
lock
xchg
xchg
iret
aas
aaa
lret
mov
dec
cltd
add
ret
mov
cli
loope
stos
ss
jge
lret
ljmp
lret
jae
fs
das
dec
rcl
repnz
push
imull
sarl
nop
outsl
adc
xchg
inc
js
inc
stos
add
lret
bound
leave
adc
hlt
mov
xchg
cmc
jp
leave
xchg
movsl
addl
bound
stos
popf
rorb
pop
mov
mov
push
cld
gs
aaa
aam
push
xchg
sbb
push
jge
mov
and
rcll
or
pop
lahf
sbb
jecxz
les
addr16
adc
test
cmpsl
fwait
outsb
pop
loope
push
mov
and
mov
js
repz
xor
xchg
cwtl
dec
jae
mov
mov
inc
xor
push
fdivrl
jge
int3
roll
lahf
mov
cmpsl
int
xlat
adc
jecxz
je
ja
jl
mov
xchg
dec
or
inc
nop
nop
pop
jg
mov
cltd
or
pushf
ja
mov
add
ret
pushf
cmpsb
push
or
add
and
jno
jae
adc
std
clc
loop
lcall
add
push
leave
repz
mov
push
mov
jbe
mov
xchg
push
test
ja
xor
ljmp
hlt
dec
push
iret
fildl
adc
mov
xor
sub
dec
jae
neg
es
in
and
clc
push
or
cmp
inc
jge
jns
jg
sub
lret
inc
mov
jns
xorl
hlt
sub
push
in
pop
popa
iret
aas
push
icebp
pop
jns
pop
mov
rolb
and
out
test
rcrl
adc
ds
in
ja
mov
cltd
cwtl
imul
and
mov
and
jnp
add
push
rcl
pop
add
inc
and
pop
mov
jmp
ja
cwtl
mov
push
sahf
xor
sub
dec
fisttps
mov
lods
filds
addr16
mov
lret
dec
addr16
cltd
jnp
or
sub
dec
aad
mov
lock
scas
cmpsb
cs
mov
stc
sub
imul
xchg
arpl
dec
sti
mov
inc
jecxz
loop
leave
adc
jo
jmp
sbbb
mov
sub
or
mov
pop
sub
mov
push
into
jnp
and
mov
scas
push
mov
inc
in
icebp
imul
stos
inc
sarb
out
add
jb
push
mov
imul
lods
mov
jae
fisubrs
xchg
or
dec
test
inc
andb
push
vpcmpeqb
out
sub
and
rorl
shrb
dec
ds
lods
out
lods
test
in
leave
inc
pop
jne
cmp
xor
push
push
addb
sub
fstl
imul
push
sub
sub
loop
xchg
fwait
jecxz
push
in
mov
imul
mov
cld
shr
and
adcl
pop
and
fcoml
mov
mov
inc
mov
push
aaa
hlt
mov
lods
lods
jb
inc
pusha
jmp
lret
push
fs
cmp
in
cmc
nop
xor
add
adc
cmpl
pop
mov
daa
dec
repnz
jnp
sub
dec
mov
cmp
xchg
jg
dec
xchg
mov
jnp,pn
xlat
fwait
sub
pop
inc
rcl
pop
xchg
jne
lock
cmp
jae
cmpsb
inc
xchg
gs
repnz
mov
mov
pop
inc
lret
pop
out
cld
shrb
jcxz
inc
cs
cmp
cmp
fcom
stc
or
lock
imul
mov
aam
inc
ja
andl
or
xor
dec
inc
hlt
xchg
cmp
sub
mov
mov
jnp
sbb
hlt
inc
vcvtsi2sdl
jbe
in
lods
pop
lret
enter
adc
pop
mov
sub
push
push
test
test
jecxz
sub
outsb
jo
loope
sub
add
mov
push
or
inc
mov
shl
sub
fdivrl
adc
adc
dec
out
pop
fsubl
leave
push
outsb
popf
fs
xor
loop
notl
lock
dec
mov
fdivl
push
cli
adc
dec
fstps
push
jbe
imul
scas
mov
neg
or
pop
ss
push
jl,pn
adc
sahf
inc
mov
lahf
and
pop
jmp
jno
sahf
mov
dec
dec
clc
fcomi
out
mov
adc
xchg
jae
xlat
outsb
mov
and
jno
mov
testb
fists
adc
je
adc
xor
dec
xor
xchg
scas
pop
and
mov
fisubrs
push
sub
jmp
push
and
dec
mov
popa
lock
and
xchg
mov
pop
sbbl
sub
divb
mov
call
jno
xchg
pop
mov
popa
jmp
push
lret
movsl
mov
fldcw
adc
xchg
fdivl
push
out
fs
mov
pop
jbe
cmp
testl
shr
repnz
inc
pop
cmp
adc
pop
insl
xchg
xor
out
inc
out
sti
jno
and
sahf
inc
fmul
cld
andb
insl
sbb
cmp
jl
mov
xchg
ret
loop
push
std
add
xor
test
lods
adc
movsb
fistpl
loope
std
sub
mov
mov
mov
lret
cmpsl
inc
mov
mov
mul
xor
mov
lcall
dec
div
cmp
pop
cwtl
sub
add
cmp
hlt
in
es
mov
int
pop
mov
hlt
push
xor
leave
inc
pop
jle
shr
setbe
xchg
cmp
mov
push
ja
test
cs
aam
dec
jecxz
jecxz
cmpsb
and
repnz
test
jg
mov
leave
frndint
adc
pop
cmpsl
xor
sbb
mov
stc
daa
mov
xchg
in
xor
dec
pushf
xor
btc
lods
adc
lods
xor
insb
jl
enter
iret
jns
popa
pop
xor
enter
fmull
lret
insb
arpl
cmp
dec
mov
cmc
out
test
in
jle
jno
je
mov
push
daa
sub
dec
cmp
xor
lret
adc
jge
xchg
popf
aaa
adc
sbb
mov
add
lds
cli
in
test
testb
or
daa
push
push
in
jno
and
sbb
test
fwait
xor
pop
jne
std
cmc
xchg
mov
pushf
and
add
bound
pop
call
jmp
aad
xchg
jmp
aaa
lock
jmp
cmp
lret
push
push
cs
add
xor
das
sub
cmp
push
mov
iret
mov
rcll
test
daa
sbb
add
aas
cmpsb
leave
pusha
fmuls
sahf
and
mov
inc
and
sahf
popa
idivb
sbb
sub
insl
pop
loopne
lods
add
lods
inc
cwtl
sub
lret
cltd
push
lods
lret
jno
lahf
sub
rol
les
loop
stos
int
xchg
repz
sub
jle
xor
inc
mov
lahf
ss
add
in
loop
loopne
xchg
lcall
inc
push
inc
push
jo
jno
pop
sub
mov
pop
stos
jne
lods
mov
push
aas
mov
lahf
jno
mov
xor
enterw
jl
xchg
mov
add
scas
push
popf
jmp
xlat
push
push
mov
xchg
cwtl
leave
es
mov
xor
pop
push
pop
lret
test
mov
fstps
mov
and
dec
sub
jmp
sahf
mov
xorl
sbb
mov
mov
scas
pusha
pop
inc
popw
mov
rcl
xchg
sbb
mov
mov
ss
mov
ja
popf
subb
adc
adc
fcmovnb
jecxz
cmc
mov
mov
sbb
jb
dec
pop
es
xchg
pop
xsha1
cmpsb
jge
lcall
rcl
movsl
in
mov
jle
cmp
lahf
jp
dec
or
popa
jb
mov
push
xchg
incb
sub
pop
js
enter
loopne
or
inc
test
pushf
lods
nop
inc
adc
lret
mov
cwtl
lods
gs
fs
pop
adc
jecxz
cmp
imul
add
mov
sbb
ret
imul
test
jnp
fsubr
cltd
test
sti
cmpsb
lods
sbb
add
outsb
daa
rolb
pop
test
addr16
sbb
sub
fwait
jb
je
outsb
hlt
fucomip
test
add
imul
xchg
and
lcall
daa
xor
subl
mov
ret
jae
xor
stos
test
std
sbb
ret
xchg
and
in
and
adc
xchg
mov
push
mov
int3
push
shlb
and
popl
cltd
outsl
lds
and
lret
sub
lods
xchg
int
sbb
push
rep
lret
inc
shll
xchg
fprem
aaa
push
fwait
sub
xor
ljmp
enter
cmp
stos
sbb
lahf
cs
inc
sub
repz
fwait
dec
sbb
or
fcoms
push
add
and
add
xor
pop
adc
sahf
jo
and
dec
xchg
and
sbb
jb
out
mov
insl
add
movsb
test
jns
and
pop
sbb
push
xor
in
fisttpll
cmp
lods
pop
push
jo
into
into
gs
push
ljmp
jno
fcomps
aaa
pop
dec
leave
mov
push
inc
jecxz
or
in
xchg
or
enter
out
mov
sub
test
add
cmp
sarl
fildl
pop
cmp
fnstenv
mov
not
or
leave
inc
add
cmp
cltd
jo
dec
scas
mov
sub
pop
sub
aad
xchg
shlb
dec
cmp
jns
ljmp
cld
jno
fs
adc
fisttpl
pop
cmp
scas
cli
adcl
mov
push
hlt
mov
cmp
mov
cmpl
cs
cmp
mov
loop
push
xchg
imul
and
repz
jl
mov
not
sbb
mov
xlat
pop
into
pop
sti
add
jmp
mov
mov
or
jmp
fstpl
cmp
push
into
fdivl
pop
cli
xchg
jmp
mov
int
and
out
pushf
in
loopne
push
push
das
xchg
notb
and
ja
xchg
scas
inc
cwtl
cmc
pop
pop
je
std
sbb
jb,pt
out
inc
jmp
pusha
push
int
fwait
and
jbe
push
das
repnz
cmp
lds
xchg
xor
add
mov
popf
xor
mov
jnp
mov
or
push
aas
ds
enter
or
fistps
sbb
jno
mov
out
out
mov
popf
pop
mov
xchg
and
pop
mov
nop
sbb
jle
mov
push
test
inc
mov
push
xor
jg
pushf
and
dec
sbb
cmp
push
xor
aas
sahf
lret
je
imul
sbb
jns
gs
push
ljmp
mov
xchg
adc
mov
cmp
cltd
sbb
inc
roll
iret
fistpl
mov
jae
xor
popf
mov
adc
lods
xor
out
cmpsl
aaa
mov
outsb
std
inc
adc
cwtl
fdivrs
out
out
xorl
jg
ret
sbb
mov
ds
iret
data16
sub
leave
pop
je
inc
loop
sbbb
xchg
push
jg
add
in
clc
lret
cmpsl
dec
cmp
dec
and
cmp
adc
ror
fdivrl
push
xchg
pop
lock
scas
shlb
mov
pusha
mov
notl
hlt
sbb
fists
leave
stos
jle
sbb
in
out
popf
loopne
xlat
mov
xlat
clc
or
sar
xor
pop
mov
xor
rcl
dec
mov
inc
mov
fstps
jge
sbb
xor
xlat
fdivrl
mov
ljmp
js
movd
ljmp
jg
test
cwtl
xor
movsl
inc
jae
xlat
adc
test
sbb
hlt
fcmovb
mov
and
les
in
mov
mov
push
pop
shl
jns
mov
jb
pop
cmp
repz
cmp
dec
cmc
inc
cmp
mov
xchg
loope
adc
inc
fstpl
aam
call
insl
mov
lea
jb
cltd
lds
pop
add
cmp
sbb
add
in
add
mov
adc
add
or
stos
add
cwtl
pop
mov
mov
ja
jae
inc
inc
and
add
arpl
stos
pusha
mov
int
pusha
ljmp
jno
test
pop
sub
cmpsb
mov
addb
scas
sub
inc
mov
leave
xlat
sub
dec
and
jnp
ret
fistpll
jno
sarl
rol
ss
test
cmp
pop
aaa
fsubrs
mov
mov
aaa
into
sahf
insb
jg
outsb
cmp
xlat
jecxz
mov
mov
fmuls
pop
cmpsl
xchg
aaa
xchg
cs
aam
or
movsl
icebp
movsl
jp
mov
std
adc
clc
inc
push
ljmp
addr16
jno
mov
clc
mov
fists
xor
or
mov
adc
aas
pop
inc
rcr
mov
inc
mov
push
mov
xchg
lret
bound
pop
lcall
sub
sub
or
ror
xchg
mov
lods
mov
adc
rolb
arpl
test
and
ljmp
mov
int3
xor
shrd
scas
call
inc
ficompl
aam
stos
inc
push
jg
repnz
xchg
scas
mov
inc
ret
xchg
sub
inc
cli
popf
push
inc
sbb
inc
shlb
add
aaa
or
sar
jp
add
out
lret
out
or
push
popa
inc
xlat
fwait
outsb
and
cmp
imul
insl
xchg
cmpsb
mov
test
sbb
cltd
sbb
mov
paddusb
and
mov
vmovlps
int3
gs
into
xchg
lods
inc
iret
push
dec
aam
jge
dec
xchg
lods
xor
mov
xchg
lock
stos
dec
and
cmc
ds
outsl
invd
mov
call
aam
push
movsl
out
or
or
lods
scas
inc
data16
push
or
mov
aaa
mov
fsubrs
je
sbb
sbb
movsb
dec
sub
aam
lret
or
dec
xchg
sbb
push
inc
es
sub
sbb
xchg
lock
std
jo
pop
repz
xchg
dec
mov
adc
inc
loop
and
mov
shr
rclb
mov
paddusw
push
mov
fists
enter
jge
fchs
arpl
jecxz
mov
inc
mov
bound
repz
add
mov
xchg
or
sub
test
enter
or
je
inc
mov
jl
mov
mov
cs
mov
push
dec
sahf
jge
ret
cmp
lods
insl
fcmovu
dec
or
in
cmp
shrb
push
getsec
xchg
cmc
mov
in
mov
mov
adc
cmpsl
icebp
popa
dec
push
and
mov
movsb
cmp
aad
mov
mov
push
sub
cmp
iret
xorl
aas
insb
xchg
cmpsl
test
cltd
insl
rcll
adc
test
or
jo
mov
sbb
ss
hlt
ljmp
cmpsb
icebp
loopne
push
fcomip
iret
xchg
notl
dec
in
mov
mov
mov
nop
test
pop
roll
cmpb
push
adc
clc
adc
mov
adc
mov
pop
es
add
mov
jo
jo
or
xor
cmp
cmp
pop
repnz
or
fnsave
arpl
addr16
or
jne
icebp
pop
popl
iret
sub
in
mov
pop
push
pop
std
in
add
xor
inc
cwtl
shrl
and
mov
icebp
mov
adc
inc
out
and
icebp
flds
dec
jecxz
pxor
sub
adc
fs
xchg
ljmp
aas
lock
and
inc
int3
sub
cli
lret
int3
ss
mov
bound
lods
lds
jns
xor
and
adc
fisttpl
insb
cmp
outsl
cmpsl
shl
roll
dec
cmp
push
cmp
stc
adc
pop
imul
pop
mov
sub
ja
mov
aam
in
add
scas
fxtract
ror
leave
pusha
cli
repz
loop
test
pop
and
jns
fadds
jl
jbe
ljmp
xor
cmp
dec
lahf
mov
ljmp
jmp
data16
xor
fnstenv
shl
pop
movsl
shll
aam
out
repz
jmp
inc
pop
inc
mov
inc
jmp
or
dec
add
inc
lds
cmp
jg
les
adc
outsl
xor
and
push
jmp
mov
or
mov
mov
inc
mov
cli
inc
ret
in
sbb
jo
div
lret
lods
cmp
stos
push
mov
push
inc
xchg
or
add
xlat
shrl
pop
outsb
inc
cmc
sahf
adc
inc
mov
shlb
and
daa
mov
loopne
inc
push
pop
push
repz
sahf
xor
test
mov
stos
test
loopne
ret
and
xor
in
int
or
movsl
dec
pop
pushf
es
rorl
push
push
xchg
cmp
ljmp
test
jbe
xor
inc
cmpsl
cli
test
inc
xorb
mov
jne
mov
stos
add
adc
stos
cmp
and
loope
int3
pop
lcall
xlat
shl
enter
cmp
jae
pop
cli
push
aas
stos
sub
or
bound
out
dec
in
add
mov
je
lcall
adc
test
fcmovbe
sbb
out
lock
stos
out
aas
pop
jnp
mov
cltd
jno
mov
pusha
popa
fdiv
loope
fsts
pop
incb
pop
cmp
and
testl
pop
fldt
push
jl
pop
movsl
mov
es
jo
adc
lcall
sbb
fptan
add
mov
pop
loop
sub
add
clc
minps
xor
scas
rcrl
or
pop
int3
mov
mov
int
jo
pop
mov
jp
add
dec
scas
ret
shlb
loope
decb
lods
jg
dec
ret
mov
insb
imul
lods
xor
ret
testb
int
scas
incl
shll
imul
lea
xchg
loopne
or
mov
dec
in
fs
nop
add
mov
dec
sub
cmp
outsb
or
adc
popa
data16
ret
add
ds
insl
sub
mov
mov
dec
fstpl
pushf
mov
bound
pusha
les
xor
push
and
mov
add
jl
pop
data16
pop
sarb
out
add
jmp
pop
sub
inc
pop
sbb
push
lea
mov
nop
pop
fcoms
lret
pop
add
int3
icebp
sub
push
sahf
shrl
add
jne
in
push
cwtl
outsb
iret
pop
sub
iret
add
dec
scas
stc
sub
es
sbb
paddusb
jae
add
lea
cs
out
or
out
jmp
stos
aas
add
push
in
sub
data16
xlat
sub
add
push
popf
jno
les
xchg
sbb
pop
push
inc
xchg
xor
stos
decl
mov
jb
int
ljmp
push
stc
jae
ret
jo
sbb
add
jecxz
inc
cmp
jl
test
into
lahf
mov
nop
call
pop
push
test
jno
and
loop
mov
sbb
movsl
jne
jecxz
xchg
cli
pushf
into
shlb
inc
addr16
test
fistl
stos
mov
mov
ss
add
scas
stc
push
test
dec
xor
xor
hlt
adc
or
lock
cmc
push
pushf
out
mov
mov
out
cmp
and
int
stos
inc
cmpsl
out
lods
lret
push
push
jno
fdivr
jbe
call
cmc
mov
mov
mov
insb
into
and
in
inc
and
and
ret
lock
sbb
fnsave
push
jne
push
fnsave
jae
xor
adc
imul
ret
jmp
push
mov
mov
cmp
jp
inc
int3
sub
gs
push
mov
icebp
fucomp
jle
mov
push
call
lea
cmp
dec
inc
not
insb
add
dec
add
inc
orb
mov
mov
xchg
cs
mov
push
or
or
lret
xchg
sbb
dec
mov
jp
push
sbb
aad
stos
rcl
add
inc
dec
xor
dec
gs
shrl
xchg
call
xor
or
insb
xor
lods
jo
push
stos
test
mov
mov
fdivrs
sub
xor
or
push
push
mov
add
loop
inc
rol
scas
pop
fucomp
nop
not
cmc
sub
ds
xor
add
mov
mov
sbb
dec
cmpsl
pop
add
or
sub
or
pop
push
sub
cmp
push
mov
cmp
fldt
movsb
cmp
mov
mov
fiadds
jge
xor
addb
xchg
sub
fcomps
or
add
int
sbb
movsb
add
xor
sbb
xor
subl
in
insb
test
mov
out
xchg
sub
cmp
idiv
sub
or
nop
cs
sbb
fstpl
add
insb
sub
repz
xlat
xorl
mov
jge
insl
jge
dec
inc
pop
iret
xor
fucomp
in
add
stos
lods
jns
out
mov
ds
xchg
testb
clc
or
cltd
mov
push
mov
mov
sbb
or
pop
in
pop
insl
lock
jnp
jmp
arpl
or
je
ss
lock
lds
sbb
int
sahf
mov
or
aaa
or
sub
mov
hlt
pop
fisttpl
in
jecxz
in
cli
insl
movsb
mov
daa
or
scas
sub
jle
or
das
pop
add
js
test
testl
jae
aas
xchg
int
leave
pusha
lods
test
xchg
mov
mov
ljmp
dec
jle
mov
xchg
or
pop
sub
out
popf
das
adc
dec
jne
test
imul
pushf
rcr
lcall
jbe
cld
loopne
sahf
add
jmp
shlb
xor
inc
cmpsl
or
dec
inc
orb
fsub
sub
adc
mov
inc
sub
bound
adc
lahf
jmp
mov
sbb
ja,pn
adc
and
fsubl
fmull
mov
fs
nop
sbb
sub
pop
pop
xor
and
inc
out
mov
jne
cmp
xchg
stos
inc
and
mov
mov
xchg
push
shrb
in
leave
in
adc
cwtl
addl
ja
popf
sub
incb
sub
xchg
mov
hlt
rol
mov
shl
mov
jge
xor
je
push
jmp
sub
lcall
cwtl
xor
cmpsb
dec
sti
sub
fwait
or
cmp
repnz
nop
push
sub
addr16
sti
xor
xchg
pop
jne
into
and
mov
jecxz
cli
xchg
and
fwait
popa
xchg
fstl
mov
adc
mov
fimull
stos
aad
rcll
lods
push
jbe
xchg
jne
das
sbb
mov
push
cmpsl
jbe
jns
add
mov
mov
cltd
push
sub
stos
pop
je
out
add
in
push
in
lret
jp
testb
mov
loope
popa
nop
adc
mov
sub
jg
pop
pop
or
mov
lahf
outsb
jg
inc
sbb
xor
push
mov
bound
fucomp
mov
in
cmp
pop
fdivl
adc
ss
inc
sti
jno
mov
aam
pop
mov
add
mov
roll
pop
repnz
mov
mov
push
fstpt
pop
mov
mov
fsubs
icebp
push
jo
push
mov
lea
popa
fldl
dec
imull
stc
cmc
jne
mov
add
pop
jno
jp
dec
lea
out
pop
jo
mov
clc
stos
mov
cmp
xchg
imul
xor
mov
enter
subb
hlt
sahf
or
stc
je
mov
fbstp
sarb
insb
pop
imul
into
adc
and
mov
test
cmp
fldcw
mov
aam
and
stos
aam
inc
push
cld
xor
push
test
sarl
fidivrl
pop
pop
inc
sub
sub
fcmove
dec
out
dec
adc
jle
and
mov
jmp
rcl
push
pop
hlt
dec
lock
ljmp
inc
and
sub
jge
jl
fsts
loop
and
or
sbb
or
test
pop
inc
sub
lea
cwtl
sub
jns
int
sub
cmc
xchg
ljmp
fwait
lea
cli
sub
xchg
out
add
xchg
inc
fldt
sbb
cmp
jmp
jge
dec
add
jecxz
sahf
pusha
dec
xchg
mov
mov
xor
daa
mov
orl
adc
sub
cli
divb
xchg
sub
clc
or
mov
jle
xlat
xchg
es
xor
andb
mov
cmpsl
cs
out
dec
cmpsl
jnp
in
pop
sub
or
xchg
mov
negl
adc
nop
sbb
add
pop
aaa
lock
xchg
add
int3
pop
dec
add
dec
ds
adc
ds
scas
out
test
pop
jnp
lods
ljmp
leave
pusha
lock
push
test
xor
outsb
add
sbb
pop
scas
inc
fistpll
xchg
arpl
mov
push
scas
push
ss
repz
adc
mov
test
stos
sahf
mov
add
ja
fwait
cmc
jmp
xor
inc
adc
add
jnp
dec
pop
jle
aam
jbe
stos
arpl
sbb
jp
popf
aas
cmp
mov
or
cli
or
lods
add
into
mov
mov
scas
push
out
fwait
aad
mov
sti
push
aam
inc
aaa
popf
jp
dec
xor
lret
mov
push
out
sub
dec
or
mov
test
mov
nop
int
ret
das
sbb
pop
inc
xor
add
jno
cltd
inc
xchg
sarb
sub
mov
std
cmp
out
jecxz
mov
xchg
mov
xchg
mov
push
add
xor
daa
sbb
ljmp
lods
shll
es
loopne
roll
cmp
imul
mov
imul
pop
icebp
xchg
loop
add
jecxz
push
adc
jg
adc
addr16
cmp
daa
mov
push
fidivs
jo
sub
rolb
and
mov
shrl
lods
push
outsl
aam
cli
rcl
test
sub
push
push
jecxz
in
mov
ljmp
filds
repnz
movsb
cmp
mov
lds
adc
mov
sub
add
mov
push
add
xor
pop
mov
mov
push
jg
adc
sub
dec
loopne
in
inc
lcall
test
adc
rcrl
aad
aam
cmp
push
repnz
adc
add
jno
sarl
loope
xchg
pop
xchg
fldenv
cmpsl
and
mov
cmp
lds
test
daa
inc
pop
outsb
inc
sub
mov
fyl2x
and
inc
js
repz
gs
pop
int
sub
jge
mov
aad
int3
arpl
pushw
sub
popa
mov
mov
std
sbb
cli
xchg
cld
mov
jge
sbb
cmp
add
movsb
adc
jecxz
pop
jns
repnz
adcb
cmp
mov
mov
or
xor
and
inc
sahf
scas
data16
mov
mov
sub
out
xor
shll
lods
xchg
aaa
data16
jp
xor
call
add
clc
fidivl
add
push
mov
fxtract
push
ds
mov
sub
sahf
mov
aad
mov
push
sub
sub
movsb
repnz
bound
and
ds
mov
mov
cli
jecxz
pop
scas
adc
jb
inc
fs
cmc
mov
out
mov
lret
push
lret
cmp
mov
movsb
in
rcl
sbb
sub
push
cltd
sbb
fisubl
inc
lods
in
inc
sub
fnsave
dec
pop
fdivs
xchg
xor
movsl
cmp
aad
dec
sbb
aad
pop
cmp
imul
addr16
outsb
sbb
push
ljmp
jno
xlat
mov
mov
je
dec
and
into
or
rcrl
icebp
je
xor
loope
mov
add
lret
jns
sarl
std
push
dec
inc
test
in
pop
xor
imul
lcall
stc
xor
mov
scas
cmc
fwait
push
mov
test
les
cmpsb
lret
outsb
aad
sub
add
xor
jp
cmpsl
mov
and
fcomp
test
jecxz
mov
popa
cmp
fdivs
loop
rcrl
mov
std
aad
add
stos
push
inc
push
lds
adc
cmp
inc
shrb
pop
dec
dec
cmp
pop
lds
dec
dec
add
rolb
sarl
mov
movsb
mov
mov
ret
cmpsl
or
push
xor
pop
stc
test
xorl
imul
push
sub
pop
jmp
int3
sub
int
in
pushf
in
repnz
loope
sahf
in
jb
cltd
jae
or
insb
rolb
loopne
je
ret
ljmp
insb
test
cmp
sub
stc
in
inc
sbb
xchg
cltd
test
push
xchg
jae
lds
aad
push
cltd
lahf
and
leave
lock
and
push
cmpsl
xchg
adc
xor
sbbl
daa
push
push
cltd
or
aad
mov
pop
test
jge
inc
xor
adc
mov
jns
sti
jns
fcmovu
andb
adc
fxch
scas
mov
xchg
mov
mov
sub
repnz
push
inc
pop
jmp
xchg
out
ds
mov
sbb
mov
in
push
daa
xchg
gs
insb
imul
sub
inc
inc
stos
and
xchg
pop
sbbb
fnstenv
sbb
in
push
mov
outsb
and
mov
xchg
js
scas
out
cmpsl
rol
movsb
mov
ret
shll
loope
jle
jl
mov
sbb
roll
rcl
dec
pusha
xchg
bound
mov
dec
pop
xchg
cwtl
push
inc
xchg
jae
mov
push
out
mov
pushf
mov
jb
test
aas
pushf
mov
ret
fdivrl
jnp
int3
iret
or
cld
sbb
mov
xor
cmp
or
add
cmp
jg
jmp
sbb
xchg
stos
dec
in
stos
xor
int
fdivl
stc
mov
and
mov
xchg
sub
inc
inc
push
xorl
adc
push
inc
pop
mov
cmpsb
pop
loop
add
sbb
loope
bound
test
mov
ret
cmpsb
lahf
lahf
lcall
imul
mov
fistps
nopl
dec
adc
out
setno
js
insb
jle
cs
or
cmpsb
mov
pop
lock
sub
out
jnp
lret
sbb
rcl
pop
clc
rorb
push
lock
cmpsb
les
dec
mov
mov
pop
mov
test
pusha
subl
add
add
andl
inc
popa
adc
loopne
jae
or
loopne
icebp
pop
xor
out
imulb
dec
mov
pop
jmp
aad
jae
or
pushf
push
lahf
das
addr16
inc
ljmp
add
cmp
inc
scas
add
rcrl
xchg
jg
fbstp
sub
adc
xchg
clc
adc
into
and
cli
lock
xor
xchg
xchg
scas
ret
hlt
mov
ret
sbb
mov
sbb
lret
mov
mov
sti
inc
mov
shl
popa
andb
push
data16
mov
std
mov
cmpsl
pop
imul
fisubs
jp
add
or
pop
mov
repz
sbb
mov
dec
cld
inc
out
popa
mov
popf
imul
insb
sbb
mov
call
jbe
inc
in
push
lcall
in
sti
stos
pop
outsb
push
inc
ret
ret
or
or
mov
stos
jb
ret
ret
in
stos
push
mov
add
inc
rorb
push
xor
jmp
lahf
sbb
jnp
xchg
jl
jecxz
jmp
sbb
cwtl
bound
xchg
movsl
clc
mov
jno
jl
xor
stc
pop
push
cmp
adc
adc
add
movsb
ss
popf
stos
mov
cmp
in
imul
fidivs
scas
dec
adc
clc
iret
pop
loopne
sbb
dec
fucomip
incb
scas
jne
scas
loope
cltd
inc
mov
cltd
jp
mov
test
dec
sbb
rcrl
cli
pop
mov
clc
sub
enter
in
mov
orb
call
dec
sbb
push
shll
jno
adc
into
hlt
cmp
in
inc
push
cwtl
nop
mov
dec
jae
sub
popf
cltd
and
jecxz
cltd
dec
mov
addr16
movsb
scas
lahf
clc
pop
ja
shrb
jne
push
test
mov
inc
pop
xchg
xchg
out
push
les
hlt
push
pop
inc
movsl
sar
lret
loop
mov
rol
and
or
das
iret
pushf
js
pusha
inc
push
nop
mov
or
xor
add
test
adcl
dec
cltd
jle
lret
ljmp
inc
ds
into
out
sub
xchg
daa
adc
in
in
mov
pusha
push
cmp
lret
inc
jmp
movsl
sahf
adc
jl
mov
inc
insl
lds
into
and
xor
fcompl
loope
inc
mov
das
inc
cli
inc
sbb
dec
outsb
lret
movsb
xor
fwait
mov
int
popf
cmp
inc
scas
push
inc
sbb
xchg
sub
cmp
sub
mov
cmpsl
testb
negl
xchg
cmp
push
stos
add
sbb
jb
xlat
vxorps
xchg
fs
sub
pop
mov
andl
je
ljmp
sub
ljmp
in
add
push
mov
pop
adc
addr16
lret
leave
xlat
int3
fdivp
cs
sub
subb
adc
xchg
adc
int
out
test
push
mov
xchg
mov
add
mov
push
bound
cmpsb
sub
sub
cmova
jp
xchg
pop
inc
inc
mov
mov
rolb
add
xor
mov
jg
lcall
xchg
sub
fcmovb
fs
test
pop
lods
je
and
nop
movb
fadd
sbbl
enter
xorl
mov
dec
sbbl
add
sub
stos
jge
test
dec
pop
mov
cmpsl
inc
movl
push
inc
adc
sbbl
sub
xor
xchg
sub
mov
sarb
cmpsl
pop
xor
into
ljmp
popa
test
jae
and
jno
pop
lret
pop
cmpsb
je
or
sbb
jg
in
mov
cmp
std
mov
push
aam
xor
mov
or
cmp
rcl
aam
inc
out
orl
xchg
jnp
xchg
add
cmp
in
adc
fs
cmpsb
or
push
push
mov
mov
cmpsl
xor
push
lds
pop
in
cld
hlt
lods
pop
rcl
icebp
aas
and
pop
pushf
stc
add
daa
mov
rcr
in
sbb
aas
rcrb
xor
jo
jmp
inc
data16
jns
fisubl
hlt
mov
js
roll
inc
subb
imul
arpl
jle
mov
mov
push
jecxz
xchg
mov
je
or
inc
xchg
call
mov
ljmp
jp
mov
and
popf
or
jb
insb
mov
push
rcl
data16
lret
imul
shl
cmp
cmpsb
cmp
test
out
roll
stos
push
inc
in
xchg
sbb
xchg
insb
inc
cli
jo
bound
leave
mov
inc
and
jge
mov
sbb
fst
pop
mov
into
fsub
pop
arpl
mov
fmulp
sahf
push
cwtl
rol
fsubr
xor
ljmp
fsub
pusha
enter
cmp
adc
ss
add
aaa
fdivrl
cli
aam
inc
pop
and
dec
sbb
je
sub
inc
push
xor
popa
inc
out
mov
sbb
lock
xchg
imul
dec
ja
push
mov
repnz
fdivrl
cwtl
adc
cltd
inc
mov
xor
pop
fisttpll
mov
xchg
add
pusha
add
mov
push
call
lea
cmc
inc
mov
dec
ss
roll
ds
inc
std
xchg
jae
out
mov
push
dec
jl
sahf
sub
sahf
mov
mov
xchg
jle
add
mov
repnz
pop
shrl
dec
scas
mov
sbb
outsb
fistps
nop
dec
cli
insb
jle
fisttpl
fbld
iret
adc
jbe
cmp
movsb
stos
dec
stos
popl
into
ret
jnp
arpl
test
jp
inc
adc
mov
popa
push
pop
xsha1
cmpsb
dec
addl
pop
sub
xchg
push
mov
fmull
iret
data16
and
in
dec
insl
andb
mov
xchg
fs
mov
out
dec
mov
les
mov
rcrb
pop
cmp
or
mov
mov
push
ficomps
stos
push
mov
sbb
inc
jne
sti
cmpsl
push
xchg
or
mov
sbb
fdivr
aas
icebp
pop
cmp
mov
pop
xor
and
push
cwtl
jns
inc
and
jl
dec
sub
pop
or
sub
insb
adc
enter
push
insb
filds
or
adc
mov
das
rcl
jg
sarl
popa
imul
std
jbe
outsb
das
fmul
lods
pop
pop
shll
push
cmpsl
daa
lcall
or
dec
inc
fcoms
addr16
bound
sub
lret
xor
xchg
adc
notb
aam
mov
fs
jne
leave
es
dec
or
stos
dec
mov
cmp
rcl
in
mov
xchg
rcpps
addb
dec
and
jae
lea
and
push
dec
push
repnz
call
xchg
leave
dec
jae
jg
push
stos
xor
frstor
and
fiaddl
inc
jb
add
adc
pop
push
add
xchg
sbb
xor
in
mov
add
xchg
mov
movsb
mov
andb
jg
shrl
pushf
mov
push
and
jb
scas
cmp
addr16
pop
orl
cli
mov
fildl
out
es
xor
pop
js
jmp
jb
out
test
mov
mov
push
leave
push
mov
push
ja
mov
cs
cmpsl
pop
push
cmc
jle
jno
or
jl
stc
sub
mov
or
sti
xlat
fbstp
adc
leave
mov
testb
and
cmp
xor
ficoml
xlat
and
cltd
mov
dec
adc
pusha
out
bound
jo
bound
cmp
cmp
jle
scas
ret
push
lods
aas
cwtl
mov
int3
aaa
mov
adc
xchg
sub
stos
mov
mov
xor
in
or
push
mov
dec
fnstcw
bound
int
mov
or
outsb
jl
adc
dec
mov
adc
addr16
pop
lods
fstl
in
hlt
rcrl
push
es
or
ficompl
aas
clc
xchg
sub
pop
leave
pushf
or
jecxz
mov
repz
int
and
adc
out
jg
xchg
js
outsb
inc
push
popf
insl
ret
inc
mov
mov
xchg
sub
cmp
mov
or
mov
and
push
loope
inc
pop
cmc
dec
popa
inc
mov
pop
push
pop
jmp
lahf
or
push
aas
loop
mov
cmp
inc
xor
inc
sub
mov
jne
add
add
xor
dec
mov
shll
push
and
addr16
loop
loop
leave
dec
push
jmp
ss
xor
push
jmp
mov
xor
xchg
xchg
gs
lcall
dec
mov
xchg
leave
or
jl
mulb
push
int3
out
jns
in
std
adc
or
test
inc
sub
movsb
push
cmc
pop
scas
in
cmpsl
in
mov
shll
mov
mov
and
xor
push
pop
ljmp
call
ret
push
jmp
insl
cs
and
notb
jno
jmp
mov
inc
es
push
addr16
je
rcrl
cmp
test
pop
mov
lds
andb
mov
enter
or
jle
in
ret
xlat
pop
and
in
je
jmp
in
gs
xchg
enter
iret
sub
jecxz
stc
aas
sub
lretw
orl
mov
jbe
clc
push
std
rcrl
jp
mov
mov
roll
and
and
push
test
lret
cmp
lods
test
sbb
jae
xchg
mov
sti
andb
cmpsl
popa
cs
sbb
mov
scas
std
mov
ja
lods
fdivs
jbe
jp
inc
stos
jae
and
mov
push
movsb
add
icebp
mov
xorl
mov
mov
hlt
gs
jp
pop
gs
cmp
icebp
ljmp
hlt
sub
mov
pop
add
out
add
xchg
and
mov
jmp
push
add
and
jmp
and
roll
xchg
lods
dec
call
inc
dec
aas
call
pop
ret
push
push
ss
aas
das
add
jle
shlb
cmp
push
scas
pop
cmpsl
icebp
andl
sbb
lods
push
aaa
or
fcomp
lcall
bound
inc
add
inc
es
cwtl
jno
cltd
fidivs
btc
inc
xchg
jno
fldl
iret
cltd
push
in
or
subb
add
ja
or
bound
add
in
je
fistpll
xchg
add
xor
mov
in
loope
mov
mov
jge
jmp
add
pop
rcl
test
ret
pop
arpl
cmpsl
xchg
mov
jbe
push
push
ljmp
jno
into
push
xor
inc
imul
push
mov
pop
mov
inc
insl
xor
repnz
push
hlt
mov
arpl
aad
push
stos
fwait
je
cmp
inc
jb
aaa
mov
lds
rcrw
and
sbb
mov
outsb
add
cmp
inc
push
xlat
ljmp
pop
popa
lds
mov
pop
add
insb
cmp
pop
repz
mov
pop
pop
cmc
mov
xchg
sub
mov
daa
outsl
lret
cmp
subb
jle
inc
fcompl
testl
pop
dec
xchg
sub
loopne
dec
aam
pop
mov
pop
and
aam
lods
inc
fcmovu
mov
shl
jmp
mov
das
sub
pusha
cmp
into
imul
int3
in
es
sub
mov
dec
jl
fdivl
vcvtsd2ss
add
mov
dec
push
inc
faddl
mov
cli
loope
out
xor
push
add
rcrl
loop
sbb
add
imul
sbb
iret
dec
sti
mov
test
stos
iret
data16
dec
in
cld
in
test
cmp
add
sbb
aad
jg
mov
ficomps
pop
jnp
outsl
mov
jl
nop
sub
fwait
aas
loope
xchg
adc
add
mov
push
in
lcall
xchg
loope
ljmp
inc
or
mov
jns
mov
test
adc
xchg
cs
xor
cmp
xchg
loop
mov
mov
in
rclb
xor
dec
mov
push
jmp
daa
scas
nop
daa
fucomip
iret
pushw
add
test
mov
mov
pop
hlt
mov
fstpt
adc
es
and
lods
inc
mov
loopne
bound
int3
lds
jmp
scas
push
mov
mov
out
popa
and
ds
mov
call
bound
mov
mov
xchg
sub
xor
mov
pop
mov
mov
repz
xchg
pop
mov
sbb
arpl
cmc
mov
jnp
jmp
mov
shlb
dec
in
mov
sbb
pusha
adc
mov
fldcw
scas
bound
aam
inc
mov
cmp
adc
inc
fcomps
testl
cwtl
rcll
dec
ljmp
mov
addl
pop
add
mov
es
and
pop
cld
mov
mov
or
cwtl
das
fsubs
fs
push
stc
pushf
xor
ja
sbb
mov
or
es
lods
push
push
dec
loope
clc
xchg
push
mov
test
xlat
lds
adc
fdivl
mov
pop
cmc
movb
jb
rclb
and
movl
xrelease
pop
out
iret
dec
sub
jp
xor
nop
scas
and
mov
push
jmp
cltd
scas
shlb
mov
mov
imul
nop
fidivl
dec
lret
push
fsubrs
mov
jno
xchg
test
ret
xor
jns
mov
pop
jecxz
jb
leave
aaa
test
pop
and
nop
mov
std
call
mov
outsl
bound
test
jmp
sbb
outsl
bound
xchg
mov
clc
mov
adc
xchg
mov
jl
mov
stc
imul
adc
test
inc
imul
movsl
mov
add
mov
ja
add
jb
mov
cs
pop
jbe
sub
jno
sbb
pusha
jge
xor
in
imul
jge
mov
lods
inc
mov
jae
test
je
popf
test
push
out
jp
insl
stos
stos
loop
fidivrl
sti
test
jns
xchg
lods
xchg
adc
scas
push
dec
jecxz
xorb
mov
cs
cld
xchg
xchg
pop
push
movsl
mov
xchg
xchg
fs
jmp
mov
imul
sbb
shll
movsb
push
fdivl
jne
out
cmpsl
xchg
mov
std
lods
pop
xchg
mov
adc
addb
lods
jnp
jmp
xchg
loopnew
xchg
sahf
test
iret
lcall
je
cld
xchg
js
stos
inc
icebp
mov
mov
outsb
and
out
mov
jle
or
add
sbb
subb
clc
sub
test
arpl
cmp
jl
mov
fwait
xor
loopne
adc
stos
mov
sbbl
mov
push
mov
mov
fiadds
test
bound
mov
xorb
lahf
stos
stc
nop
ffree
cmp
hlt
inc
add
inc
pop
scas
pop
ss
iret
data16
lods
inc
outsb
jo
movsl
mov
cmpsb
call
aaa
pop
lock
out
movsb
mov
shrl
sub
in
test
jecxz
out
jbe
fisubl
jl
pushf
mov
icebp
mov
outsb
imul
or
mov
gs
pop
cwtl
and
mov
ja
cld
imul
push
test
mov
add
sbb
lock
into
pop
sub
cmpsb
pop
pop
xor
dec
roll
or
mov
pop
adc
or
or
jmp
push
adc
mov
nopl
dec
fadds
sub
pop
push
call
push
outsw
push
xchg
ja
arpl
ret
hlt
or
imul
jne
dec
pop
sahf
xor
pushf
mov
and
push
xor
sbb
dec
out
push
mov
fucomip
repnz
add
or
fs
mov
fwait
cmp
shlb
dec
pusha
and
jecxz
inc
jmp
jbe
jle
mov
sub
fsubrp
xchg
xor
push
testl
aad
add
daa
aas
pop
scas
insb
inc
test
xchg
fwait
xor
fdivl
in
sub
mov
xor
and
fdiv
mov
and
notl
test
adcl
cmp
add
es
xlat
push
imul
jae
outsl
test
into
jbe
cld
sbb
mov
mov
kmovd
pop
scas
repz
jge
sbb
xchg
dec
imul
mov
sarl
repz
push
lods
sarl
or
outsb
add
mov
xchg
push
or
mov
xchg
xchg
push
stos
inc
inc
mov
shrb
popf
pusha
sub
and
add
testb
repnz
mov
roll
inc
mov
test
sbb
rorb
mov
and
mov
lret
push
movsb
inc
loopne
jo
mov
lret
jae
int3
mov
addr16
xchg
js
lods
fwait
dec
repnz
pop
sub
out
xchg
jge
je
sbb
and
insb
mov
aaa
mov
repz
icebp
gs
xor
cmp
inc
nop
iret
cmp
ja
cwtl
jg
sbb
sub
sub
dec
push
xchg
pushf
inc
aad
xor
mov
push
scas
aam
add
pushw
cmp
sub
ficompl
mov
pop
das
insl
lahf
lods
push
mov
jae
push
mov
js
jg
xor
divl
mov
fsts
and
inc
test
addb
cmp
stos
and
push
aad
adc
sub
arpl
repz
sbb
jmp
jge
and
in
pop
in
mov
inc
adc
mov
out
xchg
call
jne
push
cmp
xchg
jp
cmpb
dec
in
push
cmpsb
jne
xchg
stc
pop
pop
mov
mov
lea
mov
xchg
popa
clc
jmp
push
mov
add
xchg
add
insb
outsb
aaa
push
cmp
je
xchg
cmpsb
inc
pop
adc
jecxz
out
and
loop
lock
into
inc
mov
adc
jbe
in
insl
sarl
fcompl
sub
or
push
xor
and
test
daa
push
dec
loop
xchg
inc
lret
push
movsl
bound
pop
stos
addb
and
xchg
cmp
js
aaa
cmp
das
xlat
pop
stos
call
rclb
mov
scas
xchg
nop
xchg
mov
ja
popf
adc
stos
push
and
push
out
xor
loopne
popf
and
mov
aas
jge
ret
inc
imul
dec
movsb
inc
xchg
inc
mov
movsl
pop
enter
sub
xor
out
push
das
push
lret
and
mov
sbb
mov
and
dec
std
fnstenv
push
inc
mov
push
adcl
imul
jnp
sub
in
mov
push
cld
lret
sbb
in
incb
aad
add
aad
cmp
mov
not
push
jb
mov
jno
fsubl
pop
js
add
cltd
xor
sbb
sbb
add
mov
mull
mov
add
add
xchg
sbb
jg
jo
adc
push
mov
xchg
push
jge
jb
hlt
dec
mov
or
push
cmpsl
imul
insl
cmpsb
inc
cmpsb
cmp
xchg
ret
mov
out
xor
sub
mov
dec
cmp
pop
or
cmc
mov
sbb
push
int3
mov
adc
or
xchg
pop
fidivs
mov
dec
stc
pop
lods
jo
mov
pushf
xor
test
rcrb
test
pop
sub
jge
mov
and
mov
mov
aam
repz
and
adc
aad
clc
pop
mov
xchg
sub
lods
dec
adc
mov
cld
xchg
sbb
xor
into
fs
sub
stos
mov
ljmp
rcll
ds
shll
sbb
push
xchg
adc
adc
std
stc
nop
das
fstpt
push
outsb
mov
test
xchg
mov
mov
test
pop
repnz
and
cwtl
in
and
jmp
fcoml
fnsave
jmp
mov
icebp
cmp
jae
sti
inc
shl
and
dec
adc
inc
cmpsl
leave
inc
add
es
mov
push
je
cwtl
sbb
push
movl
movsl
push
mov
dec
in
ss
jmp
cwtl
jle
push
inc
adc
xor
mov
adc
xchg
pop
int3
sub
dec
fildll
xor
decb
and
adc
mov
mov
dec
roll
dec
mov
adc
addl
adcb
imul
sub
cmpsl
mov
fs
pop
icebp
fnsave
dec
ret
cmpsl
jp
enter
mov
in
add
daa
cmp
jns
and
adc
scas
jo
fsubl
loop
loopne
out
aam
pusha
push
mov
lret
xchg
fiaddl
add
cmp
ds
fisttps
xor
push
xchg
pop
lods
pop
arpl
mov
mov
scas
pop
jb
mov
mov
fdivp
push
lahf
adc
std
xor
fstpt
add
jb
fidivl
mov
hlt
in
ja
stc
and
inc
test
pop
nop
fcoms
test
test
mov
nop
jmp
mov
sub
nop
daa
sarb
dec
ret
mov
jmp
lds
aas
jecxz
out
stc
sbb
add
cmc
std
xchg
daa
push
out
insb
inc
push
cli
push
aas
fbstp
pop
adc
cmp
push
imul
call
push
and
jbe
imul
mov
fmull
test
push
cld
test
rolb
mov
push
andl
pushf
jno
push
dec
sahf
xchg
in
lahf
pop
mov
fucom
sbb
jg
dec
inc
aad
jp
pop
xchg
mov
mov
mov
subl
xchg
sub
repnz
adc
cmp
mov
push
cmpsl
dec
mov
push
jmp
or
mov
cmpsb
daa
inc
lea
insb
push
in
cmp
inc
pop
cmp
dec
inc
les
push
pop
stc
dec
xchg
loope
and
adc
nop
xchg
fidivl
call
stos
pop
mov
xor
pop
stos
mov
cmpb
repnz
rorl
aam
rcr
jbe
out
sbb
sbb
or
jmp
add
int
and
movsb
add
movsl
in
jle
iret
out
jbe
and
pop
shll
sub
int3
inc
sbbl
push
aam
scas
loope
loop
or
imul
enter
cmc
push
mov
loope
push
sbb
nop
pushf
mov
out
and
mov
aad
loopne
sub
push
jmp
lds
jnp
les
sub
pop
scas
lea
imul
call
ds
or
mov
dec
adc
xchg
mov
repz
call
roll
es
stos
adcl
scas
add
cltd
xorl
cwtl
fisubrl
and
mov
sti
adc
enter
push
fistl
jmp
and
stc
mov
out
clc
ret
sbb
dec
faddl
jo
nop
xor
xchg
imul
mov
dec
ret
sbb
xchg
aaa
cmp
sub
inc
adc
xor
push
ficomps
push
xchg
sub
lcall
popf
insl
push
or
mov
and
test
xor
jbe
dec
inc
and
gs
jno
cmp
pop
jbe
in
sbb
lcall
repz
rclb
push
mov
mov
pop
lret
cmp
in
sub
ret
stos
daa
mov
mov
clc
xchg
out
or
test
out
jae
mov
xchg
jnp
xor
icebp
and
das
jnp
xchg
mov
pop
shrl
add
dec
cli
in
mov
dec
fstpt
bound
cmc
repnz
mov
mov
dec
lcall
jg
jmp
xchg
je
mov
popf
xchg
xchg
jns
gs
or
xor
mov
std
das
xor
jecxz
pop
sub
dec
data16
popa
mov
imul
adc
shll
dec
cltd
xor
add
fisttpll
or
leave
int
xchg
fiadds
inc
sbb
es
or
or
cltd
xor
fldt
lods
outsb
mov
cmp
jp
das
lods
jmp
inc
dec
mov
mov
inc
sbb
mov
adcl
or
ds
inc
mov
dec
pop
xchg
test
imul
sbb
adc
push
xchg
js
cmpsw
movsl
jp
and
lcall
inc
out
sbb
lods
pop
sub
les
push
jnp
movsb
outsb
push
shrl
sub
rcrl
icebp
dec
test
push
aad
loop
pop
fwait
xchg
dec
mov
fsts
dec
xchg
xor
jbe
fcoml
cmp
nop
or
aaa
lods
adc
enter
jns
int3
dec
shr
mov
leave
cmpsb
cmp
icebp
mov
fwait
xor
sub
xor
inc
xchg
nop
ss
xor
xchg
push
jno,pn
jno
dec
addb
imul
stos
data16
into
inc
xchg
mov
outsl
movsl
into
xchg
pop
fucomp
lea
sarl
pop
enter
cmpsl
int
xchg
cli
enter
mov
sbb
loopne
inc
fcmovb
add
clc
xchg
int3
and
mov
xor
push
add
call
outsb
sub
fimuls
stos
gs
sti
jb
inc
aaa
mov
add
xchg
mov
fldenv
call
lds
push
adc
lcall
add
enter
dec
mov
jmp
fs
enter
push
test
icebp
ds
mov
idivl
adc
stos
imul
cmp
in
ss
add
data16
lock
dec
jl
mov
fdivrl
jb
std
test
call
mov
dec
mov
je
popa
popf
cmp
adc
bnd
jg
dec
rcr
sub
fsubr
sub
mov
and
cmpsl
sbb
add
call
leave
inc
mov
loopne
fdivr
lods
shlb
mov
adc
jge
or
imul
mov
pop
fldenv
jmp
stos
imul
ja
xchg
dec
repz
mov
pop
lock
fbld
mov
aad
lahf
ss
loopne
pusha
xor
cmp
je
mov
adc
xchg
jae
daa
jp
sub
jge
and
pop
cmp
and
push
addr16
aam
xor
rcrl
xchg
xchg
push
xor
or
rorb
push
pusha
xor
jne
aad
add
pop
xchg
sub
add
adc
sbb
loope
jmp
aad
stos
repz
jl
out
inc
mov
mov
jne
test
sbb
add
xchg
bound
cmpsb
pop
and
dec
int3
xor
mov
or
sbb
outsl
movsb
push
repnz
mov
jns
out
and
cli
int3
inc
jecxz
cld
xchg
add
dec
movb
aam
cltd
xchg
xor
out
xlat
cmp
mov
iret
data16
jns
loope
pop
call
or
adc
addl
dec
rcll
fnsave
push
inc
das
loope
fildl
xchg
pop
mov
bound
push
leave
inc
xchg
pop
fcmovb
push
icebp
aaa
addr16
and
flds
je
into
inc
stc
mov
fcomps
cltd
cmpb
addb
lock
push
and
pop
cmp
outsb
test
int
push
mov
outsb
and
xchg
adc
sub
cmp
push
outsl
loop
out
mov
adc
call
sub
jmp
push
loope
adc
xlat
in
xor
lock
gs
es
mov
mov
faddl
mov
in
je
fdivr
divl
les
fldl
lahf
dec
mov
pop
dec
pop
lds
xchg
in
cmp
jl
jae
adc
int
pusha
sti
and
inc
fisubrs
imul
imul
bnd
lock
mov
push
adc
mov
mov
cmp
mov
sahf
jp
sub
cmpsb
arpl
ds
push
mov
cmp
rcrb
sbb
dec
pop
sub
push
imul
xor
or
and
or
lock
sub
and
lret
pusha
negl
mov
fisttpll
test
aas
out
scas
xchg
mov
outsb
sbb
and
jnp
test
cmp
jns
mov
ds
mov
push
andl
mov
sub
push
rcrb
xor
xor
push
fwait
cmp
notl
jns
cmp
sbb
js
push
ljmp
test
movsl
int3
js
fsubr
cltd
das
mov
std
out
xor
sti
daa
ljmp
or
jecxz
lds
unpcklps
sbb
rcrl
or
ficoms
sbb
dec
test
xor
mov
pop
or
and
xchg
fs
lahf
movsl
pop
adc
add
pop
add
movsb
pop
dec
loope
xchg
dec
push
dec
mov
aad
jl
mov
push
sbb
mov
lahf
mov
mov
negl
das
jne
jmp
sub
mov
ljmp
lock
mov
inc
mov
cltd
xchg
imul
jge
push
adc
cs
inc
ss
and
outsb
aam
and
ret
addr16
cmp
outsb
insl
aas
in
mov
jmp
and
loop
sbb
or
xor
push
iret
inc
cltd
test
mov
mov
xchg
mov
scas
push
enter
jp
bound
xor
xor
mov
xchg
jnp
sarl
loop
bound
imul
fldcw
ret
pop
loopne
mov
inc
enter
xor
xchg
sbb
loop
out
adc
inc
lret
lock
aam
xlat
add
and
pop
test
je
push
lds
mov
fstpl
scas
int
mov
push
mov
fwait
xor
mov
icebp
adc
repz
in
mov
mov
testl
cmp
aad
scas
ror
repnz
stc
daa
mov
data16
sub
scas
pop
shrb
or
mov
xor
xor
sub
in
aas
dec
push
sbb
aam
pop
pop
fdivl
dec
scas
gs
pop
jle
inc
pop
cwtl
bound
push
enter
xor
inc
int
addl
mov
into
push
cld
shll
dec
scas
gs
add
ja
aas
outsl
mov
mov
rorl
adc
shll
ljmp
ret
loop
out
fnstenv
into
cmp
lods
mov
dec
fbstp
test
movsb
rcll
push
scas
into
dec
aam
jmp
dec
out
fsubl
add
cmpsb
pop
daa
sbb
insl
test
add
pop
leave
imull
in
sub
adc
loop
in
pop
std
xchg
jnp
aam
xchg
aas
push
leave
popf
adc
inc
xchg
or
hlt
jnp
mov
mov
adc
andl
popf
xchg
and
xchg
pop
addr16
push
jnp
jnp
inc
push
mov
das
pop
push
lret
adc
cmp
es
cmp
leave
push
sbb
pop
not
xchg
ret
clc
lret
mov
mov
mov
xchg
call
call
jne
push
cmc
daa
cmpsl
scas
fwait
xor
scas
push
into
mov
and
ret
loopne
shrl
cmpsb
rolb
mov
xchg
sub
xchg
mov
outsb
jae
dec
les
push
dec
mov
mov
jp
push
repnz
insb
jmp
or
sub
cld
jecxz
lock
adc
pop
mov
push
decb
lods
jo
dec
adc
pop
push
mov
push
jecxz
arpl
daa
push
cld
xor
daa
jmp
pushf
mov
inc
sub
iret
cmp
dec
scas
pop
stos
pop
out
lods
call
aad
in
fldl
or
movsb
mov
daa
mov
lret
bound
push
test
cmc
and
mov
aas
pop
stc
and
jnp
addb
mov
push
dec
adcb
sub
lret
push
imul
popf
inc
das
hlt
ss
sbb
flds
outsb
les
pushf
les
popf
sub
or
sbb
nop
adc
inc
loop
lret
mov
loopne
adc
fnstenv
mov
and
ljmp
gs
fiadds
sbb
xchg
sub
cmp
pop
aas
jge
les
add
inc
inc
xor
test
jae
push
sbb
call
pop
pop
adc
out
push
loop
js
inc
or
inc
xor
aaa
into
scas
mov
and
adc
mov
jnp
negb
mov
fdivrs
push
fwait
sub
lea
das
inc
or
inc
testl
inc
out
out
push
je
inc
ret
adc
lds
push
cmpsl
and
repz
xchg
jge
mov
cmpsb
lret
fdivr
mov
xor
push
mov
or
add
lods
jo
xor
lds
dec
shrb
aas
adc
push
test
out
scas
jno
xchg
cmc
sub
test
and
dec
add
sub
jge
stos
xchg
pop
mov
nop
loope
js
and
jbe
les
mov
push
aad
movsb
pop
cwtl
rorb
addr16
and
mov
loopne
out
pop
and
je
push
popf
in
ss
cmpsb
or
fidivrl
and
enter
jne
inc
test
cmp
xor
arpl
es
mov
and
lds
jb
jg
imul
lea
adc
push
pop
push
mov
pop
push
pop
testb
popa
cmpsb
sbb
xchg
pop
shrl
push
inc
push
push
ljmp
push
stc
push
sbb
stos
popf
inc
inc
push
pop
dec
iret
stos
ss
and
cmp
mov
stc
inc
sahf
ficoml
mov
in
test
mov
mov
pop
daa
xor
xchg
sbb
mov
icebp
push
popf
jecxz
ret
aam
mov
xor
pop
cmpsl
jge
add
sub
mov
movl
push
stos
pop
dec
int3
icebp
ss
scas
jno
movsl
fisubrl
pop
fwait
mov
jecxz
int
insb
scas
xor
xchg
bound
sti
xor
jl
ja
ficompl
int
out
je
das
shlb
mov
xchg
xor
fnstsw
rcll
cmp
mov
and
pop
int3
cmp
cmc
jecxz
in
aaa
into
int
aam
sbb
mov
pusha
and
mov
sbb
clc
xor
sub
inc
jg
int
mov
fwait
mov
mov
cltd
pop
mov
mov
flds
pop
inc
mov
cld
and
inc
mov
fs
push
mov
test
in
dec
sarb
std
loope,pn
stos
je
or
or
nop
add
sahf
xchg
pop
inc
shrb
or
mov
jo
mov
fsubl
mov
test
les
int3
cld
je
sarb
movsl
add
sub
mov
scas
arpl
cld
and
je
jmp
xor
push
lods
xor
bound
addr16
xor
push
stos
inc
xlat
shll
xor
pop
cli
out
hlt
dec
xor
scas
jae
lods
xor
push
data16
push
push
inc
mov
je
pop
rcr
xchg
scas
pop
cs
aas
daa
orb
adc
ss
jne
dec
int3
xor
cli
mov
sbb
out
and
repz
xor
or
repnz
lret
scas
sub
jne
outsb
outsb
lcall
push
stos
jo
and
adcb
push
push
sub
pop
notl
pop
insl
mov
dec
in
mov
hlt
cwtl
pop
mov
scas
or
outsl
test
dec
aad
lret
sbb
loopne
daa
mov
adc
xor
mov
fdivs
shll
rcrl
mov
fwait
les
rcll
movsl
push
icebp
mov
pop
xchg
xchg
cs
mov
sub
fwait
into
inc
sub
or
data16
jg
lock
rclb
sti
das
pop
and
cmp
dec
in
xorb
push
movsl
cmp
cld
daa
fnsave
adc
adc
add
dec
sahf
ljmp
dec
mov
insb
icebp
cmpl
scas
xchg
nop
mov
pop
or
outsl
push
outsb
mov
xor
jns
fistl
aaa
mov
imul
cmp
adc
sbb
in
sbb
aas
cmc
loop
daa
outsl
adc
outsl
pop
pop
cli
sub
dec
das
iret
push
xchg
dec
outsb
mov
popf
pop
pop
repz
xor
ds
repnz
and
mov
ja
lods
inc
inc
cwtl
std
xchg
lret
bound
mov
cmp
outsb
or
lahf
cmp
push
out
rcrb
mov
jne
adc
xchg
sub
arpl
xor
sbbl
or
lahf
fisubrl
mov
mov
adc
rolb
nop
aam
inc
ficoms
pop
scas
out
mov
cmpsl
enter
aam
stc
sbb
push
dec
sbb
orl
leave
and
pop
cmc
jb
fidivl
xchg
jl
add
es
jns
push
stos
enter
int3
fdivr
mov
not
xlat
gs
aad
inc
cltd
in
or
repz
mov
sub
lds
test
adc
dec
fidivrl
mov
clc
inc
push
call
dec
cwtl
addr16
insb
rcrl
or
repnz
std
outsl
jae
xchg
movsl
nop
test
ret
repnz
sub
adc
rclb
ficomps
xor
outsl
cmp
stos
rcl
icebp
or
sbbb
sub
mov
dec
mov
shrl
cmp
scas
es
sub
sub
dec
xchg
and
test
push
fsubrs
dec
les
mov
xchg
sarb
mov
push
sub
cmp
add
jne
mov
into
mov
mov
pop
repnz
pushf
jecxz
push
sbb
or
mulb
and
es
pop
insb
call
mov
push
mov
xor
stc
fistpll
bound
pop
sbb
push
push
dec
test
lds
or
pop
idivb
orl
nop
and
fwait
cmp
pop
and
outsb
icebp
in
xor
push
test
jmp
xchg
ja
add
jle
movsb
out
cmp
lahf
mov
js
mov
jmp
cmpsb
aas
dec
rcll
mull
mov
es
cmpsb
xchg
dec
cld
and
mov
and
sti
mov
rcll
nop
sub
mov
fprem
and
divl
sub
dec
push
dec
sbb
and
and
sbb
into
adc
into
test
xchg
sbb
xor
call
and
cmp
loope
addl
fmuls
pop
in
icebp
gs
push
fdivl
inc
adc
outsl
lods
lods
shrb
mov
xchg
jnp
sub
jbe
insl
adc
xchg
xor
xor
out
aaa
lahf
jb
push
sbb
ss
cmpsl
das
xor
arpl
pop
xor
stos
in
loop
mov
cs
or
outsb
arpl
test
outsb
push
imul
popf
addl
xchg
inc
sub
xor
pop
jne
repz
movsl
jmp
sub
es
and
int3
stos
sbbb
sub
xchg
pop
mov
pushf
ds
leave
gs
mov
and
pop
add
lcall
or
orb
xorb
sub
test
xchg
add
sbb
pop
mov
neg
inc
add
arpl
mov
scas
ret
jge
mov
jns
ds
ljmp
inc
pushf
mov
xchg
dec
jno
pop
out
fsubs
push
gs
mov
mov
addl
or
cmpsb
xchg
jg
arpl
push
dec
cmpsb
cmp
inc
loop
jae
pop
mov
and
lods
inc
loope
in
jp
dec
in
sbb
lea
mov
cmpsl
mov
sbb
cmp
js
sub
xchg
mov
pop
les
sti
xchg
sub
jecxz
pop
out
incl
xchg
or
mov
sbb
push
mov
orl
hlt
xor
xchg
movsl
stos
clc
sbb
test
jne
mov
stos
sbb
sbb
pop
jno
loop
clc
xor
iret
mov
ret
repz
lds
add
pusha
out
clc
xor
ret
pop
push
cli
pop
cld
fcomps
gs
xlat
push
inc
inc
fnstcw
or
pop
pop
clc
dec
xchg
cmp
push
mov
cmp
mov
stc
and
xchg
cltd
out
push
dec
or
repz
inc
roll
rcrb
or
stos
xor
dec
mov
in
imul
adc
movl
gs
add
push
jg
lods
dec
pop
add
mov
mov
xor
jno
fdivrl
xorl
pop
mov
push
cld
and
mov
cmp
ret
call
inc
sub
fdivp
shr
je
out
xlat
fdivl
mov
mov
mov
enter
mov
out
sarl
shlb
in
cmp
scas
xor
insl
xor
add
jge
lea
mov
test
cmp
and
xor
mov
lds
stos
leave
mov
loopne
and
xor
add
clc
aas
pop
add
jmp
lea
call
and
cmp
and
daa
sahf
adc
dec
stos
into
lret
mov
fwait
aas
xchg
jl
sub
and
iret
shl
dec
sbb
cmp
jo
sub
jnp
sbb
cwtl
jo
ret
pop
lret
sbb
cltd
pushf
xchg
cmp
xchg
or
cltd
jno
mov
inc
sti
cmc
pop
dec
xchg
cs
sahf
xor
add
adc
lcall
les
test
sub
cli
lahf
test
or
out
insb
push
cld
loope
lea
cmc
lahf
inc
cmp
int3
xchg
adc
mov
push
jg
pusha
inc
stos
sbb
or
int3
xchg
cmc
sahf
push
clc
arpl
mov
jl
sti
das
mov
and
lret
xchg
ficomps
xchg
jae
bswap
push
gs
fprem1
mov
and
or
int3
cmp
pusha
lock
jae
jle
mov
addr16
aad
jnp
push
sarb
mov
int
cmp
rcpps
sahf
push
mov
mull
dec
int
jo
and
das
out
lds
mov
xchg
aam
ret
push
loop
sbb
aad
jb
and
shrl
mov
add
test
out
lcall
jbe
push
shrl
sarb
aaa
xorl
xchg
xchg
pop
popf
int
subl
push
xchg
out
addr16
int
or
icebp
rolb
xchg
std
push
dec
int
xchg
jmp
sbb
xchg
sbb
lcall
icebp
stos
sub
outsb
in
popf
jge
out
mov
adc
icebp
pushf
xchg
roll
add
mov
mov
mov
adc
dec
out
jmp
gs
cmp
and
fidivrs
rclb
loope
bound
or
pop
cmp
popf
clc
sahf
jp
sti
out
cld
mov
or
les
aas
cltd
mov
mov
mov
je
jnp
jb
jo
mov
mov
aaa
mov
pop
clc
inc
adc
subl
out
insb
jmp
shlb
sub
pop
movsb
cmp
js
test
cmpsb
insb
jmp
jle
mov
popa
test
cmpsl
dec
mov
push
sub
dec
and
jmp
add
lret
test
mov
shrl
ds
insl
jmp
pop
mov
test
inc
loop
pop
push
shl
int3
xchg
and
inc
pop
xor
pushf
das
mov
pop
xorb
adc
push
rorl
rorl
adc
sbb
push
leave
rolb
and
jg
mov
lods
sub
scas
aad
jge
adc
sub
popa
xchg
cmp
xchg
pop
int
bound
adcl
xor
test
sub
xchg
inc
test
cmc
popa
adc
je
sbb
aad
mov
adcl
aam
jp
pop
mov
cltd
cmp
popa
imul
stos
cmp
ss
popa
test
movsl
mov
inc
pop
andb
xchg
rorb
adc
sahf
xorb
iret
out
test
xchg
cmp
fwait
pop
adc
inc
push
repz
jmp
cmc
pop
lcall
test
xor
mov
mov
mov
loope
push
push
insb
xor
jg
or
jge
xor
xchg
lret
call
add
sbb
push
insl
repz
test
jecxz
push
and
jnp
xor
xchg
dec
insl
out
sbbl
sbb
push
outsb
repz
pop
int3
cltd
jns
shll
int
xchg
xorl
sbb
sbb
add
pop
addr16
call
sti
lahf
inc
sub
repz
cmp
test
pop
add
pushf
aaa
fwait
add
mov
push
cld
jo
jbe
sbb
psrlq
push
filds
sbb
scas
xor
dec
cmpsl
sub
mov
mov
pop
psrld
cmp
loopne
mov
fsubrs
mov
cmp
les
fidivs
lcall
xchg
cmp
mov
mov
iret
mov
sarb
shrl
mov
dec
add
xchg
mov
aam
icebp
sbb
or
int
cmp
inc
sbb
shll
mov
mov
inc
sbb
or
out
adc
cwtl
int3
gs
mov
mov
xchg
sahf
push
cli
mov
sbb
cpuid
insl
icebp
ret
pop
addr16
adc
in
mov
test
aad
scas
mov
or
loop
in
daa
std
pop
cli
out
fstpt
add
sahf
movsl
mov
insl
jmp
out
sub
mov
or
sub
fidivrs
cmp
lods
cmp
mov
sbb
jmp
idivb
popa
in
mov
std
push
ficomps
mov
mov
xchg
nop
sahf
add
ja
int3
lea
lcall
mov
and
stc
cli
inc
adc
in
sbb
loopne
lcall
and
aad
mov
stos
repnz
pushl
mov
insl
lret
rclb
pop
pushf
cwtl
cmp
mov
cmc
ja
sbb
ss
mov
cs
mov
addl
pop
sbb
lods
adc
call
int3
adc
jge
dec
pop
lahf
fs
xchg
ret
adc
mov
lcall
push
daa
mov
mov
or
or
jle
roll
insb
inc
pop
cld
push
je
mov
mov
mov
xchg
gs
sbb
inc
adc
cld
stc
vmptrld
std
pop
push
outsb
add
xlat
mov
mov
fdivrl
add
js
scas
repnz
jle
shlb
ljmp
mov
mov
dec
sbb
cmp
rclb
mov
sub
and
cmp
sub
aad
mov
sbb
xchg
jbe
movsl
aam
mov
fnstsw
fs
xchg
popa
push
int
les
ror
adc
inc
push
clc
icebp
inc
adc
loop
add
std
bswap
gs
push
sarl
pushf
push
daa
scas
mov
cmp
int
pop
mov
arpl
jmp
je
pop
push
mov
pop
push
sarl
lahf
mov
jecxz
and
out
xor
stos
inc
sub
sub
cmp
outsb
mov
cmp
add
mov
jns
je
arpl
idivb
sbbl
stos
jge
fst
dec
prefetcht0
insb
hlt
in
mov
sbb
sti
mov
xchg
push
in
es
xor
sub
cmp
icebp
ds
nop
fildll
or
mov
mov
push
xchg
pop
je
xchg
xor
lods
stos
or
mov
inc
bound
or
push
cwtl
mov
mov
test
scas
jno
fs
xchg
ds
sbb
les
sub
out
in
test
jmp
add
pop
sbb
test
mov
pop
aam
scas
mov
mov
push
xor
and
cwtl
sub
scas
sub
sbb
rorl
cmp
cmp
dec
push
sub
pop
les
xor
leave
pop
rcr
jle
test
insb
jp
inc
adc
in
outsb
cmp
daa
popf
cmp
inc
push
imul
adcb
pop
cld
pop
jbe
sbbl
or
fs
mov
fstpt
xor
lods
mov
cmc
sti
push
jne
fsub
cmp
fnsave
xor
push
inc
leave
pop
add
mov
int
pop
stos
out
mov
icebp
pop
jecxz
loopne
sbb
movsb
sub
dec
mov
jge
mov
ja
test
dec
lea
shll
sub
pop
xchg
xor
stos
test
mov
rclb
cmp
dec
adc
das
out
jo
cmp
push
clc
and
and
int
xchg
cmp
xor
ja
gs
je
jle
in
mov
aaa
xchg
dec
lods
cmpsl
shlb
jge
iret
mov
addr16
loop
inc
jnp
fwait
ds
test
or
mov
mov
mov
adc
dec
or
pop
lea
pop
xchg
jl
sbb
fcoms
push
and
or
pop
mov
mov
inc
or
sbb
adc
out
sarb
icebp
inc
push
xchg
iret
data16
pop
enter
pusha
sti
pop
pop
xchg
add
cmpsb
lods
adc
push
mov
lds
inc
or
dec
in
cmpl
dec
lods
sub
xor
lret
lcall
xchg
pop
shrb
sbb
outsb
cmp
sarl
shrl
cld
dec
fildll
aas
shlb
and
mov
jecxz
xchg
ss
sub
jbe
xchg
sbb
dec
pop
popf
inc
sub
sbb
mull
gs
in
repnz
mov
jge
xlat
mov
sub
mov
movsb
repz
outsb
out
outsl
pop
jns
out
mov
push
into
shr
call
dec
or
int
mov
cmpsb
insl
out
xchg
pop
scas
sub
iret
mov
test
pop
sti
loopne
mov
sbbb
adc
sbb
xchg
mov
std
and
pop
sahf
push
icebp
test
and
jnp
mov
jg
paddq
ret
inc
or
lahf
and
stos
jp
mov
shl
sub
or
push
outsl
jmp
xchg
mov
and
ds
cmp
sub
inc
out
stos
sub
lahf
stc
nop
shlb
stos
xor
scas
xor
dec
mul
insb
insb
popf
inc
push
and
shrd
and
stc
jp
add
shll
mov
and
and
add
pop
jge
jle
mov
icebp
fs
add
in
mov
mov
push
roll
xchg
mov
dec
inc
iret
insb
call
lahf
xchg
xchg
inc
ret
ret
mov
jle
push
mov
mov
nop
jg
push
jne
pusha
xor
imul
dec
dec
or
scas
pop
cli
mov
test
add
sti
dec
roll
pop
sahf
mov
shrl
mov
pop
repnz
dec
mov
mov
fwait
or
xor
sub
js
aaa
pushf
pop
imul
lcall
je
out
pop
and
add
xor
lods
test
inc
ss
jae
pop
add
data16
add
bound
fnsave
pusha
pushf
aam
enter
mov
mov
sbb
je
push
add
add
dec
push
jmp
hlt
orl
add
jno
sbb
xchg
pop
cld
iret
fidivs
mov
pop
rcrb
inc
push
mov
adc
loop
test
jmp
int3
mov
fdivrl
ljmp
out
push
add
pop
jl
push
sbbb
mov
popa
rcl
xchg
cmp
add
imul
xor
cmc
int
ret
sbb
add
mov
iret
mov
mov
add
xchg
cmp
pop
mov
cwtl
cmp
sbb
lret
sahf
aad
pop
adc
or
outsb
dec
or
loopne
divb
cmpsb
pop
jnp
lea
sbb
lahf
adcb
iret
mov
cmp
pop
sub
pop
jns
jecxz
cmp
lods
sub
jno
cmp
mov
outsb
cmp
jbe
jl
je
mov
cmp
sub
not
add
or
js
pop
jns
push
push
sub
cmpsb
testb
sar
into
dec
ret
xchg
push
pop
dec
or
lods
jnp
sbb
aas
jns
xor
mov
ja
repnz
cmp
adc
jl
jne
ja
hlt
pop
add
cmp
xchg
gs
jno
in
dec
sbb
lods
xchg
xchg
js
data16
stos
sub
xchg
inc
add
pop
and
xorb
fucomp
addr16
push
out
test
clc
pop
mov
scas
mov
leave
cmp
dec
xchg
sbb
js
ret
test
clc
add
and
jmp
fiaddl
mov
jmpw
test
jmp
fadds
adc
adcl
mov
fmull
adc
arpl
adcl
xlat
outsb
repnz
sbb
mov
cs
cmpsb
clc
gs
out
or
adc
fcmovnbe
inc
das
mov
add
dec
xor
loopne
inc
and
xchg
jnp
mov
cmp
iret
and
xor
sub
loopne
shrl
xchg
pop
or
fwait
sub
jg
cmpsb
xor
les
cmp
pop
mov
jl
sbb
enter
jae
xorl
pop
and
or
addr16
or
loope
jne
mov
mov
adc
ficoml
mov
mov
pop
mov
mov
loope
mov
jp
rclb
out
and
fs
inc
adc
fisubrs
add
add
ret
sbb
sub
mov
stc
stc
jle
in
out
sbb
mov
mov
mov
fidivs
and
jecxz
add
push
and
fisubrs
mov
enter
dec
adc
lea
pushf
jns
or
and
mov
jecxz
lret
jle
pop
push
jb
pop
mov
dec
or
mov
or
gs
mov
xor
push
jns
test
lcall
movsl
mov
xchg
cmp
push
stc
jge
or
pushf
imul
mov
popf
inc
xor
stos
xchg
sub
addb
mov
inc
xor
imul
mov
xor
jp
mov
iret
mov
adc
mov
mov
ret
push
cmp
outsl
xor
sub
ss
test
cmpsl
pop
mov
loope
orb
out
lea
adc
test
mov
cmp
daa
nop
daa
pop
or
imul
and
mov
xchg
and
insl
repnz
mov
dec
es
jp,pt
mov
leave
outsb
je
inc
adc
aaa
lcall
fnstcw
fwait
jns,pt
mov
lds
popf
cmc
sbb
or
mov
adc
insl
push
lahf
cmp
jno
jo
or
sbbb
push
jmp
or
pushf
xor
dec
setle
mov
or
cmc
pop
dec
pop
lea
sahf
xchg
cmp
push
stc
lods
mov
shlb
bswap
in
out
stc
pop
imul
push
and
mov
in
imul
inc
add
jno
pusha
icebp
jle
or
adc
insb
sbb
add
sub
pop
testb
adc
mov
pop
sub
sarb
repz
fwait
inc
jmp
cld
jge
push
clc
adc
cmp
test
xor
andb
fcmovnb
cmp
jge
sbb
sarl
add
dec
adc
dec
cltd
lcall
push
test
mov
lods
push
pushl
add
test
or
jno
cmpsl
jns
mov
mov
cwtl
sbb
lds
jbe
sbb
popa
mov
fnsave
inc
push
mov
shrb
cmp
cltd
sub
and
das
mov
xor
dec
out
xor
cli
gs
imul
xchg
push
sub
push
mov
sub
aas
rorb
xor
adc
xchg
cwtl
test
iret
rolb
popa
orb
stos
jge
lods
mov
es
pop
lods
inc
mov
je
cli
jge
in
lods
xor
inc
jno
inc
jns
and
xchg
loopne
inc
pop
xchg
ds
dec
adc
mov
sub
imul
mov
mov
sbb
ljmp
mov
gs
inc
lods
lahf
aaa
into
fwait
mov
int
sbb
andb
inc
shlb
lahf
jmp
cltd
inc
jae
xor
js
jmp
xor
xchg
mov
mov
dec
cmpsl
pop
dec
push
rcrb
adc
xor
and
ds
mull
outsl
in
stos
jg
les
arpl
dec
jp
popf
das
xchg
pop
divl
xchg
jo
call
arpl
adc
out
dec
fildll
andb
dec
sarl
mov
jl
out
fucom
imul
dec
adc
imul
pop
dec
adc
add
and
dec
out
movsl
cs
jns
jnp
sub
inc
ljmp
rcr
xorb
imul
mov
call
sbb
imul
out
mov
add
shlb
mov
add
or
repz
insb
cli
push
push
orb
mov
icebp
icebp
mov
insb
out
icebp
or
adc
jp
sub
or
add
dec
ficoms
mov
or
xchg
mov
scas
int
mov
mov
negb
ficomps
mov
mov
mov
scas
mov
push
or
cli
data16
lea
adcb
push
sti
out
test
sarl
jge
or
ret
mov
fs
push
ds
filds
mov
arpl
stos
jbe
jns
mov
movsb
call
repz
lods
jnp
adc
push
jmp
sub
ficoml
fbld
push
adc
dec
push
add
sbb
jge
repz
dec
enter
mov
pop
and
mov
test
sub
push
sar
aaa
scas
inc
sbb
dec
mov
add
aaa
popf
ja
outsl
cmc
pop
orl
mov
mov
test
sub
xchg
jae
stos
popa
nop
cmp
xchg
xchg
add
popl
test
lret
stos
or
mov
jmp
daa
mov
mov
dec
or
xlat
out
aas
cltd
rorb
fdivl
adc
inc
cmp
dec
inc
movsb
jl
adc
stc
nop
jle
push
ljmp
dec
imul
jne
stos
adc
adc
int
and
jns
inc
push
xorb
loop
cmp
push
pushf
cmc
pop
ja
movsl
sub
ret
fs
test
push
movsb
rcll
or
js
jne
ljmp
sbb
in
call
movsb
out
sarb
push
and
xchg
outsl
lcall
ret
in
mov
arpl
insl
icebp
push
inc
jns
or
jmp
push
pop
lcall
sbbb
xor
mov
scas
fistpll
cmc
in
jno
sarb
movsl
cmp
lcall
fnstsw
ret
or
jmp
mov
cmc
bound
js
or
stc
pop
pop
ja
jo
push
je
rcrl
ret
sub
hlt
out
fidivrs
in
pop
xor
das
lcall
push
dec
or
aam
dec
jmp
sti
pop
out
jb
jl
std
scas
jp
nop
lods
sar
test
dec
adc
jmp
mov
mov
into
cltd
pop
call
inc
or
enter
jecxz
ds
jmp
adc
mov
adc
pop
lcall
or
mov
sub
inc
icebp
pop
lock
dec
or
xor
push
add
movsb
xchg
inc
notb
pop
cli
sub
lock
cwtl
enter
pop
push
add
mov
adc
inc
xchg
mov
pushf
xchg
mov
push
nop
dec
lret
ret
and
mov
sahf
inc
movsb
adc
repnz
neg
in
sub
push
dec
adc
push
fldl
ljmp
adc
mov
movsb
das
sbb
and
movsl
lods
xor
stos
cld
call
scas
mov
mov
data16
popf
inc
push
push
imul
aad
mov
lods
lret
imul
js
std
gs
lods
xor
and
xor
dec
mov
pop
and
xor
fstpl
iret
loop
xchg
mov
dec
inc
les
xchg
push
mov
repnz
fisubrs
pop
icebp
pop
jo
dec
adc
add
add
mov
add
sarb
sub
xchg
test
faddl
pop
lret
mov
xchg
scas
inc
inc
adc
imulb
mov
lock
xchg
xchg
push
jb
imul
cltd
cmp
int
lret
cmp
xchg
mov
inc
adc
int3
cmp
gs
pop
sti
loope
or
xchg
sbb
movsb
xchg
imul
lds
cwtl
xchg
mov
loop
ljmp
add
pop
add
test
or
pop
pop
push
les
dec
addr16
cmp
into
pop
sbb
sub
push
fidivrs
inc
test
enter
push
imul
cmp
xor
xor
stos
mov
scas
add
cmc
scas
lcall
out
scas
sub
stc
call
imul
or
adc
adc
push
mov
cmp
scas
daa
mov
mov
cmpsl
das
add
ds
pop
nop
daa
lea
adc
or
adc
pusha
ja
inc
sub
push
clc
popf
inc
adc
in
out
out
inc
shl
cmpsl
ds
ss
jmp
and
adc
repnz
popl
ficompl
mov
fists
add
out
mov
sbb
jne
cltd
inc
out
push
pop
std
aaa
xchg
xchg
inc
sub
sub
xchg
aaa
aas
xchg
jle
xchg
inc
jno
fwait
cmp
outsl
pop
cld
repz
sbb
pop
jno
jnp
loopne
test
dec
adc
inc
and
js
out
lahf
inc
mov
test
cmp
and
sbb
aam
jge
lock
push
aam
inc
in
push
and
daa
repz
loopne
inc
or
and
ja
clc
xor
sub
in
mov
ror
mov
sahf
scas
orl
into
mov
pop
into
mov
cmp
popa
cld
push
fnstcw
call
mov
mov
cmp
and
inc
imul
sbb
cmp
aam
sahf
cmp
or
lea
std
addr16
xor
adc
mov
mov
insb
cmc
icebp
jns
mov
pusha
scas
xor
insb
xchg
cmp
into
add
ficoms
jns
or
addr16
repnz
inc
shlb
mov
aam
popf
ds
movsbl
lock
shll
inc
adc
imul
shlb
mov
mov
xor
sub
mov
jne
dec
adc
sti
bound
lret
cltd
push
sahf
xchg
sti
sub
add
lock
pop
pop
push
lahf
dec
popa
inc
int3
push
cld
mov
mov
pop
mov
mov
aam
cmpsb
jmp
fmul
jmp
outsl
or
lods
xor
jmp
and
in
outsb
push
cmp
addr16
and
mov
stos
inc
jae
pop
add
cltd
aas
sti
arpl
mov
jmp
repz
std
pusha
adc
orb
orl
je
dec
pop
add
push
clc
cmove
mov
mov
scas
std
pop
and
mov
cmp
cmp
scas
jns
push
and
cld
lea
pop
stos
lea
cmpl
add
push
dec
mov
push
add
inc
movsb
xor
inc
push
lret
xor
ret
inc
add
out
add
push
cld
mov
pop
push
mov
add
lods
jns
xlat
lods
insl
lcall
shlb
push
gs
sbb
jnp
pop
add
jae
adc
jmp
fstps
lds
scas
fnstsw
xchg
inc
addb
jne
fld
xchg
mov
fldt
mov
cmpb
xor
dec
in
rcll
into
gs
pop
psrlw
gs
lea
or
adcb
push
add
mov
xchg
xor
push
inc
sub
loopne
pop
cld
dec
cld
icebp
popa
lcall
push
cwtl
and
push
mov
mov
mov
stc
mov
and
leave
adcb
mov
adc
mov
data16
add
jb
adc
jmp
dec
test
imul
daa
insl
mov
jnp
loopne
jns
mov
sbb
mov
xchg
lret
mov
jge
loope
repnz
daa
and
jo
xor
xchg
addr16
nop
rcl
push
jecxz
push
cli
hlt
jg
loop
orl
lock
ds
orb
hlt
push
mov
mov
fs
nop
mov
mov
mov
orb
and
loopne
insb
in
sahf
sti
cltd
cmp
aad
les
xchg
inc
psadbw
cmp
fistpll
and
push
push
add
jge
pop
aas
lcall
pop
sti
jecxz
mov
add
data16
or
add
pop
arpl
xor
sbb
and
mov
xchg
aas
ret
insb
stc
sbb
adcl
sub
cmpsb
lods
xor
mov
mov
lods
mov
loope
aam
mov
lods
repnz
or
push
sti
jp
fiaddl
pop
sti
orb
add
sbb
in
jae
sub
mov
cmp
retw
inc
or
test
nop
push
pop
mov
in
mov
mov
stos
icebp
pop
xor
ficomps
popf
mov
inc
sub
mov
and
mov
mov
mov
mov
sarb
pop
add
std
lcall
pusha
mov
cltd
inc
sub
ret
xor
push
push
imul
in
insb
hlt
test
push
add
neg
push
add
push
ja
out
mov
xchg
nop
fidivrl
add
push
add
sub
leave
mov
arpl
jp
and
sub
dec
pusha
int
xchg
mov
mov
lods
insb
icebp
lret
add
lahf
push
test
dec
leave
and
dec
cmpsb
push
mov
pop
mov
mov
push
std
push
mull
call
pop
dec
sub
mov
ret
jmp
fstpl
xor
xor
dec
adc
jge
mov
sahf
insl
jge
add
orb
sub
and
dec
adc
push
inc
or
icebp
es
jbe
mov
arpl
push
mov
mov
mov
psllq
clc
sub
sub
es
sbb
fstpt
sub
add
push
mov
pop
mov
mov
adcb
aaa
cmpsb
xchg
dec
out
insl
jbe
std
pop
ljmp
outsb
cs
sub
ss
pop
testb
dec
fistpl
jle
mov
mov
xor
mull
sbb
mov
mov
cwtl
das
pop
add
popf
lret
xchg
inc
sbb
jnp
xchg
pop
add
inc
rorl
inc
scas
xor
mov
imul
arpl
std
es
sub
sahf
rcl
inc
jae
sahf
inc
adc
sbb
inc
adc
outsb
sub
jns
mov
push
clc
daa
mov
mov
or
mov
aam
xor
lret
fnstenv
pop
ss
add
cmp
jae
shll
push
out
in
sub
roll
out
in
mov
std
pusha
ljmp
cli
gs
mov
push
jecxz
dec
push
adc
popf
aas
mov
aam
fistps
cli
sub
outsb
jecxz
lds
jbe
adc
pusha
or
imul
jge
cs
dec
out
sarl
inc
es
nop
inc
aam
mov
cmp
lods
inc
into
int
clc
out
jmp
fdiv
dec
adc
cmpsb
jb
or
fbstp
dec
dec
in
xchg
xchg
ret
mov
stos
sub
pop
std
pop
bound
mov
popf
add
in
outsb
ljmp
ljmp
std
pop
fwait
arpl
fisubrl
in
outsb
mov
mov
stos
cmpsb
push
insl
out
out
std
pop
sbb
inc
pop
std
sbb
popa
hlt
inc
inc
lret
lcall
push
mov
js
imul
pushl
jo
in
cmp
pop
push
add
mov
lret
repz
pop
jp
js
sti
pop
jno
push
repz
out
std
xchg
and
movsl
cmp
mov
mov
xor
xor
sti
push
add
xor
mov
cmp
sub
dec
rcl
hlt
lods
in
fists
out
jae
jbe
ja
cmp
pop
pop
enter
xchg
test
out
mov
lock
aas
movsb
cwtl
loop
mov
lret
out
je
jge
imul
in
popf
pop
add
dec
in
out
cmp
daa
xchg
cli
xchg
les
test
scas
jbe
ja
fisubs
movsl
add
outsb
notb
enter
pop
sub
xor
in
inc
test
iret
enter
xor
mov
and
daa
lods
bound
mov
inc
or
jl
mov
mov
test
xor
test
into
xchg
xor
dec
adc
cmc
pop
push
mov
xchg
jg
xchg
imul
cmpl
cmp
sub
pop
out
fbstp
pushf
mov
dec
adc
mov
cltd
outsb
xor
add
cli
int
cmp
outsl
out
cmpsb
sub
pop
insl
mov
hlt
ret
jnp
arpl
rorl
inc
push
pop
enter
repz
adc
inc
mov
ret
fstpt
lcall
loope
or
xor
arpl
test
aad
mov
scas
pop
add
stos
das
cmp
inc
or
adc
dec
adc
inc
xchg
aaa
aad
push
std
sti
pop
pop
ljmp
ljmp
outsl
cmp
mov
ret
imul
into
gs
aaa
in
subl
cmpsl
push
mov
lds
fmull
das
inc
frstor
push
pusha
andl
roll
cmp
pop
sub
pop
pop
jp
push
lods
jnp
jns
int
jae
into
add
push
and
mov
jae
mov
jb
aam
lds
into
test
repnz
pop
push
in
dec
push
jp
dec
imul
mov
mov
out
cmpxchg
pmullw
iret
xchg
mov
adc
cmp
xor
cmp
rorl
dec
stos
insb
add
data16
das
decl
sbb
movsb
mov
pop
xlat
test
jnp
dec
fidivs
dec
add
rcrb
sbb
and
jne
pop
repz
push
in
xchg
jp
call
cwtl
das
sbb
sub
mov
outsb
mov
rorl
gs
repnz
adc
mov
fldt
mov
or
inc
fstpl
push
pop
andb
mov
mov
sbbb
aam
cmp
pop
daa
les
jns
push
stos
jp
jns
int3
fdivl
int
xchg
pop
sti
xchg
push
pop
pop
mov
jb
mov
jno
aam
les
into
cmc
ret
pop
repnz
push
push
in
inc
adc
je
lcall
sub
mov
mov
inc
push
aad
inc
popa
iret
xchg
popa
repz
mov
test
pop
or
cmp
xor
aaa
pop
sub
mov
in
stos
dec
stos
insb
add
std
data16
decb
sbb
mov
pop
test
sub
in
sub
jne
dec
add
iret
popf
and
and
ds
inc
cmp
je
pop
repz
push
in
xchg
jp
out
or
call
xchg
sub
mov
insl
mov
imul
into
gs
repnz
adc
mov
fisubrl
mov
or
push
pop
jg
sti
mov
mov
mov
sbbb
shll
aaa
push
les
js
push
stos
jns
jns
lret
fdivl
int3
add
push
push
pop
mov
jno
mov
jo
aam
ret
aaa
into
hlt
ret
repz
jp
inc
addr16
cltd
addr16
das
cltd
mov
mov
in
or
aad
aas
pusha
iret
xchg
pusha
repz
mov
test
push
or
aaa
add
sub
mov
in
stos
dec
test
data16
sub
dec
test
adcl
cmp
mov
rclb
in
sub
jne
dec
add
into
pushf
and
and
ds
inc
cmp
jae
pop
repz
push
in
lds
je
sbb
cwtl
das
sbb
xchg
sub
dec
insb
lea
imul
repnz
xor
andl
cmpsl
xchg
mov
mov
sub
or
fstpl
push
pop
jle
sti
scas
jle
pop
mov
sbbb
shlb
aaa
push
and
mov
jns
lret
cld
lret
add
dec
sbb
sbb
mov
rcrl
adc
in
inc
adc
inc
data16
cwtl
cbtw
das
cwtl
mov
mov
jmp
mov
ds
insb
ds
iret
xchg
pop
repz
mov
test
add
xor
xor
push
dec
in
test
insb
add
sti
data16
sub
mov
cs
test
orb
andl
rclb
in
sub
jne
dec
add
int
and
pop
out
ds
inc
cmp
jb
pop
repz
push
in
les
je
pop
out
das
sbb
xchg
sub
mov
imul
mov
loopne
mov
xor
andl
cmpsl
xchg
mov
mov
sub
or
inc
fstpl
add
sti
scas
jge
pop
scas
iret
sbbb
shll
aaa
push
and
pop
push
jbe
push
test
loop
test
lret
sti
sbb
xchg
dec
sbb
mov
outsl
sbb
lahf
shll
repnz
adc
inc
adc
inc
gs
xchg
gs
das
xchg
mov
mov
ljmp
insb
cmp
pop
repz
mov
test
add
mov
xor
sub
xchg
in
test
cmpsl
insb
add
cli
data16
sub
mov
sub
dec
test
andb
pop
shl
rclb
in
daa
inc
fidivs
dec
add
int3
lcall
push
in
ds
inc
cmp
jno
pop
repz
push
in
ret
xchg
jp
ret
in
or
in
das
pop
cmp
dec
push
mov
mov
fmulp
gs
repnz
xor
andl
arpl
lds
xlat
dec
jecxz
sub
pop
sub
pop
jl
sti
lods
jl
pop
scas
into
sbbb
shlb
aaa
push
and
pop
push
jne
push
cmpsl
jbe
jns
enter
leave
add
dec
sbb
mov
outsb
sbb
sahf
shlb
icebp
mov
push
in
inc
adc
inc
fs
xchg
fs
das
xchg
mov
sub
mov
dec
jmp
or
insb
cmp
iret
data16
pop
repz
mov
test
add
xor
xor
xor
roll
dec
cmpsb
insb
add
stc
data16
sub
mov
sub
test
jle
test
jg
mov
pop
shl
rclb
in
es
fidivs
inc
add
lret
cltd
and
sbb
aas
cmp
jo
pop
rep
xchg
push
in
ret
adc
jecxz
or
aaa
xchg
sub
mov
imul
into
gs
mov
xor
andl
cmpsl
bound
lds
dec
jecxz
sub
pop
sub
pop
jnp
sti
lods
jnp
pop
lods
int
sbb
into
cmpsb
cmp
push
and
pop
push
je
push
cmpsb
je
jns
fnsave
add
dec
sbb
mov
insl
sbb
pushf
mov
pop
repnz
adc
inc
adc
jne
xchg
bound
sub
mov
dec
out
mov
cmp
aad
cmp
mov
mov
scas
adc
xor
xor
xor
test
in
cmpsb
dec
loopne
movsb
insb
add
clc
addr16
sub
mov
sub
sbb
dec
test
jge
mov
pop
shl
rcrl
in
and
fbstp
inc
add
lret
mov
jmp
mov
ljmp
outsl
cmp
rep
nop
push
out
rorl
or
loop
das
adc
xchg
sub
mov
mov
mov
imul
repnz
xor
test
adc
mov
lds
aam
jecxz
sub
pop
es
pop
jp
cld
stos
jns
pop
stos
int3
sbbl
int3
cmpsb
cmp
push
pop
lds
rclb
jecxz
movsb
test
std
xchg
dec
pop
and
pushf
imul
shr
mov
pop
out
inc
or
jbe
xchg
pusha
cltd
xor
mov
dec
in
mov
cmp
insl
cmp
push
mov
adc
xor
xor
das
push
sub
test
in
movsl
dec
loope
mov
push
and
dec
xchg
jnp
movsb
cmp
pushf
pop
into
lock
lock
and
jbe
add
leave
xchg
and
sbb
ds
cmp
pop
repz
adc
loopne
das
adc
mov
mov
imul
repnz
out
test
adc
mov
lds
rorb
daa
dec
fistps
push
push
jns
std
stos
ja
pop
test
lret
cld
push
mov
pop
dec
jno
pop
mov
fbstp
ret
add
dec
adc
sbb
fwait
addr16
mov
pop
repz
adc
pop
cltd
xor
mov
dec
jecxz
mov
cmp
insl
ss
shrb
push
hlt
mov
stos
adc
xor
xor
cs
sub
orl
andb
shl
push
and
dec
xchg
jp
movsb
cmp
fwait
pop
int
ret
out
in
and
ja
inc
add
enter
mov
out
aad
cmp
shrl
pop
repz
pop
out
mov
loopne
or
adc
sub
mov
xchg
imul
repnz
cs
test
adc
mov
lds
rorl
es
fists
push
push
js
std
test
lret
cld
leave
cmpsb
cmp
dec
sbb
pop
dec
jo
pop
mov
ret
fbstp
ret
repz
xchg
dec
adc
mov
imul
xchg
mov
pop
repz
or
cmp
ja
xchg
pop
cltd
xor
mov
dec
loop
mov
aaa
add
insl
xor
push
hlt
mov
test
push
movsl
das
cld
xor
sub
dec
dec
in
mov
insb
add
cmc
push
and
dec
xchg
jns
movsb
cmp
lcall
and
in
and
ja
inc
add
xchg
and
sbb
ds
cmp
shrl
repz
jbe
adc
cwtl
das
adc
xchg
sub
mov
arpl
aam
mov
shlb
fdiv
mov
sub
adc
mov
lds
rorb
and
push
push
ja
std
test
mov
cmpsl
leave
test
sti
enter
sbb
cmp
lds
rcrl
jecxz
mov
roll
repnz
and
cltd
gs
mov
pop
repz
or
cmp
push
nop
pop
cltd
xor
scas
mov
loope
mov
ss
insl
xor
shrb
push
hlt
mov
test
test
cs
xor
sub
sub
orl
loope
lahf
insb
add
hlt
push
and
inc
test
js
movsb
cmp
cltd
pop
lret
in
ret
in
in
pop
inc
loopne
jae
add
xchg
and
sbb
ds
cmp
shrl
pop
repz
mov
mov
fstpl
sub
dec
bound
aam
mov
shlb
xlat
repnz
sub
test
adc
mov
lds
iret
dec
jecxz
and
fists
push
push
jbe
std
cmpsl
je
pop
cmpsb
enter
cmpsb
cmp
dec
sbb
pop
dec
outsb
rcrl
jecxz
lahf
rcr
repz
icebp
adc
xchg
inc
adc
mov
addr16
cwtl
fs
mov
pop
repz
pop
lock
jnp
cmp
push
pop
cltd
xor
scas
mov
loopne
mov
xor
push
shrb
push
hlt
mov
cmpsl
adc
sub
dec
sub
orb
mov
insb
add
repz
and
xchg
ja
movsb
cmp
cwtl
pop
lret
pop
push
in
in
push
inc
loopne
jb
add
lds
sbb
pop
in
aad
cmp
shrl
pop
repz
mov
fnsave
paddusb
sub
mov
popa
test
imul
mov
sub
test
adc
scas
jnp
lds
dec
jecxz
and
push
and
push
je
std
movsl
jae
and
cmpsl
ds
sbb
pop
dec
insb
rcrl
in
sahf
mov
add
inc
adc
mov
xchg
arpl
xchg
mov
shr
mov
hlt
out
pop
lock
jl
cmp
push
lea
xor
mov
dec
xor
xlat
outsb
xor
xchg
mov
cmpsb
adc
sub
xor
sub
ret
jle
dec
out
lahf
dec
loope
popf
insl
add
icebp
push
and
inc
xchg
jbe
movsb
cmp
xchg
pop
leave
ljmp
sbb
add
ret
nop
and
adc
aaa
cmp
push
mov
mov
or
das
xchg
sub
mov
pusha
xorb
mov
shlb
aad
mov
sub
test
adc
lods
jp
stos
into
sub
dec
dec
in
and
push
push
insb
add
addr16
mov
les
aas
notb
movsb
cmp
pop
dec
push
pop
pushf
push
jl
mov
add
inc
mov
inc
arpl
xlat
xchg
mov
shl
mov
cmc
in
pop
icebp
cmp
js
mov
xor
stos
mov
dec
xor
xlat
outsb
xor
imul
movsl
adc
sub
xor
sub
jge
dec
out
sahf
dec
loope
pushf
insl
add
lock
and
inc
xchg
jne
movsb
cmp
xchg
pop
enter
sbb
in
sbb
loopne
outsl
cmp
xchg
ret
mov
adc
aas
adc
cmp
addr16
hlt
mov
mov
fidivl
or
cltd
xor
xchg
sub
mov
pop
xorl
addr16
aam
mov
sub
test
adc
lods
jns
stos
int
sar
dec
in
pop
dec
loopne
sbb
addr16
mov
ret
test
push
movsb
cmp
pop
dec
imul
jl
mov
add
inc
push
and
xchg
pusha
inc
xlat
xchg
mov
shl
mov
cmc
jecxz
pop
icebp
aaa
add
adc
pop
js
mov
xor
stos
mov
dec
xor
xlat
outsb
xor
imul
adc
sub
xor
sub
ret
jl
dec
out
popf
dec
loope
fwait
insl
add
out
push
and
inc
xchg
je
movsb
cmp
xchg
pop
call
in
sbb
ja
cmp
lcall
and
adc
aas
adc
pop
hlt
xchg
mov
fnstenv
or
cltd
xor
sub
mov
pop
xorb
mov
shlb
shl
mov
adc
stos
js
test
lret
sti
push
dec
loopne
sbb
add
addr16
mov
ret
hlt
ret
hlt
adc
pop
inc
push
in
lcall
lcall
and
xchg
pop
inc
xlat
nop
mov
shl
mov
cmc
loop
pop
icebp
add
xor
push
fwait
xor
test
mov
das
std
xlat
outsb
das
push
shrb
push
cmc
mov
mov
push
movsl
sub
xor
daa
dec
sub
jnp
dec
out
pushf
dec
loope
lcall
pop
out
mov
and
sbb
jae
movsb
cmp
xchg
pop
out
pop
sbb
in
sbb
loopne
insl
cmp
lcall
and
adc
aas
adc
shll
pop
hlt
arpl
jnp
mov
jbe
or
cltd
xor
sub
sub
mov
pop
jg
dec
mov
aad
mov
shlb
shl
mov
out
test
adc
stos
ja
test
sub
cld
leave
dec
in
sbb
insb
add
addr16
mov
roll
repz
cmp
pop
inc
addr16
addr16
cltd
mov
add
aas
or
mov
xchg
pop
inc
xlat
mov
shl
mov
cmc
loope
pop
icebp
xor
push
js
mov
xor
test
push
mov
cs
xlat
outsb
cs
shrb
dec
cmc
mov
mov
push
movsl
daa
cmc
xor
es
sub
jp
dec
out
fwait
dec
loope
cltd
insl
add
in
push
and
inc
xchg
jb
movsb
cmp
xchg
pop
vcmpss
in
sbb
loopne
insb
cmp
lcall
and
adc
aas
adc
cmp
xor
bound
jnp
mov
jbe
or
cltd
xor
sub
pop
jle
dec
mov
aad
scas
rcl
addr16
repz
and
adc
test
lret
sti
enter
sbb
loopne
sbb
outsb
addr16
lahf
insl
mov
lahf
rolb
repnz
inc
retw
in
cwtl
mov
add
or
mov
nop
pop
inc
xlat
mov
pop
cmc
loopne
pop
icebp
xor
jge
xor
ja
test
sub
fsincos
mov
sub
dec
shrb
dec
cmc
mov
mov
push
movsl
es
xor
and
inc
dec
out
lcall
lret
lcall
aas
xchg
jno
movsb
mov
dec
pop
outsl
movsb
xor
cmp
jo
pop
xchg
mov
ljmp
mov
clc
daa
test
push
adc
or
jbe
or
dec
add
leave
ljmp
in
jne
rolb
pop
and
int
sbb
pop
cmp
int3
ja
push
or
push
or
ss
or
xlat
mov
popl
lds
adc
xor
lahf
and
sub
or
and
popf
mov
subb
out
pop
jp
fwait
or
ret
xor
jl
insb
jae
fsubs
xchg
inc
ds
xchg
in
outsl
push
add
jmp
cmp
push
sub
jle
dec
jmp
mov
out
outsb
mov
loopne
jae
xchg
dec
adc
popa
push
mov
and
pop
sub
into
mov
cmp
cs
leave
adc
lcall
sub
rol
cmc
aam
sbb
sbb
fstp
aad
mov
popf
mov
xchg
dec
loop
push
adc
and
push
cltd
inc
fs
ret
std
pinsrw
jbe
adc
mov
or
cmp
jle
cmpsb
jnp
stos
xchg
mov
das
fmull
inc
repz
jle
das
out
je
jae
dec
add
sub
xchg
mov
mov
imul
jle
dec
arpl
ljmp
and
out
mov
mov
and
jl
push
xor
fwait
pop
mov
mov
imul
mov
sbb
sbbl
stos
cs
sbb
cmp
mov
xchg
cmpsb
fstl
mov
dec
push
fwait
clc
insb
lahf
push
and
dec
dec
icebp
repz
sub
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
loopne
mov
mov
dec
movsl
jp
cmp
test
sti
push
sub
dec
aad
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
fistps
and
fldcw
mov
les
aaa
int3
hlt
jl
inc
dec
ret
cmpsb
dec
fs
negl
sub
loop
pop
push
