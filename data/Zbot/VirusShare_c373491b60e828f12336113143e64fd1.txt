fstl
and
cld
xor
je
dec
addr16
jecxz
stos
lahf
push
icebp
lahf
adc
shlb
pop
add
call
add
add
jbe
shr
ficompl
in
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
in
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
movsb
cmp
sbb
xchg
sti
test
sbb
cmpsl
out
jns
mov
scas
fs
ret
xchg
pop
out
cmp
scas
xchg
shll
adc
jns
jo
xor
add
rorl
lahf
mov
xchg
jmp
cmp
fldl
inc
mov
cmp
loopne
addl
notb
dec
pop
into
or
je
mov
adc
inc
jecxz
insb
dec
fiaddl
push
push
mov
sub
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
jns
jno
in
mov
pop
push
ret
cmp
stos
jo
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
jne
loop
int
loopne
dec
rcrb
mov
dec
jmp
in
cmp
push
lea
push
lea
push
subl
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
push
pop
xor
cmp
je
sub
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
jmp
mov
pop
ret
add
and
cmpsl
jp
push
lcall
dec
push
dec
mov
mov
xor
repnz
repnz
push
ja
sbb
mov
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
xchg
cmp
xchg
dec
lds
pop
push
mov
mov
enter
dec
js
mov
mov
int
fs
insl
lds
push
pop
cmp
nop
push
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
into
jmp
xor
int3
add
imul
in
pop
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
ljmp
out
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
jmp
ret
push
pop
push
pop
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
call
jmp
add
roll
scas
and
add
and
add
and
add
and
add
add
lods
and
add
and
add
add
add
and
add
and
add
add
and
add
add
call
and
add
add
add
and
add
add
push
and
add
and
add
and
add
and
add
add
push
and
add
add
and
add
and
add
add
add
add
cli
and
add
and
add
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
test
add
xor
add
add
add
and
add
and
add
and
add
and
add
add
lods
and
add
and
add
add
add
and
add
and
add
add
and
add
add
call
and
add
add
add
and
add
add
push
and
add
and
add
and
add
and
add
add
push
and
add
add
and
add
and
add
add
add
add
cli
and
add
and
add
add
add
add
lods
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
jae
inc
jbe
outsb
je
add
fs
outsl
outsb
jae
insb
gs
add
roll
dec
gs
jo
jb
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
jb
je
arpl
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
das
add
outsb
fs
je
insl
push
add
inc
gs
je
imul
push
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
insb
outsl
jae
dec
popa
outsb
fs
gs
add
je
jb
jbe
push
jns
gs
add
add
insb
jae
gs
popa
insb
jne
add
insb
jae
jb
outsb
inc
add
add
fs
imul
add
add
gs
inc
imul
gs
gs
jae
dec
jne
gs
add
gs
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
inc
gs
outsl
imul
jbe
jae
add
push
dec
inc
dec
xor
cs
insb
add
or
inc
push
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
inc
inc
inc
push
push
cs
insb
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
imul
jae
inc
outsl
jb
push
dec
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jnp
jl
stos
lods
stos
add
cmpsb
push
mov
mov
mov
ret
leave
lret
lret
lret
int
rcl
shr
rcl
shl
iret
iret
shl
into
into
int3
hlt
enter
enter
mov
in
mov
mov
stos
lods
stos
lea
cltd
cltd
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
lret
leave
not
rcl
cld
fcomp
fdivr
fcomp
xlat
fdivr
aam
aam
iret
rcl
dec
into
int3
aam
rcl
iret
inc
ret
ret
mov
mov
iret
movsb
movsb
mov
dec
das
das
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
scas
scas
sbb
mov
jnp
mov
sar
lret
leave
lret
call
rcl
xlat
call
xlat
fdivr
aad
dec
int3
into
dec
int3
int
aad
dec
int
inc
rol
mov
mov
scas
std
test
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
int3
call
rcl
fcomp
xlat
call
xlat
fdivr
aad
dec
into
into
dec
lret
lret
int
inc
mov
mov
mov
mov
test
cmpsl
jmp
fwait
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
push
bound
fs
ds
sbb
push
movntps
aaa
aaa
cmp
cmp
and
and
push
pop
push
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
leave
leave
call
rcl
call
aam
call
dec
iret
sar
leave
enter
mov
mov
ljmp
mov
pushf
cwtl
xchg
cwtl
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jo
jg
jl
jg
jge
jb
jb
arpl
mov
cmp
lea
inc
mov
outsb
outsb
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
lret
lret
leave
leave
leave
inc
mov
mov
lods
scas
scas
jmp
cltd
fwait
call
xchg
xchg
xchg
xchg
fwait
lcall
aas
ds
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jl
nop
lea
incb
jp
idivb
jnp
outsb
outsl
jo
data16
data16
je
jg
jle
js
jns
fs
inc
cmp
pop
pop
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
test
pushf
sahf
popf
call
xchg
incl
xchg
xchg
sahf
lahf
sahf
sti
mov
cwtl
xchg
mov
js
jns
cs
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
incl
mov
std
mov
jge
jb
jno
jne
je
jle
jle
addb
xchg
push
cmp
ss
cmp
movsb
movsb
movsl
shrb
stos
lods
sti
lods
lods
stos
lods
stos
stos
stos
stos
test
std
lcall
decl
jg
js
js
jl
jp
xchg
xchg
movsl
movsl
movsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
sbb
add
add
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
femms
xor
inc
dec
insl
imul
test
cltd
fwait
cltd
fistps
cltd
fwait
stc
nop
xchg
std
mov
mov
mov
mov
lea
cltd
jmp
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jl
or
add
add
pop
pop
adc
scas
call
fwait
xchg
cltd
incl
xchg
decb
xchg
xchg
popf
pushf
sahf
std
movsb
movsl
movsl
stc
mov
xchg
xchg
in
xchg
nop
in
test
push
jne
push
cmovp
add
inc
sub
sub
dec
dec
outsw
jo
test
xchg
xchg
rclb
xchg
std
lea
nop
call
lahf
sahf
jmp
cmpsl
stos
pushl
cmpsb
lods
mov
xchg
test
mov
xchg
scas
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
scas
mov
lcall
xchg
decl
xchg
call
xchg
xchg
sahf
popf
sahf
mov
stos
test
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
pop
bound
jo
jae
jnp
jg
test
mov
lea
xchg
testl
lea
jmp
lahf
pushl
push
mov
dec
mov
mov
sub
mov
movsb
mov
mov
mov
mov
mov
add
mov
pop
pusha
adc
mov
ljmp
pushf
decl
xchg
call
xchg
xchg
call
xchg
cwtl
lcall
mov
movsl
movsb
std
mov
cltd
cltd
out
nop
xchg
nop
xchg
xchg
les
cwtl
fwait
in
xchg
cwtl
out
lea
xchg
stc
xchg
xchg
std
xchg
je
lcall
jmp
inc
jl
mov
jns
mov
je
mov
outsl
ljmp
pcmpgtd
lods
or
lods
or
mov
jg
mov
mov
stos
pushf
movsb
movsb
movsl
and
add
add
pop
pusha
adc
mov
lcall
xchg
xchg
call
fwait
lcall
mov
sahf
call
xchg
cwtl
call
xchg
xchg
call
cltd
cld
xchg
cltd
popf
stc
sahf
lcall
pushf
mov
xchg
insb
mov
xchg
pop
jg
cwtl
dec
jp
lcall
sahf
push
imul
movsl
push
jmpw
adc
stos
pcmpgtw
lods
adc
scas
adc
mov
imul
mov
insb
mov
lcall
lods
scas
lods
scas
movsl
movsb
mov
add
add
add
add
add
pop
pop
adc
mov
ljmp
sahf
call
pushf
popf
lcall
movsb
movsb
jmp
mov
decl
mov
decl
mov
fwait
jno
lcall
call
sub
call
or
call
add
lcall
jmp
sbb
mov
outsb
pushl
outsl
mov
and
mov
and
mov
xchg
scas
mov
lods
scas
mov
lahf
lahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
shll
lcall
movsl
mov
jmp
stos
test
lcall
mov
mov
decl
cmp
xchg
popa
decl
adc
incl
push
push
incl
add
lea
pop
call
add
cltd
add
lahf
add
cmpsb
or
pushl
sub
mov
sub
shrb
inc
sub
sub
jg
xor
dec
scas
inc
mov
mov
mov
mov
mov
add
add
add
push
push
adc
test
ljmp
lahf
jmp
test
ljmp
lods
pushl
scas
lods
jmp
jb
incl
or
push
incl
add
addb
incl
add
mov
push
decl
pop
call
pop
lcall
add
ljmp
sub
inc
aaa
cmp
aaa
cmp
cmp
int3
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
test
mov
mov
mov
cmpsl
cmpsl
ljmp
mov
pushl
mov
mov
mov
stos
stos
lods
lcall
and
decl
adc
mov
pop
incl
pop
push
incl
add
lea
push
call
add
pushf
add
add
add
lods
add
jo
ret
dec
inc
dec
inc
call
inc
call
dec
nop
call
dec
xchg
call
dec
xchg
fimull
fmull
fistl
call
test
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
jl
movsl
popf
mov
jmp
stos
test
pushl
mov
pushl
mov
mov
movsb
xchg
decl
pusha
call
adc
decl
or
mov
push
call
add
popf
add
mov
add
test
popa
pushl
and
mov
push
xchg
fcoms
fistl
fstl
fistps
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
lahf
lahf
or
xchg
xchg
xchg
add
inc
adc
jns
sahf
lcall
lahf
cltd
popf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jbe
nop
pop
call
and
xchg
pop
call
or
call
add
fwait
add
mov
add
stos
add
mov
data16
mov
xor
fstps
fbld
jmp
mov
jmp
cmpsb
jmp
cmpsw
ljmp
ljmp
dec
mov
mov
mov
lahf
mov
add
add
add
inc
inc
adc
jb
lcall
jmp
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
fwait
das
outsl
lcall
daa
push
xchg
sbb
pop
call
add
mov
add
lods
add
mov
pushw
adc
roll
jmp
outsl
lods
jmp
jo
call
jb
jmp
mov
in
je
out
jbe
out
je
out
jb
jmp
mov
mov
cmpsl
cmpsb
lcall
mov
add
add
add
jge
cmp
imul
lea
lcall
mov
pushl
mov
mov
mov
mov
lods
lcall
xor
mov
cmp
xor
lcall
call
add
mov
add
mov
arpl
mov
fs
mov
sbb
ficoml
jecxz
mov
call
jg
jmp
mov
push
cmpl
xrelease
push
cmpb
aam
mov
test
daa
sahf
mov
mov
add
add
xor
push
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
inc
ret
ret
mov
lcall
cmp
movsb
inc
jl
movsb
inc
jg
mov
sbb
xchg
add
pushf
add
add
add
scas
add
mov
gs
mov
add
shlb
cmp
movsb
call
mov
push
mov
push
xchg
ret
push
xchg
push
nop
ret
clc
xchg
pop
in
pop
fnstenv
clc
stos
lods
stos
mov
popf
pushf
xor
pushf
sahf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
inc
mov
mov
jle
lcall
dec
jg
lods
dec
test
movsb
xor
pusha
lcall
add
cmpsl
add
lods
add
mov
arpl
mov
add
enter
xlat
xor
out
xchg
push
fwait
push
cltd
push
lcall
negl
lret
lahf
into
sti
popf
int
cli
cwtl
leave
push
xchg
ret
mov
dec
mov
shlb
popl
fwait
lcall
xor
xor
or
cmp
outsb
dec
dec
dec
jecxz
pop
popa
call
mov
mov
mov
sar
inc
enter
sar
mov
ljmp
dec
mov
mov
or
sahf
add
mov
add
mov
popa
mov
add
enter
rorl
fiadds
out
mov
push
cmpsb
int
mulb
into
sti
test
sar
cli
test
stos
iret
std
stos
iret
cld
test
push
sahf
jmp
mov
lret
std
mov
mov
mov
xchg
xchg
add
fwait
cltd
add
add
add
xor
or
bound
push
xlat
je
jb
mov
rol
rol
mov
ret
dec
enter
pushl
push
xchg
scas
push
mov
scas
dec
test
lahf
sbb
lcall
add
add
mov
fs
mov
add
into
add
xlat
add
loopne
jl
out
pop
test
negb
aam
cld
scas
aad
sti
mov
cli
scas
sar
mov
std
mov
std
mov
cld
mov
std
mov
mov
push
movsb
jmp
mov
dec
leave
int3
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
outsl
outsb
jo
cltd
lcall
aad
xlat
jmp
fcom
test
into
int3
dec
leave
leave
dec
lret
lret
leave
leave
inc
leave
leave
mov
lods
ljmp
push
mov
lods
cmp
jmp
add
mov
arpl
mov
add
iret
add
add
fiadds
jae
ljmp
cld
scas
aam
cld
mov
std
mov
fdivr
mov
cld
mov
xlat
std
rcr
mov
int3
jmp
mov
call
lret
into
mov
sahf
mov
or
add
add
xor
add
add
pop
or
leave
movl
ljmp
loop
loop
fucom
fcmovu
fcomi
fcomp
fsqrt
aad
xlat
std
into
iret
sar
mov
imul
jmp
add
mov
arpl
mov
add
lret
call
add
fldl
jne
in
js
out
xor
sti
mov
loopne
inc
loopne
std
std
fdivrp
inc
inc
loopne
inc
inc
dec
fdivrp
dec
sti
mov
leave
call
lret
sar
mov
mov
xchg
adc
add
add
incb
incl
std
std
add
div
or
in
jmp
jmp
out
sub
in
in
dec
ljmp
xchg
call
out
aad
fcmovnu
jmp
mov
xchg
test
jns
movsb
adc
jmp
pusha
pushl
imul
int3
add
add
filds
jbe
jmp
inc
popf
sti
mov
jecxz
dec
jecxz
dec
in
dec
in
dec
in
dec
jecxz
std
int3
loope
shl
call
jecxz
call
in
shl
sti
ret
in
mov
fdivr
ret
test
mov
xchg
cwtl
add
add
add
incl
std
std
add
clc
clc
add
repz
repz
out
icebp
out
pop
out
icebp
icebp
cmp
in
in
pop
loope
les
xchg
sti
lahf
and
lcall
add
add
mov
gs
add
enter
roll
jno
flds
je
jecxz
jns
in
push
pop
stos
sti
mov
std
shl
cld
shl
shl
shl
std
shl
call
out
fsub
std
xlat
jmp
fucomi
dec
loope
hlt
ret
in
fcos
lret
lret
stos
test
xchg
and
xchg
xchg
add
std
cld
add
testl
repz
cmc
or
shlb
mov
jae
negb
add
test
pop
ljmp
add
ret
dec
add
add
faddl
jne
call
sbb
cli
cld
fld1
fucomi
std
std
std
fldl2t
fsubr
fsubr
fsubr
fucomip
fsubrp
std
fsubrp
cld
shl
push
call
rcl
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsl
outsl
outsl
add
add
add
loope
add
enter
mov
cwtl
repnz
and
mov
add
mov
popa
mov
add
into
add
aad
jb
fiadds
je
jmp
sub
shl
jmp
lock
fsubr
fldpi
std
call
shl
cld
shl
cli
shl
stc
iret
test
aad
out
mov
jmp
rcr
fcomp
fdivr
mov
mov
lcall
add
add
add
fcom
add
enter
mov
sahf
jmp
sub
sahf
add
stos
add
mov
mov
add
roll
outsb
fadds
je
loopne
js
call
aaa
xchg
cld
xchg
cli
leave
loopne
cld
int3
loop
cli
clc
mov
aam
repz
into
push
mov
into
call
mov
sar
call
call
loopne
in
mov
mov
xchg
add
add
add
lret
add
mov
cmpsb
loopne
xor
pop
ljmp
add
mov
add
int
jo
rorl
je
fsts
js
loopne
cmp
inc
xchg
call
scas
lret
call
scas
enter
scas
ret
mov
neg
mov
leave
ljmp
into
iret
aad
loopne
fcmovb
call
in
test
out
out
popf
call
leave
leave
push
stos
stos
lods
adc
cmpsb
cmpsb
cmpsl
add
ret
ret
popf
lods
aam
dec
jg
popf
sbb
cmpsl
sbb
jno
mov
ja
mov
inc
xchg
ret
push
mov
lret
test
mov
shll
rcl
mov
lret
rcl
lret
mov
into
shlb
xlat
rcl
jg
fcmovu
jb
gs
in
out
jmp
xor
div
mulb
repnz
or
mov
int3
add
add
add
sarb
mov
test
lock
jbe
ljmp
mov
sarb
mov
ret
cmpsl
enter
lret
ror
int3
lret
ror
iret
addr16
rcll
rcl
dec
aam
inc
rcr
xor
fcmovu
daa
fcomp
fistpl
fcmovu
fcoml
fsub
loop
fucomip
jecxz
call
icebp
out
add
sti
testl
incb
std
add
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
rcll
lds
mov
daa
int3
ror
and
aam
iret
aad
adc
aad
or
xlat
aam
aam
xlat
add
fcmovnu
add
loopne
add
in
add
in
jmp
leave
add
incb
mov
mov
add
ret
ret
vmovaps
mov
mov
push
ret
or
leave
movb
enter
into
leave
add
aad
add
aad
rcr
aam
aad
aam
aad
xlat
add
fsub
add
aad
add
loop
add
fstp
add
out
add
lock
add
incb
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
les
mov
mov
mov
test
test
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
ror
into
jmp
aam
cmc
aam
aam
ror
iret
cli
lret
int3
lret
stc
lret
hlt
mov
mov
stos
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
into
aad
aad
xlat
aad
call
rcl
dec
iret
iret
dec
int3
int3
inc
mov
mov
icebp
xchg
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
jne
jae
data16
inc
inc
dec
cmp
sub
sub
aaa
xor
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
ret
lret
lret
lret
call
rcl
call
aam
dec
lret
lret
rol
pushl
test
sahf
lahf
sahf
cwtl
cwtl
xchg
jmp
jo
xchg
push
adc
add
add
add
add
add
addb
addl
aam
imul
pop
pop
movsb
push
push
push
stos
push
insl
insl
push
pop
pop
cmp
cmp
pop
jo
jno
scas
mov
pop
mov
mov
mov
mov
mov
rol
mov
mov
mov
test
fwait
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
fwait
cltd
fwait
add
fwait
xchg
cltd
fcoml
addb
jge
jnp
jp
js
jp
jnp
jp
jnp
jb
je
push
push
push
cmp
jae
sahf
popf
sahf
mov
scas
lods
repz
scas
scas
sti
scas
lods
lods
std
cmpsl
test
popf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsb
cmpsb
cmpsb
cltd
jb
jae
adc
adc
add
add
add
add
outsl
insl
outsb
pop
mov
loop
cltd
sahf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsl
outsl
orl
lcall
mov
call
sahf
lahf
ljmp
stos
scas
std
mov
mov
stc
mov
mov
movsl
mov
addl
add
add
pusha
popa
pusha
or
scas
mov
cmpsl
lahf
mov
decl
mov
xchg
xchg
cwtl
std
popf
sahf
mov
negl
addb
push
push
pop
outsl
imul
jge
subb
nop
xchg
lock
mov
lcall
mov
pushl
pop
mov
mov
jnp
mov
lods
stos
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
xchg
lcall
cltd
fwait
cltd
pushf
pushf
pushf
lahf
popf
cli
xchg
xchg
xchg
jmp
xchg
lea
nop
orl
cld
xchg
pop
jg
popf
dec
jl
movsb
inc
js
lods
aaa
js
mov
jae
scas
push
outsl
ljmp
sbb
pop
mov
mov
scas
scas
jle
movsl
movsb
push
pop
pop
popa
or
mov
in
movsl
test
lcall
mov
mov
decl
addb
xchg
jno
cld
xchg
popa
cmp
dec
jns
xchg
cmp
nop
daa
push
call
or
ljmp
pushl
sbb
mov
and
rcrb
mov
scas
lods
xchg
popf
sahf
sahf
adc
add
add
pusha
popa
pusha
or
stos
mov
test
mov
cmpsl
ljmp
cmpsl
test
lcall
decl
sub
push
pusha
incl
or
mov
call
add
cmpsl
or
jae
mov
sub
jle
xor
dec
pop
xchg
inc
stos
mov
mov
scas
movsb
test
add
add
add
add
pop
or
movsb
test
ljmp
scas
scas
pushl
mov
jmp
inc
jb
mov
pop
decl
or
push
push
decl
add
xchg
add
sahf
add
cmpsl
add
mov
insl
inc
cmp
iret
inc
mov
aam
call
inc
xchg
fmuls
call
arpl
stc
mov
mov
movsb
movsl
mov
add
add
add
pop
or
lahf
mov
ljmp
mov
mov
mov
mov
mov
jl
push
arpl
xchg
sbb
decl
or
push
call
pop
jmp
add
jbe
rorl
fcoms
ficompl
fistps
loop
mov
fildll
dec
test
cld
mov
mov
cmpsb
stos
movsl
xor
add
add
dec
pop
jl
jp
popf
xchg
lcall
scas
scas
pushl
mov
mov
lcall
sub
insb
call
subps
xchg
add
popf
add
add
mov
arpl
mov
xor
jmp
insb
test
out
lods
call
jno
out
jb
call
test
std
mov
cmpsl
test
cmpl
add
dec
pop
insl
outsl
imul
test
cltd
cwtl
cwtl
pushl
mov
mov
mov
jbe
lcall
cmp
popf
sub
cwtl
or
fwait
add
movsl
add
lods
add
mov
gs
or
call
inc
xchg
jmp
js
jmp
mov
push
test
push
mov
fisubrl
mov
push
cltd
lcall
sub
push
push
push
dec
pop
pushw
mov
mov
rol
ret
ret
mov
xchg
jmp
sub
cltd
push
pop
jmp
add
mov
gs
mov
adc
jmp
popa
mov
push
xchg
push
xchg
push
cltd
enter
enter
leave
push
cwtl
jmp
lods
inc
mov
lods
popa
mov
add
add
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
xchg
test
ljmp
and
add
test
add
mov
add
fisubl
cmp
hlt
movsb
int3
clc
test
iret
cli
test
iret
std
stos
sar
sti
test
jmp
mov
inc
rol
stos
stos
test
or
add
add
dec
dec
dec
aaa
jb
je
stos
stos
stos
ror
into
int3
out
into
int
lret
sti
leave
leave
enter
enter
mov
stos
bound
mov
add
mov
fs
add
iret
add
fildl
xchg
push
xchg
sti
mov
mov
xlat
std
mov
xlat
mov
sar
jmp
ret
scas
lods
lods
mov
add
add
add
add
pop
or
aam
dec
loope
loop
fsubp
loopne
fcmovnu
fadd
fcmovu
aam
out
shlb
cmpsl
sub
pusha
ljmp
add
enter
xlat
add
loop
jl
icebp
push
mov
std
inc
loopne
inc
loopne
std
leave
std
enter
lret
loopne
sti
out
mov
leave
divb
popf
pushf
sbb
add
add
std
incl
std
add
jmp
or
out
in
sbb
in
in
xor
loop
jecxz
mov
mov
mov
add
pushl
add
iret
add
fldl
jbe
ljmp
sti
cld
shl
std
shl
call
in
aam
call
out
fsubr
std
aam
push
enter
int3
sar
mov
mov
add
std
add
incb
cld
cld
pop
aam
mov
pop
xchg
popf
or
pusha
pushl
add
rolb
outsl
jmp
add
in
and
cld
shl
std
fldl2e
fucompp
cld
xlat
out
cld
fsubr
sti
xlat
out
xlat
call
push
enter
rcl
sti
mov
lahf
lahf
das
add
add
int
int3
or
bound
ljmp
add
movl
jno
loop
jns
out
xor
cli
int3
loop
cli
lret
test
bnd
std
out
ret
sar
in
sar
out
ljmp
ljmp
stos
das
std
incl
aam
push
mov
je
or
insb
inc
sbb
int3
and
xlat
sub
sti
loopne
fwait
clc
jecxz
mov
out
jecxz
leave
jmp
fidivrs
leave
fmulp
sarb
jecxz
fcompl
out
out
jns
rcl
dec
mov
add
add
mov
inc
mov
mov
ljmp
nop
fidivrl
jg
rol
stos
mov
mov
ret
nop
aam
jge
int
aad
iret
pop
ror
rorb
fcom
cmp
fnstsw
das
jecxz
fisubs
loop
repnz
jmp
or
std
incb
std
incl
mov
mov
outsb
scas
mov
scas
data16
mov
mov
mov
xor
enter
rcl
pop
rol
adc
rcl
or
loope
or
into
int3
add
std
incl
std
incb
fwait
fwait
lcall
mov
rol
or
into
int
stos
stos
lods
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
cltd
add
rol
mov
xchg
mov
mov
rol
mov
scas
mov
lods
lods
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
std
rcl
sar
into
iret
into
std
mov
mov
roll
pop
add
add
add
add
add
add
add
add
jae
jb
push
inc
inc
das
cs
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
into
int3
call
aad
dec
iret
into
dec
mov
mov
scas
scas
jmp
mov
push
add
add
add
add
jne
je
xchg
aad
outsl
outsl
ret
arpl
insl
insl
insl
jb
pusha
bound
pusha
pusha
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cltd
cwtl
lds
jb
daa
and
add
add
add
jb
jb
popf
xchg
fwait
mov
test
mov
xchg
test
addl
push
push
push
inc
mov
pushf
into
mov
mov
xchg
decb
lcall
lods
cld
mov
mov
ret
xchg
aas
sub
push
add
add
xorl
cmpsl
stos
mov
mov
lea
xchg
cld
pushf
pushf
pushf
cmc
cwtl
cltd
cwtl
in
addl
imul
jg
lea
xchg
testl
xchg
mov
jo
mov
scas
lods
push
lods
stos
stos
add
add
add
test
test
xchg
xchg
xchg
lcall
fwait
fwait
lcall
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
xchg
arpl
std
pushf
inc
jne
cmpsl
ss
scas
sub
pushl
sbb
ss
mov
mov
imul
int
add
add
xchg
pop
scas
movsl
stos
test
lahf
pushf
sahf
jmp
movsl
movsl
call
push
decl
je
mov
imul
xchg
adc
xchg
or
mov
sbb
pushl
es
shrl
inc
ds
rcrb
subl
jne
push
movsb
popf
mov
cld
test
cmpsl
pushl
mov
lcall
sub
mov
pop
decl
add
mov
push
call
add
adc
ret
dec
inc
mov
roll
call
inc
call
dec
xchg
dec
lcall
mov
add
add
push
cwtl
xchg
xchg
test
mov
scas
pushl
mov
movsl
call
sbb
pop
decl
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
pop
mov
call
lcall
test
test
add
add
popa
bound
mov
lcall
mov
mov
lcall
xor
cwtl
and
xchg
or
mov
add
mov
xor
jmp
jp
push
jge
out
jg
fistpl
mov
and
add
add
adc
imul
mov
mov
mov
ret
mov
arpl
lcall
add
cmpsl
add
mov
gs
or
fisttpl
out
mov
push
xchg
push
xchg
enter
jmp
cmpsb
mov
movsb
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
mov
xchg
ljmp
sbb
cmpsb
add
mov
fs
add
aad
jns
ljmp
cli
lods
sar
cli
lods
sar
cld
scas
sar
scas
iret
in
mov
inc
mov
movsb
ds
incl
xor
xor
scas
mov
mov
mov
aad
aam
out
lret
cli
mov
mov
jmp
add
add
add
out
xchg
testl
inc
std
ret
fdivr
inc
lock
ret
test
addb
add
add
in
jmp
call
jmp
in
fcmovu
fisubl
movsl
outsl
ljmp
add
lret
fldl
out
cmp
dec
in
call
in
shl
std
shl
std
shl
push
leave
fcos
aam
into
in
lods
lods
scas
popa
jg
addl
add
add
std
incl
incl
int
shrl
sahf
sbb
lods
add
mov
add
loope
js
hlt
push
cmpsl
inc
loop
xlat
jmp
std
aad
sti
shl
cli
shl
push
leave
fsin
fmul
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
scas
add
insb
dec
or
cmp
insl
lods
cld
out
mov
shl
call
ror
call
leave
aam
call
scas
ret
lds
lcall
mov
sahf
stos
xchg
and
push
mov
ret
int3
lret
ja
mov
fdivrs
adc
into
outsl
xlat
int3
into
pop
aad
in
fistpll
out
out
in
out
out
sbb
mov
mov
lods
arpl
mov
les
les
ret
ret
int
fstp
fisttpll
into
into
into
or
aad
push
std
add
addl
lods
incl
sarl
add
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
pop
adc
sub
cmpsb
addr16
push
call
jmp
imul
jle
into
xchg
cmp
mov
rcrl
stos
divb
pop
pop
sbb
fisubs
es
push
mov
outsb
loop
mov
movsb
es
push
and
jb
inc
push
pop
outsb
xor
adcb
pop
pop
shrl
ljmp
les
dec
fadd
xchg
dec
xchg
stos
sub
in
lock
mov
dec
rcll
loope
lods
imul
ret
movsb
sub
jge
sub
mov
sbb
mov
adc
mov
sub
pusha
pop
add
adc
inc
cltd
inc
fsubl
cmp
xor
int
and
in
mov
xchg
mov
or
out
mov
and
daa
aas
xor
jne
das
sub
xor
lret
iret
dec
outsb
push
mov
dec
sbb
mov
dec
aaa
jp
or
test
jmp
lods
ss
fildl
push
insb
cmc
mov
idivb
mov
rcrl
jbe
and
jae
loope
test
hlt
mov
sub
mov
or
bound
jmp
pop
mov
or
push
aas
cmpsl
jp
scas
inc
pop
sub
arpl
test
nop
push
jl
pop
repnz
arpl
call
jge
push
std
loopne
ljmp
xor
daa
adc
shll
out
negb
or
cltd
mov
lods
xchg
popa
dec
fstl
jne
das
insb
jno
sub
xchg
mov
aad
filds
xor
pop
cltd
inc
or
enter
or
mov
mov
mov
or
sub
subl
inc
push
jg
addr16
lods
and
lcall
cmp
rolb
int
sub
inc
or
mov
pushf
inc
aas
mov
xor
jl
pop
mov
imul
jge
leave
mov
sti
pop
inc
scas
insb
jmp
pushf
in
insb
cli
inc
lods
push
jecxz
out
mov
loope
cltd
jl
aad
ljmp
push
inc
jmp
das
jo
iret
stos
sub
pop
xchg
jge
inc
fwait
scas
xchg
ret
loop
daa
jns
add
adc
outsl
bound
or
int
mov
loopne
stos
aam
jb
mov
icebp
mov
mov
data16
inc
mov
mov
cmp
inc
push
imul
mov
movlps
mov
ja
addr16
adc
xchg
rcll
lods
insb
fdivs
repz
xchg
pusha
inc
cmpl
and
rol
xchg
push
xor
xor
mov
daa
leave
jnp
pushf
xchg
and
arpl
roll
mov
movsl
insl
in
jb
rolb
sti
sbb
or
mov
jle
sbb
jo
inc
inc
xchg
and
sub
mov
test
std
das
fidivl
and
jecxz
adc
test
into
mov
pop
ss
mov
fisubrs
dec
ds
test
and
dec
ret
sahf
push
mov
add
aad
in
and
inc
sar
movsl
lcall
ljmp
add
lods
inc
xchg
push
pusha
pop
and
pop
push
xor
andb
repnz
xchg
push
sbb
lods
adc
push
adc
and
mov
mov
or
in
sub
inc
xchg
cwtl
fldenv
sbb
mov
clc
push
in
sub
mov
xor
mov
ds
shll
and
popf
sahf
fidivs
pop
xor
xchg
or
lods
jle
mov
dec
and
dec
push
lock
and
popa
or
call
sbb
jnp
mov
ja
and
add
icebp
dec
xchg
sub
mov
fldln2
lret
sahf
rol
insl
add
cmp
pop
mov
mov
sub
xchg
aad
out
arpl
sub
sahf
mov
and
xchg
cmp
scas
xchg
lds
inc
inc
cmp
movsl
mov
jp
fs
jge
out
fwait
sbb
sbb
mov
sub
cmc
lods
mov
jge
and
sub
push
hlt
jo
jne
popa
int
xor
inc
jl
mov
movsl
out
js
cmp
xlat
popa
mov
pop
mov
mov
pop
xor
rorl
add
adc
fstl
pop
jno
cld
call
inc
fwait
test
add
pop
lret
cmovae
push
js
pop
xor
and
add
sbb
mov
cs
xor
jle
pop
lock
sub
outsb
push
gs
adc
pop
aad
xchg
mov
dec
and
lret
sub
pop
jmp
lods
inc
cwtl
or
jl
mov
add
cmp
pop
push
popf
popl
inc
fidivrl
mov
mov
mov
inc
fdivs
stos
sbbb
push
gs
xchg
mov
and
inc
mov
cmp
loopne
int
scas
dec
cwtl
cmc
sbb
xchg
mov
inc
test
mov
daa
stos
imul
lea
es
cmpl
inc
mov
popf
add
lea
push
negl
pop
xchg
and
inc
addr16
lcall
cmpl
sub
jg
orl
xchg
and
dec
aam
mov
jne
lea
stos
mov
loopne
cmpb
cmc
cmp
sbb
insb
lock
aad
add
pop
mov
inc
mov
cmp
adc
adc
mulb
bound
mov
int3
jge
xor
inc
mov
sahf
faddl
jl
sti
iret
roll
jge
dec
cmpsb
in
scas
sbb
jae
adc
mov
outsb
sub
lahf
cld
lcall
and
or
and
dec
pusha
push
xchg
pop
mov
sbb
mov
jle
and
cmpl
mov
leave
inc
push
xor
das
stos
dec
sub
adc
dec
loopne
pop
popa
divl
cmp
jno
sub
cmp
jle,pn
fistps
dec
sub
sbb
or
fnstsw
call
ljmp
inc
lods
cltd
sbbl
movsl
inc
insl
mov
mov
imul
loop
shrl
es
sbb
add
mov
sub
sarl
pop
mov
popf
cmp
or
cmc
sbb
cmp
or
cmp
xor
jnp
cmpsl
sbb
and
jp
fwait
aad
push
jl
push
add
pop
mov
sbb
jne
add
sbb
mov
enter
jl
shrl
sahf
aas
iret
cmp
mov
pop
hlt
and
jnp
je
sub
xor
mov
and
inc
fadds
or
stos
xchg
sub
pop
mov
leave
jnp
jge
scas
pushf
push
out
iret
fwait
xor
out
outsb
add
push
inc
mov
je
xlat
outsb
test
stos
inc
leave
cmc
mov
inc
fisttpll
stos
fs
lds
sbbb
cs
jecxz
push
mov
add
outsb
xchg
loopne
movsb
cmp
add
lea
adc
pop
inc
push
adc
fsubl
std
leave
inc
xlat
addr16
push
mov
mov
out
xchg
test
fsubl
movsb
xchg
std
pop
das
mov
imul
insb
inc
mov
sbb
loope
cmp
arpl
mov
in
mov
mov
std
lds
addr16
pop
mov
lea
cmpsl
loopne,pt
or
pop
xor
sub
push
mull
cmp
xchg
lods
inc
mov
lret
fsubp
sub
inc
and
jae
repnz
rclb
icebp
out
ja
adc
movb
insb
gs
in
lea
call
or
outsl
fs
test
lea
fcoms
stos
or
mov
pop
fadds
cmc
popa
fistpl
or
sarb
aam
loopne
pop
pop
fidivrl
addr16
addl
mov
test
adc
sub
fisubrl
enter
xchg
ss
hlt
pop
std
lfs
jno
push
xchg
push
sub
xor
orl
push
out
add
jae
pop
movsl
cmp
jge
mov
pushf
dec
ffreep
pop
adc
popf
xor
js
mov
call
inc
fcomps
adc
pop
mov
xor
jl
lock
or
push
add
jo
and
mov
je
dec
cmpsb
add
lods
xor
shrl
push
xor
xchg
lock
jmp
sahf
stc
jo
sub
sub
icebp
dec
mov
xor
jle
test
fsubrs
cmpsl
xchg
flds
mov
xchg
sub
cwtl
dec
in
or
add
add
outsl
rdmsr
leave
xor
jno
fists
or
cmp
imul
cmp
out
cmp
out
dec
bound
xchg
insb
add
push
jle
push
jo
pop
mov
xchg
adc
cmc
aas
and
sahf
xchg
data16
popf
mov
out
or
cmp
adc
pop
fwait
xor
and
insl
push
movsl
pop
popa
and
jno
clc
mov
es
cwtl
push
and
inc
sub
ficoml
or
aas
pop
jp
push
test
cmpsb
jb
hlt
arpl
xchg
sub
idivb
and
mov
adc
cmpl
filds
xchg
mov
loopne
pop
rolb
push
in
addr16
popf
push
xchg
js,pn
testb
pop
pushf
xor
pop
pop
mov
mov
mov
fs
or
push
arpl
lahf
jbe
mov
inc
mov
cli
pop
pop
testb
xchg
and
popl
fnstenv
adc
push
ss
out
inc
imul
push
or
mov
push
jle
xchg
mov
cld
or
fs
outsl
push
scas
mov
inc
and
lds
sub
xor
push
testl
pop
push
enter
outsb
adc
push
dec
sub
rclb
mov
ss
loop
insb
jle
cwtl
inc
data16
ss
rclb
jg
fs
jg
cmp
imul
dec
jo
pop
hlt
add
mov
push
and
outsl
xchg
dec
call
and
inc
lahf
cmp
xchg
push
xchg
sub
aam
pop
push
adc
jo
mov
or
xor
push
and
inc
xchg
dec
push
ljmp
mov
xlat
cmp
mov
data16
dec
out
lret
outsl
add
pusha
mov
jae
adcl
sub
push
xchg
pop
xchg
cmpsl
stc
nop
sbb
xchg
push
cmp
mov
dec
popf
xor
int3
jecxz
mov
fistpll
shll
cltd
xchg
repnz
call
imul
jbe
pop
scas
bound
inc
fsubs
cmp
loop
mov
push
call
aas
pusha
arpl
xchg
pusha
cli
xchg
push
or
mov
jae
pop
gs
fistps
pop
out
xor
imul
sbb
aas
mov
cmp
shrb
cmpsb
sub
fwait
xor
js
cmp
add
or
xchg
jle
xchg
sahf
jmp
adc
imul
mov
ret
xor
pusha
enter
xor
aam
fcmovnbe
shrb
std
outsl
push
out
stos
cld
xchg
ficoms
les
jg
fldcw
jo
jle
xchg
test
pop
dec
leave
addr16
mov
fcompl
mov
int
loop
out
pop
lock
xchg
sub
lea
leave
pusha
push
es
out
clc
jnp
idivl
cmp
int
aas
cmp
dec
jae
mov
lds
hlt
mov
fs
adc
stc
jmp
jl
mov
mov
sbb
cmpl
scas
and
iret
push
iret
adc
and
lds
cmc
adc
leave
pop
in
jns
mov
xchg
lcall
popa
sub
sbb
mov
jnp
add
movsl
popa
clc
shlb
lods
push
je
dec
scas
ja
sub
sbb
push
cld
fsub
jp
push
push
out
lods
rcrl
repnz
nop
xchg
roll
sbb
push
jno
dec
inc
mov
mov
addr16
in
push
js
xor
inc
and
js
xchg
in
add
inc
insl
xchg
inc
mov
xlat
dec
pop
fdivl
jmp
das
pop
aam
inc
add
bnd
ljmp
addb
mov
xchg
addr16
mov
mov
xchg
sub
cltd
dec
lds
repnz
testl
popa
aad
sbb
subl
ficoms
add
dec
mov
inc
sbb
mov
std
xchg
mov
loope
sbb
int
ret
add
mov
add
or
pop
mov
inc
mov
jl
push
mov
shr
mov
call
mov
push
fld1
push
in
fnstcw
sbb
popa
clc
jle
gs
jle
mov
cmp
mull
mov
movsl
in
cmp
inc
fdivs
fdivs
mov
inc
xchg
jb
dec
loopne
sbb
sbb
mov
dec
in
xor
arpl
mov
inc
xor
aas
int3
xor
aad
stc
nop
sub
fbstp
shlb
jae
insl
adc
cltd
daa
aas
cmp
imul
inc
stos
jmp
ljmp
or
je
xchg
data16
adc
stc
dec
mov
orb
clc
push
aam
cld
in
add
mov
cs
nop
xchg
jecxz
pop
aad
addr16
aas
mulb
out
or
jp
lahf
ss
mov
sbb
call
mov
test
mov
jns
mov
mov
and
fdiv
xchg
sub
cli
es
ficompl
int3
jg
std
xchg
fsubs
pop
imulb
inc
xor
nop
mov
flds
sbb
test
jb
add
jno
jne
xchg
sbb
stos
and
push
xchg
inc
add
test
popa
dec
mov
mov
dec
jecxz
ja
jo
lret
popa
mov
cltd
subb
mov
push
sbb
sbb
js
push
cmp
mov
sub
push
out
ret
repz
dec
rcrb
cmpsl
ds
rclb
mov
dec
aaa
cltd
mov
or
insb
add
sub
stc
ljmp
aaa
mov
jne
add
mov
xor
xchg
sbb
divb
int
jmp
xlat
scas
mov
inc
xor
push
lods
decl
mov
adc
sub
repz
inc
pop
andl
daa
mov
nop
scas
jo
pop
lods
popf
push
adc
pop
stc
jge
inc
jo
pusha
mov
js
mov
stc
inc
into
cmp
test
mov
adc
xchg
dec
out
or
lahf
adcb
rorb
outsl
push
dec
sbb
mov
jmp
lea
lret
cmc
dec
mov
icebp
and
inc
jno
jne
pusha
xchg
loope
cld
shrl
mov
jnp
jge
jnp
xor
jae
push
mov
lahf
push
mov
dec
enter
pop
lock
movb
xchg
sub
xchg
pop
fnstsw
sub
in
add
bswap
movsl
mov
mov
in
xchg
orl
xor
mov
outsb
in
stos
jnp
lds
mov
mov
outsb
mov
inc
push
add
push
out
insb
inc
aam
dec
addl
nop
pushf
outsl
decl
std
scas
push
dec
outsb
mov
jae
fwait
orb
cmp
hlt
pop
dec
das
stos
and
in
cld
loopne
fisttps
ss
mov
test
stos
fwait
aaa
sbb
dec
add
aad
ljmp
mov
mov
inc
mov
f2xm1
sub
popa
clc
inc
orb
xchg
shrb
ret
popf
xor
and
loopne
or
cmpsl
ficoml
imul
jbe
lret
mov
or
mov
je
or
pusha
lcall
test
cmp
jo
fldt
pushf
dec
iret
jne
out
imul
or
dec
sbb
mov
in
arpl
jne
pop
icebp
in
sub
adc
rcl
xor
xchg
testl
in
gs
jp
jo
aaa
fwait
sbbl
pop
mov
and
push
jae
lret
xchg
fnsave
call
xchg
sbb
sbb
sub
inc
fnstcw
push
in
adc
jae
fs
jle
and
pushf
xor
inc
or
int
pop
jmp
jmp
mov
mulb
ret
sub
mov
pop
hlt
mov
adc
in
loope
enter
aam
lock
mov
rolb
in
test
inc
and
xor
xor
addr16
flds
xchg
add
int3
test
cmc
push
jne
push
pop
stos
jmp
sbb
pop
dec
fwait
sti
out
push
aas
sub
mov
bound
dec
jle
lcall
jge
or
xchg
daa
outsl
mov
adcb
mov
push
rolb
popf
add
and
push
add
fldenv
enter
test
jp
sbb
dec
sti
add
mov
sarl
rclb
jno
icebp
pop
repnz
lcall
lods
in
xchg
xchg
cs
ds
push
ljmp
jno
in
icebp
mov
add
xsha256
cmpsb
adc
inc
mov
arpl
xchg
mov
ljmp
out
pop
mov
mov
ficoml
popa
clc
out
pop
xor
int3
arpl
push
gs
test
lea
or
sub
mov
xchg
jns
cmpsb
cmp
int3
lcall
pop
in
mov
push
jno
mov
std
ret
xchg
inc
fadd
in
notb
cmp
xor
aaa
mov
pop
arpl
or
mov
test
repnz
push
dec
es
xor
in
pushf
addb
mov
adc
cs
jle
loop
ret
xor
nop
mov
outsb
cmp
sub
call
mov
inc
jmp
jge
add
xchg
jbe
mov
lea
sti
sbb
fwait
xchg
sub
push
push
pop
cmp
dec
xor
sahf
sub
fbstp
xchg
pop
test
adc
push
stos
mov
f2xm1
pusha
int3
mov
outsb
pop
lret
mov
adc
sub
adc
scas
or
arpl
adc
pusha
fistps
stos
popa
gs
ljmp
inc
inc
inc
out
or
jp
fisubs
stc
xchg
cmp
int3
loope
jle
scas
aaa
xchg
xor
shlb
or
adc
lods
add
mov
int3
cmp
xchg
lods
pusha
jg
mov
sub
jno
jb
loope
jecxz
mov
sub
dec
subb
dec
aad
pop
push
jo
push
mov
ret
cmpsb
ds
jp
xchg
stos
pop
les
leave
sbb
jns
sbb
add
mov
shll
popa
aas
aam
adc
repz
mov
jbe
jle
cmp
xchg
daa
xchg
in
insb
sbb
mov
les
xchg
adc
rcll
test
ss
test
popf
fnstenv
std
gs
adc
pop
mov
ficompl
sub
stc
and
fwait
xor
mov
shlb
mov
shr
fidivl
or
cmp
dec
out
sbb
adc
or
jecxz
lcall
mov
scas
and
mov
sbb
mov
sub
add
out
dec
loope
cmp
das
mov
pop
push
jo
enter
call
jno
loopne
sbb
outsb
and
ljmp
dec
imul
mov
icebp
sti
xchg
jecxz
mov
adc
insb
inc
ficomps
push
mov
ljmp
shrl
pop
pop
ljmpw
std
prefetch
xchg
inc
pop
sbb
nop
adc
outsl
xchg
nop
inc
pop
movsl
cmp
popa
sbbb
mov
insb
adc
lcall
cmp
add
pop
int
iret
in
push
sub
lods
inc
xchg
xchg
dec
out
mov
test
or
mov
test
lret
sti
mov
bndstx
icebp
mov
adcl
push
mov
sub
jo
lret
mov
in
ljmp
or
dec
mov
test
push
sbbl
ja
sti
xchg
in
shrl
pop
jle
cmp
sbb
sub
jp
xchg
xchg
lcall
jecxz
or
sbb
mov
add
cmpb
dec
rcrl
sahf
adc
adc
pop
lcall
jbe
mov
rol
fnsave
insb
add
lods
fnsave
pop
pushf
push
mov
dec
out
loop
mov
aad
dec
sahf
push
adc
jo
mov
repz
cs
es
call
imul
sub
sub
insl
mov
add
popa
cltd
arpl
incb
shlb
int
pop
pop
sahf
mov
xor
push
ror
mov
rcrl
lods
inc
out
icebp
fsub
or
pop
sub
je
mov
ret
pop
stc
sbb
add
xor
push
call
test
cmp
out
movsl
add
int
sub
jge
sub
and
pusha
neg
inc
sbb
mov
fists
out
adc
cmp
lds
pop
test
pop
pop
cmp
gs
nop
outsl
xchg
sbb
sub
mov
add
into
leave
cmp
loop
jg
adc
inc
dec
iret
iret
add
push
cmp
repnz
scas
je
adc
lds
out
test
shrb
add
lods
inc
xchg
jle
sbb
jae
mov
or
and
sub
pop
adc
lret
or
or
shlb
mov
cmp
or
popf
jns
test
ljmp
sub
mov
ret
add
gs
pop
rclb
xor
rorl
xor
adc
leave
or
and
sbb
sbb
sbb
xchg
out
and
imul
rolb
push
popa
aas
mov
xchg
and
push
lods
inc
ds
int
push
sub
xchg
mov
ret
mov
fbld
adc
ss
sahf
xchg
les
aad
imul
cs
sti
sub
test
scas
jns
jmp
fsubr
and
scas
sub
insl
dec
aas
jge
pop
out
mov
xor
mov
xchg
and
push
add
addr16
repz
sbb
mov
fcmovu
inc
pusha
dec
xchg
in
out
cwtl
ficoml
mov
jl
cmpsl
fdivl
jne
bound
pop
xorl
fisubrs
pop
aam
es
pusha
inc
into
jmp
xor
in
int
aas
int
fwait
push
xchg
cli
sbb
stc
nop
repz
mov
inc
inc
add
pop
xor
lods
add
mov
pop
or
into
push
shrb
adc
scas
lahf
mov
shrw
push
add
xchg
sub
push
push
icebp
push
mov
pop
icebp
inc
push
andb
cmp
mov
or
fwait
add
movsb
bound
and
sbb
jmp
movsb
outsb
lea
push
sbbl
dec
adc
pop
push
loopne
pusha
dec
push
add
in
jb
out
js
test
pop
mov
hlt
xchg
fstpt
sbb
xchg
dec
out
sti
push
call
lock
subl
xor
stos
xchg
leave
xor
div
dec
mov
and
int
mov
mov
sbbl
add
mov
add
sub
jl
sbb
jle
or
imul
pop
jecxz
aaa
pusha
movsb
jle
clc
clc
jg
xchg
mov
xchg
push
cli
gs
mov
pop
mov
adc
xchg
xor
mov
loop
cmp
cld
cmp
sub
pop
add
fnstcw
es
in
jne
dec
incb
cwtl
and
jo
cmpsb
scas
lcall
mov
aaa
mov
in
cmp
xchg
stc
nop
stc
out
sub
imul
pop
cmc
mov
movsb
ja
pop
and
fdivrp
xchg
movsl
scas
je
cmpsb
iret
xchg
das
mov
sub
push
nop
es
sub
mov
adc
or
add
sti
in
xor
mov
push
jecxz
inc
aas
ret
push
in
inc
push
sub
test
mov
pushf
mov
and
in
iret
data16
shll
dec
subb
adc
inc
outsl
sarb
xlat
ds
movb
mov
mov
jo
call
ret
and
hlt
std
dec
jne
mov
or
xchg
sub
push
push
inc
sbb
inc
aad
lea
mov
gs
outsl
adc
pusha
xchg
mov
movb
inc
loopne
jb
int
xsha1
cmpsb
or
cld
lea
adc
xchg
or
xchg
rcr
jns
out
filds
jecxz
jg
push
bound
ds
push
lcall
cmp
imul
stc
mov
add
adc
lods
mov
xorb
das
cmpsl
icebp
lds
cld
fiadds
movsb
lret
stos
jae
fildl
adc
test
stos
xchg
sub
and
cmp
sbb
lods
jl
ficomps
call
sbb
add
xchg
pop
imul
add
sub
lods
mov
pop
push
pop
pop
cli
lcall
pusha
lods
clc
fidivl
xchg
in
adc
stc
fpatan
ret
sti
cmpb
lea
loop
fs
ret
pop
ficoms
out
adc
andl
dec
pop
adcl
cmp
into
cmpsl
nop
mov
cwtl
ds
jmp
jl
test
lods
sbb
mov
mov
pop
scas
push
std
push
jmp
pop
lea
hlt
cmp
pop
mov
sbb
dec
jmp
cmpsb
mov
call
pop
sti
imul
mov
xor
jg
cmpb
and
mov
xlat
push
ja
jmp
xchg
xor
and
out
outsb
mov
out
mov
mov
idivb
inc
shr
fwait
gs
repz
pushl
sbb
pop
pop
mull
insb
push
out
rcl
inc
out
or
push
mov
lea
cmc
adc
ja
dec
or
push
adcl
lret
aam
icebp
inc
xlat
and
pop
jo
jmp
in
aaa
in
pop
mov
pop
pop
call
xchg
mov
repz
pop
lcall
ds
rclb
pusha
outsb
and
mov
dec
cmp
addl
imul
sti
in
or
pop
mov
les
jecxz
or
call
and
pop
pop
dec
lret
cli
ljmp
fidivrl
insl
rol
or
lds
sub
inc
add
or
inc
movl
subb
push
bound
mov
sbb
cltd
pop
stos
sti
or
xchg
mov
adc
xchg
lret
icebp
xlat
xchg
jle
hlt
and
shlb
push
cld
xchg
int3
nop
int
cmpsb
xchg
inc
in
fucomp
mov
pop
rolb
inc
mov
icebp
or
xchg
aaa
dec
inc
test
bound
jmp
xor
orb
dec
mov
call
pop
pop
jmp
xor
push
and
es
icebp
or
vprotb
imul
mov
rcll
sbb
inc
js
ret
mov
roll
fs
out
xor
sti
shlb
or
inc
xchg
or
cmpsb
or
test
jl
mov
xchg
cld
xchg
movl
push
test
es
fsubr
mov
shll
mov
push
shrb
enter
xchg
scas
add
mov
mov
lcall
gs
movsb
idivl
es
hlt
inc
ret
aas
xor
or
cmp
aad
sub
test
xor
outsl
sbb
pop
dec
pop
add
sahf
mov
xchg
outsl
adc
sub
add
sbb
and
pop
cmp
fstpl
cmpsb
das
inc
fs
xor
test
pop
mov
int
scas
xor
push
outsb
add
call
jbe
add
and
xor
mov
cmp
rclb
cmp
xchg
aas
xchg
outsl
xchg
leave
dec
cmp
enter
fisubrs
lahf
lock
leave
movsb
roll
lds
out
inc
movsl
sahf
xor
adc
jne
rcll
push
push
mov
imul
xor
xor
mov
dec
xor
icebp
add
jb
xor
jne
adc
push
jo
andl
push
js
int
xor
xchg
sub
add
rorb
push
push
inc
or
ficoms
xchg
xchg
xor
and
xor
or
dec
inc
push
adc
fs
pop
mov
popa
mov
push
jno
mov
test
dec
mov
xchg
das
mov
stos
xor
mov
les
iret
scas
mov
sbb
and
push
ret
adc
cmp
ss
mov
sbb
push
and
mov
cmpsb
out
push
sbb
xor
sbb
xor
mov
mov
add
push
test
mov
dec
sbb
inc
or
inc
pusha
xchg
push
mov
dec
aas
decl
pop
add
xchg
and
lea
inc
lods
and
push
cld
lret
pop
aas
fstpl
int3
pop
mov
dec
adc
adc
mov
inc
or
jg
push
sub
push
jae
mull
cmp
enter
mov
ljmp
js
cmp
iret
nop
pop
insb
xor
nop
xchg
mov
loopne
ljmp
dec
mov
jnp
divb
outsl
jmp
mov
outsb
iret
imul
in
pop
stc
jne
cli
or
xchg
cmp
iret
and
jae
push
bound
or
fbld
adc
mov
xchg
fstps
push
ja
stc
xor
push
pop
inc
dec
push
pusha
lahf
jp
inc
shrb
jo
xchg
aaa
repnz
imul
pop
dec
test
mov
sub
jp
sub
fcmove
pop
adc
cs
call
add
decb
insb
sahf
and
sub
push
cmpl
je
test
mov
lds
jg
sub
jnp
in
xor
push
mov
xchg
call
inc
mov
repz
insl
mov
in
dec
aam
dec
and
cld
mov
mov
xor
dec
in
je
push
hlt
inc
shlb
push
mov
fcomps
jl
into
or
jg
in
outsl
icebp
loopne
mov
or
dec
lea
pop
repnz
mov
add
in
lods
sbb
push
xchg
fimull
in
push
leave
scas
jle
jb
jle
cld
xchg
testb
cwtl
ret
jno
xor
cmp
pop
insl
xor
mov
adc
shrb
mov
push
cmp
push
cmpsl
xor
popa
jmp
sbb
jl
add
pop
leave
sbb
fcompl
jo
xchg
dec
or
pop
icebp
clc
cmp
lea
mov
jle
push
or
imul
stc
scas
pop
adc
movsb
ret
mov
pop
mov
or
inc
movsl
test
lret
push
movb
ds
lret
sub
fwait
add
lret
aaa
fs
push
sub
fistl
xchg
sub
stos
out
xchg
mov
jno
in
sbb
lret
add
mov
dec
xchg
and
jmp
inc
jns
adc
cmp
mov
sbb
fadds
ljmp
mov
mov
stos
int
add
and
int
jg
ja
rolb
pushaw
notl
test
into
fld
jb
fmul
and
lock
imulb
js
mov
pop
xchg
xor
mov
mov
push
cvtpi2ps
rcrb
xor
outsb
test
aam
lods
mov
sbb
mov
pop
pop
jg
mov
mov
loopne
inc
fstpt
cltd
sbb
dec
dec
jmp
jns
jbe
mov
out
cmpsl
add
jecxz
imul
stos
fcoms
out
mov
jno
sbb
ss
jne
rolb
jle
ljmp
adc
insl
lret
xchg
das
jo
push
stos
inc
fwait
stos
inc
adc
popf
cmpb
lcall
jl
lcall
arpl
jb
lods
dec
mov
ror
cmp
and
jl
cmc
and
loopne
sub
insl
popf
ja
ja
and
cwtl
and
out
out
jns
xchg
test
adc
cltd
jp
xchg
arpl
fistps
and
mov
pop
cs
movsb
cmp
loop
popf
adc
les
dec
pop
inc
mov
and
mov
scas
xchg
inc
sbb
fidivl
out
rorl
adc
fidivs
add
fmul
mov
pop
cmp
insl
pop
out
add
push
and
push
push
or
adc
mov
push
mov
popl
fsub
sbb
loope
movsb
mov
jg
and
xor
add
sbb
add
or
sbbl
loop
sub
sub
ja
into
fcoml
and
fucompp
jae
dec
je
add
xchg
or
dec
dec
and
addr16
xchg
and
ds
mov
int
nop
push
fcos
push
or
jns
pop
pusha
sbb
push
jbe
dec
jnp
stos
cmp
popl
fs
dec
sub
loop
imul
inc
sbb
bound
loopne
push
bound
sub
inc
sub
push
pop
add
pop
sbb
test
add
ficoms
push
mov
pslld
repz
lods
flds
mov
mov
mov
ds
in
lcall
push
lods
cli
adc
cmp
cmp
lret
sbb
mov
xchg
jmp
jle
jecxz
mov
xchg
out
lock
lret
icebp
sti
test
in
or
fcmovnb
mov
push
add
mov
inc
dec
mov
cwtl
inc
sbb
jmp
stos
mov
ds
outsl
push
mov
cwtl
jo
mov
mov
xor
outsb
xchg
inc
sub
dec
or
aam
dec
sbb
sbb
aaa
cwtl
or
lods
xor
mov
or
leave
jl
mov
add
mov
pusha
shl
and
cmpsl
mov
out
test
jae
rcll
xor
sbb
or
cmp
push
dec
inc
loop
sbb
int3
cmp
pop
roll
into
cwtl
lret
jbe
std
xorb
ror
out
leave
test
sbb
fidivrs
mov
stos
imul
cs
mov
lret
in
and
push
je
das
les
loopne
pop
paddsw
daa
mov
mov
mov
mov
shll
cs
ss
push
lcall
add
adc
add
arpl
push
js
sub
dec
subb
cmp
jnp
es
fdivr
sbb
mov
imul
es
pop
call
mov
scas
inc
out
xchg
lcall
cmp
lock
jo
mov
cli
lds
sarb
jge
mov
iret
cmpsb
cmp
ss
xchg
fs
mov
enter
iret
mov
icebp
jae
insb
sub
icebp
popf
add
mov
iret
rclb
and
stc
jno
test
adc
insb
xor
call
pop
enter
popf
leave
push
ret
mov
movsb
mov
mov
lods
jp
fistps
in
je
jns
fildl
jmp
lea
or
mov
xor
jbe
imul
pop
icebp
adcb
adc
cltd
in
pushf
jb
in
pop
adc
cmpsl
mov
jo
or
mov
fcmovne
leave
pop
out
sbb
shll
push
stos
cltd
lea
popa
lods
jbe
pushf
push
inc
stos
cmp
mov
int3
cmc
mov
mov
mov
sbbl
les
lock
std
mov
stc
nop
add
xor
mov
aas
mov
in
push
jmp
jb
push
pusha
dec
loopne
xlat
insl
enter
lods
dec
stc
aas
insb
cltd
lea
jnp
mov
outsl
jg
cmp
pop
lret
jne
lds
fucom
pop
cmp
pop
mov
leave
and
pushf
xor
mov
je,pn
jge
sbb
add
mov
dec
shrb
jae
pop
and
jae
pop
je
cld
dec
cltd
push
mov
imul
mov
std
xchg
xor
cmp
in
push
inc
fsubrs
sub
aas
mov
xor
pop
jg
mov
jo
mov
push
popf
dec
jecxz
add
cltd
push
in
sbb
xor
mov
enter
jg
mov
mov
int
test
mov
idivb
out
push
movsl
inc
xchg
ret
test
xchg
sbbb
xchg
test
fcmovnb
stc
mov
in
or
inc
imul
dec
mov
stos
jo
xlat
outsb
pop
xchg
pop
imulb
jg
ss
dec
and
lahf
cmpl
pop
ss
jge
sti
inc
fsubr
in
cmp
xchg
cmp
mov
mov
popf
push
cld
push
mov
sbb
filds
inc
xlat
addr16
fcoms
jle
sti
jbe
enter
test
into
jge
fadds
add
jp
mov
jo
lods
out
test
call
jg
pop
sbb
pop
cmpb
outsb
pop
in
test
pop
mov
test
scas
inc
xchg
add
jne
or
lods
or
cld
aam
int3
loop
or
push
lret
xor
int
insl
sub
dec
mov
rolb
jnp
sub
sbbl
jb
bound
fnstenv
hlt
es
pop
and
scas
inc
dec
inc
in
jae
int3
arpl
dec
jecxz
adcb
lret
mov
pop
lds
add
enter
sbb
jno
or
mov
jbe
mov
cmp
les
ljmp
xor
push
and
adcl
or
jmp
xchg
adc
xchg
aad
outsb
leave
cmp
subl
test
inc
sbb
lock
into
or
mov
push
pop
scas
cltd
cmc
cmp
add
push
jnp
icebp
cmp
push
cmpsb
cs
sahf
xor
out
cltd
std
sub
scas
sahf
push
xchg
lret
dec
das
int
xor
inc
mov
xor
push
iret
data16
jp
and
jecxz
cld
inc
mov
xchg
add
sahf
xor
cmp
fwait
cmp
sbb
mov
dec
xor
cmp
sub
mov
dec
std
xchg
cmp
inc
cmp
rcl
mov
dec
fbstp
sub
fwait
mov
or
fsubs
insl
or
fisubs
mov
jb
adcb
pop
fwait
jbe
mov
std
xchg
push
mov
mov
pop
pop
lods
jl
inc
fcomps
jmp
stos
sbb
or
data16
pop
cmpsb
xchg
cmc
or
push
push
push
scas
xchg
push
and
dec
mov
lods
std
push
adc
jns
enter
lods
mov
insl
inc
inc
ficompl
xor
sahf
jecxz
add
nop
daa
insl
jo
pop
push
dec
cld
xchg
jnp
xchg
outsb
cwtl
push
gs
cmp
rcrl
push
hlt
testl
adc
scas
outsl
pop
scas
mov
scas
push
push
or
push
aas
inc
mov
out
aad
mov
jno
test
mov
shll
and
pop
repz
cmp
and
or
fmul
dec
mov
faddl
or
mov
dec
filds
es
xor
clc
cmp
xchg
inc
shlb
cmp
mov
jmp
mov
andb
xor
jle
mov
mov
dec
mov
and
push
xchg
pushf
mov
js
subl
or
mov
cwtl
xor
cs
inc
push
cwtl
and
inc
inc
sbb
iret
out
fnstcw
cmc
add
pushf
xor
push
pop
bnd
outsl
push
add
dec
in
cli
fnstenv
xchg
scas
icebp
fnstcw
cmp
mov
xor
or
sbb
mov
inc
xorb
ja
int
mov
lods
push
or
les
push
pop
pop
xor
pop
ds
push
out
mov
in
popa
clc
fildl
pop
mov
cld
das
mov
pusha
not
out
int
mulb
cmpsl
adc
pop
test
pop
adc
dec
jecxz
sbb
insb
nop
aaa
inc
fldenv
js
pop
insb
push
or
xorl
loop
xchg
fnstenv
jecxz
mov
jmp
test
mov
pushf
sub
dec
cmp
jg
loopne
mov
jo
and
pop
cltd
je
xchg
cmpsl
cmpb
pushf
push
push
push
cltd
cmp
push
mov
pop
and
out
es
mov
adc
jnp
pop
ljmp
test
cmp
call
outsl
push
sbb
jo
divb
mov
mov
gs
mov
adc
lock
push
call
ret
mov
adc
dec
lea
je
jmp
dec
mov
or
pop
xchg
jnp
cmpsl
push
cmc
sbb
shlb
inc
sar
out
stc
std
xchg
jmp
cmpsl
outsb
adc
orl
lods
inc
or
mov
lea
test
inc
loopne
test
inc
in
mov
push
push
push
mov
push
mov
les
fcmovnb
pop
or
pop
mov
push
add
xchg
fs
dec
loop,pn
pop
sbb
fs
fisubrs
xchg
cmc
mov
nop
lock
in
adc
pop
call
sub
jb
sub
imul
jmp
in
movsb
mov
jmp
aaa
fmulp
repz
mov
cmp
in
test
int3
sbb
arpl
inc
les
adc
insb
mov
or
sub
lock
cltd
mov
push
or
cmpsb
cmp
arpl
add
mov
out
andb
and
mov
xor
test
and
popa
scas
popa
cmp
dec
ja
outsl
aaa
dec
mov
mov
or
adc
movsb
test
divb
insl
xchg
jns
les
cmc
jb
pop
dec
mov
repnz
dec
fistl
mov
mov
cli
pushf
movsl
dec
stc
inc
sub
addr16
movsl
out
lds
jle
movsl
push
mov
xchg
xabort
fidivl
std
mov
fistps
mov
enter
or
jp
pop
icebp
mov
fnstcw
fmulp
jl
fcmovbe
push
enter
into
adc
inc
mov
hlt
loopne
ror
cmpsl
cli
xchg
fldpi
push
out
sbb
sbb
lcall
stos
das
fwait
loope
or
adc
sub
test
jecxz
and
imul
popa
mov
cmpsl
and
ja
fwait
inc
movsl
cmp
mov
push
popf
xor
sub
in
jmp
or
sbb
mov
cltd
or
xchg
xlat
mov
adc
pop
cs
testl
outsb
std
xchg
pop
adc
repnz
jp
pop
push
sbb
xlat
jb
gs
clc
dec
in
outsb
in
mov
pop
adc
jne
in
int3
cmovno
test
aas
lea
pop
aaa
scas
cmp
repz
xchg
pop
adc
ret
inc
jle
mov
data16
dec
push
pop
icebp
arpl
mov
test
pop
mov
repnz
es
lods
movsl
inc
into
std
xchg
out
push
inc
xlat
mov
ret
inc
fxtract
int3
lea
adc
shrb
sarb
aad
mov
and
mov
shrb
test
lock
cld
sub
shlb
or
loope
adc
inc
fimull
stos
sbbl
lock
repnz
mov
xchg
push
or
push
add
pop
test
jp
push
inc
inc
out
test
inc
cmp
pop
mov
jno
cmc
mov
xchg
ret
pop
sub
ja
movsl
dec
mov
jo
icebp
mov
xchg
cmpsl
ds
imull
les
cs
cwtl
push
mov
sbb
scas
std
xchg
into
lcall
push
jl
test
pop
test
jmp
hlt
in
mov
adc
push
in
add
push
jmp
jns
push
movsl
xchg
lcall
add
sti
push
mov
in
xor
xchg
jae
pop
sahf
arpl
adc
fsubr
and
add
lods
cmpsl
mov
fxch
sti
xchg
sub
fidivs
dec
xor
scas
repnz
arpl
rolb
dec
xor
cmp
mov
fwait
xor
sahf
xor
push
mov
rcrl
xchg
sub
insl
pop
sbb
sbb
lock
shlb
in
mov
pop
adc
roll
dec
in
je
lods
movsl
push
imul
xor
mull
jmp
sub
pop
popf
dec
lds
mov
iret
adc
cwtl
and
bound
mov
jns
mov
pop
sahf
sbb
or
mov
clc
jns
mov
test
jp
int3
faddp
fwait
test
push
in
xor
pop
cmc
lea
adcb
adc
imul
mov
pop
scas
dec
cmc
fwait
jmp
add
and
mov
popa
ds
jle
add
xor
push
cmp
loop
pop
xor
cmp
repnz
fwait
mov
ret
lea
push
in
pop
inc
or
mov
scas
jb
mov
aam
roll
or
hlt
ljmp
push
imul
sub
lret
flds
sbb
cmp
sahf
push
xchg
sbb
mov
nop
shll
pop
xchg
fmuls
mov
dec
cmpsb
jge
mov
inc
les
shlb
and
jne
mov
lret
testb
adc
movb
mull
push
xor
dec
nop
aam
add
sub
sub
jno
rorb
or
mov
push
aaa
stos
push
lahf
clc
xchg
mov
scas
push
iret
jbe
mov
jle
int3
sbb
lahf
stos
flds
scas
shlb
iret
mov
leave
popa
lods
mov
dec
dec
mov
mov
ret
add
repnz
and
iret
push
jge
mov
jne
in
or
pop
ds
outsb
push
jle
cmp
cltd
loop
test
stos
add
mov
mov
js
int
xlat
mov
sub
sbb
sqrtps
and
ret
mov
loope
dec
addb
cmp
aas
mov
outsl
test
push
gs
daa
pop
push
sbb
fsubs
sub
push
scas
pop
sub
push
inc
inc
and
mov
sahf
scas
push
lahf
cmp
outsl
push
movsb
aaa
pop
dec
cmp
mov
gs
inc
pusha
pop
adc
push
sbb
adc
pop
out
cmp
lcall
popa
adc
sub
pushf
cmp
mov
adc
dec
dec
jno
js
mov
unpckhps
xor
jns
in
out
scas
out
and
jecxz
mov
dec
leave
jecxz
cmp
jns
adc
ljmp
dec
scas
sti
jno
andb
nop
xor
jo
scas
sub
out
outsb
enter
lods
jecxz
popf
ret
arpl
mov
mov
test
add
jmp
scas
mov
sbb
cmpsl
cli
lea
pop
out
imul
add
popa
push
jo
add
ja
inc
arpl
rcll
jmp
mov
xchg
insl
test
add
pop
adcb
mov
vpshlb
je
push
roll
aad
lret
clc
jle
sbb
jbe
and
sbb
xchg
jb
cmp
dec
dec
mov
push
rcll
rcrl
inc
pop
loopne
filds
add
add
xchg
in
outsb
ret
fimull
rcl
xor
js
mov
sbb
stos
andl
cs
jg
ss
idivb
mov
iret
push
call
dec
pop
icebp
sub
pop
jns
dec
ljmp
lods
movb
mov
xchg
pop
sbb
sbb
push
dec
insl
sub
dec
insl
xchg
mov
and
jp
sub
test
stos
dec
pop
movsl
dec
int3
xchg
xchg
push
mov
and
mov
mov
lahf
gs
dec
mov
insl
jno
lahf
decl
sub
int3
test
ljmp
adc
into
gs
shll
cmpsl
add
mov
xor
jo
rcrl
dec
pop
arpl
xchg
push
mov
mov
sub
les
scas
cmp
jmp
neg
fimull
in
sti
fsubrp
sub
out
jl
xchg
and
mov
clc
bound
popf
xor
mov
cmp
jecxz
mov
sub
mov
mov
jg
in
in
nop
ljmp
insb
jge
stos
les
in
sub
js
mov
fldcw
out
jns
popf
mov
ljmp
inc
push
pop
push
mov
or
stos
cmpsb
push
test
sub
inc
and
in
adc
aaa
je
cmp
mov
es
mov
das
cmp
dec
in
mull
adc
jno
push
add
xchg
sub
fidivl
icebp
push
xchg
push
ljmp
cmc
in
icebp
imul
or
cmp
jl
fwait
jo
xchg
stc
jg
and
pop
sbbl
xor
enter
and
xor
ds
popa
push
rclb
inc
pop
inc
aas
insb
mov
repnz
sbb
je
mov
popa
subb
repnz
fwait
jno
int
test
and
or
inc
mov
xchg
js
push
mov
mov
pop
lea
pop
hlt
sbb
mov
xor
lea
cli
inc
sub
sarl
in
jae
popa
movsl
pop
insl
leave
pop
adc
push
xor
jmp
cmc
dec
sub
insb
repnz
jp
adc
loopne
or
lock
inc
aaa
mov
mov
push
lcall
push
jle
sub
pop
add
int
fiadds
cmp
outsb
dec
outsl
fisubrl
mov
mov
jmp
mov
xor
in
test
fistl
xchg
add
push
lret
inc
xchg
add
dec
repnz
addl
jle
mov
mov
inc
imull
insb
aaa
push
mov
rcr
push
mulb
xchg
rorl
xchg
cmp
mov
mov
aad
add
imulb
es
jg
pop
cmp
ja
test
dec
pop
or
mov
testb
add
cmp
cmp
xlat
mov
mulb
jo
insb
sub
hlt
jo
ret
and
pop
in
xchg
scas
push
mov
mov
xor
rol
loop
add
stc
xor
daa
jo
outsb
pop
dec
pop
mov
pop
popf
lods
loopne
sbb
sbb
inc
jl
es
scas
push
ljmp
jno
push
data16
fsubrs
push
or
push
or
loope
jmp
sub
cltd
dec
jmp
push
jmp
inc
pop
dec
or
jno
outsl
xchg
ret
jmp
jmp
aaa
cmp
test
sub
lahf
idivb
shr
inc
stos
push
mov
imul
iret
mov
incl
xchg
jge
jle
mov
mov
sbb
mov
sbb
stos
xchg
xchg
cmp
add
in
sbb
cltd
int
fidivl
cmpb
sub
xor
cmp
add
lea
lock
sub
movsb
cmpsb
fstpl
imul
bound
pop
flds
jecxz
sahf
test
lds
mov
adc
xor
inc
push
push
in
andl
test
jecxz
adc
lret
idivb
pop
lret
xchg
test
jecxz
or
push
or
mull
pop
cmpsb
in
popf
repz
cmp
pop
test
jne
pop
push
sub
cwtl
pop
outsl
jb
fidivrl
lret
lcall
les
push
out
lret
xchg
inc
jne
mov
int
push
add
mov
mov
movsb
call
add
mov
cli
xor
lret
add
mov
dec
sub
xor
filds
subl
fdivrs
loope
sbb
test
andl
mov
stc
imul
dec
inc
and
inc
inc
out
test
adc
dec
sub
xchg
leave
xchg
inc
out
repnz
push
loop
ja
pop
adc
enter
cs
test
jge
stos
aas
test
mov
push
es
out
into
fidivrs
in
mov
sbb
out
inc
imul
adc
add
xchg
dec
add
std
sbb
fs
leave
push
inc
jns
sbb
mov
in
push
add
int3
popa
mov
int3
lock
sahf
shll
and
push
mov
frstor
test
cmp
dec
pop
cmc
xchg
push
rcr
and
outsl
mov
adc
jge
mov
or
push
mov
insb
pop
push
daa
adc
sub
xor
clc
push
mov
ja
pop
rcll
xchg
subl
mov
cmp
xchg
adc
dec
jle
mov
jno
je
clc
mov
arpl
aam
mov
inc
adc
sub
mov
jge
movsl
jb
sbb
jecxz
bound
xor
mov
mov
pop
fwait
add
ret
outsl
inc
les
aad
mov
mov
sbb
loop
cmp
add
imul
adc
lahf
les
es
gs
pop
data16
pop
jne
mov
mov
jno
add
outsl
jge
mov
orl
mov
xchg
sub
mov
jge
testl
aaa
pop
adc
jecxz
pop
push
pop
rcl
imul
in
test
cld
dec
movsl
cmp
adc
mov
fisttpll
sub
pop
lock
popa
add
cmc
mov
jg
push
mov
out
xchg
pop
call
add
repz
std
lods
das
xor
test
shrb
decb
popf
xor
jo
sti
xchg
or
dec
test
movsb
sbb
cmp
lret
xchg
push
fistl
in
dec
dec
arpl
lcall
leave
out
scas
addr16
loop
jge
xlat
aas
repnz
bound
inc
into
ret
fs
sbb
adc
push
fildl
sti
clts
aam
add
inc
gs
fldenv
sub
xor
mov
fwait
push
sbb
cs
mov
fcompl
sub
mov
pop
push
mov
inc
popf
orl
test
sbbb
xchg
jnp
inc
or
lret
inc
jmp
sub
insb
aas
mov
insb
jmp
cwtl
sti
es
pop
mov
daa
mov
dec
dec
in
push
jb
xor
insb
jle
push
add
test
rcl
bound
test
clc
adc
xor
xor
imul
loop
movsb
adc
mov
xor
or
mov
ljmp
aam
mov
cmp
pop
xchg
fsubs
push
stos
mov
push
rorb
cmp
xlat
js
nop
sub
sub
xor
mov
in
sbbw
in
test
sub
lahf
lea
pop
testb
xchg
lcall
mov
scas
mov
mov
inc
in
or
mov
insb
add
leave
out
popa
mov
fcomip
inc
imul
sarb
or
dec
push
daa
push
lods
pop
ficoms
imull
scas
leave
push
jg
movsl
jmp
pop
int3
aad
dec
pop
cmc
cmc
ret
cmpsb
xchg
mov
outsl
pinsrw
mov
int
sbb
sti
out
les
inc
inc
mov
xor
xchg
mov
ja
jge
call
sbb
scas
pop
mov
sub
orl
in
adc
int3
pop
popf
fldl2t
into
jns
dec
mov
stos
jmp
jnp
jo
sub
dec
dec
dec
pop
jle
push
pop
pop
mov
pop
xchg
pop
push
mov
dec
data16
jl
cmp
enter
fbld
test
pop
je
pop
cmp
aam
cmp
cli
mov
jo
mov
and
jg
lcall
and
jmp
aas
add
shll
mov
adc
xchg
inc
incb
scas
push
out
adc
sub
outsb
das
xchg
shld
out
addr16
idiv
jns
and
mov
inc
daa
and
call
sub
jne
ja
shlb
xchg
outsb
push
adc
adc
jg
into
sub
inc
je
adc
popa
inc
sbb
push
jne
cmp
movsb
je
mov
or
lds
cmpsb
mov
mov
adc
mov
cmp
scas
std
cltd
subb
push
mov
cld
pop
dec
mov
aas
scas
inc
in
in
cmc
pop
bswap
add
fisttps
inc
mov
lret
out
loope
jnp
jge
inc
mov
push
dec
in
lods
in
pop
sub
jge
mov
push
xlat
roll
es
adc
fucomip
orb
xchg
jmp
or
jno
push
shr
test
mov
cmc
fcomip
into
xor
stos
pushf
xor
clc
lret
mov
ret
push
lret
pop
ret
cmp
stc
push
mov
adc
icebp
insb
xchg
mov
pop
fidivrl
or
test
loope
out
fsubrs
adc
daa
jnp
xor
stos
cmp
pop
movsb
aam
adc
mov
xchg
xchg
shrl
mov
mov
xchg
xchg
cld
mov
sbb
fld
jl
xor
aad
mov
mov
pop
in
out
push
stc
xchg
sub
repnz
adc
sbb
cwtl
push
adc
mov
fidivrl
pop
cli
sub
jg
int
sbb
inc
andb
xchg
pop
outsb
jg
or
add
outsb
dec
std
dec
loopne
in
call
push
int
xchg
dec
or
push
sub
aad
pop
cmpb
jo
sti
sub
and
mov
pop
add
insl
pushf
mov
sub
lods
insl
insb
mov
mov
repz
imul
mov
add
push
mov
xchg
outsl
add
push
adc
pop
lea
lods
stos
shrl
mov
cmp
ds
inc
sbb
cld
aam
cmp
jmp
pop
mov
jmp
andl
popw
xchg
adc
push
xor
test
jle
leave
sbb
je
cli
mov
mov
sub
xchg
push
lods
pop
mov
out
mov
sub
into
adc
push
sub
add
pop
pop
xlat
imul
push
imul
cmp
or
aad
mov
fdiv
mov
gs
pushf
in
out
lahf
or
pop
push
cltd
mov
inc
aas
mov
jge
out
mov
bound
jae
xor
xchg
flds
sbb
addr16
ret
jno
scas
mov
pxor
or
mov
sti
push
push
les
fwait
mov
decl
pop
sub
xchg
sub
cmp
adc
data16
aaa
mov
mov
daa
cmpsl
data16
mov
in
mov
mov
xchg
mov
jnp
mov
ds
ficomps
sbb
xlat
jp
xchg
sbb
nop
scas
out
dec
mov
repnz
aas
nop
sbb
pusha
mov
push
sbb
add
jns
ficoms
int
icebp
adc
test
pop
lcall
or
push
es
out
inc
sti
mov
mov
lea
lea
add
std
inc
inc
adc
bound
xchg
es
pushf
aas
push
jne
in
mov
pop
or
push
jge
jl
setae
push
addb
ret
cmpsb
ret
mov
stc
inc
shlb
fmull
push
mov
jl
mov
xchg
bound
sbb
test
push
pop
xor
dec
sahf
pop
fwait
pop
adc
cmp
outsl
jbe
pop
sbb
xchg
mov
out
int3
pop
and
nop
in
dec
ret
adc
jae
repnz
lahf
test
fildl
sbb
sbb
in
ficoms
dec
and
cs
mov
inc
pop
mov
fdiv
dec
out
pop
xchg
bound
jns
insl
sub
ret
shlb
inc
fadds
or
in
test
nop
fildll
ja
jb
xchg
fildl
test
mov
leave
dec
cmpsl
or
push
xchg
arpl
or
push
popf
pop
dec
cld
jnp
dec
jmp
xchg
int
aam
dec
in
dec
sbb
outsl
dec
and
int
sub
mov
repz
push
push
in
movsb
test
scas
cmp
add
mov
mov
dec
lcall
and
xchg
sub
dec
push
fdiv
iret
push
out
add
xchg
jne
push
popa
fldcw
jne
cli
cs
lods
nop
les
mov
inc
lea
and
in
push
pop
addb
and
jo
pop
ja
inc
jbe
add
pushf
sbb
repz
ds
aam
pop
pop
jbe
xchg
outsb
subb
mov
popf
lods
push
insl
jo
lahf
outsb
xor
ja
push
add
leave
add
xor
std
js
sbb
mov
lods
mov
inc
sub
insl
ror
jb
pop
pop
dec
cmp
add
shll
cmc
shlb
mov
dec
pushf
xor
out
push
sahf
mov
sub
data16
xlat
xor
or
testl
inc
push
jo
shrb
jg
cmp
mov
add
cmp
into
insl
inc
pop
dec
jnp
mov
or
cli
dec
mov
movsl
mov
add
sub
and
test
cltd
xchg
shl
repnz
jbe
sub
cmp
jnp
and
pop
cld
cmpsl
push
fistpll
rcrl
aas
loope
mov
je
cmpsb
cmp
cs
mov
out
lods
dec
dec
inc
cwtl
mov
insl
out
mov
imul
adc
out
push
test
movb
mov
mov
pop
out
mov
and
lds
test
mov
call
cmp
in
pop
adc
insl
insb
daa
int
scas
add
push
pop
imul
xchg
push
arpl
arpl
mov
fmuls
andb
push
loopne
sbb
sbb
jmp
sbb
sub
mov
leave
jbe
inc
xor
xchg
push
stos
xchg
lahf
cltd
fidivrl
insb
int3
xor
sbb
pop
and
sbb
pop
mov
enter
leave
and
sub
and
stc
sbb
cmp
cmp
ljmp
iret
jno
mov
fs
jmp
mov
add
or
pop
loope
cmp
jg
jae
cmp
ljmp
popf
dec
jle
imul
and
add
mov
dec
xchg
push
loopne
out
into
mov
repnz
popf
xor
nop
and
sarl
xorb
mov
mov
mov
add
mov
les
jmp
mov
or
push
out
jbe
sub
aad
jns
xor
jne
add
int
das
pop
clc
movsb
mov
lea
dec
cmp
sbb
loopne
pushf
popa
sbb
mov
lret
jb
popf
xchg
int3
cs
mov
aaa
dec
xor
rcrb
ljmp
jne
push
xchg
cli
cmp
inc
gs
test
sub
cmp
sti
or
mov
movsl
in
add
imul
sub
addb
shlb
inc
sar
scas
scas
mov
mov
push
pusha
push
jb
add
imul
ljmp
idivb
or
adc
jne
adc
cmp
jmp
jp
jl
leave
sbb
insb
jo
arpl
mov
pop
stos
imul
arpl
mov
mov
adc
jns
or
mov
pop
lds
popf
scas
xor
shll
and
jp
cld
xchg
sbbb
popf
push
jmp
or
cmp
or
xor
sarl
jb
dec
stc
add
aas
outsb
dec
and
xorps
notb
rolb
std
out
test
iret
mov
movsl
cmp
sbb
stos
filds
mov
in
ja
or
pop
scas
out
and
lret
scas
xchg
pop
in
pop
stos
rcr
adc
insb
test
mov
inc
notb
push
ljmp
pop
xor
sarl
in
and
jae
ss
sbb
fisttpl
or
xorb
test
lods
push
out
cmp
outsb
add
dec
ss
insb
fstpl
aas
or
lock
mov
loope
movsl
lds
cmc
mov
mov
jle
scas
mov
push
push
mov
fnstcw
lock
lods
inc
mov
mul
inc
fadd
push
jecxz
bound
add
insb
pop
mov
popa
jo
iret
mov
mov
fistpll
mov
sbbb
or
jbe
mov
outsb
xor
shrb
fwait
outsl
fstps
dec
ss
jb
cmp
stos
lds
jl
sub
pop
rcr
dec
mov
int3
sub
cwtl
mov
pop
jne
xor
pop
mov
dec
test
jle
cmpsb
stos
cmp
or
adc
mov
aam
mov
sub
iret
sahf
in
jle
jp
popf
mov
lret
adc
push
int3
dec
loop
hlt
stc
shrl
inc
movsb
dec
out
pushf
or
push
fwait
cmpsl
lahf
iret
jae
out
sub
inc
iret
cltd
xor
jne
repnz
sbb
pop
cwtl
cmp
adc
inc
push
xchg
bound
arpl
rcrb
xchg
cwtl
repz
insl
movsl
sbb
xchg
mov
mov
xadd
adcb
inc
int3
push
out
or
jns
shrb
xor
cmp
cmp
shl
or
xchg
ss
mov
add
sarl
stos
add
bound
and
mov
bound
cmp
pop
pop
mov
xchg
lods
xchg
sub
and
mov
ret
lret
outsl
cmc
sbb
push
push
mov
dec
js
inc
and
cs
add
push
inc
adc
jmp
daa
enter
jno
test
out
cmp
xor
rclb
dec
pop
sahf
in
outsl
push
pop
mov
adc
sbb
ds
sahf
outsl
decb
test
cwtl
es
jmp
or
fisttpll
shl
sbb
pop
adc
in
andl
jl
push
gs
inc
stos
xchg
and
adcl
test
std
enter
xchg
ret
test
fstpl
icebp
mov
ucomiss
jbe
sbb
scas
mov
xchg
ds
lahf
push
pop
test
js
and
add
mov
and
stos
ljmp
in
push
push
pop
push
leave
test
sarb
pop
xor
and
xchg
insl
xor
pop
or
fwait
adc
cli
shlb
ja
hlt
and
fstpt
popa
iret
xchg
stos
data16
push
mov
pop
rcll
sub
jg
sbbb
sbb
mov
cmpsl
jns
je
and
cmp
aad
pop
adc
rorb
push
sbbl
or
sub
cltd
xor
fistpl
scas
or
mov
or
xlat
sbb
fistpll
pop
jbe
adc
aas
mov
loop
push
mov
cmp
or
jp
adc
xchg
push
xor
clc
scas
icebp
xchg
sub
adc
call
out
jge
mov
or
in
mov
fistpl
rolb
inc
sbb
dec
ja
push
test
std
sbb
xchg
rorl
push
and
fsubr
test
push
aas
mov
test
xlat
jge
pop
in
mov
xchg
push
push
stc
test
inc
cmpsb
cmp
sbb
dec
mov
test
rcl
sbb
scas
push
ret
hlt
xor
pop
cmp
mov
pop
iret
in
dec
jecxz
loope
xchg
dec
jns
jmp
out
aad
cmp
xlat
xor
or
outsb
or
jmp
or
lcall
add
lahf
jbe
sub
jmp
and
in
push
mov
inc
jge
cli
test
pop
icebp
inc
popf
pop
pushf
fnsave
cli
imul
outsl
adc
mov
push
sbb
cmp
cmp
xchg
mov
mov
je
das
xor
out
sub
cmpsb
xchg
imul
rol
pop
je
mov
xchg
insl
add
fmuls
xchg
mov
mov
ds
repnz
mov
or
push
mov
ja
or
nop
clc
lods
jnp
daa
test
fisubrl
aad
mov
sub
mov
mov
fdivs
cmp
cmpsl
jae
push
sbb
das
sbbl
mov
cmp
subb
pop
addr16
mov
inc
into
jbe
dec
adc
movsl
std
xor
mov
sbb
inc
and
xor
push
jle
mov
push
xor
iret
sbb
int
cmp
mov
pop
sub
ficoms
dec
or
xchg
xor
add
push
pop
hlt
cmp
pop
mov
pop
xor
cmpsl
jb
test
bound
push
mov
dec
aad
pop
mov
sub
outsl
xchg
cmp
cmp
pop
fs
popf
pusha
jns
imul
pop
mov
jo
push
or
das
fsts
daa
push
sub
adc
push
adc
and
pop
orl
repz
jmp
add
negb
mov
and
jp
or
mov
jbe
xor
mov
test
cvtps2pd
or
aam
hlt
mov
loopne
xchg
xorl
test
xchg
sub
leave
cld
xchg
negl
cli
xchg
insb
aam
mov
pop
sbb
push
lret
popa
loop
add
cli
mov
sarb
cmp
decb
into
cmp
add
or
mov
sbb
mov
add
sbb
aas
xchg
hlt
or
in
out
pop
dec
dec
enter
call
jbe
push
iret
pop
dec
loopne
lock
daa
lds
testl
mov
inc
shrb
push
sti
push
aaa
cwtl
hlt
pop
loop
sbb
push
mov
fcmovnu
jno
cli
pop
sub
dec
in
push
in
sbbl
fdivrl
and
jo
testb
mov
cli
and
inc
ds
jns
ljmp
jl
mov
movsl
xor
xor
xchg
mov
dec
popf
inc
jne
insb
xchg
or
sub
fwait
push
xor
pop
testb
jb
jl
add
sbb
ret
lret
rorl
adc
scas
push
inc
ja
mov
add
xchg
std
daa
repz
fimuls
outsb
inc
mov
adc
or
push
adc
stos
and
add
in
in
or
cmp
add
lock
daa
iret
mov
xchg
and
repz
add
inc
lods
mov
mov
mov
ret
addr16
loopne
pop
jmp
adc
insb
mov
jmp
repnz
repz
dec
adc
imul
cmp
cmp
xchg
sub
aaa
pop
mov
mov
roll
lods
pop
push
movsb
cmp
jbe
arpl
mov
or
or
incb
das
pop
xchg
scas
push
xor
ret
xchg
in
cwtl
dec
mov
inc
outsb
ds
insb
testb
mov
mov
aam
add
pushf
xor
dec
popa
pop
lock
inc
mov
aad
jbe
and
mov
jne
mov
xor
popf
jg
cmpsl
inc
inc
xchg
repz
jg
cmpsl
dec
xchg
mov
lea
in
xor
push
ljmp
imul
cmp
lret
pop
movsb
pop
xchg
cmc
fwait
dec
das
jl
mov
movsl
push
or
mov
or
popa
out
inc
mov
mov
stos
mov
fiaddl
cmp
mov
add
fnsave
or
inc
loop
and
mov
ljmp
sbb
dec
push
pusha
jmp
lods
imul
pop
cmp
movsb
loope
jmp
cmpl
in
xor
je
int
pop
imul
ret
call
test
mov
jbe
mov
cmp
mov
shl
sbb
jmp
popa
lods
pop
nop
movsl
mov
icebp
xor
and
adc
shl
ss
jle
bound
add
fxch
movsb
bswap
shl
shlb
jl
dec
add
incl
or
nopl
dec
jns
fsub
in
jae
inc
inc
pushf
pop
sti
je
int3
mov
int
out
jmp
lahf
and
add
xchg
mov
pop
nop
push
fwait
dec
mov
inc
cwtl
mov
arpl
cld
movsb
mov
das
cmp
sbb
jge
call
push
dec
test
loop
pop
jmp
popf
cld
sub
repz
sub
mov
pop
dec
cmc
jge
mov
js
sbb
inc
pop
fdivrl
and
cmp
xchg
ds
push
es
loope
flds
xor
mov
clc
lahf
push
shll
sbb
and
loope
ficoml
repz
or
inc
push
loopne
insl
scas
sbb
mov
test
xor
lret
inc
repz
pop
push
imul
ds
mov
lock
sub
cli
imul
cmp
loop
lods
inc
inc
adc
rcl
dec
push
sbb
bound
popa
test
xorl
pop
jno
xor
into
out
xchg
cmpsl
scas
movsb
jae
inc
sbb
mov
or
pop
lea
sub
inc
scas
push
dec
jb
jge
imul
gs
arpl
iret
cmp
xchg
pop
mov
fsubrs
sbb
cli
xchg
cli
push
sarl
lds
mov
or
sub
push
cli
pop
push
or
add
add
lcall
push
inc
xchg
or
push
iret
xchg
out
sub
sub
mov
cmc
jecxz
cmp
aas
lds
mov
mov
adc
rol
push
sub
insb
sub
les
sub
adc
fs
js
xchg
jle
adc
or
add
jl
sbb
subb
push
push
enter
sbb
shll
loopne
loop
push
into
lahf
or
je
inc
xor
cwtl
xor
decl
fimuls
nop
push
int3
push
or
push
test
mov
addr16
pop
imul
dec
add
cmp
shlb
pop
jnp
pop
lds
adc
push
mov
xchg
test
mov
adc
xchg
insl
pushf
xchg
clc
es
inc
aaa
jb
imul
aad
out
je
cmp
xchg
sub
jmp
mov
mov
add
cmp
mov
sbb
shl
outsl
jmp
int
add
cmp
movsb
js
mov
jp
inc
enter
or
mov
pusha
mov
dec
mov
jno
lods
and
ret
and
out
mov
into
movsb
push
int3
mov
mov
js
cmp
test
or
dec
dec
push
push
loope
cs
xchg
xor
les
shrb
ljmp
mov
lods
cmp
sbb
sbb
test
inc
outsl
adc
cmpsb
inc
dec
dec
pop
lret
ficompl
mov
adc
outsl
mov
fimuls
push
in
ds
sbb
and
fistpl
rorb
cli
xchg
jae
jmp
mov
adc
les
call
icebp
lock
out
aaa
insb
pop
push
lds
mov
stos
subl
mov
xor
xor
jns
int
adc
jmp
xchg
nop
js
jbe
xor
je
sbb
push
dec
movsb
aas
pushf
inc
cli
lea
sub
scas
push
scas
jo
dec
aam
push
ss
add
repz
pop
ret
sub
add
add
cli
jecxz
push
pushf
inc
and
in
mov
popa
shlb
cmp
scas
mov
lea
cmp
daa
hlt
mov
mov
in
outsb
mov
jge
dec
or
pop
test
test
xchg
and
test
mov
lcall
and
pop
imul
adc
test
mov
jmp
aad
adc
jge
or
mov
stos
movsl
hlt
mov
cmp
aad
xor
jno
test
cmp
das
or
bnd
and
mov
pop
cmpl
dec
pop
sar
mov
mov
test
mov
xor
jbe
sub
insb
inc
and
add
ss
pop
fcomp
pop
mov
jo
outsl
pop
xor
cld
lcall
xor
pop
jle
cmpsl
scas
mov
jmp
dec
dec
jl
sahf
pop
xor
or
in
into
push
adc
mov
imul
push
mov
test
sbb
xor
push
add
sub
sub
out
sbb
jne
cmpxchg
add
into
push
fld
pop
repnz
outsb
sub
pop
insl
in
dec
mov
mov
mov
mov
xor
mov
jge
sub
clc
add
mov
aaa
sub
jno
mov
enter
pop
outsb
mov
pop
hlt
test
into
jge
inc
scas
scas
sbb
and
shlb
mov
or
xor
jmp
mov
and
scas
lock
xchg
subb
mov
push
movsl
int
inc
sbb
sub
outsb
ret
inc
jecxz
sub
push
jg
shrb
jae
inc
enter
fisubs
adc
testl
add
cmpsl
repz
cmp
mov
sbb
jns
xor
stos
jb,pn
pop
jae
sub
je
fdivp
outsl
and
mov
and
xchg
cmpsb
or
in
pop
ss
ficoms
mov
pop
pop
mov
js
aas
loope
jg
aas
xchg
adc
sbb
and
and
and
xor
aam
push
or
or
push
scas
pop
cmpsl
lds
int
roll
sbb
jmp
mov
shlb
int
inc
inc
dec
popa
dec
loop
mov
xchg
cld
aaa
sti
jne
mov
ljmp
lret
adc
cltd
and
mov
sub
pop
pop
leave
and
aaa
cmpsl
out
cli
mov
xchg
jbe
jl
push
sub
mov
hlt
loop
add
mov
aas
xchg
pop
jae
inc
xchg
mov
cmp
and
inc
mov
cmp
sub
sbb
repnz
mov
js
es
bound
mov
outsl
add
rcl
pushf
and
dec
adc
mov
jmp
or
repnz
addr16
mov
test
roll
stc
les
dec
in
stc
inc
hlt
push
jge
test
mov
or
inc
add
jmp
outsb
and
shll
fdivrs
fwait
or
sbb
jmp
mov
sbb
pop
xchg
imul
jae
adc
leave
pushf
sub
add
aad
mov
jb
adc
repnz
scas
shlb
addr16
rcll
add
dec
pop
cs
push
subb
insl
insl
enter
sub
push
imul
shll
mov
out
hlt
sbb
test
ja
push
adc
aad
lods
cmp
stos
hlt
jae
cmpsb
xchg
icebp
jne
fsubr
sbbb
adc
adc
jl
mov
push
cmp
push
push
outsl
mov
insl
add
xor
out
xchg
add
mov
adc
lds
pop
cwtl
popa
push
rolb
andb
sub
in
mov
pop
out
push
mov
inc
fnstsw
adc
cmp
adc
ja
push
loopne
loop
jge
shr
push
pop
pushf
xchg
adc
lret
jo
or
or
rclb
repz
stos
mov
shlb
dec
loopne
hlt
xchg
push
test
out
pop
out
jg
fimull
idivb
stos
push
or
mov
outsl
lret
mov
jo
and
push
loopne
lret
in
push
mov
push
in
test
mov
sahf
ljmp
nop
adc
xchg
inc
mov
das
movl
pusha
jb
jb
xchg
movsb
aaa
icebp
mov
mov
movd
pop
out
fwait
push
pop
cmp
les
jecxz
test
std
mov
mov
xor
ja
and
std
fistps
jecxz
jnp
popa
clc
dec
pop
fucomp
inc
stos
add
jo
dec
mov
dec
aam
orl
rcl
sbb
testb
test
push
mov
imul
mov
and
movsl
xor
fimuls
inc
das
jmp
xchg
in
cmpsl
or
stos
jg
cmp
sahf
enter
lods
or
or
xchg
mov
add
dec
or
ljmp
adc
lret
mov
daa
cmpsl
test
mov
es
aas
add
mov
scas
and
rclb
pop
mov
in
xor
arpl
xchg
sub
add
push
ret
inc
push
in
or
out
push
push
or
ljmp
sub
ss
mov
outsb
mov
mov
dec
jne
add
sub
cli
mov
aad
cli
loop
aas
dec
sbb
sub
std
mov
jns
js
sbbl
loope
lock
ss
repz
push
movsl
sbb
mov
jp
and
push
inc
pop
xchg
repz
clc
js
cmp
xchg
in
repnz
imul
shrl
cli
loope
sahf
sbb
mov
add
ljmp
mov
sub
arpl
cwtl
stos
ss
jno
xor
fs
cmove
test
inc
mov
mov
fucomp
lds
push
sbb
inc
mov
into
addl
or
pop
pop
jle
jb
push
ljmp
fld
add
and
inc
test
lods
jle
mov
clc
jns
popf
xor
fsubrl
mov
cmp
shrl
subl
mov
adc
std
xor
popf
add
test
test
cs
push
mov
loope
aaa
dec
xor
addr16
adc
xor
js
int3
lret
cwtl
outsl
mov
divb
popf
test
cld
lcall
cmpsb
xor
mov
test
sti
jae
repz
push
sahf
mov
faddp
lods
shl
mov
jns
sub
push
xchg
aam
dec
mov
or
cmp
xlat
insb
ret
mulb
lds
mov
ss
push
and
inc
push
or
mov
pop
out
mov
push
xlat
lret
xor
jg
mov
fwait
add
dec
sub
jp
iret
stos
xchg
fcompl
jne
fbld
aam
cmp
xchg
stos
pop
movsl
loope
mov
fidivrl
js
push
pop
iret
das
test
and
sub
inc
dec
in
and
inc
test
sbb
xchg
cmp
add
push
lds
rdpmc
mov
popa
std
jg
movsl
mov
inc
mov
sbb
mov
cmp
mov
ss
sub
and
dec
popa
mov
and
cmpsb
sub
fsubrs
test
dec
sbb
xchg
inc
cltd
in
adc
and
push
dec
je
jg
repnz
inc
dec
lcall
or
jg
fbstp
push
roll
nop
sti
mov
jp
dec
inc
inc
movsw
js
add
pop
mov
scas
xor
das
cmpsb
out
mov
and
and
repz
lods
and
mov
xchg
push
outsl
je
xchg
sahf
xor
ret
idivb
lock
shll
ficomps
xor
mov
insb
hlt
jo
cmp
sahf
and
xchg
stos
js
repnz
mov
mov
ss
pop
verr
inc
daa
sbb
xchg
in
in
jnp
nop
loope
data16
xor
sbb
iret
xor
xchg
jge
adc
bound
iret
pop
jae
jbe
xchg
bnd
mov
mov
out
mov
jecxz
mov
pop
loop
jp
scas
and
pop
mov
jmp
movsl
add
jbe
adc
push
push
push
xor
sub
xor
mul
cmovb
cmp
or
scas
mov
push
mov
xchg
data16
clc
adc
xor
add
bound
or
mov
aaa
xor
pop
rorl
push
add
mov
mov
adc
mov
jmp
dec
lret
incb
incl
scas
inc
add
std
jno
xor
dec
jne
mov
daa
aaa
loop
dec
dec
aam
mov
and
xor
lcall
mov
mov
cli
pop
shrb
add
test
cmp
out
aad
das
cmp
or
xchg
sub
dec
push
ss
cltd
call
or
mov
out
jb
imul
mov
xchg
dec
mov
inc
lock
ljmp
inc
fnstcw
sub
pop
mov
into
repz
ds
mov
add
xor
filds
jae
mov
js
fwait
dec
fs
into
jnp
rclb
xchg
and
xlat
scas
jae
js
push
adc
jb
in
stos
insl
adc
ret
andl
jmp
pushf
xchg
loopne
imul
scas
mov
sub
and
test
xor
pop
add
stos
push
testb
pop
mov
inc
jno
js
sahf
scas
dec
lea
cwtl
jbe
sbb
inc
hlt
sar
in
test
dec
ljmp
mov
addr16
mov
test
testl
faddp
xlat
jbe
jbe
das
push
or
mov
push
nop
adc
inc
cmp
xor
cld
and
into
inc
sbb
shrl
repnz
xchg
cmp
notb
fstps
jae
xor
ljmp
xor
dec
das
inc
push
pushf
out
pop
sub
mov
mov
lods
into
push
arpl
lcall
sbbl
xchg
cmp
jno
lret
test
add
popa
mov
movsb
cltd
aas
push
lret
mov
cltd
xor
mov
ret
bound
roll
subl
or
pushf
adc
sub
movsl
inc
xor
push
outsl
xchg
mov
cwtl
add
js
sbb
aas
pop
int
push
inc
clc
dec
dec
dec
adc
cmp
xchg
pop
ja
les
rorl
push
or
push
in
cwtl
dec
cli
cmp
push
aad
adcb
or
push
adc
je
fistpl
dec
dec
sub
dec
mov
cmp
fistpl
pop
daa
cmp
int3
fisubs
movsl
and
pop
loope
push
shl
jne
adc
in
xor
dec
fadds
inc
push
sbb
jno
js
jp
jle
mov
fisttpl
push
inc
stos
test
xor
ljmp
call
daa
add
sbb
push
and
push
mov
add
lock
stos
cmpsb
push
seto
or
xchg
sub
mov
and
ret
test
imul
jmp
jp
in
inc
push
adc
nop
push
xor
cmp
je
cli
mov
xchg
in
ret
mov
iret
lcall
mov
mov
cmpsl
push
inc
mull
addl
xor
mov
adc
data16
nop
or
push
pop
add
mov
xchg
mov
or
add
lahf
test
sbb
gs
adc
stos
fs
jb
adc
loop
cmp
iret
lods
sahf
testb
icebp
ss
leave
decb
mov
ror
jge
fdivs
adc
mov
mov
cmpsb
movsb
test
pop
out
mov
es
mov
push
stc
das
leave
aaa
push
dec
lds
pop
xchg
mov
or
sbb
loope
add
hlt
fisttps
push
lret
clc
scas
setnp
arpl
xchg
lret
loope
mov
or
pop
mov
or
out
dec
push
fsubrp
shr
inc
popf
cld
cld
xor
mov
icebp
rcll
sarl
bndldx
fwait
add
xor
dec
out
andb
cmc
mov
jge
scas
adc
fstpt
sub
int3
push
ret
insb
je
push
mov
cli
pusha
xor
popl
nop
dec
mov
xchg
sub
ljmp
movsl
cld
adc
jl
pop
paddb
rol
lret
enter
adc
and
jns
mov
xchg
jno
mov
cltd
dec
js
inc
call
outsl
bound
xchg
cli
pop
mov
pop
mov
mov
jb
jo
cmp
int3
call
sbb
aad
in
fistps
pop
xchg
cmp
sub
xchg
roll
adc
xor
pop
jecxz
dec
stos
add
and
fnsave
cli
repz
imul
adcl
xchg
int3
enter
add
xchg
inc
es
xchg
lds
aaa
into
lods
test
xor
adc
mov
push
lock
out
jmp
sbb
xchg
imul
adc
fidivs
shrl
aaa
bound
dec
pop
push
xchg
repnz
push
aas
sar
ljmp
and
shlb
dec
pop
cli
mov
ss
mov
pop
adc
inc
cwtl
in
shrb
fucomp
outsl
pop
in
enter
mov
es
pop
imul
and
sbb
ja
mov
jp
in
std
pop
xor
jmp
xchg
mov
cltd
ret
movsb
dec
push
leave
in
ja
fnsave
or
mov
xchg
and
inc
and
cmpsb
xor
aaa
cltd
jno
js
xor
push
cltd
stc
sbb
xchg
cmp
mov
loope
add
or
and
xor
jecxz
sbb
lret
mov
bound
cmp
inc
add
xchg
and
pushf
push
push
dec
lods
xchg
mov
pop
lahf
ss
aaa
mov
pop
leave
jle
push
popf
push
xor
mov
mov
test
mov
insb
leave
stc
push
jbe
pop
into
and
mov
out
sbb
sbb
jg
in
ror
not
pusha
and
sub
mov
outsb
sub
dec
mov
mov
or
push
adc
and
fmuls
mov
lods
out
pop
outsb
popf
int
jp
mov
cmp
cltd
add
je
mov
xor
je
gs
push
test
leave
xor
sub
idivb
push
bnd
in
pop
pop
cmpsb
fsubl
add
rorl
lea
movsb
mov
lea
ss
lds
adc
repz
sbb
xchg
outsl
mov
mov
int3
orb
and
int
pop
aaa
ret
mov
js
jle
loope
fs
adc
or
cwtl
repz
push
rorl
insb
and
fmuls
int
jb
or
lcall
loope
push
fbld
or
pop
mov
imul
aad
push
insb
shld
icebp
loope
inc
lods
sub
ljmp
adc
push
adc
sbb
mov
addr16
cltd
xor
push
jb
mov
hlt
je
cwtl
mov
test
std
test
and
outsb
insl
sub
test
pop
push
mov
gs
lret
enter
out
dec
lock
jle
jle
xchg
mov
ret
xchg
dec
fs
lahf
and
mov
daa
mov
js
inc
push
fmull
sub
xchg
mov
cmp
lahf
test
es
mov
test
jp
imul
leave
fistl
push
fwait
push
cltd
es
out
sub
fstps
in
sar
pop
cmp
pop
push
sub
cld
rcrb
jecxz
mov
mov
add
outsb
inc
fmuls
sbb
adc
xchg
and
mov
xor
sbb
inc
mov
adc
jb
mov
test
mov
mov
js
mov
fdivrl
xchg
add
mov
test
or
jo
test
xchg
dec
mul
dec
xor
fnstenv
test
cmp
mov
jo
cmpsl
mov
lret
push
in
jmp
int
mov
popa
in
cli
or
xor
insb
pop
int3
pop
addr16
jns
call
hlt
mov
xor
test
adc
xor
push
cmpsb
sbb
cmp
push
loope
pop
adc
test
pop
imul
sub
insl
add
lahf
push
nop
imul
sbb
mov
adc
mov
data16
mov
sub
pop
sub
es
lods
push
push
sub
sbb
dec
lahf
lea
cs
push
add
es
jb
mov
repnz
fidivrl
mov
dec
sbb
dec
lret
mov
roll
imul
lret
loopne
stc
shlb
rorl
lea
mov
dec
sub
aaa
pop
dec
arpl
cmp
dec
add
rcrb
xchg
adc
stos
dec
sahf
bound
and
mov
adc
add
scas
shr
mov
pop
les
nop
sub
mov
out
dec
loop
ja
rcrb
imul
pop
in
push
sub
pop
in
ficompl
mov
daa
sub
sub
ror
repnz
jmp
scas
push
cmpsl
outsb
icebp
dec
mov
adcb
mov
xor
xchg
test
dec
pop
je
loopne
in
sub
loope
cmp
xor
add
sti
xorl
pop
cli
and
loopne
scas
loope
jmp
add
bound
out
mov
dec
cmp
ret
xchg
adc
xor
ss
insb
dec
in
mov
add
popf
cmpsl
cmp
scas
test
dec
lods
flds
push
pop
push
jmp
inc
mov
adc
add
pop
repz
fwait
out
testb
shrl
inc
dec
lock
jp
fsubrs
cltd
stc
sub
notb
cltd
jae
mov
fiadds
pop
jmp
outsb
or
lds
jl
lahf
lods
mov
lret
jl
xchg
mov
sbb
movl
xor
pop
sbb
dec
pop
lea
iret
sbb
fwait
mov
lahf
fldenv
notb
test
push
push
dec
add
jg
pushf
scas
ficoms
adcb
lock
shl
or
scas
add
push
fists
and
das
xchg
or
dec
mov
jp
fwait
mov
ja
sti
jg,pn
inc
push
cmp
adc
ljmp
cmp
or
push
subb
cs
mov
lock
ret
mov
pop
cmc
xchg
out
inc
push
test
rolb
ds
loope
call
scas
sub
cs
push
mov
mov
xorl
mov
pop
xchg
mov
xor
cmp
js
js
inc
fldl
cs
ja
or
sbb
std
stos
shr
icebp
lret
sbbl
idiv
push
scas
fisubs
mov
adc
leave
lea
jae
mov
out
xorl
cmp
cld
mov
fldl
in
stos
jmp
jecxz
cmp
jge,pn
push
fbld
mov
test
mul
xor
xchg
mov
fs
pop
loop
xchg
xchg
scas
loopne
loopne
and
test
mov
loope
mov
or
fwait
mov
push
mov
mov
adc
lcall
dec
sar
jae
stos
xchg
repnz
in
in
push
fsubrp
mov
mov
fcmovbe
add
inc
pop
add
loopne
mov
test
call
add
es
lock
xor
pop
out
mov
push
sub
xor
ret
pop
pop
ljmp
jno
mov
cmp
mov
add
xchg
ss
mov
and
sarb
shll
mov
pop
stos
mov
popf
xor
sub
dec
jmp
mov
pop
xor
mov
jl
pushf
mov
sbb
fwait
sub
testl
mov
mov
cmpsl
jecxz
mov
mov
inc
fiadds
jne
adc
or
add
xor
shld
cmpsl
repnz
repz
sub
push
inc
lcall
pop
xor
pop
ficoms
mov
sub
pop
mov
dec
ret
loopne
test
xchg
dec
jge
adc
rcrb
in
xchg
jbe
data16
mov
sbb
push
shr
mov
sarl
out
popf
mov
addr16
aaa
cmpsb
cmpsl
imul
fbstp
sub
add
jecxz
mulb
adc
cltd
mov
out
or
mov
mov
fcompl
int
push
mov
mov
mov
adc
daa
mov
xchg
xchg
mov
mov
sbb
data16
outsb
push
mov
mov
inc
cmp
pop
and
pop
daa
pop
jmp
movsb
in
jmp
dec
xorb
sbb
dec
iret
outsb
aas
test
jno
outsl
ret
fistpll
sbb
jns
popf
mov
sbb
and
sub
inc
mov
sbb
outsb
lods
test
insl
fsub
xchg
lcall
push
sti
xchg
xchg
inc
push
mov
stos
sarb
cmpsb
jmp
fdivl
insb
push
jae
loopne
gs
mov
xchg
push
lahf
push
scas
in
xchg
pop
loopne
mov
lock
sbb
mov
xor
mov
cmp
and
jbe
jle
shll
loopne
lea
push
repnz
pop
add
hlt
mov
dec
fistps
sbbb
nop
cmp
cmp
sbb
inc
jmp
dec
mov
mov
and
stos
mov
mov
inc
in
pop
hlt
flds
and
movsb
or
aam
mov
inc
std
mov
jno
mov
lahf
les
jg
dec
push
xor
data16
cwtl
xor
mov
out
inc
testl
fsubrl
push
inc
mov
fstpt
dec
enter
ljmp
iret
lcall
sbbb
dec
clc
adcb
in
push
jmp
repz
sub
sub
scas
cli
or
push
nop
inc
insb
es
lea
pushf
mov
movsl
push
lcall
inc
push
stc
add
out
in
cmp
lods
cmp
cmp
mov
inc
jb
or
cmpb
push
push
ds
xlat
dec
ret
lcall
xchg
xlat
ret
movsl
stc
scas
addl
mov
sahf
es
sub
mov
or
pop
dec
and
cld
jb
test
sbb
pop
repz
es
cmp
pop
mov
jae
out
pop
sbb
imul
mov
and
insb
and
test
mov
js
and
stos
mov
test
pusha
loope
subb
jb
mov
sbb
mov
xchg
xchg
loopne
negb
or
jae
js
xchg
sub
or
scas
inc
stos
or
mov
int
jae
pop
mov
xchg
icebp
cld
inc
test
dec
fisubl
jmp
js
cmpsl
jg
add
sti
test
ss
fisttpl
fldl2t
pop
ds
in
lahf
xor
dec
add
scas
xor
ljmp
adc
and
je
mov
aas
divl
call
push
sahf
lods
sbb
scas
mov
mov
or
add
jbe
out
mov
mov
or
shlb
add
sub
mov
and
cmp
sub
cltd
cld
lret
outsb
outsl
push
mov
mov
mov
push
enter
xlat
push
sub
jns
xlat
mov
loope
inc
outsl
push
fdivrl
aam
add
ret
stc
sbb
mov
out
or
mov
xchg
fldcw
aas
rcr
sbb
or
repnz
adc
jo
adc
inc
xchg
mov
xor
shlb
or
aam
push
push
and
loopne
aam
xchg
fstl
insl
add
mov
push
jg
add
mov
pop
add
repnz
pop
adc
jno
xor
xchg
fwait
sub
getsec
bound
insl
jmp
push
cmp
xor
sub
outsb
inc
pushf
cld
jge
repnz
lea
mov
into
and
push
jle
or
cmp
test
outsl
and
xchg
add
pop
in
lret
sbb
stos
dec
scas
loop
aad
roll
pop
dec
cmp
sub
inc
loop
lahf
scas
inc
in
lock
test
int
add
rorl
test
test
enter
xor
iret
dec
mov
pop
push
ss
inc
or
pop
pop
jb
dec
rcl
lods
inc
jmp
push
insb
fstpl
dec
xchg
pop
add
incl
test
dec
pop
add
fldenv
aam
cli
fldl
popf
jbe
testl
scas
mov
inc
int
pop
js
shlb
pop
add
test
rorl
add
and
dec
fldcw
mov
sbbl
mov
insl
daa
ret
pushf
cs
out
or
shrb
es
icebp
loopne
out
or
push
xor
in
and
testb
repz
or
shll
das
jecxz
rcll
sbb
repnz
movsb
cmp
pop
outsb
lods
js
pop
stos
pop
rorl
sub
inc
cmp
jge
dec
loop
jnp
sub
cwtl
jmp
aad
dec
fsubs
loop
ret
ss
sbb
ret
data16
vmwrite
jge
xchg
sub
sub
cltd
push
push
cmp
imul
jmp
inc
icebp
popa
xor
outsl
andl
enter
les
dec
xchg
lds
xchg
xchg
in
push
push
mov
repnz
jle
jnp
push
mov
dec
push
jg
cs
loop
sub
mov
lret
push
dec
cltd
call
outsb
lret
mov
cmp
inc
std
fcmovnu
filds
std
test
and
pop
inc
adc
jno
aad
out
js
movsl
or
mov
inc
xchg
ja
shll
push
sub
test
and
clc
out
sub
xchg
decb
xor
dec
xchg
cs
push
dec
and
int3
popa
pop
push
insb
mov
xchg
inc
leave
dec
frstor
push
mov
loopnew
sbb
bound
adc
pop
ljmp
neg
add
jp
aaa
add
jbe
push
and
insl
leave
sbb
jns
jmp
push
repz
and
pusha
fnstsw
xchg
mov
lock
pop
cltd
push
fisttpll
rcrl
and
xchg
stc
adc
popa
xchg
adc
cwtl
or
scas
fwait
or
into
mov
mov
xlat
test
pop
not
cmc
jecxz
push
cmpb
xchg
mov
repnz
lcall
mov
xchg
ds
xlat
mov
push
enter
stos
jle
push
out
push
stos
push
movsl
jnp
mov
clc
push
jae
push
int3
push
adc
and
lret
call
adc
mov
lret
and
sub
movsl
out
jnp
and
mov
pop
xlat
ljmp
aaa
inc
pop
lock
dec
mov
sbb
outsl
in
rol
push
xchg
inc
xlat
pop
neg
aad
pop
testb
pop
xchg
enter
mov
test
jecxz
and
test
cld
or
dec
jne
aad
int
push
push
into
movsb
addr16
ja
fucomip
inc
adc
aaa
cmpsl
test
fwait
clc
mov
mov
mov
lret
cmpsl
mov
xchg
shlb
pushf
loop
lret
pop
outsb
lea
mov
mov
push
pop
xchg
mov
sarb
push
test
or
jle
shlb
mov
pop
out
test
ljmp
idivb
fisttpll
testb
or
cmc
movsb
cmp
jl
fdivr
dec
ret
xchg
bound
movsl
pop
cmc
mov
bound
mov
dec
mov
stc
pop
outsb
push
call
jecxz
lret
adc
fidivl
jns
jne
lods
dec
fwait
mov
hlt
jp
and
jbe
mov
adc
cli
imul
fwait
pop
sbbb
loopne
gs
data16
ss
mov
inc
movsl
mov
or
inc
aaa
add
imul
dec
icebp
mov
repnz
js
fbld
lret
mov
clc
aam
and
push
cmp
and
test
xchg
mov
mov
in
mov
ja
dec
test
push
cwtl
sbb
jo
lcall
add
scas
sub
mov
cmc
out
sahf
mov
cmp
mov
xchg
testl
add
in
inc
faddl
or
test
jmp
int
out
push
mov
xor
outsl
js
in
test
notl
movsl
test
sbb
stos
dec
bound
jle
ret
jns
or
enter
adc
mov
jecxz
pop
xor
int
inc
leave
out
fwait
aaa
sbb
jl
or
out
xchg
dec
es
xchg
mov
orb
ljmp
mov
dec
lods
cmp
idivl
rcrb
inc
inc
fwait
cld
jo
jae
int
mov
mov
and
cmpb
mov
lcall
and
inc
pop
adc
jno
or
add
xor
inc
cmc
pop
cld
and
sub
pop
mov
aad
adc
add
xlat
dec
dec
pusha
lods
mov
cmp
jbe
push
rorb
lds
divl
mov
push
add
jg
mov
mov
mov
push
cwtl
xchg
xor
dec
out
mov
push
add
sti
sub
and
xchg
das
pop
sbb
dec
out
loop
xor
jp
xchg
sub
faddl
push
mov
arpl
or
dec
push
push
inc
fstpl
sti
pop
add
jnp
repz
into
jns
inc
dec
imul
aaa
mov
jno
gs
inc
push
fwait
xor
xlat
scas
lods
or
sub
clc
es
adc
xor
call
out
jl
dec
loop
cmpl
mov
inc
or
shll
sbb
adc
lds
inc
xchg
hlt
orl
adcl
pop
cltd
jne
jb
mov
ret
and
push
mov
jno
jg
add
pop
and
test
fcoml
mov
loop
xchg
jp
scas
lock
shlb
jne
cmpsl
int
jle
roll
incl
sahf
femms
adc
cmpsb
and
movsb
fs
pop
lds
sub
sbb
cmp
lock
sarb
lods
scas
icebp
call
sbb
xor
popa
rol
lods
pop
int3
or
jge
in
mov
fstp
jge
mov
jae
mov
push
mov
rcr
das
jecxz
pusha
in
out
cmpl
cmp
jp
jp
pop
es
decl
in
sbbl
or
sub
mov
inc
mov
ja
in
sub
inc
pusha
cmp
rcrb
enter
mov
fistpl
int3
pop
xor
scas
bound
ja
insb
mov
sub
repz
add
sbb
stos
pop
mov
fucomip
dec
ret
ret
je
xchg
xor
sbb
mov
and
xchg
xor
cli
test
xchg
lods
jle
inc
push
dec
movsb
in
orl
pop
cmovo
xchg
sub
push
mov
add
inc
push
inc
inc
lds
out
imul
mov
sub
xor
cli
sbb
mov
pop
testl
ds
outsl
pop
inc
adc
jae
jne
dec
xor
xchg
add
xchg
test
aam
cmc
or
das
mov
popa
push
adcb
add
ds
mov
call
mov
clc
inc
inc
cmpl
into
adc
js
loop
push
or
sub
movl
cmp
daa
inc
in
jle
test
mov
leave
je
adc
mov
add
lret
cwtl
fnsave
inc
gs
call
lea
out
mov
adc
outsl
or
test
pusha
ret
call
xlat
jne
mov
data16
test
cmp
int
icebp
adc
sub
cmp
lcall
in
outsb
ljmp
imulb
adc
dec
inc
iret
or
in
add
mov
inc
or
cmp
cmp
ret
xor
ds
xchg
out
popf
ds
bound
xor
mov
gs
aad
ss
push
and
xchg
adc
outsb
sub
dec
in
mov
xchg
push
into
mov
clc
push
push
push
and
push
or
dec
inc
cmp
mov
psubw
insl
push
scas
fs
xor
lods
inc
sub
xor
in
xor
out
xchg
pop
add
femms
push
lret
nop
daa
bound
push
movsl
cmp
push
shll
push
neg
lods
mov
dec
add
and
push
xchg
dec
adc
jno
das
xchg
hlt
fmul
call
bound
jl
jb
into
test
xor
mov
sbb
push
dec
and
loop
push
lds
adc
jecxz
orb
jae
test
xor
mov
out
jl
adc
jle
arpl
mov
mov
mov
enter
inc
push
ret
pop
xchg
sbb
das
stc
mov
xor
lods
add
or
push
fildll
mov
fcompl
jnp
push
fs
pop
popf
int
dec
jno
add
jns
push
inc
mov
pop
icebp
rcrb
cmp
icebp
daa
inc
jmp
adc
xor
es
stos
inc
mov
xor
dec
stos
push
or
xor
mov
sbb
jp
sbb
aam
mov
shlb
std
push
or
cmp
std
dec
and
xor
fisttpll
mov
push
mov
pop
or
push
fwait
lahf
mov
or
clc
jg
sub
pushf
jl
push
es
mov
pop
push
pop
test
sub
sbb
data16
add
popf
ret
test
inc
cmp
loop
stc
data16
mov
movsl
push
out
fdivrs
mov
cmp
in
das
cmp
fwait
jnp
mov
push
cmc
mov
and
adcb
dec
mov
scas
jns
push
add
adc
arpl
int
pop
mov
mov
sbb
pop
push
iret
out
add
sub
add
retw
fmul
adc
fs
adc
mov
mov
dec
sbb
ror
rcrl
adc
test
mov
aas
inc
and
inc
xor
movsl
in
pop
push
mov
sbb
sub
call
js
jp
lock
inc
fdivrs
pop
notb
out
outsb
cmp
ds
scas
stc
aas
rorl
mov
xor
inc
jo
lret
out
xchg
and
ret
leave
xor
stc
aaa
into
sub
push
mov
sub
dec
pusha
cmp
xchg
and
mov
gs
xor
xor
mov
popf
lret
xchg
push
xchg
insb
mov
lea
xchg
lret
sub
dec
out
ffree
inc
out
push
xor
xchg
xlat
sub
jl
cmpsl
mov
mov
icebp
mov
aad
pop
dec
loopne
jns
xchg
inc
cmp
cmpsl
out
adc
fmull
cli
sarb
mov
imul
xor
addr16
pop
mov
adc
or
icebp
int3
in
sbb
jmp
sahf
mov
lret
xor
pop
add
adc
adc
push
jmp
and
outsl
xchg
mov
push
sbb
jmp
imul
or
add
jp
cmc
stos
in
dec
mov
cmp
ljmp
push
and
aaa
push
daa
push
in
test
outsb
cltd
pop
adc
push
xor
cltd
jb
inc
xchg
add
cmp
xchg
mov
mov
jbe
js
sbb
cli
cmp
dec
lock
dec
ja
dec
test
pop
mov
xor
xchg
push
xchg
cmpsl
into
mov
cs
daa
fldt
ret
arpl
hlt
andb
cmp
or
gs
loop
push
mov
pop
sbb
cmp
push
cwtl
adc
mov
jo
std
mov
nop
fnstenv
es
adcb
cmp
jns
cmpl
cmp
jbe
adc
ljmp
mov
stos
jo
xor
and
scas
ja
or
ljmp
mov
push
data16
in
push
inc
inc
sbb
or
inc
sahf
push
imul
jl
mov
jnp
inc
cmpsb
mov
cld
imul
pop
imul
add
fsubr
cmp
cli
fwait
test
dec
pusha
je
sbb
jne
inc
push
push
popf
xchg
scas
inc
inc
mov
mov
and
xchg
xor
lahf
cltd
or
adc
push
sbbl
popa
sbb
rcr
and
add
sti
dec
dec
inc
aam
and
test
sub
les
pop
lods
shll
mulb
inc
rclb
fmull
sbb
dec
xlat
mov
mov
pop
call
int
pop
sbb
dec
cld
cmp
sbb
inc
adc
dec
cmc
mov
xchg
dec
js
popa
clc
mov
cli
xchg
mov
outsb
jno
or
mov
cmp
pop
out
into
pop
loop
dec
pop
mov
shlb
adc
pop
dec
outsl
jp
adc
loope
sbb
cmp
inc
jle
cmc
mov
sub
add
and
push
pop
loop
mov
add
icebp
es
jecxz
mov
sti
loopne
xchg
mov
xor
out
inc
mov
jne
outsb
sub
mov
mov
jg
push
lcall
cmpsl
lds
movsl
push
sub
push
or
cmp
cmp
pop
or
push
cmp
pop
clc
pusha
or
mov
ss
shlb
mov
push
or
int
and
or
ds
push
mov
dec
inc
inc
imul
outsl
subl
mov
push
shr
mov
push
subb
movsl
inc
pop
pusha
pop
mov
mov
flds
push
test
xchg
mov
addr16
cwtl
iret
mov
scas
mov
das
xlat
sbb
add
sbb
faddl
out
xchg
push
addl
or
dec
add
cmpsb
xor
push
sub
sub
jo
das
sub
mov
cmpl
and
cmp
cmp
mov
loop
shlb
lock
imul
ljmp
jne
hlt
fucomp
call
in
ss
out
leave
pop
orps
jo
fsubr
or
int
or
movsl
and
rcr
subb
mov
fwait
push
xor
ljmp
mov
cmp
add
xor
or
dec
shrb
adc
mov
mov
cltd
jl
mov
loop
std
loopne
pushf
xchg
xlat
jbe
push
add
and
or
pop
mov
cmp
es
ret
sbb
ret
mov
shr
ja
aaa
cmp
hlt
lods
sbb
sub
sbb
xor
outsl
sbbb
cmpsb
in
fistps
inc
cmc
mov
call
pop
push
lock
cmc
pop
jae
xor
cmp
mov
test
popa
xor
popf
aad
pusha
inc
imul
cmp
int3
arpl
pop
adc
icebp
jmp
inc
fdivrl
mov
and
sub
lahf
inc
lock
shl
ficoml
or
mov
ret
and
and
nop
lret
push
xor
inc
jl
mov
push
jle
fmuls
dec
outsb
mov
clc
outsb
ja
imul
repnz
test
xlat
into
push
dec
std
sti
addr16
pop
negl
clc
int3
mov
fwait
dec
fwait
inc
notl
loop
addr16
dec
outsb
add
mov
and
sub
push
dec
stos
and
jl
mov
mov
aam
push
out
repz
and
jne
mov
mov
movsl
fwait
xor
pop
les
test
inc
pop
icebp
leave
shlb
into
add
js
out
dec
mov
sub
push
pop
fwait
inc
std
pusha
les
mov
pop
xchg
mov
dec
adc
mov
bound
mov
std
test
cmp
aam
mov
aaa
cmp
and
popl
icebp
pop
lret
das
adc
and
sbb
cli
pushf
imul
clc
jnp
push
cmpsb
add
es
scas
aas
imul
orl
ja
seta
cwtl
int3
mov
dec
dec
out
and
cwtl
cmp
shl
jbe
hlt
adc
dec
mov
add
sbb
xchg
out
jne
aaa
call
in
cli
in
xchg
jmp
jae
out
cwtl
mov
lret
dec
ds
mov
out
cmp
add
icebp
adc
push
add
in
popa
dec
fsts
lock
pop
cmp
hlt
jae
inc
sub
cmpsb
sbb
jl
bound
dec
cltd
pop
pop
inc
pop
aam
insl
adc
inc
mov
in
std
sbb
or
push
test
stos
push
xchg
mov
mov
leave
mov
push
push
mov
jno
push
movsl
lock
push
lret
xchg
sub
dec
popa
fsubrs
imul
inc
and
out
add
arpl
aam
mov
stc
and
push
aam
mov
repnz
fists
xchg
inc
jl
rcrb
das
xchg
cmp
jmp
xchg
sub
mov
popf
adc
divb
xor
push
fisttpll
out
xchg
mov
pop
imul
cli
dec
and
mov
sahf
xor
inc
or
insl
adc
xor
push
sub
aaa
icebp
dec
mov
jl
inc
xchg
rorl
xchg
orb
aad
xor
dec
and
cmc
adc
cmp
pop
into
lret
loope
mov
arpl
push
ja
mov
and
es
xchg
enter
rcrl
std
dec
fcomi
test
lea
ffree
sub
adc
lcall
mov
data16
lods
inc
pop
icebp
mov
out
lret
adc
mov
push
fiaddl
pop
cmp
jo
mov
cmpsb
les
push
pop
ficoml
xchg
out
int
bound
xor
push
popl
and
fsubrl
repnz
cmovo
xchg
inc
leave
insb
aaa
shlb
mov
nop
flds
ror
enter
xchg
jne
aam
dec
leave
inc
fsubs
cmpsb
dec
or
jbe
and
adc
jl
leave
test
ja
fwait
mov
cld
jae
fcompl
pop
cld
pop
mov
jmp
adc
inc
push
iret
sbb
mov
loope
rorl
push
jbe
sub
shl
add
pop
popa
aam
lcall
dec
cmp
ljmp
insb
mov
dec
inc
and
imul
cmp
adc
xor
inc
mov
sti
and
cs
dec
xchg
adc
iret
mov
fbld
aad
popa
pop
xor
mov
and
call
sbb
jo
int
jmp
mov
mov
cmp
or
outsb
dec
mov
lret
out
jbe
dec
jecxz
xchg
test
call
inc
sti
repz
pop
clc
jae
sbbl
or
push
stos
and
xor
imul
jae
push
dec
inc
xchg
icebp
xor
imul
sub
cmp
sahf
std
or
mov
push
movsb
js
imul
cwtl
dec
xlat
cwtl
xor
mov
lret
stc
sub
mov
ja
enter
aam
fidivrl
neg
push
cmovp
aam
js
dec
and
lcall
inc
dec
add
shlb
test
jb
ss
cmp
nop
in
or
and
xor
pop
inc
fimuls
cmpsl
gs
push
daa
jbe
dec
hlt
imul
pop
lret
cld
pusha
stos
adc
mov
push
ljmp
pop
out
ret
mov
out
jbe
or
int
out
ret
or
ds
sub
jge,pt
sbb
dec
ret
xor
add
jae
mov
xchg
ja
push
hlt
jno
sbb
mov
mov
inc
data16
gs
sarl
inc
pop
cltd
jo
xchg
adc
loop
andb
repnz
in
sbbb
cmpl
push
scas
adc
xchg
push
sub
ret
ret
jle
popf
dec
movsb
inc
and
lret
pop
aaa
int
cmp
cltd
mov
cmp
addr16
dec
pop
pushf
mov
or
ffree
aam
dec
xchg
aad
ret
jg
scas
scas
pop
mov
pxor
mov
fldl
xchg
loope
roll
inc
sbb
pop
rorb
jecxz
adc
repnz
sub
push
pop
cmp
mov
and
test
jge
mov
inc
ret
loop
lock
imul
outsl
push
out
or
add
aas
movsb
xchg
ss
and
test
push
mov
cmp
into
mov
push
push
test
add
jo
inc
adc
cld
aam
mov
add
sbb
das
jo
fdivr
jge
aaa
inc
lret
xor
adc
mov
push
and
into
pop
ret
sbb
loop
adc
inc
shrl
or
addb
mov
and
xchg
push
fdivrs
loope
push
xchg
pop
pusha
lret
add
test
push
xor
in
cmp
pop
dec
les
mov
mulb
clc
lods
dec
xlat
xchg
ds
insb
adc
pop
mov
int
stc
nop
scas
scas
jle
add
sub
pusha
ss
jb
xor
arpl
push
outsb
popw
fisubl
push
xlat
sbb
xor
outsb
jl
fs
jae
dec
xor
jns
mov
ret
scas
fsub
cld
aaa
repnz
fsubs
mov
xchg
xor
fwait
repz
arpl
jge
mov
dec
jecxz
mov
ret
sub
cld
xchg
sub
enter
jp
imul
mov
movsl
test
fcoml
inc
jb
pop
sbbb
push
and
clc
fsubr
or
xor
rorl
sbbl
cmp
inc
mov
aas
in
adc
push
mov
push
mov
fstpl
movsb
sbb
jns
call
test
sub
stos
xchg
jae
fwait
dec
push
cmpsb
mov
jge
or
push
jnp
std
stos
and
or
data16
inc
pushl
repz
dec
dec
loopne
xor
bound
iret
jecxz
mov
mov
push
jo
push
xchg
dec
lret
mov
inc
mov
test
cmpsl
sbb
andl
jno
xchg
jp
stos
fildl
test
outsl
daa
inc
push
pop
dec
sub
pusha
out
cmc
data16
lds
das
popa
mov
mov
or
mov
pusha
fs
movsb
test
jl
jge
call
sub
divl
iret
mov
and
pop
sbb
insl
sbb
mov
jge
inc
mov
mov
or
and
push
movsb
push
inc
dec
mov
insb
mov
mov
inc
out
push
gs
xchg
sbb
jb
scas
sub
push
out
sahf
into
rolb
outsb
dec
mov
loop
scas
cmp
out
nop
aaa
iret
lds
roll
pop
mov
shr
dec
sbb
test
inc
xchg
sbb
test
cmp
push
into
call
aam
cli
mov
jge
icebp
xchg
jbe
dec
dec
out
je
sub
addr16
mov
cmpsb
push
fidivrs
pop
mov
insl
leave
sbb
push
inc
jnp
sub
cli
movsl
inc
pushf
pop
adc
jg
mov
leave
mov
push
push
std
jl
shll
jo
and
inc
loope
dec
pusha
sub
dec
lret
mov
xor
inc
mov
lahf
adc
or
jle
fcomip
dec
xchg
xchg
xchg
add
inc
mov
mov
mov
push
add
fwait
xor
mov
movsl
or
mov
fcmovnu
insb
add
imul
repz
mov
cmp
mov
push
ds
mov
jo
into
scas
dec
sbb
sbbb
mov
lahf
ss
mov
cmp
mov
cld
xlat
repz
sub
lods
pop
aaa
cwtl
shlb
mov
mov
xchg
dec
or
mov
in
jne
pop
icebp
pusha
adc
xchg
xor
cwtl
dec
shrl
sbb
iret
into
push
bound
mov
dec
insl
xchg
mov
mov
cmpb
mov
adc
inc
aad
add
loope
les
jae
adc
in
sti
cli
decb
add
jle
dec
xorl
enter
in
add
daa
je
push
cwtl
push
idivl
bound
rorl
jnp
xor
sub
sti
xchg
jnp
aas
lcall
cmp
and
std
push
repnz
subl
xlat
fs
jae
aas
adc
cli
sbb
hlt
xor
xchg
sub
cld
test
xor
test
jecxz
push
je
mov
inc
mov
add
leave
jnp
fbstp
lret
rorl
cmpsl
or
inc
aas
sbb
add
setnp
pop
dec
frstor
dec
fisubrl
repnz
popa
inc
mov
mov
sub
push
popf
divl
inc
sub
incb
xchg
mov
sub
push
stc
sub
out
cmp
mov
mov
jnp
and
stc
nop
ss
imul
adc
adc
movl
pop
sahf
lahf
lret
je
imul
in
mov
dec
xchg
mov
jo
fadds
mov
outsl
dec
mov
adc
mov
lret
pop
or
xchg
daa
aaa
mov
inc
adc
rclb
xchg
xchg
add
aaa
inc
pop
mov
pop
lods
jg
pop
iret
add
stc
sub
pop
mov
mov
cld
ucomiss
sbb
mov
adc
je
jl
and
push
popf
inc
mov
xor
mov
js
pop
and
mov
pop
cmp
arpl
test
fs
sub
adc
out
popa
fsubr
lcall
movsb
add
lds
in
mov
lock
mov
jge
shll
dec
arpl
into
and
leave
xor
pop
rolb
inc
daa
and
xchg
push
inc
lahf
testl
lret
cmp
aad
fidivl
cmc
out
cmpsl
pusha
cwtl
and
mov
loopne
loopne
add
cmp
mov
dec
pop
and
push
in
inc
aam
mov
jmp
inc
xor
rolb
pushf
std
out
test
cli
aas
jl
fcoms
into
int
ret
jle
pop
outsb
sbb
out
and
xchg
xchg
mov
repnz
test
lods
sub
push
sbb
popf
cmp
jle
xor
imul
jb
leave
in
xchg
inc
fcmovnb
fldl
test
mov
mov
in
cmp
outsl
push
jbe
cmp
inc
fcmove
sbb
jmp
clc
sbb
jmp
pop
aaa
mov
xlat
lahf
loope
and
scas
out
jb
lahf
pop
lahf
push
in
cmc
inc
std
in
fwait
je
jo
cld
sahf
sbb
cltd
xlat
mov
and
fcompl
or
dec
out
mov
loopne
xor
fbld
dec
shrl
mov
icebp
pop
into
ret
add
mov
mov
rorl
pop
dec
pop
roll
sbb
lds
push
lods
add
add
inc
push
adc
insl
enter
pushfw
jo
cmpsl
xchg
fldcw
adc
sub
push
xor
inc
mov
test
icebp
inc
xchg
repz
sbb
ds
repz
movsb
in
dec
dec
mov
jb
dec
testb
test
aad
add
mov
roll
inc
out
cld
mov
fisubl
inc
pusha
mov
cltd
or
into
pusha
imul
inc
jl
fdivrp
sub
xor
shll
into
add
push
test
test
adc
push
insl
fdivrl
push
mov
out
add
mov
xor
mov
repz
inc
push
push
pusha
jp
outsb
push
addr16
or
pushf
xor
push
inc
dec
scas
repnz
inc
adc
jmp
xor
sub
push
mov
sub
aas
jne
inc
into
mov
int
and
mov
add
push
or
xor
mov
xchg
mov
push
mov
xor
jmp
adc
dec
and
push
push
sti
aaa
sub
loop
mov
stc
xchg
jno
stos
inc
sbb
ds
mov
sub
call
dec
pop
fisubl
les
adc
popa
aam
fnsave
hlt
dec
dec
flds
outsb
jnp
mov
push
lock
jg
pop
aad
pop
pop
jne
int
sbb
aad
inc
cld
push
adc
outsb
iret
xor
arpl
lock
xor
popl
icebp
mov
mov
mov
ljmp
xlat
or
enter
icebp
pop
inc
xlat
mov
mov
jp
fs
lods
loopne
add
mov
fidivrl
mov
fwait
xor
repz
cmpsl
sbb
adc
jns
insb
ret
mov
mov
cmp
mov
sub
dec
fldln2
xor
and
stc
stc
or
aad
data16
ja
dec
in
xor
into
in
insb
add
sbb
sbbb
ss
dec
cmpsl
clc
jmp
mov
incl
je
xor
xchg
repnz
outsl
pushf
dec
or
sub
cmp
mov
jg
inc
and
outsl
cld
sub
or
xchg
cmpsb
aaa
ror
push
jecxz
xor
mov
incl
aaa
iret
push
cld
int3
arpl
rorb
sti
push
pop
adc
inc
test
das
mov
popa
fsubrp
xchg
pop
rep
sbb
rclb
mov
stc
test
lock
adcb
xchg
int3
es
xor
imul
fnstsw
hlt
inc
enter
test
cmp
mov
sahf
push
jle
pop
daa
ja
or
add
mov
dec
mov
inc
push
repz
dec
test
sbb
call
jge
mov
or
add
jg
repnz
push
dec
fnstsw
bound
stc
lcall
inc
inc
test
fidivrl
cmpsl
xchg
mov
stos
movb
shll
mov
cmp
bound
push
rcll
mov
jns
shlb
pop
xchg
aad
add
xor
mov
ss
adc
sbb
popl
inc
jle
int3
pop
mov
pop
aas
test
in
push
out
mov
lret
imul
push
mov
jo
pop
sub
jecxz
fidivs
cmpsb
xor
push
call
das
fisubrs
dec
int3
mov
jle
mov
sahf
lahf
lret
push
push
lods
pop
dec
aam
lods
and
add
pop
inc
enter
lcall
sbb
jecxz
xlat
test
xchg
mov
incl
lret
fildl
mov
inc
and
inc
cmp
stos
lahf
add
lret
pop
dec
add
mov
stos
in
sbb
sub
pop
iret
sbb
cltd
add
rcl
cld
lock
test
addb
xor
push
pop
out
cmp
out
std
rcrl
jge
xor
dec
and
jge
mov
fnstcw
mov
pop
test
mov
push
jmp
push
stos
outsl
add
scas
dec
mov
sub
call
and
call
hlt
and
xor
and
fcmovu
mov
inc
cmp
loopne
mov
mov
inc
xchg
or
mov
cmp
shrl
xchg
cmp
push
fildll
lods
sbb
into
fsts
test
pop
inc
push
mov
ret
pop
xchg
pop
cld
cmp
cmp
scas
les
cld
out
popa
jp
xchg
sub
pushf
les
xchg
dec
mov
jg
stos
in
push
adc
fistpll
pushf
in
xchg
outsl
xor
out
xor
mov
dec
jbe
std
cmp
insb
push
adc
jno
mov
outsb
lcall
jb
insb
adc
jns
sbb
pop
or
and
inc
inc
movsb
aaa
xor
out
dec
add
or
or
fidivs
mov
mov
mov
cmp
mov
popa
pop
mov
loopne
sub
out
adc
mov
in
cmpsl
inc
fistl
jge
sub
or
std
dec
mov
push
rcll
fs
push
xchg
ficoms
std
jae
inc
push
push
cmp
lahf
lods
pop
pop
jbe
jae
ljmp
movsb
cmp
lret
icebp
jecxz
fstpl
out
push
call
in
sub
adc
mov
mov
add
pop
in
sbb
enter
mov
les
ror
mov
ljmp
pmaxub
push
cmpb
cltd
out
push
dec
xchg
pextrw
nop
icebp
arpl
add
ret
cs
add
mov
ret
or
mov
pushf
testl
fwait
push
ficompl
std
vmovupd
jmp
movsb
inc
xchg
adc
sti
push
dec
xor
rorb
movsl
int
test
ss
or
sbb
mov
sbb
pop
add
mov
jbe
lods
test
xor
scas
js
lret
addb
inc
and
sbb
cmp
js
loop
das
addr16
sbb
shl
pop
xor
fistpll
inc
popf
stc
inc
fwait
data16
clc
xchg
stc
mov
fildl
or
jnp
es
clc
xchg
cltd
mov
and
adc
and
pcmpeqb
xchg
sub
out
add
mov
scas
cwtl
mov
sbb
repz
ds
test
pop
mov
add
sub
addb
jnp
dec
xchg
nop
pushf
leave
pusha
iret
in
ds
loope
jle
sbb
mov
mov
push
out
cmpsl
jmp
imul
sub
add
push
push
jb
adc
out
scas
sub
and
xor
fldl
xchg
mov
pop
in
aaa
int
loope
jo
cltd
push
stos
sbb
add
lret
or
out
dec
les
loop
outsb
add
test
mov
aaa
aaa
xchg
das
sub
jl
push
fdivs
fdivrs
pushf
icebp
pop
outsl
lods
mov
rcrl
test
pop
cmp
rorb
pop
dec
in
lds
add
or
pop
or
jo
mov
shlb
xlat
in
adc
adc
mov
or
imul
mov
in
push
lret
xor
sarb
push
fidivl
xchg
fwait
iret
mov
in
lock
fisttps
mov
and
rsqrtps
test
std
jo
inc
pop
lock
mov
mov
sub
xorb
xor
out
enter
sti
fs
cs
sbb
mov
flds
shl
cmc
jne
daa
adc
lods
jb
mov
jle
jae
je
js
es
xchg
dec
pop
cli
pop
repnz
cs
mov
add
daa
test
inc
sub
jmp
dec
sbb
dec
sbb
sarl
mov
fsubl
lret
lret
or
test
insl
jne
imulb
fsts
pop
in
hlt
mov
mov
icebp
and
add
mov
je
dec
add
jno
sar
or
popa
mov
xor
data16
xchg
mov
lods
xor
fnsave
jge
fsubl
mov
sti
subb
test
lds
iret
mulb
push
je
pop
cmpsb
cmp
xchg
inc
out
pop
dec
sbb
sbb
jo
sbb
shll
pusha
mov
dec
dec
push
test
pop
ret
lret
sahf
xor
stos
adc
paddw
std
outsb
pop
leave
filds
inc
push
sbb
jo
cmp
jns
mov
lds
mov
cmp
aaa
pop
lret
mov
pop
xor
xor
xchg
cs
loope
outsl
mov
mov
and
decl
jmp
push
push
ss
dec
pop
sti
cwtl
xchg
divb
rcll
aaa
adc
sub
dec
pop
or
sub
fnstcw
std
or
aas
rol
arpl
aaa
inc
push
pop
pop
outsb
push
in
fnstenv
je
xor
into
andl
pop
jmp
into
jno
in
sbb
dec
daa
popa
dec
pop
sar
cmp
adc
inc
adc
mov
pop
jl
mov
aaa
out
cmp
fmuls
sub
xchg
addr16
cltd
mov
xchg
notb
int3
rorl
subb
mov
into
mov
fwait
movsb
aas
sub
lods
push
jmp
dec
dec
mov
jmp
adc
mov
pusha
mull
or
stc
mov
jb
sbb
ds
in
in
jns
cmp
in
fidivrs
add
xchg
lret
addr16
mov
cmpb
repz
aam
inc
out
loopne
loopne
sub
mov
sbb
push
nop
mov
andl
xor
jb
gs
xchg
into
dec
in
outsl
adc
repz
or
cmpsb
out
les
fwait
hlt
mov
mull
call
sub
mov
jge
pop
in
push
or
jp
pop
icebp
lds
xchg
sub
jmp
jno
in
pop
stos
inc
dec
sub
daa
sahf
lret
mov
jle
sbb
movsl
cmp
mov
xlat
outsb
sub
add
rcrl
iret
dec
pop
and
stos
mov
jns
mov
imul
jne
sbb
sub
push
xor
xchg
rcrl
mov
or
ret
push
out
test
shlb
shll
ret
sahf
sbb
in
mov
addr16
movsb
cmp
loop
jp
repnz
xor
dec
jmp
cmp
loop
push
aam
inc
push
xchg
fisubs
mov
out
inc
fisubrl
add
lds
bound
xchg
push
pushf
movswl
stos
push
jecxz
sub
imul
test
mov
fldt
lods
fwait
dec
shrb
ds
repz
cmp
mov
jmp
cmc
jns
sti
fs
pusha
add
mov
xchg
sbb
es
mov
fildll
std
push
mov
adc
jo
push
in
orb
pop
add
xchg
movsl
push
and
pop
mov
and
in
cs
pop
aad
dec
dec
pop
sahf
inc
lds
mov
jae
mov
loop
adc
pop
sbb
js
add
test
cmp
mov
jge
fsubrs
mov
and
push
lods
out
dec
jae
cmp
push
jmp
out
mov
adc
je
sbb
stos
pop
scas
sbb
movsb
cmp
or
ret
mov
frstor
cmpb
pop
lock
in
or
in
cmpl
mov
xor
add
jl
xor
push
out
push
stc
sbb
je
or
add
xchg
sub
cmpsb
cmp
push
xor
dec
xlat
and
pop
xchg
aas
sub
xor
mov
shl
fwait
cmpsb
sbb
ficoml
xor
push
xchg
dec
inc
xchg
cmpsb
sbb
movsl
mov
cltd
outsl
negl
mov
mulb
int3
clc
inc
fsubrl
out
push
sbb
loope
cmp
sarb
add
out
dec
int
outsl
push
outsb
js
pusha
idiv
movsl
sbbl
push
or
mov
jnp
cmpl
adc
mov
sbbb
push
add
xor
mov
in
cld
shr
call
adcl
jecxz
sahf
andl
icebp
cmp
or
push
mov
adc
fcoms
imul
xchg
fmulp
dec
jnp
mov
imul
icebp
xchg
in
ja
jmp
push
cltd
aam
in
ljmp
cmpsb
adc
jns
test
inc
mov
lea
fldt
mov
ss
rorl
mov
sbb
mov
test
mov
inc
outsb
add
stos
adc
xor
int3
dec
loope
mov
push
xor
push
jno
mov
sbb
mov
cmp
pusha
and
iret
std
or
sub
push
jae
in
inc
fisubl
popa
add
popa
mov
jg
pop
mov
adc
testl
and
sub
inc
cmpsb
lock
aad
adc
push
outsb
movsl
leave
mov
cmpsl
mov
fdivs
das
mov
in
push
jl
ljmp
dec
cmp
inc
imul
inc
cwtl
xor
out
in
mov
sub
cli
iret
mov
les
idivl
mov
rcll
orl
or
sarb
fisttps
jmp
data16
fldenv
sti
or
mov
test
aad
jnp
fs
lcall
pop
mov
pop
inc
add
dec
mov
xor
sub
cmpb
xor
adc
data16
out
lcall
in
and
es
dec
mov
js
xor
sub
scas
cmp
adc
mov
fwait
xor
in
repz
adc
adc
and
out
outsb
push
pop
pop
out
rclb
jbe
xor
ret
inc
cltd
add
mov
pop
scas
xchg
rcr
outsl
push
dec
pop
adc
or
fsts
mov
mov
mov
cmp
scas
dec
mov
imul
xor
xor
xchg
imul
std
adc
jmp
insb
mov
cmp
sbb
or
lcall
add
push
dec
orb
cmpsb
push
mov
cmpsl
mov
pop
andb
cmpsl
imul
dec
nop
aam
ret
push
and
loop
data16
or
mov
jnp
pop
and
fnstcw
outsl
out
fidivl
or
popl
ljmp
cmpsl
and
pop
je
enter
push
sti
into
movsb
xchg
xchg
add
lds
adc
hlt
aas
fstl
fisubs
mov
jmp
and
imul
lock
cmpsb
sbb
or
xor
inc
shl
jmp
jbe
jecxz
inc
mov
sbb
jmp
jge
adcb
xor
add
push
xchg
je
mov
rol
xchg
adcb
stc
sub
inc
adc
pusha
cwtl
fs
push
push
push
test
add
and
pop
cwtl
push
push
push
xchg
inc
sahf
sub
or
testb
cmp
icebp
mov
js
movsb
add
cltd
and
ret
in
dec
movsb
xchg
jecxz
mov
fildl
loop
stos
sbb
xlat
in
jecxz
add
mov
cmpsb
or
or
sub
rclb
sbb
jl
into
pushf
test
nop
add
lret
xchg
ret
mov
mov
inc
sub
mov
shlb
shrl
hlt
jge
mov
pop
jae
pusha
jne
sarb
mov
jecxz
pop
scas
cs
adc
rcrl
and
mov
inc
in
sub
clc
mov
mov
ret
sar
ret
jb
jnp
sub
fistl
or
test
leave
loope
out
mov
ret
jle
sbb
dec
xchg
fbstp
add
jmp
and
lods
cmp
out
mov
mov
push
jl
push
iret
pop
cmpsb
push
mov
sub
loop
mov
test
movsb
js
enter
fsubl
lret
arpl
inc
add
jno
push
mov
repnz
add
inc
inc
test
jg
mov
ljmp
jno
shrb
and
push
cmp
lods
push
jo
sar
movsl
jge
cwtl
scas
data16
mov
xor
dec
hlt
jecxz
fists
mov
sub
in
xorb
ror
xchg
ss
or
push
pop
sahf
dec
xorb
push
push
shl
xor
aas
lods
and
stc
fldt
or
mov
cmpsb
adc
inc
mov
pop
ljmp
inc
mov
push
pop
mov
adc
jo
fisubrs
adc
ret
lret
xchg
add
daa
mov
cwtl
int3
arpl
scas
ljmp
xchg
dec
and
out
pop
pop
mov
pop
stc
test
aad
pop
leave
enter
fwait
dec
loope
sbb
data16
es
xchg
in
xchg
jno
or
cmp
in
mov
insb
stos
clc
dec
loop
cli
jbe
jle
imul
push
push
insb
mov
jle
mov
mov
dec
sbb
jp
adc
rclb
loope
test
iret
iret
mov
push
out
sub
cwtl
imull
sub
dec
or
xchg
ds
mov
mov
mov
sbb
and
lods
inc
jns
sub
cmp
ds
hlt
pusha
xchg
imul
lahf
mov
dec
fcmovne
and
mov
in
hlt
inc
cmp
sub
std
fimull
or
in
add
jmp
iret
mov
mov
push
pop
add
mov
frstor
xchg
test
cmp
fwait
adc
add
xlat
add
mov
adc
mov
in
popa
gs
jbe
xlat
addr16
lcall
add
mov
lock
lock
adc
inc
addr16
xlat
leave
push
in
pop
jae
xchg
add
jb
cmp
scas
add
mov
test
cmp
mov
shrl
mov
mov
inc
fwait
jbe
xor
sbb
mov
fs
xorb
loop
in
adc
and
or
jl
dec
orb
pop
or
xchg
negb
ret
inc
lock
fildl
cmpsb
bound
and
and
sub
inc
lret
into
iret
sub
in
das
push
xor
mov
aas
and
pop
icebp
aad
cmp
adc
subl
jl
xchg
pop
sahf
clc
xlat
xor
das
xchg
dec
mov
imul
xor
push
or
lock
xor
mov
cmp
cmp
push
mov
pop
fisubrs
dec
in
jmp
mov
cmpl
stos
dec
loope
adc
sbb
pop
js
mov
popf
push
cld
push
stc
sub
js
add
nop
pop
jmp
decl
pop
push
pop
int3
xorl
lea
dec
cli
or
add
jb
je
push
sub
cli
xchg
dec
dec
mov
pop
sub
mov
jb
or
shrb
addr16
das
lock
xchg
sub
sub
mov
pop
dec
int3
push
pop
jns
into
gs
cmp
cmpl
or
in
cmpsl
sub
adc
idivb
mov
mov
popf
lods
jb,pt
test
enter
mov
and
call
sahf
cmp
xlat
daa
push
sub
rorl
pop
into
icebp
or
jl
jmp
xchg
push
mov
int3
xor
jmp
outsl
daa
inc
xchg
adc
cmp
pop
ss
or
leave
shl
add
out
out
xor
xor
inc
mov
xchg
push
sbb
add
jne
in
or
mov
pop
stc
jle
and
xor
subb
jne
adcb
filds
cwtl
or
cmp
movsb
push
call
bound
inc
mov
les
call
mov
mov
test
ret
adcl
das
sub
aad
mov
inc
dec
in
inc
insl
xor
bound
popf
jp
push
out
test
cmp
pop
jmp
lods
imul
xchg
lret
mov
in
and
ss
jge
das
sbb
pop
cmp
arpl
mov
pop
mov
mov
cmp
insl
js
stc
in
loop
add
xor
cltd
pusha
into
adcl
sbb
jne
das
mov
mov
or
fldt
leave
and
and
and
jb
cld
movsb
dec
mov
or
popf
cmpsl
imul
mov
test
insl
add
lret
insl
std
movsb
lods
mov
jne
test
xchg
mov
jecxz
movsl
dec
mov
cmp
mov
mov
sub
jmp
mov
punpckhwd
and
mov
and
int
mov
mov
mov
inc
xor
xchg
sub
and
nop
jne
lock
xchg
clc
push
dec
sbb
stos
push
cmp
fstpl
sbb
mov
adc
inc
cwtl
test
pop
jecxz
jno
fcmovu
mov
lods
inc
ja
pop
imulb
dec
loope
push
movsl
jl
aaa
pop
add
xchg
jp
fwait
sti
lods
outsl
out
inc
scas
sub
int
das
fistl
repz
aam
xchg
push
mov
pop
mov
fbstp
jg
xchg
xchg
fsubl
push
cmp
pop
fwait
jbe
add
or
lods
xchg
mov
int3
sahf
in
sub
push
cld
data16
gs
inc
scas
or
jl
aas
adc
jecxz
jle
jmp
jle
rorl
mov
test
cmp
cmp
jno
int
mov
les
icebp
fnstsw
push
push
cld
mov
aas
hlt
stc
test
test
cmc
sarb
push
insb
add
imul
add
rcll
scas
xchg
or
cs
nop
sub
mov
cmp
add
push
mov
dec
dec
pop
je
cmp
xchg
movsl
cmp
dec
in
ret
ret
mov
push
loop
xor
push
stos
insl
sub
add
jmp
loope
aam
out
xor
xchg
je
cs
inc
fstp
stc
xchg
jge
jge
mov
xor
lcall
imul
aad
popa
icebp
xor
xchg
push
adc
js
sub
mov
sub
mov
aam
fistps
inc
mov
imul
pop
sub
dec
add
insl
jbe
mov
mov
in
xchg
mov
out
or
mov
add
jo
mov
jl
pop
or
and
lods
stos
inc
fisubs
jg
mov
aad
add
lods
pusha
jp
je
cmpsb
testb
xchg
pop
cmc
lock
push
sub
mov
ja
xor
cmp
push
dec
rol
dec
xorl
mov
fwait
bound
or
sbb
int3
arpl
lock
cmp
jg
add
mov
in
xchg
xchg
stos
cli
or
iret
and
clc
push
std
xor
scas
ficompl
out
pop
aas
adc
push
lock
test
sahf
adc
push
addr16
sub
add
jg
mov
pop
add
test
push
pop
inc
shlb
ds
push
pop
pop
clc
adc
pop
mov
mov
mov
mov
cmp
test
mov
jecxz
and
sbb
push
jmp
and
cld
xchg
sub
jbe
jmp
movsl
lahf
jecxz
andb
add
jle
popf
sbb
fucomp
xor
inc
sub
xor
jp
sub
fadd
in
pop
icebp
sbb
incl
movsl
xor
xor
mov
mov
testb
add
add
inc
xor
bound
xchg
fcom
lret
mov
leave
and
lods
push
xor
fldt
xchg
aas
xor
cmp
xchg
and
inc
inc
pop
or
into
fiaddl
pop
push
sub
jecxz
add
div
aaa
arpl
dec
dec
dec
xor
fmul
push
inc
imul
jnp
inc
push
jb
les
jle
mov
enter
push
mov
int3
fs
mov
test
imul
mov
mov
ja
lock
adc
popf
fs
sbb
jo
mov
or
lahf
or
roll
popf
mov
jge
stos
or
or
or
out
imul
push
out
cld
sub
sub
mov
add
ja
push
push
lret
jge
imul
xchg
sub
sbb
mov
addb
mov
in
sbb
xor
cli
jp
adc
scas
xchg
cmpl
mov
sbb
xchg
scas
sbb
push
icebp
adc
mov
push
aad
stos
lds
imul
pop
xchg
mov
xchg
fldcw
repnz
ret
jle
shlb
pushl
in
mov
lcall
rcll
sub
in
pop
mov
push
outsl
xchg
mov
and
push
and
inc
push
fists
test
testb
popf
dec
mov
and
popa
int
call
fs
decl
insb
adc
push
mov
inc
movsl
add
inc
dec
mov
sbb
xchg
dec
fstl
aas
xchg
pop
mov
mov
das
stos
jg
pop
adc
ljmp
hlt
iret
rcrl
jns
dec
dec
scas
sbb
rcr
dec
imul
scas
push
cmp
mov
icebp
or
pop
fimull
mov
xor
jns
les
mov
mov
push
cltd
and
mov
jmp
dec
cmp
loop
pop
daa
sbb
rorl
sbb
dec
out
dec
data16
jb
adc
adc
jo
stc
mov
rcrl
aas
orl
xlat
mov
or
data16
jbe
jg
movsl
in
pop
std
or
mov
pop
aas
int3
pop
inc
test
xchg
sub
movsl
dec
pop
aas
aad
outsl
aad
fs
adc
add
xchg
cli
or
push
sti
xchg
xchg
sbb
ss
dec
inc
xor
dec
mov
lret
stos
or
pop
jno
push
add
test
and
mov
xor
mov
mov
xchg
ja
jge
clc
insb
mov
cmp
aad
mov
les
mov
test
out
xchg
xchg
cmp
das
dec
rcrl
arpl
pop
mov
loope
or
inc
test
dec
popa
daa
xchg
mov
cmp
xchg
mov
jecxz
les
enter
pop
xor
imul
imul
cwtl
lock
inc
mov
shlb
jp
je
filds
mov
push
and
mov
add
jbe
push
sub
cmp
inc
std
arpl
xlat
dec
push
cmp
sub
outsl
jns
mov
bnd
push
inc
adc
mov
int3
gs
fimull
in
dec
fldl
fldcw
sub
mov
push
mov
mov
fxch
lahf
or
sub
sbb
popa
cmp
jmp
xor
shr
cli
inc
out
or
cltd
orb
mov
mov
mov
daa
jmp
or
loope
sahf
lahf
cmp
fwait
ds
pop
ret
xchg
test
xchg
dec
in
sti
dec
outsl
outsl
add
in
test
pop
test
sahf
add
xlat
cmpl
pushf
popf
pop
and
std
adc
cwtl
into
or
mov
pusha
fcmovnu
pop
call
loop
push
xchg
sub
inc
push
pop
xor
xlat
push
dec
fldcw
pushl
hlt
dec
out
push
jns
imul
outsl
in
enter
cli
sbb
mov
sbb
shr
push
jmp
inc
push
insb
or
mulb
movzbl
out
loope
sbb
mov
mov
mov
and
addr16
lock
movsl
cmpsl
jb
push
es
cld
inc
fcmove
mov
pop
pop
cmc
dec
adc
cwtl
scas
notl
movsb
ljmp
je
cmp
sub
sbb
mov
jo
push
mov
int3
popa
mov
call
mov
outsl
jns
shlb
and
lahf
les
aaa
stos
fsubs
fsubrs
xlat
and
std
mov
cmpsl
loop
test
iret
mov
test
lock
sub
inc
or
or
ret
fdivs
dec
shrb
xchg
cmp
lds
push
xchg
pop
fsubr
mov
enter
vaddsd
call
stos
dec
outsl
imul
mov
mov
pop
addb
sbb
lods
pusha
loopne
xchg
into
mov
mov
mov
xchg
xchg
mov
scas
and
add
aas
mov
jmp
push
aas
rcr
inc
fldcw
adc
adc
jecxz
add
lret
popf
inc
pop
fdivs
push
scas
add
sbb
dec
pop
adc
xchg
dec
sahf
add
lret
xchg
push
or
bound
roll
hlt
mov
fimull
mov
jmp
push
loope
and
repnz
and
mov
mul
test
inc
popa
xor
mov
fildl
insl
sub
pop
dec
cs
test
and
sub
mov
fnsave
pusha
mov
rolb
dec
xchg
add
lret
hlt
hlt
push
scas
mov
fdiv
mov
iret
mov
pusha
or
ljmp
stc
hlt
fst
das
push
js
cmc
ret
rorb
bnd
jle
sbb
jno
int3
stc
cmp
ja
ljmp
stos
mull
cld
outsl
xchg
int
call
xchg
mov
in
gs
cld
xchg
jle
jo
xchg
jne
in
and
lods
pop
lret
mov
mov
xchg
lods
fdivl
xor
cmc
test
std
shll
int3
xchg
out
js
mov
fnsave
or
pop
movsl
cmp
xchg
sub
fimuls
cmc
dec
xchg
movsb
stc
arpl
cmp
sub
cltd
push
lods
mov
pop
xor
xor
inc
in
lret
and
xor
fldpi
dec
repnz
or
ds
ret
sbb
jecxz
test
mov
cmp
aas
in
mov
cmc
xor
jecxz
sbb
scas
std
bswap
leave
mov
fidivl
imul
scas
jl
dec
imulb
ss
pop
fsubs
mov
sbb
inc
std
je
sbbl
js
fs
xchg
ss
mov
faddp
push
cmpsb
sub
decl
inc
jge
ja
jae
movsl
int3
inc
mov
adc
dec
out
sub
outsl
jnp
dec
sbb
fmuls
testb
dec
pop
stos
push
addl
cmp
ret
in
mov
push
imul
stc
or
std
adcl
jecxz
adc
push
push
popa
pop
hlt
mov
ret
popf
gs
or
rclb
fldcw
repnz
xor
pop
mov
cmp
pop
cltd
insl
gs
or
subb
and
jmp
out
insl
gs
outsb
xchg
insb
rorl
insl
in
xchg
out
mov
fsubrs
mov
cmc
sub
imul
mov
add
inc
mov
jg
daa
inc
push
fidivs
pop
lea
es
lods
inc
outsb
dec
fsubr
ja
dec
xchg
jno
das
cmp
pusha
xchg
push
int3
incb
lret
out
and
push
xor
sbb
cltd
je
inc
xlat
outsb
jae
xlat
pop
or
xchg
jnp
call
ja
test
repnz
xor
sub
scas
jae
or
lds
shrl
adc
mov
pop
jecxz
das
out
cmp
mov
cmp
mov
jno
or
jl
js
push
popf
fidivs
inc
popa
jecxz
bound
cmpsl
das
mov
mov
push
and
mov
mov
jne
mov
lods
inc
mov
mov
xor
mov
and
cmp
imul
inc
sbb
fdivrs
or
lret
loope
push
xlat
xorb
xchg
rcll
scas
push
clc
jg
sbb
stos
fisubl
fbstp
fucomp
vsqrtps
enter
and
jp
jle
push
jb
push
aad
fidivrl
and
movsb
popf
ds
stos
mov
and
lock
clc
cmpsw
jno
xor
shr
mov
fimuls
mov
sub
pop
mov
pop
scas
outsl
xor
xchg
adc
mov
aas
xor
sub
out
mov
cmc
movsl
es
push
add
mov
movsb
pushf
or
iret
fs
js
cltd
test
mov
inc
test
enter
dec
rcll
push
arpl
dec
inc
inc
lods
jnp
orl
dec
xchg
sub
fwait
shlb
inc
xor
xchg
add
stc
push
sbb
push
inc
es
loope
dec
or
mov
lahf
adc
xor
fsubrs
or
mov
mov
std
jnp
movsl
outsl
dec
sub
and
or
in
mov
add
das
lock
push
lock
xor
push
mov
xchg
int
fdivl
sub
es
aas
lods
push
insl
sarl
lods
mov
rcr
mov
push
or
mov
cmp
sarl
fwait
mov
inc
push
jle
mov
aaa
mov
rcll
movsl
push
jmp
jo
and
data16
mov
cltd
test
xchg
mov
loop
nop
jae
aam
and
push
push
jbe
loop
fwait
bound
lret
ja
mov
mov
adc
inc
or
sbb
into
iret
jnp
xor
ret
jnp
jge
bound
jae
jmp
xchg
jb
add
test
or
push
inc
mov
sbb
fwait
mov
xchg
adc
jns
sub
xchg
and
adcb
adc
sub
push
cmc
sub
lret
bound
nop
imul
adc
and
xor
mov
out
ret
xchg
lret
mov
cmc
orl
pop
push
cmp
cmc
jg
or
test
iret
mov
rorl
inc
and
aam
and
in
mov
ja
test
fidivl
gs
inc
and
jne
stc
das
je
jo
jl
test
orb
mov
xchg
jge
jl
push
sbb
mov
mov
mov
cltd
mov
out
fadd
push
adc
sbb
dec
mov
repnz
fdivr
xor
test
or
fiadds
cmp
insl
scas
arpl
adc
loopne
jge
dec
mov
mov
mov
xor
mov
cmp
cmp
fistpl
ficompl
std
sahf
xor
sahf
mov
xlat
pop
stos
test
mov
fisubrl
test
or
mov
and
loope
jp
adc
aas
ja
cmp
inc
mov
repnz
cli
xchg
lods
jns
push
pop
subl
inc
addr16
je
sbb
mov
xor
je
push
jg
sarb
mov
enter
aas
aam
test
inc
data16
pop
push
xchg
push
add
stc
loopne
pushf
sahf
xchg
loop
fwait
sub
mov
lcall
cmpsb
mov
in
jge
repnz
adc
jmp
int
clc
shrb
mov
sub
test
push
mov
jbe
adc
ret
pop
arpl
popf
test
push
addr16
push
fdivrs
mov
loope
mov
mov
dec
push
sbb
imulb
outsb
shlb
cmp
or
adc
xchg
cld
ds
mov
cmc
adc
jle
pop
mov
loop
adcb
mov
orl
xchg
inc
jg
jbe
mov
clc
mov
xor
rol
push
xor
outsb
inc
jne
mov
jnp
in
inc
mov
rol
mov
sub
cs
pushfw
jl
fsubrp
xchg
mov
fistl
inc
cltd
xor
fdivrl
pop
shlb
pop
dec
idivb
jne
callw
adc
lret
xchg
pop
mov
sub
rcll
mov
repnz
pop
js
data16
push
in
scas
pop
xor
jbe
pop
inc
and
lods
lock
dec
rorb
add
xor
pop
adc
idivl
push
test
push
jmp
in
aas
jmp
mov
dec
mov
stos
or
xchg
rclb
xchg
pusha
pusha
push
rorl
adcb
popa
outsb
sub
xor
mov
fstl
stos
call
leave
inc
loopne
in
test
mov
aas
adc
mov
pop
icebp
jns
xchg
sub
jle
jle
add
xor
shl
xchg
fsubrl
mov
cld
cmp
sti
stos
mov
rcrl
rcrl
or
adc
xchg
adcl
aad
xor
mov
mov
cmp
jl
popa
scas
xor
sub
jg
fstpl
shll
push
pop
and
dec
mov
cli
adc
add
popf
mov
into
mov
rol
pop
inc
adc
sti
cmpsl
xor
xor
xchg
xor
pusha
lret
sbb
data16
mov
dec
jle
xor
sti
incl
jl
dec
and
icebp
mov
add
push
fiaddl
and
jb
push
sub
jbe
mov
dec
lahf
ss
lods
mov
adc
inc
dec
adc
data16
xchg
imul
popa
fwait
push
push
ljmp
scas
inc
mov
aam
in
das
xchg
or
mov
fmuls
leave
push
pop
add
sbb
cmp
out
std
jae
rcrb
enter
loope
mov
pop
cmpb
call
mov
cltd
out
lcall
cmpsl
mov
cwtl
xor
ret
jmp
clc
adc
pop
cmp
pushf
push
in
or
xchg
stos
out
rep
in
scas
mov
adc
ss
cli
mov
into
or
cmp
or
pop
lret
push
insl
scas
jl
in
add
pop
iret
xchg
mov
cmc
xchg
lcall
cvtps2pi
cmp
shlb
sbb
cmp
sub
test
push
fsubr
pop
dec
in
sbbb
pop
push
int3
pop
fnsave
ds
loop
insl
clc
dec
dec
ret
popf
xchg
addr16
mov
cmp
cmp
negb
imul
iret
outsb
mov
out
mull
cltd
mov
xor
lea
dec
bound
popa
and
rcl
jb
aas
cmc
sarb
loopne
mull
xchg
adc
cwtl
lahf
ss
mov
sub
loopne
and
andl
jbe
aas
loop
or
mov
xor
and
fisttpl
clc
enter
adc
and
mov
jecxz
add
mov
loop
loop
jae
ret
ss
test
adc
out
mov
stos
mov
push
adc
rorb
sub
scas
add
fwait
gs
andb
xor
add
adc
call
or
mov
fistpl
and
pop
ret
sbb
or
loope
add
dec
inc
xchg
cmovs
cmp
push
aad
adc
jns
push
daa
add
ret
aam
dec
in
jg
fst
pop
jmp
fmull
jle
enter
push
enter
nop
mov
dec
stos
fmull
mov
mov
int3
sub
dec
data16
ss
xchg
mov
push
cltd
xor
or
pop
jmp
sbb
orl
call
xor
cs
cltd
xchg
popa
clc
lods
stos
mov
mov
std
xchg
sbb
cmp
mov
push
daa
outsb
push
push
sub
pop
cli
inc
mov
pushf
jmp
fiadds
adc
and
imulb
adc
les
lcall
mov
add
push
cmp
int
aaa
xchg
or
fstpl
sub
or
mov
pop
lods
cld
push
or
ja
aaa
adcl
out
cmp
idivb
into
in
inc
stc
lock
mov
xchg
pop
icebp
mov
aam
repz
sub
add
gs
in
sbbl
pushf
lods
shll
aas
mov
inc
scas
dec
stc
dec
out
cli
jle
mov
sbb
bound
inc
inc
iret
popl
repz
xlat
mov
dec
and
test
jne
sahf
out
inc
pusha
fildl
loop
xor
mov
mov
add
daa
and
mov
mov
push
or
sub
in
data16
pop
outsl
daa
dec
leave
xor
dec
xor
mov
cld
cmp
cmpsb
xchg
add
test
or
pop
push
pushf
inc
and
pop
movsl
mov
fs
mov
subl
or
aaa
pop
cmp
sbb
out
pop
inc
fmull
fsubrp
int
jg
cmpsl
or
jg
lret
mov
mov
mov
repnz
call
adc
and
notl
add
mov
mov
dec
movsb
mov
add
jecxz
lods
aam
sti
mov
jp
aaa
adcl
imul
cltd
xchg
jle
xor
in
in
xchg
add
lcall
add
std
and
jnp
aas
and
mov
das
mov
or
sub
pusha
xchg
enter
mov
jo
xchg
insb
lea
pop
mov
add
jp
sbb
push
push
pop
cli
or
pop
aaa
repnz
gs
cs
or
sbb
jmp
cli
inc
iret
adcb
int3
mov
xor
sbb
jmp
sbb
int3
call
mov
xor
cmpsl
out
push
test
fdivrl
push
sahf
jecxz
repnz
into
lock
mov
pop
icebp
add
rclb
repnz
mov
dec
and
xor
inc
mov
cwtl
mov
xor
std
mov
les
and
iret
cmp
pushl
les
mov
add
mov
add
lret
xchg
loopne
ret
loop
call
das
jae
iret
push
mov
mov
xchg
or
cmpsl
pop
mov
or
das
xchg
cmp
negb
addr16
mov
popa
xor
pop
dec
shl
lahf
ss
daa
add
lds
jbe
xor
dec
testb
adc
mov
addr16
add
sbb
hlt
cmp
push
outsb
mov
insb
xor
mov
in
and
cmc
push
sbb
jp
mov
loope
shl
insb
leave
sarb
sti
xchg
repnz
jp
hlt
adc
fwait
sub
lods
pop
or
push
pop
out
mov
in
sahf
inc
into
mov
push
mov
jecxz
sbb
xchg
pop
mov
test
inc
std
dec
or
dec
je
daa
adc
dec
cwtl
icebp
mov
sbb
xor
inc
xor
insl
loopne
or
pop
xchg
nop
cmpl
inc
push
mov
cmp
xchg
fmuls
sbb
movsl
mov
sbb
add
dec
mov
dec
in
dec
scas
and
enter
pause
imull
shlb
mov
dec
inc
fs
or
int3
xchg
iret
cwtl
cld
mov
jmp
pop
gs
shlb
sbb
repz
mov
testl
daa
daa
inc
bound
push
test
jns
ret
sbb
out
lahf
jle
out
cld
in
xchg
or
sub
cli
xchg
inc
inc
cmpsb
jnp
lcall
ja
lret
jnp
cld
lods
decb
sub
aaa
and
aad
inc
xchg
cli
jge
sub
adc
hlt
pop
shll
push
adc
and
sarb
xchg
mov
and
dec
fsub
sub
movsb
xor
adc
mov
pop
outsb
into
jno
test
sub
int
adc
ja
out
dec
pop
fcoml
dec
clc
xlat
cltd
or
xchg
mov
addb
mov
adc
jno
dec
sub
jnp
orl
in
mov
xchg
fidivs
dec
xlat
outsb
jnp
out
mov
mov
shlb
add
lret
sti
sub
mov
add
rcl
imul
and
das
and
pop
cmpsl
fwait
out
mov
or
cmp
ss
imul
sub
fimuls
shll
inc
int
stc
push
not
das
test
jle
cmp
test
adc
les
sarl
in
cwtl
cld
or
stos
aas
xor
push
outsl
mov
adc
add
jns
lods
pop
push
sbbl
int3
imul
xchg
cmp
xor
outsb
inc
loopne
xchg
inc
cmp
inc
jno
in
jns
rcll
adc
sub
jl
jge
out
xor
mov
xchg
sbb
gs
mov
insb
aas
mov
repz
lock
scas
cmp
mov
mov
mov
xchg
rcll
sub
add
out
icebp
mov
out
sub
adc
ret
outsl
gs
fimuls
mov
xor
mov
mov
pop
and
addl
inc
rcr
sub
lock
js
lds
shl
bnd
and
js
pop
jae
push
mov
add
aas
inc
aas
jecxz
in
lock
rol
pop
add
add
mov
sub
sbb
fdivl
jecxz
int
mov
pop
in
push
cmpsb
cmp
sahf
cs
aaa
test
jecxz
mov
in
dec
and
jno
mov
add
fldl
xchg
push
movsb
dec
shrb
jae
add
jmp
xchg
pop
push
rorl
orl
pop
lea
arpl
outsl
add
ret
lret
cld
adc
cmpsl
inc
sbb
and
leave
sub
sbb
pop
movsb
mov
and
or
sbb
lods
and
mov
movsl
lock
mov
xchg
arpl
fwait
adc
xchg
mov
xchg
mov
xor
lods
mov
mov
adc
mov
xchg
mov
mov
stos
push
lret
xlat
mov
pop
mov
lea
mov
jnp
lds
fbstp
popf
fstpt
pop
in
ret
adc
mov
outsl
ficomps
outsb
lock
in
pop
popa
jge
jl
mov
jp
fsubrs
push
fadds
lret
pop
call
mov
ja
and
sbb
xchg
and
xor
inc
test
les
sub
jl
pop
cltd
fstl
push
sub
mov
sbb
xchg
and
mov
and
pop
push
es
pop
out
into
xchg
divl
push
dec
js
jg
gs
sub
push
pop
gs
push
hlt
movsl
pop
mov
test
stc
pop
sbb
jecxz
jns
adc
ljmp
aaa
mov
adc
ljmp
inc
push
inc
jl
gs
xchg
xor
les
js
push
add
pusha
adc
pop
add
mov
adc
sub
lds
jo
sarb
lea
ljmp
loop
mov
in
or
jl
push
fsubrp
ja
mov
out
movsb
stos
movsl
cmc
inc
xchg
sub
pop
lcall
dec
or
xchg
mov
xchg
fbstp
addr16
stos
mov
jmp
lret
aam
rclb
and
sub
fldenv
xchg
xchg
sub
fnstcw
int
cmpb
jmp
adc
cmpsb
pop
sub
nop
scas
mov
jle
push
pop
lock
mov
outsb
dec
repnz
mov
dec
cmp
jbe
mov
push
adc
popa
mov
xor
lcall
cmp
faddp
stc
test
incb
fisubrl
and
cld
cmp
stos
adcb
mov
sbb
push
lret
pop
pandn
sub
inc
pop
daa
adc
mov
repz
sbb
dec
in
shr
xor
in
dec
mov
pop
cmp
movsb
or
out
or
dec
in
in
jno
cltd
xor
aam
xchg
cmp
mov
insl
aaa
test
out
dec
jae
stc
insl
out
pop
sbb
sti
xchg
xor
pop
sub
popf
xlat
pop
jmp
jne
stc
or
cmp
xchg
and
shrl
loopne
icebp
dec
dec
dec
jl
or
iret
mov
stc
dec
add
pop
xor
outsl
cmpsl
out
adc
lds
adc
or
pop
sub
dec
fs
loope
mov
stos
pop
mov
mov
test
iret
aad
loopne
movsb
dec
push
jl
sbb
cmp
movb
ficoml
push
inc
lods
pop
fbld
jnp
aaa
cli
mov
push
rorb
adc
insb
ret
jb
in
xchg
pop
jne
xlat
lret
in
in
pop
insb
in
popf
aaa
push
lcall
cmc
int3
movsb
jecxz
repz
outsl
xchg
mov
pop
js
xlat
aam
shrb
mov
mov
mov
xlat
push
xchg
sub
stos
enter
jns
mov
out
xchg
jge
mov
pop
mov
clc
bound
scas
out
sbb
add
int
arpl
fistl
push
mov
xor
mov
popf
enter
nop
test
mov
lahf
das
adc
fbstp
add
mov
aam
std
pop
add
add
dec
mov
jecxz
movsb
push
outsb
enter
push
pusha
testl
xlat
inc
ret
mov
cld
das
dec
loope
or
xor
mov
dec
fdivrs
shll
iret
test
push
adc
add
jbe
inc
add
lea
cwtl
stos
sbb
or
jne
or
gs
fwait
mov
mov
jg
rorl
stos
or
shrb
outsb
jbe
imul
fstpl
test
pop
movsb
sub
dec
dec
xchg
mov
mov
lret
mov
cmp
mov
mov
mov
mov
faddl
aam
mov
cmp
or
jo
cmpl
push
push
jns
repnz
into
lods
arpl
lahf
in
xor
lea
jmp
push
add
cmp
fcompl
pop
call
adc
fadds
fs
push
mov
pop
insl
imul
jnp
and
jmp
les
mov
outsb
jnp
xor
sbb
je
push
and
jae
gs
adc
mov
jmp
out
lea
jno
pop
ljmp
pop
clc
out
cli
dec
fisubl
dec
rcrb
div
inc
bound
cmp
ljmp
mov
mov
mov
hlt
push
fcmovne
loop
sub
fxch
popf
dec
sbb
loope
aaa
stos
xchg
lea
or
and
lahf
icebp
cmpsl
nop
jae
mov
filds
notb
in
rcrb
rorl
xchg
mov
fcmovnbe
dec
lret
sbb
mov
std
cs
fists
jmp
push
jge
or
sbb
shlb
dec
push
sarl
js
mov
mov
xor
mov
outsl
and
aaa
fidivrl
and
and
ljmp
shl
add
add
mov
rcrl
adc
push
mov
add
jns
fisubrl
sbb
in
pop
jnp
mov
mov
mov
cmc
les
inc
xchg
add
pushf
stos
mov
dec
cs
leave
lods
adc
and
jp
push
and
inc
stc
scas
adc
lods
add
xchg
inc
loop
pop
lahf
adc
inc
inc
shlb
lock
ret
pop
int
add
xor
cld
loopne
aas
adc
dec
aam
mov
dec
loope
bound
pushf
xor
xchg
mov
xchg
sbb
add
lods
in
and
jae
fs
stos
xchg
push
xor
add
push
xchg
mov
mov
shr
mov
lret
jb
test
mov
and
cmc
mov
mov
and
sub
in
sbb
insl
js
xorb
cmc
pop
inc
sar
bound
push
dec
xchg
ret
inc
in
mov
xor
leave
sti
ss
mov
pop
or
repz
xchg
and
call
add
pop
negl
jge,pt
js
or
cltd
int
repz
lret
in
adc
addb
test
loop
imul
push
dec
gs
movsb
adc
mov
mov
test
xchg
leave
pusha
mov
mov
call
in
leave
sbb
lods
lret
push
pop
scas
mov
mov
inc
mov
movsl
test
movsb
or
xchg
xchg
sub
dec
test
mov
js
push
out
insl
jl
lret
jbe
movsb
les
cmpb
adc
push
mov
cmp
clc
in
js
push
push
out
pop
mov
fisubs
inc
fsub
hlt
fcoml
or
scas
out
js
push
mov
test
shrb
xor
adc
pop
insl
loopne
fnsave
add
sub
cmp
clc
stos
inc
loope
pop
pop
jg
lods
mov
push
in
mov
flds
inc
xor
sbb
mov
mov
mov
test
push
das
mov
sbb
sub
in
inc
jl
in
mov
add
push
jl
push
outsl
stos
xchg
jne
mulb
mov
in
jge
ret
hlt
pusha
test
xor
repnz
sahf
inc
fnstenv
pop
test
and
enter
arpl
mov
iret
xlat
cmp
testb
notl
cmc
pop
mov
dec
clc
mov
insb
dec
push
jl
xor
jg
xchg
add
insb
psrad
xchg
jne
nop
out
add
mov
cwtl
rol
add
loopne
fucomp
pushf
jge
mov
ret
jl
inc
xchg
sbb
lea
cmp
aad
mov
or
mov
sub
cmc
inc
fisubs
xchg
gs
aam
int3
loop
inc
or
jnp
and
mov
adc
pop
push
cmp
adcb
test
or
in
js
pop
mov
add
popa
aam
mov
and
mov
xchg
xchg
fwait
xchg
iret
pop
dec
in
push
mov
cmp
and
mov
inc
mov
mov
bound
mov
mov
lret
mov
jbe
inc
mov
loop
jbe
xor
push
mov
mov
inc
push
mov
jo
mov
push
dec
in
insb
arpl
imul
xorb
add
or
loop
jp
mov
or
cli
sbb
jbe
pop
aad
je
orl
lret
pop
sub
stc
aam
fimull
testb
sbb
daa
into
repnz
stos
out
scas
inc
and
lea
add
add
cmp
lods
mov
sub
or
outsb
scas
adcl
mov
into
stos
xor
cmp
bound
sub
mov
push
and
push
stos
inc
xchg
mov
iret
outsl
mov
imul
inc
sahf
aaa
cld
in
test
and
popf
into
mov
and
loopne
or
push
add
shrb
mov
out
ljmp
outsb
dec
arpl
lahf
jle
lods
inc
into
mov
xchg
mov
jbe
cmp
jge
sbb
pushf
pop
stos
adc
lods
or
hlt
imul
bound
and
jbe
lret
stos
les
shl
jp
loop
loopne
leave
pop
mulb
out
dec
jnp
test
rorl
jp
sub
insl
and
movsl
mov
rolb
or
mov
ss
cld
xor
fnstcw
outsl
cli
cwtl
inc
fmulp
xorl
push
gs
stc
pop
sahf
and
sti
ss
sub
sub
push
mov
repnz
shlb
pop
lea
mov
xchg
fs
js
adc
jo
adc
jge
jns
out
cli
pop
inc
jl
mov
cmp
push
stc
cmp
sub
js
push
ret
pop
imul
rcrb
fwait
movsl
mov
loop
or
stos
adc
sahf
sbb
ds
daa
lcall
inc
mov
jne
mov
cmp
dec
and
scas
fdivl
out
fidivrs
mov
xor
add
loopne
push
ljmp
jno
cli
gs
pop
jae
test
sub
aam
test
stc
sbb
movsb
clc
call
adc
mov
xor
insb
pop
mov
sbb
sbb
push
loop
adc
and
inc
cmc
sbb
mov
cmp
sub
insb
cmpsl
dec
clc
jg
or
testl
push
test
test
pop
cmpsb
lret
bound
insb
out
data16
push
push
add
arpl
mov
inc
repz
in
int3
pop
and
or
mov
ficoml
fwait
sbbl
xchg
add
sub
xor
in
push
lea
inc
sub
sub
dec
dec
inc
dec
xchg
sub
dec
push
pop
mov
leave
pop
pop
adc
jo
xor
sbb
xor
inc
test
mov
daa
mov
sbb
cltd
and
sub
ffreep
cmpsb
lock
pop
out
pop
scas
insb
in
orl
xchg
sub
shl
mov
and
scas
loopne
or
jne
xchg
lods
add
dec
out
and
outsb
inc
in
ja
arpl
rcrb
mov
pop
push
dec
or
aad
fucomp
inc
cmc
mov
or
rcrl
ja
popf
ss
shrb
push
mov
js
or
cmp
test
imul
mov
xlat
adc
jae
add
fsubrp
adc
xchg
jp
mov
loope
cld
add
sub
jae
call
lods
lods
xor
or
mov
cltd
pop
iret
adcb
push
ljmp
sub
call
cld
xchg
ficompl
pusha
ss
rcll
sub
repz
fmull
push
push
insl
push
xchg
xor
dec
push
xlat
dec
in
adc
dec
gs
and
cmp
lret
popa
cmp
sbb
fsubr
cli
popf
enter
xchg
jnp
dec
xchg
mov
cmpsb
fsts
cmp
shlb
lahf
fldl
xchg
repz
inc
scas
adc
loopne
mov
or
jae
mov
stos
cltd
mov
add
push
stos
insb
or
andl
dec
push
sub
dec
sub
or
add
in
mov
daa
jp
or
lods
push
or
and
push
loop
mov
fisttps
cld
pop
jnp
into
movsb
xchg
es
push
and
mov
dec
jno
xlat
repz
inc
lds
into
ss
cmpsb
jg
inc
divps
xlat
nop
sbb
jp
movsl
jmp
lcall
inc
mov
in
mov
les
inc
sbb
add
and
scas
jle
andl
aas
fbstp
scas
sbbl
loope
sbb
lret
popa
lods
aas
shll
lods
rcrl
cmp
daa
lcall
adc
imul
jp
mov
leave
jg
and
popa
xor
je
mov
jno
mov
jae
mov
xchg
fnstcw
repnz
cmp
dec
loopne
lret
in
icebp
shr
mov
pusha
mov
iret
gs
or
sub
movsb
and
ss
inc
lea
daa
mov
jo
xor
orl
ret
pop
lods
xlat
insb
cmpsl
mov
or
fwait
jne
sbb
adcb
cs
aaa
pushf
and
pop
dec
movsb
jnp
ljmp
mov
imul
outsl
cmp
xor
mov
sub
aad
loope
mov
add
std
aad
fcoms
cs
cs
or
pop
sahf
roll
repnz
inc
cs
stos
mov
inc
js
jne
jmp
inc
sbb
xchg
les
add
inc
int3
push
sub
push
dec
pusha
js
fbstp
cmp
std
leave
jbe
mov
test
test
mov
sbb
addr16
ret
ret
sbb
bound
popl
and
adc
gs
and
cs
andl
jp
push
xchg
jno
into
add
bound
int
inc
push
xor
int
and
out
clc
inc
int
mov
dec
in
aam
into
mov
inc
ss
push
out
sub
and
int
out
clc
test
jnp
jg
cmp
out
mov
idivl
ret
pusha
divl
inc
fcoml
shlb
cli
jb
in
testl
das
jge
mov
aad
and
mov
xlat
shrb
sub
das
cmpsb
test
cmp
dec
and
movsl
hlt
dec
outsb
cmpsl
inc
dec
sar
nop
jmp
or
mov
xor
call
test
mov
fnstenv
fisttpll
in
jne
push
xchg
jne
mov
fdivs
xchg
or
addl
orb
adc
jne
mulb
xchg
cmp
and
pop
fadds
bound
dec
xchg
pop
test
adc
outsl
daa
sti
fbstp
in
pop
dec
lods
aaa
pop
sub
push
fbstp
int
adc
mov
lret
popa
movsb
and
gs
aas
clc
iret
push
orl
mov
js
cmpsb
and
push
jl
lods
inc
sbb
subl
mov
push
mov
xchg
dec
inc
adc
hlt
mov
lock
es
inc
jo
mov
out
mov
insl
out
xor
imul
jge
adc
pop
inc
mov
or
xor
mov
roll
daa
xor
push
mov
dec
in
xchg
jns
inc
or
aam
push
cmp
push
test
mov
jg
ret
jmp
in
or
pop
mov
mov
mov
loop
cld
jg
inc
mov
push
std
cld
outsl
sahf
ret
jo
les
push
dec
add
push
push
std
xchg
aaa
fcmovb
pop
loop
pop
lods
sbb
enter
xlat
jmp
adc
gs
repz
pop
mov
mov
mov
shl
xor
arpl
add
loop
push
inc
shl
lahf
xchg
in
fdivl
push
fsubrp
sbb
inc
fwait
jecxz
mov
ljmp
lock
adc
mov
addb
mov
sub
xor
xor
inc
dec
stos
mov
and
ja
mul
add
pop
mov
aad
dec
lods
call
pop
xor
and
out
cmc
ds
stc
pop
shrl
pop
faddl
push
inc
das
inc
mov
loopne
jmp
addr16
mov
pop
dec
push
cld
test
je
pop
mov
shll
add
jg
pop
cmp
lods
adc
cmp
test
test
arpl
sbb
sbb
mov
sbb
mov
jmp
jb
addr16
jecxz
pop
lcall
pop
adc
je
jge
mov
or
insb
add
sahf
pop
xor
mov
imul
mov
in
sbb
adc
xor
outsl
bound
mov
notb
les
xchg
jle
dec
insl
ja
outsb
pushf
xor
jnp
mov
xlat
cld
cmp
imul
mov
gs
xor
hlt
loop
fldcw
xchg
jnp
jae
jo
inc
ja
je
testl
xchg
mov
test
js
and
pop
mov
pop
not
mov
sti
stos
cmp
inc
mov
pushf
and
test
dec
in
push
pop
and
les
and
pop
mov
roll
arpl
pop
lcall
inc
and
in
or
mov
lret
sbb
stos
int
add
cli
push
and
sbb
dec
pop
and
xchg
sbb
sahf
jb
test
cwtl
jne
lods
les
pmaddwd
insl
sti
mov
sbb
addb
test
dec
xor
dec
jge
inc
mov
xlat
outsb
fstl
add
lcall
add
sub
push
push
add
data16
int
movsl
sbb
xchg
repnz
ds
add
push
nop
add
mov
dec
icebp
mov
inc
mov
jmp
mov
fbstp
adc
or
repz
das
scas
jno
dec
test
out
faddl
negl
or
iret
mov
add
test
in
adc
push
rcll
ret
nopl
mov
aaa
stos
mov
fisttps
sub
rcr
sbb
dec
fiaddl
adc
ljmp
sub
out
scas
push
mov
jmp
or
roll
int
hlt
popa
cmpl
lret
cld
xor
rcrl
ret
pop
aas
xchg
xor
cmp
dec
aam
ficompl
mov
inc
scas
and
pop
inc
lds
data16
adc
push
jmp
fadds
or
sub
mov
mov
fs
dec
stos
sub
es
mov
leave
test
push
rcll
sub
dec
testb
push
sub
cmp
jp
and
iret
mov
addr16
sar
cmp
jmp
test
out
mov
movsb
cmp
pop
hlt
dec
xor
ja
jnp
insb
push
lea
push
push
arpl
pop
sub
cmc
bound
shr
add
pop
in
rcrl
push
sahf
pop
xor
test
sbb
cmc
mov
jo
inc
sub
push
loope
pop
out
jo
imul
xlat
sbb
push
imul
mov
out
mov
fstpl
xchg
je
and
pop
sbb
dec
inc
mov
jnp
xor
ja
pop
scas
inc
dec
adc
xor
pop
stos
hlt
mov
add
inc
pop
outsl
test
addl
pop
mov
adc
push
daa
lret
xchg
sbb
fwait
pop
lret
mov
call
adc
or
or
inc
lea
sti
push
xor
mov
mov
or
adc
jl
or
dec
fdivrl
mov
push
in
xchg
push
daa
add
daa
mov
imul
js
sub
sub
call
or
jnp
int3
xchg
sbb
or
sbb
dec
jle
mov
bound
mov
and
push
add
inc
sbb
int
adc
adc
inc
aas
out
aas
stc
jo
mov
lods
roll
imul
inc
and
clc
lret
popf
movsb
pop
or
mov
lcall
jno
mov
enter
mov
mov
loope
mov
andb
pop
pop
sub
xor
cmpsl
and
add
js
sub
outsl
loop
or
sahf
cmp
dec
jecxz
inc
shl
xchg
icebp
leave
std
lcall
mov
cli
adc
sub
add
cmc
pop
push
sbb
cs
push
mulb
push
mov
dec
lock
push
jmp
mov
pop
test
inc
loop
jbe
push
push
lret
cmp
jo
push
lods
and
testb
jp
das
mov
cld
cmc
push
test
xchg
movsb
mov
mov
push
daa
mov
jg
push
xchg
mov
push
scas
std
pop
addb
pop
ss
xor
popf
push
popa
in
je
pop
inc
int3
lahf
icebp
jo
fbstp
cltd
sbb
and
sbb
xor
lock
out
mov
insl
les
mov
aam
mov
loope
ds
shr
xchg
pop
push
out
nop
push
clc
repz
cmp
insb
push
jnp
adc
out
test
call
adc
lods
cmp
ficomps
fists
sbb
and
sbb
cld
xlat
movsb
fisttps
push
jns
push
imul
stos
and
lods
and
mov
inc
push
mov
push
ljmp
mov
sub
fsubrp
or
pop
cmc
jge
jmp
dec
mov
mov
cmp
add
shrl
into
test
mov
and
add
lods
jns
pop
test
xlat
fisubrs
dec
scas
outsl
dec
fidivrs
scas
jo
adc
rcrb
dec
dec
rep
mov
in
inc
push
scas
xlat
sub
xchg
push
fwait
or
es
dec
mov
ds
sbbl
dec
cmc
mov
popf
jmp
push
shrl
adc
scas
lock
loope
outsb
and
push
lea
fimull
sub
in
fbstp
cli
repnz
in
cmp
insb
insb
mov
test
ret
jecxz
xor
fisttps
je
cmp
imul
adc
mov
mov
addr16
adc
add
pop
rep
in
push
inc
pop
sub
cmpl
fcoml
test
outsb
cmp
std
mov
cmp
mov
dec
mov
jg
add
mov
out
dec
lods
pop
cmp
mov
dec
lods
shrb
addl
and
push
fidivrs
sub
push
fsubl
adc
in
int3
fadd
mov
outsb
fadds
and
cli
rol
movsb
mov
inc
fisubrl
ret
shl
les
or
push
jp
adc
mov
add
dec
lahf
xor
inc
popf
notb
inc
and
insl
push
push
mov
xor
push
ljmp
and
popa
sub
add
ljmp
inc
dec
inc
jo
jae
xor
mov
xchg
pop
dec
dec
std
sbbb
mov
leave
js
sbb
xchg
and
push
insl
ds
inc
fisttpl
jmp
dec
mov
or
xchg
aas
ret
push
into
and
jo
out
xor
cld
push
mov
push
outsb
sbb
pop
aam
pop
lods
pop
dec
sub
pop
push
mov
std
testl
xchg
insb
add
ljmp
jno
jle
lret
bound
jno
dec
mov
pusha
aad
pop
insb
lds
mov
lret
push
mov
mov
push
ds
pop
std
mov
push
mov
mov
repz
mov
xor
pop
add
jns
mov
pop
sub
scas
push
fadd
inc
xlat
mov
xor
add
out
jg
cmpxchg
test
repz
sub
fsubs
xchg
dec
nop
pop
shl
push
xchg
sub
in
inc
pop
adcb
push
push
inc
pop
repz
or
es
cmp
mov
sub
aaa
and
bound
xor
nop
mov
cmp
lock
loopne
pop
stc
jmp
insb
shrl
jno
cmp
test
mov
pusha
pop
cmpsb
xchg
jecxz
jl
in
mov
repnz
hlt
imul
cs
insb
push
movsl
push
mov
cmp
xchg
sub
shlb
adc
push
mov
dec
flds
movl
fistl
test
or
decl
js
insb
out
adcb
data16
test
rcll
gs
fneni(8087
ja
mov
jnp
pop
loopne
iret
shll
add
popf
mov
insb
sbb
imul
xor
jle
cmp
sbb
cmpsb
in
mov
pusha
mov
lock
cmc
xchg
mov
or
xchg
dec
push
sahf
pop
push
std
nop
jge
rcrb
mov
add
inc
lods
pop
jb
or
mov
aam
mov
sbb
shll
xchg
dec
xor
cmc
adc
push
fdivs
or
icebp
ds
bound
xorl
xchg
mov
out
movsb
std
pop
iret
xchg
mov
push
xorl
mov
lea
or
push
sub
xchg
outsl
xor
fmull
mov
jmp
fidivrs
jae
sahf
pop
addr16
mov
adc
lret
es
jge
xchg
sub
clc
xor
xchg
into
outsl
add
xor
mov
jecxz
sub
loopne
mov
scas
stos
stc
inc
mov
loopne
dec
sarb
cld
push
sub
xchg
test
jle
ret
xor
ret
sahf
cwtl
fisubl
in
pop
cmc
and
gs
sti
and
mov
cmp
dec
jae
daa
les
push
fidivs
jle
xor
pop
mov
inc
stos
jbe
idivl
scas
mov
call
pop
mov
xchg
pop
jae
in
data16
sarb
dec
clc
lcall
xchg
fsubr
in
aaa
popf
add
in
inc
outsl
jp
mov
rcr
stc
imul
ds
cmpsl
or
ja
outsb
enter
lea
lods
sbb
xchg
notb
daa
sub
jecxz
or
push
pop
loop
daa
cmp
adc
cmpsb
pop
lock
fisttpll
cwtl
test
jle
into
add
push
bnd
and
shr
pushf
sub
add
ja
daa
imul
jg
cltd
inc
sbb
out
push
pop
xor
icebp
xchg
mov
push
sbb
outsl
sbb
mov
or
lret
push
cmp
pop
cmp
sub
mov
push
push
fsubrl
pop
cmp
into
lods
aam
cmp
stos
inc
inc
mov
fdivrs
scas
stc
add
mov
ljmp
lods
das
repnz
mov
mov
push
test
nop
jae
pushf
or
mov
sub
mov
inc
jl
sub
jl
cmp
cli
rcl
and
cmpl
mov
cld
testl
cmp
addb
es
mov
dec
lods
or
sub
std
jg
stc
push
xchg
sub
or
push
jmp
imul
sbb
xchg
jecxz
sarb
movsl
adc
add
mov
sbb
je
leave
js
hlt
rclb
aaa
aad
pop
mov
insl
and
xor
jecxz
jo
cmpsl
add
or
dec
cmp
adc
notb
xchg
mov
cmp
push
xchg
push
sub
sbb
ss
fdivl
sbb
outsb
xchg
mov
sub
bound
xlat
mov
mov
ret
jmp
sub
fcomps
jl
push
out
inc
nop
cld
std
and
jmp
mov
outsl
testb
mov
imul
inc
xchg
sub
xchg
int
iret
lock
cmp
ljmp
inc
mov
inc
add
js,pt
mov
shlb
popa
jp
mov
leave
loope
pop
sahf
ljmp
stos
outsl
stos
ret
pop
mov
je
daa
xor
scas
mov
into
in
cmp
sbb
inc
xchg
or
les
mov
pop
jb
mov
pop
outsb
insb
sbb
cmc
cmp
test
and
inc
mov
xchg
pop
pushf
test
cmpsl
mov
enter
pusha
std
dec
in
mov
insb
sbb
mov
cli
call
xor
xchg
in
xlat
popf
je
cmp
mov
out
push
shl
test
adc
adc
lds
or
inc
jl
popf
lods
mull
cli
in
ror
or
insb
scas
out
in
pop
adc
cmp
and
sbb
cli
cli
aam
mov
adc
insl
sub
popa
pop
mov
pop
popl
sub
mov
sub
or
push
sbbl
cwtl
push
sbb
scas
mov
xchg
cmp
pop
jp
fcomps
cs
mov
lock
xchg
mov
adc
pop
inc
jae
xor
es
jmp
jo
sti
xor
sbb
out
scas
xor
filds
inc
daa
repnz
stc
xchg
loop
dec
rorl
mov
or
inc
inc
dec
ficoml
xchg
pop
das
jg
pushf
jp
jmp
stc
inc
pop
das
jb
inc
xchg
dec
cmpsl
mov
mov
inc
icebp
sbb
add
inc
xor
pop
or
add
lds
sbbb
lea
je
add
ret
push
in
jecxz
mov
cs
jne
mov
push
scas
dec
mov
fnop
iret
or
lds
mov
jg
negb
fsubrs
arpl
mov
dec
jge
add
or
ds
inc
mov
test
lods
dec
and
xchg
fsubrp
outsb
dec
cltd
mov
faddl
mov
add
cmp
pop
out
xchg
xlat
mov
insl
mov
out
rorl
push
sbb
mov
loop
pusha
shll
push
rolb
movsl
push
pop
adc
mov
xor
or
adc
inc
stos
pop
hlt
xor
xchg
push
jnp
lea
and
mulb
cmpsl
in
pop
lds
mov
bound
mov
shlb
fdiv
push
repz
addr16
cwtl
clc
xor
dec
or
dec
loope
andb
cltd
mov
adc
mov
in
subb
aaa
push
mov
rcll
out
and
add
hlt
cmpl
mov
xchg
fisttpll
adc
add
lds
les
adc
into
fcompl
mov
lock
stc
inc
mov
sub
out
sbbl
mov
js
xor
in
push
repz
jb
mov
insl
jo
xchg
and
cmc
adc
roll
mov
cmp
push
or
aas
sahf
cmpsl
inc
dec
lahf
mov
pop
or
les
xlat
mov
dec
fcmovbe
push
and
out
addr16
out
mov
bndstx
mov
adc
jmp
call
sub
adc
aaa
jg
push
loope
repnz
stc
xchg
jo
and
out
cltd
clc
xchg
lea
test
push
sbb
lods
fists
dec
hlt
arpl
mov
nop
adc
sbb
adc
mov
test
dec
pop
pop
ret
sub
or
xchg
dec
push
adc
int
push
push
xchg
sub
mov
loopne
popf
bound
pop
xlat
sbb
jo
adc
mov
lahf
movsb
cmp
popa
movsl
and
aas
adc
data16
outsl
mov
loop,pn
xchg
lods
push
adc
gs
mov
aam
lret
bound
fwait
xlat
loop
jo
xchg
cvtpi2ps
inc
mov
jno
and
and
mov
lock
movsb
xor
sub
ljmp
imul
mov
outsb
dec
jae
hlt
pop
jmp
dec
aaa
shrl
lds
mov
out
daa
mov
das
fiaddl
nop
inc
lddqu
shl
shr
mov
inc
cmp
pushf
ds
pop
jl
mov
scas
insb
push
mov
stc
je
cmp
repz
sub
stc
sub
stc
adc
xor
mov
stos
sarl
pop
sbb
jmp
sub
rcrl
mov
or
and
add
xchg
and
out
dec
loopne
cwtl
sbb
mov
inc
daa
mov
loope
rorb
stos
nop
xor
jmp
daa
out
dec
cmp
mov
sbb
stos
mov
fdivr
cwtl
and
jge
je
repnz
mov
mov
int
pusha
outsb
jl
enter
push
and
cmpsl
inc
dec
lods
jo
sbb
into
mov
les
xchg
js
out
add
cltd
aad
fwait
les
jb
cwtl
stos
out
out
hlt
mov
stc
cmp
add
xchg
dec
mov
jb
inc
pop
hlt
xchg
fiadds
xchg
ss
ds
loopne
push
std
or
mov
mov
xchg
pop
rcrl
and
popa
adc
sbb
decl
insl
test
push
dec
cmp
mov
bound
xor
mov
loopne
jp
jb
sub
inc
sti
test
scas
mov
push
in
cmp
push
ret
adc
jg
movaps
xor
popl
sarl
shrb
sti
and
cmpsb
dec
push
shlb
insl
sub
ret
xor
call
fs
cmp
arpl
inc
imul
imul
sbb
in
cmp
addb
pop
mov
jle
cwtl
adc
lea
cld
xchg
jbe
nop
out
xchg
aaa
int
mov
xlat
dec
mov
mov
push
mov
cmp
inc
in
test
jo
iret
data16
add
aaa
in
test
mov
xchg
fldl
cltd
hlt
int3
mov
mov
push
mov
sbb
mov
push
sti
shrl
mov
lock
mov
and
jmp
mov
mov
pop
insb
stos
sub
repz
das
fldenv
or
fisubrs
jo
adc
push
sub
or
sub
scas
mov
imul
push
mov
jl
push
scas
clc
jp
xlat
adc
dec
ss
rorb
std
or
sbb
pop
jl
daa
mov
notb
lods
scas
inc
outsb
ss
xor
int3
arpl
cwtl
popf
push
push
push
and
jo
xchg
mov
out
leave
arpl
pushf
scas
jo
cltd
jmp
into
or
jbe
mov
push
xlat
push
aad
or
xor
jp
and
sbb
test
or
fists
mov
dec
sbb
mov
hlt
fistpl
sbb
dec
addr16
pop
mov
push
xor
mov
sub
xor
add
aaa
xchg
push
or
addb
dec
stc
and
cmpsb
in
mov
mov
mov
out
mov
scas
or
lcall
adc
xchg
cltd
addr16
add
or
jle
shll
xchg
iret
xchg
out
dec
cltd
and
fs
fcoml
mov
leave
mov
pop
int
pushf
stc
dec
xor
test
jp
cmp
mov
xchg
xor
push
lods
repz
mov
ret
push
ret
pop
ficoml
or
or
je
or
andl
or
in
add
imul
pop
lods
rcrb
sub
mov
cs
push
fbstp
popa
ljmp
js
imul
xor
loopne
dec
push
in
or
fsubp
stos
fldcw
sbb
jge
or
loop
adc
push
push
imul
test
xlat
jle
push
sub
or
stc
or
lret
je
dec
dec
loopne
mov
movsl
je
and
std
dec
or
test
mov
mov
pop
shl
adc
scas
pop
cmpb
cmp
lcall
js
clc
jae
test
sbb
data16
and
dec
lret
rcll
jbe
into
aaa
idivl
and
xor
jns
cmp
mov
cmpsl
mov
aad
inc
fisubrl
scas
or
mov
push
aaa
inc
in
mov
jae
test
cmp
xchg
mov
clc
jb
lret
int
inc
sbb
js
loopne
adc
jno
pop
jecxz
xor
lret
test
cmp
push
daa
dec
test
inc
iret
fcomps
add
adc
scas
rclb
mov
in
repnz
stos
mov
rorb
xchg
cmp
imul
xlat
mov
push
push
adc
lds
inc
icebp
stc
xor
push
jbe
sti
outsb
mov
pusha
testl
in
and
in
pop
ja
es
movsb
call
popf
push
mov
xchg
jge
and
push
cs
mov
mov
or
xchg
mov
and
inc
int
inc
bound
roll
xchg
pop
xor
sbbl
and
lcall
ss
testb
or
inc
mov
cmp
shl
fwait
sbb
sahf
jnp
mov
jbe
lods
cmpsl
out
sub
movsb
push
sbb
jb
inc
pushf
or
cmp
pop
dec
test
cli
out
or
outsb
jle
xchg
push
xor
xorl
sbb
sbb
aad
jle
and
sti
or
aad
lods
mov
fisttps
push
test
rolb
lods
xor
test
enter
mov
mov
not
or
mov
inc
fiadds
mov
fs
add
cmpsl
loope
or
sbb
push
cmp
imul
jns
mov
enter
sar
mov
sbb
mov
push
out
nop
jne
mul
adc
cmc
hlt
fsubl
lods
ja
rep
inc
dec
imulb
divl
sub
and
iret
pop
inc
cld
int3
mov
fwait
adcb
cs
pop
jne
pop
repz
outsb
push
pop
les
pushf
jl
pushf
vmovdqa
pushf
push
leave
mov
pop
dec
adc
xor
je
push
movsl
nop
cmp
inc
or
mov
inc
lahf
into
lret
bound
fisttpll
hlt
inc
mov
das
pop
in
jbe
dec
mov
or
out
clc
daa
out
mov
cmpsl
les
jnp
pop
icebp
jo
xchg
mov
ret
mov
jp
pushf
xchg
cmp
jae
sbb
fildl
cld
orl
push
push
xlat
sbbb
dec
pop
mov
xchg
fs
xchg
insb
inc
dec
adc
sbb
mov
mov
xor
pop
outsb
loope
jle
dec
lock
push
pop
popf
popa
push
arpl
sarb
xchg
insb
in
xchg
lret
shrb
inc
imul
in
and
pop
imul
mov
imul
pop
sbb
xchg
nop
sbb
sub
jle
stos
push
and
jl
int
mov
xchg
lcall
fdivr
mov
jmp
cmp
faddl
or
jbe
mov
call
mov
rorl
lahf
gs
push
push
flds
lods
push
imul
dec
loop
inc
adc
jb
cmp
dec
lods
sub
push
mov
enter
cmp
fstpt
sbb
out
cltd
and
insb
xchg
stos
in
shl
mov
push
mov
xchg
jne
pusha
andl
data16
mov
push
cmp
icebp
sbb
mov
sarl
mov
ret
ret
fistpll
aas
stos
xor
and
scas
xor
xchg
adc
jae
fists
fdivrp
or
and
shlb
shlb
sub
add
jnp
packsswb
in
ret
add
dec
hlt
mov
xchg
sub
add
dec
hlt
or
pop
cmc
mov
xchg
push
push
sahf
lock
dec
and
sbb
lds
jnp
rolb
arpl
jne
push
inc
ret
cwtl
xor
int
xchg
push
and
jecxz
cli
fsub
loop
lahf
test
mov
push
lcall
inc
gs
das
xor
rcll
cmp
mov
and
pop
lret
lea
filds
fs
dec
adc
inc
int3
sbb
jbe
jmp
inc
ss
stc
test
xchg
mov
add
add
std
arpl
jae
push
fwait
xor
shlb
aad
jbe
xor
xchg
inc
stc
pop
pop
gs
pop
dec
and
mov
mov
or
sbb
data16
lds
xchg
sub
movsl
paddd
jbe
and
jp
jp
int
push
arpl
aam
dec
gs
stos
jb
lcall
pop
jmp
das
fsubrl
out
ret
xor
int3
cmp
clc
shrl
xor
sub
jne
clc
xor
movl
mov
and
clc
fucomip
cmp
lods
add
iret
std
lods
add
idivl
js
xchg
ss
in
jle
xchg
daa
push
adc
xchg
rep
mov
push
push
jle
xchg
mov
int
add
pop
adc
imul
repz
mov
push
jbe
jge
fs
mov
dec
xchg
aad
sahf
push
out
xor
jns
out
dec
adc
pop
pop
ret
pop
fs
jle
xorl
or
jl
cmp
sub
pop
sub
test
push
dec
in
fdivs
js
cld
xchg
sbb
fstp
ret
bound
or
aam
jmp
mov
mov
push
stos
push
cltd
fs
or
inc
cmp
xchg
pop
jmp
mov
hlt
out
cmp
sub
mov
rolb
in
psrad
mov
or
and
sub
inc
mov
hlt
scas
es
or
rcrb
das
sub
push
divl
js
shl
cmp
cmpsb
mov
loop
les
mov
lret
push
data16
xchg
das
movsl
cmp
push
cmp
bound
into
xor
pop
movsb
std
adc
cmpps
cmpsb
jae
add
dec
dec
mov
cmpb
lods
or
push
jno
pop
mov
ja
push
jbe
xchg
xlat
pop
mov
sbb
fs
rcrl
repnz
xchg
ja
mov
inc
mov
mov
out
scas
and
adc
lds
mov
in
cmp
iret
out
hlt
les
mov
push
add
pusha
jecxz
lret
es
or
mov
mov
test
cltd
pop
lahf
add
imul
mov
ret
xchg
add
scas
mov
jo
cmpl
jnp
scas
lret
add
dec
repz
roll
push
fsubrs
pop
mov
idiv
and
call
add
das
test
loope
aad
popl
jge
call
dec
subl
repz
cmp
mov
int3
arpl
lret
js
and
mov
je
push
iret
push
fidivl
pop
dec
out
pushf
xor
or
insb
mov
jmp
xchg
js
push
lcall
sahf
mov
add
xor
cmp
aad
dec
sbb
jl
xor
pop
movsb
xor
lds
jg
outsl
cmp
mov
mov
int3
inc
fsts
push
je
rolb
rorb
pop
mov
mov
inc
fwait
aas
movsb
cmp
pop
pop
sarl
dec
add
push
or
mov
push
sub
lcall
nop
inc
xor
jecxz
pop
mov
clc
xor
icebp
add
addr16
and
mov
into
push
inc
pop
imul
loope
faddl
stc
or
pop
enter
aam
fmull
mov
clc
jb
push
add
sbb
ret
ljmp
jno
hlt
scas
aaa
enter
inc
lods
cmpsl
push
iret
fmul
leave
pusha
add
into
test
es
dec
fbld
gs
sbb
imul
push
push
ljmp
call
inc
xor
mov
xchg
stc
fldcw
mov
jns
pop
nop
mov
lods
dec
mov
lea
movsb
xchg
mov
sti
shrb
xor
clc
and
dec
mov
inc
out
ds
push
cmp
push
les
imul
cltd
xlat
jb
dec
in
loop
std
adc
in
pop
mov
mov
std
loop
cli
inc
adc
mov
push
mov
int
cmp
mov
xor
push
pop
outsb
js
mov
out
es
out
loope
mov
sti
cs
mov
sub
aad
mov
or
aas
mov
stos
cwtl
dec
mov
adcl
lock
sbb
mov
fstps
shrb
push
into
sbb
cltd
lahf
lret
lds
jg
xchg
leave
lahf
aad
shr
xor
inc
jbe
inc
insb
in
sbbl
mov
pop
lods
shrb
nop
or
dec
push
lcall
mov
js
or
sub
into
fdivp
decl
cltd
inc
mov
fs
pop
lcall
jg
jmp
sbb
cmp
sub
jl
push
pop
rcl
js
sbb
adc
ss
push
fildl
pop
outsb
arpl
mov
mov
rorb
push
aaa
loopne
jle
stos
mov
lods
inc
push
mov
push
rcll
ds
add
lock
sbb
inc
call
dec
das
adc
jno
sbb
dec
and
in
test
push
mov
insl
sbb
push
jae
addl
test
subl
jl
lods
jmp
lea
fcomi
mov
in
add
jecxz
and
jo
xor
mov
jecxz
push
and
cmp
pop
and
or
popf
pop
pop
sarl
ss
xor
cmp
loop
mov
mov
les
in
out
pop
in
cmc
cmc
jl
sbb
adc
mov
mov
push
dec
in
mov
push
mov
leave
add
mov
cmp
xchg
lret
loopne
filds
fnsave
sub
sub
testl
pusha
inc
push
jb
lods
xchg
cmp
mov
or
pop
int
push
mov
lods
xor
mov
aaa
inc
daa
inc
orl
sub
pop
subb
jo
adc
xlat
jecxz
jo
cwtl
outsl
stos
es
cs
in
mov
mov
js
and
cmp
dec
dec
in
push
leave
pop
enter
test
popa
mov
jg
loop
xlat
sbb
inc
rcrb
rorb
xor
les
aam
outsl
pushf
int
fwait
push
andl
xchg
or
fwait
shlb
inc
xchg
jnp
jp
xlat
mov
fs
or
sbb
push
mov
lds
mov
cmp
int3
mov
iret
arpl
xchg
adc
hlt
push
cmp
pop
out
xchg
pushf
repz
cltd
or
ljmp
mov
jnp
and
jns
or
mov
xchg
add
jge
dec
mov
xchg
push
lcall
or
repnz
stos
lret
rol
movsb
mov
or
mov
leave
nop
in
push
popa
mov
ja
cmp
pop
setnp
adc
pop
cmpsb
pop
pushf
sbbl
mov
sbb
int
mov
sbb
shlb
xchg
mov
ljmp
push
pop
shl
and
jecxz
xchg
inc
incl
lret
mov
jmp
cmp
xchg
icebp
enter
sub
scas
push
jae
adc
pop
les
aas
inc
mov
out
xor
mov
test
ja
ds
cltd
and
or
aas
adc
out
jle
jmp
sbb
scas
jge
ret
mov
loope
xor
in
jmp
andl
icebp
out
js
test
cmp
add
dec
nop
push
mov
sub
adc
fwait
lahf
fiaddl
loope
mov
mov
clc
pop
mov
adc
mov
mov
push
mov
insb
adc
mov
xorl
inc
jmp
add
mov
jmp
leave
popa
and
movsl
xchg
out
jge
xchg
adc
jp
insl
lods
das
inc
out
add
jmp
xchg
pusha
sbb
lds
outsl
cmp
repz
jae
jno
cmpsl
push
outsl
pop
mov
sahf
xchg
mov
and
jne
xchg
pop
ret
fiadds
and
jbe
les
push
in
pop
mov
push
adcb
ljmp
cmpb
fidivrs
push
clc
mov
sub
adc
rcl
repz
pop
loopne
leave
adc
push
push
jmp
sahf
dec
push
fistps
ds
xlat
outsl
mov
pop
jae
and
mov
cli
or
int3
shrl
mov
sbb
mov
shrb
adc
mov
fcmovbe
test
imul
subl
insb
pop
stos
fwait
inc
sarl
or
and
mov
in
sarb
rcll
or
jle
cmp
mov
add
lcall
gs
mov
sahf
mov
mov
jo
push
jb
push
out
std
xlat
outsb
cs
in
or
es
mov
mov
fldt
mov
jmp
xlat
or
jp
jbe
addl
mov
adc
add
pop
lock
push
cld
mov
roll
lds
fsubr
negl
aas
jp
sbb
jl
xchg
out
mov
push
jno
lahf
push
lahf
loopne
inc
adc
out
popf
sbb
add
sarl
mov
scas
sub
sti
fidivl
or
aam
adc
mov
lods
outsl
dec
fmuls
lret
cwtl
rcl
cli
xlat
mov
pop
xor
push
or
jne
push
xor
aam
popf
negl
stc
cwtl
push
test
sub
pop
adc
scas
push
vshufpd
lret
push
leave
adc
rorb
fmuls
push
or
iret
mov
add
xchg
mov
sub
fcompl
cmpsb
xchg
push
jbe
mov
mov
mov
sub
repz
repz
sub
cmpsb
xor
aam
fcmovu
enter
int
rcll
jo
je,pn
mov
dec
cmp
sub
push
nop
out
hlt
mov
fcomps
out
lcall
cmp
das
fistpll
clc
stc
dec
mov
xchg
jg
dec
out
in
mov
cwtl
out
cmp
jecxz
in
out
andb
in
cmpl
repz
sub
cmp
mov
lods
fcmovnbe
les
adc
in
fwait
lock
mov
or
mov
out
loop
popa
ljmp
mov
lds
stos
fists
insb
nop
mov
pop
push
je
cmp
ret
aam
add
ljmp
jmp
sub
je
test
in
test
add
arpl
pop
pop
and
out
sub
std
lahf
call
call
mov
xlat
jg
xlat
in
js
push
and
inc
or
push
cmp
fdivs
stos
adc
push
aam
mov
jge
movsl
mov
stc
push
push
inc
add
bound
sbb
out
push
enter
inc
out
dec
in
jecxz
and
pop
scas
dec
push
aad
lds
arpl
lret
and
push
nop
repnz
idiv
cmp
jge
add
mov
mov
nop
push
xchg
aad
xor
push
arpl
fs
cmpsl
inc
test
or
test
icebp
imul
mov
pop
lods
jae
dec
fisttpll
js
addl
adc
or
xor
inc
xchg
daa
scas
mov
lods
stos
dec
movsl
cmp
outsl
lret
adc
mov
cmpsb
out
and
insb
sub
xchg
fxch
scas
mov
outsl
push
jle
push
push
int
cmp
sbb
rcrb
xchg
inc
fdivrs
decl
jae
and
popa
cs
and
in
and
jae
int3
mov
bound
xchg
stos
mov
inc
jnp
out
jb
cwtl
dec
aad
pushf
scas
imul
testb
push
jb
je
or
in
mov
ss
cmp
lahf
push
out
dec
jle
add
xlat
loopne
lods
adc
adc
pusha
enter
out
daa
repnz
in
fnstsw
and
jge
cltd
test
pop
cli
lds
mov
leave
xchg
sbbl
jb
inc
inc
test
fisubrs
shrb
mov
dec
loopne
test
rcl
in
add
mov
ret
jbe
pushf
insb
or
cmc
call
sub
pop
cmp
mov
cs
cld
push
jns
rdpmc
mov
and
cmp
cwtl
cltd
xchg
inc
lret
xchg
mov
lea
rorb
icebp
aas
repz
dec
dec
jne
adc
outsb
adc
fimuls
fadd
or
shlb
into
andb
mov
xor
in
pop
dec
and
add
testb
cmp
inc
pushf
jae
les
fbstp
xchg
stos
jle
mov
fwait
shll
jmp
pop
dec
adc
int
imul
xchg
std
inc
fmul
inc
push
xor
mov
xor
lret
lds
test
cmpl
add
add
ret
cs
pop
xchg
les
scas
les
insl
jno
jl
cmp
sub
mov
loopne
into
nop
xor
iret
or
xor
shrb
mov
arpl
dec
hlt
aas
fwait
push
push
cli
les
arpl
inc
mov
add
mov
or
xchg
adc
push
mov
sbb
aas
call
mov
out
pop
clc
mov
arpl
sub
cld
dec
pop
lcall
or
sbb
push
outsl
adc
xor
inc
leave
sbb
xchg
iret
fcomi
push
mov
int3
xchg
fnsave
movsb
dec
adc
add
into
inc
mov
int
jno
lret
mov
push
fst
enter
repz
and
and
mov
daa
pushf
mov
sbb
enter
lods
xchg
popf
lret
mov
jns
rep
popa
adc
add
xor
jae
rcr
xchg
cld
dec
push
push
std
sub
cmp
dec
mov
jo
testl
xchg
loop
shrb
lret
jmp
lods
mov
in
cmpsb
subl
inc
idivl
adc
gs
mov
inc
xchg
pop
aas
addr16
sbb
jle
lcall
loop
xor
ret
jns
push
sbb
fstpl
aad
push
aaa
pop
lfs
ret
sti
mov
and
adc
sti
stos
mov
stos
test
cmc
test
fcmovnbe
fidivs
add
mov
or
add
cli
ljmp
in
inc
fwait
xchg
popa
and
ret
mov
insb
inc
std
pop
aaa
pop
mov
pusha
fs
stos
inc
callw
inc
nop
adc
jo
jbe
sub
enter
sub
fcoms
popf
sbb
inc
scas
cmp
xor
in
push
movsl
push
mov
jg
out
xchg
arpl
jo
es
mov
push
add
and
testl
pop
mov
cmp
xchg
fstpl
sub
or
cmp
inc
inc
push
mov
xor
lcall
sbb
xor
xor
mov
imul
push
push
push
stc
test
jno
clc
mov
xlat
fbstp
sub
and
in
xchg
xchg
ret
stc
xchg
sub
jbe
mov
push
test
dec
imul
dec
sbb
jne
outsl
cmpsl
out
stc
or
hlt
ss
sub
outsb
xor
out
js
push
mov
stos
repz
inc
aam
lea
push
std
js
sbb
scas
dec
xor
mov
add
sub
mov
out
push
jmp
test
ret
inc
inc
jp
aas
push
lea
inc
lods
xchg
fisubs
ret
cmpl
ds
xor
dec
adc
addr16
sub
xor
mov
imul
hlt
mov
test
ds
adc
inc
addr16
xor
xchg
test
lret
sbb
jae
imul
push
xor
push
jns
jmp
leave
dec
out
xor
cli
shr
pop
cmp
shlb
mull
rcll
jb
imul
int3
xchg
and
push
sbb
int
push
or
loopne
push
sub
out
sti
gs
pop
jae
inc
xlat
adc
in
test
jno
and
iret
popl
push
push
add
roll
xor
inc
loopne
mov
les
or
fcmovne
rcr
add
and
notl
in
loop,pt
jo
jnp
sub
nop
jnp
push
inc
out
or
enter
mov
mov
ljmp
xlat
cmp
dec
dec
mov
and
sbb
xchg
mov
outsl
addr16
sahf
js
out
test
scas
repnz
xor
xlat
cmpsl
jnp
jae
out
pop
adc
inc
cli
xchg
lods
mov
pop
add
test
push
jbe
mov
mov
cmpb
lods
cmp
mov
mov
adc
add
xchg
frstor
aad
push
cld
dec
adc
pop
enter
imul
movsb
call
icebp
shl
or
cmpsb
je
add
jg
imul
scas
inc
xchg
cmc
mov
push
ret
jp
outsl
xchg
test
jae
xor
push
inc
stos
dec
lcall
insb
xchg
cs
jne
sub
pop
lea
inc
or
popa
orl
dec
dec
lahf
icebp
mov
mov
push
jb
mov
testl
int
jle
push
or
ss
stos
sbb
imul
leave
imul
test
outsb
shl
insl
cmp
je
inc
popf
or
inc
xor
mov
inc
mov
enter
xor
decb
mov
pop
mov
movsl
nop
ljmp
shlb
inc
push
mov
adc
mov
mov
in
dec
subb
ja
ja
mov
xor
sub
pop
push
jp
and
xchg
cmp
jmp
cmp
mov
lahf
mov
xchg
icebp
rol
xlat
push
adc
inc
das
rcrl
mov
jb
neg
xor
mov
xchg
inc
push
popa
movsl
inc
inc
sub
cwtl
push
dec
mov
and
inc
pusha
and
pop
inc
cmp
mov
xchg
sbb
mov
in
arpl
sbb
or
xacquire
orl
sub
sbb
pop
mov
xor
aaa
stos
into
jmp
hlt
pop
imul
pop
repnz
adc
pushw
bndstx
mov
clc
clc
xlat
mov
inc
mov
adc
xor
test
fnstenv
lods
jb
leave
pusha
push
scas
fiaddl
dec
loopne
clc
ret
lret
pop
pop
lock
cmp
repnz
jns
and
lret
mov
into
xchg
data16
das
dec
lahf
test
imul
pop
or
add
popa
jmp
sti
xchg
cwtl
or
add
dec
sbb
test
stos
xlat
pop
mov
jne
xchg
stos
cld
and
mov
xchg
out
mov
mov
jne
addr16
inc
jp
pop
push
mov
adc
imul
push
andl
adc
sbb
aad
loop
repz
or
cltd
cltd
stos
popf
jns
stc
pop
adc
mov
es
cwtl
mov
ret
jl
xlat
or
and
js
pop
jbe
call
aaa
in
shl
inc
shrb
add
add
mov
stc
dec
mov
notl
rcll
je
ss
or
jb
sti
aam
pushl
orb
cltd
sahf
cmc
mov
xor
repnz
add
scas
xorb
popf
jmp
xor
and
sti
inc
cmp
js
pusha
mov
push
idivl
mov
ret
push
mov
daa
movsb
outsl
ljmp
jl
sarb
inc
sbb
pop
icebp
inc
jno
out
gs
loopne
popa
ljmp
sarb
dec
inc
dec
xchg
adc
es
gs
xchg
popf
imul
out
xchg
das
scas
dec
pop
loope
or
push
mov
jle
push
push
lret
lret
adc
or
leave
sti
dec
loope
movsb
adc
sbb
adc
clc
aad
loop
jbe
xor
movl
add
cli
mov
aad
xor
outsl
cs
and
jge
inc
pop
sub
pop
push
outsb
add
adc
sbb
adc
cmpsb
out
xor
pop
ljmp
xchg
mov
pusha
jg
insb
dec
pushf
aaa
pop
mov
aam
outsb
sbb
ret
xchg
ja
pop
dec
ficompl
sarl
xor
dec
outsb
or
test
fwait
idivl
dec
xor
or
xlat
inc
mov
cmp
pop
dec
adc
sbb
mov
sahf
fnstcw
mov
iret
es
cmpsl
xchg
int
icebp
pop
xchg
pop
mov
sbb
pop
xchg
ss
cmp
jbe
into
shlb
jbe
stos
and
scas
and
cld
icebp
addr16
hlt
sbb
test
inc
fcoms
cltd
sbb
jne
in
dec
out
test
jmp
mov
aaa
or
mov
in
outsl
addb
inc
and
pusha
or
dec
pop
test
out
mov
ljmp
jb
aad
inc
aas
lret
xchg
dec
and
aaa
sub
fs
inc
mov
adc
mov
out
jno
mov
mov
enter
inc
xor
cs
je
cmpsb
arpl
mov
cltd
push
cmpsl
inc
in
push
cmp
mov
mov
fdivl
jns
jae
adc
dec
es
inc
pusha
or
mov
rcrb
add
jmp
xor
andb
mov
es
cmp
negl
andb
mov
std
shld
ja
out
xchg
push
dec
fisttps
sahf
leave
clc
xchg
loope
and
dec
ret
sbb
jnp
shl
imul
mov
adcl
xor
sbbb
push
subb
rclb
xchg
mov
rcrb
test
andb
mov
loopne
mov
mov
sarl
rcrl
mov
enter
insb
mov
or
ror
inc
dec
sti
out
shrl
adc
mov
mov
popf
movl
jmp
cmp
mov
rclb
jno
lea
ret
inc
les
cmp
and
push
inc
loopne
jae
hlt
push
aam
cmc
and
incl
sbb
cmp
enter
aas
subl
rorb
xor
test
push
cld
cmp
and
ljmp
fnstenv
push
add
movsb
rolb
or
xor
mov
lds
sbb
fdivp
xchg
mov
add
sub
call
dec
cwtl
xchg
test
mov
lods
lcall
aas
aam
sub
pop
test
adc
cmp
jle
adc
inc
xlat
dec
lcall
push
fwait
sub
addr16
mov
popl
mov
inc
pop
lcall
mov
addr16
sbb
cmc
push
cmp
mov
mov
pop
loop
scas
xchg
lret
js
mov
loope
movsl
push
sub
jmp
mov
rorl
adc
loop
cmp
mov
pop
call
daa
inc
pop
jo
int
mov
xchg
cmp
test
insb
js
adc
and
mov
mov
fwait
loopne
int
dec
cmp
sub
and
and
mov
fidivs
xchg
pop
scas
loope
or
mov
pop
xor
xor
aam
repz
test
add
or
lods
lahf
pop
ret
jmp
arpl
mov
sbb
xchg
pop
sti
sti
push
daa
dec
loope
jb
es
leave
repz
sub
pop
sti
or
fisubrl
adcb
dec
mov
out
sub
pop
pushf
and
aaa
xchg
ljmp
jge
ljmp
stos
mov
iret
lds
bound
pop
aad
arpl
lods
iret
call
je
arpl
test
mov
mov
lea
xchg
sbb
andl
ljmp
insb
sar
push
xor
int3
or
xor
test
nop
rclb
cld
pop
int
lods
lods
mov
xchg
stc
inc
xor
lret
aaa
lods
je
xor
imul
aas
push
jmp
mov
fwait
jl
shll
cmp
out
popf
jmp
cmp
jge
xlat
jmp
cmpl
lods
or
je
out
loope
jae
andb
ja
inc
sub
jle
xchg
push
mov
movsb
cwtl
add
mov
lcall
pop
jno
dec
movsb
sbb
frstor
cmp
scas
gs
fcmovbe
dec
xchg
out
scas
mov
iret
dec
loop
sbb
sbb
movsb
cmpsl
xor
stos
dec
mov
cmp
insb
shlb
mov
dec
lret
shl
fsubrs
fisubrl
mov
mov
sbb
test
push
lods
aad
xchg
pop
xor
sahf
mov
fdivrs
sub
xor
push
lcall
inc
fistpl
mov
fildl
mov
in
insl
push
xchg
pop
addr16
push
xchg
imul
xor
push
cmp
lods
stc
ret
pop
push
imul
sti
jbe
pop
rclb
mov
test
jno
sbb
aas
leave
dec
mov
fldl
fsts
cwtl
inc
shl
sbbl
pop
pop
xchg
mov
and
xchg
loop
cwtl
inc
mul
pop
push
add
jge
aam
or
add
and
call
fdivrs
inc
sbb
stos
jg
push
dec
out
cmp
or
loop
mov
mov
iret
sarl
je
sbb
lea
adc
mov
mov
inc
sub
aaa
sbbl
push
test
out
hlt
mov
inc
dec
inc
push
jae
inc
cmpsl
xchg
dec
dec
cmp
nop
test
push
and
loop
mov
mov
out
sub
aad
add
cwtl
rorb
or
fildll
cmpsb
cmp
les
fwait
or
jmp
out
add
rcrl
mov
jb
mov
mov
fnsave
mov
pop
push
mov
cmpsb
aaa
jbe
inc
sub
xchg
push
ljmp
jb
xor
loopne
mov
xchg
dec
and
or
clc
testb
test
hlt
lahf
stc
test
inc
xor
xlat
cld
jecxz
jle
popf
pop
sahf
into
mov
nop
and
out
xchg
fcomi
xchg
cmp
jge
add
xchg
sbb
test
push
shll
push
xor
cli
mov
xor
push
mov
dec
orb
or
out
ret
lcall
inc
push
dec
cmpsl
andb
sbb
mov
testl
jle
cwtl
pop
xchg
or
es
stos
pop
inc
and
sbb
xor
nop
and
xor
and
mov
fwait
clc
in
sbb
mov
add
adc
pop
xor
push
adc
orb
mov
inc
outsl
push
outsl
cmp
scas
fimuls
mov
dec
jno
cli
mov
adc
popl
mov
mov
push
loope
subl
sbb
movsl
ja
mov
inc
pop
cmpsl
jecxz
inc
and
and
test
sbb
push
dec
jnp
aas
jge
pop
jg
sahf
pop
shll
in
sti
or
cmp
jmp
test
call
and
mov
mov
inc
adc
insl
add
loope
sub
dec
lock
sub
and
cli
xchg
mov
pop
sbb
test
cwtl
outsl
xchg
cmc
fcmovu
cmp
pop
push
xor
jmp
popa
mov
pop
pop
in
es
xor
lock
xchg
outsl
push
ret
jge
xchg
sbb
jbe
clc
mov
jns
daa
or
xchg
jmp
dec
pop
sbb
dec
popa
in
jo
inc
aaa
sbb
aaa
ret
pop
xor
negl
cmp
xchg
cmp
cmp
insb
leave
test
push
inc
jmp
pop
sub
push
sarb
mov
mov
pop
int
ss
movb
mull
inc
mov
fnsave
add
es
inc
outsb
insb
inc
frstor
sub
test
xor
xchg
js
arpl
sbb
ret
and
cs
pop
lea
jnp
les
testb
call
mov
add
arpl
xchg
dec
add
and
add
shrl
aaa
sbb
jo
hlt
sub
sbb
aaa
mov
data16
push
aaa
push
sbb
mov
jmp
addb
jbe
lea
add
ds
mov
mov
cmp
and
or
scas
fcmovne
xor
frstor
or
xchg
lock
leave
test
outsb
jl
icebp
add
sub
mov
jmp
cmp
mov
mov
iret
insb
and
lea
in
sbb
sub
aaa
mov
jl
insl
adc
mov
inc
and
stos
in
adcl
adc
sti
or
mov
test
adc
insl
popf
lods
scas
xlat
push
dec
cmp
pop
push
jecxz
mov
inc
in
mov
mov
pop
in
fiadds
std
mov
mov
roll
int3
sti
stos
xor
lret
js
fsubrp
jle
jp,pn
xor
jl
sbb
and
mov
js
enter
dec
lock
jae
and
cli
lock
sbb
pop
mov
mov
arpl
aam
fistl
mov
andb
dec
test
aaa
int
je
inc
mov
push
jbe
in
dec
es
mov
out
jl
std
enter
aad
std
inc
or
leave
cmp
mov
hlt
jno
push
mov
sbb
inc
fdivs
mov
mov
sbb
mov
aad
cltd
addr16
dec
jge
inc
aam
cli
pusha
or
adc
es
xchg
outsb
fwait
imul
icebp
sbb
cmp
jp
xor
addl
lret
sub
movsl
mov
xchg
mov
clc
mov
mov
cli
insb
mov
test
inc
lods
fdivrl
loopne
mov
inc
and
insl
mov
ret
ds
push
dec
mov
mov
xlat
lods
cs
jmp
jecxz
sub
xchg
sub
or
lods
ja
mov
icebp
loopne
jae
fwait
shll
sub
jne
js
popa
and
data16
rorl
je
lods
shll
add
icebp
pop
adc
test
add
jl
cmp
popf
out
lret
jbe
popf
push
in
add
popf
scas
xor
sub
mov
jae
add
and
mov
rcll
add
sti
push
mov
sub
pop
push
jmp
test
jo
add
adc
lea
out
dec
cmp
out
insb
imul
test
cmp
mov
loope
lods
int3
in
shll
cwtl
cmp
bnd
call
mov
jno
es
nop
sbb
and
sub
jne
mov
pop
sub
cmp
int
mov
arpl
loope
xor
pop
insl
shlb
fdiv
ss
inc
xchg
mov
mov
xchg
cwtl
dec
testl
cwtl
mov
mov
inc
xor
je
mov
loop
and
or
add
mov
mov
lcall
repz
cltd
xor
mov
cmp
addr16
xor
dec
std
adc
cs
sbb
pop
cmc
test
lods
js
jl
or
imul
sub
lret
pop
fidivs
pusha
push
jmp
dec
cmp
xor
sbbl
pop
pop
idivb
shll
or
dec
pop
loop
inc
cmp
call
ljmp
lock
pop
sub
xchg
ja
pmuludq
andl
leave
insb
mov
xchg
dec
cmp
pop
mov
push
dec
and
hlt
jne
pusha
jl
or
sub
pop
arpl
scas
pushf
aaa
pop
pop
fldcw
adc
std
pop
subl
push
sbb
or
cmp
mov
movsb
push
jb
shll
push
aas
andb
jge
mov
leave
pushf
adcb
ljmp
idivl
fwait
sti
movsb
pop
xchg
sub
dec
in
setle
lcall
insl
sub
mov
scas
pop
push
movsl
pop
cmc
adc
add
xchg
mov
jb
and
dec
lock
cmp
fiadds
jo
lret
lods
pop
in
xchg
add
jne
leave
add
xchg
xor
cmp
push
into
popa
inc
jecxz
xchg
adc
cmp
or
xchg
mov
and
cwtl
mov
inc
int3
mov
xchg
mov
pop
cmc
data16
and
mov
fcomi
mov
push
cmpsb
dec
jo
lcall
and
hlt
xchg
insb
test
leave
mov
ja
pop
inc
aaa
gs
mov
sub
pop
mov
out
dec
pop
mull
mov
pop
xchg
cmp
mov
pop
iret
inc
movsl
push
lods
adc
int
pop
adc
push
xor
inc
scas
sub
rorb
imul
je
lea
fistpl
mov
imul
int
mov
cmpl
adc
lds
andb
mul
mov
imul
jl
xor
xor
leave
cmp
cli
nop
bound
out
stc
call
mov
inc
cmpps
pop
mov
rcrl
mov
sub
addr16
lods
adc
call
jmp
add
xor
aam
subps
push
mov
xlat
dec
sub
inc
loope
xchg
into
jbe
xor
pop
pushf
pop
repnz
pop
adc
addb
jae
mov
dec
inc
pop
pop
jbe
bound
and
leave
hlt
sbb
mov
or
xchg
stos
xchg
push
sahf
clc
repnz
das
fisubrl
mov
xchg
add
or
inc
push
stos
inc
popf
sets
push
pop
cmpsb
cmp
sbb
sbb
jne
push
in
mov
jbe
out
pop
xchg
cmp
pop
cmc
mov
repz
test
inc
test
adc
ds
xor
xor
nop
fwait
scas
xlat
lock
lret
xlat
sub
add
into
xor
mov
mov
ret
jp
jecxz
pusha
outsl
arpl
add
out
sub
mov
xor
lret
ret
bound
add
hlt
lret
cmp
and
sbb
pop
test
shlb
stc
push
mov
loop
stos
arpl
jmp
pop
loopne
adc
test
inc
fcoms
mov
mul
xor
js
jge
jp
loope
leave
fwait
or
lret
mov
jge
adc
in
add
movsb
cmp
and
jle
add
mov
ss
mov
testl
dec
into
xorl
fwait
out
cmp
leave
inc
mov
je
data16
daa
test
sti
adc
or
stos
sti
aaa
pop
ds
pushf
pop
loop
xchg
push
dec
incl
rorb
incb
sar
pusha
add
sbb
or
mov
arpl
inc
mov
fstpt
leave
mov
mov
fidivrs
push
cmpsb
xchg
mov
test
mov
xchg
xorl
sub
loopew
repz
dec
and
dec
bound
cmp
add
arpl
cmpsb
cmc
addl
push
fistps
push
adc
sbb
and
fucomi
xchg
std
std
fistpll
xchg
adc
movsb
lcall
aaa
cmp
push
push
or
cmp
xor
dec
loopne
cmp
add
xor
ss
sub
testl
jae
scas
push
jge
push
iret
fbld
imul
imul
je
jl
mov
mov
jbe
lods
cmpsl
jae
add
cmp
aas
out
pop
icebp
push
add
mov
das
mov
sub
sub
test
orb
in
fistpll
popf
cld
stos
and
xchg
stc
orl
cltd
xor
insb
adc
mov
mov
pop
mov
das
and
cmc
mov
mov
pop
dec
imull
movb
fdivrs
in
jnp
xchg
inc
sbb
fbstp
das
push
aaa
shrl
and
loop
iret
sub
mov
dec
ret
bound
or
mov
and
inc
bound
pop
imul
daa
lods
rolb
cmp
cltd
cmpsl
cmpsl
cmp
xor
jmp
out
lds
fbstp
in
jecxz
sysret
sbbb
cmp
pop
fsts
inc
dec
sti
xchg
jne
je
ja
cwtl
xor
jns
cmpsb
sbb
mov
out
cld
or
dec
xor
cmc
outsl
int
push
lcall
loopne
mov
lea
repnz
add
cmp
mov
sub
rclb
push
xorb
repz
fdivl
inc
sub
sbb
fs
pusha
sti
inc
jp
jae
out
xchg
jae
sbb
int3
test
jno
movsl
stos
xchg
sbb
pop
sbb
lret
or
dec
fiaddl
sahf
loopne
add
fadd
mov
sti
shrb
shlb
jo
lds
std
ss
mov
lds
popf
gs
dec
iret
cmc
dec
mov
lods
or
and
and
mov
ret
pop
cwtl
sub
xor
mov
sbb
data16
mov
dec
nop
inc
inc
push
call
imul
cmp
xchg
jmp
add
sub
adc
mov
xor
fnstsw
sbb
dec
loop
fs
or
cmp
pop
push
xchg
insl
stc
cli
push
ss
sarl
dec
clc
inc
jno
out
push
pop
xchg
nop
loopne
adc
xor
dec
jmp
pop
loopne
cmp
mov
inc
nop
sub
fldcw
aaa
lret
cmpsb
in
frndint
call
jle
int3
jbe
jmp
and
pop
adc
jns
cltd
dec
insl
adc
icebp
inc
sbb
sub
sub
pushf
test
xchg
std
add
and
xlat
pop
addr16
int
subb
jb
jnp
mov
insl
cld
cmc
pusha
push
xor
jp
mov
mov
stos
jbe
in
xchg
or
jnp
fnstsw
pop
out
xlat
fisubrs
dec
jae
or
sub
or
das
cli
push
inc
push
lahf
popf
xchg
rclb
jno
xchg
imul
scas
add
sbb
hlt
nopl
ds
das
add
cs
movsb
mov
sbb
xchg
push
enter
decl
movsl
movsb
inc
push
popa
adc
inc
dec
aam
out
add
arpl
ret
mov
lahf
xor
cmp
scas
stc
in
decl
sbbl
adc
lahf
testb
sbbb
and
xor
fdivrl
outsl
dec
int3
add
add
sahf
sub
sbb
imul
jns
aas
ljmp
xor
lock
jnp
sub
adc
inc
int
pop
dec
sahf
push
imul
orl
movsl
sub
and
mov
fidivrs
into
pop
sahf
push
out
rcr
sahf
mov
rolb
cmpsl
add
cwtl
out
and
stos
pushf
test
cmpsb
mov
mov
push
arpl
jo
testb
test
and
addl
xor
adc
cmp
mov
popa
xor
lods
mov
push
mov
pop
lods
push
aam
mov
mov
jge
scas
loop
and
inc
sbb
xchg
repz
dec
daa
in
andl
movsl
add
mov
or
pop
fwait
dec
xchg
jg
sbb
cmp
cmp
push
repz
out
fs
repnz
repnz
sbb
aam
imul
repz
pop
adc
ds
cmp
jecxz
jecxz
dec
adc
add
sub
ds
insl
push
cmpsb
rorb
repnz
call
xor
jbe
popa
add
data16
fisubs
inc
xchg
xchg
in
sub
push
ja
mov
push
ret
decb
aad
leave
je
adc
rcrl
arpl
sub
mov
shlb
pop
cli
cli
test
scas
out
pop
data16
fisubl
adc
inc
mov
add
in
imul
movsb
ljmp
lret
out
scas
sbb
dec
push
mov
repnz
sbbb
adc
cs
insl
in
inc
rorb
xchg
mov
cltd
je
daa
ret
push
or
in
add
scas
cmp
imul
fwait
push
sub
pop
lret
pop
jnp
pop
jmp
movsl
nop
daa
mov
in
mov
scas
and
jns
pop
and
push
jp
add
jns
cltd
std
cmpsl
mov
xor
adc
push
xorl
scas
sbb
fwait
cmp
dec
frstor
stc
loopne
imul
mov
jae
inc
xor
inc
cmpsb
cli
push
lret
xlat
xchg
dec
cmp
bound
push
mov
out
test
push
and
dec
movsl
push
xchg
xor
mov
adc
xchg
lods
inc
push
ja
adc
cmc
cwtl
xlat
add
les
insb
into
daa
mov
lea
subl
dec
ds
stos
out
fstpt
mov
push
push
adc
ja
push
inc
sub
lds
hlt
cmp
pop
xor
mov
out
sub
and
fs
pop
push
mov
mov
fs
jno
push
push
adc
sbb
jmp
scas
and
lahf
sbb
hlt
into
adc
jo
xor
and
aam
and
jns
ds
sbb
out
in
push
push
push
negl
fwait
popa
cmp
lock
xor
pop
movsl
fidivrs
andl
or
fisubrl
inc
sub
nop
jmp
mov
cmp
jecxz
push
sbb
xchg
xorl
scas
jo
inc
sub
addl
dec
int3
cmp
cltd
je
pop
adc
sbbl
add
mov
dec
xchg
pop
push
adc
mov
sbb
xchg
lock
stos
fnstenv
sbb
adc
shrl
xchg
out
pop
pop
xchg
mov
jg
ficoms
and
or
jp
out
mov
xchg
mov
jb
daa
pop
imul
adc
icebp
mov
push
sub
loopne
push
inc
cmp
outsb
imul
js
add
or
test
push
popa
imul
mov
pop
mov
or
cmp
sbb
jecxz
mov
sahf
xor
mov
xchg
dec
xor
rep
or
mov
pusha
mov
imul
addl
sbb
or
add
and
inc
mov
loop
cmp
fmulp
adc
popf
inc
lock
fcoml
nop
cmpsl
leave
aas
mov
cmc
idivb
sub
rorl
mov
or
mov
out
pop
shrb
sub
push
push
adc
xor
fbld
inc
stos
add
loope
nop
aas
in
dec
cmc
lret
jnp
ja
adc
arpl
sub
cmc
pop
outsb
inc
pop
ljmp
out
int3
push
adc
mov
popa
jmp
fsubrs
inc
dec
mov
xor
sub
mov
frstor
add
and
outsl
inc
adc
sbb
xor
add
sbb
adcl
cmpsl
lock
jbe
dec
or
bound
loope
jb
test
setge
xchg
jno
into
mov
jns
fsubl
cli
pop
cmp
in
jns
jne
ljmp
imul
jno
xorl
jle
lret
xchg
popf
pop
push
in
call
and
xorl
or
insb
mov
add
sahf
fcoml
in
mov
dec
in
mov
insb
cli
xchg
lret
stc
mov
and
out
xchg
push
dec
cmp
inc
xchg
fdivp
loope
jnp
sbb
sarl
cwtl
sbb
cmp
xchg
jle
rcrb
or
data16
mov
adc
sbb
ja
aaa
mov
add
insl
shl
jge
cmp
and
push
jle
addr16
push
scas
push
push
pop
repnz
lret
xchg
pop
cmp
inc
fstpt
mov
bound
pop
mov
xchg
xor
inc
lock
fstpt
int
cld
pop
ss
outsb
sti
aas
dec
icebp
imul
mull
js
hlt
dec
out
fists
ljmp
push
jo
xchg
mov
out
jecxz
jmp
ss
scas
in
xchg
jne
leave
adc
ret
hlt
sbb
jno
sbb
xchg
cli
dec
add
std
push
mov
or
stos
mov
std
push
gs
mov
sti
sub
mov
cwtl
inc
leave
cmp
pop
lret
js
adc
or
sahf
xchg
popf
and
ljmp
fnstcw
push
adc
or
jns
inc
mov
pop
mov
xchg
and
mov
jmp
into
popa
test
sub
insl
add
pop
jb
xchg
dec
cli
xchg
push
cld
dec
test
lret
mov
mov
jae
mov
out
mov
scas
enter
jns
lods
inc
or
dec
arpl
xchg
sub
aad
hlt
fists
pop
push
sbb
cmp
test
push
dec
je
jecxz
call
dec
push
xor
push
jne
mov
lea
xchg
jbe
inc
cmpsl
push
xchg
fstps
mov
daa
or
pop
add
fidivrl
int
sarl
sub
test
outsl
mov
jge
stos
lea
sub
jns
jno
lock
sub
out
or
popl
call
push
test
into
push
jb
std
sub
pusha
pop
outsb
pop
adc
inc
dec
ucomiss
je
inc
dec
loopne
mov
xchg
add
mov
shll
mov
jecxz
mov
ficomps
inc
les
lea
aam
xchg
outsb
pop
pop
jl
sbb
push
xor
and
into
aaa
sub
push
imul
push
imul
hlt
inc
pop
fdivl
addr16
cwtl
jecxz
cltd
sbb
cmp
iret
push
cmp
xchg
nop
clc
in
inc
cmpsl
mov
les
push
inc
data16
arpl
push
shrl
mov
cmc
xlat
xor
push
pop
push
shl
clc
ror
xor
decb
mov
pop
push
sub
push
adc
xor
movsl
push
jno
push
sub
xor
inc
shrl
pushf
outsl
in
sbb
dec
jns
std
clc
imul
cmc
xchg
and
cltd
push
adc
adc
xchg
cmp
test
xchg
movsb
add
mov
bndstx
and
imul
sbb
and
call
jb
pop
pop
jl
mov
add
mov
xor
adc
leave
and
subl
loope
shrb
mov
stos
sbb
stos
jo
ret
add
test
shrb
ds
outsl
out
repnz
and
pop
adc
aad
shll
jbe
pop
lahf
fdivrs
sbb
xor
sbb
addr16
push
fistpl
out
mov
cmp
dec
je
xchg
xor
bound
or
fdivrs
stos
inc
mov
push
movsl
incb
fidivs
and
jnp
mov
scas
lea
in
aaa
mov
call
xor
aas
shrb
xchg
lret
mov
cli
or
mov
jmp
lret
pop
jp
insl
jo
test
and
pop
mov
add
mov
aam
add
xorl
jns
mov
ja
ffree
or
clc
inc
inc
pop
adc
test
mov
xchg
pusha
imul
xlat
test
cmp
push
int
icebp
jne
xchg
inc
jbe
lahf
sub
pop
loop
mov
cwtl
orb
mov
cli
lods
mov
fsubrs
rcl
xchg
insl
lcall
rcrl
pop
test
mov
xchg
jnp
jg
add
pop
into
leave
das
mov
xlat
arpl
xchg
mov
mov
push
push
mov
inc
xor
test
popf
flds
push
out
sti
lahf
stos
sub
sub
push
sub
xor
icebp
mov
mov
rcrb
mov
shl
jnp
fdivrl
ficompl
pop
add
dec
inc
test
insb
xchg
push
les
sahf
xor
or
jg
js
jge
ds
jno
push
les
test
outsb
adc
loop
add
out
test
fiadds
fdivr
sbb
pop
or
push
daa
cwtl
pop
aam
mov
pusha
pop
aad
test
les
jg
mov
inc
movsl
jge
stos
stc
fnstsw
ret
mov
sbb
pop
mov
xchg
test
cmp
xorb
sub
mov
test
xchg
sub
adc
push
push
jge
mov
dec
fadd
into
sub
dec
test
data16
mov
xchg
aaa
adc
lahf
jmp
data16
int
xchg
jbe
cmpsb
jae
and
xchg
sub
lds
xchg
popf
cmc
sbb
lds
outsl
jmp
jecxz
sahf
pop
xor
stos
insl
shl
lret
mov
xlat
pusha
orb
pop
repnz
add
sub
sbb
adc
cli
mov
fstpt
mov
or
pop
push
pop
pushf
bswap
mov
xchg
in
dec
mov
iret
jae
ja
xchg
sbb
les
dec
dec
and
shr
pop
popa
add
ror
mov
insb
shlb
shll
dec
ret
or
ja
int3
scas
jb
xchg
xchg
aas
mov
imul
inc
mov
call
pop
jae
mov
ficoms
dec
inc
stos
je
fsts
aas
mov
dec
mov
or
pop
fstl
pop
lock
in
fcom
xchg
sbb
mov
push
inc
push
push
fsub
mov
out
lea
push
test
jle
jmp
mov
and
inc
iret
cmp
sbb
jp
sbbl
sbb
mov
rol
jle
sbbl
fst
in
shll
mov
pop
insl
adc
aaa
call
loopne
arpl
or
pusha
outsl
mov
dec
mov
mov
adc
inc
lods
jmp
daa
cmpsb
inc
shrb
pop
or
cmpsl
loopne
cmpb
in
out
inc
fiaddl
shrl
jmp
push
repnz
mov
mov
int
js
gs
imul
movsb
insl
pop
cmpsb
cmp
mov
arpl
adc
mov
lret
mov
inc
mov
jp
fistl
aas
xchg
loope
cmpsl
pop
push
loop
dec
loope
sub
shll
push
dec
and
cs
jg
lret
add
cs
or
xchg
push
push
and
imul
and
lcall
mov
pushf
scas
repz
fimuls
jo
stos
push
push
sub
pop
add
xchg
inc
fmull
and
and
jne
or
test
cmp
sbb
jg
push
lea
mov
scas
mov
fstpt
push
inc
mov
and
cmc
loop
aaa
sbb
push
mov
dec
fnstenv
pusha
scas
ret
andb
not
mov
xchg
xchg
push
sub
push
jmp
pop
lock
lock
movsl
sti
fists
xchg
stos
mov
in
mov
or
pop
pusha
mov
pusha
jle
das
lods
inc
popa
add
adc
push
shll
jns
push
aas
fbld
push
andl
adc
nop
imul
jl
inc
scas
xchg
jns
sbb
test
add
aad
jnp
sub
data16
dec
cltd
insb
clc
xchg
fildll
int3
inc
xchg
jp
test
and
pop
scas
dec
and
cmp
fwait
adcl
add
and
jb
cld
cwtl
shl
orb
popf
fs
mov
xor
push
dec
pop
xchg
dec
cmp
ret
sahf
xor
sbb
inc
pop
paddw
mov
das
scas
lds
ret
pop
dec
mov
das
sub
std
cmp
jae
mov
adc
mov
sbb
clc
imul
lea
shrl
push
or
jns
icebp
cmp
loope
lea
scas
outsb
and
mov
cmc
xchg
and
dec
add
mov
pop
loope
data16
pop
lds
dec
inc
insl
mov
jmp
add
push
hlt
stc
mov
inc
sub
adc
xor
fistpl
arpl
stos
inc
sbb
dec
in
fistps
std
in
test
clc
in
ja
into
or
lods
jns
xchg
sbb
rclb
cmp
fs
imul
adc
in
iret
adc
cmp
cld
sub
mov
mov
addb
ja
leave
je
push
fdivl
fwait
iret
mov
stos
xchg
fcomi
adc
pop
lock
out
pushw
ja
lret
shlb
cmpsb
inc
cld
stos
jb
outsl
push
clc
xchg
das
pop
dec
xor
stos
in
fucomp
xchg
int3
xor
std
xor
push
adc
push
aas
dec
pop
jb
stos
mov
pop
fnstsw
lret
es
add
mov
fisubs
lock
push
psubsb
in
sbb
out
xchg
add
fisubl
cmp
decl
and
xor
adc
jg
mov
pop
sahf
aas
jns
cmp
xchg
push
jb
lahf
push
sub
xchg
push
movsl
loope
pop
ljmp
call
pop
or
and
sub
or
int3
cmp
dec
or
sahf
imul
mov
test
mov
dec
push
pop
lcall
and
rcpps
and
push
sbb
mov
cmpsb
cmp
lahf
mov
pop
call
xchg
cmp
jl
mov
test
mov
mov
mov
add
add
in
mov
movsl
cmc
sbbb
push
das
mov
sub
mov
push
push
pop
rcr
dec
shrb
cmc
mov
push
jne,pn
add
cmpsb
or
adc
add
mov
and
fcmovnb
shlb
incl
dec
cmpsw
cmp
sub
fstpl
dec
mov
jns
lahf
lods
pop
and
pop
push
sbb
mulb
stc
adc
add
pop
ss
jecxz
dec
jmp
mov
ror
enter
cmp
shrb
jbe
pop
test
lcall
test
repnz
and
push
mov
outsl
jnp
xchg
stos
sbbl
inc
neg
adc
adc
dec
out
and
lcall
xchg
jmp
imul
push
aas
xchg
fidivl
pop
push
dec
dec
leave
pusha
xor
mull
addr16
adc
xchg
add
pop
sub
mov
inc
in
pop
adc
mov
sbb
rorb
stos
lahf
stos
test
jmp
sbb
test
test
loope
or
dec
loopne
and
add
push
sbb
mov
mov
pusha
orl
mov
fldcw
pusha
mov
cltd
add
aad
dec
das
sti
daa
fwait
mov
xchg
pop
bswap
js
xor
lcall
sahf
jg
lcall
push
je
sbb
mov
mov
fstl
adc
push
sub
jnp
mov
and
sub
push
pop
lret
jge
out
ljmp
xor
notb
mov
imul
mov
adc
jp
lea
leave
rolb
call
xchg
cwtl
mov
ss
decl
jns
test
int3
imul
cmp
inc
xchg
std
dec
push
popa
and
xor
or
in
js
and
and
cltd
and
jle
xor
pop
out
xlat
mov
stos
jmp
sbb
movsb
mov
sbb
push
popa
xlat
sub
sbb
or
fists
in
xor
push
popa
int
aad
inc
jo
lods
push
faddl
xor
adc
call
inc
jle
imul
xor
popf
jo
popa
and
or
dec
nop
in
adc
dec
dec
mov
rol
pop
sbb
push
pop
loop
dec
adc
inc
jmp
mov
xor
push
pushf
inc
lcall
and
enter
cmp
aaa
lret
add
stos
cwtl
jae
pop
in
inc
cmc
je
ljmp
pushf
addl
scas
or
xchg
aam
popa
cs
mov
adc
shr
jno
fadds
add
push
icebp
test
xchg
push
sub
xchg
and
jo
mov
xor
inc
lcall
push
outsb
xor
stos
mov
mov
icebp
enter
pop
aad
ja
pusha
stc
jb
pusha
enter
test
mov
in
and
jnp
das
mov
andb
push
out
lahf
mov
jne
or
pop
mov
push
mov
pop
nop
push
mov
mov
lods
inc
fcompl
aas
arpl
jo
pop
jmp
adc
lahf
ret
cmp
add
jmp
adc
push
in
push
jnp
mov
ret
hlt
and
ja
sub
sbb
add
loop
aam
or
mov
in
std
mov
pop
mov
pop
add
xchg
movsl
xchg
inc
jae
fmull
sub
and
pop
out
mov
js
jno
mov
adcl
jmp
pop
or
ss
mov
clc
gs
inc
xchg
sbb
mov
push
pusha
das
ljmp
push
jecxz
inc
inc
out
xchg
std
out
out
jmp
xchg
addr16
and
inc
lret
mov
aaa
popf
push
or
fidivs
jecxz
mov
cs
xchg
sub
push
xchg
loopne
adcl
jle
push
js
stc
das
pop
sub
loop,pt
add
cmpsl
scas
jne
ja
adc
popa
test
outsb
and
in
popa
notl
call
xchg
js
fs
mov
les
cmp
xchg
int
rorl
mov
push
cld
cmpsb
or
mull
push
mov
popl
pop
repnz
scas
lahf
mov
popf
mov
lret
sub
inc
inc
iret
addr16
leave
jmp
adc
call
inc
and
int3
xor
cmp
fiaddl
sbb
push
sub
or
mov
and
pop
out
dec
imulb
movsl
insb
adcb
sbbl
ficompl
icebp
ja
add
jo
ljmp
mov
sbb
imul
enter
push
xor
dec
and
clc
or
mov
dec
cmpl
fwait
into
dec
dec
mov
adc
insl
fldenv
sbb
ficoml
mov
out
aad
sbb
mov
cs
or
xor
push
mov
mov
leave
fld
dec
push
and
stos
pop
fstl
xlat
jbe
repz
mov
stc
mov
pop
jge
jle
pop
mov
test
mov
mov
enter
repz
mov
push
adc
mov
fcmovne
xchg
test
inc
out
push
xor
adc
fmul
jno
push
data16
movsl
inc
or
stc
mov
xchg
loope
add
jle
cmp
jno
xchg
jge
pop
icebp
jge
adc
rol
leave
push
adc
insb
add
pushf
xor
xchg
mov
pop
fstpl
dec
inc
ret
push
test
nop
mov
movsb
mov
mov
sub
adc
sub
pop
mov
bndstx
xchg
test
jns
ja
push
adc
lcall
insl
xor
sarl
jmp
jl
jae
inc
jae
push
movsl
push
aad
pop
punpckhdq
lret
xchg
adc
or
mov
repz
test
cli
test
ds
jnp
movsb
pop
xor
mov
pop
scas
scas
xchg
mov
adcb
inc
jle
mov
cmp
add
rorl
cmp
js
aaa
fimull
dec
mov
insb
js
dec
ret
clc
in
in
sub
enter
fwait
jo
inc
scas
add
xor
call
pop
test
test
arpl
or
inc
fwait
push
adc
scas
orl
in
add
enter
inc
fimuls
pop
data16
mov
xchg
inc
std
ret
stc
ret
mov
mov
leave
mov
cmc
dec
lds
and
cwtl
adc
adcl
mov
push
int3
pop
jle
dec
push
push
cmp
cld
mov
adc
add
push
stos
push
push
pop
pushf
add
out
lcall
out
or
mov
sbb
das
rorl
mov
mov
xor
xor
push
or
push
iret
pop
xchg
pop
jl
shlb
repnz
repz
mov
mov
insl
sbb
js
movsb
notb
fwait
test
mov
out
pop
sbb
inc
fcoml
lods
push
inc
inc
lock
and
in
xchg
lea
xchg
sub
cmp
out
sub
imul
pop
sub
pusha
pusha
xchg
or
mov
aas
push
ja
or
xlat
sti
jne
mov
and
nop
push
dec
lret
or
fwait
cmpsl
mov
jne
in
rol
fbstp
jl
jae
fs
addr16
xlat
repz
addl
lods
outsl
cmpsl
add
jo
dec
cmp
push
subl
dec
jb
jle
cmc
push
push
mov
enter
notl
or
int
pop
cld
pop
lods
cmpsb
ret
cmc
aaa
das
imul
lcall
aam
lret
test
data16
pushf
jecxz
jne
pop
addr16
xchg
cmp
sub
mov
mov
scas
lods
xor
mov
mov
aad
pop
push
psrlw
mov
inc
movsl
fisubrl
or
or
and
dec
pop
insl
push
xchg
jle
or
push
cmp
fnstcw
repz
iret
jmp
adc
push
cmpsb
bound
sbb
fwait
das
jl
jbe
mov
ja
stos
daa
aad
lods
sbb
pop
into
sub
arpl
mov
xor
cmp
fidivrs
andl
shlb
mov
pop
imul
leave
repz
sub
lahf
push
adc
push
sahf
fisubrs
or
insl
int3
pushf
add
push
rolb
mov
xchg
div
cmp
xchg
add
pusha
pop
adcb
out
and
pop
xchg
pop
mov
cmc
flds
push
repnz
in
inc
cwtl
xor
jne
ror
sub
repz
jb
cwtl
int
pop
inc
add
inc
sahf
pop
out
jl
inc
loopne
and
xchg
loop
cli
xchg
shl
mov
mov
or
popa
imul
add
aam
pop
pop
mov
hlt
pop
loope
mov
addr16
dec
adc
pop
imul
add
adc
shrl
movsl
ds
test
test
insb
lret
xchg
jmp
negb
daa
aad
subb
push
cmp
vpsubd
dec
dec
ret
dec
dec
insl
in
shlb
fisubrs
xor
cmp
jbe
sbb
push
test
mov
jmp
stos
das
repnz
add
jne
in
jno
pop
sarl
shrb
addr16
jb
lds
push
and
sti
push
inc
call
imul
fstpl
loopne
and
cmp
lea
shll
and
out
pop
add
xor
outsb
jecxz
in
add
mov
aaa
out
mov
add
rol
pop
imul
es
jno
pop
and
inc
subl
fstpl
mov
dec
pop
icebp
xor
rorb
sbb
jae
or
sahf
mov
clc
and
and
aad
inc
stc
sbb
mov
cltd
xchg
xchg
jle
mov
jns
cmp
mov
push
shrb
mov
scas
cmp
and
dec
int3
dec
enter
cmp
inc
adc
pop
lahf
cmp
push
rolb
loope
in
push
aas
test
mov
push
mov
insl
and
push
xchg
sahf
pop
lret
add
sub
iret
ja
int
jp
fisttps
xor
jnp
popf
stc
dec
mov
bound
mov
aam
or
and
ficoms
enter
popa
mov
xlat
pop
das
leave
movsl
cmp
pop
sbb
jge
icebp
popf
xchg
pop
mov
out
mov
adcb
xchg
loope
gs
hlt
push
repnz
leave
aaa
jnp
les
and
xchg
gs
sahf
clc
dec
mov
push
in
ja
jmp
and
or
sti
sahf
dec
mov
call
movsb
jg
idivb
and
loopne
push
xchg
sub
clc
addr16
xchg
in
adc
or
cmp
or
sub
pop
inc
cmc
shrl
cmpsb
pop
sarl
insl
jnp
mov
loop
popf
adc
mov
xor
in
inc
das
sti
es
jae
ror
mov
or
andl
xchg
sub
cld
sbbl
repnz
mov
sbb
or
and
lcall
sub
xor
mov
xor
mov
mov
sbb
xchg
dec
or
push
idiv
jb
insl
negb
xor
insl
sbb
test
sahf
pusha
push
testb
andl
mov
pop
addr16
sub
and
xchg
cmp
lock
fwait
xor
iret
sbb
mov
hlt
insb
sub
push
rcrb
mov
mov
mov
mov
sbb
xor
jl
sti
mov
aam
or
jle
pusha
mov
add
inc
sbb
inc
mov
dec
mov
jge
xchg
in
pop
cmpsb
jns
sub
push
add
mov
sbb
dec
xchg
test
ret
sub
jb
mov
inc
idivb
test
mov
mov
mov
cmpl
repz
mov
push
dec
xchg
popa
xchg
mov
lea
dec
loopne
popf
jecxz
test
pop
repnz
addr16
push
pop
mov
mov
jp
adc
clc
fs
adc
xchg
jg
insb
lret
add
or
not
fisubs
mov
dec
and
adcb
frstpm(287
fisttps
inc
mov
lods
xchg
es
aad
add
inc
mov
push
lods
add
sub
dec
mov
xor
or
sbb
fstl
cmp
or
and
cltd
push
xchg
les
stc
aas
inc
call
push
sbb
or
cld
inc
shrl
insb
push
inc
int3
imul
mov
mov
xlat
pop
cmp
call
push
mov
out
jae
and
dec
lret
xorl
jne
test
jae
test
lret
sti
je
fwait
imul
jne
sbb
lods
hlt
js
inc
mov
lods
dec
xlat
jbe
shrl
and
stc
data16
push
cwtl
sbb
sub
test
lods
les
aas
mov
std
jp
loop
decb
mov
mov
testl
in
pop
in
sbb
mov
ljmp
sub
ret
adc
ret
xor
push
gs
fucomip
mov
lods
mov
mov
test
std
adc
xchg
xchg
loope
out
sti
out
mov
je
in
ljmp
or
xchg
cmp
iret
push
fimuls
or
adc
inc
jbe
mov
incl
aad
xor
loop
sbb
push
mov
fisttpl
call
jp
outsl
rcr
dec
push
loopne
or
mov
pop
sub
xchg
xor
addr16
sbb
ret
inc
cmp
aaa
cli
sub
sbb
addr16
test
cltd
or
jecxz
in
adc
out
sti
adc
sbb
inc
fmulp
jo
mov
sbb
mov
fisubl
jp
inc
and
or
inc
jmp
and
or
add
adc
addr16
sahf
and
mov
test
push
test
add
adc
dec
pop
cli
xchg
mov
imul
jnp
sbbb
add
pop
inc
push
mov
push
cmc
jmp
jecxz
rcrl
icebp
or
dec
xchg
cmc
mov
addr16
movsl
add
cmp
mov
xchg
add
mov
test
push
or
mov
and
xchg
push
pop
cld
inc
cmp
mov
push
loope
fs
fmulp
loope
xor
mov
mov
sbb
enter
repz
jecxz
jae
adc
iret
out
repz
pop
inc
jne
xchg
xchg
es
mov
insl
repnz
cmp
or
mov
mov
xchg
mov
shr
mov
clc
mov
fstl
push
addr16
cmp
fwait
inc
mov
xor
sti
leave
dec
jecxz
mov
sbb
shlb
aas
lret
jbe
or
insb
add
out
dec
fiadds
xlat
ja
push
mov
jecxz
push
xchg
imul
xchg
dec
popa
xchg
bound
xor
adc
out
inc
int3
xor
test
push
mov
into
popf
fdivl
test
das
and
cld
les
push
or
popa
xchg
test
lcall
lods
test
mov
out
mov
pop
sub
sbb
cmp
notl
negl
sub
jb
cwtl
pop
cwtl
jbe
leave
imul
std
mov
or
pop
scas
jge
inc
hlt
adc
es
cld
not
inc
mov
jbe
jge
and
push
xor
push
daa
mov
jne
inc
rcrb
lret
jb
mulb
pop
lret
les
shr
bound
cmpsb
negb
fmull
push
jecxz
test
repz
xor
nop
cwtl
or
rcrl
cwtl
std
sbb
nop
push
and
rcrl
push
mov
jl
ret
scas
xor
mov
mov
inc
insl
jmp
xor
stc
jo
adc
xor
xor
or
adc
and
pop
mov
fdivl
mov
test
shll
pop
mov
mov
mov
cmp
xor
sub
xor
aad
or
aas
sbb
jb
pop
lret
repz
or
sub
insb
xorb
jl
gs
or
inc
cmp
mov
jno
jno
xchg
es
or
jne
pusha
popl
xchg
cwtl
movsb
xor
adc
adc
dec
lods
xor
popf
out
cli
mov
outsl
ret
sub
dec
or
pop
cmp
lret
adc
xchg
mov
adc
inc
fnstenv
ret
aad
add
inc
mov
aad
push
and
jno
int
sbb
mov
cmp
mov
pop
sbb
add
in
cmp
add
jge
and
sub
sub
mov
fisubrl
adc
pushf
nop
iret
jp
int3
lods
aas
dec
mov
lock
into
push
sarb
fwait
repnz
inc
fnsave
pushf
pop
enter
mov
in
insl
rep
mov
cs
insb
xchg
xchg
movsl
push
dec
rcl
pushf
pop
xor
aaa
iret
sahf
mov
push
leave
inc
pop
sbb
sbb
push
push
inc
add
adc
addr16
mov
ret
xor
in
dec
xchg
imul
mov
ret
xor
cltd
pop
mov
cltd
xchg
or
push
push
cmc
andw
enter
loop
hlt
sub
fstl
sub
fcoml
andb
icebp
sbb
mov
mov
loop
xlat
fdivl
addl
pop
xchg
mov
imul
into
fistl
push
sbb
pop
jae
xor
adc
decl
mov
add
push
mov
orl
sbb
inc
ja
jnp
pop
test
mov
jno
sahf
in
bound
mov
clc
mov
test
cmp
or
std
push
xor
jno
inc
lods
cmp
clc
sub
sub
jo
mov
shll
aam
test
loop
sbb
mov
rcrl
sbb
insl
sbb
test
mov
int
push
aam
xor
mov
or
and
aad
inc
imul
lods
mov
adc
dec
mov
mov
loope
scas
lock
enter
lds
into
jbe
pop
out
and
push
mov
or
dec
and
ret
jnp
lods
sub
inc
int
lahf
pop
pop
add
pusha
int3
sub
incb
mov
mov
shlb
jp
or
sbb
jb
jno
into
aam
cwtl
push
fwait
movsb
inc
out
push
test
pop
cmp
in
push
push
ret
xchg
ds
mov
jmp
outsb
dec
pop
mov
cs
add
std
push
fisubrl
and
rolb
adc
inc
test
imul
imul
xchg
imul
in
lret
mov
dec
push
jo
inc
fistpll
xor
hlt
and
ret
pop
adc
ret
leave
scas
sbb
dec
inc
js
test
cmp
inc
or
outsb
push
in
andb
das
inc
iret
dec
dec
cmpsb
jle
or
mov
lret
test
mov
mov
imul
jle
loopne
add
inc
ret
loopne
lds
inc
jae
aas
xchg
cmp
in
xchg
mov
out
inc
inc
sarl
sbb
add
mov
fcompl
jg
jmp
in
es
mov
xchg
fstpl
inc
mov
cmc
loop
ret
push
dec
cmp
cmp
and
jae
xorl
imul
fisubrs
int3
pop
hlt
and
jae
dec
pop
stos
cmp
adc
jecxz
jb
dec
lods
push
fldl
sbb
inc
xchg
pop
pop
and
and
stos
add
and
push
inc
push
repz
ljmp
and
jne
pop
inc
push
je
inc
mov
mov
ret
repz
and
push
xchg
ret
jle
cmp
inc
ror
xor
fisubl
imul
dec
rcl
pop
fwait
jb
dec
sbb
movsl
mov
mul
mov
mov
xchg
sarl
sbb
pop
jbe
aam
sbb
int
in
add
pop
mov
cmc
mov
decl
andl
cwtl
imul
aam
fwait
cmc
ss
rcrl
pop
in
push
outsb
in
push
push
mov
inc
ljmp
je
cmp
sbb
jnp
lods
out
cmpsb
ret
sub
xchg
mov
lcall
lcall
stc
cmp
pop
sbb
orb
rcrb
jp
sub
ret
mov
mov
push
dec
mov
mov
mov
int
cmp
into
cmp
sbbl
add
shr
test
lea
sbb
dec
inc
sbb
std
jae
shlb
inc
push
push
cwtl
add
fwait
xor
ret
push
and
dec
ds
pop
xor
push
dec
lea
es
fnstcw
mov
pop
or
or
push
call
mov
hlt
push
insb
mov
push
in
mov
fidivs
out
ret
pop
pop
or
fs
or
mov
add
pushf
or
cmpsl
xor
inc
inc
xchg
mov
adc
inc
fisubrl
xchg
pop
ds
pushf
test
ss
jbe
inc
xchg
cltd
test
and
mov
mov
gs
mov
nop
adc
or
jns
jae
ds
popf
ss
jne
cwtl
mov
sbb
leave
fwait
aas
sti
sbb
jge
mov
fbstp
test
xchg
xor
shrb
adc
and
call
sbb
clc
xchg
js
ljmp
inc
sub
ljmp
scas
popf
xchg
sbbb
fs
jge
pushf
cmp
sbb
push
adc
xchg
ret
das
and
imul
cwtl
scas
pop
test
mov
sbb
jnp
sbb
or
adc
mov
lock
or
lahf
mull
or
push
push
test
xorb
lret
xor
and
mov
mov
inc
leave
pusha
ja
data16
outsl
out
jns
test
jo
test
jb
sahf
lods
cmp
pushf
xor
in
test
aas
dec
xor
dec
in
inc
adc
inc
mov
sub
mov
mov
sarl
arpl
loope
lock
popa
test
pop
adc
adc
dec
xchg
ret
rorl
sub
jecxz
mov
xor
mov
add
and
mov
shrb
push
popa
repz
pop
call
sti
mov
das
adc
jb
ret
aaa
mov
push
pusha
push
rcrl
xchg
pop
jge
xchg
pop
loope
xchg
xlat
fwait
nop
das
and
outsb
adc
mov
movsb
sub
rep
andl
into
xor
sarl
mov
ret
fmull
add
xchg
repnz
rep
std
add
jp
push
push
and
testl
out
imul
mov
ja
inc
fisubl
test
rorl
mov
dec
daa
cmp
sub
rolb
xor
aad
adc
xor
dec
inc
sbb
push
test
in
out
pop
xor
sbbl
sub
cmp
xchg
int
in
mov
dec
fildll
pop
stos
push
pop
adc
sub
adc
cmp
das
ljmp
push
outsl
push
int3
out
push
push
mov
jae
mov
add
add
push
jle
pop
and
and
add
pushf
and
inc
mov
push
mov
jge
mov
testb
xor
stc
adc
sti
lret
add
loope
add
xlat
aaa
fisubrl
sbb
push
sub
mov
ret
pop
jns
aam
leave
mov
push
imul
mov
push
jmp
sub
testb
call
push
jmp
adc
inc
fdivl
cwtl
fists
pop
pop
pop
fcmovnb
jp
cmpsb
outsl
add
dec
mov
xchg
jecxz
adc
inc
shl
rep
cld
inc
mov
testb
hlt
sub
push
dec
fidivl
mov
jnp
nop
int3
push
xchg
add
xchg
push
std
test
test
xor
lea
lods
push
out
xor
push
mov
sahf
je
into
movsl
add
outsl
xchg
mov
and
xchg
mov
mov
jns
in
insl
or
pop
sub
xor
dec
mov
rolb
lret
mov
or
and
andl
ss
mov
je
push
das
mov
dec
data16
mov
mov
shll
sti
loope
adcb
mov
pop
cmp
push
xchg
das
daa
ja
push
imul
pop
mov
imul
shll
inc
or
jge
dec
pop
jne
repz
mov
add
int3
add
mov
adc
test
imul
jb
mov
stc
sub
hlt
out
mov
xor
dec
nop
inc
pop
mov
inc
js
ja
or
mov
xchg
stos
inc
insb
movsl
cmp
fs
xchg
fs
fstpl
xchg
repz
inc
dec
cmpsb
jp
dec
dec
in
mov
movsb
and
or
mov
push
shr
mov
adc
jae
iret
sti
cmpb
xchg
imul
pop
xlat
shlb
jbe
mov
incl
xor
inc
popa
fcmovnb
push
ss
stos
mov
sbb
pop
mov
jns
call
jb
outsl
inc
dec
sub
pusha
sbb
jb
insb
aad
sub
movsb
jno
mov
pusha
bound
mov
xlat
mov
push
lods
xor
lret
add
sub
jae
out
sahf
mov
stos
test
lea
add
imul
xchg
repnz
mov
cld
scas
loopne
add
sub
add
jle
shr
cwtl
xchg
js
and
adc
bound
ja
aas
shll
and
arpl
or
bound
mov
or
test
xchg
jb
mov
mov
out
or
jo
and
lcall
addr16
js
roll
xchg
add
in
mov
jnp
test
xor
jb
mov
or
push
jo
mov
add
mov
loope
mov
nop
daa
popf
lahf
fwait
scas
movsb
aaa
stc
adc
mov
shrb
imul
popf
lret
mov
scas
inc
icebp
aad
mov
xor
nop
std
dec
pop
out
adcb
or
pop
repz
push
insl
jae
xchg
popa
sub
fnsave
push
mov
fnsave
adc
push
fsts
dec
pop
jl
xchg
daa
pushf
inc
inc
inc
sti
ljmp
mov
jp
popa
in
xchg
cmpsl
ds
push
lds
cmpsb
mov
fisubrl
imul
sbb
loopne
outsb
stc
test
adc
mov
stos
test
jb
or
pop
sbb
push
rcrl
cs
fsub
daa
stc
dec
mov
jnp
sub
leave
lret
cmp
int
mov
jno
or
add
mov
xchg
pop
cltd
mov
orl
pop
insl
or
dec
sub
xchg
pop
jge
ss
xchg
adc
shrb
cmpsb
lock
cmpsb
in
inc
addr16
mov
jg
incl
sbbb
cmp
or
imul
push
imul
test
mov
scas
add
sbb
cmp
std
pop
jg
dec
fimuls
lock
push
fisubrs
add
fstpt
xor
mov
push
mov
and
lret
adc
adc
arpl
lock
xor
adc
fmul
cmp
subl
insb
mov
es
or
stc
aas
in
adc
outsb
inc
cmp
and
pop
mov
sub
mov
rcrl
mov
fidivl
adc
shrb
imul
stos
xchg
xor
js
sub
cmpsb
subl
hlt
pop
and
jmp
ret
lret
das
pop
add
xor
inc
ret
hlt
push
mov
mov
add
inc
sti
rorb
les
adc
fimull
sub
add
in
or
and
or
jl
insb
push
cld
xchg
les
adc
push
rcrl
int
and
jl
add
imul
ja
dec
push
xorb
xchg
sub
and
popf
pop
in
int
sysenter
mov
pop
repnz
gs
push
fadds
xchg
test
es
cmc
adcl
mov
jmp
stos
repnz
ror
xorl
pop
test
xchg
inc
inc
leave
lret
aaa
pop
push
mov
add
rcr
je
cmp
popf
jns
js
mov
cld
outsl
or
pusha
in
adc
imul
mov
aam
lods
fdivl
jl
clc
or
out
mov
jl
nop
test
lret
and
stos
jne
xorl
sbb
mov
roll
adc
pop
lea
sahf
adc
inc
dec
push
loope
aad
int3
adc
push
mov
lock
loopne
mov
mov
mov
jecxz
push
es
inc
outsb
adc
ret
jl
shrl
dec
push
mov
sti
std
adcl
mov
push
out
in
mov
ficompl
repz
js
adcl
enter
cwtl
pop
push
daa
mov
inc
pop
inc
and
rcr
push
cmp
or
insl
mov
cmp
dec
mov
xchg
xchg
pop
mov
mov
sbb
aam
inc
repz
adc
lret
or
out
pop
push
add
out
push
mov
xchg
loop
call
mov
mov
neg
mov
out
ljmp
xor
cmp
jmp
scas
cs
pop
sub
inc
and
xlat
lret
int
ja
pop
icebp
ss
dec
mov
lahf
add
lahf
jb
ja
pop
sub
cmc
mov
outsb
jle
fnsave
pop
adc
cmp
fwait
cmc
mov
fwait
jge
jmp
dec
xchg
jmp
les
push
popa
jle
into
mov
outsb
shll
xchg
dec
loop
aaa
xlat
outsb
push
add
fbstp
lret
cld
or
shlb
push
fbstp
lods
loope
fistps
fsubs
or
js
xor
inc
sar
fadds
and
jnp
arpl
inc
dec
ret
fs
push
int
xlat
outsl
jmp
lret
jb
jmp
or
divb
jle
mul
es
sbb
fcompl
fildl
jg
popa
cmpsb
mov
test
popf
mov
add
jg
cld
adc
adc
ja
ss
movsb
xlat
sbb
ret
cmp
insl
stos
mull
std
addl
push
xor
js
leave
inc
pop
mov
data16
pop
adc
push
in
cltd
cld
lcall
stc
pop
ss
bound
add
mov
dec
into
das
insl
mov
dec
pop
icebp
cld
scas
sub
sbb
pop
mov
cltd
xor
adc
xor
cltd
xchg
je
and
out
movsb
xor
or
cmp
dec
xchg
push
jg
jmp
mov
jbe
pop
scas
sub
mov
aad
push
repz
adc
ds
cltd
and
stos
cmp
inc
arpl
xchg
xchg
sub
jb
inc
cmp
jb
in
test
movsb
testb
sbb
icebp
dec
push
std
sbbl
movsb
mov
popf
cwtl
push
xor
lcall
lds
leave
fnstenv
mov
aaa
sbb
mov
stos
adc
cmp
adcl
loop
add
push
in
movsl
out
test
mov
sub
lea
inc
jb
js
addr16
push
pop
jo
mov
jne
arpl
adc
jne
xchg
mov
adc
das
sbb
sbb
stos
aaa
adc
imul
xor
fldl
rcrb
inc
lea
xor
pop
nop
stc
adc
mov
mov
or
mov
inc
imul
sub
cmp
or
insl
dec
shlb
mov
lcall
inc
das
addr16
pop
clc
dec
jp
stc
ds
imul
jne
xchg
arpl
adcl
and
lock
xchg
fsubrs
stos
in
push
movsl
lcall
fistl
cli
push
cmp
ljmp
in
xchg
pop
movsb
leave
jmp
jp
jmp
and
xchg
jb
push
jb
jp
xor
adc
aaa
sub
xor
push
call
lea
dec
repz
sbb
fmuls
or
and
addr16
aaa
push
cli
fildl
cmpl
xor
jle
mov
xchg
shl
stos
shrb
pop
out
lds
dec
pop
out
icebp
inc
cmp
aaa
pop
ret
lock
pushf
hlt
mov
jb
dec
cmp
xchg
aaa
inc
pop
test
adc
sbb
jbe
cltd
dec
gs
fcomps
mov
stos
inc
mov
pop
fldln2
add
sbb
adc
xchg
pop
dec
aam
lea
pop
idiv
or
outsb
das
fistpl
dec
xor
test
test
xor
mov
stos
push
and
inc
xchg
cmp
xchg
cmpsb
call
or
aas
or
mov
mov
mov
mov
mov
jno
mov
out
xor
or
popa
fistps
xorb
jge
lea
shll
jecxz
push
stc
shlb
xor
dec
mov
pop
repnz
xor
fdivs
xchg
cmpsl
int
pop
xor
loopne
sub
sahf
xor
adc
sbb
stos
fldcw
pop
inc
test
mov
stos
and
loop
or
into
fisubrl
nop
push
ret
and
mov
scas
enter
or
ss
push
jg
sbbl
xchg
and
lret
push
cmp
fwait
lods
pushl
jle
sub
push
pop
imul
sarl
je
enter
in
sub
pop
add
add
sub
sub
sahf
clc
mov
lods
adc
imul
ror
bnd
inc
sub
and
add
push
inc
pop
pop
fucom
ss
push
and
mov
mov
jl
bound
xor
add
push
push
aas
ret
hlt
dec
push
in
rolb
jl
fisttpl
push
or
mov
enter
hlt
mov
xor
adc
std
sar
sbb
xchg
mov
lock
repnz
and
repnz
out
push
mov
aas
add
in
jbe
mov
add
clc
mov
in
adc
adc
xor
stos
ljmp
nop
mov
or
jns
and
or
inc
pop
adc
adc
cld
std
mov
mov
pop
scas
mov
fistpl
xor
hlt
das
xchg
pop
inc
aas
mov
dec
lods
cli
ficoml
in
cmc
int3
call
pop
inc
in
adc
mov
mov
dec
lods
jmp
imul
sub
xchg
mov
mov
or
movsl
jl
cltd
cmp
dec
testb
sub
xor
lret
clc
insl
push
push
jne
pop
mov
rdpmc
and
mov
movsb
pushf
pushl
adc
fwait
shll
es
pop
sbbb
in
cmc
enter
rorl
sub
test
out
popl
ja
pop
mov
adc
adc
mov
fcoml
inc
fists
out
loopne
int3
sbb
sbb
adc
and
cwtl
sbb
vmaxpd
ja
mov
add
daa
cmp
jb
es
ljmp
fld1
mov
into
xor
inc
dec
mov
push
or
jecxz
fmull
jl
arpl
hlt
and
sbb
cld
xchg
ss
shrb
ljmp
je
std
shrb
cmp
ret
cmp
xchg
and
rclb
mov
test
adc
je
dec
mov
data16
aam
sbb
mov
or
jle
test
jnp
call
pop
push
sahf
sbb
xor
xchg
adc
xor
fldenv
cmp
notb
imulb
jo
mov
xchg
mov
mov
das
insb
in
stos
stos
call
fsubrl
add
jbe
inc
fisubl
cmp
sub
stos
pop
cmp
mov
insl
sti
pop
and
or
stos
cmp
data16
xchg
cmp
xor
pushl
mov
cmp
pop
xchg
loope
push
test
fucompp
inc
cli
xchg
xor
xchg
push
push
addr16
or
fsubl
and
int3
hlt
test
lods
mov
or
add
in
mov
mov
daa
cwtl
cld
outsl
push
into
int3
jg
rolb
jo
cli
xchg
mov
pop
sbb
mov
and
mov
lret
in
je
sbb
sti
fsubl
mov
scas
jb
xor
aad
mov
mov
call
or
sbb
xchg
push
mov
gs
mov
jge
mov
js
mov
dec
mov
out
mov
dec
hlt
push
mov
btr
xchg
sub
es
push
mov
or
out
movsb
mov
lea
and
imul
fldcw
sub
scas
popf
pop
and
call
push
mov
pop
ret
cmp
jb
insl
in
lahf
sbb
and
ficompl
test
mov
sub
pop
orl
mov
out
push
movsb
sub
inc
adc
scas
mov
push
cmp
push
sbbb
ret
sub
aad
pop
mov
outsb
sbb
mov
mov
jno
xchg
sub
push
in
push
adc
xchg
in
in
test
jmp
cmp
in
loope
pop
cmp
sbb
dec
loop
lock
inc
mov
inc
shl
adc
cltd
nop
pushf
fs
lock
xchg
add
jecxz
mov
out
jno
fcmovne
sub
imul
mov
inc
jne
jg
js
call
lret
addr16
adc
leave
enter
inc
int3
ljmp
scas
out
imul
sti
rol
push
stos
mov
imul
sbb
add
push
test
xor
jno
insb
je
add
mov
mov
icebp
movsl
adc
cmpsb
jb,pt
mov
fnstsw
mov
xchg
adc
xchg
mov
les
pop
and
iret
mov
add
mov
pop
sbb
movd
xchg
sub
xchg
fbstp
adc
sarl
mov
repz
xchg
lods
add
push
cwtl
into
mov
inc
out
add
scas
lcall
jbe
mov
mov
lods
inc
subl
popa
popa
jnp
and
add
dec
bound
test
xor
and
mov
fdivrs
adc
test
pop
out
jecxz
sbb
icebp
pop
adc
push
jb
mov
xor
mov
jl
idivb
sub
inc
pop
push
or
movsb
sbb
mov
jno
inc
int
push
push
pop
inc
fsubl
push
xor
iret
push
orl
imul
stc
jo
dec
push
sbb
mov
xor
data16
dec
adc
xor
sub
lret
in
cmp
mov
mov
inc
pop
or
and
bound
in
sub
mov
lcall
pusha
test
and
adc
addr16
packuswb
outsl
jle
mov
inc
arpl
leave
jecxz
mov
outsb
stos
inc
lods
pop
push
es
lret
int3
adc
cmp
loop
fisubrl
or
imul
lret
push
je
ficoml
loopnew
pop
ret
push
hlt
pop
jbe
sub
scas
push
cld
inc
or
mov
loop
iret
aad
fsubrs
je
push
mov
pop
out
jp
xchg
rcll
aam
repnz
call
ja
addr16
in
jns
pop
adc
ss
ljmp
ficomps
imull
mov
enter
mov
stc
arpl
sub
cmp
pop
imul
jecxz
xchg
add
push
mov
imul
cmp
out
mov
xchg
roll
sbb
jbe
leave
pusha
rcll
sahf
dec
mov
movsb
sti
and
lods
nop
pop
outsb
loope
ds
adc
dec
pop
jl
push
rcr
jne
push
aam
add
les
dec
mov
add
xchg
daa
or
jle
fs
inc
cmp
sbb
dec
mov
lods
out
mov
dec
repz
mov
repz
test
movzwl
xorb
pop
stos
sti
scas
push
sub
mov
mov
shrl
push
nop
mov
jle
loope
mov
fxam
inc
lcall
mulb
in
sarl
sbbl
rol
pop
pop
nop
push
je
xchg
sub
repz
dec
sarb
dec
ljmp
push
cmp
mov
mov
push
in
jg
repz
pop
dec
scas
test
add
in
ja
pushf
call
mov
ljmp
or
ja
mov
jnp
loop
lock
or
pop
jno
std
sub
popf
faddl
mov
ret
arpl
mov
mov
fsubl
dec
lcall
cmp
das
ds
ja
sub
jo
psubsb
popf
pop
xchg
pop
cmp
out
nop
lahf
jl
pop
push
shll
add
xor
test
cs
cld
sub
inc
and
call
int
inc
mov
imul
js
pop
xor
mov
mov
jns
push
lock
in
xrelease
pop
dec
push
lock
punpcklbw
mov
mov
and
cmpsb
sub
int3
push
and
jnp
sbb
mov
cs
add
dec
inc
nop
cld
test
ja
xchg
mov
push
and
dec
nopl
xchg
inc
lods
sahf
dec
xchg
testb
and
jo
push
and
bound
out
test
sahf
popf
or
or
pusha
aaa
in
test
or
stos
cltd
xor
xor
inc
push
sar
cmpsb
sahf
outsl
dec
xor
cmp
mov
push
cmp
test
repz
xchg
je
pop
mov
arpl
popa
dec
lahf
fwait
push
sbb
push
into
push
pop
mov
popa
xor
cmpsb
inc
enter
pop
jb
jnp
clc
and
mov
jbe
or
lret
jp
or
stos
dec
cmp
aam
add
mov
shrb
add
ds
mov
adc
or
push
xchg
mov
scas
sbbb
iret
and
push
mov
andb
jl
add
mov
sub
add
mov
or
shrl
add
je
repz
ljmp
mov
mov
jmp
inc
inc
add
xor
or
out
fwait
mov
ror
stc
add
movsb
in
sbb
cmpsl
jnp,pt
clc
jb
pushf
lds
cmpsb
xrelease
mov
jge
sti
sti
movsb
and
cwtl
adcl
push
mov
xor
jmp
jns
adc
or
shlb
mov
add
jno
sub
fucomp
adc
in
lret
call
test
movsl
mov
or
enter
mov
mov
frstor
cmp
dec
les
lea
rcrb
dec
in
sahf
jle
ja
pop
adc
jp
xor
and
push
test
xchg
adc
mov
xchg
xchg
mov
and
inc
fistpl
jae
std
cmpl
push
xchg
mov
mov
imul
pop
jg
mov
jle
daa
into
mov
das
or
pop
cli
mov
leave
fnstenv
iret
pop
cmp
jp
dec
mov
mov
movsl
adc
int3
fs
xor
inc
sub
jmp
data16
sub
jae
popf
scas
mov
pop
int3
pop
cmc
cli
popa
test
sbb
into
or
inc
cmp
imul
imul
cmpsb
fdivrs
or
jns
sub
sub
ljmp
out
clc
fsubrl
xchg
imul
xchg
sub
insb
mov
jns
icebp
fsubrl
jl
xchg
dec
rep
cmpsb
xchg
das
inc
mov
sub
mul
lahf
nop
jmp
jno
insb
inc
xor
or
lret
sbb
mov
in
jae
fstl
sbb
mov
shll
xor
imul
push
sbb
cld
and
mov
inc
xchg
mov
sbb
push
xchg
mov
mov
cld
cmpsb
lods
cmp
cltd
push
mov
arpl
and
inc
xchg
sbb
pop
push
jns
scas
dec
add
jge
data16
js
push
mov
mov
push
inc
std
jb
test
cld
inc
jne
sahf
mov
dec
stc
xchg
es
jl
cmc
dec
rcrl
jp
sbb
or
movsl
jle
add
cmp
cmp
inc
test
jp
xor
pusha
pop
ficompl
hlt
and
mov
pushf
das
jns
xlat
test
jmp
dec
cltd
cld
aaa
inc
fcmove
mov
mov
push
lret
jno
cld
jae
sbb
fs
and
push
movsb
jecxz
lock
push
inc
dec
inc
repz
popf
pop
jmp
call
test
mov
gs
mov
cmpb
enter
movsb
pop
mov
aas
mov
and
fiaddl
das
addr16
dec
pop
je
adc
inc
xchg
mov
cltd
dec
or
stc
std
or
jae
nop
mov
xchg
shlb
scas
push
jmp
mov
js
call
sar
sahf
adc
and
daa
dec
sbb
jp
out
or
cmp
or
aad
sub
repnz
xor
mov
pop
sub
push
call
jbe
cmp
or
test
push
mov
mov
loopne
cmp
add
mov
sub
out
aam
push
movl
aas
shrb
adcb
out
sahf
dec
fcmovnu
mov
or
or
dec
mov
outsl
idivb
pop
sbb
pop
dec
movsb
sti
stc
push
call
dec
mov
pop
insb
mov
or
fcmovnbe
shrl
mov
das
into
sbb
rolb
aad
adc
pop
xor
in
mov
mull
outsb
cmp
sbb
push
test
daa
and
and
jbe
jbe
divb
add
mov
pop
xor
xor
pop
mov
scas
mov
negb
ss
fadds
mov
movsl
sahf
adcl
cmp
mov
sti
scas
sbb
test
sahf
js
jns
push
imul
shrl
mov
loop
pop
mov
pop
lods
inc
dec
xchg
cmp
pop
jne
imul
xchg
lods
icebp
int3
loopne
in
fisubrl
xchg
push
xchg
mov
mov
sbb
mov
mov
enter
sbb
cld
shrb
mov
inc
or
mov
frstor
dec
andb
out
stc
sbb
cmp
aas
sbb
cs
mov
cmpsl
xor
xchg
jns
outsl
and
pop
mul
dec
adc
dec
xchg
or
dec
adc
xchg
sbb
loopne
repnz
dec
dec
outsl
push
mov
xor
dec
jbe
mov
xor
adc
and
pop
xchg
hlt
fcomps
in
cmpsl
lock
fsubrs
push
nop
mov
jg
mov
cltd
mov
divb
gs
iret
xchg
pop
cmp
mov
fcomps
pop
sub
sub
sbb
popa
in
jnp
cltd
or
mov
jge
insb
adc
inc
mov
xor
xchg
dec
lahf
adc
push
loopne
inc
fwait
gs
xchg
ret
adc
mov
fisubrs
shlb
movsl
jmp
add
sub
in
dec
stos
mov
xor
idivb
jbe
sbb
dec
ljmp
cmp
das
cs
sub
cld
sbb
arpl
negl
dec
rol
lods
inc
mov
cmp
pop
int
xor
shlb
imul
sub
xchg
xor
mov
mov
repnz
in
sub
mov
cmp
lods
push
outsb
in
orps
mov
sbb
sti
mov
adc
aas
fsts
pause
int
pushf
cli
js
jecxz
sbb
jg
fiaddl
loopne
test
shlb
sahf
and
cwtl
mov
inc
minps
mov
or
bound
sbb
mov
add
shrb
mov
cmp
mov
rcl
sbb
cli
xor
and
aad
cmpl
xchg
xchg
xor
daa
inc
jns
stos
ss
or
es
hlt
push
je
ja
fwait
adc
adc
test
rclb
fcomps
mov
mov
fdiv
lahf
xchg
mov
push
repnz
iret
fucom
jg
mov
out
pop
dec
mov
xor
aas
sbb
jo
xchg
dec
cmp
fs
movsl
mov
push
decb
lods
jne
arpl
push
test
adc
push
lds
lcall
sub
or
and
pop
sbb
add
stos
in
xor
hlt
mov
pop
adc
cmp
mov
or
xlat
es
jg
rcl
inc
inc
fnstenv
pop
test
int3
lret
daa
mov
add
lret
lock
dec
adc
pop
repnz
pop
popl
sbb
lret
push
add
jp
call
scas
add
pop
test
or
rcll
dec
push
cli
rorl
cwtl
mov
hlt
xchg
cmp
std
js
mov
mov
sti
fsubrp
shrb
inc
pop
aaa
cmc
ds
adc
vcmppd
cltd
test
push
add
cli
adc
push
rclb
movsb
sbb
mov
sbb
push
loopne
xor
sbb
jg
or
lahf
ljmp
dec
or
mov
add
shlb
or
es
ds
dec
xchg
mov
mov
bound
push
mov
loop
or
aam
mov
sbb
iret
mov
pushf
loop
jl
scas
loopne
jns
mov
lret
mov
xchg
pop
mov
mov
or
leave
jp
je
pop
sahf
push
sub
and
push
cli
inc
dec
or
jge
leave
pop
outsl
test
mov
cmp
sbb
repz
adc
adc
pop
out
pop
lcall
cwtl
adc
push
dec
test
stos
icebp
mov
adc
add
mov
orb
scas
mov
sti
daa
jns
popa
and
push
sub
loop
push
jb
add
push
pop
mov
push
pop
into
pop
mov
shrb
push
xchg
mov
test
hlt
stos
jle
mov
int3
outsl
or
mov
push
repnz
test
sbb
movsl
ss
stc
adc
fs
dec
push
repnz
mov
add
sarb
jne
add
or
add
sub
pop
adc
test
jbe
js
cmpsl
dec
jecxz
jmp
xchg
and
and
lock
mov
sbb
sbbb
mov
out
push
lds
ret
outsl
cli
ss
fs
jbe
aam
imulb
scas
adc
mov
add
sub
shrb
pop
pop
mov
sahf
mov
lock
out
out
sahf
adc
pop
push
aas
outsb
inc
repnz
arpl
sbb
andl
repz
jmp
stos
shlb
and
mov
sub
cmp
in
fistpll
jle
add
pop
adc
and
out
lret
fistpll
hlt
pop
or
or
cmc
cli
les
mov
je
cs
and
loop
scas
in
adcl
out
cwtl
insl
out
sahf
xor
sub
sbb
les
rcl
dec
push
insl
xchg
out
fmull
add
jecxz
xchg
inc
mov
imul
sub
inc
sahf
arpl
pop
orb
lock
pop
hlt
pop
jle
cmp
push
scas
adc
insl
rolb
fadd
xchg
push
mov
fistl
out
xchg
das
insl
sbb
mov
movsb
mov
pop
sub
or
shl
sub
shll
jo
das
test
negl
inc
jle
mov
mov
movsl
in
sbbb
popl
fsubrs
sbb
loope
push
imul
mov
pop
sbb
clc
inc
xor
movsb
sub
ss
clc
enter
mov
lods
addr16
add
imull
ret
push
adc
cmp
addb
pop
cli
insl
repnz
popf
in
mov
mov
fcompl
sbbl
or
aam
insb
aam
icebp
pop
outsb
xor
fs
xchg
pop
pop
int
in
andl
cmp
js
or
fcmove
test
ja
into
mov
pushf
dec
dec
into
dec
jns
mov
fadd
mov
jnp
cmp
dec
test
mov
aad
sub
sti
shrl
repz
push
lods
and
xchg
xor
push
and
fadds
int3
pop
dec
cli
outsl
fidivrl
mov
mov
adc
fcoml
mov
in
sub
in
jbe
jmp
ret
ret
pop
ss
jg
sti
mov
sbb
push
fdivl
in
dec
jl
ret
popf
cs
insl
icebp
sti
mov
mov
in
pushf
push
andb
in
incb
sbb
xchg
inc
adc
mov
sbb
sbb
add
sbb
imul
fstpt
cltd
sub
shll
and
or
push
dec
daa
lock
bound
pop
xchg
rorl
imul
sbb
push
subl
jbe
ja
push
xchg
jb
mov
aaa
mov
in
popa
mov
dec
pushf
xor
fmuls
and
into
inc
jne
roll
add
jecxz
lods
fidivrl
sub
jno
xchg
popa
mov
mov
mov
fimuls
push
mov
out
add
ret
sbb
movsl
in
push
mov
xor
mov
nop
aas
lds
repz
outsb
cli
mov
aas
or
cmp
add
sbb
pop
lahf
ficomps
lret
mov
jg
cld
mov
jnp
fs
iret
xchg
pop
test
mov
add
xchg
xchg
enter
sub
sarb
testl
xchg
js
loope
aad
pop
sti
sub
jo
dec
lock
mov
testb
push
sbb
xor
sahf
push
je
sahf
xor
pop
jp
clc
stos
jnp
cmpl
nop
daa
arpl
adc
mov
arpl
sahf
pop
mov
inc
stc
sbb
popl
iret
lea
popf
inc
dec
repz
bnd
add
mov
jae
mov
fdivp
addr16
dec
mov
rcll
loopne
pop
lahf
scas
loop
sub
setp
sahf
sub
sub
adc
shlb
pop
pop
jo
inc
gs
xchg
out
push
lea
loop
cwtl
andl
mov
fsubl
xchg
mov
add
popa
hlt
mov
icebp
pop
inc
repz
mov
push
xchg
inc
fadd
js
gs
aas
mov
xor
push
add
xchg
xchg
fildll
pop
es
xchg
inc
mov
xlat
mov
dec
cmp
jnp
push
aam
pop
leave
pusha
mov
mov
dec
add
sti
aad
or
fisttpll
into
mov
sti
fcmovb
pushf
cli
adc
sbbb
pop
aad
or
cmp
mov
jle
lods
mov
insb
add
or
and
mov
xorl
test
stc
mov
push
mov
pop
movsl
lea
dec
pop
imul
push
cmp
shrl
mov
pop
mov
mov
add
fidivrl
mov
orb
sub
inc
mov
jl
and
call
repz
sahf
or
cmp
inc
adcl
fs
jns
lds
test
je
pop
lahf
inc
push
stc
popf
movsb
push
popa
stc
cmpsl
mov
andb
data16
xchg
cwtl
or
sbb
lret
mov
int3
mov
dec
jecxz
sbb
jl
add
lea
sub
movsb
dec
cmpsl
pusha
out
call
arpl
int3
lods
hlt
js
mov
push
mov
in
jne
cmpsb
jecxz
pop
imul
adc
lock
orw
jge
xor
insl
jge
imul
lea
rcrb
test
jle
aaa
pop
in
arpl
sbb
mov
jo
fs
stos
inc
cltd
rcr
int
pop
cmp
dec
push
out
mov
xor
aam
pop
push
adc
sub
popa
mov
data16
cmpsb
xchg
push
lret
in
pop
sbb
pop
xor
mov
call
xor
jmp
sbb
fmuls
sub
popa
mov
lea
inc
adc
xchg
ljmp
sbb
loop
and
or
push
push
dec
sti
addr16
into
pop
mov
mul
sub
test
cmpsb
and
mov
adcb
mov
inc
mov
cwtl
mov
add
test
jb
xchg
inc
mov
jbe
push
mov
test
mov
push
or
inc
ret
out
pop
sbb
scas
aam
int3
mov
jl
dec
mov
push
pushl
cmp
sbb
pop
sbb
sbb
lsl
subb
shrb
insl
add
xor
jne
or
mov
in
add
popf
lods
xchg
add
inc
fisubs
or
loop
lret
int3
loope
inc
and
and
aam
add
jmp
or
leave
add
cld
push
arpl
push
stos
clc
or
or
mov
mov
push
mov
mov
out
in
jb
stc
cwtl
testb
out
adc
mov
out
mov
adc
mov
jne
sbb
aad
clc
mov
idivb
leave
icebp
mov
mov
cmp
sbb
jmp
cmpsl
ja
xor
add
icebp
je
popa
shrb
mov
mov
inc
mov
cmp
cmpb
int3
addr16
lahf
inc
fsts
mov
ss
hlt
sahf
fcmove
int3
ss
out
jno
sub
add
in
adc
jle
ss
scas
dec
dec
imul
xchg
pop
shr
insl
in
adc
je
mov
mov
xchg
sbb
daa
fcom
push
fidivrs
pop
xor
mov
rcrb
stos
inc
xchg
data16
cmp
das
adc
pop
sbb
enter
shl
mov
outsb
call
fidivs
or
push
pushf
pop
sub
cwtl
mov
sbb
out
cwtl
pusha
mov
jb
fistpll
cmpsl
jle
inc
mov
pop
ljmp
lock
cs
mov
cli
shr
adc
imulb
cmp
cs
out
fdivl
sub
dec
cmc
pop
cmp
decb
lods
inc
mov
mov
iret
pop
test
call
sbb
pop
push
xor
ret
in
lods
fstpl
xchg
adc
notl
pop
xlat
or
in
mov
cmp
inc
insb
leave
insb
fwait
iret
mov
and
and
sti
pop
and
mov
test
xor
inc
mull
adc
mov
stos
in
xor
xchg
dec
iret
sub
jae
jno
mov
dec
push
mov
roll
pop
push
push
scas
call
mov
outsl
xchg
dec
sbb
inc
in
icebp
in
xchg
add
mov
push
jle
mov
xor
iret
sarb
or
jb
jp
and
out
ret
repnz
and
adc
adc
adc
cmp
mov
sbb
push
cld
aad
in
loope
addl
and
xchg
pop
out
push
jmp
hlt
es
mov
cmc
mov
test
js
jo
iret
es
xor
ret
mov
or
adc
and
and
stos
mov
clc
loop
pop
scas
in
filds
mov
fisubs
sbb
sub
mov
push
ret
jno
jge
dec
xlat
xabort
or
pop
sbb
mov
dec
pop
notl
cmp
popf
or
les
outsl
hlt
inc
mov
arpl
mov
js
frstor
les
sti
inc
jle
mov
push
push
sbb
jg
pop
imul
mov
mov
adc
sub
or
lcall
add
icebp
enter
repz
cmp
inc
lcall
cli
cmp
lret
js
test
mov
xchg
daa
loopne
das
sub
xor
mov
out
cmp
cmp
sbb
mov
shll
ret
lods
mov
js
cs
mov
cld
decl
sbb
dec
cmc
jp
add
or
jg
subl
test
loopne
cmpsl
xchg
add
sbb
mov
xchg
popa
adc
xor
rolb
jno
shll
cwtl
test
inc
outsl
inc
fstps
xchg
pusha
aaa
inc
pop
adc
sub
je
test
add
dec
mov
jg
pop
and
mov
mov
dec
and
mov
incb
cmpsl
inc
push
jmp
pop
or
lea
pop
lret
and
lret
mov
xchg
sub
nop
jnp
jo
lret
pusha
movsb
pop
es
ljmp
mov
out
mov
jne
fucomp
orl
mov
adc
mov
gs
rcrb
imul
push
mov
push
clc
or
and
scas
fs
sbb
mov
fcmovne
sub
roll
stos
xchg
jns
loopne
aas
sub
icebp
sub
setnp
add
pop
mov
jmp
add
rcrl
dec
sub
sub
jp
icebp
cltd
mov
jnp
xor
out
bound
das
std
xchg
mov
hlt
sbb
xchg
sub
enter
sub
mov
mov
mov
or
das
jo
icebp
xor
idiv
push
js
lock
jge
rclb
lret
fnsave
pop
scas
pusha
je
and
xorb
test
pop
pop
fdivrs
mov
lock
decl
jmp
fstps
mov
push
insl
xchg
rcl
cmc
les
push
mov
mov
and
stos
pop
mov
jbe
and
mov
les
sub
rclb
dec
xchg
jns
push
nop
shlb
hlt
hlt
das
mov
mov
cli
xchg
lcall
scas
imul
xchg
out
xchg
jle
ss
or
and
xor
xor
mov
ljmp
es
orl
mov
in
sbb
xchg
int3
cmp
pop
cmp
pushf
or
mov
pop
sub
dec
roll
sbb
cmpsl
js
in
leave
cmp
add
dec
arpl
sub
jb
sbb
mov
or
ret
pop
stc
adc
in
and
jb
stc
inc
push
int
mov
lret
addr16
push
outsb
test
xor
pop
and
loopne
popa
sub
popf
pop
sbbb
and
push
es
repnz
pop
mov
das
push
or
loope
mov
jg
add
rcl
stos
cmp
jb
dec
movsb
adc
sahf
push
shll
ss
add
inc
sbb
fcomi
sbb
addr16
in
in
in
or
fisttpl
cmp
ret
sti
and
push
mov
or
ja
test
cmp
and
sub
or
fsub
repz
and
pop
jg
rorb
stos
lret
ficomps
sbb
popa
push
cmp
mov
fstps
cmp
cltd
test
jp
dec
cmc
imul
lret
bound
rcrb
xchg
mov
adc
inc
jle
int3
mov
mov
xchg
lods
push
pop
sub
popf
cli
addb
popa
test
dec
cmp
xchg
inc
lahf
fisttps
jp
dec
repnz
fadds
in
test
jmp
mov
loopne
in
dec
iret
mov
pusha
outsl
mov
out
test
ret
xchg
inc
leave
insl
jecxz
callw
ret
cs
scas
lock
or
adc
sub
movsl
movsb
cli
movsl
mov
fstps
mov
cli
xchg
js
stc
jle
lcall
imul
gs
pop
xor
xchg
pop
jmp
rcrl
dec
sub
jge
push
subl
inc
push
mov
cmpsb
and
fsubl
std
fsubl
arpl
xor
pop
iret
das
mov
sbb
js
cmc
mov
mov
lret
and
push
sti
cmp
lahf
insl
sbb
and
pop
jo,pn
xor
scas
push
test
xor
sbb
fwait
cmc
sbb
mov
aad
clc
push
fisttps
fwait
cwtl
cmc
pop
outsb
mov
andl
inc
adc
pop
outsb
push
pop
stc
sub
mov
in
daa
sbb
mov
je
mov
mov
jmp
loop
je
inc
cmpsl
sub
movsl
mov
divb
xor
xchg
pop
xor
dec
lea
or
sub
mov
pop
mov
dec
cmpsl
fcmovbe
or
ficomps
push
mov
mov
push
mov
divl
cmpsb
data16
int
in
ja
jp
adc
push
popf
mov
pop
pushf
lret
lods
add
aad
xor
inc
into
popa
pop
test
lds
jo
insb
not
inc
hlt
add
mov
movsl
xor
std
das
adcl
jg
add
sbb
mov
addl
mov
or
adc
mov
mov
mov
inc
cs
inc
adc
cld
mov
mov
push
in
je
cld
xchg
cmp
ss
cmpsl
jmp
jmp
ror
sbb
loope
cmp
and
mov
inc
inc
cmp
es
adc
es
sarb
mov
or
or
add
or
popa
stos
loop
lret
outsl
adc
cmp
sbb
pop
in
sub
stos
scas
ficompl
aas
pop
cmp
jecxz
les
dec
pop
test
dec
dec
jns
jbe
push
std
lret
sub
mov
cmc
cmp
xor
popa
lods
inc
xchg
or
ss
movsl
cmp
xchg
jp
jecxz
cmp
and
loope
mov
fbld
sub
lock
testb
jle
jb
pop
int3
push
or
push
sub
leave
xor
in
xchg
inc
and
dec
nop
xor
stos
popa
andb
mov
js
fs
ret
cmp
adc
cli
mov
mov
pushf
add
push
movsl
xchg
sub
repnz
daa
andb
pop
dec
push
inc
fbld
xchg
cs
clc
or
mov
dec
and
iret
daa
pop
in
add
xchg
mov
pop
jns
sub
xchg
ret
notl
orb
loopne
push
inc
out
adc
mov
rorb
je
repnz
mov
push
fldt
pop
cltd
cmp
or
pop
lods
dec
and
fucomi
cmp
ret
cmp
sbb
cmpsl
test
add
fs
pop
lret
loop
mov
push
jmp
insl
lcall
lret
shll
test
outsb
jle
js
dec
xor
or
mov
sub
add
in
mov
dec
popa
mov
ficoms
adc
push
out
ret
jnp
sub
or
dec
and
int3
xor
lea
addl
outsb
push
mov
stos
sbb
mov
sarb
out
mov
addr16
jmp
add
cmp
popa
addr16
or
lret
jo
dec
mov
inc
shl
repnz
pop
pop
dec
in
fwait
fwait
xor
pop
xchg
mov
mov
sbb
fstp
xchg
fnclex
and
das
push
xchg
daa
nop
xor
shll
sahf
sub
fistpl
ljmp
or
push
or
dec
sbb
and
movl
inc
and
inc
hlt
push
lret
pop
pushf
xor
test
loop
loope
nop
sub
fucomp
aas
xchg
mov
popf
fbld
mov
add
push
push
aaa
cmp
aam
add
cmp
add
xlat
in
xchg
insb
fldt
imul
out
xchg
push
push
inc
aam
daa
pop
in
test
arpl
leave
int
adc
test
xchg
mov
clc
imul
fcoms
lods
sbb
xchg
push
mov
mov
ja
leave
rclb
mov
scas
imul
mov
fmuls
popa
jns
inc
and
adc
dec
lock
js
insl
adc
jle
aam
mov
lret
bound
hlt
xor
lcall
and
in
mov
adc
incb
addr16
push
rcll
lahf
shl
nop
cwtl
mov
inc
mov
adc
cmpsl
inc
idivl
fnstcw
pop
cltd
xchg
fidivs
ret
test
fdivs
into
addr16
scas
fmull
loopne
out
daa
popf
add
out
sub
sub
pslld
inc
out
pop
lds
bound
movsb
jb
sbb
mov
mov
rcrb
test
inc
addr16
cld
add
sub
mov
lods
sarb
adc
into
out
pop
fidivl
sub
bound
jmp
push
sbb
stos
lds
cwtl
push
xor
or
mov
test
xchg
jbe
cli
push
popa
adc
cmp
inc
mov
loopne
push
dec
xchg
jns
les
dec
leave
data16
cwtl
ljmp
add
mov
aad
and
push
pop
pop
jmp
xchg
mov
fsubs
movsb
fdivl
es
scas
aam
dec
sub
cmpsl
int3
mov
sbb
xchg
mov
dec
cld
push
loopne
paddsw
aad
push
lock
inc
mov
fdivrp
inc
add
arpl
dec
xor
shrl
das
push
test
jge
jp
xor
in
jecxz
cmp
test
mov
mov
push
int3
ret
or
aad
push
pop
push
push
iret
mov
mov
jmp
push
test
push
jmp
adc
inc
pop
pop
stc
int
negl
sub
xchg
sti
xchg
fs
test
mov
xchg
test
scas
stos
test
dec
popf
lret
jbe
mov
mov
sahf
aas
jo
js
mov
bound
lock
sbb
ret
imul
in
test
icebp
sbb
mov
addb
cld
pop
inc
pusha
mov
cmp
call
push
aad
xchg
and
mov
mov
xchg
add
jnp
jo
lock
std
test
push
adc
decl
mov
adc
arpl
ja
or
outsl
jge
dec
and
push
subb
push
cwtl
test
scas
ljmp
dec
fmull
sbb
xlat
loope
and
rcrl
es
mov
inc
or
fs
adcl
adc
je
sbb
shl
cmp
test
jb
cmp
pop
stos
xor
popa
clc
scas
xor
in
rolb
pop
jnp
stos
and
mov
rcrl
mov
mov
mov
mov
pop
cmc
inc
and
lret
test
xlat
rep
in
sbb
pusha
addr16
inc
adcb
mov
inc
sbb
imul
es
repnz
stos
push
mov
mov
ret
and
sbb
jb
cmp
cmp
sub
scas
rcrl
adc
dec
lcall
xor
push
push
push
or
rcr
lret
add
and
mov
adc
pop
jns
pop
mov
push
and
push
pop
dec
mov
mov
movsl
mov
das
stc
lahf
mov
clc
cli
int3
leave
fcom
fisubrl
testb
movsb
mov
or
sub
jp
out
sbbb
mov
dec
ds
aas
je
std
cmpl
mov
push
movb
cmp
out
repz
push
fcmovnbe
pop
fld
push
repz
pop
ss
jmp
ret
insb
xchg
das
stos
fsubs
or
and
xchg
mov
clc
daa
mov
mov
pusha
aad
xchg
sbb
fmull
in
push
pop
ret
fisubs
inc
xchg
xor
enter
sub
add
sub
xor
mov
in
jle
jmp
flds
scas
and
into
int
dec
cli
mov
and
jnp
pusha
test
mov
sbb
scas
xor
mov
jb
mov
popa
or
xchg
push
mov
push
mov
jge
pmaxub
sti
mov
sarl
test
jb
sbb
dec
loopne
dec
mov
jp
adc
add
scas
mov
xchg
sub
lds
out
imul
mov
push
push
add
fildl
mov
aam
outsl
or
lea
iret
hlt
dec
mov
and
repz
sbb
pop
in
pop
rcrl
mov
cmpsb
jnp
test
bound
add
push
out
inc
push
xor
jle
push
push
adc
add
dec
jno
in
push
xchg
lret
pop
pop
mov
loope
movsl
or
stos
inc
popf
and
pushf
inc
fsubl
jae
cmp
kmovd
test
in
mov
xchg
jp
inc
pop
xor
std
mov
dec
push
cmp
inc
sbb
int3
xchg
jmp
lret
push
xor
fisttps
push
inc
mov
cld
lods
sbb
jg
push
mov
sub
sbbl
sbb
test
and
dec
mov
fisubl
pop
loop
movsb
pop
in
mov
push
cmpsb
outsb
das
mov
dec
sub
mov
mov
mov
add
and
je
mov
mov
dec
mov
jl
mov
dec
jbe
sub
pop
xor
cmp
dec
mov
fsubs
add
xor
out
push
sbb
fisubrs
pop
mov
inc
incl
fcomps
push
ror
fdivs
imull
adc
cmpsl
ret
jg
mov
mov
mov
ja
icebp
mov
jne
push
fcompl
jbe
outsl
mov
xorl
mov
sti
sbb
inc
adc
jno
aaa
icebp
stos
mov
rcll
jne
mov
sbb
fldenv
xchg
adc
lock
fisubrs
cld
inc
scas
ss
jg
or
fnstcw
xor
push
icebp
test
sbb
sbb
add
cmp
mov
cwtl
add
dec
push
loope
push
std
es
pop
and
mov
test
mov
jae
jg
lds
clc
lahf
push
mov
push
mov
imul
in
pushf
pop
mov
cmp
pop
cmc
in
pushf
outsl
icebp
add
xor
add
negb
es
ret
mov
aam
int3
mov
add
push
cmpsb
push
cld
mov
pushf
push
pushf
loop
pusha
sub
push
outsb
push
mov
sub
cmpxchg
sbb
inc
lcall
dec
insl
les
jp
mov
xchg
fs
ja
adc
leavew
mov
and
lods
inc
shll
pop
xchg
mov
bound
in
mov
ja
xchg
fistps
hlt
mov
lret
je
adc
cmpsb
jge
mov
stos
dec
fistps
loope
cli
add
iret
int
mov
test
jnp
push
add
sbb
ffree
sbb
popf
call
push
mov
jb
hlt
jo
xchg
xchg
mov
and
add
xor
lea
cmp
inc
jae
scas
lods
js
fdivs
mov
jnp
xlat
jno
ds
xchg
add
inc
push
or
int
xor
pop
stos
es
xchg
mov
adc
and
cmpsb
push
ja
cwtl
cmp
push
pop
test
mov
fbld
nop
bound
push
stc
inc
mov
or
inc
shr
rol
or
aam
iret
pop
aaa
shrl
mov
push
adc
add
mov
jl
mov
and
pushl
mov
loopne
subb
mov
aam
js
cmp
add
je
push
aad
inc
and
cmp
or
lret
fildll
push
aad
repnz
xor
imul
and
add
xor
sub
bound
test
lret
iret
jecxz
mov
daa
popa
xchg
les
loop
jl
dec
cltd
pop
mov
adc
adc
movsl
hlt
adc
and
fisubrl
stc
pop
inc
push
rcrb
cmpsl
mov
xor
sbb
pop
add
cmp
pushf
ret
popl
dec
lret
adc
mov
arpl
push
scas
loope
hlt
mov
aam
arpl
std
and
mov
jge
xchg
arpl
jne
std
daa
jmp
mov
push
dec
jecxz
aaa
push
repnz
movsl
add
aad
inc
adc
dec
in
pushf
jge
pop
mov
dec
scas
sbb
mov
je
fldenv
sbb
mov
xchg
mov
repz
push
mov
xchg
rolb
sub
dec
out
mov
gs
iret
andb
sbb
push
insb
xor
fstpl
movsl
jl
xchg
sub
sub
out
or
shll
lret
push
or
mov
and
add
sti
add
sbb
fstpt
and
xchg
loopne
fildll
and
mov
add
adc
pop
ret
adc
in
lods
inc
outsb
fsubr
cmp
cltd
enter
mov
js
insb
push
push
movsl
inc
iret
data16
in
test
cli
dec
gs
or
xchg
adc
adc
xchg
inc
lods
lea
xlat
cmc
scas
and
mov
push
mov
cmc
xor
dec
in
addb
iret
cmp
jecxz
push
gs
sub
cmpsb
cwtl
imul
scas
dec
jo
hlt
mov
cmpsb
aas
mov
inc
cmpsl
jo
mov
aam
mov
jp
push
ret
adc
sbb
sahf
cmpsb
jno
movsb
loop
mov
push
loop
mov
cli
pushf
and
fnstenv
cmp
jmp
mov
inc
lcall
mov
mov
xchg
mov
dec
ret
mov
rcr
xchg
and
push
or
jmp
loop
inc
push
enter
mov
sti
sub
pop
xor
pop
fwait
lock
sahf
daa
inc
or
shl
aam
mov
shll
out
xlat
out
test
jmp
lcall
and
mov
mov
sbb
shll
int
jl
leave
lret
cld
jmp
inc
mov
adc
mov
leave
hlt
adc
jl
ror
xchg
pusha
insl
loopne
sbb
jns
pop
adc
test
push
in
mov
dec
loope
push
mov
xor
test
pusha
push
xchg
jbe
pop
or
ret
dec
int3
arpl
arpl
mov
stos
jae
or
push
outsb
dec
jp
testl
cmpsb
lock
pop
jno
xchg
mov
and
jo
fwait
mov
in
xchg
adc
dec
and
std
jae
movsb
sbb
or
sti
ja
fisubrl
mov
sub
leave
push
inc
cmpsl
and
cwtl
test
mov
cmpsl
pop
adc
nop
lds
sub
das
cltd
test
sub
cmc
pusha
mov
decb
adc
xchg
pop
lcall
movsl
add
sub
out
repnz
inc
cmp
enter
in
xchg
movsb
jae
mov
in
cwtl
mov
stos
jae
push
dec
sahf
jo
imul
xchg
ljmp
or
push
ljmp
xor
sbb
dec
add
sub
push
and
xchg
push
idivb
cmp
leave
enter
mov
inc
or
enter
in
out
mov
adc
adc
gs
fnstcw
add
xchg
sbb
push
sbb
arpl
inc
cmpsl
popa
xor
mov
pushf
pop
xchg
sub
mov
push
gs
faddl
shrl
icebp
js
xor
arpl
dec
jmp
jl
leave
jns
jg
add
aas
sbb
ror
and
dec
mov
adc
stos
sbb
xchg
shll
and
sbb
sbb
push
ret
jle
test
sub
push
and
fwait
loopne
mov
mov
jns
add
cmp
push
scas
mov
sbb
dec
lods
in
xchg
jecxz
cmpsb
adc
je
je
lods
inc
aas
les
bnd
xchg
jae
pop
mov
aam
mov
subb
sbb
cmp
shll
lods
dec
mov
sarl
add
mov
xchg
gs
inc
add
mov
dec
mov
push
sbb
mov
cmp
xlat
sub
sahf
out
rdmsr
xchg
in
out
and
fcomps
and
movsl
sbb
mov
adc
mov
or
and
mov
pop
sbb
das
sub
pop
xchg
cmovns
clc
inc
jbe
mov
pop
push
call
popa
sub
iret
or
ljmp
sahf
cmpsb
add
jg
pop
out
fsts
icebp
jo
lea
sarb
popa
pop
adc
push
jne
xchg
sahf
lahf
or
negb
pushf
pop
cli
dec
add
fwait
cmpsl
pop
cli
xchg
cmp
out
inc
cmc
pop
rorl
jp
jl
outsw
dec
push
ret
push
rolb
mov
pop
adc
or
leave
scas
mov
mov
sbb
les
push
xor
shlb
lcall
xor
jno
mov
sbb
jp
xor
dec
lock
sti
or
lret
out
sub
cld
fcoms
outsb
sbb
pop
test
push
in
push
adc
fsts
or
mov
sbb
dec
sbb
cvttps2dq
mov
lock
cmpsb
adc
add
cld
in
lea
cmp
je
fmul
xchg
inc
cmpsl
icebp
mov
mov
cmp
dec
loope
cltd
inc
xlat
or
cs
out
pop
mov
inc
ret
cmp
sub
in
test
ss
data16
lods
and
lret
push
out
test
fldcw
mov
push
jne
or
clc
push
fwait
xor
jle
adc
xchg
jns
and
pop
icebp
enter
lods
enter
cmp
and
test
jmp
mov
or
and
sub
xchg
std
cwtl
mov
nop
and
cwtl
cmpsb
mov
fidivrl
cmpsl
stos
sti
in
adc
mov
push
sti
insb
fldt
shlb
bound
shl
test
shl
in
mov
cmp
jge
inc
adc
inc
popa
or
int3
cmpsb
in
push
push
cmpsb
xchg
scas
out
mov
mov
xor
push
dec
push
mov
jmp
sbb
cwtl
or
pop
sarl
jp
fs
cld
pushf
mov
or
jbe
adc
les
push
addl
mov
mov
scas
out
rol
xor
lahf
stos
aam
int
inc
pop
out
out
mov
and
lea
imul
cmp
fsubrs
pop
fmul
sahf
xlat
mov
and
insb
fwait
xor
into
mov
xor
clc
lret
imul
push
outsl
movl
loopne
sub
sub
ret
jmp
sub
outsl
inc
pusha
mov
jle
push
and
fnstcw
daa
js
clc
add
pop
loop
push
rolb
mov
outsb
adc
adc
pop
push
cmpl
insl
test
push
xor
in
adc
cmc
mov
xchg
dec
pop
int3
pop
lock
or
imul
inc
sub
push
leave
cltd
push
or
mov
icebp
or
jle
stc
je
pop
outsl
inc
movb
xchg
push
inc
aad
xchg
std
and
test
lds
mov
test
fs
jns
mov
inc
loopne
rol
lahf
xchg
sub
xchg
mov
sbb
inc
or
sarb
pop
xor
mov
push
fidivs
jbe
or
pushf
adc
lea
jae
sub
loope
in
sbb
arpl
push
lcall
pop
aas
nop
call
or
rcll
mov
ds
inc
iret
and
hlt
adc
imul
ds
pop
jle
out
les
imulb
sub
add
sti
jns
adc
leave
pusha
push
stos
add
mov
mov
xchg
dec
scas
test
out
xchg
cltd
mov
and
mov
add
push
ret
xchg
sub
xor
pop
shll
push
jecxz
push
std
orb
inc
call
xor
xor
in
pushf
sub
mov
xor
shr
inc
out
fldenv
mov
es
shll
xchg
imull
mov
adc
mov
das
xchg
cbtw
shlb
sbb
fisttpll
fwait
mov
sub
mov
dec
shrb
inc
push
jmp
pop
lret
lret
and
mov
lret
cld
pop
hlt
cmp
push
shrb
dec
jecxz
add
jnp
cmp
lahf
int
scas
or
inc
testl
push
inc
call
fcoms
jb
sub
out
je
xor
pusha
ss
mov
jns
aam
in
sub
repz
mov
call
dec
cmp
or
adc
or
lret
adc
mov
dec
ret
into
aaa
pop
adc
inc
pushf
scas
inc
ret
je
pusha
call
sub
popa
icebp
pop
sub
or
shlb
shll
mov
sub
jg
xor
daa
lret
rcrl
dec
xor
call
cmp
push
pushf
xchg
bound
xchg
cmpsb
stos
dec
and
mov
xor
cmp
imul
sahf
inc
outsl
movsl
mov
push
in
jb
enter
dec
dec
sbb
inc
mov
cmp
testl
mov
test
mov
movsb
mov
jecxz
adc
sub
shl
popa
xor
sub
mov
fs
cmpb
inc
inc
pushf
mov
or
int3
pop
loope
pop
jp
fs
gs
sbb
add
xor
jnp
popf
push
mov
xor
push
cmp
push
aas
jmp
or
xor
sub
lds
dec
loopne
loopne
or
xchg
rclb
mov
pop
dec
cmp
and
js
cmp
aas
mov
ret
jmp
cmp
imul
or
clc
sbb
sub
and
loopne
jae
xchg
out
xchg
and
dec
jo
add
jmp
sbb
hlt
mov
and
aam
ds
test
mov
aad
ret
cld
add
psubb
xor
pop
std
inc
pushf
imul
inc
mov
jecxz
aad
les
cmpsb
cmc
decb
sbb
mov
pop
hlt
repnz
and
push
scas
lods
lock
push
adc
and
shrl
into
dec
fnsetpm(287
enter
fsubs
test
bound
add
xor
xor
inc
pop
mov
iret
rcrl
cmp
test
jno
into
and
rorl
jmp
sar
jg
xchg
xchg
out
in
std
lds
sbb
cmp
pop
add
in
jg
sub
ret
sub
fsts
sarb
or
xchg
das
fcoml
mov
in
pop
lock
lods
cmp
ja
pop
jbe
push
jae
sub
mov
hlt
xor
decl
or
jb
xchg
mov
fwait
loop
divl
es
popa
ret
mov
lahf
lds
and
sub
and
out
pop
sahf
cwtl
add
inc
push
push
fidivs
jo
and
push
dec
dec
jae,pt
add
cwtl
fistpl
and
mov
aas
add
rolb
xor
cld
mov
sub
cmp
push
pop
fisubrl
mov
push
sbb
cmp
stos
inc
inc
pop
sub
push
mov
mov
xchg
dec
shrb
xor
notl
ret
in
mov
imul
aas
dec
fwait
xchg
dec
fisttps
inc
xor
inc
add
mov
cld
xchg
stc
test
lahf
lea
repz
aam
aad
adc
cmc
fdivrs
popa
xor
push
test
pminub
lret
mov
dec
mov
or
xor
repz
push
icebp
dec
xor
fisttpl
sbb
movsb
cmp
imul
fistpll
pop
dec
cmp
andl
cld
xchg
int
mov
cld
pop
cwtl
cld
or
xor
inc
sub
xchg
das
mov
cltd
xor
push
pop
testb
neg
lret
jp
jle
xor
jmp
add
mov
loop
push
loope
fistl
test
jmp
jo
out
adc
icebp
mov
mov
cli
insb
inc
sub
cwtl
pop
in
xchg
add
repnz
dec
mov
lahf
pop
mov
mov
ljmp
sarl
mov
bound
mov
xchg
inc
pop
ja
xor
push
xor
mov
gs
lcall
test
hlt
xor
in
xchg
sub
aaa
aam
pop
jmp
sbb
xor
lea
jl
fidivrs
in
push
add
test
push
jns
cld
fimull
nop
mov
repz
mov
cmp
jle
mov
xor
xor
lock
addr16
cltd
add
popl
shll
popf
pop
lods
lea
add
into
lods
xor
and
addr16
dec
loop
jae
je
add
in
push
sub
push
mov
mov
int
sub
xchg
cmp
cmp
testl
ret
cld
mov
add
pop
sub
scas
pop
cli
stc
cmpsl
test
scas
fwait
pop
add
fnstcw
les
sbb
sbb
cmc
scas
call
dec
ds
jns
cmp
iret
fnsave
or
xchg
xor
mov
and
xlat
dec
dec
scas
dec
mov
and
mov
jae
add
ljmp
lock
add
mov
dec
push
or
mov
ja
sub
push
dec
sti
xor
or
lahf
mov
xchg
in
mov
dec
sbb
cltd
dec
mov
lock
fists
pop
pop
mov
mov
add
push
dec
sub
xor
and
clc
xchg
dec
add
push
cmp
pop
xlat
call
xchg
adc
adcl
je
lret
lea
imul
add
mov
aad
inc
jge
xor
push
lea
xlat
iret
cmp
int
xor
xor
mov
cmp
lret
in
out
mov
stos
mov
add
mov
rcr
pop
out
push
mov
and
rol
cmpsb
out
xor
lcall
int3
stos
or
pop
cmp
adc
sti
int3
xchg
ds
dec
repz
inc
push
into
cmp
int
push
mov
and
leave
push
adc
inc
mov
cmp
scas
sbb
out
into
gs
mov
lret
xlat
xchg
xor
cltd
adc
jnp
outsl
lods
jg
jmp
stos
jmp
mov
cmp
mov
pushl
cmp
inc
movsl
push
call
in
std
add
cwtl
add
inc
inc
call
orb
jne
in
sub
hlt
adc
loop
cli
xchg
mov
xor
add
aaa
inc
xor
push
in
xor
hlt
aas
iret
dec
sahf
in
dec
outsb
int3
fdivs
movb
xchg
and
psubw
ficoml
jns
das
pop
lea
out
out
adc
xchg
add
aaa
cmpsb
jge
dec
fwait
cs
test
jmp
mov
cmp
pop
cltd
cltd
mov
xor
mov
jge
in
sahf
mov
xchg
mov
sub
mov
mov
mov
loopne
loopne
mov
repz
test
fcomps
xor
std
sbb
xchg
jno
sti
shlb
into
cs
pop
mov
js
aam
int
lods
jp
fisttpll
jbe
jne
adc
and
jmp
out
mov
mov
and
push
sbb
mov
adc
shrl
mov
test
sahf
int
add
aas
cmp
push
divl
jb
inc
ret
shrl
jp
pop
or
pop
orl
imul
movsb
addr16
cwtl
je
push
xor
and
mov
adc
nop
inc
xor
add
stos
in
int3
sbb
lds
addr16
mov
out
test
push
pop
lds
and
sub
xchg
out
jns
cmp
mov
push
push
mov
push
mov
ja
test
inc
aam
jl
adc
add
jecxz
cmc
mov
jg
les
adc
insl
adc
sbb
movsb
arpl
adcb
mov
idivb
cli
push
dec
imul
cmp
adc
inc
ret
add
fwait
xor
sub
fildl
cmp
rcrl
iret
fbstp
in
ljmp
push
jns
pop
jmp
lret
cmp
fwait
adc
lock
jae
das
pop
scas
ds
test
or
loop
add
popa
iret
fwait
das
std
aaa
mov
arpl
gs
jmp
mov
mov
aam
or
insb
sub
sbb
mov
xchg
popa
xchg
das
xlat
xor
pop
xor
out
pop
ljmp
push
test
addr16
mov
jne
fisubrs
pop
subl
add
add
movsb
mov
xchg
scas
int
ds
cli
enter
or
inc
shll
fs
mov
mov
stos
dec
xor
push
dec
or
popf
mov
enter
and
push
adc
aaa
adc
lods
push
cmpsl
jmp
sbb
mov
pop
aad
sub
jnp
insl
pop
pop
hlt
jecxz
sbb
cmp
mov
cmpsl
jb
aam
ret
sub
mov
das
cmp
mov
out
stos
inc
add
outsl
hlt
repz
sub
or
inc
mov
lahf
push
lds
cltd
xchg
and
cmp
dec
jnp
inc
xchg
popf
leave
dec
fldenv
inc
js
add
testb
push
daa
push
push
aam
inc
inc
scas
ja
mov
jnp
ret
pop
cmc
inc
in
inc
movsl
mov
mov
push
outsl
mov
xor
mov
ret
mov
xor
push
or
ljmp
push
ficompl
popa
jecxz
mov
fwait
dec
fldcw
repnz
in
and
jle
lcall
jecxz
jl
or
mov
pop
lds
in
dec
pop
xchg
test
sub
xrelease
ja
xorl
push
iret
fisttpl
mov
mov
idivl
pop
scas
insl
sbb
sahf
add
icebp
mov
in
std
and
adc
sub
jns
adc
leave
inc
jb
dec
pop
cmp
loop
push
jbe
inc
cmp
popf
out
push
mov
sbb
push
mov
fstpl
int
lahf
mul
fwait
jbe
mov
jo
aas
push
and
xchg
mov
test
lret
and
rclb
roll
outsl
sub
dec
fxch
xor
cmp
xchg
add
sbb
lret
mov
cmpsb
into
gs
popl
jne
adc
pusha
dec
jg
mov
mov
inc
pop
aaa
pop
cmp
imul
rcrl
sub
test
loopne
test
shlb
mov
insl
out
cmc
add
test
mov
adc
int3
shll
imul
xor
cmp
xlat
ret
mov
aaa
rolb
sbb
idivl
sbb
mov
inc
cmpsb
ljmp
test
mov
jae
xchg
mov
inc
push
push
pushf
add
pusha
or
xor
jne
sub
sbb
fsubrl
ss
scas
daa
les
jmp
lret
jb
jb
inc
shrl
mov
stc
loope
xor
cmp
lods
mov
scas
sbb
cmp
add
aas
add
pop
cmpsb
push
js
inc
mov
mov
test
ds
sbb
cli
je
ret
mov
leave
mov
test
sbb
sub
cmp
mov
and
int3
mov
jp
mov
dec
xchg
push
shll
adc
push
pop
mov
sbb
inc
mov
call
fnsave
lahf
clc
pop
xchg
and
dec
mov
std
in
adc
ss
mov
cmp
pop
push
aaa
pop
into
pop
jne
out
pop
insl
sub
icebp
xor
jg
stc
mov
ljmp
xchg
mov
xor
inc
mov
test
cs
test
fisubs
lret
cld
lods
aad
mov
mov
jno
inc
cmp
je
clc
sahf
mov
outsl
mov
and
loop
std
test
inc
insl
mov
sti
push
icebp
cmp
mov
mov
ja
push
pmullw
cs
add
or
lcall
dec
jmp
pop
in
movsl
pop
sbb
sub
cmpsb
jns
push
ret
pop
xchg
mov
packssdw
popa
jae
es
cmp
mov
pushf
xchg
jle
std
mov
jmp
or
repnz
out
sti
lds
and
inc
dec
aad
ja
inc
ret
cmovns
lret
bound
ja
inc
rep
jmp
pushf
mov
add
add
aaa
mov
in
inc
mov
pop
xchg
fsubl
mov
loop
mov
sarl
fsubrs
mov
ret
xor
and
jb
test
int3
shll
test
loopnew
ficoms
mov
add
ja
sub
sbb
sub
stos
fadd
fwait
sub
int3
sub
pop
pop
and
adc
lret
imull
jo
pop
call
inc
sahf
in
mov
test
nop
loop
push
cmp
mov
sbb
lods
insb
push
adc
mov
mov
out
hlt
cmpsb
paddsw
and
push
jne
dec
and
decl
clc
sub
sub
or
jg
inc
jbe
xorb
loop
insl
xor
jns
iret
adc
cmp
inc
in
mov
in
ljmp
xchg
cmpsl
mov
push
scas
lret
inc
mov
push
jmp
test
inc
scas
or
lret
subb
lods
ret
mov
or
call
fidivl
jmp
in
insl
pop
scas
pop
adc
clc
sub
push
mov
mov
cmp
jecxz,pn
fildl
sub
mov
int3
divb
icebp
xlat
repz
lret
je
inc
enter
xor
cmpsb
inc
aas
aad
sub
ss
sbbl
fs
jb
xor
js
cs
stc
lahf
js
push
popf
out
push
fwait
fs
push
movsl
fdivp
fucomi
dec
loop
std
fdivs
insb
xor
cmpsb
push
sahf
scas
cmc
mov
test
out
pop
inc
stc
cmp
rorl
jo
aaa
sbb
pop
dec
sbb
gs
fs
lcall
mov
xor
mov
pop
popf
iret
cmpl
in
push
ret
pop
adc
xor
jmp
pop
and
cmpsb
aaa
mov
and
pop
sub
scas
adc
sbb
xor
fdivrl
je
xchg
test
dec
push
rorb
cmpl
jge
push
dec
mov
jb
in
test
xor
and
fwait
inc
rcl
push
into
sub
xchg
xchg
cmpsb
out
lods
dec
cld
jmp
add
outsb
jno
fsubs
imul
test
out
repz
add
cmp
xchg
sbb
xchg
dec
lret
inc
clc
jmp
stc
or
push
cmc
dec
cmp
cmp
inc
xchg
push
push
in
or
ljmp
clc
inc
xor
cltd
popa
adc
and
pop
f2xm1
mov
fstl
iret
xchg
cmp
dec
arpl
movsb
jno
lret
jle
xor
pop
cmpsl
cmp
mov
push
lcall
mov
adcl
daa
pop
sbb
pushl
cs
jbe
lea
xchg
cmp
movsb
clc
repz
leave
adc
or
jb
jnp
in
dec
fcoml
and
or
mov
rcl
pop
pop
mov
or
pop
setge
jecxz
jg
loope
nop
pop
nop
es
mov
cmpsb
fwait
out
sub
test
push
push
mov
repnz
shl
and
and
pop
jmp
arpl
inc
mov
adc
or
in
data16
pusha
ss
xchg
aad
lret
ret
mov
test
lods
mov
dec
add
mov
fdivs
add
fs
imul
out
loop
mov
push
add
je
out
imul
ret
aad
and
sub
or
notl
sub
scas
rol
les
pop
pop
enter
sbb
sbb
ljmp
mov
cmp
shlb
pop
lret
repz
cld
mov
mov
push
nop
cltd
or
bnd
ret
sub
pop
sub
sub
sbb
lock
stos
mov
add
dec
out
rcll
mov
or
xchg
insb
inc
push
cmp
mov
sahf
imul
lcall
imul
ret
pop
lcall
xor
fidivrs
cmpsl
cmp
or
sbb
ret
out
inc
cld
push
lea
fisubs
rcrb
js
fnstcw
dec
mov
dec
repz
add
push
add
sbb
jnp
adc
je
aad
jmp
xchg
lcall
xlat
lcall
sbb
adcl
loope
fsubrl
lret
pop
jmp
jle
rorb
movsb
loopne
jmp
sbb
insb
pop
lret
push
mov
fdivrp
dec
xor
push
xchg
fistpll
fucomp
jge
fsubrl
mov
cmp
js
lea
mov
stos
sbb
mov
in
mov
push
jmp
mov
pop
dec
add
mov
add
xor
adc
and
mull
mulb
mov
xor
mov
xor
cs
lret
out
sub
xchg
mov
ds
imul
and
repnz
loop
pop
fnsave
lds
dec
dec
das
rorl
rolb
sbb
daa
je
mov
insl
xchg
js
pop
lret
out
jp
pushf
and
sarb
addr16
jmp
push
mov
fwait
cmp
imul
mov
ficoms
lret
inc
pop
imul
and
and
pusha
lds
lahf
leave
cmpps
pop
in
filds
push
mov
lret
out
and
addr16
pop
mov
inc
jecxz
stos
out
incb
shrb
xchg
add
mov
in
lret
adc
rclb
or
jne
movsb
mov
xorl
push
jmp
and
sbb
adcb
and
lds
xor
fbld
outsb
sub
inc
loope
sbb
dec
push
daa
cmpsl
mov
adc
into
fisubl
xchg
es
sbb
jmp
in
cmpsl
mov
in
inc
xchg
sbb
dec
mov
jp
hlt
sbb
pop
stos
xchg
in
adc
mov
dec
test
insl
pop
clc
dec
mov
jne
pop
xor
and
inc
ficoml
mov
mov
mov
or
push
lea
sbb
pop
lret
shl
xchg
cmp
cmp
add
scas
mov
sbb
stos
mov
fsubs
test
mov
mov
movsb
cmpsl
ds
push
push
cltd
stc
lds
inc
mov
pmulhuw
jno
mov
adc
popf
data16
xor
mov
in
jbe
mov
pop
or
pushf
lods
push
xchg
add
dec
jbe
inc
pop
pop
iret
dec
in
jge
xor
popf
rcrb
add
test
adc
cmpb
mov
xor
sub
and
push
cmpsl
addb
ret
jecxz
push
adc
mov
in
arpl
lods
mov
xchg
mov
iret
dec
adc
dec
mov
fidivl
aas
sti
xchg
out
ljmp
outsl
cmpsb
mov
lret
leave
imul
mov
movsl
mov
outsb
inc
shrl
mov
loope
pop
mov
inc
sahf
xchg
in
mov
ds
mov
xor
nop
sub
xor
mov
xor
mov
imul
clc
adc
aas
imul
repz
jno
xchg
insb
mov
sbb
lds
into
cmp
dec
mov
jno
mov
pop
adc
popf
pop
adc
aaa
dec
mov
outsl
rorb
fbld
push
outsl
jge
and
mov
jmp
mov
mov
push
mov
test
ja
mov
xchg
mov
ret
inc
or
in
push
sti
xchg
and
movups
or
xchg
shl
jbe
cltd
cmp
sbb
inc
push
ja
pop
cs
and
inc
int
mov
sti
dec
xchg
iret
pusha
sbb
jmp
movsb
cltd
sbb
notb
movsb
xchg
das
adc
mov
arpl
nop
or
inc
sbb
rorb
pop
adc
cli
repnz
push
xchg
ficoms
mov
rcr
sub
mov
sub
mov
sub
and
cmpsl
icebp
and
je
imul
push
sbb
lods
xchg
dec
les
mov
shrb
out
and
cmpsl
out
dec
std
arpl
inc
sub
mov
fsubrp
stos
push
imul
cmp
or
test
pop
cltd
mov
cmpsb
lock
gs
cmovbe
je
int3
and
and
stc
sbb
mov
out
aas
mov
scas
into
xlat
stos
xor
fdivrl
andb
add
sbbb
lcall
xchg
and
test
hlt
sahf
lahf
mov
adcb
inc
iret
xlat
cs
sub
mov
lret
add
rorl
or
aaa
in
out
clc
mov
jo
mov
das
jbe
bound
nop
add
in
xchg
outsl
adc
mov
cwtl
jge
clc
sbb
ret
xchg
xchg
add
fstpt
lds
into
dec
int3
call
outsl
aam
int
outsb
push
and
rclb
dec
mov
outsl
dec
xor
inc
mov
add
mov
call
cld
iret
mov
pushf
mov
loope
into
adc
ja
sbb
add
mov
cmp
mov
in
std
cltd
mov
push
sbb
mov
pop
out
sahf
mov
fwait
fwait
and
in
pusha
rcll
sbb
push
lds
jbe
and
xchg
call
cmp
mov
fadd
fdiv
add
and
mov
xchg
xor
or
insl
cwtl
cmpsb
dec
cltd
pop
pop
scas
dec
stos
jne
imul
jne
push
pushf
or
add
mov
mov
xchg
or
cmp
cmp
das
insl
mov
outsb
rcrl
add
dec
or
mov
in
sahf
in
xchg
sbb
ret
js
shlb
cltd
pop
leave
xchg
sahf
mov
sub
jb
aam
mov
cmpsl
mov
cmpl
mov
adc
xchg
das
sub
aam
sbb
lret
insb
ss
les
sbb
imul
popf
and
popf
rol
or
loop
stos
push
push
add
sub
cmp
jns
ret
inc
sbb
fwait
dec
lods
push
or
jmp
mov
pop
ja
or
repnz
stos
sub
les
in
pop
adc
imul
adc
out
adc
jb
mov
repnz
and
push
gs
das
lock
mov
xchg
sarb
mov
dec
mov
mov
sbb
or
cs
lods
adc
dec
adc
dec
enter
aas
int
mov
and
mov
pop
sbb
sbbb
ljmp
fs
jg,pn
mov
jecxz
pop
sbb
xor
bound
scas
in
test
sbb
jb
ds
jnp
push
add
jo
jb
push
sub
or
xchg
add
test
mov
push
fcomps
ret
incl
lret
xlat
lret
or
orb
test
int
aaa
testl
cs
gs
sbb
mov
fs
cmp
pop
test
cmp
out
jo
inc
mov
xchg
enter
je
mov
xchg
sub
fstps
cs
pop
inc
inc
adc
pop
and
push
or
dec
cmpsl
inc
or
jb
push
jbe
daa
outsl
xchg
mov
arpl
pop
aam
je
sub
int
sahf
xlat
xchg
scas
iret
orb
sub
add
xor
jl
out
jp
pop
add
and
xchg
fdivrs
fdivs
in
sbb
out
inc
fadd
testb
cld
and
xor
mov
fistps
or
jns
ja
aam
dec
fmull
mov
dec
sahf
push
les
movsl
inc
mov
pop
mov
dec
mov
adc
push
inc
call
xlat
repz
es
push
out
negb
nop
sub
push
mov
and
orb
inc
jecxz
cltd
clc
cs
rcll
mov
xchg
out
repz
js
xor
ja
lret
test
fcmovu
orb
insl
inc
je
callw
xor
test
xor
mov
std
and
bound
insl
lock
push
pusha
les
stos
subb
add
mov
sti
dec
pop
jne
sbb
dec
outsl
sar
xchg
inc
iret
data16
mov
jnp
add
arpl
mov
push
and
stos
loopne
leave
xor
sub
out
out
mov
xorb
jl
in
lods
outsb
scas
xchg
push
or
call
pop
pop
je
jge
cmpsb
scas
sbb
and
mov
cmpsl
push
pop
jo
sub
jno
dec
addr16
push
jecxz
in
pop
dec
pop
sub
lds
mov
vmulpd
push
ficompl
xor
lcall
test
shlb
xor
push
lcall
adc
xor
add
fdivs
in
popf
dec
cwtl
and
mov
adc
ret
loop
jp
jmp
xchg
lods
xchg
pop
push
scas
pop
mov
pop
lds
hlt
inc
out
push
sub
jmp
jecxz
pop
out
cld
mul
jnp
push
push
mulb
mov
clc
mov
xchg
jnp
pop
hlt
mov
imul
add
jae
data16
xchg
fisttps
mov
fstpt
pop
jo
shrb
mov
out
repnz
sbb
xchg
and
mov
cmp
shlb
call
add
mov
and
daa
ret
jmp
out
aam
dec
in
aad
pop
movsl
xor
push
jg
push
ret
es
cmpsl
mov
dec
cmp
adc
add
popf
sbb
enter
pop
out
mov
jb
xor
ljmp
popf
int3
arpl
scas
clc
test
aas
and
repnz
cmpsl
fst
stc
sub
fmuls
loop
mov
lods
dec
adc
ss
adc
push
xrelease
int
lret
sbb
in
out
clc
jl
movsl
push
gs
fistl
xlat
outsb
test
mov
ficompl
xor
push
into
mov
ret
scas
inc
push
rcl
jp
int
test
lret
testl
jmp
or
sti
or
push
add
and
les
adc
xchg
sub
pushl
add
xchg
fldcw
test
sub
pop
ds
sarl
nop
mov
cwtl
ficompl
js
lea
ror
in
and
push
aas
and
mov
mov
add
and
jb
outsl
insl
inc
daa
shrl
ret
push
sub
lea
add
jle
scas
inc
push
lahf
push
fdivr
es
pusha
pop
xor
out
xchg
adc
add
lds
ljmp
ret
lods
inc
mov
scas
push
jb
cmpsl
daa
mov
movsb
je
arpl
sti
cmpsl
ds
sub
mov
or
jnp
leavew
test
flds
jmp
aad
jmp
sub
dec
in
fs
add
push
hlt
lcall
lret
jle
jae
ja
sub
test
mov
clc
std
daa
lock
xchg
jg
ret
mov
addr16
sub
sbb
dec
loopne
mov
jns
cmp
xor
test
lahf
imul
cmpsb
cmp
add
xor
or
push
aad
cmp
xchg
sbbl
outsb
push
fwait
xor
repz
push
loope
xchg
pop
add
sbb
cmpb
popf
fnstcw
sbb
mov
arpl
mov
sub
inc
dec
lea
leave
mov
mov
xchg
pop
inc
pop
cmovno
xor
jns
pop
sahf
clc
js
add
in
fwait
pop
mov
push
jecxz
mov
fistpl
mov
mov
sub
aam
cmpsl
rcll
arpl
mov
xchg
cmp
dec
mov
jb
mov
sub
mov
fisubs
mov
scas
cs
mov
jmp
cmp
xor
fsubrl
out
push
or
out
mov
add
mov
ljmp
lret
xor
addl
frstor
enter
movsb
rclb
in
mov
out
daa
or
loopne
and
mov
add
ljmp
adc
addb
mov
sub
sti
fsubrs
test
mov
or
dec
add
mov
lahf
xlat
icebp
add
push
lods
dec
and
jg
inc
xor
xor
loop
pop
push
shlb
scas
lss
out
popf
push
cmpl
mov
aam
push
xchg
fidivs
jb
jp
mov
xchg
jmp
ficompl
push
mov
pushf
stc
mov
ss
insl
sub
cmc
lods
mov
sbb
aaa
add
shll
pusha
push
mov
mov
jae
jp
pop
sbb
and
mov
lahf
dec
sub
add
cmpsb
imul
sbb
mov
insb
mov
xlat
in
or
push
jecxz
sti
mov
adc
fsubrs
cmp
push
jmp
xchg
mov
test
mov
cmp
repz
cltd
jns
jecxz
sahf
lcall
ret
or
scas
mov
mov
and
mulb
and
push
jno
xchg
mov
jb
push
aas
test
cmp
nop
sub
mov
movsl
push
fiaddl
inc
sbb
lea
jnp
adc
cs
push
push
sbb
xchg
sub
cmp
stos
pusha
decl
xor
cbtw
xor
push
mov
out
and
add
dec
decl
push
mov
ret
jns
jge
pop
dec
iret
sahf
ljmp
xor
dec
cmc
mov
ds
hlt
mov
std
data16
mov
cmp
or
daa
jg
sahf
sbb
sbb
pop
jg
cmp
icebp
insb
sbb
mov
jecxz
xchg
sub
int3
dec
and
push
loopne
xor
mov
push
inc
mov
xchg
jbe
pop
test
sbb
shl
mov
and
and
dec
imul
jno
pop
mov
aaa
mov
hlt
jg
mov
shl
in
cmc
push
icebp
pop
icebp
es
int
adc
lods
add
test
popf
pop
repnz
popa
jns
lret
mov
add
icebp
push
icebp
cmp
enter
es
fcmovnbe
subl
xor
in
es
fsubp
mov
sub
inc
fldt
iret
cmp
mov
faddl
inc
sbb
sbb
orl
addr16
pop
add
sub
lahf
stos
xor
sub
sub
rcl
dec
fdivl
mov
es
daa
and
gs
dec
pop
insb
dec
inc
adc
mov
and
rcl
fwait
xacquire
jnp
sub
cmpsb
sub
push
mov
or
and
stos
push
xor
cmp
cld
test
lods
push
jp
or
xor
or
mov
and
out
sub
in
or
outsb
andl
enter
push
mov
shrl
lahf
xor
iret
mov
test
rorb
adc
inc
fs
scas
push
scas
add
les
inc
push
jo
test
rcrb
outsl
push
movsl
xchg
call
add
outsb
add
es
testl
shl
mov
out
mov
ss
test
sub
test
mov
pop
rolb
mov
lock
xor
cli
jne
jecxz
cmc
xlat
lods
std
mov
dec
std
sbbl
int3
std
popa
jg
or
cltd
xchg
xor
xor
xchg
ds
int3
push
mov
jge
dec
sbb
repnz
sahf
pop
add
jns
add
cld
push
push
gs
aam
pop
lock
in
ja
pop
sub
push
sub
push
loopne
insb
sbb
jne
xor
xchg
sbb
sbb
xor
std
or
repz
test
adc
inc
inc
fistl
lods
dec
xlat
push
jmp
inc
out
and
and
stc
rcrl
cmp
add
fdivl
dec
lods
dec
js
or
adc
jne
mov
add
pop
adc
lret
orl
sbb
jnp
sub
pop
sti
movsb
dec
insb
mov
sub
out
inc
stos
pop
or
in
das
xchg
shrb
movsb
cmp
dec
add
ret
mov
mov
movsl
ljmp
xor
loop
cmp
loop
mov
sbb
cmp
movsb
ja
xchg
adc
jae
pop
mov
scas
lock
mov
mov
sub
mov
sub
bound
cmpsl
and
scas
sbb
pushf
ret
shll
or
jnp
fisubrl
cmp
es
mov
imul
in
mov
pop
rcrl
add
xchg
xor
lret
push
mov
xor
ja
ss
sti
andl
lahf
in
stos
xchg
cmp
add
lret
xchg
loope
fdivs
shll
pop
xchg
dec
dec
push
leave
add
ret
movsl
dec
and
xchg
in
stos
fwait
cmp
insb
dec
fadd
clc
pop
add
mov
jo
mov
rcrl
lcall
shlb
sbb
and
addr16
xchg
cmp
nop
in
push
cmp
pop
xor
lahf
cmp
in
mov
and
mov
pop
ds
pop
sbb
mov
out
inc
aam
stos
push
insb
leave
and
xor
dec
cmpsl
imul
push
icebp
mov
sub
call
cs
xchg
inc
jmp
or
cmp
ret
adc
push
mov
jle
cmp
aam
adc
pop
rclb
push
dec
cld
push
shlb
je
jmp
xchg
js
dec
cmp
xorl
pop
inc
pop
aam
scas
dec
sar
pop
das
loop
imul
mov
imul
je
push
xor
shlb
pop
push
dec
jbe
clc
daa
add
test
loopne
or
rcl
fcomi
pop
xor
cltd
test
or
into
mov
mov
inc
imul
insl
or
dec
dec
sbb
ret
adc
pop
mov
in
lock
das
mov
fwait
mov
das
filds
fwait
repz
loopne
shlb
lock
mov
and
inc
cli
out
fsubr
inc
es
xchg
xchg
inc
orb
dec
sbbb
test
lock
cmpsb
int
fidivrl
mov
insl
sti
stc
adc
mov
and
cmp
xchg
dec
jecxz
or
daa
rcll
ds
pop
fisubl
inc
dec
sbb
sbb
out
push
mov
jp
movsl
xchg
mov
mov
iret
mov
ret
mov
shlb
mov
mov
pop
jo
mov
jns
adc
jp
inc
push
out
bound
mov
movsb
psllw
testl
stc
jmp
cmp
or
mov
cld
jecxz
push
imul
mov
insl
mov
push
sub
sbb
and
sub
call
jbe
outsb
pop
aam
jge
js
cmc
negb
js
popa
cmc
shll
or
push
sarb
popf
stos
outsb
push
mov
loop
pop
jge
or
sahf
jnp
mov
add
outsb
std
dec
sub
rcrl
xor
push
mov
dec
imul
pop
dec
or
movb
jle
adc
dec
aad
icebp
xor
out
cltd
lret
sbb
and
push
faddp
cmp
mov
int
call
xor
push
sub
loope
cld
mov
js
xchg
xor
add
pop
es
cli
cmp
pop
test
cmpsb
and
test
xor
xchg
mov
xchg
aas
loop
aad
pop
pop
aam
imul
sbb
mov
pop
or
mov
sbb
xchg
fmuls
add
cmpsb
mov
lret
in
insl
jecxz
cmp
xchg
xor
mov
call
orl
and
adc
dec
cli
xor
jg
mov
ss
loop
fmulp
and
rorl
add
nopl
dec
pop
mov
out
xchg
rolb
jnp
adc
pop
test
cmpsb
jmp
xor
test
jne
pop
cmp
aaa
cld
lcall
push
xor
xchg
adc
sbb
std
dec
out
lock
jmp
ret
sub
shl
xchg
lea
cmp
idivb
jl
sbb
jecxz
xor
or
push
cli
jnp
and
scas
adc
pop
sbb
push
or
xor
add
call
cmp
sub
outsl
adc
mov
mov
push
dec
push
outsb
jbe
idivl
aam
popa
pop
add
test
jmp
lock
lcall
cmp
pop
in
mov
cld
xchg
jecxz
and
fidivl
cmp
dec
inc
xchg
out
daa
mov
and
fs
adcl
dec
rolb
xchg
cmpsl
sbb
push
loop
fwait
bnd
push
sbb
je
and
mov
insb
mov
adc
stos
pop
cwtl
sbb
outsb
out
test
pop
jns
xchg
jl
mov
movsl
adc
pop
int3
jnp
lock
mov
xor
call
out
inc
sbb
enter
sub
lret
dec
cmc
enter
lods
sti
pushf
fisubrs
dec
pop
mov
push
jge
add
xchg
das
int3
inc
cltd
sbb
push
out
xlat
and
lock
mov
sub
or
mov
loopne
cmp
mov
or
subl
add
sbb
lods
adc
jmp
mov
jnp
mov
mov
xchg
roll
js
mov
push
or
push
jp
or
hlt
mov
adc
stos
test
mov
jne
pop
sarb
cmp
insl
in
adc
pop
and
cmp
jb
dec
and
xchg
jae
test
lods
push
idivl
fidivs
xchg
lcall
in
ds
arpl
hlt
insb
add
push
mov
mov
dec
mov
inc
lret
std
ds
into
adc
into
cmp
jecxz
loopne
aas
mov
or
xchg
lock
mov
lcall
fmulp
pop
adc
roll
mov
adc
dec
arpl
mov
int
lret
mov
push
shr
test
mov
out
mov
into
lods
mov
lods
adc
out
or
cs
insb
aad
or
loope
iret
pushw
stos
xchg
out
push
ja
test
adc
js
lock
pop
or
mov
mov
jns
cli
imul
loope
and
mov
dec
in
out
mov
cmpxchg
imul
sub
add
in
pop
jb
lds
dec
jl
and
and
pop
cmp
adc
cmc
gs
inc
loop
mov
jnp
out
out
mov
sarl
iret
loop
hlt
cmpsb
lock
sarl
cltd
add
lret
push
repz
addl
xor
fucomp
das
xchg
add
pop
xchg
jns
cmp
sbb
xor
sbbb
loop
ds
jmp
stos
xor
xchg
test
in
mov
sub
out
bound
scas
mov
xchg
cmpsl
sub
movsb
jne
dec
xor
sub
cmp
daa
adc
mov
js
sbb
jecxz
rclb
dec
push
mov
push
fistpll
cltd
scas
push
loopne
dec
cmpsl
mov
andl
sub
clc
or
fsubrl
xchg
inc
jg
add
add
cmpsb
jb
pusha
xchg
sbb
push
nop
mov
gs
arpl
fnstenv
imul
jle
into
sub
xor
fimull
add
daa
sbb
mov
pusha
ja
xchg
add
pushf
inc
mov
mov
mov
xor
cmpsl
push
cwtl
and
pushf
scas
xor
adc
adc
outsb
inc
mov
scas
cs
ret
adc
int
iret
push
mov
fnstenv
sub
sub
leave
stos
inc
sbb
enter
push
fisubs
sahf
mov
and
shlb
dec
movsb
push
mov
sub
push
sahf
jo
mov
push
ja
int
into
sbb
push
outsb
pop
sahf
sbb
jp
mov
and
sbb
test
push
inc
insl
add
ror
adc
mov
je
xchg
aam
cmc
or
jl
stos
aaa
sbb
cmp
dec
push
data16
into
add
and
lret
lret
cmpsb
aaa
roll
pop
pop
mov
out
jge
jnp
clc
je
mov
sbb
and
lret
es
pop
push
sbb
andl
mov
push
aad
lds
out
sbb
push
ljmp
lret
cs
movsl
enter
dec
and
rol
test
mov
cmpsb
insb
ret
jecxz
or
push
jno
add
outsl
cmp
mov
andb
mov
ret
outsl
lret
ror
pop
adc
bound
rorb
inc
pop
loop,pt
adc
add
in
int3
ret
fidivs
insb
add
lods
sbbl
in
aas
pop
push
adc
mov
dec
clc
push
in
jg
xlat
mov
shl
ret
in
into
ljmp
sub
adc
sub
sub
sbb
mov
and
xchg
jp
pop
inc
pop
nop
push
add
dec
icebp
into
adc
out
fwait
xor
or
sbb
ret
mov
sub
dec
mov
lock
and
dec
loopne
xor
daa
xchg
imulb
stc
push
call
push
push
jmp
pop
daa
jg
pop
inc
insl
sahf
xor
fldenv
insb
pop
std
push
out
sbb
xor
hlt
mov
xor
popf
das
ds
out
movsb
inc
fidivrl
cmp
sti
lret
rcrb
push
lcall
scas
outsl
stos
repz
daa
push
cmc
int3
mov
dec
pop
lock
test
and
inc
jle
push
lods
lcall
or
pop
sbb
sbb
lock
cmpb
sub
adc
mov
cmp
out
dec
cmc
inc
roll
js
add
add
push
out
ljmp
ljmp
jge
out
mov
xor
addr16
ljmp
adc
dec
xlat
fsubrl
xor
or
fdivrs
mov
inc
xor
xor
lcall
cmpb
ret
arpl
xchg
in
and
mov
stc
testl
stc
xchg
jecxz
sub
mov
mov
fldcw
fisttps
pop
test
fcmove
sbb
push
mov
and
aaa
jg
jno
gs
jbe
adc
adc
add
sub
test
mov
mov
xlat
xor
or
jge
mov
cld
xchg
cmp
mov
or
sbb
js
sbb
pop
fdivrl
sti
int
hlt
xlat
or
sbbb
and
cmc
cltd
into
mov
inc
shl
out
sbb
out
stos
in
mov
cs
cli
xor
push
jmp
loopne
bound
and
jle
adc
adc
cmp
stc
lret
xor
movsl
subb
fldt
mov
pusha
aaa
pop
outsl
les
push
lcall
or
jno
ja
inc
inc
add
lea
xor
fdivp
adc
sbbl
lock
xchg
pop
rcrl
sub
xchg
js
jo
sbb
insl
mov
scas
cmp
aam
jp
inc
imul
xor
outsb
jl
imul
int3
and
mov
stos
add
push
mov
sti
xlat
mov
jae
xchg
or
pop
insl
xor
pop
jecxz
cmp
in
filds
mov
add
push
mov
xor
xchg
dec
loopne
mov
clc
stos
mov
mov
jg
repnz
push
arpl
andl
test
out
xchg
sbb
push
mov
mov
loope
xor
fcoms
ss
pop
aaa
push
lcall
or
lret
xor
jae
imul
vmovsldup
pop
js
pop
rcr
push
push
push
mov
cwtl
mov
mov
in
mov
bound
xchg
rcl
cwtl
add
mov
loop
pop
xchg
lahf
or
es
sahf
push
shlb
call
mov
sbb
mov
xor
test
jl
xor
lods
loopne
rclb
mov
and
jmp
dec
test
push
out
outsl
imull
ret
jbe
jbe
cmp
cltd
jge
or
in
es
pop
out
cli
mov
dec
fistpll
and
inc
hlt
fidivrl
push
icebp
dec
mov
stc
or
jno
ficoml
mov
mov
adc
sbb
icebp
pop
cmp
xchg
outsb
xchg
rorl
movsb
shr
fstl
sbb
int
push
into
jno
jge,pt
pop
lcall
xor
adc
adc
pop
dec
lods
push
cmp
mov
mov
mov
fwait
loopne
lea
rol
jae
ret
dec
sahf
fmulp
data16
inc
lret
sbb
jmp
add
dec
sub
push
fcmovne
sbb
mov
push
mov
mov
ret
xchg
sub
mov
js
inc
mov
and
jo
jb
sub
lcall
push
popf
cld
cmc
jo
adc
iret
push
loope
sbb
pop
add
mov
or
xchg
sub
jg
mov
lods
adc
and
dec
pop
mov
in
mov
adc
nop
shrl
mov
jb
add
ret
in
and
enter
xchg
fs
fisubl
jecxz
jnp
in
dec
call
test
and
jmp
mov
clc
mul
sub
and
sub
outsl
xor
incb
shll
les
cwtl
cmpl
jmp
into
mov
leave
inc
fs
dec
lret
xor
cld
mov
in
add
leave
push
lret
pop
aaa
lret
push
cli
insl
sub
xchg
loop
les
sbb
mov
mov
xchg
mov
sub
push
jno
out
pop
pop
xlat
adc
adc
sub
jnp
push
enter
lret
repz
clc
dec
push
sbbl
in
sub
adc
xchg
int3
lods
push
xor
pop
inc
inc
fcmovb
maxss
dec
out
sti
jle
mov
fildll
inc
popa
std
jecxz
aaa
cmp
es
push
or
out
pushf
dec
in
dec
mov
dec
jmp
dec
mov
mov
out
lret
les
cld
adc
test
sahf
out
dec
or
mov
adc
movsl
ret
dec
aaa
pop
loope
mov
jecxz
lods
xchg
and
sbb
push
xor
arpl
sbbl
sbb
aaa
jae
xchg
sub
add
in
out
dec
pop
repnz
addr16
push
lahf
or
ljmp
shl
add
push
out
mov
mov
push
cmpsb
arpl
jae
jno
nop
mov
adc
xlat
inc
flds
pop
repz
mov
cmp
pop
int3
inc
cwtl
andl
pusha
jp
push
rcrb
shr
lcall
pop
mov
jne
sub
cwtl
dec
cld
leave
jp
fidivs
jge
pop
movhps
sbb
ljmp
insl
mov
fisubrl
ror
sbb
mov
mov
add
xor
and
cmp
pop
or
sbb
mov
adc
fidivl
or
sub
mov
pop
mov
scas
insl
add
jb
sub
mov
into
lea
mov
mov
xor
mov
in
push
push
int
dec
movsb
inc
std
adc
pusha
sbb
dec
xchg
fldcw
ss
adc
mov
aaa
mov
insl
rolb
loopnew
mov
xlat
sub
fst
clc
jae
sub
sbbl
mov
fdivl
mov
mov
leave
xchg
lret
ljmp
cmp
mov
or
jecxz
xor
or
mov
mov
imul
imul
sub
xor
adc
or
dec
out
popa
subl
out
lods
add
jl
sub
mov
mov
cmc
fisttpll
and
adc
pop
insl
test
lcall
outsb
fwait
pop
in
testl
imulb
pusha
repnz
xorl
jb
hlt
outsl
mov
inc
cld
adc
inc
xlat
dec
or
or
in
int3
cmp
pop
lcall
xlat
jne
jo
or
xchg
add
movsl
repz
adc
repnz
jp
testl
and
push
incl
shlb
push
pop
push
fldcw
pop
push
inc
sub
adc
clc
mov
rorl
scas
add
pop
xchg
arpl
pop
adc
int
mov
push
mov
fcoms
pop
out
mov
fdivs
nop
repnz
stos
push
test
lret
cmpsl
xchg
movl
js
mov
jle
ljmp
inc
and
or
stos
enter
sbb
cld
push
mov
shr
or
int3
icebp
pop
loopne
mov
cmp
xchg
stos
cmpl
pushf
lods
inc
into
dec
out
popa
cmp
clc
inc
adc
xor
and
cli
xor
and
ja
stos
xchg
sub
cmp
sub
push
mov
xor
inc
and
inc
push
mov
or
sbb
orb
pop
add
jno
lods
inc
mov
add
popl
pushf
aam
test
pop
adc
dec
enter
add
push
sbb
outsb
jns
fcmovb
subl
mov
test
adc
mulb
jmp
jp
aaa
in
js
adc
cwtl
xor
pop
cwtl
pop
scas
cmpb
iret
mov
inc
mov
mov
cmc
or
stos
mov
mov
sbb
xor
pop
jl
dec
cld
test
and
push
xor
pop
xchg
sbb
jle
dec
ja
or
inc
mov
jmp
xchg
popa
push
jbe
xchg
lret
push
add
xor
lcall
push
mov
fmuls
rep
outsb
mov
std
jo
mov
pop
cmp
repz
cs
iret
adc
leave
lock
and
inc
mov
cli
call
cmp
jb
outsl
add
js
add
pop
mov
js
sub
push
add
push
in
add
add
xchg
push
pop
push
call
scas
std
outsl
outsl
and
xor
jns
ss
std
jle
js
cli
popf
push
adc
cmpxchg
xor
jmp
lret
cwtl
test
mov
sbb
pop
pop
rcrb
out
cld
popf
sbb
inc
into
sub
aad
dec
mov
cmpsb
outsb
leave
pop
mov
xchg
mov
xchg
cs
jmp
test
dec
jle
in
mov
cs
pop
insb
mov
test
dec
leave
adc
clc
xor
add
sbb
bound
or
jge
andb
and
xor
pusha
or
mov
cmp
sub
shlb
xchg
fnsave
int
mov
movsl
cmp
adc
jecxz
std
ds
stos
pop
dec
in
dec
xlat
pop
push
pop
insb
jg
sub
add
aaa
mov
push
pop
aam
bound
mov
adc
shll
mov
js
pop
xorl
xor
xchg
mov
cld
xchg
xlat
adcl
in
lcall
out
cpuid
mov
lods
mov
adc
int3
rcr
jl
out
cli
fsubl
sub
les
cmc
and
mov
inc
sti
sub
mov
or
aaa
fwait
lret
fidivs
int3
rorb
or
adc
or
shlb
rorb
enter
dec
std
jbe
cmpsl
inc
shrb
xor
push
pusha
jmp
icebp
fsts
cltd
pop
and
jne
sub
lds
aad
movsl
incb
push
or
xchg
sub
sub
aaa
fcoml
out
cmp
lahf
mov
outsl
fwait
add
mov
out
xor
clc
jnp
mov
xchg
xchg
gs
loop
lods
mov
mov
test
and
push
flds
xor
push
mov
je
push
and
adc
xchg
sbb
sbbl
fisubs
mov
or
fcmove
pop
pop
mul
jo
outsb
dec
add
orl
ja
cmpsb
push
push
sbb
es
je
enter
pop
aad
push
out
push
ja
jno
fwait
mov
out
lods
jg
push
sbbb
inc
sahf
inc
leave
insb
xchg
or
or
xor
fsubs
in
pop
xchg
xor
sahf
clc
int3
and
je,pn
and
push
icebp
dec
leave
enter
pop
rcrb
out
notl
sub
out
push
or
aam
mov
mov
mov
or
je
ror
fcoml
rcrb
lahf
xor
cmpb
mov
mov
push
jno
fstl
mov
ljmp
jo
in
faddl
aad
adcb
add
dec
sahf
ss
push
adc
mov
divl
or
mov
jle
mov
in
ret
hlt
mov
add
adc
aaa
sbb
cmc
cmp
cmp
cmp
ljmp
cmp
xor
sbb
aaa
aas
mov
mov
mov
or
aas
mov
inc
test
decl
mov
pushf
subl
sti
push
xor
fildl
mov
push
leave
sbb
stos
ret
nop
add
xchg
inc
js
jge
push
cmpb
aaa
movsl
js
pop
cmpsb
sub
mov
jae
rcrl
mov
xchg
mov
push
inc
mov
sbb
jo
int3
in
xchg
push
out
div
addr16
or
stos
xchg
sub
out
mov
sub
sarl
xchg
decb
cmc
ds
or
jmp
ret
pop
adc
push
mov
lds
hlt
pop
sbb
les
pop
dec
jecxz
mov
pop
icebp
jne
jne
and
push
inc
sti
mov
nop
daa
mov
mov
ret
cmp
cmp
outsb
in
cltd
jb
xchg
jl
ljmp
push
out
cwtl
mov
das
push
mov
shll
push
pop
adc
in
jnp
fistpl
and
sti
push
mov
push
sti
push
movsl
mov
fmuls
pop
jg
imul
mov
pusha
aad
adc
ss
xor
adcl
lcall
mov
mov
out
orl
stc
sub
pop
or
jmp
mov
push
cmp
in
loopne
inc
pushf
push
dec
iret
cmp
mov
dec
cmpsb
mov
sbb
xchg
lods
adc
mov
pushf
jae
fdivl
xchg
mov
int3
push
icebp
adc
cmp
inc
popf
xchg
cmp
pop
popf
mov
std
test
cmpsb
push
mov
jge
mov
xchg
enter
xchg
scas
inc
scas
pop
icebp
pop
fwait
sbbl
imul
clc
mov
xor
or
outsl
mov
push
call
enter
adc
jno
dec
pop
outsl
xor
pop
jp
pop
add
lods
fnstenv
push
lahf
retw
iret
idivl
sub
jb
jge
repz
or
jge
idivl
xchg
movsb
test
out
fmul
jne
rcrl
xchg
aaa
das
in
mov
lea
mov
rol
cld
jmp
popf
pushf
cmp
jnp
cmp
sbb
or
ret
testl
push
repnz
repnz
ret
lea
jne
adc
cmp
roll
pop
mov
mov
movsl
shrb
pop
ljmp
ficomps
imul
adc
mov
jmp
sub
imul
push
rolb
test
or
imul
pop
lahf
xchg
test
aas
xchg
xchg
repz
jecxz
out
xchg
clc
adc
aad
pop
and
mov
mov
rclb
out
adc
push
in
adcl
insb
jg
mov
jecxz
jecxz
aas
dec
cmp
pop
cli
inc
dec
lahf
cli
sbb
pop
and
cld
jbe
push
sub
dec
jbe
jbe
inc
xor
dec
mov
imul
jge
pop
mov
pop
in
mov
lds
ds
and
rcrb
icebp
or
out
adc
xchg
icebp
insb
sbb
aam
int3
mov
cmpsb
mov
jb
popf
mov
rcll
repnz
inc
push
mov
aaa
lea
cmpsl
decb
daa
fs
inc
and
sbb
and
pop
cmp
inc
sbb
cwtl
rorb
aam
insb
inc
cs
inc
call
nop
mov
insb
add
sub
pop
or
fistpl
push
aaa
lcall
pop
shll
test
lods
aam
iret
push
int3
pop
sbb
inc
fs
push
or
les
push
es
pop
jne
into
or
icebp
cmp
shll
mov
pop
je
or
jo
stc
xchg
jns
lods
stos
divl
hlt
push
imul
je
jmp
enter
mov
or
cmp
xor
sbb
cltd
insb
mov
mov
or
dec
inc
daa
mov
stc
xor
push
mov
mov
addl
mov
lret
jp
mov
mov
xchg
es
fs
or
sub
cmp
dec
sub
sub
pop
jbe
int
xchg
vpsadbw
movsl
test
xor
cld
fwait
sbb
sub
adc
mov
inc
fs
out
jge
xor
inc
mov
pop
lea
enter
addl
aaa
xchg
lret
aad
jb
mov
scas
jb
xchg
pop
pop
ja
js
mov
xor
mov
call
fimull
lods
mov
mov
out
addl
outsl
xchg
add
ja
adcl
xor
jbe
push
fldenv
mov
mov
ljmp
das
cs
jmp
xchg
adc
and
aas
outsb
sub
push
nop
cli
fnstsw
sub
mov
into
cmp
xor
dec
lods
mov
xlat
and
mov
mov
ljmp
cmpsl
xchg
sub
mov
mov
mov
sti
dec
imul
shlb
rorb
imul
shll
add
or
pop
cmp
incb
in
inc
inc
lods
das
add
fstpt
aam
jno
add
loopne
adc
dec
and
xor
mov
lock
sub
pop
fdivl
imul
adc
lret
bound
cmpsl
pop
int3
adc
mov
and
pop
add
or
push
repz
and
lret
add
add
push
popf
cmc
fs
mov
icebp
lret
xchg
push
ret
or
test
mov
adc
xchg
or
test
lahf
cmpsb
and
sub
xor
xchg
jae
xchg
stc
into
inc
rolb
mov
imulb
mov
jno
je
and
je
in
sbb
jecxz
add
andl
leave
insb
or
inc
into
cmpsb
cli
out
pop
sbb
gs
xchg
mov
movsb
cmpsl
loop
push
int
push
icebp
push
out
cmp
pop
push
lods
add
ror
and
mov
outsb
push
pop
dec
jg
adc
mov
mov
xor
xchg
aas
lret
pop
mov
movsb
jns
adc
jmp
and
cltd
in
in
push
out
ljmp
mov
dec
pop
icebp
outsl
outsl
andl
movsb
sub
sbb
and
pop
add
lret
test
pop
insb
icebp
adc
rcr
and
popa
insl
das
mov
lock
push
pop
cmc
jno
xlat
jne
cmc
xchg
push
mov
fdivrs
jl
lods
jae
test
aam
or
xchg
adc
pop
call
jno
mov
inc
pop
adc
xlat
ljmp
test
imul
lea
adc
jns
enter
mov
cld
addr16
cmpsb
push
popa
xor
mov
jge
and
ret
sbb
popa
mov
adc
sbbl
xchg
sub
xor
inc
negl
fnstsw
fwait
lods
lahf
lods
xchg
fdivl
add
xor
pop
aaa
ljmp
call
inc
pop
sbb
add
js
cmp
ret
insl
ds
icebp
out
fiaddl
fisttps
mov
insb
pop
insb
imul
mov
adc
push
insb
out
lcall
push
rorb
iret
lret
pop
outsb
insb
fstpt
sbb
add
mov
mov
push
outsl
cmp
xchg
and
ss
pop
adc
jnp
and
cmp
lds
shlb
inc
push
rolb
int
jmp
in
xor
add
push
jb
or
ss
mov
inc
pop
jns
mov
call
fsts
cmp
push
rcrb
popf
sub
mov
fs
ret
jmpw
fisubrs
dec
mov
aas
mov
push
movsl
icebp
xor
imul
jo
cmp
les
fcomps
ds
or
das
xor
pop
xor
mov
into
dec
pop
fsubs
or
loop
cmp
adc
xchg
push
das
repnz
pop
in
addb
mov
lds
and
rorb
xchg
pop
sub
pop
sub
and
dec
dec
add
int3
mov
ret
inc
test
lret
mov
imul
jb
lea
push
mov
mov
das
xchg
xchg
insl
dec
or
shrb
and
stos
jns
ss
sbb
add
out
pop
call
lea
xchg
lea
lds
mov
mov
mov
pop
test
jno
test
mov
rcll
mov
sub
mov
stc
mov
mov
out
fsubs
lret
fbld
add
jp
push
lods
mov
dec
es
movsb
ds
sbb
and
xlat
fiaddl
pop
insl
xor
pop
shl
test
adc
sub
mov
pop
rorb
bnd
or
push
dec
outsb
and
mov
sub
sub
adc
mov
xchg
scas
fisubrs
push
inc
mov
dec
xlat
xchg
subb
ja
mov
popa
add
fwait
inc
iret
es
push
adc
lods
ss
fcomps
lahf
rdtsc
aam
popa
loopne
in
push
pop
dec
rcr
insl
push
cli
ret
in
add
icebp
sbb
and
or
cmpsb
xorl
mov
jno
add
cmp
rcrb
sub
in
jne
xlat
sub
dec
out
sbb
jo
enter
jmp
ss
shr
dec
iret
inc
ffree
rcll
dec
dec
repnz
sub
scas
adc
add
mov
mov
arpl
mov
jae
xor
in
jnp
fdiv
scas
mov
mov
cmp
inc
inc
push
shr
stos
pop
int3
mov
insl
xor
jb
adcb
mov
add
xchg
push
out
pop
mov
sbb
icebp
movsl
pop
or
mov
or
jno
jns
fwait
and
shlb
sub
adc
add
mov
adc
out
test
adc
repnz
dec
cmc
cmp
pop
mov
fcomi
insb
leave
in
in
test
inc
negl
jb
mov
pop
mov
stos
mov
pop
out
neg
hlt
dec
test
jle
sub
aad
leave
jl
add
outsb
je
push
outsl
xorb
sub
aas
sub
jo
adc
pop
shrb
push
out
dec
stos
cmp
jge
pop
hlt
movsl
cld
clc
call
repnz
xor
hlt
lods
mov
pop
xchg
push
inc
inc
jg
jae
insb
mov
jge
call
jg
and
insl
pop
std
xchg
aaa
push
leave
push
loopne
sbb
test
fwait
push
out
sbb
pop
mov
push
icebp
aad
cmp
inc
sbb
inc
push
jecxz
dec
xchg
xor
jbe
movsb
mov
les
xchg
out
clc
fs
jg
jo
pushf
sub
cmpl
dec
mov
pop
push
sub
call
fs
push
or
sahf
xor
sbbl
test
std
mov
cmpsb
ret
les
adc
or
inc
push
xchg
clc
fxch
push
xchg
lods
test
adc
and
jp
mov
sbb
mov
adcl
mov
dec
test
lea
inc
addb
pop
mov
test
inc
sub
fs
adcb
mov
lock
push
dec
jecxz
repnz
mov
stc
aas
sbb
and
outsb
pop
out
sub
mov
xor
leavew
aam
repnz
mov
pop
stos
inc
mov
jecxz
mov
aas
enter
or
mov
xchg
xchg
xor
out
insb
xor
add
lods
jmp
addr16
or
mov
les
cmpb
xor
push
push
push
sbb
nop
inc
arpl
aad
mov
sub
jle
mov
cmp
rcr
inc
bound
mov
mov
into
jl
arpl
shr
xchg
inc
or
loopne
xor
cs
icebp
or
out
insl
and
pop
sub
or
or
arpl
rclb
fimuls
repz
mov
mov
mov
and
pop
cs
adc
leave
jmp
mov
outsb
scas
sbb
or
push
inc
sti
mov
xchg
outsb
or
scas
cmc
mov
es
jle
dec
jne
jge
decl
push
mov
sub
iret
daa
push
jnp
cwtl
jae
pop
cltd
cmp
pop
cs
je
cmovns
es
inc
jns
dec
mov
add
and
sbb
shlb
jno
push
negb
daa
sub
add
push
sbb
mov
xchg
incl
jnp
stos
movsl
mov
adc
add
and
pushf
or
adc
mov
push
orl
test
dec
scas
push
cmp
adc
scas
push
sbb
pop
test
add
xor
sbbl
lea
sub
movsl
mov
add
cwtl
out
push
shll
cwtl
xor
je
push
push
jg
push
test
and
out
sbbl
adc
sub
loope
pop
push
pushf
test
xor
test
push
ljmp
jmp
mov
pop
jbe
add
mov
pop
fcompl
add
lock
jne
mov
sbb
add
xor
mov
mov
je
andb
jo
xor
lds
and
lea
mov
loop
and
test
bound
insb
cmp
movlps
ret
divl
push
jo
popf
or
dec
in
pop
xchg
loop
dec
fnstenv
cltd
outsb
test
pop
iret
and
test
push
int
pop
int
lret
jbe
pop
fcomps
loope
clc
fbstp
int
mov
mov
sbb
test
or
fildl
xchg
data16
in
fildll
cmp
xchg
add
outsb
fs
lcall
xor
xchg
cld
push
sub
cwtl
hlt
lret
dec
movsb
in
lahf
daa
dec
and
cmpl
pop
mov
jp
shll
mov
lds
inc
and
inc
sbb
sahf
es
enter
push
rcrb
fdivs
and
imul
fisubs
sub
cli
aam
sub
xor
and
xchg
xchg
and
inc
loopne
adcb
daa
cltd
in
cld
xor
and
or
fcmove
xchg
push
push
fcomi
cmp
sub
test
or
sub
lcall
fildl
ret
sbb
inc
sbb
cmp
mov
mov
push
push
lods
mov
jle
xor
mov
inc
icebp
xchg
or
mov
sub
mov
dec
imul
int3
out
inc
pop
mov
sbb
push
lea
pop
hlt
mov
xchg
sub
push
mov
xor
movsl
aad
fadd
cltd
inc
mov
xor
aas
imul
and
bound
push
xor
adc
cmp
sti
mov
sbb
push
push
pop
aas
aad
cwtl
xchg
mov
jno
into
xchg
sbb
sbb
decl
mov
xor
mov
sti
es
dec
or
add
int3
cld
fnstcw
add
mov
sub
cmp
hlt
imul
push
fcompl
cmc
mov
add
stos
das
in
inc
inc
inc
pop
clc
bound
xor
jae
dec
pop
xchg
inc
scas
add
cmpsl
fwait
push
push
sub
mov
orl
pop
mov
push
lret
idivl
pop
mov
gs
repnz
xlat
popf
je
cmpsl
js
xchg
and
cmp
cmc
nop
pop
sbb
fnsave
jl
cli
jge
fwait
xor
insb
sub
scas
sbb
lcall
adc
pop
mov
xchg
jmp
cmp
and
mov
std
jo
in
or
add
dec
dec
xlat
and
lock
sub
notl
push
outsl
lret
mov
xchg
negb
sahf
dec
cwtl
das
inc
cmp
cmp
mov
inc
fldenv
fnstenv
sbb
jo
aaa
lret
movsl
into
addl
or
sub
loope
mov
jne
jge
xorb
mov
add
imul
inc
pop
shll
pop
aad
push
mov
cmpsl
in
ljmp
pop
cmp
sbb
orl
mov
std
push
daa
in
push
sar
daa
jns
jge
dec
cmp
add
xor
mov
dec
xor
aaa
imul
loop
test
mov
loopne
ds
jecxz
xchg
rcl
test
call
lret
lods
jo
jne
nop
mov
xchg
pop
stos
jmp
inc
cld
jl
xor
fwait
and
xchg
or
mov
repnz
ds
test
in
pop
cmp
nop
push
push
ljmp
mov
lret
ljmp
xor
push
jle
pop
add
xor
xchg
inc
add
push
mov
push
cltd
lock
rorb
pop
fcmovbe
decb
sub
aaa
push
add
xlat
sbb
in
jnp
adc
add
mov
nop
aas
jle
cmp
sub
inc
clc
mov
loopne
mov
fsts
test
sbb
jno,pn
inc
and
jne
xchg
jae
mov
stc
gs
popa
cli
mov
flds
mov
or
into
imul
xchg
push
mov
cltd
mov
cmp
jle
jmp
scas
jns
fbld
je
add
pusha
mov
fstpl
repz
cmpsb
cltd
inc
lcall
sbb
and
inc
repz
shlb
outsl
jnp
js
sub
mov
push
xchg
jns
int
xchg
mov
xchg
adc
jge
repz
mov
jp
jmp
mov
or
jne
mov
popa
jg
xlat
imul
xchg
neg
in
das
add
sbbb
and
xlat
daa
test
ja
lea
or
mov
pop
cmp
repnz
testl
mov
andl
xchg
lock
xchg
imul
aas
push
mov
imul
test
loope
jns
iret
ret
aam
pusha
sbb
mov
fists
scas
adc
dec
out
jge
inc
cmp
das
and
or
mov
sbb
test
cld
shll
push
or
dec
xlat
mov
push
out
xchg
ss
or
rolb
ja
lret
daa
sbb
or
sbbb
add
dec
fxch
mov
or
jg
lret
xor
gs
mov
adc
sub
xchg
out
repnz
and
ficomps
and
pop
mov
lea
xchg
lcall
das
cltd
in
call
iret
les
adcl
out
add
jmp
stos
push
lahf
adcl
mov
shrl
dec
and
imul
cmpsb
fs
inc
ficomps
stos
pop
loopne
xor
dec
sbb
jae
jno
xchg
adc
mov
xchg
inc
mov
adc
je
and
xchg
sub
dec
lds
jns
test
insl
mov
mov
cmp
jmp
jle
jae
sub
mov
jnp
xor
push
jmp
ss
es
ficomps
push
mov
push
scas
jae
test
inc
xchg
xor
xchg
and
sbb
push
outsb
gs
xchg
clc
xor
fwait
hlt
xchg
das
push
in
lods
data16
or
adc
jb
repz
xchg
inc
cltd
cltd
sbb
aam
icebp
mov
movsb
add
std
cs
inc
dec
xchg
bnd
xor
lret
aaa
jo
cli
dec
and
inc
pop
xor
jae
leave
xchg
int3
popf
stc
or
dec
adc
outsl
sub
pop
mov
xchg
jge
xor
push
pcmpgtb
mov
cmp
sahf
sub
xchg
sub
pop
and
nop
scas
call
int
sahf
and
pop
inc
popa
jnp
cmpsl
mov
or
fadd
xor
pop
lock
imul
test
popw
gs
hlt
mov
adc
and
sbb
sub
xor
repnz
scas
mov
jl
negl
clc
mul
add
scas
mov
mov
loopne
test
xchg
arpl
jne
jns
sub
mov
mov
xor
int
sbb
cs
pusha
xlat
jg
adc
or
sahf
jbe
je
cli
xchg
fbstp
adc
jnp
or
imull
inc
call
pop
xchg
or
loopne
mov
cmp
jecxz
adc
cld
pop
jge
lcall
jbe
inc
inc
cmp
add
pop
push
gs
sbbb
mov
test
add
daa
mov
jmp
mov
sub
loopne
add
lods
cmp
das
lea
mov
xchg
stos
jnp
aaa
jmp
cmp
push
mov
mov
adc
pop
out
cmp
dec
fs
sub
pop
mov
mov
das
das
lods
ror
int
aad
lcall
adc
mov
sbb
push
dec
dec
fldenv
stc
lcall
das
jle
jne
mov
addr16
sbb
push
mov
shr
out
push
aaa
jns
test
shl
fisttpll
mov
mov
sbb
outsl
ds
loope
mov
test
ret
inc
xor
or
adc
push
cmpb
fcoml
daa
or
std
ja
je
hlt
xchg
sbb
or
adc
xor
inc
leave
nop
xchg
lds
mov
aad
hlt
mov
dec
xchg
jecxz
dec
mov
lods
out
movsb
in
adc
orb
out
inc
pop
inc
jge
out
cs
psrad
xchg
hlt
bound
mov
shll
inc
mov
fisubrl
mov
mulb
adc
push
loope
call
push
call
out
xor
adc
adc
jns
pop
or
int3
iret
sub
xchg
outsb
sub
aaa
cmc
mov
pop
insl
pop
dec
out
dec
dec
ret
fcmove
and
add
dec
mov
stos
shl
adc
fmull
mov
mov
fimull
pop
movsl
mov
mov
fs
sub
dec
jmp
cli
sbb
cmp
mov
adc
or
lahf
jle
ret
mov
out
scas
xor
out
daa
or
pavgb
ljmp
movsl
andb
scas
pop
add
xor
sbb
jle
enter
in
insb
cmp
daa
lret
js
dec
shrb
pop
inc
fwait
ljmp
aam
xorb
push
leave
inc
fdivr
das
jb
cmp
stos
mov
enter
in
add
out
dec
and
sbb
idivl
cmp
mov
scas
xchg
cmc
or
dec
add
lcall
cmpsb
and
jb
movsl
inc
jg
filds
xchg
mov
pop
in
cmpsl
jp
xor
in
mov
lret
sbb
pminub
or
insb
add
mov
popf
sub
inc
pusha
pop
xor
cwtl
aam
arpl
jne
aaa
out
mov
frstor
mov
roll
mov
xchg
xor
pop
cmp
xor
push
xchg
xchg
push
es
fcoms
xchg
hlt
push
scas
inc
test
dec
add
mov
es
adcb
scas
push
adc
fbstp
daa
mov
mov
inc
rcrb
testb
daa
xor
pop
lahf
std
push
mov
imul
adc
in
in
xchg
pop
lock
xor
gs
jg
xchg
int
jb
ja
fs
jnp
inc
mov
cld
xchg
icebp
adc
fstl
mov
addl
insb
mov
ret
mov
insl
cmpsb
imul
mov
cmp
fiadds
fiaddl
scas
test
pop
xchg
cmp
xchg
call
xor
xchg
mov
push
arpl
mov
shrl
mov
rcr
and
mov
sub
sub
pop
xchg
jno
nop
in
mov
and
push
repz
cmp
dec
mov
pop
dec
mov
testl
pop
outsb
xchg
mov
sbb
mov
loop
pop
pop
push
mov
sbb
sbb
jo
aam
pop
sub
or
fsubrs
sti
pushf
std
xchg
mov
aad
and
pop
pop
mov
mov
je
sub
mov
xchg
ds
in
xchg
push
call
pop
out
outsl
add
cmc
hlt
and
adc
je
cmp
adc
fisubl
mov
int
jp
push
movsl
decb
jp
sub
and
add
stc
push
cmpsl
jp
or
getsec
mov
push
fldcw
cmp
jmp
pop
mov
inc
jp
cwtl
and
lahf
mov
scas
xor
pop
test
lods
jmp
adc
ss
insb
lds
rorl
xor
xchg
inc
lods
out
ljmp
add
lock
or
pop
pop
fimuls
stc
loop
xchg
adc
jne
lret
and
cmp
pop
mov
callw
mov
sub
nop
sbb
mov
xor
add
jle
dec
cwtl
cs
jmp
xchg
cmc
xor
es
insl
repnz
xchg
les
nop
xchg
out
mov
mov
push
loop
and
aas
push
stos
mov
mov
loope,pt
movsl
aaa
add
fadds
push
out
sbb
xchg
dec
dec
xorl
fiaddl
push
xor
pop
test
inc
xchg
pop
in
mov
mov
inc
loope
arpl
insl
mov
repz
and
addr16
xor
pop
jmp
dec
sbb
and
mov
mov
rcrb
inc
pop
cltd
jno
lcall
mov
insb
mov
xchg
ss
rcrb
pop
repnz
xchg
xor
push
mov
mov
add
xchg
and
pusha
or
lret
adc
xchg
fwait
gs
dec
sbb
dec
cmp
add
cmc
cmp
sbb
fstl
fnstsw
mov
loopne
jb
lock
mov
test
mov
les
dec
icebp
adc
cs
push
xor
push
ja
clc
aas
xchg
test
fdivl
xor
adc
jb
mov
test
mov
cli
jg
push
adc
xor
aam
mov
pop
in
daa
in
into
push
mov
dec
push
jo
test
dec
gs
mov
sbb
js
icebp
xchg
adc
rol
sub
iret
mov
or
mov
shll
les
xor
mov
add
jno
dec
jno
ja
and
or
ljmp
call
sbb
xor
popa
in
jecxz
daa
in
scas
lahf
dec
xchg
add
jle
mov
roll
jg
adc
xchg
aam
sbb
jp
in
and
mov
ret
mov
std
dec
push
jecxz
mov
inc
rcrl
negb
xchg
mov
shrb
sbb
scas
shlb
cmpb
fisubrl
or
mov
lods
mov
data16
pusha
inc
sub
fnstcw
or
ret
test
push
shr
inc
mov
lcall
jb
or
xchg
pop
xor
movsb
push
ja
adc
lea
xor
js
dec
in
test
xlat
popa
add
stc
mov
push
mov
xlat
adc
push
outsb
adc
pop
jecxz
pop
push
push
sbb
lcall
popf
lods
push
dec
cmp
es
pusha
mov
ljmp
dec
pop
out
andb
lds
clc
xchg
add
call
std
or
cmp
sub
adc
pop
iret
jae
pop
in
mov
mov
or
mov
out
lock
jb
jmp
fidivl
leave
xchg
push
xor
push
dec
push
adc
and
mov
dec
push
popf
push
fists
push
rorl
jl
in
xor
jle
inc
adc
mov
inc
mov
xchg
movsb
or
scas
lcall
mov
int3
testb
mov
bound
cmp
push
popf
scas
fnstcw
loop
mov
add
cmp
sub
loop
pop
mov
mov
dec
mov
out
pop
mov
inc
push
das
mov
sub
stos
inc
jp
lock
cmpsl
ret
sub
cmp
add
fs
aam
int3
push
mov
xchg
pop
sahf
mov
jmp
and
loope
pushfw
xchg
mov
pushf
push
adc
bound
pop
inc
cmp
enter
test
stos
rcll
arpl
cmp
sarl
dec
scas
pop
mov
jno
and
mov
lahf
jp
mov
faddp
ds
daa
xor
gs
push
fwait
sahf
sahf
clc
ret
loopne
push
push
call
dec
popa
cwtl
repnz
push
rcl
adc
sarb
mov
push
outsb
pop
test
repnz
jb
hlt
inc
hlt
andl
clc
inc
into
xchg
xchg
orb
or
and
nop
mov
roll
push
aaa
aaa
fs
cmc
and
test
xor
scas
jp
sbb
pop
ficoms
stos
sbb
popf
mov
add
xchg
push
xor
jecxz
cwtl
dec
stos
jne
test
cli
addl
lea
mov
sti
arpl
sahf
ret
sbb
frstor
adcb
fwait
push
test
stos
and
bound
jns
loope
in
dec
mov
xor
mov
or
jmp
lods
and
outsl
or
adc
xchg
std
jmp
jecxz
push
pop
cmc
movsl
je
adc
sbb
dec
lcall
mov
outsb
push
mov
mov
cmpsb
scas
jb
or
mov
sbb
cld
cmp
imul
mov
add
mov
bound
xchg
aam
sti
jo
mov
fldcw
jg
leavew
fstps
xchg
dec
mov
push
mov
jno
dec
mov
fdivl
fisttpl
xor
fcmovbe
inc
repz
lods
icebp
jbe
or
out
insb
sbb
aaa
jmp
cli
xchg
dec
icebp
sahf
add
add
mov
cwtl
jb
cwtl
xor
mov
jbe
outsl
rcll
pop
xchg
jb
repnz
or
testl
fstpt
mov
cmp
dec
jbe
jnp
stos
insb
xor
add
mov
push
lcall
adc
dec
mov
xchg
imul
pop
mov
pop
mov
fsub
ds
cmp
cltd
ljmp
and
xor
mov
lea
xor
dec
cwtl
jp
mov
and
mov
mov
cmp
adc
or
inc
cmp
push
mov
inc
enter
or
and
jp
outsl
pop
loop
js
inc
mov
idivb
add
xor
popf
add
cmpsl
aas
rcrl
decl
push
dec
mov
dec
rolb
aad
push
call
mov
adc
lds
pusha
lock
inc
iret
cmp
in
push
lea
fstl
aam
sbb
inc
inc
daa
jmp
jno
inc
xor
push
roll
stc
loop
push
daa
cli
pushf
sarl
outsl
adc
dec
fsubs
mov
stc
mov
dec
xchg
dec
fidivrs
sbb
jb
push
xchg
add
jo
push
sbbl
jo
mov
xor
jo
jg
jb
jle
push
pop
or
popf
xchg
sub
xor
sti
and
sbb
ljmp
fs
jmp
pop
add
mov
push
push
int
out
clc
fs
popf
sbb
cmpsb
or
sarb
lds
mull
inc
pop
mov
lret
fisubrl
nop
outsb
jmp
frstor
dec
inc
sub
lods
pop
pop
jecxz
stos
pop
mov
mov
ret
or
negl
jp
jno
lcall
dec
sub
or
dec
mov
adc
xchg
add
inc
in
mov
mov
idivb
push
mov
add
mov
mov
scas
jmp
jno
xchg
pop
cmpsb
sbb
jne
cmc
mov
inc
fisttpl
test
lods
pop
adc
lds
push
addr16
xor
shlb
popa
jmp
scas
ret
sbbl
outsl
sbb
mov
add
mov
xchg
ss
icebp
jl
test
icebp
cmp
aad
inc
dec
pop
outsb
jge
xchg
test
jp
stos
nop
repz
push
sbb
jbe
pop
xchg
mov
jae
mov
pusha
mov
loopne
ss
pushl
xchg
cs
movsb
xor
xor
push
jne
popa
sub
ljmp
cwtl
addr16
inc
mov
pop
out
xor
or
adc
addr16
into
or
sbb
adcb
or
cmc
aam
cmp
xorb
in
xchg
bound
sbb
inc
mov
dec
pop
es
call
push
cwtl
inc
fmull
out
std
mov
xor
out
push
into
lods
jo
lods
jbe
sbb
loope
jmp
insb
shrb
jecxz
lea
cmp
push
aad
mov
pop
mov
xlat
repz
or
pop
and
iret
lretw
aam
adc
rorb
outsl
out
movl
aaa
xor
movsl
xchg
adc
jmp
or
lahf
cld
repz
xchg
sbbb
sar
gs
fwait
jae
popf
xchg
insb
inc
push
cli
xchg
xor
andb
mov
idiv
out
sub
mov
and
cmp
in
mov
jp
push
repnz
popa
push
sti
xor
daa
mov
icebp
lcall
mov
mov
cli
xor
popa
mov
cmpsb
addr16
cwtl
pop
mov
pop
xchg
pusha
dec
sub
inc
jecxz
sub
push
stos
shl
iret
xchg
add
adc
mov
mov
scas
adc
cmp
cmp
clc
and
insl
shrl
adc
xchg
dec
dec
mov
cmc
pop
or
shrl
sub
jl
cltd
in
ret
dec
lahf
add
sub
dec
and
xlat
lods
incl
sub
sub
lods
loope
and
shll
dec
pop
xchg
jl
push
mov
lahf
mov
iret
sub
push
fucomp
lea
add
jns
adc
xchg
popf
hlt
mov
cmp
dec
shrb
outsl
arpl
inc
test
outsl
mov
loope
push
into
mov
aam
inc
loopne
adc
inc
ljmp
pop
xchg
loope
roll
xor
scas
mov
je
std
lods
insl
inc
cli
pushf
jmp
jnp
jmp
or
stos
lret
sbb
and
cmp
push
sub
lret
int
or
in
fwait
mov
arpl
mov
and
push
enter
lds
xchg
mov
test
xchg
mov
xchg
scas
inc
test
xchg
insb
sbb
test
mov
add
sub
sbb
in
cld
add
sbb
fldenv
cwtl
das
scas
test
aas
mov
or
bound
data16
or
jle
sbb
dec
mov
stc
outsl
andl
and
pop
rolb
inc
cwtl
mov
lret
mov
mov
cld
sub
pop
fnsave
add
shll
stc
inc
dec
sub
jmp
cltd
mov
dec
pop
sar
push
call
mov
arpl
mov
mov
aaa
std
cmpsl
jecxz
dec
lods
and
pop
in
pop
adc
dec
sub
loope
inc
movw
inc
je
push
and
or
loopne
sbb
es
call
fs
outsl
inc
sbb
call
fcomip
cmp
pop
pop
icebp
cmp
daa
scas
fisubs
pusha
dec
das
shr
mov
lret
and
xchg
lods
inc
or
sub
fsubl
test
sti
adc
sub
cmp
or
pop
xchg
inc
add
cwtl
pop
push
xor
xchg
jg
pop
pop
in
cmpsb
daa
sub
adc
dec
repnz
popf
and
lret
mov
dec
lock
into
out
inc
cmpsb
pop
cmp
sbb
std
movsl
int3
sti
adc
out
imul
pop
lcall
popf
or
add
pop
scas
pop
push
sbb
xor
cwtl
das
add
negl
int3
shll
dec
add
mov
sub
mov
repz
mov
insb
sub
subl
push
and
sbb
leave
int
cli
imul
out
inc
mov
adc
pusha
push
and
pop
push
pop
lret
lret
sub
bound
fs
mov
sbb
lock
repz
inc
xor
lods
dec
pop
sub
inc
stos
data16
notb
daa
rcl
pop
cmp
cmp
movsl
cmp
outsb
push
cmp
sbb
notb
cltd
mov
sti
push
xchg
sub
adc
mov
pop
rcrl
scas
fwait
stc
xchg
stos
adc
andl
and
dec
dec
cmp
cmp
pushf
pop
sbb
or
cmp
jb
xchg
sub
xchg
inc
loopne
fidivl
aaa
and
adc
xchg
sub
movsl
sbb
or
std
jo
mov
sbb
imul
mov
or
lods
ret
in
add
mov
push
out
cmp
lods
jmp
jae
test
pop
pop
sarb
mov
out
cmpsl
push
inc
xor
pop
jle
gs
scas
scas
inc
movsb
repnz
js
dec
scas
movsl
xchg
adc
rcl
lds
fwait
scas
ljmp
mov
or
int3
lret
mov
add
xchg
jno
adc
mov
xor
xlat
push
xor
and
pop
aaa
lods
xchg
test
push
pusha
icebp
clc
xchg
ret
repz
jne
out
pop
cmc
fcompl
adc
and
popf
xor
jns
mov
lods
cmp
pop
imul
pop
std
into
in
add
jge
es
repz
mov
cmp
in
xchg
dec
negb
sbb
insb
lcall
pop
scas
dec
in
cltd
jle
lock
sbb
cld
test
out
jle
andl
repnz
cmc
mov
sar
push
jge
scas
cltd
xchg
fyl2x
ret
fldt
je
scas
xor
orb
cwtl
and
out
dec
inc
cwtl
jns
dec
popf
test
loopne
aaa
shr
push
cmp
mov
xchg
imul
xchg
xchg
fdivs
shrb
jnp
call
mov
sbb
rcll
jno
xchg
cmp
mov
push
xchg
std
vmwrite
ds
add
jmp
ficomps
adc
cmp
daa
cmp
cltd
jecxz
out
subl
or
xchg
rcrl
or
mov
imul
mov
inc
into
push
outsl
rolb
lea
jl
mov
add
add
lcall
jbe
das
push
cmc
ja
push
xchg
jnp
inc
movsb
repnz
rorb
popf
jnp
xor
cld
jg
sbb
add
push
dec
fwait
sbb
adc
xor
outsl
xor
data16
lret
pop
dec
cmp
filds
xchg
into
jno
lret
cld
xchg
and
dec
das
loop
mov
popa
ds
lahf
enter
pop
jmp
dec
pop
scas
pusha
icebp
cmp
mov
adc
ret
fnsave
and
sbb
xchg
pop
mov
int
stos
jl
dec
sub
ljmp
aaa
adc
mov
pop
sub
add
js
and
sbb
cmp
inc
pop
mov
fsubp
std
sti
xor
bound
dec
loope
jmp
hlt
push
xor
jp
cld
xchg
out
js
mov
inc
inc
dec
dec
jbe
inc
mov
push
xchg
cmp
ss
loopne
sbb
mov
lahf
lret
xchg
jge
lret
or
jg
sbb
inc
clc
cli
xor
call
loopne
leave
mov
push
data16
push
test
leave
push
movsl
mov
sbb
lods
mov
dec
cmp
insb
push
and
movsb
lcall
jg
xchg
dec
push
push
pop
jmp
jmp
and
aas
fs
sub
xchg
or
mov
testb
popa
adc
fwait
stos
pop
mov
push
clc
push
inc
loope
xchg
movsb
mov
mov
xchg
sub
aaa
imul
gs
cwtl
fists
add
sti
xor
and
jmp
loopne,pt
ss
cmp
add
adc
test
mov
roll
mov
inc
adc
mov
outsb
sbb
add
imul
js
movsl
inc
ds
scas
shrl
les
into
jno
mov
clc
test
repz
sub
cli
fidivrl
nop
rcll
adc
mov
leave
pusha
inc
mov
out
scas
sub
lea
leave
xchg
sbb
div
xor
es
mov
xchg
jp
cmp
cmp
mov
inc
loope
push
dec
xchg
cmpsb
sbb
loop
inc
fsubrs
mov
push
loop
xor
sub
ja
lock
ljmp
je
add
lahf
jno
movsb
sub
push
pop
out
xchg
in
jae
in
fisttpl
movsl
and
xchg
add
data16
loope
int
cli
add
out
filds
cs
cmp
sbb
stos
imulb
lahf
mov
cmp
cwtl
mov
clc
inc
add
adc
push
stos
jae
and
mov
and
cli
aam
and
repnz
xchg
mov
xchg
lret
cmp
cmp
nop
pusha
cmpsb
mov
sbb
arpl
out
mov
sub
insl
cmc
bound
and
sbb
scas
xorb
sub
cmp
sbbl
scas
cld
insb
push
shll
cmp
scas
insb
jl
aaa
and
loope
xorl
ljmp
push
inc
push
mov
adc
cwtl
pop
fldpi
jl
xor
pushf
outsl
pusha
pushf
jg
pop
fsubl
mov
notl
sub
push
and
cmc
sub
pop
push
mov
cli
outsb
push
pop
mov
icebp
dec
cs
adc
push
pushw
rolb
xchg
icebp
or
pop
add
pop
call
mov
or
in
push
aad
scas
lea
dec
aad
mov
mov
and
xor
in
mov
ds
and
mov
xchg
dec
push
popf
xchg
and
test
loope
jo
hlt
jno
cmp
cmp
or
scas
push
mov
xor
sbb
call
cmp
stc
int3
fisubrs
and
cmp
shrl
jecxz
fwait
push
adc
push
rclb
xchg
xchg
mov
nop
loopne
test
inc
mov
inc
push
mov
push
xor
test
fscale
insb
rcl
popf
push
inc
push
adc
mov
stc
fs
aaa
mov
mov
fmull
insw
xor
les
stos
inc
sub
in
mov
push
mov
adc
les
testl
add
cmp
call
movsl
xchg
loop
cld
dec
and
push
mov
xchg
out
fmull
ret
lahf
sub
andb
test
mov
into
pushf
aaa
jbe
data16
cwtl
mov
data16
xchg
cmp
sahf
fs
jo
pop
xlat
insb
jle
sbb
xchg
cmp
lds
shrl
dec
into
faddl
mov
xor
pop
enter
lahf
testl
ret
jb
cmc
jecxz
adc
shr
repnz
adc
inc
enter
arpl
dec
mov
sbb
mov
push
xchg
sub
mov
fldt
ret
shlb
add
add
cltd
sub
rcrl
xchg
aad
pop
orb
mov
jbe
pop
mov
mov
rcl
or
sub
push
jmp
sub
or
mov
nop
mov
pop
mov
xchg
out
mov
sbb
lea
out
testl
shl
sbb
or
ret
dec
stos
pop
xchg
adc
pop
cmp
outsl
sti
iret
data16
mov
std
hlt
cmp
shrb
pop
loope
sahf
push
stos
cmpsl
bound
or
test
clc
pop
in
mov
aaa
addb
push
inc
mov
xchg
ds
stc
out
leave
sbb
or
pop
mov
dec
and
cmpsb
les
shl
xchg
cmp
std
mov
loop
cli
xchg
xor
add
xor
jecxz
ret
mov
in
je
cmp
in
xlat
je
loope
fistps
aad
mov
daa
dec
imul
inc
dec
pop
imul
scas
xor
mov
ljmp
sub
mov
xchg
sub
sahf
out
sbb
outsl
push
mov
sbb
xchg
movsb
inc
lods
mov
fidivl
xchg
addr16
mov
mov
or
jg
add
imul
lcall
stc
mov
xor
xor
subb
mov
adc
bound
cld
or
push
pushf
mov
jmp
or
sub
in
cli
cmpsl
or
mov
xchg
sarl
jnp
jo
jl
fs
adc
nop
jl
mov
popf
or
stc
scas
push
add
shll
or
stos
push
xor
inc
mov
xchg
in
jae
mov
orl
xchg
inc
into
mov
cwtl
cld
lods
in
cmp
inc
daa
mov
mov
mov
dec
iret
stos
pop
jg
pop
add
rclb
scas
and
std
pop
fisubl
add
or
sbb
jmp
xor
in
push
adc
rorl
scas
es
stc
mov
nop
add
in
daa
inc
mov
lds
sub
and
push
and
testb
repz
jo
inc
sub
jo
mov
enter
test
mov
mov
pop
inc
call
in
inc
pop
mov
outsb
stos
std
xlat
sub
rorl
cli
jle
lret
pop
shlb
mov
imul
cmp
push
xorb
dec
push
dec
repnz
ds
sbb
pusha
sarb
or
aaa
or
jecxz
nop
pop
mov
nop
mov
xchg
pop
inc
sub
int3
dec
push
icebp
testl
pop
push
cmp
pop
orb
pushf
adc
push
out
dec
inc
push
or
inc
sti
sarb
dec
xor
lds
shrb
cltd
xchg
xor
cmp
push
inc
test
add
xchg
add
fdivrp
cltd
das
push
je
jle,pt
fbld
or
jp
or
movsl
das
xlat
mov
flds
xchg
inc
roll
mov
pop
arpl
and
jno
popa
xor
ret
clc
mov
imul
push
push
rcll
and
sub
cmp
daa
adc
pusha
ss
aam
cmpsb
pop
push
lahf
jno
add
dec
mov
xchg
cmp
ljmp
sub
xchg
sub
jecxz
fwait
enter
arpl
lahf
push
jno
inc
pop
cmpsb
scas
mov
add
jecxz
inc
enter
mov
fisttpll
clc
push
aam
xchg
ret
mov
outsl
divb
cmp
sbb
nopl
lret
lock
int3
mov
mov
or
into
jne
movsl
andb
les
sbb
gs
aaa
push
ret
xor
or
fwait
mov
insl
imul
sahf
hlt
adc
add
push
pop
xchg
mov
into
fldcw
sbbb
pop
sub
sub
jp
xor
imul
imul
lods
fiaddl
add
add
imul
mov
and
shrl
cwtl
leave
mov
dec
mov
mov
adc
les
xchg
jnp
xor
mov
or
pop
cmp
sahf
dec
pop
std
stos
dec
jmp
jo
iret
jb
mov
cld
shrl
clc
enter
mov
pop
fbld
cmpsl
and
jmp
sti
cmp
mov
xchg
pop
and
push
outsl
daa
sub
add
and
push
fbstp
test
aad
negl
xor
fdivrs
cld
pop
cmp
insb
insl
lds
cmpb
fwait
in
push
push
jp
push
inc
cmp
lcall
in
xor
inc
mov
in
push
cmp
add
push
add
loop
pop
inc
mov
xchg
sub
sub
aam
out
ret
aaa
ds
push
shrb
cmp
and
push
adc
sub
add
add
je
and
inc
and
lods
adc
lods
pop
push
test
mov
mov
jl
pop
cld
jg
or
pop
bswap
int3
sarb
pop
aad
push
mov
push
fnstsw
adc
das
push
mov
movsl
mov
pop
loop
mov
iret
mov
sub
add
pusha
std
hlt
xchg
or
jge
mov
aas
jnp
loopne
cmp
jl,pt
int
or
mov
jle
or
insb
add
lahf
add
aaa
pop
push
pop
mov
mov
push
sub
addb
cltd
out
iret
xchg
cmp
inc
movsb
pop
push
je
mov
mov
movsb
popl
and
movsb
arpl
pop
andl
mov
cmp
add
add
loop
jbe
loope
mov
les
imul
ljmp
or
lock
popf
adc
push
out
pop
push
jo
lea
gs
inc
xchg
adc
push
into
js
rcrl
test
loopne
pop
rep
scas
mov
pop
ja
in
sbb
push
pop
std
xchg
or
shll
pop
loopne
push
cmp
out
xchg
repnz
out
pop
jle,pn
sub
pop
rolb
xor
insl
cs
mov
test
bound
adc
sbb
pop
jno
cwtl
data16
or
push
adc
adc
ds
gs
inc
jge
lea
dec
mov
movl
shr
mov
pop
adcl
and
pop
test
mov
daa
inc
out
or
int3
pop
in
add
and
lods
mov
fwait
gs
jle
enter
call
jns
ljmp
adc
push
sbb
idivl
popa
or
jbe
pop
cld
dec
test
insb
jl
fldl
fisubrs
ja
out
js
cltd
mov
push
cmpl
aas
pop
cltd
sbb
add
cwtl
mov
aam
leave
shr
adc
jg
push
inc
inc
mov
push
movsl
imul
lahf
xlat
jg
and
mov
mov
push
aas
mov
cmp
nop
sub
xor
pop
cld
les
inc
cwtl
sbb
mov
mov
pop
push
mov
mov
pop
mov
sti
xchg
pop
outsl
mov
push
out
test
in
fld
out
movsl
js
jmp
in
nop
fmull
mov
dec
jl
dec
ja,pn
inc
test
and
mov
inc
hlt
push
dec
iret
dec
cmp
loope
mov
push
pop
pop
dec
pop
dec
mov
in
cmp
mov
inc
adc
stos
inc
mov
aad
test
inc
add
or
mov
push
mov
mov
ficoml
mov
mov
push
adc
mov
test
mov
sbb
shl
push
jo
std
adc
mov
or
add
push
xor
jno
arpl
dec
nop
scas
mov
mov
dec
lcall
imul
rorb
rcl
ret
ljmp
sub
xchg
imul
cmpsl
rolb
adcl
ret
mov
dec
out
inc
pop
lahf
ss
imul
ret
add
imul
mov
xchg
add
gs
pop
bnd
push
out
movsb
jle
mov
xchg
sbb
sahf
insl
sbb
cmp
mov
jno
in
pop
inc
leave
mov
das
pop
jno
pop
icebp
sbb
mov
sub
dec
cmp
jge
push
or
mov
leave
fwait
bnd
cmp
gs
mov
xchg
in
cmpb
jle
cs
jp
insl
sub
fwait
and
and
loope
pushf
lea
pop
push
rorl
insl
jnp
xor
in
inc
imul
sub
cmp
out
sahf
ret
inc
inc
fldl
lcall
test
jnp
cmp
adc
mov
movsl
sahf
add
iret
and
je
bnd
dec
xchg
pop
insb
sbb
popf
jmp
cli
outsl
nop
push
insl
jmp
popf
outsl
sbb
lret
jo
push
inc
stos
pop
outsl
fld
mov
push
mov
shll
xchg
out
jne
fisubrl
xchg
push
or
cmp
mov
push
mov
mov
jbe
rcl
jg
clc
pop
pop
fldenv
les
xor
xor
scas
lret
mov
dec
mov
in
xor
mov
jne
and
pop
fidivrs
and
fsubrl
jg
jns
xchg
sbb
dec
ds
pop
movl
push
xchg
cmp
je
inc
sbb
cmp
aad
xor
out
mov
inc
jmp
arpl
js
sbb
sahf
jle
cmp
sti
in
adc
cmp
add
adc
jecxz
cmp
xor
movsb
imul
fcomps
mov
adc
or
jge
jle
add
pop
jae
fists
shrl
jle
fwait
imul
or
mov
jnp
and
mov
std
inc
cwtl
mov
fisttpl
or
xchg
sbb
shll
imul
cmpsl
das
sub
sub
mov
cmp
repz
and
leave
shll
inc
and
push
dec
mov
mov
mov
lea
in
popa
jb
mov
sub
pop
add
pop
jbe
js
pop
mov
test
stos
ds
sbb
sbb
out
fs
fadds
jbe
jecxz
arpl
jo
pop
jo
int
ss
lock
inc
fisubl
filds
add
bound
sti
pop
sub
mov
outsl
stos
xchg
jge
adc
gs
insb
nop
mov
mov
inc
mov
imul
mov
push
addl
jnp
adc
add
mov
cmpsb
cmp
fnstcw
adc
mov
xchg
pop
mov
jb
xor
test
push
mov
cli
pushf
clc
jecxz
divl
outsl
push
loope
push
mov
sarl
jne
pop
xor
inc
cmpsl
lcall
cmp
dec
add
fld
sub
sub
xchg
lock
mov
or
loopne
push
test
sbb
dec
and
push
mov
test
sti
ja
and
and
sub
add
sbb
jne
sub
mov
dec
pop
sbb
pop
enter
hlt
xor
jge
mov
push
and
sub
xor
mov
addr16
jg
adc
cs
addr16
mov
cli
mov
iret
call
mov
cmp
subl
pop
dec
push
movsb
inc
push
test
fldcw
mov
fwait
mov
sbb
fsubr
rolb
xchg
add
dec
iret
xor
jne
data16
and
iret
push
jg
mov
mov
jge
cmp
lret
pop
in
arpl
cltd
lahf
inc
push
leave
or
test
or
fnstenv
dec
addr16
loopne
adc
sub
out
repz
jmp
imul
jle
scas
pop
movsl
inc
cltd
pop
lods
xlat
cmp
into
lds
xor
xor
jmp
movsb
cmp
add
outsl
test
shrb
jecxz
rcrb
test
ja
lods
and
pusha
rcrb
lret
sub
leave
enter
gs
int3
or
push
cmp
adc
sbb
ja
lock
and
cwtl
stc
stos
mov
mov
jns
xchg
movsb
mov
push
stos
inc
push
adc
dec
mov
gs
pop
es
inc
rcrl
fidivs
lods
clc
sti
imul
fcomps
push
test
mov
pop
jo
stc
outsb
out
and
hlt
or
mov
fidivs
mov
pop
aas
jmp
ljmp
ret
fbld
int
das
iret
pusha
mov
pop
jl
sbb
sarl
inc
and
inc
inc
popa
xor
in
jecxz
fisttpl
movsl
mov
sub
jmp
dec
bound
add
mov
adc
addl
cmp
pushf
fisubrs
pop
xlat
fmul
mov
mov
jl
repz
mov
inc
call
aaa
jno
jmp
loopne
hlt
rcr
out
pop
sub
imulb
lahf
nop
ss
xor
cmp
mov
movsl
pop
popf
movsl
icebp
xchg
gs
xchg
mov
gs
and
pusha
out
cmpsl
inc
mov
xchg
paddusw
sbb
push
das
jl
pushf
std
xchg
xlat
xor
add
mov
in
inc
fisubs
push
fdivrl
push
add
jge
mov
shll
xchg
inc
xor
push
out
sub
repz
test
scas
shlb
mov
cmp
and
outsl
aaa
sub
xor
cmp
pop
inc
add
test
xchg
loopne
adc
inc
daa
repnz
pop
mov
aas
insb
push
pushf
in
insb
dec
adc
push
ret
inc
gs
mov
or
stos
loopne
stos
inc
loope
mov
mov
enter
addr16
push
sbb
mov
and
in
fildll
mov
or
mov
mov
inc
cltd
in
imul
push
push
lods
jmp
ljmp
je
sub
into
cs
in
dec
mov
sarb
xor
out
mov
repnz
and
sub
ret
mov
mov
jmp
push
je
or
lret
repnz
pop
push
test
iret
inc
cltd
out
lcall
ja
and
stos
sub
fsubs
sub
push
pop
and
sub
scas
sbbl
not
or
sub
faddl
pushf
addr16
les
and
movsb
sti
movsb
add
mov
adc
inc
sahf
push
test
pop
frstor
add
nop
pop
enter
or
push
repz
divl
and
inc
fwait
xchg
or
jns
shl
mov
pop
sub
arpl
and
xchg
pop
sbb
popf
aas
jbe
jl
xor
popf
and
and
mov
adcl
js
scas
repz
mov
iret
pop
fnstsw
and
mov
iret
add
jmp
jb
jno
sbb
andb
movsb
sbb
sub
pushf
inc
add
sbb
sub
test
lods
xchg
mov
dec
inc
fdivrs
shr
pop
ret
xchg
mov
cwtl
pop
sub
mov
jle
loopne
sbb
das
out
stos
fnstenv
or
jp
pop
out
xor
imul
push
je
sub
pop
repnz
adc
test
loope
cld
or
jmp
xchg
pop
xchg
imul
idivl
fdivrl
xor
dec
jo
or
mov
and
xchg
int3
js
stos
stos
mov
cld
push
lret
leavew
dec
pusha
sbb
add
xor
xchg
push
pop
shll
mov
arpl
pusha
and
or
outsl
pushf
loope
sti
mov
js
test
adc
lods
call
sub
push
fwait
dec
cld
pop
in
mov
repnz
fwait
mov
push
ljmp
popf
sub
push
subl
loope
mov
ljmp
int3
push
inc
fisttps
ffree
dec
scas
sti
mov
test
add
xlat
jno
dec
dec
jmp
imul
mov
shl
lds
stos
xlat
sub
test
jno
outsb
adc
cmc
mov
out
push
fwait
xor
jno
cs
add
dec
dec
mov
cmp
ret
and
insl
or
xchg
push
mov
cmp
push
sahf
adc
mov
jb
cs
add
or
sub
outsb
push
clc
fwait
dec
std
push
insb
add
jl
cld
pop
lds
dec
mov
mov
jne
shrb
and
loopne
test
insb
sbb
add
jge
stc
lahf
popa
loopne
mov
inc
push
and
sbb
and
xchg
cmp
adc
mov
sahf
and
in
daa
and
xor
fistpll
cmp
mov
cld
not
sbb
jmp
xor
sti
es
bound
cs
lret
sub
mov
jp
fldt
push
dec
pop
and
jae
addr16
in
mov
add
lea
pop
mov
inc
adc
xchg
mov
aaa
pop
test
lods
add
sbb
int
xlat
or
mov
push
incl
or
xchg
jno
mov
inc
cmpl
shll
mov
or
mov
xchg
add
xchg
inc
jl
hlt
loopne
pop
fidivl
cltd
imul
jle
daa
shlb
leave
loope
adc
aaa
inc
es
mov
push
mov
sbb
out
in
xlat
adc
pop
lods
add
pop
scas
cwtl
pop
shrb
mov
lds
aaa
mov
cmp
mov
cmp
pop
test
push
add
mov
clc
sub
adc
xor
bnd
daa
aad
xor
mov
vmovaps
mov
sub
shrb
mov
push
outsb
enter
mov
inc
push
idiv
adc
arpl
xor
nop
ret
dec
push
outsl
loop
inc
dec
scas
inc
add
sbb
sbbl
xchg
in
or
cmp
and
shll
addr16
sbb
imul
pop
cmpsl
xchg
movsl
mov
jle
sub
dec
adc
or
cld
sbb
push
dec
pop
lods
xchg
vmovapd
imul
lahf
or
outsb
jge
sub
out
xchg
xchg
in
pop
cmp
fwait
xor
jbe
stos
push
inc
inc
push
lret
cld
lcall
lahf
xor
lods
iret
inc
and
lock
and
adc
out
jg
cltd
mov
jl
fldcw
in
addr16
popw
mov
or
adc
pop
adc
outsb
aad
pushf
rclb
cli
and
mov
jo
cs
jno
lods
aad
sub
sub
push
lods
adc
cmp
loopne
popf
ret
mov
or
fsub
xchg
std
jo
cli
jg
adc
xchg
mov
imul
sahf
sbb
add
push
mov
lock
movsb
popa
das
fidivs
test
lret
lret
cs
std
jne
inc
mov
in
clc
adc
repz
push
sti
imul
xor
or
sub
test
push
icebp
cmp
lahf
arpl
mov
gs
popf
jne
into
out
popa
cmc
fcmovne
jno
add
add
sub
fstpt
sub
xor
clc
xchg
fmull
rcll
in
sbb
adc
and
pop
loope
sbbl
pop
sbb
rcrl
scas
push
push
pinsrw
push
out
cmp
mov
outsb
pop
pop
adc
push
pop
cmp
popf
cmp
stos
jmp
rolb
cli
jmp
inc
pop
inc
jmp
fmulp
in
rcll
test
or
lods
xchg
adc
fiaddl
sub
scas
add
cld
mov
std
sbb
mov
sub
pop
divb
pop
mov
sarl
jae
pop
mov
sub
adc
mov
nop
xchg
sub
jnp
cmp
or
shll
js
pop
push
inc
xlat
daa
test
popl
xor
movsb
repnz
cmpsl
test
sub
ja
cmc
dec
lret
cltd
sbb
mov
outsl
mov
loopne
and
pop
inc
sub
pop
or
scas
mov
cmpsb
mov
out
outsl
xchg
call
lea
jae
scas
mov
sbb
sahf
add
xchg
fisubrl
loop
or
jo
fstpt
lods
pop
fiaddl
dec
ret
push
iret
andps
test
pop
aaa
xchg
daa
stc
lock
push
aad
adc
aam
push
jns
or
fucomip
add
dec
rorl
decb
shll
jno
xor
sbb
cmp
outsl
pop
dec
pop
cmp
lods
or
and
daa
mov
dec
inc
pop
loopne
call
out
inc
xor
js
stos
fsubr
xchg
int
ds
lret
jne
lret
cld
push
push
xchg
lret
xor
out
pop
cmp
lods
inc
pushf
pop
mov
aam
inc
mov
lods
cs
clc
cld
xchg
sub
add
sbb
xchg
in
call
test
mov
stos
inc
in
jno
fwait
cmp
push
fisubl
in
into
daa
cwtl
and
jno
cmp
dec
jmp
mov
fimuls
sbb
imul
rcl
pop
lcall
loop
dec
cltd
loopne
push
popf
lods
ret
jnp
clc
lods
shlb
pop
inc
xchg
mov
xor
jg
stos
repnz
test
xor
les
jmp
sbb
push
test
iret
sub
int
jbe
xchg
mov
and
test
shlb
rcrl
fwait
pusha
daa
mov
addr16
push
stc
mov
call
or
in
loope
mov
or
lea
scas
inc
cltd
cmp
adc
andl
shlb
sub
out
fbld
imull
push
cltd
inc
pop
add
adc
addr16
xor
movsb
sbbb
cli
push
pop
jp
xchg
adc
cmpsb
push
ljmp
cmp
mov
xchg
sub
addl
nop
mov
in
pop
cltd
dec
and
int
repz
mov
pop
adc
mov
les
fsubr
std
mov
cmp
sbbl
in
mov
inc
cmc
in
mov
add
mov
xchg
rol
dec
push
clc
mov
lahf
jge
loopne
lret
jo
inc
mov
mov
mov
or
pop
imul
int
nop
fs
ss
inc
mov
dec
cmp
dec
or
push
pop
jge
add
jge
lea
pop
xchg
dec
xchg
jo
jbe
jae
jo
adcl
inc
roll
and
jae
lahf
jmp
push
mov
pushf
push
and
or
js
jge
dec
mov
inc
inc
pop
pusha
enter
or
repz
test
outsl
in
pop
rol
xchg
icebp
scas
mov
adc
pop
cmp
call
sub
mov
mov
adc
sub
cmp
xor
mov
out
aam
adc
and
cmp
fs
out
jp
cs
pop
add
addb
aam
sbb
adc
cmpsl
adc
sbb
out
mov
add
roll
push
mov
mov
and
dec
xor
leave
mov
sub
dec
dec
fisttpll
scas
xor
lcall
cwtl
insb
jno
popa
add
inc
in
or
iret
sbb
and
lods
aas
loope
leave
and
inc
xchg
jle
inc
dec
and
cwtl
pushf
scas
test
dec
imul
fbstp
push
xchg
fidivs
push
lcall
cli
mov
xor
js
decl
ss
das
adc
push
ret
sub
push
fnsave
pop
jne
and
in
inc
or
lret
fdivl
push
xlat
shrb
jg
loop,pt
sbb
sti
push
mov
sub
mov
insl
adc
sbb
ja
push
insb
mov
push
dec
outsl
out
push
mov
test
push
mov
sbb
xor
pushf
cli
das
xor
das
ds
adc
hlt
pop
xchg
test
push
scas
inc
xchg
push
inc
repnz
int3
or
inc
fxch
or
jmp
enter
xchg
adc
pop
push
xlat
pop
cmp
push
insl
loope
inc
fsubr
add
rcr
pop
xor
jg
cmpsb
mov
inc
xlat
jne
jg
push
sub
or
clc
and
fbld
xchg
aaa
das
addr16
repz
sub
pop
mov
pop
xor
jl
cmp
shlb
inc
mov
pop
int3
mov
jge
xor
leave
movb
mov
fmull
pop
shlb
xchg
les
mov
cmp
mov
fs
mov
test
loopne
sahf
push
test
movsl
add
xchg
fildl
dec
pop
addb
ljmp
ret
outsb
bound
mov
inc
mov
setnp
mov
and
sub
xor
xchg
push
rolb
pop
imul
gs
fildl
and
cmp
push
mov
aas
dec
das
fnstcw
fcmovne
push
mov
xor
movsb
cli
or
cwtl
fidivrs
sarb
inc
ljmp
dec
aam
daa
push
jp
repz
fimull
adc
lock
dec
mov
cwtl
dec
dec
push
xlat
sbb
or
push
in
cmp
fbstp
sub
jo
xchg
mov
ljmp
dec
xchg
clc
test
aam
cmp
add
je
push
sub
pushf
sbb
pop
xchg
dec
popf
jg
lods
xchg
scas
push
bound
or
xor
mov
pop
jae
sahf
pop
int
lret
dec
fbld
mov
lret
pop
mov
cmp
montmul
cmpsb
add
insl
out
and
jns
loopne
out
xchg
xor
or
aaa
sahf
imul
mov
popa
stos
inc
fsubrl
cmc
mov
jo
lock
dec
movsl
addr16
and
xor
dec
pop
push
adcl
aad
pushf
sahf
in
dec
shrb
outsb
sahf
fmull
inc
arpl
sbb
inc
jmp
add
pop
add
shr
testb
xor
sub
pop
xor
mov
ss
fcmovnu
xor
inc
and
mov
mov
jno
popa
shll
lock
fsts
mov
push
mov
inc
in
jp
mov
insb
cmp
dec
bound
movsl
jp
sbb
adc
aas
insb
popf
push
dec
loope
jb
cmp
pop
lods
data16
fwait
mov
mov
shrl
rorl
inc
xchg
adc
cli
inc
and
mov
and
add
add
daa
cltd
sbbb
lcall
adcb
jno
xchg
daa
or
cld
inc
int
or
mov
lods
jge
dec
stos
cmp
out
imul
roll
push
sub
fistps
test
xchg
scas
inc
mov
leave
pop
rcrl
mov
dec
jle
out
popf
mov
stos
inc
in
adc
xchg
push
jb
ja
out
jns
cltd
inc
lods
int
decl
stos
adc
jne
je
sbb
test
orl
jb
xchg
jnp
mov
mov
pop
mov
fucomi
add
popa
imul
icebp
adc
mov
push
inc
lods
jns
je
aam
dec
in
js
xchg
mov
int
insb
addb
std
mull
inc
add
pop
lret
mov
test
xchg
out
sbb
or
out
adc
dec
add
xor
lahf
or
cmp
cmp
xor
cmp
mov
rcrb
rolb
andl
stos
outsb
inc
jne
ret
sub
cmc
flds
int
stos
mov
mov
into
or
outsb
and
inc
gs
sti
mov
cltd
insl
rclb
pop
fdivrp
into
adc
dec
sub
sbb
flds
add
std
push
jmp
lods
insb
repz
inc
cmp
ret
xor
mov
ret
sarl
icebp
in
pop
shrl
es
mov
inc
jo
fstpt
inc
fldenv
aad
adc
scas
call
and
sbb
pop
jae
mov
jl
cmp
lret
lret
iret
and
icebp
cmp
pop
ret
fdivl
fstpl
sbb
ret
sub
add
xchg
in
ret
ljmp
aaa
jmp
xor
and
and
imulb
lahf
jbe
test
mov
jnp
shrl
sbb
inc
mov
out
scas
adc
pop
out
inc
jmp
adc
xor
outsl
cs
aaa
not
xchg
rorl
in
push
divb
loopne
subb
cmpsl
out
sub
mov
push
stc
daa
jle
das
std
adc
xchg
add
cmp
push
aaa
push
out
jmp
cltd
sbb
pop
test
stc
inc
jno
pop
cmpsb
sub
mov
mov
jp
shlb
jae
cmp
stc
mov
mov
push
mov
xchg
stos
inc
pop
outsl
outsb
data16
push
sub
clc
add
sbb
inc
xor
sbbb
mov
cld
push
es
mov
repnz
and
xchg
pop
das
mov
mov
int
inc
insl
dec
data16
and
sub
and
sbb
decl
jmp
gs
cmp
pop
add
push
leave
les
pusha
int
or
rorl
cmp
faddl
and
push
out
jl
sub
loope
test
test
aam
mov
testb
nop
sub
fsubrs
loop
mov
dec
mov
pop
shl
fwait
hlt
addr16
or
inc
fwait
es
dec
jp
and
add
or
dec
mov
add
imul
sbb
les
mov
pushl
repnz
push
xor
ret
inc
mov
jne
cmpsw
pushf
popa
push
cmpsb
lea
xchg
mov
in
decb
lock
adc
push
cmp
xor
std
shll
push
cmpl
mov
cltd
adc
mov
fmuls
sbb
xchg
sti
nop
mov
dec
mov
or
imul
sbb
sub
xor
inc
inc
test
jp
int
jb
popf
and
scas
rolb
in
add
cs
pushf
daa
or
lods
frstor
insb
mov
pushf
push
or
lret
and
mov
mov
jl
in
movsl
mov
loopne
xorb
ljmp
dec
jae
jb
jno
push
sub
in
push
notl
sub
xchg
pop
cmp
dec
loop
or
mov
mov
cltd
sbb
or
sbb
inc
dec
mov
pop
aad
mov
sub
pop
scas
inc
cs
outsl
add
mov
cmp
cld
mov
fwait
or
loope
jo
mov
ret
int
or
or
mov
xor
dec
es
and
pop
sub
dec
push
pop
add
sub
sbb
in
stos
sahf
ljmp
sbb
fwait
mov
icebp
and
sbb
shrb
insb
sub
rcr
pop
fadds
inc
and
out
add
test
icebp
xor
daa
add
leave
ds
shlb
fistl
push
fstpl
std
fucomp
and
out
stos
repz
out
lods
mov
xor
fstpt
es
push
fstpt
js,pt
clc
cmpsl
mov
or
xchg
push
xchg
repnz
add
repnz
pop
imul
xchg
sub
lea
push
jmp
call
push
outsl
jnp
rorl
mov
push
jl
xlat
push
xchg
xlat
testb
mov
lea
lahf
fidivl
jl
cwtl
mov
push
cs
mov
cmpsb
stc
xchg
add
or
sahf
pushf
movl
lods
pop
gs
pop
mov
mov
loope
push
ljmp
add
loop
sti
loopne
pop
add
mov
test
push
mov
push
lods
bound
mov
add
aas
test
int3
push
hlt
idivb
js
fldcw
pop
jno
mov
pusha
dec
outsb
or
in
xchg
pop
jb
pushf
mov
test
mov
xor
xchg
xor
sbb
xchg
js
pop
cmp
jle
addl
mov
pop
repnz
and
in
std
in
xor
jnp
std
jg
sbbb
or
add
out
dec
in
pop
ljmp
pushf
cli
mov
pop
mov
jnp
dec
test
clc
stos
xor
push
popf
sbb
ljmp
xchg
out
jo
aad
clc
cwtl
aas
call
leave
cmp
adc
push
mov
popa
xchg
shlb
fwait
dec
xchg
ss
mov
inc
lods
mov
sbb
lods
aam
jo
mov
dec
inc
movsb
aaa
jb
inc
dec
aad
mov
test
push
push
movsl
xchg
xor
sub
jns
adc
dec
loop
xor
test
lods
push
dec
movsl
push
insb
lahf
shll
pop
in
dec
stc
pop
in
sub
pop
mov
inc
insl
stc
adc
movsb
aaa
roll
cmp
repnz
pop
mov
out
mov
add
pop
je
imul
cmp
mov
or
jp
shrl
shrb
inc
popa
inc
jmp
jbe
or
inc
mov
lret
mov
dec
rep
cmp
in
stos
ret
dec
stc
pop
and
mov
dec
sbb
jae
jno
mov
xchg
inc
jle
cmp
test
mov
dec
test
adc
mov
mov
ret
xchg
adc
pop
bound
mov
lret
jnp
out
lahf
dec
inc
pop
inc
mov
into
pop
jecxz
and
xlat
in
lea
inc
cmc
xor
pusha
gs
out
mov
js
notb
mov
inc
inc
cltd
testl
cvtps2pi
fdivrs
lret
dec
add
cmp
xchg
jno
push
out
cld
inc
data16
cmp
loop
push
push
jne
cmc
mov
stos
sbb
in
dec
stc
jg
inc
in
mov
xor
adc
xchg
pop
out
pusha
add
stc
notb
imul
repnz
fcomp
jne
shlb
push
mov
fs
mov
std
out
cwtl
mov
jmp
sub
test
sub
add
and
out
dec
pop
fimull
pusha
dec
repz
cmp
mov
sub
xor
mov
hlt
mov
sbb
adc
xor
dec
dec
aam
idivb
mov
sahf
jae
shrl
dec
jo
out
shl
lret
push
arpl
mov
repz
mov
hlt
aam
das
mov
fimull
ret
test
enter
testl
movsb
jg
push
sbb
jnp
int3
lret
mov
insb
fsubl
dec
adc
fidivs
dec
fsubrp
mov
addb
mov
gs
jle
mov
push
xor
cs
pusha
flds
test
out
js
cmp
popa
ret
popf
ljmp
mov
inc
sbb
test
aaa
fpatan
dec
push
pop
and
mov
mov
fstps
adcl
push
stos
push
adc
scas
out
fildl
push
inc
out
pop
dec
jmp
pop
push
inc
in
stos
ljmp
gs
jno
bound
or
and
jge
sbb
and
insl
jo
sub
cmp
jbe
cmp
inc
lods
shl
mov
jp
lods
adcb
loope
mov
add
enter
ret
xchg
xchg
push
sub
inc
cmp
xor
cmp
push
jl
xchg
xchg
xchg
pop
and
mov
rcrl
dec
adc
or
call
inc
mov
sahf
adc
inc
mov
and
out
jle
mov
jns
xor
negb
loop
mov
mov
cmp
js
sub
sbb
loopne
xor
sub
pop
or
mov
inc
push
leave
push
ret
ret
pop
aaa
mov
out
push
ja
and
sbb
mov
xchg
scas
mov
shl
out
mov
jo
sub
xchg
lret
dec
mov
fst
push
pop
mov
adc
xchg
pushf
jae
stc
scas
insb
movsb
add
add
fstl
jge
outsl
jmp
adc
std
pushf
loop
das
pop
inc
xchg
jns
shrb
sbb
or
shlb
dec
or
repz
push
into
out
cmp
lods
lock
push
adc
scas
mov
pop
sahf
pop
cwtl
jge
jno
out
xor
or
lods
je
sub
xlat
xchg
je
add
movsb
jecxz
xchg
xchg
sub
push
test
sub
test
mov
je
xchg
adc
repnz
inc
jne
xor
adc
imul
lock
lea
test
xchg
sbb
mov
adc
arpl
and
stos
mov
sub
enter
cli
xchg
inc
arpl
in
cmc
int
add
and
scas
out
je
test
orb
mov
mov
leave
sub
mov
or
dec
inc
lret
jle
mov
sbb
jg
outsb
add
scas
mov
add
inc
xorl
inc
out
loopne
mov
cmpl
adc
fs
icebp
bound
sbb
ds
mov
sbb
mov
je
inc
stos
jge
dec
add
dec
jb
icebp
xchg
ror
ffree
xchg
rorl
aad
jecxz
adc
mov
fisttpl
jne
stos
pop
out
jo
push
push
xchg
daa
sbb
sbb
cs
aas
stos
popf
shlb
fnstcw
cmp
jecxz
mov
inc
test
inc
mov
mov
addr16
push
pop
inc
cmpsl
shlb
inc
je
mov
push
inc
pushf
and
enter
repz
cmp
imul
mov
jae
jbe
cmp
xchg
sub
pop
sahf
fwait
pop
sti
xchg
insl
add
mov
xchg
scas
add
or
fidivl
std
lret
in
inc
lahf
mov
dec
aad
ljmp
stos
mov
xor
aas
mov
cmp
push
sub
mov
test
cmpsb
lcall
in
int
in
push
shld
fcomps
inc
push
mov
mov
lahf
or
movsb
push
repnz
mov
sbb
push
dec
iret
xor
sbb
fucomp
adc
xor
xor
sahf
jno
insb
inc
shrb
pop
pop
mov
jmp
daa
inc
xor
bnd
nop
test
inc
orl
dec
aad
insl
xor
sbb
shll
jge
xchg
mull
test
add
insl
mov
push
mov
cmp
sarl
es
sbb
push
dec
xor
mov
pusha
add
sbb
inc
push
pop
std
and
push
push
aaa
cs
sahf
ret
dec
xchg
stc
push
mov
insb
sub
movups
mov
mov
adc
out
clc
push
lahf
pop
leave
xchg
ja
mov
mov
aad
push
test
addl
std
mov
negb
mov
arpl
repz
sbb
adc
les
fcomps
xchg
stc
fists
adc
push
mov
push
ja
rclb
lea
mov
sub
fidivl
shll
clc
mov
adcb
imul
insl
inc
sahf
mov
pop
add
cmpsl
sub
pop
stos
sbb
stos
cmp
cmp
aas
movl
fldcw
or
aaa
ja
mov
mov
cmp
push
mov
xchg
ja
sbb
scas
in
pop
pushl
pop
mov
jmp
pop
add
aas
jnp
int
nop
adc
stos
inc
cs
pop
sbb
xchg
pusha
mov
popa
push
pop
jle
out
fcomps
jbe
dec
dec
mov
dec
lods
sub
fisubrs
fsubrs
push
jo
and
mov
bound
mov
aad
mov
daa
mov
mov
ss
mov
mov
jg
and
pop
pop
cli
xchg
dec
jle
test
push
mov
xchg
adc
dec
jp
pop
ja
pusha
test
ja
scas
jno
jp
and
inc
cld
enter
sbb
sbb
xchg
nop
daa
sbb
mov
xchg
pop
aaa
xchg
cmp
stos
outsb
push
orl
daa
adc
shrl
cmpsb
js
lods
test
lret
addr16
jae
jns
sub
test
ja
mov
out
cmp
cmp
cmpsl
out
fbld
adc
lret
jb
mov
pop
jno
adc
or
je
lods
xor
xor
ret
xchg
lods
jecxz
lods
sbb
mov
repz
sarl
dec
gs
popf
mov
and
int3
cmp
lea
pop
dec
mull
jno
test
jl
imul
xorb
or
aaa
in
jns
movsl
mov
pop
mulb
sbb
dec
add
add
icebp
pop
jmp
inc
scas
int3
jg
insl
movl
or
aaa
or
in
pop
adc
loopne
test
mov
fidivrs
mov
push
and
push
test
or
bound
rol
pop
inc
sub
aam
pop
sub
pusha
imul
js
insl
stc
ret
dec
call
mull
cld
nop
pop
xor
inc
and
cmp
push
sub
ret
hlt
ror
and
cmp
cmp
std
mov
cs
dec
and
in
lods
sbbb
adc
or
xchg
adc
mov
cmp
testl
addb
flds
sub
movsb
push
mov
jo
js
sub
cmpb
sbb
pop
inc
mov
xor
mov
push
sbbl
scas
pop
insl
into
and
sub
sub
arpl
out
out
mov
jne
mulb
push
add
jns
push
call
in
aas
cltd
mov
mov
jecxz
inc
fs
sbb
in
out
adc
mov
in
mov
aad
mov
or
mov
mul
pop
cmp
pop
jae
cmp
sbb
rclb
fcomps
and
push
repnz
jecxz
dec
ds
sub
andl
jno
data16
sbb
push
add
inc
mov
popa
adc
rorb
jp
cmp
mov
insl
pop
outsl
dec
bound
xchg
mov
sbb
push
or
mov
int
cmpsb
sbb
cmp
lds
sbb
cwtl
dec
aam
dec
test
cmp
mov
xchg
xor
xchg
dec
int
mov
sti
ret
mov
pop
rcrb
sub
enter
jp
andb
or
inc
shrl
or
mov
xchg
call
and
pop
jno
or
sarl
push
subb
dec
jo
jl
xchg
mov
push
mov
das
xchg
fidivrs
int
into
jb
cli
xlat
inc
stos
dec
mov
test
mov
ds
movsl
dec
rorl
dec
pop
mov
push
sbb
ja
clc
xor
xchg
pop
movsl
das
ror
aad
mov
jno
sbb
push
sbb
test
pop
pop
mov
icebp
out
jo
fwait
sti
dec
inc
push
mov
jne
dec
enter
jg
ja
mov
ret
nop
sbb
mov
xchg
mov
cs
xchg
aam
call
loopne
push
loop
jae
xor
push
std
adc
cmpsb
adc
gs
lahf
xor
nop
jns
xchg
lret
into
sbb
mov
adc
cli
xchg
lret
movsl
pop
jmp
repnz
jle
cmpsl
xor
jge
je
sbb
cs
push
in
inc
les
adc
jmp
aas
xchg
cltd
cmp
and
or
mov
xchg
mov
jmp
rcrl
pop
inc
fwait
test
cmp
mov
aas
mov
mov
jnp
cmc
stos
xchg
add
jo
cmpl
imul
push
sub
xlat
sbb
mov
mov
lea
or
sub
cli
pop
test
dec
dec
dec
pop
orl
in
gs
fstpl
lods
outsl
movsb
xchg
and
stc
pop
jbe
and
addr16
cs
stos
push
testl
lods
fs
add
je
or
adc
popf
jne
pop
icebp
data16
in
inc
decl
push
mov
shl
arpl
inc
push
test
xchg
fidivl
sbb
fists
xchg
fdivl
jnp
std
ds
fs
aaa
into
idivb
inc
dec
mov
xchg
xchg
pop
aad
xchg
and
lret
pop
mov
stc
sub
incl
and
lret
into
mov
or
out
dec
mov
cmpsl
out
and
xchg
mov
or
and
jle
outsw
mov
pop
push
push
fidivrl
cmpsb
lea
pusha
fsubrp
cltd
sahf
mov
xchg
mov
scas
daa
movsb
push
inc
add
imul
subb
sbb
or
clc
lret
out
in
sbb
pop
inc
or
stos
add
inc
fcmovu
jno
rcrl
hlt
fsubrs
and
dec
push
popf
cmp
xchg
mov
movsl
cmp
clc
popf
xor
or
stos
dec
jge
cmp
or
adc
cmp
pop
fs
and
test
add
xchg
lret
xor
lret
adc
stc
idiv
push
rcrl
aad
rolb
add
loop
cmp
inc
pushf
and
inc
xchg
in
xchg
xchg
dec
inc
inc
fidivl
sbbb
int3
sarb
push
sbb
in
dec
jno
xor
push
hlt
or
add
je
jb
jne
iret
mov
lret
ds
into
sub
bound
mov
mov
push
xchg
insb
clc
pop
outsl
out
xchg
lcall
cmpsl
fdivs
int3
sub
jl
mov
jbe
shrl
mov
fucomi
sbb
mov
idivl
cmp
sub
push
mov
inc
lret
fldt
push
pushf
pop
mov
pop
pushf
loop
xlat
outsb
jae
dec
add
adc
jecxz
nop
mov
push
lretw
or
cmpl
jns
in
enter
push
lock
jg
cld
jns
sub
sbb
cwtl
push
testl
test
inc
sbb
mov
aad
push
leave
pop
dec
les
outsb
push
mov
mov
dec
je
dec
test
imul
xlat
and
xchg
insl
mov
scas
sbb
push
mov
fdivrs
stos
mov
mov
adc
test
rcr
cmp
mov
movsb
push
sub
pusha
mov
add
fdivrs
dec
mov
push
cmp
out
and
xor
and
jb
jnp
adcl
inc
sbb
push
insl
mov
pop
pop
dec
lods
xchg
dec
sub
xchg
inc
pop
mov
loopne
jl
pop
flds
jp
ljmp
jmp
aad
stc
nop
mov
sbb
pop
inc
adc
insb
inc
push
mov
or
sub
push
in
cwtl
out
or
push
aaa
mov
movsl
pushf
sarb
or
popa
lods
jp
sub
sahf
ss
je
in
push
lods
outsb
loope
xor
pop
push
addr16
aaa
push
push
push
inc
cmp
sub
js
or
pop
cmp
add
adc
mov
and
adc
fmull
in
dec
mov
jge
jbe
arpl
fdivrl
push
out
mov
jnp
adc
inc
inc
pushf
out
xchg
ss
data16
or
repz
xlat
xchg
inc
into
xchg
push
sbb
lock
aas
or
cs
xor
xor
loope,pt
sbbl
sbb
bound
lds
or
xor
and
pop
inc
pop
push
call
cmpsb
lret
pop
jb
pop
push
negb
adc
and
xorl
test
push
ljmp
call
call
cwtl
fcoml
xor
dec
inc
clc
or
xchg
add
or
inc
add
outsl
xchg
jns
pop
js
or
add
repz
stc
xchg
rcll
mov
xchg
add
xor
mul
aas
xchg
xlat
sbb
imul
inc
test
inc
outsl
xchg
fstl
mov
sbbl
stos
mov
fmull
jne
testl
fistpll
lcall
cmp
icebp
jns
pop
cmc
cmc
pop
mov
or
in
jmp
jge
inc
mov
xor
rcl
aaa
pop
push
mov
lock
push
fldcw
mov
stos
inc
sbb
int
in
lods
dec
add
mov
push
scas
stc
or
adc
ljmp
mov
jb
int
jg
fwait
mov
pop
xor
ljmp
dec
inc
out
repnz
jo
out
mov
data16
jmp
mov
mov
mov
ds
sbbl
jo
push
sub
sbb
das
movb
imul
jo
sahf
das
lcall
lcall
jne
hlt
xchg
outsb
jp
icebp
pop
movsb
push
rol
into
test
loop
push
fucomip
or
push
jle
and
add
mov
incb
and
sbb
dec
rclb
shll
sbb
add
pop
ret
popa
sub
negl
out
inc
repz
icebp
fcomps
fiaddl
or
cmp
adc
mov
ret
and
add
xchg
int3
mov
or
aam
insl
loopne
xor
mov
fwait
sub
mov
stos
xor
cmp
add
add
rcrb
int3
testb
pop
insl
xchg
push
jo
psadbw
mov
mov
repnz
outsl
jns
pop
or
sbb
cmp
imul
sbb
xor
outsb
pop
loopne
dec
fdiv
lds
dec
cmpsb
push
jnp
hlt
push
into
pop
arpl
or
sbb
jae
mov
fists
mov
sub
pop
xchg
jo
and
sub
pop
mov
lods
push
mov
cmp
into
push
aas
push
fiaddl
jmp
out
rcll
pop
dec
and
xchg
pop
mov
pop
stos
jp
xchg
sub
push
mov
in
mov
dec
int
mov
je
mov
into
xchg
mov
xchg
cmpl
or
stos
mov
xchg
mov
out
push
inc
dec
or
sbb
loope
push
test
add
push
das
inc
xlat
cmpsb
sti
add
lcall
inc
add
mov
add
aas
push
xchg
ret
pop
xorl
sub
repz
xlat
pop
xchg
sbb
mov
dec
push
sbb
lods
push
pop
mov
mov
xchg
xor
sbb
sbb
mov
scas
mov
iret
shll
push
movsb
ljmp
fisubrs
adc
add
adc
xchg
pop
addr16
pusha
pop
sub
fbstp
addr16
adc
mov
loopne
sub
add
fnstcw
cltd
xor
leave
movsl
mov
xor
loopne
dec
daa
jmp
aad
sti
mov
sub
enter
dec
sarl
insb
mov
xor
dec
sbb
js
cmp
mov
loopne
fidivrs
andl
ret
inc
sub
in
jns
mov
xchg
lock
pop
sbb
push
adc
testl
and
js
push
dec
sbbl
add
lahf
data16
push
xchg
add
jg
sub
test
xchg
int
dec
mov
push
out
roll
mov
push
popf
xor
pop
mov
or
mov
and
xchg
sub
incl
stos
cmp
xor
out
sbb
jae
in
cmp
mov
lahf
mov
imul
fdivs
xlat
jbe
or
xchg
cmpsl
cmp
nop
psubd
imul
xchg
pop
push
sbb
ret
fldenv
push
add
xchg
aaa
call
popl
push
xor
xchg
stc
or
cmp
aad
mov
and
or
xor
shll
fiaddl
dec
xorb
push
inc
mov
loop
adc
cli
xchg
cmp
sbb
ret
icebp
dec
xchg
dec
in
cmc
or
mov
shll
push
aad
push
and
or
out
push
and
cmp
inc
ja
push
cs
cmp
push
or
shlb
out
mov
lret
std
cmpsl
cld
adc
xor
jne
mov
arpl
clc
pop
rorb
icebp
jnp
fcmove
cmp
adcb
adc
call
inc
jl
test
repnz
jecxz
lcall
test
sbb
cmp
mul
ret
scas
es
stc
sbb
cmp
subb
cmp
jnp
cmp
dec
push
cmp
dec
lds
xchg
ret
out
dec
sbb
lock
xchg
dec
mulb
fstl
leave
bound
cwtl
inc
leave
pop
push
or
mov
add
lods
pusha
sti
pushf
adc
cmp
add
sub
test
mov
divb
mov
int
sub
cmp
lret
ficompl
icebp
mov
repz
mov
dec
mov
push
js
repz
ror
cmpb
xchg
jmp
mov
pushf
add
xor
adc
out
push
push
sub
dec
arpl
jo
push
push
adc
out
jle
sub
pop
cmp
jnp
inc
repnz
cmp
stos
xchg
jns
or
enter
push
dec
push
jl
pop
or
xchg
pop
mov
pop
nop
add
or
pop
popa
clc
inc
sbb
inc
inc
leave
mov
and
rorl
lret
call
or
push
xchg
push
adc
incb
in
mov
push
out
xchg
push
mov
push
cmp
insb
push
mov
mov
jno
mov
jno
sub
cld
dec
jno
dec
ljmp
shr
lret
cwtl
negb
rep
jmp
pop
adc
xor
mov
cs
aam
imull
sbb
pop
pop
fsubr
jne
sub
mov
push
inc
push
out
push
jo
or
fsubrp
shll
pushf
or
dec
fwait
cld
stc
in
insb
jle
cmpsb
test
sti
and
sbb
push
pandn
jp
xor
mov
jo
fs
xor
mov
and
jle
xor
xchg
mov
fcmovbe
inc
loope
fbld
adc
pushf
movsl
add
sti
xor
adc
mov
aas
jnp
daa
inc
scas
dec
dec
pop
xchg
stos
pusha
dec
mov
cmpps
sub
pusha
jge
inc
out
je
adc
inc
int
fidivl
test
in
int3
jg
cwtl
test
out
test
xchg
cli
xor
push
ljmp
jno
mov
mov
add
or
idivb
push
xor
in
push
ret
rolb
lods
mov
rcl
sub
enter
push
inc
or
cmp
pusha
fdivl
adc
out
adc
and
jp
mov
cs
push
push
push
clc
xchg
lds
cli
std
repnz
sbb
rol
adc
mov
mov
jp
das
and
push
adc
shll
in
or
add
icebp
xor
mov
sbb
pop
ds
sub
daa
push
ffree
mov
mov
scas
lahf
pop
cmpsl
sbb
mov
cmp
fwait
pop
test
mov
loopne
sub
lods
inc
into
les
movsl
and
fsubrl
push
jge
xrelease
or
mov
dec
inc
add
clc
adc
jne
mov
aam
jnp
pop
xor
and
aaa
enter
inc
insb
pop
sahf
out
add
ss
in
rcll
test
push
dec
sub
or
mov
mov
mov
sbb
daa
sub
xor
outsb
dec
loop
add
in
fsubr
cli
add
pop
idivb
jecxz
dec
xor
xor
arpl
das
add
mov
mov
fadds
lret
jne
dec
in
xlat
push
jmp
aad
icebp
dec
jno
shr
cmpsl
clc
xlat
sbb
int
movsb
sub
add
loopne
mov
cmp
push
aas
iret
nop
clc
pop
push
push
and
enter
jp
in
mov
pop
adc
mov
mov
mov
nop
mov
mov
cmc
jns
push
xor
popf
out
push
fs
adc
cmp
outsb
mov
lahf
mov
cltd
or
mov
sbb
out
inc
and
shl
das
xchg
jae
add
xor
cli
lods
jnp
insb
shlb
adcl
xchg
or
fs
movsl
lcall
inc
push
adc
cmp
repnz
sub
pop
mov
jp
push
jne
xchg
add
jns
jno
xor
enter
push
or
dec
fidivs
stos
push
pop
inc
test
mov
subl
pop
ret
hlt
push
add
sbb
pop
outsl
pusha
xchg
lods
xchg
out
rorb
mov
mov
dec
and
cmc
mov
sub
cld
cs
repz
test
into
mov
inc
cmp
xchg
dec
stc
jmp
rcrl
int
and
xchg
lock
push
jmp
jne
jo
xchg
sbb
push
or
mov
push
mov
fildl
push
adc
mov
add
paddusw
inc
adc
jmp
nop
mov
sbb
testl
cmpsb
cmp
dec
mov
sub
inc
pusha
call
fisttps
push
stos
subb
cmp
jno
pop
dec
pusha
adc
ficoms
lods
mov
int
mov
jns
jb
andl
or
stos
or
jl
xchg
pop
shrb
push
rorl
and
jecxz
xor
push
icebp
dec
push
ja
xchg
jl
inc
fnstenv
add
and
imul
cmp
adc
jbe
test
xchg
test
std
pushf
mov
jbe
fsts
clc
xor
popf
gs
ljmp
jl
jb
out
aam
in
adc
scas
loope
mov
scas
xor
push
test
in
data16
cmp
add
sbb
std
lds
scas
or
aas
cmp
cli
mov
lods
add
sahf
push
ds
je
cli
movsl
aad
into
andl
inc
fptan
js
xchg
pop
pusha
fxch
jno
insb
add
ss
mov
xlat
repz
inc
xchg
mov
outsl
add
movsb
aam
and
out
ret
or
xor
popf
mov
movsb
sub
mov
jns
mov
add
push
jmp
inc
mov
mov
imull
xchg
lahf
push
fstl
popf
add
lea
das
sub
rdpmc
rolb
js
sub
push
pusha
dec
cld
xchg
xchg
negb
lods
mov
mov
int
fdivs
test
jno
mov
fwait
push
inc
lret
sbb
ret
add
jbe
nop
push
ljmp
adc
sub
xchg
cmp
in
rorb
xlat
cmp
cmpl
or
mov
and
ds
push
arpl
loopne
popa
xorl
mov
pop
mov
lea
cs
loopne
jae
js
shll
shrl
scas
dec
mov
and
adc
loopne
mov
loop
add
add
or
dec
bound
push
hlt
fnstsw
cli
test
mov
xor
and
jae
or
aam
fistpll
and
scas
push
xor
and
in
test
cmp
out
cltd
es
ret
iret
push
pushf
push
mov
scas
imul
frstor
push
pushf
mov
xchg
add
jno
and
and
les
dec
xchg
testb
mov
lock
sub
inc
fsubr
cmp
gs
jle
test
cwtl
scas
int3
adc
ss
add
aas
push
test
mov
nop
repz
mov
gs
pop
rol
bound
je
mov
and
jge
fs
dec
call
adc
std
loopne
xor
negl
add
aaa
mov
movsl
pop
cmp
cld
dec
fs
inc
out
add
mov
cmpsb
cmc
pop
call
and
out
aas
in
les
push
mov
dec
jmp
lret
lock
data16
and
popa
push
mov
mov
xchg
add
mov
jl
xchg
sub
cld
sub
lock
mov
fsubp
sub
pop
sub
or
sbb
inc
lahf
aam
sbb
push
jge
adc
or
mov
das
or
icebp
int3
lds
imull
xchg
jae
pop
jmp
test
negl
sub
xchg
pop
mov
mov
pusha
mov
mov
mov
std
adc
shlb
and
les
mov
insl
sbb
add
jl
into
outsl
inc
lret
ljmp
xchg
jg
jno
mov
enter
jnp
mov
or
mov
mov
out
shlb
jns
out
int3
pop
push
sarb
outsl
and
pop
shlb
imul
cmp
lret
mov
push
jmp
iret
ds
ja
and
and
mov
sub
movsb
pop
xchg
js
shrb
jg
push
sbb
and
jmp
popf
mov
inc
and
decb
sti
jl
into
cmp
sahf
inc
fists
movsl
js
push
xchg
dec
jl
sub
fs
shlb
mov
lcall
cli
out
iret
dec
add
int
test
adc
lea
inc
or
repnz
dec
and
ljmp
mov
dec
mov
add
shll
insb
push
dec
lret
xor
mov
pop
out
aas
nop
push
fs
push
xor
imul
jle
inc
push
clc
cltd
lahf
mov
dec
outsl
inc
popa
mov
addr16
lock
outsl
push
test
lea
mov
jmp
pop
mull
sub
dec
push
decb
or
scas
out
fwait
and
daa
xlat
rcr
outsb
notl
xchg
lods
mov
add
jo
ja
test
mov
push
xchg
lahf
mov
imul
push
push
push
pop
loopne
and
aaa
in
addb
xchg
add
fisubrs
xor
imul
sbb
pushf
pushl
movsb
mov
test
pop
mov
ss
rcrl
or
cmc
mov
push
inc
out
icebp
jns
sbb
int3
push
sbb
adc
imul
sti
dec
fidivs
in
cs
adc
cld
jg
popa
push
insb
test
jl
dec
clc
adc
sub
insb
add
rorl
mov
in
xlat
xchg
jl
lock
or
pushf
mov
and
add
lods
mov
lcall
mov
fwait
jb
std
jo
sbb
cmp
pop
lret
push
add
movsb
repz
dec
or
add
sub
xor
fmull
cmc
xor
data16
sbb
mov
por
push
sub
adc
pushf
or
int3
add
out
sub
pop
idivl
push
pop
daa
jle
cmpsl
dec
movsl
pop
cmp
lds
mov
xor
shll
aas
aas
int3
popf
dec
push
sbb
pushf
nop
mov
cmp
mov
cwtl
ss
hlt
leave
xchg
test
pop
fnsave
loopne
call
mov
xchg
cli
push
sub
mov
sahf
lret
mov
aaa
aas
adc
or
cmpsb
js
dec
inc
lcall
inc
ja
sti
add
mov
mov
dec
lea
out
rcr
and
nop
pop
lock
js
je
push
nop
lods
mov
ljmp
jg
sbb
sbb
and
in
das
cmc
hlt
outsb
jl
ljmp
cmpsb
pop
xor
seta
dec
xchg
aad
imul
jle
imul
jmp
out
or
adc
push
jp
or
push
mov
test
and
lods
inc
dec
xor
test
xchg
and
mov
mov
or
and
push
daa
mov
imul
jno
add
inc
dec
insl
andl
das
mov
int
leave
je
sbb
into
mov
aaa
scas
add
push
pop
dec
cmpsl
cmp
sbbl
cvtpi2ps
cmp
cld
xchg
push
arpl
jo
sbb
mov
push
sbb
cld
sti
xchg
in
xor
cld
or
inc
mov
push
rcrl
stos
push
sub
cltd
imulb
leave
aaa
pop
push
dec
and
jl
repnz
xor
dec
cmp
cmp
mov
sbbl
or
out
jp
mov
rcll
pop
out
out
pop
cmpsl
fildll
repz
test
jecxz
mov
xor
push
out
test
dec
addr16
pop
push
mov
sahf
mov
pop
adc
call
sub
loop
insl
insl
sbb
xchg
dec
cmp
bnd
outsb
add
inc
mov
xchg
pushf
out
push
pop
cmp
mulb
in
add
cmp
push
in
or
nop
sub
or
pop
jb
add
xor
adc
jge
sbb
decl
xchg
int3
iret
lods
pop
cmc
mov
sub
imul
int3
adc
cmc
xchg
cli
inc
lock
and
sti
jbe
lret
inc
jmp
mov
mov
lret
les
insl
push
popf
sub
icebp
in
adc
push
lds
scas
insl
icebp
scas
stos
lods
ret
stos
mov
mov
andl
inc
fsubs
dec
push
mov
cs
aam
lods
pusha
les
xchg
repz
lret
fdivrs
fistps
xlat
cwtl
xchg
cmpsb
cmp
in
iret
pop
or
in
decb
mov
jae
cmp
pop
es
sub
ficomps
lret
pop
fisubrl
jg
sub
hlt
lock
loope
dec
rcll
idivb
cmp
and
push
out
popa
testl
push
mov
sbb
in
mov
notb
xor
fwait
sti
and
push
xorb
sub
inc
ja
lret
fldcw
mov
add
cmp
adc
imul
mov
leave
adc
in
jne
es
add
or
and
fdivl
fiadds
and
fisubl
mov
popa
cli
dec
adc
aaa
adc
or
movsb
mov
push
imul
adc
mov
data16
pusha
jp
out
insb
stos
orl
mov
lret
bound
movsl
addl
lds
push
sbb
mov
bound
push
xor
pop
call
mov
sbb
dec
dec
cltd
adcb
inc
push
mov
add
in
sbb
lock
mov
inc
xchg
aas
jbe
jmp
addr16
in
and
xchg
push
inc
push
or
ljmp
pop
pop
in
cmp
xor
jl
aam
aad
movsl
rcrl
mov
stos
xchg
ret
xchg
pop
sub
aas
jp
ljmp
test
push
dec
pop
stos
adc
inc
int3
fcmove
adc
in
push
mov
call
or
lahf
cmp
sbb
sbb
mov
sti
mov
pop
insl
pop
dec
xchg
jge
jle
mov
cmc
pop
sub
pop
pop
jl
mov
mov
push
sub
lret
stc
mov
jns
bound
das
sub
psrlq
dec
adc
inc
cwtl
jecxz
xor
or
adc
mov
lods
incb
icebp
movsl
push
stos
flds
daa
pop
mov
adc
jno
sbb
xlat
add
pop
mov
dec
addr16
pop
xchg
or
decb
xlat
fisubs
cwtl
inc
jb
jno
mov
cli
dec
cmp
scas
clc
lahf
lcall
fstp
icebp
lcall
jp
add
push
repz
ljmp
xchg
xor
mov
stos
jp
adc
je
xlat
mov
add
mov
inc
shrb
mov
pop
in
dec
mov
imul
push
pop
ds
fcomps
dec
push
and
pop
idivb
imul
cmp
lahf
sub
rcl
lods
in
imul
test
lret
jp
mov
cmpsb
jle
lret
pushl
jp
inc
roll
and
pusha
xchg
shlb
push
pop
scas
push
lret
cmp
adc
mov
popa
movsl
mov
aas
jl
xlat
je
pop
andb
xchg
movl
jl
ja
sbb
aas
mov
adc
stos
leave
mov
adc
sub
jno
push
int3
adc
mov
mov
in
ja
movsb
inc
or
fwait
jle
arpl
mov
xchg
bound
scas
push
inc
sbb
fistpll
imul
mov
lds
sub
jp
xor
js
xlat
sarl
add
and
inc
insl
loopne
sbb
xchg
dec
xchg
mov
dec
mov
insl
jl
mov
dec
mov
add
lock
adc
adc
pop
hlt
jns
fdivrl
add
negl
jb
in
xchg
outsl
aad
sub
pop
es
aad
sbb
test
mov
jmp
subl
dec
pusha
mov
mov
push
call
jge
pop
test
imul
jl
enter
aam
jns
xchg
pushf
or
mov
mov
mov
sub
loopne
mov
fcmovnb
shrl
push
in
inc
pop
sub
fs
or
push
sbb
mov
jne
sub
lret
jl
subb
or
pop
cmp
addr16
cmp
mov
mov
inc
pop
imul
push
sti
inc
push
lods
sub
std
cs
iret
xor
pop
sar
pop
mov
in
aad
and
mov
cld
jb
lods
add
xor
pop
cmpsb
add
mov
lods
mov
mov
into
imul
out
scas
mov
cmpsl
cld
add
sub
and
fsts
mulb
dec
pop
jp
scas
sub
ds
in
scas
jl
mov
aam
imul
shlb
inc
xor
fs
jae
sub
mov
inc
mov
sub
mov
sub
dec
ds
push
testb
enterw
xor
cli
add
mov
cli
adc
out
sti
ret
xor
cmpsb
les
or
test
jb
out
test
into
push
ret
jle
fsubrl
jl
sub
push
pop
or
adc
andl
int3
lret
xchg
jns
andb
sbb
lahf
adc
mov
icebp
mov
fst
testb
cmp
fmuls
shlb
mov
in
stos
hlt
repnz
fcompl
orl
dec
dec
sbbl
push
call
jmp
outsl
das
mov
jle
outsl
sub
dec
lock
dec
pop
cmp
mov
or
inc
fsubrs
adc
add
push
pop
add
inc
ret
fwait
lock
inc
push
inc
in
pop
cmpsb
xor
iret
dec
mov
push
fwait
inc
mov
fpatan
push
out
loopne
pop
fmuls
test
cli
push
cs
pop
add
mov
pop
and
mov
lret
dec
outsl
ret
gs
cld
sub
mov
dec
pop
add
xchg
fiaddl
mov
loopne
arpl
pop
cmp
cmpsb
inc
out
sarl
insb
cli
dec
dec
cmp
cmp
js
stc
mov
rolb
push
mov
and
add
xchg
xchg
fimuls
xor
push
aam
xchg
inc
hlt
data16
jecxz
imul
jle
orl
movsl
aad
stos
ljmp
or
lods
jmp
cmpsl
dec
cmp
pop
mov
mov
fwait
daa
mov
push
lods
call
add
out
push
lret
mov
loope
adc
jbe
in
movsb
jnp
lret
adc
xor
mov
push
test
push
mov
scas
subb
out
cmp
cli
movsl
jl
addr16
add
push
ficompl
sub
out
cmpsl
pop
icebp
cwtl
and
cmp
cmp
lret
xor
stc
push
jno
clc
sub
clc
call
lods
jo
clc
dec
inc
sti
adc
ret
lods
push
fnstcw
fs
mov
push
mov
inc
scas
dec
push
push
int
jno
lret
xor
into
adc
push
jp
xor
cwtl
lcall
dec
imul
push
mov
addr16
jl
mov
xor
out
rolb
in
or
cld
arpl
xor
aaa
jb
ret
mov
sahf
cld
xchg
adc
push
outsb
cs
and
jne
fldenv
adc
mov
cmp
jmp
mov
xchg
add
push
in
push
jecxz
popf
pop
loopne
es
or
ret
orl
mov
mov
dec
inc
ficoml
add
aas
loop
stos
xchg
dec
xor
or
fdiv
rorb
jl
mov
movsl
jecxz
push
sub
or
sbb
orl
ffreep
push
test
dec
push
pushf
mov
int3
mov
adc
aam
out
stos
or
mov
cltd
test
scas
cmp
icebp
add
pop
clc
bnd
test
dec
loopne
divl
data16
lret
cs
push
insl
faddp
xor
jmp
popa
gs
js
pop
insb
fisttps
push
cwtl
pop
in
dec
mov
lods
scas
or
cltd
mov
imul
lock
stos
pop
call
fildl
jne
xchg
insb
sub
push
iret
loope
nop
dec
pop
int3
jecxz
clc
cld
mov
fiadds
and
int3
iret
sbb
aas
jp
mov
fisubs
mov
mov
pop
pop
cmp
gs
push
popa
add
xchg
cld
fwait
jl
out
test
inc
cwtl
or
and
mov
fucomp
mov
test
mov
xchg
or
mov
scas
cmp
pop
cld
or
arpl
sub
popa
pop
aas
call
add
adc
mov
sahf
jb
pop
data16
kortestq
popa
aas
ret
and
fdivl
sahf
addr16
mov
in
scas
lret
imul
out
cmp
ljmp
outsb
xchg
fcomps
pop
xchg
pop
mov
fcomps
pop
popf
loopne
lret
pop
mov
arpl
xchg
or
jge
cmpsb
mov
jecxz
lret
cld
pop
push
inc
jno
pop
daa
xchg
xchg
lock
aad
sti
lods
inc
shl
insl
in
xor
jns
leave
mov
addr16
add
sub
lods
cmp
neg
ja
scas
test
mov
mov
fstps
push
call
sub
add
or
adc
lret
aam
clc
out
push
inc
dec
test
xchg
ljmp
shlb
mov
sub
push
bnd
sub
insl
sub
iret
xchg
sub
lds
xor
sbb
cmp
ret
pop
fldenv
or
mov
bound
or
mov
cmp
ljmp
xor
leave
pop
loop
in
xchg
adc
jmp
mov
mov
int
push
xchg
imul
push
bound
push
jnp
mov
lock
xor
insb
xchg
sub
or
mov
pop
jg
lods
lock
inc
jbe
out
test
and
stc
inc
jne
or
push
mov
enter
std
repz
mov
sub
or
sbb
mov
add
leave
pop
popf
iret
mov
stc
jae
mov
and
insb
pushl
lahf
dec
sub
fcoml
dec
sub
in
jle
and
xor
xor
and
mov
dec
xchg
addr16
loope
or
shrb
sbb
or
push
jge
daa
loope
xor
sahf
sub
cltd
cmp
cmpsl
xor
xor
scas
js
iret
push
dec
stos
xchg
movsl
sub
lahf
hlt
adc
or
fidivl
lods
sub
stos
mov
mov
jge
les
std
jo
jo
loopne
sub
sbbl
loope
jg
sbb
sbb
sub
jmp
sbb
clc
adc
aam
into
rcrl
imul
push
shrl
roll
push
xchg
sub
mov
mov
pop
lret
push
inc
dec
push
fs
es
xor
pop
mov
leave
not
pop
pop
and
pop
adc
pop
fmull
mov
dec
xchg
jns
xchg
lock
inc
push
jmp
xchg
adc
adc
or
jne
push
test
or
dec
or
repz
push
in
pop
jns
xchg
call
push
xchg
leave
lods
mov
mov
sbb
and
xchg
aam
rcrb
and
sub
pop
push
dec
xchg
imul
jge
xchg
mov
pop
call
add
jge
mov
and
out
xchg
pop
insl
add
dec
nop
daa
aas
or
adcl
jmp
add
mov
cli
pushf
push
lods
punpckldq
push
aad
lret
enter
jnp
sbb
rcr
repnz
mov
test
mov
mov
pop
fs
push
push
ret
or
jge
jmp
fs
fadds
push
pop
push
negl
stos
inc
jns
into
gs
ja
fsub
shrl
test
push
cld
push
cmpsl
ds
add
mov
or
scas
jnp
clc
fucom
aam
flds
sub
std
push
and
push
adc
jl
add
jp
insb
ret
pop
pusha
xlat
in
add
cmpsb
cmp
cwtl
sahf
test
dec
rcrl
jmp
ficomps
rorb
imul
pop
cmp
jg
xor
xchg
int
or
push
ficompl
push
push
and
xchg
sub
loop
rcl
aas
ret
aaa
test
leave
iret
loopne
in
sbb
int
xchg
dec
mov
sti
jne
ret
or
adc
ja
fs
and
sbb
mov
and
shrb
push
xchg
and
or
add
ds
inc
loop
sbb
cmpsb
mov
imull
push
outsl
jbe
mov
es
mov
lds
adc
test
je
add
fbstp
inc
ljmp
dec
aaa
icebp
dec
xor
shrl
lret
dec
mov
neg
ret
je
or
or
mov
scas
stos
popf
test
dec
orb
testl
rorl
cmp
adc
shl
cmp
aaa
movsb
addr16
std
lods
and
icebp
sarb
dec
testl
xchg
in
mov
movl
xor
dec
sub
outsb
add
sbb
or
mov
or
push
in
and
mov
imul
or
nop
sub
mov
cld
xor
mov
fidivrs
push
inc
mov
mov
add
test
jecxz
jnp
jmp
nop
pusha
ja
dec
imul
cli
mov
pop
sbbb
arpl
ficompl
inc
push
and
xchg
pop
les
mov
call
dec
fwait
xor
cli
mov
cmp
imul
pop
sbb
mov
add
jg
inc
stos
sbb
xchg
mov
pop
xor
pop
fsts
cmpsb
iret
sub
out
mov
dec
mov
subb
mov
testl
loopne
inc
das
jb
ljmp
push
sub
aad
dec
jb
xor
outsl
std
xchg
mov
ret
test
lock
or
dec
out
std
popf
lods
add
out
jae
cli
mov
stc
bound
es
or
or
aam
fstps
mov
jmp
daa
cmp
xor
jbe
js
mov
jmp
pop
jno
dec
cmp
cmp
fmuls
scas
cmp
xor
mov
mov
imul
sub
add
leave
fldt
call
xchg
add
cmp
push
fsts
aam
test
or
add
push
xchg
mov
xor
push
jbe
push
cmp
rcrl
outsb
cwtl
imul
insb
dec
std
cs
insl
out
lret
or
mov
in
mov
in
inc
sbb
dec
cld
mov
in
mov
fnstcw
or
mov
cmp
mov
jle
movsl
mov
fbstp
xchg
push
sbb
sbb
shll
stc
push
data16
sarb
jl
in
popf
mov
in
pop
mov
cltd
jecxz
rorl
jge
cld
insb
out
js
cld
or
bound
int3
add
lock
xor
test
scas
ljmp
sub
jo
aas
push
cli
rorb
in
inc
fildll
loopne
ss
jae
cmp
cpuid
or
nop
mov
cmpl
push
xchg
iret
movsl
lcall
insl
call
push
stos
aaa
popf
sub
and
xlat
outsb
sub
loop
nop
out
cmpsb
pop
cmpsb
sahf
clc
outsb
movsl
fisttps
mov
dec
rorb
out
sti
jbe
movsb
sub
subl
ret
lret
cs
leave
jne
cmp
xor
adc
rolb
xchg
sub
jne
loop
mov
in
push
pusha
incb
outsb
sbb
pop
arpl
push
leave
push
or
jae
outsb
mov
popa
fsubr
mov
sti
lods
lds
dec
adc
imul
jmp
fmulp
sbb
imull
push
add
nop
sub
jg
and
mov
int
imul
push
jb,pt
sub
push
out
xor
pushf
dec
in
stos
in
popa
mov
xor
push
jge
sub
mov
jmp
mov
int3
xchg
add
inc
and
xor
xor
pushf
mov
jne
jl
adc
mov
cld
cltd
sub
out
sbb
mov
insb
das
add
fwait
popf
cmpsl
cld
and
inc
jb
stos
in
ficoml
sbbb
insb
out
leave
mov
test
push
jmp
pop
sbb
cmp
dec
xor
loopne
jge
sbb
mov
jns
lahf
stos
xchg
and
loop
icebp
or
fimuls
insb
pusha
movsb
cmp
orb
mov
push
stos
mov
mov
cmp
call
or
cmp
lret
ret
pop
mov
outsb
dec
cmp
outsl
pop
xor
repnz
ret
ja
pop
xchg
sbb
pushf
les
psllq
push
inc
mov
clc
lret
popa
movsl
xchg
mov
jmp
loopne
mov
ds
pushf
jg
xor
mov
sbb
rorl
mov
repnz
pop
insb
adc
mov
dec
mov
int3
mov
cmc
sar
add
pop
push
push
fisubrl
or
mov
repnz
es
push
cwtl
cmc
and
inc
xchg
mov
sbb
mov
cli
pop
fcom
imul
sbb
push
je
add
mov
movsb
addr16
cld
mov
push
std
aam
sub
fwait
dec
jmp
imull
fcompl
subb
ret
or
lock
shrl
jle
in
lret
push
fbstp
daa
rorl
hlt
in
sti
push
cwtl
sbb
test
daa
lock
or
arpl
inc
mov
push
sub
inc
cmp
dec
into
movsb
mov
add
pop
sar
mov
cmc
mov
loopne
int
sar
push
enter
cmpsl
ja
sbb
fwait
dec
add
xchg
addr16
lock
inc
loopne
pushf
cmp
sbb
jl
or
pop
std
pop
and
pushf
insl
rcrl
mov
mov
aas
pop
aad
pushf
mov
xchg
fwait
xchg
arpl
mov
repnz
in
inc
out
int3
cmc
mov
aas
sbb
mov
adc
testb
jnp
dec
lds
hlt
xchg
lcall
cmp
aam
fcoms
in
or
pop
out
sub
lds
ja
cmp
pusha
add
test
jge
or
jl
fwait
nop
xchg
movsl
rorl
popf
cmp
popa
or
cmp
icebp
mov
js
ljmp
cmp
popa
pusha
notl
testl
mov
inc
or
mov
jg
or
data16
int
das
mov
test
mov
pop
jl
out
fucomip
mov
repnz
test
cltd
movsw
jno
andb
dec
push
movsl
call
jae
mov
inc
fdivl
pusha
push
push
icebp
sahf
mov
jb
subb
das
in
cmpsl
in
adc
mov
test
xchg
add
or
insb
fnstsw
jp
adc
bound
fwait
mov
clc
jmp
cs
fiadds
jo
imul
aam
pop
daa
or
ret
lds
or
mov
fildl
jo
mov
and
or
mov
jb
testl
in
dec
daa
outsb
repz
and
jb
andl
jp
insb
imul
xchg
or
jbe
mov
xchg
xor
cmc
pop
test
out
repnz
jmp
dec
aaa
les
cmc
js
cmp
aam
data16
adc
cmp
sub
incb
cmpsb
outsb
fildll
jp
sbbb
cmp
inc
push
fdivs
xchg
or
std
pop
ret
outsl
and
xor
cmp
loopne
pop
fiadds
lret
repnz
imull
sub
test
arpl
jne
lret
xchg
jbe
xchg
andl
test
dec
cmp
jnp
cli
inc
or
pushf
bound
cwtl
pusha
mov
movb
mov
hlt
pop
push
mov
cmp
popa
push
mov
jne
fidivrs
adc
test
push
mov
aas
cs
imul
fisttpll
aam
movsb
sub
adc
mov
lret
das
pop
and
inc
mov
mov
adc
pop
mov
shrl
push
mov
fcompl
out
xchg
fistpl
loopne
add
clc
inc
imul
outsl
lcall
xlat
outsl
dec
dec
lds
dec
and
mov
bound
fstl
lea
xchg
clc
sbb
je
test
and
xor
sub
stc
mov
mov
add
or
cld
and
jg
push
pop
ficompl
sub
enter
mov
shll
lret
aad
fs
enter
outsb
sbb
cmp
mov
xchg
mov
js
aad
icebp
sbb
jb
iret
mov
fs
push
out
jecxz
out
and
or
aaa
xchg
or
or
mov
ljmp
lret
lods
repz
xchg
movsl
add
imul
lret
add
div
sbb
pushf
lods
lcall
sbb
inc
stos
cmp
cli
or
xor
or
mov
push
mov
lods
sub
adc
mov
push
ds
mov
xor
and
jge
test
mov
xlat
mov
stos
inc
push
popf
jae
in
fldcw
add
push
mov
mov
scas
sbb
data16
outsb
pop
stos
xor
sub
lcall
xchg
enter
mov
and
ds
out
out
pusha
mov
xor
fwait
and
sbb
ror
mov
sbb
je
xlat
mov
mov
xor
or
pop
pop
loope
dec
pop
std
sahf
hlt
cmp
sub
imul
pop
cltd
push
mov
iret
inc
pushf
pop
mov
and
ret
push
or
inc
and
pushf
or
adc
incb
stos
stc
cmpl
jae
test
outsb
leave
inc
xor
jb
cs
push
js
xor
fs
fcompl
or
rorb
mov
push
pop
repnz
mov
pusha
xlat
addl
movsb
mov
push
inc
cltd
add
je
negl
xor
scas
inc
int3
cmpb
stos
mov
aam
and
jle
mov
ljmp
mov
jae
add
call
test
mov
pop
repz
popa
cli
push
push
dec
xchg
fdecstp
outsl
or
repz
addr16
xchg
les
aas
ffree
add
add
and
repz
or
mov
jmp
cmc
sub
cmp
inc
sub
pop
pop
gs
cmp
add
sbb
bound
cmp
mov
daa
sub
fldt
leave
test
pop
xor
jo
movsb
gs
mov
les
shl
xor
xchg
cmpsb
push
pop
lock
adc
insb
lea
cmp
cld
mov
stos
enter
adc
mov
add
jo
fsubrl
sti
stos
in
xor
sbb
xchg
rcll
out
out
pop
dec
popf
ret
mov
cmp
cmc
inc
xlat
rclb
inc
idivl
popa
dec
bound
rcll
jge
xor
sbb
mov
stos
mov
add
adc
fwait
int3
fadd
dec
fsubr
popf
add
insl
sub
mov
mov
inc
fstp
push
leave
test
fmuls
push
orb
out
push
loopne
popf
int
add
xor
adc
ss
out
pop
mov
fs
xlat
mov
dec
fsubrp
loope
jns
xchg
test
push
repnz
pop
cmp
push
daa
icebp
out
clc
sahf
add
jno
ret
arpl
xchg
mov
and
jg
push
sub
jle
pop
xchg
out
sti
bound
push
addr16
xor
mov
popf
faddp
iret
add
and
mov
add
sahf
lods
mov
and
cmp
jbe
sbb
xchg
clc
imul
sbb
dec
cmp
mov
and
inc
jge
lcall
lods
sbb
jp
fidivrl
xor
dec
adcb
or
inc
cmpsl
and
jae
icebp
fs
pop
insb
inc
xor
push
add
push
out
jb
push
test
lahf
mov
sbb
pusha
lods
clc
or
xor
cmpb
xor
xchg
xor
ret
pop
mov
sub
fidivrs
xchg
out
push
lcall
pop
fsubrl
movsl
loopne
dec
add
aam
mov
mov
insl
add
pop
aas
pop
idivb
cs
dec
xchg
add
insl
xlat
inc
push
mov
sub
inc
fbld
xor
js
loop
mov
adc
and
aad
inc
movb
sbb
ljmp
jmp
jp
push
or
cmpsl
jns
sbb
nop
ret
push
or
loopne
dec
mov
sub
sbb
sahf
and
jno
roll
jg
or
cmpsb
cmp
cmp
lahf
mov
xchg
loope
push
sbb
sti
stos
fs
push
movl
out
test
hlt
or
xchg
add
les
and
inc
push
inc
inc
mov
fisttpl
test
sarl
add
xor
xchg
xchg
xorl
cmp
aam
out
xchg
adc
pop
add
les
stc
in
scas
out
mov
jle
hlt
rcll
mov
inc
icebp
jp
jbe
stc
nop
or
in
clc
adc
loope
pop
mov
in
icebp
adc
scas
in
subl
pop
data16
mov
pop
cmp
xchg
lret
in
jmp
mov
push
dec
xchg
sub
mov
pop
push
mov
ja
xor
add
xchg
xor
in
cmpsb
pop
imul
lret
lret
xor
in
stos
ja
mov
mov
xchg
orb
mov
mov
in
jecxz
nop
fsubl
ret
cmpl
in
fdivrs
in
jle
and
dec
cmp
cmc
pop
mov
sub
repz
icebp
or
pop
icebp
cmc
mov
js
out
rclb
into
dec
mov
fcoml
mov
or
dec
push
jb
ds
or
mov
repnz
data16
cwtl
mov
fmuls
xor
in
mov
int
sti
es
xlat
pushf
pushl
std
adc
insl
xchg
pop
test
sub
xor
add
dec
stos
inc
sbb
je
jnp
outsl
adc
cltd
xor
repz
rolb
lahf
mov
ret
jns
pop
push
mov
sub
ja
and
add
inc
lods
xor
pop
push
dec
dec
mov
add
ljmp
out
dec
inc
sbb
iret
call
or
inc
cmpsb
arpl
test
aam
fdivr
aad
xor
or
cs
cmp
out
hlt
sysret
sbb
cmp
jne
pusha
lock
mov
inc
cld
hlt
xchg
mov
das
push
daa
or
push
loopne
test
jmp
jo
add
mov
mov
push
push
mov
adc
idivb
sub
test
icebp
lds
add
jae
shl
lea
or
stos
pop
mov
and
aaa
fistpll
mov
pop
mov
add
stos
fdivl
into
ret
aam
ljmp
outsb
dec
adcl
xlat
add
mov
stc
out
adcl
pop
movsb
push
call
xchg
out
je
imul
or
mov
dec
mov
add
repz
push
cmp
ds
and
inc
hlt
dec
ret
jnp
push
nop
dec
in
arpl
mulb
push
cs
fidivrs
mov
call
sub
stc
nop
xchg
or
mov
std
push
dec
ja
test
sti
orb
test
loop
sbb
imul
or
lcall
pop
pop
adc
inc
popl
inc
fs
or
cli
cmp
sub
pop
sbb
ret
mov
leave
mov
aam
xchg
stc
mov
pop
dec
stos
test
sbb
aam
mov
jle
data16
icebp
cmp
push
cltd
pushf
sbb
lahf
push
in
and
cmp
add
sub
fld
sub
insl
pushf
pop
and
jge,pt
je
clc
and
cmp
out
cmpsb
dec
sbb
cld
sbb
pop
psadbw
or
fs
add
add
outsl
loop
lods
xor
push
jp
orl
iret
stos
loopne
rcl
and
add
js
scas
push
in
fildll
dec
push
shrb
jge
mov
pop
jae
mov
xor
inc
xchg
es
adc
sbb
out
and
test
xor
iret
push
or
stc
push
pop
mov
cltd
cmp
sbb
mov
mov
push
sub
xchg
add
in
pop
popf
fsubrs
jl
lods
cmp
jno
push
scas
inc
lret
enter
mov
push
mov
scas
mov
sbb
xor
cmp
cmpsb
stos
maxps
mov
or
jno
jns
inc
cmp
sbb
sbb
push
sub
add
mov
xor
bound
test
mov
push
jmp
push
stc
jmp
inc
pop
fcompp
jo
cmp
loope
orb
sbb
into
inc
loope
stos
lcall
stos
and
inc
xor
add
pop
ljmp
ror
adc
mov
clc
jle
or
cmpsl
outsb
loope
xchg
int
rcrl
or
and
leave
dec
add
repnz
sub
add
data16
push
fs
aam
mov
jne
inc
pop
inc
int
andb
inc
pop
push
jno
leave
cwtl
mov
mov
ja
in
cld
cld
mov
mov
or
mov
fbstp
loope
iret
push
rolb
movsb
and
test
cmp
inc
test
inc
and
out
adc
dec
inc
out
movsl
icebp
lock
push
jno
add
ret
sti
dec
jp
lahf
loopne
xchg
adc
jbe
fwait
xchg
sub
adc
xchg
insl
loopne
jnp
sub
adc
sub
sbb
and
push
sbb
inc
lret
mov
nop
cmp
sub
sub
addr16
sbbl
xor
cmpsb
or
fsubr
lods
imul
sbb
xchg
sbb
fdivs
mov
xor
sub
out
pop
xchg
ffree
roll
aam
sbb
fwait
outsb
mov
mov
jge
lcall
push
push
imul
mov
jae
jnp
mov
and
jb
pop
out
adc
sbbl
cmc
jbe
jae
and
xchg
xchg
sub
lahf
icebp
setno
int3
enter
push
xchg
outsl
fiaddl
in
ficoml
mov
push
negb
fdivr
adc
daa
mov
sarl
sub
leave
push
aas
and
jo
add
lret
mov
mov
sarl
ret
mov
je
fsubs
dec
cmp
enter
negl
stos
popf
sbb
inc
rorb
out
pusha
cmp
adc
pop
sub
mov
mov
call
stos
cmp
je
and
fidivrs
cmp
or
jno
sbb
sub
repnz
jge
daa
aam
or
dec
pusha
ljmp
mov
sub
or
aad
nop
scas
fsubl
cmc
rcll
sub
mov
dec
jo
bound
xchg
notl
mov
inc
inc
in
out
in
lcall
loopne
sub
imul
xchg
ret
pop
xor
jae
push
loope
ficomps
jp
int
push
pop
pop
mov
cmp
jecxz
jnp
sbb
or
push
push
ja
pop
insl
ds
add
insl
insb
pop
mov
arpl
imul
fstps
sti
sub
int3
outsl
out
adc
je
inc
mov
xlat
jp
into
mov
fwait
xchg
or
movb
dec
add
mov
rol
sub
sbb
cmp
add
repnz
xchg
das
loop
cltd
dec
lret
in
andb
sahf
inc
inc
dec
xchg
xchg
stos
aad
jne
jmp
jg
sub
shll
cmp
inc
and
cmp
pop
push
jl
fnstenv
out
mov
mov
loope
and
fcompl
jb
lods
xchg
fadds
dec
and
sysenter
lret
inc
add
lods
jne
mov
iret
xchg
xor
or
out
adc
xchg
jns
cmp
and
lods
sti
xchg
adc
in
cltd
add
mov
adc
push
jg
mov
in
rorb
and
mov
pop
mov
ret
jge
cli
sub
sbb
aaa
leave
outsl
and
inc
inc
ds
mov
rclb
test
roll
repz
cmp
dec
lds
push
test
or
adc
stos
mov
cwtl
fildll
xor
faddl
inc
sub
dec
lret
data16
mov
test
insb
orb
inc
imul
dec
call
push
ds
int3
dec
daa
aaa
pusha
add
mov
cli
outsb
mov
xchg
scas
popa
pop
nop
push
sub
rorl
adc
xchg
ds
test
xlat
mov
pop
cmc
jmp
loopne
adc
push
sbb
xchg
add
inc
push
je
aam
in
mov
mov
or
adc
aam
jle
sbb
in
jge
jnp
shl
inc
mov
or
js
sbb
stos
out
mov
add
addl
cmp
iret
fldt
and
mov
hlt
cli
pushf
ss
mov
mov
jg
mov
push
jmp
add
push
mov
dec
inc
or
push
fstpt
push
call
inc
in
outsl
push
pop
clc
mov
push
xchg
jo
lds
test
or
es
dec
mov
jp
pop
scas
std
xchg
push
push
xor
cmp
test
dec
or
xchg
xchg
adc
sub
jae
lret
lock
fmull
xor
xchg
adc
popa
and
xchg
sub
pop
mov
push
jle
popf
dec
mov
and
and
sahf
mov
dec
xor
adcb
and
ja
js
in
pop
jp
mov
out
and
pop
in
gs
jmp
jne
gs
mov
xor
sarb
test
shll
pop
subl
sbb
adc
dec
ror
loope
mov
gs
sbb
inc
shrb
imul
fchs
push
jne
pop
mov
test
stos
test
jno
in
mov
mov
arpl
mov
xor
cmp
adc
push
jecxz
bound
xchg
imul
lcall
cli
lcall
xor
jnp
jge
cmp
cmp
push
jo
cmc
mov
dec
xchg
cmp
movl
xor
lds
scas
mov
aad
unpcklps
jo
pop
pop
pop
rcl
xor
popa
jnp
mov
outsb
mov
and
sub
push
cld
sub
ja
hlt
jle
sbbl
cmp
mov
xchg
sbb
mov
inc
cltd
mov
fstl
jle
aaa
or
dec
mov
sub
jb
mov
movsl
push
cmpl
jno
jno
cmp
hlt
test
inc
xchg
dec
cmp
cmp
je
add
xor
xlat
outsl
xorl
test
jne
fldl
aad
adc
shll
cli
push
bound
ss
cmp
cmp
movsb
jecxz
xor
pop
call
shrl
pop
push
aas
addl
cmc
adc
mov
movsl
sub
sbb
pop
inc
cli
add
mov
fildl
xchg
sbbb
cmc
es
sbb
dec
cs
dec
mov
dec
add
jnp
stos
jno
ss
sbb
mov
push
subps
out
mov
fs
jmp
les
add
xor
movsl
in
mov
pop
jne
sahf
lock
ss
rcrl
xchg
sub
inc
int3
leave
in
inc
inc
mov
dec
xchg
jne
je
push
jns
lock
subb
mov
dec
mov
in
sub
call
push
fldpi
cmp
xor
pusha
adc
inc
orl
or
cmp
sub
pop
sub
dec
fdivrs
enter
fisubl
aad
sub
mov
dec
xlat
repz
sub
ror
test
lret
and
aam
in
lods
dec
js
sti
les
rcr
sbb
jmp
mov
pop
add
push
mov
dec
mov
call
add
sti
repnz
xor
cmpl
fdivs
test
xchg
mov
cmp
cmpsb
out
lahf
es
cmpsl
adcl
bswap
push
and
addr16
inc
jne
pop
add
adc
inc
test
ss
ja
push
mov
roll
push
sub
sub
fisubl
xchg
mov
dec
pop
leave
out
jnp
lock
or
pop
repnz
bnd
sub
mov
leave
jnp
movsl
outsl
test
push
js
mov
mov
pop
mov
jno
cmpsb
rcrl
and
pop
pop
mov
outsb
stc
addl
jge
lcall
cli
test
jle
or
push
push
add
lahf
pop
add
add
lock
dec
jns
lods
xor
test
test
push
call
cmc
fcomp
ret
pop
push
pop
test
nop
insb
pop
add
xchg
dec
loop
pop
mov
sarl
cmp
jo
int3
ss
lret
lret
cmp
fstpt
loope
scas
pop
arpl
push
inc
mov
nop
loop
nop
fwait
mov
jo
jmp
cmpsl
ret
in
or
push
popf
mov
notl
fldln2
add
jge
xchg
imul
sbb
pop
inc
ljmp
sub
xchg
repnz
leave
pop
cmp
jne
loop
pop
push
lcall
addr16
add
incb
xchg
cmpsl
cmp
leave
dec
hlt
repz
add
xor
jbe
mov
push
sub
stos
push
lcall
cltd
push
lods
adc
cmp
je
loope
lcall
pop
iret
or
gs
inc
lcall
inc
fsub
inc
je
xchg
fsubr
cld
jbe
lods
mov
and
adc
cmp
ljmp
mov
push
mov
or
or
lods
nop
sbbb
aad
xchg
and
mov
add
ret
sbb
out
outsl
enter
add
fadds
pop
mov
cmp
ret
stos
call
int
repnz
cmp
inc
sahf
mov
and
jns
jae
into
loop
push
or
push
or
or
insb
je
cmp
mov
xor
or
xchg
mov
sbb
jmp
cmp
enter
xchg
repnz
sbb
pop
jnp
adc
fcom
pop
inc
jl
or
mov
pushf
xlat
jmp
jne
inc
push
pop
mov
lods
cmp
insb
sub
outsb
jp
cld
push
xlat
rol
outsl
jle
push
mov
lahf
testb
and
xor
out
adc
pop
inc
mov
cmp
mov
ss
xchg
mov
or
add
mov
xchg
jmp
add
dec
add
adc
mov
and
aam
xchg
ret
add
mov
lods
xchg
mov
xlat
repz
test
mov
insb
pop
sbb
mov
or
and
push
pop
push
sti
popf
mov
pop
rcll
repnz
fisttpll
cmpsl
mov
adc
or
loop
push
testb
std
adc
pushf
pop
ret
and
or
popf
xor
repz
sbb
jmp
xchg
adc
sarb
popa
mov
and
sbb
inc
punpckhdq
mov
adc
pop
lods
inc
push
or
arpl
test
add
cmp
inc
js
in
test
push
xor
out
mov
scas
stos
pusha
int3
rorb
sub
cmp
lods
jp
pop
lret
jecxz
add
mov
jge
add
mov
jp
pop
xchg
xchg
jo
mov
push
mov
sahf
adc
sub
cmp
into
fldt
popa
and
imul
fisttps
jmp
sti
sbb
js
in
jle
xchg
mov
pop
push
imul
mov
cmp
bound
dec
mulb
fistpll
xchg
gs
ret
arpl
shrb
imul
sbb
mov
lds
gs
outsb
int3
gs
int3
push
lea
aaa
jl
notb
add
pop
dec
jmp
pop
outsl
jp
jl
lock
lea
pop
popf
sti
adc
dec
push
rcll
add
sbb
movl
dec
sarb
inc
dec
ss
shrb
push
dec
and
es
or
and
imul
cmp
jle
shl
push
dec
dec
adc
mov
sub
dec
ja
mov
mov
call
fcomp
mov
in
pop
cmpsb
sub
mov
cmp
int
test
or
inc
divl
cmpsb
add
xor
pop
dec
mov
jno
out
push
loop
cmpsl
pop
cmc
dec
shlb
and
repz
lret
adc
gs
sub
pop
loope
test
imul
dec
movsl
lea
lret
stos
jbe
add
mov
sbb
dec
fwait
lahf
cs
lahf
add
jo
cmp
loop
pop
dec
dec
xchg
jnp
inc
and
mov
xor
jecxz
and
add
movsl
push
xchg
push
sbb
iret
hlt
xchg
in
cmp
mov
mov
xlat
xor
notb
push
mov
push
lds
bound
rorl
inc
in
icebp
inc
mov
sub
icebp
mov
loopne
movsl
mov
jle
xor
dec
mov
nop
aas
aad
or
mov
aas
adc
mov
mov
pushf
cs
adc
fimuls
pop
rorl
sub
push
mov
dec
cli
push
fs
xchg
data16
mov
ret
ret
dec
dec
js
loop
push
pop
ret
sbb
jle
xor
push
or
cmc
cmp
idivl
scas
pop
mov
lret
aam
int3
nop
negl
outsb
push
loope
testl
lds
mov
push
outsl
sbb
xlat
and
sti
mov
movsl
cmpsl
mov
insl
mov
subl
movsb
sub
js
push
or
cltd
xchg
adc
shl
or
xor
dec
pop
and
pop
popf
mov
add
arpl
mov
jmp
loop
add
xor
or
inc
in
xor
cs
cmc
xchg
ljmp
leave
fdivrs
lods
jl
cmp
jecxz
and
inc
pop
push
push
call
adc
inc
lods
mov
sbb
or
jge
mov
in
nop
fnstcw
pop
nop
sahf
ss
outsl
mov
cmp
inc
push
sbb
aam
pop
outsl
and
jb
push
xchg
mov
xor
inc
stos
fsubs
adc
cltd
ja
aad
mov
lock
cmc
cmp
and
flds
sti
inc
mov
inc
lret
mov
inc
bound
push
adc
pop
xchg
or
popf
dec
pop
iret
sub
sarb
gs
adc
jmp
aam
jmp
sbb
insl
adc
mov
cmp
roll
orb
ret
shlb
mov
adc
mov
mov
call
inc
mov
cmp
jmp
sti
sub
ret
add
sub
xlat
inc
call
out
xchg
jns
les
outsb
add
lcall
xchg
inc
mov
lock
xchg
cmp
or
cs
jno
xor
xor
scas
pop
xchg
sbb
mov
das
cmp
push
xchg
jbe
int
aam
mov
stos
rolb
es
cmp
pop
les
xor
in
out
cli
sbb
xor
rorb
out
mov
mov
inc
shrb
adc
sbb
xchg
dec
cld
push
aam
fcompl
mov
mov
cmp
pusha
dec
std
jne
rorb
lahf
int3
or
jmp
jmp
sbb
cli
sub
cmc
fwait
inc
mov
rcrb
mov
pop
mov
cmc
test
and
lea
xor
or
in
dec
stos
test
fidivs
out
test
bound
fiadds
cmp
shrl
add
mov
in
mov
pop
push
mov
mov
test
jl
sub
and
seta
loop
push
mov
sarl
int3
repz
mov
testb
cmp
xchg
stos
inc
sbb
rclw
icebp
rorl
loop
or
ficoml
jp
xchg
xlat
add
andb
out
std
sarl
xor
aam
ss
ljmp
vcvttsd2si
lods
inc
test
rol
lods
leave
lret
mov
mov
in
icebp
dec
out
cli
xchg
inc
inc
cmc
mov
aas
addl
inc
fimull
sbb
scas
sarl
inc
repnz
int
mov
push
dec
adc
out
xor
push
aad
sub
xor
test
xchg
add
add
loop
arpl
push
nop
cmp
cwtl
dec
insl
mov
jge
jnp
stc
fs
stc
fldl
xor
cmp
push
or
or
enter
inc
shr
pushf
pop
lds
jle
sub
xorb
lret
aad
pop
cmp
sub
jge
inc
pop
test
inc
ret
nop
xlat
jb
popa
lret
jecxz
insl
out
lret
adc
jne
repz
int3
decl
call
xchg
mov
rcll
mov
cmp
push
ficoml
push
inc
adc
add
jmp
jno
or
mov
ficompl
mov
leave
pusha
xchg
mov
out
mov
aas
loope
add
and
mov
fisttpll
push
lods
dec
adc
inc
sub
push
push
jno
mov
pop
push
js
insl
stos
jbe
xor
arpl
es
negb
add
push
mulb
jmp
lods
arpl
cmp
sahf
adc
ret
in
movsb
fsubrs
push
lods
hlt
mov
testl
sub
out
into
stos
pop
je
fisttps
movsb
mov
imul
aad
ds
mov
iret
sbbl
jb
pop
push
jb
lahf
jecxz
sub
repz
mov
lock
inc
dec
fdivs
mov
popf
xor
nop
xchg
insl
dec
sbb
ss
mov
adc
push
roll
popa
cmp
js
sbb
ret
cmp
aad
inc
cmp
inc
iret
xor
verr
push
in
dec
adc
jl
cmp
mov
xor
test
dec
and
mov
sub
adc
push
pop
in
cli
or
mov
mov
jne
cmp
add
adcl
cmp
adcl
push
sahf
xor
out
test
jg
jecxz
xchg
in
ret
fs
push
sub
add
mov
loop
jbe
mov
jns
sahf
cli
aam
sbb
popl
aas
or
sub
sub
loop
jno
negl
cmp
jp
test
popf
stc
sti
insb
je
sahf
mov
pop
imul
and
iret
ljmp
xchg
mov
dec
enter
rcrb
sub
rclb
pop
lret
out
fbld
mov
xor
mov
jecxz
or
cmc
stc
shl
enter
iret
jnp
inc
iret
cmp
jb
movsl
imul
xor
and
jnp
xchg
into
icebp
jl
bound
xor
or
cmp
ds
test
pop
loope
jb
jl
mov
mov
push
cli
xchg
jecxz
adc
mov
cwtl
out
jecxz
xchg
ja
adc
lds
or
mov
mov
popa
pop
pushf
jo
gs
mov
lods
adc
mov
sub
loope
add
test
inc
inc
pshufw
outsl
push
cwtl
add
cmp
xor
dec
pop
nop
test
pop
sahf
out
or
inc
cmp
xor
mov
cltd
push
test
popf
mov
lea
push
sub
dec
or
xor
bound
popa
xor
mov
inc
fs
mov
nop
lcall
sub
or
mov
or
orb
pop
test
xchg
mov
xor
cmp
repnz
insl
call
popf
fmuls
sahf
push
mov
push
lock
insl
popa
push
std
push
nop
insl
jge
clc
push
mov
imul
adc
sti
or
inc
movsl
push
fcoml
fcomip
push
inc
ja
in
sub
push
mov
push
fisttpll
loope
inc
out
ljmp
mov
in
mov
fsubrp
xor
adc
mov
clc
cmpsl
repnz
and
sbbb
rolb
ret
and
adc
mov
mov
call
dec
ljmp
hlt
and
inc
frstor
xchg
ja
std
mov
inc
jb
cmpsl
xchg
jb
pushf
jecxz
cs
adc
test
push
xchg
xor
lret
pop
sahf
jb
fs
xor
xchg
outsl
or
mov
ljmp
fistl
or
dec
test
push
xchg
jnp
iret
mov
xchg
enter
insb
fisttpll
repnz
xchg
mov
xchg
addr16
pop
cmp
push
insb
scas
xchg
lahf
pop
test
dec
out
inc
daa
incb
test
out
daa
jecxz
push
inc
adc
sub
stos
insl
pop
sahf
sahf
jecxz
dec
mov
pop
out
adc
and
ficoml
lods
pop
jnp,pn
fstpl
lret
xchg
or
pop
add
inc
mov
hlt
pop
and
ds
leave
and
pop
ljmp
cmp
sbb
xor
push
push
pushf
xor
sub
imul
aam
sub
pop
mov
insb
mov
push
loope
xchg
testl
ljmp
out
cmp
or
xchg
icebp
sub
rclb
sbb
nop
inc
loopne
addr16
test
cmp
push
out
mov
cmpsb
and
movsl
mov
adc
mov
std
or
lcall
jmp
iret
sbb
cmpsl
sahf
jno
std
lds
je
push
or
lods
dec
psrlw
and
call
cmpsl
mov
xor
jmp
mov
sti
dec
fyl2x
xchg
scas
jns
shlb
dec
or
cwtl
das
nop
lods
int3
lea
in
imul
inc
loope
adc
popw
movsb
aad
andl
dec
push
pop
popa
rcll
ficomps
jnp
imul
push
adc
xor
popf
out
xlat
mov
data16
mov
adc
scas
in
rolb
mov
cmpsb
jae
mov
test
out
xchg
xchg
ja
fwait
mov
rorl
shl
pop
push
rcl
mov
cmp
xor
dec
jnp
into
insl
pusha
cmp
pop
fnstsw
adc
adc
insb
adc
lods
inc
enter
pop
and
js
sub
sbb
jb
or
leave
xlat
pop
movsb
mov
inc
pop
data16
test
fldt
iret
sbb
pop
cli
mov
or
pusha
xorl
jb
jle
mov
push
push
loope
aaa
mov
cmpsb
inc
jecxz
add
sub
scas
dec
xchg
cmp
movsb
orb
dec
repz
test
aam
imul
or
insl
in
or
leave
sub
pop
test
pop
aas
je
es
mov
lds
push
aad
cmp
push
in
xlat
ret
or
jb
les
mov
daa
sbb
sti
sbb
add
popa
mov
fildll
or
dec
scas
sbb
cltd
add
cmp
mov
jecxz
ljmp
mov
pop
adc
cli
mov
inc
push
subb
mov
nop
mov
test
dec
add
adc
cmp
inc
add
sbb
idiv
aad
jno
clc
jg
adc
cmp
jns
movsl
and
adc
xor
dec
es
and
scas
xchg
inc
pop
icebp
lods
xor
pop
mov
push
gs
push
and
mov
shr
ss
sub
pushf
mov
push
repnz
push
lods
ljmp
cmc
cmp
fwait
cmp
jno
repz
push
mov
adc
push
ds
inc
or
imul
scas
aaa
out
imul
and
mov
mov
in
call
jmp
xchg
in
adc
inc
mov
xor
add
das
neg
pop
and
stos
pop
sahf
and
jp
outsl
sbb
pop
xchg
jnp
xchg
sbb
xchg
jge
lea
mov
sbb
adc
repz
xor
shl
xchg
mov
leave
aam
shlb
insb
aas
scas
inc
pop
cmpsb
dec
cmpsl
mov
push
pop
jp
outsl
mov
int
dec
sub
cmp
fdivrs
bound
jmp
jecxz
je
fisttpl
adc
daa
pop
stos
out
lock
and
ret
fldt
adc
test
pushf
cmpsl
ljmp
xchg
sti
and
cmp
sbb
push
notl
jmp
fidivl
mov
inc
mov
sarb
mov
mov
lahf
sub
subl
icebp
pop
mov
fwait
mov
sbb
fisubrs
inc
dec
xlat
xchg
or
or
clc
pop
insl
ffree
scas
push
push
idivl
out
fwait
or
inc
xor
dec
inc
inc
test
sub
in
cli
je
adc
lods
aaa
cltd
xor
cmpsl
xor
xor
cmp
dec
add
dec
outsb
jge
fisubrl
nop
xchg
dec
push
rcrl
aas
fbstp
les
fadd
xchg
push
jo
add
leave
dec
mov
push
mov
lods
sti
lds
mov
lret
add
ja
lock
sbbl
fs
and
ljmp
push
mov
xchg
mov
in
push
xchg
mov
faddl
nop
imulb
ret
fldl2t
jp
dec
pop
sub
pushf
ds
movsb
mov
xchg
or
arpl
sub
or
dec
pop
mov
xchg
push
jae
adc
fsubs
add
mov
lret
and
imul
pop
lds
jno
xorb
shlb
cmp
fucomp
push
mov
pushf
dec
sub
pop
push
cmp
in
icebp
aas
imul
jmp
jp
frstor
outsl
fidivs
push
in
push
data16
hlt
mov
push
pop
dec
test
fstpt
test
inc
xchg
iret
dec
xlat
scas
lods
out
cwtl
pop
in
jns
xor
add
push
mov
or
sarb
pop
test
sbb
pop
sub
cmp
push
mov
lock
movsb
ja
xchg
xor
mov
ret
ret
or
push
fcoms
es
sub
push
subb
loopne
sub
pop
mov
inc
out
mulb
into
add
int3
cmp
mov
fdivl
bound
inc
cmc
sar
or
rol
cwtl
lods
add
insl
xchg
les
out
xorl
sub
call
cmpsl
fsubrl
dec
mov
lock
jl
inc
mov
pop
adc
mov
pop
jmp
decl
cmp
fstps
sbb
jns
mov
push
xchg
cmp
les
pop
sub
icebp
shrb
bound
rol
lock
cmp
pop
das
fs
xor
iret
pop
divl
sbb
mov
mov
daa
gs
inc
sbb
jb
mov
xchg
mov
mov
out
lock
addr16
testl
dec
cs
inc
call
inc
pop
lret
out
adcb
int3
and
gs
sub
push
int3
andb
mov
cmp
mov
cwtl
jns
sub
std
inc
fbld
inc
pop
dec
cmp
out
xchg
and
cmpsl
jo
dec
movsl
push
rcrl
jle
fistl
mov
dec
jnp
add
adc
xor
cltd
ja
push
xor
test
inc
inc
mov
repnz
xchg
js
mov
pop
jp
jecxz
adc
test
mov
int
lock
jmp
pop
push
aaa
shlb
loope
mov
sti
popf
scas
dec
mov
adc
fdivs
hlt
push
push
push
cmp
jns
push
mov
inc
in
shr
gs
xchg
mov
ja
lcall
imul
and
pop
aad
filds
cmpsb
es
in
test
shrl
out
mov
lods
lret
or
arpl
mov
inc
mov
and
cmpsl
jb
pop
decb
cmp
aam
pop
add
ret
ret
les
das
addr16
dec
pusha
aaa
cli
push
pop
jbe
pop
shlb
and
shl
add
cli
or
jle
std
add
je
xchg
in
dec
in
pusha
jne
rol
add
dec
mov
mov
jmp
cmpb
fisubs
mov
pushf
push
inc
sti
mov
js
movsl
and
fistl
push
hlt
push
out
out
sbb
ficoms
inc
imul
mov
push
mov
xorps
test
movsl
inc
mov
and
add
sti
push
jbe
fidivrs
inc
xor
imul
lret
addr16
cld
mov
fcoml
push
push
lcall
cwtl
out
adc
sbb
jg
lea
out
push
and
sbb
dec
call
dec
push
jo
dec
hlt
dec
mov
adcb
enter
test
mov
push
push
lds
lret
sub
pop
xor
cmc
cmp
es
les
dec
inc
pop
out
outsl
out
popa
sbb
dec
movb
int
jo
lods
sub
sub
jae
push
loope
mov
dec
test
sbb
pushf
cmp
cmp
jl
mov
inc
mov
add
int3
push
int3
xor
and
test
inc
rorl
divb
xor
jle
mov
out
inc
and
jbe
mov
mov
pusha
push
stos
xchg
roll
or
xor
xor
subl
icebp
pop
jae
test
sub
and
dec
cmp
cs
insl
cld
mov
pop
subl
sbb
xor
mov
incb
popf
cmpb
sub
jae
lods
cmpl
pop
push
cmp
mov
xor
aad
push
sub
adc
pop
lds
stos
xor
pop
pop
stos
xchg
sub
push
or
lods
cmp
cmpsb
sbb
cmc
in
and
pop
xchg
pop
popa
sar
push
xchg
xchg
cld
dec
push
loop
shl
repnz
aaa
cmpsb
popf
sub
aad
jo
movsl
mov
jbe
aam
cld
mov
push
mov
cmp
xchg
scas
movsb
dec
xlat
pavgw
inc
sbb
ja
lcall
mov
jno
sbb
movsl
rorl
jl
or
and
fsubl
xchg
and
adc
jecxz
fwait
out
fistps
add
les
mov
sub
hlt
shlb
pop
and
push
stc
and
ja
les
pusha
js
es
jb
int3
popa
or
scas
inc
mov
stos
into
xchg
dec
mov
fisttpl
fidivl
in
ret
mov
lods
mov
lods
adc
add
cli
sbb
push
ficoms
iret
gs
mov
int
inc
xchg
ror
add
aad
out
add
in
and
adc
mov
rcrb
add
xor
js
rcrl
dec
stc
jnp
sahf
push
cmp
xor
sub
popf
hlt
lcall
jle
xor
clc
ljmp
mov
mov
inc
sti
mov
stos
pop
icebp
push
repnz
jae
push
push
pusha
pop
sti
out
dec
sbbb
jge
xor
dec
in
jb
popf
jmp
cwtl
aas
jmp
inc
pop
repz
mov
test
cmpsb
lock
insl
testb
xchg
jns
movsb
mov
xor
bound
ss
loopne
xor
adc
push
cmp
mov
sti
push
mov
test
dec
push
insb
pop
in
pushf
divb
inc
loope
sbb
mov
or
out
leave
fs
cmpsb
mov
mov
mov
mov
ret
bound
add
inc
popa
add
mov
in
mov
jmp
arpl
call
jle
xor
push
and
jno
cmpsl
xchg
iret
divb
in
insb
jb
out
cmp
lock
xchg
in
imul
mov
add
loop
push
fwait
lcall
movsl
xchg
shrl
xor
pop
cltd
lock
mov
test
out
js
or
inc
mov
scas
jg
loope
enter
imul
das
inc
mov
inc
cld
mov
push
push
mov
dec
add
mov
ljmp
in
dec
and
mov
dec
into
dec
add
sarb
cmp
enter
pop
das
push
mov
movsb
mov
cmpb
jae
das
dec
jp
sbb
cmpsl
mov
pop
xor
sti
cmp
mov
mov
sbbl
mov
inc
popa
das
imul
inc
push
or
ror
outsl
pusha
test
sub
push
inc
pop
inc
mov
nop
mov
sbb
xor
stc
outsb
add
test
sbb
push
repnz
out
cli
cld
rolb
pop
pop
push
inc
sub
lods
mov
sub
rclb
jnp
imul
push
sub
aaa
mov
jns
mov
pop
lock
jle
push
lret
andl
or
or
rcrb
sbb
or
or
mov
ret
jecxz
mov
lea
and
int3
xchg
xor
cmovnp
xor
add
fstpt
mov
xor
mov
fcmovbe
push
adc
gs
xlat
push
imul
mov
insl
mov
fnstcw
push
leave
cmp
or
popa
cmp
movsb
sbb
push
push
fs
mov
sbb
push
lret
jbe
lods
or
mov
xor
shrl
xchg
mov
or
rcr
xchg
loop
sahf
mov
mov
mov
xor
cs
sub
jo
fbstp
imul
xor
int
jecxz
mov
in
jmp
pop
or
ds
inc
pop
pop
imul
insl
cmp
adc
mov
fdiv
xrelease
pop
in
mov
lahf
cmc
adc
inc
xor
cmp
decb
movsb
sarb
fmull
pop
jmp
add
icebp
punpckhwd
das
or
push
sub
out
add
xor
pop
adc
fildl
adc
xlat
testb
je
sub
decl
or
and
insl
test
lahf
add
xlat
add
test
loope
push
fimuls
jnp
jg
test
cltd
in
add
pop
mov
mov
dec
orb
push
xor
cmp
fisttps
lahf
fld
and
lea
mov
orl
mov
cmp
int
pop
add
add
cwtl
jno
dec
xchg
mov
aas
mov
xlat
sbbb
insb
cmp
mov
push
xlat
and
and
pop
int
or
jg
pop
push
into
sub
in
xor
jmp
ss
push
mov
int3
ja
mov
in
scas
nop
pop
fstps
sub
dec
movb
rorb
mov
sbb
into
out
inc
in
jmp
dec
cmc
adc
jle
pop
dec
add
mov
jbe
add
dec
into
out
mov
inc
dec
lret
xor
cld
inc
stc
loope
push
sub
adc
loopne
push
cltd
mov
cmpsl
push
lret
mov
push
out
jne
imul
lahf
out
mov
lock
mov
push
mov
inc
lahf
cld
std
montmul
cmpsb
movb
gs
cmp
out
icebp
dec
fcmovne
push
adc
dec
stos
fucomp
add
mov
stc
mov
add
rolb
imul
or
jg
fistpl
lods
push
rcl
aas
mov
mov
pusha
mov
jbe
shrl
push
xchg
jns
cmp
push
in
in
sbb
idivl
mov
stos
movsl
ret
lret
addr16
adc
xchg
fldcw
movsb
into
into
pop
mov
mov
sbb
or
into
jge
jmp
test
aam
lret
mov
andb
jno
jnp
dec
cmp
fstl
sub
outsl
repnz
mov
cmp
popa
and
xchg
mov
loopne
jne
cltd
push
decb
mov
outsl
inc
std
dec
jg
in
mov
dec
dec
xchg
mov
cs
sub
mov
andb
inc
arpl
cmp
hlt
shl
subb
movsl
push
inc
mov
bnd
jo
xchg
pop
adc
sahf
add
inc
adc
movsl
and
sahf
xor
add
inc
cmp
aas
out
jne
addb
xchg
dec
jae
xor
mov
cmp
lret
js
xchg
jge
pop
or
repz
fs
ja
clc
les
jp
enter
adc
in
xchg
aad
jb
adc
add
mov
adc
adc
xchg
push
or
jne
and
xchg
call
rclb
orb
addb
negb
jo
adc
insl
push
pushf
stos
je
xchg
push
lods
fldt
push
push
sti
mov
xchg
test
and
imulb
jb
and
scas
pop
repnz
call
jno
int3
pop
adc
mov
mov
push
in
mov
hlt
pop
pop
test
out
sub
mov
test
in
xor
test
lret
jge
stc
pop
sahf
or
push
ret
test
lcall
dec
lods
add
cs
adc
xor
jns
jecxz
dec
in
sub
mov
mov
icebp
sbb
mov
rcrl
sbb
jae
ret
clc
mov
fnstsw
add
in
pop
addb
rol
xchg
leave
xor
sbb
in
pop
les
cmp
ret
filds
int
sbb
mov
xor
xor
mov
cmp
dec
pop
arpl
mov
push
rcr
roll
and
bt
push
orl
popf
xlat
xor
pushl
rorl
aad
jnp
sbb
ljmp
jp
xchg
mov
xchg
scas
into
or
stc
mov
aam
ss
add
adc
vsqrtpd
mov
mov
dec
clc
lds
pop
aas
nop
ret
sbb
cmp
fwait
mov
push
xor
adc
fdivrl
popa
aaa
or
mov
loope
clc
popf
xchg
jns
lret
add
jmp
repz
popl
adc
orl
out
and
or
mov
or
std
or
negl
add
add
cmp
mov
ljmp
add
jbe
pop
mov
je
lret
and
dec
into
gs
aas
jge
shlb
xchg
pop
enter
push
dec
out
pop
mov
adc
nop
xchg
dec
shr
dec
mov
mov
push
adc
push
push
sbb
pop
jae
pop
ds
les
icebp
imul
leave
aad
adc
dec
rolb
mov
ds
sbb
push
push
push
xchg
testb
mov
jae
mov
jo
mov
and
pushf
xchg
dec
dec
rclb
dec
out
jp
pop
daa
adcb
add
inc
or
push
test
pop
cmc
lcall
jne
mov
mov
mov
fnstsw
jge
int3
fcoml
pop
mov
sti
popa
jg
pop
ret
dec
mov
inc
mov
pop
inc
adc
orl
cmp
pop
call
hlt
imul
les
in
add
popa
andl
adc
in
xchg
aas
das
and
loop
push
rorl
adc
push
jo
inc
push
mov
nop
sbb
sbb
mov
in
mov
fsubrs
mov
lahf
pusha
xor
aam
scas
inc
adc
xchg
mov
and
jecxz
mov
or
clc
jbe
mov
or
into
and
sbb
in
push
jg
lahf
push
imul
xor
imulb
cmp
dec
mov
movsl
mov
mov
lods
pop
jnp
sti
jae
aas
lds
xchg
add
aas
xchg
in
adc
pusha
je
pop
sub
pop
inc
push
ljmp
shl
ljmp
ss
aam
cmc
fdivrl
negl
jle
popf
imul
push
ret
in
out
push
addb
xchg
repz
push
and
sub
jae
sub
dec
mov
mov
inc
lods
in
fs
ja
mov
popa
in
or
sbb
aad
xor
jl
xor
push
xchg
jp
rcll
add
stc
sbbl
push
lcall
lock
pusha
sti
jo
iret
test
ffreep
cmpsb
push
sbbl
or
insl
bswap
int
inc
xor
jb
xlat
lret
ja
push
scas
inc
call
dec
int
shll
xchg
mov
fisttps
rorl
add
sub
dec
pushf
push
test
shrb
add
pop
in
test
idivl
imul
sbb
rorb
add
sub
shlb
popa
into
xchg
inc
push
mov
mov
ss
aad
mov
fucomi
add
mov
stc
xchg
aas
xchg
pop
sbb
sub
imul
sbb
std
es
stos
sbb
push
sbb
xchg
outsb
jmp
inc
jmp
mov
cmp
loopne
stc
adc
shrb
and
repz
test
pop
jmp
inc
mov
mov
sbb
test
push
icebp
clc
inc
fisubrl
jo
cmpb
popa
imul
repnz
mov
jle
cmp
cltd
hlt
xchg
jns
sbb
inc
fadds
push
in
xchg
push
or
ds
jl
cmp
lcall
or
ljmp
sub
gs
loope
out
pop
test
cmp
jb
dec
popa
jne
arpl
sahf
stos
mov
pushf
into
cwtl
pop
fnstsw
rol
cmc
mov
mov
jo
sbb
mov
sub
pushw
xchg
pop
mov
push
or
mov
adc
or
mov
int
cwtl
push
mov
fwait
sti
clc
and
lods
stos
ds
pop
int3
mov
lods
sbb
lea
fcomps
inc
dec
xorl
ds
stos
fildll
mov
jecxz
out
jno
add
xor
xor
hlt
pop
pop
sbb
adc
js
jl
ret
xor
leave
add
push
mov
mov
mov
mov
add
movsl
or
mov
pusha
fs
fadd
jnp
iret
push
or
cmp
sbb
xchg
addr16
jmp
mov
incl
and
mov
inc
fdivl
sahf
cmp
jp
mov
push
iret
pop
loope
dec
jp
push
hlt
xor
imul
sub
inc
mov
push
arpl
mov
add
xchg
mov
mov
jle
jecxz
sti
sbb
cmc
in
mov
hlt
xorb
fs
add
dec
rcll
jo
mov
jg
xchg
cld
popf
lods
xlat
add
jnp
dec
pushf
mov
cli
xchg
mov
dec
call
mov
ds
ss
iret
fcmovnb
shr
sbb
dec
pop
insb
cmpsl
sahf
mov
push
inc
fadds
and
mov
adc
outsb
shrl
popf
push
testl
jno,pt
mov
loop
push
adc
daa
cli
stos
cmp
mov
test
movsb
insl
cld
inc
cli
daa
sti
fstpt
movsb
jmp
or
cmp
nop
jnp
in
scas
lock
cmc
out
aam
or
fcomp
stos
push
push
scas
test
gs
jae
sbb
and
or
mov
mov
iret
shl
sbb
add
scas
jp
pusha
cmp
push
call
sub
outsl
push
push
dec
or
mov
mov
out
jne
xchg
outsb
stos
fisubrl
jae
sub
rcrl
js
lods
movsl
mov
push
stos
pusha
sbbl
roll
or
mov
out
mov
fldl
sub
dec
loope
dec
inc
jmp
push
movsl
cld
add
mov
and
mov
ret
mov
fbstp
hlt
or
dec
mov
idivb
sub
out
mov
lods
adc
bound
xchg
sbbb
mov
inc
pop
in
frstor
xchg
pop
xor
or
leave
adc
mov
addr16
sub
xchg
inc
out
jge
movsl
sub
sbb
xchg
or
add
in
sub
pop
sbb
nop
xchg
mov
xor
imul
or
push
je
jl
stos
xchg
jae
mov
jno
or
or
push
cmp
insb
shrl
xchg
xor
pushf
popf
scas
pminub
mov
mov
repz
stos
mov
js
aaa
sub
lock
inc
fcmovne
idivb
ret
fnsetpm(287
lods
sbbl
gs
sbb
movl
in
mov
fisubrl
rcrl
jns
push
lods
movsl
dec
push
repnz
sub
jmp
mov
loopne
addl
mov
jb
sbb
dec
test
mov
ret
repz
adc
data16
je
dec
shr
lds
test
and
std
mov
inc
testl
test
rolb
loopne
lcall
movsb
roll
outsl
push
iret
sub
scas
jmp
sub
cwtl
mov
mov
jmp
mov
loop
fisubrl
lds
outsl
loop
push
jecxz
xchg
stos
aas
cmp
add
fcmovbe
sbb
rol
add
out
pop
push
in
decl
imul
add
popa
or
lock
xchg
das
fdivrs
cltd
out
js
cltd
mov
push
in
cli
stos
sbb
or
xchg
lods
loop
fstpl
cltd
sbbb
in
ds
jae
sbb
mov
add
dec
dec
jecxz
mov
pop
mov
mov
cwtl
mov
sbb
adc
cmp
push
sbbl
sub
divb
xchg
inc
sbb
add
icebp
mov
and
pop
jecxz
mov
nop
arpl
sbb
ret
pop
fwait
mov
sub
ret
jmp
pop
adc
lret
das
sub
fwait
add
sbb
pop
cmpsb
cmp
mov
enter
lret
ret
push
je
js
push
popf
lret
mov
popf
and
test
pop
push
dec
mov
cmpsb
xor
loopne
popf
push
sbb
test
movsl
mov
rorb
lahf
andb
xchg
mov
inc
mov
mov
lods
loope
stc
je
mov
inc
test
pop
push
jmp
cld
aas
mov
dec
ret
call
or
xor
jge
test
filds
hlt
push
loope
xor
xlat
push
cmc
roll
cltd
in
cmp
xchg
outsb
or
cmpsb
pop
repnz
fsts
scas
fisttps
sub
sub
adc
cmp
shll
arpl
push
ljmp
jno
sub
call
xchg
jge
and
sete
sbb
icebp
insb
into
out
cmc
push
add
jno
ret
loope
push
and
out
sub
dec
testb
xor
mov
cmp
mov
leave
int3
pop
mov
xor
enter
dec
jmp
jl
and
mov
add
jo
repnz
xchg
sbb
movsb
sahf
cmp
andl
js
lods
sub
add
sti
aas
imul
mov
decb
divb
pop
movsb
pusha
fmuls
or
xchg
fnsave
subb
cmp
xchg
push
je
cmp
mov
int3
mov
popa
int3
add
outsl
adc
fs
icebp
pop
test
pop
bts
xchg
daa
ret
inc
sahf
mov
lods
ss
pop
cwtl
aam
cltd
lds
or
xor
fistpl
stos
cmpsb
lock
and
lcall
sbb
in
sub
xor
jns
or
inc
xchg
jmp
add
inc
cltd
fisubl
push
pop
sti
jecxz
push
adc
mov
shlb
repz
imul
add
push
push
cmp
add
cmp
sbb
pop
imul
mov
into
and
ret
in
xor
popa
or
mov
es
arpl
stos
adc
leave
pop
or
mov
into
dec
jbe
sti
jg
rolb
xchg
lods
aad
mov
adc
into
cmp
lcall
into
pop
popl
in
addr16
fdivr
mov
push
js
lds
inc
es
push
imul
dec
sub
lcall
fldl
in
imul
lods
jmp
leave
mov
push
and
mov
in
nop
daa
ret
stc
call
mov
fiadds
jbe
ss
mov
adc
test
pushf
fs
sub
pop
and
roll
xor
mov
push
and
add
pop
push
aaa
enter
pop
mov
daa
loopne
xchg
pop
inc
dec
fildl
jo
adc
cmp
inc
adc
sbb
pop
adc
out
cmp
mull
jmp
dec
movsl
popl
mov
inc
in
lret
sbb
dec
psubusb
cmp
dec
addr16
pop
lods
inc
mov
push
nop
test
fistl
inc
mov
xchg
cs
sti
test
std
dec
std
data16
clc
or
rcl
jge
add
mov
xchg
scas
mov
mov
mov
iret
enter
pop
jmp
ret
add
in
pop
cmp
stos
jge
insb
mov
push
icebp
and
pop
dec
stos
xchg
js
inc
int3
dec
xchg
rcll
dec
mov
shr
pop
popf
inc
lret
cmpsl
ret
add
enter
movsl
xor
pop
out
sbb
sub
data16
dec
mov
repz
sub
fstpl
dec
pop
mov
cmp
inc
decl
xchg
mov
xorl
sbb
je
out
sbb
sub
xchg
add
jns
adcl
arpl
xor
pop
inc
out
fnstcw
dec
out
leave
pusha
xor
mov
std
push
and
cmp
xchg
pop
inc
mov
jg
inc
dec
push
sahf
stos
add
ret
imul
push
out
andb
cwtl
mov
jno
mov
sahf
dec
lcall
hlt
stos
push
add
jbe
pusha
pop
jmp
sub
aam
fidivrl
push
ret
mov
mov
insb
jle
pusha
add
scas
push
repz
cld
sub
flds
jge
jb
pop
ret
jno
in
outsl
insl
mov
add
das
negl
scas
push
pop
jbe
mov
push
push
scas
into
das
loopne
aas
loop
sub
std
out
cmp
stos
mov
fldt
fwait
pop
cmp
push
ret
jne
jge
push
pop
lock
pop
lcall
jnp
pop
push
add
stos
jne
pop
aam
in
or
sub
hlt
dec
sarl
sub
js
cmp
xchg
subl
fidivrl
jb
daa
int3
jmp
iret
inc
push
call
pop
shrl
dec
mov
dec
mov
ret
xor
sub
scas
loopne
jge
push
or
outsb
jp
mov
call
sbb
push
and
negb
push
sub
aas
pop
add
push
mov
leave
les
cli
sbb
seta
mov
fcomip
dec
jo
fnsave
fsave
or
cmpl
enter
xchg
lock
cld
jg
push
mov
mov
mov
push
int3
pushl
mov
cmpsl
bound
pop
dec
pop
mov
sub
es
mov
in
pusha
jae
std
jo
sbb
jae
xchg
fists
lods
inc
sahf
cmp
lcall
dec
cmp
xchg
jecxz
shlb
inc
jmp
mov
int3
mov
xchg
sub
pop
dec
scas
add
ds
repnz
mov
or
mov
push
sbb
cmpsl
cld
and
push
rcrl
lcall
add
iret
cmpl
inc
mov
es
mov
fldcw
or
mov
repnz
push
call
lret
push
inc
negl
scas
ja
dec
add
sbb
and
jb
popf
mov
repz
sbb
sub
lcall
imul
and
fs
jge
loop
mov
fiadds
adcb
pushl
fsubs
mov
xor
out
jae
aam
mov
pop
scas
rcrb
inc
invd
repz
orl
mov
push
out
out
pop
aaa
aaa
jae
cmp
cmpsl
cmp
cmpsl
inc
push
out
push
rclb
subb
inc
stos
ljmp
fisttpll
ljmp
out
and
cmp
xor
scas
push
int3
stos
mov
popa
pop
movsb
sbb
xor
data16
inc
push
add
mov
icebp
and
xlat
adc
es
push
aad
cmpsb
dec
jb
hlt
push
leave
adc
rolb
mov
push
lds
sti
cmp
imul
sub
push
repz
enter
dec
out
ljmp
sbb
das
addr16
and
add
icebp
or
pop
enter
cmp
mov
in
out
dec
rcrb
addr16
popa
dec
nop
insl
adc
leave
jnp
pop
mov
dec
xchg
adc
xlat
mov
ret
cmpb
sub
and
jb
add
pop
pop
or
je,pn
sbb
aam
cmp
pop
mov
fcomps
lcall
cmp
xor
popa
sub
xchg
or
or
push
dec
out
rclb
or
push
mov
sahf
xor
pop
loop
rorb
pop
nop
mov
dec
pop
icebp
and
ficomps
dec
mov
cld
push
fimull
aad
or
and
sar
popa
xor
js
inc
and
test
mov
das
cmp
sub
push
adc
pop
cmp
enter
faddl
cltd
arpl
popa
mov
mov
mov
stc
test
push
mov
adc
leave
adc
nop
mov
mov
mov
lahf
icebp
addr16
dec
jno
mov
jns
repz
xorl
imul
cltd
repz
sahf
mov
push
and
sub
sbb
push
lods
ljmp
pushf
xor
sbb
cmp
stos
loope
pop
push
jne
mov
jno
shll
icebp
arpl
jl
jmp
or
hlt
mov
pushf
gs
aas
dec
adc
cmp
cmp
idiv
rolb
add
clc
xchg
mov
mov
movsb
mov
or
xchg
xchg
push
popf
pop
mov
cmpsb
cmp
idiv
les
aam
pusha
push
mov
iret
je
seta
dec
inc
xchg
xor
syscall
pop
mov
pop
fisubrl
pop
inc
nop
mov
jle
mov
pop
test
add
xor
mov
pop
and
addr16
lret
sbb
lret
push
pop
mov
jmp
movsl
add
aam
mov
aaa
jge
mov
xor
xchg
xor
shl
outsb
sub
jp
sbb
mov
cltd
movsl
fisttpl
ret
enter
jno
push
sub
adcb
js
ret
pop
or
in
mov
imul
dec
dec
repz
fnsave
sahf
fcompl
mov
rcl
jo
enter
dec
mov
mov
or
test
sbb
sahf
int3
jns
jp
xchg
and
aam
add
decl
push
xchg
inc
popa
rcrl
or
in
add
pop
mov
outsl
pop
mov
ds
mov
dec
mov
into
aaa
jle
add
cmp
rolb
into
js
repz
aad
xor
jb
pop
add
adc
out
sub
pop
addr16
hlt
sbb
clc
cltd
push
pop
idivb
adc
popf
pop
out
js
dec
dec
ljmp
jno
test
adc
and
pop
mov
movsl
outsl
adc
jnp
add
jnp
loopne
dec
sbb
dec
outsb
sub
ret
cmp
cmp
pop
test
jb
xchg
mov
push
fdivr
sbb
dec
mov
in
nop
sub
movsb
cmp
pop
ret
rorl
push
cs
movsb
mov
dec
adc
fwait
sub
mov
test
and
outsb
xlat
mov
jo
cmp
mov
ret
and
rcl
jnp
jl
sbb
adc
cmp
pop
loopne
in
in
xor
pop
fisttpl
sub
mov
dec
arpl
adc
or
sub
jle
jb
jne
shl
and
cmp
jmp
movsl
hlt
dec
or
pop
push
addr16
mov
add
push
pop
jnp
fsubr
movsb
pusha
int3
lret
in
jmp
hlt
sub
daa
mov
sti
outsb
sub
xlat
dec
loop
cli
sbb
xchg
sbb
out
leave
push
push
roll
push
xor
sbb
or
es
imul
sbb
pop
mov
pop
push
jb
aas
push
outsb
dec
lea
ret
push
xchg
fmuls
adc
add
or
ja
add
pop
out
jo
out
jl
lret
mov
and
stos
dec
fiadds
dec
mov
gs
ja
pop
pop
push
mov
jl
inc
pop
shl
push
inc
clc
inc
sbb
pop
clc
mov
sbb
push
nop
push
sub
call
xor
jp
icebp
gs
push
inc
call
mov
sub
sub
sbb
pushf
and
inc
and
insb
mov
arpl
ret
and
es
xchg
in
movl
sahf
xchg
and
int
aad
sysret
fwait
mov
loope
or
insb
shlb
gs
aad
aaa
inc
xor
push
sub
jns
jbe
mov
xor
jmp
jns
bound
faddl
xchg
jmp
push
jbe
sbb
add
hlt
imul
testl
xchg
sbb
dec
int
jg
push
jae
adc
push
dec
jp
sub
pop
ja
pop
cmp
scas
test
push
cmp
inc
add
mov
out
add
pop
inc
loope
mov
icebp
movsl
cli
mov
mov
mov
pop
inc
loopne
iret
in
arpl
adc
adc
pop
jecxz
mov
sub
jae
sub
js
dec
cmp
rcll
stc
pop
mov
std
push
mov
sahf
push
xor
pop
cmp
jbe
shll
fsubrs
fbld
dec
push
mov
adc
dec
push
imul
cmp
fwait
sbb
xor
xor
fistpl
jmp
mov
xchg
cmpsl
mov
sbb
fistl
mov
lcall
cs
push
popa
divl
bound
lds
push
jle
xchg
or
xor
aad
cltd
int3
pop
jns
mov
ret
out
popa
add
mov
pop
out
sub
arpl
push
mov
call
mov
jns
scas
jmp
or
adc
sub
in
ds
xchg
cs
arpl
lahf
add
cs
pop
lds
decb
shl
jl
jecxz
es
fbstp
inc
push
jns
jne
mov
jbe
xchg
stos
bound
cmp
mov
dec
rcrl
cmp
xor
icebp
xchg
xchg
repnz
dec
mov
pop
cmc
add
mov
and
jmp
inc
mov
rol
sbb
insb
inc
daa
push
addps
mov
pop
fcomps
bound
fwait
xacquire
push
inc
into
in
push
or
fs
cwtl
sbb
adc
sarl
jg
rol
cmpb
es
ret
push
adc
lods
mov
xchg
jns
popf
push
xlat
and
xchg
ljmp
jg
ljmp
sbbl
dec
sub
dec
pop
leave
jl
pop
bound
cmpsb
ret
mov
icebp
int3
or
xchg
xor
fsubl
arpl
cmp
lea
aad
dec
push
fprem1
imul
iret
mov
push
lret
xchg
outsl
ret
inc
mov
jg
lret
mov
mov
scas
jae
subb
ficoml
or
mov
sar
add
dec
pop
pop
cmp
jns
mov
pop
or
sub
loopne
testl
or
lods
aam
into
jecxz
jmp
dec
mov
lods
les
xor
lcall
dec
test
cmpsl
dec
cli
scas
mov
cmpsb
dec
pusha
cmp
add
xchg
cmp
mov
pop
insb
shll
fidivrs
lds
fcoml
ja
bound
pop
in
pop
or
call
call
or
jns
mov
jge
js
js
xchg
mov
jg
out
dec
sbb
gs
mov
mov
mov
rol
daa
ret
or
jae
leave
mov
xchg
inc
xlat
or
jo
in
mov
addr16
cwtl
mov
xchg
push
push
es
jge
arpl
mov
cmp
xor
push
mov
test
jge
or
sub
adc
adc
idiv
adcb
xchg
jnp
fisubrs
push
movsl
xchg
push
xchg
sub
negl
mul
mov
hlt
les
cmc
sahf
gs
cwtl
xchg
dec
mov
xchg
int
inc
clc
dec
dec
cmp
jne
sbb
ret
cmpsl
dec
mov
pop
push
mov
and
cmc
in
inc
lahf
push
cwtl
scas
or
mov
adc
or
sub
daa
push
add
push
dec
and
imul
sarb
out
negl
in
les
jns
mov
movsb
cmp
out
rcrb
lods
movsl
dec
dec
inc
imul
mov
mov
push
outsl
mov
xor
lret
ret
xor
push
and
push
xor
inc
push
fstps
in
mov
mov
jmp
jl
push
adc
jns
mov
int3
mov
mov
and
and
inc
je
jns
loope
xor
mov
pushf
das
jno
jmp
repz
jp
icebp
xchg
sarl
imul
cmp
add
inc
aam
aaa
icebp
sti
jp
push
dec
out
mov
and
pop
sub
lea
jle
ljmp
inc
pop
addr16
fldt
pop
cmp
or
cmp
sbb
dec
lods
push
clc
mov
cli
jne
add
out
sub
rcr
cmpsb
test
adc
add
loopne
and
sub
mov
and
xlat
xor
rol
jbe
cmpsl
in
pusha
std
int3
jg
or
mov
and
cmp
jg
aas
fucomip
and
xor
inc
aas
ret
jne
out
xchg
sub
push
pop
dec
add
out
in
dec
repnz
inc
fs
inc
cmpsl
pop
cld
pop
mov
pop
testb
mov
in
mov
cmp
in
sbb
fisttpl
shll
jno
shrl
mov
xchg
add
adc
cwtl
sub
xchg
push
sub
in
movsb
sbb
popa
dec
push
jb
ret
mov
out
out
or
mov
fwait
es
out
lcall
adc
sub
and
xchg
xor
jbe
mov
jecxz
jns
xor
jnp
pop
mov
arpl
inc
mov
test
cmp
and
psadbw
xchg
push
hlt
ss
sub
adcb
xchg
in
lahf
and
jg
scas
push
out
or
sbbl
mov
ret
bound
lods
inc
inc
jbe
lods
cmpsl
lcall
adc
xchg
and
xor
ljmp
popf
in
cwtl
mov
mov
pop
cmp
es
push
fists
pop
movsl
out
jb
mov
adc
aaa
cwtl
xor
js
pop
out
orl
mov
test
fildl
inc
mov
shlb
cmp
jb
jle
mov
sti
dec
sbb
outsl
push
sti
xchg
mov
xchg
xor
sbb
stc
divb
lret
inc
pop
adc
cmp
pusha
mov
clc
mov
sub
movsb
mov
fdivs
sub
ss
je
and
jne
jo
dec
mov
insb
aad
pop
push
sbb
adc
or
mov
cs
jp
addr16
test
jge
ret
or
daa
arpl
mov
sub
pop
mov
leave
sub
and
out
inc
lret
iret
sti
ret
fsubl
cltd
jmp
test
xchg
xchg
leave
jno
push
mov
jno
add
push
cmp
cmpl
sarl
mov
ds
imul
cmp
jg
xchg
mov
or
ja
fbstp
push
cmp
nop
insl
or
pusha
je
mov
dec
rcrl
insb
clc
pop
push
inc
mov
ss
out
and
xchg
ret
cmp
mov
pop
pop
and
pop
jmp
pop
inc
lea
cmp
fldenv
mov
movsl
ret
dec
xlat
xor
out
jne
test
push
arpl
and
cmp
mov
sbb
dec
add
insb
mov
addr16
hlt
fdivs
pop
add
fdivl
lcall
insl
ss
repnz
pop
sbb
push
loopne
xchg
sub
inc
loope
jae
jb
or
sub
popa
inc
testl
cmpsl
mov
pop
push
sbb
ja
jle
push
mov
fcomps
lea
insb
rcl
outsl
jge
adcb
loopne
xor
inc
push
pop
mov
pop
xor
clc
aas
movsb
cmp
out
jmp
or
and
mov
repz
or
cltd
lods
cmp
lea
and
push
ljmp
jbe
xor
aaa
pop
mov
das
xor
xchg
push
pop
nop
and
lahf
jmp
mov
sahf
and
dec
aam
lods
sbb
add
aam
or
sarb
in
out
movl
xchg
push
scas
adc
push
not
lds
push
insb
popf
rol
add
imul
negb
ljmp
jge
icebp
and
push
pop
push
and
addl
ficoms
mov
je
and
add
ljmp
jb
jae
clc
movsb
xor
or
push
fdivl
fistl
pushf
in
and
js
push
lcall
lds
movsb
test
push
dec
fcompl
notb
pop
adc
ret
sahf
xchg
add
jecxz
mov
jp
dec
lods
ss
mov
out
imul
adc
jne
imul
or
inc
jbe
dec
cmp
inc
inc
dec
fmull
fldcw
dec
xlat
outsb
jmp
icebp
js
or
mov
dec
push
out
mov
jge
mov
and
jecxz
cmp
dec
popa
popl
into
js
xor
dec
int3
lret
cmc
psubsb
inc
lods
cmc
in
shrb
sti
mov
sub
jnp
lret
xlat
mov
pop
mov
loopne
adcb
daa
rolb
mov
leave
fdivl
dec
icebp
popa
loop
xchg
mov
mov
mov
insl
test
movsb
enter
shl
inc
pop
sub
push
fidivrl
xor
test
ljmp
and
cmpsl
jae
push
mov
adc
xchg
addr16
xor
cmc
push
icebp
ss
aaa
stos
or
cmp
stc
inc
fdivp
test
xchg
cltd
negb
lahf
int
repnz
or
in
adc
dec
stos
xor
pop
adc
aam
lret
jmp
subl
pop
xchg
dec
ret
iret
xor
and
imul
cwtl
cmpsl
inc
cmp
popa
divl
xor
mov
lcall
cmpb
inc
sub
or
popf
cmp
hlt
mov
mov
xor
mov
cmp
lret
nop
pop
lds
or
subb
dec
xchg
jmp
insl
mov
mov
imul
jl
xchg
xchg
aad
stos
ret
rclb
xchg
mov
clc
mov
ljmp
sub
sbb
sub
leave
ja
xchg
insb
xor
xchg
cmp
jne
xlat
sub
insl
push
scas
jno
lret
pop
popa
out
add
cmp
mov
in
rcrl
inc
mov
scas
mov
scas
lods
sbbl
add
inc
push
lods
pop
adc
add
pop
ja
xchg
jle
xchg
rcrl
push
fndisi(8087
inc
test
fldt
out
andl
les
cwtl
cmc
ficompl
mov
sub
inc
lret
jb
gs
sub
xor
jge
xchg
sbbl
adc
inc
sbb
shl
lods
adc
jnp
push
xchg
mov
fstps
mov
pop
out
sub
outsb
roll
add
imul
subl
cwtl
mov
and
pop
fs
dec
test
dec
lret
fdiv
out
jmp
pop
hlt
stos
or
mov
push
cmp
lods
mov
pop
scas
and
int
xor
adc
add
and
and
test
clc
mov
jle
in
adc
cmp
ds
jle
inc
or
repz
popf
clc
out
movsl
mov
xor
xor
jp
push
jne
cli
xor
push
push
push
xchg
clc
imul
stos
xchg
sub
fsin
and
insl
sbb
pop
dec
popf
cmp
sub
or
xchg
adc
test
pusha
nop
lret
mov
xchg
cli
sub
vsubpd
mov
cmp
testb
mov
xchg
pop
push
dec
add
cmc
or
hlt
test
stos
ret
sub
lret
cmp
lret
dec
adc
pop
bound
ret
or
sbb
scas
push
aas
cwtl
jbe
inc
jp
dec
jo
call
andl
xchg
xchg
mov
into
fbstp
std
or
lcall
add
add
dec
divb
imull
or
sar
pushf
ja
pop
jnp
push
fcmovu
mov
std
pop
out
push
push
jle
mov
out
add
out
push
mov
das
push
xchg
scas
jb
jns
push
and
fisttpll
xchg
mov
mov
pop
sbb
inc
std
jae
lea
pop
shrl
xchg
push
mov
rcrl
mov
fiaddl
in
mov
sbbb
insb
cmc
push
push
loopne
adc
xchg
push
popa
jle
and
mov
fidivrs
je
inc
mov
out
aas
shll
loope
adc
pop
dec
adc
out
jp
cltd
cmp
repz
inc
data16
sbb
mov
in
movsl
push
iret
mov
push
sbb
or
push
jb
mov
cmp
jo
xchg
sbb
sub
add
mov
jae
mov
in
loop
js
jno
fwait
das
lds
sub
aam
mov
sbb
mov
out
loopne
add
adc
cli
inc
aad
jae
outsb
test
nop
adc
mov
dec
pop
sahf
pushf
push
pushf
out
sub
mov
or
jnp
mov
loopne
ja
push
xlat
adc
jecxz
mov
fsubrp
in
sbb
push
cmpsl
sbb
push
pop
mov
sarb
and
xchg
jp
in
stos
mov
cmp
fsubrl
ret
sub
cwtl
sti
lds
adcl
push
cmpsb
fnstcw
cmpsb
test
push
pop
ret
filds
and
out
inc
fadds
sarl
js
mov
repz
jmp
or
mov
mov
ret
andl
lds
lods
jo
outsl
dec
aaa
out
add
or
jle
loop
aaa
out
imul
add
dec
mov
pushf
mov
inc
cmp
pop
and
inc
jg
addb
xchg
leave
and
in
jae
pop
addl
loop
add
cmc
es
mov
cli
into
sbbb
sbb
push
cld
popl
mov
rcrl
cmc
cmpsb
out
rcrl
inc
pushf
ss
dec
sbb
mov
dec
mov
sbbb
push
popf
out
pop
jmp
mov
rorl
stc
xchg
mov
cltd
push
cld
scas
in
lret
mov
out
fstpl
or
dec
pop
mov
jns
sbb
sahf
jle
mov
mov
cmpsl
test
aaa
into
out
lret
jg
test
cmc
and
pushl
ficompl
push
dec
xchg
data16
pop
and
cmp
inc
int
lea
cmp
repz
push
les
andl
ds
pop
repz
dec
add
fcompl
xchg
fwait
sub
jp,pn
pop
sub
negl
jp
jmp
xlat
xchg
mov
or
out
pop
dec
xor
ljmp
mov
sub
mov
xor
push
mov
xor
add
sti
mov
push
fwait
pop
outsl
jmp
ret
das
repnz
jp
mulb
imul
ja
test
xchg
and
or
ja
add
adc
mov
cmp
into
out
dec
sbb
pop
movsb
scas
mov
jmp
in
fcmovne
rcll
jecxz
lahf
xor
inc
fs
stos
inc
jbe
jnp
xlat
nop
xchg
or
inc
fs
push
out
inc
fnstenv
jno
jno
aam
stc
mov
popf
bound
ljmp
add
dec
fists
data16
insl
pop
cmp
aad
cmp
mov
push
add
cmpsb
fnstenv
push
push
roll
sub
pop
pop
jecxz
lea
cmp
arpl
xchg
cmp
push
loope
mov
xchg
lret
cmpsl
fnstcw
adc
push
mov
mov
mov
add
xchg
ljmp
imul
repnz
jecxz
mov
stc
notb
in
loop
stc
lods
jp
es
sahf
aas
in
cli
pop
cld
outsl
dec
cwtl
xorl
add
orb
clc
pusha
aad
jbe
sub
sbb
push
clc
stos
push
pusha
or
stos
jnp
mov
or
subl
sbb
sub
into
jnp
dec
test
fucom
inc
cmpsb
shl
xlat
xchg
jae
decl
jbe
mov
mov
dec
mov
cli
xor
pop
inc
gs
aad
clc
in
imul
sub
aaa
pushf
andb
test
sub
adc
add
ds
cmp
popa
dec
mov
pop
cmp
sub
aad
dec
dec
cmp
sbbb
fistps
lock
loopne
pushl
pop
xor
shl
jnp
sub
xor
mov
call
inc
icebp
inc
mov
out
pop
xchg
cmp
or
es
push
inc
scas
ljmp
mov
add
xchg
inc
aam
pop
stc
mov
adc
inc
in
xlat
movsb
dec
jne
gs
xchg
xchg
pop
and
mov
sahf
ret
les
mov
repz
mov
hlt
lea
pop
sbb
loope,pn
scas
push
jp
xor
daa
jmp
add
nop
into
xchg
mov
outsl
sbbl
into
mov
mov
and
vmovdqa
sti
shl
push
imul
xor
jp
xchg
xchg
jnp
ds
mov
mov
push
in
movsb
test
leave
aaa
into
scas
mov
push
inc
idivl
push
addr16
popf
push
stc
invlpg
inc
pop
movsl
pusha
sbb
or
shl
cmp
mov
push
dec
lahf
test
lods
xchg
je
out
insl
inc
mov
inc
fstpl
jmp
or
pop
je
sarb
pop
xlat
ljmp
push
in
adc
je
aas
sub
call
and
jo
cmp
pop
es
ss
push
push
fdivl
jns
xchg
sub
push
push
dec
inc
call
in
mov
dec
out
scas
adc
mov
cmp
fcmovu
xchg
enter
xor
jmp
jae
mov
cmp
adc
xchg
popf
flds
pop
cmp
add
jne
jo
and
push
pop
call
dec
std
ds
dec
cli
popl
sub
pop
fwait
cltd
pusha
and
je
lds
fs
enter
incb
xchg
sti
mov
dec
stc
push
or
push
jns
jl
jne
cwtl
cmpsb
lret
out
mov
jb
enter
sub
xor
inc
fwait
sub
in
popl
sbb
xchg
lcall
aad
and
mov
jns
gs
dec
xchg
and
nop
mov
mov
sub
and
and
jmp
pop
clc
int
dec
ret
xchg
lods
pop
cmc
repnz
and
xchg
add
andl
mov
call
aaa
mov
add
popl
loope
outsl
mov
mov
mov
adc
xor
sbb
sarl
or
xor
mov
mov
cmpsl
rcr
sub
inc
repnz
ret
push
icebp
pop
xlat
sbb
pop
scas
imul
subb
add
sahf
std
pop
shl
mov
push
fwait
or
hlt
cmpsb
addr16
outsl
rcrb
in
sub
leave
xchg
imul
repnz
loop
push
shl
rolb
push
pop
popl
aaa
fwait
imul
adc
add
mov
icebp
pop
ljmp
pushf
sbb
jb
lods
lret
clc
xchg
cmp
in
xor
shl
roll
dec
cli
sub
lea
cmp
int
dec
xchg
push
in
call
bound
lock
in
sbbl
in
mov
sub
loope
bndstx
std
push
negb
mov
ret
ret
test
cmc
mov
fdivl
xchg
xor
pop
push
les
adc
push
and
adc
sbb
mov
push
ja
jp
jmp
das
pushf
lods
dec
ljmp
lods
cs
mov
xchg
enter
or
add
fldcw
aam
jb
rorb
or
fstpl
fwait
xor
ficoms
arpl
xchg
enter
aas
jmp
add
repnz
incb
icebp
repnz
inc
adc
enter
popf
jmp
mov
mov
sbb
sti
lds
cli
or
pop
jp
sub
aam
sti
sbbl
dec
fcoms
xor
push
lods
add
xor
push
sahf
or
add
dec
in
adc
imul
js
ss
jge
pop
cmpb
xorb
ja
es
jp
or
sbb
negb
lret
inc
xlat
mov
iret
cmp
inc
pop
cwtl
pop
push
sub
mov
xor
xor
add
xlat
fcmovnbe
mov
jnp
lcall
mov
push
sbb
jge
inc
ret
bound
in
lds
mov
out
stc
mov
enter
mov
fldl
into
in
cmp
loop
bound
jns
movsb
adc
mov
mov
push
inc
pushf
push
mov
outsb
outsl
addr16
inc
push
rcrl
andb
outsl
fstpt
inc
inc
rcl
mov
lcall
ljmp
cld
fistpll
sbb
add
mov
dec
cmpsb
and
ds
in
pushf
test
std
jg
add
imul
push
sbb
enter
cltd
lret
lock
popf
inc
mov
sbb
add
inc
jecxz
imul
mov
mov
nop
jl
jne
mov
mov
out
das
lock
insl
jge
xchg
repz
mov
rol
adc
push
dec
rcl
jae
nop
dec
and
push
cmc
lret
push
hlt
rclb
adc
adc
sub
push
and
adc
jae
xor
cwtl
das
fs
dec
lcall
inc
cmpsb
cmp
cmp
push
fmulp
push
push
push
adcb
or
pop
pop
sahf
inc
xor
out
adc
cmp
pop
xor
arpl
push
push
mov
push
xlat
jmp
jmp
or
sbb
pop
sarb
popf
or
stc
cmp
push
dec
pop
lret
xlat
cmp
shl
mov
popa
push
add
mov
jp
push
ljmp
and
adc
mov
mov
jno
mov
or
inc
dec
lcall
cmp
mov
mov
shrl
mov
lds
mov
movsl
adc
test
push
mov
insb
int3
jo
arpl
divb
xor
fs
mov
pop
dec
add
inc
dec
add
test
bound
xor
aaa
popf
cmpsl
pop
test
cmp
ds
dec
mov
jl
into
mov
lret
fmull
bound
sbb
sbb
ljmp
cld
push
out
sub
pop
dec
add
and
pop
imul
mov
or
lahf
cmpsb
les
inc
jl
jae
mov
adc
test
imul
test
lret
pop
loopne
rolb
arpl
add
scas
xchg
push
pop
and
mov
dec
aas
mov
notb
jb
mov
xchg
in
xor
xor
push
cmp
fnsave
sub
cltd
negl
in
test
xor
test
sahf
push
xlat
ljmp
mov
call
or
cltd
in
cmpb
enter
ja
xor
push
imul
jge
popf
ss
mov
sbb
pushf
dec
xchg
xchg
imul
and
sbb
repnz
je
pop
mov
leave
xchg
fistl
insl
xor
je
cli
lods
push
inc
lret
adc
jg
insl
add
rorl
pusha
negl
cmp
cmp
cmp
inc
pop
sub
neg
imul
movb
sti
xchg
in
push
add
push
imul
push
fcoml
fidivrl
insb
xor
pop
cmp
shll
xor
mov
lret
dec
aam
push
xchg
jge
into
mov
stc
mov
pop
dec
hlt
fstps
xchg
sar
cmp
mov
aad
outsb
mov
cli
mov
jecxz
jo
out
popf
cmc
sbb
lret
orl
xor
mov
aas
adc
dec
adc
das
data16
aam
in
adc
sbb
sbb
xchg
jne
bound
repz
jb
xlat
jmp
pop
out
push
fsubrs
cltd
lret
cmp
inc
adc
cli
sbb
xchg
stos
fs
jne
stc
xor
cwtl
movsl
xchg
inc
cmp
dec
dec
inc
jne
pop
mov
dec
mov
test
jo
xchg
test
lock
lock
inc
sahf
test
cmp
bound
push
arpl
adc
dec
mov
aaa
mov
inc
pop
and
cmp
stc
ds
mov
jle
xchg
lret
xchg
lahf
add
ret
pushf
gs
jle
xchg
inc
jbe
or
push
rcr
add
dec
dec
cs
dec
cmc
loopne
add
int3
add
sahf
pop
fdivl
out
sub
adc
cmp
hlt
push
je
lea
mov
psrlq
cwtl
xchg
jp
dec
cmp
mov
xchg
sbb
jnp
lds
clc
aaa
push
loopne
int3
xchg
push
mov
sbb
xchg
insb
in
jg
push
mov
shll
jge
sbb
add
es
xor
scas
jmp
jnp
cmp
add
les
out
push
pop
lods
mov
insl
dec
dec
cmp
lods
scas
mov
test
andl
shrl
pop
in
out
lret
ret
push
push
push
xor
int
and
lock
mov
push
xchg
sbb
into
push
cmp
je
and
fcompl
adcl
push
cmp
inc
mov
popa
aas
push
push
inc
leave
push
mov
cli
mov
pop
aad
sbb
jp
outsb
shr
ret
rol
mov
bound
ja
xorl
ret
fdiv
cltd
and
pop
xor
fldl
push
cmp
fs
repz
add
in
addr16
pop
inc
adc
adc
data16
pop
movsl
adc
cmp
and
cmp
es
ja
jecxz
pop
lock
add
dec
sub
cmp
call
rep
mov
daa
loop
fildl
in
inc
jne
ja
pop
push
roll
fmull
scas
out
lock
jl
jp
push
je
cmp
dec
arpl
lock
mov
insl
inc
mov
stc
or
aam
insb
push
insb
idivb
or
cmp
cmpsl
lds
mov
pop
pop
xchg
cmc
sbb
es
add
xchg
xchg
xchg
pop
jl
adc
or
sub
int3
aaa
fwait
xchg
push
mov
call
xchg
andb
sub
mov
jbe
out
imul
xchg
sub
xchg
lahf
adc
push
add
iret
test
bound
rorw
fs
stos
scas
mov
lcall
adc
pop
icebp
mov
shl
jnp
js
sub
fwait
fwait
cs
inc
jbe
arpl
leave
push
jno
in
add
cmp
mov
nop
jmp
cmp
lret
jge
xchg
sbb
fdiv
mov
ss
mov
leave
pop
dec
lret
sbb
movsb
aas
jae
jns
and
inc
in
and
jmp
mov
adc
push
punpckhwd
xor
and
xchg
data16
jl
lea
lods
sub
ja
sub
sbb
ja
fbstp
add
fs
ret
sub
lds
jge
fidivl
flds
add
pop
jnp
inc
mov
pop
sahf
stc
fdivs
sub
dec
mov
test
inc
aas
or
mov
lret
mov
in
push
dec
jp
fcompl
xchg
aas
xlat
lods
sti
loope
aam
and
cmp
sub
in
pushf
xor
mov
mov
sbbb
or
mov
mov
fcoms
mov
shll
push
pop
push
xor
jnp
out
daa
test
mov
mov
ljmp
xchg
cmp
sahf
dec
call
mov
cmp
mov
mov
dec
or
addr16
pop
ja
cmp
pop
push
jg
cs
gs
jae
test
xchg
sbb
ja
add
std
or
jge
dec
push
cwtl
mov
xchg
outsl
mov
clc
xchg
fsubs
cmp
dec
in
fwait
mov
negl
cs
cltd
arpl
pop
sub
cmpsb
nop
add
fldcw
mov
int
mov
dec
push
loopw
fsubr
xchg
cs
movsb
mov
cmpsb
dec
sbb
aad
inc
inc
adc
pop
push
mov
sbbb
mov
aas
scas
jp
jae
jno
mov
fidivrs
xchg
repz
xchg
jg
outsb
xor
add
sbb
cmpsb
cmpsl
sbb
xchg
addb
xchg
adc
daa
or
cmp
mov
push
ljmp
dec
mov
into
mul
sbb
and
mov
mov
cmp
sub
cmp
in
xor
jmp
adc
pop
repnz
xchg
int3
sub
xchg
sbb
lea
ja
and
push
faddp
addr16
cmc
cmc
pop
pand
cmpsb
cmpsl
push
mov
idivb
fidivrs
xlat
xchg
fnsave
pop
lds
xchg
aad
lcall
pop
call
xchg
jbe
mov
std
lods
mov
jne
pop
lods
lcall
push
fsubrs
das
hlt
out
into
inc
mov
jbe
add
fbstp
pop
sahf
into
adc
leave
out
and
shlb
xchg
shll
fidivl
sub
testl
inc
jb
mov
ja
push
xor
fwait
and
movsb
idivl
jo
ds
out
xchg
iret
xor
stc
or
and
push
ljmp
subb
imul
insb
adc
leave
sbb
mov
scas
push
mov
mov
ffree
pop
jmp
pop
cmp
ds
sbb
dec
inc
sub
push
sub
in
loope
add
mov
push
insb
cmp
adc
shlb
pop
jo
mov
mov
enter
jmp
in
cmp
out
cld
out
xor
roll
xor
pop
mov
add
dec
lds
add
scas
xchg
scas
mov
jns
int
das
mov
ficomps
popf
leave
jl
pop
cmp
xorl
pop
jnp
ficompl
imul
inc
xchg
sub
pop
cmpsb
cli
cmpb
dec
mov
pop
into
lret
xchg
pop
js
adcl
scas
orl
mov
andb
dec
bound
xor
jmp
mov
shrl
pop
insl
sub
jg
shll
sub
xchg
add
pusha
addr16
inc
rorb
sub
and
iret
cmpsb
lock
pop
or
mov
in
sbb
xor
add
std
ja
xor
decb
out
stos
sbb
and
xor
rcll
fcoml
inc
push
pop
push
jns
pinsrw
dec
cmpsb
rorb
cmc
push
test
negl
leave
cmpl
mov
dec
mov
dec
repnz
sbb
add
lock
pop
cmp
cmc
cs
mov
fnstsw
cld
test
xor
dec
jbe
dec
shl
cmovno
push
rcr
ja
push
dec
arpl
jmp
xor
push
sub
mov
cmp
test
in
adc
xor
or
jbe
cld
jbe
dec
popa
and
jo
add
sbb
addr16
jg
jne
shll
inc
jo
faddl
lcall
jnp
mov
imul
lds
ret
push
faddp
leave
inc
loop
jo
test
push
dec
cmp
xchg
ret
test
jb
cmpsb
jno
xchg
adc
fs
bound
mov
cmc
jo
add
mov
xor
mov
pop
push
in
sub
mov
adcl
icebp
int
jnp
shl
jle
push
add
fucomp
mov
mov
ror
mov
pop
stc
popa
or
loope
sbb
mov
inc
daa
cmp
bndstx
dec
cmp
pop
push
jmp
xor
add
add
mov
xchg
in
lcall
sub
aam
fmull
xchg
frstpm(287
add
pop
lods
and
imul
mov
jns
mov
xchg
das
jns
xor
aas
pop
or
loop
mov
pop
sti
mov
inc
add
dec
push
add
stos
mov
shrl
xlat
inc
sub
movb
std
inc
ficomps
mov
and
stos
xchg
jl
jae
mov
lock
xchg
dec
dec
push
xchg
add
mov
sbb
mov
pop
jg
aad
push
icebp
xchg
xor
mov
jecxz
ljmp
pop
in
mov
mov
mov
cs
fcoms
inc
pop
dec
arpl
fscale
daa
mov
adc
clc
push
ret
jno
jmp
pusha
lret
mov
rclb
pop
jmp
sahf
pop
mov
lret
les
les
sar
cwtl
ret
xchg
xchg
cltd
adc
ja
fs
xchg
insl
jle
push
scas
lret
out
push
dec
rcr
andl
inc
or
mov
cmp
and
adc
xor
fs
jns
enter
shlb
adc
mov
xor
orb
je
mov
int
aam
jo
push
dec
ds
fwait
adcb
sbb
and
and
add
in
sbb
xchg
hlt
mov
ds
xchg
pop
mov
mov
aad
mov
mov
fisubrs
jle
lret
and
add
js
xchg
add
jl
adc
push
fwait
xchg
adc
dec
mov
dec
out
in
out
sub
leave
in
xchg
jecxz
pop
cmpb
pop
sarl
bound
stos
outsl
jnp
jo
leave
add
mov
pop
movsb
in
ret
cmp
pop
mov
jno
out
test
movsb
aad
sahf
push
clc
cmovns
lods
shlb
cmpsl
loopne
mov
ret
pop
push
pusha
sub
mov
inc
rcll
pop
pop
mov
cmp
pop
repnz
xchg
insb
cmp
mov
jnp
inc
xlat
pop
pop
push
or
notb
xchg
mov
sbb
lcall
xor
and
xchg
movsl
mov
mov
lret
fcoms
xlat
adc
push
cld
mov
adc
movsb
popa
enter
adc
sbb
mov
sub
sub
test
add
test
cmp
push
shrb
ds
push
inc
popf
insb
cmp
test
dec
jbe
and
push
ret
mov
add
fwait
ja
dec
xchg
sti
dec
dec
mov
pop
dec
lock
loope
mov
pusha
shll
jecxz
inc
in
and
xchg
inc
popf
dec
cmp
xchg
cmc
jb
in
mov
int
mov
dec
mov
dec
adc
rorl
and
mov
imul
jns
out
icebp
and
fstpt
mov
jno
in
test
jno
adc
movsl
test
and
aaa
lret
add
mov
insl
dec
jp
adc
pop
pop
outsb
xorb
pop
scas
sbb
jge
push
jae
cmp
push
mov
jmp
sbb
mov
popa
aas
loopne
lock
in
outsb
adc
outsl
ljmp
mov
pop
icebp
fidivrs
add
enter
aas
mov
jmp
mov
lret
sti
mov
ljmp
push
adcl
lret
lods
jge
xchg
mov
xor
cltd
cmpb
inc
xchg
sbb
pop
sbb
jne
inc
cmp
jno
movsl
xor
sbb
mov
inc
adc
and
inc
in
mov
push
leave
and
dec
mov
clc
and
adc
dec
arpl
or
hlt
cmp
insb
popf
jg
and
mov
sbb
mov
fistps
cmp
push
sub
lcall
inc
pop
and
je
dec
and
mov
ret
fcmovb
mov
popa
enter
test
adc
adc
xor
push
outsb
inc
movsl
pop
cltd
imul
cmpsb
jnp
add
cmp
or
jmp
ss
mov
out
dec
into
and
lahf
add
das
jnp
lcall
xor
das
leave
int
or
cmp
dec
mov
or
lods
aaa
push
mov
int
sub
outsb
inc
and
mov
mov
dec
mov
pop
in
lods
xchg
aad
sub
sti
xor
pushf
or
fldcw
outsl
ret
cmp
add
rcrl
mov
push
arpl
add
pusha
hlt
sub
cmp
and
cmp
pop
jb
dec
in
aaa
jle
cwtl
sti
mov
push
es
mov
popf
dec
or
jmp
xor
jl
std
and
call
lods
and
jae
mov
mov
sbb
stos
mov
test
lods
leave
jnp
jl
movsl
in
sub
jmpw
fwait
mov
lock
add
or
pop
data16
sbb
repnz
jmp
fcomps
ds
dec
in
cmp
push
popa
xchg
hlt
stc
pop
pop
mov
ret
push
or
push
sbb
push
push
rcrb
shll
daa
jo
mov
icebp
cmpsl
stos
add
mov
std
xchg
mov
mov
stc
push
sbb
iret
popf
cltd
outsb
fstpt
int3
lret
lea
and
xchg
inc
scas
and
leave
leave
pushf
mov
into
jmp
xor
add
in
fwait
cli
xchg
mov
cltd
cmp
pusha
lret
jp
mov
mov
pop
stos
mov
sub
mov
outsb
inc
mov
jl
cmpsb
cmp
jnp
inc
loope
pushf
stos
inc
into
in
je
push
leave
ffree
inc
adc
sbb
stos
out
pop
or
sub
ljmp
pop
fiaddl
fwait
shrl
imul
lcall
in
cmpsb
lret
sbb
cmc
movsl
imul
xchg
push
sub
push
jae
xchg
in
mov
aas
push
pop
ds
addr16
div
pop
sub
dec
fs
in
inc
jne
pop
and
push
es
ret
jge
mov
push
add
dec
loop
cmp
lea
addb
xor
imulb
ja
iret
push
jle
in
movsl
cmp
jmp
ret
daa
repnz
xchg
xabort
imul
inc
imul
mov
ss
shr
mov
mov
sbb
pop
shll
test
scas
or
pop
mov
imul
mov
mov
mov
mov
daa
fdivl
aad
ret
jnp
jns
sahf
into
xchg
scas
stc
inc
push
mov
or
test
imul
or
ficoms
push
mov
lret
sub
xchg
movsb
sahf
cmp
pop
and
jae
jo
and
mov
idivl
mov
cmp
mov
mov
push
add
jg
cmp
sti
out
xchg
add
div
fdivl
or
sbb
scas
test
adc
arpl
std
or
add
test
mov
fs
add
jl
lea
lea
cmpsl
out
xchg
sub
ficomps
stc
xor
xor
ja
fildl
push
stos
mov
jmp
and
xor
lock
cmp
add
pop
mov
jecxz
lds
sub
mov
pop
or
ljmp
jno
mov
addb
jns
push
mov
or
loope
fs
aas
movsb
cmp
cmpb
cmpsl
pop
pop
in
test
or
jno
dec
xchg
imul
dec
out
pop
out
pop
rol
mov
jbe
or
cs
insb
repnz
imul
cmpsl
sub
stos
inc
cmp
arpl
lods
out
dec
out
sbb
in
dec
adc
jg
repz
ljmp
jb
dec
enter
aad
xchg
lahf
movsb
cmp
in
push
dec
push
pop
ljmp
jno
adc
gs
push
ret
les
incl
push
or
xor
sub
pop
inc
jmp
aaa
inc
in
stc
scas
popa
clc
and
jecxz
and
aas
leave
cltd
xchg
mov
mov
out
into
push
repz
daa
sahf
imul
adc
cli
aam
add
call
mov
mov
sbb
mov
push
or
dec
data16
xchg
sub
and
pop
dec
mov
or
insl
aam
adc
mov
fidivl
pop
push
jns
fld
in
repnz
pop
arpl
add
fbstp
cmp
sti
addr16
test
pop
xchg
pop
mov
or
scas
mov
test
aaa
pop
push
pop
scas
je
shll
aaa
fwait
push
nop
in
les
fnstenv
out
into
adcb
mov
lock
sbb
ds
icebp
stos
adc
xchg
jmp
add
outsl
dec
shl
mov
adc
ret
add
ds
test
xor
out
sub
mov
clc
mov
xchg
dec
shlb
out
xchg
testb
cmp
divb
sub
inc
sbb
xorb
xchg
outsl
push
popf
loop
mov
fisubrl
mov
out
or
inc
inc
int3
mov
jmp
loop
daa
lock
cli
xchg
adc
sbbb
rcll
push
sub
popf
adc
in
lcall
dec
movsb
fcom
mov
jl
les
bound
mov
push
leave
sahf
pop
push
test
in
or
pop
stc
psubsb
imul
imul
addr16
lcall
es
dec
mov
call
dec
push
hlt
rorl
adc
pop
inc
push
dec
subb
jb
sub
xor
adc
insb
sbb
or
scas
push
xchg
mov
fisubrl
rcrl
push
ret
rol
mov
push
movsl
xchg
test
push
pop
fcmove
xlat
mov
xor
adc
cmp
dec
inc
repnz
xorb
add
fadds
xchg
mov
push
jne
push
popa
iret
xor
shrb
aas
cmpsl
ret
sub
xor
sbb
andb
push
mov
push
aas
mov
imul
out
or
or
jbe
inc
shl
ljmp
mov
loop
pop
xor
ret
out
and
sbbb
data16
jge
imul
lods
in
sahf
adc
cmp
cmp
mov
pop
adc
fs
mov
shll
push
stos
push
sti
repz
ds
sub
out
fstpt
dec
push
mov
mov
sbb
and
cld
mov
dec
xor
push
shl
jbe
mov
ja
xchg
outsl
stos
ja
jo
inc
jmp
push
cmpsl
out
lds
pop
mov
fwait
ds
jbe
pusha
data16
testb
fildll
pop
addr16
xor
adc
lods
sbb
xor
call
and
lret
jb
ret
fiaddl
dec
in
dec
adc
pusha
jp
push
into
loope
stos
mov
ret
jne
rcrb
cwtl
das
and
and
push
inc
or
fnstcw
mov
xor
loop
adc
xchg
dec
jecxz
and
push
out
add
xchg
xor
ljmp
in
jmp
cmp
mov
hlt
cwtl
js
xchg
test
ss
push
loopne
push
test
adcb
imul
popf
insl
test
ds
inc
sbb
test
jae
inc
mov
push
cmp
mulb
cmp
movlps
jmp
movsl
cli
and
test
popa
mov
fs
stos
fnsave
movaps
sbb
outsb
and
fnstenv
push
movsb
jb
inc
push
rcll
xchg
dec
loope
mov
stos
or
push
mov
push
mov
pop
subl
push
sbb
lods
adc
aad
jae
xchg
pop
and
nop
and
xchg
scas
xor
fsubrp
mov
aam
and
jae
arpl
shlb
test
lods
fidivs
cmp
mov
pop
mov
fisttpl
sub
sbb
pop
cmp
loope
and
ret
dec
mov
push
xlat
rcll
lds
pop
jnp
mov
imul
mov
mov
imull
dec
mov
sub
or
into
mov
bound
rcl
xchg
adc
mov
lahf
pop
add
fwait
push
adc
mov
jae
popf
in
ret
dec
pop
adc
lahf
ds
xchg
andl
outsl
popf
lds
mov
repz
shll
insb
lahf
xor
mov
mov
lods
xchg
mov
cmp
push
and
pop
dec
scas
lea
push
int
dec
jle
jno
fwait
jecxz
xchg
xor
jecxz
add
inc
pusha
aad
inc
ret
adc
leave
sbb
jne
mov
mov
xor
mov
fiadds
icebp
mov
or
pusha
int3
sub
push
aaa
cmpsb
aad
fcmovnu
out
insl
or
lahf
jl
lods
sbb
cmp
dec
cmp
ja
dec
movsb
icebp
jne
sarb
push
mov
adc
push
xchg
iret
data16
jl
cs
xor
cmp
imul
incl
out
jnp
aaa
mov
push
inc
shlb
jle
jl
adc
xchg
imul
sti
xchg
repnz
cmc
push
pop
fildl
and
adc
push
mov
pop
cmp
jbe
out
rcl
rcrb
test
sarl
scas
sbb
pop
add
clc
pusha
jnp
dec
and
inc
adc
adc
shl
inc
or
in
cmp
dec
arpl
ret
pop
xchg
dec
push
outsl
push
shrb
popf
xor
cwtl
aad
mov
sub
pop
or
add
xchg
sub
andb
lret
and
inc
int
sbb
inc
pop
push
fmuls
fmul
push
push
inc
dec
loope
sub
stc
inc
push
inc
cwtl
xchg
sti
stos
mov
dec
add
xor
inc
cmp
push
out
push
mov
adc
jns
shll
ss
sti
push
xchg
add
sbb
sub
aas
les
sub
sub
sbb
pop
mov
inc
xor
popf
push
xchg
push
cmp
js
loope
ljmp
sbbl
dec
mov
pusha
or
pop
jne,pt
inc
cmp
idivb
aaa
incb
loop
push
push
dec
pop
rol
mov
ret
fs
test
mov
or
inc
arpl
mov
rcll
enter
lock
push
add
xchg
ret
rcrl
popa
addr16
mov
adc
fs
jl
aad
xchg
lcall
sbb
mov
sti
inc
or
stc
sbbb
faddl
lods
xor
test
leave
ret
hlt
jmp
cwtl
xchg
rcr
sub
dec
sti
gs
jle
xchg
sbb
and
mov
mov
cmp
ficoml
sub
xor
push
push
xor
incb
pop
lods
cmp
sahf
and
inc
out
and
lds
daa
jns
add
add
fsubl
and
inc
push
scas
cli
test
ss
cmp
pop
push
sbbl
push
je
jge
cld
scas
rcl
push
sbb
mov
pop
test
scas
movsl
lea
xchg
call
mov
out
testb
xchg
fwait
sbb
ljmp
jno
loopne
stc
je
mov
cmpsl
cld
repz
hlt
fsubs
push
dec
hlt
lock
mov
roll
std
push
xchg
int
loop
add
sbb
mov
shll
call
mov
shlb
xchg
inc
add
jb
imul
sbb
push
mov
popa
xor
jo
leave
ret
cmpsl
dec
loop
dec
test
push
inc
pop
ror
lret
jg
mov
mov
pop
mov
and
icebp
cmp
mov
les
fisubrl
mov
mov
push
leave
rcll
insl
push
insl
sub
xchg
mov
lahf
add
std
bound
inc
push
pop
ljmp
cld
out
dec
je
scas
nop
sbb
divb
or
mov
test
ss
stos
add
inc
xor
and
mov
stos
inc
lret
jge
mov
or
push
lods
push
sbb
and
cmp
mov
or
jno
xchg
mov
ret
and
mov
adc
mov
rcl
jae
movsl
jae
adc
push
lods
and
std
outsl
loop
xor
xor
fwait
cmpsl
adcb
push
sahf
and
mov
es
push
in
or
xchg
cmc
mov
and
cmp
push
or
pop
gs
inc
sbb
cmp
dec
push
dec
mov
jb
sub
or
jle
or
mov
out
mov
lret
dec
sub
insl
setle
add
jecxz,pn
or
mov
cli
loope
sub
stos
orl
mov
pop
out
lods
or
rcll
hlt
lret
loop
mov
add
ss
push
gs
ret
test
in
repz
xchg
and
cli
std
aam
inc
push
inc
jne
push
icebp
adc
mov
std
sti
jmp
dec
cmp
cmp
jmp
rsm
inc
sub
push
fisttps
enter
shrl
filds
mov
in
mov
sub
push
jl
ficoml
add
mov
test
dec
adc
into
das
add
cli
mov
cmpsb
cmp
xlat
imul
clc
clc
imul
pop
push
mov
push
inc
lods
ljmp
data16
jb
cmpsb
sub
rorb
fistpl
xor
stos
call
outsl
push
pusha
mov
and
sti
adc
mov
imulb
cmp
les
adc
mov
in
stos
add
mov
jb
adc
sbb
mov
dec
jg
inc
or
loopne
test
xchg
jmp
aam
das
lods
mov
shll
outsb
repnz
rorb
aaa
andl
jne
scas
adcb
or
mov
add
push
push
push
xor
add
inc
movsb
add
sbb
jg
inc
push
pop
pushf
mov
jl
push
and
mov
les
fsts
push
mulb
ss
stos
fxch
cwtl
push
adc
dec
xorl
sbb
xor
subl
fiadds
mov
and
push
ja
icebp
test
jo
cmp
push
jbe
xchg
jg
loope
inc
and
add
test
cmpsb
sub
sahf
jne
pop
cmp
mov
push
inc
dec
and
mov
lret
xor
sbb
mov
les
pop
jns
mov
rcrb
pop
push
pop
mov
lds
idivb
push
nop
push
fisubs
xlat
sbb
hlt
cwtl
and
popa
lods
push
adc
in
jg
and
movsl
mov
pushf
mov
cld
sbb
or
push
dec
loope
mov
popf
push
inc
push
mov
xchg
shrl
call
or
out
jae
mov
aas
sbb
outsl
jge
subl
sahf
ret
pminsw
mov
pusha
push
jns
pop
inc
or
fbstp
sbb
mov
cmc
push
push
fnsave
mov
out
out
cmp
pop
jnp
add
sbb
jb
imul
aad
inc
shlb
xchg
jecxz
cs
mov
jge
or
sbb
or
loopne
pop
cmpsb
push
mov
mov
inc
loopne
inc
adc
stos
sub
leave
hlt
fadds
out
int3
xor
popa
xor
imul
sub
bound
mov
push
adc
push
or
inc
xchg
pop
jp
aaa
ljmp
adc
sub
and
push
mov
pop
fidivl
negb
loope
add
icebp
cld
jnp
addl
xchg
mov
xor
sbb
nop
insl
jge
mov
enter
and
sub
fs
outsl
jge
pushf
push
mov
dec
test
outsb
sbb
lods
js
jmp
lret
cmp
pop
mov
fimull
lods
test
mov
mov
insb
call
pusha
jo
xchg
repz
daa
out
data16
cmp
imul
fbld
dec
mov
jns
xchg
clc
or
sbbb
aas
je
aam
and
adc
xor
and
test
pop
lds
lcall
jge
push
cmp
jo
cwtl
std
mov
mov
scas
es
push
mov
jno
jge
ja
add
and
sti
in
xchg
std
dec
data16
dec
push
pop
lods
imul
repz
and
xchg
add
sbb
out
and
mov
ret
stc
mov
dec
mov
divb
subb
cld
in
mov
into
push
push
and
mov
dec
cmp
ret
hlt
jge
jns
dec
les
pop
scas
loopne
mov
fdivl
and
in
dec
repz
jle
leave
fwait
cmp
and
inc
dec
fwait
lds
imul
lods
jo
les
iret
pop
mov
jae
sbb
cwtl
lahf
mov
iret
push
insl
mov
lods
fstl
in
out
xor
shrb
scas
push
fcoml
pop
dec
test
lea
mov
jle
add
push
hlt
pop
sub
ja
imul
test
sbb
mov
addr16
pop
push
aam
jnp
scas
std
adc
mov
or
push
and
movl
je
pop
pushf
or
xchg
mov
xlat
shrl
mov
std
cltd
ljmp
test
inc
je
mov
sarb
jne
pop
dec
adc
pop
cmp
push
jae
cmc
mov
xor
cmpsl
and
xor
lahf
incl
ss
mov
mov
add
mov
adc
jno
push
in
mov
cltd
and
in
test
scas
mov
insl
adc
fnsave
lock
imulb
dec
sub
push
rclb
stc
push
movsb
push
lcall
and
aad
mov
negl
aad
loopne
xor
gs
dec
adc
out
cmp
scas
in
xor
mov
hlt
mov
push
jg
cmpsb
out
mov
jge
xchg
pop
xor
mov
pusha
mov
jmp
mov
das
andl
ja
test
jg
xchg
rcr
inc
or
repnz
push
cmp
adc
xor
ret
sbb
test
in
mov
jo
add
fmull
repz
add
mov
jmp
cmp
mov
xchg
mov
cmp
push
das
popf
sbb
dec
pop
mov
inc
sbb
fisubl
daa
xchg
pop
mov
push
jp
dec
push
and
mov
pop
push
push
push
sub
stc
push
mov
cmpsl
lea
adc
repnz
sbb
in
push
push
adc
or
clc
or
and
push
in
sti
dec
fidivs
decl
ja
lret
sub
lods
mov
jno
xchg
xlat
outsl
imul
dec
add
xor
pushf
adc
rorb
mov
adc
pushf
or
movsl
jne
mov
aad
jns
inc
movsb
jecxz
rep
xor
sar
xor
ret
cmp
lods
hlt
cld
mov
jl
fistl
mov
arpl
mov
cmp
clc
js
rol
push
mov
mov
mov
mov
mov
and
pop
xor
fidivrl
pop
mov
sub
jo
inc
xchg
xor
outsl
xchg
push
xor
mov
cmp
es
push
pop
xchg
pushf
cli
lahf
pop
or
lods
hlt
jne
or
mov
push
push
xchg
and
push
lods
cmp
jmp
outsl
cli
jno
push
add
cltd
dec
xor
push
popf
ret
popa
cmp
push
imul
clc
sbb
dec
jp
jbe
jl
xor
mov
dec
xor
in
test
jb
add
lret
and
leave
shll
cmpsb
and
lret
mov
aaa
xchg
insl
pop
stos
pop
movsl
daa
jp
inc
pop
add
push
lods
ljmp
pushf
sbbb
scas
jmp
out
test
jns
mov
add
mov
loope
sub
repz
outsl
pusha
xchg
icebp
ffree
xchg
pop
pop
ja
aaa
push
sub
push
daa
orb
test
ja
push
rcll
ret
repnz
repz
das
adc
and
xchg
xlat
sub
insb
popf
jg
jge
out
imul
call
js
aaa
mov
xchg
push
loop
pushf
xchg
int
xor
cmp
jp
aad
mov
hlt
js
push
psrlq
popa
dec
lods
mov
mov
xor
mov
mov
gs
out
insb
lds
sub
pusha
inc
mov
out
or
xchg
lahf
pop
hlt
rol
add
or
pop
ret
mov
dec
inc
xor
and
pop
ss
lods
lock
and
xchg
adc
lods
out
shl
xchg
jae
xchg
pop
mov
faddl
test
mov
push
or
pop
mov
jb
xor
sbb
add
xchg
movsb
or
xchg
adcb
and
dec
sub
aad
and
cmpsl
lcall
push
inc
pop
push
outsl
ljmp
or
jge
daa
add
cltd
and
test
mov
stos
cmp
mov
scas
popa
cmp
popa
xor
jbe
xor
jl
test
mov
int3
jb
shrb
push
sub
or
sub
pop
jg
cltd
mov
and
call
mov
mov
dec
rcr
sbb
cmp
push
xchg
mov
cmp
mov
enter
sbb
xor
jo
jbe
std
xchg
dec
inc
dec
fsubl
scas
adc
push
test
jp
mov
stc
jb
fsubl
add
cltd
xor
int3
aam
mov
jno
orb
mov
lods
mov
call
daa
xchg
push
mov
out
xchg
rcr
xchg
mov
movb
outsb
aaa
dec
sub
xchg
aam
outsb
orl
idivb
ds
sahf
jge
pushf
or
sarb
fldl
or
adc
pusha
inc
test
neg
fmull
inc
push
fbstp
mov
test
popf
gs
xchg
xchg
fwait
sub
popf
sbb
jae
dec
mov
lods
loop
adc
pushl
addr16
fcomps
push
sub
or
adc
iret
scas
fidivrl
out
fcmove
jmp
xchg
mov
enter
xchg
das
shrl
aas
mov
js
pop
mov
mov
fistpll
sahf
fcoms
int3
es
dec
cmp
xchg
and
in
ret
mov
add
xchg
cmp
repnz
fwait
sbb
testb
fsts
fsubs
inc
mov
arpl
enter
mov
loopne
mov
scas
in
daa
repnz
add
popl
inc
or
in
enter
lods
fcoml
xor
xlat
nop
push
das
inc
fildll
icebp
adcb
push
repnz
and
mov
out
test
pop
xor
call
and
loop
gs
mov
adc
add
jb
fsubl
sarl
in
ret
cwtl
mov
pop
xchg
adc
jno
test
movsl
mov
inc
mov
out
jbe
add
sub
movsl
and
mov
inc
adc
mov
cwtl
mov
and
in
jl
lods
mov
add
push
test
jne
pop
sbbl
call
cli
sbb
jns
fwait
mov
pop
mov
loopne
jbe
dec
jle
imulb
mov
into
adc
add
mulb
or
movsb
pop
add
pop
jle
mov
lods
mov
js
ljmp
addl
lds
jge
out
cmpsl
adc
int
shrb
mov
jnp
mov
fwait
hlt
std
shll
ja
in
ss
mov
nop
aas
rcrb
mov
frstor
fwait
shrb
je
pusha
div
pop
sub
push
sti
pop
push
sub
out
iret
fldenv
iret
mov
xor
push
loop
dec
dec
and
sub
sbb
out
divl
aas
scas
pop
cmc
ja
pop
mov
xchg
sub
cmp
stos
cmp
adc
jecxz
jl
mulb
jl
cltd
xor
lods
jmp
sub
hlt
fdivrl
adc
mov
aad
lret
dec
dec
adc
pop
insb
dec
mov
or
rclb
ficoms
hlt
xchg
xchg
lods
dec
mov
movsl
push
cmc
lea
cmp
push
jge
mov
je
fwait
inc
int
std
cmp
sarl
pop
pop
xchg
add
ret
rcr
xor
in
loop
mov
test
add
mulb
pop
pusha
stos
test
je
dec
mov
bound
xchg
insl
mov
movsb
repnz
lcall
cmp
in
repnz
cmpsb
loopne
pop
scas
add
mov
popf
dec
dec
xchg
ret
mov
jno
push
aas
cmp
jecxz
xor
jl
push
pop
aam
cmp
fmuls
movntps
or
push
adcl
aam
push
in
xchg
push
imulb
insb
cmp
fstpl
mov
loopne
pop
push
stos
inc
popf
push
int
inc
lds
enter
pop
jb
and
push
scas
xor
popa
mov
sbb
pop
loope
rorl
nop
sbb
jae
daa
and
out
les
hlt
push
xchg
stos
popf
or
and
pop
xor
xor
xchg
out
push
pusha
add
or
aas
add
sbb
sahf
ror
push
pusha
add
ret
push
call
jg
mov
mov
xchg
fidivl
mov
pop
inc
cli
mov
insb
cwtl
lds
pop
xor
sub
shll
add
sbb
fstpt
lea
adc
daa
add
jnp
sbb
ret
xor
daa
or
and
cmp
movsl
loope
push
pop
ret
repz
addr16
iret
and
adc
and
dec
fcmove
arpl
gs
xchg
scas
jno
aaa
dec
stc
es
xchg
jmp
pop
out
add
lcall
test
fadds
sbb
xchg
out
outsl
push
push
inc
std
cltd
lock
sub
mov
dec
lcall
pop
stos
fnstcw
icebp
cmpsb
lahf
jno
mov
sbb
fmulp
int
or
xor
in
jl
push
cmp
int3
mov
dec
and
out
out
add
call
loopne
and
sbb
into
pop
add
lock
mov
mov
je
mov
add
adc
gs
adc
or
push
dec
ljmp
pop
cwtl
loop
inc
sub
mov
popa
mov
xlat
mov
dec
pop
clc
in
jno
xchg
and
mov
cmp
lcall
insb
pop
xor
mov
mov
inc
testb
fisubs
pop
cmp
and
ficomps
jnp
lock
mov
cmp
jae
mov
cmpsl
ficomps
push
jns
fsubrl
push
das
mov
enter
xor
add
adc
enter
jns
cmpsl
ficoml
xor
rol
push
push
sub
jecxz
in
xchg
and
insb
cltd
cmp
test
and
shl
mov
out
push
negl
mov
inc
js
add
xlat
push
outsb
pop
addr16
jle
xorb
xor
fprem1
pop
roll
or
inc
pop
je
inc
test
cmc
push
cmp
mov
push
mov
jb
int3
and
popf
mov
rcrl
mov
inc
gs
dec
dec
and
iret
aad
xor
sub
mov
dec
mov
mov
icebp
in
xchg
test
cmp
push
cmp
hlt
push
xor
jmp
inc
enter
pushf
xor
loopne
add
mov
push
int
push
mov
je
jmp
int
xchg
mov
mov
jge
jbe
rcrl
in
popa
cmp
or
mov
jle
out
gs
xor
add
dec
sbb
popf
mov
testw
mov
dec
outsl
aaa
cltd
lret
enter
mov
dec
sub
adc
jnp
das
fidivrl
ss
adc
rcll
push
inc
push
dec
mov
dec
push
aaa
adcl
in
mov
test
cmp
fidivrl
nop
movsb
cli
cld
fst
stos
push
sbbl
cwtl
pusha
inc
inc
inc
fbstp
faddl
leave
es
ja
jle
popf
or
push
cld
lcall
mov
mov
loop
inc
out
repnz
shlb
mov
dec
outsb
daa
cltd
jbe
pop
push
leave
mov
lahf
shl
into
adc
dec
sahf
sbb
imul
push
jae
addr16
lret
aam
push
mov
sub
jl
pop
cmc
and
xchg
pop
jp
ja
mov
xchg
cmp
jmp
cmpsb
inc
sub
jg
jle
sbb
mov
mov
adc
push
test
jns
and
or
jns
out
xchg
scas
rcl
je
add
outsl
inc
mov
ret
addr16
mov
je
or
jp
pop
push
push
arpl
rclb
mov
pop
mulb
inc
cmpsb
outsb
data16
pop
xor
stos
std
aas
push
push
fistps
mov
jmp
fldenv
mov
cltd
sbb
xchg
mov
mov
pop
pop
pop
loopne
pop
sbb
dec
rorb
ror
cmpsl
ds
mov
cmp
cmp
jns
jns
push
push
sbbl
test
cs
mov
cmp
daa
ret
lahf
aad
push
sub
lods
out
jnp
and
pop
sbb
xchg
or
mov
repnz
and
js
mov
repz
jae
data16
push
jne
fadd
mov
loopne
not
sahf
dec
inc
shll
or
out
sbb
xor
adc
jmp
inc
cltd
cwtl
inc
fisubs
in
sahf
sub
fs
dec
add
or
popf
pop
out
loopne
xor
bound
pushf
jp
ficoml
cwtl
stos
pop
jb
push
jae
fwait
mov
adc
mov
loopne
dec
adc
fdivl
jo
mov
lret
fnsave
and
lret
adc
mov
es
shl
aam
cmp
dec
aad
cld
inc
out
adcb
shll
rorl
or
insb
mov
lock
sbbl
sbb
loop
xlat
dec
dec
pop
lcall
and
mov
inc
lahf
cmp
jno
cli
push
sub
dec
mov
outsb
iret
in
jge
ret
jne
mov
out
ret
jp
lods
xchg
adc
out
cld
add
jb
lret
cld
jmp
jg
xchg
mov
jo
daa
cltd
xor
or
rclb
loop
outsl
insb
sbb
jle
testb
push
adc
outsb
into
add
cmp
adc
fistpll
cld
and
or
iret
lcall
fsubrp
xacquire
dec
xor
aam
clc
or
or
ret
jle
mov
aas
addr16
xlat
jmp
lds
sub
xchg
jge
insb
scas
push
imul
lds
arpl
test
test
xor
pop
adc
and
lods
xchg
push
movsl
mov
pop
popl
cmp
mulb
add
mov
mov
xor
jb
repz
int
cld
hlt
mov
jg
in
sub
mov
mov
xchg
mov
push
faddp
popf
jmp
ljmp
mov
loope
adcl
pop
xchg
jne
cwtl
daa
mov
out
cld
and
lds
add
icebp
push
insl
push
icebp
mov
mov
sbb
mov
js
cmp
or
dec
fcom
fisubs
fcomip
lea
mov
int3
pop
bnd
aas
imul
aad
jp
inc
push
push
xchg
sar
fistl
subl
mov
sbb
stos
xchg
es
jo
pop
andl
sbbb
inc
push
sbb
inc
push
fldl
lods
ljmp
es
mov
pusha
in
inc
mov
mov
negl
shlb
ret
push
imul
dec
pop
fbld
cmpsb
sbb
pop
pop
dec
mov
jo
outsb
or
pop
pop
rcr
xchg
pop
jmp
dec
sbb
cmp
adc
mov
xor
incb
fisubrs
mov
push
outsl
leave
or
scas
mov
das
js
pop
ret
movb
rorl
inc
movsb
jl
out
data16
push
jns
cmpsl
mov
pop
fbstp
mov
ja
jne
out
xchg
addr16
cwtl
push
inc
push
lods
dec
fbstp
into
mov
loop
ds
cmp
mov
fnstsw
push
push
mov
cmpsb
aam
sub
push
add
pop
cmc
inc
push
sub
stos
popf
out
dec
mov
addl
sub
mov
xchg
pushf
mov
fstl
and
mov
jle
test
mov
add
adc
pop
clc
push
jne
inc
icebp
inc
cli
push
mov
inc
adc
pop
std
dec
test
ja
out
ljmp
sbb
mov
scas
push
fcompl
leave
push
js
fisubl
subl
loop
testb
hlt
cmp
insl
and
push
jmp
imulb
pop
or
lods
fdivrl
popa
shlb
adc
cltd
test
ret
sub
fucomip
fnsave
mov
adc
cmp
lcall
ja
and
mov
xchg
cwtl
test
pop
in
jns
lea
xor
je
shlb
xchg
sub
inc
in
cld
inc
push
rclb
xor
and
rclb
ss
cli
push
arpl
xchg
or
cmpsl
adc
ror
push
cltd
dec
out
dec
and
mov
inc
icebp
xchg
fsubrs
pop
adc
sbb
lods
popa
ljmp
cmp
test
insl
inc
out
xchg
and
insl
sub
mov
ret
scas
popa
andb
or
or
sub
das
aad
xchg
fstpl
sbb
lcall
cli
jo
cltd
sbb
adc
mov
data16
add
mov
int3
mov
mov
pop
enter
rorl
push
lret
or
jp
mov
orl
sub
lea
xor
fmul
cld
in
lods
mov
or
pop
in
jbe
push
addr16
dec
jnp
inc
inc
test
dec
shlb
std
mov
out
mov
int3
xor
jg
cwtl
sbb
ret
test
pop
ret
fdiv
jne
loope
mov
cmp
pop
add
rcrb
je
out
or
ret
pop
fldl
push
int
dec
loope
je
ja
test
sub
jne
jle
xor
test
sbb
adc
push
mov
cltd
repnz
les
add
or
cs
push
popa
addr16
mov
fmulp
xor
xor
arpl
adc
popa
add
mov
mov
arpl
pop
adc
mov
sub
push
and
loopne
cmp
xchg
fists
and
daa
cmp
inc
dec
loope
stc
inc
je
xchg
mov
adc
fisttpll
les
pop
cwtl
iret
call
xchg
sbb
push
push
popf
inc
repnz
lds
movsb
movsl
stc
fldl
mov
in
imul
sti
es
aaa
xchg
stos
mov
nop
add
loop
or
stos
sbb
aaa
std
cmp
jb
sbb
mov
fs
and
cltd
sub
stc
or
mov
mov
cmp
cmp
mov
hlt
cmp
andl
jno
sbb
pop
jne
xor
ret
fdiv
pushf
pop
adcb
rolb
daa
into
xor
lea
xchg
daa
lock
adc
std
or
inc
dec
pop
jbe
mov
fwait
push
push
lods
out
add
push
xchg
xor
cltd
das
hlt
xchg
xlat
enter
inc
pop
inc
pop
xor
bound
push
add
outsb
daa
fs
jae
pusha
mov
iret
cmpsb
jbe
mov
pop
adc
jmp
jb
mov
jo
out
movsl
shrb
ret
repz
popa
out
push
ret
push
jb
cmpsb
sbbb
bound
add
lcall
in
xchg
popa
add
rorb
or
adc
jl
cmp
lods
fisttpl
jmp
mov
dec
loopne
add
push
inc
or
lock
sub
gs
push
mov
xlat
scas
jns
fisubrs
out
ficoml
jne
icebp
movsl
scas
mov
loope
adc
mov
push
lods
inc
jae
xchg
dec
arpl
mov
dec
jmp
push
sub
jo
jnp
sub
enter
call
int3
es
jmp
ss
mov
inc
push
fwait
out
fs
idivl
push
adcl
sub
cli
and
and
test
lret
add
das
fs
call
aas
je
clc
stos
jmp
aaa
fildl
pop
cmpsb
lock
test
mov
jne
mov
add
mov
in
movsb
pop
repz
xlat
stos
or
lahf
daa
jbe
add
inc
mov
xchg
push
jg
pushf
test
add
imul
ja
pop
mov
inc
cmp
pop
pusha
inc
or
aad
jmp
aaa
decb
xchg
add
xorl
mov
jp
mov
rcrb
fs
out
cmp
insl
dec
dec
les
sub
adc
sub
jbe
enter
leave
int
cmp
lods
lahf
add
add
into
ss
arpl
adc
cmp
jp
fdivr
lcall
sahf
dec
push
lcall
xchg
jle
push
or
daa
rclb
xor
test
sub
push
mov
into
sbb
or
pop
or
and
push
addl
push
pop
adc
arpl
mov
and
sbb
icebp
or
js
das
movsb
push
scas
pusha
icebp
loopne
push
fnstcw
cmpsb
ljmp
out
push
mov
decb
movsl
pop
adc
push
sbb
mov
add
aad
fstl
addr16
lret
lea
xchg
negb
cmp
jno
xchg
arpl
nop
clc
sahf
jecxz
call
outsb
fcompl
pusha
iret
sbbb
and
adc
fistl
push
jle
xchg
cmpsl
fucom
pop
lea
movsb
rcll
jle
add
out
or
mov
aad
insb
sub
fstp
pop
ds
jg
and
cmp
scas
push
jb
xchg
xor
aas
mov
mov
in
jp
addb
stos
js
fwait
int
or
leave
cs
fs
cmp
push
push
mov
sbb
inc
mov
repnz
ficompl
or
or
push
mov
push
sbb
cmp
insb
cmpb
dec
in
out
ss
divb
or
mov
movsl
jl
in
dec
insl
jnp
mov
sbb
aas
in
jno
lea
leave
adc
cltd
xor
movb
or
daa
jl
das
rcll
pop
jg
sbb
mov
cwtl
sub
jne
cs
test
sub
cmc
jnp
les
pop
jmp
imul
xor
loope
cltd
cmp
sub
mov
add
xor
dec
addr16
movsl
ja
shlb
xor
leave
shlb
push
not
int3
ret
pusha
push
or
or
xchg
loop
cmp
out
std
int
mov
je
xchg
xor
test
sub
add
push
mov
loopne
pop
sub
jp
xor
mov
shll
pop
adc
jge
dec
mov
add
lock
push
sub
adc
pop
xchg
popf
add
sbb
scas
cmp
cmpsb
out
cld
sub
mov
pop
cwtl
mov
dec
mov
pop
fcmovb
push
repnz
shll
bound
mov
mov
icebp
scas
call
xor
inc
inc
push
cmp
mov
mov
test
mov
jmp
aaa
fsubr
push
or
xchg
stos
or
imul
mov
cmp
sbb
mov
lea
pop
mov
testb
add
jecxz
aaa
and
mov
rdmsr
loopne
rclb
push
dec
out
push
divl
cmp
inc
fistl
js
mov
out
mov
pop
fdiv
xchg
iret
xchg
loop
mov
aad
movsb
hlt
sub
shl
jl
jl
cld
and
inc
sbbl
sti
mov
push
dec
jb
mov
faddp
fs
sub
popf
adc
movsb
outsb
enter
mov
sub
pop
mov
push
dec
pop
out
repnz
movsl
adc
inc
xlat
cmc
daa
and
std
pop
movsb
sub
das
dec
inc
fidivl
dec
test
popa
jg
pusha
xchg
sub
jmp
mov
in
test
addr16
sbb
dec
push
cmp
mov
jp
pusha
mov
cs
mov
mov
cs
pop
and
jnp
jb
cs
in
inc
subb
push
xchg
mov
mov
cmpsl
cmp
cmp
inc
dec
data16
add
lea
imul
push
std
mov
addr16
cwtl
loopne
shlb
push
pop
push
wrmsr
and
sbb
ret
inc
jae
and
mov
in
mov
fidivrl
aaa
loopne
pop
fwait
pop
add
cltd
fidivrs
mov
cmc
mov
adc
inc
dec
cmpsb
fdivrs
test
lds
fs
in
fdivl
add
sub
sub
or
out
lcall
cmp
xchg
aaa
xchg
enter
mov
cwtl
mov
xchg
xchg
scas
dec
cs
xlat
popa
jno
cmp
pop
jmp
enter
scas
sbb
jmp
lea
lea
jp
mov
addr16
in
cmpsb
testl
in
rcl
lret
cmc
inc
ljmp
mov
dec
add
sahf
xor
iret
lcallw
mov
aam
push
push
lds
movsb
in
and
sbb
mov
mov
int
mov
push
jmp
lret
sbb
das
cmp
jl
sti
lret
lret
scas
out
rcrb
mov
xchg
subl
sbb
mov
mov
rclb
addr16
les
xchg
mov
and
repnz
andl
lret
dec
xchg
mov
push
dec
mov
fisubrs
add
pop
pop
add
sbb
sti
loopne
out
xchg
mov
adc
sbb
jno
inc
push
adc
sub
in
test
jo
mov
jmp
mov
stc
aas
xchg
aaa
jl
je
lock
call
mov
dec
mov
fsubrp
add
xor
xchg
aaa
jmp
xchg
movsl
scas
mov
mov
ja
icebp
in
inc
adc
jmp
mov
popa
push
mov
jno
je
scas
dec
mov
mov
or
mov
nop
xor
jp
mov
push
inc
pusha
scas
add
into
mov
into
adc
or
js
push
insl
push
inc
scas
inc
adc
xchg
pop
and
jl
and
je
mov
push
inc
not
mov
push
or
cmp
or
push
jmp
ficomps
mov
xchg
push
mov
rcl
bound
mov
push
mov
xor
mov
repz
mov
mov
std
pop
cmp
enter
lret
jb
dec
out
cltd
jmp
cmp
aam
gs
mov
dec
adc
outsl
xor
das
into
sbb
jne
sbb
pop
pop
inc
lods
in
test
jmp
ss
push
sub
xchg
aam
mov
insl
not
pop
lds
push
sub
jecxz
push
dec
mov
scas
sub
loop
add
or
push
pop
sub
dec
sti
cwtl
test
aad
pusha
repnz
mov
sti
iret
xchg
idivl
out
cmp
add
cmpb
xor
hlt
xor
sarb
pop
jns
xchg
imul
push
daa
mov
mov
jge
mov
inc
sbb
cmp
mov
shll
dec
aam
jecxz
andb
movsb
ret
into
shll
sub
jbe
xor
in
test
out
lret
add
imul
or
movsl
push
push
faddl
inc
xlat
icebp
pop
xor
rclb
xchg
mov
loop
dec
mov
cmp
xchg
ret
lods
ja
xchg
jge
shl
jg
or
xor
xchg
mov
movlps
mov
mov
call
pushf
lods
cwtl
mov
loope
mov
in
daa
int
pop
decl
xchg
jb
and
addb
add
cwtl
jnp
clc
outsb
xor
push
cmc
cli
mov
pop
scas
cmovs
xor
mulb
push
cwtl
loop
je
mov
stos
mov
cmp
mov
xor
pop
cmp
dec
ss
cli
adc
cmp
sbb
bnd
mov
nop
movsl
jge
int3
dec
pop
cmp
fsubrs
lcall
inc
int3
cmp
in
xor
fildll
sub
orb
into
int3
jge
data16
inc
xlat
outsl
int3
std
xchg
in
shlb
cmp
out
jp
test
mov
jae
dec
movsl
js
cmp
and
aad
loope
scas
sbb
fs
cmc
adc
lods
mov
add
cmp
stos
loope
rcl
cmp
cs
ja
push
cld
out
fnsave
xchg
add
cli
add
or
mov
cs
std
sbb
testl
ret
dec
jnp
add
es
decl
add
mov
pop
popa
popa
sbb
sub
dec
les
push
test
cli
dec
aam
jg
out
bound
popa
loopne
or
or
es
notb
jbe
inc
test
incb
jecxz
sub
fildl
mov
sbb
mov
or
out
fsubrs
cmp
aad
in
and
xchg
incl
test
pop
jbe
scas
cmpsl
jge
pop
xor
jns
add
ficomps
insl
scas
xlat
orl
xchg
decl
and
adc
dec
push
jns
subl
in
xchg
stc
jnp
inc
call
sbbl
scas
cmp
enter
inc
or
repnz
and
in
mov
dec
rcrb
fisubs
mov
in
daa
pop
cmc
dec
lret
mov
addr16
sbb
xor
mov
jl
xchg
dec
dec
pop
mov
mov
mov
mov
arpl
push
inc
stc
aas
nop
mov
mov
pop
jecxz
inc
fcmove
or
icebp
call
repnz
xor
dec
mov
ret
dec
loopne
mov
addr16
test
mov
mov
or
mov
sub
lret
sbb
aas
push
jo
jo
aaa
sub
mov
jnp
dec
jo
hlt
lret
mov
xor
sub
cltd
in
mov
add
aam
inc
add
addb
rcr
mov
or
mov
mov
cltd
stos
mov
rol
int
sbb
les
xchg
mov
pop
mov
sub
xor
pop
cmp
loopne
lds
push
ja
sub
rolb
xlat
and
xchg
push
pop
stc
pop
insl
aas
fsubr
pop
cmp
push
arpl
add
sub
xor
pop
push
fbstp
dec
mov
lahf
cld
cltd
xor
lret
insl
bound
inc
pop
cmc
fs
out
push
dec
arpl
sti
pop
mov
mov
fldl
aas
dec
test
lods
mov
daa
cmp
shrl
ds
adc
out
arpl
inc
cmpsb
mov
inc
test
pop
call
jle
sarl
pop
xor
jns
adc
cld
push
xor
pusha
sti
lahf
js
pop
mov
fstps
or
cmp
jl
mov
addr16
jne
push
insb
cwtl
out
add
mov
out
test
jbe
and
pop
test
clc
mov
jmp
mov
popf
lods
sbb
mov
mov
xchg
in
sbb
hlt
stos
or
imul
dec
enter
insl
pushf
cmp
pusha
hlt
mov
setle
fucomp
leave
lods
and
in
sub
mov
fadds
xchg
outsl
push
cmpsl
lock
push
enter
pop
iret
dec
pushf
and
mov
mov
in
cwtl
roll
and
mov
mov
inc
outsb
clc
inc
cmpsl
inc
push
sti
mov
add
fidivrl
inc
inc
jae
pop
sbb
dec
mov
shll
adc
mov
lea
movsb
jns
adcb
ljmp
dec
dec
jg
jle
pop
popf
adc
in
mov
push
cs
mov
arpl
out
push
clc
xchg
xor
dec
dec
mov
sbb
sub
mov
inc
fmuls
out
addr16
and
pop
daa
mov
sbb
repnz
and
xchg
push
pop
mov
fistpll
mov
js
sub
iret
int3
sbb
mov
xchg
mov
sbb
aaa
jge
and
mov
or
or
aad
jle
pop
jg
mov
popf
jbe
incb
cmpsb
xchg
int3
fidivs
xor
and
mov
jns
fsubr
xor
mov
xchg
jge
cmp
into
in
and
daa
mov
lahf
mov
repnz
jnp
fcoml
inc
or
xlat
sub
push
lret
xchg
pop
dec
call
sub
dec
xchg
jp,pt
push
mov
in
mov
dec
pop
mov
lods
dec
aad
punpcklwd
int3
out
or
cmp
jge
cmpsl
neg
adc
xorl
aam
mov
pop
lahf
ljmp
inc
in
sbb
dec
sbb
pop
lds
cli
dec
movsb
pop
cmc
aad
adcl
push
mov
mov
xchg
lock
cmp
movsb
sbb
aad
mov
iret
mov
shrb
sbb
adc
lock
jecxz
push
in
add
in
movsb
fildl
lods
mov
dec
flds
shrl
push
cmp
push
test
je
inc
fs
xor
push
sub
outsb
ja
push
cmp
scas
imull
sbb
test
inc
add
sbb
adc
or
add
cmpsb
jb
popf
movsb
addl
out
sbb
mov
mov
mov
fisttpll
xchg
or
lods
adc
pop
xor
ret
adc
in
or
in
orl
and
mov
pop
mov
inc
dec
and
cmpsl
push
aas
imul
in
test
ja
shlb
or
dec
sub
outsl
xchg
insl
sar
xchg
mov
mov
push
ret
inc
aas
iret
fisubl
dec
dec
rorl
mov
jne
sbb
hlt
adc
das
leave
out
movsb
pop
jmp
jmp
mov
mov
pop
add
and
xlat
cmpsl
cmp
imul
sbb
repnz
adc
aam
xor
clc
sbb
in
cwtl
aas
add
lock
fisubs
das
cmc
sarl
lcall
lcall
pop
lods
pop
leave
inc
mov
cmpsb
stos
addb
hlt
cli
xchg
es
sbb
pop
fdivs
pop
cmp
imul
lahf
mov
ss
xchg
dec
scas
out
cmp
movsl
leave
lods
pop
rorl
outsl
test
int3
repnz
xchg
push
mov
out
xchg
jnp
lcall
stos
jne
jno
iret
cwtl
das
or
dec
and
mov
jmp
mov
je
dec
gs
adc
inc
or
add
fisubs
adc
rcr
jbe
or
lret
pop
mov
xchg
xchg
sub
lret
jb
cmpsb
and
cmp
fwait
std
jl
in
adc
lcall
loope
push
and
pop
ljmp
negb
mov
inc
scas
mov
cmpsb
dec
adc
sahf
testb
jg
imul
in
xchg
insb
mov
sbb
adc
les
sbb
xchg
daa
pop
mov
mov
aaa
dec
out
imul
push
mov
pop
ja
jns
sub
pop
pmaxub
out
push
outsl
out
jecxz
push
mov
fsub
out
adc
mov
xor
inc
fildl
or
fs
orb
shrl
es
outsb
leave
movsb
push
hlt
xor
sarl
sahf
mov
sub
mov
hlt
pop
in
int3
inc
pop
ret
mov
inc
cs
mov
fldenv
jmp
push
lods
xchg
rorb
xor
jns
mov
add
cli
shl
xchg
cli
and
jle
cwtl
xor
mov
sbb
pop
xor
mov
mov
daa
jae
subl
xlat
es
push
jo
addr16
out
xchg
xor
lret
or
push
fistpll
push
test
into
dec
adc
cmp
stc
popf
rcrl
pushf
mov
inc
adc
pop
hlt
xchg
push
movsb
sub
fs
mov
mov
pop
pop
add
cmpsb
xor
mov
mov
sub
mov
lock
iret
data16
hlt
jae
call
movsl
pusha
js
negl
push
inc
xor
ljmp
jmp
cmp
lods
xor
movsl
xchg
frstor
movsl
in
sti
inc
outsl
sub
lods
mov
fiadds
mov
push
xchg
fs
arpl
and
jle
sbbb
sbb
jb
and
mov
and
xor
gs
xlat
mov
fldl
in
sub
js
xchg
in
stos
inc
sbb
sbb
mov
shl
cld
nop
jo
mov
mov
iret
jmp
adcb
jb
lahf
movsb
and
aad
add
cmp
lret
sti
push
fidivs
mov
movb
adc
rclb
mov
add
insl
add
out
imul
cld
xchg
sub
sub
sub
lods
popa
push
lea
add
pop
aaa
into
jns
or
dec
jae
mov
cltd
cmpsb
lret
dec
jns
or
jbe
lock
xlat
add
mov
jne
jp
cld
ret
dec
mov
jp
jb
in
pop
cmp
lods
fsts
xchg
in
pop
lods
fstpt
jp
imul
adc
mov
in
or
daa
push
sbb
ds
push
sahf
pusha
arpl
cltd
add
xor
adc
push
push
push
pop
scas
test
xor
fdivrp
sti
mov
sbb
pop
or
ljmp
cmp
fldenv
movsb
xor
nop
aas
cmp
push
sub
sahf
or
popf
jle
xor
outsb
dec
lret
push
xor
or
sub
jo
pop
sub
dec
in
adc
sbb
inc
dec
add
loope
inc
add
dec
mov
scas
test
push
mov
jae
ja
test
xor
int
lea
loopne
jecxz
xchg
inc
lods
sub
nop
mov
mov
out
iret
popf
pushf
xlat
cmpsb
ja
mov
hlt
lahf
mov
sub
jns
cwtl
jno
mov
pop
imul
push
mov
jae
sbb
ds
push
test
cmpsb
xchg
push
jge
idiv
dec
cmp
stos
pop
rol
shll
aaa
testb
jae
jge
or
pushf
mov
ljmp
int3
cmc
sub
and
mov
rcrl
dec
push
imul
fidivl
jnp
sbb
sahf
add
test
xor
popa
and
cmp
nop
incl
adc
cmp
pop
es
push
fidivrl
fwait
loopne
dec
bound
ds
test
lcall
into
imul
les
pop
imul
scas
mov
insb
jp
aad
popf
mov
mov
xor
push
jo
sbb
clc
inc
loop
jmp
movsl
mov
dec
push
mov
imul
inc
lret
cmp
inc
cltd
jb
fistl
cmpsl
cmpsb
in
testb
imull
lcall
or
das
mov
test
jle
mov
lcall
sbb
test
pop
jp
mov
stos
and
cmp
pusha
inc
cwtl
cmp
test
mov
out
out
mov
fadd
and
sub
sarb
nop
xchg
cmp
dec
data16
xor
xchg
stos
xor
xchg
push
fldcw
test
sbb
xchg
sbb
push
jg
std
pop
sbb
insl
sbb
lret
jl
xchg
adc
fidivs
adc
or
jl
daa
pop
arpl
add
mov
fstpl
aam
addr16
into
inc
jbe,pn
test
dec
rorl
mov
and
and
dec
xchg
lods
mov
jle
jno
in
jo
adc
inc
cwtl
push
insb
daa
mov
add
movsl
ret
adc
xchg
or
or
xor
nop
sub
je
inc
cmpsb
mov
adc
add
popf
xchg
and
jp
inc
cmp
cmp
mov
addl
stc
pop
inc
imul
sbb
jnp
jo
xor
sub
cmp
inc
push
shll
push
out
clc
push
inc
das
imull
sub
sub
pop
push
scas
lods
mov
ss
add
roll
mov
xchg
sub
xlat
int
je
mov
jo
push
jae
ds
outsl
out
pop
mov
mov
mov
xchg
sub
call
daa
sub
or
int
or
arpl
inc
dec
cli
xor
adc
mov
fiaddl
sahf
jg
out
mov
add
xor
lahf
ret
inc
loop
jge
es
add
sub
add
ret
jg
frstor
inc
insb
jle
shrl
sub
inc
cwtl
add
mov
aam
inc
dec
dec
xor
sets
aaa
into
sub
leave
dec
adc
stos
xchg
out
mov
hlt
out
jnp
xchg
add
sbb
mov
mov
adc
les
inc
incb
andb
mulb
mov
sti
sbb
sbbb
int
pop
mov
mov
adc
push
subb
pop
sbb
out
sub
adc
dec
mov
in
inc
jecxz
rcl
hlt
add
arpl
sub
in
push
mov
lcall
sbb
int3
lret
shll
push
je
inc
das
jp
lods
mov
xchg
adc
add
cmp
cmpsb
xorb
sub
ljmp
and
xchg
pop
cmovbe
cmp
insb
and
outsb
push
sub
cmc
call
cmpsb
dec
test
loope
pop
mov
ret
push
jns
xor
cmp
pop
insb
shll
mov
ret
jle
mov
ja
push
stos
pushf
jg
int
outsb
lea
cmc
mov
lcall
in
add
imul
shll
fistpl
xchg
data16
testb
sub
icebp
loopne
int3
and
add
outsb
ret
aam
jl
fmul
scas
mov
mov
mov
add
xor
insb
inc
inc
xchg
imul
mov
call
xor
incl
cwtl
mov
pop
fwait
aas
dec
pusha
jg
addr16
out
incl
inc
fiaddl
pusha
xor
fcomps
fdivp
mov
mov
cmp
rclb
pop
xor
push
push
hlt
adc
test
pop
lds
and
sbb
test
hlt
sbb
rcl
sti
cs
jnp
lock
lds
rcrb
jae
aas
rorl
cmp
inc
pop
loop
aad
mov
adc
xchg
out
outsl
rcrb
mov
cmp
mov
fidivrl
dec
pinsrw
pop
lahf
not
aad
aaa
mov
lahf
icebp
aam
rcr
test
imul
shlb
stc
mov
cmp
popa
clc
std
cltd
and
pop
cwtl
jg
leave
or
jb
loop
inc
and
inc
ds
sub
outsb
shlb
test
or
push
out
nop
and
test
call
sbb
dec
stos
xor
in
mov
add
dec
clc
sub
subl
ret
cwtl
cmp
fisubl
mov
pop
rolb
xchg
mov
jbe
push
push
and
or
lahf
jmp
roll
ds
push
ljmp
jno
add
jnp
addr16
imul
in
jg
push
sbb
addl
push
sub
mulb
lea
add
lea
mov
mov
ret
cmp
dec
pop
mov
dec
pop
test
test
ret
jnp
fisubrs
adc
mov
test
push
out
lea
sub
jae
mov
xchg
push
inc
fadd
mov
dec
bound
mov
test
shl
xor
or
fdivrl
push
lock
out
cmpsb
mov
mov
push
cmp
loop
test
xchg
add
jae
negb
popa
imul
pushf
mov
inc
scas
and
mov
xor
data16
sub
pusha
sbb
jecxz
outsb
dec
inc
and
lahf
shrl
push
pop
xor
sbb
icebp
push
pop
push
cmp
in
and
into
in
mov
cmp
inc
sub
daa
mov
jp
adc
lcall
push
mov
outsl
movsb
ret
cwtl
jmp
pop
fldcw
mov
push
out
xor
ret
push
xchg
jl
insl
jge
dec
sbb
popa
xor
out
ret
sub
add
enter
daa
das
dec
out
mov
in
mov
pusha
imul
add
xor
mov
aad
aaa
push
dec
mov
pushf
sub
xor
dec
ja
add
jl
movsb
xor
fildll
add
cs
xor
jb
jmp
hlt
js
adcl
push
test
push
ret
jb
pop
popf
dec
xchg
es
int
popf
fs
mov
mov
add
sub
xchg
mov
and
in
adcl
repnz
shrb
inc
nop
nop
inc
ret
adc
jge
popf
xor
sbb
or
mov
mov
mov
dec
ja
jg
aam
fimull
sbbb
xchg
mov
sbb
mov
ret
mov
fiadds
dec
in
push
int
movb
ja
in
mov
faddl
iret
jno
xchg
js
cmp
mov
je
or
mov
cltd
mov
mov
in
mov
cmp
sub
data16
cwtl
add
push
mov
jmp
int3
arpl
xor
clc
ret
sub
jg
stos
pushf
or
shrl
sbb
jl
push
xchg
mov
iret
ja
xchg
cmp
sbb
lock
inc
sbb
loope
fsubrp
dec
aas
popa
inc
out
xor
ljmp
loopne
or
inc
pop
mov
popa
icebp
mov
mov
add
mov
xor
js
dec
popa
dec
dec
rolb
sub
xlat
mov
push
jno
sbb
lcall
add
inc
adc
mull
add
aas
or
ja
inc
sub
mov
call
or
stc
inc
and
lods
add
xchg
mov
loop
push
leave
mov
arpl
jo
aas
cmpsb
jge
adc
jle
adc
adc
gs
in
ret
pop
sub
push
ss
lahf
add
test
outsl
scas
mov
addr16
repz
stos
or
dec
inc
mov
push
mov
and
jae
jb
mov
shll
push
jge
fldcw
lahf
mov
push
jge
lods
xchg
nop
fcomp
lret
mov
mov
mov
loope
mov
mov
sub
cmpb
cmp
mov
or
clc
adc
sub
and
sub
xchg
repz
sbb
or
mov
mov
pop
and
dec
push
cwtl
cmp
mov
jge
mov
int3
push
loop
mull
sub
repnz
dec
pop
notl
out
add
fistl
shl
sub
clc
push
sti
xor
jge
mov
and
cmp
addl
adc
and
hlt
xor
jl
cmp
icebp
xor
addr16
cmp
push
xchg
aam
jl
rcrl
xor
xchg
xorl
imul
call
gs
jno
mov
jge
and
mov
aaa
pop
enter
and
daa
mov
xchg
sub
mov
shlb
jg
fdivs
movl
stc
nop
cli
xchg
add
xchg
or
test
fcompp
jmp
sbbb
mov
pop
fnstcw
outsb
testb
inc
lods
inc
cmpb
fidivs
jae
lds
test
xor
and
inc
fadds
daa
stc
cli
and
sbb
cmp
stc
out
out
inc
pop
insl
push
pop
push
repz
jle
or
jnp
clc
icebp
lods
jmp
push
iret
sub
jbe
adc
jae
push
call
jle
add
jo
lret
negl
adc
pop
jg
xchg
cmp
sbb
mov
xor
push
aas
dec
cmp
xorl
shrl
dec
jecxz
movsl
sbb
mov
imul
scas
cmpsb
cmp
jge
les
mov
gs
outsl
roll
pop
testb
pushf
fildll
pop
cmp
aam
dec
pop
shl
imul
insl
or
imul
jae
adc
sub
ja
push
loop
xchg
add
pushf
pop
cmc
and
out
inc
xlat
faddl
pop
cld
cs
stc
cmp
in
pop
sbb
mov
ss
ds
fsubrs
aad
in
pop
mov
iret
lcall
pusha
out
rcll
adc
popa
lcall
push
scas
out
outsl
jnp
and
loopne,pt
les
lahf
aas
mov
fldz
aad
jae
mov
mov
ret
push
mov
sti
icebp
out
lods
xor
and
fstps
testb
push
int
fsubrp
outsl
jnp
aas
andl
or
inc
pop
push
test
lods
int3
mov
shll
pushf
pop
testb
cmp
and
ret
cli
push
loopne
dec
cmp
in
mov
adc
sarb
jge
lret
pop
and
sub
inc
pop
call
lock
call
sarb
and
movsb
add
mov
or
ret
or
inc
aaa
or
jno
xorl
nop
mov
movsb
shll
rcll
dec
mov
pop
inc
sbb
fwait
je
xor
adcb
iret
pop
data16
pop
or
adc
in
jp
or
add
push
inc
aam
dec
dec
sbbl
xchg
cs
test
adc
lock
stc
movsl
rcrb
dec
sbb
mulps
pushf
sahf
in
test
jne
fnsave
test
inc
pushf
mov
push
and
sub
lds
push
enter
lcall
adc
out
stos
test
push
jmp
testl
shr
dec
push
push
out
insb
cwtl
aaa
jp
in
test
shl
cmp
es
mov
xor
pop
icebp
subl
inc
inc
sub
test
adc
cmp
pusha
cmp
addr16
pop
out
xchg
scas
shll
mov
pop
sahf
iret
data16
mov
pop
and
jl
in
sub
mov
jne
and
cld
sub
rorb
inc
xlat
test
testb
icebp
adc
mov
push
adc
or
mov
jns
or
lcall
and
lods
out
call
mov
popa
push
lea
shr
mov
rcrl
xor
push
xchg
or
adc
dec
pop
adc
push
mov
and
mov
adc
int3
pushf
imul
push
icebp
sub
mov
xor
mov
mov
mov
mov
sarl
and
rcl
cwtl
das
scas
setbe
xchg
adc
pop
cmpsb
sbb
jg
mov
mov
inc
pusha
and
jno
inc
push
xchg
inc
imul
sub
mov
and
ja
or
iret
dec
stc
js
sub
popa
sub
xchg
mov
dec
decb
testb
cmp
cmpsb
pop
jp
adc
sub
bound
dec
aam
jge
jmp
mov
lret
push
xchg
mov
jbe
aas
repnz
and
push
pop
iret
xor
call
mov
in
inc
fcoml
dec
jbe
je
cli
movsl
push
test
add
shlb
dec
push
mov
repnz
adc
jecxz
xor
cmp
mov
mov
mov
sahf
insl
sub
mov
jle
pushf
cli
fsub
fwait
adc
xchg
jge
lcall
fucomp
aam
mov
daa
ljmp
adc
mov
dec
pop
loop
repnz
xor
cmp
dec
arpl
cmp
mov
cli
mov
in
pushf
pop
mov
mov
jno
out
xchg
sub
xor
xorb
xchg
sbb
aas
sbb
sub
inc
push
push
jge
aas
stc
lds
mov
dec
scas
in
lahf
xor
je
jne
lret
inc
bound
ss
je
aaa
mov
jbe
jmp
sub
bound
push
test
jp
mov
cvtps2pd
mov
pop
mov
fldl2t
or
xor
fcoms
or
jg
sub
jl
fldcw
cmpl
pop
add
dec
shll
lcall
mov
lret
repz
fsubs
iret
sbb
mov
fwait
lret
jb
or
mov
fs
sbb
in
inc
pop
xor
sti
push
fsts
call
aam
mov
or
sbb
mov
pushf
cld
movl
lods
ss
jl
cmp
adc
push
jg
adc
and
in
stos
inc
gs
stos
xor
cltd
loope
or
rcrl
sbb
xchg
push
push
pop
scas
ret
insb
push
adc
imul
pop
pop
mov
dec
movsl
sti
sub
cwtl
clc
add
cs
test
push
jecxz
pop
xchg
pop
jne
icebp
mov
dec
pop
cmp
xchg
aaa
addl
clts
jae
icebp
outsb
scas
scas
push
sbbl
mov
mov
mov
cmpsl
sbb
mov
sub
ret
rorl
jno
pop
out
in
jl
shlb
add
in
test
rcrl
push
loop
or
pop
jge
imul
test
dec
mov
das
fcomps
in
imul
adc
sbb
push
dec
les
and
mov
mov
xchg
sub
test
pop
inc
test
clc
push
mov
push
jo
in
push
inc
mov
jbe
out
aad
pause
xchg
xchg
mov
imul
or
push
push
push
scas
shll
cmp
dec
out
pop
ret
xor
xchg
insl
inc
decb
data16
cmc
leave
adc
outsb
sbb
inc
xor
mov
cmp
aam
out
push
mov
pop
decl
stos
sub
xchg
push
or
sbb
test
sub
je
rcrb
sbb
jae
inc
int
jae
mov
das
jbe
xor
jle
mov
sti
jae
add
pusha
inc
cmp
fcomps
lahf
in
mov
push
cmp
mov
ljmp
jno
mov
fistpll
iret
or
in
xchg
add
sbb
and
sub
xor
jg
loopne
faddl
push
adc
mov
inc
mov
imul
popa
inc
pop
xchg
mov
sub
fistps
xor
sbb
in
scas
jp
pop
data16
shlb
inc
test
aaa
xor
arpl
push
insb
sub
out
test
and
lret
insb
xchg
pop
mov
fistpl
es
mov
push
jecxz
rcll
gs
test
sbb
std
mov
or
fstpt
pop
pop
jno
xchg
lret
sub
in
pop
in
or
mov
mov
fmul
sbb
mov
add
arpl
mov
jb
fwait
sub
jbe
loope
cmpsl
inc
insb
cmp
out
test
pop
mov
push
lea
xchg
jne
mov
int
push
faddp
test
mov
and
inc
sub
mov
lea
push
and
sbb
ja
hlt
mov
mov
adc
mov
inc
sbbb
fwait
loopne
inc
scas
in
loope
ljmp
fldenvs
sub
mov
xor
fdivrl
jno
enter
sbb
orl
test
dec
aaa
psubusb
xchg
or
jnp
jecxz
jae
pop
ja
jle
inc
test
or
inc
rorl
pop
sbb
loopne,pt
dec
sbb
rorb
movsl
repz
dec
push
push
sub
adc
xchg
sbb
or
dec
pop
pop
loop
out
lea
ljmp
jg
pop
or
mov
mov
adc
loop
jb
xchg
movsb
fldenv
add
aas
into
lcall
pop
or
xor
push
ljmp
stos
repnz
dec
and
repnz
ljmp
shlb
call
adc
outsl
mov
mov
int
jmp
lea
aad
fsubl
loope
jbe
outsb
daa
xor
aaa
lds
dec
pop
out
sub
sbb
shl
mov
mov
stos
adc
xchg
das
sarl
add
lods
mov
sbb
rcrl
lea
test
mov
sbb
cli
cmp
mov
add
mov
lods
jne
test
outsb
pop
rol
or
mov
icebp
mov
cmpsb
dec
movsl
add
pop
cmp
andb
add
sub
pop
enter
bound
cmp
in
rcrb
jle
mov
xchg
adc
rcrl
add
cmp
movsb
cli
enter
pop
out
test
fisttpl
xchg
cmp
mov
mov
push
or
cltd
xchg
add
movsb
movb
xor
cmp
cmp
pop
push
cmpl
in
cmp
mov
dec
js
xchg
cs
jecxz
mov
jbe
add
insb
gs
mov
nop
mov
xchg
stos
or
push
mov
roll
mov
mull
jg
sbb
push
jg
mov
ret
inc
fwait
xor
and
pushf
mov
out
std
dec
sub
jbe
fbstp
into
fldl
push
mov
les
and
stos
add
rcll
stc
push
popl
bound
push
push
ljmp
dec
inc
scas
shrb
inc
sahf
arpl
adc
xchg
pop
mov
mov
movsb
jmp
sub
ljmp
mov
clc
dec
bound
xlat
push
push
fnsave
aad
push
cld
push
cmp
cmp
outsl
sahf
dec
mov
push
pop
mov
in
rcrl
fwait
nop
cmp
mov
mov
inc
mov
adc
daa
inc
in
stc
lahf
sub
jmp
and
ret
xor
sbb
into
sarl
loop
lret
insl
or
sbb
arpl
mov
or
xchg
movd
jns
rcr
dec
aad
jg
sub
adc
aam
popf
or
loop
jge
adc
pop
cmp
inc
aaa
jnp
adc
xlat
repz
jo
mov
cmpsl
nop
loopne
push
inc
popa
xor
and
loope,pt
pop
cmp
dec
pop
mov
pop
xor
out
mov
data16
xchg
sub
aam
inc
push
xor
or
pop
or
movsb
inc
arpl
movsb
pop
lea
cmc
mov
loope
cld
or
fnsave
jae
sub
mov
movsb
int3
jae
lock
add
and
xor
imulb
mov
push
pop
scas
pop
mov
xor
push
popl
pusha
sbb
sarb
movntps
xchg
mov
leave
les
dec
fnsave
xlat
rcll
jecxz
jecxz
aas
in
sbbb
pop
cmc
aaa
sbbb
ret
in
ds
popa
xor
xchg
imul
outsl
cli
gs
not
into
xchg
push
mov
vsqrtsd
pop
jnp
jno
test
scas
or
pop
lret
mov
sub
lea
add
icebp
sbb
jo
fwait
inc
pop
les
inc
mul
out
mov
adc
mov
hlt
xor
push
arpl
fldcw
pop
dec
pop
xchg
dec
hlt
stos
mov
sbb
sbb
scas
ja
addl
and
std
aam
in
adc
mov
xchg
fbstp
iret
xchg
or
dec
call
sahf
hlt
sbb
jmp
cmp
mov
or
fldt
sub
jns
adc
lret
add
jno
push
fistpll
jae
mov
arpl
lret
and
inc
xor
insb
or
sbb
mov
in
jb
push
scas
mov
arpl
fcoml
scas
add
dec
mov
fs
cld
mov
mov
jecxz
rcll
or
out
cmpl
xchg
cmp
ljmp
or
inc
sbb
jne
mov
jl
push
gs
fwait
arpl
int3
insl
in
add
add
cltd
lds
insb
mov
xchg
outsb
std
test
test
aas
mov
push
push
test
mov
jl
inc
daa
clc
adc
insb
xchg
addr16
sbbl
sti
fsubs
sbb
repnz
test
sbb
ficompl
nop
jl
repnz
xor
xlat
aad
cmp
clc
sub
pop
xor
das
imul
mov
mov
mov
cmpsb
aad
fucomip
adc
inc
ficoms
das
dec
loope
hlt
and
cmp
sbb
fsubs
sarb
or
inc
fisubrs
mov
fidivl
nop
sbbl
dec
test
ss
gs
sbb
pop
push
and
imul
sahf
cmp
js
loope
xchg
sub
mov
test
shlb
push
sub
jb
pop
fisubrl
stc
or
push
repz
or
aad
cmp
inc
xlat
fldl
pop
cmp
repnz
nop
adc
mov
imul
adc
xchg
xor
inc
cmp
inc
addb
cwtl
fs
ffree
xchg
ja
dec
in
xor
imul
leave
mov
jnp
pop
dec
inc
inc
test
lret
dec
push
sbbl
in
add
jno
pop
repnz
sub
test
jle
adc
or
sub
lret
inc
fbld
ja
dec
fnstenv
clc
int
sub
push
mov
xchg
sub
jnp
mov
std
imul
xchg
loope
out
and
out
xor
mov
aad
and
je
xchg
unpckhps
test
dec
ficoml
bound
or
pop
jne
xchg
add
xor
mov
xor
ljmp
xchg
add
and
sarb
cwtl
adc
ret
or
pushf
data16
xchg
hlt
andl
and
enter
push
shrl
pusha
icebp
test
sbb
loop
movsb
out
mov
or
push
pop
xor
cld
or
icebp
mov
stos
sbb
fstpl
cld
mov
push
add
jmp
push
test
jle
push
popa
or
gs
lcall
mov
incb
push
mov
pop
rorb
add
addr16
ret
xchg
imul
dec
mov
cmpsl
loope
loop
outsb
mov
scas
sbb
movsl
mov
xchg
in
repnz
jge
leave
pop
add
mov
pop
out
mov
xchg
je
sub
mov
pop
jl
cmpsb
lock
cmpsl
xchg
mov
sti
aam
inc
jge
lret
bound
xchg
in
in
cltd
xchg
mov
repnz
jbe
ret
inc
out
arpl
or
xlat
aaa
lret
fstpt
int3
mov
cli
mov
push
jle
fistpl
in
and
inc
movsl
or
adc
mov
jg
cmc
enter
push
shr
movb
ret
in
test
jg
pop
dec
mov
lock
add
fsubs
xchg
lcall
ljmp
das
push
clc
scas
jg
outsb
inc
pop
or
sahf
push
sbb
push
addr16
or
dec
mov
cmp
xor
jo
pop
lret
mov
sub
inc
pop
mov
js
jl
push
daa
outsb
jle
fdivrs
mov
les
push
mov
mov
xchg
sub
sbb
jbe
fwait
or
mov
add
add
push
jb
add
lret
push
scas
roll
ficoms
lahf
negl
inc
test
mov
mov
pop
repnz
cmp
mov
jl
add
add
test
push
popf
pusha
mov
cltd
imul
je
add
xchg
mov
push
out
push
mov
shrl
inc
mov
add
add
sbb
dec
hlt
xchg
cmp
xlat
repz
fdivp
fiaddl
out
aam
stos
and
sub
jl
xor
popf
mov
imul
push
test
leave
ljmp
movsb
jb
add
push
push
gs
cltd
lea
sbb
lea
imul
bound
lret
mov
out
jg
push
dec
arpl
testl
ljmp
jae
pop
mov
pop
pushf
jp
dec
xchg
sub
sbb
xor
je
dec
push
mov
daa
int
out
mov
out
pop
faddp
loop
ret
mov
pop
cmp
cmp
mov
das
iret
sub
out
mov
xor
inc
mov
mov
push
add
test
cmp
loop
mov
push
mov
out
shlb
or
mov
cmp
icebp
sub
insb
add
out
mov
stos
cli
xchg
fnstsw
sbb
mov
pop
xchg
or
jg
pop
inc
cmpsl
lds
jge
mov
push
jno
add
inc
sbb
mov
ret
movlps
xor
inc
out
imul
addr16
dec
int
push
imull
icebp
mov
inc
pop
mov
mov
into
enter
xchg
push
mov
mov
std
dec
js
push
icebp
iret
mov
add
mov
and
out
adc
arpl
mov
outsl
call
jg
dec
jbe
rol
xchg
pop
ret
bswap
add
lods
and
scas
popf
jae
shll
push
mov
lea
jb
int3
rolb
lods
mov
sub
into
mov
mov
sbb
testb
mov
and
lods
push
mov
jecxz
lods
js
sub
mov
test
add
ror
outsb
push
pop
xor
lea
xchg
or
iret
ror
lods
adc
mov
adc
rcl
push
adc
mov
movsl
ret
xrelease
add
push
nop
mov
js
sub
add
adc
ja
pop
cs
enter
insl
fs
push
lret
adc
sub
xor
arpl
lds
and
mov
mov
dec
in
inc
in
les
xchg
or
cs
pop
sbb
xchg
push
fistpll
and
sbb
add
jne
xor
pop
out
xchg
xor
dec
data16
mov
ret
cwtl
clc
push
mul
fwait
in
dec
and
inc
xchg
outsb
cmp
stc
mov
jb
ss
xchg
push
nop
iret
mov
or
push
ja
aaa
or
xchg
xor
aaa
inc
mov
ja
push
sbb
cmp
ret
pop
in
push
scas
dec
inc
pop
mov
shrl
push
push
loopne
inc
icebp
sbb
scas
das
pause
test
popa
clc
outsl
pusha
in
into
xor
popf
mov
les
mov
xchg
imul
sub
test
cli
dec
mov
in
sbb
xchg
or
loopne
fcmovnbe
stos
add
dec
fnstenv
pop
or
dec
push
sbbb
mov
mov
mov
stos
mov
inc
cwtl
mov
push
dec
cmp
in
mov
lcall
mov
jne
mov
aam
js
mov
add
cmp
mov
pop
out
imul
mov
popl
push
pop
outsl
xor
pop
test
insb
cmp
jo
mov
cmp
stos
jecxz
xchg
bound
sbbb
shl
cmp
lds
push
movsb
mov
das
loop
fcom
push
mov
jnp
and
adc
or
repnz
icebp
pushf
ret
cwtl
insb
cmpsl
mov
mov
push
aas
mov
shll
dec
pop
and
sub
dec
in
leave
cmp
insb
push
fistl
push
shlb
lcall
mov
insl
mov
scas
xchg
mov
xchg
mov
or
fnstenv
or
mov
les
out
dec
pop
fsubp
mov
ficoms
cltd
xchg
jg
sbb
hlt
sub
mov
add
rclb
sub
stos
cs
jb
mov
lahf
sbb
xchg
lcall
jno
inc
push
lret
dec
and
mov
jo
enter
sbbl
sahf
pusha
lahf
adc
jbe
std
or
test
aam
stc
outsb
cmc
dec
ret
sbb
ss
cmp
outsl
mov
in
mov
in
sub
test
dec
xchg
mov
and
dec
insb
cmp
mov
sahf
in
lret
in
pop
jae
in
sbb
inc
jno
in
insl
lock
xor
and
fnstsw
int3
andb
shll
cs
outsl
cmp
mov
mov
sysexit
xchg
mov
aad
mov
sahf
jl
push
sbb
push
and
jno
pop
imull
mov
jp
ljmp
or
out
mov
mov
shl
adc
jge
cmpsl
adcl
mov
inc
decl
cmpl
mov
push
icebp
adc
xlat
movsl
jl
sbb
or
adc
mov
mov
aaa
push
mov
cmp
aaa
pop
icebp
notl
mov
aam
in
aad
notb
cmp
pop
mov
and
xchg
dec
fistpl
test
js
push
cmpsl
push
push
movsb
jg
mov
fsubl
scas
inc
movsb
jns
push
mov
cwtl
lret
jg
push
out
push
dec
pop
cmp
add
jp
jne
mov
sbb
clc
push
add
loop
mov
mov
mov
imul
test
add
outsb
mov
pop
in
dec
andl
inc
pop
leave
pusha
cmp
cmpsl
fstl
jae
add
push
repz
out
lret
pop
dec
stc
mov
cmp
sub
aas
mov
popa
movl
pop
stos
andb
or
pop
sbb
mov
aam
adc
lods
xlat
outsl
fidivs
repz
jb
mov
adc
mov
fildl
push
fcompl
mov
xor
push
sbb
push
add
push
xchg
imul
cmc
ds
daa
pop
fnstenv
pop
push
xor
and
push
inc
adc
out
lahf
xorb
hlt
stos
xor
pop
icebp
lret
addl
fldl2t
enter
leave
pop
sub
xlat
mov
clc
pop
rcll
jecxz
cmpl
shlb
into
stos
cmp
mov
jae
outsl
pop
xor
scas
lcall
cmp
enter
or
popf
inc
sarl
mov
repz
bound
xchg
in
popf
popf
mov
divl
cltd
and
lahf
das
mov
fstpt
ret
jle
in
test
test
fdiv
loop
shrb
jmp
fcom
rcrl
aad
hlt
and
jb
dec
mov
cmp
dec
movsl
mov
dec
icebp
pop
fdivs
mulb
xchg
xchg
pop
mov
adc
and
cmp
push
jmp
lods
pop
cmc
mov
fnstcw
adc
pusha
mov
nop
cli
inc
lcall
xor
push
in
lcall
cmp
mov
sub
stos
in
aad
mov
jbe
dec
fstp
jae
adc
mov
adc
inc
adc
adc
sbb
xor
push
mov
pushl
cmp
or
push
add
jle
mov
stos
mov
mov
sub
push
out
imul
insl
xchg
aam
mov
sub
push
in
gs
add
mov
testb
popa
xor
push
mov
inc
fiaddl
inc
or
sbb
sbbb
mov
or
mov
rolb
movsb
cmp
fidivl
fabs
js
aas
push
movsl
lods
test
mov
xchg
jge
out
pop
xchg
sub
rolb
jl
jbe
jbe
adc
fcmovnu
je
data16
push
xchg
notb
ret
pop
xchg
pop
bound
cmp
shll
out
push
nop
mov
arpl
shlb
xchg
lret
out
mov
out
mov
ss
xchg
shr
jecxz
xchg
cld
fmull
dec
mov
decb
mov
jge
imul
fwait
and
int
cmc
std
stos
call
int3
mov
in
pop
dec
pop
add
ljmp
mov
notb
pusha
subb
dec
mov
ja
hlt
jp
pusha
int3
icebp
mov
xor
inc
scas
jnp
or
dec
adc
push
js
mov
test
push
jno
loope
mov
lahf
ret
dec
xchg
aas
daa
fwait
cmp
and
sbb
xor
mov
pop
cld
push
mov
lret
pop
add
push
pop
in
or
mov
add
cmp
and
mov
jmp
inc
and
add
adc
cli
sbb
pop
push
ss
cmp
ljmp
inc
shlb
jne
jecxz
test
ret
xor
es
push
andb
mov
push
or
cmp
push
cmpsl
enter
lret
push
mov
and
mov
xlat
movsb
addr16
daa
int
ret
sub
pop
data16
shlb
mov
sahf
xor
pop
stos
ret
push
gs
xor
add
or
lret
out
cmpsl
jno
aaa
jle
xchg
sbb
mov
inc
in
xchg
xchg
push
mov
out
adc
cmp
hlt
cmp
or
ss
mov
pop
mov
jge
mov
fisubrl
xchg
in
test
scas
dec
xor
dec
jae
js
lahf
outsl
test
add
jge
push
outsl
sbb
addr16
xchg
add
inc
test
sub
enter
xor
mov
mov
lds
fnstenv
out
out
dec
ret
jnp
jne
jg
sbb
ljmp
call
bound
out
inc
fisubl
ljmp
cmpsb
and
jmp
and
mov
cmc
incl
adc
mov
sbb
jae
cmp
stos
sbb
xchg
aad
dec
aas
loope
pop
ret
movsb
in
lods
xchg
lds
add
jmp
ss
out
ja
mov
add
jg
add
mov
sub
mov
les
and
lock
sbb
sub
rcrl
es
negl
inc
ret
ja
push
jbe
dec
and
lret
push
jo
mov
mov
lret
xchg
cli
push
into
ljmp
loope
cmp
vxorps
inc
xlat
lcall
jo
mov
insb
jecxz
bound
pop
push
push
or
push
mov
repnz
dec
in
mov
je
inc
xchg
jns
xor
sbb
ret
dec
pop
in
pop
sbb
pop
sbb
push
jo
fyl2x
in
ret
sar
adc
test
fucom
inc
lods
add
scas
xlat
mov
rcr
inc
cli
popf
jbe
pop
das
mov
pop
hlt
push
cmp
cmp
cmp
xchg
fildl
and
or
lods
jp
push
clc
mov
mov
sub
out
out
or
add
mov
push
lods
leave
int
cmp
test
rcrb
and
or
inc
pusha
xorb
dec
cmp
call
jle
push
mov
jl
and
js
adc
mulb
add
arpl
cmpl
in
out
call
fmuls
pusha
or
lods
fwait
mov
mov
pop
push
sub
sub
dec
mov
jmp
push
mov
pop
cs
popf
push
jbe
cmp
jmp
ret
setg
xor
addb
cltd
pop
incl
and
push
sarl
add
adcb
test
popf
je
jo
pop
sbb
adc
adc
and
daa
pop
jle
mov
cmpl
xchg
mov
xchg
sarb
or
mov
ret
in
sub
arpl
ret
repz
fiaddl
xor
sahf
xor
xor
pop
mov
iret
lcall
frstor
xor
das
adc
int3
adc
not
and
shlb
sbb
inc
push
icebp
mov
cmpsb
in
pop
lock
faddl
add
mov
shl
lea
or
sub
xor
xchg
inc
fcmove
popa
xchg
daa
daa
push
stc
inc
push
push
and
addr16
fldcw
lods
inc
movsl
test
sti
ret
stc
pop
mov
in
pop
jbe
add
xchg
dec
pop
inc
clc
mov
pop
mov
mov
fucomip
mov
jae
dec
xchg
sbb
dec
mov
aaa
cmp
mov
testl
xchg
pop
loop
shlb
imull
cltd
inc
sarl
adc
sub
jns
in
adc
adc
mov
dec
cmp
or
cld
movsb
je
cmpsl
mov
in
dec
pop
mov
test
mov
cli
or
fldcw
jb
movsb
push
jae
mov
nop
in
ret
mov
jle
push
jbe
xor
lea
push
fwait
xor
das
inc
imul
data16
loop
push
xchg
repnz
xchg
mov
ljmp
daa
shlb
cmovg
xchg
sub
mov
sarb
push
jmp
xor
jecxz
add
aas
or
xor
jno
and
adc
sti
dec
pop
inc
sti
or
mov
out
in
int3
and
sub
xor
ret
stc
int3
jecxz
ljmp
push
mov
nop
popf
xchg
repz
call
into
mov
pop
cltd
fs
jbe
cmp
jb
push
xchg
aam
mov
ds
test
aaa
push
xorl
loope
xchg
pop
cmc
lods
daa
sub
mov
xor
stos
jbe
fsubrl
int
imul
add
cmp
gs
mov
xchg
clc
mov
fucompp
cmc
xlat
ss
or
mov
fdivs
mov
scas
cld
stc
jnp
aaa
lret
fsubs
popf
push
dec
push
pop
xor
pop
outsb
push
add
mov
fists
jg
out
je
mov
pop
fcmove
push
lds
int
daa
rcrl
mov
pop
push
jne
dec
fistpll
sub
adc
and
int
xchg
popa
sbb
adc
and
jmp
dec
pop
data16
sbb
mov
aad
not
push
cmp
or
and
mov
add
sbb
jl
and
sbb
adc
mov
mov
or
insl
cmp
outsb
addr16
lahf
xchg
push
aaa
pop
cmpsl
sbb
scas
mov
fwait
addr16
stc
dec
xor
cmp
mov
push
jl
js
xlat
je
out
les
cmc
aaa
int
testl
pop
fsubl
push
or
inc
cmc
stc
es
ficoms
pop
aas
int3
xor
lock
push
push
cs
es
ljmp
testb
push
adc
popf
testl
or
ds
sub
ljmp
lock
mov
ja
or
inc
and
mov
les
std
adc
sbbb
ds
pop
cmp
jecxz
loopne
pusha
mov
lret
ret
stos
stos
sbb
cmpsl
cmp
mov
ret
into
and
adc
out
nop
jne
mov
jg
fidivrl
xor
sarl
cli
sub
xor
push
fstl
sbb
lods
inc
pop
lret
mov
js
in
jnp
fisttps
ss
sub
push
test
je
push
in
sbb
inc
rcrb
sub
cld
add
mov
mov
add
sbb
add
mov
bound
sbb
mov
add
mov
mov
xchg
mov
mov
lock
push
pop
jp
xchg
dec
outsb
je
inc
pop
rep
gs
mov
pop
lods
mov
cmpsb
stos
pusha
icebp
xchg
xchg
lret
aaa
pop
pushw
cwtl
xor
mov
push
ret
add
xor
xchg
lahf
fs
mov
xchg
push
adc
mov
adc
push
push
xorb
xorl
push
adc
inc
and
sbb
cmp
push
jns
or
add
stc
inc
ss
aas
push
mov
lea
rorb
movsb
stos
mov
add
sub
in
sub
cwtl
andb
ss
xlat
ds
push
clc
bound
in
mov
fisubl
in
leave
xchg
mov
subb
dec
fsubrl
subl
pop
les
or
pop
repnz
pop
xchg
sub
ret
jp
inc
xlat
mov
jae
sub
mov
sub
xchg
or
push
sbb
and
jl
loop
push
popf
push
orl
push
repnz
ss
popf
lods
nop
outsl
inc
push
in
and
pop
sbb
stos
inc
add
add
sub
mov
pop
fisubl
ja
sub
push
pop
sub
rcr
aad
pushf
hlt
push
out
pop
jle
and
sub
dec
inc
xchg
jns
aas
clc
nop
mov
cltd
pop
repz
inc
loop
lcall
imul
push
ds
scas
adc
repz
in
js
mov
lret
movsb
jle
test
ja
inc
arpl
cwtl
push
test
pxor
mov
cmp
xchg
rcll
movsl
rcrl
sub
xchg
mov
imul
fdivrl
pop
push
xchg
adc
fsubl
jb
push
packuswb
arpl
loop
das
les
addb
insl
cs
cld
fimuls
jge
and
ljmp
jmp
or
jbe
clc
xchg
sbb
pop
int3
jg
lods
sub
mov
int
push
das
mov
aad
xchg
ret
stc
inc
in
jl
push
arpl
sbb
into
jo
sti
cmp
inc
mov
adc
xor
pop
int
sbbb
jmp
lret
jbe
or
lods
push
outsb
dec
pop
mov
push
pushf
pusha
insb
cwtl
lahf
push
mov
mov
and
addr16
fdivs
fs
lds
push
pop
inc
pop
push
jne
pop
repnz
aas
push
jg
adc
inc
jne
mov
ret
cmp
dec
notb
fidivl
idivl
out
lret
lods
adc
add
mov
push
lret
sar
out
sbb
sbb
ljmp
test
adc
outsl
sub
mov
jl
or
out
jl
xlat
pop
test
inc
nop
mov
or
or
loopne
fidivl
or
jb
adc
dec
leave
sub
fsubrl
jmp
pop
pop
fbld
cmpsb
sub
push
sbbl
std
jle
push
cld
mov
cmpsl
jp
jb
loop
mov
mov
movsl
insb
jns
cltd
dec
test
fdivr
sti
sbb
inc
xchg
sbb
gs
push
push
mov
sub
sub
inc
and
movsl
loope
and
xor
maxps
out
arpl
jb
or
push
jecxz
fwait
pop
pop
add
or
pop
scas
inc
mov
push
jne
jle
inc
lcall
pusha
dec
jmp
adc
ljmp
or
stos
ljmp
imul
mov
xchg
ss
add
arpl
mov
into
jo
xchg
ret
bound
pop
jle
scas
push
aas
fsubr
pop
push
stos
inc
js
add
dec
mov
rcrl
out
pop
movsl
mov
push
rorl
xor
jo
jb
insb
mov
stos
and
test
int3
push
xchg
or
mov
js
cmc
vsubps
ret
pop
add
jle
sbb
lcallw
ret
mulb
aam
push
mov
clc
popf
mov
testb
out
aam
scas
add
push
jb
dec
iret
inc
push
fldl2t
mov
or
cli
lahf
inc
popa
leave
loopne
shll
jbe
les
gs
lea
sbbl
cmp
jbe
enter
shlb
mov
pop
in
push
adc
pusha
sub
out
pop
or
std
fisubl
lret
sar
jge
push
out
push
lea
lret
imul
mov
sti
fdivrp
pop
adc
lea
pop
stos
clc
mull
dec
push
fldenv
inc
pusha
jae
dec
out
sti
jle
in
cli
rcll
pop
xor
daa
inc
xchg
mov
lcall
push
jo
and
test
push
arpl
or
xor
xchg
sub
push
xchg
cmp
repnz
stos
sbb
mov
cld
xor
stos
add
inc
jl
jbe
jg
stos
adc
push
int
js
and
stos
jmp
mov
inc
pop
outsb
jbe
sub
outsb
xchg
es
lcall
sahf
mov
lret
into
or
fs
and
cmp
in
add
cmpsb
inc
fsubr
lret
mov
dec
test
xchg
xchg
sub
xor
push
insl
xor
gs
adc
or
mov
lret
cmp
icebp
leave
out
sti
or
sbb
xor
lea
ret
xchg
mov
in
cmp
adc
jnp
mov
inc
pushf
aas
int3
adc
fldl2t
lds
dec
sbb
sarb
mov
movsb
ljmp
pusha
push
fstpl
jo
or
dec
dec
jne
xor
popa
andb
cli
add
and
test
int3
arpl
adc
daa
mov
fisttpll
inc
inc
cmp
xlat
jns
in
test
jp
cli
out
imul
and
sub
shlb
into
mov
mov
fs
push
and
fidivrs
fcmovnbe
xor
test
and
jb
sti
int
es
out
fistpl
jg
pop
in
mov
or
es
push
adc
inc
push
ja
xor
jb
xor
cmp
mov
xorb
push
sbb
das
cmp
and
mov
or
adc
inc
movsl
cmp
pop
push
push
or
fiaddl
fsubrl
cmp
add
inc
cmp
push
xchg
dec
test
pop
inc
in
jbe
dec
out
sbb
cmc
dec
jge
or
adc
sub
sbb
movsb
jecxz
ljmp
pusha
xchg
adc
enter
ss
mov
ljmp
ljmp
loope
scas
xor
add
clc
xchg
xor
dec
addb
xchg
lods
cmp
pop
mulb
push
sti
out
sub
jge
scas
sbb
mov
aaa
xchg
leave
pusha
leave
adc
out
sbb
int3
inc
push
mov
outsb
push
sbb
push
cs
test
pop
ds
adc
sub
scas
dec
scas
pop
out
push
jno
repnz
or
shl
dec
fsubl
popa
push
push
mov
and
fildll
sub
stos
ret
insb
inc
sarl
mov
jl
out
sti
dec
xlat
sub
ss
lahf
repz
dec
loope
sub
rorl
lock
jns
imul
push
jg
scas
jmp
loope
add
mov
bound
cwtl
dec
stos
cmc
in
pop
pop
sub
jns
data16
lods
add
cmp
idivl
adc
pop
filds
mov
add
mov
into
fwait
aas
add
cltd
or
ss
xchg
dec
or
ds
sbb
fnsave
lea
and
stos
in
xchg
push
inc
arpl
jg
outsl
mov
insw
ja
imul
mov
add
stos
jne
test
fmul
std
xchg
sub
inc
mov
jnp
mov
ja
pop
nop
jp
jae
pop
lret
jge
fbstp
dec
in
mov
cmp
insb
add
hlt
cmp
xchg
mov
xchg
mov
aad
and
sbb
inc
popa
xor
out
cmp
adc
mov
fprem
push
lea
xchg
mov
cli
es
cs
stos
lods
inc
enter
push
and
adc
nop
xor
aad
mov
and
rcrl
xchg
cmp
mov
cli
out
sarl
and
pushf
jl
outsl
mov
cmp
mov
dec
addr16
sub
insl
fldl
add
xchg
scas
cmpsl
test
mov
mov
or
cld
pop
pushf
adc
sbb
mov
add
or
xor
addl
xor
sbb
or
cmp
cmp
inc
icebp
push
hlt
jo
adc
lahf
lods
hlt
cmp
mov
or
inc
jle
mov
inc
push
push
ljmp
js
adc
ret
adc
pop
pop
sahf
loopne
inc
cmp
jle
sub
mov
fs
scas
push
outsl
mov
fidivs
nop
xlat
jge
fcoml
stc
pop
or
cmp
cmp
loope
int3
ficoms
pop
leave
pusha
cmp
int
mov
rorl
insb
hlt
sub
jge
aam
ret
pushf
inc
push
mov
hlt
lock
sbb
and
jecxz
inc
jecxz
and
shll
cmp
mov
xor
and
inc
sub
sbb
push
xor
iret
ljmp
pop
sub
shl
repnz
mov
and
add
inc
pop
and
in
sbb
add
movsb
adc
out
and
push
dec
iret
xchg
test
jo
push
jl
lock
mov
adc
fistpl
or
outsl
shll
cmp
or
inc
and
mov
xchg
fcmovnu
jmp
fwait
pop
cmpsb
mov
test
incb
dec
pop
jge
fwait
jns
sahf
adc
xchg
xorl
dec
hlt
fildl
xchg
sbb
and
cmp
xlat
fdivrs
cmpsb
add
aad
push
fucomp
sbb
ljmp
call
hlt
add
jno
pop
lea
mov
dec
fnstenv
out
das
sub
test
adc
pusha
adc
xchg
in
xlat
pop
jle
push
in
mov
xor
adcl
gs
frstor
sub
dec
mov
imul
adc
mov
fstps
push
mov
or
mov
outsb
mov
sti
sti
cmp
je
daa
sarb
in
pop
mov
inc
ficoms
cs
jl
mov
icebp
aam
pop
popf
call
cmp
stos
cmc
aam
fs
lahf
pusha
ss
clc
sbb
test
or
jnp
xchg
mov
dec
lock
ss
dec
xlat
je
test
inc
cltd
out
inc
js
addr16
lock
cmp
pop
decb
in
js
movsl
jno
test
mov
jge
mov
push
dec
push
aaa
mov
adc
cmp
dec
enter
sahf
lods
jae
insl
les
popf
js
dec
lea
add
mov
call
imul
cmpsl
fwait
sub
or
in
mov
mov
sbb
push
xor
ds
pop
sub
pop
addl
xchg
aad
mov
icebp
or
in
inc
ret
sub
mov
repz
mov
pop
adc
pushf
xor
and
inc
out
and
scas
pop
je
add
dec
mov
insl
js
mov
push
add
sbb
pop
and
movb
outsl
and
jl
ss
jb
negl
xchg
jmp
fstpl
in
dec
insb
sbb
fnstenv
jl
decl
mov
xor
test
add
fsubs
adc
push
negb
outsb
add
dec
mov
cmp
imul
xor
or
push
call
cmpsb
repnz
add
pop
out
test
iret
data16
or
mov
mov
fdiv
xchg
mov
cmpsl
jns
aam
rolb
pop
mov
movsb
adc
stc
nop
outsl
push
test
rcll
sbb
fbstp
adc
mov
test
mov
nop
or
pop
or
shrb
pop
push
mov
xchg
rcrl
cmp
mov
fidivs
test
cmpsl
or
ret
mov
sbb
js
sbb
or
fstps
cld
and
add
mov
iret
dec
xchg
mov
pop
ljmp
js
rcrb
lea
aam
aas
adc
mov
mov
or
mov
leave
pusha
and
mov
push
xor
mov
in
iret
push
xlat
int3
test
cmc
pop
test
mov
icebp
mov
dec
jge
sbbl
xchg
dec
lds
into
ja
xchg
das
lock
mov
sbb
mov
cltd
imul
ret
sbb
les
sub
jecxz
push
jne
add
xor
imul
and
jp
cmp
push
mov
and
mov
mov
lahf
out
out
and
jge
je
call
ja
push
jnp
cmp
inc
sub
loop
xor
mov
call
or
adc
shlb
and
rcrb
mov
mov
push
subl
cmp
cmp
push
lods
adc
outsb
dec
inc
pusha
nop
loopne
cmc
pmaddwd
pushf
jl
adc
and
in
adc
cmp
stos
es
lock
jecxz
sub
imul
mov
adc
ret
xchg
clc
add
cmp
imul
add
fcmovnu
jb
cmp
gs
gs
pop
dec
in
xorl
je
xchg
or
ret
cli
jle
mov
push
jo
out
jge
aas
push
adc
in
test
aam
loop
adcb
subb
inc
and
sbb
outsl
imul
mov
fmuls
enter
fwait
out
pop
fsubrp
pop
testb
je
movsl
fisubl
jle
xlat
pop
jl
imul
out
dec
inc
mov
mov
ret
push
cmpsb
inc
out
scas
mov
ja
mov
cmpsb
cmp
andl
mov
fs
sbb
sub
dec
pop
xchg
sti
imul
jne
xchg
or
stos
push
lea
adc
jg
mov
test
add
stc
jp
ja
psubusw
mov
push
cmc
nop
xchg
sub
repz
mov
jg
ret
cmc
rcrb
xchg
lock
xchg
ret
fildll
ret
outsl
shlb
bound
pop
imul
pop
cmc
adc
xchg
dec
cwtl
jl
pop
ds
loopne
jns
and
and
aad
lods
cmp
xor
fucompp
lods
cmp
adcl
cmp
stc
and
and
xchg
in
adc
lret
bound
jp
clc
lahf
push
mov
mov
loopw
idivl
out
incb
pop
cmc
in
mov
jecxz
imul
mov
cmp
xchg
lods
les
andl
in
xor
scas
shlb
pop
push
sahf
add
andl
mov
cmpsl
ror
xor
mul
pop
cmc
and
mov
lret
hlt
pop
ret
push
pop
cmp
daa
in
pop
jmp
addl
sbbl
and
push
mov
cmp
jne
in
in
pop
jge
adc
hlt
inc
pop
mov
fsubr
jns
push
xor
pop
bound
inc
mov
push
hlt
loop
xor
mov
push
shrl
in
fadd
sbb
repnz
xchg
insb
in
or
push
mov
cs
stos
dec
add
pop
js
add
pop
mov
cmp
push
dec
pop
dec
in
xchg
push
xchg
dec
add
xor
or
pusha
into
fs
ja
jge
in
xor
aaa
lcall
adc
xchg
cmp
loope
xor
ret
adc
sub
repz
dec
out
pop
je
insl
imul
leave
push
insb
clc
mov
popa
jl
inc
mov
in
sbb
faddp
daa
insb
jmp
jns
pop
and
sbb
sub
data16
out
test
addr16
into
enter
stc
scas
mov
push
inc
sub
addl
mov
lcall
gs
cli
xchg
addr16
pop
movsb
inc
daa
hlt
lock
push
add
pusha
notl
fwait
jle
das
mov
jg
mov
push
cmpsl
pop
inc
rcrl
sub
popf
xlat
xchg
outsb
jl
clc
sbb
fiadds
sbb
retw
push
jl
js
in
test
push
mov
mov
or
shrb
xchg
mov
dec
sbb
jle
ret
sbb
mov
insl
movsb
xchg
mov
adc
arpl
lret
popf
pusha
es
mov
cmp
popf
jae
es
mov
out
jmp
addl
jne
mov
test
inc
or
sbb
lret
mov
lods
lcall
dec
or
jbe
cld
mov
jbe
push
pop
adc
in
jmp
mov
add
jl
movsl
jmp
mov
lds
sub
arpl
adc
imulb
rcl
jge
mov
cmpsb
add
inc
and
data16
mov
aam
ds
fisubs
xchg
dec
dec
pushf
jge
daa
xor
lods
mov
shll
shlb
pop
inc
fimuls
and
push
or
gs
add
cwtl
sbbl
fisubrs
test
mov
lds
pop
and
jae
cmp
iret
inc
iret
sub
mov
lock
std
and
sub
leave
idivl
jnp
bound
xchg
or
push
xor
mov
sub
das
inc
push
jge
cmp
stos
sub
shr
jae
add
or
cmp
inc
jmp
and
cmp
xlat
test
lret
xchg
inc
dec
and
subl
inc
fisubs
mov
sbb
or
ficoml
or
jge
dec
in
lahf
dec
mov
push
mov
fnstsw
std
repz
movsb
cmp
subl
fdivrp
lock
cmp
push
xor
jl
testb
ret
outsl
jne
enter
mov
dec
in
stos
lcall
insl
out
push
or
das
jecxz
lret
outsb
cmc
leave
jmp
into
fs
mov
sub
xorb
mov
mov
add
sbb
cmpsl
sbb
ret
inc
cwtl
pop
out
test
mov
fdivp
pushf
inc
iret
mov
cmp
shlb
mov
mov
push
mov
mov
push
lds
shr
jmp
lods
sbb
jb
cmp
cmc
mov
pop
fwait
lcall
jb
mov
aas
roll
stos
mov
mov
fildl
loop
mov
scas
inc
test
sub
lods
adc
shrl
inc
xchg
rcrl
inc
lods
lahf
xor
stos
sbbb
and
aaa
leave
lods
push
jmp
jmp
sub
lods
lods
xchg
dec
stos
bt
scas
lock
sub
cwtl
fldcw
mov
xchg
cs
cmc
jle
pop
scas
aam
pop
push
sti
cwtl
scas
sub
in
fbld
sub
out
add
pop
xchg
mov
xlat
or
ds
sub
mov
xor
mov
shlb
mov
loop
fbstp
mov
jg
cmc
mov
and
shlb
into
mov
rorl
out
mov
cld
das
es
push
push
shll
inc
or
sarl
push
es
and
stos
xchg
mov
in
pop
or
add
jne
mov
cwtl
dec
daa
xchg
xchg
int
stc
cmp
pop
jo
add
mov
push
sub
jb
ja
adc
adc
aam
mov
inc
push
pop
adc
lods
xchg
jnp
ret
les
nop
mov
mov
pop
sub
inc
mov
imul
in
mov
hlt
mov
out
xchg
in
je
adc
mov
pusha
fidivs
mov
lods
enter
add
gs
jne
in
subl
shlb
adc
inc
xchg
pop
stc
pushf
xchg
add
fs
call
cmpsb
mov
sbb
nop
sub
cld
daa
cli
test
sub
fisubs
push
add
mov
mov
xor
aam
pop
sub
mov
lds
scas
or
stc
lret
dec
pop
jno
filds
pop
into
jbe
arpl
adc
ja
dec
enter
adcb
xor
jo
cmp
bound
mov
in
stos
js
aad
sbb
mov
aad
pop
int
rclb
ret
jnp
sbb
insl
cmpsl
sub
mov
rcll
arpl
loop
orl
jecxz
jg
mov
xchg
stos
pop
iret
lahf
xchg
mov
hlt
fst
bound
movsl
lcall
data16
add
jle
and
jae
imul
aas
popa
sub
adc
push
cwtl
das
push
lret
mov
mov
mov
xor
shrl
push
shrl
sub
mov
hlt
mov
jl
movsb
lods
clc
sbb
add
jmp
and
fs
sahf
fwait
xor
jno
mov
sub
int
add
xor
push
push
in
inc
nop
int
ret
fstps
mov
dec
xchg
int
mov
data16
sub
repz
xor
and
dec
mov
imul
inc
pop
movsl
sbb
mov
inc
push
jo
mov
inc
mov
xchg
jp
pop
js
shll
mov
loope
orl
xor
mov
enter
xor
xor
imul
mov
lahf
pop
jns
mov
add
das
test
dec
mov
inc
ljmp
pushl
xor
movl
fwait
xor
iret
mov
inc
cli
in
popf
rcll
popf
jo
or
icebp
mov
sub
pop
lret
mov
jp
pop
or
pop
ss
data16
push
adc
shrl
jbe
cmp
adc
mov
or
aas
mov
jb
mov
xor
into
int3
fidivrs
pop
pushf
or
andb
movsl
dec
in
inc
cmp
outsb
mov
adc
sbb
std
sbb
rorb
iret
ja
mov
bound
add
sbb
fwait
ja
pop
or
jns
and
mov
pop
lock
dec
seta
inc
filds
dec
fwait
xor
mov
sbb
xchg
cs
xchg
mov
mov
jg
fbld
outsb
cmpsb
popf
movsb
push
cmpsb
inc
int
lret
cmp
dec
pop
repz
push
inc
ss
mov
insb
push
jmp
or
test
stc
ja
fisttpl
les
mov
push
mov
xchg
pop
and
sub
aam
and
pop
out
push
mov
repnz
and
xchg
hlt
jnp
pop
aad
cmp
adc
int3
inc
enter
sub
cmc
xor
xchg
pop
lods
add
mov
add
or
lcall
sbb
push
jmp
inc
shr
jge
lock
call
stos
xor
int3
sbb
arpl
sbb
js
mov
inc
mov
fwait
sbb
mov
data16
outsb
leave
mov
mov
jmp
rcll
loopne
in
cmc
sahf
sbb
ret
pop
pop
hlt
mov
sub
icebp
out
mov
daa
shl
push
aaa
pushf
popa
jge
movsl
andl
js
clc
adc
mov
dec
push
outsb
inc
push
ret
lret
std
pop
pop
adc
in
in
orl
fwait
lock
sahf
movsb
mov
and
jle
and
inc
sahf
mov
roll
mov
aas
rclb
inc
fnstcw
xchg
jbe
mov
mov
fimuls
push
mov
loop
jae
cwtl
cmpsl
ds
scas
outsl
in
or
mov
sbb
add
fwait
pop
movsb
ja
je
inc
mov
fidivrl
loop
imul
leave
pusha
push
ds
out
mov
jp
jo
cltd
push
ljmp
mov
inc
pop
push
jecxz
fwait
aaa
xchg
sub
mov
jg
add
adcl
iret
fsts
dec
dec
incb
adc
fs
loopne
ficompl
test
mov
in
dec
loop
xchg
js
mov
pop
je
push
mov
imul
shrb
fistps
inc
sbb
mov
mov
pushf
pop
cmp
ds
ja
pusha
dec
mov
mov
cltd
leave
jo
negl
pusha
es
jbe
clc
cli
aaa
dec
insl
dec
stc
subb
leave
int3
and
imul
clc
hlt
xchg
or
jb
sub
add
dec
daa
inc
loopne
addr16
sahf
cmp
cmp
jcxz
adc
add
adc
mov
xor
icebp
ja
push
into
fmull
std
test
mov
scas
lock
mov
mov
cmp
push
sub
add
mov
mov
cmpsb
ljmp
sbb
xor
xchg
fwait
mov
pop
in
dec
inc
dec
fnstsw
sub
ss
out
stc
pop
mov
pop
in
lret
mov
push
xchg
out
outsl
inc
fcomip
jns
into
rcrb
insl
inc
mov
push
mov
pop
mov
sbb
sub
adc
push
or
push
adc
lods
cs
jbe
or
jae
xchg
movsl
inc
nop
push
loop
jecxz
fadds
test
dec
dec
jp
cmp
ss
push
mov
sbb
ss
inc
cld
push
lods
or
mov
inc
lret
bound
adc
mov
push
lock
loopne
in
fwait
test
and
xchg
testb
in
test
out
mov
inc
mov
iret
jno
mov
test
xchg
cmpb
popa
mov
pushf
das
in
jmp
imul
fdiv
mov
fsubp
test
sub
cs
jecxz
out
and
xchg
xor
or
fiadds
sbb
test
clc
sbb
jmp
lret
sti
hlt
rolb
push
inc
int3
cmpb
pushf
dec
mov
lahf
xchg
mov
mov
ret
jl
aaa
push
mov
mov
shrl
sub
aaa
mov
stc
mov
push
adc
hlt
inc
pop
sbbb
pop
push
mov
sub
js
push
addr16
sahf
add
lahf
out
and
lds
das
out
lret
push
outsb
arpl
dec
imulb
loope
push
negl
sbb
push
xor
movsb
pop
testb
int
outsl
jge
mov
fiadds
add
xor
jmp
jb
mov
sbb
mov
loop
in
sbb
ss
stos
sub
rcrb
out
icebp
adc
mov
or
movsb
hlt
mov
adc
dec
sub
cwtl
jp
inc
cs
dec
jnp
lret
aas
jle
enter
or
fwait
enter
nop
xor
jb
push
sti
ljmp
sarb
ret
lds
cmp
data16
cmp
adc
mov
ds
dec
mov
sbb
in
insb
add
jns
out
and
out
mov
mov
sub
mov
and
mov
lret
xchg
arpl
push
pop
sub
mov
addr16
sbb
sahf
bound
inc
gs
cmp
jnp
adc
xchg
addr16
dec
jl
inc
dec
pop
and
jl
jmp
cmpsb
mov
test
stc
imul
push
in
pop
ljmp
and
pop
pop
in
stos
jle
mov
mov
sbb
iret
fucom
fs
xor
inc
pop
push
jae
mov
popf
xchg
cmpsb
mov
mov
add
jge
jecxz
loope
shrl
repz
dec
cltd
xchg
sub
jge
in
sub
jl
jbe
push
call
mov
ss
daa
and
cmp
int
sbb
int3
outsb
xchg
mov
add
outsb
jno
outsb
lret
movsb
cmp
jns
push
and
ret
popa
or
inc
fisttpll
mov
jns
push
pushf
dec
out
adc
ja
lods
push
repnz
pop
sbbl
aaa
je
sub
jae
push
mov
xlat
outsb
adc
or
xchg
clc
mov
lods
adc
sub
jmp
sub
or
mov
adc
bound
cli
cmp
aad
mov
and
dec
cmp
xor
outsb
bound
daa
sti
or
add
das
xor
pop
xor
scas
jp
jmp
rcrl
ljmp
dec
or
cmp
int3
arpl
inc
nop
mov
adc
lods
filds
cmc
loope
mov
cmpsb
adc
sub
imul
mov
sar
cmp
jp
test
leave
pop
scas
jae
push
out
in
fnop
jo
outsb
jl
inc
loopne
aas
xor
sbb
fs
and
loop
jns
mov
xchg
setl
inc
xlat
pop
inc
mov
ja
mov
add
jo
test
adcb
daa
sbb
and
repz
mov
push
int3
pushf
jnp
mov
filds
sarl
lods
push
and
ja
daa
xor
adcl
cmp
fucomp
add
push
sub
decb
mov
jb
ja
pop
iret
std
push
sbb
lock
mov
pusha
pop
mov
pop
pop
lods
mov
dec
cmpsl
and
sbb
dec
loope
stos
sub
push
push
andl
insb
xchg
add
dec
outsl
outsb
jmp
or
push
mov
sti
es
push
xor
sbb
push
and
xor
and
sbb
add
sbb
sbb
pop
push
pop
pusha
clc
outsb
jne
sub
push
inc
inc
cmp
pop
xor
in
mov
mov
in
repz
cmp
sbb
movsb
negl
pop
and
mov
mov
addr16
mov
mov
push
lods
dec
pop
xchg
ds
or
mov
movsb
push
push
pop
cmpsb
jp
mov
sbb
adc
sbb
ds
js
sbb
lret
mull
cmp
mov
adc
adc
pushf
scas
push
jge
mov
jns
cmp
leave
lretw
mov
test
loope
imul
cmp
bound
pushf
dec
jo
sub
stos
scas
ret
fnsave
jge
jne
xor
or
mov
scas
inc
mov
loop
arpl
loop
out
cmp
mov
scas
frstor
or
out
dec
xchg
js
stc
adc
out
pushf
andl
out
das
lea
xchg
test
out
out
mov
shll
fisubrl
sti
scas
fsubl
lea
insb
and
inc
adc
cld
dec
mov
jmp
xchg
ss
lock
pop
cmp
push
jns
in
das
dec
jl
fs
cmp
jg
push
and
stc
inc
pop
xchg
adc
pop
mov
cmpl
sti
in
xchg
or
mov
mov
push
lea
in
mov
repnz
sub
lods
incl
xlat
jp
loop
mov
gs
mov
jp
ss
arpl
add
nop
xor
fs
gs
and
jl
inc
push
in
aaa
cmp
and
xchg
cmc
hlt
out
mov
in
mov
ret
hlt
dec
cltd
test
push
xchg
loop
xchg
mov
lds
dec
pop
adc
sub
cld
movl
aas
sahf
lods
fwait
dec
add
xchg
lds
in
je
mov
stos
mov
rcll
push
insl
or
ret
inc
sbb
jecxz
push
or
cmpsl
rcll
pop
lods
cmp
test
xchg
sub
fistpll
out
js
out
rclb
dec
insb
fwait
xchg
cmp
mov
inc
icebp
or
push
dec
jno
fisubl
addb
dec
sub
jbe
loop
aad
mov
dec
test
push
bound
pop
cmc
rol
in
adc
sub
push
adc
inc
fs
push
adc
repz
xor
cli
insl
in
adc
xor
adc
push
inc
fstpl
leave
jge
fmuls
cmp
imul
out
push
mov
jbe
add
jns
inc
fwait
aaa
dec
popa
arpl
cmp
aas
cwtl
mov
mov
push
cltd
inc
ror
sbb
lods
sub
mov
outsl
and
test
les
jecxz
dec
dec
in
mov
push
sub
cmp
dec
movsl
ret
out
cmp
cli
inc
inc
fdivl
pushf
popa
xlat
fidivrs
pop
xrelease
gs
pop
inc
leave
xor
or
mov
es
test
inc
repnz
aad
or
into
mov
or
sarl
int3
fiadds
sub
incl
xor
stos
sti
inc
iret
sbb
rorl
outsb
fsubrs
ljmp
sub
scas
out
repz
cmp
insl
notb
and
pop
dec
xor
cmpsl
cmp
and
test
clc
inc
or
jmp
mov
sahf
pushf
ds
call
test
ret
mov
mov
cli
push
daa
inc
inc
inc
fidivrl
hlt
fs
mov
or
push
sahf
mov
fistpll
sar
or
cmp
and
jecxz
fsub
jle
fistpll
sbb
into
or
dec
ficoml
pop
insb
ret
lcall
popa
add
aas
mov
test
arpl
pop
lods
jl
out
inc
mov
cwtl
mov
ja
pop
jne
setle
mov
rcrl
popa
jnp
add
sbb
inc
inc
mov
mov
clc
pop
lret
cmpsb
nop
dec
mov
adc
fisubrl
lahf
mov
mov
add
dec
mov
xor
jmp
mov
imul
push
and
fnstcw
ja
leave
int
cwtl
hlt
push
inc
aam
popa
inc
cltd
sub
in
fucomip
test
popf
repz
mov
outsl
add
sbb
pop
faddl
daa
outsl
mov
push
mov
push
and
sub
xor
jmp
and
cmp
js
aam
push
jg
jle
inc
jl
ljmp
pop
dec
or
int
in
insl
mov
iret
or
popa
pop
mov
int
jmp
inc
add
popf
xor
cmpsl
and
stos
mov
sbb
jg
jmp
sub
lea
ljmp
pop
rol
adc
xor
mov
xor
ret
xchg
or
pop
in
cmp
arpl
or
in
in
icebp
mov
mov
pop
mov
pop
sub
sarl
in
jnp
jae
mov
out
gs
xchg
cmc
dec
mov
rol
lods
pop
xchg
jnp
adc
pop
jg
adc
push
dec
xor
xchg
fcompl
cmpsl
inc
fidivrs
ret
mov
xchg
xor
ja
mov
mov
pop
cwtl
xlat
and
push
mov
jo
test
dec
nop
out
add
and
xor
cmp
lods
fisubs
je
push
scas
mov
jne
jb
int3
sub
scas
ret
push
test
lods
mov
out
push
push
or
cmp
icebp
cmp
dec
jne
or
imul
xchg
cld
mov
andb
inc
outsb
jecxz
cmc
push
mov
ret
mov
add
inc
xor
test
inc
ljmp
insl
mov
dec
dec
test
insb
mov
stos
sub
lds
js
mov
sub
in
rorl
sub
pop
shl
and
cmp
in
ffree
mov
filds
imul
repnz
adc
pushf
xor
mov
cmp
and
icebp
loop
dec
adc
inc
movsl
daa
outsb
jge
push
fsubrl
aaa
repnz
dec
dec
inc
xchg
add
jb
fnstsw
out
push
rcrl
dec
in
icebp
jb
adc
xchg
bound
test
mov
sarb
adc
sbb
jne
jge
and
jp
enter
cmp
pop
inc
les
cmp
push
pop
push
sbbl
xor
xorl
mov
cld
cltd
and
add
push
out
add
outsl
shrb
mov
fucom
enter
sbbb
pusha
lahf
in
subl
outsl
jnp
dec
or
aad
mov
pop
sub
cmpsb
mov
mov
movsl
cmp
cli
or
nop
push
jl
test
pushf
xor
or
dec
jle
push
test
outsl
ret
xor
xchg
sub
out
repz
pop
rcr
cmp
jecxz
fnsave
xchg
pop
xchg
repz
lods
test
xchg
fnop
dec
pop
mov
push
sub
mov
pop
idivl
outsl
adc
mov
pop
mov
or
jnp
cmp
adc
andl
icebp
sbb
mov
pop
mov
es
add
add
cmp
leave
pusha
dec
arpl
xor
or
sub
inc
add
xchg
lea
movsb
mov
daa
mov
xor
dec
mov
andb
enter
add
inc
shlb
cmpsl
or
jge
sbbb
mov
inc
fcmovb
push
cli
push
dec
out
xor
add
xor
iret
sub
pop
sbb
mov
imul
sbb
mov
xchg
xchg
sub
mov
int
xchg
and
test
mov
or
mov
add
ja
mov
sub
in
push
sbb
aaa
adc
push
scas
add
jae
xor
subl
and
jns
push
aas
sbb
sbb
add
xor
rcll
and
jl
test
lahf
inc
mov
and
pusha
inc
mov
enter
xchg
adc
adc
pop
test
in
mov
pusha
mov
xchg
sbb
mov
clc
sub
cmpxchg
nop
cmp
lret
jnp
decl
jmp
inc
xchg
mov
loop
fisttpll
dec
hlt
jge
shl
rclb
or
inc
int3
inc
adc
das
mov
dec
gs
bound
imul
data16
lea
cmp
sbb
sub
dec
in
adc
rorb
adc
add
cmpsl
imul
sbb
push
jb
test
ja
stc
push
outsl
fcom
sub
xchg
stos
mov
icebp
and
mov
dec
mov
nop
dec
fstpl
mov
out
arpl
and
pop
mov
das
xor
push
loope
dec
aaa
stos
cmp
aad
filds
cmpl
out
dec
add
lods
icebp
adc
mov
jo
pop
mov
test
cli
or
ret
dec
pop
or
jecxz
addr16
movsl
or
xlat
test
call
xor
mov
push
sbb
leave
mov
jae
cmp
xchg
mov
xchg
cli
icebp
add
add
jae
xchg
sub
lcall
sub
ljmp
orl
lret
test
int3
idivl
cmc
lea
pop
pop
std
sar
sarl
fcompl
add
cmp
sub
push
xor
mov
or
cmp
adc
bound
addr16
or
push
arpl
push
cld
push
test
or
add
add
in
imul
js
rolb
dec
repnz
mov
push
dec
inc
jnp
shlb
mov
jns
mov
rcr
xlat
and
and
adc
jl
xor
cld
jae
adc
andl
sbbl
int3
cmp
lahf
and
addr16
push
or
xchg
jg
pushf
xor
or
or
pop
inc
mov
dec
cmp
or
iret
scas
cld
icebp
adc
data16
pop
dec
xchg
jb
jb
aas
xchg
mov
jmp
imul
sbb
xchg
aas
lret
jnp
adc
das
mov
mov
jae
and
or
push
mov
js
aaa
fdivr
jge
lods
xchg
pop
mov
mov
sbb
je
sub
imul
outsl
jnp
xchg
pop
imul
lret
push
sahf
mov
push
push
inc
mov
fwait
rolb
arpl
pop
dec
mov
push
push
movsl
cmp
xchg
or
mov
push
shll
pop
and
and
ror
cmp
mov
pop
xor
fildll
test
cmc
or
cmpsl
sbbl
les
aaa
mov
fdivrl
fistpl
jb
ljmp
lods
mov
push
jmp
jb
adcb
pop
jmp
hlt
fnstenv
stc
cmp
aam
push
xchg
lcall
dec
popf
xor
icebp
jo
dec
and
aas
jmp
inc
cmpsl
mov
repnz
adc
icebp
pop
out
and
shll
xchg
jne
lcall
jge
std
push
xchg
fstl
inc
push
sbb
repnz
cwtl
inc
cld
ror
mov
mulb
cwtl
jmp
cmp
dec
pop
divl
fdivrs
dec
aas
inc
mov
sbb
add
cmpb
orl
repnz
or
add
mov
or
lods
xor
cmp
fbstp
pop
xchg
imul
xchg
xor
mov
mov
mov
mov
ret
hlt
cmp
adc
xchg
sbb
mov
pop
fsubs
in
outsb
out
ljmp
popf
stc
out
add
jo
aaa
adc
or
or
push
push
aaa
pop
xor
jo
ficompl
daa
xchg
dec
lods
std
cltd
int3
xor
cmp
mov
jb
cmp
es
mov
rcpps
dec
inc
mov
xor
mov
xchg
mov
mov
or
mov
xor
fdivl
lds
jbe
adc
addr16
test
mov
loope
lret
push
stos
push
sarb
mov
sbb
div
adc
out
pop
jmp
test
inc
mov
mov
xchg
cwtl
jmp
pop
sahf
jno
aas
xchg
es
fsubl
std
pop
push
add
ss
sbb
int3
push
pop
jns
jne
push
pop
subl
jnp
or
push
testb
ds
dec
rcrl
cmp
lds
out
xchg
ret
jp
jmp
mov
mov
aad
fwait
pop
repnz
sub
xor
daa
xchg
scas
inc
mov
xchg
adc
mov
inc
daa
lods
dec
and
adc
divb
pushf
lahf
aaa
pop
xlat
push
pop
fwait
xor
enter
adc
adc
cwtl
mov
test
stos
enter
pop
fdivl
out
adc
xor
imul
dec
push
pop
repnz
repnz
gs
int3
daa
std
xchg
cwtl
add
pop
jae
jl
ficoms
or
dec
cmpsb
cmp
icebp
movsl
dec
loopne
push
lods
inc
jns
pop
mov
lcall
rcr
dec
rorl
adc
ds
jno
stos
dec
loopne
cmp
mov
addr16
hlt
insb
lock
jne
push
or
popa
cmp
xchg
add
adc
mov
xor
insl
cmp
pop
loope
icebp
rorl
repnz
bnd
aas
in
xchg
stos
icebp
mov
ja
pop
bound
push
adc
jp
jne
cs
sub
pop
popf
xchg
mov
fbstp
pop
out
fmuls
and
cmp
iret
rclw
and
mov
lret
bound
inc
push
mov
mov
lock
and
mov
enter
sbb
cmp
xchg
cmp
mov
add
pop
xor
cld
xchg
es
sahf
clc
repz
sub
sahf
lcall
jno
xchg
jb
add
pop
negb
popa
xor
mov
aad
jbe
mov
adc
les
clc
mov
sbb
ss
stc
adc
enter
push
push
cwtl
dec
out
jb
outsb
mov
aam
mov
int3
sub
mov
sbb
lods
sub
pop
fs
cs
mov
mov
call
mov
pusha
imul
mov
inc
lds
or
scas
inc
dec
ja
sub
xlat
add
add
and
hlt
jae
outsl
movsl
or
pusha
cmp
pop
out
nop
repz
clc
call
sub
sbbb
dec
mov
mov
loopne
out
hlt
xor
sbb
push
popf
inc
xchg
sti
mov
jo
mov
inc
ret
imull
adc
je
push
cmpsb
pop
leave
pusha
nop
fidivs
mov
rcrl
cmc
mov
fbstp
xchg
adc
jno
xor
jbe
push
test
sub
loopne
sub
and
mov
arpl
loopne
test
lretw
ret
popa
clc
icebp
pop
add
pop
inc
stos
and
mov
jae
adc
lcall
add
cmpb
shrl
pop
or
fisubrl
pop
imulb
add
dec
loopne
push
pusha
testl
repz
repz
sub
out
jp
ss
cltd
lret
iret
pushf
fidivs
out
jno
sbb
mov
jbe
ljmp
pushf
xor
leave
loop
nop
sbb
mov
nop
jno
adcb
xchg
movsl
cmp
lcall
adc
ss
arpl
std
jb
popa
clc
mov
fldcw
or
addr16
es
mov
fiadds
shll
mov
mov
movsb
xchg
fdivl
int
mov
out
fs
sbb
inc
inc
xor
popf
popa
imul
mov
sub
dec
and
pop
push
insb
int
lcall
call
hlt
or
inc
pop
insl
add
bound
mov
shlb
and
pushf
xor
mov
sbb
pop
repnz
cwtl
dec
daa
lahf
ss
push
ss
sarb
jno
push
out
test
cmp
jle
out
push
test
or
jbe
sbb
loopne
insl
add
cmp
mov
mov
in
jecxz
lahf
ss
cmp
insl
imul
lods
cld
mov
loop
sti
xchg
push
cmp
addb
shlb
sbb
mov
insl
int3
test
add
stc
nop
dec
aaa
pop
out
rclb
gs
sbb
mov
das
sub
pop
shl
jge
enter
sbb
test
xchg
push
roll
add
dec
loope
and
mov
push
shlb
dec
sti
sbb
dec
sub
add
adc
test
mov
or
xor
notl
cmpsl
ds
sub
mov
adc
gs
testb
jo
fidivrs
aad
mov
ret
pop
dec
xor
pop
imul
add
jge
ss
mulb
mov
or
adc
push
dec
xor
sbbl
in
adc
repz
xor
fisubrs
add
loop
sbbl
cmp
imul
pop
repnz
xlat
outsb
pop
cmp
scas
std
mov
aad
pop
cmp
imul
idiv
mov
jmp
pop
sub
dec
icebp
mov
and
push
in
pop
sar
xchg
add
adc
lahf
inc
das
outsl
push
pop
fadds
xchg
or
gs
cli
sbb
je
fstpl
sbbl
sbb
test
jo
js
adc
xlat
outsb
ss
dec
loop
loope
pushf
adc
cli
xchg
ss
pop
idivb
int3
arpl
scas
mov
hlt
aas
dec
sbbl
sbb
sbbb
aaa
insl
add
shl
jns
mov
push
call
fnsave
add
out
sbb
jne
add
ss
pop
out
test
movsl
mov
nop
inc
mov
add
mov
ret
adc
dec
inc
in
bound
fs
pop
xchg
aas
add
loop
dec
loope
or
call
ss
fs
iret
jecxz
or
rcrl
rorb
scas
push
ljmp
addr16
sub
out
test
dec
pop
hlt
andb
xlat
push
movsl
dec
in
jno
aaa
cmpsl
testl
repz
imul
adc
inc
xchg
daa
mov
xchg
loop
insb
sbb
cmp
imul
mov
mov
fst
insb
or
inc
ficomps
mov
lods
push
sub
xchg
mov
add
sbb
push
push
or
sub
shlb
mov
sub
leave
fidivl
sti
pop
repnz
cmc
mov
leave
ljmp
and
es
sti
cli
jnp
sub
add
push
dec
cltd
xor
mov
lods
xchg
sbbl
sbb
clc
call
aaa
into
inc
xor
mov
sahf
shlb
inc
and
mov
call
adcl
pop
loope
sbb
cmp
cmp
imul
shrb
and
add
lock
mov
insb
push
jns
xchg
cs
or
lcall
sub
mov
push
inc
xchg
mov
les
icebp
loop
jecxz
adc
dec
xor
xor
test
push
mov
loopne
repz
xchg
scas
or
xor
push
loope
stos
mov
test
in
sbb
gs
insb
popf
scas
testb
add
add
adc
pop
xorb
cmpsb
stos
mov
outsb
cld
or
inc
cmp
aam
dec
push
cmc
mov
movsb
push
in
rol
les
sti
inc
fdivs
pop
ret
pop
dec
pop
cmp
inc
cltd
stos
pop
repnz
in
test
jnp
lcall
mov
call
pop
sahf
sbb
cmp
mov
lds
test
sub
ss
ljmp
jno
sti
jge
adc
sqrtps
add
ds
push
out
pop
inc
imul
sub
pop
sub
xchg
jl
adc
inc
cmpsb
rorb
dec
pop
fisttps
lea
pop
pusha
sbb
adc
adc
push
xchg
adc
sbb
lret
icebp
jbe
add
mov
and
lcall
test
adc
xchg
xchg
add
xchg
jns
add
out
xor
stos
lock
xlat
enter
mov
pop
lods
adc
push
les
xchg
jmp
mov
adc
inc
lret
gs
inc
mov
xchg
xchg
hlt
cmpsb
pop
leave
add
cs
xchg
shrb
push
and
stos
mov
jnp
lret
jo
fcomp
dec
int3
ficomps
call
movsl
cmp
std
jmp
or
jmp
cmpsl
sarl
mov
loopne
arpl
lods
sbb
push
sti
inc
xchg
sbb
lret
push
sbb
repz
adc
loopne
icebp
inc
std
xchg
test
leave
push
cwtl
sbb
push
inc
mov
roll
aam
pop
orb
fs
push
in
pop
cmp
inc
cmpsb
xor
lods
jne
cli
fwait
xor
imul
and
add
dec
push
cmp
cmp
cmpsl
mov
or
mov
adc
hlt
lea
adc
movsb
cmp
jnp
push
in
adc
mov
xchg
sbb
jle
in
and
xor
std
mov
push
xchg
stc
pop
mov
mov
imul
xor
addl
sahf
test
jmp
xchg
in
jp
push
mov
jnp
sahf
sub
adc
js
xor
bound
add
xchg
xchg
sbb
sbb
push
cmp
pop
sarl
mov
fistl
popf
xchg
jp
dec
xor
xor
sub
cmpb
adc
adc
sbb
pop
negl
push
cmpsb
pop
push
adc
add
pop
xchg
jl
cmc
repz
ja
push
ss
fdivl
arpl
inc
push
sbb
fs
inc
mov
pop
out
and
aas
aam
xor
push
cmpb
in
outsl
jae
aas
jo
mov
dec
shrb
ljmp
push
std
inc
push
and
enter
outsl
mov
push
push
leave
xor
pop
adcl
imul
and
aam
xor
cmp
push
clc
pop
adcl
aad
dec
cmpl
and
xchg
push
mov
lods
inc
adcb
daa
push
inc
lds
pop
mov
jp
push
dec
addl
test
mov
not
push
lret
in
jmp
push
shll
sub
xchg
xor
movsl
jb
xchg
dec
in
and
ss
test
jbe
stc
dec
insl
mov
test
mov
pop
sub
jg
jg
push
arpl
inc
ss
lret
and
nop
pop
aaa
int
mov
mov
cmp
sti
mov
and
les
nop
mov
lcall
xlat
sahf
sbb
cli
repz
scas
pushl
mov
pop
mov
cmc
xchg
insb
lret
ss
sbb
in
sbb
sbb
testb
dec
push
sti
push
sarb
xlat
push
test
ss
and
mov
add
mov
mov
mov
nop
pop
rcll
xor
out
sbbl
xor
push
push
rcrb
arpl
sub
xchg
push
inc
inc
mov
data16
pop
mov
neg
inc
lret
es
mov
dec
out
mov
mov
mov
scas
repnz
xchg
out
stos
mov
arpl
adc
imul
or
js
jecxz
lock
add
cld
fwait
loop
call
mov
ret
push
ljmp
and
ljmp
or
and
das
ja
aaa
mov
loop
jns
fnstenv
rorl
add
push
mov
xchg
in
cwtl
mov
roll
or
movsl
cmp
mov
add
or
sbb
aas
jo
stc
xor
xchg
stos
outsl
sbb
into
xor
lcall
sub
mov
adc
push
nop
sahf
lcall
dec
out
xor
sbb
or
fsubrl
mov
xchg
pop
or
inc
xorb
hlt
jne
mov
mov
adc
popf
jo
xchg
aaa
sbb
insb
dec
mov
sbb
push
cmpsl
pop
imul
int
js
pop
outsb
arpl
xlat
aaa
cmp
movsl
pop
imul
aaa
push
sbb
sub
gs
and
dec
sbb
pop
jl
sub
push
or
aam
mov
lea
jle
adc
sar
loope
ficoml
scas
xlat
inc
push
icebp
ret
fwait
popf
jl
sarl
in
ja
fwait
jbe
xor
out
popa
lcall
sub
sahf
or
out
or
xlat
sbb
xchg
push
lret
repnz
push
or
ss
adc
jecxz
popf
or
and
adc
mov
fwait
bound
lahf
sbbb
cld
and
int3
ss
sub
dec
mov
jno
pop
adc
jnp
add
or
aad
jno
repz
xor
and
cmp
sbb
insb
lcall
and
data16
scas
into
bound
add
xor
xchg
imul
mov
test
mov
add
add
in
jns
jl
mov
push
lods
xlat
inc
lcall
jp
or
jl
mov
into
cmp
sbb
jnp
and
xchg
mov
push
aam
js
daa
out
cmp
mov
jmp
xor
std
das
je
push
ror
push
loop
outsl
test
hlt
idivb
sti
sub
rolb
mov
sbb
fldt
jge
mov
lahf
xchg
push
cli
icebp
das
lock
sbb
arpl
cs
inc
test
les
mov
movsl
sub
out
jg
mov
jmp
jne
inc
fwait
inc
cmp
xor
test
fistl
xchg
push
inc
nop
sahf
adcl
mov
or
or
add
aam
test
rolb
add
aas
cmpsl
dec
out
jno
repnz
fisttpl
ss
ljmp
sbb
sbb
jge
cmpsl
lea
stos
mov
and
mov
cltd
popf
xor
cli
xor
cmp
push
jb
jp
jb
sti
aaa
out
les
data16
inc
or
in
jg
mov
inc
add
mov
cmpsl
jne
inc
cmp
les
mov
hlt
add
push
pop
cltd
jbe
ret
fldcw
cmpsb
pop
scas
std
dec
mov
out
mov
cmpsb
lods
jb
mov
dec
ret
rorl
idivl
pop
in
mov
ret
inc
ret
bswap
cmp
mov
imul
lds
scas
push
mov
andb
sbb
pushf
jne
fwait
subl
mov
pop
xor
js
into
ds
sub
push
fdivs
shrb
xor
in
push
fwait
xchg
mov
js
cmpsl
stc
push
mov
leave
inc
rcll
dec
mov
inc
int
mov
test
loope
das
rcl
into
loope
movl
mov
je
imul
jno
cmp
jne
lock
jns
xchg
or
daa
and
fldt
xchg
mov
jno
bound
xchg
pop
pop
outsb
mov
data16
lock
and
cmp
sbb
push
nop
addb
and
lods
jbe
out
xchg
enter
mov
pushf
push
int3
aam
fistl
icebp
mov
and
pop
cmp
push
jno
cmp
mov
fbstp
repnz
pusha
adc
bound
or
push
iret
rclb
jecxz
loop
insl
mov
or
sub
or
xchg
ret
fbstp
and
mov
icebp
sub
cld
rcrb
mov
mov
lcall
lret
cmpb
jb
cmpsb
scas
lcall
mov
xor
sbbb
and
add
scas
pop
pop
shrb
dec
fwait
pop
cmp
cmp
xor
iret
inc
and
mov
jns
xchg
pusha
iret
iret
fdivl
lret
inc
lret
sbb
jg
lds
aad
mov
fidivrl
stos
sti
mov
rcr
or
sub
jnp
mov
test
dec
mov
out
pop
nop
daa
mov
gs
aad
dec
out
and
sub
sbb
outsb
je
inc
mov
sub
mov
gs
xor
pop
popa
int
ds
sub
daa
dec
pop
xor
dec
inc
pop
mov
addr16
xchg
mov
icebp
jle
mov
cs
in
inc
fwait
aam
or
leave
xchg
repnz
js
fimull
push
int
loope
or
movsb
ds
test
jne
add
mov
or
sbb
pop
xchg
jle
mov
imul
xchg
pop
jbe
stos
inc
mov
cld
lea
mov
cmp
mov
sub
mov
push
pcmpeqd
addr16
shrb
mov
fs
xchg
sbb
pusha
sbb
inc
cmpsb
cmc
mov
frstor
bound
imul
fs
jns
test
and
lds
mov
cmp
cmp
aam
shlb
jl
flds
xor
sahf
xor
aaa
xor
lret
inc
sub
cltd
popl
add
xor
or
mov
cmc
cmp
insb
or
lcall
jo
mov
loop
pop
or
lods
mov
mov
ret
rorb
insl
fbstp
mov
jmp
sarb
cmp
lods
xchg
aad
stc
xchg
inc
negb
or
inc
dec
shrl
lret
xor
xor
int3
xchg
idivl
out
int3
insb
mov
cmc
adc
int
arpl
fcmovnu
jns
or
and
dec
das
into
inc
lcall
push
mov
fwait
xchg
mov
jp
subl
dec
pushf
xchg
xor
and
mov
xchg
arpl
fldenv
repz
mov
and
imul
xchg
jmp
insl
mov
or
xchg
xor
lahf
push
push
pop
imul
fisubs
and
outsb
xchg
fldenv
pop
jge
jne
ficompl
inc
popa
ja
or
mov
pop
mov
mov
shl
pop
hlt
shl
lea
cmp
mov
mov
cld
fwait
std
lea
add
cmpsl
test
xchg
lea
lret
dec
mov
or
gs
loopne
push
adc
jns
xchg
out
mov
in
xor
mov
int
xchg
xlat
sub
jmp
mov
mov
or
in
add
aas
outsl
ss
mov
fisttpl
add
cmp
mov
aaa
add
lret
fwait
xorl
jae
and
push
sarb
pusha
lret
jmp
sbb
push
add
xor
cwtl
sbb
mov
adc
insb
mov
mov
bound
fld
gs
in
addr16
mov
dec
fildll
cld
and
lret
scas
pop
ficompl
or
xchg
cmp
nop
jnp
jae
push
push
cltd
xchg
push
mov
pop
aam
test
gs
popa
stos
fnsave
xchg
sub
pushl
stc
mov
add
test
sti
sbb
data16
push
popf
pop
xchg
inc
sbb
int
mov
pop
lds
dec
push
mov
jle
leavew
imul
sub
insl
stos
dec
adc
push
cli
xchg
pop
mov
fneni(8087
dec
loope
insb
mov
mov
arpl
add
ja
loope
xchg
xor
loop
cwtl
pop
repnz
push
or
xchg
and
lcall
dec
sarb
and
ds
sub
sub
or
dec
je
jmp
jb
jbe
cmp
movsl
cmp
jb
dec
cmp
pushf
lds
enter
fwait
xor
xor
clc
and
pusha
mov
inc
aad
aas
in
dec
mov
push
loope
lahf
mov
inc
pushf
xchg
pushl
push
pop
stos
jbe
lcall
lock
fidivl
addr16
repnz
push
je
jl
xor
imul
gs
lahf
fisubrl
imul
xchg
pop
jg
jne
cmp
fcompl
inc
outsl
xor
sub
in
fnstsw
lods
inc
mov
je
lret
sbbb
outsb
add
fadds
lret
ffree
lods
inc
leave
fxch
inc
mov
adc
les
repnz
rolb
pop
mov
mov
push
inc
fsts
js
addr16
adc
insl
xor
cmpsl
xor
push
hlt
loopne
outsb
cmpsb
lds
push
call
arpl
add
jnp
add
popf
aas
adc
xor
fnsave
jmp
out
jo
shll
ljmp
jecxz
stos
push
xchg
clts
push
clc
orl
jnp
je
stos
dec
sbb
dec
psrld
es
jnp
loopne
xlat
pushf
movsb
sbb
scas
pop
out
jge
or
iret
adc
mov
aad
insl
mov
jge
ret
inc
or
ja
bound
or
scas
pop
fmuls
dec
cmp
mov
mov
inc
dec
fildll
mov
push
out
pop
scas
jno
das
jle
mov
ret
daa
gs
xchg
mov
or
cmc
push
and
pusha
clc
repz
shrb
push
cmp
push
fwait
push
push
jo
stos
inc
loopne
xchg
mov
pop
filds
jmp
xchg
mov
mov
mov
clc
movsl
sub
dec
in
or
scas
cmp
jb
filds
push
sahf
out
cmc
or
lods
sbb
movsl
ljmp
shlb
mov
mov
out
ret
ror
hlt
fcom
adc
mov
sbb
int
push
mov
out
orl
scas
js
xor
test
pop
pop
ja
jb
pop
rorl
xor
testl
push
add
sub
scas
sub
stos
dec
jl
cld
pop
dec
cmpsw
imul
int
dec
add
pop
mov
lret
je
add
xchg
test
or
jns
mov
sub
cmp
add
in
fs
jp
inc
sub
dec
mov
xor
out
cmp
xor
pop
in
mov
mov
out
int
aaa
iret
ficomps
ror
lret
mov
lock
mov
iret
cltd
or
int
out
test
mov
pop
or
adc
inc
push
out
aas
push
inc
lcall
and
js
jl
pop
cmpsl
pusha
data16
jb
aas
mov
aas
js
sub
js
xor
sub
cmp
mov
pop
xor
ss
aas
testb
push
push
mov
inc
mov
cmc
mov
jo
cwtl
scas
insb
mov
lods
mov
das
out
lock
loop
adc
addr16
dec
lret
cli
and
and
jne
fidivl
xchg
pop
mov
or
lahf
outsl
push
sarl
cmc
dec
aad
mov
fwait
push
movsl
sub
inc
mov
add
push
shll
gs
enter
mov
lock
cmc
lret
adc
mov
lret
jnp
ror
addr16
call
scas
push
mov
push
sub
inc
mov
stos
pop
hlt
xchg
repz
or
mov
jecxz
sti
mov
aad
mov
xchg
pop
icebp
mov
xchg
clc
dec
jecxz
adc
lret
jmp
mov
fucom
pop
icebp
test
adc
out
mov
add
out
push
or
mov
cli
sbb
outsl
clc
sti
sub
dec
or
push
enter
pop
push
jo
shlb
xchg
inc
mov
dec
stos
pop
cmp
outsb
mov
lds
jle
dec
mov
sub
push
roll
sti
push
sbb
imul
hlt
in
jmp
mov
push
enter
outsl
movsb
xchg
scas
jno
add
out
xor
ljmp
pop
sahf
dec
roll
pusha
fs
add
jo
xor
pushf
xchg
sbb
jg
adc
jmp
xor
push
mov
sbb
std
orl
jmp
shrb
adc
sbb
fwait
xor
aas
dec
mov
fnstsw
and
cmp
ja
pop
or
adc
sahf
stc
das
and
sti
ss
jne
sub
inc
jmp
js
int
insb
cltd
push
iret
sub
dec
xor
inc
sub
inc
sbb
push
mov
das
pop
push
out
pop
push
in
mov
out
les
gs
pop
xor
push
sub
cld
sub
pop
out
gs
inc
loopne
loope
cmpsl
mov
jg
leave
icebp
sub
jne
dec
cmp
in
mov
hlt
loope
add
jl
jb
pop
inc
pop
xchg
xchg
ret
pop
push
ss
xchg
je
xor
frstor
sub
and
mov
dec
cwtl
out
aaa
daa
pop
insl
cltd
pop
je
inc
arpl
cwtl
push
cs
inc
outsl
js
cmc
push
popf
popa
das
sbb
lods
xor
jnp
xor
leave
inc
mov
out
mov
jnp
lret
rclb
pop
iret
xor
xor
jp
aaa
pop
xchg
sti
and
aaa
testb
push
inc
sub
mov
out
into
mov
add
lcall
int3
lcall
mov
popa
cmp
lret
dec
xchg
out
pop
mov
jmp
test
loop
mov
bound
mov
xchg
vpaddd
fcmove
pop
shr
lock
icebp
sarb
sbb
fsts
cmp
mov
out
shll
loop
repz
mov
or
sub
add
ficoml
sub
ficoml
or
and
xchg
js
call
ret
lea
dec
lds
sti
cmp
sar
cld
add
lret
jb
sub
aaa
jmp
pop
rorl
push
fs
cmc
jp
lret
mov
shll
in
add
pop
pop
clc
sbb
lock
or
jno
cwtl
lea
ljmp
mov
lret
mov
sti
sub
repnz
adc
iret
sub
add
out
xor
adc
add
cltd
insl
lds
sbb
std
mov
add
mov
lret
test
shlb
pusha
notl
cli
mov
sub
cmp
mov
test
push
mov
adc
push
push
int
dec
and
push
das
cmp
cmpl
adcb
or
pop
aad
andl
xor
hlt
mov
scas
mov
fcomip
xor
pop
and
aas
int3
fsubrs
out
maskmovq
idivl
mov
jl
lcall
mov
aad
cmp
fidivs
jmp
stos
das
loopne
sbb
pop
fbld
pop
flds
jno
into
insb
mov
and
pop
shll
clc
cmp
sub
xchg
xchg
in
jp
mov
popf
outsl
xor
push
mov
xchg
ret
movsl
or
adc
jne
insb
inc
ficompl
push
lock
insb
mov
xchg
je
fsts
mov
pop
and
dec
cld
add
insb
pop
idivb
ljmp
or
filds
mov
add
cmc
cmpsb
ss
rcll
xor
hlt
ja
fildl
xor
ret
and
push
inc
sub
inc
xchg
and
clc
daa
sbb
lcall
in
jns
xchg
xchg
cwtl
sub
mov
push
mov
repz
in
pop
incl
mov
xchg
jae
lock
and
iret
jbe
add
sub
sbb
pop
test
xchg
mov
out
sbb
xchg
jp
sub
pushf
call
mov
jmp
pop
lods
test
dec
clc
out
inc
pusha
sbb
mov
pop
test
cmp
jge
lahf
pop
mov
into
mov
les
sbbb
mov
nop
sbb
xchg
outsl
stc
nop
mov
or
in
mov
inc
pop
sbb
dec
pop
shl
xor
xchg
mov
and
xchg
nop
jp
fmul
fs
add
xorb
je
pop
and
mov
xchg
xchg
shl
inc
rcr
orl
and
cmp
in
push
add
mov
stc
sub
and
or
scas
aas
mov
sahf
pop
xchg
lea
dec
jae
jg
stos
inc
pop
mov
leave
pusha
push
scas
inc
es
jle
inc
int
jns
add
or
and
pop
test
mov
daa
mov
pop
xchg
inc
fadd
sub
pop
in
cli
push
jl
xor
iret
mov
ss
fidivrs
mov
leave
adc
mov
xor
dec
xlat
pop
scas
or
out
sub
add
lods
adc
or
stos
inc
cwtl
and
pusha
jmp
scas
inc
movsl
or
jg
int3
arpl
pop
push
popf
nop
sbb
orb
mov
popf
add
xor
daa
mov
xchg
inc
fldl
jg
fldenv
sti
xchg
cli
popf
xor
mov
sbb
dec
mov
cmp
mov
mov
mov
inc
adc
xchg
xor
xor
leave
push
sbb
sbb
outsl
push
outsb
cli
push
in
sub
je
jle
stos
inc
adc
ss
pusha
push
mov
jle
inc
into
gs
add
or
and
push
addb
aas
sub
add
es
pop
in
sti
adc
sbbb
int
push
decl
fsubrs
fdivrl
lea
adc
clc
cmp
mov
xor
dec
aad
scas
push
insb
push
call
pop
mov
push
jmp
adc
or
lods
inc
xchg
push
xchg
sub
lret
jno
inc
mov
int
negb
sahf
mov
in
orl
mov
fwait
add
mov
stc
test
inc
fidivrs
movsl
adcb
pusha
gs
push
mov
xor
fs
mov
xchg
mov
and
popa
mov
ret
repz
enter
and
or
xlat
out
movsl
cmp
stc
fs
sub
pop
jne
adc
cmp
pop
std
jnp
sahf
in
shlb
add
and
mov
ljmp
pop
cmp
pop
cmpsb
cmp
push
mov
push
or
ret
jmp
push
ljmp
sbb
movsb
inc
in
test
cmp
stc
cli
or
dec
dec
sub
jnp
mov
fcomps
sub
push
movsl
cmp
inc
mov
jbe
ret
sbb
or
cmp
pop
mov
orb
xchg
push
movsl
aam
push
in
inc
or
rcll
pushf
xor
sarb
or
sub
dec
imul
pushf
outsb
mov
shlb
jge
and
out
mov
mov
rol
and
inc
gs
dec
mov
stos
hlt
pop
imul
shlb
mov
xorl
mov
icebp
int3
lahf
pop
mov
xchg
push
test
dec
jg
adc
lock
inc
jle
outsb
cmpsl
jne
pop
aam
mov
out
cwtl
out
push
dec
iret
and
xchg
fisttpll
xor
jbe
and
pop
js
mov
jbe
mov
mov
pop
xchg
sbb
fnsave
mov
add
dec
mov
xchg
xabort
stos
orb
cmp
cld
pop
dec
addl
inc
cmpb
pop
sub
imul
adc
mov
test
out
inc
jbe
sub
outsb
int3
movsb
lret
push
jecxz
and
aaa
pusha
or
jle
jecxz
rolb
lea
or
pop
arpl
xchg
addl
sub
lock
inc
xor
enter
sbb
sub
adc
in
cmp
add
rorb
xchg
std
daa
iret
xchg
dec
mov
jecxz
int3
push
push
mov
pop
sahf
sbb
pop
je
cld
jle
lcall
mov
mov
or
mov
xchg
insb
or
adc
push
ret
aas
je
pop
imul
push
aas
adc
sub
pushf
cmp
ret
lret
mov
out
jno
and
imul
jb
repz
xorl
cmp
jecxz
popl
aas
mov
adc
xor
ljmp
sbb
lods
arpl
mov
int3
inc
loopne
insl
jg
mov
adcb
cmp
test
inc
cltd
cmp
icebp
nop
adc
xchg
mov
fstl
sbb
sbb
and
jle
cmp
cmpl
mov
test
add
in
mov
int3
in
imul
or
mov
lods
testb
push
je
andl
jecxz
cmpsl
jecxz
fld
pop
lret
xorb
push
ds
notl
outsl
push
xchg
ret
xchg
push
lds
movsb
push
out
adc
mov
shlb
aas
mov
push
mov
push
jae
sub
xlat
pop
xor
nop
jp
call
mov
jl
js
pop
out
push
pop
stos
inc
mov
pop
icebp
lock
stos
repnz
ret
mov
cmc
sub
dec
fcomip
xor
mov
push
adc
adc
cmc
xchg
sub
mov
aad
cwtl
or
push
ljmp
xchg
cmp
test
into
or
stos
or
dec
and
mov
fildl
or
cmp
popa
sub
push
add
and
in
cmp
popa
mov
stos
sub
cltd
or
lret
inc
cmp
cmp
sub
pusha
cli
lea
aam
push
push
jae
outsl
call
cmp
ss
rcr
addr16
fwait
cmp
gs
mov
mov
cmpsb
stos
sub
cltd
cmp
add
sbb
js
mov
shlb
dec
and
stos
test
pop
clc
adcb
imul
pop
clc
aas
cld
cli
pop
dec
and
into
enter
mov
adc
xlat
sti
outsl
negb
or
sahf
push
dec
pop
add
mov
push
cli
mov
jge
insb
movsb
adc
outsb
adc
push
clc
sub
ret
mov
push
push
mov
test
filds
push
dec
sub
cmc
mov
loope
out
sarl
stos
sub
pop
js
jge
mov
call
ja
mov
sbb
leave
mov
test
les
adc
and
scas
mov
add
in
orl
mov
outsl
hlt
xor
xlat
jl
mov
or
imul
fst
movsl
lds
dec
or
test
xchg
sti
push
inc
or
repz
into
movsl
les
mov
mov
push
jp
xor
mov
cli
pusha
shlb
in
outsl
dec
adc
insl
mov
jns
addr16
mov
aaa
lcall
jne
inc
cwtl
std
pusha
ss
sarl
and
shll
cld
lock
pop
add
cmp
push
xorps
loope
andl
shl
mov
orb
imul
adc
rolb
arpl
push
es
dec
adc
adc
in
loope
dec
inc
add
mov
aaa
mov
enter
mov
in
popa
lret
add
aad
xchg
outsl
out
mov
cli
fs
pop
and
es
pusha
out
xlat
xor
dec
aaa
lock
out
adc
dec
jp
stos
mov
insb
jmp
dec
push
popf
jo
adc
xor
out
sub
cmpl
mov
cltd
lods
hlt
arpl
mov
adc
imul
and
push
shlb
cltd
aaa
cmpsb
or
arpl
lret
lock
jno
scas
mov
lret
and
sbb
or
push
hlt
add
fisubrl
and
xor
xor
cmp
lahf
cmp
and
fs
int
repnz
jmp
push
add
xor
mov
gs
dec
push
or
adc
sub
fnstenv
push
add
mov
mov
imul
flds
cmp
rcrl
sbb
mov
enter
cmp
les
js
mov
dec
or
add
pop
dec
gs
xor
sbb
xchg
inc
out
adcb
push
add
fnstenv
mov
rcll
sbb
mov
cli
sbb
adc
inc
dec
int
dec
popf
jge
sub
inc
push
out
dec
adc
adc
and
sub
cmpsb
xor
call
xchg
test
dec
stos
cs
mov
stos
loop
pop
sub
cmpsl
or
imul
inc
cs
stos
sahf
push
mov
hlt
ss
sti
jecxz
pop
mov
push
mov
sbbb
xchg
pop
lock
xchg
mov
fidivrl
mov
call
or
roll
push
jle
and
insb
fistpll
mov
adc
inc
push
add
push
imul
in
lea
flds
bound
ds
movsb
and
nop
add
popa
imul
pop
lea
inc
add
sbb
jno
mov
push
aas
cmpsb
inc
adc
add
imul
pop
lea
iret
jp
adc
lock
fildll
shrb
cmp
cmp
lods
decl
loop
filds
sub
jge
push
add
addr16
mov
ret
and
cmp
test
enter
mov
pop
inc
push
pop
jmp
or
and
lcall
xor
rolb
inc
adc
pop
mov
aaa
push
loope
inc
decl
mov
rolb
int
mov
cltd
sahf
pop
hlt
pusha
xor
fcomps
mov
leave
add
inc
cmpb
popf
pushf
mov
xchg
shr
dec
lods
sub
jecxz
aam
pop
xchg
inc
xchg
pop
addr16
int3
mov
fwait
sub
aaa
pop
clc
in
lret
sub
fs
xlat
xchg
inc
popf
rclb
dec
les
cld
scas
cwtl
mov
xchg
mov
inc
out
lret
or
fidivrl
xchg
inc
xchg
push
iret
xchg
lea
xchg
pop
cld
das
sbb
out
enter
repnz
xchg
inc
cltd
rorb
dec
or
dec
xchg
pop
cld
scas
xchg
mov
lcall
inc
cmp
cs
xchg
cmp
cwtl
aas
push
sub
mov
int
mov
pop
xchg
cmp
push
mov
stos
add
aas
daa
nop
aaa
lds
out
jne
pop
adc
add
push
jb
jecxz
psrlw
shrb
jb
fldl
inc
mov
out
xchg
push
mov
cwtl
xchg
mov
testb
xorb
mov
xchg
or
into
nop
gs
rorl
mov
lret
lods
call
icebp
cmp
test
adc
mov
push
jno
imulb
mov
dec
fimuls
int3
mov
fstpt
test
lods
imul
hlt
fs
js
adc
cmp
dec
push
and
roll
and
push
jecxz
cmpsl
clc
mov
out
jecxz
mov
in
xchg
incl
frstor
inc
mov
add
sbb
ret
inc
mov
addr16
and
scas
outsb
ss
or
jbe
les
sarl
push
pop
cmpsl
xor
xlat
into
mov
jecxz
lret
jg
addr16
test
mov
inc
cmp
inc
sahf
dec
pop
sub
adc
xor
mov
mov
mov
icebp
inc
incb
shrb
aam
lcall
sahf
adc
or
xchg
cmpl
in
outsb
ljmp
pop
mull
mov
sub
sbbl
push
incl
inc
push
inc
jae
sbb
mov
adc
mov
imul
stos
cmp
dec
pop
movsb
cmp
lods
gs
shlb
rolb
ret
fisttps
push
std
aaa
or
arpl
and
mov
in
adc
nop
fs
test
jb
insl
fsubl
cmp
out
xor
sti
repnz
scas
inc
pop
add
mov
insl
les
mov
mov
insb
int3
nop
shlb
mov
mov
notl
fnstcw
lcall
sarl
mov
cs
ljmp
rsm
push
add
inc
push
enter
ljmp
movsl
xchg
fnsave
shll
movsb
shlb
arpl
xor
mov
leave
lea
cmpsl
das
js
ja
xchg
push
xchg
sub
mov
mov
push
jae
ja
negl
data16
push
xor
push
and
mov
mov
xchg
xor
mov
bswap
gs
push
pop
insb
jmp
push
pop
adc
xchg
dec
push
test
fcompl
cmp
fdivrl
xchg
inc
push
es
aam
nop
leave
mov
scas
pop
les
sbb
xchg
test
rclb
xor
in
inc
rcl
push
lret
in
xchg
in
loopne
in
dec
push
stc
push
jae
pop
pop
mov
xchg
nop
orb
loope
loopne
mov
cwtl
repnz
mov
nop
pop
add
inc
insl
imulb
clc
popa
in
psrlq
mov
aad
fildl
out
sub
cmp
movb
nop
and
rclb
fistps
sti
lret
push
add
and
or
pop
adcl
add
out
xrelease
sarl
sub
gs
xor
popf
push
dec
cs
dec
int
repnz
adc
inc
or
adc
push
push
adc
insl
ljmp
add
dec
sub
mov
outsl
aad
mov
cmp
pop
dec
push
lahf
cmp
popf
or
imul
shlb
dec
jmp
jecxz
shll
adc
push
push
jmp
aad
dec
push
leave
or
mov
adc
ja
inc
sahf
cmp
inc
andb
mov
sub
adcl
pop
push
ljmp
mov
jae
fnsave
mov
sub
mov
pop
fdivrs
jecxz
jo
or
adc
push
pop
cmp
inc
xchg
inc
push
in
or
outsl
push
test
push
ljmp
add
xchg
ds
push
jle
shr
fstpt
daa
cmp
mov
sub
sbb
mov
outsl
adc
mov
aaa
dec
test
adc
xor
das
sbb
inc
mov
lods
pmullw
mov
cmp
fistps
pop
subl
mov
call
sti
mov
pop
jne
inc
or
ret
stos
pop
test
mov
adc
mov
mov
mov
loope
jae
inc
test
lcall
test
cmp
into
sub
xor
add
pop
sub
push
sub
movsb
xor
mov
xchg
aas
add
js
pop
mov
sub
pop
cld
xor
testb
mov
sub
loop
adc
loop
in
mov
sti
cld
lea
in
mov
xchg
jge
jae
cmpsl
sub
fmul
or
xlat
or
mov
adc
push
inc
ljmpw
aas
jo
fld
sub
pop
sbb
cmc
dec
shl
pop
cmp
xchg
lret
aaa
repz
or
push
mov
adc
dec
imul
call
icebp
dec
or
xchg
inc
cs
iret
lea
cmp
and
mov
mov
mov
jnp
push
mov
dec
push
or
cmp
push
add
mov
sahf
int3
inc
dec
or
scas
pop
rcll
mov
sarb
pop
mov
push
fwait
into
mov
fadd
mov
test
cld
aad
or
pop
notl
ss
dec
or
xchg
inc
xchg
insl
add
repz
in
in
out
insl
and
testb
mov
mov
adc
adc
mov
xchg
sub
push
fs
aad
ljmp
scas
test
iret
mov
sar
mov
mov
es
into
es
sub
fidivrl
cmp
jns
lods
jmp
mov
mov
std
push
fxch
xchg
popl
mov
insl
rorb
xor
mov
sub
out
mov
xchg
dec
test
les
fsts
fidivrs
stos
shrl
mov
xchg
ds
jmp
xchg
aam
add
rol
into
xchg
mov
mov
adcl
inc
xchg
cmp
ret
jbe
iret
xchg
push
adc
int3
jae
stc
ficomps
fadd
inc
xchg
push
ret
xchg
popf
rcrb
jae
xor
shl
jp
aas
std
mov
ret
mov
sarb
sbb
lcall
int
adc
shlb
mov
lods
ss
lods
jae
xchg
aaa
les
js
adc
je
push
sbb
outsb
push
mov
mov
out
arpl
insb
add
test
or
and
and
mov
cmpsb
popf
cmp
and
jb
sbb
fsubl
std
pop
pop
mov
inc
mov
xchg
rcr
cmp
mov
pop
inc
adc
mov
lret
adc
loope
mov
icebp
mov
xchg
mov
or
xlat
rolb
push
mov
pop
call
or
repnz
orl
movsl
sub
scas
or
mov
or
pop
stos
xor
mov
adc
dec
mov
xor
sbb
popa
repnz
aaa
jnp
jbe
aad
mov
cmpsl
sub
loope
adcl
mov
cmc
mov
pop
jmp
outsb
ljmp
dec
or
shl
pusha
xor
xchg
cmc
or
mov
pop
loope
push
test
jl
fistpl
into
jno
jle
fiadds
mov
push
cli
call
cs
sub
negl
cmp
sub
sub
inc
sub
cli
push
ds
clc
scas
dec
jp
cmpb
call
stos
lea
out
mov
sbb
xor
sti
mov
xchg
inc
mov
mov
dec
loop
pavgb
lret
andb
fs
lret
testb
test
mov
pop
add
mov
mov
lods
pop
clc
xor
or
xor
mov
sub
jle
lcall
arpl
cltd
iret
xor
pusha
out
js
mov
xchg
push
mov
mov
sub
xorb
repnz
mov
and
leave
jl
push
pop
test
mov
sub
xor
sbbl
sbb
push
enter
fwait
inc
adc
xchg
pop
scas
fcoms
mov
rorb
or
or
mov
xchg
mov
or
add
movsb
sbb
mov
jb
cli
cmp
flds
and
xchg
adc
inc
aam
mov
xchg
jno
pop
rorb
out
fidivrs
sti
hlt
pop
sarl
mov
inc
scas
push
aad
sbb
arpl
or
mov
insb
fsubrl
ret
sub
add
adc
in
imul
jmp
les
jmp
loop
outsl
orl
push
in
hlt
pop
gs
push
loopne
add
mov
dec
or
jno
add
sbb
dec
daa
stos
mull
mov
adc
shlb
lea
sarl
fsts
fnstenv
pop
sti
mov
cmpsb
cld
pop
inc
mov
or
xchg
inc
adc
popa
repnz
test
pushf
cmp
push
dec
mov
push
dec
cmp
push
stos
daa
mov
movsl
jb
rolb
pop
cli
mov
adc
xlat
adc
je
and
in
sbb
pop
stc
notl
ret
inc
adc
mov
cmp
test
sbb
or
imul
cltd
cmp
pop
xchg
xchg
arpl
fidivrs
andb
lods
data16
fstpt
xchg
gs
pushf
mov
ja
ret
sbb
inc
mov
inc
outsb
jb
push
sbb
outsb
ljmp
std
push
rorb
xor
adcb
rcrb
jae
stc
inc
mov
in
and
and
push
mov
ror
push
xor
jns
inc
mov
push
std
stos
test
in
out
fstp
jns
inc
dec
or
mov
sbb
dec
into
mov
out
addr16
jo
sbb
mov
movsb
cmp
cmpsl
je
pop
push
loop
sbb
aas
movsb
dec
dec
int
repz
pop
add
fldl
dec
loop
or
adc
xor
and
insb
daa
ficoms
rolb
ss
fsts
dec
adc
loope
jne
add
cmp
out
int3
mov
mov
jp
fildll
inc
xchg
scas
pushf
mov
mov
mov
inc
push
ja
pop
push
push
cltd
pop
cmp
pop
sub
xor
cmp
leave
imul
sbb
push
out
sub
mov
jecxz
lret
xor
adc
pop
repz
push
ljmp
stos
dec
push
lds
mov
jge
cmp
or
jg
pop
loopne
xchg
push
ret
popf
pop
add
xchg
push
rcl
std
mov
push
add
ret
ret
mov
mov
lcall
aas
adc
out
add
fidivrs
mov
aam
mov
mov
mov
mov
push
jae
pop
mov
inc
adc
test
movsb
ss
jle
jge
insl
mov
xor
pusha
imul
jge
int
mov
xor
pop
roll
imul
adc
xchg
inc
jg
iret
data16
xchg
sub
mov
cmp
mov
xor
xor
cltd
fadds
addr16
cmpsl
sub
mov
sti
pop
jmp
sti
dec
adc
imul
cmp
cmp
xchg
das
sti
data16
ret
mov
inc
pop
test
jg
adc
fs
ret
out
push
pop
sub
rclb
test
xor
fildl
loope
sbb
inc
daa
mov
cmp
mov
clc
push
ja
xchg
loop
xor
fwait
shrb
inc
ret
pusha
lock
sarl
jle
dec
lahf
sar
pop
and
fidivrs
cmp
sub
je
sub
pop
sub
mov
push
aam
lods
ret
fwait
rolb
xchg
sbb
xchg
int3
push
add
inc
push
add
sahf
out
imul
stc
lea
pop
stc
push
aaa
inc
fsubs
adcb
mov
mov
jmp
inc
notb
sbb
mov
inc
or
sbb
fs
negb
add
cwtl
cmp
adc
jl
fwait
inc
fs
test
rolb
dec
and
add
addr16
aas
fwait
pop
pusha
loopne
mov
mov
out
imul
pop
mull
iret
push
adc
xchg
dec
xchg
aad
test
stos
das
pushf
lds
sarl
sarl
cmp
lret
rorl
adc
out
push
loopne
aam
mov
shrl
stc
add
mov
cmpsl
sbb
cmp
cmp
sbb
cmovl
sbb
cwtl
mov
mov
sub
cmp
cmpsb
sub
fdivr
sbb
outsb
int3
push
gs
sbb
pusha
aad
and
loope
ss
ret
aam
rorb
ss
mov
cmp
jg
push
xchg
mov
icebp
in
mov
sahf
ret
pop
negb
loopne
lock
je
int
xchg
outsb
into
mov
int
jb
repnz
mov
aam
sub
push
push
int
int
bound
les
inc
adc
iret
pushf
inc
adc
enter
and
aad
aas
sub
mov
jae
cli
bound
je
movsl
jge
pop
xchg
mov
cli
lret
into
mov
lods
jg
xor
filds
out
sub
inc
mov
cmp
out
lcall
aas
mov
icebp
pop
mov
mov
xor
adc
ret
adc
inc
push
idiv
cmpsb
sbb
xchg
lock
sub
sub
je
loopne
daa
outsl
lret
mov
in
daa
jle
fdivrs
cs
push
add
ljmp
push
add
mov
jb
in
push
pop
add
lea
faddl
rorl
nop
aas
mov
xchg
aas
aam
aam
pop
adc
pop
ss
lds
popa
push
int3
xchg
jg
pusha
mov
or
ret
add
icebp
lcall
fs
cmp
push
nop
aaa
les
jno
push
push
mov
cmp
cmp
fsubr
gs
jmp
addr16
jge
jne
enter
pop
sbb
dec
push
mov
test
fsubrs
dec
jb
cmp
shrb
dec
or
adcl
sbbb
add
lds
stc
or
cmp
push
std
jl
pop
add
outsb
out
jbe
xor
pop
unpcklps
xor
imul
xchg
popf
inc
push
test
push
and
xchg
cmp
in
jne
jp
jl
icebp
or
scas
xchg
test
mov
inc
or
mov
in
inc
mov
idiv
xchg
cmp
sub
cmp
mov
imul
lret
mov
push
das
and
fndisi(8087
adc
sub
mov
jno
jl
push
push
outsl
addr16
inc
push
jne
sub
xchg
inc
pop
mov
jne
test
jns
loop
and
sub
sbb
sahf
aaa
pop
xchg
jne
push
mov
mov
mov
xchg
push
mov
rcrl
sub
sbb
inc
or
sti
pusha
clc
lret
add
jecxz
shrl
push
mov
xchg
cmp
insb
add
subb
sub
je
fadds
arpl
dec
adc
sbb
mov
stos
fnstsw
push
ja
enter
test
fwait
inc
sub
out
sarl
inc
or
leave
xchg
fimuls
xor
sub
cmp
les
mov
out
sbb
mov
xchg
into
aaa
push
notl
roll
test
movsl
scas
fsubrl
cmpsl
in
mov
sti
pop
or
dec
or
mov
sahf
out
fs
push
lret
cmp
pop
xchg
inc
iret
add
xor
adc
mov
fsubs
xchg
testb
add
jmp
xchg
mov
dec
adc
lock
inc
xor
sbb
xchg
cmp
enter
inc
mov
aam
mov
or
mov
scas
cmp
jb
nop
cmp
orl
cwtl
pop
call
ret
cmp
sub
mov
lods
outsl
iret
mov
or
adc
cmp
out
js
mov
lcall
test
adc
push
call
sbb
mov
push
outsl
xchg
and
iret
jo
addl
ds
sahf
shlb
pop
cmp
mov
sub
sbbb
add
push
sbb
jno
inc
rorl
mov
lea
xchg
sub
push
cli
jecxz
test
mov
stos
xor
shrl
clc
xchg
push
loop
fdivl
scas
aaa
cmpsb
dec
push
rorl
lret
aaa
movsl
push
cmp
cmp
mov
je
lods
mov
es
stos
daa
ds
sbb
aas
lcall
jb
dec
adc
sti
sbb
cwtl
jnp
ds
xchg
xchg
ret
pop
repz
mov
int3
imul
cwtl
mov
loopne
int
fildll
fcomip
sub
mov
lret
shr
xchg
leave
adc
jo
sbb
pop
lret
int3
adc
push
iret
mov
in
loope
dec
mov
cmpsl
xchg
inc
cmp
xchg
cmpsb
xor
lods
imul
roll
pop
repz
fcmove
gs
push
mul
pop
data16
sahf
repnz
into
adc
pop
dec
adc
ficoml
push
aas
mov
inc
pop
sub
imul
jns
jne
mov
mov
or
jae
rcrb
jle
add
jns
sbb
shrl
nop
cmp
and
cmp
out
xor
rorb
fisubrl
icebp
mov
mov
push
mov
popa
cltd
test
data16
icebp
mov
inc
or
nop
rolb
mov
sbb
pop
out
mov
and
divb
aas
xlat
in
fistpll
add
pop
xchg
mov
mov
mov
fdivr
pusha
loop
mov
aaa
mov
lods
mov
inc
xchg
mov
push
lcall
fiaddl
std
andl
pusha
hlt
loop
imul
outsl
adc
pop
ret
jb
mov
push
adc
lcall
pop
negb
lds
and
mov
mov
scas
jg
xor
faddl
pusha
mov
or
ja
aam
in
data16
int3
mov
adc
pop
popf
cmp
jecxz
jecxz
add
xor
add
or
push
nop
daa
subl
pop
adc
call
xchg
adc
jo
call
xor
mov
outsb
ficoms
sub
call
dec
arpl
inc
adc
jnp
test
hlt
jg
aas
dec
in
jge
push
xchg
adc
xor
jnp
mov
stos
mov
add
in
hlt
push
lods
jbe
or
xlat
and
scas
sub
adc
imul
add
les
shll
jg
xor
xchg
inc
inc
das
int3
mov
iret
data16
in
test
out
or
cwtl
xor
adc
lret
sahf
int3
in
jae
shr
je
lea
iret
mov
adc
sbb
push
cwtl
arpl
repnz
test
in
negb
jmp
xor
adc
mov
movsb
adcl
popa
bnd
aas
fwait
shrb
fdivl
cmp
mov
mov
xor
sub
xor
lret
xor
mov
fwait
push
jo
and
divl
pop
movsl
or
cmp
lahf
inc
jno
adc
push
xchg
jae
aaa
orl
lock
scas
jg
push
mov
adc
sub
xor
mov
aam
or
mov
js
cmp
push
in
pop
repnz
sbb
xor
push
pop
add
sub
mov
in
jl
pop
clc
push
std
mov
mov
pop
dec
xchg
jo
pop
fwait
jle
notl
sbb
adcb
and
sbb
es
cli
pop
dec
aas
out
outsb
or
roll
testl
jmp
pop
mov
mov
nop
int3
aad
sub
inc
push
adc
dec
adc
fiadds
stos
sbb
mov
bound
adc
inc
fistpll
cmc
xchg
push
add
mov
xchg
test
scas
push
lcall
test
push
aaa
push
lret
cs
xchg
mov
or
cmpsl
ds
mov
xchg
cmp
loopne
pop
movsb
cmpsb
jecxz
xor
mov
clc
incb
xchg
sti
ljmp
sub
in
xor
adcb
add
inc
mov
mov
mov
fcoms
mov
adcl
ja
repnz
and
xor
adc
add
dec
cmp
movsl
cmc
cmp
les
and
pop
int3
xchg
add
xor
es
push
call
int
hlt
mov
imul
mov
test
lock
aaa
inc
outsb
lds
or
adc
pop
inc
adc
and
aam
push
and
sub
fnstsw
ss
fmuls
jno
or
popl
push
cmp
mov
stos
int
mov
cmpsb
push
cmpsl
cs
pop
js
push
cmp
mov
clc
pusha
mov
or
mov
scas
inc
or
cmpsb
sub
xchg
movsl
sub
sub
cmp
jge
aam
rorb
loopne
enter
nop
lods
and
mov
les
test
scas
xor
mov
rorl
int3
popa
out
mov
mov
xor
cmc
cmp
cmp
enter
out
and
movsl
mov
xchg
cmp
shrb
int3
jle
insl
sub
imul
cmc
fs
ret
mov
movsl
roll
mov
jg
ljmp
rcrb
lods
je
movsl
xor
insl
roll
ror
or
xor
xor
xchg
inc
push
xor
sahf
fs
add
cwtl
cmp
mov
mov
add
aad
push
add
lds
into
insb
scas
in
int3
jb
loop
adc
sbb
push
das
test
xor
push
add
mov
ret
mov
ljmp
adc
test
std
gs
dec
addr16
xchg
inc
imul
jno
inc
or
jnp
mov
popa
hlt
data16
pop
ret
rolb
pushf
fwait
hlt
pusha
out
sti
pop
xor
fnsave
sub
lods
inc
daa
add
jne
and
cmpl
test
jae
xchg
sti
pop
jmp
icebp
mov
pop
icebp
daa
sbb
cmpsl
dec
dec
pop
add
cltd
and
pusha
dec
test
cwtl
aas
mov
inc
jmp
push
pop
pushf
je
addr16
xor
mov
sub
pop
adc
aas
fdivrl
mov
push
mov
xchg
xchg
mov
aad
dec
fmull
shll
es
cmp
mov
pop
add
mov
mov
je
sub
jp
add
jo
je
jbe
xchg
addb
in
testl
clc
out
sbb
lea
mov
push
clc
aad
and
push
push
pushl
lcall
dec
bswap
dec
lret
xchg
adc
inc
int3
lock
mov
int3
push
rcr
jae
cmp
popa
push
pop
add
in
les
and
js
push
call
mov
test
and
push
jnp,pn
jp
cmp
dec
cltd
inc
data16
scas
iret
test
mov
mov
cmpsb
adc
xchg
mov
cmpsl
jmp
stc
stos
sub
lret
sti
subb
mov
inc
or
sbb
nop
sbb
sub
and
xchg
xor
adc
out
fiadds
jge,pn
lret
xchg
aaa
or
call
xchg
xor
movsl
mov
xchg
inc
icebp
rclb
xchg
xchg
adc
mov
inc
dec
clc
pop
sbb
cmp
cwtl
push
xlat
sbb
cmp
dec
dec
adcl
stos
and
stos
add
pop
xchg
inc
sbb
sub
lret
pop
add
loope
scas
sub
ljmp
cmpl
sbb
mov
pushf
mov
add
aas
dec
pusha
sti
pop
ds
out
enter
push
stc
add
sub
mov
mov
cmp
push
in
jne
inc
cmp
xor
pop
push
sub
fldl
fldl
xchg
cmp
bswap
xchg
loope
sub
and
mov
sbb
push
push
cld
nop
cmp
or
out
xchg
lahf
std
mov
aaa
ljmp
mov
adc
rcrb
xchg
stc
and
sbb
stos
insb
cmp
popf
lret
repnz
mov
adc
inc
jo
mov
ret
repz
dec
call
or
cmp
and
mov
or
loopne
pop
aas
add
ret
in
xchg
push
dec
loopne
mov
lcall
and
sub
xlat
mov
cmp
cmc
fistpl
jl
cs
fbstp
push
lcall
mov
sbb
sub
cmp
sbb
mov
out
insl
popf
adc
shr
and
xchg
sub
dec
in
xor
insb
add
mov
mov
and
fsubr
test
cmp
mov
rolb
jnp
aam
fiadds
es
push
xchg
mov
js
sbb
int3
mov
repz
pop
rclb
jp
scas
jb
jne
rcrb
xchg
clc
and
mov
jbe
imul
repnz
mov
adc
inc
outsb
das
lahf
bound
icebp
mov
dec
out
insb
add
push
xchg
pop
out
xchg
scas
or
pop
cmp
pop
in
nop
push
dec
loope
mov
lcall
and
sub
xlat
xchg
cmp
pop
cmc
fstps
adc
loopne
and
xor
mov
sbb
hlt
insl
es
hlt
mov
pop
out
insb
fwait
adc
mov
loope
sub
inc
dec
in
xor
dec
xchg
insb
add
xchg
addr16
fucomi
test
cs
pop
mov
pop
mov
jnp
rorl
add
add
push
test
mov
ja
sbb
lret
mov
repz
push
rcrl
jp
lods
jno
jbe
into
cwtl
das
add
std
xchg
mull
mov
push
sbb
dec
je
imul
repnz
mov
adc
inc
insb
das
popf
popa
xchg
sub
mov
mov
out
insb
add
shrb
arpl
xchg
push
movsl
fimuls
pop
cmp
sub
xor
jl
push
dec
loope
mov
lcall
and
daa
push
inc
xlat
xchg
cmp
pop
cmc
fcomps
jl
sub
loopne
and
xor
xchg
je
mov
mov
repz
insl
and
inc
hlt
mov
pop
out
imul
or
sbb
aas
dec
in
xor
add
xchg
addr16
test
test
push
or
pop
mov
pop
mov
fsubp
jnp
rorb
add
add
push
test
mov
jbe
sbb
lret
cld
sub
sbb
jp
lods
jo
jbe
int
das
inc
std
xchg
cmc
and
mov
jae
insb
movsl
push
repz
mov
adc
imul
pushf
pop
xchg
sub
mov
mov
in
insl
add
add
mov
xchg
pop
lock
stos
push
movsl
fmull
enter
sub
cs
out
mov
loope
scas
add
loopne
push
mov
and
inc
movsb
cmp
pop
not
cltd
ret
clc
jge
sub
loopne
pop
dec
fwait
xor
xchg
jb
mov
mov
repnz
outsb
and
cmp
pop
inc
cmc
mov
pop
out
imul
xor
sbb
xchg
sub
ds
out
xor
add
test
addr16
mov
adc
aaa
test
mov
mov
fucom
jl
rorb
add
add
push
andl
mov
test
cmpsb
aad
push
enter
daa
pop
hlt
pop
sbb
pop
dec
jns
adc
int3
cltd
xor
sar
repz
mov
mov
jb
insl
movsb
data16
xchg
idivl
adc
cmp
xor
fwait
pop
xchg
sub
mov
mov
loop
outsb
add
xor
push
lock
test
leave
pusha
cmp
sub
sub
out
lea
loope
scas
add
call
add
xor
xchg
test
jbe
pusha
not
xchg
ret
idivl
sub
loopne
sbb
ds
xchg
jo
mov
mov
icebp
fsubrs
in
rcll
ss
out
addr16
adc
leave
mov
mov
fcoml
outsb
das
mov
popa
outsb
add
mov
mov
adc
out
test
ss
inc
push
mov
pop
mov
fsub
jge
into
dec
das
add
pusha
and
push
andl
sbb
roll
add
mov
cmc
push
sbb
pop
dec
ja
adc
lret
cld
mov
mov
mov
jo
outsb
mov
ret
cmc
mov
mov
lock
adc
inc
or
cmp
leave
cltd
pop
xchg
sub
jmp
mov
loopne
outsl
push
ds
push
pop
lea
push
icebp
mov
cmpsl
fadds
sub
jg
dec
dec
loop
lods
push
popf
fstpl
and
das
icebp
xchg
and
flds
mov
ret
pop
leave
cmc
jle
daa
jmp
js
dec
pushf
xor
call
into
xchg
sbb
outsl
and
cmp
adc
ss
lock
adc
mov
mov
fcoml
out
das
mov
popa
lea
mov
loopne
and
out
xchg
xor
inc
sub
pop
mov
jge
into
dec
loopne
sub
push
mov
movsb
roll
add
movsb
cmp
and
push
sbb
pop
dec
jne
adc
enter
mov
mov
mov
outsb
xlat
outsb
mov
shl
repz
icebp
out
adc
inc
or
cmp
leave
xchg
pop
xchg
lea
mov
loopne
outsl
push
cmp
aam
xor
and
push
repnz
cmpsl
adc
xor
push
call
jecxz
stos
push
popf
fistpl
and
sub
dec
inc
flds
mov
les
repz
and
inc
pushf
xor
add
int3
nop
push
mov
in
fsubrs
jecxz
rcll
testb
xchg
adc
lds
xor
pop
fistl
out
cs
pusha
mov
mov
fimuls
pop
xor
movsl
pop
test
pop
mov
sub
stos
fsub
jge
int
loope
sub
pop
pop
imul
scas
jb
push
movsb
iret
inc
xlat
add
movsl
cmp
and
push
sbb
pop
dec
jae
adc
lcall
sbb
mov
insb
xlat
outsb
sahf
arpl
mov
mov
repnz
adc
inc
pop
jp
cmp
xchg
pop
cwtl
das
mov
mov
fisttps
outsl
push
cmp
aad
xor
and
push
repz
cmpsb
adc
xor
das
sub
jg
dec
dec
in
test
popf
fstps
mov
and
fnstcw
cmpsl
jne,pt
pusha
not
xchg
lds
jle
and
jecxz
sbb
pushf
xor
add
lret
mov
jmp
outsl
sbb
aas
testb
xchg
adc
ret
xchg
mov
ficoml
out
sub
outsb
add
mov
mov
push
aam
mov
xor
cmpsb
pop
or
mov
sub
jge
int3
dec
loop
sub
pop
push
push
push
jnp
mov
mov
les
notb
lds
jge
mov
les
cwtl
out
pop
mov
mov
push
outsl
pushf
popa
ds
mov
pop
repz
adc
adc
bound
lret
cltd
xor
stos
mov
fldl
jo
cmp
aad
xor
and
subl
test
add
bound
imulb
daa
push
jmp
in
cmpsl
pop
sahf
fcomps
and
and
dec
inc
fidivrl
cmpsl
jae,pt
popa
clc
iret
xchg
lds
jg
and
jecxz
sbb
jbe
add
leave
lea
mov
ljmp
adc
testl
ret
adc
fcoms
call
pop
mov
mov
fisttpl
mov
stos
inc
popa
and
leave
pusha
mov
sub
jle
lret
sti
sub
add
and
mov
ret
hlt
push
pusha
testl
jle
mov
ret
pushf
xor
mov
mov
mov
imul
aad
mov
pop
repz
push
lods
inc
add
xor
push
cltd
xor
test
jno
aaa
cld
aad
cs
mov
mov
mov
lret
bound
cmc
das
es
jmp
in
cmpsb
pop
sahf
xlat
cltd
imul
clc
and
and
dec
inc
fidivrl
jb,pt
popa
clc
into
xchg
lds
jg
and
jecxz
sbb
xor
cmp
cwtl
imul
mov
jmp
cmp
mov
pop
repnz
jns
mov
xor
adc
xchg
or
mov
pop
xchg
mov
fimull
mov
cs
inc
pusha
and
cmpsb
push
or
les
leave
dec
loop
daa
add
add
and
mov
shll
dec
adc
pop
inc
outsl
jle
mov
ret
hlt
mov
mov
mov
push
ds
mov
pop
repz
push
lods
aas
add
xor
xor
xchg
push
cltd
xor
test
dec
fiaddl
or
sti
aad
sub
dec
repz
mov
lret
bound
hlt
das
and
inc
dec
in
movsl
pop
sahf
cwtl
imul
mull
and
dec
inc
fidivrl
cmpsl
jno,pt
popa
clc
int
lds
jg
and
jecxz
sbb
xor
cmp
cwtl
push
mov
mov
call
cmp
mov
pop
repnz
adc
adc
xchg
or
call
pop
xchg
mov
mov
sub
xsha256
cmpsb
push
or
mov
sub
jle
enter
es
add
mov
lahf
lret
sti
shlb
dec
adc
pop
inc
outsb
jle
mov
rcrl
adc
push
inc
or
mov
fnstenv
pop
ds
mov
pop
repz
push
lods
add
xor
lret
nop
push
cltd
xor
cmpsl
mov
flds
jno
xor
push
mov
mov
lods
inc
fsubl
lret
bound
repz
and
jmp
in
movsb
pop
sahf
aad
imul
mulb
and
cmpsl
jo,pt
popa
clc
int3
xchg
lds
jg
pop
in
jp
inc
popf
xor
cmp
cwtl
imul
jo
fnstsw
mov
pop
repnz
mov
adc
aad
cs
xor
sub
push
mov
shrl
fmuls
mov
sub
inc
pop
and
cmpsb
push
jg
pusha
mov
sub
jle
dec
loop
and
push
dec
ja
mov
sahf
leave
inc
fdivr
mov
pusha
testl
adc
xchg
rcrb
adc
mov
fnstenvs
pop
ds
mov
pop
repz
lods
cmp
pop
xor
push
cltd
xor
cmpsb
mov
fadds
jno
xor
aad
sub
mov
jle
lods
inc
fistpl
lret
bound
repnz
and
addb
pop
sahf
aam
imul
cmc
and
and
inc
fidivrl
cmpsl
outsl
lcall
ret
push
push
in
jp
inc
popf
xor
aaa
add
lds
fnstenv
fdivrl
mov
repnz
lea
adc
aam
cs
xor
arpl
mov
pop
test
mov
shrl
xlat
lea
into
icebp
mov
sub
cmpsb
push
jle
pusha
mov
sub
jle
dec
loop
and
pushf
push
sbb
dec
jbe
mov
popf
enter
mov
pusha
testl
jle
sahf
fs
xchg
mov
add
inc
or
mov
fnstenv
pop
ds
mov
pop
repz
push
lods
cmp
jp
xor
lret
push
cwtl
das
test
mov
xlat
add
xor
aam
sub
mov
mov
lods
inc
fistpl
lret
bound
icebp
lds
push
jmp
jecxz
mov
push
cmc
and
pop
sbb
fidivrl
cmpsb
cmp
lret
pop
pop
shr
push
push
jecxz
jns
inc
popf
xor
add
lds
fnstenv
fstpt
or
testl
mov
fbstp
lret
xchg
sub
arpl
mov
pop
test
mov
shrb
xlat
lea
int
xchg
sub
cmpsb
push
jge
pusha
scas
jb
les
lds
mulb
add
add
and
pushf
movl
out
sbb
dec
adc
pop
inc
imul
arpl
jp
mov
add
inc
or
mov
fnstenv
pop
ds
mov
mov
lods
pop
repz
push
lods
cmp
jp
xor
lret
mov
das
subl
dec
add
xor
aam
sub
xchg
mov
inc
ficompl
lret
bound
dec
jmp
jecxz
mov
push
hlt
and
pop
sbb
fidivrl
cmpsb
cmp
lret
pop
shr
push
sbb
aas
popf
xor
xor
mov
mov
in
jo
fidivrl
or
testl
mov
fidivs
lret
xchg
sub
bound
outsl
push
mov
shrb
lea
int3
lock
sub
cmpsb
push
jl
pusha
scas
jno
les
les
cmc
and
add
and
fwait
movb
mov
pusha
testl
jle
pushf
jp
mov
add
inc
pop
and
xchg
pop
ds
mov
mov
stos
pop
repz
push
lods
cmp
jp
das
pop
xor
lea
das
subb
dec
aad
jno
xor
aam
sub
xchg
mov
lods
inc
fstps
bound
lds
dec
jmp
jecxz
mov
push
mov
sbb
fidivl
cmpsb
cmp
leave
les
ljmp
adc
popf
xor
xor
xchg
gs
mov
mov
in
jo
fnstcw
or
testl
mov
fnsave
lret
xchg
sub
popa
and
dec
push
subb
ja
imul
sub
cmpsb
dec
jnp
pusha
lods
jo
les
ret
dec
loop
and
add
and
lcall
cmp
dec
push
lds
jle
fwait
popa
jecxz
xchg
mov
add
inc
push
and
xchg
pop
ds
mov
mov
stos
pop
repz
push
lods
cmp
jp
cs
xor
mov
das
subl
jo
xor
aam
sub
and
jnp
lods
inc
fcomps
popa
sub
lds
dec
call
jecxz
mov
push
mov
sbb
fnstenv
cmpsb
cmp
enter
mov
loope
jns
cmp
add
ret
mov
jecxz
outsl
adc
aaa
testb
mov
mov
fdivl
leave
or
das
push
out
and
dec
push
subl
test
lret
lock
daa
stos
inc
pop
push
xsha1
cmpsb
dec
jp
pop
lods
jo
les
ret
repz
add
and
cltd
les
cmc
mov
pusha
testl
jle
lcall
xor
mov
cwtl
in
mov
mov
popa
fnstenv
push
ds
mov
mov
test
push
lods
cmp
jp
sub
dec
cwtl
das
subb
sar
jo
xor
aam
daa
push
mov
jp
lods
inc
xlat
fwait
adc
sub
lds
dec
call
jecxz
lahf
push
popf
rclb
and
and
mov
sbb
jne
cmpsb
cmp
mov
pop
mov
loopne
jns
cmp
xor
add
roll
outsl
adc
cmp
or
testb
mov
mov
leave
or
xchg
sub
pop
and
mov
shrb
rorl
cld
es
inc
pop
sbb
enter
sub
jge
rorl
pop
add
add
and
cwtl
ret
inc
fdiv
mov
pusha
testl
jle
cltd
pop
jecxz
xchg
mov
add
aas
add
mov
pusha
fnstenv
push
ds
mov
mov
test
repz
push
lods
aaa
cli
jp
sub
xor
mov
das
jg
push
jmp
sar
jo
das
hlt
aam
es
mov
jns
lods
inc
lcall
sub
lds
dec
call
jecxz
sahf
push
popf
iret
xchg
push
ret
lock
and
mov
pop
inc
inc
fnstenv
cmp
mov
pop
mov
jns
cmp
arpl
push
mov
loope
outsl
adc
cmp
or
pop
icebp
pop
mov
mov
fidivl
leave
or
xchg
sub
pop
and
mov
shrb
rorb
sti
and
xsha1
cmpsb
dec
js
pop
stos
outsb
sub
jge
rorb
push
add
add
mov
xchg
ret
repz
pusha
testl
jle
cwtl
pop
jecxz
nop
mov
add
add
mov
pop
fnstenv
push
ds
mov
mov
cmpsl
pop
repz
jp
sub
lret
mov
aaa
mov
lea
push
popf
lcall
aam
add
leave
sbb
jmp
push
int3
xchg
pushf
ret
data16
and
addr16
popa
orb
cmp
mov
in
jl
adc
inc
pop
and
and
push
push
mov
hlt
mov
add
mov
cmp
sahf
lret
jne
sbb
in
pop
and
dec
dec
xchg
dec
mov
xchg
cwtl
sarb
add
xchg
aam
and
pop
jmp
je
sbb
pop
mov
push
rcr
jmp
jmp
cmp
cmp
mov
cld
or
cwtl
xlat
test
mov
pop
clc
inc
in
jge
xchg
dec
sbb
dec
cmp
imul
pop
add
cs
imul
js
inc
dec
mov
mov
add
imul
push
sbb
dec
push
lock
stos
cmp
mov
jbe
ja
fdivrp
fs
jge
mov
in
ljmp
repz
dec
in
and
lods
xchg
ss
and
aaa
sub
inc
push
mov
mov
jne
mov
mov
in
inc
sbb
scas
sub
fisttps
mov
lret
cmp
loopne
pop
cmpsl
jns
out
jle
nop
adcb
insb
and
je
adc
pop
sub
shrl
movsl
and
outsb
pop
int3
add
int3
nop
mov
mov
mov
sbb
lahf
lret
xchg
popw
repnz
divb
mov
xchg
add
mov
int3
cmovns
hlt
or
bound
mov
roll
mov
inc
sbb
mov
outsl
jmp
jne
movsb
push
fstpt
outsb
mov
xchg
fldenv
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
mov
mov
out
add
xor
call
fisubrl
stos
stos
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
inc
jge
lahf
ret
dec
inc
cmp
fcmovnb
xchg
dec
dec
loopne
xor
mov
daa
rorl
outsb
xchg
je
decb
mull
aam
dec
jmp
adc
js
gs
out
repz
fldt
jmp
outsl
hlt
into
les
dec
rcll
das
inc
scas
push
bnd
jo
test
nop
xor
insl
lock
subb
int
cltd
in
inc
test
aas
xor
xchg
add
in
cltd
in
mov
das
mov
popa
mov
in
xchg
sbb
sbb
mov
scas
loopne
repz
cmp
xchg
add
lahf
push
add
fstpt
fisubl
je
push
sbb
in
iret
dec
xchg
dec
mov
imul
or
mov
cmpl
stos
cmp
jl
mov
push
rcrl
jnp
cmp
pop
mov
jb
fstpl
sbb
ss
es
xchg
cmp
sbb
cmpsb
sub
insl
insb
cmp
mov
into
lcall
sbb
jmp
mov
addr16
shl
or
jmp
imul
xchg
and
jae
cmc
mov
or
popf
add
sub
int
add
and
xor
xor
es
loopne
dec
pop
dec
pop
sbb
or
shll
xchg
mov
nop
lret
xchg
imul
popf
xor
mov
dec
pop
insl
cmpsl
aam
lock
imul
cwtl
outsl
jmp
mov
bound
aam
jnp
or
push
iret
push
sbb
lds
push
out
mov
mov
es
into
and
flds
push
sbb
mov
test
jle
add
arpl
dec
cmp
lcall
inc
adcb
jbe
add
mov
and
mov
ds
push
cmovbe
rorl
mov
