std
std
call
in
sub
mov
pop
mov
ret
or
call
aas
cmp
add
ret
sbb
sbb
inc
add
pop
inc
add
outsl
in
sbb
mov
popa
mov
inc
xor
clc
add
jmp
xor
stc
mov
roll
lcall
jle
call
mov
sub
push
push
test
sbb
into
lea
mov
mov
add
adc
add
add
mov
or
addl
mov
jne
push
add
cmp
push
test
sub
out
and
in
push
in
push
and
push
fwait
scas
sbb
pop
daa
stc
adc
adc
push
lea
dec
hlt
pop
adc
sbb
mov
aaa
sbb
jns
dec
inc
dec
push
adc
sub
or
push
inc
add
out
outsb
test
adcl
popa
icebp
ss
popa
jb
and
outsb
popa
cld
push
pop
or
stc
sub
insl
and
push
in
std
test
and
push
and
sbb
sbb
or
or
repnz
inc
sub
jg
hlt
imul
popa
xor
push
inc
ja
jae
fistl
cld
lods
lock
or
add
mov
lcall
outsb
pop
ret
adc
ret
sbb
outsl
jmp
inc
hlt
mov
xor
sbb
push
push
mov
dec
popa
inc
es
sbb
incb
fisttps
push
gs
loopne
movsb
in
fildl
xchg
test
push
cmp
mov
cmc
pop
add
jmp
push
lock
lock
push
loopne
and
ds
adc
dec
and
push
mov
loope
inc
cmp
in
daa
mov
and
push
push
xor
test
push
adc
andl
aaa
add
mov
sbb
pop
in
mov
insb
jbe
sbb
pop
jle
test
and
or
sbb
ret
cmp
jbe
icebp
test
jp
adc
push
hlt
in
ret
nop
and
push
sbb
sbb
and
outsb
cmc
xor
ret
stos
cmp
push
jae
sub
testl
inc
arpl
leave
push
inc
jle
orl
sti
test
daa
and
pop
dec
or
pop
sbb
std
dec
add
push
adcl
inc
dec
push
adc
xor
aam
aam
pandn
mov
sbb
jno
xor
sarl
xor
xchg
push
adc
adc
mov
mov
adc
add
or
or
mov
pop
bound
push
push
dec
imul
add
or
sbb
sub
and
adc
outsl
outsl
sub
loopne
push
in
push
fimuls
in
adc
jp
aas
mov
push
lea
in
call
jbe
negl
add
lret
ret
das
push
or
xorb
and
add
movl
xor
lods
push
loopne
lock
ja
push
adc
and
push
push
sbb
das
or
fdivrl
xor
mov
sbb
sub
mov
or
test
loopne
and
psadbw
push
cmp
inc
or
ss
cs
or
fnsave
xor
sbb
jl
ja
shl
test
push
lea
cld
ss
std
pop
fs
es
andl
lea
mov
push
sbb
mov
sbb
jge
xchg
stos
mov
daa
sbb
push
mov
adcl
fs
jbe
inc
xor
lcall
xchg
push
xchg
push
push
fisubs
fmuls
clc
std
in
xchg
push
jne
lock
and
push
loopne
fwait
mov
test
adc
inc
push
and
mov
mov
jbe
inc
push
popa
inc
mov
sbb
push
and
icebp
mov
addr16
hlt
fidivrs
in
nop
dec
mov
sbb
inc
jnp
add
std
fistps
popf
and
enter
repz
pop
and
mov
movsb
incl
mov
decl
into
cld
bound
ss
dec
dec
pop
mov
enter
adc
imul
jns
push
inc
ds
or
ljmp
cmp
push
mov
test
push
xchg
pop
sahf
or
xchg
test
push
xlat
pop
xchg
ret
sti
cli
jb
sbb
sbb
mov
inc
int
js
pop
add
add
jecxz
rolb
outsb
clc
inc
jns
jbe
insb
jb
push
js
cmpsl
lods
ret
or
xorl
movsl
insl
out
pop
ss
leave
xchg
jae
add
ss
cmpsb
hlt
loopne
loopne
ret
addb
f2xm1
and
lret
js
and
or
arpl
jns
pop
jae
inc
cmc
mov
scas
push
fwait
push
inc
lcall
mov
cmp
fs
arpl
popa
iret
sbb
and
push
rorl
sbb
ret
mov
dec
mov
mov
dec
insl
push
xor
bound
int
pusha
movsb
mov
mov
int
or
cmp
push
fisttpll
and
call
and
pushf
shl
movb
call
jp
movsl
cmc
in
jmp
lock
mov
inc
mov
pop
xor
xor
jo
and
dec
addr16
loopne
adc
push
seto
movsl
mov
pop
je
pop
pushf
mov
jnp
add
or
mov
clc
mov
jb
add
and
push
fldcw
jp
sbb
sbb
movsl
sub
sbb
std
xchg
mov
rorb
jle
insl
sbb
jp
inc
loopne
clc
xor
dec
cltd
adc
and
test
add
push
icebp
mov
add
push
lods
scas
sub
push
dec
sub
dec
cs
xchg
dec
lret
cmc
inc
pop
dec
addr16
mov
aad
ss
adc
rolb
or
mov
xor
and
add
mov
xor
or
pop
popf
xchg
das
jp
push
filds
clc
add
sub
xchg
pop
mov
inc
movsl
and
mov
or
and
repnz
movsb
aas
jp
push
push
xlat
dec
push
popf
jge
cs
inc
cmp
test
jno
sbb
scas
movsl
subb
mov
adc
push
mov
int3
jbe
into
lock
push
push
stos
xchg
push
mov
sbb
ret
and
inc
add
xchg
cltd
jbe
in
in
jo
and
or
cwtl
sbb
inc
imulb
or
ret
sub
push
lea
ret
and
movsl
rcr
sti
jns
mov
or
or
adc
mov
sub
outsb
dec
rolb
sbb
pop
inc
ss
push
push
inc
insb
lea
inc
cld
or
cli
subl
int
or
loop
add
dec
push
cld
sti
adc
repnz
popf
push
mov
pop
jle
pop
xor
int3
push
clc
adc
test
inc
mov
mov
cld
pop
add
push
or
add
jne
mov
movsb
loop
adc
add
call
jnp
pusha
test
cmovb
jg
or
mov
mov
inc
inc
dec
or
jne
pop
popf
cld
mov
lods
aaa
xor
xor
mov
add
push
sbb
cmovae
dec
and
jmp
sub
sbb
sahf
xchg
mov
into
lock
xor
aad
mov
adc
push
pop
mov
iret
in
dec
sbb
sbb
cmpsb
mov
jg
loope
adc
inc
cmpsl
fs
enter
push
jg
mov
or
inc
mov
cmp
dec
add
xor
movsb
out
aaa
loop
jbe
sbb
mov
mov
inc
inc
cmpsl
pop
add
cmp
es
imul
xlat
ja
push
xchg
push
sub
and
aad
movsb
adc
outsl
insl
cli
add
xchg
jecxz
bound
pop
arpl
or
or
xor
cmp
loopne
add
fistpll
pop
imul
mov
fistpll
jo
ja
add
lods
sbb
orl
std
int3
pop
inc
pop
sub
add
aas
xor
xor
call
push
dec
in
jl
mov
adc
mov
sbb
hlt
xchg
clc
cmpsb
nop
or
leave
adc
std
add
inc
fs
sbb
sub
add
xor
mov
push
xor
and
mov
sbb
or
lea
push
js
add
dec
jo
pusha
or
ror
vmread
xchg
sub
roll
mov
sub
call
fs
pop
or
addr16
cld
push
mov
pop
sti
sbb
and
pushf
test
mov
or
push
and
fs
lahf
imull
add
popa
dec
inc
xchg
ret
mov
or
in
test
cmc
lods
pop
adc
inc
jmp
push
jae
mov
out
lods
sub
jp
scas
mov
sbb
sub
out
rolb
stos
pushw
ljmp
lock
insl
xor
adc
cmp
and
movsl
push
jbe
sub
xchg
add
mov
jg
sbb
mov
lret
jo
mov
cli
mov
pop
cmp
pop
jo
ret
loopne
xor
inc
sbb
inc
orl
mov
das
sbb
inc
xor
enter
pop
cmpsb
imul
adc
push
pop
dec
xor
lock
mov
adc
aas
ret
inc
push
adc
pop
sbb
cwtl
and
pop
cs
mov
jb
ss
sbb
and
xchg
push
testl
push
mov
mull
dec
inc
popf
test
push
sbb
adc
mov
add
je
jae
gs
add
es
cmp
dec
push
and
inc
adc
xchg
movsb
out
stos
jnp
aaa
pusha
pushl
js
sub
add
push
inc
idivl
in
xchg
or
inc
cmp
pop
or
pop
pusha
lcall
sbb
mov
push
int
dec
inc
aaa
ret
das
push
aam
out
outsb
in
or
fs
xor
cld
mov
insb
adc
lret
xorl
popaw
je
and
out
adc
lahf
jl
push
dec
inc
add
push
mov
nop
out
sbb
and
shlb
dec
sbb
push
fdivrl
cmp
push
jmp
sbb
mov
or
dec
in
fs
or
std
mov
push
cmp
push
adc
or
jle
popf
and
das
ds
or
out
incl
xchg
or
add
jb
mov
shlb
push
in
add
jg
fmull
test
je
stc
sti
es
sub
std
push
movsb
add
add
cwtl
popa
xchg
outsb
pop
test
add
sahf
adc
sbb
jge
dec
lds
sbb
adc
adc
enter
xchg
xchg
hlt
or
sub
pop
sbb
psadbw
xchg
fucomi
incb
mov
icebp
loope
push
mov
or
mov
imul
je
push
push
cmp
loope
add
xchg
inc
dec
pop
jno
mov
mov
xlat
fwait
or
pop
and
jbe
outsb
and
repz
sar
adc
js
iret
fsubl
sub
jecxz
pop
nop
es
jp
add
imul
sbbb
cmpsl
mull
jae
add
imul
adc
rcll
sbb
iret
call
inc
fsubs
jae
outsl
sub
inc
push
add
inc
cmp
roll
mov
and
inc
or
cli
loopne
aaa
dec
sub
pop
popa
rolb
sbb
adc
dec
addb
aaa
js
dec
cld
stos
and
in
jge
jne
adc
and
imul
lret
inc
movlps
sbb
and
xchg
pop
cs
mov
cmpsl
adc
loope
nopl
jnp
push
add
cmp
add
shll
outsb
out
add
adc
push
sub
or
sbb
mov
idivl
xchg
sbb
fs
push
mov
lock
or
data16
pop
aas
adc
adc
cmp
cmp
sti
push
cmp
mov
stc
inc
or
popa
hlt
jnp
lret
negb
test
add
push
imul
adc
adc
dec
outsb
in
and
and
mov
aas
loopne
or
push
movlps
xchg
adc
or
push
xor
or
pop
orb
outsl
loopne
outsb
incl
sub
inc
ss
adc
in
mov
xchg
popf
jae
bound
lds
sbb
xchg
lret
insl
out
insl
push
jns
or
xor
dec
inc
pop
cmp
fcomps
pop
movsb
and
pop
mov
sbb
das
cld
arpl
push
mov
and
call
or
mov
stos
inc
enter
pop
or
pop
sub
leave
dec
jae
ja
or
lret
xor
shll
and
cli
cmpsb
nop
sbb
and
addr16
xchg
push
xor
push
sub
clc
sbb
rcll
enter
sbb
mov
push
sti
inc
inc
nop
pop
movsl
pop
popa
inc
addr16
iret
sbb
mov
and
std
cmp
push
adc
push
arpl
fwait
xchg
jb
mov
jmp
sti
xor
dec
loop
pusha
mov
push
or
lea
or
lret
loop
scas
sahf
gs
std
insb
adc
movsb
adc
push
add
sub
inc
rcrb
and
decl
jb
ja
outsb
push
push
jns
add
fldt
aaa
xor
xor
add
xor
xor
add
ljmp
dec
dec
dec
addr16
push
push
push
jbe
jbe
inc
dec
dec
jno
arpl
arpl
xor
insl
sti
jmp
xor
add
push
dec
inc
inc
push
dec
xor
xor
xor
outsl
in
xor
inc
arpl
jno
push
add
popa
insl
push
outsl
dec
dec
mov
imul
add
and
dec
jo
inc
add
js
outsl
push
jns
inc
imul
jns
cmp
push
add
insb
push
fistps
add
bound
add
gs
fs
jns
imul
inc
inc
inc
js
xor
sbb
arpl
aaa
jo
add
xor
cmp
cmp
dec
imul
outsl
mov
xor
dec
imul
inc
imul
add
fildll
jne
jne
jns
xor
gs
xor
imul
jno
std
ljmp
dec
push
inc
push
pop
inc
push
push
dec
inc
dec
inc
inc
dec
add
ss
inc
dec
push
push
pushw
add
push
ss
popa
loopne
arpl
int3
jl
das
insb
test
sbb
jno
inc
jo
jo
dec
jo
lcall
sbb
shr
dec
xor
jb
mov
inc
push
testb
dec
push
push
imul
data16
mov
jb
bound
aaa
dec
jae
dec
sbb
gs
outsl
or
imul
push
mov
pop
clc
scas
mov
dec
add
inc
bound
idiv
test
push
push
push
dec
inc
inc
dec
dec
dec
mov
inc
outsl
push
inc
jae
bound
popa
inc
mov
jae
nop
xchg
outsb
bound
aaa
bound
push
fs
push
imul
notb
dec
arpl
inc
dec
pop
dec
push
mov
addr16
fildl
ja
pop
jno
inc
outsl
lods
call
inc
cmp
mov
xor
imul
push
push
inc
dec
push
inc
push
push
pushw
ds
fldt
jl
inc
jo
adc
inc
jbe
stos
insl
ss
imul
adc
insb
xor
mov
fldt
popa
je
inc
inc
popa
xchg
push
imul
data16
or
push
adc
push
std
sub
jns
andl
sbb
mov
jnp
jge
insb
inc
pushw
inc
insl
mov
inc
jle
sub
xchg
xchg
fcompl
lods
cmp
add
add
inc
jne
fildll
dec
dec
sub
xor
pop
inc
ja
push
push
arpl
jno
push
push
lea
inc
xchg
js
jb
push
jno
ja
push
push
or
cmp
xorl
rcll
lcall
popa
fistpl
add
outsl
inc
jae
imul
outsb
popa
insb
imul
pop
jno
dec
popa
js
push
add
das
jns
xor
aaa
pop
js
push
xor
push
add
inc
inc
sub
mov
inc
xor
jo
push
sahf
inc
gs
mov
push
inc
fs
push
pop
add
dec
dec
dec
push
dec
test
mov
push
inc
dec
sub
data16
push
push
incl
je
ja
insb
jb
cmp
xchg
fcmovnb
aaa
stos
xor
push
jo
insb
outsl
test
mov
jo
loope
mov
push
bound
push
inc
push
mov
mov
ret
dec
push
inc
push
push
loop
outsl
movb
push
dec
inc
inc
dec
push
clc
arpl
pop
arpl
pop
push
dec
inc
dec
push
dec
pop
adc
push
push
inc
push
push
jp
je
clc
insl
mov
jns
in
dec
dec
fs
outsl
pushl
cmpsb
inc
in
jne
inc
push
imul
mov
imul
lock
mov
insl
inc
popf
dec
out
push
dec
push
out
std
movsl
lods
adc
inc
jae
jbe
inc
outsb
insl
push
outsb
lods
mov
popa
dec
jo
inc
insb
push
or
das
xor
push
dec
jbe
cli
dec
or
mov
or
outsb
jne
and
jo
push
incl
mov
mov
lcall
dec
movsb
push
insb
fdivrl
lahf
jg
add
inc
fwait
adc
or
repz
lods
inc
cmp
sbb
jno
push
mov
incl
adc
sahf
sarl
gs
cltd
push
jp
mov
and
xor
sbb
cs
imul
mov
js
cmp
fidivl
pop
mov
adc
outsl
mov
add
sub
and
dec
adc
ret
test
jnp
gs
mov
jbe
jg
xchg
jo
das
jecxz
xchg
and
jb
cmp
lcall
incl
push
xor
sbb
out
xor
das
xchg
cli
lcall
mov
pop
ja
xchg
stc
nop
sbb
pop
mov
cwtl
mov
and
std
dec
xor
jo
rep
add
mov
popa
lock
mov
fnstcw
call
ficoms
or
sbb
push
push
xor
mov
mov
mov
jns
mov
outsb
fs
and
cmp
out
fdivrl
mov
inc
pop
sbb
shll
jns
incl
push
outsb
cltd
stc
pop
inc
out
outsb
leave
mov
movsb
pop
ret
sahf
test
in
jns
aam
fidivrl
jp
movsl
or
push
icebp
add
mov
bound
lcall
pop
popa
inc
mov
inc
jg
hlt
jle
mov
jnp
shrl
iret
mov
in
dec
sbb
pusha
cmp
xchg
lods
fdivp
add
mov
fiadds
pushl
inc
imul
into
cmc
mov
inc
cmpsb
or
adc
push
punpckldq
push
mov
ds
xor
into
popa
ret
es
in
jecxz
xor
in
lret
es
call
pop
mov
rol
and
pop
xchg
std
pop
les
add
mov
enter
hlt
xor
xor
jmp
adc
mov
mov
xchg
sahf
or
cmp
icebp
adc
filds
lods
or
sbb
push
xlat
sbb
adc
inc
and
or
ljmp
mov
mov
cmpsl
subl
pop
ja
fisubrs
sub
cmpb
adc
mov
and
or
dec
test
dec
shrl
mov
cmc
jb
cmp
and
arpl
jns
xor
jle
shr
std
cmp
fbstp
push
mov
push
fistps
cld
fwait
call
cmpsb
jg
fcompl
push
xchg
or
cmp
xor
imul
mov
lea
cmp
imul
jb
sub
cmp
and
decl
out
cmp
mov
inc
loope
jo
int
test
push
jmp
jnp
out
aas
sti
and
jecxz
nop
xchg
sub
repz
push
jmp
aas
xchg
leave
sub
jbe
jecxz
imul
or
mov
pop
loop
push
sbb
pop
mov
xor
ja
mull
pushf
jg
pop
cli
incl
adc
fsubs
adc
xchg
adc
cli
movsl
incl
cli
test
jmp
ss
hlt
imul
mov
jle
pop
cs
xchg
lock
mov
or
in
dec
icebp
fdivs
cli
call
sbbb
push
xchg
lods
xchg
mov
push
hlt
lcall
dec
xchg
sub
fnstcw
mov
mov
mov
daa
pop
ret
inc
cli
pop
mov
out
cmp
jno
loope
scas
stos
cmpsl
mov
xchg
add
lods
in
fildll
cltd
pop
je
sub
negl
clc
mov
call
jmp
and
imul
cs
sbbb
js
in
cmpsb
daa
and
ljmp
sbb
pop
mov
or
rclb
sub
call
sub
ljmp
shlb
xchg
pusha
pop
out
and
popa
mov
fs
call
mov
add
out
js
popl
bound
mov
xchg
xlat
insb
adc
lock
mov
fnstsw
movsb
out
lret
xchg
clc
sub
and
push
mov
cmp
inc
stc
xchg
push
push
notb
mov
decl
decl
cmp
inc
fdivl
lcall
mov
cmp
ljmp
pushf
pop
push
call
inc
insl
jle
dec
add
ror
movsl
das
adc
outsl
cmp
icebp
pop
shrb
decl
adc
dec
mov
add
movsl
or
push
and
in
lret
out
nop
lock
loope
call
adc
mov
sarl
pop
jg
sub
pop
mov
jp
mov
mov
fiadds
addr16
rclb
es
mov
stos
xchg
jno
push
test
pusha
ret
bt
call
mov
mov
cltd
cld
pop
xchg
mov
fisubs
or
sub
push
stos
in
enter
xchg
mov
xor
fwait
and
mov
fstpt
pop
adc
pop
mov
xor
out
rcrb
cmpsl
xchg
call
incl
hlt
cmp
ljmp
xor
ss
dec
les
jmp
push
int
lcall
dec
mov
add
les
pushf
adc
mov
push
ret
jl
test
cli
pop
lcall
push
mov
cmpsb
ljmp
adc
push
sub
pop
push
pop
cs
mov
jmp
mov
mov
sub
adc
notb
xchg
mov
fmulp
pop
int
popf
add
adc
repnz
jmp
stos
or
repnz
push
outsb
mov
lret
lock
clc
ljmp
sar
leave
sbb
mov
inc
fs
ds
jp
mov
nop
repz
and
in
fildl
xchg
jmp
aad
popf
shr
pop
test
add
in
stos
les
outsl
adc
test
mov
and
and
inc
nop
jae
cmp
sbb
repnz
ljmp
into
loopne
adc
sbb
mov
inc
push
pop
stos
loop
lods
arpl
pop
push
cmp
cmpsl
mov
mov
in
push
sarb
gs
icebp
cmpsb
adc
or
out
loopne
pop
repz
mov
pop
sbb
movsl
pop
or
test
incl
data16
or
pop
mov
mov
mov
aaa
cltd
leave
fistpll
ret
lods
outsb
mov
idiv
outsl
adc
pop
push
cmovs
shrb
xchg
sub
dec
std
lretw
pop
das
sub
inc
scas
adc
dec
dec
sub
decl
rcrl
call
fidivs
or
sbb
and
clc
jle
xlat
fidivrs
mov
jg
rclb
xchg
dec
fmul
inc
ja
cld
arpl
decl
adc
adc
das
xchg
stos
mov
mov
pop
shl
movsl
incl
js
dec
es
jo
lock
push
mov
dec
shlb
mov
lods
xchg
or
aaa
clc
push
popf
sbbl
sub
push
sbb
hlt
pop
mov
push
icebp
add
jl
pop
addr16
push
add
scas
jae
movsb
fwait
idivb
inc
insl
leave
jb
xchg
in
sub
ljmp
sub
insb
iret
repz
js
or
fwait
or
fists
xor
xor
xchg
aam
adc
lret
mov
xchg
sbb
push
push
sbb
ljmp
lahf
incl
sub
push
jmp
scas
pushf
mov
dec
pusha
and
or
xchg
mov
out
or
xchg
xchg
or
cmp
jns
call
xor
mov
aam
movsl
or
fdivr
out
pop
pop
repnz
mov
cltd
or
lcall
cld
and
rclb
jmp
adc
nop
inc
insl
shlb
aaa
sub
es
sbb
inc
cmpsl
or
jne
sti
pop
add
push
lds
ljmp
cwtl
cld
es
roll
push
and
add
and
pop
ret
pop
push
je
lods
orl
sub
test
out
mov
dec
push
adc
outsl
fistl
pop
mov
sti
sbb
rorb
hlt
outsl
hlt
xchg
jbe
and
jle
xchg
dec
jl
jl
out
ret
cmc
mov
movsb
ret
movb
sbb
out
mov
das
hlt
xchg
mov
in
data16
push
mov
and
aad
cmp
xchg
shll
test
pop
lds
dec
leave
subl
xchg
loopne
sbb
call
sbb
jge
pop
jnp
inc
fs
adc
daa
push
aaa
push
jo
mov
jecxz
or
push
jne
jne
pop
mov
leave
mov
mov
lds
gs
jmp
mov
fsubl
aad
daa
das
icebp
pushl
jb
pop
addr16
loope
sub
pop
sub
ljmp
sub
xchg
xor
inc
jo
xchg
pop
jne
push
dec
stc
sahf
jg
mov
jnp
xchg
into
arpl
xor
lcall
or
cmp
adc
mov
mov
xor
outsl
call
das
adc
cmp
arpl
push
mov
sbb
rcrb
mov
push
lret
call
aaa
fmuls
loope
insb
pop
shll
push
clc
cs
cmc
test
decl
lcall
fsubrl
movsl
mov
mov
pushl
jge
xchg
cmc
ret
mov
cwtl
xchg
cmp
mov
jge
push
out
pop
aam
pop
dec
sbbl
das
mov
lret
cs
or
in
scas
jnp
movsb
mov
push
push
lahf
xor
mov
aad
dec
ret
mov
jne
jp
mov
lods
fldt
test
mov
inc
pop
sbb
mov
jmp
mov
jge
out
scas
inc
ds
je
sub
pop
sbb
repnz
jg
xchg
iret
out
jae
jmp
sti
aas
mov
popa
int3
add
jb
mov
lcall
stos
adc
xor
fs
mov
outsl
lcall
dec
xor
dec
cmpl
fsubl
std
dec
xor
das
dec
adc
and
push
ja
dec
xchg
and
fwait
pop
fwait
bound
pop
stos
or
stc
adc
out
mov
inc
aad
pop
jp
dec
aaa
pop
push
arpl
xor
mov
ljmp
mov
movsl
jg
ror
scas
jl
js
inc
movsb
jl
or
call
xor
xchg
adc
cli
lds
sbb
or
sbb
inc
sbb
push
loop
cli
out
add
inc
cmpsb
das
icebp
lea
lcall
push
jmp
inc
fistl
xor
push
decl
je
jge
shrb
cmp
mov
es
leave
add
jb
lahf
sub
fwait
jbe
mov
add
inc
into
cltd
dec
outsl
call
outsl
hlt
test
out
push
dec
mov
lea
cli
mov
aad
jge
les
inc
in
mov
in
outsl
lcall
jmp
xor
sbb
xchg
sbb
inc
mov
repnz
movsl
rcrb
ljmp
lahf
scas
js
in
pop
lret
xchg
clc
xor
sar
pop
sbb
mov
test
icebp
push
inc
lcall
mov
xchg
sub
aaa
es
data16
or
jecxz
stos
cwtl
lock
inc
std
stos
addr16
iret
lea
push
movsl
outsb
sbb
mov
push
mov
test
faddl
sub
scas
and
mov
test
aaa
adc
adc
aaa
mov
loope
and
clc
push
mov
and
fimull
push
lock
pop
bound
outsb
sub
test
jmp
pop
fists
mov
mov
add
xchg
inc
sub
int
jb
cli
neg
adc
popa
inc
pop
inc
loop
gs
hlt
sbb
movsl
mov
mov
fnstenv
mov
jg
pop
cli
xor
xchg
jbe
aas
pop
movsb
sarl
pop
insl
or
cs
je
negb
and
cmp
jmp
dec
fs
xchg
inc
leave
sbb
je
das
sarb
sub
sub
pop
dec
xor
push
mov
pop
cld
fistl
mov
sbb
cmp
pop
test
das
xchg
mov
inc
cmp
jbe
lret
cmc
inc
inc
cli
or
test
aam
fldenv
sbb
loopne
test
mov
stos
mov
test
mov
fnstcw
ljmp
in
std
imul
mov
adc
mov
push
cmp
inc
mov
jae
stos
cld
pop
aad
mov
leave
inc
or
ja
mov
insl
pop
ss
push
int3
aas
sbb
push
pop
test
adc
xchg
jg
fidivrl
cmp
inc
mov
push
xor
or
xor
lcall
inc
clc
pop
loope
sbb
dec
sub
jns
lock
push
or
xchg
xor
sti
lret
incl
repz
daa
and
pop
jae,pt
cs
call
xor
mov
dec
mov
push
aam
and
jns
shrl
add
mov
jnp
movsl
mov
adc
roll
jbe
add
jp
fcoms
stc
pop
imul
dec
inc
bound
jb
insb
imul
add
xor
inc
or
push
jae
cmp
js
imul
outsl
je
insb
bound
jns
arpl
inc
addr16
stos
dec
js
outsl
insl
add
outsb
dec
bound
push
push
add
xor
push
pushl
push
je
js
xor
add
dec
arpl
xor
arpl
pushl
popa
js
data16
push
push
push
outsb
xor
fldt
inc
js
push
or
inc
inc
outsb
add
insb
insl
aaa
push
push
ss
outsl
add
aaa
jne
ljmp
inc
ss
xor
imul
inc
dec
popa
mov
outsl
inc
dec
jbe
cmpsl
add
imul
popa
jne
outsb
push
push
arpl
jns
bound
jae
add
ss
fucomi
jmp
add
push
push
inc
push
dec
dec
mov
pop
pop
inc
inc
gs
dec
dec
mov
roll
aaa
mov
loop
insl
inc
je
fs
inc
data16
add
jo
jno
jbe
adc
jno
outsl
jno
clc
add
xor
push
imul
inc
inc
inc
add
popa
inc
mov
mov
fiadds
push
dec
dec
push
jo
bound
sub
sub
outsb
addr16
mov
gs
push
and
or
sbb
cli
imul
push
lods
roll
jbe
and
call
outsb
cmp
cmp
inc
push
xor
add
jno
pop
mov
inc
data16
jo
jbe
dec
imul
imul
pop
fs
insl
push
dec
inc
jne
xor
cld
mov
pop
into
xchg
xor
insl
xor
mov
mov
xor
push
sub
pop
mov
inc
dec
gs
insl
fistpl
and
mov
ja
arpl
in
inc
loope
jae
adc
je
xor
push
inc
jb
dec
fmuls
test
dec
imul
push
pop
sub
inc
scas
dec
xor
jns
dec
cld
fcmovnu
mov
imul
inc
xchg
dec
jae
jne
popa
jno
jnp
das
pop
inc
jbe
ja
jns
bound
rolb
cld
insl
mov
ss
inc
push
push
jno
jb
jbe
xor
gs
add
dec
inc
xchg
loop
lea
pop
push
pop
dec
dec
dec
inc
popf
pop
sbb
das
mov
pop
fs
push
gs
shll
mov
push
sub
jbe
adc
pop
lods
jbe
test
mov
jo
dec
arpl
gs
dec
xchg
jae
xor
imul
fisubrl
ja
mov
inc
imul
divb
fimull
add
push
inc
pop
inc
push
inc
dec
inc
pop
fs
testb
scas
insl
inc
inc
push
inc
mov
outsl
aad
gs
push
jne
mov
pop
sub
inc
outsl
stc
pop
pop
pop
push
mov
push
jno
aaa
push
jbe
push
std
lea
loop
pop
js
imul
inc
push
insb
arpl
lods
adc
int3
cld
push
xorb
outsb
jae
popa
jns
xor
jae
movsb
inc
adc
pop
xor
cmp
jo
push
cmp
inc
ss
mulb
push
add
outsb
xor
lods
inc
jg
inc
add
cmp
adc
loop
sbb
imul
pop
jns
jmp
mov
xchg
clc
into
fcoms
sarl
push
je
imul
jbe
gs
pop
inc
popa
lea
push
pop
jo
repz
mov
or
addr16
mov
or
inc
push
pop
pop
mov
or
mov
sub
mov
imul
fnsave
pop
sub
rorl
inc
jbe
dec
push
dec
sbb
divb
sub
jb
je
sbb
dec
cs
imul
es
xor
xchg
or
cmpsb
loope
mov
shll
jne
aam
xchg
jmp
test
sbb
pop
push
xor
data16
mov
dec
push
push
imul
mov
inc
aaa
sbb
gs
das
jb
inc
inc
mov
mov
sbb
xchg
push
cmp
test
jns
xor
pop
pop
or
mov
push
xor
insl
sti
outsb
and
dec
sahf
inc
fs
popa
icebp
or
jno
and
jb
notb
jne
dec
scas
sbb
add
dec
dec
sub
push
fbld
dec
push
dec
inc
bound
rclb
nop
sti
push
inc
insl
dec
dec
fistl
push
cmp
inc
sbb
imul
dec
xor
push
mov
mov
std
arpl
call
imul
jg
push
sbb
out
lods
icebp
fistps
push
inc
jbe
and
mov
ficomps
adc
das
add
add
daa
clc
adc
lret
add
add
pusha
and
add
hlt
add
add
add
push
mov
ds
punpckhbw
aaa
inc
mov
mov
and
mov
fcmovnu
add
adc
cmpsb
fs
push
pop
lods
mov
jmp
enter
mov
add
add
push
mov
fdivl
stc
xchg
mov
sti
xchg
sub
push
jle
add
lcall
packuswb
lods
push
cmp
jge
jecxz
cltd
fnstcw
testl
jg
mov
into
in
ss
add
push
add
add
add
cmpxchg8b
xor
addl
adc
sbb
iret
into
testb
add
sbb
sbb
add
cltd
add
addb
cltd
jnp
mov
test
dec
mov
push
fdivl
addr16
stc
add
sub
add
out
ds
mov
iret
outsl
add
inc
cwtl
lods
dec
lret
add
add
push
add
adc
xor
pop
fstpt
mov
popa
xor
je
scas
inc
mov
or
into
adc
and
fildl
out
lods
in
pop
jnp
jno
mov
and
adc
push
testb
add
or
mov
inc
popl
mov
sub
add
add
pop
xor
stc
test
mov
stos
add
add
loopne
and
leave
out
dec
fadds
mov
cmc
mov
and
repz
pushf
fs
stc
dec
xchg
incl
add
add
add
pop
xchg
cmp
arpl
pop
mov
stc
add
jmp
jno
dec
popf
jp
push
in
sbb
cwtl
adc
or
test
out
add
dec
sbb
bound
imul
subl
daa
imul
sub
jecxz
out
inc
push
jge
add
add
cmp
mov
xor
push
movsb
add
shl
aas
push
movsl
stc
add
sub
mov
xchg
xchg
xchg
cmp
pop
pusha
shlb
add
lret
es
jbe
adc
or
xor
inc
add
test
lea
add
cmp
js
and
test
leave
or
sub
add
fidivs
adc
and
fldl
mov
xor
in
add
out
lods
fisttpll
out
push
adc
sbb
cwtl
xchg
inc
out
jge
adc
cmp
or
adc
ret
pusha
ja
push
cmp
add
mov
fxch
inc
add
lcall
pop
push
lods
daa
jp
and
or
icebp
adc
add
jecxz
mov
xor
add
stos
or
add
xchg
cs
mov
mov
lock
rolb
negb
dec
xchg
jecxz
and
mov
add
mov
xchg
test
enter
arpl
fldpi
lahf
xchg
sbb
inc
rcrb
lret
fbstp
iret
bound
shlb
or
or
movsb
inc
or
xchg
adc
in
sub
cmp
pop
test
lock
fld
mulb
pop
push
xchg
add
bound
xchg
sgdtl
pop
jge
jge
andl
inc
cmp
bound
rolb
and
data16
leave
arpl
xor
je
rorb
cmp
out
xorl
adc
inc
lcall
mov
test
sub
xchg
and
nop
mov
in
mov
invd
push
adc
scas
insl
mov
mov
fists
mov
jae
out
cmp
lahf
sbb
fcomps
fcompl
fildl
mov
testl
pop
sbb
testb
pusha
shrl
jno
mov
inc
rclb
push
xchg
lods
dec
dec
jbe
test
jns
add
fld
repz
lds
sbb
mov
inc
xchg
inc
xor
mov
ss
aam
cli
loopne
mov
pusha
iret
mov
xadd
mov
xor
push
stc
push
imulb
into
push
mov
orl
mov
inc
test
and
cmpsb
xor
fimull
popf
push
mov
lahf
sbb
fisttpll
cmp
stos
dec
mulb
cmp
xor
scas
inc
pop
pop
sbb
dec
lahf
test
jb
pop
roll
or
icebp
xchg
shll
rorl
mov
push
bound
loop
aas
in
clc
sub
imul
dec
mov
mov
mov
popw
jbe,pt
jl
jp
add
addb
ror
test
dec
cmp
push
rolb
push
lcall
sbb
dec
dec
lahf
adc
adcb
rolb
lcall
mov
and
ret
fdivl
lock
xor
leave
add
decl
xor
or
or
ja
dec
mov
cmpsl
iret
fcomp
xor
push
shrb
stos
repz
pop
jmp
addr16
das
repz
mov
lds
seto
inc
adc
pushf
xor
dec
stc
call
adc
std
adc
leave
sbb
cmc
dec
dec
cmc
lds
xchg
data16
jp
push
xlat
inc
adc
into
pop
push
fisttpl
xor
rclb
fisubrl
push
addr16
jnp
fcompl
push
push
push
and
mov
lds
ljmp
out
out
cli
mov
shl
mov
std
test
fmul
outsb
lods
jo
icebp
pop
sbb
movsb
mov
aas
jle
mov
xchg
pop
pusha
addr16
cmpsb
das
test
cli
push
cmc
xorb
aaa
mov
in
sbb
fiadds
mov
in
jns
cs
xchg
fistl
or
add
sub
and
cmpsb
adc
rorl
mov
jmp
andb
pop
scas
fucomi
enter
and
mov
push
nop
jne
into
lcall
sub
sbb
ds
rol
and
push
inc
fldl
pop
lods
fwait
xor
jnp
push
dec
rdpmc
xchg
add
ret
jmp
xchg
adc
inc
sub
fs
push
cmp
daa
pop
push
mov
daa
mov
add
jge
sbb
cwtl
xor
leave
or
push
call
push
ret
leave
pop
inc
push
jbe
addr16
inc
fsubrs
cmp
stos
mov
test
xchg
pop
int
cltd
ljmp
bound
fwait
sti
sub
xchg
fs
xchg
imul
fldenv
mov
cmp
stos
filds
or
dec
insl
nop
or
jne
mov
xchg
jo
imul
pop
fmul
jp
outsl
and
pop
je
inc
and
rcrb
movsb
cwtl
push
cwtl
clc
or
jb
add
lock
neg
je
dec
jb
fadds
mov
sbb
loop
ss
xor
push
pop
add
push
mov
sbb
sbb
sbb
movsb
xchg
push
aam
in
push
pusha
icebp
hlt
jecxz
mov
push
mov
gs
lods
icebp
sarl
test
dec
icebp
push
adc
push
and
lds
mov
inc
cwtl
rorb
dec
adc
sub
push
mov
daa
inc
xchg
loope
pop
aas
inc
mov
xchg
mov
test
repz
mov
aad
in
or
sbb
pop
call
jl
cmp
ret
or
cmp
es
dec
dec
mov
movsb
cmp
inc
rclb
adc
sahf
mov
pop
addr16
dec
sbb
inc
aam
xchg
sub
xchg
pushf
icebp
add
jecxz
incb
push
jns
mov
add
push
adc
or
lock
pop
mov
pop
mov
or
mov
test
sbb
cwtl
aad
and
fwait
popf
cmp
mov
push
jnp
loop
stc
and
mull
shlb
xchg
into
testl
mov
aaa
jae
add
cmp
pop
xchg
pushf
jns
dec
orb
subl
jge
divl
lahf
xchg
jge
fimull
inc
inc
mov
mov
test
pop
dec
push
lcall
push
je
daa
jmp
stos
inc
pop
pop
and
stos
jns
fdivs
inc
imul
jg
push
mov
mov
cmp
cmp
cmp
imul
icebp
cmpb
inc
call
mov
pop
add
lock
shlb
lods
enter
loope
xor
icebp
lds
insl
sar
cwtl
xchg
nop
mov
ret
or
cmp
fs
mov
push
push
cmpsb
adc
pop
stos
mov
fs
inc
arpl
nop
push
insl
inc
pop
add
inc
cmpl
imul
jge
cs
cmpsb
or
xadd
sbb
out
cs
hlt
or
mov
stc
add
mov
xor
pop
inc
push
ljmp
sub
mov
xor
scas
dec
adc
ret
jge
push
adc
cltd
add
addr16
lcall
mov
cmpsl
nop
mov
andb
mov
jo
cmp
sub
andb
inc
dec
lock
xchg
adc
sbb
jae,pt
daa
aas
inc
insb
popf
or
shll
jno
call
lock
or
test
cld
adc
stos
mov
lods
inc
xchg
mov
adc
cwtl
cmp
jns
mov
enter
sub
or
cmp
shrb
jp
rcrl
and
sub
cwtl
jl
inc
xor
rcrb
mov
movsb
inc
popf
data16
inc
lea
fisttps
sub
loop
push
outsl
push
push
jecxz
sbb
jg
adc
cmpsl
adc
insb
xor
out
push
push
and
push
enter
mov
je
scas
fldenv
insb
mov
jl
dec
fstpt
repz
subl
or
fwait
and
mov
cwtl
or
or
push
nop
scas
jns
ja
jmp
out
xchg
lcall
outsb
sub
xor
sbb
mov
test
pop
mov
pop
loopne
loop
or
push
sti
sti
mov
das
mov
jb
lcall
fmull
add
sbb
inc
lods
loopne
cmp
mov
xor
fidivrl
or
xchg
xor
adc
or
xor
push
popa
pop
adc
shlb
imul
xchg
dec
ret
xchg
insb
or
loopne
flds
jnp
test
push
test
in
aas
popa
notb
pop
les
jne
inc
mov
inc
leave
lds
mov
jge
sbb
lods
dec
stos
ret
ja
adc
scas
iret
popa
inc
andb
or
dec
push
xchg
sbb
push
mov
mov
js
pop
daa
jl
aas
pop
lds
add
lods
test
xchg
movsb
cmp
adc
nop
pusha
adc
push
dec
sub
outsl
add
adc
inc
dec
jmp
sub
cld
incl
add
add
repz
ja
adc
inc
stos
arpl
cwtl
xchg
leave
or
insb
mov
cli
xor
pop
sbb
arpl
dec
pop
notb
cmpsb
in
lds
push
xor
and
mov
add
fwait
shlb
lcall
xchg
call
imul
sbb
icebp
addl
sub
adc
push
loopne,pt
in
mov
aam
xchg
jne
nop
xor
je
push
mov
out
mov
dec
roll
outsb
xchg
rcl
scas
pusha
daa
bound
cmp
jbe
cmpsb
out
sbb
cld
ret
mov
pop
lret
cmpsl
xor
lret
insb
or
pushf
xchg
movsb
cmp
sub
mov
addr16
pop
add
xor
push
fst
dec
js
das
xor
js
pop
fwait
mov
add
and
cmpsb
pop
add
jns
mov
faddl
js
xchg
pop
int3
insl
and
inc
sbbl
aaa
add
adc
adc
pop
dec
or
mov
fst
push
cmp
cmp
inc
jno
dec
cmpsl
dec
mov
inc
jge
pop
addr16
out
sbb
xor
lahf
mov
repnz
aam
into
loopne
loopne
add
lret
cmp
inc
scas
addl
mov
in
mov
lods
or
or
push
ljmp
fwait
xor
and
cmovb
loop
cmp
cmp
and
sarb
das
jo
push
cmpsl
xchg
in
pop
cld
mov
scas
movsb
inc
dec
mov
jp
inc
jle
sub
pop
push
movups
test
and
sub
dec
dec
push
sub
inc
test
xchg
mov
mov
add
cmp
push
adc
leave
mov
jae
outsb
jle
fcoml
pop
inc
lret
mov
out
add
add
bound
dec
je
adc
movsl
out
xchg
xor
addr16
inc
mov
inc
fbstp
mov
mov
dec
aaa
popa
sbb
aad
lret
push
and
jno
mov
test
inc
loope
lds
lea
hlt
xor
shlb
dec
bound
mov
cmp
add
push
xor
test
mov
push
mov
pop
repz
mov
cli
rcrb
push
shll
mov
mov
leave
ljmp
push
dec
jp
pop
lods
add
pop
mov
lret
stos
inc
adc
sbb
testl
loope
aam
mov
addl
icebp
sbb
push
jecxz
aas
test
loopne
movsb
dec
cmpsl
xchg
pop
sub
push
popf
arpl
xor
int
mov
mov
cmpl
lret
or
push
jge
testb
mov
cmpsb
mov
push
jmp
sub
fwait
imul
gs
daa
cmp
add
dec
mov
std
cli
sub
movsb
push
mov
addl
mov
and
mov
jl
cld
aas
dec
adc
pusha
bound
and
sbb
dec
sahf
jmp
and
stos
push
add
in
mov
stc
pop
fadd
in
push
cmpsl
cli
iret
call
clc
push
inc
nop
sahf
mov
pushf
pusha
sbb
test
inc
add
nop
sbb
addr16
leave
mov
pushf
mov
and
mov
push
sbb
popf
sbb
push
mov
or
rorb
mov
push
shrl
mov
and
pop
jae
scas
mov
repz
xor
and
shll
fs
mov
push
pop
or
stos
xchg
shl
adc
inc
mov
cwtl
sbb
mov
push
ret
sbbb
subl
aad
jb
xorl
push
stos
jecxz
and
data16
daa
out
aaa
mov
and
cmp
lds
sub
cld
mov
or
mov
popl
leave
loop
movsl
adc
jbe
flds
inc
xchg
mov
call
andl
pushf
inc
adc
add
stos
repz
popf
hlt
mov
addr16
adc
out
dec
push
push
dec
and
xor
inc
adc
stc
outsl
in
adc
cmp
dec
std
mov
call
into
adc
outsb
lods
test
stos
jbe
cmp
add
sbb
mov
andb
adc
popa
aad
sbb
mov
bound
lahf
jge
mov
ss
push
daa
xchg
mov
adc
pop
aam
or
inc
mov
mov
cmp
xlat
or
sbb
popa
movsb
mov
rcl
xchg
addr16
imul
push
mull
dec
sub
push
ffreep
rolb
mov
mov
inc
sbb
jmp
mov
aad
pop
loope
ljmp
pop
fdivl
dec
xor
jo
cmp
outsb
mov
loopne
adc
mov
insb
pop
push
dec
stos
pop
insl
cmp
imul
dec
push
pop
int
fmull
adc
mov
add
mov
jmp
inc
inc
mov
lret
mov
outsl
mov
repz
lret
popf
cmpsb
mov
and
cmc
inc
out
xchg
adc
jp
xchg
sub
lcall
adc
ljmp
test
stc
aas
lods
imul
mov
pushf
mov
inc
mov
adc
xchg
lock
dec
sub
bound
mov
xchg
inc
stos
sub
add
push
jp
cmpsl
cmp
xlat
and
stc
out
sub
stos
dec
idivb
push
inc
lcall
mov
pop
lahf
popa
fldl
popa
aam
push
ljmp
and
loop
jle
mov
push
inc
jnp
faddl
push
ret
xchg
push
rcl
mov
xor
xor
pop
xchg
aas
leave
aas
and
add
add
add
enter
ret
stc
insl
xchg
call
push
pusha
mov
adc
imul
mov
test
mov
add
and
repnz
xchg
fsubl
cmp
shll
jge
mov
inc
fildll
pop
xor
sub
cmp
mov
push
pushf
pop
cwtl
add
add
stc
loopne
mov
cwtl
sub
jge
out
pop
out
gs
repz
xor
aam
repz
pop
hlt
jb
xor
pop
sbb
push
scas
in
mov
jmp
mov
scas
out
adc
xchg
and
jmp
pop
subb
or
cmpsb
and
hlt
lds
push
xlat
mov
and
bound
xor
xchg
inc
dec
and
ret
and
mov
mov
push
fld
add
daa
test
cld
pop
aaa
dec
shll
mov
dec
push
into
js
daa
adc
movsl
xchg
addl
inc
repnz
xchg
insb
add
mov
and
mov
adc
aad
popf
cmc
sub
add
arpl
mov
inc
adc
sbb
fdivrl
jb
sub
movsb
int
pushf
push
adc
in
and
dec
pusha
add
cmpl
mov
push
xchg
inc
je
mov
or
out
fs
cmp
sbb
add
cmp
cmp
adc
hlt
lds
addr16
sub
repnz
mov
std
addl
cmp
das
push
push
adc
push
mov
mov
jb
and
cmp
subl
je
test
push
inc
ljmp
or
adc
mov
in
cmp
insb
cmp
push
add
inc
lds
pop
sbb
adc
sbb
rcrb
cmpsl
sbb
popa
mov
dec
addb
movsb
xchg
fistps
sbb
test
icebp
jne
sbb
lods
jp
clc
popa
adc
cld
dec
cmp
pop
push
fdivr
adc
cmp
pop
xchg
insb
adc
dec
jmp
mov
adc
sbb
loope
cmpsb
xchg
das
push
pop
sbb
in
fnop
outsb
pop
jge
or
jg
cmc
mov
out
pushf
movsl
les
sbb
dec
xchg
pop
movsl
std
and
std
xchg
pusha
jecxz
push
icebp
insl
xchg
daa
mov
inc
pop
or
and
xor
cmp
sbb
inc
dec
or
jns
or
out
ds
dec
xchg
sub
and
adc
mov
xchg
adc
mov
jns
shll
addr16
mov
int3
hlt
xor
jl
nop
cli
outsl
and
sbb
sahf
push
dec
dec
cmpb
adcl
mov
shrb
fs
sbb
test
pop
stc
clc
leave
sti
cmp
lret
aad
push
and
jg
cli
jae
fsts
scas
pop
jo
sub
fnstcw
lret
xchg
sbb
in
dec
xchg
outsb
data16
adc
pushf
jo
add
xlat
into
add
scas
loope
andb
push
xchg
lods
pop
nop
xor
ljmp
pop
test
mov
sub
inc
fcmove
sbb
pop
mov
xor
sbb
shlb
fisttpl
push
or
adc
dec
leave
dec
push
aam
mov
fsts
mov
iret
push
loopne
jo
ror
pop
rolb
mov
xchg
loop
aad
jo
mov
js
add
push
daa
jmp
add
push
xor
mov
and
push
xor
add
testb
js
xor
sub
xchg
or
mov
and
sub
dec
add
push
fildl
xchg
data16
mov
loop
add
ds
jae
fwait
push
xor
mov
cwtl
fs
push
push
xchg
push
je
lods
inc
inc
jbe
and
xor
movsb
xor
or
sub
mov
xchg
inc
cmp
xlat
xchg
addb
push
add
pusha
pop
jno
mov
sahf
mov
clc
ds
push
mov
das
setno
add
add
pop
sahf
lea
imul
mov
sbb
mov
std
adc
xorb
inc
in
and
aas
add
and
dec
aam
xor
sub
pop
cmp
aad
pop
pop
sub
or
into
std
and
outsl
cmpsl
ret
popf
dec
test
cmp
adc
in
rolb
arpl
push
adc
inc
aad
fldenv
mov
mov
xchg
test
jnp
lds
inc
or
cmp
je
stos
and
or
lret
or
inc
xlat
cmp
jmp
les
daa
xor
sub
add
outsl
mov
ret
pushf
fnstsw
jnp
sbb
daa
push
lahf
scas
pop
ret
sarl
mov
and
adcl
add
push
inc
lret
mov
js
or
push
and
cwtl
nop
rorb
pop
fcomps
clc
or
mov
dec
movsb
mov
int3
arpl
and
das
inc
push
push
outsb
in
pop
jo
jmp
mov
leave
or
sbb
dec
decl
push
xchg
repnz
push
int
roll
push
rorb
pop
int3
add
fucom
jbe
aad
popf
shl
js
aas
xchg
dec
idiv
popf
inc
mov
sbb
lret
cmp
call
adc
mov
jne
cmpsl
pop
push
mov
pop
outsb
loop
loopne
je
add
cmpsl
push
inc
pop
sbb
push
fsts
ret
sbb
add
arpl
sbbl
xor
push
pop
fsts
arpl
sub
leave
mov
or
loope
cmp
ret
lock
stos
dec
rclb
sub
jmp
into
or
or
mov
shl
or
pop
and
pop
push
mov
and
imul
xor
or
mov
xchg
mov
mov
cs
pop
jno
lods
push
mov
fsubrl
in
test
jne
push
inc
and
dec
jno
sub
inc
add
lock
or
lds
inc
xchg
or
das
fs
shll
pop
scas
add
fstpt
xor
addr16
pop
pop
push
repnz
cmpsl
pop
mov
push
cwtl
sbb
rcrl
sbb
andl
leave
rcrb
gs
dec
js
cmp
adc
notl
das
push
inc
push
pop
xchg
lret
fdivs
xchg
or
shrd
pusha
push
xor
out
lock
cmpsb
xchg
xchg
imul
jmp
and
lods
outsb
dec
out
xchg
and
pop
mov
and
pop
adc
dec
mov
add
dec
adc
into
in
and
lret
inc
nop
cmp
loope
add
imul
sub
fcmovnbe
push
data16
outsb
jnp
dec
push
stos
call
push
cltd
out
stos
jbe
adc
fwait
lods
jnp
jo
aaa
push
push
inc
inc
jns
loop
leave
sbb
dec
lds
sbb
std
mov
push
lods
xor
lret
xchg
add
std
inc
pop
xchg
push
lds
add
dec
pop
inc
mov
sarl
sub
lods
jnp
mov
jne
fs
fsts
xor
nop
adc
inc
std
mov
bound
inc
insl
ds
mov
jge
dec
push
jns
mov
leave
test
cmp
adc
fdivrl
xor
and
popf
push
out
adcb
and
out
roll
js
xor
or
aaa
loope
pusha
inc
xlat
pop
outsb
add
sahf
sbb
push
jne
pop
jae
out
int3
je
call
addb
aam
cmp
pop
mov
cld
jbe
test
stos
inc
xchg
cmp
add
stos
lods
out
mov
adc
dec
ljmp
xor
movsb
cmp
push
test
xchg
std
data16
cltd
push
dec
pop
rorb
lcall
es
push
inc
mov
xchg
xorl
orl
out
push
pop
jbe
jo
push
test
mov
dec
cs
les
inc
pop
lock
or
mov
pop
jne
mov
leave
ss
push
or
cld
rol
fistps
sarb
ss
je
mov
add
adc
aas
loopne
lahf
cmp
sahf
enter
test
push
call
loope
call
sub
mov
mov
ja
leave
sbb
mov
mov
push
fldenv
add
ret
repnz
pushf
movsb
inc
and
or
and
shr
mov
cmp
dec
cmpsl
call
and
ror
dec
mov
mov
cmpsl
rorl
mov
loope
insb
je
cmp
scas
popf
and
push
lods
adc
ret
in
jg
adc
mov
adcb
sbb
ja
cmp
cmp
xchg
mov
mov
pop
inc
mov
das
daa
pop
xor
cmc
add
mov
adc
xchg
or
fldcw
pushf
loopne
icebp
popa
pushf
pcmpeqb
pusha
pop
lret
fisubs
mov
cmpb
outsl
or
sbb
sbb
jno
std
add
cli
push
je
add
loopne
dec
mov
imul
pop
push
and
add
adc
es
dec
inc
cmp
mov
mov
int
or
lret
test
test
and
inc
pop
dec
sub
adc
push
and
popf
xor
mov
sub
andl
push
insb
add
shrb
pop
push
mov
lods
daa
pop
cmc
mov
insb
adc
fsubrl
and
sub
int3
xchg
cli
fs
xchg
cmc
mov
jl
sbb
mov
std
loop
mov
push
dec
xchg
pushf
cmp
mov
lea
and
lods
bound
and
push
sbb
das
push
dec
icebp
inc
ljmp
mov
inc
out
dec
sub
sub
bound
xchg
sahf
cli
sbb
pop
sub
insl
notl
inc
and
movlhps
inc
mov
mov
inc
inc
xor
mov
pusha
cmpsb
fwait
es
adc
xchg
stc
xor
inc
adc
shlb
mov
cmp
es
int3
dec
mov
popl
lods
xchg
scas
rorb
fadds
data16
inc
popf
push
es
aam
and
bound
lock
pop
xchg
xchg
fwait
adc
and
mov
dec
movsb
xchg
and
out
xor
xor
inc
hlt
sbb
xchg
and
cmp
aad
pop
addr16
hlt
in
cmp
xor
icebp
nop
fmull
scas
pop
push
popa
ss
pop
mov
or
xchg
push
lahf
test
jle
mov
adc
xchg
cwtl
xchg
inc
lcall
mov
dec
jns
push
pop
add
in
xchg
xchg
sub
mov
shrb
jp
jl
loope
ror
add
xor
enter
inc
mov
pop
ret
dec
or
insl
or
insb
push
je
inc
fnstenv
push
dec
push
pavgw
clc
int
outsl
js
shll
dec
pop
mov
ljmp
ljmp
push
and
mov
mov
das
iret
jl
daa
push
fisubs
push
push
and
cmp
jl
cmpsl
cld
jle
in
cmc
fadd
mov
fidivl
add
xor
clc
mov
in
shl
pop
into
dec
mov
dec
xchg
loopne
cld
in
inc
and
aad
xchg
neg
setno
fs
ret
ss
xchg
dec
stos
pop
push
mov
pop
cld
nop
lcall
inc
shr
orl
cld
ret
sti
and
mov
lods
cmp
xorl
xor
popf
rorb
dec
loop
add
cli
adc
mov
roll
inc
pop
inc
lahf
push
adc
loopne
pop
or
gs
or
ds
jae
les
sub
int3
loop
mov
pop
cwtl
stos
aad
cmp
xor
movb
sub
popf
dec
into
fiaddl
adc
pop
push
sbb
mov
hlt
imul
mov
imul
mov
mov
ja
jl
cmpb
pop
lea
or
lahf
push
shll
stos
add
cmp
xchg
data16
pop
mov
popa
cvtdq2ps
xorl
cmp
int3
fdiv
aam
mov
jb
scas
stos
repz
sub
loopne
test
lods
xor
ror
sub
sbb
sbb
or
pop
inc
pop
pinsrw
bound
xor
imul
sub
xor
je
repnz
js
adcb
pop
push
pusha
adc
jg
sbb
les
icebp
dec
jnp
repz
xchg
pusha
add
and
mov
push
add
mov
inc
daa
mov
pop
fs
and
sub
out
ds
fsubp
sbb
into
xchg
jmp
lds
sahf
mov
cmc
dec
pop
inc
call
rclb
enter
aad
aas
pop
push
push
jb
popf
mov
scas
es
scas
or
sbb
sub
dec
nop
mov
push
orb
xchg
lods
das
in
bound
jno
ljmp
and
lods
and
jecxz
mov
and
in
movsb
cld
dec
test
lods
insb
or
push
cmp
test
js
pop
or
cmp
pop
xor
xlat
nop
cmp
cmp
mov
frstpm(287
and
xchg
jno
rcrb
out
call
clc
adc
rorb
fmuls
sub
and
outsb
and
add
lods
into
inc
mov
or
stos
shll
add
and
and
pop
lret
pop
pop
test
and
pop
lcall
xchg
andb
and
mov
cmp
scas
sahf
nop
loop
xor
push
lahf
rolb
push
jg
add
pop
arpl
je
popl
std
test
fadd
or
adc
push
inc
xor
mov
inc
popa
test
add
or
fcoml
fsubp
dec
inc
push
xchg
rclb
adc
mov
icebp
cmpsl
mov
bound
out
and
pop
or
stc
xchg
jns
ss
repnz
adc
and
push
inc
mov
pop
push
rorb
sar
add
mov
xchg
xor
mov
xchg
mov
popf
lret
mov
adc
xor
inc
pop
pop
cmp
and
xchg
cmp
cli
cmpsl
dec
xchg
xchg
orl
xor
jno
test
repz
rcl
int3
dec
mov
cltd
mov
add
nop
arpl
xor
enter
mov
mov
adc
xor
jp
aas
mov
push
fs
push
xorb
in
add
test
jb
inc
outsb
repz
stos
aas
inc
xchg
mov
sbb
pop
cmpsl
sub
jne
inc
movsb
andb
and
and
imul
mov
movsl
mov
lock
xchg
fsubr
or
or
jl
mov
or
mov
leave
add
fs
add
inc
ljmp
lahf
sbb
xchg
rcrl
xchg
push
add
jp
dec
rcrb
sub
adc
mov
mov
roll
and
sbb
out
test
xchg
hlt
pusha
dec
daa
adc
jg
call
and
aam
mov
add
cwtl
jl
mov
shll
roll
or
ret
stc
lods
test
add
rcrl
xorl
xchg
sbb
pop
lods
insb
pop
in
and
enter
int
jmp
or
xchg
or
orl
gs
mov
jp
add
adc
clc
test
mov
mov
or
iret
loopne
sbbb
mov
xor
or
nop
cld
imul
and
add
add
cmp
fcoms
test
add
pop
jbe
and
inc
xor
fs
jae
nop
pop
adcl
push
decl
inc
mov
in
icebp
cwtl
sbb
js
sub
cld
test
jp
xchg
addr16
or
mov
inc
call
jge
fildl
rcll
cmpsb
jmp
in
push
cmpsb
je
dec
fcmovb
sub
add
pop
into
je
or
mov
cmc
jge
add
int3
ja
fcoms
fwait
aas
add
popf
mov
push
and
shll
jo
inc
and
pop
add
mov
xchg
inc
out
jno
mov
fs
and
test
sbb
daa
sbb
mov
fwait
mov
test
adc
push
dec
je
sbb
lcall
xorb
pavgb
dec
je
mov
adc
or
sub
jl
pop
jg
cmp
and
jmp
push
adc
inc
cmpsb
xchg
sub
scas
popa
cmp
cmpsl
jo
adc
das
orb
call
push
jbe
xchg
inc
dec
push
sbb
cld
mov
xor
sub
lods
pusha
data16
lds
jnp
add
pop
pop
pusha
frstor
adc
leave
outsl
cli
rolb
insb
mov
cmp
or
pop
cmpsl
adc
popf
test
fstps
ret
enter
icebp
js
movsb
outsb
add
and
xor
stc
push
sbb
pop
jle
or
ja
sub
mov
cwtl
mov
ud2
jnp
mov
mov
sub
jo
mov
or
in
pusha
hlt
nop
mov
jp
shl
cmc
add
mov
push
and
mov
cmc
mov
inc
in
bsf
fsubrp
dec
xchg
movsl
xor
push
hlt
dec
data16
jne
loop
scas
sbb
stc
cld
out
fidivrs
rcrb
mov
pop
outsb
or
add
cmp
mov
mov
nop
insb
inc
xchg
dec
mov
in
rclb
nopl
sub
js
in
ljmp
jo
inc
fbstp
das
sbb
nop
arpl
cwtl
mov
stos
cli
inc
jbe
pusha
mov
and
or
repnz
loopne
daa
add
pop
adc
add
addr16
or
cmp
leave
sub
loop
push
arpl
in
es
movb
mov
rorb
dec
std
inc
push
nop
jo
popf
dec
sub
mov
xchg
push
mov
adc
nop
and
data16
push
and
adc
cmp
jo
push
xor
inc
test
sub
pop
and
repnz
and
loopne
mov
sub
nop
sahf
mov
pop
insb
hlt
out
push
mov
orl
inc
daa
sahf
nop
loopne
ljmp
lcall
inc
cs
fsub
ret
lods
lcall
pop
inc
adc
or
push
sar
adc
mov
leave
mov
shll
out
inc
jge
subl
fsubs
outsl
jo
stc
and
cmp
pop
pop
mov
lods
fwait
push
mov
callw
mov
nop
cli
cmp
add
cmp
loope
aam
jp
sbb
lock
xor
or
push
sbb
dec
xlat
jne
enter
inc
xor
sbb
aas
push
adc
push
into
add
cli
test
and
in
jae
or
mov
inc
jge
and
stos
mov
dec
mov
cs
inc
pop
lds
add
adc
fcmovu
push
jmp
mov
and
pop
fldl
mov
subl
lahf
mov
inc
aas
jecxz
scas
jmp
jmp
stos
andl
ret
lcall
pop
andb
js
push
jae
pop
xor
sub
mov
imul
push
add
fstps
daa
xorl
out
add
rclb
push
cmpb
add
ret
mov
cld
fstl
adcl
aam
xchg
dec
bound
sub
jo
pop
pop
sub
lret
add
inc
ds
lds
aam
leave
mov
sbb
pop
ror
call
cmp
pop
rcl
popw
stc
cmpb
cs
cmp
and
mov
in
imul
pushf
xor
fs
insl
inc
loopne
jle
add
push
out
or
or
shlb
adc
mov
movsb
out
test
popf
lea
mov
loop
sti
jmp
mov
lcall
decl
mov
jae
jge
les
jl
xchg
push
inc
into
call
add
jnp
out
and
push
repz
xor
xor
sbbb
or
jmp
dec
fwait
push
xor
xchg
mov
xor
out
nop
adc
jo
jg
mov
and
sarb
lock
outsb
jnp
sbb
xchg
add
xchg
arpl
pop
mov
mov
jle
mov
sbbb
push
jns
pop
ja
enter
inc
mov
sub
adcl
hlt
movsb
pop
jmp
nop
rolb
adc
sbb
dec
or
sbb
mov
rdmsr
xchg
aaa
cltd
sub
popf
jge
mov
rorb
jbe
stc
repz
xchg
push
mov
shlb
sarl
in
push
push
xchg
cmc
loop
shll
pop
xchg
sub
xchg
push
repnz
dec
es
push
lds
or
add
sbb
sbb
add
jne
in
pop
mov
dec
xor
cltd
ja
dec
jo
push
and
xor
sbb
cli
popa
xor
sub
mov
roll
sbb
mov
dec
xchg
scas
movl
or
mov
inc
insl
sbb
lods
sbb
sbb
js
adc
fidivrl
mov
insb
inc
mov
add
xor
leave
fs
inc
and
aam
in
and
mov
jl
mov
cmp
ret
cmp
inc
pop
cmp
arpl
jl
fcmovnb
adc
xor
jne
std
insb
mov
dec
xor
add
idivw
sarl
or
mov
or
mov
out
and
cs
lahf
lock
xor
sub
xlat
loopne
sti
jbe
add
daa
enter
int
xor
xor
mov
sub
and
dec
pop
fistl
out
shufps
jmp
hlt
mov
xor
dec
adc
in
mov
add
scas
adc
sbbl
inc
cmpb
cwtl
jne
mov
sahf
subb
xor
inc
xchg
ret
je
pop
test
add
daa
gs
xchg
data16
movsb
xchg
cltd
je
shrb
pop
dec
and
js
stos
pusha
dec
icebp
pusha
hlt
cmp
pop
inc
mov
mull
fadds
dec
jl
pop
shr
xchg
xchg
nop
jns
in
sar
fdivl
inc
cmp
lcall
xor
and
adc
cmp
sbb
pop
roll
test
cmp
xchg
in
daa
pop
les
xor
fmuls
pop
icebp
inc
or
sti
fadd
or
sahf
xchg
in
sub
imul
jae
push
rclb
aas
push
test
pop
in
jge
pop
and
dec
inc
jne
arpl
lahf
popf
hlt
add
cmp
adc
stos
sar
mov
xchg
xorb
inc
jge
test
adc
imul
or
paddsw
lcall
sar
mov
aaa
add
loope
adc
ljmp
andl
xor
fistpl
nop
das
sub
leave
mov
lahf
add
jnp
push
xorb
and
mov
repz
dec
mov
adc
xor
lea
or
shl
cwtl
or
jg
lret
pop
push
sbb
and
mov
inc
xlat
jno
mov
push
ret
mov
sbb
popf
add
mov
lret
push
mov
add
jecxz
mov
mov
fdivs
add
sbb
inc
es
das
jno
mov
pop
pause
add
insb
lods
jae
int
mov
rol
dec
cmp
loopne
add
xor
mov
push
fstp
inc
mov
addb
push
mov
leave
push
sahf
es
mov
or
lret
sbb
or
mov
popa
orl
add
lret
cmp
dec
arpl
bnd
or
or
clc
mov
shll
mov
movsb
es
test
adc
arpl
mov
shl
jb
fcoml
pop
adc
inc
inc
pop
dec
inc
xlat
and
xchg
jne
inc
jbe
cld
std
push
push
mov
or
dec
mov
pusha
or
int
push
into
push
cmp
pop
adc
pusha
pop
lahf
and
ret
sub
push
jne
out
adc
mov
add
rcl
and
sub
push
push
stc
fldenv
leave
and
pushf
adc
or
gs
push
add
sub
cmp
imul
popa
cmpsl
mov
shrb
movsl
aas
xchg
movsb
inc
mov
lods
push
push
loop
addr16
out
inc
mov
lahf
dec
pop
out
stc
nop
out
in
mov
mov
test
xor
xchg
cmp
stos
mov
and
cltd
rol
or
sbb
inc
out
andl
jecxz
test
sub
or
cld
pop
test
xrelease
or
testl
loopne
leave
or
mov
nop
testl
sti
or
inc
push
mov
mov
int
movsb
xchg
call
addr16
in
insl
or
jecxz
cmp
sub
movsb
inc
rol
push
push
nop
call
iret
push
cmpsb
pop
inc
je
lret
sti
stc
aaa
and
sbb
cmpsb
xchg
inc
mov
pop
xor
arpl
and
adc
mov
ss
mov
stc
je
adc
or
lret
or
adc
and
fldenv
cmp
or
adc
adc
std
js
dec
xchg
repz
jle
ljmp
arpl
xchg
aas
push
inc
or
cmpsb
cs
mov
pop
sbb
pop
enter
xor
xchg
pop
insb
dec
jno
xor
inc
or
xor
push
or
mov
jl
mov
lcall
xor
sub
ja
out
inc
jg
pop
data16
lret
inc
push
test
and
jnp
movsb
xchg
mov
loopne
inc
dec
and
push
shr
shlb
fiadds
pop
movzbl
cmpsb
xor
push
enter
add
ret
into
in
add
ret
popa
out
and
xor
popa
mov
xor
mov
sub
jmp
adc
mov
insl
inc
mov
cmc
adc
testl
pop
scas
movsb
pop
into
outsl
repz
movsb
xchg
push
rcrb
gs
les
cld
nop
mov
adc
or
gs
aas
insb
push
mulb
movsb
scas
mov
fadds
push
cs
std
fs
daa
push
mov
rol
add
js
xlat
jns
jbe
jle
or
aad
movsb
push
imul
add
mov
andl
inc
mov
xor
lds
into
add
add
shll
icebp
hlt
or
rep
sbb
push
ljmp
and
ret
fisttpl
les
pop
aaa
xlat
cmpsb
jo
orb
aam
rcrb
mov
outsb
cmpsl
push
mov
sti
sahf
or
jl
dec
gs
pop
mov
or
add
sbb
subb
shll
fdiv
and
sub
adc
popa
rol
xorb
aam
shrl
mov
and
push
into
daa
dec
dec
je
rolb
popa
hlt
push
ljmp
nop
cmovle
popf
mov
js
push
push
xchg
pop
shll
or
sti
rorl
das
xchg
rol
and
pop
mov
subl
sahf
clc
jle
pop
cli
mov
and
mov
mov
xor
sbbb
daa
out
and
and
pushf
jp
js
push
xchg
or
and
int3
pusha
cmp
into
adc
loopne
sti
lock
leave
xor
push
scas
cwtl
push
sbb
mov
mov
sub
jo
pop
mov
cmp
and
push
push
dec
cltd
out
pop
nop
sbbb
cwtl
imul
loop
sbb
pop
and
rcrb
sahf
je
adc
add
push
xor
aas
add
mov
push
test
push
je
lods
mov
adc
test
push
imul
mov
scas
jmp
out
mov
call
cmp
das
add
cmpsb
ret
dec
lcall
xor
cmp
push
js
es
and
in
stc
mov
push
cmp
dec
add
adc
dec
push
adc
adcb
push
fs
adc
push
aaa
inc
and
jle
stos
sarb
push
push
fadds
mov
mov
out
sbb
inc
test
sbb
xchg
mov
lret
or
hlt
test
loop
cltd
adc
inc
fs
push
pop
inc
adc
int3
dec
bound
mov
iret
pop
es
insl
out
push
add
and
rolb
scas
jge
das
sbb
out
sub
stos
pop
loopne
jno
push
mov
dec
pop
add
and
insb
and
int3
mov
adc
xchg
push
ss
das
add
movsb
add
aas
sbb
dec
adc
ret
add
mov
mov
sub
movsb
jmp
sti
jecxz
jp
xchg
or
add
add
ja
inc
js
add
xchg
sbb
scas
xlat
jle
xchg
fstpl
sub
sub
pusha
test
mov
imul
iret
cltd
scas
jne
popa
push
cmpsl
cld
les
mov
push
stc
mov
xchg
jnp
or
sbb
ret
popf
jmp
xchg
sbb
shl
cmp
loop
sbbb
mov
inc
mov
mov
adc
fdivl
push
in
fistpl
and
xor
std
push
xchg
ficompl
fldl
into
or
adc
fsubs
adc
stc
and
dec
lods
pop
jecxz
mov
aad
sbb
adc
or
daa
and
pop
push
stc
xchg
jo
add
rorl
je
or
lock
repz
pop
inc
leave
addr16
jo
or
int3
dec
sarl
inc
nopl
cwtl
and
push
dec
cmp
mov
inc
or
sbb
and
or
pop
call
outsb
jbe
out
or
aas
fcompl
cmpsl
loopne
daa
hlt
dec
and
lods
mov
xchg
push
inc
jo
test
ljmp
inc
movsb
jo
popa
test
xchg
mov
push
xlat
nop
popf
inc
jmp
xchg
call
or
pop
cwtl
std
jle
je
dec
test
in
je
jecxz
leave
and
call
cltd
mov
dec
cmp
mov
pusha
movl
ret
sahf
push
inc
lret
xor
sub
pop
mov
cmp
sub
sahf
ret
push
je
pushf
adc
loopne
mov
xlat
xchg
sbbb
movsl
aad
or
jo
push
aad
add
stc
xchg
ret
sub
mov
cmc
repz
rorl
repnz
mov
in
sub
jne
inc
xor
jns
push
dec
imul
and
popa
push
inc
push
call
ss
mov
cmp
xchg
xchg
je
pop
adc
jl
sbb
sub
enter
and
xchg
add
stc
daa
repz
push
fst
jl
cmp
sbbl
sbb
cmc
mov
or
add
mov
mov
scas
dec
pop
ja
mul
pop
xor
and
mov
adc
or
mov
inc
xchg
push
add
cmp
jl
in
jl
add
add
outsb
mov
and
js
cmp
add
xor
cmpsl
lahf
adcb
add
ljmp
lret
loopne
jno
adc
jae
repnz
cmc
and
leave
pop
push
repnz
add
jmp
jg
and
push
fnsave
mov
cmp
inc
xchg
push
sahf
lods
dec
inc
fs
xor
adc
daa
enter
movsb
push
sti
inc
inc
sub
sub
ds
int
mov
cld
mov
mov
mov
movsb
mov
push
rorb
test
call
inc
subb
pop
and
ret
faddl
inc
push
and
sahf
sbbl
dec
pusha
int
cwtl
std
cmp
xchg
xor
pop
inc
fsubs
and
loope
outsb
xchg
daa
ss
movsb
ficomps
add
data16
inc
jb
lods
enter
pop
mov
stos
ret
test
popa
adc
xor
je
xchg
in
test
push
adc
out
dec
adc
das
mov
mov
repz
dec
jle
mov
and
shll
mov
xor
nop
dec
rclb
dec
lods
dec
sbb
popf
mov
test
mov
mov
push
xchg
nop
xchg
mov
pop
jl
sub
and
sub
test
push
lahf
cmpl
stos
or
popa
call
daa
xchg
push
daa
in
pop
mov
inc
sti
adc
nop
xor
push
movsb
daa
idivl
rcrb
scas
notb
xor
push
ljmp
mov
loop
xor
sbb
add
sahf
push
adc
cld
dec
adc
jecxz
loop
sbb
into
rclb
cmp
jg
add
and
rcll
mulb
pushf
shrl
jg
es
or
jp
out
cwtl
pop
mov
aam
iret
or
insb
mov
push
test
stos
jmp
pop
setno
or
adc
cmpsb
test
adc
mov
sbb
mov
loope
adc
inc
stos
adc
sti
pop
stc
call
push
inc
or
loopne
inc
xlat
sub
or
jecxz
dec
xor
or
xor
in
dec
cmc
jmp
add
stos
push
scas
lret
test
and
rorl
xor
inc
addr16
cwtl
mov
out
leave
lock
or
pop
xor
es
sub
cmp
ds
movsl
push
in
test
push
sbb
out
mov
dec
pop
push
mov
jmp
shufps
pop
js
and
insb
fldt
inc
jp
je
into
pop
push
sahf
cmp
leave
sub
clc
and
jb
jo
repz
lret
pop
inc
cwtl
sub
aas
mov
daa
mov
hlt
sti
clc
orl
ds
scas
in
pop
scas
in
rol
dec
inc
mov
cmpsb
xchg
bound
and
jle
ss
or
ficompl
and
test
mov
inc
add
mov
data16
pop
addb
inc
mov
lahf
sarb
pop
jp
sbb
and
ror
into
loopne
and
cmp
shr
and
lcall
pusha
dec
xor
cmpsb
lret
and
jne
pop
lods
enter
rorl
clc
push
or
bound
test
repnz
sub
testb
mov
add
xchg
addr16
mov
mov
dec
or
dec
inc
sbb
stos
jl
dec
mov
and
cmp
push
repnz
inc
orb
pop
ss
adcl
sbb
sbb
hlt
xchg
mov
mov
in
js
pop
mov
sbbb
enter
push
out
das
in
cmpl
push
xchg
push
lret
loopne
mov
mov
adc
jmp
mov
fs
push
adc
mov
inc
out
mov
pusha
mov
sub
add
or
orl
ljmp
add
cmp
ss
mov
inc
inc
inc
mov
popf
pop
cmp
inc
pusha
sbbb
pushf
jo
int3
jge
xchg
jmp
les
out
adcb
es
sub
mov
fldln2
cmp
mov
hlt
insb
stos
and
and
xor
lea
arpl
dec
aaa
fldcw
push
xchg
push
rcrb
ficompl
add
adc
mov
jne
and
shl
les
adc
rcrl
and
or
sahf
mov
je
add
pushf
cltd
xchg
addb
mov
adc
push
xchg
ljmp
mov
add
jl
jmp
add
inc
in
push
sub
pop
mov
mov
subb
scas
icebp
cmc
or
dec
js
jbe
fistps
leave
mov
stos
je
and
scas
xlat
js
xor
push
and
repnz
mov
and
push
cmpsb
push
pop
adc
cmp
jns
lods
cmp
out
scas
and
int3
push
mov
add
ficompl
or
ljmp
iret
dec
addr16
inc
lea
fistps
xor
cld
mov
and
stos
leave
nop
ljmp
or
push
xchg
fiaddl
inc
add
xchg
jo
enter
sub
pop
dec
imull
jo
inc
cmp
mov
mov
repz
inc
sub
mov
mov
inc
push
in
and
xchg
icebp
loopne
mov
sbb
popf
mov
daa
sub
mov
sub
xor
rol
inc
ds
das
xchg
fidivl
bts
sbb
mov
or
mov
cs
js
js
aam
mov
arpl
jg
cmpsb
lods
ret
dec
icebp
in
pop
std
xchg
add
mov
test
xor
mov
inc
sbb
add
popf
sbb
fs
lea
stc
xchg
js
xor
dec
sub
xchg
or
pop
push
fs
rcll
hlt
pop
push
sub
add
ror
test
pop
sub
adc
bound
xchg
cmpsl
sbb
lahf
push
enter
dec
out
add
or
adc
loop
mov
add
shlb
mov
ss
aad
push
jmp
sub
dec
fdivs
int
ficoms
stos
or
sbb
mov
add
jg
mov
fcomip
int3
and
mov
xlat
enter
fiadds
pop
jns
and
adcl
adc
mov
repnz
rorl
push
pop
inc
xor
pop
mov
xor
mov
and
pop
mov
and
das
jmp
adc
js
jbe
xor
mov
inc
das
and
and
cld
mov
hlt
xchg
test
push
dec
and
mov
aad
fwait
xchg
xchg
mov
adc
or
stc
inc
mov
mov
and
repz
or
or
mov
movsb
les
lret
lds
push
imulb
or
ja
in
mov
clc
pop
sub
jmp
stos
push
je
rclb
dec
stos
leave
stos
fldt
and
xor
mov
test
inc
jne
push
addl
jmp
pusha
popf
outsb
fldl2e
adc
jmp
sahf
jb
add
sbb
test
fcmovnbe
in
mov
js
pop
imul
cld
or
and
xor
xchg
invd
jne
test
push
push
rcl
mov
insb
mov
push
cmp
shlb
push
xchg
pop
outsb
mov
adc
in
in
sarl
mov
lock
push
or
ljmp
mov
sub
mov
push
movaps
pop
or
cwtl
dec
sbb
lods
js
xor
into
mov
mov
cmp
aad
es
nop
fwait
mov
aam
ja
or
adc
lods
andb
into
adc
add
mov
dec
mov
or
adc
mov
or
add
push
inc
lret
cmp
test
push
jl
mov
pop
sbb
and
mov
leave
lret
add
fldenv
cmpl
inc
or
inc
or
add
and
pop
add
mov
push
mov
jb
or
fsts
sbb
xchg
mov
imul
pop
or
lock
jo
pusha
insl
call
dec
inc
jp
adc
mov
mov
add
rorl
andl
pop
adc
push
inc
mov
dec
push
ret
inc
push
mov
js
shl
adc
aas
sti
arpl
mov
jo
xor
aaa
pop
nop
add
mov
adc
leave
sub
xchg
mov
leave
inc
stos
ret
xor
test
cmp
out
popaw
add
pop
test
imul
fs
inc
jno
lahf
loopne
addr16
loope
or
sub
int
dec
loopne
xchg
enter
mov
addr16
and
jge
xchg
add
sub
push
lods
add
push
inc
iret
test
leave
hlt
add
push
dec
cld
push
dec
enter
nop
leave
mov
sbb
ljmp
mov
and
lcall
cmp
and
pop
mov
test
nop
inc
mov
stc
and
sahf
jne
cmc
inc
sbb
dec
push
or
ret
gs
pop
leave
mov
inc
fildll
lock
aaa
aas
xchg
add
loope
push
out
push
notl
test
pop
sbb
dec
icebp
jnp
leave
jl
icebp
pushf
inc
lods
or
cmpsl
jp
sbb
mov
or
rolb
lods
cmp
lcall
push
cld
into
sti
adc
stc
stos
scas
jmp
add
add
cmp
lahf
mov
or
mov
in
dec
mov
loop
jmp
clts
stc
pop
jecxz
shlw
cwtl
scas
push
mov
pop
sub
rol
xchg
dec
mov
sbb
xchg
xchg
mov
adc
push
sbb
scas
and
add
nop
dec
mov
loope
and
sbb
adc
lds
rclb
lea
cmpsb
cmp
xchg
mov
cmp
cmp
cwtl
inc
inc
test
dec
arpl
popa
arpl
pop
andb
pop
cmp
pop
xor
adc
adc
mov
ds
jo
fcmove
or
repnz
mov
xor
inc
loopne
inc
push
or
mov
cld
xchg
sub
scas
lret
inc
ds
inc
mov
jae
lods
dec
pop
add
repnz
test
arpl
lods
repz
mov
mov
icebp
and
sub
daa
dec
mov
and
leave
aaa
adc
js
dec
cmp
flds
mov
pop
mov
lcall
adc
and
mov
xor
and
out
push
into
enter
and
inc
out
xchg
sub
xchg
lcall
and
add
jp
push
stc
orl
add
je
and
movsl
sub
lds
and
add
test
aaa
repz
test
rcll
mov
test
enter
daa
testb
mov
mov
jge
inc
add
and
pop
pop
pop
in
mov
adc
int
das
add
xor
push
pop
repnz
push
cwtl
jne
inc
inc
mov
hlt
xor
pusha
cmp
movsl
or
je
stos
pushf
popa
add
push
xor
cwtl
fisttps
addr16
aas
rcrl
stos
fsubs
sbb
xchg
stc
mov
pushf
aam
popa
lds
lock
pusha
and
dec
mov
cwtl
shlb
cli
or
or
sub
aad
popf
push
mov
mulb
add
pop
mov
push
or
icebp
xor
comiss
mov
and
test
add
push
and
pop
cmp
js
leave
cld
mov
sbb
jl
jecxz
adc
out
test
push
mov
inc
cmpsb
add
add
adc
push
or
icebp
add
ja
and
add
or
lock
push
inc
add
arpl
or
mov
push
jnp
lret
cmp
adc
mov
jb
push
pusha
push
jae
shrb
in
sub
mov
aad
iret
pop
dec
rorb
adc
cld
mov
mov
sub
xchg
sti
add
adc
jmp
js
mov
mov
bound
into
lock
sub
add
mov
inc
sub
or
test
lds
xor
out
mov
sbb
add
enter
inc
bound
xchg
clc
andb
mov
sbb
movsb
decb
or
sarl
and
push
and
push
jne
daa
jmp
cmpl
push
add
int
lret
loope
xchg
add
fwait
adc
aam
xor
ret
out
test
xor
jmp
fcomps
ftst
adc
ds
lods
out
into
lods
sub
outsb
add
add
test
sub
sti
dec
add
xchg
out
test
jge
and
ja
and
jl
sbb
mov
push
sub
mov
cmp
outsl
stc
mov
inc
adc
nop
hlt
or
jmp
repz
mov
xchg
pop
cmpsb
sub
inc
cmpsl
mov
inc
adc
ret
pusha
popf
pop
inc
mov
outsb
test
call
shl
xchg
addb
aam
pop
enter
sbbl
adc
and
out
and
xor
jmp
ds
inc
cltd
leave
adc
in
stc
and
dec
push
fs
js
cmp
adc
rorl
xor
leave
fsubrs
xchg
orl
lcall
cs
add
lea
test
in
push
es
cli
push
add
das
mov
and
xor
addr16
scas
shl
dec
push
lods
mov
dec
movsb
jae
mov
mov
inc
nop
and
xadd
je
push
sahf
popa
sbb
mov
cmp
cmpsb
dec
inc
cli
aad
data16
adc
sbb
ret
mov
pop
add
fcoml
adc
std
pop
fldt
mov
mov
and
mov
cmp
or
mov
dec
and
test
push
mov
inc
repnz
pop
lahf
mov
aad
loopne
mov
cmpsl
aas
roll
push
cmc
mov
push
jnp
fistpll
shrl
ret
jae
fwait
cmp
sbb
ljmp
lods
jno
sub
mov
cmp
or
das
mov
fnsave
scas
and
enter
push
push
stos
daa
jne
mov
arpl
ljmp
icebp
sbb
cmpl
inc
cmpsl
aas
sub
dec
rcrl
cmpsb
and
pop
xor
jbe
bound
mov
dec
sti
les
adc
push
jecxz
mov
lcall
push
sub
or
sbb
and
movsl
mov
and
dec
rclb
lock
jp
test
arpl
stos
dec
ds
movsb
dec
test
icebp
js
mov
adc
add
das
inc
loope
call
mov
leave
lock
fisttpll
stc
inc
aam
sub
or
icebp
add
pop
sub
repnz
mov
and
sub
push
in
pop
dec
jl
call
jge
adc
jb
mov
fsubrs
rorl
lock
test
push
mov
insb
lret
mov
aas
mov
insb
repnz
mov
lock
mov
in
stc
js
sub
insl
adc
lret
mov
cmp
scas
addl
sbb
or
mov
in
js
push
sub
dec
jl
or
or
or
aas
or
fwait
test
loop
push
mov
cmp
or
sti
and
sub
jne
mov
aaa
cli
leave
fs
sub
test
insb
jns
ljmp
scas
pushf
add
xor
add
pop
repnz
jl
sub
or
call
inc
and
dec
icebp
push
add
sbb
nop
aam
fsubr
xor
testl
or
sbb
pop
ss
sbb
pop
or
push
mov
lret
jp
xor
push
lods
pusha
jl
in
int3
mov
and
or
ss
or
cmpsb
lcall
jmp
and
push
jecxz
adc
fcoms
inc
pop
xchg
mov
mov
insb
cmp
stos
inc
mov
scas
fisubrs
xor
add
test
add
sti
pushf
loopne
icebp
mov
push
divl
mov
rolb
cmp
xchg
push
aam
adc
adc
xchg
repz
andl
in
or
cmp
xchg
cli
or
mov
sub
add
js
or
rol
adc
and
es
and
xchg
add
leave
cmpsl
sub
jmp
lds
out
xor
repz
ja
xchg
and
bound
sti
cmc
popfw
push
pusha
dec
pop
scas
rolb
inc
daa
push
repz
subl
inc
addr16
lret
push
inc
mov
lds
hlt
dec
in
dec
sbb
push
and
pushf
insb
or
ficoml
jp
clc
test
or
sub
js
call
cmp
mov
inc
add
cmp
shlb
iret
push
mov
or
sbb
movsb
inc
mov
add
outsb
push
xchg
ss
xor
cmp
push
loopne
cmp
das
dec
inc
pusha
roll
dec
pop
andl
ret
or
push
xchg
adc
cmp
data16
jp
out
mov
cmp
jo
roll
test
dec
insl
inc
imul
les
sahf
xor
jne
jno
lahf
or
cmp
add
imul
xor
add
mov
and
daa
sbbl
add
mov
mov
inc
and
mov
xchg
add
add
cmp
pop
std
mov
lret
mov
push
adc
lret
mov
imul
jo
aaa
fiadds
jmp
cwtl
nop
pop
dec
dec
mov
cmpsl
loope
push
add
pop
loop
ja
sbb
xor
adc
loop
push
pop
rol
xchg
inc
adc
aam
push
daa
jl
adc
ficoms
or
add
add
es
int3
adc
inc
iret
sub
sbb
cmp
jbe
test
add
xor
xor
jg
mov
paddusw
ret
das
leave
lock
dec
xor
and
das
jns
daa
pop
pop
insb
cltd
repz
dec
dec
jle
dec
inc
adc
xor
pop
in
mov
cmc
fisttpl
dec
test
add
lock
ret
imul
lret
sbb
aad
fwait
sub
imul
adc
add
vpaddw
orl
xchg
or
add
sub
push
int
and
push
inc
cmovae
inc
add
sub
pop
lods
daa
xchg
les
mov
xchg
fcmovnb
and
lret
mov
rcrb
or
adc
mov
xlat
sub
jnp
mov
in
jg
mov
fdivr
test
outsl
subl
icebp
inc
fldenv
fimull
imul
xor
pop
add
das
pop
add
and
or
movsb
xor
aad
xor
xchg
pop
or
pop
aam
mov
lahf
fsubs
dec
daa
in
inc
ret
xor
into
xor
lret
ficomps
push
ds
xchg
nop
xor
add
icebp
mov
dec
enter
test
dec
jmp
lods
rorb
xor
mov
add
xchg
cmp
popa
or
add
dec
je
or
dec
dec
data16
fsub
add
dec
outsb
aam
orl
arpl
jns
jmp
jns
pop
scas
popa
jmp
cmp
pop
sbb
inc
cmpsl
mov
jae
push
mov
push
sbb
xor
mov
cmp
out
push
and
xchg
test
adc
cmp
pop
imul
adc
cmovs
xor
add
scas
popw
or
inc
pop
iret
or
cs
pop
outsl
aam
dec
cli
and
outsl
scas
or
adc
inc
pop
ret
enter
sub
push
inc
xor
bound
sub
leave
pop
imul
enter
into
das
push
daa
bound
in
andl
push
jnp
arpl
or
js
out
arpl
mov
cmp
pop
add
lods
lea
add
mov
jg
mov
pop
jecxz
add
filds
hlt
sub
lea
dec
stos
sbb
mov
leave
xlat
push
xchg
sub
mov
mov
pop
or
mov
popa
jecxz
popa
ss
and
mov
arpl
adc
push
dec
mov
nop
sbbb
int3
in
adc
sbb
sbb
repz
test
dec
adc
adc
pop
enter
inc
pusha
sub
adc
ljmp
or
pusha
lret
push
test
es
jbe
pop
les
cltd
ja
jo
aas
mov
test
lds
jecxz
push
insb
pop
add
stc
test
push
popf
or
ret
movl
xchg
and
out
mov
mov
mov
inc
test
and
adc
sbb
and
shlb
insl
idivl
add
mov
lock
and
or
mov
lea
into
test
push
pop
mov
push
mov
cmp
jp
nop
jb
add
out
and
adc
jnp
fwait
scas
aas
mov
or
or
mov
shlb
gs
dec
jp
ret
sahf
push
or
jns
add
dec
add
and
jo
pop
dec
lea
or
cmp
out
jle
mov
push
pop
iret
dec
inc
nop
mov
loope
rolb
add
xor
jmp
sbb
aad
adc
cli
or
mov
pop
outsb
push
adc
or
pop
fldl
into
push
ss
les
and
into
adc
pop
leave
mov
jp
sbb
mov
sub
and
in
mov
cmc
and
cltd
popl
cwtl
fcmovnb
push
push
cmp
inc
out
cmp
adc
mov
shll
lcall
aam
bswap
ss
xchg
adc
repnz
mov
adc
jge
sub
adc
scas
mov
fs
sbb
push
js
inc
xchg
mov
or
lods
dec
cwtl
adc
mov
and
and
sub
das
mov
sahf
jecxz
ljmp
loope
lock
outsb
sub
cmp
addr16
inc
ss
dec
out
ret
imul
call
and
lock
xor
and
pop
inc
sub
inc
add
lahf
mov
stos
add
mov
sbb
sahf
mov
in
adc
adc
xchg
mov
or
sbb
inc
cmp
repnz
mov
mov
imull
aam
fistl
adc
dec
push
lret
lds
shrb
jne
enter
and
jnp
lock
orl
mov
aas
mov
mov
xor
js
sbb
inc
pop
popl
psrlq
sbb
xchg
out
jns
pop
inc
int3
sub
nopl
popf
pop
mov
aaa
adc
jecxz
add
sbb
push
push
or
cli
inc
jle
or
xchg
sub
mov
mov
cmp
xor
or
xchg
push
stc
lahf
inc
fidivs
popa
or
je
xor
cs
in
andb
xor
lock
iret
aad
mov
jns
into
add
ds
or
cmp
push
mov
xchg
xchg
xor
add
push
insl
lods
mov
movsb
popf
ret
jno
xor
in
mov
andl
pusha
aad
dec
add
xchg
orl
sub
push
popa
ret
sub
sub
jns
dec
mov
jne
pop
mov
jnp
icebp
gs
ds
and
sbb
rorl
mov
stos
adc
ret
jmp
mov
push
jl
xor
jecxz
hlt
mov
mov
inc
adc
adc
loopne
pop
bt
push
adc
or
jns
fmuls
dec
sub
aad
jmp
movsb
pop
push
mov
sarl
push
lcall
sub
xchg
inc
xlat
aam
fldt
sbb
adc
and
or
inc
mov
ds
adc
or
push
test
popf
icebp
movsb
sbb
mov
shl
and
loopne
inc
lret
addb
fcoml
and
out
xchg
shrl
dec
mov
daa
mov
mov
loope
or
gs
add
andl
xor
sbb
outsl
pop
imul
into
inc
push
jne
shl
inc
mov
jbe
call
aas
mov
nop
add
mov
add
loop
jnp
sub
sub
inc
sahf
nop
xchg
mov
lods
aas
and
mov
jmp
out
lock
rorl
scas
inc
fisttps
sbb
push
bswap
add
mov
or
pop
mov
pop
lahf
in
and
push
aam
add
or
inc
mov
mov
pop
cwtl
cmc
xor
push
jp
sbb
shlb
int3
imul
and
and
aas
xchg
and
lock
dec
and
sub
cmpsl
or
or
mov
into
stc
jp
jmp
xor
js
je
test
cld
xor
push
or
xor
lret
cmp
mov
jge
xchg
push
add
and
scas
adc
pop
pop
jl
xchg
inc
mov
push
push
jo
arpl
dec
push
call
enter
jle
adc
sbb
in
inc
rclb
add
xor
adc
cmp
jbe
jnp
aad
and
orl
pop
leave
insl
call
sub
in
pop
test
or
jbe
sbb
inc
mov
xor
mov
test
rcrl
xor
jle
insl
sahf
mov
pushf
jne
hlt
adc
xor
pusha
sbb
ret
mov
ljmp
inc
std
cmpb
sbb
inc
adc
jp
mov
mov
loope
fimuls
mov
stc
xchg
arpl
test
into
mov
or
lcall
imul
sbb
in
inc
ja
mov
in
add
insb
jmp
fs
dec
inc
insl
mov
enter
lcall
xor
movsb
xchg
fmuls
mov
int3
fs
aad
push
sarl
dec
push
mov
cmp
out
and
sub
fdivs
push
dec
mov
dec
in
xor
andl
loopne
fdiv
inc
cmp
mov
add
rolb
shl
add
mov
or
into
pop
sarb
sbb
xchg
addr16
out
bound
or
shlb
mov
jecxz
jecxz
jge
xor
dec
in
paddsb
jmp
and
pop
loope
lret
push
or
je
and
xor
mov
andl
aam
lds
pop
lock
ljmp
jns
add
fwait
loop
and
hlt
sbb
add
lods
sbb
dec
jmp
pop
add
and
pop
cmp
cli
lret
xor
adc
pop
ret
push
jmp
push
push
push
dec
cwtl
jne
cmp
cmp
push
add
mov
stc
add
inc
jl
xchg
push
shlb
aas
jecxz
adc
jns
cmpsl
mov
add
adc
jp
sbb
pop
cltd
pop
push
out
test
mov
cmpsb
movsb
cmp
dec
sahf
movsl
jne
and
das
adc
adcb
gs
push
out
sbb
sbb
movsb
mov
sub
lods
dec
repz
lcall
inc
loope
data16
jmp
insb
lods
add
jo
shrl
push
push
sub
inc
mov
and
and
xchg
sbb
test
push
cld
dec
or
pushf
cmc
jmp
sbb
es
rcrl
shll
xor
bound
cmp
sub
stos
cld
loopne
mov
push
out
dec
sbb
cltd
out
sub
imul
mov
lahf
int3
adc
inc
mov
cmp
pusha
nop
lcall
xchg
rcl
movsb
sub
or
push
jmp
movsb
es
or
hlt
sahf
ret
dec
arpl
fsubrl
sbb
mov
xchg
and
mov
xlat
sub
pushf
lock
pop
and
sub
xor
mov
rol
xchg
dec
stos
cmc
nop
movsb
loop
lret
in
mov
mov
test
sub
sti
mov
jp
xchg
pop
and
dec
out
testl
pop
sti
out
and
and
mov
packssdw
rcrl
sub
pop
pusha
cmp
pop
movsl
in
inc
cmpsb
pushf
add
xchg
test
and
sub
test
mov
jge
and
lods
test
adc
sub
lea
pop
movsl
jo
daa
in
leave
pop
idivl
lods
nop
fstpt
and
mov
and
cmc
test
mov
cmp
fwait
mov
shl
pop
or
adc
add
aam
inc
stos
or
mov
adcb
push
mov
jle
xor
addr16
xor
daa
or
mov
cmp
pop
xor
adc
sbb
cld
add
cmp
repnz
sar
xor
xchg
fmuls
cltd
pop
jo
rclb
xor
inc
fwait
or
mov
icebp
call
pop
pop
jno
jp
enter
popa
ret
popa
les
out
shrl
imul
insb
mov
out
int
daa
in
push
fmuls
sbb
bound
pop
jmp
add
jno
jno
fdivrs
sar
dec
mov
jb
jl
aad
es
leave
inc
or
daa
test
ja
je
jge
add
popf
mov
sub
repnz
cmpsb
scas
mov
add
mov
test
pop
cmpsb
daa
and
cmp
aas
jns
sbb
aam
mov
popf
dec
xchg
mov
sbb
xchg
add
inc
loop
mov
pop
xchg
mov
fwait
adc
ja
cmp
cmpb
mov
pop
cs
mov
push
rcr
js
sbb
add
sub
cmp
sahf
add
cmp
fistpl
es
shll
loopne
xchg
rcrl
sbb
pop
mov
movsb
in
aam
sbb
or
mov
jmp
inc
mov
enter
shll
sub
inc
sub
xchg
movsl
jno
jle
xor
add
jns
mov
shlb
dec
popf
mov
dec
add
or
lcall
adc
sbb
mov
dec
jo
or
addr16
lret
sub
adc
cmpsb
dec
mov
in
add
lret
sbb
jecxz
cli
adc
jns
or
jl
jne
pop
adc
insl
add
cmp
rolb
sti
popf
or
loopne
xor
or
js
adc
cmp
stc
fisttpl
sbb
negb
mov
push
sbbl
shrb
or
inc
repz
or
or
imul
dec
inc
rcrl
imul
add
jle
push
pop
out
and
mov
rorl
add
add
pop
cltd
scas
int
xor
mov
loopne
ds
enter
bound
pushf
cmp
std
sub
or
ror
shll
adc
gs
test
and
mov
push
loopne
cmpb
push
sub
js
sbb
nop
mov
rcll
scas
push
jb
mov
addl
xchg
mov
mov
xchg
adcb
lods
adcb
shr
dec
sub
push
xor
jae
add
or
sbb
sahf
addr16
clc
sahf
ljmp
pop
pushaw
xorl
inc
daa
out
mov
xchg
sub
gs
jne
adc
lea
popf
nop
jg
out
gs
jno
test
or
movsb
aaa
bound
arpl
scas
fisttpl
pop
test
icebp
test
cld
xor
or
xor
call
xlat
or
movsb
ljmp
push
pushf
lock
fadds
xchg
in
xchg
jmp
push
push
cmc
repnz
mov
das
aad
nop
adcl
mov
icebp
cwtl
mov
or
pop
addr16
dec
jl
pop
cmp
lahf
adc
adc
stos
and
scas
cmp
dec
addl
pop
std
and
sbb
adc
shll
xor
mov
cld
incl
ds
or
mov
mov
test
add
inc
adc
int3
xchg
mov
push
and
enter
jnp
xchg
cmp
xor
mov
pop
fs
aaa
je
dec
or
xor
and
sbb
loop
inc
or
dec
push
and
test
imul
lock
push
mov
mov
mov
dec
mov
push
push
shl
mov
sub
sub
int
cli
mov
ds
out
js
pop
push
mov
mov
xchg
cmp
test
mov
nop
jge
mov
push
gs
add
inc
mov
cmp
je
xchg
orb
pop
adc
je
cs
mov
adc
call
sbb
std
test
push
out
pop
jecxz
mov
xchg
pop
js
mov
sbb
repz
push
inc
test
popf
nop
mov
mov
test
add
jle
in
loopne
movsl
adc
or
lahf
push
jbe
pop
flds
jmp
call
and
xor
sbb
inc
repz
mov
xchg
outsl
or
hlt
test
cmp
call
cmp
adcl
mov
clc
inc
stos
mov
repnz
or
daa
sbb
insb
ljmp
pop
dec
sbb
push
dec
pop
sbb
xor
and
sbb
sahf
xchg
adc
cmp
pop
ljmp
push
or
iret
inc
xchg
aad
insl
lods
fwait
push
sarl
sub
push
es
loope
lahf
or
icebp
lcall
in
pop
fstpt
push
dec
movsb
ja
xor
rcr
mov
sbb
jne
lods
xchg
xor
and
xor
cmc
push
repnz
cmpb
or
cwtl
dec
pop
xchg
lds
lock
jge
mov
push
sub
or
or
adc
jmp
shrb
and
jbe
add
pop
xchg
or
adc
jl
repnz
jl
push
out
les
out
pop
nop
xchg
bound
sub
push
or
sbb
mov
mov
and
and
pusha
test
es
and
fcompl
adc
lahf
aam
lcall
inc
icebp
repnz
xor
lcall
nop
add
pop
inc
jno
iret
add
test
lret
cld
or
fdivl
mov
inc
cmp
cmp
fistpl
pusha
or
dec
das
imul
data16
dec
pop
sbb
and
jbe
dec
or
test
mov
jmp
pop
push
fwait
popa
fs
lahf
pusha
dec
sbb
sub
push
mov
and
scas
sub
nop
jp
imul
dec
add
xchg
sbb
lods
imul
sub
push
loopne
sub
fs
push
jecxz
push
cld
mov
imul
add
jmp
ljmp
xor
adc
sub
mov
jns
mov
dec
adc
sbb
dec
pop
outsl
add
mov
addr16
stos
mov
xor
insb
mov
int3
sbb
add
aas
xchg
mov
and
popf
nop
pop
sahf
fs
mov
jb
movsl
dec
repnz
fwait
rolb
xchg
adc
or
xor
sub
sahf
or
push
daa
mov
mov
mov
and
loop
scas
pop
repnz
mov
lcall
xchg
cmp
mov
jb
xchg
stos
cmp
adc
in
push
or
repnz
repz
jbe
adc
shlb
call
add
shrl
and
jmp
mov
add
cmp
mov
and
and
aad
adc
inc
bnd
or
jle
stc
fs
pop
dec
jle
lods
push
aad
lahf
flds
mov
in
ds
dec
push
ret
sub
push
pop
add
or
sub
and
lcall
ljmp
addl
ficompl
inc
popa
cli
cmp
lock
movsb
jmp
dec
sbb
ret
rorb
cmp
adc
pop
repz
lock
inc
xchg
mov
dec
fadds
xor
cmp
out
stc
push
cmp
push
sbbb
push
push
and
shrl
fs
push
sbb
push
test
test
aam
cmp
mov
push
xchg
imul
out
or
inc
shll
clc
fisttps
mov
adc
pop
add
cmc
jne
add
xchg
ret
and
stos
jp
pop
or
and
inc
add
stc
mov
arpl
data16
push
cmpb
in
and
jmp
xchg
rorl
push
out
addr16
insb
roll
sub
sbb
loopne
adc
arpl
or
adc
stos
jmp
iret
mov
lret
jl
xor
push
cmp
adcl
mov
lods
adc
push
lea
lods
mov
mov
bound
pop
push
loop
fsubl
mov
test
or
dec
movsl
cmovno
jb
int
or
pop
aam
and
sub
and
je
add
lcall
and
test
adcl
inc
mov
int3
mov
jnp
into
mov
daa
pop
test
pop
pop
sub
or
inc
mov
mov
xchg
add
mov
xchg
and
addps
xchg
fcmovnb
sbb
fstps
stc
jo
aaa
sub
xor
sub
pop
jle
sbb
jb
push
insb
mov
add
cmp
stc
out
add
xor
aam
and
push
lock
inc
inc
mov
jl
inc
or
mov
or
gs
mov
insb
loopne
xchg
pop
push
sub
je
punpckldq
out
xor
and
lea
inc
adcb
fstl
out
daa
fcmovbe
jo
pop
lds
mov
enter
mov
mov
fcompl
daa
movsb
mov
in
lock
push
and
xchg
rol
xor
push
dec
mov
aas
aad
pushf
pusha
add
inc
inc
cli
icebp
inc
pop
push
fdivp
mov
ret
fldenv
repz
dec
mov
pop
push
pop
popa
imul
or
mov
test
sub
shll
push
dec
jns
sub
and
xchg
and
sbb
addl
outsb
mov
push
mov
imul
push
mov
addl
call
cmc
call
fldenv
or
and
sbb
dec
mov
dec
cmpsb
xor
mov
sbb
movsl
add
pushf
call
xchg
mov
aam
jge
xor
aaa
mov
sub
enter
je
mov
into
decb
xchg
fstl
movsb
loopne
add
inc
daa
sbb
cmp
test
bound
inc
inc
repz
xchg
icebp
xchg
cmpsl
cld
xchg
mov
mov
nop
bound
adc
imul
pop
mov
sbb
sbb
lods
and
mov
into
leave
clc
xor
sub
jp
sahf
lods
sub
and
mov
push
inc
add
xor
pop
jo
xchg
pop
dec
cltd
aam
fcoml
in
jne
xchg
pusha
sbb
push
and
or
rclb
ficompl
push
inc
rcll
cmpl
and
stos
inc
addl
movsb
jb
nop
lret
subb
mov
sbb
ret
dec
mov
arpl
sbb
jmp
cwtl
pushf
imul
push
cmp
jbe
fsts
adc
or
insb
ljmp
mov
subl
push
cmpsb
stos
mov
lahf
cmp
adc
loop
aas
push
mov
xor
fiadds
cltd
test
push
ficoms
stos
sub
and
inc
add
xor
fs
and
sbb
cmc
addr16
inc
mov
pusha
cwtl
out
push
xor
push
leave
addl
scas
pop
mov
pusha
insb
and
int3
mov
in
mov
test
loopne
int3
test
fwait
mov
sub
ljmp
jo
mov
jmp
mov
test
gs
icebp
add
aas
xchg
mov
sub
mov
mov
cmp
mov
lea
sti
shlb
incl
push
nop
hlt
shlb
loope
mov
ds
jle
sbb
add
cmc
pop
add
and
or
pusha
mov
mov
jmp
aam
mov
fwait
cmp
fs
add
pop
jne
rolb
mul
push
addr16
in
push
dec
or
xchg
push
inc
cmp
lret
lea
pop
aaa
pop
ss
sar
roll
cs
int
push
pop
push
sbb
adc
mov
aam
mov
sub
cltd
and
mov
outsl
leave
addr16
cmp
mov
xor
mov
std
xchg
inc
xor
sbb
dec
cmp
stos
push
leave
pop
adc
test
outsl
insl
imul
sbb
arpl
mov
inc
pop
add
ljmp
mov
jb
adc
test
addb
xchg
xor
shll
popa
pop
sub
loope
push
scas
fs
pusha
stos
dec
or
mov
dec
ja
jo
or
leave
xorb
push
rclb
xchg
pop
lock
out
ljmp
xor
pop
loop
out
int3
mov
add
push
imul
fcoml
xchg
loope
sub
test
inc
icebp
pop
in
cmc
pushl
lea
xchg
dec
mov
js
fs
ds
sub
sub
mov
push
push
adc
je
jnp
lock
xchg
mov
cmp
loope
insb
inc
movsb
and
sahf
aas
ret
sub
cmp
std
ljmp
movsb
les
inc
ret
and
jp
mov
jo
lods
sub
inc
mov
sti
ret
and
dec
adc
or
in
mov
xor
testb
popa
inc
lock
xchg
xchg
mov
and
loope
aad
daa
mov
pop
xor
das
pop
or
pop
inc
inc
enter
inc
lock
cli
dec
fstpl
pminub
stos
dec
loop
xchg
fs
stc
cwtl
or
loopne
jnp
add
sbb
js
cld
push
jo
popf
xchg
push
mov
fs
and
pop
jle
dec
xor
shrl
mov
pop
inc
addr16
mov
fnsave
jnp
cmc
pop
jmp
mov
mov
fcoms
inc
popa
sub
ljmp
push
adc
and
xor
stc
push
sbb
cltd
lahf
aad
mov
mov
jmp
or
scas
fucomip
sub
scas
rcrl
inc
ljmp
cmc
add
xchg
push
jge
rcll
inc
dec
pop
stos
pop
cmp
mov
cmp
aad
enter
testb
pop
cmpsl
icebp
lcall
shrb
mov
jnp
add
mov
andl
pusha
jae
and
pop
fsts
push
inc
jle
xor
repnz
jo
dec
cltd
xchg
call
pop
add
lods
clc
sbb
push
mov
pop
cmp
jmp
sbb
mov
and
bswap
lahf
mov
bound
inc
dec
dec
or
cmp
dec
rclb
xor
xchg
lfs
dec
and
test
dec
pop
push
xlat
fbld
prefetch
lds
shl
xlat
aaa
dec
dec
push
sub
cmp
mov
jl
jge
lret
dec
test
adc
mov
pop
xor
and
push
aam
in
mov
jge
nop
enter
cwtl
mov
cmpsb
push
loopne
and
add
insb
xchg
or
imul
fimull
movsb
call
mov
and
cmpsl
adc
pushf
nop
fwait
loop
rolb
mov
or
sub
inc
lods
push
or
jo
call
hlt
shlb
fs
roll
mov
mov
pop
shl
mov
leave
xchg
jns
cli
push
mov
add
aas
adc
push
jmp
fwait
ljmp
negb
lods
int3
sbb
gs
cmp
out
adc
bt
fmuls
mov
cmp
xor
shr
or
cmp
insl
sub
xchg
xor
test
jb
popa
test
iret
add
daa
call
out
pop
negb
addl
hlt
mov
xchg
into
mov
aas
and
inc
add
in
pop
sbb
xchg
arpl
aaa
fidivrs
xor
add
outsb
dec
in
std
mov
sbb
sbb
inc
subl
fldl
or
addr16
stos
xor
dec
sub
jnp
fdivr
out
xor
mov
mov
loop
mov
sbbl
into
test
and
mov
aam
push
js
mov
and
test
mov
pop
and
adc
and
and
adc
imul
bound
sbb
arpl
add
add
cmp
dec
lcall
mov
ret
jo
jle
pusha
cld
or
xor
adc
and
test
pop
data16
add
dec
lock
call
xchg
shlb
std
sti
dec
mov
pop
pop
dec
inc
inc
loopne
movsl
aam
adc
sahf
sbb
rorb
push
mov
adc
icebp
jmp
push
mov
add
xchg
leave
popl
and
pop
adc
stos
adc
loopne
lea
lret
fwait
lea
adc
or
push
psubusw
cmovbe
cmp
bound
add
cmp
jecxz
scas
clc
and
fs
mulb
shrd
lret
inc
mov
arpl
fbstp
dec
jno
xchg
stos
ja
push
and
or
test
lock
push
sub
jb
roll
ljmp
xor
push
mov
and
insb
jae
xor
mov
enter
into
hlt
cmp
mov
pushf
imul
popa
lds
push
pop
inc
mov
js
sub
pop
movsl
mov
adc
sbb
mov
jle
mov
pop
lds
lods
cmp
stc
lret
adc
adc
shr
add
inc
push
in
shl
lds
add
or
mov
fisubrl
orb
dec
mov
push
push
jecxz
pop
mov
dec
mov
leave
cmp
xchg
sbb
mov
cmp
jle
or
inc
xor
add
and
add
leave
push
inc
xor
jle
pop
lock
cld
adc
repnz
subb
insb
xchg
dec
andb
push
mov
scas
add
sbb
cmpsl
jge
add
cwtl
lods
xchg
iret
mov
or
fmul
dec
aad
sbb
or
or
insb
daa
js
xchg
jl
push
arpl
inc
add
fildl
jl
cmp
sbb
cmp
fucomi
cs
and
ljmp
xor
dec
arpl
jmp
adc
push
jns
pop
pop
jmp
imul
sub
enter
lea
shrl
es
inc
in
xchg
xchg
pop
cmpsl
gs
add
js
cmc
and
lods
and
inc
inc
or
inc
fdiv
loope
inc
lds
push
cmpsb
and
dec
xchg
push
jno
and
dec
pop
mov
add
out
push
and
shlb
in
stos
imul
add
ja
inc
rolb
clc
fcmove
sub
adc
and
imul
out
fisubrl
and
idiv
ret
xor
loopne
push
or
cmp
or
aam
inc
nop
sbb
outsb
jo
int
add
inc
repz
dec
push
sbb
popa
and
pushf
add
push
xchg
jmp
cmp
out
iret
mov
lock
sarl
mov
and
ljmp
adc
stos
cmpsb
sbb
push
push
enter
sbb
dec
adc
in
cmp
call
fnsave
mov
popa
mov
lock
xchg
sub
inc
jle
and
insb
dec
mov
bound
sub
xor
adc
repz
adcb
dec
or
push
xchg
push
xchg
push
repz
pop
xchg
fwait
jae
and
pop
scas
sub
pop
sub
add
mov
test
mov
pop
stos
inc
lea
nop
mov
xchg
sbb
cmovnp
addr16
pop
fwait
stos
pop
sbb
cli
xor
xchg
dec
pop
push
add
cmp
movsl
rorb
mov
insb
cmpsl
cmp
push
inc
das
cld
mov
sub
testb
cmp
setae
cmpsb
mov
movsb
jge
not
insl
jge
xor
xchg
dec
xchg
in
xchg
inc
jle
pop
mov
push
xor
dec
mov
xor
add
bound
add
ret
add
insb
int3
in
out
add
scas
or
in
leave
pop
xor
je
inc
call
nop
jle
leave
jl
and
mov
cld
inc
outsb
psrad
or
adc
mov
lahf
int
repz
pop
xchg
xor
pusha
push
std
fs
push
mov
or
shl
sbb
or
fs
pop
aas
push
data16
or
xor
xor
inc
lods
into
and
adc
push
mov
mov
xchg
pop
and
push
mov
mov
out
xor
clc
dec
shrl
mov
jmp
push
insl
jnp
ficompl
mov
jge
mov
loope
dec
ss
and
cmp
mov
add
xchg
addr16
xlat
jl
inc
lahf
and
and
mov
jb
push
jae
push
call
mov
jmp
push
mov
fld
daa
sub
dec
and
outsl
sarb
lods
pop
mov
pop
mov
ljmp
push
adc
inc
and
dec
cmc
xor
mov
icebp
imul
and
push
pop
movsb
or
inc
mov
or
lahf
push
push
pop
adc
ret
adc
iret
repnz
and
hlt
mov
and
xchg
stc
add
std
nop
andb
sbb
js
mov
add
sub
and
push
mov
hlt
pusha
and
daa
push
mov
xor
cmc
xor
cmpsl
sub
adc
add
xor
stos
scas
adc
sbb
es
mov
mov
movsb
sbb
test
test
and
jne
cmpsb
leave
add
add
leave
aad
jns
mov
repnz
inc
fldl
pushf
das
sbb
mov
ljmp
jnp
js
and
inc
and
push
or
int
pop
data16
fwait
testb
daa
push
mov
fistl
movsl
es
ja
aaa
loope,pn
inc
sbb
jns
push
xchg
jl
nop
sub
xchg
xchg
andb
leave
data16
ss
mov
test
inc
out
dec
in
add
mov
inc
test
xchg
in
daa
pop
xchg
insb
adc
fs
mov
cmp
or
xchg
push
aam
lar
sub
and
add
and
lods
or
imul
or
sbb
lret
fsub
pop
mov
rcll
test
xor
das
test
or
mov
clc
stos
or
sub
or
jmp
cs
lds
add
mov
rcrl
enter
loop
movsl
ret
faddl
daa
and
mov
jnp
cmpsb
psubb
xor
insb
and
mov
add
aas
add
loopne
mov
subb
push
or
in
jbe
test
mov
sbb
dec
sbb
dec
fs
xor
rorl
daa
push
mov
pcmpeqd
out
enter
cmpsb
lcall
or
mov
xor
gs
pop
ret
xor
jbe
pop
repz
pushf
dec
cmp
lods
jb
test
fsubrl
sahf
lret
insl
mov
popa
dec
outsb
les
mov
mov
sub
loope
add
mov
sub
setl
cltd
sahf
in
and
dec
and
rol
out
repnz
cwtl
xor
adc
and
aam
cli
std
mov
adc
adc
xchg
movsb
pop
test
rorl
in
jmp
sub
xchg
in
addb
cmpsb
or
and
jl
aad
mov
xchg
aas
orb
dec
adc
mov
mov
mov
add
hlt
jb
or
sbb
stos
shl
mov
sbb
orb
xchg
or
dec
mov
repz
jp
push
mov
fiadds
shrb
xor
xor
jnp
mov
cmp
ret
mov
mov
push
xor
jge
mov
jl
mov
stos
inc
mov
dec
rcll
or
jecxz
addb
std
push
sbb
jnp
mov
sub
mov
or
loop
jns
and
test
dec
popa
adc
dec
xlat
push
push
inc
test
das
push
leave
sub
pushf
jmp
or
add
adc
ret
fadds
inc
xor
push
cmp
and
lods
adc
fs
cmc
rorb
adcb
add
and
push
pop
mov
cld
mov
clc
mov
push
cmpsb
call
sbb
sub
je
add
xchg
adc
or
fs
insb
cmp
and
insl
sbb
lret
enter
and
xor
scas
mov
adc
pop
add
les
sbb
pop
cwtl
adc
repnz
js
mov
xchg
dec
jno
loop
subb
icebp
push
mov
and
movsl
cld
push
dec
mov
les
repnz
popa
cmpsl
leave
aad
pushf
fs
rcl
es
inc
insl
mov
mov
stos
fidivl
and
pop
hlt
inc
iret
mov
lcall
rolb
inc
pop
nop
or
sbb
int3
xchg
pop
popf
out
out
loope
cld
sub
mov
xor
and
cmpsl
gs
inc
xchg
cmp
test
subb
push
hlt
adc
cmc
arpl
xchg
cmp
jns
sub
cmpsl
xchg
and
movsb
imul
mov
pop
push
std
inc
jle
scas
mov
mov
lea
cmp
xchg
push
enter
inc
mov
push
mov
shlb
in
out
mov
or
mov
aas
inc
hlt
sti
into
loopne
jmp
cltd
mov
and
scas
imul
and
fcomps
mov
lret
xor
mov
mov
or
hlt
dec
enter
addl
popa
outsl
jl
cmc
pop
lcall
pop
xchg
add
roll
mov
mov
or
daa
adc
inc
mov
sbb
cmp
pushf
lea
test
cli
cmp
adc
or
and
test
push
pmaxsw
cld
adc
jmp
add
xchg
push
jg
xor
inc
cmpb
push
into
cmp
ja
xor
es
bound
and
mov
adc
inc
sbb
or
pop
aaa
ret
mov
xchg
xchg
out
cmp
ror
das
and
xor
push
cs
xor
addr16
test
cmp
data16
hlt
or
mov
mov
addr16
stos
inc
mov
mov
pop
or
xor
xlat
jno
jb
xchg
shrb
pop
popl
mov
dec
mov
xor
shll
insb
mov
mov
jge
xlat
jbe
sahf
cmpsb
nop
sbbl
inc
cmp
and
movsl
pop
push
mov
test
inc
xor
popf
add
mov
pop
push
adc
jno
fdivr
data16
test
push
pop
daa
pinsrw
lods
pushf
daa
mov
mov
push
cvttps2pi
jb
cltd
rcrb
dec
lods
mov
mov
outsl
adc
xchg
xchg
inc
push
xor
mov
sub
out
add
cltd
call
lock
ljmp
pusha
out
sti
mov
and
mov
inc
jl
out
sub
adc
pop
xor
imul
nop
and
sub
fldcw
enter
jle
popa
and
aam
pop
xor
mov
mov
or
sub
inc
dec
in
fidivrl
clc
sbb
mov
andl
testb
inc
add
mov
and
add
das
push
dec
dec
jne
inc
and
pushw
insl
pop
lds
mov
inc
in
in
cmp
divb
jecxz
xor
stos
shll
sbb
fisttpll
lahf
jns
dec
loop
hlt
or
scas
imul
dec
leave
adc
inc
mov
cmpsl
jbe
pop
mov
nop
ljmp
xchg
sahf
mov
sub
sub
or
in
or
xchg
or
cmpsb
or
stos
add
sub
jl
pop
xor
or
inc
and
loope
pop
dec
aas
xchg
pop
das
adc
inc
jl
xorl
lock
and
mov
ljmp
or
sbb
xor
inc
inc
scas
or
movsb
cmp
inc
lret
out
pop
pop
fs
jl
adc
inc
js
mov
test
cmp
cmpl
test
jl
sub
push
xchg
mov
sbb
add
fidivl
or
pushf
daa
mov
xor
aad
stc
lahf
mov
mov
xor
cmpsb
lock
jno
add
daa
leave
cmp
mov
bound
arpl
pop
mov
or
xor
scas
iret
icebp
or
sub
iret
cmp
fsubrp
fldenv
or
loop
mov
lods
pop
pop
cmpb
cmpsb
sbbl
or
xchg
dec
jo
xchg
lahf
xchg
sahf
pop
xlat
and
mov
in
jp
mov
add
rcll
mov
and
fstpt
and
cmpsl
stos
and
push
adc
mov
inc
negl
vpaddd
imul
mov
loopne
mov
jns
dec
pop
inc
sub
aaa
imul
mov
bound
daa
sbb
les
sarl
aaa
fistps
aaa
inc
cmp
test
or
std
cltd
cmc
mov
and
add
mov
mov
jmp
fnstsw
popf
mov
and
sti
xchg
dec
mov
xor
mov
dec
sbb
pusha
cmp
jne
and
ja
add
adc
adc
dec
mov
jno
dec
sub
mov
xchg
enter
mov
aas
sub
lds
cmp
xchg
stos
mov
xchg
inc
rcrl
int3
dec
or
sbb
lahf
push
jg
pop
xor
pop
push
and
loop
mov
xchg
std
jge
pop
mov
sbb
push
test
sahf
adc
test
sub
rol
adc
sbb
fistps
loop
cli
lods
xor
pop
cwtl
scas
movsb
push
ljmp
test
inc
add
and
and
test
cs
and
push
insb
sbb
frstor
rolb
je
xor
mov
jle
popa
out
xchg
push
lcall
inc
sarl
test
pop
insl
and
lret
shl
push
out
dec
jmp
sbb
xor
sub
mov
hlt
movsb
push
movsb
in
jl
enter
fwait
push
scas
pop
or
ret
cmp
inc
sbb
js
inc
mov
arpl
data16
mov
or
cmpsb
jp
sahf
mov
es
shll
xchg
daa
in
xor
hlt
sbb
sub
ret
fiadds
mov
push
pop
sub
mov
or
out
mov
testb
sbb
mov
repnz
pop
add
lcall
data16
jb
or
inc
sbb
flds
jl
mov
xchg
push
add
mov
daa
add
outsl
pop
enter
std
inc
jmp
clc
cltd
inc
xchg
leave
jp
mov
push
das
lods
shl
xchg
arpl
pop
adc
add
cmp
rolb
aaa
inc
or
sbb
stc
clc
push
rol
pop
gs
add
call
push
je
int3
test
fwait
addb
and
adc
xchg
insb
push
dec
sbb
pop
xor
out
xchg
stc
aam
sub
dec
adc
test
sub
jo
cmp
inc
mov
andb
ljmp
jp
adc
ja
repz
add
inc
sarl
repnz
negl
dec
outsb
sub
mov
popa
or
arpl
jno
rcrl
mov
xchg
lret
add
push
cmc
pop
jbe
pop
cmp
inc
add
adc
sbb
adc
jmp
daa
push
pop
jb
repnz
sbb
and
xchg
cmp
cmp
dec
loop
rorb
mov
xorl
pop
test
rclb
fs
hlt
sbb
push
mov
cmc
or
pop
pop
callw
bound
adcl
jae
leave
orb
shll
insb
cvttps2pi
dec
cmpsb
push
jle
inc
push
adc
lods
lods
out
sar
pop
pop
cmp
cmp
push
jno
push
cmpsb
test
repz
mov
test
imul
push
pop
and
add
push
sbb
pop
lds
xchg
aas
shll
pop
or
xchg
ret
or
call
icebp
test
inc
stos
stos
shlb
test
call
mov
lock
call
xlat
ret
shr
stc
adc
shlb
mov
out
adc
sahf
pop
add
push
or
add
or
es
pop
rcrl
dec
mov
or
mov
push
mov
fs
not
mov
xchg
sub
stc
adc
push
fisttpll
rcll
push
or
testb
cli
mov
and
pushl
pushf
lods
sub
shr
mov
sub
fistl
sbb
jno
bound
bound
or
adc
out
lahf
ljmp
test
or
into
push
loope,pn
push
add
or
pusha
jnp
fs
add
fcomps
data16
insb
inc
push
arpl
loop
adc
test
and
pop
dec
fisubs
add
popa
cmp
adc
ret
mov
popf
je
jl
bound
mov
subb
pusha
or
mov
jl
pop
lahf
pop
jl
and
outsb
stc
mov
and
lcall
fs
xchg
sbb
add
sub
xchg
ret
cwtl
mov
cs
jnp
xchg
enter
lahf
fcmovnb
xor
fld
rolb
imul
cmpsl
adc
add
mov
adc
xchg
pop
popa
arpl
or
scas
jns
push
mov
cmc
orl
flds
adc
and
outsb
les
cmpsb
jle
dec
fstpl
clc
data16
mov
stos
mov
mov
or
stos
filds
repnz
das
jle
or
sub
adcl
and
ds
xor
or
dec
mov
add
nop
sahf
xor
pop
or
or
loopne
mov
rorl
adc
subb
lods
shlb
xor
ret
stos
int
xor
or
xchg
movsb
cwtl
rcrl
mov
mov
daa
cmc
xor
adc
movsb
mov
jo
add
lock
enter
pop
lret
dec
or
sub
rol
cmp
or
clc
xor
fistpll
out
xchg
xor
jo
adc
sbb
adc
mov
push
in
sbb
je
push
mov
jb
cmp
sbb
and
and
jle
cmp
inc
or
or
repz
adc
popa
cmc
dec
lods
fnsave
call
or
aam
movsb
mov
sbb
pusha
mov
jns
lods
xor
fwait
mov
cmpsb
cltd
jg
xchg
and
dec
add
adc
cmp
inc
in
or
xchg
dec
push
or
push
pusha
push
test
mov
push
jmp
inc
rorl
sbb
clc
push
add
jo
push
cmp
aad
pop
lods
push
ret
or
pop
pop
push
lds
out
ret
ficomps
inc
xchg
ret
sub
cmp
cmp
xor
add
push
mov
or
xor
add
fildl
test
rcll
inc
mov
sarb
je
inc
pop
dec
clc
mov
mov
mov
mov
push
inc
pop
test
ds
movsl
xchg
adc
pop
ljmp
adc
mov
xchg
mov
cmpsb
cmc
adc
dec
imul
outsb
xchg
add
sub
xchg
je
aas
shll
push
xchg
clc
and
xchg
and
mov
jle
and
adc
imul
pop
add
test
or
cmp
mov
arpl
rol
sbb
ficomps
jnp
divb
or
test
adc
cmp
sub
dec
jg
mov
push
adc
outsb
fs
xchg
push
jg
push
lea
and
fwait
mov
sbb
mov
dec
imul
dec
add
add
int
or
xchg
sti
mov
dec
pop
cmp
dec
cmpsb
in
xor
adc
js
adc
mov
add
loope
fwait
mov
int3
cld
or
sahf
clc
mov
je
add
popa
mov
jmp
nop
or
into
inc
loop
mov
mov
repnz
sbb
fadd
stos
cmp
pop
imul
and
pusha
rorb
repz
pop
jbe
mov
adcb
inc
shlb
jo
add
push
ret
daa
push
movsl
sub
jb
cli
sbb
cmc
jmp
sbb
fwait
jmp
das
xchg
mov
sbb
pop
or
xor
pop
incb
cmpsl
popa
popaw
adcb
mov
ds
rcrl
into
mov
mov
sbb
dec
or
inc
mov
add
xor
fdivr
int3
push
std
std
or
sub
push
subb
push
ret
jmp
out
push
cltd
mov
pop
aas
lods
push
push
dec
xor
pop
push
cmp
jle
inc
xchg
flds
xchg
jb
push
mov
stos
js
fcomi
mov
cli
xor
js
in
mov
jnp
mov
and
iret
repnz
pop
add
das
and
sti
mov
mov
adc
ljmp
mov
stos
icebp
shrb
in
shlb
lds
andl
or
mov
in
fmul
wbinvd
mov
test
subl
jns
decb
mov
xchg
cltd
sub
push
scas
mov
adc
sbb
mov
xchg
jae
test
cmp
js
xor
into
mov
mov
adc
mov
faddl
cwtl
push
inc
mov
push
cltd
icebp
fisubrl
pushf
sbb
sub
hlt
jge
xchg
mov
repz
inc
xchg
jno
or
or
cs
inc
xchg
mov
test
mov
dec
adc
sub
add
data16
sarb
pusha
inc
out
iret
and
mov
fsubs
shrl
add
repnz
or
adc
jmp
loopne
pushf
nop
call
dec
sbb
loop,pt
nop
loopne
cmp
jae
cs
shll
or
stos
inc
push
pop
mov
cmp
xchg
add
imul
mov
inc
hlt
xchg
ja
daa
xor
out
jnp
arpl
out
xor
aaa
cltd
sbb
pop
cltd
and
add
inc
es
aam
push
xor
sbb
jmp
mov
pop
enter
imul
addr16
ret
push
in
jo
add
dec
pop
adc
dec
test
fwait
push
push
insb
clc
inc
or
popf
pop
dec
leave
andl
push
sbb
xchg
andb
cli
or
hlt
cwtl
test
or
fwait
cmpb
jp
and
sbb
xchg
testl
add
mov
es
xlat
push
or
dec
out
mov
hlt
cmp
loop
insl
dec
fisttpll
icebp
adc
popa
mov
mov
data16
dec
and
jns
add
pop
iret
out
xchg
cld
test
and
adc
mov
cld
xor
cmp
jmp
rcrl
stos
or
xor
mov
sbb
mov
push
fcmovnb
stos
mov
pusha
pop
sbb
scas
xor
add
pusha
xlat
mov
scas
jmp
xchg
aam
xchg
xchg
mov
or
mov
jp
nop
cmp
jb
mov
outsl
ret
popa
pop
xor
mov
hlt
adc
and
repz
inc
or
sbb
inc
in
test
xchg
jl
and
in
and
mov
dec
out
push
add
jp
add
js
jne
ja
in
mov
add
pop
inc
lahf
mov
lods
pop
and
ds
cmp
pop
cli
adc
jp
fs
add
ja
or
in
add
xor
test
adc
movsl
leave
mov
inc
inc
push
fwait
lret
mov
xchg
sub
sub
enter
es
popf
test
adc
ret
xor
fmul
push
xor
repnz
or
lods
fldl
mov
fcompl
inc
sbb
dec
lahf
push
push
enter
iret
jecxz
jl
or
dec
sub
pop
lods
pop
mov
sbb
xchg
cmp
js
inc
sahf
popf
sub
pop
popf
add
lret
dec
rcll
aad
or
test
mov
mov
mov
and
stos
adc
pop
scas
js
sti
adc
push
sub
les
dec
sbb
test
pop
cmp
and
mov
xor
add
or
jl
xchg
xor
jo
fstpl
mov
mov
inc
rorb
shlb
xchg
les
inc
jecxz
pop
inc
jb
push
pop
push
add
fcomps
xor
js
inc
and
inc
jle
push
xor
jns
push
scas
fildl
in
add
push
jp
or
sahf
push
xchg
pop
add
mov
ret
loopne
inc
and
jecxz
js
inc
mov
lret
rorb
sub
lds
xchg
adc
clc
sub
mov
pop
xchg
dec
dec
xor
iret
mov
mov
clc
sub
push
push
xchg
add
push
jmp
add
adc
in
mov
hlt
pop
arpl
sub
out
fcomi
mov
shll
inc
cmpsl
insl
pop
cmc
leave
fildll
pop
test
pop
mov
pop
jnp
xchg
into
push
sub
dec
push
xorl
fnstcw
xor
aad
sbb
mov
add
cltd
mov
rcrl
test
sbb
mov
mov
push
stc
sbbb
ret
push
dec
jnp
inc
call
rclb
mov
out
lock
ja
insb
enter
jp
inc
xchg
jl
dec
jno
push
cmp
iret
adc
aam
push
movsl
sub
cld
pop
ficoml
inc
inc
movsb
loopne
inc
and
repz
loopne
add
mov
in
negl
es
stos
lret
fdivl
cld
es
push
test
test
dec
or
push
pusha
sub
test
ljmp
cld
aam
repnz
out
inc
aad
les
add
lods
sarb
sbb
xchg
pop
push
popf
sub
push
loope
jle
imul
insb
dec
mov
fnstenv
mov
xor
das
inc
jb
pop
mov
add
sbb
sbb
sbb
fwait
pushf
mov
mov
adc
xor
loope
xor
mov
ror
loop
ret
sub
inc
cs
pop
or
nop
jno
add
mov
ret
andb
sbb
jno
mov
add
push
pushf
call
jle
inc
je
inc
inc
or
cmp
f2xm1
rorb
ret
xor
cltd
pop
xchg
dec
ret
push
xchg
jae
jl
xchg
pop
jns
shlb
test
mov
xchg
jl
cwtl
inc
bound
loopne
push
xchg
rorl
push
sub
dec
cwtl
cmp
push
rcrb
xchg
scas
shll
shlb
pop
jnp
fstp
data16
out
sbb
xchg
js
fcmovu
xlat
push
popf
xchg
cmpsb
mov
mov
adc
pop
shrb
repnz
pop
sti
clc
dec
jo
or
fistpll
aam
adcl
push
clc
or
jb
jns
lock
aaa
loopne
xchg
fsubrs
dec
test
loopne
jno
outsb
mov
test
dec
divb
test
cmp
aaa
pop
enter
adc
xor
adc
pop
xchg
mov
and
mov
cmp
jns
dec
jb
inc
fldl
cmp
shr
mov
inc
or
xchg
inc
in
ret
push
add
pop
shlb
pop
sub
fdivr
mov
xor
or
cwtl
sbb
test
stos
test
or
xor
or
loope
or
cwtl
dec
idivb
mov
cmp
mov
push
mov
lea
add
jo
fwait
dec
jo
lea
jae
sub
mov
dec
mov
or
sbb
and
sbb
pop
xor
or
dec
or
xchg
adc
subl
andb
jno
insb
mov
out
call
sbb
lret
and
xor
test
out
daa
insl
inc
xchg
inc
insl
or
dec
pop
lret
or
lea
xchg
lds
sub
sbb
leave
lea
xor
dec
fadds
clc
mov
inc
mov
xchg
mov
sbb
and
and
les
add
sbb
and
inc
mov
popa
xchg
push
xchg
fldt
cmpsb
movsl
insb
bound
sbb
bound
xchg
push
in
dec
idivb
pusha
mov
imul
inc
imul
icebp
xor
mov
jge
mov
jbe
adc
add
jecxz
into
test
mov
xchg
lret
shlb
jns
jecxz
enter
ljmp
pop
xor
push
sub
mov
adc
inc
call
movsb
inc
sub
hlt
adcl
jmp
xorb
xchg
data16
pop
aaa
jne
lret
pop
in
rcrb
scas
xorb
fwait
push
jg
push
movsb
leave
mov
dec
sbb
or
lahf
xor
test
adc
sbb
jl
stos
xor
or
inc
fists
mov
pop
cmp
cmp
movsb
insb
cli
xchg
fiaddl
mov
adc
sahf
dec
loopne
mov
mov
push
cmp
and
ja
popa
mov
inc
test
sbb
fidivrs
mov
dec
adc
lods
out
or
dec
hlt
int
js
jmp
inc
lock
cmpb
jmp
es
clc
inc
outsb
dec
int3
es
stos
stos
adcl
inc
cltd
jno
mov
and
jp
pop
incb
cmp
loop
jo
xor
mov
sub
or
mov
fs
sbb
in
leave
out
xor
cmpsb
push
sbb
mov
sub
iret
subb
int3
push
jbe
dec
imul
cmc
pushf
and
sub
push
jle
popl
subl
movsb
or
repz
sbb
lds
iret
push
es
mov
dec
aaa
pop
fidivrl
aas
mov
dec
rcrl
in
add
sbb
fwait
xchg
sub
inc
ja
arpl
lret
int
push
dec
insl
and
adc
leave
sub
mov
mov
andl
call
mov
or
jbe
and
rcl
xor
add
adc
sub
mov
sti
adc
sbb
cli
sbb
or
dec
add
or
sti
not
and
stc
sbb
xor
ss
fisubs
pop
adc
outsb
mov
fsubs
notb
xchg
je
js
out
adcb
sbb
mov
je
adc
push
mov
das
lds
nop
stos
in
orl
or
push
sub
xor
ficompl
and
rolb
call
ljmp
jg
xor
or
mov
cmpsl
inc
rcl
ret
adc
rclb
fildll
iret
scas
mov
jno
adc
mov
mov
mov
ds
inc
das
adc
jmp
xchg
hlt
add
mov
add
or
mov
mov
loop
les
or
loope
les
in
xchg
xchg
or
sbb
sahf
shl
sub
in
push
pop
inc
mov
mov
daa
dec
jno
rcll
into
fmull
sub
cltd
jle
xchg
mov
mov
or
out
xchg
std
push
sbb
test
push
mov
in
leave
sub
pop
jbe
mov
daa
and
jne
loope
fwait
or
xlat
xor
ret
insl
icebp
mov
stc
orl
nop
xchg
or
mov
and
cli
or
pushf
mov
stc
mov
mov
push
sub
js
jmp
adc
pusha
stc
and
notb
sbbb
lock
jns
push
jl
add
lods
movsb
hlt
and
loope
cmp
pop
jbe
test
push
or
sub
push
adc
arpl
call
sub
test
mov
ss
lea
inc
mov
jp
jmp
imul
push
pop
pop
loope
adc
scas
xor
mov
push
lds
dec
mov
in
xchg
in
and
adc
mov
sbb
mov
stos
pusha
test
loopne
pop
nop
data16
addb
movb
push
push
and
stos
xor
int
test
mov
mov
das
xchg
test
inc
add
les
std
push
aam
push
push
rolb
push
xor
dec
lea
xor
rol
jb
dec
test
rorl
sbb
mov
imul
fs
cld
lret
cmp
inc
xchg
xor
mov
into
jmp
sbb
push
pop
mov
cmp
data16
movsb
orb
and
inc
xchg
sbb
inc
xchg
and
sub
push
xor
or
jp
pop
fstpl
fsubs
js
popf
mov
push
je
push
cmp
daa
pop
mov
or
jl
ja
add
popa
stos
stc
pop
or
enter
mov
mov
jl
fiadds
sub
mov
test
push
int
into
xor
mov
sbb
mov
push
or
pop
xor
loopne
aam
or
imul
fs
push
js
lret
and
arpl
repnz
jl
mov
cmp
adc
lcall
ss
movl
mov
push
mov
mov
inc
mov
mov
xchg
sbb
push
out
xor
xchg
mov
cmpsl
shlb
sbb
push
adc
pop
inc
nop
sub
gs
popf
das
icebp
xor
loop
xor
push
lahf
inc
adc
mov
rcrb
pop
push
insb
js
push
xor
adc
clc
popf
lcall
mov
mov
add
imul
mov
xor
dec
lea
rcl
pop
push
test
nop
ret
js
cmp
repnz
ds
sti
in
cmpsl
adc
sub
fstpt
sbb
lcall
fisttpl
or
add
pop
inc
pop
mov
inc
mov
mov
sbbl
or
stc
and
mov
cmp
aad
ds
cmp
nop
mul
cmpsb
inc
pusha
add
aad
ss
sub
fidivl
dec
jnp
enter
lock
xor
and
and
push
call
xchg
test
inc
shl
sbb
push
stc
push
xchg
sbb
add
jmp
inc
lock
jmp
dec
mov
je
daa
in
push
adc
adc
adc
push
leave
aas
and
inc
dec
cmpsl
fcmovne
jmp
mov
sub
pushl
insl
pusha
add
inc
test
or
xchg
shrb
push
xor
add
dec
cmc
shlb
imul
mov
pop
jo
fcom
inc
cmp
dec
jmp
sub
add
inc
adc
insb
push
mov
cltd
pop
pop
ljmp
and
in
loop
stos
jmp
cld
mov
sbb
sbb
out
or
cmpl
sbb
or
emms
ret
ret
fcoms
jecxz
shll
adc
cs
and
popa
cmp
das
lahf
aad
or
xor
aad
mov
or
dec
ret
pop
lea
xor
adc
nop
add
insl
push
xor
into
repz
cmc
sbb
xor
add
sbb
movsb
and
push
pop
aas
mov
ss
inc
xor
ds
dec
inc
push
lock
push
mov
rcrl
popf
jmp
js
pop
and
mov
mov
sub
rolb
sbb
or
inc
and
add
xor
adc
fistps
jne
or
jle
add
je
dec
sbb
pop
add
in
adc
popa
cld
add
jecxz
sub
mov
jne
pop
rolb
and
or
test
xor
and
and
mov
xchg
test
scas
sti
clc
or
mov
sub
or
inc
cmp
or
bound
and
addps
mov
dec
repnz
mov
aam
or
ljmp
xchg
rcrb
fwait
repz
nop
outsl
add
dec
cld
jecxz
cmp
out
outsl
cmp
orb
jg
sbb
pop
ljmp
loop
js
incl
sbb
fisubrl
dec
stos
mov
jl
movsl
out
dec
jl
sar
jle
push
addb
sbb
sahf
addl
add
mov
and
add
aas
sahf
inc
cli
and
push
push
int3
loopne
sub
hlt
and
cmp
add
jnp
push
push
ljmp
inc
sub
adc
pushl
jno
add
sti
stos
hlt
push
jp
icebp
add
pushf
mov
lods
dec
pop
push
cmp
loope
jp
inc
pushf
and
icebp
mov
aad
push
out
sarl
xchg
roll
mov
neg
xchg
pop
sub
jge
sbb
and
sar
and
out
sub
sbb
jl
adc
xchg
mov
out
test
mov
scas
jb
loope
mov
add
sbb
adc
sysenter
ret
bnd
push
push
cmpsb
sti
out
xor
add
pop
lods
leave
cmp
sub
cmp
mov
fldl
xor
lods
ja
mov
push
enter
int
add
add
adc
and
push
mov
icebp
mov
fiadds
gs
and
mov
xorb
es
jle
ljmp
pop
or
repnz
mov
cmpsb
pop
ljmp
popf
pop
imul
andl
sbb
in
adc
or
loopne
scas
add
inc
es
mov
loop
je
add
cmp
pusha
jne,pt
pop
repnz
and
sub
jae
push
in
add
mov
jb
pusha
fistl
fbld
clc
cwtl
mov
movsb
mov
cld
xchg
adc
mov
jmp
or
push
xor
mov
sbb
ret
daa
sub
jns
mov
xchg
sbb
out
and
xchg
push
cwtl
push
pop
fimull
xlat
xor
adc
lahf
into
mov
cmp
sbb
je
jae
jmp
and
xchg
pop
mov
or
or
test
cmp
into
mov
fdiv
cmc
inc
cmp
xor
insl
pushf
xchg
sbb
adc
out
cmp
movsb
sbb
outsl
adc
aaa
mov
pop
dec
enter
mov
ret
cmpsb
ficoml
arpl
neg
and
into
add
outsl
jo
dec
movsl
add
dec
lds
xor
push
push
dec
sahf
or
mov
xchg
shl
mov
or
dec
icebp
inc
mov
std
lret
jecxz
std
insb
lds
dec
jle
lcall
and
aam
loop
pop
repnz
dec
int3
ret
out
pop
bound
dec
cmpb
jl
push
or
addl
int
gs
inc
fwait
ja
and
nop
outsl
and
inc
bound
push
xchg
sbb
xchg
lods
test
dec
fsubl
repnz
andb
pop
cmpb
addb
addb
adc
dec
stc
pop
mov
mov
inc
enter
xchg
cs
incb
hlt
shrb
mov
jbe
and
ds
popa
je
fcmovnb
fwait
out
ljmp
sbb
lds
dec
mov
stos
cmpsl
mov
adc
sub
js
or
mov
mov
pop
jne
push
out
mov
dec
mov
loopne
dec
xor
sbb
push
mov
fdivrp
push
add
js
jno
sbb
dec
ss
popl
cmp
add
jp
adc
out
andl
add
outsb
jmp
push
or
and
testb
jno
inc
fistps
inc
test
inc
xor
sbbb
out
pop
push
or
mov
push
pop
sbb
outsl
cmp
xor
in
mov
pop
jmp
xchg
rcl
cmpsb
mov
imul
js
inc
or
push
mov
mov
jae
sub
insb
sub
mov
jg
xorb
or
stos
test
jns
fadds
popf
lret
push
shlb
lcall
lahf
sbb
dec
test
dec
add
js
and
jg
jno
popf
cmpsb
cld
adc
adc
repnz
cwtl
jns
dec
or
pop
or
xchg
or
jo
add
int
push
mov
fimull
push
popa
incb
lods
loopne
aam
pop
sbb
ja
pop
insb
fcmovne
cli
xchg
push
lds
popf
rcll
subl
test
pusha
stc
inc
mov
out
dec
jmp
je
mov
loopne
aas
add
lahf
std
fdivrs
lods
cwtl
roll
in
inc
sbb
and
shlb
popf
addl
pop
push
ljmp
mov
nop
jae
test
jns
cmpsl
lea
mov
adc
or
inc
sub
add
in
int3
dec
adcb
daa
addb
mov
mov
add
cli
xchg
dec
cmp
leave
stos
push
mov
jl
sbb
adc
pushf
xlat
fisttpll
je
dec
movsl
or
ja
mov
adc
xor
pop
cmp
in
movl
jo
fs
ja
jbe
jl
push
hlt
add
sbb
test
in
das
cld
rorl
xchg
pop
or
add
dec
call
mov
mov
push
pop
test
mov
popa
ret
sub
pop
pop
pop
push
and
and
stos
inc
sbb
mov
jmp
mov
mov
cmc
pop
and
push
and
lods
push
dec
enter
lcall
cmp
sahf
add
mov
outsl
or
test
testl
pop
inc
out
int3
xchg
sbb
in
adcl
xlat
test
cli
push
insb
add
sbb
cmovnp
aas
icebp
rclb
rolb
jns
fwait
in
div
repz
jno
mov
mov
mov
jne
shlb
rol
sub
push
lds
cwtl
push
test
lret
imul
mov
mov
xchg
cmp
and
lods
cmp
push
xor
cmc
adc
sub
adc
dec
test
inc
add
cli
mov
push
inc
dec
movsl
sbb
push
fcompl
fdivl
nop
sbbl
jmp
dec
adc
mov
mov
xchg
push
loop
pop
rcr
push
sbb
push
mov
out
rcrb
lret
movsb
rorl
xchg
push
jmp
pop
fsubs
sub
loopne
insl
add
xlat
ficoms
test
adc
lock
add
or
loopne
stos
adc
mov
pop
push
mov
jb
mov
mov
in
push
adc
lock
enter
dec
mov
out
in
mov
fsubrl
pop
mov
dec
pop
insl
faddl
punpckhdq
jb
lcall
les
and
cmp
insl
mov
je
js
fdivr
daa
lods
loop
jne
xchg
inc
mov
sbb
jmp
loop
cmp
out
xor
mov
lock
fsubrs
mov
popa
aas
icebp
jge
int3
stos
ret
and
test
sub
shrb
lods
or
cmp
call
adc
add
inc
stos
inc
jl
insl
aaa
adc
je
icebp
cmp
fdecstp
push
jecxz
insb
dec
sbb
sbb
rorl
pop
daa
push
push
add
adc
rclb
clc
inc
out
loope
inc
data16
das
cmp
adc
test
scas
loopne
scas
ds
xchg
jge
mov
xchg
adc
pop
dec
and
add
adc
clc
push
and
call
mov
dec
push
xchg
dec
mov
outsl
and
cwtl
jmp
cld
test
and
stos
sbb
fs
test
cmp
cmp
cmpsb
pop
jg
in
sbb
adc
mov
jae
add
push
test
pop
or
sarb
lea
jl
into
js
ret
adc
and
dec
cmp
daa
pop
daa
test
rorl
dec
and
nop
loopne
cltd
pop
aam
ret
loope
clc
cmp
ret
rcrl
enter
add
loope
xor
ret
and
dec
stos
and
fldl
outsb
or
movsl
xor
add
pop
mov
mov
data16
xor
mov
rol
out
lods
sub
sbb
xchg
push
push
jae
enter
sub
or
dec
data16
jl
mov
inc
jne
cmp
loopne
fbstp
out
pusha
push
jge
push
sub
ret
push
xchg
sar
cmp
push
ret
adc
ss
push
and
lret
dec
in
dec
bound
pop
mov
out
and
push
mov
adc
pop
lret
scas
shrb
rolb
aas
jbe
and
pop
test
pop
add
fs
add
xor
and
mov
xchg
iret
inc
add
sbb
cvtpi2ps
and
mov
test
push
push
repnz
or
mov
mov
lds
sub
or
and
and
cs
add
mov
out
or
popa
push
js
inc
xlat
les
shll
dec
pop
mov
sahf
test
cmp
xchg
or
call
mov
je
in
cmp
mov
daa
pop
add
sub
sub
adc
mov
push
and
xor
sub
jmp
mov
mov
push
cmpsb
sbb
loope
jb
leave
push
mov
sub
inc
cmp
stos
push
daa
icebp
cwtl
pop
ret
out
out
lret
inc
icebp
fldt
pop
mov
inc
aas
pop
outsl
aad
fldl
and
fnstsw
ja
ret
adc
inc
mov
dec
or
mov
fs
inc
stos
std
filds
sub
mov
inc
sbb
or
cmp
imul
test
jo
gs
dec
or
ret
popf
push
xchg
mov
bound
xchg
hlt
jp
or
mov
les
mov
stc
loopne
test
dec
outsb
sub
xor
xor
loopne
js
and
fdivl
inc
pop
lds
es
mov
mov
xchg
xchg
push
cwtl
sbb
jp
cltd
ficompl
sbb
jnp
mov
js
es
adc
pop
pop
inc
inc
daa
sbb
ret
add
mov
inc
jp
loope
mov
lock
ds
sbb
cs
gs
inc
inc
pushf
lods
xor
pop
in
xor
lods
xchg
adc
jge
mov
rcll
orb
imul
cmp
lret
jns
call
adc
ret
mov
test
aad
lret
rcl
loopne
add
add
bound
outsb
arpl
sbb
fs
or
cmp
lahf
pop
fldt
jb
mov
add
cmp
dec
xchg
mov
add
repnz
dec
aas
dec
icebp
lds
and
sub
leave
mov
mov
shll
mov
mov
adc
push
in
aad
icebp
imul
test
in
loope
test
adc
cs
ret
sub
and
mov
dec
inc
loop
mov
xchg
push
ret
test
add
and
inc
mov
and
inc
test
test
mov
je
inc
pop
scas
jns
js
test
call
test
or
ds
pop
movb
mov
xor
mov
push
jmp
subb
adc
shll
jbe
or
insb
bound
mov
add
push
loope
pusha
and
aas
adc
push
fsubs
enter
push
ret
int
add
cmp
mov
lahf
xchg
mov
and
and
mov
xchg
inc
adc
or
xchg
leave
xchg
mov
je
inc
dec
jle
cmpsb
loop
outsb
jecxz
rcll
push
adc
and
cltd
int
popf
add
xchg
lret
cmp
adc
add
mov
inc
fidivrs
jecxz
adc
sbb
mov
or
lods
jecxz
cmc
mov
xor
imul
sbb
stos
mov
scas
fisubrs
adc
dec
cli
cmp
and
repz
mov
stc
mov
mull
xorb
add
insb
roll
jg
xor
mov
cmp
and
loop
inc
sbbl
dec
cmp
inc
push
jne
ljmp
inc
ficoms
or
test
jecxz
scas
cmpsb
in
or
sub
fmull
cs
and
lods
dec
aam
jo
add
andb
imul
dec
popf
lock
push
add
adc
movsb
bound
xor
and
xchg
ss
sti
sarb
outsb
jo
pop
lds
lds
in
insb
adc
xchg
inc
mov
inc
test
call
sarl
dec
loopne
push
inc
jbe
inc
scas
movsl
dec
and
xchg
xor
or
dec
call
ja
mov
add
addl
xor
inc
and
cmp
lock
les
mov
jns
jmp
call
cmp
pop
jne
mov
es
sbb
call
aas
mov
testb
xorl
fcmovnbe
pushf
ret
sub
movsb
faddl
mov
sbb
and
xchg
mov
scas
insb
call
cmp
sub
pop
push
std
js
mov
mov
cwtl
rolb
stc
pusha
cmpsl
mov
roll
loope
shll
sbb
les
call
hlt
add
add
push
xchg
xchg
add
jl
in
jmp
sbb
aas
scas
mov
popa
ret
aaa
adc
sub
lret
mov
inc
add
or
adc
ret
ds
pop
out
push
push
sbb
mov
dec
das
adc
out
sbb
shll
cwtl
pop
cwtl
js
add
fcmovne
pop
pop
data16
js
pop
repnz
test
mov
enter
dec
ljmp
test
enter
into
rcrl
call
fnstsw
mov
xchg
xor
test
xor
aaa
int
mov
pop
push
cmpsl
adc
adc
dec
jnp
imul
aas
stos
mov
dec
xlat
int
jo
movsl
mov
jmp
cmp
lods
push
fs
pushf
lcall
aas
mov
add
adc
add
dec
andl
in
inc
cld
repz
push
mov
xor
cmp
pop
xchg
arpl
rcr
xor
lock
popa
sbb
add
mov
in
push
adc
test
push
xchg
cs
cmp
js
pop
or
push
jmp
add
push
cwtl
adc
pop
jbe
inc
mov
aad
sub
outsl
xor
push
cmpsb
add
or
mov
or
fwait
scas
data16
push
or
cmp
nop
cld
push
pop
cmp
ret
mov
and
jno
fimuls
sbb
je
or
arpl
in
pop
jecxz
dec
lock
fistpl
mov
xor
pop
lods
andb
dec
movsb
dec
ljmp
mov
pop
mov
std
loop
testb
mov
nop
addr16
icebp
dec
pop
dec
xchg
addr16
js
leave
add
jns
adc
in
xchg
xchg
jg
sahf
add
or
test
sub
popf
pop
cmp
lds
jp
push
divl
popa
leave
mov
or
fstpl
and
or
sbb
sbb
and
dec
jb
cltd
adc
push
or
mov
pop
lahf
into
pop
pop
cmp
sub
mov
dec
iret
outsl
xor
mov
jo
push
sbb
outsl
loopne
int
sub
push
out
lret
inc
and
andb
adc
cli
in
lcall
or
cmp
xchg
pop
cmp
imul
jg
cmp
cmpsb
push
int3
cmp
shll
and
mov
inc
fbstp
push
push
push
add
lcall
sbb
call
cvtpd2ps
movsb
iret
js
imul
out
notl
stc
mov
add
jno
xor
and
and
leave
stos
inc
sahf
icebp
pop
pop
rolb
aad
sub
fcomp
dec
pop
or
lcall
pusha
repz
or
fnstenv
fxch
ror
sbb
xchg
sbb
lcall
mov
sahf
insb
and
jge
aas
mov
and
dec
fdivs
sub
and
xor
nop
xor
lcall
mov
movsl
lds
ljmp
adc
adc
loop
call
mov
sbb
es
or
sbb
sub
leave
call
add
jp
mov
sub
test
mov
lods
pusha
hlt
pop
pop
nop
xchg
mov
out
pop
idivb
dec
xor
and
nop
dec
icebp
jmp
xchg
imull
in
pop
and
adc
loopne
cmpsb
push
cmp
test
addr16
cltd
xchg
add
xchg
aas
call
inc
and
xchg
loopne
push
dec
pusha
push
inc
xchg
icebp
jae
add
mov
add
repnz
jo
jge
shufps
xor
inc
test
jae
mov
data16
cmp
push
ret
sbb
or
fdivl
imul
xor
mov
in
lods
mov
mov
inc
mov
dec
dec
bound
nop
lock
clc
jl
call
hlt
or
push
xchg
jns
pushf
jo
daa
xchg
movsb
push
popa
mov
out
popf
sbb
inc
mov
pop
dec
mov
add
and
addr16
mov
mov
push
dec
jl
icebp
sti
enter
or
pop
repnz
pushf
xchg
cmp
subb
add
fcomp
inc
mov
subl
lods
dec
out
pop
push
shll
pop
lods
int
ja
fwait
arpl
lret
add
add
mov
jb
cs
dec
or
lds
cmpsl
cmpsb
mov
movsb
clc
and
jo
or
and
lahf
mov
xchg
dec
adc
cmp
inc
or
aad
adc
jno
dec
mov
leave
outsb
movb
cmc
add
dec
sub
popf
loop
aam
and
push
in
sub
dec
sar
xorb
shrl
push
sub
and
sbb
aad
pop
pop
mov
lahf
icebp
int
jne
das
je
add
sbb
xor
ret
mov
dec
sub
sar
icebp
or
add
movsb
iret
adc
cmp
and
sbb
nop
mov
add
aam
enter
jnp
or
sbb
inc
sbb
pop
mov
push
xor
test
adc
and
sbb
mov
push
shrl
mov
or
add
add
mov
scas
xlat
cmp
popa
hlt
rcll
cmp
scas
aam
mov
or
mov
aam
test
adc
out
and
addr16
insb
mov
mov
mov
pop
add
testl
hlt
mov
cli
inc
or
mov
enter
sub
cmp
jno
lret
push
cmc
add
push
sub
jae
xor
bound
mov
and
cmp
xchg
es
arpl
int3
push
and
push
mov
xlat
std
push
sbb
inc
add
sbb
lahf
insl
sub
mov
shl
xor
push
inc
lods
or
and
loopne
push
shll
adc
xchg
jmp
xor
xor
jle
test
or
or
nop
mov
dec
js
in
outsb
mov
ror
mov
mov
adc
jno
push
jo
and
sbb
out
mov
mov
mov
daa
lds
adc
movsb
pop
cmpsl
mov
xor
push
inc
in
sub
and
jno
pop
or
cmp
sti
rolb
punpcklwd
fcmove
fildll
adc
mov
jle
sub
frstor
push
mov
push
pop
jae
mov
hlt
dec
mov
mov
dec
cmp
jnp
ds
les
cltd
cmp
in
mov
mov
lcall
mov
sub
mov
les
mov
sbb
fdivr
or
dec
enter
cmpsb
mov
mov
adc
sub
mov
cmc
jbe
clc
jmp
pop
mov
mov
pop
push
aaa
mull
inc
ss
fcoml
das
adc
or
bound
orl
adc
stos
jge
int
das
pop
jo
or
movsb
push
push
out
xor
testl
testb
movsb
inc
adc
add
jp
call
cld
fisubl
xor
inc
je
cmp
mov
cmp
adc
add
js
iret
cmp
fnstenv
cmp
shll
cltd
in
xor
in
mov
jne
lods
xchg
sub
xchg
inc
or
jno
jo
loopne
mov
sahf
fsubrs
scas
add
xor
dec
pop
push
hlt
inc
mov
mov
mov
stc
mov
hlt
jmp
cmpl
adc
repnz
in
cmp
add
cmp
jp
dec
inc
fdivrs
and
and
or
xchg
mov
in
int
sub
mov
xor
pop
aaa
inc
mov
or
and
test
scas
test
cmp
cwtl
mov
mov
cmpsb
mov
imul
cld
aas
add
mov
sub
xor
das
xchg
daa
cmp
push
hlt
push
imull
sbb
stos
xchg
out
jbe
pop
ret
inc
fdivrl
and
sahf
test
clc
dec
pop
mov
pushf
cmc
ljmp
and
inc
push
add
jno
cmp
pop
inc
and
jl
push
jp
pop
cvtdq2ps
adc
mov
xchg
jno
lods
iret
xlat
dec
xchg
clc
icebp
xchg
scas
dec
pop
inc
clc
sbb
xlat
xchg
cwtl
jns
adc
jns
outsb
test
sub
popf
or
int
mov
add
xchg
cs
sbb
stos
addr16
jmp
adc
btsl
mov
adc
arpl
outsl
das
les
cld
jl
aad
call
aas
xchg
pop
data16
shrl
das
mov
ret
adc
xor
out
sub
cmp
addr16
inc
mov
lea
dec
mov
jle
cmpb
mov
hlt
or
addr16
add
movsl
dec
enter
nop
out
ljmp
jle
dec
or
dec
repnz
cmp
insl
pop
adc
pop
push
mov
fsts
jbe
enter
ficompl
adc
or
sbb
jbe
xchg
shlb
sbb
adc
mov
xchg
cmp
jae
movsl
lock
das
jno
mov
les
and
xor
sub
push
arpl
rcll
push
push
inc
cld
mov
inc
inc
nop
shll
call
rorb
nop
les
mov
adc
pop
fisttpl
pop
lret
cmpsb
and
cvttps2pi
and
sub
and
mull
fs
rclb
repnz
cmpsb
stc
scas
scas
mov
or
movsb
xor
ror
push
pop
push
mov
shrb
push
add
fs
cmp
dec
icebp
mov
outsl
and
push
out
daa
int3
leave
leave
aas
and
ss
stos
or
mov
insl
mov
inc
jbe
popa
lahf
pop
mov
repz
insl
jmp
punpckhbw
add
jecxz
xor
mov
or
push
mov
punpckhbw
xchg
or
neg
sbb
ret
aad
lea
test
mov
orl
xchg
push
cld
push
lds
sarl
sti
xchg
hlt
dec
or
adc
add
push
fldl
cmpsb
into
out
js
popf
mov
iret
cmp
sub
mov
lock
lcall
add
pusha
inc
sub
test
or
insb
arpl
push
mov
je
dec
rsqrtps
cmp
push
cmp
in
into
cltd
xchg
and
or
and
mov
mov
cmpb
mov
test
fiaddl
aaa
pop
mov
push
ja
or
imul
add
in
and
and
xor
aas
rorb
push
xchg
enter
mov
cmp
sahf
sti
adc
not
adc
or
mov
sbb
mov
and
loopne,pt
cmp
sbb
call
cmp
popf
inc
xchg
push
jle
pushf
enter
push
or
mov
sbb
scas
fisubl
mov
or
cmc
shlb
push
sub
aas
and
sub
mov
or
jecxz
daa
cmpsl
fstl
mov
aaa
fcomip
dec
cwtl
cld
ret
dec
jae
rol
cwtl
mov
ret
jns
pop
enter
insl
sub
jno
jmp
mov
push
pop
sahf
loop
inc
xchg
adc
adc
inc
jb,pn
mov
shlb
inc
jb
lcall
pop
adcl
mov
xchg
add
pop
push
mov
fwait
push
cmpsl
roll
add
shr
inc
and
cmp
hlt
and
rcrl
pop
jmp
loope
inc
lds
loopne
sbb
inc
cltd
push
or
mov
pop
sbb
lds
pushl
add
pop
movsb
outsb
dec
add
sbb
in
pop
sbb
or
in
jae
dec
cmp
popf
mov
xchg
inc
cmp
inc
addl
scas
cmp
mov
add
sbb
mov
rclb
mov
push
sub
push
fcmovne
jmp
cmpb
sti
fcoms
push
pop
insb
or
std
xchg
dec
push
cmc
sub
xchg
pop
into
pop
mov
jl
test
ret
pop
mov
xor
test
aam
push
sub
or
bound
mov
pop
lahf
fisttpll
xor
ret
mov
rep
push
lcall
xchg
leave
pop
inc
mov
pop
gs
mov
or
ss
and
cltd
mov
jmp
dec
jmp
mov
mov
int3
mov
dec
add
fnstsw
dec
repz
mov
repz
push
cli
inc
xchg
or
or
or
xor
or
xor
jo
inc
mov
lret
and
incb
sarb
cltd
mov
or
sbb
dec
mov
int3
repnz
scas
jnp
sbb
fdivl
jp
fsubs
jle
inc
xor
mov
ret
jge
sbb
sbb
nop
mov
ss
and
and
mov
clc
adc
lds
ret
addr16
outsb
out
out
rcll
jne
pusha
cmc
inc
test
movsl
inc
xor
repnz
rcrl
and
adc
loope
jno
lock
sbb
sub
jne
aaa
arpl
outsb
rcrl
or
popf
mov
sub
mov
mov
pop
idiv
orb
push
gs
jo
jp
jb
test
mov
or
repnz
adc
popf
rolb
cli
add
leave
and
test
add
pushf
mov
push
pop
and
in
adc
in
xchg
add
orb
xor
out
or
test
sbb
xor
jp
arpl
add
pop
dec
xor
sbb
dec
mov
repnz
js
dec
mov
test
or
push
testb
test
daa
mov
push
mov
mov
jb
rorl
test
lds
nop
mov
mov
mov
and
popf
sbb
lret
xchg
xor
shr
add
gs
inc
lock
inc
js
pop
addl
daa
movl
adc
test
test
test
hlt
jae
or
push
daa
mov
xchg
cld
rorl
add
mov
out
mov
lods
les
add
xchg
rorb
pop
push
cmp
std
dec
jbe
push
aam
xchg
xchg
arpl
outsl
xor
sub
test
lcall
adc
test
pop
mov
jns
sbb
mov
stos
ljmp
outsl
xchg
or
js
testl
ljmp
mov
stos
pusha
cmp
or
cli
loope
sti
or
xor
adc
shlb
sbb
push
roll
and
jae
lcall
in
add
dec
pop
mov
enter
jl
testb
sub
fstl
and
inc
in
adc
ror
xchg
int
cld
loop
and
inc
aaa
popa
push
call
mov
dec
jo
cmp
fs
frstor
lret
ret
out
adc
inc
fcoms
jno
andb
add
addr16
xchg
jne
out
cmc
adc
and
or
sub
movsb
inc
xchg
inc
sbb
or
inc
mov
push
inc
add
sbb
mov
stos
fimuls
dec
xchg
jnp
out
xchg
add
lods
das
fbld
leave
push
inc
adc
sti
add
xor
dec
add
xchg
aad
roll
icebp
inc
adcb
xor
inc
rcrb
test
stos
dec
and
sbb
sub
or
inc
scas
ss
sub
mov
pop
xor
inc
rorl
fstpt
push
ret
dec
sbb
fs
cli
adc
pushf
sub
add
imul
negl
sbb
movl
test
insl
cs
or
xchg
ljmp
or
loop
xchg
inc
orl
and
shld
imull
jnp
and
jns
lock
cmc
popa
icebp
cltd
mov
sub
mov
arpl
pop
outsl
add
mov
ret
and
add
adc
sub
mov
jle
orb
cld
hlt
dec
mov
xor
cli
push
adc
and
insb
mov
ds
pop
pushf
nop
clc
jns
lods
outsl
sbb
daa
inc
jl
pusha
add
and
rorb
push
mov
add
pop
cmc
mov
mov
xchg
xchg
or
and
pop
pop
pop
dec
add
es
iret
pop
mov
xchg
adc
mov
pop
sub
test
pop
ss
into
rclb
clc
push
adc
and
ds
popa
fists
ss
dec
jno
mov
imul
xor
and
sbb
sbb
pop
and
fs
in
adc
ja
jl
mov
aaa
sbb
or
dec
push
bound
sbb
orl
and
dec
inc
out
mov
or
aaa
lret
je
xchg
jbe
cmp
hlt
xor
mov
mov
hlt
adc
in
sub
inc
inc
jb
xor
stos
popa
xor
xor
pop
fwait
scas
das
add
in
testb
popa
push
and
pop
dec
add
inc
or
mov
jnp
mov
inc
push
les
push
cmpsl
xchg
movsb
pop
nop
loop
cmpsb
pop
sbb
jp
push
or
pop
add
cwtl
test
adc
loope
mov
rol
sub
lcall
adc
jne
xor
cs
mov
fadds
fwait
xchg
fwait
mov
in
test
add
inc
xchg
divl
xor
lock
stos
and
sbb
notl
loop
incb
inc
insl
sub
mov
pop
dec
cmp
add
mov
repz
xchg
mov
cmpsb
fcmovnu
xor
les
scas
and
mov
or
je
loope
xor
jae
xor
imul
lds
inc
test
mov
test
mov
xchg
pop
cmc
int
outsl
mov
dec
jb
fidivrs
lret
and
hlt
jmp
add
lds
adc
pop
push
fidivs
inc
mov
mov
xor
dec
lock
jl
pop
push
mov
sbb
pop
sahf
jbe
andl
push
ljmp
xchg
adc
fistps
aad
test
cmp
or
cmp
jb
dec
mov
arpl
mov
and
sub
sbb
inc
add
jp
or
fidivl
add
into
ss
mov
adcl
aam
fidivs
inc
cmpb
and
lcall
loope
add
nop
or
stos
cs
into
push
arpl
jl
sub
xchg
iret
sbb
movsb
call
mov
add
inc
mov
push
add
lahf
inc
inc
pop
cmp
push
or
dec
loope
fs
rorb
imul
mov
or
into
sahf
adc
mov
in
pop
cmpsl
push
or
add
inc
and
lret
enter
xor
scas
inc
pop
roll
inc
jae
xor
jns
mov
add
call
mov
rorl
xlat
xlat
or
adc
jp
sarb
loopne
cmpsb
stos
pop
aad
sbb
inc
std
jle
add
pop
cmp
les
adc
nop
mov
sub
pop
aaa
push
lcall
popf
or
loop
mov
iret
mov
push
dec
ret
test
inc
mov
xor
and
iret
mov
xchg
and
daa
cld
adc
adc
fsubr
xor
adc
lock
and
push
xchg
addl
addl
shrl
je
mov
sbb
std
rolb
mov
and
sub
xchg
lock
or
lds
mov
xlat
sbbb
ss
fcomp
in
pop
or
pop
cmpsb
dec
sarb
jae
fdivr
and
mov
call
shrb
or
xchg
stc
bound
mov
test
in
mov
inc
out
outsl
and
or
inc
pop
addb
sbb
and
mov
add
clc
or
jp
loopne
cmp
inc
lea
sbb
decb
movl
ss
mov
mov
or
push
pop
mov
cmp
sbb
sub
xor
sbb
inc
pop
push
mov
aam
push
mov
movsb
sar
mov
dec
test
adc
xor
rcrb
cmp
cmp
std
xor
jbe
xchg
out
push
xor
sbb
adc
fwait
mov
mul
cmp
movsl
cmpsb
xchg
ret
movsb
sbb
add
cmp
in
mov
movsl
dec
repz
jo,pn
mov
js
popf
sub
mov
or
mov
pop
pop
sbb
into
add
test
sub
adc
and
test
test
xchg
stc
shlb
sahf
shl
inc
subb
add
mov
xchg
and
fldenv
xor
fnsave
jle
dec
inc
jno
leave
sbb
mov
and
shll
mov
sbb
push
mov
push
out
or
xor
mov
mov
enter
or
mov
or
movsb
sub
xor
rorl
add
inc
or
mov
fsubr
shlb
mov
pop
in
sbb
inc
jae
xor
mov
pop
rcr
je
cs
out
cmpsb
cwtl
mov
cmp
andb
mov
or
je
sbb
repnz
addl
scas
lahf
in
jge
loop
bound
pop
xor
xlat
movsb
insl
ret
push
daa
pushf
scas
testb
cltd
iret
jae
or
mov
jo
fs
daa
inc
daa
mov
pop
pop
and
cmpsl
jg
xor
test
int3
enter
nop
dec
outsb
loopne
dec
jecxz
add
repz
and
sub
loop
dec
mov
stos
mov
dec
cltd
in
out
xor
jmp
inc
push
push
or
cmp
push
clc
stos
inc
adc
or
sarl
cmp
inc
enter
loopne
inc
mov
ret
xchg
shlb
in
adc
or
add
stos
das
dec
fcomps
lret
loopne
inc
mov
jno
les
rorl
inc
das
lret
subb
jo
sti
and
mov
xchg
clc
adc
leave
ljmp
sbb
add
add
movsb
push
push
adc
adc
sbbl
xor
and
pop
nop
adc
dec
ja
pop
sbb
xchg
jp
xor
fld
pop
jmp
or
mov
mov
jl
shlb
fisubrl
std
js
add
movsb
fstpl
push
adc
gs
lret
sbb
lods
or
movsl
or
inc
ret
lods
loope
insb
int3
in
data16
mov
add
xchg
andl
cmp
sub
int
add
into
lret
mov
ret
jbe
cmp
test
jnp
movsb
mov
je
mov
nop
mov
and
inc
push
leave
xor
mov
js
jo
sbb
test
push
jbe
xlat
loop
cmp
mov
int3
pop
test
js
lds
test
mov
mov
xchg
ljmp
aad
mov
in
or
out
pop
in
shr
orb
sbb
pop
mov
or
repnz
xor
xchg
loopne
mov
hlt
jecxz
sbb
xor
loop
loopne
dec
fistps
inc
adc
in
adc
icebp
jmp
dec
xchg
add
sub
pop
inc
lods
lods
mov
sbb
and
push
add
lea
or
sub
lods
push
andl
out
adc
adc
pmovmskb
loop
push
rorl
mov
in
mov
inc
adc
lds
inc
rorl
test
enter
dec
dec
rolb
lock
and
jnp
push
sbb
out
ret
lret
add
inc
jmp
xor
stc
cmp
inc
ficoms
pop
mov
and
es
test
xor
jo
jo
sub
dec
jl
loop
or
add
pop
inc
cmp
dec
sahf
insb
cmp
add
push
lock
sub
aam
mov
jmp
jo
lock
stc
add
pop
xchg
mov
enter
mov
mov
mov
pop
xor
jg
or
sbb
scas
xor
inc
or
sub
insb
ds
movsl
xor
pusha
inc
sarl
inc
cmc
es
rcll
int
sbb
in
xchg
push
pop
add
ret
lcall
call
dec
mov
and
and
fisubrs
sub
pop
mov
dec
ljmp
mov
addr16
test
cmpsl
pop
add
push
jl
dec
add
or
daa
or
mov
adc
add
xor
nop
nop
test
subb
je
mov
or
inc
mov
dec
add
add
fistpl
lea
aam
cmp
hlt
sahf
add
insl
les
fwait
dec
mov
sub
add
push
add
mov
mov
xlat
enter
sub
out
imul
jno
mov
nop
push
sbb
and
jge
jle
fstps
push
jbe
inc
push
insb
xor
andb
enter
pop
fsubrs
inc
inc
test
dec
dec
test
adc
dec
push
leave
je,pn
hlt
pop
pop
cli
or
daa
pop
int
push
mov
sbb
xchg
ret
stos
jl
and
and
out
pop
sbb
lods
js
and
cmp
sar
push
call
loope
mov
adc
pusha
mov
or
cmp
into
je
out
in
int3
xchg
xlat
lea
sub
pop
or
ss
lret
jne
pop
sbb
add
xor
adc
pop
adc
ljmp
xchg
lret
adc
push
loope
adc
fs
xchg
ja
pushl
xchg
scas
xlat
int3
arpl
push
mov
mov
push
adc
outsb
inc
push
or
add
fiaddl
push
pushf
fstl
or
ja
mov
mov
inc
push
lea
mov
aaa
pop
sbb
jne
xchg
mov
adc
lret
pop
cmpxchg8b
into
xchg
xlat
aam
loopne
adc
cmp
je
jno
jnp
in
mov
push
divb
xchg
faddp
pshufw
sbb
popf
pusha
inc
cli
clc
push
sti
and
loope
test
movsl
scas
nop
lods
push
push
shlb
or
aas
lahf
call
insl
jecxz
push
xchg
dec
aam
adc
push
rep
add
cli
repnz
lock
add
xchg
pop
push
xor
test
jp
lcall
and
mov
frstor
testb
mov
adc
xor
lea
adc
xlat
jmp
push
mov
xchg
fs
jno
shll
push
js
das
jne
mov
cmp
cmp
dec
jno
sbb
cmp
subb
jae
dec
mov
lahf
stos
nop
fadd
stos
movsl
jo
add
add
and
sti
add
data16
add
mov
mov
lods
push
in
aas
sub
or
adc
insb
add
push
cmp
pop
xchg
jb
push
push
jp
sub
shlb
sub
test
or
aam
inc
mov
das
fs
addr16
push
push
imulb
icebp
pop
addr16
mov
cmp
mov
insl
add
cmp
std
mov
cmp
sbbl
nop
mov
incb
xchg
stos
sbb
pusha
push
cmpsl
and
shr
pop
pop
je
lds
adc
cmc
sub
jl
mov
pop
sbb
fadds
loopne
daa
jnp
test
jl
addl
add
add
push
lods
inc
xor
mov
dec
mov
scas
inc
shl
iret
sub
adcl
out
aam
shlb
mov
sub
mov
prefetch
or
sahf
scas
sbb
loop
jae
addl
popf
and
push
xor
mov
add
aad
mov
je
xor
push
mov
mov
arpl
mov
in
mov
sar
cld
push
cmp
call
shrl
sbb
inc
cs
mov
jo
nop
cmp
es
rorb
daa
cmp
movsb
xchg
adc
pop
fadds
jae
and
or
lock
and
pushf
aaa
adc
outsb
xchg
sti
loope
pop
or
ret
popa
pop
psrad
mov
popa
sahf
inc
adc
pop
jmp
jl
jp
push
loopne
mov
add
test
push
es
cmpsb
dec
lds
loop
lods
add
sbb
xlat
lret
xchg
js
sub
or
sti
sbb
sahf
pop
mov
and
mov
sti
inc
std
fxtract
mov
or
lahf
jb
fiaddl
std
mov
imul
cli
mov
inc
lcall
rcll
sahf
and
sub
or
call
popf
nop
pop
cmp
inc
mov
dec
stc
mov
cmp
push
inc
scas
mov
lret
cmp
adc
pop
ljmp
cld
mov
mov
inc
push
into
test
add
xor
mov
push
jno
aam
cwtl
cwtl
or
pop
sbb
aas
jo
addl
repnz
cli
bound
fs
adc
or
ja
jge
repz
jmp
in
pop
sub
dec
pusha
mov
add
and
inc
mov
push
push
sub
push
rcll
nop
push
xchg
and
je
xchg
push
out
mov
test
adc
mov
aad
inc
sub
int
xor
movsb
shl
loopne
inc
ja
pop
mov
stos
mov
cmp
lea
push
in
pop
dec
adc
lcall
mov
or
dec
into
mov
faddp
xchg
out
pop
out
addl
call
mov
push
add
mov
lock
jbe
loop
push
js
daa
test
je
dec
add
leave
jecxz
loop
mov
hlt
xchg
int3
pop
mov
cmp
push
sub
add
fwait
jne
pop
lock
mov
pop
or
mov
add
add
lahf
or
push
out
nop
loop
icebp
insb
xchg
jno
popa
in
aad
dec
dec
loopne
jp
xchg
inc
sahf
test
mov
sub
mov
and
cmc
xor
rcll
add
xchg
stos
xchg
add
or
gs
shl
mov
inc
and
adc
aam
cmc
inc
mov
jmp
inc
xchg
mov
enter
push
ljmp
adc
mov
push
sbb
jns
enter
mov
mov
add
jp,pt
popf
daa
lods
cmp
call
xchg
sub
xchg
jo
nop
shll
addr16
mov
loopne
outsl
add
sub
arpl
lds
rolb
fidivrl
dec
fadds
add
pop
inc
mov
mov
pop
cmp
mov
and
enter
nop
sar
push
pop
call
int
cmp
ljmp
lods
push
adc
and
dec
jbe
dec
inc
movb
jno
movsl
sub
sahf
cmp
fs
sub
aas
sub
push
xor
sub
inc
and
stc
mov
insb
adc
pusha
jnp
stc
push
adc
adc
jmp
xchg
cmpl
out
imul
movsl
add
outsb
sti
js
inc
lds
cld
and
ret
mov
cmpsb
out
inc
daa
iret
clc
lea
outsb
inc
int
negb
pusha
cmp
or
addr16
mov
scas
pop
test
dec
push
mov
test
test
stos
xchg
adc
mov
shll
cmc
inc
pop
lea
xor
xchg
sbb
xchg
adc
stos
cmp
cmp
loopne
inc
and
les
sarl
pop
enter
push
sub
jmp
and
arpl
push
xor
sub
loopne
and
repz
lcall
push
popa
push
aaa
jbe
sbb
xor
sub
call
in
fs
ljmp
loop
jl
mov
pop
loope
sarl
shl
adc
in
mov
lcall
and
mov
stos
pop
lods
inc
mov
leave
sbb
or
ljmp
jmp
ret
add
cs
rcr
imul
cmp
adc
andb
data16
sbb
mov
dec
pop
sbb
jecxz
pop
add
push
dec
femms
add
scas
mov
jmp
mov
shl
cltd
or
mov
lret
and
pop
cmpsb
inc
add
and
in
push
push
shl
and
cwtl
daa
inc
test
jle
hlt
inc
or
mov
xchg
aaa
or
divb
and
popf
xor
into
cmc
addb
aam
mov
cmpsb
push
sub
repnz
push
sbb
ss
ret
pop
pusha
adc
imulb
add
dec
mov
ret
inc
pop
and
adc
dec
pop
das
push
cs
sub
dec
sbbl
cmpsb
add
and
sub
and
rclb
inc
pusha
test
ds
sbb
lret
adc
mov
in
ljmp
and
xorl
push
fs
pushf
xchg
movsl
shll
jl
lret
xchg
mov
mov
insl
or
ret
loope,pt
and
and
jns
mov
lcall
sub
ret
mov
inc
jmp
movsl
dec
or
xor
gs
push
aad
sbb
or
lret
and
out
in
pop
jle
mov
add
sbb
mov
mov
sbb
or
xor
cld
repnz
pushf
and
js
mov
or
dec
jge
hlt
shr
cld
loope
int
jmp
inc
int3
fwait
es
cmp
aam
mov
mov
xlat
mov
mov
sahf
xorb
adc
sbb
inc
fcompl
int
mov
jmp
mov
and
mov
rcr
lods
popf
push
add
xor
in
rolb
cmp
add
jecxz
add
shr
loope
je
shrb
addb
dec
ss
call
test
stc
push
shrb
mov
fisttps
enter
call
in
andb
lret
out
cmc
dec
dec
pushf
outsl
hlt
pop
and
sbb
or
inc
mov
mov
mov
decb
sub
cld
fisubs
in
icebp
add
pop
cmp
mov
lret
cli
push
push
push
xor
scas
ds
sub
lret
outsb
xor
xor
sarl
pop
or
mov
push
lahf
mov
rclb
gs
xchg
pop
sbb
add
sbbb
add
and
iret
sub
jmp
mov
xchg
mov
daa
or
adc
out
js
ja
lcall
scas
sub
cli
cmpsb
or
push
test
test
aaa
sbb
adc
pusha
adc
fsubrs
pop
or
ds
or
add
xchg
lods
addb
arpl
cmp
mov
fisubrl
les
xchg
xchg
nop
sbb
test
shrl
xchg
insl
insl
aam
or
cmp
push
js
ret
and
mov
repnz
std
and
fistpl
push
lcall
sarl
rcl
mov
aaa
clc
or
jbe
dec
cmp
adc
mov
push
sbb
sub
test
mov
or
fwait
sbbl
lea
nopl
inc
xor
and
out
mov
jle
add
xorb
dec
mov
cmpsl
test
fmuls
pop
inc
shr
pop
in
test
loop
test
and
insb
loop
push
inc
icebp
ljmp
fucom
and
lods
loopne
lret
movsl
test
jbe
clc
adc
les
fldt
loope
cmpb
xchg
jae
je
and
and
lods
or
push
push
ljmp
adc
loopne
test
mov
pop
push
xchg
ja
push
pop
mov
adc
pop
sar
jb
push
notl
and
push
cmp
mov
pushw
orb
roll
nop
sarl
mov
xchg
fcom
arpl
je
mov
test
cmp
sbb
mov
adc
xor
or
in
nop
push
aas
and
push
sub
adc
cmpsb
or
leave
xor
inc
inc
add
pop
inc
mov
scas
mov
mov
fisttps
pop
icebp
outsb
ret
or
xchg
mov
icebp
bound
popf
jmp
test
sbb
subl
mov
aaa
sbb
mov
enter
out
bound
test
adc
idiv
je
test
lahf
mov
icebp
loope
in
cmp
sbb
push
mov
inc
mov
icebp
loope
cmp
jo
xor
cmp
dec
cmp
or
test
movl
std
mov
jmp
ljmp
loop
pop
push
xchg
pop
lock
mov
out
clc
fst
pop
adc
fistl
repnz
mov
push
jbe
mov
out
adcb
out
sbb
cbtw
leave
aad
xchg
inc
mov
cmpsb
mov
xchg
ja
mov
pop
mov
testl
insb
popa
shrb
sarl
sbb
xchg
pop
and
mov
mov
bound
js
fists
and
fwait
and
and
sub
fcmovnbe
jg
loop
cmc
lock
jge
ljmp
sub
xchg
sbbb
loop
cli
xchg
repz
or
lods
sub
stos
add
nop
sbb
popa
or
rcl
stos
ds
repnz
ja
arpl
nop
xor
sbb
or
jno
sbb
or
xlat
test
jmp
inc
pop
pop
test
aam
sbb
divl
pop
xchg
push
or
es
adc
or
lods
repnz
mov
xor
push
or
pusha
or
js
in
in
push
fildl
movl
push
push
in
imull
lret
out
std
jl
mov
pushf
xchg
dec
jae
fwait
or
jecxz
mov
loop
mov
fnsave
imul
idivb
testl
adc
and
dec
clc
sbb
jae
or
test
rcll
cmp
mov
and
insb
inc
pop
cmp
sub
mov
test
xor
push
dec
push
scas
xchg
andl
mov
test
xor
popf
aam
adc
and
sub
jb
and
pop
repnz
mov
rorl
cwtl
mov
jo
push
ds
mov
pushf
aas
fcomip
sbb
inc
pop
ficoms
jb
jge
int
inc
push
test
enter
and
jno
test
inc
and
ret
or
rorb
dec
clc
movsb
sbb
mov
and
enter
and
lea
or
cs
and
adc
mov
mov
in
loope
int
pop
cli
and
jb
in
jl
lahf
insb
test
fadds
inc
sub
jbe
jno
sbb
jmp
push
push
mov
sub
loop
mov
cmp
xchg
dec
xlat
adc
fnstsw
stos
jno
sbb
adc
sub
fldenv
sub
push
iret
xchg
adc
aas
mov
cmp
xchg
inc
sbb
jbe
out
mov
popa
mov
jle
ljmp
or
test
cld
and
je
lahf
dec
out
dec
addr16
and
es
pop
stos
arpl
addr16
daa
push
cld
dec
je
mov
sub
cmp
or
stos
out
mov
mov
ds
inc
popa
sub
mov
aam
cmp
mov
enter
fwait
jle
sbb
jg
pop
mov
add
cwtl
scas
sbb
and
or
je
or
push
dec
sbb
mov
pcmpeqb
and
mov
mov
push
and
ds
jp
jbe
pop
jge
inc
lahf
cmp
enter
jp
in
sbb
mov
sub
lcall
inc
sbb
inc
rol
in
push
nop
add
add
stos
jo
push
es
sub
orl
ljmp
pop
mov
dec
inc
inc
and
and
jo
cltd
pop
pop
jg
movsb
movsb
add
xor
stos
sub
test
das
or
mov
cmp
in
insl
jmp
rorb
mov
mov
add
fdivl
repnz
mov
shlb
xchg
mov
cmp
pop
aam
call
lahf
test
dec
arpl
or
push
ret
les
fdivrs
loop
icebp
jne
cmp
adc
xor
push
cmp
cli
stos
xchg
daa
mov
xor
js
xchg
stc
cmc
add
leave
pop
call
dec
outsl
xchg
out
repz
jmp
leave
sbb
nop
loop
cmp
xor
enter
test
sbb
pop
aaa
lods
sbb
inc
testl
add
pushf
inc
roll
fisttps
and
dec
mov
adc
test
and
mov
sub
mov
clc
xchg
xor
loopne,pn
mov
cmc
or
mov
mov
pop
lock
addb
add
push
sbb
xchg
bound
pop
or
jp
add
gs
aad
pop
imul
scas
outsl
lret
push
outsl
in
cmp
fidivs
mov
xchg
xor
mov
mov
pop
or
lods
rcrb
push
in
ja
dec
adc
test
push
fdivrs
aas
cmp
mov
push
dec
dec
push
and
aad
repnz
enter
push
shlb
pusha
xchg
mov
fmull
into
cli
add
push
jb
adc
in
xor
sbb
mov
enter
bound
ss
mov
popa
aas
dec
xor
ljmp
jnp
xchg
mov
test
mov
nop
push
int
push
fdiv
movl
mov
dec
push
and
and
mov
inc
sub
sbb
mov
leave
xor
loope
lahf
inc
inc
jne
pop
je
ret
ljmp
xor
imul
ss
icebp
shrl
jecxz
add
inc
enter
dec
push
dec
or
inc
dec
out
jecxz
add
aad
jo
pop
test
movsl
pop
add
fdiv
and
insl
lret
sbb
add
jb
or
aad
in
add
mov
aaa
lcall
popa
push
scas
and
mov
jmp
cwtl
mov
jmp
sbb
divl
jb
dec
add
or
xchg
sub
popf
out
arpl
and
sub
pusha
push
aas
or
push
insl
xchg
add
ljmp
bound
sbb
stos
dec
in
fsubs
mov
test
test
in
and
scas
and
loopne
iret
cmc
lock
dec
pop
lock
test
addb
and
orl
ds
pop
add
pusha
or
mov
push
aaa
pop
add
mov
and
scas
test
pop
jmp
mov
xchg
mov
test
sub
std
push
cmp
cld
data16
adc
ss
cmpsl
push
xor
lret
lods
inc
fsubl
lock
into
repz
sbb
dec
jge
sbb
cli
xor
scas
pop
adc
lds
mov
cmp
jns
xchg
test
pop
mov
ds
sub
clc
test
loopne
dec
cmp
dec
outsl
repz
dec
clc
mov
mov
jge
aas
push
stos
xchg
lods
add
xor
add
inc
adc
jg
push
cmp
xor
nop
adc
pop
adc
inc
add
xlat
clc
cmp
fmull
lea
xchg
sbb
xor
rol
add
cmp
push
add
sub
in
test
push
imulb
xchg
test
adc
xchg
addr16
or
sbb
pop
xchg
and
ss
shl
or
dec
and
repz
ror
cli
mov
dec
rcrl
jmp
mov
dec
push
xor
lds
clc
mov
rorl
cmp
mov
pop
mov
js
test
outsl
pusha
out
xor
jo
xlat
movsb
aas
xchg
push
add
cld
repz
mov
popa
pop
xchg
xor
adc
adc
pop
out
pop
mov
inc
mov
andb
mov
and
lahf
adc
rolb
push
mov
or
or
fdivrs
nop
sbb
push
outsl
mov
add
test
rorb
or
or
jecxz
inc
sahf
jo
insl
or
sub
sbb
sub
xchg
dec
pop
mov
ds
fisubrl
ret
maskmovq
idivl
movsb
jo
mov
push
push
in
clc
inc
clc
cld
das
subl
inc
inc
popa
sub
movl
xchg
xor
and
mov
mov
dec
push
inc
jg
repz
mov
mov
hlt
pusha
lcall
cmp
loope
or
push
push
jnp
mov
dec
pop
sbb
inc
mov
sub
pop
negb
fs
dec
out
inc
mov
sbb
sbb
sbb
sbb
add
shrb
dec
add
jb
adc
in
movb
shrl
pop
shll
pop
sbb
call
and
mov
mov
shll
mov
inc
ret
lea
and
xor
jge
add
or
repz
cltd
adc
xchg
rol
push
push
and
jo
add
dec
or
rolb
mov
add
addl
mov
popa
repz
adc
mov
in
fmul
dec
add
pop
xlat
push
cmp
sbb
add
jmp
enter
repnz
movsb
enter
cmp
pop
data16
add
fnstsw
fimull
notl
fs
push
push
mov
or
daa
in
adc
imul
cmp
push
jns
cltd
mov
jg
sub
rolb
xorl
xchg
sub
push
inc
and
pushf
rolb
push
cmp
int
pop
inc
out
call
add
sbbb
idiv
cmp
lret
adc
movsb
out
pop
sub
inc
fstpl
into
je
dec
adcl
mov
add
inc
or
jg
roll
lods
lods
push
mov
fdivrs
or
xchg
push
or
push
iret
lret
orb
movsb
test
jl
jp
in
and
js
cmpsb
xchg
xor
add
add
iret
lret
adc
aaa
lock
mov
mov
adc
xchg
ret
inc
mov
or
pushf
lahf
addr16
mov
jle
in
js
cmc
pop
in
jl
mov
jl
inc
add
bound
or
pop
add
aas
xor
out
xor
sti
sti
and
or
outsl
fnstcw
call
push
adc
mov
push
push
mov
push
jmp
add
or
or
push
imul
sbb
inc
rcrl
cmpsb
ror
and
lret
sub
or
jnp
adc
sub
xchg
inc
xchg
mov
cli
adcl
pop
push
add
sbb
fistl
xor
adc
cmp
shll
fcomip
movsb
in
sbbl
add
push
imul
add
mov
cmp
sub
dec
add
mov
scas
add
adc
sub
stc
mov
les
bnd
xchg
cld
xor
popf
lret
outsl
scas
lcall
adc
pop
adcb
insb
stc
mov
enter
pop
inc
mov
mov
lcall
dec
inc
mov
mov
add
stos
test
add
insb
jp
add
pop
adc
popa
cmpsb
das
test
inc
add
adc
xchg
pop
bound
sahf
xchg
outsl
mov
and
test
in
mov
jbe
mov
push
leave
cmpsb
pop
dec
insb
adc
dec
cmc
push
push
outsb
icebp
movsl
in
mov
mov
ud1
inc
adc
push
or
addb
enter
shlb
mov
sub
clc
pop
adc
add
and
dec
push
fsubs
inc
lds
push
ret
sub
arpl
lods
mov
sub
outsb
inc
add
push
insl
mov
ja
mov
rcll
aaa
and
lods
mov
pop
push
je
mov
dec
das
xchg
push
inc
adc
jne
repz
mov
push
mov
mov
mov
push
movsb
lahf
addr16
adc
mov
daa
in
loop
sbb
aaa
adc
aaa
adc
ljmp
push
mov
test
and
les
push
add
cltd
dec
std
pop
sub
cmpsb
dec
inc
fisttpll
test
fnstenv
cmp
push
cmp
clc
push
in
dec
or
cld
std
push
lods
divl
stos
mov
jl
dec
aaa
and
pop
outsb
lret
shlb
add
lcall
in
jge
mov
out
and
xor
mov
data16
inc
jne
xlat
ja
aas
or
jbe
fiadds
and
cmp
xchg
outsb
mov
mov
adc
imul
dec
mov
add
gs
addl
push
mov
inc
pop
jp
aad
jmp
cs
mov
cmp
frstor
push
or
inc
mov
pusha
fldlg2
inc
jae
pop
mulb
adc
bound
xchg
aam
adc
out
jl
popa
hlt
notb
pop
and
cmp
mov
mov
into
add
mov
dec
mov
pop
pusha
xchg
sbb
dec
rorb
icebp
shr
jae
or
pop
push
sub
cmc
jmp
mov
add
ds
fadd
adc
nop
sbb
sub
xchg
adc
or
outsl
ficoms
add
xchg
add
mov
lds
cmp
jl
es
adc
in
inc
or
adc
xor
sbb
sbbl
or
lock
adc
jmp
mov
mov
ss
aam
mov
test
lock
lods
clc
inc
mov
inc
ret
mov
inc
xchg
mov
dec
or
scas
pop
dec
hlt
or
mov
fs
add
lods
dec
js
ljmp
push
rcll
shl
test
in
fisubrl
inc
mov
loope
lret
clc
ret
daa
lock
mov
lea
orb
cmp
icebp
test
add
test
stc
or
xchg
sbb
cmp
int3
and
sbb
frstor
or
xorb
rolb
outsl
dec
adc
xor
lods
leave
xor
push
sbbb
mov
add
fimuls
ffreep
xchg
and
add
pop
mov
insb
outsl
mov
in
inc
inc
mov
popa
inc
adc
mov
mov
sahf
push
cmpb
jnp
sub
pop
pop
and
pop
add
add
cs
pop
mov
xchg
pop
sbb
pop
push
das
add
loope
jae
cld
sbb
test
jg
das
xchg
lret
dec
ret
aam
adc
dec
cli
pop
leave
sbb
addr16
ud0
fwait
add
and
sbb
int3
xchg
mov
in
mov
cmp
pusha
daa
outsl
push
mov
mov
pop
sti
aam
lds
xor
or
pushf
mov
pop
or
adc
add
sbb
hlt
jne
xchg
mov
mov
add
add
je
pop
popa
inc
add
int3
mov
jbe
loope
lcall
cltd
xor
push
mov
movsb
ret
loop
rorb
mov
aas
sub
cwtl
sbb
stc
sbb
pop
repz
cltd
add
rcrl
or
test
jne
lods
mov
jp
add
cmp
xor
inc
popa
scas
cmp
iret
mov
mov
mov
out
mov
xchg
out
xlat
pop
mov
xor
rcrl
add
sti
enter
inc
cmpsl
loop
jp
pop
add
lret
scas
cmp
and
sbb
adcl
pop
jmp
push
adc
pop
icebp
add
in
pop
or
xor
dec
mov
imul
mov
pop
cmp
mov
pusha
imul
insl
mov
pop
shr
adc
mov
in
cwtl
cli
cmp
xchg
adc
insl
jle
mov
jne
inc
sub
and
aas
mov
xor
lahf
mov
sub
push
add
add
imul
jns
ja,pt
ret
fcmove
add
fstpt
jbe
xor
adc
out
cmc
mov
pop
lret
shll
addl
xor
push
fildll
test
out
jge
xor
dec
data16
adc
mov
mov
jns
bound
adc
and
sub
adc
dec
cmp
movsb
pop
pop
pop
xor
xchg
mov
cmp
stos
or
push
lds
xchg
push
sbb
mov
add
add
mov
cmp
add
call
in
filds
or
adc
push
push
outsl
cwtl
popa
fldenv
mov
mov
cltd
ret
out
xorb
dec
dec
and
scas
cmpsl
add
xchg
push
xchg
mov
test
jge
mov
pop
sub
lds
add
aad
pop
je
nop
jge
sbb
dec
rorb
test
inc
stc
test
mov
push
xchg
mov
sbb
add
mov
fcoms
pop
push
or
sbb
mov
repnz
pop
lods
sbb
or
xor
xchg
xchg
popa
arpl
mov
leave
pop
repnz
mov
scas
inc
xor
adc
mov
ds
ljmp
jns
xor
sub
arpl
lock
test
orl
hlt
lea
jp
push
cmpb
sbb
adc
cmp
ret
adc
in
outsl
mov
sub
adc
dec
jmp
call
xor
cmpsb
arpl
mov
or
adc
mov
add
sub
pop
push
sbb
clc
pop
ret
das
jecxz
mov
lock
xchg
sub
mov
push
aas
xchg
xchg
dec
xchg
sbb
popa
inc
ret
ss
dec
clc
pop
pop
or
stos
es
dec
out
and
xchg
push
stos
mov
int
or
outsb
pusha
adc
fildll
decl
andb
rcrb
push
enter
sbb
rolb
call
pop
or
xor
pop
mov
clc
xor
adc
dec
or
aaa
cmpsb
stos
mov
inc
push
inc
mov
jbe
mov
xchg
dec
sbb
pop
push
inc
popa
pusha
push
adc
xchg
sub
cld
cmp
jmp
and
dec
js
xchg
mov
rclb
sbbb
test
dec
ss
pop
cwtl
imul
or
rcr
pop
mov
push
pop
lea
insb
daa
iret
xor
pop
repnz
pop
outsl
pop
push
inc
testl
jge
push
xor
ja
add
les
ss
test
pop
outsl
pop
mov
pusha
jne
les
and
mov
hlt
push
cmp
ret
add
mov
or
sub
xorl
sbb
shlb
sarb
mov
jmp
pop
sub
fdiv
cli
ret
adc
insb
sbb
lea
sarl
and
stos
mov
pop
icebp
xor
fistl
sbb
iret
and
ret
xor
or
rorb
shll
sarl
jp
and
pop
das
or
xor
inc
mov
pop
lahf
and
cmp
and
aaa
movsl
nop
cmp
jnp
xchg
popa
xchg
not
data16
sbb
mov
out
out
cmp
pop
pusha
aam
inc
add
add
orb
push
int
push
das
jae
xchg
add
daa
sbb
cli
xor
ss
or
add
movsb
cltd
pop
xor
sbbl
jl
lahf
jge
inc
adc
add
push
pop
cld
add
ds
sahf
adc
addr16
leave
mov
mov
pop
lods
adc
pop
in
sub
xchg
adc
jbe
jmp
scas
jns
mov
mov
cmp
inc
pop
int
test
sbb
xchg
add
push
jp
or
cmp
popl
inc
ds
add
cmp
fbld
in
shlb
mov
lcall
adcl
lahf
mov
or
mov
mov
mov
push
mov
bnd
call
pop
pop
and
pop
fildl
cmp
lcall
js
insb
mov
mov
pop
dec
xor
sub
hlt
xchg
mov
test
loopne
pusha
adc
insl
je
hlt
and
mov
push
adc
adc
push
pop
sbb
testb
addl
movsb
push
xor
int
xchg
roll
gs
lret
inc
push
cmpsb
stos
jne
pusha
mov
push
mov
ds
sub
fsubp
dec
dec
test
scas
fstpt
push
sbbl
xchg
aaa
les
popf
pop
jne
adc
xchg
in
push
divl
mov
inc
xor
add
lahf
fidivs
nop
mov
inc
jb
cmpsl
pmullw
inc
dec
fld
xor
in
xchg
inc
mov
push
adc
add
adc
fucomi
pop
lock
mov
and
inc
push
jns
inc
test
pop
mov
enter
jns
sti
adc
and
or
mov
scas
mov
xlat
out
insb
loopne
adc
xchg
mov
inc
adc
push
mov
push
into
dec
leave
and
push
mov
xchg
mov
es
shl
xor
test
icebp
pop
adc
lcall
imull
mov
shrl
nop
jp
loopne
call
icebp
int3
cmp
sbb
mov
cld
sti
rcl
inc
sbb
adc
jbe
sbb
xchg
pcmpeqd
pop
out
dec
pusha
and
adc
lods
movsl
mov
and
popa
ficoml
call
out
sub
sbb
loopne
jecxz
sbb
push
pop
movsl
shlb
in
mov
add
mov
push
jbe
insb
pusha
movsb
adc
or
adcb
scas
int3
in
dec
cmp
popa
mov
lcall
or
orb
or
cmp
mov
in
push
mov
xchg
mov
testb
mov
orb
mov
roll
push
ja
out
loope
ret
mov
in
xor
add
aam
cltd
add
es
fisttpll
sahf
aaa
fbstp
dec
adc
mov
add
mov
std
in
movsl
mov
jmp
nop
or
cmpsb
push
fisubrl
mov
fmull
sbb
in
mov
cmp
inc
cmc
in
jl,pn
sti
aas
je
js
into
sub
xchg
push
pop
aaa
xchg
adc
xchg
nop
loopne
daa
or
sbb
lcall
gs
jg
fdivl
xchg
mov
adc
mov
mov
and
js
ficompl
jle
fstl
xchg
aas
dec
inc
or
rcll
stos
pop
and
loope
jp
inc
jbe
fsubl
iret
xchg
in
iret
roll
mov
adcb
es
cmc
mov
or
sbb
adc
testb
lahf
repz
jno
ljmp
xor
push
jl
sub
pop
push
lods
je
add
js
pop
push
add
lahf
cld
mov
inc
ficoml
gs
icebp
sbb
clc
movsb
ss
aam
fstpt
cmp
xchg
out
inc
cli
add
xchg
or
add
mov
mov
push
inc
and
aaa
dec
imul
adc
fs
sbb
inc
push
pop
or
fidivs
int
or
and
mov
data16
add
cld
mov
scas
popa
je
rorl
loopne
cmp
stc
lods
add
nop
xchg
dec
addl
loopne
and
push
jg
sub
cmp
das
inc
or
mov
mov
pop
push
push
pop
add
jecxz
test
jno
cmp
cmp
stc
add
jns
jmp
shlb
out
in
imul
pop
adc
aad
mov
stos
jne
repz
adc
lods
clc
adc
test
ss
pop
mov
aam
pop
imul
dec
pop
push
cmp
insb
inc
iret
dec
sbb
iret
aad
cwtl
cmpsb
jmp
cld
repz
xorl
lret
lock
or
sub
fidivs
lds
mov
adcb
arpl
xorl
mov
xor
xchg
arpl
lahf
sbb
adc
xchg
ffree
sti
pop
or
ret
mov
stos
call
cmp
mov
xor
fsts
cmp
pmulhw
jne
sbb
or
xor
hlt
mov
ss
and
fcmovu
pfmin
flds
or
cmpsl
fisubs
inc
cmp
js
mov
mov
dec
and
mov
push
jle
jmp
stos
inc
fcomi
push
lea
dec
dec
add
mov
mov
adc
je
mov
add
and
pushf
push
stos
sbb
inc
jg
rcl
dec
rolb
cmp
mov
mov
and
inc
xchg
jp
cmp
add
mov
ret
repnz
jb
xor
dec
pop
adc
xchg
add
inc
leave
test
fs
inc
lea
push
xchg
mov
mov
or
mov
movsb
push
bound
cmpsl
mov
sbb
mov
testb
popf
stos
mov
xorl
sub
test
outsb
fs
sub
ljmp
ja
adc
mov
inc
stc
mov
dec
or
ffree
jecxz
test
xlat
jne
sbb
push
stos
movsb
push
jle
inc
pop
movsl
or
addb
test
mov
mov
add
loope
std
mov
movsl
repz
std
and
pop
enter
xor
inc
add
xor
push
cmc
add
je
cmc
xchg
out
ljmp
add
fwait
lods
pop
jb
or
adc
adc
xchg
pop
dec
add
adc
out
mov
dec
rolb
or
movsl
or
aad
test
xchg
les
cmp
mov
out
xor
mov
jbe
nop
xchg
cmpsb
and
lret
mov
mov
mov
lods
ret
push
cltd
andb
clc
cmc
dec
dec
idivl
mov
sub
scas
adc
or
fisubrs
cmpsb
scas
repz
cmp
mov
int3
repnz
or
cwtl
rclb
or
in
hlt
add
leave
repnz
adc
rolb
dec
or
sarl
inc
ret
jl
pushf
ljmp
xlat
jmp
xchg
pop
push
mov
cmp
pop
sbb
pop
or
add
repz
nop
push
je
inc
cmp
into
pop
dec
mov
out
add
mov
jle
inc
jne
stc
roll
lret
rcl
cmpsl
pop
lahf
popa
xchg
test
lret
test
mov
jecxz
sub
mov
scas
jnp
and
pop
dec
lods
inc
jge
inc
and
push
add
xchg
pop
iret
ret
cmc
mov
cmp
pop
mov
les
push
daa
subb
test
adc
cmp
repnz
or
jne
add
mov
ret
and
jle
inc
add
pop
jmp
mov
imul
sub
mov
mov
stos
out
ss
stos
xor
pop
hlt
mov
std
jae
daa
sub
pop
mov
mov
jae
push
in
mov
cltd
pop
cmp
test
mov
dec
fisttpl
mov
or
ds
sbb
in
add
ret
sub
push
sub
ja
xor
or
push
mov
adc
xchg
inc
je
rcl
push
adc
adc
mov
test
add
sbbl
sbb
mov
mov
add
mov
pop
mov
into
loop
mov
in
or
leave
jnp
psubd
repnz
fisttps
push
and
call
xor
lcall
imul
mov
sbb
add
dec
jle
cmp
test
filds
gs
lahf
jno
leave
add
push
cmp
test
mov
divl
xor
adc
fs
les
clc
lea
sub
pusha
cmp
outsl
movsb
loopne
push
inc
arpl
lds
mov
pop
jnp
loop
stos
leave
inc
pushf
test
out
aas
push
ret
push
fsubl
fsub
cmp
fdivl
call
je
push
push
arpl
test
or
xchg
ret
test
push
rclb
outsl
lock
insb
iret
pusha
jbe
adc
sub
xor
sub
and
mov
mov
insl
rorb
rorl
and
out
ret
aad
pusha
sbb
jne
inc
sub
popa
rcll
hlt
ljmp
sbb
mov
push
jp
test
jp
mov
cmp
mov
add
mov
and
rclb
out
lcall
jge
sbb
xlat
and
or
push
inc
popf
movsb
mov
push
dec
or
cmp
insl
or
cld
mov
jns
pop
aas
popa
xor
sub
xchg
test
inc
xor
call
cmp
hlt
std
mov
sahf
sti
in
jg
push
nop
push
in
and
xchg
and
xor
jge
push
outsb
daa
outsb
es
mov
or
add
ja
ljmp
aam
ficompl
and
mov
pop
mov
xor
repz
add
push
sbb
and
push
in
pop
cmp
sbb
cltd
rorl
xor
dec
cmp
leave
and
jnp
inc
push
orb
sbb
fsts
cli
out
into
mov
xchg
xor
dec
pop
dec
lcall
stos
cmpb
fldcw
sbb
hlt
es
mov
imul
aas
sub
jb
and
xabort
je
iret
add
outsl
xchg
xchg
lcall
aaa
add
arpl
mov
ds
add
pop
lods
or
cmpsb
adcl
xchg
jge
jp
sbb
pop
add
dec
mov
leave
sbb
rcll
or
mull
mov
std
fcmovu
jle
dec
stos
pop
adc
mov
test
sub
inc
pushf
imulb
and
mov
or
xor
add
mov
mov
mov
xchg
and
add
cmp
popf
jo
pop
insl
int3
lds
lret
loop
lock
mov
dec
pop
scas
dec
and
mov
or
rorl
mov
mov
pop
inc
xor
lock
adc
stos
stos
pop
push
lahf
mov
ret
out
fldt
push
inc
mov
ds
cmp
icebp
in
jno
insl
xchg
mov
test
inc
inc
cmp
fucomip
je
sub
pop
shlb
push
cmpl
pop
cmp
adc
sbbl
jno
sbb
pop
mov
pop
jecxz
cmpsb
inc
inc
cmpsl
clc
jbe
or
lcall
into
insl
leave
idivb
jno
data16
lcall
mov
pop
pop
and
pop
out
fstl
jl
xor
add
xor
inc
pause
adc
sbb
inc
fdivl
mov
ret
lcall
lret
jle
int3
les
loopne
xchg
sbb
add
or
inc
mov
cmp
push
addr16
fidivrs
adc
cmpxchg
push
xor
test
in
adc
cmc
jle
fstpt
jl
mov
cmp
lret
inc
inc
ret
dec
push
cmp
icebp
xchg
adc
or
mov
or
xchg
lahf
clc
stc
loop
shlb
sti
add
aaa
in
dec
mov
mov
inc
and
adc
nop
daa
or
gs
rcrb
pop
add
rorb
dec
add
out
push
mov
push
push
sahf
fmuls
pop
jb
pusha
stos
or
dec
add
movsl
pop
mov
pusha
push
lahf
add
lcall
cmp
mov
add
jecxz
add
je
push
or
aam
test
pusha
pop
dec
int3
or
adc
inc
jbe
sub
addr16
lods
aas
dec
enter
out
lcall
jo
xor
and
xor
outsb
jp
adc
les
test
fs
and
sbb
mov
jae
lret
ret
inc
dec
ret
inc
inc
rolb
lcall
cmp
jl
pop
push
or
stos
jns
stos
lods
mov
dec
inc
xor
insl
enter
pop
mov
ja
jno
jmp
sub
imul
adc
test
xchg
pop
jae
fsubs
lcall
or
test
xchg
push
int
daa
mov
adc
les
add
xchg
add
sbb
and
ja
shll
sub
sub
cmpl
add
mov
cld
adc
int3
xor
dec
es
mov
cli
push
outsl
ljmp
ret
mov
jb
insl
and
push
js
sub
xchg
les
fucomip
insl
ljmp
push
add
dec
sub
andb
rorb
fists
and
out
push
mov
jl
fnstenv
nop
pop
xchg
pop
sahf
dec
pop
pop
pop
cli
movsb
sub
scas
arpl
ret
mov
adc
cld
jmp
jmp
inc
fwait
pop
mov
xchg
pop
lcall
sbb
pop
iret
in
cmc
lock
insb
arpl
mov
jmp
filds
rcrb
roll
in
call
cmp
xor
mov
push
xchg
ljmp
mov
andl
mov
mov
btc
mov
xchg
sbb
lods
mov
xchg
int
mov
lss
orb
and
add
add
cmpb
and
roll
insb
sub
fstl
pop
je
push
repz
pop
das
sub
push
nop
push
xor
lea
mov
adc
addl
push
les
imul
imul
cmp
jl
loopne
and
cmp
inc
not
cmc
imul
jp
leave
jecxz
testb
push
ret
repnz
jno
mov
negl
fisttpl
pop
out
mov
cmpsl
mov
lret
jo
xor
dec
or
sbb
push
push
aas
xchg
mov
add
adc
dec
ret
adc
xchg
jo
mov
fs
or
fsts
imul
insb
mov
incl
xchg
sbb
testb
inc
pop
outsb
cld
pushf
cmp
and
jle
sti
lea
mov
test
mov
push
aas
nop
aas
add
jne
adc
in
cwtl
adc
mov
push
repz
and
lret
push
and
outsl
int
pop
les
sbb
pop
addr16
sub
or
pop
pop
jnp
cmp
roll
das
lock
mov
aaa
ds
lcall
and
in
cmp
enter
popa
addb
shll
xchg
nop
sbb
add
xchg
dec
and
push
inc
sbb
ljmp
fcom
sbbb
mov
xchg
repnz
mov
add
jne
pop
add
add
or
mov
mov
adc
aam
adcl
mov
outsb
mov
sbb
shrl
lock
mulb
pusha
mov
mov
lcall
xor
pop
add
rcr
push
or
mov
loope
jg
into
or
xorl
xlat
and
adc
lds
ret
cmp
push
mull
xor
push
jmp
pop
nop
sti
loop
nop
xor
mov
add
add
iret
iret
and
pop
adc
dec
xor
pushl
mov
std
dec
and
leave
bound
test
outsb
and
push
push
add
bound
gs
enter
xchg
pop
bound
fildll
pcmpgtd
mov
fwait
and
xor
xor
sbb
xor
rcll
mov
mov
jae
xor
aam
js
xor
sub
fucomip
clc
aad
nop
mov
sub
sub
sub
xor
icebp
pop
mov
call
pop
pushf
call
cmpsl
and
add
pusha
loopne
push
dec
mov
icebp
adc
xor
insb
sub
add
pop
pop
and
into
repz
pop
adc
mov
scas
dec
das
mov
jl
sub
test
es
ss
jo
iret
cmp
or
inc
sbb
rol
test
nop
sahf
mov
add
mov
mov
cltd
rorl
arpl
push
xchg
or
adc
dec
stos
mov
mov
cwtl
hlt
sbb
and
xchg
mov
push
add
adc
sub
or
std
or
incb
lret
dec
pop
sub
cmpsl
lock
imul
xchg
push
ret
test
ljmp
mov
pop
push
xchg
les
sub
dec
pop
cmp
orl
sub
insb
mov
rcll
xchg
xchg
push
push
ja
mov
rclb
into
jns
jecxz
push
dec
out
mov
push
gs
stos
jp
in
outsb
add
rcrl
pop
cltd
ds
sub
or
mov
push
hlt
mov
imul
push
xor
and
xor
add
je
push
xchg
mov
jecxz
and
mov
daa
test
jb
fsubs
sub
or
mov
in
push
mov
cs
cmc
pop
inc
push
sbb
and
and
adc
mov
sub
mov
sbbl
push
mov
es
je
mov
inc
adc
jl
or
push
data16
mov
popa
dec
push
dec
rorl
jo
xchg
mov
and
add
out
cwtl
or
pop
push
lods
xor
outsb
or
xchg
and
adc
enter
mov
sbb
inc
inc
fucom
add
mov
stos
pop
movsb
dec
insb
test
std
and
jmp
in
stos
mul
cmp
xchg
push
cmpsl
aam
nop
insl
cli
xchg
call
fs
mov
inc
hlt
jb
mov
push
inc
dec
test
xor
cmp
mov
neg
add
adc
imul
in
outsl
cli
or
xchg
inc
add
mov
data16
faddl
jns
scas
dec
xor
icebp
jns
xchg
movsb
mov
fstps
sbb
and
dec
add
dec
mov
loop
push
movsb
ret
mov
orb
pop
jl
jg
les
dec
xchg
cwtl
sub
mov
ret
es
test
cltd
fsubrs
pop
dec
js
adc
xchg
jne
jmp
popa
add
cmp
adc
mov
ja
xchg
fistpl
and
xor
lock
inc
sub
outsb
stc
test
add
adc
int
cmpl
xchg
and
inc
mov
lret
adc
inc
pop
iret
push
orl
aad
in
xor
inc
enter
mov
cwtl
mov
ds
sbb
pop
sub
popa
pusha
cmp
out
cmp
pushf
jl
je
inc
cli
inc
dec
and
or
pop
mov
sbb
adc
pusha
jle
pop
dec
out
scas
int3
or
mov
xor
push
orb
or
cmp
sub
test
cmp
dec
adc
lock
add
mov
out
push
aaa
jle
std
mov
mov
rcrl
insl
cmpsl
cmpl
mov
rolb
fisttpl
nop
jo
xchg
push
sub
pop
and
adc
or
in
mov
jno
and
add
add
test
pop
je
js
in
sub
xchg
data16
sub
inc
mov
lds
and
sub
ret
add
or
pop
rclb
adc
mov
pop
ds
mov
or
popa
dec
jno
inc
ret
mov
cwtl
in
fs
mov
gs
and
cld
push
push
stos
mov
sbbl
fwait
push
add
call
inc
jecxz
or
ljmp
xor
mov
ret
or
cmp
fadds
jl
pop
or
push
mov
loope
inc
mov
xadd
ffreep
stos
sub
mov
fwait
daa
test
xor
sub
icebp
movsl
inc
pop
xchg
dec
push
xchg
xor
dec
fisubl
sbb
adc
ret
add
sub
mov
imul
outsl
adc
inc
and
xor
jmp
mov
test
xor
adc
rorl
xor
fs
or
jno
incb
mov
sub
lret
inc
inc
aaa
cmc
jl
popl
and
mov
jnp
and
or
and
lds
pop
aad
mov
movsb
sbb
jae
mov
inc
cmpl
aas
jb
and
adc
or
bound
sub
adc
cmp
sbb
and
test
inc
popf
movsl
sahf
loop
idivl
mull
adc
mov
popf
subb
add
mov
push
and
ja
shlb
mov
inc
cmpsb
mov
sarl
jp
push
add
je
shll
notl
aaa
daa
jo
xchg
inc
mov
and
mov
push
mov
test
sbb
push
insl
cli
aas
jg
mov
cmpb
or
ds
adc
icebp
dec
movsb
pop
repz
into
and
push
enter
bound
aam
addb
mov
ja
outsb
js
add
push
jge
or
icebp
stos
or
pop
jo
xor
in
xchg
mov
cli
fdivl
dec
jl
xchg
mov
xchg
movsb
stc
outsb
and
adc
cmp
dec
ret
cmp
sbb
addr16
jne
rolb
pop
push
std
xor
aas
icebp
and
test
es
push
dec
inc
dec
call
cmp
fcoms
aas
in
scas
out
es
test
pop
adc
adc
xor
lock
jb
xchg
cli
es
adc
test
xchg
add
mov
add
or
add
push
and
cmp
jb
mov
jo
or
push
adc
fs
or
inc
mov
adc
sub
pextrw
movsl
cmpsb
in
push
pushf
mov
subl
fists
in
jae
outsl
cmp
pop
jle
lock
or
add
loopne
jnp
push
aam
test
adc
inc
bound
pop
int
ja
popa
pop
xchg
mov
sbb
add
cmp
push
push
jecxz
pop
dec
js
es
aad
movsb
push
repnz
les
cmpsb
inc
pop
pop
mov
clc
mov
xor
add
in
sbb
test
add
sub
je
lds
push
shl
jg
adc
sbb
pop
nop
mov
xchg
enter
xor
lods
repz
lea
mov
and
fwait
and
and
mov
fcomps
jmp
inc
jne
mov
xor
add
das
fucomi
mov
shll
lret
mov
push
imul
or
mov
dec
inc
stos
pop
test
bound
inc
int
lret
int
sub
test
loope
lods
inc
js
jmp
out
mov
pop
das
lea
inc
mov
jge
ret
xor
aaa
or
sub
arpl
stos
dec
fmulp
loope
cmp
cmp
lret
ret
in
pop
aas
loope
fwait
push
shll
cmpsl
stos
int
mov
push
xor
pushf
xor
mov
ret
std
jl
and
pop
push
and
add
or
in
cmpsl
lahf
jno
fsts
and
mov
fsubl
push
xlat
pop
mov
fsubrp
and
outsb
and
fs
jbe
cmp
cmpsb
and
das
insb
or
mov
cmpsb
loope
mov
dec
xor
jmp
aam
mov
mov
mov
push
insb
icebp
ja
adc
test
loop
or
xor
loopne
stos
fisubs
std
icebp
add
rol
imul
aam
or
addb
sub
pop
test
inc
rolb
lods
movl
hlt
push
fsubs
pop
sbb
dec
jo
push
outsl
fimull
inc
xchg
sti
outsl
lcall
add
and
dec
ret
mov
movsb
mov
sarb
adc
insb
cs
mov
mov
mov
cmp
dec
andl
in
jnp
jg
pusha
and
xchg
inc
push
ja
movsb
add
push
pushf
jle
and
push
test
test
xchg
popf
and
and
sub
pop
dec
pop
ds
jmp
xor
loope
sti
stos
fistpl
and
dec
dec
hlt
mov
cmpsb
lahf
rorl
das
adc
out
imul
cmpsb
into
mov
rorl
adcb
mov
lret
sub
subl
jmp
les
sbb
push
gs
roll
push
lods
test
push
addb
test
inc
adc
bound
adc
sbb
dec
pop
mov
inc
jmp
dec
xchg
repz
sbb
and
add
cld
xor
push
je
add
xchg
fdivs
fistps
rcrl
adc
sti
cmpb
stos
mov
rcll
gs
int3
inc
repnz
dec
pop
jne
mov
sbb
adc
lods
aam
or
int
and
cmp
mov
mov
lea
lret
ds
hlt
cmp
jo
xor
aaa
insl
fildl
add
lcall
add
and
dec
push
jno
or
idivl
mov
lock
addps
add
pop
push
pusha
adc
and
add
sbb
xchg
mov
test
xchg
or
insl
rcll
out
or
xchg
pop
ret
ja
leave
mov
out
xchg
adc
mov
in
sbb
lock
inc
mov
aad
loopne
mov
addr16
andl
mov
popa
scas
pop
xchg
scas
add
add
sbb
pop
outsb
jne
out
push
test
cmpsb
loope
ljmp
std
mov
xor
xor
inc
mov
adc
arpl
fmull
add
mov
gs
push
or
sub
lahf
or
js
cmp
jge
je
lret
adc
sub
test
or
xlat
stos
mov
and
push
adc
mov
fnstcw
rclb
call
inc
mov
jnp
pop
pushf
pop
dec
or
jp
cmpsl
jle
ficomps
push
aam
sbb
popf
jno
jle
mov
xor
adc
and
movsb
and
mov
xchg
or
out
out
xor
loope
xchg
add
inc
lret
adc
mov
mov
cmp
add
popa
les
dec
or
fstpt
fmull
add
push
cmp
es
jmp
mov
icebp
enter
or
mov
mov
pop
adc
pop
cmc
inc
cld
out
lahf
inc
jl
jp
mov
mov
inc
roll
js
lock
insl
pop
scas
and
jno
js
or
lock
js
push
fnstsw
lahf
push
shl
jne
xor
and
stc
xchg
pop
xchg
xor
jbe
mov
jmp
imul
xlat
fiaddl
lahf
aam
sbb
sub
fisubs
push
call
add
lods
mov
xor
dec
sbb
xchg
fldenv
or
and
mov
outsl
cwtl
mov
call
popa
loopne
jg
in
dec
xchg
add
xchg
popw
lea
enter
mov
mov
movsb
inc
mov
mov
jb
hlt
xor
cmpsb
inc
sbb
xchg
mov
es
jno
enter
ret
jb
jbe
rcrl
jmp
jne
nop
dec
or
gs
mov
cld
cmpsl
mov
cmp
dec
inc
jmp
jge
rorl
icebp
enter
adc
test
mov
mov
cmpl
or
dec
lods
mov
popl
pop
shlb
sub
sbb
stos
ja
lock
shll
sub
data16
ds
dec
mov
data16
or
push
adc
mov
mov
sub
icebp
jo
test
dec
out
mov
xchg
repnz
fnstenv
add
xorb
bound
xlat
lock
test
sub
jecxz
pop
push
insl
setne
push
mov
push
pop
aaa
sbb
or
cmp
addr16
outsb
sbb
push
push
movl
or
and
pop
ficomps
punpcklbw
roll
pop
and
pop
testb
repz
clc
dec
cmp
fbld
orb
loopne
push
fstpl
scas
jecxz
add
mov
movsb
pop
test
pop
push
sbb
and
pushf
rolb
dec
sbb
les
sub
or
ljmp
jecxz
dec
inc
dec
lret
rcll
fimull
and
hlt
addl
cld
inc
icebp
mov
int3
or
xor
outsl
js
ret
push
bound
clc
pop
lds
jp
test
enter
mov
add
fcoms
mov
adc
dec
sbb
data16
fiadds
dec
push
xchg
and
clc
push
adc
add
test
jge
cmpsb
testl
ja
lock
aaa
mov
add
scas
pop
adc
jae
jp
out
dec
pop
in
mov
out
mov
ret
mov
ds
add
mov
or
mov
cmp
xor
jge
fwait
xor
int
aad
loop
lds
cmpsl
aaa
test
and
push
pop
popa
or
sbb
add
fisubrs
cmc
pop
inc
adc
push
mov
or
jge
add
sbb
testl
rcl
xor
xchg
mov
dec
js
and
xor
shrl
lods
push
jp
mov
in
and
movsb
dec
dec
sbbb
push
in
stc
cmp
les
inc
cmpsl
js
addb
mov
dec
adc
and
movl
push
rclb
scas
add
inc
repz
dec
and
push
aas
adc
cwtl
icebp
cmp
sbbl
dec
cmp
add
loope
daa
dec
sbb
jne
repnz
mov
ljmp
inc
call
add
jne
push
call
mov
subl
pop
call
sbb
dec
xchg
xchg
lahf
clc
add
jl
inc
mov
push
mov
or
or
cmp
adc
xlat
sti
test
sbbl
pushf
lock
loopne
and
pop
roll
mov
sub
lcall
mov
jecxz
jmp
shll
cmp
pop
add
and
mov
std
or
xor
xchg
dec
inc
jecxz
test
push
dec
push
sub
mov
lods
call
pop
sti
xchg
cwtl
adc
and
mov
and
sbb
insl
push
fmulp
outsl
dec
hlt
jae
adc
roll
dec
pushf
add
sti
push
adc
xor
xor
fsubrp
lds
popf
push
pop
data16
cmpsl
mov
mov
addl
mov
or
inc
mov
imul
icebp
clc
add
or
imul
cmc
add
lea
jecxz
scas
or
sarl
mov
jmp
or
sbb
rcr
mov
or
adc
aam
dec
jg
push
faddp
std
inc
fwait
or
mov
push
pop
icebp
push
inc
add
enter
dec
dec
inc
fstps
ret
xchg
inc
movsl
fwait
push
lods
movsl
xchg
jge
leave
mov
leave
cmpl
mov
shl
push
adc
xlat
cmc
cmp
pop
and
lret
lret
js
push
cmc
aas
mov
enter
pop
add
scas
incb
lods
loop
xchg
jnp
mov
cmp
jl
push
add
movsb
inc
dec
push
mov
mov
out
xor
test
es
icebp
gs
fbld
in
mov
pop
sbbl
jp
mov
iret
push
pop
push
gs
repnz
fdivrs
pusha
sub
adc
inc
data16
mov
arpl
lahf
pop
test
test
mov
flds
add
aad
push
adc
incl
test
sbb
jecxz
stos
lahf
repnz
adc
dec
pop
aaa
xchg
mov
dec
jo
mov
pop
jb
hlt
inc
cmp
jnp
movsb
jecxz
pop
mov
push
out
imul
out
and
jo
lret
mov
shrl
mov
jbe
das
or
mov
sbb
arpl
add
sarb
xchg
mov
jecxz
shl
popf
loope
subl
jl
add
cwtl
loope
in
adc
pushf
xorb
out
inc
mov
or
leave
xor
pop
sub
fcmove
decb
das
in
adc
cmc
xor
movsl
mov
cmp
jbe
cmp
mov
jecxz
inc
push
das
add
test
cli
sbb
sbb
jg
mov
push
stc
dec
shrb
sub
push
scas
hlt
movsb
fdiv
sbb
mov
cmpsb
cli
cmp
jb
mov
pop
lret
loop
pusha
rorb
call
push
mov
fisttpll
fchs
jo
test
cmpsb
movsb
or
pop
xor
and
cld
jb
pop
popf
addl
lret
jl
mul
pushf
cmc
lods
rorl
imul
mov
movsb
mov
repz
mov
imul
fmulp
inc
lahf
in
dec
sbb
ja
push
xchg
inc
jp
adc
or
or
or
add
insl
or
or
imul
insb
movsb
inc
lahf
jg
push
xchg
mov
filds
shr
lcall
push
push
hlt
or
mov
dec
movsb
mov
imul
cmpsl
fs
mov
cmp
xor
or
ljmp
shrb
dec
add
push
xor
ss
ret
sbb
mov
or
addr16
mov
mov
in
mov
mov
pop
scas
mov
xchg
aad
dec
pop
movsb
mov
cmc
mov
jb
ds
adc
xchg
addb
js
mov
cmp
and
jl
shlb
push
cmpsb
lds
aam
mov
orl
inc
loopne
hlt
jbe
inc
lods
sub
pop
insl
pop
adc
push
adc
adc
inc
pushf
std
lahf
rol
icebp
dec
push
or
rclb
pop
pop
mov
dec
ret
push
ret
lret
mov
gs
jge
jecxz
push
xchg
fsubrs
clc
clc
out
jo
xchg
push
mov
cmc
jg
or
aad
inc
fimull
cmp
sub
pop
fisubl
or
nop
inc
sahf
rcrb
cs
imul
xchg
and
adc
shll
pop
pop
and
stc
cmp
jo
dec
push
pop
loop
lahf
imul
shrb
orl
inc
imul
push
cmc
arpl
and
roll
mov
movsb
in
xchg
in
and
ja
loope
push
push
fwait
push
iret
cmp
out
mov
ljmp
push
ret
mov
mov
push
mov
and
fmuls
in
in
test
sbb
lahf
nop
add
dec
clc
dec
adcl
dec
nop
cmovbe
incb
scas
xor
inc
jbe
mov
cmp
rorb
dec
push
ja
stc
lock
mov
mov
mov
les
xchg
inc
pop
sbbl
rol
cmp
aas
nop
bound
sub
dec
jo
fimuls
cmp
sbb
adc
xor
push
fldt
xor
sarl
add
dec
pop
pop
inc
subb
jl
ljmp
pop
in
outsb
lahf
nop
jmp
mov
icebp
add
shlb
xchg
or
fadd
inc
jae
int3
add
scas
lock
inc
mov
shlb
insb
or
pop
leave
les
aas
inc
cmpsl
rcrb
push
mov
rorb
ret
push
inc
aaa
inc
jnp
dec
ljmp
repnz
outsl
sub
sub
loopne
dec
mov
add
mov
xchg
cmpsl
or
ds
pushf
add
pop
mov
iret
and
nop
or
in
jge
in
push
subb
xor
mov
inc
pop
adc
ljmp
icebp
adc
sahf
nop
loop
decl
mov
cmp
lods
mov
icebp
cld
dec
jne
fimuls
and
fsubr
or
xchg
and
and
orl
mov
lcall
js
scas
xchg
push
jecxz
clc
sbb
pop
and
push
adc
or
dec
lods
lods
mov
mov
add
popa
int3
mov
fmulp
nop
sub
cmpsl
or
xor
or
sbb
mov
cli
sub
movsb
mov
leave
sbb
lret
stc
loope
leave
or
add
int3
movsb
sub
push
jns
jbe
cmp
sbb
pop
gs
xchg
jle
ret
jge
mov
cmp
les
into
dec
jb
dec
add
mov
mov
mov
dec
daa
out
in
xchg
rorb
push
jne
push
mov
adc
pop
add
negb
out
adc
pop
dec
rclb
ds
mov
lock
lods
push
fidivs
xor
cltd
xor
mov
andb
adc
bound
out
push
and
mov
and
or
ret
mov
or
mov
cld
add
sub
lock
int3
dec
mov
cmp
mov
add
xor
pop
sub
shlb
and
sub
push
out
jecxz
aaa
mov
jnp
xor
push
scas
jge
mov
xchg
outsb
mov
add
pop
xlat
jl
xor
loop
push
inc
sub
cmp
pushf
pop
fldl
fcoms
std
or
adc
or
or
adc
sub
push
enter
mov
xchg
jl
adc
jo
sub
add
aaa
dec
push
int
aad
mov
add
outsl
pop
adc
cwtl
jle
push
adc
jl
dec
shl
adc
and
push
sbb
cmp
xor
add
push
lahf
jo
inc
test
jecxz
mov
inc
mov
lret
test
pushf
pushf
pop
hlt
clc
ss
out
test
cli
ret
add
ljmp
or
pushl
cmpb
shll
and
inc
idivl
loop
add
xchg
push
push
inc
ret
lret
pop
add
inc
stos
pop
sub
daa
loop
subb
das
jp
mov
movsb
dec
and
and
or
fldcw
pop
add
cmp
jno
enter
loope
jno
jecxz
push
insb
daa
dec
or
mov
loope
or
fcoms
xor
lret
test
outsl
pop
jo
cmpb
mov
mov
and
mov
cmp
mov
mov
ret
mov
mov
ds
inc
and
std
dec
mov
fldt
xchg
mov
xchg
adcb
dec
arpl
or
lret
jmp
mov
xchg
or
pop
jne
int
dec
pushf
push
pop
sub
cwtl
sbb
cmc
add
inc
inc
cmp
mov
test
adc
repz
sbb
ja
and
inc
mov
inc
cmp
les
dec
pop
push
mov
lds
cmp
aad
mov
inc
add
mov
repnz
out
vpaddsw
xor
ret
sub
jo
roll
fwait
lahf
mov
out
sarb
jns
xchg
mov
rorb
ret
bound
leave
mov
mov
scas
push
repnz
int
ds
mov
fidivl
cmp
shl
add
adc
flds
cmpsl
ljmp
dec
adc
movsl
out
stos
jne
clc
and
mov
sub
or
out
scas
sbb
inc
xchg
cmp
fldt
sbbb
mov
sbb
xor
fs
fs
and
dec
sbb
sbb
cltd
xlat
flds
repz
mov
out
mov
in
les
pop
mov
dec
cmp
out
or
mov
stos
cmpsl
inc
cmp
or
or
fwait
insb
test
loop
pop
mov
test
push
scas
je
mov
je
jne
sbb
mov
ds
enter
mov
lods
loopne
jae
push
jb
push
sub
ficoms
lahf
lret
xchg
sub
inc
test
mov
mov
and
mov
mov
test
jp
cli
add
jl
pop
or
sub
cmp
mov
cmp
xor
rorb
adc
dec
sbb
pop
inc
push
jle
mov
shlb
pop
inc
loop
or
pop
push
lods
sbb
pusha
push
inc
mov
inc
adc
add
sub
pop
jb
loopne
push
xor
ljmp
outsl
in
mov
adc
pop
mov
loop
loope
fists
stos
fisttpl
pop
sub
aad
scas
pop
jne
or
out
xlat
jecxz,pn
ljmp
pop
lods
xchg
les
and
or
jge
and
cmpsb
enter
mov
mov
lahf
stos
movsb
movsb
mov
lds
loopne
in
pop
out
lds
mov
cmp
add
xchg
cmp
rorb
loope
dec
xchg
loopne
add
fists
les
outsl
stos
in
jb
ljmp
mov
pop
mov
popa
xchg
test
lahf
cmp
hlt
cmc
jo
aam
dec
pop
test
add
stc
pop
mov
xor
lcall
lea
cltd
xlat
xor
mov
ret
inc
fistpl
popf
jno
cs
idivl
loop
add
sub
mov
sbb
xor
dec
add
stos
cmp
cmp
fldt
test
adc
imul
xor
push
incb
orb
adc
nop
cmp
cmp
aam
mov
test
add
in
and
sbb
add
sub
sbb
jne
ret
rcl
mov
mov
dec
pusha
leave
int
scas
icebp
scas
icebp
inc
fiadds
xor
in
dec
aam
imul
lds
lea
or
jae
movd
test
inc
inc
stc
aad
daa
xchg
xchg
aas
mov
imul
test
fsubp
stc
cmp
mov
aaa
add
and
cmp
clc
ret
push
arpl
movsl
or
mov
out
addb
shlb
loope
mov
insl
xchg
adcl
mov
add
add
mov
adc
inc
xchg
aad
or
dec
sarl
stos
or
jae
cmc
add
add
inc
fsubs
dec
add
fwait
sbb
cli
aam
mov
jecxz
lods
adc
cli
mov
outsb
dec
mov
pop
out
sahf
or
inc
out
xchg
jle
or
xchg
notb
adc
loope
loope
push
mov
and
adc
mov
ss
push
mov
cs
sub
push
mov
mov
mov
fstl
xchg
nop
push
push
mov
cmp
pop
incb
movsb
mov
adc
or
add
or
or
lock
shlb
adc
or
icebp
adcb
or
sbb
jmp
or
jb
lods
add
xchg
push
jae
inc
lea
adc
in
lods
pop
pop
imul
out
mov
inc
inc
and
push
clc
insb
jns
xchg
mov
popa
xchg
xlat
inc
adc
xchg
mov
pushf
adc
jmp
cmp
fs
jno
in
dec
fdivl
movsl
outsb
add
push
out
xlat
push
sbb
pusha
sub
lock
inc
cmp
push
sub
xchg
test
sbb
or
aam
stos
mov
add
push
jno
pusha
pushl
ljmp
sub
sbb
scas
jne
call
xchg
mov
imul
mov
test
xor
rcrl
decb
rcll
and
pop
xchg
inc
push
xchg
hlt
jno
push
loope
xlat
icebp
dec
lret
ret
loope
rcll
sub
imul
mov
int
je
push
mov
lock
shr
or
or
xor
lds
inc
xor
xor
hlt
inc
loop
rcrb
fnstsw
pop
jp
add
pop
jl
sub
sbb
or
xchg
lds
mov
pop
cli
push
scas
inc
movsl
sbb
mov
sbb
loopne
cmc
outsb
push
lds
sub
into
scas
or
push
lea
loope
add
push
fldenv
divl
and
fdivs
les
outsb
rcr
cmpsl
or
adc
add
mov
pop
mov
xchg
jl
dec
mov
cmpl
sub
jbe
bound
aaa
pop
loopne
dec
stos
bound
add
dec
sbb
out
cmp
add
mov
mov
outsb
and
pop
rol
rclb
sbb
add
lret
xor
cmpsb
push
pop
in
fistl
inc
inc
sbb
jl
clc
xlat
sub
fbld
push
ss
adc
sbb
rclb
int
stos
fsubrl
sbb
lcall
adc
sbb
xor
int3
shlb
sahf
call
push
roll
inc
mov
push
shll
xchg
cmc
pop
jb
div
mov
repnz
sub
mov
fwait
add
xor
sbb
ret
imul
mov
in
subl
or
adc
cmp
xor
cwtl
iret
lea
cmp
xchg
inc
aam
xor
push
adc
mov
adc
sbb
add
push
cmp
inc
leave
ret
aad
das
test
xor
movsb
sub
xor
push
mov
mov
sub
roll
sbb
lcall
mov
shr
pop
or
cmpsb
sub
shrb
xorl
repnz
add
dec
xchg
mov
dec
daa
in
ffree
adc
and
mov
rcrb
sbb
sub
mov
int
fdivrl
sahf
xor
adc
sbb
mov
inc
jp
sbb
push
lds
pusha
testl
and
or
dec
pushf
js
inc
repz
sarb
dec
cmp
lret
into
or
add
fs
mov
dec
cmp
call
inc
adc
jl
cmpb
sbb
jbe
divb
shrd
mov
add
add
mov
leave
pusha
sti
loope
push
pop
movsl
push
test
push
ret
bound
mov
push
in
mov
pop
leave
pop
dec
pop
sti
dec
push
xor
push
jge
je
jmp
scas
dec
inc
cmp
or
sahf
les
clc
lea
push
lods
lahf
sbb
test
xor
adc
pop
adc
cmp
add
and
sarl
loopne
mov
stos
xchg
fnstsw
icebp
cmp
adc
mov
mov
xor
push
dec
fnstcw
iret
mov
lret
bound
cmp
sbb
stc
rolb
add
mov
loopne
dec
mov
mov
lods
xor
add
cmc
icebp
inc
ret
push
mov
mov
sbb
shll
mov
xlat
outsb
xchg
mov
cmpsl
out
loop
in
cmpsb
loop
push
sbb
ljmp
mov
xchg
mov
cltd
adc
lock
add
mov
xchg
ds
lcall
hlt
sbb
movb
xchg
adc
sub
sbb
xor
cmpsl
cwtl
mov
flds
mov
cmp
loope
movsl
cmc
clc
shlb
movsb
pop
fcoms
ds
dec
cld
push
xchg
mov
lea
jmp
fs
and
pop
mul
mov
ficompl
cmp
push
mov
adc
pop
mov
mov
les
pusha
xlat
adc
test
cli
adc
hlt
lods
or
test
stos
filds
pusha
jo
hlt
rolb
jp
mov
call
sbb
inc
push
or
lock
addr16
xchg
addl
aaa
pop
sbb
pusha
and
mov
nop
js
pop
popf
mov
jl
sti
inc
pop
adc
les
aam
jecxz
cmpsb
clc
pusha
cmpsl
cli
sub
sub
mov
mov
repnz
ds
into
push
sbb
push
xchg
push
dec
jb
cwtl
stos
xchg
inc
andb
mov
sahf
adc
xor
test
push
push
imul
dec
repz
or
insb
leave
in
push
cmp
mov
test
pushf
les
add
arpl
loope
stc
or
sbb
mov
adc
lock
adc
std
fisubl
add
sub
adc
test
loope
or
adc
mov
add
fstl
mov
cmp
sti
cli
sarl
jbe
test
mov
mov
aad
mov
loope
dec
ja
pop
shll
dec
out
add
add
add
in
cs
mov
loope
outsl
dec
sahf
add
xor
lds
shll
aad
outsb
arpl
xchg
mov
ret
jo
es
or
and
cld
subl
xchg
mov
bound
pop
mov
mov
xchg
mov
sub
mov
or
sti
xor
fidivs
lret
pop
mov
jo
sbb
mov
insb
cmp
loope
sti
int
rorl
cmp
sbb
lret
imul
aad
xor
adc
jbe
into
stos
cmpb
mov
imul
loop
cmc
sub
adc
ret
int
pop
and
fiaddl
aad
or
inc
pop
cmp
rorb
dec
jb
imul
mov
adc
rclb
mov
dec
call
pop
rolb
sbb
inc
sahf
jmp
loope
add
cmp
mov
ficoml
shll
in
cmpb
loope
mov
lcall
nop
cmc
or
rclb
in
or
xchg
pop
and
cmc
int
add
das
int
inc
cmp
insl
ljmp
and
inc
jnp
mov
xchg
xchg
sub
xor
inc
inc
push
fnsave
adc
roll
gs
cmp
and
and
outsb
sti
in
jp
lods
jp
and
dec
call
pop
fs
mov
aaa
and
sbb
test
ljmp
les
cwtl
fcmovb
lods
loop
outsl
pop
sbb
or
out
hlt
rorb
or
shlb
repnz
aad
rcrb
pop
pushf
mov
cmp
rcl
xorb
adc
xchg
adc
pop
cld
stos
or
outsl
insb
insb
insl
das
test
push
add
cmp
or
stc
jp
xchg
out
shrb
ret
mov
xor
lea
xchg
add
mov
xchg
adc
shll
and
mov
add
inc
pop
mov
mov
int
cmpsl
iret
xchg
test
inc
or
mov
pop
outsl
dec
arpl
bound
sahf
xchg
mov
add
rolb
adc
sub
mov
imul
cmc
add
leave
mov
adc
adc
xlat
adc
xlat
mov
mov
popa
jo
scas
addb
fs
jl
jo
pop
mov
inc
inc
adc
push
ret
faddl
inc
popf
adc
add
mov
aaa
or
jge
lcall
arpl
int3
cmpsl
outsl
aad
insl
ret
fnstcw
sub
test
sub
repnz
jno
mov
pop
cmp
ja
mov
movsl
pop
xchg
stc
jbe
test
pop
sbb
outsl
call
cmc
sbb
adc
cmp
loope
movsb
call
and
inc
pop
sub
cs
fwait
aas
cwtl
cwtl
clc
mov
cmp
shrl
sbb
mov
push
mov
sub
adc
ss
xchg
pop
sbb
cmc
fisubrs
inc
xchg
andb
dec
rorb
mov
hlt
int3
sub
mov
inc
mov
sub
or
mov
fwait
test
jne
sbb
sbb
add
pop
psubsw
les
push
and
jecxz
test
out
adc
test
sbb
or
pop
push
cmpl
or
mov
stc
adc
fisubrs
push
pop
mov
and
addr16
outsl
ljmp
inc
sbb
mov
dec
sahf
in
dec
push
adc
pop
enter
jb
and
fists
cld
or
cmp
gs
jne
gs
das
or
pop
mov
fwait
push
je
xlat
clc
call
cmp
mov
inc
lds
pop
outsb
pop
lret
inc
adc
ds
dec
pusha
add
and
and
jp
jge
insl
lret
outsl
sarl
jo
sbb
xchg
push
lcall
pop
jb
and
or
pmovmskb
imul
push
arpl
dec
scas
loope,pt
addl
push
repz
insb
arpl
je
adcl
arpl
lock
movsl
and
rorb
xchg
adc
push
cmp
loop
popa
cli
rorb
dec
icebp
pop
lods
clc
dec
push
jno
inc
and
gs
stc
lahf
xchg
test
cmp
xor
insl
in
jmp
pop
push
cmp
or
add
and
push
scas
jo
push
push
push
in
or
and
popa
in
or
out
push
mov
cmpsb
jns
fwait
cli
in
sub
and
sbb
cmc
xor
movsl
lcall
inc
cltd
stos
add
mov
or
push
mov
pand
fcomi
sbb
loop
add
cwtl
pop
pop
or
sbb
ljmp
push
dec
int
enter
sbb
fnstsw
jecxz
pop
rcl
repz
mov
xlat
fsts
aam
jnp
mov
or
mov
mov
es
clc
loope
js
imul
cmp
into
xchg
xor
push
inc
jge
mov
mov
dec
vmcall
add
pmulhw
cwtl
xor
cltd
bound
add
cmc
xlat
movsb
lahf
inc
sbb
mov
mov
insl
in
jo
notl
out
mov
shrl
pop
jl
es
xor
out
popa
fisubrs
add
adc
mov
test
lea
sbb
data16
mov
jne
mov
xlat
add
loop
movsl
push
outsb
xchg
mov
test
fidivrl
int3
jl
fsubs
les
or
fiaddl
les
lret
movsb
jns
inc
xchg
subl
aad
lock
sahf
or
mov
in
lods
cmp
popa
jg
inc
mov
sbb
fsubrp
xchg
cmp
pop
pop
cmp
test
mov
lret
outsb
punpckhdq
inc
mov
cmpb
add
sub
pop
lcall
mov
xor
lods
and
pop
inc
rorl
les
add
sbbl
mov
aam
mov
ja
pop
movsl
arpl
jle
mov
or
mov
shll
inc
cld
rcrb
into
inc
outsl
pop
inc
inc
push
mov
aaa
popf
test
stos
pop
and
mov
repz
mov
cld
inc
xchg
sub
cltd
dec
or
dec
and
inc
loopne
repnz
cmp
mov
xchg
movsl
xlat
push
in
sub
jo
test
sbb
cmpsb
sub
mov
xor
add
or
test
out
cmp
fiaddl
daa
out
add
add
test
adc
rorb
icebp
add
adc
add
mov
or
xchg
pop
shl
add
daa
pop
mov
push
sbb
xorb
test
lock
inc
xchg
mov
ds
push
fcoml
or
pop
cmp
jns
sbb
stos
inc
inc
lock
mov
push
sub
cs
sub
adc
testb
std
pop
pop
push
mov
call
push
sti
data16
add
ja
je
sbb
enter
mov
movsl
in
mov
int
int3
addb
cmp
cmp
sub
mov
inc
daa
or
enter
ja
mov
and
ret
dec
decb
int3
pushl
pop
lret
or
movsb
scas
push
shll
ror
xchg
pop
dec
aad
aas
push
imul
pop
movsb
xchg
push
sar
loopne
stos
je
movsl
sub
incl
fists
push
lock
mov
cli
loope
add
aad
in
adc
xchg
xchg
cmpb
dec
xor
cld
inc
movl
inc
imul
test
mov
push
lods
and
inc
adc
mov
and
cmc
inc
sarb
test
or
mov
cmpl
mov
mov
and
sahf
mov
inc
mov
sub
and
jecxz
pusha
fnstcw
mov
addl
and
dec
mov
fcoml
mov
xor
fidivrl
shrb
cwtl
inc
dec
push
notb
dec
sahf
jb
push
adcl
jg
dec
dec
mov
pop
jmp
mov
cmp
nop
adcl
push
sub
jle
mov
and
je
xchg
mov
adc
or
test
test
and
jae
push
adc
jp
les
mov
loopne
push
mov
mov
arpl
jge
xor
or
lahf
mov
jns
add
add
inc
jno
mov
es
imul
out
add
aaa
testb
test
js
xchg
xor
xchg
xchg
sub
sbb
pop
push
fbld
mov
push
xchg
mov
push
adc
shr
in
xor
mov
loopne
lea
nop
js
es
and
inc
jl
mov
fistps
add
and
and
call
je
aam
cmp
push
fstpl
adc
cld
and
lods
cli
movsb
outsb
repnz
sbb
call
lret
xchg
sbb
and
pop
push
dec
and
call
pop
cmpb
and
les
shlb
icebp
cmp
sbb
mov
and
mov
clc
xchg
mov
dec
and
mov
xchg
rorb
sbb
or
xchg
jne
imul
push
addr16
xor
enter
xchg
adc
push
fidivs
add
iret
icebp
inc
add
jae
je
fstpt
cmp
and
inc
dec
adc
stos
pop
push
ret
fiadds
dec
sub
cmpsb
add
cmp
xchg
popa
fnsave
loope
pop
and
inc
movsb
cld
dec
pop
push
movswl
mov
and
sbb
xor
shlb
mov
shrl
leave
xor
enter
sub
call
mov
test
and
add
ja
rcr
mov
pop
cmp
and
and
pusha
lock
push
push
loop
cmpsl
sbb
jl
rcl
and
sbb
jp
je
cmp
xor
clc
ret
fsubs
test
mov
into
pushf
and
ljmp
test
pop
push
icebp
or
dec
or
pop
sbb
sub
enter
jo
ljmp
out
ds
inc
mov
xor
or
jb
xor
int
inc
aam
ds
out
aad
push
std
enter
xorb
sub
fwait
mov
xchg
adc
test
lret
sbb
addl
outsb
inc
sub
adc
out
and
dec
pop
pop
or
lahf
mov
neg
cmc
daa
xor
and
sub
in
xor
jns
sbb
addl
inc
negl
pusha
jl
seta
or
test
jo
mov
dec
and
mov
xchg
pop
stc
aad
or
clc
inc
ja
daa
aam
test
mov
test
testb
push
out
and
out
iret
or
js
xchg
addb
mov
gs
push
incl
sub
adc
lret
mov
add
out
mov
or
xlat
sbb
sbb
xchg
sbb
mov
mov
rclb
das
pusha
mov
push
fdivl
pushf
mov
jbe
push
inc
mov
mov
test
addr16
mov
pop
fcmovb
pop
mov
pop
and
enter
pop
les
mov
out
aaa
test
scas
ds
pop
sti
je
fsubl
jbe
inc
add
cmp
sbb
mov
stc
pusha
jbe
rol
fiadds
xorl
loopne
icebp
push
mov
mov
pop
aad
stos
xchg
cmc
movsb
test
mov
jle
test
add
pop
aaa
dec
in
dec
add
push
std
sub
clc
and
mov
pop
dec
mov
adc
xlat
mov
xchg
test
invd
call
adc
hlt
dec
add
js
and
icebp
fwait
push
enter
lods
lahf
mov
aad
daa
sbb
aam
add
pop
and
adc
or
daa
push
dec
loopne
shlb
iret
mov
cmp
dec
inc
int
push
sub
sahf
mov
faddl
push
clc
lods
js
push
mov
fisttpl
and
lea
adc
nop
fbld
sbb
sbb
dec
inc
inc
test
xor
inc
inc
mov
mov
mov
andl
jb
add
xor
pusha
xchg
out
cli
jo
mov
ja
sub
pusha
mov
bound
rolb
push
fiaddl
loop
loopne
mov
cld
pop
sub
xor
stos
movsb
xchg
adc
add
sbbb
int
xor
add
mov
mov
mov
or
push
fcmove
and
insb
sub
jb
pop
sbb
sub
jge
cmc
and
and
popf
shl
add
adc
mov
ljmp
pop
aad
hlt
mov
push
sub
xor
mov
inc
sbb
xor
add
cli
call
xorl
test
xchg
cmc
int3
mov
push
fdivrs
pop
jb
and
add
or
fldz
outsb
lds
scas
fmull
xor
dec
aam
xor
add
cmp
jb
xorb
xor
out
sbb
insb
add
jg
mov
or
push
fildll
inc
sbb
test
hlt
nop
mov
test
jg
mov
or
jle
add
js
xor
push
fnstsw
and
xor
mov
movsb
loope
inc
jo
movsl
data16
shll
mov
inc
add
lret
and
fnstsw
and
add
insb
lcall
ljmp
pop
arpl
xor
or
and
jbe
rcrl
cli
repnz
mov
dec
push
xchg
sti
addl
aas
ljmp
cmpsl
inc
dec
mov
fsubs
fadds
orb
test
dec
rorb
arpl
rcr
ret
popa
out
scas
and
xchg
cwtl
inc
and
sbb
adc
jle
nop
les
push
mov
push
dec
or
push
pusha
fs
mov
notb
sub
lret
xchg
pop
rclb
pop
cli
jg
pop
push
enter
inc
push
mov
xchg
pop
mov
aad
xor
wbinvd
incb
and
rclb
or
jl
pop
repz
and
push
cld
adc
cmc
pop
fdivrl
mov
imull
push
xor
stos
pop
or
pop
stc
outsl
in
mov
fs
notb
subl
cld
das
pop
pop
fstps
jo
push
in
enter
sub
jnp
jno
lock
rorb
movsb
or
imull
mov
mov
pusha
push
push
and
mov
and
xchg
mov
xor
sbbb
call
cmp
dec
and
push
adc
and
mov
ficoml
pop
lret
or
and
int3
out
enter
push
dec
inc
fstpl
xchg
in
cwtl
cmpsb
popa
out
add
and
mov
jl
ja
push
pop
dec
fs
pop
daa
pusha
pop
out
scas
cmp
pop
sub
aam
notl
sbb
incl
dec
dec
or
xor
inc
test
psrad
push
mov
stos
adc
jmp
cmp
adc
aaa
sbb
mov
and
jne
mov
lea
push
stos
dec
pop
in
xchg
test
add
jl
sub
xchg
or
pushf
fs
pop
ret
cld
adc
inc
cltd
nop
into
and
incl
jmp
jns
mov
mov
aam
lock
dec
mov
test
xchg
mov
dec
sbbl
insl
movsb
loopne
cmp
add
sbb
add
xchg
mov
xchg
add
loop
out
adc
pop
ja
cltd
add
test
loopne
mov
sub
fists
or
icebp
lcall
pop
cmp
or
adc
pop
cmp
push
xor
loop
jle
stc
mov
jnp
int3
jae
outsl
sub
clc
lods
mov
clc
sahf
iret
mov
fstpl
cwtl
clc
mov
sbb
lods
sub
dec
inc
adc
adc
inc
std
lahf
lahf
pop
aas
xor
push
add
das
shll
sbb
cmpsb
mov
fwait
jmp
je
je
stc
sbb
xchg
mov
nop
ds
imul
fwait
dec
arpl
sbb
rorl
sti
sbb
pop
sub
inc
sbb
and
je
and
hlt
adc
lock
push
loope
mov
loope
shll
push
mov
adc
mov
enter
insb
cmp
dec
jno
push
add
add
sub
rol
cmp
stos
subb
jmp
add
jl
inc
pop
icebp
les
jge
add
popa
mov
pusha
mov
loopne
adc
clc
clc
dec
jp
shl
add
movsb
mov
stc
decl
sarl
jl
jecxz
mov
sub
div
lods
mov
decl
adc
mov
and
jge
es
push
imul
ljmp
lds
jl
imul
mov
sbb
jge
rorb
stos
ss
cmpb
inc
call
addb
pop
ja
into
sahf
dec
mov
jno
pop
xchg
mov
pop
mov
ds
imull
mov
mov
out
es
rcrb
push
in
jl
cltd
clc
in
jle
loope
mov
movsb
adc
add
subl
pop
fcom
mov
or
inc
jbe
sbb
out
insb
enter
mov
mov
clc
sbb
fdecstp
cld
jb
repnz
insb
push
mov
lock
push
je
jl
insl
repnz
mov
repnz
enter
stos
or
out
xchg
outsb
int3
arpl
mov
pop
push
xchg
push
pop
inc
xor
ftst
inc
or
call
icebp
jp
nop
sbbb
push
adc
daa
hlt
xchg
and
icebp
push
sub
inc
jne
add
sbb
push
xor
lret
aad
mov
notl
dec
popf
jl
inc
mov
in
xchg
clc
jge
out
sub
bound
addb
lods
cmc
inc
pusha
jmp
outsl
pop
inc
and
mov
popf
jp
rorb
out
loope
mov
add
aam
and
aad
bound
inc
inc
clc
test
arpl
mov
jecxz
in
jo
pop
add
movsb
out
sbb
aas
std
lahf
test
push
or
inc
icebp
jecxz
clc
cmpsb
jo
movsb
cmp
mov
or
pusha
mov
pusha
hlt
icebp
fwait
lcall
push
cli
jg
or
into
inc
and
push
test
ds
cmc
leave
icebp
stos
or
jno
std
movsl
inc
mov
xor
loope
loope
push
push
mov
stc
movl
jbe
inc
jecxz
or
sbb
bound
fmuls
leave
hlt
jcxz
mov
dec
sbb
pusha
rcrl
jecxz
bound
sub
loopne
lret
pop
aas
sbb
mov
ljmp
lcall
jge
pop
cld
add
jg
adc
inc
pop
test
mov
lods
or
xor
sbb
jg
divb
test
ds
es
cmp
inc
pusha
inc
push
push
mov
xor
scas
daa
sub
sarb
rcll
shl
lods
xor
ljmp
ret
fmuls
xchg
inc
sbb
pop
mov
add
push
lds
inc
dec
cmp
repz
and
int
add
sbb
adc
jl
bound
xlat
dec
mov
push
shl
mov
lcall
sarl
mov
pushf
mov
mov
jge
ja
jecxz
jecxz
pop
in
and
or
je
roll
add
cmp
je
xor
mov
xor
sarl
cmp
roll
sarl
cmc
daa
cld
rcl
mov
pop
mov
icebp
push
inc
sub
sbb
push
sarb
adc
test
aaa
push
mov
inc
jmp
ja
lret
loope
push
shll
adc
mov
push
sbb
fldt
ja
mov
movsb
push
mov
mov
push
or
lods
out
jg
or
push
aas
pop
out
orl
shlb
mov
or
rcl
jno
test
jbe
sbb
push
fisttpll
iret
repz
sub
lods
sub
xorb
or
push
sbb
fstpl
sbb
fs
cli
idivl
out
or
roll
pop
jmp
loop
out
mov
cmp
stc
hlt
adc
aad
incl
jnp
addr16
in
or
jmp
pop
jno
dec
shl
ds
clc
insw
clc
imulb
push
add
data16
xor
lahf
add
inc
jecxz
scas
jl
jecxz
add
xchg
mov
jmp
aas
fisttpl
test
push
jecxz
mov
mov
sub
mov
lahf
adc
jg
push
jecxz
pop
lds
add
xor
push
push
jle
push
cld
nop
xor
xor
xor
lods
call
clc
cmp
movsb
mov
sub
bound
inc
pop
inc
pop
adc
mov
inc
mov
xchg
je
sbb
pop
mov
jo
push
sub
jle
shl
shrb
pop
pop
jmp
add
push
call
jle
push
in
jl
mov
addb
fdivr
or
mov
add
bnd
xlat
jne
cmp
or
mov
adc
testb
loopne
test
sub
loope
add
cld
sub
xorb
mov
inc
les
aas
or
xrelease
dec
fisubs
mov
sub
mov
sti
pop
jmp
outsl
pop
push
arpl
push
pop
ja
in
pop
je
call
mov
fisttps
mov
adc
jl
lret
add
dec
pop
leave
dec
movsb
sub
fildll
clc
adc
sbb
mov
mov
adc
pop
sbb
icebp
cmpsl
in
sub
mov
lahf
movsb
push
mov
rcrb
mov
adc
or
iret
mov
adc
inc
dec
pop
js
push
shll
or
call
dec
jbe
pop
mov
sti
jl
ds
es
movsb
insl
push
clc
push
insb
popa
mov
mov
push
test
sbb
sahf
xchg
xor
jge
jle
jecxz
or
mov
test
add
pop
ljmp
das
cmp
or
xor
icebp
pop
and
iret
or
jbe
mov
ror
jae
fs
mov
lahf
sbb
dec
lods
fcmovne
inc
lock
pop
sub
pop
inc
lock
popa
clc
xchg
into
dec
inc
push
stos
adc
or
xor
je
stos
sbb
int
ja
stos
rcll
push
pop
lea
call
lret
jp
bound
jmp
out
idivb
jno
or
sub
pop
pop
and
xlat
rorb
and
loop
jp
popf
icebp
pushf
sub
inc
aas
lods
mov
or
jl
xor
lock
int
and
test
ret
dec
hlt
inc
out
aad
jne
test
adc
daa
loop
jmp
cwtl
and
fs
mov
jle
or
mov
test
vfrczsd
pop
cltd
in
and
test
dec
imul
call
sub
mov
sub
lods
enter
in
xchg
sub
sbb
adc
add
jl
sbb
or
xor
out
inc
shrl
hlt
into
cmp
adc
add
inc
jg
push
aam
mov
sub
push
pop
jmp
xor
sub
xchg
fcomp
adc
pop
mov
dec
ds
inc
popf
cs
ss
inc
push
orl
leave
movsb
adc
imul
add
xorb
mov
add
push
mov
or
mov
incb
gs
push
int3
sarl
mov
mov
clc
mov
inc
or
xchg
jecxz
int3
sarb
shr
mov
and
movntq
out
mov
sbb
inc
leave
lea
xor
movsb
inc
int3
adc
adc
daa
loopne
int3
sbb
inc
dec
and
mov
or
aam
mov
mov
addb
cmc
test
xchg
mov
add
pop
push
fmull
ss
sahf
sub
jle
pusha
rorl
adc
roll
fwait
stc
pop
and
xchg
push
pop
and
mov
pop
or
inc
addr16
adc
outsb
lret
adc
test
call
mov
mov
mov
lds
jge
jge
add
mov
and
mov
xor
xchg
nop
test
xlat
std
adc
shll
cmpl
in
pop
mov
in
adc
push
or
adc
push
push
std
test
dec
push
mov
cmpsl
jg
xor
inc
push
xor
pop
incl
das
faddl
push
rol
push
cmp
and
adc
gs
loopne
fwait
into
add
std
jle
mov
and
jo
pop
mov
dec
std
movsl
add
mov
xchg
adc
inc
mov
xchg
dec
fs
push
add
lock
outsl
mov
add
mov
mov
loope
in
je
inc
arpl
jle
roll
movsl
out
pop
pop
cwtl
ljmp
cli
movsl
or
mov
cwtl
and
adc
and
iret
roll
cmpb
sub
ja
dec
add
movsb
jp
cmc
dec
jecxz
faddl
inc
sub
mov
les
adc
sub
loop
pop
inc
cltd
icebp
or
mov
xchg
and
pop
jnp
mov
stos
inc
dec
inc
mov
inc
outsl
or
mov
push
or
into
leave
jl
clc
popl
inc
xchg
jbe
enter
xor
pushf
repnz
pop
dec
push
js
xchg
pop
loopne
push
mov
or
loop
pop
stc
or
pop
dec
pop
jp
test
push
cwtl
mov
xor
mov
xchg
mov
push
lcall
and
push
into
fcoml
xchg
pcmpgtw
arpl
or
sub
jge
xchg
push
nop
mov
mov
testl
pop
fcmovnu
mov
xchg
scas
hlt
sti
push
adc
cltd
pop
xor
stos
xchg
mov
jle
jne
inc
xor
movsl
leave
mov
lea
add
idivb
shll
je
xor
popf
inc
int
test
jns
mov
mov
icebp
in
loopne
int
clc
jne
and
push
mov
in
jle
insb
sbb
jmp
sar
dec
add
subb
mov
pop
push
or
das
and
push
loopne
add
lret
add
cmc
jg
push
mov
jns
ret
push
in
sub
dec
outsl
mov
sbb
sub
aaa
cmp
inc
dec
xchg
add
and
sbb
loopne
add
lea
push
pushl
shll
xchg
mov
cmp
jmp
cmp
mov
mov
sbb
inc
ret
push
xchg
mov
nop
mov
pop
cwtl
xchg
sbb
and
das
pushf
add
orl
fwait
stos
cmp
mov
or
mov
mov
notl
xor
imul
cld
gs
mov
mov
mov
jp
movsl
mov
xchg
push
fiadds
jg
dec
sub
pop
push
xor
cmp
adc
and
inc
outsl
jnp
and
pusha
or
inc
dec
push
push
repnz
and
mov
iret
stc
mov
pop
dec
scas
arpl
pop
dec
daa
adc
xchg
fnstcw
cld
mov
jge
sub
pop
loopne
aas
iret
xchg
mov
ret
adcb
scas
mov
pop
test
mov
lret
iret
andl
call
sbb
int
fisttps
push
mov
and
sub
inc
dec
fwait
xor
in
scas
shr
cmpsl
pop
hlt
int
xlat
mov
mov
jne
nop
outsb
xchg
daa
lea
mov
pop
andb
je
cmc
jl
push
pusha
cltd
aas
push
or
sub
cld
sbb
in
mov
xchg
shlb
inc
imul
shll
xchg
testl
xlat
push
inc
in
jns
and
xor
push
cmp
mov
fwait
cmp
mov
xor
rcll
push
jl
test
iret
add
mov
lock
adc
xchg
pslld
sub
adc
lcall
add
clc
shufps
xchg
dec
nop
dec
ja
outsb
xchg
divl
push
pop
mov
fs
ja
and
or
mov
xchg
sahf
and
mov
push
je
arpl
xor
jns
clc
or
sbb
jmp
ficompl
sub
mov
das
lret
mov
mov
fidivl
or
mov
mov
push
icebp
fiaddl
test
mov
divb
sbb
lahf
push
cmovne
das
pop
inc
in
out
loop
jo
enter
and
test
dec
rol
xor
xor
push
sub
jmp
adc
and
lea
add
cmp
ret
sbb
cmpsl
jbe
fimuls
inc
jae
icebp
in
pop
sub
hlt
jo
xor
dec
icebp
sbb
pusha
mov
lcall
je
in
mov
sub
shrl
pop
inc
rolb
in
adc
jmp
or
je
flds
push
add
mov
push
mov
roll
adc
rolb
addr16
pop
adc
jnp
in
adc
leave
nop
cmpsb
in
xor
popf
fisubrl
add
xlat
sbb
mov
jmp
push
es
dec
call
mov
cmp
out
cmp
cli
popl
adc
mov
inc
inc
jne
add
pop
ljmp
es
jne
jmp
push
inc
rol
xor
push
sbb
test
dec
xchg
push
insb
loop
popf
sbb
es
addl
pop
mov
push
sbb
loopne
inc
clc
mov
push
mov
and
test
aas
in
sbb
xorl
aam
imull
std
daa
mov
ret
push
push
push
pushf
cmp
and
aas
aas
pusha
hlt
sbb
dec
add
jecxz
popf
lods
loop
xchg
sub
and
adc
rcll
xchg
xor
push
jb
adc
fs
and
xchg
dec
inc
cli
mov
pusha
stos
inc
fcomps
cmp
movsb
xchg
fs
fwait
pop
mov
and
paddsb
dec
mov
xorb
xor
shll
push
insb
movsl
push
mov
mov
sub
and
adc
lods
and
jmp
or
xchg
jns
push
xor
xor
jg
fcomps
aas
or
rcr
inc
fisttpl
leave
int
cld
fldt
xor
call
inc
and
mov
orb
mov
mov
clc
xchg
lret
mov
stos
cmp
mov
dec
out
inc
mov
std
adc
push
add
pop
je
jbe
jecxz
jo
or
jg
in
shrb
loop
subb
sub
xorl
or
xchg
in
iret
jp
pop
dec
int
sbb
cld
leave
mov
or
push
incl
sub
mov
and
xchg
cmc
mov
push
xor
push
cmpsb
add
packsswb
pop
and
pusha
scas
inc
mov
adc
pop
add
fcoms
idiv
xchg
es
adc
faddl
nop
ret
imul
leave
scas
outsb
outsb
lock
xor
test
test
mov
mov
cmp
push
jp,pn
push
ret
push
sub
mov
rolb
adc
mov
push
cli
xor
outsl
pop
ret
jmp
pop
cwtl
arpl
dec
test
scas
and
dec
and
jl
icebp
mov
adc
push
xchg
enter
adc
aaa
test
mov
mov
imul
fs
popl
ss
mov
adc
cmpsb
movsl
clc
push
sub
sbb
and
push
add
push
pop
mov
inc
mov
stos
jbe
cmp
cld
flds
push
pop
inc
in
adc
dec
pop
sbb
push
jbe
sub
inc
test
mov
push
xchg
cmp
or
or
dec
fimull
insb
dec
add
sub
daa
movsb
aas
sub
dec
inc
add
mov
push
push
lock
jge
xor
push
sbbb
or
pop
add
rclb
sub
test
fdivrl
repz
test
addr16
cli
sub
dec
or
aad
loope
adc
push
clc
mov
sbb
out
push
mov
idivb
cmpl
pusha
icebp
andb
dec
inc
rcll
testl
lock
mov
adc
rcll
inc
lcall
lds
popf
movsb
pusha
out
pop
sbb
pop
jno
ja
inc
sub
lahf
nop
inc
xlat
js
fndisi(8087
call
mov
and
pop
add
out
add
aaa
dec
call
dec
inc
shl
roll
bound
inc
push
xor
jb
pop
jno
aas
test
pop
inc
lds
es
fsubs
push
fcomps
clc
pop
test
dec
test
aaa
mov
push
jmp
mov
or
es
ds
dec
adcb
lret
inc
mov
test
or
insb
dec
add
fucomip
lahf
mov
ljmp
in
ds
cmpsl
pop
or
xlat
and
xchg
push
inc
xchg
sti
negb
mov
dec
inc
inc
jle
lea
js
jno
pushf
cmp
push
mov
nop
mov
cmc
add
xchg
or
fldt
das
cmp
mov
bound
fxch
xchg
push
sub
mov
decb
addr16
loope
ss
xchg
adcb
into
sub
jns
pop
mov
inc
xchg
xchg
fildll
fcmovu
lds
adc
mov
jge
and
insb
mov
mov
dec
add
inc
and
or
pop
aam
and
xor
test
popa
iret
xchg
and
adc
mov
inc
outsl
incl
lret
add
cmp
movsb
orb
push
nop
mov
leave
sbb
ror
jno
xor
cli
add
xor
nop
jbe
xchg
invd
dec
decl
mov
arpl
pushf
loope
hlt
in
pop
movsl
inc
inc
rcrb
pop
push
dec
mov
cmp
lock
andl
xchg
nop
mov
cmp
sti
dec
in
decl
jno
lret
and
aad
or
sbb
and
mov
jmp
lret
jns
imul
repz
push
and
aaa
mov
nop
jnp
jno
or
mov
lcall
pop
pop
int3
jno
sbb
push
push
ret
mov
outsl
or
and
xchg
imul
out
icebp
leave
repnz
inc
adc
mov
dec
cmp
pop
into
mov
mov
mov
pop
pop
addr16
jo
adc
mov
lock
cmp
clc
pop
xor
xor
push
push
xchg
add
jle
adc
je
ror
stos
scas
in
test
mov
or
js
fstpl
stos
mov
push
cmp
jg
mov
mov
xor
mov
gs
sbb
pop
push
jns
inc
jno
inc
jno
je
cmp
int
adc
ds
mov
aad
jno
mov
loopne
push
mov
jo
xor
fs
pop
xchg
outsl
pop
or
fs
int3
pop
jp
cmpsl
outsl
hlt
fmul
dec
sbb
incb
icebp
out
inc
sbb
test
stos
movb
push
sub
sbb
sub
in
leave
lahf
inc
mov
aam
pop
pop
jbe
mov
fucomi
mov
sbb
mov
stc
sbbb
dec
dec
les
mov
jb
insl
ffreep
fsubl
icebp
fwait
dec
adc
push
xchg
jnp
nop
xorl
add
cmp
mov
shlb
in
pop
out
jg
out
pop
push
mov
sbb
cmp
sbb
adc
ret
pop
out
push
mov
fwait
sahf
pop
ret
leave
dec
lock
push
mov
inc
data16
mov
js
adc
push
scas
in
mov
mov
ja
pop
orb
xchg
xor
mov
inc
push
jmp
or
movsl
push
mov
scas
mov
jp
xchg
cli
imul
rorl
mov
int3
push
jae
push
cmp
clc
sub
and
pop
ljmp
fnsetpm(287
test
mov
in
cmpsl
mov
dec
sti
fisubrs
push
jg,pn
sbb
and
xor
pop
stos
xchg
inc
lcall
xchg
loop
aaa
mov
mov
add
fnsave
cmpsl
test
pop
test
pop
cmc
jbe
mov
popf
call
xchg
sti
movsb
or
pop
jge
mov
adc
ja
cmp
movsl
dec
cwtl
sbb
mov
cwtl
or
add
mov
or
aad
jb
or
push
pop
dec
adc
inc
in
stc
cwtl
xchg
mov
jnp
lock
xchg
fs
xchg
or
dec
mov
insb
jnp
ljmp
xor
fdivrl
adc
jecxz
ja
je
adc
popa
imul
xchg
xchg
sbbb
mov
pop
xchg
jo
int
and
or
mov
add
sub
xchg
mov
js
loopne
sub
and
pop
mov
mov
out
sahf
mov
fnstsw
repnz
sahf
cmc
or
inc
fistpll
aad
sub
mov
mov
test
mov
shl
sbb
push
std
outsl
sbb
aam
push
ss
imulb
movsl
leave
lahf
nop
cli
clc
sub
aaa
jle
mov
push
je
sarl
dec
push
or
repz
jg
jb
adc
mov
sbb
push
loope
xchg
ja
adc
dec
test
shll
faddp
sbb
sub
int3
loopne
jp
cmc
stc
loope
test
push
mov
scas
out
pop
mov
dec
lds
call
mov
push
sbb
fmull
push
xor
lret
js
loop
mov
adc
push
popf
aam
dec
idivb
sub
aam
enter
xchg
mov
mov
dec
dec
jne
scas
push
aam
loope
loop
cmpl
fildl
lods
ja
or
mov
xchg
lea
test
jle
mov
js
mov
cmc
xchg
into
mov
mov
rorl
and
sbb
cld
adc
into
clc
inc
out
mov
mov
into
sbb
mov
outsl
sub
mov
or
mov
out
scas
ret
fs
mov
mov
lahf
pop
sub
jmp
fimull
and
sbb
pop
inc
js
xor
je
iret
popa
dec
out
rcll
ret
in
ja
fmull
stos
outsl
stos
jg
mov
mov
gs
and
sbb
dec
jo
stos
clc
cmp
iret
jg
pop
iret
sbb
mov
fs
into
popf
cmp
rclb
mov
xor
add
shll
dec
shrl
sub
adc
iret
cmp
push
shl
pushf
sbb
dec
icebp
fimull
push
lods
cmpsl
dec
cmc
jg
out
mov
sbb
cmp
sub
mov
pop
jg
and
mov
call
push
push
pushl
xchg
pop
inc
sbb
jbe
pop
pop
mov
xchg
and
fucomi
aad
pushl
rolb
out
das
add
sbb
add
fnstcw
ret
pusha
out
push
inc
push
lods
repz
push
jnp
pop
cmp
xor
mov
pop
mov
cmp
aaa
mov
jg
pop
sbb
or
addr16
xor
cmovb
lock
cmp
push
sbb
mov
clc
pop
push
aam
das
jo
loop
mov
inc
sub
ja
mov
daa
push
lods
sahf
loop
fidivrl
inc
arpl
dec
and
rorl
ror
imull
cmp
pop
cmp
pop
mov
fstpl
pop
add
andb
cmp
and
aas
rcll
decl
out
and
push
stos
aas
scas
out
loope
repnz
inc
inc
sbb
nop
rcl
add
test
daa
cmp
adc
jmp
call
xchg
outsb
jbe
inc
daa
mov
jmp
push
xchg
jnp
xor
sti
icebp
xchg
jnp
jmp
xchg
mov
imul
sarb
mov
xor
loop
hlt
jg
filds
pop
fcomps
popf
pop
outsl
ret
add
dec
orl
jbe
mov
jg
add
outsb
add
dec
sbb
inc
addr16
push
inc
mov
pop
pop
cmpsl
pop
xchg
cmp
push
rorl
js
scas
mov
jle
test
shlb
gs
push
xor
and
jge
push
inc
addr16
or
and
or
shrb
xor
loope
pop
call
adc
movsl
and
shll
int3
mov
mov
mov
adc
incl
es
add
mov
test
cmp
test
data16
aaa
inc
sbb
je
aam
cmp
dec
and
lea
nop
sbb
add
push
pushf
mov
mov
ja
push
add
ljmp
xor
jg
test
fnstenv
push
jg
lea
in
pop
mov
mov
mov
mov
cld
iret
andb
in
push
scas
out
inc
xor
aaa
fisubs
gs
leave
jb
jae
xchg
xchg
or
inc
stos
mov
pop
movsl
pop
inc
cmc
mov
jns
les
test
aam
sbb
xchg
sub
sub
push
jb
xor
jmp
sub
mov
ja
mov
sub
cmc
icebp
sub
jnp
mov
lret
xor
sbb
xchg
jno
xor
pop
adc
scas
jg
xchg
adc
es
mov
popf
dec
push
fcompl
jmp
xchg
and
out
adc
rclb
jns
fmull
test
mov
push
adc
push
or
mov
jp
mov
push
int
sarl
mov
push
loope
push
addl
cld
mov
addl
je
lcall
pop
jmp
xchg
inc
push
lea
fisttps
mov
mov
xor
inc
in
fiaddl
pop
loop
pop
add
popa
xchg
fbld
inc
mov
and
jg
mov
bound
or
sub
outsl
out
cwtl
ret
outsl
mov
mov
in
and
js
lds
inc
jp
cmp
sbb
mov
lahf
inc
inc
fs
pushf
jecxz
cmp
pop
or
jmp
adc
cmp
fisttps
clc
dec
jl
js
sbb
cltd
push
xchg
mov
icebp
cmpsb
sbbl
mov
xor
pusha
push
adc
call
mov
jge
push
mov
push
adc
cmp
jo
push
lret
not
sub
in
inc
mov
xor
lret
pop
push
push
in
fnstcw
or
fmull
mov
dec
pusha
dec
test
mov
aaa
arpl
outsl
cmp
cld
pop
cmpb
mov
adc
pushf
inc
loop
movsb
add
adc
or
sbb
arpl
dec
aas
and
jle
mov
add
mov
aas
sub
mov
xchg
push
ret
or
jecxz
cwtl
dec
or
sbb
add
lock
clc
cmp
testb
push
js
int
popf
xor
shll
pop
addr16
imul
stos
mov
lods
adc
xor
adc
ret
sub
fsubrl
add
inc
pop
mov
xor
cmpsb
xchg
int
sub
sbb
repz
out
loope
arpl
clc
lea
sysexit
jbe
xor
les
sub
adc
jle
cltd
addr16
cmp
pusha
adc
arpl
rorl
movsl
popa
and
inc
lock
lods
jmp
mov
repnz
mov
mov
inc
push
in
scas
js
or
xchg
dec
add
scas
push
cmp
and
aam
ja
pop
aam
mov
jg
xchg
push
xlat
mov
inc
fnsave
in
ljmp
pop
mov
push
popf
loopne
sub
in
sub
test
dec
mov
test
sbb
dec
pop
pop
push
lea
sub
add
or
fwait
or
adc
push
insl
inc
mov
sahf
inc
dec
sbb
pop
mov
xchg
xchg
subl
stc
ljmp
into
andb
xor
jno
sub
mov
push
mov
xor
xchg
jle
dec
out
or
push
rorl
fwait
push
jmp
mov
call
and
inc
movsb
fcomi
mov
xchg
pop
rcrb
in
dec
cmp
clc
xchg
push
jae
imul
lcall
adc
enter
cmpsl
inc
dec
add
cs
mov
dec
xchg
adc
mov
jle
adc
loope
mov
std
push
popf
outsb
cld
bt
or
lds
jle
dec
js
add
div
jmp
jge
sbb
dec
rcrl
shufps
xchg
cmp
push
add
divb
xchg
adc
rorb
fcomip
cld
jnp
cmp
adc
clc
xchg
sbb
pop
nop
pusha
lea
add
in
pop
lea
ret
aam
lret
xchg
roll
push
xor
out
jo
mov
mov
loopne
sti
push
stc
xchg
mov
pop
insb
inc
xchg
pop
loopne
and
lock
mov
dec
sub
pop
lea
or
divl
dec
push
shrl
mov
shlb
sbb
scas
cltd
aaa
pop
repz
cs
orl
cmc
ds
add
popf
push
xchg
pop
mov
xchg
cmc
jp
rol
ret
in
or
mov
test
mov
idiv
imul
cli
mov
mov
and
test
pop
mov
repz
shl
mov
mov
mov
andl
xor
push
lcall
lods
pop
adc
in
and
sti
or
adc
jmp
add
inc
sbb
and
das
shll
jno
lret
pushf
popa
js
divl
sub
pushl
mov
inc
je
inc
lcall
and
scas
gs
mov
jp
jnp
and
pushf
movsl
xchg
pop
sbb
and
les
mov
mov
lods
lcall
add
jg
arpl
dec
out
pop
add
aam
clc
sarb
xor
inc
loopne
mov
lods
popf
ret
cltd
jns
aam
mov
or
jecxz
mov
mov
jle
pop
cmp
sub
mov
sub
mov
mov
and
push
sbb
das
insb
subl
sub
mov
cwtl
repnz
or
lcall
inc
push
popf
int
jno
fsubrs
call
xchg
add
push
cmp
xchg
xchg
dec
cmp
adc
cld
pop
cmp
mov
inc
mov
test
mov
add
cmp
pop
rorl
stc
or
enter
stos
call
and
les
orb
adc
in
jo
push
inc
rclb
adc
mov
incl
lods
mov
ret
mov
push
loopne
iret
enter
xchg
out
lcall
cmp
cmp
sub
sub
jae
mov
int3
repnz
cwtl
sbb
jg
std
lds
cmp
pop
adc
or
icebp
add
je
cmp
mov
fdivr
lods
push
push
push
in
xchg
xchg
andb
xor
rolb
add
pop
pop
dec
dec
hlt
loopne
jne
fcompl
clc
clc
add
inc
fldt
mov
mov
jae
add
idivb
sbb
lea
add
rdpmc
sbb
mov
inc
sub
inc
jne
fbstp
cmpl
icebp
aaa
movsb
push
pop
pop
inc
mov
icebp
ljmp
mov
push
mov
jo
dec
adcl
add
mov
mov
cli
js
sbb
jo
ret
test
rcrl
pop
add
bound
xlat
and
jecxz
clc
add
cwtl
add
add
pop
sub
and
out
movsl
fstpl
dec
adc
or
xchg
inc
imul
mov
sbb
fcmovne
mov
icebp
mov
roll
mov
push
aam
inc
cltd
es
bound
xchg
into
inc
loopne
push
cmp
int3
daa
mov
push
cld
aas
mov
lcall
push
ljmp
bound
in
ja
xor
int3
mov
inc
and
xchg
cmpsl
loopne
call
stc
sbb
movsl
rcll
cmp
cmpsl
adc
xchg
ret
jg
fucom
movsb
cmp
or
add
pop
outsl
adc
mov
sar
cmp
ljmp
add
in
dec
sub
loop
mov
cwtl
out
cmp
push
testl
jl
adc
std
rclb
push
loopne
jne
pushf
push
jecxz
rclb
lock
pop
jg
jne
or
arpl
sub
outsb
cmpb
sbb
pop
or
addl
popf
sub
inc
pop
add
sub
mov
shrb
push
rcr
js
and
mov
jno
cmp
fdivr
jg
fld
cmp
lds
pop
icebp
and
movsl
jg
mov
mov
scas
inc
sub
cs
sbb
mov
rolb
sub
jno
hlt
aaa
fiaddl
pop
cmpsb
cmp
mov
cmp
cmpsl
mov
roll
sbb
inc
push
mov
imul
push
in
incl
in
add
repnz
jae
pop
dec
cmp
pop
stc
pop
loopne
cmpb
pop
aad
gs
dec
push
test
or
xchg
add
aam
ja
dec
sbb
std
dec
in
mov
sub
pop
fiadds
mov
and
decl
mov
lods
push
flds
or
test
dec
xchg
add
add
mov
pusha
popf
in
outsb
fdivrs
pop
mov
mov
pop
jno
rcl
lods
add
jne
out
mov
cmp
or
cld
data16
iret
add
je
fists
and
jnp
xchg
jae
icebp
dec
inc
cmc
mov
cmp
ret
jg
and
or
jne
push
cli
fbld
sub
rcll
mov
mov
loopne
adc
mov
lahf
dec
pop
ss
jp
add
push
pop
adc
aad
jle
pusha
pushf
ljmp
in
jmp
xor
daa
add
jbe
fsubrl
sbb
mov
ss
inc
pop
push
hlt
ret
adc
cmpsl
pop
or
shrb
adc
add
xchg
fstp
jg
adc
and
aas
dec
mov
xor
mov
and
lahf
adc
out
aam
jp
sbb
into
jbe
pop
sbb
cltd
outsb
shlb
movsl
adc
xchg
and
stc
push
arpl
insb
mov
push
jmp
and
adc
dec
mov
ss
outsl
cmpsb
cmpsl
xchg
mov
lret
pop
and
mov
dec
inc
cmpsl
mov
std
out
jbe
pop
cld
stos
test
adc
loope
add
cld
inc
mov
add
jg
or
test
cs
and
xchg
out
loop
cmp
imul
cmp
aam
unpcklps
pop
pop
lea
dec
cmp
cs
punpcklbw
loope
fcmovbe
jne
out
repnz
cs
mov
pop
aas
dec
adc
mov
mov
aaa
jbe
mov
adc
cmpsl
push
sti
mov
and
jmp
test
adc
xchg
sub
shlb
xor
ret
pop
cmp
sbb
out
and
stos
cld
jae
stc
verw
cld
shrl
lahf
movsb
mov
mov
fistpll
imul
pop
out
add
leave
xor
fbstp
cmpsb
inc
jmp
push
bound
mov
or
cld
add
repnz
jl
sub
cmpsl
push
pushf
sub
xchg
pop
inc
das
notb
imul
mov
fmuls
cmp
and
xor
rcl
lods
jo
xor
scas
dec
popa
mov
or
enter
push
or
add
cmp
add
scas
outsl
les
sub
adc
sbb
adc
shl
mov
push
pop
adc
pop
mov
daa
sub
aas
inc
or
fs
xlat
adc
addb
std
jp
push
sarb
sbb
push
pop
mov
sub
shlb
push
cltd
cmc
dec
push
nop
and
lock
std
aas
push
daa
les
xorb
jo
bound
out
inc
cmc
adc
or
pop
and
add
and
inc
pusha
mov
mov
test
fmuls
inc
push
or
loopne
jns
std
cs
dec
sbb
push
adc
and
push
or
rcll
imul
cwtl
lds
pushf
xchg
outsb
lcall
or
shrl
cmp
or
rol
pop
mov
lds
sbb
cmpsl
pop
mov
mov
or
mov
movsl
cmp
imul
in
into
cmp
or
lret
dec
inc
daa
shr
imul
push
mov
push
inc
ljmp
and
dec
mov
inc
fisttps
add
outsb
adc
fwait
push
sbb
repz
inc
mov
sbb
repnz
out
lcall
mov
jno
dec
aam
orl
jno
add
shrl
loop
je
push
sbb
test
or
or
testl
add
sub
push
lock
jmp
mov
or
nop
pop
int
icebp
pop
andb
mov
loopne
hlt
loop
fidivrs
xlat
lea
sub
mov
or
inc
add
and
inc
xorb
fwait
ds
or
cmp
outsb
add
mov
outsl
inc
iret
mov
insl
mov
or
les
push
loopne
push
push
cld
jne
popa
adc
inc
mov
ljmp
sub
or
inc
jmp
mov
fistpl
adc
mov
jl
push
push
inc
bound
cmc
nop
stos
and
adc
decl
add
xchg
ret
cld
mov
mov
into
pop
mov
mov
test
icebp
icebp
pop
test
cmc
cltd
pop
jne
movsb
cmc
mov
mov
cmc
call
outsl
xchg
clc
push
adc
pop
sub
mov
pop
mov
das
sbb
roll
and
sbb
inc
inc
add
mov
push
adcl
inc
and
cld
or
and
add
es
in
leave
dec
test
pop
sub
jp
js
ficomps
pop
fnsave
idivl
and
cmpsb
inc
addl
mov
daa
or
fistl
or
test
xchg
push
pop
pop
or
sti
insb
dec
lock
ret
jno
sub
pop
xor
test
outsb
in
test
in
lret
shr
imul
icebp
jmp
lods
dec
es
xchg
cli
in
stc
int3
jae
orb
xchg
xchg
pop
pop
fwait
pop
test
pushf
or
sbb
dec
mov
sbb
std
ljmp
scas
cmp
scas
jecxz
cmpl
dec
mov
sbb
jae
aad
cwtl
shrl
jl
jno
adc
outsl
iret
push
out
or
mov
mov
add
xor
mov
lods
pop
dec
sbb
rclb
shlb
hlt
lods
inc
inc
dec
aad
lds
add
test
xchg
in
xchg
or
outsl
cli
popa
insl
repnz
and
xchg
xchg
sub
inc
ret
jns
repnz
popf
cmp
adc
pop
jae
into
inc
mov
inc
xchg
sbb
loope
loop
add
lret
nop
xchg
loop
mov
sub
jg
push
adc
inc
bound
out
jmp
movsl
pop
sbb
mov
mov
dec
xor
xor
inc
and
push
and
or
mov
rcrb
and
mov
mov
ss
sub
add
and
jns
lret
hlt
jns
or
mov
pop
ficoml
bound
ret
dec
push
dec
pushf
inc
inc
xlat
loopne
aad
fiaddl
inc
pop
push
jbe
push
add
push
mov
lods
test
sub
dec
rorb
add
push
loope
cmp
adc
xor
unpcklps
out
das
in
cld
sbb
cmp
add
fucomi
ret
movsb
mov
push
mov
inc
shll
xor
inc
and
inc
mull
mov
push
fcoml
mov
movsl
sti
sbb
push
xchg
aam
mov
cmpl
xchg
pop
loope
adc
xchg
dec
int
add
mov
int
dec
loop
loopne
imul
dec
push
call
push
xchg
push
arpl
xor
inc
mov
inc
inc
mov
iret
mov
sub
lock
insb
das
nop
test
les
add
insb
ret
fimuls
enter
pop
subb
and
push
push
mov
cmp
xchg
add
mov
pop
js
add
std
sub
sbb
scas
and
clc
inc
sbb
cmpsb
mov
imul
clc
mov
sar
iret
mov
ss
cmpsl
cltd
cmp
cs
mov
mov
or
test
add
fadd
sbb
inc
sub
fcompl
test
test
int3
mov
xor
add
xor
lret
xchg
pushf
jge
cmc
jbe
divl
jg
sub
push
mov
nop
fadd
in
hlt
adc
add
jl
outsl
xchg
pop
xor
loope
lock
fwait
ljmp
mov
pop
pop
icebp
mov
insl
xchg
addr16
and
adc
lahf
ja
sbb
inc
cmpsb
out
sar
daa
add
mov
mov
ja
lods
jo
insb
push
and
add
fbstp
mov
or
xor
inc
xchg
mov
or
fdivrp
ret
add
sbb
push
xchg
pop
mov
jnp
cmp
pop
push
les
push
jecxz
xchg
sbb
imul
ret
in
pop
ja
cmc
jecxz
scas
aaa
push
jecxz
or
bound
xchg
push
sbbb
mov
aam
fidivrl
lods
jne
xor
push
inc
pop
stos
dec
shll
mov
cltd
xchg
adc
mov
stos
inc
and
or
call
movl
jle
push
add
jmp
mov
test
ret
ret
lret
jp
cld
je
addr16
test
stos
xchg
gs
lock
cmc
stos
sbb
adc
loope
push
in
mov
lret
call
push
stos
fwait
outsb
sbb
addb
cmpsl
adc
cld
push
aas
ss
inc
xchg
xchg
gs
sar
sbb
dec
push
imulb
lret
dec
jg
jle
adc
ret
mov
mov
or
cli
aas
hlt
outsl
sbb
movsl
push
lock
lods
mov
mov
jecxz
dec
fsubrp
decl
xchg
mov
fldl
in
pusha
xchg
movsl
roll
ds
lds
mov
and
lock
mov
popa
add
push
pushl
frstor
adc
jmp
jp
add
scas
iret
jg
mov
dec
loopne
and
out
mov
pop
pop
cwtl
or
sbb
push
loopne
cmpsb
stos
jnp
pop
jg
fcoms
push
mov
jecxz
nop
das
popa
xor
pop
mov
lods
leave
add
es
pop
cwtl
cli
int3
sub
cmp
ss
lds
repnz
stos
ficoms
jmp
ja
or
adc
adc
out
outsb
jle
cmpsl
push
push
je
adc
adc
add
and
out
repnz
xchg
dec
divl
cmp
andb
or
mov
dec
out
mov
test
clc
push
xchg
inc
sub
push
or
cld
jg
ljmp
add
lods
jle
and
shlb
lods
fs
shrl
jl
add
lods
mov
mov
inc
daa
inc
hlt
inc
xlat
cld
mov
into
add
push
adc
mov
sub
xor
ss
aas
dec
scas
jle
ret
fs
or
sub
mov
push
cmp
mov
pop
mov
ds
aas
adc
adc
add
mov
out
sbb
adc
mov
mov
es
jo
adc
adc
mov
adc
cli
xchg
push
emms
add
sub
add
fucomip
xchg
or
sub
add
pop
clc
pop
push
push
or
mov
dec
adc
shl
les
add
pushl
jbe
lret
inc
adc
jl
hlt
int
clc
cltd
rcl
pop
push
insl
jl
jg
inc
push
dec
aaa
je
adc
mov
mov
fld
es
jge
mov
cmp
jno
into
daa
mov
scas
mov
lds
or
orb
fwait
adc
pop
jbe
push
in
es
pushl
lea
leave
test
pop
jecxz
cmpsl
adc
sbb
test
loop
lock
xchg
pop
ret
cmp
mov
es
xor
or
in
bound
sbb
jns
adc
mov
mov
fdivr
mov
aas
popf
cwtl
jp
and
loope
sub
mov
cmpsl
fisttpll
adc
mov
xor
push
sub
mov
jno
lods
push
inc
inc
out
dec
aad
and
push
inc
dec
aas
pop
sbb
daa
sbb
aaa
xor
enter
sarb
sbb
outsb
sbb
out
lcall
and
pop
rorl
and
adc
outsl
push
mov
aam
push
mov
sub
xchg
mov
add
push
sbb
je
sub
pop
pop
gs
clc
mov
jo
or
mov
inc
mov
loope
inc
and
repz
or
sti
sbb
adc
fisttpll
mov
iret
es
dec
mov
pop
das
hlt
sbb
dec
mov
arpl
lret
rol
fimull
inc
mov
std
lds
mov
mov
xchg
sbb
adcb
jb
mov
lret
inc
mov
ljmp
sti
daa
add
push
shl
mov
mov
adc
xchg
aad
jbe
lods
jb
xor
dec
lahf
lea
outsl
dec
pushf
mov
xor
or
sbb
cli
rcr
mov
aas
jecxz
mov
adc
mov
lret
push
call
sub
stos
dec
ss
popa
or
or
push
fisubrl
test
loopne
ljmp
sbb
std
cmp
jmp
adc
and
inc
adc
or
scas
xchg
loop
add
or
aas
loopne
mov
into
jle
dec
mov
loope
dec
hlt
ja
jle
push
jecxz
xchg
orb
dec
addr16
cli
jg
add
jecxz
push
ret
jecxz
mov
cmp
xchg
scas
repz
sti
mov
or
adc
adc
in
cwtl
push
ljmp
or
mov
movsb
xor
ret
hlt
neg
ljmp
pop
cmc
outsl
loopne
jnp
cmp
jmp
sti
in
ret
and
push
sahf
cmp
mov
decl
jecxz
and
and
add
adc
mov
fsts
sti
jg
cld
in
jb
mov
push
jns
fs
jp
shlb
cmp
adc
xchg
out
sbb
adc
xor
or
jmp
sub
mov
mov
xchg
insb
imul
inc
push
jbe
testb
lahf
adc
push
shll
add
or
and
andb
add
mov
or
pop
add
cmp
mov
pop
in
and
dec
pushf
fwait
std
inc
jl
icebp
sub
pop
lock
adc
mov
mov
pop
jge
mov
adc
add
xchg
fldcw
es
orl
loope
stc
dec
pop
or
mov
movsl
inc
sub
push
ret
xlat
pop
adc
mov
pop
mov
pop
pop
or
addr16
push
out
pop
bound
incb
adc
pop
cmp
xor
movsb
and
sbb
pusha
popa
or
xchg
andl
jle
lods
int
int
mov
sub
push
enter
sub
sti
add
dec
sub
popa
push
mull
pop
mov
cmpsb
dec
push
cmpsb
add
outsl
dec
push
mov
mov
ficoml
pop
xor
inc
loope
xchg
ds
and
in
mov
cmc
push
mov
xor
jmp
aaa
jge
inc
push
mov
pop
jge
test
push
bound
sbb
add
dec
push
sub
rcrl
popf
cld
pop
ficompl
in
bound
inc
out
shrb
enter
sub
inc
cli
jns
mov
sub
xchg
cmc
push
cmp
jmp
jb
mov
xchg
fcomps
add
cli
sbb
in
fiaddl
lock
xor
std
or
nop
adc
xchg
call
scas
test
lock
cmc
pushf
dec
cld
testb
jno
cwtl
dec
sub
or
mov
arpl
jecxz
repnz
testb
adc
push
mov
or
push
bound
push
decl
push
mov
mov
test
decl
pusha
pop
lods
wbinvd
cmp
lods
inc
cmpsb
sub
add
lahf
jnp
jg
inc
out
ljmp
jae
addr16
test
lock
xor
inc
push
xchg
adc
lahf
orb
add
mov
pop
repz
cs
mov
je
and
into
js
cmp
call
mov
outsb
cmpb
test
jnp
test
add
jmp
or
pushf
jle
loopne
nop
mov
repz
ret
or
test
pop
rclb
and
push
cmpsl
outsb
sbb
adc
mov
in
fnsetpm(287
xor
mov
andb
in
jg
cmpsl
jp
adc
push
into
ret
sub
push
and
cmpsb
cmp
or
xor
scas
popa
cmp
flds
or
fcmove
adc
addl
mov
in
dec
mov
fs
loop
xor
hlt
dec
icebp
push
loop
bound
test
ljmp
inc
lahf
movsb
mov
cmp
fptan
push
or
pop
xchg
push
es
fsubr
ljmp
repz
test
cmpsb
mov
jns
lods
dec
popl
push
xor
push
cld
addr16
test
inc
xchg
or
rcrb
lds
xlat
jmp
inc
shll
and
jnp
shl
in
rorl
push
sarl
dec
sbb
pop
jne
sub
xor
mov
add
xchg
orb
jle
and
loop
icebp
pop
add
andb
js
ficoml
je
mov
aaa
shl
adc
mov
cmp
push
popf
stc
mov
popf
mov
bound
lock
adc
push
mov
and
pop
mov
test
std
push
mov
std
arpl
inc
mov
pop
popa
push
hlt
movsl
test
call
mov
pop
and
mov
xorl
jle
inc
and
mov
and
jg
add
daa
mov
or
scas
and
mov
call
mov
or
test
pop
jl
pusha
mov
shlb
add
mov
inc
and
pop
clc
dec
sbb
cmp
repnz
lds
lea
sbb
add
stos
sbb
fadds
cld
rorl
idivb
outsl
outsl
add
repz
int
mov
daa
adcl
stos
pop
pop
lds
lcall
cs
fbstp
pop
aaa
pop
test
pop
pop
mov
ss
out
jb
mov
and
lock
mov
out
cmp
nop
inc
jl
or
mov
stos
mov
pop
or
jbe
aam
in
sbb
cli
inc
js
push
inc
inc
fidivl
jge
loop
sbb
mov
add
pushf
cli
jne
andb
dec
call
mov
sub
or
mov
mov
into
pop
xor
je
shll
jnp
pop
nop
das
or
sbb
sub
std
lret
mov
mov
mov
stc
xchg
subb
pop
xor
jmp
je
adc
xor
mov
sti
sbb
out
mov
cmp
test
push
push
mov
and
mov
dec
jl
les
xor
gs
loopne
cs
aas
xchg
cmp
and
clc
fisttps
xor
push
push
xor
or
cmp
icebp
push
out
add
mov
mov
mov
jnp
inc
add
outsb
mov
dec
aaa
inc
sti
jg
cmpsb
and
testl
stos
pusha
cmp
lar
sbb
ret
mov
rolb
fisubs
incl
push
test
rcll
daa
jo
sub
push
sbb
leave
adc
pop
sub
cmp
pop
rcr
or
xchg
dec
mov
adc
sbb
sbb
add
stos
fldt
mov
and
jecxz
sub
jo
pop
pusha
push
sarb
sahf
cld
mov
sub
push
xbegin
xchg
popa
nop
pcmpeqb
mov
std
adc
or
add
call
push
cmp
xchg
gs
sub
stos
bound
mov
incl
and
push
xchg
mov
stos
cmpsb
sub
push
addb
jb
and
shlb
je
test
inc
pushl
insb
test
push
sahf
fcoms
fnstsw
mov
push
fisubrs
sub
lods
and
cmc
xchg
cltd
dec
repz
mov
nop
mov
inc
push
repz
mov
adc
xchg
adc
sbb
dec
test
jns
mov
movsb
pop
in
and
jl
gs
or
roll
jno
mov
add
neg
insb
repz
shl
mov
scas
push
inc
pop
inc
add
std
inc
int
push
loope
pop
xor
test
lods
ficomps
scas
pusha
lds
cld
test
cld
xchg
cld
movsl
lret
leave
arpl
mov
add
mov
push
arpl
ja
and
and
jecxz
ret
sbb
xchg
sti
arpl
jg
cmc
sti
loop
adc
xor
mov
popa
adc
jge
inc
cmp
in
sbb
jo
mov
xor
mov
test
jbe
sar
push
mov
bound
in
fidivl
add
fdivr
adc
scas
xchg
mov
mov
cli
pop
or
jp
fwait
cli
test
movsl
int
imul
mov
xchg
mov
push
mov
stos
mov
lods
imull
push
out
adcl
inc
fwait
and
jg
pop
cmpsl
xor
push
cwtl
jge
stos
cmpb
pop
std
ret
cwtl
sbb
xor
cwtl
rcrb
push
mov
ret
lcall
adc
cmpl
adc
mov
add
enter
mov
lds
imul
mov
xor
test
cs
int
dec
mov
push
jmp
xchg
pop
aam
mov
out
or
sbb
mov
orb
es
inc
pusha
mov
or
sbb
mov
xchg
imul
or
sbb
dec
dec
xchg
jbe
push
outsl
insl
outsl
jno
inc
sbb
mulb
ljmp
inc
cmpsl
and
dec
jg
and
add
push
and
ss
push
cli
iret
inc
or
aaa
cmp
mov
push
aaa
jne
pop
pusha
movsl
or
jmp
out
inc
mov
jg
mov
pop
std
ss
mov
shrl
aad
pop
and
and
outsl
lret
pop
mov
repnz
ficompl
pop
cmp
aam
jo
lret
aam
cmp
sbb
jl
and
ficomps
sahf
idiv
mov
pop
incl
pop
sqrtps
test
add
xchg
sbb
mov
bound
ffree
data16
sbb
jecxz
mov
cmp
xor
nop
enter
mov
add
push
cld
fcompl
sbb
idiv
pop
jmp
cmp
push
frstor
aam
jne
and
or
shll
mov
test
pop
mov
aas
lahf
outsl
js
sub
jo
and
mov
inc
cmp
mov
idiv
ret
or
add
or
subb
mov
mov
push
lahf
ret
adc
or
stc
mov
mov
jne
leave
or
jecxz
sti
lods
sub
and
add
jb
pop
scas
jg
sub
enter
std
jmp
rol
aam
pop
loopne
pop
jb
cmp
movb
aam
push
push
nop
cmp
out
add
cmp
aad
fstl
test
adc
je
lahf
sbb
out
push
dec
jbe
xchg
cmp
push
pusha
in
data16
repnz
lret
mov
ret
hlt
movsl
repz
or
cmp
mov
das
or
outsb
inc
fdivr
adc
fists
outsb
jbe
xor
aas
mov
stos
shll
push
add
out
lock
das
in
add
shl
out
lock
xchg
push
mov
nop
push
inc
cwtl
and
sub
inc
int3
mov
bound
mov
cwtl
inc
mov
sbb
or
test
mov
adcb
sahf
sti
adc
mov
mov
mov
mov
idivl
fs
pop
insb
add
pushl
call
in
xor
cmp
out
jnp
insb
mov
jecxz
sub
lahf
inc
sahf
dec
stos
jae
pop
fmull
es
adc
jae
push
pusha
js
or
mov
xchg
xchg
stos
out
mov
call
movsb
imull
jle
les
sahf
inc
cmpsb
pop
loopne
adc
imul
adc
sbb
in
pop
out
pop
imulb
bound
jb
in
xchg
sbb
loope
push
and
mov
push
out
outsl
imul
lock
out
xchg
bound
xchg
sti
testb
jne
sub
jl
xchg
decl
movsl
cli
nop
ljmp
or
out
jl
adc
mov
sbb
jecxz
adc
mov
and
mov
ljmp
push
xlat
or
push
push
test
inc
pop
or
loop
icebp
or
lock
les
loop
mov
dec
rorb
pop
arpl
dec
mov
jle
stos
sbb
jl
push
mov
and
xchg
mov
xchg
aad
jl
sbb
push
mov
dec
inc
pop
sub
js
inc
pop
popa
test
popl
rcl
inc
cmp
subb
mov
adcl
sub
mov
std
lock
dec
inc
pop
cmp
sbb
cmp
mov
adc
inc
pop
outsl
xor
out
pop
sub
xchg
jl
leave
sub
rcll
pushl
ficoml
add
fidivrs
push
rolb
addb
xchg
mov
icebp
jg
sub
adcl
jecxz
adc
lcall
incl
cmp
andl
push
insl
aas
sbb
orl
lahf
and
fisttps
push
outsl
inc
cmp
xchg
out
pop
mov
pop
xorb
pop
xchg
inc
and
jnp
test
loop
mov
stos
decl
and
fsubp
ds
jmp
std
xor
or
cmpb
sbb
subb
sbb
aam
clc
or
int3
mov
hlt
jg
lods
mov
ret
call
ja
ret
mov
sbb
out
mov
jo
dec
mov
adcb
push
aas
sbb
adc
add
or
push
jnp
imull
fiadds
sub
push
pop
or
cli
pusha
jns
int3
mov
out
xor
imul
jae
enter
mov
and
lods
push
xor
adc
les
lahf
subl
mull
incb
mov
mov
mov
cmc
enter
push
test
adc
inc
mov
mov
inc
in
cmp
test
fdivs
inc
add
pop
rolb
int
push
movsl
mov
push
pop
pop
cmp
out
sahf
rcl
sbb
or
mov
xchg
inc
jne
jno
test
add
lahf
xorl
dec
or
movsb
pop
cmp
add
and
pop
lods
add
dec
jmp
ss
out
adc
inc
lods
loopne
fcmovnu
pop
and
and
xor
mov
std
sbb
cwtl
iret
cld
xchg
mov
and
adc
jge
fildl
sbb
mov
mov
xor
cmp
pop
sbb
mov
insb
jg
push
and
push
inc
fadd
ficompl
cmp
push
in
and
pop
movsb
shlb
mov
ret
pop
aam
int3
dec
xchg
mov
jg
mov
enter
stc
mov
jecxz
pushf
push
out
push
cld
dec
xor
jle
inc
das
or
adcb
mov
mov
or
dec
xor
push
cwtl
mov
pop
mov
aam
xor
pop
lods
or
int3
mov
fsubrl
std
decl
leave
call
dec
adc
arpl
pop
push
push
or
and
sbb
sub
adc
mov
aad
imul
push
ss
out
test
mov
out
popf
fdivp
and
fs
lcall
mov
outsl
repz
adc
inc
cmpsl
ret
inc
sbb
shll
bound
sbb
cmp
clc
pop
push
lods
jne
ljmp
arpl
mov
xlat
ret
loopew
adcb
add
jo
or
add
addl
jns
adc
loopne
out
mov
ds
mov
xor
jl
inc
sbb
ds
sub
add
add
in
pop
ja
pop
loopne
imul
jmp
or
and
mov
xor
cmp
add
inc
shll
push
add
cmp
fimull
and
mov
jp
call
and
mov
inc
ret
jne
loope
je
mov
xchg
pop
cmpsb
pop
or
jg
pop
lods
or
inc
inc
mov
repnz
call
movsb
fimuls
mov
xor
push
or
outsb
dec
ret
mov
movsb
xchg
push
cmp
pop
xor
xlat
dec
and
inc
lods
test
stos
ret
or
icebp
dec
fs
nop
or
push
movsl
mov
cmc
dec
lds
cmp
scas
lea
dec
sbb
fldcw
popf
test
mov
sub
outsl
imul
mov
iret
sub
jae
decl
ljmp
mov
cmp
xchg
mov
jne
jl
daa
or
std
adc
mov
stc
mov
pop
pop
pop
loope
add
ret
les
in
lock
cmp
rcll
jle
ds
xchg
lcall
cmp
jmp
adc
pushf
sub
ret
push
pop
jbe
add
xor
xchg
sahf
dec
cli
jg
jo
pop
or
lods
and
mov
adc
inc
call
cs
stos
jp
sti
push
mov
mov
cmc
dec
cmpsb
mov
fcoms
rol
inc
lds
jbe
mov
and
mov
movsl
out
adc
inc
das
mov
add
jmp
sub
mov
outsb
ret
loopne
sub
mov
or
or
mov
test
dec
incb
push
jnp
pushf
rolb
inc
push
lods
mov
lahf
xchg
hlt
and
xchg
sarb
pop
in
fstpt
xchg
sbb
sbb
dec
aad
js
mov
data16
call
cmpsb
repnz
and
call
sahf
cmp
popa
int3
lret
in
mov
adc
cmp
and
out
mov
jle
testl
and
in
loope
sbbl
clc
mov
push
stos
inc
sub
scas
dec
imul
int
inc
lock
orb
outsb
mov
or
or
fsts
or
xchg
outsl
or
sub
daa
adcb
mov
sub
jno
arpl
das
inc
and
es
and
inc
insb
mov
popl
xchg
jo
lds
js
add
push
jmp
inc
or
call
mov
adc
dec
jo
roll
fwait
and
xchg
pushf
addb
and
or
adc
push
inc
cmpsb
rolb
add
inc
or
inc
dec
xchg
sar
pop
test
dec
repz
nop
sub
adc
aad
push
pop
pop
adc
sub
jmp
dec
ret
xchg
and
inc
xor
cmp
iret
inc
jno
inc
lock
add
fildll
jnp
and
es
xlat
repz
add
imul
stos
adc
sub
sub
ljmp
or
lret
xor
cld
loopne
repz
in
ss
push
cmp
je
add
je
mov
push
inc
jmp
call
loop
lahf
push
mov
lret
leave
sub
mov
pop
dec
mov
push
cmc
jp
or
cld
lcall
into
push
jb
mov
test
inc
adc
mov
pop
dec
orb
ss
cmpl
inc
outsb
mov
int3
lds
cld
jp
aam
mov
mov
and
subl
pxor
mov
adc
adc
cmp
jmpw
push
insb
pop
out
jae
aas
push
xor
aas
lahf
push
popa
packssdw
mov
pop
or
jg
or
int3
notb
jb
xor
xlat
imul
lock
rcl
mov
and
mov
bound
add
andb
sub
in
std
jg
sarb
add
xor
es
mov
stc
cmpsl
jae
pop
inc
xchg
sti
imul
clc
mov
outsl
aam
mov
lock
cltd
dec
and
mov
jno
popf
arpl
shl
or
mov
jb,pn
call
pop
shlb
and
jbe
sarb
or
xor
xchg
repz
insl
scas
das
push
xchg
addr16
lock
das
cli
popa
add
push
or
call
leave
pop
xchg
or
cltd
iret
popf
nop
sbb
leave
ljmp
pop
popa
xor
or
push
cld
sub
pop
pop
inc
jmp
inc
cwtl
pusha
mov
jo
lea
mov
push
jmp
adc
sub
jo
jno
cmc
cmc
push
les
jno
xor
mov
rolb
in
mov
nop
scas
cmp
cmp
mov
cmc
dec
jle
xor
jno
rcrb
cltd
and
ljmp
mov
mov
ret
push
inc
loopne
fstps
cmpb
rcll
mov
or
push
mov
shll
fsubrp
pop
or
push
std
roll
mov
ret
mov
fs
inc
arpl
lahf
ret
daa
cld
fisttps
scas
sbb
mov
mov
and
rol
push
sub
lods
cmc
fisubs
or
icebp
into
cld
outsb
test
push
mov
xor
iret
mov
lcall
mov
xchg
jge
adc
std
adc
sub
pusha
jns
je
addl
push
and
loopne,pt
out
sbb
adc
mov
mov
dec
pop
and
cmpsb
fistl
dec
aaa
cwtl
movsl
fidivrl
nop
repnz
mov
add
mov
pop
stc
cwtl
push
dec
or
je
std
mov
pop
or
hlt
sub
add
es
mov
lcall
sbb
xchg
jl
stos
jge
fdivr
dec
adc
adc
aaa
call
mov
in
adcl
mov
pop
xchg
and
test
or
and
jecxz
push
fistpl
test
cmpb
stos
test
cli
pop
or
cli
insl
sub
aaa
call
sub
mov
add
lock
fs
shl
xchg
adc
pop
insl
inc
and
ljmp
arpl
mov
push
mov
mov
arpl
lcall
out
mov
or
call
push
pusha
decb
mov
add
jo
sub
push
xor
ljmp
in
and
out
mov
sub
loopne
outsb
jl
xor
xchg
outsb
inc
imul
inc
and
idivb
outsb
fstpl
xlat
sbb
arpl
or
mov
fcomip
ss
lock
xor
mov
and
scas
adc
fs
std
dec
sbb
cltd
adc
cmovae
test
loope
adc
pop
push
icebp
pushf
sub
cmpsb
stos
push
jmp
jg
cmpsb
lods
int
jle
inc
sbb
jp
jbe
jnp
in
out
mulb
shrb
mov
ret
cli
add
mov
jp
and
sub
add
icebp
outsl
ds
mov
shlb
in
push
repz
xchg
clc
test
xchg
jecxz
add
push
jbe
adc
in
pusha
cmc
mov
xlat
inc
or
inc
cs
cmp
aam
xlat
and
outsl
jge
test
popa
nop
inc
push
pop
mov
sbb
inc
push
addr16
shrl
jge
inc
xchg
cmp
aas
sbb
icebp
outsb
dec
leave
xor
aad
mov
pop
xor
mov
or
inc
jnp
clc
dec
push
scas
sbb
je
gs
jmp
cmp
pop
in
mov
repz
jp
cmp
in
or
stc
xchg
loope
xchg
push
push
sub
insb
xor
mov
jo
adcl
je
pop
mov
out
out
jp
incl
mov
push
cmp
in
in
dec
in
call
imul
add
clc
lea
jbe
cmp
sbb
lods
pop
adc
and
sbb
mov
pop
in
sub
push
adc
xchg
ret
sbb
les
aas
mov
sbb
bound
xor
mov
xlat
dec
int3
mov
in
pop
movsl
movq
pop
fs
mov
or
es
push
xor
cmp
aaa
mov
icebp
pushf
add
popf
inc
test
jl
sub
out
sbb
mov
sarb
nop
clc
inc
test
in
int3
fldcw
dec
outsl
mov
jp
imul
inc
mov
mov
inc
xchg
pop
pop
cmpsb
adc
xchg
into
jp
xor
int
stos
xchg
fmull
push
jg
sbb
mov
adc
cmp
call
adc
pusha
movsb
sbb
sahf
stc
test
add
fistpl
lods
sbb
sbb
call
mov
cmc
repz
cmc
lcall
and
comiss
xchg
xchg
imul
jbe
pop
xor
outsb
iret
xchg
push
into
mov
cmpsl
aad
fwait
lods
test
imul
dec
sarb
addb
sub
and
jg
sbb
and
call
jno
fldenv
adc
rclb
sbb
and
cmp
and
fucomp
or
das
adc
loope
test
test
push
rcll
push
mov
pop
orb
pop
pop
fdiv
push
or
mov
inc
pop
loop
ds
jl
jae
xchg
stos
imul
xor
mov
xor
ret
add
mov
cwtl
dec
pop
jo
ret
js
int3
loopne
into
roll
jo
cld
xor
ss
out
rcrb
mov
sub
fsub
dec
fbstp
mov
sub
xor
std
sub
inc
cmp
loope
and
je
push
cmp
in
ss
sbb
fnstenv
mov
push
xchg
xchg
cmpsl
and
cmp
jo
sbb
loop
add
test
fiaddl
stos
dec
or
and
arpl
bound
clc
hlt
lds
and
pop
clc
jge
hlt
mov
push
xor
cwtl
adc
xor
loop
mov
add
and
cmp
sbb
rcrl
lods
xor
shlb
jp
sbb
mov
stos
cmc
lods
sbb
cmpsl
pusha
mov
dec
or
or
or
pop
push
mov
pcmpeqw
add
scas
push
lcall
addr16
jno
adc
inc
push
mov
call
jne
inc
pop
in
test
cmpsb
push
adc
and
xchg
mull
and
lahf
mov
push
or
mov
movsl
pop
push
lret
sub
dec
adc
std
data16
out
inc
les
pop
adc
orb
mov
roll
movsl
jmp
sbb
cmpsb
xchg
pop
shll
fcompl
insb
das
push
ja
das
jge
push
push
or
xchg
cmpb
or
lcall
and
fcmovnb
lcall
jno
icebp
cli
outsl
jp
mov
adc
aas
sub
and
sub
push
jb
sbb
mov
cltd
mov
aad
jl
push
jp
test
push
std
xor
fnstenv
shl
push
aaa
xchg
xchg
push
in
nop
mov
jbe
cmp
mov
in
gs
jo
cmpsl
xchg
mov
hlt
sub
mov
inc
sub
addb
imul
or
mov
sub
and
dec
fldenv
dec
sbb
cmc
push
out
sbbl
call
mov
lea
adcl
sbb
shrl
or
jae
rorb
xor
mov
cmp
push
xor
lret
mov
cmpsl
sub
dec
xor
dec
pop
xchg
inc
add
lret
subl
mov
movsb
mov
ds
jle
decl
fs
test
insb
xor
and
cld
outsl
fisubs
test
lcall
bound
jmp
lcall
ret
sbb
or
mov
pop
loope
sub
xor
in
sbb
pop
fs
jge
add
leave
ljmp
inc
in
cwtl
dec
in
cwtl
outsl
repnz
jge
scas
or
xor
aas
or
xor
push
out
sbb
lds
gs
pop
lcall
je
scas
push
and
fistl
repz
fcomps
test
push
cs
xchg
push
pop
push
setle
adcl
ja
inc
xor
rolb
or
lock
sbb
mov
imul
sub
negb
outsb
pop
cmp
push
or
stos
push
shlb
xor
cs
aaa
cwtl
xchg
in
xor
mov
test
pop
jo
mov
xchg
shl
adc
cwtl
lods
cmp
lods
pop
rcrl
pusha
imul
fldenv
mov
push
mov
cmp
clc
and
incl
push
dec
and
repz
add
cmc
jae
jmp
shr
xor
mov
xchg
mov
add
stc
loop
mov
dec
popa
les
or
stc
call
sbb
rorl
cli
jge
les
int
pop
movsl
nop
sub
sbb
pop
mov
mov
test
or
dec
ret
sub
movsb
pop
dec
pop
xchg
jg
movsl
gs
mov
test
mov
lret
mov
jl
mov
inc
add
xlat
mov
or
sahf
adc
inc
xchg
push
xchg
push
mov
fisubrl
adc
add
inc
repz
cmp
test
dec
pop
and
out
sbb
mov
loop
sbb
dec
pop
or
sti
adc
mov
xchg
div
insl
ret
and
dec
sub
and
adc
icebp
cmp
ret
out
push
xor
dec
add
sub
dec
jge
and
push
shrl
lods
rcrl
aaa
adc
sub
mov
inc
fsubrl
jl
xchg
loopne
jg
pop
dec
ret
fs
sub
loopne
sub
into
mov
movsl
daa
mov
mov
aad
or
or
add
call
add
hlt
push
pushf
adc
ret
mov
or
ret
jecxz
xchg
mov
popa
mov
lods
testl
jge
ds
dec
mov
push
and
loopne
stc
sub
sbb
into
nop
addr16
pop
scas
jns
sbb
xchg
pushf
iret
test
sbb
mov
inc
test
mov
aam
sub
dec
cld
shrl
push
dec
pop
addr16
xor
adc
roll
jb
sbb
or
test
xor
hlt
and
fistl
push
lods
mov
std
and
dec
jbe
mov
cmpsb
cmc
scas
arpl
iret
push
add
push
into
or
xchg
and
fisttps
sbb
inc
and
mov
xor
cmc
and
lahf
jp
push
add
lock
and
adc
mov
jmp
lret
and
or
je
add
xchg
pushf
add
out
dec
mov
cs
aas
inc
adc
movsb
and
fwait
jl
andl
jb
pop
lahf
mov
test
fstpl
jl
into
jg
mov
add
mov
dec
add
rcr
add
lret
lcall
pop
sbb
sbb
xor
jge
xchg
ljmp
mov
push
test
mov
aas
inc
add
xchg
test
xchg
jo
hlt
or
aad
sarl
add
and
mov
cli
pop
and
fbld
jnp
ljmp
andl
call
sbb
decl
push
outsb
ds
sub
jl
sbb
stos
adc
xor
mov
or
add
cmp
jnp
push
std
mov
cmp
mov
sbb
xor
fldl
aas
sahf
call
les
and
outsb
fstl
aam
mov
sub
aad
cmp
mov
icebp
call
int
pop
push
push
dec
pop
cli
lret
mov
dec
addb
cmp
ds
stc
aaa
mov
jbe
push
push
pusha
je
negb
pop
movsb
sbb
pushf
bound
pop
bound
push
fists
dec
or
mov
mov
inc
dec
mov
popa
sub
mov
fwait
jle
movsl
add
fistpl
lea
jmp
cmp
cmp
and
ss
pushl
xor
loope
mov
int
fnsave
enter
mov
stc
xor
cli
insl
mov
inc
mov
mov
inc
add
push
shll
jbe
rol
bound
mov
pop
fidivrl
jnp
loopne
add
add
dec
shll
jno
mov
stc
aam
mov
inc
insl
jae
push
push
mov
gs
inc
mov
scas
cli
lcall
inc
data16
sub
push
pop
jno
lcall
push
stos
daa
movsb
ljmp
mov
or
or
add
mov
loope
les
das
in
xor
rcrb
sub
sbb
cmp
mov
push
std
aas
xlat
cli
es
cld
out
faddl
or
mov
xchg
mov
xlat
cmp
inc
adc
loopne
mov
stc
xlat
cmp
imulb
jne
int3
jo
xchg
enter
inc
loopne
push
lock
jne
jp
inc
scas
xor
insb
fldl
push
ljmp
pop
sbb
jp
push
adc
out
int3
ds
lcall
or
sub
cmp
xor
fidivs
ja
sti
and
jbe
in
cli
pop
adc
xchg
push
and
mov
sbb
sbbl
xor
xchg
add
or
lock
sub
inc
pop
mov
jbe
iret
iret
add
add
fisubrl
mov
popf
mov
add
push
add
jmp
add
mov
outsl
scas
lods
mov
mov
in
call
inc
mov
mov
imul
movsb
data16
in
stos
cmpsb
loope
pop
lcall
cld
or
in
mov
fwait
push
and
cwtl
test
pop
mov
mov
xor
mov
lock
shl
xchg
inc
scas
and
ret
mov
movsb
clc
pop
ljmp
leave
add
fnstcw
mov
mov
mov
dec
repnz
xor
js
in
ljmp
sub
ljmp
or
mov
lods
xlat
shr
mov
xor
rcl
xchg
mov
push
mov
lock
int
cmp
add
xchg
dec
mov
incl
inc
faddl
mov
repnz
pop
adc
nop
inc
orl
rcr
js
lcall
leave
sub
cmc
adc
aas
mov
sub
mov
sub
and
dec
mov
cmp
ret
xchg
pop
push
in
mov
sti
pushf
loopne
pop
imul
jl
arpl
or
jecxz
test
pop
cli
adc
jo
bound
inc
js
dec
add
inc
cmpsl
push
mov
push
add
cmpsb
fdiv
mov
incb
push
push
sub
repz
pop
or
or
rorb
test
lea
sbb
cmp
into
mov
cli
push
pop
adc
cld
imull
inc
fcoml
jmp
mov
shr
xchg
or
fdivp
lds
test
or
mov
ja
out
dec
add
stc
nop
pushf
movsb
mov
sbb
push
and
mov
outsl
jp
in
sub
mov
lds
addr16
mov
jg
leave
add
ret
loope
add
imul
xor
jle
loope
mov
aaa
dec
stos
ss
lahf
or
push
jg
lea
lcall
jle
addr16
sbb
sub
lock
fcomp
lahf
fcmovbe
in
jle
inc
or
jle
inc
xchg
jg
mov
mov
std
push
pusha
adc
mov
std
xor
push
inc
inc
rorb
out
or
int3
int3
jg
lds
push
jl
adc
scas
sbb
mov
sbb
inc
shrb
adc
pop
daa
aas
outsl
jno
xor
loope
and
xor
mov
call
adc
mov
mov
les
sub
in
icebp
popa
add
jecxz
cmp
push
mov
je
jo
inc
leave
mov
cmpsl
js
mov
dec
adc
jl
insl
cli
push
aad
mov
daa
jno
icebp
add
push
xchg
or
pop
inc
pop
test
sub
inc
test
cmp
not
xorb
mov
dec
cmp
cmp
stc
call
dec
or
das
mov
xor
loop
ret
call
arpl
into
mov
mov
add
pop
popf
and
push
in
add
aas
adc
loop
das
sub
push
cli
sbb
jbe
push
push
add
and
jp
mov
cmp
je
cmpl
inc
sar
stos
or
and
aas
jb
sbb
mov
mov
xor
dec
mov
iret
imul
add
xor
movsl
loope
rcrl
arpl
jg
data16
jno
cltd
sub
ret
outsl
jge
rclb
movd
mov
ja
push
jno
jo
jo
call
inc
xor
add
pop
add
add
inc
xor
pop
and
dec
fwait
in
sub
dec
in
push
mov
adc
pop
orb
adc
popf
lret
sbb
cwtl
push
in
jg
out
adc
fs
aaa
pop
push
cmc
mov
sahf
bound
movsl
mov
push
adc
das
push
mov
rcr
setb
stos
xor
inc
lods
inc
ret
rorb
icebp
ljmp
sub
push
pop
cmp
das
adcb
pop
ss
push
in
fisubrl
cld
dec
gs
leave
adc
cs
mov
add
or
adc
inc
and
or
sub
push
dec
fadd
stos
dec
push
or
push
push
xchg
jb
shlb
mov
inc
jmp
in
xchg
rorb
repnz
inc
sbb
je
push
addl
incb
in
mov
stos
lods
fidivrl
popa
insb
popa
mov
mov
jmp
dec
icebp
inc
xor
dec
mov
push
stos
add
sbb
push
mov
cmpsl
push
sbb
inc
test
pop
rcrl
sub
rcll
mov
xchg
inc
cld
dec
jl
sbb
cli
pushf
mov
xor
jp
int
js
sahf
loopne
decl
sub
jle
mov
adcb
xchg
test
add
and
icebp
push
pop
lods
cmp
push
shrl
cmp
fnsave
popa
mov
or
aad
push
lea
add
dec
fisttps
int3
cmp
outsl
fcomps
cld
xchg
cmc
mov
cltd
jl
add
test
fcoms
addr16
loopne
arpl
inc
popa
mov
lock
popl
inc
test
or
mov
jecxz
and
lock
xor
cmp
jg
mov
ficomps
jbe
jmp
jbe
insb
addr16
mov
cli
mov
xchg
movsb
push
sar
lea
adc
mov
jbe
xchg
cmp
inc
test
xor
push
adcl
lcall
aas
dec
push
rorl
and
cld
and
aas
push
sahf
xchg
aaa
sar
push
ja
inc
cmp
pusha
or
push
jb
push
adc
xor
inc
test
cmp
push
jg
adc
das
out
call
mov
jl
or
pop
dec
jns
mov
dec
fnstsw
dec
cmp
adc
sbb
cmp
jb
ja
bound
inc
jmp
pop
adc
xchg
mov
jae
jecxz
dec
pop
dec
arpl
sti
and
les
adc
fs
mov
fcoms
hlt
aad
pop
loopne
call
and
mov
add
std
lock
ficoml
xor
insl
sbb
subb
xor
mov
les
push
adc
icebp
pop
mov
sub
in
mov
lcall
orb
enter
arpl
dec
pusha
leave
xchg
push
xchg
jbe
fistpl
sub
push
loop
fbstp
rol
ficomps
cmp
hlt
aam
pusha
aaa
stos
stc
dec
adc
cmc
xchg
ja
faddl
push
sub
rol
adc
das
or
ret
lods
or
dec
call
outsl
pusha
xor
sub
int
popa
movsl
pop
ds
icebp
aaa
or
scas
test
jp
cmp
jmp
adc
inc
jmp
sarb
pop
aad
repnz
mov
je
rcrb
pinsrw
ds
ret
inc
decl
push
mov
jae
sub
jg
leave
inc
mov
insb
mov
out
testl
adc
iret
subb
add
test
fistpl
stos
lods
out
sti
stc
js
jo
sub
mov
xor
pop
dec
rclb
dec
ficoml
arpl
das
lods
inc
sub
scas
clc
sub
lret
jns
dec
mov
mov
push
mov
or
jg
gs
pop
pop
outsb
lcall
subb
daa
cmc
mov
test
push
mov
mov
jnp
out
ss
mov
push
mov
push
or
adc
lock
lods
mov
and
add
dec
or
jbe
mov
push
sbb
data16
enter
out
fiadds
outsl
or
dec
jg
mov
sbb
sub
cmpsl
aam
cmpsl
pop
lds
add
lds
and
cmc
push
popa
inc
or
call
mov
jge
sub
insb
mov
enter
jbe
pop
inc
loope
push
insl
add
rorl
fsubl
push
adc
mov
call
dec
popf
dec
into
sub
pop
lods
adc
push
pop
mov
adc
mov
mov
popf
negb
decl
adc
push
es
test
jbe
inc
psllq
mov
les
dec
push
in
leave
jnp
sbb
loopne
dec
std
fcomps
pop
bound
adc
adc
loope
inc
lds
sbb
push
jmp
adc
xchg
or
ret
jp
xor
sub
add
mov
xorb
call
inc
xlat
cmp
aad
mov
sbb
mov
cmp
xchg
and
mov
adc
push
hlt
ds
add
call
lods
push
fnstsw
xchg
shll
push
xor
cmpl
push
cld
popa
pop
xchg
mov
test
sub
das
cmp
inc
add
or
pop
sahf
dec
orl
loopne
pop
adc
dec
adc
jmp
sub
add
gs
pusha
lds
cli
jno
cli
pop
pop
xor
ljmp
pop
sarb
or
loope
mov
imul
xor
arpl
jmp
sbb
sub
cmp
pusha
sub
pop
dec
cmp
mov
lahf
or
loopne
jp
inc
sub
shll
xchg
mov
enter
fsubrl
stos
xchg
pop
aad
lods
inc
mov
testl
sub
inc
das
push
jecxz
ss
xchg
test
popf
cmp
add
and
adc
fcmovnu
lock
mov
fldcw
iret
das
or
pop
xor
inc
aad
xor
scas
dec
ja
cmp
or
loopne
lds
in
aaa
xor
aaa
xor
sub
in
pop
loope
inc
inc
clc
out
adc
push
cmp
aam
mov
scas
test
cmp
std
ret
and
mov
xor
mov
rolb
jge
test
push
movsb
mov
adc
and
ss
je
std
dec
ss
cmp
xchg
adc
dec
inc
and
lds
mov
fstpl
stos
out
push
adc
loopne
in
test
jg
or
jecxz
aaa
ss
notb
push
jne
loop
sub
decl
cmp
xchg
call
or
mov
adc
lahf
add
icebp
insl
sti
sub
inc
adc
pop
pop
push
push
ret
outsb
movsb
push
outsl
daa
shll
sub
jbe
inc
adc
sarb
loopne
mov
push
mov
js
add
sub
int3
addr16
cmc
js
loop
mov
scas
repnz
mov
shr
mov
subl
sbb
mov
or
popa
notl
jb
cmpsl
jmp
xor
mov
sub
cmp
mov
xor
mov
int
pop
nop
test
jp
nop
subl
xchg
call
or
rolb
fldenv
dec
push
ljmp
xor
call
pop
sbb
imul
cwtl
or
ret
lea
nop
rcll
adc
inc
scas
push
add
sub
sub
cs
mov
pop
lock
mov
add
mov
add
push
push
xor
cmpsl
or
hlt
sbb
stos
mov
push
in
cmp
in
lcall
das
xor
insl
icebp
inc
push
mov
mov
test
cld
xor
fidivl
xchg
js
aad
or
shll
dec
mov
pop
lret
dec
aad
pop
pop
xchg
bound
xchg
in
sub
push
das
mov
xchg
cli
jecxz
pushf
sbbb
dec
xor
insl
sub
dec
xor
and
addb
arpl
mov
fisubrl
inc
loopne
in
push
in
addr16
jp
mov
sahf
adc
sbb
dec
mov
imul
xlat
mov
dec
addps
xor
andl
or
repnz
loop
pop
fs
push
aad
jge
push
cmpsl
outsl
mov
aam
jno
add
lods
fs
aam
out
js
adc
adc
dec
push
mov
ficompl
jne
jne
adc
jg
and
or
cmp
xchg
inc
ficoml
aas
mov
out
in
ss
std
rolb
sahf
call
add
ret
frstor
pop
pop
inc
mov
ljmp
lea
add
jecxz
shll
hlt
pop
pop
push
scas
adc
mov
inc
add
fiadds
stos
add
adc
mov
test
sti
cmp
sbb
test
or
ja
lods
out
out
inc
es
lods
mov
les
push
loopne
movl
or
push
inc
push
into
je
jp
add
out
mov
sbb
mov
push
lret
out
into
jge
mov
negb
in
lea
movb
mov
xor
inc
in
adc
rol
js
jne
outsl
sbb
add
in
mov
cmc
ds
or
and
faddl
mov
outsl
aaa
ja
loope
into
aad
js
sbb
inc
cld
ds
cmpsb
scas
adc
push
sub
sub
movsl
pop
mov
stos
push
add
rclb
push
insb
leave
xchg
push
loope
pop
fmuls
mov
sub
in
push
mov
add
jmp
add
dec
call
mov
xchg
ljmp
push
sub
adc
and
or
mov
push
in
loop
and
mov
test
mov
lahf
xor
hlt
inc
lods
push
pop
in
and
test
addl
cmpsl
and
arpl
icebp
insb
jno
enter
dec
repz
cmpsl
aas
movsl
movsb
push
dec
movsb
pop
add
jmp
push
lods
cmpsl
lret
mov
cli
rcrl
icebp
sbb
mov
mov
pushf
xor
call
fsubs
add
ja
sahf
popf
xchg
rol
loop
xchg
int3
or
lea
in
rorb
loope
pop
sti
inc
out
mov
lret
sbb
cmp
iret
das
imul
loope
jnp
push
xor
fildll
std
mov
adc
lods
adc
test
rcll
sarl
push
dec
jl
mov
sahf
xchg
or
mov
add
fwait
insb
insb
mov
fisttpll
dec
dec
int3
stc
popa
jo
aad
sbb
or
xlat
push
and
xchg
add
mov
out
and
rcll
mov
and
lahf
adc
loopne
and
arpl
and
inc
or
and
xchg
inc
mov
pop
int3
je
adc
sbb
pushf
adc
sub
jg
addl
lea
mov
adc
or
pop
inc
fwait
cs
add
lods
jbe
enter
rolb
push
aad
cmp
xchg
pushf
adc
lea
gs
jbe
sbb
cmpl
push
dec
addr16
std
mov
push
push
push
mov
jo
sbb
dec
pushf
std
ret
push
lds
jp
lcall
dec
leave
loop
sbb
mov
xchg
addr16
cmp
jmp
js
mov
int3
sarb
divb
movsb
int3
notl
xor
xor
jnp
sbbb
shl
call
pusha
mov
lods
dec
jecxz
sub
aam
insl
adc
jmp
lock
cmc
cmpsl
push
int
stos
fwait
pop
cmp
inc
js
jbe
insl
es
pop
popa
aaa
xchg
or
or
icebp
les
add
stc
or
clc
mov
or
ss
loopne
test
lock
sbb
mov
mov
in
xchg
or
pop
ljmp
pop
aam
insl
fmuls
in
stc
cmp
push
mov
jmp
xor
or
fistps
sbb
push
int3
stc
sbb
dec
ja
stc
cmp
or
sbb
mov
cwtl
mov
xor
xlat
push
pop
sub
jo,pn
mov
xor
jnp
inc
repz
inc
shr
fs
push
cli
fstp
data16
psubsb
mov
jge
push
test
cmpsl
ret
imul
cs
or
movsb
clc
fcom
insb
mov
or
xor
mov
ret
dec
cld
push
jmp
mov
addr16
adc
add
pop
fcomip
fwait
mov
sti
into
out
insb
lea
lahf
sbb
and
das
sub
addr16
and
imul
xchg
pop
lock
fs
addb
xchg
arpl
mov
out
adc
jle
icebp
mov
test
in
fnstcw
sub
mov
dec
xchg
cmpsl
xchg
inc
enter
lds
jb
fwait
mov
addr16
fwait
or
mov
ret
lds
add
lods
dec
fsubrs
mov
mov
and
sbb
adc
ss
pop
add
mov
push
inc
and
testb
in
inc
movq
in
push
pusha
or
insb
pusha
xor
add
sub
js
dec
movsl
adc
fsubl
jns
add
xor
clc
ja
leave
arpl
cli
and
push
lods
test
loope
repz
push
mov
setge
aas
clc
push
jl
fstpt
add
inc
test
sbb
cmp
push
pop
cmp
insl
movsb
push
jbe
call
xor
pop
adc
mov
out
dec
ss
pop
adc
sarl
sbb
xchg
in
lea
lods
out
add
cmp
xor
dec
or
lds
push
jae
in
xchg
imul
jecxz
jmp
pop
popa
sub
dec
testl
sti
or
shll
jns
jle
rorb
inc
mov
call
aas
mov
or
cmp
lret
xor
scas
test
pop
mov
rol
mov
cmpsb
loop
lods
push
or
or
or
jp
lcall
mov
insl
adcl
push
dec
or
or
adc
aaa
lcall
xchg
mov
in
and
mov
mov
jmp
jmp
mov
jl
cli
fsincos
jnp
and
rcrl
mov
jne
jp
repz
outsb
sbb
sub
sti
xchg
dec
mov
in
mov
add
adc
mov
test
mov
mov
cmc
push
lock
fcmovbe
mov
icebp
loope
dec
addr16
ja
hlt
lret
mov
je
lods
into
sahf
and
mov
add
mov
sbb
or
or
lahf
add
test
faddp
adc
dec
cmpsb
jl
push
pushf
fdivrl
rorb
xor
pop
xchg
lcall
mov
xor
fnstcw
sub
cltd
and
js
sbb
scas
push
mov
mov
arpl
cmc
push
movsl
out
outsl
andb
or
lods
sarb
inc
rclb
and
pop
jle
incl
lahf
push
add
jp
xchg
adc
sbb
lods
mov
jg
test
pop
in
inc
adc
ret
outsb
pusha
rcll
mov
fcoml
int
fildll
inc
rolb
push
ret
and
sbb
js
loopne
ficoml
add
jle
test
fdivr
xor
mov
cs
iret
push
xorl
lahf
test
mov
repnz
or
adc
or
push
cmp
mov
mov
push
mulb
loopne
inc
sub
dec
gs
pop
and
pop
arpl
orl
or
jl
mov
push
cmp
and
das
jg
add
stos
xor
cwtl
inc
sub
sub
inc
jns
out
inc
push
rcrb
xchg
iret
pop
or
push
pop
sub
sbb
inc
fcomp
pop
sbb
dec
sbb
subl
ret
rorl
in
sbb
pop
clc
push
or
jecxz
jne
xor
pusha
scas
and
fidivs
cmpsb
test
push
ds
call
test
ljmp
push
adc
rorl
cmp
push
mov
xor
push
mov
pop
xchg
push
push
jle
aas
inc
adcl
fldl
add
lcall
adc
outsl
push
cli
xchg
arpl
jmp
scas
ljmp
xchg
mov
xchg
jle
test
add
or
xchg
jmp
sarl
cmc
and
movsl
insb
popl
jecxz
mov
scas
inc
push
cmpsl
call
cmp
aaa
int
rclb
lcall
in
sbb
adc
ret
dec
jb
shl
sub
or
daa
mov
iret
jmp
xlat
add
mov
mov
push
mov
mov
ficomps
pop
lock
adc
shrl
push
aas
xchg
cmp
ds
mov
inc
int
or
push
pop
mov
clc
shl
mulb
add
paddb
ret
push
js
mov
inc
adc
pop
mov
inc
cmp
pushf
sbb
aad
adc
aaa
inc
sbb
pop
test
cli
mov
arpl
inc
cs
or
out
lods
mov
clc
ds
pop
pop
xchg
xor
mov
mov
jnp
ret
sub
sbb
call
mov
jns
mov
adc
cmpsl
adc
push
mov
insb
fcmovb
ja
jecxz
ret
shl
mov
xor
sbb
mov
push
and
enter
adc
jo
int
loope
push
jne
mov
sub
in
pop
ss
cli
adcl
fsubl
pop
jp
stos
imul
cmp
or
lock
das
mov
aad
int3
sub
adc
rorb
pushl
leave
iret
pop
push
call
aaa
push
sub
inc
cmpsl
pop
mov
clc
lods
aaa
inc
clc
and
mov
sbb
les
jg
std
sbb
or
or
icebp
lret
mov
mov
sbb
and
cld
sbb
sub
subb
xchg
add
add
or
cld
pop
pop
mov
pop
dec
xchg
mov
lret
out
cmp
push
sub
push
adc
clc
mov
bound
sub
and
push
add
cmp
xor
mov
push
add
cmp
cmovb
xor
add
xor
int
incl
ja
out
imul
and
dec
int
dec
lret
rclb
xchg
xor
cli
dec
adcb
jge
ljmp
mov
stc
inc
jge,pt
mov
lea
xlat
movsl
xor
mov
sarl
aam
cmpl
inc
sub
add
mov
jo
mov
mov
aaa
adcb
int3
lods
xor
or
test
lea
mov
roll
and
rolb
mov
dec
mov
call
mov
pop
sbb
ss
int3
arpl
jecxz
xor
scas
pushl
jp
out
sbb
jmp
pop
call
hlt
out
or
push
stos
pop
sbb
lcall
ret
xor
call
ror
pop
cmp
dec
cwtl
movsb
out
push
or
icebp
dec
mov
inc
adc
mov
shr
int3
and
incl
test
sarl
and
jno
sub
adc
inc
and
repnz
push
addb
popa
sbb
dec
addb
faddl
dec
mov
xchg
inc
cmpb
push
aam
repz
pusha
push
adc
insb
std
call
jl
xor
xor
fs
scas
shlb
adc
and
pop
inc
cmp
cmp
imull
jo
inc
imul
and
pop
cli
add
mov
test
adc
jle
cmpsl
mov
push
xchg
mov
push
pop
push
mov
sarl
gs
int3
cs
xchg
pop
lahf
push
aaa
add
inc
xchg
push
out
dec
xchg
sbb
leave
xor
aas
inc
dec
clc
stos
mov
mov
mov
cwtl
mov
xchg
insl
insl
pop
inc
fcom
push
jns
scas
sub
ret
jo
fsts
and
cmp
cli
sbb
xor
mov
sub
outsl
pop
and
inc
jecxz
mov
and
inc
std
mov
adc
or
xchg
dec
mov
dec
pop
clc
in
push
mov
movsl
ja
sarl
or
test
ja
or
ret
lock
or
inc
xlat
bound
jl
arpl
dec
jne,pn
shll
mov
and
lcall
fwait
mov
sbb
cmpsl
sub
inc
ss
inc
mov
jmp
dec
call
jle
adc
in
sbb
jae
addr16
push
cvtdq2ps
jbe
daa
cvtpi2ps
lahf
movsb
mov
daa
cmp
aam
xchg
mov
xchg
inc
stos
cwtl
push
sub
lahf
adc
add
gs
movsl
cmp
addr16
out
cmp
push
inc
js
and
imul
push
in
mov
cli
pop
push
and
outsl
push
mov
mov
call
or
push
xchg
popa
int
cmpsb
leave
jle
int
int
sub
into
scas
mov
mov
dec
ror
insb
jp
enter
jns
add
push
inc
lods
dec
sub
dec
sarl
xor
sarl
fucom
addl
mov
mov
outsb
xchg
in
sbb
imul
test
or
mov
cmp
adc
sbb
push
lret
ss
inc
adc
call
sbb
adc
jb
xchg
mov
sbb
sub
inc
addl
rcl
std
adc
lds
jno
ret
push
fcomps
inc
addr16
rolb
jns
nop
ret
add
out
and
sub
in
popa
push
cmp
sti
or
sub
cmc
xchg
setno
sahf
add
rcl
and
xor
xor
inc
pop
lea
push
in
jge
das
stos
pop
pop
lret
dec
scas
icebp
dec
jne
loope
fstpt
out
clc
mov
loop
jno
sbb
mov
cmp
das
stos
loopne
mov
sub
outsl
sbb
pop
mov
ljmp
or
adc
xchg
cli
cmp
fucomi
rcll
pop
mov
jne
adc
je
push
inc
lcall
jo
das
xor
adc
mov
pop
cs
scas
xor
rorb
fsts
les
cli
sbbb
cli
jns
call
xchg
je
or
bound
mov
testl
adc
sbb
jle
mov
ja
dec
loope
or
fisttpl
cmp
xchg
push
sarl
dec
rorl
mov
sub
shrl
inc
lret
subl
jmp
or
ja
mov
push
insl
xchg
das
scas
mov
mov
sti
dec
sub
pushf
pop
leave
popf
shrl
out
ds
jmp
shlb
pop
dec
mov
push
pop
stc
adc
add
decl
movsl
push
test
fldl
jle
mov
test
mov
pop
dec
pusha
push
ljmp
push
ret
test
pusha
or
push
lods
lods
mov
test
jo
or
popl
push
and
lds
movsb
and
shrb
notl
pusha
loop
hlt
clc
aas
add
add
mov
mov
pushf
adc
xor
loop
cmp
aad
pop
roll
mov
push
jnp
or
sub
xor
lcall
cli
dec
jge
out
sarl
aas
push
or
push
dec
and
popa
and
push
fimull
jns
ljmp
ror
cs
popf
cld
and
nop
stos
clc
sub
scas
add
xchg
add
push
out
cmp
call
push
cmp
loope
stc
jmp
je
mov
imul
sbb
lahf
cmp
mov
xchg
xchg
lods
inc
xchg
ja
sar
mov
mov
and
lret
lret
sub
xchg
mov
bound
xchg
jns
or
pop
cs
jns
jle
cmp
cmp
pop
pop
into
cmp
int3
movsb
icebp
movsl
sahf
mov
inc
arpl
add
xchg
pop
cmovge
mov
hlt
and
lock
cmpsb
sub
inc
adc
xlat
jl
cmp
das
je
imul
adc
insb
out
test
das
std
xchg
dec
pop
add
push
or
call
add
add
sub
cmp
scas
add
cmc
jnp
cs
hlt
addb
aad
cli
pop
or
mov
js
mov
clc
and
mov
aaa
xchg
fsubrl
int
mov
addl
call
mov
mov
xchg
stos
movsl
mov
jo
iret
shrl
add
icebp
push
enter
cli
sbb
pop
leave
std
or
add
and
psrld
loopne
fwait
rolb
std
push
nop
clc
aas
mov
xor
mov
sbb
arpl
rol
shrl
lods
pop
arpl
push
inc
sub
imul
cmp
decl
and
sar
ficomps
mov
cmp
lods
nop
mov
jg
xchg
xor
sti
adc
popa
sub
imul
jp
cmp
pop
inc
test
fldcw
scas
in
int3
xchg
cld
adc
mov
mov
stc
pop
xchg
fcmovnbe
out
subb
fimull
mov
sub
rcrb
in
xlat
out
in
ljmp
push
push
cld
stos
ja
js
xchg
ljmp
cmp
ret
push
add
push
sbbl
add
inc
scas
enter
jle
into
arpl
out
popf
mov
test
decl
imul
lahf
inc
lock
mov
jle
jp
fcmovu
std
xchg
aad
arpl
xchg
jns
jne
jle
popa
aad
cmpsl
jmp
mov
popf
cli
xor
pusha
movsb
sub
jmp
icebp
inc
dec
in
test
jb
aaa
or
and
xchg
addr16
push
es
dec
cld
dec
pop
or
lea
mov
sbb
cmp
dec
outsb
inc
shll
inc
cld
mov
aad
xor
data16
pop
xor
sbb
push
adc
add
repnz
mov
jmp
inc
adc
inc
push
rorb
pop
or
out
ds
insl
push
call
and
xchg
push
out
je
adc
mov
mov
mov
push
test
negl
cld
jb
lcall
add
dec
jnp
mov
xchg
das
or
mov
popf
inc
fsts
aas
adc
mov
inc
mov
adc
add
cmp
rcll
adc
out
sub
mov
push
xchg
add
mov
add
push
mov
xchg
outsl
cmpsb
push
sti
cmpsb
inc
mov
push
inc
push
stos
and
outsl
inc
mov
inc
inc
pop
inc
xchg
dec
jge
repnz
movsl
or
dec
mov
inc
mov
lods
rcrl
ljmp
sub
dec
pop
xchg
call
push
push
pop
xchg
jnp
jg
mov
sti
push
push
or
push
mov
loope
leave
jns
mov
cmpsl
imul
inc
nop
hlt
xor
lds
cmp
outsl
call
jmp
mov
push
jbe
cs
xorb
clc
cli
xchg
dec
xchg
js
add
mov
or
divb
push
fildl
out
dec
dec
roll
incl
sub
stos
mov
andl
repz
roll
into
add
push
inc
cmp
inc
das
pop
push
loope
fildl
jmp
inc
in
xor
cmp
xchg
and
push
cli
push
pusha
leave
call
into
push
cmpsb
cmp
outsl
sub
bound
xchg
push
rcll
dec
sbb
scas
divb
mov
std
out
mov
mulb
mov
xor
jae
aaa
and
orl
cmp
pop
xorl
inc
aas
or
push
dec
cmp
test
mov
xchg
xchg
fldl
pop
addr16
rcrb
jno
cmpsl
dec
outsl
into
flds
pop
adc
cwtl
adc
fstl
jns
adc
pop
clc
icebp
shll
or
xor
pop
sub
push
andl
popa
adc
lret
sbb
sub
aad
mov
mov
jae
cmp
in
fbld
pop
insb
pop
sbb
js
aaa
pop
sub
mov
fdivrp
lcall
mov
jmp
adc
rcrl
ds
and
decl
in
aad
movsl
inc
mov
ss
mov
pop
sub
mov
mov
clc
dec
push
fcoms
ss
inc
jecxz
pop
scas
cld
out
jp
cmp
sbb
aad
or
push
subb
sub
clc
and
cmc
sbb
enter
mov
lods
fwait
ds
mov
loop
pop
pop
pusha
sbb
les
lods
nop
mov
clc
cmp
imul
ss
ss
shrl
fwait
mov
push
lar
fs
addr16
lahf
lcall
test
push
pop
xchg
pop
pushl
stos
add
sub
jl
adc
jb
mov
pop
sub
sbb
test
and
std
sbb
subb
cmp
lcall
sbb
mov
push
dec
icebp
xchg
xchg
hlt
sub
jmp
mov
loop
inc
nop
fwait
xchg
xchg
cs
js
mov
sbb
push
daa
aam
inc
and
repnz
pop
decl
roll
pop
pushf
cmovb
in
inc
or
push
xchg
leave
sbb
aad
cmc
sbb
push
add
cmp
push
fwait
sahf
jb
lds
xor
jno
adc
test
addr16
jae
movsl
out
add
lea
add
idivl
insb
push
cmpsl
mov
out
stc
or
int
mov
imul
bound
and
orl
xchg
movsl
pop
lcall
rorb
xor
mov
lahf
adc
mov
mov
or
fdivrs
jnp
mov
cli
sub
dec
jge
call
lds
int
and
in
nop
add
adcb
xor
dec
outsl
or
xchg
and
call
adc
sub
stos
xchg
in
popf
sbb
and
mov
mov
int3
push
jbe
loopne
lds
sub
ret
cmpsb
and
xorl
push
dec
repz
mov
sbb
mov
xorb
mov
dec
cmp
ret
repnz
push
jo
fists
call
add
bound
xor
adc
rolb
push
cld
enter
pop
insb
lret
jbe
aas
cmc
mov
loope
fcmovb
push
pushf
adc
test
xor
jo
sbb
hlt
cmp
ss
push
loopne
adc
sbb
sub
mov
or
adc
mov
frstor
loopne
ljmp
orl
mov
in
xor
cs
adc
outsl
into
mov
dec
das
test
fstpl
movsb
loope
sub
jb
out
fs
mov
adc
stc
cmp
dec
push
clc
das
les
pusha
pop
cld
imul
scas
push
test
icebp
insb
dec
in
in
faddp
add
imul
jmp
inc
push
lds
lock
mov
dec
fwait
push
leave
jbe
and
shll
outsl
rcrb
or
aad
arpl
jmp
mov
mov
and
push
faddl
sbb
icebp
cmp
cld
mov
pop
insl
and
gs
and
in
sbb
or
ljmp
imul
or
fidivrl
mov
sub
leave
jbe
popf
int3
repz
jmp
or
push
mov
test
add
cmp
and
or
fnsave
mov
jge
add
or
and
sub
mov
mov
sub
push
jns
lcall
xor
inc
jae
sbb
leave
adc
fcomp
sbb
rclb
stc
and
xchg
clc
pop
aas
dec
pusha
cmpsb
cmp
jge
mov
fwait
out
cmp
movsb
cltd
sahf
pushf
data16
arpl
or
addr16
inc
adcb
adc
lea
dec
inc
push
jge
fiadds
scas
dec
clc
jg
jbe
mov
subb
mov
sahf
mov
arpl
jnp
xlat
pop
dec
js
or
inc
add
loope
mov
aam
xchg
test
cmp
into
cld
inc
sub
cwtl
js
xchg
mov
into
aam
jbe
test
ljmp
les
pop
push
inc
call
push
mov
arpl
into
inc
pushf
adc
xchg
pop
jbe
stos
mov
or
mov
push
aam
in
lea
scas
addr16
mov
stos
fiaddl
js
inc
cmp
jo
das
sbb
push
mov
or
cmpxchg
inc
inc
mov
hlt
and
arpl
shl
std
ficoml
mov
xor
cmp
push
add
fwait
mov
pushl
mov
arpl
shrl
out
iret
bound
dec
rolb
or
adc
mov
loop
push
push
rcll
push
fisttpll
and
arpl
add
in
rorb
popa
out
fwait
jp
lea
and
push
ret
icebp
push
std
mov
arpl
lret
cli
jmp
push
jecxz
pop
adc
mov
or
nop
mov
into
add
loopne
inc
dec
outsl
addb
pop
lock
cs
iret
xor
out
cli
adc
add
popf
stc
jo
clc
mov
mov
push
sarb
fstpt
stos
ficompl
push
push
sub
cmc
push
xchg
mov
mov
mov
pushf
rcrl
xor
pop
jp
jmp
and
icebp
mov
syscall
push
sub
and
aas
lods
push
cmpl
push
cwtl
adc
pop
fistl
dec
xor
pop
adcb
fcoms
and
xlat
dec
lret
loopne
push
pop
and
out
lock
and
in
test
push
xor
xor
lret
in
xchg
xchg
fdivrl
in
aad
fcmovbe
dec
call
movsb
gs
and
pop
jmp
mov
inc
sub
add
in
sub
fnstsw
outsb
xor
es
pop
in
or
push
fistps
jg
fwait
out
xchg
movsl
push
adc
inc
mov
inc
test
adc
xor
ljmp
add
mov
dec
fnstsw
outsb
scas
mov
push
push
add
push
or
lret
outsl
dec
mov
test
clc
inc
mov
push
sbb
jl
xchg
scas
fcomip
sahf
icebp
inc
xchg
sub
dec
cmpsb
inc
and
lea
pop
dec
in
or
ljmp
popa
xchg
sbb
push
dec
insb
xchg
movsb
xor
mov
xor
cmp
gs
mov
inc
outsb
mov
mov
insb
pop
clc
mov
mov
cmc
sbb
or
inc
popf
and
dec
mov
mov
and
mov
shrd
jns
xor
movsl
add
call
pop
adc
cld
cmp
xlat
pusha
xor
xchg
dec
pop
jl
pusha
mul
inc
push
lea
dec
and
das
iret
xor
add
out
jns
and
orb
outsl
dec
adc
cmpsl
sub
rolb
nop
cmp
leave
xor
sar
orl
adc
std
test
movsl
mov
add
das
mov
mov
xchg
and
loop
outsb
es
or
das
sub
push
pop
push
xor
mov
loop
push
test
adc
mov
mov
cmpl
js
loop
ljmp
xor
pop
mov
pop
sbb
mulb
arpl
xorl
lahf
add
sahf
push
mov
dec
icebp
sti
adc
in
xchg
in
sbb
jbe
xchg
push
push
repnz
ret
pop
mov
pop
push
popa
jne
inc
or
insl
cmpb
aam
xchg
movsl
mov
das
xchg
int
xchg
test
rolb
xchg
loope
sar
movsb
movsb
or
popa
or
lock
xor
stc
test
je
cld
or
fsubrl
add
jne
outsl
mov
jl
mov
pop
sbb
pop
xor
loop
in
popa
push
aas
sbb
push
cmp
insb
arpl
and
xorl
xchg
jg
shl
pop
and
icebp
jmp
mov
inc
subb
inc
test
adc
jo
je
into
sahf
movsl
loop
xor
xor
dec
add
mov
movb
je
movsl
add
mov
mov
addl
les
idiv
sub
xor
add
and
pop
sahf
cmp
aas
push
xchg
mov
pop
pop
jmp
cmc
mov
xor
fisttpll
imul
rcrb
hlt
and
cmp
adc
pop
lret
rcll
sub
adc
and
popf
lods
clc
dec
in
mov
cld
scas
out
xchg
or
sub
xchg
pop
loopne
xor
and
jo
insl
fdivp
or
fisttps
addr16
jo
push
mov
mov
mov
and
cld
mov
add
cmp
inc
mov
dec
and
xchg
adc
adc
jbe
sar
outsb
xor
cmp
dec
scas
push
add
pop
mov
pusha
or
daa
fidivrs
fimuls
jg
mov
movsb
aaa
mov
lods
pop
sahf
out
ficomps
repnz
and
cwtl
jle
and
pop
rorl
xor
push
cmp
sahf
inc
xor
test
test
aad
or
inc
mov
cld
subb
enter
mov
cmp
mov
popl
pop
sub
shll
and
mov
shlb
cld
addr16
push
cli
test
pop
xor
in
je
cmpl
addb
loope
daa
and
pop
push
mov
movsb
dec
sub
mov
lods
enter
pop
pop
lods
inc
jnp
decb
sub
les
xchg
movsb
sub
scas
push
add
mov
xchg
jle
jmp
push
dec
pop
adc
cmc
adc
and
mov
push
fcmovnb
pop
sub
lret
inc
xchg
hlt
pop
lret
loopne
aam
lret
test
pusha
mov
mov
pop
test
insl
ds
jmp
push
xchg
push
lods
popf
push
add
jle
xchg
loop
pusha
xchg
mov
sub
xor
aad
cmp
and
mov
sub
mov
lock
mov
dec
outsl
adc
mov
cmp
xor
arpl
loopne
push
lahf
ljmp
jle
ret
xchg
cmpl
sbb
mov
mov
shll
pushf
mov
dec
aam
test
sub
lock
.byte
mov
std
std
call
in
sub
mov
pop
mov
ret
or
call
aas
cmp
add
ret
sbb
sbb
inc
add
pop
inc
add
outsl
in
sbb
mov
popa
mov
inc
xor
clc
add
jmp
xor
stc
mov
roll
lcall
jle
call
mov
sub
push
push
test
sbb
into
lea
mov
mov
add
adc
add
add
mov
or
addl
mov
jne
push
add
cmp
push
test
sub
out
and
in
push
in
push
and
push
fwait
scas
sbb
pop
daa
stc
adc
adc
push
lea
dec
hlt
pop
adc
sbb
mov
aaa
sbb
jns
dec
inc
dec
push
adc
sub
or
push
inc
add
out
outsb
test
adcl
popa
icebp
ss
popa
jb
and
outsb
popa
cld
push
pop
or
stc
sub
insl
and
push
in
std
test
and
push
and
sbb
sbb
or
or
repnz
inc
sub
jg
hlt
imul
popa
xor
push
inc
ja
jae
fistl
cld
lods
lock
or
add
mov
lcall
outsb
pop
ret
adc
ret
sbb
outsl
jmp
inc
hlt
mov
xor
sbb
push
push
mov
dec
popa
inc
es
sbb
incb
fisttps
push
gs
loopne
movsb
in
fildl
xchg
test
push
cmp
mov
cmc
pop
add
jmp
push
lock
lock
push
loopne
and
ds
adc
dec
and
push
mov
loope
inc
cmp
in
daa
mov
and
push
push
xor
test
push
adc
andl
aaa
add
mov
sbb
pop
in
mov
insb
jbe
sbb
pop
jle
test
and
or
sbb
ret
cmp
jbe
icebp
test
jp
adc
push
hlt
in
ret
nop
and
push
sbb
sbb
and
outsb
cmc
xor
ret
stos
cmp
push
jae
sub
testl
inc
arpl
leave
push
inc
jle
orl
sti
test
daa
and
pop
dec
or
pop
sbb
std
dec
add
push
adcl
inc
dec
push
adc
xor
aam
aam
pandn
mov
sbb
jno
xor
sarl
xor
xchg
push
adc
adc
mov
mov
adc
add
or
or
mov
pop
bound
push
push
dec
imul
add
or
sbb
sub
and
adc
outsl
outsl
sub
loopne
push
in
push
fimuls
in
adc
jp
aas
mov
push
lea
in
call
jbe
negl
add
lret
ret
das
push
or
xorb
and
add
movl
xor
lods
push
loopne
lock
ja
push
adc
and
push
push
sbb
das
or
fdivrl
xor
mov
sbb
sub
mov
or
test
loopne
and
psadbw
push
cmp
inc
or
ss
cs
or
fnsave
xor
sbb
jl
ja
shl
test
push
lea
cld
ss
std
pop
fs
es
andl
lea
mov
push
sbb
mov
sbb
jge
xchg
stos
mov
daa
sbb
push
mov
adcl
fs
jbe
inc
xor
lcall
xchg
push
xchg
push
push
fisubs
fmuls
clc
std
in
xchg
push
jne
lock
and
push
loopne
fwait
mov
test
adc
inc
push
and
mov
mov
jbe
inc
push
popa
inc
mov
sbb
push
and
icebp
mov
addr16
hlt
fidivrs
in
nop
dec
mov
sbb
inc
jnp
add
std
fistps
popf
and
enter
repz
pop
and
mov
movsb
incl
mov
decl
into
cld
bound
ss
dec
dec
pop
mov
enter
adc
imul
jns
push
inc
ds
or
ljmp
cmp
push
mov
test
push
xchg
pop
sahf
or
xchg
test
push
xlat
pop
xchg
ret
sti
cli
jb
sbb
sbb
mov
inc
int
js
pop
add
add
jecxz
rolb
outsb
clc
inc
jns
jbe
insb
jb
push
js
cmpsl
lods
ret
or
xorl
movsl
insl
out
pop
ss
leave
xchg
jae
add
ss
cmpsb
hlt
loopne
loopne
ret
addb
f2xm1
and
lret
js
and
or
arpl
jns
pop
jae
inc
cmc
mov
scas
push
fwait
push
inc
lcall
mov
cmp
fs
arpl
popa
iret
sbb
and
push
rorl
sbb
ret
mov
dec
mov
mov
dec
insl
push
xor
bound
int
pusha
movsb
mov
mov
int
or
cmp
push
fisttpll
and
call
and
pushf
shl
movb
call
jp
movsl
cmc
in
jmp
lock
mov
inc
mov
pop
xor
xor
jo
and
dec
addr16
loopne
adc
push
seto
movsl
mov
pop
je
pop
pushf
mov
jnp
add
or
mov
clc
mov
jb
add
and
push
fldcw
jp
sbb
sbb
movsl
sub
sbb
std
xchg
mov
rorb
jle
insl
sbb
jp
inc
loopne
clc
xor
dec
cltd
adc
and
test
add
push
icebp
mov
add
push
lods
scas
sub
push
dec
sub
dec
cs
xchg
dec
lret
cmc
inc
pop
dec
addr16
mov
aad
ss
adc
rolb
or
mov
xor
and
add
mov
xor
or
pop
popf
xchg
das
jp
push
filds
clc
add
sub
xchg
pop
mov
inc
movsl
and
mov
or
and
repnz
movsb
aas
jp
push
push
xlat
dec
push
popf
jge
cs
inc
cmp
test
jno
sbb
scas
movsl
subb
mov
adc
push
mov
int3
jbe
into
lock
push
push
stos
xchg
push
mov
sbb
ret
and
inc
add
xchg
cltd
jbe
in
in
jo
and
or
cwtl
sbb
inc
imulb
or
ret
sub
push
lea
ret
and
movsl
rcr
sti
jns
mov
or
or
adc
mov
sub
outsb
dec
rolb
sbb
pop
inc
ss
push
push
inc
insb
lea
inc
cld
or
cli
subl
int
or
loop
add
dec
push
cld
sti
adc
repnz
popf
push
mov
pop
jle
pop
xor
int3
push
clc
adc
test
inc
mov
mov
cld
pop
add
push
or
add
jne
mov
movsb
loop
adc
add
call
jnp
pusha
test
cmovb
jg
or
mov
mov
inc
inc
dec
or
jne
pop
popf
cld
mov
lods
aaa
xor
xor
mov
add
push
sbb
cmovae
dec
and
jmp
sub
sbb
sahf
xchg
mov
into
lock
xor
aad
mov
adc
push
pop
mov
iret
in
dec
sbb
sbb
cmpsb
mov
jg
loope
adc
inc
cmpsl
fs
enter
push
jg
mov
or
inc
mov
cmp
dec
add
xor
movsb
out
aaa
loop
jbe
sbb
mov
mov
inc
inc
cmpsl
pop
add
cmp
es
imul
xlat
ja
push
xchg
push
sub
and
aad
movsb
adc
outsl
insl
cli
add
xchg
jecxz
bound
pop
arpl
or
or
xor
cmp
loopne
add
fistpll
pop
imul
mov
fistpll
jo
ja
add
lods
sbb
orl
std
int3
pop
inc
pop
sub
add
aas
xor
xor
call
push
dec
in
jl
mov
adc
mov
sbb
hlt
xchg
clc
cmpsb
nop
or
leave
adc
std
add
inc
fs
sbb
sub
add
xor
mov
push
xor
and
mov
sbb
or
lea
push
js
add
dec
jo
pusha
or
ror
vmread
xchg
sub
roll
mov
sub
call
fs
pop
or
addr16
cld
push
mov
pop
sti
sbb
and
pushf
test
mov
or
push
and
fs
lahf
imull
add
popa
dec
inc
xchg
ret
mov
or
in
test
cmc
lods
pop
adc
inc
jmp
push
jae
mov
out
lods
sub
jp
scas
mov
sbb
sub
out
rolb
stos
pushw
ljmp
lock
insl
xor
adc
cmp
and
movsl
push
jbe
sub
xchg
add
mov
jg
sbb
mov
lret
jo
mov
cli
mov
pop
cmp
pop
jo
ret
loopne
xor
inc
sbb
inc
orl
mov
das
sbb
inc
xor
enter
pop
cmpsb
imul
adc
push
pop
dec
xor
lock
mov
adc
aas
ret
inc
push
adc
pop
sbb
cwtl
and
pop
cs
mov
jb
ss
sbb
and
xchg
push
testl
push
mov
mull
dec
inc
popf
test
push
sbb
adc
mov
add
je
jae
gs
add
es
cmp
dec
push
and
inc
adc
xchg
movsb
out
stos
jnp
aaa
pusha
pushl
js
sub
add
push
inc
idivl
in
xchg
or
inc
cmp
pop
or
pop
pusha
lcall
sbb
mov
push
int
dec
inc
aaa
ret
das
push
aam
out
outsb
in
or
fs
xor
cld
mov
insb
adc
lret
xorl
popaw
je
and
out
adc
lahf
jl
push
dec
inc
add
push
mov
nop
out
sbb
and
shlb
dec
sbb
push
fdivrl
cmp
push
jmp
sbb
mov
or
dec
in
fs
or
std
mov
push
cmp
push
adc
or
jle
popf
and
das
ds
or
out
incl
xchg
or
add
jb
mov
shlb
push
in
add
jg
fmull
test
je
stc
sti
es
sub
std
push
movsb
add
add
cwtl
popa
xchg
outsb
pop
test
add
sahf
adc
sbb
jge
dec
lds
sbb
adc
adc
enter
xchg
xchg
hlt
or
sub
pop
sbb
psadbw
xchg
fucomi
incb
mov
icebp
loope
push
mov
or
mov
imul
je
push
push
cmp
loope
add
xchg
inc
dec
pop
jno
mov
mov
xlat
fwait
or
pop
and
jbe
outsb
and
repz
sar
adc
js
iret
fsubl
sub
jecxz
pop
nop
es
jp
add
imul
sbbb
cmpsl
mull
jae
add
imul
adc
rcll
sbb
iret
call
inc
fsubs
jae
outsl
sub
inc
push
add
inc
cmp
roll
mov
and
inc
or
cli
loopne
aaa
dec
sub
pop
popa
rolb
sbb
adc
dec
addb
aaa
js
dec
cld
stos
and
in
jge
jne
adc
and
imul
lret
inc
movlps
sbb
and
xchg
pop
cs
mov
cmpsl
adc
loope
nopl
jnp
push
add
cmp
add
shll
outsb
out
add
adc
push
sub
or
sbb
mov
idivl
xchg
sbb
fs
push
mov
lock
or
data16
pop
aas
adc
adc
cmp
cmp
sti
push
cmp
mov
stc
inc
or
popa
hlt
jnp
lret
negb
test
add
push
imul
adc
adc
dec
outsb
in
and
and
mov
aas
loopne
or
push
movlps
xchg
adc
or
push
xor
or
pop
orb
outsl
loopne
outsb
incl
sub
inc
ss
adc
in
mov
xchg
popf
jae
bound
lds
sbb
xchg
lret
insl
out
insl
push
jns
or
xor
dec
inc
pop
cmp
fcomps
pop
movsb
and
pop
mov
sbb
das
cld
arpl
push
mov
and
call
or
mov
stos
inc
enter
pop
or
pop
sub
leave
dec
jae
ja
or
lret
xor
shll
and
cli
cmpsb
nop
sbb
and
addr16
xchg
push
xor
push
sub
clc
sbb
rcll
enter
sbb
mov
push
sti
inc
inc
nop
pop
movsl
pop
popa
inc
addr16
iret
sbb
mov
and
std
cmp
push
adc
push
arpl
fwait
xchg
jb
mov
jmp
sti
xor
dec
loop
pusha
mov
push
or
lea
or
lret
loop
scas
sahf
gs
std
insb
adc
movsb
adc
push
add
sub
inc
rcrb
and
decl
jb
ja
outsb
push
push
jns
add
fldt
aaa
xor
xor
add
xor
xor
add
ljmp
dec
dec
dec
addr16
push
push
push
jbe
jbe
inc
dec
dec
jno
arpl
arpl
xor
insl
sti
jmp
xor
add
push
dec
inc
inc
push
dec
xor
xor
xor
outsl
in
xor
inc
arpl
jno
push
add
popa
insl
push
outsl
dec
dec
mov
imul
add
and
dec
jo
inc
add
js
outsl
push
jns
inc
imul
jns
cmp
push
add
insb
push
fistps
add
bound
add
gs
fs
jns
imul
inc
inc
inc
js
xor
sbb
arpl
aaa
jo
add
xor
cmp
cmp
dec
imul
outsl
mov
xor
dec
imul
inc
imul
add
fildll
jne
jne
jns
xor
gs
xor
imul
jno
std
ljmp
dec
push
inc
push
pop
inc
push
push
dec
inc
dec
inc
inc
dec
add
ss
inc
dec
push
push
pushw
add
push
ss
popa
loopne
arpl
int3
jl
das
insb
test
sbb
jno
inc
jo
jo
dec
jo
lcall
sbb
shr
dec
xor
jb
mov
inc
push
testb
dec
push
push
imul
data16
mov
jb
bound
aaa
dec
jae
dec
sbb
gs
outsl
or
imul
push
mov
pop
clc
scas
mov
dec
add
inc
bound
idiv
test
push
push
push
dec
inc
inc
dec
dec
dec
mov
inc
outsl
push
inc
jae
bound
popa
inc
mov
jae
nop
xchg
outsb
bound
aaa
bound
push
fs
push
imul
notb
dec
arpl
inc
dec
pop
dec
push
mov
addr16
fildl
ja
pop
jno
inc
outsl
lods
call
inc
cmp
mov
xor
imul
push
push
inc
dec
push
inc
push
push
pushw
ds
fldt
jl
inc
jo
adc
inc
jbe
stos
insl
ss
imul
adc
insb
xor
mov
fldt
popa
je
inc
inc
popa
xchg
push
imul
data16
or
push
adc
push
std
sub
jns
andl
sbb
mov
jnp
jge
insb
inc
pushw
inc
insl
mov
inc
jle
sub
xchg
xchg
fcompl
lods
cmp
add
add
inc
jne
fildll
dec
dec
sub
xor
pop
inc
ja
push
push
arpl
jno
push
push
lea
inc
xchg
js
jb
push
jno
ja
push
push
or
cmp
xorl
rcll
lcall
popa
fistpl
add
outsl
inc
jae
imul
outsb
popa
insb
imul
pop
jno
dec
popa
js
push
add
das
jns
xor
aaa
pop
js
push
xor
push
add
inc
inc
sub
mov
inc
xor
jo
push
sahf
inc
gs
mov
push
inc
fs
push
pop
add
dec
dec
dec
push
dec
test
mov
push
inc
dec
sub
data16
push
push
incl
je
ja
insb
jb
cmp
xchg
fcmovnb
aaa
stos
xor
push
jo
insb
outsl
test
mov
jo
loope
mov
push
bound
push
inc
push
mov
mov
ret
dec
push
inc
push
push
loop
outsl
movb
push
dec
inc
inc
dec
push
clc
arpl
pop
arpl
pop
push
dec
inc
dec
push
dec
pop
adc
push
push
inc
push
push
jp
je
clc
insl
mov
jns
in
dec
dec
fs
outsl
pushl
cmpsb
inc
in
jne
inc
push
imul
mov
imul
lock
mov
insl
inc
popf
dec
out
push
dec
push
out
std
movsl
lods
adc
inc
jae
jbe
inc
outsb
insl
push
outsb
lods
mov
popa
dec
jo
inc
insb
push
or
das
xor
push
dec
jbe
cli
dec
or
mov
or
outsb
jne
and
jo
push
incl
mov
mov
lcall
dec
movsb
push
insb
fdivrl
lahf
jg
add
inc
fwait
adc
or
repz
lods
inc
cmp
sbb
jno
push
mov
incl
adc
sahf
sarl
gs
cltd
push
jp
mov
and
xor
sbb
cs
imul
mov
js
cmp
fidivl
pop
mov
adc
outsl
mov
add
sub
and
dec
adc
ret
test
jnp
gs
mov
jbe
jg
xchg
jo
das
jecxz
xchg
and
jb
cmp
lcall
incl
push
xor
sbb
out
xor
das
xchg
cli
lcall
mov
pop
ja
xchg
stc
nop
sbb
pop
mov
cwtl
mov
and
std
dec
xor
jo
rep
add
mov
popa
lock
mov
fnstcw
call
ficoms
or
sbb
push
push
xor
mov
mov
mov
jns
mov
outsb
fs
and
cmp
out
fdivrl
mov
inc
pop
sbb
shll
jns
incl
push
outsb
cltd
stc
pop
inc
out
outsb
leave
mov
movsb
pop
ret
sahf
test
in
jns
aam
fidivrl
jp
movsl
or
push
icebp
add
mov
bound
lcall
pop
popa
inc
mov
inc
jg
hlt
jle
mov
jnp
shrl
iret
mov
in
dec
sbb
pusha
cmp
xchg
lods
fdivp
add
mov
fiadds
pushl
inc
imul
into
cmc
mov
inc
cmpsb
or
adc
push
punpckldq
push
mov
ds
xor
into
popa
ret
es
in
jecxz
xor
in
lret
es
call
pop
mov
rol
and
pop
xchg
std
pop
les
add
mov
enter
hlt
xor
xor
jmp
adc
mov
mov
xchg
sahf
or
cmp
icebp
adc
filds
lods
or
sbb
push
xlat
sbb
adc
inc
and
or
ljmp
mov
mov
cmpsl
subl
pop
ja
fisubrs
sub
cmpb
adc
mov
and
or
dec
test
dec
shrl
mov
cmc
jb
cmp
and
arpl
jns
xor
jle
shr
std
cmp
fbstp
push
mov
push
fistps
cld
fwait
call
cmpsb
jg
fcompl
push
xchg
or
cmp
xor
imul
mov
lea
cmp
imul
jb
sub
cmp
and
decl
out
cmp
mov
inc
loope
jo
int
test
push
jmp
jnp
out
aas
sti
and
jecxz
nop
xchg
sub
repz
push
jmp
aas
xchg
leave
sub
jbe
jecxz
imul
or
mov
pop
loop
push
sbb
pop
mov
xor
ja
mull
pushf
jg
pop
cli
incl
adc
fsubs
adc
xchg
adc
cli
movsl
incl
cli
test
jmp
ss
hlt
imul
mov
jle
pop
cs
xchg
lock
mov
or
in
dec
icebp
fdivs
cli
call
sbbb
push
xchg
lods
xchg
mov
push
hlt
lcall
dec
xchg
sub
fnstcw
mov
mov
mov
daa
pop
ret
inc
cli
pop
mov
out
cmp
jno
loope
scas
stos
cmpsl
mov
xchg
add
lods
in
fildll
cltd
pop
je
sub
negl
clc
mov
call
jmp
and
imul
cs
sbbb
js
in
cmpsb
daa
and
ljmp
sbb
pop
mov
or
rclb
sub
call
sub
ljmp
shlb
xchg
pusha
pop
out
and
popa
mov
fs
call
mov
add
out
js
popl
bound
mov
xchg
xlat
insb
adc
lock
mov
fnstsw
movsb
out
lret
xchg
clc
sub
and
push
mov
cmp
inc
stc
xchg
push
push
notb
mov
decl
decl
cmp
inc
fdivl
lcall
mov
cmp
ljmp
pushf
pop
push
call
inc
insl
jle
dec
add
ror
movsl
das
adc
outsl
cmp
icebp
pop
shrb
decl
adc
dec
mov
add
movsl
or
push
and
in
lret
out
nop
lock
loope
call
adc
mov
sarl
pop
jg
sub
pop
mov
jp
mov
mov
fiadds
addr16
rclb
es
mov
stos
xchg
jno
push
test
pusha
ret
bt
call
mov
mov
cltd
cld
pop
xchg
mov
fisubs
or
sub
push
stos
in
enter
xchg
mov
xor
fwait
and
mov
fstpt
pop
adc
pop
mov
xor
out
rcrb
cmpsl
xchg
call
incl
hlt
cmp
ljmp
xor
ss
dec
les
jmp
push
int
lcall
dec
mov
add
les
pushf
adc
mov
push
ret
jl
test
cli
pop
lcall
push
mov
cmpsb
ljmp
adc
push
sub
pop
push
pop
cs
mov
jmp
mov
mov
sub
adc
notb
xchg
mov
fmulp
pop
int
popf
add
adc
repnz
jmp
stos
or
repnz
push
outsb
mov
lret
lock
clc
ljmp
sar
leave
sbb
mov
inc
fs
ds
jp
mov
nop
repz
and
in
fildl
xchg
jmp
aad
popf
shr
pop
test
add
in
stos
les
outsl
adc
test
mov
and
and
inc
nop
jae
cmp
sbb
repnz
ljmp
into
loopne
adc
sbb
mov
inc
push
pop
stos
loop
lods
arpl
pop
push
cmp
cmpsl
mov
mov
in
push
sarb
gs
icebp
cmpsb
adc
or
out
loopne
pop
repz
mov
pop
sbb
movsl
pop
or
test
incl
data16
or
pop
mov
mov
mov
aaa
cltd
leave
fistpll
ret
lods
outsb
mov
idiv
outsl
adc
pop
push
cmovs
shrb
xchg
sub
dec
std
lretw
pop
das
sub
inc
scas
adc
dec
dec
sub
decl
rcrl
call
fidivs
or
sbb
and
clc
jle
xlat
fidivrs
mov
jg
rclb
xchg
dec
fmul
inc
ja
cld
arpl
decl
adc
adc
das
xchg
stos
mov
mov
pop
shl
movsl
incl
js
dec
es
jo
lock
push
mov
dec
shlb
mov
lods
xchg
or
aaa
clc
push
popf
sbbl
sub
push
sbb
hlt
pop
mov
push
icebp
add
jl
pop
addr16
push
add
scas
jae
movsb
fwait
idivb
inc
insl
leave
jb
xchg
in
sub
ljmp
sub
insb
iret
repz
js
or
fwait
or
fists
xor
xor
xchg
aam
adc
lret
mov
xchg
sbb
push
push
sbb
ljmp
lahf
incl
sub
push
jmp
scas
pushf
mov
dec
pusha
and
or
xchg
mov
out
or
xchg
xchg
or
cmp
jns
call
xor
mov
aam
movsl
or
fdivr
out
pop
pop
repnz
mov
cltd
or
lcall
cld
and
rclb
jmp
adc
nop
inc
insl
shlb
aaa
sub
es
sbb
inc
cmpsl
or
jne
sti
pop
add
push
lds
ljmp
cwtl
cld
es
roll
push
and
add
and
pop
ret
pop
push
je
lods
orl
sub
test
out
mov
dec
push
adc
outsl
fistl
pop
mov
sti
sbb
rorb
hlt
outsl
hlt
xchg
jbe
and
jle
xchg
dec
jl
jl
out
ret
cmc
mov
movsb
ret
movb
sbb
out
mov
das
hlt
xchg
mov
in
data16
push
mov
and
aad
cmp
xchg
shll
test
pop
lds
dec
leave
subl
xchg
loopne
sbb
call
sbb
jge
pop
jnp
inc
fs
adc
daa
push
aaa
push
jo
mov
jecxz
or
push
jne
jne
pop
mov
leave
mov
mov
lds
gs
jmp
mov
fsubl
aad
daa
das
icebp
pushl
jb
pop
addr16
loope
sub
pop
sub
ljmp
sub
xchg
xor
inc
jo
xchg
pop
jne
push
dec
stc
sahf
jg
mov
jnp
xchg
into
arpl
xor
lcall
or
cmp
adc
mov
mov
xor
outsl
call
das
adc
cmp
arpl
push
mov
sbb
rcrb
mov
push
lret
call
aaa
fmuls
loope
insb
pop
shll
push
clc
cs
cmc
test
decl
lcall
fsubrl
movsl
mov
mov
pushl
jge
xchg
cmc
ret
mov
cwtl
xchg
cmp
mov
jge
push
out
pop
aam
pop
dec
sbbl
das
mov
lret
cs
or
in
scas
jnp
movsb
mov
push
push
lahf
xor
mov
aad
dec
ret
mov
jne
jp
mov
lods
fldt
test
mov
inc
pop
sbb
mov
jmp
mov
jge
out
scas
inc
ds
je
sub
pop
sbb
repnz
jg
xchg
iret
out
jae
jmp
sti
aas
mov
popa
int3
add
jb
mov
lcall
stos
adc
xor
fs
mov
outsl
lcall
dec
xor
dec
cmpl
fsubl
std
dec
xor
das
dec
adc
and
push
ja
dec
xchg
and
fwait
pop
fwait
bound
pop
stos
or
stc
adc
out
mov
inc
aad
pop
jp
dec
aaa
pop
push
arpl
xor
mov
ljmp
mov
movsl
jg
ror
scas
jl
js
inc
movsb
jl
or
call
xor
xchg
adc
cli
lds
sbb
or
sbb
inc
sbb
push
loop
cli
out
add
inc
cmpsb
das
icebp
lea
lcall
push
jmp
inc
fistl
xor
push
decl
je
jge
shrb
cmp
mov
es
leave
add
jb
lahf
sub
fwait
jbe
mov
add
inc
into
cltd
dec
outsl
call
outsl
hlt
test
out
push
dec
mov
lea
cli
mov
aad
jge
les
inc
in
mov
in
outsl
lcall
jmp
xor
sbb
xchg
sbb
inc
mov
repnz
movsl
rcrb
ljmp
lahf
scas
js
in
pop
lret
xchg
clc
xor
sar
pop
sbb
mov
test
icebp
push
inc
lcall
mov
xchg
sub
aaa
es
data16
or
jecxz
stos
cwtl
lock
inc
std
stos
addr16
iret
lea
push
movsl
outsb
sbb
mov
push
mov
test
faddl
sub
scas
and
mov
test
aaa
adc
adc
aaa
mov
loope
and
clc
push
mov
and
fimull
push
lock
pop
bound
outsb
sub
test
jmp
pop
fists
mov
mov
add
xchg
inc
sub
int
jb
cli
neg
adc
popa
inc
pop
inc
loop
gs
hlt
sbb
movsl
mov
mov
fnstenv
mov
jg
pop
cli
xor
xchg
jbe
aas
pop
movsb
sarl
pop
insl
or
cs
je
negb
and
cmp
jmp
dec
fs
xchg
inc
leave
sbb
je
das
sarb
sub
sub
pop
dec
xor
push
mov
pop
cld
fistl
mov
sbb
cmp
pop
test
das
xchg
mov
inc
cmp
jbe
lret
cmc
inc
inc
cli
or
test
aam
fldenv
sbb
loopne
test
mov
stos
mov
test
mov
fnstcw
ljmp
in
std
imul
mov
adc
mov
push
cmp
inc
mov
jae
stos
cld
pop
aad
mov
leave
inc
or
ja
mov
insl
pop
ss
push
int3
aas
sbb
push
pop
test
adc
xchg
jg
fidivrl
cmp
inc
mov
push
xor
or
xor
lcall
inc
clc
pop
loope
sbb
dec
sub
jns
lock
push
or
xchg
xor
sti
lret
incl
repz
daa
and
pop
jae,pt
cs
call
xor
mov
dec
mov
push
aam
and
jns
shrl
add
mov
jnp
movsl
mov
adc
roll
jbe
add
jp
fcoms
stc
pop
imul
dec
inc
bound
jb
insb
imul
add
xor
inc
or
push
jae
cmp
js
imul
outsl
je
insb
bound
jns
arpl
inc
addr16
stos
dec
js
outsl
insl
add
outsb
dec
bound
push
push
add
xor
push
pushl
push
je
js
xor
add
dec
arpl
xor
arpl
pushl
popa
js
data16
push
push
push
outsb
xor
fldt
inc
js
push
or
inc
inc
outsb
add
insb
insl
aaa
push
push
ss
outsl
add
aaa
jne
ljmp
inc
ss
xor
imul
inc
dec
popa
mov
outsl
inc
dec
jbe
cmpsl
add
imul
popa
jne
outsb
push
push
arpl
jns
bound
jae
add
ss
fucomi
jmp
add
push
push
inc
push
dec
dec
mov
pop
pop
inc
inc
gs
dec
dec
mov
roll
aaa
mov
loop
insl
inc
je
fs
inc
data16
add
jo
jno
jbe
adc
jno
outsl
jno
clc
add
xor
push
imul
inc
inc
inc
add
popa
inc
mov
mov
fiadds
push
dec
dec
push
jo
bound
sub
sub
outsb
addr16
mov
gs
push
and
or
sbb
cli
imul
push
lods
roll
jbe
and
call
outsb
cmp
cmp
inc
push
xor
add
jno
pop
mov
inc
data16
jo
jbe
dec
imul
imul
pop
fs
insl
push
dec
inc
jne
xor
cld
mov
pop
into
xchg
xor
insl
xor
mov
mov
xor
push
sub
pop
mov
inc
dec
gs
insl
fistpl
and
mov
ja
arpl
in
inc
loope
jae
adc
je
xor
push
inc
jb
dec
fmuls
test
dec
imul
push
pop
sub
inc
scas
dec
xor
jns
dec
cld
fcmovnu
mov
imul
inc
xchg
dec
jae
jne
popa
jno
jnp
das
pop
inc
jbe
ja
jns
bound
rolb
cld
insl
mov
ss
inc
push
push
jno
jb
jbe
xor
gs
add
dec
inc
xchg
loop
lea
pop
push
pop
dec
dec
dec
inc
popf
pop
sbb
das
mov
pop
fs
push
gs
shll
mov
push
sub
jbe
adc
pop
lods
jbe
test
mov
jo
dec
arpl
gs
dec
xchg
jae
xor
imul
fisubrl
ja
mov
inc
imul
divb
fimull
add
push
inc
pop
inc
push
inc
dec
inc
pop
fs
testb
scas
insl
inc
inc
push
inc
mov
outsl
aad
gs
push
jne
mov
pop
sub
inc
outsl
stc
pop
pop
pop
push
mov
push
jno
aaa
push
jbe
push
std
lea
loop
pop
js
imul
inc
push
insb
arpl
lods
adc
int3
cld
push
xorb
outsb
jae
popa
jns
xor
jae
movsb
inc
adc
pop
xor
cmp
jo
push
cmp
inc
ss
mulb
push
add
outsb
xor
lods
inc
jg
inc
add
cmp
adc
loop
sbb
imul
pop
jns
jmp
mov
xchg
clc
into
fcoms
sarl
push
je
imul
jbe
gs
pop
inc
popa
lea
push
pop
jo
repz
mov
or
addr16
mov
or
inc
push
pop
pop
mov
or
mov
sub
mov
imul
fnsave
pop
sub
rorl
inc
jbe
dec
push
dec
sbb
divb
sub
jb
je
sbb
dec
cs
imul
es
xor
xchg
or
cmpsb
loope
mov
shll
jne
aam
xchg
jmp
test
sbb
pop
push
xor
data16
mov
dec
push
push
imul
mov
inc
aaa
sbb
gs
das
jb
inc
inc
mov
mov
sbb
xchg
push
cmp
test
jns
xor
pop
pop
or
mov
push
xor
insl
sti
outsb
and
dec
sahf
inc
fs
popa
icebp
or
jno
and
jb
notb
jne
dec
scas
sbb
add
dec
dec
sub
push
fbld
dec
push
dec
inc
bound
rclb
nop
sti
push
inc
insl
dec
dec
fistl
push
cmp
inc
sbb
imul
dec
xor
push
mov
mov
std
arpl
call
imul
jg
push
sbb
out
lods
icebp
fistps
push
inc
jbe
and
mov
ficomps
adc
das
add
add
daa
clc
adc
lret
add
add
pusha
and
add
hlt
add
add
add
push
mov
ds
punpckhbw
aaa
inc
mov
mov
and
mov
fcmovnu
add
adc
cmpsb
fs
push
pop
lods
mov
jmp
enter
mov
add
add
push
mov
fdivl
stc
xchg
mov
sti
xchg
sub
push
jle
add
lcall
packuswb
lods
push
cmp
jge
jecxz
cltd
fnstcw
testl
jg
mov
into
in
ss
add
push
add
add
add
cmpxchg8b
xor
addl
adc
sbb
iret
into
testb
add
sbb
sbb
add
cltd
add
addb
cltd
jnp
mov
test
dec
mov
push
fdivl
addr16
stc
add
sub
add
out
ds
mov
iret
outsl
add
inc
cwtl
lods
dec
lret
add
add
push
add
adc
xor
pop
fstpt
mov
popa
xor
je
scas
inc
mov
or
into
adc
and
fildl
out
lods
in
pop
jnp
jno
mov
and
adc
push
testb
add
or
mov
inc
popl
mov
sub
add
add
pop
xor
stc
test
mov
stos
add
add
loopne
and
leave
out
dec
fadds
mov
cmc
mov
and
repz
pushf
fs
stc
dec
xchg
incl
add
add
add
pop
xchg
cmp
arpl
pop
mov
stc
add
jmp
jno
dec
popf
jp
push
in
sbb
cwtl
adc
or
test
out
add
dec
sbb
bound
imul
subl
daa
imul
sub
jecxz
out
inc
push
jge
add
add
cmp
mov
xor
push
movsb
add
shl
aas
push
movsl
stc
add
sub
mov
xchg
xchg
xchg
cmp
pop
pusha
shlb
add
lret
es
jbe
adc
or
xor
inc
add
test
lea
add
cmp
js
and
test
leave
or
sub
add
fidivs
adc
and
fldl
mov
xor
in
add
out
lods
fisttpll
out
push
adc
sbb
cwtl
xchg
inc
out
jge
adc
cmp
or
adc
ret
pusha
ja
push
cmp
add
mov
fxch
inc
add
lcall
pop
push
lods
daa
jp
and
or
icebp
adc
add
jecxz
mov
xor
add
stos
or
add
xchg
cs
mov
mov
lock
rolb
negb
dec
xchg
jecxz
and
mov
add
mov
xchg
test
enter
arpl
fldpi
lahf
xchg
sbb
inc
rcrb
lret
fbstp
iret
bound
shlb
or
or
movsb
inc
or
xchg
adc
in
sub
cmp
pop
test
lock
fld
mulb
pop
push
xchg
add
bound
xchg
sgdtl
pop
jge
jge
andl
inc
cmp
bound
rolb
and
data16
leave
arpl
xor
je
rorb
cmp
out
xorl
adc
inc
lcall
mov
test
sub
xchg
and
nop
mov
in
mov
invd
push
adc
scas
insl
mov
mov
fists
mov
jae
out
cmp
lahf
sbb
fcomps
fcompl
fildl
mov
testl
pop
sbb
testb
pusha
shrl
jno
mov
inc
rclb
push
xchg
lods
dec
dec
jbe
test
jns
add
fld
repz
lds
sbb
mov
inc
xchg
inc
xor
mov
ss
aam
cli
loopne
mov
pusha
iret
mov
xadd
mov
xor
push
stc
push
imulb
into
push
mov
orl
mov
inc
test
and
cmpsb
xor
fimull
popf
push
mov
lahf
sbb
fisttpll
cmp
stos
dec
mulb
cmp
xor
scas
inc
pop
pop
sbb
dec
lahf
test
jb
pop
roll
or
icebp
xchg
shll
rorl
mov
push
bound
loop
aas
in
clc
sub
imul
dec
mov
mov
mov
popw
jbe,pt
jl
jp
add
addb
ror
test
dec
cmp
push
rolb
push
lcall
sbb
dec
dec
lahf
adc
adcb
rolb
lcall
mov
and
ret
fdivl
lock
xor
leave
add
decl
xor
or
or
ja
dec
mov
cmpsl
iret
fcomp
xor
push
shrb
stos
repz
pop
jmp
addr16
das
repz
mov
lds
seto
inc
adc
pushf
xor
dec
stc
call
adc
std
adc
leave
sbb
cmc
dec
dec
cmc
lds
xchg
data16
jp
push
xlat
inc
adc
into
pop
push
fisttpl
xor
rclb
fisubrl
push
addr16
jnp
fcompl
push
push
push
and
mov
lds
ljmp
out
out
cli
mov
shl
mov
std
test
fmul
outsb
lods
jo
icebp
pop
sbb
movsb
mov
aas
jle
mov
xchg
pop
pusha
addr16
cmpsb
das
test
cli
push
cmc
xorb
aaa
mov
in
sbb
fiadds
mov
in
jns
cs
xchg
fistl
or
add
sub
and
cmpsb
adc
rorl
mov
jmp
andb
pop
scas
fucomi
enter
and
mov
push
nop
jne
into
lcall
sub
sbb
ds
rol
and
push
inc
fldl
pop
lods
fwait
xor
jnp
push
dec
rdpmc
xchg
add
ret
jmp
xchg
adc
inc
sub
fs
push
cmp
daa
pop
push
mov
daa
mov
add
jge
sbb
cwtl
xor
leave
or
push
call
push
ret
leave
pop
inc
push
jbe
addr16
inc
fsubrs
cmp
stos
mov
test
xchg
pop
int
cltd
ljmp
bound
fwait
sti
sub
xchg
fs
xchg
imul
fldenv
mov
cmp
stos
filds
or
dec
insl
nop
or
jne
mov
xchg
jo
imul
pop
fmul
jp
outsl
and
pop
je
inc
and
rcrb
movsb
cwtl
push
cwtl
clc
or
jb
add
lock
neg
je
dec
jb
fadds
mov
sbb
loop
ss
xor
push
pop
add
push
mov
sbb
sbb
sbb
movsb
xchg
push
aam
in
push
pusha
icebp
hlt
jecxz
mov
push
mov
gs
lods
icebp
sarl
test
dec
icebp
push
adc
push
and
lds
mov
inc
cwtl
rorb
dec
adc
sub
push
mov
daa
inc
xchg
loope
pop
aas
inc
mov
xchg
mov
test
repz
mov
aad
in
or
sbb
pop
call
jl
cmp
ret
or
cmp
es
dec
dec
mov
movsb
cmp
inc
rclb
adc
sahf
mov
pop
addr16
dec
sbb
inc
aam
xchg
sub
xchg
pushf
icebp
add
jecxz
incb
push
jns
mov
add
push
adc
or
lock
pop
mov
pop
mov
or
mov
test
sbb
cwtl
aad
and
fwait
popf
cmp
mov
push
jnp
loop
stc
and
mull
shlb
xchg
into
testl
mov
aaa
jae
add
cmp
pop
xchg
pushf
jns
dec
orb
subl
jge
divl
lahf
xchg
jge
fimull
inc
inc
mov
mov
test
pop
dec
push
lcall
push
je
daa
jmp
stos
inc
pop
pop
and
stos
jns
fdivs
inc
imul
jg
push
mov
mov
cmp
cmp
cmp
imul
icebp
cmpb
inc
call
mov
pop
add
lock
shlb
lods
enter
loope
xor
icebp
lds
insl
sar
cwtl
xchg
nop
mov
ret
or
cmp
fs
mov
push
push
cmpsb
adc
pop
stos
mov
fs
inc
arpl
nop
push
insl
inc
pop
add
inc
cmpl
imul
jge
cs
cmpsb
or
xadd
sbb
out
cs
hlt
or
mov
stc
add
mov
xor
pop
inc
push
ljmp
sub
mov
xor
scas
dec
adc
ret
jge
push
adc
cltd
add
addr16
lcall
mov
cmpsl
nop
mov
andb
mov
jo
cmp
sub
andb
inc
dec
lock
xchg
adc
sbb
jae,pt
daa
aas
inc
insb
popf
or
shll
jno
call
lock
or
test
cld
adc
stos
mov
lods
inc
xchg
mov
adc
cwtl
cmp
jns
mov
enter
sub
or
cmp
shrb
jp
rcrl
and
sub
cwtl
jl
inc
xor
rcrb
mov
movsb
inc
popf
data16
inc
lea
fisttps
sub
loop
push
outsl
push
push
jecxz
sbb
jg
adc
cmpsl
adc
insb
xor
out
push
push
and
push
enter
mov
je
scas
fldenv
insb
mov
jl
dec
fstpt
repz
subl
or
fwait
and
mov
cwtl
or
or
push
nop
scas
jns
ja
jmp
out
xchg
lcall
outsb
sub
xor
sbb
mov
test
pop
mov
pop
loopne
loop
or
push
sti
sti
mov
das
mov
jb
lcall
fmull
add
sbb
inc
lods
loopne
cmp
mov
xor
fidivrl
or
xchg
xor
adc
or
xor
push
popa
pop
adc
shlb
imul
xchg
dec
ret
xchg
insb
or
loopne
flds
jnp
test
push
test
in
aas
popa
notb
pop
les
jne
inc
mov
inc
leave
lds
mov
jge
sbb
lods
dec
stos
ret
ja
adc
scas
iret
popa
inc
andb
or
dec
push
xchg
sbb
push
mov
mov
js
pop
daa
jl
aas
pop
lds
add
lods
test
xchg
movsb
cmp
adc
nop
pusha
adc
push
dec
sub
outsl
add
adc
inc
dec
jmp
sub
cld
incl
add
add
repz
ja
adc
inc
stos
arpl
cwtl
xchg
leave
or
insb
mov
cli
xor
pop
sbb
arpl
dec
pop
notb
cmpsb
in
lds
push
xor
and
mov
add
fwait
shlb
lcall
xchg
call
imul
sbb
icebp
addl
sub
adc
push
loopne,pt
in
mov
aam
xchg
jne
nop
xor
je
push
mov
out
mov
dec
roll
outsb
xchg
rcl
scas
pusha
daa
bound
cmp
jbe
cmpsb
out
sbb
cld
ret
mov
pop
lret
cmpsl
xor
lret
insb
or
pushf
xchg
movsb
cmp
sub
mov
addr16
pop
add
xor
push
fst
dec
js
das
xor
js
pop
fwait
mov
add
and
cmpsb
pop
add
jns
mov
faddl
js
xchg
pop
int3
insl
and
inc
sbbl
aaa
add
adc
adc
pop
dec
or
mov
fst
push
cmp
cmp
inc
jno
dec
cmpsl
dec
mov
inc
jge
pop
addr16
out
sbb
xor
lahf
mov
repnz
aam
into
loopne
loopne
add
lret
cmp
inc
scas
addl
mov
in
mov
lods
or
or
push
ljmp
fwait
xor
and
cmovb
loop
cmp
cmp
and
sarb
das
jo
push
cmpsl
xchg
in
pop
cld
mov
scas
movsb
inc
dec
mov
jp
inc
jle
sub
pop
push
movups
test
and
sub
dec
dec
push
sub
inc
test
xchg
mov
mov
add
cmp
push
adc
leave
mov
jae
outsb
jle
fcoml
pop
inc
lret
mov
out
add
add
bound
dec
je
adc
movsl
out
xchg
xor
addr16
inc
mov
inc
fbstp
mov
mov
dec
aaa
popa
sbb
aad
lret
push
and
jno
mov
test
inc
loope
lds
lea
hlt
xor
shlb
dec
bound
mov
cmp
add
push
xor
test
mov
push
mov
pop
repz
mov
cli
rcrb
push
shll
mov
mov
leave
ljmp
push
dec
jp
pop
lods
add
pop
mov
lret
stos
inc
adc
sbb
testl
loope
aam
mov
addl
icebp
sbb
push
jecxz
aas
test
loopne
movsb
dec
cmpsl
xchg
pop
sub
push
popf
arpl
xor
int
mov
mov
cmpl
lret
or
push
jge
testb
mov
cmpsb
mov
push
jmp
sub
fwait
imul
gs
daa
cmp
add
dec
mov
std
cli
sub
movsb
push
mov
addl
mov
and
mov
jl
cld
aas
dec
adc
pusha
bound
and
sbb
dec
sahf
jmp
and
stos
push
add
in
mov
stc
pop
fadd
in
push
cmpsl
cli
iret
call
clc
push
inc
nop
sahf
mov
pushf
pusha
sbb
test
inc
add
nop
sbb
addr16
leave
mov
pushf
mov
and
mov
push
sbb
popf
sbb
push
mov
or
rorb
mov
push
shrl
mov
and
pop
jae
scas
mov
repz
xor
and
shll
fs
mov
push
pop
or
stos
xchg
shl
adc
inc
mov
cwtl
sbb
mov
push
ret
sbbb
subl
aad
jb
xorl
push
stos
jecxz
and
data16
daa
out
aaa
mov
and
cmp
lds
sub
cld
mov
or
mov
popl
leave
loop
movsl
adc
jbe
flds
inc
xchg
mov
call
andl
pushf
inc
adc
add
stos
repz
popf
hlt
mov
addr16
adc
out
dec
push
push
dec
and
xor
inc
adc
stc
outsl
in
adc
cmp
dec
std
mov
call
into
adc
outsb
lods
test
stos
jbe
cmp
add
sbb
mov
andb
adc
popa
aad
sbb
mov
bound
lahf
jge
mov
ss
push
daa
xchg
mov
adc
pop
aam
or
inc
mov
mov
cmp
xlat
or
sbb
popa
movsb
mov
rcl
xchg
addr16
imul
push
mull
dec
sub
push
ffreep
rolb
mov
mov
inc
sbb
jmp
mov
aad
pop
loope
ljmp
pop
fdivl
dec
xor
jo
cmp
outsb
mov
loopne
adc
mov
insb
pop
push
dec
stos
pop
insl
cmp
imul
dec
push
pop
int
fmull
adc
mov
add
mov
jmp
inc
inc
mov
lret
mov
outsl
mov
repz
lret
popf
cmpsb
mov
and
cmc
inc
out
xchg
adc
jp
xchg
sub
lcall
adc
ljmp
test
stc
aas
lods
imul
mov
pushf
mov
inc
mov
adc
xchg
lock
dec
sub
bound
mov
xchg
inc
stos
sub
add
push
jp
cmpsl
cmp
xlat
and
stc
out
sub
stos
dec
idivb
push
inc
lcall
mov
pop
lahf
popa
fldl
popa
aam
push
ljmp
and
loop
jle
mov
push
inc
jnp
faddl
push
ret
xchg
push
rcl
mov
xor
xor
pop
xchg
aas
leave
aas
and
add
add
add
enter
ret
stc
insl
xchg
call
push
pusha
mov
adc
imul
mov
test
mov
add
and
repnz
xchg
fsubl
cmp
shll
jge
mov
inc
fildll
pop
xor
sub
cmp
mov
push
pushf
pop
cwtl
add
add
stc
loopne
mov
cwtl
sub
jge
out
pop
out
gs
repz
xor
aam
repz
pop
hlt
jb
xor
pop
sbb
push
scas
in
mov
jmp
mov
scas
out
adc
xchg
and
jmp
pop
subb
or
cmpsb
and
hlt
lds
push
xlat
mov
and
bound
xor
xchg
inc
dec
and
ret
and
mov
mov
push
fld
add
daa
test
cld
pop
aaa
dec
shll
mov
dec
push
into
js
daa
adc
movsl
xchg
addl
inc
repnz
xchg
insb
add
mov
and
mov
adc
aad
popf
cmc
sub
add
arpl
mov
inc
adc
sbb
fdivrl
jb
sub
movsb
int
pushf
push
adc
in
and
dec
pusha
add
cmpl
mov
push
xchg
inc
je
mov
or
out
fs
cmp
sbb
add
cmp
cmp
adc
hlt
lds
addr16
sub
repnz
mov
std
addl
cmp
das
push
push
adc
push
mov
mov
jb
and
cmp
subl
je
test
push
inc
ljmp
or
adc
mov
in
cmp
insb
cmp
push
add
inc
lds
pop
sbb
adc
sbb
rcrb
cmpsl
sbb
popa
mov
dec
addb
movsb
xchg
fistps
sbb
test
icebp
jne
sbb
lods
jp
clc
popa
adc
cld
dec
cmp
pop
push
fdivr
adc
cmp
pop
xchg
insb
adc
dec
jmp
mov
adc
sbb
loope
cmpsb
xchg
das
push
pop
sbb
in
fnop
outsb
pop
jge
or
jg
cmc
mov
out
pushf
movsl
les
sbb
dec
xchg
pop
movsl
std
and
std
xchg
pusha
jecxz
push
icebp
insl
xchg
daa
mov
inc
pop
or
and
xor
cmp
sbb
inc
dec
or
jns
or
out
ds
dec
xchg
sub
and
adc
mov
xchg
adc
mov
jns
shll
addr16
mov
int3
hlt
xor
jl
nop
cli
outsl
and
sbb
sahf
push
dec
dec
cmpb
adcl
mov
shrb
fs
sbb
test
pop
stc
clc
leave
sti
cmp
lret
aad
push
and
jg
cli
jae
fsts
scas
pop
jo
sub
fnstcw
lret
xchg
sbb
in
dec
xchg
outsb
data16
adc
pushf
jo
add
xlat
into
add
scas
loope
andb
push
xchg
lods
pop
nop
xor
ljmp
pop
test
mov
sub
inc
fcmove
sbb
pop
mov
xor
sbb
shlb
fisttpl
push
or
adc
dec
leave
dec
push
aam
mov
fsts
mov
iret
push
loopne
jo
ror
pop
rolb
mov
xchg
loop
aad
jo
mov
js
add
push
daa
jmp
add
push
xor
mov
and
push
xor
add
testb
js
xor
sub
xchg
or
mov
and
sub
dec
add
push
fildl
xchg
data16
mov
loop
add
ds
jae
fwait
push
xor
mov
cwtl
fs
push
push
xchg
push
je
lods
inc
inc
jbe
and
xor
movsb
xor
or
sub
mov
xchg
inc
cmp
xlat
xchg
addb
push
add
pusha
pop
jno
mov
sahf
mov
clc
ds
push
mov
das
setno
add
add
pop
sahf
lea
imul
mov
sbb
mov
std
adc
xorb
inc
in
and
aas
add
and
dec
aam
xor
sub
pop
cmp
aad
pop
pop
sub
or
into
std
and
outsl
cmpsl
ret
popf
dec
test
cmp
adc
in
rolb
arpl
push
adc
inc
aad
fldenv
mov
mov
xchg
test
jnp
lds
inc
or
cmp
je
stos
and
or
lret
or
inc
xlat
cmp
jmp
les
daa
xor
sub
add
outsl
mov
ret
pushf
fnstsw
jnp
sbb
daa
push
lahf
scas
pop
ret
sarl
mov
and
adcl
add
push
inc
lret
mov
js
or
push
and
cwtl
nop
rorb
pop
fcomps
clc
or
mov
dec
movsb
mov
int3
arpl
and
das
inc
push
push
outsb
in
pop
jo
jmp
mov
leave
or
sbb
dec
decl
push
xchg
repnz
push
int
roll
push
rorb
pop
int3
add
fucom
jbe
aad
popf
shl
js
aas
xchg
dec
idiv
popf
inc
mov
sbb
lret
cmp
call
adc
mov
jne
cmpsl
pop
push
mov
pop
outsb
loop
loopne
je
add
cmpsl
push
inc
pop
sbb
push
fsts
ret
sbb
add
arpl
sbbl
xor
push
pop
fsts
arpl
sub
leave
mov
or
loope
cmp
ret
lock
stos
dec
rclb
sub
jmp
into
or
or
mov
shl
or
pop
and
pop
push
mov
and
imul
xor
or
mov
xchg
mov
mov
cs
pop
jno
lods
push
mov
fsubrl
in
test
jne
push
inc
and
dec
jno
sub
inc
add
lock
or
lds
inc
xchg
or
das
fs
shll
pop
scas
add
fstpt
xor
addr16
pop
pop
push
repnz
cmpsl
pop
mov
push
cwtl
sbb
rcrl
sbb
andl
leave
rcrb
gs
dec
js
cmp
adc
notl
das
push
inc
push
pop
xchg
lret
fdivs
xchg
or
shrd
pusha
push
xor
out
lock
cmpsb
xchg
xchg
imul
jmp
and
lods
outsb
dec
out
xchg
and
pop
mov
and
pop
adc
dec
mov
add
dec
adc
into
in
and
lret
inc
nop
cmp
loope
add
imul
sub
fcmovnbe
push
data16
outsb
jnp
dec
push
stos
call
push
cltd
out
stos
jbe
adc
fwait
lods
jnp
jo
aaa
push
push
inc
inc
jns
loop
leave
sbb
dec
lds
sbb
std
mov
push
lods
xor
lret
xchg
add
std
inc
pop
xchg
push
lds
add
dec
pop
inc
mov
sarl
sub
lods
jnp
mov
jne
fs
fsts
xor
nop
adc
inc
std
mov
bound
inc
insl
ds
mov
jge
dec
push
jns
mov
leave
test
cmp
adc
fdivrl
xor
and
popf
push
out
adcb
and
out
roll
js
xor
or
aaa
loope
pusha
inc
xlat
pop
outsb
add
sahf
sbb
push
jne
pop
jae
out
int3
je
call
addb
aam
cmp
pop
mov
cld
jbe
test
stos
inc
xchg
cmp
add
stos
lods
out
mov
adc
dec
ljmp
xor
movsb
cmp
push
test
xchg
std
data16
cltd
push
dec
pop
rorb
lcall
es
push
inc
mov
xchg
xorl
orl
out
push
pop
jbe
jo
push
test
mov
dec
cs
les
inc
pop
lock
or
mov
pop
jne
mov
leave
ss
push
or
cld
rol
fistps
sarb
ss
je
mov
add
adc
aas
loopne
lahf
cmp
sahf
enter
test
push
call
loope
call
sub
mov
mov
ja
leave
sbb
mov
mov
push
fldenv
add
ret
repnz
pushf
movsb
inc
and
or
and
shr
mov
cmp
dec
cmpsl
call
and
ror
dec
mov
mov
cmpsl
rorl
mov
loope
insb
je
cmp
scas
popf
and
push
lods
adc
ret
in
jg
adc
mov
adcb
sbb
ja
cmp
cmp
xchg
mov
mov
pop
inc
mov
das
daa
pop
xor
cmc
add
mov
adc
xchg
or
fldcw
pushf
loopne
icebp
popa
pushf
pcmpeqb
pusha
pop
lret
fisubs
mov
cmpb
outsl
or
sbb
sbb
jno
std
add
cli
push
je
add
loopne
dec
mov
imul
pop
push
and
add
adc
es
dec
inc
cmp
mov
mov
int
or
lret
test
test
and
inc
pop
dec
sub
adc
push
and
popf
xor
mov
sub
andl
push
insb
add
shrb
pop
push
mov
lods
daa
pop
cmc
mov
insb
adc
fsubrl
and
sub
int3
xchg
cli
fs
xchg
cmc
mov
jl
sbb
mov
std
loop
mov
push
dec
xchg
pushf
cmp
mov
lea
and
lods
bound
and
push
sbb
das
push
dec
icebp
inc
ljmp
mov
inc
out
dec
sub
sub
bound
xchg
sahf
cli
sbb
pop
sub
insl
notl
inc
and
movlhps
inc
mov
mov
inc
inc
xor
mov
pusha
cmpsb
fwait
es
adc
xchg
stc
xor
inc
adc
shlb
mov
cmp
es
int3
dec
mov
popl
lods
xchg
scas
rorb
fadds
data16
inc
popf
push
es
aam
and
bound
lock
pop
xchg
xchg
fwait
adc
and
mov
dec
movsb
xchg
and
out
xor
xor
inc
hlt
sbb
xchg
and
cmp
aad
pop
addr16
hlt
in
cmp
xor
icebp
nop
fmull
scas
pop
push
popa
ss
pop
mov
or
xchg
push
lahf
test
jle
mov
adc
xchg
cwtl
xchg
inc
lcall
mov
dec
jns
push
pop
add
in
xchg
xchg
sub
mov
shrb
jp
jl
loope
ror
add
xor
enter
inc
mov
pop
ret
dec
or
insl
or
insb
push
je
inc
fnstenv
push
dec
push
pavgw
clc
int
outsl
js
shll
dec
pop
mov
ljmp
ljmp
push
and
mov
mov
das
iret
jl
daa
push
fisubs
push
push
and
cmp
jl
cmpsl
cld
jle
in
cmc
fadd
mov
fidivl
add
xor
clc
mov
in
shl
pop
into
dec
mov
dec
xchg
loopne
cld
in
inc
and
aad
xchg
neg
setno
fs
ret
ss
xchg
dec
stos
pop
push
mov
pop
cld
nop
lcall
inc
shr
orl
cld
ret
sti
and
mov
lods
cmp
xorl
xor
popf
rorb
dec
loop
add
cli
adc
mov
roll
inc
pop
inc
lahf
push
adc
loopne
pop
or
gs
or
ds
jae
les
sub
int3
loop
mov
pop
cwtl
stos
aad
cmp
xor
movb
sub
popf
dec
into
fiaddl
adc
pop
push
sbb
mov
hlt
imul
mov
imul
mov
mov
ja
jl
cmpb
pop
lea
or
lahf
push
shll
stos
add
cmp
xchg
data16
pop
mov
popa
cvtdq2ps
xorl
cmp
int3
fdiv
aam
mov
jb
scas
stos
repz
sub
loopne
test
lods
xor
ror
sub
sbb
sbb
or
pop
inc
pop
pinsrw
bound
xor
imul
sub
xor
je
repnz
js
adcb
pop
push
pusha
adc
jg
sbb
les
icebp
dec
jnp
repz
xchg
pusha
add
and
mov
push
add
mov
inc
daa
mov
pop
fs
and
sub
out
ds
fsubp
sbb
into
xchg
jmp
lds
sahf
mov
cmc
dec
pop
inc
call
rclb
enter
aad
aas
pop
push
push
jb
popf
mov
scas
es
scas
or
sbb
sub
dec
nop
mov
push
orb
xchg
lods
das
in
bound
jno
ljmp
and
lods
and
jecxz
mov
and
in
movsb
cld
dec
test
lods
insb
or
push
cmp
test
js
pop
or
cmp
pop
xor
xlat
nop
cmp
cmp
mov
frstpm(287
and
xchg
jno
rcrb
out
call
clc
adc
rorb
fmuls
sub
and
outsb
and
add
lods
into
inc
mov
or
stos
shll
add
and
and
pop
lret
pop
pop
test
and
pop
lcall
xchg
andb
and
mov
cmp
scas
sahf
nop
loop
xor
push
lahf
rolb
push
jg
add
pop
arpl
je
popl
std
test
fadd
or
adc
push
inc
xor
mov
inc
popa
test
add
or
fcoml
fsubp
dec
inc
push
xchg
rclb
adc
mov
icebp
cmpsl
mov
bound
out
and
pop
or
stc
xchg
jns
ss
repnz
adc
and
push
inc
mov
pop
push
rorb
sar
add
mov
xchg
xor
mov
xchg
mov
popf
lret
mov
adc
xor
inc
pop
pop
cmp
and
xchg
cmp
cli
cmpsl
dec
xchg
xchg
orl
xor
jno
test
repz
rcl
int3
dec
mov
cltd
mov
add
nop
arpl
xor
enter
mov
mov
adc
xor
jp
aas
mov
push
fs
push
xorb
in
add
test
jb
inc
outsb
repz
stos
aas
inc
xchg
mov
sbb
pop
cmpsl
sub
jne
inc
movsb
andb
and
and
imul
mov
movsl
mov
lock
xchg
fsubr
or
or
jl
mov
or
mov
leave
add
fs
add
inc
ljmp
lahf
sbb
xchg
rcrl
xchg
push
add
jp
dec
rcrb
sub
adc
mov
mov
roll
and
sbb
out
test
xchg
hlt
pusha
dec
daa
adc
jg
call
and
aam
mov
add
cwtl
jl
mov
shll
roll
or
ret
stc
lods
test
add
rcrl
xorl
xchg
sbb
pop
lods
insb
pop
in
and
enter
int
jmp
or
xchg
or
orl
gs
mov
jp
add
adc
clc
test
mov
mov
or
iret
loopne
sbbb
mov
xor
or
nop
cld
imul
and
add
add
cmp
fcoms
test
add
pop
jbe
and
inc
xor
fs
jae
nop
pop
adcl
push
decl
inc
mov
in
icebp
cwtl
sbb
js
sub
cld
test
jp
xchg
addr16
or
mov
inc
call
jge
fildl
rcll
cmpsb
jmp
in
push
cmpsb
je
dec
fcmovb
sub
add
pop
into
je
or
mov
cmc
jge
add
int3
ja
fcoms
fwait
aas
add
popf
mov
push
and
shll
jo
inc
and
pop
add
mov
xchg
inc
out
jno
mov
fs
and
test
sbb
daa
sbb
mov
fwait
mov
test
adc
push
dec
je
sbb
lcall
xorb
pavgb
dec
je
mov
adc
or
sub
jl
pop
jg
cmp
and
jmp
push
adc
inc
cmpsb
xchg
sub
scas
popa
cmp
cmpsl
jo
adc
das
orb
call
push
jbe
xchg
inc
dec
push
sbb
cld
mov
xor
sub
lods
pusha
data16
lds
jnp
add
pop
pop
pusha
frstor
adc
leave
outsl
cli
rolb
insb
mov
cmp
or
pop
cmpsl
adc
popf
test
fstps
ret
enter
icebp
js
movsb
outsb
add
and
xor
stc
push
sbb
pop
jle
or
ja
sub
mov
cwtl
mov
ud2
jnp
mov
mov
sub
jo
mov
or
in
pusha
hlt
nop
mov
jp
shl
cmc
add
mov
push
and
mov
cmc
mov
inc
in
bsf
fsubrp
dec
xchg
movsl
xor
push
hlt
dec
data16
jne
loop
scas
sbb
stc
cld
out
fidivrs
rcrb
mov
pop
outsb
or
add
cmp
mov
mov
nop
insb
inc
xchg
dec
mov
in
rclb
nopl
sub
js
in
ljmp
jo
inc
fbstp
das
sbb
nop
arpl
cwtl
mov
stos
cli
inc
jbe
pusha
mov
and
or
repnz
loopne
daa
add
pop
adc
add
addr16
or
cmp
leave
sub
loop
push
arpl
in
es
movb
mov
rorb
dec
std
inc
push
nop
jo
popf
dec
sub
mov
xchg
push
mov
adc
nop
and
data16
push
and
adc
cmp
jo
push
xor
inc
test
sub
pop
and
repnz
and
loopne
mov
sub
nop
sahf
mov
pop
insb
hlt
out
push
mov
orl
inc
daa
sahf
nop
loopne
ljmp
lcall
inc
cs
fsub
ret
lods
lcall
pop
inc
adc
or
push
sar
adc
mov
leave
mov
shll
out
inc
jge
subl
fsubs
outsl
jo
stc
and
cmp
pop
pop
mov
lods
fwait
push
mov
callw
mov
nop
cli
cmp
add
cmp
loope
aam
jp
sbb
lock
xor
or
push
sbb
dec
xlat
jne
enter
inc
xor
sbb
aas
push
adc
push
into
add
cli
test
and
in
jae
or
mov
inc
jge
and
stos
mov
dec
mov
cs
inc
pop
lds
add
adc
fcmovu
push
jmp
mov
and
pop
fldl
mov
subl
lahf
mov
inc
aas
jecxz
scas
jmp
jmp
stos
andl
ret
lcall
pop
andb
js
push
jae
pop
xor
sub
mov
imul
push
add
fstps
daa
xorl
out
add
rclb
push
cmpb
add
ret
mov
cld
fstl
adcl
aam
xchg
dec
bound
sub
jo
pop
pop
sub
lret
add
inc
ds
lds
aam
leave
mov
sbb
pop
ror
call
cmp
pop
rcl
popw
stc
cmpb
cs
cmp
and
mov
in
imul
pushf
xor
fs
insl
inc
loopne
jle
add
push
out
or
or
shlb
adc
mov
movsb
out
test
popf
lea
mov
loop
sti
jmp
mov
lcall
decl
mov
jae
jge
les
jl
xchg
push
inc
into
call
add
jnp
out
and
push
repz
xor
xor
sbbb
or
jmp
dec
fwait
push
xor
xchg
mov
xor
out
nop
adc
jo
jg
mov
and
sarb
lock
outsb
jnp
sbb
xchg
add
xchg
arpl
pop
mov
mov
jle
mov
sbbb
push
jns
pop
ja
enter
inc
mov
sub
adcl
hlt
movsb
pop
jmp
nop
rolb
adc
sbb
dec
or
sbb
mov
rdmsr
xchg
aaa
cltd
sub
popf
jge
mov
rorb
jbe
stc
repz
xchg
push
mov
shlb
sarl
in
push
push
xchg
cmc
loop
shll
pop
xchg
sub
xchg
push
repnz
dec
es
push
lds
or
add
sbb
sbb
add
jne
in
pop
mov
dec
xor
cltd
ja
dec
jo
push
and
xor
sbb
cli
popa
xor
sub
mov
roll
sbb
mov
dec
xchg
scas
movl
or
mov
inc
insl
sbb
lods
sbb
sbb
js
adc
fidivrl
mov
insb
inc
mov
add
xor
leave
fs
inc
and
aam
in
and
mov
jl
mov
cmp
ret
cmp
inc
pop
cmp
arpl
jl
fcmovnb
adc
xor
jne
std
insb
mov
dec
xor
add
idivw
sarl
or
mov
or
mov
out
and
cs
lahf
lock
xor
sub
xlat
loopne
sti
jbe
add
daa
enter
int
xor
xor
mov
sub
and
dec
pop
fistl
out
shufps
jmp
hlt
mov
xor
dec
adc
in
mov
add
scas
adc
sbbl
inc
cmpb
cwtl
jne
mov
sahf
subb
xor
inc
xchg
ret
je
pop
test
add
daa
gs
xchg
data16
movsb
xchg
cltd
je
shrb
pop
dec
and
js
stos
pusha
dec
icebp
pusha
hlt
cmp
pop
inc
mov
mull
fadds
dec
jl
pop
shr
xchg
xchg
nop
jns
in
sar
fdivl
inc
cmp
lcall
xor
and
adc
cmp
sbb
pop
roll
test
cmp
xchg
in
daa
pop
les
xor
fmuls
pop
icebp
inc
or
sti
fadd
or
sahf
xchg
in
sub
imul
jae
push
rclb
aas
push
test
pop
in
jge
pop
and
dec
inc
jne
arpl
lahf
popf
hlt
add
cmp
adc
stos
sar
mov
xchg
xorb
inc
jge
test
adc
imul
or
paddsw
lcall
sar
mov
aaa
add
loope
adc
ljmp
andl
xor
fistpl
nop
das
sub
leave
mov
lahf
add
jnp
push
xorb
and
mov
repz
dec
mov
adc
xor
lea
or
shl
cwtl
or
jg
lret
pop
push
sbb
and
mov
inc
xlat
jno
mov
push
ret
mov
sbb
popf
add
mov
lret
push
mov
add
jecxz
mov
mov
fdivs
add
sbb
inc
es
das
jno
mov
pop
pause
add
insb
lods
jae
int
mov
rol
dec
cmp
loopne
add
xor
mov
push
fstp
inc
mov
addb
push
mov
leave
push
sahf
es
mov
or
lret
sbb
or
mov
popa
orl
add
lret
cmp
dec
arpl
bnd
or
or
clc
mov
shll
mov
movsb
es
test
adc
arpl
mov
shl
jb
fcoml
pop
adc
inc
inc
pop
dec
inc
xlat
and
xchg
jne
inc
jbe
cld
std
push
push
mov
or
dec
mov
pusha
or
int
push
into
push
cmp
pop
adc
pusha
pop
lahf
and
ret
sub
push
jne
out
adc
mov
add
rcl
and
sub
push
push
stc
fldenv
leave
and
pushf
adc
or
gs
push
add
sub
cmp
imul
popa
cmpsl
mov
shrb
movsl
aas
xchg
movsb
inc
mov
lods
push
push
loop
addr16
out
inc
mov
lahf
dec
pop
out
stc
nop
out
in
mov
mov
test
xor
xchg
cmp
stos
mov
and
cltd
rol
or
sbb
inc
out
andl
jecxz
test
sub
or
cld
pop
test
xrelease
or
testl
loopne
leave
or
mov
nop
testl
sti
or
inc
push
mov
mov
int
movsb
xchg
call
addr16
in
insl
or
jecxz
cmp
sub
movsb
inc
rol
push
push
nop
call
iret
push
cmpsb
pop
inc
je
lret
sti
stc
aaa
and
sbb
cmpsb
xchg
inc
mov
pop
xor
arpl
and
adc
mov
ss
mov
stc
je
adc
or
lret
or
adc
and
fldenv
cmp
or
adc
adc
std
js
dec
xchg
repz
jle
ljmp
arpl
xchg
aas
push
inc
or
cmpsb
cs
mov
pop
sbb
pop
enter
xor
xchg
pop
insb
dec
jno
xor
inc
or
xor
push
or
mov
jl
mov
lcall
xor
sub
ja
out
inc
jg
pop
data16
lret
inc
push
test
and
jnp
movsb
xchg
mov
loopne
inc
dec
and
push
shr
shlb
fiadds
pop
movzbl
cmpsb
xor
push
enter
add
ret
into
in
add
ret
popa
out
and
xor
popa
mov
xor
mov
sub
jmp
adc
mov
insl
inc
mov
cmc
adc
testl
pop
scas
movsb
pop
into
outsl
repz
movsb
xchg
push
rcrb
gs
les
cld
nop
mov
adc
or
gs
aas
insb
push
mulb
movsb
scas
mov
fadds
push
cs
std
fs
daa
push
mov
rol
add
js
xlat
jns
jbe
jle
or
aad
movsb
push
imul
add
mov
andl
inc
mov
xor
lds
into
add
add
shll
icebp
hlt
or
rep
sbb
push
ljmp
and
ret
fisttpl
les
pop
aaa
xlat
cmpsb
jo
orb
aam
rcrb
mov
outsb
cmpsl
push
mov
sti
sahf
or
jl
dec
gs
pop
mov
or
add
sbb
subb
shll
fdiv
and
sub
adc
popa
rol
xorb
aam
shrl
mov
and
push
into
daa
dec
dec
je
rolb
popa
hlt
push
ljmp
nop
cmovle
popf
mov
js
push
push
xchg
pop
shll
or
sti
rorl
das
xchg
rol
and
pop
mov
subl
sahf
clc
jle
pop
cli
mov
and
mov
mov
xor
sbbb
daa
out
and
and
pushf
jp
js
push
xchg
or
and
int3
pusha
cmp
into
adc
loopne
sti
lock
leave
xor
push
scas
cwtl
push
sbb
mov
mov
sub
jo
pop
mov
cmp
and
push
push
dec
cltd
out
pop
nop
sbbb
cwtl
imul
loop
sbb
pop
and
rcrb
sahf
je
adc
add
push
xor
aas
add
mov
push
test
push
je
lods
mov
adc
test
push
imul
mov
scas
jmp
out
mov
call
cmp
das
add
cmpsb
ret
dec
lcall
xor
cmp
push
js
es
and
in
stc
mov
push
cmp
dec
add
adc
dec
push
adc
adcb
push
fs
adc
push
aaa
inc
and
jle
stos
sarb
push
push
fadds
mov
mov
out
sbb
inc
test
sbb
xchg
mov
lret
or
hlt
test
loop
cltd
adc
inc
fs
push
pop
inc
adc
int3
dec
bound
mov
iret
pop
es
insl
out
push
add
and
rolb
scas
jge
das
sbb
out
sub
stos
pop
loopne
jno
push
mov
dec
pop
add
and
insb
and
int3
mov
adc
xchg
push
ss
das
add
movsb
add
aas
sbb
dec
adc
ret
add
mov
mov
sub
movsb
jmp
sti
jecxz
jp
xchg
or
add
add
ja
inc
js
add
xchg
sbb
scas
xlat
jle
xchg
fstpl
sub
sub
pusha
test
mov
imul
iret
cltd
scas
jne
popa
push
cmpsl
cld
les
mov
push
stc
mov
xchg
jnp
or
sbb
ret
popf
jmp
xchg
sbb
shl
cmp
loop
sbbb
mov
inc
mov
mov
adc
fdivl
push
in
fistpl
and
xor
std
push
xchg
ficompl
fldl
into
or
adc
fsubs
adc
stc
and
dec
lods
pop
jecxz
mov
aad
sbb
adc
or
daa
and
pop
push
stc
xchg
jo
add
rorl
je
or
lock
repz
pop
inc
leave
addr16
jo
or
int3
dec
sarl
inc
nopl
cwtl
and
push
dec
cmp
mov
inc
or
sbb
and
or
pop
call
outsb
jbe
out
or
aas
fcompl
cmpsl
loopne
daa
hlt
dec
and
lods
mov
xchg
push
inc
jo
test
ljmp
inc
movsb
jo
popa
test
xchg
mov
push
xlat
nop
popf
inc
jmp
xchg
call
or
pop
cwtl
std
jle
je
dec
test
in
je
jecxz
leave
and
call
cltd
mov
dec
cmp
mov
pusha
movl
ret
sahf
push
inc
lret
xor
sub
pop
mov
cmp
sub
sahf
ret
push
je
pushf
adc
loopne
mov
xlat
xchg
sbbb
movsl
aad
or
jo
push
aad
add
stc
xchg
ret
sub
mov
cmc
repz
rorl
repnz
mov
in
sub
jne
inc
xor
jns
push
dec
imul
and
popa
push
inc
push
call
ss
mov
cmp
xchg
xchg
je
pop
adc
jl
sbb
sub
enter
and
xchg
add
stc
daa
repz
push
fst
jl
cmp
sbbl
sbb
cmc
mov
or
add
mov
mov
scas
dec
pop
ja
mul
pop
xor
and
mov
adc
or
mov
inc
xchg
push
add
cmp
jl
in
jl
add
add
outsb
mov
and
js
cmp
add
xor
cmpsl
lahf
adcb
add
ljmp
lret
loopne
jno
adc
jae
repnz
cmc
and
leave
pop
push
repnz
add
jmp
jg
and
push
fnsave
mov
cmp
inc
xchg
push
sahf
lods
dec
inc
fs
xor
adc
daa
enter
movsb
push
sti
inc
inc
sub
sub
ds
int
mov
cld
mov
mov
mov
movsb
mov
push
rorb
test
call
inc
subb
pop
and
ret
faddl
inc
push
and
sahf
sbbl
dec
pusha
int
cwtl
std
cmp
xchg
xor
pop
inc
fsubs
and
loope
outsb
xchg
daa
ss
movsb
ficomps
add
data16
inc
jb
lods
enter
pop
mov
stos
ret
test
popa
adc
xor
je
xchg
in
test
push
adc
out
dec
adc
das
mov
mov
repz
dec
jle
mov
and
shll
mov
xor
nop
dec
rclb
dec
lods
dec
sbb
popf
mov
test
mov
mov
push
xchg
nop
xchg
mov
pop
jl
sub
and
sub
test
push
lahf
cmpl
stos
or
popa
call
daa
xchg
push
daa
in
pop
mov
inc
sti
adc
nop
xor
push
movsb
daa
idivl
rcrb
scas
notb
xor
push
ljmp
mov
loop
xor
sbb
add
sahf
push
adc
cld
dec
adc
jecxz
loop
sbb
into
rclb
cmp
jg
add
and
rcll
mulb
pushf
shrl
jg
es
or
jp
out
cwtl
pop
mov
aam
iret
or
insb
mov
push
test
stos
jmp
pop
setno
or
adc
cmpsb
test
adc
mov
sbb
mov
loope
adc
inc
stos
adc
sti
pop
stc
call
push
inc
or
loopne
inc
xlat
sub
or
jecxz
dec
xor
or
xor
in
dec
cmc
jmp
add
stos
push
scas
lret
test
and
rorl
xor
inc
addr16
cwtl
mov
out
leave
lock
or
pop
xor
es
sub
cmp
ds
movsl
push
in
test
push
sbb
out
mov
dec
pop
push
mov
jmp
shufps
pop
js
and
insb
fldt
inc
jp
je
into
pop
push
sahf
cmp
leave
sub
clc
and
jb
jo
repz
lret
pop
inc
cwtl
sub
aas
mov
daa
mov
hlt
sti
clc
orl
ds
scas
in
pop
scas
in
rol
dec
inc
mov
cmpsb
xchg
bound
and
jle
ss
or
ficompl
and
test
mov
inc
add
mov
data16
pop
addb
inc
mov
lahf
sarb
pop
jp
sbb
and
ror
into
loopne
and
cmp
shr
and
lcall
pusha
dec
xor
cmpsb
lret
and
jne
pop
lods
enter
rorl
clc
push
or
bound
test
repnz
sub
testb
mov
add
xchg
addr16
mov
mov
dec
or
dec
inc
sbb
stos
jl
dec
mov
and
cmp
push
repnz
inc
orb
pop
ss
adcl
sbb
sbb
hlt
xchg
mov
mov
in
js
pop
mov
sbbb
enter
push
out
das
in
cmpl
push
xchg
push
lret
loopne
mov
mov
adc
jmp
mov
fs
push
adc
mov
inc
out
mov
pusha
mov
sub
add
or
orl
ljmp
add
cmp
ss
mov
inc
inc
inc
mov
popf
pop
cmp
inc
pusha
sbbb
pushf
jo
int3
jge
xchg
jmp
les
out
adcb
es
sub
mov
fldln2
cmp
mov
hlt
insb
stos
and
and
xor
lea
arpl
dec
aaa
fldcw
push
xchg
push
rcrb
ficompl
add
adc
mov
jne
and
shl
les
adc
rcrl
and
or
sahf
mov
je
add
pushf
cltd
xchg
addb
mov
adc
push
xchg
ljmp
mov
add
jl
jmp
add
inc
in
push
sub
pop
mov
mov
subb
scas
icebp
cmc
or
dec
js
jbe
fistps
leave
mov
stos
je
and
scas
xlat
js
xor
push
and
repnz
mov
and
push
cmpsb
push
pop
adc
cmp
jns
lods
cmp
out
scas
and
int3
push
mov
add
ficompl
or
ljmp
iret
dec
addr16
inc
lea
fistps
xor
cld
mov
and
stos
leave
nop
ljmp
or
push
xchg
fiaddl
inc
add
xchg
jo
enter
sub
pop
dec
imull
jo
inc
cmp
mov
mov
repz
inc
sub
mov
mov
inc
push
in
and
xchg
icebp
loopne
mov
sbb
popf
mov
daa
sub
mov
sub
xor
rol
inc
ds
das
xchg
fidivl
bts
sbb
mov
or
mov
cs
js
js
aam
mov
arpl
jg
cmpsb
lods
ret
dec
icebp
in
pop
std
xchg
add
mov
test
xor
mov
inc
sbb
add
popf
sbb
fs
lea
stc
xchg
js
xor
dec
sub
xchg
or
pop
push
fs
rcll
hlt
pop
push
sub
add
ror
test
pop
sub
adc
bound
xchg
cmpsl
sbb
lahf
push
enter
dec
out
add
or
adc
loop
mov
add
shlb
mov
ss
aad
push
jmp
sub
dec
fdivs
int
ficoms
stos
or
sbb
mov
add
jg
mov
fcomip
int3
and
mov
xlat
enter
fiadds
pop
jns
and
adcl
adc
mov
repnz
rorl
push
pop
inc
xor
pop
mov
xor
mov
and
pop
mov
and
das
jmp
adc
js
jbe
xor
mov
inc
das
and
and
cld
mov
hlt
xchg
test
push
dec
and
mov
aad
fwait
xchg
xchg
mov
adc
or
stc
inc
mov
mov
and
repz
or
or
mov
movsb
les
lret
lds
push
imulb
or
ja
in
mov
clc
pop
sub
jmp
stos
push
je
rclb
dec
stos
leave
stos
fldt
and
xor
mov
test
inc
jne
push
addl
jmp
pusha
popf
outsb
fldl2e
adc
jmp
sahf
jb
add
sbb
test
fcmovnbe
in
mov
js
pop
imul
cld
or
and
xor
xchg
invd
jne
test
push
push
rcl
mov
insb
mov
push
cmp
shlb
push
xchg
pop
outsb
mov
adc
in
in
sarl
mov
lock
push
or
ljmp
mov
sub
mov
push
movaps
pop
or
cwtl
dec
sbb
lods
js
xor
into
mov
mov
cmp
aad
es
nop
fwait
mov
aam
ja
or
adc
lods
andb
into
adc
add
mov
dec
mov
or
adc
mov
or
add
push
inc
lret
cmp
test
push
jl
mov
pop
sbb
and
mov
leave
lret
add
fldenv
cmpl
inc
or
inc
or
add
and
pop
add
mov
push
mov
jb
or
fsts
sbb
xchg
mov
imul
pop
or
lock
jo
pusha
insl
call
dec
inc
jp
adc
mov
mov
add
rorl
andl
pop
adc
push
inc
mov
dec
push
ret
inc
push
mov
js
shl
adc
aas
sti
arpl
mov
jo
xor
aaa
pop
nop
add
mov
adc
leave
sub
xchg
mov
leave
inc
stos
ret
xor
test
cmp
out
popaw
add
pop
test
imul
fs
inc
jno
lahf
loopne
addr16
loope
or
sub
int
dec
loopne
xchg
enter
mov
addr16
and
jge
xchg
add
sub
push
lods
add
push
inc
iret
test
leave
hlt
add
push
dec
cld
push
dec
enter
nop
leave
mov
sbb
ljmp
mov
and
lcall
cmp
and
pop
mov
test
nop
inc
mov
stc
and
sahf
jne
cmc
inc
sbb
dec
push
or
ret
gs
pop
leave
mov
inc
fildll
lock
aaa
aas
xchg
add
loope
push
out
push
notl
test
pop
sbb
dec
icebp
jnp
leave
jl
icebp
pushf
inc
lods
or
cmpsl
jp
sbb
mov
or
rolb
lods
cmp
lcall
push
cld
into
sti
adc
stc
stos
scas
jmp
add
add
cmp
lahf
mov
or
mov
in
dec
mov
loop
jmp
clts
stc
pop
jecxz
shlw
cwtl
scas
push
mov
pop
sub
rol
xchg
dec
mov
sbb
xchg
xchg
mov
adc
push
sbb
scas
and
add
nop
dec
mov
loope
and
sbb
adc
lds
rclb
lea
cmpsb
cmp
xchg
mov
cmp
cmp
cwtl
inc
inc
test
dec
arpl
popa
arpl
pop
andb
pop
cmp
pop
xor
adc
adc
mov
ds
jo
fcmove
or
repnz
mov
xor
inc
loopne
inc
push
or
mov
cld
xchg
sub
scas
lret
inc
ds
inc
mov
jae
lods
dec
pop
add
repnz
test
arpl
lods
repz
mov
mov
icebp
and
sub
daa
dec
mov
and
leave
aaa
adc
js
dec
cmp
flds
mov
pop
mov
lcall
adc
and
mov
xor
and
out
push
into
enter
and
inc
out
xchg
sub
xchg
lcall
and
add
jp
push
stc
orl
add
je
and
movsl
sub
lds
and
add
test
aaa
repz
test
rcll
mov
test
enter
daa
testb
mov
mov
jge
inc
add
and
pop
pop
pop
in
mov
adc
int
das
add
xor
push
pop
repnz
push
cwtl
jne
inc
inc
mov
hlt
xor
pusha
cmp
movsl
or
je
stos
pushf
popa
add
push
xor
cwtl
fisttps
addr16
aas
rcrl
stos
fsubs
sbb
xchg
stc
mov
pushf
aam
popa
lds
lock
pusha
and
dec
mov
cwtl
shlb
cli
or
or
sub
aad
popf
push
mov
mulb
add
pop
mov
push
or
icebp
xor
comiss
mov
and
test
add
push
and
pop
cmp
js
leave
cld
mov
sbb
jl
jecxz
adc
out
test
push
mov
inc
cmpsb
add
add
adc
push
or
icebp
add
ja
and
add
or
lock
push
inc
add
arpl
or
mov
push
jnp
lret
cmp
adc
mov
jb
push
pusha
push
jae
shrb
in
sub
mov
aad
iret
pop
dec
rorb
adc
cld
mov
mov
sub
xchg
sti
add
adc
jmp
js
mov
mov
bound
into
lock
sub
add
mov
inc
sub
or
test
lds
xor
out
mov
sbb
add
enter
inc
bound
xchg
clc
andb
mov
sbb
movsb
decb
or
sarl
and
push
and
push
jne
daa
jmp
cmpl
push
add
int
lret
loope
xchg
add
fwait
adc
aam
xor
ret
out
test
xor
jmp
fcomps
ftst
adc
ds
lods
out
into
lods
sub
outsb
add
add
test
sub
sti
dec
add
xchg
out
test
jge
and
ja
and
jl
sbb
mov
push
sub
mov
cmp
outsl
stc
mov
inc
adc
nop
hlt
or
jmp
repz
mov
xchg
pop
cmpsb
sub
inc
cmpsl
mov
inc
adc
ret
pusha
popf
pop
inc
mov
outsb
test
call
shl
xchg
addb
aam
pop
enter
sbbl
adc
and
out
and
xor
jmp
ds
inc
cltd
leave
adc
in
stc
and
dec
push
fs
js
cmp
adc
rorl
xor
leave
fsubrs
xchg
orl
lcall
cs
add
lea
test
in
push
es
cli
push
add
das
mov
and
xor
addr16
scas
shl
dec
push
lods
mov
dec
movsb
jae
mov
mov
inc
nop
and
xadd
je
push
sahf
popa
sbb
mov
cmp
cmpsb
dec
inc
cli
aad
data16
adc
sbb
ret
mov
pop
add
fcoml
adc
std
pop
fldt
mov
mov
and
mov
cmp
or
mov
dec
and
test
push
mov
inc
repnz
pop
lahf
mov
aad
loopne
mov
cmpsl
aas
roll
push
cmc
mov
push
jnp
fistpll
shrl
ret
jae
fwait
cmp
sbb
ljmp
lods
jno
sub
mov
cmp
or
das
mov
fnsave
scas
and
enter
push
push
stos
daa
jne
mov
arpl
ljmp
icebp
sbb
cmpl
inc
cmpsl
aas
sub
dec
rcrl
cmpsb
and
pop
xor
jbe
bound
mov
dec
sti
les
adc
push
jecxz
mov
lcall
push
sub
or
sbb
and
movsl
mov
and
dec
rclb
lock
jp
test
arpl
stos
dec
ds
movsb
dec
test
icebp
js
mov
adc
add
das
inc
loope
call
mov
leave
lock
fisttpll
stc
inc
aam
sub
or
icebp
add
pop
sub
repnz
mov
and
sub
push
in
pop
dec
jl
call
jge
adc
jb
mov
fsubrs
rorl
lock
test
push
mov
insb
lret
mov
aas
mov
insb
repnz
mov
lock
mov
in
stc
js
sub
insl
adc
lret
mov
cmp
scas
addl
sbb
or
mov
in
js
push
sub
dec
jl
or
or
or
aas
or
fwait
test
loop
push
mov
cmp
or
sti
and
sub
jne
mov
aaa
cli
leave
fs
sub
test
insb
jns
ljmp
scas
pushf
add
xor
add
pop
repnz
jl
sub
or
call
inc
and
dec
icebp
push
add
sbb
nop
aam
fsubr
xor
testl
or
sbb
pop
ss
sbb
pop
or
push
mov
lret
jp
xor
push
lods
pusha
jl
in
int3
mov
and
or
ss
or
cmpsb
lcall
jmp
and
push
jecxz
adc
fcoms
inc
pop
xchg
mov
mov
insb
cmp
stos
inc
mov
scas
fisubrs
xor
add
test
add
sti
pushf
loopne
icebp
mov
push
divl
mov
rolb
cmp
xchg
push
aam
adc
adc
xchg
repz
andl
in
or
cmp
xchg
cli
or
mov
sub
add
js
or
rol
adc
and
es
and
xchg
add
leave
cmpsl
sub
jmp
lds
out
xor
repz
ja
xchg
and
bound
sti
cmc
popfw
push
pusha
dec
pop
scas
rolb
inc
daa
push
repz
subl
inc
addr16
lret
push
inc
mov
lds
hlt
dec
in
dec
sbb
push
and
pushf
insb
or
ficoml
jp
clc
test
or
sub
js
call
cmp
mov
inc
add
cmp
shlb
iret
push
mov
or
sbb
movsb
inc
mov
add
outsb
push
xchg
ss
xor
cmp
push
loopne
cmp
das
dec
inc
pusha
roll
dec
pop
andl
ret
or
push
xchg
adc
cmp
data16
jp
out
mov
cmp
jo
roll
test
dec
insl
inc
imul
les
sahf
xor
jne
jno
lahf
or
cmp
add
imul
xor
add
mov
and
daa
sbbl
add
mov
mov
inc
and
mov
xchg
add
add
cmp
pop
std
mov
lret
mov
push
adc
lret
mov
imul
jo
aaa
fiadds
jmp
cwtl
nop
pop
dec
dec
mov
cmpsl
loope
push
add
pop
loop
ja
sbb
xor
adc
loop
push
pop
rol
xchg
inc
adc
aam
push
daa
jl
adc
ficoms
or
add
add
es
int3
adc
inc
iret
sub
sbb
cmp
jbe
test
add
xor
xor
jg
mov
paddusw
ret
das
leave
lock
dec
xor
and
das
jns
daa
pop
pop
insb
cltd
repz
dec
dec
jle
dec
inc
adc
xor
pop
in
mov
cmc
fisttpl
dec
test
add
lock
ret
imul
lret
sbb
aad
fwait
sub
imul
adc
add
vpaddw
orl
xchg
or
add
sub
push
int
and
push
inc
cmovae
inc
add
sub
pop
lods
daa
xchg
les
mov
xchg
fcmovnb
and
lret
mov
rcrb
or
adc
mov
xlat
sub
jnp
mov
in
jg
mov
fdivr
test
outsl
subl
icebp
inc
fldenv
fimull
imul
xor
pop
add
das
pop
add
and
or
movsb
xor
aad
xor
xchg
pop
or
pop
aam
mov
lahf
fsubs
dec
daa
in
inc
ret
xor
into
xor
lret
ficomps
push
ds
xchg
nop
xor
add
icebp
mov
dec
enter
test
dec
jmp
lods
rorb
xor
mov
add
xchg
cmp
popa
or
add
dec
je
or
dec
dec
data16
fsub
add
dec
outsb
aam
orl
arpl
jns
jmp
jns
pop
scas
popa
jmp
cmp
pop
sbb
inc
cmpsl
mov
jae
push
mov
push
sbb
xor
mov
cmp
out
push
and
xchg
test
adc
cmp
pop
imul
adc
cmovs
xor
add
scas
popw
or
inc
pop
iret
or
cs
pop
outsl
aam
dec
cli
and
outsl
scas
or
adc
inc
pop
ret
enter
sub
push
inc
xor
bound
sub
leave
pop
imul
enter
into
das
push
daa
bound
in
andl
push
jnp
arpl
or
js
out
arpl
mov
cmp
pop
add
lods
lea
add
mov
jg
mov
pop
jecxz
add
filds
hlt
sub
lea
dec
stos
sbb
mov
leave
xlat
push
xchg
sub
mov
mov
pop
or
mov
popa
jecxz
popa
ss
and
mov
arpl
adc
push
dec
mov
nop
sbbb
int3
in
adc
sbb
sbb
repz
test
dec
adc
adc
pop
enter
inc
pusha
sub
adc
ljmp
or
pusha
lret
push
test
es
jbe
pop
les
cltd
ja
jo
aas
mov
test
lds
jecxz
push
insb
pop
add
stc
test
push
popf
or
ret
movl
xchg
and
out
mov
mov
mov
inc
test
and
adc
sbb
and
shlb
insl
idivl
add
mov
lock
and
or
mov
lea
into
test
push
pop
mov
push
mov
cmp
jp
nop
jb
add
out
and
adc
jnp
fwait
scas
aas
mov
or
or
mov
shlb
gs
dec
jp
ret
sahf
push
or
jns
add
dec
add
and
jo
pop
dec
lea
or
cmp
out
jle
mov
push
pop
iret
dec
inc
nop
mov
loope
rolb
add
xor
jmp
sbb
aad
adc
cli
or
mov
pop
outsb
push
adc
or
pop
fldl
into
push
ss
les
and
into
adc
pop
leave
mov
jp
sbb
mov
sub
and
in
mov
cmc
and
cltd
popl
cwtl
fcmovnb
push
push
cmp
inc
out
cmp
adc
mov
shll
lcall
aam
bswap
ss
xchg
adc
repnz
mov
adc
jge
sub
adc
scas
mov
fs
sbb
push
js
inc
xchg
mov
or
lods
dec
cwtl
adc
mov
and
and
sub
das
mov
sahf
jecxz
ljmp
loope
lock
outsb
sub
cmp
addr16
inc
ss
dec
out
ret
imul
call
and
lock
xor
and
pop
inc
sub
inc
add
lahf
mov
stos
add
mov
sbb
sahf
mov
in
adc
adc
xchg
mov
or
sbb
inc
cmp
repnz
mov
mov
imull
aam
fistl
adc
dec
push
lret
lds
shrb
jne
enter
and
jnp
lock
orl
mov
aas
mov
mov
xor
js
sbb
inc
pop
popl
psrlq
sbb
xchg
out
jns
pop
inc
int3
sub
nopl
popf
pop
mov
aaa
adc
jecxz
add
sbb
push
push
or
cli
inc
jle
or
xchg
sub
mov
mov
cmp
xor
or
xchg
push
stc
lahf
inc
fidivs
popa
or
je
xor
cs
in
andb
xor
lock
iret
aad
mov
jns
into
add
ds
or
cmp
push
mov
xchg
xchg
xor
add
push
insl
lods
mov
movsb
popf
ret
jno
xor
in
mov
andl
pusha
aad
dec
add
xchg
orl
sub
push
popa
ret
sub
sub
jns
dec
mov
jne
pop
mov
jnp
icebp
gs
ds
and
sbb
rorl
mov
stos
adc
ret
jmp
mov
push
jl
xor
jecxz
hlt
mov
mov
inc
adc
adc
loopne
pop
bt
push
adc
or
jns
fmuls
dec
sub
aad
jmp
movsb
pop
push
mov
sarl
push
lcall
sub
xchg
inc
xlat
aam
fldt
sbb
adc
and
or
inc
mov
ds
adc
or
push
test
popf
icebp
movsb
sbb
mov
shl
and
loopne
inc
lret
addb
fcoml
and
out
xchg
shrl
dec
mov
daa
mov
mov
loope
or
gs
add
andl
xor
sbb
outsl
pop
imul
into
inc
push
jne
shl
inc
mov
jbe
call
aas
mov
nop
add
mov
add
loop
jnp
sub
sub
inc
sahf
nop
xchg
mov
lods
aas
and
mov
jmp
out
lock
rorl
scas
inc
fisttps
sbb
push
bswap
add
mov
or
pop
mov
pop
lahf
in
and
push
aam
add
or
inc
mov
mov
pop
cwtl
cmc
xor
push
jp
sbb
shlb
int3
imul
and
and
aas
xchg
and
lock
dec
and
sub
cmpsl
or
or
mov
into
stc
jp
jmp
xor
js
je
test
cld
xor
push
or
xor
lret
cmp
mov
jge
xchg
push
add
and
scas
adc
pop
pop
jl
xchg
inc
mov
push
push
jo
arpl
dec
push
call
enter
jle
adc
sbb
in
inc
rclb
add
xor
adc
cmp
jbe
jnp
aad
and
orl
pop
leave
insl
call
sub
in
pop
test
or
jbe
sbb
inc
mov
xor
mov
test
rcrl
xor
jle
insl
sahf
mov
pushf
jne
hlt
adc
xor
pusha
sbb
ret
mov
ljmp
inc
std
cmpb
sbb
inc
adc
jp
mov
mov
loope
fimuls
mov
stc
xchg
arpl
test
into
mov
or
lcall
imul
sbb
in
inc
ja
mov
in
add
insb
jmp
fs
dec
inc
insl
mov
enter
lcall
xor
movsb
xchg
fmuls
mov
int3
fs
aad
push
sarl
dec
push
mov
cmp
out
and
sub
fdivs
push
dec
mov
dec
in
xor
andl
loopne
fdiv
inc
cmp
mov
add
rolb
shl
add
mov
or
into
pop
sarb
sbb
xchg
addr16
out
bound
or
shlb
mov
jecxz
jecxz
jge
xor
dec
in
paddsb
jmp
and
pop
loope
lret
push
or
je
and
xor
mov
andl
aam
lds
pop
lock
ljmp
jns
add
fwait
loop
and
hlt
sbb
add
lods
sbb
dec
jmp
pop
add
and
pop
cmp
cli
lret
xor
adc
pop
ret
push
jmp
push
push
push
dec
cwtl
jne
cmp
cmp
push
add
mov
stc
add
inc
jl
xchg
push
shlb
aas
jecxz
adc
jns
cmpsl
mov
add
adc
jp
sbb
pop
cltd
pop
push
out
test
mov
cmpsb
movsb
cmp
dec
sahf
movsl
jne
and
das
adc
adcb
gs
push
out
sbb
sbb
movsb
mov
sub
lods
dec
repz
lcall
inc
loope
data16
jmp
insb
lods
add
jo
shrl
push
push
sub
inc
mov
and
and
xchg
sbb
test
push
cld
dec
or
pushf
cmc
jmp
sbb
es
rcrl
shll
xor
bound
cmp
sub
stos
cld
loopne
mov
push
out
dec
sbb
cltd
out
sub
imul
mov
lahf
int3
adc
inc
mov
cmp
pusha
nop
lcall
xchg
rcl
movsb
sub
or
push
jmp
movsb
es
or
hlt
sahf
ret
dec
arpl
fsubrl
sbb
mov
xchg
and
mov
xlat
sub
pushf
lock
pop
and
sub
xor
mov
rol
xchg
dec
stos
cmc
nop
movsb
loop
lret
in
mov
mov
test
sub
sti
mov
jp
xchg
pop
and
dec
out
testl
pop
sti
out
and
and
mov
packssdw
rcrl
sub
pop
pusha
cmp
pop
movsl
in
inc
cmpsb
pushf
add
xchg
test
and
sub
test
mov
jge
and
lods
test
adc
sub
lea
pop
movsl
jo
daa
in
leave
pop
idivl
lods
nop
fstpt
and
mov
and
cmc
test
mov
cmp
fwait
mov
shl
pop
or
adc
add
aam
inc
stos
or
mov
adcb
push
mov
jle
xor
addr16
xor
daa
or
mov
cmp
pop
xor
adc
sbb
cld
add
cmp
repnz
sar
xor
xchg
fmuls
cltd
pop
jo
rclb
xor
inc
fwait
or
mov
icebp
call
pop
pop
jno
jp
enter
popa
ret
popa
les
out
shrl
imul
insb
mov
out
int
daa
in
push
fmuls
sbb
bound
pop
jmp
add
jno
jno
fdivrs
sar
dec
mov
jb
jl
aad
es
leave
inc
or
daa
test
ja
je
jge
add
popf
mov
sub
repnz
cmpsb
scas
mov
add
mov
test
pop
cmpsb
daa
and
cmp
aas
jns
sbb
aam
mov
popf
dec
xchg
mov
sbb
xchg
add
inc
loop
mov
pop
xchg
mov
fwait
adc
ja
cmp
cmpb
mov
pop
cs
mov
push
rcr
js
sbb
add
sub
cmp
sahf
add
cmp
fistpl
es
shll
loopne
xchg
rcrl
sbb
pop
mov
movsb
in
aam
sbb
or
mov
jmp
inc
mov
enter
shll
sub
inc
sub
xchg
movsl
jno
jle
xor
add
jns
mov
shlb
dec
popf
mov
dec
add
or
lcall
adc
sbb
mov
dec
jo
or
addr16
lret
sub
adc
cmpsb
dec
mov
in
add
lret
sbb
jecxz
cli
adc
jns
or
jl
jne
pop
adc
insl
add
cmp
rolb
sti
popf
or
loopne
xor
or
js
adc
cmp
stc
fisttpl
sbb
negb
mov
push
sbbl
shrb
or
inc
repz
or
or
imul
dec
inc
rcrl
imul
add
jle
push
pop
out
and
mov
rorl
add
add
pop
cltd
scas
int
xor
mov
loopne
ds
enter
bound
pushf
cmp
std
sub
or
ror
shll
adc
gs
test
and
mov
push
loopne
cmpb
push
sub
js
sbb
nop
mov
rcll
scas
push
jb
mov
addl
xchg
mov
mov
xchg
adcb
lods
adcb
shr
dec
sub
push
xor
jae
add
or
sbb
sahf
addr16
clc
sahf
ljmp
pop
pushaw
xorl
inc
daa
out
mov
xchg
sub
gs
jne
adc
lea
popf
nop
jg
out
gs
jno
test
or
movsb
aaa
bound
arpl
scas
fisttpl
pop
test
icebp
test
cld
xor
or
xor
call
xlat
or
movsb
ljmp
push
pushf
lock
fadds
xchg
in
xchg
jmp
push
push
cmc
repnz
mov
das
aad
nop
adcl
mov
icebp
cwtl
mov
or
pop
addr16
dec
jl
pop
cmp
lahf
adc
adc
stos
and
scas
cmp
dec
addl
pop
std
and
sbb
adc
shll
xor
mov
cld
incl
ds
or
mov
mov
test
add
inc
adc
int3
xchg
mov
push
and
enter
jnp
xchg
cmp
xor
mov
pop
fs
aaa
je
dec
or
xor
and
sbb
loop
inc
or
dec
push
and
test
imul
lock
push
mov
mov
mov
dec
mov
push
push
shl
mov
sub
sub
int
cli
mov
ds
out
js
pop
push
mov
mov
xchg
cmp
test
mov
nop
jge
mov
push
gs
add
inc
mov
cmp
je
xchg
orb
pop
adc
je
cs
mov
adc
call
sbb
std
test
push
out
pop
jecxz
mov
xchg
pop
js
mov
sbb
repz
push
inc
test
popf
nop
mov
mov
test
add
jle
in
loopne
movsl
adc
or
lahf
push
jbe
pop
flds
jmp
call
and
xor
sbb
inc
repz
mov
xchg
outsl
or
hlt
test
cmp
call
cmp
adcl
mov
clc
inc
stos
mov
repnz
or
daa
sbb
insb
ljmp
pop
dec
sbb
push
dec
pop
sbb
xor
and
sbb
sahf
xchg
adc
cmp
pop
ljmp
push
or
iret
inc
xchg
aad
insl
lods
fwait
push
sarl
sub
push
es
loope
lahf
or
icebp
lcall
in
pop
fstpt
push
dec
movsb
ja
xor
rcr
mov
sbb
jne
lods
xchg
xor
and
xor
cmc
push
repnz
cmpb
or
cwtl
dec
pop
xchg
lds
lock
jge
mov
push
sub
or
or
adc
jmp
shrb
and
jbe
add
pop
xchg
or
adc
jl
repnz
jl
push
out
les
out
pop
nop
xchg
bound
sub
push
or
sbb
mov
mov
and
and
pusha
test
es
and
fcompl
adc
lahf
aam
lcall
inc
icebp
repnz
xor
lcall
nop
add
pop
inc
jno
iret
add
test
lret
cld
or
fdivl
mov
inc
cmp
cmp
fistpl
pusha
or
dec
das
imul
data16
dec
pop
sbb
and
jbe
dec
or
test
mov
jmp
pop
push
fwait
popa
fs
lahf
pusha
dec
sbb
sub
push
mov
and
scas
sub
nop
jp
imul
dec
add
xchg
sbb
lods
imul
sub
push
loopne
sub
fs
push
jecxz
push
cld
mov
imul
add
jmp
ljmp
xor
adc
sub
mov
jns
mov
dec
adc
sbb
dec
pop
outsl
add
mov
addr16
stos
mov
xor
insb
mov
int3
sbb
add
aas
xchg
mov
and
popf
nop
pop
sahf
fs
mov
jb
movsl
dec
repnz
fwait
rolb
xchg
adc
or
xor
sub
sahf
or
push
daa
mov
mov
mov
and
loop
scas
pop
repnz
mov
lcall
xchg
cmp
mov
jb
xchg
stos
cmp
adc
in
push
or
repnz
repz
jbe
adc
shlb
call
add
shrl
and
jmp
mov
add
cmp
mov
and
and
aad
adc
inc
bnd
or
jle
stc
fs
pop
dec
jle
lods
push
aad
lahf
flds
mov
in
ds
dec
push
ret
sub
push
pop
add
or
sub
and
lcall
ljmp
addl
ficompl
inc
popa
cli
cmp
lock
movsb
jmp
dec
sbb
ret
rorb
cmp
adc
pop
repz
lock
inc
xchg
mov
dec
fadds
xor
cmp
out
stc
push
cmp
push
sbbb
push
push
and
shrl
fs
push
sbb
push
test
test
aam
cmp
mov
push
xchg
imul
out
or
inc
shll
clc
fisttps
mov
adc
pop
add
cmc
jne
add
xchg
ret
and
stos
jp
pop
or
and
inc
add
stc
mov
arpl
data16
push
cmpb
in
and
jmp
xchg
rorl
push
out
addr16
insb
roll
sub
sbb
loopne
adc
arpl
or
adc
stos
jmp
iret
mov
lret
jl
xor
push
cmp
adcl
mov
lods
adc
push
lea
lods
mov
mov
bound
pop
push
loop
fsubl
mov
test
or
dec
movsl
cmovno
jb
int
or
pop
aam
and
sub
and
je
add
lcall
and
test
adcl
inc
mov
int3
mov
jnp
into
mov
daa
pop
test
pop
pop
sub
or
inc
mov
mov
xchg
add
mov
xchg
and
addps
xchg
fcmovnb
sbb
fstps
stc
jo
aaa
sub
xor
sub
pop
jle
sbb
jb
push
insb
mov
add
cmp
stc
out
add
xor
aam
and
push
lock
inc
inc
mov
jl
inc
or
mov
or
gs
mov
insb
loopne
xchg
pop
push
sub
je
punpckldq
out
xor
and
lea
inc
adcb
fstl
out
daa
fcmovbe
jo
pop
lds
mov
enter
mov
mov
fcompl
daa
movsb
mov
in
lock
push
and
xchg
rol
xor
push
dec
mov
aas
aad
pushf
pusha
add
inc
inc
cli
icebp
inc
pop
push
fdivp
mov
ret
fldenv
repz
dec
mov
pop
push
pop
popa
imul
or
mov
test
sub
shll
push
dec
jns
sub
and
xchg
and
sbb
addl
outsb
mov
push
mov
imul
push
mov
addl
call
cmc
call
fldenv
or
and
sbb
dec
mov
dec
cmpsb
xor
mov
sbb
movsl
add
pushf
call
xchg
mov
aam
jge
xor
aaa
mov
sub
enter
je
mov
into
decb
xchg
fstl
movsb
loopne
add
inc
daa
sbb
cmp
test
bound
inc
inc
repz
xchg
icebp
xchg
cmpsl
cld
xchg
mov
mov
nop
bound
adc
imul
pop
mov
sbb
sbb
lods
and
mov
into
leave
clc
xor
sub
jp
sahf
lods
sub
and
mov
push
inc
add
xor
pop
jo
xchg
pop
dec
cltd
aam
fcoml
in
jne
xchg
pusha
sbb
push
and
or
rclb
ficompl
push
inc
rcll
cmpl
and
stos
inc
addl
movsb
jb
nop
lret
subb
mov
sbb
ret
dec
mov
arpl
sbb
jmp
cwtl
pushf
imul
push
cmp
jbe
fsts
adc
or
insb
ljmp
mov
subl
push
cmpsb
stos
mov
lahf
cmp
adc
loop
aas
push
mov
xor
fiadds
cltd
test
push
ficoms
stos
sub
and
inc
add
xor
fs
and
sbb
cmc
addr16
inc
mov
pusha
cwtl
out
push
xor
push
leave
addl
scas
pop
mov
pusha
insb
and
int3
mov
in
mov
test
loopne
int3
test
fwait
mov
sub
ljmp
jo
mov
jmp
mov
test
gs
icebp
add
aas
xchg
mov
sub
mov
mov
cmp
mov
lea
sti
shlb
incl
push
nop
hlt
shlb
loope
mov
ds
jle
sbb
add
cmc
pop
add
and
or
pusha
mov
mov
jmp
aam
mov
fwait
cmp
fs
add
pop
jne
rolb
mul
push
addr16
in
push
dec
or
xchg
push
inc
cmp
lret
lea
pop
aaa
pop
ss
sar
roll
cs
int
push
pop
push
sbb
adc
mov
aam
mov
sub
cltd
and
mov
outsl
leave
addr16
cmp
mov
xor
mov
std
xchg
inc
xor
sbb
dec
cmp
stos
push
leave
pop
adc
test
outsl
insl
imul
sbb
arpl
mov
inc
pop
add
ljmp
mov
jb
adc
test
addb
xchg
xor
shll
popa
pop
sub
loope
push
scas
fs
pusha
stos
dec
or
mov
dec
ja
jo
or
leave
xorb
push
rclb
xchg
pop
lock
out
ljmp
xor
pop
loop
out
int3
mov
add
push
imul
fcoml
xchg
loope
sub
test
inc
icebp
pop
in
cmc
pushl
lea
xchg
dec
mov
js
fs
ds
sub
sub
mov
push
push
adc
je
jnp
lock
xchg
mov
cmp
loope
insb
inc
movsb
and
sahf
aas
ret
sub
cmp
std
ljmp
movsb
les
inc
ret
and
jp
mov
jo
lods
sub
inc
mov
sti
ret
and
dec
adc
or
in
mov
xor
testb
popa
inc
lock
xchg
xchg
mov
and
loope
aad
daa
mov
pop
xor
das
pop
or
pop
inc
inc
enter
inc
lock
cli
dec
fstpl
pminub
stos
dec
loop
xchg
fs
stc
cwtl
or
loopne
jnp
add
sbb
js
cld
push
jo
popf
xchg
push
mov
fs
and
pop
jle
dec
xor
shrl
mov
pop
inc
addr16
mov
fnsave
jnp
cmc
pop
jmp
mov
mov
fcoms
inc
popa
sub
ljmp
push
adc
and
xor
stc
push
sbb
cltd
lahf
aad
mov
mov
jmp
or
scas
fucomip
sub
scas
rcrl
inc
ljmp
cmc
add
xchg
push
jge
rcll
inc
dec
pop
stos
pop
cmp
mov
cmp
aad
enter
testb
pop
cmpsl
icebp
lcall
shrb
mov
jnp
add
mov
andl
pusha
jae
and
pop
fsts
push
inc
jle
xor
repnz
jo
dec
cltd
xchg
call
pop
add
lods
clc
sbb
push
mov
pop
cmp
jmp
sbb
mov
and
bswap
lahf
mov
bound
inc
dec
dec
or
cmp
dec
rclb
xor
xchg
lfs
dec
and
test
dec
pop
push
xlat
fbld
prefetch
lds
shl
xlat
aaa
dec
dec
push
sub
cmp
mov
jl
jge
lret
dec
test
adc
mov
pop
xor
and
push
aam
in
mov
jge
nop
enter
cwtl
mov
cmpsb
push
loopne
and
add
insb
xchg
or
imul
fimull
movsb
call
mov
and
cmpsl
adc
pushf
nop
fwait
loop
rolb
mov
or
sub
inc
lods
push
or
jo
call
hlt
shlb
fs
roll
mov
mov
pop
shl
mov
leave
xchg
jns
cli
push
mov
add
aas
adc
push
jmp
fwait
ljmp
negb
lods
int3
sbb
gs
cmp
out
adc
bt
fmuls
mov
cmp
xor
shr
or
cmp
insl
sub
xchg
xor
test
jb
popa
test
iret
add
daa
call
out
pop
negb
addl
hlt
mov
xchg
into
mov
aas
and
inc
add
in
pop
sbb
xchg
arpl
aaa
fidivrs
xor
add
outsb
dec
in
std
mov
sbb
sbb
inc
subl
fldl
or
addr16
stos
xor
dec
sub
jnp
fdivr
out
xor
mov
mov
loop
mov
sbbl
into
test
and
mov
aam
push
js
mov
and
test
mov
pop
and
adc
and
and
adc
imul
bound
sbb
arpl
add
add
cmp
dec
lcall
mov
ret
jo
jle
pusha
cld
or
xor
adc
and
test
pop
data16
add
dec
lock
call
xchg
shlb
std
sti
dec
mov
pop
pop
dec
inc
inc
loopne
movsl
aam
adc
sahf
sbb
rorb
push
mov
adc
icebp
jmp
push
mov
add
xchg
leave
popl
and
pop
adc
stos
adc
loopne
lea
lret
fwait
lea
adc
or
push
psubusw
cmovbe
cmp
bound
add
cmp
jecxz
scas
clc
and
fs
mulb
shrd
lret
inc
mov
arpl
fbstp
dec
jno
xchg
stos
ja
push
and
or
test
lock
push
sub
jb
roll
ljmp
xor
push
mov
and
insb
jae
xor
mov
enter
into
hlt
cmp
mov
pushf
imul
popa
lds
push
pop
inc
mov
js
sub
pop
movsl
mov
adc
sbb
mov
jle
mov
pop
lds
lods
cmp
stc
lret
adc
adc
shr
add
inc
push
in
shl
lds
add
or
mov
fisubrl
orb
dec
mov
push
push
jecxz
pop
mov
dec
mov
leave
cmp
xchg
sbb
mov
cmp
jle
or
inc
xor
add
and
add
leave
push
inc
xor
jle
pop
lock
cld
adc
repnz
subb
insb
xchg
dec
andb
push
mov
scas
add
sbb
cmpsl
jge
add
cwtl
lods
xchg
iret
mov
or
fmul
dec
aad
sbb
or
or
insb
daa
js
xchg
jl
push
arpl
inc
add
fildl
jl
cmp
sbb
cmp
fucomi
cs
and
ljmp
xor
dec
arpl
jmp
adc
push
jns
pop
pop
jmp
imul
sub
enter
lea
shrl
es
inc
in
xchg
xchg
pop
cmpsl
gs
add
js
cmc
and
lods
and
inc
inc
or
inc
fdiv
loope
inc
lds
push
cmpsb
and
dec
xchg
push
jno
and
dec
pop
mov
add
out
push
and
shlb
in
stos
imul
add
ja
inc
rolb
clc
fcmove
sub
adc
and
imul
out
fisubrl
and
idiv
ret
xor
loopne
push
or
cmp
or
aam
inc
nop
sbb
outsb
jo
int
add
inc
repz
dec
push
sbb
popa
and
pushf
add
push
xchg
jmp
cmp
out
iret
mov
lock
sarl
mov
and
ljmp
adc
stos
cmpsb
sbb
push
push
enter
sbb
dec
adc
in
cmp
call
fnsave
mov
popa
mov
lock
xchg
sub
inc
jle
and
insb
dec
mov
bound
sub
xor
adc
repz
adcb
dec
or
push
xchg
push
xchg
push
repz
pop
xchg
fwait
jae
and
pop
scas
sub
pop
sub
add
mov
test
mov
pop
stos
inc
lea
nop
mov
xchg
sbb
cmovnp
addr16
pop
fwait
stos
pop
sbb
cli
xor
xchg
dec
pop
push
add
cmp
movsl
rorb
mov
insb
cmpsl
cmp
push
inc
das
cld
mov
sub
testb
cmp
setae
cmpsb
mov
movsb
jge
not
insl
jge
xor
xchg
dec
xchg
in
xchg
inc
jle
pop
mov
push
xor
dec
mov
xor
add
bound
add
ret
add
insb
int3
in
out
add
scas
or
in
leave
pop
xor
je
inc
call
nop
jle
leave
jl
and
mov
cld
inc
outsb
psrad
or
adc
mov
lahf
int
repz
pop
xchg
xor
pusha
push
std
fs
push
mov
or
shl
sbb
or
fs
pop
aas
push
data16
or
xor
xor
inc
lods
into
and
adc
push
mov
mov
xchg
pop
and
push
mov
mov
out
xor
clc
dec
shrl
mov
jmp
push
insl
jnp
ficompl
mov
jge
mov
loope
dec
ss
and
cmp
mov
add
xchg
addr16
xlat
jl
inc
lahf
and
and
mov
jb
push
jae
push
call
mov
jmp
push
mov
fld
daa
sub
dec
and
outsl
sarb
lods
pop
mov
pop
mov
ljmp
push
adc
inc
and
dec
cmc
xor
mov
icebp
imul
and
push
pop
movsb
or
inc
mov
or
lahf
push
push
pop
adc
ret
adc
iret
repnz
and
hlt
mov
and
xchg
stc
add
std
nop
andb
sbb
js
mov
add
sub
and
push
mov
hlt
pusha
and
daa
push
mov
xor
cmc
xor
cmpsl
sub
adc
add
xor
stos
scas
adc
sbb
es
mov
mov
movsb
sbb
test
test
and
jne
cmpsb
leave
add
add
leave
aad
jns
mov
repnz
inc
fldl
pushf
das
sbb
mov
ljmp
jnp
js
and
inc
and
push
or
int
pop
data16
fwait
testb
daa
push
mov
fistl
movsl
es
ja
aaa
loope,pn
inc
sbb
jns
push
xchg
jl
nop
sub
xchg
xchg
andb
leave
data16
ss
mov
test
inc
out
dec
in
add
mov
inc
test
xchg
in
daa
pop
xchg
insb
adc
fs
mov
cmp
or
xchg
push
aam
lar
sub
and
add
and
lods
or
imul
or
sbb
lret
fsub
pop
mov
rcll
test
xor
das
test
or
mov
clc
stos
or
sub
or
jmp
cs
lds
add
mov
rcrl
enter
loop
movsl
ret
faddl
daa
and
mov
jnp
cmpsb
psubb
xor
insb
and
mov
add
aas
add
loopne
mov
subb
push
or
in
jbe
test
mov
sbb
dec
sbb
dec
fs
xor
rorl
daa
push
mov
pcmpeqd
out
enter
cmpsb
lcall
or
mov
xor
gs
pop
ret
xor
jbe
pop
repz
pushf
dec
cmp
lods
jb
test
fsubrl
sahf
lret
insl
mov
popa
dec
outsb
les
mov
mov
sub
loope
add
mov
sub
setl
cltd
sahf
in
and
dec
and
rol
out
repnz
cwtl
xor
adc
and
aam
cli
std
mov
adc
adc
xchg
movsb
pop
test
rorl
in
jmp
sub
xchg
in
addb
cmpsb
or
and
jl
aad
mov
xchg
aas
orb
dec
adc
mov
mov
mov
add
hlt
jb
or
sbb
stos
shl
mov
sbb
orb
xchg
or
dec
mov
repz
jp
push
mov
fiadds
shrb
xor
xor
jnp
mov
cmp
ret
mov
mov
push
xor
jge
mov
jl
mov
stos
inc
mov
dec
rcll
or
jecxz
addb
std
push
sbb
jnp
mov
sub
mov
or
loop
jns
and
test
dec
popa
adc
dec
xlat
push
push
inc
test
das
push
leave
sub
pushf
jmp
or
add
adc
ret
fadds
inc
xor
push
cmp
and
lods
adc
fs
cmc
rorb
adcb
add
and
push
pop
mov
cld
mov
clc
mov
push
cmpsb
call
sbb
sub
je
add
xchg
adc
or
fs
insb
cmp
and
insl
sbb
lret
enter
and
xor
scas
mov
adc
pop
add
les
sbb
pop
cwtl
adc
repnz
js
mov
xchg
dec
jno
loop
subb
icebp
push
mov
and
movsl
cld
push
dec
mov
les
repnz
popa
cmpsl
leave
aad
pushf
fs
rcl
es
inc
insl
mov
mov
stos
fidivl
and
pop
hlt
inc
iret
mov
lcall
rolb
inc
pop
nop
or
sbb
int3
xchg
pop
popf
out
out
loope
cld
sub
mov
xor
and
cmpsl
gs
inc
xchg
cmp
test
subb
push
hlt
adc
cmc
arpl
xchg
cmp
jns
sub
cmpsl
xchg
and
movsb
imul
mov
pop
push
std
inc
jle
scas
mov
mov
lea
cmp
xchg
push
enter
inc
mov
push
mov
shlb
in
out
mov
or
mov
aas
inc
hlt
sti
into
loopne
jmp
cltd
mov
and
scas
imul
and
fcomps
mov
lret
xor
mov
mov
or
hlt
dec
enter
addl
popa
outsl
jl
cmc
pop
lcall
pop
xchg
add
roll
mov
mov
or
daa
adc
inc
mov
sbb
cmp
pushf
lea
test
cli
cmp
adc
or
and
test
push
pmaxsw
cld
adc
jmp
add
xchg
push
jg
xor
inc
cmpb
push
into
cmp
ja
xor
es
bound
and
mov
adc
inc
sbb
or
pop
aaa
ret
mov
xchg
xchg
out
cmp
ror
das
and
xor
push
cs
xor
addr16
test
cmp
data16
hlt
or
mov
mov
addr16
stos
inc
mov
mov
pop
or
xor
xlat
jno
jb
xchg
shrb
pop
popl
mov
dec
mov
xor
shll
insb
mov
mov
jge
xlat
jbe
sahf
cmpsb
nop
sbbl
inc
cmp
and
movsl
pop
push
mov
test
inc
xor
popf
add
mov
pop
push
adc
jno
fdivr
data16
test
push
pop
daa
pinsrw
lods
pushf
daa
mov
mov
push
cvttps2pi
jb
cltd
rcrb
dec
lods
mov
mov
outsl
adc
xchg
xchg
inc
push
xor
mov
sub
out
add
cltd
call
lock
ljmp
pusha
out
sti
mov
and
mov
inc
jl
out
sub
adc
pop
xor
imul
nop
and
sub
fldcw
enter
jle
popa
and
aam
pop
xor
mov
mov
or
sub
inc
dec
in
fidivrl
clc
sbb
mov
andl
testb
inc
add
mov
and
add
das
push
dec
dec
jne
inc
and
pushw
insl
pop
lds
mov
inc
in
in
cmp
divb
jecxz
xor
stos
shll
sbb
fisttpll
lahf
jns
dec
loop
hlt
or
scas
imul
dec
leave
adc
inc
mov
cmpsl
jbe
pop
mov
nop
ljmp
xchg
sahf
mov
sub
sub
or
in
or
xchg
or
cmpsb
or
stos
add
sub
jl
pop
xor
or
inc
and
loope
pop
dec
aas
xchg
pop
das
adc
inc
jl
xorl
lock
and
mov
ljmp
or
sbb
xor
inc
inc
scas
or
movsb
cmp
inc
lret
out
pop
pop
fs
jl
adc
inc
js
mov
test
cmp
cmpl
test
jl
sub
push
xchg
mov
sbb
add
fidivl
or
pushf
daa
mov
xor
aad
stc
lahf
mov
mov
xor
cmpsb
lock
jno
add
daa
leave
cmp
mov
bound
arpl
pop
mov
or
xor
scas
iret
icebp
or
sub
iret
cmp
fsubrp
fldenv
or
loop
mov
lods
pop
pop
cmpb
cmpsb
sbbl
or
xchg
dec
jo
xchg
lahf
xchg
sahf
pop
xlat
and
mov
in
jp
mov
add
rcll
mov
and
fstpt
and
cmpsl
stos
and
push
adc
mov
inc
negl
vpaddd
imul
mov
loopne
mov
jns
dec
pop
inc
sub
aaa
imul
mov
bound
daa
sbb
les
sarl
aaa
fistps
aaa
inc
cmp
test
or
std
cltd
cmc
mov
and
add
mov
mov
jmp
fnstsw
popf
mov
and
sti
xchg
dec
mov
xor
mov
dec
sbb
pusha
cmp
jne
and
ja
add
adc
adc
dec
mov
jno
dec
sub
mov
xchg
enter
mov
aas
sub
lds
cmp
xchg
stos
mov
xchg
inc
rcrl
int3
dec
or
sbb
lahf
push
jg
pop
xor
pop
push
and
loop
mov
xchg
std
jge
pop
mov
sbb
push
test
sahf
adc
test
sub
rol
adc
sbb
fistps
loop
cli
lods
xor
pop
cwtl
scas
movsb
push
ljmp
test
inc
add
and
and
test
cs
and
push
insb
sbb
frstor
rolb
je
xor
mov
jle
popa
out
xchg
push
lcall
inc
sarl
test
pop
insl
and
lret
shl
push
out
dec
jmp
sbb
xor
sub
mov
hlt
movsb
push
movsb
in
jl
enter
fwait
push
scas
pop
or
ret
cmp
inc
sbb
js
inc
mov
arpl
data16
mov
or
cmpsb
jp
sahf
mov
es
shll
xchg
daa
in
xor
hlt
sbb
sub
ret
fiadds
mov
push
pop
sub
mov
or
out
mov
testb
sbb
mov
repnz
pop
add
lcall
data16
jb
or
inc
sbb
flds
jl
mov
xchg
push
add
mov
daa
add
outsl
pop
enter
std
inc
jmp
clc
cltd
inc
xchg
leave
jp
mov
push
das
lods
shl
xchg
arpl
pop
adc
add
cmp
rolb
aaa
inc
or
sbb
stc
clc
push
rol
pop
gs
add
call
push
je
int3
test
fwait
addb
and
adc
xchg
insb
push
dec
sbb
pop
xor
out
xchg
stc
aam
sub
dec
adc
test
sub
jo
cmp
inc
mov
andb
ljmp
jp
adc
ja
repz
add
inc
sarl
repnz
negl
dec
outsb
sub
mov
popa
or
arpl
jno
rcrl
mov
xchg
lret
add
push
cmc
pop
jbe
pop
cmp
inc
add
adc
sbb
adc
jmp
daa
push
pop
jb
repnz
sbb
and
xchg
cmp
cmp
dec
loop
rorb
mov
xorl
pop
test
rclb
fs
hlt
sbb
push
mov
cmc
or
pop
pop
callw
bound
adcl
jae
leave
orb
shll
insb
cvttps2pi
dec
cmpsb
push
jle
inc
push
adc
lods
lods
out
sar
pop
pop
cmp
cmp
push
jno
push
cmpsb
test
repz
mov
test
imul
push
pop
and
add
push
sbb
pop
lds
xchg
aas
shll
pop
or
xchg
ret
or
call
icebp
test
inc
stos
stos
shlb
test
call
mov
lock
call
xlat
ret
shr
stc
adc
shlb
mov
out
adc
sahf
pop
add
push
or
add
or
es
pop
rcrl
dec
mov
or
mov
push
mov
fs
not
mov
xchg
sub
stc
adc
push
fisttpll
rcll
push
or
testb
cli
mov
and
pushl
pushf
lods
sub
shr
mov
sub
fistl
sbb
jno
bound
bound
or
adc
out
lahf
ljmp
test
or
into
push
loope,pn
push
add
or
pusha
jnp
fs
add
fcomps
data16
insb
inc
push
arpl
loop
adc
test
and
pop
dec
fisubs
add
popa
cmp
adc
ret
mov
popf
je
jl
bound
mov
subb
pusha
or
mov
jl
pop
lahf
pop
jl
and
outsb
stc
mov
and
lcall
fs
xchg
sbb
add
sub
xchg
ret
cwtl
mov
cs
jnp
xchg
enter
lahf
fcmovnb
xor
fld
rolb
imul
cmpsl
adc
add
mov
adc
xchg
pop
popa
arpl
or
scas
jns
push
mov
cmc
orl
flds
adc
and
outsb
les
cmpsb
jle
dec
fstpl
clc
data16
mov
stos
mov
mov
or
stos
filds
repnz
das
jle
or
sub
adcl
and
ds
xor
or
dec
mov
add
nop
sahf
xor
pop
or
or
loopne
mov
rorl
adc
subb
lods
shlb
xor
ret
stos
int
xor
or
xchg
movsb
cwtl
rcrl
mov
mov
daa
cmc
xor
adc
movsb
mov
jo
add
lock
enter
pop
lret
dec
or
sub
rol
cmp
or
clc
xor
fistpll
out
xchg
xor
jo
adc
sbb
adc
mov
push
in
sbb
je
push
mov
jb
cmp
sbb
and
and
jle
cmp
inc
or
or
repz
adc
popa
cmc
dec
lods
fnsave
call
or
aam
movsb
mov
sbb
pusha
mov
jns
lods
xor
fwait
mov
cmpsb
cltd
jg
xchg
and
dec
add
adc
cmp
inc
in
or
xchg
dec
push
or
push
pusha
push
test
mov
push
jmp
inc
rorl
sbb
clc
push
add
jo
push
cmp
aad
pop
lods
push
ret
or
pop
pop
push
lds
out
ret
ficomps
inc
xchg
ret
sub
cmp
cmp
xor
add
push
mov
or
xor
add
fildl
test
rcll
inc
mov
sarb
je
inc
pop
dec
clc
mov
mov
mov
mov
push
inc
pop
test
ds
movsl
xchg
adc
pop
ljmp
adc
mov
xchg
mov
cmpsb
cmc
adc
dec
imul
outsb
xchg
add
sub
xchg
je
aas
shll
push
xchg
clc
and
xchg
and
mov
jle
and
adc
imul
pop
add
test
or
cmp
mov
arpl
rol
sbb
ficomps
jnp
divb
or
test
adc
cmp
sub
dec
jg
mov
push
adc
outsb
fs
xchg
push
jg
push
lea
and
fwait
mov
sbb
mov
dec
imul
dec
add
add
int
or
xchg
sti
mov
dec
pop
cmp
dec
cmpsb
in
xor
adc
js
adc
mov
add
loope
fwait
mov
int3
cld
or
sahf
clc
mov
je
add
popa
mov
jmp
nop
or
into
inc
loop
mov
mov
repnz
sbb
fadd
stos
cmp
pop
imul
and
pusha
rorb
repz
pop
jbe
mov
adcb
inc
shlb
jo
add
push
ret
daa
push
movsl
sub
jb
cli
sbb
cmc
jmp
sbb
fwait
jmp
das
xchg
mov
sbb
pop
or
xor
pop
incb
cmpsl
popa
popaw
adcb
mov
ds
rcrl
into
mov
mov
sbb
dec
or
inc
mov
add
xor
fdivr
int3
push
std
std
or
sub
push
subb
push
ret
jmp
out
push
cltd
mov
pop
aas
lods
push
push
dec
xor
pop
push
cmp
jle
inc
xchg
flds
xchg
jb
push
mov
stos
js
fcomi
mov
cli
xor
js
in
mov
jnp
mov
and
iret
repnz
pop
add
das
and
sti
mov
mov
adc
ljmp
mov
stos
icebp
shrb
in
shlb
lds
andl
or
mov
in
fmul
wbinvd
mov
test
subl
jns
decb
mov
xchg
cltd
sub
push
scas
mov
adc
sbb
mov
xchg
jae
test
cmp
js
xor
into
mov
mov
adc
mov
faddl
cwtl
push
inc
mov
push
cltd
icebp
fisubrl
pushf
sbb
sub
hlt
jge
xchg
mov
repz
inc
xchg
jno
or
or
cs
inc
xchg
mov
test
mov
dec
adc
sub
add
data16
sarb
pusha
inc
out
iret
and
mov
fsubs
shrl
add
repnz
or
adc
jmp
loopne
pushf
nop
call
dec
sbb
loop,pt
nop
loopne
cmp
jae
cs
shll
or
stos
inc
push
pop
mov
cmp
xchg
add
imul
mov
inc
hlt
xchg
ja
daa
xor
out
jnp
arpl
out
xor
aaa
cltd
sbb
pop
cltd
and
add
inc
es
aam
push
xor
sbb
jmp
mov
pop
enter
imul
addr16
ret
push
in
jo
add
dec
pop
adc
dec
test
fwait
push
push
insb
clc
inc
or
popf
pop
dec
leave
andl
push
sbb
xchg
andb
cli
or
hlt
cwtl
test
or
fwait
cmpb
jp
and
sbb
xchg
testl
add
mov
es
xlat
push
or
dec
out
mov
hlt
cmp
loop
insl
dec
fisttpll
icebp
adc
popa
mov
mov
data16
dec
and
jns
add
pop
iret
out
xchg
cld
test
and
adc
mov
cld
xor
cmp
jmp
rcrl
stos
or
xor
mov
sbb
mov
push
fcmovnb
stos
mov
pusha
pop
sbb
scas
xor
add
pusha
xlat
mov
scas
jmp
xchg
aam
xchg
xchg
mov
or
mov
jp
nop
cmp
jb
mov
outsl
ret
popa
pop
xor
mov
hlt
adc
and
repz
inc
or
sbb
inc
in
test
xchg
jl
and
in
and
mov
dec
out
push
add
jp
add
js
jne
ja
in
mov
add
pop
inc
lahf
mov
lods
pop
and
ds
cmp
pop
cli
adc
jp
fs
add
ja
or
in
add
xor
test
adc
movsl
leave
mov
inc
inc
push
fwait
lret
mov
xchg
sub
sub
enter
es
popf
test
adc
ret
xor
fmul
push
xor
repnz
or
lods
fldl
mov
fcompl
inc
sbb
dec
lahf
push
push
enter
iret
jecxz
jl
or
dec
sub
pop
lods
pop
mov
sbb
xchg
cmp
js
inc
sahf
popf
sub
pop
popf
add
lret
dec
rcll
aad
or
test
mov
mov
mov
and
stos
adc
pop
scas
js
sti
adc
push
sub
les
dec
sbb
test
pop
cmp
and
mov
xor
add
or
jl
xchg
xor
jo
fstpl
mov
mov
inc
rorb
shlb
xchg
les
inc
jecxz
pop
inc
jb
push
pop
push
add
fcomps
xor
js
inc
and
inc
jle
push
xor
jns
push
scas
fildl
in
add
push
jp
or
sahf
push
xchg
pop
add
mov
ret
loopne
inc
and
jecxz
js
inc
mov
lret
rorb
sub
lds
xchg
adc
clc
sub
mov
pop
xchg
dec
dec
xor
iret
mov
mov
clc
sub
push
push
xchg
add
push
jmp
add
adc
in
mov
hlt
pop
arpl
sub
out
fcomi
mov
shll
inc
cmpsl
insl
pop
cmc
leave
fildll
pop
test
pop
mov
pop
jnp
xchg
into
push
sub
dec
push
xorl
fnstcw
xor
aad
sbb
mov
add
cltd
mov
rcrl
test
sbb
mov
mov
push
stc
sbbb
ret
push
dec
jnp
inc
call
rclb
mov
out
lock
ja
insb
enter
jp
inc
xchg
jl
dec
jno
push
cmp
iret
adc
aam
push
movsl
sub
cld
pop
ficoml
inc
inc
movsb
loopne
inc
and
repz
loopne
add
mov
in
negl
es
stos
lret
fdivl
cld
es
push
test
test
dec
or
push
pusha
sub
test
ljmp
cld
aam
repnz
out
inc
aad
les
add
lods
sarb
sbb
xchg
pop
push
popf
sub
push
loope
jle
imul
insb
dec
mov
fnstenv
mov
xor
das
inc
jb
pop
mov
add
sbb
sbb
sbb
fwait
pushf
mov
mov
adc
xor
loope
xor
mov
ror
loop
ret
sub
inc
cs
pop
or
nop
jno
add
mov
ret
andb
sbb
jno
mov
add
push
pushf
call
jle
inc
je
inc
inc
or
cmp
f2xm1
rorb
ret
xor
cltd
pop
xchg
dec
ret
push
xchg
jae
jl
xchg
pop
jns
shlb
test
mov
xchg
jl
cwtl
inc
bound
loopne
push
xchg
rorl
push
sub
dec
cwtl
cmp
push
rcrb
xchg
scas
shll
shlb
pop
jnp
fstp
data16
out
sbb
xchg
js
fcmovu
xlat
push
popf
xchg
cmpsb
mov
mov
adc
pop
shrb
repnz
pop
sti
clc
dec
jo
or
fistpll
aam
adcl
push
clc
or
jb
jns
lock
aaa
loopne
xchg
fsubrs
dec
test
loopne
jno
outsb
mov
test
dec
divb
test
cmp
aaa
pop
enter
adc
xor
adc
pop
xchg
mov
and
mov
cmp
jns
dec
jb
inc
fldl
cmp
shr
mov
inc
or
xchg
inc
in
ret
push
add
pop
shlb
pop
sub
fdivr
mov
xor
or
cwtl
sbb
test
stos
test
or
xor
or
loope
or
cwtl
dec
idivb
mov
cmp
mov
push
mov
lea
add
jo
fwait
dec
jo
lea
jae
sub
mov
dec
mov
or
sbb
and
sbb
pop
xor
or
dec
or
xchg
adc
subl
andb
jno
insb
mov
out
call
sbb
lret
and
xor
test
out
daa
insl
inc
xchg
inc
insl
or
dec
pop
lret
or
lea
xchg
lds
sub
sbb
leave
lea
xor
dec
fadds
clc
mov
inc
mov
xchg
mov
sbb
and
and
les
add
sbb
and
inc
mov
popa
xchg
push
xchg
fldt
cmpsb
movsl
insb
bound
sbb
bound
xchg
push
in
dec
idivb
pusha
mov
imul
inc
imul
icebp
xor
mov
jge
mov
jbe
adc
add
jecxz
into
test
mov
xchg
lret
shlb
jns
jecxz
enter
ljmp
pop
xor
push
sub
mov
adc
inc
call
movsb
inc
sub
hlt
adcl
jmp
xorb
xchg
data16
pop
aaa
jne
lret
pop
in
rcrb
scas
xorb
fwait
push
jg
push
movsb
leave
mov
dec
sbb
or
lahf
xor
test
adc
sbb
jl
stos
xor
or
inc
fists
mov
pop
cmp
cmp
movsb
insb
cli
xchg
fiaddl
mov
adc
sahf
dec
loopne
mov
mov
push
cmp
and
ja
popa
mov
inc
test
sbb
fidivrs
mov
dec
adc
lods
out
or
dec
hlt
int
js
jmp
inc
lock
cmpb
jmp
es
clc
inc
outsb
dec
int3
es
stos
stos
adcl
inc
cltd
jno
mov
and
jp
pop
incb
cmp
loop
jo
xor
mov
sub
or
mov
fs
sbb
in
leave
out
xor
cmpsb
push
sbb
mov
sub
iret
subb
int3
push
jbe
dec
imul
cmc
pushf
and
sub
push
jle
popl
subl
movsb
or
repz
sbb
lds
iret
push
es
mov
dec
aaa
pop
fidivrl
aas
mov
dec
rcrl
in
add
sbb
fwait
xchg
sub
inc
ja
arpl
lret
int
push
dec
insl
and
adc
leave
sub
mov
mov
andl
call
mov
or
jbe
and
rcl
xor
add
adc
sub
mov
sti
adc
sbb
cli
sbb
or
dec
add
or
sti
not
and
stc
sbb
xor
ss
fisubs
pop
adc
outsb
mov
fsubs
notb
xchg
je
js
out
adcb
sbb
mov
je
adc
push
mov
das
lds
nop
stos
in
orl
or
push
sub
xor
ficompl
and
rolb
call
ljmp
jg
xor
or
mov
cmpsl
inc
rcl
ret
adc
rclb
fildll
iret
scas
mov
jno
adc
mov
mov
mov
ds
inc
das
adc
jmp
xchg
hlt
add
mov
add
or
mov
mov
loop
les
or
loope
les
in
xchg
xchg
or
sbb
sahf
shl
sub
in
push
pop
inc
mov
mov
daa
dec
jno
rcll
into
fmull
sub
cltd
jle
xchg
mov
mov
or
out
xchg
std
push
sbb
test
push
mov
in
leave
sub
pop
jbe
mov
daa
and
jne
loope
fwait
or
xlat
xor
ret
insl
icebp
mov
stc
orl
nop
xchg
or
mov
and
cli
or
pushf
mov
stc
mov
mov
push
sub
js
jmp
adc
pusha
stc
and
notb
sbbb
lock
jns
push
jl
add
lods
movsb
hlt
and
loope
cmp
pop
jbe
test
push
or
sub
push
adc
arpl
call
sub
test
mov
ss
lea
inc
mov
jp
jmp
imul
push
pop
pop
loope
adc
scas
xor
mov
push
lds
dec
mov
in
xchg
in
and
adc
mov
sbb
mov
stos
pusha
test
loopne
pop
nop
data16
addb
movb
push
push
and
stos
xor
int
test
mov
mov
das
xchg
test
inc
add
les
std
push
aam
push
push
rolb
push
xor
dec
lea
xor
rol
jb
dec
test
rorl
sbb
mov
imul
fs
cld
lret
cmp
inc
xchg
xor
mov
into
jmp
sbb
push
pop
mov
cmp
data16
movsb
orb
and
inc
xchg
sbb
inc
xchg
and
sub
push
xor
or
jp
pop
fstpl
fsubs
js
popf
mov
push
je
push
cmp
daa
pop
mov
or
jl
ja
add
popa
stos
stc
pop
or
enter
mov
mov
jl
fiadds
sub
mov
test
push
int
into
xor
mov
sbb
mov
push
or
pop
xor
loopne
aam
or
imul
fs
push
js
lret
and
arpl
repnz
jl
mov
cmp
adc
lcall
ss
movl
mov
push
mov
mov
inc
mov
mov
xchg
sbb
push
out
xor
xchg
mov
cmpsl
shlb
sbb
push
adc
pop
inc
nop
sub
gs
popf
das
icebp
xor
loop
xor
push
lahf
inc
adc
mov
rcrb
pop
push
insb
js
push
xor
adc
clc
popf
lcall
mov
mov
add
imul
mov
xor
dec
lea
rcl
pop
push
test
nop
ret
js
cmp
repnz
ds
sti
in
cmpsl
adc
sub
fstpt
sbb
lcall
fisttpl
or
add
pop
inc
pop
mov
inc
mov
mov
sbbl
or
stc
and
mov
cmp
aad
ds
cmp
nop
mul
cmpsb
inc
pusha
add
aad
ss
sub
fidivl
dec
jnp
enter
lock
xor
and
and
push
call
xchg
test
inc
shl
sbb
push
stc
push
xchg
sbb
add
jmp
inc
lock
jmp
dec
mov
je
daa
in
push
adc
adc
adc
push
leave
aas
and
inc
dec
cmpsl
fcmovne
jmp
mov
sub
pushl
insl
pusha
add
inc
test
or
xchg
shrb
push
xor
add
dec
cmc
shlb
imul
mov
pop
jo
fcom
inc
cmp
dec
jmp
sub
add
inc
adc
insb
push
mov
cltd
pop
pop
ljmp
and
in
loop
stos
jmp
cld
mov
sbb
sbb
out
or
cmpl
sbb
or
emms
ret
ret
fcoms
jecxz
shll
adc
cs
and
popa
cmp
das
lahf
aad
or
xor
aad
mov
or
dec
ret
pop
lea
xor
adc
nop
add
insl
push
xor
into
repz
cmc
sbb
xor
add
sbb
movsb
and
push
pop
aas
mov
ss
inc
xor
ds
dec
inc
push
lock
push
mov
rcrl
popf
jmp
js
pop
and
mov
mov
sub
rolb
sbb
or
inc
and
add
xor
adc
fistps
jne
or
jle
add
je
dec
sbb
pop
add
in
adc
popa
cld
add
jecxz
sub
mov
jne
pop
rolb
and
or
test
xor
and
and
mov
xchg
test
scas
sti
clc
or
mov
sub
or
inc
cmp
or
bound
and
addps
mov
dec
repnz
mov
aam
or
ljmp
xchg
rcrb
fwait
repz
nop
outsl
add
dec
cld
jecxz
cmp
out
outsl
cmp
orb
jg
sbb
pop
ljmp
loop
js
incl
sbb
fisubrl
dec
stos
mov
jl
movsl
out
dec
jl
sar
jle
push
addb
sbb
sahf
addl
add
mov
and
add
aas
sahf
inc
cli
and
push
push
int3
loopne
sub
hlt
and
cmp
add
jnp
push
push
ljmp
inc
sub
adc
pushl
jno
add
sti
stos
hlt
push
jp
icebp
add
pushf
mov
lods
dec
pop
push
cmp
loope
jp
inc
pushf
and
icebp
mov
aad
push
out
sarl
xchg
roll
mov
neg
xchg
pop
sub
jge
sbb
and
sar
and
out
sub
sbb
jl
adc
xchg
mov
out
test
mov
scas
jb
loope
mov
add
sbb
adc
sysenter
ret
bnd
push
push
cmpsb
sti
out
xor
add
pop
lods
leave
cmp
sub
cmp
mov
fldl
xor
lods
ja
mov
push
enter
int
add
add
adc
and
push
mov
icebp
mov
fiadds
gs
and
mov
xorb
es
jle
ljmp
pop
or
repnz
mov
cmpsb
pop
ljmp
popf
pop
imul
andl
sbb
in
adc
or
loopne
scas
add
inc
es
mov
loop
je
add
cmp
pusha
jne,pt
pop
repnz
and
sub
jae
push
in
add
mov
jb
pusha
fistl
fbld
clc
cwtl
mov
movsb
mov
cld
xchg
adc
mov
jmp
or
push
xor
mov
sbb
ret
daa
sub
jns
mov
xchg
sbb
out
and
xchg
push
cwtl
push
pop
fimull
xlat
xor
adc
lahf
into
mov
cmp
sbb
je
jae
jmp
and
xchg
pop
mov
or
or
test
cmp
into
mov
fdiv
cmc
inc
cmp
xor
insl
pushf
xchg
sbb
adc
out
cmp
movsb
sbb
outsl
adc
aaa
mov
pop
dec
enter
mov
ret
cmpsb
ficoml
arpl
neg
and
into
add
outsl
jo
dec
movsl
add
dec
lds
xor
push
push
dec
sahf
or
mov
xchg
shl
mov
or
dec
icebp
inc
mov
std
lret
jecxz
std
insb
lds
dec
jle
lcall
and
aam
loop
pop
repnz
dec
int3
ret
out
pop
bound
dec
cmpb
jl
push
or
addl
int
gs
inc
fwait
ja
and
nop
outsl
and
inc
bound
push
xchg
sbb
xchg
lods
test
dec
fsubl
repnz
andb
pop
cmpb
addb
addb
adc
dec
stc
pop
mov
mov
inc
enter
xchg
cs
incb
hlt
shrb
mov
jbe
and
ds
popa
je
fcmovnb
fwait
out
ljmp
sbb
lds
dec
mov
stos
cmpsl
mov
adc
sub
js
or
mov
mov
pop
jne
push
out
mov
dec
mov
loopne
dec
xor
sbb
push
mov
fdivrp
push
add
js
jno
sbb
dec
ss
popl
cmp
add
jp
adc
out
andl
add
outsb
jmp
push
or
and
testb
jno
inc
fistps
inc
test
inc
xor
sbbb
out
pop
push
or
mov
push
pop
sbb
outsl
cmp
xor
in
mov
pop
jmp
xchg
rcl
cmpsb
mov
imul
js
inc
or
push
mov
mov
jae
sub
insb
sub
mov
jg
xorb
or
stos
test
jns
fadds
popf
lret
push
shlb
lcall
lahf
sbb
dec
test
dec
add
js
and
jg
jno
popf
cmpsb
cld
adc
adc
repnz
cwtl
jns
dec
or
pop
or
xchg
or
jo
add
int
push
mov
fimull
push
popa
incb
lods
loopne
aam
pop
sbb
ja
pop
insb
fcmovne
cli
xchg
push
lds
popf
rcll
subl
test
pusha
stc
inc
mov
out
dec
jmp
je
mov
loopne
aas
add
lahf
std
fdivrs
lods
cwtl
roll
in
inc
sbb
and
shlb
popf
addl
pop
push
ljmp
mov
nop
jae
test
jns
cmpsl
lea
mov
adc
or
inc
sub
add
in
int3
dec
adcb
daa
addb
mov
mov
add
cli
xchg
dec
cmp
leave
stos
push
mov
jl
sbb
adc
pushf
xlat
fisttpll
je
dec
movsl
or
ja
mov
adc
xor
pop
cmp
in
movl
jo
fs
ja
jbe
jl
push
hlt
add
sbb
test
in
das
cld
rorl
xchg
pop
or
add
dec
call
mov
mov
push
pop
test
mov
popa
ret
sub
pop
pop
pop
push
and
and
stos
inc
sbb
mov
jmp
mov
mov
cmc
pop
and
push
and
lods
push
dec
enter
lcall
cmp
sahf
add
mov
outsl
or
test
testl
pop
inc
out
int3
xchg
sbb
in
adcl
xlat
test
cli
push
insb
add
sbb
cmovnp
aas
icebp
rclb
rolb
jns
fwait
in
div
repz
jno
mov
mov
mov
jne
shlb
rol
sub
push
lds
cwtl
push
test
lret
imul
mov
mov
xchg
cmp
and
lods
cmp
push
xor
cmc
adc
sub
adc
dec
test
inc
add
cli
mov
push
inc
dec
movsl
sbb
push
fcompl
fdivl
nop
sbbl
jmp
dec
adc
mov
mov
xchg
push
loop
pop
rcr
push
sbb
push
mov
out
rcrb
lret
movsb
rorl
xchg
push
jmp
pop
fsubs
sub
loopne
insl
add
xlat
ficoms
test
adc
lock
add
or
loopne
stos
adc
mov
pop
push
mov
jb
mov
mov
in
push
adc
lock
enter
dec
mov
out
in
mov
fsubrl
pop
mov
dec
pop
insl
faddl
punpckhdq
jb
lcall
les
and
cmp
insl
mov
je
js
fdivr
daa
lods
loop
jne
xchg
inc
mov
sbb
jmp
loop
cmp
out
xor
mov
lock
fsubrs
mov
popa
aas
icebp
jge
int3
stos
ret
and
test
sub
shrb
lods
or
cmp
call
adc
add
inc
stos
inc
jl
insl
aaa
adc
je
icebp
cmp
fdecstp
push
jecxz
insb
dec
sbb
sbb
rorl
pop
daa
push
push
add
adc
rclb
clc
inc
out
loope
inc
data16
das
cmp
adc
test
scas
loopne
scas
ds
xchg
jge
mov
xchg
adc
pop
dec
and
add
adc
clc
push
and
call
mov
dec
push
xchg
dec
mov
outsl
and
cwtl
jmp
cld
test
and
stos
sbb
fs
test
cmp
cmp
cmpsb
pop
jg
in
sbb
adc
mov
jae
add
push
test
pop
or
sarb
lea
jl
into
js
ret
adc
and
dec
cmp
daa
pop
daa
test
rorl
dec
and
nop
loopne
cltd
pop
aam
ret
loope
clc
cmp
ret
rcrl
enter
add
loope
xor
ret
and
dec
stos
and
fldl
outsb
or
movsl
xor
add
pop
mov
mov
data16
xor
mov
rol
out
lods
sub
sbb
xchg
push
push
jae
enter
sub
or
dec
data16
jl
mov
inc
jne
cmp
loopne
fbstp
out
pusha
push
jge
push
sub
ret
push
xchg
sar
cmp
push
ret
adc
ss
push
and
lret
dec
in
dec
bound
pop
mov
out
and
push
mov
adc
pop
lret
scas
shrb
rolb
aas
jbe
and
pop
test
pop
add
fs
add
xor
and
mov
xchg
iret
inc
add
sbb
cvtpi2ps
and
mov
test
push
push
repnz
or
mov
mov
lds
sub
or
and
and
cs
add
mov
out
or
popa
push
js
inc
xlat
les
shll
dec
pop
mov
sahf
test
cmp
xchg
or
call
mov
je
in
cmp
mov
daa
pop
add
sub
sub
adc
mov
push
and
xor
sub
jmp
mov
mov
push
cmpsb
sbb
loope
jb
leave
push
mov
sub
inc
cmp
stos
push
daa
icebp
cwtl
pop
ret
out
out
lret
inc
icebp
fldt
pop
mov
inc
aas
pop
outsl
aad
fldl
and
fnstsw
ja
ret
adc
inc
mov
dec
or
mov
fs
inc
stos
std
filds
sub
mov
inc
sbb
or
cmp
imul
test
jo
gs
dec
or
ret
popf
push
xchg
mov
bound
xchg
hlt
jp
or
mov
les
mov
stc
loopne
test
dec
outsb
sub
xor
xor
loopne
js
and
fdivl
inc
pop
lds
es
mov
mov
xchg
xchg
push
cwtl
sbb
jp
cltd
ficompl
sbb
jnp
mov
js
es
adc
pop
pop
inc
inc
daa
sbb
ret
add
mov
inc
jp
loope
mov
lock
ds
sbb
cs
gs
inc
inc
pushf
lods
xor
pop
in
xor
lods
xchg
adc
jge
mov
rcll
orb
imul
cmp
lret
jns
call
adc
ret
mov
test
aad
lret
rcl
loopne
add
add
bound
outsb
arpl
sbb
fs
or
cmp
lahf
pop
fldt
jb
mov
add
cmp
dec
xchg
mov
add
repnz
dec
aas
dec
icebp
lds
and
sub
leave
mov
mov
shll
mov
mov
adc
push
in
aad
icebp
imul
test
in
loope
test
adc
cs
ret
sub
and
mov
dec
inc
loop
mov
xchg
push
ret
test
add
and
inc
mov
and
inc
test
test
mov
je
inc
pop
scas
jns
js
test
call
test
or
ds
pop
movb
mov
xor
mov
push
jmp
subb
adc
shll
jbe
or
insb
bound
mov
add
push
loope
pusha
and
aas
adc
push
fsubs
enter
push
ret
int
add
cmp
mov
lahf
xchg
mov
and
and
mov
xchg
inc
adc
or
xchg
leave
xchg
mov
je
inc
dec
jle
cmpsb
loop
outsb
jecxz
rcll
push
adc
and
cltd
int
popf
add
xchg
lret
cmp
adc
add
mov
inc
fidivrs
jecxz
adc
sbb
mov
or
lods
jecxz
cmc
mov
xor
imul
sbb
stos
mov
scas
fisubrs
adc
dec
cli
cmp
and
repz
mov
stc
mov
mull
xorb
add
insb
roll
jg
xor
mov
cmp
and
loop
inc
sbbl
dec
cmp
inc
push
jne
ljmp
inc
ficoms
or
test
jecxz
scas
cmpsb
in
or
sub
fmull
cs
and
lods
dec
aam
jo
add
andb
imul
dec
popf
lock
push
add
adc
movsb
bound
xor
and
xchg
ss
sti
sarb
outsb
jo
pop
lds
lds
in
insb
adc
xchg
inc
mov
inc
test
call
sarl
dec
loopne
push
inc
jbe
inc
scas
movsl
dec
and
xchg
xor
or
dec
call
ja
mov
add
addl
xor
inc
and
cmp
lock
les
mov
jns
jmp
call
cmp
pop
jne
mov
es
sbb
call
aas
mov
testb
xorl
fcmovnbe
pushf
ret
sub
movsb
faddl
mov
sbb
and
xchg
mov
scas
insb
call
cmp
sub
pop
push
std
js
mov
mov
cwtl
rolb
stc
pusha
cmpsl
mov
roll
loope
shll
sbb
les
call
hlt
add
add
push
xchg
xchg
add
jl
in
jmp
sbb
aas
scas
mov
popa
ret
aaa
adc
sub
lret
mov
inc
add
or
adc
ret
ds
pop
out
push
push
sbb
mov
dec
das
adc
out
sbb
shll
cwtl
pop
cwtl
js
add
fcmovne
pop
pop
data16
js
pop
repnz
test
mov
enter
dec
ljmp
test
enter
into
rcrl
call
fnstsw
mov
xchg
xor
test
xor
aaa
int
mov
pop
push
cmpsl
adc
adc
dec
jnp
imul
aas
stos
mov
dec
xlat
int
jo
movsl
mov
jmp
cmp
lods
push
fs
pushf
lcall
aas
mov
add
adc
add
dec
andl
in
inc
cld
repz
push
mov
xor
cmp
pop
xchg
arpl
rcr
xor
lock
popa
sbb
add
mov
in
push
adc
test
push
xchg
cs
cmp
js
pop
or
push
jmp
add
push
cwtl
adc
pop
jbe
inc
mov
aad
sub
outsl
xor
push
cmpsb
add
or
mov
or
fwait
scas
data16
push
or
cmp
nop
cld
push
pop
cmp
ret
mov
and
jno
fimuls
sbb
je
or
arpl
in
pop
jecxz
dec
lock
fistpl
mov
xor
pop
lods
andb
dec
movsb
dec
ljmp
mov
pop
mov
std
loop
testb
mov
nop
addr16
icebp
dec
pop
dec
xchg
addr16
js
leave
add
jns
adc
in
xchg
xchg
jg
sahf
add
or
test
sub
popf
pop
cmp
lds
jp
push
divl
popa
leave
mov
or
fstpl
and
or
sbb
sbb
and
dec
jb
cltd
adc
push
or
mov
pop
lahf
into
pop
pop
cmp
sub
mov
dec
iret
outsl
xor
mov
jo
push
sbb
outsl
loopne
int
sub
push
out
lret
inc
and
andb
adc
cli
in
lcall
or
cmp
xchg
pop
cmp
imul
jg
cmp
cmpsb
push
int3
cmp
shll
and
mov
inc
fbstp
push
push
push
add
lcall
sbb
call
cvtpd2ps
movsb
iret
js
imul
out
notl
stc
mov
add
jno
xor
and
and
leave
stos
inc
sahf
icebp
pop
pop
rolb
aad
sub
fcomp
dec
pop
or
lcall
pusha
repz
or
fnstenv
fxch
ror
sbb
xchg
sbb
lcall
mov
sahf
insb
and
jge
aas
mov
and
dec
fdivs
sub
and
xor
nop
xor
lcall
mov
movsl
lds
ljmp
adc
adc
loop
call
mov
sbb
es
or
sbb
sub
leave
call
add
jp
mov
sub
test
mov
lods
pusha
hlt
pop
pop
nop
xchg
mov
out
pop
idivb
dec
xor
and
nop
dec
icebp
jmp
xchg
imull
in
pop
and
adc
loopne
cmpsb
push
cmp
test
addr16
cltd
xchg
add
xchg
aas
call
inc
and
xchg
loopne
push
dec
pusha
push
inc
xchg
icebp
jae
add
mov
add
repnz
jo
jge
shufps
xor
inc
test
jae
mov
data16
cmp
push
ret
sbb
or
fdivl
imul
xor
mov
in
lods
mov
mov
inc
mov
dec
dec
bound
nop
lock
clc
jl
call
hlt
or
push
xchg
jns
pushf
jo
daa
xchg
movsb
push
popa
mov
out
popf
sbb
inc
mov
pop
dec
mov
add
and
addr16
mov
mov
push
dec
jl
icebp
sti
enter
or
pop
repnz
pushf
xchg
cmp
subb
add
fcomp
inc
mov
subl
lods
dec
out
pop
push
shll
pop
lods
int
ja
fwait
arpl
lret
add
add
mov
jb
cs
dec
or
lds
cmpsl
cmpsb
mov
movsb
clc
and
jo
or
and
lahf
mov
xchg
dec
adc
cmp
inc
or
aad
adc
jno
dec
mov
leave
outsb
movb
cmc
add
dec
sub
popf
loop
aam
and
push
in
sub
dec
sar
xorb
shrl
push
sub
and
sbb
aad
pop
pop
mov
lahf
icebp
int
jne
das
je
add
sbb
xor
ret
mov
dec
sub
sar
icebp
or
add
movsb
iret
adc
cmp
and
sbb
nop
mov
add
aam
enter
jnp
or
sbb
inc
sbb
pop
mov
push
xor
test
adc
and
sbb
mov
push
shrl
mov
or
add
add
mov
scas
xlat
cmp
popa
hlt
rcll
cmp
scas
aam
mov
or
mov
aam
test
adc
out
and
addr16
insb
mov
mov
mov
pop
add
testl
hlt
mov
cli
inc
or
mov
enter
sub
cmp
jno
lret
push
cmc
add
push
sub
jae
xor
bound
mov
and
cmp
xchg
es
arpl
int3
push
and
push
mov
xlat
std
push
sbb
inc
add
sbb
lahf
insl
sub
mov
shl
xor
push
inc
lods
or
and
loopne
push
shll
adc
xchg
jmp
xor
xor
jle
test
or
or
nop
mov
dec
js
in
outsb
mov
ror
mov
mov
adc
jno
push
jo
and
sbb
out
mov
mov
mov
daa
lds
adc
movsb
pop
cmpsl
mov
xor
push
inc
in
sub
and
jno
pop
or
cmp
sti
rolb
punpcklwd
fcmove
fildll
adc
mov
jle
sub
frstor
push
mov
push
pop
jae
mov
hlt
dec
mov
mov
dec
cmp
jnp
ds
les
cltd
cmp
in
mov
mov
lcall
mov
sub
mov
les
mov
sbb
fdivr
or
dec
enter
cmpsb
mov
mov
adc
sub
mov
cmc
jbe
clc
jmp
pop
mov
mov
pop
push
aaa
mull
inc
ss
fcoml
das
adc
or
bound
orl
adc
stos
jge
int
das
pop
jo
or
movsb
push
push
out
xor
testl
testb
movsb
inc
adc
add
jp
call
cld
fisubl
xor
inc
je
cmp
mov
cmp
adc
add
js
iret
cmp
fnstenv
cmp
shll
cltd
in
xor
in
mov
jne
lods
xchg
sub
xchg
inc
or
jno
jo
loopne
mov
sahf
fsubrs
scas
add
xor
dec
pop
push
hlt
inc
mov
mov
mov
stc
mov
hlt
jmp
cmpl
adc
repnz
in
cmp
add
cmp
jp
dec
inc
fdivrs
and
and
or
xchg
mov
in
int
sub
mov
xor
pop
aaa
inc
mov
or
and
test
scas
test
cmp
cwtl
mov
mov
cmpsb
mov
imul
cld
aas
add
mov
sub
xor
das
xchg
daa
cmp
push
hlt
push
imull
sbb
stos
xchg
out
jbe
pop
ret
inc
fdivrl
and
sahf
test
clc
dec
pop
mov
pushf
cmc
ljmp
and
inc
push
add
jno
cmp
pop
inc
and
jl
push
jp
pop
cvtdq2ps
adc
mov
xchg
jno
lods
iret
xlat
dec
xchg
clc
icebp
xchg
scas
dec
pop
inc
clc
sbb
xlat
xchg
cwtl
jns
adc
jns
outsb
test
sub
popf
or
int
mov
add
xchg
cs
sbb
stos
addr16
jmp
adc
btsl
mov
adc
arpl
outsl
das
les
cld
jl
aad
call
aas
xchg
pop
data16
shrl
das
mov
ret
adc
xor
out
sub
cmp
addr16
inc
mov
lea
dec
mov
jle
cmpb
mov
hlt
or
addr16
add
movsl
dec
enter
nop
out
ljmp
jle
dec
or
dec
repnz
cmp
insl
pop
adc
pop
push
mov
fsts
jbe
enter
ficompl
adc
or
sbb
jbe
xchg
shlb
sbb
adc
mov
xchg
cmp
jae
movsl
lock
das
jno
mov
les
and
xor
sub
push
arpl
rcll
push
push
inc
cld
mov
inc
inc
nop
shll
call
rorb
nop
les
mov
adc
pop
fisttpl
pop
lret
cmpsb
and
cvttps2pi
and
sub
and
mull
fs
rclb
repnz
cmpsb
stc
scas
scas
mov
or
movsb
xor
ror
push
pop
push
mov
shrb
push
add
fs
cmp
dec
icebp
mov
outsl
and
push
out
daa
int3
leave
leave
aas
and
ss
stos
or
mov
insl
mov
inc
jbe
popa
lahf
pop
mov
repz
insl
jmp
punpckhbw
add
jecxz
xor
mov
or
push
mov
punpckhbw
xchg
or
neg
sbb
ret
aad
lea
test
mov
orl
xchg
push
cld
push
lds
sarl
sti
xchg
hlt
dec
or
adc
add
push
fldl
cmpsb
into
out
js
popf
mov
iret
cmp
sub
mov
lock
lcall
add
pusha
inc
sub
test
or
insb
arpl
push
mov
je
dec
rsqrtps
cmp
push
cmp
in
into
cltd
xchg
and
or
and
mov
mov
cmpb
mov
test
fiaddl
aaa
pop
mov
push
ja
or
imul
add
in
and
and
xor
aas
rorb
push
xchg
enter
mov
cmp
sahf
sti
adc
not
adc
or
mov
sbb
mov
and
loopne,pt
cmp
sbb
call
cmp
popf
inc
xchg
push
jle
pushf
enter
push
or
mov
sbb
scas
fisubl
mov
or
cmc
shlb
push
sub
aas
and
sub
mov
or
jecxz
daa
cmpsl
fstl
mov
aaa
fcomip
dec
cwtl
cld
ret
dec
jae
rol
cwtl
mov
ret
jns
pop
enter
insl
sub
jno
jmp
mov
push
pop
sahf
loop
inc
xchg
adc
adc
inc
jb,pn
mov
shlb
inc
jb
lcall
pop
adcl
mov
xchg
add
pop
push
mov
fwait
push
cmpsl
roll
add
shr
inc
and
cmp
hlt
and
rcrl
pop
jmp
loope
inc
lds
loopne
sbb
inc
cltd
push
or
mov
pop
sbb
lds
pushl
add
pop
movsb
outsb
dec
add
sbb
in
pop
sbb
or
in
jae
dec
cmp
popf
mov
xchg
inc
cmp
inc
addl
scas
cmp
mov
add
sbb
mov
rclb
mov
push
sub
push
fcmovne
jmp
cmpb
sti
fcoms
push
pop
insb
or
std
xchg
dec
push
cmc
sub
xchg
pop
into
pop
mov
jl
test
ret
pop
mov
xor
test
aam
push
sub
or
bound
mov
pop
lahf
fisttpll
xor
ret
mov
rep
push
lcall
xchg
leave
pop
inc
mov
pop
gs
mov
or
ss
and
cltd
mov
jmp
dec
jmp
mov
mov
int3
mov
dec
add
fnstsw
dec
repz
mov
repz
push
cli
inc
xchg
or
or
or
xor
or
xor
jo
inc
mov
lret
and
incb
sarb
cltd
mov
or
sbb
dec
mov
int3
repnz
scas
jnp
sbb
fdivl
jp
fsubs
jle
inc
xor
mov
ret
jge
sbb
sbb
nop
mov
ss
and
and
mov
clc
adc
lds
ret
addr16
outsb
out
out
rcll
jne
pusha
cmc
inc
test
movsl
inc
xor
repnz
rcrl
and
adc
loope
jno
lock
sbb
sub
jne
aaa
arpl
outsb
rcrl
or
popf
mov
sub
mov
mov
pop
idiv
orb
push
gs
jo
jp
jb
test
mov
or
repnz
adc
popf
rolb
cli
add
leave
and
test
add
pushf
mov
push
pop
and
in
adc
in
xchg
add
orb
xor
out
or
test
sbb
xor
jp
arpl
add
pop
dec
xor
sbb
dec
mov
repnz
js
dec
mov
test
or
push
testb
test
daa
mov
push
mov
mov
jb
rorl
test
lds
nop
mov
mov
mov
and
popf
sbb
lret
xchg
xor
shr
add
gs
inc
lock
inc
js
pop
addl
daa
movl
adc
test
test
test
hlt
jae
or
push
daa
mov
xchg
cld
rorl
add
mov
out
mov
lods
les
add
xchg
rorb
pop
push
cmp
std
dec
jbe
push
aam
xchg
xchg
arpl
outsl
xor
sub
test
lcall
adc
test
pop
mov
jns
sbb
mov
stos
ljmp
outsl
xchg
or
js
testl
ljmp
mov
stos
pusha
cmp
or
cli
loope
sti
or
xor
adc
shlb
sbb
push
roll
and
jae
lcall
in
add
dec
pop
mov
enter
jl
testb
sub
fstl
and
inc
in
adc
ror
xchg
int
cld
loop
and
inc
aaa
popa
push
call
mov
dec
jo
cmp
fs
frstor
lret
ret
out
adc
inc
fcoms
jno
andb
add
addr16
xchg
jne
out
cmc
adc
and
or
sub
movsb
inc
xchg
inc
sbb
or
inc
mov
push
inc
add
sbb
mov
stos
fimuls
dec
xchg
jnp
out
xchg
add
lods
das
fbld
leave
push
inc
adc
sti
add
xor
dec
add
xchg
aad
roll
icebp
inc
adcb
xor
inc
rcrb
test
stos
dec
and
sbb
sub
or
inc
scas
ss
sub
mov
pop
xor
inc
rorl
fstpt
push
ret
dec
sbb
fs
cli
adc
pushf
sub
add
imul
negl
sbb
movl
test
insl
cs
or
xchg
ljmp
or
loop
xchg
inc
orl
and
shld
imull
jnp
and
jns
lock
cmc
popa
icebp
cltd
mov
sub
mov
arpl
pop
outsl
add
mov
ret
and
add
adc
sub
mov
jle
orb
cld
hlt
dec
mov
xor
cli
push
adc
and
insb
mov
ds
pop
pushf
nop
clc
jns
lods
outsl
sbb
daa
inc
jl
pusha
add
and
rorb
push
mov
add
pop
cmc
mov
mov
xchg
xchg
or
and
pop
pop
pop
dec
add
es
iret
pop
mov
xchg
adc
mov
pop
sub
test
pop
ss
into
rclb
clc
push
adc
and
ds
popa
fists
ss
dec
jno
mov
imul
xor
and
sbb
sbb
pop
and
fs
in
adc
ja
jl
mov
aaa
sbb
or
dec
push
bound
sbb
orl
and
dec
inc
out
mov
or
aaa
lret
je
xchg
jbe
cmp
hlt
xor
mov
mov
hlt
adc
in
sub
inc
inc
jb
xor
stos
popa
xor
xor
pop
fwait
scas
das
add
in
testb
popa
push
and
pop
dec
add
inc
or
mov
jnp
mov
inc
push
les
push
cmpsl
xchg
movsb
pop
nop
loop
cmpsb
pop
sbb
jp
push
or
pop
add
cwtl
test
adc
loope
mov
rol
sub
lcall
adc
jne
xor
cs
mov
fadds
fwait
xchg
fwait
mov
in
test
add
inc
xchg
divl
xor
lock
stos
and
sbb
notl
loop
incb
inc
insl
sub
mov
pop
dec
cmp
add
mov
repz
xchg
mov
cmpsb
fcmovnu
xor
les
scas
and
mov
or
je
loope
xor
jae
xor
imul
lds
inc
test
mov
test
mov
xchg
pop
cmc
int
outsl
mov
dec
jb
fidivrs
lret
and
hlt
jmp
add
lds
adc
pop
push
fidivs
inc
mov
mov
xor
dec
lock
jl
pop
push
mov
sbb
pop
sahf
jbe
andl
push
ljmp
xchg
adc
fistps
aad
test
cmp
or
cmp
jb
dec
mov
arpl
mov
and
sub
sbb
inc
add
jp
or
fidivl
add
into
ss
mov
adcl
aam
fidivs
inc
cmpb
and
lcall
loope
add
nop
or
stos
cs
into
push
arpl
jl
sub
xchg
iret
sbb
movsb
call
mov
add
inc
mov
push
add
lahf
inc
inc
pop
cmp
push
or
dec
loope
fs
rorb
imul
mov
or
into
sahf
adc
mov
in
pop
cmpsl
push
or
add
inc
and
lret
enter
xor
scas
inc
pop
roll
inc
jae
xor
jns
mov
add
call
mov
rorl
xlat
xlat
or
adc
jp
sarb
loopne
cmpsb
stos
pop
aad
sbb
inc
std
jle
add
pop
cmp
les
adc
nop
mov
sub
pop
aaa
push
lcall
popf
or
loop
mov
iret
mov
push
dec
ret
test
inc
mov
xor
and
iret
mov
xchg
and
daa
cld
adc
adc
fsubr
xor
adc
lock
and
push
xchg
addl
addl
shrl
je
mov
sbb
std
rolb
mov
and
sub
xchg
lock
or
lds
mov
xlat
sbbb
ss
fcomp
in
pop
or
pop
cmpsb
dec
sarb
jae
fdivr
and
mov
call
shrb
or
xchg
stc
bound
mov
test
in
mov
inc
out
outsl
and
or
inc
pop
addb
sbb
and
mov
add
clc
or
jp
loopne
cmp
inc
lea
sbb
decb
movl
ss
mov
mov
or
push
pop
mov
cmp
sbb
sub
xor
sbb
inc
pop
push
mov
aam
push
mov
movsb
sar
mov
dec
test
adc
xor
rcrb
cmp
cmp
std
xor
jbe
xchg
out
push
xor
sbb
adc
fwait
mov
mul
cmp
movsl
cmpsb
xchg
ret
movsb
sbb
add
cmp
in
mov
movsl
dec
repz
jo,pn
mov
js
popf
sub
mov
or
mov
pop
pop
sbb
into
add
test
sub
adc
and
test
test
xchg
stc
shlb
sahf
shl
inc
subb
add
mov
xchg
and
fldenv
xor
fnsave
jle
dec
inc
jno
leave
sbb
mov
and
shll
mov
sbb
push
mov
push
out
or
xor
mov
mov
enter
or
mov
or
movsb
sub
xor
rorl
add
inc
or
mov
fsubr
shlb
mov
pop
in
sbb
inc
jae
xor
mov
pop
rcr
je
cs
out
cmpsb
cwtl
mov
cmp
andb
mov
or
je
sbb
repnz
addl
scas
lahf
in
jge
loop
bound
pop
xor
xlat
movsb
insl
ret
push
daa
pushf
scas
testb
cltd
iret
jae
or
mov
jo
fs
daa
inc
daa
mov
pop
pop
and
cmpsl
jg
xor
test
int3
enter
nop
dec
outsb
loopne
dec
jecxz
add
repz
and
sub
loop
dec
mov
stos
mov
dec
cltd
in
out
xor
jmp
inc
push
push
or
cmp
push
clc
stos
inc
adc
or
sarl
cmp
inc
enter
loopne
inc
mov
ret
xchg
shlb
in
adc
or
add
stos
das
dec
fcomps
lret
loopne
inc
mov
jno
les
rorl
inc
das
lret
subb
jo
sti
and
mov
xchg
clc
adc
leave
ljmp
sbb
add
add
movsb
push
push
adc
adc
sbbl
xor
and
pop
nop
adc
dec
ja
pop
sbb
xchg
jp
xor
fld
pop
jmp
or
mov
mov
jl
shlb
fisubrl
std
js
add
movsb
fstpl
push
adc
gs
lret
sbb
lods
or
movsl
or
inc
ret
lods
loope
insb
int3
in
data16
mov
add
xchg
andl
cmp
sub
int
add
into
lret
mov
ret
jbe
cmp
test
jnp
movsb
mov
je
mov
nop
mov
and
inc
push
leave
xor
mov
js
jo
sbb
test
push
jbe
xlat
loop
cmp
mov
int3
pop
test
js
lds
test
mov
mov
xchg
ljmp
aad
mov
in
or
out
pop
in
shr
orb
sbb
pop
mov
or
repnz
xor
xchg
loopne
mov
hlt
jecxz
sbb
xor
loop
loopne
dec
fistps
inc
adc
in
adc
icebp
jmp
dec
xchg
add
sub
pop
inc
lods
lods
mov
sbb
and
push
add
lea
or
sub
lods
push
andl
out
adc
adc
pmovmskb
loop
push
rorl
mov
in
mov
inc
adc
lds
inc
rorl
test
enter
dec
dec
rolb
lock
and
jnp
push
sbb
out
ret
lret
add
inc
jmp
xor
stc
cmp
inc
ficoms
pop
mov
and
es
test
xor
jo
jo
sub
dec
jl
loop
or
add
pop
inc
cmp
dec
sahf
insb
cmp
add
push
lock
sub
aam
mov
jmp
jo
lock
stc
add
pop
xchg
mov
enter
mov
mov
mov
pop
xor
jg
or
sbb
scas
xor
inc
or
sub
insb
ds
movsl
xor
pusha
inc
sarl
inc
cmc
es
rcll
int
sbb
in
xchg
push
pop
add
ret
lcall
call
dec
mov
and
and
fisubrs
sub
pop
mov
dec
ljmp
mov
addr16
test
cmpsl
pop
add
push
jl
dec
add
or
daa
or
mov
adc
add
xor
nop
nop
test
subb
je
mov
or
inc
mov
dec
add
add
fistpl
lea
aam
cmp
hlt
sahf
add
insl
les
fwait
dec
mov
sub
add
push
add
mov
mov
xlat
enter
sub
out
imul
jno
mov
nop
push
sbb
and
jge
jle
fstps
push
jbe
inc
push
insb
xor
andb
enter
pop
fsubrs
inc
inc
test
dec
dec
test
adc
dec
push
leave
je,pn
hlt
pop
pop
cli
or
daa
pop
int
push
mov
sbb
xchg
ret
stos
jl
and
and
out
pop
sbb
lods
js
and
cmp
sar
push
call
loope
mov
adc
pusha
mov
or
cmp
into
je
out
in
int3
xchg
xlat
lea
sub
pop
or
ss
lret
jne
pop
sbb
add
xor
adc
pop
adc
ljmp
xchg
lret
adc
push
loope
adc
fs
xchg
ja
pushl
xchg
scas
xlat
int3
arpl
push
mov
mov
push
adc
outsb
inc
push
or
add
fiaddl
push
pushf
fstl
or
ja
mov
mov
inc
push
lea
mov
aaa
pop
sbb
jne
xchg
mov
adc
lret
pop
cmpxchg8b
into
xchg
xlat
aam
loopne
adc
cmp
je
jno
jnp
in
mov
push
divb
xchg
faddp
pshufw
sbb
popf
pusha
inc
cli
clc
push
sti
and
loope
test
movsl
scas
nop
lods
push
push
shlb
or
aas
lahf
call
insl
jecxz
push
xchg
dec
aam
adc
push
rep
add
cli
repnz
lock
add
xchg
pop
push
xor
test
jp
lcall
and
mov
frstor
testb
mov
adc
xor
lea
adc
xlat
jmp
push
mov
xchg
fs
jno
shll
push
js
das
jne
mov
cmp
cmp
dec
jno
sbb
cmp
subb
jae
dec
mov
lahf
stos
nop
fadd
stos
movsl
jo
add
add
and
sti
add
data16
add
mov
mov
lods
push
in
aas
sub
or
adc
insb
add
push
cmp
pop
xchg
jb
push
push
jp
sub
shlb
sub
test
or
aam
inc
mov
das
fs
addr16
push
push
imulb
icebp
pop
addr16
mov
cmp
mov
insl
add
cmp
std
mov
cmp
sbbl
nop
mov
incb
xchg
stos
sbb
pusha
push
cmpsl
and
shr
pop
pop
je
lds
adc
cmc
sub
jl
mov
pop
sbb
fadds
loopne
daa
jnp
test
jl
addl
add
add
push
lods
inc
xor
mov
dec
mov
scas
inc
shl
iret
sub
adcl
out
aam
shlb
mov
sub
mov
prefetch
or
sahf
scas
sbb
loop
jae
addl
popf
and
push
xor
mov
add
aad
mov
je
xor
push
mov
mov
arpl
mov
in
mov
sar
cld
push
cmp
call
shrl
sbb
inc
cs
mov
jo
nop
cmp
es
rorb
daa
cmp
movsb
xchg
adc
pop
fadds
jae
and
or
lock
and
pushf
aaa
adc
outsb
xchg
sti
loope
pop
or
ret
popa
pop
psrad
mov
popa
sahf
inc
adc
pop
jmp
jl
jp
push
loopne
mov
add
test
push
es
cmpsb
dec
lds
loop
lods
add
sbb
xlat
lret
xchg
js
sub
or
sti
sbb
sahf
pop
mov
and
mov
sti
inc
std
fxtract
mov
or
lahf
jb
fiaddl
std
mov
imul
cli
mov
inc
lcall
rcll
sahf
and
sub
or
call
popf
nop
pop
cmp
inc
mov
dec
stc
mov
cmp
push
inc
scas
mov
lret
cmp
adc
pop
ljmp
cld
mov
mov
inc
push
into
test
add
xor
mov
push
jno
aam
cwtl
cwtl
or
pop
sbb
aas
jo
addl
repnz
cli
bound
fs
adc
or
ja
jge
repz
jmp
in
pop
sub
dec
pusha
mov
add
and
inc
mov
push
push
sub
push
rcll
nop
push
xchg
and
je
xchg
push
out
mov
test
adc
mov
aad
inc
sub
int
xor
movsb
shl
loopne
inc
ja
pop
mov
stos
mov
cmp
lea
push
in
pop
dec
adc
lcall
mov
or
dec
into
mov
faddp
xchg
out
pop
out
addl
call
mov
push
add
mov
lock
jbe
loop
push
js
daa
test
je
dec
add
leave
jecxz
loop
mov
hlt
xchg
int3
pop
mov
cmp
push
sub
add
fwait
jne
pop
lock
mov
pop
or
mov
add
add
lahf
or
push
out
nop
loop
icebp
insb
xchg
jno
popa
in
aad
dec
dec
loopne
jp
xchg
inc
sahf
test
mov
sub
mov
and
cmc
xor
rcll
add
xchg
stos
xchg
add
or
gs
shl
mov
inc
and
adc
aam
cmc
inc
mov
jmp
inc
xchg
mov
enter
push
ljmp
adc
mov
push
sbb
jns
enter
mov
mov
add
jp,pt
popf
daa
lods
cmp
call
xchg
sub
xchg
jo
nop
shll
addr16
mov
loopne
outsl
add
sub
arpl
lds
rolb
fidivrl
dec
fadds
add
pop
inc
mov
mov
pop
cmp
mov
and
enter
nop
sar
push
pop
call
int
cmp
ljmp
lods
push
adc
and
dec
jbe
dec
inc
movb
jno
movsl
sub
sahf
cmp
fs
sub
aas
sub
push
xor
sub
inc
and
stc
mov
insb
adc
pusha
jnp
stc
push
adc
adc
jmp
xchg
cmpl
out
imul
movsl
add
outsb
sti
js
inc
lds
cld
and
ret
mov
cmpsb
out
inc
daa
iret
clc
lea
outsb
inc
int
negb
pusha
cmp
or
addr16
mov
scas
pop
test
dec
push
mov
test
test
stos
xchg
adc
mov
shll
cmc
inc
pop
lea
xor
xchg
sbb
xchg
adc
stos
cmp
cmp
loopne
inc
and
les
sarl
pop
enter
push
sub
jmp
and
arpl
push
xor
sub
loopne
and
repz
lcall
push
popa
push
aaa
jbe
sbb
xor
sub
call
in
fs
ljmp
loop
jl
mov
pop
loope
sarl
shl
adc
in
mov
lcall
and
mov
stos
pop
lods
inc
mov
leave
sbb
or
ljmp
jmp
ret
add
cs
rcr
imul
cmp
adc
andb
data16
sbb
mov
dec
pop
sbb
jecxz
pop
add
push
dec
femms
add
scas
mov
jmp
mov
shl
cltd
or
mov
lret
and
pop
cmpsb
inc
add
and
in
push
push
shl
and
cwtl
daa
inc
test
jle
hlt
inc
or
mov
xchg
aaa
or
divb
and
popf
xor
into
cmc
addb
aam
mov
cmpsb
push
sub
repnz
push
sbb
ss
ret
pop
pusha
adc
imulb
add
dec
mov
ret
inc
pop
and
adc
dec
pop
das
push
cs
sub
dec
sbbl
cmpsb
add
and
sub
and
rclb
inc
pusha
test
ds
sbb
lret
adc
mov
in
ljmp
and
xorl
push
fs
pushf
xchg
movsl
shll
jl
lret
xchg
mov
mov
insl
or
ret
loope,pt
and
and
jns
mov
lcall
sub
ret
mov
inc
jmp
movsl
dec
or
xor
gs
push
aad
sbb
or
lret
and
out
in
pop
jle
mov
add
sbb
mov
mov
sbb
or
xor
cld
repnz
pushf
and
js
mov
or
dec
jge
hlt
shr
cld
loope
int
jmp
inc
int3
fwait
es
cmp
aam
mov
mov
xlat
mov
mov
sahf
xorb
adc
sbb
inc
fcompl
int
mov
jmp
mov
and
mov
rcr
lods
popf
push
add
xor
in
rolb
cmp
add
jecxz
add
shr
loope
je
shrb
addb
dec
ss
call
test
stc
push
shrb
mov
fisttps
enter
call
in
andb
lret
out
cmc
dec
dec
pushf
outsl
hlt
pop
and
sbb
or
inc
mov
mov
mov
decb
sub
cld
fisubs
in
icebp
add
pop
cmp
mov
lret
cli
push
push
push
xor
scas
ds
sub
lret
outsb
xor
xor
sarl
pop
or
mov
push
lahf
mov
rclb
gs
xchg
pop
sbb
add
sbbb
add
and
iret
sub
jmp
mov
xchg
mov
daa
or
adc
out
js
ja
lcall
scas
sub
cli
cmpsb
or
push
test
test
aaa
sbb
adc
pusha
adc
fsubrs
pop
or
ds
or
add
xchg
lods
addb
arpl
cmp
mov
fisubrl
les
xchg
xchg
nop
sbb
test
shrl
xchg
insl
insl
aam
or
cmp
push
js
ret
and
mov
repnz
std
and
fistpl
push
lcall
sarl
rcl
mov
aaa
clc
or
jbe
dec
cmp
adc
mov
push
sbb
sub
test
mov
or
fwait
sbbl
lea
nopl
inc
xor
and
out
mov
jle
add
xorb
dec
mov
cmpsl
test
fmuls
pop
inc
shr
pop
in
test
loop
test
and
insb
loop
push
inc
icebp
ljmp
fucom
and
lods
loopne
lret
movsl
test
jbe
clc
adc
les
fldt
loope
cmpb
xchg
jae
je
and
and
lods
or
push
push
ljmp
adc
loopne
test
mov
pop
push
xchg
ja
push
pop
mov
adc
pop
sar
jb
push
notl
and
push
cmp
mov
pushw
orb
roll
nop
sarl
mov
xchg
fcom
arpl
je
mov
test
cmp
sbb
mov
adc
xor
or
in
nop
push
aas
and
push
sub
adc
cmpsb
or
leave
xor
inc
inc
add
pop
inc
mov
scas
mov
mov
fisttps
pop
icebp
outsb
ret
or
xchg
mov
icebp
bound
popf
jmp
test
sbb
subl
mov
aaa
sbb
mov
enter
out
bound
test
adc
idiv
je
test
lahf
mov
icebp
loope
in
cmp
sbb
push
mov
inc
mov
icebp
loope
cmp
jo
xor
cmp
dec
cmp
or
test
movl
std
mov
jmp
ljmp
loop
pop
push
xchg
pop
lock
mov
out
clc
fst
pop
adc
fistl
repnz
mov
push
jbe
mov
out
adcb
out
sbb
cbtw
leave
aad
xchg
inc
mov
cmpsb
mov
xchg
ja
mov
pop
mov
testl
insb
popa
shrb
sarl
sbb
xchg
pop
and
mov
mov
bound
js
fists
and
fwait
and
and
sub
fcmovnbe
jg
loop
cmc
lock
jge
ljmp
sub
xchg
sbbb
loop
cli
xchg
repz
or
lods
sub
stos
add
nop
sbb
popa
or
rcl
stos
ds
repnz
ja
arpl
nop
xor
sbb
or
jno
sbb
or
xlat
test
jmp
inc
pop
pop
test
aam
sbb
divl
pop
xchg
push
or
es
adc
or
lods
repnz
mov
xor
push
or
pusha
or
js
in
in
push
fildl
movl
push
push
in
imull
lret
out
std
jl
mov
pushf
xchg
dec
jae
fwait
or
jecxz
mov
loop
mov
fnsave
imul
idivb
testl
adc
and
dec
clc
sbb
jae
or
test
rcll
cmp
mov
and
insb
inc
pop
cmp
sub
mov
test
xor
push
dec
push
scas
xchg
andl
mov
test
xor
popf
aam
adc
and
sub
jb
and
pop
repnz
mov
rorl
cwtl
mov
jo
push
ds
mov
pushf
aas
fcomip
sbb
inc
pop
ficoms
jb
jge
int
inc
push
test
enter
and
jno
test
inc
and
ret
or
rorb
dec
clc
movsb
sbb
mov
and
enter
and
lea
or
cs
and
adc
mov
mov
in
loope
int
pop
cli
and
jb
in
jl
lahf
insb
test
fadds
inc
sub
jbe
jno
sbb
jmp
push
push
mov
sub
loop
mov
cmp
xchg
dec
xlat
adc
fnstsw
stos
jno
sbb
adc
sub
fldenv
sub
push
iret
xchg
adc
aas
mov
cmp
xchg
inc
sbb
jbe
out
mov
popa
mov
jle
ljmp
or
test
cld
and
je
lahf
dec
out
dec
addr16
and
es
pop
stos
arpl
addr16
daa
push
cld
dec
je
mov
sub
cmp
or
stos
out
mov
mov
ds
inc
popa
sub
mov
aam
cmp
mov
enter
fwait
jle
sbb
jg
pop
mov
add
cwtl
scas
sbb
and
or
je
or
push
dec
sbb
mov
pcmpeqb
and
mov
mov
push
and
ds
jp
jbe
pop
jge
inc
lahf
cmp
enter
jp
in
sbb
mov
sub
lcall
inc
sbb
inc
rol
in
push
nop
add
add
stos
jo
push
es
sub
orl
ljmp
pop
mov
dec
inc
inc
and
and
jo
cltd
pop
pop
jg
movsb
movsb
add
xor
stos
sub
test
das
or
mov
cmp
in
insl
jmp
rorb
mov
mov
add
fdivl
repnz
mov
shlb
xchg
mov
cmp
pop
aam
call
lahf
test
dec
arpl
or
push
ret
les
fdivrs
loop
icebp
jne
cmp
adc
xor
push
cmp
cli
stos
xchg
daa
mov
xor
js
xchg
stc
cmc
add
leave
pop
call
dec
outsl
xchg
out
repz
jmp
leave
sbb
nop
loop
cmp
xor
enter
test
sbb
pop
aaa
lods
sbb
inc
testl
add
pushf
inc
roll
fisttps
and
dec
mov
adc
test
and
mov
sub
mov
clc
xchg
xor
loopne,pn
mov
cmc
or
mov
mov
pop
lock
addb
add
push
sbb
xchg
bound
pop
or
jp
add
gs
aad
pop
imul
scas
outsl
lret
push
outsl
in
cmp
fidivs
mov
xchg
xor
mov
mov
pop
or
lods
rcrb
push
in
ja
dec
adc
test
push
fdivrs
aas
cmp
mov
push
dec
dec
push
and
aad
repnz
enter
push
shlb
pusha
xchg
mov
fmull
into
cli
add
push
jb
adc
in
xor
sbb
mov
enter
bound
ss
mov
popa
aas
dec
xor
ljmp
jnp
xchg
mov
test
mov
nop
push
int
push
fdiv
movl
mov
dec
push
and
and
mov
inc
sub
sbb
mov
leave
xor
loope
lahf
inc
inc
jne
pop
je
ret
ljmp
xor
imul
ss
icebp
shrl
jecxz
add
inc
enter
dec
push
dec
or
inc
dec
out
jecxz
add
aad
jo
pop
test
movsl
pop
add
fdiv
and
insl
lret
sbb
add
jb
or
aad
in
add
mov
aaa
lcall
popa
push
scas
and
mov
jmp
cwtl
mov
jmp
sbb
divl
jb
dec
add
or
xchg
sub
popf
out
arpl
and
sub
pusha
push
aas
or
push
insl
xchg
add
ljmp
bound
sbb
stos
dec
in
fsubs
mov
test
test
in
and
scas
and
loopne
iret
cmc
lock
dec
pop
lock
test
addb
and
orl
ds
pop
add
pusha
or
mov
push
aaa
pop
add
mov
and
scas
test
pop
jmp
mov
xchg
mov
test
sub
std
push
cmp
cld
data16
adc
ss
cmpsl
push
xor
lret
lods
inc
fsubl
lock
into
repz
sbb
dec
jge
sbb
cli
xor
scas
pop
adc
lds
mov
cmp
jns
xchg
test
pop
mov
ds
sub
clc
test
loopne
dec
cmp
dec
outsl
repz
dec
clc
mov
mov
jge
aas
push
stos
xchg
lods
add
xor
add
inc
adc
jg
push
cmp
xor
nop
adc
pop
adc
inc
add
xlat
clc
cmp
fmull
lea
xchg
sbb
xor
rol
add
cmp
push
add
sub
in
test
push
imulb
xchg
test
adc
xchg
addr16
or
sbb
pop
xchg
and
ss
shl
or
dec
and
repz
ror
cli
mov
dec
rcrl
jmp
mov
dec
push
xor
lds
clc
mov
rorl
cmp
mov
pop
mov
js
test
outsl
pusha
out
xor
jo
xlat
movsb
aas
xchg
push
add
cld
repz
mov
popa
pop
xchg
xor
adc
adc
pop
out
pop
mov
inc
mov
andb
mov
and
lahf
adc
rolb
push
mov
or
or
fdivrs
nop
sbb
push
outsl
mov
add
test
rorb
or
or
jecxz
inc
sahf
jo
insl
or
sub
sbb
sub
xchg
dec
pop
mov
ds
fisubrl
ret
maskmovq
idivl
movsb
jo
mov
push
push
in
clc
inc
clc
cld
das
subl
inc
inc
popa
sub
movl
xchg
xor
and
mov
mov
dec
push
inc
jg
repz
mov
mov
hlt
pusha
lcall
cmp
loope
or
push
push
jnp
mov
dec
pop
sbb
inc
mov
sub
pop
negb
fs
dec
out
inc
mov
sbb
sbb
sbb
sbb
add
shrb
dec
add
jb
adc
in
movb
shrl
pop
shll
pop
sbb
call
and
mov
mov
shll
mov
inc
ret
lea
and
xor
jge
add
or
repz
cltd
adc
xchg
rol
push
push
and
jo
add
dec
or
rolb
mov
add
addl
mov
popa
repz
adc
mov
in
fmul
dec
add
pop
xlat
push
cmp
sbb
add
jmp
enter
repnz
movsb
enter
cmp
pop
data16
add
fnstsw
fimull
notl
fs
push
push
mov
or
daa
in
adc
imul
cmp
push
jns
cltd
mov
jg
sub
rolb
xorl
xchg
sub
push
inc
and
pushf
rolb
push
cmp
int
pop
inc
out
call
add
sbbb
idiv
cmp
lret
adc
movsb
out
pop
sub
inc
fstpl
into
je
dec
adcl
mov
add
inc
or
jg
roll
lods
lods
push
mov
fdivrs
or
xchg
push
or
push
iret
lret
orb
movsb
test
jl
jp
in
and
js
cmpsb
xchg
xor
add
add
iret
lret
adc
aaa
lock
mov
mov
adc
xchg
ret
inc
mov
or
pushf
lahf
addr16
mov
jle
in
js
cmc
pop
in
jl
mov
jl
inc
add
bound
or
pop
add
aas
xor
out
xor
sti
sti
and
or
outsl
fnstcw
call
push
adc
mov
push
push
mov
push
jmp
add
or
or
push
imul
sbb
inc
rcrl
cmpsb
ror
and
lret
sub
or
jnp
adc
sub
xchg
inc
xchg
mov
cli
adcl
pop
push
add
sbb
fistl
xor
adc
cmp
shll
fcomip
movsb
in
sbbl
add
push
imul
add
mov
cmp
sub
dec
add
mov
scas
add
adc
sub
stc
mov
les
bnd
xchg
cld
xor
popf
lret
outsl
scas
lcall
adc
pop
adcb
insb
stc
mov
enter
pop
inc
mov
mov
lcall
dec
inc
mov
mov
add
stos
test
add
insb
jp
add
pop
adc
popa
cmpsb
das
test
inc
add
adc
xchg
pop
bound
sahf
xchg
outsl
mov
and
test
in
mov
jbe
mov
push
leave
cmpsb
pop
dec
insb
adc
dec
cmc
push
push
outsb
icebp
movsl
in
mov
mov
ud1
inc
adc
push
or
addb
enter
shlb
mov
sub
clc
pop
adc
add
and
dec
push
fsubs
inc
lds
push
ret
sub
arpl
lods
mov
sub
outsb
inc
add
push
insl
mov
ja
mov
rcll
aaa
and
lods
mov
pop
push
je
mov
dec
das
xchg
push
inc
adc
jne
repz
mov
push
mov
mov
mov
push
movsb
lahf
addr16
adc
mov
daa
in
loop
sbb
aaa
adc
aaa
adc
ljmp
push
mov
test
and
les
push
add
cltd
dec
std
pop
sub
cmpsb
dec
inc
fisttpll
test
fnstenv
cmp
push
cmp
clc
push
in
dec
or
cld
std
push
lods
divl
stos
mov
jl
dec
aaa
and
pop
outsb
lret
shlb
add
lcall
in
jge
mov
out
and
xor
mov
data16
inc
jne
xlat
ja
aas
or
jbe
fiadds
and
cmp
xchg
outsb
mov
mov
adc
imul
dec
mov
add
gs
addl
push
mov
inc
pop
jp
aad
jmp
cs
mov
cmp
frstor
push
or
inc
mov
pusha
fldlg2
inc
jae
pop
mulb
adc
bound
xchg
aam
adc
out
jl
popa
hlt
notb
pop
and
cmp
mov
mov
into
add
mov
dec
mov
pop
pusha
xchg
sbb
dec
rorb
icebp
shr
jae
or
pop
push
sub
cmc
jmp
mov
add
ds
fadd
adc
nop
sbb
sub
xchg
adc
or
outsl
ficoms
add
xchg
add
mov
lds
cmp
jl
es
adc
in
inc
or
adc
xor
sbb
sbbl
or
lock
adc
jmp
mov
mov
ss
aam
mov
test
lock
lods
clc
inc
mov
inc
ret
mov
inc
xchg
mov
dec
or
scas
pop
dec
hlt
or
mov
fs
add
lods
dec
js
ljmp
push
rcll
shl
test
in
fisubrl
inc
mov
loope
lret
clc
ret
daa
lock
mov
lea
orb
cmp
icebp
test
add
test
stc
or
xchg
sbb
cmp
int3
and
sbb
frstor
or
xorb
rolb
outsl
dec
adc
xor
lods
leave
xor
push
sbbb
mov
add
fimuls
ffreep
xchg
and
add
pop
mov
insb
outsl
mov
in
inc
inc
mov
popa
inc
adc
mov
mov
sahf
push
cmpb
jnp
sub
pop
pop
and
pop
add
add
cs
pop
mov
xchg
pop
sbb
pop
push
das
add
loope
jae
cld
sbb
test
jg
das
xchg
lret
dec
ret
aam
adc
dec
cli
pop
leave
sbb
addr16
ud0
fwait
add
and
sbb
int3
xchg
mov
in
mov
cmp
pusha
daa
outsl
push
mov
mov
pop
sti
aam
lds
xor
or
pushf
mov
pop
or
adc
add
sbb
hlt
jne
xchg
mov
mov
add
add
je
pop
popa
inc
add
int3
mov
jbe
loope
lcall
cltd
xor
push
mov
movsb
ret
loop
rorb
mov
aas
sub
cwtl
sbb
stc
sbb
pop
repz
cltd
add
rcrl
or
test
jne
lods
mov
jp
add
cmp
xor
inc
popa
scas
cmp
iret
mov
mov
mov
out
mov
xchg
out
xlat
pop
mov
xor
rcrl
add
sti
enter
inc
cmpsl
loop
jp
pop
add
lret
scas
cmp
and
sbb
adcl
pop
jmp
push
adc
pop
icebp
add
in
pop
or
xor
dec
mov
imul
mov
pop
cmp
mov
pusha
imul
insl
mov
pop
shr
adc
mov
in
cwtl
cli
cmp
xchg
adc
insl
jle
mov
jne
inc
sub
and
aas
mov
xor
lahf
mov
sub
push
add
add
imul
jns
ja,pt
ret
fcmove
add
fstpt
jbe
xor
adc
out
cmc
mov
pop
lret
shll
addl
xor
push
fildll
test
out
jge
xor
dec
data16
adc
mov
mov
jns
bound
adc
and
sub
adc
dec
cmp
movsb
pop
pop
pop
xor
xchg
mov
cmp
stos
or
push
lds
xchg
push
sbb
mov
add
add
mov
cmp
add
call
in
filds
or
adc
push
push
outsl
cwtl
popa
fldenv
mov
mov
cltd
ret
out
xorb
dec
dec
and
scas
cmpsl
add
xchg
push
xchg
mov
test
jge
mov
pop
sub
lds
add
aad
pop
je
nop
jge
sbb
dec
rorb
test
inc
stc
test
mov
push
xchg
mov
sbb
add
mov
fcoms
pop
push
or
sbb
mov
repnz
pop
lods
sbb
or
xor
xchg
xchg
popa
arpl
mov
leave
pop
repnz
mov
scas
inc
xor
adc
mov
ds
ljmp
jns
xor
sub
arpl
lock
test
orl
hlt
lea
jp
push
cmpb
sbb
adc
cmp
ret
adc
in
outsl
mov
sub
adc
dec
jmp
call
xor
cmpsb
arpl
mov
or
adc
mov
add
sub
pop
push
sbb
clc
pop
ret
das
jecxz
mov
lock
xchg
sub
mov
push
aas
xchg
xchg
dec
xchg
sbb
popa
inc
ret
ss
dec
clc
pop
pop
or
stos
es
dec
out
and
xchg
push
stos
mov
int
or
outsb
pusha
adc
fildll
decl
andb
rcrb
push
enter
sbb
rolb
call
pop
or
xor
pop
mov
clc
xor
adc
dec
or
aaa
cmpsb
stos
mov
inc
push
inc
mov
jbe
mov
xchg
dec
sbb
pop
push
inc
popa
pusha
push
adc
xchg
sub
cld
cmp
jmp
and
dec
js
xchg
mov
rclb
sbbb
test
dec
ss
pop
cwtl
imul
or
rcr
pop
mov
push
pop
lea
insb
daa
iret
xor
pop
repnz
pop
outsl
pop
push
inc
testl
jge
push
xor
ja
add
les
ss
test
pop
outsl
pop
mov
pusha
jne
les
and
mov
hlt
push
cmp
ret
add
mov
or
sub
xorl
sbb
shlb
sarb
mov
jmp
pop
sub
fdiv
cli
ret
adc
insb
sbb
lea
sarl
and
stos
mov
pop
icebp
xor
fistl
sbb
iret
and
ret
xor
or
rorb
shll
sarl
jp
and
pop
das
or
xor
inc
mov
pop
lahf
and
cmp
and
aaa
movsl
nop
cmp
jnp
xchg
popa
xchg
not
data16
sbb
mov
out
out
cmp
pop
pusha
aam
inc
add
add
orb
push
int
push
das
jae
xchg
add
daa
sbb
cli
xor
ss
or
add
movsb
cltd
pop
xor
sbbl
jl
lahf
jge
inc
adc
add
push
pop
cld
add
ds
sahf
adc
addr16
leave
mov
mov
pop
lods
adc
pop
in
sub
xchg
adc
jbe
jmp
scas
jns
mov
mov
cmp
inc
pop
int
test
sbb
xchg
add
push
jp
or
cmp
popl
inc
ds
add
cmp
fbld
in
shlb
mov
lcall
adcl
lahf
mov
or
mov
mov
mov
push
mov
bnd
call
pop
pop
and
pop
fildl
cmp
lcall
js
insb
mov
mov
pop
dec
xor
sub
hlt
xchg
mov
test
loopne
pusha
adc
insl
je
hlt
and
mov
push
adc
adc
push
pop
sbb
testb
addl
movsb
push
xor
int
xchg
roll
gs
lret
inc
push
cmpsb
stos
jne
pusha
mov
push
mov
ds
sub
fsubp
dec
dec
test
scas
fstpt
push
sbbl
xchg
aaa
les
popf
pop
jne
adc
xchg
in
push
divl
mov
inc
xor
add
lahf
fidivs
nop
mov
inc
jb
cmpsl
pmullw
inc
dec
fld
xor
in
xchg
inc
mov
push
adc
add
adc
fucomi
pop
lock
mov
and
inc
push
jns
inc
test
pop
mov
enter
jns
sti
adc
and
or
mov
scas
mov
xlat
out
insb
loopne
adc
xchg
mov
inc
adc
push
mov
push
into
dec
leave
and
push
mov
xchg
mov
es
shl
xor
test
icebp
pop
adc
lcall
imull
mov
shrl
nop
jp
loopne
call
icebp
int3
cmp
sbb
mov
cld
sti
rcl
inc
sbb
adc
jbe
sbb
xchg
pcmpeqd
pop
out
dec
pusha
and
adc
lods
movsl
mov
and
popa
ficoml
call
out
sub
sbb
loopne
jecxz
sbb
push
pop
movsl
shlb
in
mov
add
mov
push
jbe
insb
pusha
movsb
adc
or
adcb
scas
int3
in
dec
cmp
popa
mov
lcall
or
orb
or
cmp
mov
in
push
mov
xchg
mov
testb
mov
orb
mov
roll
push
ja
out
loope
ret
mov
in
xor
add
aam
cltd
add
es
fisttpll
sahf
aaa
fbstp
dec
adc
mov
add
mov
std
in
movsl
mov
jmp
nop
or
cmpsb
push
fisubrl
mov
fmull
sbb
in
mov
cmp
inc
cmc
in
jl,pn
sti
aas
je
js
into
sub
xchg
push
pop
aaa
xchg
adc
xchg
nop
loopne
daa
or
sbb
lcall
gs
jg
fdivl
xchg
mov
adc
mov
mov
and
js
ficompl
jle
fstl
xchg
aas
dec
inc
or
rcll
stos
pop
and
loope
jp
inc
jbe
fsubl
iret
xchg
in
iret
roll
mov
adcb
es
cmc
mov
or
sbb
adc
testb
lahf
repz
jno
ljmp
xor
push
jl
sub
pop
push
lods
je
add
js
pop
push
add
lahf
cld
mov
inc
ficoml
gs
icebp
sbb
clc
movsb
ss
aam
fstpt
cmp
xchg
out
inc
cli
add
xchg
or
add
mov
mov
push
inc
and
aaa
dec
imul
adc
fs
sbb
inc
push
pop
or
fidivs
int
or
and
mov
data16
add
cld
mov
scas
popa
je
rorl
loopne
cmp
stc
lods
add
nop
xchg
dec
addl
loopne
and
push
jg
sub
cmp
das
inc
or
mov
mov
pop
push
push
pop
add
jecxz
test
jno
cmp
cmp
stc
add
jns
jmp
shlb
out
in
imul
pop
adc
aad
mov
stos
jne
repz
adc
lods
clc
adc
test
ss
pop
mov
aam
pop
imul
dec
pop
push
cmp
insb
inc
iret
dec
sbb
iret
aad
cwtl
cmpsb
jmp
cld
repz
xorl
lret
lock
or
sub
fidivs
lds
mov
adcb
arpl
xorl
mov
xor
xchg
arpl
lahf
sbb
adc
xchg
ffree
sti
pop
or
ret
mov
stos
call
cmp
mov
xor
fsts
cmp
pmulhw
jne
sbb
or
xor
hlt
mov
ss
and
fcmovu
pfmin
flds
or
cmpsl
fisubs
inc
cmp
js
mov
mov
dec
and
mov
push
jle
jmp
stos
inc
fcomi
push
lea
dec
dec
add
mov
mov
adc
je
mov
add
and
pushf
push
stos
sbb
inc
jg
rcl
dec
rolb
cmp
mov
mov
and
inc
xchg
jp
cmp
add
mov
ret
repnz
jb
xor
dec
pop
adc
xchg
add
inc
leave
test
fs
inc
lea
push
xchg
mov
mov
or
mov
movsb
push
bound
cmpsl
mov
sbb
mov
testb
popf
stos
mov
xorl
sub
test
outsb
fs
sub
ljmp
ja
adc
mov
inc
stc
mov
dec
or
ffree
jecxz
test
xlat
jne
sbb
push
stos
movsb
push
jle
inc
pop
movsl
or
addb
test
mov
mov
add
loope
std
mov
movsl
repz
std
and
pop
enter
xor
inc
add
xor
push
cmc
add
je
cmc
xchg
out
ljmp
add
fwait
lods
pop
jb
or
adc
adc
xchg
pop
dec
add
adc
out
mov
dec
rolb
or
movsl
or
aad
test
xchg
les
cmp
mov
out
xor
mov
jbe
nop
xchg
cmpsb
and
lret
mov
mov
mov
lods
ret
push
cltd
andb
clc
cmc
dec
dec
idivl
mov
sub
scas
adc
or
fisubrs
cmpsb
scas
repz
cmp
mov
int3
repnz
or
cwtl
rclb
or
in
hlt
add
leave
repnz
adc
rolb
dec
or
sarl
inc
ret
jl
pushf
ljmp
xlat
jmp
xchg
pop
push
mov
cmp
pop
sbb
pop
or
add
repz
nop
push
je
inc
cmp
into
pop
dec
mov
out
add
mov
jle
inc
jne
stc
roll
lret
rcl
cmpsl
pop
lahf
popa
xchg
test
lret
test
mov
jecxz
sub
mov
scas
jnp
and
pop
dec
lods
inc
jge
inc
and
push
add
xchg
pop
iret
ret
cmc
mov
cmp
pop
mov
les
push
daa
subb
test
adc
cmp
repnz
or
jne
add
mov
ret
and
jle
inc
add
pop
jmp
mov
imul
sub
mov
mov
stos
out
ss
stos
xor
pop
hlt
mov
std
jae
daa
sub
pop
mov
mov
jae
push
in
mov
cltd
pop
cmp
test
mov
dec
fisttpl
mov
or
ds
sbb
in
add
ret
sub
push
sub
ja
xor
or
push
mov
adc
xchg
inc
je
rcl
push
adc
adc
mov
test
add
sbbl
sbb
mov
mov
add
mov
pop
mov
into
loop
mov
in
or
leave
jnp
psubd
repnz
fisttps
push
and
call
xor
lcall
imul
mov
sbb
add
dec
jle
cmp
test
filds
gs
lahf
jno
leave
add
push
cmp
test
mov
divl
xor
adc
fs
les
clc
lea
sub
pusha
cmp
outsl
movsb
loopne
push
inc
arpl
lds
mov
pop
jnp
loop
stos
leave
inc
pushf
test
out
aas
push
ret
push
fsubl
fsub
cmp
fdivl
call
je
push
push
arpl
test
or
xchg
ret
test
push
rclb
outsl
lock
insb
iret
pusha
jbe
adc
sub
xor
sub
and
mov
mov
insl
rorb
rorl
and
out
ret
aad
pusha
sbb
jne
inc
sub
popa
rcll
hlt
ljmp
sbb
mov
push
jp
test
jp
mov
cmp
mov
add
mov
and
rclb
out
lcall
jge
sbb
xlat
and
or
push
inc
popf
movsb
mov
push
dec
or
cmp
insl
or
cld
mov
jns
pop
aas
popa
xor
sub
xchg
test
inc
xor
call
cmp
hlt
std
mov
sahf
sti
in
jg
push
nop
push
in
and
xchg
and
xor
jge
push
outsb
daa
outsb
es
mov
or
add
ja
ljmp
aam
ficompl
and
mov
pop
mov
xor
repz
add
push
sbb
and
push
in
pop
cmp
sbb
cltd
rorl
xor
dec
cmp
leave
and
jnp
inc
push
orb
sbb
fsts
cli
out
into
mov
xchg
xor
dec
pop
dec
lcall
stos
cmpb
fldcw
sbb
hlt
es
mov
imul
aas
sub
jb
and
xabort
je
iret
add
outsl
xchg
xchg
lcall
aaa
add
arpl
mov
ds
add
pop
lods
or
cmpsb
adcl
xchg
jge
jp
sbb
pop
add
dec
mov
leave
sbb
rcll
or
mull
mov
std
fcmovu
jle
dec
stos
pop
adc
mov
test
sub
inc
pushf
imulb
and
mov
or
xor
add
mov
mov
mov
xchg
and
add
cmp
popf
jo
pop
insl
int3
lds
lret
loop
lock
mov
dec
pop
scas
dec
and
mov
or
rorl
mov
mov
pop
inc
xor
lock
adc
stos
stos
pop
push
lahf
mov
ret
out
fldt
push
inc
mov
ds
cmp
icebp
in
jno
insl
xchg
mov
test
inc
inc
cmp
fucomip
je
sub
pop
shlb
push
cmpl
pop
cmp
adc
sbbl
jno
sbb
pop
mov
pop
jecxz
cmpsb
inc
inc
cmpsl
clc
jbe
or
lcall
into
insl
leave
idivb
jno
data16
lcall
mov
pop
pop
and
pop
out
fstl
jl
xor
add
xor
inc
pause
adc
sbb
inc
fdivl
mov
ret
lcall
lret
jle
int3
les
loopne
xchg
sbb
add
or
inc
mov
cmp
push
addr16
fidivrs
adc
cmpxchg
push
xor
test
in
adc
cmc
jle
fstpt
jl
mov
cmp
lret
inc
inc
ret
dec
push
cmp
icebp
xchg
adc
or
mov
or
xchg
lahf
clc
stc
loop
shlb
sti
add
aaa
in
dec
mov
mov
inc
and
adc
nop
daa
or
gs
rcrb
pop
add
rorb
dec
add
out
push
mov
push
push
sahf
fmuls
pop
jb
pusha
stos
or
dec
add
movsl
pop
mov
pusha
push
lahf
add
lcall
cmp
mov
add
jecxz
add
je
push
or
aam
test
pusha
pop
dec
int3
or
adc
inc
jbe
sub
addr16
lods
aas
dec
enter
out
lcall
jo
xor
and
xor
outsb
jp
adc
les
test
fs
and
sbb
mov
jae
lret
ret
inc
dec
ret
inc
inc
rolb
lcall
cmp
jl
pop
push
or
stos
jns
stos
lods
mov
dec
inc
xor
insl
enter
pop
mov
ja
jno
jmp
sub
imul
adc
test
xchg
pop
jae
fsubs
lcall
or
test
xchg
push
int
daa
mov
adc
les
add
xchg
add
sbb
and
ja
shll
sub
sub
cmpl
add
mov
cld
adc
int3
xor
dec
es
mov
cli
push
outsl
ljmp
ret
mov
jb
insl
and
push
js
sub
xchg
les
fucomip
insl
ljmp
push
add
dec
sub
andb
rorb
fists
and
out
push
mov
jl
fnstenv
nop
pop
xchg
pop
sahf
dec
pop
pop
pop
cli
movsb
sub
scas
arpl
ret
mov
adc
cld
jmp
jmp
inc
fwait
pop
mov
xchg
pop
lcall
sbb
pop
iret
in
cmc
lock
insb
arpl
mov
jmp
filds
rcrb
roll
in
call
cmp
xor
mov
push
xchg
ljmp
mov
andl
mov
mov
btc
mov
xchg
sbb
lods
mov
xchg
int
mov
lss
orb
and
add
add
cmpb
and
roll
insb
sub
fstl
pop
je
push
repz
pop
das
sub
push
nop
push
xor
lea
mov
adc
addl
push
les
imul
imul
cmp
jl
loopne
and
cmp
inc
not
cmc
imul
jp
leave
jecxz
testb
push
ret
repnz
jno
mov
negl
fisttpl
pop
out
mov
cmpsl
mov
lret
jo
xor
dec
or
sbb
push
push
aas
xchg
mov
add
adc
dec
ret
adc
xchg
jo
mov
fs
or
fsts
imul
insb
mov
incl
xchg
sbb
testb
inc
pop
outsb
cld
pushf
cmp
and
jle
sti
lea
mov
test
mov
push
aas
nop
aas
add
jne
adc
in
cwtl
adc
mov
push
repz
and
lret
push
and
outsl
int
pop
les
sbb
pop
addr16
sub
or
pop
pop
jnp
cmp
roll
das
lock
mov
aaa
ds
lcall
and
in
cmp
enter
popa
addb
shll
xchg
nop
sbb
add
xchg
dec
and
push
inc
sbb
ljmp
fcom
sbbb
mov
xchg
repnz
mov
add
jne
pop
add
add
or
mov
mov
adc
aam
adcl
mov
outsb
mov
sbb
shrl
lock
mulb
pusha
mov
mov
lcall
xor
pop
add
rcr
push
or
mov
loope
jg
into
or
xorl
xlat
and
adc
lds
ret
cmp
push
mull
xor
push
jmp
pop
nop
sti
loop
nop
xor
mov
add
add
iret
iret
and
pop
adc
dec
xor
pushl
mov
std
dec
and
leave
bound
test
outsb
and
push
push
add
bound
gs
enter
xchg
pop
bound
fildll
pcmpgtd
mov
fwait
and
xor
xor
sbb
xor
rcll
mov
mov
jae
xor
aam
js
xor
sub
fucomip
clc
aad
nop
mov
sub
sub
sub
xor
icebp
pop
mov
call
pop
pushf
call
cmpsl
and
add
pusha
loopne
push
dec
mov
icebp
adc
xor
insb
sub
add
pop
pop
and
into
repz
pop
adc
mov
scas
dec
das
mov
jl
sub
test
es
ss
jo
iret
cmp
or
inc
sbb
rol
test
nop
sahf
mov
add
mov
mov
cltd
rorl
arpl
push
xchg
or
adc
dec
stos
mov
mov
cwtl
hlt
sbb
and
xchg
mov
push
add
adc
sub
or
std
or
incb
lret
dec
pop
sub
cmpsl
lock
imul
xchg
push
ret
test
ljmp
mov
pop
push
xchg
les
sub
dec
pop
cmp
orl
sub
insb
mov
rcll
xchg
xchg
push
push
ja
mov
rclb
into
jns
jecxz
push
dec
out
mov
push
gs
stos
jp
in
outsb
add
rcrl
pop
cltd
ds
sub
or
mov
push
hlt
mov
imul
push
xor
and
xor
add
je
push
xchg
mov
jecxz
and
mov
daa
test
jb
fsubs
sub
or
mov
in
push
mov
cs
cmc
pop
inc
push
sbb
and
and
adc
mov
sub
mov
sbbl
push
mov
es
je
mov
inc
adc
jl
or
push
data16
mov
popa
dec
push
dec
rorl
jo
xchg
mov
and
add
out
cwtl
or
pop
push
lods
xor
outsb
or
xchg
and
adc
enter
mov
sbb
inc
inc
fucom
add
mov
stos
pop
movsb
dec
insb
test
std
and
jmp
in
stos
mul
cmp
xchg
push
cmpsl
aam
nop
insl
cli
xchg
call
fs
mov
inc
hlt
jb
mov
push
inc
dec
test
xor
cmp
mov
neg
add
adc
imul
in
outsl
cli
or
xchg
inc
add
mov
data16
faddl
jns
scas
dec
xor
icebp
jns
xchg
movsb
mov
fstps
sbb
and
dec
add
dec
mov
loop
push
movsb
ret
mov
orb
pop
jl
jg
les
dec
xchg
cwtl
sub
mov
ret
es
test
cltd
fsubrs
pop
dec
js
adc
xchg
jne
jmp
popa
add
cmp
adc
mov
ja
xchg
fistpl
and
xor
lock
inc
sub
outsb
stc
test
add
adc
int
cmpl
xchg
and
inc
mov
lret
adc
inc
pop
iret
push
orl
aad
in
xor
inc
enter
mov
cwtl
mov
ds
sbb
pop
sub
popa
pusha
cmp
out
cmp
pushf
jl
je
inc
cli
inc
dec
and
or
pop
mov
sbb
adc
pusha
jle
pop
dec
out
scas
int3
or
mov
xor
push
orb
or
cmp
sub
test
cmp
dec
adc
lock
add
mov
out
push
aaa
jle
std
mov
mov
rcrl
insl
cmpsl
cmpl
mov
rolb
fisttpl
nop
jo
xchg
push
sub
pop
and
adc
or
in
mov
jno
and
add
add
test
pop
je
js
in
sub
xchg
data16
sub
inc
mov
lds
and
sub
ret
add
or
pop
rclb
adc
mov
pop
ds
mov
or
popa
dec
jno
inc
ret
mov
cwtl
in
fs
mov
gs
and
cld
push
push
stos
mov
sbbl
fwait
push
add
call
inc
jecxz
or
ljmp
xor
mov
ret
or
cmp
fadds
jl
pop
or
push
mov
loope
inc
mov
xadd
ffreep
stos
sub
mov
fwait
daa
test
xor
sub
icebp
movsl
inc
pop
xchg
dec
push
xchg
xor
dec
fisubl
sbb
adc
ret
add
sub
mov
imul
outsl
adc
inc
and
xor
jmp
mov
test
xor
adc
rorl
xor
fs
or
jno
incb
mov
sub
lret
inc
inc
aaa
cmc
jl
popl
and
mov
jnp
and
or
and
lds
pop
aad
mov
movsb
sbb
jae
mov
inc
cmpl
aas
jb
and
adc
or
bound
sub
adc
cmp
sbb
and
test
inc
popf
movsl
sahf
loop
idivl
mull
adc
mov
popf
subb
add
mov
push
and
ja
shlb
mov
inc
cmpsb
mov
sarl
jp
push
add
je
shll
notl
aaa
daa
jo
xchg
inc
mov
and
mov
push
mov
test
sbb
push
insl
cli
aas
jg
mov
cmpb
or
ds
adc
icebp
dec
movsb
pop
repz
into
and
push
enter
bound
aam
addb
mov
ja
outsb
js
add
push
jge
or
icebp
stos
or
pop
jo
xor
in
xchg
mov
cli
fdivl
dec
jl
xchg
mov
xchg
movsb
stc
outsb
and
adc
cmp
dec
ret
cmp
sbb
addr16
jne
rolb
pop
push
std
xor
aas
icebp
and
test
es
push
dec
inc
dec
call
cmp
fcoms
aas
in
scas
out
es
test
pop
adc
adc
xor
lock
jb
xchg
cli
es
adc
test
xchg
add
mov
add
or
add
push
and
cmp
jb
mov
jo
or
push
adc
fs
or
inc
mov
adc
sub
pextrw
movsl
cmpsb
in
push
pushf
mov
subl
fists
in
jae
outsl
cmp
pop
jle
lock
or
add
loopne
jnp
push
aam
test
adc
inc
bound
pop
int
ja
popa
pop
xchg
mov
sbb
add
cmp
push
push
jecxz
pop
dec
js
es
aad
movsb
push
repnz
les
cmpsb
inc
pop
pop
mov
clc
mov
xor
add
in
sbb
test
add
sub
je
lds
push
shl
jg
adc
sbb
pop
nop
mov
xchg
enter
xor
lods
repz
lea
mov
and
fwait
and
and
mov
fcomps
jmp
inc
jne
mov
xor
add
das
fucomi
mov
shll
lret
mov
push
imul
or
mov
dec
inc
stos
pop
test
bound
inc
int
lret
int
sub
test
loope
lods
inc
js
jmp
out
mov
pop
das
lea
inc
mov
jge
ret
xor
aaa
or
sub
arpl
stos
dec
fmulp
loope
cmp
cmp
lret
ret
in
pop
aas
loope
fwait
push
shll
cmpsl
stos
int
mov
push
xor
pushf
xor
mov
ret
std
jl
and
pop
push
and
add
or
in
cmpsl
lahf
jno
fsts
and
mov
fsubl
push
xlat
pop
mov
fsubrp
and
outsb
and
fs
jbe
cmp
cmpsb
and
das
insb
or
mov
cmpsb
loope
mov
dec
xor
jmp
aam
mov
mov
mov
push
insb
icebp
ja
adc
test
loop
or
xor
loopne
stos
fisubs
std
icebp
add
rol
imul
aam
or
addb
sub
pop
test
inc
rolb
lods
movl
hlt
push
fsubs
pop
sbb
dec
jo
push
outsl
fimull
inc
xchg
sti
outsl
lcall
add
and
dec
ret
mov
movsb
mov
sarb
adc
insb
cs
mov
mov
mov
cmp
dec
andl
in
jnp
jg
pusha
and
xchg
inc
push
ja
movsb
add
push
pushf
jle
and
push
test
test
xchg
popf
and
and
sub
pop
dec
pop
ds
jmp
xor
loope
sti
stos
fistpl
and
dec
dec
hlt
mov
cmpsb
lahf
rorl
das
adc
out
imul
cmpsb
into
mov
rorl
adcb
mov
lret
sub
subl
jmp
les
sbb
push
gs
roll
push
lods
test
push
addb
test
inc
adc
bound
adc
sbb
dec
pop
mov
inc
jmp
dec
xchg
repz
sbb
and
add
cld
xor
push
je
add
xchg
fdivs
fistps
rcrl
adc
sti
cmpb
stos
mov
rcll
gs
int3
inc
repnz
dec
pop
jne
mov
sbb
adc
lods
aam
or
int
and
cmp
mov
mov
lea
lret
ds
hlt
cmp
jo
xor
aaa
insl
fildl
add
lcall
add
and
dec
push
jno
or
idivl
mov
lock
addps
add
pop
push
pusha
adc
and
add
sbb
xchg
mov
test
xchg
or
insl
rcll
out
or
xchg
pop
ret
ja
leave
mov
out
xchg
adc
mov
in
sbb
lock
inc
mov
aad
loopne
mov
addr16
andl
mov
popa
scas
pop
xchg
scas
add
add
sbb
pop
outsb
jne
out
push
test
cmpsb
loope
ljmp
std
mov
xor
xor
inc
mov
adc
arpl
fmull
add
mov
gs
push
or
sub
lahf
or
js
cmp
jge
je
lret
adc
sub
test
or
xlat
stos
mov
and
push
adc
mov
fnstcw
rclb
call
inc
mov
jnp
pop
pushf
pop
dec
or
jp
cmpsl
jle
ficomps
push
aam
sbb
popf
jno
jle
mov
xor
adc
and
movsb
and
mov
xchg
or
out
out
xor
loope
xchg
add
inc
lret
adc
mov
mov
cmp
add
popa
les
dec
or
fstpt
fmull
add
push
cmp
es
jmp
mov
icebp
enter
or
mov
mov
pop
adc
pop
cmc
inc
cld
out
lahf
inc
jl
jp
mov
mov
inc
roll
js
lock
insl
pop
scas
and
jno
js
or
lock
js
push
fnstsw
lahf
push
shl
jne
xor
and
stc
xchg
pop
xchg
xor
jbe
mov
jmp
imul
xlat
fiaddl
lahf
aam
sbb
sub
fisubs
push
call
add
lods
mov
xor
dec
sbb
xchg
fldenv
or
and
mov
outsl
cwtl
mov
call
popa
loopne
jg
in
dec
xchg
add
xchg
popw
lea
enter
mov
mov
movsb
inc
mov
mov
jb
hlt
xor
cmpsb
inc
sbb
xchg
mov
es
jno
enter
ret
jb
jbe
rcrl
jmp
jne
nop
dec
or
gs
mov
cld
cmpsl
mov
cmp
dec
inc
jmp
jge
rorl
icebp
enter
adc
test
mov
mov
cmpl
or
dec
lods
mov
popl
pop
shlb
sub
sbb
stos
ja
lock
shll
sub
data16
ds
dec
mov
data16
or
push
adc
mov
mov
sub
icebp
jo
test
dec
out
mov
xchg
repnz
fnstenv
add
xorb
bound
xlat
lock
test
sub
jecxz
pop
push
insl
setne
push
mov
push
pop
aaa
sbb
or
cmp
addr16
outsb
sbb
push
push
movl
or
and
pop
ficomps
punpcklbw
roll
pop
and
pop
testb
repz
clc
dec
cmp
fbld
orb
loopne
push
fstpl
scas
jecxz
add
mov
movsb
pop
test
pop
push
sbb
and
pushf
rolb
dec
sbb
les
sub
or
ljmp
jecxz
dec
inc
dec
lret
rcll
fimull
and
hlt
addl
cld
inc
icebp
mov
int3
or
xor
outsl
js
ret
push
bound
clc
pop
lds
jp
test
enter
mov
add
fcoms
mov
adc
dec
sbb
data16
fiadds
dec
push
xchg
and
clc
push
adc
add
test
jge
cmpsb
testl
ja
lock
aaa
mov
add
scas
pop
adc
jae
jp
out
dec
pop
in
mov
out
mov
ret
mov
ds
add
mov
or
mov
cmp
xor
jge
fwait
xor
int
aad
loop
lds
cmpsl
aaa
test
and
push
pop
popa
or
sbb
add
fisubrs
cmc
pop
inc
adc
push
mov
or
jge
add
sbb
testl
rcl
xor
xchg
mov
dec
js
and
xor
shrl
lods
push
jp
mov
in
and
movsb
dec
dec
sbbb
push
in
stc
cmp
les
inc
cmpsl
js
addb
mov
dec
adc
and
movl
push
rclb
scas
add
inc
repz
dec
and
push
aas
adc
cwtl
icebp
cmp
sbbl
dec
cmp
add
loope
daa
dec
sbb
jne
repnz
mov
ljmp
inc
call
add
jne
push
call
mov
subl
pop
call
sbb
dec
xchg
xchg
lahf
clc
add
jl
inc
mov
push
mov
or
or
cmp
adc
xlat
sti
test
sbbl
pushf
lock
loopne
and
pop
roll
mov
sub
lcall
mov
jecxz
jmp
shll
cmp
pop
add
and
mov
std
or
xor
xchg
dec
inc
jecxz
test
push
dec
push
sub
mov
lods
call
pop
sti
xchg
cwtl
adc
and
mov
and
sbb
insl
push
fmulp
outsl
dec
hlt
jae
adc
roll
dec
pushf
add
sti
push
adc
xor
xor
fsubrp
lds
popf
push
pop
data16
cmpsl
mov
mov
addl
mov
or
inc
mov
imul
icebp
clc
add
or
imul
cmc
add
lea
jecxz
scas
or
sarl
mov
jmp
or
sbb
rcr
mov
or
adc
aam
dec
jg
push
faddp
std
inc
fwait
or
mov
push
pop
icebp
push
inc
add
enter
dec
dec
inc
fstps
ret
xchg
inc
movsl
fwait
push
lods
movsl
xchg
jge
leave
mov
leave
cmpl
mov
shl
push
adc
xlat
cmc
cmp
pop
and
lret
lret
js
push
cmc
aas
mov
enter
pop
add
scas
incb
lods
loop
xchg
jnp
mov
cmp
jl
push
add
movsb
inc
dec
push
mov
mov
out
xor
test
es
icebp
gs
fbld
in
mov
pop
sbbl
jp
mov
iret
push
pop
push
gs
repnz
fdivrs
pusha
sub
adc
inc
data16
mov
arpl
lahf
pop
test
test
mov
flds
add
aad
push
adc
incl
test
sbb
jecxz
stos
lahf
repnz
adc
dec
pop
aaa
xchg
mov
dec
jo
mov
pop
jb
hlt
inc
cmp
jnp
movsb
jecxz
pop
mov
push
out
imul
out
and
jo
lret
mov
shrl
mov
jbe
das
or
mov
sbb
arpl
add
sarb
xchg
mov
jecxz
shl
popf
loope
subl
jl
add
cwtl
loope
in
adc
pushf
xorb
out
inc
mov
or
leave
xor
pop
sub
fcmove
decb
das
in
adc
cmc
xor
movsl
mov
cmp
jbe
cmp
mov
jecxz
inc
push
das
add
test
cli
sbb
sbb
jg
mov
push
stc
dec
shrb
sub
push
scas
hlt
movsb
fdiv
sbb
mov
cmpsb
cli
cmp
jb
mov
pop
lret
loop
pusha
rorb
call
push
mov
fisttpll
fchs
jo
test
cmpsb
movsb
or
pop
xor
and
cld
jb
pop
popf
addl
lret
jl
mul
pushf
cmc
lods
rorl
imul
mov
movsb
mov
repz
mov
imul
fmulp
inc
lahf
in
dec
sbb
ja
push
xchg
inc
jp
adc
or
or
or
add
insl
or
or
imul
insb
movsb
inc
lahf
jg
push
xchg
mov
filds
shr
lcall
push
push
hlt
or
mov
dec
movsb
mov
imul
cmpsl
fs
mov
cmp
xor
or
ljmp
shrb
dec
add
push
xor
ss
ret
sbb
mov
or
addr16
mov
mov
in
mov
mov
pop
scas
mov
xchg
aad
dec
pop
movsb
mov
cmc
mov
jb
ds
adc
xchg
addb
js
mov
cmp
and
jl
shlb
push
cmpsb
lds
aam
mov
orl
inc
loopne
hlt
jbe
inc
lods
sub
pop
insl
pop
adc
push
adc
adc
inc
pushf
std
lahf
rol
icebp
dec
push
or
rclb
pop
pop
mov
dec
ret
push
ret
lret
mov
gs
jge
jecxz
push
xchg
fsubrs
clc
clc
out
jo
xchg
push
mov
cmc
jg
or
aad
inc
fimull
cmp
sub
pop
fisubl
or
nop
inc
sahf
rcrb
cs
imul
xchg
and
adc
shll
pop
pop
and
stc
cmp
jo
dec
push
pop
loop
lahf
imul
shrb
orl
inc
imul
push
cmc
arpl
and
roll
mov
movsb
in
xchg
in
and
ja
loope
push
push
fwait
push
iret
cmp
out
mov
ljmp
push
ret
mov
mov
push
mov
and
fmuls
in
in
test
sbb
lahf
nop
add
dec
clc
dec
adcl
dec
nop
cmovbe
incb
scas
xor
inc
jbe
mov
cmp
rorb
dec
push
ja
stc
lock
mov
mov
mov
les
xchg
inc
pop
sbbl
rol
cmp
aas
nop
bound
sub
dec
jo
fimuls
cmp
sbb
adc
xor
push
fldt
xor
sarl
add
dec
pop
pop
inc
subb
jl
ljmp
pop
in
outsb
lahf
nop
jmp
mov
icebp
add
shlb
xchg
or
fadd
inc
jae
int3
add
scas
lock
inc
mov
shlb
insb
or
pop
leave
les
aas
inc
cmpsl
rcrb
push
mov
rorb
ret
push
inc
aaa
inc
jnp
dec
ljmp
repnz
outsl
sub
sub
loopne
dec
mov
add
mov
xchg
cmpsl
or
ds
pushf
add
pop
mov
iret
and
nop
or
in
jge
in
push
subb
xor
mov
inc
pop
adc
ljmp
icebp
adc
sahf
nop
loop
decl
mov
cmp
lods
mov
icebp
cld
dec
jne
fimuls
and
fsubr
or
xchg
and
and
orl
mov
lcall
js
scas
xchg
push
jecxz
clc
sbb
pop
and
push
adc
or
dec
lods
lods
mov
mov
add
popa
int3
mov
fmulp
nop
sub
cmpsl
or
xor
or
sbb
mov
cli
sub
movsb
mov
leave
sbb
lret
stc
loope
leave
or
add
int3
movsb
sub
push
jns
jbe
cmp
sbb
pop
gs
xchg
jle
ret
jge
mov
cmp
les
into
dec
jb
dec
add
mov
mov
mov
dec
daa
out
in
xchg
rorb
push
jne
push
mov
adc
pop
add
negb
out
adc
pop
dec
rclb
ds
mov
lock
lods
push
fidivs
xor
cltd
xor
mov
andb
adc
bound
out
push
and
mov
and
or
ret
mov
or
mov
cld
add
sub
lock
int3
dec
mov
cmp
mov
add
xor
pop
sub
shlb
and
sub
push
out
jecxz
aaa
mov
jnp
xor
push
scas
jge
mov
xchg
outsb
mov
add
pop
xlat
jl
xor
loop
push
inc
sub
cmp
pushf
pop
fldl
fcoms
std
or
adc
or
or
adc
sub
push
enter
mov
xchg
jl
adc
jo
sub
add
aaa
dec
push
int
aad
mov
add
outsl
pop
adc
cwtl
jle
push
adc
jl
dec
shl
adc
and
push
sbb
cmp
xor
add
push
lahf
jo
inc
test
jecxz
mov
inc
mov
lret
test
pushf
pushf
pop
hlt
clc
ss
out
test
cli
ret
add
ljmp
or
pushl
cmpb
shll
and
inc
idivl
loop
add
xchg
push
push
inc
ret
lret
pop
add
inc
stos
pop
sub
daa
loop
subb
das
jp
mov
movsb
dec
and
and
or
fldcw
pop
add
cmp
jno
enter
loope
jno
jecxz
push
insb
daa
dec
or
mov
loope
or
fcoms
xor
lret
test
outsl
pop
jo
cmpb
mov
mov
and
mov
cmp
mov
mov
ret
mov
mov
ds
inc
and
std
dec
mov
fldt
xchg
mov
xchg
adcb
dec
arpl
or
lret
jmp
mov
xchg
or
pop
jne
int
dec
pushf
push
pop
sub
cwtl
sbb
cmc
add
inc
inc
cmp
mov
test
adc
repz
sbb
ja
and
inc
mov
inc
cmp
les
dec
pop
push
mov
lds
cmp
aad
mov
inc
add
mov
repnz
out
vpaddsw
xor
ret
sub
jo
roll
fwait
lahf
mov
out
sarb
jns
xchg
mov
rorb
ret
bound
leave
mov
mov
scas
push
repnz
int
ds
mov
fidivl
cmp
shl
add
adc
flds
cmpsl
ljmp
dec
adc
movsl
out
stos
jne
clc
and
mov
sub
or
out
scas
sbb
inc
xchg
cmp
fldt
sbbb
mov
sbb
xor
fs
fs
and
dec
sbb
sbb
cltd
xlat
flds
repz
mov
out
mov
in
les
pop
mov
dec
cmp
out
or
mov
stos
cmpsl
inc
cmp
or
or
fwait
insb
test
loop
pop
mov
test
push
scas
je
mov
je
jne
sbb
mov
ds
enter
mov
lods
loopne
jae
push
jb
push
sub
ficoms
lahf
lret
xchg
sub
inc
test
mov
mov
and
mov
mov
test
jp
cli
add
jl
pop
or
sub
cmp
mov
cmp
xor
rorb
adc
dec
sbb
pop
inc
push
jle
mov
shlb
pop
inc
loop
or
pop
push
lods
sbb
pusha
push
inc
mov
inc
adc
add
sub
pop
jb
loopne
push
xor
ljmp
outsl
in
mov
adc
pop
mov
loop
loope
fists
stos
fisttpl
pop
sub
aad
scas
pop
jne
or
out
xlat
jecxz,pn
ljmp
pop
lods
xchg
les
and
or
jge
and
cmpsb
enter
mov
mov
lahf
stos
movsb
movsb
mov
lds
loopne
in
pop
out
lds
mov
cmp
add
xchg
cmp
rorb
loope
dec
xchg
loopne
add
fists
les
outsl
stos
in
jb
ljmp
mov
pop
mov
popa
xchg
test
lahf
cmp
hlt
cmc
jo
aam
dec
pop
test
add
stc
pop
mov
xor
lcall
lea
cltd
xlat
xor
mov
ret
inc
fistpl
popf
jno
cs
idivl
loop
add
sub
mov
sbb
xor
dec
add
stos
cmp
cmp
fldt
test
adc
imul
xor
push
incb
orb
adc
nop
cmp
cmp
aam
mov
test
add
in
and
sbb
add
sub
sbb
jne
ret
rcl
mov
mov
dec
pusha
leave
int
scas
icebp
scas
icebp
inc
fiadds
xor
in
dec
aam
imul
lds
lea
or
jae
movd
test
inc
inc
stc
aad
daa
xchg
xchg
aas
mov
imul
test
fsubp
stc
cmp
mov
aaa
add
and
cmp
clc
ret
push
arpl
movsl
or
mov
out
addb
shlb
loope
mov
insl
xchg
adcl
mov
add
add
mov
adc
inc
xchg
aad
or
dec
sarl
stos
or
jae
cmc
add
add
inc
fsubs
dec
add
fwait
sbb
cli
aam
mov
jecxz
lods
adc
cli
mov
outsb
dec
mov
pop
out
sahf
or
inc
out
xchg
jle
or
xchg
notb
adc
loope
loope
push
mov
and
adc
mov
ss
push
mov
cs
sub
push
mov
mov
mov
fstl
xchg
nop
push
push
mov
cmp
pop
incb
movsb
mov
adc
or
add
or
or
lock
shlb
adc
or
icebp
adcb
or
sbb
jmp
or
jb
lods
add
xchg
push
jae
inc
lea
adc
in
lods
pop
pop
imul
out
mov
inc
inc
and
push
clc
insb
jns
xchg
mov
popa
xchg
xlat
inc
adc
xchg
mov
pushf
adc
jmp
cmp
fs
jno
in
dec
fdivl
movsl
outsb
add
push
out
xlat
push
sbb
pusha
sub
lock
inc
cmp
push
sub
xchg
test
sbb
or
aam
stos
mov
add
push
jno
pusha
pushl
ljmp
sub
sbb
scas
jne
call
xchg
mov
imul
mov
test
xor
rcrl
decb
rcll
and
pop
xchg
inc
push
xchg
hlt
jno
push
loope
xlat
icebp
dec
lret
ret
loope
rcll
sub
imul
mov
int
je
push
mov
lock
shr
or
or
xor
lds
inc
xor
xor
hlt
inc
loop
rcrb
fnstsw
pop
jp
add
pop
jl
sub
sbb
or
xchg
lds
mov
pop
cli
push
scas
inc
movsl
sbb
mov
sbb
loopne
cmc
outsb
push
lds
sub
into
scas
or
push
lea
loope
add
push
fldenv
divl
and
fdivs
les
outsb
rcr
cmpsl
or
adc
add
mov
pop
mov
xchg
jl
dec
mov
cmpl
sub
jbe
bound
aaa
pop
loopne
dec
stos
bound
add
dec
sbb
out
cmp
add
mov
mov
outsb
and
pop
rol
rclb
sbb
add
lret
xor
cmpsb
push
pop
in
fistl
inc
inc
sbb
jl
clc
xlat
sub
fbld
push
ss
adc
sbb
rclb
int
stos
fsubrl
sbb
lcall
adc
sbb
xor
int3
shlb
sahf
call
push
roll
inc
mov
push
shll
xchg
cmc
pop
jb
div
mov
repnz
sub
mov
fwait
add
xor
sbb
ret
imul
mov
in
subl
or
adc
cmp
xor
cwtl
iret
lea
cmp
xchg
inc
aam
xor
push
adc
mov
adc
sbb
add
push
cmp
inc
leave
ret
aad
das
test
xor
movsb
sub
xor
push
mov
mov
sub
roll
sbb
lcall
mov
shr
pop
or
cmpsb
sub
shrb
xorl
repnz
add
dec
xchg
mov
dec
daa
in
ffree
adc
and
mov
rcrb
sbb
sub
mov
int
fdivrl
sahf
xor
adc
sbb
mov
inc
jp
sbb
push
lds
pusha
testl
and
or
dec
pushf
js
inc
repz
sarb
dec
cmp
lret
into
or
add
fs
mov
dec
cmp
call
inc
adc
jl
cmpb
sbb
jbe
divb
shrd
mov
add
add
mov
leave
pusha
sti
loope
push
pop
movsl
push
test
push
ret
bound
mov
push
in
mov
pop
leave
pop
dec
pop
sti
dec
push
xor
push
jge
je
jmp
scas
dec
inc
cmp
or
sahf
les
clc
lea
push
lods
lahf
sbb
test
xor
adc
pop
adc
cmp
add
and
sarl
loopne
mov
stos
xchg
fnstsw
icebp
cmp
adc
mov
mov
xor
push
dec
fnstcw
iret
mov
lret
bound
cmp
sbb
stc
rolb
add
mov
loopne
dec
mov
mov
lods
xor
add
cmc
icebp
inc
ret
push
mov
mov
sbb
shll
mov
xlat
outsb
xchg
mov
cmpsl
out
loop
in
cmpsb
loop
push
sbb
ljmp
mov
xchg
mov
cltd
adc
lock
add
mov
xchg
ds
lcall
hlt
sbb
movb
xchg
adc
sub
sbb
xor
cmpsl
cwtl
mov
flds
mov
cmp
loope
movsl
cmc
clc
shlb
movsb
pop
fcoms
ds
dec
cld
push
xchg
mov
lea
jmp
fs
and
pop
mul
mov
ficompl
cmp
push
mov
adc
pop
mov
mov
les
pusha
xlat
adc
test
cli
adc
hlt
lods
or
test
stos
filds
pusha
jo
hlt
rolb
jp
mov
call
sbb
inc
push
or
lock
addr16
xchg
addl
aaa
pop
sbb
pusha
and
mov
nop
js
pop
popf
mov
jl
sti
inc
pop
adc
les
aam
jecxz
cmpsb
clc
pusha
cmpsl
cli
sub
sub
mov
mov
repnz
ds
into
push
sbb
push
xchg
push
dec
jb
cwtl
stos
xchg
inc
andb
mov
sahf
adc
xor
test
push
push
imul
dec
repz
or
insb
leave
in
push
cmp
mov
test
pushf
les
add
arpl
loope
stc
or
sbb
mov
adc
lock
adc
std
fisubl
add
sub
adc
test
loope
or
adc
mov
add
fstl
mov
cmp
sti
cli
sarl
jbe
test
mov
mov
aad
mov
loope
dec
ja
pop
shll
dec
out
add
add
add
in
cs
mov
loope
outsl
dec
sahf
add
xor
lds
shll
aad
outsb
arpl
xchg
mov
ret
jo
es
or
and
cld
subl
xchg
mov
bound
pop
mov
mov
xchg
mov
sub
mov
or
sti
xor
fidivs
lret
pop
mov
jo
sbb
mov
insb
cmp
loope
sti
int
rorl
cmp
sbb
lret
imul
aad
xor
adc
jbe
into
stos
cmpb
mov
imul
loop
cmc
sub
adc
ret
int
pop
and
fiaddl
aad
or
inc
pop
cmp
rorb
dec
jb
imul
mov
adc
rclb
mov
dec
call
pop
rolb
sbb
inc
sahf
jmp
loope
add
cmp
mov
ficoml
shll
in
cmpb
loope
mov
lcall
nop
cmc
or
rclb
in
or
xchg
pop
and
cmc
int
add
das
int
inc
cmp
insl
ljmp
and
inc
jnp
mov
xchg
xchg
sub
xor
inc
inc
push
fnsave
adc
roll
gs
cmp
and
and
outsb
sti
in
jp
lods
jp
and
dec
call
pop
fs
mov
aaa
and
sbb
test
ljmp
les
cwtl
fcmovb
lods
loop
outsl
pop
sbb
or
out
hlt
rorb
or
shlb
repnz
aad
rcrb
pop
pushf
mov
cmp
rcl
xorb
adc
xchg
adc
pop
cld
stos
or
outsl
insb
insb
insl
das
test
push
add
cmp
or
stc
jp
xchg
out
shrb
ret
mov
xor
lea
xchg
add
mov
xchg
adc
shll
and
mov
add
inc
pop
mov
mov
int
cmpsl
iret
xchg
test
inc
or
mov
pop
outsl
dec
arpl
bound
sahf
xchg
mov
add
rolb
adc
sub
mov
imul
cmc
add
leave
mov
adc
adc
xlat
adc
xlat
mov
mov
popa
jo
scas
addb
fs
jl
jo
pop
mov
inc
inc
adc
push
ret
faddl
inc
popf
adc
add
mov
aaa
or
jge
lcall
arpl
int3
cmpsl
outsl
aad
insl
ret
fnstcw
sub
test
sub
repnz
jno
mov
pop
cmp
ja
mov
movsl
pop
xchg
stc
jbe
test
pop
sbb
outsl
call
cmc
sbb
adc
cmp
loope
movsb
call
and
inc
pop
sub
cs
fwait
aas
cwtl
cwtl
clc
mov
cmp
shrl
sbb
mov
push
mov
sub
adc
ss
xchg
pop
sbb
cmc
fisubrs
inc
xchg
andb
dec
rorb
mov
hlt
int3
sub
mov
inc
mov
sub
or
mov
fwait
test
jne
sbb
sbb
add
pop
psubsw
les
push
and
jecxz
test
out
adc
test
sbb
or
pop
push
cmpl
or
mov
stc
adc
fisubrs
push
pop
mov
and
addr16
outsl
ljmp
inc
sbb
mov
dec
sahf
in
dec
push
adc
pop
enter
jb
and
fists
cld
or
cmp
gs
jne
gs
das
or
pop
mov
fwait
push
je
xlat
clc
call
cmp
mov
inc
lds
pop
outsb
pop
lret
inc
adc
ds
dec
pusha
add
and
and
jp
jge
insl
lret
outsl
sarl
jo
sbb
xchg
push
lcall
pop
jb
and
or
pmovmskb
imul
push
arpl
dec
scas
loope,pt
addl
push
repz
insb
arpl
je
adcl
arpl
lock
movsl
and
rorb
xchg
adc
push
cmp
loop
popa
cli
rorb
dec
icebp
pop
lods
clc
dec
push
jno
inc
and
gs
stc
lahf
xchg
test
cmp
xor
insl
in
jmp
pop
push
cmp
or
add
and
push
scas
jo
push
push
push
in
or
and
popa
in
or
out
push
mov
cmpsb
jns
fwait
cli
in
sub
and
sbb
cmc
xor
movsl
lcall
inc
cltd
stos
add
mov
or
push
mov
pand
fcomi
sbb
loop
add
cwtl
pop
pop
or
sbb
ljmp
push
dec
int
enter
sbb
fnstsw
jecxz
pop
rcl
repz
mov
xlat
fsts
aam
jnp
mov
or
mov
mov
es
clc
loope
js
imul
cmp
into
xchg
xor
push
inc
jge
mov
mov
dec
vmcall
add
pmulhw
cwtl
xor
cltd
bound
add
cmc
xlat
movsb
lahf
inc
sbb
mov
mov
insl
in
jo
notl
out
mov
shrl
pop
jl
es
xor
out
popa
fisubrs
add
adc
mov
test
lea
sbb
data16
mov
jne
mov
xlat
add
loop
movsl
push
outsb
xchg
mov
test
fidivrl
int3
jl
fsubs
les
or
fiaddl
les
lret
movsb
jns
inc
xchg
subl
aad
lock
sahf
or
mov
in
lods
cmp
popa
jg
inc
mov
sbb
fsubrp
xchg
cmp
pop
pop
cmp
test
mov
lret
outsb
punpckhdq
inc
mov
cmpb
add
sub
pop
lcall
mov
xor
lods
and
pop
inc
rorl
les
add
sbbl
mov
aam
mov
ja
pop
movsl
arpl
jle
mov
or
mov
shll
inc
cld
rcrb
into
inc
outsl
pop
inc
inc
push
mov
aaa
popf
test
stos
pop
and
mov
repz
mov
cld
inc
xchg
sub
cltd
dec
or
dec
and
inc
loopne
repnz
cmp
mov
xchg
movsl
xlat
push
in
sub
jo
test
sbb
cmpsb
sub
mov
xor
add
or
test
out
cmp
fiaddl
daa
out
add
add
test
adc
rorb
icebp
add
adc
add
mov
or
xchg
pop
shl
add
daa
pop
mov
push
sbb
xorb
test
lock
inc
xchg
mov
ds
push
fcoml
or
pop
cmp
jns
sbb
stos
inc
inc
lock
mov
push
sub
cs
sub
adc
testb
std
pop
pop
push
mov
call
push
sti
data16
add
ja
je
sbb
enter
mov
movsl
in
mov
int
int3
addb
cmp
cmp
sub
mov
inc
daa
or
enter
ja
mov
and
ret
dec
decb
int3
pushl
pop
lret
or
movsb
scas
push
shll
ror
xchg
pop
dec
aad
aas
push
imul
pop
movsb
xchg
push
sar
loopne
stos
je
movsl
sub
incl
fists
push
lock
mov
cli
loope
add
aad
in
adc
xchg
xchg
cmpb
dec
xor
cld
inc
movl
inc
imul
test
mov
push
lods
and
inc
adc
mov
and
cmc
inc
sarb
test
or
mov
cmpl
mov
mov
and
sahf
mov
inc
mov
sub
and
jecxz
pusha
fnstcw
mov
addl
and
dec
mov
fcoml
mov
xor
fidivrl
shrb
cwtl
inc
dec
push
notb
dec
sahf
jb
push
adcl
jg
dec
dec
mov
pop
jmp
mov
cmp
nop
adcl
push
sub
jle
mov
and
je
xchg
mov
adc
or
test
test
and
jae
push
adc
jp
les
mov
loopne
push
mov
mov
arpl
jge
xor
or
lahf
mov
jns
add
add
inc
jno
mov
es
imul
out
add
aaa
testb
test
js
xchg
xor
xchg
xchg
sub
sbb
pop
push
fbld
mov
push
xchg
mov
push
adc
shr
in
xor
mov
loopne
lea
nop
js
es
and
inc
jl
mov
fistps
add
and
and
call
je
aam
cmp
push
fstpl
adc
cld
and
lods
cli
movsb
outsb
repnz
sbb
call
lret
xchg
sbb
and
pop
push
dec
and
call
pop
cmpb
and
les
shlb
icebp
cmp
sbb
mov
and
mov
clc
xchg
mov
dec
and
mov
xchg
rorb
sbb
or
xchg
jne
imul
push
addr16
xor
enter
xchg
adc
push
fidivs
add
iret
icebp
inc
add
jae
je
fstpt
cmp
and
inc
dec
adc
stos
pop
push
ret
fiadds
dec
sub
cmpsb
add
cmp
xchg
popa
fnsave
loope
pop
and
inc
movsb
cld
dec
pop
push
movswl
mov
and
sbb
xor
shlb
mov
shrl
leave
xor
enter
sub
call
mov
test
and
add
ja
rcr
mov
pop
cmp
and
and
pusha
lock
push
push
loop
cmpsl
sbb
jl
rcl
and
sbb
jp
je
cmp
xor
clc
ret
fsubs
test
mov
into
pushf
and
ljmp
test
pop
push
icebp
or
dec
or
pop
sbb
sub
enter
jo
ljmp
out
ds
inc
mov
xor
or
jb
xor
int
inc
aam
ds
out
aad
push
std
enter
xorb
sub
fwait
mov
xchg
adc
test
lret
sbb
addl
outsb
inc
sub
adc
out
and
dec
pop
pop
or
lahf
mov
neg
cmc
daa
xor
and
sub
in
xor
jns
sbb
addl
inc
negl
pusha
jl
seta
or
test
jo
mov
dec
and
mov
xchg
pop
stc
aad
or
clc
inc
ja
daa
aam
test
mov
test
testb
push
out
and
out
iret
or
js
xchg
addb
mov
gs
push
incl
sub
adc
lret
mov
add
out
mov
or
xlat
sbb
sbb
xchg
sbb
mov
mov
rclb
das
pusha
mov
push
fdivl
pushf
mov
jbe
push
inc
mov
mov
test
addr16
mov
pop
fcmovb
pop
mov
pop
and
enter
pop
les
mov
out
aaa
test
scas
ds
pop
sti
je
fsubl
jbe
inc
add
cmp
sbb
mov
stc
pusha
jbe
rol
fiadds
xorl
loopne
icebp
push
mov
mov
pop
aad
stos
xchg
cmc
movsb
test
mov
jle
test
add
pop
aaa
dec
in
dec
add
push
std
sub
clc
and
mov
pop
dec
mov
adc
xlat
mov
xchg
test
invd
call
adc
hlt
dec
add
js
and
icebp
fwait
push
enter
lods
lahf
mov
aad
daa
sbb
aam
add
pop
and
adc
or
daa
push
dec
loopne
shlb
iret
mov
cmp
dec
inc
int
push
sub
sahf
mov
faddl
push
clc
lods
js
push
mov
fisttpl
and
lea
adc
nop
fbld
sbb
sbb
dec
inc
inc
test
xor
inc
inc
mov
mov
mov
andl
jb
add
xor
pusha
xchg
out
cli
jo
mov
ja
sub
pusha
mov
bound
rolb
push
fiaddl
loop
loopne
mov
cld
pop
sub
xor
stos
movsb
xchg
adc
add
sbbb
int
xor
add
mov
mov
mov
or
push
fcmove
and
insb
sub
jb
pop
sbb
sub
jge
cmc
and
and
popf
shl
add
adc
mov
ljmp
pop
aad
hlt
mov
push
sub
xor
mov
inc
sbb
xor
add
cli
call
xorl
test
xchg
cmc
int3
mov
push
fdivrs
pop
jb
and
add
or
fldz
outsb
lds
scas
fmull
xor
dec
aam
xor
add
cmp
jb
xorb
xor
out
sbb
insb
add
jg
mov
or
push
fildll
inc
sbb
test
hlt
nop
mov
test
jg
mov
or
jle
add
js
xor
push
fnstsw
and
xor
mov
movsb
loope
inc
jo
movsl
data16
shll
mov
inc
add
lret
and
fnstsw
and
add
insb
lcall
ljmp
pop
arpl
xor
or
and
jbe
rcrl
cli
repnz
mov
dec
push
xchg
sti
addl
aas
ljmp
cmpsl
inc
dec
mov
fsubs
fadds
orb
test
dec
rorb
arpl
rcr
ret
popa
out
scas
and
xchg
cwtl
inc
and
sbb
adc
jle
nop
les
push
mov
push
dec
or
push
pusha
fs
mov
notb
sub
lret
xchg
pop
rclb
pop
cli
jg
pop
push
enter
inc
push
mov
xchg
pop
mov
aad
xor
wbinvd
incb
and
rclb
or
jl
pop
repz
and
push
cld
adc
cmc
pop
fdivrl
mov
imull
push
xor
stos
pop
or
pop
stc
outsl
in
mov
fs
notb
subl
cld
das
pop
pop
fstps
jo
push
in
enter
sub
jnp
jno
lock
rorb
movsb
or
imull
mov
mov
pusha
push
push
and
mov
and
xchg
mov
xor
sbbb
call
cmp
dec
and
push
adc
and
mov
ficoml
pop
lret
or
and
int3
out
enter
push
dec
inc
fstpl
xchg
in
cwtl
cmpsb
popa
out
add
and
mov
jl
ja
push
pop
dec
fs
pop
daa
pusha
pop
out
scas
cmp
pop
sub
aam
notl
sbb
incl
dec
dec
or
xor
inc
test
psrad
push
mov
stos
adc
jmp
cmp
adc
aaa
sbb
mov
and
jne
mov
lea
push
stos
dec
pop
in
xchg
test
add
jl
sub
xchg
or
pushf
fs
pop
ret
cld
adc
inc
cltd
nop
into
and
incl
jmp
jns
mov
mov
aam
lock
dec
mov
test
xchg
mov
dec
sbbl
insl
movsb
loopne
cmp
add
sbb
add
xchg
mov
xchg
add
loop
out
adc
pop
ja
cltd
add
test
loopne
mov
sub
fists
or
icebp
lcall
pop
cmp
or
adc
pop
cmp
push
xor
loop
jle
stc
mov
jnp
int3
jae
outsl
sub
clc
lods
mov
clc
sahf
iret
mov
fstpl
cwtl
clc
mov
sbb
lods
sub
dec
inc
adc
adc
inc
std
lahf
lahf
pop
aas
xor
push
add
das
shll
sbb
cmpsb
mov
fwait
jmp
je
je
stc
sbb
xchg
mov
nop
ds
imul
fwait
dec
arpl
sbb
rorl
sti
sbb
pop
sub
inc
sbb
and
je
and
hlt
adc
lock
push
loope
mov
loope
shll
push
mov
adc
mov
enter
insb
cmp
dec
jno
push
add
add
sub
rol
cmp
stos
subb
jmp
add
jl
inc
pop
icebp
les
jge
add
popa
mov
pusha
mov
loopne
adc
clc
clc
dec
jp
shl
add
movsb
mov
stc
decl
sarl
jl
jecxz
mov
sub
div
lods
mov
decl
adc
mov
and
jge
es
push
imul
ljmp
lds
jl
imul
mov
sbb
jge
rorb
stos
ss
cmpb
inc
call
addb
pop
ja
into
sahf
dec
mov
jno
pop
xchg
mov
pop
mov
ds
imull
mov
mov
out
es
rcrb
push
in
jl
cltd
clc
in
jle
loope
mov
movsb
adc
add
subl
pop
fcom
mov
or
inc
jbe
sbb
out
insb
enter
mov
mov
clc
sbb
fdecstp
cld
jb
repnz
insb
push
mov
lock
push
je
jl
insl
repnz
mov
repnz
enter
stos
or
out
xchg
outsb
int3
arpl
mov
pop
push
xchg
push
pop
inc
xor
ftst
inc
or
call
icebp
jp
nop
sbbb
push
adc
daa
hlt
xchg
and
icebp
push
sub
inc
jne
add
sbb
push
xor
lret
aad
mov
notl
dec
popf
jl
inc
mov
in
xchg
clc
jge
out
sub
bound
addb
lods
cmc
inc
pusha
jmp
outsl
pop
inc
and
mov
popf
jp
rorb
out
loope
mov
add
aam
and
aad
bound
inc
inc
clc
test
arpl
mov
jecxz
in
jo
pop
add
movsb
out
sbb
aas
std
lahf
test
push
or
inc
icebp
jecxz
clc
cmpsb
jo
movsb
cmp
mov
or
pusha
mov
pusha
hlt
icebp
fwait
lcall
push
cli
jg
or
into
inc
and
push
test
ds
cmc
leave
icebp
stos
or
jno
std
movsl
inc
mov
xor
loope
loope
push
push
mov
stc
movl
jbe
inc
jecxz
or
sbb
bound
fmuls
leave
hlt
jcxz
mov
dec
sbb
pusha
rcrl
jecxz
bound
sub
loopne
lret
pop
aas
sbb
mov
ljmp
lcall
jge
pop
cld
add
jg
adc
inc
pop
test
mov
lods
or
xor
sbb
jg
divb
test
ds
es
cmp
inc
pusha
inc
push
push
mov
xor
scas
daa
sub
sarb
rcll
shl
lods
xor
ljmp
ret
fmuls
xchg
inc
sbb
pop
mov
add
push
lds
inc
dec
cmp
repz
and
int
add
sbb
adc
jl
bound
xlat
dec
mov
push
shl
mov
lcall
sarl
mov
pushf
mov
mov
jge
ja
jecxz
jecxz
pop
in
and
or
je
roll
add
cmp
je
xor
mov
xor
sarl
cmp
roll
sarl
cmc
daa
cld
rcl
mov
pop
mov
icebp
push
inc
sub
sbb
push
sarb
adc
test
aaa
push
mov
inc
jmp
ja
lret
loope
push
shll
adc
mov
push
sbb
fldt
ja
mov
movsb
push
mov
mov
push
or
lods
out
jg
or
push
aas
pop
out
orl
shlb
mov
or
rcl
jno
test
jbe
sbb
push
fisttpll
iret
repz
sub
lods
sub
xorb
or
push
sbb
fstpl
sbb
fs
cli
idivl
out
or
roll
pop
jmp
loop
out
mov
cmp
stc
hlt
adc
aad
incl
jnp
addr16
in
or
jmp
pop
jno
dec
shl
ds
clc
insw
clc
imulb
push
add
data16
xor
lahf
add
inc
jecxz
scas
jl
jecxz
add
xchg
mov
jmp
aas
fisttpl
test
push
jecxz
mov
mov
sub
mov
lahf
adc
jg
push
jecxz
pop
lds
add
xor
push
push
jle
push
cld
nop
xor
xor
xor
lods
call
clc
cmp
movsb
mov
sub
bound
inc
pop
inc
pop
adc
mov
inc
mov
xchg
je
sbb
pop
mov
jo
push
sub
jle
shl
shrb
pop
pop
jmp
add
push
call
jle
push
in
jl
mov
addb
fdivr
or
mov
add
bnd
xlat
jne
cmp
or
mov
adc
testb
loopne
test
sub
loope
add
cld
sub
xorb
mov
inc
les
aas
or
xrelease
dec
fisubs
mov
sub
mov
sti
pop
jmp
outsl
pop
push
arpl
push
pop
ja
in
pop
je
call
mov
fisttps
mov
adc
jl
lret
add
dec
pop
leave
dec
movsb
sub
fildll
clc
adc
sbb
mov
mov
adc
pop
sbb
icebp
cmpsl
in
sub
mov
lahf
movsb
push
mov
rcrb
mov
adc
or
iret
mov
adc
inc
dec
pop
js
push
shll
or
call
dec
jbe
pop
mov
sti
jl
ds
es
movsb
insl
push
clc
push
insb
popa
mov
mov
push
test
sbb
sahf
xchg
xor
jge
jle
jecxz
or
mov
test
add
pop
ljmp
das
cmp
or
xor
icebp
pop
and
iret
or
jbe
mov
ror
jae
fs
mov
lahf
sbb
dec
lods
fcmovne
inc
lock
pop
sub
pop
inc
lock
popa
clc
xchg
into
dec
inc
push
stos
adc
or
xor
je
stos
sbb
int
ja
stos
rcll
push
pop
lea
call
lret
jp
bound
jmp
out
idivb
jno
or
sub
pop
pop
and
xlat
rorb
and
loop
jp
popf
icebp
pushf
sub
inc
aas
lods
mov
or
jl
xor
lock
int
and
test
ret
dec
hlt
inc
out
aad
jne
test
adc
daa
loop
jmp
cwtl
and
fs
mov
jle
or
mov
test
vfrczsd
pop
cltd
in
and
test
dec
imul
call
sub
mov
sub
lods
enter
in
xchg
sub
sbb
adc
add
jl
sbb
or
xor
out
inc
shrl
hlt
into
cmp
adc
add
inc
jg
push
aam
mov
sub
push
pop
jmp
xor
sub
xchg
fcomp
adc
pop
mov
dec
ds
inc
popf
cs
ss
inc
push
orl
leave
movsb
adc
imul
add
xorb
mov
add
push
mov
or
mov
incb
gs
push
int3
sarl
mov
mov
clc
mov
inc
or
xchg
jecxz
int3
sarb
shr
mov
and
movntq
out
mov
sbb
inc
leave
lea
xor
movsb
inc
int3
adc
adc
daa
loopne
int3
sbb
inc
dec
and
mov
or
aam
mov
mov
addb
cmc
test
xchg
mov
add
pop
push
fmull
ss
sahf
sub
jle
pusha
rorl
adc
roll
fwait
stc
pop
and
xchg
push
pop
and
mov
pop
or
inc
addr16
adc
outsb
lret
adc
test
call
mov
mov
mov
lds
jge
jge
add
mov
and
mov
xor
xchg
nop
test
xlat
std
adc
shll
cmpl
in
pop
mov
in
adc
push
or
adc
push
push
std
test
dec
push
mov
cmpsl
jg
xor
inc
push
xor
pop
incl
das
faddl
push
rol
push
cmp
and
adc
gs
loopne
fwait
into
add
std
jle
mov
and
jo
pop
mov
dec
std
movsl
add
mov
xchg
adc
inc
mov
xchg
dec
fs
push
add
lock
outsl
mov
add
mov
mov
loope
in
je
inc
arpl
jle
roll
movsl
out
pop
pop
cwtl
ljmp
cli
movsl
or
mov
cwtl
and
adc
and
iret
roll
cmpb
sub
ja
dec
add
movsb
jp
cmc
dec
jecxz
faddl
inc
sub
mov
les
adc
sub
loop
pop
inc
cltd
icebp
or
mov
xchg
and
pop
jnp
mov
stos
inc
dec
inc
mov
inc
outsl
or
mov
push
or
into
leave
jl
clc
popl
inc
xchg
jbe
enter
xor
pushf
repnz
pop
dec
push
js
xchg
pop
loopne
push
mov
or
loop
pop
stc
or
pop
dec
pop
jp
test
push
cwtl
mov
xor
mov
xchg
mov
push
lcall
and
push
into
fcoml
xchg
pcmpgtw
arpl
or
sub
jge
xchg
push
nop
mov
mov
testl
pop
fcmovnu
mov
xchg
scas
hlt
sti
push
adc
cltd
pop
xor
stos
xchg
mov
jle
jne
inc
xor
movsl
leave
mov
lea
add
idivb
shll
je
xor
popf
inc
int
test
jns
mov
mov
icebp
in
loopne
int
clc
jne
and
push
mov
in
jle
insb
sbb
jmp
sar
dec
add
subb
mov
pop
push
or
das
and
push
loopne
add
lret
add
cmc
jg
push
mov
jns
ret
push
in
sub
dec
outsl
mov
sbb
sub
aaa
cmp
inc
dec
xchg
add
and
sbb
loopne
add
lea
push
pushl
shll
xchg
mov
cmp
jmp
cmp
mov
mov
sbb
inc
ret
push
xchg
mov
nop
mov
pop
cwtl
xchg
sbb
and
das
pushf
add
orl
fwait
stos
cmp
mov
or
mov
mov
notl
xor
imul
cld
gs
mov
mov
mov
jp
movsl
mov
xchg
push
fiadds
jg
dec
sub
pop
push
xor
cmp
adc
and
inc
outsl
jnp
and
pusha
or
inc
dec
push
push
repnz
and
mov
iret
stc
mov
pop
dec
scas
arpl
pop
dec
daa
adc
xchg
fnstcw
cld
mov
jge
sub
pop
loopne
aas
iret
xchg
mov
ret
adcb
scas
mov
pop
test
mov
lret
iret
andl
call
sbb
int
fisttps
push
mov
and
sub
inc
dec
fwait
xor
in
scas
shr
cmpsl
pop
hlt
int
xlat
mov
mov
jne
nop
outsb
xchg
daa
lea
mov
pop
andb
je
cmc
jl
push
pusha
cltd
aas
push
or
sub
cld
sbb
in
mov
xchg
shlb
inc
imul
shll
xchg
testl
xlat
push
inc
in
jns
and
xor
push
cmp
mov
fwait
cmp
mov
xor
rcll
push
jl
test
iret
add
mov
lock
adc
xchg
pslld
sub
adc
lcall
add
clc
shufps
xchg
dec
nop
dec
ja
outsb
xchg
divl
push
pop
mov
fs
ja
and
or
mov
xchg
sahf
and
mov
push
je
arpl
xor
jns
clc
or
sbb
jmp
ficompl
sub
mov
das
lret
mov
mov
fidivl
or
mov
mov
push
icebp
fiaddl
test
mov
divb
sbb
lahf
push
cmovne
das
pop
inc
in
out
loop
jo
enter
and
test
dec
rol
xor
xor
push
sub
jmp
adc
and
lea
add
cmp
ret
sbb
cmpsl
jbe
fimuls
inc
jae
icebp
in
pop
sub
hlt
jo
xor
dec
icebp
sbb
pusha
mov
lcall
je
in
mov
sub
shrl
pop
inc
rolb
in
adc
jmp
or
je
flds
push
add
mov
push
mov
roll
adc
rolb
addr16
pop
adc
jnp
in
adc
leave
nop
cmpsb
in
xor
popf
fisubrl
add
xlat
sbb
mov
jmp
push
es
dec
call
mov
cmp
out
cmp
cli
popl
adc
mov
inc
inc
jne
add
pop
ljmp
es
jne
jmp
push
inc
rol
xor
push
sbb
test
dec
xchg
push
insb
loop
popf
sbb
es
addl
pop
mov
push
sbb
loopne
inc
clc
mov
push
mov
and
test
aas
in
sbb
xorl
aam
imull
std
daa
mov
ret
push
push
push
pushf
cmp
and
aas
aas
pusha
hlt
sbb
dec
add
jecxz
popf
lods
loop
xchg
sub
and
adc
rcll
xchg
xor
push
jb
adc
fs
and
xchg
dec
inc
cli
mov
pusha
stos
inc
fcomps
cmp
movsb
xchg
fs
fwait
pop
mov
and
paddsb
dec
mov
xorb
xor
shll
push
insb
movsl
push
mov
mov
sub
and
adc
lods
and
jmp
or
xchg
jns
push
xor
xor
jg
fcomps
aas
or
rcr
inc
fisttpl
leave
int
cld
fldt
xor
call
inc
and
mov
orb
mov
mov
clc
xchg
lret
mov
stos
cmp
mov
dec
out
inc
mov
std
adc
push
add
pop
je
jbe
jecxz
jo
or
jg
in
shrb
loop
subb
sub
xorl
or
xchg
in
iret
jp
pop
dec
int
sbb
cld
leave
mov
or
push
incl
sub
mov
and
xchg
cmc
mov
push
xor
push
cmpsb
add
packsswb
pop
and
pusha
scas
inc
mov
adc
pop
add
fcoms
idiv
xchg
es
adc
faddl
nop
ret
imul
leave
scas
outsb
outsb
lock
xor
test
test
mov
mov
cmp
push
jp,pn
push
ret
push
sub
mov
rolb
adc
mov
push
cli
xor
outsl
pop
ret
jmp
pop
cwtl
arpl
dec
test
scas
and
dec
and
jl
icebp
mov
adc
push
xchg
enter
adc
aaa
test
mov
mov
imul
fs
popl
ss
mov
adc
cmpsb
movsl
clc
push
sub
sbb
and
push
add
push
pop
mov
inc
mov
stos
jbe
cmp
cld
flds
push
pop
inc
in
adc
dec
pop
sbb
push
jbe
sub
inc
test
mov
push
xchg
cmp
or
or
dec
fimull
insb
dec
add
sub
daa
movsb
aas
sub
dec
inc
add
mov
push
push
lock
jge
xor
push
sbbb
or
pop
add
rclb
sub
test
fdivrl
repz
test
addr16
cli
sub
dec
or
aad
loope
adc
push
clc
mov
sbb
out
push
mov
idivb
cmpl
pusha
icebp
andb
dec
inc
rcll
testl
lock
mov
adc
rcll
inc
lcall
lds
popf
movsb
pusha
out
pop
sbb
pop
jno
ja
inc
sub
lahf
nop
inc
xlat
js
fndisi(8087
call
mov
and
pop
add
out
add
aaa
dec
call
dec
inc
shl
roll
bound
inc
push
xor
jb
pop
jno
aas
test
pop
inc
lds
es
fsubs
push
fcomps
clc
pop
test
dec
test
aaa
mov
push
jmp
mov
or
es
ds
dec
adcb
lret
inc
mov
test
or
insb
dec
add
fucomip
lahf
mov
ljmp
in
ds
cmpsl
pop
or
xlat
and
xchg
push
inc
xchg
sti
negb
mov
dec
inc
inc
jle
lea
js
jno
pushf
cmp
push
mov
nop
mov
cmc
add
xchg
or
fldt
das
cmp
mov
bound
fxch
xchg
push
sub
mov
decb
addr16
loope
ss
xchg
adcb
into
sub
jns
pop
mov
inc
xchg
xchg
fildll
fcmovu
lds
adc
mov
jge
and
insb
mov
mov
dec
add
inc
and
or
pop
aam
and
xor
test
popa
iret
xchg
and
adc
mov
inc
outsl
incl
lret
add
cmp
movsb
orb
push
nop
mov
leave
sbb
ror
jno
xor
cli
add
xor
nop
jbe
xchg
invd
dec
decl
mov
arpl
pushf
loope
hlt
in
pop
movsl
inc
inc
rcrb
pop
push
dec
mov
cmp
lock
andl
xchg
nop
mov
cmp
sti
dec
in
decl
jno
lret
and
aad
or
sbb
and
mov
jmp
lret
jns
imul
repz
push
and
aaa
mov
nop
jnp
jno
or
mov
lcall
pop
pop
int3
jno
sbb
push
push
ret
mov
outsl
or
and
xchg
imul
out
icebp
leave
repnz
inc
adc
mov
dec
cmp
pop
into
mov
mov
mov
pop
pop
addr16
jo
adc
mov
lock
cmp
clc
pop
xor
xor
push
push
xchg
add
jle
adc
je
ror
stos
scas
in
test
mov
or
js
fstpl
stos
mov
push
cmp
jg
mov
mov
xor
mov
gs
sbb
pop
push
jns
inc
jno
inc
jno
je
cmp
int
adc
ds
mov
aad
jno
mov
loopne
push
mov
jo
xor
fs
pop
xchg
outsl
pop
or
fs
int3
pop
jp
cmpsl
outsl
hlt
fmul
dec
sbb
incb
icebp
out
inc
sbb
test
stos
movb
push
sub
sbb
sub
in
leave
lahf
inc
mov
aam
pop
pop
jbe
mov
fucomi
mov
sbb
mov
stc
sbbb
dec
dec
les
mov
jb
insl
ffreep
fsubl
icebp
fwait
dec
adc
push
xchg
jnp
nop
xorl
add
cmp
mov
shlb
in
pop
out
jg
out
pop
push
mov
sbb
cmp
sbb
adc
ret
pop
out
push
mov
fwait
sahf
pop
ret
leave
dec
lock
push
mov
inc
data16
mov
js
adc
push
scas
in
mov
mov
ja
pop
orb
xchg
xor
mov
inc
push
jmp
or
movsl
push
mov
scas
mov
jp
xchg
cli
imul
rorl
mov
int3
push
jae
push
cmp
clc
sub
and
pop
ljmp
fnsetpm(287
test
mov
in
cmpsl
mov
dec
sti
fisubrs
push
jg,pn
sbb
and
xor
pop
stos
xchg
inc
lcall
xchg
loop
aaa
mov
mov
add
fnsave
cmpsl
test
pop
test
pop
cmc
jbe
mov
popf
call
xchg
sti
movsb
or
pop
jge
mov
adc
ja
cmp
movsl
dec
cwtl
sbb
mov
cwtl
or
add
mov
or
aad
jb
or
push
pop
dec
adc
inc
in
stc
cwtl
xchg
mov
jnp
lock
xchg
fs
xchg
or
dec
mov
insb
jnp
ljmp
xor
fdivrl
adc
jecxz
ja
je
adc
popa
imul
xchg
xchg
sbbb
mov
pop
xchg
jo
int
and
or
mov
add
sub
xchg
mov
js
loopne
sub
and
pop
mov
mov
out
sahf
mov
fnstsw
repnz
sahf
cmc
or
inc
fistpll
aad
sub
mov
mov
test
mov
shl
sbb
push
std
outsl
sbb
aam
push
ss
imulb
movsl
leave
lahf
nop
cli
clc
sub
aaa
jle
mov
push
je
sarl
dec
push
or
repz
jg
jb
adc
mov
sbb
push
loope
xchg
ja
adc
dec
test
shll
faddp
sbb
sub
int3
loopne
jp
cmc
stc
loope
test
push
mov
scas
out
pop
mov
dec
lds
call
mov
push
sbb
fmull
push
xor
lret
js
loop
mov
adc
push
popf
aam
dec
idivb
sub
aam
enter
xchg
mov
mov
dec
dec
jne
scas
push
aam
loope
loop
cmpl
fildl
lods
ja
or
mov
xchg
lea
test
jle
mov
js
mov
cmc
xchg
into
mov
mov
rorl
and
sbb
cld
adc
into
clc
inc
out
mov
mov
into
sbb
mov
outsl
sub
mov
or
mov
out
scas
ret
fs
mov
mov
lahf
pop
sub
jmp
fimull
and
sbb
pop
inc
js
xor
je
iret
popa
dec
out
rcll
ret
in
ja
fmull
stos
outsl
stos
jg
mov
mov
gs
and
sbb
dec
jo
stos
clc
cmp
iret
jg
pop
iret
sbb
mov
fs
into
popf
cmp
rclb
mov
xor
add
shll
dec
shrl
sub
adc
iret
cmp
push
shl
pushf
sbb
dec
icebp
fimull
push
lods
cmpsl
dec
cmc
jg
out
mov
sbb
cmp
sub
mov
pop
jg
and
mov
call
push
push
pushl
xchg
pop
inc
sbb
jbe
pop
pop
mov
xchg
and
fucomi
aad
pushl
rolb
out
das
add
sbb
add
fnstcw
ret
pusha
out
push
inc
push
lods
repz
push
jnp
pop
cmp
xor
mov
pop
mov
cmp
aaa
mov
jg
pop
sbb
or
addr16
xor
cmovb
lock
cmp
push
sbb
mov
clc
pop
push
aam
das
jo
loop
mov
inc
sub
ja
mov
daa
push
lods
sahf
loop
fidivrl
inc
arpl
dec
and
rorl
ror
imull
cmp
pop
cmp
pop
mov
fstpl
pop
add
andb
cmp
and
aas
rcll
decl
out
and
push
stos
aas
scas
out
loope
repnz
inc
inc
sbb
nop
rcl
add
test
daa
cmp
adc
jmp
call
xchg
outsb
jbe
inc
daa
mov
jmp
push
xchg
jnp
xor
sti
icebp
xchg
jnp
jmp
xchg
mov
imul
sarb
mov
xor
loop
hlt
jg
filds
pop
fcomps
popf
pop
outsl
ret
add
dec
orl
jbe
mov
jg
add
outsb
add
dec
sbb
inc
addr16
push
inc
mov
pop
pop
cmpsl
pop
xchg
cmp
push
rorl
js
scas
mov
jle
test
shlb
gs
push
xor
and
jge
push
inc
addr16
or
and
or
shrb
xor
loope
pop
call
adc
movsl
and
shll
int3
mov
mov
mov
adc
incl
es
add
mov
test
cmp
test
data16
aaa
inc
sbb
je
aam
cmp
dec
and
lea
nop
sbb
add
push
pushf
mov
mov
ja
push
add
ljmp
xor
jg
test
fnstenv
push
jg
lea
in
pop
mov
mov
mov
mov
cld
iret
andb
in
push
scas
out
inc
xor
aaa
fisubs
gs
leave
jb
jae
xchg
xchg
or
inc
stos
mov
pop
movsl
pop
inc
cmc
mov
jns
les
test
aam
sbb
xchg
sub
sub
push
jb
xor
jmp
sub
mov
ja
mov
sub
cmc
icebp
sub
jnp
mov
lret
xor
sbb
xchg
jno
xor
pop
adc
scas
jg
xchg
adc
es
mov
popf
dec
push
fcompl
jmp
xchg
and
out
adc
rclb
jns
fmull
test
mov
push
adc
push
or
mov
jp
mov
push
int
sarl
mov
push
loope
push
addl
cld
mov
addl
je
lcall
pop
jmp
xchg
inc
push
lea
fisttps
mov
mov
xor
inc
in
fiaddl
pop
loop
pop
add
popa
xchg
fbld
inc
mov
and
jg
mov
bound
or
sub
outsl
out
cwtl
ret
outsl
mov
mov
in
and
js
lds
inc
jp
cmp
sbb
mov
lahf
inc
inc
fs
pushf
jecxz
cmp
pop
or
jmp
adc
cmp
fisttps
clc
dec
jl
js
sbb
cltd
push
xchg
mov
icebp
cmpsb
sbbl
mov
xor
pusha
push
adc
call
mov
jge
push
mov
push
adc
cmp
jo
push
lret
not
sub
in
inc
mov
xor
lret
pop
push
push
in
fnstcw
or
fmull
mov
dec
pusha
dec
test
mov
aaa
arpl
outsl
cmp
cld
pop
cmpb
mov
adc
pushf
inc
loop
movsb
add
adc
or
sbb
arpl
dec
aas
and
jle
mov
add
mov
aas
sub
mov
xchg
push
ret
or
jecxz
cwtl
dec
or
sbb
add
lock
clc
cmp
testb
push
js
int
popf
xor
shll
pop
addr16
imul
stos
mov
lods
adc
xor
adc
ret
sub
fsubrl
add
inc
pop
mov
xor
cmpsb
xchg
int
sub
sbb
repz
out
loope
arpl
clc
lea
sysexit
jbe
xor
les
sub
adc
jle
cltd
addr16
cmp
pusha
adc
arpl
rorl
movsl
popa
and
inc
lock
lods
jmp
mov
repnz
mov
mov
inc
push
in
scas
js
or
xchg
dec
add
scas
push
cmp
and
aam
ja
pop
aam
mov
jg
xchg
push
xlat
mov
inc
fnsave
in
ljmp
pop
mov
push
popf
loopne
sub
in
sub
test
dec
mov
test
sbb
dec
pop
pop
push
lea
sub
add
or
fwait
or
adc
push
insl
inc
mov
sahf
inc
dec
sbb
pop
mov
xchg
xchg
subl
stc
ljmp
into
andb
xor
jno
sub
mov
push
mov
xor
xchg
jle
dec
out
or
push
rorl
fwait
push
jmp
mov
call
and
inc
movsb
fcomi
mov
xchg
pop
rcrb
in
dec
cmp
clc
xchg
push
jae
imul
lcall
adc
enter
cmpsl
inc
dec
add
cs
mov
dec
xchg
adc
mov
jle
adc
loope
mov
std
push
popf
outsb
cld
bt
or
lds
jle
dec
js
add
div
jmp
jge
sbb
dec
rcrl
shufps
xchg
cmp
push
add
divb
xchg
adc
rorb
fcomip
cld
jnp
cmp
adc
clc
xchg
sbb
pop
nop
pusha
lea
add
in
pop
lea
ret
aam
lret
xchg
roll
push
xor
out
jo
mov
mov
loopne
sti
push
stc
xchg
mov
pop
insb
inc
xchg
pop
loopne
and
lock
mov
dec
sub
pop
lea
or
divl
dec
push
shrl
mov
shlb
sbb
scas
cltd
aaa
pop
repz
cs
orl
cmc
ds
add
popf
push
xchg
pop
mov
xchg
cmc
jp
rol
ret
in
or
mov
test
mov
idiv
imul
cli
mov
mov
and
test
pop
mov
repz
shl
mov
mov
mov
andl
xor
push
lcall
lods
pop
adc
in
and
sti
or
adc
jmp
add
inc
sbb
and
das
shll
jno
lret
pushf
popa
js
divl
sub
pushl
mov
inc
je
inc
lcall
and
scas
gs
mov
jp
jnp
and
pushf
movsl
xchg
pop
sbb
and
les
mov
mov
lods
lcall
add
jg
arpl
dec
out
pop
add
aam
clc
sarb
xor
inc
loopne
mov
lods
popf
ret
cltd
jns
aam
mov
or
jecxz
mov
mov
jle
pop
cmp
sub
mov
sub
mov
mov
and
push
sbb
das
insb
subl
sub
mov
cwtl
repnz
or
lcall
inc
push
popf
int
jno
fsubrs
call
xchg
add
push
cmp
xchg
xchg
dec
cmp
adc
cld
pop
cmp
mov
inc
mov
test
mov
add
cmp
pop
rorl
stc
or
enter
stos
call
and
les
orb
adc
in
jo
push
inc
rclb
adc
mov
incl
lods
mov
ret
mov
push
loopne
iret
enter
xchg
out
lcall
cmp
cmp
sub
sub
jae
mov
int3
repnz
cwtl
sbb
jg
std
lds
cmp
pop
adc
or
icebp
add
je
cmp
mov
fdivr
lods
push
push
push
in
xchg
xchg
andb
xor
rolb
add
pop
pop
dec
dec
hlt
loopne
jne
fcompl
clc
clc
add
inc
fldt
mov
mov
jae
add
idivb
sbb
lea
add
rdpmc
sbb
mov
inc
sub
inc
jne
fbstp
cmpl
icebp
aaa
movsb
push
pop
pop
inc
mov
icebp
ljmp
mov
push
mov
jo
dec
adcl
add
mov
mov
cli
js
sbb
jo
ret
test
rcrl
pop
add
bound
xlat
and
jecxz
clc
add
cwtl
add
add
pop
sub
and
out
movsl
fstpl
dec
adc
or
xchg
inc
imul
mov
sbb
fcmovne
mov
icebp
mov
roll
mov
push
aam
inc
cltd
es
bound
xchg
into
inc
loopne
push
cmp
int3
daa
mov
push
cld
aas
mov
lcall
push
ljmp
bound
in
ja
xor
int3
mov
inc
and
xchg
cmpsl
loopne
call
stc
sbb
movsl
rcll
cmp
cmpsl
adc
xchg
ret
jg
fucom
movsb
cmp
or
add
pop
outsl
adc
mov
sar
cmp
ljmp
add
in
dec
sub
loop
mov
cwtl
out
cmp
push
testl
jl
adc
std
rclb
push
loopne
jne
pushf
push
jecxz
rclb
lock
pop
jg
jne
or
arpl
sub
outsb
cmpb
sbb
pop
or
addl
popf
sub
inc
pop
add
sub
mov
shrb
push
rcr
js
and
mov
jno
cmp
fdivr
jg
fld
cmp
lds
pop
icebp
and
movsl
jg
mov
mov
scas
inc
sub
cs
sbb
mov
rolb
sub
jno
hlt
aaa
fiaddl
pop
cmpsb
cmp
mov
cmp
cmpsl
mov
roll
sbb
inc
push
mov
imul
push
in
incl
in
add
repnz
jae
pop
dec
cmp
pop
stc
pop
loopne
cmpb
pop
aad
gs
dec
push
test
or
xchg
add
aam
ja
dec
sbb
std
dec
in
mov
sub
pop
fiadds
mov
and
decl
mov
lods
push
flds
or
test
dec
xchg
add
add
mov
pusha
popf
in
outsb
fdivrs
pop
mov
mov
pop
jno
rcl
lods
add
jne
out
mov
cmp
or
cld
data16
iret
add
je
fists
and
jnp
xchg
jae
icebp
dec
inc
cmc
mov
cmp
ret
jg
and
or
jne
push
cli
fbld
sub
rcll
mov
mov
loopne
adc
mov
lahf
dec
pop
ss
jp
add
push
pop
adc
aad
jle
pusha
pushf
ljmp
in
jmp
xor
daa
add
jbe
fsubrl
sbb
mov
ss
inc
pop
push
hlt
ret
adc
cmpsl
pop
or
shrb
adc
add
xchg
fstp
jg
adc
and
aas
dec
mov
xor
mov
and
lahf
adc
out
aam
jp
sbb
into
jbe
pop
sbb
cltd
outsb
shlb
movsl
adc
xchg
and
stc
push
arpl
insb
mov
push
jmp
and
adc
dec
mov
ss
outsl
cmpsb
cmpsl
xchg
mov
lret
pop
and
mov
dec
inc
cmpsl
mov
std
out
jbe
pop
cld
stos
test
adc
loope
add
cld
inc
mov
add
jg
or
test
cs
and
xchg
out
loop
cmp
imul
cmp
aam
unpcklps
pop
pop
lea
dec
cmp
cs
punpcklbw
loope
fcmovbe
jne
out
repnz
cs
mov
pop
aas
dec
adc
mov
mov
aaa
jbe
mov
adc
cmpsl
push
sti
mov
and
jmp
test
adc
xchg
sub
shlb
xor
ret
pop
cmp
sbb
out
and
stos
cld
jae
stc
verw
cld
shrl
lahf
movsb
mov
mov
fistpll
imul
pop
out
add
leave
xor
fbstp
cmpsb
inc
jmp
push
bound
mov
or
cld
add
repnz
jl
sub
cmpsl
push
pushf
sub
xchg
pop
inc
das
notb
imul
mov
fmuls
cmp
and
xor
rcl
lods
jo
xor
scas
dec
popa
mov
or
enter
push
or
add
cmp
add
scas
outsl
les
sub
adc
sbb
adc
shl
mov
push
pop
adc
pop
mov
daa
sub
aas
inc
or
fs
xlat
adc
addb
std
jp
push
sarb
sbb
push
pop
mov
sub
shlb
push
cltd
cmc
dec
push
nop
and
lock
std
aas
push
daa
les
xorb
jo
bound
out
inc
cmc
adc
or
pop
and
add
and
inc
pusha
mov
mov
test
fmuls
inc
push
or
loopne
jns
std
cs
dec
sbb
push
adc
and
push
or
rcll
imul
cwtl
lds
pushf
xchg
outsb
lcall
or
shrl
cmp
or
rol
pop
mov
lds
sbb
cmpsl
pop
mov
mov
or
mov
movsl
cmp
imul
in
into
cmp
or
lret
dec
inc
daa
shr
imul
push
mov
push
inc
ljmp
and
dec
mov
inc
fisttps
add
outsb
adc
fwait
push
sbb
repz
inc
mov
sbb
repnz
out
lcall
mov
jno
dec
aam
orl
jno
add
shrl
loop
je
push
sbb
test
or
or
testl
add
sub
push
lock
jmp
mov
or
nop
pop
int
icebp
pop
andb
mov
loopne
hlt
loop
fidivrs
xlat
lea
sub
mov
or
inc
add
and
inc
xorb
fwait
ds
or
cmp
outsb
add
mov
outsl
inc
iret
mov
insl
mov
or
les
push
loopne
push
push
cld
jne
popa
adc
inc
mov
ljmp
sub
or
inc
jmp
mov
fistpl
adc
mov
jl
push
push
inc
bound
cmc
nop
stos
and
adc
decl
add
xchg
ret
cld
mov
mov
into
pop
mov
mov
test
icebp
icebp
pop
test
cmc
cltd
pop
jne
movsb
cmc
mov
mov
cmc
call
outsl
xchg
clc
push
adc
pop
sub
mov
pop
mov
das
sbb
roll
and
sbb
inc
inc
add
mov
push
adcl
inc
and
cld
or
and
add
es
in
leave
dec
test
pop
sub
jp
js
ficomps
pop
fnsave
idivl
and
cmpsb
inc
addl
mov
daa
or
fistl
or
test
xchg
push
pop
pop
or
sti
insb
dec
lock
ret
jno
sub
pop
xor
test
outsb
in
test
in
lret
shr
imul
icebp
jmp
lods
dec
es
xchg
cli
in
stc
int3
jae
orb
xchg
xchg
pop
pop
fwait
pop
test
pushf
or
sbb
dec
mov
sbb
std
ljmp
scas
cmp
scas
jecxz
cmpl
dec
mov
sbb
jae
aad
cwtl
shrl
jl
jno
adc
outsl
iret
push
out
or
mov
mov
add
xor
mov
lods
pop
dec
sbb
rclb
shlb
hlt
lods
inc
inc
dec
aad
lds
add
test
xchg
in
xchg
or
outsl
cli
popa
insl
repnz
and
xchg
xchg
sub
inc
ret
jns
repnz
popf
cmp
adc
pop
jae
into
inc
mov
inc
xchg
sbb
loope
loop
add
lret
nop
xchg
loop
mov
sub
jg
push
adc
inc
bound
out
jmp
movsl
pop
sbb
mov
mov
dec
xor
xor
inc
and
push
and
or
mov
rcrb
and
mov
mov
ss
sub
add
and
jns
lret
hlt
jns
or
mov
pop
ficoml
bound
ret
dec
push
dec
pushf
inc
inc
xlat
loopne
aad
fiaddl
inc
pop
push
jbe
push
add
push
mov
lods
test
sub
dec
rorb
add
push
loope
cmp
adc
xor
unpcklps
out
das
in
cld
sbb
cmp
add
fucomi
ret
movsb
mov
push
mov
inc
shll
xor
inc
and
inc
mull
mov
push
fcoml
mov
movsl
sti
sbb
push
xchg
aam
mov
cmpl
xchg
pop
loope
adc
xchg
dec
int
add
mov
int
dec
loop
loopne
imul
dec
push
call
push
xchg
push
arpl
xor
inc
mov
inc
inc
mov
iret
mov
sub
lock
insb
das
nop
test
les
add
insb
ret
fimuls
enter
pop
subb
and
push
push
mov
cmp
xchg
add
mov
pop
js
add
std
sub
sbb
scas
and
clc
inc
sbb
cmpsb
mov
imul
clc
mov
sar
iret
mov
ss
cmpsl
cltd
cmp
cs
mov
mov
or
test
add
fadd
sbb
inc
sub
fcompl
test
test
int3
mov
xor
add
xor
lret
xchg
pushf
jge
cmc
jbe
divl
jg
sub
push
mov
nop
fadd
in
hlt
adc
add
jl
outsl
xchg
pop
xor
loope
lock
fwait
ljmp
mov
pop
pop
icebp
mov
insl
xchg
addr16
and
adc
lahf
ja
sbb
inc
cmpsb
out
sar
daa
add
mov
mov
ja
lods
jo
insb
push
and
add
fbstp
mov
or
xor
inc
xchg
mov
or
fdivrp
ret
add
sbb
push
xchg
pop
mov
jnp
cmp
pop
push
les
push
jecxz
xchg
sbb
imul
ret
in
pop
ja
cmc
jecxz
scas
aaa
push
jecxz
or
bound
xchg
push
sbbb
mov
aam
fidivrl
lods
jne
xor
push
inc
pop
stos
dec
shll
mov
cltd
xchg
adc
mov
stos
inc
and
or
call
movl
jle
push
add
jmp
mov
test
ret
ret
lret
jp
cld
je
addr16
test
stos
xchg
gs
lock
cmc
stos
sbb
adc
loope
push
in
mov
lret
call
push
stos
fwait
outsb
sbb
addb
cmpsl
adc
cld
push
aas
ss
inc
xchg
xchg
gs
sar
sbb
dec
push
imulb
lret
dec
jg
jle
adc
ret
mov
mov
or
cli
aas
hlt
outsl
sbb
movsl
push
lock
lods
mov
mov
jecxz
dec
fsubrp
decl
xchg
mov
fldl
in
pusha
xchg
movsl
roll
ds
lds
mov
and
lock
mov
popa
add
push
pushl
frstor
adc
jmp
jp
add
scas
iret
jg
mov
dec
loopne
and
out
mov
pop
pop
cwtl
or
sbb
push
loopne
cmpsb
stos
jnp
pop
jg
fcoms
push
mov
jecxz
nop
das
popa
xor
pop
mov
lods
leave
add
es
pop
cwtl
cli
int3
sub
cmp
ss
lds
repnz
stos
ficoms
jmp
ja
or
adc
adc
out
outsb
jle
cmpsl
push
push
je
adc
adc
add
and
out
repnz
xchg
dec
divl
cmp
andb
or
mov
dec
out
mov
test
clc
push
xchg
inc
sub
push
or
cld
jg
ljmp
add
lods
jle
and
shlb
lods
fs
shrl
jl
add
lods
mov
mov
inc
daa
inc
hlt
inc
xlat
cld
mov
into
add
push
adc
mov
sub
xor
ss
aas
dec
scas
jle
ret
fs
or
sub
mov
push
cmp
mov
pop
mov
ds
aas
adc
adc
add
mov
out
sbb
adc
mov
mov
es
jo
adc
adc
mov
adc
cli
xchg
push
emms
add
sub
add
fucomip
xchg
or
sub
add
pop
clc
pop
push
push
or
mov
dec
adc
shl
les
add
pushl
jbe
lret
inc
adc
jl
hlt
int
clc
cltd
rcl
pop
push
insl
jl
jg
inc
push
dec
aaa
je
adc
mov
mov
fld
es
jge
mov
cmp
jno
into
daa
mov
scas
mov
lds
or
orb
fwait
adc
pop
jbe
push
in
es
pushl
lea
leave
test
pop
jecxz
cmpsl
adc
sbb
test
loop
lock
xchg
pop
ret
cmp
mov
es
xor
or
in
bound
sbb
jns
adc
mov
mov
fdivr
mov
aas
popf
cwtl
jp
and
loope
sub
mov
cmpsl
fisttpll
adc
mov
xor
push
sub
mov
jno
lods
push
inc
inc
out
dec
aad
and
push
inc
dec
aas
pop
sbb
daa
sbb
aaa
xor
enter
sarb
sbb
outsb
sbb
out
lcall
and
pop
rorl
and
adc
outsl
push
mov
aam
push
mov
sub
xchg
mov
add
push
sbb
je
sub
pop
pop
gs
clc
mov
jo
or
mov
inc
mov
loope
inc
and
repz
or
sti
sbb
adc
fisttpll
mov
iret
es
dec
mov
pop
das
hlt
sbb
dec
mov
arpl
lret
rol
fimull
inc
mov
std
lds
mov
mov
xchg
sbb
adcb
jb
mov
lret
inc
mov
ljmp
sti
daa
add
push
shl
mov
mov
adc
xchg
aad
jbe
lods
jb
xor
dec
lahf
lea
outsl
dec
pushf
mov
xor
or
sbb
cli
rcr
mov
aas
jecxz
mov
adc
mov
lret
push
call
sub
stos
dec
ss
popa
or
or
push
fisubrl
test
loopne
ljmp
sbb
std
cmp
jmp
adc
and
inc
adc
or
scas
xchg
loop
add
or
aas
loopne
mov
into
jle
dec
mov
loope
dec
hlt
ja
jle
push
jecxz
xchg
orb
dec
addr16
cli
jg
add
jecxz
push
ret
jecxz
mov
cmp
xchg
scas
repz
sti
mov
or
adc
adc
in
cwtl
push
ljmp
or
mov
movsb
xor
ret
hlt
neg
ljmp
pop
cmc
outsl
loopne
jnp
cmp
jmp
sti
in
ret
and
push
sahf
cmp
mov
decl
jecxz
and
and
add
adc
mov
fsts
sti
jg
cld
in
jb
mov
push
jns
fs
jp
shlb
cmp
adc
xchg
out
sbb
adc
xor
or
jmp
sub
mov
mov
xchg
insb
imul
inc
push
jbe
testb
lahf
adc
push
shll
add
or
and
andb
add
mov
or
pop
add
cmp
mov
pop
in
and
dec
pushf
fwait
std
inc
jl
icebp
sub
pop
lock
adc
mov
mov
pop
jge
mov
adc
add
xchg
fldcw
es
orl
loope
stc
dec
pop
or
mov
movsl
inc
sub
push
ret
xlat
pop
adc
mov
pop
mov
pop
pop
or
addr16
push
out
pop
bound
incb
adc
pop
cmp
xor
movsb
and
sbb
pusha
popa
or
xchg
andl
jle
lods
int
int
mov
sub
push
enter
sub
sti
add
dec
sub
popa
push
mull
pop
mov
cmpsb
dec
push
cmpsb
add
outsl
dec
push
mov
mov
ficoml
pop
xor
inc
loope
xchg
ds
and
in
mov
cmc
push
mov
xor
jmp
aaa
jge
inc
push
mov
pop
jge
test
push
bound
sbb
add
dec
push
sub
rcrl
popf
cld
pop
ficompl
in
bound
inc
out
shrb
enter
sub
inc
cli
jns
mov
sub
xchg
cmc
push
cmp
jmp
jb
mov
xchg
fcomps
add
cli
sbb
in
fiaddl
lock
xor
std
or
nop
adc
xchg
call
scas
test
lock
cmc
pushf
dec
cld
testb
jno
cwtl
dec
sub
or
mov
arpl
jecxz
repnz
testb
adc
push
mov
or
push
bound
push
decl
push
mov
mov
test
decl
pusha
pop
lods
wbinvd
cmp
lods
inc
cmpsb
sub
add
lahf
jnp
jg
inc
out
ljmp
jae
addr16
test
lock
xor
inc
push
xchg
adc
lahf
orb
add
mov
pop
repz
cs
mov
je
and
into
js
cmp
call
mov
outsb
cmpb
test
jnp
test
add
jmp
or
pushf
jle
loopne
nop
mov
repz
ret
or
test
pop
rclb
and
push
cmpsl
outsb
sbb
adc
mov
in
fnsetpm(287
xor
mov
andb
in
jg
cmpsl
jp
adc
push
into
ret
sub
push
and
cmpsb
cmp
or
xor
scas
popa
cmp
flds
or
fcmove
adc
addl
mov
in
dec
mov
fs
loop
xor
hlt
dec
icebp
push
loop
bound
test
ljmp
inc
lahf
movsb
mov
cmp
fptan
push
or
pop
xchg
push
es
fsubr
ljmp
repz
test
cmpsb
mov
jns
lods
dec
popl
push
xor
push
cld
addr16
test
inc
xchg
or
rcrb
lds
xlat
jmp
inc
shll
and
jnp
shl
in
rorl
push
sarl
dec
sbb
pop
jne
sub
xor
mov
add
xchg
orb
jle
and
loop
icebp
pop
add
andb
js
ficoml
je
mov
aaa
shl
adc
mov
cmp
push
popf
stc
mov
popf
mov
bound
lock
adc
push
mov
and
pop
mov
test
std
push
mov
std
arpl
inc
mov
pop
popa
push
hlt
movsl
test
call
mov
pop
and
mov
xorl
jle
inc
and
mov
and
jg
add
daa
mov
or
scas
and
mov
call
mov
or
test
pop
jl
pusha
mov
shlb
add
mov
inc
and
pop
clc
dec
sbb
cmp
repnz
lds
lea
sbb
add
stos
sbb
fadds
cld
rorl
idivb
outsl
outsl
add
repz
int
mov
daa
adcl
stos
pop
pop
lds
lcall
cs
fbstp
pop
aaa
pop
test
pop
pop
mov
ss
out
jb
mov
and
lock
mov
out
cmp
nop
inc
jl
or
mov
stos
mov
pop
or
jbe
aam
in
sbb
cli
inc
js
push
inc
inc
fidivl
jge
loop
sbb
mov
add
pushf
cli
jne
andb
dec
call
mov
sub
or
mov
mov
into
pop
xor
je
shll
jnp
pop
nop
das
or
sbb
sub
std
lret
mov
mov
mov
stc
xchg
subb
pop
xor
jmp
je
adc
xor
mov
sti
sbb
out
mov
cmp
test
push
push
mov
and
mov
dec
jl
les
xor
gs
loopne
cs
aas
xchg
cmp
and
clc
fisttps
xor
push
push
xor
or
cmp
icebp
push
out
add
mov
mov
mov
jnp
inc
add
outsb
mov
dec
aaa
inc
sti
jg
cmpsb
and
testl
stos
pusha
cmp
lar
sbb
ret
mov
rolb
fisubs
incl
push
test
rcll
daa
jo
sub
push
sbb
leave
adc
pop
sub
cmp
pop
rcr
or
xchg
dec
mov
adc
sbb
sbb
add
stos
fldt
mov
and
jecxz
sub
jo
pop
pusha
push
sarb
sahf
cld
mov
sub
push
xbegin
xchg
popa
nop
pcmpeqb
mov
std
adc
or
add
call
push
cmp
xchg
gs
sub
stos
bound
mov
incl
and
push
xchg
mov
stos
cmpsb
sub
push
addb
jb
and
shlb
je
test
inc
pushl
insb
test
push
sahf
fcoms
fnstsw
mov
push
fisubrs
sub
lods
and
cmc
xchg
cltd
dec
repz
mov
nop
mov
inc
push
repz
mov
adc
xchg
adc
sbb
dec
test
jns
mov
movsb
pop
in
and
jl
gs
or
roll
jno
mov
add
neg
insb
repz
shl
mov
scas
push
inc
pop
inc
add
std
inc
int
push
loope
pop
xor
test
lods
ficomps
scas
pusha
lds
cld
test
cld
xchg
cld
movsl
lret
leave
arpl
mov
add
mov
push
arpl
ja
and
and
jecxz
ret
sbb
xchg
sti
arpl
jg
cmc
sti
loop
adc
xor
mov
popa
adc
jge
inc
cmp
in
sbb
jo
mov
xor
mov
test
jbe
sar
push
mov
bound
in
fidivl
add
fdivr
adc
scas
xchg
mov
mov
cli
pop
or
jp
fwait
cli
test
movsl
int
imul
mov
xchg
mov
push
mov
stos
mov
lods
imull
push
out
adcl
inc
fwait
and
jg
pop
cmpsl
xor
push
cwtl
jge
stos
cmpb
pop
std
ret
cwtl
sbb
xor
cwtl
rcrb
push
mov
ret
lcall
adc
cmpl
adc
mov
add
enter
mov
lds
imul
mov
xor
test
cs
int
dec
mov
push
jmp
xchg
pop
aam
mov
out
or
sbb
mov
orb
es
inc
pusha
mov
or
sbb
mov
xchg
imul
or
sbb
dec
dec
xchg
jbe
push
outsl
insl
outsl
jno
inc
sbb
mulb
ljmp
inc
cmpsl
and
dec
jg
and
add
push
and
ss
push
cli
iret
inc
or
aaa
cmp
mov
push
aaa
jne
pop
pusha
movsl
or
jmp
out
inc
mov
jg
mov
pop
std
ss
mov
shrl
aad
pop
and
and
outsl
lret
pop
mov
repnz
ficompl
pop
cmp
aam
jo
lret
aam
cmp
sbb
jl
and
ficomps
sahf
idiv
mov
pop
incl
pop
sqrtps
test
add
xchg
sbb
mov
bound
ffree
data16
sbb
jecxz
mov
cmp
xor
nop
enter
mov
add
push
cld
fcompl
sbb
idiv
pop
jmp
cmp
push
frstor
aam
jne
and
or
shll
mov
test
pop
mov
aas
lahf
outsl
js
sub
jo
and
mov
inc
cmp
mov
idiv
ret
or
add
or
subb
mov
mov
push
lahf
ret
adc
or
stc
mov
mov
jne
leave
or
jecxz
sti
lods
sub
and
add
jb
pop
scas
jg
sub
enter
std
jmp
rol
aam
pop
loopne
pop
jb
cmp
movb
aam
push
push
nop
cmp
out
add
cmp
aad
fstl
test
adc
je
lahf
sbb
out
push
dec
jbe
xchg
cmp
push
pusha
in
data16
repnz
lret
mov
ret
hlt
movsl
repz
or
cmp
mov
das
or
outsb
inc
fdivr
adc
fists
outsb
jbe
xor
aas
mov
stos
shll
push
add
out
lock
das
in
add
shl
out
lock
xchg
push
mov
nop
push
inc
cwtl
and
sub
inc
int3
mov
bound
mov
cwtl
inc
mov
sbb
or
test
mov
adcb
sahf
sti
adc
mov
mov
mov
mov
idivl
fs
pop
insb
add
pushl
call
in
xor
cmp
out
jnp
insb
mov
jecxz
sub
lahf
inc
sahf
dec
stos
jae
pop
fmull
es
adc
jae
push
pusha
js
or
mov
xchg
xchg
stos
out
mov
call
movsb
imull
jle
les
sahf
inc
cmpsb
pop
loopne
adc
imul
adc
sbb
in
pop
out
pop
imulb
bound
jb
in
xchg
sbb
loope
push
and
mov
push
out
outsl
imul
lock
out
xchg
bound
xchg
sti
testb
jne
sub
jl
xchg
decl
movsl
cli
nop
ljmp
or
out
jl
adc
mov
sbb
jecxz
adc
mov
and
mov
ljmp
push
xlat
or
push
push
test
inc
pop
or
loop
icebp
or
lock
les
loop
mov
dec
rorb
pop
arpl
dec
mov
jle
stos
sbb
jl
push
mov
and
xchg
mov
xchg
aad
jl
sbb
push
mov
dec
inc
pop
sub
js
inc
pop
popa
test
popl
rcl
inc
cmp
subb
mov
adcl
sub
mov
std
lock
dec
inc
pop
cmp
sbb
cmp
mov
adc
inc
pop
outsl
xor
out
pop
sub
xchg
jl
leave
sub
rcll
pushl
ficoml
add
fidivrs
push
rolb
addb
xchg
mov
icebp
jg
sub
adcl
jecxz
adc
lcall
incl
cmp
andl
push
insl
aas
sbb
orl
lahf
and
fisttps
push
outsl
inc
cmp
xchg
out
pop
mov
pop
xorb
pop
xchg
inc
and
jnp
test
loop
mov
stos
decl
and
fsubp
ds
jmp
std
xor
or
cmpb
sbb
subb
sbb
aam
clc
or
int3
mov
hlt
jg
lods
mov
ret
call
ja
ret
mov
sbb
out
mov
jo
dec
mov
adcb
push
aas
sbb
adc
add
or
push
jnp
imull
fiadds
sub
push
pop
or
cli
pusha
jns
int3
mov
out
xor
imul
jae
enter
mov
and
lods
push
xor
adc
les
lahf
subl
mull
incb
mov
mov
mov
cmc
enter
push
test
adc
inc
mov
mov
inc
in
cmp
test
fdivs
inc
add
pop
rolb
int
push
movsl
mov
push
pop
pop
cmp
out
sahf
rcl
sbb
or
mov
xchg
inc
jne
jno
test
add
lahf
xorl
dec
or
movsb
pop
cmp
add
and
pop
lods
add
dec
jmp
ss
out
adc
inc
lods
loopne
fcmovnu
pop
and
and
xor
mov
std
sbb
cwtl
iret
cld
xchg
mov
and
adc
jge
fildl
sbb
mov
mov
xor
cmp
pop
sbb
mov
insb
jg
push
and
push
inc
fadd
ficompl
cmp
push
in
and
pop
movsb
shlb
mov
ret
pop
aam
int3
dec
xchg
mov
jg
mov
enter
stc
mov
jecxz
pushf
push
out
push
cld
dec
xor
jle
inc
das
or
adcb
mov
mov
or
dec
xor
push
cwtl
mov
pop
mov
aam
xor
pop
lods
or
int3
mov
fsubrl
std
decl
leave
call
dec
adc
arpl
pop
push
push
or
and
sbb
sub
adc
mov
aad
imul
push
ss
out
test
mov
out
popf
fdivp
and
fs
lcall
mov
outsl
repz
adc
inc
cmpsl
ret
inc
sbb
shll
bound
sbb
cmp
clc
pop
push
lods
jne
ljmp
arpl
mov
xlat
ret
loopew
adcb
add
jo
or
add
addl
jns
adc
loopne
out
mov
ds
mov
xor
jl
inc
sbb
ds
sub
add
add
in
pop
ja
pop
loopne
imul
jmp
or
and
mov
xor
cmp
add
inc
shll
push
add
cmp
fimull
and
mov
jp
call
and
mov
inc
ret
jne
loope
je
mov
xchg
pop
cmpsb
pop
or
jg
pop
lods
or
inc
inc
mov
repnz
call
movsb
fimuls
mov
xor
push
or
outsb
dec
ret
mov
movsb
xchg
push
cmp
pop
xor
xlat
dec
and
inc
lods
test
stos
ret
or
icebp
dec
fs
nop
or
push
movsl
mov
cmc
dec
lds
cmp
scas
lea
dec
sbb
fldcw
popf
test
mov
sub
outsl
imul
mov
iret
sub
jae
decl
ljmp
mov
cmp
xchg
mov
jne
jl
daa
or
std
adc
mov
stc
mov
pop
pop
pop
loope
add
ret
les
in
lock
cmp
rcll
jle
ds
xchg
lcall
cmp
jmp
adc
pushf
sub
ret
push
pop
jbe
add
xor
xchg
sahf
dec
cli
jg
jo
pop
or
lods
and
mov
adc
inc
call
cs
stos
jp
sti
push
mov
mov
cmc
dec
cmpsb
mov
fcoms
rol
inc
lds
jbe
mov
and
mov
movsl
out
adc
inc
das
mov
add
jmp
sub
mov
outsb
ret
loopne
sub
mov
or
or
mov
test
dec
incb
push
jnp
pushf
rolb
inc
push
lods
mov
lahf
xchg
hlt
and
xchg
sarb
pop
in
fstpt
xchg
sbb
sbb
dec
aad
js
mov
data16
call
cmpsb
repnz
and
call
sahf
cmp
popa
int3
lret
in
mov
adc
cmp
and
out
mov
jle
testl
and
in
loope
sbbl
clc
mov
push
stos
inc
sub
scas
dec
imul
int
inc
lock
orb
outsb
mov
or
or
fsts
or
xchg
outsl
or
sub
daa
adcb
mov
sub
jno
arpl
das
inc
and
es
and
inc
insb
mov
popl
xchg
jo
lds
js
add
push
jmp
inc
or
call
mov
adc
dec
jo
roll
fwait
and
xchg
pushf
addb
and
or
adc
push
inc
cmpsb
rolb
add
inc
or
inc
dec
xchg
sar
pop
test
dec
repz
nop
sub
adc
aad
push
pop
pop
adc
sub
jmp
dec
ret
xchg
and
inc
xor
cmp
iret
inc
jno
inc
lock
add
fildll
jnp
and
es
xlat
repz
add
imul
stos
adc
sub
sub
ljmp
or
lret
xor
cld
loopne
repz
in
ss
push
cmp
je
add
je
mov
push
inc
jmp
call
loop
lahf
push
mov
lret
leave
sub
mov
pop
dec
mov
push
cmc
jp
or
cld
lcall
into
push
jb
mov
test
inc
adc
mov
pop
dec
orb
ss
cmpl
inc
outsb
mov
int3
lds
cld
jp
aam
mov
mov
and
subl
pxor
mov
adc
adc
cmp
jmpw
push
insb
pop
out
jae
aas
push
xor
aas
lahf
push
popa
packssdw
mov
pop
or
jg
or
int3
notb
jb
xor
xlat
imul
lock
rcl
mov
and
mov
bound
add
andb
sub
in
std
jg
sarb
add
xor
es
mov
stc
cmpsl
jae
pop
inc
xchg
sti
imul
clc
mov
outsl
aam
mov
lock
cltd
dec
and
mov
jno
popf
arpl
shl
or
mov
jb,pn
call
pop
shlb
and
jbe
sarb
or
xor
xchg
repz
insl
scas
das
push
xchg
addr16
lock
das
cli
popa
add
push
or
call
leave
pop
xchg
or
cltd
iret
popf
nop
sbb
leave
ljmp
pop
popa
xor
or
push
cld
sub
pop
pop
inc
jmp
inc
cwtl
pusha
mov
jo
lea
mov
push
jmp
adc
sub
jo
jno
cmc
cmc
push
les
jno
xor
mov
rolb
in
mov
nop
scas
cmp
cmp
mov
cmc
dec
jle
xor
jno
rcrb
cltd
and
ljmp
mov
mov
ret
push
inc
loopne
fstps
cmpb
rcll
mov
or
push
mov
shll
fsubrp
pop
or
push
std
roll
mov
ret
mov
fs
inc
arpl
lahf
ret
daa
cld
fisttps
scas
sbb
mov
mov
and
rol
push
sub
lods
cmc
fisubs
or
icebp
into
cld
outsb
test
push
mov
xor
iret
mov
lcall
mov
xchg
jge
adc
std
adc
sub
pusha
jns
je
addl
push
and
loopne,pt
out
sbb
adc
mov
mov
dec
pop
and
cmpsb
fistl
dec
aaa
cwtl
movsl
fidivrl
nop
repnz
mov
add
mov
pop
stc
cwtl
push
dec
or
je
std
mov
pop
or
hlt
sub
add
es
mov
lcall
sbb
xchg
jl
stos
jge
fdivr
dec
adc
adc
aaa
call
mov
in
adcl
mov
pop
xchg
and
test
or
and
jecxz
push
fistpl
test
cmpb
stos
test
cli
pop
or
cli
insl
sub
aaa
call
sub
mov
add
lock
fs
shl
xchg
adc
pop
insl
inc
and
ljmp
arpl
mov
push
mov
mov
arpl
lcall
out
mov
or
call
push
pusha
decb
mov
add
jo
sub
push
xor
ljmp
in
and
out
mov
sub
loopne
outsb
jl
xor
xchg
outsb
inc
imul
inc
and
idivb
outsb
fstpl
xlat
sbb
arpl
or
mov
fcomip
ss
lock
xor
mov
and
scas
adc
fs
std
dec
sbb
cltd
adc
cmovae
test
loope
adc
pop
push
icebp
pushf
sub
cmpsb
stos
push
jmp
jg
cmpsb
lods
int
jle
inc
sbb
jp
jbe
jnp
in
out
mulb
shrb
mov
ret
cli
add
mov
jp
and
sub
add
icebp
outsl
ds
mov
shlb
in
push
repz
xchg
clc
test
xchg
jecxz
add
push
jbe
adc
in
pusha
cmc
mov
xlat
inc
or
inc
cs
cmp
aam
xlat
and
outsl
jge
test
popa
nop
inc
push
pop
mov
sbb
inc
push
addr16
shrl
jge
inc
xchg
cmp
aas
sbb
icebp
outsb
dec
leave
xor
aad
mov
pop
xor
mov
or
inc
jnp
clc
dec
push
scas
sbb
je
gs
jmp
cmp
pop
in
mov
repz
jp
cmp
in
or
stc
xchg
loope
xchg
push
push
sub
insb
xor
mov
jo
adcl
je
pop
mov
out
out
jp
incl
mov
push
cmp
in
in
dec
in
call
imul
add
clc
lea
jbe
cmp
sbb
lods
pop
adc
and
sbb
mov
pop
in
sub
push
adc
xchg
ret
sbb
les
aas
mov
sbb
bound
xor
mov
xlat
dec
int3
mov
in
pop
movsl
movq
pop
fs
mov
or
es
push
xor
cmp
aaa
mov
icebp
pushf
add
popf
inc
test
jl
sub
out
sbb
mov
sarb
nop
clc
inc
test
in
int3
fldcw
dec
outsl
mov
jp
imul
inc
mov
mov
inc
xchg
pop
pop
cmpsb
adc
xchg
into
jp
xor
int
stos
xchg
fmull
push
jg
sbb
mov
adc
cmp
call
adc
pusha
movsb
sbb
sahf
stc
test
add
fistpl
lods
sbb
sbb
call
mov
cmc
repz
cmc
lcall
and
comiss
xchg
xchg
imul
jbe
pop
xor
outsb
iret
xchg
push
into
mov
cmpsl
aad
fwait
lods
test
imul
dec
sarb
addb
sub
and
jg
sbb
and
call
jno
fldenv
adc
rclb
sbb
and
cmp
and
fucomp
or
das
adc
loope
test
test
push
rcll
push
mov
pop
orb
pop
pop
fdiv
push
or
mov
inc
pop
loop
ds
jl
jae
xchg
stos
imul
xor
mov
xor
ret
add
mov
cwtl
dec
pop
jo
ret
js
int3
loopne
into
roll
jo
cld
xor
ss
out
rcrb
mov
sub
fsub
dec
fbstp
mov
sub
xor
std
sub
inc
cmp
loope
and
je
push
cmp
in
ss
sbb
fnstenv
mov
push
xchg
xchg
cmpsl
and
cmp
jo
sbb
loop
add
test
fiaddl
stos
dec
or
and
arpl
bound
clc
hlt
lds
and
pop
clc
jge
hlt
mov
push
xor
cwtl
adc
xor
loop
mov
add
and
cmp
sbb
rcrl
lods
xor
shlb
jp
sbb
mov
stos
cmc
lods
sbb
cmpsl
pusha
mov
dec
or
or
or
pop
push
mov
pcmpeqw
add
scas
push
lcall
addr16
jno
adc
inc
push
mov
call
jne
inc
pop
in
test
cmpsb
push
adc
and
xchg
mull
and
lahf
mov
push
or
mov
movsl
pop
push
lret
sub
dec
adc
std
data16
out
inc
les
pop
adc
orb
mov
roll
movsl
jmp
sbb
cmpsb
xchg
pop
shll
fcompl
insb
das
push
ja
das
jge
push
push
or
xchg
cmpb
or
lcall
and
fcmovnb
lcall
jno
icebp
cli
outsl
jp
mov
adc
aas
sub
and
sub
push
jb
sbb
mov
cltd
mov
aad
jl
push
jp
test
push
std
xor
fnstenv
shl
push
aaa
xchg
xchg
push
in
nop
mov
jbe
cmp
mov
in
gs
jo
cmpsl
xchg
mov
hlt
sub
mov
inc
sub
addb
imul
or
mov
sub
and
dec
fldenv
dec
sbb
cmc
push
out
sbbl
call
mov
lea
adcl
sbb
shrl
or
jae
rorb
xor
mov
cmp
push
xor
lret
mov
cmpsl
sub
dec
xor
dec
pop
xchg
inc
add
lret
subl
mov
movsb
mov
ds
jle
decl
fs
test
insb
xor
and
cld
outsl
fisubs
test
lcall
bound
jmp
lcall
ret
sbb
or
mov
pop
loope
sub
xor
in
sbb
pop
fs
jge
add
leave
ljmp
inc
in
cwtl
dec
in
cwtl
outsl
repnz
jge
scas
or
xor
aas
or
xor
push
out
sbb
lds
gs
pop
lcall
je
scas
push
and
fistl
repz
fcomps
test
push
cs
xchg
push
pop
push
setle
adcl
ja
inc
xor
rolb
or
lock
sbb
mov
imul
sub
negb
outsb
pop
cmp
push
or
stos
push
shlb
xor
cs
aaa
cwtl
xchg
in
xor
mov
test
pop
jo
mov
xchg
shl
adc
cwtl
lods
cmp
lods
pop
rcrl
pusha
imul
fldenv
mov
push
mov
cmp
clc
and
incl
push
dec
and
repz
add
cmc
jae
jmp
shr
xor
mov
xchg
mov
add
stc
loop
mov
dec
popa
les
or
stc
call
sbb
rorl
cli
jge
les
int
pop
movsl
nop
sub
sbb
pop
mov
mov
test
or
dec
ret
sub
movsb
pop
dec
pop
xchg
jg
movsl
gs
mov
test
mov
lret
mov
jl
mov
inc
add
xlat
mov
or
sahf
adc
inc
xchg
push
xchg
push
mov
fisubrl
adc
add
inc
repz
cmp
test
dec
pop
and
out
sbb
mov
loop
sbb
dec
pop
or
sti
adc
mov
xchg
div
insl
ret
and
dec
sub
and
adc
icebp
cmp
ret
out
push
xor
dec
add
sub
dec
jge
and
push
shrl
lods
rcrl
aaa
adc
sub
mov
inc
fsubrl
jl
xchg
loopne
jg
pop
dec
ret
fs
sub
loopne
sub
into
mov
movsl
daa
mov
mov
aad
or
or
add
call
add
hlt
push
pushf
adc
ret
mov
or
ret
jecxz
xchg
mov
popa
mov
lods
testl
jge
ds
dec
mov
push
and
loopne
stc
sub
sbb
into
nop
addr16
pop
scas
jns
sbb
xchg
pushf
iret
test
sbb
mov
inc
test
mov
aam
sub
dec
cld
shrl
push
dec
pop
addr16
xor
adc
roll
jb
sbb
or
test
xor
hlt
and
fistl
push
lods
mov
std
and
dec
jbe
mov
cmpsb
cmc
scas
arpl
iret
push
add
push
into
or
xchg
and
fisttps
sbb
inc
and
mov
xor
cmc
and
lahf
jp
push
add
lock
and
adc
mov
jmp
lret
and
or
je
add
xchg
pushf
add
out
dec
mov
cs
aas
inc
adc
movsb
and
fwait
jl
andl
jb
pop
lahf
mov
test
fstpl
jl
into
jg
mov
add
mov
dec
add
rcr
add
lret
lcall
pop
sbb
sbb
xor
jge
xchg
ljmp
mov
push
test
mov
aas
inc
add
xchg
test
xchg
jo
hlt
or
aad
sarl
add
and
mov
cli
pop
and
fbld
jnp
ljmp
andl
call
sbb
decl
push
outsb
ds
sub
jl
sbb
stos
adc
xor
mov
or
add
cmp
jnp
push
std
mov
cmp
mov
sbb
xor
fldl
aas
sahf
call
les
and
outsb
fstl
aam
mov
sub
aad
cmp
mov
icebp
call
int
pop
push
push
dec
pop
cli
lret
mov
dec
addb
cmp
ds
stc
aaa
mov
jbe
push
push
pusha
je
negb
pop
movsb
sbb
pushf
bound
pop
bound
push
fists
dec
or
mov
mov
inc
dec
mov
popa
sub
mov
fwait
jle
movsl
add
fistpl
lea
jmp
cmp
cmp
and
ss
pushl
xor
loope
mov
int
fnsave
enter
mov
stc
xor
cli
insl
mov
inc
mov
mov
inc
add
push
shll
jbe
rol
bound
mov
pop
fidivrl
jnp
loopne
add
add
dec
shll
jno
mov
stc
aam
mov
inc
insl
jae
push
push
mov
gs
inc
mov
scas
cli
lcall
inc
data16
sub
push
pop
jno
lcall
push
stos
daa
movsb
ljmp
mov
or
or
add
mov
loope
les
das
in
xor
rcrb
sub
sbb
cmp
mov
push
std
aas
xlat
cli
es
cld
out
faddl
or
mov
xchg
mov
xlat
cmp
inc
adc
loopne
mov
stc
xlat
cmp
imulb
jne
int3
jo
xchg
enter
inc
loopne
push
lock
jne
jp
inc
scas
xor
insb
fldl
push
ljmp
pop
sbb
jp
push
adc
out
int3
ds
lcall
or
sub
cmp
xor
fidivs
ja
sti
and
jbe
in
cli
pop
adc
xchg
push
and
mov
sbb
sbbl
xor
xchg
add
or
lock
sub
inc
pop
mov
jbe
iret
iret
add
add
fisubrl
mov
popf
mov
add
push
add
jmp
add
mov
outsl
scas
lods
mov
mov
in
call
inc
mov
mov
imul
movsb
data16
in
stos
cmpsb
loope
pop
lcall
cld
or
in
mov
fwait
push
and
cwtl
test
pop
mov
mov
xor
mov
lock
shl
xchg
inc
scas
and
ret
mov
movsb
clc
pop
ljmp
leave
add
fnstcw
mov
mov
mov
dec
repnz
xor
js
in
ljmp
sub
ljmp
or
mov
lods
xlat
shr
mov
xor
rcl
xchg
mov
push
mov
lock
int
cmp
add
xchg
dec
mov
incl
inc
faddl
mov
repnz
pop
adc
nop
inc
orl
rcr
js
lcall
leave
sub
cmc
adc
aas
mov
sub
mov
sub
and
dec
mov
cmp
ret
xchg
pop
push
in
mov
sti
pushf
loopne
pop
imul
jl
arpl
or
jecxz
test
pop
cli
adc
jo
bound
inc
js
dec
add
inc
cmpsl
push
mov
push
add
cmpsb
fdiv
mov
incb
push
push
sub
repz
pop
or
or
rorb
test
lea
sbb
cmp
into
mov
cli
push
pop
adc
cld
imull
inc
fcoml
jmp
mov
shr
xchg
or
fdivp
lds
test
or
mov
ja
out
dec
add
stc
nop
pushf
movsb
mov
sbb
push
and
mov
outsl
jp
in
sub
mov
lds
addr16
mov
jg
leave
add
ret
loope
add
imul
xor
jle
loope
mov
aaa
dec
stos
ss
lahf
or
push
jg
lea
lcall
jle
addr16
sbb
sub
lock
fcomp
lahf
fcmovbe
in
jle
inc
or
jle
inc
xchg
jg
mov
mov
std
push
pusha
adc
mov
std
xor
push
inc
inc
rorb
out
or
int3
int3
jg
lds
push
jl
adc
scas
sbb
mov
sbb
inc
shrb
adc
pop
daa
aas
outsl
jno
xor
loope
and
xor
mov
call
adc
mov
mov
les
sub
in
icebp
popa
add
jecxz
cmp
push
mov
je
jo
inc
leave
mov
cmpsl
js
mov
dec
adc
jl
insl
cli
push
aad
mov
daa
jno
icebp
add
push
xchg
or
pop
inc
pop
test
sub
inc
test
cmp
not
xorb
mov
dec
cmp
cmp
stc
call
dec
or
das
mov
xor
loop
ret
call
arpl
into
mov
mov
add
pop
popf
and
push
in
add
aas
adc
loop
das
sub
push
cli
sbb
jbe
push
push
add
and
jp
mov
cmp
je
cmpl
inc
sar
stos
or
and
aas
jb
sbb
mov
mov
xor
dec
mov
iret
imul
add
xor
movsl
loope
rcrl
arpl
jg
data16
jno
cltd
sub
ret
outsl
jge
rclb
movd
mov
ja
push
jno
jo
jo
call
inc
xor
add
pop
add
add
inc
xor
pop
and
dec
fwait
in
sub
dec
in
push
mov
adc
pop
orb
adc
popf
lret
sbb
cwtl
push
in
jg
out
adc
fs
aaa
pop
push
cmc
mov
sahf
bound
movsl
mov
push
adc
das
push
mov
rcr
setb
stos
xor
inc
lods
inc
ret
rorb
icebp
ljmp
sub
push
pop
cmp
das
adcb
pop
ss
push
in
fisubrl
cld
dec
gs
leave
adc
cs
mov
add
or
adc
inc
and
or
sub
push
dec
fadd
stos
dec
push
or
push
push
xchg
jb
shlb
mov
inc
jmp
in
xchg
rorb
repnz
inc
sbb
je
push
addl
incb
in
mov
stos
lods
fidivrl
popa
insb
popa
mov
mov
jmp
dec
icebp
inc
xor
dec
mov
push
stos
add
sbb
push
mov
cmpsl
push
sbb
inc
test
pop
rcrl
sub
rcll
mov
xchg
inc
cld
dec
jl
sbb
cli
pushf
mov
xor
jp
int
js
sahf
loopne
decl
sub
jle
mov
adcb
xchg
test
add
and
icebp
push
pop
lods
cmp
push
shrl
cmp
fnsave
popa
mov
or
aad
push
lea
add
dec
fisttps
int3
cmp
outsl
fcomps
cld
xchg
cmc
mov
cltd
jl
add
test
fcoms
addr16
loopne
arpl
inc
popa
mov
lock
popl
inc
test
or
mov
jecxz
and
lock
xor
cmp
jg
mov
ficomps
jbe
jmp
jbe
insb
addr16
mov
cli
mov
xchg
movsb
push
sar
lea
adc
mov
jbe
xchg
cmp
inc
test
xor
push
adcl
lcall
aas
dec
push
rorl
and
cld
and
aas
push
sahf
xchg
aaa
sar
push
ja
inc
cmp
pusha
or
push
jb
push
adc
xor
inc
test
cmp
push
jg
adc
das
out
call
mov
jl
or
pop
dec
jns
mov
dec
fnstsw
dec
cmp
adc
sbb
cmp
jb
ja
bound
inc
jmp
pop
adc
xchg
mov
jae
jecxz
dec
pop
dec
arpl
sti
and
les
adc
fs
mov
fcoms
hlt
aad
pop
loopne
call
and
mov
add
std
lock
ficoml
xor
insl
sbb
subb
xor
mov
les
push
adc
icebp
pop
mov
sub
in
mov
lcall
orb
enter
arpl
dec
pusha
leave
xchg
push
xchg
jbe
fistpl
sub
push
loop
fbstp
rol
ficomps
cmp
hlt
aam
pusha
aaa
stos
stc
dec
adc
cmc
xchg
ja
faddl
push
sub
rol
adc
das
or
ret
lods
or
dec
call
outsl
pusha
xor
sub
int
popa
movsl
pop
ds
icebp
aaa
or
scas
test
jp
cmp
jmp
adc
inc
jmp
sarb
pop
aad
repnz
mov
je
rcrb
pinsrw
ds
ret
inc
decl
push
mov
jae
sub
jg
leave
inc
mov
insb
mov
out
testl
adc
iret
subb
add
test
fistpl
stos
lods
out
sti
stc
js
jo
sub
mov
xor
pop
dec
rclb
dec
ficoml
arpl
das
lods
inc
sub
scas
clc
sub
lret
jns
dec
mov
mov
push
mov
or
jg
gs
pop
pop
outsb
lcall
subb
daa
cmc
mov
test
push
mov
mov
jnp
out
ss
mov
push
mov
push
or
adc
lock
lods
mov
and
add
dec
or
jbe
mov
push
sbb
data16
enter
out
fiadds
outsl
or
dec
jg
mov
sbb
sub
cmpsl
aam
cmpsl
pop
lds
add
lds
and
cmc
push
popa
inc
or
call
mov
jge
sub
insb
mov
enter
jbe
pop
inc
loope
push
insl
add
rorl
fsubl
push
adc
mov
call
dec
popf
dec
into
sub
pop
lods
adc
push
pop
mov
adc
mov
mov
popf
negb
decl
adc
push
es
test
jbe
inc
psllq
mov
les
dec
push
in
leave
jnp
sbb
loopne
dec
std
fcomps
pop
bound
adc
adc
loope
inc
lds
sbb
push
jmp
adc
xchg
or
ret
jp
xor
sub
add
mov
xorb
call
inc
xlat
cmp
aad
mov
sbb
mov
cmp
xchg
and
mov
adc
push
hlt
ds
add
call
lods
push
fnstsw
xchg
shll
push
xor
cmpl
push
cld
popa
pop
xchg
mov
test
sub
das
cmp
inc
add
or
pop
sahf
dec
orl
loopne
pop
adc
dec
adc
jmp
sub
add
gs
pusha
lds
cli
jno
cli
pop
pop
xor
ljmp
pop
sarb
or
loope
mov
imul
xor
arpl
jmp
sbb
sub
cmp
pusha
sub
pop
dec
cmp
mov
lahf
or
loopne
jp
inc
sub
shll
xchg
mov
enter
fsubrl
stos
xchg
pop
aad
lods
inc
mov
testl
sub
inc
das
push
jecxz
ss
xchg
test
popf
cmp
add
and
adc
fcmovnu
lock
mov
fldcw
iret
das
or
pop
xor
inc
aad
xor
scas
dec
ja
cmp
or
loopne
lds
in
aaa
xor
aaa
xor
sub
in
pop
loope
inc
inc
clc
out
adc
push
cmp
aam
mov
scas
test
cmp
std
ret
and
mov
xor
mov
rolb
jge
test
push
movsb
mov
adc
and
ss
je
std
dec
ss
cmp
xchg
adc
dec
inc
and
lds
mov
fstpl
stos
out
push
adc
loopne
in
test
jg
or
jecxz
aaa
ss
notb
push
jne
loop
sub
decl
cmp
xchg
call
or
mov
adc
lahf
add
icebp
insl
sti
sub
inc
adc
pop
pop
push
push
ret
outsb
movsb
push
outsl
daa
shll
sub
jbe
inc
adc
sarb
loopne
mov
push
mov
js
add
sub
int3
addr16
cmc
js
loop
mov
scas
repnz
mov
shr
mov
subl
sbb
mov
or
popa
notl
jb
cmpsl
jmp
xor
mov
sub
cmp
mov
xor
mov
int
pop
nop
test
jp
nop
subl
xchg
call
or
rolb
fldenv
dec
push
ljmp
xor
call
pop
sbb
imul
cwtl
or
ret
lea
nop
rcll
adc
inc
scas
push
add
sub
sub
cs
mov
pop
lock
mov
add
mov
add
push
push
xor
cmpsl
or
hlt
sbb
stos
mov
push
in
cmp
in
lcall
das
xor
insl
icebp
inc
push
mov
mov
test
cld
xor
fidivl
xchg
js
aad
or
shll
dec
mov
pop
lret
dec
aad
pop
pop
xchg
bound
xchg
in
sub
push
das
mov
xchg
cli
jecxz
pushf
sbbb
dec
xor
insl
sub
dec
xor
and
addb
arpl
mov
fisubrl
inc
loopne
in
push
in
addr16
jp
mov
sahf
adc
sbb
dec
mov
imul
xlat
mov
dec
addps
xor
andl
or
repnz
loop
pop
fs
push
aad
jge
push
cmpsl
outsl
mov
aam
jno
add
lods
fs
aam
out
js
adc
adc
dec
push
mov
ficompl
jne
jne
adc
jg
and
or
cmp
xchg
inc
ficoml
aas
mov
out
in
ss
std
rolb
sahf
call
add
ret
frstor
pop
pop
inc
mov
ljmp
lea
add
jecxz
shll
hlt
pop
pop
push
scas
adc
mov
inc
add
fiadds
stos
add
adc
mov
test
sti
cmp
sbb
test
or
ja
lods
out
out
inc
es
lods
mov
les
push
loopne
movl
or
push
inc
push
into
je
jp
add
out
mov
sbb
mov
push
lret
out
into
jge
mov
negb
in
lea
movb
mov
xor
inc
in
adc
rol
js
jne
outsl
sbb
add
in
mov
cmc
ds
or
and
faddl
mov
outsl
aaa
ja
loope
into
aad
js
sbb
inc
cld
ds
cmpsb
scas
adc
push
sub
sub
movsl
pop
mov
stos
push
add
rclb
push
insb
leave
xchg
push
loope
pop
fmuls
mov
sub
in
push
mov
add
jmp
add
dec
call
mov
xchg
ljmp
push
sub
adc
and
or
mov
push
in
loop
and
mov
test
mov
lahf
xor
hlt
inc
lods
push
pop
in
and
test
addl
cmpsl
and
arpl
icebp
insb
jno
enter
dec
repz
cmpsl
aas
movsl
movsb
push
dec
movsb
pop
add
jmp
push
lods
cmpsl
lret
mov
cli
rcrl
icebp
sbb
mov
mov
pushf
xor
call
fsubs
add
ja
sahf
popf
xchg
rol
loop
xchg
int3
or
lea
in
rorb
loope
pop
sti
inc
out
mov
lret
sbb
cmp
iret
das
imul
loope
jnp
push
xor
fildll
std
mov
adc
lods
adc
test
rcll
sarl
push
dec
jl
mov
sahf
xchg
or
mov
add
fwait
insb
insb
mov
fisttpll
dec
dec
int3
stc
popa
jo
aad
sbb
or
xlat
push
and
xchg
add
mov
out
and
rcll
mov
and
lahf
adc
loopne
and
arpl
and
inc
or
and
xchg
inc
mov
pop
int3
je
adc
sbb
pushf
adc
sub
jg
addl
lea
mov
adc
or
pop
inc
fwait
cs
add
lods
jbe
enter
rolb
push
aad
cmp
xchg
pushf
adc
lea
gs
jbe
sbb
cmpl
push
dec
addr16
std
mov
push
push
push
mov
jo
sbb
dec
pushf
std
ret
push
lds
jp
lcall
dec
leave
loop
sbb
mov
xchg
addr16
cmp
jmp
js
mov
int3
sarb
divb
movsb
int3
notl
xor
xor
jnp
sbbb
shl
call
pusha
mov
lods
dec
jecxz
sub
aam
insl
adc
jmp
lock
cmc
cmpsl
push
int
stos
fwait
pop
cmp
inc
js
jbe
insl
es
pop
popa
aaa
xchg
or
or
icebp
les
add
stc
or
clc
mov
or
ss
loopne
test
lock
sbb
mov
mov
in
xchg
or
pop
ljmp
pop
aam
insl
fmuls
in
stc
cmp
push
mov
jmp
xor
or
fistps
sbb
push
int3
stc
sbb
dec
ja
stc
cmp
or
sbb
mov
cwtl
mov
xor
xlat
push
pop
sub
jo,pn
mov
xor
jnp
inc
repz
inc
shr
fs
push
cli
fstp
data16
psubsb
mov
jge
push
test
cmpsl
ret
imul
cs
or
movsb
clc
fcom
insb
mov
or
xor
mov
ret
dec
cld
push
jmp
mov
addr16
adc
add
pop
fcomip
fwait
mov
sti
into
out
insb
lea
lahf
sbb
and
das
sub
addr16
and
imul
xchg
pop
lock
fs
addb
xchg
arpl
mov
out
adc
jle
icebp
mov
test
in
fnstcw
sub
mov
dec
xchg
cmpsl
xchg
inc
enter
lds
jb
fwait
mov
addr16
fwait
or
mov
ret
lds
add
lods
dec
fsubrs
mov
mov
and
sbb
adc
ss
pop
add
mov
push
inc
and
testb
in
inc
movq
in
push
pusha
or
insb
pusha
xor
add
sub
js
dec
movsl
adc
fsubl
jns
add
xor
clc
ja
leave
arpl
cli
and
push
lods
test
loope
repz
push
mov
setge
aas
clc
push
jl
fstpt
add
inc
test
sbb
cmp
push
pop
cmp
insl
movsb
push
jbe
call
xor
pop
adc
mov
out
dec
ss
pop
adc
sarl
sbb
xchg
in
lea
lods
out
add
cmp
xor
dec
or
lds
push
jae
in
xchg
imul
jecxz
jmp
pop
popa
sub
dec
testl
sti
or
shll
jns
jle
rorb
inc
mov
call
aas
mov
or
cmp
lret
xor
scas
test
pop
mov
rol
mov
cmpsb
loop
lods
push
or
or
or
jp
lcall
mov
insl
adcl
push
dec
or
or
adc
aaa
lcall
xchg
mov
in
and
mov
mov
jmp
jmp
mov
jl
cli
fsincos
jnp
and
rcrl
mov
jne
jp
repz
outsb
sbb
sub
sti
xchg
dec
mov
in
mov
add
adc
mov
test
mov
mov
cmc
push
lock
fcmovbe
mov
icebp
loope
dec
addr16
ja
hlt
lret
mov
je
lods
into
sahf
and
mov
add
mov
sbb
or
or
lahf
add
test
faddp
adc
dec
cmpsb
jl
push
pushf
fdivrl
rorb
xor
pop
xchg
lcall
mov
xor
fnstcw
sub
cltd
and
js
sbb
scas
push
mov
mov
arpl
cmc
push
movsl
out
outsl
andb
or
lods
sarb
inc
rclb
and
pop
jle
incl
lahf
push
add
jp
xchg
adc
sbb
lods
mov
jg
test
pop
in
inc
adc
ret
outsb
pusha
rcll
mov
fcoml
int
fildll
inc
rolb
push
ret
and
sbb
js
loopne
ficoml
add
jle
test
fdivr
xor
mov
cs
iret
push
xorl
lahf
test
mov
repnz
or
adc
or
push
cmp
mov
mov
push
mulb
loopne
inc
sub
dec
gs
pop
and
pop
arpl
orl
or
jl
mov
push
cmp
and
das
jg
add
stos
xor
cwtl
inc
sub
sub
inc
jns
out
inc
push
rcrb
xchg
iret
pop
or
push
pop
sub
sbb
inc
fcomp
pop
sbb
dec
sbb
subl
ret
rorl
in
sbb
pop
clc
push
or
jecxz
jne
xor
pusha
scas
and
fidivs
cmpsb
test
push
ds
call
test
ljmp
push
adc
rorl
cmp
push
mov
xor
push
mov
pop
xchg
push
push
jle
aas
inc
adcl
fldl
add
lcall
adc
outsl
push
cli
xchg
arpl
jmp
scas
ljmp
xchg
mov
xchg
jle
test
add
or
xchg
jmp
sarl
cmc
and
movsl
insb
popl
jecxz
mov
scas
inc
push
cmpsl
call
cmp
aaa
int
rclb
lcall
in
sbb
adc
ret
dec
jb
shl
sub
or
daa
mov
iret
jmp
xlat
add
mov
mov
push
mov
mov
ficomps
pop
lock
adc
shrl
push
aas
xchg
cmp
ds
mov
inc
int
or
push
pop
mov
clc
shl
mulb
add
paddb
ret
push
js
mov
inc
adc
pop
mov
inc
cmp
pushf
sbb
aad
adc
aaa
inc
sbb
pop
test
cli
mov
arpl
inc
cs
or
out
lods
mov
clc
ds
pop
pop
xchg
xor
mov
mov
jnp
ret
sub
sbb
call
mov
jns
mov
adc
cmpsl
adc
push
mov
insb
fcmovb
ja
jecxz
ret
shl
mov
xor
sbb
mov
push
and
enter
adc
jo
int
loope
push
jne
mov
sub
in
pop
ss
cli
adcl
fsubl
pop
jp
stos
imul
cmp
or
lock
das
mov
aad
int3
sub
adc
rorb
pushl
leave
iret
pop
push
call
aaa
push
sub
inc
cmpsl
pop
mov
clc
lods
aaa
inc
clc
and
mov
sbb
les
jg
std
sbb
or
or
icebp
lret
mov
mov
sbb
and
cld
sbb
sub
subb
xchg
add
add
or
cld
pop
pop
mov
pop
dec
xchg
mov
lret
out
cmp
push
sub
push
adc
clc
mov
bound
sub
and
push
add
cmp
xor
mov
push
add
cmp
cmovb
xor
add
xor
int
incl
ja
out
imul
and
dec
int
dec
lret
rclb
xchg
xor
cli
dec
adcb
jge
ljmp
mov
stc
inc
jge,pt
mov
lea
xlat
movsl
xor
mov
sarl
aam
cmpl
inc
sub
add
mov
jo
mov
mov
aaa
adcb
int3
lods
xor
or
test
lea
mov
roll
and
rolb
mov
dec
mov
call
mov
pop
sbb
ss
int3
arpl
jecxz
xor
scas
pushl
jp
out
sbb
jmp
pop
call
hlt
out
or
push
stos
pop
sbb
lcall
ret
xor
call
ror
pop
cmp
dec
cwtl
movsb
out
push
or
icebp
dec
mov
inc
adc
mov
shr
int3
and
incl
test
sarl
and
jno
sub
adc
inc
and
repnz
push
addb
popa
sbb
dec
addb
faddl
dec
mov
xchg
inc
cmpb
push
aam
repz
pusha
push
adc
insb
std
call
jl
xor
xor
fs
scas
shlb
adc
and
pop
inc
cmp
cmp
imull
jo
inc
imul
and
pop
cli
add
mov
test
adc
jle
cmpsl
mov
push
xchg
mov
push
pop
push
mov
sarl
gs
int3
cs
xchg
pop
lahf
push
aaa
add
inc
xchg
push
out
dec
xchg
sbb
leave
xor
aas
inc
dec
clc
stos
mov
mov
mov
cwtl
mov
xchg
insl
insl
pop
inc
fcom
push
jns
scas
sub
ret
jo
fsts
and
cmp
cli
sbb
xor
mov
sub
outsl
pop
and
inc
jecxz
mov
and
inc
std
mov
adc
or
xchg
dec
mov
dec
pop
clc
in
push
mov
movsl
ja
sarl
or
test
ja
or
ret
lock
or
inc
xlat
bound
jl
arpl
dec
jne,pn
shll
mov
and
lcall
fwait
mov
sbb
cmpsl
sub
inc
ss
inc
mov
jmp
dec
call
jle
adc
in
sbb
jae
addr16
push
cvtdq2ps
jbe
daa
cvtpi2ps
lahf
movsb
mov
daa
cmp
aam
xchg
mov
xchg
inc
stos
cwtl
push
sub
lahf
adc
add
gs
movsl
cmp
addr16
out
cmp
push
inc
js
and
imul
push
in
mov
cli
pop
push
and
outsl
push
mov
mov
call
or
push
xchg
popa
int
cmpsb
leave
jle
int
int
sub
into
scas
mov
mov
dec
ror
insb
jp
enter
jns
add
push
inc
lods
dec
sub
dec
sarl
xor
sarl
fucom
addl
mov
mov
outsb
xchg
in
sbb
imul
test
or
mov
cmp
adc
sbb
push
lret
ss
inc
adc
call
sbb
adc
jb
xchg
mov
sbb
sub
inc
addl
rcl
std
adc
lds
jno
ret
push
fcomps
inc
addr16
rolb
jns
nop
ret
add
out
and
sub
in
popa
push
cmp
sti
or
sub
cmc
xchg
setno
sahf
add
rcl
and
xor
xor
inc
pop
lea
push
in
jge
das
stos
pop
pop
lret
dec
scas
icebp
dec
jne
loope
fstpt
out
clc
mov
loop
jno
sbb
mov
cmp
das
stos
loopne
mov
sub
outsl
sbb
pop
mov
ljmp
or
adc
xchg
cli
cmp
fucomi
rcll
pop
mov
jne
adc
je
push
inc
lcall
jo
das
xor
adc
mov
pop
cs
scas
xor
rorb
fsts
les
cli
sbbb
cli
jns
call
xchg
je
or
bound
mov
testl
adc
sbb
jle
mov
ja
dec
loope
or
fisttpl
cmp
xchg
push
sarl
dec
rorl
mov
sub
shrl
inc
lret
subl
jmp
or
ja
mov
push
insl
xchg
das
scas
mov
mov
sti
dec
sub
pushf
pop
leave
popf
shrl
out
ds
jmp
shlb
pop
dec
mov
push
pop
stc
adc
add
decl
movsl
push
test
fldl
jle
mov
test
mov
pop
dec
pusha
push
ljmp
push
ret
test
pusha
or
push
lods
lods
mov
test
jo
or
popl
push
and
lds
movsb
and
shrb
notl
pusha
loop
hlt
clc
aas
add
add
mov
mov
pushf
adc
xor
loop
cmp
aad
pop
roll
mov
push
jnp
or
sub
xor
lcall
cli
dec
jge
out
sarl
aas
push
or
push
dec
and
popa
and
push
fimull
jns
ljmp
ror
cs
popf
cld
and
nop
stos
clc
sub
scas
add
xchg
add
push
out
cmp
call
push
cmp
loope
stc
jmp
je
mov
imul
sbb
lahf
cmp
mov
xchg
xchg
lods
inc
xchg
ja
sar
mov
mov
and
lret
lret
sub
xchg
mov
bound
xchg
jns
or
pop
cs
jns
jle
cmp
cmp
pop
pop
into
cmp
int3
movsb
icebp
movsl
sahf
mov
inc
arpl
add
xchg
pop
cmovge
mov
hlt
and
lock
cmpsb
sub
inc
adc
xlat
jl
cmp
das
je
imul
adc
insb
out
test
das
std
xchg
dec
pop
add
push
or
call
add
add
sub
cmp
scas
add
cmc
jnp
cs
hlt
addb
aad
cli
pop
or
mov
js
mov
clc
and
mov
aaa
xchg
fsubrl
int
mov
addl
call
mov
mov
xchg
stos
movsl
mov
jo
iret
shrl
add
icebp
push
enter
cli
sbb
pop
leave
std
or
add
and
psrld
loopne
fwait
rolb
std
push
nop
clc
aas
mov
xor
mov
sbb
arpl
rol
shrl
lods
pop
arpl
push
inc
sub
imul
cmp
decl
and
sar
ficomps
mov
cmp
lods
nop
mov
jg
xchg
xor
sti
adc
popa
sub
imul
jp
cmp
pop
inc
test
fldcw
scas
in
int3
xchg
cld
adc
mov
mov
stc
pop
xchg
fcmovnbe
out
subb
fimull
mov
sub
rcrb
in
xlat
out
in
ljmp
push
push
cld
stos
ja
js
xchg
ljmp
cmp
ret
push
add
push
sbbl
add
inc
scas
enter
jle
into
arpl
out
popf
mov
test
decl
imul
lahf
inc
lock
mov
jle
jp
fcmovu
std
xchg
aad
arpl
xchg
jns
jne
jle
popa
aad
cmpsl
jmp
mov
popf
cli
xor
pusha
movsb
sub
jmp
icebp
inc
dec
in
test
jb
aaa
or
and
xchg
addr16
push
es
dec
cld
dec
pop
or
lea
mov
sbb
cmp
dec
outsb
inc
shll
inc
cld
mov
aad
xor
data16
pop
xor
sbb
push
adc
add
repnz
mov
jmp
inc
adc
inc
push
rorb
pop
or
out
ds
insl
push
call
and
xchg
push
out
je
adc
mov
mov
mov
push
test
negl
cld
jb
lcall
add
dec
jnp
mov
xchg
das
or
mov
popf
inc
fsts
aas
adc
mov
inc
mov
adc
add
cmp
rcll
adc
out
sub
mov
push
xchg
add
mov
add
push
mov
xchg
outsl
cmpsb
push
sti
cmpsb
inc
mov
push
inc
push
stos
and
outsl
inc
mov
inc
inc
pop
inc
xchg
dec
jge
repnz
movsl
or
dec
mov
inc
mov
lods
rcrl
ljmp
sub
dec
pop
xchg
call
push
push
pop
xchg
jnp
jg
mov
sti
push
push
or
push
mov
loope
leave
jns
mov
cmpsl
imul
inc
nop
hlt
xor
lds
cmp
outsl
call
jmp
mov
push
jbe
cs
xorb
clc
cli
xchg
dec
xchg
js
add
mov
or
divb
push
fildl
out
dec
dec
roll
incl
sub
stos
mov
andl
repz
roll
into
add
push
inc
cmp
inc
das
pop
push
loope
fildl
jmp
inc
in
xor
cmp
xchg
and
push
cli
push
pusha
leave
call
into
push
cmpsb
cmp
outsl
sub
bound
xchg
push
rcll
dec
sbb
scas
divb
mov
std
out
mov
mulb
mov
xor
jae
aaa
and
orl
cmp
pop
xorl
inc
aas
or
push
dec
cmp
test
mov
xchg
xchg
fldl
pop
addr16
rcrb
jno
cmpsl
dec
outsl
into
flds
pop
adc
cwtl
adc
fstl
jns
adc
pop
clc
icebp
shll
or
xor
pop
sub
push
andl
popa
adc
lret
sbb
sub
aad
mov
mov
jae
cmp
in
fbld
pop
insb
pop
sbb
js
aaa
pop
sub
mov
fdivrp
lcall
mov
jmp
adc
rcrl
ds
and
decl
in
aad
movsl
inc
mov
ss
mov
pop
sub
mov
mov
clc
dec
push
fcoms
ss
inc
jecxz
pop
scas
cld
out
jp
cmp
sbb
aad
or
push
subb
sub
clc
and
cmc
sbb
enter
mov
lods
fwait
ds
mov
loop
pop
pop
pusha
sbb
les
lods
nop
mov
clc
cmp
imul
ss
ss
shrl
fwait
mov
push
lar
fs
addr16
lahf
lcall
test
push
pop
xchg
pop
pushl
stos
add
sub
jl
adc
jb
mov
pop
sub
sbb
test
and
std
sbb
subb
cmp
lcall
sbb
mov
push
dec
icebp
xchg
xchg
hlt
sub
jmp
mov
loop
inc
nop
fwait
xchg
xchg
cs
js
mov
sbb
push
daa
aam
inc
and
repnz
pop
decl
roll
pop
pushf
cmovb
in
inc
or
push
xchg
leave
sbb
aad
cmc
sbb
push
add
cmp
push
fwait
sahf
jb
lds
xor
jno
adc
test
addr16
jae
movsl
out
add
lea
add
idivl
insb
push
cmpsl
mov
out
stc
or
int
mov
imul
bound
and
orl
xchg
movsl
pop
lcall
rorb
xor
mov
lahf
adc
mov
mov
or
fdivrs
jnp
mov
cli
sub
dec
jge
call
lds
int
and
in
nop
add
adcb
xor
dec
outsl
or
xchg
and
call
adc
sub
stos
xchg
in
popf
sbb
and
mov
mov
int3
push
jbe
loopne
lds
sub
ret
cmpsb
and
xorl
push
dec
repz
mov
sbb
mov
xorb
mov
dec
cmp
ret
repnz
push
jo
fists
call
add
bound
xor
adc
rolb
push
cld
enter
pop
insb
lret
jbe
aas
cmc
mov
loope
fcmovb
push
pushf
adc
test
xor
jo
sbb
hlt
cmp
ss
push
loopne
adc
sbb
sub
mov
or
adc
mov
frstor
loopne
ljmp
orl
mov
in
xor
cs
adc
outsl
into
mov
dec
das
test
fstpl
movsb
loope
sub
jb
out
fs
mov
adc
stc
cmp
dec
push
clc
das
les
pusha
pop
cld
imul
scas
push
test
icebp
insb
dec
in
in
faddp
add
imul
jmp
inc
push
lds
lock
mov
dec
fwait
push
leave
jbe
and
shll
outsl
rcrb
or
aad
arpl
jmp
mov
mov
and
push
faddl
sbb
icebp
cmp
cld
mov
pop
insl
and
gs
and
in
sbb
or
ljmp
imul
or
fidivrl
mov
sub
leave
jbe
popf
int3
repz
jmp
or
push
mov
test
add
cmp
and
or
fnsave
mov
jge
add
or
and
sub
mov
mov
sub
push
jns
lcall
xor
inc
jae
sbb
leave
adc
fcomp
sbb
rclb
stc
and
xchg
clc
pop
aas
dec
pusha
cmpsb
cmp
jge
mov
fwait
out
cmp
movsb
cltd
sahf
pushf
data16
arpl
or
addr16
inc
adcb
adc
lea
dec
inc
push
jge
fiadds
scas
dec
clc
jg
jbe
mov
subb
mov
sahf
mov
arpl
jnp
xlat
pop
dec
js
or
inc
add
loope
mov
aam
xchg
test
cmp
into
cld
inc
sub
cwtl
js
xchg
mov
into
aam
jbe
test
ljmp
les
pop
push
inc
call
push
mov
arpl
into
inc
pushf
adc
xchg
pop
jbe
stos
mov
or
mov
push
aam
in
lea
scas
addr16
mov
stos
fiaddl
js
inc
cmp
jo
das
sbb
push
mov
or
cmpxchg
inc
inc
mov
hlt
and
arpl
shl
std
ficoml
mov
xor
cmp
push
add
fwait
mov
pushl
mov
arpl
shrl
out
iret
bound
dec
rolb
or
adc
mov
loop
push
push
rcll
push
fisttpll
and
arpl
add
in
rorb
popa
out
fwait
jp
lea
and
push
ret
icebp
push
std
mov
arpl
lret
cli
jmp
push
jecxz
pop
adc
mov
or
nop
mov
into
add
loopne
inc
dec
outsl
addb
pop
lock
cs
iret
xor
out
cli
adc
add
popf
stc
jo
clc
mov
mov
push
sarb
fstpt
stos
ficompl
push
push
sub
cmc
push
xchg
mov
mov
mov
pushf
rcrl
xor
pop
jp
jmp
and
icebp
mov
syscall
push
sub
and
aas
lods
push
cmpl
push
cwtl
adc
pop
fistl
dec
xor
pop
adcb
fcoms
and
xlat
dec
lret
loopne
push
pop
and
out
lock
and
in
test
push
xor
xor
lret
in
xchg
xchg
fdivrl
in
aad
fcmovbe
dec
call
movsb
gs
and
pop
jmp
mov
inc
sub
add
in
sub
fnstsw
outsb
xor
es
pop
in
or
push
fistps
jg
fwait
out
xchg
movsl
push
adc
inc
mov
inc
test
adc
xor
ljmp
add
mov
dec
fnstsw
outsb
scas
mov
push
push
add
push
or
lret
outsl
dec
mov
test
clc
inc
mov
push
sbb
jl
xchg
scas
fcomip
sahf
icebp
inc
xchg
sub
dec
cmpsb
inc
and
lea
pop
dec
in
or
ljmp
popa
xchg
sbb
push
dec
insb
xchg
movsb
xor
mov
xor
cmp
gs
mov
inc
outsb
mov
mov
insb
pop
clc
mov
mov
cmc
sbb
or
inc
popf
and
dec
mov
mov
and
mov
shrd
jns
xor
movsl
add
call
pop
adc
cld
cmp
xlat
pusha
xor
xchg
dec
pop
jl
pusha
mul
inc
push
lea
dec
and
das
iret
xor
add
out
jns
and
orb
outsl
dec
adc
cmpsl
sub
rolb
nop
cmp
leave
xor
sar
orl
adc
std
test
movsl
mov
add
das
mov
mov
xchg
and
loop
outsb
es
or
das
sub
push
pop
push
xor
mov
loop
push
test
adc
mov
mov
cmpl
js
loop
ljmp
xor
pop
mov
pop
sbb
mulb
arpl
xorl
lahf
add
sahf
push
mov
dec
icebp
sti
adc
in
xchg
in
sbb
jbe
xchg
push
push
repnz
ret
pop
mov
pop
push
popa
jne
inc
or
insl
cmpb
aam
xchg
movsl
mov
das
xchg
int
xchg
test
rolb
xchg
loope
sar
movsb
movsb
or
popa
or
lock
xor
stc
test
je
cld
or
fsubrl
add
jne
outsl
mov
jl
mov
pop
sbb
pop
xor
loop
in
popa
push
aas
sbb
push
cmp
insb
arpl
and
xorl
xchg
jg
shl
pop
and
icebp
jmp
mov
inc
subb
inc
test
adc
jo
je
into
sahf
movsl
loop
xor
xor
dec
add
mov
movb
je
movsl
add
mov
mov
addl
les
idiv
sub
xor
add
and
pop
sahf
cmp
aas
push
xchg
mov
pop
pop
jmp
cmc
mov
xor
fisttpll
imul
rcrb
hlt
and
cmp
adc
pop
lret
rcll
sub
adc
and
popf
lods
clc
dec
in
mov
cld
scas
out
xchg
or
sub
xchg
pop
loopne
xor
and
jo
insl
fdivp
or
fisttps
addr16
jo
push
mov
mov
mov
and
cld
mov
add
cmp
inc
mov
dec
and
xchg
adc
adc
jbe
sar
outsb
xor
cmp
dec
scas
push
add
pop
mov
pusha
or
daa
fidivrs
fimuls
jg
mov
movsb
aaa
mov
lods
pop
sahf
out
ficomps
repnz
and
cwtl
jle
and
pop
rorl
xor
push
cmp
sahf
inc
xor
test
test
aad
or
inc
mov
cld
subb
enter
mov
cmp
mov
popl
pop
sub
shll
and
mov
shlb
cld
addr16
push
cli
test
pop
xor
in
je
cmpl
addb
loope
daa
and
pop
push
mov
movsb
dec
sub
mov
lods
enter
pop
pop
lods
inc
jnp
decb
sub
les
xchg
movsb
sub
scas
push
add
mov
xchg
jle
jmp
push
dec
pop
adc
cmc
adc
and
mov
push
fcmovnb
pop
sub
lret
inc
xchg
hlt
pop
lret
loopne
aam
lret
test
pusha
mov
mov
pop
test
insl
ds
jmp
push
xchg
push
lods
popf
push
add
jle
xchg
loop
pusha
xchg
mov
sub
xor
aad
cmp
and
mov
sub
mov
lock
mov
dec
outsl
adc
mov
cmp
xor
arpl
loopne
push
lahf
ljmp
jle
ret
xchg
cmpl
sbb
mov
mov
shll
pushf
mov
dec
aam
test
sub
lock
xor
bound
insl
std
out
mov
nop
call
mov
fidivs
inc
popa
cmp
adc
rorl
xor
push
jge
xor
jo
leave
lock
jg
addl
jnp
push
xchg
sarl
jg
aaa
mov
fwait
sub
inc
and
or
shll
in
lock
frstor
add
bound
cmpsl
xchg
sub
mov
jmp
test
xchg
mov
stos
fucomi
data16
lods
sahf
imul
sub
xchg
xor
inc
mov
jo
xchg
cmp
inc
jnp
das
jo
or
lahf
sub
lods
ss
nop
clc
sbb
dec
pop
inc
lret
xor
xchg
cli
fistpll
fisubrs
in
mov
adc
mov
sub
dec
or
rcr
aam
bound
inc
hlt
pushf
pop
lret
icebp
and
or
dec
dec
dec
cmpsl
lods
mov
push
sbbl
je
dec
notl
dec
mov
icebp
mov
inc
pop
mov
leave
pop
aam
mov
in
mov
movsl
lahf
hlt
dec
cld
pop
xchg
xlat
fs
mov
stc
rorl
jb
ficoms
ljmp
call
xor
int3
add
les
dec
fists
mov
dec
and
xchg
imul
inc
xchg
mov
vsqrtpd
sbb
imul
stos
mov
ja
jmp
fdiv
ja
mov
sbb
sbbb
cwtl
push
adc
inc
je
loope
movb
jne
pop
xchg
clc
ds
inc
roll
bound
loope
lret
addl
sti
movlps
add
lods
stos
fdivs
jmp
mov
xchg
clc
cmc
jg
dec
int
imul
fldl
pop
inc
fnstsw
inc
jl
int3
dec
sub
dec
aaa
out
mov
cmp
insl
jbe
rorb
ljmp
jg
mov
nop
mov
je
mov
push
in
pop
daa
or
repnz
rorl
fistps
ljmp
jne
cmp
in
jl
loop
dec
adc
sbb
mov
cmpsl
xor
dec
mov
jae
fcomps
mov
add
cmp
push
push
inc
incl
mov
and
sbb
mov
xchg
test
adc
adc
cmp
cmp
flds
fwait
jmp
pop
xorb
cmpsb
sbb
push
and
jle
adcb
test
shll
cmc
je
sbb
push
adc
in
inc
add
sbb
inc
outsl
sbb
push
data16
cmpsb
stos
mov
addr16
adc
dec
pusha
ret
rcrl
shll
add
xchg
xorb
sub
es
enter
js
loop
daa
enter
pop
fsubl
outsb
mov
lret
js
mov
call
int3
jp
pop
pop
sub
adc
pop
popa
movsb
and
fwait
push
jo
gs
stos
pushf
test
or
sub
hlt
lds
xor
dec
adc
loope
bound
cld
jg
pop
cmc
mov
test
xor
clc
or
adc
mov
push
or
pusha
sbb
add
sub
pop
lods
sbb
pop
inc
aam
loop
divl
sbb
adc
xor
mov
mov
inc
addl
jge
sti
adcb
or
xchg
adc
or
rorl
mov
loope
adc
xor
repz
add
pushl
outsb
add
or
mov
pop
dec
popf
lds
sbb
pop
aam
sub
jle
push
cmp
lcall
dec
fs
adc
mov
imul
cltd
jge
adc
fstpl
mov
sub
testb
jmp
or
add
mov
mov
hlt
jae
sar
out
and
shrb
je
lcall
das
dec
lret
fisttpl
jbe
enter
adc
push
cmpsb
loope
inc
add
les
mov
and
inc
outsl
cld
mov
jmp
cmp
or
mov
mov
mov
pop
clc
jg
out
inc
fdivrs
jns
xchg
pop
inc
mov
xor
push
adc
imul
push
pop
decb
pop
jg
mov
jmp
mov
ret
mov
jmp
or
clc
jae,pn
loop
jo
sahf
call
dec
fldl
popa
stc
int3
cltd
call
ljmp
nop
mov
mov
push
xchg
mov
pop
inc
add
sub
xchg
sbb
mov
packsswb
sub
mov
push
push
aad
add
xor
rorl
sub
into
mov
std
pop
mov
les
jmp
inc
cmp
lcall
stos
mov
mov
inc
divl
test
adc
sbb
gs
inc
adcb
je
cmpsb
add
push
mov
iret
push
fildll
cmp
mov
fwait
push
sub
pop
add
pop
lcall
jecxz
and
enter
mov
push
cmp
jg
jge
push
outsb
cmp
movsb
enter
or
xchg
fdivrl
add
loopne
leave
loop
aas
lcall
roll
ret
xor
push
nop
frndint
mov
adc
jne
leave
dec
inc
fcompl
test
or
dec
and
js
ljmp
cli
push
cld
imul
sub
sarb
aad
push
hlt
rorl
lea
pop
movsb
jbe
lcall
push
xchg
mov
jp
or
xorb
ss
xchg
sahf
mov
popf
and
mov
jne
cmp
clc
jg
sub
inc
repz
mov
jp
and
cwtl
adcl
lret
scas
rorl
add
pause
add
mov
imul
pushf
mov
lret
mov
sub
mov
fs
aaa
inc
scas
sbb
and
sbb
fildll
loope
pushf
fscale
pop
xor
test
mov
lds
inc
cltd
and
add
adcl
push
xlat
lock
pop
mov
cmp
dec
cwtl
lea
pop
push
out
stc
push
cmp
aam
xor
roll
jmp
test
mov
and
inc
adc
push
fimull
add
adc
xchg
imul
push
jle
divl
jl
aam
or
add
scas
inc
and
lds
inc
sbb
xor
rorb
test
ret
inc
lahf
int
loopne
add
insl
mov
or
sub
push
cmp
arpl
ljmp
dec
ret
sbb
punpckhwd
mov
cmp
ss
xchg
push
push
sub
pop
fdivl
aaa
push
and
stos
push
outsl
lcall
sbb
xor
dec
dec
push
aam
mov
cmpsl
lds
pop
jle
mov
arpl
adc
and
mov
leave
shr
in
mov
dec
pop
dec
mul
aas
arpl
sti
scas
rcll
insl
sub
in
es
pop
cli
andl
inc
sub
mov
incl
and
ret
pop
shlb
sub
js
repnz
add
iret
dec
repz
add
jg
sub
mov
les
mov
xor
cmc
lods
sub
push
inc
jg
frstor
and
in
mov
push
jne
orl
das
scas
out
call
rolb
pop
xchg
pusha
negl
pop
insl
movsb
adc
icebp
push
cmc
outsl
mov
add
mov
cmc
and
add
adc
push
aam
and
add
dec
xor
in
sbb
sbb
icebp
dec
jb
mov
inc
pop
cld
and
mov
out
int
lods
or
xchg
mov
cld
pusha
inc
jg
leave
xchg
stos
cmp
push
bound
fcoml
sub
daa
jle
sub
add
pop
inc
fcomip
sub
das
and
mov
repnz
sub
mov
xor
mov
push
out
outsb
cs
cmp
daa
in
mov
xor
fisttps
jp
mov
mov
out
pusha
jp
pop
test
lahf
lcall
pop
jmp
lea
aas
add
jnp
mov
mov
jg
mov
nop
mov
popa
loopne
lcall
push
or
xor
inc
mov
jp
adc
dec
out
dec
jl
iret
add
jmp
and
sbb
aam
mov
adcb
orb
cmp
gs
dec
iret
out
dec
push
in
cs
int
pop
mov
mov
fs
insb
pop
sbb
pop
ss
push
xchg
pop
jb
sub
inc
jmp
ljmp
pop
adc
decl
andl
adc
xor
ss
lock
stc
bound
dec
ret
rep
dec
pushf
cli
xchg
stos
mov
cmp
out
es
push
sub
in
jnp
ljmp
lea
mov
pop
cmc
mov
cmpsl
sahf
in
fimull
jp
scas
cmp
aaa
popf
pop
loopne
inc
sarb
out
imul
pop
loope
arpl
lret
out
movsl
cmp
daa
rcr
dec
lods
les
mov
push
and
sbbl
and
aas
and
loope
fisubrs
ljmp
pushl
clc
inc
mov
push
add
pushf
add
mov
aaa
pop
xchg
inc
dec
ljmp
cmp
icebp
jl
pop
rorl
pop
inc
testl
dec
aam
dec
push
je
or
imul
jg
push
add
inc
movsb
in
in
add
mov
decb
sub
or
mov
inc
xchg
ret
pusha
pop
mov
pop
inc
data16
ljmp
or
xchg
pop
adc
cmp
outsl
popa
fstpt
add
inc
enter
cmp
or
mov
cli
jge
movsl
aas
mov
mov
push
js
inc
pop
cmp
punpcklbw
daa
jp
shlb
cs
xor
lcall
adc
push
and
inc
dec
fistl
stos
mov
mov
mov
sarl
jae
jl
sahf
repz
or
or
mov
int3
inc
repnz
cmp
loop
lcall
gs
into
inc
in
mov
inc
cmp
xor
sub
das
xchg
or
inc
shlb
mov
sub
sbb
pop
mov
jle
jp
dec
add
adc
call
xlat
dec
or
inc
adc
inc
test
lods
mov
push
je
xchg
pop
jle
lods
jg
inc
je
sub
stc
shll
daa
xor
lea
or
pop
shll
stos
adc
dec
adc
jb
push
call
pop
scas
loope
cmpsl
lock
rcrb
mov
daa
jl
into
add
and
popf
mov
adc
movsl
cmc
dec
cld
and
data16
push
outsb
sub
ret
lret
outsb
xchg
lret
push
lret
aaa
je
jns
outsl
mov
ret
or
rolb
call
lahf
dec
jp
push
and
test
dec
test
lea
adc
jbe
rorl
sbb
clc
data16
push
sbb
sub
call
push
lock
xor
push
rcr
lods
jnp
mov
pop
cmp
inc
jmp
popaw
dec
jno
push
cs
into
mov
call
mov
rol
mov
xchg
cltd
je
jge
and
lock
ficoms
and
rcrl
mov
lret
and
shll
int3
sub
mov
sub
rcr
push
push
sub
fst
add
inc
leave
ds
sbb
popf
std
pop
xor
js
in
fwait
sub
sub
shr
icebp
pop
cmp
xor
cltd
test
jge
mov
shr
test
mov
ja
sub
or
fwait
pushl
jne
adc
lock
cmp
push
adc
sti
push
cld
xchg
icebp
cmp
mov
ficomps
xchg
jle
iret
ret
jp
orb
push
test
rclb
fwait
roll
and
inc
sbb
ss
push
pushf
ficoms
cld
out
lods
dec
mov
push
cmc
clc
add
andb
sbb
add
leave
xchg
inc
push
or
push
inc
jl
sub
ret
out
jmp
inc
jle
sbb
incl
xchg
dec
int
fwait
inc
shlb
mov
call
or
adc
jmp
loop
scas
cmp
decl
int3
aad
dec
addl
mov
test
pop
cmp
inc
xchg
es
in
mov
cmc
cs
jnp
dec
push
imul
sub
xor
lock
dec
imul
jg
mov
push
inc
mov
xchg
stos
das
xchg
mov
push
lock
loop
xor
xchg
imul
lea
adc
adc
mov
mov
pop
sti
filds
cmp
mov
mov
rorl
xchg
and
daa
cld
stc
sahf
out
loope
fistps
das
or
mov
xor
jne
adc
pop
shrb
mov
mov
loopne
int3
jns
ljmp
add
aas
and
push
adc
push
inc
lock
icebp
dec
pop
jg
bnd
adc
jne
mov
push
adcl
sbb
jp
clc
rcrl
aas
xor
adc
add
cmpsb
movsl
scas
rorl
mov
mov
gs
ljmp
xchg
nop
mov
jecxz
add
sbb
cli
call
cli
clc
ja
pop
cli
ds
or
mov
loope
ja
int
push
or
sub
lcall
cli
in
mov
pushf
popf
mov
dec
hlt
pop
xchg
xchg
pusha
pop
xchg
es
int3
add
dec
cld
and
xor
shll
xchg
clc
push
imul
insb
or
push
jg
adc
mov
or
pop
fdivrs
xchg
fidivrs
xor
mov
aad
add
adc
dec
inc
xchg
roll
mov
xchg
shll
call
pop
cmp
in
cmp
add
insb
add
repz
mov
fisttpll
mov
inc
movsb
fidivl
bound
or
pop
in
xor
xchg
inc
jne
add
inc
jns
pop
sbb
cmc
into
mov
or
stos
xchg
in
inc
cs
inc
and
sub
or
add
sub
aam
pop
dec
clc
fdivl
rolb
jo
sub
lahf
lds
jno
lods
mov
jae
aas
pop
or
rcrl
aas
int3
leave
ret
inc
or
mov
add
pop
push
adc
xchg
adc
mov
int
jbe
xchg
fs
lahf
clc
inc
inc
jecxz
inc
cmpsb
dec
dec
and
cmc
and
ljmp
dec
loopne
imul
or
jnp
lds
in
sub
and
push
pop
out
js
mov
ret
test
sub
int3
jg
leave
push
dec
push
leave
or
fisttpll
mov
add
jno
sbbl
shl
in
rcll
pop
or
add
test
fbstp
mov
xchg
pop
lods
and
popf
add
xchg
dec
pusha
push
cld
dec
lcall
mov
jne
pop
mov
mov
ja
and
stos
fcomip
clc
push
fxam
adc
cmpsl
xchg
sbb
insb
int3
rcrb
addr16
fildll
inc
rcll
pop
push
dec
je
pop
add
fsubl
lcall
xchg
out
nop
lods
xchg
jmp
call
rep
fidivrl
or
scas
push
mov
shll
jno
adc
and
fstl
enter
mov
push
lcall
or
aaa
std
fisttpl
inc
cld
imul
fstps
hlt
scas
cmp
jp
jnp
cmpsb
cli
and
pop
mov
loop
call
dec
sub
xor
jae
daa
cmp
sbb
movsl
test
cmpsb
or
jo
out
mov
mov
xor
lcall
mov
add
adc
mov
or
jp
incl
in
mov
fs
or
lock
notl
jp
inc
push
mov
hlt
dec
out
movsl
not
dec
sbb
dec
dec
dec
and
inc
xor
mov
adc
hlt
xor
or
cmp
jbe
inc
pop
xchg
mov
adcb
mov
mov
loopne
or
decl
mov
test
jecxz
out
fdivrp
loopne
clc
cli
or
jge
out
pop
pop
dec
lods
call
jl
js
cli
arpl
push
push
loop
or
popa
cmp
xchg
inc
aad
cmc
pop
push
leave
jecxz
je
in
jno
lret
ffree
xchg
icebp
xchg
mov
nop
ljmp
jmp
jbe
outsl
fbstp
maxps
mov
or
pop
ds
inc
lcall
sbb
push
imul
jae
jno
insl
lods
loopne
imul
mov
out
pop
sub
hlt
xor
adc
loopne
popa
push
repz
add
je
xchg
push
call
mov
rorb
pop
fdivr
les
jb
lcall
in
mov
scas
out
cmp
lods
pushl
out
cld
mov
mov
ljmp
inc
add
and
add
andb
jg
adc
add
adc
push
fdivr
lds
sub
sub
jg
jg
dec
mov
test
or
mov
or
add
test
inc
aad
and
mov
sbb
push
nop
pop
fwait
cmc
in
or
les
out
push
nop
rorb
xor
inc
loop
call
loopne
mov
outsl
aad
xchg
aam
fimull
out
push
std
xchg
push
imul
shrb
mov
cmp
iret
sbb
adc
stos
adc
push
fs
in
fcompl
jmp
leave
pop
xchg
aad
sbb
sbb
jmp
mov
sbb
scas
cmc
or
and
adc
popa
cli
rclb
cmp
add
xchg
jo
inc
jge
push
and
and
sub
mov
jle
jmp
sub
inc
aaa
hlt
lcall
lret
int3
cmp
cmpsl
adc
stos
incb
pop
xor
in
sub
cwtl
lods
test
xor
inc
jbe
cmc
out
adc
fwait
mov
mov
mov
add
add
xor
or
or
popa
xor
ljmp
shlb
pusha
fistps
pop
enter
xor
gs
and
cld
and
adc
movsb
repz
dec
nop
mov
cs
lods
dec
pop
adc
into
ljmp
sbb
cmp
push
ja
clc
mov
lock
js
dec
push
xor
xor
mov
sti
cmc
push
mov
ja
mov
sar
and
push
add
sbb
jg
pop
add
add
sub
cmpsl
daa
adc
sbb
xchg
jb
out
sbb
orl
jmp
sbb
pop
fldenv
std
out
lcall
jbe
aaa
xchg
mov
xchg
adc
jg
xchg
dec
mov
and
je
push
jl
push
cwtl
mov
jp
mov
push
scas
setge
cmp
loope
sbb
mov
xor
jle
clc
int3
adc
leave
sbb
sarb
rcrb
mov
movsb
int3
add
add
popa
pop
arpl
push
xor
lock
sub
dec
lock
in
daa
cmp
cli
dec
loopne
mov
stos
adcb
mov
cmc
ret
decl
inc
jl
xlat
xchg
sub
mov
pop
movsl
mov
jg
add
adc
cmp
outsb
ljmp
push
decl
les
sbb
mov
xor
and
jp,pn
lock
daa
dec
jg
sub
je
sbb
lahf
test
movsl
stos
push
lret
aad
adc
aas
push
stos
and
je
mov
sub
icebp
push
js
std
push
adc
jp
popa
movsb
mov
aaa
nop
inc
lahf
aam
xchg
aad
cmc
mov
aaa
adc
push
push
je
inc
std
arpl
and
std
mov
out
dec
xchg
mov
push
repnz
orb
sub
pop
fsubs
clc
or
mov
pop
shr
adc
loopne
mov
pop
or
out
fwait
pop
sti
pushl
cld
ds
inc
jg
dec
mov
push
ljmp
arpl
jp
bound
call
je
hlt
mov
or
dec
je
cmp
push
sti
cmp
push
and
out
lods
movsb
push
add
sub
inc
cmpsl
jl
mov
mov
add
lret
cmp
fstpl
fstl
pop
cmp
loopne
mov
scas
out
dec
dec
push
cmpsb
fidivs
ds
imul
push
les
addb
mov
shlb
sub
jge
incb
or
add
loope
shrl
dec
rorl
inc
andb
dec
loopne
pusha
fwait
cmpsb
fmull
scas
loopne
pop
fcmovbe
loope
lock
add
lret
mov
outsl
cmp
scas
adc
dec
lcall
aad
sub
in
in
push
jecxz
mov
nop
outsb
push
dec
nop
scas
loope
jle
xor
shll
lock
sbb
push
jg
lea
dec
jp
cmp
jno
mov
mov
arpl
int3
jecxz
sbb
xor
push
xchg
sar
xchg
testl
mov
inc
dec
daa
pop
clc
dec
addr16
mov
adc
fsub
xchg
mov
in
jecxz
push
lock
les
mov
cwtl
push
std
ljmp
inc
xchg
sbb
pop
and
nop
mov
cmp
lods
bound
jmp
jecxz
cmpsb
xchg
lock
inc
mov
cmc
and
pop
stc
aas
inc
fidivrl
jbe
enter
divl
sbb
inc
jb
mov
divb
mov
jns
stos
inc
repz
dec
mov
jne
cltd
lea
jns
jmp
mov
jmp
inc
repz
add
mov
aam
testl
add
or
and
ret
xor
pop
rcl
jae
or
mov
add
mov
add
xor
xlat
btc
pusha
adc
nop
lret
cld
movsb
cmp
push
pop
sti
hlt
xor
pop
int3
movsb
out
aad
push
push
fisttpl
mov
outsl
add
pop
sahf
cmpsb
or
and
inc
mov
jecxz
loope
lahf
jge
sub
or
addr16
cmpsb
dec
xlat
ret
or
inc
cmp
rorl
ss
out
std
rorb
ret
cmp
adc
jae
cmp
adc
lcall
and
outsl
lahf
xchg
stos
mul
push
mov
cmpsb
pop
imul
clc
mov
stc
xchg
adc
jo
loopne
sub
add
dec
inc
pushf
fldt
repnz
cmc
cs
xchg
je
push
and
movb
cltd
aas
jl
rorl
cmp
push
sbb
cmpb
nop
dec
and
aaa
lcall
test
fwait
push
or
psubd
jns
sti
ss
aas
mov
movsl
imul
popf
mov
add
mov
incl
mov
jne
and
mov
shrb
fcomps
orl
pop
jle
pop
xchg
cli
movsl
sbb
dec
push
mov
lea
cs
xor
scas
ljmp
lret
shr
aas
clc
pop
dec
or
cmp
adc
call
inc
movsb
jns
push
xor
and
cmpsb
imul
je
and
incb
adc
xlat
leave
test
outsl
cmp
jg
orl
xor
jge
inc
stos
inc
fs
movsl
in
xchg
js
jecxz
adc
in
addr16
sahf
ret
push
test
call
pop
cmp
fbstp
jl
pop
xor
pop
jbe
mov
jne
fbstp
shl
sahf
and
loopne
adc
push
andb
fstl
pusha
jge
jecxz
mov
insb
call
popf
cmc
les
test
jno
aam
sub
mov
xlat
dec
movsl
ljmp
pop
jg
scas
mov
xor
sub
es
lahf
adc
xor
mov
fimull
mov
add
mov
jns
xchg
sti
setle
mov
jg
ljmp
iret
push
aaa
shlb
and
add
iret
fcoml
mov
sub
cmp
push
aas
repz
mull
cmc
pop
adc
stos
lcall
scas
pop
mov
nop
mov
or
call
sub
shlb
rcrb
push
xor
dec
aas
imul
loope
mov
or
mov
or
pushf
sbb
cmp
mov
inc
mov
roll
out
aad
cs
cld
pop
sbbl
inc
or
and
sub
movsb
insl
sub
jns
sbb
pop
mov
jae
or
sbb
sti
pop
decb
pop
add
lret
dec
das
add
pop
mov
or
lock
or
or
jne
cli
mov
mov
shrb
cwtl
mov
int
mov
fistpl
nop
clc
clts
dec
pop
shlb
aam
rolb
fisubl
jmp
aam
pop
adc
cmp
pop
pop
pusha
push
loop
adc
dec
ret
movsb
and
int
or
add
or
ja
sbb
xchg
pop
sbb
je
dec
and
or
add
sbb
pop
test
push
out
push
and
mov
or
lods
xor
add
fwait
lods
insl
inc
push
pop
ret
sbb
xor
pop
mov
call
gs
pop
pop
xor
cmp
fnstsw
jl
sub
pushf
pop
cmp
data16
pop
add
shlb
ja
hlt
jo
jle
sub
test
or
xorl
cmp
ljmp
outsb
cwtl
and
scas
fisubrl
stc
shll
mov
ja
loop
addb
stos
and
mov
add
xchg
mov
add
mov
lods
push
inc
push
nop
xor
lock
adc
outsl
mov
jo
out
push
or
pop
fistl
xor
aas
and
sub
or
std
leave
pop
rorb
sbb
inc
out
mov
push
leave
incl
or
adc
call
out
inc
add
aas
jns
adc
daa
add
ret
jnp
rorb
adc
and
sbb
aas
pop
add
mov
frstor
cli
aas
fisubl
xchg
sbb
cmpsl
scas
rcrl
std
lods
in
xchg
stc
pop
xor
arpl
or
aaa
je
or
pushf
inc
xchg
xor
push
gs
frstor
sub
test
repz
mov
ljmp
adc
outsb
mov
subb
and
popa
adc
jg
or
movl
pop
movsb
aas
stos
cli
add
pop
aad
adc
add
jno
mov
test
repz
ja
xor
lock
fldenv
icebp
mov
pop
mov
push
in
push
aad
pop
jp
jbe
add
add
mov
pop
dec
pop
aas
mov
rolb
iret
xchg
xor
sub
and
cli
les
jmp
or
push
sub
push
sub
aas
mov
jl
mov
push
in
cmpb
mov
test
bound
inc
inc
sub
sub
es
jge
rclb
pop
dec
popf
sbb
rol
pop
mov
jge
pop
nop
sarb
sbb
or
adc
mov
sub
xchg
push
insb
sub
add
cwtl
push
jo
decb
sti
jge
ret
shll
pop
dec
or
push
ret
sub
inc
daa
mov
and
sbb
push
adc
xchg
cmc
jmp
ffree
push
sahf
mov
lods
mov
pusha
popa
rcrb
or
es
nopl
sbb
sub
lea
add
add
push
aam
setns
mov
and
cmp
aaa
xchg
and
cmc
popa
xchg
push
cwtl
out
jmp
addb
push
decl
ss
pop
jbe
pop
mov
push
xor
jbe
adc
gs
xchg
cltd
test
pop
mov
mov
loop
mov
mov
push
aam
bswap
add
mov
std
sbb
or
xchg
rclb
repnz
daa
xchg
rorl
adc
aam
or
mov
and
pop
adc
add
and
dec
insb
mov
shlb
push
call
add
fsincos
bound
add
xchg
les
cwtl
adc
adc
add
sbb
jns
inc
push
data16
aas
jecxz
xchg
fsubr
cs
xchg
dec
xor
or
loope
call
fcoms
cs
arpl
scas
and
and
cmp
imul
clc
xchg
sbb
inc
inc
popa
cltd
int
std
cmc
push
shrb
xor
cmpl
repz
push
mov
loope
adc
test
sub
ss
sbb
loopne
mov
hlt
pop
das
fildl
popa
xor
cmpl
mov
cmp
and
in
mov
sbb
xchg
pop
push
pop
push
pop
mov
movsb
mov
xchg
sub
sub
and
push
data16
stos
shlb
xor
pushf
cmp
ja
jl
ret
iret
add
xorl
sbb
aas
leave
mov
fcmovnu
subl
cmp
pop
jg
in
les
inc
in
or
jge
push
inc
or
pop
fcomps
jl
jmp
push
lds
jecxz
sti
rcll
inc
sub
xchg
lea
mov
jnp
movsl
add
inc
loope
sbb
sbb
xchg
adc
push
sbb
xchg
fdivs
mov
mov
andl
lea
or
outsl
lock
mov
loop
mov
xorb
or
sub
xor
lods
loop
cltd
pop
das
cmp
add
ja
push
dec
fisttpl
cld
xchg
xchg
dec
mov
loop
lock
iret
inc
adcl
mov
scas
loopne
and
fidivrs
data16
les
push
or
loopne
mov
xlat
insl
cmp
scas
int3
mov
pop
push
hlt
je
mov
jecxz
cs
inc
test
in
loope
push
inc
in
adc
mov
add
xlat
xchg
test
scas
xchg
and
addb
rcrb
cwtl
cmp
ret
xchg
cmp
or
push
cli
fidivs
sbb
in
addl
xor
xor
pusha
ret
imul
loope
xchg
fisubrs
stc
aaa
and
repnz
clc
pop
std
aaa
insb
mov
cmp
sub
rol
dec
inc
rcr
ror
dec
sahf
sub
movsl
int
inc
mov
shll
mov
int
or
sbb
and
mov
sub
adc
psubq
adc
in
sub
ljmp
pop
adc
jno
int3
popa
orb
scas
or
mov
or
shll
std
mov
cmp
inc
and
mov
add
cli
outsl
dec
xchg
lds
dec
sbb
cmpsl
out
cmc
mov
xor
mov
dec
xor
addr16
sarb
lcall
mov
imul
clc
sub
in
repnz
adc
pop
jo
xlat
push
adc
lock
dec
pop
into
addb
outsb
inc
lahf
cmc
loopne
in
insl
and
push
call
xchg
mov
stos
mov
jnp
in
pushf
imul
inc
lcall
and
ljmp
push
inc
pusha
cltd
mov
in
inc
mov
loope
sbb
lock
aam
xchg
outsl
in
mov
xchg
sub
mov
andl
and
xchg
dec
cmpsl
out
test
popf
js
mov
push
stos
shll
jmp
or
mov
outsl
mov
xchg
icebp
outsb
inc
push
pop
sub
xchg
addsubpd
clc
clc
jg
addr16
fiaddl
leave
jbe
xor
mov
xor
pop
sub
push
lods
inc
ja
xchg
in
sbb
xor
mov
movsl
mov
test
jecxz
mov
ret
call
shll
cmpb
lahf
adc
sbb
cmc
test
loop
push
jg
lods
mov
push
std
add
add
popf
push
cmpl
cli
or
add
push
push
pop
adc
std
push
mov
jo
or
xor
jb
loopne
mov
or
arpl
lods
out
fwait
dec
decl
pusha
cmp
cmc
xchg
jo
jb
ja
xchg
imul
pop
xchg
mov
fs
sub
sbb
enter
sar
dec
pushf
adc
or
sbb
jge
cmp
xor
mov
mov
aaa
or
xor
pushf
sar
movsl
loop
push
subl
inc
lods
test
nop
movsb
clc
ljmp
stc
add
dec
mov
jmp
lret
xor
xchg
mov
dec
loop
sub
testl
push
cs
pop
sti
or
into
adc
add
hlt
inc
jb
dec
sub
stos
aas
icebp
test
jo
push
jno
and
and
push
insl
xor
sti
repnz
adc
dec
push
push
aas
scas
sub
pushl
and
adc
lea
js
cmp
rol
mov
out
add
outsb
sbb
inc
pop
adc
dec
mov
shrl
xchg
rclb
push
adc
sbb
je
stos
or
jl
arpl
sbb
hlt
subl
into
shll
loopne
je
jno
nop
pop
iret
add
ret
es
ucomiss
cmp
mov
jle
dec
cmpsb
cmp
cmc
inc
mov
and
xor
sti
pusha
imul
fxch
inc
cmp
fsub
jmp
arpl
sub
and
test
inc
jp
xor
imulb
xchg
lcall
rcll
imul
pop
hlt
dec
mov
inc
pop
mov
dec
pop
inc
adc
mov
inc
dec
sahf
outsb
jne
popf
clc
fists
fucomp
lods
enter
cmp
push
les
movsb
loopne
adcb
jno
arpl
or
push
rcr
jo
mov
cwtl
andb
jl
lods
es
aaa
movsb
nop
lcall
xchg
and
in
pop
xor
cmp
lcall
xchg
add
xlat
fstp
mov
adc
mov
cmpsb
jl
mov
ficoml
shll
dec
in
lea
mov
js
cld
pop
js
mov
xor
push
adc
lahf
cld
pop
stos
stc
cmpsl
add
sub
sbb
rcll
test
cwtl
and
push
cmp
jno
adc
jmp
xchg
jg
lods
cltd
push
sbb
pusha
lds
mov
lret
xor
repnz
mov
les
or
pop
aad
jb
pop
xchg
fistpl
aam
hlt
dec
scas
outsb
insb
push
test
xor
xchg
arpl
and
ret
mov
and
subl
xor
pop
aas
out
lahf
sbb
fiaddl
in
ss
xlat
repz
scas
jecxz
mov
call
or
pop
pop
inc
in
lds
adc
cltd
movsb
pop
xlat
mov
sysenter
lock
pop
pop
out
dec
aad
cmp
xchg
push
xchg
pop
cli
in
test
ret
out
sbb
add
sbb
inc
or
and
sbb
xor
test
dec
xchg
fnstsw
or
rcl
push
jne
inc
cli
mov
stos
sbb
sbb
cmc
imul
into
cmc
mov
push
push
xchg
push
repz
sbb
out
push
enter
ror
jmp
flds
stos
jl
cmp
mov
ret
sbb
daa
out
subb
sub
cmpsb
xchg
mov
push
in
iret
shlb
add
push
decl
jge
jo
pop
and
pop
mov
xor
mov
lahf
rol
test
add
push
xlat
rcrb
add
xorl
ret
add
dec
push
xor
inc
icebp
lea
push
les
push
xlat
clc
mov
daa
daa
add
inc
ljmp
and
flds
lods
sub
adc
cmp
add
dec
in
xchg
xchg
cwtl
in
inc
or
pop
cmp
xor
cmp
rolb
mov
and
xchg
mov
push
mov
and
jno
ss
mov
or
in
test
jl
rorb
pop
xor
mov
lods
jecxz
shrb
stos
and
sbb
ss
incl
cmp
lahf
loop
sub
dec
cmp
add
jmp
inc
addl
push
mov
and
repnz
xchg
dec
jle
xchg
stc
mov
mov
cmp
je
or
jnp
jmp
jp
jge
cltd
mov
xchg
adc
inc
pusha
incl
stos
repnz
and
inc
pusha
cmp
cmp
adc
inc
add
int3
aas
sub
jge
or
pop
sbb
outsl
cld
jmp
dec
cmc
xchg
inc
pushl
hlt
ss
inc
push
ss
pop
dec
push
repnz
sub
lret
mov
arpl
xchg
ret
xchg
pop
push
xchg
mov
daa
frstor
mov
nop
push
cli
test
mov
push
insl
adc
xchg
movsl
sub
mov
cmp
mov
mov
sub
adc
dec
fnstsw
stos
call
lahf
xorb
add
lods
imul
lret
xchg
js
enter
push
push
inc
aas
es
push
adc
movsl
cmp
mov
mov
xchg
mov
scas
inc
mov
lahf
rorl
inc
pop
lcall
call
andl
data16
jb
stc
daa
hlt
pop
loop,pt
xlat
cld
mov
sarl
mov
sti
imul
roll
es
add
dec
dec
xchg
cmpsl
andb
clc
jmp
in
jge
push
test
mov
mov
rcrl
pop
clc
inc
sbb
sub
cmovb
push
shlb
push
jmp
mov
outsl
out
xor
sbb
andl
lret
sbb
out
cmp
and
inc
dec
push
push
jg
mov
push
inc
push
push
dec
pop
pop
push
dec
lds
popa
ja
in
imul
incl
fidivl
jb
pop
dec
popa
jae
push
jbe
jo
push
xor
jg
jg
inc
inc
inc
pop
dec
dec
dec
inc
push
inc
test
js
push
je
dec
imul
push
imul
jo
js
bound
bound
outsl
xor
jle
push
push
lods
push
dec
push
push
dec
inc
inc
dec
aad
inc
mov
xchg
xor
add
xor
mov
push
pop
push
push
push
inc
shlb
xor
xor
in
je
xor
inc
addr16
pop
dec
outsl
inc
fs
dec
outsl
push
bound
fs
insb
data16
negb
arpl
js
gs
das
xor
scas
mov
gs
inc
add
insl
push
ss
je
push
in
lods
mov
sbb
fs
xchg
outsb
jg
jns
nop
inc
push
dec
dec
dec
inc
cld
pop
push
fldt
outsb
insb
popa
fs
gs
out
js
enter
outsl
ljmp
arpl
imul
push
jo
repz
inc
push
mov
push
daa
push
push
push
push
inc
rcr
loopne
std
jbe
dec
rolb
pop
push
shlb
dec
outsl
mov
outsb
jb
dec
push
dec
bound
jae
insb
dec
fs
data16
xor
pushl
aaa
xor
xor
xor
imul
bound
bound
in
idiv
push
popa
addr16
dec
push
bound
fs
inc
push
dec
inc
inc
fcoml
imul
push
inc
insl
push
push
je
je
cmp
xlat
add
xor
iret
xor
add
pop
sahf
xor
fadd
or
pop
and
outsl
ja
imul
inc
outsb
inc
xor
int3
xor
lods
loopne
push
sub
xor
push
std
incl
imul
gs
push
inc
inc
dec
push
pop
dec
inc
pop
inc
dec
inc
dec
dec
test
or
dec
push
lods
push
inc
dec
rcr
decl
mov
je
insb
jne
push
popa
xlat
fcmovnu
ret
jno
jns
inc
insb
das
xor
jb
ljmp
push
xor
jbe
pop
push
push
dec
dec
inc
pop
sub
or
dec
push
dec
inc
sbb
mov
push
fdivrs
lock
insl
fs
stos
jo
jg
push
popf
imul
xor
aaa
dec
jecxz
dec
or
pop
inc
inc
inc
inc
outsl
sbb
pop
push
stc
dec
loope
fildll
dec
inc
add
push
push
movl
lret
dec
imul
inc
xor
lock
cld
pop
mov
je
dec
pop
dec
shlb
ja
push
lods
mov
mov
ja
add
mov
push
addr16
mov
jne
outsl
jo
jns
push
clc
insl
scas
mov
insl
jo
js
jno
dec
dec
ss
pop
ret
push
imul
jno
ljmp
addr16
dec
push
dec
pop
push
jae
push
sahf
xor
mov
jb
cmp
fistpll
inc
push
inc
and
dec
lahf
inc
push
push
dec
outsl
mov
ret
lds
jbe
jo
dec
xchg
inc
imul
outsb
mov
insb
jno
dec
push
dec
push
shrb
mov
dec
addr16
inc
fucomi
sub
outsb
js
gs
inc
popa
negb
lea
pop
arpl
insl
push
fbstp
fimull
xchg
movsl
je
jb
in
outsl
das
mov
cmp
push
je
ja
insl
ja
arpl
or
push
cmp
dec
xor
dec
jo
fbld
imul
jmp
xor
mov
imul
jbe
fsubs
dec
add
in
dec
push
pop
popl
dec
xor
dec
imul
aaa
enter
div
inc
sti
fistl
andl
je
push
fdivl
jns
lods
mov
loope
inc
cmp
cmpsl
push
jg
sbb
push
inc
push
push
jne
push
pop
test
shl
js
push
xor
mov
mov
gs
ljmp
xchg
arpl
int3
js
pop
popa
int3
xor
cs
addr16
outsl
inc
pop
outsb
ja
data16
loope
outsl
pop
sbb
inc
xor
dec
inc
fwait
js
je
aam
je
inc
fistpll
dec
push
outsl
push
or
fbstp
inc
pop
inc
pop
dec
mov
push
push
push
push
outsb
pop
addr16
sbb
ja
bound
inc
add
movb
push
imul
andl
lods
adc
scas
in
add
mov
cmpsl
xor
or
imul
xor
fisttpll
dec
mov
sub
mov
jbe
mov
jp
mov
inc
xor
std
fistps
in
jae
insl
pop
test
popa
je
ja
outsl
je
insb
dec
aaa
pop
sub
xor
je
bound
jne
sbb
outsl
popa
bound
dec
jle
mov
lock
inc
bound
dec
push
inc
pop
data16
jecxz
roll
dec
out
inc
inc
aam
mov
push
inc
imul
push
xchg
inc
fstpt
data16
orl
push
pop
pop
pop
mov
sub
stos
popa
fdivl
mov
dec
push
movsl
inc
mov
push
inc
imul
xor
cmp
ss
fistpl
sub
xchg
add
fstp
mov
bound
fs
insl
pop
cli
pop
xchg
addr16
dec
dec
add
push
pop
ret
sti
pop
jo
dec
jns
and
arpl
ret
jns
dec
inc
ja
inc
icebp
push
icebp
in
inc
dec
fs
pop
fdivrs
pop
dec
inc
jecxz
pop
inc
pop
loopne
mov
gs
inc
addr16
popaw
icebp
push
add
lods
jns
pop
gs
dec
and
jb
arpl
jo
sub
insl
adc
gs
xchg
out
mov
addr16
imul
dec
inc
imul
shrb
lods
push
or
adc
push
lea
fisubrl
push
xor
pop
lods
fildll
xor
xor
ret
push
dec
dec
add
std
inc
inc
mov
inc
inc
inc
cwtl
dec
push
sbb
inc
push
dec
stos
jno
imul
insl
enter
mov
pop
ds
push
lock
test
mov
dec
dec
cmp
lret
mov
insb
lret
push
js
bound
push
cmp
push
fmuls
inc
xor
shlb
aaa
stc
mov
outsl
arpl
je
dec
pop
fistps
dec
imul
bound
push
imul
lods
mov
sub
inc
gs
outsb
inc
inc
popa
addl
pop
xor
scas
lds
xor
add
clc
shlb
inc
push
enter
mov
sbb
add
cli
scas
popw
insl
outsl
jne
push
test
inc
push
dec
fcomi
jbe
ss
ret
inc
jb
push
enter
rcl
jne
fildll
jno
xor
fists
cmp
push
dec
gs
data16
imul
xor
jb
push
sub
inc
sbb
or
inc
push
push
gs
imul
push
pop
dec
mov
push
jne
pop
in
pop
sbb
xor
push
xor
xor
dec
rorl
pop
fs
fs
imul
out
fs
cmpsb
rclb
add
add
outsl
inc
inc
dec
imul
dec
pop
dec
fldcw
xor
fs
insb
cmc
pop
jno
push
inc
je
push
loop
bound
lock
pop
inc
fldt
dec
pop
adc
insl
jb
jb
add
jb
outsb
dec
mov
or
imul
gs
insl
icebp
xor
push
and
xor
arpl
xor
cs
test
mov
xchg
jo
ja
jbe
mov
mov
ss
mov
push
push
sbb
push
jo
sbb
shl
inc
push
inc
sbb
jne
push
mov
cmp
insb
inc
xor
push
xor
dec
das
rcrl
inc
push
jb
xor
push
push
inc
lods
cmp
pop
lea
lods
inc
xor
outsb
dec
data16
imul
fisubrl
xchg
cs
inc
js
in
push
sub
es
inc
inc
push
mov
fsubrs
and
lods
push
pop
fwait
mov
popa
push
sub
xor
mov
jne
andb
dec
fisttpl
mov
sti
and
xor
dec
jbe
imul
or
dec
clc
cmp
popl
pop
or
dec
inc
mov
xchg
cs
and
cmp
pop
fcmovu
or
dec
fbstp
imul
push
jbe
outsb
dec
test
push
stos
pop
xor
or
jae
push
mov
cwtl
inc
inc
addr16
pop
add
inc
dec
push
sub
fwait
dec
jno
jmp
mov
dec
xor
xor
mov
js
cmp
popa
push
mov
xchg
dec
iret
fs
push
insb
outsl
inc
outsl
inc
fs
dec
outsl
mov
insl
inc
adc
pop
dec
push
popa
mov
or
inc
dec
dec
inc
inc
mov
push
nop
jnp
jno
pop
mov
push
xor
xor
mov
xor
data16
dec
inc
dec
sub
push
dec
dec
dec
xchg
test
or
out
sbb
in
jno
insb
mov
lea
dec
std
inc
push
inc
push
push
fldt
push
jne
push
and
pop
jmp
dec
lret
insb
or
das
and
sbb
pop
imul
push
inc
outsl
pop
push
test
fisubrl
mov
xor
dec
testl
outsb
xor
dec
dec
mov
pop
test
push
pop
sbb
inc
jne
stos
xor
jb
pop
xchg
addr16
sub
pop
cmp
hlt
jle
mov
outsl
test
ja
aaa
push
add
ret
ja
mov
fs
dec
jb
pushw
add
push
stos
jp
push
enter
mov
mov
inc
cmp
or
add
stc
imul
pushf
push
outsl
push
out
sbb
ja
in
xchg
mov
lods
dec
sbb
in
pop
clc
xor
popa
xor
imul
push
insb
push
js
and
push
inc
imul
aam
add
dec
dec
test
das
sbb
outsl
jbe
jae
jbe
mov
cmp
push
push
pop
xor
inc
fninit
push
arpl
inc
imul
movsb
jo
mov
jo
loope
xchg
add
pop
imul
mov
push
mov
out
fs
push
imul
push
mov
push
fwait
push
mov
sbbb
xchg
mov
shrl
dec
aaa
pop
and
xor
insl
adc
xchg
enter
fisubrl
adc
test
or
and
push
js
sub
sub
push
push
out
pop
mov
push
xchg
pop
push
adc
add
icebp
pop
enter
inc
lea
jae
mov
xor
icebp
outsl
push
lcall
inc
push
jo
mov
stos
or
pop
fcoms
stos
outsb
xchg
push
mov
xor
push
sbb
pop
mov
outsb
xorps
aam
fst
test
dec
dec
push
xchg
add
test
xor
push
adcl
outsl
test
arpl
pop
jne
stos
lahf
xor
das
xor
inc
lea
or
push
jo
in
shll
loop
imul
pop
jmp
push
dec
inc
or
push
mov
pop
notl
push
imul
push
dec
rcr
mov
dec
xor
or
dec
push
daa
xor
shrb
mov
and
jo
insb
fwait
sbb
cmpsb
push
insb
fs
push
pop
xor
mov
xor
imul
inc
sbb
mov
mov
js
mov
sbb
jle
insl
leave
xor
jns
or
scas
js
sub
and
pusha
inc
jge
int
mov
mov
dec
xor
in
jl
push
push
pop
fisttpll
lea
inc
imul
mov
pop
test
lea
inc
push
imul
dec
dec
sub
imul
inc
dec
sbb
add
popa
mov
je
push
add
popa
outsb
mov
call
mov
pop
stos
pop
lods
xor
push
inc
stos
out
jo
push
pop
push
push
lods
aam
and
daa
push
add
push
aad
insl
mov
cmpsl
je
jb
mov
shll
es
mov
pop
jns
xor
enter
fimull
leave
sbb
inc
popa
imul
sub
sbb
cmc
cmpb
ret
cmp
dec
ja
pusha
inc
jo
pop
push
shr
push
lea
test
lods
fwait
push
inc
xor
jne
jno
ss
scas
daa
dec
insb
pop
ja
stos
insb
pusha
ja
call
test
pop
sub
or
push
xor
jnp
add
in
gs
dec
add
mov
push
into
js
mov
jo
out
push
xor
jmp
mov
gs
imul
inc
inc
fsubs
popa
aaa
imul
adc
dec
cmp
inc
dec
pop
dec
inc
push
push
mov
je
sti
jne
push
xchg
mov
outsb
outsl
pop
xchg
outsl
jle
jno
push
fbld
stos
dec
jae
jb
xor
xor
out
data16
inc
sub
scas
jno
pop
sub
aaa
fsub
inc
mov
pop
dec
inc
adc
mov
stos
push
insl
imul
mov
jb
outsl
jne
xor
xor
insl
push
rcr
addl
pop
cwtl
sub
sti
push
insl
xchg
xor
cmpb
insl
ds
popa
xchg
mov
dec
ja
dec
push
roll
or
cltd
js
mov
mov
jbe
jno
push
addr16
imul
insb
or
xor
push
inc
push
frstor
mov
mov
aad
repz
xor
adc
fimull
or
xor
push
jle,pn
mov
pop
gs
imul
ficoml
jb
mov
pop
aaa
jne
sbb
iret
jo
data16
mov
pop
lods
fs
jae
stos
dec
arpl
push
scas
insb
dec
fidivl
push
bound
push
xor
pop
sub
push
ja
jae
xchg
ss
mov
fmuls
adc
imul
je
fs
pushf
sub
mov
sbb
outsb
mov
movsl
je
jo
sub
stos
xchg
mov
outsb
mov
cmp
inc
xor
pop
imul
push
lods
add
out
push
insb
dec
inc
dec
daa
sbb
rolb
jl
adc
adcl
jb
cwtl
cs
pop
fs
aaa
dec
outsb
and
add
dec
je
js
add
mov
mov
outsl
dec
xor
mov
sbb
movsb
inc
inc
out
xchg
sub
bound
push
sub
fsubr
push
lea
push
dec
das
xchg
mov
push
inc
fs
mov
cmp
inc
loopne
lea
push
dec
dec
push
insl
movb
mov
lea
sbb
xchg
cli
inc
imul
and
xchg
test
dec
xor
mov
push
push
push
adc
sub
pop
ss
sbb
clc
je
icebp
cmp
mov
mov
sbb
push
mov
xor
jmp
push
cmp
inc
mov
test
xchg
test
mov
add
imull
icebp
pusha
dec
das
insb
sub
cmp
xor
insl
mov
aas
ss
xor
xor
sub
sub
test
scas
add
mov
dec
adc
xor
mov
jno
adc
xor
push
mov
mov
rcrl
mov
lea
sbb
cmpsb
dec
imul
cs
frstor
test
cwtl
lret
jo
dec
jge
fdivs
mov
cwtl
dec
loop
push
xor
adc
mov
lods
jne
fs
mov
fimull
insb
jns
sbb
nop
xorl
push
inc
lahf
pop
add
in
xorl
dec
clc
push
dec
jns
xchg
cmp
mov
pop
insb
sbb
jns
pop
mov
or
pop
inc
pop
fidivrl
inc
pop
dec
push
andb
fdivl
or
xor
inc
rcl
addb
fimull
movsl
pop
sbb
inc
outsl
or
sbb
cwtl
and
push
lods
lea
pop
imul
test
mov
mov
dec
int
hlt
push
sbb
lods
addr16
fwait
stos
pop
popa
mov
xor
stc
rol
mov
push
faddl
adc
outsl
cwtl
je
cmp
mov
xor
andnps
push
xchg
insb
xor
or
push
jb
push
push
dec
imul
xor
xor
add
dec
popa
inc
lret
dec
mov
subb
dec
xor
inc
pop
test
inc
jbe
push
lods
inc
outsl
jb
daa
mov
insb
gs
fldenv
adc
jne
mov
imul
xchg
mov
gs
insb
jae
test
jbe
dec
or
insl
dec
popa
je
insl
mov
jae
push
add
imul
adc
push
jns
dec
popa
jae
arpl
iret
and
dec
popa
outsb
jnp
or
outsb
je
inc
jbe
or
dec
outsl
fs
xchg
movd
push
popa
dec
popa
bound
ss
outsb
jae
inc
je
insb
dec
push
insl
stc
in
sub
mov
add
push
jne
xchg
lds
or
fcmovnbe
mov
gs
jne
jns
mov
data16
dec
arpl
push
pop
imul
jbe
fsubs
imul
adc
arpl
or
jo
push
or
mov
mov
cmp
popa
fucomp
inc
imul
sbb
fstpt
jb
jns
dec
inc
dec
popa
jo
aas
mov
pop
addr16
aas
dec
lea
fs
js
popa
push
gs
cmpsb
loop
mov
ja
adc
jp
jb
or
ret
subl
push
xchg
outsb
outsb
dec
std
jo
loope
mov
or
insl
mov
inc
add
popa
or
push
push
or
push
fldl
mov
loope
ja
sub
outsl
int3
inc
adc
fldt
push
push
jae
scas
loope
mov
push
dec
dec
iret
pop
rorb
insl
jnp
sbb
sub
mov
bound
adc
adc
cmp
inc
push
push
sbb
and
jg
inc
fs
paddsb
shll
mov
cmp
jno
adc
cwtl
jo
xor
insb
sbb
insl
xor
mov
jbe
pop
jae
std
loopne
daa
in
popa
je
jne
and
fld
sahf
add
fs
loope
out
insl
rcrb
jns
inc
push
je
pop
in
push
outsl
xor
add
nop
sbb
sbb
inc
add
je
and
test
push
nop
pusha
outsb
popa
and
jo
imul
lods
cmpsl
test
and
fbld
xlat
pop
adc
push
mov
push
xor
push
adc
test
fists
or
pop
mov
dec
or
fwait
mov
sbb
cmpsl
push
pushf
cmovno
js
xor
jae
aam
push
inc
pushf
add
das
inc
xchg
adc
push
std
leave
loope
add
add
add
aam
mov
push
cmpsb
sysexit
xor
push
or
add
add
mov
mov
sbb
xor
inc
adc
or
dec
push
sub
adc
in
sbb
pop
daa
add
clc
adcb
inc
pusha
cs
or
daa
sub
inc
cmpsb
imul
es
rclb
inc
arpl
dec
jae
add
mov
outsl
repz
lock
add
dec
shll
add
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pop
lods
sub
pop
add
and
mov
dec
jb
addr16
push
xchg
cmp
cmp
xor
and
mov
jecxz
lds
dec
imul
and
repz
pop
std
mov
dec
scas
repz
int3
in
notb
fsubr
punpckhdq
out
fiaddl
hlt
xor
mov
aaa
adc
xor
loop
loop
inc
dec
jno
pop
ljmp
insl
scas
jbe
cltd
sbbb
je
cmpsl
xchg
imul
pop
xor
mov
sub
cwtl
rcll
loop
and
movsl
gs
mov
mov
xchg
movsb
inc
test
inc
inc
pushf
mov
add
fwait
push
and
jle
push
xchg
or
sbb
jo
and
push
jle
mov
imul
fsubr
lret
push
cltd
iret
out
test
mul
sti
mov
rol
lea
jg
dec
xchg
mull
inc
lods
cmpsl
sbb
ss
ret
fimull
sub
repz
fcom
roll
mov
inc
stc
cmp
sbb
adc
enter
iret
jmp
movsl
out
subl
pop
cmpsb
or
mov
rcrb
movsl
shll
out
push
push
sbb
ret
test
inc
mov
xor
aam
frndint
cmp
lcall
inc
pop
cmc
mov
sbb
lods
jbe
out
fdivs
daa
bound
mov
or
movsl
mov
scas
push
cmpsl
adc
lahf
push
sbb
data16
mov
mov
pop
xor
in
mov
popa
sub
inc
mov
pushf
test
movsb
adc
sub
push
gs
and
cbtw
push
cmp
scas
xchg
in
.byte
lret
lods
add
add
add
add
and
add
pusha
add
addb
add
add
add
cmp
add
add
add
sbb
add
add
movsb
inc
add
test
add
add
add
js
add
add
add
sbb
add
dec
add
adc
add
mov
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
mov
mov
add
add
pop
pop
pop
add
incl
mov
js
rorb
rcrb
push
push
push
add
mov
add
push
add
pushf
nop
add
loopne
add
loopne
add
dec
add
pop
add
and
add
js
add
shl
add
pop
add
push
add
cmp
nop
push
sub
mov
mov
add
dec
add
cmp
dec
xor
add
cmp
loopne
nop
add
loopne
add
pop
add
xor
add
push
add
cmp
mov
and
add
sub
dec
and
add
and
add
dec
add
and
add
adc
add
cmp
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
adc
sbb
adc
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
sub
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
push
daa
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
and
pop
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
and
pop
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
push
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
and
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
daa
add
and
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xor
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
sbb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
xor
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
pop
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
adc
adc
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
adc
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
pop
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
pop
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
push
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
clc
sldt
push
sldt
jmp
sldt
inc
sldt
incl
incl
sldt
incb
sldt
cld
add
add
clc
add
add
push
add
add
jmp
add
add
inc
add
add
incl
incl
pop
incl
add
incb
ud0
add
cld
add
incl
add
clc
add
incl
add
push
add
add
jmp
add
incl
add
inc
add
incl
add
incl
add
incl
pop
incl
add
rolb
incl
add
addb
incl
add
add
aas
incl
add
add
jg
incl
add
add
incl
add
add
incl
add
add
incl
add
sbb
incl
add
ds
incl
add
jle
incl
add
cld
add
incl
add
cld
pop
incl
add
clc
pop
incl
add
lock
incl
add
loopne
incl
add
sarb
incl
add
sarb
incl
add
sar
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
xor
add
add
add
test
add
add
test
add
mov
add
add
rorb
add
dec
add
lock
add
decb
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
