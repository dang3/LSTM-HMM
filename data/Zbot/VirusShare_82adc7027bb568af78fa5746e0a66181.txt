ljmp
mov
jle
and
push
push
pop
dec
xor
push
push
adc
rep
fistpll
cli
cmp
adc
das
jb
loope
jb
inc
insl
loopne
loop
jge
lcall
loop
imul
lret
cli
out
sbb
jbe
fidivrs
mov
ljmp
mov
pop
cld
outsb
lods
sbb
mov
rcr
push
inc
cli
cmp
xchg
fs
and
fldl
outsl
das
adc
das
leave
pop
add
push
xor
movsb
pop
xor
push
pop
pminsw
call
orb
mov
test
fwait
cwtl
dec
lods
inc
int3
popa
sub
out
jmp
mov
jl
fistpl
inc
cltd
pop
stos
push
dec
pop
pop
xchg
adc
pop
push
and
jp
lret
ljmp
jl
je
adc
inc
mov
sbb
push
push
adc
push
xlat
mov
incl
mov
mov
and
stos
pop
pop
xor
pop
jl
pusha
daa
loop
sbb
shr
lret
call
push
xor
and
jmp
or
sti
push
sub
mov
mov
incl
mov
push
les
push
enter
dec
mov
out
fadds
incl
inc
sti
adc
out
push
call
test
stc
stc
fisttpl
pushl
pop
pop
fstl
inc
pop
bound
out
jae
shll
out
mov
iret
cmpsl
mov
mov
jmp
popf
incb
adc
push
rcrb
aas
inc
int
push
pop
inc
pop
adc
jge
cmpsl
into
aas
jmp
lods
pop
sub
ds
or
shl
sub
insl
cmp
ljmp
jmp
imul
mov
pop
add
andb
loope
test
push
sbb
jl
out
sahf
bound
push
fstpl
test
xor
popa
rol
popf
adc
and
xchg
lods
jmp
gs
out
pop
aaa
data16
dec
rorb
sbb
das
test
mov
insl
popf
es
mov
fdivs
mov
jle
leave
popa
cs
xchg
lds
pushl
iret
push
mov
lahf
sbb
sbb
lea
test
ljmp
inc
daa
insb
loop
clc
mov
inc
sub
pop
jg
andb
lret
adc
out
addl
ljmp
les
pop
fs
push
testl
pushf
scas
adcb
rorb
push
mov
pop
repz
vsqrtps
and
lea
je
cmp
mov
ljmp
sbb
mov
mov
test
inc
cmp
pop
frstor
aam
scas
fnstcw
mov
pop
xchg
repnz
inc
cmp
outsb
or
sahf
pushf
scas
jmp
xor
ss
cmp
repnz
das
jbe
add
leave
outsb
iret
xchg
mov
les
xchg
sub
mov
in
sub
daa
sub
pop
les
xchg
std
pop
icebp
popa
ljmp
das
fildl
aad
cmpb
jge
mov
js
sahf
roll
outsl
mov
and
push
push
mov
mov
divl
inc
ja
std
movhps
out
in
insl
mov
call
cld
adc
mov
fsub
leave
sbb
cmpb
sub
and
lods
or
clc
fcoms
cs
ljmp
mov
test
mov
xor
loopne
stc
idiv
repz
or
out
imulb
call
dec
jge
sarb
ficomps
xchg
cltd
push
mov
fidivrs
and
mov
inc
mov
dec
decl
scas
leave
and
inc
push
cli
inc
ret
jb
xor
sahf
sub
lea
incl
pop
add
or
sub
inc
mov
cmp
mov
xor
mov
mov
stc
mov
or
add
stos
ret
outsl
push
ds
jb
jae
fdivr
jl
mov
shl
inc
add
pop
call
loop
xor
mov
int
fs
push
xchg
mov
mov
push
pop
xor
test
les
les
adc
push
pusha
jae
ret
jnp
pushl
std
adc
push
out
popa
jno
in
add
xor
daa
in
mov
jbe
mov
jns
xorl
scas
cmp
jnp
aam
jg
pushl
insb
cli
pop
adc
dec
xor
push
lock
cwtl
push
jno
sub
insl
pop
jns
sbb
fimull
loope
outsl
std
sar
jge
xchg
stc
and
in
incl
scas
mov
adc
or
and
jmp
jmp
outsb
jno
sub
adc
or
rol
movsl
scas
inc
inc
jmp
je
ljmp
mov
inc
pop
push
pop
test
test
aad
call
push
out
jp
clc
jns
add
add
lock
mov
repz
adcb
inc
xchg
mov
incl
pop
sbb
ret
push
cmp
inc
sub
je
stos
adc
aam
mov
push
lds
xor
jecxz
mov
mov
popf
shlb
jg
jl
test
jmp
and
xchg
adc
pop
shlb
pop
leave
jns
push
mov
fstpt
push
mov
mov
pop
cltd
aam
lret
and
jg
pushl
fstps
arpl
lcall
push
jae
gs
icebp
xor
adc
ljmp
sbb
and
outsl
jb
sbb
mov
cmc
cmp
gs
xchg
clc
jmp
jge
inc
push
stos
mov
push
mov
pusha
cmp
sub
repnz
das
aad
stos
and
call
stc
popa
mov
xor
repz
scas
in
pushf
imul
mov
xchg
and
push
jo
insl
inc
sub
xor
pusha
insl
sbb
inc
fs
call
inc
filds
cmp
mov
add
jo
lcall
adcl
outsl
call
jp
shrl
push
test
out
cmp
outsl
decl
xchg
enter
ret
stos
or
jg
cli
mov
inc
add
cmp
gs
movsb
hlt
cmc
add
cmpsl
aam
test
dec
leave
jp
aad
add
popf
repnz
call
xor
cmp
fwait
lods
fwait
mov
fisttps
and
xchg
add
xchg
jge
sbb
in
fdivl
pop
shl
aaa
outsl
mov
orb
add
mov
test
fsubp
and
inc
call
cmpsl
xchg
into
pop
subb
push
xor
cmpsl
fisttps
mov
xchg
sti
inc
pop
lock
mov
test
ja
pop
loopne
mov
adc
shlb
cmp
in
sbb
ret
xlat
and
incl
xor
pop
dec
adc
in
in
inc
jl
fistl
ljmp
fdivrs
jmp
sub
xor
xchg
xorl
fsubr
movsl
mov
js
incl
in
rcpps
cmpsl
adc
lahf
or
inc
and
and
cmp
mov
stc
std
jecxz
dec
popa
shrl
mov
xor
dec
mov
clc
fcomip
xchg
jmp
push
mov
and
push
popa
sti
std
push
es
sub
movsl
stos
mov
ljmp
cli
ljmp
aaa
out
mov
sti
loopne
pop
pop
sub
mov
mov
dec
mov
mov
lods
sub
push
mov
loope
incb
lea
pop
bswap
xor
jne
into
mov
adc
cmp
and
or
cmp
lret
pop
dec
mov
jg
sub
xchg
xchg
loope
out
pop
inc
shl
aam
into
popa
adc
fistpl
cmp
jo
int
and
mov
dec
dec
jae
inc
xor
lods
push
jmp
fisubrl
ljmp
add
jecxz
xchg
insb
xor
push
in
jne
lcall
outsb
xlat
aam
sbb
in
pop
jle
scas
jmp
and
jns
or
push
cwtl
mov
pop
idivl
pushf
test
mov
in
movsl
jmp
scas
xor
out
cli
rcrl
loope
loop
aaa
push
cli
cmpsb
jb
scas
ret
mov
call
and
inc
xor
cmp
inc
stos
shll
jp
push
lea
fwait
xchg
and
in
f2xm1
push
xor
leave
mov
in
and
out
mov
ljmp
mov
jmp
sub
aam
loop
out
subb
nop
jo
jo
xchg
sbb
call
popf
xchg
push
aad
stos
ss
mov
sbb
push
insl
lret
jno
out
cmpxchg
sarl
dec
hlt
loopne
or
add
xor
lock
lret
fnstcw
in
cmp
jg
lahf
daa
mov
xorb
aaa
aad
adc
sti
add
in
mov
jbe
push
ret
push
lret
shlb
xchg
sbb
xchg
and
push
sbb
loopne
fistps
xor
pop
pop
pop
mov
xchg
mov
js
out
push
les
inc
ljmp
andb
or
ljmp
ja
pop
mov
mov
sbb
test
mov
pop
cld
cmp
adc
sub
fistpll
and
xor
rolb
ljmp
jnp
ret
negb
aas
lods
cwtl
into
push
cli
out
icebp
ljmp
fdivr
popf
mov
ret
pop
aaa
mov
repnz
adc
mov
sub
lcall
daa
push
and
lahf
jle
xor
cmpb
or
add
cs
inc
int3
out
inc
sbb
shr
sbb
lcall
or
xlat
sbb
stos
mov
lds
int3
dec
xor
inc
mov
lcall
lret
in
iret
out
sbb
cmp
js
pop
mov
fldl
sbb
mov
icebp
adc
mov
fcmovnbe
xor
push
jb
dec
int
push
jne
jmp
or
lods
and
icebp
or
mov
jns
je
mov
mov
loopne
dec
fbstp
or
pop
ss
or
loopne
jae
lcall
xor
push
sbbl
sub
orl
lds
jne
int3
push
sbb
ljmp
cmp
mov
into
fists
addb
inc
xor
dec
xchg
lock
cli
pop
std
aas
mov
mov
mov
sub
inc
lret
adc
loop
fwait
pop
mov
mov
fcmove
clc
mov
jae
repnz
rclb
adc
xchg
imulb
sbb
in
mov
adc
add
cmp
push
ret
loop
jb
push
loop
daa
int
sub
jl
decl
jmp
clc
std
or
popa
int
sub
ss
cmp
fstpt
popf
andb
jl
call
cltd
jnp
loop
popa
jl
scas
xor
ret
sbb
sub
add
and
cli
jmp
decl
out
dec
lea
leave
ja
std
push
add
jae
jns
sbb
jnp
test
xor
cld
incl
sub
adc
iret
ljmp
scas
das
std
shl
fs
cld
incl
aad
sbb
jne
xchg
adc
iret
xchg
mov
pop
push
mov
in
jmp
pop
nop
sahf
pop
nop
dec
lahf
xchg
jmp
jp
pop
data16
mov
push
mov
ja
out
into
or
jmp
movsl
sub
repnz
movsl
push
sbb
enter
ljmp
mov
movsl
xchg
loop
lods
dec
pop
xor
inc
aad
mov
dec
sarb
lcall
ret
ss
fs
dec
aad
mov
sub
xor
std
dec
iret
je
cli
aaa
jmp
jnp
in
jecxz
push
inc
insl
jne
or
inc
stos
jg
push
in
test
aad
pushl
push
cwtl
rolb
shll
leave
mov
rcrl
jg
jg
mov
test
mov
cmp
inc
lcall
push
xor
cmp
pop
ret
pop
mov
ljmp
sar
incl
in
ljmp
push
jle
mov
dec
cmp
sub
lea
in
loop
in
gs
mov
ret
rcll
xchg
notb
ds
cmp
mov
push
pushl
mov
in
and
leave
pushf
dec
cmp
iret
adc
je
mov
lcall
jmp
mov
inc
pop
adc
mov
push
push
mov
je
mov
dec
mov
stc
and
adc
cmp
rcl
outsl
rol
test
adc
ljmp
loope
out
xchg
jns
insl
jns
fdivr
sub
nop
mov
pop
mov
mov
jl
in
ljmp
imul
jmp
jl
jg
movb
fmull
sar
lcall
loopne
insl
jecxz
jmp
sub
cmpsb
push
xor
aad
pop
xor
incl
mov
cld
pop
push
imul
imul
cmp
mov
stc
stos
lcall
push
pop
out
cmp
scas
popf
lock
sub
adc
push
call
jmp
push
jg
mov
out
mov
ja
push
push
outsb
xorb
inc
scas
out
rolb
xchg
pop
xchg
das
ljmp
fnstcw
movsl
mov
cs
sti
loop
ffree
and
jg
cmp
out
mov
xchg
test
int3
mov
xchg
test
dec
aaa
std
inc
mov
stos
gs
int3
stc
add
dec
or
push
in
test
mov
cli
xor
call
aaa
mov
js
arpl
fnstcw
frstor
insb
clc
je
fadds
in
pushf
clc
xchg
decl
mov
mov
lds
and
int
cld
cmp
jle
cmp
pushl
or
jne
lea
enter
cmpsb
xchg
mov
jno
fsubl
in
ffreep
das
dec
enter
push
xchg
call
lock
push
xlat
and
fisubrs
cmpsl
popl
pushf
pop
out
fcomps
jl
imul
dec
insl
mov
and
decl
pop
mov
jge
push
jecxz
mov
repnz
pop
mov
outsb
scas
and
call
xor
add
jnp
icebp
or
sbb
lret
test
sbb
int
pop
cmpsl
sar
ljmp
add
add
addl
aad
adc
loope
hlt
out
in
decl
hlt
daa
repz
inc
push
cmp
jecxz
sbb
imul
decl
pop
repz
shrb
mov
and
icebp
pop
mov
lahf
or
lcall
out
outsl
xor
push
rcrl
mov
mov
cmovg
sahf
das
add
and
and
push
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
test
and
decl
sub
jle
and
push
push
pop
dec
xor
push
push
adc
rep
fistpll
cmp
adc
das
jb
loope
jb
inc
insl
loopne
loop
jge
lcall
mov
pop
pop
std
lret
cli
out
sbb
jbe
fidivrs
fsubs
cltd
mov
pop
cld
outsb
lods
sbb
mov
rcr
push
inc
cli
cmp
xchg
jmp
and
fldl
outsl
das
adc
das
leave
pop
add
push
xor
movsb
pop
xor
inc
push
pop
pminsw
orb
mov
test
fwait
cwtl
dec
lods
inc
dec
popa
sub
out
sbb
shll
in
inc
cltd
pop
stos
push
dec
pop
pop
xchg
adc
pop
push
and
decl
push
mov
cmc
inc
mov
sbb
push
push
adc
decl
xlat
mov
mov
mov
and
stos
pop
pop
xor
pop
jl
pusha
daa
loop
sbb
pushl
jmp
popf
imul
out
imul
leave
loopne
push
or
sti
push
sub
stc
pushl
mov
push
les
push
enter
dec
mov
out
fadds
mov
inc
sti
adc
out
push
call
test
stc
stc
fisttpl
imul
or
stos
pop
pop
fstl
inc
pop
bound
out
jae
shll
out
mov
iret
cmpsl
mov
mov
mov
jmp
incb
adc
push
rcrb
aas
inc
int
push
pop
inc
pop
adc
mov
pushl
aas
jmp
lods
pop
sub
ds
or
shl
sub
lcall
insl
cmp
jmp
imul
mov
pop
add
andb
loope
test
push
sbb
ljmp
bound
push
fstpl
test
xor
popa
rol
popf
adc
and
lcall
gs
out
pop
aaa
data16
dec
rorb
sbb
das
test
mov
ljmp
es
fdivs
mov
jle
leave
popa
cs
xchg
lds
mov
mov
lahf
sbb
sbb
lea
test
ljmp
inc
daa
call
cld
ljmp
inc
sub
in
jg
andb
lret
adc
out
addl
decl
fs
push
testl
pushf
scas
adcb
rorb
pop
repz
hlt
mov
pop
repz
vsqrtps
and
lea
je
cmp
mov
pushl
adc
pop
sbb
mov
mov
test
inc
cmp
pop
frstor
aam
ljmp
xor
repnz
inc
cmp
outsb
or
sahf
pushf
scas
jmp
xor
ss
into
mov
cmp
repnz
das
jbe
add
leave
outsb
iret
xchg
mov
les
incl
dec
pushf
pop
in
sub
daa
sub
pop
les
xchg
std
pop
icebp
popa
call
das
fildl
aad
cmpb
jge
mov
js
sahf
roll
ja
jge
outsl
mov
mov
push
push
mov
mov
divl
incb
push
std
movhps
out
in
insl
mov
call
sbb
cld
adc
leave
sbb
cmpb
sub
and
lods
or
clc
fcoms
cs
call
jnp
je
jmp
sti
mov
xor
loopne
stc
idiv
repz
or
out
push
lods
jmp
dec
jge
sarb
ficomps
xchg
cltd
push
mov
fidivrs
and
mov
inc
pushl
enter
leave
and
inc
push
cli
inc
ret
jb
xor
sahf
sub
decl
cltd
xor
rcrl
sub
inc
mov
cmp
mov
xor
mov
in
mov
mov
or
add
stos
ret
outsl
push
ds
jb
jae
fdivr
jl
mov
jmp
rol
add
pop
call
loop
xor
mov
int
fs
push
xchg
mov
pushl
xchg
mov
es
les
les
adc
push
pusha
jae
jmp
adc
push
out
popa
jno
in
add
xor
daa
in
mov
jbe
push
std
call
mov
jno
push
movl
std
pop
jnp
clc
cli
aam
xor
adc
dec
xor
push
lock
cwtl
push
jno
call
fwait
insl
pop
jns
sbb
fimull
loope
outsl
std
sar
jge
xchg
stc
and
lock
ret
shrb
adc
or
call
and
and
shrl
sub
adc
or
rol
movsl
scas
inc
inc
jmp
jl
nop
scas
pop
lret
mov
inc
pop
push
pop
test
test
aad
call
push
jmp
inc
jp
jns
add
add
lock
mov
repz
adcb
inc
xchg
mov
add
mov
pop
sbb
ret
push
cmp
inc
sub
je
stos
adc
clc
call
fdivrs
stc
pusha
xor
sarb
mov
popf
shlb
ljmp
sub
dec
jmp
and
xchg
adc
pop
shlb
pop
leave
jns
jg
push
mov
mov
mov
pop
cltd
aam
lret
and
jg
aam
mov
dec
sbb
sub
xchg
lcall
push
jae
gs
icebp
pushl
icebp
adc
mov
arpl
and
outsl
jb
sbb
mov
cmc
cmp
gs
xchg
clc
jmp
jge
inc
push
pop
cmp
stos
mov
setno
stc
adc
cmpsb
icebp
sub
repnz
das
aad
fcomip
stos
and
cmc
stc
popa
mov
xor
repz
scas
in
pushf
imul
xorb
mov
xchg
and
push
jo
insl
inc
sub
xor
pusha
insl
sbb
inc
fs
inc
filds
cmp
mov
add
jo
ljmp
les
jle
xchg
jp
shrl
push
test
out
cmp
mov
mov
lcall
stos
or
jg
cli
mov
inc
add
lcall
gs
movsb
hlt
cmc
add
cmpsl
aam
test
dec
leave
jp
aad
add
popf
repnz
pushl
cmp
fwait
lods
fwait
mov
fisttps
and
xchg
add
xchg
mov
addr16
xor
shl
aaa
outsl
mov
orb
add
mov
jmp
test
inc
call
cmpsl
xchg
into
pop
subb
push
xor
cmpsl
decl
bound
sti
inc
pop
lock
mov
test
add
jg
ja
lret
jbe
xor
je
or
sti
sbb
ret
xlat
and
xlat
js
mov
push
xor
pop
dec
adc
in
in
inc
jl
fistl
leave
std
mov
sub
xor
xchg
xorl
fsubr
movsl
pushl
mov
aas
cmpsl
adc
lahf
or
inc
and
and
jg
dec
cmp
or
stc
std
jecxz
dec
popa
shrl
mov
xor
dec
cmp
mov
clc
xchg
jmp
push
mov
and
push
popa
sti
std
push
es
sub
movsl
incl
ljmp
cld
test
aaa
out
mov
sti
loopne
pop
pop
sub
mov
mov
scas
clc
call
lods
sub
push
mov
loope
incb
lea
pop
bswap
xor
pushl
into
mov
adc
cmp
and
or
cmp
lret
pop
dec
mov
clc
jbe
or
xchg
xchg
loope
out
pop
inc
shl
aam
into
popa
adc
lcall
andl
xchg
dec
test
dec
jae
inc
xor
lods
push
jmp
fisubrl
call
sbb
jecxz
xchg
insb
xor
push
in
jne
lcall
outsb
xlat
aam
lcall
sbb
outsl
scas
jmp
and
jns
or
push
cwtl
mov
pop
idivl
pushf
test
mov
jmp
scas
xor
out
cli
rcrl
loope
loop
aaa
push
cli
cmpsb
jb
scas
ret
incl
insl
lds
call
and
inc
xor
cmp
inc
stos
call
bound
das
fwait
xchg
and
in
f2xm1
push
xor
leave
mov
in
and
in
out
mov
push
jmp
sub
aam
loop
out
subb
nop
jo
jo
xchg
sbb
and
loop
popf
xchg
push
aad
stos
ss
mov
sbb
push
insl
lret
jno
out
outsl
cli
outsl
clc
cmpxchg
hlt
loopne
or
add
xor
lock
lret
fnstcw
sarb
lahf
daa
mov
xorb
aaa
aad
adc
sti
add
xor
jbe
push
ret
push
lret
shlb
xchg
sbb
xchg
and
push
lcall
in
fistps
xor
pop
pop
pop
mov
xchg
mov
js
out
push
les
inc
incl
or
ljmp
ja
pop
mov
mov
sbb
test
cmp
mov
cmp
xor
sub
fistpll
and
xor
rolb
or
push
cmpsl
negb
aas
lods
cwtl
into
push
mov
sti
popf
mov
ret
pop
aaa
mov
repnz
adc
mov
sub
ljmp
mov
push
and
lahf
jle
xor
cmpb
or
add
cs
inc
int3
out
inc
sbb
mov
sbb
xlat
sbb
stos
mov
lds
int3
dec
xor
inc
decl
mov
xchg
mov
in
iret
out
sbb
cmp
js
pop
mov
fldl
call
lcall
jo
movl
aam
icebp
xor
push
jb
dec
int
call
out
or
lods
and
icebp
or
mov
jns
push
pushl
mov
loopne
dec
fbstp
or
pop
ss
or
loopne
jae
lcall
ljmp
xor
sbbl
sub
orl
lds
jne
int3
push
sbb
call
pop
pop
mov
mov
mov
into
fists
addb
inc
xor
dec
xchg
lock
pushl
cli
pop
aas
mov
mov
mov
sub
inc
lret
adc
loop
fwait
pop
mov
mov
fcmove
pushl
shll
push
rclb
adc
xchg
imulb
sbb
in
mov
add
jmp
adc
cmp
push
ret
loop
jb
push
loop
daa
int
sub
call
jl
aaa
jmp
clc
std
or
popa
int
sub
ss
cmp
fstpt
popf
cmp
jmp
cmp
jnp
loop
popa
jl
scas
xor
ret
sbb
sub
add
and
cli
jmp
sbb
lea
leave
ja
std
push
add
jae
jns
sbb
jnp
test
xor
mov
call
sub
adc
iret
ljmp
scas
das
std
shl
jmp
inc
xchg
aad
sbb
jne
xchg
adc
iret
xchg
mov
pop
push
mov
cli
int3
xor
pop
nop
sahf
pop
nop
dec
lahf
xchg
jmp
jp
pop
data16
mov
push
mov
decl
or
jmp
movsl
sub
repnz
movsl
push
sbb
enter
jmp
lock
gs
gs
movsl
xchg
loop
lods
dec
pop
xor
inc
aad
mov
dec
sar
mov
sahf
or
xor
fs
dec
aad
mov
sub
xor
std
dec
iret
je
jp
aaa
mov
jnp
in
jecxz
push
inc
insl
jne
or
inc
stos
jg
push
in
test
incl
push
cmp
outsb
push
cwtl
rolb
shll
leave
mov
rcrl
cli
scas
inc
bound
test
mov
cmp
inc
decl
fcmovnu
pop
cmp
pop
ret
pop
mov
ljmp
lcall
roll
in
ljmp
push
jle
mov
dec
cmp
sub
pushl
push
in
gs
mov
ret
rcll
xchg
notb
ds
cmp
mov
pushl
push
xor
mov
in
and
leave
pushf
dec
cmp
iret
adc
je
mov
stos
jecxz
pop
or
jmp
mov
inc
pop
adc
mov
push
push
mov
je
mov
call
adc
mov
stc
and
adc
cmp
rcl
outsl
rol
test
aas
mov
sub
mov
xchg
jns
insl
jns
fdivr
sub
nop
mov
pop
mov
mov
pushl
test
mulb
imul
jmp
jl
jg
movb
fmull
jg
shl
xchg
pop
jmp
sub
cmpsb
push
xor
aad
pop
addr16
pushl
push
dec
add
mov
cld
pop
push
imul
imul
cmp
aad
pushl
fnstsw
out
cmp
scas
popf
lock
sub
adc
push
jg
loop
push
jg
mov
out
mov
ja
push
push
outsb
xorb
inc
scas
lcall
pop
xchg
das
ljmp
fnstcw
movsl
mov
cs
sti
loop
inc
and
cmp
out
mov
xchg
test
int3
mov
xchg
test
lcall
xor
jno
gs
int3
stc
add
dec
or
push
in
test
mov
cli
xor
xchg
je
push
push
aaa
mov
js
arpl
fnstcw
frstor
insb
clc
je
fadds
in
pushf
jg
xchg
or
mov
lds
and
int
cld
cmp
jle
cmp
or
jne
lea
enter
cmpsb
xchg
mov
jno
fsubl
fistpl
shrb
enter
push
xchg
call
lock
push
xlat
and
fisubrs
cmpsl
jg
popl
fcomps
jl
imul
dec
insl
mov
and
ljmp
lea
jle
pop
mov
jge
push
jecxz
mov
repnz
pop
mov
ljmp
and
xor
add
jnp
icebp
or
sbb
lret
test
sbb
int
pop
cmpsl
sar
incl
mov
addl
aad
adc
loope
hlt
mov
sbb
daa
repz
inc
push
cmp
jecxz
sbb
imul
ljmp
loop
pop
repz
shrb
mov
and
icebp
pop
mov
lahf
cld
decl
push
lcall
loop
rcrl
mov
mov
cmovg
sahf
das
adc
inc
or
mov
inc
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
insb
adc
lcall
inc
pop
xor
jae
stos
adc
push
mov
mov
push
aas
mov
add
call
jmp
push
jmp
push
outsb
cmp
pushl
add
shlb
add
mov
cmc
lds
or
inc
inc
ss
push
or
fldt
ret
mov
mov
jbe
and
or
mov
ja
fimuls
aas
std
loop
sbb
shr
push
mov
notl
and
add
imul
idiv
ljmp
imul
dec
mov
add
mov
cmp
mov
lret
adc
cmpsb
pop
ljmp
xor
mov
ljmp
sub
sti
out
jbe
out
dec
sbb
pop
xchg
lds
out
ja
add
and
xor
mov
push
pop
movl
mov
fistps
cltd
xor
mov
adcl
pop
lock
add
dec
or
or
adc
adc
imul
cmp
jbe
mov
adc
hlt
popf
cmp
aas
sub
push
dec
aas
fstpl
repz
mov
mov
mov
out
rcrb
add
mov
out
add
pop
roll
fisttpl
dec
and
jne
xorb
or
int3
or
data16
or
incl
mov
cmp
in
sbb
jne
gs
push
pop
sti
ljmp
jo
lods
addr16
sar
fidivl
xor
shlb
inc
mov
lock
nop
mov
xor
sar
incl
xchg
jp
mov
fs
pop
dec
aaa
bnd
call
push
test
and
into
xchg
xor
call
cmp
out
and
arpl
inc
outsb
scas
insb
insb
js
mov
jmp
sbb
ds
xor
decl
sti
adc
pop
scas
mov
push
stos
dec
or
mov
mov
cmpsb
jo
inc
cmp
popf
cmp
cmp
ret
lods
sbb
mov
cmpsl
adc
mov
incl
je
daa
addr16
or
out
shrb
mov
jp
xchg
aas
and
cmpsl
jns
lcall
ds
fsubl
imul
push
fninit
jne
je
popf
das
push
pop
inc
push
adc
mov
call
mov
adc
sub
sbb
std
pop
arpl
cmpps
and
inc
sbb
mov
repnz
pop
jne
shl
out
stc
sbb
adc
xlat
hlt
fs
or
cmpsl
ret
fmul
cmp
popa
dec
outsl
je
dec
adc
mov
bound
iret
ret
fbstp
test
lcall
xchg
cmp
mov
xlat
test
mov
int
mov
divl
push
pop
mov
cli
loop
inc
popf
push
sbb
jo
pop
idivl
add
lods
and
and
subl
pop
lcall
pop
dec
adc
xchg
sbb
push
sub
adc
aam
inc
cld
push
ss
out
and
pop
ret
sbb
jnp
xchg
jle
rolb
mov
push
pop
inc
sub
push
loop
cmpb
fildl
push
aaa
adc
enter
dec
xchg
aaa
inc
cmc
add
fistl
add
hlt
inc
and
lock
shrb
inc
ret
ret
outsl
decl
data16
test
pop
insl
cmpsb
jge
sub
fs
xor
lret
jmp
sub
inc
pop
and
insb
arpl
dec
inc
cmp
add
lcall
es
jo
and
push
arpl
mov
outsl
decl
add
pop
das
scas
xchg
push
sub
pop
xor
sti
leave
xchg
inc
in
jg
pushl
es
testb
inc
fwait
push
aaa
ret
xor
outsl
sahf
out
pop
adc
sub
dec
outsb
incl
jmp
push
xor
mov
adc
xchg
outsl
into
cmp
pushl
lret
inc
and
popa
in
xchg
fistps
xchg
stos
inc
cs
fidivrs
push
and
xchg
sbb
int
dec
test
ss
mov
sub
decb
mov
sub
ss
push
iret
into
pop
and
mov
lcall
je
stos
mov
push
and
movsb
jb
xchg
cmp
das
mov
movb
mov
mov
sub
test
ss
inc
sub
out
mov
sub
rcll
mov
pop
jbe
inc
adc
mov
jmp
mov
icebp
mov
mov
mov
popa
cmp
xor
cmp
mov
push
scas
fcoms
icebp
popf
pop
sub
jl
cld
cmpsl
fcompl
cmp
gs
mov
into
cli
push
xor
bound
fdivr
and
xchg
cmp
push
or
xor
pop
dec
cmpsl
in
pop
sub
push
into
adc
pop
aaa
iret
mov
xchg
mov
rcrl
mov
push
jnp
stc
out
xchg
les
mov
cmp
rorl
jae
lea
mov
pop
cmp
aas
mov
inc
inc
cmc
xchg
ret
aaa
pop
jge
jle
push
clc
leave
fildll
add
inc
push
adcb
into
dec
idivl
es
dec
xchg
push
add
ficomps
leave
sub
jae
push
shll
xchg
mov
adcb
mov
push
flds
xchg
jnp,pt
mov
ja
push
add
out
inc
ret
inc
out
push
popa
loope
mov
inc
popf
cmpl
sahf
leave
sbb
rcrl
les
stc
ret
mov
imul
aaa
ret
cld
pop
inc
dec
inc
shlw
rcl
movsb
inc
test
daa
stos
inc
shrl
jle
std
xor
mov
lods
leave
outsb
in
idivb
xor
xor
imul
jns
dec
push
into
sti
ret
loop
fstp
dec
int3
ds
lret
push
inc
dec
add
jecxz
mov
dec
dec
mov
rolb
in
ss
clc
lcall
jo
ss
adc
mov
pop
xor
mov
push
test
aaa
ss
jae
inc
orb
cmc
xorb
or
fwait
rcll
adc
incl
dec
pop
ds
adc
jns
dec
jp
enter
xchg
xor
mov
das
shlb
scas
cmc
inc
cltd
sbb
inc
incl
ret
loopne
add
cmpsl
push
aaa
subl
lret
inc
nop
xchg
hlt
subb
mov
mov
ret
int3
call
cld
mov
xchg
mov
test
pop
je
mov
fldl
popa
xor
fcomip
incl
push
jno
push
adc
sub
repz
pop
andb
or
std
ljmp
jle
mov
jle
inc
inc
dec
inc
ds
add
xor
xchg
adc
lcall
jbe
sub
jbe
lret
xor
aaa
cld
or
enter
dec
ja
arpl
cmc
or
mov
mov
sub
mov
data16
dec
roll
jbe
inc
ss
and
and
inc
xor
xchg
mov
mov
mov
lret
xor
xchg
fs
cmp
fistps
aaa
inc
ret
test
cmc
enter
aaa
call
mov
lret
mov
in
add
lret
scas
icebp
lret
das
clc
pushl
arpl
xor
rolb
cmpsb
push
xor
fdivl
into
out
clc
call
rorl
sub
pop
xlat
cs
mov
mov
inc
adc
incl
fmuls
push
push
ss
pop
mov
ret
cmp
incl
push
adc
enter
xchg
mov
mov
mov
xor
repz
mov
inc
sar
mov
sub
mov
cmp
cmp
lret
mov
mov
aas
xorb
inc
lret
lret
xor
inc
jl
outsl
xchg
xor
out
inc
jp
dec
jmp
dec
sahf
test
cmp
mov
dec
dec
push
push
push
dec
lret
out
fsubp
dec
stos
push
decl
push
push
mov
lret
popf
mov
rcrl
test
repnz
jle
into
pusha
push
ret
inc
add
in
test
sysexit
out
negb
dec
pusha
test
lahf
jge
rorb
cmpsl
jg
and
xchg
aam
add
rcl
sahf
jecxz
lods
push
in
lahf
add
rcr
sar
jmp
leave
dec
repz
adc
and
aas
sub
int
arpl
xor
int3
adc
out
sub
mov
xor
inc
inc
jne
xor
dec
cmp
push
dec
jbe
dec
push
insb
inc
addr16
pushl
push
insb
inc
dec
cmp
xor
jbe
dec
dec
xor
dec
inc
fsubrs
je
mov
xor
pop
push
fs
dec
pop
imul
inc
ja
dec
outsb
call
decl
push
dec
inc
xor
pop
push
push
inc
push
arpl
cmp
gs
jne
xor
xor
ss
ljmp
xor
inc
bound
inc
push
push
inc
push
bound
push
insb
imul
push
fdivr
ljmp
xor
outsl
outsl
push
inc
js
je
imul
fs
jne
in
decl
bound
cmp
xor
inc
dec
push
jno
popa
mov
mov
inc
bound
push
outsb
outsl
sbb
imul
aaa
mov
pushl
imul
js
pop
dec
xor
pop
inc
outsl
inc
cwtl
ja
push
clc
incl
push
push
jae
dec
inc
inc
popa
xor
outsb
inc
xor
push
dec
push
sub
inc
inc
xor
jns
imul
push
arpl
pop
cld
negb
push
je
inc
push
push
jns
jo
jb
sar
pop
pop
imul
arpl
outsw
popa
arpl
fs
bound
mov
add
dec
imul
bound
imul
jne
xor
dec
outsl
std
decl
inc
addr16
push
dec
dec
dec
xor
push
push
inc
xor
fs
jns
imul
bound
ja
jae
xor
pop
lret
push
addr16
pop
push
xor
adc
insl
aaa
imul
or
mov
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subb
or
mov
add
aaa
call
mov
in
ljmp
incl
or
pop
add
out
in
out
xor
add
mov
push
addb
pop
orb
cmpsl
sub
add
add
addb
add
in
push
mov
add
addb
pcmpgtd
adc
adc
add
fstpt
lret
push
out
push
nop
add
dec
arpl
daa
cwtl
unpckhps
pushl
leave
xchg
enter
and
push
orl
inc
or
incl
xchg
xchg
add
ret
cmc
sarl
rolb
rorb
add
idiv
incl
daa
leave
xchg
orb
dec
lds
shrb
cmp
pop
into
or
jnp
add
add
inc
adc
cmp
mov
push
adc
ds
push
push
xchg
fwait
cmpsb
mov
daa
add
pop
or
sahf
insb
inc
out
cmp
add
imul
inc
add
sub
in
adc
cmp
cs
dec
movsl
mov
jmp
add
jnp
jno
inc
icebp
push
jecxz
shrl
test
sub
push
add
cmpsb
cmp
jp
cmp
mov
repz
inc
jge
fwait
data16
mov
scas
decl
jmp
data16
filds
cmp
stos
loopne
xor
cmp
add
lods
loope
pusha
push
dec
rcrl
mov
sbb
adc
dec
in
or
mov
cmp
jmp
arpl
pusha
or
add
cmpsb
shl
jnp
pusha
jge
lret
pop
out
shl
add
ss
xor
mov
imul
adc
pop
cmp
comiss
inc
test
or
push
es
xorl
les
lret
es
imul
sub
divb
sahf
idiv
lock
sbb
in
fnstsw
mov
pop
pop
sbb
sbb
add
movsl
cmp
repz
sub
loope
bound
jg
adcl
cmpl
stc
pop
cs
cs
xor
jecxz
jns
imul
push
mov
das
loopne
mov
out
loope
dec
add
add
cmpsl
rcrb
popf
addr16
sub
and
addr16
add
rorl
std
add
in
cmp
push
jae
addr16
mov
sbb
inc
ret
sbb
pop
in
call
cs
pop
pop
mov
das
leave
popa
or
xorb
cmp
push
iret
jnp
arpl
loope
jl
lea
ds
jge
sbb
adc
mov
jge
decb
aad
pusha
out
xor
push
jo
test
sub
add
popa
push
push
jae
dec
fwait
cmpsb
cmp
add
sbb
push
imul
mov
bound
cmp
bound
aaa
dec
jo
or
lock
outsl
fiaddl
xor
xor
jmp
xor
add
xchg
dec
or
stos
xlat
lahf
insl
mov
shlb
or
lods
push
jbe
imul
inc
push
jg
fwait
imul
stos
dec
xor
inc
xor
rcrl
sbb
xor
sbb
aas
jnp
js
pop
jmp
lret
mov
push
lock
rcll
and
adc
dec
xor
push
imul
push
out
ret
notl
dec
add
mov
mov
jno
loopne
push
jge
movswl
jns
repz
repnz
stos
sub
std
mov
aam
lock
sub
ret
in
cmc
push
sar
dec
xorl
pusha
jl
stos
xchg
xor
lock
dec
inc
sti
inc
xchg
push
mov
or
movsb
ljmp
xchg
lea
xchg
jno
test
xor
or
add
pop
sbb
jmp
aad
int
push
xor
stos
or
addr16
xchg
dec
sbb
sbb
add
loop
lcall
add
rcrl
inc
daa
test
flds
push
ljmp
cli
xor
outsb
add
pop
clc
add
mov
push
cmp
sbb
xchg
cmp
idiv
push
fistpll
add
cmp
pop
ljmp
dec
xchg
sti
outsl
dec
pop
movsl
popa
mov
mov
scas
pop
sbb
nop
cmpsb
aaa
jg
fcomip
push
jb
adc
outsb
adc
sub
cmp
adc
incl
mov
mov
mul
cltd
adc
fimuls
call
pop
hlt
and
jnp
scas
add
add
add
xchg
adcb
nop
add
dec
movsb
xchg
xchg
mov
push
adc
leave
shlb
pop
es
dec
jg
or
data16
in
adc
fdivrp
mov
loop
mov
add
sbb
xlat
and
addr16
mov
rolb
iret
test
mov
adc
inc
rolb
lcall
sub
sbb
outsl
mov
xchg
out
out
out
loopne
xchg
xchg
push
nop
push
out
jo
out
adc
loopne
sub
lock
in
out
mov
test
in
xchg
in
sub
add
xor
lcall
add
mov
cmp
loope
pop
lock
and
mov
adc
jo
fiaddl
push
cmp
mov
inc
push
lods
add
dec
imul
or
push
dec
mov
inc
aam
sbb
adc
push
mov
add
cmp
dec
push
push
rolb
out
clc
push
enter
mov
stos
push
or
pop
add
push
fmull
fiaddl
hlt
je
cmpsl
stos
jns
mov
xor
fdivrs
push
add
cmp
flds
mov
inc
mov
ret
dec
mov
or
jo
stos
or
sbb
int
lahf
bound
es
mov
inc
fwait
mov
aad
cmpsb
push
push
lock
clc
or
sarb
shlb
pushf
pop
dec
lds
inc
push
lahf
mov
xchg
and
sbb
jo
subl
int
xchg
lock
int
rcl
int
jo
or
or
push
mov
dec
in
fildl
pop
sbb
add
and
sbb
add
mov
add
adc
ljmp
imul
jns
pop
push
jnp
mov
mov
add
lcall
lds
iret
fwait
mov
add
jne
pop
movl
xor
lock
add
dec
pop
mov
pop
cld
mov
shlb
into
data16
stos
adc
rclb
adc
aam
adc
sub
push
shll
push
dec
xchg
inc
insb
lock
insl
lock
cld
pop
idiv
pop
fdivp
sbb
or
nop
lock
inc
inc
test
mov
ds
jae
xor
stos
adc
sub
ret
sbb
mov
inc
stc
fisubl
pop
arpl
pop
lock
sbb
call
push
push
sbb
fidivrl
sti
pop
pop
mov
sbb
je
sub
xor
sub
clc
add
jno
jae
add
xchg
push
lock
cmpsb
or
inc
dec
inc
jle
push
sbbl
pusha
cmp
int
mov
sbb
jl
jo
int
sbb
or
lock
mov
inc
add
inc
jo
sub
inc
adc
push
dec
imul
inc
fadds
jnp
inc
pushf
jae
pop
or
repz
lods
in
mov
out
push
mov
sbb
mov
sub
xor
fbld
in
ret
js
mov
andl
mov
sarl
pop
or
pop
cmpsb
push
lock
xor
sub
cmpsb
arpl
push
xchg
rorb
and
ret
aad
push
jg
and
test
fwait
mov
dec
fidivrs
roll
and
pusha
sbb
orl
pushf
stos
mov
or
call
mov
mov
sub
push
je
push
push
pop
aad
sarl
lods
add
and
and
mov
xchg
js
or
mov
push
xchg
stos
pop
ljmp
orb
jbe
push
lds
or
lret
add
push
jae
inc
call
push
inc
inc
mov
adc
aas
les
lods
mov
mov
pop
mov
mov
mov
mov
or
rcrl
push
stos
scas
push
sub
fildll
div
outsl
dec
or
or
addb
and
or
insl
imul
clc
es
stos
xor
sub
div
dec
das
stos
in
sbb
or
addb
or
scas
sbbb
or
in
in
push
mov
insb
orb
or
pop
stos
xor
mov
inc
mov
std
stos
push
jo
insl
xor
push
or
or
stos
ret
inc
fistpl
sti
sub
or
aad
dec
repnz
test
adc
cmp
xor
inc
or
je
aas
sbb
dec
orb
inc
mov
jae
fiadds
push
push
arpl
ljmp
imul
mov
rolb
scas
push
gs
adc
cld
lret
insl
mov
jge
shlb
or
shlb
mov
outsl
outsl
or
rorb
or
dec
stos
dec
or
rcrb
in
in
fcmovnu
stos
ja
cld
sarb
or
rclb
or
shlb
or
push
insl
div
shlb
mov
stos
or
mov
sub
lret
testl
out
pop
add
repz
lds
fstps
mov
or
clc
jg
stos
fs
outsl
iret
insl
rcrb
sbb
hlt
insb
repz
add
iret
or
mov
lret
and
pop
lods
test
in
inc
cmp
sub
push
and
adc
push
add
ret
mov
add
shlb
jge
lods
call
jp
xchg
push
pop
fdivl
fwait
fwait
mov
cmp
push
lods
pop
lret
pop
or
rol
xchg
push
rcr
rorl
push
je
cmp
and
sbb
and
scas
sub
xchg
or
gs
cmp
pop
push
leave
sub
mov
cmpsb
sbb
cmp
aaa
mov
inc
ror
hlt
loopne
or
loopne
mov
fmuls
add
and
push
inc
loope
or
loopne
or
in
sti
div
jmp
push
or
and
push
or
loopne
push
inc
or
or
pop
mov
and
mov
out
push
js
xor
sbb
adc
mov
jmp
sub
in
sub
or
push
ljmp
xor
jo
mov
sub
push
mov
add
scas
lret
pop
cmc
out
nop
cmpsl
rolb
in
dec
sahf
ljmp
xchg
dec
pop
push
outsl
imul
dec
rorb
pop
xchg
mov
rolb
clc
popl
adc
mov
fisubrs
add
and
jl
lods
dec
and
push
xchg
out
adc
incl
lock
xchg
mov
sub
inc
fimuls
push
ds
fisubrs
fisubrs
fidivs
adc
fisubrs
pop
sti
sar
ja
in
dec
sbb
jl
bswap
jmp
imul
lods
loopne
fldl
mov
sti
sbb
fstl
jae
pop
push
xchg
jecxz
in
mov
mov
adc
jae
dec
xor
xchg
cmp
scas
mov
fsubr
fdiv
push
sti
fadd
fmul
adc
fsubl
jg
fdivr
mov
inc
sub
shll
dec
xchg
call
fcmovnu
gs
aam
push
adc
pop
fsubl
fsubrl
fdivl
pop
cmp
add
or
adc
jle
jg
fsub
cmp
js
out
je
ljmp
movsb
xchg
scas
aaa
cmp
mov
rorl
fistl
fldt
jae
out
adc
inc
fisttpl
push
addb
cld
dec
sub
loop
cli
sarb
dec
jo
adc
mov
fcmove
fistpll
rcr
push
fisubl
adc
jb
pop
add
sub
divb
repnz
rorb
inc
mov
fiaddl
fimull
ficoml
adc
fldpi
fpatan
fldcw
lret
into
in
mov
cli
sbb
lds
dec
mov
dec
add
fnstenv
in
outsl
jnp
inc
push
adc
and
sub
xor
add
pop
xorb
xlat
sti
ljmp
outsl
je
cmpsb
fwait
incl
dec
jecxz
jmp
add
fsubs
fdivr
in
fistpll
sbb
fcoms
fcom
popa
add
add
pop
leave
adc
test
mov
insb
notl
sbb
fadds
xchg
dec
xor
rcl
jmp
repz
mov
mov
out
sbb
dec
outsb
add
scas
dec
outsl
jg
fucomip
jnp
xchg
rcll
shrl
jae
jnp
inc
shl
test
mov
or
cwtl
movsb
out
pop
sahf
stc
inc
mov
add
mov
cmpsb
cwtl
repz
cmpsb
ret
ror
rcl
rcr
in
rolb
or
xlat
pop
sbb
push
push
and
mov
jecxz
pop
flds
das
decl
add
imul
daa
shll
shrl
rcrl
fbstp
pop
std
ja
sub
add
or
pop
jo
orl
das
cli
cmp
pop
add
xchg
in
lea
ficompl
sti
ljmp
and
sub
xor
out
add
popa
daa
jae
popf
push
arpl
cwtl
mov
filds
push
pop
jecxz
fcomps
out
add
fsts
arpl
popa
sub
fcmovnu
mov
fldcw
cli
add
cs
cmp
out
and
aaa
in
idiv
jmp
xchg
jmp
inc
inc
fmuls
fdivs
adc
insb
clc
fcmovnbe
add
scas
push
dec
fldcw
and
xchg
sbb
js
add
and
shll
adc
xchg
jb
sub
xor
pop
xor
cmp
adc
ret
add
test
adc
fistpl
jnp
mov
adc
adc
add
in
aaa
addl
sti
cmp
mov
mov
js
aad
aad
aad
adc
push
pop
scas
mov
push
call
adc
in
push
mov
in
das
clc
in
outsl
inc
jp
lods
jo
xor
aam
aam
aam
js
sarl
xchg
xchg
adc
xchg
sbb
mov
mov
hlt
sub
ret
jb
insl
mov
mov
std
jmp
data16
dec
sarb
rclb
rorb
shl
jg
in
cmp
imulb
xor
add
push
aaa
push
inc
cmpsl
lcall
clc
fstpl
inc
xchg
sahf
cmpsb
adc
cld
cs
leave
nop
negb
js
movsb
pop
jnp
cmp
xor
jg
pop
lock
inc
imul
xor
mov
and
icebp
les
jp
cmp
rol
cmp
call
ljmp
push
xchg
jne
mov
lods
push
fmul
fadds
fmuls
nop
movsb
sbb
pusha
jo
outsl
negb
addr16
jg
push
call
dec
lcall
adc
cwtl
jp
pushf
fistps
arpl
rcll
cld
push
adcb
movsb
aam
push
cmpb
jmp
xchg
sahf
xor
js
pop
imul
call
addr16
arpl
mov
jmp
jno
sbb
push
in
and
jge
lock
scas
xlat
add
sub
out
rcrb
and
add
mov
sub
dec
mov
jns
cli
xchg
in
xchg
xchg
fcoms
push
add
xchg
lods
pop
cmp
pop
gs
jp
sub
in
pop
push
movsl
notb
aam
pop
incl
scas
int3
les
int3
inc
incl
popf
xor
adc
push
arpl
jmp
pushf
push
int
pop
cmp
adc
or
inc
es
jg
mov
loope
sub
mov
andb
sbb
mov
and
xor
xchg
mov
push
sbbl
xlat
test
add
pop
out
lods
cltd
and
fsubl
jmp
sar
add
push
in
adc
mov
call
fbstp
out
sbb
add
mov
jns
and
icebp
in
fstl
cmp
movsb
popf
out
enter
in
inc
fs
scas
inc
xor
push
fcmovu
stos
mov
sarb
add
or
andl
add
or
fadd
push
mov
das
push
jl
sbb
add
lea
sub
push
lcall
sub
xor
orb
add
aaa
je
push
push
xor
xor
xor
xor
cmc
inc
mov
xor
lea
aas
sbb
jo,pn
pop
xor
stos
xor
hlt
cmp
popa
add
ss
rcrl
data16
lret
sbb
mov
ret
sbb
lcall
xlat
das
clc
out
cli
aad
rcl
shl
inc
add
mov
cld
jg
mov
xchg
xchg
xchg
xchg
xchg
and
add
mov
ret
outsb
ret
add
mov
lcall
mov
in
loop
loope
out
out
inc
add
in
fstpt
ljmp
or
decl
jmp
jg
data16
add
out
bound
mov
add
or
in
jg
aas
mov
jecxz
inc
dec
aas
in
out
out
repz
adcb
inc
out
out
adc
out
jg
aaa
jg
out
out
out
lcall
loop
push
out
in
mov
aaa
movsl
out
in
push
adc
pop
outsl
out
xchg
pop
out
out
and
out
out
cmp
pop
out
popa
out
out
fwait
out
out
out
fsubs
out
out
outsl
out
adc
out
out
out
jmp
sub
std
out
jmp
outsl
out
out
movsb
out
out
out
mov
aas
out
out
jg
mov
mov
out
out
adc
out
in
add
fucom
add
mov
xor
out
out
adc
out
out
out
jg
aaa
jg
out
out
out
mov
out
mov
pop
out
out
clc
jbe
aaa
mov
sbb
xchg
out
test
sbb
roll
ret
adc
fsub
stc
fidivrl
push
shrb
lcall
pushf
in
outsb
adc
add
add
xor
or
adc
sti
push
or
and
lcall
in
adc
shl
sarb
cli
out
in
enter
in
out
in
int3
xchg
mov
iret
rclb
fsubrl
not
adc
shl
and
in
sbb
js
hlt
adc
js
addb
jo
lods
outsb
rorb
pop
adc
testb
inc
adc
xor
ret
xor
rorl
adc
test
scas
xor
ljmp
decl
int3
or
mov
gs
mov
orb
in
ds
adc
mov
movl
jmp
inc
jecxz
adc
repz
jg
xlat
inc
jecxz
adc
adc
dec
jecxz
xlat
dec
jecxz
jg
aaa
jg
jecxz
xlat
dec
jecxz
dec
jecxz
xlat
dec
jecxz
dec
jecxz
xlat
dec
jecxz
aaa
jg
aaa
push
jecxz
xlat
push
jecxz
push
jecxz
xlat
push
jecxz
push
jecxz
repz
jg
xlat
push
jecxz
push
jecxz
xlat
push
jecxz
pop
jecxz
xlat
pop
jecxz
jg
aaa
jg
jecxz
xlat
pop
jecxz
pop
jecxz
xlat
pop
jecxz
pop
jecxz
xlat
pop
jecxz
aaa
jg
aaa
daa
jecxz
xlat
es
and
jecxz
and
das
repz
jg
xlat
and
sub
and
sub
jecxz
xlat
jecxz,pn
jg
aaa
jg
jecxz
xlat
sub
xor
sub
aas
sub
cmp
sub
cmp
jg
aaa
aaa
jecxz
xlat
ss
xor
jecxz
xor
add
aaa
jg
xlat
xor
add
jecxz
xlat
xor
push
aas
jecxz
xlat
jecxz,pt
jg
aaa
jg
jecxz
xlat
cmp
or
jecxz
xlat
cmp
adc
jecxz
xlat
cmp
jnp
stc
pushl
dec
loop
loope
loop
loope
pop
loop
loope
loop
and
loop
mov
loop
loope
loop
and
shl
loop
das
loop
fwait
mov
loop
sub
loop
sub
lret
loope
loop
mov
loop
loope
loop
aaa
loop
loope
loop
xor
loop
mov
loop
loope
loop
xor
shl
xor
sarb
loop
fwait
mov
loop
cmp
loop
push
loop
loope
loop
mov
loop
loope
loop
add
mov
out
mov
mov
loop
loope
loop
or
lods
loope
loop
or
stc
fwait
mov
loop
or
test
pop
loop
push
loop
loope
loop
mov
scas
mov
loope
jecxz
inc
loope
mov
mov
mov
inc
loope
insb
loope
adc
mov
loope
adc
mov
dec
loope
jle
mov
jecxz
loope
dec
loope
jecxz
jmp
dec
loope
dec
loope
jecxz
loope
movb
loope
jecxz
loope
push
sub
push
pushf
jecxz
loope
adc
loop
push
loope
add
int
pop
dec
jecxz
loope
adc
out
jecxz
loope
pop
loope
jecxz
loope
int
pop
loope
jecxz
loope
pop
loope
jecxz
loope
es
jecxz
lds
int
and
mov
and
sar
insl
insl
loope
adc
loope
add
mov
push
insl
insl
loope
adc
fisttpll
loope
adc
loope
push
jbe
cld
insl
loope
adc
loope
jecxz
loope
ss
and
cmpsl
fdivr
int
adc
cmpsb
jecxz
loope
xor
movsb
jecxz
loope
xor
aad
int
jbe
loope
adc
loope
jecxz
loope
cmp
scas
jecxz
loope
jbe
jbe
cmp
scas
push
loope
push
ja
adc
loope
push
shl
jecxz
jo
repz
loope
jp
ret
adc
loope
mov
or
loope
and
adc
std
jg
mov
and
adc
loope
jecxz
loope
or
stc
jecxz
loope
incb
enter
je
loope
jecxz
loope
fwait
mov
adc
cmc
jecxz
loope
push
loope
insl
mov
loope
sbb
iret
mov
lret
loope
jecxz
loope
aad
fwait
rcrb
int
loopne
test
outsl
in
loopne
insl
out
adc
insl
in
loopne
inc
loopne
in
loopne
dec
loopne
icebp
outsl
ja
dec
loopne
adc
in
loopne
sub
stc
fcmovnu
fdivl
loopne
in
loopne
adc
sub
fwait
mov
mov
sub
pop
loopne
in
loopne
pop
loopne
fwait
mov
loopne
and
loopne
and
jae
and
jb
stc
fwait
mov
and
jo
loopne
in
loopne
sub
loopne
mov
loopne
in
loopne
sub
jns
sub
js
loopne
or
loopne
xor
inc
aaa
jg
pop
call
inc
adc
loopne
in
loopne
loopne,pt
repz
jg
in
loopne
add
loopne
add
push
in
loopne
jg
aaa
jg
loopne
in
loopne
pavgb
push
loopne
or
loopne
aaa
jg
aaa
or
pop
in
loopne
or
pop
in
loopne
pop
loopne
repz
jg
in
loopne
adc
loopne
adc
and
adc
and
cli
aaa
jg
loopne
in
loopne
pop
loopne
in
loopne
in
out
push
les
outsl
out
jmp
out
add
inc
out
mov
out
in
inc
out
repz
stc
inc
les
inc
dec
out
inc
les
inc
adc
les
jp
clc
aaa
jg
out
jns
dec
out
inc
dec
out
dec
les
dec
les
repz
cld
add
out
xchg
out
add
out
int3
adc
out
rol
es
cli
jg
aaa
jg
out
stc
lds
out
loopne
out
fcmovnb
cs
movsb
sub
xor
sub
xor
inc
sub
xchg
xor
std
and
out
adc
out
into
pop
xor
repz
out
int
out
rol
out
iret
or
lds
out
cli
jle
jne
add
ja
sbb
jbe
sbb
sbb
je
outsl
out
and
out
and
out
jne
add
jmp
add
fucomip
fucomi
ljmp
and
push
out
in
ret
or
out
aaa
jmp
in
test
out
repz
fcmovnb
outsb
pop
les
mov
pop
js
out
notb
pop
les
out
xchg
ficomps
adc
rcll
adc
lret
ret
sbb
stos
cmp
inc
in
in
inc
in
in
inc
push
movl
stc
fwait
mov
in
out
inc
in
out
dec
in
in
dec
in
repz
dec
in
hlt
jg
xlat
mov
dec
in
rol
in
ret
in
mov
mov
push
fwait
mov
adc
push
in
mov
in
mov
push
in
jo
fucomip
mov
pop
in
cmc
pop
in
into
or
in
leave
in
outsl
jg
mov
int
and
mov
xor
in
mov
adc
pop
cld
mov
in
vcvtss2si
rol
es
push
xor
in
sub
test
in
dec
adc
in
inc
ss
call
xor
cli
adc
in
pop
aad
sti
stc
xor
aad
xor
aam
shrb
iret
outsl
clc
mov
pop
cmp
push
ret
sub
xchg
dec
ret
add
aad
outsl
fwait
dec
in
dec
adc
pop
add
mov
add
jl
in
dec
ret
push
and
in
pop
ret
sar
in
lods
cli
or
rorl
test
or
add
aaa
shll
inc
push
push
pop
adc
inc
adc
lock
test
in
mov
in
mov
adc
movsl
adc
in
cmpsl
rcrl
jmp
imul
repnz
xchg
ffreep
sbb
std
push
int
ljmp
movl
flds
dec
in
iret
add
daa
mov
dec
and
in
sub
in
clc
or
in
mov
lds
in
jb
sub
inc
lds
in
icebp
jecxz
and
mov
in
insb
aas
in
pop
lock
mov
inc
lds
in
inc
lock
int
loop
ss
jmp
adc
xor
add
xor
jmp
repz
jg
loop
jmp
out
xor
por
push
jmp
loop
jmp
jg
aaa
jg
jmp
loop
jmp
or
cmp
or
cmp
jmp
loop
jmp
aaa
jg
aaa
push
jmp
loop
jmp
adc
add
adc
add
jmp
clc
aaa
jg
loop
jmp
adc
out
pop
jmp
push
jmp
loop
jmp
loop
std
out
insb
ljmp
ljmp
inc
ljmp
stc
fwait
loope
ljmp
ljmp
ljmp
dec
ljmp
add
dec
ljmp
cld
int
push
ljmp
ljmp
ljmp
int
icebp
push
ljmp
ljmp
cld
int
cld
ljmp
ljmp
ljmp
hlt
int
es
ljmp
cld
int
cld
ljmp
ljmp
ljmp
cld
int
sub
int3
jmp
ljmp
ljmp
int
xlat
ss
ljmp
cld
int
cld
ljmp
ljmp
ljmp
cld
int
cmp
fldl2t
cmp
fadds
ljmp
ljmp
int
movsb
add
mov
add
mov
paddb
ljmp
ljmp
ljmp
cld
int
pop
ljmp
ljmp
ljmp
int
mov
ljmp
ljmp
negb
inc
jmp
inc
jmp
rcl
inc
jmp
outsl
inc
jmp
fisttps
dec
jmp
out
out
jmp
dec
jmp
push
jmp
push
jmp
movsl
push
jmp
mov
push
jmp
outsl
push
jmp
scas
pop
jmp
lods
pop
jmp
out
jmp
pop
jmp
daa
jmp
es
mov
jmp
mov
jmp
mov
out
and
mov
das
jmp
sub
mov
out
jmp
sub
mov
aaa
jmp
ss
test
test
xor
int
jmp
adc
jmp
adc
int
int
jmp
adc
dec
idivb
adcb
int
int
jmp
adc
jmp
adc
int
int
jmp
adc
push
testb
adc
int
int
jmp
adc
jmp
adc
int
int
jmp
adc
pop
testb
adc
pop
cld
int
jmp
adc
jmp
xchg
or
jmp
not
adc
jmp
arpl
jmp
push
clc
cmpsb
clc
adc
imul
jmp
lock
jp
push
sbb
inc
hlt
dec
ficomps
mov
pop
hlt
mov
cmp
or
hlt
lahf
out
movl
inc
lods
pop
mov
loopne
inc
inc
movl
or
outsb
push
dec
dec
cmp
dec
movl
push
ret
out
sbb
dec
lcall
add
ljmp
add
sbbb
jo
push
leave
sub
cmpsb
sarl
mov
shll
iret
mov
mov
dec
sarl
lock
in
imul
lock
enter
in
addr16
imul
or
jno
push
push
jo
jbe
or
xchg
pop
je
xchg
jae
mov
jb
push
sbb
jns
cmpsb
jns
sarl
loopne
cmp
jge
jl
or
outsb
bound
jns
push
cmpsb
or
add
add
dec
sbb
popf
cmp
mov
push
data16
sahf
xchg
push
push
dec
sarl
adcb
xor
cmp
adcb
push
out
mov
push
fimuls
jno
pop
or
stos
and
repz
jo
and
loop
test
sbb
jmp
cli
popf
dec
popf
cmpsb
imul
lcall
and
push
and
and
aaa
gs
arpl
out
or
popa
pusha
sbb
or
imul
pusha
add
inc
lock
ficoml
or
mov
jo
sahf
or
cld
dec
add
loop
in
dec
div
ljmp
repz
lock
std
cld
add
cli
stc
clc
pop
add
iret
into
pop
lret
pop
adc
mov
fucom
mov
cmpsl
test
ret
decb
inc
std
xchg
pusha
mov
cmc
add
push
addr16
bound
outsl
outsb
insl
insb
add
imul
jne
sub
jg
jge
in
jp
js
decb
inc
js
inc
inc
dec
dec
dec
dec
stos
dec
dec
dec
push
push
push
push
ljmp
sub
push
pop
pop
pop
pop
pop
pop
pop
daa
es
and
ljmp
cs
sub
aaa
ss
xor
aas
ds
cmp
pop
push
add
sbb
add
femms
or
or
push
adc
adc
std
fucomi
lcall
push
sbb
sbb
decl
add
add
movsl
movsb
mov
pushl
sahf
scas
scas
lods
lods
stos
stos
test
mov
mov
mov
mov
mov
lock
or
loopne
out
and
hlt
xchg
jp
std
add
in
sub
inc
add
adc
sbb
mov
sahf
loopne
add
and
aas
add
add
shl
cli
or
xor
push
or
scas
stos
stos
pop
repnz
mov
cmp
shlb
ljmp
or
es
lods
sub
pop
clc
add
and
aam
sti
push
sub
addr16
add
cmc
or
pop
icebp
fbstp
negl
pop
push
outsb
outsb
adc
add
add
pop
mov
push
in
push
loope
add
insb
pushl
addl
jle,pn
nop
xchg
mov
aam
stos
mov
jl
nop
lods
mov
jnp
mov
sbbl
mov
jnp
and
push
decl
cmpsl
dec
sub
lods
shlb
nop
outsb
lcall
and
data16
pop
mov
mov
mov
sti
das
aas
sarl
push
adc
xchg
mov
shl
and
lods
add
leave
jb
mov
inc
pop
icebp
mov
mov
xchg
aam
in
jge
ret
pop
ret
andl
icebp
lea
xor
bound
lret
mov
sub
push
add
enter
loope
icebp
jle
add
rcll
int
jp
jnp,pt
jp
call
add
inc
popf
mov
aad
ret
xor
stos
add
test
decl
or
arpl
popa
pop
ret
fbld
push
lock
mov
loop
ja
add
cmc
or
add
push
incl
das
sbb
pop
sub
fmul
dec
scas
call
sbb
idivb
rolb
ret
aas
adc
pop
roll
enter
rolb
or
stos
sbbl
adc
rorl
mov
loopne
mov
add
cmpsb
addl
stos
fisttpl
decl
mov
cmpsb
push
and
xchg
push
mov
mov
push
call
xchg
dec
aad
enter
xor
mov
mov
mov
jg
std
or
lfs
sbb
mov
mov
andb
add
addb
add
or
push
in
bound
xchg
outsl
mov
pop
hlt
and
push
cmc
fldl
or
add
mov
inc
or
mov
mov
mov
leave
roll
mov
mov
mov
movl
jle
mov
and
inc
test
pop
hlt
mov
addb
mov
subb
pusha
in
dec
loop
jne
mov
mov
stos
jge
addl
mov
pusha
add
outsl
fwait
movsb
or
insb
loope
dec
cmpsl
and
iret
mov
dec
sarl
fmull
loop
push
shlb
ljmp
or
or
andb
mov
je
mov
ud0
lods
mov
and
xchg
mov
stos
sbbb
movsb
pusha
push
lcall
cmc
or
xorb
daa
add
push
std
and
test
scas
stos
push
stos
lret
mov
xchg
dec
and
stos
mov
and
bound
stos
xor
andb
fsubs
mov
sub
add
es
adcl
aad
jg
cmpsb
mov
pop
popa
add
loop
test
sarl
movsb
test
data16
cmpsb
adc
xor
mov
add
cwtl
dec
adc
mov
mul
add
xchg
scas
cld
bound
mov
cmc
or
xor
xchg
mov
add
add
fimull
pop
test
fadds
lret
test
and
xchg
xchg
adc
js
sub
addb
adcb
loopne
loope
inc
pusha
adc
bound
ds
xchg
add
inc
fdivl
and
xchg
and
mov
or
adc
loopne
shll
push
test
int
loopne
push
lcall
ret
fstp
jbe
sbb
test
enter
test
clc
or
mov
mov
adc
pop
push
fdivrl
test
mov
sbb
add
inc
loope
andb
sub
in
mov
xor
add
and
dec
lahf
and
cmp
add
mov
fsubrs
mov
push
icebp
pusha
or
mov
daa
icebp
cmpsl
sbb
pusha
add
mov
xor
mov
add
jo
das
rorb
popa
or
mov
xchg
jecxz
push
mov
aaa
imul
mov
push
data16
add
pushl
cmp
in
cmp
bound
gs
add
fs
pushl
in
add
jne
out
lods
imulb
jb
add
in
add
adc
prefetchwt1
or
mov
pmuludq
lods
cli
and
adc
incl
adc
add
add
pusha
sbb
sbb
mov
in
or
orl
test
or
xchg
inc
pushf
mov
js
scas
movsl
scas
sbb
mov
insl
inc
scas
xor
xor
rorb
mov
js
mov
mov
xor
dec
xchg
inc
add
adc
push
add
adc
adc
push
mov
or
mov
cmp
push
fcoms
and
fdiv
add
xchg
popa
pop
adc
scas
enter
inc
fistps
jns
inc
lcall
adc
mov
dec
mov
adc
mov
mov
cld
push
push
hlt
adc
adc
das
mov
sub
mov
ljmp
icebp
pop
cld
push
mov
xchg
shlb
mov
dec
ficoms
nop
add
loop
adc
orl
push
push
add
stos
shrb
sar
adc
mov
cwtl
xor
es
ss
xchg
test
out
clc
push
jo
pop
rorb
aam
pushf
add
pop
pop
xchg
insb
dec
lods
clc
add
lock
in
shl
pop
in
push
in
add
mov
bound
test
adc
mov
sub
or
xorb
push
push
adc
mov
or
jg
adc
test
mov
jo
adc
xchg
adc
jp
mov
pop
add
jns
mov
xchg
push
rorl
in
add
rcr
incl
popa
add
mov
mov
nop
jbe
scas
mov
adc
jno
mov
xor
fcmove
add
incb
push
ret
sbb
inc
jp
mov
mov
add
xor
dec
adc
xorl
sbb
add
pushf
rolb
and
fs
add
cmc
jg
cld
add
add
mov
xor
testb
xchg
roll
not
adc
lahf
jo
out
push
aaa
push
add
push
adc
pop
loop
rorb
rorb
xchg
mov
mov
pop
mov
mov
adc
mov
xchg
push
inc
scas
xchg
mov
loopne
cli
mov
lds
pop
lds
mov
jae
xor
sbb
mov
shll
mov
shlb
mov
test
pop
push
out
add
ret
adc
add
call
addb
jo
test
outsl
div
add
addb
dec
push
arpl
enter
sar
mov
enter
xchg
cmp
dec
and
mov
mov
mov
mov
xor
ret
mov
mov
mov
sbb
adc
addb
mov
repnz
push
jecxz
outsl
cli
mov
xchg
cwtl
mov
pop
xor
pop
xor
jg
xor
push
xor
movaps
das
push
sub
das
and
das
xor
and
lds
push
mov
mov
nop
cltd
lcall
mov
lods
mov
xchg
fwait
loopne
add
pop
add
pop
xor
and
das
or
cmp
add
push
push
inc
add
outsl
data16
jp
add
lcall
jp
add
fcmovu
fmul
fld
and
loope
add
add
mov
cmp
fldenv
rcl
rorl
icebp
in
lods
in
leave
filds
lret
stc
fcmovnb
ljmp
int
in
pop
js
cmc
shlb
clc
add
in
mov
stc
out
incb
call
hlt
call
inc
xchg
aaa
xor
pop
cmp
xchg
call
popl
add
inc
add
adc
push
cmpsb
js
mov
push
sbb
adc
push
pop
pop
sbb
and
ljmp
in
sub
aas
sub
adc
cmp
das
fidivrs
add
arpl
jl
outsl
or
dec
add
jl
pop
jbe
pop
jb
in
mov
xor
gs
outsl
arpl
dec
ja
add
adc
cmc
mov
sbb
pop
cmp
and
sub
and
and
popa
push
adc
mov
or
or
and
mov
jnp
jg
pop
push
dec
dec
push
inc
push
adc
ret
ljmp
mov
insl
je
cmp
dec
dec
dec
or
sbb
sub
and
cs
jg
cmpsl
mov
mov
mov
mov
mov
lods
stos
and
nop
jmp
xchg
cmp
xor
and
mov
mov
std
dec
incl
test
mov
mov
xchg
lods
stos
mov
cli
mov
into
xchg
xchg
movsl
test
mov
sub
imulb
push
jns
sub
loop
sub
rorl
cmp
cmp
dec
mov
inc
xchg
fisttps
fidivs
bound
bound
dec
or
push
add
cmpb
dec
push
sbb
xor
adc
fcomip
incl
insb
push
daa
xor
sub
add
jbe
jnp
jp
mov
cmpl
mov
xor
add
push
add
adc
es
sbb
xor
inc
inc
or
inc
dec
movups
or
add
add
adc
shr
jmp
div
jecxz
push
fstpt
mov
ljmp
cmc
sti
repnz
mov
mov
in
inc
scas
movsl
hlt
lods
add
pusha
mov
int3
fcoms
lret
add
mov
mov
lcall
fidivs
into
enter
add
mov
add
add
imul
incl
sub
cmp
ss
xor
incl
sbb
out
cmp
adc
sbb
adc
bound
sbb
lock
mov
jno
jne
dec
sbb
pop
push
push
dec
push
pop
adc
pop
pop
inc
push
add
mov
pop
lret
mov
sbb
mov
xchg
add
mov
in
aad
sar
aas
pushl
push
int
int3
rcr
ret
cli
add
jae
dec
je
jb
fdivl
std
jne
jge
jno
mov
popa
bound
adc
sub
call
add
push
adc
add
adc
jle
bound
bound
arpl
jb
imul
jg
fcmovu
enter
fcmovnb
clc
ror
iret
int
lret
cmpsl
sbb
pop
xor
inc
cld
add
add
or
adc
cmp
or
ja
pop
mov
mov
imul
adc
and
sbb
xor
call
sub
pusha
xchg
test
xchg
lcall
mov
sar
clc
icebp
out
hlt
pop
jne
addr16
imul
mov
cltd
movsl
lahf
popf
mov
jno
dec
addr16
arpl
inc
outsl
fbstp
jne
jge
dec
outsb
pop
dec
bound
jns
inc
lcall
mov
scas
mov
mov
mov
bound
jns
imul
fs
jle
jg
test
mov
subb
test
jg
pop
push
cld
lock
jmp
cli
sti
jecxz
dec
jb
dec
jbe
dec
jbe
shl
std
call
push
push
sub
sbb
sbb
or
data16
js
lods
jne
idivb
mov
lahf
fwait
sbbb
sbb
xor
ljmp
call
add
stc
jmp
add
or
pop
xor
cmp
adc
push
push
adc
mov
dec
dec
or
pop
dec
inc
add
add
dec
pop
sub
cmp
dec
dec
pop
dec
push
push
data16
mov
mov
xchg
sahf
mov
adc
sbb
push
lea
ljmp
movsb
mov
mov
scas
cmpsb
mov
sahf
mov
mov
cli
mov
inc
cmpsl
lcall
addr16
addr16
jo
aas
js
incl
out
xor
insb
bound
sti
icebp
loop
icebp
loope
loope
rcr
lret
int3
aad
jmp
int
lea
into
fsubp
std
stc
inc
int3
hlt
div
stc
jg
icebp
in
push
std
sti
repz
out
cmc
in
or
sbb
add
or
xchg
mov
add
xchg
mov
test
mov
xchg
mov
bound
and
dec
fstp
mov
pop
ret
push
pop
pop
dec
pop
aaa
out
mov
jmp
inc
stos
mov
scas
stos
mov
xchg
incl
mov
mov
sbb
rclb
out
mov
es
add
pop
adc
idivb
sbb
push
push
adc
pop
pop
pop
inc
pop
inc
pop
push
xor
popa
fs
sub
jb
test
ja
jmp
out
mov
push
push
dec
dec
adc
arpl
addb
sbb
mov
mov
fdivr
mov
xlat
rcr
fcmovnbe
pop
mov
jg
filds
cs
sbb
push
repnz
in
repnz
loope
jmp
cmc
fld
rorl
int
ljmp
lahf
mov
repz
in
mov
call
decb
inc
add
testl
xchg
pop
inc
dec
inc
dec
pop
cs
mov
pop
push
dec
inc
push
push
inc
push
inc
push
dec
push
call
pusha
data16
jle
dec
jae
imul
insb
push
add
fmul
lret
fmul
fcmove
xlat
repz
jg
sub
loop
loopne
shr
cli
fsubr
in
lock
jne
adc
fyl2xp1
shl
hlt
adc
dec
inc
inc
dec
push
ja
out
clc
inc
inc
dec
inc
or
jg
outsl
mov
psrlq
repz
pop
jge
movsl
mov
push
out
shr
aaa
push
rclb
sbbl
ljmp
mov
xor
sub
add
aaa
cmp
cmp
sbb
sbb
xor
sbb
add
aad
out
faddl
inc
pop
out
fisttps
add
ret
aas
xor
aas
xor
loope
in
pop
jecxz
clc
addr16
cmp
xor
ja
cmp
ss
cmp
pushl
cmp
add
push
push
adc
into
int3
xchg
add
mov
rol
andl
inc
add
mov
pop
adc
sbb
push
push
add
shrb
sbb
adc
sub
aas
sub
cmp
pop
hlt
or
sbb
push
push
adc
jo
push
leave
mov
ret
pop
jge
push
loopne
ja
bound
inc
xchg
mov
stos
sub
filds
cmc
out
in
mov
mov
inc
mov
scas
mov
mov
icebp
mov
sar
loop
push
cmc
dec
cli
add
push
or
mov
mov
mov
les
adc
xor
add
mov
jp
std
in
in
sub
ds
outsl
sub
psadbw
div
push
dec
push
test
xchg
les
cld
pop
pop
inc
dec
inc
add
dec
push
es
lcall
sahf
lcall
sbb
cmp
and
ds
out
lcall
sub
jp
jp
sub
inc
push
push
sbb
or
jbe
push
jnp
or
ljmp
inc
or
sbb
inc
add
jnp
dec
xor
inc
push
push
sbb
or
push
sbb
adc
pop
push
inc
cmp
push
sub
xor
jecxz
mov
cs
mov
mov
mov
cld
pushl
out
cmp
sub
or
aas
ds
and
sbb
sub
test
mov
xor
and
out
sub
das
pop
lock
mov
scas
outsb
ss
mov
daa
xor
sub
and
pop
pop
pop
and
das
jle
call
sahf
xor
push
insb
outsb
xor
adc
sbb
push
dec
dec
sbb
or
xorl
fwait
nop
cltd
add
cmpsl
enter
test
lret
iret
sahf
xor
lcall
stos
lods
test
xchg
rcrb
mov
sbbl
aad
jmp
fdivp
repnz
out
dec
dec
jb
jge
incl
cmp
ss
jne
data16
ret
rcr
out
ret
cmc
lret
outsl
xor
mov
mov
jnp
std
es
addr16
inc
jle
sbbb
cmp
or
or
sub
add
xor
sbb
and
jo
out
mov
adc
or
sbb
push
or
ljmp
in
add
inc
sub
or
xlat
aam
fcmovb
ffree
lret
xchg
rcr
fcmovu
fidivl
das
pop
loope
ror
mov
fsts
dec
lret
fcmovne
iret
add
push
dec
dec
dec
dec
pop
insl
push
pop
pop
dec
pop
pop
punpckldq
pop
push
pop
ljmp
mov
mov
scas
std
lahf
mov
mov
mov
mov
std
jns
pop
push
push
js
pop
inc
push
inc
inc
jae
push
dec
dec
pop
inc
inc
inc
add
ss
jmp
inc
push
jns
insl
inc
cmp
jno
gs
popa
add
or
rol
jmp
ljmp
sub
jl
cmp
and
daa
clc
decl
xchg
stos
mov
lock
jecxz
in
jecxz
iret
fld
add
mov
and
lock
hlt
mov
ja
mov
jg
push
aas
push
jne
popa
jno
gs
dec
push
pusha
jg
in
mov
fstpt
scas
shlb
fs
jle
js
xor
js
test
test
aad
call
lea
aad
fwait
adc
std
dec
adc
push
dec
add
outsl
push
xor
pop
xor
gs
addr16
jg
dec
push
aaa
cld
mov
cmp
ja
jg
hlt
jne
jg
jnp
pop
adc
stc
dec
sti
lods
loope
test
nop
ret
fcmovu
xchg
aas
stc
movsl
cmc
mov
fcmovnu
incl
movsb
mov
cwtl
mov
mov
aam
push
lcall
pushf
mov
cmpsb
mov
mov
pushl
mov
scas
mov
stos
ret
in
xchg
out
ret
jecxz
or
cld
int3
int
les
adc
ljmp
add
out
add
sub
sbb
adc
adc
or
cmp
or
mov
and
cmp
sub
pop
sub
pop
jecxz
mov
add
adc
sbbb
das
and
and
and
aaa
and
sbb
popf
clc
cmp
xor
cmp
das
xor
les
xor
nop
add
jge
add
add
push
fcoms
bound
pop
test
sarb
jmp
push
out
icebp
ljmp
xlat
imul
call
aam
jecxz
ret
fdiv
in
ret
loope
ljmp
clc
bound
dec
bound
jns
aas
jle
jne
imul
ja
pop
mov
jp
and
insb
js
push
rclb
adc
dec
sbb
xor
push
jp
cwtl
or
dec
pop
inc
pop
or
and
and
out
mov
js
outsl
jle
dec
scas
add
add
pop
adc
adc
cli
decl
dec
out
or
add
push
pop
or
xor
xor
cmp
jp
jp
push
aaa
std
jne
push
push
xor
xor
cs
push
push
dec
sbb
pop
dec
mov
adcb
push
imul
inc
push
dec
mov
mov
inc
arpl
sbb
arpl
inc
imul
inc
jg
and
pusha
jno
outsl
jae
daa
jge
jle
les
xchg
test
lcall
lahf
ficomps
int
jmp
popf
lcall
mov
mov
lock
mov
mov
cmpsb
ljmp
movsb
mov
mov
fcmovnu
aad
lcall
ret
fdivp
fimull
ret
aad
dec
into
lret
jle
jg
add
std
loope
mov
ret
out
jmp
in
call
cmc
loop
cld
clc
out
scas
mov
call
dec
jnp
or
or
inc
adc
push
lcall
mov
inc
sbb
add
and
cmp
or
aaa
sub
aas
sub
outsb
sbb
xor
sub
sub
ljmp
or
aas
sub
call
jg
jnp
inc
dec
pop
inc
push
mov
xor
and
cs
cmp
xchg
mov
sbb
add
pop
aas
jg
decl
sbb
push
ja
push
jo
inc
push
jns
ja
jnp
add
into
loop
das
rorb
pop
push
push
push
jp
sub
add
ljmp
inc
pop
sbb
add
fstp
lods
jo
cmc
ds
push
cld
jmp
and
xor
push
and
sbb
sbb
xor
adc
sbb
bound
sub
and
sbb
or
add
and
xor
add
push
add
mov
movsl
cmpsb
scas
cmpsl
mov
mov
mov
ss
inc
pop
pop
pop
pop
and
sbb
dec
dec
dec
aaa
sub
mov
cmp
dec
push
dec
pop
dec
pop
inc
xor
mov
aad
mov
into
jecxz
cli
in
out
cmpsl
shl
outsl
clc
sar
ljmp
push
add
add
inc
sub
or
adc
in
fwait
sahf
loopne
hlt
out
in
inc
add
scas
scas
mov
scas
movsb
stos
lods
std
mov
movd
dec
inc
inc
dec
dec
push
jg
inc
dec
push
es
test
lods
mov
fs
lds
cli
scas
jg
sub
fucomp
test
inc
inc
dec
push
or
out
dec
push
pop
das
dec
push
and
pusha
outsl
outsl
imul
sbb
or
or
adc
push
adc
pop
ljmp
adc
or
jl
push
push
or
sub
xor
daa
cmp
shll
and
imul
mov
daa
fs
out
jp
bound
jae
in
icebp
repnz
lret
fstp
fdivr
ljmp
rcl
rcr
rcr
test
cmpsl
lock
lock
loop
jmp
stos
scas
clc
mov
jg
lahf
pop
iret
int3
rcl
fcomp
int
fcomp
lcall
lret
das
outsb
jo
test
aam
roll
les
xchg
fcomip
pushl
xchg
mov
mov
mov
mov
scas
mov
cmpsb
test
mov
idivl
jmp
repnz
imull
mov
scas
stc
ljmp
movsb
iret
rol
ret
lods
divb
outsb
insb
insb
mov
ss
cmp
pop
push
inc
xor
pop
shlb
pop
sub
jbe
push
es
pop
pushl
decl
jnp
cmp
gs
arpl
xor
popa
jp
or
push
inc
sbb
sbb
sub
pop
cltd
xchg
xchg
xchg
test
cmpsb
addr16
dec
mov
stos
mov
orb
xchg
mov
outsb
pop
sbb
adc
call
inc
push
push
pop
add
jg
incl
popf
mov
mov
mov
mov
cli
pause
add
pop
mov
sahf
movsb
xchg
pushf
pop
jo
add
cmp
test
test
push
xchg
hlt
in
add
in
int3
fmulp
aad
addl
idivl
xor
sub
psllw
jl
fwait
cmpsl
xchg
mov
int
jmp
fcmovu
fistl
ret
mov
mov
popl
jg
sar
mov
in
in
jmp
leave
jmp
add
mov
out
cli
fistl
lret
mov
xchg
sahf
test
cli
aad
lea
mov
ljmp
test
mov
adc
cli
mov
mov
mov
inc
outsb
addb
lahf
fildll
ja
push
test
pop
add
mov
fs
repnz
ficoml
adc
sbb
orb
sbb
sbb
repnz
mov
outsb
mov
mov
insb
adc
or
lcall
mov
inc
add
fldln2
jg
pusha
mov
add
sbb
bound
xchg
xor
xchg
daa
lods
push
pusha
mov
ret
or
push
cld
mov
mov
ret
dec
xchg
in
add
sbb
out
in
daa
add
pop
lock
fcomp
mov
insb
xchg
fbld
adc
cmp
mov
push
js
jecxz
in
xchg
and
insb
and
add
in
fs
sbb
fadd
cld
fildll
ljmp
aam
mov
ret
mov
fcoml
xchg
test
push
dec
fisttps
data16
or
cmpl
add
int3
loop
dec
sbb
add
das
clc
das
loop
in
sbb
xchg
mov
jbe
mull
incl
daa
int
mov
jecxz
or
push
fimuls
divl
or
subl
push
and
mov
sbb
insb
mov
push
rep
xchg
iret
pop
incl
addb
cld
pop
pusha
mov
dec
fildl
es
mov
add
pop
lods
in
insb
movsl
imull
or
subps
add
lcall
xor
sbb
dec
sbbb
xor
loope
jmp
insb
cli
and
data16
jle
pop
mov
repz
sbb
adc
sbbl
mov
inc
xor
ljmp
mov
pop
addb
in
mov
ljmp
or
subb
add
add
xor
outsb
xor
rcrb
mov
arpl
or
rcrb
sarl
xor
sti
leave
rolb
rclb
add
mov
add
or
cld
mov
or
jae
cmovb
inc
or
adc
dec
test
adc
xchg
testl
and
mov
pop
addb
xchg
aas
fs
mov
ja
std
dec
out
xor
pop
rclb
mov
sbb
ficomps
cld
adc
add
orl
mov
jg
push
jecxz
mov
xchg
in
lret
sbb
sbbb
xchg
or
inc
push
fldt
enter
sub
and
inc
dec
cmp
fcomi
fs
jecxz
sbb
jecxz
ret
push
jecxz
in
xchg
pop
stos
hlt
add
das
inc
rclb
rsm
int3
cvtdq2ps
rolb
xchg
ficoms
cld
and
nop
mov
daa
addb
rcr
shll
shl
mov
push
and
mov
add
or
in
jne
fisubrs
pop
inc
sbb
mov
push
cmp
inc
inc
add
popa
pop
call
inc
sub
and
mov
call
lock
pop
inc
xor
rolb
outsl
add
jecxz,pn
jo
pop
idiv
adc
inc
insb
push
and
mov
cmc
stc
add
inc
repz
call
clc
in
dec
inc
xchg
mov
jg
hlt
ret
push
imul
cmpb
call
inc
lcall
xorl
adc
getsec
add
scas
mov
push
aaa
pop
icebp
ljmp
daa
pusha
add
int3
add
maxps
stos
pop
icebp
add
hlt
movsb
jp
and
inc
rclb
and
sbb
out
and
sbb
movsb
sbb
daa
jmp
addr16
scas
cli
decl
xorl
add
cmp
call
loopne
loopne
pop
cmpsb
pop
js
pusha
add
mov
cmp
loopne
in
aam
mov
or
mov
loop
mov
arpl
rolb
clc
call
rolb
icebp
xor
adc
sub
fwait
jge
std
sbb
sbb
insb
cmpsl
and
cmovp
cli
aas
mov
inc
inc
add
lcall
packssdw
stos
mov
push
insb
and
sbb
adc
divb
nop
in
out
add
push
and
sbb
shlb
and
ficoml
jg
adc
mov
roll
mov
fneni(8087
or
cmp
and
add
mov
dec
xchg
xchg
jecxz
add
aam
clc
jg
pusha
imul
or
imul
add
pop
outsb
shl
mov
pushl
mov
push
sub
movsl
subb
xchg
out
pusha
cmpl
fbstp
sub
stos
mov
gs
and
punpcklbw
mov
add
loopne
sub
rcrb
pop
push
cli
ret
xchg
loope
loope
mov
add
inc
les
sbbb
push
pop
sbb
incb
rcrb
movsb
add
and
hlt
inc
push
fwait
mulb
out
push
cli
push
and
or
and
mov
decl
pop
xchg
mov
daa
out
scas
xchg
pop
insb
mov
push
std
fbstp
popl
and
xor
ret
idiv
in
mov
arpl
repnz
mov
shlb
fcompl
std
mov
xor
mov
inc
sub
loopne
repnz
in
fbstp
loop
inc
test
cmpxchg
add
out
clc
inc
call
dec
in
fsub
add
jge
mov
repnz
clc
movsb
js
dec
cli
ljmp
jl
and
sbb
enter
ret
inc
and
wbinvd
inc
push
push
ret
ret
hlt
decl
shlb
add
mov
add
aaa
pop
xor
pop
xchg
ds
loope
insb
in
sub
mov
mov
incb
xor
inc
mov
push
or
iret
loopne
pop
push
cmc
dec
or
xor
pop
je
insb
add
mov
or
hlt
cmpsb
sbb
pop
ficoms
pusha
push
sub
pop
cli
and
pop
shlb
in
decb
xchg
mov
jg
ljmp
sysret
push
adc
mov
add
sbb
xchg
nop
icebp
lock
mov
sarb
out
and
mov
fsubrs
jp
ret
call
mov
mov
and
stos
lock
aas
orb
cmp
scas
jg
cmpsb
aaa
xchg
push
and
pusha
outsl
nop
rorb
xor
mov
inc
or
push
pop
push
adc
jle
sbb
cld
push
test
es
jo
xor
pop
das
clc
xor
fisubl
mov
xchg
or
and
or
adc
aaa
adc
mov
adc
rdmsr
outsb
rcrb
shlb
xor
loopne
es
ds
and
or
sub
push
lock
mov
out
outsl
mov
add
jecxz
jne
decl
jno
fs
xor
mov
add
out
pop
bound
jecxz
mov
pop
loopne
mov
cmpb
in
push
xor
pop
test
fs
xor
pop
add
mov
call
adc
mov
sub
cmp
fistpll
xor
mov
push
pusha
test
ds
dec
push
rcrb
insl
out
mov
xchg
cli
or
pusha
add
aas
cld
daa
push
and
subb
imul
lock
mov
and
push
movzwl
mov
jg
and
mov
push
fcomps
adc
sub
ret
lcall
dec
rolb
sti
sub
mov
xchg
inc
sbb
xor
outsb
and
cmp
push
mov
jae
or
xchg
sar
lcall
sbb
xchg
imul
add
and
rcrl
outsl
mov
fsubrs
pop
mov
setp
mov
add
fistps
mov
add
push
addl
mov
xchg
outsb
xchg
sbb
testb
hlt
jb
mov
or
pslld
dec
in
fldt
mov
and
push
and
sub
mov
in
xor
sahf
and
mov
push
or
xchg
push
enter
or
mov
xor
data16
rol
cli
mov
mov
jmp
loop
mov
adc
xchg
fwait
mov
inc
fstpt
out
push
pusha
jb
andb
mov
lods
adc
add
add
and
add
xor
xchg
pop
jecxz
das
rolb
fs
ljmp
fcmove
sub
sar
push
out
mull
bound
lcall
mov
add
jge
xor
adc
sbb
sbb
paddsw
xor
inc
in
add
add
push
aam
sub
push
cwtl
adc
or
mov
adc
call
insb
mov
pop
shrb
loop
cmc
jbe
add
outsb
adc
lock
ljmp
out
xchg
faddl
add
add
push
lods
adc
mov
std
decl
es
mov
jmp
add
adc
mov
add
xor
cwtl
and
pop
mov
sub
add
in
sbb
nop
insl
jg
in
add
or
and
faddl
inc
fs
cmp
and
add
or
lcall
mov
incl
inc
inc
add
testb
mov
xchg
in
cmp
incl
mov
dec
lock
loopne
mov
mov
das
scas
or
mov
ds
or
sbb
jmp
dec
xchg
push
and
rclb
inc
popa
cmovge
mov
rcll
and
clc
shlb
inc
les
ret
out
inc
mov
mov
ret
mov
jmp
shlb
pop
or
loop
loopne
mov
mov
jno
inc
inc
ljmp
mov
jo
loopne
pop
xchg
xor
or
jo
add
insl
stos
loop
xlat
imul
add
nop
mov
adc
wrmsr
ret
dec
nop
xorb
lods
lret
in
addb
and
outsl
clc
paddw
mov
cmpsb
and
pop
xchg
cltd
rcr
sbb
xchg
xlat
int3
sbb
sbb
jl
emms
jo
insb
stc
sbb
sbb
mov
push
xorl
lods
ljmp
or
adc
push
shl
fsubrp
stos
jg
add
lea
movsl
mov
mov
push
adc
mov
and
pop
xchg
fsubl
loopne
ljmp
jecxz
push
icebp
call
mov
bound
adc
and
adc
adc
dec
lret
jnp
sub
ljmp
rcr
shl
add
mov
xor
les
pop
push
add
incl
lcall
inc
mov
in
push
mov
pusha
push
adc
cmc
insb
fisubl
mov
mov
icebp
xor
hlt
imull
add
or
mov
rolb
icebp
mov
pushf
inc
add
sbb
cmovle
mov
push
rorl
mov
inc
sbb
call
cmp
or
and
jno
and
xchg
inc
sbb
jmp
jbe
lar
push
enter
inc
fs
xor
icebp
ja
cld
out
mov
les
mul
jo
add
repz
rorb
jmp
sub
add
gs
in
adc
xchg
testl
aas
sub
and
xor
shll
loope
pop
stos
or
aaa
xchg
rep
scas
add
data16
mov
loop
or
insb
stos
out
in
sbbb
sbbb
mov
pushl
push
sbb
mov
and
cmp
push
adc
dec
mov
or
push
inc
ljmp
das
cli
mov
out
loop
ret
loope
rorb
mov
ljmp
xchg
add
sbb
pusha
sbb
xchg
pop
mov
pop
shll
ja
aaa
in
icebp
push
add
mov
and
adc
imul
pop
mov
test
push
popl
sysret
push
adcl
adc
push
push
cmpsb
xchg
adc
pop
out
lods
xor
call
stos
adc
xor
pushf
add
add
xlat
outsb
or
divb
push
xor
xor
pop
add
ss
cmpsl
fdivrl
incl
lods
adc
mov
jbe
push
and
add
add
push
add
lods
lret
mov
or
test
fbld
mov
and
fistl
cld
sbb
add
or
idivb
mov
xor
cli
pcmpgtb
mov
xchg
jg
sarb
aam
and
loop
sub
cld
pop
bound
push
data16
cmpsl
add
int
xchg
push
mov
adc
mov
in
mov
add
das
add
push
incb
jge
add
xor
adc
push
cmpsl
loopne
fildll
mov
loop
addb
inc
pushf
shrl
bswap
add
adc
int3
clc
inc
jecxz
add
push
inc
add
fdivrs
jbe
ss
inc
stc
outsb
sarb
sub
or
sbb
xchg
les
add
pop
ds
icebp
das
xchg
mov
outsl
cmp
xchg
mov
xor
push
mov
or
and
sub
aaa
cld
scas
or
adc
sbb
sahf
xchg
and
mov
mov
lea
adc
aam
xchg
loope
add
inc
mov
test
fcompl
fs
mov
or
pop
inc
addr16
xchg
fnstsw
loope
addb
sub
movsb
imul
push
xor
fstpl
out
rclb
pop
lcall
push
pop
lss
mov
adc
jbe
je
cld
or
xchg
push
lahf
fisttpl
jbe
inc
add
test
lret
sbb
jmp
dec
hlt
rcrb
ret
add
mov
out
add
xchg
jo
popl
xor
add
fisttpl
sbbb
scas
outsb
and
adc
test
jne
subb
xorb
insb
sub
lds
mov
rclb
ret
push
mov
das
fdiv
mov
sbb
push
fs
shrb
rorb
mov
adcb
inc
stos
mov
push
test
xchg
stos
jl
xchg
push
dec
push
out
out
mov
pop
mov
ljmp
mov
or
subl
or
sbb
inc
or
roll
pop
adc
or
out
inc
call
rcrb
jns
xchg
loop
roll
mov
jmp
and
orb
mov
sti
jmp
lea
inc
jp
cmp
cmp
addr16
aaa
inc
sbb
popf
mov
mov
fidivrs
rolb
bnd
add
lret
hlt
lods
cmp
fcompl
xchg
mov
test
stos
pop
icebp
inc
andb
fsubr
push
mov
xchg
enter
mov
or
xchg
scas
xchg
adc
or
mov
rorb
lock
out
loopne
mov
sub
out
cmp
or
or
mov
fcoml
sarb
sbbb
adc
push
cmpsb
mov
out
aad
insl
aas
xchg
lret
fisttpl
mov
adc
mov
stc
aad
ljmp
pavgw
aaa
ret
out
add
es
mov
add
and
and
loope
stos
push
pusha
cmp
arpl
repnz
in
xchg
jmp
stos
dec
mov
inc
push
repnz
fsubrl
call
mov
cmp
cmp
add
addb
mov
mov
pop
insb
pusha
outsb
outsl
jmp
and
and
jg
jmp
mov
loopne
sbb
inc
add
mov
adc
test
cmp
hlt
repnz
mov
xchg
mov
or
push
add
and
sub
subl
mov
adc
sub
push
push
std
or
outsl
orl
outsb
stos
sbb
pop
movsb
mov
inc
inc
mov
pusha
push
pusha
or
jle
ljmp
and
insb
xchg
testl
in
mov
cs
lcall
pop
or
or
mov
cmc
mov
sti
xchg
and
scas
scas
xchg
negb
mov
jo
loope
rcll
and
bound
in
mov
aad
outsb
xchg
stc
es
push
in
scas
xchg
cld
outsb
cmpb
mov
xor
or
loop
dec
cmp
loopne
and
outsb
and
stos
outsl
mov
adc
bound
push
lea
inc
adc
push
dec
shl
out
cli
adc
push
adc
lea
aas
or
lret
adc
cmpsb
or
mov
add
push
mov
or
ljmp
outsl
sahf
mov
inc
push
cs
mov
inc
loopne
mov
mov
stos
in
pop
insl
std
mov
fidivrl
add
inc
push
sbb
add
and
dec
and
insb
pop
mov
mov
loope
or
enter
mov
add
mov
xor
add
mov
movsb
jne
adc
pop
loope
pop
jge
cmc
fistpll
mov
or
cmp
stos
jmp
fidivrl
mov
subb
imul
pop
hlt
sbb
adc
xor
and
dec
xor
outsb
outsl
scas
push
push
add
or
fisttps
inc
insb
jbe
inc
or
adc
xchg
in
ja
add
insb
inc
out
adc
adc
push
loopne
mov
or
int3
xchg
mov
jl
addb
inc
and
jns
jbe
stos
fcoms
stos
mull
cltd
adc
pop
es
testl
sbb
push
jmp
add
lcall
cli
mov
push
dec
jecxz
or
or
add
pop
mov
insb
fisubl
mov
addl
xor
and
xor
inc
push
or
notl
daa
sbb
sub
shlb
jb
sbb
sub
incl
add
pop
jl
jmp
call
mov
es
sbb
jno
nop
add
loop
mov
lods
sbb
jl
call
xchg
mov
fiaddl
add
rcr
loope
nop
insb
fiaddl
add
imul
ss
and
mov
jbe
rol
and
adc
push
mov
mov
push
xchg
sbb
in
add
add
andl
ret
and
or
in
pop
std
lea
or
mov
outsb
dec
pop
xchg
pusha
dec
push
push
or
es
nop
add
cmp
xor
adc
cmp
loopne
jg
incl
mov
or
adc
jp
mov
add
sbbb
and
or
mov
jmp
add
or
sub
cmpsl
xor
sub
jns
std
pop
cld
pop
jo
or
xchg
out
xchg
fld1
imul
cmp
mov
bnd
mov
add
popf
les
ljmp
mov
pop
aad
lock
pop
test
add
insb
shlb
sub
xor
or
jg
bound
ret
xlat
pushf
nop
push
or
ljmp
andl
or
aaa
add
jmp
adc
adc
shlb
inc
or
mov
call
mov
cmp
sbb
xchg
int
mov
clc
inc
xchg
push
push
inc
movsb
loop
add
aam
out
sbb
enter
das
data16
cmp
addps
or
insb
addr16
dec
push
adc
and
loop
and
and
mov
mov
push
daa
sub
mov
stos
xor
adcb
push
mov
imull
outsl
rorl
je
pusha
adc
push
dec
jecxz
cmpsb
sbb
and
xchg
in
mov
out
inc
inc
cld
jge
ss
mov
cmpsl
mov
or
mov
popa
mov
add
stos
out
mov
in
lea
jo
sbb
push
push
pop
sbb
push
xchg
rcr
mov
lret
push
push
inc
insb
insb
push
push
daa
adc
add
add
addr16
ret
pop
mov
ret
fdivl
xchg
ret
ja
stos
lock
jecxz
je
and
ss
bound
inc
xchg
lret
test
cld
ljmp
int3
fcompl
repnz
add
inc
sub
sub
insb
cmp
cmpb
icebp
lods
push
add
pop
rclb
cmp
mov
jo
adc
sti
clc
in
fsubrl
aaa
cld
add
xchg
push
jmp
sbb
icebp
adc
dec
lcall
add
or
rclb
mov
bound
aas
jp
test
add
mov
js
fcmovnbe
mov
jo
lcall
add
es
in
add
lock
push
hlt
dec
icebp
or
dec
sub
ret
mov
mov
jmp
pop
add
out
inc
daa
in
pop
or
movsb
incl
push
jmp
cmp
cmc
adc
cli
mov
xchg
cmp
icebp
pop
mov
add
mov
andl
sti
jg
mov
dec
bound
add
out
inc
insl
add
and
ss
lods
push
or
dec
testl
xor
fbstp
add
cs
xor
pusha
movsl
or
jle
pop
mov
and
dec
and
mov
sub
addb
das
mov
in
mov
adc
inc
imul
add
loopne
in
pusha
xchg
and
aaa
adc
and
outsb
jg
inc
and
push
and
ret
push
push
and
or
mov
insb
mov
add
pushl
and
xchg
add
outsb
out
add
add
scas
jecxz
and
or
lcall
inc
ret
add
pcmpeqd
ret
jno
nop
xchg
and
push
add
filds
mov
add
cmpsb
xor
inc
test
add
add
ret
not
adc
repnz
add
cmp
xchg
add
mov
imul
add
mov
loopne
arpl
stos
pop
je
cld
dec
nop
inc
mov
mov
xor
cmp
xchg
pop
xchg
add
xor
or
rorl
adc
daa
sub
jo
inc
push
dec
loopne
sub
mov
loop
shlb
adc
rclb
jg
lcall
lods
adc
dec
add
insb
ss
add
incl
mov
push
sub
mov
andb
and
pop
dec
outsl
push
aaa
bound
fidivrs
sub
lcall
xchg
aad
add
mov
ret
fcmovnb
push
sti
inc
adc
mov
and
mov
or
push
push
adc
or
xchg
cli
pop
pop
mov
insb
inc
add
push
and
jg
jg
add
je
xchg
ja
loopne
mov
insb
xchg
adc
imull
clc
fstpt
add
mov
mov
stos
jmp
jg
roll
clc
test
adc
data16
lret
out
mov
movb
maskmovq
xchg
add
xchg
xchg
mov
mov
dec
repz
aaa
std
ja
cmp
repnz
sub
insb
test
outsb
loopne
mov
inc
mov
inc
sbb
int3
es
scas
rep
ja
das
xorl
shll
in
outsl
push
hlt
call
sbb
inc
fwait
in
add
xchg
movl
hlt
jne,pn
mov
jmp
seto
mov
mov
fbld
js
lock
shlb
cld
jg
or
add
out
push
in
insb
testb
sbb
jl
nop
in
cmp
fcoml
icebp
adc
lock
lock
out
hlt
mov
mov
pusha
inc
xchg
pop
fmulp
fiadds
stos
ret
jmp
adc
sldt
andb
sub
cmp
out
fisttpl
cmpsl
mov
in
or
btr
cmp
lods
adc
test
pop
cs
push
jle
rolb
mov
incl
jp
jp
add
add
call
mov
mov
bound
mov
xchg
add
test
and
or
jp
cmc
fistps
mov
xchg
rclb
add
add
enter
cli
ficomps
xchg
out
jo
adc
mov
fiaddl
aas
outsb
and
insb
les
cmpsb
mov
and
or
scas
add
cmp
sub
sub
xor
pop
add
xchg
fldcw
mov
mov
dec
cmp
xchg
mov
lret
ss
and
les
or
dec
jmp
sub
out
xor
jmp
add
subb
mov
or
xchg
rcrl
adc
negb
adc
or
inc
push
andb
add
orl
mov
rorl
lea
dec
movsb
xchg
fmul
insb
aas
push
pop
pop
cmc
cmpsb
incl
xchg
repz
xlat
orb
insb
scas
dec
incl
xor
or
add
andb
mov
sub
in
bound
pop
lock
testb
outsb
add
call
sbb
push
test
dec
aaa
add
or
out
or
add
out
bound
mov
cmc
mov
push
divl
mov
adc
sbb
dec
sbb
add
ja
movsb
repz
pop
fsub
add
movsb
xlat
sbb
jg
lds
in
jns
repz
xor
fidivl
jle
shll
bound
or
jmp
loopne
add
pop
mov
inc
sbb
movb
in
rolb
out
push
pminub
insb
mov
push
mov
mov
shlb
cmpb
cs
cmp
clc
push
xchg
or
jp
sbbl
add
int
outsb
loope
push
je
orb
inc
clts
rorb
ret
add
push
addb
or
rcrb
ret
scas
jl
mov
add
sub
add
fidivl
sbb
iret
sarb
inc
add
pusha
divb
std
cmp
rcrb
add
sbb
mov
fildll
add
sbb
xchg
decl
add
cmp
add
or
add
mov
repz
adc
mov
dec
fmuls
inc
dec
jle
inc
dec
xlat
not
jmp
fbstp
mov
add
add
jne
xchg
std
sarb
sub
dec
mov
in
mov
std
insl
shr
andb
out
xorb
dec
insb
fidivrs
adc
mov
add
ret
out
stos
jo
scas
mov
mov
add
rol
insb
and
cmovg
and
ljmp
or
cli
stos
outsb
cmpsb
call
xor
mov
fs
sub
cmpsb
xlat
mov
imul
mov
sbb
or
add
sub
push
xlat
mov
sub
pop
test
ss
mov
subl
loope
add
pop
bound
rclb
cs
adc
xchg
pusha
mov
shlb
and
mov
inc
inc
ret
xchg
subb
testb
and
and
push
fidivrs
lods
add
fisubrl
and
inc
and
pop
in
jecxz
rcrb
shll
clc
mulb
mov
xorb
cli
out
loopne
popa
add
jbe
pusha
or
push
lcall
push
cld
mov
adc
jg
pinsrw
sbb
fidivrl
sbb
fs
jmp
inc
loope
addl
pop
sarl
sbb
in
xchg
loope
xor
and
and
inc
rorl
xorb
pop
das
inc
xchg
test
adc
call
add
test
loopne
loope
pop
add
sub
dec
out
xchg
loop
insb
push
loopne
orl
notl
cld
es
rclb
mov
loope
xchg
hlt
aaa
adc
lea
jp
cld
inc
and
js
jbe
mov
mov
test
sbb
shrb
sbb
inc
cmc
cmpsb
xchg
mov
and
xchg
add
jecxz
jo
outsl
pop
lock
repz
popa
add
loopne
jecxz
insb
loopne
pusha
fdivr
aaa
std
adc
and
or
mov
sbb
fidivrs
add
pop
pop
fcoms
incb
lea
mov
add
and
lcall
testl
sbb
mov
mov
push
fstpt
lea
cmpsl
or
and
test
inc
mov
cmp
mov
fimull
pop
subb
adcb
sub
sbb
filds
mov
test
pop
jmp
test
and
jl
sbb
xchg
add
mov
inc
mov
mov
and
out
or
xor
jmp
adc
pop
hlt
adc
jmp
incb
in
loop
sbb
addl
adc
pusha
adc
cmpl
outsl
mov
xor
fs
rorb
pop
adc
ljmp
data16
fimuls
mull
sbb
jo
mov
aam
adc
fldt
lock
jg
je
push
int
sbb
add
inc
sub
or
decl
push
add
push
loopne
repnz
inc
or
test
mov
push
pushf
inc
aam
cmpsb
pusha
adc
add
fistpll
bt
insl
jo
cmp
and
push
fisubrs
cli
mov
fldenv
addr16
mov
clc
mov
push
mov
push
addb
jecxz
mov
xor
popf
sbb
icebp
repz
cli
outsb
add
adc
mov
mov
lods
mov
sbb
mov
in
pop
or
inc
push
adcb
dec
mov
loopne
adc
out
xor
push
mov
cmpsl
cmpsl
jo
xchg
outsb
add
jo
in
mov
subl
jnp
dec
xor
xchg
fs
mov
lock
or
dec
int3
mov
and
cs
mov
sub
xor
add
jmp
call
mov
loope
into
mov
xchg
dec
aas
and
mov
mov
pusha
cmp
mov
jmp
shrb
lds
xor
scas
fisubs
pop
push
or
pop
popf
xchg
or
call
mov
shlb
mov
ja
jg
jmp
adc
sbb
and
dec
push
rolb
in
cs
addr16
pop
mov
loopne
push
in
adc
fadds
pop
fs
daa
in
rorb
xor
add
lcall
insb
addb
mov
mov
push
call
pop
and
push
lahf
jo
insb
aas
xor
and
ljmp
or
push
mov
sub
aas
call
xchg
mov
icebp
call
xchg
frstor
xchg
jecxz
arpl
push
loope
roll
or
je
loop
sbb
in
jns
mov
js
call
pop
shll
mov
jmp
xor
je
push
add
sti
mov
out
jl
mov
repnz
or
xorb
push
or
insb
add
mov
add
insb
sbb
repnz
int3
ljmp
ficoml
add
inc
xor
adc
xchg
std
pop
mov
ljmp
xchg
pop
add
call
inc
mov
or
sbbb
mov
sbb
imulb
mov
adc
add
stos
aam
inc
pop
mov
push
add
pop
or
or
test
lock
mov
nop
fwait
inc
sub
incl
xchg
pop
jecxz
inc
add
pmaxub
hlt
inc
jg
dec
adc
andl
xorl
push
movsl
ret
or
adc
lock
and
xchg
cli
lsl
or
or
rcl
sub
xor
and
adc
mov
out
push
mov
test
push
jecxz
or
adc
mov
mov
add
inc
lahf
in
ficompl
add
lcall
xor
mov
out
shlb
loope
cmp
std
fbld
cmpxchg
inc
pusha
cs
mov
scas
adc
and
scas
aam
push
fmuls
lret
and
roll
adc
shl
ljmp
push
arpl
aam
andl
push
mov
add
mov
xchg
lock
in
pop
testb
inc
mov
adc
push
insl
mov
xchg
fs
push
xor
adc
sbb
insb
loopne
sbb
add
fldt
cmp
add
inc
divb
lea
jmp
into
mov
adc
std
daa
sbb
or
inc
dec
call
and
pusha
xchg
adc
add
jo
fistl
jmp
jle
in
decl
mov
div
add
and
adc
jmp
jp
inc
add
es
rcrb
addb
mov
ucomiss
adc
std
add
or
psrld
add
mov
jno
or
mov
outsl
mov
pop
outsb
xlat
subl
pop
insl
xor
or
imul
pusha
or
pusha
adc
out
out
adc
add
jg
jno
adcb
jmp
jmp
fstl
ljmp
lods
mov
add
nop
in
insb
add
dec
jmp
push
ja
mov
insb
fdivs
cltd
icebp
loopne
adc
or
mov
adc
fisubrl
jl
lret
pop
mov
push
shll
out
imulb
ja
or
fs
push
adc
adc
jecxz
fbld
jp
or
shlb
pop
sub
sub
out
pushl
mov
mov
add
mov
outsb
movsb
sti
and
shl
movzwl
push
fbstp
push
sbb
ss
fs
sbb
mov
out
mov
roll
cmpsl
jecxz
mov
xchg
or
jecxz
xchg
add
mov
leave
push
adc
xor
adc
inc
test
sbb
and
ljmp
add
outsb
mov
loopne
mov
and
push
mov
jle
ret
imulb
mov
or
cmove
fbstp
std
outsl
lock
cmp
xor
jo
loope
jecxz
in
mov
call
add
subb
std
out
mov
pop
lods
inc
add
and
test
sub
push
jg
imul
cmp
pop
in
fwait
loop
mov
pop
and
jo
mov
and
mov
call
mov
lock
imulb
mov
jmp
push
jno
mov
leave
push
into
or
bound
test
mov
adcb
insb
mov
mov
jle
push
sub
shlb
xchg
in
mov
sbb
push
pop
cld
incl
sub
adc
sub
es
add
xchg
mov
pushw
sub
mov
fs
icebp
jl
push
ss
lock
jl
jmp
xor
cwtl
mov
inc
outsb
adc
push
mov
cmp
xchg
mov
subb
je
test
movsb
xor
fwait
cmp
xor
jbe
push
insb
add
or
and
add
jmp
wbinvd
add
in
xchg
push
cmpsb
in
mov
jae
sub
adc
xchg
clc
decl
in
notl
test
and
add
fs
rcrl
test
adc
adc
lret
add
sarb
outsb
test
int3
xchg
pop
fnsave
cwtl
les
sahf
sbb
cli
or
das
clc
adcb
mov
xchg
push
repz
and
xchg
add
loopne
dec
and
fidivrs
and
adc
cli
fists
adc
add
sbb
rcrb
inc
fisttps
orl
inc
sahf
les
cmc
cmpsl
or
pop
call
insb
sti
mul
hlt
pop
or
add
xchg
mov
adc
inc
fildll
adc
fwait
jle
xchg
stos
sub
insb
xchg
mov
hlt
or
add
pop
repz
jecxz
les
movl
ficomps
or
add
xchg
ljmp
test
data16
insb
xchg
mov
incb
and
leave
aad
ret
gs
orl
jmp
das
add
inc
lock
incl
cmp
add
or
psubusw
nop
nop
fwait
add
in
sbb
test
or
sbbb
test
cs
cs
lods
test
xchg
mov
push
mov
loope
fistl
or
pusha
inc
mov
outsb
mov
add
lock
ss
pop
adc
outsb
dec
mov
mov
call
push
mov
jmp
pop
aam
cmp
testl
mov
ljmp
sbb
icebp
jbe
push
jl
or
and
add
adc
adc
add
mov
mov
add
outsl
mov
inc
xor
addl
mov
popa
add
popa
arpl
in
outsl
das
push
inc
adcb
pmuludq
or
add
pop
add
out
sbb
call
mov
ss
cmpl
sbbl
in
cwtl
mov
loop
test
mov
jecxz
xchg
dec
push
inc
jmp
fstl
adc
jg
filds
jo
xorps
add
insb
shrb
sbb
and
add
mov
loopne
imul
movb
nop
xor
andb
or
mov
insb
loopne
mov
mov
cmp
sahf
inc
cwtl
out
faddp
pop
subb
mov
add
fisttps
inc
or
pusha
shrb
cmpsb
adcb
ucomiss
in
and
mov
shll
add
xlat
add
mov
cmp
lock
fsubl
adcb
jg
mov
mov
adc
jae
mov
sbbl
xchg
std
cmp
adc
imull
cmp
cld
sbb
pop
cltd
jmp
addl
and
sbbb
icebp
scas
jg
xchg
test
subb
insb
movsb
imul
jbe
insb
cmpsb
jb
or
or
or
adc
jecxz
inc
movsl
cld
adc
fcoms
pusha
repnz
cltd
sbb
inc
and
add
insl
cwtl
xchg
dec
push
mov
mov
adc
sub
xchg
sbb
add
mov
lcall
pusha
add
and
and
inc
inc
mov
mov
call
sbb
aas
or
aam
pushf
jmp
test
jg
cli
rcl
or
pop
or
ds
shll
and
stos
sbb
or
cs
add
sbbl
mov
push
adc
adc
xor
add
inc
and
xchg
test
and
mov
mov
ret
aad
daa
push
imul
mov
push
lahf
mov
pop
add
inc
cmp
das
mov
pop
xchg
cmpb
stos
pop
nop
xor
inc
mov
mov
inc
or
inc
aam
fdivrs
adc
or
adc
js
push
cld
in
push
das
mov
pop
mov
out
add
cmp
in
pop
inc
sbb
and
xchg
clc
lea
mov
push
push
rcrl
shrb
outsl
mov
lret
rolb
lock
fcomps
push
pusha
push
loope
aam
fs
jecxz
lcall
loop
into
sti
push
mov
push
inc
pop
outsb
inc
pop
inc
dec
jecxz
out
sub
cli
out
and
cmp
ljmp
cmp
std
fwait
test
push
out
loope
addr16
lcall
xor
cmpsb
ja
arpl
pop
sub
mov
inc
sbb
push
add
sbb
adc
mov
insb
and
mov
mov
adc
mov
push
mov
sbb
cmc
xchg
xchg
add
cs
out
aam
sub
fcmovnb
or
sbb
xchg
and
cmp
cmp
es
push
fisubs
subb
dec
pushf
mov
stos
adc
xchg
or
rorb
das
outsb
sar
loopne
jbe
mov
dec
and
sbb
push
rolb
mov
fistpll
push
lcall
or
push
add
popa
test
pop
mov
fists
inc
outsl
xor
inc
and
adc
xchg
loopne
lcall
pop
mov
sbb
sub
out
scas
mov
lods
and
mov
sarl
decb
jo
jg
insb
cwtl
dec
fidivrs
sbb
outsb
cltd
xorb
adc
adc
mov
fadd
sbb
insl
and
out
mov
icebp
unpcklps
mov
test
in
cmp
sarb
movsb
or
rcrl
hlt
pop
shl
add
loope
adc
adc
shll
cli
adc
ret
xor
add
nop
mov
ret
shrl
movsb
mov
mov
nop
stos
gs
mov
sub
jo
inc
incb
movnti
cmp
push
ret
shll
add
add
jne
lock
rclb
filds
inc
add
and
loopne
out
sub
dec
fwait
sbb
outsl
sbb
stos
add
ljmp
scas
push
test
push
int3
andl
or
sbb
les
mov
sti
and
add
sub
popl
pop
and
int
cmpsb
or
mov
or
and
or
mov
paddq
or
aas
mov
insb
stos
pusha
sti
fsubrl
subl
mov
call
xchg
pop
and
dec
inc
and
aaa
xor
incb
push
out
mov
incb
cwtl
loop
scas
jecxz
negl
test
push
jg
mov
push
xchg
xchg
cmp
adc
popa
ds
mov
push
mov
sbb
repnz
lds
mov
sarl
adc
fisubs
imul
add
and
and
scas
pushl
nop
fwait
test
mov
aas
rolb
outsb
inc
scas
push
jl
xchg
jecxz
xor
add
or
insb
hlt
scas
pop
sbb
pusha
or
add
adcb
add
push
test
inc
jno
push
cmc
aaa
jge
or
push
add
mov
xchg
jae
add
jg
fisubrs
or
xchg
inc
mov
add
xchg
pop
xchg
loopne
push
in
or
jmp
jmp
mov
arpl
sub
add
ss
sbb
ret
incl
add
and
cltd
iret
push
ret
push
xor
ljmp
ret
dec
push
xchg
pop
or
pusha
cmpl
in
push
fdiv
inc
adc
mov
mov
add
and
fwait
cmc
sbb
sbb
repnz
ljmp
cli
pusha
cmovg
mov
mov
mov
sub
inc
add
movsb
cmpsl
sbb
jg
outsl
adc
xchg
sub
and
sahf
nop
jo
pop
addb
pop
je
testb
mov
das
sar
jg
dec
sub
xor
and
add
stos
and
and
aaa
adc
aaa
cmp
add
add
sub
mov
incl
lcall
push
jo
or
add
pusha
sbb
cmpsl
push
and
push
add
adc
pop
fcomip
rorb
andb
loope
inc
fdivl
push
jmp
test
sub
mov
mov
ss
pop
sub
xor
dec
xor
fbld
jb
or
popf
inc
add
rcrb
lds
pop
inc
cmp
aad
pop
pop
movl
mov
hlt
adc
out
mov
cs
cmpl
scas
push
sahf
add
stos
sub
stos
push
insb
mov
aaa
sarb
sub
pop
mov
addb
adc
sbb
pop
jl
push
xor
add
sbb
xchg
ljmp
cli
or
bound
rolb
add
mov
or
inc
mov
nop
sbb
xchg
add
jg
ljmpw
sbb
aas
sbb
nop
icebp
jg
loopne
mov
pop
loope
ja
adc
ljmp
push
cmpl
sbbl
rcll
call
mov
pop
inc
scas
loopne
mov
push
push
add
je
mulb
loop
loopne
fs
and
fcomip
loop
add
addb
push
mov
jmp
sbb
out
or
mov
bound
adc
aam
mov
xchg
sarl
push
add
and
add
cmp
loopne
bound
mov
sub
jecxz
es
xor
mov
pop
xchg
rolb
add
mov
arpl
mov
fs
shlb
decl
hlt
fs
aaa
sbb
das
ret
in
or
and
bound
add
scas
scas
mov
xchg
jecxz
sarl
add
push
or
adc
aad
jge
xchg
add
in
and
movsb
ljmp
fisubrs
aad
and
mov
loop
xchg
loope
fbstp
mov
daa
xor
and
jo,pn
loopne
xor
and
jecxz
pop
sub
push
xorb
stos
mov
outsb
mov
jno
cmp
lret
cmp
std
fdivrp
push
inc
dec
repnz
push
or
nop
jo
repz
mov
call
jo
loope
jmp
rorb
lcall
outsl
adc
mov
adc
movsl
adc
pusha
xlat
or
arpl
mov
inc
pop
daa
push
in
lock
aam
push
lock
aaa
stos
inc
adc
sti
inc
add
add
imul
adc
jmp
adc
mov
fs
test
push
outsl
lret
mov
mov
sub
mov
adc
scas
fbstp
jne
fsubp
adc
or
mov
and
call
es
inc
or
data16
enter
sub
es
adc
push
mov
push
push
lea
pushl
and
jle
and
mov
into
aam
in
mov
loop
mov
lock
call
cmpsb
ljmp
push
sub
xchg
ljmp
adc
test
or
imul
stos
mov
mov
add
mov
sbb
jg
shl
aaa
shl
testl
fcomip
repz
ficoms
xchg
cmc
add
mov
mov
daa
inc
cmp
adc
adc
mov
mov
shlb
cwtl
in
mov
js
mov
jecxz
mov
outsl
push
or
adc
adc
add
push
and
scas
ss
or
inc
xchg
pushl
adc
add
pop
mov
mov
sbb
das
hlt
adc
xor
dec
add
sub
xor
cli
mov
subl
add
xor
mov
subl
out
test
add
nop
add
roll
psubq
add
fidivrl
jo
shl
pop
fisubl
or
pop
xor
and
fnsave
inc
adc
test
clc
and
cltd
mov
or
mov
es
add
rcr
insb
outsb
mov
repz
pop
add
fs
pop
ret
ss
xchg
je,pn
add
cmp
dec
lods
add
mov
dec
js
jo
int
fmuls
jp
push
nop
loope
jno
xor
scas
nop
adc
push
test
in
jo
push
mov
in
cmp
fstpt
add
or
or
or
or
dec
adc
sub
xchg
adc
inc
rolb
and
lret
mov
adc
mov
cmp
pop
cld
xor
add
bound
pop
or
xchg
xchg
mov
testb
fcmovbe
loop
lods
les
sub
xor
cmpsb
movntps
fidivl
aam
sub
adc
out
add
mov
sbb
add
sbb
add
add
or
cli
aas
or
xchg
cmp
cwtl
cmp
test
sub
test
cmp
cmpb
std
mov
ret
xchg
cld
mov
add
adc
add
or
fwait
mov
push
sub
or
cmpb
xchg
ret
addb
addb
sbb
add
cwtl
jo
pop
sbb
jmp
cmc
stos
xor
push
out
or
nop
fisubs
jb
outsb
add
add
ds
rclb
pop
fs
add
mov
imul
adc
loope
pop
adc
and
sub
lcall
cli
test
dec
rclb
inc
fadds
fiaddl
xchg
or
rcrw
sbbb
or
cmpb
xor
push
adc
add
or
and
lcall
adc
cmp
xorb
aam
das
fcomp
fimuls
mov
sub
and
or
fmull
fadd
adc
int3
pop
push
imull
xchg
jo
fcom
rclb
test
mov
cmpsl
add
test
or
mov
cmpsl
xchg
adc
ds
sub
mov
movsb
jge
lods
call
pop
inc
push
xor
mov
xchg
pop
sbbl
clc
mov
pop
outsl
cli
inc
rolb
jmp
or
dec
sbb
add
push
adc
mov
cmp
rorb
sbb
add
sbb
and
pop
and
ret
mov
add
fcomip
aaa
push
stos
mov
aam
push
jb
filds
dec
movl
cmp
add
testb
adc
loop
out
and
push
or
loope
and
sub
hlt
lahf
insb
ret
dec
enter
js
push
inc
stos
xorb
scas
mov
out
add
add
mov
movsb
sbb
fiaddl
rcrl
out
andb
jp
setnp
fildl
ret
pop
jbe
out
rolb
mov
mov
dec
js
mov
cmp
in
add
movq
add
sbb
scas
add
sbb
imul
lock
in
bound
faddl
dec
lret
fs
in
add
mov
ljmp
add
addr16
out
sbb
or
ret
fwait
mov
xchg
add
add
fisubl
fwait
shll
cltd
adc
out
les
pushw
loopne
sahf
pushl
rol
cltd
sti
adc
loopne
cwtl
repz
rorb
sarl
sub
jl
into
jmp
pusha
cmpsl
or
popa
and
cmp
push
push
loopne
jp
les
jb
popa
add
cltd
fsubrp
in
mov
mov
ret
test
sti
add
mov
movl
sbbb
xchg
ljmp
and
ffree
or
or
push
addb
cmpsb
mov
mov
or
pusha
es
jle
negb
jbe
outsl
pop
adc
pop
flds
sub
jp
sub
or
aas
pusha
jge
pop
fmull
xchg
ds
sub
mov
rol
rorb
into
dec
aaa
inc
adc
dec
cmpsb
orb
inc
clc
or
ds
fs
loopne
mov
inc
out
in
test
gs
sub
pop
insl
pop
mov
push
ljmp
fisubrl
inc
and
hlt
cmp
loopne
mov
cmc
add
pop
mulb
inc
call
arpl
and
inc
loopne
mov
jp
out
pusha
pop
popa
inc
adc
pusha
add
jg
icebp
and
loope
mov
mov
loopne
daa
test
addb
arpl
jecxz
cs
fs
mov
sbb
shrb
data16
add
xor
sti
jmp
xchg
add
addb
mov
out
rclb
fiadds
cmp
xor
outsl
mov
add
pop
mov
inc
or
enter
out
call
mov
cli
sbb
out
in
sub
jmp
push
xor
adc
and
es
sbb
sbb
movb
ss
je
rolb
loope
das
cmpb
push
xorps
incl
bound
and
prefetch
add
mov
inc
add
cmpsl
rclb
jmp
addr16
pop
in
bound
xorb
add
js
or
sub
sub
adc
push
test
mov
outsl
mov
sbb
xchg
sbb
jmp
sbb
lea
pushf
loopne
jg
xchg
and
inc
jne
mov
inc
insb
aas
inc
mov
hlt
add
mov
cmp
dec
in
pop
cld
jg
loopne
bound
ficoms
inc
add
sub
lcall
and
mov
movsl
fimuls
add
xchg
out
mov
mov
xlat
mov
shlb
sbb
sbb
lods
add
add
push
sbb
adc
jb
mov
ja
sub
push
sahf
rcll
pop
call
sbb
add
push
sbb
ja
das
data16
icebp
mov
push
mov
inc
test
fstpt
lcall
cmp
add
inc
and
cmpsl
add
dec
and
std
rorl
push
mov
cld
outsl
mov
es
or
bound
loope
subb
sub
sbb
not
and
adc
push
sbb
jecxz
ss
and
mov
pop
mov
mov
xor
stos
adc
sub
out
sbb
adc
add
rclb
and
insl
sti
pop
test
push
sbb
adc
dec
xchg
xor
in
mov
cs
stos
lcall
xor
repz
cmpsl
andb
sub
cltd
shl
pushf
out
xor
jne
mov
push
mov
loope
imul
add
out
inc
pop
out
in
push
subb
add
or
test
jmp
pushf
lcall
push
adc
xchg
out
and
pop
mov
sbb
outsl
add
pop
xlat
jp
fcomip
or
mov
sub
ret
xlat
ja
sbb
imul
add
sub
and
add
or
iret
xor
arpl
sti
outsb
xorb
incl
sbb
aam
sub
mov
cmp
lock
gs
pusha
test
cwtl
sbb
bndldx
or
adc
push
decl
adc
call
stos
call
fdivl
xchg
movsb
rolb
fcompl
stc
sbb
sbb
jecxz
lds
sbb
xchg
mov
notb
nop
and
pop
pcmpeqd
ficomps
clc
call
stos
lock
add
xlat
fbstp
mov
mov
add
mov
mov
andb
out
les
sub
sub
cmc
or
mov
push
lods
dec
xchg
cmpsl
icebp
mov
rol
out
insb
scas
jecxz
outsb
rorl
pop
insl
fists
push
outsl
mov
pop
mov
mov
stos
dec
outsb
add
lret
test
and
add
pop
inc
montmul
cmpsb
add
push
repz
mov
inc
jae
sbb
or
popl
add
jno,pt
lcall
and
push
push
popa
add
lret
rol
out
mov
fcoml
xchg
cld
mov
mov
inc
addb
mov
fwait
push
fnsave
stos
push
das
sub
stos
mov
add
dec
movsb
mov
and
or
loop
inc
in
loope
pop
gs
mov
xchg
xor
call
outsb
or
ficomps
aas
sub
cli
inc
add
outsl
inc
jbe
fmuls
sbb
and
mov
adc
in
insl
rcll
or
mov
movsb
cmc
and
mov
rorl
loopne
and
fadds
lcall
cmp
mov
fisubs
call
loopne
fidivl
call
inc
test
push
arpl
stos
shlb
sbb
xlat
call
in
gs
mov
pop
and
push
call
pop
movlhps
xor
pop
ret
sub
pop
inc
es
nop
mov
adc
fildll
enter
add
sbb
std
scas
and
loopne
aad
jo
loopne
pop
pushl
adc
or
icebp
add
push
insb
xchg
fwait
add
les
outsl
mov
or
pop
popa
push
cmp
cltd
add
jne
sti
xchg
outsl
pushf
je
pop
dec
jl
xchg
add
dec
inc
arpl
or
push
lods
mov
or
ds
inc
sti
pop
call
add
pusha
pop
insb
push
mov
mov
bound
nop
test
es
call
add
mov
call
daa
xor
sub
daa
nop
dec
daa
jno
mov
cld
pop
loopne
xchg
stc
sub
icebp
add
outsb
clc
pop
push
push
sbb
int3
jo
loopne
lods
xchg
push
call
fwait
jle
icebp
filds
jle
push
add
mov
fwait
xor
inc
and
or
and
lret
mov
mov
repnz
push
jo
pusha
add
lock
inc
add
dec
out
dec
shlb
pop
mov
call
mov
sub
push
mov
lock
mov
ljmp
shrb
inc
jmp
lock
push
and
xchg
into
mov
and
push
push
ficoml
sub
pop
mov
pop
xchg
add
xchg
das
sbbb
in
cmpsb
cmp
add
and
out
lea
add
mov
cs
inc
mov
add
andps
sub
js
pop
sarl
mov
rorb
fbstp
adc
sti
sar
fcomip
decl
pop
arpl
sbb
and
sbb
and
pusha
push
adc
lcall
mov
lret
cmpsl
paddsw
add
mov
popa
cmp
push
pop
rolb
mov
movaps
mov
pop
add
xchg
push
fcoml
adc
mov
fwait
jp
nop
nop
add
jp
fsubrp
push
fcos
cltd
sub
call
jmp
pop
bound
ret
xor
or
es
add
aad
lcall
add
adc
cmc
loopnew
cmc
xchg
or
mov
sar
mov
add
fmull
mov
adc
sahf
icebp
cmovnp
inc
sbb
add
xchg
pop
or
ljmp
jecxz
or
xchg
loopne
fildll
clc
repz
add
mov
ret
add
push
adc
push
sbb
jo
mov
orb
sbb
insb
push
shll
outsb
add
cmp
in
filds
mov
movsb
hlt
cld
testb
push
or
aad
rorb
adc
fcomi
adc
add
fisubl
dec
incb
in
mov
ror
dec
and
icebp
int
sbb
rolb
pop
adc
pop
divb
sbb
adc
mov
int
push
cld
pop
sbb
mov
mov
cmp
sub
adc
inc
mov
mov
push
ret
or
mov
add
dec
cmp
and
add
jo
loope
pop
test
aam
insb
lds
test
sahf
add
and
out
inc
test
sahf
mov
test
push
out
push
mov
enter
inc
test
sub
test
int
int3
or
push
pop
fmulp
sbb
popf
test
push
hlt
add
add
cmpb
xchg
pop
add
add
aaa
ret
ljmp
or
jp
test
jmp
shlb
outsl
xchg
jecxz
pop
int3
decb
fdivp
mov
xchg
lahf
push
lock
mov
mov
jg
inc
or
add
add
clc
mov
sbb
mov
xor
sbb
mov
cmp
inc
in
add
adcb
insl
cmpb
jbe
mov
xorb
sub
loopne
sbb
pushf
xchg
fstl
pop
xor
cmpsb
or
mov
sbbb
xchg
cli
or
pop
xchg
cmp
or
les
and
push
cli
sbb
fs
xchg
loop
cltd
xchg
in
push
xchg
mov
jl
nop
jecxz
adcl
loopne
cmpb
add
out
or
push
sahf
outsb
mov
pop
adc
bound
adcb
xchg
out
loop
pop
scas
sbb
sub
daa
std
mov
xchg
bound
adcl
mov
adc
ficomps
aad
call
fldt
roll
daa
fstpt
xchg
or
cmpb
ja
sbb
or
clc
cmc
lods
mov
or
inc
repz
dec
movb
and
out
adc
add
adc
lock
les
mov
pop
addb
and
jecxz
pop
lock
pop
andl
das
push
lds
fdivp
aam
fildll
add
andl
push
xor
inc
add
icebp
and
inc
gs
in
mov
and
lcall
xchg
cmpsb
inc
sub
mov
daa
addl
cmp
pop
loopne
adc
sub
add
les
push
scas
push
mov
inc
outsl
out
inc
scas
xor
bound
in
add
and
xchg
stos
in
adc
pushl
jmp
mov
ret
aam
addb
jecxz
and
decb
mov
idivb
cs
lret
fdivrl
cltd
iret
fs
in
cltd
sti
or
push
call
notb
repz
shrl
inc
pop
and
aaa
into
push
incb
sbb
lcall
rep
dec
into
xchg
test
jp
xchg
adc
add
push
insb
jecxz
cld
test
pop
in
push
add
pusha
xchg
cmp
push
fdivr
fisubl
adcl
into
lcall
mov
mov
fs
add
or
pusha
nop
inc
ss
jmp
fcomps
fs
adcb
mov
pop
shrb
outsb
ss
jle
push
cmpsl
sbbb
push
pop
inc
adc
mov
add
fisubl
push
and
in
push
je
insl
loope
scas
push
or
out
and
ret
sbb
push
or
xchg
in
inc
ret
add
jmp
and
andl
add
loop
xor
adc
mov
jecxz
rolb
and
shrb
push
or
pop
pop
imulb
push
rorb
cmp
add
add
and
mov
pop
mov
bound
loope
add
add
adc
ja
mov
cmpb
pushf
adc
out
add
xchg
mov
pushl
movsb
sub
fucomi
nop
mov
call
std
subl
in
add
and
leave
ret
push
in
add
mov
nop
adc
cwtl
movl
pop
sub
in
in
andl
fsubl
dec
lcall
xchg
add
push
jle
add
in
call
popa
or
pop
call
or
mov
fistl
push
pusha
cmp
push
or
orl
mov
repz
or
js
sbb
mov
add
repz
push
push
cmpsb
loopne
and
xchg
roll
addb
sbb
inc
mov
pusha
adc
frstor
lods
and
adc
push
iret
mov
fwait
mov
add
add
cmc
adc
cmovo
arpl
mov
ljmp
push
sub
cmpsb
call
mov
jge
call
addb
shlb
pusha
call
mov
push
and
loopne
mov
ret
test
inc
lahf
psrld
jle
lock
inc
push
push
in
push
jg
add
out
mov
add
out
popa
or
push
xchg
or
data16
jbe
xchg
add
ljmp
ret
ret
or
inc
push
scas
inc
add
loopne
outsb
repnz
or
push
leave
adc
add
sti
outsb
arpl
mov
pop
insl
sub
pop
adc
inc
xchg
test
insb
inc
xchg
in
into
sub
mov
sbb
inc
outsb
add
addb
loop
mov
xchg
incb
js
lods
loope
jl
cmc
xor
outsl
adc
push
inc
sbb
inc
in
sub
jmp
sbb
fwait
mov
nop
stos
xchg
pushf
mov
or
mov
xchg
fsubrl
xchg
xchg
or
shl
or
imul
sbb
xchg
out
jno
add
push
das
or
inc
pop
or
pop
push
loopne,pt
hlt
push
dec
push
bound
fwait
mov
outsl
lcall
cmpsb
xor
insb
and
outsl
outsl
in
testl
add
repz
in
inc
rorb
cmp
xchg
loope
repz
add
and
adc
divb
or
and
stos
mov
xchg
stc
push
add
fistl
jmp
sub
test
icebp
or
sbb
mov
sbb
and
jmp
sarb
jo
mov
add
lock
icebp
dec
mov
xorb
arpl
add
call
loopne
sbb
adc
data16
addr16
sbb
es
ljmp
cmpsb
test
mov
repz
adc
fildl
jecxz
fistpl
add
repnz
mov
lock
fisubrl
shlb
out
sbb
push
or
ds
jmp
in
je
icebp
xor
jmp
add
es
and
push
adc
rolb
cmp
test
add
lock
mov
lret
adc
enter
jmp
fisttps
or
mov
stc
add
mov
lds
xchg
pop
add
sub
push
add
addl
and
pop
scas
into
stos
cmp
sub
ds
stos
rclb
xchg
rol
add
clc
add
roll
fcomps
aad
lea
std
out
loope
mov
push
out
add
jg
sarl
sbb
push
mov
cs
incl
add
inc
dec
roll
jno
add
test
inc
push
add
xchg
mov
addb
arpl
push
dec
imul
sub
stc
push
xchg
movsl
add
movsb
add
imul
adc
ljmp
rolb
and
imul
pop
lret
loopne
mov
in
lcall
xor
lock
add
push
sbb
mov
sbb
xor
cmp
mov
mov
xor
or
push
sbb
push
xor
mov
lods
bound
pop
push
jo
cwtl
fsubrl
in
notb
jl
xchg
add
cwtl
aam
xchg
add
cltd
push
jl
mov
data16
fwait
add
stos
nop
and
jecxz
rclb
hlt
jmp
and
add
ffreep
or
sbb
lret
add
jbe
adc
lods
ret
clc
inc
insl
scas
shlb
cld
subb
push
fs
loop
xor
sbb
nop
adc
je
bswap
lods
xchg
fbld
shll
xor
adc
push
cmp
jns
fisttpl
adc
hlt
mov
pop
scas
ret
mov
insl
outsb
popa
mov
adc
ljmp
lods
pusha
in
loopne
or
push
sbb
jb
and
outsl
cli
ljmp
pop
push
mov
in
xchg
jmp
cwtl
inc
jmp
mov
adc
fmull
ja
xor
rol
push
xchg
les
fwait
call
lods
xor
icebp
adc
xchg
add
cs
or
mov
fisubs
inc
nop
jl
xchg
in
add
jne
pop
insl
ja
cmp
loop
icebp
add
fisttpl
push
sbb
adc
xor
js
or
jle
ljmp
in
mov
notl
add
add
lock
inc
sub
sbb
loopne
jae
sar
pop
jmp
jb
add
mov
cmp
nop
sub
inc
xchg
ljmp
add
add
mov
int
or
xor
in
mov
std
mov
aas
fsubs
fs
pop
test
pop
mov
xor
mov
loope
ss
pop
xor
lcall
arpl
push
pop
jo
mov
jo
adc
sbb
add
xchg
inc
xchg
repz
in
pop
mov
int3
sub
daa
adc
adc
add
test
std
test
int
sbb
and
sbbb
out
lret
test
add
sub
sbb
sub
xor
and
decl
or
push
loope
and
mov
clc
ljmp
pusha
adc
int3
push
pop
adc
inc
mov
stos
add
mov
xor
fs
rorb
hlt
inc
pusha
add
jge
add
jmp
or
dec
push
les
pop
icebp
pushl
addl
jmp
or
xchg
rolb
mov
add
mov
add
cmpsl
push
test
mov
shr
mov
incb
sbb
push
mov
out
rol
ljmp
outsb
mov
shlb
pop
mov
hlt
filds
ret
add
adc
mov
inc
push
or
add
insl
sub
cs
clts
mov
insb
mov
xor
test
add
pop
cld
insb
in
or
dec
and
sbbb
adc
adc
adc
call
dec
pop
cmpb
outsl
pop
and
hlt
pop
xchg
inc
test
push
orb
test
divb
pushf
adc
add
add
pop
add
or
lods
lock
mov
in
add
addl
call
dec
inc
lea
pop
jg
pop
mov
add
cmpb
push
and
cmp
adc
jle
addl
inc
push
fs
shlb
sub
pop
and
xchg
inc
fucomi
xchg
mov
addb
in
xor
inc
orb
add
sbbl
jmp
ljmp
jl
xchg
lcall
imul
adcb
int3
adcl
ret
mov
int
sub
cmp
mov
sub
adc
insl
notl
cmpb
movsl
nop
jecxz
imul
data16
or
lcall
xor
cs
adc
xchg
mov
ret
mov
mov
rclb
addb
adc
testb
ret
movl
scas
les
or
add
or
rcr
dec
sbb
push
adc
add
rorb
or
jecxz
test
and
dec
call
adc
and
sub
bound
je
xchg
roll
and
jmp
into
push
inc
mov
insl
add
ret
in
out
add
daa
push
adc
daa
test
lcall
sbb
ljmp
dec
lret
add
xchg
loope
xchg
jmp
call
mov
fisubl
mov
xor
rorb
xchg
jne
sub
mov
add
mov
jmp
ds
aas
jbe
shlb
insl
clc
pop
adc
mov
add
rclb
and
mulb
fcmovnb
pop
inc
and
lods
cmpb
add
stos
cmc
or
rcll
int3
ret
bound
add
jle
ss
jmp
jecxz
xchg
loope
dec
std
push
negb
push
push
imul
mov
out
mov
cmp
add
andb
xchg
sarb
mov
add
mov
repnz
test
add
pushf
aas
or
shr
xor
rorb
sbb
xor
nop
pop
sbb
and
aaa
push
sti
add
les
jle
pusha
shlb
xchg
lods
lods
ret
mov
push
add
inc
sbb
inc
sbb
test
push
test
jbe
pop
shlb
scas
iret
sbb
push
andl
leave
pop
test
shl
sarl
xlat
and
repz
js
cli
call
jle
xchg
out
push
subl
enter
add
mov
aaa
cli
call
jecxz
decb
jle
push
andb
mov
cmp
inc
lea
and
or
call
or
nop
add
jns
dec
inc
inc
or
pop
inc
cmp
and
loope
faddp
push
lcall
add
rclb
sbb
das
fwait
loop
cmp
stc
fwait
and
or
pushl
inc
aas
xchg
jmp
push
xchg
out
test
aam
or
and
sub
push
mov
incl
adc
movsb
sbb
dec
lret
mov
push
lret
adc
and
fs
xchg
and
icebp
decl
and
and
cmp
inc
inc
arpl
loopne
and
push
and
xchg
jg
outsl
lods
movl
xor
add
sub
jns
loope
mov
insl
mov
loopne
mov
in
or
in
and
sbbb
leave
and
and
call
dec
imul
push
push
mov
inc
pop
mov
out
sub
push
out
stos
or
add
cmpsl
adc
push
and
mov
and
push
outsb
out
into
push
push
push
fdivrs
ret
sti
push
lret
mov
push
push
xor
lahf
orl
inc
jl
xor
ret
outsb
pop
push
fbstp
or
mov
push
mov
imul
into
and
stos
fsub
add
dec
loopne
sub
addb
lcall
xchg
jg
mov
subl
lahf
inc
xchg
add
dec
or
jmp
add
sub
or
pusha
and
push
dec
cwtl
in
cmp
mov
aad
and
in
es
in
and
idivb
icebp
mov
add
push
cmc
in
mov
aam
xor
or
mov
outsl
out
clc
or
and
xor
inc
hlt
push
sbb
scas
jecxz
std
sub
add
pop
aad
add
jb
pop
mov
adc
inc
imul
mov
inc
stos
sub
dec
lea
sub
xchg
push
mov
cmpsb
sub
outsb
mov
push
cmpsl
sub
stos
pop
les
mov
mov
les
sarb
pop
dec
pop
shl
add
adc
pop
repnz
add
dec
loop
loopne
xchg
int
sbb
arpl
imul
mov
dec
out
out
fisubrs
cwtl
or
or
add
push
fs
mov
add
test
mov
or
mull
add
stos
jmp
out
mov
jecxz
dec
arpl
and
es
pushl
add
ss
add
push
loopne
add
add
xor
push
loopne
loope
insb
adc
sarl
add
rcl
push
or
loopne
in
popw
adc
sti
mov
insb
aas
mov
loop
in
mov
pop
push
fs
sub
and
or
adc
inc
sub
cwtl
iret
sub
lods
aas
push
lret
or
inc
push
pop
arpl
or
dec
ret
es
adcb
or
popf
cli
adc
xchg
and
or
add
hlt
lods
jg
jmp
jmp
sub
insb
xchg
sti
fcoml
xchg
sub
push
subl
fsubrl
es
and
mov
lcall
std
push
lock
bound
idivb
pop
sbb
mov
lock
sbb
push
cs
sbb
xchg
bswap
shld
test
movq
pusha
dec
aas
sub
orb
dec
pop
jno
cmpsl
xchg
faddl
push
adc
shrb
mov
sbbb
nop
xchg
mov
cmp
push
push
jle
subb
ficoms
xorl
lods
mov
arpl
mov
xor
or
stos
fwait
outsb
stos
mov
idivb
jne
xor
addl
and
sbb
in
xchg
lcall
lcall
push
jno
push
mov
inc
rcrl
xchg
ficompl
mov
mov
or
xchg
inc
movsb
rcrb
inc
cld
push
adc
sub
jno
outsb
jp
pop
and
xor
imul
fisubrs
xor
cmp
mov
adc
sbb
cs
mov
and
inc
out
push
push
std
ja
cmpsl
xchg
sahf
mov
pop
adc
adc
add
es
je
cld
fnstsw
push
sub
loope
psrlw
and
sbb
es
in
or
xor
jne
push
mov
add
mov
push
sahf
add
nop
sub
adc
pop
gs
mov
adc
add
fwait
or
aaa
adc
push
add
pminub
push
push
add
xor
ljmp
add
insb
jecxz
or
adc
or
xor
jmp
push
ss
cmpsl
or
int
adc
add
ret
addr16
sub
cli
jmp
mov
das
divl
pusha
sbb
mov
cs
sbbb
or
xor
das
push
pop
je
fnstcw
mov
xor
mov
pop
mov
clc
add
sbb
xor
push
adc
mov
inc
clc
psllw
aas
push
fdivrl
xchg
lahf
insb
in
mov
ja
mov
or
inc
rcrb
lea
add
push
add
xchg
add
jp
js
popl
mov
fidivrl
xor
inc
or
add
pavgb
inc
sub
mov
nop
sub
or
mov
mov
add
cmpsl
push
add
xor
ja
clc
inc
inc
sub
jecxz
movl
test
adc
xchg
jl
cmp
or
mov
add
movl
and
cs
mov
pop
popa
push
loopne,pt
das
mov
mov
nop
or
clc
stos
or
dec
inc
dec
addl
js
shrb
pop
rcr
push
aaa
adc
pop
mov
or
add
or
jo
aaa
adc
jo
cs
enter
adc
in
sub
mov
or
movsl
fnsetpm(287
and
sbb
stos
out
cmpsl
loope
adcl
insl
in
mov
insb
xchg
mov
std
outsl
decl
inc
xchg
mov
cmc
or
jb
add
sbb
and
push
and
insb
orb
sub
jg
push
stos
aas
scas
int3
testl
push
push
pop
insb
jbe
jb
shlb
outsl
scas
adc
insb
jnp
inc
or
mov
push
mov
jmp
cmpb
push
out
pop
add
and
mov
in
ror
adc
movb
add
incl
mov
mov
sbb
add
push
mov
cmp
fs
lcall
xlat
jg
xchg
shll
mov
andl
adc
hlt
and
fdivl
aaa
nop
jmp
outsb
into
add
insb
fucom
sbb
add
mov
or
in
mov
or
imul
std
push
or
pop
lea
inc
mov
inc
nop
adc
cli
pop
add
push
push
mov
sbb
mov
aad
insb
fwait
xlat
mov
mov
mov
mov
adc
ret
jo
cmp
or
or
and
mov
in
mov
cmp
sub
mov
mov
pop
cmp
std
mov
cmp
xor
pop
bound
arpl
inc
paddw
dec
or
out
pmaxsw
nop
add
jmp
scas
xchg
adcb
add
add
push
outsl
mov
sbb
test
daa
xor
loope
push
rclb
mov
sbb
or
add
inc
inc
xchg
repz
add
in
dec
aas
fnstenv
mov
sarl
orb
or
orb
mov
test
cmp
aam
mov
call
mov
loopne
xchg
or
loop
add
xor
stos
and
sbb
pop
inc
push
addl
pushf
aam
xor
jmp
clc
aaa
mov
iret
adc
rclb
xchg
das
mov
jmp
rorl
xor
mov
adc
adc
lds
cmpsb
jae
jno
fdivl
mov
lret
lock
mov
inc
or
adc
mov
jl
add
ror
clc
es
cmp
fdivrp
xchg
call
pushw
out
mov
or
mov
into
push
cmp
fisubrl
cld
or
or
insl
sub
push
stos
add
adc
mov
mov
js
aam
je
cwtl
hlt
jp
in
outsb
mov
shrb
mull
cmpsb
fcoml
xchg
sub
int
sub
pusha
clc
add
and
faddl
mov
mov
loope
cmpsl
mov
mov
pop
lock
das
les
outsb
mov
ret
dec
add
xor
in
sbb
pop
mov
mov
add
push
outsb
fwait
test
xlat
pop
jg
or
add
add
xchg
xchg
jge
ficomps
fs
xchg
loopne
xchg
mov
aaa
xor
outsb
add
in
ljmp
dec
sti
fs
adc
cli
adc
nop
lods
xchg
aam
xchg
mov
data16
ficoms
push
call
xorl
jl
shll
daa
xchg
inc
pop
mov
mov
push
xchg
decb
mov
fildl
push
push
loope
lcall
sbbb
das
in
adc
orb
test
bound
push
pusha
loopne
pop
nop
call
sub
jl
loope
mov
cwtl
and
adc
or
bound
cmp
mov
mov
pusha
sub
jns
sub
loopne
add
outsb
inc
fmuls
push
mov
mov
mov
mov
je
and
aaa
std
sub
inc
add
cmp
pop
jno
mov
xorb
icebp
or
call
mov
add
dec
sbb
or
lret
or
pop
rolb
outsb
mov
push
push
and
add
push
jmp
add
and
out
jg
aad
sarb
cmovo
ljmp
add
cmp
or
mov
and
or
aad
sarb
les
js
add
cmp
xchg
pop
pushl
cli
pushl
mov
scas
inc
fsubp
jmp
xchg
dec
inc
xor
insb
inc
mov
cmp
neg
addl
jno
add
xchg
jecxz
and
fstp
fs
lea
add
sbb
and
mov
sub
and
shll
add
lcall
pushl
pop
aas
bound
xchg
mov
rclb
int3
dec
sbbb
faddl
add
inc
nop
xor
push
adc
dec
sbb
sbb
outsb
add
dec
add
outsb
fs
popl
push
push
cmp
jecxz
add
out
push
std
incl
in
dec
ret
subb
sub
shlb
adc
jo
scas
cwtl
loop
pop
movsb
pop
jmp
add
or
fcomip
jg
xor
mov
dec
xor
lret
les
inc
xchg
mov
fdivr
or
or
adc
lds
in
inc
out
add
mov
dec
sbb
jo
scas
sbb
mov
jg
into
shl
ss
xchg
repz
mov
jg
adc
mov
stos
add
xchg
mov
push
loopne
push
or
addr16
push
mov
pop
out
out
ss
xchg
cmp
add
sbb
call
add
fsubl
adc
sub
or
in
mov
mov
mov
mov
pop
loopne
out
and
sbb
add
int3
shrb
push
inc
sub
mov
xchg
jecxz
arpl
adc
incl
subb
inc
ret
mov
add
add
jmp
add
pop
push
sbb
or
or
mov
mov
pop
adc
mov
adc
or
adc
test
jbe
inc
lock
incl
outsl
scas
mov
adc
add
nop
push
cld
call
btc
loopne
pop
inc
cltd
sti
fcompl
or
mulb
loope
push
mov
or
rolb
pusha
mov
cs
or
cmp
mov
frstor
push
fucom
adc
dec
inc
pop
mov
ret
insl
loopne
cmp
in
andl
roll
inc
les
loope
add
or
fists
in
cmp
fmul
loope
cli
fwait
push
and
repnz
jnp
add
or
add
and
lock
mov
pusha
or
rcr
jo
and
inc
mov
jmp
pop
add
cli
fwait
jmp
mov
inc
pop
dec
ret
into
mov
mov
int3
sbb
add
rcll
out
push
rorb
out
clc
pop
test
int3
repz
fisubs
add
gs
jg
shrl
call
sti
cmovp
and
jle
and
add
shufps
inc
loopne
mov
paddusw
hlt
iret
add
jo
or
adc
inc
cs
xchg
out
xor
icebp
cmp
ljmp
mov
inc
test
xor
test
mov
and
mov
dec
and
notb
icebp
scas
jp
popa
add
inc
testl
iret
in
je
outsb
adc
test
sbb
icebp
jg
rolb
andl
add
pop
icebp
outsl
insl
sti
call
sbb
jnp
mov
inc
in
add
adc
pop
mov
rorb
arpl
or
popa
ljmp
movsb
jb
mov
addb
jl
mov
adc
add
push
je
andb
and
ja
loopne
add
insb
and
mov
out
mov
inc
xor
hlt
dec
rcl
inc
lock
or
sub
bswap
mov
jecxz
adc
adc
fnstsw
push
xchg
mov
pop
nop
and
add
mov
notb
adc
xchg
jmp
sbb
dec
dec
inc
or
loop
je
push
push
mov
aam
andb
insb
adc
mov
js
lock
nop
add
bound
add
prefetcht2
scas
outsl
dec
shlb
addb
loop
rorb
mov
incb
out
xor
mov
adc
push
mov
mov
cmp
cli
jg
cmp
push
jnp
cmpsl
roll
mov
insb
lret
pop
lock
hlt
sub
add
das
loopne
nop
pop
inc
in
aas
xor
lock
xor
inc
xchg
add
cmp
push
pushl
add
test
test
ljmp
inc
inc
or
add
loopne
inc
jb
or
stc
sbb
icebp
mov
cmpsb
pop
mov
mov
mov
adc
fdiv
xchg
loopne
and
mov
rolb
adc
or
and
add
adc
out
movl
andb
lock
dec
and
in
mov
xchg
cmp
outsb
and
int
inc
dec
jmp
stos
lcall
xchg
clc
push
push
xorl
mov
icebp
add
adc
jp
push
cld
das
clc
fcomi
cmp
mov
and
or
ret
dec
mov
xor
add
or
mov
clc
mov
lcall
rcll
add
add
adc
mov
orb
mov
psadbw
adc
into
rep
jmp
jl
inc
mov
add
fisubl
out
xor
rorb
cmp
clc
aaa
out
add
xchg
add
rolb
or
jbe
les
push
xor
xorl
in
rclb
dec
adcb
xor
sub
mov
inc
ret
movsb
in
lock
call
dec
xchg
loopne
add
loopne
or
fs
jecxz
lock
xchg
addb
inc
mov
adc
montmul
cmpsb
fucomi
out
movsb
lret
mov
sub
and
sub
outsl
xchg
sub
loope
pop
int
test
idivl
adc
mov
mov
push
xchg
add
cs
add
xor
incl
loopne
mov
push
loope
inc
test
jg
sbb
dec
in
jae
dec
or
cld
jg
in
xor
or
cli
jecxz
xchg
or
insb
xor
lds
push
cmp
mov
mov
add
sub
xor
push
movsl
mov
pop
mov
aas
incl
adc
dec
pop
add
ja
adc
negb
push
add
pop
mov
mov
add
add
add
pusha
add
popa
add
mov
test
addb
and
and
or
push
mov
mov
add
mov
js
shll
inc
mov
mov
test
add
mov
icebp
jg
or
insb
pop
adc
bound
lock
std
aaa
mov
add
mov
and
inc
test
add
in
jecxz
jle
mov
call
fs
mov
jb
add
pop
movsb
ljmp
push
clc
adc
inc
adc
ljmp
dec
jo
lock
mov
add
divb
std
dec
int3
das
pushw
fnsave
out
add
repz
add
int3
inc
insl
aam
mov
mov
mov
pushl
jmp
mov
loope
dec
int3
adc
or
outsl
stos
aam
and
loopne
call
sbb
test
inc
fcmovne
mov
adc
adc
movsl
mov
loopne
inc
xchg
pusha
outsb
or
sub
add
and
punpckldq
dec
mov
lret
in
aaa
cli
fcoml
out
push
add
add
addr16
lock
lcall
push
out
and
push
ret
ja
js
push
mov
mov
adc
insb
inc
inc
ljmp
notb
add
mov
movsb
add
lock
addr16
rolb
cmp
incb
push
jl
cmp
sbb
orl
andl
or
mov
mov
mov
inc
and
inc
mov
mov
or
adc
jb
add
cmp
outsl
push
mov
jecxz
add
shlb
fbstp
lar
shlb
push
push
dec
scas
cmpsl
add
fcoml
xchg
xor
push
mov
cmpsb
ljmp
ss
mov
and
dec
jnp
mov
jo
loopne
cli
or
mov
cmc
xor
mov
cltd
mov
push
adc
jmp
add
xchg
push
mov
call
ljmp
loop
push
or
movzwl
jnp
sub
mov
in
js
mov
cmp
divl
sub
mov
orb
jle
mov
xor
inc
jb
sub
aam
mov
testb
push
push
mov
pop
xchg
adcb
adc
or
lahf
mov
add
jmp
mov
ljmp
stos
arpl
sbb
inc
xchg
push
scas
in
sub
jmp
inc
xchg
add
in
xor
sub
popa
mov
cmp
sbb
push
xchg
push
jb,pn
cld
adc
xor
add
cmc
inc
rol
sub
inc
adc
out
jecxz
and
or
pop
cli
and
xorl
loopne
xlat
pminsw
mov
out
push
mov
rclb
xor
xchg
mov
push
add
incl
push
ljmp
sbb
and
xchg
adc
in
or
add
adc
ljmp
jecxz
fidivs
call
adc
mov
das
popa
cmpsb
loope
pop
add
das
or
pcmpeqb
or
and
cmp
faddl
pusha
sti
cmp
sbb
sbb
mov
mov
sbb
fdiv
inc
shlb
out
mov
sbb
xor
dec
mov
sbb
pusha
inc
mov
pop
movsl
adc
xchg
je
push
outsb
out
add
lods
add
hlt
inc
lcall
and
xchg
clc
bound
mov
add
rcl
punpckldq
and
mov
and
or
shl
mov
sbbl
jg
jmp
loope
and
jle
add
pop
mov
pushl
loope
or
test
mov
add
hlt
or
mov
adc
mov
jg
xlat
xchg
xor
sbb
mov
insb
mov
push
mov
xor
bound
push
ja
add
call
pop
push
pushf
sbb
xor
jbe
push
aas
mov
add
stos
divl
cld
testl
pop
aam
pop
fbstp
mov
or
out
xor
mov
adc
scas
les
xor
ret
scas
add
pushf
test
push
inc
ret
sub
push
sti
aam
sub
movsb
insb
scas
orl
lods
add
add
add
cmpsl
roll
andb
subl
dec
inc
in
inc
iret
enter
xor
addr16
jge
int3
cmpsb
pushw
fisttpl
imul
fdivs
fdivrl
mov
add
add
and
xchg
ljmp
jo
xchg
fists
mov
sub
or
orb
cltd
je
in
cmpb
or
mov
cmp
and
sbb
and
aas
addb
and
cld
add
push
push
and
adc
mov
mov
lock
pop
pop
mov
and
lret
xor
jg
push
loop
push
cmpsl
in
add
cli
jo
or
adc
adcl
cmpsb
adc
inc
sbb
adc
pop
adcl
hlt
out
insb
cli
dec
inc
sbb
sbb
fildll
test
rolb
or
imul
mov
les
or
pop
push
sbb
shlb
dec
sbb
xor
xor
lods
mull
aam
and
jmp
xor
jg
call
add
in
in
cmpsl
fs
or
mov
xlat
leave
sbb
lds
push
in
negb
cld
insb
movsb
imull
mov
add
push
out
movsb
add
and
sub
sbb
loopne
cmp
insb
xchg
idivl
add
dec
std
insb
sahf
jo
jmp
insb
ficomps
pop
inc
cmpsb
ja
add
xchg
or
es
insl
loope
bound
daa
hlt
out
call
aam
repz
mov
call
call
cvtpi2ps
push
or
cmovne
lods
andb
repz
ret
sbb
iret
js
mov
add
adc
loope
and
pop
and
aaa
cmp
inc
inc
sbb
fists
enter
or
dec
xchg
movsbl
add
subb
cld
sbb
xchg
or
notl
jmp
lcall
ss
jns
and
fdivrl
pop
scas
clc
or
lret
inc
or
pop
dec
fisubs
mov
jnp
ret
or
std
addr16
imul
divb
or
cli
ljmp
pushw
inc
test
int
mov
adc
pop
icebp
xchg
movsb
movb
mov
push
outsb
fiaddl
sbb
and
or
add
push
xchg
addb
sar
adc
pop
test
mov
and
lock
std
mov
cld
mov
hlt
ficoms
or
mov
orl
hlt
add
and
add
mov
js
dec
bound
mov
dec
push
add
testl
andb
dec
mov
sbb
das
mov
jge
rolb
ficoms
or
pop
fstl
pop
sar
cld
mov
mov
xor
xchg
pop
loopne
push
and
in
pop
cmp
loop
lock
arpl
fs
imulb
orb
or
pop
mov
jle
push
jmp
or
push
loopne
mov
jle
je
add
push
bound
mov
call
add
mov
or
add
repz
adcl
decb
add
xchg
ret
xchg
cs
adc
in
out
ret
dec
mov
and
ret
add
ret
add
or
or
insb
mov
or
inc
loopne
and
mov
sbb
or
jp
repnz
sub
test
mov
test
inc
mov
insb
clc
jg
push
addb
ret
sub
popa
sti
mov
popl
dec
rorb
cmpsl
fdivr
pop
sbb
add
inc
repnz
mov
outsb
add
add
add
sbb
and
xchg
inc
out
mov
js
adcb
pop
mov
roll
inc
nop
or
add
pop
rcr
lcall
test
or
decl
mov
and
mov
add
push
and
or
sbb
orl
inc
dec
clc
add
add
mov
enter
sbbl
or
les
sbb
jbe
call
fcmovnb
xchg
aaa
xor
and
pop
and
arpl
pop
pusha
jns
xchg
mov
mov
jmp
in
invd
sbb
cmpl
xor
pusha
inc
mov
lock
popa
add
ud2
inc
add
add
fldt
jg
loop
xor
mov
sbb
inc
inc
add
cli
jnp
and
loopne
mov
mov
sub
push
sbb
push
fiaddl
add
and
mov
push
adc
and
or
cli
mov
repnz
mov
mov
in
dec
add
testl
or
ss
inc
inc
test
psadbw
push
ljmp
fists
pop
fxsave
loopne
shlb
test
pusha
xor
add
pop
lret
das
rorb
add
inc
pop
inc
add
cmc
dec
add
inc
jnp
add
pusha
movups
or
add
sar
cli
orl
cli
and
hlt
sbb
add
loop
or
push
mov
xor
nop
sbb
sti
xor
jb
pop
rclb
int3
cld
push
repnz
iret
add
xchg
subl
idiv
call
push
sbb
push
sub
add
arpl
pusha
sbb
ds
pop
push
push
pusha
add
jge
nop
push
bound
jb
pusha
or
fsubrs
lock
js
lods
mov
dec
push
out
push
test
loopne
movb
paddsw
dec
add
sub
add
and
fldcw
adc
movsb
push
xor
xor
aas
xor
dec
push
fcomps
mov
sub
nop
xor
rcr
decl
xor
ss
xor
inc
nop
add
push
jmp
das
movsb
and
push
shrl
bound
or
loopne
jno
jo
cmovnp
pop
or
add
roll
add
jp
xchg
dec
inc
pop
es
add
mov
and
in
test
jl
adc
and
test
mov
lea
lret
pusha
mov
mov
add
sbb
push
jge
pop
ret
out
lcall
jmp
mov
out
adc
xchg
in
dec
ss
shrb
and
inc
jo
xchg
insb
mov
push
fs
or
scas
cmp
aaa
push
adc
adc
insb
push
ljmp
xchg
add
mov
pop
or
inc
mov
mov
loopne
testb
add
mov
push
xor
fmulp
insb
adc
out
and
test
or
mov
mov
jmp
bound
mov
mov
fdivrl
and
int3
mov
sub
and
xorb
and
pop
adc
and
mov
pop
add
aas
add
jo
or
outsb
adc
sub
fistl
nop
aam
xchg
add
and
jbe
xor
xor
in
or
mov
lcall
xchg
fisttpll
cld
cmp
push
and
js
sti
outsb
xchg
inc
mov
das
pop
sub
push
sbb
data16
nop
out
bound
outsb
lods
inc
scas
test
add
iret
int
jp
ss
sbb
rolb
rorl
mov
iret
jno
xchg
clc
outsl
pop
push
ljmp
adc
orb
addb
jmp
scas
mov
rorl
stos
mov
jg
jne
sarb
push
addb
pop
jmp
xor
js
xchg
push
mov
arpl
push
adc
cmpsb
pop
mov
loopne
add
rcrb
mov
test
xchg
imul
sbb
cmp
adc
sarl
in
popa
incl
push
pusha
jno
adc
push
subb
mov
mov
add
insb
mov
mov
xchg
xorb
or
frstpm(287
data16
cmp
add
les
ljmp
in
leave
jno
sub
sbb
cltd
mov
push
and
pop
jg
mov
hlt
adc
mov
push
push
sbbb
rep
xlat
ret
jo
add
mov
fwait
fs
inc
arpl
pop
movsb
adc
mov
push
imul
or
xchg
sub
rcrb
int
cmp
dec
pop
mov
lret
in
and
aad
decl
ficompl
cld
mov
pop
rcll
mov
dec
adc
or
mov
mov
idiv
scas
cmp
dec
add
loop
aas
mov
sbb
filds
dec
xchg
loope
movlps
mov
jno
xor
pop
in
or
pusha
shlb
cmpsb
pop
push
or
and
insb
adcb
xchg
int3
lahf
add
fiaddl
adc
fs
xchg
call
js
insl
inc
stos
orb
out
lahf
insb
push
sub
and
mov
lahf
lcall
or
sbb
out
inc
hlt
shrb
or
psubb
or
push
add
xor
xchg
mul
dec
loope
ret
add
add
or
ljmp
or
add
sbb
addr16
pop
std
jg
scas
sbb
fsubrs
xor
jae
and
sub
jmp
jbe
xchg
xor
pop
mov
jl
or
ret
adc
add
add
mov
jo
sub
mov
pushl
sub
subb
lock
push
cmp
nop
leave
lret
insb
jl
mov
mov
and
shl
cs
add
inc
inc
push
fnstcw
add
fdiv
inc
pop
xchg
js
mov
incl
insb
loope
mov
shrb
pmullw
nop
sub
sub
mov
imul
add
jge
std
inc
add
in
test
cmp
cmp
adc
xchg
fcomip
inc
mov
xor
push
jp
xor
insb
lss
mov
ljmp
cli
incl
add
push
xor
sahf
sub
mov
fcomi
add
fwait
rclb
jl
jnp
xchg
cltd
push
aad
shlb
mov
ja
loop
popl
and
jg
insb
in
add
push
adc
jecxz
mov
pop
xchg
test
in
loope
jecxz
mov
fbstp
sbb
rcr
jmp
call
popa
add
out
cmpsb
add
clc
nop
dec
iret
cmovp
jo
dec
in
push
mov
lret
add
pop
call
add
daa
lock
test
andl
jmp
cltd
jmp
jle
cmp
mov
insb
xchg
out
mov
inc
xor
cmp
rcrb
and
loopne,pn
shlb
inc
sbb
das
mov
clc
mov
inc
dec
mov
rolb
add
xchg
mov
mov
sbb
jbe
ret
mov
or
and
push
nop
push
insb
sub
out
insl
fimull
pop
sbb
lock
adc
adcl
mov
jo
xor
nop
jnp
sti
scas
mov
adc
nop
mov
sbb
pop
dec
pusha
pop
inc
xor
lock
ffreep
adc
mov
mov
in
add
outsb
scas
out
sbb
mov
les
fwait
xor
and
jmp
push
imul
pop
sbb
sbb
pop
icebp
adc
inc
aas
push
add
add
or
sbb
mov
cmp
push
and
inc
push
cli
loope
loop
repnz
test
add
aam
loop
mov
cmpb
repnz
scas
fisttps
mov
cmpsl
jecxz
mov
pop
xchg
test
pop
push
add
cmpxchg
mov
sub
jg
adcl
loope
or
dec
les
hlt
pushl
ljmp
test
add
add
jmp
xchg
lahf
enter
mov
add
fucompp
sub
xchg
fiadds
sub
lcall
sub
push
jmp
fs
repz
add
pop
ret
add
inc
dec
iret
mov
push
mov
sarl
test
scas
adc
add
rep
mov
sbb
mov
sub
mov
mull
mov
jo
xor
lock
insb
sub
sbb
loopne
add
adc
jg
fisttpl
mov
addb
push
fsubrs
inc
dec
adc
cmp
push
call
pop
scas
insb
inc
mov
addb
inc
scas
add
xchg
es
bound
xlat
or
or
cli
cmp
pop
inc
inc
sub
xor
sub
add
loop
cmp
push
outsl
mov
ret
divl
call
add
add
loope
cmpsb
call
test
rcrb
xchg
mov
out
inc
adc
xor
hlt
inc
adc
mov
mov
and
repz
or
pop
inc
mov
fbld
loop
sbb
add
std
add
movsl
jecxz
insb
add
cmp
lock
ret
ficoml
sub
bound
add
call
add
or
mov
and
aaa
pop
pop
xchg
mov
add
mov
add
fiaddl
out
push
sbb
cvtps2pi
insb
sub
das
mov
int
mov
and
addr16
aas
rolb
push
add
pop
add
and
add
add
push
cmovle
or
xchg
push
and
movhps
movsb
mov
outsb
movsb
xor
pop
inc
push
cld
inc
out
icebp
pop
fstpt
call
sbbl
in
mov
mov
ja
or
rcrb
mov
fidivrs
or
incl
push
push
roll
pop
ret
subb
cs
adc
ret
or
in
inc
or
or
addr16
jg
lock
adc
or
pop
and
cmp
xchg
mov
cmp
sub
xor
push
lock
and
push
jbe
mov
cmp
xor
or
mov
ror
js
and
insb
rolb
xchg
std
mov
ljmp
inc
inc
sub
push
and
out
push
fimuls
insb
and
es
mov
imul
jmp
cmp
add
sbbb
ficomps
push
cwtl
mov
sysexit
call
cmp
mov
sbb
add
pushl
std
sub
loop
sysret
xor
sbb
or
and
pop
fsubrl
xchg
add
sbbl
pop
das
clc
repz
or
push
push
push
mov
std
pop
mov
mov
add
jle
xor
and
cld
loope
cs
lahf
lret
fs
daa
iret
punpckhdq
jle
ret
in
sbb
call
dec
xorl
push
fisubrs
adc
jmp
bound
cld
outsb
cmpsb
mov
bound
push
lret
bound
xchg
rclb
outsb
lahf
lahf
mov
lock
mov
mov
outsl
cmpsb
lcall
hlt
jg
xchg
add
add
andl
jbe
ficompl
xchg
and
inc
add
movsb
inc
adc
insb
mov
mov
adc
cmp
rorb
mov
inc
testb
add
xchg
ja
pop
mov
mov
add
cld
das
test
fidivs
mov
and
mov
clc
lock
mov
test
ret
inc
and
inc
insb
and
out
int3
ja
test
mov
dec
loopne
and
mov
scas
xchg
mov
lcall
mov
in
push
int3
push
arpl
mov
adc
sti
inc
push
inc
cli
adc
fs
aam
out
popa
jae
rorl
xor
decl
jb
hlt
les
in
and
sbb
and
mov
dec
lock
mov
mov
adc
ljmp
push
inc
mov
aam
movsb
andl
pop
lea
xchg
add
pop
addr16
mov
push
jl
fdivrl
nop
add
int3
and
adc
inc
int3
sub
orl
pop
mov
pop
xchg
cmp
mov
adc
inc
mov
in
pop
fldl
add
or
outsl
add
mov
mov
xchg
dec
mov
inc
or
pushl
inc
loope
lret
mov
adc
xchg
jecxz
shl
lcall
push
sub
cli
sub
cwtl
adc
add
test
addl
inc
push
sbb
sbb
sar
das
mov
orl
fidivs
scas
mov
add
xor
fidivrs
dec
jecxz
or
add
pop
inc
pop
dec
std
dec
nop
mov
xorl
sbb
insb
mov
loopne
push
sbb
pop
dec
dec
test
add
adc
xchg
addb
mov
lcall
add
add
push
fistps
scas
outsb
mov
add
mov
test
xor
clc
pushl
fisttps
addr16
out
cli
add
mov
push
and
or
mov
addl
dec
xchg
fs
xor
lcall
fsubrl
test
or
movsb
sbbb
and
push
or
inc
inc
pop
addr16
ret
jmp
add
inc
sbb
add
push
rcll
ret
lret
mov
add
sarl
lock
xlat
push
dec
or
lcall
or
add
adc
sti
and
push
and
out
sub
out
push
mov
push
popa
adc
add
rorb
idivl
add
ret
mov
loop
rclb
std
pop
adc
push
or
and
mov
mov
gs
or
xor
or
sbb
clc
cmp
or
sbb
dec
jo
arpl
add
add
inc
xor
pusha
aas
sar
add
add
mov
clc
and
stos
cld
add
roll
popf
mov
movsl
shlb
lock
push
sti
adc
sbb
push
loopne
inc
test
jl
movsb
out
insb
and
or
stos
or
or
push
push
mov
pop
mov
pop
cmpl
jno
jecxz
lock
push
rorb
outsb
mov
pushw
or
mov
hlt
xchg
fcomp
data16
lods
pusha
pop
and
test
jl
or
xor
push
xchg
and
repnz
adc
cld
and
inc
xor
mov
pop
lock
mov
push
lods
loopne
repnz
push
repz
in
jo
ljmp
pushl
add
movsb
xchg
dec
lcall
out
mov
rorl
sbb
mov
inc
add
rclb
aam
imul
inc
mov
xchg
mov
adc
mov
sub
pcmpeqd
inc
ds
iret
sbb
adcl
xchg
packssdw
dec
mov
push
xchg
shll
adc
xor
jns
push
dec
push
push
out
push
push
std
sbb
popl
clc
xchg
mov
ljmp
mov
adc
xchg
adc
inc
or
dec
ficomps
call
pop
mov
inc
in
inc
xlat
lcall
pop
push
fsub
sbb
outsb
sarb
pusha
rcrl
out
mov
inc
hlt
add
js
pop
adcb
dec
roll
and
push
push
cld
scas
jmp
mov
jnp
mov
add
dec
push
dec
push
and
rorb
jg
ds
add
outsl
mov
mov
add
shll
xor
adcl
mov
in
cmp
add
repnz
lcall
shl
mov
mov
jle
ljmp
jb
mov
divl
cltd
add
rorb
mov
xorb
sbbb
nop
enter
out
outsb
xchg
and
out
push
cs
decl
and
lahf
and
xchg
inc
or
xchg
lock
sub
jmp
xorb
or
ss
movsb
or
stos
sbb
and
mov
int3
movsb
rolb
nop
push
inc
mov
ljmp
push
or
imul
or
jmp
punpcklbw
add
or
cwtl
andl
mov
int
cmpsl
seta
add
arpl
scas
fstpl
or
aam
ja
and
insb
mov
stos
or
rep
test
xchg
pop
addr16
mov
xchg
mov
add
add
inc
fs
jmp
rcll
adc
pop
fcompl
loopne
sbb
and
mov
pop
insb
cli
lret
arpl
adc
xor
inc
and
mov
sbb
lret
sub
add
insb
cld
ja
xchg
jo
pop
adc
xchg
scas
lcall
fs
or
mov
nop
prefetchnta
sbb
sub
cltd
dec
or
pop
push
pusha
cmp
imull
or
ficoms
cmpsb
repnz
insb
push
ret
insb
lods
iret
or
adc
lods
mov
inc
insl
movsb
or
ror
out
rolb
cwtl
ljmp
xchg
mov
insb
mov
add
dec
lods
jmp
add
inc
or
sbb
clc
lret
adc
mov
ret
scas
pushl
add
jmp
aam
movntps
cli
or
bound
lahf
ljmp
and
out
loope
in
clc
das
clc
pop
fs
push
jno
xchg
loopne
or
pop
xchg
in
xor
jb
cwtl
rorb
adc
outsl
mov
jo
fbld
mov
pop
loopne
xorb
add
fmuls
mov
add
adc
pusha
cmp
fsubr
cld
pop
or
sub
ds
in
sub
push
and
out
call
fmull
test
js
out
mov
push
or
push
insb
nop
cmp
nop
mov
lds
or
imul
out
add
jmp
add
adc
or
mov
jecxz
sbb
sub
mov
sbb
out
jmp
mov
cmpsb
popa
add
stos
cmpb
movsb
adc
adc
mov
mov
in
and
add
and
xor
lds
inc
incb
jo
idiv
pop
testl
sbb
sbb
rclb
and
pop
mov
popa
jl
fisubs
add
mov
fwait
addr16
add
mov
icebp
shll
jo
push
insb
pop
and
mov
shlb
pop
in
dec
fldenv
and
out
push
les
push
jl
insl
mov
fiaddl
and
fs
sbb
xchg
or
call
lea
and
aam
xorl
or
add
pop
or
sub
lcall
mov
lods
xor
mov
ret
std
lds
dec
push
bound
push
add
mov
push
ljmp
xlat
add
fiadds
lcall
inc
push
mov
pslld
ds
lret
cs
inc
aaa
fsubrl
cs
lahf
movb
ret
cmp
cmp
dec
push
add
pushf
and
or
lock
cmpsl
vpmullw
add
bound
adc
stos
push
or
push
adc
repnz
popa
sti
mov
xchg
stc
fdivl
std
cmpsb
jecxz
push
lret
sub
adc
loopne
les
out
push
loope
adc
cmp
dec
ss
pop
out
xchg
outsl
and
outsb
mov
outsb
and
cli
cmovns
and
icebp
pop
stos
daa
sbb
fidivrs
mov
and
in
ficoml
jbe
sahf
or
rolb
or
incl
add
movq
adc
negb
addl
outsb
cmp
sbb
adc
cmp
pushf
rdmsr
stc
subb
adc
jbe
subb
mov
sub
mov
icebp
add
or
mov
jl
fcomip
fisttpl
cmp
ljmp
pop
mov
add
outsb
mov
sar
fistpll
or
les
pop
inc
inc
or
inc
add
inc
add
mov
inc
and
mov
fdivrl
or
nop
dec
jno
mov
and
js
out
cwtl
or
cmpsl
rolb
iret
add
test
shr
inc
sarb
add
push
sub
aas
je
adc
rclb
das
sbb
adc
vmread
add
stos
push
or
sbb
inc
or
xchg
mov
pushf
cmpsb
xchg
nop
lcall
je
in
or
add
push
rorl
pusha
sbb
in
push
scas
jle
inc
add
push
xadd
pop
roll
add
jmp
shlb
and
mov
mov
sbb
les
and
adc
rorl
and
adc
sub
or
mov
ret
rorb
aaa
dec
or
cmovae
mov
outsl
mov
faddl
aas
ret
inc
mov
add
aad
mov
cmp
jb
and
out
psllw
mov
mov
add
pop
testb
xorb
pop
call
jg
inc
cwtl
push
shrb
push
add
roll
push
sub
arpl
cmp
mov
mov
addr16
ficoml
fwait
xchg
adc
mov
xchg
mov
xchg
xorb
cwtl
rclb
std
adc
push
mov
outsb
push
push
add
dec
dec
xor
dec
ljmp
xor
push
or
stos
push
pusha
cmpb
fsubrl
cmp
dec
jg
adc
out
and
and
in
movsb
pusha
adc
or
push
inc
fwait
int3
lcall
mov
les
cld
inc
sahf
fnsave
mov
mov
fsubs
ror
fdivrl
pop
inc
pusha
pusha
movsb
lfs
or
pusha
sub
mov
add
add
mov
inc
int3
mov
ret
insb
adc
add
cli
and
paddusb
pushf
fisubrl
mov
notb
imul
or
loope
fisubs
fbstp
aad
pop
dec
or
loop
inc
dec
call
and
mov
lcall
push
add
aas
stos
adc
rol
outsb
mov
orl
rclb
mov
js
jle
out
sti
cwtl
mov
add
jmp
xchg
out
subb
out
int3
sahf
test
stos
movsb
mov
pop
jmp
xchg
and
or
sar
push
or
inc
pop
stos
pusha
cmp
pop
roll
xor
xlat
pushf
and
mov
cmp
movsb
and
add
outsb
mov
add
aaa
js
lock
ljmp
push
jmp
loope
sbb
or
or
jecxz
lods
subb
mov
daa
jmp
lcall
or
mov
popa
lods
subb
shrb
insl
mov
sarb
inc
cmovno
and
lods
add
cmc
subb
clc
jecxz
mov
lds
into
adcl
mov
and
inc
ss
sbb
sub
pop
loopne
mov
lret
cmpsl
xchg
jmp
fadds
lods
mov
push
in
push
mov
mov
xor
mov
inc
inc
shll
add
or
into
lock
call
lods
add
es
xor
sbb
in
lock
out
loopne
out
sbb
xchg
jmp
dec
jo
mov
fistps
or
popa
push
mov
cmp
push
out
clc
sub
test
int3
out
movsb
jmp
add
xor
incl
sbb
loop
jecxz
orl
xchg
lret
and
in
scas
clc
lods
imul
cmpsl
pushf
and
sti
insb
negb
sub
push
pop
cs
rolb
call
fsubrl
pop
and
lea
xchg
rclb
fsubl
mov
dec
add
sbb
xor
imulb
xlat
adc
add
cld
push
push
add
shll
add
mov
insb
and
cmp
pop
add
push
ja
add
mov
push
outsl
js
ss
xchg
xor
cmp
mov
loopne
sbb
and
xchg
inc
inc
repnz
pop
dec
adc
lock
subb
lcall
std
insl
jecxz
stos
adc
and
data16
xor
lock
sbb
es
mov
outsb
ss
sti
ljmp
adc
shl
xchg
sarb
adcl
add
loopne
jnp
out
in
inc
aad
inc
and
xchg
testl
dec
loope
add
add
movl
adc
addr16
jmp
movsb
iret
pop
jmp
mov
das
jp
xchg
nop
add
xchg
icebp
adc
cwtl
adc
and
rolb
cmp
in
xorb
cmc
xchg
mov
add
push
push
and
mov
loope
push
xchg
ret
sahf
popa
daa
pop
add
add
pop
lcall
movsb
iret
add
mov
out
insl
in
add
in
outsl
pushl
and
in
cmpsl
faddl
test
shll
les
fimuls
and
lds
aam
out
or
xor
pop
adcb
add
cmp
pop
je
sbb
mov
jne
addl
pop
aad
xchg
cmpsb
es
cmp
mov
push
mov
sbb
push
repnz
mov
or
stos
add
std
and
mov
pop
clc
ljmp
sub
jecxz
shlb
sub
nop
mov
jp
mov
dec
dec
mov
mov
wrmsr
xor
fdiv
stos
dec
xor
pop
mov
xchg
push
ss
aaa
sbb
fisubl
add
inc
ljmp
add
lea
pop
mov
call
aaa
and
dec
add
fcompl
nop
adcb
in
pop
rclb
mov
sub
pop
sub
add
jecxz
ljmp
pop
in
repnz
and
mov
cmp
cmp
rdmsr
jb
outsb
jle
pop
shll
nop
push
in
add
xor
pop
sbb
subps
roll
adc
adc
in
add
pop
pop
lds
pop
filds
mov
in
loopne
pop
es
add
adc
nop
adc
fstl
and
inc
add
pop
or
out
xorb
sub
fwait
int3
push
inc
test
mov
incl
xlat
call
fstp
lock
add
push
cmp
das
and
mov
dec
addr16
xchg
loope
xchg
clc
incl
adc
xor
add
pop
adc
xchg
push
adc
xor
out
outsl
xor
cmpsl
pop
adc
pavgb
jo
adc
mov
inc
mov
pop
add
mov
es
mov
mov
stos
push
je
jno
push
loopne
insl
sbb
cli
popa
sub
aas
mov
push
jmp
sti
jp
mov
repnz
add
adc
outsl
xorb
sub
stos
ret
adc
push
jmp
out
cmc
aas
push
call
ret
pop
mov
sub
in
cmc
and
adcl
xor
shlb
or
notb
add
aam
mov
mov
pop
mov
add
add
push
outsb
fists
fnstsw
fistps
inc
mov
aas
push
call
cli
add
loop
lcall
movsl
icebp
add
jo
or
and
dec
add
mov
mov
dec
fwait
mov
xchg
clc
add
push
add
fcompl
repz
lahf
rclb
add
push
ficoms
inc
pusha
xorl
jg
popa
ljmp
mov
cmpnltps
nop
adc
sbb
adc
pusha
and
out
cmpsb
ss
into
xor
rcrb
mov
pop
jecxz
orl
mov
adc
add
add
jg
lds
dec
and
adc
mov
push
xchg
in
adc
outsl
pusha
push
addb
mov
sbb
push
xchg
dec
add
clc
int3
nop
jecxz
rcrb
push
nop
pop
mov
pop
xor
sbb
sbb
pusha
pop
inc
fwait
inc
test
cmp
insb
sub
adc
das
in
add
and
lods
mov
or
mul
ss
call
mov
rorb
fiadds
mov
cmp
push
nop
add
idivl
outsb
xchg
repz
out
mov
mov
cltd
jecxz
ss
pop
mov
mov
shl
jno
mov
mov
lock
adc
lods
loope
add
xchg
push
mov
mov
mov
or
in
or
in
mov
or
adc
cmp
or
xorb
in
mov
js
mov
sbb
add
xor
call
add
sti
call
xchg
out
scas
cltd
jmp
adc
mov
jmp
mov
lcall
or
xor
add
jnp
cwtl
rolb
mov
or
imul
negl
lret
in
hlt
nop
popa
fcompl
frstor
push
rclb
stos
lods
jecxz
repz
jae
addr16
jecxz
push
adc
cs
movsbl
adc
jbe
add
movsb
rorb
mov
lods
outsl
push
pop
add
jle
mov
dec
push
or
jle
sbb
push
popf
shrb
pop
pop
gs
clc
pop
add
mov
add
pop
xchg
data16
xchg
adc
jg
sbb
xchg
xor
or
mov
pop
cmp
push
adc
or
and
inc
or
bt
xchg
fcomps
loope
fldl
rol
and
mov
rcrb
or
fisttpl
loopne
mov
xchg
push
incb
and
cs
cmpsl
incb
rorb
arpl
add
push
sbb
lea
dec
cmp
cmp
out
arpl
add
btrl
clc
add
or
adc
std
mov
xchg
and
shlb
es
add
xchg
idiv
or
add
mov
roll
adc
mov
push
mov
add
rorb
div
and
fistpl
and
or
add
xor
lcall
sti
scas
mov
les
add
mov
fdivl
gs
push
push
cmc
call
push
shlb
daa
mov
pop
hlt
outsl
jp
mov
xor
pusha
adc
lret
sti
iret
in
dec
lret
addb
cli
adc
pslld
aad
mov
insb
xchg
cmpsl
add
add
adc
in
push
jp
and
mov
push
mov
adc
add
dec
mov
fisubl
pop
cmp
adc
push
scas
adc
or
mov
push
mov
push
sbb
outsb
inc
add
adc
adc
rorb
fisubs
insl
mov
ret
fdiv
push
cmp
cmp
orb
push
int3
sarb
cmpsb
sub
jle
sub
hlt
add
adc
ret
push
push
or
push
inc
movaps
shlb
in
insb
jno
js
mulb
mov
fidivs
jbe
loope
rcrl
fwait
add
push
cs
inc
addl
addr16
out
mov
xchg
or
pop
xor
push
ja
inc
push
fxam
mov
scas
add
rcr
mov
add
arpl
aas
add
cmp
outsl
aaa
testb
mov
add
push
clc
mov
ret
scas
mov
xchg
pop
pop
add
inc
dec
add
insb
fildll
push
adc
dec
lock
add
shr
add
lcall
pushf
sti
push
or
inc
push
or
sahf
pop
mov
in
cltd
std
add
ss
sbbb
cld
add
clc
rcll
ljmp
sysret
or
add
inc
sbb
and
mov
pop
cmc
scas
ja
sub
test
mov
repnz
add
cmpl
xchg
lods
lret
adc
loopne
or
aam
insb
xchg
mov
push
subb
in
mov
inc
aad
subl
hlt
rol
je
pushl
jecxz
push
iret
xchg
les
adc
data16
movsb
repz
mov
sbbb
orb
ss
xor
push
fiadds
scas
hlt
mov
sbb
cltd
fcom
js
push
sbb
xchg
inc
scas
cwtl
fistpl
inc
and
push
roll
add
push
add
outsb
nop
out
orb
adc
pop
push
or
lret
push
subb
loopne
or
xlat
mov
adc
clc
add
lgs
sbb
sub
fistps
clc
dec
sub
into
addb
add
call
push
cs
dec
orl
jne
dec
rclb
mov
inc
push
add
jo
add
inc
inc
xlat
and
or
sub
mov
pusha
push
in
sub
sub
xchg
add
test
and
and
mov
jp
mov
mov
push
in
cmpsb
add
pop
fsubs
jmp
inc
or
testb
orb
push
aaa
pop
mov
adc
pop
repnz
inc
insb
add
insb
sbb
and
out
push
icebp
jmp
roll
cli
adc
in
faddl
insl
mulb
fists
fcomip
xchg
cmp
rcrl
popl
das
jne
xor
jno
test
cltd
shl
or
es
push
cld
outsl
add
xchg
repnz
add
fsubs
addb
inc
cli
into
mov
mull
add
lock
and
pop
add
adc
pop
sub
add
adc
cmp
push
mov
xorw
lcall
in
cld
std
fcmovnb
jbe
mov
loope
and
pop
movsl
add
negb
inc
and
jb
jg
dec
or
cli
daa
xchg
xchg
inc
add
xchg
fsubrs
xchg
jmp
les
jnp
loop
inc
inc
add
and
add
add
jbe
mov
addr16
dec
mov
pop
adc
lods
sarl
mov
add
add
sarl
adc
dec
aaa
or
sub
fst
jg
sub
and
or
pusha
adc
sbb
movhlps
push
mov
or
add
jle
push
ret
bound
hlt
dec
int3
mov
insb
pusha
cld
adc
dec
mov
test
loopne
adc
mov
sbb
push
sbb
in
addl
and
loope
mov
or
adc
pop
fs
clc
aad
push
dec
orb
add
rcrb
pushl
pop
and
orl
inc
add
dec
add
add
xchg
loope
aam
aas
mov
add
movsb
push
test
je
loopne
lcall
jbe
add
xchg
sahf
ficomps
scas
lea
xchg
xchg
push
and
pop
mov
add
notb
mov
and
ljmp
and
jbe
cmpsb
jo
or
andb
fldt
fwait
xchg
ret
insb
sub
jmp
insb
cmpsb
add
and
push
cs
out
mov
stos
push
movl
fs
fdivrl
push
adc
mov
sbb
adc
push
daa
icebp
repnz
pusha
sbb
loopne,pn
sar
icebp
lods
out
xlat
int3
push
cmpb
add
stos
pop
jo
das
sar
scas
push
jo
scas
jg
and
into
sbb
pop
mov
xchg
rorl
push
bound
call
xor
jno
fcmovnu
cld
inc
cmp
push
stos
mov
and
jno
sub
xor
pop
movsl
mov
mov
outsl
incb
sahf
rcll
push
cld
shr
xchg
in
in
add
sub
call
shlb
xlat
inc
mov
jmp
into
jo
jbe
adc
push
add
inc
lods
or
xchg
push
aad
fnstcw
dec
cmp
stos
pop
cli
adc
out
out
incb
push
push
add
movsb
and
cmpsb
adc
ljmp
fsts
mov
push
mov
adc
or
add
jo
and
lods
pop
and
push
mov
jbe
adc
jmp
fnstenv
enter
in
jp
pop
jo
mov
add
jbe
adc
add
lods
lds
lock
xorb
das
clc
imul
aad
sub
sub
fs
add
push
daa
dec
xlat
jg
call
cmp
mov
movsl
lods
xchg
cwtl
sub
mov
call
jnp
rorb
dec
cmp
xor
inc
pusha
push
or
mov
iret
pusha
xor
xlat
loopne
and
addb
lret
hlt
outsb
mov
lock
push
inc
loope
xchg
call
mov
mov
mov
jl
cs
and
nop
repz
jmp
push
repnz
loopne
movb
hlt
jmp
rolb
dec
lods
or
test
adc
in
mov
loopne
ljmp
jbe
sbb
out
test
jl
push
repnz
sub
sub
mov
push
add
daa
mul
jg
xchg
xchg
pop
and
cmp
sub
ljmp
orl
js
or
jmp
sbb
add
out
jbe
mov
clc
jmp
sbb
mov
adc
outsb
adc
and
xlat
neg
icebp
sbb
lods
fdivrl
stos
test
pop
ja
xor
incl
std
inc
adc
xlat
push
push
inc
mov
sub
fdivrs
sbbl
movl
call
mov
pop
mov
sbb
stos
mov
lret
cmp
or
lret
sbb
push
pop
pop
add
nop
sbb
cld
leave
xchg
cmp
jno
inc
xor
pop
or
xchg
and
and
ds
xchg
inc
fsubr
js
push
inc
ficomps
mov
inc
mov
mov
sbb
ja
jnp
rclb
add
lcall
cli
popa
xchg
dec
xchg
mov
sti
xorl
addb
jbe
fwait
addl
inc
arpl
mov
hlt
addr16
mov
mov
push
cmp
xchg
and
mov
or
leave
ret
pop
aaa
xor
movsb
xor
add
push
add
inc
ljmp
jp
outsb
cmp
andb
add
fisubl
or
add
or
adc
jecxz
push
loopne
cli
jnp
jg
pop
mov
mov
push
jo
orb
push
sub
add
push
add
xchg
and
ja
dec
loope
dec
xchg
mov
add
cmp
insb
and
mov
mov
movsl
lea
push
sbb
push
pusha
adc
ljmp
decl
lock
adc
add
mov
test
mov
and
dec
add
fucom
cmp
xchg
adc
mov
push
je
push
gs
push
jge
mov
and
data16
or
push
arpl
pusha
xor
loopne
push
pushl
sbb
ja
inc
add
or
loopne
add
mov
mov
pop
insl
mov
add
mov
sarl
mov
pop
aaa
and
vmread
nop
pushf
pop
pop
daa
pop
sarl
loopne
inc
adc
or
cmp
mov
sbbb
add
pusha
shlb
incl
rcrl
cmp
pop
and
sbb
mov
and
inc
out
adc
and
jmp
mov
nop
mov
sahf
or
movd
ret
xchg
mov
lret
call
sbb
inc
repz
adcb
add
pop
ja
mov
and
xchg
add
add
outsb
sar
decl
push
sbb
or
dec
rolb
add
rorl
add
or
xchg
andb
cmpsl
out
or
repz
decl
mov
ret
pop
loopne
ficoml
or
dec
cld
outsl
clc
sbb
or
xor
mov
adc
or
add
mov
shlb
or
jg
pop
data16
std
push
stos
dec
mov
and
mov
inc
ss
push
pop
lea
push
push
mov
sbb
call
xchg
idivb
cmpsb
dec
cmpsl
out
ret
sbb
or
scas
or
testb
es
mov
add
add
fcmovnbe
pusha
cmc
or
push
subb
pop
ret
cwtl
xor
insb
es
lcall
or
fs
cmpsl
jmp
mov
fldenv
add
or
test
jb
or
mov
outsb
jmp
iret
and
mov
jo
jmp
or
or
jno
push
mov
loop
loopne
daa
add
sbb
adc
pushl
insl
pop
shrl
jp
xor
jne
insl
shll
cmp
xor
pop
push
pop
and
xor
aam
sbb
sbb
idivl
mov
xor
mov
out
xchg
lods
add
jmp
and
or
jle
inc
sbb
jmp
clc
and
mov
ret
in
repnz
jmp
js
adc
mov
adc
aam
movsl
jbe
push
out
add
filds
add
add
outsb
push
stos
mov
push
push
and
data16
jnp
loop
mov
and
sbb
add
in
movsl
and
shlb
inc
sbb
add
pop
or
inc
sbb
divb
sahf
adc
clc
add
fcomip
andb
clc
mov
dec
or
scas
push
test
mov
xchg
and
or
add
xor
fstl
fs
pop
add
sub
adc
adc
out
and
push
int3
in
pop
add
inc
xchg
imull
mov
adc
and
cmpsb
sbb
push
stc
nop
adc
in
sbb
and
adc
jle
cli
xchg
sar
add
addb
mov
mov
and
lcall
call
and
cmp
pop
and
sbb
btsl
xor
mov
popf
and
mov
lods
or
jle
orb
aam
pop
push
hlt
loope
rcr
outsl
clc
decl
mov
and
sbb
jo
mov
jmp
test
int3
inc
popf
jb,pt
imul
popf
sbb
movl
rolb
xor
jbe
sub
pop
xchg
movsb
add
outsl
mov
lock
add
add
divl
mov
ret
push
mov
adc
mov
mov
test
push
adcb
or
mov
mov
and
sbb
je
push
adc
and
addb
adc
mov
pop
lret
sbb
inc
js
sbb
sbb
ss
push
add
mov
mov
mov
sti
ret
aaa
add
mov
adc
leave
and
sti
push
stos
sbb
setb
sbb
cltd
fs
movsl
sub
add
push
inc
test
lcall
add
pop
add
or
xchg
dec
and
xor
cmp
mov
inc
dec
outsb
loopne
sbb
adc
push
inc
jb
add
roll
add
add
xor
out
sbb
inc
rolb
outsb
and
add
mov
hlt
push
test
fadds
aas
adc
lock
push
shlb
jmp
mov
mov
xlat
mov
sti
xorb
and
mov
jo
insb
and
push
xorb
push
adc
sub
push
push
push
mov
pushf
adc
adcb
test
pushl
add
push
ljmp
jo
or
movsl
daa
cmpl
adc
js
mov
sub
mov
add
std
xchg
push
loope
sbb
xchg
fbld
adc
scas
int3
loop
sub
xchg
sbb
loop
mov
dec
mov
push
mov
adcb
mov
in
mov
or
or
pop
rclb
aas
int3
or
popl
int
repnz
pop
test
inc
movsb
or
cmpsl
ret
out
sbb
in
hlt
push
dec
test
mov
cwtl
add
mov
lret
into
xchg
jp
fmull
ret
mov
add
shlb
aaa
or
mov
inc
add
add
push
cld
jg
testb
push
sbb
cmp
pop
mov
sbb
push
inc
inc
ljmp
add
out
ss
in
cmc
insb
mov
adc
jmp
es
add
orb
xchg
or
mov
or
or
push
shll
add
inc
inc
pop
lcall
adc
mov
and
icebp
add
xor
nop
xchg
fstl
jle
push
or
loop
rorb
fistl
dec
mov
xchg
mov
mov
pop
enter
xorl
cmpsb
jmp
cld
or
leave
shlb
int3
inc
cmpsl
aam
into
insb
ss
or
lcall
mov
mov
and
scas
inc
jne
jecxz
sbb
mov
or
inc
mov
into
or
jp
shrb
adc
or
insl
mov
test
pop
dec
sbbl
stos
sbb
push
xorb
mov
insb
xor
mov
and
fdivrl
fcmovu
cmc
mov
test
inc
je
cmpsb
jmp
add
cwtl
and
test
xchg
rol
mov
adc
test
add
pop
or
jmp
or
pop
jg
test
enter
psrlw
lret
lods
incl
sbb
add
loop
jbe
inc
pop
test
outsb
loopne
mov
cmp
cmpsb
mov
or
imul
jle
ficomps
out
add
push
rorl
sarl
std
jb
mov
push
and
pop
adc
mov
mov
cs
pusha
mov
inc
mov
fdiv
mov
push
inc
jb
dec
xor
cmp
call
negl
call
rorb
mov
jne
sbb
jb
mov
clc
adc
jmp
cmp
push
loope
es
adc
lahf
adc
adc
jle
dec
sarb
inc
gs
xchg
pop
popa
flds
mov
notl
ja
push
mov
orl
xorl
ss
rclb
add
inc
jno
loopne
subps
imull
fldt
rolb
mov
push
hlt
mov
dec
mov
sbb
mov
cmp
loopne
gs
aaa
add
mov
cltd
jecxz
adc
cmpsb
push
xchg
lret
icebp
jg
imul
mov
or
sbb
xor
orl
pop
movb
andps
andl
xchg
cmp
inc
pusha
mov
or
or
pusha
ss
pop
push
cld
pusha
cmp
mov
pop
loopne
jmp
setl
inc
subb
mov
mov
sub
mov
les
in
repnz
add
repnz
lock
lret
push
add
popa
lds
icebp
and
dec
cmp
push
inc
popa
fdivrs
ds
mov
sbb
lods
inc
add
shll
push
mov
jmp
cmp
syscall
movsl
add
aam
rorl
fisubl
add
mov
testb
ret
insb
jecxz
inc
into
and
test
fs
or
decl
inc
sahf
cmovp
adcb
sarl
xor
sti
jo
imul
je
add
fwait
jmp
dec
mov
xchg
jnp
and
outsl
das
clc
mov
pop
mov
pop
push
dec
pop
mov
mov
and
test
pop
scas
xchg
pop
loopne
ss
and
or
push
push
cld
xchg
stc
rcrb
pusha
mov
sub
cmpsb
add
shr
pop
popa
adc
ret
add
loopne
push
mov
jmp
xchg
sarb
mov
inc
lds
push
sub
xchg
xor
push
shlb
loopne
mov
insb
lods
movsb
add
cmpsb
stos
loopne
mov
push
pop
jp
and
add
add
push
data16
or
jb
push
sub
mov
jg
mov
test
add
inc
or
or
out
adc
out
hlt
mov
lock
add
mov
mov
ret
xchg
pop
loopne
aad
push
lods
or
rolb
jecxz
mov
and
jg
mov
data16
shl
pop
pushf
or
push
jmp
sbb
adc
push
std
aas
cli
arpl
push
and
jp
pop
inc
loop
sub
cltd
into
jle
andb
aam
inc
dec
mov
xor
test
js
xchg
loope
ljmp
loope
out
xchg
mov
sbb
add
xor
iret
xor
adc
orb
dec
es
inc
or
push
pushf
cmp
xchg
out
adc
les
mov
add
js
pop
sarb
into
out
add
or
push
out
scas
ss
andb
mov
push
mov
xor
add
push
std
fists
mov
and
sbb
push
mov
pxor
mov
loope
shrl
and
xchg
inc
jg
mov
scas
test
jp
mov
inc
jbe
add
jecxz
add
adc
fs
lock
pushl
push
aaa
push
icebp
imul
xor
outsl
fistpl
lret
mov
xor
sbbb
jmp
or
pop
jo
mov
and
insl
outsb
pushf
out
sarb
outsl
movsb
jecxz
inc
and
push
dec
or
mov
imul
sub
xchg
pop
lock
push
bound
std
int
xchg
jno
xchg
mov
outsb
inc
xchg
inc
test
mov
xorl
push
test
mov
push
jp
pusha
add
and
arpl
std
aaa
sbb
ljmp
pusha
lahf
shrb
pmulhuw
pop
xchg
aam
dec
and
fcmovbe
adc
xor
int3
cmpsl
mov
mov
enter
fbld
jo
and
xchg
jbe
pop
cmpsl
sbb
sbb
jo
bound
daa
cmpb
mov
aam
xor
popl
mov
xchg
mov
nop
mov
mov
mov
adc
lods
pop
push
or
jae
test
lahf
xor
sub
add
inc
jg
mov
imul
leave
inc
pop
fidivs
push
lcall
mov
rclb
js
mov
or
and
or
adc
sahf
inc
mov
pop
movb
add
aam
push
in
int3
push
ss
inc
xor
ljmp
sbb
xor
pop
movsb
mov
and
call
xchg
rol
sub
and
adcb
adc
xchg
sti
jmp
lcall
pushf
fldl
and
andl
xor
ficoms
pushf
push
sub
adc
push
test
cmova
aas
adc
pusha
xor
inc
push
addb
fiadds
sbb
pusha
inc
jecxz
rcl
sarb
adc
xchg
cmc
xchg
add
lock
push
xchg
add
je
pop
in
inc
cmp
subb
add
xchg
jge
adc
sub
orl
or
popa
add
rolb
and
lcall
jbe
iret
xchg
lock
ficompl
jns
les
and
inc
sub
adc
loop
inc
in
shrl
or
sub
xchg
add
or
xchg
insl
add
push
and
adc
addr16
test
jle
or
test
cmp
leave
test
scas
xchg
pop
mov
xorb
cmp
test
or
xchg
mov
subb
outsb
mov
inc
and
or
adcl
pop
xchg
pop
movsl
sarb
lcall
and
fldenv
or
inc
mov
roll
jl
repz
ja
mov
adc
mov
roll
mov
fwait
scas
push
add
push
leave
mov
jecxz
pcmpgtb
in
mov
push
in
call
rcrb
popf
mov
cmp
js
notb
and
cmp
mov
aaa
insl
pop
loopne
adc
jl
adc
aas
pop
fsubr
sbb
or
pusha
xor
decl
mov
cmp
loope
push
add
mov
lock
push
cs
add
inc
gs
or
and
ret
mov
stc
hlt
out
mov
inc
push
mov
fcoml
adc
outsl
loopne
loop
dec
mov
push
lock
push
test
rol
push
aad
adc
xchg
jmp
call
xor
cmp
repnz
mov
add
add
cwtl
jmp
dec
push
aad
jle
add
push
mov
mov
pop
or
jg
push
add
add
sub
fisubs
jb
and
mov
jo
xchg
fisubrl
fisubs
adc
loopne
xchg
mull
pusha
jmp
loopne
pop
xor
and
mov
push
in
cmp
add
inc
jne
pushf
push
adc
comiss
add
sub
and
adc
mov
fs
idiv
ljmp
loop
mov
mov
pop
loop
xchg
mov
inc
add
dec
jmp
jmp
xor
add
faddp
sbb
in
xchg
add
mov
xor
push
jo
adcb
mov
push
xchg
sbb
adcb
or
inc
js
adc
nop
pop
sti
mov
or
or
rclb
or
hlt
fstl
and
lock
add
in
dec
loope
cs
sbb
ja
mov
sbb
mov
sbb
pop
mov
push
push
xchg
jo
push
inc
mov
loop
or
subb
xchg
ljmp
jp
cwtl
sbb
mov
call
stos
mov
shr
sub
xor
dec
lock
fisubrl
push
call
adc
stos
mov
imul
es
movsb
sbb
dec
shrb
call
mov
test
or
sbb
pop
mov
dec
add
incl
and
or
add
inc
mov
fiadds
add
xchg
int
add
xchg
or
or
xchg
std
cwtl
push
je
sbb
scas
fisubl
push
sbb
add
sub
add
add
and
stos
mov
or
add
sub
and
mov
inc
jecxz
aaa
push
add
filds
mov
mov
arpl
adc
je
lahf
and
and
orb
popa
fnstcw
add
ds
movsb
sbb
or
mov
ret
add
push
daa
ret
shll
mov
jmp
orl
outsb
and
ret
and
add
sbbb
jae
orl
rcrb
out
int3
mov
pop
or
add
push
repz
into
orb
sub
clc
lods
mov
add
add
pop
fiaddl
mov
andl
mov
and
or
and
xchg
or
sbb
sbbb
or
data16
pop
repnz
adc
sar
aas
dec
sbb
cmp
fiaddl
call
add
or
pop
inc
pop
and
mov
ficomps
ljmp
ret
inc
adc
shrb
mov
faddl
xor
push
push
sbb
add
decl
xadd
pusha
shll
sub
sub
sbbl
jg
add
fistpl
or
pushf
sbb
push
xchg
inc
pop
pop
mov
pop
insl
mov
xchg
out
mov
dec
mov
movsl
lret
push
loop
pushf
clc
popf
push
mov
add
aas
inc
and
jle
call
lret
stc
push
mov
or
adc
inc
dec
jbe
popa
xor
mov
inc
imul
dec
or
mov
inc
rclb
hlt
inc
loope
sbb
xchg
xchg
shlb
ss
push
dec
dec
jmp
fs
mov
jecxz
shlb
addb
adc
xor
mov
cmpsb
mov
out
mov
ja
pop
pop
subb
andb
jmp
cmp
sub
test
lcall
loopne
adc
sarl
pand
cmp
push
cmp
test
jecxz
add
add
adc
cld
sbb
mov
pop
mov
insb
add
cmp
adc
mov
xor
lock
add
scas
outsl
xchg
lods
xchg
cmc
loopne
insb
cmpsl
std
or
lea
add
pusha
loopne
arpl
fs
pop
lods
mov
les
stos
add
clc
vpmaxsd
out
loopne
negb
rep
pop
mov
ss
push
inc
xchg
fiaddl
push
add
inc
test
pop
cwtl
xchg
mov
negl
xchg
das
call
or
int3
fs
and
dec
jg
ret
add
pop
lret
xchg
pop
fs
xor
sti
and
inc
orb
sub
mov
sti
aad
add
mov
add
rcrb
inc
and
add
pushf
test
xchg
adc
dec
movsb
rcr
sub
popa
fildll
mov
xchg
aam
mov
cs
add
outsb
mov
add
and
mov
and
outsl
or
loopne
xorb
or
mov
sbb
mov
mov
test
sub
pop
inc
dec
push
pusha
lcall
xchg
jmp
out
add
movsl
pop
rorb
sbb
add
mov
add
push
das
bound
lahf
out
insb
adc
mov
or
sub
sub
jle
mov
fwait
dec
and
shll
push
enter
sti
push
push
adc
xor
push
fsubl
icebp
push
adc
fisubl
inc
dec
aam
fisttps
mov
or
mov
mov
or
mov
stos
mov
loopne
rclb
jecxz
testl
loopne
mov
pusha
pop
fs
test
sbb
and
fcomip
fnstsw
inc
sub
outsb
sub
xor
jb
and
mov
push
add
sub
xchg
ljmp
fbstp
push
lods
and
mov
movswl
addl
and
in
stos
and
stos
sbb
mov
add
filds
test
inc
xchg
addr16
mov
push
mov
dec
popa
mov
sbb
xchg
mov
push
sbb
test
sub
push
dec
mov
xchg
les
ljmp
mov
mov
pusha
dec
incb
mov
in
xor
or
or
pop
fiadds
cld
inc
mov
xchg
jno
test
jnp
push
push
inc
shrb
jl
sub
jne
std
lahf
xchg
bswap
addl
or
jge
cli
mov
cmpsl
pushf
jb
mov
fisubrl
int
inc
and
xchg
stos
inc
sarb
in
mov
add
cltd
rorl
negb
mov
pop
add
rcrb
xchg
std
or
int
add
mov
mov
inc
and
pop
push
sbb
adc
add
cmp
pusha
fisubl
or
sbb
mov
in
mov
lret
inc
mov
add
pmaxsw
and
test
notb
mov
sub
push
adc
insb
fstpl
mov
adc
or
imul
sub
and
test
and
addr16
ret
add
inc
jne
stos
xor
incb
cld
clc
xchg
stc
mov
mov
rolb
lahf
inc
inc
push
ss
ja
loopne
add
jb
adc
scas
mov
and
or
sub
adc
add
add
hlt
inc
nop
push
inc
fcomps
std
decl
cmp
call
nop
inc
inc
and
adc
xor
outsb
popa
xor
add
sbb
cltd
fsubr
test
aaa
addb
mov
clc
or
and
mov
fsubs
stos
fcmovu
sbb
jecxz
hlt
lea
sub
fmul
inc
call
sbb
fmull
fwait
das
cmpsb
push
loop
xor
inc
xchg
mov
xchg
dec
fdivs
inc
pusha
sub
stc
rorb
jecxz
pop
jo
cmovs
or
dec
jno
loopne
outsb
adc
jle
push
mov
js
adc
sbbb
loopne
push
dec
and
leave
mov
mov
shrb
jo
mov
aam
push
mov
not
and
cmc
lock
xor
adc
loopne
sbb
xor
xchg
pop
xor
daa
pop
loopne
cmc
pop
mov
mov
lds
sbb
add
hlt
rolb
push
add
repz
insb
clc
sub
add
add
mov
xorb
dec
jo
mov
mov
sub
cmp
xor
outsl
bound
pushf
cwtl
push
push
stos
jmp
jp
add
aas
mov
and
stos
ret
and
push
in
push
push
ljmp
insb
fcoms
xchg
fs
mov
add
dec
sar
add
jb
cld
sbb
and
add
adc
sbb
and
std
xor
add
sbb
mov
cld
adc
pavgw
sub
mov
sti
loope
loope
decl
xchg
add
cld
divl
loopne
cli
and
shll
add
or
sbb
add
fisttps
add
cwtl
fcompl
rclb
add
out
andb
clc
loope
imul
xchg
add
add
in
sbb
into
mov
adcb
fdivs
mov
pop
es
xorb
in
ss
xor
lea
pushl
xor
sub
jae
sti
xor
xchg
std
inc
lock
xchg
xlat
ret
add
cmp
decb
sbb
push
rclb
icebp
movsl
ret
shlb
shll
push
je
test
rclb
jg
or
dec
pushf
repz
fmuls
jno
btr
pusha
sarb
and
pushf
mov
scas
or
orb
adc
clc
mov
pusha
or
and
xlat
movsb
push
push
cld
test
icebp
popa
add
outsb
cmp
arpl
loope
add
decb
mov
jmp
fisubrl
pop
dec
in
sete
in
mov
adc
insb
xchg
loop
enter
push
or
push
in
addb
pop
je
xor
add
mov
fmuls
enter
dec
rolb
out
inc
or
or
and
or
sbb
mov
roll
cmp
loopne
xchg
xchg
pop
fidivl
icebp
sbbb
ljmp
movsl
loopne
mov
sbb
loopne
call
adc
adc
fadd
or
push
jecxz
dec
ljmp
divl
fisttpl
std
dec
pop
sub
das
adc
movsl
insb
sbb
push
add
movsb
minps
pop
rclb
dec
icebp
pop
icebp
cmpsl
xchg
repnz
cmp
jb
fdivl
ret
adc
xlat
lock
ljmp
clc
jno
adc
xor
fdivr
jae
shrl
das
nop
jbe
push
xchg
adc
and
add
mov
sbb
or
clc
or
jno
fcomp
add
in
push
jl
hlt
and
adc
outsl
sbb
lock
inc
adc
mov
dec
sbb
cwtl
cmpb
add
outsb
callw
int3
adc
scas
addb
and
incl
mov
jno
jb
jno
cmpsb
pushf
loopne
outsl
ds
cmpsb
adc
roll
mov
push
and
sbb
xor
add
test
pop
or
push
sbbl
cli
rolb
stc
add
lock
dec
in
repz
mov
inc
decl
mulb
sub
rorl
cld
outsl
jp
add
cmp
mov
or
xchg
jb
mov
incl
ror
adc
xor
flds
call
cld
fwait
push
adc
aaa
cmpb
lcall
lret
fcmovb
gs
and
loopne
add
andb
sbb
push
mov
push
cmp
repz
push
jo
jno
clc
push
add
nop
std
push
aas
movsl
adc
imulb
lods
pop
movsb
in
movsb
loopne
sub
xor
insb
adc
mov
add
push
dec
or
and
and
shrb
jb
nop
inc
adc
pop
les
mov
pop
or
out
clc
add
fimuls
loopne
mov
loopne
inc
in
and
fisttpll
pop
dec
je
test
loop
jo
pop
roll
imul
push
add
mov
add
fwait
shl
mov
mov
adc
roll
sub
mov
pushf
adc
data16
inc
lods
bound
data16
popa
aaa
pop
and
movsl
mov
push
add
mov
sbb
addr16
pusha
add
jg
hlt
push
ds
jbe
push
loopne
nop
insb
add
xor
ljmp
aam
mov
test
mov
sbb
rorb
or
mov
inc
pop
add
in
shll
in
mov
movsb
decl
fisubl
sbb
jb
xchg
loopne
push
insb
sbb
nop
mov
mov
add
or
rcrb
jp
insb
rorb
aas
in
pop
sti
in
xor
js
stos
add
pop
cltd
clc
fisubl
inc
xchg
out
pop
xchg
adc
jno
push
mov
mov
sbb
pop
add
setle
jmp
add
sahf
push
mov
adc
fsubr
lahf
cmp
clc
or
test
lcall
pushl
out
jl
in
add
adc
jle
movsb
and
sbb
cmpsl
sbb
clc
jg
ficoml
add
inc
add
addr16
pushf
jmp
rolb
loopne
or
add
test
stos
cmp
and
dec
mov
adc
loopne
test
xlat
rclb
inc
cwtl
and
inc
dec
xor
fwait
lea
sub
xchg
push
ljmp
cmp
fwait
xor
movsl
jbe
cltd
rcll
fwait
push
add
adc
inc
jg
sbb
enter
lods
mov
mov
test
bound
orl
xor
add
test
gs
and
fwait
fwait
mov
arpl
je
adc
mov
lods
int
or
sti
cld
lret
call
or
mov
sbb
fisubs
repz
icebp
in
pop
xchg
imul
inc
push
add
loope
filds
add
or
ret
sbb
pop
xchg
and
scas
cmp
sub
pop
data16
push
or
lods
mov
testb
cmpl
push
sub
mov
add
les
mov
mov
xchg
lret
push
inc
shlb
loop
rclb
add
ret
movl
dec
int
movsl
out
mov
mov
daa
sbb
addb
mov
lock
mov
inc
adc
stos
xchg
pusha
cmpsl
or
movzwl
in
add
sbb
dec
nop
inc
dec
adc
rorb
xlat
cmp
adc
inc
xchg
cmc
add
xor
and
push
xchg
dec
sbb
jns
lods
decl
jle
rolb
test
cmovo
mov
outsl
nop
icebp
subl
sub
negb
cs
mov
cltd
pop
test
pop
icebp
addb
lds
cli
fiaddl
pop
rcrl
add
sbb
adc
into
xorb
loopne
or
bound
es
outsl
mov
rclb
mov
or
and
add
mov
add
mov
xchg
mov
hlt
rorb
jle
test
inc
push
stc
push
pusha
nop
dec
adc
pop
shrl
and
pop
adc
je
lds
insb
push
and
dec
decl
imul
pop
xor
cmpb
in
lods
lcall
or
cmp
sub
mov
lock
jle,pn
les
jnp
push
notl
decl
jns
addr16
push
mov
mov
mov
push
push
shr
in
aad
lea
insb
adc
inc
push
ret
or
mov
rorl
or
cmp
mov
rorb
and
mov
lock
inc
mov
lods
push
pop
jle
repz
lock
and
imul
add
fisttpl
sti
dec
inc
pop
shlb
push
call
add
movsb
mov
les
inc
popa
inc
jo
or
mov
mov
loop
es
mov
sbb
lods
arpl
mov
push
push
and
xchg
shrb
sub
inc
pop
inc
pop
rorl
sub
lcall
jo
add
pop
jmp
dec
mov
inc
add
mov
btc
xor
dec
push
loop
rolb
outsb
idiv
inc
lods
and
pop
incl
cwtl
mov
inc
add
ret
jle
ret
push
bound
cld
mov
jae
pop
add
mov
or
test
sbb
data16
add
pop
adc
popa
xchg
mov
and
or
cwtl
repnz
inc
push
inc
scas
cwtl
pop
pop
jp
pop
sub
adc
push
mov
mov
nop
adc
adc
fcomps
fbld
lock
sub
sbb
cmc
jg
and
pusha
sub
les
bswap
dec
inc
lahf
push
loopne
push
mov
mov
or
inc
xchg
stos
and
inc
or
shr
mov
ret
repnz
lcall
add
mov
adc
pop
jmp
pusha
and
xlat
adc
rorb
ret
sbb
or
testb
add
xchg
cmp
scas
mov
pusha
or
nop
fidivrl
fsubrl
xchg
bound
mov
lea
mov
mov
bound
lea
out
cmp
jp
mov
mov
pop
loop
and
inc
mov
outsb
rolb
out
orb
and
rol
cwtl
mov
and
xchg
hlt
sete
push
add
loopne
adcb
imul
inc
hlt
inc
dec
orb
bsf
pop
test
or
fidivl
cld
cmpsl
outsb
add
punpcklbw
add
or
mov
jg
js
sarb
sbb
shlb
pop
mov
xorb
push
icebp
es
xchg
shll
enter
aam
out
push
stos
inc
fs
les
cmp
add
adc
ss
es
popa
mov
add
test
aam
daa
loop
jmp
or
sbb
fdivrl
mov
adc
insb
jge
mov
int
mov
out
jb
adc
inc
mov
add
aad
and
cmpb
int
mov
lea
nop
push
or
clc
inc
sbb
add
pusha
loopne
cmc
mov
cmp
fidivl
ret
rolb
dec
fisttpl
mov
inc
pop
std
rorb
ret
in
and
ja
push
adc
and
jbe
jbe
mov
add
sub
add
popf
call
pop
adc
adc
add
push
loop
sub
cmp
add
mov
add
inc
mov
xor
stos
inc
mov
pop
hlt
mov
shlb
mov
adc
and
arpl
sbb
adc
add
cwtl
mov
mov
and
add
inc
fidivl
cmp
add
in
mov
clc
fisubs
in
test
jg
fwait
in
sti
fsubs
aaa
cmpsl
inc
icebp
subb
cmp
scas
sub
rcl
inc
rolb
mov
call
add
adc
lock
push
xor
cmpsl
sets
mov
jge
bound
fstpt
cmpsb
sbb
or
pop
jo
adc
fidivl
lock
add
or
orb
repz
scas
adc
mov
rorb
or
lret
xor
loopne
adc
ja
add
clc
mov
dec
mov
cltd
mov
es
mov
add
jg
cmpsl
gs
mov
test
add
mov
add
sbb
adc
cli
add
pushf
dec
mov
test
add
rolb
mov
roll
in
scas
repnz
popa
sbb
orb
sub
mov
jae
scas
shlb
insb
xor
xchg
xlat
mov
dec
add
sbb
neg
mov
std
in
or
push
and
add
aad
pop
pusha
adc
inc
aaa
sbb
and
lock
push
sarb
imulb
and
sarb
push
or
movups
insb
loopne
mov
inc
adc
adc
aaa
sbb
out
fs
mov
addl
daa
movsb
inc
rclb
es
fwait
sbbb
or
insb
push
mov
adc
and
or
cli
add
bound
xchg
sbb
mov
and
cmp
add
or
jmp
or
add
pushl
lret
or
lock
jmp
call
sahf
dec
test
outsl
lret
pmaddwd
orb
add
adc
jg
or
and
testl
adc
add
pop
mov
adcl
jmp
dec
lock
add
sbb
push
xchg
add
dec
push
pop
and
ficoml
xchg
push
dec
sbb
jnp
inc
rorb
xchg
mov
push
sbb
dec
jmp
jno
outsb
pop
or
aas
cmp
mov
push
pop
pop
hlt
and
push
jmp
loopne
push
call
pushl
jmp
rcrb
sti
rcrl
arpl
cmp
adc
add
adc
add
shrb
repnz
paddusb
push
push
inc
mov
mov
cmp
push
pop
sub
jne
cmp
or
lret
lcall
jbe
push
and
enter
xorb
cmp
mov
loopne
filds
bound
add
mov
aad
pop
loope
mov
jb
in
jmp
push
mov
pop
in
shl
mov
rcrl
adc
mov
push
sbb
mov
inc
add
push
aad
stos
mov
jecxz
loopne
and
jo
add
pop
and
pop
mov
sub
andb
adc
aaa
jo
inc
push
sarl
xor
ljmp
das
lods
in
inc
sbbl
stc
xchg
loop
mov
push
sub
xor
adc
dec
pop
fwait
icebp
orb
cmp
jp
adc
loope
lods
hlt
sub
push
xchg
inc
sbb
pop
mov
aam
mov
pop
add
pusha
jp
jge
xor
adc
jns
push
in
fwait
clc
xchg
inc
jg
push
or
mov
jbe
sub
push
mov
push
push
xchg
and
dec
adc
hlt
push
sub
cs
dec
and
add
add
addl
add
mov
cltd
dec
dec
int
into
in
in
jge
leave
dec
or
dec
iret
repz
xor
mov
adc
push
inc
mov
sbb
sbb
popa
mov
sbb
push
and
aaa
dec
pop
and
sarb
dec
sbb
jge
mov
push
nopl
jno
add
addb
iret
clc
mov
mov
adc
fsubl
cmp
orb
out
adc
jmp
insb
xor
push
jbe
jo
add
inc
in
rolb
dec
cltd
sbb
and
inc
addr16
int3
adc
jae
jg
xor
mov
mov
nop
add
ret
clc
mov
rolb
xchg
ret
add
adc
orl
xor
into
or
add
mov
aad
daa
outsb
mov
pop
js
cvttps2pi
pop
adc
ud2
lret
pusha
mov
xchg
adc
dec
lea
mov
or
mov
fst
or
lret
cs
cvtdq2ps
movsl
adc
outsb
mov
sbb
fisubs
xchg
nop
cs
and
inc
push
xor
fcoms
sub
sbb
push
aaa
adc
inc
loopne
jmp
xor
jo
mov
jg
dec
xsha256
cmpsb
roll
ret
mov
das
insb
pop
and
pusha
fmuls
cmpsl
push
sub
insb
mov
pop
push
clc
and
sub
loopne
and
push
scas
cmp
push
mov
xor
int3
test
outsb
mul
jg
add
int3
cmp
xor
jb
mov
ret
pop
gs
and
subb
js
push
sar
pop
push
add
in
popa
xchg
inc
xor
pusha
repnz
rorb
inc
adc
clc
inc
dec
inc
add
or
aaa
mov
xchg
mov
or
les
pop
or
dec
bound
jno
pop
xchg
sbb
dec
dec
scas
in
add
pop
cs
pop
outsb
or
sub
ljmp
cmpps
adc
cvtps2pd
or
push
adcb
clc
add
add
mov
add
sti
push
imul
fcoml
push
mov
adc
lea
rcr
and
lcall
fcmovnu
stos
aas
adc
jno
inc
movsl
push
and
xor
lea
xchg
or
mov
cmp
add
movsb
add
and
out
adc
inc
call
dec
add
mov
pop
lea
repz
xor
push
add
in
add
adc
data16
push
mov
jmp
push
int3
mov
add
add
pop
divl
nop
push
lods
adc
fcompl
popf
or
ret
loop
inc
push
loop
add
push
mov
movsb
mov
test
cmc
lar
je
repz
lock
lret
stos
jb
and
bound
cwtl
cwtl
and
mov
mov
nop
ds
xchg
dec
xchg
xorb
test
cmovle
ljmp
push
mov
lea
test
adc
mov
adc
add
test
mov
jmp
inc
push
stos
in
or
pushf
xlat
addl
es
add
mov
jo
pusha
iret
add
mov
mov
sub
orb
pop
dec
cmp
and
hlt
add
add
fs
mov
inc
adc
enter
aas
rolb
inc
cs
or
push
push
sbb
jp
mov
pushw
jbe
dec
fildll
lcall
inc
inc
aas
mov
nop
scas
inc
adc
jge
lock
xchg
adc
adc
test
cli
and
xchg
adc
inc
ds
jg
sub
adcb
rcll
xor
jp
adc
sub
mov
in
aad
dec
orl
xchg
mov
add
mov
add
sbb
jl
add
or
push
mov
inc
inc
add
aaa
test
cld
push
sub
xchg
add
jg
mov
lds
and
and
adc
cmp
cmp
mov
cmp
orb
popf
inc
add
sub
rclb
call
rolb
and
rclb
push
sub
jb
jg
lea
adcb
pop
xchg
aaa
mov
inc
adc
pop
lock
stos
test
add
sbb
inc
add
push
dec
sarl
sub
inc
sarl
inc
mov
sub
insb
insl
cli
decl
push
mov
roll
movl
mov
mov
xchg
aas
sub
shlb
or
sbb
sbb
ffreep
or
add
adc
mov
sar
decl
dec
adc
push
cmovno
das
mov
xchg
mov
sub
loopne
pop
and
mov
add
in
add
add
add
ljmp
popa
sub
cmp
jecxz
inc
out
call
mov
bound
sub
jb
cli
dec
or
pushw
stc
add
xlat
mov
xchg
lea
cmpsl
mov
lcall
mov
push
or
or
dec
jl
scas
addb
adc
xchg
jg
clc
cmpsb
and
ss
jmp
sar
dec
and
push
mov
or
xchg
adc
sub
jb
orl
enter
cmp
pop
notl
pop
mov
rcrb
and
inc
fstps
cmp
cmp
pop
popa
imul
mov
mov
ljmp
insb
divb
pop
mov
push
fcos
fisttpl
cmpsb
loopne
clc
sbb
sub
addl
xor
jg
push
movb
pop
pop
inc
or
cmp
dec
and
imul
and
and
hlt
loopnew
popl
push
add
push
add
shll
pop
loope
outsb
orb
testb
and
push
sub
mov
lret
ljmp
pop
icebp
mov
mov
jmp
xor
scas
or
mov
call
sbb
hlt
add
cli
mov
jmp
push
inc
xor
inc
popa
je
or
add
loope
pop
mov
adcb
rcll
mulb
add
add
loope
adc
call
popa
or
test
mulb
aam
loopne
imul
lock
mov
push
out
pusha
push
xor
xor
je
inc
andb
rclb
mov
enter
lds
test
fiadds
jbe
xchg
hlt
push
out
cmp
or
stos
cmpsl
xchg
subb
mov
pop
mov
mov
push
and
pusha
add
popf
es
sbb
jmp
push
jecxz
filds
adc
pop
inc
sbb
xor
and
insb
mov
and
and
loopne
loope
jmp
ret
aaa
mov
push
add
ret
andb
dec
mov
jmp
mov
rorl
nop
in
setb
pushf
inc
adc
sbb
mov
push
stos
cmpsb
fisubs
mov
aaa
jmp
xchg
add
xchg
mov
inc
push
mov
sti
and
and
or
mov
xor
sub
or
call
lea
mov
cs
or
lock
imul
or
inc
pop
sbb
sbb
add
inc
push
or
push
subb
outsb
jecxz
aam
push
push
cltd
xlat
fsubrl
xchg
clc
mov
jecxz
xchg
ss
fcomip
aad
ljmp
roll
dec
int
adc
sub
push
mov
hlt
out
mov
aam
bound
add
filds
add
or
leave
add
or
xchg
jp
add
jg
aam
xor
sub
add
outsb
pop
addb
mov
or
loopne
and
lea
mov
cmpb
add
dec
test
jbe
xchg
fs
je
inc
arpl
mov
jae
outsl
and
push
push
lock
imul
push
loope
lock
gs
push
arpl
imul
add
sarb
sbb
push
loope
insb
rol
jecxz
cltd
loopne
shrb
clc
add
xor
inc
lcall
inc
add
addb
call
rorb
call
test
add
xlat
call
add
bsr
adc
lea
pop
jmp
push
push
add
outsl
dec
adc
pop
loop,pt
inc
pushf
ffree
sbb
test
testl
jbe
insl
push
rorl
inc
lahf
clc
push
cmpsl
adc
mov
add
popf
mov
cmp
icebp
push
ds
insl
mov
push
sbbb
mov
or
push
repnz
sbb
or
pop
scas
jg
sbb
enter
movl
add
clc
lahf
xor
rolb
addb
push
add
std
popf
adc
lea
ljmp
adc
jo
or
pop
mul
inc
cld
scas
movsb
add
jo
and
inc
cltd
add
push
clc
inc
loop
pusha
add
iret
popa
adc
jg
sarb
mov
mov
bound
push
tzcnt
jo
test
ret
xchg
and
loopne
stos
or
icebp
jg
jo
and
jecxz
cs
out
push
cld
ljmp
push
jl
inc
loop
mov
or
lods
test
pop
mov
mov
mov
and
pop
outsl
sbb
das
add
or
loop
call
mov
mov
adc
xchg
psubsb
add
mov
lcall
or
cmpsb
pinsrw
add
fwait
enter
and
pop
jb
push
jmp
cmp
mov
add
push
bsr
mov
pusha
es
add
jno
adc
add
test
inc
xor
xchg
and
xchg
or
xor
or
and
rclb
inc
inc
inc
or
mov
add
sub
popa
mov
icebp
inc
inc
mov
pop
sbb
lcall
sbb
shlb
adc
fs
lock
adc
sbb
push
cltd
test
fsubs
xor
rcr
call
jmp
enter
adc
or
push
jne
cmp
imul
int3
nop
cmp
add
mov
mov
jmp
mov
and
dec
dec
repnz
fmull
jnp
or
mov
cmp
xchg
icebp
mov
outsl
mov
add
cmp
sub
pushf
pop
stc
movsl
mov
add
add
shl
cmp
xor
adc
pop
and
fstpt
test
addr16
psubb
or
and
ror
fildll
jle
ret
pop
push
repnz
push
and
fs
mov
and
xchg
jnp
pop
arpl
rcl
into
add
ret
push
cwtl
loopne
xor
fwait
sbb
ljmp
xchg
cmp
mov
xor
ss
push
inc
adc
add
test
out
lcall
push
cs
aas
xchg
stos
sbb
sbb
cmpsl
lea
cmp
sbb
mov
idiv
stos
test
pop
loopne
cmp
loope
jno
mov
gs
stos
pushl
xor
je
mov
cli
jp
popa
cmp
inc
push
xorb
fs
bound
mov
jmp
out
test
out
movsb
pop
push
ret
out
mov
lcall
adc
add
cmp
das
sub
test
loop
or
mov
mov
add
clc
mov
call
sti
dec
jg
cwtl
jl
pop
nop
pop
add
in
pop
jg
pop
popa
or
fwait
or
pop
adc
jle
mov
push
push
sub
xchg
and
cmp
mov
mov
scas
ljmp
je
hlt
push
shl
mov
inc
and
call
andl
out
mov
push
mov
std
pop
rcll
pop
or
mov
push
pop
or
or
pop
add
or
rcl
mov
imulb
cmp
pop
inc
inc
ljmp
xchg
pop
cmp
fwait
pushl
jo
jo
les
rcrb
mov
inc
dec
pop
mov
add
int3
ud0
sar
and
loope
mov
inc
lock
xor
inc
cltd
cmpb
inc
jmp
add
cmpps
aas
sarl
pop
xchg
jecxz
mov
or
and
pop
pusha
and
fidivrs
cwtl
adc
rclb
std
call
mov
gs
ljmp
push
xchg
add
mov
and
les
mov
iret
jo
test
add
popa
mov
sub
int3
pop
add
aam
imul
mov
inc
pop
pusha
sub
add
cmp
jno
xchg
cmp
add
adc
jb
push
cli
pusha
sbb
jae
mov
add
mov
popa
dec
lock
sub
sub
hlt
cltd
or
jnp
pusha
xor
push
or
xchg
je
pop
pusha
lds
push
popf
cmp
xor
push
push
ss
and
rclb
call
cmc
inc
incl
movsl
mov
add
add
sbb
jmp
or
adc
or
pushf
add
mov
mov
or
add
sahf
or
xorps
popa
sub
addl
mov
repz
adc
pop
mov
rcrl
push
adc
inc
push
adc
fidivrl
and
incl
mov
orl
mov
add
loopne
ret
sti
or
adc
andl
or
repnz
stos
lcall
incl
jbe
pop
fiaddl
sbb
mov
andl
std
outsl
ljmp
xchg
add
pop
cmpsl
dec
pop
and
add
adc
jg
cltd
scas
lea
pop
add
insb
fwait
inc
ret
mov
pop
add
in
add
mov
repz
push
sbb
add
inc
mov
incl
jne
inc
outsl
or
das
lock
mov
add
data16
call
ud0
loope
mov
inc
jecxz
xchg
mov
jecxz
nop
mov
and
adc
xor
rcrb
call
imul
call
adc
aas
pop
je
paddsb
mov
add
jno
aas
mov
fadds
sbb
je
pop
pusha
cmp
subb
sbb
push
jae
add
push
or
mov
sub
sbb
loopne
xchg
daa
pop
adc
push
pop
add
das
sub
xadd
dec
lock
addb
adc
inc
cmp
pusha
sbb
aaa
cmp
push
and
sub
adc
sub
es
into
inc
jmp
add
and
xchg
repz
add
jb
add
mov
in
addr16
adc
rorb
aad
enter
jmp
mov
ffree
outsb
fbld
mov
add
testl
shr
cmp
and
adc
and
add
loopne
push
xlat
sub
add
into
sahf
pop
test
stc
pop
and
and
jo
add
repnz
mov
inc
test
pop
pop
pop
push
jecxz
pop
add
outsl
and
jmp
shlb
adc
dec
addb
jbe
adc
and
outsl
pusha
sub
loopne
jbe
sub
xor
and
rol
shrb
push
repz
mov
lods
jmp
push
add
inc
pop
xlat
lock
or
fisttpl
adc
add
jne
jge
pop
adc
test
mov
ret
dec
pop
ljmp
insb
aas
or
in
dec
lcall
hlt
mov
mov
push
iret
scas
add
fs
or
mov
pop
loopne
fs
adc
ja
mov
lods
fdivrl
pop
pop
mov
aam
cltd
or
pushl
rclb
add
paddsw
add
pop
cmc
or
jmp
xchg
in
data16
int
outsl
clc
push
loopne
lea
add
bound
and
test
mov
imul
adc
or
adc
lret
mov
add
mov
inc
mov
push
lcall
clc
inc
and
add
jg
add
imul
pop
pusha
xor
dec
cmp
push
fnsave
roll
pusha
loopne
mov
lea
add
xchg
aaa
and
mov
and
test
adc
mov
shrb
clc
fwait
cwtl
or
jnp
adc
sub
or
mov
loopne
sub
adc
das
lock
mov
push
test
inc
add
push
sbb
imul
es
sti
cmp
fwait
and
xchg
outsb
ss
and
or
fcoml
push
out
add
push
or
pop
jle
jb
add
mov
mov
aaa
xchg
decb
aad
aaa
fdivr
call
add
mov
arpl
or
adc
lret
jb
fbstp
add
and
outsb
lcall
out
mov
ja
or
jns
mov
mov
xor
js
add
add
loope
and
sub
aaa
lcall
lcall
pop
inc
je
add
dec
xchg
pop
inc
addl
and
jg
shlb
push
out
arpl
and
xchg
adc
pusha
xlat
pusha
mov
jl
fisttpl
add
pop
sbb
xchg
or
or
cmpsb
ljmp
dec
bound
loopne
lods
mov
divl
adc
push
repnz
dec
mov
dec
dec
add
lock
mov
cld
jo
outsb
stos
outsb
xchg
add
les
shrl
jg
push
pop
lds
inc
vmwrite
pusha
outsb
sbb
pushl
incb
inc
loopne
add
rolb
js
cmp
or
add
nop
iret
lock
scas
sub
stc
mov
pop
mov
push
shrb
fcomip
lea
out
jno
mov
or
xor
test
xchg
hlt
ficoml
pop
add
stos
pop
sub
xchg
aas
lcall
cmpsb
test
sbb
or
mov
pop
prefetch
lock
lea
mov
rcr
lret
add
pop
add
orb
add
pushl
mov
loopne
sbb
xorl
inc
inc
xchg
test
mov
sbb
jle
xor
in
pop
mov
sbb
mov
jo
add
in
sbb
and
mov
loopne
jl
psadbw
ljmp
mov
sub
and
sbb
cmp
sahf
pop
popa
push
sub
es
jnp
lcall
and
add
push
mov
or
cmp
orl
and
lcall
push
loop
cs
fwait
adc
jp
adc
loopne
xchg
jmp
pusha
es
in
retw
fisubl
shl
stos
out
dec
xorb
lods
and
mov
dec
add
xor
cli
push
aam
aad
fwait
or
addr16
loope
loope
sbb
in
stos
out
int
mov
loop
cmp
lcall
mov
cmc
mov
mov
sti
push
xor
sub
lret
aaa
insb
sbb
jo
add
pop
add
add
push
mov
inc
insb
lock
and
nopl
mov
popa
cld
cmp
das
lock
or
rcll
in
pop
adc
xchg
cmp
add
adc
ret
push
pop
dec
adc
and
loopne
clc
push
xor
xor
loope
mov
das
lods
ja
mov
pcmpeqd
jmp
aaa
outsl
fbstp
sbb
popa
push
mov
xor
sub
push
shrl
dec
pop
int3
adc
jbe
inc
add
mov
mov
add
and
push
mov
shll
pushl
xchg
add
mov
xor
sbb
pushf
in
nopl
inc
adc
mov
pop
jno
lock
data16
in
mov
decb
adcl
mov
mov
xchg
pop
add
sti
sbb
sbb
cli
xorl
in
leave
ljmp
data16
xor
jbe
push
ret
loop
shr
add
mov
dec
cmovle
sbb
clc
in
pop
ds
add
movntq
cmovle
mov
mov
sbb
out
notb
int3
mov
enter
outsl
cmp
popa
mov
jl
and
inc
xchg
cmpsl
pop
bound
mov
push
imul
mov
decl
push
popa
add
test
add
mov
lods
out
cli
dec
sbb
addb
decl
cwtl
mov
ja
stos
shlb
push
rclb
add
xor
pop
loope
leave
xor
cli
movsb
es
decl
push
out
lock
dec
roll
adc
push
xor
div
int
dec
adc
roll
adcl
xor
fisubs
sbb
filds
push
inc
xor
rolb
popa
jo
and
aam
call
and
or
call
and
xchg
hlt
push
lea
inc
mov
sbb
orb
test
push
add
adc
push
cli
adc
push
xlat
sbb
adcl
fwait
push
pop
add
aas
fiadds
lcall
cmc
or
adc
dec
xorb
fildll
loope,pn
and
in
cpuid
sbbb
push
decl
mov
or
lahf
add
fs
fimull
jecxz
jbe
push
xchg
insl
and
and
ljmp
push
mov
fstpt
or
pop
sub
and
ljmp
imul
add
add
jecxz
inc
add
divl
xchg
divl
xchg
xchg
xor
sti
dec
add
and
enter
rolb
pop
addb
mov
stos
add
in
jg
add
cmpsl
addr16
add
xchg
adc
movsb
lea
hlt
inc
xor
cld
mov
cwtl
push
jae
repnz
scas
orb
mov
inc
sub
cwtl
and
fmull
push
je
mov
hlt
add
nop
jmp
daa
and
add
adcb
sarb
xchg
inc
mov
fwait
lock
add
das
pop
push
add
sti
mov
enter
lret
daa
sbb
mov
test
sbb
mov
pop
ljmp
jecxz
dec
xchg
stc
addl
outsb
xor
add
lea
add
pushf
jle
push
fidivl
insb
mov
xchg
add
nop
pop
xor
sub
xchg
pushf
xorb
dec
js
rcll
xchg
or
gs
pop
popf
repnz
insb
pop
sub
and
push
andb
loop
push
rcrb
or
pop
fsubrs
add
add
lret
add
insb
push
add
add
push
fidivl
jb
xchg
adc
rcrb
add
mov
or
add
xor
in
decl
mov
jle
fldl
pop
mov
mov
ss
jnp
adc
mov
out
inc
add
lods
or
lds
cld
add
xchg
push
xorb
mov
ror
and
pop
addb
sbb
pop
dec
add
adc
or
add
adc
add
adc
mov
cld
mov
push
cltd
test
mov
addb
scas
scas
adc
and
mov
push
xchg
push
xchg
outsl
xor
ss
mov
adc
inc
sbb
mov
lret
ljmp
shlb
mov
xorl
lods
test
add
or
mov
movsb
add
pop
ds
jecxz
inc
push
sti
outsl
in
lret
add
out
rcrb
rorb
sbb
xchg
mov
adc
xchg
aaa
xor
test
stos
int3
adc
scas
mov
outsl
jb
add
adc
pop
or
pop
enter
jg
data16
ds
add
pop
mov
insl
pop
cmp
outsl
mov
test
jno
or
ja
cmpsl
pop
or
pop
jae
iret
fwait
lods
std
orl
pop
add
pop
jg
out
sbb
inc
jmp
pop
imul
ret
adc
loopne
inc
out
sub
ret
pop
inc
inc
jo
inc
pop
xchg
aaa
pop
repz
pop
or
dec
jle
mov
pop
mov
repz
pop
ss
push
pop
es
jp
pop
xchg
or
neg
push
test
push
pop
pop
or
mov
sbb
cmp
or
mov
or
ss
xor
mov
jg
pop
pop
out
add
and
fldl
fwait
cmpsl
stc
repz
pop
int
sub
insl
int
aam
jle
mov
xchg
xor
or
pushl
pop
cs
and
sub
imul
pop
loop
icebp
or
scas
mov
add
insl
or
pop
sbb
jno
mov
dec
mov
lock
or
adc
pop
mov
out
sti
xchg
or
pop
fadds
pop
and
adc
push
add
pop
jnp
mov
pop
lcall
adc
fisubrs
inc
cmp
and
out
cmpsb
push
insb
push
loope
jb
aas
pop
aad
out
pop
inc
std
mov
inc
mov
dec
jmp
dec
stos
inc
add
notl
sub
pop
jp
and
aas
outsl
outsb
or
lcall
out
std
pop
mov
decb
lcall
inc
add
pop
and
cld
idiv
mov
stos
pop
fiaddl
lds
fiadds
ret
pop
ss
insl
imul
push
fadd
pop
aas
xorb
mov
adc
ljmp
dec
pop
and
add
pop
scas
sahf
add
pop
add
cmp
idiv
mov
and
aad
mov
mov
fisubl
jmp
pop
or
sub
cmpsb
daa
dec
adc
add
loopne
xchg
incl
mov
add
scas
lods
rol
jle
out
imulb
cmp
mov
inc
mov
pop
jle
or
sub
jecxz
mov
ret
inc
and
pop
fidivrl
addb
mov
mov
mov
mov
pop
mov
test
inc
or
and
test
repz
and
pop
cmpsb
inc
inc
cmpsb
orb
pop
push
repnz
adc
xchg
jle
jg
sbb
push
push
xchg
cmp
fsubl
sarl
fistps
xor
sub
mov
xchg
xchg
jecxz
jle
add
es
decb
ja
pushf
xchg
scas
push
imul
add
loopne
mov
ljmp
add
push
add
pop
and
shr
andl
adc
es
sbb
rolb
imul
fwait
ds
sub
nop
sub
mov
fldenv
cs
and
and
add
insb
sbb
bnd
mov
outsl
push
testl
out
push
inc
or
bound
decl
movsl
inc
jne
loop
and
inc
and
adc
or
int3
push
mov
xchg
rclb
stos
add
push
and
mov
addb
loope
mov
dec
jmp
fwait
sbb
mov
call
idivl
sbb
fst
daa
loop
sbb
ja
loopne
mov
jno
loope
addl
jo
mov
push
addb
jp
lea
pop
lahf
sub
sub
std
arpl
mov
cli
sub
dec
mov
pop
fcmovb
scas
ss
pop
pop
lock
xchg
jp
outsb
push
add
mov
xor
addb
movsb
xchg
lock
imul
jo
push
jl
cli
mov
das
mov
aaa
add
add
inc
fldt
sahf
xor
jl
jb
mov
add
push
xchg
mov
xor
insb
aas
rcrb
xchg
in
pop
xchg
or
add
outsl
ss
push
cmp
mov
sbb
jns
push
pop
or
lock
pusha
rolb
adc
fildll
test
mov
lock
push
jp
xchg
xchg
rorb
adcl
or
dec
jne
adc
outsb
cld
add
or
sub
pop
push
incl
xchg
icebp
jne
mov
mulb
jo
and
or
add
insb
mov
push
out
xchg
jne
jecxz
jb
mov
xchg
jne
sti
rcrb
mov
shld
psubsw
and
loope
insb
les
pop
cli
fs
in
outsl
or
and
push
inc
dec
add
xchg
fstpt
loop
xchg
mov
xchg
push
or
push
cs
adc
sbb
dec
push
push
aam
and
comiss
mov
dec
pop
pop
mov
orb
imul
add
xchg
add
xchg
adc
lea
insb
jle
push
cs
mov
sarb
jecxz
and
adcb
mov
adc
mov
pop
mov
add
dec
add
test
cmc
or
das
sbb
incl
mov
movsb
and
lar
sub
dec
stos
push
jecxz
inc
xchg
push
sbb
adc
and
or
in
mov
orl
rsm
int3
jg
jo
jle
sbbb
cmp
mov
insb
dec
or
push
data16
lcall
mov
pop
mov
xor
lods
mov
add
push
data16
mov
inc
orb
xchg
test
xchg
add
in
add
repz
cld
fwait
xchg
mov
fdivp
fs
lock
adcb
xor
sahf
and
cmp
ja
lock
add
lahf
ficompl
shlb
or
adc
sbb
icebp
dec
mov
in
dec
or
mov
add
or
or
or
inc
inc
or
inc
mov
nop
add
sbb
loopne
xchg
and
call
adc
mov
xchg
repnz
cs
lahf
rcrb
mov
sbb
xor
mov
sub
mov
mov
pop
sbb
aaa
xchg
lea
fsubrl
xchg
test
fs
je
dec
jecxz
mov
lods
in
outsb
push
mov
cltd
pop
cld
mov
ret
cmpl
repnz
sbb
aaa
or
mov
add
sub
mov
and
fists
push
in
adc
fs
andl
out
add
stos
clc
call
inc
and
push
fdivl
xchg
mov
frndint
repz
xorb
adc
shl
rcrb
repnz
insb
ljmp
aaa
rcl
shlb
call
add
loopne
cmp
jo
in
or
in
mov
insl
add
mov
mov
adc
orl
jno
addr16
push
add
mov
addr16
lock
jmp
in
sub
pop
cs
or
nop
sbb
loop
bound
fbld
jmp
add
or
mov
push
push
sub
rolb
fs
mov
imul
insb
ss
in
and
jp
push
jno
pop
xchg
rcll
xchg
out
sub
pop
pushl
inc
data16
sub
sub
les
mov
and
push
loope
lea
mov
inc
insb
lods
jecxz
dec
dec
jo
in
mov
out
je
rolb
adc
add
and
lods
add
mov
out
cmpsb
rcrb
mov
les
push
push
clc
addb
testl
add
or
dec
imul
or
sbb
or
decl
decl
std
or
sti
jp
add
mov
mov
in
jecxz
xor
das
add
dec
insb
loope
or
iret
setbe
rorb
add
or
leave
mov
sbb
and
cmp
inc
and
repnz
sarb
jecxz
dec
ja
fsts
andb
and
aas
adc
mov
xchg
add
mov
or
pop
hlt
int3
add
dec
mov
xorl
add
hlt
jg
js
ret
pop
add
jmp
outsb
jmp
movsb
mov
sbb
xchg
and
mov
or
lock
push
add
sub
mov
mov
mov
add
mov
sbb
jg
ret
jle
fcmovbe
push
insb
call
enter
clc
outsb
jecxz
sbb
sbb
in
inc
add
stos
add
pop
cs
into
int3
and
cmpsl
xchg
inc
cmpsl
mov
or
jmp
or
or
pop
test
cmpsb
add
push
cmp
aas
mov
scas
int3
mov
add
shl
xchg
out
adc
mov
incl
scas
mov
push
dec
divl
repnz
inc
lock
outsb
add
out
test
outsl
sti
fistl
jb
shlb
sbb
in
notb
mov
adc
mov
dec
mov
inc
inc
sbb
clc
inc
jl
andb
inc
lds
hlt
imul
bound
lahf
xor
adc
adc
jp
add
rclb
push
mov
add
push
rcll
xchg
dec
insb
testl
inc
jae
or
pop
xor
mov
cmp
add
dec
push
jle
jb
popa
and
sbb
sbb
push
dec
add
aaa
add
jp
mov
xchg
cli
pmulhuw
cmp
mov
setb
and
stos
or
paddq
xor
pop
mov
int3
mov
out
rolb
xchg
scas
inc
mov
pop
push
push
mov
data16
mov
clc
enter
popa
outsl
adc
add
test
loopne
xchg
test
mov
mov
lock
push
daa
lahf
das
subb
pop
add
loope
leave
lahf
popa
mov
push
add
cmp
fdivrp
shrb
test
data16
subb
add
out
mov
pop
push
sarb
xor
popl
subl
sbb
xchg
test
outsb
sub
insl
aaa
mov
out
mov
into
cmpsb
adc
and
lcall
xor
int
dec
daa
mov
xor
orb
loope
jecxz
nop
add
test
adc
int
xorb
add
pusha
or
fcoml
loope
add
inc
add
hlt
or
mov
adc
loope
adc
pop
cld
popl
or
mov
ror
add
in
cmpb
mov
in
mov
sbb
popf
push
mov
inc
ljmp
lret
fs
push
shll
dec
pop
push
mov
bswap
dec
lcall
add
punpckhwd
nop
jg
and
shrb
clc
jo
sbb
out
or
or
lock
out
in
inc
xchg
lock
insb
adc
pause
jno
popa
mov
movsb
adcb
add
push
outsl
lcall
cmp
mov
add
inc
or
adc
out
adcl
xorb
mov
adc
mov
push
les
popa
movsb
push
push
call
and
mov
xchg
out
or
fcoms
ljmp
bswap
dec
repz
into
bound
adc
icebp
or
scas
sbbb
mov
push
mov
push
mov
sbb
add
pop
testb
mov
sbb
jg
mov
stc
push
pop
xchg
loop
loopne
cs
cltd
jg
in
or
mov
js
add
loop
rolb
loopne
out
sub
shlb
scas
jecxz
pop
scas
fdivs
push
out
in
pop
cmpl
inc
xor
jecxz
add
add
adc
pop
add
loope
jge
xor
mov
test
and
mov
add
push
iret
adc
dec
sub
or
out
fs
xchg
out
call
inc
xchg
jmp
neg
fcoml
sbb
xchg
xor
int3
sbb
xchg
ret
xchg
mov
inc
ficoms
pop
pop
loopne
addb
add
jmp
and
cmp
and
mov
std
mov
push
mov
add
jge
sub
cmc
add
insb
out
outsb
and
xor
loop
std
dec
scas
mul
xchg
mov
outsl
insl
clc
ljmp
inc
jo
mov
xorl
sbb
insl
data16
cmp
cmpsl
mov
or
adc
movsl
mov
int3
mov
push
aad
jle
xor
add
add
aaa
fisubrl
sbb
sub
adc
push
jg
push
inc
sub
mov
mov
cmp
adc
inc
jl
lcall
pop
add
sbb
sub
pop
sarb
add
add
mov
dec
loop
mov
jnp
fistps
es
pop
insl
out
and
in
clc
out
sbbb
inc
and
outsl
ss
out
add
add
ljmp
cmp
dec
inc
rorb
xchg
lock
lcall
cli
pop
lock
addb
add
loop
push
cltd
loop
sbb
cmp
aas
or
pop
pop
dec
out
push
clc
xchg
hlt
aam
sbb
cmpsb
scas
addr16
push
sbb
fistpll
xchg
and
aam
xchg
fmuls
in
pop
jmp
dec
test
arpl
aam
lods
dec
add
push
pop
movsb
cmpsl
incl
xchg
sbb
mov
or
inc
adc
xchg
loop
mov
dec
add
insb
js
rdmsr
loopne
les
sti
add
or
test
inc
xor
sbb
pop
fadds
loop
xor
push
out
xchg
and
push
fs
shrl
add
arpl
in
add
rcrb
jno
sbb
add
push
sbb
testb
inc
pop
xchg
dec
and
in
sbb
bound
ljmp
push
mov
mov
and
sbb
inc
cmpsb
pmulhw
mov
adc
loope
in
cmp
or
ss
clc
decl
fwait
dec
mov
and
movsl
mov
call
incl
mov
sbb
lret
and
and
lret
xor
fiaddl
jecxz
push
xchg
call
and
push
iret
xchg
add
inc
push
insb
notl
cs
and
pushf
add
loope
ljmp
out
lods
pop
lock
sbb
add
loop
pusha
call
out
outsb
xchg
pop
mov
inc
jecxz
xchg
push
xchg
mov
bound
pushf
jp
lcall
lds
mov
jge
pushf
ret
pushf
unpckhps
rol
pop
jb
lcall
aam
daa
mov
jg
xchg
hlt
mov
sbb
pop
out
loopne
pop
adc
sub
mov
loopne
or
sbb
cli
xchg
adc
rcl
pop
xor
insb
inc
stos
orb
js
xchg
jmp
cmp
or
push
jnp
sbb
fmull
aam
les
outsb
pusha
into
cli
mov
fwait
add
cmp
insl
jg
add
call
int3
and
push
ja
mov
fidivs
add
push
decl
pusha
pop
loope
repnz
mov
test
bound
sbb
add
xor
std
idiv
aam
daa
or
repnz
clc
int3
int3
in
cmpsb
mov
and
adc
adc
js
adc
cmc
lcall
mov
es
mov
cmp
out
add
or
or
or
or
repnz
ljmp
int3
pop
sbb
mov
sbb
push
inc
and
or
mov
lock
or
rorb
add
ret
nop
add
shr
lock
inc
in
or
or
add
and
xchg
adc
rorb
sbb
scas
and
sub
nop
aaa
pusha
rclb
xchg
jmp
add
jbe
add
cwtl
adc
pusha
sbb
and
sbb
sarb
test
cmp
idivb
inc
fwait
sbb
stos
fldcw
cli
jle
pop
repnz
cmovp
inc
mov
outsb
push
dec
push
loope
aaa
sbb
mov
adcl
pushl
mov
fstps
addb
inc
push
push
push
adc
outsl
testb
and
mov
popa
inc
mov
es
data16
fsts
pusha
lahf
cmp
fsubrl
rorb
or
jo
add
shr
jmp
movsb
add
jp
fldcw
cld
in
adc
push
mov
mov
push
pop
ffree
shll
sub
adc
adc
shufps
loop
add
shr
out
dec
add
mov
mov
and
sub
call
loopne
shlb
pop
add
add
add
fildll
lock
adc
add
push
mov
push
sbb
std
mov
divb
ss
sbb
es
test
adc
idivb
ss
or
out
lea
sarb
and
sub
aaa
inc
sub
and
add
fcomip
int
insl
out
in
xchg
xchg
fucomi
xchg
loop
fsubrl
outsl
or
das
push
je
xchg
repz
or
adc
ja
pop
bound
call
outsb
call
loop
pop
adc
testl
test
loopne
ret
fs
and
or
inc
mov
mov
push
add
cmp
mov
mov
pop
mov
push
sti
aaa
mov
notl
add
mov
push
cmovno
inc
or
sbb
aam
push
jle
inc
dec
fisubs
add
push
inc
xchg
inc
or
in
sbb
inc
sti
out
xchg
hlt
adc
inc
bound
mov
cltd
mov
bound
mov
fcmovbe
fs
cmovle
insl
mov
or
outsl
mov
adc
xchg
movsl
adc
cli
mov
push
pop
addr16
push
inc
in
and
push
out
loop
addr16
or
dec
or
or
pusha
mov
inc
push
jle
fstp
gs
test
outsl
add
adc
test
cmp
or
movsb
in
insb
addr16
and
xlat
ljmp
mov
push
pop
fsubrl
les
ljmp
fdivrp
bound
xor
enter
xor
fcmovb
mov
mov
add
mov
pop
mov
mov
add
lcall
ljmp
outsl
jo
push
bound
xchg
push
shl
pusha
push
xchg
fdivrs
mov
jmp
insl
fs
mov
lods
and
fists
aaa
cld
sub
adc
add
xchg
mov
push
sbb
ret
push
popa
sbb
pushl
into
mov
into
dec
sbb
sbb
jmp
jl
repnz
mov
jmp
bound
xor
add
push
cmpsl
cli
sbb
nop
sub
adc
push
popa
xor
rcr
andl
add
rorb
testl
call
pusha
dec
push
orb
push
es
and
in
mov
adc
add
xor
and
add
and
ret
add
roll
out
inc
test
outsl
bound
mov
and
repnz
adc
stos
lcall
mov
mov
push
or
rolb
fdiv
or
insb
push
push
out
and
push
in
sbb
inc
lods
push
sti
pop
jg
rcll
clc
pop
popa
add
lock
inc
pusha
add
push
add
sbb
inc
mov
sub
jno
inc
loopne
sbb
mov
loopne
adc
adc
inc
adc
push
pop
pop
mov
xor
sbb
sbb
ljmp
mov
stos
lock
xchg
push
add
loop
pop
jg
xlat
les
test
loopne
insb
push
scas
lock
ret
cli
fwait
mov
lea
xor
in
pop
xor
outsb
aam
pop
adc
mov
out
xor
pop
inc
sbb
insb
push
pop
icebp
cmp
scas
out
and
int
adc
aas
mov
cli
lret
push
loope
ljmp
fidivs
add
sub
or
mov
inc
push
mov
jg
adc
pop
push
pushf
cli
sub
xorl
icebp
push
push
lcall
mov
loopne
popa
mov
sub
jecxz
fwait
das
add
sbb
xor
push
or
jo
sahf
xchg
lcall
xchg
sub
adc
xchg
push
das
adc
jg
xor
mov
xchg
mov
pusha
mov
mov
nop
ficoms
and
push
lcall
insb
sub
mov
sbb
xchg
fwait
shlb
sbb
xor
nop
and
jo
adc
rep
pop
fidivrl
fistl
sbb
mov
es
aad
insb
in
lcall
sbb
addb
int3
outsb
add
daa
jo
hlt
repz
mov
cmp
lods
repnz
out
es
clc
ljmp
pop
and
add
pop
or
movsl
mov
sbb
adc
out
and
jbe
inc
loopne
inc
lcall
and
push
mov
rcr
ja
inc
fsts
stos
cmp
lods
fnstsw
imul
sbb
adc
cmpsl
xorb
add
xor
repz
into
aas
add
jnp
imul
xor
or
out
fsubp
mov
inc
adc
into
popa
inc
pop
xor
fisubrl
cmp
clc
notb
lods
orb
xlat
in
and
cmp
add
or
dec
aas
je
and
xor
or
add
test
add
push
fistpl
mov
nop
bound
jns
bt
jle
lret
and
mov
pop
cmp
push
mov
jmp
add
add
adc
or
jb
addr16
adc
add
lods
push
mov
xchg
jmp
xor
out
adcb
stos
add
stos
out
push
loop
xchg
add
subb
out
dec
cli
dec
xorb
orb
test
xchg
push
or
rol
add
sbb
cli
je
dec
add
cmp
inc
pop
and
add
pop
add
sub
aaa
cltd
xchg
stc
mov
sbb
addps
aas
bound
daa
cltd
daa
lea
loope
test
xchg
cli
addl
jbe
dec
pusha
and
dec
addb
into
xchg
and
push
add
pop
mov
test
inc
shlb
scas
mov
sub
xchg
push
adc
jmp
bound
daa
xchg
testl
and
push
mov
inc
movsb
add
dec
mov
ds
add
add
push
sbbb
sti
mov
out
mov
pop
or
or
rclb
or
push
test
push
call
or
test
inc
pusha
int3
xchg
int
mov
loope
dec
mov
shr
add
lcall
mov
or
xchg
cmp
sub
fs
add
in
cltd
push
xchg
in
lar
sub
cmp
mov
and
or
inc
push
bound
jle
push
mov
jo
fists
stos
add
pop
xchg
or
aam
decl
mov
inc
push
loope
lret
insl
aas
inc
add
add
add
arpl
add
loopne
adc
frstor
je
hlt
push
rolb
pop
cli
das
add
outsb
mov
std
mov
repnz
mov
mov
dec
jmp
dec
loopne
shrl
in
mov
push
sbb
mov
push
sub
fsts
or
mov
incl
sbbl
pop
movsb
test
add
mov
mov
push
and
push
inc
fildl
xor
adc
lcall
movsb
inc
adc
sub
cli
decl
adc
mov
insb
xor
jge
pusha
adc
xor
divb
inc
xlat
outsb
mov
pop
add
sbb
jle
insb
pusha
pop
and
pop
inc
cmp
inc
fisubrl
mov
mov
adc
and
sarb
mov
push
add
inc
mov
aad
sub
movsl
icebp
es
inc
push
cmovle
jcxz
inc
push
pop
nop
cld
dec
pop
push
pop
mov
pop
add
daa
add
add
out
push
jo
or
mov
dec
jmp
cmp
push
push
insb
mov
push
jmp
mov
add
setp
mov
adc
inc
loopne
lods
cmpsb
sbb
mov
push
or
or
add
inc
mov
pusha
cmp
hlt
subb
pop
clc
test
dec
loopne
arpl
cmp
pop
push
mov
test
cmp
or
pop
lock
adc
aas
xchg
hlt
divl
jg
sbb
movsb
add
std
hlt
jle
mov
add
loopne
inc
add
orl
adcb
cltd
and
out
pusha
mov
push
and
adc
outsb
scas
adc
stos
and
fs
or
add
add
inc
or
mov
repz
popa
add
sbb
pusha
sbb
mov
test
sub
cmp
sbb
push
ja
lea
sbb
pop
lock
rclb
imul
push
ljmp
xchg
call
xchg
hlt
rolb
xor
sbb
mov
jne
loopne
dec
sti
gs
fwait
shll
rorl
dec
rorb
loopne
and
andl
out
dec
sub
adc
push
mov
push
cwtl
adc
jecxz
mov
xorb
shlb
stos
mov
cmovg
call
adc
sbb
add
inc
je
or
xchg
ret
sbbb
cmp
les
and
fdivr
dec
clc
mov
filds
inc
fs
lcall
adcb
sbb
call
rolb
mov
mov
pop
lret
adc
int3
in
imul
xor
dec
loop
jg
arpl
push
or
call
and
add
mov
cltd
loop
mov
mov
xor
jmp
sbb
loope
adc
push
rclb
sub
pusha
push
xchg
jnp
add
and
add
push
xor
enter
xor
loopne
dec
outsl
push
sub
mov
clc
push
loop
adc
add
jp
mov
mov
pop
rcrb
inc
and
jb
adc
int3
or
mull
scas
js
lret
add
loope
mov
incb
pop
ret
andb
pop
xchg
repnz
xchg
loopne
cmc
or
adc
mov
cld
fwait
or
adc
subb
inc
andb
imul
or
xchg
mov
mov
cmp
inc
or
into
sbb
cld
lock
or
lds
jecxz
lret
popa
or
fldl
push
loope
mov
push
add
loop
sub
pop
add
push
xorb
lods
inc
cmp
loopne
add
pop
sub
addb
lock
addb
push
xlat
xor
jmp
repnz
xchg
in
mov
jl
stos
mov
repnz
mov
lock
or
mov
pop
mov
fsubrs
mov
push
je
rcll
incl
bound
add
mov
sub
adc
mov
xchg
push
pop
push
pusha
mov
xchg
fistpll
lock
pop
jle
ljmp
test
mov
and
imul
and
add
loop
mov
decl
jo
pop
add
mov
bound
rclb
rorb
push
inc
cmpsl
mov
mov
mov
mov
sbbb
je
repz
aam
jge
fs
scas
cmpb
cmp
out
pop
in
movb
jmp
sbb
xchg
in
xlat
insl
cmpsl
cmpsb
xor
push
inc
outsl
pop
je
mov
icebp
rclb
dec
mov
mov
mov
adc
jb
aaa
lret
sbb
dec
das
add
add
clc
adc
dec
notb
cmp
imul
in
xor
add
add
cs
sbb
adcb
lds
push
push
jl
repz
sub
mov
adc
cmpsb
mov
lret
mov
fisubrs
mov
out
adc
jl
or
sbbl
ljmp
or
sahf
pop
add
push
lcall
outsl
or
movsb
fdivrl
inc
xchg
adc
frstpm(287
outsl
add
cmp
fcmovnbe
push
and
add
in
jmp
or
popa
sbb
jl
add
ret
xlat
or
xchg
aam
pop
add
xor
clts
pop
push
aas
outsb
mov
call
xor
aad
outsb
or
or
andl
cld
fwait
mov
imulb
sbb
stos
adc
and
cmp
push
les
pusha
inc
mov
xrelease
loop
insb
lcall
fdivs
fucomip
dec
mov
cmp
xor
lcall
adc
sbbb
clc
in
mov
lcall
cmp
into
xor
fisttpl
in
je
lods
mov
pop
out
mov
pop
in
xchg
lods
int3
aaa
cmpsb
sub
and
int3
fdivs
ss
add
adc
add
xchg
xor
insl
enter
cmp
or
mov
adc
lcall
inc
jnp
in
idivl
loopne
or
cmpl
je
sarl
rclb
mov
imulb
shlb
push
jecxz
das
mov
pop
sbb
rolb
fildll
sbb
add
shl
mov
mov
push
fs
fsubl
movsb
sahf
pop
inc
push
push
ss
outsb
xor
mov
or
lock
push
jae
sub
sbb
mov
les
idiv
outsl
sti
aad
and
stos
xor
or
out
jo
adc
aaa
mov
push
sbb
fiadds
and
imul
cmp
aam
cmp
push
or
sub
aaa
roll
notb
sbb
shlb
pop
xchg
scas
push
sbb
les
insb
sbb
push
add
pop
scas
test
push
sbb
pop
call
daa
addl
sbb
das
mov
dec
stos
sub
adc
pop
or
fcoms
xor
addl
add
adc
pop
adc
inc
inc
sbb
hlt
cmp
add
pop
inc
push
mov
enter
shlb
pop
and
and
mov
rcrb
jmp
out
scas
cmp
mov
ljmp
jmp
xor
adcb
or
jo
or
pop
dec
add
out
ficomps
add
cltd
mov
push
xchg
loop
testl
out
xor
sbb
clc
rcll
sub
xchg
lock
pop
xorl
in
cmpsl
push
push
dec
clc
mov
and
jne
xorb
xchg
out
nop
jae
insl
mov
mov
fnstenv
or
sbb
xor
aad
inc
jle
ds
sbb
xorl
cmp
mov
and
popa
push
cmp
out
sbb
pop
or
clc
adc
lock
jmp
mov
xchg
incb
jecxz
loopne
repz
and
and
or
jb
das
mov
subb
xor
pop
and
bound
pop
dec
pop
cmovns
in
push
roll
je
or
adc
add
inc
hlt
pop
add
jg
js
add
sbb
push
jnp
mov
pop
in
and
jle
adc
fsubrs
mov
push
shrl
daa
stos
jo
push
xchg
cld
jno
adc
and
or
aaa
imulb
mov
and
cmp
xchg
jbe
mov
fcmovu
loope
inc
rcrb
cmp
cmp
sbb
scas
mov
sbb
in
js
push
jmp
orl
fsubl
cmp
mov
lods
or
add
aam
cmp
cld
addb
jo
sbb
adc
xchg
stos
insb
sub
mov
lcall
cmp
fucomip
ss
les
aas
enter
or
sbb
das
mov
and
addb
cs
add
mov
sub
mov
int3
add
sbb
cmp
and
mov
sub
out
and
or
inc
loope
push
or
push
jecxz
cmp
xor
std
mov
xor
add
inc
cmp
outsl
mov
insl
js
cmp
jno
pusha
cmp
adc
insb
rol
inc
sub
adc
xor
xor
je
sbb
pop
or
lcall
mov
inc
push
into
out
in
cmp
pop
lock
shll
sbb
mov
or
test
and
fsub
rorb
xchg
lahf
ss
aam
pop
jns
pop
xchg
imul
aaa
addb
lcall
andl
or
sub
scas
hlt
push
idivb
sub
js
dec
mov
sbb
push
clc
jno
push
jl
mov
cwtl
push
mov
insb
inc
mov
test
sub
push
mov
test
add
ret
test
sub
push
sbb
inc
in
pop
inc
sub
inc
ret
aas
pop
mov
mov
push
mov
xor
or
lods
xor
dec
rolb
adc
adc
push
flds
xor
insb
push
in
fidivl
int3
and
lret
lock
mov
add
mov
or
add
fcmovnbe
inc
cmp
and
out
insb
aaa
adcb
or
or
sbb
and
push
mov
call
fstpl
xor
cwtl
or
jecxz
sub
lcall
or
andb
aaa
adc
adc
mov
xchg
rclb
clc
jg
cmp
aaa
pxor
outsl
mov
out
jae
sbb
lock
dec
es
add
lldt
imul
dec
inc
mov
xchg
add
subl
sbb
xchg
sbb
jbe
or
and
add
inc
call
adc
aas
rorb
dec
sbbb
sbb
pop
addb
jmp
add
adc
aad
adc
add
inc
mov
sbb
jno
sarb
jo
pusha
jne
pop
adc
jg
sub
dec
sub
sub
fisubrs
xchg
ficompl
push
das
and
and
or
inc
add
ret
loopne
fidivl
mov
mov
inc
sbbb
push
out
test
jb
add
pusha
dec
fisubl
adc
fsubrl
add
addb
in
subb
aaa
lret
xor
int3
sub
cmpsb
filds
lcall
in
xchg
or
mov
les
es
sbbb
je
xchg
add
adc
insb
scas
js
xchg
push
sarl
sub
in
in
pop
xchg
repz
dec
push
orb
inc
mov
push
pop
sub
mov
add
add
or
xchg
aas
add
imul
in
push
subps
arpl
mov
add
mov
ja
add
add
inc
pop
mov
test
pushf
fcomps
lcall
sbb
add
clc
add
jle
mov
pop
nopl
out
fldl
add
rorb
inc
adc
sub
cmp
adc
push
sbb
dec
daa
jl
add
rolb
mov
insl
fildl
std
sub
pusha
sub
aaa
icebp
frstor
inc
cmp
inc
das
loopne
inc
xor
and
or
jmp
andl
adc
gs
andl
or
pusha
cmp
sub
jg
imul
mov
xchg
pop
mov
or
inc
mov
orl
pop
xor
lock
mov
add
push
stc
test
aad
shr
cld
xchg
mov
in
hlt
out
test
mov
or
push
std
lods
pushf
aas
insb
pop
inc
mov
ss
inc
jge
dec
addl
nop
jecxz
cwtl
add
test
fisubs
test
mov
xor
add
jg
loop
aam
push
pop
xchg
into
add
or
stc
out
divl
fldl
adc
rolb
mov
or
loopne
cmpb
clc
hlt
pusha
orb
push
shlb
insb
stos
pop
add
roll
divb
cmpsb
adc
es
and
push
sub
inc
push
pop
loope
in
jmp
or
ret
push
sub
stc
mov
pop
cwtl
loope
push
and
movsb
lods
fldl
stos
dec
or
xchg
pop
sub
imul
je
in
pop
push
mov
packssdw
pusha
dec
and
aam
out
popa
jbe
adc
mov
pcmpgtd
jmp
rolb
inc
xchg
push
orb
sbb
movsl
lock
nop
repz
add
ret
lds
jecxz
data16
mov
lds
xchg
les
xor
or
decl
rep
mov
mov
movsl
and
cs
fcoml
xor
in
xlat
adc
adc
iret
cs
add
mov
hlt
mov
adc
xchg
jmp
add
in
jmp
mov
loopne
adc
test
mov
rcrb
mov
mov
divb
xor
inc
fildll
fdivl
add
xchg
inc
inc
ret
xor
je
into
add
dec
push
or
aaa
and
jmp
mov
sub
cmp
and
push
int3
and
das
xchg
mov
mov
loop
or
into
inc
add
andl
cwtl
in
jo
pop
arpl
inc
add
and
push
and
xlat
popa
iret
and
add
push
or
cmpsb
xor
ss
xchg
sbb
fcmove
inc
adc
and
or
jg
sbb
sub
mov
inc
dec
xchg
movsb
xchg
adc
mov
cmpsb
aaa
mov
fiadds
xor
pop
push
xor
push
sbb
xlat
addr16
je
fsubs
and
sub
cmp
add
in
pop
add
inc
fdiv
daa
fsubl
xchg
shrb
insl
repz
xor
imul
daa
xchg
cs
jmp
xchg
aaa
add
bound
and
sub
xor
xor
call
es
and
and
push
xor
push
dec
test
xlat
fdivrl
roll
xchg
sub
fcomip
outsl
aam
icebp
add
xchg
add
xchg
or
xchg
add
lcall
data16
pop
jecxz
add
or
aaa
push
adc
or
adc
push
testb
shl
or
xchg
in
cmp
sub
out
xor
xor
mov
inc
xchg
mov
dec
test
add
mov
aaa
fs
aaa
pop
rolb
insb
xor
imul
jns
xchg
sbb
loopnew
mov
mov
mov
sbb
test
in
call
roll
out
loope
push
jmp
call
es
out
cmp
mov
or
ret
in
or
mov
push
loopne
lock
mov
push
add
or
pop
add
adc
decb
popa
add
adc
sbb
mov
cwtl
jg
loop
and
xchg
out
adc
pusha
cmp
pusha
xlat
pop
in
push
mov
push
or
in
or
fiadds
sub
jbe
fs
push
push
jmp
cwtl
mov
adc
sahf
sub
push
cmp
out
wrmsr
adc
loop
fsubl
pushf
sbb
shrb
mov
xor
enter
or
nopl
data16
nop
lret
insb
mov
in
jb
add
or
rolb
xor
orb
sub
dec
add
xor
cmpsb
jge
loop
add
mov
push
cmp
mov
inc
loopne
mov
je
jo
mov
jle
adc
movsb
loopne
jb
out
mov
push
out
es
repnz
sub
loop
jl
mov
push
iret
xchg
or
mov
cmp
inc
inc
xchg
inc
or
js
push
lcall
adc
movsb
pusha
outsl
mov
add
dec
in
ja
clc
sbb
push
sbb
insl
mov
outsl
in
loopne
lock
add
lds
and
dec
dec
mov
enter
xor
lds
aam
enter
dec
and
inc
or
clc
mov
orb
jbe
sbb
dec
call
adc
aaa
shll
mov
ret
mov
push
sti
lock
add
mov
add
adc
push
adc
xchg
inc
movsl
pop
push
jmp
mov
cmpsb
loopne
in
pop
push
and
rcrb
cmp
add
push
filds
add
repnz
rclb
add
xor
mov
jae
gs
testb
xchg
adc
xor
mov
push
sbb
insl
add
mov
add
mov
clc
push
decl
mov
mov
test
movsl
push
mov
sbb
test
sbb
das
inc
ret
ret
push
cli
es
imul
adc
pushw
adc
xor
add
xchg
sub
fistpll
sbb
insl
cmp
and
sbb
add
xchg
loopne
test
jg
mov
daa
loopne
xor
or
jmp
sbb
jnp
push
dec
adc
scas
shl
sbb
inc
sbb
push
or
xchg
xchg
test
std
xchg
add
add
or
stos
das
mov
sub
dec
and
dec
cmp
nop
add
cmc
outsl
xchg
sub
xor
lcall
cmp
push
adc
add
push
mov
or
std
ret
shl
loop
cmp
fstpt
shll
fmul
pusha
push
imul
mov
mov
jg
or
cltd
sbb
jle
adc
adc
adc
insb
aaa
pop
mov
fiadds
aaa
add
or
insb
dec
nop
out
cmpsb
popa
ss
push
sbb
xor
mov
jecxz
inc
pop
and
scas
call
ret
decb
shrb
push
mov
fcomps
rorl
loope
and
outsl
inc
rclb
int3
push
sub
sub
in
cmp
orps
jbe
fsubrl
add
add
and
cli
ljmp
pop
lock
pusha
inc
jnp
adc
lea
and
jns
cwtl
push
add
push
sub
add
outsl
add
bound
push
pop
movsb
add
cmp
cli
lcall
mov
mov
inc
inc
cmp
jmp
jnp
mov
clc
lds
xchg
inc
mov
add
fs
nop
xor
cmp
sbb
xor
push
xor
mov
or
aad
or
and
mov
lods
aas
rolb
jb
push
sbb
mov
push
insb
mov
mov
add
xor
rolb
fcoms
pusha
or
lock
mov
and
shl
and
and
push
mov
movsl
test
repnz
bound
jo
lcall
in
hlt
repz
pop
pop
sub
adc
or
add
testl
or
xchg
icebp
pusha
push
fstpl
push
xor
movsb
xor
adc
and
push
mov
jno
js
pop
popa
push
arpl
enter
roll
dec
cmp
xor
mov
test
sbb
cmc
sbb
cwtl
adc
mov
rorb
out
add
call
in
rcll
xor
xor
mov
jo
fs
int3
rorb
or
xor
cmpsb
sbb
add
pop
jne
pusha
stos
xchg
push
into
aam
jecxz
stos
es
pushf
shl
adc
mov
out
lret
and
test
xor
out
xor
bound
mov
cmpsb
popf
mov
inc
xchg
add
lahf
add
jecxz,pn
and
xchg
cs
insb
outsb
jbe
fimuls
and
add
add
out
sub
cmpsl
fmul
add
aad
inc
andl
jo
pop
pusha
jle
adc
icebp
add
sub
test
mov
add
inc
cwtl
scas
nop
dec
movsb
add
sarb
ds
cmpl
outsb
rolb
sub
aam
add
orb
sub
jg
xchg
loope,pt
outsl
outsl
mov
xchg
in
addb
cmp
add
xchg
loop
out
adc
test
idivb
insl
stos
pop
insl
aaa
push
jecxz
js
addr16
mov
push
fildll
scas
fs
loope
mov
call
adc
in
push
add
jecxz
push
add
sbb
sbb
or
add
out
pop
mov
in
das
jp
test
ss
shrb
mov
in
pop
push
pop
out
xchg
out
lea
mov
push
adc
lea
or
or
xchg
pop
push
out
adc
mov
push
mov
xchg
push
pop
mov
xorb
decl
cmc
sbb
xchg
dec
inc
jae
icebp
mov
add
cmpb
jae
and
adc
add
cld
add
add
outsb
rolb
add
push
clc
fwait
add
insl
add
adcb
and
fwait
popa
add
pop
sbb
or
out
mov
ljmp
add
mov
sub
pop
sub
xor
adc
lock
pop
mov
xchg
std
cli
jbe
xchg
sbb
cmp
icebp
out
and
lcall
inc
or
pop
out
das
adc
mov
sbb
cmpsl
fsub
or
mov
out
cli
xchg
rcl
xor
iret
add
and
and
stos
add
aam
inc
or
mov
xor
adc
xor
ret
sub
inc
inc
int
int3
test
addl
out
stos
incl
adc
movsb
scas
andl
push
add
xchg
mov
dec
test
rorb
inc
sbb
loope
mov
test
add
es
inc
pop
add
fdivl
mov
sbbb
rclb
das
insb
out
jecxz
xchg
int3
es
insb
pop
les
xchg
data16
in
dec
rol
adc
and
push
dec
pusha
mov
data16
loop
fsubrp
loope
call
lods
and
push
fsubrl
loop
adc
pop
hlt
dec
nop
pop
les
out
adc
outsl
fistps
push
in
sub
fsubrs
fs
add
ljmp
xor
add
mov
cmc
inc
nop
enter
or
mov
sarb
setge
sbb
xchg
ds
sub
shrl
hlt
bound
data16
sub
push
push
inc
icebp
inc
add
adc
xor
dec
mov
fiaddl
bound
stos
mov
inc
pop
add
adc
mov
orb
inc
mov
aam
add
insl
loope
or
or
insl
nop
daa
andb
movsb
cmpsb
push
mov
je
nop
jo
aad
repz
push
inc
loopne
ds
inc
test
mov
cmp
addb
out
jge
orl
in
pop
pop
adc
dec
jb
filds
mov
mov
aas
test
data16
aam
mov
dec
mov
xchg
inc
insl
jmp
adc
fwait
lock
ficomps
call
or
es
xlat
and
lcall
ret
fs
out
arpl
and
popa
inc
xchg
inc
mov
push
movsl
mov
adc
out
mov
sbb
stos
push
mov
mov
add
mov
andb
adc
push
xchg
jecxz
push
xor
daa
ret
adc
xor
sub
mov
mulb
and
insb
mov
xchg
rorl
mov
sub
mov
ss
cmpsb
fistl
push
incl
popa
data16
mov
outsl
jmp
xchg
adc
mov
les
mov
frstpm(287
xchg
iret
roll
add
cmp
mov
jmp
dec
data16
push
std
sbb
xchg
es
pop
xor
or
test
jecxz
ret
popa
add
insb
inc
mull
jle
es
lea
adc
and
and
xchg
pusha
out
fs
loopne
mov
insb
xor
cs
or
out
adc
mov
sbb
push
fs
ret
mov
inc
jmp
or
push
jg
xor
push
sbb
cmc
out
ret
es
das
out
loopne
push
xchg
ss
or
lcall
add
data16
inc
outsb
add
das
repz
xchg
loopne
lock
rcrb
test
int
aaa
fs
and
cmpsb
adcb
outsl
mov
frstor
or
aam
mov
bound
pusha
add
loop
cmp
insb
call
incl
or
fs
es
and
mov
sbb
inc
loop
mov
or
mov
or
mov
test
xchg
iret
orb
mov
add
or
mov
mov
push
mov
icebp
inc
pop
and
es
pusha
test
ret
data16
cld
shrb
enter
inc
add
pop
add
push
mov
in
add
ss
sarb
jp
out
dec
mov
pop
push
xchg
rorb
lods
mov
xor
inc
sbb
pop
xchg
dec
mul
int3
mov
nop
rclb
jnp
sbb
add
dec
push
sbb
mov
aam
sarb
mov
repnz
ficoml
pusha
push
test
xor
or
mov
push
add
rolb
adc
aam
inc
dec
notb
jmp
xor
adc
and
std
and
out
xor
scas
fsubl
sbb
fisttps
mov
testb
nop
pop
rcrb
cmpsb
aaa
jo
adc
dec
and
out
pop
pop
xchg
mov
add
inc
adc
jo
mov
call
loopne
dec
and
sub
add
pop
sbb
push
cld
xor
jle
rcr
adc
pop
testb
add
mov
sub
loop
jo
mov
call
scas
or
and
pand
add
or
adc
je
xchg
mov
rorb
ljmp
jecxz
sbb
pop
pop
add
fnstsw
push
sbb
xchg
xchg
insl
faddl
adc
cmp
push
and
mov
xor
repnz
xor
inc
mov
loop
mov
xor
or
push
inc
cld
xchg
and
loopne
xchg
mov
push
dec
cmpsb
lds
xor
ret
enter
int
test
mov
jbe
rclb
pusha
int3
mov
add
pusha
or
notl
push
fs
ss
into
xchg
add
loope
push
mov
pop
rorb
and
adc
mov
cmp
int
push
std
pop
push
test
inc
cmp
and
pushl
cmp
sub
pop
adc
lock
inc
bound
subb
push
rorb
out
ret
mov
sti
mov
adc
out
orb
rclb
bnd
or
lcall
ljmp
pop
mov
adc
adc
push
in
add
or
and
sub
outsl
adc
rcrb
cmp
or
out
add
mov
or
adcb
jecxz
adc
fstp
mov
nop
adc
mov
push
mov
sub
adc
dec
mov
test
shll
mov
adc
iret
add
add
aam
cwtl
lret
sbb
clc
and
xor
adc
les
xchg
xchg
add
bound
jecxz
loop
adc
or
sbb
or
aam
mov
mov
or
repz
push
ljmp
jmp
sbb
adc
das
or
sub
push
in
push
mov
out
pushf
add
addr16
dec
inc
push
es
fcomip
outsl
addr16
xor
add
add
fwait
push
adc
aad
je
adc
loopne
fimuls
insl
and
xchg
test
and
cs
jg
adc
sbb
push
mov
push
rolb
into
rorb
mov
mov
mov
adc
sbb
ljmp
push
push
mov
shlb
rolb
jle
mov
mov
xchg
sbb
roll
ljmp
lcall
xor
rorb
mov
jb
push
sub
jmp
or
or
push
fwait
icebp
cmp
add
add
call
mov
loop
fs
sub
push
mov
mov
sbb
rcrb
das
mov
sbb
xor
aaa
in
js
and
rolb
xchg
add
rolb
leave
inc
aaa
cmpl
add
repz
inc
std
das
xor
inc
pop
add
outsl
retw
xor
mov
sbb
jne
adc
ret
cld
lret
lock
sbb
mov
or
xorb
or
out
insb
pop
mov
pop
sbb
jno
jg
mov
lock
daa
arpl
stos
movsb
std
pushl
or
mov
stos
push
push
shll
loopne
loopne
jle
push
or
rdmsr
inc
sbb
or
pusha
push
sbb
nop
loop
rcll
push
notl
enter
pushf
jmp
test
pop
xor
push
scas
es
or
int
ret
out
call
sahf
mov
adc
hlt
lea
leave
rolb
and
inc
lahf
orb
testl
test
int
xchg
int3
and
sbb
outsl
rcll
add
nop
lock
mov
ljmp
and
bnd
das
pop
mov
out
es
xor
es
rcrb
push
jp
cmpsl
rolb
mov
shlb
dec
rorl
add
xor
fs
std
push
adc
sbb
stos
out
loope
fs
and
or
fs
repz
pop
gs
aam
xchg
cmp
das
add
xor
fidivrl
push
sub
adc
or
ljmp
add
stc
fs
add
les
ficompl
mov
xchg
rcrl
sti
std
add
dec
push
lret
call
repnz
xchg
mov
mov
fimull
mov
lods
nop
sbb
fwait
inc
mov
orps
cmp
sbb
sbb
add
sbb
stos
adc
mov
add
xor
inc
sbb
pusha
pop
dec
stc
and
jo
jle
aad
mov
mov
int3
push
push
sub
test
push
loopne
idiv
inc
mov
punpckldq
scas
lods
pop
popf
or
mov
pop
out
test
cs
ds
push
inc
repnz
inc
rorb
and
adc
or
push
jmp
add
push
insb
mov
add
push
mov
aaa
loop
test
popa
repnz
icebp
inc
in
movsb
add
push
xchg
out
adcb
cmp
adc
cmp
pop
loopne
les
jecxz
out
sbb
dec
xchg
loop
fwait
mov
nop
lahf
aam
mov
xor
pop
bound
fdivl
ss
mov
loope
xorb
push
add
pop
mov
lods
out
mov
sbb
add
pop
mov
test
addr16
add
push
adc
int3
pop
mov
jb
mov
mov
xchg
push
jb
insb
adcb
test
add
call
add
nop
and
or
adc
stos
inc
add
roll
gs
call
sbb
orb
add
fs
mov
pop
push
enter
icebp
pop
test
mov
inc
bound
shrb
lock
imul
lret
movsl
push
test
inc
mov
cli
adcl
addr16
out
dec
mov
lgs
sbb
or
add
es
lods
or
cmp
xor
add
sti
mov
add
cltd
rcpss
or
xchg
mov
je
mulb
pop
mov
insl
adcl
xchg
cmp
roll
inc
sbb
adc
jae
test
shlb
psrlq
pop
rcrl
inc
inc
dec
sub
aam
mov
mov
out
pushf
dec
cmp
mov
and
push
subb
mov
or
sbb
ret
and
cli
dec
sbb
testl
hlt
repz
scas
sub
push
xor
and
mov
mov
sbb
test
mov
xor
sub
or
sbb
mov
inc
sbb
inc
sub
and
sub
jmp
testb
testl
inc
inc
rcll
push
add
push
out
lcall
jmp
in
pusha
xor
or
mov
pop
dec
cld
inc
imul
pop
pop
in
test
shrd
push
add
std
cmpb
in
maskmovq
inc
ffree
sahf
sbb
push
orl
mov
je
ss
rcr
mov
test
inc
xor
add
dec
rclb
in
and
cmp
mov
dec
cs
jo
jne
pop
std
ja
mov
or
ficoms
push
xchg
jecxz
or
and
mov
pop
bound
subb
xchg
add
subb
lods
push
xchg
mov
cld
loope
fcomp
mov
lcall
inc
jg
cld
incl
ret
in
clc
add
or
pop
push
in
loopne
mov
add
cs
ja
inc
cmpsl
sbb
shrl
inc
pop
out
loopne
enter
push
mov
cmp
and
or
imul
andb
mov
add
loope
pop
sbb
fisubrs
mov
xor
sub
outsl
mov
jecxz
sbb
and
sub
imul
les
mov
cmp
push
gs
and
jmp
sub
mov
inc
subl
xchg
lea
adc
pop
add
push
ss
rcrb
mov
rcr
mov
scas
xorb
sar
stos
xor
or
rsqrtps
xchg
iret
incb
fsub
les
adcb
incl
inc
imul
fsubrl
fcompl
sti
mov
movb
fstl
loope
pusha
cwtl
xchg
les
mov
les
add
addr16
sub
mov
xchg
lret
int3
xchg
xor
add
std
mov
rcrb
or
or
sbb
loope
fistps
xchg
push
fstl
cmp
cmpsb
insl
mov
inc
and
pusha
cltd
push
fsubrl
inc
cld
xor
dec
enter
in
rolb
and
pop
out
push
add
dec
add
or
jg
ret
mov
mov
dec
test
and
pop
xorb
loopne
lods
das
push
aaa
pushf
aas
mov
or
cmpb
sbbb
push
or
mov
popa
sub
sbb
or
adc
enter
outsl
jo
mov
inc
pop
outsb
loope
xchg
mov
addr16
sbbb
enter
or
dec
jbe
adc
and
pop
subb
push
push
cmp
inc
testb
lea
and
xor
jecxz
add
mov
inc
fisubrs
xchg
call
cli
orl
jbe
and
push
mov
inc
add
lock
or
inc
push
sub
out
add
jl
sbb
jmp
jmp
mov
and
push
out
push
inc
shlb
dec
ret
cwtl
add
mov
cmc
fistps
mov
and
pop
push
and
js
out
cmpsl
arpl
rcrb
scas
fsubrl
add
sbb
andb
incl
fsubs
fidivs
dec
pop
shl
cmpsl
int
movb
dec
adc
jle
out
jnp
popa
clc
andl
pusha
ret
mov
add
jns
pop
sub
push
sbb
out
pusha
sbb
sbb
add
ret
cld
inc
mov
inc
and
mov
xchg
out
test
incl
lock
or
orl
insl
jecxz
rclb
pusha
clc
outsl
jg
xchg
neg
out
xchg
jecxz
ljmp
rcr
adc
jle
repnz
testl
jo
sub
test
stos
sbb
cmp
pop
or
popa
roll
and
sub
pop
pusha
sbb
addr16
fsts
adc
ljmp
pop
mov
pusha
fcmovnu
dec
mov
and
shrb
pop
andl
jo
dec
add
jle
and
cmp
sbb
call
sub
incb
cld
outsl
and
xor
sbb
inc
lock
dec
pop
push
add
dec
andl
mov
and
out
xchg
les
call
add
pop
in
bound
test
cmp
add
bound
add
loopne
clc
push
and
jmp
lar
sbb
add
jmp
xchg
ss
out
cli
pop
lods
add
dec
dec
lock
or
xchg
movb
adcb
int3
and
clc
ljmp
loop
pop
rolb
adc
inc
add
adc
mov
and
inc
or
insl
add
rcrb
outsl
jecxz
test
xor
mov
gs
pop
mov
in
mov
xchg
ror
ss
inc
xor
fbld
xor
mov
mov
aam
or
fstpt
int3
or
jmp
push
and
lcall
xchg
sti
mov
add
inc
mov
addr16
mov
call
fisubrs
outsb
addr16
sbbb
mov
and
xlat
in
bound
and
loopne
cmp
mov
in
outsl
mov
lods
mov
lock
loopne
xor
or
inc
cli
pusha
adc
mov
incb
addb
jae
aaa
inc
sub
loope
xor
jl
add
lock
int
mov
icebp
mov
push
out
arpl
aas
fdivl
inc
push
rcll
in
repz
and
push
pop
clc
stos
mov
lcall
es
pop
pusha
fcompl
xchg
inc
sarl
stos
rolb
add
jbe
rclb
rcrb
aad
xchg
std
ljmp
sub
aam
test
in
fstl
cmp
mull
pop
mov
add
xchg
mov
add
push
mov
or
jb
insb
adc
aas
xchg
push
sarl
push
push
xchg
push
push
push
inc
test
push
xchg
mov
loopne
clc
xchg
jb
movsl
mov
lcall
xor
inc
or
fisttpll
adcl
mov
add
sub
jbe
mov
jmp
mov
in
xor
sbb
add
fnsetpm(287
inc
lcall
inc
ljmp
and
xorl
add
or
popa
pop
pop
cmc
adc
nop
adc
or
scas
cli
dec
in
fcompl
rclb
adc
daa
rcll
and
inc
sbbb
clts
jmp
or
add
scas
add
cli
nop
sub
push
test
sub
nop
sub
jge
add
add
movsl
call
adc
sbb
data16
ljmp
dec
xchg
loopne
sub
pop
mov
or
sbb
ss
clc
jg
inc
loopne
mov
sbb
sbb
fsubl
add
sub
fcompl
mov
or
mov
xor
in
enter
jecxz
lock
inc
or
xchg
ljmp
pop
sub
inc
andb
bound
mov
test
cltd
shl
dec
in
mov
inc
out
push
clc
loopne
lret
xor
push
or
or
or
dec
int3
in
adc
xchg
jmp
pop
out
shrb
lock
sbb
gs
sub
call
mov
lock
mov
loope
fisubrs
mov
add
sbb
fidivrl
adcb
dec
xor
pop
repnz
push
cld
jmp
sarb
add
aas
and
mov
aaa
fsubs
mov
add
fmull
mov
shrb
aas
pop
mov
ret
out
and
mov
and
popa
rcll
push
jl
push
push
add
sarb
loope
movsb
dec
sub
xor
insb
jmp
pop
jo
push
popa
dec
mov
and
inc
mov
rcrb
adc
sub
and
insb
and
es
sbb
inc
fisttps
add
test
mov
xchg
mov
fstl
inc
sub
jb
cmpsb
shlb
jl
mov
stos
stos
mov
sbb
push
push
notl
xorb
sub
xor
rorb
jmp
adc
or
rorb
out
pop
bound
rorb
ret
sub
cltd
int3
aam
or
popf
rorb
lea
cmp
push
add
insl
cli
aaa
mov
jb
xchg
cmc
idivb
add
xor
or
sub
call
or
add
data16
sbb
xor
adc
adc
adc
lcall
xchg
adc
stos
lods
es
outsl
scas
idivb
arpl
nop
jle
and
dec
xorl
scas
xchg
outsb
xor
cmc
add
mov
add
pusha
add
dec
add
movsb
jo
add
add
iret
lahf
ljmp
adc
scas
int
and
subb
lahf
jg
out
and
add
sarl
iret
jbe
in
jecxz
mov
jae
adc
in
and
mov
xorb
push
mov
jne
cmp
fdiv
test
iret
xor
mov
adc
cmp
loopne
pop
adc
or
push
ficompl
mov
in
outsb
xchg
ret
add
sbb
add
lret
mov
inc
add
xor
sub
push
add
repnz
adc
dec
ret
ret
mov
xchg
inc
xor
adc
push
pop
gs
and
xchg
sti
outsb
call
loope
lock
push
cmpsb
jmp
fistpll
cmpsb
into
rorl
mov
inc
pop
sbb
mov
pop
inc
and
shl
fistpl
sbb
fisubs
xor
pop
add
sub
xchg
or
ret
jl
outsb
or
mov
cmpsl
fistpl
stos
mov
sbb
inc
nop
lods
addr16
rorb
mov
ja
dec
cmp
call
mov
sbb
lcall
insl
jmp
adc
lcall
push
sub
jecxz
inc
pop
xchg
sbb
xchg
xor
jo
inc
ds
ror
fidivl
les
scas
mov
mov
inc
das
mov
test
add
push
sar
add
mov
push
add
sub
mov
push
pusha
fildl
daa
add
add
test
adc
movsb
data16
and
push
aam
test
icebp
mov
add
clc
orb
rolb
mov
mov
inc
add
sarb
fidivl
std
mov
insb
popa
add
dec
push
xchg
push
add
sbb
push
xchg
and
addb
jle
push
aaa
push
mov
mov
pop
sub
add
pop
fwait
test
ret
hlt
stos
stos
sbb
fcomi
or
cmpps
and
fwait
js
jmp
cmpsb
shrl
mov
pop
negl
arpl
insb
push
cmc
pop
dec
xchg
orb
call
in
lods
adc
pop
lds
inc
xchg
add
inc
dec
cmp
xchg
inc
xchg
add
fildl
test
jbe
inc
adcb
push
inc
out
ficoml
ret
sub
insb
xor
inc
cmc
or
mov
and
add
inc
orl
push
inc
test
add
push
sbb
inc
lods
mov
mov
out
or
sbb
mov
in
fldt
in
jecxz
add
or
jecxz
testb
out
shrb
ret
aaa
push
fsubrs
pop
shlb
rcrb
cli
dec
push
and
add
mov
in
push
or
add
mov
or
fs
and
adc
scas
ror
nopl
jo
mov
or
stos
out
test
testb
mov
push
and
push
push
inc
testl
rorb
out
add
cmp
add
mov
jecxz
and
and
aam
lret
mov
mov
xlat
int3
xorb
imul
inc
adc
sub
sbb
pop
adc
jle
mov
arpl
mov
xchg
or
inc
xor
jmp
rol
sub
xchg
cmp
xchg
into
push
inc
cmc
ja
rolb
mov
sbb
or
dec
fisubrs
mov
clc
add
shlb
jle
mov
outsb
das
js
push
push
sbb
push
sbb
add
inc
add
pop
inc
or
lcall
inc
and
push
mov
sti
jb
mov
mov
sarb
add
add
inc
or
sub
fadds
xor
mov
ret
repz
repz
add
scas
sub
add
inc
dec
cltd
sub
mov
inc
lret
ret
rolb
nop
push
insb
add
in
push
adc
movsb
fdivrl
inc
aaa
add
je
cmp
notb
sbb
test
pop
mov
call
or
lret
loope
fisubs
inc
shlb
push
or
rorb
and
sbb
and
mov
xchg
lock
ret
adc
loope
pop
adc
popa
dec
jle
scas
ja
adc
mov
dec
pop
call
adc
push
addb
pop
jge
fiaddl
sub
pusha
test
xlat
hlt
cs
adc
or
out
test
sbbl
add
test
out
in
sbb
mul
push
xor
adc
add
pusha
add
sbb
mov
pop
inc
and
das
and
rorb
leave
addb
sbb
inc
and
loopne
pop
test
fists
sub
and
add
inc
pop
xor
and
adc
ffreep
adcl
mov
push
jae
loope
ret
jnp
pop
inc
add
lahf
xchg
push
pop
mov
sub
sub
pop
sbb
cld
outsl
and
or
mov
mov
pop
xchg
and
je
cmp
in
cmpsl
loope
ret
push
push
mov
fs
icebp
das
mov
popa
subl
das
mov
dec
push
mov
sub
inc
popa
or
shlb
jl
pop
scas
push
aaa
popa
pusha
pop
mov
or
push
stos
or
scas
or
rclb
or
adc
into
push
incl
pop
lcall
or
std
lods
pop
lock
mov
repnz
xor
sahf
jmp
and
mov
inc
adc
loopne
inc
and
dec
outsl
jmp
add
xchg
or
and
or
and
xor
xor
clc
mov
bound
mov
and
sbbl
imul
add
outsb
pop
fists
loopne
addl
mov
imul
inc
psrlw
nop
adc
repz
shrl
loope
inc
shlb
and
inc
and
incb
dec
or
add
cmovp
add
add
mov
xchg
aaa
lods
ret
add
aaa
iret
pop
sub
pop
fld1
mov
sbb
out
sbb
jle
subb
dec
pusha
push
repnz
iret
pop
mov
xor
add
cmp
ljmp
or
xchg
orl
leave
xchg
jns
filds
in
lret
add
pop
loope
movb
or
shufps
shll
mov
cltd
std
push
or
sbb
inc
loop
xlat
adc
in
mov
add
jecxz
pop
ljmp
push
push
sbb
ss
add
sbb
fsubl
call
and
push
mov
push
push
xor
adc
dec
dec
fs
es
sbb
repnz
test
mov
sub
push
cmpsl
fimull
sar
imul
jb
bnd
adc
rclb
call
mov
movsl
jo
lea
lret
add
decl
insb
rorb
adc
mov
adc
xor
or
movups
add
or
mov
bound
and
gs
xor
add
xor
out
or
pop
cmc
mov
cmpsl
push
mov
bound
fbstp
adc
out
lds
xor
adc
push
mov
or
lock
pushf
pop
xlat
adc
jmp
out
sahf
sub
dec
push
jno
and
insb
addl
rcr
jg
xchg
or
mov
pop
dec
push
xor
rorl
lock
push
movsl
add
push
aam
sbb
in
add
adc
push
mov
mov
sub
mov
dec
and
xor
mov
es
sbbl
ficoml
lret
sarl
enter
mov
xor
xchg
ret
and
push
enter
xchg
loopne
rcr
add
push
in
nop
bound
data16
xor
inc
adc
inc
adc
imul
mov
adc
hlt
pop
push
jb
inc
or
add
nop
adc
inc
adc
inc
std
das
and
and
pop
and
adc
rorb
and
movsl
add
inc
ds
or
push
cmpsl
sub
sarl
daa
sbbb
xor
mov
aaa
ret
xchg
pushl
add
pop
push
sbb
sbb
stos
lock
in
push
ret
add
mov
and
push
dec
les
lcall
divl
push
pop
mov
jecxz
and
addb
inc
mov
ja
mov
and
inc
lcall
mov
sbb
push
addb
clc
jl
push
leave
mov
inc
mov
lock
rcrl
stos
dec
push
xlat
jo
mov
mov
pop
mov
in
add
sub
add
in
mov
cwtl
lock
in
cmp
adcl
or
leave
mov
leave
pop
adc
push
aaa
mov
lock
xchg
inc
inc
push
cltd
ljmp
push
mov
xlat
jecxz
xchg
sub
push
inc
je
xor
mov
inc
cmp
outsl
fadds
insb
repnz
ljmp
cmpsb
lock
add
mov
jle
stos
inc
mov
and
pushf
xchg
cld
into
xor
aam
cmpsb
jmp
adc
lock
xchg
jecxz
bound
sbb
in
lea
fwait
loop
inc
loopne
inc
add
roll
ljmp
and
xor
andb
je
data16
cmp
addl
xchg
es
test
mov
push
outsl
movsb
rcl
mov
idivl
add
clc
mov
loopne
shl
nop
sbb
ss
push
xcrypt-cfb
cmpsl
in
add
add
scas
dec
fadd
scas
push
aaa
sbb
ljmp
nop
mov
loopne
adc
mov
inc
mov
adc
push
cltd
inc
pop
mov
fildl
adcl
mov
insl
add
dec
insl
outsl
out
or
stos
sbb
scas
or
das
push
adc
int3
sub
inc
mov
mov
inc
mov
sti
repz
mov
fimuls
sti
out
sti
sbb
out
jmp
out
subb
xor
loopne
add
sbb
cmp
cld
pusha
xor
out
cmp
outsl
push
sbb
mov
inc
mov
mov
or
mov
mov
ds
or
jo
sti
xor
mov
xchg
cli
in
fisubrl
test
push
push
mov
call
addb
or
or
and
addl
sub
jg
cli
sbb
fs
pop
adc
ds
in
or
insl
imul
sbb
stos
adc
sbb
xlat
inc
dec
decl
loope
sub
xor
dec
pop
mov
call
fsubrs
mov
stos
mov
adc
xlat
sahf
sub
test
adc
push
in
or
pop
ret
fmuls
scas
loope
or
outsl
in
adc
push
mov
adc
cmp
das
or
cmp
mov
inc
sbb
push
lods
dec
jne
int3
ret
jmp
icebp
adc
push
fistpl
xor
and
ds
faddl
jo
cmc
sub
fs
xlat
jp
mov
xor
or
sub
add
insl
in
add
or
or
movsb
push
xor
in
or
pop
cmp
xor
add
mov
or
cmp
pop
icebp
jge
sbb
lds
adcb
insb
ljmp
movsl
insb
push
faddl
dec
mov
insl
lcall
enter
in
pavgw
es
pop
adcb
es
in
stos
sbb
add
pop
xor
in
and
jp
fwait
xorl
sbb
shrb
xchg
arpl
cmp
in
sub
call
mov
mov
div
push
or
mul
xchg
repz
loope
mov
imulb
push
lcall
fidivs
or
icebp
inc
out
test
cmpsb
inc
outsl
data16
stos
negl
xlat
call
push
adc
add
push
jo
push
jp
adc
mov
mov
or
clc
pop
and
dec
push
and
adc
in
inc
jmp
or
outsl
jmp
xchg
adc
insb
sub
pusha
mov
shr
cmp
sub
mov
and
push
push
inc
and
data16
sbb
sub
lret
insb
testl
jecxz
ss
mov
add
ljmp
hlt
mov
ljmp
dec
sub
mull
mov
bound
jmp
xor
adc
or
shlb
inc
and
or
hlt
outsb
and
rorb
xor
jno
push
inc
and
imul
shll
in
add
je
xor
hlt
fildll
addb
leave
ret
in
mov
in
loopne
das
aad
sub
fs
pop
add
or
shr
inc
add
outsb
add
jmp
nop
sbb
sbb
aam
or
decl
sub
xor
lock
cli
and
call
movsb
mov
daa
pop
xor
adc
decl
fbstp
mov
and
mov
xor
shrb
clc
mov
ret
sub
sarb
dec
and
sub
fisttpll
adc
pusha
in
cltd
push
dec
loopne
and
push
cld
outsl
xchg
in
or
loopne
or
xor
sub
test
outsl
repnz
mov
xchg
jmp
add
leave
cmpsb
or
adc
adc
adc
lods
call
and
call
lahf
add
mov
jo
loope
stos
call
pop
orl
xchg
ret
cmpsb
cmc
add
rorb
xchg
int3
and
mov
dec
addb
or
test
getsec
xorl
push
xchg
add
xchg
fistpll
lea
lcall
cld
call
mov
add
repz
add
scas
jmp
sub
shlb
andb
pusha
adc
jg
in
mov
rorl
inc
add
and
and
and
stos
stos
pmulhuw
smsw
shll
rorb
out
ss
and
rorl
int
add
jmp
pop
sbb
or
loope
loopne
add
ss
call
or
sub
cld
aad
mov
sub
push
mov
inc
mov
jmp
push
inc
xor
loopne
insb
std
call
cld
fsubrl
nop
lock
divb
int3
es
loope
out
inc
lcall
loopne
daa
pusha
or
mov
mov
mov
dec
mov
bswap
jp
pop
out
mov
call
pop
jg
push
and
or
dec
pusha
sbb
incl
xchg
mov
add
push
adc
roll
and
loop
add
mov
sbb
andb
scas
mov
loopne
sahf
repnz
fadds
pusha
or
inc
mov
adc
mov
mov
sub
or
aam
pop
or
xor
mov
aad
xchg
mov
loope
add
dec
sti
xchg
orl
pusha
push
pusha
xchg
ss
or
out
sub
addb
mov
ljmp
xchg
loop
pop
xchg
add
pop
push
jmp
ucomiss
insb
loopne
test
or
mov
adc
mov
frstor
sbb
ljmp
negl
push
add
fisubs
cltd
cmp
mov
push
lcall
jno
pop
cli
inc
in
or
out
sbb
test
rorb
cld
mov
mov
fisubl
loope
or
pop
scas
adc
push
loope
add
imul
hlt
add
dec
inc
fnstsw
shrb
push
scas
push
cwtl
cmp
push
ret
push
rclb
mov
sarl
jecxz
pop
or
pusha
mov
add
clc
add
out
xchg
adc
xchg
cld
push
dec
mov
arpl
fdiv
hlt
loop
and
add
jmp
out
cmp
cs
or
loopne
repnz
rorb
lret
mov
add
nop
mov
add
xor
and
lds
push
fcomip
outsb
or
repz
rcrl
popa
inc
lock
xchg
mov
inc
inc
loope
inc
sbb
andl
pop
inc
dec
dec
pop
and
nop
xchg
xchg
icebp
aaa
fidivrl
add
and
pushf
repnz
add
adc
lods
fadd
pop
sbb
push
ds
icebp
add
test
jo
ret
push
adc
or
test
inc
mov
pop
add
repz
pop
mov
dec
arpl
xlat
push
rorb
add
sub
push
bound
pop
sub
mov
xchg
shlb
mov
sbb
mov
pop
xchg
loopne
mov
call
ljmp
ret
sub
dec
pop
enter
rcrb
test
bsf
call
outsl
cmp
push
fs
insl
repnz
jecxz
pop
jmp
jb
ljmp
loop
adc
or
icebp
or
mov
jno
jb
ret
pusha
fsubrs
hlt
adcb
test
dec
popa
jnp
movsb
imul
nop
mov
mov
aam
or
gs
stos
push
loop
push
xchg
jmp
nop
jnp
jmp
daa
mov
pop
into
ljmp
cmpb
adc
and
inc
add
insb
inc
dec
out
add
jg
or
xor
not
and
pop
call
pop
and
mov
jnp
sbb
add
sbb
fwait
mov
lock
lock
movsb
out
push
dec
pusha
inc
lock
decb
and
ficoml
nop
jp
adcb
subl
ret
orl
sbb
mov
aad
add
shl
mov
mov
bnd
lahf
sub
sbb
mov
adc
lock
cmpsb
aam
pop
test
out
cmp
ret
jecxz
in
jmp
pop
cli
ret
sbb
add
fisubs
fwait
dec
rolb
ss
aam
mov
xchg
loopne
xlat
outsb
xchg
jecxz
pop
add
outsb
fldcw
jecxz
push
xorl
insb
out
in
xor
push
bound
push
push
and
xor
icebp
push
mov
or
or
insl
fimull
lret
and
int
adc
add
rolb
jbe
pushl
xor
add
adc
fwait
xor
and
and
add
lock
push
imul
xor
adc
push
mov
cmp
pop
loop
rclb
ret
cmp
aam
push
outsl
xor
cmpsl
mov
js
pop
push
xor
mov
lret
pop
adc
je,pt
insb
fbstp
aad
mov
xlat
in
jmp
pop
sub
loope
xor
iret
sub
in
xchg
fists
push
mov
inc
mov
notl
and
and
or
fs
je
or
packuswb
adc
adc
mov
inc
int3
cli
xor
dec
cmpsb
mov
test
mov
filds
pop
sbb
jb,pn
sbb
outsb
mov
or
xchg
adc
mov
fdivrs
push
rolb
cltd
iret
insb
push
mov
das
nop
jno
sbb
out
xchg
mov
fmuls
push
or
or
cld
pushaw
pop
add
fdivr
and
push
adc
jbe
sub
shlb
mov
rcrb
push
je
outsb
loope
mov
rcrl
outsl
nop
sbb
lcall
nop
or
addr16
test
pop
xorb
lods
or
mov
sub
lock
pop
push
movsb
lret
cmpsb
in
xchg
add
mov
aas
out
or
xor
int3
cmp
mov
cmp
loopne
xor
loopne
ret
adc
xor
dec
adc
repnz
orl
add
push
pop
cld
nop
add
xchg
sub
adc
add
inc
loopne
lock
fwait
incb
pop
enter
addb
mov
add
test
jle
rclb
or
mov
jecxz
fwait
add
testl
adc
jg
cmpsb
pop
cwtl
mov
cmp
inc
mov
mov
sti
push
sti
mov
add
nop
pop
enter
sub
add
sub
filds
adc
ret
loopne
mov
clc
fcomi
add
push
push
jmp
add
out
movl
xor
xchg
jecxz
dec
movsb
notb
push
roll
sahf
mov
fdivrp
ret
dec
push
out
int3
cmovns
rclb
mov
stos
test
inc
inc
inc
mov
dec
push
xor
mov
add
decl
or
push
insb
jmp
sub
push
add
push
ljmp
fists
add
pusha
add
lcall
sbb
nop
jbe
cmp
mov
add
mov
andb
xchg
inc
add
xlat
mov
aam
popf
xor
cmp
leave
movb
dec
xor
mov
push
pop
push
nop
add
and
icebp
sub
xchg
or
jo
add
movl
lret
cld
aad
addr16
repz
jmp
je
sbb
fbstp
mov
filds
mov
and
and
dec
test
mov
outsl
das
mov
pop
cli
cmpsl
test
adc
scas
pusha
pop
inc
pop
out
adc
push
sti
inc
inc
xor
adc
push
mov
das
adc
sti
nop
jne
std
decl
rol
adc
movsb
shll
pusha
sbb
addl
fstpt
lds
ja
or
jge
jb
mov
and
fsubrl
mov
sub
pushl
or
jae
add
and
fisubl
inc
ret
loopne
mov
out
clc
mov
rorb
push
pusha
xadd
ret
jmp
mov
loope
dec
out
add
stos
add
out
pusha
cmp
xor
nop
mov
add
fisttps
es
push
push
js
or
jg
or
mov
xor
mov
xchg
cmp
decl
js
adc
push
xchg
js
icebp
pop
push
rcl
ds
adc
lods
test
push
les
into
notb
les
sub
cwtl
ret
add
sub
in
mov
mul
add
jle
rorl
jl
in
sti
adc
push
xor
insb
ljmp
test
sub
insb
bnd
dec
inc
push
push
adc
movsl
iret
and
adc
push
add
outsb
test
or
adc
or
movsb
rcrb
mov
movb
sub
lock
insb
adc
and
inc
loop
add
insb
pop
mov
iret
in
push
xchg
int3
and
or
cmpsb
dec
pop
addb
xchg
mov
rcrb
ja
outsl
ret
add
and
and
add
lock
adc
sub
andb
pop
testl
movl
mov
sbb
pop
js
xorl
sub
xchg
out
aaa
inc
hlt
subb
add
es
repz
mov
push
fdivl
insb
xchg
cli
aaa
push
push
jle
insl
adc
sbb
inc
push
pop
mov
push
adc
lods
mov
push
xchg
add
ret
sub
iret
mov
fcompl
push
mov
addb
cli
sbb
inc
fs
ljmp
outsb
add
cwtl
sbb
adc
mov
add
xor
push
test
xor
rorb
push
or
xor
sbb
mov
rorb
sub
fmull
adcl
add
or
push
pusha
loopne
mov
add
dec
pusha
imul
adc
mull
scas
push
jle
mov
pop
arpl
adc
mov
aad
push
or
test
dec
mov
xor
out
nop
push
sahf
or
and
or
jb
cs
inc
inc
jbe
cwtl
cmpsb
cmc
stos
mov
add
xor
movsb
ficomps
cmp
imul
mov
add
or
cmp
jg
in
push
xchg
sbb
sbb
add
fmulp
sbb
xor
sub
pop
icebp
inc
pop
sbb
enter
add
out
mov
inc
xchg
xchg
sub
jbe
out
cmp
aam
sub
or
adcl
add
push
cmove
pop
roll
add
or
push
outsb
roll
pushf
mov
les
pop
int
xchg
inc
push
and
or
mov
in
pop
add
pop
fcoml
insb
lret
and
fcompl
jge,pt
inc
jl
and
or
and
fisubs
icebp
ljmp
cmpb
inc
xor
out
les
xor
fbld
stc
mov
mov
sbb
stos
subl
js
inc
enter
ja
clc
popa
loopne
cld
aam
inc
add
mov
inc
lret
out
outsb
lcall
jb
mov
mov
out
cmovge
sarb
adc
cmp
movb
rolb
test
push
dec
or
popl
std
aaa
stos
adc
mov
subb
or
loopne
adc
pop
loope,pn
cmpl
dec
test
aad
inc
fistpll
adc
sarb
movsl
mov
pusha
mov
dec
and
add
add
xorl
scas
fnstenv
std
jg
fisubrl
jl
subb
fmull
mov
dec
mov
testb
add
enter
dec
and
js
bound
fnstsw
dec
xlat
enter
cmp
fidivl
test
mov
in
jbe
inc
mov
mov
pusha
packuswb
inc
cmp
mov
dec
add
pop
or
and
and
outsb
mov
outsl
and
mov
xorb
sti
dec
xor
movsb
adc
sub
fnsave
inc
sub
xor
jmp
mov
cmpb
ljmp
cmp
rcl
pusha
or
hlt
push
lret
push
addl
and
lea
insl
adc
mov
lea
push
mov
adc
add
mov
test
loop
sbb
test
and
test
jecxz
mov
or
sbb
ficoml
clc
mov
stos
stos
or
mov
inc
or
push
lock
inc
mov
mov
push
and
scas
movsl
adc
mov
and
mov
jo
aas
add
or
sub
pop
jle
imul
ficompl
psrlw
aam
lds
jb
mov
adc
test
pop
sbb
mov
push
fwait
push
xor
lret
shr
or
sbb
cmc
pusha
test
out
or
xchg
push
hlt
pop
or
add
sbb
mov
inc
sub
add
ret
or
dec
loopne
adc
cmp
or
repnz
inc
arpl
push
add
pusha
sbb
jo
es
jg
addl
pusha
or
cli
outsl
incl
add
fsub
add
mov
cmp
jl
enter
add
add
mov
lds
hlt
jbe
outsl
inc
inc
adc
rcr
pusha
aas
pop
pop
add
jne
sub
push
clc
inc
sub
xchg
adc
js
insb
les
cld
or
mov
and
orb
movsb
incl
add
out
enter
push
fs
add
roll
or
and
mov
shl
and
cmp
mov
add
scas
enter
xor
mov
push
xor
xchg
orl
loopne
xchg
scas
and
test
inc
xor
dec
rcrb
add
fsubr
outsb
mov
in
test
pop
outsb
push
push
sar
loope
mov
pop
and
or
imul
sbb
and
sbb
jecxz
sarb
cs
or
add
or
orb
lods
add
lret
inc
mov
add
mov
or
add
mov
add
add
rolb
ljmp
insl
lods
call
ret
push
inc
das
pop
mov
cwtl
adc
cmpsb
int3
mov
cmp
pmullw
or
daa
add
sarl
setb
adc
pushl
add
pop
addr16
dec
loopne
ds
adc
dec
lcall
cmp
sub
repnz
mov
iret
inc
sbb
cmpl
push
adc
fcoml
inc
sub
adc
ljmp
and
xor
mov
inc
mov
add
sub
ljmp
and
inc
xor
jecxz
clc
inc
jmp
inc
je
add
not
xor
push
movsb
subb
sbb
fs
dec
in
shrb
inc
gs
aas
or
and
mov
mov
dec
pushf
mov
or
nop
add
and
pop
add
add
das
ficoms
out
movsb
decb
sbbl
or
xorb
adc
in
dec
sbbb
fadd
push
dec
pushl
pop
fiaddl
aas
sbb
inc
adc
add
mov
test
and
add
or
and
push
push
inc
jp
inc
jo
mov
orb
int3
sbb
shrb
aas
fdivrs
cmovg
push
js
adc
and
xor
rcll
nop
hlt
or
outsb
rcrl
fildll
mov
adc
lock
cli
dec
aad
and
jg
aam
fisubs
test
insl
movsb
push
jo
cltd
mov
call
cmp
xchg
in
adc
or
push
ss
and
mov
adc
shlb
sti
sbb
or
out
nop
jbe
pop
icebp
gs
and
popf
mov
shll
add
mov
ret
pusha
and
shrb
mov
cld
decl
or
or
adc
ret
nop
add
scas
call
mov
ss
loope
mov
add
fsubr
add
loopne
daa
lret
add
lock
and
and
add
nop
or
pusha
mov
faddp
add
mov
jge
mov
psubw
jno
sbb
jb
add
push
pop
add
dec
cmpl
inc
and
shll
push
dec
rolb
mov
andb
jbe
sub
adc
arpl
push
push
incl
into
mov
mov
add
out
sar
or
sbb
rorb
cwtl
and
xor
add
xchg
sbb
je
push
loopne
fwait
cmp
push
mov
shll
push
int3
test
push
dec
pusha
pushl
push
push
or
fldt
sgdtl
iret
or
and
xchg
icebp
aaa
xchg
adc
add
and
int3
mov
sarl
add
push
fs
or
or
jnp
add
in
mov
pop
out
punpckldq
add
popf
filds
inc
in
outsb
fbld
xor
add
andb
loop
sbb
push
and
cmp
mov
add
mov
adc
xchg
ljmp
xchg
loope
fistl
and
pusha
inc
jge
add
push
add
addl
push
loope
adc
inc
and
int3
xchg
cmp
push
test
lea
xchg
std
data16
adc
dec
lea
or
push
sbb
decb
aas
mov
xchg
or
loopne
ror
bound
lea
sub
push
xchg
cmovnp
sti
fildll
cmp
push
sbb
and
mov
les
das
clc
inc
out
loope
mov
sbb
inc
pop
mov
lret
test
stos
inc
sbb
inc
fs
and
test
fisubs
xchg
mov
xchg
pushf
pop
sbb
dec
outsl
lock
xor
xor
add
ds
xchg
mov
cmp
out
jb
push
ljmp
lcall
dec
ljmp
push
popa
pusha
or
sti
mov
int3
cli
push
add
fildl
add
outsb
mov
adc
xchg
add
insl
popa
or
adc
movsl
mov
or
inc
loope
inc
xchg
pusha
es
or
les
test
add
push
rolb
roll
push
adc
add
fwait
enter
ficoms
pop
jne
sbb
push
sbb
std
jg
loopne
aam
loopne
jp
stc
popa
popa
ds
mov
shlb
mov
setno
adc
add
decl
sbb
sbb
sbb
arpl
insb
cwtl
inc
outsb
enter
and
mov
lea
cmp
xchg
lods
dec
lahf
mov
lret
jo
cmpsl
shll
aam
or
xor
bound
push
cld
sbb
nop
pop
xor
loopne
push
and
mov
lret
xorb
movsb
adc
addr16
xor
jp
inc
es
xchg
add
mov
mov
fidivs
adc
movsb
iret
mov
adc
pop
fwait
lea
adc
push
adc
stos
mov
mov
or
pop
nop
add
sbb
mov
lds
fwait
push
add
leave
into
xor
push
dec
xor
lock
fiadds
push
xlat
sub
mov
ljmp
mov
cs
mov
xchg
push
mov
lret
or
lock
mov
movl
outsb
mov
adc
outsb
stos
loope
lds
add
or
and
inc
jo
and
loopne
in
cltd
clc
and
pusha
add
in
add
cmp
mov
or
adc
jecxz
dec
icebp
stos
dec
and
inc
jae
cmp
jo
cmc
inc
mov
xchg
add
xchg
push
sub
cmp
and
adcl
popa
add
add
inc
jnp
subl
sub
cmp
cltd
add
stos
subl
xchg
jmp
adc
and
add
add
repz
and
mov
sti
mov
sub
out
int3
aad
ficoms
or
adc
add
or
out
lret
repnz
cmp
fcoml
or
mov
pop
push
shrb
je
mov
add
adc
inc
ret
mov
add
jmp
dec
and
adc
push
addl
push
dec
mov
inc
push
lret
xchg
iret
mov
pop
testb
sub
add
adc
push
cli
call
xorb
mov
addb
and
addb
ret
cmp
stc
add
addl
inc
xchg
rclb
mov
mov
add
mov
add
out
movsb
in
test
inc
cmp
dec
xchg
int3
nop
mov
push
sbb
xor
mov
call
sbb
sub
mov
sub
stos
pop
sub
fdivrl
adc
ret
sub
pop
mov
mov
inc
xchg
aam
mov
or
out
push
nop
and
and
addl
mov
fimuls
notl
xchg
lcall
inc
insb
inc
addb
inc
nop
shrd
andl
mov
or
cld
xchg
inc
sbb
test
sbbl
ret
rcl
xchg
movsl
add
jg
mov
inc
insb
movsb
repnz
out
add
sbb
inc
adc
inc
andb
inc
inc
adc
inc
and
inc
or
ljmp
jl
jg
adc
pinsrw
movsl
mov
dec
cmp
ds
xchg
dec
test
inc
shlb
repnz
nop
xchg
dec
mov
sbbb
mov
ss
sub
int3
sar
or
dec
test
adc
pop
leave
add
pop
add
pushf
jmp
lock
add
adc
sbb
add
add
das
les
out
data16
or
adcb
outsl
push
cmp
adc
fwait
add
mov
cmpsl
add
add
pushf
mov
add
aas
push
cld
or
mov
pop
dec
sar
insb
xor
inc
add
mov
jecxz
xorb
adc
and
or
and
add
add
mov
mov
pop
mov
inc
add
or
in
daa
mov
movsl
mov
mov
push
adc
and
ficoml
dec
int3
and
adc
add
mov
testb
mov
xorb
add
mov
jecxz
fnstcw
lea
loopne
add
push
cmp
cmp
mov
add
outsb
cwtl
sbb
scas
add
xchg
loopne
fildl
inc
mov
cmpsb
xchg
icebp
sub
in
jmp
add
movsb
test
push
outsb
sbb
incb
addl
mov
push
addr16
enter
jmp
ja
ficoml
rorl
loopne
pop
mov
stos
mov
es
adcb
in
dec
clc
jb
daa
arpl
add
adc
sub
xchg
add
jle
sub
sbb
xor
or
popa
adc
sbbb
pop
mov
fstpt
push
push
inc
mov
push
insb
mov
push
dec
push
or
loop
xchg
mov
push
loopne
lcall
xor
nop
lea
xor
jmp
shrb
aaa
adc
mov
xchg
add
mov
push
pop
pusha
mov
setg
and
pop
push
mov
fisubl
pusha
popa
or
inc
pop
and
loopne
ret
in
insb
lea
arpl
dec
daa
sahf
in
or
decl
push
inc
xchg
cmc
mov
or
inc
xorb
sub
sub
enter
mov
mov
jl
mov
adc
add
lods
push
into
pusha
sbb
ret
outsl
push
incl
adc
pusha
xor
jecxz
inc
xchg
call
sub
xchg
dec
test
je
adc
add
mov
or
pop
inc
scas
in
and
cwtl
cmp
push
mov
push
inc
dec
cmp
ljmp
or
ret
inc
inc
mov
and
inc
push
insb
bound
std
mov
rorl
roll
outsl
ret
or
sub
push
and
pop
lods
ja
inc
in
xor
movsb
rorb
or
jp
daa
dec
orb
or
jg
movsb
sbb
adc
add
int3
and
push
jb
and
xchg
xchg
mov
sbb
notl
jbe
das
jmp
ss
ds
add
sub
push
movsl
cmpb
and
push
jb
and
add
xor
loopne
stos
hlt
nop
scas
inc
adc
aad
ud0
jnp
and
jle
push
cmp
test
adc
add
cmp
mov
adc
incl
fdiv
mov
in
xor
and
mov
sub
adc
cmp
sbb
mov
lret
arpl
pop
lods
sub
scas
and
shr
xchg
pop
inc
lock
or
pop
lret
test
les
daa
mov
add
xchg
xor
hlt
pop
dec
and
insb
mov
push
push
test
fsub
add
and
or
cmp
pop
mov
xor
and
insb
ds
xchg
xor
or
sbb
sub
cmp
lock
jl
lcall
lock
dec
mov
adc
xor
adc
pop
mov
pushw
inc
add
jecxz
clc
adc
int3
in
push
loope
insb
mov
lcall
call
outsl
lock
add
add
add
icebp
or
lea
call
shlb
jae
adc
and
pop
sbb
mov
or
push
adc
lds
decl
loop
mov
cli
jo
lock
dec
jg
das
sbb
outsb
inc
mov
sbb
pop
adc
mov
and
mov
nop
incl
add
pusha
fwait
sbb
das
notb
add
add
femms
inc
adc
dec
and
test
add
lods
inc
push
mov
adc
in
push
mov
xchg
out
xchg
mov
add
mov
stos
cs
scas
test
pop
adc
cld
mov
mov
sub
mov
xor
xchg
jecxz
fs
test
adc
decl
lock
ret
gs
jl
add
fs
lcall
xchg
pusha
inc
pop
add
outsl
movsb
lcall
std
mov
inc
nop
lods
xor
scas
sub
cmp
sub
push
pop
hlt
push
push
idivl
sbb
shrl
pop
loopne
inc
cs
aaa
add
xor
adc
mov
add
adc
adc
in
push
pop
pusha
ret
xor
inc
sahf
and
mov
add
jle
aam
or
cmc
in
sub
mov
sbb
inc
push
pminub
dec
jmp
sbb
repz
fwait
std
sbb
jle
scas
mov
jb
in
fsubrl
add
int
ljmp
movzbl
add
andb
mov
ss
xchg
or
lock
in
or
popa
test
cmpsb
add
pop
cli
jg
imull
add
stc
aam
mov
sbb
dec
stos
or
push
xchg
jecxz
cmpsb
test
xor
fwait
push
outsb
ljmp
js
inc
popa
add
push
cwtl
push
mov
and
cmpsb
pop
add
adcb
pop
sub
xor
aam
adc
jmp
adc
add
ss
adc
stos
and
and
movsl
mov
cmp
mov
push
add
add
add
adc
lcall
jb
out
push
cmpsb
jecxz
stos
adc
out
mov
xchg
xorb
nop
and
sar
mov
push
xchg
or
xchg
insb
ljmp
jg
aam
xor
test
insb
das
lret
loopne
nop
mov
and
outsl
adc
insb
jmp
xchg
add
add
or
in
aam
push
ret
fnstsw
mov
sbb
inc
pop
loopne
add
dec
call
call
pop
cmc
nop
popa
xor
jo
test
repnz
loope
jmp
push
test
xchg
mov
inc
dec
nop
and
incl
ret
les
stos
addl
jo
sbb
cli
mov
ljmp
pop
shlb
inc
xchg
stos
hlt
add
stos
push
jae
mov
mov
sbb
out
movsl
lcall
cltd
rclb
mov
dec
push
shlb
and
sub
and
test
mov
rolb
int3
sbb
pop
inc
std
das
mov
jbe
insb
int3
int3
and
mov
dec
xor
lock
std
xor
pop
ret
add
es
shll
push
icebp
call
xor
and
sarb
cmova
add
outsb
nop
mov
sub
filds
cld
cmp
fimuls
enter
cmp
mov
or
lock
add
sbbb
mov
movaps
ds
addb
mov
loopne
stos
lock
xchg
add
adcb
jl
lock
or
orb
sub
pop
sbb
add
pop
pop
out
test
das
faddl
das
cmp
add
adc
mov
push
mov
xchg
pusha
mov
test
xor
lahf
and
mov
xor
xchg
mov
cmpsb
adc
jno
jo
js
push
mov
push
loope
test
lcall
shrb
bound
andb
daa
sbb
or
cltd
adc
out
jmp
cmp
mov
out
fs
add
loopne
ret
rclb
pusha
xchg
or
cmp
pusha
add
loope
push
sti
cmp
aam
testb
and
out
loopne
pop
in
and
push
movsb
andb
pop
cmp
pusha
add
mov
repnz
stos
add
xchg
pop
xchg
in
inc
test
aam
pop
push
clc
add
inc
add
clc
xchg
xchg
add
mov
mov
add
or
xor
rolb
data16
xor
decl
repnz
testl
pcmpeqb
adc
jno
xchg
roll
out
inc
mov
jecxz
dec
aad
add
add
add
cmp
xlat
jg
pushf
xchg
test
add
jo
and
loopne
adc
loopne
cli
dec
mov
fildll
shrb
xor
lock
test
repz
add
fimuls
mov
test
dec
add
push
xor
sub
adc
nop
and
aaa
push
and
pushw
into
mov
mov
mov
lret
pop
nop
mov
es
add
and
mov
clc
or
std
lea
inc
ret
in
jnp
and
and
push
mov
adc
nop
and
fistps
mul
push
inc
out
sbb
mov
popa
mov
push
add
mov
add
adc
add
add
add
int
faddl
push
incb
cmp
scas
rolb
sbb
mov
sub
xchg
mov
sub
in
sbb
fcomps
mov
sbb
fisttpl
insl
mov
and
iret
int
incl
data16
or
add
xchg
jecxz
outsb
in
mov
ds
std
addr16
sahf
mov
xchg
add
mov
js
mov
addb
sar
ret
outsl
nop
jnp
testb
addl
lea
push
inc
sub
push
fidivl
mov
addl
xchg
or
cmpsb
cwtl
inc
add
inc
pop
or
adc
jae
inc
dec
sbb
and
xchg
in
ret
adc
mov
insl
or
mov
dec
fst
in
mov
jne
cmpb
inc
and
xchg
cli
ret
adc
pusha
inc
ss
divl
sub
rcll
fistl
rcl
movsb
jmp
adcl
cmp
jg
or
rdtsc
nop
sbb
add
sti
cmp
add
daa
add
pop
push
adc
shr
push
mov
pop
pusha
mov
mov
insb
mov
pop
fildll
int3
mov
xchg
or
dec
rcrb
das
add
clc
add
inc
dec
fiadds
inc
das
xor
call
or
dec
popl
inc
mov
or
add
mov
push
incb
mov
or
insb
xor
test
lret
fsubrs
rclb
and
dec
cli
cmc
cmp
mov
and
cs
outsb
inc
inc
jg
inc
fsubrl
cs
add
inc
or
mov
aad
fstl
inc
ljmp
rcll
test
dec
lret
xor
pop
inc
dec
cmp
add
popa
pop
insb
cmpsb
aam
addl
adc
add
mov
pop
std
stos
sbbl
xor
add
and
aaa
lret
jp
sub
xchg
ret
int3
insb
rorl
sub
addb
out
rclb
or
sahf
rol
das
add
subb
mov
nop
xchg
adc
fwait
hlt
push
and
sbb
mov
add
adc
movsb
mov
mov
and
mov
mov
push
bound
jmp
les
xchg
outsl
mov
mov
inc
or
push
iret
and
aas
lods
adc
and
and
push
push
and
decl
loop
in
bound
inc
xor
xlat
adc
push
and
inc
push
push
jo
icebp
jg
add
mov
add
or
out
fildll
xchg
push
add
sub
or
push
inc
jmp
loopne
pop
in
mov
jae
sbb
cmpb
add
cltd
orl
loopne
inc
mov
lds
cli
in
add
pop
fdivrs
sub
loopne
fs
je
std
adc
sbb
or
xchg
loope
loope,pn
inc
xchg
pxor
inc
and
dec
add
mov
fwait
andl
or
or
mov
push
in
inc
xor
bound
inc
mov
jge
fadd
lret
push
andl
scas
cld
stos
pop
dec
cmc
adc
sbb
mov
inc
outsb
aam
sub
popcnt
mov
insl
orl
or
xchg
es
inc
or
adcb
xchg
dec
push
mov
lock
repnz
adc
bound
sbb
sub
push
lret
in
sub
loopne
psubusb
loopne
and
cli
andl
cmp
mov
jecxz
loop
cld
mov
dec
inc
movsb
dec
push
push
fsubrp
mov
lcall
mov
push
or
shlb
adc
pop
add
add
add
movb
sbb
out
rcll
push
das
add
decb
clc
cmp
mov
dec
loopne
cwtl
ror
cli
addr16
scas
xchg
or
pop
fidivrl
pusha
adc
not
or
push
add
push
jmpw
xchg
push
ljmp
out
adc
or
push
adc
inc
clc
out
pusha
adc
cmc
xorb
out
inc
loopne
add
cmp
mov
ljmp
sbb
pop
in
addr16
pusha
or
jl
inc
mov
rorb
mov
inc
jno
fistpl
jl
fs
adc
stos
mov
add
enter
sbb
xorb
xchg
mov
fiadds
ror
mov
call
add
jle
imul
das
adc
std
and
xchg
xchg
push
sti
cwtl
push
push
add
dec
adc
imul
stos
mov
and
xor
mov
push
sub
mov
loop
inc
xor
outsl
or
lret
jbe
adc
inc
testl
add
mov
loop
shll
pop
and
bound
in
jecxz
or
mov
jmp
push
subl
cmpsl
stos
or
das
xchg
mov
jg
add
rep
mov
push
sub
and
xor
add
in
mov
sub
push
jle
call
add
jo
inc
inc
pop
in
aad
orb
inc
fcomps
hlt
or
loopne
push
jg
shlb
arpl
ret
push
ja
into
mov
decl
xor
xchg
inc
mov
add
inc
ret
sbb
jmp
push
add
stos
cltd
mov
dec
cmpsb
test
call
dec
sub
bound
add
aaa
cld
fs
add
fbld
lock
push
and
hlt
lcall
bound
push
add
adc
mov
xchg
test
inc
pop
mov
mov
push
mov
ljmp
xchg
dec
into
adc
test
sarb
push
shrl
xchg
lods
jg
lcall
adc
cmpsb
pop
inc
and
add
mov
and
in
sbb
bound
push
mov
je
mov
push
shlb
dec
loopne
jno
sti
jo
and
pusha
sub
sti
xchg
sub
mov
adc
movsb
stos
fdiv
add
add
lcall
pushl
out
add
pusha
inc
subb
or
sbb
mov
cs
aam
loopne
mov
clc
xor
mov
cwtl
jo
or
outsl
mov
or
xor
rorl
cwtl
cmpsb
jmp
bound
sbb
add
adc
iret
sahf
lods
dec
mov
cmc
inc
jmp
add
ret
adc
out
xchg
jo
adc
sbb
dec
movsl
pusha
mov
adc
push
push
push
je
jg
add
scas
outsl
push
and
push
add
sbb
unpckhps
push
hlt
cmpsl
lret
pop
adc
xchg
andb
mov
ljmp
loop
push
lret
sbb
ffreep
out
xchg
and
sub
push
xchg
mov
and
sbb
inc
add
shr
push
add
adc
fisttps
ja
adc
push
dec
sub
sub
and
sub
imul
cli
add
mov
insl
push
mov
mov
push
nop
add
and
loop
dec
fs
addr16
or
fwait
mov
pop
mov
out
push
icebp
mov
fbstp
pop
js
movsb
mov
outsb
add
mov
lods
lahf
inc
and
fists
and
or
out
or
push
add
add
mov
mov
jmp
push
pop
pcmpeqb
xchg
mov
into
pop
lods
push
add
ret
mov
outsb
jbe
cmc
hlt
movsl
adc
dec
dec
mov
xor
pop
and
jbe
push
outsl
fwait
popa
jnp
mov
xchg
dec
psubw
sbb
add
and
nop
ja
or
es
push
or
add
pop
bound
pop
hlt
mov
push
jl
sti
setb
add
xchg
dec
jnp
adc
test
and
push
into
int3
xchg
mov
les
mov
mov
mov
mov
scas
or
sahf
bound
lcall
cltd
rcrb
rcrb
add
hlt
jo
lcall
add
or
mov
add
mov
mov
push
mov
mov
jno
int3
clc
movsb
adc
popa
rolb
pop
and
xchg
sarb
push
and
outsb
adcl
stos
mov
and
push
mov
pushf
rcrb
jno
lcall
pushf
lea
rorb
call
cli
jecxz
lods
shrb
lock
xchg
adc
sub
repz
mov
mov
test
xchg
lea
cwtl
stos
cli
mov
ret
or
mov
sbb
clc
add
add
xor
sbb
push
adc
cmp
mov
and
push
outsb
lgs
fbstp
shl
mov
adc
pop
repnz
dec
lods
test
cmpsl
incl
cs
lea
cli
dec
bswap
stos
inc
and
mov
push
add
call
inc
push
push
push
jno
sbb
jmp
inc
mov
mov
test
inc
iret
pop
test
xchg
mov
add
add
sub
lock
sbb
jae
add
cmpsl
and
cs
insl
loope
xor
nop
out
jo
or
pop
sbb
loop
jecxz
sarb
mov
sbb
jecxz
xchg
cmp
and
or
push
mov
mov
iret
nop
or
addb
mov
inc
in
cmp
inc
pop
or
adc
fcmovnb
pop
shlb
ljmp
push
sub
cmovp
nop
xor
cmp
and
lock
clc
rorb
jo
mov
sbb
insb
adc
or
push
call
enter
fistps
leave
sarl
fsts
add
mov
inc
jl
jl
cmp
cmp
clc
fbstp
rclb
ret
daa
mov
or
lock
cwtl
push
pop
xor
ret
inc
adc
sub
nop
mov
mov
and
subb
clc
xor
call
aaa
sbb
jmp
jno
lods
sbb
mov
mov
aad
pushf
rcll
shrl
cmpsb
mov
push
and
insl
push
push
mov
inc
pusha
mov
in
xchg
stos
mov
pop
push
pusha
jmp
fnsave
iret
xchg
ss
xchg
mov
jle
inc
xor
jp
das
add
inc
call
es
pop
sti
jg
aam
adc
or
xorb
outsl
cmp
inc
aam
add
call
and
mov
jp
adc
adc
insl
stos
add
inc
icebp
push
fwait
movsb
fisubs
subb
sbb
inc
jmp
and
sub
jp
mov
jo
sub
xor
das
test
pop
xor
xlat
or
leave
xor
cmp
ror
inc
idiv
xor
mov
testb
mov
inc
mov
mov
lcall
clc
shrb
out
and
rcrb
xchg
inc
pop
pusha
adc
icebp
or
enter
add
test
mov
lock
or
inc
movsb
cli
cs
push
or
loope
and
adc
add
outsl
dec
dec
and
call
loope
cs
clc
jmp
ret
and
sbb
mov
inc
test
inc
mov
je
mov
add
call
pop
add
mov
jbe
push
stos
push
repnz
ja
std
push
psllq
mov
mov
shlb
adc
inc
add
xor
imul
call
sbb
sub
loop
stos
xorb
or
adc
push
inc
xor
adc
mov
add
add
xor
scas
mov
lock
mull
jmp
insb
insb
or
add
mov
add
pop
or
in
inc
je
js
xlat
mov
inc
mov
iret
mov
repz
dec
add
mov
sldt
inc
sarb
adc
dec
ret
xchg
cmp
adc
add
xor
je
push
inc
shll
sub
push
pop
popf
subb
xchg
outsb
mov
dec
addb
clc
mov
sub
andb
js
xchg
fisubrs
add
dec
and
or
lea
or
fcom
mov
mov
and
ljmp
subb
mov
push
xchg
ret
inc
clc
test
add
add
pmulhw
popf
inc
fldl
add
xor
lea
add
orb
pop
mov
xchg
xor
lret
jbe
add
add
xorb
push
mov
fdiv
mov
aaa
inc
dec
add
push
adc
movb
add
sbb
push
add
mov
ss
jecxz
imul
addr16
sbb
push
push
mov
mov
andb
add
pop
ret
or
or
add
or
stos
js
sub
call
dec
cli
insb
fs
movsb
jbe
lock
and
mov
hlt
inc
insb
push
out
and
sbb
sbb
pop
mov
inc
xorb
inc
es
dec
nop
push
test
sub
add
mov
mov
add
xchg
mov
insb
test
loopne
stos
ss
stos
test
sbbl
addl
popa
fld
xor
mov
pop
into
in
int
or
mov
mov
sbb
call
inc
repnz
xchg
sbbl
pop
xchg
clc
jg
data16
or
sub
test
push
and
cs
xor
push
xor
sbb
or
scas
mov
mov
fadds
shr
xchg
jecxz
fidivl
insb
inc
or
lods
out
mov
sbbb
pusha
and
je
add
dec
mov
inc
outsb
test
or
jo
and
mov
popa
out
pop
jo
outsl
push
and
bound
es
and
add
popa
loopne
pusha
sub
movsb
imul
add
test
add
sbb
sar
jmp
pop
sbb
inc
sub
orb
xchg
jg
clc
and
sbb
rorb
add
mov
es
or
ljmp
fisttps
js
cli
fs
jg
sub
mov
push
and
sarb
wbinvd
mov
rorb
loopne
and
insb
call
inc
push
inc
or
add
sbb
sub
push
adcl
pusha
int3
inc
or
mov
cmp
cmp
and
and
push
outsb
and
dec
fdivs
loope
adc
adc
in
inc
stos
loope
and
insl
adc
out
xlat
fildl
into
filds
repz
fucomi
cltd
jmp
or
in
mov
adc
push
mov
adc
or
sbbb
sub
adc
ss
jo
insb
and
aad
push
test
push
loope
or
mov
push
gs
in
ret
mov
mov
rcr
movsb
loope
dec
pop
or
push
call
push
dec
in
insl
loope
xlat
xchg
out
mov
loop
loopne
add
jb
sbb
fnstcw
sbb
sub
das
xchg
scas
or
ljmp
push
or
sub
add
xor
dec
insl
das
enter
test
or
inc
add
loopne
xchg
adc
and
mov
shll
pop
insb
or
subl
sbb
push
cmpb
call
pop
test
nop
out
add
outsl
pop
inc
sbb
int3
adc
and
das
fcoml
rolb
add
popf
ret
push
in
and
add
stos
xchg
jb
fimull
clc
ljmp
sbb
push
cmove
sbb
loope
push
dec
lret
jmp
fsub
add
rolb
fiaddl
ret
mov
and
xor
test
xor
js
pop
inc
loopne
adc
scas
add
and
ljmpw
sbb
ret
mov
sub
mov
fdivs
sbb
pop
add
shlb
or
in
push
mov
and
inc
aam
xlat
insl
out
inc
movsl
cmpb
scas
jle
lds
and
mov
push
push
mov
inc
push
insl
cs
aaa
adc
pushf
les
xor
add
push
nop
sti
inc
add
and
jg
movsb
js
mov
aad
pop
mov
lret
add
jne
lea
push
jecxz
xchg
les
pop
inc
outsl
fisubl
xchg
fisttpl
pop
popf
xchg
mull
push
push
loopne
gs
loope
push
mov
jmp
sbb
call
sbb
les
jecxz
push
and
insl
stos
outsb
stos
fcoms
out
sbb
in
pusha
adc
lock
add
shlb
es
sub
ficoml
out
pop
jb
and
or
add
add
out
incl
mov
dec
in
add
pop
pusha
mov
jecxz
int
in
dec
add
inc
push
and
mov
add
mov
addl
lock
sub
sub
adc
test
aas
dec
and
in
pop
cmp
jg
incb
loopne
in
push
mov
dec
in
scas
inc
cld
movd
adc
pop
cmpsb
push
stos
outsl
hlt
movsb
xchg
shlb
ljmp
mov
jbe
rolb
xchg
or
ja
popa
pusha
loop
test
inc
add
f2xm1
and
in
loopne
movsb
icebp
jp
push
mov
mov
std
imul
ss
xchg
lcall
cmp
sub
das
jmp
xchg
inc
aad
sub
ficoml
xor
ret
insl
out
nop
bound
insl
adc
hlt
adc
push
add
mov
jecxz
call
pusha
adc
cli
or
stc
xchg
mov
int3
adc
mov
inc
xor
jg
xor
aad
add
inc
pop
push
add
or
test
push
out
test
adc
add
push
jne
scas
fcom
mov
cmp
imull
xchg
mov
xor
insl
in
cs
jl
and
mov
push
xor
add
or
pop
sbb
xchg
mov
pop
jno
es
scas
call
adc
fs
push
imul
inc
cld
out
movsb
jle
or
push
pop
jmp
add
mov
or
cmpsb
push
neg
sub
or
jle
mov
les
cltd
mov
jno
ret
adc
dec
push
test
or
cli
lock
mov
xlat
and
movsl
shlb
mov
inc
xchg
repnz
ftst
pop
rclb
das
and
pop
and
xor
xor
add
dec
xor
mov
xchg
mov
pop
out
add
add
ret
adc
insl
or
and
popa
sti
push
inc
and
dec
incl
inc
xlat
xchg
add
repnz
cmpsl
adc
shll
sbb
fcmovbe
xor
ja
add
push
fidivrl
mov
daa
jle
sbb
fbstp
pop
add
inc
stos
add
testl
stos
imul
push
or
jle
jae
lcall
add
jge
jbe
xor
stos
fsubrs
jno
fcoms
dec
cmp
sahf
mov
rdmsr
fdivr
xor
jle
test
xor
shlb
push
add
lock
arpl
push
roll
cmp
jnp,pt
pop
sub
xchg
dec
and
sbb
out
rcrb
xchg
sbb
inc
out
fcomip
daa
push
adc
jnp
rol
xchg
pminub
repz
roll
pop
pop
fcoms
icebp
or
or
movsl
iret
scas
lahf
cmp
nop
into
xchg
ds
mov
das
inc
xor
jno
inc
ja
icebp
ljmp
and
push
orl
cmpsl
mov
inc
sub
inc
inc
push
inc
fcmovnbe
pop
test
ja
sahf
ret
add
rorl
aaa
add
loop
icebp
add
call
insl
aas
push
jp
sbb
dec
inc
rorl
push
aas
inc
adc
les
das
push
sbb
js
orl
pusha
dec
rol
add
mulb
aas
out
test
sbb
jg
inc
xor
in
mov
and
xchg
sbb
movb
or
sbb
fstpl
xchg
push
int
adc
lock
std
inc
loopne
in
cpuid
sti
jo
shlb
test
mov
adc
and
jo
sbbb
aad
dec
roll
test
push
xchg
aam
inc
xchg
push
add
imul
dec
mov
imul
pop
mov
pop
xor
jle
aas
mov
cld
lea
ljmp
push
mov
clc
fisubl
scas
pop
push
mov
jge
add
insb
stos
xor
jecxz
out
cmp
aam
cmc
pop
div
fstl
and
jge
or
adc
add
mov
pusha
dec
loopne
call
ja
adc
xchg
sub
xchg
nop
cmp
lcall
jl
fcos
aam
mov
jo
cld
add
inc
mov
aaa
sbb
pusha
mov
push
sti
xchg
xchg
inc
xchg
sbb
xor
dec
and
mov
out
repnz
fistl
dec
stos
mov
mov
stos
add
aad
lret
in
iret
idivl
xchg
scas
mov
or
jb
mov
add
rorb
mov
add
add
xchg
xchg
xchg
jp
mov
and
push
shrb
sbb
nop
or
mov
mov
xchg
scas
hlt
mov
sub
push
ds
andl
add
cwtl
cli
in
mov
add
incb
sub
decl
adc
sub
pop
rclb
add
loopne
xchg
jecxz
xchg
inc
mov
pop
nop
cli
mov
xor
jmp
mov
dec
movsb
xor
cli
dec
mov
scas
add
cmp
imul
je
add
add
pop
mov
sub
je
bound
inc
adc
push
aad
push
xchg
jl
in
addb
add
cmpsl
and
xchg
xor
push
es
out
inc
mov
ret
xlat
and
nop
push
push
push
cmovne
mov
mov
adc
push
fwait
push
aas
xchg
jno
mov
add
pop
data16
dec
sbb
mov
pusha
js
push
data16
into
stc
stos
sti
arpl
add
add
fs
insb
xor
int3
inc
lret
add
lea
jne
push
sbb
push
movb
add
rcll
call
lock
pusha
cli
add
dec
les
cwtl
xchg
idiv
add
and
pop
push
ljmp
jl
inc
or
addb
push
add
mov
movsb
js
inc
dec
cmpb
fisubrl
mov
std
pop
sbb
or
add
push
jae
ljmp
cmp
or
popl
cmpb
adc
push
inc
outsb
add
or
rorb
pop
cmp
pop
repz
dec
jo
out
jo
pusha
pop
and
or
pop
lods
pop
incl
in
mov
fldl
push
shlb
repnz
fwait
and
frstor
loopne
inc
xor
lods
insb
arpl
or
shrb
mov
push
aam
dec
inc
sbb
gs
add
adc
adc
aaa
jb
cmp
andb
add
scas
mov
popa
das
add
mov
inc
and
mov
xchg
jo
mov
ret
fildll
push
mov
bsf
dec
inc
sbb
insb
inc
inc
lret
inc
add
jne
les
jmp
dec
inc
or
jnp
adc
addl
adc
and
or
mov
and
xchg
addr16
add
push
push
adc
push
hlt
add
mov
stos
stos
add
cmp
mov
sbb
xchg
or
mov
inc
cmp
xor
fcompl
mov
adc
add
dec
sub
popl
inc
jns
lea
sbb
stos
inc
xor
jge
adc
jecxz
or
inc
xchg
push
call
inc
in
mov
shl
add
clc
dec
cwtl
mov
out
jno
mov
adcb
adc
loopne
push
rorb
adc
jg
test
inc
sbb
shll
push
insb
or
or
mov
xchg
test
inc
lock
mov
cmpb
es
mov
mov
lret
dec
or
lock
add
pop
inc
add
dec
addl
mov
sbb
adc
sub
add
jg
cmpsb
sahf
and
arpl
push
or
push
pusha
sub
andb
mov
sub
into
mov
add
mov
data16
dec
stos
rorb
jmp
lods
cli
call
jbe
jp
pop
or
cmpl
cmpb
add
pavgb
ljmp
dec
dec
pop
aas
inc
dec
or
xchg
jg
fisubrs
mov
bound
mov
cmp
sub
inc
loope
and
push
mov
jnp
jo
loope
mov
ja
mov
imul
mov
cs
repnz
fcomip
subl
add
pusha
or
mov
push
dec
sti
incl
stos
pusha
lds
add
jb
and
mov
es
imul
sbb
outsb
sbb
outsl
movzwl
sbb
push
and
and
mov
incl
mov
xor
inc
and
and
push
test
xchg
mov
sti
jg
push
adc
fwait
push
mov
mulb
pop
adc
ret
cmp
and
dec
lea
fiaddl
and
ss
lcall
sbbl
and
mov
sub
fadds
and
test
test
add
dec
inc
xchg
pushf
shrb
inc
and
jnp
aam
dec
push
lds
jle
cmc
aam
int3
and
adc
add
or
imul
push
push
daa
mov
inc
dec
cld
push
shlb
sub
or
and
push
jecxz
adc
loopne
orb
mov
aam
mov
aad
lcall
add
mov
addr16
fsubrs
and
push
lods
xchg
inc
mov
addr16
add
insb
sub
loopne
sub
inc
pop
clc
xor
adc
push
cmp
fwait
push
ss
or
cmp
cmp
sbb
mov
inc
add
add
push
cmp
push
sbb
xor
sti
outsb
rclb
or
mov
xchg
push
mov
mov
out
adc
je
xlat
mov
pop
cmp
adc
push
sar
cs
add
sub
or
sub
pop
testb
scas
aaa
aad
lock
add
or
add
fwait
and
xchg
out
addb
call
sbb
pinsrw
inc
inc
and
shl
add
add
sbb
xor
add
lret
rcrb
push
cmp
jg
outsb
loopne
sti
lock
sbb
popa
jo
push
push
jg
pop
lock
mov
jo
pop
rorb
jb
or
push
out
dec
inc
adc
mov
call
std
adc
and
mov
cmp
xlat
xchg
cmp
or
push
cld
add
or
rclb
and
push
insl
cmp
loop
inc
xchg
fnstsw
push
and
or
rolb
cmp
xor
sub
jno
mov
cmp
hlt
das
xor
cmp
lods
push
or
push
adc
jg
mov
roll
das
call
mov
dec
rcrb
lock
insl
pusha
xchg
and
dec
andb
adc
lcall
sub
out
xchg
mov
popa
fdivs
mov
repz
xor
dec
xor
pop
ja
push
mov
xor
pop
pop
lock
subb
paddsb
add
lods
ljmp
mov
and
aas
loopne
bound
call
xor
outsl
adcb
es
sub
outsl
jg
sti
je
hlt
outsb
ss
ret
and
inc
add
je
pop
sbb
pusha
outsb
insb
rolb
sbb
mov
and
movsb
aas
jbe
popa
arpl
fwait
loopne
mov
pushl
push
fs
mov
sbb
aam
adc
mov
xchg
repz
sub
pextrw
jg
lock
inc
xor
loope
nop
cs
bound
hlt
add
stos
mov
xor
adc
dec
or
call
movsl
jmp
mov
dec
orb
fwait
mov
cmp
sub
mov
dec
sub
call
ljmp
mov
mov
sub
sub
mov
dec
punpcklwd
jmp
sub
and
dec
inc
push
and
inc
pusha
sbb
sub
bound
and
push
push
in
adc
push
or
sub
add
data16
arpl
rclb
scas
jo
mov
xor
xor
mov
sub
loopne
fmull
cmp
xor
clc
sbb
add
addb
ljmp
mov
push
aas
mov
sahf
out
cwtl
call
add
test
rorb
popa
dec
ljmp
push
push
add
mov
mov
add
outsb
mov
jmp
test
xor
sbb
aam
or
sbb
sub
daa
jno
xchg
ret
rolb
push
xor
clc
popa
enter
adc
mov
pusha
jno
outsl
mov
subb
mov
xchg
cwtl
addl
inc
mov
out
mov
nop
xor
jo
bt
add
pop
jbe
dec
pushf
and
push
pop
aam
addb
insb
mov
aam
sbb
test
call
or
mov
and
inc
cmpb
add
clc
mov
push
jp
xor
movsb
mov
repnz
movsl
jl
das
and
adc
es
js
ret
xchg
out
pop
dec
je
sbb
es
scas
dec
add
adc
daa
test
pop
rolb
mov
sbb
fmull
dec
pop
and
add
jle
fbstp
stos
addb
mov
inc
into
or
pusha
or
push
lods
add
addr16
mov
mov
sbb
cmpsl
cmp
xor
mov
xchg
and
sub
les
movsb
lcall
pop
fwait
mov
outsb
notl
dec
bound
movsl
mov
stos
cvtpi2ps
gs
mov
adc
jmp
inc
repnz
test
mov
jmp
cs
mov
mov
or
xchg
add
jo
stc
shlb
loopne
xchg
mov
in
lret
jo
mov
das
loopne
in
lock
jmp
pop
mov
into
addb
add
xlat
mov
outsl
sbb
sbb
or
pusha
or
mov
dec
pop
fs
inc
mov
push
shll
mov
adc
sarl
sub
orb
lock
pushf
add
imul
adc
sti
lret
ja
addb
push
mov
mov
adc
push
inc
nop
repz
dec
adc
cwtl
inc
inc
hlt
fdivr
mov
xchg
xor
hlt
lock
fists
ss
or
and
mov
inc
hlt
push
mov
lods
nop
pop
popf
pusha
adc
jmp
inc
add
decl
lret
or
inc
hlt
mov
loope
and
pop
rcr
out
hlt
sbb
mov
add
or
push
pusha
movb
xor
lock
adc
popf
jecxz
xchg
cmp
or
add
or
push
imul
std
cmp
sbb
push
lock
rcrl
aas
add
loope
mov
add
ret
mov
es
js
cld
and
add
ljmp
add
popl
mov
outsb
aas
or
loop
add
nop
inc
jae
bound
jns
or
mov
xchg
repz
mov
jle
fisttps
cld
cwtl
addl
add
adc
push
aaa
mov
pop
lret
xchg
fildl
and
dec
inc
lret
sbb
call
add
push
add
jb
lret
pop
or
push
je
sub
adc
pushl
add
hlt
add
mov
and
xchg
inc
orb
orb
push
pop
add
inc
xorb
les
sub
cli
add
sbb
sub
push
sbb
xchg
push
test
add
jl
sub
jg
xchg
jnp
addl
punpckhdq
inc
jecxz
scas
test
js
orb
jmp
fisttpl
addb
cmp
add
aam
loop
test
lods
loop
test
pop
mov
ror
sbbb
and
rolb
fldl
inc
mov
push
adc
lock
ds
pop
mov
test
and
clc
addr16
andl
movsb
adc
stos
adc
xchg
inc
push
inc
ret
data16
ret
js
addr16
sub
sti
ja
mov
mov
push
test
cmpsb
jecxz
addr16
inc
pop
or
sub
cli
adcb
lret
mov
pop
add
jno
lcall
lods
mov
fdivp
xchg
inc
mov
shlb
fnstenv
adc
mov
mov
adc
cmpb
outsb
push
pop
mov
dec
subb
add
mov
fimull
sub
add
cltd
and
dec
mov
add
decb
or
pop
adc
push
mov
add
nop
mov
or
inc
fsubrl
aaa
shrb
pusha
mov
and
ret
adc
insb
and
nop
call
push
adc
in
dec
xchg
lret
mov
or
mov
mov
mov
es
subl
jo
mov
movd
ret
std
in
pop
inc
pop
dec
jnp
xchg
adc
repnz
sbb
pop
fdivs
popa
inc
jle
dec
repz
stos
xor
push
mov
sbb
ljmp
test
mov
cmp
loopne
lcall
xchg
ljmp
add
bound
pop
mov
add
add
data16
add
movsl
or
push
or
push
mov
sbb
adc
xchg
lock
aam
daa
xchg
or
adc
xchg
lret
adc
insb
xchg
inc
mov
shl
popa
loope
ror
sbb
mov
adc
push
inc
repnz
enter
lea
sbb
lret
pop
add
dec
stos
inc
xchg
jbe
or
sbb
not
repz
pop
xchg
mov
outsb
std
and
or
sub
cwtl
or
mov
xor
jl
pushl
xchg
sbb
subb
dec
mov
lds
mov
loopne
adc
inc
push
pop
mull
daa
addl
loope
xor
jnp
add
faddl
adc
popa
inc
mov
ss
subl
je
and
ds
and
inc
pusha
sub
repz
cmpb
int3
sub
xchg
ret
jmp
es
loopne
es
loopne
subb
mov
mov
mov
cmp
lcall
outsb
shlb
push
mov
loope
fdivrs
push
pop
xchg
jecxz
xchg
rep
mov
fstpt
loopne
fdivrp
xchg
mov
dec
and
inc
test
mov
adc
sbb
andb
out
adc
adc
in
jmp
adc
sbb
push
insl
repz
aad
aad
and
sti
cmpsb
outsl
repz
in
push
mov
jecxz
mov
mov
add
test
fsubs
loope
push
push
cld
pusha
push
cmp
inc
fucomi
addl
jo
sbb
mov
andb
or
orb
mov
fs
loopne
rolb
mov
xor
xlat
ljmp
mov
cmp
sbb
std
and
decl
outsb
pusha
mov
pushf
dec
or
pusha
add
jno
sbb
minps
sbb
ret
ret
mov
lock
ljmp
lods
aas
shlb
xchg
cld
es
insb
test
mov
fldl
xorb
pusha
cmpb
dec
adc
jnp
cmpl
rorb
pop
xor
add
jmp
aam
lock
mov
add
fisttps
movd
mov
pusha
rcrb
ficomps
or
stos
sub
and
mov
dec
loopne
add
out
hlt
sub
ljmp
jne
pop
mov
and
rcl
xor
cmp
neg
fcoms
inc
xor
divl
dec
pop
adc
pop
pop
sbb
icebp
mov
repnz
repnz
add
psrad
das
fmuls
clc
in
and
sub
add
outsl
fwait
mov
add
nop
pop
daa
add
dec
xor
maskmovq
negl
push
and
hlt
inc
in
lcall
insb
fs
xor
push
jecxz
mov
inc
and
mov
and
ss
lock
adc
mov
add
push
je
mov
and
add
sbb
jge
fwait
mov
add
adc
shl
in
jmp
adc
loope
addl
testb
mov
pop
dec
shlb
inc
adc
sub
daa
pop
je
ja
cli
mov
xor
or
add
mov
push
pop
sub
jnp
adc
lods
loop
xchg
inc
mov
inc
mov
and
or
mov
fisubl
or
xor
jecxz
hlt
sub
std
sub
out
cltd
pusha
int3
cwtl
repnz
add
or
cmc
lds
in
scas
sbb
pop
sub
push
fidivl
jg
mov
pop
in
sbb
pop
sbb
push
insb
cmp
shl
mov
mov
addl
adc
adc
cmpsb
mov
daa
jg
loope
mov
loop
pop
subb
mov
add
loope
xchg
cmpsb
idivl
movq
push
aaa
jmp
pop
xchg
ja
adc
cmovno
data16
jno
sbb
jo
xorl
les
aad
and
sbb
sbb
push
fdivl
fwait
mov
pushf
bound
ret
scas
push
push
xor
sbb
sbb
or
adcl
jecxz
cmp
pusha
imul
enter
pop
lret
roll
test
jg
enter
nop
icebp
sbb
mov
das
add
popa
jo
mov
sub
add
fdivl
mov
aad
pop
add
mov
movsb
sbb
ror
dec
enter
xchg
loope
inc
push
or
mov
mov
mov
mov
rcrl
notl
add
stos
fs
insl
lock
xorb
scas
subb
and
nop
insb
pop
insl
popa
mov
adc
or
jb
xor
push
divl
and
rclb
push
add
out
push
cmc
and
inc
pop
and
jo
xor
cmp
push
sbb
rcl
imul
mov
xchg
icebp
add
or
mov
addb
mov
add
push
cmpsb
icebp
push
sbb
scas
mov
ss
fdivl
push
add
aad
mov
add
and
mov
in
out
incb
repz
or
inc
sub
cmc
mov
roll
and
lahf
mov
inc
out
jp
js
jl
push
inc
push
add
cli
dec
call
rol
mov
jno
outsl
push
add
mov
dec
push
add
dec
daa
cltd
mov
cmpsb
push
ss
or
sbb
loop
adc
or
adc
lcall
lods
cli
sbb
pusha
adc
outsl
xchg
rorb
pop
lock
inc
push
mov
pop
bound
loop
jne
data16
loopne
push
adc
test
ret
lcall
fsts
rorb
popa
add
mov
add
roll
test
fcomip
dec
popa
sub
jl
stos
aad
sbb
bswap
push
sbb
movsb
xchg
roll
mov
sbb
pop
mov
mov
test
punpckhdq
adc
adc
cmovns
lds
mov
sub
les
and
add
mov
adc
cmp
sub
stos
sub
xchg
push
scas
loop
or
add
pop
add
and
jecxz
mov
inc
mov
and
scas
out
sbb
push
jo
cmp
jecxz
xor
mov
or
test
lea
mov
ret
scas
mov
mov
mov
nop
xor
inc
or
pop
cli
shrb
sbb
xlat
mov
adc
fs
adc
push
fs
andb
adc
out
mov
inc
and
rclb
cmp
cli
insl
mov
loope
fdivrl
xchg
lods
pop
inc
aaa
loopne
fbld
mov
ss
and
and
das
push
aam
mov
push
scas
ss
pop
inc
cmpsb
xor
add
add
jbe
scas
push
fsubs
clc
and
mov
lret
jg
xor
add
inc
cld
nopl
add
insb
ljmp
mov
and
ja
and
bound
test
xchg
or
mov
jmp
jnp
and
push
addr16
std
nop
add
andb
rclb
gs
out
mov
adc
testb
ud1
pop
mov
push
test
xor
add
inc
es
out
push
test
cmpsb
sbb
add
shr
or
dec
add
cld
fldl2e
orb
out
xorb
clc
ret
pop
or
xor
ss
pop
loopne
fcmovb
and
jbe
add
lmsw
pushl
negl
add
sbb
clc
add
dec
in
mov
cld
pop
scas
push
subl
ret
add
hlt
mov
add
xor
push
stos
ror
bswap
fisubs
gs
rcrl
adc
aad
mov
or
jmp
add
xchg
ficoml
sahf
jmp
into
xchg
lea
cld
or
lahf
fmuls
sub
data16
out
xchg
jle
arpl
test
jmp
aaa
test
js
out
xor
jl
and
lods
pop
cmp
add
xchg
out
xchg
push
sbb
xchg
mov
xchg
testb
cli
test
push
jo
sbbb
pop
sbb
mov
daa
mov
adc
andb
lcall
or
jge
xchg
loopne
incb
lahf
xor
inc
sti
gs
sbb
pop
test
lock
xchg
inc
mov
mov
and
mov
adcb
cmp
sbb
lock
subb
sub
insb
add
or
inc
or
int
or
in
pop
add
cmp
mov
andb
sub
cmp
dec
comiss
test
mov
sbb
lods
pop
inc
rorl
fs
jbe
xor
dec
adc
mov
jmp
orb
and
inc
nop
data16
sub
xor
ret
mov
outsb
add
xor
incl
repnz
and
insb
je
xor
sbb
add
sbb
inc
or
int
mov
xchg
xor
je
mov
or
jne
outsl
sub
inc
add
call
inc
les
bound
xchg
lret
or
stos
mov
mov
ss
or
sti
adcl
std
sbb
sub
inc
sbb
shlb
test
in
sbb
adc
add
mov
sarb
sbb
lret
inc
and
loop
jmp
or
rclb
fs
adc
ds
mov
xor
jp
lods
and
lea
ds
pop
rclb
adc
je
lods
subb
loope
frstpm(287
not
cmp
andb
push
pop
or
xchg
cmp
sub
xchg
cmpl
or
adc
xchg
and
push
jae
popa
decb
lods
mov
or
mov
or
scas
fistpll
rcll
test
fcmovb
rolb
jb
nop
mov
pop
loop
movsl
in
ds
push
adc
rorb
movsb
mov
pop
les
cmp
add
or
and
mov
inc
adc
mov
cmp
inc
and
std
jg
or
sub
or
and
sub
inc
nop
pop
pop
outsb
mov
lock
rorb
xchg
adc
push
addl
lods
scas
mov
sbb
pop
or
in
push
mov
inc
dec
mov
xor
insb
cld
xchg
add
sub
lods
xchg
ds
sbb
lock
push
push
pusha
ret
mov
call
loopne
fs
adc
sbb
mov
adc
sub
add
sbb
in
outsl
adc
add
add
stos
mov
add
das
adc
push
inc
rolb
sub
in
jle
inc
data16
lret
insb
ds
push
sub
lock
push
add
cli
cld
pop
enter
adc
and
push
cmp
ss
daa
sbbl
push
add
bswap
dec
mov
popa
sub
add
cmp
and
mov
dec
clc
xlat
push
int3
or
add
pop
jecxz
or
jg
jne
scas
imul
pop
and
repnz
and
enter
test
pushl
mov
imul
inc
insb
daa
sbb
add
xchg
divb
pop
xchg
xor
push
pusha
stos
ret
sbbb
das
pusha
add
insb
inc
orl
and
cmp
test
mov
xor
push
aam
inc
push
xchg
jmp
push
adc
pop
shll
aam
cmp
dec
push
sbb
mov
fs
mov
pusha
pop
sub
mov
mov
push
or
jp
pop
or
jb
add
lock
sub
jg
inc
jp
add
rorl
pop
call
gs
emms
jl
test
xchg
jl
add
lock
repnz
inc
into
xchg
call
add
add
pusha
mov
insb
cmp
pusha
cmp
lods
mov
jg
test
inc
or
push
sbb
decl
or
mov
repz
rcll
loopne
adc
sbb
in
sti
sbb
cmp
je
jne
ds
std
mov
mov
mov
inc
shlb
dec
cmpsb
imul
call
and
and
pop
orl
dec
or
shlb
mov
out
xchg
loopne
and
or
sbb
fnstsw
add
sbb
call
popa
jo
insb
negb
shlb
es
add
sub
loope
jbe
xchg
and
sub
bound
and
cld
subl
shll
es
pusha
ljmp
mov
rolb
jecxz
adc
pop
ficoms
adc
adc
aad
icebp
pop
and
adc
jae
lret
jp
imul
xor
dec
push
push
int
clc
or
fimuls
add
cmp
addb
frstor
push
mov
mov
in
and
loopne
adc
ja
add
addl
inc
icebp
push
lock
pusha
adc
mov
mov
and
and
movups
mov
or
mov
arpl
add
scas
loopne
push
jb
pop
inc
imul
mov
or
jnp
sub
add
ds
mov
sub
loopne
lods
push
sub
add
push
call
mov
xor
cmc
jg
fsubl
cmp
hlt
xor
and
jns
fbld
dec
ds
sarb
adc
andl
nop
loope
adc
push
subb
xchg
aaa
add
cmp
pusha
in
xchg
pop
loopne
dec
mov
orb
xchg
add
mov
and
push
dec
out
popa
add
lea
clc
fs
repnz
push
lock
and
push
adcb
orl
out
pop
push
push
push
sub
out
clc
inc
and
mov
xor
test
pop
rclb
sbb
fs
out
daa
in
xor
sarb
fsubrp
and
cltd
int3
jbe
push
fisubs
testl
xor
jle
shlb
jae
sub
or
mov
mov
aaa
mov
mov
aaa
cmp
adc
and
rclb
mov
and
push
fistpl
push
and
stos
sahf
xchg
xor
gs
outsb
sbb
addr16
add
mov
or
sbb
add
outsl
test
sub
pusha
and
and
and
push
cmpsb
xchg
push
adc
add
into
pop
outsb
sbb
inc
imul
sbb
stos
rclb
sbb
dec
hlt
add
pop
inc
mov
mov
pop
mov
cmp
mov
push
jb
and
mov
adc
adc
and
bound
ds
aad
dec
ds
adc
add
lods
sbb
xor
and
mov
pop
sarb
movsb
cwtl
sub
push
xor
and
jl
and
xor
cmp
pop
add
movsb
push
in
mov
mov
cmc
push
adc
mov
push
push
sub
dec
hlt
mov
inc
dec
ss
insb
in
dec
or
inc
mov
mov
das
mov
jno
ds
jb
dec
add
dec
mov
mov
push
inc
mov
testb
dec
pop
push
rolb
pop
rclb
loope
xor
mov
outsb
push
outsl
push
jb
push
jo
inc
add
or
add
or
in
loopne
xchg
add
add
das
sub
out
test
fwait
jno
adc
cld
push
add
popf
js
xor
add
or
ljmp
mov
mov
or
into
flds
dec
push
aaa
dec
add
lock
int3
add
pop
pop
pop
testb
outsl
loopne
fildl
pop
add
sbb
push
lret
jp
push
dec
nop
int3
out
fdivr
das
int3
adc
jmp
push
xchg
incl
stos
sbbb
adc
lahf
xorl
xor
or
mov
add
cli
inc
loopne
mov
adc
xor
jl
jb
pusha
out
andb
cs
out
xchg
jb
mov
mov
jo
mov
or
mov
adc
adc
sbb
add
in
loopne
call
pop
and
inc
rolb
pop
add
or
mov
pop
test
push
js
ret
adc
testl
cli
adc
pop
sbb
out
pop
lods
mov
scas
xchg
adc
mov
pusha
popa
pop
push
add
fwait
sub
test
arpl
sub
mov
sbb
mov
dec
xor
pop
cli
popf
loope
push
arpl
scas
jo
pop
scas
icebp
add
lret
inc
xchg
loopne
cmc
cmpb
and
pop
pop
adc
orb
pop
ret
cmpsb
mov
out
popa
addb
rorb
and
mov
jg
aaa
ror
adc
sub
jb
adc
push
adc
ja
pop
mov
jle
push
icebp
xchg
inc
xchg
adc
pop
push
and
mov
lods
outsb
mov
adc
imul
xor
popa
in
or
sub
inc
sbb
or
add
popa
or
mov
jg
ret
push
sbb
dec
cmpb
cmovno
pop
mov
decb
mov
pop
mov
or
add
test
mov
cs
lret
and
divb
mov
aaa
adc
insb
popa
or
ljmp
fnsave
add
rolb
or
out
mov
bt
cmpsb
push
sbb
push
or
xor
xor
add
lds
jnp
adc
sub
mov
push
mov
daa
jle
sub
add
rolb
cmp
dec
shll
dec
imull
call
sub
rorb
sbb
rclb
inc
sbb
add
add
ltr
jge
mov
imul
out
out
pop
loope
mov
xchg
adc
add
pushl
xchg
mov
mov
add
pop
nop
mov
stc
jo
test
cld
and
in
ret
sti
shl
push
add
scas
outsb
pusha
push
lock
cmp
dec
inc
and
sti
filds
orb
negl
call
icebp
hlt
or
repnz
xor
sbb
decl
clc
push
test
inc
in
jmp
enter
sti
inc
or
pop
xor
pop
cli
mov
repnz
rorb
jo
and
outsl
add
test
push
lds
mov
out
and
sbb
jo
pop
and
or
and
das
sub
out
dec
call
jo
loopne
ret
movsl
sub
pop
mov
nop
movsb
dec
cli
mov
aaa
into
mov
pusha
mov
inc
pop
inc
push
test
pop
daa
mov
addb
out
push
xchg
mov
loopne
loopne
pop
call
xchg
adcb
cs
mull
jo
jo
jle
xchg
outsb
mov
mov
xchg
out
push
xchg
fidivrs
call
adc
fmull
adc
das
mov
cltd
jmp
loopne
inc
test
mov
hlt
jle
mov
test
insb
fcomps
imul
mov
loopne
sarb
icebp
inc
movsl
or
and
pusha
popf
xchg
insb
ret
je
sub
in
adc
or
jle
addl
xchg
ljmp
push
dec
loopne
xor
add
add
inc
and
outsl
jg
and
inc
dec
call
subb
and
sub
adc
jne
or
stc
and
sub
pop
xchg
rep
dec
outsl
mov
cli
mov
bound
cmpsb
outsl
imull
or
pop
or
xor
subl
cmp
sbb
aaa
or
mov
add
sub
pop
mov
in
push
dec
mov
nop
insb
sub
loopne
and
andb
sub
daa
adc
aam
push
cs
sbb
jbe
dec
imul
rolb
dec
inc
rol
and
xor
push
out
push
je
xchg
frstor
insb
push
dec
das
inc
clc
add
jnp
or
lds
orb
js
mov
mov
xchg
jne
shlb
push
rclb
insl
mov
pusha
out
or
mov
inc
rclb
rcll
bndstx
lcall
xor
outsl
es
rclb
and
aaa
push
mov
jmp
sub
fs
push
or
push
xchg
pop
push
rclb
pushf
lcall
cld
lods
jge
filds
pop
adc
mov
inc
inc
push
or
out
add
mov
push
and
jl
ret
clc
call
out
cmp
or
daa
add
sbb
pusha
rcr
outsb
add
iret
sub
sbb
or
or
rolb
mov
push
mov
daa
hlt
pusha
inc
dec
inc
stos
loopne
scas
into
dec
jo
mov
inc
push
shlb
jno
sbb
incl
mov
sbb
repz
rorb
fldcw
jae
insb
xor
jge
or
sbb
arpl
push
add
add
je
ret
or
gs
jmp
add
lods
mov
mov
jle
rcrl
xor
xlat
xor
and
shlb
enter
fcomps
inc
stos
adc
insb
add
push
mov
addl
clc
aas
sub
data16
int3
arpl
pop
and
repnz
xchg
push
shll
mov
mov
gs
mov
addb
ret
js
pop
fimull
dec
inc
rcl
ljmp
or
sar
test
insb
mov
and
shlb
arpl
inc
push
ret
loopne
nop
scas
and
add
or
and
shlb
dec
cmpb
sub
insb
mov
adc
repz
insb
xchg
push
in
push
mov
js
sbb
jecxz
mov
out
xchg
aad
or
xchg
xlat
int3
push
call
dec
decl
cmpsb
in
stc
cwtl
cwtl
or
stos
and
js
insl
pusha
loopne
loope
inc
cmpsb
mov
add
xchg
or
outsl
jecxz
add
pusha
pusha
or
andb
orl
cmc
mov
outsb
xor
outsl
push
pusha
add
mov
test
enter
call
int3
fs
sbb
loop
lcall
push
xor
in
sbbb
call
adc
cmp
clc
or
or
movsl
daa
mov
add
push
mov
mov
push
bound
pop
add
ficoml
repnz
jo
cs
jecxz
test
pusha
loope
loopne
and
mov
dec
insb
add
fistpl
inc
adc
adc
cmpsb
ficompl
adc
sbb
out
rcll
mov
cli
mulb
rolb
add
in
loopne
and
jle
add
pop
or
enter
push
pop
jg
push
jg
jg
pusha
and
xchg
add
push
mov
in
adcb
adc
push
lea
in
in
or
lea
pop
fs
adc
dec
push
add
adcl
in
adcb
inc
push
or
in
push
gs
xchg
push
sub
mov
shlb
mov
pusha
inc
sub
ja
imul
in
sbb
adcl
lcall
inc
addb
jg
clc
sbb
and
ljmp
jl
mov
in
adc
pcmpgtd
inc
or
or
aam
add
loopne
pop
int3
cltd
push
xchg
clc
fcmovnb
and
pusha
sub
and
push
push
outsb
loopne
test
jnp
movsl
push
xchg
mov
loopne
pop
or
push
xchg
pop
and
or
test
xchg
add
pop
mov
mov
rclb
mov
xchg
and
xchg
mov
push
or
sti
out
adc
fsubr
nop
push
push
push
pusha
or
clc
or
repnz
or
sub
aad
or
scas
xchg
es
loopne
data16
call
adc
loopne
daa
dec
sbb
add
lret
mov
mov
in
cmp
test
mov
and
jecxz
in
push
imul
mov
add
jg
or
inc
xor
dec
push
pop
shl
jno
cmp
and
mov
jmp
mov
push
lock
movsl
jecxz
jmp
adcb
mov
insb
push
mov
xorb
mov
movsb
mov
sub
pop
popa
and
mov
enter
add
sbb
in
in
or
ja
shlb
out
insb
jb
add
mov
aad
decb
sbb
sbb
sub
or
mov
lods
bound
add
pop
cmpsb
filds
fiadds
test
adc
cmpsb
inc
push
lock
push
add
add
or
mov
mov
inc
pop
rcrb
repnz
repz
jmp
mov
mov
push
dec
inc
test
stos
movaps
cmp
int3
aaa
shrb
push
repz
das
and
add
sub
testl
mov
repnz
insb
push
mov
push
xchg
xchg
add
pop
push
or
push
dec
stos
dec
in
mov
jecxz
xor
mov
cmp
or
cmp
or
or
cmp
mov
inc
inc
enter
dec
adc
mov
push
sbb
cmp
mov
in
add
adc
xchg
nop
incl
sbb
and
sbb
cmp
lret
mov
xchg
out
mov
cmc
cmp
ret
inc
pop
cmp
and
xchg
push
push
insb
mov
orb
ret
sub
mov
jp
test
loope
popa
mov
mov
mov
je
cwtl
lcall
push
sub
jecxz
jp
fs
add
mov
cld
popa
add
popa
pushl
jecxz
mov
or
das
or
sub
push
sbb
adc
add
push
xchg
pop
int3
aas
fdivrl
mov
adc
or
push
pop
jge
or
inc
das
clc
bound
sub
mov
xor
es
pop
push
xor
mov
push
add
add
call
xchg
in
pop
loop
stos
ja
outsl
pushl
jecxz
pop
jae
pop
arpl
push
pusha
add
or
and
shlb
push
addr16
inc
push
scas
orb
call
mov
add
mov
mov
xchg
rcrb
ljmp
pop
hlt
insb
jns
das
mov
dec
add
or
push
xor
ljmp
and
mov
dec
loop
fbld
sarb
add
mov
adc
mov
xor
xchg
inc
inc
mov
mov
jno
mov
out
movsb
je
xchg
xchg
call
push
xchg
sub
pop
mov
outsl
test
aad
mov
nop
lcall
pushl
sti
push
or
sub
repz
jo
bound
mov
outsl
push
or
addb
add
fisttps
cld
inc
mov
and
jg
jno
dec
cwtl
mov
push
sbb
xchg
mov
push
addb
in
dec
in
in
xor
jle
add
jg
cmpsb
mov
or
in
insl
adc
mov
inc
pop
jbe
sbb
gs
push
sarb
mov
das
jbe
rolb
xchg
outsl
jg
push
lods
inc
mov
inc
insb
out
jno
adc
mov
add
add
add
das
jo
adc
jo
addb
rorb
mov
sbb
inc
push
mov
xchg
mov
or
mov
cmpsl
jecxz
or
dec
call
dec
add
dec
or
lock
mov
dec
shl
outsb
add
outsl
jno
mov
hlt
dec
and
mov
jecxz
lcall
pushl
out
mov
dec
ret
pop
bound
jecxz
rcll
sahf
sbb
mov
sbb
rclb
and
arpl
mov
ret
push
mov
addb
sub
cmp
mov
dec
ljmp
bound
movsl
loopne
xchg
movl
rcrb
call
add
and
jo
fs
fcomi
add
cmpl
call
mov
test
push
and
popa
mov
mov
xorb
shll
arpl
loopne
mov
lret
in
inc
add
adc
neg
mov
push
punpcklbw
push
jmp
hlt
frstor
xorb
mov
sar
ds
insb
add
outsl
mov
in
orb
or
inc
mov
mov
roll
adc
inc
pop
sarl
jg
adc
rolb
roll
insl
stos
insl
push
push
adc
push
inc
inc
movsb
out
jb
decl
fistl
jne
mov
cltd
mov
xchg
xchg
xchg
gs
add
scas
mov
movb
fdivp
das
arpl
inc
push
into
inc
push
ss
push
std
xchg
or
pop
mov
add
mov
cmpsb
sub
js
sbb
and
andb
data16
jge
inc
dec
bound
jmp
fisubrl
and
faddl
dec
inc
xchg
inc
testb
sbb
pop
fists
lock
lret
stos
ss
test
pop
sahf
sti
int3
das
pop
clc
inc
mov
nop
out
je
xchg
pop
jp
das
clc
cmovl
xchg
xor
fdivr
xchg
cs
add
mov
add
and
or
cmp
nop
shlb
lahf
mov
not
xorb
outsl
push
jmp
inc
es
jecxz
outsb
xchg
xchg
adc
push
hlt
add
fwait
add
add
xchg
jmp
je
mov
mov
icebp
push
or
pop
in
mov
xor
in
add
add
insl
lock
jo
add
pop
sahf
jae
add
loopne
or
insb
inc
sub
loope
ljmp
enter
add
jb
sub
subb
and
subb
mov
ret
andl
repnz
shrl
subl
push
add
movsb
sahf
push
inc
test
lods
sbb
push
add
sub
cmp
add
jg
test
outsb
test
sub
xor
mov
push
incb
add
jecxz
jecxz
push
lcall
or
push
pusha
subb
push
add
incl
or
test
imul
sub
loop
sti
call
xchg
testl
sbb
ret
jns
add
js
pop
in
inc
incb
in
rorb
xchg
lds
ljmp
pop
xchg
icebp
fcmovb
inc
sbb
loop
ficoml
into
filds
into
daa
fisubs
mov
add
cmp
inc
jbe
stos
jg
xor
xchg
bound
add
mov
dec
andb
inc
sbb
cs
pop
or
cli
lret
rorb
out
ds
add
or
fisubrl
clc
in
sbb
aas
mov
andl
adc
in
sarb
popf
roll
push
arpl
add
or
pop
fildl
add
or
pop
mov
push
xlat
adcb
mov
add
fcmovnu
fisubl
into
push
hlt
inc
int
stos
add
rcll
pop
imul
adc
fimull
nop/reserved
cmp
icebp
dec
or
retw
pop
pop
push
clc
mov
popa
and
add
xchg
orl
inc
pusha
mov
add
mov
adc
adc
push
outsl
push
push
or
mov
or
cmp
addr16
pop
scas
clc
inc
push
int3
or
es
xchg
xor
test
xor
shrb
hlt
out
push
jecxz
fisubrs
adc
add
jecxz
ss
fidivs
mov
scas
gs
adc
mov
loopne
fldt
mov
sub
push
mov
ja
add
mov
jbe
andl
das
mov
and
lea
cwtl
loopne
cwtl
or
add
pop
add
call
push
pop
loopne
mov
lods
lock
pop
cmp
jg
pushf
inc
push
orb
mov
call
sbb
clc
fsubrl
or
out
adc
sub
jge
inc
add
cmp
xchg
rcrb
cltd
add
add
jecxz
adc
loop
add
cld
int
adc
adc
rclb
sub
ret
jle
mov
subb
add
lds
add
addl
test
mov
add
fcmove
nop
sub
fbld
into
and
sarb
cmpsb
sub
mov
jmp
les
xchg
sub
inc
insb
test
adc
push
sub
and
push
insl
add
add
arpl
ss
sbb
lcall
repz
or
and
outsb
sbb
and
fcoms
inc
fisttpl
aam
int3
and
cmpsb
xchg
imul
jmp
insw
in
adc
mov
xchg
adc
push
gs
scas
pushf
pop
mov
adc
mov
mov
movsb
fists
repz
xor
das
add
in
dec
or
inc
out
inc
andl
in
mov
outsb
push
testb
sbb
mov
xchg
mov
pop
add
or
add
pushl
incl
cmpsb
inc
or
inc
rolb
mov
mov
insb
add
mov
or
aas
pushf
bound
or
cmp
sub
mov
loop
in
movsb
cmp
add
inc
push
jmp
dec
jno
mov
sub
lods
sub
mov
ljmp
das
lcall
xchg
std
out
nop
xchg
ret
push
jg
or
fwait
xor
mov
cs
push
pusha
mov
mov
rorb
call
faddl
inc
pop
and
addl
mov
je
mov
add
add
lods
bound
mov
fnsave
cld
push
repnz
xor
orb
push
lock
fwait
mov
xchg
aam
inc
add
in
jecxz
movsb
and
mov
sbb
icebp
or
incb
bound
hlt
test
imul
aad
rorb
or
decl
outsb
push
mov
add
or
adc
mov
rolb
mov
out
mov
xchg
or
adc
cld
mov
push
leave
jo
jmp
call
cmp
mov
push
xchg
pop
movsb
and
jmp
jb
nop
cwtl
movaps
push
push
xchg
push
adcb
aam
daa
cmp
lock
mov
iret
ljmp
add
in
decl
dec
jge
xor
sub
sub
std
filds
jae
dec
push
ja
ss
arpl
adc
sbb
push
mov
in
gs
imulb
xchg
dec
xor
insl
push
outsb
insl
shr
jg
pusha
add
and
insb
sub
add
int
outsb
scas
cli
nop
xor
push
and
sbb
sub
sub
rorb
js
outsb
andb
xor
xchg
clc
fisttps
xchg
xchg
push
or
jbe
add
or
mov
pop
jmp
fistl
cli
add
fisttpl
dec
add
insb
es
pop
ffreep
push
mov
jae
out
xor
lock
add
and
dec
and
call
call
shll
inc
or
outsl
push
push
jl
and
and
pop
cmc
cmpsb
add
adc
stos
orl
mov
add
es
mov
adc
ja
and
xor
push
push
mov
mov
pop
fs
pop
cmc
push
mov
in
push
mov
imul
adc
add
testl
movsl
add
std
fcomip
orb
scas
dec
sarb
loop
aam
stos
call
popa
cli
fisttps
sti
xor
jmp
rolb
inc
cli
lcall
push
add
ret
mov
sti
int3
sub
and
aaa
push
jle
sub
pop
and
shll
mov
mov
shlb
aas
push
sub
pop
test
push
inc
inc
enter
rolb
push
push
movsb
sbb
xchg
sar
jnp
sub
add
jmp
testb
sbb
mov
cltd
xchg
jg
adcb
and
push
cltd
daa
push
xchg
inc
add
orb
in
ljmp
add
push
pop
mov
push
mov
lds
shlb
sbb
push
add
jns
cmp
push
jne
es
push
add
or
xchg
shl
add
adc
xor
filds
insb
push
pop
and
stc
add
sbb
pop
adc
add
fwait
repnz
call
idiv
outsl
outsb
and
arpl
add
push
jnp
cmp
imul
lcall
add
cltd
jo
arpl
mov
xor
mov
popa
jo
pop
lods
rolb
cmpsl
jo
or
xor
and
icebp
inc
in
lock
push
mov
out
mov
ds
push
mov
mov
mov
add
cmp
ja
es
outsl
js
jmp
pop
sbb
bound
add
jno
jns
dec
aaa
adc
pushl
inc
pop
fwait
or
add
push
dec
std
pushl
add
inc
add
dec
ds
stos
adc
add
and
pop
mov
mov
adc
dec
loop
sahf
adc
aaa
ja
insb
ljmp
lcall
xchg
mov
loope
std
loop
insb
das
nop
aaa
pushw
add
mov
inc
cli
xchg
shlb
cmp
sbb
frstor
sbb
fildl
xchg
rcll
ss
add
or
jle
or
cmp
xor
sub
lea
mov
xchg
pushf
mov
add
add
fwait
test
push
loope
bound
int
sbb
push
xor
push
adc
push
push
sub
adc
sub
mov
pop
lods
and
pop
andb
sbb
mov
int
popa
adc
js
ds
jbe
mov
adc
dec
in
aas
cwtl
ret
movsl
rclb
fcomp
dec
fidivs
and
mov
sbb
or
jle
cld
outsb
popf
shlb
in
xchg
mulb
jmp
jmp
sbb
mov
or
sbb
pop
push
xchg
arpl
add
and
dec
push
insb
push
mov
add
bound
pop
movsl
and
or
jg
ss
arpl
and
cmpsl
repnz
aaa
push
int3
add
add
xor
add
movl
popa
add
cmpsb
sbb
notb
cmpb
cmp
add
in
cmp
dec
imul
cmpsl
cmp
or
popa
or
sub
testb
and
push
sahf
cmpb
jae
cld
xchg
incb
and
add
add
pop
jno
adc
sbb
push
movb
cwtl
call
mov
inc
aaa
inc
roll
mov
mov
push
sub
mov
add
fistpl
int
xchg
ss
sub
sbb
sbb
push
push
movsl
or
pop
xchg
inc
or
inc
push
mov
inc
addb
pop
mov
dec
or
and
pop
insl
sub
insl
outsb
xlat
mov
sub
pop
jae
popa
pop
ss
xor
jbe
mov
mov
lods
inc
loopne
gs
add
fwait
loopne
lock
jg
mov
add
pop
or
or
adc
mov
xchg
add
adc
fsubrl
lods
pop
arpl
push
xchg
orb
orb
sarl
decl
jb
ja
lock
jno
mov
mov
mov
push
sbb
jg
outsl
mov
lods
lods
dec
and
or
fcmovnu
out
fs
movl
inc
pop
andb
sbb
daa
test
sbb
xlat
pop
pop
subl
in
mov
insb
cli
ljmp
mov
daa
push
inc
loop
dec
loop
add
sub
add
in
mov
loope
and
add
mov
pop
test
dec
xor
mov
dec
and
inc
and
push
sbb
or
mov
rcrb
inc
or
fdivrp
push
mov
adc
jb
xchg
sub
mov
sbb
xchg
rclb
fs
outsb
mov
and
fdivl
jnp
ss
inc
out
mov
popa
add
mov
roll
dec
inc
or
incl
push
mov
inc
xchg
lahf
pop
mov
arpl
inc
and
insb
test
pop
mov
sbb
outsb
jp
push
inc
negb
inc
push
cld
add
cmpl
pop
mov
or
push
mov
outsl
decl
inc
loop
fsubl
and
popa
adc
or
jg
test
lock
cmp
sbb
inc
out
adcb
cltd
xchg
pop
lods
sub
push
scas
incb
pop
sbb
push
mov
jb
jge
lcall
push
push
lods
mov
and
or
mov
lds
in
repz
mov
jecxz
subb
xchg
push
insb
stos
mov
imul
call
cli
call
test
outsb
out
xchg
outsb
jecxz
push
data16
mov
mov
mov
ret
and
dec
cltd
ror
cmp
and
xchg
arpl
jl
or
jl
jg
in
ret
rcrb
push
loope
dec
sbb
push
fadds
pushf
fcomi
or
in
mov
jecxz
adc
add
and
js
cmpsl
push
aam
daa
pop
adc
mov
xor
mov
inc
adc
push
mov
add
fisubrs
or
popa
outsl
add
and
jbe
mull
clc
arpl
push
outsb
mov
cmp
data16
jmp
orl
sbb
in
std
add
test
in
pop
or
xorb
sub
decb
mov
cmpsl
loop
push
xor
test
insb
add
add
adc
inc
adc
mov
pop
mov
and
pop
pop
adc
cmp
xchg
add
xchg
cs
inc
sbb
filds
loopne
cmp
mov
sbb
insb
icebp
mov
xchg
push
and
cmp
sbb
mov
inc
outsb
dec
mov
insl
jl
fildl
decl
sti
sbb
add
cmpsb
cwtl
popa
cmpb
mov
add
pop
decl
sub
adcl
cmp
clc
ss
or
adc
push
xchg
outsb
adc
sub
jmp
push
loopne
test
cmp
idiv
or
push
mov
push
rcll
rorl
mov
lahf
adcl
daa
movsb
aaa
mov
fsubrl
mov
out
add
pop
pop
sti
jo
push
pop
add
adc
ljmp
insb
jb
dec
mov
push
imul
and
add
sbb
loope
pop
incl
mov
jb
cmovl
mov
add
or
xchg
and
lcall
add
pop
inc
mov
cld
jg
sub
push
cmp
rorb
mov
adcb
sahf
das
or
out
les
loop
mov
test
add
test
test
mov
fwait
cmp
sub
nop
add
mov
xchg
hlt
sbbl
jg
adc
jecxz
or
fwait
mov
inc
out
sahf
mov
push
hlt
aaa
xorl
subl
mov
xor
dec
adc
movsl
add
sbb
add
jl
adc
dec
cmp
add
adc
mov
xor
jecxz
and
xor
push
sbbl
add
pop
incl
adc
jo
lahf
adc
or
xor
push
ss
incl
add
gs
adc
dec
add
aaa
xchg
lcall
dec
mov
aam
xor
test
push
mov
pusha
or
adc
lcall
clc
mov
inc
or
stos
sub
aad
lods
push
xor
add
mov
das
mov
mov
push
adc
aaa
fdivs
pop
inc
push
test
push
sbb
mov
nop
fsubl
push
lcall
mov
enter
mov
inc
ljmp
push
fnstsw
int3
xchg
lock
fcmovnu
outsl
clc
les
push
adc
or
pop
iret
lds
fnstenv
add
pop
add
mov
push
add
add
int
mov
sub
sub
add
or
rolb
leave
sub
push
xor
cmpsb
xor
xchg
enter
mov
sbb
je
cmp
inc
jno
push
fdivrs
lea
dec
push
adc
xchg
add
cli
mov
push
dec
inc
dec
les
sub
xchg
movsb
jl
in
test
push
sti
inc
push
icebp
sbb
or
repnz
xchg
clc
aas
sti
xor
dec
add
sbbb
or
sub
cmpb
inc
cs
lds
sub
movsb
fs
mov
test
mov
movsl
xor
test
or
test
push
ljmp
push
xor
aam
sbb
push
dec
mov
sti
or
and
jge
movsb
push
rcll
movsl
pusha
sarb
fidivl
mov
xchg
fiaddl
lods
in
fistl
xchg
add
je
mov
sub
mov
into
xchg
mov
ret
pop
or
ds
int3
xacquire
cmpsb
push
or
subb
std
scas
cs
test
addl
or
inc
xchg
testl
cmp
pop
cmp
loop
xor
add
imul
cmc
inc
mov
movl
sub
mov
cmpsb
mov
mov
bound
sbb
test
jle
push
add
stos
cmp
pop
mov
jecxz
mov
adc
or
sarl
dec
lcall
or
add
mov
stc
xchg
push
fadds
inc
or
dec
xchg
or
lcall
nop
push
mov
fbstp
xor
stos
add
dec
shrb
sbb
data16
insl
xor
inc
mov
dec
rclb
dec
fs
in
rcr
fisubl
vpmacssdd
sahf
stos
subl
loope
adc
filds
adc
xor
push
addr16
or
scas
push
popf
mov
xchg
xor
add
fstpt
insl
movsl
iret
inc
or
jmp
cwtl
or
jmp
scas
cli
mov
pop
push
inc
clc
pop
daa
jo
cld
sti
int
and
sbb
lds
or
imul
into
adcb
inc
adc
enter
fmuls
adc
shl
and
push
fcmovu
sbb
ret
sub
add
inc
push
popf
push
imul
popf
out
stos
stos
xor
mov
sbb
aam
and
lahf
push
inc
insb
add
loope
mov
sbb
add
js
sahf
adc
aam
push
sub
lcall
adc
into
cltd
mov
sbb
add
add
add
mov
lods
or
lret
add
push
dec
fnsave
push
mov
popf
or
mov
clc
push
jge
xchg
adc
int3
or
cmp
jle
loop
xchg
lods
mov
and
loope
fisubrl
repz
or
in
scas
inc
imul
add
shrl
push
cmp
lods
insb
adc
add
mov
sbb
aad
push
stos
fcompl
test
jle
and
jmp
pusha
adc
call
push
inc
das
ret
cs
push
inc
andb
aaa
fisubrl
incl
bound
jae
push
sti
adc
or
dec
pop
les
call
add
adc
pop
pop
loopne
es
andl
fsubs
fwait
xchg
adc
dec
bound
fs
add
adc
pop
cs
ds
or
inc
sbb
sbb
xor
sbb
push
adc
out
inc
push
in
sub
adc
or
push
and
pushf
les
xor
cmpsb
push
add
jno
std
shlb
and
and
outsl
mov
in
add
sti
add
je
dec
das
divb
jno
pop
dec
sub
es
lods
loopne
call
and
popa
mov
scas
mov
add
rclb
loop
adc
inc
sub
jecxz
shr
adc
add
sub
addl
inc
add
loopne
add
lods
imul
sti
or
or
jo
and
xchg
fisubl
test
aaa
adc
adc
adc
jnp
loop
movsb
jo
ret
lods
add
ret
sbbb
add
pop
jnp
fbld
inc
out
les
outsb
pop
fwait
push
outsb
lcall
js
xchg
std
ficompl
jmp
cmpsb
out
cli
add
in
mov
in
add
decb
add
bound
xchg
nop
push
lock
adc
scas
mov
pop
adcb
push
ds
xor
in
les
inc
addb
insl
mov
mov
aaa
sarb
hlt
xchg
lods
inc
jp
xchg
dec
aaa
xor
jmp
filds
mov
ljmp
mov
add
leave
andb
mov
outsl
push
inc
add
mov
fmuls
bound
push
outsl
clc
mov
or
outsb
inc
jb
or
outsb
jb
or
add
outsb
xor
ficomps
lret
add
pushf
adc
xchg
enter
fs
loopne
add
push
and
call
test
cmc
int3
sbb
lods
dec
pushl
or
push
jle
adc
das
add
mov
lock
mov
in
xchg
adc
inc
dec
lret
loopne
push
loopne
or
and
and
xchg
js
mov
mov
arpl
or
and
push
fs
faddl
pop
xlat
adc
add
jg
iret
mov
sti
cltd
mov
push
pushf
fs
rclb
and
test
adc
mov
movsl
int3
aaa
push
xchg
mov
out
rcrb
inc
mov
jecxz
xchg
adc
fmuls
pop
xor
mov
push
testb
sub
mov
add
hlt
popa
cmp
push
adc
adc
fisttpl
cmp
pusha
push
adc
jecxz
shll
outsl
lcall
jecxz
addl
sbb
bound
add
dec
dec
data16
jecxz
ret
addr16
mov
add
adc
pusha
ficoml
in
movsb
sbbb
or
dec
add
dec
lock
sbbb
insb
push
inc
fsubrl
adc
leave
cmpb
push
std
push
xchg
fisubrl
xor
xor
xor
insl
add
jmp
or
sub
or
insb
imul
cmp
pop
nop
stc
pop
dec
sbb
or
frstor
in
and
decl
mov
cmp
mov
imul
andb
push
fisubs
adc
fbld
pop
dec
fwait
movsb
faddp
sbb
out
pop
mov
lock
push
sbb
arpl
cmp
in
cmpsb
cmp
cmpl
add
pop
pop
add
and
dec
sbb
bound
pusha
xor
ret
pop
jne
ret
jo
dec
pop
xchg
sbb
sar
scas
outsl
stos
add
stos
sbbl
and
mov
mov
aam
and
repnz
xchg
stc
add
jb
subb
push
cmp
filds
xor
mov
movsl
hlt
and
pop
repnz
add
jge
sahf
sbb
ljmp
add
dec
fsubrl
xchg
out
fimuls
or
in
xchg
jecxz
lcall
and
fidivs
jnp
test
add
fwait
mov
jb
ficoml
mov
lcall
jp
cmpsb
mov
pop
push
mov
dec
inc
imul
sti
and
mov
jbe
dec
cmpsb
pop
lret
test
adc
imulb
xchg
adc
pop
jg
popa
add
adc
out
scas
loope
sar
inc
mov
dec
sub
pushf
mov
sbb
push
inc
push
pusha
mov
mov
mov
add
and
psubusb
sub
int3
repz
mov
test
dec
loope
jg
rcr
orl
mov
sub
cld
outsb
rcrb
xor
xor
pop
lock
call
add
rolb
mul
push
bound
and
mov
fadds
push
pop
inc
in
data16
adc
nop
aaa
xchg
mov
es
loopne
add
xor
xchg
hlt
ds
call
ljmp
or
bound
in
dec
mov
adc
test
mov
loope
movsb
mov
addr16
rcrb
add
outsl
js
scas
xchg
int
fadds
xchg
clc
aad
cmc
aam
cmpsb
jg
xchg
mov
sbbb
rcrb
and
or
inc
or
xchg
xchg
xor
fs
scas
and
jmp
push
aas
mov
dec
stos
into
xorb
cld
roll
or
push
push
pusha
inc
inc
xor
movl
rolb
int3
cmp
push
or
push
insl
add
sbb
push
push
add
sti
fidivs
ljmp
push
pop
ret
rcrl
inc
rolb
adc
shlb
xchg
outsb
ficoms
dec
adc
and
push
loopne
add
and
xor
xor
jg
loopne
inc
jo
and
or
es
pusha
ja
mov
les
not
or
imul
call
push
push
mov
pushl
mov
shrb
add
std
or
pop
pop
or
outsb
jecxz
inc
inc
add
add
mov
mov
ljmp
pop
lea
or
or
inc
adc
cmp
lock
add
pop
lods
push
roll
or
daa
pop
pop
xchg
data16
xor
outsb
jp
mov
sbb
ret
adc
or
mov
and
cmpsb
lock
stos
push
push
add
jecxz
pop
loope
les
xchg
jo
inc
insb
rcrl
or
lods
mov
add
std
mov
xchg
or
mov
xlat
mov
hlt
and
stos
dec
adc
inc
sbb
addr16
add
jle
push
xchg
add
mov
adc
lcall
add
or
or
aad
jne
jmp
inc
out
sbb
arpl
scas
mov
jp
dec
jo
loope
mov
mov
ss
decl
loop
loopne
shl
aam
aaa
add
aam
jb
adc
enter
not
push
lcall
or
sbbb
mov
mov
mov
mov
or
xor
or
dec
nop
and
xchg
and
stc
orb
push
mov
setae
mov
sub
push
jmp
jge
add
out
adc
mov
fdiv
loope,pn
test
insl
and
rclb
mov
dec
push
call
push
ret
mov
adc
sub
jns
or
rorb
push
or
jno
addb
inc
jb
idiv
ffreep
aam
mov
outsb
bound
xchg
sbb
inc
push
push
add
push
and
xor
push
rcl
mov
push
pop
sub
subl
mov
dec
or
push
bound
inc
adc
xchg
mov
daa
or
mov
cltd
push
or
jecxz
inc
sub
push
loop
adc
xlat
push
and
mov
xor
das
std
punpcklwd
add
idivb
mulb
and
incl
mov
and
or
or
or
ljmp
and
xchg
loope
test
dec
cmp
das
ficoml
hlt
mov
insl
push
cld
mov
dec
jo
outsl
jp
lock
sti
add
add
mov
xchg
mov
mov
pop
sbb
add
mov
adc
add
insb
cmp
sar
nop
rcrl
inc
ret
nop
or
push
adc
lock
in
adc
ds
out
orl
pop
dec
xor
jo
cld
inc
int3
sub
cltd
push
test
pop
subb
mov
pop
sbb
or
arpl
int3
push
fcompl
mov
mov
or
icebp
aaa
and
xor
mov
repnz
inc
cmp
aam
or
or
push
test
ss
mov
pop
les
adc
call
ret
adc
dec
add
add
mov
test
dec
sbb
sbb
adc
push
mov
dec
or
jl
add
lcall
jno
mov
insb
out
nop
cwtl
clc
jg
add
mov
andb
add
push
adc
dec
pusha
dec
inc
jp
in
aaa
orb
inc
xor
cs
and
add
insb
sub
pop
out
push
adc
inc
mov
lcall
inc
push
add
sub
sub
pushl
mov
and
cld
in
pusha
neg
cmp
push
jmp
nop
cli
mov
sub
loopne
mov
add
ret
and
inc
sbb
pusha
xchg
lods
outsl
mov
pop
nop
ficoms
mov
aaa
jl
sbb
cmp
sahf
out
mov
adc
or
xchg
je
cmpsl
cmp
faddl
nop
mov
push
mov
in
pop
and
ret
adcl
fildll
xchg
clc
cmc
js
nop
fcompl
xchg
hlt
sub
xchg
incl
insb
sub
fildll
fwait
int3
add
pushl
jmp
repnz
mov
ret
push
xor
rolb
pop
popa
adc
push
push
mov
adc
jae
cmpsl
pushf
cli
outsl
mov
pop
jmp
sbb
sbb
fldenv
stos
inc
mov
dec
outsb
lock
outsl
loopne
add
sbb
push
insb
arpl
outsb
add
fsubs
ljmp
shlb
and
or
es
lcall
mov
mov
add
addl
enter
jae
and
dec
subl
and
xlat
insb
mov
xchg
lcall
sbb
faddl
roll
jl
int
sbb
rcll
mov
outsb
scas
inc
pushf
and
or
out
and
nop
pop
mov
jecxz
clc
pop
js
jecxz
rcrb
push
incl
pop
fisttps
cmp
add
scas
add
aam
jne
fimuls
cmp
call
dec
lcall
lret
push
lcall
adc
sub
testb
xchg
incl
dec
adc
add
dec
insb
push
call
cmpsb
aaa
loope
dec
jl
mov
xchg
insb
subb
adc
lods
or
add
or
or
jo
push
push
test
xchg
mov
loopne
push
xchg
aam
mov
mov
push
push
data16
add
rorb
sub
das
xor
sahf
mov
sub
cmpsb
adcb
scas
push
test
inc
andl
pop
sub
aam
call
add
mov
add
xor
jno
jecxz
xchg
cmc
add
movsb
es
mov
mov
or
xchg
add
and
mov
andb
insl
lret
lock
jno
in
push
and
add
or
sub
add
mov
movsb
and
and
cld
adc
cmp
test
loop
xorb
pop
or
push
or
xchg
jno
cmp
ficoml
repnz
popl
add
pop
xor
pop
or
or
or
loopne
mov
xor
mov
jmp
lock
mov
add
ja
scas
andps
mov
aas
sbb
inc
push
ss
xor
xchg
adc
mov
xor
mov
inc
sbbb
or
mov
sub
add
ret
loopne
adc
arpl
adcb
add
inc
inc
ja
and
imul
inc
ret
cli
arpl
shlb
in
mov
dec
subl
xchg
jnp
cli
lahf
push
loop
add
fildll
ret
lret
add
add
inc
or
shrl
cmp
adc
add
inc
jg
pop
nop
clc
sbb
bound
or
loop
cli
lea
inc
add
inc
jnp
rcrl
adc
data16
adc
push
cld
jae
inc
add
addl
or
push
shlb
jecxz
add
addb
cmp
fdivs
xor
inc
xor
mov
and
xor
pop
pop
sub
cs
mov
shl
daa
xchg
iret
add
mov
add
jmp
push
adc
push
jo
loopne
add
nop
adc
dec
add
dec
and
or
mov
add
movsb
rorl
push
ss
xor
ss
in
cs
adc
push
cmc
lcall
sub
push
xchg
jmp
nop
out
xchg
call
push
fistl
xchg
out
test
sub
mov
insl
or
mov
aas
fs
clc
sub
inc
push
pop
mull
pop
cld
inc
ret
nop
mov
pop
push
xor
or
inc
mov
test
push
push
mov
mov
mov
mov
and
into
pop
add
inc
dec
je
xchg
ret
mov
pop
out
into
mov
cmpsb
fnsetpm(287
es
loopne
or
push
loopne
andb
scas
pushl
adc
and
pop
mov
jnp
inc
cmpsb
or
loope
mov
mov
mov
add
sbb
push
xchg
out
xchg
in
add
movsl
fs
iret
inc
fdivl
or
imulb
sub
add
test
pop
push
sub
jg
call
mov
dec
pop
and
and
ja
cs
jo
add
inc
es
adc
cli
mov
test
loope
or
push
adc
sbbl
pop
xchg
jmp
es
mov
inc
pmulhuw
aaa
inc
cli
loop,pn
rorb
xchg
xchg
in
das
add
nop
andl
movsl
or
push
pusha
sub
dec
xorb
cmp
in
addb
mov
cmp
es
mov
loopne
adc
int3
pop
adcb
test
mov
addb
and
inc
pusha
adc
inc
loope
pop
and
shll
mov
adc
test
mov
andb
add
inc
rclb
pop
les
adcl
sar
fsubs
fbstp
and
and
push
addl
mov
add
pop
repz
push
jl
or
pop
mov
add
add
pop
ret
push
dec
push
test
lock
jmp
out
rcr
sar
call
jge
push
mov
xor
push
fidivs
sbbb
xorb
mov
sbb
lret
out
or
decb
push
ret
dec
popa
xor
push
dec
sti
mov
inc
sbb
pusha
adc
cmpsb
add
dec
jae
jge
add
adc
call
scas
cld
pop
sub
lods
add
andl
call
lahf
ret
push
add
xor
imul
mov
add
add
push
pop
mov
xchg
adc
outsb
add
push
cmp
mov
imul
mov
lcall
sbb
cmpsl
mov
fistps
jp
add
fdivrp
loopne
imul
incl
insl
push
ret
mov
scas
and
dec
and
data16
loopne
pop
imul
das
push
test
pop
pusha
jb
inc
test
add
loopne
cs
inc
imul
cs
and
push
cs
imul
inc
cmp
jae
push
inc
decb
outsb
add
add
fiadds
xor
stos
fwait
xor
lahf
mov
lcall
sub
divl
mov
out
dec
push
std
or
add
or
add
sub
adc
lcall
ret
sti
inc
adc
aam
ret
iret
adc
jecxz
add
call
pop
dec
adc
or
lock
add
mov
les
std
xchg
es
mov
sub
enter
or
lahf
ds
pop
pop
push
xor
fadd
insb
jle
stos
fs
add
shrl
sbb
imul
lock
addr16
add
orb
add
add
inc
adc
mov
xlat
movsl
cmpsl
sbb
filds
add
orb
lcall
jecxz
and
xor
xchg
ds
mov
pop
insb
cmp
cs
and
xor
add
in
rolb
jge
jg
inc
shlb
jge
jg
add
pop
shrl
pop
sub
cmc
add
push
sbb
and
lods
gs
push
mov
adc
call
xchg
push
repz
int3
jo
ret
mov
mov
sub
jmp
dec
int
add
cmp
xor
add
pop
sbb
mov
into
pop
lcall
jmp
and
mov
pop
inc
adc
ficoms
adcb
inc
inc
mov
je
sub
fdiv
mov
imul
mov
and
shrl
movsb
add
mov
pop
jo
mov
int
mov
cld
push
test
lret
mov
fbstp
jo
repz
jb
cmp
ss
push
and
jmp
push
push
jne
pmullw
mov
ret
jl
stos
fldcw
adc
fistl
or
sbb
cmp
std
push
mov
pop
adc
mov
inc
or
add
js
not
xor
mov
mov
sbb
pop
popa
adc
pop
add
pop
xchg
adc
hlt
cmp
jle
imul
out
aaa
sub
and
pop
jne
push
push
push
sub
icebp
inc
aad
mov
sbb
mov
jno
stos
ja
out
push
xlat
or
shrl
aas
movsb
mov
jo
bound
sbb
xor
int3
dec
dec
fidivl
lock
push
jecxz
push
cmpl
sbb
pop
cmpl
in
loopne
inc
jo
aad
add
xor
lods
lock
adc
or
aaa
cwtl
dec
fstps
lea
sbb
and
inc
mov
popa
push
popa
scas
mov
push
bound
mov
xchg
jb
in
pop
sub
or
sbb
xor
stos
push
inc
popa
mov
stos
mov
inc
and
out
and
sbb
stos
add
std
mov
add
sbb
arpl
stos
mov
decb
in
jae
arpl
mov
pop
xchg
sbb
push
xor
xchg
jns
jge
imulb
js
jno
fidivrs
sbb
or
mov
push
mov
pop
out
jo
rcrl
inc
push
xor
push
data16
rorb
and
aad
cmpsl
imul
mov
sub
std
pop
mov
add
pop
out
sub
push
add
push
push
sub
dec
add
mov
adc
pop
jp
cmp
jb
or
jbe
repz
sbb
add
jnp
mov
xchg
add
stos
and
sbb
lcall
dec
inc
inc
jns
mov
imul
rcr
dec
xor
cltd
popf
sbb
xchg
mov
sahf
cmpsb
mov
sahf
cmpsb
imul
cmpsb
imul
dec
imul
add
in
fldt
mov
addb
loope
in
sbb
stos
sbb
pop
adc
add
cmp
imul
imul
out
jns
jno
imul
popa
gs
popf
lcall
lea
imul
lods
mov
out
lcall
imul
xor
add
dec
rcrl
sahf
or
add
or
cmpsb
or
cmp
xor
cmpsb
jns
and
dec
jns
cmpsb
jns
inc
inc
jns
cmpsb
jns
cmpsb
jno
imul
gs
popf
xchg
xchg
mov
cmpsb
jns
addl
test
jns
movsl
rcl
leave
std
push
sbb
icebp
add
enter
mov
add
sbb
stos
mov
mov
and
sbb
mov
xor
sub
mov
test
mov
mov
movsl
or
stos
movsb
fdivrl
js
movsl
add
stos
movsl
pop
shll
loopne
in
adcb
add
nop
movsl
mov
inc
mov
stos
movsb
jmp
mov
mov
sbb
loopne
dec
stos
cmp
push
scas
or
add
insw
lcall
out
sbb
fs
jl
adcl
sarl
inc
jns
cmp
sarl
jne
insl
popa
sub
xchg
sarl
lea
dec
mov
loopne
loopne
adc
out
push
dec
pusha
add
shll
int
shrl
imul
arpl
mov
roll
repz
mov
sub
and
and
sbb
mov
pusha
jo
mov
add
or
mov
dec
xor
stos
mov
xchg
cmpl
add
stos
pusha
dec
aas
sub
mov
xchg
out
cli
dec
repnz
loop
out
scas
stc
pop
xchg
add
adc
jge
shll
cmp
xor
cmpsl
sbb
and
pop
pop
mov
lcall
inc
pop
mov
aam
sbb
les
mov
and
or
addl
add
cmpsl
inc
outsb
dec
mov
add
adc
clc
imul
mov
dec
out
xchg
enter
popf
adc
mov
mov
sub
mov
mov
sti
out
ret
fadd
add
xor
add
add
repnz
push
int
ds
add
es
decl
pop
push
push
jecxz
les
sub
fistpll
icebp
and
shlb
fwait
mov
mov
or
or
in
loopne
mulb
or
push
jecxz
jle
ds
lcall
nop
pop
push
int3
les
mov
fistpl
adc
or
push
in
dec
insl
stos
lea
xor
call
adc
out
pcmpgtd
enter
adc
or
les
mov
adc
popa
add
inc
add
xor
ljmp
cmp
cs
and
adc
inc
add
or
adc
or
or
sbb
addr16
and
pop
cmp
roll
out
add
pushl
cwtl
jg
sbb
aaa
push
or
jb
or
push
mov
cmp
fiadds
nop
add
mov
mov
or
or
pop
adc
aam
mov
std
cmp
lret
dec
add
divl
xor
adc
or
incl
loope
adcb
add
in
push
pop
xorl
sub
adc
lcall
testb
sbb
or
adc
jg
std
pushl
in
add
push
and
mull
xchg
testl
loope
pop
jae
push
push
and
mov
mov
out
mov
rolb
or
sbb
les
outsl
add
mov
jg
adc
or
ret
xchg
sub
pop
adc
test
pushf
rolb
or
adc
in
sbb
xchg
dec
in
ret
mov
out
jne
adc
inc
mov
adc
movsl
inc
rcrb
add
jo
jg
fiadds
jb
mov
mov
pusha
jg
add
fldt
sub
fstpl
adcl
cmp
add
ljmp
sbb
sbb
xchg
sbb
aaa
sysret
out
push
add
lret
cli
adc
pop
add
and
add
shll
std
xor
push
scas
jl
jmp
inc
scas
inc
xchg
or
push
out
cmc
add
add
gs
in
shrb
hlt
mov
repz
add
mov
in
filds
bsr
jecxz
scas
paddq
pop
icebp
loop
pop
cld
or
push
push
loope
add
inc
bswap
hlt
add
xchg
stc
sar
add
rolb
adc
por
inc
or
or
push
or
lar
nop
out
dec
in
fisubl
jmp
subb
divb
icebp
es
in
imul
incl
pop
in
or
add
lods
jo
inc
or
or
loopne
lcall
loopne
jbe
pusha
flds
pop
rolb
or
and
xor
sbb
jl
push
xchg
jg
insl
clc
mov
scas
stos
fs
fidivl
and
roll
pop
std
loope
and
es
or
mov
xor
push
leave
adc
pusha
in
lcall
inc
or
jo
mov
sub
and
or
push
jl
push
aaa
pop
fwait
mov
out
pop
loopne
add
push
lcall
jg
mov
and
sbb
inc
mov
shll
adc
jg
or
dec
icebp
and
xchg
mov
jmp
mov
icebp
sbb
lcall
push
pop
add
into
bsr
aaa
mov
int3
sub
lds
enter
pop
xor
jns
or
adc
pshuflw
xor
icebp
or
insb
or
fwait
cmpsb
add
sbb
xchg
imul
mov
insl
sbb
or
cli
or
loop
insl
xchg
mov
add
lcall
roll
decb
out
icebp
call
mov
push
jbe
cmp
or
sbb
in
ret
daa
xor
cmp
add
push
mov
push
mov
mov
push
sub
cwtl
cmpsb
std
outsl
outsb
sbb
add
push
add
in
inc
cmpsb
imul
add
sldt
cwtl
fucomp
add
jl
cmc
jp
xchg
add
pop
adc
mov
mov
jb
lcall
and
cli
lea
sub
sub
add
stos
lods
push
fldt
push
mov
push
outsb
and
xor
push
cs
inc
xchg
cmc
fildl
jmp
fisttpl
in
fisttpl
loope
call
fwait
bound
or
mov
push
push
sbbb
add
rcr
inc
add
sti
inc
and
xchg
int
dec
xchg
rcr
xchg
lds
pop
cmc
push
fisttpl
fidivl
std
add
push
fisttpl
lock
pop
cmp
push
cmp
subb
ljmp
mov
dec
or
out
adc
sbb
mov
cmp
jmp
or
push
cmpsl
out
pop
push
cmc
or
jmp
inc
xchg
dec
add
sbb
push
ret
jmp
jb
lock
add
lcall
fiaddl
daa
rclb
outsb
and
fs
cmp
lods
test
push
xchg
movsl
jp
jg
rcr
or
jmp
xorl
add
in
pusha
addl
or
mov
sbb
scas
pop
jg
mov
fiaddl
es
sbb
shrb
imul
and
inc
andl
mov
push
adc
adc
sbb
sbb
xchg
jmp
in
idiv
aas
es
in
or
packuswb
adc
sbb
lret
sbb
repnz
dec
push
dec
int3
cld
es
cmp
push
pop
lock
orl
fwait
andb
mov
mov
sbbl
out
psubsb
add
repnz
decb
ljmp
mov
in
in
incl
cld
and
loop
sbb
and
dec
daa
jmp
daa
pusha
cmpb
fildll
add
daa
outsb
mov
fwait
aas
or
popa
shll
rorb
mov
subl
and
aad
or
ret
int
push
fldl
lds
ficoml
sarb
mov
lcall
and
xor
inc
push
testl
dec
daa
inc
and
cs
je
in
mov
mov
inc
adc
jae
push
in
pop
inc
xor
dec
aaa
nop
adc
mov
add
push
inc
jnp
es
pop
lods
mov
sbb
cmp
aam
and
cmp
push
push
shr
push
fcmovnu
fimull
imul
das
addr16
jmp
mov
mov
adc
es
add
add
cmp
outsl
adc
xlat
push
mov
xchg
ja
sub
mov
stc
and
or
popf
lcall
mov
scas
pop
jecxz
repnz
push
or
xchg
or
stos
pop
pusha
and
rolb
cmp
mov
add
xlat
mov
fistl
sub
addb
test
mov
add
in
sbb
not
enter
loopne
sti
dec
movsl
aad
rol
rcll
pusha
lret
pop
js
shll
rolb
pop
mov
shr
pop
mov
ss
sub
push
iret
sbb
jno
iret
sbb
xor
iret
lret
push
pop
iret
call
push
in
daa
cmp
loope
mov
je
xchg
pushf
jge
cmp
push
lods
cmc
leave
test
add
push
negb
es
push
sub
sbb
jo
push
iret
lock
cmpsl
push
or
pushf
lahf
push
jp
int
fwait
push
sbb
lret
test
mov
sbb
cmp
push
int3
cmc
add
cmp
ljmp
push
jecxz
fdivp
addb
dec
pop
push
imul
sarl
jmp
mov
sbb
or
jnp
pop
ds
mov
or
mov
add
rcll
sub
clc
sbb
lods
div
aam
cmc
add
mov
insl
mov
jae
or
push
out
mov
xlat
les
bound
imul
push
sbb
andl
push
add
vmovhpd
roll
or
xchg
or
and
xor
ja
sbb
pop
in
mov
sarb
out
ss
xor
add
mov
push
fidivrl
lods
ss
add
pop
pop
vcvtps2dq
push
jge
jmp
pusha
fildll
fstpt
mov
loope
hlt
pop
mov
push
lret
jo
inc
jno
sbb
pusha
lds
dec
ret
sbb
aaa
push
xchg
lea
jl
cmp
ror
loope
adc
add
cs
out
sbb
divl
in
sub
pop
test
push
pop
movl
sbb
addb
pop
sub
in
pop
mov
vmovsd
adc
pop
fcoms
sbb
jo
sbb
or
sub
pop
roll
sar
push
fmuls
xor
push
jb
and
fnstsw
jmp
lea
fwait
jo
mov
cmp
test
mov
test
int
push
push
push
in
or
or
js
add
cli
lret
lods
jp
ret
lret
or
nop
add
int
inc
push
pop
push
fmul
test
stos
int
sub
addb
pop
lret
popf
sahf
pop
icebp
sbb
int
pop
addr16
push
je
ret
mov
addr16
lock
sub
jo
fadds
or
lret
aas
push
addps
jb
subb
lret
imul
push
int
adc
pusha
push
loopnew
ljmp
mov
idivb
sub
lret
stos
int
rol
stos
sbb
pop
sub
add
pop
int
cmp
and
pop
xchg
sbb
cmp
jns
push
js
inc
subb
cld
sub
jp
mov
mov
mov
test
lea
in
jmp
pop
mov
test
mov
lcall
adc
add
mov
std
iret
push
orb
sbb
xor
scas
xchg
nop
inc
add
lahf
mov
js
mov
xchg
xchg
dec
outsw
inc
or
mov
lcall
sub
cmpsb
mov
mov
add
fisubrl
add
sar
mov
test
mov
jno
call
lods
loopne
call
or
xchg
xchg
xchg
xchg
or
adc
loopne
mov
jle
add
push
mov
push
or
repz
add
mov
or
or
jg
or
loope
add
adc
mov
adc
adc
pop
cld
mov
xchg
nop
mov
mov
mov
or
xor
and
das
pop
mov
test
xchg
xor
jne
clc
outsl
mov
mov
sbb
mov
xchg
loope
ret
outsl
xor
scas
add
in
mov
test
cvttps2pi
stos
orb
pop
and
mov
xchg
sahf
lock
cwtl
sbb
cmp
in
sbbl
and
test
popa
adc
stos
add
insl
or
or
test
push
push
push
inc
out
push
movsl
jg
adc
adc
xorl
ljmp
jecxz
xchg
sbbb
jo
sbb
sub
add
incb
popf
cmpb
xchg
outsb
push
imul
xchg
test
mov
push
int3
sbb
or
mov
xchg
or
mov
lds
push
or
push
pop
das
jb
mov
xchg
cmpsl
inc
daa
in
mov
inc
sbb
add
leave
add
add
mov
add
mov
ljmp
sub
push
test
mov
cmp
jg
xchg
or
add
addb
adc
scas
xchg
movsl
mov
fnstsw
mov
mov
mov
sub
scas
cmp
out
je
mov
lock
test
add
mov
add
pusha
in
mov
ss
data16
pop
jl
add
dec
xor
pop
mov
nop
add
adc
xor
or
mov
add
add
test
jl
or
add
andb
inc
pushf
in
insl
push
mov
adc
ss
cwtl
sbb
subb
outsl
mov
addb
xorb
outsb
cmp
mov
and
ds
fsubr
scas
cmpsb
add
and
call
addr16
adcb
rolb
test
aad
add
dec
jg
or
fs
add
mov
aaa
xor
mov
mov
test
mov
xor
mov
mov
data16
jae
addb
dec
or
out
sub
in
andb
cmpsl
aaa
jo
push
ret
sarb
mov
mov
add
inc
add
fs
adc
jg
add
sbb
pop
addl
pop
call
ljmp
call
push
scas
inc
outsb
rcll
call
or
mov
xchg
cld
and
mov
scas
stos
pop
sub
call
inc
and
repnz
mov
rcrl
call
dec
mov
pop
xchg
rolb
nop
cltd
lret
mov
ss
add
ds
adc
mov
xor
mov
mov
or
add
inc
push
les
xor
inc
add
daa
or
xchg
inc
add
add
idiv
xchg
xchg
rclb
adc
push
and
lret
les
or
mov
add
inc
or
mov
or
add
shlb
add
and
dec
mov
adc
int3
lds
sar
push
push
sub
xor
jle
inc
dec
and
enter
mov
sub
xor
ror
inc
and
inc
xchg
mov
ret
test
pop
in
mov
out
xor
or
loop
fildll
repz
add
aas
pop
jecxz
add
dec
popa
and
cmp
popa
or
mov
cmp
sub
push
jl
xor
add
dec
mov
mov
xchg
mov
jg
mov
enter
je
ret
shrd
push
fs
sub
popa
push
inc
inc
in
sub
sti
sbb
mov
loopne
ficoms
cmpsl
and
rcll
or
xchg
lock
sub
adc
fisttps
sub
xor
loopne
mov
cld
imul
je
mov
sbb
push
mov
or
adc
mov
mov
xchg
jg
jl
and
add
inc
js
jecxz
add
add
sbb
xchg
or
ljmp
push
jbe
or
add
xchg
test
dec
call
movsb
push
ret
jo
sbb
pop
sbb
movsb
add
mov
lods
fisubrs
add
leave
mov
push
xchg
test
mov
loopne
aam
lcall
in
pop
jle
inc
outsb
push
mov
outsb
test
push
sti
in
rclb
pusha
cmp
loopne
aam
loopne
xor
jg
pop
mov
xor
pop
sbb
mov
fisubs
add
sbb
test
pop
shlb
outsb
add
add
gs
es
adc
adc
mov
xor
hlt
mov
jb
xchg
mov
inc
push
pushf
shrl
and
and
loopne
enter
mov
mov
loop
aad
pop
and
loope
clc
dec
xor
cltd
pop
aad
mov
or
cli
clc
idiv
out
push
adc
pop
call
test
adc
mov
ret
add
mov
shl
bound
or
push
cmpl
pop
mov
and
and
xchg
jnp
fidivl
insl
test
or
add
inc
movsl
and
pusha
scas
xchg
jl
mov
roll
popa
sub
in
lods
andb
pop
xor
test
inc
rorb
rolb
lock
fs
mov
push
or
bswap
in
imul
pop
and
add
cmp
ret
jg
xor
xchg
sbb
mov
icebp
and
dec
cli
add
push
pop
lock
icebp
add
and
mov
out
adc
sbb
lret
int3
gs
mov
pop
cld
mov
add
cltd
icebp
add
dec
add
xorb
adc
scas
inc
xchg
push
push
add
or
in
add
cs
lcall
cmp
mov
sbb
repnz
or
lods
js
cli
xor
addb
rcll
pop
dec
mov
shll
mov
adc
xchg
mov
popa
add
pop
push
shlb
jb
jmp
test
ret
mov
jg
xor
adc
rorb
add
push
add
push
push
outsl
cmp
add
mov
or
dec
cmpsb
inc
inc
add
aad
add
mov
nop
jecxz
aaa
mov
leave
lock
pusha
xchg
movsb
inc
push
pop
xor
pop
cmp
and
stc
add
mov
add
add
ja
shrb
cli
mov
dec
push
test
dec
out
mov
scas
inc
addr16
jg
stos
mov
mov
sub
jae
add
mov
add
jl
mov
dec
adc
in
cs
add
push
jl
or
je
out
mov
add
sub
inc
cmc
icebp
cmp
jecxz
mov
addb
clc
mov
or
jno
test
orl
inc
sbb
add
xchg
mov
inc
sub
add
in
in
or
pop
push
or
add
shrb
scas
mov
xchg
test
mov
or
pop
inc
jb
mov
xchg
popf
aad
or
mov
xchg
test
mov
outsb
lock
jg
xor
mov
pop
loope
or
or
stos
std
or
adc
jbe
and
xchg
ja
push
adc
xor
test
add
pop
lods
js
subb
mov
mov
push
lret
jg
fwait
fs
aaa
adc
test
and
sti
aad
xchg
push
and
mov
mov
pop
addb
pop
lcall
mov
mov
mov
dec
adc
pop
pop
scas
fcmove
inc
push
or
test
jg
xlat
ret
in
xchg
adcl
popa
mov
jo
lods
clc
mov
dec
shll
add
out
inc
ja
jp
cwtl
cwtl
xchg
mov
aas
add
rclb
stos
adc
lahf
jmp
add
adc
or
les
call
mov
loopne
jb
adc
pop
xchg
sbb
xchg
test
mov
int3
mov
add
adc
mov
or
cli
or
in
inc
add
or
jb
loop
idiv
into
xchg
add
xor
adc
sar
decl
fimuls
cmpsb
enter
cmpsl
add
xchg
add
mov
cmp
push
cld
jg
xchg
push
enter
mov
lock
jo
and
push
xchg
mov
fildl
clc
add
xchg
jb
movb
ret
lcall
out
mov
add
add
xor
mov
sahf
lret
mov
xor
js
and
lock
push
ret
or
jo
xor
loopne
fisubs
decl
push
and
add
add
loop
xchg
add
test
add
add
xchg
xchg
ds
cli
mov
sub
test
mov
lcall
mov
sarb
mov
or
outsb
adc
push
push
pusha
cmp
bound
incl
xchg
mov
xor
mov
push
insb
js
xor
push
shll
mov
pop
fs
push
sbb
adc
faddl
xchg
mov
cmp
scas
sbb
das
push
lock
mov
test
pusha
mov
mov
scas
xor
mov
push
add
xchg
out
xchg
mov
aaa
adc
sbb
sbb
out
fmull
xchg
stos
dec
loopne
add
and
inc
and
testb
xchg
push
sub
add
xlat
cs
fildl
xor
xchg
pushf
adc
mov
xchg
enter
mov
sub
loopne
loop
imul
lods
je,pt
push
mov
mov
xchg
mov
add
jbe
add
into
xchg
or
pushf
add
mov
sbbb
dec
scas
adc
mov
jp
xchg
lods
sbb
sub
add
cld
and
inc
leave
subl
push
add
mov
sub
les
add
cwtl
andb
add
or
decb
sub
adcb
or
dec
pusha
cmp
add
inc
sub
mov
aam
aad
and
andb
jge
push
push
xchg
add
adcb
addl
add
mov
js
mov
sbb
or
pop
lret
and
shlb
lods
mov
aad
testl
inc
fdivl
and
add
sub
scas
movb
es
test
inc
pop
enter
xor
fisubs
pusha
in
adc
add
add
dec
adc
inc
in
inc
dec
jl
shlb
out
pop
mov
add
inc
or
out
cmp
scas
adcb
fwait
mov
rcll
rcrb
mov
adc
stos
push
push
addb
xchg
add
push
add
xchg
mov
test
cmp
xchg
xor
orl
mov
adcb
shl
jo
xor
jp
test
fildll
scas
movsl
sbbb
loopne
mov
jecxz
cmp
pop
cmpsb
mov
faddp
pop
int
pusha
jae
inc
add
ret
push
testb
mov
cs
mov
rol
add
out
or
roll
adc
xchg
mov
mov
dec
or
mov
je
scas
inc
or
pop
push
mov
xchg
rolb
mov
cmp
sub
mov
mov
add
lcall
fidivl
sarl
aad
inc
jbe
add
or
inc
pop
jbe
cwtl
jl
jmp
pop
mov
jnp
mov
loop
push
sub
mov
dec
cmc
loop
imul
inc
sbb
sub
xchg
pop
ret
add
mov
and
mov
push
pop
nop
stos
icebp
and
adc
mov
loope
movsb
mov
mov
test
mov
xchg
xchg
mov
addb
adcb
add
pop
xchg
mov
or
mov
or
pusha
add
add
add
pusha
push
js
add
les
inc
add
mov
sub
adc
jmp
dec
or
push
mov
xchg
inc
dec
inc
pop
mov
add
mov
add
and
mov
lea
jecxz
push
or
cmp
out
bound
scas
pusha
jle
outsl
pop
lock
jp
js
adc
xchg
loopne
inc
mov
add
adc
mov
mov
loopne
sbb
push
sub
dec
decl
je
adc
mov
push
jl
jo
outsb
pop
sub
inc
cmpsb
xchg
xchg
add
mov
jmp
push
push
or
or
and
push
andb
push
es
pop
jg
sar
nopl
scas
sub
scas
test
leave
popa
test
stos
pusha
jmp
std
mov
dec
subb
mov
inc
movsb
pop
mov
mov
mov
push
inc
jb
jle
and
mov
gs
mov
add
fs
insb
or
xor
jecxz
nop
jp
or
icebp
stos
out
push
mov
or
cwtl
repz
push
pop
mov
in
xchg
mov
and
sbb
mov
and
jecxz
sbb
jecxz
xchg
mov
mov
jg
sub
inc
in
xchg
mov
addb
cli
sbb
jmp
das
jmp
mov
and
nop
or
nop
movb
mov
test
fimuls
pushf
pop
inc
xorl
and
pusha
push
icebp
decl
sub
add
push
mov
ljmp
add
add
inc
mov
je
ljmp
pusha
add
rolb
or
push
data16
addr16
add
or
out
aad
add
out
ss
mov
sbb
fistl
mov
jnp
or
adc
mov
push
fldt
ds
icebp
or
pop
pop
mov
stos
pop
cmp
cs
imul
xchg
sub
and
pop
cmc
sbb
xchg
int3
dec
dec
and
mov
add
imul
xchg
push
jb
jmp
dec
jns
push
pop
inc
mov
push
cmc
push
pop
add
xor
sbb
cmpsl
mov
std
pushl
mov
pop
add
mov
fisubrs
cld
in
pop
lods
pop
fwait
movsl
pop
cmp
push
mov
or
dec
mov
inc
fcoml
cld
notb
shll
testl
inc
xor
or
lods
popf
add
mov
jg
jmp
incb
mov
xchg
popaw
xchg
xchg
add
scas
stos
mov
clc
je
rcrb
or
and
mov
cli
fildl
daa
mov
imul
pushf
sbb
aas
ret
in
mov
dec
jb
adc
add
das
mov
mov
insl
add
mov
lock
rcll
add
push
fcoms
xchg
hlt
pop
fdivrs
sbb
jo
cmc
fs
add
lret
cmp
mov
lock
push
fdivs
call
mov
xor
inc
push
push
dec
pushl
add
pop
add
popa
or
aam
pop
faddl
xor
sbb
in
pop
xor
xor
sbb
sub
dec
add
enter
jg
dec
push
sub
jb
cs
and
ret
repz
dec
fdivrs
sbbb
dec
stc
push
sub
loop
fbstp
les
add
add
mov
les
pop
pushl
enter
jne
add
sbb
fadd
fadds
inc
rorb
fwait
int
dec
inc
cld
sbbl
flds
add
push
jl
jbe
fiaddl
jbe
popf
test
movsb
cld
ja
ret
mov
add
jo
jl
sub
cmp
in
outsl
mov
push
inc
hlt
ljmp
pop
test
js
push
jle
sarb
fldl
aam
sti
xor
mov
ja
fiadds
cmp
inc
push
adc
call
add
mov
mov
lret
ret
cli
out
clc
rcl
test
dec
sub
inc
daa
cmp
ja
and
jns
outsl
mov
mov
test
mov
sbb
add
jae
mulb
sub
aas
in
or
adc
das
fsubs
es
cld
mov
lock
add
sub
sbb
aas
sbb
push
cld
sub
sti
add
or
push
xor
lds
sti
jmp
inc
xchg
push
pop
add
cmp
sti
add
enter
insl
mov
xchg
cmp
les
inc
fbstp
sbb
in
cmp
push
or
xor
mov
int
imul
dec
adc
jno
push
push
shlb
xor
std
push
mov
pop
adc
mov
jg
lahf
xor
cld
sahf
and
dec
mov
sbbl
push
lods
sti
xor
dec
stos
test
psubq
test
or
mov
xor
cmpsl
dec
add
test
add
xchg
dec
imul
xorl
add
sti
and
sbb
jbe
repz
mov
xchg
jg
cmpsl
outsl
clc
in
daa
xor
out
jle
add
push
ret
ret
lods
sbb
lcall
jmp
movsb
mull
mov
ror
sar
ffreep
dec
fbld
fistpll
fists
fildll
jae
jnp
inc
decl
push
fistps
and
sub
xor
cmp
add
or
adc
sbb
jecxz
jmp
repz
faddp
fdivrp
dec
fisubs
fidivrs
ficoms
fisubrs
jae
jnp
inc
push
and
and
or
adc
sbb
sub
jmp
fucomp
ffree
fst
fstp
frstor
pop
loope
jnp
inc
fisttpll
push
fstpl
and
sub
xor
cmp
add
or
adc
sbb
jecxz
push
lods
gs
mov
or
fcoml
lcall
mov
xchg
fcompl
fdivl
jnp
inc
fmull
push
mov
pop
add
ljmp
test
fucomi
fcomi
fcmovnb
fcmovne
fcmovnbe
sub
pushl
stos
fisttpl
clc
idiv
fildll
sub
xor
cmp
add
or
adc
sbb
jecxz
pop
push
sub
fwait
gs
std
out
jmp
fisubl
imul
fidivrl
inc
fimull
push
pop
fisubl
fiaddl
fidivl
ljmp
fld
fxch
fldenv
fnstcw
clc
sbb
fsts
xchg
aad
addr16
test
fnstcw
flds
fsts
fstps
mov
pop
fsubr
fdiv
fdivr
ds
fcom
fcomp
insb
xchg
test
lret
leave
mov
imul
jnp
inc
mov
dec
pop
inc
push
fcomps
fsubrs
pop
sbbb
or
adc
sbb
add
add
incl
sti
xlat
ret
xlat
lret
xlat
rcl
fcmovnbe
mov
xlat
xchg
mov
lahf
xlat
arpl
ja
insb
xchg
test
mov
mov
rorl
push
rcrl
and
sub
xor
cmp
add
or
adc
pop
push
rcrl
shl
shr
shrb
lods
mov
xlat
scas
ljmp
mov
mov
cmp
push
ss
ret
movsl
clc
call
fsubr
fisttpl
pusha
fisttpl
fistl
inc
fisubrl
mov
fwait
call
ja
fld
fxch
jp
fldenv
fnstenv
xchg
xchg
xchg
mov
cmp
fsts
adc
loope
decl
fdiv
fdivr
fmul
fcom
pop
lods
fsubrs
fdivrs
mov
insb
xchg
push
pop
in
xlat
rcl
xlat
test
xchg
xlat
pushf
xlat
xlat
imul
xlat
push
xlat
pop
sub
lret
ret
test
sbbl
pop
sub
hlt
aad
aad
aad
aad
aad
aad
sub
xchg
jns
lcall
pop
aad
aad
aad
aad
sub
call
not
repnz
aam
aam
aam
aam
aam
or
test
fildll
sarl
and
xor
pop
roll
rcll
outsl
add
ror
shlb
gs
arpl
loope
or
aad
push
ror
decl
fistps
fiadds
fsubrp
fstp
mov
cltd
fstl
sahf
outsb
fnsave
fucom
inc
and
scas
mov
lahf
fildl
push
mov
fcomp
scas
fidivrl
push
mov
fld
fxch
fldenv
data16
flds
push
jns
inc
fsubr
out
fcomps
fsubrs
fadds
fcomps
push
mov
loopne
rcl
cmpsb
xlat
mov
jae
jl
push
decl
inc
xlat
pop
pop
sbb
out
push
jnp
pop
cmp
mov
aad
pop
cld
call
cli
aam
aam
aam
roll
sub
cli
sarb
fistpll
fists
fistpll
fdivp
fdivrp
fisubs
ficoms
fisubrs
inc
push
ficomps
fisubs
fidivrs
fsubrp
fst
frstor
adc
cmpsb
faddl
fimull
push
fsts
incl
add
sahf
mov
sbb
leave
sar
call
mov
xchg
cwtl
inc
and
aad
aad
aad
aad
aam
aam
aam
cld
call
mov
pop
aam
aam
sar
ror
rcl
shrl
sarl
pop
shr
ror
rcrb
add
sub
cmc
ror
rcrl
shlb
rcrb
pop
popf
jg
mov
push
fdivl
pop
sbb
fcmovnb
fcmovbe
fidivl
int3
cmpsb
xchg
fldenv
fnstenv
and
sbb
fcoms
cld
fbstp
adc
cld
data16
inc
adc
cmc
xchg
dec
aad
mov
sbb
mov
data16
aam
rorl
rorb
sub
cmp
call
mov
not
aam
mov
adc
jl,pt
dec
shrl
rcll
decl
ret
shlb
shrb
jecxz
call
jl
inc
rclb
rcrb
and
or
pop
rcrb
shl
fcomip
ffreep
push
cmpl
sahf
rclb
loopne
ljmp
stc
frstor
push
fst
fsubl
xchg
xor
fisttpl
frstpm(287
fcmove
fiaddl
out
sbb
fstp
nop
lret
ficompl
std
lcall
mov
fldenv
fstps
ftst
fsubr
rol
cmp
fmuls
push
sbbl
out
fadds
out
inc
push
sub
loop
and
ljmp
test
aad
aam
aam
aam
rcr
shrl
push
cmp
pop
push
rcrb
rorl
rclb
sub
cmp
fisttpll
faddl
fcompl
mov
jae
jl
dec
fneni(8087
fcmove
stos
add
mov
sarb
push
mov
adcb
inc
fadds
push
pushf
cmpsl
fidivs
rcl
roll
shl
fildll
dec
adc
into
repnz
xchg
faddl
mov
outsb
xchg
ficompl
jl
decb
in
fsts
fdivrs
jg
jg
adc
or
or
adc
call
sbb
aad
aad
aad
aad
icebp
aad
aad
aad
aad
aad
lcall
in
aad
aad
rcl
fst
movsl
aad
push
test
aad
aad
cmc
incl
testb
xchg
aad
aad
aad
aad
aad
aad
aad
push
jp
aad
aad
aad
aad
push
dec
aad
aad
aad
aad
aad
aad
fcmovnbe
call
sub
aad
aad
aad
aad
aad
aad
mov
jmp
mov
push
pop
jbe
rcrb
clc
sbb
jno
js
inc
shlb
xchg
shl
shl
rcll
sarl
test
sarb
lods
lcall
rcrb
pop
test
fisttps
fists
adc
enter
enter
imul
fistpl
jge
decl
or
cbtw
adc
inc
cmp
adc
popf
xlat
inc
xlat
push
pop
cld
xlat
sub
adc
aam
aam
aam
lcall
je
push
shr
shl
xchg
xor
decl
adc
sbb
icebp
ror
roll
rol
xchg
pop
sub
pop
push
fidivs
inc
sbbl
js
mov
idiv
fsubs
push
scas
ljmp
sub
aas
repnz
out
jg
xlat
mov
loop
call
ds
loopne
xlat
aad
aad
aad
aad
aad
aad
aam
aam
aam
aam
aam
aam
aam
jmp
cmpsb
aam
xchg
xchg
mov
inc
aam
aam
aam
aam
adc
jg
cmp
add
push
aam
rclb
rol
and
fistpll
and
inc
fmulp
call
dec
fists
xchg
sbb
ficoml
repnz
scas
cmp
pop
cs
add
loopne
call
cmp
push
sbb
in
aad
ficoml
mov
nop
sahf
aaa
jb
add
jmp
aam
aam
lcall
mov
sarl
rcll
jg
jne
out
rcl
mov
shlb
call
call
aaa
shlb
sarb
rolb
rorb
stos
adc
sbb
hlt
fildll
ljmp
fists
fbld
outsb
filds
sub
out
cmpsl
sbb
fsubrp
fdivp
sahf
in
outsl
cmp
js
xchg
push
outsb
or
dec
pop
std
jg
sub
xlat
into
dec
rcl
mov
lret
dec
rcll
and
cmp
sbb
lcall
loopne
shlb
fbld
fucom
fdiv
fdivr
fadd
jg
scas
dec
or
dec
fcmovnu
dec
fistpl
mov
fisttpl
ljmp
jle
push
fnop
pop
neg
das
xlat
into
xlat
shl
adc
xlat
dec
ljmp
pop
sbbl
xlat
aam
mov
add
dec
sub
jae
pop
xorb
push
rol
sar
test
sahf
shlb
add
mov
shll
pop
rol
pop
stos
shlb
call
adc
std
ffreep
fistps
faddp
lock
mov
fisubs
test
mov
loop
bswap
leave
fsubrl
pop
fmull
fcoml
xchg
loopne
je
pop
dec
xor
push
dec
in
fld
clc
cli
cs
fldcw
jp
fnstcw
add
mov
pop
fsubrs
fcoms
outsl
movups
xlat
icebp
xlat
int
xlat
adc
lock
mov
cs
push
xor
pop
lcall
stos
inc
aad
aad
aad
aad
fsubp
mov
mov
add
jecxz
xchg
hlt
push
stc
shrb
testl
int
fistpll
dec
mov
mov
mov
sub
cmp
stc
fcmovne
jo
decb
fldt
mov
pop
loopne
push
popf
fistpl
jp
push
fistl
pop
jg
stos
lock
fstpt
sahf
out
adc
cmc
fisubrl
sub
jge
inc
fimull
stos
add
rcll
fisubl
jb
scas
sarb
pop
int3
fsubrs
fsubrs
cmpsb
loopne
ss
xlat
mov
scas
inc
push
sub
ja
inc
push
aam
aam
test
jg
aam
push
shll
shlb
rol
sar
fucomip
fidivrs
jmp
fimuls
fisubs
outsb
inc
ffree
fsubrl
repnz
fcmovnbe
fldt
fisubrl
outsl
pop
lcall
pushf
outsl
cld
cmc
aad
clc
mov
aam
outsb
xchg
xor
add
ja
rcrb
adc
shll
shrb
push
push
jo
fistps
add
fcmovu
mov
enter
loop
insb
jno
mov
xlat
mov
jg
jecxz
xchg
lcall
jo
inc
shrl
rcll
rcll
jbe
pop
sarb
shlb
xor
fildll
inc
inc
mov
mov
stos
jb
fldl
fmull
faddl
fsubl
fistpl
imulb
fiaddl
and
or
in
fsin
fsts
in
fdivrs
scas
std
jne
jbe
xlat
jbe
pop
aad
scas
pop
aam
adc
xchg
ret
roll
orl
and
popf
fildll
jno
sbb
hlt
jg
fstl
fistl
push
fcmovu
sub
xorl
clc
aas
clc
xor
mov
push
fimull
fucomp
fdivl
fcoml
jmp
mov
int
stos
fildl
lcall
push
inc
or
fcompp
mov
es
out
addr16
xlat
push
and
test
test
add
rolb
ss
shl
pop
inc
cmpl
jns
pop
fisubrs
sbb
icebp
cli
frstor
bound
fcoml
fmull
rcr
jb
sub
rorl
sbb
fidivrl
sub
add
sbb
push
lcall
mov
adc
ret
pop
add
out
xor
hlt
and
push
into
shrb
add
and
aam
lcall
shll
sub
xchg
fcmovbe
scas
shrl
shl
ror
sar
jg
add
lret
leave
aam
rorb
push
rorl
shl
filds
jo
ret
sub
fiaddl
push
mov
or
sub
push
push
or
out
je
and
pop
dec
aad
aad
aam
aam
aam
aam
pushl
adc
and
fsubr
sar
rcl
roll
add
call
push
sarl
rcll
shl
shrb
stos
rorb
shlb
adc
push
rcl
lret
adc
mov
push
pop
repnz
subl
shl
mov
jg
fisttps
xchg
rcrb
push
rcrb
rolb
ds
sbb
ljmp
cwtd
jmp
cmp
push
jge
pushl
ficomps
sub
xor
add
adc
in
jmp
xchg
outsb
repnz
fnstsw
jb
rcr
fcompl
push
xchg
loop,pn
fadd
andb
imul
fldenv
jb
lock
pushl
inc
das
scas
out
dec
xlat
pop
xlat
lock
int
cmpsb
xchg
lcall
jmp
mov
jg
xchg
sarl
shll
cmp
rol
shlb
push
cmc
xchg
cmp
rcr
add
cld
push
and
lods
jle
adc
pop
fucomp
add
stos
or
cwtl
fcomp
mov
xchg
fdivrl
mov
mov
fnstsw
jb
sbb
add
fstpt
push
mov
loope
in
rcl
fidivl
adc
adc
mov
fadd
mov
sub
add
out
sbb
jle
xlat
leave
incb
test
jno
pop
dec
adc
xlat
cmp
outsb
add
in
add
insl
inc
dec
es
add
in
int
push
loopne
into
inc
stos
aad
aad
aad
aad
sbb
ds
jp
add
adc
xor
divb
aam
aam
shrb
insb
cli
dec
pop
adc
sti
ror
rorl
sbbb
adc
imul
outsb
pop
stos
or
sbb
fmul
push
jns
sti
jg
cmp
shl
roll
mov
mov
adc
rcll
loopne
mov
sbb
add
jle
push
decl
push
out
filds
filds
add
sbb
lahf
fisubs
add
inc
fimuls
out
addr16
inc
fdivl
in
fstpl
test
mov
mov
xchg
mov
push
pusha
fdivrs
lods
push
in
je
pop
jbe
pop
xor
sub
xorb
lods
sahf
fnsave
lock
add
aad
adc
aad
aam
aam
mov
pop
cmp
adc
aam
ror
sarl
and
mov
mov
mov
pop
ffreep
or
imul
and
or
add
push
sbb
fdivl
sbb
aam
jp
dec
adc
pop
test
fsubl
push
lods
dec
pop
mov
push
ss
adc
divb
xlat
inc
mov
cwtl
fisubrl
adc
movsb
jb
sub
push
flds
adc
push
fldenv
fldenv
xor
cmp
sbb
pop
jge
rcr
lcall
fdivrs
shlb
add
fadds
pop
ret
andb
inc
sub
xchg
xlat
ret
mov
enter
pop
pop
roll
rolb
fwait
xchg
jl
push
rcrb
clc
rcl
shrl
je
rcrl
rorb
pushf
les
fisubrs
ffree
loopne
test
incb
pop
lock
fsubrl
jnp
dec
fdivrl
out
stc
rcr
icebp
in
inc
adc
gs
fistpl
adc
fiaddl
cmp
add
sarb
xor
fldcw
xor
adc
adc
inc
es
xor
sbb
inc
mov
in
add
xlat
lods
xlat
push
mov
push
dec
inc
mov
xlat
sbb
cmc
cld
fsubp
das
cli
out
aam
xchg
arpl
xchg
sub
ds
sbb
lock
aad
push
loopne
cli
data16
aad
inc
add
aad
xchg
fwait
aaa
xchg
dec
push
dec
jmp
aad
int3
xor
jle
je
dec
in
shrl
adc
rcrb
sarb
or
sub
or
sarl
jecxz
mov
and
push
sbb
dec
jl
jg
add
adc
fbstp
lods
inc
push
fildll
inc
adc
push
test
shr
dec
push
adc
fistps
div
fdivr
inc
cwtl
adc
dec
pop
div
scas
mov
add
adc
adc
mov
fnstsw
adc
xor
pop
xchg
add
pop
mov
test
call
inc
lcall
add
fisubl
cmp
or
fidivl
add
test
sbb
inc
sar
inc
fcompl
and
jmp
mov
incl
adc
divl
orb
xlat
pop
std
add
fwait
xlat
pop
add
add
aad
mov
ljmp
into
rcl
shlb
jmp
sahf
jle
rolb
dec
rclb
mov
shlb
or
mov
cmp
fistpll
dec
and
mov
mov
cmpsl
fisubs
sbb
mov
dec
fisttpl
loopne
push
fcomi
add
pushf
inc
fidivrl
cmp
mulb
mov
fldenv
fnstenv
in
fldcw
dec
pop
pusha
dec
sub
dec
ds
adc
popa
adc
sar
jg
shlb
int
or
xlat
not
or
add
cwtl
cmp
rorl
cmpsb
sar
mov
shlb
dec
rorb
push
shl
pusha
jbe
rorl
mov
pushf
dec
add
insl
shrl
adc
jle
jns
inc
inc
add
addr16
es
mov
call
andb
sub
aaa
shll
insb
cmp
push
rorl
scas
adc
pop
rcrl
shl
loopne
xchg
outsb
pop
not
icebp
adc
rol
int
enter
mov
fnop
and
sbb
rolb
xchg
movsl
fildl
cwtl
shlb
outsb
shrb
outsb
xor
adc
inc
rolb
dec
push
rclb
push
mov
and
sub
mov
setge
out
adc
rclb
out
loope
in
xor
inc
cld
popf
clc
repnz
inc
add
pusha
mov
pop
mov
movsl
fbld
mov
outsl
xchg
add
fistps
mov
jne
jo
dec
inc
fisttps
dec
fistps
fildll
adc
fbstp
in
mov
push
pavgb
fistps
and
add
vmovshdup
xor
leave
sbb
xchg
inc
fiadds
adc
push
fisubrs
fidivs
aas
fidivrs
push
push
add
pop
or
sub
fcomip
movsl
adc
jmp
inc
loopne
inc
fistl
lret
xchg
lcall
mov
data16
mov
pusha
inc
incl
and
sti
test
adc
cld
aaa
sub
jmp
popa
add
shl
shlb
xor
loopne
addb
push
das
js
mov
inc
xchg
push
xchg
ret
or
fsubrl
or
outsb
adc
lods
jge
sub
rcr
adc
cmp
fcmovnu
outsl
jle
das
outsb
lds
fchs
fsubs
loope
cmpsl
push
add
btc
pushl
das
adc
aas
hlt
and
aad
add
pop
lret
lods
sub
xchg
mov
push
pop
mov
fcom
cmp
adc
outsb
aas
pusha
das
fisttps
in
inc
jp
add
shll
jle
loopne
cmpsb
dec
fmulp
cmp
jl
inc
add
push
and
insl
adc
add
iret
sbb
cld
sbb
mov
faddl
popf
sar
inc
loope
mov
adc
test
fisttpl
adc
mov
fstpt
push
fstpt
or
inc
lea
fcmovb
mov
add
jg
daa
ds
int3
or
push
mov
and
inc
les
mov
les
push
aad
dec
and
sarl
rorl
rcll
fcomip
mov
xchg
fmul
faddl
ret
pop
dec
mov
fldt
mov
jl
bound
jnp
fdivrs
fadds
dec
aam
jo
mov
pusha
pushf
xor
lds
inc
and
cld
scas
es
shll
shlb
sbb
jl
dec
push
mov
xlat
jo
jae
jl
sub
xor
andb
add
fbld
ja
ror
popa
or
add
insl
xchg
push
aam
fisubl
hlt
mov
mov
jp
aam
jl
out
pop
and
sarl
divl
shlb
push
clc
lods
sbb
add
es
fsubrl
adc
mov
test
mov
sub
pop
fsubrs
jecxz
push
add
imul
cld
negb
lock
fadd
nop
adc
rcr
fists
push
cmpsl
loopne
filds
stos
mov
mov
mov
rcrb
loopne,pn
cs
xchg
cmp
fcompl
and
outsl
fsubrl
insl
jae
jg
clc
add
ss
pop
sarb
inc
add
lock
das
add
aaa
fsubl
xor
mov
mov
sbb
pop
rcrb
and
xchg
xor
shlb
outsl
fldt
mov
mov
frstor
inc
jo
add
push
fistpl
pop
ficompl
or
fistl
aaa
lock
cmp
mov
punpckhbw
pop
fistl
push
push
out
add
mov
and
jp
fisubl
xor
adc
out
push
test
or
add
adc
mov
sub
inc
daa
mov
mov
inc
sbb
ljmp
sub
xor
in
or
fimuls
or
inc
xchg
or
jg
orb
mov
dec
add
mov
arpl
jle
or
dec
sbb
es
ja
adc
sub
ss
fildll
or
sbb
in
out
fsubrs
hlt
fdivr
rolb
in
push
mov
nop
nop
sbb
mov
arpl
aam
dec
decl
cmp
pop
jae
dec
push
dec
adc
and
das
adc
aad
push
push
lea
mov
ja
push
pop
out
aam
adc
aam
iret
aam
add
pop
in
mov
adc
push
aam
aam
aaa
test
adc
inc
aam
pop
ljmp
aam
aam
jecxz
repz
adc
mov
shll
arpl
jae
push
shll
add
xor
xorb
adc
adc
add
ret
mov
shlb
shlb
jae
inc
adc
and
xor
lock
add
adc
ret
ror
shll
rcll
pop
inc
or
and
test
shlb
rcrl
inc
jl
pop
or
out
sbb
inc
dec
call
sti
xor
ror
ret
adc
mov
add
lods
jecxz
push
xchg
cmpsl
shlb
mov
mov
mov
adc
rorb
lahf
rcl
or
xchg
add
loopne
andb
sbb
xchg
cmp
add
cmp
mov
or
jmp
int
mov
add
loopne
imul
jge
leave
pop
jg
jb
add
lock
push
stc
pop
jge
dec
mulb
js
dec
mov
push
add
push
inc
stos
mov
mov
int3
xchg
and
sub
jo
es
movswl
jg
sbb
add
push
lea
mov
sbb
adc
bound
incb
pop
dec
test
adc
sbb
incl
bound
mov
xor
add
bound
pop
adc
inc
dec
nop
sub
jg
cld
mov
push
jp
aaa
add
outsb
cmp
fxch
add
dec
fcomip
lcall
and
out
cltd
ljmp
jg
ja
cmp
shl
ficoms
mov
add
sub
loop
or
mov
push
cmpsb
leave
nop
mov
lret
jg
xchg
xchg
fadds
cld
sahf
add
popa
cs
outsb
insb
xor
test
rolb
je
daa
outsl
and
out
clc
jg
clc
mov
int3
add
mov
add
mov
incl
jp
push
cmp
mov
add
lcall
inc
mov
xchg
mov
add
incl
jo
bound
add
push
cs
cld
mov
or
pop
push
add
scas
hlt
adc
mov
lcall
add
inc
fimuls
sub
push
test
pop
add
add
lds
icebp
bound
scas
jae
add
clc
pop
movsb
mov
push
push
movsl
lahf
pop
lock
in
cli
sbb
cmpsl
shrl
push
mov
push
rclb
or
out
xor
mov
push
or
popa
cmp
dec
sbb
icebp
mov
adc
and
xor
repnz
and
mov
ljmp
test
call
mov
cmp
into
test
inc
pop
lock
sti
jp
hlt
add
pushl
stc
lods
mov
xchg
and
add
inc
fadd
add
insb
jno
mov
or
outsl
les
cmpsb
cmc
leave
in
push
add
enter
sbb
pop
gs
in
inc
push
adc
into
sbb
dec
add
in
loopne
add
and
ret
push
cltd
and
lds
push
add
pop
pusha
push
test
in
lcall
push
jne
jb
push
outsw
jb
popa
outsb
arpl
outsl
jne
je
fisubrl
fidivs
inc
jb
popa
adc
insb
gs
sbb
je
inc
push
push
push
fidivrs
imul
dec
push
adc
inc
js
mov
pop
jbe
jb
imul
outsl
iret
fstp
mov
sub
jb
jne
push
jb
je
dec
xchg
inc
lods
mov
mov
jae
sub
sbb
fldt
push
inc
add
xchg
push
je
pop
sub
dec
gs
outsl
inc
inc
push
cld
pop
dec
popa
jo
imul
outsb
ja
fsubrp
xlat
and
fstl
fs
outsl
xchg
and
jae
shll
insl
sbb
xor
mov
xor
sbb
not
or
imul
jo
push
inc
jo
cmp
gs
addl
push
jp
xor
xor
or
das
or
cs
dec
gs
inc
jbe
fidivrl
jp
mov
push
or
push
loop
push
inc
inc
adc
inc
dec
loopne
nop
mov
ss
jo
lds
orl
mov
push
jg
inc
shll
je
dec
jns
divl
push
outsl
jo
adc
mulb
scas
pop
jo
loope
fadds
insl
lock
adc
roll
pusha
add
jae
iret
lods
xchg
out
imul
and
stos
adc
adc
repnz
add
inc
fstl
mov
mov
mov
push
xor
das
testl
insl
cmp
jmp
inc
arpl
jbe
fs
inc
in
push
jae
inc
gs
jne
je
inc
dec
inc
outsl
mov
popa
jae
jb
xlat
icebp
fildll
jmp
mull
lods
or
push
fiadds
pusha
cmp
shll
aad
mov
outsb
arpl
gs
jb
addr16
jno
inc
add
sub
gs
lea
cltd
fldt
int
and
jae
popa
and
ret
sub
scas
lds
jno
add
stos
aaa
and
sub
and
jge
out
int3
xor
inc
cmp
inc
pop
or
jne
pusha
shll
push
stos
mov
mov
mov
cmp
xor
insb
cmp
jns
push
sahf
imul
inc
test
push
sbb
push
inc
je
fldt
xor
sbbb
dec
mov
or
inc
cltd
push
jns
rorl
insl
add
orl
jb
add
cwtl
cs
jl
inc
adc
xchg
pop
inc
add
lea
test
cld
sub
lret
add
add
movups
adc
pop
xor
and
ja
sbb
add
std
shrl
jo
adc
je
in
jp
xchg
orb
in
adc
pop
xchg
pusha
push
push
add
and
jb
popa
je
sbb
adc
mov
cmp
add
dec
add
xor
mov
jns
nop
dec
sub
sahf
jae
arpl
popa
jo
adc
out
xchg
lahf
lock
andl
ja
ja
xchg
and
xchg
add
add
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
in
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
add
add
nop
add
add
leave
je
add
add
add
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
filds
add
sub
add
filds
aas
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
test
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
cmp
adc
add
inc
add
insl
add
add
je
jae
add
push
add
insb
add
popa
add
add
push
add
jb
jae
imul
add
push
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
inc
add
xor
xor
xor
xor
and
inc
add
jb
add
add
add
jb
popa
add
jns
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
add
dec
add
bound
add
sahf
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
bound
add
add
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
xor
dec
add
add
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
xor
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
xor
dec
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
jne
imul
and
inc
add
je
add
add
add
sub
and
xor
xor
and
dec
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
or
in
test
es
enter
xor
cmp
inc
stos
dec
repz
pop
cltd
mov
adc
push
sbb
mov
int
xor
add
mov
lret
movsl
into
imul
mov
in
stos
and
sub
lahf
popa
push
ret
dec
dec
jl
aas
jmp
pusha
add
push
push
push
or
and
aam
int3
or
xor
xchg
push
push
xchg
cmpsl
sbb
mov
and
and
dec
ror
mov
shrl
lock
insb
mov
jge
in
inc
dec
push
inc
inc
aaa
pop
pop
popf
jg
pop
mov
push
or
inc
mov
std
xor
mov
nop
fcomip
mov
mov
mov
lahf
mov
in
sbb
lcall
xor
add
in
cmp
mov
idivb
jg
dec
xchg
movb
sbb
movsb
cmp
mov
sbbl
in
cwtl
test
push
xchg
add
xor
out
cs
rorl
or
aam
mov
xor
cltd
sahf
push
adc
out
rorb
lahf
rcrb
lods
stc
sti
pop
hlt
pop
pop
sub
and
or
andb
push
pushf
lock
inc
mov
or
lcall
rep
jae
fisubrl
mov
scas
movsb
or
or
cmp
jecxz
push
sbb
xchg
sub
pop
test
xlat
mov
mov
and
call
inc
jmp
lods
cmp
xchg
cmpsb
mov
push
cmpsb
insb
mov
pop
lods
loope
xchg
mov
test
or
mov
js
pusha
dec
divb
sub
mov
inc
dec
lods
add
add
test
out
add
hlt
mov
add
add
add
add
add
push
add
add
add
ja
inc
push
add
add
add
add
ja
subb
xchg
push
add
push
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
push
jo
jb
