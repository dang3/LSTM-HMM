add
add
in
in
xor
push
mov
mov
add
mov
mov
mov
mov
imul
add
mov
mov
imul
mov
mov
movzwl
and
movzwl
add
mov
mov
mov
mov
sub
mov
mov
xor
mov
movzwl
imul
sub
mov
movzwl
xor
add
mov
movw
movl
mov
mov
mov
sub
mov
movzwl
and
movzbl
mov
test
je
movzbl
movzbl
xor
mov
mov
or
mov
movzbl
mov
mov
movzwl
xor
mov
mov
add
mov
movw
movzwl
mov
mov
sub
mov
mov
add
mov
mov
movzwl
add
mov
mov
sub
mov
mov
xor
mov
jmp
mov
mov
movzbl
add
mov
movzwl
mov
mov
imul
movzbl
add
mov
mov
mov
movzbl
xor
mov
movzwl
and
mov
sub
mov
movw
movzwl
sub
mov
mov
shl
mov
mov
and
mov
mov
movzwl
movzbl
and
add
mov
movw
movl
mov
movzwl
imul
mov
movzwl
movzwl
sub
mov
mov
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
movzbl
cmp
je
push
push
push
call
mov
imul
sub
movzwl
mov
mov
mov
or
add
mov
push
push
push
call
movzbl
mov
shl
mov
mov
sub
mov
movzwl
shr
mov
cmp
je
movzwl
push
call
movzbl
xor
or
movzbl
movw
call
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
movzwl
mov
movzbl
mov
mov
mov
mov
mov
or
xor
mov
movzwl
sub
mov
mov
and
sub
mov
movzbl
mov
mov
mov
movzwl
shl
mov
mov
shr
mov
mov
sub
movzbl
mov
add
mov
mov
mov
movl
movzwl
mov
mov
mov
movzwl
shl
movzwl
mov
imul
mov
mov
mov
mov
test
je
mov
and
mov
mov
and
mov
cmpl
jge
mov
mov
mov
movzbl
mov
mov
mov
mov
mov
add
mov
mov
or
sub
mov
movl
mov
add
mov
mov
or
mov
mov
add
movzbl
mov
sub
mov
mov
mov
jmp
movl
mov
or
add
mov
mov
movzbl
shl
mov
mov
mov
movzbl
shl
mov
mov
movzbl
or
mov
mov
add
mov
movzbl
xor
movzbl
or
mov
mov
movzbl
mov
imul
sub
movzbl
mov
movzbl
shl
mov
mov
xor
movzbl
mov
add
mov
movzbl
add
mov
mov
mov
mov
or
mov
mov
xor
mov
mov
mov
movl
mov
mov
movl
mov
xor
mov
add
mov
mov
mov
cmp
jne
mov
mov
or
mov
mov
and
and
movzbl
mov
mov
cmp
jne
mov
add
mov
movzbl
mov
movl
mov
xor
sub
movzbl
mov
add
mov
movl
mov
test
je
movzbl
xor
movzbl
or
mov
mov
add
add
movzbl
movl
mov
sub
mov
movzbl
and
mov
mov
or
sub
mov
movzbl
and
mov
mov
add
mov
movzbl
or
mov
mov
mov
mov
add
mov
jmp
mov
add
mov
mov
movzbl
mov
mov
mov
add
sub
mov
mov
add
mov
movb
mov
or
add
movzbl
mov
add
mov
mov
mov
mov
and
mov
mov
sub
mov
mov
and
movzbl
mov
mov
jmp
movzwl
imul
mov
movzwl
mov
movzwl
movzwl
mov
and
mov
mov
sub
mov
mov
or
sub
movzbl
mov
sub
shr
mov
movzwl
mov
movzwl
shr
mov
mov
shl
movzwl
movl
mov
movzbl
mov
mov
mov
shr
mov
mov
and
movzwl
add
mov
mov
sub
add
movzbl
movzbl
or
imul
mov
mov
xor
and
movzbl
movzwl
sub
mov
movzbl
and
mov
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
movzwl
mov
add
movzwl
movl
movl
mov
imul
mov
sub
mov
mov
mov
mov
or
and
mov
mov
mov
movzwl
sub
mov
mov
movzwl
xor
mov
movzbl
movzwl
mov
add
mov
movl
movzbl
mov
mov
mov
mov
and
or
mov
mov
or
mov
mov
test
je
mov
xor
imul
movzwl
mov
movzbl
mov
mov
movl
mov
add
mov
movzbl
mov
mov
or
mov
add
mov
mov
add
mov
mov
movzwl
mov
mov
mov
and
xor
mov
mov
sub
mov
mov
sub
mov
mov
imul
movzwl
mov
movzwl
jmp
movzwl
shl
mov
mov
sub
mov
mov
mov
or
add
mov
mov
mov
mov
and
movzwl
add
mov
mov
imul
mov
movzbl
xor
mov
movzwl
and
movzbl
imul
mov
mov
mov
or
imul
mov
mov
imul
mov
mov
mov
movzbl
shl
mov
movzwl
add
sub
mov
movzwl
imul
add
mov
and
or
mov
mov
or
mov
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
sub
mov
movl
mov
add
mov
mov
shl
mov
mov
add
mov
mov
mov
xor
and
mov
movzwl
sub
mov
mov
mov
movzwl
add
movzbl
mov
xor
mov
imul
mov
movl
movzwl
sub
mov
mov
or
mov
mov
test
je
mov
add
movzbl
mov
add
sub
mov
mov
movzbl
mov
mov
mov
mov
mov
sub
mov
mov
add
movzbl
mov
add
mov
mov
xor
imul
mov
mov
and
mov
mov
add
mov
mov
add
mov
mov
sub
mov
movw
mov
sub
mov
jmp
movzwl
mov
movzwl
or
add
mov
mov
or
add
mov
mov
mov
movzbl
xor
movzbl
sub
mov
movzwl
movzbl
imul
movzwl
add
mov
mov
mov
or
mov
movl
mov
and
or
mov
movzbl
xor
mov
movzwl
sub
mov
movzwl
mov
movzwl
mov
movw
mov
movzwl
movzbl
or
movzwl
add
mov
movl
movl
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
mov
mov
imul
mov
call
movzbl
mov
imul
sub
mov
mov
test
je
push
push
call
mov
imul
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
mov
shr
mov
mov
xor
movzbl
mov
or
or
mov
mov
or
xor
mov
movzwl
or
movzwl
or
movzwl
mov
mov
mov
shl
mov
mov
or
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
movzbl
add
mov
mov
sub
mov
mov
movzwl
imul
mov
sub
mov
mov
add
movzbl
movl
movl
mov
xor
imul
mov
movzbl
add
mov
mov
mov
and
movzbl
mov
sub
movzbl
movl
mov
sub
mov
mov
shr
mov
mov
sub
mov
movzwl
add
movzbl
mov
test
je
mov
mov
mov
xor
mov
mov
mov
imul
mov
mov
and
imul
mov
movw
mov
mov
xor
mov
mov
mov
and
xor
mov
movzwl
xor
movzbl
mov
add
mov
mov
mov
sub
mov
mov
and
or
movzbl
jmp
mov
xor
mov
mov
mov
mov
and
or
movzbl
mov
add
mov
mov
sub
mov
mov
mov
mov
and
xor
mov
mov
mov
or
add
mov
mov
mov
shl
mov
mov
mov
push
call
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
mov
push
call
mov
sub
movzbl
cmp
je
push
push
push
call
mov
imul
imul
movzbl
mov
imul
mov
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
sub
movzbl
mov
movzbl
mov
and
mov
push
push
call
mov
and
mov
mov
movzbl
mov
and
movzbl
mov
movzbl
xor
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
mov
sub
mov
movb
movzbl
mov
push
push
push
call
mov
mov
and
mov
mov
and
mov
mov
imul
imul
mov
movzwl
xor
mov
movzwl
add
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
call
mov
xor
mov
movl
mov
and
and
movzwl
mov
sub
mov
mov
shr
mov
mov
shl
mov
mov
shr
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
movzbl
mov
movzbl
movl
mov
shl
mov
mov
xor
sub
movzbl
mov
mov
mov
mov
mov
shl
mov
mov
xor
mov
movzbl
imul
mov
add
mov
mov
and
sub
mov
movl
mov
shr
mov
mov
mov
mov
test
je
mov
mov
mov
mov
mov
movzbl
mov
mov
movw
mov
mov
mov
add
mov
mov
mov
movzwl
or
mov
mov
add
mov
mov
mov
sub
mov
movw
mov
movzbl
xor
sub
mov
jmp
movzbl
xor
imul
mov
mov
sub
movzbl
movzbl
sub
mov
movzwl
add
mov
mov
mov
movzwl
sub
mov
mov
mov
mov
shl
mov
mov
shr
mov
mov
shr
movzbl
mov
mov
add
movzwl
add
mov
mov
sub
mov
movzbl
mov
movb
mov
mov
mov
mov
sub
mov
push
push
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
movzwl
mov
shl
movzwl
mov
mov
mov
or
or
mov
push
push
push
call
mov
sub
movzwl
mov
imul
mov
movzwl
add
mov
mov
mov
mov
add
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
imul
movzbl
mov
and
xor
mov
mov
mov
mov
movzwl
and
sub
mov
call
movzwl
mov
movzbl
mov
or
mov
imul
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
mov
push
call
movzwl
mov
shl
mov
movb
movw
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
movzbl
mov
add
movzbl
mov
or
mov
mov
sub
mov
cmp
je
push
push
call
mov
mov
movzwl
add
mov
movzwl
and
movzbl
movl
mov
shl
mov
sub
mov
movl
movl
mov
add
mov
cmp
je
push
push
push
call
mov
sub
mov
mov
movl
mov
shl
mov
mov
add
mov
cmp
je
push
push
push
push
call
mov
sub
movzbl
mov
add
mov
mov
add
add
movzbl
mov
sub
mov
pushl
pushl
pushl
push
pushl
call
mov
mov
sub
movzbl
mov
mov
imul
movzwl
sub
movzbl
mov
movzwl
or
mov
movw
imul
mov
mov
movzbl
movzwl
mov
mov
shr
mov
mov
or
mov
add
movzbl
mov
imul
mov
mov
movzbl
mov
mov
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
movzwl
mov
mov
mov
mov
and
mov
call
mov
add
movzwl
mov
or
or
mov
mov
movzbl
or
mov
mov
or
movzbl
mov
sub
mov
movzwl
and
and
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
movzwl
movl
movl
mov
mov
mov
sub
add
mov
cmpb
je
push
call
movl
mov
add
mov
push
push
push
call
cmpl
je
push
push
push
pushl
call
cmp
je
push
call
mov
sub
mov
mov
xor
mov
cmpl
je
push
call
mov
xor
xor
mov
mov
mov
mov
mov
mov
cmp
je
pushl
call
mov
shl
mov
mov
mov
mov
xor
and
mov
movl
mov
movzwl
sub
mov
mov
mov
movzbl
imul
mov
mov
mov
mov
imul
mov
mov
movzbl
mov
mov
mov
movzwl
cmp
je
mov
mov
movw
mov
sub
mov
jmp
mov
mov
mov
sub
mov
mov
movzbl
mov
mov
mov
add
mov
mov
mov
mov
add
mov
movw
mov
mov
mov
mov
mov
movzwl
xor
and
mov
mov
mov
mov
add
mov
mov
test
je
mov
xor
mov
add
mov
mov
mov
add
mov
mov
imul
imul
movzbl
movl
movzwl
imul
mov
mov
movzbl
test
je
mov
mov
mov
shl
mov
shr
or
mov
mov
mov
movzwl
mov
mov
movzbl
xor
mov
add
mov
mov
xor
mov
mov
sub
mov
movl
mov
add
mov
jmp
cmpl
jne
mov
mov
sub
mov
mov
mov
mov
add
mov
cmpl
je
push
push
call
cmp
je
movzbl
push
call
mov
and
add
mov
mov
xor
movzbl
mov
add
mov
mov
mov
movzwl
mov
mov
mov
movzwl
or
mov
movzwl
imul
mov
mov
mov
mov
add
mov
cmpl
je
call
mov
or
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
mov
mov
and
or
mov
mov
and
mov
add
mov
mov
add
mov
mov
sub
mov
movw
movl
mov
sub
mov
jmp
movzbl
shr
mov
mov
add
sub
mov
mov
and
movzbl
movzbl
add
mov
mov
shl
mov
movl
mov
and
mov
pop
pop
pop
mov
pop
ret
or
pop
xor
inc
mulb
jecxz
ds
sub
pusha
mov
mov
sti
pop
adc
sti
push
mov
pop
add
inc
or
movswl
dec
push
add
cmc
sub
pop
arpl
cmp
sbb
sbbl
test
cltd
inc
xor
and
xor
sub
adc
mov
xchg
dec
xor
subl
imul
adc
add
in
cmpsb
ret
stos
enter
idivb
xchg
inc
xor
dec
pusha
pop
push
fadd
les
mull
mov
rcl
cmp
dec
imul
adc
mov
jbe
adc
js
xor
sbb
repz
jle
dec
xor
subb
sbb
pop
out
push
mov
psrld
inc
jae
ds
cmc
sub
mov
xchg
imul
mov
stos
inc
xor
push
loop
clc
xchg
mov
jecxz
pushf
sub
into
cli
imul
cld
fisubrs
adc
mov
push
incl
ja
mov
xorb
lahf
dec
cmpsb
ja
dec
lock
aad
rol
movsb
int3
jle
ss
mov
mov
push
lahf
out
dec
cmpl
cmc
addr16
push
cmpl
test
jae
divl
ja
imul
inc
sahf
outsb
lcall
dec
xorb
add
pop
xor
jl
ja
decb
subb
enter
call
push
add
in
inc
imul
imul
popa
lcall
mov
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
jmp
jmp
nop
pop
add
sahf
pop
add
scas
pop
add
mov
add
ret
add
pop
add
ficomps
add
pop
add
cli
pop
add
add
add
push
pop
add
push
pop
add
xor
add
pop
add
dec
pop
add
push
pop
add
pusha
pop
add
jo
add
jle
add
mov
add
pop
add
add
add
mov
add
lret
add
pop
add
in
add
cli
pop
add
adc
add
es
add
xor
add
inc
pop
add
dec
pop
add
pop
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
sub
add
push
mov
mov
mov
popa
add
mov
in
mov
mov
lahf
idivl
leave
jne
inc
pop
dec
fldt
push
cld
jne
insb
inc
mov
cmp
mov
lds
push
mov
or
int
jne
xchg
and
dec
inc
mov
ret
mov
push
iret
mov
mov
imul
mov
push
mov
mov
mov
mov
or
scas
lret
jae
dec
jecxz
idivl
aas
imul
or
aaa
mov
jbe
ja
mov
mov
jge
pushf
testb
mov
push
sub
nop
insl
lret
ret
jbe,pn
xor
aad
push
testl
cmp
jle
ss
jg
adc
ljmp
jg,pt
adc
jle
testb
stos
enter
pop
icebp
dec
push
in
xorb
cmc
sbb
or
mov
addl
jbe
dec
mov
jmp
cmc
test
xlat
movsl
fsubl
cmp
insb
pushf
mov
inc
lea
jb
dec
test
or
std
mov
shll
cmc
fidivs
insl
mov
jle
aas
jbe
rorl
in
nop
ja
push
or
push
lds
movsb
cmpb
inc
jae
pop
jl
push
or
in
jo
hlt
pushf
dec
idivl
xorl
std
outsb
gs
mov
cmovne
inc
lahf
xorb
divb
jae
hlt
bound
jnp
leave
jg
fstpl
or
dec
adc
in
fdivp
fs
push
mov
add
add
insb
xchg
int
ret
add
out
cmpl
add
mov
xor
jbe
dec
cmpl
mov
repz
jge
mov
cmp
mov
sub
mov
stos
gs
dec
jmp
push
xor
sbb
data16
sbb
xchg
insb
lret
jg
sbb
pusha
xlat
lahf
fdivl
add
subl
mov
aam
mov
jg
cmc
movsb
lea
mov
push
orl
enter
jmp
xorb
sub
ja
push
dec
imul
cmp
inc
mov
das
add
pop
iret
and
adc
mov
outsb
push
insb
das
push
mov
jns
fstl
mov
dec
out
rclb
sbb
int
or
adc
scas
mov
pusha
test
out
je
out
pop
xor
repnz
or
imul
cmp
xor
xor
aas
mov
adc
sub
out
push
add
ljmp
and
sbb
sbb
cmp
call
test
mov
cmp
shlb
dec
out
push
imul
pop
jo
arpl
lret
loop
data16
sbb
movsb
push
and
sahf
gs
jl
inc
mov
dec
sbbb
addr16
mov
jl
jl
ja
jmp
dec
mov
push
mov
mov
cmp
rclb
ds
sahf
int3
pop
sbb
cwtl
ds
jno
push
es
xchg
xchg
clc
dec
and
push
add
leave
mov
jb
cmp
fwait
sbb
push
fs
or
pop
and
divb
mov
ds
or
aad
loopne
std
mov
xchg
insl
mov
notb
pop
dec
addr16
aas
gs
push
push
push
add
xor
popl
jle
out
outsb
loope
adc
or
mov
cmpsl
pushf
cs
or
pop
stos
pop
push
jb
icebp
sub
xchg
les
enter
movsl
jbe
aad
imul
push
mov
mov
sub
cmpsb
fnsave
imul
dec
neg
and
push
test
cli
repnz
out
outsl
sbb
dec
xor
mov
cmp
pop
sarb
out
outsb
cmp
lds
aas
cli
gs
stc
insb
mov
popl
push
daa
dec
jle
push
mov
push
mov
ficompl
pop
sarb
outsb
pop
cmp
int
insb
inc
adc
cmpb
mov
mov
jecxz
int3
xchg
adc
enter
sarb
testl
mov
lcall
inc
pop
les
out
sub
push
lds
faddp
jmp
xor
mov
add
fmull
insb
ficoml
and
cs
pop
or
aas
sub
inc
les
stos
adc
xor
fmuls
bnd
movsb
adc
les
mov
insb
sbb
aas
cld
mulb
das
mov
pop
xchg
sub
addr16
pop
jmp
in
mov
in
cmp
jb
inc
mov
cmpsl
push
xchg
out
sti
xchg
mov
mov
cmpsl
cld
cs
adc
xchg
sub
push
mov
cltd
ja
jb
fs
movsb
adc
lds
insb
notb
cld
aas
rcr
in
xor
inc
sub
pop
push
cmpsb
mov
xor
xchg
shlb
or
outsb
mov
and
cld
fs
int3
mov
pop
ret
imul
imul
adc
xor
call
movsb
sbb
sub
sub
or
push
pop
push
pop
mov
xlat
cmpsb
xchg
mov
add
adc
mov
orb
mov
xchg
push
push
stos
out
push
stos
mov
add
adcb
adc
hlt
sbb
iret
ss
cmpsl
lods
or
imul
fcomps
hlt
call
es
pop
dec
pop
mov
jg
pop
jp
sbb
call
aas
cmpsb
out
pop
jg
inc
rol
cmpsl
push
lds
insb
out
adc
aas
lock
and
and
push
add
pop
pop
out
sub
ja
cli
cltd
arpl
pop
xchg
inc
or
xchg
jle
out
mov
xchg
dec
lret
xor
inc
dec
ja
scas
fidivrs
mov
ljmp
outsl
add
imul
mov
mov
xor
lods
mov
loopne
sub
repz
sub
add
sub
cmp
sub
xchg
in
xchg
jle
cmp
pop
addb
movsb
adc
stos
icebp
int
in
sub
add
mov
and
clc
jg
fs
movsl
sarb
sub
push
xchg
shl
adc
andb
push
loope
int3
subl
push
int
or
sbb
add
jmp
sub
add
fildll
enter
lods
dec
dec
sbb
dec
test
lock
ret
inc
into
aas
mov
sub
mov
lcall
sysexit
xor
adc
and
add
lret
add
cmpsb
mov
pop
inc
jne
mov
lock
dec
jmp
lea
out
push
or
mov
dec
inc
lds
and
pop
mov
cmp
adc
dec
mov
or
repz
ror
insb
dec
stc
pop
mov
aaa
aad
fiaddl
out
lret
mov
idivb
dec
rcrb
hlt
les
xor
fldt
add
push
mov
pop
stos
aam
pop
sbbb
lods
ficomps
lods
gs
xchg
push
or
ja
js
aaa
out
inc
sti
in
jg
cltd
jno
and
sub
and
outsl
cmpb
sub
jae
ljmp
les
mov
pusha
shrb
cmpsl
out
rclb
add
inc
movsb
fsubp
imul
or
enter
xchg
fiaddl
cltd
repnz
ss
scas
or
ret
mov
cmpsl
lret
xlat
adc
subb
gs
push
mov
xor
mov
adc
ds
fdivs
pop
add
pushl
out
push
dec
data16
aaa
or
mov
xchg
xchg
push
rcl
pop
jb
jno
cmpsb
xor
fiadds
std
jbe
fcmovbe
dec
lcall
push
out
jns
outsb
cmp
jle
or
dec
and
mov
int3
iret
or
xchg
dec
push
fwait
mov
push
mov
cli
ficomps
xchg
xor
jne
bound
add
aaa
ret
xor
outsb
cmp
add
fwait
jae
fisttpll
mov
xor
stc
inc
jp
xchg
jg
outsb
sbb
js
adc
cmp
inc
cmpl
shlb
mov
jle
dec
xlat
pop
lods
sbb
jns
and
fistl
xor
ja
ja
xchg
xor
int
bound
push
push
into
jnp
push
aas
mov
lahf
popf
pop
enter
dec
loope
jae
std
cmp
pop
jb
in
add
movsb
jle
pop
ja
sbb
repnz
ss
xor
outsl
cmc
pop
addl
push
push
cmp
push
jl
mov
sahf
mov
mov
fistl
ss
jg
mov
mov
xor
push
js
cmp
ret
lret
jle
cmpsb
jle
adc
mov
sbb
inc
loop
mov
ss
insb
hlt
or
hlt
xchg
push
in
inc
xor
dec
cmp
mov
adcl
ret
cmp
add
xchg
dec
xchg
mov
std
adc
addr16
fbld
sub
jg
xor
xchg
int
sub
mov
ja
inc
xor
mov
and
sub
jo
ror
xchg
dec
mov
and
add
lcall
aaa
fs
inc
lret
dec
ss
and
out
jo
lods
imul
or
mov
in
orb
cmp
inc
sahf
pop
ret
ja
jae
test
fst
gs
testb
cli
bound
push
ja
out
inc
leave
hlt
andb
push
dec
sbb
push
inc
dec
mov
xor
ljmp
jle
sub
jnp
xor
xchg
add
jae
cwtl
inc
pop
test
sub
cmp
xorb
jp
ja
cwtl
movsb
cmpsb
xor
add
push
jo
dec
fdivrl
push
xlat
lahf
pop
andl
cmpsb
pop
mov
dec
cmp
adc
dec
and
xor
xlat
mov
popa
xor
dec
pop
lods
mov
imul
mov
add
xorl
rcr
xlat
push
and
jns
js
mov
push
enter
fwait
inc
mov
enter
adc
pop
pop
xorb
or
cs
aam
or
fwait
xor
add
add
out
mov
mov
pop
and
aad
dec
ss
jae
movsb
orl
das
mov
test
cltd
inc
dec
push
push
out
jmp
push
pop
add
mov
stos
jmp
cwtl
insl
mov
jb
test
mov
std
or
dec
ret
mov
dec
inc
stos
loop
jb
mov
test
mov
andb
mov
mov
les
into
pop
sub
pop
pusha
and
lret
frstor
push
jae
push
push
sbb
fildl
scas
mov
into
xchg
push
shll
adcb
mov
dec
mov
push
inc
add
mov
cli
and
lds
jmp
data16
call
les
cmp
packuswb
fwait
xorb
mov
xorl
movsl
jle
pushf
arpl
cmp
pop
mov
mov
jbe
push
in
push
nop
xchg
dec
lea
cld
xchg
iret
outsl
mov
pushf
jnp
add
and
sub
arpl
push
pusha
pop
pop
daa
lea
outsb
dec
out
xchg
pop
ret
pop
nop
je
adc
mov
push
dec
subl
or
or
loope
adc
mov
sub
xchg
lock
dec
outsl
mov
aad
fucomip
scas
xchg
les
cmpsb
mov
mov
add
addr16
addr16
iret
mov
gs
ja
rcrl
add
mov
xor
les
and
ja
dec
out
pop
repz
repz
mov
add
mov
sub
mov
sbb
cmp
addr16
daa
popa
out
arpl
loop
fs
mov
mov
push
daa
add
xchg
sub
outsl
fistl
rsqrtps
pop
mov
lahf
fcmove
mov
mov
jmp
push
dec
psllq
mov
adc
loope
mov
sbb
sub
xor
pop
daa
push
push
lea
outsl
out
add
sub
test
outsl
out
adc
outsl
shl
lret
popa
push
ret
or
xor
mov
pop
repnz
decl
stos
lock
stc
out
ja
adc
push
jae
in
ficomps
push
ja
and
sahf
pop
push
jns
xor
andb
shlb
test
jp
sub
and
lret
mov
and
inc
daa
push
xor
test
fidivl
push
scas
ds
jmp
cmpsb
mov
sti
mov
outsb
mov
add
loopne
je
imul
xor
inc
add
push
add
push
cwtl
mov
xchg
dec
mov
fs
nop
js
mov
xchg
cmpsb
out
push
mov
cmp
arpl
xor
push
sub
mov
and
ja
dec
es
bound
and
sbb
cmpsl
fsubl
xchg
cs
and
pop
scas
push
ret
dec
into
outsb
sub
pop
dec
sub
les
dec
ja
adc
cmpsl
ret
xchg
push
divl
or
dec
add
xchg
int
sub
outsl
adc
pop
lret
jb
xchg
xchg
hlt
sbb
ja
adc
mov
mov
imull
sbb
and
sub
out
adc
outsl
out
in
push
mov
out
and
mov
in
push
pop
daa
mov
cmpl
lahf
mov
dec
fisubrl
xchg
in
scas
and
pop
mov
sti
sub
rcl
loop
xchg
adc
xor
gs
arpl
push
xor
mov
int
cs
lods
lock
daa
aam
add
loop
sbb
fcoms
lahf
push
xchg
mov
ja
nop
out
inc
pop
push
dec
out
dec
sbb
xchg
mov
loope
ret
cmp
scas
daa
jmp
lret
mov
push
mov
cmp
sbb
ja
mov
fbstp
inc
out
data16
dec
fidivrs
jle
pusha
mov
cmpsl
adc
ja
es
push
pop
xlat
push
mov
insl
adc
mov
andb
lret
sahf
shl
ja
adc
mov
mov
nop
insb
xchg
addr16
mov
data16
xchg
pop
movsb
sbbl
xchg
adc
add
out
into
cli
xchg
sub
mull
inc
sti
jge
pop
jns
les
ja
push
cmp
xor
pusha
xchg
push
icebp
sub
push
lock
int3
ja
call
jne,pt
cltd
divl
shll
xchg
xchg
pop
mov
fsubs
aad
sub
movsb
addr16
test
lds
sub
testl
dec
outsb
repz
mov
ficoms
pushf
imul
xchg
or
mov
adc
push
adc
outsb
xchg
cld
inc
lret
inc
in
jae
add
mov
stos
lods
daa
and
xlat
push
sub
lahf
xor
mov
pop
mov
push
out
adcl
outsl
out
xchg
dec
mov
jnp
jmp
dec
fs
ja
in
push
jp
clc
in
scas
sub
xor
inc
push
push
dec
data16
inc
adcb
mov
stos
negl
fdivrp
sbb
daa
nop
cmp
cld
xchg
mov
ret
add
mov
dec
xchg
les
ret
into
mov
or
loopne
or
in
push
mov
or
std
mov
lret
adc
mov
inc
pop
cmpb
fs
dec
push
insl
testb
dec
adc
or
test
bnd
xchg
mov
push
mov
xchg
cmc
mov
dec
inc
test
test
cld
dec
outsl
insl
orb
dec
jns
pushf
dec
outsb
test
sahf
dec
cmp
jae
es
out
mov
outsb
stos
repz
mov
stos
cltd
test
adcl
roll
cltd
mov
cltd
nop
dec
stos
cwtl
cltd
mov
nop
push
stos
xchg
cltd
xchg
rol
nop
push
stos
lret
cltd
xchg
rcl
nop
pop
stos
ficompl
pop
stos
repnz
cwtl
shl
xchg
pop
sarb
scas
dec
push
push
mov
stos
into
cmpsl
aam
scas
cmpsb
popf
mov
sbb
pushf
inc
dec
add
test
popa
jbe
mov
lahf
mov
bnd
insl
into
mov
sbb
cld
mov
and
idivl
xor
and
xor
mov
push
xchg
popl
test
loope
popa
push
imul
js
and
lret
js
push
mov
pop
jnp
divb
js
and
mov
adc
icebp
xchg
enter
sub
lea
xor
lds
jnp
test
inc
or
lret
dec
inc
adc
cmpb
filds
out
jb
xchg
jb
xchg
nop
jno
push
jmp
fists
in
fistl
out
and
lahf
xchg
mov
cwtl
lahf
nop
mov
xchg
fdivrl
lahf
sarl
sbbb
jns
lahf
fdivrl
mov
iret
jns
lahf
les
mov
jns
mov
cmpsb
lds
mov
sbb
movsb
sub
push
inc
inc
sbb
add
add
xor
xchg
std
jno
push
xorb
sti
inc
mov
mov
sahf
inc
mov
jecxz
mov
mov
xchg
inc
scas
mov
lods
inc
lods
mov
scas
inc
stos
mov
stos
inc
test
fiadds
movsl
inc
cmpsb
mov
cmpsl
inc
movsb
mov
mov
inc
stos
gs
inc
test
rolb
int3
jae
push
roll
jb
xchg
adc
mov
outsl
jb
xchg
adc
push
imul
push
imul
push
jno
push
gs
xchg
sbb
mov
xchg
sbb
push
popa
jb
xchg
sbb
push
arpl
xchg
push
jno
push
jge
lods
xchg
add
movsb
push
jg
stos
xchg
add
push
jns
test
add
push
jnp
cmpsb
xchg
push
jno
push
jne
movsb
xchg
or
xchg
push
or
lahf
xchg
ja
xchg
push
push
jb
xchg
jne
xchg
push
or
xchg
jae
xchg
push
or
xchg
jno
lahf
push
add
xchg
xchg
jg
popf
push
push
jb
xchg
jge
fwait
push
add
xchg
jnp
cltd
push
add
xchg
jns
xchg
jb
xchg
addr16
push
push
jb
popf
xchg
pop
or
add
andb
inc
sbb
mov
sbb
mov
adc
int3
mov
push
pushf
popa
cmp
push
adc
sub
gs
push
adc
jo
insl
xor
mov
mov
mov
arpl
ss
mov
pusha
jns
mov
loope
pusha
ja
mov
loope
pusha
jne
mov
loope
pusha
out
test
pusha
jno
mulb
loope
pusha
dec
test
bound
inc
popa
cmp
mov
and
mov
and
test
and
les
dec
and
xcrypt-ofb
cmpsl
sub
jns
mov
jmp
push
mov
sub
add
add
add
cmpsl
jmp
jnp
nop
jmp
add
out
jg
subl
into
scas
hlt
inc
pop
mov
ja
push
incb
sbb
mov
jge
inc
mov
xor
pop
push
add
jb
inc
mov
popf
jno
jb
inc
xchg
or
xchg
pop
adc
inc
xchg
or
pop
nop
cs
inc
sahf
or
pushf
sbb
xchg
pop
or
inc
cwtl
or
pusha
xor
je
out
or
mov
scas
or
add
aad
xchg
or
psubb
push
icebp
leave
mov
push
adc
sub
mov
pop
scas
dec
popf
rcl
adc
aad
xchg
sbb
xor
aad
xchg
pusha
scas
adc
scas
pop
popf
mov
scas
adc
xchg
push
sbb
push
aad
xchg
outsb
scas
pop
popf
stos
aad
xchg
insb
scas
sbb
xchg
jb
and
jo
inc
sbb
aad
xchg
ja
inc
sbb
jmp
cmpsb
jmp
in
lahf
jmp
decb
sub
cmp
xchg
xor
inc
rorl
push
inc
fisttps
push
fdivl
ds
sbbl
mov
jae
pop
mov
mov
pushf
mov
mov
mov
pushf
mov
mov
iret
mov
leave
inc
xchg
and
out
jb
lds
pusha
pop
lds
pusha
filds
in
fisubl
out
in
lcall
test
pusha
test
arpl
inc
mov
dec
bnd
xchg
mov
pop
mov
sahf
testl
add
add
pop
mov
sahf
repz
pop
test
sahf
js
pop
cmpl
jo
dec
inc
pop
or
mov
or
and
inc
dec
or
mov
inc
inc
or
mov
xchg
mov
out
inc
dec
jl
xor
jle
imul
mov
push
inc
hlt
or
pop
scas
jnp
mov
js
push
test
pop
imul
cmpsl
inc
outsb
and
mov
xchg
mov
inc
inc
mov
sahf
xchg
into
cmp
push
mov
xchg
xchg
jmp
nop
sub
sahf
push
jo
add
pop
les
popa
add
popa
ret
push
rclb
push
into
or
xor
or
push
mov
push
and
push
aam
aad
adc
popa
shrb
xlat
push
shrb
fldcw
push
fldenv
cmpsb
arpl
inc
pop
mov
push
pop
je
inc
fmuls
stos
dec
popa
inc
fcomps
mov
fidivs
mov
mov
or
inc
pop
stos
sub
push
test
dec
fwait
pop
mov
cltd
xor
lahf
stc
mov
popf
mov
lea
xchg
mov
mov
iret
das
pop
mov
scas
xor
xchg
jge
sub
xor
scas
sub
fwait
sete
mov
xchg
xor
repnz
scas
push
cld
nop
fsubp
call
loopne
into
adc
add
outsl
push
add
xor
add
xchg
test
jb
leave
les
push
mov
mov
adc
push
sbb
into
getsec
sub
int3
add
mov
inc
cli
mov
fs
adc
inc
mov
js
pop
mov
mov
and
mov
fs
lods
mov
push
icebp
test
and
insl
fsubs
mov
mov
add
inc
mov
add
dec
pop
push
jp
cmp
jnp
push
lahf
inc
mov
mov
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
cmp
jl
xchg
je
call
sub
xchg
pshufw
movd
popf
mov
jb
fwait
std
or
test
sub
popa
xlat
jmp
xchg
popa
aad
xchg
push
shrl
xchg
push
shrl
xchg
push
fildll
cltd
push
fwait
push
fldt
popf
push
fldcw
lahf
push
cmpsl
sub
popa
movsl
sub
popa
mov
push
movsl
popa
mov
push
stos
popa
scas
sub
popa
lods
sub
popa
stos
sub
popa
test
push
mov
mov
mov
jo
mov
mov
mov
jbe
mov
mov
mov
je
mov
mov
mov
jp
mov
push
mov
push
mov
push
test
ret
push
shlb
les
push
popa
subb
push
mov
enter
lret
sub
push
mov
int3
push
xchg
sub
push
xchg
sub
push
xchg
sub
push
nop
sub
push
sahf
sub
push
stos
mov
add
mov
lds
mov
push
shll
push
shrl
push
iret
sub
popa
int
mov
popa
lret
sub
popa
leave
sub
popa
xlat
sub
push
aad
ret
push
shrl
lds
push
lds
sub
push
fildll
leave
push
lret
push
fldt
int
sbb
int
fldcw
iret
push
cmpsl
sub
push
movsl
sub
push
mov
push
aad
mov
push
sub
push
lods
sub
push
stos
sub
push
test
push
jecxz
mov
loope
jo
loope
mov
jecxz
jbe
subl
or
inc
scas
mov
in
jno
movsl
mov
jbe
cld
ss
arpl
xlat
lahf
addr16
xor
popf
xchg
rolb
cwtl
sbb
xchg
inc
xchg
jns
push
jecxz
jb
popa
repnz
push
mov
in
inc
push
push
repnz
xchg
sub
push
xchg
sub
push
xchg
sub
push
xchg
sub
gs
dec
adc
mov
xor
pop
push
scas
fcomp
mov
das
arpl
xor
jbe
lret
sarb
fdiv
clc
lock
xchg
aam
call
mov
test
or
jno
pop
push
insl
adc
in
xchg
enter
jne
jbe
addl
jle
out
outsb
movsl
cmp
cmpsl
sub
pop
adc
subb
inc
mov
and
add
xchg
adc
push
sbb
sbb
pushl
cmpsb
notl
or
out
push
mov
adc
ret
mov
inc
adc
loope
lds
inc
adc
aas
test
sbb
sbb
sub
xchg
pop
inc
lods
enter
icebp
outsb
clc
adc
add
add
pop
int3
jb
fsubrl
daa
adc
adc
xor
and
shlb
fsubr
and
out
adc
xor
sub
movsb
ljmp
ret
xor
aas
pop
push
jb
push
sub
filds
orl
inc
insb
adc
inc
aas
aad
inc
pop
push
jb
push
sub
or
xchg
outsb
pop
std
pop
stos
jle
out
outsb
add
test
into
cmpsl
scas
cs
movsl
nop
enter
mov
mov
and
popa
pop
jle
out
outsb
addr16
lds
lds
ja
dec
push
dec
fstp
pop
mov
lds
std
adc
or
adc
aas
pop
and
adc
xchg
jg
dec
adc
jp
and
daa
sbb
push
sahf
and
in
pop
sbbb
inc
in
aam
adc
shrb
in
in
push
flds
mov
in
and
dec
enter
mov
lcall
cmp
icebp
dec
jle
jmp
push
adcl
push
and
lret
pop
aaa
and
das
addr16
popa
stos
rclb
sbb
inc
subl
mov
aaa
lds
addr16
lods
push
mov
push
leave
test
sbb
decl
arpl
imul
and
repz
fdivr
inc
push
and
andl
icebp
loope
push
addr16
pop
negl
arpl
icebp
sbb
int
xor
jmp
add
aaa
xor
daa
or
mov
in
jno
add
ret
in
imul
call
sbb
pushf
lahf
mov
jle
and
and
fadds
mov
sti
es
pop
enter
loope
out
cs
aam
sub
or
inc
mov
andps
jo
push
call
repnz
add
or
push
mov
mov
push
push
adc
in
outsl
and
imul
ret
fcoml
pop
sub
rcrb
jp
out
sti
insl
mov
xor
jnp
das
adc
push
loope
sarl
int
inc
sbbb
inc
loope
data16
daa
adc
pop
test
loop
imul
stos
mov
lea
daa
mov
insb
push
xchg
mov
push
pop
cmp
dec
cmp
js
dec
ret
jnp
sub
gs
stc
or
test
es
icebp
and
sbb
xor
jo
pusha
add
idivl
xor
shl
int
in
fcoms
aas
aam
mov
cmp
shlb
jecxz
les
call
stos
jo
lods
rcrl
repnz
xor
pop
or
jb
mov
xor
in
ds
inc
jmp
add
loopnew
enter
fmull
std
jg
into
inc
ds
adcb
loope
clc
subb
hlt
push
jnp
mov
insb
jmp
mov
ret
fwait
dec
mov
iret
push
add
sub
dec
cmpb
int
mov
scas
jae
imul
xchg
inc
fs
orl
sarb
out
jg
dec
lahf
dec
jle
mov
mov
mov
repz
insb
pop
lods
repz
pop
jg
test
push
mov
or
aaa
sahf
xlat
mov
dec
or
jns
fnsave
push
dec
mov
push
dec
xchg
push
call
cwtl
dec
aaa
in
shlb
sub
jp
bound
subl
jb
mov
repnz
mov
out
mov
call
scas
sahf
sbb
cli
pop
jg
push
mov
xchg
add
cmpsb
mov
jecxz
add
add
jo
dec
add
ss
insl
movsb
lods
mov
lcall
dec
scas
ja
xorl
cmpl
push
scas
out
mov
data16
out
ds
es
in
fiadds
or
inc
or
aad
shr
fcomps
fcomps
mov
push
into
jne
sahf
sahf
cmp
repz
fmulp
pushf
xor
push
cmpsb
xor
mov
add
mov
lds
dec
dec
jb
mov
insl
inc
push
in
dec
test
lods
popa
adcb
dec
inc
mov
lea
mov
ja
push
xchg
outsb
scas
scas
out
mov
mov
inc
hlt
push
jmp
sub
fmul
xchg
daa
ret
or
insl
rclb
sbb
imul
add
add
in
mov
xchg
out
out
mov
jae
xchg
fnsave
lret
fdivr
jp
and
push
ficoms
cld
adc
mov
cld
xor
cmp
fiadds
and
in
inc
mov
jmp
mov
add
add
stos
sbb
fsubrs
jbe
ljmp
lret
lea
int3
orb
rcll
mov
movsb
cld
jecxz
icebp
pop
mov
mov
xchg
lcall
ja
data16
jmp
les
jle
cmp
and
repz
fs
inc
mov
jno
push
xchg
stos
jmp
cmc
data16
sub
imul
mov
push
adc
jbe
test
mov
xchg
fildl
inc
push
push
popf
or
cmovnp
mov
cmp
adc
or
addl
xchg
jl
sti
hlt
sub
jae
addr16
insb
lret
pop
mov
enter
loopne
xchg
cmp
add
or
bound
imul
dec
lods
js
aad
sbb
lds
fwait
mov
testl
out
xchg
shr
es
jle
scas
add
xor
or
dec
mov
pop
mov
inc
out
mov
imul
cmpsl
mov
lea
sarb
inc
imul
stos
adcl
cwtl
dec
xchg
mov
inc
fldt
xchg
jno
dec
xchg
arpl
jmp
out
fistps
adc
std
or
aam
push
pop
fcoml
mov
cmp
test
loop
iret
pop
jge
movzbl
xor
pop
pop
or
cmp
xchg
cmp
jp
aam
pusha
jp
aas
loop
andl
cmp
add
pop
xchg
je
add
sub
into
sbbl
jecxz
psrlw
arpl
pushl
push
insl
mov
lea
adcl
fldcw
push
in
iret
icebp
stos
sbb
imul
jp
cmp
divps
lock
cld
sub
or
xchg
dec
dec
dec
cmp
faddl
mov
sbb
jge
cmp
int3
test
clc
dec
lret
jo
imul
mov
push
fbstp
pop
bound
mov
mov
cmp
pop
movsl
je
pop
mov
imul
cmpsb
in
push
xor
adc
sub
xor
les
filds
and
into
es
cmp
loope
adc
mov
in
pop
mov
test
fsubrs
call
jno
and
sbb
imul
or
push
out
ds
jmp
fwait
or
mov
lcall
daa
lock
xor
adc
jo
fcmovnbe
sarl
ljmp
jno
add
sbb
add
push
stc
cmp
mov
or
xchg
ret
mov
or
mov
cmpsb
ret
jg
inc
mov
cmc
dec
das
loop
stos
inc
dec
xor
pop
pop
or
popa
insb
sub
jge
push
xchg
jae
inc
and
das
hlt
test
cmpsb
inc
dec
mov
fidivs
xchg
cmpsl
pop
mov
jbe
inc
cltd
dec
jnp
inc
call
into
mov
jne
lock
fisttps
ffreep
push
adc
pop
testl
jbe
inc
jns
mov
dec
loopne
scas
js
out
adc
fidivl
out
sbb
push
mov
pop
xor
out
add
stc
mov
xor
dec
xor
inc
int
push
pop
mov
push
xchg
fs
push
pop
sbb
das
mov
sbb
out
push
in
das
add
test
and
pop
mov
push
in
cmp
les
sub
add
jae
ret
jne
ds
in
in
repnz
les
cmpsl
add
pop
into
sub
hlt
push
mov
insl
popf
push
adc
xor
sti
or
pop
mov
inc
lahf
addr16
lods
push
pop
outsl
and
jg
inc
in
push
int
clc
stos
pop
pop
inc
jno
ss
pop
jp
loopne
and
xor
cli
repnz
rcrb
sub
mov
mov
mov
or
shrl
push
fcompl
dec
cmp
adcb
stos
pushf
sub
decb
mov
dec
dec
dec
mov
xchg
inc
sbb
push
lock
leave
ja
pop
jl
nop
jbe
add
aam
in
jp
ret
xor
roll
int3
fnstenv
adc
lret
add
and
xchg
lret
add
scas
or
das
fs
pop
jg
int3
adc
dec
lahf
inc
insl
xor
stc
mov
push
pop
mov
mov
pop
mov
ljmp
lea
stos
data16
mov
lcall
mov
popa
jl
jno
and
sarb
in
mov
test
sbb
jbe
outsb
cmp
loop
jb
mov
dec
repnz
popa
xchg
jbe
and
push
lods
outsl
inc
mov
pop
in
cmp
sbbl
inc
sub
insb
fisubrl
push
inc
adcb
test
jnp
mov
pushl
cmp
addr16
push
orb
cli
mov
lret
pop
aad
xor
push
je
das
and
sahf
jo
adc
jecxz,pt
test
cmp
cmp
mov
jle
push
out
xor
adc
xor
or
aam
adc
call
je
and
cwtl
mov
dec
stos
inc
push
stos
ljmp
inc
cmpsb
push
xchg
outsb
mov
jnp
cmpsb
ja
mov
out
xor
inc
pusha
dec
pop
test
fwait
mov
xchg
cs
add
cmp
mov
jle
cwtl
cmp
paddd
mov
adc
dec
movsb
adc
daa
cmc
stc
inc
sbbl
mov
je
inc
lcall
dec
ljmp
jge
xor
lock
mov
or
ljmp
sbb
dec
outsl
xchg
lock
mov
xchg
subl
mov
popa
mov
xorb
dec
sti
mov
xchg
repnz
xor
and
fadd
jns,pn
hlt
aas
fisttps
add
dec
xorb
test
mov
mov
mov
or
clc
inc
mov
cmpsl
addr16
mov
mov
je
jae
xchg
inc
mov
ror
addl
jb
shlb
lods
dec
inc
sbb
xorl
les
dec
mov
out
and
pop
xor
shll
notb
aad
sbb
inc
pop
inc
test
jne
mov
sub
xlat
addl
add
popl
inc
xchg
push
ret
mov
mov
push
scas
and
push
movsl
or
pop
mov
movsl
pop
daa
js
pop
push
andl
push
cmpsb
sbb
push
xchg
push
xor
add
pop
stos
dec
xchg
flds
dec
xchg
xchg
dec
add
lahf
out
fsubs
clc
push
lahf
sbb
dec
into
or
mov
mov
mov
in
pop
sbb
insb
bound
mov
cwtl
cmp
jp
dec
mov
push
gs
imul
push
in
ret
push
add
sub
or
testl
mov
jg
mov
jp
mov
push
push
sub
daa
jns
ljmp
mov
adc
push
popa
aam
jg
dec
mov
sahf
hlt
inc
inc
push
dec
cmc
pop
cmpsb
ss
push
or
adc
lret
repnz
ret
sub
jne
sahf
outsb
pop
lcall
int3
mov
adc
lock
jp
stos
imul
hlt
stos
pop
lea
outsb
pop
xor
or
cmp
dec
loop
adc
roll
ljmp
lock
lea
sti
ja
jg
add
push
mov
adc
jmp
testl
fcoml
jle
mov
or
dec
nop
pusha
pop
xor
loopne
int3
jno
mov
int3
or
inc
iret
push
shlb
stos
pop
les
orl
sbb
cmc
inc
inc
pop
lods
dec
inc
ret
out
add
lea
jle
mov
outsb
es
insb
pop
jecxz
outsl
cs
push
orl
test
inc
cli
or
add
push
push
lods
fwait
lds
mov
mov
xor
addr16
nop
dec
and
shlb
or
sbb
cltd
add
mov
jge
test
gs
arpl
test
xchg
pop
iret
add
inc
mov
sbb
scas
dec
mov
dec
push
cmc
mulb
mov
fiadds
fmuls
in
cmp
mov
jb
pusha
lcall
sbb
adc
pop
data16
sbb
add
xor
xorb
jno
dec
dec
cmp
mov
cmpl
lea
pusha
movsb
inc
jle
imul
cld
or
stc
push
mulb
sub
push
add
or
dec
or
popf
inc
add
xchg
pop
fbstp
cmp
inc
stos
loopne
data16
outsl
xchg
push
mov
inc
xchg
cltd
movsl
jl
lcall
test
notl
and
arpl
pushf
lods
push
outsl
test
jne
pop
mov
adc
icebp
push
mov
xchg
rcrb
ret
sub
sub
lret
out
jle
cmp
cmp
jg
data16
arpl
daa
insl
push
shlb
jle
outsb
cli
xchg
push
jg
aad
mov
xchg
push
adcb
arpl
dec
adc
rorl
xor
jnp
cs
push
pop
and
dec
enter
xchg
or
mov
mov
std
scas
mov
cmp
push
add
add
lret
popf
or
ja
and
push
or
push
pop
sub
jmp
jge
imul
pop
lcall
cmp
sbb
enter
test
daa
dec
stos
imul
fisttpl
daa
xchg
dec
mov
dec
ds
loop
inc
and
popa
jbe
test
out
stos
ja
pop
lcall
std
jne
ds
pop
mov
loope
test
cmp
xchg
jo
inc
lods
cs
jle
test
dec
scas
and
int
subl
dec
cltd
pop
test
pop
xchg
inc
or
xor
shrl
cmc
inc
scas
insl
xchg
dec
stc
xor
adc
je
movsl
sahf
inc
mov
mov
and
cmpsl
adc
data16
loope
xchg
inc
mov
outsb
sti
push
pop
push
mov
js
dec
incl
cs
and
cmpl
cmp
or
fcmovu
sbb
xor
push
jmp
inc
enter
inc
mov
dec
je
ret
lods
inc
xchg
ds
outsb
xor
mov
xchg
jno
cmpsb
dec
add
jle
adc
or
mov
nop
or
outsb
imul
dec
call
dec
gs
lret
les
jp
inc
jno
mov
push
jbe
mov
add
xor
roll
mov
sub
rol
pop
je
out
loop
jns
std
xor
pop
ret
inc
xchg
cmc
mov
adc
push
mov
das
enterw
stos
outsb
test
adc
mov
mov
jmp
lea
dec
insb
mov
into
sub
cmpsl
mov
adc
insb
gs
movsb
jg
sub
xchg
jl
pusha
movsl
bound
jns
add
add
jmp
mov
cmp
aam
sbb
popa
les
fsts
ret
sub
push
out
cmp
pop
bnd
cmp
aaa
out
pop
jb
movsl
mov
rolb
int
jge
pop
mov
rcll
jle
dec
mov
inc
scas
dec
mov
in
or
lret
mul
movsl
and
dec
xchg
lahf
test
fmuls
mov
imul
std
push
mov
mov
mov
lret
sub
mov
cmp
xor
xlat
sub
lret
aam
rcrl
mov
mov
hlt
rol
movsl
je
adc
xor
lock
adc
cmp
inc
xchg
gs
jns
data16
and
add
mov
adc
jo
or
icebp
mov
sub
lea
pop
movsl
pushf
mov
cmp
push
cmpl
cmp
xchg
dec
or
int3
lcall
mov
lea
stos
int3
pop
mov
sti
push
jne
xchg
sahf
mov
sbb
inc
xchg
add
or
sub
pop
fwait
dec
leave
cmp
mov
mov
js
ljmp
push
mov
negl
adc
mov
loop
inc
shr
xchg
rclb
pop
js
insl
inc
sub
sbb
pop
sbbb
mov
or
imul
int
cmp
cmp
repz
and
mov
push
icebp
insb
data16
and
adc
insl
subl
cmp
ret
and
mov
mov
jecxz
fnsave
lret
int3
test
sbb
pop
jg
sbb
mov
sbb
xor
icebp
lods
cmp
sub
orl
mov
mov
add
cmp
and
aaa
dec
or
adc
xchg
add
add
loop
stos
mov
pusha
cmpl
cltd
jl
inc
test
jno
ret
stc
xchg
mov
outsb
idivl
jne
jae
and
mov
loopne
xchg
addl
jo
and
inc
pop
push
iret
dec
lods
push
push
jne
jbe
jns
dec
xchg
insb
imul
add
sub
movsb
mov
pop
in
popf
jne
inc
out
lods
inc
xchg
out
jle
stc
daa
lret
push
repnz
sahf
jle
hlt
adc
mov
repnz
scas
test
ds
jmp
mov
cld
jmp
shlb
aas
cmp
sub
pusha
adcb
sbb
pop
jmp
dec
push
pushf
ret
jnp
movsb
dec
call
mov
loope
inc
stos
jb
inc
out
cmpsb
in
sahf
stos
or
push
notb
inc
addr16
ds
aaa
call
pop
jle
orb
cwtl
jg
xor
sbb
mov
out
lds
sbb
jno
inc
lea
scas
or
aas
mov
dec
add
lcall
sbb
into
fs
ljmp
xor
mov
jns
dec
add
pop
jmp
fwait
xchg
jns
jns
push
inc
xor
push
int
push
test
data16
daa
jnp
push
subl
cltd
cmp
push
enter
push
sbb
pop
loopne
add
pop
movsb
rol
mov
lahf
lret
xor
xchg
lcall
loope
cmp
pop
push
arpl
mov
mov
add
push
cli
aaa
or
cmpsl
xlat
add
or
sbb
mov
cmpsb
add
les
enter
xor
and
or
dec
or
ss
pop
and
cmp
leave
add
mov
daa
xlat
add
rcrl
add
lods
mulb
test
in
insl
outsb
add
gs
push
in
cli
data16
stos
cs
or
mov
cli
add
int3
adc
add
aas
data16
xor
or
ss
ss
add
xor
andb
sbb
sub
cmpsb
mov
and
ret
sbbb
and
in
sbb
cmp
lcall
add
arpl
add
xlat
sbb
jp
dec
sub
ret
and
mov
addb
jl
repnz
sub
mov
pop
lods
or
retw
loope
mov
inc
xchg
in
test
mov
add
pop
ljmp
sbb
or
sbb
mov
jmp
cmc
push
push
and
dec
jo
dec
push
adcb
jmp
pop
pop
or
icebp
sub
cli
push
mov
sbb
int3
cmp
lret
add
pop
mov
ljmp
add
cmpsb
push
sbb
sub
inc
cmp
jae
fiadds
fstpl
outsl
das
mov
pusha
sbb
pop
aad
push
loope
hlt
add
inc
and
out
cld
dec
daa
fldl
outsl
jle
mov
or
jmp
xchg
inc
aad
jb
lcall
outsb
rol
inc
sub
dec
push
pop
mov
dec
aad
push
insl
test
jb
add
xor
inc
lock
aam
imul
ret
xlat
sub
push
adc
rorl
rcll
divl
pop
jns
jle
sbb
push
js
cmp
jne
rcll
jae
shlb
sub
sub
sbb
scas
pop
je
xor
mov
enter
lret
iret
hlt
and
add
add
and
rclb
inc
leave
cmp
mov
fs
lret
js
ja
cmpsl
lods
push
mov
cmpsl
pop
out
sub
outsb
idivl
mov
mov
xor
ds
inc
hlt
test
mov
lea
push
xchg
in
mov
xchg
bound
sbbl
cmp
push
scas
sti
sub
jge
das
cmp
xor
and
push
push
int3
test
lahf
sbb
push
test
adc
int3
mov
les
idiv
fisubrs
in
rolb
push
stos
pop
push
stos
mov
xchg
arpl
leave
ljmp
sub
jg
das
out
or
ret
mov
push
add
add
inc
loopne
pusha
dec
xor
gs
repz
sahf
test
inc
push
mov
int3
xchg
sub
mov
pop
push
jmp
jle
xchg
pop
xor
lods
gs
add
jg
es
test
stos
push
cmp
pop
test
push
cmp
insl
mov
xorl
ret
sahf
push
xchg
test
push
pop
pop
mov
inc
xchg
add
std
scas
sti
sarb
sahf
bound
outsb
data16
jbe
idivl
adc
test
sahf
repz
mov
out
push
xchg
pop
sbb
out
and
bound
cld
mov
das
pause
jecxz
adc
mov
mov
mov
mov
xor
inc
enter
ljmp
jo
dec
imul
or
addr16
cmc
ds
loope
pop
in
stos
mov
cmc
arpl
pop
inc
mov
fs
jl
sbb
mov
xchg
push
and
mov
andl
mov
jbe
cmp
mov
sub
sub
dec
mov
add
add
cld
out
imul
xor
ficoml
mov
inc
xor
arpl
fstpt
out
int3
aaa
clc
mov
add
pushf
sbb
jg
jae
mov
fwait
xchg
cmpl
mov
dec
inc
lock
aaa
jbe
scas
cmp
inc
cli
daa
xchg
jle
cltd
aas
rcrb
ja
mov
pop
mov
test
enter
jae
aaa
movsb
add
jmp
and
insb
inc
jnp
lahf
hlt
pop
cmpsl
dec
inc
xchg
add
push
call
and
mov
fdivp
es
imul
add
repz
pop
vpsubd
cltd
out
add
lcall
push
mov
push
movsb
and
sbb
inc
je
mov
pop
stos
adc
sti
add
cmp
repz
push
mov
inc
test
ficoms
push
xor
into
mov
inc
sub
push
ja
and
clc
pop
xchg
or
pop
cmp
cli
add
nop
je
and
ss
push
sbb
mov
bound
xor
aaa
push
sub
je
jne
jo
sbb
dec
movsb
cld
sbb
pushf
jne
repz
inc
mov
add
push
in
dec
push
cmp
insl
into
fwait
add
xor
cld
lahf
out
mov
inc
adc
cmc
sarb
popf
and
xor
mov
push
mov
dec
cmp
filds
adc
xlat
sti
arpl
adc
xchg
pop
rol
pushl
and
pop
pop
pop
es
pop
cmp
mov
push
inc
loop
ret
leave
xchg
das
loopew
jg
push
aas
das
cmp
xchg
loopne
out
mov
cltd
or
cmpsl
or
lea
pop
mov
push
jl
lea
lahf
jbe
add
add
pop
lret
es
lcall
das
pop
cmpsl
jp
sub
xchg
shrl
jle
js
and
int
inc
sbb
clc
add
jle
xor
nop
iret
outsl
mov
es
sti
lods
jl
ds
and
and
fwait
xor
or
and
add
mov
negb
mov
ds
ds
std
mov
in
cld
adc
ret
add
ffreep
xchg
out
add
and
test
es
pop
cmp
arpl
cs
sub
cmp
adc
repnz
cli
mov
cld
push
imul
insb
jle
jge
mov
in
dec
sbb
sub
mov
rorb
fisttpl
push
xor
popf
push
mov
aas
mov
xorw
mov
jg
sarb
lods
inc
xchg
imul
mov
loop
les
cmc
add
ljmp
ljmp
scas
jg
cmpsl
loope
push
dec
addl
cmc
pop
jb
rcrb
sub
aad
loop
arpl
cmp
inc
sarl
repnz
jno
les
cli
sti
bound
out
and
mov
fs
jecxz
aaa
push
jns
fbstp
rcrl
rcl
mov
leave
scas
rcrl
xchg
or
xchg
xchg
mov
addr16
mov
ljmp
xchg
push
bsf
fs
movsl
pop
in
stc
fidivl
test
imul
xchg
daa
scas
xor
xchg
and
enter
mov
pop
adc
fwait
xchg
jecxz
ss
xorb
add
sub
cmp
icebp
jne
das
mov
mov
mov
inc
jns
adc
loope
movsb
repz
aas
or
jne
roll
add
add
stc
adc
out
pop
shr
out
and
test
repz
js
pop
adc
std
aaa
clc
mov
push
ss
push
xchg
cmp
jbe
js
daa
stos
cmpsl
lahf
push
out
push
or
lods
mov
xor
das
push
mov
inc
ficoml
inc
imul
sarl
mov
cmc
ljmp
and
sub
push
es
in
pop
scas
adc
jle
push
fucomp
leave
mov
sub
xchg
jl
int3
js
insb
aas
jne
dec
icebp
pusha
into
mov
mov
sub
mov
iret
pop
arpl
leave
outsb
dec
adc
mov
je
sbb
ror
bound
mov
sub
scas
js
arpl
adc
adc
insb
mov
cmpsb
into
inc
dec
pop
pusha
push
pop
not
xchg
ret
add
mov
adc
sub
cmpsb
mov
cmp
push
imul
repz
sub
pushf
inc
test
aaa
invd
xor
lock
pop
xchg
aam
or
test
clc
repz
pop
push
xor
pop
aas
sub
jns
dec
mov
adc
push
inc
or
divl
inc
imul
aas
add
push
int
loop
setbe
mov
inc
into
dec
xor
imul
add
test
mov
ds
mov
daa
mov
pop
subb
add
mov
pushf
mov
jmp
push
sar
mov
nop
jg
shll
mov
lcall
in
jg
lds
push
into
inc
jmp
push
and
shll
dec
dec
popf
ljmp
cmpsb
pop
xor
inc
and
test
scas
jo
cmp
loopne
scas
mov
loop
xor
push
xchg
mov
adcb
cmpsb
sbb
jno
dec
add
sub
hlt
fldl
cmp
mov
or
jne
aam
insb
xor
mov
mov
mov
pop
in
inc
les
aaa
or
fnstenv
testb
fisubrl
sbb
rcr
and
test
aaa
push
and
or
call
inc
jb
mov
loope
imul
sub
pop
hlt
das
nop
jne
inc
push
push
jle
mov
sbb
out
daa
push
xchg
pop
lds
addb
add
int3
inc
mov
cmp
mov
out
adc
sub
xchg
push
loop
loop
or
cwtl
mov
aam
lock
inc
fdivr
pop
jg
pop
or
jb
mov
sub
xlat
ja
add
das
mov
jg
xchg
jnp
and
lahf
insb
iret
or
sbb
mov
and
imul
sbb
cmp
test
scas
fimuls
and
lcall
std
sub
xor
push
addr16
sub
cli
and
jp
adc
pop
push
lock
pop
xchg
jp
pop
pop
shl
jo
lea
mov
cmp
push
gs
sbb
movsb
xlat
insb
adc
daa
lret
cs
xchg
bound
ss
ret
lea
lret
or
out
jbe
mov
pop
jmp
xchg
cmp
pop
sub
lret
outsl
and
push
mov
das
ljmp
push
aam
pop
pop
enter
sub
cltd
xlat
inc
jo
or
mov
shrb
add
mov
sbb
xchg
xor
mov
cwtl
adc
lcall
push
xchg
add
popa
je
xchg
cmpsl
mov
ss
push
je
inc
shlb
pop
es
pop
sbb
loopne
dec
dec
and
and
wrmsr
test
inc
inc
outsb
dec
cmp
mov
jbe
mov
dec
rorl
adc
inc
in
sub
aaa
sarb
js
lds
or
cmp
bound
hlt
in
push
mov
or
mov
jne
dec
mov
sub
pop
int3
lcall
vpcomud
mov
pop
pop
addr16
xor
mov
repz
or
cltd
insl
cmpl
add
sahf
movsb
or
sbb
int3
data16
add
inc
rorb
int3
mov
test
mov
push
stos
add
or
mov
test
arpl
jg
cli
cmpsb
jl
mov
and
mov
bound
adc
push
inc
ficomps
and
arpl
icebp
das
sbb
push
fnstsw
lahf
dec
add
jp
nop
es
jle
data16
push
and
lcall
xchg
cs
or
rcr
mov
mov
push
lcall
push
xchg
sub
mov
cmp
push
mov
and
push
insb
pop
clc
pop
fmull
dec
dec
cmc
push
int
fidivs
test
mov
pop
dec
dec
jp
jnp
add
loop
jmp
jp
adcb
int3
or
push
sbbl
imul
dec
xchg
dec
mov
cmc
jp
sub
stos
or
xor
sbb
out
mov
or
imul
add
loope
sbbb
es
fdiv
sub
mov
push
push
mov
into
dec
out
subl
jl
jae
movsb
adc
js
push
leave
movsb
xor
and
scas
scas
dec
mov
mov
push
mov
je
lcall
faddl
in
clc
push
inc
sub
ja
xor
out
subb
dec
sbb
or
push
adc
rclb
pop
and
pop
shr
frstor
fs
jns
arpl
outsl
ja
daa
cmp
les
lcall
andl
xchg
cli
rclb
dec
icebp
fistpll
xchg
into
jnp
cld
jmp
aam
jmp
jae
dec
jbe
ljmp
mov
add
pushf
dec
mov
mov
mov
popa
cwtl
mov
mov
ret
enter
xchg
rcll
pop
icebp
ja
sub
adc
stos
cmp
outsb
jge
cltd
jp
jb
mov
out
inc
add
push
inc
in
or
xlat
fmull
pop
les
lods
into
mov
or
ret
ds
push
bound
push
lcall
sti
xchg
sbb
into
cmp
dec
push
stc
push
out
bound
xor
cli
mov
jecxz
loopne
out
inc
test
aas
xchg
in
in
stos
orb
popa
xor
push
push
jno
or
adc
push
pop
jg
inc
cltd
shll
sahf
add
test
fiaddl
movsl
iret
mov
dec
ja
filds
loop
add
cmp
mov
pop
fcoms
jge
and
add
add
jp
dec
fisubrl
cs
aas
xor
inc
imulb
dec
scas
fisubs
popf
pop
fildl
cltd
insl
mull
lcall
cmc
andb
dec
fs
ss
jge
sub
xor
push
add
jg
or
lock
inc
rorl
push
pop
lods
or
jecxz
and
jp
fmuls
mov
cmc
sub
inc
ret
mov
xchg
popa
hlt
cmpsl
dec
imul
data16
test
xlat
jecxz
jmp
cmp
pop
dec
test
push
xchg
loop
sbb
and
popf
das
dec
insb
jb
stc
jns
lds
insl
dec
cmp
mov
xor
push
repnz
int3
push
inc
das
movb
das
mov
aam
movsb
int3
insb
mov
ja
mov
jno
and
cmp
and
jae
loop,pn
lret
xor
lcall
and
and
out
daa
mov
adc
movsb
ja
aaa
cs
pop
stos
insb
push
shufps
enter
cs
dec
push
cmp
pop
roll
xlat
pushf
test
sbb
data16
inc
dec
fidivrs
js
mov
sbb
es
inc
sbb
pusha
xchg
mov
bound
xor
movsl
xor
mov
lahf
ja
pushf
xor
jae
and
jne
xor
dec
loop
push
cld
xor
inc
and
cltd
push
push
sbb
mov
cmc
shll
add
sub
movsb
lret
push
int3
mov
pop
xor
add
mov
mov
xor
mov
xor
xchg
mov
inc
jbe
mov
test
sub
iret
push
je
insb
fisttpll
cs
cmpsl
push
or
mov
fldt
hlt
enter
movsb
fisubl
cmp
add
add
shrb
xchg
aaa
in
jbe
enter
inc
shlb
mov
outsl
std
jp
jp
sbb
enter
sub
sbb
loope,pt
mov
dec
push
repz
push
pop
cmc
dec
sub
mov
popa
or
vpcmpgtw
xchg
aad
scas
mov
imul
hlt
inc
mov
stos
inc
cltd
cld
in
subb
lock
jno
pop
mov
xchg
es
cmp
dec
aas
adc
lret
ficoml
jb
mov
pushf
lret
cli
push
sbb
cmc
push
sub
lcall
xchg
jle
and
aaa
inc
imul
rcrl
in
xor
inc
xor
dec
xchg
vfmaddsub231pd
or
or
jge
cmp
test
addr16
jnp
les
in
jo
xchg
or
cmp
and
push
fisubs
sub
test
leave
fsubp
xchg
push
or
mov
xor
pop
xchg
cmp
inc
popa
add
xorl
ds
pushf
loop
scas
out
dec
add
jle
pop
push
iret
mov
test
or
pop
cmp
loop
mov
pop
lea
jbe
movl
adc
call
push
add
test
dec
lret
ljmp
pop
aad
jmp
jmp
pop
pushf
pop
test
sbb
rcrl
fidivrs
xchg
divb
rol
out
sbb
push
mov
push
lods
call
cmp
or
cli
jnp
subb
cmc
mov
fcomp
aad
stc
mov
cmp
dec
rcll
jnp
mov
push
aas
and
cmp
xchg
push
inc
mov
adc
add
lods
int
dec
cmpsl
pop
cmp
in
add
mov
xor
cli
sub
jns
jecxz
cld
fs
adc
sbb
adc
xor
sahf
push
test
pushf
clc
or
ljmp
pop
daa
xchg
xchg
mov
test
pushf
es
mov
outsb
sarb
lahf
or
cwtl
push
and
dec
pop
scas
imul
cmp
imull
and
sub
add
ret
jle
add
and
pop
and
test
and
or
jae
movsb
jo
pop
mov
inc
push
or
cmp
mov
push
jb
repnz
aas
mov
dec
cmp
stos
roll
ret
xchg
mov
sub
mov
sbb
into
test
subb
repnz
adc
movsb
lret
shlb
sti
pop
cmp
adc
pop
sbb
hlt
in
jo
nop
js
jo
lods
adc
cmp
push
jns
ljmp
cmpsl
ds
inc
jb
and
movsb
insb
shll
mov
scas
pop
hlt
push
pushf
cli
cmp
cmp
loop
dec
jle
mov
push
jae
cmc
mov
fiadds
add
xchg
xchg
std
bound
addr16
pop
jnp
loope
and
push
dec
push
and
shl
and
mov
inc
mov
sub
pop
lahf
jl
push
inc
push
shl
stos
pop
push
and
pusha
out
xchg
outsl
repnz
push
fucomp
push
mov
xor
jmp
pop
adc
and
mov
arpl
ja
hlt
push
sbb
jmp
call
pop
adc
pop
mov
in
jne
pop
and
arpl
adc
daa
fidivrs
jnp
ret
rcr
imul
cs
jnp
mov
fwait
nop
rorb
cmp
add
incb
add
add
inc
mov
xchg
cli
mov
ret
outsl
cs
cmpsl
and
aaa
arpl
and
popa
push
push
cmp
xor
mov
pusha
mov
dec
rcrb
jle
push
imul
mov
sbb
loope
setnp
mov
mov
mov
mov
sub
pushf
mov
add
cmp
inc
cmp
jg
outsb
xor
scas
addr16
roll
in
jge
pop
pop
xlat
inc
lods
pop
inc
addb
mov
lcall
in
je
cmp
and
scas
mov
leave
cld
lahf
xor
mov
adc
leave
out
jl
jl
gs
and
xor
jp
aaa
cwtl
lahf
xchg
xchg
add
mov
dec
das
or
les
xchg
adc
es
sbb
hlt
and
mov
adc
es
test
mov
bound
inc
push
andb
in
or
je
or
and
sbb
ljmp
outsb
icebp
lahf
in
in
adc
lahf
pop
movsb
adc
jge
jge
inc
test
sub
push
push
movsb
outsb
push
dec
add
inc
andl
adc
or
dec
es
cmpsl
jg
and
mov
int
imul
sub
add
mov
ret
pop
pop
in
in
dec
std
or
fcmove
fists
xchg
lods
dec
mov
aam
fidivrl
mov
add
daa
repnz
mov
stc
or
and
or
mov
fcoms
insb
push
mov
push
ret
jmp
fbld
xchg
mov
orl
ljmp
cltd
xchg
adc
dec
fistps
mov
imul
xchg
cmc
xor
outsl
pusha
sub
and
mov
xchg
and
sbb
xchg
loope
sbb
mov
cmp
std
in
cmpsl
sub
or
scas
and
xchg
sahf
gs
mov
jbe
pop
adc
sbb
loope
es
jl
mov
andb
in
push
jbe
bound
jg
cmpb
mov
mov
xor
adcl
mov
outsl
pusha
mov
lcall
pop
aad
shll
xchg
imul
and
xor
cmp
xchg
dec
jae
add
xor
cld
adc
shl
adcb
jno
and
jecxz
or
pop
outsb
lea
fsubs
mov
cld
out
pop
xchg
push
jae
leave
adc
movsb
cmp
pop
in
repz
sub
stos
sub
imul
bound
stos
push
cmp
mov
xchg
bound
inc
or
stc
cmc
das
or
cmpsb
scas
loop
and
dec
mov
movsl
dec
pop
cmpsb
scas
push
sub
pop
cmp
dec
add
loope
jnp,pn
das
jno
and
hlt
shlb
push
test
xchg
aas
mov
cltd
notl
mov
pop
fstpl
popf
lret
mov
xor
jo
fidivrl
lds
fisttpll
ret
stos
mov
repz
inc
fwait
jne
pop
imul
movsl
in
pop
dec
xor
stos
jg
cmc
adc
test
fs
xchg
and
nop
mov
pop
mov
or
xor
icebp
out
push
pop
mov
bswap
push
mov
adc
dec
cmpsb
rcll
inc
scas
mov
mov
mov
loop
stos
sub
sbb
add
add
shl
mov
in
ss
lods
add
aaa
or
xor
std
test
daa
std
xor
popf
inc
cmpsb
sbb
fidivrl
mov
aas
pop
pop
test
imul
pushf
test
pusha
pop
push
popf
mov
popa
icebp
xchg
mov
inc
iret
fsubl
inc
pop
add
sti
and
fs
mov
es
cmp
push
inc
mov
pop
xorl
xor
add
mov
mov
in
popf
jae
imul
and
push
xor
mov
mov
das
jecxz
adc
cmpb
dec
mov
je
out
hlt
inc
inc
jp
mov
ja
stc
dec
aaa
push
push
je
mov
aas
jo
or
sbb
stos
test
sub
pop
push
mov
cmpsl
xchg
and
push
rorb
push
subl
or
cmp
fadds
outsl
ret
push
pop
jno
cmp
repnz
gs
daa
add
outsb
ret
imul
out
cmpsl
mov
xor
test
ret
sub
sub
inc
inc
pop
lret
push
cmp
dec
jg
arpl
into
or
mov
in
fisttps
adc
push
jb
xor
in
inc
jb
fildll
sbbl
pop
xchg
sub
jecxz
bnd
xchg
jb
ret
or
fistps
mov
sub
vpand
inc
jg
and
lcall
dec
movsb
or
lock
cmp
lock
shlb
shl
icebp
movsb
jg
pushf
sarb
cmc
dec
dec
out
sbb
dec
movsb
lcall
out
fidivl
loop
lret
mov
push
add
push
outsb
mov
aam
gs
cmpsl
enter
mov
leave
int3
in
mov
loop
fisubrs
mov
enter
jge
in
arpl
push
jle
out
test
das
in
jmp
mov
xorb
outsl
pop
leave
daa
arpl
inc
mov
add
inc
push
xchg
jo
xor
dec
jb
jge
out
jo
incl
popa
frstor
bound
rcrb
adc
loop
dec
addr16
xor
adc
das
inc
sub
mov
ret
movsl
xchg
test
add
lods
dec
adc
sub
pop
sub
or
mov
stos
or
jp
cmpb
aad
dec
fstpt
movsb
loop
adc
scas
jmp
jnp
aam
inc
arpl
push
mov
xchg
cmp
sahf
xchg
cmpsl
mov
jmp
add
fldenv
xor
jmp
add
fisubl
jne
lahf
jbe
mov
testl
dec
ret
jg
push
mov
jnp
adc
fucomip
les
and
stos
ret
and
imul
loope
or
push
sarl
cmpl
xchg
in
ret
sub
mov
jge
dec
jl
cmp
mov
jl
adc
xor
mov
push
shll
dec
movsb
cmpsl
mov
cld
xchg
int
fimull
jp
xchg
lahf
lods
pop
nop
or
sarl
adc
pop
mov
testl
mov
add
pop
mov
mov
fwait
cmp
or
fs
ja
xor
jl
xchg
outsb
nop
scas
out
mov
add
xchg
sbb
jno
jns
sti
loopne
js
inc
popf
loopne
cmp
mov
insl
dec
out
push
stos
in
leave
ds
dec
dec
push
nop
cli
cmp
sbb
add
inc
cmp
add
pop
es
daa
add
xchg
mov
clc
dec
push
pop
mov
cmp
cmp
fsubl
inc
pusha
mov
loope
pop
xlat
cmp
xchg
mov
movsl
les
mov
jle
sub
data16
outsl
add
fdivrp
aas
fwait
and
sti
lret
xchg
jo
cmp
lds
mov
icebp
stos
or
push
mov
dec
imul
xchg
jo
add
and
adc
dec
and
xchg
dec
addr16
jb
mov
mov
or
push
xchg
test
into
inc
pop
inc
dec
mov
mov
inc
mov
add
sub
stos
incl
pop
int
in
stos
mov
jecxz
or
je
inc
stc
std
scas
lahf
mov
mov
adc
sub
or
xchg
dec
mov
mov
cltd
jb
gs
fwait
pop
add
sub
xchg
jnp
sarb
push
mov
aad
aas
in
add
test
mov
cmpsl
mov
pop
add
push
dec
push
dec
inc
lods
fdivrs
cld
test
imul
push
fnstenv
int3
jb
sbb
pop
outsb
mov
fcmovb
pop
outsb
push
mov
out
nop
fbstp
gs
nop
dec
in
mov
xchg
into
orb
xor
sub
fstps
mov
jl
push
jns
xor
xchg
and
sbb
cmpl
loope
mov
sub
cmp
mov
dec
dec
ja
pop
mov
movb
movsl
cmpsl
xlat
dec
in
push
xchg
lahf
adc
push
mov
repnz
pop
xor
fdivrl
adc
mov
fsubl
shrd
xchg
aad
xchg
inc
mov
leave
xchg
xchg
pushf
pop
call
pop
mov
lahf
jp
push
mov
xor
and
inc
lods
jae
fisubrs
out
xrelease
xor
out
jle
add
push
lods
lds
mov
jbe
call
xchg
and
insb
fwait
loopne
cmp
pop
xchg
addr16
jmp
lods
ret
or
je
add
sub
adc
push
sub
dec
call
inc
push
fildll
das
data16
aad
adc
idivb
lock
push
push
fiaddl
fildll
dec
aas
adc
or
inc
std
adc
leave
cld
jns
sbb
das
jl
inc
mov
adc
adc
out
cld
pop
inc
cmp
lea
mov
inc
sbb
fimuls
ja
fimuls
js
push
ds
lock
sub
je
inc
push
call
lret
dec
xor
icebp
out
mov
sahf
jbe
pop
pop
mov
jae
and
cmc
ja
add
pop
inc
jbe
into
je
sub
mov
mov
sub
aaa
adc
jb
ficomps
dec
add
or
dec
sbb
ja
cmp
inc
or
fisubrl
cwtl
mov
pop
iret
int
xor
add
pusha
inc
in
pop
popf
out
pop
or
ss
push
arpl
enter
sub
mov
inc
aas
push
in
push
xchg
xchg
sub
pop
outsb
adc
cmp
lahf
push
mov
ja
imul
mov
jp
notl
mov
or
enter
lret
iret
inc
es
out
jbe
mov
std
notl
sbb
jae
lahf
pop
notl
pop
sarb
sbb
ss
jecxz
idiv
shrd
xchg
and
sbb
add
sbb
jecxz
xchg
or
idivl
xchg
dec
mov
aam
mov
mov
jmp
dec
fisubs
imul
lret
pop
cltd
jbe
lret
xor
sub
je
sub
dec
fsubrl
call
push
lock
movsl
mov
inc
insl
cli
inc
outsb
imul
xor
shlb
outsb
aad
test
out
mov
pop
pop
ljmp
ss
mov
icebp
aaa
pop
mov
lds
jae
nop
mov
mov
or
je
ss
fs
shrl
sti
subb
pop
pusha
mov
incl
shrl
sahf
mov
adc
in
addl
xor
cmpsb
sbb
pop
mov
and
imul
les
subl
pop
sbb
pop
ret
ffreep
aas
addr16
mov
pop
or
xorb
mov
mov
add
rorb
mov
inc
jbe
mov
xchg
dec
sub
rorb
testl
loopne
adc
inc
push
dec
mov
out
aad
dec
dec
jae
mov
lods
xchg
jno
insb
or
push
jne
inc
or
xchg
call
outsb
lahf
hlt
push
stc
lcall
mov
in
mov
arpl
pop
jb
fcmove
xchg
mov
fnsave
mov
insb
mov
mov
outsb
push
cmp
mov
in
add
shll
stos
into
lock
daa
mov
lret
jp
push
push
pop
out
pushf
repz
dec
call
fsubp
fwait
lcall
xchg
scas
daa
je
pop
mov
mov
add
add
xorl
adc
mov
mov
push
push
paddsb
add
movsb
cmp
push
call
mov
mov
cmpsb
js
push
lods
out
fdivs
mov
push
xchg
addr16
dec
insb
das
jl
je
cld
subl
xor
push
lret
jno
out
mov
mov
notl
cmpsb
insb
cwtl
sbb
in
imul
adc
repnz
jle
cwtl
xor
daa
or
cmpsb
cs
cmp
cld
adc
ja
sti
cmp
inc
addr16
pop
movsb
mov
std
call
ds
in
leave
inc
data16
sahf
xchg
pushf
push
jle
cmp
js
xchg
mov
call
mov
addl
cmp
cmpsb
mov
dec
cmp
stos
mov
lea
lcall
mov
nop
pop
mov
push
and
cmp
fldcw
push
test
shrb
repz
insb
and
outsl
mov
mov
test
into
sub
push
mov
cmp
cmpsb
stos
adc
dec
test
clc
mov
cwtl
cmpb
add
out
addr16
test
mov
or
jp
fwait
dec
loopne
fwait
xchg
andb
xor
mov
lcall
call
daa
jnp
xor
mov
jmp
mov
adc
adc
cld
lret
pop
sub
jmp
xchg
mov
mov
and
jmp
enter
xor
mov
outsb
sub
std
mov
mull
push
clc
fcoml
cmp
add
mov
hlt
mov
shl
dec
and
data16
add
add
mov
loop
jge
cmc
icebp
inc
icebp
popfw
adc
pop
int
loopne
aas
aas
fs
movsl
pop
cmp
jmp
and
mov
xchg
cs
or
mov
cmpsl
add
or
movsb
push
stos
adc
jg
fcmovu
jns
and
pusha
mov
fwait
xor
jae
inc
imul
push
pusha
nop
jnp
popl
and
mov
out
add
scas
inc
in
xlat
cmc
xchg
and
loop
mov
cmp
xor
lods
cmp
sbb
sbb
cmpb
and
jb
mov
je
pusha
xor
lcall
xchg
xchg
repnz
jbe
mov
std
mov
loope
jp
imul
ds
hlt
data16
lock
in
cmpsb
mov
dec
mov
jbe
inc
test
add
push
pushf
subb
lahf
xorb
pop
or
xchg
imul
insl
sub
test
mov
mov
xchg
cmp
add
out
xchg
lcall
mov
imul
jnp
push
pop
loop
pusha
mov
mov
mov
pop
xchg
addr16
pop
push
insb
incl
daa
or
xor
sbb
ja
das
js
jp
push
jbe
repnz
imul
mov
jbe
sbbl
jg
jle
mov
xchg
inc
clc
xchg
mov
ds
add
mov
imul
add
mov
stc
lret
rclb
insl
push
fs
inc
push
inc
pushf
cmpsl
xchg
gs
jge
rcrb
push
lmsw
mov
in
insl
inc
push
push
xchg
imul
pop
testb
mov
pop
sbb
jb
mov
and
in
add
mov
add
add
pop
lock
xor
outsb
jl
ficoms
or
push
pop
cmpsb
jbe
sbb
lret
xchg
jo
fwait
lods
lret
jle
pop
movsb
adc
lods
aaa
or
jbe
jo
push
push
movsl
in
inc
mov
cmp
adc
jl
repz
xchg
insb
outsb
or
lcall
arpl
fisubs
jne
push
xlat
and
mov
fldcw
pop
int3
mov
pop
sub
add
xorb
push
xor
mov
mull
in
pop
mov
and
xchg
dec
dec
imul
dec
xchg
xor
cwtl
daa
dec
xchg
mov
push
addr16
int
js
movsb
dec
daa
push
push
cmp
and
fs
fcoml
popf
mov
mov
test
adc
adcb
hlt
rcl
or
pop
loope
cmp
lret
fsubrl
mov
in
xchg
inc
lret
cmc
cmp
xchg
mov
mov
lock
adc
xor
loope
pop
and
jecxz
js
out
loop
xor
mov
hlt
add
shlb
push
scas
stos
pop
add
outsl
dec
or
test
je
cmpsl
js
repnz
xchg
movsb
daa
test
mov
lods
lcall
dec
iret
fwait
je
dec
shrb
jno
sbb
out
inc
iret
hlt
jb
and
rolb
xchg
push
clc
and
dec
mov
or
enter
dec
and
or
imul
pop
push
mov
out
cwtl
pop
push
xchg
cmp
mov
repnz
mov
repnz
in
jecxz
mov
mov
cmp
rcrb
cmp
push
mov
pop
push
cmp
sti
push
dec
aaa
mov
das
mov
das
mov
cmp
stos
lds
inc
and
add
add
sbb
cmp
imul
out
xchg
inc
cmp
notb
cmp
fcoms
ljmp
lods
rcrb
mov
std
or
pusha
mov
adc
jb
xchg
mov
cs
xchg
dec
mov
jge
pop
pushf
inc
jne
test
out
mov
dec
in
xor
inc
cld
add
in
fwait
inc
and
pop
enter
jo
jp
mov
ljmp
outsb
in
inc
mov
mov
scas
scas
cmp
pop
test
cmc
aaa
rcll
inc
adc
jno
int
pop
mov
xor
into
scas
mov
ljmp
aas
xchg
movsb
add
iret
cld
jl
xor
scas
add
testl
mov
push
stos
mov
cld
es
xchg
test
iret
js
in
aam
adc
imull
out
dec
push
push
adc
movsb
cmp
inc
push
jl
outsb
ss
aad
fsubp
dec
rcr
lds
pop
test
movsb
in
jg
pop
shll
or
xchg
sbb
adc
rcll
insl
cmp
cli
or
xchg
add
or
mov
mov
js
bound
cmp
pop
addr16
jp
in
call
add
cmp
mulb
xor
xchg
sub
push
arpl
inc
movsb
inc
popf
pop
stos
addr16
xchg
xchg
adc
add
xchg
mov
loop
pop
mov
mov
hlt
jns
pop
leave
testb
insb
jns
mov
cwtl
cs
or
sub
mov
mov
push
je
aas
jl
mov
push
xor
sahf
addl
inc
pop
lahf
xchg
stc
sub
test
xchg
sbb
jecxz
cmpl
adc
lret
jg
jo
cmpsb
or
jne
xlat
sbb
jle
add
outsl
cmp
jmp
fst
out
add
inc
pusha
inc
mov
sub
std
sub
and
jbe
xchg
imul
mov
shrb
mov
orl
addr16
shll
inc
es
inc
and
imul
sub
lods
sti
pop
push
dec
xor
jne
cmpsl
mov
outsl
js
pop
cli
rclb
ret
mov
inc
rcll
fwait
push
mov
clc
xchg
pusha
cmpsl
mov
push
in
ja
jne
outsb
push
and
add
jae
popf
imul
sbb
pop
scas
mov
or
xor
xlat
je
outsb
cld
mov
ja
sbbl
cmp
or
jb
jo
or
and
repnz
and
das
push
inc
iret
rclb
xchg
nop
addr16
push
jns
push
push
scas
out
and
dec
push
repnz
movsb
jle
mov
enter
push
ds
ljmp
and
out
imul
jns
cmp
sahf
xorb
adcb
repz
sub
inc
lock
sbb
nop
in
adc
lahf
nop
pop
xlat
in
iret
jnp
andb
movsb
je
fcoms
dec
ja
outsb
cmp
lcall
hlt
mov
jbe
pop
and
cmpsl
mov
pop
pop
subb
push
inc
jb
popl
adc
push
movsb
aas
jb
shrl
mov
sbb
xchg
in
add
xor
mov
out
mov
ret
iret
jle
cmpl
outsb
xchg
adc
pop
bound
xchg
aam
rclb
lea
hlt
movsb
pop
push
and
xchg
sbb
push
mov
repnz
test
jbe
mov
cs
xchg
xlat
je
sarl
adc
rolb
dec
ja
mov
cmp
lahf
ret
mov
lods
push
cs
shrb
dec
pusha
pop
imul
call
test
xor
arpl
pop
add
aaa
jne
add
data16
outsb
dec
xorl
out
push
into
clc
stc
xlat
push
jo
pushf
mov
es
lock
xor
outsb
push
fisttpl
add
movl
add
jge
add
js
add
imul
lcall
aad
lret
in
inc
and
aaa
ret
int3
into
inc
cmp
inc
add
jnp
mov
arpl
mov
sbb
loop
stos
adc
dec
push
gs
xor
jg
lcall
testl
jp
stos
mov
add
cwtl
aad
xor
test
lret
cmpsl
nop
xchg
movsb
fs
fstl
shrl
pusha
xchg
fsubrs
dec
roll
out
daa
inc
mov
fildl
sub
push
lret
jl
aad
push
push
adc
fisubrs
mov
out
sahf
fdivp
test
aas
xchg
and
mov
add
pusha
mov
push
stos
lahf
jge
jg
insl
jne
xchg
inc
inc
test
mov
into
or
sub
out
add
mov
sbb
lret
int3
lock
in
adc
adc
mov
xchg
xor
lods
xchg
mul
lods
iret
fidivrs
les
sar
outsb
iret
adc
lcall
out
sahf
cmp
jnp
mov
inc
clc
sahf
leave
movsl
jmp
mov
and
cli
sub
sbb
jbe
repnz
add
push
fsubp
mov
dec
rcl
pop
jp
push
cmpsl
leave
sarb
pmaddwd
inc
jmp
inc
sbb
nop
xlat
das
imul
inc
mov
daa
pop
jb
cmp
sbb
addb
and
fstps
xchg
and
cmpsl
daa
lahf
test
xchg
cmpsl
sub
push
xchg
push
imul
mov
js
cwtl
push
pop
test
jns
cmpsl
mov
cld
xor
cmp
jle
ds
movsl
and
aas
push
mov
sahf
and
cli
test
dec
outsl
int
push
insl
leave
jecxz
jmp
mov
mov
or
insl
sub
je
leave
fs
inc
jg
lods
mov
daa
push
xchg
jge
xlat
test
dec
out
sbb
ret
push
mov
mov
push
fs
lock
mov
jl
js
jne
hlt
xchg
fnstcw
xchg
fbld
mov
sub
pop
stos
test
mov
mov
lret
lods
xor
lahf
mov
pop
lcall
sub
aas
clc
jns
mov
mov
out
inc
shrl
fcoms
add
outsl
push
out
jnp
xchg
or
mov
test
pop
jge
shl
sbb
cmpsb
aaa
in
mov
out
mov
pushf
xchg
ret
or
fdivrl
data16
jecxz
add
pop
jne
push
lea
cmp
dec
into
or
pop
dec
mov
xchg
mov
jp
sbbl
mov
inc
dec
xchg
pop
mov
or
mov
push
mov
test
lret
xor
es
push
sub
cmp
aas
lret
sbb
sbb
push
xlat
adc
jle
leave
mov
es
stos
bound
jl
jo
sbb
fldenv
int3
add
sub
loopne
popf
cwtl
out
jle
fidivrl
stos
sbb
mov
mov
cmc
jl
outsb
inc
mov
or
aam
dec
pop
sbb
outsb
push
xchg
addr16
push
out
inc
mov
loop
cltd
or
and
jo
ss
adcb
and
js
cmp
movsb
mov
pop
in
ret
daa
dec
ja
ss
outsl
movq
add
mov
adcb
xchg
cmc
add
xchg
push
adc
pop
mov
xchg
loopne
pop
into
jo
mov
cmp
mov
cmp
adc
movsb
push
cld
lret
cmpsb
cmpsl
aad
jne
cmp
pop
push
nop
sti
push
stc
dec
xchg
sbb
inc
mov
popa
movsb
ljmp
scas
je
mov
pop
mov
out
push
xor
orb
push
adc
and
pusha
mov
xchg
mov
lds
mov
mov
outsl
mov
xor
jp
inc
les
enter
iret
cli
pop
les
push
cmp
mov
je
iret
insb
mov
push
pop
jmp
je
jnp
adc
or
cmp
iret
mov
call
in
adc
sahf
cmp
push
jle
fucomip
jbe
jns
jge
je
gs
xor
dec
shlb
nop
std
add
int3
popa
xorl
sbb
cmp
jge
mov
and
mov
ficomps
shl
repnz
xchg
mov
adc
inc
lahf
mov
leave
ficoms
sbb
cmpsb
mov
jmp
or
jmp
insb
dec
nop
mov
xor
shl
cltd
fidivrs
mov
inc
dec
pop
mov
adc
xor
bound
inc
mov
push
xchg
out
sub
out
or
cmp
push
les
mov
dec
pop
jmp
adc
jns
orb
stos
sbb
or
xlat
dec
out
add
js
daa
popa
mov
ds
dec
fdivl
or
nop
pushl
mov
or
lods
stc
ja
or
mov
cltd
xchg
lods
jae
sahf
imul
mov
dec
mov
mov
imul
fidivrs
mov
andb
daa
mov
movsb
test
pop
inc
mov
dec
bound
cli
movsb
popa
movsb
inc
inc
push
jge
lock
mov
mov
sbb
pop
dec
loop
into
sbb
idivb
and
cmp
cli
cmp
mov
test
pop
mov
arpl
insb
dec
loop
sub
xchg
mov
pop
add
shrb
adc
and
mov
popa
fldenv
mov
add
into
insl
lds
pusha
and
mulb
adc
shll
test
cmc
testb
or
adc
stc
dec
dec
mov
dec
lea
add
dec
sbb
jmp
filds
lcall
inc
out
and
push
mov
push
fisttps
repnz
inc
cmp
push
out
or
and
jg
add
addr16
xchg
jbe
xor
sub
adc
jns
xchg
inc
mov
mov
ljmp
call
mov
cmc
aam
inc
fdivl
xor
outsb
dec
jg
jp
and
hlt
or
repz
lahf
jle
ds
cmc
xor
add
mov
mov
jb
pop
ja
mov
mov
xchg
in
les
mov
mov
imul
fisubrl
mov
arpl
out
clc
mov
loop
mov
mov
or
das
addl
inc
xchg
pop
fstpt
outsl
leave
mov
les
mov
pop
pop
jmp
jmp
sub
daa
aaa
out
and
cli
push
dec
cmpsl
es
push
icebp
movsl
push
mov
sbb
fisubrl
sbb
push
ljmp
sub
movb
jo
mov
push
and
faddl
movsl
sbb
and
insl
push
jp
test
push
out
jecxz
arpl
adcb
push
es
in
mov
lea
mov
and
push
das
ljmp
xchg
loopne
cld
jle
jb
lock
or
popa
mov
xor
jecxz
test
loope
push
cmp
xchg
and
ss
mov
dec
xor
hlt
out
and
pop
jle
arpl
mov
sub
dec
les
mov
jmp
and
addr16
arpl
inc
int3
loopne
mov
or
movb
add
push
cmpsb
jne
aaa
and
push
mov
or
mov
adc
je
dec
movntps
pop
arpl
lods
cld
xchg
cmpsb
xchg
mov
leave
cmc
cmp
loope
or
outsl
in
stos
xor
or
cmp
aad
cs
sub
icebp
pop
sub
add
sub
dec
mov
xor
into
inc
jne
scas
cmp
and
sub
xor
dec
cmp
es
or
ret
or
or
jb
push
dec
xor
xchg
jg
jb
daa
mov
dec
std
cmpsb
addr16
leave
int3
inc
jns
add
mov
inc
inc
imull
push
push
pop
pop
out
or
pop
stos
jp
push
andb
lahf
enter
push
xchg
stos
sbb
add
add
mov
repnz
adc
hlt
lret
jbe
xchg
imul
repnz
das
and
jb,pn
leave
pop
mov
in
add
insb
aaa
clc
aad
lret
mov
stc
xchg
pusha
or
filds
adc
xor
and
das
std
ffreep
cmp
adc
cmc
sub
jo
fsubp
out
xchg
inc
adc
loopne
jp
mov
roll
test
fwait
addr16
movsl
cmpl
aas
mov
pop
nop
orl
xchg
aaa
sub
movsl
sub
int
rolb
mov
mov
xchg
jl
mov
and
lea
lock
sub
add
jg,pt
mov
sub
or
out
stos
outsb
loopne
and
push
lods
adcb
push
inc
scas
roll
inc
push
movsb
lods
dec
inc
cmp
xchg
push
adc
mov
call
add
push
inc
xchg
insb
push
imul
xor
into
sub
and
sbb
cmp
jl
repnz
nop
je
cmp
adc
ljmp
mov
push
push
add
jmp
mov
js
scas
lahf
in
leave
cmpsb
fildll
push
int3
out
xchg
jg
shlb
push
or
pop
ret
dec
or
mov
scas
or
xchg
aaa
aad
je
lret
mov
sbbl
jbe
xchg
subl
adc
into
shlb
dec
fwait
and
ret
aas
pop
aas
mov
daa
inc
ljmp
or
mov
repnz
loop
int3
rolb
movsl
pop
test
dec
repnz
jbe
cmp
xchg
add
lea
adc
lret
add
xchg
inc
and
ljmp
mov
push
imul
jne
test
add
mov
mov
sbb
daa
xchg
and
int3
fwait
in
and
es
dec
lods
popw
add
fdivr
lods
mov
cmp
pop
sub
jmp
sbb
pop
pop
out
hlt
xchg
adc
sub
cmpsb
xchg
sub
cmpsb
sbb
dec
jl
or
sbb
push
push
hlt
and
pop
mov
push
in
stos
dec
pop
mov
jge
adc
pop
add
and
leave
mov
jge
bound
pop
imul
mov
jno
pop
outsl
pop
adc
push
lea
scas
adc
xchg
mov
mov
lods
loopne
call
jle
dec
dec
flds
and
lret
lea
cli
sbb
jge
cmpsb
sub
xchg
inc
xor
adc
adc
aaa
push
mov
xchg
test
pop
sub
add
jo
pusha
pmaxsw
ja
nop
pop
js
enter
enter
int
mov
movb
add
js
mov
pop
std
pop
orb
push
dec
negl
les
repnz
sub
mov
mov
int3
clc
jp
cmpsl
xchg
mov
sar
push
jmp
or
sbb
adc
add
mov
jbe
or
mov
lods
push
add
fsubrs
movsl
jle
mov
shr
add
mov
xchg
pop
sti
push
dec
loope
mov
and
popa
lods
adc
pop
arpl
lcall
or
loop
or
imul
aam
fcomip
and
test
adc
or
aad
stc
xchg
mov
sti
jge
pop
orl
aad
dec
sbb
mov
outsb
pop
mov
inc
orb
add
cmp
add
add
push
xorb
gs
cmp
insb
cmpsb
cwtl
call
sbb
pusha
mov
rol
daa
mov
add
push
popa
divb
adc
cmpsl
in
js
pushf
pop
scas
int3
iret
xor
adc
out
jmp
das
das
repz
fwait
adcl
scas
pop
shll
popa
insb
push
lcall
prefetch
sub
int3
js
push
dec
dec
jge
push
loop
gs
shr
adcl
adc
mov
and
jo
andb
out
inc
jmp
inc
add
mov
repz
adc
testb
sub
int3
out
repnz
sbbl
pop
xchg
sti
enter
add
movsb
fisubrs
pop
fs
mov
mov
sub
mov
cmc
clc
les
xchg
daa
xchg
loop
push
mov
gs
inc
inc
dec
stos
sub
outsb
addr16
addb
jns
aad
jb
xchg
push
cmpsb
sbb
or
cmp
mov
test
cmp
sbb
lods
test
ja
mov
stos
add
loop
push
jb
jno
hlt
mov
add
lock
xor
push
stos
ret
fiadds
xor
mov
shl
jge
rolb
push
fidivs
push
xor
mov
xchg
xor
orb
push
ljmp
stos
xchg
and
in
subb
outsb
jb
push
mov
imulb
int
or
test
mov
fs
test
ficoms
notl
aam
ficoml
mov
cmc
and
mov
mov
adc
ret
cmp
sub
jmp
cld
push
or
stos
das
testl
mov
std
lcall
mov
pop
sbb
fs
push
loop
or
cwtl
movl
xor
cmpsl
jl,pn
inc
mov
sub
jge
aaa
fidivs
jp
pusha
andl
and
ja
test
xchg
std
sahf
mov
std
xchg
stos
push
jecxz
movsb
or
aam
add
sti
mov
mov
mov
ror
sub
and
mov
mov
es
mov
sbb
adc
sbb
ss
mov
fidivrs
icebp
or
lods
aaa
cmp
cmp
inc
inc
lds
les
or
out
pusha
inc
popf
ja
out
pushf
pushl
inc
fadds
addl
adc
in
or
pop
movsb
pop
jmp
mov
xor
cmp
adc
or
fdivp
in
cmp
mov
mov
ret
xchg
inc
ret
pusha
lock
jo
pop
lock
xor
adc
mov
fwait
movsl
push
pop
cmp
sbb
pusha
lods
adc
aas
dec
arpl
in
jne
movsb
jl
add
dec
and
push
repz
flds
into
lock
mov
cmp
cmp
mov
fs
lret
outsb
xor
sub
sbb
movsb
outsb
iret
aam
pop
mov
adc
out
or
jne
cmp
sub
aam
pop
incl
cmp
into
arpl
sarl
jle
sub
sub
scas
adc
jnp
ss
and
ret
stos
mov
sti
movsl
pop
incb
lea
movsl
sarl
mov
mov
lret
cld
or
ljmp
xor
ret
inc
repz
jnp
addr16
movsb
stc
loopne
sbb
pop
xchg
mov
add
and
push
inc
jp
mov
push
out
cli
or
xchg
mov
add
sub
sbb
pop
aas
and
ss
movsb
call
ja
nop
cmp
xchg
cltd
sti
cmc
push
popa
fs
movsl
or
lods
pop
sar
ja
rorb
lods
fstp
sbb
out
aad
push
inc
fwait
mov
dec
stos
mov
pop
dec
jle
callw
dec
imul
popf
addps
adc
shlb
addl
loop
imul
stos
mov
negb
ficompl
mov
pop
dec
shlb
insb
or
mov
fisubs
adc
sub
test
sti
adc
out
mov
es
fstpl
std
call
mov
mov
rorl
adc
lret
xor
dec
pop
es
jge
fucomp
xchg
imul
jno
subb
pop
pop
xchg
pop
nop
adc
popf
jo
and
cmpsl
fsts
outsb
push
fdivp
movsb
and
or
cmp
or
repnz
aad
adc
jno
clc
dec
sub
pop
sbb
loope
xor
fstl
aas
fdivrs
jl
inc
jle
int3
lods
and
sub
adc
xlat
loope
les
jb
cmp
les
cmpsb
mov
ja
lock
arpl
ret
xchg
fcomps
sub
push
adc
sub
test
mov
clc
dec
leave
and
test
dec
fwait
aad
popa
adc
mov
push
lds
or
push
push
int
dec
ljmp
mov
in
lods
pop
mov
cmp
mov
adcl
mov
dec
inc
idivl
js
mov
rcrl
add
add
cmc
stos
fwait
sub
pop
mov
xchg
rclb
popa
xor
pop
in
out
or
js
test
adc
jnp
insb
icebp
jnp
dec
test
test
or
std
cmp
jno
outsl
sbb
mov
leave
jo
dec
push
jp
scas
stos
mov
rol
test
movsl
aas
xchg
test
sar
idivb
insb
xor
ds
add
and
inc
xor
fstps
mov
repz
inc
mov
jge
bsf
adc
test
insl
shl
mov
adc
inc
pusha
aas
cwtl
movsl
rorb
push
rclb
sahf
les
mov
test
or
mov
jb
pop
out
mov
pop
adc
inc
shll
add
int
pop
push
pop
xor
mull
mov
xor
mov
sub
outsl
sub
cmc
jmp
push
test
mov
cmp
notl
clc
lret
adc
cmp
mulb
stos
cmp
out
adc
cmpsl
inc
mov
pop
xor
int3
xchg
ljmp
jo
mov
jnp
std
pushf
xor
jge
stc
loope
xchg
adc
pop
lret
jo
les
inc
lock
xlat
into
jmp
cmc
dec
or
sub
push
mov
mov
cmp
adc
mov
inc
xchg
mov
jo
sahf
xchg
mov
add
popf
arpl
mov
sub
jp
mov
sti
cmp
aad
xchg
fwait
es
mov
std
loopne
je
lret
pop
xchg
dec
daa
mov
cwtl
ret
mov
xorb
xorb
mov
pop
outsl
mov
mov
dec
arpl
imul
iret
rclb
insb
in
aas
popf
out
xchg
xor
daa
stos
scas
inc
mov
jae
xchg
cs
inc
mov
add
movsl
xchg
lea
fistpl
scas
xchg
xchg
aaa
lods
fcoml
fldt
mov
cmp
xchg
fsts
divb
aaa
leave
dec
push
int
sahf
add
adc
xchg
sbb
sub
shr
arpl
ret
insb
das
push
vcvtps2dq
mov
add
push
cmp
sub
fwait
pop
pop
push
inc
mov
push
cmp
test
push
mov
dec
out
and
or
xor
dec
inc
xor
pop
sbb
dec
add
cwtl
push
cmp
lcall
dec
out
pop
fadds
insb
xchg
mov
push
and
add
addb
imul
xor
mov
xchg
jg
fwait
cltd
add
pop
jb
xchg
push
mov
mov
jl
inc
dec
pop
dec
shlb
js
lret
or
sti
gs
or
mov
push
lds
sti
aaa
cmp
out
pop
push
cli
dec
sub
and
imul
mov
and
add
shll
xor
stc
inc
xor
xchg
dec
xor
outsl
push
pop
pop
xor
jmp
cmpl
cmp
or
enter
add
or
fsubrp
mov
popf
xor
sbb
cmpsb
push
mov
dec
jno
imul
movsb
sub
push
enter
pop
inc
pop
rorb
arpl
pop
add
cmp
xchg
rcrl
sub
xor
mov
pushf
sarl
aad
outsl
es
push
mov
mov
mov
sub
jne
jge
pop
xor
loopne
pop
test
jbe
add
add
pop
loop
cltd
jmp
mov
xchg
inc
adc
inc
sub
xor
pop
shll
imul
insl
hlt
icebp
repnz
mov
jbe
sbb
mov
out
add
inc
mov
fisubs
int
xchg
ret
fs
cmp
iret
arpl
ret
mov
push
jp
adc
cld
or
xor
std
mov
jno
xchg
mov
cld
nop
imul
loop
movsb
jecxz
mov
mov
scas
fsubrl
sbb
insb
lock
push
sub
adc
xchg
xlat
ret
adc
pop
rcpps
and
cmc
xor
adc
cmp
addl
aaa
mov
cmpsb
xchg
pop
lods
mov
enter
loop
and
cmc
pop
push
mov
mov
jp
clc
aam
xor
bound
fisubl
cmpsb
fnstenv
inc
cmpb
jecxz
sub
dec
inc
js
pop
dec
sbb
call
jbe
and
popa
dec
mulb
mov
pop
das
mov
pusha
imul
pop
dec
xor
repz
movsb
daa
rcr
push
push
rclb
push
sti
mov
xchg
pop
js
jmp
ja
sub
inc
pop
andb
mov
sti
lea
popa
fcoml
push
push
mov
pop
inc
sbb
call
sti
mov
int3
gs
mov
outsb
in
lods
repnz
and
cs
add
imul
es
je
insb
sbb
inc
movsb
sbb
adc
pop
mov
mov
and
aaa
pop
push
mov
addr16
mov
in
dec
sub
repz
bound
xor
push
mov
mov
mov
add
push
cmpsb
insb
mov
inc
pop
sub
cmpsb
outsb
cmp
adc
repz
cld
lods
inc
ret
mov
filds
stos
mov
push
std
outsb
and
dec
add
xchg
pop
cmp
push
mov
ja
mov
jmp
fistpll
jle
jb
xchg
mov
and
mov
xor
out
or
cmc
pop
jae
daa
push
stos
stos
hlt
pusha
mov
sub
cwtl
hlt
lret
mov
xchg
dec
jmp
enter
iret
jmp
add
xor
cmpsl
mov
push
lods
cmpb
xor
iret
jp
out
jbe
or
mov
out
push
ljmp
lret
dec
push
lret
inc
repz
stos
movsb
mov
jge
insb
fstpt
or
scas
mov
sub
fnstsw
repz
add
ret
jg
xchg
sbbb
nop
push
xchg
mov
dec
nop
repz
sub
adc
lock
lret
lret
push
xchg
nop
pop
pop
in
incl
lahf
incb
loope
stc
sahf
mov
mov
mov
and
mov
out
or
fxch
sahf
xchg
in
pusha
mov
pop
lahf
or
xchg
mov
fbstp
or
fistps
jge
jb
shl
subl
pop
xlat
dec
pop
mov
les
dec
sub
inc
push
sbb
fwait
xchg
test
mov
pop
int3
xorl
mov
in
pusha
mov
mov
pushf
mov
jnp
cmp
dec
in
rolb
mov
mov
icebp
pop
pop
pop
daa
add
leave
jnp
mull
push
cwtl
cld
pop
jbe
push
jecxz
iret
inc
shlb
fs
adc
xchg
pop
mov
inc
sbb
fbld
mov
add
pop
aas
hlt
or
pop
add
mov
popf
hlt
adc
in
sbb
movsl
loopne
xchg
add
add
add
loop
lea
cmp
mov
and
push
sub
enter
cmp
ds
pop
cmp
jno
subb
scas
ss
int3
mov
rorl
xchg
repz
in
xchg
mov
or
xchg
scas
mov
mov
push
decl
icebp
cld
adc
sti
sub
jnp
pop
into
jbe
cmpb
inc
hlt
mov
jne
test
imul
shlb
mov
or
mov
inc
xorb
xchg
imul
out
push
lock
sti
ss
mov
jns
mov
push
es
pop
adc
movsl
pop
mov
add
pop
subb
push
xchg
ja
hlt
outsb
out
and
rolb
int3
push
hlt
add
pop
insl
mov
insb
loop
lds
bound
cmp
gs
jb
cmp
test
jnp
mov
pop
call
mov
clc
push
jne
test
dec
in
mov
inc
sub
sbb
ret
mov
aas
push
inc
cmc
insb
add
xor
push
mov
mov
push
sub
push
cmp
lods
jge
mov
pop
lcall
xlat
pop
mov
mov
add
mov
test
inc
mov
lods
out
lds
mov
sbb
xor
xor
arpl
dec
lret
xchg
das
xchg
mov
lock
rsqrtps
fisttpl
jno
add
mov
fistps
data16
push
xchg
pusha
test
js
pop
adc
cltd
xchg
jns
xlat
mov
add
jle
in
sbb
mov
cld
out
or
sbb
faddp
jg
pop
jp
js
leave
jnp
mov
or
add
add
divb
pushf
aaa
inc
xchg
daa
outsb
sub
or
cmc
mov
loope
lcall
and
jg
mov
jb
mov
ljmp
xor
shl
dec
lock
outsb
int3
push
stos
hlt
test
xor
pushf
xor
add
mov
lret
aas
xor
or
shlb
xchg
or
xchg
lods
cmp
cmp
outsb
lea
ret
repnz
mov
pop
fnstenv
mulb
sbb
fisubrs
dec
fcomps
mov
in
sub
cmpsb
jne
pop
xchg
out
daa
aad
inc
or
leave
push
into
sbb
js
test
sbb
addl
xor
jp
push
dec
imul
mov
pop
add
dec
xlat
jle
repnz
data16
dec
mov
and
dec
mov
mov
jge
xchg
sub
cs
aad
mov
mov
ja
orl
pop
sub
inc
and
mov
fisubrl
test
dec
dec
sbbb
add
push
in
out
mov
pop
sahf
outsl
add
hlt
out
and
das
sbb
jecxz
cmp
and
daa
xor
aaa
loop
mov
mov
push
pop
add
adc
fs
jns
or
ss
inc
repnz
inc
das
push
ja
mov
and
test
or
adc
movsb
push
cmp
pop
cmp
push
push
das
testl
mov
mov
out
sbb
add
test
mov
xchg
fs
stos
icebp
ss
sbb
repnz
mov
mov
sub
les
mov
and
push
cmp
popa
jae
sub
add
add
xchg
je
int
rcl
sbb
xchg
ss
decl
pop
mov
scas
push
mov
cmp
int
dec
incb
sbb
out
cmc
sbb
shl
ljmp
stc
iret
sahf
imull
push
sub
mov
cmp
adc
roll
dec
pusha
ja
scas
leave
or
outsl
pop
faddl
xchg
add
mov
or
mov
sub
sub
pop
notb
gs
daa
mov
add
mov
cli
in
leave
adc
xlat
mov
mov
jnp
lcall
or
imul
aas
rcrb
rol
out
and
push
add
ja
dec
inc
jg
adc
movsb
push
les
iret
pop
cli
into
fwait
and
xor
lds
sub
jmp
aaa
subl
push
iret
out
dec
push
gs
pop
mov
push
std
adc
or
mov
imul
ret
jp
cmp
clc
outsl
cmpb
lods
fisttps
inc
pop
aaa
lds
xor
mov
xchg
mov
mov
loopne
fs
insl
mov
mov
pop
adc
push
xchg
adc
lahf
or
sub
xor
mov
imul
xchg
push
xchg
and
dec
loopne
shlb
int
loope
mov
jbe
les
pushw
fcmovb
xor
fldcw
pop
fiadds
sub
dec
mov
into
push
cmpsl
lea
adc
fldenv
enter
adc
pop
cld
cmpsb
add
sbb
mov
mov
and
cmp
or
inc
mov
rcr
mov
mov
imul
leave
jb
cld
invd
jb
or
mov
into
xlat
pusha
test
movsb
mov
call
mov
divb
cmp
add
add
lcall
nop
mov
xchg
mov
cmp
out
mov
jnp
stos
es
fucomp
pop
movsb
cmp
insb
push
cmpsl
mov
cmc
lock
mov
mov
jae
repz
lret
punpckhdq
lret
divl
pop
xchg
mov
ljmp
cltd
push
jae
lock
ret
xlat
cmpsl
and
ficompl
loop
fstp
ds
lret
mov
insl
cwtl
xchg
xor
mov
ja
xor
cmp
hlt
data16
std
fisttps
ficoml
or
push
cmp
jno
incb
cmpl
hlt
or
les
shrl
sbb
in
xlat
rcrb
ficoml
pop
mov
out
xchg
ret
inc
imul
ficomps
jbe
in
je
xor
mov
pop
adc
aas
sub
test
xor
cmp
mov
fadds
pop
lods
stos
adc
mov
pop
mov
jp
xchg
or
popf
scas
pop
dec
call
sub
rolb
rcrl
jge
mov
jnp
jne
cmc
movsl
imul
sti
add
test
inc
das
orl
jno
or
out
mov
out
push
lcall
fsubrp
adc
lret
xchg
cmpxchg
mov
xchg
mov
stc
outsb
mov
pop
push
xor
outsl
aad
bound
xchg
push
inc
xor
xchg
sahf
ss
push
cmp
inc
outsl
xchg
cmpsb
mov
mov
movb
scas
out
cmp
sbb
cmp
cmp
in
fcmove
stos
insl
push
cmp
test
jb
jno
daa
xchg
mov
jge
scas
inc
lea
xchg
in
push
xchg
out
scas
ljmp
xchg
xchg
out
mov
or
lock
int3
adc
jne
fucomi
pop
fwait
push
pop
loopne
idivb
sub
pop
dec
in
dec
inc
mov
aas
out
aaa
and
push
out
mov
xlat
jns
mov
lods
hlt
mov
xlat
sbb
mov
iret
mov
xor
xor
cs
aad
inc
call
data16
jle
mov
jmp
imul
dec
add
test
test
push
int3
adc
lods
incb
mov
cld
rcrl
cwtl
push
cmp
mov
scas
imul
dec
inc
push
inc
out
movsl
mov
pop
test
sarb
inc
jnp
in
addr16
mov
shll
mov
ret
mov
cmp
imul
inc
lret
jo
push
roll
sub
out
movsl
jecxz
push
cmp
mov
push
mov
add
and
mov
xchg
xchg
popa
out
sub
inc
rcrb
daa
sub
sti
add
push
add
sub
idivl
sbb
cli
mov
sbb
or
loop
loope
adc
minps
daa
loope
imul
adc
push
call
fists
outsb
ret
push
iret
xor
xlat
jmp
mov
popa
sbb
je
pop
mov
push
test
cltd
aaa
int3
je
pop
ret
inc
out
cmp
sbb
outsb
icebp
into
adc
lret
in
jle
out
xor
sub
and
cmc
adc
icebp
lcall
call
pusha
sbb
jae
outsl
je
inc
iret
cmp
dec
and
decb
sarb
ljmp
loop
or
mov
inc
add
je
ficoms
mov
mov
inc
test
push
push
repnz
lea
xor
mov
sub
iret
lds
mov
mov
xor
adc
push
adc
cmp
jmp
arpl
jl
push
in
push
sub
test
sti
xor
sub
mov
in
loop
sbb
push
lock
cmpl
fstpt
and
je
data16
xchg
pusha
std
insl
pop
aam
inc
mov
fbld
pop
push
pop
inc
mov
ficomps
enter
and
mov
cmp
xorps
dec
push
setne
mov
in
aad
mulb
and
sbb
sub
arpl
xor
push
popf
outsl
imul
dec
or
push
jbe
xchg
inc
and
push
xor
jns
pop
or
push
repnz
xchg
mov
imul
lcall
mov
jl
xor
rcrl
addr16
push
add
cmp
jecxz
or
sbb
cmc
into
and
push
xor
push
pop
ret
repz
sub
shlb
inc
mov
adc
inc
jae
add
mov
xlat
andl
mov
and
xchg
or
pop
pop
adcb
addps
jmp
imulb
shrl
or
lcall
in
xor
mov
int
cltd
shl
pop
lock
mov
enter
jmp
popa
mov
mov
xchg
addr16
push
push
mov
sti
mov
jge
mov
jp
mov
mov
jnp
pop
or
xor
sub
repz
push
int
adc
dec
xchg
lcall
xor
std
je
pop
leave
push
lds
fwait
and
add
add
and
testl
shl
shl
jl
xor
inc
test
outsb
dec
stos
hlt
fdivrl
subl
mov
inc
inc
and
insl
jg
inc
push
adc
jmp
jo
pushf
loopne
mov
xchg
clc
mov
enter
fildll
cmp
sbb
dec
bnd
cmp
ja
pop
bound
dec
mov
popf
lds
jmp
push
hlt
push
mov
into
dec
xchg
xchg
mov
cmp
es
and
lahf
mov
cmpl
mov
mov
out
and
and
inc
dec
jno
loopne
inc
push
sbb
adc
sub
pusha
lcall
pop
fwait
mov
mov
sti
aam
int3
cmpsl
and
mov
lret
cmpsb
cmp
and
xchg
sbb
int
pop
push
andb
jb
or
aaa
jne
fcompl
mov
test
dec
jo
and
pop
push
mov
jl
mov
push
dec
ret
rol
or
imul
cmpl
push
jle
popf
je
mov
pusha
dec
data16
xchg
jns
jns
mov
mov
push
cltd
mov
inc
adc
push
lea
cmpsb
mov
das
in
into
mov
ss
and
xchg
test
or
popa
sbb
cld
sarl
divl
jnp
dec
sti
mov
jp
and
ret
je
les
jne
pusha
xlat
int
mov
adc
insl
aad
movsb
mov
gs
mov
adc
jne
xchg
test
call
xchg
imul
in
ljmp
jne
mov
insb
mov
add
aaa
jae
mov
xchg
rorb
sbb
lock
adc
mov
mov
out
pop
jecxz
pop
vpor
xor
push
inc
or
js
sub
or
or
insl
mov
mov
and
adc
lods
xor
mov
add
call
cmp
scas
inc
out
and
add
xchg
or
subl
mov
outsl
insb
add
insl
xchg
mov
dec
push
xchg
mov
add
pop
xor
sahf
fsubrp
adc
and
data16
pop
cmp
daa
adc
out
lods
pop
and
sbb
pop
and
dec
sub
xor
addb
jl
into
and
aad
fildl
mov
pop
mov
and
sbb
test
push
ret
sbb
fmul
lret
aad
inc
sub
add
adc
pop
leave
pop
push
test
xor
dec
fistpl
lahf
adc
inc
mov
mov
sub
xor
sarb
movsl
push
outsl
jmp
sbb
fsts
cli
lahf
in
addl
jns
mov
daa
pop
js
lods
popa
sbb
rolb
push
shlb
cld
mov
mov
cmc
into
bound
push
mov
and
insb
arpl
aas
adc
or
and
jo
adc
frstor
mov
loopne
repz
adc
arpl
xchg
jno
shl
loop
cmp
aaa
sub
mov
adc
mov
dec
jo
pop
mov
add
and
fs
repnz
hlt
in
xor
vpaddw
outsb
mov
mov
jle
lret
roll
and
mov
scas
mov
ljmp
pop
or
sbb
sbb
clc
sbb
dec
xchg
jge
lahf
add
adc
inc
pop
fistpl
mov
hlt
roll
mov
push
nop
push
add
bound
add
dec
sahf
stos
ficoms
out
out
negb
xor
push
mov
aaa
cltd
mov
pop
jae
add
addr16
sub
js
push
mov
mov
negb
push
push
sarb
aas
adc
add
or
jno
xchg
and
cmc
test
sti
movl
cmp
jno
gs
push
xor
cwtl
in
test
add
xor
push
jmp
mov
sbb
sbb
dec
and
inc
idivl
daa
and
mov
adc
fildl
and
or
xor
outsl
push
push
mov
jle
xor
jnp
push
jl
cmp
push
and
jnp
test
jp
add
sub
bound
xchg
pop
sar
dec
mov
adc
adc
adc
jmp
push
arpl
outsb
push
scas
lock
aas
push
dec
add
inc
jl
out
je
mov
pop
adc
cmc
mov
gs
jl
pop
push
daa
clc
outsl
mov
lret
sbb
divb
mov
xor
sub
movsl
cmp
hlt
sub
add
lahf
sbb
and
cmp
mov
xor
ds
aaa
jmp
dec
xor
mov
mov
pop
pusha
push
in
mov
xchg
mov
and
test
fstl
cs
stos
arpl
in
xchg
pop
aaa
lret
lock
add
lret
mov
and
xor
mov
jae
insb
push
mov
mov
loop
and
add
push
jb
cld
stos
sbb
jg
mov
add
mull
lea
mov
mov
dec
inc
hlt
jl
shlb
movsl
pop
dec
inc
je
cli
xchg
repz
mov
adc
in
test
dec
add
outsb
adc
inc
sahf
xchg
jno
jmp
lahf
iret
dec
mov
inc
and
mov
fneni(8087
mov
cmp
sti
dec
add
rclb
ficoml
sbb
inc
fsubrs
push
mov
and
icebp
mov
mov
movsl
sti
pop
cmpb
imul
jg
push
xor
mov
xchg
mov
xchg
and
es
sahf
in
insb
mov
mull
dec
rcll
xchg
xor
xchg
dec
ljmp
jg
enter
addr16
std
dec
jnp
dec
and
xchg
inc
mov
xchg
fstl
aad
shlb
loopne
inc
icebp
bound
inc
mov
inc
cmc
mov
push
push
mov
inc
js
imul
mov
jne
xchg
fiadds
lock
adc
cmp
out
dec
js
aad
addr16
repz
or
or
jo
jp
es
dec
testl
dec
add
or
xchg
xlat
les
sbb
js
aam
mov
rcl
lock
jl
mov
jne
inc
mov
scas
cmp
xchg
movsl
adc
aaa
jmp
add
daa
stos
arpl
and
lock
fs
add
sub
mov
rorl
int3
scas
out
and
repz
aas
xor
adc
dec
cmp
adc
cmc
jge
push
popfw
cmp
mov
or
xchg
rolb
sub
lods
stc
add
pop
fcoml
push
stc
mov
popf
add
sub
sahf
in
loop
inc
es
aam
pop
adc
mov
sbb
mov
add
lcall
cmp
repnz
repz
and
pusha
sub
movsl
ret
repnz
sub
lods
fscale
ret
push
cmp
xchg
test
fnstsw
rcrl
mov
ret
pop
dec
xor
xchg
mov
lock
pop
mov
mov
call
movsl
mov
xchg
into
push
addr16
jb
xor
dec
mov
pop
dec
xchg
add
in
jle
test
fsubs
dec
jge
push
pop
out
inc
xchg
or
cmpsl
lcall
jmp
ret
dec
fisubrs
push
pop
imul
push
dec
xchg
test
inc
orb
add
es
mov
jns
insl
sti
movsl
ret
ret
dec
mov
sub
popf
xchg
je
stos
lods
mov
xor
addb
mov
jbe
outsb
aaa
add
pusha
outsl
inc
fistpl
and
push
test
jge
iret
mov
bound
mov
std
stos
dec
dec
add
or
pop
mov
cld
rorl
or
enter
mov
add
ficompl
sub
mov
mov
movsl
fs
in
mov
mov
imul
sarl
pop
mov
push
push
cmpsb
int
add
fwait
insb
insb
push
pop
mov
repz
mov
cs
push
lret
je
pop
fsts
inc
adc
inc
inc
andb
push
push
cmp
adc
push
push
out
cmp
mov
in
sti
sbb
cs
mov
jmp
add
sbb
fbld
jb
imul
jno
cmp
sbb
in
rorb
lret
sbb
lea
int3
mov
mov
dec
sar
and
add
gs
push
imul
xlat
push
or
test
scas
cmp
iret
sbb
add
add
mov
into
mov
outsl
xor
mov
xchg
or
mov
adc
add
addr16
add
xchg
loopne
fsubp
push
push
dec
decl
dec
movsb
test
sbb
pop
sbbl
and
sbb
jmp
xchg
pop
cmp
scas
out
mov
cmp
mov
lret
xchg
fildll
push
rcr
in
loop
cmp
jmp
add
cli
inc
pop
enter
sub
push
and
and
sub
addr16
jb
pop
fcomps
das
ds
movl
leave
mov
inc
sub
stos
test
test
push
adc
cmpsb
push
rorl
jnp
decb
mov
cmp
mov
cmpsl
gs
jg
xchg
xchg
lods
lds
sbb
pop
or
scas
cs
out
push
xchg
add
add
jge
movsb
ljmp
out
sti
jns
lods
xor
mov
push
jb
repnz
mov
xchg
or
imul
jg
pop
jl
inc
or
mov
mov
mov
ds
xor
test
das
and
test
xor
fistpl
pusha
cli
mov
add
pusha
push
ret
cmpsl
cli
addb
sbb
sbb
add
dec
xor
lods
push
mov
mov
mov
add
sub
inc
mov
push
jno
sub
lret
add
push
xchg
xchg
cltd
hlt
mov
subb
sahf
mov
adc
add
mov
addl
xor
push
andb
shld
ja
xchg
push
inc
movsb
call
mov
push
rclb
xor
push
sti
fstpl
push
or
je
imul
mov
adc
adc
push
mov
cwtl
xor
ficompl
xchg
mov
mov
pop
jae
xchg
cs
dec
sarb
mov
outsl
mov
fdivrs
pop
mov
xchg
xchg
stos
jmp
add
mov
movsl
jecxz
popa
dec
jg
cmc
mov
cmpsb
xor
mov
mov
mov
mov
iret
push
bound
add
stos
cmpsb
lcall
outsb
call
or
out
sub
repnz
xchg
pop
and
inc
and
shl
mov
mov
sbb
fisttpll
clc
xchg
push
dec
or
mov
xor
mov
in
xchg
je
imul
jb
jns
adc
xchg
divb
jmp
adc
ret
lds
movsb
rcrl
fistps
in
and
xor
jns
push
out
push
or
mov
inc
ds
repnz
xchg
inc
push
xchg
lahf
je
mov
and
insl
push
pop
imul
aad
aas
mov
stos
cmp
fstp
jge
arpl
mov
aaa
mov
sbb
xor
lcall
ja
xor
pop
inc
popa
xor
jp
aaa
xchg
xchg
add
shll
scas
mov
jo
inc
jl
pop
mov
pop
sbb
cld
enter
sbb
mov
or
or
push
ret
aad
jp
lea
loopne
xchg
pop
jb
shll
inc
stos
hlt
jmp
xchg
stc
test
rcll
jmp
int
sbb
pushf
jo
leave
add
xor
xchg
iret
insl
sbb
cmp
xor
nop
mov
or
add
jp
cmp
xchg
bnd
lock
negb
xchg
int3
jle
xor
ss
dec
add
jnp
pushf
xlat
in
add
into
jbe
add
or
out
movsb
xor
adc
push
rcrb
adc
out
xor
xchg
bound
cld
sbb
pop
ja
xor
pop
pop
test
mov
and
sbb
push
in
hlt
lahf
in
adc
addl
std
ds
push
or
mov
movsl
es
cmp
adc
pop
cld
sar
lock
xchg
sbb
xor
sbb
sarl
call
adc
outsb
push
lcall
push
enter
and
pop
dec
jbe
cli
cmp
aaa
rolb
xor
idivb
das
and
test
dec
insb
int
jnp
sbb
and
fs
jle
mov
dec
sbb
test
clc
sub
mov
imul
imul
jno
add
std
test
out
jle
or
daa
pushf
xor
aaa
inc
lahf
outsb
sub
call
sbb
bound
sti
adc
scas
push
sbb
pop
lcall
or
and
fimuls
sbb
push
fnstcw
mov
jp
adc
fldenv
std
jl
xor
out
inc
das
fnstsw
ss
imul
push
loopne
dec
add
xchg
mov
rol
sbb
pop
dec
es
mov
test
add
jae
test
xchg
aaa
pop
imul
out
repz
jg
shl
or
inc
inc
aam
sti
out
pop
iret
ljmp
dec
dec
sub
inc
lea
xor
push
fs
int
inc
outsb
mov
inc
movsb
cmp
xchg
int
movsb
ss
or
mov
fs
push
push
push
or
hlt
lret
jmp
inc
divl
xchg
hlt
cmp
pop
xor
add
add
cmp
pop
or
dec
inc
dec
es
dec
cli
cs
imulb
jbe
adc
int
cmp
aas
add
arpl
fdivs
jae
add
bound
or
jbe
jl
xor
mov
cmpsb
stos
aad
pop
and
sarl
fcompl
enter
insb
mov
fisubrl
dec
std
movsl
inc
push
mov
jl
divl
cmpxchg
mov
dec
mov
pop
cltd
ja
xor
cmp
and
hlt
jg
add
stos
lret
xchg
idivb
xchg
add
je
loope
and
push
and
arpl
jl
push
and
pop
fisubrs
cwtd
popf
pop
stos
pop
ljmp
repnz
and
rorb
outsb
xlat
mov
inc
inc
add
mov
sarl
rolb
mov
nop
xchg
fistl
or
dec
add
xchg
cmpsl
xlat
lret
test
xor
cmp
testb
sbb
rclb
repnz
test
lcall
pop
xor
cmpsb
xor
arpl
test
in
sbb
cmp
jp
repnz
mov
das
pop
popl
mov
stc
pushf
xor
lcall
jl
sub
testl
mov
jbe
out
jecxz
lret
retw
arpl
lret
jnp
daa
ja
dec
adc
cld
leave
inc
imul
ja
or
cli
sub
lahf
or
out
add
xor
mov
jecxz
fwait
inc
cmc
pop
sti
cs
pop
sub
pop
jb
fldl
xchg
xor
mov
and
inc
mov
adc
fisubrl
or
int
es
push
adc
dec
lret
int
lods
movsb
xorl
dec
jb
lds
add
add
lds
inc
cmpsl
sub
adc
xor
sub
push
or
xorb
aas
and
mov
sbb
mov
ds
out
icebp
nop
xor
out
mov
xchg
bound
pop
je
jbe
and
xlat
adc
mov
test
xor
cmp
mov
andl
daa
push
inc
out
or
cmp
cli
dec
and
add
mov
xor
jno
pop
dec
out
out
cmpsl
es
out
xchg
aas
stos
loope
mov
add
lods
or
pop
sub
inc
loop
add
jnp
lret
rorl
out
fidivrs
das
sahf
aad
inc
fnstenv
push
jle
adc
out
insb
outsl
lahf
outsb
jecxz
fxam
xor
and
pop
rcr
cli
les
xor
mov
dec
dec
or
out
mov
loop
and
push
cmp
insb
pushf
xchg
popa
adcb
lcall
cmp
inc
fstpt
and
stos
pop
sub
xchg
cs
pop
popa
or
dec
nop
bound
mov
cli
add
ret
push
push
adc
mov
test
sbb
push
hlt
repnz
lret
or
arpl
out
imul
mov
jg
mov
jbe
or
inc
xor
iret
push
or
jmp
pop
fildll
ficoms
insl
inc
lods
stos
mov
cmp
or
xchg
lock
shll
dec
fsts
outsl
sub
dec
and
sub
inc
testl
cltd
and
push
mov
jb
jno
pop
lret
imul
das
aam
in
test
lcall
add
pop
inc
or
es
outsb
ja
jecxz
inc
call
xor
test
idiv
cmpsb
xchg
outsb
ljmp
bnd
rcrb
gs
sbb
add
mov
fnstenv
scas
dec
fidivs
insl
test
pop
xchg
ja
dec
push
pop
into
jl
push
subl
sbb
int3
shll
nop
add
xor
push
stc
test
cld
pop
mov
mov
enter
outsl
mov
call
aaa
testb
enter
xor
fiadds
mull
leave
lods
inc
pop
push
in
adc
in
jge
negl
pop
jle
sub
pop
lcall
fildll
sahf
add
push
fisubs
or
stc
pop
cmpsb
out
movsl
cmp
insb
adc
enter
hlt
cmp
icebp
test
cltd
push
jmp
sbb
push
mov
push
hlt
inc
lcallw
inc
or
mov
stos
in
iret
mov
mov
sbb
jp
mov
cmp
imul
addr16
mov
divl
call
jb
hlt
or
outsl
lret
add
dec
out
add
push
fidivs
ljmp
sbb
jns
and
popa
aam
subl
shl
xchg
inc
cmpsb
lret
sahf
fcoml
out
mov
fimuls
divl
xchg
outsb
out
popf
sub
xchg
cmc
or
cwtl
andl
inc
sbb
add
xchg
and
mov
fstp
sbb
cmp
enter
mov
jbe
gs
stc
test
lock
xchg
push
movsl
sub
stos
testb
pop
add
test
icebp
imul
add
dec
addr16
pop
jg
cmpsl
mov
out
in
mov
and
push
adc
jae
mov
cltd
inc
or
jmp
xor
testb
push
dec
mov
add
nop
popf
mov
in
sahf
mov
and
xlat
mov
mov
rolb
xor
sbb
addr16
pop
sti
std
xchg
sbb
iret
adc
ja
xchg
sub
and
scas
stos
stos
aas
leave
sbb
pop
xor
sti
ss
mov
xor
cmp
rcrb
js
and
sub
test
pop
lret
aam
dec
jecxz
fisttps
pop
scas
and
je
loop
mov
xchg
cmp
cmp
andl
sbb
pusha
add
pop
leave
or
fbld
cmp
xchg
add
add
or
int
dec
scas
mov
mov
scas
call
lret
mov
jns
or
test
enter
mov
add
in
cmp
aaa
pop
fwait
sub
out
and
insb
pop
adc
pop
or
and
jnp
and
cmpsl
imul
dec
mov
or
rclb
pop
mov
in
xor
ljmp
insb
mov
cmc
dec
outsb
fmuls
pop
dec
pop
pop
sub
push
dec
sti
ds
cmp
adc
adc
fildl
loop
jmp
insl
push
hlt
mov
addr16
shrl
inc
int3
or
sub
mov
out
in
pusha
mov
jne
sub
pop
and
insb
pop
push
sahf
push
jmp
das
push
add
loope
jnp
cld
jnp
xchg
shlb
cwtl
push
incb
in
addr16
or
les
sar
fwait
push
xchg
mov
cmpsl
and
hlt
mov
xchg
int3
scas
inc
mov
mov
out
lcall
mov
inc
popa
cmp
sub
enter
movsl
jp
js
je
inc
lea
loopne
push
mov
and
lods
xchg
jg
mov
addr16
dec
mov
imul
sbb
sti
xchg
es
xchg
fidivs
push
pusha
int3
imul
rcl
mov
rep
jns
add
rcrl
loopne,pn
fwait
shl
pop
out
mov
inc
popf
daa
jb
adc
fisubl
xchg
and
imul
jae
jbe
and
out
fadds
cs
pop
lcall
xor
into
dec
out
dec
lret
and
xchg
jmp
aaa
jae
loope
sahf
movsb
xlat
adc
jp
pop
xor
arpl
adc
pop
sub
jl
add
dec
in
lret
ds
cld
es
xlat
daa
sti
sbb
jb
mov
cmp
mov
push
fs
or
loope
clc
xlat
lret
idivb
inc
nop
andb
repnz
subl
inc
movsb
adc
sub
call
xlat
fsubl
popa
pop
sub
push
cmpb
shll
sbb
stos
mov
mov
testb
test
arpl
bound
inc
mov
out
les
aaa
cmp
imul
or
pop
in
push
roll
push
sbb
and
push
push
xor
outsb
test
mov
sti
test
cmp
jp
fs
xorb
lahf
mov
out
ljmp
adc
mov
push
jb
cmp
or
fistpl
and
je
and
sub
lock
cs
fldt
sahf
adc
push
jno
fxch
push
push
shlb
jecxz
push
sahf
iret
jnp
mov
push
push
mov
mov
push
xchg
mov
std
xchg
adc
sub
mov
lods
in
lcall
fs
ret
fldt
mov
inc
es
lods
lahf
lock
sub
sub
daa
dec
imulb
aas
mov
sub
add
or
push
in
mov
mov
or
or
inc
mov
jg
cmp
cmp
lret
sbb
mov
xchg
ret
enter
pop
mov
cld
imul
cmp
cmpsl
jg
movsl
jmp
push
aas
lret
xchg
cld
ret
jbe
xchg
lret
and
fwait
shlb
sbb
shlb
mov
into
test
out
xchg
or
mov
inc
sub
mov
mov
ret
cmp
sbb
push
pextrw
mov
push
mov
and
xor
fdivl
subb
sbb
add
scas
daa
std
in
cmpsb
adc
imul
rcll
jb
mov
mov
aaa
adc
mov
in
inc
ss
sbb
push
imul
lret
ret
shlb
and
mulb
scas
push
stc
mov
dec
sbb
hlt
lret
adc
sti
lds
xor
mov
or
xor
stc
dec
aas
cmc
lock
dec
xchg
mov
adc
stos
rcl
pop
push
push
or
add
clc
and
hlt
repz
xchg
jb
fwait
cmp
or
push
cmp
inc
cmc
push
push
je
fcoml
addr16
lcall
dec
loopne
or
xchg
sbb
adc
fmulp
jg
fs
lret
inc
jbe
in
xor
fdivrl
mov
out
addl
cmp
xchg
stos
rcrb
sub
psubsw
jmp
scas
out
jno
and
call
lods
cmc
cmp
lret
xchg
dec
push
sub
stos
push
mov
arpl
loop
scas
bound
xor
aam
mov
outsl
sbb
mov
sbb
mov
je
cmp
mov
xchg
add
movsb
rcrl
cmp
ret
mov
mov
pop
stos
rorb
ja
out
xor
addr16
pop
sub
lahf
mov
or
in
pop
insl
lcall
jnp
movsb
scas
add
push
and
pop
faddp
aas
pop
in
pop
lcall
scas
mov
aas
pop
add
cwtl
hlt
test
outsb
dec
test
jmp
push
vmovq
lret
inc
add
jo
cmpsl
dec
lcall
push
dec
jmp
inc
jnp
mov
dec
pop
mov
cvtps2pd
adc
test
addr16
mov
pop
popl
clc
cmp
lret
nop
xchg
push
xchg
aaa
fistps
icebp
fildl
iret
mov
mov
inc
in
or
push
mov
xchg
fsubrs
jg
mov
lea
jle
mov
out
or
ss
adc
mov
ret
push
sub
cmp
out
xchg
mov
mov
mov
xor
rclb
push
adc
xor
test
pop
imul
xor
push
inc
dec
sbb
sbb
ds
in
jecxz
fisttps
mov
inc
xchg
cmc
push
mov
insl
rol
dec
shrl
hlt
es
iret
std
cld
and
cs
leave
jbe
and
cmp
mov
inc
mov
sbb
fcompl
aad
pop
xor
mov
push
fsub
lahf
xchg
lcall
adc
jg
xor
push
hlt
xor
sub
jb
loope
decl
fdivrl
ss
mov
and
push
mov
mov
mov
add
cmp
je
cmp
popf
ret
xlat
loopne
cmp
hlt
inc
dec
push
pop
es
mov
clc
or
push
xor
icebp
rolb
inc
les
or
mov
add
outsl
mov
mov
decl
push
fnstenv
jo
jno
movsl
fs
jne
and
pushf
inc
fwait
leave
xchg
mov
daa
pop
dec
notb
lea
iret
xchg
xlat
cmc
and
push
bound
xchg
fisubl
in
popf
cmpl
fcomp
push
jbe
sub
or
addr16
scas
xchg
inc
sbb
and
lahf
add
out
imul
xor
jno
pop
adc
leave
stos
and
mov
andl
xor
jmp
dec
cmpsl
cmpsl
mov
jge
dec
cs
jnp
mov
in
xchg
imul
sbb
dec
imul
jo
ret
xchg
add
stos
test
push
fs
add
jecxz
mov
jmp
mov
cmp
sahf
js
cld
inc
es
in
cli
or
xor
sub
aad
sub
push
or
shlb
repnz
lods
cmp
mov
dec
insl
fmulp
stos
arpl
xor
mov
icebp
sbb
shrb
cmp
sbb
push
in
xor
test
int3
fs
mov
mov
or
pop
and
shlb
adc
inc
test
daa
enter
rorb
ficompl
mov
cmp
or
es
dec
loop
pop
ds
mov
add
add
in
mov
clc
jbe
es
xchg
adc
es
jae
int3
push
repz
stos
sti
pop
test
lret
jae
sbb
sub
xor
jbe
cmp
cmpsl
and
push
ret
push
out
es
addr16
or
xchg
and
sub
inc
aaa
sub
pop
dec
ja
or
loopne
dec
dec
in
sbb
je
push
xchg
out
push
pop
or
and
test
fsubrs
js
mov
mov
xor
insl
mov
out
pop
mov
jbe
iret
js
mov
ss
subb
and
dec
sub
shll
xor
into
js
xor
push
jecxz
rclb
cld
pop
push
lds
je
mov
fldt
nop
adc
cmp
or
clc
shrb
lock
mov
iret
pop
movsl
loop
mov
jmp
sub
xchg
mov
push
or
dec
inc
inc
dec
push
outsl
jnp
cmpl
movsb
mov
pop
push
scas
repnz
lea
or
xor
gs
pop
mov
mov
iret
xorl
into
outsl
inc
inc
mov
xchg
jl
jnp
inc
pop
inc
and
dec
xchg
mov
adc
andl
xchg
fwait
xchg
into
push
pop
adc
fisubl
jmp
stos
lret
xor
push
mov
lods
sub
into
clc
aad
push
add
addb
mov
dec
xchg
jne
push
xchg
mov
fs
add
pop
xor
cmp
mov
sar
pop
pop
mov
mov
sub
pop
in
mov
mov
xchg
push
lds
cmpsb
cmc
mov
and
mov
jbe
mov
dec
pavgb
movsb
mov
out
add
enter
pop
out
out
cwtl
and
pusha
or
lret
mov
xchg
frstor
xchg
inc
push
push
inc
dec
es
test
fnstenv
or
jle
adc
hlt
outsl
out
cli
lcall
pop
leave
out
push
jns
shlb
repz
push
lret
repnz
mov
pop
lret
ljmp
push
or
xchg
xor
push
scas
xor
gs
stos
mov
push
dec
push
dec
jg
stos
xchg
rorb
lcall
push
stos
xchg
mov
inc
iret
adc
mov
pop
js
lahf
dec
push
fwait
adc
enter
cmp
in
inc
push
ljmp
ret
outsb
inc
sbb
cmp
lret
fnstcw
lret
or
repnz
xor
cmp
mov
mov
cltd
cld
cld
add
mov
cmpsl
mov
or
cmpsl
int3
icebp
jae
ret
inc
fsubrp
dec
test
insl
cmp
mov
aas
pop
ljmp
aad
stos
cli
lret
scas
xchg
lods
call
sub
movsb
mov
mov
xor
mov
mov
adc
push
cmp
in
xor
xchg
push
mov
xchg
mov
sti
push
push
mov
ss
dec
cmp
inc
xchg
dec
mov
mov
out
inc
loop
movsl
rcr
jl
adc
fistps
lds
psubw
cltd
test
in
push
das
lahf
mov
adc
cmp
mov
and
sub
push
sti
ljmp
cmp
pop
popf
je
jns
jg,pt
or
mov
adc
jae
add
outsl
cmp
sub
rcrl
popf
jmp
fldcw
imul
mov
pop
inc
test
movsb
pop
cs
and
ss
cmp
nop
int3
cmpsb
cmc
sahf
ss
sbb
negl
and
cmp
sub
xor
loopne
fildll
xchg
push
popf
sbb
and
insb
ljmp
repnz
cli
das
jnp
es
push
dec
je
pop
or
test
lret
pusha
mov
xchg
mov
sub
leave
in
mov
dec
fistl
jno
orl
xchg
dec
ret
adc
inc
mov
cmpl
rorb
jp
addr16
mov
pop
sbb
cmp
xchg
aas
fnstsw
jb
stos
jo
out
xor
xor
ss
cmpsl
mov
movsb
jbe
cltd
dec
pop
and
in
xchg
pop
xchg
arpl
cmpsb
mov
jno
xchg
out
mov
jbe
jb
xchg
adc
jmp
test
xor
mov
inc
pushf
mov
sbb
out
in
xor
pop
out
pop
popa
mov
leave
jg
ja
in
jns
mov
dec
mov
xor
lock
imul
out
jns
jge
je
cmp
mov
out
repnz
lcall
xchg
andps
or
push
enter
push
dec
jbe
mov
cld
adc
push
sub
pop
mov
cmp
pcmpgtb
xor
adc
mov
jno
jbe
or
push
lds
scas
cmpl
xor
pushf
cmp
xlat
in
int3
testl
cmp
inc
adc
sahf
sub
dec
xchg
pop
test
or
fisttpll
sti
jp
or
mov
xor
cmp
shr
push
xchg
or
loopne
mov
mov
mov
sub
hlt
mov
xor
cmpsb
jg
into
in
enter
ret
add
add
dec
jne
mov
push
into
jmp
gs
aas
in
subb
adcb
xchg
xor
sub
imul
dec
lock
into
mov
lods
sub
ret
xor
mov
test
movsb
ja
lock
adc
je
xchg
mov
mulb
and
pusha
jg
xchg
push
jns
das
lret
call
lock
pusha
inc
imul
xor
and
push
test
pop
and
pop
dec
outsb
dec
js
lahf
mov
shlb
loop
inc
jge
leave
jge
add
push
pushf
inc
repz
adc
push
xchg
xchg
jmp
add
aad
inc
mov
das
cmpsl
shr
icebp
cvttps2pi
cltd
lea
loop
mov
pop
scas
xchg
adc
mov
cmp
mov
imul
daa
and
je
dec
adc
repnz
notl
dec
fdivp
scas
mov
ret
aaa
dec
and
push
pop
cmp
stos
dec
jb
jbe
out
push
pop
inc
outsb
mov
fldl
push
mov
cmp
sub
js
jae
imul
add
cmpsb
sub
sub
mov
int
mov
sub
jmp
mov
stc
sub
mov
aaa
lcall
sbb
movsb
pop
or
sub
addr16
fdiv
gs
cmp
cmp
pop
insl
mov
fistl
ja
push
sbb
ja
testb
imul
mov
ficoml
loopne
dec
aam
xor
popf
push
outsl
push
xlat
loope
mov
inc
pusha
sbb
imul
cmp
and
icebp
sbb
mov
xchg
imul
cld
pop
mov
shrl
dec
sub
dec
or
xor
repnz
cmpsl
and
xor
sub
add
add
and
sar
hlt
fs
jae
aas
inc
test
xchg
inc
stos
test
frstor
in
into
iret
jno
xchg
mov
xchg
shrl
push
fs
or
sarb
inc
cwtl
mov
xchg
pop
outsl
loop
in
fwait
popa
aas
sub
aas
addl
dec
sub
mov
aas
sahf
xchg
daa
aas
ljmp
sub
cmp
outsl
pushf
or
push
push
testl
push
mov
sti
or
jge
jmp
scas
es
in
inc
mov
std
pop
adc
fdivl
data16
jns
mov
or
dec
test
insb
xchg
sub
jge
aad
or
inc
out
arpl
xchg
or
aas
mov
jp
pop
mov
or
sarb
adc
cld
sbb
inc
data16
add
imul
pop
dec
testl
mov
or
pop
into
lea
jnp
test
jb
enter
nop
xchg
xor
loop
test
cmp
gs
push
inc
or
mov
sti
repz
adc
mov
jo
inc
sbbb
mov
sbb
pop
gs
imul
aam
push
cwtl
pop
stos
inc
dec
push
rcrl
scas
push
test
stc
roll
inc
gs
or
cltd
sbb
ja
out
in
sahf
fucomp
xchg
lods
mov
adc
lea
lret
dec
xchg
mov
add
push
add
sbb
repz
lahf
stc
push
push
push
inc
push
inc
aaa
or
xchg
sahf
inc
add
adc
push
adc
cmpsl
xor
sbbb
dec
xor
fnstsw
fs
add
and
jp
loopne
inc
cmp
mov
jb
fcom
inc
out
adc
xchg
out
pop
sbb
out
cmp
cld
xor
dec
cmpsb
int
xor
push
hlt
cmp
push
lret
pop
push
loop
lahf
fisubrs
cld
fdivrs
mov
in
jae
cmc
ljmp
sbb
lock
and
jae
out
and
inc
js
xor
xor
cmp
fwait
push
pop
or
lods
outsb
nop
lahf
jmp
ss
stc
ret
mov
orl
dec
push
bound
xchg
dec
push
repz
in
inc
outsb
incl
xchg
cmp
inc
jbe
push
adc
cwtl
fs
cmp
popf
lds
aad
xor
mov
imul
out
int3
repnz
jg
jne
push
ficoml
out
xor
pop
test
mov
inc
cmp
mov
push
aaa
mov
aam
int3
inc
ljmp
xor
pop
nop
mov
repnz
push
in
imul
xchg
cmpsl
imul
scas
sub
and
iret
arpl
aas
lret
in
push
mov
jnp
adc
xor
rolb
mov
out
pop
fadd
mov
out
insl
mov
jb
movsb
jnp
jne
jp
pop
jle
out
jne
test
and
inc
xchg
insb
xchg
pop
mov
push
fbstp
mov
sahf
out
push
sbb
adc
cs
xchg
sahf
push
cmp
test
mov
les
jmp
ficomps
inc
fidivrs
jp
or
jl
sbb
jb
mov
addr16
outsl
gs
mov
mov
jl
inc
jp
cmpsl
cwtl
xchg
lcall
lea
das
mov
cmp
pop
sbb
sarl
into
xor
and
into
cltd
jecxz
subb
cwtl
adc
lahf
pusha
mov
mov
xor
ret
ljmp
fs
repz
pop
or
dec
and
rol
dec
ret
mov
cmpb
xchg
je
xchg
mov
and
dec
jmp
popa
jb
mov
adc
stos
or
mov
jge
sub
js
sub
filds
nop
bound
or
in
int
lods
shll
cwtl
aaa
and
add
les
dec
std
into
add
testb
mov
mov
adc
fwait
lods
fdivp
mov
xchg
mov
xor
mov
es
daa
ds
call
xchg
fs
sub
jns
dec
test
dec
ret
dec
push
outsb
imul
add
fadd
loop
mov
or
mov
dec
orb
sub
jle
pop
stos
push
test
add
jo
fisttps
mov
or
outsb
inc
lcall
test
sbb
je
fsubrs
mov
sbbl
jbe
xchg
push
subb
call
addl
popf
cs
je
ficoms
pop
xlat
cmpsb
push
into
jge
je
sub
sub
sahf
and
pop
adc
cmpb
fildll
push
mov
addb
adc
xor
xchg
sbb
xchg
cmovp
mov
in
lea
push
lods
cmp
scas
push
xchg
lds
dec
sub
mov
push
icebp
ret
loop
pop
adc
or
mov
lret
js
rcr
sub
es
inc
aam
xchg
jl
xor
fwait
or
cmpsb
inc
mov
dec
pop
cld
mov
in
cli
icebp
mov
dec
out
notl
adc
ficomps
add
add
mov
sub
aas
push
fdivs
popa
xchg
subb
jg
sub
jmp
and
mov
pop
in
mov
ret
or
lret
mov
xchg
scas
push
inc
sub
mov
sbb
nop
cmp
mov
test
pop
add
mov
scas
scas
stc
add
xchg
mov
inc
add
adc
push
adc
sub
jo
mov
sti
mov
jae
inc
jl
repnz
in
dec
movsb
insl
clc
pop
ljmp
push
test
inc
loope
and
es
sub
adc
mov
mov
andb
imul
bound
incb
jo
mov
jecxz
repz
push
fisubs
daa
dec
dec
imul
mov
jle
into
mov
stc
sbb
data16
pop
mov
xchg
mov
test
sbb
ret
push
stos
lds
in
and
sub
xor
xor
movsl
mov
adcb
loope
push
jmp
sub
out
call
xor
int3
cmpsb
sub
sub
sub
push
call
add
mov
icebp
sahf
cmp
fs
xlat
inc
pusha
or
adc
fildll
xlat
clc
push
adc
or
aad
jmp
sarb
adc
mov
xor
pop
jl
xchg
arpl
inc
xchg
mov
sub
loopne
xor
jle
sbb
shlb
je
cmc
push
xor
cmp
pop
pop
test
push
ss
jecxz
pop
mov
andb
stos
xlat
es
and
jb
hlt
inc
fwait
inc
int
push
xchg
shl
dec
cwtl
push
popf
nop
cmpsl
lea
cmp
outsb
mov
inc
or
or
es
out
cmp
cmp
add
add
add
cmc
and
ljmp
int3
push
mov
lcall
test
mov
add
inc
fwait
pop
adc
and
scas
and
sbb
pop
push
imul
iret
call
sbb
jp
xchg
xchg
push
xor
add
lret
mov
imul
in
jp
mov
push
ljmp
mov
xor
or
cmp
aad
jmp
insb
adc
mov
xchg
cmp
popa
in
dec
jmp
jb
loopne
cld
repz
imul
loope
jo
jmp
out
mov
bound
test
fmull
aam
fwait
repnz
sbb
xchg
cmc
in
jnp
ljmp
in
fadd
decb
push
push
mov
mov
sub
push
xor
cmp
sarl
push
mov
in
dec
and
call
cmc
and
mov
std
push
rcrl
in
push
xadd
pusha
pop
ror
jo
dec
sub
pushf
lahf
push
adc
adc
xchg
cld
mov
mov
pop
mov
cli
sub
lret
add
lahf
movsb
add
call
iret
add
cmp
inc
xor
push
inc
xchg
xchg
daa
xchg
pushf
xor
decl
pop
push
in
and
std
dec
in
cmp
nop
imul
add
dec
xorl
push
pop
mov
or
add
xchg
mov
fisttpll
test
out
xor
adc
and
mov
mov
push
xchg
sti
dec
mov
repnz
sbb
scas
mov
cwtl
in
sub
cs
lods
shrd
push
cmp
pop
xchg
out
dec
lods
shl
jle
movsl
adc
mov
stc
add
pop
sub
jl
jle
adc
jp
jg
cmpb
fisttpl
and
or
pop
pop
cmp
push
mov
mov
ror
mov
or
repnz
fcmovnbe
stc
sti
test
add
mov
push
mov
push
add
es
incl
cmp
mov
pusha
enter
and
add
adc
jg
add
lea
movsb
hlt
aad
or
inc
into
push
test
push
shll
outsl
dec
and
inc
push
notb
insw
movb
arpl
push
cmpsb
jnp
in
inc
test
and
fimuls
mov
out
xchg
arpl
loop
adc
inc
sub
xor
inc
mov
adc
pop
test
sub
cmpsl
push
mov
pop
nop
dec
test
repz
out
pop
adcl
xor
pop
cmp
and
jb
mov
xchg
sahf
sbb
fstp
mov
add
xchg
mov
and
cs
sbb
loop
dec
jnp
cmp
or
fidivs
inc
or
fidivs
cwtl
divl
push
div
sbb
add
mov
cmp
adc
fistps
mov
sub
lods
mov
fsubrs
adc
les
mov
movl
out
dec
add
insb
jne
sahf
mov
data16
fwait
dec
rclb
stos
mov
sub
xchg
cmc
fmuls
js
icebp
or
xchg
jle
xchg
je
fists
nop
sahf
ljmp
and
mov
cmp
add
inc
jnp
sarb
cwtl
andb
push
mov
push
cmp
cmc
jno
femms
pop
mov
cmp
test
push
push
out
inc
or
and
mov
cmp
dec
jae
cs
sti
mov
in
adc
mov
rcrl
dec
fs
insl
jne
cmp
sbbb
pop
fcomps
cmc
lods
mov
add
mov
insl
dec
andb
loop,pt
cmp
cmpsl
fmull
dec
mov
lret
mov
fldt
or
push
add
jbe
inc
or
addb
lret
jne
mov
and
scas
in
int
cmp
jb
jnp
jl
shrl
push
and
dec
jle
in
push
imul
sub
cmpsb
enter
xchg
add
mov
mov
test
cmp
movsb
mov
sub
cwtl
adc
and
and
std
dec
loop
lahf
mov
sti
fistl
out
push
mull
mov
movsb
mov
out
outsb
adc
repz
adc
cmpsb
pop
scas
pop
mov
shlb
rcr
add
daa
push
or
fidivrs
mov
shll
push
jb
mov
sbb
shrb
incb
lods
aad
inc
or
call
cmpsl
sub
nop
xlat
punpckhbw
adc
neg
inc
adc
push
sbb
or
inc
pop
sbb
mov
mov
mov
fldl
rolb
fwait
es
stos
jns
pop
insb
incl
mov
and
mov
add
pushf
mov
mov
out
movb
lahf
cli
push
addr16
sbb
jg
mov
jg
rorb
loopne
xchg
pop
mov
xchg
pop
mov
xor
cmp
ret
pop
pop
mov
xlat
push
cmpb
cmpsl
pop
add
xlat
mov
mov
mov
cld
ljmp
mul
xchg
pop
lret
jl
adc
scas
mov
repnz
lea
xor
dec
fisttps
jl
xor
xchg
insl
xchg
jbe
sub
jg
dec
push
jp
mov
add
add
ljmp
shlb
es
ds
sbb
jns
out
and
in
stc
or
dec
xchg
lahf
mov
jno
sub
inc
mov
xchg
test
xor
mov
dec
xchg
ljmp
sub
scas
mov
dec
cmc
xorb
lret
les
addb
fisubs
sbb
xchg
mov
cmp
test
popa
insl
test
or
cmp
dec
call
scas
movsb
push
dec
sub
hlt
into
pop
dec
mov
sub
xor
scas
mov
je
xchg
adc
pop
add
add
fisttpll
aas
pop
inc
adc
mov
cmpsl
inc
mov
xchg
xchg
cmp
bound
repnz
ud2
cmp
inc
imul
out
or
xchg
fs
mov
lcall
push
xchg
test
insb
loope
shlb
repnz
pcmpgtw
lods
pop
add
ljmp
js
in
cwtl
jnp
lods
push
cmp
pop
fistpll
mov
pusha
pop
insb
mov
gs
pop
inc
inc
sub
xchg
gs
and
add
cld
inc
lea
jl
movsb
test
mov
loope
std
stos
int
adc
lahf
insl
cltd
inc
adc
insb
xor
and
std
mov
jbe
mov
out
mov
jbe
mov
or
cmpsl
fsubrl
shl
jp
adc
lahf
push
or
add
add
dec
jp
sub
cmp
mov
data16
aaa
in
cmp
call
sub
jns
into
int3
decb
mov
cmp
daa
add
pop
daa
fistps
mov
add
rclb
mov
or
cmp
testl
adc
sahf
test
out
shr
sub
js
adc
mov
xchg
insb
pop
in
mov
push
dec
adc
push
and
aas
inc
inc
test
fdivl
sbb
add
lea
stos
in
daa
rcll
clc
add
adc
ja
pop
inc
cmpsl
pop
out
pushf
fisubrs
std
or
pop
cmp
jle
dec
clc
imul
cld
or
xor
out
addr16
fists
ss
mov
in
push
xor
adc
add
push
mov
imul
xor
push
daa
xchg
cmpsl
mov
xchg
xchg
mov
fmull
lret
jecxz
divb
and
xor
int
cmp
xchg
xchg
inc
and
into
sub
idivl
dec
push
cmp
lahf
aam
xor
mov
cmpb
cmpsb
fsubrs
hlt
fbstp
cmp
int3
jo
mov
test
clc
sbb
pop
jp
pop
xchg
pop
xor
sahf
xchg
xchg
push
mov
daa
push
and
inc
and
mov
test
mov
push
jle
fisubrs
and
sahf
cmc
jle
scas
xor
dec
jp
popa
data16
fstpt
or
scas
loope
push
lahf
movsb
xchg
push
shll
push
and
jae
sub
jb
cmpsb
sbb
dec
pop
mov
mov
outsl
add
ljmp
inc
ficoml
push
out
divb
xchg
outsl
push
insb
lea
pop
xchg
jnp
pop
outsb
pop
mov
addl
add
add
sti
jle
push
fistpl
xor
imul
cmc
mov
lret
xor
fildl
stos
cmp
movsb
pop
cmp
mov
pop
cld
movsl
cmpsl
mov
add
mov
push
cmp
mov
in
xchg
xchg
mov
push
icebp
cmp
movsl
aad
outsl
xor
jne
cmc
jnp
popl
scas
pushf
das
out
repz
arpl
fdivr
sub
sub
inc
lds
ja
jmp
sar
stos
push
dec
mov
shlb
lret
iret
fprem1
and
lea
push
pop
or
pusha
das
or
adc
add
adc
adc
lock
xchg
lar
mov
aas
in
mov
jns
movsb
mov
or
in
adcb
mov
out
xlat
testb
mov
addr16
js
mov
cmc
movsl
pop
adc
imul
push
daa
add
outsb
inc
push
or
in
or
fsubr
dec
inc
or
dec
mov
xchg
jne
jb
cmpsb
pop
or
lea
insb
xor
fsubs
aam
testl
jp
mov
imul
mov
and
dec
cmpsl
dec
loop
leave
inc
jecxz
pushf
fcomip
adcl
pop
pushf
jbe
out
cmp
pop
push
addb
push
movsl
daa
out
push
xchg
imul
mov
pop
inc
es
mov
adc
and
enter
cs
mov
insb
scas
inc
mov
xchg
stos
les
cmp
pop
add
jge
push
jne
nop
push
es
mov
push
ficomps
pop
ds
sarb
ljmp
rcrb
cmp
mov
fildl
xchg
add
cmp
outsb
repnz
push
outsl
ret
repz
mov
xchg
insl
out
jbe
enter
imull
ds
repz
inc
xlat
cli
and
mov
push
and
cmp
and
repz
rcr
xor
and
inc
push
cli
and
mov
mov
lds
jbe
mov
jmp
insb
xchg
mov
mov
gs
xchg
mov
jne
in
xchg
jg
add
xor
push
adc
adc
les
inc
fsubrs
leave
test
cmp
mov
ja
inc
test
inc
inc
mov
add
mov
imul
mov
pusha
push
mov
sub
lea
lods
adc
lcall
adc
sub
repnz
stos
fs
jge
cltd
pop
mov
jbe
sbb
loop
or
add
dec
or
or
push
mov
andl
pop
pop
fldenv
inc
mull
inc
repz
lods
fsubrp
insl
jb
dec
cwtl
add
stc
in
mov
xchg
sbb
mov
dec
or
jle
lods
leave
lods
or
pop
dec
pushf
ret
jns
push
fnstsw
sub
fcoms
ja
xor
mulb
mov
movsb
adc
mov
sub
mov
rcll
decl
push
movsb
cltd
pusha
sub
push
push
push
push
adc
pusha
push
mov
lods
lret
push
jne
out
pop
cmpsl
outsl
mov
cmpsl
jg
mov
pop
pop
xchg
movsb
xor
rcll
neg
out
dec
cmp
mov
nop
lahf
pop
lods
out
push
jb
in
lock
mov
bound
add
pop
icebp
shl
or
pop
mov
mov
rolb
mov
in
aad
dec
nop
ds
dec
loope
xor
dec
test
rolb
add
add
pop
jmp
add
ss
jmp
and
push
popf
lds
add
fidivrl
dec
adc
xchg
or
into
cmpsl
pop
xchg
cmp
sbb
and
sub
jecxz
mov
mov
lcall
push
pop
repz
lods
insb
inc
pop
cld
movsl
add
lahf
in
pop
xchg
and
jg
les
mov
pop
jp
cmp
push
inc
cmp
out
repz
xor
inc
jbe
mov
cmp
loop
and
lock
in
xlat
add
mov
jl
jge
inc
inc
jmp
imul
push
mov
out
loop
and
test
ss
cmp
mov
push
dec
je
aaa
loop
or
xchg
std
adc
xchg
lds
pop
and
inc
int3
aam
les
dec
lock
adc
sbb
mov
or
pop
lahf
inc
inc
mov
mov
test
out
iret
lret
and
rolb
pop
ret
jb
hlt
stos
push
hlt
imul
not
jne
mov
xchg
sub
xchg
and
push
inc
sbb
out
jle
arpl
fisttpll
insb
xor
filds
inc
hlt
les
sbb
gs
push
lds
nop
adc
icebp
ljmp
inc
and
ss
xor
push
adc
fldl
xor
ret
jo
jb
inc
data16
scas
lahf
mov
add
jl
adc
in
mov
xor
fs
ret
inc
xchg
pop
jns
push
inc
stos
lret
call
mov
aaa
lcall
decl
fadds
stos
mov
jp
aam
pop
mov
outsb
add
jne
and
fwait
add
sub
add
call
push
movsb
test
rorb
lret
repz
xchg
xor
insb
sub
xor
in
and
push
test
fwait
cmp
repnz
sub
mov
lret
cmc
push
adc
sbb
fwait
xchg
outsl
das
shlb
gs
sti
and
cs
mov
and
sar
inc
or
shll
mov
xor
cltd
cli
inc
ljmp
fiadds
cmc
jg
popa
mov
mov
mov
rorl
pop
pop
fidivrl
mov
dec
daa
pop
scas
mov
pop
inc
sbb
mov
sahf
daa
jl
or
dec
jb
cmpsb
pop
or
popf
xor
xchg
fsts
mov
das
jmp
mov
lcall
or
dec
mov
pushf
xchg
les
mov
sarb
add
lods
rorl
inc
roll
xchg
cmp
push
sbb
sbb
push
push
repnz
mov
xchg
je
outsb
dec
je
std
ja
mov
xchg
mov
jno
push
pop
pop
js
stos
mov
js
xchg
mov
movsb
fsubrl
aam
and
test
test
movntq
aaa
fwait
sbb
fistps
test
dec
das
popf
pushf
ds
jne
or
loopne
mov
js
in
and
int3
nop
sbb
in
and
addr16
or
jg
divb
clc
in
jo
in
mov
cmpsb
es
loop
inc
pop
aam
imul
push
inc
xor
frstor
mov
cltd
hlt
and
shll
dec
add
jmp
data16
cltd
and
lret
in
sub
out
loope
addb
pop
daa
lods
popa
add
sti
mov
add
add
cld
lds
xchg
orl
mov
paddb
dec
sbb
mov
test
and
fiadds
mov
roll
gs
mov
dec
leave
pop
mov
lar
add
pop
xchg
adc
ss
lods
iret
fucomi
popa
cmpl
fst
pop
sub
sbb
mov
bound
xor
test
sarl
outsb
inc
nop
or
movsl
mov
imul
inc
xchg
mov
and
jbe
je
out
adc
dec
or
ret
push
fisttpl
push
ljmp
mov
pop
dec
jg
inc
pop
lods
and
xchg
or
scas
pusha
jbe
pop
cmp
push
mov
into
xor
add
xor
das
testb
cmp
push
mov
addr16
push
push
lock
in
das
imul
jb
cltd
pop
test
mov
aaa
inc
fsubrl
cld
xlat
pop
rcr
out
mov
imul
je
cmp
fwait
mov
cmpsl
movsl
out
stos
flds
xchg
mov
orb
mov
fs
jle
inc
fwait
addr16
jbe
mov
outsl
xchg
mov
and
sbb
lea
or
inc
jae
jae
cmpsl
add
js
movsl
adc
out
in
push
fimuls
movsl
repz
mov
and
std
out
cmc
fidivrs
imul
insb
hlt
mov
xchg
sub
sub
jg
stos
incl
in
stc
imul
cmp
xchg
mov
fdivrl
fsubrl
outsb
fs
adc
js
jne
mov
jne
mov
pop
adc
scas
orb
les
xchg
dec
xor
xchg
bnd
and
pop
imul
cmpsb
dec
mov
sar
hlt
hlt
mov
add
or
je
xor
push
ret
lret
cmpb
cld
repz
mov
inc
dec
mov
lock
cmpsb
add
insb
cmp
fimull
jo
addr16
test
jecxz
lea
les
xchg
rorb
icebp
cmc
adc
rorl
fs
scas
jb
xchg
mov
jl
gs
dec
adc
xlat
js
idiv
imul
dec
andl
adc
push
xchg
pop
repz
subl
adc
or
sub
add
or
inc
jnp
inc
lods
shld
xchg
in
mov
es
or
clc
push
mov
aas
pusha
aaa
aaa
rorb
clc
mov
imul
fs
sbb
sti
mov
and
enter
or
fstpl
mov
and
lcall
add
sbb
mov
imul
aaa
push
cmp
sub
mov
sub
nop
int
push
int
movsb
add
sahf
es
decl
sub
xor
mov
or
sbbl
xor
pop
and
inc
push
sub
daa
out
cmp
jge
adc
dec
dec
leave
and
add
arpl
fucom
cld
add
xor
test
mov
lods
lea
xchg
sar
xor
xchg
jle
shr
xor
xchg
jne
sahf
in
pop
rolb
lret
faddl
push
dec
in
lods
sti
scas
xor
mov
scas
repnz
shlb
jae
test
mov
stos
xlat
dec
adc
lret
add
in
xor
add
sarl
ficoms
add
pop
cltd
cmpsb
call
dec
test
pop
sbb
pop
ret
xchg
push
lods
cwtl
sub
nop
aaa
insl
jbe
push
fcos
mov
inc
daa
mov
ss
push
add
imul
xor
inc
int
jge
push
xor
jle
imul
ret
pop
push
aad
mov
test
mov
pop
sahf
cwtl
ret
mull
loop
call
cmp
mov
cmpsb
push
lods
jle
cmc
pusha
jmp
xchg
adc
leave
mov
ja
jb
push
mov
pop
lods
sbb
cmp
das
xchg
mull
mov
inc
jbe
jl
ret
outsl
ljmp
dec
stos
outsb
ja
dec
push
pop
adc
cmpsl
dec
fs
lods
mov
sub
aad
outsl
fs
xchg
xor
cmp
vpaddusb
outsb
ret
mov
fmull
mov
lds
ds
pop
movsb
iret
cli
mov
push
xchg
cld
push
push
test
in
sub
mov
mov
xchg
xor
add
popf
js
sbb
movsb
cmp
je
sbb
push
mov
or
inc
out
es
loope
sbb
sti
adc
stos
lds
js
pop
pusha
mov
divb
shl
fs
adc
incb
adc
sub
jnp
mov
enter
pop
pop
xchg
jl
mov
das
xor
xlat
mul
popf
je
lods
mov
inc
adc
cmpsl
leave
jbe
push
mov
jne
inc
mov
loop
ret
or
add
add
lock
cwtl
sbb
cmpl
jne
pop
cmp
aaa
jno
jmp
insb
or
in
mov
pushl
xchg
imul
outsl
dec
iret
js
sbb
or
mov
xchg
dec
enter
das
dec
and
sti
std
pop
and
ror
jg
lret
and
add
dec
lret
sub
movsb
mov
stc
push
inc
cwtl
pop
enter
adc
orl
idivl
das
mov
inc
iret
outsl
or
sar
jno
mov
arpl
or
mov
mov
or
pushf
jp
stc
imul
inc
and
xor
mov
int3
xor
add
mov
cmp
lahf
mov
cmpsl
dec
mov
mov
jg
xchg
add
adc
std
dec
mov
jne
mov
and
test
xchg
gs
mov
cmpl
mov
pusha
dec
mov
or
lea
stc
aad
mov
push
cmpsb
fwait
test
push
andb
data16
mov
pop
bound
mov
push
push
and
sbb
movsb
pop
sarb
mov
push
xor
cmp
ret
lret
push
ja
mov
lods
movsl
fwait
movsb
addr16
cmp
xor
ret
mov
testb
cld
rclb
outsl
cld
cmp
dec
or
cmp
push
es
jns
push
sbb
stos
fiaddl
pusha
mov
addr16
fwait
push
push
adc
nop
xchg
ljmp
das
scas
call
sub
or
jle
adc
pusha
adc
out
xor
xchg
jno
pop
jg
jl
jae
arpl
lods
testb
or
loopne
dec
outsl
stos
fwait
xor
xor
pop
mov
aad
mov
push
pop
cmpsb
add
sbb
and
std
test
and
push
mov
mov
insb
aas
cmc
jno
mov
jp
dec
arpl
fildl
jle
imul
xor
cmp
mov
or
sbb
mov
scas
pop
outsb
mov
daa
addr16
out
or
pop
sub
std
and
or
test
lahf
sub
add
jne
mov
addr16
aaa
mov
frstor
xor
or
test
and
test
pop
stos
lds
push
mov
js
push
inc
stc
or
xchg
mov
insb
sbb
or
pop
pushf
mov
xor
popa
in
mov
mov
jp
dec
dec
and
jp
mov
cmp
xlat
inc
mov
arpl
xchg
pop
dec
jb
xchg
xchg
shlb
hlt
pop
jl
pop
xchg
out
into
sbb
push
out
inc
xor
jp
push
inc
mov
xor
mov
mov
pop
push
iret
mov
dec
mov
xor
icebp
gs
cmpsl
jo
mov
mov
filds
inc
pop
mov
test
je
mov
rcl
daa
jne
insb
adc
inc
push
das
ds
imul
mov
je
mov
cmp
dec
mov
pop
and
sbb
jp
cmc
and
outsb
pop
orb
cmp
xor
push
lahf
push
push
rdpmc
xlat
mov
mov
shl
lods
data16
ret
push
dec
xchg
inc
cmpsl
pushf
call
out
cli
movsb
filds
pop
fldenv
leave
loop
aam
cmpsb
or
mull
daa
push
je
sub
adc
inc
sub
xchg
xlat
and
pusha
movsb
mov
mov
or
filds
sub
leave
outsl
aad
xchg
dec
out
adc
add
mov
das
jle
or
jg
es
lds
or
mov
mov
or
movsb
push
int3
jge
rol
pop
mov
out
pop
inc
jge
cmp
pop
jbe
mov
outsb
out
xchg
jnp
inc
sub
es
pop
lret
and
test
hlt
popa
int
jecxz
scas
pop
xor
mov
cmp
insb
xor
cmpsb
test
adc
aam
and
dec
fcoms
pushf
sarl
xor
std
in
inc
ljmp
lret
cmp
hlt
insb
push
xor
outsl
gs
inc
sbbb
rcll
sub
pop
sub
adc
inc
cmp
into
js
fwait
in
mov
hlt
loopne
ja
clc
cli
sahf
adc
out
lods
mov
int3
imul
cmp
push
les
ret
int
inc
sub
cltd
in
cmpsl
mov
xchg
push
das
jl
jg
imul
jne
in
ds
stc
pop
fadds
imul
pop
xchg
lahf
jp
lds
mov
gs
lret
into
stos
int3
fisttpl
jnp
adc
or
mov
inc
inc
repnz
sub
adc
les
mov
aam
push
rcl
arpl
inc
stos
inc
mov
xor
add
push
add
pop
jb
lods
and
mov
cmp
lods
mov
insl
dec
mov
cmpb
outsb
pop
in
lahf
mov
lods
jne
or
cmc
jns
mov
dec
js
fs
popf
aas
stos
mov
jle
popf
lret
jl
xchg
xor
xorl
pop
movsb
nop
mov
mov
mov
ret
roll
mov
out
fucomip
or
push
mov
jne
test
jb
and
mov
mov
add
add
add
test
and
mov
and
push
or
insl
adc
test
xchg
push
loop
lea
pusha
ja
mov
mov
cmpsl
jmp
xlat
aad
int
jge
clc
cmp
roll
sub
mov
mov
inc
idivl
adc
bound
mov
hlt
xchg
rcll
pop
jno
push
or
mov
cmp
movsb
pushl
mov
and
mov
sbb
shll
out
cmp
insb
cld
mov
call
cmpsb
mov
in
xor
daa
std
test
xchg
pushf
imul
mov
pop
fdivs
stos
jle
xadd
aaa
das
int3
lcall
arpl
jno
push
xchg
js
sbb
enter
cmc
mov
mov
jb
outsb
pushf
pushf
adc
sub
scas
cmpsl
cmpsl
xchg
mov
ss
js
ja
aad
into
fidivrl
enter
mov
lret
cmp
inc
add
jl
mov
cmp
mov
in
sbb
test
jle
mov
insb
jecxz
push
mov
lea
lods
outsb
xor
adc
xchg
push
mov
fucomi
aam
dec
shlb
mov
sbb
dec
push
sub
mov
ret
inc
mov
adc
xchg
pushf
gs
push
repz
cmpsl
inc
lods
inc
movsl
ja
enter
loopne
testb
push
arpl
push
pop
mov
leave
sub
xor
jle
pop
pusha
je
lds
jl
subb
adc
call
stos
dec
mov
push
jns
sbb
and
lahf
stc
arpl
lahf
push
mov
cli
lcall
pop
push
aad
cmp
lds
sbb
jg
daa
jo
add
sbb
jg
gs
jae
je
push
xlat
stos
mov
imul
xchg
mov
data16
movsb
jp
xchg
xchg
sbb
push
lock
cltd
les
dec
sub
add
outsb
lds
push
cmp
mov
add
lret
jbe
fadds
push
repz
and
jle
out
pop
push
mov
fdivl
dec
mov
and
adc
pusha
inc
pop
mov
pusha
and
cmpsb
push
jae
xor
sub
add
icebp
insb
jo
cld
jg
adc
xor
or
js,pt
add
mov
lcall
mov
pop
les
or
push
dec
mov
stc
ja
jecxz
jp
sub
xor
loop
test
jb
es
jne
leave
adc
mov
mov
repz
fsubrl
cmc
addr16
mov
jnp,pn
cmp
test
insl
lods
or
or
pop
mov
xor
outsl
dec
jne
inc
repz
aaa
shrl
mov
dec
pushf
add
mov
sub
stc
dec
mov
popa
inc
dec
pusha
cli
pop
mov
aad
loope
mov
stos
ret
in
andl
inc
mov
and
pushf
lock
xlat
lds
xchg
mov
dec
fcompl
mov
push
movsb
xchg
daa
push
adc
divl
cltd
cmp
sub
sbb
test
jns
jecxz
in
cmp
mov
inc
js
xchg
repnz
jp
mov
inc
lret
jg
inc
int3
aaa
fisttpll
mov
mov
sub
and
inc
mov
je
jge
dec
xor
sub
push
hlt
jge
cmc
mov
jnp
hlt
out
xchg
imul
add
hlt
mov
inc
jne,pn
mov
std
out
mov
ljmp
cwtl
push
popa
cli
sub
es
in
cld
std
mov
lcall
insb
call
sbb
adc
cmp
fwait
mov
loope
fs
xchg
dec
mov
loop
ja
push
mov
adc
pop
nop
inc
dec
dec
and
adc
jo
or
sbb
and
test
mov
xorl
add
push
jg
loop
mov
andb
push
in
dec
pop
in
push
inc
push
xor
jle
add
xchg
lds
shrb
push
inc
mov
jae
out
shrb
adc
mov
stc
push
and
and
jge
pusha
jnp
or
xor
sbb
test
jae
ljmp
lret
sub
outsl
gs
mov
cmpsb
push
push
mov
lods
mov
popa
lret
pusha
xchg
jg
and
push
add
pushf
aad
cld
fimuls
std
inc
das
inc
push
sub
mov
cmpsb
leave
cld
push
sahf
inc
jns
mov
pop
sbb
lcall
jnp
mov
mov
push
imul
movsl
popa
fwait
mov
dec
std
pop
xchg
repnz
push
push
stos
or
call
xchg
lea
fmuls
sahf
arpl
cmp
jle
mov
pop
and
xlat
jo,pt
out
jo
enter
mov
or
push
and
fmul
cmp
mov
adc
sbb
and
jmp
push
lcall
jp
mov
adc
fs
imul
sub
lds
sahf
sbb
mov
ret
xor
mov
add
aas
push
out
or
dec
cmpb
inc
mov
lret
mov
addl
ja
out
shll
imul
ja
cmpsb
sbb
sub
leave
mov
jae
adc
mov
loopne
scas
and
stc
negl
inc
mov
enter
cmp
adcl
dec
cmpsl
subl
ret
inc
daa
cmpsb
push
call
xor
cwtl
adc
dec
and
fld
cmp
arpl
sbb
cmp
dec
and
icebp
mov
dec
and
mov
inc
xchg
push
test
ja
xchg
std
ds
mov
jp
invd
add
in
cmp
mov
outsb
mov
mov
sahf
pop
rcrb
insb
movsl
jnp
lods
int
and
mov
aaa
mov
xchg
mov
fisttps
or
gs
notl
and
aas
or
aam
xchg
mov
jg
sahf
subb
jl
inc
push
cld
add
fidivs
out
mov
idivb
call
inc
pop
data16
sub
pop
movsb
jmp
xor
mov
lock
es
or
cmpsb
dec
scas
lods
pop
push
fiadds
imul
ds
fidivs
cmp
cld
xor
pop
add
sub
push
or
out
movsb
mov
jns
dec
push
imul
mov
iret
imul
xor
cmp
loope
mov
fstp
fsts
mov
and
jg
sub
pop
inc
jl
bound
lds
inc
dec
pop
lods
out
adc
mov
ret
jge
loop
xchg
and
mov
in
dec
cld
cld
xchg
lea
and
inc
js
cmp
stos
jb
mov
dec
js
cmp
imul
rcrb
mov
inc
clc
in
xchg
adc
in
flds
jb
jns
sub
cmp
fildl
stc
push
aas
add
rcll
push
dec
pop
mov
inc
mov
fidivl
or
into
sbb
idivl
inc
imul
mov
xchg
jg
inc
xor
fldenv
pop
mov
pop
clc
adc
lock
mov
push
cmp
pop
mov
negb
inc
mov
sahf
hlt
dec
push
xchg
pop
cmp
push
cmc
icebp
cmp
arpl
lods
xor
push
mov
mov
pop
xor
xchg
fs
sbb
out
mov
int3
sbb
xchg
aad
mov
or
jge
jl
and
test
test
test
jae
push
push
mov
push
sub
adc
jbe
mov
cld
lods
sahf
and
inc
pusha
bound
in
pop
cltd
dec
mov
fs
fdivrs
xlat
lahf
outsl
stos
push
inc
repz
mov
fldl
or
cwtl
cltd
cmpsl
movsb
push
adc
inc
addl
lret
jno,pn
movsb
lock
test
adc
add
mov
mov
push
add
push
add
std
fidivl
jecxz
mov
jmp
sub
testb
xor
jecxz
pop
or
pushf
xchg
dec
xor
fcomip
jg
iret
test
push
pushf
lret
rcll
arpl
sbb
das
aad
pusha
divl
stos
cltd
in
jne
push
push
push
test
cmp
push
xchg
dec
pop
pop
fs
in
das
fstl
dec
lods
enter
aad
scas
dec
and
fwait
dec
and
sbb
ss
insb
sub
add
mov
faddl
mov
or
push
cli
xchg
xor
fs
fcoms
fwait
pop
mov
sub
adc
xchg
lret
fs
add
aam
fnsave
push
ljmp
sub
jns
inc
lods
mov
and
dec
dec
loopne
movsl
jmp
fwait
movsb
cmp
test
inc
dec
xor
xchg
mov
cmpsb
lret
push
roll
xchg
add
imul
aas
int
lods
jp
inc
or
outsb
lret
aas
jecxz
dec
in
mov
dec
mov
pop
fildl
sbb
ret
pusha
xchg
push
pop
ljmp
dec
jbe
movsb
shll
in
xchg
jg
and
pop
in
scas
out
cmpsb
rcr
mov
push
outsl
std
mov
xor
insb
imul
and
xchg
add
fwait
daa
adc
cmp
and
push
push
push
lds
xchg
int3
shll
testl
repz
mov
psllw
outsl
ds
out
stc
xchg
inc
int3
adc
sbb
push
sub
push
inc
pop
int
outsl
xchg
jl
sub
dec
dec
push
push
out
and
int3
add
lret
push
jge
mov
add
mov
fs
cltd
pop
pusha
xchg
out
xchg
xlat
fcmovnbe
or
les
cmp
pop
fdivrs
fcomps
in
dec
pop
mov
push
sbb
adc
data16
pop
or
xchg
in
add
ret
clc
mov
jbe
lods
repnz
aas
out
push
sbb
jecxz
insb
adc
and
and
adc
cmp
es
sbb
xchg
out
lcall
xchg
aam
scas
or
sub
jb
fcomi
outsb
adc
mov
adc
lods
jmp
dec
cmp
jae
mov
inc
add
out
add
add
arpl
mov
test
cmp
ljmp
or
cmp
scas
scas
add
inc
cmp
stos
mov
call
roll
cmpsb
and
imulb
mov
xor
cltd
js
stos
lret
pop
cmp
mov
lcall
and
insl
pop
ja
push
add
mov
xor
cmp
xchg
push
out
inc
ja
aaa
cmp
mov
out
mov
jl
adc
test
jb
scas
ss
mov
outsl
je
inc
dec
jno
outsl
ds
jno
stc
mov
push
sub
test
jne
iret
cs
jo
das
roll
aas
dec
cs
daa
movsb
and
insl
lcall
add
jle
adc
pushf
bound
cmp
outsl
hlt
outsb
cmc
out
test
cmp
cmp
mov
divb
outsb
or
imul
pop
mov
dec
mov
das
ret
xchg
adc
repnz
xchg
sub
arpl
or
push
scas
das
jae
push
imul
fsubl
jb
mov
rorb
sbb
or
sub
push
stc
sub
xor
xchg
pusha
mov
jecxz
add
arpl
lds
fwait
insl
leave
in
lret
or
adc
lret
in
push
gs
mov
arpl
negl
aas
push
xlat
cmp
loopne
es
scas
xor
cmp
fucomip
xchg
mov
jb
aad
les
outsl
mov
lret
ja
mov
in
dec
addb
adc
add
inc
and
push
popf
sub
scas
xchg
dec
repz
push
ja
mov
pop
sub
push
incl
jne
xchg
int3
mov
into
lods
sbb
pop
addb
out
outsb
jb
or
sar
inc
mov
fiaddl
add
add
and
sbbb
push
push
mov
out
ss
in
push
out
div
sub
xchg
cmp
mov
vunpcklps
lahf
pop
add
fistl
push
aas
scas
loopne
mov
push
xchg
mov
fs
call
sbb
jge
pop
pop
rcl
push
add
es
mov
jno
pop
addr16
add
mov
enter
cmp
int
dec
mov
lahf
repz
add
cmc
and
fstpl
add
xchg
mov
add
outsb
std
movsb
pop
mov
lea
shll
cmp
add
mov
mov
test
test
cmp
adc
pop
mov
lods
pop
xchg
jae
mov
push
inc
push
int3
jecxz
mov
mov
mov
xchg
add
xchg
mov
je
jo
xor
mov
mov
test
fnsave
pop
inc
outsb
jp
xor
in
rclb
push
lret
loop
rol
jb
ret
rcl
push
aaa
mov
dec
movsb
cmp
cld
pop
movsb
fidivs
mov
pop
xor
sbb
cmpsl
mov
dec
push
xchg
daa
jl
xchg
idivl
inc
inc
fwait
mov
dec
jp
test
daa
pop
cwtl
and
inc
pop
dec
clc
pop
push
pop
cmp
inc
lret
into
inc
mov
pop
inc
adc
cmc
movsl
movsb
das
mov
mov
leave
rcrb
adc
in
dec
fldt
data16
or
or
xor
dec
xor
mov
mov
repz
xchg
sti
call
ljmp
push
stos
or
cmpsl
aad
inc
popa
rcll
pop
push
lods
add
imul
sbb
and
scas
adc
in
sbb
arpl
jb
cmp
addr16
mov
std
lods
ss
sbb
dec
inc
sub
insb
neg
js
outsl
xlat
jb
orl
cmp
cmp
outsb
test
dec
xchg
js
enter
mov
push
and
push
or
xchg
jp,pn
sbb
adc
xchg
repnz
aad
les
movsb
arpl
jne
pusha
cmovle
stc
adc
xchg
sbb
add
stos
stos
scas
outsl
shll
cld
or
hlt
mov
arpl
add
and
cmpl
stos
push
rclb
sub
aam
test
mov
ret
xchg
xchg
loopne
popf
ss
mov
mov
jbe
pop
arpl
mov
jl
cmp
mov
push
sbb
pop
and
in
aaa
ds
mov
sub
add
out
push
jp
mov
sti
in
arpl
push
sub
in
inc
das
dec
sub
dec
adc
mov
arpl
loopne
mov
test
dec
jecxz
sti
shlb
sub
cmpsl
mov
add
insl
aaa
inc
xlat
test
fsts
orl
aaa
or
test
adc
andb
pushf
dec
jge
push
fisttpll
in
outsb
aam
in
mov
mov
mov
push
mov
inc
xor
int
lods
mov
repz
xchg
lds
lret
xchg
dec
js
pop
icebp
ret
cli
testl
arpl
dec
pop
inc
cmpsb
popf
xchg
mov
inc
outsl
pop
jae
cld
test
xchg
pop
pop
cld
mov
xorb
add
insl
fildll
mov
adc
mov
mov
cld
jp
sub
mov
cs
std
adc
add
xor
push
sub
ja
aaa
es
sti
pop
push
add
sahf
insb
in
dec
fadds
fimuls
daa
jl
jmp
jo
lret
cmp
es
test
pop
lahf
adc
and
cmp
dec
jbe
es
inc
rcrb
cmp
mov
sbb
mulw
mov
loopne
scas
push
or
inc
xor
loopne
sarb
mov
jnp
pop
fnstenv
test
stos
mov
roll
std
xchg
out
cmpsl
mov
xlat
sub
mov
test
sub
jne
roll
mov
mov
mov
pop
test
ja
push
sahf
inc
lcall
insb
dec
fwait
sbb
push
fldl
inc
adc
outsb
xchg
add
and
pop
or
dec
jb
pop
fsubl
cld
mov
ljmp
aad
adc
jl
lods
or
jo
push
pop
arpl
and
jae
and
push
pushf
aaa
out
imul
scas
out
jle
insb
dec
and
jp
imulb
fmull
jg
mov
in
mov
jl
insl
mov
xor
cwtl
add
or
lock
push
in
or
jecxz
and
ljmp
lret
xor
push
addl
in
addr16
inc
dec
cmp
xor
stc
test
xlat
push
mov
mov
movsb
scas
cmp
sbb
xchg
inc
or
dec
xor
push
mov
cmpsl
lahf
mov
mov
push
imul
orb
ljmp
xor
or
push
fdivrs
js
rol
pop
fmulp
pop
mov
clc
jb
mov
mov
imul
jmp
inc
xchg
pop
adc
iret
mov
jle
mov
fcoml
scas
fmul
cmc
dec
cmpsl
ja
adc
add
add
andl
test
gs
jo
bound
lods
add
mov
test
out
add
mov
cmp
clc
pop
mov
movsl
pop
jmp
sahf
or
push
dec
int3
xchg
iret
orb
scas
sbb
push
fadd
test
cmc
das
scas
xchg
mov
ljmp
xor
push
push
cmpsb
pushf
addr16
dec
mov
inc
mov
stos
mov
leave
adc
je
fiaddl
je
xchg
and
es
aam
call
lahf
shl
shlb
mov
inc
mov
jo
fsubrl
inc
pop
pop
std
adc
imul
aad
jno
sbb
inc
bound
mov
push
jp
dec
into
xchg
cwtl
adc
xchg
jbe
pop
cmpsb
or
daa
cmp
aad
cmp
inc
stos
dec
inc
aad
mov
xchg
pop
test
rcrb
push
pop
mov
inc
dec
pop
ret
pop
cmpl
das
mov
dec
test
jae
jns
push
scas
and
mov
and
sbb
jmp
mov
aas
mov
and
dec
mov
pop
mov
mov
clc
test
sarb
mov
or
inc
or
in
pop
xor
pop
and
mov
xchg
add
cmp
inc
aad
mov
ret
dec
xchg
sub
addr16
fnstsw
xchg
push
mov
lds
mov
jmp
jae
pop
mov
je
adc
mov
push
out
sbb
arpl
push
shrb
inc
inc
mov
imul
xchg
sub
sbb
xlat
scas
sbb
push
inc
aaa
nop
aas
sub
mov
outsl
fistpll
mov
jnp
push
push
cltd
push
ljmp
jno
aas
xchg
push
add
rol
xchg
pop
hlt
jns
sub
xchg
dec
inc
stos
lods
push
sahf
test
pop
dec
cmpsb
fdivl
addr16
test
fmull
enter
sahf
cli
xor
ljmp
jno
mov
xor
in
icebp
xchg
xlat
or
adc
xor
jb
lcall
fidivs
sub
ret
aaa
xor
mov
xor
inc
mov
pushf
pusha
stc
jg
cltd
negb
xor
add
fmulp
or
rcrb
shlb
cmp
pusha
jp
je
pop
in
mov
cmp
jne
jp
mov
inc
sub
enter
hlt
cmp
jb
das
adc
jbe
sti
testl
xchg
mov
adc
inc
inc
pop
test
mov
xchg
xchg
adc
push
pusha
test
xorl
xor
mov
nop
imul
sar
out
lahf
lods
adc
out
mov
fwait
jmp
mov
in
jle
cli
jno
push
mov
add
icebp
outsb
fwait
and
sar
mov
movsb
jbe
add
mov
rclb
add
sbb
mov
test
xlat
pop
push
mov
icebp
mull
test
sub
lcall
mov
pop
fsubl
mov
test
dec
push
jae
pop
sti
out
mov
cmc
ds
call
scas
std
pop
cltd
inc
orb
push
shrl
cmp
dec
dec
sbb
repz
xchg
int
jbe
and
mov
call
arpl
jle
sti
push
adc
mov
clc
bound
push
cmp
outsb
adc
or
add
cmp
push
shl
call
call
pop
mov
add
sbb
jecxz
jnp
push
jo
dec
mov
cwtl
idivb
xchg
mov
xchg
test
popa
xchg
loopne
insb
pop
daa
movsb
rolb
es
pop
mov
outsb
sub
sub
ss
jae
mov
imulb
jl
lret
pushf
xor
xchg
out
mov
cmpb
sbb
test
mov
or
dec
xchg
ja
sub
mov
jmp
adc
xchg
stos
imul
adc
push
or
je
and
or
xchg
or
push
jno
scas
inc
shll
repnz
push
jle
ljmp
jle
mov
cmp
idivl
xorl
jne
mov
mov
mov
shrb
nop
pop
scas
addr16
adc
push
mov
inc
clc
sub
mov
or
xlat
out
inc
stc
xchg
lcall
cwtl
jnp
and
sub
and
loopne
sbb
loopne
xchg
push
fxch
xor
push
cmpsb
xchg
jmp
mov
sbb
cltd
mov
mov
cmpsb
xchg
sti
movsb
sar
fistl
mov
xchg
cmpsl
mov
scas
sub
xchg
divb
cmpsl
jle
adc
xor
sbb
testl
or
clc
adc
jae
mov
and
sub
ds
mov
les
mov
mov
or
fcmovbe
shr
js
lds
sbb
imulb
mov
cmp
push
imul
fisubrl
loope
adc
aam
fwait
xchg
adc
jl
insl
dec
and
jns
paddusw
loopne
adc
negb
or
mov
pop
imul
sub
xchg
pop
dec
dec
lahf
mov
mov
int
fdivrl
pusha
push
dec
test
cmp
mov
fmul
fdivrl
jge
sbb
adc
add
shlb
lret
inc
scas
mov
imul
jmp
xchg
arpl
inc
jbe
cmp
mov
lcall
rcrb
int3
mov
sbb
in
insb
jno
ret
add
mov
add
in
xlat
pop
xor
ljmp
scas
fcoms
sbb
xlat
scas
xchg
add
mov
fwait
xor
adc
push
addb
les
addr16
add
into
dec
sbb
pushf
inc
adc
sub
sbb
sub
mov
out
fucomi
loopne
push
mov
negb
rcl
xchg
ds
into
xchg
movsb
ret
push
mov
sti
daa
insb
repnz
pop
xor
push
cmp
add
mov
push
pop
jne
jg
cmp
adc
and
int
out
rolb
imul
mov
ljmp
imul
dec
mov
cs
mov
test
test
ss
adc
sbb
shlb
stos
jb
lea
jp
outsb
mov
enter
testl
sbb
mov
or
addr16
inc
int
loop
mov
cltd
fldz
int3
cmpsb
loope
mov
data16
bound
mov
or
or
xor
scas
sbb
arpl
test
daa
fs
das
push
ljmp
mov
jg
cmp
xor
sub
ret
addr16
pushf
mov
cmp
scas
shl
daa
movsb
sahf
fidivrl
xchg
pop
adc
sti
pop
jae
repnz
outsb
pop
mov
jmp
pushf
add
bound
jae
add
add
push
sahf
pop
add
push
jle
daa
inc
movsb
adc
in
jge
lret
ds
sub
xor
xchg
push
out
test
or
std
add
and
imul
mov
dec
mov
mov
xchg
jecxz
test
mov
sub
cli
repz
mov
add
repz
inc
mov
inc
push
sub
mov
sbbl
mov
ror
xchg
jp
leave
xor
aam
mov
xor
addr16
xor
mov
rorb
or
xor
and
or
sahf
arpl
pushf
and
jo
mov
pop
pop
mov
adc
push
cmp
cltd
jmp
addr16
push
jg
stos
sub
and
and
imull
flds
call
and
and
pop
pop
dec
dec
xchg
fistpll
cs
cli
loope
pop
xchg
xor
cs
pop
push
sahf
jbe
sub
je
andl
push
in
push
xchg
jg
sub
call
and
rcrb
repz
scas
fs
into
insb
rep
push
imul
pushf
jae
adc
xchg
cmp
mov
dec
les
divb
nop
lods
pop
aaa
aad
mul
cld
or
lret
lods
cmp
addr16
out
shll
mov
stos
ja
stos
scas
mov
and
jl
inc
adc
sbb
dec
push
cmpb
push
addr16
push
mov
cmpsl
fdivrl
cltd
ljmp
cs
adc
mov
cmp
cmpsb
cmc
cmp
sub
les
pop
xchg
cltd
cmpsb
sub
dec
cmpsl
enter
mov
jae
daa
cld
adc
inc
inc
in
sub
bound
mov
and
arpl
fnstenv
aaa
inc
mov
sbb
ja
and
sti
sub
mov
lret
cmpsb
xorl
and
iret
push
jb
and
pop
fisttpl
sbb
and
idiv
cmp
imul
xchg
movsb
jl
pushf
mov
push
and
adc
dec
sub
jge
sarb
xor
inc
mov
hlt
jbe
xor
js
xor
jge
sub
sbb
xchg
mov
les
test
push
out
jg
fsts
bnd
mov
jg
mov
int3
stos
xchg
dec
and
and
shll
loop
fidivs
insl
xchg
stos
dec
xchg
and
xchg
dec
push
mov
enter
jo
gs
push
fistpll
movsl
shrb
es
dec
jmp
idiv
mulb
movsb
and
mov
xchg
idiv
pop
test
shr
jnp
push
fiadds
je
cmp
push
shll
dec
and
pop
cmpsl
jnp
jge
xor
xor
mov
out
inc
adc
inc
je
in
inc
mov
lahf
mov
scas
movsb
lods
lcall
pop
ss
movsb
inc
and
lea
popa
xor
in
xor
push
fs
iret
push
xlat
xchg
pop
dec
pop
inc
fildl
cs
xchg
ss
cmpsl
jp
shrb
ret
ret
sub
pusha
das
cld
mov
stc
jnp
shl
pop
outsb
dec
out
outsb
out
jo
adc
std
imul
and
out
leave
data16
dec
cmp
jnp
push
pop
xor
push
dec
lahf
jge
mov
add
push
leave
sbb
inc
ljmp
mov
mov
add
add
sub
xchg
and
adc
lahf
adc
pushf
popa
inc
and
fldenv
popa
mov
out
or
divb
and
decl
sbb
imul
pop
aas
and
cwtl
insb
jno
cmpsb
pop
icebp
mov
outsb
lret
and
mov
pop
mov
inc
add
fimull
xchg
xor
scas
out
sbb
jno
mov
mov
mov
test
mov
fnstcw
lcall
cmp
mov
lds
push
fcomps
sbb
aam
or
fmull
adcl
push
mov
xchg
aad
imul
cmp
lea
inc
lock
mov
jns
adcl
bound
xchg
test
pop
add
cld
mov
mov
dec
or
andl
cmpsb
fcompl
mov
pop
jae
cmc
push
imul
mov
sub
cmp
popa
lea
out
idivl
or
and
xor
stc
pop
pop
xor
lods
jge
pop
je
bound
lret
enter
dec
pop
stos
add
or
cmp
jecxz
outsb
mov
fidivl
out
push
leave
insb
pop
mov
push
mov
or
adc
push
inc
stos
and
pop
daa
es
xchg
mov
popa
call
cmp
xor
mov
sbb
pop
pop
cmp
test
push
imul
lahf
jmp
xlat
add
sbb
ja
ficomps
imul
loop
loop
mov
clc
mov
inc
arpl
out
xchg
sahf
scas
dec
jg
xorl
xchg
stos
jne
lret
movsl
shll
idivl
jbe
jo
orb
add
add
lock
xchg
iret
inc
sub
incl
jecxz
sub
arpl
inc
outsb
outsl
add
repz
jae
cs
inc
xchg
movsl
dec
test
jge
mov
ud2
push
aam
mov
scas
imul
fdivrp
mov
mov
push
jmp
out
fistpll
ret
xor
loope,pn
inc
ret
jge
scas
lock
je
cmp
loope
push
fcomps
loope
mov
cmpsb
jmp
pop
int
push
xor
and
gs
push
in
pop
cltd
push
fldcw
lcall
add
jne
scas
out
xor
push
inc
inc
lret
cmpb
mov
aaa
cmp
add
sub
jge
jmp
mov
mov
clc
bound
and
adc
jne
jne
fs
cmpsl
pop
jbe
sub
insl
mov
mov
imul
push
add
cmp
mov
sub
pop
aad
mov
mov
test
mov
test
lods
and
cli
daa
lods
das
inc
lret
pop
push
adc
pop
rorl
aad
enter
lea
mov
movsl
icebp
jbe
dec
mov
roll
lea
add
push
jge
push
mov
mov
inc
stc
mov
dec
ret
ljmp
cmp
push
push
sub
repnz
jge
adc
and
pushf
or
jno
lods
ss
insl
scas
call
pop
push
loope
jl
dec
int
sub
or
call
cmp
or
movsb
mov
shll
fmuls
inc
je
cmp
fs
add
mov
dec
jmpw
push
cltd
insb
add
and
add
cmp
cmpsb
jb
out
ret
adc
sub
shlb
fsubs
inc
testb
dec
and
and
ret
inc
mov
jp
clc
icebp
dec
leave
and
outsl
jp
je
dec
cmpsl
push
imul
lahf
movsl
lret
test
fisubs
mov
sti
lock
jb
or
into
jo
fwait
inc
mov
aaa
test
jnp
out
mov
call
add
cmp
fdivrp
popf
pop
mov
push
mov
jl
and
mov
xchg
outsb
out
push
lock
mov
mov
sbb
or
push
mov
cs
in
gs
roll
or
call
ss
ljmp
sub
outsb
xchg
imul
fwait
dec
lcall
mov
dec
mov
jecxz
push
pop
inc
and
xor
ljmp
xchg
inc
lea
in
mov
aas
push
inc
sbb
lcall
lcall
lahf
enter
out
aam
jbe
mov
xor
test
ror
inc
push
lret
add
mov
popa
sti
cmc
dec
or
or
dec
addl
or
fs
or
lret
pop
cmp
push
jecxz
sub
loop
inc
mov
push
jmp
xchg
fnstcw
adc
pop
rol
enter
xchg
addr16
popf
lds
pop
into
mov
out
inc
inc
mov
dec
cmc
mov
ljmp
outsb
dec
push
cmp
jbe
add
sbb
inc
pop
bound
test
cld
lods
jbe
cmp
mov
inc
ja
in
enter
daa
fnstsw
cld
in
cmp
enter
insb
divb
fiadds
or
pop
sbb
imul
add
add
das
imul
jp
push
add
mov
cmp
imul
and
and
je
mov
test
orb
int
cli
sti
jg
mov
xchg
mov
jge
cmp
add
arpl
fistpl
data16
in
and
test
jp
dec
adc
sub
and
sub
test
xchg
cmp
sarb
or
jle
xlat
cmp
shl
dec
push
xchg
fwait
mov
pop
pop
mov
adc
enter
dec
push
fidivl
pusha
push
add
push
inc
in
not
divl
negb
mov
pushf
xor
imul
dec
and
enter
pop
enter
cmp
pop
jmp
inc
jle
dec
cmp
xlat
sbb
out
sbb
sbbl
and
adc
mov
aad
xlat
push
insb
fsts
stos
int
ret
inc
mov
xor
cmc
mov
jbe
out
push
mov
pop
imul
lea
arpl
mov
scas
mov
lcall
jp
adc
mul
imul
or
dec
das
or
call
dec
shlb
icebp
adc
push
mov
ss
lods
push
push
aas
mov
xchg
cmpb
pop
adc
sarl
or
ljmp
or
jb
ljmp
push
icebp
jnp
loop
push
add
lret
jge
jns
stos
test
adc
stos
mov
insb
aaa
add
xchg
insb
xchg
arpl
push
movsb
xor
jmp
push
dec
ss
insl
lea
js
out
rol
cmp
dec
stos
dec
pop
xchg
cmp
into
cli
hlt
cmpsb
les
ljmp
sbb
add
stos
aad
inc
sti
fdivs
jnp
jg
imul
les
imul
xor
xchg
sti
push
loope
jno
aas
orl
jp
popf
sbb
mov
push
pop
pop
add
add
adc
ja
cmp
js
adc
dec
test
pop
sbb
xor
cmpsb
sub
xor
push
imul
push
push
aaa
std
out
loope
or
or
cmpsb
push
xchg
xor
int3
shrl
inc
movsb
pop
call
xor
fdiv
rcrb
sub
sub
imul
icebp
out
jno
stos
loopne
frstor
xorl
arpl
cli
fidivrs
stos
xor
loop
pop
les
jb
imul
into
push
add
mov
push
mov
out
jp
mov
popa
std
mov
mov
inc
and
testl
jb
push
push
mov
push
lahf
imul
scas
and
andb
pop
js
scas
mov
xor
dec
adc
mov
popa
rolb
fwait
js
cmp
ja
pop
shll
cmpsl
sub
mov
sbbb
std
fwait
nop
and
inc
push
fisubs
out
add
scas
test
mov
push
dec
jne
mov
and
stos
push
xor
adc
and
mov
push
lods
cmp
into
push
cltd
push
mov
aas
jne
add
or
lods
inc
dec
dec
inc
addl
or
mov
xchg
or
mov
ds
sbb
movsb
xchg
andb
mov
fadds
ja
mov
and
add
das
mov
jne
fldcw
jne
mov
mov
fildll
fs
xor
sub
add
fwait
scas
fldt
popf
movsl
mov
adc
xchg
sahf
out
popa
aaa
jbe
das
cmpsb
scas
scas
cmp
mov
int3
cmpsb
inc
dec
ds
lock
cmpsl
mov
lcall
cld
jg
dec
sbb
ficomps
or
push
sahf
rorb
lcall
cli
sub
cmp
and
mov
arpl
bound
and
or
xchg
xor
xchg
cmp
pop
xchg
jae
outsb
jl
cmp
jbe
in
jbe
sti
xor
ja
add
xchg
sub
mov
jbe
ret
orb
xor
push
inc
mov
push
or
add
stos
loope
fnstenv
repz
iret
and
mov
test
enter
addr16
mov
xchg
push
mov
jae
fldenv
pop
or
jnp
inc
lods
hlt
sbb
mov
mov
test
popf
roll
pop
xchg
cmpsb
stos
and
xchg
pushf
stos
xchg
xor
into
push
rorl
ret
out
xor
push
xchg
pushf
int3
jb
loopne
adc
push
push
pop
dec
notb
negl
xchg
repz
testb
sub
sub
pop
push
int3
incb
stos
mov
imul
add
sti
xlat
and
xchg
cmp
scas
insl
or
lret
sahf
into
nop
dec
cmp
movsl
xchg
xor
mov
jg
mov
jbe
jmp
cmp
loope
test
ds
out
jle
popf
xchg
in
adc
nop
repz
ds
scas
lea
dec
sub
das
xor
xlat
add
or
ja
jbe
push
adc
adc
gs
or
lock
mov
add
or
in
add
cmpsb
push
lods
dec
xor
movsl
fs
dec
imul
outsb
or
leave
mov
icebp
xor
dec
cmpsl
loop
xchg
ljmp
cmp
rcll
lods
clc
push
xor
inc
adc
mov
jmp
mov
es
fisttpl
cmp
sbb
xchg
sbb
inc
daa
cmp
mov
test
xor
jbe
or
rcl
andl
jbe
mov
cmpsb
cmp
es
xor
pusha
sarl
mov
pop
xchg
xor
xchg
mov
sub
inc
lods
pop
in
hlt
xor
pmullw
fsub
mov
scas
dec
arpl
pop
imul
cmp
push
sti
inc
addl
mov
clc
in
pop
addl
fistl
xchg
mov
mov
andl
sbb
xchg
jp
repnz
fs
push
fnstenv
and
mov
popa
adc
orl
sbb
out
mov
sbb
faddl
repz
inc
mov
fnstenv
jno
mov
enter
fwait
jg
inc
cmp
fldl
mov
cmp
push
ja
jno
cmp
mov
lcall
sub
lock
inc
jb
xchg
roll
testb
jp
vmovss
push
xorl
jle
je,pn
add
pusha
inc
jbe
xchg
cmc
mov
xchg
pop
or
fldcw
sub
aaa
mov
xchg
cmp
pop
outsl
sbb
and
loopne
xchg
stos
clc
pop
xor
or
loopne
pop
movsb
enter
imul
jp
add
add
pop
and
dec
rol
xor
es
mov
pop
push
into
mov
enter
or
sahf
jns
iret
out
mov
cmp
jg
shrl
cltd
jae
lods
repnz
xchg
mov
xchg
xchg
popf
mov
sub
mov
jp
pop
in
mov
loop
adc
mov
adc
movsl
cmp
sub
fsubl
cmp
adc
pop
mov
cmp
std
sbb
stos
mov
test
ret
loop
dec
out
fisttpl
lds
cmp
dec
in
fsts
inc
push
lds
in
orl
ret
je
jl
movsb
nop
mov
in
popa
or
cs
test
cmpsl
mov
mov
negl
out
or
inc
in
mov
jmp
divl
cmpsb
inc
test
mov
or
or
jg
ja
cwtl
mov
out
aam
push
cmp
mov
imul
push
mov
pop
cmp
fucomip
pop
es
push
cld
and
adc
xchg
lds
xor
popf
dec
in
outsb
add
pop
cwtl
xchg
arpl
mov
push
push
cwtl
je
mov
roll
inc
addr16
inc
rclb
sbb
sbb
ret
pushf
jnp
movsb
pushf
lahf
daa
jecxz
mov
cmp
cwtl
sbb
mov
sub
xor
inc
mov
xor
or
mov
popf
adcl
dec
rclb
into
sub
and
loop
lods
in
jb
or
jmp
scas
pusha
jne
insl
cmp
clc
mov
mov
and
loop
sub
add
rep
pushf
mov
push
cmc
adc
push
pop
inc
push
mov
add
add
imul
test
xlat
scas
into
mul
xchg
test
jne
pop
test
call
leave
push
movsl
je
and
sub
dec
bound
pop
mov
dec
call
mov
aam
push
xchg
bndstx
dec
js
fmul
test
pop
and
imul
lahf
les
pop
fisubl
add
adc
sbb
jg
sbb
xor
push
cmp
shll
push
fdivrl
mov
inc
cmp
xchg
inc
ja
pop
cmp
push
mov
leave
dec
jge
lahf
loop
mov
push
push
inc
adc
and
out
les
mov
add
adcb
mov
mov
leave
adc
push
xchg
js
jge
mul
jl
push
or
xchg
lret
jne
or
loop
sub
or
out
mov
and
aad
cmp
jl
sbb
or
push
imul
cmc
dec
pop
mov
inc
push
xchg
pop
fs
lea
popl
xor
mov
sbb
jae
into
adc
jbe
mov
jo
call
movsl
or
int3
pushf
push
xor
std
xor
inc
scas
shrl
mov
lods
mov
enter
push
jle
cmpsb
fwait
out
xchg
jae
subl
cs
mov
mov
pop
int3
ror
pop
roll
scas
lods
idivb
mov
xchg
mov
test
cmp
int
and
sub
push
sub
nop
xchg
mov
jne
dec
nop
mov
sub
icebp
push
lret
pop
mov
insb
sbb
mov
or
pusha
icebp
fucomp
aaa
inc
mov
movsb
inc
mov
mov
add
add
dec
aas
pushf
cltd
es
fcomi
inc
mov
rclb
lahf
std
cmp
daa
hlt
jg
jl
lock
pop
cli
repz
shrb
fisubl
jbe
addr16
dec
pop
jb
movsl
jp
mov
pop
jmp
xchg
mov
ret
cli
jns
in
and
push
xor
push
sbb
push
fdivl
xor
dec
jno
lahf
sahf
sub
out
sarl
lock
cmpsl
in
aas
pop
or
sbb
mov
push
shll
inc
pop
dec
idiv
aam
mov
hlt
cld
mov
jge
test
jne
and
pop
adcl
dec
cld
mov
outsl
mov
xor
andl
and
popf
pop
xchg
mov
add
mov
push
ljmp
sub
sbb
sub
jmp
sub
negl
adc
adc
push
push
orl
add
xchg
jp
lahf
incb
mov
push
pushf
icebp
dec
dec
call
outsb
rorl
int
cmc
jecxz
fldcw
sub
test
hlt
or
inc
gs
incb
call
push
inc
xchg
add
mov
and
cmp
xlat
jbe
adc
mov
inc
insl
dec
add
in
or
push
out
lahf
xchg
or
outsl
add
lcall
jg
jbe
ljmp
shll
outsl
dec
es
es
test
imul
adc
mov
sub
fwait
xchg
adc
and
and
testl
or
in
cmpsl
jnp
adc
lods
loop
or
addr16
xor
push
dec
scas
lret
mov
jle
mov
inc
sarb
mov
cmp
in
iret
mov
repz
mov
jns
mov
xchg
cmp
mov
ret
and
jno
ds
pop
sbb
ja
fstpl
cmp
out
add
jmp
lea
scas
sub
xor
inc
outsb
movsl
and
inc
out
mov
out
inc
add
outsb
test
pop
xchg
decb
lea
ret
sbb
fildll
ljmp
or
in
xchg
orb
clc
es
aas
mov
jl
jno
jle
pusha
imul
sahf
imul
scas
addb
daa
jmp
sar
les
push
push
addr16
rorl
lahf
add
in
jne
or
mov
popf
shll
sbb
xchg
pop
dec
es
cmc
sbb
sbb
inc
movsb
scas
aam
sub
das
pop
out
ret
addr16
xchg
inc
sub
or
nop
scas
andl
xchg
or
jl
lcall
jl
sbb
pushf
mov
mov
and
xchg
xchg
mov
fwait
push
cmp
jle
jae
and
mov
ljmp
xor
adc
add
mov
mov
jb
icebp
lret
ss
cmp
fnstenv
ss
inc
aaa
pop
call
mov
gs
xor
nop
pop
dec
and
adc
aas
push
pop
cmpsl
push
insb
mull
ficomps
ljmp
fiadds
dec
pop
inc
pop
and
out
movsb
mov
popf
repz
dec
cli
xor
insb
jno
mov
aaa
ficoms
out
in
and
test
xor
push
adc
and
decb
or
jge
dec
dec
ja
mov
ror
adc
js
lahf
cwtl
sub
data16
add
mov
les
push
cmpsl
xor
cmc
popa
out
lds
xor
push
sahf
push
hlt
loop
jae
push
jge
jecxz,pn
in
mov
mov
jbe
pop
lods
mov
imul
or
arpl
andb
lret
pop
pop
fdivr
cmp
sub
jae
jnp
mov
andl
les
loopne
jle
xor
daa
lds
sbb
aam
lcall
sbb
xor
push
scas
adc
cmpsb
xor
xchg
movsb
fcompl
inc
or
outsb
or
sub
xor
adc
ljmp
in
push
push
add
bound
sahf
cmpsb
push
cmpl
fidivl
je
into
out
insl
cs
bound
or
dec
mov
xchg
lcall
push
xchg
xor
xor
pop
lds
inc
push
cmp
into
mov
subb
inc
cli
xor
enter
data16
pop
nop
je
mov
mov
or
gs
sub
rolb
xchg
lds
lret
sbb
rclb
bound
mulb
js
icebp
rcr
mov
dec
int3
decl
pop
insl
and
mov
sahf
iret
jecxz
jle
or
adc
aas
pop
dec
mov
push
mov
or
outsb
shll
mov
test
xchg
ret
sbb
cmp
xchg
pop
xchg
leave
jecxz
cs
push
mov
pushf
cmc
ret
push
xlat
bound
lods
xchg
shl
xchg
pop
insl
hlt
push
in
pop
jp
lret
ds
inc
cmp
jns
movsl
sub
adc
lock
jne
cmc
xlat
jb
movsb
dec
and
cmpsb
mov
dec
fiadds
mov
jns
fmul
int3
jnp
mov
pushf
or
mov
dec
ljmp
mov
xorb
out
jl
clc
dec
sub
push
push
sub
cld
jge
je
or
jp
inc
pushf
std
sub
mov
adc
cli
notb
test
cmp
cmp
in
sub
in
push
mov
scas
stos
ljmp
bound
aad
mov
inc
sub
mov
inc
xchg
les
lea
dec
notl
repnz
and
mov
xor
gs
push
xor
stos
cmpsb
fistpl
enter
sub
fwait
xchg
outsb
fdivrl
jle
sbbb
ja
icebp
test
out
mov
xchg
dec
dec
out
lea
and
and
dec
push
mov
mov
mov
pusha
shll
cli
or
les
notb
pop
pop
mov
mov
test
loop
mov
xorb
rorl
or
les
xor
cwtl
pusha
sub
test
test
add
stos
leave
xchg
mov
rclb
out
push
push
dec
test
sbb
test
idivb
adc
out
pop
jno
addr16
inc
jecxz
lret
pop
pop
stos
movsb
push
movsb
daa
mov
pop
push
sub
mov
sub
seto
aas
or
push
xchg
pop
addl
sbb
daa
dec
cmp
jne
cwtl
inc
sbb
dec
add
jne
iret
pop
icebp
idivl
and
clc
es
xchg
inc
jle
cltd
popa
jg
loope
cmpl
push
rcrb
scas
xlat
jo
xorl
pop
mov
sbb
mov
inc
shrl
pop
push
lea
loopne
fldcw
inc
out
mov
call
pop
jp
inc
xor
repz
inc
inc
repnz
jbe
push
sub
cmp
xor
cmp
cli
fdivl
xchg
xchg
loope
fwait
pusha
faddp
cmpsl
adc
fwait
sub
push
cmp
lahf
je
ljmp
aam
jmp
testb
inc
mov
or
jmp
mov
arpl
stos
pusha
nop
inc
mov
mov
mov
icebp
shlb
push
inc
arpl
rol
cli
xor
fs
into
jne
xor
dec
mov
xchg
pop
std
xor
lahf
sub
pop
mov
jmp
roll
stc
test
cmpl
mov
cmp
pop
ja
push
inc
mov
xchg
add
je
or
inc
jp
push
push
jno
aaa
mov
dec
in
loop
cltd
mov
push
pop
lret
push
add
xor
mov
fnsave
out
add
mov
xchg
inc
cwtl
and
negl
lea
shrb
movsl
mov
out
mov
jno
int
jb
xor
rcrl
dec
sbb
repz
jmp
imul
push
outsb
aas
lods
mov
lea
push
test
bound
push
leave
loope
mov
dec
cmpl
jb
jnp
and
gs
sahf
shl
mov
mov
and
jmp
adc
sbb
xchg
lret
loopne
jmp
stos
popa
out
pop
cmpsb
std
xchg
xchg
mov
inc
push
imul
and
pop
adc
dec
shlb
sbb
ss
jmp
cld
xor
hlt
cld
lret
aaa
div
fisttps
sti
dec
fidivrl
cmp
pop
lock
mov
push
inc
in
xchg
push
cmp
push
and
es
popf
add
push
jbe
or
xor
jmp
out
shl
test
adc
inc
sbb
push
lret
and
and
mov
xchg
idivl
movsb
dec
out
fmuls
clc
xchg
out
enter
int3
xor
inc
mov
inc
xchg
sbb
cmp
or
jae
aaa
cmp
bnd
mov
cmp
dec
test
fimuls
mov
inc
push
xchg
sub
mov
xchg
add
inc
cmp
push
jb
or
popf
jbe
outsl
outsl
hlt
loop
loope
lds
lcall
ficoms
adcl
mov
pop
ds
push
into
stos
cmp
dec
cwtl
inc
into
sub
sbb
pop
cmp
mov
mov
loope
mov
pop
mov
fistps
and
insb
sbb
fdivrs
iret
pop
lret
out
mov
lcall
int
or
mov
imul
les
xchg
jmp
cmpb
mov
out
imul
ret
jb
insl
stos
inc
mov
or
mov
xor
cmp
es
aad
mov
jo
movsl
xchg
xchg
scas
lds
rcrl
lds
test
sub
pop
sub
mov
pushf
popf
or
leave
sbb
sbb
mov
jg
int
xchg
jl
add
scas
and
outsl
mov
gs
das
adc
push
int
ss
repnz
xorb
pop
fbstp
daa
pushf
jno
orb
xlat
and
adc
loopne
add
add
fcom
iret
xor
mov
pop
push
cmp
add
out
movsl
pop
mov
push
out
inc
clc
cs
cmpsb
jg
fcomps
and
mov
sub
xchg
in
xor
fidivl
in
leave
rorl
push
mov
loopne
xlat
out
or
out
and
cmpsb
xchg
and
fs
push
sahf
lret
xor
and
or
xor
inc
cmp
sub
xor
push
add
and
das
xor
dec
sbbl
mov
or
fs
jno
add
and
loopne
push
sub
ret
gs
or
cmp
push
push
sbb
iret
jecxz
xchg
dec
mov
mov
daa
incb
sub
cld
cmp
out
jbe
jo
notl
out
jge
imul
aas
inc
es
sbb
gs
out
sub
insb
jp
aam
sarl
leave
sbb
loop
imul
xor
mov
jp
xchg
and
inc
lahf
mov
inc
xorl
cmp
push
iret
jne
or
ret
pop
dec
jl
and
and
inc
leave
and
push
jmp
cmp
mov
sub
sub
es
add
mov
in
sub
out
test
popf
hlt
or
sub
inc
push
lods
pop
pop
fwait
push
jns
scas
xor
negb
out
movb
fcmovnb
sub
dec
pop
jecxz
fcomip
in
pop
lcall
push
xchg
aaa
jne
cmovbe
mov
mov
pop
test
fwait
data16
add
enter
lret
jns
sti
dec
cmp
in
sarl
aad
lods
cmpsb
je
push
outsb
pop
idivb
mov
mov
add
add
xchg
xor
cmp
frstor
pop
repz
cmp
xor
mov
or
cmpsb
aad
frstor
int
mov
dec
push
es
repz
negl
insb
inc
add
mov
pop
pop
mov
adc
das
stos
movsl
sahf
cmpsl
addl
pop
icebp
enter
push
add
bound
pop
lcall
or
xchg
sub
mov
cld
push
sarl
mov
loop
scas
adc
cmovne
jle
mov
int3
or
cmpsl
jo
push
imulb
sbbl
sbb
push
inc
jl
insb
or
pusha
test
push
nop
addr16
int
sahf
xor
xor
pop
stos
aaa
outsb
jl
das
push
rcrb
inc
rcrl
call
scas
xor
xor
mov
push
das
mov
cmp
movl
lods
loope
dec
lret
dec
frstor
int3
mov
sti
movsb
lea
and
inc
mov
inc
lods
popa
int3
jle
jp
jp
rol
cmp
add
outsl
lock
int
push
fidivrs
repz
jae
inc
or
xchg
sub
jmp
aam
and
mov
and
imulb
aaa
xchg
mov
int3
clc
pop
rolb
adc
icebp
aaa
jge
loope
cli
sarb
pop
pop
insl
cmc
scas
ljmp
mov
fs
cmp
inc
jae
je
xchg
add
push
mov
pop
dec
mov
aaa
push
mov
scas
clc
stc
xor
cwtl
mov
sbbb
jnp
fbld
ret
jo
outsl
fdivrs
sbb
lea
and
out
and
shrl
ljmp
icebp
loope
in
mov
mov
jae
aam
fs
cmp
gs
mov
lods
sti
push
xchg
aam
mov
addr16
fcompl
or
es
testb
push
rolb
shl
jo
inc
mov
xor
lcall
push
fwait
xchg
inc
adc
and
mov
stos
dec
mov
das
jge
xor
daa
jle
and
loop
xchg
push
rcll
xchg
dec
cs
push
mov
inc
inc
or
sub
movsb
or
cs
lret
stc
fdivl
loope
jmp
imul
xor
repnz
inc
pop
mov
pop
xor
xchg
fnsave
aam
nop
mov
bound
stos
scas
fs
mov
test
and
lret
jne
incl
inc
mov
repz
rcrb
ja
xchg
sbb
cmp
popf
sbb
or
push
xchg
popf
pop
je
or
test
jp
xor
mov
decb
and
enter
sti
aaa
adc
adc
in
scas
out
aam
mov
sti
dec
mov
loop
cs
enter
sbb
mov
dec
xor
movsb
imul
mov
cmpsb
xchg
cmc
fisttpll
xor
in
ret
adc
xchg
mov
xchg
into
mov
add
iret
mov
jb
mov
dec
xor
movsb
cmpsl
cmpsb
xchg
or
adc
sarb
mov
sbb
sarl
test
pop
in
mov
movsb
xchg
jecxz
js
pop
jb
loope
bnd
ret
mov
fwait
mov
in
ss
pop
hlt
repz
into
xor
xor
js
cmp
mov
and
add
pop
aaa
cmc
push
sub
enter
xlat
add
arpl
push
mov
sub
mov
sub
aam
test
inc
incb
add
add
xchg
pop
out
jo
xlat
add
mov
jge
lods
push
pop
je
jae
push
loopne
es
stos
jae
ror
mov
xlat
call
aaa
andb
mov
cmc
push
movsb
xchg
lea
es
popa
inc
xor
push
xchg
sbb
cmp
outsl
or
inc
pushf
jno
dec
xchg
jl
pop
sub
push
sbb
stc
pop
jmp
mov
mov
mov
jmp
mov
cmp
cmp
mov
test
push
add
lds
addr16
mov
cld
fstp
lret
or
sub
lcall
pop
push
pop
pop
iret
sub
notw
jne
mov
insb
es
clc
cmp
fimull
lock
mov
loopne
sbbb
jo
dec
rcrl
aad
ljmp
test
fisubrs
cmpsb
or
insl
mov
cmp
test
into
ja
shll
push
xor
jle
sbb
inc
andb
mov
push
sahf
int
or
lods
add
mov
mov
cmc
pop
stos
sub
xlat
call
xchg
xchg
adc
adc
push
adcl
xor
test
out
cmpsl
pop
xor
push
jle
lret
testl
pop
push
lea
ja
inc
bound
cmp
cmpsl
bnd
cltd
lcall
out
and
xor
pop
fistl
lock
cli
clc
out
fs
das
rcll
dec
add
push
mov
loop
mov
jg
jge
sahf
and
imul
mov
cmp
pop
shr
jb
stc
adc
shlb
add
add
mov
ss
in
out
fistpl
xchg
popa
adc
pop
dec
jmp
or
and
and
add
imul
push
push
cltd
rol
push
pushf
inc
sbb
push
sub
adc
push
shlb
and
push
sbb
adc
popf
ficoms
and
or
push
adc
push
push
dec
xor
shrl
xchg
or
test
aas
jle
subl
clc
or
fisubs
lock
cltd
loop
addb
cmp
rclb
das
push
lgs
xor
aam
lahf
inc
mov
add
push
jmp
fs
mov
dec
inc
sbb
out
ds
imul
jmp
add
out
sub
stos
hlt
or
imul
mov
fsubrs
push
mov
xor
daa
jl
mov
push
jae
push
aad
or
pop
push
push
jg
aam
cld
pop
int3
mov
lods
mov
ds
ficoml
sbb
adc
lcall
jmp
mov
jecxz
call
inc
notb
push
imulb
xor
shr
insb
jmp
fld
mov
inc
ret
cli
add
outsl
movsb
or
outsb
out
mov
in
sbb
lret
rolb
mov
push
and
ljmp
into
xor
repz
push
mov
mov
and
mov
pushf
inc
jno
pop
pop
cmc
shl
adc
mov
cmp
or
mov
pushf
sahf
test
sbb
popa
pop
sti
in
push
push
fnsave
sbb
add
inc
fmul
aas
push
cli
cli
pop
jl
adc
mov
mov
les
imul
loope
ljmp
jg
mov
and
pop
pop
or
pop
jg
add
add
jmp
xchg
decb
adc
data16
imul
sti
pop
mov
fnstenv
shll
sbb
pop
fisubrs
jge
or
xchg
sub
mov
gs
loopne
push
or
mov
rclb
adc
testb
ss
xchg
imul
pusha
ret
dec
mov
in
mov
and
mov
jecxz
fs
or
loopne
or
mov
push
push
call
lods
imulb
xor
pop
fdivrs
and
jg
mov
orb
push
and
daa
sbbl
sarb
cwtl
mov
in
cs
in
mov
xchg
pop
aad
jnp
cltd
inc
cmp
or
std
adc
add
ret
cmp
idivb
outsl
out
cmp
aas
jnp
xor
stos
mov
rep
iret
movsl
lcall
andb
push
xor
and
scas
mov
push
rolb
jno
gs
mov
mov
jle,pn
sbb
push
int
mov
inc
pusha
xchg
adc
imul
and
add
push
mov
out
shl
jecxz
std
pop
mov
xlat
cmp
sbb
add
adc
sub
pop
add
pop
outsl
in
int
popf
xor
jae
dec
fcmovnb
iret
inc
int
in
fwait
test
loop
sub
adc
out
mov
xchg
push
cltd
sub
push
sub
and
aas
jb
xchg
int3
std
movsl
xchg
sub
je
or
call
or
dec
sbb
int3
sbbl
mov
jmp
fsub
lret
testb
ret
imul
sub
add
inc
inc
sub
jae
lahf
sbb
cmc
push
inc
add
rcll
addr16
int
dec
pop
pop
sahf
int3
jae
icebp
hlt
movsb
dec
lods
xchg
xlat
sbb
test
jae
cmp
ret
es
cmc
mov
cmc
inc
jnp
fbld
loope
hlt
inc
lret
aas
incb
out
rcll
lea
test
inc
pop
jg
pop
aaa
popa
mov
fisttpl
lea
mov
test
es
mul
div
push
mov
dec
mov
dec
stc
push
jne
or
loope
std
xchg
cmp
out
jae
mov
pop
pop
pop
das
inc
out
orl
addr16
dec
icebp
fstps
rorb
js
xchg
mov
js
dec
lcall
test
bound
xchg
and
in
cld
hlt
add
scas
add
ljmp
jmp
ljmp
or
lcall
inc
arpl
stos
inc
inc
fiadds
adcb
lahf
in
pop
push
dec
in
pushf
xlat
push
addr16
dec
mov
dec
es
mov
mov
jns
or
les
push
xor
push
push
push
xchg
scas
lahf
ja
cs
addr16
jnp
cmp
sbb
push
jbe
hlt
push
xchg
or
cli
scas
mov
nop
jne
push
testb
cli
xchg
je
cmpb
push
inc
xchg
push
in
and
es
xchg
test
aas
or
stos
mov
fistl
mov
xor
and
outsb
pop
adc
repnz
cwtl
mov
mov
mov
cltd
and
xchg
mov
mov
in
scas
or
mov
ds
ret
add
mov
loopne
mov
ret
pop
mov
movsb
fwait
call
add
jg
lods
push
es
stos
insb
inc
mov
repnz
inc
pop
std
in
in
addr16
shll
sub
std
je
outsb
jmp
aam
out
inc
in
frndint
js
pusha
mov
dec
les
sbb
and
xor
repz
popl
jecxz
and
dec
jb
aam
jns
cld
stos
mov
mov
mov
sbb
inc
fimuls
sahf
push
pop
push
xchg
ss
mov
mov
pop
pop
push
pop
xor
fsubrs
xchg
test
cmp
enter
out
lahf
iret
rorl
in
dec
mov
movsb
push
adc
pushf
pop
sbb
sub
jb
xchg
and
gs
cmpsl
sbb
jo
xor
out
xchg
lods
insb
and
push
xor
xchg
pop
sbb
or
in
fsts
mov
and
mov
out
pop
sbb
mov
lods
shlb
sahf
pop
add
out
in
jno
hlt
daa
inc
push
mov
sub
nop
lock
mov
pushl
or
adc
out
xchg
cmpsb
cs
pop
xor
aaa
xlat
outsl
lock
in
lds
jne
imul
or
decl
cmp
dec
shll
int
aad
xchg
lahf
inc
test
add
xchg
xchg
iret
cld
lret
inc
push
and
add
push
adc
rcrl
or
stos
je
mov
or
fiaddl
popa
jo
test
cltd
push
loopne
fcmovnbe
adc
int3
mov
adc
repnz
pop
std
and
cld
push
inc
aaa
push
les
mov
movsl
fldenv
aas
stos
mov
movsb
add
mov
adc
les
mov
mov
gs
mov
dec
mov
add
jnp
xor
scas
stos
sar
insl
inc
inc
xchg
dec
ret
jno
incl
add
add
sti
outsl
inc
xorb
jne
pop
add
into
jae
add
in
cmp
jne,pn
js
sub
insb
xor
scas
mov
jl
cmp
test
xor
jle
inc
xorb
lahf
dec
cmp
sti
lea
aam
int
cmp
inc
dec
cmp
repz
clc
xorb
and
cli
mov
adc
jmp
jb
dec
mov
popf
daa
rol
sbb
and
js
movsb
lahf
in
icebp
mov
loop
outsl
mov
dec
add
jl
sbbb
dec
mov
clc
lret
mov
lods
ss
iret
lods
mov
int
cmpsb
rcrb
jg
popa
jnp
std
jecxz
mov
pop
mov
movsl
enter
dec
enter
push
shlb
insl
popf
outsb
adc
test
sbb
ret
pop
movsb
xor
cmp
outsl
sbb
les
in
pusha
jg
das
add
adcl
ret
xor
popa
repz
pop
push
arpl
jns
mov
jl
loope
cld
in
pop
adc
cs
fdivrs
nop
test
mov
mov
xor
xchg
xor
stos
insl
out
xor
adc
sbb
and
adc
cwtl
mov
mov
jb
out
stc
mov
loop
push
rcl
push
mov
xor
mov
push
pop
pop
imul
mov
mov
sub
test
xchg
test
cmpsl
sub
out
add
inc
pop
shll
lahf
xchg
sub
stos
repnz
imul
cmpb
cmc
jge
mov
stos
jecxz
bound
lds
scas
aas
jae
std
fwait
je
out
adc
mov
mov
das
shrl
mov
das
or
jno
sbb
push
xor
jp
sar
cmp
jmp
and
inc
and
icebp
mov
std
leave
mov
loop
lods
add
dec
call
jle
push
dec
xchg
pusha
sub
cmp
push
into
and
stos
push
imul
movsl
repnz
push
mov
popf
movsb
mov
pop
pop
stos
jmp
pop
dec
je
cmp
add
ss
xor
pusha
adc
xchg
jbe
inc
es
sub
push
inc
adc
gs
push
xchg
adc
xor
cmpb
lea
mov
movsl
dec
push
cmp
jne
movsb
out
and
scas
jg
adc
repnz
test
icebp
jmp
insb
enter
mov
add
mov
pop
div
sarb
hlt
and
jge
movsl
pop
sbbl
jno
hlt
push
in
mov
outsl
lret
inc
incl
adc
repz
pop
popf
stos
sahf
mov
lea
nop
jo
mov
jbe
iret
mov
dec
adc
out
inc
sub
fidivl
sub
loope
in
mulb
pop
xchg
fstpl
push
push
ja
popa
arpl
inc
jb
repnz
jns
xor
test
adc
xchg
cmp
lahf
mov
iret
sub
pop
mov
add
or
out
inc
push
divb
cwtl
adc
mov
mov
inc
mov
ss
xor
and
pop
pop
mov
and
sub
stos
outsl
in
mov
daa
pop
fwait
sub
insb
je
and
mov
out
clc
mov
xchg
popa
mov
dec
testl
push
mov
cmp
jecxz
aas
push
sub
jne
pop
xor
test
ja
inc
jg
xabort
or
push
popa
scas
fistpll
outsl
adc
mov
cmpsb
or
pop
xchg
dec
and
xchg
push
mov
pop
jns
aaa
xorb
pop
cmpsb
rolb
add
add
insl
aad
inc
or
in
and
jno
dec
push
mov
mov
xchg
push
pusha
popf
arpl
out
xchg
addr16
xor
or
mov
adc
jge
dec
sti
js
xor
es
xor
std
push
call
or
xchg
pop
ja
jmp
xchg
mov
lret
sahf
test
rcll
mov
lock
xchg
loopne
lods
push
or
cmp
xor
pop
xchg
add
into
ja
xchg
stc
in
std
pop
inc
inc
lods
call
fisubrl
push
lahf
bound
add
jno
jmp
add
or
fldl
xchg
lcall
fisttpl
add
ret
pop
repnz
xlat
lret
mov
pop
shlb
xor
lods
sub
mov
xorb
xchg
xchg
idivb
sbb
mov
xchg
test
ljmp
inc
sub
xchg
fcmove
arpl
out
xor
ret
int
mov
aam
push
fs
jmp
dec
jne
adc
inc
mov
cmp
sbb
cltd
je
dec
fwait
js
jmp
insb
sbb
xor
push
adc
adc
outsb
inc
pop
icebp
fbld
push
mov
pop
out
sub
and
outsl
mov
push
idivl
int
or
gs
fwait
push
ja
push
jno
push
out
lcall
inc
pop
xchg
sub
xlat
sti
mov
push
hlt
imul
inc
aas
mov
mov
jne
jp
mov
inc
sub
mov
mov
arpl
aad
sbbb
sub
cmp
mov
psraw
xlat
mov
testb
add
enter
movl
shlb
aaa
ds
sub
movsb
fistps
jmp
jnp
fimull
jno
sbb
jnp
cmpsl
sbb
cld
cmp
or
test
or
es
loopne
sarb
into
push
out
adc
pushw
mov
aaa
data16
mov
cmpb
lock
call
dec
push
shl
add
add
out
test
xlat
push
sub
hlt
cli
mov
ds
mov
sub
xor
rclb
clc
imul
xor
fsubp
xor
push
int3
jge
pop
in
iret
mov
adc
cmp
pop
mov
test
ja
xor
sbb
mov
aaa
inc
cltd
test
gs
ret
int
push
ret
sbb
loope
into
jb
fimull
push
adc
xchg
xchg
lret
cs
in
lahf
push
xor
lret
out
mov
fsub
adc
jbe
xor
fwait
mov
or
das
lret
mov
imul
and
mov
pop
ljmp
cld
add
fimuls
adc
push
out
andl
sar
push
lea
mov
ja
sbbb
mov
shll
jmp
ljmp
mov
push
lret
cmp
mov
pusha
dec
inc
pop
cs
mov
mov
mov
popl
inc
stos
and
inc
clc
out
nop
push
or
js
outsb
in
mov
cld
or
insb
int
or
insl
xor
and
movsl
aas
inc
data16
pop
and
ja
aaa
pop
insb
add
mov
out
mov
cmpsb
mov
aaa
in
push
xchg
sub
and
dec
repz
iret
mov
cmp
test
addl
mov
cld
test
jo
sbb
inc
das
sti
addr16
scas
popa
or
cmp
mov
addb
or
in
iret
cmp
psraw
pop
mov
mov
lcall
enter
sti
ret
mov
jp
and
cmp
cli
xor
and
int3
cmp
mov
sbb
push
out
pop
push
adc
mov
dec
xchg
mov
into
push
hlt
add
mov
mov
fsubs
pushf
hlt
inc
pop
imul
rclb
cmp
sub
in
clc
aas
les
es
into
add
jl
insb
mov
mov
add
negl
popf
mov
pop
sub
out
aaa
sbbl
cltd
cmpsb
mov
test
xor
mov
movsb
add
insl
mov
xorb
xor
aaa
push
and
jle
push
sbb
imul
xor
mov
jne
add
pop
daa
mov
ss
inc
and
adc
xchg
adc
cmp
inc
ret
sub
aas
enter
mov
cmc
cmp
out
add
add
inc
xchg
in
mov
push
fwait
xchg
pop
jb
lock
arpl
pop
aam
mov
jmp
xor
imul
mov
outsl
xlat
pop
jp
lret
add
sti
sub
xor
in
out
jmp
pop
or
ffreep
jns
fsubrs
jns
inc
cmp
enter
mov
enter
test
es
pop
mov
mov
arpl
outsl
aad
inc
cmp
je
enter
jo
mov
into
sti
dec
lods
jno
ljmp
add
push
mov
into
sub
imul
outsl
mov
notb
test
sbb
lret
mov
stos
jmp
ror
pusha
xor
xchg
and
aas
js
iret
mov
imul
add
shlb
sub
clc
sbb
enter
dec
call
enter
stos
adc
je
push
sbb
es
fsubrl
jl
jg
arpl
sbb
aas
sbb
sbb
test
or
movsb
adc
outsb
subb
repz
add
mov
mov
mov
sbb
insb
pop
mov
jns
lds
push
push
inc
and
fdivrp
and
gs
jge
push
mov
jp
lret
mov
jbe
push
nop
dec
insl
js
dec
or
fcmovnb
addr16
inc
jmp
ja
adc
inc
inc
ja
cmpl
fldenv
mov
cmpsb
fnstcw
je
shlb
xor
std
movsl
push
aaa
repnz
bound
xor
pop
inc
in
fdivs
mov
mov
cmp
sahf
mov
roll
mov
mov
lcall
jbe
dec
xchg
fiaddl
cwtl
push
push
inc
or
dec
jge
cmpl
inc
mov
movsb
testb
or
cld
insl
sub
clc
and
fisttpl
leave
push
loop
leave
push
xchg
shll
je
ss
in
pop
mov
pop
cltd
cmpsb
inc
cmpb
sub
ds
push
aaa
or
nop
mov
cwtl
mov
adc
sbb
enter
lods
cmovle
inc
cmpsl
mov
pop
lahf
and
das
xchg
add
imul
mov
fldt
pop
pop
pop
enter
mov
fmulp
pop
insl
dec
jl
push
dec
scas
std
xor
push
mov
cmp
rol
or
arpl
and
shll
cmp
stc
stos
js
inc
mov
sbb
sub
xchg
jl
xchg
imul
add
shll
fs
adc
or
pop
mov
or
pop
jbe
dec
aad
popa
outsl
movsb
mov
popa
push
sub
mov
jne
adc
push
cltd
push
adc
leave
push
mov
test
mov
sub
pop
cmpsb
mov
jp
cmp
adc
jne
xchg
aaa
xor
mov
insb
scas
pop
mov
sbb
mov
je
jne
dec
pop
mov
arpl
clc
mov
mov
loopne
imul
aad
xchg
aad
and
fisubrs
adc
shrl
sub
adc
push
iret
outsl
in
ljmp
leave
jnp
sbb
cltd
and
mov
jl
lret
stos
jnp
push
cmp
xchg
das
dec
or
and
pop
cmpsl
test
and
shrb
cmp
orb
cmc
or
jns
sub
pop
mov
mov
xchg
insb
test
xchg
rcrb
or
aam
out
test
dec
xchg
aad
popf
imul
call
xchg
jmp
lds
cmp
hlt
adc
and
in
sbb
or
push
ficoml
int
or
sub
les
imul
mov
push
mov
xchg
inc
iret
imul
xor
rclb
lahf
cld
xchg
xchg
cwtl
int
push
cmp
cmp
stos
mov
das
out
aad
push
inc
sbb
and
xor
bound
ficoms
dec
dec
in
add
xor
dec
xorb
fldcw
push
adc
movsb
or
fdivrs
sbb
sahf
pop
add
xchg
sbb
push
cwtl
mov
xchg
jo
push
fbld
arpl
sbb
inc
enter
xchg
addr16
negl
cmp
je
xchg
push
sbb
jae
pop
push
in
cltd
xchg
fwait
mov
pusha
push
sbb
dec
ret
dec
repnz
cmp
adc
ds
pop
les
xor
pop
mov
insl
and
add
sub
xchg
jecxz
sarb
les
cmp
popa
pop
lods
xchg
mov
dec
loopne
mov
cmpsl
xorb
mov
cmp
lock
pop
inc
in
sti
sbb
shrl
lahf
fs
outsb
push
cmp
movsb
jnp
xchg
dec
mov
adcb
mov
jmp
mov
xor
or
sub
insl
fucomi
out
push
xchg
pop
hlt
into
icebp
dec
stos
push
shll
mov
cli
pushf
scas
mov
xchg
fisttpll
mov
mov
popa
pop
aam
push
xlat
mov
sti
sub
sti
pop
jecxz
arpl
imul
and
shll
mov
mov
int
xchg
aam
cld
adc
xchg
in
pop
shlb
add
adc
mov
cmp
or
loope
sub
ja
imul
xchg
cli
es
sbb
add
add
or
lods
aam
bound
xor
mov
testb
ljmp
int
gs
mov
push
sub
mov
movsb
adc
and
gs
add
or
dec
adc
cmp
and
test
cwtl
mov
jmp
jo
jmp
jbe
mov
bound
loope
mov
pop
jbe
mov
dec
xchg
sti
pop
aas
adc
mov
mov
cmc
les
pop
sub
pop
pop
stc
push
push
and
xchg
inc
mov
and
mov
mov
and
mov
pop
ss
cmpsl
add
loop
mov
xor
setp
pop
lahf
out
outsl
mov
push
sbb
xor
push
xchg
or
sbb
fmuls
pusha
pop
jle
cmpsb
mov
arpl
push
inc
push
push
inc
mov
cmpsl
sbb
outsl
inc
sbb
push
stos
rol
out
mov
shrl
adc
adc
inc
sti
adc
xchg
pop
dec
lret
push
xchg
cmpsl
sub
cmp
out
lcall
dec
push
or
insb
cmpsl
bound
adc
lds
mov
adc
outsl
jo
push
data16
ret
mov
pusha
xchg
inc
cmpb
xchg
dec
dec
outsb
stos
hlt
lret
fisttpl
lds
insb
adc
cmp
pop
pop
divb
ljmp
enter
dec
enter
stos
cwtl
push
cli
mov
sub
ret
inc
out
push
xchg
inc
xchg
negl
xchg
cmp
aas
mov
push
movsb
jnp
mov
bound
mov
or
xchg
ret
nop
jge
ja
adc
cmp
pop
mov
out
adc
ja
mov
out
sbbb
xchg
enter
mov
cmpsl
pushf
add
mov
test
pop
loopne
shl
adc
lcall
cmp
mov
lret
ss
cmpsl
pushf
push
mov
cmpsl
jecxz
in
or
mov
roll
cltd
xor
xchg
or
mov
jp
mov
enter
mov
mov
stos
lahf
dec
push
bound
ret
lock
ja
xchg
jne
pop
test
jg
sbb
ss
das
or
stos
cli
out
cld
arpl
lock
testl
jg
cli
gs
outsl
mov
push
xchg
cs
aas
int3
out
add
insl
clc
adc
pop
les
jg
mov
ja
adc
xor
mov
jbe
inc
addl
and
test
bound
ss
or
dec
push
mov
push
add
mov
and
sub
sbb
pop
mov
or
xchg
scas
daa
pop
out
jle
ja
adc
jo
jecxz
cmp
sub
ret
ss
cmpsl
mov
push
out
push
xchg
push
xchg
imull
mov
pop
outsb
jle
iret
out
ret
jne
mov
outsl
mov
pop
cmpsb
out
loop
cmpsl
xchg
mov
not
and
push
addr16
out
ret
push
sub
leave
imul
mov
inc
mov
xchg
cwtl
imul
rclb
ja
pop
in
adc
pop
out
jp
repnz
int
add
aaa
mov
dec
mov
sub
inc
cs
mov
cld
or
outsb
into
adc
mov
push
sbb
loopne
dec
outsl
out
out
test
ja
pop
stos
pushf
pop
mov
ret
xlat
stos
shlb
out
rol
loop
add
mov
ret
jo
mov
jmp
and
pop
fistpl
jle
out
outsb
lret
push
mov
inc
ds
mov
mov
push
mov
xchg
jb
lahf
mov
cmpsb
hlt
xchg
sbb
lret
pop
add
out
xchg
adc
xor
or
ljmp
push
and
cmp
sbb
aaa
pop
jb
fildll
call
dec
data16
div
and
push
sub
out
out
cld
xor
cmp
push
je
movsb
pop
out
sahf
cli
push
out
push
das
xchg
lret
idivl
aas
out
ret
negl
mov
pop
cld
decb
inc
dec
mov
sbb
adc
jle
push
sahf
insl
or
sbb
and
mov
xor
jns
push
add
out
aas
imul
add
scas
mov
jle
out
mov
and
lret
outsl
jb
fisubrl
in
fildl
jno
pop
out
outsl
mov
mov
fistps
pop
adc
push
pusha
test
shl
sub
push
add
xor
ret
je
movsb
cmc
ljmp
add
add
loop
cld
fstp
pop
xor
cmp
push
xchg
cmp
enter
mov
decb
jle
out
outsb
xchg
cmp
mov
dec
adc
mov
or
out
fcoms
pushf
imul
mov
imull
add
out
fcoms
xor
or
je
movsb
shr
out
adc
inc
lods
or
aas
and
std
pop
sbb
testb
push
enter
mov
in
pop
leave
pop
and
out
outsb
mov
pop
mov
cmpsl
pop
cs
imul
push
jle
mov
mov
decb
gs
test
out
outsb
push
cmp
cmpsl
mov
cmp
int3
enter
add
and
clc
cmpsl
sbb
or
lock
mov
lret
add
dec
mov
testl
fucomp
cmp
xor
add
xor
jo
xor
inc
add
inc
mov
test
aas
mov
jb
pop
loop
test
pusha
scas
cltd
jne
mov
addr16
aas
jbe
push
push
push
inc
or
out
loopne
movsl
xchg
mov
not
and
push
leave
dec
xchg
cs
adc
adcb
sub
add
outsl
mov
cmc
out
ja
dec
scas
aas
mov
lea
push
or
mov
out
cmp
push
lock
je
push
mov
inc
sub
push
inc
sbb
push
xor
pusha
and
mov
lea
jle
out
jo
mov
push
push
push
inc
or
out
loopne
movsl
add
jp
jle
out
pusha
insl
cmp
shl
sub
push
add
xor
ret
je
movsb
cmc
ljmp
add
add
loop
cld
fstp
pop
xor
jl
mov
jg
movsb
jb
sbb
aas
nop
push
sub
fs
and
xor
je
and
push
pop
dec
xchg
mov
bound
push
push
push
insb
or
out
hlt
xchg
leave
xchg
lret
enter
out
test
add
out
hlt
adc
xor
lret
je
movsb
or
inc
pop
les
cmp
fidivrl
hlt
fst
pop
sub
xor
push
xchg
inc
inc
or
inc
xor
push
and
incb
jle
out
outsb
lea
insb
xor
jne
mov
jl
adc
push
mov
xchg
sub
enter
mov
sbb
cmp
jle
out
outsb
sub
rclb
movsb
adc
add
clc
in
fsubrs
ss
out
push
enter
out
push
lret
sub
js
cmp
pop
and
push
xchg
add
out
dec
adc
xor
movsb
popa
ljmp
jno
les
out
xchg
addl
scas
pop
idivl
mov
outsb
sbbb
push
mov
jb
fwait
jbe
push
pop
jno
mov
out
outsb
bound
mov
sahf
cmpsl
mov
incl
add
add
mov
mov
adc
ss
cmpsl
and
jo
jae
mov
outsb
lea
push
test
in
mov
xchg
cmp
pop
mov
xor
jl
stc
nop
repz
aas
test
dec
push
movsb
aad
and
pop
mov
aaa
movsl
lahf
aam
mov
incb
and
aas
adc
sarb
and
cmc
cmp
outsl
cmp
repnz
ret
lods
mov
popa
rorl
cld
push
sub
cmp
inc
mov
lods
jae
inc
xor
jle
xchg
mov
xchg
jl
enter
and
push
inc
clc
lods
test
fdivs
fiaddl
inc
sub
sub
mov
mov
lock
adc
sub
test
daa
sbb
jge
out
mov
mov
push
pop
inc
push
cmp
or
sub
dec
inc
sub
mov
mov
xchg
dec
loopne
lret
or
cmp
pop
outsl
sub
rcr
fldenv
aaa
add
and
ja
lods
jle
cmc
xor
cmp
xor
nop
in
lcall
and
xchg
xor
and
or
jg
lahf
ret
fs
sbb
adc
rol
bound
sti
dec
fcmovbe
into
pop
test
fwait
movsb
daa
orl
xchg
pushf
bound
imul
clc
stos
popa
mov
inc
scas
pop
mov
lea
adc
inc
les
jge
int
imull
jge
ret
cmpsb
mov
arpl
cld
sub
xchg
ss
loopne
ret
mov
add
dec
mov
das
js
daa
in
xorb
test
jbe
pop
outsb
push
or
mov
and
add
add
imul
or
pop
and
xchg
or
mov
jnp
loope
push
shl
mov
mov
insl
mov
mov
or
scas
mov
daa
clc
inc
jo
push
mov
xchg
and
les
lcall
sub
lahf
or
jp
jle
pop
inc
dec
dec
adc
ret
imul
push
mov
outsl
out
xchg
and
inc
cmpsb
shrb
mov
inc
dec
cmp
or
enterw
cmp
bound
xchg
cmpsl
add
pushf
popa
dec
xchg
push
add
sbb
push
xchg
xchg
mov
mov
inc
rcrb
insl
push
pop
mov
pop
ret
dec
adc
inc
jns
xchg
mov
pop
pop
sub
sub
bound
mov
jp
fmul
mov
sysret
loope
sbb
xor
ret
or
xchg
jl
xor
notb
mov
inc
sub
pop
bound
dec
in
lock
outsb
leave
popf
and
jne
mov
pop
mov
pop
pop
insb
stos
pop
aad
cmp
shlb
cmpsb
int
int
mov
and
jle
push
fisubrs
rorb
inc
add
outsb
cmpl
aas
sbbb
cmp
test
lds
push
pop
push
sbb
ret
push
ja
dec
xchg
add
in
loope
mov
mov
aaa
mov
xor
data16
mov
ficoms
jp
pop
pop
icebp
xor
mov
out
repnz
aaa
popf
push
xchg
lret
xchg
andl
pop
and
lds
inc
fldenv
pusha
roll
add
inc
cmpsb
adc
jmp
lea
in
adc
pop
mov
mov
ror
mov
jmp
push
shr
adc
fisubrl
push
inc
fs
and
xor
out
jmp
jle
gs
enter
or
pop
test
jl
in
dec
jb
in
adc
mov
jbe
fs
rcrl
xorb
imul
cltd
aas
pop
pop
rorl
movsb
jne
pop
dec
shlb
sbb
mov
push
pop
add
push
lret
mov
inc
ret
out
mov
inc
mov
push
sub
dec
cmp
or
push
movsl
or
add
push
sbb
popa
stc
add
sarl
mov
or
das
insl
mov
inc
xchg
stos
sti
ja
in
push
pop
mov
mov
fs
lahf
and
repz
xchg
jb
xor
and
xor
xor
inc
incl
dec
and
jl
mov
mov
stos
mov
and
lods
mov
imul
and
es
sti
adc
lock
pop
or
loop
mov
stos
cs
scas
imul
and
and
lahf
push
js
push
xchg
das
test
mov
sub
mov
xorb
and
mov
nop
outsl
dec
call
xchg
imul
lcall
inc
addr16
or
sbbl
je
sahf
mov
jbe
push
fadd
stos
ljmp
sahf
jl
adc
jo
sub
push
push
addr16
dec
data16
xchg
insb
andb
jle
push
ficoml
dec
push
lret
add
add
dec
inc
aas
xor
sub
or
aad
cli
adc
or
pop
out
or
cmp
mov
popa
negl
cmpsl
push
cs
adc
adc
les
outsb
mov
fsubl
jb
ja
jb
test
push
pop
mull
push
mov
js
ds
fcomps
fcoms
adc
addl
sbb
pop
or
out
outsb
daa
cmp
lock
and
mov
das
sub
xchg
bound
stc
data16
cli
mov
cld
mov
inc
cmp
out
and
xor
fimull
fdivs
mov
xchg
adc
mov
xchg
pop
out
add
pop
cmpb
push
mov
negl
jmp
push
je
in
outsl
add
dec
cwtl
mov
push
stos
xchg
mov
mov
sti
ss
aam
out
sub
dec
cli
xchg
ret
sub
dec
ja
cmpsl
or
or
sub
or
push
xchg
fcoml
mov
out
xchg
xchg
sti
xchg
lret
adc
push
mov
divl
je
mov
notb
fldl
mov
andl
push
and
push
adcl
pop
cmp
movsb
inc
mov
adc
addr16
jmp
in
mov
in
cmp
jb
inc
mov
cmpsl
push
xchg
out
sti
xchg
mov
mov
cmpsl
cld
cs
adc
test
jne
fcoml
dec
cltd
pop
outsl
cmp
xorl
in
out
cmpsb
mov
divl
and
push
xchg
add
and
inc
xor
or
jae
or
mov
mov
je
movsb
xor
jg
adc
adc
pusha
xor
add
add
xchg
mov
push
add
or
sub
or
js
les
stos
stos
or
out
push
inc
mov
rolb
ljmp
sbb
pop
mov
out
xchg
notl
sbb
aad
or
and
xchg
jg
fstl
mov
xchg
hlt
inc
dec
enter
mov
cld
push
aad
xchg
mov
mov
sbb
dec
out
xlat
es
inc
out
les
cvtpi2ps
pop
aas
les
les
out
xchg
cmpsl
xchg
lret
fdiv
mov
mov
push
push
push
xchg
mov
add
sbb
adc
pop
xchg
decb
les
test
rcrb
sbb
cld
add
out
iret
data16
inc
adcb
push
mul
je
and
jo
jo
sbb
or
sub
iret
test
or
xchg
and
pop
sub
shll
fwait
divb
ljmp
push
ss
gs
jg
xor
icebp
or
ror
add
and
sub
push
lcall
gs
jnp
inc
lret
jle
pop
jl
pop
push
divl
out
in
ret
sub
pop
mov
aas
push
cmp
pop
adc
push
ret
pop
pop
push
or
add
and
fisttpll
or
insb
out
jecxz
or
or
pop
jae
cmpsb
lock
cltd
das
xor
js
push
mov
loopne
cmp
out
lock
out
adc
push
push
xor
aad
cmp
and
inc
push
cmp
jo
pop
out
jmp
xchg
aas
mov
mov
in
mov
in
clc
inc
mov
aaa
arpl
xlat
aas
jmp
imul
sbb
jmp
push
sub
xchg
rorl
and
cltd
lret
pop
fsubrp
push
push
inc
jle
out
movhps
lret
aaa
lock
xorb
fisttpll
jle
mov
cmp
push
mov
sbb
push
inc
dec
mov
ss
clc
insb
adc
dec
mov
or
shll
fdivl
adcl
outsb
xchg
loop
jl
adc
sub
movnti
les
pop
mov
lret
lcall
pop
mov
sub
xor
pop
jo
inc
repnz
stos
jae
gs
icebp
dec
cs
xlat
arpl
inc
adc
dec
xor
fnstsw
dec
sub
jecxz
sub
into
jo
sbb
inc
stos
jl
sub
cmp
and
and
cmp
fidivrl
ljmp
push
add
ljmp
and
loope
rcrb
cmp
and
and
clc
nop
pop
in
add
mov
lcall
sbb
mov
fcomp
jbe
sbb
clc
out
outsb
repz
mov
mov
adc
in
push
sub
adc
orb
repz
repnz
mov
mov
scas
lds
xlat
lret
imul
jl
ror
out
dec
das
testl
addb
addl
inc
rol
pop
in
inc
jp
pusha
roll
in
ljmp
cli
jne
cmp
xor
in
aas
dec
add
and
movsb
jmp
push
or
lods
add
and
sub
push
sub
repnz
sbb
stos
xor
pop
add
repnz
out
sub
fbstp
pop
push
xchg
out
mov
xor
mov
sbb
and
sahf
and
pop
or
xor
dec
jno
cmp
xor
adc
xchg
insl
ja
cmp
cmpsb
pop
rclb
adc
pop
aam
int3
je
sbb
or
jns
dec
cmpb
xor
imul
adc
rol
mov
ds
mov
or
pop
les
xchg
adc
dec
icebp
push
pushf
mov
cmc
daa
or
push
lcall
or
adc
popa
push
es
xchg
inc
orb
add
ret
ret
inc
test
filds
shl
jno
sub
push
call
sub
ficomps
movsl
mov
pop
mov
shll
test
push
or
sbb
outsl
daa
cmp
pushf
es
ret
inc
rclb
xchg
lret
dec
int3
out
xchg
push
loope
sub
insl
mov
aad
push
pop
jno
aas
es
cs
xor
out
cmp
pop
cmpsl
push
mov
enter
mulb
mov
hlt
je
inc
stos
jg
testb
pop
jnp
cmp
cmp
xor
out
leave
lahf
push
jp
loopne
fmull
xor
adc
pop
lock
sbb
and
jmp
adc
inc
addr16
xchg
fdivr
fwait
adc
outsl
arpl
and
adc
jne
js
dec
inc
push
inc
cmp
shr
jmp
mov
jmp
pop
mov
insb
hlt
pop
inc
repz
shlb
cmpl
arpl
jmp
xchg
mov
cli
es
sahf
cmpsb
or
aas
or
adc
or
and
arpl
outsb
push
add
shll
xchg
sbb
fst
notb
or
pop
cmp
sti
pop
cwtl
ror
xor
js
cs
mov
enter
lods
repnz
cmp
rcr
sahf
outsb
imul
lds
aaa
and
push
cmp
xor
in
out
and
cmp
and
or
pop
jbe
jp
jl
imul
or
lds
xlat
inc
iret
inc
cmpsb
fcoms
push
add
aad
mov
aad
leave
lret
insb
sbb
adc
xchg
or
jl
dec
lds
mov
in
fcmovnbe
xor
loop
xchg
fld
lcall
cltd
pusha
mov
scas
sahf
enter
cmp
lahf
stos
adc
jle
cmp
add
and
add
lea
loop
js
movsb
xchg
sub
lret
adc
cmc
aad
out
lods
fdivrp
int
jo
call
outsb
jnp
jbe
adc
inc
fists
sub
xor
adc
ds
sbb
pop
sbb
and
insb
dec
xor
jns
jne
mov
mov
out
repz
in
fidivrs
or
adc
out
and
add
add
lahf
xlat
fwait
and
loopne
fsubrs
push
stos
inc
and
push
fdiv
addr16
aad
or
imul
mov
cltd
insb
leave
add
sub
rcrb
lea
dec
fnsave
mov
mov
push
inc
add
pushf
call
mov
mov
enter
lea
shlb
dec
xor
jns
cld
fwait
cld
cmpsl
add
sbb
and
push
pop
idiv
daa
add
cmp
pop
lds
lcall
pop
ror
xlat
inc
dec
lret
out
call
lret
push
fmull
cltd
mov
lods
aam
fwait
mov
repz
add
adc
mov
outsl
jl
rorb
popf
adc
adc
pop
jmp
lods
sub
ds
jge
pop
mov
addr16
cmp
xchg
cwtl
negb
pop
push
mov
std
iret
daa
xor
rolb
rorb
iret
sbb
lcall
rorb
pop
jo
jp
sub
out
test
cmp
inc
scas
xor
aam
mov
cmpsb
fs
lods
cmp
push
and
icebp
or
sub
hlt
xchg
add
pop
sbb
ret
icebp
adc
sub
jnp
or
pop
pop
in
adc
push
xchg
mov
mov
jbe
cld
xor
popf
mov
lret
or
pop
inc
lret
lret
cld
negb
cmc
add
add
rolb
push
leave
sub
fnstsw
pop
out
sbb
adc
pop
xor
ja
fs
leave
jns
sub
mov
push
iret
loop
sbb
lods
push
inc
jmp
shr
in
cltd
jne
mov
pop
lods
push
je
cmp
push
enter
stc
pop
adc
lock
dec
or
sub
ret
add
enter
es
pop
pop
nop
enter
outsb
fcom
pop
ffreep
xchg
imul
out
inc
movsl
and
xor
xchg
lret
mov
pop
inc
shrb
cs
cmp
xor
sub
push
jb
xchg
fstpt
insb
shrl
push
push
sti
loopne
sub
shll
push
out
shrb
add
in
daa
mov
dec
loop
or
jmp
sbb
js
xchg
icebp
pop
lods
pushf
fidivs
fildll
pop
xchg
pop
test
fadd
pop
xlat
icebp
mov
mov
scas
repz
rolb
sub
lods
sbb
cmp
push
sarb
sub
cmc
cmp
mov
icebp
pop
divl
add
ss
ror
or
or
mov
inc
into
ds
xor
mov
out
mov
and
push
fmuls
and
addr16
xchg
lods
out
sbbb
in
popf
mov
lea
and
fsub
xchg
xchg
cltd
cmp
je
mov
test
pop
je
jmp
into
push
or
xor
cmpb
repz
and
loope
and
push
aad
pop
and
call
lret
pop
fcmovnb
fwait
into
popf
cmp
and
cwtl
pop
bound
lods
es
add
in
cmp
arpl
xor
push
mov
pop
mov
aam
cmpsb
pop
movsb
mov
cmp
lret
call
sbb
cmove
addl
imul
cld
clc
jne
stos
lods
jle
test
ljmp
sub
int3
dec
ss
ja
and
mov
mov
xor
stos
ret
out
aad
ss
pushaw
rolb
gs
cs
pop
sbb
mov
cld
cld
and
in
mov
pop
lods
aaa
ret
bound
cld
out
push
mov
mov
sbb
pushf
jp
scas
repz
push
jmp
jnp
inc
test
ret
cmp
push
lcall
push
cmp
lahf
lcall
div
push
js
les
cmc
pop
ret
inc
rcrl
arpl
pop
sub
in
inc
push
inc
add
xor
call
jno
push
ss
fsubl
je
add
test
and
add
shl
jo
cmp
mov
pop
enter
cmp
mov
add
mov
cmp
cmp
lds
daa
fsubs
cs
xchg
push
mov
adc
mov
sub
mov
shrb
adc
sahf
mov
sub
sbb
lock
jmp
lcall
pop
rclb
jno
test
sub
fistpl
sbb
test
mov
xchg
xor
pop
push
mov
test
xor
or
add
imul
push
fsubs
imul
test
fldl
cmp
pop
shl
mov
xchg
rclb
xor
loop
push
rolb
shr
pop
rcr
call
in
dec
psubb
adc
sub
stos
loopne
and
jecxz
sub
cltd
push
pop
adc
repz
xor
sub
add
test
sbb
icebp
mov
outsl
push
mov
ds
mov
cmp
add
hlt
pop
into
int
sbb
jle
je
lock
je
ljmp
imul
repz
push
xchg
cwtl
dec
sub
sarb
xor
jno
test
add
sub
xor
mov
jmp
aam
mov
xchg
sbb
jnp
or
xor
push
or
cmp
out
in
dec
push
xor
in
push
jnp
sarb
mov
icebp
ficomps
jno
mov
xchg
mov
rcrb
bswap
test
testl
or
mov
bound
jo
mov
push
ret
xchg
inc
xchg
popa
inc
imul
clc
hlt
pushf
mov
inc
sub
or
loope
outsl
nop
and
dec
lea
add
sbb
inc
mov
cmp
add
add
iret
xchg
movsl
xchg
aam
jmp
xchg
sahf
mov
aam
mov
hlt
test
mov
adc
ds
xor
push
mov
fs
dec
movsb
ja
lcall
push
sub
sbb
les
cmp
in
into
mov
sbbb
add
cs
cmp
and
push
mov
sbb
inc
mov
push
cmpb
ja
lcall
push
sub
pop
or
sub
mov
or
mov
ljmp
mov
mov
cmpb
mov
mov
inc
int
call
pusha
int3
dec
jmp
add
push
adc
dec
or
rorb
mov
test
orb
dec
xchg
insl
mov
push
push
addb
jnp
pop
or
pop
in
js
inc
test
sbb
push
dec
sbb
dec
add
fmuls
xchg
dec
fldt
dec
ret
dec
mov
test
mov
mov
xor
aad
inc
pop
jno
pusha
inc
xchg
jb
cmp
jo
xchg
push
jae
push
cmp
xchg
mov
sti
push
fdivs
xchg
xchg
jae
push
clc
jo
xchg
bnd
push
cwtl
jo
xchg
shlb
push
mov
mov
inc
pop
imul
jo
push
js
inc
lcall
and
cmp
lcall
loop
xchg
jl
pop
clc
jg
lcall
mov
pop
mov
mov
inc
jp
movsb
dec
mov
inc
pop
or
dec
out
jae
inc
cmp
in
into
jae
inc
sbb
add
jae,pn
inc
cli
or
push
jae
inc
fimull
inc
dec
outsb
jae
inc
mov
add
jae
inc
lcall
lock
movsb
js
adc
push
loopne
fdivp
aaa
scas
dec
movsb
mov
das
clc
adc
aam
lods
jp
mov
dec
sub
cmp
ret
out
sbb
and
jno
mov
testl
or
aas
add
in
out
inc
int
negb
xchg
inc
dec
mov
mov
aad
std
xorw
mov
cwtl
adc
hlt
das
aam
sti
adc
cld
icebp
fdivr
std
mov
mov
setge
cmp
nop
and
outsb
ljmp
push
cmp
dec
add
inc
mov
add
inc
je
pop
sarl
lcall
inc
enter
push
inc
mov
mov
outsl
jge
add
in
in
inc
dec
jns
mov
cwtl
and
dec
insb
jae
inc
orl
jns
je
xor
jmp
xor
jne
in
les
cli
lcall
cmp
cltd
cmp
fistps
loopne
xchg
popf
mov
jb
push
sbbl
ret
je
jge
insb
bsr
or
dec
push
dec
mov
repz
inc
ret
repnz
enter
fstps
adc
xor
add
dec
pop
cmp
mov
rcrl
les
test
push
mov
leave
mov
adc
pushf
js
push
push
loope
sti
mov
sarb
pop
xchg
popf
inc
loopne
xor
cmp
out
repnz
sub
jo
andl
and
mov
js
stc
xchg
xchg
mov
cmp
push
mov
xlat
cmc
pop
dec
cmpsl
sub
lcall
push
inc
pop
sbb
sbb
add
add
pop
xor
outsb
addr16
bound
gs
inc
outsl
inc
das
ja
mov
lea
dec
and
pop
cmpsl
push
jns
add
sbb
imul
in
in
loope
daa
mov
mov
jnp
arpl
inc
std
add
push
inc
cmpl
mov
popa
mov
mov
jp
sbb
test
adc
jnp
lcall
scas
lcall
je
cs
push
aam
sti
inc
sbb
cld
fsubl
shll
in
jo
add
pop
sbb
and
mov
stc
jo
push
lods
dec
pop
movsl
lret
cld
mov
lahf
and
sbb
xchg
mov
subl
or
xlat
in
jmp
lods
test
jmp
and
jmp
pop
scas
xchg
in
rcrl
popf
sbb
out
bound
pop
and
bound
sbb
inc
xchg
jno
push
cmp
divb
lds
mov
lcall
push
add
inc
push
push
mov
sub
add
or
add
lods
xor
popa
xchg
push
mov
les
scas
sub
cmpsl
sbb
mov
add
test
xchg
lret
dec
cltd
out
int3
call
and
aam
std
roll
adc
hlt
push
xchg
cmp
bnd
pushl
pop
push
lahf
fcoml
jmp
insl
adc
stc
es
shll
jecxz
sbb
xchg
mov
jmp
xchg
jle
ja
outsb
hlt
dec
in
jno
inc
cmc
adc
sbb
loope
mov
test
sub
dec
pop
in
sti
inc
mov
xor
lret
int
cmc
in
movsb
push
shrb
icebp
xlat
mov
imul
pop
popa
or
in
mov
fnstsw
xchg
rorb
jnp
out
jb
xchg
pop
sahf
enter
jno
jp
mov
push
cmp
into
scas
inc
inc
add
push
inc
xchg
mov
dec
jmp
repz
push
es
iret
scas
out
nop
or
jno
push
jecxz
icebp
push
js
outsl
pop
mov
popa
xchg
sahf
adc
add
jp
lcall
inc
sqrtps
scas
inc
cli
xchg
sub
jge
mov
or
mov
loop
pusha
xor
dec
mov
sub
jb
pop
pop
test
enter
mov
push
add
lock
fiadds
fistpll
xchg
loopne
mov
add
inc
adc
xor
or
addb
int3
dec
imul
xchg
adc
or
into
push
ds
test
pop
mov
pop
cwtl
scas
dec
ret
dec
cmp
or
jbe
in
imul
inc
test
pop
xchg
inc
movsl
jb
cwtl
iret
mov
add
adc
std
fcompl
cwtl
dec
faddl
cwtl
mov
sbbb
hlt
nop
popf
lahf
pop
pop
mov
mov
imul
mov
cld
scas
xor
mov
push
outsl
mov
xchg
mov
and
mov
and
lcall
dec
jae
test
push
aam
movsl
lds
enter
xor
mov
repnz
pushf
adc
inc
pop
or
int
stc
push
and
test
imul
dec
lcall
ds
xor
mov
jo
insl
dec
adc
and
dec
or
int3
dec
stc
test
aad
loope
xchg
dec
fsubrl
dec
enter
mov
xchg
in
dec
xorb
jp
jle
add
add
mov
xor
int3
je
stc
call
mov
stc
or
mov
xchg
pop
mov
mov
mov
and
ret
mov
jmp
push
aam
faddl
pop
dec
pop
mov
pop
sub
scas
movsb
rol
xchg
or
imul
adc
rorl
dec
fildll
dec
fsubrl
nop
je
mov
pop
push
cmc
push
mov
pop
and
ljmp
arpl
push
and
enter
jmp
pop
imul
xchg
dec
mov
subl
insl
int
push
jo
inc
mov
push
lahf
mulpd
lcall
call
cmpsb
jge
out
jmp
pop
nop
dec
scas
mov
inc
dec
or
sub
movsb
repnz
adc
out
push
je
xor
lock
into
cli
and
and
stos
repnz
cmpsb
pusha
sub
mov
sub
scas
mov
cltd
mov
pop
nop
jg
popa
in
mov
jae
push
mov
pop
mov
aam
movsb
mov
lds
jno
ja
xor
shl
xor
std
add
test
xor
adc
adc
or
adc
aaa
adc
jg
clc
inc
xchg
into
in
mov
scas
stc
dec
mov
lahf
xlat
mov
adc
xor
ja
cmp
lods
sahf
aaa
inc
ja
pop
pop
jge
cmp
lret
in
enter
aad
lcall
sbb
dec
push
daa
addb
and
or
push
cmp
sbb
stc
fwait
pop
mov
outsl
mov
inc
push
movl
aad
test
mov
clc
test
mov
mov
or
inc
mov
add
imul
pop
mov
jmp
lret
cmc
fisubrl
xchg
enter
ds
clc
mov
xor
adc
fstp
icebp
stc
mov
aas
mov
dec
js
sahf
and
cli
test
adc
or
lahf
sarl
sub
mov
xchg
movsl
xor
jl
pop
and
jbe
mov
jecxz
loopne
lcall
jne
loop
stc
fcoms
jo
lahf
xlat
lea
test
dec
mov
push
sub
and
and
xlat
jge
aaa
mov
bound
and
int3
into
adc
pop
mov
push
xor
dec
lret
mov
aas
dec
shlb
test
imul
mov
mov
addr16
jns
jbe
xor
mov
addl
push
sbb
adc
scas
rcrl
ljmp
dec
shll
inc
in
or
arpl
clc
add
sub
ficompl
add
push
cmp
mov
sbb
mov
push
mov
jo
inc
push
adc
or
inc
nop
stos
outsb
aam
mov
adc
call
fldenv
add
in
xchg
sbb
jo
jae
xlat
mov
jg
push
into
and
push
push
sub
mov
inc
ljmp
xchg
pop
cmpsb
inc
mov
sti
mov
dec
shl
shll
xchg
adc
mov
mov
mov
xchg
aas
lock
push
dec
xchg
ds
es
pusha
pop
enter
test
stc
sti
lahf
test
aad
inc
xchg
jb
mov
pop
dec
add
js
pop
jmp
rcrl
mov
popf
sub
stos
pop
sarb
ficompl
mov
inc
mov
setg
js
in
adc
mov
test
je
lahf
orl
scas
jno
in
jnp
jo
inc
inc
cmp
cmpsb
xchg
mov
xor
data16
dec
js
call
call
notb
dec
sarl
lea
into
mov
push
rolb
push
out
int
stos
add
out
inc
ret
loop
and
pop
mov
dec
adc
int
jp
call
xor
and
outsb
mov
imul
jb
cmp
mov
mov
js
cmp
xchg
jnp
lcall
push
or
lret
push
sbb
sbb
mov
inc
mov
call
test
xchg
fsts
cmpsb
jne
aam
xchg
mov
mov
ja
roll
addb
lods
cmp
fcomip
xor
orl
outsl
push
sub
dec
add
xor
movsl
mov
fstl
pushf
and
mov
fadd
jnp
popa
mov
in
out
call
fadd
sub
jmp
aam
jl
cltd
mov
clc
cmc
fsub
fsubrs
or
mov
notb
jbe
inc
mov
popl
add
add
xchg
jbe
and
mov
push
fisttpll
andl
popa
mov
nop
sbb
xchg
js
pop
add
jne
cmp
inc
gs
xor
inc
pop
loop
in
rcll
dec
mov
mov
xchg
add
push
scas
or
jnp
jle
xchg
jne
inc
ds
mov
push
pop
into
xchg
jnp
cs
mov
pop
hlt
incl
add
add
cmpsb
bound
jbe
inc
push
addr16
mov
bsf
sbb
jns
pop
lods
xchg
dec
jl
arpl
push
push
fucomip
add
lock
sti
dec
xchg
pop
cld
nop
fimuls
cs
and
sahf
test
jg
lcall
inc
and
dec
shll
mov
rcrl
dec
loope
lret
and
jle
mov
xchg
or
stc
testl
scas
mov
pop
fwait
xchg
stos
mov
movb
in
lods
popa
jecxz
mov
inc
adc
hlt
xor
sbb
lods
push
push
jb
dec
dec
mov
pop
sub
mov
fwait
jg
xor
mov
fildll
lock
lahf
sub
scas
inc
xchg
inc
lea
mov
mov
mov
sub
shrl
jmp
imul
cwtl
push
fwait
sub
in
into
sbbl
sahf
mov
mov
xor
cmp
stos
sub
and
inc
aaa
mov
jg
mov
mov
out
dec
call
mov
inc
ret
sti
add
les
popf
mov
pop
inc
clc
jmp
push
cmp
cld
bnd
dec
cmp
js
cmc
mov
out
lods
jne
bound
cmpb
jle
push
int3
push
and
pop
aaa
movsl
xchg
rorb
dec
shll
mov
es
fistps
out
arpl
push
adc
iret
mov
enter
push
add
add
pop
scas
je
stos
scas
fldenv
ljmp
xchg
movsb
cmp
loope
out
push
mov
push
imulb
mov
push
and
push
xchg
mov
clc
push
jmp
ffreep
add
mov
push
sti
mov
and
mov
push
jp
test
lea
dec
aas
jbe
arpl
inc
push
outsl
fsubs
pop
xchg
adcb
xchg
mov
arpl
lods
push
mov
mov
xorb
imul
pop
add
test
add
add
add
pop
pop
add
jp
add
pop
xor
add
pop
add
scas
pop
add
mov
add
ret
add
pop
add
ficomps
add
pop
add
cli
pop
add
add
add
push
pop
add
push
pop
add
xor
add
pop
add
dec
pop
add
push
pop
add
pusha
pop
add
jo
add
jle
add
mov
add
pop
add
add
add
mov
add
lret
add
pop
add
in
add
cli
pop
add
adc
add
es
add
xor
add
inc
pop
add
dec
pop
add
pop
pop
add
pop
add
add
add
into
push
pop
pop
jo
pop
insw
outsl
fs
addb
pop
jo
pop
arpl
insl
outsl
fs
cmp
data16
xor
jae
arpl
add
push
add
fs
jae
pop
imul
pop
pop
imul
insl
add
add
js
gs
pop
push
gs
add
cmp
pop
gs
je
pop
add
insl
arpl
add
fisttpl
pop
pop
jae
je
popa
jo
pop
je
jo
add
insb
add
imul
jae
je
jae
jb
popa
je
gs
add
stc
add
imul
adc
arpl
insb
outsb
add
add
gs
arpl
add
jae
popa
outsb
data16
lds
pop
pop
addr16
popa
imul
jne
pop
arpl
je
outsl
insb
data16
add
push
ja
jae
outsl
insl
bound
add
pop
arpl
inc
imul
popa
bound
xor
js
arpl
dec
push
push
inc
push
push
cs
insb
add
mov
inc
imul
bound
gs
add
inc
add
fs
xor
dec
gs
add
cmp
dec
jne
inc
imul
gs
jne
jb
outsb
je
jb
arpl
jae
fs
add
popa
imul
je
jo
gs
bound
arpl
add
push
je
jb
jne
dec
outsb
outsw
inc
add
jae
dec
popa
outsb
fs
gs
add
jb
insl
jo
add
imul
gs
sub
gs
outsb
fs
inc
imul
jo
outsb
inc
jbe
outsb
je
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
testb
add
add
jle
