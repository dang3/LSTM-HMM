adc
or
and
or
xor
add
or
xor
add
or
add
add
mov
or
lcall
add
xor
add
xor
add
xor
add
xor
add
or
and
or
cmp
or
dec
xor
add
or
add
add
jle
or
nop
xor
add
xor
add
xor
add
xor
add
xor
add
or
push
xor
add
or
inc
xor
add
or
add
add
outsb
xor
add
or
add
add
mov
or
cwtl
xor
add
add
add
push
mov
push
ds
mov
cs
cld
repnz
mov
push
ds
mov
aam
inc
pop
inc
mov
into
daa
inc
sbb
sbb
inc
sbb
push
rolb
sub
sbb
xor
sbb
inc
sub
scas
into
into
into
into
into
faddl
lahf
cs
cs
dec
aas
lcall
cs
adc
dec
xor
repz
dec
lods
inc
sub
inc
mov
je
inc
mov
leave
xor
cs
cmp
cs
enter
pop
aad
das
add
sbb
aad
fidivs
ljmp
cmpsb
cmp
dec
inc
sub
dec
cs
stos
xor
cs
xor
xchg
inc
sub
test
out
fwait
lods
inc
or
sar
inc
lret
je
xor
dec
push
enter
xor
cs
mov
icebp
xor
sbb
mov
inc
or
jmp
cs
mov
and
inc
ret
adc
and
xor
xor
add
les
cs
in
loop
loop
sub
mov
xchg
cs
mov
cs
xor
cs
fisubs
xor
daa
test
out
sbb
xor
xor
xchg
daa
addl
xor
cs
and
cs
sbb
push
fs
idiv
or
cs
sbb
push
inc
inc
sbb
inc
enter
iret
inc
enter
xlat
inc
enter
filds
out
in
loopne
incb
cs
ds
rcr
cmpsb
cmp
mov
xor
xor
inc
or
ljmp
push
inc
mov
mov
xor
roll
ljmp
inc
or
xor
xor
sbb
mov
mov
xor
loopne,pt
ds
cs
cs
movl
xor
cs
enter
scas
inc
or
cs
mov
xor
divl
xor
xor
enter
adc
xor
inc
sub
scas
scas
add
out
xor
cs
or
cs
mov
inc
enter
out
and
adc
xor
or
xor
lahf
lea
cs
out
mov
mov
add
jns
cs
call
mov
lret
lahf
mov
cs
mov
clc
out
add
ljmp
or
lcall
xor
xor
sub
sar
lret
add
inc
enter
xor
daa
inc
mov
mov
sbb
fdivrs
andl
inc
sub
dec
fwait
shld
dec
xor
sub
cs
inc
fsubrs
sbb
test
pop
inc
xchg
inc
fadds
sub
mov
mov
cs
xor
adc
mov
cmc
fiaddl
pop
movsb
sbb
testl
xchg
out
inc
sbb
ljmp
scas
mov
ss
pushl
add
xor
mov
or
test
xor
adc
inc
jbe
mov
jbe
movsb
jbe
adc
inc
push
sub
cmc
ds
jbe
inc
lds
cs
inc
dec
ret
mov
pop
inc
loope
cs
mov
cmp
xor
cs
dec
push
jbe
mov
add
add
outsb
test
cli
sbb
xor
xor
jbe
mov
inc
pop
rolb
inc
mov
mov
into
ss
inc
inc
into
ds
inc
inc
shlb
sub
sub
dec
popf
rcrb
mov
mov
cs
push
inc
inc
scas
sahf
mov
shll
inc
cs
inc
mov
ficoms
call
inc
mov
inc
mov
add
mov
cs
call
dec
mov
sub
and
pop
xor
cs
call
divb
cs
call
inc
scas
mov
mov
scas
inc
inc
mov
dec
enter
push
inc
mov
inc
mov
inc
sbb
dec
enter
push
fs
cs
mov
inc
ds
mov
inc
cs
mov
shlb
fsubs
inc
push
add
sub
cs
das
aas
cs
into
sub
daa
inc
sub
inc
mov
mov
push
mov
mov
cli
mov
jmp
cs
inc
mov
inc
pushl
pop
cs
mov
mov
sub
inc
push
mov
mov
call
fs
sub
shld
inc
sub
inc
push
mov
mov
call
fs
sub
cmovne
inc
sbb
xchg
scas
dec
fmul
decl
cs
sub
ds
pop
add
xchg
scas
add
fcoms
fs
sbb
into
xchg
scas
dec
pop
push
sub
fs
sub
xor
mov
inc
mov
movsb
mov
mov
enter
push
cmp
add
sub
dec
mov
outsb
cs
pop
movsb
and
cs
sub
int
mov
mov
into
mov
aam
aas
call
mov
out
stos
xchg
xor
movsb
cmovl
xchg
cs
and
adc
inc
mov
mov
cs
mov
inc
scas
mov
or
cs
into
push
add
mov
cs
inc
mov
aam
into
push
inc
mov
aaa
jne
cs
mov
aaa
gs
enter
sbb
cli
mov
dec
mov
xor
sub
dec
into
fiaddl
scas
inc
call
sub
cs
mov
inc
scas
mov
fisubrl
daa
inc
scas
mov
cs
cs
call
sub
pop
inc
sub
inc
mov
sbb
sub
daa
sub
lahf
into
inc
mov
sub
inc
scas
mov
sub
or
and
daa
inc
scas
mov
cs
cs
sub
in
mov
inc
pop
xor
mov
inc
sub
cs
inc
mov
inc
mov
mov
dec
shr
cli
inc
enter
ret
cli
inc
enter
ja
enter
inc
cli
inc
enter
daa
fiaddl
cli
inc
sbb
paddusb
inc
sbb
sub
cs
sub
inc
sub
and
inc
sub
pop
cli
inc
mov
inc
mov
inc
mov
inc
mov
cli
inc
mov
inc
mov
dec
ret
inc
enter
and
inc
enter
cli
inc
enter
pop
cli
inc
enter
sub
mov
inc
enter
jne
inc
mov
cs
inc
enter
sub
and
cli
inc
enter
sub
mov
inc
and
cli
inc
sub
sub
cld
stc
cs
or
cli
inc
enter
ret
cld
cmp
sub
add
inc
sub
fdivs
jnp
cs
dec
cmp
sub
mov
inc
mov
sub
sub
pop
dec
fcomps
sub
cs
dec
cmp
add
dec
mov
outsb
inc
scas
inc
sub
sub
out
mov
sub
test
sub
and
pop
and
mov
cs
mov
inc
mov
inc
enter
inc
dec
inc
scas
ss
pop
cmp
sbb
mov
jmp
mov
cs
cmpsb
inc
mov
scas
push
movsb
inc
mov
sub
inc
scas
sahf
xor
outsb
sbb
outsb
inc
shlb
sub
xor
cs
das
xor
cs
ds
mov
jb
cs
cmp
scas
dec
cmp
cs
mov
mov
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
push
cs
inc
cmp
sub
dec
cs
inc
cmp
sub
outsl
cs
inc
cmp
sub
jge
cs
inc
cmp
sub
sub
cs
inc
imul
mov
sub
sub
sub
inc
mov
sub
cs
cmp
dec
cmp
sub
xor
out
sub
mov
sub
sub
pop
cmp
bound
push
clc
jne,pn
bound
xchg
jmp
mov
js
cs
jmp
and
sbb
mov
cs
into
inc
mov
mov
inc
mov
inc
mov
and
cs
into
inc
mov
sub
sub
pop
inc
inc
inc
dec
inc
enter
incl
dec
enter
enter
xor
shrb
data16
inc
mov
cs
into
inc
mov
sub
sub
scas
cmp
daa
cs
js
fsubs
enter
inc
mov
enter
inc
enter
xor
inc
enter
int3
into
adc
add
inc
mov
xor
inc
push
jle
aas
outsl
cs
xor
test
testl
mov
cs
roll
inc
fmuls
push
out
dec
sarb
inc
fdivr
inc
fmuls
inc
fmuls
inc
fdivr
dec
popf
push
inc
fsubr
xor
sub
fmul
inc
fsubr
mov
inc
xor
xchg
and
or
inc
push
xor
iret
xor
xor
push
push
inc
sub
inc
inc
xor
xor
iret
inc
fsubs
cmpsb
push
inc
enter
xlat
xor
enter
inc
fcoms
xor
pop
inc
fadds
movsb
dec
ja
cs
xor
pop
inc
shlb
inc
fcoms
inc
enter
dec
cmp
sub
out
inc
enter
xor
shrb
outsb
sub
xor
add
into
inc
mov
sub
sub
outsb
inc
das
iret
xor
cs
daa
inc
enter
inc
mov
xor
cs
cs
cs
pop
mov
sub
sub
mov
inc
mov
inc
mov
inc
mov
nop
dec
mov
insb
inc
xchg
inc
mov
push
pushf
into
inc
mov
adc
inc
nop
inc
ds
push
test
xor
inc
dec
in
ljmp
inc
pop
inc
scas
ss
fimull
xor
cs
dec
aaa
sub
cs
dec
aaa
sbb
cs
xor
cs
cs
cs
dec
aaa
fldt
cs
adc
lds
cs
ret
test
xor
dec
popf
into
inc
inc
enter
mov
aaa
mov
cs
mov
ljmp
fdivrl
nop
push
sub
push
xor
dec
popf
and
popf
loop
xor
push
add
push
inc
enter
push
mov
inc
xor
lret
xor
dec
popf
and
popf
loopne
xor
push
test
push
inc
sub
inc
sub
inc
lods
cmp
divl
data16
popf
and
popf
loopne
sub
daa
ds
mov
dec
popf
and
popf
loop
inc
enter
pop
xor
inc
enter
pop
adc
enter
into
dec
dec
popf
push
inc
sub
ds
inc
enter
cmovl
lock
xchg
scas
scas
add
shll
push
inc
les
ficoml
nop
dec
aaa
sub
cs
mov
cs
das
das
cs
mov
scas
add
cs
fdivrs
dec
inc
dec
inc
enter
xor
dec
dec
aaa
lods
cs
and
and
pop
movsb
mov
inc
mov
xor
xor
mov
fisubrl
cmp
mov
sub
pop
cmp
pop
pushl
cs
mov
into
jbe
sub
aas
push
cs
sub
xchg
scas
inc
mov
rolb
inc
fadds
xchg
sarl
push
xor
inc
dec
inc
cmp
rcll
and
mov
popf
rcl
sbb
sub
inc
fdivrs
inc
les
into
sub
cmp
daa
add
mov
mov
xor
sahf
xor
xor
fdivrs
inc
enter
add
scas
mov
push
scas
add
shll
xor
sbb
xchg
scas
shll
mov
cmp
in
xor
test
mov
into
ss
fcoms
cmp
push
loopne
inc
fcoms
xor
push
mov
ds
sbb
inc
fmuls
inc
fsubs
dec
popf
push
inc
adc
sub
and
cmp
dec
xor
xor
xor
enter
inc
fcoms
xor
pop
inc
sbb
movsb
xchg
mov
adc
xor
inc
into
ss
fcoms
cmp
sbb
scas
shll
dec
inc
scas
ss
cs
fmull
cs
fadds
rorl
cs
ds
scas
scas
add
adc
xor
ds
mov
xor
ds
lret
sub
call
inc
enter
sbb
inc
sub
xchg
roll
mov
add
movsb
lret
ss
popf
inc
mov
mov
sub
movsb
sub
lret
es
movsb
and
inc
mov
sbb
mov
mov
inc
scas
sub
int
push
dec
cs
dec
inc
scas
mov
sub
push
dec
sub
dec
inc
shlb
pop
inc
mov
cmp
pop
inc
mov
enter
pop
dec
xor
sub
in
ljmp
inc
pop
xor
ds
xchg
sub
sub
mov
sub
test
sub
and
mov
cs
int
aaa
sub
cs
sbb
cs
or
cs
mov
xor
cs
and
loop
cmp
xor
cs
mov
xor
inc
mov
dec
aaa
shlb
cs
mov
inc
ds
mov
fiaddl
cmpsb
xor
inc
sbb
mov
cs
fiadds
push
cli
inc
mov
cli
inc
mov
mov
cli
inc
mov
call
inc
mov
inc
mov
rolb
pop
mov
adc
or
mov
push
adc
mov
adc
notb
clc
cli
mov
sub
mov
fdivrs
ds
enter
inc
sub
mov
nop
inc
inc
inc
into
pop
inc
mov
push
inc
cs
mov
push
inc
inc
push
pop
inc
shll
pop
movsb
push
sbb
ss
fidivrl
push
inc
into
inc
xor
sahf
movsb
sub
mov
enter
enter
mov
mov
shrb
into
inc
mov
test
decl
mov
inc
sahf
inc
mov
sub
sbb
cs
sbb
xor
sbb
xchg
rorl
outsb
cli
movsb
lret
lock
mov
inc
dec
inc
mov
push
dec
inc
lret
mov
sbb
mov
xor
into
inc
mov
xor
into
call
ss
mov
cmp
push
pop
rolb
inc
xor
ds
scas
shlb
cs
mov
xor
inc
dec
popf
mov
adc
xor
sahf
sbb
enter
enter
mov
mov
rolb
pop
sub
into
cmp
cs
incl
scas
push
sub
fcmovu
dec
daa
sub
adc
inc
lret
inc
adc
scas
push
repnz
sub
inc
xor
sahf
sbb
mov
dec
enter
sbb
inc
enter
fsubrl
jle
mov
xor
xor
sub
cmpsb
sub
sahf
pop
mov
cli
inc
fsubrl
xor
cs
fildl
inc
mov
inc
xor
mov
scas
in
in
mov
fadds
dec
popf
sarb
dec
popf
mov
aam
xchg
sub
cmp
push
insb
inc
mov
mov
inc
fidivrs
xor
xor
mov
xor
and
icebp
xchg
scas
in
in
mov
fadds
xor
pop
sub
sub
cs
inc
mov
cli
inc
mov
sub
fiaddl
ds
inc
mov
fdivr
inc
mov
aaa
test
cs
aaa
jo
cs
mov
xor
mov
add
sub
inc
call
xor
cs
aaa
lahf
cs
sub
xchg
pop
dec
popf
cmpsl
sub
ret
inc
sub
inc
sub
xchg
pop
dec
popf
cmpsl
and
ret
inc
sub
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sbb
cli
inc
sub
cli
xchg
adc
xchg
and
test
inc
sbb
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sbb
cli
inc
sub
cli
xchg
adc
xchg
and
test
inc
sbb
cli
inc
sub
cli
movsb
sub
sbb
xor
inc
xor
ds
sub
xchg
pop
cli
xor
cs
cmp
sub
xchg
pop
cli
inc
cmpsl
sub
ret
inc
jecxz
test
sub
cs
movsb
sub
insb
inc
sub
xchg
pop
inc
mov
push
out
cs
test
movsb
mov
add
in
ljmp
inc
pop
sar
inc
fisubrl
cli
test
stos
mov
cs
xchg
lret
stos
sub
cs
sub
sub
push
call
shrl
mov
sub
cs
movsb
lds
xor
fsubs
dec
fdivl
xchg
fildl
xchg
sub
inc
inc
push
out
cs
mov
cs
test
movsl
mov
cs
xchg
lds
cli
movsb
lds
mov
in
and
or
xchg
lret
dec
aaa
mov
ljmp
fcmovu
mov
sub
sub
sub
cmp
nop
xchg
in
cmpsb
dec
push
lock
mov
sub
cs
inc
movsl
mov
cs
test
cs
xchg
mov
mov
cs
movsb
mov
xor
sbb
dec
adc
xchg
adc
xchg
rorl
fsub
ret
inc
pop
das
add
das
and
mov
or
xchg
mov
sar
inc
mov
inc
mov
fadds
rcr
mov
sub
sub
sub
mov
cli
test
mov
cli
xchg
ret
mov
cli
movsb
ret
push
fmull
mov
lods
mov
sub
cs
movsb
lds
xor
sbb
dec
adc
xchg
sbb
cli
inc
inc
into
out
cs
mov
cs
test
movsl
mov
cs
xchg
lds
cli
movsb
lds
mov
or
push
cmp
scas
ljmp
inc
mov
fimull
shrl
sub
cs
cs
fsubs
cli
movsb
mov
test
xor
mov
xor
cmpsb
dec
inc
int
mov
xchg
sub
cli
movsb
pop
sbb
xchg
scas
in
cli
inc
xor
daa
ljmp
pop
inc
mov
rolb
cmp
ds
dec
inc
enter
dec
inc
inc
aas
ds
fadds
inc
mov
rolb
cmp
ds
inc
mov
call
inc
pop
xor
mov
sub
or
pop
mov
xchg
adc
xor
movsb
sbb
xor
aam
inc
mov
inc
mov
mov
cmp
mov
mov
cmp
mov
mov
cmovl
dec
cs
mov
mov
mov
jecxz
sub
sub
cmovno
cli
inc
mov
xchg
loope
mov
aaa
pop
out
cs
call
jecxz
rcrl
inc
call
loope
push
out
cs
call
mov
js
cs
aad
mov
fcoms
dec
lea
mov
xchg
mov
rorl
dec
mov
cs
mov
mov
cs
mov
mov
cmp
cmp
call
stos
scas
das
adc
das
mov
xchg
filds
daa
xchg
mov
xchg
cmp
insb
movsb
sbb
xor
sub
mov
fadds
xor
pop
sub
cmovno
daa
inc
enter
daa
das
adc
inc
enter
mov
ds
dec
inc
enter
mov
mov
aas
ds
enter
mov
shll
xchg
aam
sub
inc
mov
daa
or
out
lods
mov
js
xor
out
and
jg
cs
mov
and
out
mov
mov
sub
sub
mull
or
fidivs
cs
pop
xchg
sbb
bsr
sub
or
xor
cs
mov
mov
unpcklps
inc
mov
pop
xchg
in
ss
dec
fwait
scas
mov
inc
mov
xchg
cmp
mov
xchg
mov
cmp
lds
cmovne
movsb
mov
mov
pop
xchg
mov
mov
cmovne
lret
test
xlat
inc
mov
pop
xchg
in
ss
aas
mov
inc
enter
dec
pop
das
adc
das
mov
xchg
mov
mov
iret
test
inc
enter
xor
inc
mov
into
add
inc
enter
xor
inc
inc
enter
iret
inc
mov
cmp
sub
inc
enter
dec
aaa
xor
enter
dec
pop
das
adc
das
mov
dec
fwait
roll
test
int
lds
cmovl
dec
xor
inc
mov
mov
lea
inc
enter
pop
xchg
mov
mov
cs
mov
pop
or
lret
sub
xchg
mov
dec
dec
cmp
enter
pop
xchg
mov
mov
cs
mov
pop
or
and
sub
inc
mov
int
aaa
mov
cs
mov
pop
or
subb
sub
mov
fadds
xor
pop
sub
or
daa
inc
enter
pop
mov
sub
pop
or
iret
sbb
xlat
pop
or
fists
mov
sub
or
divl
mov
sub
inc
mov
inc
enter
mov
xchg
mov
cs
xor
xchg
rcrl
xchg
lret
xor
inc
mov
xor
inc
call
cs
enter
inc
xchg
mov
inc
enter
pop
inc
mov
filds
daa
xchg
lret
xchg
mov
daa
xchg
lret
test
dec
inc
push
mov
movsb
mov
cs
mov
xchg
mov
xor
xchg
rcrl
xchg
fildl
inc
mov
mov
mov
inc
fdivr
inc
mov
filds
daa
xchg
mov
inc
mov
mov
enter
xchg
fildl
sbb
xchg
mov
test
inc
enter
daa
xchg
mov
test
movsb
rcrl
pop
inc
mov
filds
daa
xchg
mov
xor
movsb
iret
adc
inc
mov
lds
adc
inc
mov
lds
mov
fists
dec
mov
movsb
mov
push
mov
filds
call
mov
xor
sar
mulb
sub
xchg
mov
sub
inc
mov
mov
daa
dec
xor
xchg
mov
sub
daa
xor
pop
xchg
mov
pop
dec
xor
in
ljmp
pop
xor
movaps
pop
daa
or
mov
sub
mov
cmp
iret
jo
ds
lods
mov
sbb
mov
sub
or
pop
leave
or
pop
xchg
lret
xor
sbb
xchg
mov
inc
mov
mov
call
mov
mov
xor
xor
cs
sub
jmp
sub
xor
cs
mov
mov
sub
sub
mov
sub
inc
enter
xor
aas
enter
daa
inc
mov
cs
enter
xor
dec
lea
enter
cmovne
call
sbb
dec
fcoms
in
das
mov
xor
aas
enter
daa
dec
fcoms
xor
dec
lea
test
add
dec
fcoms
test
test
aas
fcoms
out
inc
fcoms
mov
mov
rol
aas
fcoms
daa
inc
fsubs
xchg
lret
xor
dec
lea
dec
iret
inc
push
bound
daa
xchg
lret
xor
dec
lea
enter
push
xchg
lret
xor
dec
lea
enter
xor
dec
lea
mov
xchg
mov
js
cs
mov
pop
cmp
mov
sub
xor
pop
leave
or
sub
or
sub
inc
mov
lret
dec
aaa
mov
cs
mov
jmp
cmp
ljmp
pop
xor
xor
fiaddl
cmp
sbb
xchg
scas
add
cmp
lcall
sub
inc
pushf
inc
filds
incl
sbb
pop
sub
sub
inc
dec
cmp
sub
sub
dec
cmp
sub
pop
sub
dec
inc
lcall
in
in
shll
add
xor
xor
cs
scas
cmp
push
nop
inc
push
add
sar
inc
push
mov
scas
inc
push
ds
rcrl
pop
xchg
sar
inc
mov
dec
cmp
sub
ds
sub
ss
inc
mov
xor
fcmovu
dec
aaa
lea
cs
cs
popf
scas
outsb
inc
mov
shll
pop
lahf
mov
cs
mov
cs
enter
daa
cs
roll
in
cli
movsb
enter
dec
xchg
shrl
sub
popf
enter
inc
dec
inc
inc
cli
mov
dec
popf
inc
lods
sub
cs
movsb
int
inc
inc
call
das
cmpsb
insb
cs
mov
ds
popf
and
dec
stos
cmpsb
insb
movsl
mov
cs
test
movsb
int
push
add
sub
enter
enter
add
add
inc
sbb
dec
popf
ret
das
cmpsb
nop
cs
push
mov
sub
sub
in
ljmp
enter
shrl
sub
xchg
scas
cli
movsb
enter
scas
add
xor
pop
inc
mov
sbb
scas
add
xchg
sbb
into
inc
mov
dec
mov
dec
cmp
inc
mov
cs
mov
cs
mov
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
cs
inc
mov
iret
sub
cmp
cs
mov
push
xor
xor
inc
sub
lret
fisubrl
ljmp
inc
sub
mov
pop
inc
fdiv
inc
sub
movsb
and
pop
xchg
in
call
sbb
add
inc
sub
dec
popf
cmpsb
in
movsb
ljmp
adc
inc
data16
ds
cmpsb
mov
fmuls
test
ds
cs
fsub
inc
fsubs
xor
inc
mov
aam
sbb
enter
push
cmp
daa
inc
sahf
inc
mov
ss
inc
call
jmp
in
shll
inc
mov
sub
xor
inc
xchg
shll
mov
inc
dec
fbstp
cs
push
cwtl
mov
cmp
inc
xor
xor
movsl
sub
cs
movsb
mov
out
xchg
scas
cli
inc
xor
fbstp
cs
faddl
inc
cmp
xor
cs
ds
add
das
mov
aas
ds
mov
inc
das
and
or
cmp
xor
cs
in
mov
inc
pop
xor
cs
ss
mov
push
inc
roll
xor
outsb
xor
roll
int3
sbb
inc
inc
cmp
daa
sub
xor
cs
fwait
inc
xchg
mov
cs
ds
aaa
dec
cs
sub
std
sbb
fadds
xor
push
inc
scas
ss
ds
loopne
xor
inc
aam
inc
mov
inc
xor
inc
call
cmp
sahf
dec
mov
mov
mov
cmp
pop
inc
mov
enter
movsb
mov
xor
fsubrl
add
inc
sbb
mov
mov
sub
outsb
inc
enter
inc
test
inc
push
dec
xor
movsb
lret
adc
test
pop
add
add
sub
scas
into
pushl
clc
imull
mov
sub
sub
mov
sub
inc
mov
mov
cs
aas
mov
inc
mov
cs
fcoms
xchg
fnsave
dec
roll
pop
scas
aas
enter
pop
inc
fdiv
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
aas
mov
cs
rorl
pop
scas
dec
fsubrs
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
aas
mov
cs
rorl
pop
scas
inc
fcomp
inc
fcoms
xchg
fnsave
dec
roll
pop
scas
inc
enter
inc
enter
xor
dec
dec
mov
cs
ret
dec
dec
scas
sub
inc
enter
xor
dec
ret
inc
fsubrs
cs
inc
fcoms
xchg
fisttpll
mov
cs
dec
rorl
pop
scas
sub
enter
dec
aaa
xor
mov
mov
cs
ds
scas
call
sub
push
ds
xor
add
sbb
dec
mov
adc
inc
scas
mov
add
add
enter
iret
add
cs
mov
sub
mov
sub
mov
mov
call
add
cs
fcoms
xchg
fnsave
dec
roll
pop
xchg
enter
pop
inc
fmul
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
aas
mov
cs
rorl
pop
xchg
sub
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
aas
mov
cs
rorl
pop
xchg
out
fcoms
xchg
fnsave
dec
roll
pop
xchg
out
push
inc
enter
xor
dec
dec
mov
cs
ret
dec
dec
xchg
xor
pop
xchg
int
lret
dec
ret
inc
fsubrs
cs
inc
fcoms
xchg
fisttpll
mov
cs
dec
rorl
pop
xchg
inc
inc
enter
dec
aaa
xor
mov
mov
cs
ds
cmpsl
inc
mov
into
inc
mov
into
jmp
sub
inc
scas
mov
inc
enter
add
sub
iret
add
cmpsl
xor
mov
xor
ds
sub
mov
sub
inc
enter
xor
aas
enter
pop
inc
call
inc
mov
movsb
enter
add
cs
fcoms
xchg
fnsave
dec
roll
xor
enter
pop
inc
fadd
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
inc
mov
cs
rorl
xor
sub
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
inc
mov
cs
shll
inc
fsub
inc
fcoms
xchg
fnsave
dec
roll
xor
out
push
inc
enter
xor
dec
push
mov
cs
ret
sub
xor
pop
xchg
int
lret
dec
ret
inc
fsubrs
fcoms
xchg
fisttpll
mov
cs
dec
ret
sub
inc
enter
dec
addr16
mov
cs
in
xchg
in
dec
inc
mov
movsb
enter
pop
sub
lahf
inc
enter
add
sub
inc
jmp
enter
dec
xor
xor
pop
inc
call
movsb
mov
and
mov
mov
fadds
rcl
inc
mov
mov
cs
sub
inc
mov
aam
pop
inc
mov
inc
ds
mov
inc
cs
cmpsb
inc
enter
mov
rclb
mov
cs
sub
cs
mov
cmp
mov
sbb
call
and
inc
mov
push
ds
mov
inc
xor
daa
shll
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
mov
sub
mov
mov
xor
mov
mov
mov
and
movzwl
mov
sub
leave
ret
push
mov
sub
mov
mov
and
mov
test
mov
mov
adc
mov
mov
mov
sub
leave
ret
push
mov
sub
mov
mov
add
mov
movzwl
movzwl
or
mov
mov
mov
or
mov
leave
ret
push
mov
sub
cmp
movzbl
mov
adc
mov
mov
mov
xor
mov
cmp
movzwl
mov
adc
mov
leave
ret
push
mov
sub
movl
mov
mov
addb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
jg
mov
mov
push
push
cmp
mov
movzbl
sbb
mov
mov
xor
mov
add
cmp
je
mov
mov
mov
xor
add
cmp
je
mov
lea
mov
mov
mov
and
mov
mov
mov
mov
add
cmpl
movl
movb
je
mov
mov
xor
add
mov
mov
xor
sub
test
movzwl
sar
mov
mov
sub
sub
mov
pushl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
pushl
movl
cmpl
jg
mov
orb
mov
mov
xor
mov
mov
pushl
call
mov
mov
add
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
mov
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
lea
mov
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jb
movl
movl
cmpl
jge
mov
mov
push
lea
and
mov
mov
sub
mov
mov
imul
imul
mov
lea
and
mov
or
xor
mov
mov
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
cmpl
jp
mov
mov
and
jmp
mov
mov
or
mov
mov
and
mov
xor
xor
lea
mov
mov
add
xor
mov
imul
mov
and
mov
xor
add
mov
imul
lea
and
mov
or
cmp
jne
pop
pop
leave
ret
push
mov
sub
mov
movzbl
add
mov
movzbl
mov
xor
mov
mov
mov
or
leave
ret
push
mov
sub
mov
mov
and
mov
movzwl
mov
or
mov
cmp
mov
mov
adc
mov
leave
ret
push
mov
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movl
movl
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
movzwl
sub
xor
push
mov
movzbl
and
add
mov
mov
mov
cmp
andl
adcl
mov
push
cmpl
jno
mov
sbb
jmp
mov
sub
movzbl
sub
mov
pop
sub
add
cmpl
mov
not
mov
mov
mov
pop
jne
mov
xor
add
leave
ret
push
mov
sub
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
cmpl
ja
mov
adc
jmp
lea
mov
mov
movzbl
and
lea
mov
mov
mov
adc
mov
movl
cmpl
jg
mov
mov
sbb
mov
mov
xor
mov
add
mov
movl
mov
xor
add
mov
mov
mov
lea
push
mov
xor
add
mov
push
pushl
add
pushl
push
push
mov
mov
pushl
pushl
call
add
leave
ret
push
mov
sub
movl
mov
movl
cmpl
jge
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
incl
mov
cmpl
js
mov
mov
add
jmp
mov
mov
add
mov
mov
add
mov
shl
push
mov
mov
mov
mov
add
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
dec
not
and
mov
mov
lea
mov
mov
mov
mov
sub
mov
jmp
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
movl
cmpl
jg
mov
and
mov
xor
mov
xor
mov
mov
sub
addl
xor
cmp
mov
jne
mov
pop
leave
ret
movl
movl
movl
movl
mov
ret
push
mov
sub
push
mov
mov
or
mov
movl
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
movl
movl
cmpl
jb
mov
mov
sub
mov
dec
mov
mov
sub
cmp
mov
sbb
mov
push
push
mov
xor
mov
add
mov
movl
call
test
je
call
mov
mov
xor
add
mov
sub
mov
mov
movl
movzwl
or
mov
mov
movl
mov
mov
xor
add
mov
mov
mov
mov
subb
mov
xor
mov
add
mov
cmp
je
mov
xor
mov
add
add
imul
mov
neg
mov
mov
mov
mov
mov
xor
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movzbl
movl
cmpl
jbe
test
mov
adcb
movzbl
xor
add
add
cmp
movzbl
sar
mov
mov
mov
cmp
mov
mov
adcb
movzbl
xor
add
imul
movzbl
sub
jmp
mov
movzbl
xor
andl
sub
sub
mov
mov
cmp
mov
adc
mov
mov
xor
add
ror
mov
mov
movzbl
shl
mov
mov
xor
addl
xorl
add
imul
xor
add
imul
mov
xor
mov
movzbl
sub
xor
add
imul
incb
mov
movl
cmpl
jle
mov
xor
mov
movzwl
inc
mov
mov
xor
add
imul
add
mov
xor
cmp
addl
andl
adcl
add
imul
decb
mov
mov
xor
lea
xor
xor
mov
add
cmp
jne
mov
mov
add
xor
add
pop
pop
pop
leave
ret
push
mov
push
push
pop
mov
test
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
xor
add
mov
inc
cmp
jb
push
push
push
push
xor
call
test
jne
mov
mov
cmp
jne
call
movl
cmpl
jbe
mov
movzbl
sub
mov
mov
mov
mov
sub
mov
mov
mov
xor
lea
mov
mov
mov
mov
addb
mov
xor
mov
add
mov
inc
movzwl
xor
mov
cmp
jne
test
je
push
cmpl
jp
lea
mov
mov
mov
or
jmp
mov
mov
adc
mov
lea
mov
mov
mov
xor
pop
mov
mov
mov
and
sub
sub
mov
xor
add
mov
dec
jne
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
inc
mov
cmp
je
mov
cmp
jbe
dec
mov
jmp
test
jne
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jb
mov
xor
mov
div
lea
mov
cmp
jne
push
push
call
mov
add
cmp
jne
pop
ret
push
push
movl
call
cmp
je
push
mov
cmp
jae
test
je
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
div
lea
mov
jmp
test
jne
mov
jmp
dec
mov
cmp
jne
pop
ret
push
mov
sub
mov
movl
movl
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
push
movl
cmpl
jb
mov
push
orl
mov
push
lea
mov
pushl
pushl
call
mov
mov
mov
and
mov
mov
xor
mov
add
cmp
je
mov
jmp
push
pushl
push
pushl
call
lea
mov
mov
mov
mov
add
mov
mov
add
mov
xor
pop
add
pop
pop
leave
ret
push
mov
sub
push
push
movl
lea
movl
push
mov
call
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
movl
cmpl
je
movl
mov
mov
mov
xorl
test
jne
mov
mov
mov
mov
cmpl
je
push
push
add
push
pushl
pushl
call
add
mov
mov
rol
mov
mov
test
je
movl
mov
jmp
cmp
je
cmpl
jbe
mov
mov
adc
jmp
mov
xor
mov
sub
mov
mov
mov
xor
xor
cmp
sbbl
xorl
subl
xor
add
lea
div
push
push
shl
mov
adcl
andl
call
movl
cmpl
jle
mov
inc
mov
pop
pop
test
je
mov
pushl
xorl
subl
xorl
push
push
push
push
pushl
pushl
call
add
mov
movl
cmp
jne
cmp
mov
adc
mov
mov
mov
push
pushl
test
mov
sbb
mov
call
mov
jmp
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
push
push
push
push
push
pushl
call
movl
cmpl
je
mov
sbb
mov
not
mov
add
mov
mov
mov
sub
mov
dec
xor
mov
xor
mov
add
jne
mov
cmp
mov
sbb
mov
xor
test
orl
adcl
xor
xor
add
add
div
shl
mov
pushl
pushl
call
lea
xor
mov
movzbl
or
mov
mov
push
xor
pop
div
cmp
jbe
mov
xor
inc
xor
mov
cmp
jne
pop
xor
pop
inc
pop
leave
ret
push
mov
push
push
mov
movl
movl
cmp
je
cmpl
jne
push
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
movl
cmpl
jge
mov
cmp
sbbl
andl
addl
xor
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
call
push
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
mov
mov
sub
mov
mov
mov
mov
cmp
mov
mov
adc
mov
mov
add
pop
mov
movl
cmpl
jge
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
mov
mov
xor
leave
ret
push
mov
sub
mov
mov
movl
cmpl
jle
cmp
jb
lea
mov
mov
mov
and
jmp
mov
mov
sub
mov
mov
mov
and
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
push
mov
xor
push
movl
mov
add
movl
mov
mov
mov
mov
mov
sub
xor
add
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
cmp
movzwl
adc
mov
lea
mov
lea
mov
lea
mov
mov
rcr
mov
lea
mov
lea
cmp
jle
mov
sub
mov
jmp
mov
mov
sub
mov
adc
mov
mov
lea
mov
lea
mov
mov
mov
sub
lea
mov
lea
mov
lea
movzbl
sub
mov
mov
mov
movl
cmpl
jbe
movzwl
adc
mov
mov
sbb
movzbl
adc
mov
movzwl
add
mov
mov
mov
add
mov
cmp
mov
sar
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
or
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
lea
add
mov
mov
mov
cmp
movzbl
mov
sbb
mov
mov
mov
movl
mov
mov
movl
cmp
mov
mov
adc
mov
mov
pushl
mov
or
mov
mov
push
push
lea
push
mov
sub
mov
mov
pushl
pushl
call
push
push
lea
push
movl
cmpl
ja
mov
shlb
mov
xor
movzwl
adc
mov
mov
test
movl
sbbl
mov
pushl
pushl
call
mov
mov
mov
mov
xor
xor
lea
add
cmp
je
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
xor
movzwl
xor
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
xor
movl
cmpl
jle
add
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
movl
cmpl
jae
mov
mov
or
lea
mov
mov
mov
sub
cmp
mov
mov
adc
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
pop
div
cmp
je
cmp
je
push
xor
mov
mov
addb
pop
div
cmp
jae
cmp
je
push
xor
mov
cmp
mov
adc
mov
pop
div
cmp
ja
cmp
je
xor
mov
mov
xor
add
mov
div
cmp
je
cmp
jne
mov
movl
cmpl
jg
mov
mov
adc
mov
mov
movzwl
sbb
mov
mov
mov
add
movl
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
mov
mov
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
mov
add
mov
mov
add
mov
jmp
mov
mov
movl
cmpl
je
mov
mov
add
mov
mov
sub
mov
mov
add
mov
mov
or
mov
mov
xor
inc
xor
cmp
jne
pop
pop
ret
push
mov
sub
push
push
call
cmp
jle
xor
jmp
push
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
lea
call
movl
cmpl
jge
push
pop
movzwl
mov
add
mov
push
mov
pop
push
pop
test
mov
mov
sbb
mov
push
mov
mov
mov
mov
xor
mov
mov
pop
push
mov
mov
xor
mov
mov
mov
pop
test
mov
mov
adc
push
mov
mov
pop
push
cmpl
je
movzbl
xor
mov
jmp
mov
shl
mov
movzwl
xor
mov
pop
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
add
push
mov
mov
mov
mov
mov
cmpl
jge
mov
sub
mov
jmp
mov
or
mov
mov
adc
mov
pop
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
mov
mov
and
mov
mov
mov
mov
mov
add
pop
push
mov
movl
cmpl
jge
mov
adc
pop
push
mov
pop
mov
mov
xor
push
push
mov
mov
lea
mov
or
mov
push
mov
mov
mov
mov
call
add
lea
push
call
test
je
lea
lea
call
xor
mov
mov
xor
mov
call
mov
call
mov
call
mov
mov
or
mov
call
lea
mov
mov
xor
mov
lea
call
movzbl
rcr
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
mov
or
mov
mov
movl
cmpl
je
mov
xor
movzwl
not
mov
mov
xor
mov
mov
call
call
pop
pop
test
je
call
mov
mov
mov
mov
mov
mov
xor
mov
cmp
mov
mov
sbb
mov
mov
mov
add
mov
mov
leave
ret
call
test
je
push
call
push
mov
sub
movl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
movl
movl
movl
movl
movl
mov
mov
movl
call
test
je
push
push
push
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
movl
cmpl
ja
mov
mov
xor
mov
mov
or
mov
mov
mov
or
mov
mov
mov
add
jmp
cmp
jne
lea
mov
call
mov
mov
mov
mov
xor
xor
sub
sub
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
push
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
movl
cmpl
jb
mov
add
movzwl
or
mov
movl
mov
mov
mov
mov
mov
mov
cmp
jbe
movzwl
dec
mov
jmp
movzbl
sub
mov
mov
shl
mov
mov
mov
mov
movzbl
sub
pushl
mov
mov
pushl
lea
push
call
call
test
je
mov
mov
sub
mov
addl
jmp
mov
mov
mov
mov
or
mov
lea
mov
test
mov
sbb
mov
mov
add
mov
mov
mov
leave
ret
push
mov
sub
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
add
movl
movl
cmpl
jbe
mov
add
lea
mov
mov
mov
and
mov
mov
or
movl
mov
mov
mov
cmp
jo
movzwl
sbb
jmp
mov
xor
mov
sub
push
push
mov
mov
xor
xor
cmp
ja
mov
mov
xor
jmp
movzwl
and
mov
mov
sub
mov
sub
mov
mov
mov
movl
mov
movzwl
movzwl
add
mov
xor
mov
add
push
mov
movzbl
xor
mov
mov
mov
orl
mov
imul
mov
sub
mov
mov
movl
addl
mov
mov
xor
lea
mov
mov
xor
movzwl
or
mov
mov
add
mov
xor
movzwl
add
cmp
ja
movl
mov
add
mov
mov
sub
mov
mov
movl
cmpl
ja
mov
sub
mov
xor
mov
add
mov
movzwl
cmp
jne
cmp
mov
movzwl
sbb
mov
mov
mov
xor
add
imul
mov
mov
mov
push
call
test
je
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
mov
dec
mov
jmp
mov
xor
mov
xor
mov
add
movzbl
push
mov
mov
xor
add
imul
mov
mov
call
test
jne
movl
cmpl
jle
mov
mov
xor
add
imul
mov
movzbl
mov
sub
xor
movzwl
push
mov
sub
mov
mov
call
test
jne
movl
movzwl
mov
sub
mov
mov
mov
xor
lea
mov
xor
xor
xor
xor
mov
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
add
movzwl
cmp
mov
jbe
jmp
movl
cmpl
jae
movl
cmp
mov
mov
sbb
mov
mov
mov
xor
xor
lea
xor
mov
xorl
mov
movzbl
sub
mov
mov
mov
xor
add
imul
mov
movzbl
mov
sub
xor
cmp
je
addl
mov
mov
cmp
je
andl
mov
xor
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
imul
mov
jmp
movzbl
sub
mov
xor
sub
add
mov
and
mov
addl
mov
mov
add
mov
mov
mov
xor
add
cmp
je
addl
jmp
mov
mov
xor
lea
mov
jmp
movl
cmpl
jle
mov
mov
and
mov
cmp
mov
mov
adc
mov
orl
mov
imul
mov
mov
cmp
mov
sbb
xor
add
movzbl
xor
xor
cmp
pop
mov
mov
pop
pop
je
mov
xor
add
mov
cmp
mov
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
cmp
mov
sbb
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
leave
ret
push
mov
sub
movl
movl
movl
movl
lea
mov
lea
mov
lea
mov
push
lea
push
mov
mov
mov
push
mov
movl
mov
movzbl
not
mov
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
cmp
adcl
lea
push
lea
push
lea
push
lea
call
mov
cmp
je
mov
cmpl
je
cmpl
jne
mov
jmp
cmp
je
movl
cmpl
jge
mov
or
cmp
movzbl
shl
mov
mov
add
xor
cmp
je
mov
cmp
jne
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
xor
add
cmp
jb
mov
addl
mov
mov
cmp
jae
mov
xor
mov
mov
movzwl
mov
dec
cmp
ja
cmpl
jle
mov
mov
xor
mov
jmp
mov
mov
sub
mov
mov
mov
sub
addl
mov
andl
mov
xor
mov
add
imul
movzwl
mov
lea
push
mov
sub
mov
mov
xor
add
mov
imul
mov
add
push
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
pushl
movl
cmpl
jae
mov
call
cmpl
je
mov
xor
inc
xor
mov
jmp
mov
mov
add
mov
mov
add
xor
mov
mov
cmp
je
mov
xor
mov
movzbl
xor
mov
mov
add
mov
mov
imul
mov
mov
mov
and
mov
mov
mov
mov
mov
imul
test
movl
sbbl
andl
xchg
dec
addl
andl
dec
cmp
jne
mov
mov
mov
mov
xor
mov
movl
cmpl
je
xor
lea
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
add
dec
jne
jmp
mov
mov
sub
mov
call
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
mov
mov
addb
mov
xor
add
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
cmp
jbe
movzbl
xor
jmp
movzbl
sub
mov
add
mov
xor
add
leave
ret
push
mov
sub
mov
mov
xor
mov
mov
movzbl
and
mov
mov
mov
xor
leave
ret
push
mov
sub
mov
mov
xor
mov
mov
or
mov
cmp
mov
movzbl
adc
mov
leave
ret
push
mov
sub
cmp
mov
mov
sbb
mov
mov
xor
mov
mov
mov
or
mov
leave
ret
jmp
lea
mov
mov
mov
mov
mov
mov
mov
ret
jns
aas
jns
outsl
aaa
jne
inc
inc
ja
popa
xor
inc
xor
bound
cmp
dec
inc
xor
and
xor
and
push
cmp
aas
and
insb
dec
xor
add
add
push
adc
cmp
add
add
inc
add
add
adc
push
add
add
push
jo
add
add
inc
add
add
push
adc
cwtl
cmp
jo
inc
add
add
ljmp
add
or
cld
fdivrp
sti
cli
stc
clc
push
push
push
push
dec
lcall
inc
add
inc
add
add
cwtl
jo
add
jo
add
jno
add
inc
add
jge
add
lock
add
jne
add
jne
add
jne
add
jo
add
jo
add
jo
add
jno
add
inc
add
add
add
add
add
add
add
std
std
xor
cli
push
std
hlt
sbb
icebp
cmp
into
std
dec
fsts
fcoms
idiv
ss
std
xor
cli
push
std
hlt
sbb
icebp
incb
std
into
std
dec
fldenv
fsubs
idiv
ss
std
decb
std
idiv
imul
std
dec
fnstenv
fdivs
sub
inc
aaa
push
ss
clc
xor
std
xor
stc
imul
cmp
repnz
std
icebp
flds
inc
sub
push
aaa
pusha
ss
xor
std
xor
stc
imul
incb
std
repnz
std
icebp
fsts
push
sub
pusha
aaa
jo
ja
incb
std
std
imul
idiv
outsb
std
repz
std
icebp
fldenv
bound
jno
jo
xorb
clc
incb
std
std
imul
idiv
sbb
hlt
std
repnz
fnstenv
jb
andl
xchg
clc
incb
std
std
imul
idiv
imul
iret
flds
daa
nop
aaa
mov
pop
std
std
imul
idiv
imul
std
icebp
fsts
daa
mov
clc
decb
std
std
sbb
cli
insl
std
stc
std
clc
fldenv
daa
mov
shlb
aaa
shlb
xlat
stc
cmp
std
adc
sti
decb
std
hlt
std
repnz
fld
fadd
sub
daa
shlb
loopne
out
incb
add
jno
add
jno
add
inc
add
add
jne
add
xchg
gs
add
add
add
enter
add
fs
push
or
add
inc
add
ja
add
pop
jne
sbb
push
add
gs
push
add
inc
add
jne
push
add
add
inc
add
dec
add
add
add
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jbe
test
test
mov
mov
mov
mov
sbb
sbb
sbb
jns
dec
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jbe
test
test
mov
mov
mov
mov
sbb
sbb
sbb
jns
dec
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
xchg
xchg
xchg
sbb
inc
sbb
adc
add
add
add
add
imul
add
add
add
dec
add
add
add
add
jns
add
jns
add
imul
outsl
add
dec
add
inc
add
imul
add
add
add
dec
je
add
out
ljmp
inc
add
out
jmp
add
out
incl
out
decl
and
push
std
incb
add
or
xchg
add
pop
add
pop
add
or
and
add
sbb
push
popa
insl
dec
insb
insb
push
imul
add
data16
std
imul
adc
stc
imul
idiv
push
std
cmc
std
hlt
fsts
fcoms
idiv
add
add
add
fs
bound
add
add
inc
add
push
add
pop
add
inc
add
push
add
push
add
add
add
popa
add
ja
jae
js
add
add
data16
add
add
jne
gs
xor
add
inc
push
imul
jne
imul
inc
imul
inc
dec
add
add
jbe
add
adc
xchg
or
add
jbe
jae
add
push
imul
inc
std
jle
incb
pop
idiv
mov
std
pop
mov
pop
sub
add
inc
add
pusha
inc
add
std
sbb
imul
std
sbb
adc
sub
sub
std
incb
add
std
sbb
adc
sub
sub
std
push
adc
std
sbb
insl
std
adc
std
decb
xor
inc
or
arpl
jae
orl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xor
jns
pop
xchg
xor
or
cmp
inc
xchg
out
shlb
push
jbe
gs
gs
aaa
pop
ja
sbb
xchg
xchg
test
arpl
out
xor
mov
jg
data16
repnz
int
mov
xchg
enter
add
add
sub
dec
pop
xor
cmp
pop
xor
bound
xor
insl
xor
xor
je
imul
sub
and
and
jns
and
js
jo
xor
dec
xor
and
add
xor
cmp
jae
inc
xor
push
inc
cmp
js
sub
xor
xor
push
and
inc
add
and
xor
xor
add
inc
dec
pop
xor
add
jno
inc
push
add
imul
xor
push
add
cmp
xor
add
xor
xor
arpl
inc
je
dec
xor
aaa
jb
pop
add
dec
add
xor
jbe
push
push
data16
cmp
insb
push
insb
and
xor
and
jne
add
insl
inc
aaa
cmp
bound
add
and
jns
push
dec
cmp
je
add
outsb
cmp
bound
push
imul
cmp
cmp
gs
and
and
cmp
add
and
pop
outsb
xor
jns
cmp
xor
dec
inc
aaa
dec
add
jbe
dec
inc
xor
data16
popa
cmp
xor
inc
add
xchg
cmp
add
add
add
inc
add
add
add
imul
mov
pushf
test
nop
out
nop
nop
lahf
and
lret
jno
cmc
sub
or
lods
frstor
inc
or
shrl
imul
pop
ret
into
cmp
push
xchg
dec
rcll
cs
push
xor
sbb
mov
lahf
cli
sub
dec
or
fisubs
outsl
loop
jge
or
push
test
leave
cwtl
frstor
jns
data16
xchg
in
jb
adc
pop
xchg
or
jg
add
pop
addr16
push
sub
popf
xorb
jmp
add
mov
sahf
fwait
push
sbb
sbb
inc
cmpsb
sub
neg
test
sbb
push
pop
jno
daa
loop
or
sbb
fildl
adc
jo
movsb
into
das
divl
out
mov
addb
jle
bound
mov
scas
std
dec
loope
inc
cmp
push
dec
mov
loop
lret
jle
lahf
rol
mov
sahf
mov
enter
fbstp
jge
mov
cwtl
mov
ss
ss
divb
in
push
mov
pop
cwtl
push
ss
add
sub
scas
shlb
lcall
fwait
aaa
xchg
jne
js
nop
pop
testl
jmp
lahf
mov
aaa
lds
and
dec
xchg
loopne
mov
sti
dec
add
pop
xor
xor
insb
int3
sbb
mov
ret
xchg
push
add
dec
call
jl
sar
push
rcll
adc
jbe
outsb
inc
push
push
cmc
les
mov
loope
or
shl
repz
pop
adc
fistpl
mov
sbb
fwait
jnp
or
xor
arpl
push
stc
cmp
sbb
or
push
jge
inc
xchg
out
insb
jl
jbe
push
stos
pop
out
or
cwtl
imul
inc
pop
dec
dec
dec
rclb
xchg
xor
push
push
fistps
xchg
ret
out
jnp
mov
cwtl
insb
imul
inc
push
movsb
adc
cmp
ja
movsb
std
arpl
mov
push
outsl
popf
add
jl
movsl
fwait
pop
cmpsl
das
sub
xchg
mov
pop
pop
add
popf
aad
inc
inc
iret
or
in
jp
stos
mov
clc
outsb
jle
aas
mov
repnz
and
jmp
nop
ljmp
andb
mov
int
insb
in
add
in
ja
shrb
in
or
xorb
dec
mov
cld
jmp
xchg
sbb
fwait
and
mov
dec
daa
idivl
jecxz
leave
mov
rorb
ret
or
int3
stos
xor
rorb
sbb
sub
and
adc
jne
pop
cwtl
push
mov
inc
mov
dec
inc
xchg
mov
and
jg
mov
mov
cwtl
pushf
addr16
cwtl
insl
ljmp
add
sahf
inc
test
dec
push
add
jl
ja
jl
ficoms
bound
adc
mov
sbb
pop
sbb
loop
rcll
int3
lock
cmp
scas
fsubr
data16
ret
cmp
out
dec
fcompl
pop
ljmp
pop
and
xchg
iret
push
dec
mov
dec
push
xchg
dec
mov
jmp
fcompl
iret
adc
xor
cli
cwtl
fadds
add
and
stos
dec
dec
imul
lret
jmp
fcomip
repz
movsb
fsubrs
mov
jns
clc
mov
pop
adc
rorl
fadds
orl
sbb
sub
inc
ret
add
and
sub
xchg
cmp
in
add
cmp
push
mov
push
in
shll
add
call
cmc
out
push
popf
roll
subl
stc
adc
sbb
xchg
cli
adc
dec
jns
jnp
sbb
lcall
jle
ljmp
mov
mov
mov
mov
jo
jle
icebp
cltd
out
stos
int3
pop
pushf
shl
mov
lret
lcall
movsb
les
int
push
push
nop
clc
push
int
ja
and
jae
cmp
dec
jbe
mov
pop
dec
nop
mov
std
pusha
aas
and
pop
mov
dec
les
dec
ja
or
fstl
insb
add
jbe
mov
inc
orl
sti
jg
sahf
out
mov
daa
lahf
ficoml
cmc
sub
or
ret
int
lret
adc
fadd
nop
jbe
loop
jne
push
das
popa
xor
imul
jp
push
mov
lods
sbb
aad
adc
rsqrtps
cmp
call
aas
pop
into
push
sbb
and
loop
inc
push
pop
jl
and
dec
xchg
insl
mov
lods
cmp
fs
push
icebp
lods
and
xchg
adc
ljmp
iret
inc
call
push
push
add
xor
jmp
mov
js
xor
sub
pop
rolb
push
sub
lods
mov
lcall
sbb
jae
cmpsb
jg
mov
mov
ds
xor
test
int3
push
fnstenv
lret
and
out
sub
lahf
dec
sub
lock
outsb
popa
repnz
int
push
mov
mov
push
stc
sub
jp
or
xor
push
push
stos
iret
jecxz
add
jecxz
push
scas
xchg
decb
popa
and
movl
icebp
mov
pop
jo
popf
fsqrt
das
pushf
call
pop
xor
sbb
xchg
push
add
cli
xor
fnsave
in
mov
sbbb
sbb
out
data16
mov
inc
lret
jle
rclb
push
in
mov
decl
xor
or
icebp
popf
in
xor
push
sbb
and
lods
movb
int
dec
test
sahf
ds
ss
movsl
and
inc
fstpl
mov
inc
in
fldcw
lods
dec
xchg
out
mov
enter
jg
andl
add
push
or
or
dec
dec
xchg
mov
jne
or
icebp
sarb
divl
jmp
stc
shrl
push
cmp
andb
popl
jge
imul
mov
xor
cwtl
jb
stos
cmc
repnz
cmp
aas
leave
out
popa
jmp
push
cwtl
adc
ret
iret
out
cltd
add
jns
mov
sub
sub
lret
pop
aad
push
mov
add
push
pop
out
dec
and
inc
sbb
ds
loopne
dec
movb
inc
testl
sahf
or
cmp
mov
sbb
mov
push
insl
cld
pop
sbbb
insb
xor
dec
add
gs
in
lret
lret
push
jp
mov
inc
cmp
xchg
and
in
xchg
mov
sbb
cs
jb
addr16
xlat
mov
push
inc
xchg
lret
mov
and
shlb
add
xorb
stos
cmp
jl
jo
sbb
lret
dec
out
adc
lea
ljmp
sti
lcall
mov
and
pop
aam
sbb
inc
mov
call
stos
hlt
and
inc
mov
dec
inc
xchg
arpl
xor
insb
xor
dec
mov
push
fwait
xorl
roll
pop
pop
mov
outsb
mov
jge
mov
sbbl
sub
movsb
out
push
not
cmp
mov
xor
rcl
xchg
aas
leave
jmp
xchg
cmpsb
sahf
and
cmp
sub
cmpsb
xlat
pusha
outsl
sub
pop
lret
mov
xor
gs
dec
cs
push
fwait
jbe
clc
fwait
sub
add
cltd
jo
fidivl
inc
test
add
dec
lahf
jno
mov
pop
and
icebp
mov
out
push
sub
jo
daa
cltd
cs
insl
sub
xchg
fmuls
jl
test
sbb
adc
pusha
jp
fidivs
scas
jl
push
or
add
pop
shll
ds
push
lock
mov
aam
fmull
mov
push
lcall
mov
jne
jle
xchg
pop
or
mov
mov
dec
xor
xor
sub
cmpl
mov
aas
sbb
pop
mov
add
cmc
testb
mov
add
pop
insb
outsl
mov
int
dec
push
shr
cli
in
addr16
jge
jg
shll
cld
adc
les
push
scas
add
aad
cs
fisubrl
xchg
hlt
and
fsubp
inc
out
nop
jecxz
enter
lods
xor
je,pt
mov
lret
push
gs
daa
movsb
into
sahf
mov
pop
in
dec
mov
dec
cli
cltd
out
leave
mov
jecxz
or
fsubrs
xchg
xor
sti
push
hlt
cmc
or
insb
sub
shl
js
hlt
rolb
and
lcall
imul
xchg
mov
loope
sub
mov
sahf
pop
dec
jb
dec
mov
or
lds
sbb
mov
popf
pop
inc
lods
mov
xlat
iret
jle
outsb
push
xchg
push
pop
mul
sbb
pop
adc
outsb
adc
fst
lret
mov
inc
mov
mov
inc
rcr
add
cmpsb
ret
sub
int
repnz
lods
sbbb
loope
cmp
fmuls
and
lods
pop
test
and
out
lods
out
lods
insl
ss
ds
add
or
aas
movsb
pop
mov
add
fstpt
inc
inc
jnp
push
sar
dec
add
mov
mov
aad
rcll
fdivrs
dec
lods
dec
cs
fwait
subl
int
test
add
outsb
in
lret
cmp
add
lahf
xor
stc
stos
mov
add
jnp
jecxz
jle
xchg
mov
pop
test
sub
repnz
hlt
jge
data16
push
jge
xchg
cmc
in
or
ja
mov
into
sub
loop
fs
mov
lock
das
add
ficoml
pop
jecxz
jns
pop
mov
fs
jbe,pn
stc
sub
jmp
cmp
call
xchg
push
sbb
mov
int3
pop
push
cmp
popl
xor
decl
and
sbb
loope
stos
inc
jle
hlt
data16
call
ret
test
cltd
fcos
inc
aam
pop
push
es
pop
dec
outsl
cmpsl
adc
mov
rcrb
push
in
xchg
ss
int3
mov
das
cmp
gs
outsl
das
and
add
pusha
cmp
pop
xchg
push
dec
idiv
out
or
dec
and
xor
mov
pop
pop
scas
imul
insb
adc
xor
dec
das
mov
jl
mov
mov
or
addb
lods
mov
jl
mov
xchg
roll
aaa
pop
or
fnstcw
mov
push
mov
outsl
popf
sahf
in
mov
push
xchg
and
xor
or
jne
lcall
pop
sub
test
or
mov
aaa
in
int
lcall
mov
xchg
ljmp
andb
das
pop
enter
xor
frstor
fsubrs
or
or
shrl
pop
stos
mov
push
js
jl
fwait
or
std
outsb
xchg
in
sarb
inc
and
cmpb
jo
xchg
pop
inc
dec
rcl
inc
data16
popf
repnz
popf
sar
lods
loop
test
xchg
push
stos
pushf
mov
jns
call
mov
add
fidivs
cmc
adc
loop
cmp
bound
mov
test
rorb
and
pop
mov
aam
mov
pop
fwait
add
mov
sub
test
sbb
cli
fldt
mov
and
xor
icebp
pop
mov
pop
mov
js
xor
inc
mov
dec
fucomp
pop
inc
xchg
lret
outsb
mov
incl
or
adc
adc
js
adc
pop
sbb
imul
sub
aaa
and
jp,pn
and
jbe
setle
shl
xchg
xorl
loop
out
arpl
jnp
mov
es
pop
lds
pop
repnz
jp
or
xlat
jmp
stos
mov
test
mov
or
mov
out
out
sbb
aas
daa
stos
push
xchg
inc
inc
sub
mov
idiv
call
lods
jecxz
gs
in
sti
xor
fmull
ja
stos
loop
push
mov
sbb
lcall
pushf
gs
test
sbb
lret
in
xlat
mov
bound
push
mov
jns
jmp
nop
les
pop
in
jne
or
test
outsl
mov
sbb
in
xor
mov
imul
fs
movsl
pop
xchg
ret
cmp
push
mov
push
subb
and
pusha
jnp
xchg
scas
out
into
test
enter
ja
push
dec
xchg
fwait
adc
mov
out
loopne
loopne
cmp
mov
insb
mov
jl
sti
sti
popa
data16
ret
pushf
in
stos
jle
jp
sbb
test
in
cmc
and
jae
inc
mov
mov
mov
adc
lcall
cmpsl
mov
cmp
push
inc
cmp
dec
repz
push
push
sub
mov
in
flds
mov
das
push
or
jne
and
scas
loopne
fucompp
push
push
mov
mov
jge
loop
lods
out
cwtl
mov
fldenv
or
aad
jne
es
pop
xchg
add
out
insb
lea
mov
out
jecxz
ja
sbb
mov
jo
adc
les
push
rolb
lret
mov
shrl
iret
push
repnz
jb
and
or
sbb
cwtl
jne
jne
add
mov
clc
dec
les
dec
cli
fisttps
mov
insl
push
movsb
push
lret
adc
adc
jne
imul
sti
push
sbb
shlb
aas
cmp
push
lock
inc
cltd
jns
jecxz
mov
lds
rcll
and
in
lret
cld
mov
pushf
movsl
lret
inc
xchg
jo
scas
cli
leave
lahf
out
jne
xor
xchg
push
fldenv
sbb
adc
repnz
int
les
push
mov
insl
enter
rcll
cwtl
push
sub
mov
xor
sbb
sbb
dec
pop
inc
push
xor
xor
xor
and
adc
inc
test
scas
sub
std
adc
fcomi
imul
xlat
loope
ds
movsl
adc
cmp
stos
mov
inc
add
or
ss
mov
xor
lahf
lcall
mov
and
mov
adc
and
andl
movsb
and
push
loopne
xchg
repz
jae
int3
stc
push
call
jae
or
test
leave
add
jns
pop
xor
ljmp
jle
xor
and
in
lock
add
out
add
loopne
adc
stos
sbb
jno
and
hlt
mov
mov
outsb
adc
aad
imul
jnp
dec
dec
jecxz
inc
inc
dec
bnd
mov
and
sahf
adc
and
testb
xor
xlat
mov
and
dec
test
dec
fisttpll
test
mov
mov
mov
popf
push
pop
clc
mov
mov
push
jmp
scas
jb
mov
cmp
add
ja
and
ljmp
mov
and
movsb
mulb
fnstcw
lahf
imul
loop
sarl
scas
add
xor
fstpl
cmp
xchg
shll
sub
sub
sub
mov
add
adc
sti
std
call
lods
stos
xchg
sub
into
xchg
push
stc
dec
fsubl
add
and
mov
cmp
hlt
jo
shll
repz
xchg
sbb
les
pusha
fwait
mov
dec
movsl
cmc
lahf
dec
jl
pushf
cmpsl
mov
cmpsl
pusha
in
add
push
aad
jecxz
movsb
or
inc
dec
push
lea
pop
or
in
inc
rcr
push
adc
sub
adc
mov
mov
xchg
fisubl
xchg
and
daa
xchg
loope
fdivrs
cmp
and
bound
push
mov
out
mov
std
pop
scas
inc
pop
mov
xchg
mov
out
insl
movsl
and
jbe
cmp
push
xor
lahf
fwait
push
andb
int
push
fidivl
fsts
mov
lret
pusha
cli
clc
sbb
cmp
jg
mov
icebp
mov
push
bswap
ss
or
rcrl
pusha
inc
lods
mov
lods
ret
cld
push
cltd
and
nop
imull
mov
jbe
mov
pop
shll
sti
inc
add
cmpsl
testb
push
scas
inc
and
add
add
and
and
mov
insb
add
stc
lcall
push
test
sbb
adc
arpl
xchg
adc
and
inc
push
bound
pusha
adc
fsubrl
mov
jo
enter
jp
movsb
repz
sub
cld
push
pop
jno
cli
imul
lods
test
movsb
xor
aad
mov
hlt
add
out
into
aaa
mov
cld
out
shl
xchg
inc
ret
and
addb
bound
push
fmulp
scas
inc
pushf
shrb
fisubrl
pop
xchg
xor
adc
mov
lods
sbb
push
testb
or
xor
and
and
mov
pop
push
shll
lahf
fwait
push
adcl
dec
pop
and
divb
lds
pop
outsb
lahf
popf
sub
nop
cmp
push
and
cld
mov
repnz
aaa
xchg
hlt
cld
dec
bound
push
push
pop
out
sub
jnp
inc
push
pop
jb
mov
sti
mov
je
pop
sti
cmc
push
mov
aam
scas
xchg
lds
lret
lret
das
ret
xlat
data16
sbb
pop
and
adc
and
sbb
jmp
mov
pop
arpl
or
add
out
cs
pop
outsb
xor
mov
call
xor
mov
dec
lods
cmp
popf
sbb
out
mov
or
lret
insb
ret
mov
test
lret
jo
lods
gs
sbb
in
notb
sub
stos
fwait
inc
addr16
mov
sti
mov
mov
push
vmovss
ja
and
dec
sbb
and
xchg
mov
jge
ds
push
inc
mov
mov
je
clc
lods
xor
push
jmp
ljmp
xchg
rcll
jg
mov
imul
shl
in
pop
pop
fs
jg
cwtl
test
pop
cmpsb
mov
push
jg
movzbl
lahf
pop
int3
mov
lods
sbb
bound
mov
mov
and
adc
dec
rcll
lds
aad
icebp
clc
xchg
cld
lods
mov
or
cmp
in
or
jbe
adc
xor
test
pop
ret
cmp
sbb
cmpsl
cmp
cld
fildll
inc
mov
and
arpl
cmp
dec
mov
popa
fs
mov
ja
loop
pusha
cld
test
je
mov
shrl
mov
lods
xor
sahf
ljmp
xchg
cmp
jmp
cwtl
pop
mulb
adcl
mov
stc
dec
jmp
or
and
outsb
mov
inc
mov
xchg
or
pusha
out
loope
jno
shll
inc
sbb
jg
xor
aas
jb
rcrb
mov
fisttps
mov
sbb
outsl
imul
xchg
je
adc
cmpsb
jmp
mov
cmpb
lods
outsb
jns
sbb
add
push
shr
pop
fadds
sub
mov
iret
clc
xchg
inc
pushf
or
icebp
xor
inc
xchg
cmp
jge
sbb
jae
cmp
insl
loop
ljmp
popf
mov
ja,pn
jmp
or
dec
and
push
fbld
jns
mov
or
cwtl
mov
jmp
inc
add
pop
or
and
enter
xchg
dec
lds
cmp
notl
or
sub
pop
mov
pop
ret
dec
movsl
pop
shll
add
push
lahf
enter
idivb
jle
popf
adcb
add
test
jno
fcoml
or
sbb
cmp
dec
mov
jl
push
cmp
mov
add
jp
pop
pushf
insl
cmpsb
cs
dec
aaa
fnstsw
fimull
daa
imul
xchg
jb
test
lret
out
sbb
push
push
add
jns
add
lea
in
in
adc
testb
std
testl
mov
std
sub
push
mov
jl
xchg
pop
inc
push
mov
adc
xchg
nop
adc
mov
mov
mov
mov
mov
jl
psubq
cs
mov
mov
andb
pushl
hlt
jbe
jg
dec
push
stc
test
or
push
and
and
popa
xor
inc
pop
incb
std
xor
cmc
jp
das
push
fnstsw
cmp
cmp
loope
pop
xchg
ficompl
mov
jb
cmpsl
dec
ret
sarl
sbb
stc
dec
addr16
add
loop
pop
push
int3
dec
pop
mov
mov
imul
incl
jl
push
add
fistpl
std
mov
pop
lock
sbb
pop
mov
repnz
fdivrl
sbb
push
int
add
jp
mov
xlat
insb
pop
add
stc
fistps
adcl
loope
mov
mov
ljmp
roll
mov
out
clc
pop
push
mov
xchg
fwait
repnz
pop
mov
sbb
push
jge
clc
adc
jmp
push
mov
aaa
pop
pop
les
sbbb
xor
cmp
mov
mov
lock
stc
stos
mov
roll
cmp
mov
xchg
xor
imul
in
xchg
xlat
and
add
adc
mov
scas
cmpsb
xchg
imul
and
ljmp
adc
in
jg
sub
lret
fsubs
pop
lock
xchg
cltd
test
dec
out
push
and
pop
mov
adcl
mov
hlt
or
leave
push
test
sub
in
xor
pop
push
cmpsb
or
dec
test
pop
mov
mov
cmpsl
add
shll
mov
push
imul
dec
pop
jecxz
mov
faddl
cmp
icebp
repnz
jae
outsb
add
ss
repnz
push
gs
adc
cmp
adc
and
xchg
fiaddl
stos
cltd
inc
mov
shll
in
pop
imul
std
lcall
gs
dec
ficoml
aam
loopne,pn
cmp
push
inc
xchg
jo
subl
sub
inc
inc
adc
push
cltd
ss
pusha
mov
sbb
pmulhw
sbb
mov
inc
stos
mov
push
pop
fld
lret
test
scas
arpl
mov
cmp
repnz
xchg
cmpb
pop
mov
adc
pop
dec
xchg
xchg
stos
cmp
cmpl
pop
push
dec
fsubrl
pop
mov
loopne
mov
dec
pop
or
ret
arpl
cmpsl
sarl
shll
rcl
scas
pop
or
mov
ficompl
daa
out
pop
fs
dec
jnp
push
dec
aas
xor
jmp
hlt
jno
test
dec
mov
jo
int3
bound
in
and
adc
jge
loope
add
ss
out
adc
cmp
lcall
push
mov
dec
stos
leave
enter
cli
pop
pop
stos
jmp
cmpsb
cmpsb
repnz
lret
xor
mov
jl
mov
and
xor
idivl
jp
lret
cs
mov
insb
and
xchg
push
pusha
xchg
in
xchg
addl
shll
call
movl
inc
adc
xchg
jmp
dec
pop
mov
mov
out
outsb
sub
gs
popa
ljmp
sub
mov
fildll
mov
ret
cltd
mov
cmp
or
xchg
ret
repnz
fbld
stos
mov
jl
aam
xchg
fsubrl
aaa
jbe
fadds
loope
xchg
pop
inc
outsl
add
leave
push
popf
shll
stos
pop
test
push
cmpsl
insb
lods
aas
push
out
movsl
scas
iret
test
jge
clc
idivl
int
cwtl
adc
jmp
dec
mov
aas
mov
push
orb
scas
pop
or
xlat
sub
rcr
cmpsb
jg
lods
les
push
pop
jo
cld
scas
aam
pop
stos
movsl
out
sti
jmp
iret
adc
aad
pop
jle
out
cmpsl
jmp
pop
inc
mov
idivb
and
insl
test
test
daa
xor
add
pop
xor
std
and
jno
jae
stc
cwtl
ljmp
ja
lahf
sub
push
stos
and
adc
mov
mov
gs
and
inc
sub
rclb
xor
cli
mov
das
jae
push
loop
and
test
inc
add
dec
in
mov
out
add
xchg
mov
ret
imul
push
add
arpl
loop
les
sbb
sbb
ljmp
addr16
ret
fbstp
and
mov
sbb
mov
inc
mov
add
cmc
clc
push
jecxz
sub
icebp
in
cmp
clc
add
pop
test
jbe
mov
lds
jecxz
sub
or
into
sbb
fucomp
dec
or
cmp
push
sbb
orb
enter
xchg
jp,pt
sub
and
lds
adc
cmp
jbe
mov
xchg
sbbl
jo
cmp
sbb
jae
adc
dec
mov
arpl
popf
fs
test
fidivl
sub
lret
mov
sub
or
jmp
xchg
mov
in
nop
adc
xchg
xchg
clc
cmpsb
push
dec
jmp
adc
inc
mov
out
pop
stc
dec
ja
or
dec
cmp
cli
loope
js
sub
sub
pop
and
in
mov
out
aas
sbb
dec
mov
data16
adc
xorb
sbb
lock
aad
pop
flds
std
ljmp
mov
adc
cmp
dec
lock
arpl
fdivrs
cmp
dec
add
and
add
sub
in
test
dec
std
cmp
dec
push
sti
push
daa
xchg
lret
mov
add
repnz
push
arpl
insb
xchg
mov
arpl
addr16
push
rcl
popf
push
adc
arpl
inc
pop
xor
mov
or
dec
pop
jg
mov
sbb
std
sub
or
shlb
sar
inc
cmp
cmpsb
mov
jmp
dec
inc
jmp
jne
ret
iret
push
jp
cmp
add
cmp
inc
mov
sti
mov
ret
jl
add
mov
add
ja
shrb
mov
jae
out
xchg
stos
lds
aad
pushf
sarb
popf
dec
in
mull
or
push
movsl
dec
mov
bound
aaa
inc
mov
push
stos
inc
outsb
pushf
add
push
lahf
cmp
mov
mov
jbe
das
mov
icebp
xchg
andl
xchg
pop
pusha
jecxz
cmp
cs
out
push
inc
jnp
sbb
movsl
shll
fsubl
mov
les
lods
mov
jmp
cmp
sbb
cmpsb
xchg
fdivrl
push
stc
lock
jl
mov
dec
scas
psrad
lods
cmp
cvtdq2ps
push
clc
or
sarb
inc
or
dec
push
mov
xchg
jns
outsl
jo
mov
and
enter
pop
cmp
mov
xchg
inc
sub
nop
das
loopne
aam
inc
mov
out
xlat
push
in
pop
stc
jbe
add
das
fcoms
jp
mov
shrl
mov
lret
fcomi
xchg
add
mov
pop
add
xchg
out
dec
xor
dec
fwait
and
and
fwait
cmp
push
aas
or
sarb
jnp
sub
mov
popa
add
and
adc
imull
jb
cmpsl
mov
fnstenv
out
out
clc
cmp
push
lods
andb
inc
int3
je
adc
mov
movsb
cmp
fisubs
shll
add
push
pop
xor
stos
push
cmp
mov
pushf
or
and
pop
add
sbb
aam
push
ret
xchg
fs
pop
movsl
loope
xchg
das
cs
jg
ror
adc
cmp
lock
inc
push
push
adc
cld
enter
push
test
sarl
sbb
and
in
scas
cld
jbe
les
enter
pop
sub
mov
imul
sub
mov
call
cmp
cmp
add
ja
jmp
sbb
add
int
test
daa
mov
repz
sbb
ficomps
mov
sub
insl
xor
cmp
dec
enter
in
inc
add
shrb
cltd
push
jb
mov
jnp
push
mov
cmp
mov
pop
lea
sbb
jge
pusha
and
jns
add
popa
sub
mov
outsb
enter
pop
inc
cmc
sub
imull
test
dec
pop
and
lcall
inc
cmp
cmc
popa
dec
or
flds
scas
mov
xor
dec
aas
lods
iret
pushf
or
insl
jmp
aam
mov
or
lds
mov
pop
xchg
jp
sbb
and
rcrb
bound
addr16
repnz
mov
lcall
push
notb
or
sbb
sbb
inc
fdivs
adc
dec
inc
cmc
sbb
adc
inc
clc
loope
gs
cwtl
push
outsb
dec
dec
hlt
push
roll
roll
rcrl
sbb
sbb
in
add
dec
mov
repnz
mov
icebp
ret
jb
loop
xor
xchg
jmp
cmp
int
add
scas
scas
mov
rorb
out
inc
xor
or
iret
shrl
inc
push
daa
adcb
bound
xchg
int3
hlt
int
test
shlb
mov
push
jecxz
pop
cmp
pop
sub
inc
mov
paddusb
mov
les
adc
aad
xor
je
sub
sti
inc
sbb
push
or
and
sub
ror
ljmp
inc
or
inc
call
inc
pop
fyl2xp1
jp
mov
mov
xchg
ror
jg
ss
pop
push
mov
sub
in
ds
outsb
xlat
mov
jmp
stos
sbb
loop
jo
xadd
loopne
test
cmp
push
daa
fst
not
icebp
cmp
mov
dec
mov
and
les
mov
sub
dec
jle
mov
popa
jge
in
xchg
sub
outsb
mov
mov
and
popa
test
shll
mov
mov
iret
ds
rcr
sub
lcall
test
fcomi
mov
inc
call
leave
push
mov
xor
imul
xlat
out
fistpl
xchg
ret
push
sub
outsl
or
push
iret
jmp
into
xor
dec
pushf
or
fstl
lea
add
stos
mov
sahf
adc
addb
xor
push
push
mov
mov
repz
adc
jnp
inc
call
lahf
jnp
nop
push
xchg
scas
cmc
add
mov
mov
in
lods
in
fidivs
cmpsl
cltd
lret
pushl
je
push
sub
leave
pop
push
mov
in
gs
dec
pop
rolb
shr
out
sub
pop
daa
pop
jns
push
mov
push
push
xchg
push
ljmp
add
lods
test
push
out
fisubl
call
movsb
lcall
repz
mov
cld
imul
pop
pop
jmp
cwtl
into
js
adc
mov
clc
bound
xadd
pop
addr16
ret
sub
or
mov
xchg
lods
jp
ja
ja
dec
sarb
hlt
xlat
jne
and
subb
mov
fldenv
dec
mul
decl
fimuls
loope
cmc
aaa
pop
jmp
es
clc
cmc
mov
pop
pop
xchg
jbe
not
stos
sbb
clc
and
enter
mov
mov
stos
imul
push
mov
je
cmc
shlb
aas
mov
lahf
roll
sti
icebp
pop
cmp
fwait
sahf
mov
pop
mov
aas
js
fistpl
out
stos
lods
out
ret
jae
jno
shlb
in
imul
lret
add
xor
int3
imul
test
cld
push
push
mov
dec
xchg
xlat
sar
mov
mov
movsb
shl
dec
lret
ds
jmp
push
cmp
xchg
pushf
dec
ret
mov
mov
sbb
mov
out
imul
sbb
cmc
mov
adc
push
dec
cmp
add
inc
mov
into
pop
push
xor
xor
dec
xor
sbb
test
fxch
cwtl
inc
loopne
sahf
pop
dec
mov
mov
add
dec
movsb
jno
cmp
in
lret
repz
lds
loop
and
and
out
sbbb
pusha
cmp
sbb
jns
imulb
rcrb
xchg
aad
and
sarl
xchg
pop
fidivl
add
xchg
les
stos
ret
push
repz
xchg
adc
scas
pop
loopne
pusha
and
inc
sahf
hlt
mov
sahf
pop
dec
pop
xchg
je
jne
mov
lods
xor
jmp
cmpb
fldenv
out
mov
jecxz
mov
fldl
and
test
push
mov
cmp
repnz
or
loope
xor
stc
jne
addr16
xlat
test
mov
xor
jb
lds
sbb
mov
popf
and
mov
or
testb
jb
xor
pushl
jb
shr
inc
fwait
and
lret
jg
mov
in
adc
fimull
stos
movsb
int3
out
popa
loopne
gs
xor
mov
int
sbb
setbe
cmp
pop
stc
cmp
sbb
fistpl
pop
sahf
and
or
dec
cmp
js
lahf
mov
scas
js
clc
cwtl
arpl
add
pop
cwtl
sub
out
fists
lea
sub
test
push
movsb
or
adc
xchg
fs
fisubs
orl
es
push
mov
dec
fdivrp
inc
out
lds
dec
test
aad
cmpsb
lock
out
cmp
add
pop
ljmp
test
aad
sti
nop
sbb
ds
cmc
add
push
push
push
rolb
xchg
iret
fisubs
subl
loope
pop
xchg
dec
pop
sub
in
aaa
lcall
dec
or
xor
xlat
mov
ret
std
push
and
testl
call
add
mov
dec
xchg
dec
lods
repnz
jo
lds
and
fcomps
mov
jecxz
or
lret
outsl
cld
aas
jo
je
lods
xor
dec
mov
mov
mov
mov
ljmp
ds
cmp
dec
in
mov
enter
aam
mov
pop
jecxz
test
rcrl
scas
xlat
imul
inc
lret
fdivrl
je
gs
jne
and
xor
sub
in
stc
mov
cmpsb
cmp
adc
mov
xchg
adcl
dec
or
loop
lret
jo
daa
jp
sbb
xchg
pushf
xor
subb
cmc
add
jmp
adc
pop
jecxz
int
cmc
ljmp
pop
imul
pop
pop
or
add
jp
and
addl
aaa
adc
adc
je
pusha
cmp
add
js
mov
or
mov
and
pop
sbb
in
jnp
shrb
popf
out
mov
cmpsb
sti
aaa
test
jae
clc
xchg
int
outsl
std
mov
data16
inc
add
mov
xor
cmp
ret
je
fnstsw
into
mov
lods
stos
mov
and
enter
es
test
lds
aas
in
outsb
hlt
addr16
sub
lahf
nop
enter
pop
lods
pop
out
adc
aaa
dec
cld
test
fmul
push
dec
cmpsl
fildll
out
cmovle
and
jmp
fisubrs
and
sbb
sub
movsb
gs
cmp
movb
xchg
and
pop
push
cltd
int3
cmp
push
dec
mov
sahf
cmp
jge
sub
jb
out
pop
stos
cltd
into
mov
insl
adc
xchg
pop
push
popa
mov
inc
jmp
sbb
add
popf
xchg
mov
mull
push
gs
add
es
xor
addr16
push
lret
mov
jno
cmc
xor
lcall
dec
out
or
lods
test
mov
push
xchg
sub
cmc
in
push
cmp
mov
mov
pop
loope
push
and
stc
mov
sbb
mov
sub
adc
lcall
push
xor
xchg
inc
and
stc
js
shr
pop
mov
int
pop
enter
add
mov
orl
sbb
cmp
fisubs
mov
cmp
inc
cmpsl
pop
mov
in
push
cld
sub
and
cmc
adc
and
scas
cmp
fs
jg
test
fists
clc
shll
fcmovbe
fs
add
mov
les
ja
nop
stos
hlt
lock
rolb
mov
xchg
scas
and
inc
mov
mov
push
lret
in
fisubrl
xchg
ficoms
sbb
jns
xor
mov
xchg
int
xor
inc
fdivl
and
insb
xchg
mov
xor
cmpsl
cmpsb
xor
pop
jo
xorb
mov
orb
xchg
jecxz
js
push
test
or
popf
fnsetpm(287
fsub
xchg
shll
pop
js
in
or
jae
addr16
cmc
jnp
push
cmp
mov
mov
and
mov
mov
pop
enter
mov
jl
cmc
movsl
mov
or
adc
scas
subl
cli
cs
mov
out
lock
std
mov
and
flds
xchg
jge
fmull
dec
mov
mov
push
cmp
andl
mov
popa
sub
bound
jecxz
out
cld
add
pop
jbe
lock
repz
mov
test
sub
pushf
cmpsl
outsl
es
xchg
adc
cld
enter
icebp
mov
dec
dec
test
jecxz
int3
jmp
leave
jle
imul
jge
adc
addr16
mov
fbstp
fs
and
arpl
rol
cld
mov
inc
out
dec
xor
movsb
sahf
fdivrp
lret
jnp
jl
stos
jp
xor
call
xchg
xor
or
mov
pop
sub
repz
cmpsb
mov
dec
aas
scas
test
pop
dec
sahf
push
adc
jp
push
jmp
cmp
fdivl
add
adc
iret
mov
push
fsubrl
jo
and
data16
repz
cmc
jno
and
test
test
daa
int3
insb
fstpl
fnstsw
enter
lock
xchg
mov
push
movsl
test
std
fwait
push
rcrb
pop
call
sub
pop
lock
sarb
inc
adc
push
pop
sar
roll
daa
or
inc
fstps
idivl
in
fimull
mov
stos
ret
imul
rcr
pop
cs
push
test
mov
out
popa
mov
sarl
mov
sbb
jmp
sbb
icebp
mov
xor
pop
jmp
arpl
stos
rcrb
and
and
mov
xor
les
cmpsb
ja
mov
imull
mov
mov
pop
test
fsubs
leave
lahf
or
je
mov
and
jge
mov
add
je
mov
repz
jp
push
and
fwait
repnz
jg
or
pop
sbb
mov
test
pop
adc
loopne
pop
aaa
mov
in
adc
cmp
xor
xchg
mov
fisttpl
xor
push
sarb
pop
xchg
movsl
jge
add
cld
add
sub
cmc
cmp
cmp
js
or
notb
mov
ret
xchg
push
es
xor
jno
xor
roll
adc
stos
push
push
xlat
shr
nop
clc
adc
sbb
dec
stc
shl
inc
clc
jbe
sbb
rolb
sub
pop
jnp
mov
push
aam
mov
add
cmp
sbb
xchg
and
push
cld
rcll
jo
adc
sahf
ret
jno
les
dec
movb
aas
jp
add
iret
xlat
aam
push
lret
add
hlt
clc
fistpl
bnd
adc
cltd
cmp
aas
xchg
adc
cltd
out
jne
pop
push
je
or
adc
repz
leave
aas
fs
fwait
fwait
test
jnp
fs
mov
jg
rol
sbb
cld
jp
mov
mov
push
mov
xchg
outsl
add
daa
mov
lds
and
pop
inc
arpl
sbb
sbb
rcrb
std
ficomps
sub
xlat
sub
test
mov
mov
adc
push
out
jne
fimuls
jno
int3
mov
subl
sub
clc
xor
das
pop
aaa
repz
test
add
cs
push
inc
outsl
ret
mov
imul
adc
inc
xchg
sahf
leave
xchg
push
jo
int3
sbb
test
aad
sbb
out
rclb
pop
inc
dec
dec
push
sbb
andnps
mov
movsl
inc
aad
jne
scas
shl
jo
sbb
cmc
aam
ja
cmp
lret
add
stc
clc
lret
xor
and
xchg
test
pusha
push
xor
sbbb
xchg
popf
or
or
jbe
push
les
les
xor
jl
dec
inc
daa
clc
mov
xor
mov
sbb
scas
cmpsb
movsb
sub
ljmp
cs
dec
sub
cli
sub
fisttpl
mov
mov
jge
repnz
loop
mov
push
jno
outsb
cmc
sub
sbb
push
nop
mov
sbb
jno
jg
adc
popf
leave
lea
lea
mov
add
jl
xor
cmpl
cmc
stc
push
sub
jb
insb
shll
xchg
test
sub
sti
cltd
out
and
sbb
sbb
mov
repnz
bound
mov
cli
xchg
pop
arpl
dec
mul
mov
xor
mov
into
lock
and
fs
mov
test
fdivrl
les
jle
xchg
xchg
mov
mov
and
and
fbld
push
mov
dec
xor
imul
pop
push
loope
fadds
pop
lea
mov
fs
pop
add
mov
cs
enter
adc
mov
cmp
or
mov
mov
repnz
or
lcall
movsl
jae
mov
jl
loop
jb
int3
mov
movsb
imul
in
cld
add
push
or
xchg
inc
fisttpll
xor
es
lock
sarb
push
mov
mov
shl
stos
inc
ret
outsl
pop
push
hlt
lds
mov
mov
xchg
movsl
outsl
cmpsb
xchg
xchg
movsb
or
pop
nop
jnp
jge
in
fidivrl
push
mov
push
adc
fildl
arpl
mov
and
mov
addr16
cli
jl
shl
cmp
aam
nop
stc
adcl
inc
sbb
ss
iret
loopne
or
iret
in
movsb
mov
xchg
rorl
inc
cmp
jbe
add
shl
ljmp
and
add
icebp
shl
fcomp
adc
cmovae
xorb
lret
jle
and
xchg
jbe
or
push
mov
out
cmc
or
mov
in
or
add
adc
cmp
pop
sub
jno
call
inc
lcall
and
mov
inc
mov
jnp
int
lds
inc
xor
jp
insb
les
push
push
fidivrs
jb
inc
fildll
lds
stos
mov
imul
stos
shrb
mov
pop
add
jmp
fcoms
pop
add
mov
jp
roll
rclb
lahf
mov
addb
add
imul
fsubrl
add
iret
xchg
sub
stc
les
or
in
sub
repz
adc
popf
cltd
push
not
jle
xor
jns
stc
jg
inc
test
add
data16
jo
fmul
jae
pop
sub
push
loop
stos
adc
add
outsb
xchg
fcoms
js
adc
lds
inc
jmp
popa
in
jae
aaa
out
and
daa
lock
scas
jmp
rorb
subb
call
xor
daa
inc
pop
loop
and
leave
jp
mov
ja
mov
jle
aad
iret
sbb
nop
dec
xchg
or
rsqrtps
ficoml
ja
daa
clc
jae
or
dec
insb
lret
or
push
stos
adc
xor
addr16
mov
arpl
xchg
mov
mov
push
jbe
test
sbb
rcrb
xchg
icebp
test
rcr
lds
push
push
dec
hlt
sbb
out
jns
loope
insb
adc
add
jns
mov
mov
out
out
mov
jo
in
cmp
js
outsb
mov
scas
ljmp
push
add
inc
test
push
pop
push
leave
dec
ds
dec
xor
jp
xor
int3
pop
imulb
mov
je
jle
mov
daa
adc
outsl
insl
insb
jne
imul
out
iret
icebp
adc
fisubrl
sti
in
cmp
or
lea
mov
arpl
test
aaa
jo
jg
pop
jno
mov
mov
std
mov
jp
push
inc
stos
mov
mov
pop
sbb
adc
int
inc
jmp
xor
xor
test
inc
inc
mov
gs
shrl
xchg
jne
mov
jnp
adc
test
sbb
sub
jge
mov
push
or
push
dec
loope
adc
dec
jle
es
cmp
fs
imul
shrb
gs
mov
jecxz
push
lods
aam
sbb
rorb
dec
sub
fdivp
imul
dec
gs
outsb
aas
je
addr16
out
lret
lret
inc
repnz
mov
pop
in
or
mov
sbb
dec
testl
jl
dec
jp
ljmp
mov
les
stos
or
xor
mov
pop
mov
js
push
lods
cs
cmpsl
dec
mov
jl
pusha
insb
pop
mov
xchg
fisttpll
dec
out
mov
mov
testb
jo
mov
sub
sub
mov
jg
fwait
mov
xchg
adc
in
and
test
ds
fnstcw
xchg
ret
adc
arpl
bound
pop
incl
shl
dec
fdivrs
mov
rclb
std
add
popa
mov
test
shl
mov
repnz
js
out
jne
mov
cltd
test
cmp
and
inc
mov
mov
insb
push
ds
mov
lea
cld
lcall
inc
rclb
or
inc
xor
les
into
sub
lock
or
mov
les
movsl
push
push
cmp
pop
out
in
or
mov
pop
xchg
gs
les
daa
movsl
and
lret
cmp
or
popa
ret
orb
mov
and
sub
dec
cmp
add
jbe
out
mov
dec
cwtl
mov
movl
je
loopne
cmpsb
dec
cmp
divl
push
or
and
fidivs
and
in
mov
data16
add
movsl
add
out
cmp
rolb
sub
fstps
movsb
add
bound
mov
ja
lahf
repz
aas
sub
sbb
repnz
mov
movsb
les
fwait
xchg
xchg
push
push
into
insl
ret
and
mov
xor
push
std
aad
or
inc
push
push
cmp
shll
add
fwait
mov
loop
xor
scas
mov
out
and
imul
fnsave
xchg
xchg
mov
shrb
and
leave
jle
lods
aad
repz
mov
sub
js
daa
cmc
stos
loop
in
pop
mov
es
mov
repnz
imul
mov
and
fiaddl
mov
or
std
jnp
jp
data16
and
mov
arpl
xchg
or
jle
cld
daa
out
mov
pop
mov
inc
fldt
xor
mov
push
dec
ret
dec
iret
jno
dec
dec
and
out
mov
lahf
cld
jnp
pop
sbb
in
scas
push
inc
clc
pop
cmp
addr16
mov
outsl
nop
xchg
je
pop
mov
sub
into
mov
sub
xchg
fcoms
pop
add
cmp
repz
push
mov
cmc
pop
cltd
mov
aas
nop
fnstcw
mov
xor
daa
fs
cmovle
stc
lods
sarl
dec
bound
mov
mov
mov
out
idivb
or
push
je
not
test
bound
sbb
xadd
leave
and
sub
mov
jl,pn
add
xor
nop
stos
pop
inc
cmp
dec
les
sub
div
pop
xorl
cmp
xchg
lret
imul
jl
shrl
fnstcw
fdivrs
mov
popf
mov
outsb
push
mov
xor
shrb
adc
es
xchg
mov
icebp
jae
insb
fcoml
pop
adc
xchg
lods
pop
je
xor
hlt
pop
fs
add
push
out
cwtl
lea
xchg
sahf
loopne
cld
daa
xchg
or
mov
sbb
mov
lss
sub
adc
dec
mov
ss
test
insb
xchg
addr16
lods
adc
aas
sbb
sti
stos
push
mov
xor
mov
mov
js,pn
addb
dec
cmpsl
add
stc
mov
xchg
and
jo
fisubrl
jns
sub
mov
push
sbbb
iret
repz
xchg
stos
aas
or
xlat
shrl
mov
xchg
cmc
leave
jle
stc
cmp
pop
adc
dec
and
and
mov
push
mov
jecxz
sbb
jnp
lods
inc
mov
ja
shr
xchg
or
or
ja
xchg
int3
fwait
add
out
inc
mov
fistl
pop
add
insl
shr
jp
and
aad
jmp
add
outsl
movsb
inc
pop
xchg
cwtl
stos
movsb
outsl
jbe
pop
and
push
and
data16
push
pop
xchg
push
jnp
clc
repz
mov
ret
pop
sub
add
xchg
cmp
aaa
loopne
adc
out
mov
mov
push
lcall
std
aam
pop
insb
fcoms
clc
nop
nop
dec
dec
cmp
push
inc
fcmovnu
and
jae
int
sbb
loopne
cmpsb
je
shrl
mov
test
add
pop
push
mov
mov
movsl
iret
pop
dec
lahf
or
icebp
lcall
push
sbbl
xchg
rcll
push
xor
mov
ljmp
test
pop
jo
sub
mov
add
enter
loop
ljmp
out
mov
rclb
mov
jne
push
loop
call
xchg
add
repz
push
popf
jg
lahf
loop
xchg
pop
or
mov
mov
ja
and
xor
inc
into
sub
stc
mov
xor
lret
jno
test
rcr
adc
jnp
xchg
rorb
mov
imul
cmpsb
adc
jle
lahf
ds
sbb
mov
iret
lret
xchg
sti
cmp
cli
dec
xchg
lds
jl
outsb
test
cs
int
sub
test
iret
lea
inc
hlt
pop
pop
aam
push
sahf
add
test
xor
jmp
xor
xchg
adc
xchg
adc
not
push
and
dec
cmpsb
stos
jno
cli
rcr
fnstsw
fsubl
cmp
dec
rorb
das
add
clc
popa
ret
dec
aad
mov
fcompl
mov
popf
popf
stos
adcl
jecxz
mov
jae
add
cli
divb
mov
push
xlat
mov
lret
add
inc
jae
xor
divl
xchg
cmpsb
lods
es
incl
cmpsb
leave
push
clc
rcrb
pop
insl
lret
jp
stos
or
sbb
test
push
adc
push
and
mov
cld
cltd
xchg
push
cli
repnz
inc
rcrl
in
push
mulps
mov
jb
mov
int3
cmp
sub
push
xchg
aad
add
inc
lcall
mov
cs
inc
je
in
push
or
jp
push
inc
lahf
ss
scas
repz
movsl
adcb
inc
jnp
mov
dec
aam
mov
std
adc
out
cmc
outsb
test
inc
add
sub
or
lea
and
sbb
fsubrl
and
mov
cmpl
fwait
push
negl
push
rolb
in
mov
popf
das
jnp
jno
iret
pop
lock
jno
stos
inc
cwtl
popf
mov
dec
movsl
scas
fmull
pop
je
add
mov
stc
out
enter
dec
das
movb
mov
fisttpll
pop
xchg
in
test
push
fisttpl
push
and
jmp
ror
mov
xchg
push
mov
imul
ret
dec
daa
mov
add
sub
icebp
jecxz
cmp
cmpsl
fimull
cmpsl
xor
movsb
xor
jg
repnz
push
daa
jns
inc
jnp
sarb
ja
dec
push
test
stc
mov
and
add
sti
pop
insb
out
mov
fwait
pop
pop
push
jbe
jp
jge
cmp
jne
mov
mov
mov
cmp
push
mov
das
fiadds
repz
hlt
xchg
call
jb
pop
rcl
jecxz
sbb
sahf
sub
in
and
or
jmp
cmc
mov
shll
xorl
jb
pop
mov
inc
pop
loope
flds
sbb
pop
cmp
and
xchg
dec
pop
push
xorl
call
mov
add
jbe
inc
scas
ja
add
lock
jge
lret
push
jmp
stc
cmp
jns
jecxz
mov
cmpsb
dec
movsb
mov
mov
push
scas
mov
test
xchg
sbb
pop
push
mov
jp
pushf
cmp
mov
jnp
xor
add
test
lahf
ja
lret
rclb
dec
pop
mov
into
or
ret
mov
pop
adc
loope
inc
mov
cmp
sarl
xchg
icebp
jns
rcrb
frstor
pop
xor
out
loopne
jp
shr
repnz
out
inc
repnz
imul
es
ficomps
imul
adc
mov
add
fcmove
mov
sbb
mov
fisubrl
dec
mov
push
popf
adc
sub
cmp
gs
xchg
mov
lcall
xchg
cmpsb
inc
xchg
je
pop
sbb
out
xchg
mov
jl
xchg
popa
cmp
xchg
loopne,pt
xchg
sbb
outsl
add
jns
dec
or
cld
test
lret
add
and
negb
dec
fdiv
and
mov
jmp
pop
in
shl
pop
mov
mov
imul
lock
aad
out
mov
jne
and
sub
jb
xchg
sbb
push
in
push
mov
imulb
xor
cmc
mov
cwtl
rcrl
fs
idiv
pushf
sub
add
and
or
jmp
pushf
sub
test
movsb
fiadds
xor
mov
push
repz
lods
adc
dec
lock
ss
or
std
pop
mov
into
mov
pop
jno
inc
in
add
js
cwtl
sub
push
out
mov
loope
pop
add
cmp
push
test
cmpsb
std
sti
push
sub
je
nop
and
stos
loopne
cmp
cmpsb
dec
fistpl
repz
insl
xchg
outsl
popa
loop
mov
popa
dec
sub
sub
out
cs
in
cs
lods
lcall
jp
pop
das
loopne
call
mov
mov
jl
mov
xchg
xchg
adc
add
add
add
add
add
add
movsb
add
add
cmc
adc
movaps
jmp
rcrl
mov
and
push
mov
sub
jne
xorl
sub
movsl
cli
and
and
push
pop
sub
mov
push
pop
and
aad
push
mov
mov
sub
dec
fdivrs
imull
das
dec
fstpl
jns
leave
xchg
pop
lcall
cs
outsb
popa
mov
jge
push
jecxz
jns
jb
cwtl
out
test
scas
pushl
and
cli
ss
sahf
sbb
xchg
mov
add
push
cwtl
sbb
lret
cmp
faddp
cwtl
xor
pop
dec
sbb
or
movsb
dec
or
in
jp
sarl
cmc
mov
cmp
xlat
pop
xchg
pop
in
call
xchg
add
mov
add
outsl
cmp
xchg
cmp
push
cmpl
dec
ljmp
fldenv
out
ds
jbe
ds
std
dec
push
dec
fwait
pop
push
xlat
popa
subl
mov
sbb
insl
push
hlt
pop
or
popf
test
sbb
xor
cmpl
insb
mov
ds
dec
pop
data16
lods
pop
jbe
sahf
pop
scas
sti
jo
je
xchg
cmp
inc
dec
fists
stos
inc
sbb
xchg
cmp
ret
fs
pop
popa
popf
jbe
scas
sub
lds
data16
jbe
or
inc
sti
mov
pop
stos
out
dec
stos
mulb
in
xor
in
jmp
std
cmp
stos
in
icebp
jbe
pushf
mov
mov
xor
add
sbb
imul
inc
push
in
xor
inc
sbb
shrb
test
in
cmp
adc
lock
ret
test
xor
dec
call
sahf
mull
dec
xchg
mov
lea
push
andl
loop
out
fsubrl
sub
cs
inc
jmp
add
enter
in
enter
dec
fsubr
pushf
std
xchg
pusha
loopne
sahf
paddsb
and
test
sbb
fs
and
enter
rcrl
push
pop
arpl
cmp
insb
mov
fwait
aaa
mov
sbb
mov
mov
mov
push
fmull
fisttps
pop
aaa
add
push
pop
sub
rcl
mov
es
pop
insb
or
add
and
out
push
jle
xor
cmp
pushf
ret
out
dec
flds
lret
repnz
add
pop
addr16
xlat
or
cmc
fcompl
pop
dec
fwait
int3
out
gs
mov
rolb
add
mov
and
and
xchg
sbb
lods
out
mov
es
mov
pop
shlb
fs
sbb
inc
lcall
out
repnz
cwtl
pxor
dec
mov
push
adc
lods
xchg
popf
sub
shll
xchg
imul
xor
jns
jns
pop
cmpsb
push
inc
pop
repz
adc
mov
aad
jle
dec
xor
jmp
pop
aam
adc
sbb
dec
adc
adc
jl
xorl
cmp
dec
inc
jge
insb
push
push
push
lcall
inc
jnp
adc
xchg
mov
xor
rclb
mov
lcall
sbb
ret
dec
jge
lods
mov
mov
push
fs
adc
ror
xor
insb
add
jmp
push
loop
pop
rorl
movsb
cmp
fs
pop
pop
ja
into
jnp
mov
adc
stos
inc
jnp
sbb
dec
sarb
mov
mov
inc
je
jle
call
inc
cwtl
iret
push
es
mov
shll
gs
cmc
sbb
nop
mov
jne
scas
jae
add
rclb
push
adc
rorl
mov
inc
xor
insb
into
mov
add
mov
cmpl
mov
push
sbb
shr
mov
mull
lods
shrb
xchg
or
xchg
pop
lea
out
xchg
xor
loop
xlat
mov
xchg
jns
js
adc
aad
pop
shll
call
push
sahf
or
sub
inc
stos
or
mov
outsl
fwait
leave
lds
push
incb
dec
outsl
jge
mov
movsl
add
lock
sahf
ds
in
xchg
test
lock
mov
add
adc
and
cmpb
jle
sahf
or
adc
xchg
enter
jb
mov
nop
icebp
arpl
ret
sub
fstps
and
jno
mov
mov
imul
adc
mov
movsl
sbb
in
into
push
pop
jg
arpl
cltd
xor
in
aad
jo
sbb
mov
dec
mov
inc
aad
sbb
mov
adc
jne
add
ret
mov
and
fidivl
mov
mov
fimull
mov
nop
xor
in
push
daa
add
popf
lahf
mov
pop
xchg
lds
cmc
int
pop
cmp
ds
ficomps
pop
jp
movsb
fmul
test
or
jo
push
fdivl
xchg
sahf
aaa
or
subb
xchg
cmp
popa
repnz
sbb
push
dec
xchg
cwtl
jp
stc
pop
push
mov
lahf
add
and
pop
cli
pop
inc
adc
xchg
pop
sub
mov
mov
push
mov
divb
hlt
aam
insb
shlb
fsub
cmpsb
push
repz
lret
or
mov
and
int3
dec
pop
dec
dec
outsb
mov
and
cmpsl
dec
mov
lret
les
adc
ret
sub
sbb
ljmp
or
inc
add
fsubrs
es
lcall
hlt
icebp
push
cmpl
xchg
xchg
cmp
pusha
cmp
or
in
inc
je
pop
daa
subb
mov
je
je
lret
adc
pop
add
jae
jns
lods
dec
adcl
mov
add
xchg
outsb
cmpsl
push
int
enter
jb
lods
pop
int
push
ds
xchg
fiadds
gs
sbb
jno
adc
xchg
mov
sti
sbb
imul
testl
jle
sbb
or
cmp
test
or
test
push
xchg
stos
clc
sbb
adc
xor
les
sub
cmp
push
mov
movsb
lcall
ljmp
mov
dec
add
ret
xor
iret
repz
pop
and
cs
sbb
cmpsl
xlat
jle
push
mov
xlat
les
pop
mov
idiv
adc
movsl
outsb
dec
mov
cmp
lock
daa
add
add
out
sarb
out
add
mov
sub
sub
rcr
fstpt
jl
loope
movsb
notl
adc
mov
cmp
jg
daa
push
jae
cli
jp
and
test
rol
es
adc
lahf
and
pop
mov
mov
fmull
pcmpeqd
pop
cmp
sbb
mov
or
loop,pn
loop
jge
ja
add
xchg
xor
xor
lods
fdivrl
sub
movsb
loop
movsb
sub
fildll
sub
in
fsts
std
pusha
cmp
jmp
mov
in
inc
inc
jb
sahf
test
stos
dec
fdivrl
cmc
test
sbb
sbb
or
pusha
fdivr
sub
mov
xchg
lea
push
inc
and
outsl
fs
aaa
popa
sub
mov
sbb
push
pop
movsb
pop
push
cmp
and
sbb
xchg
xor
xchg
ret
add
out
fwait
and
jle
jmp
push
loope
repz
out
rcr
cltd
mov
mov
or
not
repz
or
sti
pop
pop
fdivs
and
je
pop
lods
test
pop
add
loope
or
xchg
loopne
inc
scas
cli
adc
testl
in
push
xchg
cs
nop
fsubs
mov
cmp
sbbl
sbb
aas
mov
aam
xchg
xchg
mov
bound
or
dec
push
in
rcrb
jge
sbbl
scas
fisubs
pop
cmp
dec
add
xor
mov
adc
nop
hlt
loopne
loopne
rcr
push
or
jecxz
pop
pop
sbb
lea
lahf
lret
pop
lcall
ljmp
clc
jecxz
popa
sbb
mov
mov
and
into
imul
call
pop
sbb
add
lret
push
adc
dec
jp
rorb
jae
dec
or
out
mov
sub
out
loope
in
xchg
mov
push
push
cs
or
dec
loope
mov
sbb
inc
and
daa
enter
ljmp
and
mov
pop
pusha
fnstsw
inc
cmp
test
out
mov
mov
mov
out
mov
and
mov
mov
mov
mov
sbb
sti
lds
mov
mov
dec
int3
test
jns
cvtpi2ps
js
imul
mov
jns
mov
mov
movsb
in
pop
and
pop
jmp
inc
push
inc
cmc
adc
push
call
xchg
test
inc
add
das
xor
mov
mov
jge
sub
fists
add
out
in
dec
jns
mov
lcall
pop
out
dec
dec
cmpsl
js
dec
rol
push
cmpsl
pop
xor
jne
jno
and
inc
lods
rcll
sub
sysenter
cmp
push
xchg
push
fistps
mov
fdivrl
mov
lcall
inc
xor
inc
push
cmp
dec
inc
std
out
testl
xor
adc
stos
ja
out
mov
in
dec
push
lret
in
pop
or
nop
fs
rep
jnp
cli
es
xchg
clc
xchg
or
stc
test
mov
stos
sbb
mov
cld
adc
xor
add
dec
or
sub
add
xlat
push
sbb
mov
pushf
int3
jo
xor
sbb
addr16
sbb
les
push
ljmp
mov
mov
push
mov
lahf
pop
jnp
lret
xlat
cli
scas
inc
addr16
scas
daa
adc
cmp
pop
mov
call
mov
push
and
mov
dec
scas
stc
xchg
ret
daa
jle
pop
xlat
sahf
in
inc
push
sbb
and
pop
jle
pop
mov
lahf
aam
pop
dec
or
stc
test
dec
bound
es
adc
xor
sub
dec
lret
lods
pop
mov
aad
mov
jecxz
jne
imul
jnp
adc
hlt
pop
mov
test
or
jle,pt
inc
aaa
aaa
lods
fists
fidivl
pop
fidivrs
cmc
test
mov
fistl
jne
popa
scas
push
xlat
jb
dec
gs
jb
dec
stc
jns
mov
inc
dec
mov
adc
jmp
push
add
and
les
fdivr
ja
mov
out
cs
fdivp
adc
jmp
sub
pop
pop
cwtl
popa
sub
ret
iret
mov
adc
outsb
or
mov
lock
test
or
fadds
nop
and
cmp
fiadds
add
out
jle
mov
scas
gs
leave
stos
adc
mov
lds
pop
imul
popa
shrl
dec
and
jmp
xchg
hlt
arpl
dec
cmp
in
jnp
mov
stc
cmp
push
or
je
mov
mov
cmpl
mov
in
hlt
cltd
out
outsb
sub
cmpsl
xchg
mov
lret
lods
pop
int3
cmp
dec
repz
maskmovq
push
sti
add
daa
mov
mov
pop
leave
push
and
push
fildll
jp
stos
inc
out
pushf
addr16
jno
dec
sub
sbbl
push
push
cmp
leave
fisubrl
leave
scas
or
add
popfw
sbb
pop
aaa
insb
add
xchg
fsubrp
in
lods
test
cmp
add
std
lahf
mov
es
scas
movntps
sbb
xchg
cmp
fndisi(8087
das
xchg
or
call
sbbb
xor
push
dec
pop
fst
xchg
jne
popa
mov
mov
sbb
adc
outsl
and
inc
xor
es
orl
mull
cmc
mov
jge
out
cmp
push
out
repnz
cwtl
mov
out
dec
mov
push
cwtl
xor
int3
xor
push
aas
fwait
nop
push
das
jg
into
jno
ljmp
decb
imul
test
in
repnz
cmp
xorb
out
filds
adc
adc
mov
repnz
imul
icebp
inc
xchg
lret
adc
test
sbb
ret
mov
ss
mov
fdivrl
cmp
mov
sbb
ret
add
pop
pop
mov
shlb
sub
mov
sub
in
jle
loopne
lret
xchg
loop
gs
ret
sbb
or
int
lret
push
daa
fldcw
and
neg
shll
push
dec
inc
lret
cmpsl
push
and
mov
push
jge
or
adc
lock
jo
test
fbld
dec
je
mov
int3
xor
iret
int
sub
dec
mov
dec
movl
test
repz
xor
dec
xlat
pop
in
pop
loopne
or
add
insl
fildll
push
out
xchg
call
sbb
adc
xor
movsb
sub
pop
out
scas
cmp
mov
mov
push
jae
and
icebp
push
cld
adc
jl
xchg
jmp
cmc
add
or
mov
inc
xor
lods
jmp
fistpll
inc
aaa
hlt
lahf
fisubrs
jg
fisubl
add
js
jo
fnstsw
add
ret
xchg
jecxz
xchg
adcl
loope
or
push
add
push
stc
pop
testb
frstor
mov
jno
jbe
inc
cmpsb
jb
fnsave
rolb
jmp
and
mov
aam
ljmp
data16
dec
clc
xor
icebp
popa
fwait
int
stos
xor
push
sbb
rol
mov
push
jmp
fwait
inc
add
movsb
pop
in
popf
loopne
push
pop
lds
jge
jle
rcl
cltd
in
sub
imul
mov
into
dec
xor
xor
inc
arpl
dec
dec
aaa
mov
imul
test
loopne
sbb
pushf
clc
repz
or
cmp
mov
icebp
gs
jg
dec
or
andl
mov
lahf
cmp
clc
sub
jb
push
leave
fdivrp
cmpsb
pop
movsl
insl
mov
bound
xor
daa
push
mov
lcall
mov
dec
add
iret
mov
xlat
pushf
out
pop
adc
add
jb
cltd
add
out
jge
mov
xlat
jb
lahf
cmp
out
ds
dec
jnp
jne
jo
or
push
sbb
insl
sbb
xchg
mov
mov
lahf
xchg
mov
mov
int
imul
repz
loopne
mov
inc
inc
int
inc
cmpsl
push
pop
mov
cs
jge
negb
jne
out
fmuls
add
xchg
leave
mov
push
pop
mov
mov
xor
div
xchg
stos
out
lret
lods
sbb
push
mov
sahf
sub
push
xor
inc
sbb
mov
insl
mov
popa
and
inc
fmuls
test
push
inc
dec
arpl
push
cmp
sub
adc
pop
bnd
sbb
inc
add
dec
roll
push
or
jb
jbe
push
lret
and
lahf
push
mov
mov
xor
pop
popa
mov
lcall
dec
jmp
fsubl
jne
mov
enter
cmpsb
inc
outsb
inc
jne
push
or
sub
sub
push
and
sub
cmp
xor
mov
sbb
or
arpl
popf
pop
push
push
inc
mov
sub
call
faddl
insl
xchg
jmp
aas
dec
jp
jb
in
lret
mov
in
mov
ret
mov
push
add
mov
xchg
mov
cmpsl
xchg
ss
pop
cmp
or
arpl
dec
pop
or
mov
pop
pop
push
dec
xchg
push
outsb
cmpsl
test
adc
inc
or
pop
sti
mov
aaa
fstl
test
add
in
dec
push
and
in
loop
fiaddl
mov
fcomps
sub
mov
aad
xor
push
mov
stos
adc
sbb
adc
inc
push
xchg
icebp
ja
insb
mov
push
mov
sbb
movsl
add
hlt
mov
stos
xchg
xchg
mov
div
stc
sub
jbe
imul
add
popf
in
adc
push
es
into
in
outsl
inc
pop
mov
cs
or
mov
inc
mov
mov
fcmovnu
stos
es
jae
aas
jbe
or
andb
popf
mov
adc
push
nop
push
cmp
scas
or
xchg
loopne
xchg
jbe
xchg
inc
inc
negb
iret
daa
add
xor
rorb
or
js
mov
xchg
and
lods
adc
inc
or
adc
sbb
je
pop
aam
mov
xchg
mov
inc
cmp
pop
mov
lds
and
inc
pop
daa
aaa
push
mov
cwtl
cld
js
lcall
pop
pusha
push
push
inc
aam
fcmovbe
push
je
xchg
std
cwtl
cmp
and
and
inc
adc
rclb
cltd
or
mov
dec
mov
adc
mov
push
adc
ret
push
and
loop
fs
add
test
adc
push
add
cmpsl
arpl
outsb
frndint
sbb
mov
or
test
stos
pushf
xchg
dec
push
pop
xchg
stc
and
xchg
cmpl
aad
cmp
call
popa
clc
and
fisttpll
daa
leave
out
or
ret
in
cli
xor
xorb
pop
fisttps
enter
test
sbb
pop
stos
fimull
pop
or
pop
inc
push
push
fwait
xlat
inc
or
ficoml
xchg
xchg
and
loopne
mov
mov
inc
addr16
pop
out
sbb
cmp
mov
bound
add
add
cwtl
jge
movsl
call
inc
pop
inc
xor
inc
shll
aam
lods
idivb
inc
insl
lcall
not
loop
lock
cmc
pusha
cs
add
out
sbb
pop
lods
imul
jmp
dec
jge
jb
jmp
test
add
mov
inc
pop
add
aad
jge
xlat
or
and
mov
push
aad
sub
ds
and
cltd
inc
in
insb
sbb
cmpsb
imul
loop
jl
jae
or
inc
push
lret
test
and
jo
shr
jo
dec
rolb
aaa
xorl
xor
mov
outsl
ja
divl
adc
sbb
sub
fwait
inc
mov
push
iret
test
je
int3
mov
std
pop
push
cltd
xchg
in
dec
imul
add
inc
dec
pop
mov
jp
xor
lds
jl
jbe
test
inc
jnp
xchg
iret
iret
loopne
pcmpeqd
sub
sub
test
movsb
adc
xchg
mov
xchg
jp
xor
filds
adcl
in
pop
rep
mov
xchg
and
mov
lods
mov
jnp
push
sti
out
adc
xlat
lret
jb
push
mov
pusha
add
sti
in
jb
xchg
pop
rcl
in
into
add
pop
inc
mov
xchg
adc
adc
and
jl
lock
stos
fstl
into
jno
js
popa
lcall
cltd
sbb
push
sbb
int
sti
inc
pop
or
cmp
hlt
sahf
sbb
and
aad
cmp
es
fstl
and
and
push
test
xchg
pop
hlt
push
and
rcll
insb
mov
mov
jb
push
jge
cmp
into
sub
push
push
mov
repnz
jmp
cmp
rcrb
ss
nop
push
jp
dec
into
jge
xor
stos
sub
xchg
xor
stc
cmpl
push
scas
ds
inc
dec
pop
xchg
fstpl
push
bound
sbb
insb
in
mov
enter
leave
adc
push
int
out
aad
pop
int3
imul
pop
add
jmp
dec
jmp
adcl
jbe
push
jg
jae
pop
out
cmp
ljmp
sub
and
enter
xor
add
enter
pop
add
add
icebp
cs
fnsave
loop
lahf
lahf
mov
jae
enter
inc
dec
test
sub
xchg
ljmp
dec
mov
pop
loopne
aam
pop
test
sub
outsb
mov
in
test
mov
out
sbb
imul
andl
je
jmp
dec
insb
push
cmp
inc
add
jbe
out
mov
lds
call
or
mov
cmp
bound
in
and
fs
test
aam
scas
gs
cmpsb
cmp
js
stc
mov
sub
into
inc
and
xchg
push
stos
insb
in
lret
in
cltd
sahf
xlat
repnz
stos
cmpsl
popa
lret
leave
add
stos
xlat
or
adc
push
adc
mov
rol
sub
repnz
lcall
nop
dec
addr16
mov
in
fildll
xchg
stos
add
clc
addr16
shll
inc
std
push
lods
add
inc
push
enter
pop
cmpsl
mov
clc
outsl
add
fistpl
cli
sti
inc
mov
cltd
xchg
cmpsb
imul
dec
call
mov
add
loop
insb
and
xchg
jb
test
out
sub
mov
cmc
dec
testb
xor
adc
adc
sahf
and
mov
out
repnz
das
jbe
shlb
ja
xchg
mov
mov
shrl
test
pushl
call
sahf
loop
in
sub
pop
push
jne
inc
ror
mov
sbb
adcl
mov
fcmovu
std
mov
and
ja
mov
jb
dec
lret
out
pushf
xor
xchg
sbb
outsb
mov
imul
or
stos
pop
sub
enter
stos
aam
xchg
out
test
adc
iret
push
cmp
adc
lret
mov
pop
mov
cmp
adc
dec
js
inc
cs
cmpsl
int3
xor
or
cli
jmp
cwtl
xor
scas
add
stos
icebp
cmp
jbe
xor
int3
cmp
aam
push
cwtl
aaa
mov
inc
fmuls
sbb
shll
arpl
jge
jae
cmp
mov
pop
jg
and
and
test
xorl
mov
inc
outsl
inc
pushf
jb
mov
cmp
movsb
fdivr
in
mov
popf
cmp
fcoms
xchg
add
les
add
jne
cvtps2pd
push
mov
test
ret
cmpsb
ficomps
ja
cmp
addr16
fldcw
sub
xor
or
fs
ja
mov
fldl
mov
xor
imul
iret
mov
ja
mov
divb
rcr
xlat
mov
nop
loopne
out
aaa
push
mov
ja
push
out
sbb
jecxz
sub
nop
das
push
inc
shlb
repnz
mov
lea
int3
push
mov
nop
pop
lea
mov
xor
push
leave
jns
cmp
aam
cmpsl
cmp
dec
imul
mov
push
and
cmpsb
mov
test
sub
mov
jecxz
sbb
lds
stos
sub
mov
loopne
fisubs
fcmovnbe
lcall
xchg
sub
push
loope
nop
js
push
pop
inc
or
loopne
stc
adc
enter
xor
jmp
std
sahf
or
mov
jo
out
and
shrl
sbb
lcall
inc
sbb
or
push
loopne
mov
jp
and
push
decb
mov
add
push
rcrb
xchg
cmp
and
loopne
cmpsl
adc
les
adc
sahf
popf
cli
mov
scas
jl
out
xchg
pop
cmp
dec
mov
inc
int
jle
sbb
add
imul
ljmp
imul
lahf
push
push
outsl
adcl
repz
into
add
lock
je
das
and
cmp
js
dec
fimull
scas
imul
jle
dec
push
xor
fidivl
pushf
dec
cs
lods
dec
std
imul
jbe
adcl
scas
movsl
cmp
jb
sbb
mov
inc
test
push
cli
xor
inc
hlt
adc
dec
xor
add
sahf
stos
add
pop
jbe
mov
sti
repnz
mov
pop
cwtl
in
jle
xor
pxor
sahf
and
or
add
mov
jb
das
call
xchg
cmp
aad
sbb
xor
ffreep
aad
jae
or
and
pop
enter
lea
outsl
ficoml
les
nop
jl
sub
das
in
inc
pop
add
push
fisttpll
push
filds
xchg
out
or
push
jecxz
pop
and
sbb
push
sbb
insb
leave
test
fst
pop
jae
sub
nop
mov
ret
cmpsb
push
sarl
rolb
mov
pushf
fcompl
fdivp
xchg
and
sbb
or
fwait
mov
jno
mov
adc
pop
push
inc
cmpsb
mov
cmp
xchg
jge
sbbl
push
dec
orb
stc
mov
sbb
mov
jbe
bound
mov
bound
insb
cs
cmp
test
stos
out
shrl
sahf
dec
or
sub
out
mov
cwtl
rolb
adc
cmp
sarl
leave
pushf
push
lea
sub
bound
xor
sbb
mov
mov
mov
add
adc
push
icebp
test
or
icebp
insl
scas
xchg
int
mov
sbb
cmp
dec
cmc
sarl
add
dec
cmpl
les
xchg
outsl
call
xchg
imul
fistpl
popf
arpl
push
mov
cmpsl
sub
femms
jl
insb
mov
sbbb
js
daa
in
adc
data16
sub
test
lock
pop
inc
aas
jno
xor
jg
out
sbb
roll
add
test
dec
sbb
mov
mov
add
sti
lods
sbb
and
xchg
cld
fs
arpl
test
push
test
mov
stos
ljmp
das
inc
aas
dec
push
and
test
test
inc
sarb
ret
cmp
lahf
jnp
lock
dec
lds
adc
jns
mov
test
loope
dec
and
jle
scas
jb
fadds
loope
mov
inc
fwait
mov
insl
sbb
and
rcl
sub
leave
dec
int3
push
add
xchg
mov
mov
and
mov
inc
or
fnstenv
std
mov
call
pop
inc
xchg
mov
jge
out
inc
mov
mov
cwtl
es
adc
mov
sbb
or
mov
xchg
sub
xor
push
xchg
adc
mov
or
jcxz
dec
or
pop
ljmp
fildll
outsb
repz
push
sub
sahf
rcr
cld
pop
insb
cmpsb
cli
push
pop
out
rclb
sbb
hlt
test
aad
pop
out
push
rorl
nop
loop
pop
push
inc
xchg
data16
stos
mov
movsl
ss
xchg
push
and
push
fbld
rcrl
loope
jmp
sahf
add
fcomp
test
out
arpl
add
xchg
leave
int3
mov
xor
xorl
lock
cmp
int3
push
mov
rcrb
out
jecxz
adc
sarb
scas
mov
sub
fs
mov
sbb
ja
inc
jecxz
mov
pushf
inc
mov
mov
sbb
mov
mov
pop
and
imul
lret
push
xchg
sbb
in
shr
test
mov
pop
sub
cmpsl
xchg
mov
fsubrl
xchg
sub
and
jle
insl
mov
imul
pop
dec
mov
mov
pusha
cmovb
xchg
jecxz
pushf
pop
add
mov
fmull
inc
pop
xchg
jle
out
xchg
lods
mov
cltd
jnp
test
aaa
pop
mov
jae
lcall
pop
dec
add
mov
xchg
mov
cwtl
pop
icebp
ret
mov
cmp
mov
adc
mov
sbb
ror
pop
nop
inc
loopne
mov
lea
clc
mov
xor
icebp
push
push
mov
popf
out
scas
cmp
pushf
jne
dec
sub
sub
mov
bound
xor
test
mov
popf
ss
dec
stc
push
adc
add
scas
inc
stc
adc
mov
in
testl
lods
ds
xor
add
or
mov
pop
jl
jge
inc
xchg
xchg
mov
inc
stc
clc
jns
push
lds
fs
push
jl
loop
mov
cmp
dec
scas
push
adc
in
cmpsb
ss
push
into
pop
mov
into
lock
ret
dec
sbb
outsb
mov
sub
mov
sub
and
sub
mov
cs
insl
cmpsb
cmpsl
xchg
rcll
inc
js
scas
add
or
iret
test
lods
mov
testl
pop
sub
inc
testl
sub
das
mov
in
pop
adc
lock
not
mov
add
lea
jle
cmp
int
in
adc
pop
js
push
mov
sub
notb
adc
jg
loope
mov
imul
incb
and
sub
ss
jns
pop
hlt
icebp
cwtl
xchg
and
sub
mov
mov
push
inc
pop
vmovddup
mov
test
and
lea
push
jbe
out
fldcw
movsb
push
dec
push
add
shll
push
and
dec
dec
stos
outsl
sbb
xor
fs
and
fcoml
or
test
mov
xchg
test
xchg
les
ljmp
hlt
sub
mov
test
lods
mov
fucom
js
push
insb
push
mov
ss
hlt
dec
adcb
aas
add
sub
add
add
mov
insb
add
in
push
js
ja
sub
jmp
das
fisubrl
pop
lods
scas
xor
xchg
fyl2x
cmp
mov
and
mov
inc
inc
jle
sti
xchg
mov
cmpsl
adc
sahf
push
sahf
adc
outsl
jno
repnz
mov
mov
fnstsw
out
in
iret
out
lret
adc
fcoml
sahf
mov
push
lret
xchg
cmp
jb
pop
xor
pop
cmp
xor
fs
push
sub
in
cmc
jno
jmp
movzbl
int
and
mov
mov
sbb
inc
or
cmpsb
aas
adc
cltd
jl
movsb
call
pushf
xor
sahf
imul
fdivrl
sti
cmp
icebp
loopne
and
je
out
insl
dec
repz
insb
push
jbe
sbb
jp
sahf
fucom
dec
jl
adc
hlt
mov
rcrl
dec
nop
mov
into
popa
pusha
pop
and
or
xchg
mov
bound
mov
xchg
push
push
scas
jno
arpl
xor
push
add
das
mov
adc
ss
dec
sub
into
push
mov
cmp
or
add
fcom
cmc
push
push
sbb
lret
jbe
inc
xor
push
dec
mov
cmp
imul
jmp
das
sbb
ficoms
cs
ficompl
pop
mov
outsl
and
movsl
dec
rclb
ds
xlat
sti
repz
mov
nop
inc
std
jb
push
jle
jle
mov
int
adc
ret
mov
push
lcall
inc
lret
lock
jo
je
fs
push
dec
pop
pop
cmpsl
jnp
adc
pop
call
or
fwait
adcl
ljmp
mov
jno
xor
popa
add
mov
ror
xor
and
or
ds
jp
push
dec
mov
pusha
mov
sti
lret
call
pop
jae
xchg
mov
repz
push
sahf
pusha
jae
inc
mov
lahf
ret
add
enter
or
roll
inc
jmp
cmp
sbb
ljmp
inc
dec
sarb
or
gs
or
adc
fildll
mov
inc
pop
sub
out
push
outsl
jo
repz
pusha
adc
sahf
cli
or
fs
and
jecxz
lock
divb
add
push
mov
jge
mov
push
pop
jp
mov
inc
mov
in
pop
mov
popa
in
iret
roll
lds
add
dec
int3
xlat
adc
sti
cld
cli
push
popa
cmp
adc
xchg
loopne
jno
imul
cld
ds
aam
xchg
jmp
mov
lods
push
dec
pop
pusha
jnp
mov
insl
fidivl
xor
push
and
pushf
repnz
push
mov
cld
int3
enter
int3
das
int3
mov
inc
jo
shl
jbe
adcb
mov
in
and
flds
leave
jl
inc
or
das
xor
cmc
mov
out
data16
mov
cmpsl
pop
mov
push
sbbw
dec
sar
out
dec
push
pop
or
fs
or
sahf
and
fcompl
loopne
sub
inc
push
and
fistl
inc
xor
adc
outsb
cwtl
mov
loop
push
lea
loop
icebp
movb
in
adc
or
sahf
jle
inc
push
fstpl
push
call
push
or
jns
adc
mov
les
les
sbb
adc
xchg
push
and
push
dec
popf
inc
dec
adc
xor
in
fimull
arpl
hlt
movsl
sbb
lea
xor
inc
xlat
outsl
rcr
adc
push
sub
call
pop
push
pop
pop
fnstcw
repnz
out
pop
sub
int
or
cmp
cs
mov
stc
mov
insl
rcrb
aad
push
lret
xor
or
movsl
stc
jg
cmpsb
inc
cltd
jno
xchg
movsl
push
and
clc
addr16
pop
pop
subl
or
das
inc
dec
jb
xchg
int
out
rcrl
or
mov
ss
decl
mov
pop
xchg
dec
imul
scas
sarl
mulb
cli
rcl
xchg
ret
mov
add
adc
mov
insl
insb
xchg
ret
nop
ja
mov
leave
data16
mov
fmull
xor
dec
in
push
add
es
push
sub
mov
addb
mov
and
jo
jnp
lods
xor
int
inc
pop
pop
lret
aas
push
lret
enter
jbe
popa
leave
dec
or
fiadds
jne
push
lret
jbe
xor
push
test
push
outsb
jo
xchg
cld
or
es
cmpsl
dec
add
into
xorl
scas
fcmove
hlt
test
clc
outsb
xor
push
add
outsl
mov
sbb
pop
ljmp
cld
in
mov
mov
sub
sub
or
cmp
repz
push
insl
cmp
push
push
dec
xchg
stc
fs
orb
leave
xor
mov
rcrb
in
mov
cmpsb
mov
cmp
std
gs
repnz
cld
xchg
xlat
cmp
call
pop
js
test
aam
sbb
xchg
cmp
or
in
iret
dec
fcoms
inc
mov
push
xchg
repnz
movsl
je
inc
addb
mov
ljmp
pop
push
dec
and
dec
test
sbb
mov
ds
xor
popa
push
or
pop
popa
pushf
xchg
xchg
cmp
lahf
dec
je
xchg
push
mov
xchg
inc
push
xchg
cmovp
mov
rorb
dec
mov
scas
mov
push
xchg
fildl
xchg
xchg
shll
dec
xor
dec
sub
jb
cmp
aaa
mov
popa
insb
rcl
dec
dec
pop
gs
jp
lcall
int
mov
orb
push
outsb
add
scas
dec
enter
into
xchg
inc
xor
xor
push
cs
mov
push
mov
inc
mov
pop
push
nop
or
pusha
cmp
dec
jp
mov
or
inc
jns
fildl
subb
and
sbb
test
inc
loop
aam
mov
das
inc
les
mov
add
fs
jp
lret
dec
icebp
call
jae
les
loop
push
es
pop
cmp
ror
pop
int
cmp
gs
hlt
sahf
cli
push
mov
pop
pusha
gs
out
rcl
sub
xchg
pop
mov
lret
ljmp
loop
nop
ficompl
mov
into
or
dec
aaa
pop
add
mov
dec
mov
rcrl
jp
clc
es
adc
movsl
jae
cmpl
and
into
or
push
sub
fxch
jg
sbbb
aaa
cmp
inc
mov
in
xchg
fwait
imul
add
lret
ljmp
loop
loop
mov
adc
and
lcall
jp
mov
lods
pop
or
fsubs
add
pop
and
push
mov
dec
dec
mov
dec
aad
inc
in
gs
push
ds
and
outsl
repz
mov
loopne
push
mov
outsb
jp
popf
cmp
or
mov
inc
notl
sbb
addr16
mov
mov
inc
adc
test
add
push
mov
inc
int3
jb
outsb
int
repz
call
jo
fildl
jle
push
shrb
sub
test
and
shll
ret
fs
icebp
adc
push
imul
fmuls
or
dec
mov
jmp
or
adc
adc
cld
inc
loope
loopne
aas
push
mov
out
mov
push
adc
push
nop
icebp
sarb
sbbb
hlt
pop
ror
pop
or
xchg
nop
inc
fisubl
shlb
hlt
push
iret
sbb
pop
hlt
jbe
mov
pop
vmovaps
lret
jno
shll
test
pop
cli
pop
jns
out
mov
int
add
rcl
scas
loop
mov
adc
push
dec
pop
lret
cltd
sub
repnz
fldt
dec
dec
sub
xchg
int
nop
pop
js
push
in
or
add
pop
adc
or
xor
jg
mov
xor
out
orb
arpl
mov
lock
loope
jecxz
xchg
pushf
or
lcall
inc
imul
mov
mov
sub
pop
push
and
inc
ret
fidivs
jnp
test
mov
mov
repz
repz
xchg
gs
ds
pop
pop
loop
xor
mov
lods
orb
in
dec
clc
jmp
xchg
in
bound
inc
mov
jae
or
ret
popa
scas
push
sti
mov
inc
push
push
mov
hlt
bound
mov
insb
jl
pop
out
sbb
cmp
add
mov
jno
dec
push
jbe
sbb
dec
fcom
xchg
pop
add
mov
jl
mov
rolb
push
pop
cmpsb
inc
push
aaa
mov
repz
lret
shll
xor
iret
cmp
nop
pop
rol
mov
jecxz
outsl
dec
xchg
test
mov
filds
pop
insb
int3
ljmp
das
push
shll
inc
mov
mov
inc
sbb
jno
xchg
sub
add
or
sahf
sub
clc
pop
adc
sbb
aaa
adc
xor
xchg
clc
notb
adc
mov
call
jbe
cmp
jmp
cmp
mov
xchg
ds
insb
xor
insb
dec
xchg
mov
test
sahf
into
call
rol
cli
int
push
inc
sbb
fiaddl
icebp
pop
test
sbb
push
jg
fldenv
push
shlb
cmp
pop
test
ficoml
sub
mov
popf
faddl
cs
std
ret
test
sub
mov
sub
repnz
sub
lret
test
mov
shl
out
pop
jnp
dec
leave
movsl
xchg
movsl
aam
ja
or
aam
fldcw
add
test
sarl
pusha
cli
std
rol
sub
in
fdivrl
fs
mov
xchg
enter
and
jo
lret
pop
cmp
adc
pcmpgtd
or
and
xlat
cs
icebp
inc
lcall
notl
cmp
loopne
lods
push
jne
sbb
inc
ja
in
int3
push
stc
xchg
mov
jmp
inc
lds
lret
call
ss
dec
xchg
mov
in
addr16
or
or
in
push
cmc
mov
mov
sbb
jp
and
aas
jecxz
ret
mull
lods
gs
xor
jb
push
mov
in
mov
sti
arpl
shrl
xor
outsb
movsb
inc
cmpsb
int
sbb
ljmp
lock
lds
cli
orb
inc
inc
sub
or
mov
xchg
xchg
repz
xor
or
cwtl
cmc
lods
mov
cld
test
or
ja
subb
lods
fcmovu
pop
push
xchg
mov
ret
mov
xor
add
adc
add
insl
adc
in
dec
lods
mov
ds
lock
ret
fbld
add
or
test
or
jne
out
scas
adc
lret
sub
push
cmp
or
adc
mov
jecxz
movsb
adc
fwait
std
or
jns
popf
stos
inc
pop
or
mov
arpl
inc
popa
nop
cmp
xor
jecxz
mov
arpl
pop
lea
jns
lods
sar
adcb
mov
mov
jnp
cmp
ret
xchg
rcll
pop
cvtpi2ps
jns
les
mov
xor
idivb
add
ss
add
mov
bound
insl
rorb
call
xchg
mov
mov
scas
or
xor
and
das
loope
or
or
fidivl
es
es
and
fwait
dec
cmpsl
cmpsl
movl
in
inc
push
fwait
inc
jp
in
push
or
mov
dec
xor
inc
pop
es
xorl
push
insl
in
jmp
or
and
popa
inc
dec
mov
jb
push
add
inc
add
and
addl
imul
pop
or
sub
or
push
adc
lret
xor
ljmp
xchg
in
hlt
dec
mov
test
cmp
push
test
loop
inc
ss
add
push
nop
mov
aas
lar
jle
mov
xor
fldt
or
testb
pop
pop
pop
fistpll
mov
sub
or
std
pop
mov
inc
mov
arpl
mov
les
lods
das
fiadds
mov
mov
decl
pop
mov
adc
mov
and
cld
inc
jmp
cmp
jle
mov
aad
fs
enter
mov
push
lea
mov
sarl
and
out
jne
dec
in
lods
mov
jmp
cmp
cmp
mov
mov
loope
ret
leave
add
jle
daa
fsts
adc
test
mov
fiadds
jb
shlb
cmp
cli
call
or
jg
add
into
or
jb
xor
sbb
mov
sub
lret
leave
in
fsubr
jno
int3
xrelease
mov
out
insl
jle
and
fcomps
addr16
push
mov
je
scas
lret
shlb
jnp
jne
incb
mov
jae
ds
imul
loopne
mov
cmp
sahf
mov
pop
sub
push
inc
sub
scas
mov
pop
sub
xchg
push
add
mulb
icebp
ror
and
push
adc
fisubrl
xchg
mov
fstpt
in
hlt
insb
mov
mov
inc
cmp
add
mov
es
jb
sub
fdivs
push
mov
aam
adc
push
sbb
jecxz
enter
sbb
addb
fwait
imul
push
or
mov
repz
fisubs
loope
lods
and
push
out
dec
adc
cs
dec
mov
sbb
jge
push
xor
jle
pop
jmp
into
sub
mov
add
iret
push
xchg
adc
jmp
ret
ret
inc
fistps
loopne
sbb
pop
loope
subl
push
jp
cmp
dec
sbb
outsb
xchg
out
bound
addr16
mov
or
hlt
das
mov
negl
xchg
mov
dec
shr
imul
mov
mov
sbb
xor
into
xlat
add
jbe
xor
mov
imul
sbb
sarb
imul
fadds
sub
mov
mov
xchg
inc
add
pusha
fimuls
sbbl
inc
xor
imul
imul
mov
lret
cmpsl
adc
loope
jmp
cmovno
scas
jae
pop
adc
inc
or
cmpsl
and
or
sti
cwtl
push
int3
sub
inc
jmp
sbb
add
in
imul
je
xlat
and
ss
mov
jne
lods
enter
insb
mov
addr16
sbb
pop
mov
push
imulb
pushf
jge
jecxz
and
pop
and
adc
in
or
xor
test
pop
jge
js
sbb
popa
ds
sbb
inc
ret
jns
and
adc
aas
mov
ds
repnz
push
movsb
add
outsl
addr16
jae
stos
mov
mov
jne
jge
xor
fildll
xchg
cltd
sub
cmp
das
or
xor
mov
push
and
add
out
pop
pop
outsb
fcoms
ds
popf
adc
cmpsb
or
jge
sete
jno
or
push
xchg
sub
popf
sub
pop
add
dec
scas
aas
xorb
adc
int
lcall
cmp
push
pusha
es
xchg
in
andb
cmp
xchg
mov
pop
mov
push
cmp
sbb
aam
jle
mov
dec
in
jbe
mov
jmp
and
in
jnp
sub
push
sbbl
jae
add
ja
jns
push
xor
dec
sub
out
in
mov
test
sub
movsb
loopne
and
jmp
push
dec
jl
int3
femms
repnz
mov
cs
in
flds
cmp
push
sbb
jno
int3
mov
cmp
adc
addr16
hlt
mov
mov
xchg
jg
push
add
hlt
fs
fisttps
cmpsb
lock
dec
pop
pop
out
jno
mov
out
lcall
fwait
mov
xor
loopne
lea
stos
icebp
leave
shlb
and
push
jae
inc
jnp
scas
subb
inc
pop
hlt
leave
movb
lret
ds
inc
lret
in
pop
data16
lret
mov
mov
and
les
and
mov
in
stc
mov
les
mov
fwait
lahf
mov
inc
in
and
cli
sub
mov
mov
orl
fwait
es
jp
lcall
stc
push
jb
sub
dec
adc
add
insl
push
cmp
cmc
dec
pop
shlb
add
jbe
inc
pop
outsl
mov
add
jmp
js
mov
fisubrl
repnz
sub
adc
push
outsb
or
push
push
stos
jp
and
sub
add
mov
xchg
sub
ss
jg
or
and
xchg
sarl
xor
mov
jb
inc
mov
jo
addl
cmpsl
sbb
call
add
sub
push
push
add
xorl
out
cmc
xorl
push
add
mov
pop
mov
orl
pop
imul
pop
cmp
jbe
sbb
leave
cmpsl
mov
pop
cld
in
mov
dec
and
int
adc
dec
shr
and
test
out
enter
test
jge
xchg
cld
cmp
sbbl
in
ret
ss
dec
sbb
in
sbb
sub
loop
outsl
sbb
int3
or
dec
out
dec
add
and
loope
push
and
jbe
pop
aas
out
cmpsb
or
pop
imul
add
enter
icebp
daa
cmp
das
mov
std
or
lcall
pop
add
orl
rolb
jg
dec
push
lods
cwtl
sbb
push
pop
out
sti
xor
in
add
stos
shrl
push
repz
popf
shll
pop
xor
and
adc
scas
dec
icebp
rorl
mov
es
mul
in
add
cmp
add
jecxz
pop
cmp
xchg
stos
jp
dec
jmp
lds
jo
xor
fsubrs
loopne
ds
add
add
or
addr16
mov
adc
cmp
scas
fldt
mov
cs
pop
std
rol
das
adc
mov
push
xchg
clc
enter
int3
and
mov
lds
stc
inc
sti
std
pop
sti
or
hlt
pop
pop
insb
jne
dec
enter
push
jge
lea
rcll
in
repnz
and
incb
push
insl
call
test
and
or
out
cli
cmp
fnstcw
aaa
cwtl
jle
cli
adcl
inc
lock
faddl
in
imulb
iret
jmp
xchg
jo
pop
sarb
or
mov
loop
fidivl
mov
push
jno
das
sbb
pusha
inc
mov
out
push
scas
sbb
jmp
push
mov
subb
sbb
ret
clc
test
cmp
ret
push
stos
sbb
mov
push
out
imull
fs
jecxz
gs
ret
movsb
fldenv
stc
mov
adc
inc
cmpsl
imul
ss
adc
pop
stos
cmp
mov
adc
and
sbb
mov
pop
dec
test
jne
fwait
add
paddusb
jb
push
sub
push
dec
call
or
mov
lea
clc
jo
pop
cmp
fwait
jo
sbb
push
mov
test
xor
lock
and
or
xchg
or
stc
mov
mov
jbe
fldcw
in
leave
pop
add
push
pushf
shl
movsb
data16
pop
adc
shlb
nop
dec
inc
aad
adc
or
pop
pop
jmp
push
fisttps
leave
xchg
cltd
and
cmp
lea
mov
mov
mov
adc
and
negl
xor
xchg
mov
mov
aam
xor
adc
push
xor
imul
xor
xchg
push
add
pop
nop
xchg
fadd
test
mov
xchg
icebp
xchg
add
jmp
push
xchg
lret
push
fsubl
ds
push
inc
inc
test
jb
andl
arpl
fdivp
call
call
sti
out
pushf
dec
add
mov
or
jl
gs
lret
outsb
cwtl
mov
jnp
jne
bound
push
bound
sub
dec
xchg
gs
sub
sub
add
loope
loopne
dec
xor
rcrl
jnp
jb
fimuls
into
mov
pop
inc
pusha
iret
aad
cmp
leave
inc
jg
hlt
cwtl
add
dec
push
dec
mov
cmp
mov
jp
fcmovbe
aam
jno
int3
inc
cwtl
in
or
pushf
adc
test
decb
test
cmp
arpl
jecxz
orb
scas
inc
pop
push
fmull
xlat
mov
cld
mov
iret
es
adc
push
xor
mov
mov
adc
mov
mov
adc
lods
cmc
mov
movsb
dec
fidivl
scas
mov
stos
sbb
jns
pop
jmp
mov
stos
int3
cli
add
leave
pop
jle
pushf
cmp
sub
or
pop
les
cltd
subl
shl
and
lcall
adc
das
dec
jecxz
xor
adc
fiaddl
add
in
aas
sub
cmp
popf
mov
push
scas
mov
push
into
int
push
arpl
ss
sub
lock
rorb
xchg
int3
gs
inc
adc
or
movsb
xor
or
xchg
pop
or
sahf
into
adc
inc
inc
xchg
stos
jge
frstor
nop
sub
xchg
xchg
mov
cld
hlt
push
insb
pop
out
jmp
dec
push
dec
mov
add
mov
adc
movsb
mov
xchg
imul
rorb
das
enter
xor
xor
cmp
test
insb
imul
pop
mov
xchg
jbe
add
fwait
lods
sbb
std
xchg
arpl
test
lret
cmp
mov
pushf
pushf
jmp
xchg
mov
in
cmp
xor
adc
pushl
test
push
jb
cmp
jge
pop
ret
outsl
je
inc
sub
jg
push
enter
xchg
inc
outsl
pop
xor
ret
into
jb
cs
lea
popf
icebp
decb
sub
xchg
dec
push
adc
call
hlt
push
aad
push
jae
pop
pop
xchg
adc
jne
fdivp
xchg
jmp
xchg
xchg
lea
adc
inc
dec
fdiv
adc
xchg
fidivrl
xor
cld
fidivs
mov
fstps
mov
arpl
mov
pop
sub
sub
mov
mov
decl
xchg
ljmp
testb
js
xchg
shlb
cmpsl
movsl
xor
mov
jmp
adc
ss
pop
jecxz
pop
lcall
pop
scas
add
sahf
pop
out
out
sahf
mov
xchg
push
sub
pop
push
test
lret
or
call
lds
xchg
push
out
add
lods
cmp
xchg
loope
movsb
fimull
dec
xlat
icebp
push
jae
imul
rcrb
jge
scas
in
jb
adc
jb
push
fwait
insl
mov
jecxz
insl
add
inc
mov
test
aam
stc
and
sbb
cmc
sbb
mov
dec
pop
aad
std
lods
jg
sbb
aad
push
testl
cld
and
sub
xchg
mov
or
mov
xor
push
inc
aas
jbe
jbe
loop
jmp
shll
push
and
sbb
fistl
repz
leave
lahf
jmp
dec
xchg
out
addr16
fcmovb
call
scas
jg
ljmp
cmp
pop
je
jno
add
add
add
stc
add
jg
ret
ja
mov
movsl
adc
sbb
nop
dec
das
test
cmp
hlt
test
dec
cmpsl
mov
sub
mov
xchg
adc
fld
and
mov
add
add
or
xchg
std
ds
inc
add
cmp
pop
pop
mov
sti
inc
pop
in
push
cmpl
rorl
xchg
ror
push
cltd
std
es
int3
pushf
sbb
fildl
xor
stc
into
std
adc
fnop
inc
frstor
mov
jg
cmp
mov
and
cmpsb
mov
add
divb
fstps
mov
pop
xor
hlt
push
call
insb
pop
pop
sub
or
dec
jns
lock
pop
mov
or
push
adc
repnz
pusha
dec
dec
std
daa
dec
sbb
xor
mov
out
daa
or
mov
mov
lock
mov
ljmp
cmp
in
movsb
sbb
mov
or
mov
test
dec
inc
movsb
test
inc
add
pop
mov
jp
cmpb
rcrl
cmpl
orl
inc
xchg
jns
popf
inc
push
shrb
xchg
jg
or
hlt
dec
je
add
sbb
and
mov
inc
imul
mov
mov
rolb
dec
sub
jp
xlat
mov
scas
mov
stc
adc
add
mov
es
pop
sbb
inc
sub
jp
movsb
repz
mov
in
jo
shlb
and
push
mov
push
cmp
dec
call
mov
lock
pop
popf
cmpsb
push
ds
in
push
lret
push
xor
out
sti
fs
push
les
insb
cmpl
or
inc
pop
or
rcl
inc
idiv
pop
mov
imul
aas
test
gs
icebp
adc
push
mov
pop
scas
jl
loope
shl
cmp
and
sub
enter
aad
dec
imul
cmp
mov
lea
int
inc
movsb
out
pop
or
push
and
push
adc
popa
push
test
insl
in
loop
adc
cmp
ret
jb
add
dec
pop
movsl
aam
dec
fnsave
mov
decb
push
push
stos
sub
mov
lock
pop
cmp
mov
nop
xchg
mov
lea
aad
cmc
mov
mov
mov
or
push
xchg
and
push
pop
lds
fidivrl
lret
addr16
mov
outsl
inc
jecxz
lahf
cs
loopne
xchg
push
jbe
xchg
or
pop
adc
int
enter
mov
sbbl
es
inc
cmpl
dec
jnp
mov
pushf
popa
lret
sub
stc
dec
and
mov
daa
rorb
dec
mov
inc
fildll
out
ljmp
in
scas
push
sbb
mov
dec
jne
test
repnz
inc
xor
stos
pop
push
incb
jbe
andl
orl
push
lahf
cmpsb
xor
sbb
rcrb
ficompl
add
adc
push
data16
xchg
push
repnz
negl
shrl
rolb
aam
xor
sub
cmp
add
test
lods
inc
daa
std
sbb
jp
outsb
fists
add
sbb
stos
jbe
jmp
pushf
imul
add
mov
pop
pop
dec
lods
es
leave
adc
test
and
mov
dec
push
push
adc
push
jg
mov
add
sbb
lret
push
mov
fistpl
mov
jmp
std
stos
sbb
sbb
dec
cmp
mov
rorl
fstpt
fists
lret
insb
shrb
rclb
lods
mov
pop
jb
adcb
movsl
and
jl
and
scas
je
mov
and
jae
mov
inc
stos
jg
ja
mov
arpl
cmp
mov
jp
add
lret
jno
inc
imul
lods
loopne
in
repz
push
or
pop
call
or
lcall
dec
adc
jno
nop
out
loopne
mov
push
lret
or
xor
jns
sub
sahf
adc
stc
cwtl
jmp
repnz
pop
scas
sub
insl
dec
dec
jg
add
popf
movsb
leave
jo
outsb
mov
fcom
jge
rol
outsl
sbb
scas
leave
inc
pop
negb
mov
test
add
push
mov
cs
lea
in
jne
ds
popf
daa
adc
inc
dec
lods
sti
es
int3
mov
int3
aad
pushf
aas
mov
subb
xchg
scas
inc
adc
mov
repnz
pusha
pusha
out
and
and
lret
js
adc
xchg
clc
stc
dec
dec
push
jbe
frstor
push
jb
rcrb
pushf
xchg
jbe
and
in
cmpsb
sbb
aad
cmp
mov
gs
pop
xchg
push
js
inc
mov
sbb
jl
inc
jecxz
xchg
aaa
in
xor
adc
dec
fldenv
add
cltd
mov
loopne
xchg
mov
add
out
sbbb
mov
mov
lods
data16
pusha
mov
sub
cmp
dec
sarl
aad
pop
ljmp
mov
inc
lret
cmp
inc
adc
push
and
pop
sahf
xchg
pop
mov
js
adc
rcr
jmp
mov
into
outsl
mov
sarb
aas
outsl
lea
nop
lahf
imul
lret
data16
mov
in
aad
cli
or
nop
and
xor
cmp
lcall
call
adc
jmp
jbe
ds
and
sbb
push
push
xchg
lods
add
out
addb
or
jp
adc
cmp
mov
loope
mov
mov
sbb
fwait
out
mov
xchg
test
and
push
js
rcrb
xchg
shr
jbe
push
cmovno
stos
mov
int
add
and
add
push
sbb
xchg
lds
aas
push
adc
scas
lds
add
mov
insb
jg
or
cmpsb
xchg
or
cmc
scas
add
and
loopne
sbb
cmpsb
or
pop
iret
mov
repz
and
aad
in
js
mov
dec
inc
aas
and
lods
stos
jo
lea
in
or
stos
lock
icebp
mov
iret
test
imul
pop
mov
push
lods
xor
adcb
cli
fisttps
mov
pop
arpl
outsl
xorl
stc
sarl
fidivl
leave
lret
or
loop
mov
cmp
inc
leave
pushf
mov
push
sbb
cs
pop
lods
int
daa
lods
sbb
lahf
ror
test
mov
pop
test
cmp
je
icebp
xor
cld
ja
addr16
inc
shl
dec
inc
int3
scas
pushf
cmpsl
stos
cmp
out
mov
sub
popa
or
jb
dec
mov
jle
out
mov
inc
in
add
xchg
ret
mov
int3
cmp
add
dec
pushf
mov
push
sub
and
push
into
cmp
jnp
jae
arpl
loop
test
popf
jbe
and
les
fimull
xchg
mov
and
or
and
xchg
mov
rorb
ficoms
jb
movsb
jle
lcall
push
scas
loope
inc
mov
push
pusha
or
bound
pop
movsl
mov
xor
and
out
shll
push
sub
pop
cmp
push
and
movsl
mov
cmp
cs
push
out
stos
pop
iret
pop
sub
into
sbb
stc
pop
mov
push
jle
lahf
ja
mov
pusha
in
mov
lds
popf
or
push
cmpsl
notb
cmp
movsb
push
sub
pop
out
mov
jne
mov
push
loope
xchg
add
xchg
lcall
xor
inc
cmp
sbb
in
xchg
sub
stos
add
dec
cmp
xor
ret
leave
sarb
and
mov
push
sbb
out
push
cmp
pop
mov
mov
cmp
or
push
jecxz
iret
cmp
outsb
pop
sbbl
fs
and
ret
lret
pop
aaa
xchg
cs
jnp
imull
dec
lock
test
int3
enter
jge
jl
xor
inc
movsl
lock
sbb
or
mov
test
mov
pop
sbb
stos
sub
outsb
cmp
lret
loope
adc
cs
inc
fsubr
inc
sub
push
shlb
or
sbb
xor
cld
pop
dec
inc
cmc
ret
leave
pusha
and
paddq
mov
incl
jbe
cwtl
push
loopne
cmc
xor
lcall
pop
fucomi
ja
inc
hlt
inc
xor
ljmp
orl
add
imul
insl
fildll
out
adc
jns
aad
dec
xchg
ds
xchg
nop
imul
and
lcall
cmp
sub
lret
aad
lock
adcl
cmpsb
dec
pop
push
lret
daa
repnz
loopne
mov
je
dec
scas
loopne
lcall
nop
roll
int
push
mov
inc
pushl
cmp
sub
in
cmpb
dec
stos
xor
dec
mov
jae
stos
lret
or
push
pop
inc
mov
cld
sbb
mov
data16
jns
cmpsb
insb
in
xchg
xchg
jp
cmpsb
mov
icebp
mov
loope
push
fisubrs
int3
call
push
inc
fldenv
bound
mov
jns
mov
add
mov
jne
movd
pop
test
into
lret
cld
cwtl
jl
repz
lods
test
pusha
jge
xchg
cmp
dec
mov
orb
fidivl
jmp
int3
ljmp
pop
repz
and
repz
enter
push
fwait
int
pop
clc
mov
lods
push
add
in
cs
sub
filds
jb
pop
jecxz
cmp
scas
xchg
jbe
push
add
popa
cwtl
sbb
outsb
leave
xchg
movsl
push
fisttps
jnp
mov
mov
les
inc
test
adc
cmp
sub
push
shlb
sti
inc
rcrb
addl
sbb
xor
insb
in
and
mov
sub
cltd
rcll
jle
push
mov
push
lods
push
fstpt
rclb
push
pop
jno
sub
das
call
xor
sub
mov
bound
xadd
ret
add
pop
add
push
cmpsb
mov
shll
je
js
pop
push
imul
sbb
nop
mov
xchg
dec
mov
push
sbb
sub
pop
inc
js
daa
ret
shlb
movsb
fwait
subb
sti
mull
mov
rcrl
push
mov
dec
sbb
or
enter
mov
pop
mov
xchg
andb
pop
fists
dec
jmp
jns
mov
push
cli
jae
cmpsl
es
pop
add
movsb
push
das
ftst
dec
push
mov
fdivr
notb
mov
enter
xor
add
push
xchg
mov
xchg
ja
dec
push
mov
pop
ja
sbb
jnp
andb
shrb
and
test
out
inc
fidivrs
push
bound
mov
mov
arpl
sbb
addb
inc
xchg
addr16
jl
mov
xorb
adc
mov
je
mov
int
mov
rcrb
dec
test
aam
ss
jne
push
jbe
cmp
sub
jecxz
adc
mov
xchg
mov
mov
mov
js
cmp
gs
fstpl
popa
or
cmp
xchg
dec
inc
popf
jbe
aaa
outsl
out
out
loopne
sub
ja
mov
xchg
test
adc
jns
loope
stos
xorl
adc
scas
aas
lods
add
aam
test
arpl
mov
bound
pop
jno
or
repz
aad
lcall
jb
lahf
lret
pop
inc
adc
cmpsb
sub
jl
hlt
insl
popf
notb
cli
cmpsl
sub
pop
push
outsl
inc
add
push
cmp
loopne
pop
xchg
cmp
sub
xchg
and
enter
imul
sub
movsl
insb
push
popa
faddl
js
push
dec
cmp
scas
in
arpl
lret
roll
loope
fdivs
out
add
int3
xor
leave
out
stos
jg
stos
pop
xlat
leave
xchg
dec
adc
inc
pop
mov
inc
jge
in
mov
lret
jmp
add
xor
xchg
push
repnz
sub
rclb
fistps
ja
decb
adc
gs
mov
jmp
xchg
lcall
dec
push
sbb
xchg
aam
cmp
lahf
push
mov
out
lret
sbbl
mov
lods
sbbb
push
push
inc
pop
rol
enter
adc
sub
mov
dec
jne
js
xchg
push
aaa
xchg
xchg
mov
or
cmp
cwtl
or
aad
pcmpeqb
ss
subb
inc
inc
xor
fmul
test
enter
lea
ret
arpl
jbe
lret
das
add
xchg
repz
inc
movl
mov
lods
mov
rcrl
cmp
push
dec
lea
adc
push
xor
cs
sbb
xor
sar
sbb
aaa
pop
mov
loopne
je
mull
jbe
sti
into
dec
mov
xchg
test
pop
popa
cmp
sbb
clc
lret
psraw
hlt
das
adc
roll
xchg
imul
mov
pop
scas
mov
mov
rol
outsl
jle
cmp
add
cltd
int
dec
or
pop
insb
das
std
jae
rcrl
and
fistpl
jae
push
out
xor
divb
xchg
cmp
sbb
insl
js
adc
pop
ja
pop
sub
cmp
iret
mov
sbb
cs
inc
movsb
loopne
mov
inc
dec
aad
jge
in
lret
loop
fmuls
das
jne
pop
mov
push
push
loop
inc
lahf
push
mov
pop
scas
dec
out
fldt
or
sub
sbb
cltd
mov
mov
inc
and
pop
loop
and
loop
movsb
fcoml
popa
cmp
pop
jmp
shrb
sub
sbb
rcrb
or
pop
mov
and
sub
imul
mov
les
ret
js
nop
aas
aaa
movb
dec
fwait
xchg
pop
xchg
push
pushf
pop
aad
and
fdivrp
mov
xor
mov
jecxz
inc
lahf
ljmp
push
mov
adc
fdivl
icebp
in
das
xor
outsl
inc
inc
shrb
cs
push
iret
call
mov
sbb
xor
push
lahf
xchg
xchg
jmp
testl
mov
xchg
jb
or
inc
loope
pop
popa
and
sub
add
push
movsb
repz
daa
mov
cli
sub
stos
in
xor
jae
xchg
mov
pop
xchg
pop
mov
dec
sub
jg
psubq
js
jae
gs
je
xchg
fdivr
mov
cmp
mov
outsb
clc
inc
pop
adc
sbb
jae
push
pop
imull
adcl
or
cmp
movsl
rcrb
pop
sbb
pop
pop
cltd
push
into
imul
fildl
test
or
xchg
add
es
mov
scas
xchg
pop
sahf
mov
das
push
sbb
test
mov
in
cmp
xorb
nop
xchg
mov
pop
mov
add
xor
dec
negb
into
test
push
or
add
inc
mov
imul
aas
das
mov
movsb
ret
into
idivb
subl
jnp
mov
cmp
sbb
into
int3
cmp
xor
test
and
adc
and
pop
dec
stos
sub
jge
lcall
pop
out
sub
enter
popl
scas
add
sub
in
addr16
jle
jecxz
call
push
mov
pop
fcmovnb
sbb
outsb
add
addr16
scas
mov
add
addr16
xor
jmp
es
pop
pop
sbb
rcr
pusha
ss
ja
mov
adc
jmp
mov
mov
mov
jge
sbb
mov
dec
jns
inc
dec
scas
pop
popa
mov
stos
imul
mov
pusha
outsb
xchg
or
arpl
push
stos
sahf
iret
mov
rcrl
leave
cmpsl
sub
mov
jmp
push
scas
mov
in
mov
loop
je
xchg
imul
lahf
xchg
cmp
call
jbe
cli
popf
jno
aaa
push
outsb
add
and
mov
lds
lret
ss
std
es
js
das
or
insb
outsb
out
outsl
xchg
mov
jae
cmp
clc
cmp
dec
flds
mov
add
jge
pop
out
sti
add
or
xor
stc
mov
js
or
xor
scas
bound
les
test
dec
aad
xor
pusha
sbb
mov
scas
sahf
push
xchg
lods
jb
jp
cmp
xchg
movsb
repnz
into
mov
inc
mov
jbe
scas
cmp
dec
imul
inc
lret
mov
sub
sbb
cmp
dec
lods
movsl
loop
pushf
leave
jae
cmc
or
pop
sarb
inc
jbe
dec
int3
dec
out
fiadds
cs
cmpsl
or
inc
lcall
jnp
rcr
inc
xor
mov
out
jge
dec
xor
xchg
adc
mov
inc
scas
cmpsl
mov
shlb
xor
lock
push
test
testl
ficompl
mov
imul
out
and
push
aaa
push
cmpsl
sub
fldl
cmp
or
dec
jbe
fs
sub
imul
jge
pop
pop
inc
jbe
pop
mov
dec
jbe
jp
shl
hlt
jp
imul
fcom
mov
and
fldt
call
xchg
adc
mov
movsl
loop
leave
pushf
je
inc
mov
push
lcall
mov
adc
shlb
xchg
inc
fidivrs
push
hlt
sbb
test
jno
jge
xchg
fisttps
int3
dec
sbb
aaa
lahf
pop
hlt
mov
pushf
pop
gs
mov
loope
sub
movsl
ds
test
jmp
aas
in
adc
fcoml
sti
mov
jb
jge
and
add
and
bound
dec
pop
or
fisttps
adc
xor
xor
icebp
sti
inc
adc
inc
adc
mov
or
aas
cs
cmpsb
push
movsl
cmp
xor
mov
cs
cmc
shll
vmfunc
push
push
scas
fsubrp
ljmp
xchg
shll
fsubl
push
in
imul
and
sub
fidivs
fs
pop
cltd
xchg
mov
mov
dec
mov
fldenv
xor
xchg
call
mov
fimull
jnp
mov
sbb
push
adc
pop
nop
xchg
movsb
xchg
cmc
fstpt
xlat
enter
out
adc
xor
cmpsl
jg
lock
push
es
mov
shl
mov
jge
xchg
jge
adc
in
fsubp
adc
xchg
push
lds
fisubrl
inc
or
enter
add
pop
cmp
iret
jmp
enter
xchg
out
and
push
xlat
or
ja
push
mov
shlb
adc
mov
sbb
adc
scas
cmpsb
or
std
outsb
xchg
popf
cli
mov
cwtl
push
jle
jmp
pop
mov
roll
cmp
ljmp
lcall
jae
cwtl
pcmpeqb
aam
add
cmp
dec
sti
mov
aaa
ss
inc
f2xm1
lock
cmp
adc
xchg
sub
repnz
mov
mov
out
push
and
pop
add
xchg
cmp
dec
pushf
mov
xchg
cmp
loope
mov
imul
mov
and
jecxz
filds
das
popa
cs
call
or
orb
enter
js
inc
stos
dec
loope
jno
ss
dec
out
cltd
mov
shrb
mov
jge
divb
sbb
movsl
push
rcrb
inc
dec
aaa
pop
pop
xorb
in
gs
popf
inc
sub
pop
push
cmpsl
pop
push
xchg
sahf
cld
push
sub
leave
lea
push
data16
dec
ret
insl
inc
sub
pop
sahf
ret
inc
hlt
xor
push
ss
xor
dec
sti
rcrl
mov
repz
xor
push
shlb
push
gs
adc
mov
pop
jg
add
sub
test
xchg
inc
mov
out
inc
scas
pop
mov
mov
scas
mov
sub
xor
push
aaa
cmp
adc
bnd
and
jmp
test
mov
psubusw
int
icebp
cmp
insb
fsubrs
es
mov
ljmp
cli
inc
cmp
jne
fnstcw
push
mov
xor
push
xor
push
roll
test
rcl
rcr
jle
xorb
mov
addr16
in
pop
aad
sbbb
outsb
insl
inc
pop
add
imul
out
mov
xchg
es
pop
fwait
mov
xrelease
mov
mov
xor
pushf
or
ror
dec
sub
jbe
dec
jmp
xchg
ds
and
in
mov
adc
xchg
xchg
or
test
popl
mov
adc
inc
inc
pop
imul
xor
pop
pushf
movsl
cmp
daa
xchg
fs
stc
test
mov
mov
sub
sbb
out
pop
xor
dec
nop
cwtl
inc
cltd
test
xchg
frstor
aam
dec
xor
adc
pop
ja
aas
push
daa
sub
xchg
jg
scas
arpl
cmp
addb
jb
pop
push
jg
adc
sbbl
xchg
out
cmp
jl
into
pop
aaa
mov
jo
jbe
cmp
mov
xchg
lods
adc
push
cmpsb
sub
lahf
imul
xchg
or
sbb
adc
adc
lcall
sbb
mov
dec
fistpll
mov
pop
cltd
and
push
add
xor
call
xchg
out
cltd
xor
fcomp
add
rcl
loope
jecxz
bound
in
jmp
popa
mull
lret
fwait
pop
in
call
es
lods
lahf
jno
cli
mov
add
cmp
dec
ljmp
stos
int3
inc
inc
inc
inc
mov
daa
int3
movsl
out
dec
mov
cmpsl
mov
iret
pop
adc
aam
sub
lahf
jmp
cmp
lods
sbb
nop
push
mov
inc
cmp
cld
scas
dec
std
pop
lock
or
add
inc
xor
out
mov
cmp
scas
imull
mov
xchg
je
push
adc
jmp
repnz
inc
or
push
aaa
mov
sahf
ret
iret
mov
insb
repnz
pop
movq
jo
nop
mov
cmp
push
or
push
adc
sub
call
adcl
mov
push
icebp
sub
jp
pop
push
arpl
push
out
movb
dec
sar
sbb
leave
imul
cld
pop
adc
in
mov
sub
xor
mov
sub
xchg
mov
int
push
sub
dec
sub
or
jp
scas
leave
pusha
int3
stos
xor
or
mov
cs
mov
out
xor
out
sti
inc
and
out
ret
mov
movsb
out
in
repnz
pop
xchg
mov
aad
xor
cwtl
xchg
dec
ss
es
pushf
sbb
loope
pop
inc
fmull
loopne
in
clc
testb
ljmp
icebp
inc
fsubrs
stos
and
mov
push
ds
mov
cmp
lcall
mov
cmp
sahf
insl
dec
mov
jb
xor
dec
iret
lcall
jmp
das
cmp
icebp
lahf
xchg
xchg
iret
mov
stc
add
mov
mov
pop
aad
inc
jl
outsb
popa
rorl
mov
and
inc
sbb
cmpsl
movsb
or
pop
movsl
push
push
pop
in
mov
ljmp
mov
and
out
push
or
jl
push
fidivrl
outsl
mov
cs
mov
cmp
jae
jmp
cmc
lcall
int
mov
lret
out
sbb
jo
movsl
or
mov
or
pop
mov
push
andl
sbb
xchg
inc
ljmp
xchg
scas
jno
in
jno
sbb
fcmovnu
stc
inc
mov
fnstcw
mov
jno
lods
and
aad
mov
push
lret
bound
rcr
lret
icebp
out
loop
cwtl
shlb
push
das
out
adc
sbb
xor
cmpsl
std
jbe
mov
cmpsl
or
sti
scas
shr
push
scas
test
or
das
out
movsb
das
push
inc
cmp
insl
sbb
lds
add
mov
adc
test
pop
leave
adc
inc
push
mov
repnz
adc
jecxz
mov
cwtl
push
adc
jl
push
into
dec
out
mov
push
sbb
pop
dec
jns
push
ss
movsb
push
dec
std
mov
inc
notb
call
sub
out
das
or
rorl
std
test
in
shll
mov
mov
das
pop
cmp
mov
xor
aas
ret
and
stos
daa
test
inc
mov
pop
adc
xchg
xor
and
fldenv
mov
push
sub
hlt
testl
fwait
stos
jb
xor
enter
adc
lock
ss
ficoml
stc
lods
insb
les
insl
sub
lods
mov
xlat
inc
or
ljmp
int
mov
std
ss
nop
mov
fxch
or
mov
mov
mov
scas
sub
xor
adc
mov
lock
sub
in
in
mov
inc
push
aas
jns
mov
fs
mov
in
push
mov
jl
push
stos
ljmp
nop
movb
cmpsb
or
sti
iret
or
push
loop
adc
mov
arpl
insb
fdivr
adc
bound
cltd
ds
lock
hlt
dec
add
cld
into
int3
adcb
xchg
xchg
inc
dec
into
mov
sub
mov
mov
fiaddl
xchg
test
arpl
cli
sub
pop
xor
adc
gs
sti
add
push
mov
jmp
dec
cmp
xor
test
add
mov
mov
mov
cld
fbld
out
dec
out
popa
repnz
mov
fistps
xor
inc
mov
in
mov
ds
outsl
and
jbe
cmp
add
xchg
push
inc
sub
clc
and
and
popf
xchg
jne
add
ret
jecxz
test
movsl
jbe
insb
sbb
push
dec
aaa
insb
test
imul
out
fs
popa
add
mov
jecxz
scas
adc
or
or
pusha
addr16
sub
jb
jno
sbb
cmc
lock
and
incb
push
mov
xlat
fnstsw
divl
ror
sbb
sti
cld
pop
pusha
lods
lret
xorl
rcl
jnp
pop
aam
in
push
lock
xlat
jbe
cmc
mov
pop
stos
and
test
adc
pop
lods
daa
dec
das
mov
pop
xor
out
dec
mov
cmp
in
mov
movaps
lods
sahf
ja
mov
xchg
stc
jle
or
push
mov
mov
lock
leave
sub
ret
rcrb
mov
aaa
dec
jge
mov
daa
nop
pop
lret
and
pop
xchg
pop
sbb
cli
nop
xor
outsl
or
inc
pop
and
ud2
loopne
out
pop
movsl
inc
es
movsb
dec
push
movsl
fiaddl
cmp
sub
lgs
xchg
loope
mov
hlt
mov
mov
jo
popf
push
lret
mov
pop
xchg
cli
movsl
sub
enter
and
lret
cltd
dec
mov
shll
pop
test
icebp
fldl
or
mov
imul
add
dec
push
cmpsb
mov
aas
jecxz
lds
aam
addb
or
xchg
sbb
xchg
rorb
aad
jecxz
mov
insb
mov
mov
sub
dec
and
je
push
fs
jbe
mov
out
xor
in
and
leave
repnz
pop
mov
jno
out
inc
std
sub
jecxz
adc
sub
shlb
mov
sbb
movq
ret
xor
lea
popa
jle
fadds
jecxz
xchg
pop
sbb
adc
pop
pop
pop
push
aad
sub
mov
shll
adc
push
mov
pop
inc
rolb
xor
inc
jge
out
andb
jp
fisttpl
lret
repz
dec
pop
ficompl
push
adc
jnp
xor
or
jo
cmp
cmpsl
pusha
xor
sbb
imul
jge
daa
push
std
lds
lds
outsb
lret
xchg
mov
inc
es
das
les
out
loop
pop
lea
jo
mov
enter
push
pushf
inc
cmp
or
mov
add
or
std
adc
adc
sbb
sbb
cmpsl
adc
sbb
mov
adc
in
inc
lock
imul
mov
sub
outsl
mov
mov
cwtl
pop
sub
sub
mov
sbb
xchg
ja
xor
jmp
or
jne
mov
jl
flds
push
jne
leave
dec
int
or
loope
jp
push
mov
sbb
je
loop
fsubrs
mov
mov
sbb
lods
push
insb
mov
push
cmpsb
pop
mov
push
test
pop
cmp
repz
daa
repnz
cmc
loope
andb
stos
pop
sbb
mov
shrb
jg
pop
jo
push
xor
inc
xchg
pop
push
leave
jmp
es
dec
jl
leave
ds
inc
fsubl
mov
bound
cmp
in
je
pop
notb
aad
xchg
inc
lret
test
cs
jge
in
repnz
push
std
shrb
xchg
jmp
idivl
jl
decb
jp
sub
sbb
cmp
clc
lahf
dec
stc
call
or
mov
les
aam
jnp
mov
cld
sbb
mov
jmp
stos
mov
pop
movsb
lcall
or
cld
stc
and
into
fldt
mov
pop
xlat
in
pop
rorl
fcomp
pop
push
add
xorl
out
and
mov
pop
push
fdivs
mov
in
test
roll
xchg
lea
jge
int3
pop
aam
inc
fs
xlat
add
pop
std
cmp
mov
xchg
inc
roll
mov
lods
popf
insl
cmp
jl
adc
mov
add
cmp
add
cmp
pop
mov
pop
fwait
aas
lods
div
inc
jb
push
push
fidivl
insb
push
ret
pop
addr16
es
lods
jns
jnp
cli
jp
jae
mov
loope
je
sti
std
sub
jne
js
add
in
test
sub
cltd
xor
aas
iret
cli
jle
out
das
dec
push
xchg
mov
mov
shl
xchg
lcall
and
shrb
sbb
ret
mov
aad
and
lods
fldcw
pushf
push
or
lahf
popa
cmp
icebp
shrl
ret
aaa
mov
mov
add
std
scas
daa
in
mov
dec
mov
adc
andl
or
mov
pusha
sti
leave
pop
aas
ja
clc
push
int3
push
imul
mov
xor
jno
xor
inc
mov
lods
aad
pop
mov
jge
imul
cmp
dec
and
cwtl
insl
dec
ja
iret
imul
mov
lods
jp
jge
xchg
stos
nop
inc
dec
xchg
push
dec
sets
in
shlb
dec
add
test
push
cmpsb
jo
arpl
int
or
cmpsl
cli
ds
xchg
stos
jp
add
lret
int
out
add
pop
nop
sub
inc
push
mov
cwtl
and
js
mov
mov
fldcw
jbe
pop
mov
mov
add
int3
gs
pusha
mov
or
mov
jb
daa
in
rcrl
ret
adc
push
ret
mov
loopne
repz
pop
aad
jmp
cmp
test
orb
insl
lahf
pop
sbb
jmp
sub
xchg
pushf
dec
jg
sub
incl
cs
mov
ror
in
loope
or
rcll
jae
mov
jge
push
aad
fistpll
cmp
test
imul
loopne
mov
pop
div
mov
fs
ffree
pop
dec
subl
sub
lret
scas
or
scas
push
or
sub
fimull
jp
fisttps
push
push
jo
pop
faddl
mov
sbb
add
shl
lods
dec
push
and
and
shl
cltd
and
fisubrs
mov
lret
insb
fidivl
fdiv
push
dec
add
inc
bound
dec
insb
or
xor
insl
arpl
jno
out
adc
mov
fistl
dec
sbb
push
cmpsb
inc
insb
add
out
arpl
arpl
andl
rclb
sti
jae
clc
mov
jbe
pop
mov
out
sbb
shl
add
mov
push
mov
fidivrs
jge
xlat
mov
xor
mov
cmp
mov
fiaddl
dec
push
mov
xor
decb
pushf
mov
mov
add
out
enter
js
rcll
xchg
pop
cmp
mov
bound
movsb
push
out
fsubrs
test
je
xchg
push
lock
sahf
mov
outsb
xchg
xlat
in
or
jp
add
cs
fisubl
insl
cwtl
jmp
arpl
pop
les
test
test
iret
daa
sti
cmp
aad
loope
aam
fcompl
xchg
xchg
cli
mov
mov
clc
daa
cmp
cmpsl
sub
cmp
adc
popa
and
call
in
les
mov
inc
notl
jnp
fmuls
and
dec
daa
lods
js
mov
in
dec
pop
loope
xor
nop
pop
fdivrs
gs
pop
divb
iret
xlat
insb
js
mov
sub
pop
outsl
jbe
add
push
sub
add
mov
push
fdivp
aaa
dec
rolb
push
sub
cld
sbb
sub
cld
leave
add
outsb
sub
sbb
jecxz
push
fcos
aad
shrl
sub
sub
aas
inc
mov
jnp
cmp
in
mov
out
pop
and
call
fdivr
push
push
xlat
pop
mov
cli
arpl
xor
add
push
shll
int
call
jns
sub
and
imul
ret
xchg
jae
and
sub
call
and
dec
mov
ficoms
add
push
rorb
sub
mov
aas
mov
icebp
test
scas
outsl
ja
or
rolb
aam
fstl
ljmp
inc
bswap
pushf
sar
movsl
and
push
in
or
mov
jg
add
sub
mov
mov
pop
mov
add
test
sahf
xlat
dec
loope
pushl
sahf
sbb
inc
data16
pop
daa
data16
dec
cwtl
jecxz
icebp
dec
inc
popf
jne
xor
jno
adc
pushf
xchg
es
push
jp
mov
in
in
or
and
aaa
adc
ret
jge
adc
es
ds
ret
ret
popf
imul
insb
pop
les
inc
dec
pop
repnz
jo
xchg
sbb
call
cmp
or
cmpsl
in
lahf
lret
inc
pop
es
int
jo
je
jg
lock
cmp
out
mov
jnp
fwait
aaa
icebp
cmpb
out
sbbl
fisttps
mov
insl
outsb
rclb
iret
mov
xor
psubusb
unpcklps
in
mov
das
icebp
add
iret
pusha
aad
inc
mov
lahf
mov
xor
ret
imul
in
fstl
nop
add
adcb
and
popf
mov
repnz
je
sbb
mov
jl
inc
jecxz
ljmp
fisubrl
in
insb
sub
push
data16
xchg
lock
outsl
int
mov
mov
jmp
inc
adc
gs
mov
insl
dec
pop
mov
cmpsl
dec
cmp
jae
dec
ret
jae
mov
xchg
and
mov
mov
or
aas
inc
leave
loopne
out
lds
clc
inc
insl
sub
add
imul
insb
lods
push
xor
fldl
inc
pop
add
arpl
movl
jbe
mov
out
movsb
xchg
push
aam
subb
sti
mov
mov
add
out
repnz
inc
add
mov
test
outsl
and
pop
pushf
ds
pop
pop
xchg
jg
mov
sahf
lcall
int
outsb
pusha
jcxz
aaa
sti
aaa
outsb
inc
or
xchg
add
push
fs
xchg
cmp
dec
sub
sbb
xor
sarl
dec
bound
popa
push
fnstenv
mov
test
popf
leave
push
pop
adc
sti
mov
rolb
cld
scas
sub
cmp
mov
sub
ret
sbb
inc
add
cltd
dec
push
fs
rorl
je
sub
pop
xchg
xor
rolb
inc
adc
ds
push
in
loope
and
popf
sbb
fwait
inc
pop
iret
adc
xor
dec
repnz
imul
lret
int
push
xchg
or
cmpsl
sbb
insl
add
mov
sbb
in
or
inc
pop
andnps
orb
outsl
sti
icebp
mov
sbb
sbb
inc
or
lcall
dec
xor
mov
jns,pt
cmp
mov
hlt
loop
pop
ret
fisubs
adc
push
inc
add
xorl
ret
pop
sub
and
enter
mov
jle
push
fwait
out
push
push
gs
xchg
cs
dec
iret
jbe
or
in
push
sbb
xchg
jnp
insl
inc
cmp
pop
xchg
addr16
hlt
add
or
xchg
mov
inc
out
iret
out
aad
mov
ljmp
cmp
dec
js
pop
inc
dec
gs
jge
mov
cmp
xorb
push
xor
testl
pusha
out
inc
pop
aas
inc
jo
into
lret
mov
cmp
fidivs
dec
dec
mov
dec
sbb
test
jl
ret
das
aas
xor
icebp
outsb
movsb
inc
adc
hlt
mov
xor
js
stos
lds
movsl
imul
and
in
inc
pop
cmpsb
pushf
imul
cmp
cmc
inc
jns
push
pop
arpl
outsl
test
push
jo
mov
jnp
mov
movsl
popa
lock
xor
push
inc
cmpsl
fwait
aam
mov
xor
sub
shr
out
sar
cltd
sahf
pushf
mov
stos
xchg
addb
xorb
std
xchg
or
sbb
or
pop
in
lock
daa
sub
imul
adc
sub
jp
inc
shrl
fstps
sub
imulb
xchg
lods
push
push
test
ds
mov
cmp
push
out
push
mov
mov
add
aad
push
mov
xor
mov
js
fldt
push
cmp
sbb
je
aaa
mov
adc
mov
xchg
jge
sahf
insl
xor
rcl
sub
cmp
pop
and
outsb
stos
ret
mov
mov
cmp
jb
push
fdivl
out
fistpl
movsl
lret
cmpl
in
and
xchg
cmp
mov
sbb
xor
pop
and
cs
insb
jb
push
stc
ret
inc
cmp
push
popf
cmp
mov
mov
shlb
mov
sbb
and
xchg
push
mov
daa
cmp
cmp
fldl
adc
cmp
je
xchg
cmp
push
pop
xchg
daa
cmp
push
pop
je
mov
arpl
inc
sub
dec
and
hlt
sub
dec
mov
pop
jmp
jmp
pop
push
scas
loop
cltd
adc
inc
jbe
leave
pusha
and
cmpsb
mov
dec
pop
xor
and
sbb
push
mov
cmp
adc
lods
outsb
jnp
fcomi
mov
sbb
aas
push
pushf
fnstsw
in
fwait
pop
dec
sbb
mov
sbb
lret
call
icebp
insb
inc
push
sbbl
jecxz
cwtl
cmc
and
int
inc
sbb
fwait
xchg
popa
imul
sbb
movsl
fidivrl
xor
fprem
inc
jg
push
dec
imul
xchg
sbb
outsl
and
test
pusha
popf
push
lret
mov
adc
xlat
int
xchg
in
inc
outsb
fsub
ja
adcl
ss
lahf
or
je
inc
xchg
inc
dec
mov
test
jg
dec
loopne
loop
push
push
mov
sub
cmpsl
mov
pop
mov
nop
push
dec
bound
jl
push
jns
out
aaa
dec
aaa
xchg
jge
sub
sbb
sti
push
sub
ret
movsb
ja
mov
daa
sbb
icebp
mov
or
icebp
or
cmc
outsb
movsb
mov
adc
insl
jg
in
cmp
clc
mov
pop
mov
xor
aas
inc
sbb
xchg
jae
js
sub
mov
push
sub
jg
add
ficoms
inc
jne
xor
jo
out
adc
inc
mov
xchg
into
push
pop
iret
xchg
sti
popf
lea
adcb
xchg
push
and
cmp
or
adc
loope
lods
mov
mov
push
pop
xchg
les
in
push
jl
popf
imul
aam
push
psubw
mov
mov
dec
stc
dec
jbe
mov
adc
push
rcrl
and
and
loop
mov
jge
rclb
mov
mov
inc
test
dec
xor
cmpsb
in
mov
fisttpl
inc
sbb
ljmp
shr
pop
insl
fmull
mov
cld
stos
int
mov
aas
imul
loop
or
sub
repz
int
imul
or
xchg
fdivl
or
mov
out
pusha
mov
sar
out
popf
popa
xor
mov
cmp
dec
mov
jmp
mov
insl
jmp
imul
mov
xor
lods
into
idiv
inc
pop
repnz
inc
and
adc
imul
inc
lds
pop
test
mov
and
rol
xor
mov
leave
push
sarb
adc
fiaddl
sbb
addl
clc
inc
fwait
arpl
mov
jecxz
xchg
dec
pop
mov
jp
aam
out
sub
pop
jl
cli
mov
fdivr
add
jno
inc
ljmp
aam
pop
xchg
lahf
xchg
das
je
insb
adc
cmp
addl
out
icebp
jg
sbb
pusha
push
lahf
xchg
fmul
pop
mov
adc
inc
cmp
out
push
xchg
ret
pop
jge
sbb
lcall
adc
xor
cmpl
and
jg
xor
pushf
jne
sub
nop
test
mov
push
ds
mov
loop
sbb
lcall
pop
or
xchg
dec
test
or
push
inc
pushf
adc
into
push
outsl
mov
adc
ds
out
sub
lret
jae
push
adc
je
push
push
sbb
xchg
fsubrs
outsb
jae
xchg
arpl
add
cmpsb
lcall
es
xlat
inc
xor
jg
loope
sub
in
pop
lock
jns
mov
arpl
mov
sahf
enter
cltd
jb
mov
mov
xchg
sbb
ret
test
test
sub
xchg
jge
stos
mov
jge
arpl
lods
cmc
add
daa
pusha
mov
call
div
popf
sbb
sbb
shl
sub
shl
lahf
xor
out
out
and
mov
out
data16
inc
push
fstl
xor
fdivl
fdivp
cld
pop
pop
adc
mov
mov
dec
mov
and
das
cmc
xor
xchg
add
mov
push
loop
and
rolb
pop
mov
xorl
stc
mov
push
mov
jo
mov
aaa
mov
stos
pusha
arpl
push
lret
leave
lret
repnz
hlt
adc
aad
iret
push
push
add
add
inc
cmp
loope
push
int3
inc
insb
mov
stos
pop
mov
xchg
pop
aaa
and
mov
insb
push
mov
pop
cli
dec
js
xchg
jmp
cmp
xor
pop
xlat
das
lock
out
scas
mov
stc
gs
adc
testb
jle
cmpsb
imul
inc
scas
cmp
lcall
add
and
nop
popa
popf
inc
mov
fsub
adc
push
mov
mov
mov
mov
outsb
into
cli
pop
push
cltd
popa
xorb
mov
insb
cltd
out
add
cmp
sbb
outsb
mov
pmaddwd
inc
shlb
add
mov
push
aaa
inc
inc
aad
popf
fiadds
dec
pop
cmpsl
es
jno
outsl
adcl
mov
dec
xchg
stos
ja
push
mov
pop
fildl
cmp
jmp
jmp
pop
cli
jns
or
mov
cmp
int3
repnz
in
mov
mov
push
mov
leave
jns
adc
cmc
pusha
push
pop
and
iret
in
sarb
mov
mov
flds
or
dec
xor
imull
xchg
gs
xchg
jg
sub
adc
cwtl
jp
sub
xor
iret
sub
lahf
sbb
add
push
or
ret
pop
addr16
ljmp
lahf
xchg
cld
test
cmp
sbb
cmp
repnz
pop
roll
into
shr
mov
push
pusha
pop
scas
test
stos
cmpsl
outsb
xor
sbb
cmpsl
fmul
jp
jl
push
inc
cmp
mov
inc
leave
sbb
imul
jae
jge,pt
push
xor
shll
mov
mov
push
cmp
jecxz
xor
sbb
sahf
popf
or
push
add
stos
cs
orb
pop
ds
dec
jp
jg
decb
mov
cmp
testb
mov
and
mov
push
mov
popf
jns
mov
popf
int3
loopne
stos
and
in
cmp
jp
inc
imulb
jp
push
add
dec
or
inc
mov
cmp
js
xor
fnstcw
ret
sarb
pop
lcall
mov
scas
insb
ss
adc
insb
cmp
fwait
call
scas
lock
movsb
mov
out
and
popa
pushl
mov
nop
scas
je
jne
xchg
add
mov
orb
sub
add
jg
xchg
push
lret
imul
in
nop
and
les
adc
jae
sub
jp
mov
outsb
mov
xchg
jne
shrl
hlt
dec
arpl
lret
add
call
xlat
aaa
inc
pop
mov
adc
jnp
in
sub
mov
sub
xor
dec
hlt
pop
jbe
ss
lret
inc
dec
fdivs
sub
fmul
mov
data16
js
outsl
les
xor
cld
mov
aaa
rclb
inc
xor
ret
stos
jbe
lods
push
test
mov
inc
add
int3
inc
pop
lods
or
xor
imul
cmp
out
in
insb
ja
add
insl
cmp
sti
hlt
popa
dec
loopne
push
dec
movsb
loop
xchg
push
mov
mov
loope
adc
pop
push
dec
jge
cmp
mov
mov
inc
cmc
or
sbb
ret
stos
cmp
icebp
leave
out
jno
pop
fstpt
xor
adc
into
mov
inc
jne
jmp
outsl
test
mov
sbb
sub
pusha
inc
adc
fldl
scas
dec
out
enter
out
and
mov
and
or
push
cmp
jecxz
and
shr
push
fidivrs
mov
inc
out
jo
int3
cli
mov
hlt
mov
cmp
jge
mov
push
data16
inc
or
pop
fidivrs
mov
adc
adc
sbb
cli
aad
rclb
pop
dec
push
adc
fidivs
xor
inc
push
sub
jl
je
loope
adcl
inc
inc
in
popf
pop
cmp
sbb
jns
inc
xorl
stc
add
insl
jle
push
shr
adc
movsb
scas
fcmove
adc
pusha
jne
dec
sub
iret
jmp
mov
stc
and
ss
sbb
push
mov
mov
es
inc
aad
sbb
mov
sti
insb
in
pop
lret
sub
stc
in
shll
ret
ret
aas
sub
xchg
scas
cmpsl
jbe
mov
shrb
dec
sbb
cmpsb
dec
pop
xor
or
cmc
xor
xchg
sub
push
mov
rorb
pushf
push
xor
stc
pop
mov
incb
into
mov
mov
mull
cmp
mov
and
sub
loopne
test
imul
cmpsb
loop
push
xchg
jns
inc
shll
dec
out
mov
repz
xchg
inc
pop
xorl
pcmpeqw
divl
mov
push
jno
int3
outsl
cmp
ss
dec
dec
jne
adc
cld
push
es
scas
gs
imul
mov
cli
adc
push
xor
pop
pop
xor
pop
mov
adc
pop
pop
mov
int
or
jne
lods
jmp
mov
pop
aam
xchg
in
inc
push
cli
sbb
inc
mov
push
mov
orb
adcl
call
jecxz
dec
or
cmp
js
sbb
jecxz
sub
add
mov
adc
pop
dec
push
cli
out
clc
jne
enter
jmp
push
fwait
sub
and
insl
pop
xor
push
out
jae
outsl
adc
jle
outsl
pop
mov
dec
daa
outsl
sbb
cmp
and
leave
inc
jg
jno
dec
pop
mov
imul
jnp
movsl
dec
stos
adc
je
dec
inc
pop
mov
sub
stc
sbb
stos
aaa
cmp
fisttpll
push
or
in
jb
cltd
jnp
jg
popl
dec
fldt
rcll
ja
add
mov
inc
shlb
adc
addb
enter
mov
shrl
mov
pop
fildl
and
jmp
lcall
adcb
push
add
sahf
imul
cmp
dec
lds
dec
lahf
ja
in
loope
inc
aam
pop
inc
fwait
push
dec
int
sarb
cmp
or
call
add
in
jne
insl
sub
int
out
mov
pop
aaa
andl
or
rorb
adc
test
jecxz
fwait
aas
in
jns
mov
aaa
fisubrl
lahf
js
and
mov
aad
xchg
adc
dec
jbe
push
lods
pop
jge
add
adc
stos
adc
imul
fisttps
insb
pop
loop
repz
cmp
iret
cwtl
icebp
mov
mov
pop
mov
push
mov
shrl
fimuls
shll
inc
lret
repnz
sub
test
sahf
sub
mov
or
das
add
dec
pushf
pop
aaa
popa
mov
bound
push
inc
decb
fstl
mov
jl
jbe
xor
out
xchg
aam
mov
dec
out
into
leave
fadd
js
mov
jl
xor
nop
clc
out
mov
fimull
jp
outsb
jg
dec
rcrb
or
mov
fdivp
js
sbb
and
xchg
insb
lahf
imul
mov
sub
nop
or
or
lcall
push
mov
cld
sarl
imul
mov
or
jno
or
mov
mov
pop
add
and
mov
les
repnz
into
lret
dec
fwait
jl
push
or
sub
je
fs
inc
aad
daa
xchg
jl
pop
cmp
push
xlat
scas
pop
push
ftst
cmpsl
dec
fistl
push
sbb
outsb
test
nop
xor
dec
push
mov
inc
cwtl
cmp
fiadds
or
push
cmpsb
outsb
push
movsb
addb
inc
cmpsb
and
dec
ret
sub
adc
clc
out
fsubrs
fdivrs
push
sbb
outsl
popf
sbb
subl
stos
pop
outsl
push
cmp
xchg
loop
mov
mov
mov
xor
icebp
xchg
fildll
shlb
sub
or
jge
stos
inc
enter
xor
pop
xor
or
add
add
add
push
fiaddl
add
add
adc
or
inc
aas
jge
movsb
fisttpl
nop
insl
mov
imul
loopne
stc
inc
push
or
xchg
imul
push
jmp
sti
pop
mov
xor
mov
sub
adc
mov
add
mov
sbb
mov
mov
or
xchg
cmp
mov
or
mulb
adc
inc
push
dec
inc
mov
inc
ljmp
es
sub
add
mov
fildl
mov
pop
pop
jno
jo
adc
leave
sbb
sbb
scas
add
jns
inc
inc
jbe
or
loopne
add
or
fstpl
push
jne
sub
mov
popa
sub
jmp
pop
shll
mov
sub
hlt
push
push
sbb
jl
jbe
popf
xchg
mov
ds
outsl
mov
jno
scas
sarb
loope
stos
xor
sub
mov
lret
notl
cltd
jae
push
xchg
cmp
mov
shl
jl
and
sub
dec
aas
jo
ljmp
pop
jge
push
add
out
in
fdivp
cmp
push
lods
imul
push
std
inc
nop
int3
mov
in
jmp
mov
cld
add
mov
mov
mov
push
mov
inc
shll
pop
loope
or
outsb
fisttps
pushl
ficoms
enter
insb
cmp
sbb
orl
loopne
aam
inc
sti
jns
mov
sahf
push
sbb
rorl
xchg
xlat
cmp
dec
frstor
jle
fs
hlt
into
cmpsb
dec
cltd
sarl
mov
push
cli
fnstsw
adc
pop
int
mov
sub
repnz
cltd
shlb
rcrl
dec
popf
cld
mov
or
insb
and
add
xchg
bound
movsl
mov
push
push
or
jo
xchg
test
xchg
mov
scas
aas
ficoml
stos
mov
jmp
or
jg
mov
pop
cmc
jg
mov
jl
loopne
jo
bound
lret
movsb
mov
mov
xchg
rolb
dec
jg
iret
inc
shll
jecxz
push
cmp
inc
inc
mov
dec
and
push
jno
xchg
incl
sub
call
ret
hlt
in
adc
nop
fmul
leave
mov
repnz
dec
jae
stc
cmp
xor
addl
cmp
inc
jae
fcoml
das
movsb
sub
fsub
sbb
mov
mov
scas
add
push
sbb
jge
sbb
cmp
js
popf
push
out
xor
xchg
call
scas
imul
flds
ret
jae
out
jae
push
testl
ss
xchg
mov
into
or
inc
mov
cld
push
and
sbb
dec
or
rcrb
push
xchg
lahf
mov
jge
repnz
aaa
or
aad
jmp
mov
iret
fidivs
subb
fstpl
cmpsb
jg
out
movsl
jl
call
les
mov
repnz
mov
or
mov
insb
mov
cwtl
add
push
mov
gs
mov
sbb
mov
jae
mov
aam
inc
js
and
xchg
ret
pop
mov
aam
imul
inc
inc
adc
bound
das
or
jge
push
dec
outsl
mov
push
mov
pop
shll
stc
xchg
sub
test
mov
subb
lds
mov
leave
jne
mov
sbb
cs
call
mov
cmp
xchg
lock
imulb
jne
shrl
add
adc
sub
loopne
ds
mov
mov
xor
sarb
mov
or
scas
or
sbb
and
sbb
xor
test
dec
push
mov
jmp
mov
or
jnp
lahf
dec
and
movsl
sbb
mov
sub
push
cmpsl
cmc
int3
stc
lahf
sub
subl
lods
in
mov
iret
ja
out
outsb
aaa
rcr
xchg
sbb
outsl
push
add
dec
cmp
mov
hlt
push
mov
test
push
popa
xor
shrl
in
mov
sub
or
add
sub
push
jno
add
add
add
add
add
add
add
mov
jns
nop
nop
nop
nop
pushf
push
nop
nop
in
push
pop
adc
add
add
pushf
aas
xlat
das
mov
aaa
xor
out
push
add
mov
in
mov
push
pop
and
fmuls
inc
mov
subl
xchg
and
fistl
dec
cwtl
mov
push
xor
mov
int
lahf
rsm
mov
mov
push
call
mov
sbb
lods
jne
or
push
movsl
pop
cmp
xchg
pop
lret
sbb
popa
mov
call
aas
jns
aad
dec
mov
push
dec
lods
cli
push
mov
arpl
jae
push
cmpl
mov
add
inc
insb
shll
sbb
rclb
xchg
cmpsb
and
mov
adc
rcll
push
cwtl
jmp
shll
loope
fstpt
mov
cmp
cmpsb
xor
push
sahf
mov
out
push
inc
dec
ljmp
inc
js
mov
out
fists
fsubr
data16
jp
jecxz
jge
and
lret
xchg
subb
jbe
sbbb
repz
call
frstor
push
in
xchg
popa
push
mov
jge
rorb
mov
xor
add
cs
ds
jae
mov
repz
subl
bound
xor
enter
xor
or
jmp
outsb
cmc
cmp
jmp
stos
mov
xchg
jp
dec
imul
xchg
xor
dec
imul
notl
add
jecxz
fsts
push
ja
mov
jns
jmp
push
in
push
xchg
pop
mov
stc
mov
or
cmp
mov
ret
ret
inc
dec
pop
or
test
leave
and
leave
addr16
dec
add
sub
jae
mov
xor
mov
into
sbb
repz
insl
iret
scas
jmp
mov
xchg
and
scas
push
stos
inc
enter
add
jns
es
mov
repnz
push
jge
mov
je
dec
cltd
insb
ss
and
rorb
bound
ss
mov
fisttpll
or
cmp
in
sbbb
ret
xor
fcomip
stos
std
push
mov
fwait
push
push
mov
mov
push
je
aaa
js
test
test
dec
mov
insb
into
sub
scas
jg
out
cmpsb
je
dec
ja
fadds
jl
inc
pop
fimuls
insb
xchg
push
aaa
shr
es
pop
arpl
add
add
shl
cmpsl
or
jle
fmuls
push
xchg
jo
inc
cmp
xor
dec
cmpb
and
aaa
cwtl
dec
mov
pop
pop
icebp
lock
push
mov
sub
clc
jae
mov
xor
xor
mov
stos
mov
int3
dec
inc
cmp
inc
adc
pop
adcb
sub
or
xor
ja
lock
xchg
popf
pop
fcomip
push
cli
sbb
pop
cwtl
pushf
enter
or
xor
pop
sbb
pushf
loop
imull
repnz
in
pop
add
addr16
cmpsl
mov
jp
fidivrs
aad
inc
dec
jg
outsb
mov
out
or
xor
lods
xchg
dec
xchg
aad
fsubp
xchg
lahf
mov
jo
out
push
inc
or
and
dec
mov
or
mov
sbb
xchg
add
jp
mov
pop
lret
shlb
push
push
ret
addr16
or
mov
repnz
xchg
add
ret
adc
pushf
add
push
xchg
arpl
mov
mov
jb
dec
out
cmp
push
cli
ja
jp
lret
push
stos
and
stos
pop
xchg
sbb
xchg
mov
sub
cmovg
or
sbb
xor
sub
mov
xor
sbb
or
adc
ret
stos
addr16
popf
fdivl
mov
lahf
aas
cld
and
xor
jle
cmp
shrl
xchg
stos
mov
mov
mov
add
cmp
dec
jb
mov
jno
lods
mov
lcall
mov
inc
push
cmp
ret
outsb
cmp
pop
or
fisttpl
jp
adc
mov
popa
daa
mov
hlt
push
inc
add
add
mov
movsl
xchg
sub
inc
dec
fs
push
inc
jmp
dec
or
ja
retw
lods
pop
jb
xchg
sbb
mov
test
data16
loop
lret
inc
xchg
call
scas
sub
stc
and
mov
popa
into
sbb
test
dec
cmp
mov
test
insb
mov
sahf
add
sub
fisubrs
lcall
xor
or
xor
int3
andl
cmp
mov
adc
push
scas
lds
mull
and
loope
push
test
in
jns
in
push
out
xchg
iret
jle
insb
movsb
dec
cmc
add
shlb
xor
lcall
fistpll
ret
xor
stc
imulb
aaa
mov
pusha
loopne
aas
leave
jmp
jb
xchg
inc
inc
xchg
enter
daa
scas
mov
sbb
aad
nop
mov
adc
sti
jmp
sarl
sbb
stos
test
dec
movsb
dec
bound
das
adc
lods
rcrb
mov
xchg
inc
cmp
sbb
adc
pop
adc
out
sti
in
sub
hlt
aaa
mov
sahf
mov
pop
mov
dec
push
lods
xchg
push
test
xchg
push
dec
mov
call
in
repnz
daa
sbb
jmp
jno
inc
ret
jnp
xor
lock
mov
ret
add
rorl
leave
cmpsl
in
dec
mov
cmp
and
into
xchg
shr
pop
adc
and
lds
mov
jns
je
mov
and
iret
movsl
inc
lock
add
sarl
sbb
jecxz
mov
mov
clc
adc
insl
mov
cmp
test
pop
lret
xlat
mov
shrb
dec
mov
insb
adc
ljmp
fcompl
xchg
std
jge
test
mov
iret
outsb
movsb
in
mov
inc
jno
addr16
clc
mov
mov
cs
daa
hlt
scas
add
aad
xor
in
mov
ror
lret
lea
pushf
ret
mov
or
sub
sub
mov
stos
pop
push
and
pusha
pop
mov
inc
inc
repnz
repz
aaa
test
sub
ja
js
int3
fcomi
in
mov
std
div
xlat
fcomps
push
sbb
lret
mov
pop
adc
loopne
push
sbb
int
repz
jp
inc
mov
inc
daa
dec
jnp
mov
out
das
jmp
xlat
mov
cmp
xchg
add
cmp
iret
in
push
outsb
in
or
ljmp
xor
lcall
addr16
xchg
push
dec
leave
fucomi
cld
jns
or
int3
xlat
xor
sub
xchg
push
mov
ja
inc
cmc
adc
push
fisubl
mov
mov
fwait
lea
push
cmp
and
fstps
sub
jle
pop
xchg
add
je
and
arpl
dec
sub
test
or
adcl
xchg
loop
sbb
fiaddl
dec
push
addr16
mov
pop
jge
pop
jmp
inc
jne
outsl
xor
add
pop
rorl
rol
add
xorb
fwait
lahf
js
xchg
repnz
cmp
and
test
mov
xor
dec
sub
adc
inc
xchg
popf
mov
je
pop
jnp
iret
sub
push
out
push
jno
push
xchg
sub
in
and
push
imul
arpl
lret
cmpsb
aaa
mov
lods
pop
in
ret
adc
imul
test
test
jle
mov
inc
fimull
cmpsb
repz
js
roll
inc
adc
mov
lea
pop
pavgb
aaa
repz
pop
jne
test
ds
bound
out
jnp
aaa
xchg
jnp
dec
clc
enter
pop
mov
sbb
lods
and
fidivrl
faddl
add
scas
mov
push
pop
jl
les
lret
dec
and
mov
cmpb
test
outsl
call
scas
cmc
lock
shlb
fldenv
adcb
jno
call
inc
cmp
call
out
lds
inc
jle
push
inc
pop
xor
repz
cmc
and
mov
sub
dec
mov
scas
push
arpl
mov
mov
xchg
out
jno
scas
aam
faddp
test
lds
mov
xor
aas
iret
hlt
cmpsl
jo
fstpt
adc
mov
shlb
sub
rcrl
push
adc
outsl
or
negb
and
fisubs
in
mov
cmp
icebp
mov
jbe
outsb
inc
jmp
daa
inc
push
cli
fstl
sti
sbb
cmp
fsubrs
dec
xchg
sbb
subl
mov
adc
outsb
cmpsl
sub
mov
loope,pn
ja
dec
sti
popf
add
jmp
jbe
mov
jmp
inc
gs
out
cmpl
test
xchg
xlat
insb
mov
clc
cmc
pop
jns
inc
scas
pop
gs
or
lret
and
adc
les
popa
pop
push
addr16
mov
sub
push
scas
mov
or
int3
cmpl
addr16
dec
ljmp
push
rorb
fcomps
mov
sbb
add
push
pusha
test
sarl
les
dec
sbb
rolb
mov
aad
mov
aaa
imul
out
pop
shr
stc
daa
out
mov
sbb
xchg
stos
cmpsb
ja
push
int
in
jno
xchg
and
rcrb
push
push
mov
mov
cs
xlat
cs
lret
inc
out
cli
jne
mov
adc
jb
lods
lock
aaa
cld
xchg
mov
out
stos
pop
fucomi
xchg
push
pop
jecxz
jb
test
test
pop
repz
jge
mov
cmp
fnsave
inc
rcll
add
aaa
iret
rcll
cmp
out
out
outsl
lea
pop
xchg
sub
dec
scas
loope
xchg
inc
sub
or
cmpb
inc
pop
mov
jge
jmp
inc
pop
fs
mov
ja
scas
pusha
dec
xor
mov
xor
sub
pop
mov
mov
lahf
pushf
das
adc
sarb
mov
iret
and
cmc
lcall
sbb
test
fisubrl
loopne
test
xchg
fwait
add
test
ds
adc
imul
in
rorl
jae
dec
lret
sbb
pop
jae
sahf
mov
pop
popf
loopne
test
and
xor
jno
cld
cld
mov
ljmp
loop
repnz
data16
ja
inc
cmp
pop
test
shl
push
jge
test
pop
mov
rclb
js
jno
sti
aaa
xchg
or
lret
mov
pop
inc
lahf
testb
daa
bound
inc
mov
bound
inc
fwait
or
pop
xchg
or
inc
pop
in
adcb
sbb
pop
inc
mov
sbbb
sub
add
int3
inc
add
mov
xchg
arpl
adc
push
enter
sub
sahf
add
or
popf
jg
xlat
js
add
push
push
mov
fwait
in
aad
or
or
jno
mov
fcmovnu
shlb
mov
stc
call
and
mov
adc
out
cltd
into
dec
pop
int3
hlt
in
jnp
sbb
repz
adc
ret
mov
mov
push
scas
cwtl
dec
push
mov
or
jb
cli
sub
dec
mov
jg
xorl
xchg
inc
xchg
jg
imul
in
lea
inc
fldcw
push
ja
in
fnstcw
mov
xchg
mov
mov
ds
mov
push
sbb
insb
icebp
push
fldcw
and
mov
insl
pop
mov
pop
ficoml
sbb
lret
lahf
mov
xor
cmc
adc
nop
loop
lret
ds
in
addb
adc
ljmp
hlt
imul
mov
mov
pop
add
imul
mov
or
rcrb
loop
inc
scas
test
les
loopne
sub
cmp
sub
iret
xchg
jmp
cli
outsb
xchg
mov
ja
icebp
add
inc
mov
pop
jae
cld
dec
cmpsb
or
clc
icebp
pop
jp
pushf
fiaddl
cs
push
sbb
imul
sbb
inc
out
pop
sub
push
dec
dec
mov
gs
mov
decl
out
repnz
out
adc
int
rorb
addr16
out
stos
ror
call
jg
jne
sbb
in
ret
lcall
fadds
push
lods
scas
ret
les
sbb
rorb
repz
and
xor
arpl
ret
push
lcall
outsb
loope
cmp
cwtl
push
loope
shll
sub
or
aas
and
push
fsubr
mov
add
aad
jecxz
addl
mov
cmp
dec
lods
mov
sbb
mov
pop
xor
notl
push
iret
test
stos
cmp
and
dec
push
cmp
push
mul
xchg
jp
or
push
inc
mov
jns
mov
add
mov
inc
mov
push
out
push
mov
fs
test
inc
sub
xchg
cmpsb
mov
ds
cmpl
stos
mov
inc
lret
inc
jb
push
cmp
ja
movsl
sub
mov
fdivr
mov
mov
fisubrl
mov
mov
jecxz
lds
jge
inc
in
test
cmp
mov
mov
shll
dec
adc
mov
pusha
test
xchg
cmp
push
pop
or
adc
iret
dec
jp
mov
pop
addr16
mov
xor
mov
push
cmp
adc
dec
pop
imul
add
cltd
push
mov
inc
jge
andb
lret
adc
and
lods
cmpsb
ffree
ret
cmp
adc
scas
enter
pushl
decb
jbe
xor
jns
dec
xor
rorb
xor
cltd
rorl
jl
in
lock
bound
inc
xchg
pop
mov
lock
mov
imul
inc
push
xchg
test
negb
mov
dec
jbe
loop
dec
xchg
cwtl
fstpl
insb
sub
jae
test
movb
out
fstpl
outsb
lods
scas
lea
shlb
mov
arpl
adcl
xchg
mov
jle
push
pop
sub
frstor
xchg
mov
cwtl
neg
jb
sbb
or
mov
repnz
sbb
push
fcompl
add
push
mov
inc
or
xchg
stc
dec
inc
sub
xorl
push
movsb
or
dec
pushf
or
lods
or
adc
push
push
lcall
das
pop
out
or
cmpsb
data16
xchg
mov
sbb
or
mov
leave
test
jp
addb
imull
mov
fwait
xchg
lods
push
lret
and
inc
jge
arpl
fwait
push
aas
movsl
jbe
cmp
inc
test
loop
sub
movsb
mov
ret
cmpsl
jne
loop
xor
gs
or
jae
insl
mov
mov
xchg
lret
jl
mov
adc
lds
adc
fbld
lret
mov
dec
push
sahf
and
cmc
xor
sti
cmc
pop
and
mov
add
jbe
repz
sahf
sub
inc
fwait
jae
ror
in
mov
mov
out
rol
sbb
test
out
pusha
outsb
add
cmc
outsb
push
cmpsl
push
mov
mov
xchg
jp
push
pop
or
jle
mov
sub
int3
xchg
mov
aas
pop
shll
xor
and
scas
jg
incb
gs
testl
sbb
xor
cmp
xor
xchg
call
fbstp
push
jb
jo
mov
cmpsb
pop
cwtl
xor
cs
mov
xor
mov
gs
in
movsb
mov
and
dec
mov
xchg
sbb
push
add
pop
outsl
xor
push
loop
xchg
jmp
test
push
pop
test
inc
popf
push
shlb
filds
and
jae
cmpsl
fs
or
inc
out
stos
ret
fs
mov
dec
popf
mov
push
es
pop
xchg
inc
in
fmull
pop
cmp
cs
arpl
mov
sti
pop
jnp
inc
inc
and
cmp
frstor
and
and
test
mov
rolb
jne
hlt
xor
aam
sub
xor
push
cwtl
mov
addr16
push
aas
cmc
popf
fidivrl
stos
or
jle
mov
outsb
arpl
mov
push
fists
sub
shr
and
loopne
cmpsl
pop
mov
sub
nop
jae
dec
test
mov
and
dec
push
es
imul
sbbb
jne
cmp
loope
dec
push
mov
pop
sub
lahf
in
jmp
std
psubq
cmp
icebp
sub
adc
xchg
in
sbb
adc
call
fmull
shlb
cld
adc
lahf
ret
jb
ret
inc
mov
lret
and
mov
push
push
mov
adc
xlat
insb
fmull
inc
cmpsl
or
aam
loop
push
clc
push
add
jae
cmp
jbe
xlat
adc
nop
lahf
and
cmpsl
and
mov
adc
test
add
data16
lods
adc
lea
repz
fcmovnb
mov
cmp
das
mov
ffree
shl
cltd
mov
in
sub
in
clc
insb
push
xchg
mov
inc
cs
dec
test
lret
jl
xchg
in
rcrl
dec
out
push
push
xor
xchg
jns
rorb
mov
cmpsb
pop
cwtl
xrelease
mov
sub
pop
rclb
pop
adc
stc
sub
enter
push
xchg
imul
jl
scas
fcmovbe
xlat
or
outsb
jmp
aaa
lea
push
lds
and
cmpsl
ss
rorl
or
insl
mov
test
adc
dec
pop
xor
mov
dec
inc
sub
push
cmc
push
aad
jg
cmp
lret
ret
push
vpcmov
mov
pop
sti
push
andb
xor
cmpb
sub
jle
sbb
ss
jo
inc
jmp
mov
or
cmp
cmp
imul
in
push
cmp
enter
mov
pop
sub
adc
sbb
adc
shll
xchg
stc
inc
xchg
stc
xchg
es
leave
out
inc
sahf
push
test
call
mov
int
push
iret
incl
lahf
sbb
std
pop
dec
dec
mov
mov
jb
int3
shl
mov
and
cmpsl
shlb
rclb
repz
and
movb
xchg
imul
dec
cmp
js
jl
lock
int3
ret
dec
push
and
mul
mov
sbbl
xchg
xor
add
lock
xchg
loope
push
xor
mov
daa
adc
ss
mov
clc
adc
daa
test
repz
sar
xor
xchg
dec
fisttps
xchg
xor
adc
dec
mov
shlb
pop
pop
into
adc
out
dec
shrl
fwait
jne
dec
push
xchg
adc
xchg
or
jmp
pop
fsubs
pop
insl
rorl
push
xchg
cs
aas
jb
inc
dec
ret
sub
mov
adc
rcr
adc
addr16
inc
jb
xchg
pop
pop
popf
jl
repnz
shlb
lock
push
cmpb
cmc
icebp
push
jae
add
mov
jbe
xchg
xchg
sti
cmp
stos
push
pop
mov
loope
fsts
pop
mov
pop
push
data16
out
scas
jle
dec
mov
popa
sub
inc
movsl
mov
loope
nop
fdivrs
inc
jmp
cmc
dec
fabs
inc
je
cld
popf
lds
fnstcw
fimull
rolb
push
pop
and
lock
sbb
rcr
mov
inc
xabort
jnp
pop
aaa
mov
cmp
adcb
lcall
stos
pushf
stc
mov
xor
mov
push
lds
arpl
lods
push
inc
addl
jb
addr16
pop
outsb
mov
adc
mov
sarb
out
imul
jecxz
rorl
cmp
adc
inc
sbb
in
mov
sbb
in
jg
ljmp
jne
pop
mov
mov
cltd
xlat
fisttpll
mov
adcb
lods
lret
xor
ljmp
fdivrl
and
pop
xor
mov
lret
fs
leave
enter
inc
fsubl
shlb
push
sub
int
mov
shll
jbe
dec
repnz
xor
push
jl
dec
ret
repz
arpl
std
roll
lahf
mov
cmpsb
inc
jo
mov
test
fidivs
push
arpl
daa
arpl
inc
inc
mov
jecxz
sbb
sahf
je
add
and
xchg
jge
or
xchg
mov
mov
push
loop
mov
cmc
lock
lods
aaa
dec
movsb
and
scas
mov
outsl
jae
orl
dec
add
jo
add
jns
iret
xchg
jnp
cmpsb
xchg
push
fwait
adc
rorb
arpl
sub
negl
loope
jbe
or
pop
xchg
jb
pop
int3
push
mov
fistpl
in
mov
push
push
cld
add
aad
movsl
imul
rorl
imul
and
dec
ljmp
cs
je
mov
and
jns
loop
xchg
je
inc
pop
imul
icebp
loop
outsb
cmpsb
sbb
mov
jle
push
faddl
inc
test
fldl2e
jb
std
ja
enter
ss
xor
jne
addr16
xor
xor
sub
add
pop
sub
ret
lods
lcall
ret
loopne
inc
std
push
or
incl
jne
les
fsubl
fdivp
sahf
jbe
ja
or
popa
shll
aas
fldt
cmc
leave
sbb
xchg
into
dec
movsl
ljmp
idivl
adc
cmc
ss
push
das
jo
push
or
es
iret
call
cs
call
cmp
xor
adc
jl
pop
jne
movsb
jb
movsl
jne
dec
pop
push
loope
mov
imulb
jae
shrl
cli
lcall
inc
nop
jle
in
sbb
ja
adcb
leave
dec
add
into
stos
mov
cmp
out
jno
sub
and
rolb
pop
jb
inc
ja
mov
ret
frstor
dec
mov
ret
das
xor
dec
int3
xchg
inc
lods
xor
outsb
jne
xor
aas
inc
loope
inc
int3
icebp
dec
lret
ror
scas
mov
and
ret
add
les
aas
jbe
dec
xor
addr16
inc
and
jge
dec
pop
adc
in
cmp
lock
add
cli
xchg
jno
aas
lock
hlt
cltd
sub
cmovae
das
lcall
push
inc
into
cltd
sarb
mov
and
xchg
test
jg
push
mov
test
inc
xchg
repz
inc
sbb
adc
inc
mov
inc
imul
adc
andb
dec
addr16
mov
or
pusha
mov
and
or
lods
and
mov
xchg
and
ret
pop
insl
iret
std
mov
cld
bound
pusha
mov
adc
aas
gs
sbb
dec
mov
mov
pop
fistpll
xor
sbb
in
cld
dec
push
dec
xor
jo
push
mull
outsb
mov
fsubl
clc
mov
js
cli
cvtdq2ps
call
and
jne
push
and
mov
xchg
mov
pop
or
pop
movsl
cmp
xor
xchg
mov
jg
push
iret
shr
movsb
lock
sahf
test
pushl
sub
stos
test
jle
inc
nop
cld
pop
aad
xchg
push
jp
test
xchg
and
lock
xor
xchg
rolb
pop
inc
lcall
inc
fs
mov
mov
add
xor
loop
pop
jnp
push
std
idivb
adc
mov
mov
fs
xor
enter
and
jbe
jp
into
out
movswl
push
xchg
stos
cmp
sub
aas
and
loop
fs
add
fldt
adc
xor
lahf
cmc
jo
aad
hlt
jle
minps
cmp
dec
mov
loop
lret
test
sahf
mov
mov
mov
aam
lods
cmpsb
jbe
fcoms
scas
pop
jnp
inc
xchg
jle
int
cltd
in
inc
sbb
js
pushf
xor
aas
dec
jle
add
daa
mov
test
adc
xor
sub
pop
mov
xchg
lods
pop
sbb
adc
jae
xor
sbb
addr16
adc
dec
xchg
cmp
xor
push
inc
xor
add
shlb
js
xor
cwtl
cli
jbe
decb
mov
test
pop
jg
leave
movsl
nop
je
or
nop
sub
xor
pop
ja
mov
push
add
cmc
mov
push
inc
push
cmp
fwait
jge
outsl
mov
ds
orl
adc
movnti
dec
je
mov
ss
lea
sub
xchg
mov
mov
jecxz
cmp
jl
shl
cmp
cltd
ja
dec
in
dec
jo
scas
mov
out
mov
fdivl
push
xor
out
push
sbb
stos
aam
imul
adc
push
push
xor
xchg
fldl
xor
stc
sub
inc
cmp
hlt
fisttpl
inc
in
cs
add
orb
jg
jecxz
push
popf
mov
push
sub
out
adc
xchg
int3
xchg
pop
gs
ja
lahf
imul
xchg
fldcw
fsubp
push
dec
bound
ss
in
cmp
int
pop
mov
cs
cmc
or
cmc
xchg
fdivrp
mov
sub
inc
imul
hlt
fsubrl
mov
sub
cmp
and
dec
rcr
dec
xor
add
fcompl
fistpl
cli
adc
in
adc
popf
mov
lret
xchg
movsb
lret
repz
cmc
pop
mov
add
cmp
sub
or
pop
sarl
in
push
pop
popf
cmp
pop
inc
or
adc
bound
xchg
sub
dec
sub
adc
sub
int3
outsl
scas
jno
add
jp
push
xchg
leave
ds
jmp
push
outsl
testb
sbb
fsts
jecxz
inc
mov
sbb
jge
mov
test
test
pop
dec
xchg
jae
dec
sub
push
in
aaa
repz
mov
data16
lea
xchg
ret
sbb
dec
xor
or
in
out
or
mov
mov
push
shll
mov
outsl
sub
das
lds
aaa
lods
push
mov
fcmove
dec
dec
outsb
lret
call
jge
inc
sub
fldl
in
pop
pop
pop
rclb
call
jbe
fldl
in
inc
add
das
addr16
bound
jg
sub
pop
push
test
scas
ja
popf
sbb
mov
outsb
iret
popf
jno
out
sti
lret
nop
jae
and
xchg
or
mov
or
pop
inc
icebp
into
test
in
mov
add
mov
jo
pop
stos
push
aas
outsl
call
sub
cmp
loopne
push
out
lea
lea
dec
xchg
push
push
mov
sbbl
fwait
push
fadd
jae
cmpb
push
inc
mov
or
mov
nop
fidivrs
loope
mov
jnp
push
jmp
aam
sarb
pop
jge
cmp
fidivl
pusha
lods
xchg
ja
lods
mov
push
push
mov
inc
add
test
leave
inc
ds
xchg
add
ljmp
push
rcrb
test
xchg
mov
popa
push
int3
mov
mov
xchg
nop
or
adc
add
mov
xchg
imul
and
fisubl
mov
cli
or
dec
mov
lock
lods
fisubs
xchg
stos
orb
add
xor
cmc
xchg
inc
xor
mov
and
test
repnz
xchg
test
out
imul
xchg
mov
mov
fsubr
dec
mov
test
xor
and
add
xor
jo
sbb
daa
je
push
int3
mov
scas
lods
outsl
jmp
adc
pop
pop
in
cwtl
ljmp
dec
cmp
cwtl
hlt
xor
pop
or
ja
cli
push
dec
js
hlt
add
pop
sub
mov
and
dec
cmp
das
ss
fisttps
xor
xchg
arpl
dec
mov
pop
mov
mov
mov
sahf
data16
jl
mov
cs
jmp
lods
rcr
in
lahf
test
xor
bound
jge
out
mov
aad
xlat
adc
in
xor
mov
cmpsb
mov
cmc
mov
repz
aad
and
cmp
cmp
pop
sahf
addb
adc
push
dec
or
int
in
mov
in
sahf
lcall
femms
or
lods
xchg
push
sbb
popa
adc
mov
cmp
fsubr
jl
xchg
dec
xchg
lock
aad
add
scas
pop
cli
xchg
jecxz
fists
mov
scas
add
in
test
xlat
mov
or
cmp
shl
sub
divb
movsb
mov
test
int
cmpb
dec
icebp
roll
cli
mov
scas
scas
pushf
movsl
pop
jno,pt
add
mov
inc
push
jns
and
xchg
popa
lahf
jecxz
inc
pop
mov
in
or
stos
adc
pop
adc
xchg
mov
scas
fmuls
push
push
and
sub
sahf
xor
add
into
dec
adc
or
fwait
int
test
push
movsb
sub
or
lret
jo
xchg
test
mov
mov
dec
or
add
lcall
push
std
clc
insb
sub
or
jge
push
mov
and
fisubl
lcall
fs
mov
jle
mov
jl
ljmp
test
ljmp
cmp
xchg
jecxz
and
mov
shrl
fnstsw
adc
repz
lret
stos
and
rolb
stos
xlat
icebp
sbb
aam
jno
pop
add
pushf
iret
xor
leave
sarl
and
mov
xor
mov
and
mov
cmpsb
lcall
jo
mov
mov
mov
mov
cmp
shll
jp
pop
cmp
movq
xchg
xor
ds
scas
mov
dec
jae,pt
or
cmovno
mov
out
insl
clc
cmp
negb
pop
mov
sub
mov
xchg
movsb
std
jg
push
movsb
clc
in
add
push
fucomip
pop
cltd
cmp
add
movsb
sar
pop
repnz
mov
jl
dec
sub
test
sub
inc
push
addr16
pop
cld
inc
cmp
adc
cmp
push
adc
xorl
jbe
inc
syscall
movsl
push
xor
sub
iret
call
pop
mov
jmp
mov
out
jb
and
sub
ficompl
jo
or
xchg
fstpl
mov
xor
addr16
sub
mov
push
push
insl
dec
jb
popa
mov
mov
ss
adcb
pusha
test
stos
jmp
wbinvd
test
dec
xchg
movsb
cmpsb
je
movsb
outsb
pushf
or
out
int
mov
stc
aaa
pop
pop
fcompl
add
mov
out
dec
cltd
imul
test
and
aam
mov
cmc
cmp
pop
lcall
sbb
pop
pop
sbb
in
bound
fucomi
fs
cmp
aad
jne
fnstcw
pop
ds
xchg
stos
push
dec
arpl
dec
hlt
pop
sub
sbb
insl
int3
fsubl
add
lds
xchg
push
call
stos
shrl
call
dec
adc
pop
pop
aas
xor
xor
push
mov
jbe
stc
sub
outsl
sbb
out
xor
mov
insb
idiv
or
push
aad
jecxz
loop
sub
or
jge
ret
push
fsubl
lea
jns
xchg
pop
mov
or
inc
cmp
push
std
push
notb
xor
mov
push
sub
sahf
mov
adc
shlb
ljmp
push
test
sbb
mov
ret
test
flds
outsl
or
adc
scas
xchg
dec
push
lret
push
sbb
mov
or
pop
ffreep
dec
mov
cmpsb
flds
lret
lods
es
lods
mov
insb
rcrb
jb
adc
hlt
cmp
mov
icebp
pop
test
bound
cmp
repz
test
pop
dec
les
cld
xor
roll
sbb
mov
push
fnstsw
dec
sbb
add
inc
pop
test
adc
dec
pop
inc
rcrl
movsl
sbb
lods
cmp
xsavec
or
insl
adc
mov
xchg
or
xor
orb
neg
stos
mov
test
pop
cmc
out
adc
sbb
lcall
dec
inc
aad
sbb
enter
cmp
pushf
sub
clc
push
call
and
daa
sub
out
jmp
idiv
arpl
mov
or
fisubl
cld
loop
imul
ss
mov
cld
mov
pop
xor
or
adcb
push
dec
js
lcall
imul
sbb
insl
cmp
sbb
lock
subl
dec
pop
ja
jecxz
lods
xchg
inc
sbb
out
cmp
daa
int3
sbb
mov
sbb
rol
lods
jnp
movsb
fidivrs
ss
mov
std
cld
mov
pop
scas
sbb
sub
inc
mov
sub
xchg
insb
dec
push
sbb
push
jge
gs
sti
xchg
mov
loop
inc
xchg
out
jno
add
inc
mov
sahf
cmp
mov
das
xchg
and
adc
and
mov
jmp
jb
mov
sbb
mov
std
xchg
push
gs
dec
adc
pop
push
aad
xor
pushf
cmp
addb
mov
jae
add
sbb
rcrb
add
xor
sub
cltd
insb
mov
cli
pusha
push
outsl
bound
aam
sub
in
adc
or
jle
imul
mov
icebp
loope
inc
inc
imul
xchg
aad
aad
adc
mov
inc
pusha
dec
mov
jb
jl
stos
outsb
jno
out
fidivs
adc
inc
pushf
push
push
mov
dec
inc
mov
push
stos
lcall
mov
mov
adcb
sti
andb
sbb
iret
test
call
and
call
dec
in
addr16
xor
xlat
sbb
out
xor
in
imul
xorb
sar
or
stc
and
stos
inc
imul
mov
jne
or
out
movsb
out
dec
cltd
pop
push
mov
or
pusha
jl
jl
and
push
arpl
mov
mov
mov
lret
nop
inc
cmpsl
lods
mov
xchg
and
aam
fwait
insb
xchg
xor
adc
push
sahf
int
fldcw
fs
bound
mov
cmc
test
push
dec
xlat
sbb
mov
pop
and
mov
hlt
inc
mov
lods
fidivs
sub
outsl
inc
pop
jmp
and
jno
xor
mov
aam
mov
jmp
mov
or
orb
inc
or
test
push
xchg
push
xor
test
jmp
repz
insb
pop
jmp
loopne
xor
test
lods
pop
cmp
cmpb
or
push
push
inc
int
jb
shlb
jle
lahf
inc
out
pop
inc
sbb
mov
leave
mov
dec
fldl
ret
sbb
cmc
sub
pop
rdpmc
or
sub
xor
movsl
mov
fidivrl
cmp
jg
sbb
jg
mov
cmpsl
mov
xchg
je
les
push
xchg
push
or
adc
stos
sbb
es
dec
pop
adc
or
bound
es
lods
dec
push
js
les
or
mov
dec
fcoms
sbb
clc
push
mov
lret
lods
sahf
xchg
add
lods
push
dec
or
arpl
jbe
pop
mov
dec
inc
shll
notb
stos
mov
iret
add
dec
cmpsl
pop
lret
lock
addr16
cmp
shll
dec
mov
fmuls
js
mov
popf
pop
nop
pop
pop
jno
orb
and
xchg
ficomps
xor
clc
mov
sti
mov
or
or
jmp
cmpsl
sub
out
mov
movsb
mov
push
xor
mov
cmpsl
out
cwtl
cmp
xchg
fiadds
mov
or
mov
mov
call
fwait
pop
cltd
mov
pop
xchg
cwtl
and
or
dec
pop
out
cmp
aad
movsb
adc
mov
add
leave
rol
jno
or
xchg
mov
adc
stos
lahf
jo
push
ret
addr16
imul
inc
or
pop
xor
mov
and
or
arpl
out
sub
pushf
jbe
cmp
jle
sub
iret
add
jge
mov
push
bound
mov
mov
add
mov
xchg
mov
xlat
outsb
lods
bound
jle
push
pusha
adc
clc
iret
ljmp
lret
sbb
out
notb
adc
push
xchg
mov
aam
lods
xchg
inc
push
push
push
loop
push
jmp
out
jecxz
lahf
sbb
xor
mov
push
and
loop
std
dec
mov
fdivrp
int
jb
dec
loopne
push
andb
cli
nop
inc
lods
mov
out
pop
push
popf
add
mov
and
push
dec
fsts
adc
xor
ss
inc
sbb
js
dec
cmp
lret
fsubrs
pop
out
add
lahf
insb
cmp
icebp
add
jmp
xor
add
pushf
les
xchg
pop
jae
mov
dec
inc
or
xor
push
pop
cmpsb
test
xlat
sbb
mov
sub
jmp
pop
mov
pop
popa
addr16
ficompl
test
shr
xor
scas
adc
fnstsw
xorb
sub
xor
push
nop
adc
ja
pop
rol
xchg
stc
mov
sbb
addr16
jb
js
std
out
add
mov
dec
or
push
sbbl
sbb
jg
add
cmpsb
push
add
ja
and
cmp
cmp
inc
cmp
loopne
push
and
popf
leave
je
fisubrl
fisubrl
mov
popa
mov
mov
leave
cmpsl
lds
sahf
xchg
jmp
fdivrl
fcmovne
push
mov
clc
or
adc
add
ret
mov
ljmp
jle
negb
cmp
pop
movsl
lret
in
cltd
mov
adc
outsl
and
notl
xor
dec
push
out
call
scas
movsb
frstor
lds
fs
jb
data16
lret
mov
fwait
scas
fwait
hlt
rolb
stc
nop
scas
ret
xor
add
ljmp
lock
add
insb
push
das
stc
imul
jb
pop
and
mov
or
sub
cmp
adc
inc
xchg
jns
jl
cwtl
adc
pusha
cmp
jne
adc
jo
pop
and
pop
or
mov
xchg
out
lahf
fbld
mov
jns
mov
sub
sbb
fnstsw
aas
jp
es
jmp
cmp
pusha
cwtl
das
stc
mov
mov
mov
mov
iret
inc
inc
cmp
es
and
jnp
stos
clc
inc
push
lret
mov
pop
outsb
idivl
nop
push
jle
inc
jmp
fiadds
pop
shr
mov
add
mov
mov
xor
jno
out
fstpl
lret
icebp
iret
xchg
fbld
das
sbb
je
nop
lcall
jne
inc
sub
ds
aam
gs
das
pop
iret
nop
fimull
mov
fistps
daa
cltd
adc
imul
cli
push
popa
cmovle
mov
cld
inc
cmpl
cmp
and
scas
or
mov
es
fs
int
pushf
sub
stos
popf
or
push
les
dec
or
das
dec
push
out
fisubs
js
push
adc
add
ret
cmp
int3
cltd
push
adc
jecxz
dec
xchg
jg
adc
jp
add
sbb
outsb
and
lret
dec
add
jae
mov
loope
jnp
repz
mov
push
mov
sbb
add
lock
sahf
lods
aad
jecxz
push
push
adc
pop
jle
jp
scas
mov
and
insb
sbb
adc
loop
jg
dec
out
test
mov
pop
jp
inc
add
loopne
xchg
mov
lock
mov
jle
repnz
push
xchg
fldl
jnp
pop
xchg
xchg
sbb
push
dec
shlb
sub
mov
imul
jl
stc
push
inc
imul
mov
lcall
mov
mov
fcomip
fwait
mov
fisubrs
pop
jg
push
pop
ljmp
sub
sbb
add
dec
dec
push
jge
shrb
fs
xchg
shlb
push
inc
cmp
je,pt
push
scas
fstpl
popa
inc
pop
dec
inc
cli
insb
nop
enter
xchg
sub
sbb
sub
xor
and
xchg
dec
cmp
inc
loope
into
pop
xor
cmp
mov
dec
mov
rorb
pushf
or
push
jecxz
mov
jecxz
aam
mov
bound
sub
cli
cmp
insb
push
cmp
sub
out
sbb
push
cmp
repnz
fwait
jb
sub
adc
das
scas
aas
cmp
mov
jo
dec
push
in
nop
dec
dec
push
mov
mov
in
or
je
and
loope
mov
ret
and
loop
pop
jno
in
ja
cmp
mov
ficoms
or
sbb
repz
cmpsb
or
mov
jecxz
enter
lret
mov
call
mov
popf
mov
add
inc
mov
dec
jmp
and
data16
ja
xor
xchg
in
je
xchg
jge
dec
xchg
fxch
sti
push
lea
fwait
xor
mov
adc
loopne
cli
mov
adc
lret
mov
es
and
pop
ds
mov
leave
inc
enter
jg
fwait
neg
jg
inc
pop
xor
aaa
sub
xchg
sbb
dec
out
push
insb
dec
inc
in
add
sub
ja
test
dec
inc
testb
push
jnp
or
mov
mov
xor
dec
ja
out
call
iret
andl
jbe
outsl
xchg
add
cs
jne
rorl
mov
push
mov
lock
pop
ror
and
inc
push
push
jg
xor
xorl
mov
jp
add
stos
lahf
pop
in
mov
popfw
xchg
mov
insl
popf
imul
mov
in
les
push
adc
das
sti
movsb
or
clc
sub
stos
push
negl
pop
xor
push
fbld
pop
jmp
stos
in
adc
bswap
jne
into
pop
lods
call
ljmp
push
daa
adcl
subb
cmpsl
or
add
sbb
cmpsl
mov
fbstp
out
pop
mov
dec
icebp
into
js
pop
dec
test
cli
xchg
lds
popa
es
dec
or
dec
inc
or
mov
in
pop
adcb
inc
jbe
pop
out
imul
int3
mov
hlt
xchg
and
jle
lds
adc
push
into
aaa
mov
out
cwtl
push
cmp
daa
aad
out
cmp
pop
lmsw
add
test
loope
repz
ljmp
pushf
and
pop
mov
data16
sbb
js
out
pop
jg
jns
fistpl
aas
dec
nop
jmp
add
dec
pop
mov
jo
jo
iret
sub
loop
jae
aaa
mov
inc
push
jbe
sub
add
cmp
les
lds
push
stos
arpl
scas
cli
jecxz
inc
mov
dec
es
add
fsub
lahf
outsl
stos
mov
jne
push
imul
xor
inc
pop
inc
aas
pop
ljmp
push
mov
cmp
ret
clc
insl
xor
jg
mov
pop
mov
sub
jns
mov
sti
mov
pop
push
jbe
fdivl
test
cmp
jp
fs
js
sbb
sbb
xchg
out
aas
dec
or
dec
hlt
dec
outsb
ss
fidivrs
filds
jp
loop
cmp
movsb
adc
or
add
cli
sbb
pop
insb
pop
inc
bound
add
rorb
push
push
je
js
xchg
js
inc
xchg
pop
repnz
rcrl
insb
jmp
stos
movsb
cld
dec
sub
xor
dec
mov
sbb
add
push
test
mov
pop
pop
and
dec
xchg
jnp
cli
jp
or
and
push
ret
stos
mov
xchg
sub
pusha
ret
dec
in
inc
pop
div
or
sti
inc
ds
dec
cmc
push
pop
inc
pop
push
pop
xchg
or
push
ljmp
mov
jl
and
xchg
and
push
pop
sbb
test
jg
stos
mov
inc
cmp
jb
rcrl
xor
jne
nop
test
mov
lcall
push
sbb
jge
pop
sbb
mov
in
cli
fwait
inc
mov
test
ds
sbb
cmp
ljmp
cmpl
sbb
notb
mov
cmc
push
ret
xor
xor
roll
push
inc
xchg
shll
stos
sub
dec
pop
int
push
push
test
cmp
jp
cmp
xor
sbbl
test
push
mov
xlat
sub
stos
sub
repz
sbb
daa
fsubrp
sbb
mov
movsb
adc
lret
mov
orb
add
lods
stos
xor
or
stos
xor
inc
jb
je
ja
xor
pop
xor
fimull
mov
ret
push
xchg
gs
popf
jmp
in
cwtl
inc
shlb
daa
xchg
mov
je
mov
enter
and
js
je
nop
rcrl
xchg
fwait
pop
mov
push
lods
dec
data16
popf
sub
mov
cld
lods
xchg
add
scas
imul
data16
sbbl
and
cmpsb
cmc
sarl
push
and
test
aam
fwait
mul
sub
aas
push
out
adc
rcl
dec
imul
add
sub
sub
das
mov
int
nop
jle
repz
sbb
pop
adc
ljmp
test
push
loope,pt
inc
out
sub
test
je
inc
js
shrl
dec
scas
sti
icebp
sbb
sarl
repz
in
sbb
pop
mov
mov
loopne
mov
je
cmp
ret
mov
mov
scas
sbb
test
jae
not
mov
xor
and
mov
cmp
jne
dec
daa
imul
inc
idivl
clc
arpl
inc
lcall
jg
mov
mov
cmp
push
sahf
cmp
add
das
push
inc
out
push
lret
sti
loop
in
mov
mov
insl
cli
sbb
adc
outsl
and
int3
pop
ficoml
sub
mov
adc
lret
add
shrl
inc
sub
out
pop
mov
dec
jl
insl
xorl
sub
push
add
add
shrl
adc
movsb
enter
push
imul
call
ljmp
int3
adc
lret
outsl
mov
and
xor
fldcw
mov
and
sahf
sbb
repnz
mov
fadds
ret
cmp
mov
inc
xchg
xor
es
into
xor
cmp
push
xor
out
lret
adc
lret
shrb
fwait
jmp
movsl
sub
fdivl
push
movsb
pop
and
xor
mov
xchg
mov
xor
test
adc
leave
je
mov
cmp
push
or
push
test
push
dec
cmp
cltd
or
dec
es
xchg
movsb
dec
jecxz
test
and
cmc
mov
xor
sub
mov
sub
test
cmp
mov
mov
incl
mov
jb
push
push
sbb
pusha
cmp
sbb
sti
mov
mov
inc
bound
je
pop
data16
icebp
std
pop
inc
in
dec
dec
mov
adc
fcmovnu
pop
std
mov
push
jle
insl
cld
or
lret
sub
daa
dec
mov
lock
gs
pop
ss
or
ret
lea
inc
rorl
cmc
adcb
push
and
jne
imul
test
push
push
push
cld
and
jbe
test
inc
lods
fimull
xor
fcompl
add
or
mov
dec
imul
xchg
jecxz
mov
mov
popf
popa
mov
push
out
fmuls
mov
and
int
xchg
inc
pushf
pop
mov
jmp
mov
cmp
adc
ja
aad
mov
loop
or
es
jns
sti
in
rcrl
nop
push
push
imul
push
ss
sub
ds
in
lds
pop
mov
enter
dec
and
das
test
xchg
cmp
add
loopne
push
pop
in
mov
inc
mov
adc
dec
jg
ds
push
cli
push
pop
pop
sar
inc
cmc
pop
paddsb
xor
pop
arpl
pop
clc
jmp
xor
dec
push
mov
mov
outsl
cmpsl
scas
mov
push
test
push
ljmp
mov
popa
jb
jne
mov
in
mov
jno
inc
repz
cmpsl
out
jle
jo
out
je
sub
lock
scas
sbb
jmp
adcl
inc
push
mov
jecxz
nop
xor
xor
dec
lahf
shll
mov
clc
mov
loope
and
xor
push
inc
pop
cwtl
shll
ja
aad
mov
sub
dec
jno
dec
test
in
in
cmp
decb
mov
cmc
or
push
mov
mov
ret
and
or
inc
ds
outsl
or
lock
xor
inc
dec
xchg
xor
xor
clc
aam
xor
or
or
addb
pop
clc
lock
cmp
mov
cmp
cmp
xchg
les
call
pop
mov
ror
les
mov
dec
xchg
xor
loope
clc
or
xchg
inc
sbbl
cld
inc
andl
dec
pop
inc
and
into
andb
imul
mov
in
add
fnstenv
call
and
repz
addr16
mov
in
push
xor
notb
loope
fsts
mov
notb
or
lret
fildll
popa
inc
push
loop
inc
pusha
xchg
test
xor
lcall
pop
js
inc
stos
test
sub
movsb
adcb
aam
jbe
push
jnp
sbb
or
pop
push
mov
iret
lds
in
cwtl
pop
push
stos
pop
ror
lods
mov
test
inc
xchg
mov
jle
cmp
aam
cmp
lcall
add
inc
add
cltd
imul
jne
mov
jne
test
fsts
sbb
or
decb
sub
jmp
fst
mov
mov
in
add
pop
inc
jmp
inc
push
mulb
add
push
fs
adc
fwait
push
cltd
adc
or
shll
repz
imul
xchg
dec
test
push
cmp
jle
cmpsl
gs
out
mov
jmp
cmp
mov
shlb
jle
or
push
repz
pusha
out
fmuls
add
or
pop
loop
out
sti
and
jge
lds
jmp
cmpsl
outsl
cli
inc
jge
mov
in
aas
sbbb
icebp
mov
lret
push
or
or
add
and
in
je,pt
sbb
xor
inc
outsl
sti
ds
or
dec
mov
pop
aad
and
pop
sub
xchg
sbb
jecxz
pop
cltd
adc
cmp
mov
scas
arpl
adc
pop
sbb
cld
mov
lea
aaa
aad
sahf
add
test
jp
xlat
sahf
push
cmp
idiv
movsl
jp
xchg
mov
inc
stos
xchg
mov
sbbl
dec
xchg
push
lock
mov
add
add
cs
push
mov
add
adc
les
add
add
add
popa
aam
adc
jbe
lds
adc
nop
mov
or
sbb
iret
lock
and
int
rorb
mov
andb
mov
ja
das
clc
mov
bound
bound
outsb
xor
rclb
rcrl
ds
popa
ret
cmp
cmpsl
sbb
xchg
push
lret
pop
xor
jne
and
push
sahf
cld
cmp
lret
cmp
push
add
adc
mov
into
xchg
mov
cli
pop
outsl
xchg
jno
jb
bound
mov
ja
adc
jns
cs
ss
nop
dec
or
inc
push
inc
xchg
mov
dec
les
fadd
mov
dec
or
data16
add
xor
lods
add
in
add
das
xor
mov
int3
outsb
mov
mov
pop
lret
dec
out
repnz
xlat
jecxz
insl
dec
and
fdiv
lret
mov
aas
out
push
outsl
js
iret
aam
sbb
popf
push
dec
push
pop
popf
into
mov
or
shlb
out
cmp
mov
add
and
mov
sbb
or
js
das
stos
mov
mov
xchg
inc
push
lcallw
fisubl
mov
in
xchg
jp
jno
add
stc
ds
es
pop
lods
sub
aas
popa
push
mov
pop
je
fcmovb
shl
push
sub
lahf
out
jbe
mov
cmpl
negl
pop
leave
xchg
ja
std
mov
dec
dec
lods
dec
xor
lret
roll
ficoml
adc
sbb
out
fs
or
jbe
je
subl
shlb
flds
or
push
ljmp
aaa
cltd
or
jo
sahf
xlat
mov
hlt
adcb
movsl
lret
mov
enter
xor
das
sbb
jge
movsl
movq
arpl
xlat
mov
dec
arpl
or
or
lock
cmp
inc
push
cs
push
xchg
fdivrl
out
in
push
outsb
lods
mov
stos
repz
sbb
fwait
jecxz
push
pmaxub
xchg
insb
dec
cltd
jp
in
push
clc
mov
add
ds
jl
jge
loopne
push
lahf
sbb
jecxz
test
out
shrl
in
mov
xor
frstor
adc
insl
pop
ret
bound
out
gs
lods
push
outsb
push
or
push
psllw
and
mov
or
mov
imul
in
aaa
rolb
dec
add
fwait
lahf
ljmp
cs
mov
cmpsl
sbb
add
and
xor
sub
sbb
add
lods
cld
sbb
jo
mov
pop
xchg
xor
cmp
add
mov
fstpt
das
cmp
lock
mov
out
inc
pop
cmpb
pop
lret
aad
and
ljmp
cs
lcall
mov
ficompl
xchg
int
jns
movsl
mov
adc
lds
jae
xchg
sti
mov
adc
and
repz
inc
jmp
dec
mov
cmpsl
in
jbe
out
shll
xchg
push
cmp
int
adc
mov
xchg
jne
fs
jmp
dec
scas
jge
cmc
sub
adc
in
call
adc
dec
mov
and
lock
in
mov
out
je
loop
push
and
xchg
pop
ja
push
ret
pusha
push
lds
inc
insl
iret
xor
pop
data16
lods
call
sti
pop
int
out
pop
dec
jb
jne
sarl
mov
aam
inc
pushl
xchg
pushf
outsb
dec
xchg
pop
dec
pusha
jb
stos
aas
movsl
adcl
enter
flds
inc
xchg
xlat
xchg
sbb
xor
scas
aam
pop
adc
test
rcll
int3
bound
fcmovbe
popf
ret
jo
int
add
cld
push
inc
lret
mov
out
fdivs
fwait
adc
push
loope
daa
jno
iret
dec
jmp
out
jne
push
cmp
stos
in
test
mov
pop
and
push
xchg
inc
jnp
sbb
mov
or
push
cmpsb
ret
ret
loop
aaa
mov
push
and
dec
lret
mov
jno
divb
js
and
push
add
adc
mov
dec
inc
sub
push
and
or
adc
shrb
cmp
mov
jg
add
jne
icebp
xchg
xor
mov
iret
mov
lock
pop
push
int
fdiv
dec
cld
stos
mov
jb
add
int3
out
gs
out
xor
sub
add
cmp
xchg
iret
pushf
push
or
inc
fldcw
out
fcoms
add
fists
inc
xchg
shrb
xor
fbstp
les
inc
test
jg
dec
or
and
shlb
std
add
push
cmp
xor
dec
imulb
or
xor
cmc
jbe
cmp
sar
cmp
mov
and
mov
xchg
sbb
repz
cwtl
jns
mov
inc
stos
fwait
lret
mov
jmp
arpl
sub
insl
xchg
mov
mov
hlt
repz
or
ljmp
sbbl
in
in
pop
adc
movsl
and
test
jg
push
ja
and
lcall
mov
roll
mov
inc
lret
jne
sbb
cmp
sub
and
mov
sub
dec
int
add
daa
setp
cmp
lahf
xchg
data16
adc
dec
mov
shrb
loope
rorb
movsb
fisubl
xor
ljmp
inc
dec
inc
ja
arpl
mov
test
test
sti
pop
fists
jbe
fistps
xor
sbb
pop
xchg
dec
mov
orl
xchg
jg
scas
cmp
adc
mov
mov
lods
xchg
push
std
out
inc
outsl
inc
and
xor
and
inc
movsl
dec
xchg
xchg
pop
in
inc
fwait
sbb
mov
sub
stos
outsb
cmpsb
outsl
mov
ljmp
idivb
mov
sbb
mul
jbe
or
int3
jbe
dec
out
sahf
cmp
repz
in
js
clc
xchg
fisubl
pushf
pop
stos
je
outsb
or
dec
nop
jns
push
icebp
cmp
sahf
jp
sub
cltd
lahf
test
mov
leave
cmpsb
and
or
inc
and
outsb
push
call
jae
dec
pop
pop
jo
hlt
sbb
mov
and
mov
and
xchg
notl
insb
mov
push
hlt
out
mov
test
ds
pop
bound
mul
lea
jno
adcb
out
scas
sbb
inc
jmp
in
ljmp
cmp
xchg
cmp
xacquire
addl
and
ljmp
rclb
push
cltd
dec
inc
inc
inc
sahf
test
aam
fsubrp
pop
int3
sbb
add
aad
jle
fsubrs
mov
mov
add
bound
adc
je
movsb
jp
fidivs
aas
cmp
mov
pop
xor
or
sbb
out
and
dec
fildll
jnp
test
insl
in
pusha
mov
or
and
int
subl
push
lock
je
jg
xchg
test
push
xchg
pop
lahf
mov
inc
aad
mov
xchg
dec
sarb
ljmp
and
fsubl
gs
out
sub
mov
fmuls
std
pop
aad
ja
pop
cmp
mov
les
imul
jnp
pop
sub
push
mov
mov
inc
ja
add
testl
push
inc
pop
das
xchg
inc
jbe
movsl
jmp
adcl
out
lret
outsl
jne
mov
adc
stos
stos
icebp
loope
das
xor
inc
push
jp
inc
add
cmp
fwait
insl
jmp
sub
and
mov
ret
mov
push
mov
fs
repnz
xchg
int
push
stos
popa
sub
xor
cmp
push
and
adc
sbb
push
mov
and
sbb
and
pop
ret
cli
enter
dec
cmp
repnz
ret
push
pop
les
mov
or
push
add
pop
or
imul
sbb
fwait
paddsw
sub
mov
mov
xchg
das
pop
fxch
pop
pop
jb
and
aaa
mov
ss
pop
pop
in
jg
or
cmp
gs
outsb
jl
add
mov
sbb
mov
push
adc
inc
pop
and
sbb
mov
aam
adc
xor
inc
dec
add
adc
ret
cmp
mov
ret
out
les
cltd
add
push
ds
sub
push
int3
aam
pop
or
orb
xor
push
fcmove
dec
addr16
or
inc
or
add
xchg
dec
gs
stc
sub
push
push
out
out
je
jge
inc
cmc
addr16
jmp
xor
sbb
rorb
push
fadds
push
loopne
movsb
xlat
and
sub
add
xchg
xchg
out
push
add
mov
pusha
cs
mov
shll
push
test
mov
les
add
mov
push
jle
ja
aaa
sbb
imul
faddl
cmpsb
adc
xor
sub
mov
sahf
das
dec
xchg
jecxz
ja
rolb
push
ret
push
movsb
addb
dec
jecxz
dec
repz
mov
cmp
aam
cmp
adc
cmc
daa
dec
hlt
mov
mov
xor
bound
xchg
mov
imul
stc
loopw
cmc
in
xor
cmp
mov
inc
dec
jae
lock
mov
cmp
std
in
flds
dec
cltd
or
cs
sbb
pop
pusha
push
cmp
pop
and
addr16
test
fcomps
xchg
fwait
jl
jecxz
out
push
je,pt
cmp
jae
in
fiaddl
push
fs
xchg
sahf
and
sahf
pop
cltd
stos
adc
jle
loop
loop
cld
jg
jg
xchg
sti
push
inc
pop
push
or
aad
outsl
cmpsb
test
ljmp
lods
and
add
outsb
push
jbe
cs
imul
hlt
iret
xor
and
fisttpll
fsubp
inc
rorb
movsl
xchg
cmpsl
jge
cmp
or
sbb
lret
test
xor
fsubr
loope
jle
add
inc
pushf
mov
int3
bound
push
test
xchg
push
cltd
mov
xor
jle
cmpl
cltd
fldl
loope
daa
mov
pushf
xchg
push
and
clc
jmp
adc
clc
sbbb
cmp
shrl
enter
cld
rorb
dec
or
outsb
ret
mov
das
xchg
aam
ficoms
push
push
xor
add
or
js
data16
int
add
mov
pop
cmp
jne
dec
or
daa
loopne
mov
jle
jle
stc
out
add
sbb
sbb
xchg
in
mov
lods
push
push
add
scas
fbstp
out
add
push
jmp
pop
jno
loop,pt
fiaddl
push
mov
or
aaa
sbb
fstpl
mov
loopne
daa
and
stos
ret
adc
rol
xor
push
and
cmp
jl
rcrb
mov
nop
sub
jnp
mov
stos
stos
xor
cmc
les
push
jb
notl
fisttpll
pop
lods
pop
inc
cmpl
cli
sti
je
fmull
inc
jb
sti
adc
jmp
mov
aas
xchg
lret
sbb
xorl
je
mov
fmuls
sub
ficoms
data16
sti
jl
pop
decl
cmp
mov
aas
push
push
pop
sub
xchg
insb
xchg
or
dec
jmp
lea
jg
mov
imul
stos
cli
fs
aad
das
push
mov
pop
mov
push
or
es
into
mov
idivl
adc
dec
and
sub
mov
mov
fisttps
sbb
in
jne
fstps
cli
inc
dec
xchg
inc
popa
outsb
jno
cmp
jmp
es
out
iret
sub
xchg
add
mov
mov
sti
out
jle
ljmp
movsb
cltd
aaa
and
insb
jns
pop
shll
repz
andl
lret
dec
shl
ljmp
adc
rorl
adc
movsb
push
out
je
cmc
vcvtsi2sdl
pop
mov
icebp
cli
data16
int
icebp
fs
mov
lret
scas
fisttpll
push
fsubrl
int3
mov
xchg
scas
sbb
fistpl
pop
inc
jmp
ds
shlb
out
cmpsl
sbb
ds
push
pop
mov
push
lods
sub
test
sub
das
addr16
loope
sub
cmpsb
loop
repnz
pop
bound
pop
addl
xchg
jne
andl
insb
and
mov
loop
push
jp
stos
hlt
outsb
or
je
push
popa
dec
or
lcall
lods
addb
aad
sbb
push
push
ja
andb
enter
xor
std
js
push
out
adc
outsl
cmpb
mov
pop
mov
mov
add
jns
dec
sub
data16
fnstenv
ficoml
lods
aaa
cs
in
sbb
ss
cmp
sub
test
add
mov
jl
enter
jle
xlat
aam
rcl
scas
inc
mov
or
loope
lods
nop
rcrb
gs
sbb
dec
adc
in
fldenv
dec
aam
mov
test
mov
in
add
aaa
testl
repnz
pop
pop
cmp
adc
cmp
cmp
mov
ret
cmpsb
pop
inc
ja
fisubrs
xchg
scas
imul
xor
pop
out
lods
cmpsl
xchg
fdivl
push
push
in
or
fnop
inc
dec
inc
mov
sti
gs
sub
ds
jo
das
sbb
fs
mov
test
cli
mov
or
int3
fcmovnu
test
pusha
sub
iret
push
imul
pop
hlt
popa
pop
inc
in
icebp
or
js
cmp
push
pop
ret
je
in
repnz
mov
ds
test
insl
or
xor
cmp
dec
out
sbb
and
mov
sbb
ficompl
cmp
push
jno
int3
add
jns
add
popa
jl
clc
jae
in
push
popf
cmp
or
mov
pop
adc
lret
inc
sbbl
pop
js
stos
xchg
pop
add
insl
mov
pop
mov
mov
lods
mov
cmp
xchg
cmp
jbe
cwtl
sub
mov
gs
or
sti
ret
mov
test
mov
sbb
or
negl
cwtl
push
xor
insb
in
or
mov
mov
push
pop
sub
ss
leave
fisubs
mov
dec
jae
lea
cmp
aad
sub
jne
cmp
dec
xchg
shlb
clc
jmp
iret
sbb
mov
call
xor
or
add
cld
mov
and
sub
push
cs
adcb
lret
jge
xor
popf
ljmp
and
popf
das
call
mov
sub
mov
mov
push
or
xchg
bound
daa
and
jnp
fcomi
rdmsr
les
xchg
stos
std
xor
jge
cmpsb
cmpsb
pop
fcom
test
pop
test
pop
aas
cmpl
push
push
mov
mov
cmp
pop
and
sub
inc
mov
repnz
fstl
pop
cmc
dec
shrl
outsl
cld
dec
je
or
jne
ret
sbb
loopne
jne
adc
xchg
xchg
jp
mov
cmpsb
cmp
or
mov
arpl
and
popa
fidivl
pcmpgtw
sahf
repnz
hlt
pop
enter
icebp
ljmp
lret
in
cmp
mov
xchg
jmp
ljmp
lahf
fsubs
data16
cmp
mov
cmp
inc
jno
das
pop
sarl
shll
fisubrs
cmp
mov
xor
push
loopne
xlat
push
or
adc
mov
pop
sbb
lret
and
inc
adc
insb
inc
nop
cmp
jb
cmc
cmpsl
fldt
icebp
mov
inc
insl
cld
mov
mov
pop
idivl
fistpll
cmpsl
inc
sub
fstpt
add
mov
in
cmc
out
rorb
lods
xor
sub
lret
stc
mov
mov
out
ret
or
sub
pop
and
jae
xor
sbb
int3
lcall
jp
jo
iret
xchg
fildll
icebp
aam
pop
mov
xlat
movsl
out
add
and
popa
into
and
cmp
filds
imul
dec
movsl
inc
lahf
movsl
das
flds
ret
xor
or
loop
orb
lea
ljmp
mov
mov
loope
pop
andl
pop
push
outsb
mov
xor
dec
push
sbb
cmp
inc
add
dec
push
call
stc
test
popf
scas
mov
lods
stc
mov
jl
cmp
push
hlt
or
xchg
movsl
shlb
test
lret
sahf
xor
or
jo
jecxz
push
xchg
filds
aam
insl
mov
js
xchg
mov
push
out
pushf
enter
notb
hlt
cli
xchg
dec
add
push
into
inc
sbb
leave
adc
aam
jnp
aad
sbb
rclb
mov
mov
gs
mov
inc
inc
add
or
sbb
sahf
xorl
jnp
adc
subb
sub
xchg
data16
xlat
xor
test
leave
sub
jl
mov
xchg
cmc
scas
xor
mov
aas
fwait
imul
mov
scas
and
lea
add
add
fsubrs
xor
repz
sbb
loopne
push
iret
inc
xor
mov
or
add
fdivrl
out
push
jne
inc
inc
fbld
test
outsl
fs
mov
ja
push
idivl
ret
lret
xchg
add
cwtl
add
mov
aam
or
mov
or
or
or
test
adcb
mov
repz
ja
mov
dec
xor
pop
dec
mov
and
fwait
in
push
push
stos
xor
mov
test
jl
xchg
mulb
repz
cmpb
mov
fiadds
adc
jbe
xchg
push
push
push
adcb
in
xchg
enter
fisubl
in
xchg
dec
and
push
pop
push
mov
mov
cmp
repnz
xchg
xchg
jle
notl
and
mov
inc
sahf
in
data16
mov
jae
nop
inc
add
push
ss
inc
loop
data16
lret
stos
es
cmpsb
pop
cmp
in
lret
pop
push
and
cli
xchg
in
loope
pusha
sub
inc
jg
mov
push
cltd
rolb
imul
pop
shrl
cmp
sub
insb
push
xor
das
mov
dec
repz
repz
add
mov
xchg
xchg
outsb
xchg
loopne
sti
and
and
popf
in
jae
cmp
cld
vpaddw
jnp
mov
das
sbb
or
pusha
lahf
out
addb
jae
push
cmp
ss
cmpsl
xor
loope
insl
imul
jecxz
cmp
dec
mov
jmp
or
outsl
mov
ss
dec
xchg
movsb
inc
ret
ret
adc
popa
call
lock
test
cli
dec
inc
xchg
sub
call
mul
ret
pop
insl
dec
dec
hlt
sub
lret
adc
or
cmp
dec
fbld
aaa
jmp
fsubl
dec
int3
and
sub
fidivs
jbe
adc
lahf
iret
cmp
xchg
adc
scas
mov
xchg
mov
cmp
in
mov
dec
jp
push
daa
lock
adc
fucomp
xchg
les
cmp
lods
test
into
xchg
sub
xchg
cmpsl
ja
ljmp
push
cmp
test
test
daa
sub
repnz
dec
mov
testb
inc
and
pop
mov
insl
and
lret
dec
pop
xchg
gs
mov
push
sti
daa
int
xchg
dec
add
mov
dec
out
xor
imul
nop
sbb
ss
mov
out
test
push
leave
xlat
sbb
inc
add
out
and
aas
cld
add
add
sbb
push
test
loope
shl
sbb
ss
mov
jne
aas
push
jbe
and
mov
iret
pop
lods
dec
jle
aam
xor
sub
fisttpll
testl
loope
mov
not
or
aas
push
scas
mov
enter
jbe
mov
cmc
cmpsl
stc
and
xchg
mov
push
jns
lcall
mov
rol
das
orl
sahf
xor
cmp
notb
subb
push
or
repnz
mov
cwtl
das
mov
popa
jmp
popf
xchg
popl
xorb
leave
inc
out
mov
ds
add
fldz
repnz
mov
scas
aaa
mov
outsb
or
ljmp
inc
jb
ss
sbb
repnz
mov
xchg
dec
jns
aam
iret
pop
mov
out
arpl
dec
dec
sbb
int3
push
inc
lcall
push
mov
mov
xorb
data16
and
push
add
xor
ret
nop
ror
adc
fcompl
stos
fcom
and
adc
es
imul
fdiv
outsl
call
cld
ret
mov
jnp
lock
gs
jbe
leave
cmpsl
dec
in
ror
inc
aas
mov
cli
sti
jecxz
pop
jl
sahf
and
sbb
xchg
xchg
pop
iret
pushf
mov
push
push
pop
jne
hlt
scas
ret
jno
in
scas
mov
mov
jno
fisubrs
rep
scas
lods
shr
mov
pop
dec
add
cmp
add
lret
pop
jo
leave
xchg
and
push
push
fbld
fdivp
pop
pop
das
out
ficomps
mov
push
test
fcompl
mov
push
push
and
jl
movsl
mov
bound
ds
jge
dec
push
jnp
daa
lods
mov
leave
xchg
push
aas
push
cmp
gs
shll
fs
add
cmpsb
popa
and
in
ss
xchg
jo
icebp
mov
jl
cs
in
dec
pop
mov
push
movsb
xlat
sub
push
lret
mov
mov
inc
rol
mov
dec
jb
adc
ljmp
jg
ds
push
dec
or
push
xchg
add
jne
inc
cli
mov
jmp
pop
and
jns
aas
rolb
mov
stc
pop
outsl
cltd
cmp
mov
div
into
sub
inc
cmp
xlat
cmpsb
mov
rclb
hlt
adc
cmp
adc
test
mov
sub
hlt
inc
addr16
dec
dec
add
cmp
xchg
pop
sbb
cmpsl
pop
into
mov
inc
scas
adc
pop
or
aad
mov
fdivp
scas
sbb
lds
test
stos
pop
nop
mov
insb
jae
mov
andb
mov
mov
fnstcw
sbb
dec
cmp
push
mov
ja
fsubrs
daa
decb
dec
pop
sahf
je
imul
jge
jo
lret
add
fdivrs
add
in
xor
ret
and
or
test
adc
jo
loop
daa
out
add
fs
dec
lret
mov
xor
ja
cld
mov
cmp
mov
and
imul
push
mov
dec
pop
cmc
mov
add
ret
pop
int
jo
sahf
sarl
mov
into
loope
xchg
negb
mov
xor
mov
or
pop
dec
mov
cmp
lahf
push
mov
loopne
pop
out
or
scas
shll
ret
jne
or
sub
mov
fdivl
fstpl
loope
inc
inc
cltd
inc
aam
jnp
mov
push
test
push
inc
jl
and
mov
adc
imul
xor
jl
xlat
or
mov
js
bound
and
rorl
idivl
aas
mull
lcall
das
mov
pushf
cld
shlb
cli
dec
ds
mov
mov
gs
lret
nop
cmpsl
xchg
or
sub
addr16
jns
xchg
loop
inc
mov
aas
xchg
pop
inc
cmp
js
lahf
mov
xor
adc
into
mov
mov
push
adc
pop
lods
mov
fnstsw
lcall
andb
add
movsl
out
sti
sahf
pop
xlat
xchg
gs
jecxz
aaa
dec
sahf
inc
clc
push
adcb
pop
mov
and
inc
dec
adc
mov
xor
jbe
fldenv
into
push
push
pop
dec
call
enter
scas
push
jbe
mov
into
in
pop
fwait
mov
mov
das
mov
push
cld
cwtl
cmc
mov
sti
sub
adc
or
push
cwtl
jl
fisubrl
push
sti
stos
hlt
push
loopne
mov
test
nop
jg
mov
cmp
mov
andb
or
in
fistl
fwait
lds
xchg
xchg
fstl
call
inc
inc
mov
cmp
mov
xor
xor
fcoml
and
subb
jb
dec
cmp
push
sti
in
jo
sbb
lods
cmp
inc
cli
mov
icebp
popa
loopne
dec
pop
dec
mov
pop
loopne
push
lret
xchg
adc
daa
pushf
popa
pop
cmp
push
lods
mov
adc
pop
xchg
daa
jg
xor
add
dec
mov
mov
movsb
jmp
inc
mov
aaa
cmp
arpl
push
stos
push
lea
push
in
xchg
cmp
sub
xchg
jnp
and
int3
hlt
xchg
cld
das
mov
jne
mov
fisubrs
jmp
dec
pushf
leave
fldcw
addr16
pop
xchg
add
dec
test
dec
add
cmp
xor
jle
or
test
dec
and
jmp
out
mov
out
fwait
out
rcll
xchg
dec
repz
cmp
inc
mov
addr16
sbb
mov
jecxz
lret
in
jle
mov
filds
imul
add
add
add
cmp
in
mov
mov
mov
lock
inc
jp
mov
inc
jge
je
insb
dec
sbb
ror
inc
test
fs
arpl
outsl
pop
cwtl
mov
sarl
ds
mov
push
sbb
les
movsl
dec
add
xchg
js
cltd
jae
xchg
sbb
adc
xchg
mov
outsb
pop
xor
push
call
and
lock
jo
stos
adc
mov
or
in
mov
addr16
repz
push
aam
addr16
mov
imull
bound
fcoms
iret
hlt
fnstsw
mov
mov
stos
lods
xor
dec
push
push
xor
xchg
lret
lea
insb
pop
insb
lret
sub
sti
adc
scas
and
push
mov
push
dec
dec
lret
enter
repnz
adc
ljmp
mov
loop
sbb
xor
jo
jl
out
mov
and
clc
cmpsb
shl
push
outsb
push
in
jno
loop
daa
cld
inc
xchg
mov
and
fnstsw
stos
in
mov
jp
and
int
jmp
iret
into
mov
leave
xor
push
lahf
push
pop
pushf
ret
shll
xchg
cmp
sarl
push
xchg
mov
mov
add
dec
in
xor
sub
dec
testb
stos
in
and
jmp
out
lret
sub
pop
dec
xchg
cltd
pop
ljmp
ffreep
mov
mov
jbe
or
adc
dec
jp
adc
into
addb
subb
push
loope
adc
cltd
shll
xchg
and
lret
in
lea
lahf
cmp
cwtl
push
jmp
roll
pusha
dec
outsb
xor
mov
ss
mov
and
aaa
xchg
lahf
scas
test
popf
dec
fwait
imul
js
int
xchg
jne
jbe
mov
push
pop
xchg
lret
and
and
call
jae
push
and
xchg
adc
fdecstp
mov
mov
cmp
or
rclb
add
fadd
loop
fildl
cmp
mov
mov
dec
sub
mov
es
xor
out
mov
mov
and
mov
jecxz
sti
mov
ja
imul
loopne
scas
pop
sbb
xor
sbb
add
out
jle
shlb
and
std
cmp
cmp
in
mov
stos
out
cli
jl
ja
mov
lcall
adc
and
call
xor
loope
mov
or
xlat
data16
xchg
ja
in
sbb
cltd
mov
pushf
sub
dec
xchg
in
imul
fldl
into
jns
mov
ljmp
and
insl
mov
bound
mov
test
sub
mov
fnstcw
icebp
cmp
insl
in
mov
adc
pusha
imul
scas
cmpsl
adc
in
adcb
push
sub
ret
repnz
add
pop
aad
jns
add
adc
out
outsb
in
sbbb
jbe
add
call
dec
mov
xchg
outsb
jp
movsb
stc
repz
pop
cs
jle
es
in
gs
jb
pop
jp
mov
xlat
xchg
adc
dec
lahf
repz
outsb
push
or
mov
inc
loope
dec
mov
or
add
sti
pop
adc
lret
xor
stos
das
ficomps
jne
lods
xchg
jne
pop
lcall
fwait
les
outsb
inc
cmp
sbb
fstpt
mov
sbb
pop
pop
xchg
test
mov
lret
aad
mov
lock
pop
pop
icebp
or
punpckhdq
mov
cmp
shlb
pop
aas
les
dec
jp
xchg
daa
xchg
sarb
cmpsb
leave
stos
xchg
sbb
loop
shll
ljmp
mov
sbb
jno
sbb
pcmpeqb
xor
or
repnz
adc
add
scas
dec
inc
cmpsb
shrb
xchg
lods
add
cmc
pushf
xchg
dec
or
js
mov
stos
adc
mov
sub
ret
pop
mov
xchg
xor
sub
xchg
fbld
loopne
and
lea
imul
sahf
xor
jns
xor
add
loope
fldenv
test
xchg
and
inc
jp
cmpsl
ret
cmc
lea
mov
push
mov
cld
mov
mov
pop
sub
adc
jmp
out
cltd
jne
lcall
enter
les
out
inc
xchg
push
jnp
add
push
les
lcall
int3
shlb
dec
xchg
mov
mov
adc
cmp
mov
push
scas
lock
or
dec
add
out
and
xchg
push
mov
inc
jns
jp
xchg
adc
pop
sbb
enter
test
jnp
sub
jl
aad
popf
ja
adc
sbbl
mov
dec
mov
ror
lods
ljmp
mov
or
mov
and
addr16
mov
in
or
repnz
insl
adc
sarb
es
dec
inc
out
scas
les
jnp
xchg
adc
mov
pusha
xchg
jns
push
scas
andb
out
andl
cltd
mul
sbb
int3
push
test
cmc
stc
cld
je
mov
push
ret
jle
pop
push
push
inc
imul
inc
xor
or
mov
aad
fisubrl
xchg
mov
movhps
aaa
jnp
in
cmp
xor
add
and
mov
push
mov
add
es
mov
add
mov
es
inc
or
aas
lcall
xchg
pop
in
sti
outsb
xchg
push
dec
dec
jmp
dec
ss
in
mov
test
pusha
popa
mov
add
rclb
stc
pop
inc
adc
cld
xchg
push
stos
cmp
inc
daa
loope
pop
cs
push
jmp
cmp
pop
cmp
jbe
push
xchg
mov
fwait
xchg
popa
pop
jl
jl
push
ja
sbb
lds
in
and
leave
pop
push
stos
sbb
mov
movsb
sbb
cli
mov
pop
jmp
leave
loope
test
add
cmp
push
sbb
int
dec
mov
mov
sysexit
and
ljmp
daa
into
xor
xchg
or
lds
sahf
inc
add
jl
insl
push
ret
daa
xor
lods
add
sub
and
xchg
outsb
adc
test
lret
mov
cmpsl
inc
je
dec
mov
rcll
or
into
push
add
inc
xchg
sub
rcr
les
push
pop
mov
frstor
or
mov
test
cld
or
in
mov
sbbb
xlat
inc
or
xchg
push
lcall
repnz
ret
jbe
dec
xchg
out
arpl
adcl
sub
inc
and
dec
and
cmp
aam
inc
xor
enter
andl
and
jl
std
inc
xor
xchg
rolb
pop
mov
mov
lods
sub
or
add
jne
inc
pop
test
movsb
dec
lret
mov
leave
push
inc
das
pop
imul
adc
scas
sub
fstps
jo
xchg
xor
int
add
or
inc
pushf
mov
fdivrl
or
clc
mov
scas
inc
xchg
sbb
test
repz
pusha
mov
add
xchg
sahf
stos
dec
push
mov
pusha
aam
sub
jb
in
lods
pop
fcmovbe
xchg
inc
jecxz
cmpb
sahf
inc
inc
cmc
jle
inc
mov
jnp
enter
pop
and
mov
push
enter
cltd
xchg
cmp
mov
jmp
dec
push
loopne
push
and
pop
pop
push
sbb
xor
enter
sbb
fnstenv
push
insl
inc
repz
int
mov
xchg
fucom
lock
out
scas
lds
mov
xor
iret
test
or
mov
in
call
inc
xchg
out
lods
mov
sbb
ss
repnz
sbb
cmpsb
rcll
fdivl
dec
jnp
mov
xchg
ljmp
jnp
dec
iret
jbe
jns
jp
bound
mov
orl
inc
mov
loop
inc
or
cmp
cmp
cmpsb
sti
jnp
std
dec
or
ds
mov
ret
outsb
mov
xchg
push
repnz
ret
jmp
nop
cmp
flds
mov
je
and
lret
push
fdivr
bound
sahf
cmp
mov
fildll
out
xchg
int
shlb
shrb
insb
cmp
sahf
dec
pop
pop
xor
adc
pop
add
and
daa
int
aad
repnz
mov
push
in
lea
rorl
add
scas
push
fnsave
mov
pop
dec
mov
push
iret
push
mov
lds
sbb
nop
push
les
lcall
mov
lret
fwait
pusha
jl
shl
imul
imul
inc
mov
call
cmp
repz
fwait
add
xlat
pop
push
mov
or
inc
int
or
adc
xchg
dec
in
push
mov
pop
mov
sub
add
sub
loop
lock
jo
push
pop
fisttpll
xchg
sar
jbe
add
mov
icebp
cmc
fisubl
bound
out
jbe
in
das
repz
roll
mov
sarl
lret
scas
popf
and
leave
int3
jns
xor
xchg
sti
add
ja
lock
call
adc
shlb
jnp
stc
mov
mov
dec
popa
gs
outsl
or
pop
xor
inc
add
jecxz
inc
push
or
cmp
int
aaa
mov
push
andb
mov
jno
or
lret
addr16
push
mov
xchg
cmp
pusha
lret
mov
cmpps
jge
pop
xchg
flds
clc
mov
gs
pop
add
icebp
lret
sbbl
jnp
push
adc
dec
insl
xchg
sbb
loope
int
jecxz
stos
insb
xchg
or
les
jae
enter
ret
jo
mov
out
xchg
mov
popf
mov
test
and
push
cld
icebp
enter
pop
pop
mov
scas
sbb
or
imull
movsb
mov
and
ja
sub
cmp
pop
add
cwtl
enter
or
sbb
cmp
lahf
dec
dec
sub
int3
shlb
mov
add
imul
mov
xor
mov
scas
or
push
xlat
adc
pop
xor
cmp
imul
inc
cwtl
push
movsl
addr16
dec
adc
pushf
pop
outsb
dec
adc
ror
pusha
jnp
inc
lds
push
pusha
jns
into
jp
sub
inc
outsl
mov
jnp
cmp
and
mov
out
add
push
cmp
je
aaa
into
xor
mov
mov
repz
sub
and
cmpsl
xlat
mov
pop
repz
sub
push
pop
xor
jp
pop
and
sub
xchg
addr16
mov
jb
rorl
add
jge
jae
lods
stos
or
lods
popa
xchg
xor
ss
mov
movl
xlat
or
lods
out
cmp
jno
int
lret
jno
rcrb
insl
std
into
mov
jge
mov
mov
imul
or
add
jl
les
pop
sahf
out
mov
xchg
ja
jecxz
movsb
adc
push
cmp
push
xchg
cmp
push
mov
xchg
into
hlt
icebp
inc
xor
push
pop
stc
aad
daa
loop
mov
mov
dec
mov
sbb
mov
jle
and
rcll
sbb
mov
int3
cmc
push
xchg
cltd
cmp
addb
sub
sbb
xor
pop
bound
push
xchg
sbb
movsl
dec
les
lock
inc
or
in
and
aam
es
lret
adcb
and
lods
and
xor
mov
lock
pop
stos
pop
sbb
push
jno
mov
push
xor
pop
cmc
push
cmp
pushf
lahf
cmp
out
dec
repnz
cs
push
dec
mov
outsl
enter
das
cmp
mov
push
stc
cmpsb
jo
cmp
cmp
add
mov
sub
cmp
adc
push
in
push
iret
es
lahf
jle
jne
inc
lret
int
inc
jae
jo
sub
das
xchg
pop
add
icebp
insl
mov
jno
stc
lea
push
mov
sti
mov
xor
fisttps
cld
in
pop
add
lea
adc
mov
push
cwtl
add
or
sub
jecxz
xor
imul
jns
mov
xchg
outsl
inc
hlt
xchg
pop
cwtl
or
aad
lret
mov
add
pushf
stos
in
ret
or
mov
xor
repz
rcr
ds
inc
imul
jbe
dec
mov
xchg
out
adc
lds
dec
jnp
pop
imull
xchg
insl
mov
and
mov
xor
push
or
xchg
push
icebp
in
inc
std
sub
outsb
push
call
xchg
xlat
dec
mov
jg
sbb
dec
ret
movsb
cmp
orl
rcrl
test
addl
movb
xor
test
ret
iret
push
sub
push
xor
mov
fdiv
mov
sub
pop
xchg
lods
xor
add
jmp
ljmp
mov
je
addr16
and
cmpsb
jb
sti
in
push
adc
sbb
jae
imulb
cs
insb
lds
jae
mov
jne
test
mov
mov
cmp
sbbl
mov
imul
and
jmp
jge
sbb
lods
fs
and
and
rcrl
xor
mov
mov
cmp
or
es
ja
dec
sbb
jo
pop
mov
movsb
jne
cmp
sbb
clc
movl
outsb
cmp
xchg
cmp
sub
jp
in
addr16
fcoml
sub
cmc
orb
or
arpl
mov
adc
or
sub
sub
xor
movsb
inc
push
push
sahf
adc
fdivr
pop
mov
movsl
xlat
inc
lahf
das
incl
sbb
xchg
outsl
sbb
xor
mov
mov
lcall
or
stos
mull
push
inc
cmp
and
mov
hlt
jmp
push
inc
cli
push
pop
in
xchg
mov
jg
inc
jo
mov
scas
test
xor
insb
inc
xchg
loopne
and
fs
rol
hlt
adc
xchg
cmp
cwtl
dec
mov
js
inc
movaps
jmp
add
xchg
adc
enter
dec
jae
popf
and
subl
mov
stos
mov
lcall
xor
test
add
shll
shrb
adc
icebp
dec
xchg
int
inc
out
jecxz
cmp
and
push
cmpsb
mov
cmc
mov
adc
lcall
mov
std
adc
mov
clc
sub
cmpsb
jle
aaa
push
test
cs
cld
mov
push
jbe
pop
mov
xchg
mov
mov
xchg
outsb
push
mov
jb
rorl
mov
jae
cmp
and
outsb
sub
jge
inc
ljmp
daa
aaa
jae
lret
sub
push
pop
xchg
test
daa
je
xor
shl
repz
into
xchg
cmp
add
inc
mov
dec
mull
cmp
push
in
mov
xchg
xchg
out
int
mov
scas
cmpsl
ljmp
jne
xlat
xchg
cs
push
jne
sub
push
sub
cwtl
lea
or
das
cmp
les
out
sbb
test
mov
mov
xlat
ljmp
vpcmpgtb
mov
xlat
loop
sbb
adc
jecxz
sti
sub
jp
dec
xorl
mov
jl
mov
cmpsl
icebp
je
mov
sbb
jno
out
pop
dec
fcmovbe
fadd
cli
fsts
inc
or
push
mov
aad
xchg
add
scas
xlat
sub
loopne
xchg
mov
inc
jo
stc
ss
lods
push
jl
xor
mov
mov
scas
ss
arpl
rorb
fldenv
mov
gs
adc
mov
into
fdivrl
int
mov
cmpsl
sub
outsb
adcl
inc
mov
pop
rolb
das
push
mov
jle
cmp
push
fs
test
pop
sbbl
cmp
sti
lahf
mov
aad
fdivrl
aam
ret
stc
adc
out
clc
ret
mov
int3
cmc
nop
test
inc
push
das
jns
xchg
clc
mov
repz
adc
or
inc
sbb
call
pop
ret
daa
lret
inc
rcrb
push
fisubl
sahf
mov
pop
imul
jg
dec
jns
enter
or
inc
insl
jl
notl
xor
mov
add
mov
lods
xchg
iret
sub
out
sub
cltd
call
xor
mov
fsubrl
fcomps
pop
mov
ljmp
mov
test
dec
pop
lret
or
xor
mov
andb
in
cmp
jnp
lcall
sbb
into
bound
jbe
jbe
aad
xchg
enter
les
movsl
ljmp
mov
xor
xor
mov
clc
idivl
and
mov
ds
js
pop
inc
push
orl
sahf
and
fwait
push
jnp
aas
xchg
movsb
out
mov
stos
lcall
inc
or
mov
rclb
cmp
add
stos
xor
lods
ret
mov
jae
and
push
sub
jnp
repz
push
xchg
call
test
nop
ret
fsubs
add
sub
movaps
adc
push
add
imul
ficoml
ret
clc
call
jge
imul
xchg
push
adc
push
loope,pn
and
jno
cmp
mov
sti
inc
orb
add
aaa
push
sbb
pop
pusha
scas
cmp
ss
cmc
arpl
sub
or
xchg
jbe
inc
or
adc
dec
ss
aas
clc
arpl
cs
xchg
cmp
out
int
loop
inc
repz
mov
imul
pop
cld
fcmovne
sub
inc
push
mov
outsl
add
popf
jne
jns
lret
adc
and
mov
scas
cwtl
push
inc
sbb
movsl
add
inc
ret
xchg
in
adcb
scas
cmp
and
in
popf
push
push
jae
lods
pop
fs
xchg
mov
xor
and
out
mov
aad
popa
jmp
std
sub
faddl
gs
dec
dec
mov
fcmovnbe
out
call
dec
add
mov
push
jg
imul
sbb
insl
daa
int3
int
shrb
repnz
cmp
or
jnp
pop
hlt
lock
pop
dec
popf
pop
pusha
lret
inc
jbe
test
mov
data16
fmuls
arpl
mov
sbb
or
lcall
push
jecxz
stos
andl
sub
shll
movsl
sbb
scas
fs
mov
sbb
cmc
sub
cmpsb
test
fsubs
pop
add
add
pusha
frstor
imulb
ljmp
cmp
cmpsb
std
test
sbb
bound
dec
iret
stos
ss
fcoms
lahf
pop
cltd
mov
mov
xchg
jmp
imul
outsl
jecxz
jmp
cmpb
lock
insl
ret
ret
in
out
in
leave
js
jecxz
xor
jo
xorl
int3
pop
and
popf
shrl
dec
sbb
lods
aam
mov
xor
xchg
fsubr
jno
in
sahf
add
imul
hlt
js
aad
cmp
jnp
inc
or
fsts
rcll
jns
jns
xchg
pop
or
adc
cmp
stos
int
pop
aaa
and
and
pop
call
or
xchg
repz
fucomi
push
loope
outsl
pop
insl
inc
mov
subb
std
jg
and
mov
cmp
test
js
cltd
loop
out
jg
daa
dec
jbe
mov
xchg
aam
and
sbb
inc
clc
lahf
daa
inc
cmpsl
mov
popa
jp
jl
and
roll
push
push
pop
iret
dec
test
fwait
xor
sub
popa
pop
or
jbe
loope
mov
test
pop
sub
inc
xchg
shll
inc
shll
out
push
or
jmp
pop
int3
mov
lret
and
es
jp
fisubl
repnz
int3
in
and
mov
popw
add
les
mov
bound
sbb
or
std
icebp
cmc
add
lea
fbstp
jp
loop
xchg
xlat
jno
and
adc
sbb
cmp
stos
cld
rorb
mov
jne
cmp
inc
dec
sbb
mov
add
imul
lret
cmp
xor
int
mov
das
sti
push
add
inc
sub
js
sahf
xchg
fs
scas
jbe
fdivrp
inc
bound
pusha
popf
cwtl
ja
movsl
fldl
mov
mov
adc
bound
inc
jmp
mov
stos
in
lea
mov
mov
xor
pop
push
mov
or
fnstenv
pop
add
dec
enter
push
mov
in
xorb
cmp
sbb
clc
jg
jns
mov
xchg
sti
pop
cmpl
stos
or
mov
mov
add
xchg
cmpb
leave
inc
daa
movsb
and
aas
movsb
adc
mov
inc
jle
xchg
mov
hlt
addr16
pop
movb
push
cmp
push
mov
arpl
push
stc
inc
ds
arpl
pop
xchg
call
mov
into
fistpll
ret
jle
xchg
or
push
out
lahf
mov
add
xor
xchg
das
mov
out
xlat
shll
or
dec
out
cltd
fiadds
adc
sbb
push
cmc
mov
lret
jnp
cmp
stos
jno
sbb
pop
and
into
loopne
negb
push
or
mov
sti
lods
cltd
loopne
jb
push
scas
clc
stos
outsb
or
lahf
and
mov
imulb
in
leave
js
jge
mov
pushf
cmp
sarl
push
iret
cmp
fs
mov
dec
mov
xchg
and
cli
or
mov
hlt
push
push
test
ret
inc
xchg
push
sahf
push
sub
mov
and
daa
jge
decl
arpl
xlat
sahf
adc
adc
dec
fsubrs
and
xor
dec
out
push
icebp
adc
xor
pusha
adc
and
xchg
cwtl
fcoml
fcom
aaa
xchg
jne
lock
mov
inc
cmp
cmp
mull
pop
stos
leave
loopne
xor
and
aas
adcb
repz
pop
rol
adc
xchg
jg
mov
pop
add
sbb
xchg
mov
filds
rcrl
bound
and
jl
mov
xor
add
dec
hlt
ss
std
sub
aas
pop
popa
repnz
adc
and
sub
and
bound
jnp
push
fs
ss
scas
or
mov
adc
aam
aam
popl
enter
xor
push
pop
jnp
push
cmpsb
cmpsb
pop
sbb
call
mov
inc
push
icebp
or
adc
add
adc
mov
pop
mov
scas
mov
cmp
mov
ja
mov
inc
ret
jne
insl
push
jmp
pop
push
scas
imul
ja
mov
xchg
mov
gs
fdivp
subb
sub
cmp
jmp
pop
sub
fwait
in
aas
push
shll
mov
or
stos
jbe
dec
mov
adc
mov
push
push
xchg
cmp
loop
icebp
push
and
or
aaa
xchg
in
cmp
inc
dec
movsl
popf
pusha
sarb
jae
cltd
inc
dec
jge
push
in
icebp
and
pop
ljmp
jge
loop
xlat
imul
xorb
xchg
mov
mov
lods
jle
xor
rcrl
adc
inc
out
xchg
daa
pop
sbb
mov
cmp
push
pop
mov
les
sub
inc
fnsave
loop
loop
push
xchg
add
leave
mov
jp
mov
bound
sub
in
fstps
outsb
test
xchg
mov
xor
xchg
ror
mov
rorl
xchg
das
popa
xchg
xchg
and
push
push
sub
rcrl
outsb
cmp
xchg
or
dec
mov
push
mov
inc
xchg
stos
dec
fwait
xchg
adc
mov
mov
cmpsb
jecxz
mov
adc
lods
push
ja
xor
and
mov
jne
flds
adc
out
lds
int
or
insb
and
xchg
mov
mov
loopne
outsl
mov
add
daa
push
movsl
jne
fwait
leave
je
ljmp
dec
xchg
cltd
cmp
inc
gs
push
dec
rcll
xchg
bound
mov
and
sarl
sbbl
xchg
enter
jae
psrad
inc
and
test
pop
xor
adc
and
inc
subb
adc
ret
cli
subl
sub
cmpb
clc
mov
sbb
sub
ljmp
fisubrs
and
sbb
into
shlb
push
fcompl
sbb
scas
movsb
mov
sub
sbb
inc
sbb
cmp
int
sbb
inc
ficoms
das
pop
mov
outsb
dec
inc
sbb
jl
push
pop
cmpsl
inc
adcl
jo
jns
out
or
es
mov
jmp
not
jb
jns
xorb
push
mov
xchg
cmp
or
ficompl
cmp
and
push
sbb
pop
cmp
lock
arpl
or
inc
and
mov
add
xchg
dec
dec
xor
jle
shrl
xor
es
sbb
mov
add
popf
inc
or
pusha
les
dec
scas
push
leave
lds
jne
shll
mov
sub
xlat
xchg
stos
dec
cmp
and
roll
ret
aam
cmp
cmp
push
lods
sbb
out
jp
xor
test
xor
push
out
xchg
sbb
push
mov
js
push
or
jo
scas
popf
fprem
cmp
call
lods
outsl
jg
xchg
rcr
sub
dec
jl
js
jne
sbb
fsubrl
push
scas
fsubrl
dec
dec
bnd
lcall
dec
add
lret
adc
add
mov
jb
leave
stos
bnd
or
jp
dec
jmp
sbb
notl
pop
cltd
sub
sub
es
mov
sbb
fldenv
mov
dec
sub
leave
in
cwtl
in
shll
sbb
or
or
xchg
sub
rolb
and
sub
and
ljmp
xor
jo
outsl
cli
icebp
jp
cli
gs
cltd
std
mov
outsl
sbb
icebp
add
int
push
jae
cmc
ss
mov
lahf
adc
xchg
sti
push
mov
jnp
adc
das
mov
jmp
fiadds
adc
xorl
js
mov
jbe
xchg
insb
ret
and
xchg
lea
sbb
inc
std
pop
push
aad
mov
jbe
je
loop
in
pop
movsl
stos
je
rol
adc
outsb
pusha
jecxz
je
mov
and
mov
lahf
dec
test
into
out
int
dec
inc
addl
jnp
lock
jae
lcall
mov
mov
cmp
pop
mov
dec
push
xorl
test
repz
xor
inc
and
insb
stos
cltd
in
pop
cli
mov
add
ja
and
cmpsb
mov
outsl
sarb
jge
aas
mov
shlb
test
pop
es
scas
cmp
xor
dec
push
mov
dec
imul
jp
imul
stos
xchg
dec
push
sbb
mov
arpl
adc
pushf
pop
sub
cmpsl
fcoml
imul
sbbl
bound
lds
cmp
jmp
jmp
ljmp
mov
imul
pop
xlat
mov
sub
call
rcl
pop
mov
test
out
push
out
dec
jnp
mov
and
pop
test
jo
adc
adc
mov
mov
pop
stc
mov
and
icebp
adc
into
sub
xchg
fdivs
jmp
add
jecxz
loop
pop
dec
pop
lods
or
mov
inc
cmp
sbb
mov
xor
loopne
pop
cwtl
inc
xor
xlat
jle
cmp
fistl
fildll
pop
scas
inc
or
fwait
dec
clc
popa
mov
sub
and
push
jge
and
xor
xchg
xor
dec
push
fcomps
sti
jne
dec
dec
xchg
lret
sbb
or
sub
daa
cmpsl
xchg
dec
arpl
call
add
fwait
outsb
jne
rolb
jne
mov
inc
daa
add
iret
lret
jns
hlt
aaa
mov
aam
xor
inc
xchg
notl
iret
adc
pusha
pusha
int
mov
loop
sub
in
sub
jle
mov
xchg
dec
movsb
dec
test
dec
mov
mull
xor
ret
lock
and
les
and
add
jecxz
movsb
cmpsl
adc
test
inc
andb
xor
add
in
arpl
sbbb
inc
push
sub
add
dec
cmp
rorl
iret
xchg
sub
or
push
dec
divl
pop
xchg
pop
icebp
packuswb
adcl
das
lods
test
lea
ret
decl
xor
sbb
inc
xor
fistpl
negb
rcrl
movsb
xor
jns
or
inc
orb
ljmp
push
sub
push
enter
sub
cmp
in
jle
push
sub
add
pop
fcoms
sbb
mov
decl
adc
push
pop
mov
pop
mov
lods
ja
xchg
jno
arpl
or
pop
dec
out
daa
cld
dec
aad
and
adc
hlt
sarl
clc
jnp
scas
xchg
mov
roll
jne
fisubrs
inc
dec
mov
popa
inc
push
add
sbb
ffree
push
inc
adc
sbb
xor
aad
test
fiaddl
dec
jl
stos
jmp
cwtl
sub
mov
ficompl
push
rep
je
mov
mov
dec
icebp
stos
sahf
cld
dec
into
jmp
scas
xchg
push
leave
pop
mov
jno
lods
add
add
jecxz
addl
add
mov
add
repnz
popa
insb
xor
cmp
push
xor
ss
push
jae
xor
and
popa
imul
inc
jo
inc
jae
js
xor
and
jp
aaa
push
and
cmp
add
push
pop
xor
and
je
addr16
xor
insb
je
jbe
jns
inc
dec
inc
jae
xor
push
and
jb
aaa
xor
xor
jae
add
xor
jae
aaa
jp
push
and
push
inc
outsl
push
imul
inc
jo
imul
outsl
ja
add
push
outsl
outsl
inc
push
xor
inc
add
xor
inc
cmp
push
addr16
dec
jb
and
outsb
jbe
and
cmp
xor
xor
jbe
push
outsb
fs
cmp
aas
and
aaa
jno
aaa
addr16
je
cmp
cmp
bound
dec
data16
push
cmp
outsb
imul
aam
adc
add
adc
fsts
add
inc
adc
or
add
adc
test
adc
push
adc
cwtl
jp
add
sub
add
add
inc
adc
xor
adc
loopne
adc
add
add
dec
adc
mov
dec
adc
inc
push
adc
pop
adc
xor
add
and
add
push
add
movups
xor
adc
scas
inc
adc
jecxz
adc
jl
adc
adcb
stos
push
adc
insl
movups
mov
je
add
adc
sub
add
adc
mov
sub
add
adc
sbbb
and
adc
mov
add
adc
and
adc
xchg
push
adc
dec
jp
add
insb
adc
in
adc
into
aaa
adc
jl
adc
and
adc
inc
jge
add
pop
adc
mov
dec
adc
in
adc
dec
cmp
add
pop
adc
ljmp
add
cmp
add
push
adc
push
adc
push
add
inc
xor
je
add
popa
sub
add
inc
and
xor
cmp
inc
and
sub
cmp
jae
pop
inc
ss
je
and
insb
bound
push
cmp
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
push
pop
dec
cmp
pop
aaa
pop
inc
ss
add
push
xor
cmp
aaa
xor
push
dec
inc
xor
pop
push
aaa
push
add
inc
pop
dec
xor
push
xor
inc
xor
xor
xor
add
inc
xor
pop
pop
ss
push
add
aaa
xor
dec
ss
inc
xor
add
push
pop
dec
cmp
push
pop
cmp
dec
add
cmp
pop
pop
xor
pop
dec
add
xor
inc
xor
pop
dec
xor
ss
dec
dec
inc
inc
add
dec
xor
xor
push
dec
xor
inc
push
push
pop
xor
cmp
dec
add
dec
cmp
pop
ss
pop
inc
push
push
dec
dec
add
pop
pop
inc
push
dec
xor
dec
dec
pop
pop
xor
cmp
add
xor
xor
xor
pop
cmp
inc
push
aaa
pop
aaa
xor
dec
dec
add
inc
xor
pop
dec
dec
dec
dec
xor
pop
inc
add
dec
pop
push
push
dec
push
push
pop
dec
dec
dec
inc
add
xor
dec
add
pop
add
push
add
xor
add
add
push
add
xor
inc
add
add
add
pop
add
add
dec
add
cmp
cmp
inc
add
add
inc
add
pop
add
push
add
dec
add
inc
add
xor
pop
push
add
inc
add
xor
dec
add
xor
cmp
aaa
add
xor
xor
add
aaa
add
dec
add
push
add
add
xor
pop
add
dec
push
add
xor
pop
add
add
push
add
aaa
add
add
add
add
xor
pop
add
cmp
inc
add
pop
add
xor
push
add
dec
add
add
add
aaa
add
inc
add
xor
add
push
add
add
add
pop
add
dec
add
xor
pop
add
add
add
push
push
inc
push
jnp
jne
xchg
dec
mov
mov
mov
sbb
push
cmp
inc
jae
jns
pop
imul
pop
jne
jbe
gs
jo
push
outsb
jne
insl
pop
dec
ja
insl
dec
addr16
bound
in
add
pop
fldl
push
add
test
push
add
add
add
ror
fwait
imul
sub
add
add
mov
repnz
inc
add
mov
rolb
add
sbb
pop
mov
inc
outsb
add
mov
outsb
sbb
sbb
xor
jp
ficomps
iret
nop
nop
push
mov
add
add
pushf
rorl
mov
push
fdivrl
or
cmp
adc
dec
jno
dec
test
rolb
stc
imul
fistpll
mov
and
dec
dec
lods
iret
insl
or
sbbb
add
scas
push
ret
adc
add
int
stc
or
xchg
mov
pusha
lcall
mov
ja
mov
mov
adc
cmp
aad
mov
cmp
scas
mov
xor
popa
rclb
in
and
xchg
je
cmpsb
test
inc
les
or
and
or
stos
adc
adc
jo
out
lea
jbe
dec
cli
fcoms
mov
mov
ret
scas
mov
test
inc
pop
and
rcl
lahf
mov
pop
cmpsl
test
or
pop
fstpl
insb
repz
cld
cmpsl
cmp
out
jo
cwtl
push
andb
enter
push
jb
xchg
daa
mov
mov
movswl
stos
repnz
fmull
and
sub
pusha
mov
mov
pop
jns
add
arpl
push
adc
lret
stos
push
and
addr16
and
adc
mov
mov
lds
dec
sbb
shl
loopne
divb
xchg
dec
cmpsl
push
cltd
cmp
xchg
jmp
aaa
ja
push
and
fsub
xchg
inc
and
add
aad
es
pusha
mov
pop
cmp
fisubrl
int
les
xchg
inc
imul
sub
hlt
int
cmp
ds
das
stos
pop
jp
sbb
cmc
lret
xchg
fiadds
test
adc
pop
dec
sub
out
mov
out
bswap
mov
mov
push
and
mov
push
mov
pop
or
mov
sbb
and
cmpsb
test
inc
ljmp
cmpsl
xor
imulb
push
push
mov
push
and
cmp
aaa
mov
sbb
cmp
pop
or
mov
mov
aas
iret
out
xchg
ds
sbb
add
pop
popa
jb
in
sbbb
fidivrl
push
in
ret
in
ds
push
xchg
jg
inc
cltd
and
lds
adc
xor
outsl
loop
mov
pop
adc
inc
mov
dec
push
and
bound
out
movsb
cmc
sahf
or
xor
sub
insb
and
repnz
or
xchg
lahf
lea
sbb
sbb
push
aaa
or
stc
arpl
xchg
sub
ja
fisubrs
xor
sub
add
shlb
jmp
mov
dec
mov
xor
cmpsb
out
cmp
dec
stos
insl
lret
fs
das
push
mov
xor
in
outsl
sub
and
jb
inc
inc
xchg
fs
or
jecxz
shl
or
jle
or
fwait
cld
pop
mov
mov
mov
pusha
rep
xchg
mov
cmp
xlat
sahf
mov
mov
ret
jno
push
push
repz
lods
test
in
jmp
jg
mov
pushf
aad
ss
outsl
aam
dec
xor
add
not
add
push
pop
mov
push
pop
mov
mov
jnp
xor
push
push
gs
adc
xchg
lea
sti
cmp
mov
lea
cmp
xchg
icebp
movsb
cmc
inc
popa
repnz
sbb
mov
int3
push
mov
xor
push
dec
mov
movsb
xchg
sub
adc
xchg
leave
cli
push
lock
xor
notl
push
ds
jmp
int3
sbb
pop
jnp
aas
aas
shlb
push
sub
aas
leave
dec
enter
push
data16
test
cmpsl
add
dec
loope
ss
fwait
mov
or
ror
test
cs
xor
and
sahf
sub
bndldx
addr16
sbb
daa
repnz
inc
mov
push
repz
mov
mov
mov
roll
sar
pop
sub
sub
fists
ret
into
sbb
jle
xor
das
pusha
jmp
aad
or
cmpsb
cltd
xchg
xor
testl
nop
or
movsb
push
jo
fsubp
sub
cmp
dec
fildll
cmp
scas
ret
pop
popa
xchg
push
clc
sbb
addl
aam
mov
aam
sub
pop
scas
pop
lods
cmp
daa
push
out
fnstcw
test
mov
pop
jp
dec
add
int3
movb
push
jnp
push
sub
pop
cmp
mov
mov
pop
mov
inc
inc
xchg
xor
jnp
pop
dec
sub
shlb
sbb
xchg
mov
clc
xor
xlat
push
push
in
push
cld
decl
fs
in
cmp
insb
push
and
pusha
fldl
jnp
jb
adc
sbbl
xchg
in
out
mov
push
in
popa
pop
in
mov
inc
dec
icebp
xor
xor
xor
add
pop
push
cld
jb
inc
enter
out
pop
jae
cltd
jg
out
enter
mov
cwtl
std
add
in
mov
or
sahf
frstor
and
cmp
ds
push
enter
lret
cltd
add
cmp
xchg
test
sbb
arpl
icebp
ficoms
movsb
lds
call
xchg
sbb
push
xchg
out
jmp
ret
xchg
std
fmul
xor
mov
in
jmp
andl
adc
push
fwait
pop
loop
lock
mov
jae
jmp
insb
or
ret
addr16
mov
andb
lds
inc
sub
lods
lret
idivl
sub
inc
mov
inc
mov
roll
nop
mulb
sbb
imul
ds
fbld
pop
jge
loope
mov
movsl
xchg
push
test
xor
jmp
pop
xchg
lods
xor
jb
push
xor
aas
pop
push
and
adc
dec
add
notl
adc
xor
pop
insl
mov
fcmovu
xchg
leave
cs
sub
add
aaa
pop
nop
arpl
fdivrs
xor
inc
clc
out
mov
pop
dec
push
stc
mov
xor
fwait
xor
enter
push
aas
sbbl
neg
and
in
int
and
ret
aad
sbb
xor
xchg
adcl
pop
adc
push
lahf
dec
pop
add
mov
xchg
fidivs
mov
jl
mov
pop
popa
shll
fs
stos
cmp
outsb
mov
adc
mov
xchg
dec
xor
lcall
push
jae
jge
xchg
mov
nop
add
enter
ds
mov
adc
mov
das
inc
stos
fisubrs
cmp
mov
loop
enter
dec
data16
jmp
push
jp
es
scas
xchg
jno
and
cmp
dec
daa
dec
stos
pop
shl
mov
stc
std
inc
cmpw
jno
adc
in
and
dec
fcompl
dec
loop
imul
sti
mov
imul
pop
cmp
cld
lcall
iret
or
in
mov
push
fisttpll
mov
out
in
fcmovnu
mov
lret
adc
aad
fstpl
and
mov
fstl
add
cmc
mov
ljmp
mov
inc
imull
ss
jl
mov
sub
xchg
shr
mov
insl
xchg
aas
fnsave
push
icebp
repz
fisttpll
mov
test
add
in
leave
push
movsl
loopne
push
es
push
addr16
js
adc
xor
mov
dec
jge
clc
stc
rorl
imul
enter
mov
push
add
stc
xchg
int
jp
add
sti
mov
outsl
ja
cmp
lods
insb
inc
cmp
sbb
mov
mov
add
push
cmp
data16
and
push
call
mov
inc
mov
icebp
mov
lods
popa
ret
lods
sti
dec
testb
mov
cmp
cmp
push
movb
pop
es
inc
sbb
mov
dec
xor
addr16
inc
inc
mov
lock
jb
mov
jae
jg
aaa
leave
sbb
add
and
add
jbe
stc
add
fsubs
int3
stos
daa
xor
ret
inc
inc
fwait
es
ficoml
mov
xor
std
cmp
mov
pop
push
lea
dec
lret
repz
test
fildl
jns
xchg
outsb
mov
pop
and
pushf
stc
fldl
gs
push
sti
push
mov
or
shll
lods
push
fsubl
xor
adc
jo
sbb
sub
jbe
cmp
adcl
mov
mov
mov
imul
ret
out
test
mov
jae
inc
pop
mov
add
jno
lret
mov
pop
mov
cli
sub
icebp
mov
cltd
sub
inc
add
pop
or
pop
push
movsl
lds
pop
sub
jle
test
imul
xchg
add
sub
loopne
add
push
es
jb
cltd
rorb
mov
cs
mov
loop
fistps
lret
pop
or
cs
mov
inc
mov
imul
pusha
mov
imul
cli
inc
push
sahf
sbb
mov
xlat
aam
fsubr
xchg
xor
jo
add
cmp
mov
test
pop
jo
and
loopne
outsb
das
fs
or
jge
lds
xor
add
psadbw
imul
cltd
adc
int
imul
mov
rcl
cwtl
aaa
mov
enter
out
out
adc
sbb
call
out
mov
jmp
mulb
xchg
dec
push
xchg
pop
aam
lret
imul
pushf
in
xor
mov
aam
xor
cmp
sub
sub
repnz
repz
in
xchg
ljmp
mov
fnstsw
add
movsb
pop
xchg
ss
arpl
fdivl
jbe,pn
rcr
subb
jnp
fldl
test
out
movsl
or
fs
cmp
mov
pop
lea
xchg
pushf
addr16
gs
sbb
movsl
addb
add
xchg
sahf
cmp
adc
jno
cmc
cmp
mov
jnp
ljmp
sbb
and
lods
jnp
mov
push
adc
inc
mov
das
enter
test
mov
pop
jb
std
and
xor
cmp
outsb
fwait
adc
out
push
out
push
and
cltd
push
ror
mov
ljmp
add
jl
je
ljmp
in
imul
or
pusha
mov
xchg
mov
mov
cmpsb
add
mov
rcl
js
jae
fistl
lret
repz
xchg
fildll
xor
adc
adc
push
out
mov
movsb
and
inc
es
shlb
mov
ja
cmpl
jmp
sbb
nop
outsl
inc
add
pop
in
les
jmp
pop
and
addr16
cmp
adc
xlat
mov
pop
insb
cmp
push
push
xchg
mov
outsb
popf
sub
test
sti
or
in
mov
jae
inc
out
push
pop
aad
pop
pop
mov
clc
mov
decb
pop
inc
notl
jmp
lret
movsb
lock
cmc
testl
pop
ljmp
jne
or
sbb
xchg
xor
inc
stos
push
jmp
and
inc
icebp
mov
sub
jle
cs
into
loopne
cmc
pop
sbb
ljmp
push
loope
fadds
ja
std
push
mov
add
mov
and
nop
push
movsb
xchg
and
inc
aas
jecxz
sub
popl
popa
adc
pop
mov
lea
dec
jns
in
dec
jmp
mov
lret
dec
pusha
pushf
fdivs
test
mov
fsubrs
add
sar
push
cs
mov
test
inc
sahf
sub
mov
add
sbb
cmp
mov
xchg
sbb
in
jns
dec
and
sbb
cmp
and
adc
dec
cmpsb
idivl
aad
mov
leave
mov
data16
mov
cmc
push
inc
les
and
lret
cli
adc
ret
mov
repnz
mov
nop
nop
mulps
test
in
xor
test
mov
add
ss
aad
mov
sub
rcrl
sbbb
mov
cltd
inc
xchg
sub
add
mov
lods
xor
pop
rcrb
insb
pop
and
adc
lock
xor
mov
lcall
xchg
fsts
mov
in
rclb
movsl
xchg
jb
addr16
sub
loop
into
lret
cli
pop
sub
aaa
xchg
popa
cmpl
cld
es
std
stos
pop
push
dec
leave
inc
add
call
cld
enter
jno
jl
std
adc
cmp
or
out
popf
daa
mov
rcrb
out
setg
sub
icebp
test
mov
in
adc
jle
push
mov
mov
inc
imul
push
pusha
xchg
and
push
jmp
cmpsb
in
cwtl
rol
xor
dec
cli
and
scas
fsts
ss
loop
test
fwait
push
aad
sub
arpl
into
pop
es
mov
xchg
roll
jo
push
idivb
dec
int
mov
shrl
cs
stos
push
xchg
push
xor
push
pop
push
pop
outsb
mov
dec
xchg
cmp
in
fsub
xor
xchg
mov
jno
test
mov
jo
mov
push
dec
mov
adc
loopne
and
xchg
loop
mov
fisubs
fdivs
inc
movsl
adc
imul
jbe
dec
cmc
out
mov
movsl
leave
push
loop
jecxz
jns
movsb
movl
fs
lods
aad
enter
mov
repz
sub
cmpsl
jl
cmpsb
mov
ret
add
shl
dec
enter
sbb
ret
inc
dec
pop
loop
in
out
adc
jl
xchg
popa
jae
sti
in
mov
cli
add
mov
repz
loopne
out
adc
push
jne
jmp
push
imul
push
jne
sub
in
hlt
jno
push
adc
decl
stos
icebp
stc
lods
outsl
test
ss
sub
test
xchg
sbb
add
xchg
inc
call
addr16
cmpsl
lods
lret
pop
xor
push
dec
fisttps
testl
fdivs
in
dec
adc
incl
push
pop
inc
sti
pop
jo
rcrb
cmp
xor
jo
pusha
ss
dec
popa
and
out
cwtl
dec
push
xor
outsl
in
cltd
cli
outsb
dec
push
dec
cmpsl
xor
add
xchg
clc
mov
mov
add
cmp
adc
shll
das
mov
mov
inc
cmp
aam
dec
sub
shrb
fimull
pop
push
cmp
pop
repnz
add
jle
ja
mov
out
imul
daa
mov
addr16
lock
mov
in
cs
pop
pop
sub
iret
lret
and
frstor
add
data16
or
in
xchg
sbb
inc
and
out
int3
lret
daa
ret
cmp
out
data16
cmpb
cs
pusha
push
jb
fisttps
fisubrs
out
xlat
cmc
movsb
mov
dec
mov
mov
pop
lret
adc
and
mov
int
outsl
add
mov
mov
cmp
or
sub
pop
test
push
mov
fldcw
adc
out
mov
pop
xchg
add
pushl
sbb
mov
gs
or
pop
mov
push
mov
mov
or
andb
mov
or
iret
push
mov
ret
push
cmp
jne
inc
gs
sub
pop
pop
mov
in
fistpll
aaa
push
xor
pop
pop
cmp
je
sub
fmull
sti
push
push
xchg
dec
pushl
and
jg
cwtl
jecxz
addr16
mov
scas
add
scas
imul
shll
sbb
xchg
les
icebp
pop
mov
es
into
insl
inc
cmpsl
stos
pop
pop
jbe
cmp
pop
push
xchg
sahf
sub
fbstp
mov
jge
mov
in
jecxz
cmp
sbb
icebp
loop
lods
sarl
fucomip
jmp
enter
xor
mov
std
test
ss
add
hlt
movsb
jno
jb
mov
loop
jbe
lods
call
add
and
push
or
push
mov
dec
or
mov
jp
sti
xchg
push
ja
mov
and
loop
add
or
xor
jno
pusha
pop
rorl
sub
sbb
inc
lret
xor
test
and
cwtl
jp
push
xchg
addr16
out
pop
mov
xor
and
jbe
inc
mov
dec
out
or
gs
add
mov
std
pop
lods
repz
add
repz
test
cmp
mov
ljmp
mov
stc
daa
outsl
pop
sbb
push
movsl
cld
sti
xor
inc
jb
and
cld
xchg
xor
mov
push
loopne
or
mov
xor
dec
cwtl
ds
or
loope
ret
mov
mov
cwtl
insl
fs
iret
loope
sub
jno
and
movsl
jae
cmp
inc
mov
addr16
mov
jno
gs
push
pop
lock
or
addr16
push
sbb
xchg
xor
out
xor
test
dec
dec
scas
push
add
push
out
cltd
pop
ror
cs
mov
ret
inc
xchg
cmpsb
dec
aas
imul
fsubrs
ret
pop
xor
repz
adc
push
and
lcall
imull
das
aas
out
loope
jns
xor
div
pop
fsubr
outsb
jb
sbb
mov
jae
inc
cmpsl
das
pop
sub
and
mov
mov
add
mov
js
inc
or
sub
shrb
push
sbb
pop
jg
adc
lret
or
arpl
nop
clc
gs
fisubs
lret
add
pop
ficompl
cld
cmpsl
fsubl
jnp
sub
cmp
hlt
out
pop
add
ret
stos
xchg
push
nop
sub
fwait
xor
in
lcall
cwtl
mov
clts
jp
out
mov
shll
lcall
fnstenv
clc
hlt
dec
mov
add
sbb
pop
clc
shrl
jbe
or
inc
stos
dec
xchg
sub
push
push
dec
mov
cltd
shlb
pop
fildl
repz
out
icebp
adc
push
push
repz
rcl
jns
lock
pop
xchg
shlb
shr
xor
xor
jo
xor
xchg
pop
sbb
mov
cld
movsb
push
test
out
push
les
jno
stc
scas
in
adc
add
lret
gs
jae
sub
mov
xchg
pop
fadd
stos
mov
sti
pop
cmp
ljmp
ja
fcmovu
jle
dec
cwtl
jno
fnstcw
stc
mov
lret
rorb
dec
adc
xor
xchg
aaa
pop
mov
dec
ret
inc
in
mov
aas
push
aaa
mov
arpl
and
fldenv
jg
pop
in
and
shl
mov
jg
bnd
repnz
jl
xor
dec
mov
xor
scas
jmp
inc
adc
rorl
xor
sbb
push
popf
push
int
push
je
adc
movsb
imul
jmp
mov
adc
or
add
xor
push
scas
rcrl
mov
adc
cld
adc
outsb
repz
jp
dec
dec
mov
fdivrl
sbb
cmp
jne
add
aam
dec
lods
or
addb
sbb
stos
clc
push
ja
xor
inc
test
outsl
test
lock
fdivp
mov
add
inc
mov
push
push
loope
or
push
insl
shrl
cmp
cmp
jae
inc
add
pusha
dec
insb
stos
push
out
mov
lods
add
xlat
test
ret
test
imul
popf
xchg
adc
mov
or
jno
fcmove
jnp
dec
call
cmc
xchg
ret
in
mov
cmpsl
mov
daa
subb
sub
ss
ficompl
push
dec
pop
aas
idivl
jo
mov
cmpb
push
dec
jle
ficoml
ljmp
lock
dec
xor
shlb
int
push
cli
outsl
mov
sbb
test
loopne
jp
pop
aaa
aad
adc
scas
imul
push
shrb
inc
mov
pop
outsl
pop
push
arpl
jg
push
repnz
push
cmc
pop
push
lea
pop
lret
stos
sub
sbb
push
aad
jecxz
shl
inc
repnz
pop
es
dec
fidivl
jge
pop
jmp
jmp
xchg
xlat
shr
rorb
cltd
nop
mov
popa
stos
sbb
push
or
shll
cmpsb
mov
jle
mov
jb
aaa
inc
jne
lcall
addr16
jo
hlt
into
jp
fbld
xchg
pop
test
dec
push
insl
push
jmp
adc
data16
or
mov
ret
or
adc
fadd
or
mov
jge
mov
inc
faddl
mov
cmp
xlat
leave
jb
iret
jb
jo
cltd
mov
jl
cmp
cmp
decb
add
mov
mov
or
add
cmp
xlat
jns
loop
js
xchg
fisubrs
mov
lcall
loope
and
fstps
pop
lds
icebp
int
and
or
or
loope
scas
out
add
lds
clc
jb
jmp
push
xor
dec
inc
fbld
popf
cli
xchg
jbe
xchg
lea
in
frstor
lods
inc
jmp
js
jle
out
lds
rorl
and
jg
push
mov
xchg
xchg
adc
pop
ja
pushf
pop
cli
jp
fst
jns
jnp
mov
add
sub
or
sbb
sbb
lret
mov
in
popa
jge
ljmp
cmp
int
cmp
arpl
mov
and
xchg
ret
sub
cmp
daa
arpl
jno
lret
adc
mov
jp
lods
out
xor
out
mov
jns
adc
sub
mov
sbb
adc
mov
outsl
outsb
jae
push
dec
lea
mov
mov
mov
lret
iret
xor
xor
push
cwtl
imul
loopne
cmp
arpl
out
add
and
dec
divl
and
cmpsl
mov
test
dec
fmuls
xor
xchg
mov
cli
mov
mov
loop
outsl
fcompl
shl
mov
lret
push
lahf
xchg
lcall
test
cmpsb
dec
scas
gs
pop
add
les
mov
adc
out
fmull
xlat
fs
push
cmpsb
call
test
in
lret
xchg
mull
mov
rcr
out
imul
lret
xchg
push
cmpb
sbb
jb
inc
pop
add
jle
sbb
stc
addr16
mov
std
das
cld
in
stc
mov
sub
addr16
pop
pop
enter
jae
jno
xchg
xor
jnp
mov
rolb
and
and
test
stos
hlt
lret
cmp
imul
push
stos
fs
fnstcw
cmpsb
mov
out
iret
fistpl
push
stos
mov
mov
into
cwtl
ja
jp
je
std
mov
repnz
xchg
repnz
ds
and
jo
insb
xchg
cmc
add
add
daa
pop
inc
fstps
fwait
mov
sub
fdivrl
mov
pop
repnz
por
mov
leave
inc
mov
inc
sti
push
xchg
jle
gs
out
or
mov
dec
cmp
ret
cs
sti
clc
movsb
int
dec
xor
cld
jnp
cmp
pop
mov
sti
dec
pusha
sbb
hlt
cmp
aas
push
loope
adc
cli
fwait
sbb
jne
cltd
cwtl
jo
mov
call
adc
jb
xchg
sahf
fidivl
sub
in
sub
dec
pop
lock
lods
jb
stos
jns
sbb
xor
and
push
scas
and
rcll
in
xor
aam
inc
add
mov
dec
pusha
in
mov
js
ja
iret
int
fucom
or
mov
inc
fucom
pushf
arpl
push
add
or
add
push
inc
sub
sbb
push
in
add
andl
stos
mov
jnp
mov
push
mov
or
add
imul
iret
into
mov
add
fldt
int3
into
lret
xor
push
pop
or
push
jo
mov
jnp
icebp
sub
dec
inc
bound
in
xchg
clc
push
jo
repz
out
jp
xor
mov
fstpt
or
into
sub
orb
pushf
cmc
mov
gs
mov
outsb
pop
shlb
fucomp
out
mov
movsb
push
lret
popa
xchg
das
and
mov
jmp
inc
clc
iret
pop
test
push
pop
in
dec
aad
mov
push
rol
or
lahf
or
or
icebp
iret
test
shlb
or
dec
cmpsl
inc
shl
inc
sbb
dec
mull
and
push
out
testb
xchg
lods
jns
jecxz
aas
add
add
in
sub
sbb
incl
add
outsb
push
push
cltd
mov
pop
dec
jb
pop
mov
insl
xchg
adc
xor
inc
push
xor
out
add
mov
stos
rcrb
sub
mov
pop
mov
rcll
push
xor
movsl
or
arpl
je
aaa
mov
jl
loopne
push
bound
pop
cmp
arpl
push
sbb
cmp
or
iret
les
pop
push
jo
lret
and
mov
frstor
in
jge
pop
outsl
cmp
sbb
pushf
iret
scas
sub
or
je
xchg
push
and
adc
inc
lock
mov
xor
fcompl
iret
fistl
pop
mov
mov
cmp
jle
out
and
cmp
sahf
jmp
jns
inc
mulb
shrl
mov
pop
jmp
and
and
and
push
xchg
negl
orb
std
das
cmpsb
in
push
sbb
imul
mov
mov
jns
or
stos
dec
dec
fsubs
pop
scas
clc
inc
js
lods
inc
int
and
mov
xchg
repnz
pop
pop
dec
sub
enter
add
xor
mov
into
loop
cs
std
daa
call
pop
nop
and
push
int3
sbb
sbb
and
sbb
movsl
out
jae
int3
shl
cs
cmp
xor
clc
mov
mov
push
adc
add
adc
in
stos
jbe
jne
fdivp
imul
sbb
jecxz
jmp
aam
loope
xchg
orb
and
xlat
stos
or
stos
enter
movsl
xor
or
dec
js
inc
cmpsb
rcl
adc
and
mul
nop
mov
ja
adc
inc
sub
loope
addl
sahf
insl
or
lahf
mov
movsb
cmp
or
cld
dec
mov
mov
xchg
push
es
into
inc
dec
lret
outsb
outsb
roll
adc
sbb
lock
sub
aaa
jno
in
fwait
cld
stc
mov
mov
jne
rcll
inc
sbb
sbb
into
imul
jns
xchg
jmp
pushf
sbb
sbb
mov
iret
gs
ja
add
hlt
pusha
push
push
mov
icebp
repz
jle
inc
test
cli
sub
mov
push
out
mov
test
push
push
sbb
jne
jnp
jmp
adcl
and
jmp
or
or
add
pusha
push
mov
mov
cmpl
loopne
loop
push
push
add
test
out
aam
jle
push
inc
xor
xor
jmp
ret
out
psubd
dec
fdivrl
mov
stc
fstp
sub
push
jae
dec
stc
xchg
xchg
lods
push
sbb
insl
js
add
sbb
or
mov
sbb
dec
jae
loope
and
or
rol
mov
push
mov
jb
sub
pusha
scas
inc
dec
lea
bound
out
fstl
and
jle
sub
dec
insb
or
mov
xlat
mov
sub
cmp
push
mov
int3
flds
test
dec
inc
inc
ror
sbbl
jl
push
dec
in
loop
mov
and
pop
dec
cltd
mov
or
jnp
inc
and
dec
add
cmpsl
inc
fildl
stos
push
jno
popf
jecxz
push
js
and
ljmp
dec
jnp
dec
dec
sub
in
mov
fnstcw
fistpll
mov
cmpsb
pushf
xor
xlat
daa
pop
add
icebp
jmp
xor
mov
testb
pushf
outsb
lret
sub
scas
outsl
fwait
popa
or
jp
dec
sub
push
ds
outsb
mov
sar
adc
call
lds
cmp
push
or
fildll
dec
mov
jns
movsl
sbb
push
xchg
std
dec
push
js
add
mov
jo
sub
into
iret
rcrl
cli
iret
xor
dec
rcrl
idivb
loopne
outsb
dec
insb
out
sub
icebp
mov
mov
and
jmp
ficompl
in
xor
pop
dec
xor
sbb
and
mov
adc
ss
mov
movsl
out
cmpsb
push
daa
out
pop
jno
and
add
fmuls
mov
or
outsb
cmp
aam
das
mov
xlat
scas
enter
insl
sub
inc
mov
out
mov
je
adc
jg
ljmp
adc
call
arpl
xchg
xchg
fdivrs
and
popf
fstpl
add
xchg
test
push
lods
stos
out
jg
sub
push
sub
sbb
dec
pop
and
mov
fisubrs
and
jecxz
push
jo
ror
out
push
xlat
jae
sub
das
in
ficoms
sub
xlat
push
xchg
nop
adc
popl
stos
ja
stos
cmp
aas
mov
inc
into
pop
adc
lock
insl
lds
jno
in
xlat
jnp
out
out
pop
push
stos
insl
mov
pop
test
pusha
pushl
pop
jg
stc
push
jmp
int
arpl
or
jb
ja
mov
adc
cmp
ja
leave
lea
cltd
insl
movsb
arpl
push
aaa
sbb
jns
xchg
dec
push
dec
cmpsl
and
in
inc
rclb
test
and
pushf
lcall
mov
dec
mov
movsb
pop
iret
shlb
push
dec
xlat
xor
movsl
pop
inc
cmc
int
cmp
cmpsb
out
ret
movsl
outsb
mov
scas
gs
cmp
jl
lcall
sub
fs
mov
bound
cwtl
jl
inc
pop
xchg
and
fdivrl
mov
adc
push
sub
test
dec
jmp
inc
lock
sub
cmpsb
push
in
sbb
sub
adc
adc
loope
std
fmuls
mov
subl
jns
inc
pop
lods
dec
test
test
sub
fstps
lea
mov
mov
or
adc
sub
xorb
outsl
cli
or
cs
inc
cmc
stos
mov
jmp
adc
iret
sti
in
jle
mov
cmpsl
mov
inc
rcrb
jmp
loope
aaa
dec
add
push
mov
jecxz
xchg
sar
fsubrs
cmp
pop
negb
push
fidivrl
insb
sub
mov
jne
jmp
adc
push
popa
mov
testl
pop
out
fwait
test
sbb
je
pop
sub
lea
jl
psubsb
pop
mov
mov
jge
stc
pusha
xchg
lods
ret
movsb
rcrb
or
pop
xlat
fiaddl
mov
scas
add
popa
subb
jmp
iret
imul
push
adc
pop
das
ljmp
into
sar
and
mov
in
lret
popf
inc
xchg
sbb
and
test
mov
pop
cld
fisubrs
movsl
sub
insl
mov
lret
fs
rclb
mov
or
ds
xchg
or
cwtl
xchg
xchg
ss
lods
or
sbb
push
cmpsl
pop
ret
adc
cmpsb
imul
stos
out
leave
mov
sbb
fimull
repz
cmc
sub
xor
inc
mov
sbb
sub
lock
add
loopne
mov
pop
pusha
arpl
test
or
dec
call
mov
and
adc
mov
test
arpl
movsb
ret
xbegin
xchg
xchg
test
mov
popf
ljmp
mov
mov
and
and
repz
mov
jbe
aas
stc
sub
sub
aaa
loopne
in
xor
lods
jp
and
add
push
jge
cmp
dec
adc
pop
stc
xchg
cmc
xchg
dec
fdivs
iret
push
iret
xor
inc
mov
jmp
bound
jno
lret
mov
inc
nop
sahf
adc
ret
adc
or
adc
cmp
and
or
add
loopne
out
cmpsb
xor
xchg
inc
adc
call
push
pop
lahf
mov
add
inc
push
sarb
mov
cmp
cmpsl
mov
pop
test
iret
lret
nop
cltd
mov
inc
sbb
and
cmp
iret
cmp
mov
and
inc
mov
cmp
stc
pop
pop
aam
add
int3
rorl
cmp
xchg
jmp
lds
adcl
dec
fistps
icebp
sub
loope
pop
inc
cli
sub
fidivrl
sub
insb
push
mov
mov
cmp
sub
dec
jle
mov
xor
sub
add
pusha
int
iret
rorb
push
fwait
fwait
mov
xorl
or
xor
mov
daa
push
sub
addb
dec
push
ret
mov
dec
xchg
push
nop
jle
mov
inc
fcmove
aaa
mov
jae
add
movsb
ret
xor
or
or
sub
lret
inc
ret
bnd
or
out
sub
int3
dec
enter
xchg
das
mov
dec
sub
sub
xchg
add
cmp
in
cmc
stos
adc
inc
ja
or
lret
iret
divb
and
jle
or
repz
ds
inc
lock
xlat
xor
cmp
shll
sarl
push
adc
ja
push
stc
cwtl
or
outsb
pop
jno
xor
push
or
pop
sarb
xor
flds
mov
lock
in
int3
or
xorb
push
aad
add
outsb
xchg
inc
inc
jb
in
or
inc
or
cmc
out
shl
push
test
aas
mov
aaa
cltd
scas
mov
jns
or
jmp
fildl
mov
test
pop
or
je
out
cmp
mov
pop
sub
and
fisttpll
movsb
or
inc
pop
insl
push
outsb
jmp
adc
data16
push
out
sbb
dec
aam
mov
mov
mov
pop
jle
pop
lahf
into
dec
out
mov
cmpb
push
sbb
xchg
lcall
xor
dec
test
inc
pop
loopne
dec
sbb
push
cmp
or
mov
lds
nop
in
sahf
call
xor
jl
xchg
dec
imul
push
and
sub
pop
sbbl
fildl
pop
push
mov
cmp
neg
xor
sbb
xchg
pop
or
cwtl
push
loope
push
fnstenv
into
es
lahf
mov
mov
adc
lock
leave
fldl
pop
popf
dec
or
inc
cmp
in
dec
nop
hlt
cmp
outsl
adc
enter
pop
push
stos
into
jp
push
scas
xchg
cwtl
cmp
xchg
js
push
into
lahf
pop
icebp
popf
call
add
pusha
or
lret
es
bound
pop
sbb
clc
jge
int3
out
and
shlb
cmpsl
icebp
adc
mov
or
add
add
out
sbb
mov
inc
sbb
inc
imul
xlat
lahf
mov
gs
mov
sub
cmp
les
imul
mov
lahf
and
popa
inc
xchg
imul
jns
lods
in
xchg
push
pop
lock
or
lret
sbb
loopne
lods
std
fdivrs
inc
jno
daa
jmp
and
dec
shl
sbb
jb
bnd
cwtl
fcompl
cmp
out
aam
xchg
cmp
xor
jle
push
aam
dec
or
pop
xchg
repnz
mov
xor
xor
jecxz
inc
out
fidivrl
fwait
sub
dec
mov
int3
dec
aad
fnstcw
jmp
enter
stos
fstl
cmp
std
pusha
sub
xor
pop
insl
enter
outsl
daa
ja
mov
fwait
ja
shlb
mov
test
add
cmp
add
sbb
dec
popf
mov
leave
pop
xor
xchg
loop
ficompl
ret
pop
push
imul
sub
nop
pop
mov
subb
jae
test
ret
int3
lods
jle
or
ret
mov
fisttpll
jno
fdivs
popf
xchg
add
push
push
in
mov
add
imul
add
dec
xor
push
dec
add
scas
xlat
jae
scas
pop
mov
std
or
push
cwtl
push
xor
and
push
mov
xor
daa
into
mov
push
subl
mov
cmpsl
jns
repnz
dec
mov
mov
jno
lods
xor
pushf
insb
xor
daa
mov
insl
stos
sbb
and
sub
cltd
and
loopne
pushf
rorl
inc
xchg
jl
ficomps
xor
jbe
lahf
and
jo
loopne
outsb
push
movsb
jae
repnz
aas
mov
lods
pop
loop
testb
cmp
adcl
out
test
mov
scas
flds
idiv
inc
call
sub
adc
stos
add
pushf
xlat
aam
mov
jne
ja
rol
and
jp,pn
inc
jb
dec
in
mov
xchg
lods
int
std
sub
ret
or
scas
mov
dec
sar
dec
clc
cmpsl
inc
pop
ljmp
bound
cli
nopl
mov
mov
sahf
je
outsb
pop
rorb
push
dec
aas
aas
sbb
mov
into
jmp
arpl
adc
shll
lods
push
insl
aaa
pop
shlb
inc
fcmovb
pop
or
sti
cmpsb
push
pop
xchg
scas
test
dec
pop
int
xlat
adc
daa
sub
pop
fadd
int3
xor
mov
fcoml
push
in
movsb
sahf
lods
inc
cltd
out
pusha
test
test
mov
fisubrl
sub
jp
sub
loopne
icebp
inc
int3
xchg
scas
outsl
sbb
ret
in
xlat
roll
cmp
call
pop
lcall
sahf
test
into
es
pop
out
adc
jp
dec
pusha
mov
stos
ljmp
out
adc
or
xchg
int
test
sbb
sbb
out
push
bound
and
shr
fcomps
notb
hlt
pop
pop
pop
push
mov
fsubs
cmp
and
into
loopne
test
dec
push
xor
jne
mov
and
outsl
jo
stos
sbb
add
sbb
cmp
pop
xchg
or
push
ret
les
fcomi
push
lds
xchg
scas
mov
push
sbb
mov
ja
fsub
mov
into
cmpsb
out
fmull
cmp
fwait
into
in
fstpl
adc
dec
mov
jae
adc
test
adc
mov
dec
mov
lods
shlb
xor
ljmp
pop
jb
ret
les
or
in
push
or
xlat
dec
icebp
shl
ss
sbb
xor
insb
mov
lock
mov
push
fs
jecxz
lods
xchg
pop
iret
pop
iretw
fistps
push
jb
enter
jg
insb
imul
enter
jl
push
inc
push
fscale
dec
mov
jp
xor
shl
shl
lret
pop
xchg
mov
push
cmp
call
push
mov
push
hlt
rorb
sbb
pop
mov
imul
pop
js
sbb
mov
pusha
shrb
fdivl
xlat
jne
sahf
cmp
loop
pop
mov
jb
out
push
sub
pop
jae
jg
and
sarb
mov
ret
fistps
xlat
lock
mov
pop
aas
jns
into
jge
xchg
dec
adc
sbb
pushf
add
in
jge
outsl
test
lret
mov
jle
adc
xlat
pushf
jmp
push
iret
aad
mov
xlat
test
cltd
sbb
mov
pop
jno
ret
imul
xchg
rcr
dec
push
out
pop
sub
js
fidivrl
sub
pop
outsl
shr
mov
mov
mov
je
mov
xor
mov
adc
xchg
fisttps
nop
jns
mov
cmp
mov
orb
jno
leave
arpl
subl
sbb
insb
sti
ljmp
dec
sahf
sub
xor
or
stos
lods
stos
xorl
fisttpl
dec
xlat
xchg
std
clc
int
fsubrs
fisttps
push
fsub
addr16
sbb
adc
stos
xor
cmpsl
cmpsb
xchg
push
xor
outsb
push
aad
fdivrl
inc
xchg
pop
lods
or
cmp
icebp
mov
mov
shll
mov
adc
enter
fwait
mov
xchg
mov
out
mov
js
lods
sub
and
sbb
and
dec
ficoms
add
jp
or
push
or
jnp
cmp
adc
stos
lods
sub
das
ja
dec
xchg
adc
ljmp
pusha
int3
mov
mov
fsubrs
outsl
cmp
and
add
sarl
mov
adc
mov
jae
jle
clc
inc
cli
sbb
inc
pop
xchg
dec
push
jp
or
movsl
out
push
inc
dec
adc
addr16
out
jle
call
mov
test
mov
mov
mov
xchg
pop
jb
pop
adc
pop
int
adc
in
mov
sbb
xchg
test
sub
push
jo
sbb
aam
jl
cs
aaa
ret
fcomi
sub
ret
call
movsl
in
sti
lahf
lds
imull
dec
sti
mov
inc
sahf
cmpsb
mov
inc
mov
push
or
sbb
mov
dec
aas
inc
mov
cmp
sub
je,pn
popa
insb
jb
inc
nop
aam
adc
mov
sbb
mov
subl
or
jnp
dec
and
adc
iret
fstpl
fcompl
in
xchg
ss
inc
in
popa
in
mov
mov
xchg
shr
mov
inc
lods
dec
dec
mov
xor
or
inc
xor
xchg
jnp
sub
dec
rol
fwait
rcrb
xchg
icebp
fdiv
push
xchg
pusha
loope
pusha
cmpl
clc
fwait
test
sbb
test
cld
js
add
push
icebp
cmpsb
adc
mov
stos
inc
jae
mov
xchg
loopne
dec
pshufw
lock
sti
mov
addr16
arpl
jbe
scas
cmp
aaa
cmc
sub
es
pusha
scas
es
adc
cmp
push
stos
cmc
repz
and
out
sub
scas
daa
cltd
mov
add
add
pop
loope
ljmp
push
je
and
dec
dec
nop
js
cmp
lahf
push
sbb
mov
sbb
aaa
sbb
adc
xchg
push
faddl
sbb
fiadds
and
rcll
add
adc
sti
outsl
push
and
gs
cmc
xchg
jmp
jno
int
movsb
fstpl
scas
jmp
mov
push
dec
lds
sub
push
cmp
cmp
push
cmpl
fcomps
sub
mov
fs
ljmp
and
pop
xor
add
cs
sti
mull
fdivs
inc
in
or
fdivrl
push
xchg
push
rorb
push
adc
sbb
pop
ds
mov
enter
stos
mov
in
cld
mov
mov
movsl
cmp
fsts
cmp
push
cmp
testl
mov
ret
dec
sub
imul
push
or
aaa
jge
mov
iret
push
sub
pop
mov
sub
outsb
mov
xchg
adc
cmp
cmp
mov
xchg
rcrl
aad
ds
mov
lods
in
xchg
in
mov
fs
lock
rcll
cmp
lods
shrb
les
sbb
mov
xchg
mov
cmp
inc
hlt
aad
mov
xor
mov
mov
sub
scas
js
jno
lods
adc
cmpsw
sti
inc
sbb
iret
jmp
aad
stc
adc
sbb
sub
lret
jp
insb
fstpt
jmp
shlb
sub
or
aaa
popa
adc
xor
fisttps
xchg
insb
add
cmp
lods
pop
sub
andl
inc
popf
lret
lret
push
je
dec
es
fdivl
xor
jns
scas
test
xor
je
sahf
popa
mov
mov
ret
sub
xor
std
les
addr16
sbb
mov
mov
xchg
xchg
mov
lahf
mov
fistpl
and
movsl
lds
ljmp
ds
lods
testl
fisttpl
iret
inc
xchg
fdivr
push
faddl
in
jge
subb
jp
mov
fiaddl
pop
pop
ja
jp
out
loopne
sbb
mov
loop
and
in
imul
or
or
sub
push
and
push
jmp
jns
inc
int
xchg
add
xchg
test
sbb
xchg
cmp
shll
ljmp
hlt
cwtl
cmpsl
lret
xchg
xchg
xor
adc
push
addl
sbb
mov
ljmp
add
lahf
test
daa
addr16
cmp
sub
mov
sbb
lret
arpl
insl
imul
sbb
gs
fisubs
lret
or
push
daa
mov
aaa
jns
push
shlb
icebp
and
mov
imul
inc
adc
sub
mov
jmp
xor
jmp
and
or
mov
push
repnz
test
xorb
loop
mov
cmp
pop
adc
xor
das
adc
sbb
iret
jmp
pusha
sbb
fisubs
ss
mulb
jge
hlt
into
dec
loop
ret
adcl
clc
push
sbb
push
lock
jle
mov
out
jns
cmc
pop
lret
xchg
mov
push
lock
lea
jmp
fisubs
stc
and
jmp
mov
sub
mov
inc
jne
sarl
stc
dec
xchg
and
rcrb
std
mov
mov
nop
clc
ficompl
push
sbb
jno
xchg
repz
adc
arpl
cmp
push
out
dec
push
cltd
stc
sub
cmc
fisttpl
shlb
mov
push
mov
ucomiss
push
ja
fwait
inc
dec
and
push
mov
or
into
lds
jns
dec
jle
nop
jnp
pusha
ds
and
mov
jb
xchg
shll
or
aad
div
jbe
lret
ss
mov
cmp
pushf
int
int
mov
dec
jns
fadd
sub
jmp
addr16
imul
push
pop
jmp
in
push
fildl
fisttpll
and
fisttpll
decb
ret
sbb
xchg
pop
sbb
pop
add
repnz
cmp
pop
cwtl
out
inc
les
pop
ret
push
or
in
lock
push
or
jnp
sbb
mov
or
ffreep
pop
loop
mov
jmp
daa
outsb
xorl
add
and
add
out
sub
fimuls
test
or
sbb
nop
mov
add
imul
subb
and
cmpsb
pop
push
mov
adc
loopne
jbe
int
lods
mov
stc
mov
inc
add
dec
repz
push
xchg
xchg
nop
dec
xchg
cmpl
sar
sbb
test
mov
movsb
call
insl
subb
js
pop
enter
jo
sti
imul
clc
cwtl
cmpsl
xchg
jns
pop
rorl
ds
xchg
mov
lret
lods
negb
out
lds
mov
int
xchg
bound
sbb
and
dec
idiv
imul
dec
popf
xor
mov
pop
and
ror
mov
inc
mov
bound
adc
aam
push
cmpsl
les
pop
cmpsb
xor
pop
rorb
pop
mov
xor
jecxz
xchg
xor
cwtl
adc
adc
adc
sbb
fs
rcrl
aad
das
cmp
call
inc
movsl
aad
xor
shll
shrl
repz
cmc
call
daa
xchg
lcall
mov
aaa
inc
inc
clc
pop
pop
out
lret
rolb
sub
sbb
inc
mov
mov
rcr
mov
les
and
dec
dec
inc
outsl
cmp
push
adcb
pop
sti
movsb
cld
or
stos
aad
popa
jle
add
ja
jl
push
out
add
ficomps
adc
mov
test
mov
dec
mov
inc
div
sbb
sbb
mov
popa
push
pop
dec
xchg
scas
dec
in
inc
sbb
cld
dec
iret
push
cwtl
sub
cmpsb
jle
das
pop
ficomps
ret
lods
mov
xchg
inc
and
sub
xlat
fwait
insl
add
dec
cmpb
push
mov
xor
ljmp
aad
mov
mov
popa
xor
lock
xchg
and
cmc
push
or
icebp
mov
fwait
xchg
enter
push
mov
pop
push
cmpsl
inc
loope
int
mov
adc
pop
imul
sbb
sbb
data16
jae
mov
sahf
mov
dec
jle
popa
stos
pop
cwtl
cmp
test
sarb
dec
mov
xorb
mov
fiadds
dec
int3
icebp
mov
xlat
jno
push
pop
sub
insb
push
lahf
jg
int
cli
sbb
cmp
xor
mov
dec
ds
out
inc
pusha
cmpsl
mov
and
jb
mov
jno
jb
shlb
push
sub
and
jnp
sub
call
sub
mov
jbe
mov
mov
insl
cmp
push
mov
test
std
cmc
mov
and
mov
cmpsb
sub
mov
adc
sarb
cltd
jns
incb
add
in
mov
js
mov
fs
cmp
dec
or
loop
dec
lock
push
shlb
shrb
shrb
xor
xchg
sub
xchg
in
dec
xchg
dec
adc
gs
ja
in
mov
or
loop
scas
inc
test
jbe
scas
not
jmp
jns
jmp
mov
pop
bound
leave
add
in
or
shrb
adc
sbb
insb
adc
and
out
mov
jl
pop
dec
xchg
test
jae
and
cmp
fucomip
and
mov
add
in
cmpsl
call
cmc
outsl
pop
aad
mov
mov
add
lret
repz
es
add
cli
add
add
dec
add
add
add
imul
sub
rolb
jmp
pop
mov
add
nop
nop
or
nop
xor
push
cwtl
lods
pusha
xor
push
cmp
les
cmp
sbb
pusha
mov
push
inc
cmp
popf
mov
data16
jle
out
add
aam
rol
lea
int
in
call
int3
push
pop
sbb
pop
add
sti
mov
mov
in
jne
sub
out
mov
dec
push
lods
loop
mov
lahf
push
xchg
stos
pop
xchg
and
and
shll
inc
das
inc
idivb
sub
aaa
and
notb
setge
sti
andb
xchg
incl
pop
in
cmp
into
xchg
or
daa
mov
cmp
out
fisubrl
mov
mov
xlat
test
je
mov
sbb
xchg
cld
paddsb
bound
fistpl
das
nop
jb
enter
or
sbb
adc
pop
xchg
in
push
cmp
mov
in
test
xchg
pushf
les
inc
ret
jmp
jb
cld
stc
jo
hlt
add
dec
call
jle
mov
fsts
gs
pop
add
cwtl
cs
call
call
dec
mov
mov
cmp
into
js
adc
jle
xchg
daa
sbb
jecxz
jge
add
push
les
xchg
and
pop
jmp
lret
mov
fisubrs
sub
pop
clc
push
mov
mov
in
push
cmp
call
and
je
mov
aad
testl
rorb
shr
hlt
jne
mov
aas
adc
gs
jo
insl
lea
or
addr16
xchg
mov
insl
cmp
push
movups
subl
jp
das
cs
inc
xchg
mov
jmp
in
mov
mov
sbb
into
mov
xchg
mov
jl
sbb
enter
sub
out
cmc
nop
adc
in
dec
incb
mov
xchg
fwait
dec
mov
cs
mov
xchg
dec
mov
jns
jmp
adc
sbb
test
divb
out
aam
nop
pop
adc
and
fsubl
adc
xor
out
in
clc
decl
push
call
sar
mov
dec
add
inc
hlt
hlt
and
sbb
push
pop
and
in
jb
xchg
mov
adc
or
iret
fucomi
xor
loopne
xchg
push
stc
pop
jb
or
mov
mov
mov
mov
lea
iret
inc
push
mov
add
popa
iret
hlt
or
fsubrl
sbbl
test
das
inc
xor
inc
ljmp
repz
std
popf
test
sub
loopne
cmp
sbb
jmp
loope
aaa
mov
imul
jmp
sahf
and
ja
imulb
sub
dec
adc
imul
push
rolb
jl
push
shlb
in
scas
push
out
leave
push
xchg
inc
dec
xchg
cli
rorl
xor
pop
jmp
stc
mov
jp
mov
jb
mov
mov
adc
fldt
push
stos
arpl
mov
mov
xchg
mov
cmpsb
cmp
loope,pn
mov
sar
out
imul
dec
adc
sub
insb
xchg
dec
inc
xchg
mov
xor
push
mov
push
cwtl
je
into
inc
mov
out
push
jo
sub
adcb
push
and
out
pop
test
adc
cmp
hlt
cmp
xchg
mov
add
ds
popa
push
outsl
adc
add
lahf
mov
pop
popf
pop
inc
mov
cmpsb
mov
sbb
aaa
repz
push
test
pop
fists
or
ds
aas
jecxz
pushf
and
xchg
jne
cmp
xorb
push
loop
mov
es
dec
push
nop
bnd
inc
outsl
xor
or
data16
popl
inc
out
and
add
loope
outsb
leave
and
mov
mov
popf
or
or
mov
lahf
out
sbb
movsb
out
jae
xchg
pop
jnp
insb
clc
rorl
dec
pop
int3
in
std
stos
test
dec
scas
loop
stos
xchg
sub
insb
sbb
movsl
mov
sbb
int
nop
xchg
mov
popa
xchg
aad
add
test
adc
add
shl
push
dec
cmp
xchg
cmpsl
xchg
int3
xchg
enter
call
add
fwait
inc
push
inc
jae
xor
stos
xchg
push
sbb
gs
mov
inc
push
insl
xchg
sbb
repz
sub
ljmp
dec
sbb
pop
addr16
je
mov
inc
std
or
inc
and
cmpsl
mov
sbb
xor
leave
inc
cli
inc
mov
xchg
sar
jnp
gs
test
push
xlat
aam
and
sub
jno
nop
lret
inc
daa
dec
xor
repz
daa
mov
adc
subl
push
push
ss
ret
ret
lds
mov
jnp
add
dec
jecxz
stos
out
jg
je
loop
push
callw
xor
icebp
inc
mov
cmp
mov
inc
sub
and
cmpsb
shll
lods
jecxz
inc
and
sub
and
imul
das
sar
push
popl
push
xchg
xor
bound
mov
enter
outsb
mov
sbb
cs
adc
pop
mov
pop
cmp
xchg
xchg
sti
sbb
push
or
adc
popf
daa
inc
push
test
out
iret
dec
aad
jmp
scas
pop
ret
shrl
and
ds
xchg
xchg
mov
push
lods
push
adc
pop
ja
ret
pop
or
push
lahf
lcall
pop
rorb
in
push
jmp
in
ret
and
shrb
mov
lods
js
pop
sahf
adc
and
add
fidivs
loop
pop
xor
loop
mov
xor
fdivrl
pop
aad
sub
ja
and
into
daa
sti
push
sub
mov
and
insb
gs
sub
stos
push
add
pop
or
int
arpl
dec
lcall
in
stc
jg
fisttps
cmc
sub
mov
adc
cmpsl
repz
into
add
mov
sub
fmull
cmp
fwait
xor
sub
add
sbb
mov
nop
shll
dec
int3
push
popf
scas
lds
cli
mov
push
hlt
cs
movb
shlb
jge
sub
push
dec
icebp
cmp
imul
or
xchg
push
dec
stos
and
push
inc
dec
pop
and
aas
in
hlt
xchg
push
lods
mov
push
daa
aaa
les
lret
mov
mov
mov
mov
cmpsl
adc
cmp
dec
sub
mov
sti
cmp
and
in
notb
in
test
xchg
add
jbe
lahf
jge
and
push
sub
pushf
ret
push
inc
mov
dec
mov
pop
sbb
iret
fnstcw
mov
xlat
aas
pop
ror
inc
mov
fsubrp
lret
sub
repz
jmp
sbb
ret
xchg
outsl
loop
mov
fnstcw
pop
or
aas
sub
sub
inc
push
cli
ds
lret
cs
push
std
and
jno
cmp
in
mov
sub
jg
mov
cltd
stc
outsb
or
fs
hlt
dec
push
call
test
adc
mov
arpl
xchg
aam
inc
je
data16
insb
js
cmp
push
clc
push
mov
mov
mov
in
enter
jp
sub
fidivrl
or
mov
insl
push
repz
jnp
push
mov
les
mov
pop
je
ret
fmuls
daa
sub
nop
jns
cmp
call
ret
add
and
push
shrb
jne
out
add
xchg
fisttps
fstpl
ss
les
inc
stos
add
adc
sbb
add
adc
pop
cltd
ljmp
lea
sub
aad
popf
les
out
imul
dec
sub
pop
popa
iret
test
mov
inc
inc
adc
das
mov
fildl
adc
cwtl
ret
push
and
push
fucomip
leave
ds
test
push
movb
add
adc
repnz
and
js
adc
in
mov
add
repnz
pop
js
cmc
pop
sar
jo
inc
shll
adcb
push
aas
or
mov
pop
pop
lea
sahf
xchg
out
stc
sub
mov
push
sahf
stos
lahf
xchg
or
sub
mov
mov
popa
adc
xor
pop
push
pop
dec
add
sub
fsts
sub
or
iret
xor
imul
push
xchg
loope
test
add
mov
mov
ret
mov
ja
andb
inc
stos
lods
scas
mov
push
dec
or
push
in
cmpsb
testb
mov
ficomps
dec
js
inc
dec
das
in
add
imul
or
js
mov
enter
test
pop
dec
adc
mov
jno
in
mov
out
mov
mov
push
pop
cmp
dec
dec
inc
jl
push
sub
movsb
lods
popfw
xchg
fdiv
mov
mov
sbb
push
dec
and
mov
mov
mov
orb
dec
ret
inc
lea
mov
fnstenv
scas
cwtl
adc
and
ss
dec
push
repz
xor
adc
pop
add
fcomi
cs
test
in
roll
lods
mov
es
mov
or
stos
and
sti
cmpsb
scas
xchg
adc
sarb
roll
imul
inc
mov
pop
dec
int
push
lods
adc
mov
dec
lcall
xorb
adc
mov
aaa
mov
and
fmull
negl
pop
fimuls
xchg
xchg
mov
sub
xchg
movsb
aad
fildll
jmp
mov
or
lds
mov
ret
mov
aam
ds
aas
sbb
cmp
pusha
movsl
loopne
sarb
mov
add
out
dec
sub
inc
adc
in
xor
cmpsb
insb
popa
divb
bound
push
push
data16
pop
mov
jmp
test
sub
pop
aam
pop
jg
es
push
mov
and
pop
and
shll
lret
xchg
pop
mov
loopne
xchg
mov
pop
and
in
pop
xor
test
enter
pop
push
scas
sbb
loope
fstpl
aaa
mov
push
push
mov
lods
sbb
mov
jge
mov
insb
mov
ficoml
icebp
mov
into
stos
xchg
cwtl
sti
xchg
fs
cs
test
xor
in
pop
adc
fidivs
fwait
das
scas
lock
pop
push
add
shlb
std
jecxz
or
imul
arpl
loope
stos
mov
int3
hlt
jmp
push
mov
jmp
xor
push
add
mov
and
sahf
cmp
cwtl
cmp
int3
sbb
test
fldl
aaa
stos
sbb
and
push
sbb
dec
ret
ret
dec
sub
cmp
aas
fmuls
fisubrs
ret
jl
adc
push
dec
mov
test
push
mov
pusha
cld
cmpl
sub
pop
mov
rorb
sub
adc
xor
lds
out
outsb
fildll
test
push
pusha
insb
cmp
orb
xchg
pop
mov
ja
outsl
add
cltd
popf
mov
jnp
mov
popa
nop
pop
sub
fwait
add
mov
mov
inc
xchg
not
out
int3
cmpsb
sub
xchg
adc
pop
loopne
xor
sub
inc
xchg
or
cmp
lret
cmp
xor
stc
xorb
arpl
rorb
pop
popf
dec
mov
fwait
insl
popa
popf
sahf
pop
push
xchg
mov
and
jl
xchg
and
mov
xor
add
rcr
mov
fdivrl
ljmp
adc
aam
rolb
fnstsw
sbb
adc
testl
clc
inc
mov
arpl
insl
pop
mov
push
dec
ljmp
mov
adc
mov
lods
out
mov
in
mov
lret
into
cmpl
loopne
add
adc
mov
out
pusha
je
jo
leave
inc
shrb
movb
push
out
sarl
cld
punpckldq
mov
sbbb
inc
cmp
sub
pop
lcall
jne
sbb
inc
push
mov
fwait
adc
sahf
fcmovbe
dec
leave
mov
pop
and
mov
in
daa
lock
or
insl
fmuls
mov
pop
call
inc
stos
shlb
push
inc
add
xor
scas
inc
psrad
mov
popf
mov
dec
loopne
push
push
sbb
mov
fmuls
mov
frstor
mov
cltd
test
mov
xor
adc
test
sub
mov
std
out
scas
lock
sub
outsb
daa
add
inc
xchg
pop
rcrb
data16
clc
mov
imul
sbb
inc
pusha
imul
push
pop
xchg
adc
orb
lods
xchg
out
in
and
sti
fcoms
jp
lret
mov
repnz
jge
jp
mov
mov
mov
enter
sub
xchg
lea
xchg
dec
enter
cmp
mov
hlt
in
cmpsl
cld
ljmp
ret
push
mov
out
mov
mov
xor
ja
pop
rcrl
sub
sub
scas
pop
andb
mov
mov
rcrl
adc
popa
ret
fs
mov
mov
mov
imul
add
pushf
dec
sbb
rolb
add
push
ffreep
rolb
ret
push
inc
ja
pushf
add
mov
lock
iret
testb
push
js,pn
ss
adcb
aad
xor
cltd
dec
mov
lcall
test
mov
cmp
mov
int3
lea
adc
mov
lods
xchg
push
mov
loopne
sarl
mov
mov
rclb
mov
enter
push
mov
lcall
xor
ret
and
testb
mov
cmp
lods
ds
xchg
pop
add
pop
xor
insl
dec
mov
imul
xorb
icebp
xchg
mov
adc
mov
fnstenv
pop
or
adc
fdivr
movsb
mov
xor
sbb
xor
mov
mov
mov
iret
decl
mov
sbb
mov
int
mov
xlat
cli
mov
cmpsb
out
or
mov
repnz
add
ss
xchg
sub
out
jle
pop
add
sbb
push
add
pop
icebp
fstl
cmp
push
leave
lods
jmp
xchg
std
fbstp
icebp
xchg
jnp
mov
popf
jle
dec
pop
jecxz
xchg
xor
scas
test
cmpsl
lods
or
sahf
add
fsts
sub
mov
cmp
jb
scas
stos
ja
scas
fisubl
gs
jb
mov
xchg
inc
cmp
xor
mov
lock
out
mov
adc
lahf
shll
test
xor
icebp
dec
repnz
insl
mov
sub
lea
or
xlat
ret
mov
rolb
and
ss
pop
test
push
jge
inc
mov
jae
outsb
dec
dec
jmp
rolb
or
stos
mov
mov
jne
inc
rclb
mov
ds
inc
shll
pop
subl
arpl
shll
cli
jecxz
xchg
push
lcall
loopne
les
sub
mov
hlt
xor
xlat
jnp
lea
popf
and
fwait
add
mov
xchg
clc
fiadds
inc
inc
jp
popf
cmovp
out
cmp
mov
cmp
pop
fnstcw
mov
nop
pop
bound
inc
fcompl
enter
aas
sub
ret
test
push
jge
into
test
adc
ret
pop
leave
sti
mov
movsl
sub
loopne
or
mov
mov
ret
outsb
movsl
daa
xchg
shll
and
jb
pop
mov
jp
pop
cmp
lret
fadds
jecxz
sub
cmp
dec
js
in
xchg
cmp
gs
notb
js
nop
cmpsl
bound
jbe
mov
inc
add
popf
sbb
jb
fidivrl
in
mov
hlt
dec
pop
push
clc
push
test
aad
sbb
pop
aad
dec
pop
outsb
add
scas
cli
imul
pop
into
dec
jb
ss
test
inc
jp
mov
xchg
inc
lods
sbb
inc
data16
mov
mov
mov
mov
dec
arpl
repz
push
out
add
nop
jne
and
enter
ja
mov
mov
push
lods
sub
fbld
shlb
jo
in
pushf
xor
and
or
pop
mov
pop
push
and
mov
sbb
mull
xchg
pshufw
mov
pop
mov
cmp
xor
pop
mov
xor
pop
cmp
add
xlat
outsb
lret
pushf
in
add
cwtl
mov
push
dec
pop
pop
mov
mov
pop
sub
mov
dec
subps
mov
repnz
and
sbb
pop
imul
out
mov
daa
movsb
inc
movsb
rcrb
repz
mov
in
clc
iret
fs
imul
cmp
rorb
xchg
jns
and
push
jns
dec
rclb
mov
pusha
pcmpeqd
enter
arpl
out
outsl
mov
pop
aad
adc
clc
in
cli
add
mov
mov
imul
repnz
bound
arpl
jecxz
testb
mov
inc
pop
xchg
aaa
sbb
movsb
pop
xchg
inc
pop
das
xchg
insb
cmp
lret
mov
adc
xchg
fldt
cmp
sbb
add
test
dec
add
mov
add
mov
bts
jecxz
jnp
push
mov
idivl
xchg
inc
jmp
mov
pusha
sbb
or
ret
sbb
mov
dec
and
jmp
fcompl
rolb
cwtl
inc
xor
push
mov
jbe
jae
pop
and
mov
cmc
mov
sub
push
in
test
push
call
lahf
stc
sbb
sti
xor
push
add
cmp
pop
test
cmp
stc
mov
cmp
sub
fisubrl
mov
add
adc
xor
dec
lods
push
fwait
lods
xchg
inc
aas
ljmp
xor
int3
sub
movsl
or
fidivrl
jbe
ja
addr16
pop
ficoml
addr16
and
pop
jl
mov
mov
jecxz
test
push
enter
jg
arpl
push
push
lds
lods
insl
inc
call
repz
test
addb
push
mov
adc
lcall
call
inc
loope,pt
jnp
cmpxchg
mov
sahf
adc
pop
inc
add
rcr
aas
push
push
bnd
cld
pop
xchg
mov
cs
movsl
mov
pusha
in
xlat
pop
pusha
mov
xchg
aas
fidivl
sbb
insl
mov
rorl
std
pop
cltd
lar
arpl
ja
dec
pop
fisubrs
sub
dec
cli
notl
dec
xchg
lods
std
pusha
or
add
jnp
inc
pop
mov
sbb
pop
aad
add
icebp
clc
sbb
scas
sbb
fcoms
xchg
add
and
mov
jg
mov
xor
mov
cmpsl
enter
test
cs
push
clc
loop
lret
sbb
jl,pt
mov
inc
into
add
xor
cli
cmp
jle
sbb
iret
lcall
add
dec
jmp
push
push
mov
sub
adc
mov
leave
testb
sbb
ljmp
mov
push
jns
stc
leave
mov
and
jbe
loop
jbe
mov
sub
xor
out
push
jl
shll
pop
pusha
ds
push
test
adc
pop
cmpsb
loopne
iret
popf
neg
std
and
push
cmp
cmp
dec
fldl2e
cli
inc
xchg
sti
add
into
jp
push
xor
mov
pop
push
loopne
pop
popa
call
xor
vcmpeq_ospd
jle
jg,pt
mov
inc
iret
loope
es
push
std
inc
mov
mov
test
les
outsl
inc
inc
dec
das
mov
les
imul
xchg
cmpsl
dec
mov
jne
data16
pop
movsl
insb
ds
mov
std
add
int
and
mov
shr
add
dec
popa
repnz
pop
popf
in
dec
loope
jmp
xchg
mov
cmc
js
or
jmp
pop
cmp
int3
adc
arpl
and
cmp
test
mov
dec
ret
fnstsw
xchg
js
push
insb
xchg
push
movsl
mov
test
lds
rorl
mov
xor
scas
and
jae
push
xchg
sub
faddp
mov
cltd
xchg
and
add
add
gs
faddl
mov
mov
lock
sbb
in
xlat
test
jo
fdiv
mov
jb
popf
mov
or
in
mov
loope
dec
lock
mov
movsl
lods
ss
aaa
cmpsb
jmp
push
mov
xor
out
push
test
test
fldenv
lret
pop
mov
pop
sub
jecxz
adc
into
mov
lods
jmp
lret
jle
xor
dec
add
shlb
mov
mov
addl
xchg
shl
cs
jb
out
js
fimull
out
loop
push
push
pop
iret
mov
imul
enter
jbe
sbb
fs
sahf
vmulps
lock
cmp
out
cwtl
sbb
aad
jb
insb
pushf
jp
mov
xorb
sub
sarl
jnp
push
cmc
mov
pop
insb
mov
jmp
jne
dec
or
lds
push
dec
sub
es
std
sbb
pusha
xchg
or
hlt
mov
in
ja
fcmovb
ja
lock
cwtl
cmpsb
sbb
arpl
mov
fs
sbb
stos
push
rcrb
dec
inc
pop
pop
or
fwait
testb
or
pop
cltd
push
jne
sbb
cli
daa
add
sub
mov
ja
cmp
pop
dec
pop
pop
jmp
mov
enter
repz
mov
rorb
cli
repz
dec
mov
adc
fwait
sub
mov
add
push
lret
faddl
jae
sub
and
insl
jbe
ror
repnz
gs
mov
das
push
xor
nop
dec
push
inc
or
push
addr16
movsb
shl
xor
insl
popa
jmp
imul
aad
adc
xor
in
xor
xchg
or
cmpsb
adc
xlat
push
lcall
xchg
in
mov
insb
mov
adc
gs
push
repnz
mov
inc
jmp
mov
sbb
and
push
push
cmpsb
mov
inc
lret
icebp
pop
inc
aaa
and
mov
in
push
hlt
sub
shlb
mov
sbb
mov
icebp
fsts
rcrl
cli
inc
in
daa
mov
add
aad
fisubrs
mov
sbb
scas
es
fdivp
add
andb
daa
push
push
jecxz
add
leave
sahf
insl
je
pop
cwtl
pop
cmp
popa
adc
aaa
js
outsb
imul
aaa
xchg
push
jle
test
xchg
dec
sub
jb
cld
shl
xchg
push
lea
aaa
jp
adc
nop
push
daa
mov
sbb
fisubl
fisttps
add
mov
push
out
in
aas
jne
sbb
mov
and
mov
sti
inc
ret
mov
cmp
sbb
adc
mov
fstpl
push
or
jnp
mov
ss
mov
mov
cmp
xor
insl
jne
into
mov
jb
mov
mov
data16
dec
push
push
scas
pop
testl
add
cmc
xchg
rclb
into
gs
in
mov
imul
lret
mov
push
or
repz
scas
cmpsb
stc
out
xchg
fnstsw
push
dec
pop
mov
int
dec
in
sub
and
jae
xor
sub
lret
sti
aas
mov
lods
push
scas
dec
xor
clc
imul
dec
stc
xor
push
pop
ret
and
mov
jg
outsb
xchg
dec
imulb
movd
push
ffreep
push
insl
mov
je
mov
es
aaa
clc
popa
jg
jp
fisttpll
push
mov
in
les
mov
inc
cld
xchg
add
ret
ja
mov
sub
cmp
sub
in
sbb
mov
mov
ja
fsts
mov
mov
aad
fmulp
outsb
ja,pn
mov
scas
jbe
mov
ds
imul
incb
vpunpckldq
add
pop
shll
pop
xchg
and
js
sub
ss
decl
mov
fisttps
ds
add
mov
divb
fmuls
lret
jecxz
or
insl
sub
push
dec
cmpsl
dec
inc
daa
inc
movsb
jns
shlb
movsl
test
pop
xor
imull
xchg
imul
imul
leave
push
dec
inc
pop
mov
lcall
loop
das
in
std
cmovnp
lea
push
and
out
stos
in
push
jmp
inc
add
jae
push
push
in
sbb
adc
lods
js
xchg
mov
push
vpcmpgtw
ret
push
cmpsb
fiadds
or
je
xchg
addr16
sub
in
and
mov
mov
mov
imul
jbe
push
xchg
data16
mov
mov
icebp
inc
pop
adc
imul
aas
or
in
jb
lret
aam
add
out
cwtl
insb
popf
mov
xor
in
es
scas
sbb
incl
mov
inc
or
iret
xchg
cld
notb
loopne
movsl
fnsave
notl
fidivrs
or
or
call
mov
pushf
ret
mov
pop
cmp
int
imul
ljmp
out
pop
leave
mov
push
pop
sbb
fs
popf
fisttpll
or
mov
sub
pop
sbb
les
and
pop
adc
gs
or
rcrl
cmpsl
cmp
cmp
lock
xchg
rcrl
subl
ljmp
lahf
mov
out
gs
xchg
add
es
mov
pushf
sti
jnp
inc
dec
call
cmp
pop
mov
outsb
mov
lahf
xor
icebp
jo
cmp
inc
xor
dec
mov
icebp
adc
or
jns
aas
add
mov
cmp
sub
loope
fists
ret
xchg
loope
mov
cmp
fisttps
push
nop
inc
sub
jns
cmp
scas
sub
add
idivb
or
adc
std
mov
jb
sbbb
sti
pop
mov
jae
mov
mov
cld
sahf
xchg
xor
int
inc
notl
fmull
xor
xchg
das
or
sub
cmpsl
or
lahf
adc
mov
leave
ljmp
sbbl
rcrb
jl
stos
stos
pop
arpl
dec
mov
test
adc
inc
mov
lret
lods
std
je
inc
jb
or
dec
jns
dec
inc
mul
cmpsb
loopne
fidivl
fcmovnu
pop
pop
xor
xor
or
dec
leave
mov
movsl
mov
out
sbb
sub
push
inc
cmp
lcall
outsl
push
cwtl
test
test
and
sbbl
scas
int
dec
lock
xlat
add
andl
fcmovnb
mov
push
xchg
dec
clc
out
mov
repnz
jmp
in
sbb
sti
mov
mov
add
clc
sub
insb
enter
out
repz
lcall
scas
add
bound
xor
sub
mov
push
lret
and
fistl
xor
daa
addb
push
setle
mov
lret
jbe
aam
dec
roll
out
addl
jno
jnp
out
es
pop
push
jnp
inc
ja
inc
xchg
mov
loope
call
add
mov
jnp
lock
push
cmpsb
inc
rcrb
sub
fildl
outsl
xchg
add
inc
fistpl
mov
out
mov
shl
not
rcrb
testb
outsl
lods
dec
jae
repnz
test
pop
sbb
sbb
roll
sub
cmpsl
lock
mov
pop
call
push
cwtl
xchg
push
sbb
shll
inc
push
jg
scas
decl
dec
pop
lock
enter
into
scas
fiaddl
pop
pop
orb
jle
pop
mov
add
pop
mov
add
je
mov
faddp
push
arpl
cmp
lods
cmc
pop
lahf
icebp
sbb
shll
push
fstpt
dec
add
movsl
enter
outsl
xor
mov
mov
cld
sub
jle
mov
cmp
fstpt
cmp
push
sarl
sti
fisubs
jno
push
inc
push
xorl
shlb
in
std
cmp
jns
mov
lret
xchg
sbb
es
imul
cmpsl
mov
clc
push
jo
sbbb
inc
push
pop
les
stos
mov
sbb
pop
jge
inc
xchg
fwait
popa
stos
jl
outsl
scas
movsb
add
add
mov
cwtl
add
xchg
cmp
add
jno
fs
cmpsb
enter
enter
sub
out
shrb
addr16
std
sbb
idivl
rorl
in
enter
dec
roll
ret
imul
out
dec
repnz
cltd
mov
ret
enter
sahf
mov
sbb
scas
sbb
pop
stos
divb
add
ss
ss
add
and
lret
sti
xchg
jecxz
add
pop
shll
fdivrs
lods
xchg
adcl
mov
jno
xchg
data16
mov
push
hlt
xchg
lods
adc
xchg
bound
lahf
mov
lcall
ss
std
jne
add
adc
and
dec
pop
jne
jp
cmp
adc
mov
daa
mov
pushf
lock
lods
int
mov
jb
movsl
mov
movsl
ret
sub
enter
dec
pop
cmc
mov
push
aam
adc
jge
lods
push
addr16
mov
lret
fwait
adc
inc
cmp
inc
lret
std
mov
mov
pop
pop
jecxz
mov
push
iret
js
push
add
xchg
les
sub
pop
shll
push
mov
add
mov
jle
adc
rclb
repz
and
push
pop
cs
mov
pushf
mov
testl
push
adc
mov
mov
xchg
jle
mov
or
lcall
mov
push
add
pushf
xor
pop
mov
mov
jecxz
jbe
aas
decb
mov
insb
add
rcrl
push
hlt
mov
das
sub
jp
dec
lock
in
lds
mov
dec
adc
push
imul
xchg
leave
gs
fcmovnbe
stos
lret
mov
imul
scas
pushf
in
xlat
fidivs
push
cld
add
jmp
data16
cwtl
mov
inc
in
and
mov
mov
icebp
mov
lret
stos
outsb
sub
push
fistl
out
sub
xchg
push
nop
das
or
dec
cmpsl
inc
xor
out
jp
loop
adc
daa
and
push
int3
and
inc
popa
fdivs
jae
mov
pop
shlb
pop
test
fwait
jge
sub
xchg
add
jno
mov
inc
jmp
inc
jmp
test
stos
std
test
pop
add
fwait
and
sbb
xlat
inc
jno
push
dec
mov
inc
js
decb
push
cmp
insl
pop
jno
outsl
cmpsb
push
stos
and
repz
in
adc
cld
aas
mov
rorl
out
adc
ljmp
cmc
jle
out
xor
enter
add
lods
call
pop
sahf
jns
ss
push
movsb
lret
je
daa
push
dec
pop
aam
mov
sbbl
popa
mov
shrb
mov
aad
pop
je
push
mov
cmc
insb
cmp
push
out
dec
mov
arpl
sar
sub
mov
push
fildll
outsl
mov
xchg
dec
arpl
jecxz
mov
sbb
aad
mov
mov
fsubl
pop
push
mov
stc
cwtl
push
fnstenv
loopne
pop
cmpsb
add
lea
or
inc
jg
pushl
or
push
sbb
in
sub
lret
es
dec
outsb
dec
jecxz
stos
aad
push
cmp
adc
iret
mov
sub
mov
les
pop
sarb
ror
jmp
pusha
xchg
inc
push
add
mov
push
cmp
ljmp
sbb
cmp
out
cmp
fistl
loop
movsb
add
mov
cltd
in
xchg
sub
ss
xchg
xchg
cltd
outsb
ficompl
push
sbb
jne
push
push
xchg
lret
repnz
jnp
movsl
mov
jns
cmp
ret
in
mov
add
xchg
cli
ret
push
lahf
test
lret
in
sub
push
aaa
lcall
ja
inc
ljmp
ret
dec
add
inc
shll
dec
and
ss
cmpsl
jle
adc
push
test
mov
mov
nop
sahf
xor
jne
mov
xorl
pop
cwtl
xchg
sub
sbb
xor
in
addr16
loop
movsb
int
leave
rcrb
xabort
sbb
movsb
aam
adc
push
mov
or
addr16
or
add
jecxz
jo
subl
popa
inc
or
int
fimull
push
or
addb
jge
into
inc
add
dec
and
jmp
push
popf
ds
sub
inc
and
push
movsb
aaa
sarl
fcompl
sub
icebp
fstps
sti
es
push
mov
loopne
pushf
adc
pop
pop
repz
inc
leave
or
pop
xor
and
inc
stc
test
or
push
pop
ljmp
test
mov
iret
mov
test
inc
and
into
scas
mov
fdivl
push
push
mov
fsubrp
mov
pop
push
jb
vpaddw
push
cmp
popf
pop
inc
pop
pop
mov
fcoms
mov
push
popf
dec
xchg
movsl
test
cmp
xchg
adcl
xchg
push
shll
repnz
cmpsb
xor
xlat
mov
rorl
aad
andb
inc
stos
inc
push
lock
test
or
roll
or
and
aam
dec
dec
mov
mov
leave
inc
pop
dec
inc
push
push
ljmp
pop
in
nop
loopne
ljmp
cmpsl
mov
and
clc
aaa
test
mov
add
mov
and
pop
jno
rol
test
lock
xor
popf
sub
pop
jmp
mov
sahf
sbb
out
lahf
sbb
sbb
sahf
cmove
mov
inc
pop
inc
inc
push
sarl
cmpsb
icebp
or
or
lcall
stos
jae
push
dec
insb
push
jno
cs
int3
or
mov
push
popl
inc
cld
sub
pop
in
lds
subb
pop
or
dec
clc
push
jnp
push
and
inc
rolb
or
push
notb
gs
and
pushf
pop
mov
mov
mov
sub
loope
xor
xor
push
cld
jp
xchg
mov
sub
push
notb
mov
mov
int3
inc
push
mov
adc
and
push
xchg
aaa
sub
insl
int3
andps
imul
push
outsl
lea
daa
sub
test
mov
and
movsl
pop
dec
iret
jbe
mov
or
rcrl
insb
lock
or
ret
mov
nop
pop
pop
rclb
imul
test
add
jne,pt
adcb
sbb
int
pop
push
cmpb
lret
xor
fidivl
icebp
loope,pt
and
jle
mov
rcrb
inc
jp
cwtl
mov
mov
xor
mov
pop
repnz
cli
in
pop
cmp
sub
add
jle
repz
and
jae
inc
jne
repnz
in
out
xor
xor
stos
pop
int
cmpsl
adc
hlt
dec
out
or
mov
xor
pop
add
pop
adc
xchg
pop
mov
test
sbb
imul
mov
pop
xchg
into
repz
movsl
and
inc
js
test
jge
fsave
fmull
xchg
jo
neg
jnp
mov
jnp
fsubl
in
mov
cmp
rcll
into
jmp
or
xor
dec
mov
andl
push
shr
movsl
adcb
sub
push
jo
icebp
cmp
push
mov
pop
ret
push
adc
lods
int3
cmpb
out
add
xchg
jg
aad
adcl
dec
in
add
inc
ss
xor
pop
jno
pop
jne
xlat
dec
clc
sbb
cmp
and
mov
sbb
insb
aam
adc
rclb
fdivrp
add
fmuls
jno
push
jecxz
cmp
cli
nop
lret
daa
jecxz
arpl
dec
xor
cmp
movsl
lods
js
pusha
push
mov
sbb
scas
stos
jmp
cmp
dec
dec
je
dec
lock
loope
icebp
cld
xor
scas
outsb
repz
scas
ficoms
pushf
out
sbb
pop
sbb
mov
xor
lret
test
aam
push
sub
inc
or
inc
fdivrl
sti
cmp
or
sub
stos
pop
mov
and
cli
adc
add
lret
jnp
xchg
xor
rcrb
sub
mov
add
inc
push
jne
add
mov
jmp
jl
cld
adc
movsbl
adc
repnz
cmp
and
xor
sub
rclb
jo
xchg
add
pop
push
aam
push
mov
jg
push
mov
ljmp
scas
stos
rorl
mov
sub
scas
push
cmpsl
pushf
sbb
data16
cmp
mov
xlat
xlat
fwait
test
mov
int
cmp
pop
ljmp
add
mov
mov
push
int3
mov
mov
add
xlat
mov
mov
xchg
mov
sbb
pusha
dec
cld
cmp
loopne
sbb
adcb
push
fwait
jo
xchg
lea
ret
stc
subb
lret
pop
popf
enter
in
or
mov
sbbb
lret
inc
or
aaa
jb
xor
xchg
fdivrs
pop
aas
cmp
inc
push
add
sbb
jnp
and
test
popf
pop
cwtl
push
mov
dec
daa
notb
jo
xor
xchg
enter
daa
es
loop
xchg
push
rol
push
int
mov
js
pop
inc
rorl
lcall
in
ss
fimull
in
push
out
pushf
pop
cmp
ja
dec
std
mov
pop
add
mov
in
test
sub
inc
mov
test
int3
add
xchg
aaa
incl
cltd
jmp
call
inc
lret
outsb
bound
mov
movsl
inc
mov
mov
sahf
mov
xlat
mov
les
xlat
xchg
enter
add
xor
cmp
ss
mov
add
enter
push
mov
jp
push
push
shrb
xchg
xorb
mov
cld
outsl
push
test
repnz
ret
sti
ss
ffreep
imul
xchg
dec
data16
into
pop
push
rcrb
mov
push
cmp
out
xlat
xchg
sbb
dec
jns
add
dec
dec
dec
dec
scas
and
push
cmc
cmpsl
add
and
push
cmpsl
mov
std
mov
bound
aaa
aam
into
add
test
dec
dec
ret
fimull
xchg
sub
subb
dec
dec
inc
inc
adc
pop
xchg
jg
mov
and
mov
mov
or
sbb
inc
ficompl
jns
mov
enter
xchg
add
add
inc
test
mov
or
mov
int3
jo
inc
sub
add
daa
in
push
jnp
popa
in
cmpsb
or
fnstsw
fildll
cmp
dec
rorl
in
mov
mulb
add
jne
inc
loope
repnz
xor
push
sbb
insb
mov
push
divb
repnz
mov
fldcw
rcrb
cmp
es
aas
push
cmpsl
add
or
das
mov
adc
incb
fsubrl
imul
arpl
jle
xchg
mov
push
xorb
pop
lcall
push
pop
push
mov
lret
aad
xchg
mov
sti
push
rcrb
sbb
or
xchg
jge
xchg
push
mov
stc
js
rcll
xchg
addr16
pop
jb
out
cmp
lret
xor
pop
aas
out
and
daa
xor
cmp
adc
pop
cmp
movl
pusha
in
ljmp
mov
or
lds
fstps
add
lcall
add
jnp
jmp
loopne
invd
fstl
int3
mov
mov
xchg
push
sahf
outsl
out
cmp
cmp
sti
lea
inc
xorl
sub
enter
cli
jmp
xchg
int3
jmp
aad
loop
addr16
aad
in
mov
pop
mov
icebp
cmpsw
push
push
addr16
mov
mov
adc
cmp
jb
mov
mov
hlt
inc
mov
mov
jmp
fs
mov
lea
testb
inc
add
pop
ds
ds
lea
xchg
cmp
out
pushf
loope
movlps
int3
xor
pushf
mov
add
roll
int
rorl
add
mov
jae
pop
mov
movsb
pop
aaa
pop
pop
loopne
adc
cmpsl
dec
inc
pop
nop
lret
mov
pop
mov
sbb
cli
out
mov
cwtl
or
mov
jno
shll
pop
adc
fisttpll
ret
xchg
mov
dec
popa
cmpsb
xor
andl
dec
movsb
pusha
fsubs
lret
jl
cs
out
and
arpl
fwait
lret
andb
sbbb
pop
cmp
push
loopne
gs
imul
mov
or
repz
dec
mov
pushf
add
ds
push
int3
and
popa
dec
push
mov
push
je
jl
sub
ror
pop
hlt
sbb
fcmove
jo
and
cmp
sbb
pop
test
into
shll
das
sbbl
into
push
and
sbb
sti
mov
test
jle
inc
int3
hlt
lods
xchg
fadds
mov
or
and
mov
popa
in
mov
jp
mov
push
xorb
and
jl
or
fadds
push
and
pop
push
stos
add
jae
lahf
sub
dec
inc
add
addb
scas
repnz
inc
insl
sbb
add
xchg
inc
sub
insl
test
ljmp
cmp
jge
jno
cmp
xor
aas
lret
and
popa
sahf
inc
or
cmp
jo
push
unpcklps
mov
je
stos
or
fdivrl
pop
clc
fimull
imul
adc
popa
xchg
xchg
adc
mov
ljmpw
cli
pop
or
ret
adc
cmp
dec
fs
sarb
lods
shll
push
fsubrl
sub
mov
lods
aaa
insl
jle
jmp
mov
push
movsl
mov
xor
negb
and
int
idivb
pop
ljmp
inc
cmc
adc
mov
aad
xlat
push
int
pop
popa
mov
js
loope
push
sub
xchg
xor
je
or
ret
jnp
mov
mov
adc
push
incb
les
fsubrl
sahf
mov
dec
out
push
sahf
pop
arpl
js
outsb
pop
gs
jno
out
jg
sub
aaa
ss
sbb
adc
aas
pop
adc
pop
jl
test
fldl
lret
mov
sub
jns
out
ja
pop
pop
jnp
or
mov
xor
adc
cmp
mov
sbb
ss
pop
jae
jnp
xlat
int3
add
roll
xchg
les
sub
outsl
xlat
mov
cmp
pop
aad
sub
push
cmp
adc
scas
pop
add
in
sub
test
idivb
or
adc
add
cmpb
nop
xor
push
xlat
lcall
mov
cld
call
add
inc
cmpsl
jmp
push
cmpsl
shll
sahf
out
push
adc
inc
inc
pop
push
mov
mov
scas
inc
pop
sbb
and
add
dec
mov
xor
mov
jg
lcall
sbb
xor
stc
movsl
mov
std
shlb
insb
in
xor
lea
pop
stos
rcl
in
adc
popa
mov
std
ror
test
xchg
xchg
imul
jb
call
cmpl
xor
loop
jae
mov
xor
jnp
xor
add
add
es
lcall
push
and
push
add
lods
adc
jmp
sarl
aam
pushf
cmc
out
out
mov
scas
add
push
pop
cld
repnz
mov
inc
mov
test
jae
mov
cwtl
jbe
cmp
nop
enter
jp
bound
sbb
pusha
or
into
and
ret
int3
add
sbb
xchg
cs
sbb
xchg
out
inc
call
es
repz
pop
xor
mov
lea
cmp
sbb
loop
fadds
arpl
outsb
mov
cmp
outsb
xor
int
and
xorb
shr
test
and
mov
sub
js
jecxz
arpl
testb
and
pop
add
subl
xchg
mov
fmull
popf
daa
arpl
js
mov
adc
test
add
pop
ret
push
lahf
loope
faddl
xchg
mov
neg
idivl
jns
cld
jecxz
inc
jecxz
inc
push
loopne
jmp
lahf
sbb
jnp
inc
pop
sbb
adc
pop
add
inc
mov
icebp
stc
adc
loop
mov
or
ds
pop
fcmovnu
jge
insl
jnp
daa
mov
pop
js
or
cmpsl
pop
mov
sub
rorl
icebp
ss
push
mov
mov
je
pop
addr16
icebp
pop
mov
xorb
sub
setne
mov
cmp
push
lret
fsubs
adc
dec
xchg
sbb
adc
xor
xchg
mov
cmp
or
pop
pop
add
pop
lret
xor
sti
std
lock
stos
sub
push
das
shlb
sti
insb
sbb
cmp
leave
xchg
insb
rcrl
daa
ror
loopne
in
imul
mov
push
loope
hlt
adc
aam
daa
adc
test
and
inc
jae
iret
in
cltd
cmp
pop
cltd
jbe
iret
daa
negl
mov
enter
outsl
test
push
inc
adc
in
pop
cmp
sarb
out
popf
push
mov
aad
std
pop
dec
jecxz
sub
lret
in
adc
pop
push
stc
les
gs
push
pushf
int
sar
sbb
into
jb
int
aaa
jmp
mov
sahf
sub
and
push
add
int3
xor
fadds
jmp
ret
xor
lods
pusha
jg
pop
das
clc
xchg
pop
scas
cmp
xchg
sbb
test
imulb
xchg
fistl
hlt
jg
arpl
xor
in
mov
mov
xor
les
dec
xor
push
inc
lea
test
and
das
in
pop
stc
stos
out
xchg
orl
xchg
sarb
fcmovnbe
mov
in
rolb
cmp
mov
lock
push
xor
inc
enter
push
pop
nop
lock
pop
pop
fucomip
fisttps
popf
lea
test
xchg
in
rcl
lea
cmp
pop
sti
sbb
outsl
pop
or
enter
leave
sub
enter
jb
leave
pop
push
jnp
jnp
mov
mov
lret
dec
das
add
push
es
mov
leave
ja
xchg
test
cmp
push
push
mov
fisubrs
jne
sti
add
adc
cmp
push
jne
push
les
mov
roll
je
or
mov
mov
lret
sub
outsb
inc
inc
or
lcall
mov
add
mov
rcrb
ficoms
xchg
jp
sub
adc
vorps
add
sub
hlt
daa
in
xchg
fcmovnbe
dec
cltd
mov
sub
push
adc
xor
push
cmp
mov
jne
insl
into
push
adc
push
gs
xchg
mov
adc
out
mov
outsb
mov
push
dec
mov
or
cmp
adc
xchg
mov
mov
push
push
mov
dec
rcrl
imul
push
lret
xor
aad
fsubrl
pop
js
je
out
fldt
stos
outsb
shrl
loope
cmpsb
cld
ficomps
jne
push
mov
inc
int3
push
mov
jmp
ret
sarl
dec
addr16
push
xchg
xorl
jecxz
cmpsb
pop
pushf
mov
sbb
mov
jne
push
cmc
mov
mov
pop
mov
cmp
stos
pushl
call
mov
jo
and
cmp
xor
lea
insb
hlt
xlat
or
jmp
xlat
stos
mov
xor
in
mov
jp
test
outsl
xor
lahf
jb
push
mov
in
pop
push
pop
shll
xchg
test
xchg
mov
leave
jbe
mov
push
xlat
jl
mov
adc
ljmp
lea
mov
and
loopne
stos
sbb
push
mov
adcb
addb
out
add
xor
movsb
scas
cmp
push
cmpsl
push
mov
fwait
xlat
jl
or
and
fsubs
andb
sub
sub
push
mov
ds
lret
cmp
movsl
call
push
out
push
mov
ds
pusha
or
sahf
sar
sbb
push
push
push
cmc
adc
sbb
mov
int3
push
or
mov
fadd
clc
insb
insb
leave
in
into
inc
loope
push
jb
sub
sub
push
cmp
incb
and
repnz
mov
push
mov
call
sahf
cmc
loope,pn
scas
shll
add
scas
or
loope
push
mov
dec
imul
ja
mov
popa
mov
dec
cmp
out
push
dec
cmp
mov
or
es
sub
mov
pop
subl
jle
adc
fcomi
stc
and
sbb
call
test
cmc
dec
scas
mov
or
les
pop
leave
mov
fdivrp
in
and
pop
jmp
enter
add
sbb
outsl
sbb
lcall
hlt
mov
test
jmp
repz
mov
cltd
add
call
mov
stos
movsb
pop
or
dec
fdivl
out
int
inc
pop
jb
pop
test
sarb
mov
cld
xchg
mov
jle
mov
push
jge
mov
dec
shrl
cli
and
testl
js
add
add
add
.byte
popf
add
add
add
xchg
cmp
add
andb
add
add
add
add
add
add
add
and
add
add
or
cltd
cmp
add
or
add
insb
add
cmp
add
cmp
add
add
and
add
and
add
and
add
and
add
add
or
andl
add
add
add
add
add
add
add
js
jbe
arpl
cs
add
push
dec
dec
dec
pop
push
je
imul
pop
inc
inc
pop
inc
push
inc
inc
dec
inc
pop
add
jne
outsl
pop
insb
pop
jae
ja
jne
imul
pop
jne
pop
inc
inc
pop
inc
dec
inc
inc
inc
pop
add
dec
pop
pop
inc
inc
pop
pop
insb
imul
fs
jbe
inc
inc
pop
inc
dec
inc
inc
inc
pop
add
jae
imul
popa
jns
pop
addr16
jns
insl
outsl
inc
inc
pop
inc
push
inc
inc
inc
inc
pop
add
pop
dec
inc
dec
inc
pop
pop
pop
inc
inc
dec
push
outsb
jns
jb
jo
inc
inc
pop
inc
dec
dec
dec
inc
pop
add
dec
pop
addr16
dec
pop
push
inc
arpl
pop
jbe
jne
pop
push
pop
inc
dec
inc
inc
inc
pop
inc
dec
inc
dec
inc
pop
add
dec
push
jns
jae
jb
inc
inc
push
push
push
push
pop
inc
dec
dec
inc
inc
pop
inc
push
inc
inc
dec
inc
pop
add
push
pop
inc
pop
push
pop
jp
jns
je
dec
pop
push
pop
pop
dec
popa
inc
inc
pop
inc
push
inc
dec
dec
inc
pop
add
gs
push
jno
addr16
fs
inc
push
dec
inc
jp
inc
pop
inc
dec
push
inc
dec
push
inc
dec
inc
pop
add
.byte
push
js
or
xorb
add
adc
add
add
add
add
jb
or
sbb
add
enter
pusha
xor
add
add
cld
xor
add
add
or
or
stos
xor
add
add
add
or
and
or
xor
add
or
xor
add
or
add
add
mov
or
lcall
add
xor
add
xor
add
xor
add
xor
add
or
and
or
cmp
or
dec
xor
add
or
add
add
jle
or
nop
xor
add
xor
add
xor
add
xor
add
xor
add
or
push
xor
add
or
inc
xor
add
or
add
add
outsb
xor
add
or
add
add
mov
or
cwtl
xor
add
add
add
arpl
outsb
add
sbb
push
imul
dec
jb
inc
js
add
add
inc
outsl
outsb
je
popa
insl
imul
add
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
jb
popa
je
push
outsb
add
push
inc
gs
je
arpl
bound
arpl
inc
inc
dec
xor
cs
insb
add
inc
gs
imul
add
or
imul
imul
ja
add
pop
inc
gs
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
inc
push
jo
jb
add
icebp
pop
dec
popa
jo
imul
gs
add
add
imul
je
add
push
inc
push
dec
gs
inc
add
inc
pop
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
or
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
jb
outsl
dec
gs
push
add
test
inc
gs
jb
jns
arpl
insb
gs
je
jb
popa
bound
hlt
push
inc
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
lret
add
je
popa
je
inc
outsl
jb
popa
je
add
sub
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
je
jb
arpl
jae
sub
dec
outsb
je
jb
outsl
arpl
fs
js
push
inc
fs
lds
gs
imul
jb
popa
fs
add
imul
outsb
je
outsl
insb
add
inc
imul
je
imul
dec
outsl
popa
fs
imul
js
add
inc
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jne
jb
outsb
je
push
dec
add
lds
insb
jae
jb
insl
jo
push
add
bound
inc
imul
push
add
push
dec
inc
dec
xor
cs
insb
add
adc
imul
add
gs
add
fs
insb
cs
insb
add
push
jo
inc
add
push
popa
je
dec
popa
imul
gs
jns
add
dec
push
inc
push
dec
cs
insb
add
add
add
add
add
add
and
add
inc
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
addb
add
js
add
add
add
add
add
add
add
mov
add
test
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
inc
or
sub
add
in
add
add
add
sub
or
insb
or
add
add
add
add
add
pop
add
in
add
add
add
push
add
add
add
add
add
add
add
sub
add
add
sbb
add
add
mov
add
or
or
or
out
push
or
or
or
or
or
xchg
mov
or
lcall
vpmacssdqh
mov
vpmacssdqh
inc
or
or
or
or
or
or
or
or
or
or
or
pop
fstp
iret
idivb
das
popf
or
or
xchg
inc
call
vpmacssdqh
mov
sub
or
or
and
lods
or
mov
or
vpmacssdqh
mov
vpmacssdqh
mov
vpmacssdqh
mov
sti
mov
vpmacssdqh
mov
aas
jg
and
vpmacssdqh
mov
vpmacssdqh
mov
vpcomd
mov
vpmacssdqh
mov
vpmacssww
mov
vpmacssdqh
mov
mov
or
or
or
or
or
push
movsl
sub
sub
dec
outsb
push
or
mov
or
or
int
pop
or
or
or
repnz
popa
or
or
or
or
or
or
or
or
or
or
or
or
or
or
imull
or
or
or
or
or
xchg
jo
or
or
test
or
or
sbb
sub
fs
int3
or
or
or
or
xor
sub
vpmacssdqh
mov
vpmacssdqh
mov
vpmacssdqh
mov
sub
vpmacssdqh
mov
or
or
or
or
or
jle
jne
vpmacssdqh
mov
vpmacssdqh
sbb
stos
call
mov
vpmacssdqh
repz
xor
or
or
or
or
or
or
or
or
or
jo
push
or
or
or
or
sahf
mov
or
call
or
vpmacssdqh
stos
or
or
or
push
test
or
mov
or
vpmacssdqh
mov
jno
mov
or
or
or
or
pushf
jbe
or
or
or
or
or
or
or
pop
les
or
or
dec
rorl
vpmacssdqh
mov
sbb
and
xor
adc
vpmacssdqh
mov
vpmacssdqh
inc
daa
call
inc
ss
xchg
xchg
or
or
or
or
or
or
or
or
or
or
or
adc
or
or
add
add
add
add
add
add
add
push
add
add
add
sub
add
push
add
add
add
add
sbb
add
add
enter
in
lods
in
lods
in
xchg
dec
loopne
sbb
dec
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
adc
in
lods
in
lods
mov
xchg
rorl
in
lods
in
lods
in
lods
in
lods
rcrl
push
movsb
les
in
lods
in
lods
in
lods
xlat
aad
in
lods
add
in
lods
mov
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
ja
add
dec
lods
in
lods
repnz
dec
lods
in
lods
in
lods
in
lods
in
lods
in
lods
aam
mov
dec
lods
fdivrs
gs
lods
in
lods
in
lods
in
lods
add
jne
jae
or
in
lods
in
lods
cli
xchg
adc
dec
lods
jbe
lahf
in
lods
in
lods
in
lods
in
lods
in
lods
repnz
adc
dec
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
pop
fstpt
mov
dec
lods
lods
xor
dec
lods
jmp
pop
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
cmp
lods
adc
sbb
dec
lods
in
lods
in
lods
fldenv
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
inc
cli
push
fs
in
lods
add
xchg
inc
in
lods
iret
insb
xchg
in
lods
in
lods
in
lods
nop
fs
pop
je
in
lods
in
lods
xor
pop
xchg
clc
mov
dec
lods
in
lods
in
lods
in
lods
in
lods
in
lods
push
lcall
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
add
in
lods
in
lods
in
lods
xchg
dec
lods
in
lods
in
lods
dec
mov
in
lods
in
lods
in
lods
and
lods
in
lods
lods
call
in
lods
in
lods
in
lods
in
lods
in
lods
icebp
adc
dec
lods
in
lods
in
lods
pushf
pop
pop
jno
mov
add
dec
lods
scas
mov
dec
lods
in
lods
mov
lods
sub
dec
lods
in
lods
in
lods
imul
in
lods
inc
mov
in
lods
in
lods
in
lods
in
lods
test
in
lods
sbb
cltd
in
lods
in
lods
mov
lods
cltd
jl
lcall
dec
lods
add
in
lods
in
lods
in
lods
push
mov
dec
lods
in
lods
in
lods
in
lods
inc
sub
in
lods
in
lods
in
lods
in
lods
in
lods
bound
daa
in
lods
in
lods
in
lods
in
lods
or
adc
dec
lods
in
lods
in
lods
into
rol
in
lods
icebp
daa
mov
dec
lods
add
in
lods
in
lods
mov
pusha
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
mov
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
xor
shl
lods
in
lods
in
lods
xchg
fbld
dec
lods
in
lods
in
lods
in
lods
add
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
nop
out
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
dec
iret
jl
dec
lods
push
xchg
in
lods
in
lods
in
lods
in
lods
cmp
add
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
popa
sahf
sbb
dec
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
imul
repz
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
add
in
lods
in
lods
in
lods
in
lods
mov
dec
lods
les
rclb
dec
lods
in
lods
in
lods
sahf
lret
and
dec
lods
in
lods
in
lods
jns
out
jecxz
in
lods
in
lods
cmc
out
jg
dec
lods
in
lods
in
lods
lock
dec
lods
in
lods
in
lods
pop
call
sub
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
mov
in
lods
adc
loope
or
in
lods
in
lods
in
lods
in
lods
in
lods
xchg
in
lods
in
lods
in
lods
in
lods
call
inc
in
lods
mov
int
dec
lods
in
lods
arpl
jbe
jb
add
dec
lods
cmp
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
cmp
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
cmc
cs
in
lods
cmp
jmp
dec
lods
in
lods
in
lods
in
lods
in
lods
in
lods
add
mov
lods
in
lods
in
lods
or
inc
add
in
lods
in
lods
in
lods
in
lods
in
lods
xor
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
inc
jb
cltd
mov
in
lods
add
lods
in
lods
in
lods
imull
add
dec
lods
in
lods
in
lods
in
lods
in
lods
cmpsl
lock
or
cmpsb
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
movsb
mov
in
lods
into
sbb
dec
lods
in
lods
pop
stos
fwait
in
lods
in
lods
in
lods
in
lods
adc
sub
mov
add
in
lods
in
lods
in
lods
xchg
cmp
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
fnsave
in
lods
jmp
in
lods
in
lods
insb
add
dec
lods
in
lods
jle
push
in
lods
in
lods
mov
lods
in
lods
cmp
in
lods
in
lods
add
in
lods
in
lods
das
mov
in
lods
inc
pusha
xor
dec
lods
in
lods
in
lods
in
lods
pop
pusha
pop
int3
int3
fucom
dec
lods
in
lods
in
lods
in
lods
pop
push
daa
mov
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
dec
add
dec
lods
in
lods
in
lods
in
lods
add
or
in
lods
in
lods
in
lods
fnsave
in
lods
inc
dec
ret
lods
in
lods
in
lods
in
lods
in
lods
es
adc
ja
in
lods
in
lods
in
lods
or
xchg
in
lods
in
lods
in
lods
in
lods
ja
jp
dec
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
add
in
lods
in
lods
in
lods
in
lods
out
roll
sti
popf
rorl
lods
cmp
fstpl
fs
xchg
in
lods
ljmp
dec
lods
in
lods
mov
repnz
lods
in
lods
in
lods
in
lods
jg
and
dec
lods
in
lods
in
lods
in
lods
in
lods
mov
add
dec
lods
add
sub
lods
in
lods
mov
repnz
jno
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
fstl
outsl
hlt
repnz
pop
ss
dec
lods
in
lods
in
lods
in
lods
or
dec
lods
in
lods
push
lods
in
lods
mov
in
lods
int3
rcrl
dec
lods
in
lods
xorb
in
lods
in
lods
in
lods
in
lods
das
and
and
pop
in
lods
in
lods
stos
ss
dec
lods
in
lods
int3
sbb
dec
lods
in
lods
in
lods
push
fisttpl
jne
nop
in
lods
in
lods
in
lods
fstpl
in
lods
add
adc
mov
dec
lods
in
lods
in
lods
in
lods
in
lods
in
lods
cmp
int3
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
inc
and
in
lods
sbb
mov
dec
lods
in
lods
xlat
rcll
mov
in
lods
in
lods
in
lods
in
lods
pop
xor
lret
jg
add
dec
lods
in
lods
in
lods
in
lods
bound
sub
lods
in
lods
pop
push
xlat
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
cmp
cltd
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
call
mov
lods
in
lods
in
lods
cli
jo
in
lods
in
lods
in
lods
in
lods
in
lods
jns
jbe
dec
lods
in
lods
in
lods
add
xchg
setge
lods
in
lods
in
lods
out
sub
dec
lods
in
lods
in
lods
in
lods
jge
testb
push
in
lods
out
ret
in
lods
in
lods
add
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
int
loopne
dec
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
call
lods
in
lods
in
lods
gs
push
dec
lods
in
lods
in
lods
in
lods
add
iret
pop
in
lods
add
in
lods
lcall
dec
lods
in
lods
in
lods
ljmp
in
lods
in
lods
fidivl
in
lods
jbe
popa
in
lods
in
lods
in
jmp
shrb
fs
lods
in
lods
xor
dec
lods
in
lods
adc
adc
dec
lods
in
lods
in
lods
in
lods
stos
clc
roll
add
dec
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
addl
in
lods
mov
lods
in
lods
in
lods
adc
in
lods
in
lods
in
lods
in
lods
add
clc
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
xorb
dec
lods
in
lods
add
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
mov
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
movsl
cmc
pop
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
fs
in
lods
in
lods
in
lods
add
in
lods
in
lods
in
lods
push
scas
xchg
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
sub
mov
cmpsb
pushf
in
lods
in
lods
rolb
repnz
lods
in
lods
in
lods
cwtl
jp
in
lods
in
lods
in
lods
in
lods
in
lods
ret
push
add
add
sub
cmp
cs
sub
sbb
or
aam
push
mov
add
add
inc
dec
into
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
in
xor
mov
pusha
dec
jl
mov
in
mov
in
mov
cmpb
xchg
stc
fldt
push
mov
in
mov
in
mov
in
mov
in
mov
and
sbb
fsubrl
int
mov
in
mov
in
mov
in
mov
in
mov
in
mov
daa
outsl
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
rolb
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
sbb
jne
mov
in
mov
in
mov
mov
ds
mov
in
mov
in
mov
test
in
in
mov
in
mov
in
mov
in
mov
in
mov
pop
cmpsl
lock
mov
mov
mov
test
test
mov
in
mov
in
mov
in
mov
in
mov
pop
inc
popf
in
mov
in
mov
in
mov
in
mov
shlb
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
negl
xchg
in
mov
repnz
cwtl
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
inc
dec
lods
test
in
mov
in
mov
in
mov
mov
test
xor
in
mov
in
mov
in
mov
popf
iret
inc
in
push
in
mov
in
mov
pop
out
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
rolb
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
aad
imul
test
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
and
mov
mov
test
jmp
popf
cltd
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
lcall
mov
sub
dec
out
nop
js
mov
in
mov
loopne
push
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
sub
bswap
sti
mov
mov
sbb
mov
in
mov
inc
xchg
das
in
mov
in
mov
fcmovnbe
sbb
push
pop
in
mov
in
mov
in
mov
dec
or
dec
jge,pt
mov
in
mov
test
cld
dec
in
in
mov
in
mov
in
mov
in
mov
dec
arpl
in
mov
in
mov
in
mov
in
mov
in
mov
mov
sbb
mov
in
mov
in
mov
adc
in
mov
in
inc
in
mov
in
mov
in
mov
in
mov
in
mov
push
lahf
enter
in
mov
in
mov
mov
jbe
xor
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
sarl
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
movsb
or
jno
jl
mov
in
mov
cmp
in
mov
in
mov
in
mov
insl
movsb
inc
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
pop
add
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
out
test
in
mov
in
mov
and
sub
mov
mov
lret
cs
loop
shl
in
mov
in
mov
scas
mov
in
mov
in
mov
in
mov
in
mov
adc
xor
test
mov
in
mov
in
mov
in
mov
out
andl
out
in
mov
sbb
inc
in
mov
in
mov
bound
mov
in
mov
in
mov
mov
out
mov
in
mov
in
mov
jl
lock
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
xchg
pop
dec
in
mov
test
clc
in
mov
fists
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
sbb
andl
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
inc
sbb
leave
shrb
mov
mov
je
mov
in
mov
in
mov
jb
inc
ljmp
mov
mov
fsubrp
mov
in
mov
in
mov
in
mov
in
mov
scas
mov
and
test
mov
in
mov
in
mov
in
mov
in
mov
in
mov
jno
sub
mov
dec
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
dec
or
jl
sahf
dec
or
or
sbb
or
or
in
ficomps
or
or
or
or
mov
arpl
or
or
or
inc
sahf
dec
or
out
sahf
dec
or
or
scas
loope
dec
or
clc
rcrb
sahf
dec
or
or
cmpsb
ja
inc
sahf
dec
or
or
or
in
sahf
dec
or
in
sahf
dec
or
add
sahf
dec
or
or
or
or
or
lods
sahf
dec
or
or
or
or
or
or
or
or
cmc
sahf
dec
or
push
sahf
dec
or
or
out
sahf
dec
or
or
nop
add
dec
push
inc
add
add
in
add
add
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jne
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jne
jnp
cmpl
cmp
mov
mov
cmp
fidivrs
push
ds
cmpl
ds
ds
ds
mov
ds
ds
add
pop
aas
js
cmpl
aas
in
aas
cmc
aas
add
add
add
xor
xor
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
push
je
cwtl
xor
cmpsb
xor
out
sti
xor
dec
ss
ss
xorb
ss
mov
aaa
sbb
pop
aaa
jl
xorl
lock
divb
cld
aaa
adc
sbb
inc
cmp
dec
cmp
jae
xchg
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jno
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
sbb
push
cmp
popa
cmp
jge
test
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jne
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
dec
cmp
sahf
cmp
scas
cmp
pop
ds
cmpl
mov
mov
ds
fdivrs
jmp
adc
aas
sub
xor
ss
inc
aas
dec
aas
push
aas
popa
aas
mov
push
add
mov
add
inc
xor
push
xor
xor
xor
xor
xor
xor
push
xor
jo
jns
cltd
xor
xor
xor
xor
xor
xor
xor
push
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
movsb
xor
mov
xor
and
inc
ss
mov
fwait
mov
ss
aaa
adc
and
and
aaa
mov
mov
mov
mov
aaa
in
icebp
aaa
std
aaa
add
or
adc
dec
cmp
insb
cmp
jp
mov
xchg
cmp
cmp
cmp
cmp
cmp
push
cmp
enter
aam
fidivrl
loopne
cmp
push
cmp
cmp
cmp
cmp
dec
cmp
push
jne
xchg
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
addr16
cmpsl
cmp
xlat
cmp
out
or
cmp
aas
ds
ds
mov
ds
fistpll
push
aas
adc
aas
ss
dec
aas
dec
aas
pop
aas
fs
imul
xchg
lea
mov
aas
idivl
std
aas
add
add
add
and
sub
xor
cmp
dec
xor
data16
mov
xor
xchg
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
in
divl
and
xor
cmp
dec
outsb
ss
xorb
ss
cmpsl
ss
xchg
aaa
mov
aaa
inc
cmp
jb
jl
cmpl
cmp
cmp
cmp
xchg
sarl
xlat
cmp
cmp
cmp
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
sub
xor
cmp
gs
jns
jg
xchg
mov
cmp
add
add
add
xor
xor
xor
xor
xor
jl
mov
mov
fdivl
loopne
in
call
xor
and
and
sub
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
mov
xor
xor
xor
add
mov
add
imul
jae,pt
ja
jnp
jg
cmpl
mov
ds
ds
ds
ds
mov
ds
ds
mov
mov
ds
ds
ds
sarl
xlat
fstpt
fistpll
jecxz
out
jmp
out
ds
sti
ds
add
pop
aas
or
adc
pop
aas
sbb
pop
aas
and
daa
aas
sub
das
aas
xor
aaa
aas
cmp
aas
aas
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
arpl
addr16
add
add
cmp
inc
.byte
