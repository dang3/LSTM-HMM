xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
jmp
ret
mov
sub
sub
mov
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
jg
mov
jle
mov
popf
dec
call
add
jne
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
mov
xor
movl
add
and
neg
addl
clc
sbb
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
incb
or
add
xor
add
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
add
add
and
add
and
add
and
add
add
add
add
add
mov
add
lret
add
add
fisubl
add
add
add
dec
and
add
and
add
and
add
and
add
add
add
and
add
add
add
add
dec
and
add
and
add
add
test
add
pop
and
add
add
add
and
add
and
add
add
stos
and
add
add
call
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
add
add
and
add
and
add
and
add
add
add
add
add
mov
add
lret
add
add
fisubl
add
add
add
dec
and
add
and
add
and
add
and
add
add
add
gs
jb
arpl
jae
gs
jo
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
je
push
gs
popa
jae
inc
jb
outsl
jb
add
dec
jo
outsb
dec
jne
gs
add
rolb
dec
gs
jo
gs
jb
jns
dec
add
insb
outsb
inc
add
repnz
imul
jb
je
arpl
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
je
jb
jbe
je
push
jb
imul
push
add
fs
imul
add
aam
inc
gs
jb
jbe
push
jns
gs
add
push
gs
insl
gs
push
add
roll
dec
gs
jo
jb
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
gs
je
imul
inc
add
aad
inc
gs
gs
inc
imul
insb
jae
gs
popa
insb
jne
add
push
dec
inc
dec
xor
cs
insb
add
add
je
push
outsl
outsl
insb
add
aaa
add
ja
push
fs
add
outsl
jae
push
push
popa
je
add
addb
jae
push
arpl
add
inc
gs
push
gs
inc
js
outsb
je
add
inc
gs
imul
gs
add
add
je
push
outsl
insb
outsl
jb
xor
jae
push
push
popa
je
add
add
ja
push
popa
arpl
jb
jne
add
gs
push
gs
dec
gs
imul
jo
outsb
push
push
popa
je
add
push
imul
gs
add
jns
inc
gs
push
jns
push
imul
dec
inc
dec
inc
cs
insb
add
add
arpl
push
dec
inc
insb
insb
outsl
arpl
jbe
add
add
arpl
push
dec
inc
insb
insb
outsl
arpl
outsb
outsb
arpl
add
push
jb
arpl
push
dec
inc
imul
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
insl
je
dec
inc
inc
inc
push
push
inc
inc
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
lcall
jg
add
jp
lods
lods
lods
add
cmpsb
push
mov
mov
mov
les
into
into
int
rcl
shr
rcl
shl
ror
iret
hlt
into
into
int3
hlt
leave
enter
enter
mov
mov
lods
lods
stos
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
leave
leave
not
rcl
cld
xlat
std
xlat
xlat
xlat
fcomp
fdivr
aad
ror
iret
dec
into
int3
aam
aad
iret
rcl
inc
ret
mov
mov
lods
iret
movsl
movsl
mov
dec
xor
xor
add
add
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
scas
sbb
mov
jnp
mov
mov
dec
leave
leave
dec
iret
sar
aad
fcomp
fdivr
fcom
call
aad
dec
int
dec
into
int3
call
aam
dec
int3
int3
mov
mov
mov
std
cmpsl
cmpsb
cmpsl
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
dec
add
pop
add
push
or
or
sbb
push
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
call
rcl
fcom
fcom
call
aad
dec
into
int3
dec
leave
leave
dec
into
int3
inc
mov
mov
mov
mov
cmpsb
cmpsb
cmpsl
jmp
fwait
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
push
sbb
sub
sbb
aaa
cmp
and
adc
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
mov
mov
inc
leave
dec
rcl
call
aad
aam
rcl
sar
enter
inc
ret
ret
mov
mov
ljmp
mov
sahf
xchg
cwtl
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
jo
jle
jle
jge
jg
jo
jno
bound
mov
cmp
inc
inc
mov
outsl
outsb
outsb
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
lret
dec
leave
enter
ret
mov
mov
ljmp
movsl
mov
call
xchg
xchg
xchg
cwtl
cwtl
cltd
lcall
aas
ds
push
push
prefetch
add
add
add
add
add
add
add
add
add
add
add
add
outsb
jo
add
pop
or
jp
mov
incb
jnp
jl
jl
jo
outsl
out
data16
data16
jae
jg
jle
jp
jp
fs
inc
inc
cmp
pop
sbb
adc
adc
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
nop
nop
incl
addl
xchg
xchg
xchg
mov
mov
xchg
mov
js
jp
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
mov
addb
decb
xchg
loope
jb
enter
mov
addl
xchg
push
cmp
ss
es
jle
jle
lcall
shrb
lods
lods
sti
lods
lods
lods
stos
lods
stos
test
movsb
movsb
std
cltd
cltd
cltd
xchg
xchg
xchg
incl
jge
js
jns
jnp
jnp
mov
xchg
movsb
movsb
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
lea
push
pop
pop
push
prefetchw
dec
insb
insl
insl
jl
xchg
leave
cltd
lcall
cltd
lcall
mov
xchg
mov
mov
mov
cltd
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jnp
scas
test
add
pop
adc
test
call
fwait
xchg
cltd
incl
xchg
decb
xchg
xchg
sahf
popf
pushf
std
movsb
movsl
mov
out
xchg
xchg
xchg
in
xchg
nop
in
test
push
jne
push
push
dec
add
inc
or
or
es
dec
dec
dec
data16
jb
xchg
xchg
rclb
xchg
std
mov
xchg
call
lahf
lahf
jmp
lods
pushl
cmpsl
lods
mov
xchg
test
mov
xchg
lods
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
popf
cwtl
fwait
decl
mov
xchg
xchg
call
xchg
xchg
pushf
sahf
pushf
movsl
mov
test
mov
xchg
xchg
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
pusha
bound
jae
mov
jle
test
mov
nop
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
aaa
jge
mov
jbe
mov
movsl
mov
mov
stos
stos
mov
mov
add
mov
pop
pusha
adc
mov
ljmp
sahf
decl
nop
call
xchg
xchg
call
cwtl
xchg
lcall
lahf
sahf
mov
std
mov
cwtl
cltd
out
nop
xchg
nop
xchg
les
cwtl
cltd
in
xchg
cwtl
out
mov
stc
xchg
xchg
std
xchg
je
lcall
jmp
inc
jl
mov
jnp
mov
je
mov
insl
ljmp
adc
stos
or
or
mov
jg
mov
mov
stos
pushf
movsb
movsb
mov
add
mov
add
pop
adc
mov
lcall
nop
xchg
call
lcall
mov
sahf
popf
call
xchg
xchg
call
xchg
xchg
call
fwait
cld
xchg
cltd
pushf
stc
mov
xchg
pushf
cld
sahf
mov
xchg
push
xchg
pop
jle
cwtl
dec
js
lcall
sahf
pop
push
jmp
adc
ljmp
adc
lods
packuswb
lods
adc
mov
imul
adc
pushl
ds
mov
scas
scas
scas
mov
movsb
mov
add
pop
pop
adc
mov
ljmp
pushf
call
pushf
lcall
mov
movsb
jmp
cwtl
xchg
decl
mov
xchg
mov
xchg
ja
cltd
jo
lcall
call
cs
decl
adc
nop
or
xchg
add
call
pop
lcall
adc
stos
sbb
pushl
sbb
jo
mov
and
mov
and
inc
test
ret
mov
lods
lods
mov
mov
movsb
movsl
add
pop
pop
adc
lods
mov
shlb
lcall
movsl
movsb
jmp
cmpsl
cmpsl
ljmp
cmpsl
cmpsb
lcall
decl
inc
jno
mov
push
mov
arpl
mov
popa
decl
or
push
incl
add
lea
pop
decl
add
lcall
ljmp
and
mov
ja
mov
sub
shrl
ret
inc
sub
enter
leave
xor
enter
enter
sarl
lret
movsb
dec
mov
movsl
movsl
add
push
push
adc
cmpsl
scas
ljmp
lahf
jmp
test
ljmp
lods
pushl
lods
lods
jmp
mov
mov
incl
or
test
push
incl
add
addb
incl
add
add
nop
add
xchg
add
fwait
add
sahf
add
movsb
add
lods
adc
mov
ss
enter
lret
cmp
sarl
mov
sarl
mov
rorl
dec
mov
std
mov
mov
movsl
movsl
mov
add
mov
add
add
add
mov
dec
dec
adc
mov
mov
lahf
fwait
sahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
sahf
add
mov
add
lods
add
mov
jno
ret
cmp
int
mov
roll
call
dec
fmuls
fmuls
fimull
fisttpll
fistl
call
test
mov
mov
movsb
movsl
movsl
arpl
mov
add
add
add
cltd
cwtl
cltd
add
dec
adc
jp
movsb
popf
mov
lcall
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsb
mov
decl
sbb
nop
sbb
mov
decl
pop
push
decl
add
xchg
add
sahf
add
mov
add
test
pop
arpl
shll
call
push
cltd
fcoms
ficoml
fistl
jmp
pop
pushf
jmp
push
popf
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
mov
jne
mov
lahf
add
inc
inc
adc
ja
sahf
lcall
mov
lods
stos
pushl
mov
mov
mov
mov
ljmp
inc
jne
nop
and
xchg
and
call
arpl
xchg
sbb
xchg
or
call
add
fwait
add
mov
add
lods
add
mov
gs
mov
xor
call
pop
cltd
fbld
fbld
jecxz
cmpsb
jmp
fs
out
test
jmp
stos
fildl
mov
cmpsl
test
lahf
mov
mov
add
add
add
inc
inc
adc
jae
fwait
xchg
lcall
pushf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
cltd
outsb
lcall
sub
xchg
push
call
add
cltd
add
mov
add
lods
add
mov
pushl
call
inc
nop
fsubrl
jmp
outsl
lods
jmp
jo
jmp
jb
ljmp
in
jne
in
jbe
out
jbe
in
je
jmp
xchg
mov
cmpsb
test
sahf
sahf
lahf
pop
sahf
sahf
lahf
add
add
insb
outsl
js
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
movsl
lods
lcall
xor
mov
cmp
xor
lcall
call
add
add
add
mov
pushl
add
sbb
ficoml
jmp
jbe
call
jle
in
cmpl
push
xchg
push
test
ljmp
inc
mov
stos
cmpsl
sahf
pushf
popf
daa
lahf
mov
sahf
add
add
add
popa
add
ss
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
inc
ret
mov
mov
lahf
insb
mov
cltd
cmp
inc
jle
mov
aaa
js
lcall
lcall
add
test
popa
ljmp
add
mov
add
shlb
cmp
movsb
jmp
mov
push
mov
push
pop
push
xchg
push
nop
ret
stc
xchg
stc
mov
out
mov
inc
stos
stos
mov
popf
pushf
xor
pushf
pushf
add
add
add
inc
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
ret
mov
jle
lcall
dec
cmp
movsb
xor
pusha
lcall
add
test
pop
ljmp
add
mov
add
enter
xor
mov
out
xchg
ret
push
cltd
push
cltd
push
lcall
negb
int3
cli
sahf
int
cli
sahf
into
cld
cltd
lret
xchg
sar
mov
dec
mov
mov
mov
lahf
sahf
sahf
aas
nop
xchg
xchg
add
add
add
xor
or
cmp
dec
jecxz
pop
call
mov
mov
mov
sar
ret
ret
inc
mov
enter
mov
mov
ljmp
xchg
movsl
sub
fwait
push
pop
lcall
pop
ljmp
add
mov
add
leave
add
rorl
jne
fiadds
out
lea
push
movsb
int3
push
movsb
into
clc
cmpsb
int
cld
test
sar
cld
cmpsl
sar
std
stos
sar
std
stos
sar
test
push
popf
jmp
mov
dec
enter
mov
into
mov
xchg
xchg
add
cltd
cltd
add
add
add
sub
inc
inc
inc
bound
push
xlat
jae
jno
mov
mov
ret
mov
ret
mov
dec
enter
rol
mov
test
movsb
push
test
scas
push
mov
scas
dec
xchg
lahf
sbb
pop
jmp
pushl
push
dec
add
fadds
jb
loopne
jl
in
pop
cmpsb
push
sahf
lret
lods
aam
cli
mov
cld
scas
sar
cld
scas
sar
cld
mov
mov
cld
mov
cld
mov
std
mov
mov
push
cmpsb
mov
call
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
add
push
add
dec
dec
outsb
jo
mov
fcom
jmp
fcom
test
into
int3
dec
lret
lret
dec
lret
lret
leave
mov
lods
jmp
push
mov
stos
cmp
popa
jmp
add
mov
mov
add
roll
outsb
call
add
fiadds
jae
call
jno
sti
lods
aam
mov
cld
mov
fdivr
cld
mov
xlat
mov
fcos
inc
mov
int
out
call
leave
int3
mov
mov
xchg
or
add
add
xor
xor
add
or
mov
pop
call
call
loope
fsub
fcmovu
fdiv
fcomp
fsqrt
std
into
ror
mov
push
test
test
jb
mov
add
mov
popa
mov
add
leave
add
add
faddl
jbe
in
js
out
das
xchg
stc
mov
sti
mov
loope
inc
loopne
inc
loopne
inc
fdivrp
inc
fdivrp
dec
loopne
dec
std
leave
loopne
inc
fdivrp
dec
loope
cli
mov
lret
lret
into
mov
mov
xchg
adc
add
add
std
incl
std
add
std
add
div
or
out
in
pop
in
out
out
sub
out
in
dec
call
call
call
aad
fcmovnu
jmp
mov
xchg
test
js
movsb
adc
jmp
add
mov
arpl
mov
add
into
add
xlat
add
add
call
inc
fwait
cld
mov
in
cld
lret
dec
in
dec
in
std
into
in
std
into
jecxz
dec
loop
call
in
std
iret
loop
shl
call
jecxz
sti
out
mov
xlat
inc
ret
cmpsl
cmpsb
cmpsb
mov
cwtl
xchg
add
add
add
std
incb
std
std
add
clc
clc
add
hlt
icebp
add
hlt
repz
in
lock
pop
out
lock
cmp
in
in
pop
loop
mov
xchg
sti
mov
add
pop
ljmp
add
roll
inc
add
add
fildl
jne
jecxz
jnp
in
push
pop
test
cli
mov
cld
shl
shl
shr
std
shr
std
shl
call
call
fsubr
std
fldl2e
fldl2e
shl
push
ret
in
lret
lret
lret
repz
xchg
xchg
and
cwtl
xchg
add
std
cli
add
clc
add
cli
stc
add
cmc
repz
aad
xor
mov
xchg
negb
add
add
lods
add
mov
add
lret
call
add
fldl
jbe
out
jns
out
sbb
cli
fld1
std
fucomi
std
fucompp
fldl2e
fsubr
std
fucomi
fucomp
fsubrp
fucomip
fsubrp
cld
aam
push
aad
out
rcl
sar
stos
lods
lods
lods
xchg
xchg
xchg
outsb
jo
add
add
add
loope
add
mov
cltd
repnz
and
sahf
add
cmpsb
add
mov
mov
add
into
add
aad
jb
fiadds
jne
jmp
sub
cld
shl
std
fucomip
fsubr
fucomi
call
call
std
shl
sti
shl
cld
shl
stc
into
test
in
mov
xlat
xlat
fdivr
mov
mov
fwait
cltd
cltd
cmp
cltd
add
fcom
add
mov
lahf
jmp
sub
lahf
add
ljmp
add
add
les
imul
fadds
jb
loop
jns
call
xor
cli
leave
loopne
cld
int3
loope
cli
idivl
sar
repz
iret
push
mov
into
jmp
mov
iret
std
ljmp
imul
fsub
cmc
loopne
mov
mov
xchg
add
add
add
into
int
mov
sarb
lahf
xor
pop
ljmp
add
mov
add
dec
push
jo
rorb
je
jns
loop
cmp
dec
xchg
jmp
mov
call
scas
leave
std
loop
scas
cli
fdivl
lock
int3
in
lret
shl
aad
out
loopne
in
in
test
out
lock
ljmp
push
lods
lods
stos
adc
cmpsl
test
add
ret
mov
ret
mov
lods
aam
dec
cmp
sbb
test
imul
and
mov
js
mov
dec
xchg
ret
stc
lret
test
mov
out
mov
mov
leave
lret
int
ror
int3
mov
into
shlb
xlat
rcl
jg
jb
loopne
gs
jecxz
call
out
in
xor
cmc
div
and
lock
or
mov
int3
add
add
add
sarl
mov
xchg
lock
je
ljmp
mov
sarb
test
mov
mov
cmpsl
mov
enter
int3
jp
int3
iret
addr16
rcll
rcl
dec
xlat
inc
rcl
xor
fcmovnu
daa
fcomp
fistpl
fcmovnu
fstl
fsubp
loope
loope
in
out
ljmp
sti
cmc
add
std
add
std
incl
std
incb
mov
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
ret
inc
ret
enter
into
lret
daa
int3
rcl
and
aam
sbb
aam
adc
aam
or
aad
rcr
xlat
add
add
add
jecxz
add
in
ljmp
incb
mov
mov
add
ret
vmovaps
mov
mov
push
rol
or
leave
movl
into
lret
aad
add
fcom
add
xlat
aad
aad
add
aam
add
xlat
loop
xlat
aad
add
loope
add
fstp
add
out
add
lock
add
incl
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
les
mov
mov
mov
test
stos
dec
cmpsl
test
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
iret
ror
jmp
rcl
cmc
rcl
aam
into
rcl
cli
lret
int3
int
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
sarb
into
into
sar
aad
aad
aad
rcl
sar
iret
int
dec
lret
mov
mov
stos
icebp
cltd
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jae
je
gs
dec
inc
inc
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
ret
ret
lret
int3
call
rcl
call
rcl
dec
int3
lret
inc
mov
rol
pushl
stos
test
popf
lahf
popf
xchg
xchg
cwtl
jmp
jno
xchg
push
push
pop
dec
add
add
add
add
add
add
addb
addl
aam
imul
pop
pop
movsb
push
push
push
stos
push
insl
outsb
push
pop
pop
cmp
cmp
pop
outsl
jo
adc
mov
mov
ret
mov
mov
mov
ljmp
fwait
pushf
call
xchg
fwait
cltd
cltd
out
test
adc
wrmsr
add
add
add
add
add
pop
cltd
fwait
fwait
add
fwait
cwtl
lcall
addb
jl
jl
js
js
jp
jns
jnp
jns
jb
je
push
push
push
cmp
je
pushf
sahf
pushf
mov
scas
lods
repz
scas
lods
sti
scas
lods
lods
std
cmpsl
test
std
sahf
popf
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
cmpsb
movsb
cltd
jb
je
adc
adc
add
add
add
add
insl
insl
outsb
pop
xchg
mov
sahf
lcall
mov
nop
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
outsl
outsl
orl
cwtl
cltd
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
cmpsb
cmpsl
mov
mov
mov
scas
mov
mov
mov
movsl
movsb
cmpsl
pop
addb
add
add
add
popa
or
lods
mov
cmpsl
lahf
movsb
decl
mov
call
sahf
lahf
sti
mov
cltd
lcall
push
push
jo
push
pop
outsl
insb
outsb
outsl
xchg
subl
mov
nop
lcall
mov
pushl
pop
mov
jl
mov
lods
stos
insl
stos
stos
test
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
xchg
lcall
cltd
cltd
cltd
pushf
lcall
xchg
cltd
jmp
xchg
mov
popl
mov
xchg
imul
popf
dec
jp
mov
ss
scas
sub
push
insl
ljmp
sbb
pop
mov
scas
mov
movsb
movsl
movsb
push
pop
pusha
pop
or
mov
in
mov
cwtl
lcall
mov
mov
decl
orl
cld
cwtl
pop
cmp
dec
jns
xchg
cmp
xchg
sub
xchg
sbb
call
or
push
pushl
sbb
mov
and
mov
stos
mov
scas
scas
lods
xchg
lahf
lahf
popf
adc
add
add
popa
pop
pop
or
lods
mov
stos
mov
lahf
jmp
test
cmpsl
lcall
pop
jnp
mov
imul
sub
push
pop
incl
or
mov
pop
call
add
test
pushl
jnp
shrb
inc
das
jle
xor
dec
pop
xchg
inc
test
imull
cmpsl
test
popa
pop
pusha
or
movsb
test
jmp
scas
scas
pushl
mov
jmp
jno
mov
pop
decl
or
push
push
decl
add
xchg
add
sahf
add
cmpsb
add
mov
insb
inc
aaa
cmp
inc
mov
rolb
aam
nop
call
inc
xchg
call
bound
stc
mov
mov
mov
incb
add
add
pop
popa
pusha
or
sahf
mov
ljmp
mov
mov
mov
mov
movsb
stos
lcall
push
call
pop
pop
decl
push
call
add
cmpsl
add
scas
add
ja
rorl
fsts
fistpl
ficomps
jmp
pop
mov
fisubrs
dec
cmpsb
mov
ret
movsl
xor
addb
add
add
dec
pop
jle
jnp
pushf
cwtl
cltd
jecxz
sahf
mov
pushl
mov
mov
jmp
sub
insl
call
minps
xchg
add
lahf
add
cmpsl
add
mov
arpl
mov
xor
fsubl
jmp
outsb
stos
jmp
outsl
lods
jmp
jno
in
jno
call
test
std
mov
cmpsl
test
add
add
add
dec
pop
outsb
outsb
imul
test
cltd
cwtl
xchg
pushl
mov
mov
mov
je
lcall
cmp
sahf
sub
xchg
or
fwait
add
movsb
add
lods
add
mov
fs
or
xchg
jmp
jns
jmp
test
push
xchg
push
mov
mov
cmpsb
cmpsb
push
lcall
add
sub
push
push
push
dec
pop
gs
loopne
mov
mov
mov
mov
xchg
jmp
sub
fwait
pop
pop
jmp
add
mov
gs
mov
adc
jmp
pusha
mov
push
xchg
ret
push
xchg
push
cltd
stc
cltd
lret
lcall
jecxz
vcmpss
popa
lahf
mov
add
xor
xor
inc
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
pushl
pop
xchg
lods
dec
cmp
pop
push
sahf
add
ljmp
add
add
leave
add
fsubs
cmp
hlt
mov
sar
clc
test
iret
std
stos
sar
lods
sar
cli
cmpsl
lret
jmp
mov
inc
mov
stos
jne
popf
pushf
or
add
add
push
dec
dec
aaa
je
je
stos
test
into
out
int
cmc
leave
int3
lret
leave
lret
enter
mov
mov
lods
inc
jle
mov
add
mov
gs
add
int
insl
fildl
je
ljmp
sti
mov
cld
mov
cld
mov
std
mov
fdivr
cld
mov
enter
repz
lods
scas
mov
add
add
add
add
or
aam
dec
loopne
jecxz
loopne
loope
fcmovnu
fcmovnb
fcmovnu
fcmovnu
aam
xlat
out
shlb
test
jb
movsl
pop
popa
pushl
add
leave
add
add
in
jl
icebp
dec
mov
sti
loop
dec
loopne
std
enter
lret
dec
loopne
std
out
mov
lret
mov
xchg
popf
pushf
sahf
sbb
add
add
std
std
add
incb
ljmp
in
in
in
xor
loopne
in
les
mov
mov
add
pushl
add
iret
add
fldl
jne
ljmp
std
ret
sti
shl
call
out
shl
std
shl
call
call
shl
push
enter
int
stc
mov
mov
add
incl
std
add
cld
incb
aad
aam
mov
pop
xchg
lahf
or
stos
add
mov
gs
add
rolb
jo
fiadds
jbe
in
pop
mov
clc
mov
std
shl
fsubr
fld1
cld
xlat
jmp
cld
xlat
out
sti
shl
push
xlat
jmp
iret
xlat
sti
mov
sahf
popf
das
add
add
int
int3
or
arpl
stos
add
mov
add
roll
jno
loopne
jns
out
das
xchg
clc
fwait
sti
lret
loop
clc
lret
cmc
fsin
repz
icebp
ret
out
ret
aam
out
aad
in
aam
ljmp
ljmp
stos
das
incb
aam
aad
mov
je
push
data16
mov
imul
sbb
int3
and
xlat
sub
sti
ficoms
loop
mov
out
loop
leave
jmp
fidivrs
int3
leave
faddp
sarb
jecxz
fistpl
in
call
rorl
mov
add
stos
stos
stos
add
xchg
movsb
les
push
mov
mov
fidivrl
andb
int3
mov
ret
ror
rol
int
ror
iret
pop
ror
iret
dec
xlat
cmp
das
in
fisubs
loop
icebp
adc
in
jmp
fcmovu
fiaddl
incb
incl
mov
mov
outsb
mov
lods
jns
mov
mov
mov
mov
shrb
leave
leave
and
aam
pop
rol
adc
rcl
or
loopne
or
int
add
std
std
add
incl
cltd
fwait
fwait
add
lds
into
int
add
std
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
enter
leave
enter
enter
rol
mov
scas
scas
insb
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
std
rcl
sar
iret
iret
iret
std
mov
stc
mov
test
andb
push
add
add
add
add
add
add
add
add
jae
jb
data16
inc
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
int3
int3
call
aad
dec
int
inc
enter
mov
scas
jmp
mov
push
add
add
add
add
je
jne
xchg
adc
jo
ret
popa
mov
push
insl
jb
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cltd
xchg
lds
jae
daa
and
add
add
add
je
jae
pushf
xchg
lcall
test
clc
mov
test
addb
push
push
push
inc
mov
pushf
into
mov
lahf
mov
decb
mov
scas
test
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
test
mov
xchg
xchg
xchg
cld
pushf
pushf
popf
cmc
cltd
cwtl
lcall
push
push
imul
jge
mov
xchg
notl
mov
mov
fwait
pushl
jno
mov
mov
test
lods
stos
add
add
add
test
test
xchg
xchg
xchg
call
cltd
cltd
lcall
cltd
lcall
mov
loope
je
out
xchg
fs
push
jl
fwait
inc
jbe
cmpsb
ss
lods
sub
mov
jo
mov
insb
pushl
popf
lods
lock
mov
imul
int3
add
test
pop
scas
movsb
stos
test
popf
pushf
popf
jmp
movsl
movsl
call
imul
popl
decb
push
call
or
mov
sbb
je
mov
daa
jns
lds
xchg
mov
scas
mov
test
add
add
jae
mov
movsb
test
ljmp
scas
mov
lahf
xchg
decl
or
mov
decl
add
mov
adc
shlb
dec
inc
mov
inc
call
dec
xchg
dec
lcall
movsl
movsl
movsl
push
add
add
push
push
test
lahf
movsb
cld
lods
scas
scas
pushl
mov
ljmp
cmp
xchg
push
arpl
nop
pop
pusha
decl
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
pusha
movsb
jmp
cmpsl
call
fwait
mov
test
cmpsb
cmpsb
pop
add
add
arpl
adc
popf
fwait
fwait
cld
mov
scas
mov
mov
scas
lcall
xor
cwtl
and
call
add
add
mov
addr16
xor
call
jl
push
jge
out
jg
ficompl
mov
and
add
add
adc
push
cmp
mov
mov
ret
ret
mov
fs
movsl
inc
jge
mov
add
jmp
add
or
dec
xchg
out
lea
notb
stc
xchg
enter
mov
cmpsb
movsl
sub
aas
inc
aas
adc
push
xchg
xchg
mov
inc
mov
xchg
ljmp
sbb
movsl
add
mov
fs
add
aam
jns
ljmp
stc
lods
sar
sti
scas
sar
sti
scas
sar
cld
scas
sar
in
scas
lret
mov
movsl
ds
std
add
xor
scas
mov
mov
aam
mov
aam
out
lret
lret
mov
mov
jmp
add
ret
call
add
call
mov
cld
mov
std
rcr
std
ret
inc
out
mov
shl
cmpsl
test
addl
stos
add
jmp
or
jmp
out
outsb
fisubl
movsb
es
ljmp
add
lret
add
fiadds
ja
out
cmp
cld
into
in
dec
in
call
in
std
aad
call
out
test
call
enter
scas
lods
popa
cmpb
std
add
incb
int
shrb
sahf
sbb
lods
add
mov
add
loope
jns
repz
cmpsl
cld
enter
aad
cld
aam
std
shl
std
aam
cli
shl
push
enter
int
repnz
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
fistps
cmp
imul
out
mov
shl
ljmp
loope
lret
rcl
call
scas
vsqrtps
add
add
sahf
lods
xchg
inc
and
shll
lret
js
mov
fdivrs
lret
vmovdqa
lret
into
pop
dec
in
fistpll
call
out
out
sbb
mov
mov
cmp
movsb
scas
arpl
stos
mov
les
lds
ret
ret
int
fisttpll
into
int3
int
aad
aam
std
std
add
incb
stos
std
std
add
std
std
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
in
cwtl
pop
mov
daa
jmp
push
cmpl
xchg
popa
fldl
frstor
xor
aas
call
mov
ficompl
and
jnp
sub
insb
sub
jb
popa
mov
das
cli
adcb
add
pop
rclb
mov
insb
lds
mov
cmpsl
sti
pop
jg
pop
mov
inc
xlat
add
icebp
inc
mov
js
idivb
out
cmc
es
divl
xchg
push
sub
mov
cmpsb
imul
adc
pop
in
push
movsl
push
xchg
cmc
dec
push
rorl
lret
cmp
pusha
pusha
out
and
stos
xchg
xchg
nop
mov
mov
pusha
insb
push
jnp
sti
adc
aad
and
fdiv
or
push
xor
mov
insl
sbb
int
dec
lock
loope
adc
test
scas
or
push
and
add
int3
cmp
cmp
das
cmp
add
mov
lock
pop
leave
movsb
sub
sub
movsb
add
mov
arpl
xchg
pusha
and
ljmp
mov
add
mov
cmpsl
sub
mov
inc
xchg
sub
lods
mov
xchg
cld
mov
icebp
pop
aam
or
mov
mov
sbb
lret
jg
lods
xchg
gs
mov
and
dec
jne
call
scas
xor
and
mov
mov
sub
addr16
jno
les
pusha
pop
add
sub
ret
lcall
mov
jg
xchg
push
adc
jnp
out
outsb
jo
adc
ljmp
into
pop
lcall
cmp
je
add
js
xchg
pushf
inc
sub
xchg
cmp
add
scas
mov
cmc
add
sarl
sbb
push
loop
or
test
imul
imul
ret
popf
mov
inc
adc
call
inc
pop
sahf
cmp
in
push
loop
add
or
cmp
or
xor
cmp
pop
mov
xor
daa
mov
sub
mov
sub
sti
test
ficoms
lock
xorl
repnz
fs
cld
jmp
inc
adc
mov
andb
xchg
ficomps
jae
lods
imul
mov
jbe
insl
adc
lret
mov
adc
xchg
aaa
fwait
inc
psllw
stos
fbstp
sbbl
push
repnz
xchg
idivb
mov
jno
jecxz
cmpsl
push
jne
push
cwtl
jmp
filds
fnstenv
adc
push
jbe
cmpl
jle
loopne
shufps
cmp
sbb
pop
rcl
flds
dec
inc
sub
mov
add
and
dec
iret
xchg
pop
test
into
mov
sahf
cmp
popf
aaa
shrb
jns
push
add
in
faddp
pop
pushf
loopne
in
cwtl
and
xchg
mov
stos
sub
test
in
lret
fisubl
or
pop
sub
outsb
sbb
mov
cli
pushf
in
iret
dec
push
or
xchg
mov
xchg
cmpsb
das
adc
pop
mov
or
sbb
push
outsb
out
xor
je
or
fisubrl
xor
inc
pop
jo
pop
or
imul
sbb
mov
sub
jp
ja
mov
xchg
int
clc
jl
push
dec
call
les
dec
rol
icebp
cpuid
mov
std
pop
lock
fisubrl
testb
jp
cmpsl
jmp
aad
mov
out
jo
mov
aas
mov
or
mov
jno
xchg
add
push
push
push
push
xchg
mov
mov
sub
push
pop
outsl
call
js
roll
outsl
or
push
jp
xlat
adc
daa
push
cltd
jecxz
out
nop
ret
test
sahf
inc
loope
pop
cmp
stos
imul
jg
dec
sti
lahf
stos
stc
pop
jo
test
jo
push
testb
popf
outsl
in
and
mov
enter
punpckhwd
loop
xor
jae
rcr
xorl
jecxz
les
jmp
sti
imul
dec
and
or
pusha
cmpb
orb
or
aam
push
push
jbe
xlat
jnp
mov
pop
popa
out
mov
dec
adc
pop
or
mov
fiadds
jecxz
imul
mov
repz
shll
test
xchg
and
call
js
hlt
inc
outsl
jnp
cmp
push
in
popa
lret
xchg
xor
cmpsl
sahf
sub
stos
add
std
sub
subb
test
test
jge
pop
or
fisubrs
xchg
ljmp
loopne
sub
test
out
add
xchg
mov
loop
repz
sbbb
cmp
and
add
push
pop
fcmovbe
jle
aad
bound
push
sbb
or
arpl
pop
repz
xchg
lahf
mov
js
insl
cmp
stos
std
jecxz
loopne
pop
cmp
and
lret
aam
mov
inc
subl
pop
mov
shlb
pop
cltd
in
addr16
lea
cmp
push
push
out
adc
sbb
and
fistl
scas
jns
mov
gs
xor
btr
mov
leave
nop
insb
mov
jo
into
out
fsubrs
or
test
or
xchg
push
stos
aaa
jp
cmpsb
int3
xchg
jg
sbb
mov
out
test
stc
addr16
dec
loop
mov
inc
fidivrl
int
mov
aad
add
ret
cmpl
push
cltd
xor
fbld
jno
pop
arpl
lcall
and
pop
lock
fdivl
xor
jge
stos
fbstp
mov
or
dec
cmpsb
sub
xlat
push
pop
pushf
clc
inc
fisubrs
mov
push
in
jnp
lock
popf
je
iret
push
push
movsl
xor
sub
movsl
sub
inc
mov
jne
dec
loope
xchg
into
gs
dec
push
popa
popa
orb
sub
ficoms
test
adc
ja
addl
mov
insl
mov
push
adc
div
sub
lods
divl
stc
int3
leave
cmp
stc
aam
loop
fbstp
mov
std
xor
and
insl
test
jne
gs
inc
dec
mov
fs
test
xorl
lret
cld
sub
mov
dec
jl
fldt
into
stc
inc
inc
xlat
repnz
testb
movsl
gs
xchg
mov
xor
sbb
jae
or
xchg
sahf
pop
fsubrs
mov
testb
add
lods
xor
push
xor
xchg
push
call
cmp
outsl
push
sub
mov
mov
and
scas
into
enter
xor
lahf
mov
inc
mov
jg
push
mov
sahf
clc
mov
xor
mov
ret
je
pop
jle
rorl
in
outsb
add
add
xchg
mov
rcll
jne
add
test
icebp
xchg
aas
jmp
xchg
push
fdiv
movsl
pop
shlb
or
and
lock
rol
mov
rcl
add
push
sub
repz
and
inc
xchg
sub
sbbb
aas
shr
shrb
cmc
pop
daa
inc
lock
in
jp
push
movsl
lds
sub
pop
out
and
push
ds
mov
mov
fldl
adc
xor
push
ret
mov
ja
imul
xchg
pop
xor
mov
mov
test
cmpsl
mov
cmp
add
lds
and
push
sub
int
mulb
mov
daa
lock
ja
adc
xchg
mov
fiadds
inc
mov
mov
jecxz
xchg
sub
add
ja
call
push
cwtl
or
cli
sub
jb
mov
xchg
sub
dec
int3
arpl
das
dec
bound
jl
jbe
fisubs
inc
mov
jl
mov
pop
lea
or
sub
push
inc
jmp
push
push
push
sbb
inc
mov
xor
add
cmpsl
ds
pop
imul
test
dec
xchg
sbbl
in
push
mov
push
and
mov
iret
ss
jle
dec
sbb
shrl
pop
lea
jl
fwait
insl
cmp
ret
pop
scas
push
shrl
and
xchg
rorb
or
js
inc
call
mov
stos
inc
dec
push
movsl
cmp
insb
sbb
arpl
fisubrs
pop
cmc
inc
nop
leave
pusha
add
cwtl
das
adc
xchg
sub
lock
pushf
sub
les
bound
lahf
dec
inc
mov
js
mov
addb
repnz
call
xchg
data16
sbb
lret
bound
int3
push
call
pusha
fisubs
mov
xor
push
movsl
loope
jle
add
std
xchg
jne
adc
fcoml
xchg
sub
ds
mov
sub
dec
xchg
sub
popa
sbbl
cltd
das
mov
jge
pushw
cltd
xchg
stc
inc
das
jge
push
lods
mov
push
jmp
push
out
adc
inc
in
xorl
ret
push
leave
pusha
inc
cwtl
hlt
mov
inc
fstps
push
jmp
push
hlt
mov
pop
cmpsb
cmp
nop
and
popa
mov
jmp
dec
inc
inc
fdivl
jge
xor
aaa
dec
fadds
sti
imul
outsb
addr16
cmpsl
mov
hlt
jb
sbb
cmp
cmc
icebp
inc
pushf
xor
lcall
dec
pop
ds
insl
inc
fstpl
xor
push
jg
fidivl
shrb
xchg
dec
loopne
lret
adc
cs
mov
sub
daa
xchg
dec
and
cmp
dec
in
pop
adc
dec
mull
popa
mov
adc
lahf
adc
and
cmpsl
mov
inc
inc
cmp
sahf
stos
jmp
push
or
shrb
mov
loope
sarb
sbb
dec
sub
addb
es
xchg
test
or
stc
fwait
out
fs
sbb
rclb
xchg
sub
inc
mov
mov
push
jmp
pop
jb
jge
fwait
xor
movsl
cmp
mov
insb
cli
jecxz
adc
or
scas
jae
and
test
xor
dec
in
push
in
test
cmp
gs
adc
imul
jmp
lea
mov
xchg
test
mov
jmp
and
out
lea
sbb
outsb
pop
sub
mov
pop
xlat
movsl
cmp
jge
ljmp
xsha256
xchg
sub
test
lahf
ss
inc
shrl
mov
test
pop
or
cmp
ds
call
mov
outsl
sbbl
mov
repnz
mov
mov
xchg
out
cmpsl
lds
sub
test
loop
stos
testb
mov
fbld
push
icebp
das
loop
push
call
je
jecxz
jl
dec
jecxz
sbb
lods
push
daa
sbb
lret
sub
sbb
sub
dec
loope
dec
sub
cmp
pop
insl
push
insb
lcall
cmp
cmc
dec
mov
jnp
rclb
xor
bound
loopne
dec
cmp
mov
add
cmc
mov
mov
aas
jmp
xchg
shl
out
insb
add
insb
jns
fwait
xor
jecxz
or
stc
nop
aad
scas
inc
lahf
jns
fisubrs
inc
int
jb
mov
lds
dec
jecxz
out
and
not
imul
iret
fs
sbb
into
xorb
nop
adc
stos
inc
cmpsb
imul
lcall
andl
lret
lcall
adc
out
mov
fs
addl
jae
xchg
xor
icebp
mov
push
in
mov
fidivl
lret
aad
mov
fildll
mov
jmp
add
fnstenv
and
daa
mov
sub
sbb
cmp
adc
dec
insb
inc
fdivrl
cld
xchg
bound
jo
dec
sub
cmc
loope
jns
pop
fnsave
cwtl
das
out
stos
fnstenv
and
sarb
and
cmp
xchg
sub
xor
mov
idiv
or
pusha
jnp
shrl
pushf
movsb
cmp
push
aas
xchg
das
sub
mov
ror
mov
call
das
not
insl
sub
fidivs
in
mov
push
in
jg
call
jne
push
xchg
sub
movsb
cmp
jae
lds
adc
xlat
ss
lret
imul
jmp
inc
sar
fsubr
jno
add
push
ds
pop
xor
mov
add
mov
les
mov
jns
sbb
dec
loopne
lods
jg
shr
cld
fidivl
xor
cmp
lret
in
test
mov
outsl
push
sbb
add
adc
xchg
fstps
mov
in
add
and
out
icebp
shrb
shl
je
test
xchg
cltd
cmp
test
lret
mov
mov
push
sbb
and
xor
mov
push
leave
and
std
cwtl
lea
mov
arpl
sub
mov
cmp
pop
pop
icebp
dec
ret
stc
jo
scas
popa
mov
addr16
mov
hlt
inc
dec
loope
adc
fnstenv
cmpsl
xor
into
or
mov
cmp
int
cmpl
call
sub
out
xchg
shrd
nop
daa
js
loop
xor
enter
xchg
mov
rcrl
call
inc
dec
sahf
xor
xlat
or
into
gs
mov
mov
das
push
inc
mov
arpl
ret
mov
movsb
cmp
mov
enter
shr
or
cmpsl
cld
xchg
sub
leave
mov
and
testl
add
repz
mov
sbb
iret
inc
aam
xor
je
movb
sarl
mov
std
sbb
lret
les
mov
sub
fwait
inc
sub
xor
sbb
scas
dec
dec
outsl
push
pop
insl
dec
in
jnp
xchg
inc
push
sbb
adc
outsl
push
dec
addl
sbb
jne,pt
mov
ret
fbstp
pop
test
pusha
or
or
adcb
sbb
and
cmc
lds
xchg
fistl
insb
add
shl
in
in
lret
push
xchg
sbb
ds
sub
stos
pop
adc
jmp
xor
insb
add
mov
std
mov
xchg
mov
out
sbb
or
cmp
xchg
mov
fsubrl
xor
cs
push
in
adcb
jo
mov
out
test
mov
sahf
call
mov
in
ret
cmp
imul
xchg
sub
jno
push
aam
rol
ljmp
fs
jmp
jnp
mov
sub
outsl
pop
out
pusha
push
call
jns
dec
iret
scas
ss
leave
sbbl
test
rcl
ds
hlt
jns
ret
sbb
add
cmp
push
out
pop
ljmp
pusha
jp
cmp
pop
hlt
cmpsl
pop
add
push
sbb
pop
sbb
mov
jno
inc
faddl
xchg
jl
lds
pop
hlt
push
out
xchg
nop
mov
jb
add
inc
inc
mov
mov
mov
sub
fwait
adc
sbbb
mov
cmp
cltd
push
mov
data16
mov
inc
dec
addr16
sahf
pop
ret
mov
pop
repz
pop
mov
jg
imul
popf
inc
pop
call
pop
in
nop
sbb
pop
xor
add
or
or
xchg
lods
div
mov
or
xchg
cs
js
adc
push
inc
lea
inc
jb
les
and
push
xchg
mov
insl
push
xchg
aas
sahf
push
push
add
xlat
ja
mov
cmp
add
pusha
lret
xlat
pop
xchg
lds
jp
push
inc
mov
add
jb
adc
mov
xchg
dec
mov
mov
loopne
fwait
adc
popa
shlb
hlt
add
xlat
xor
mov
jle
imul
sub
inc
cmp
xor
xchg
test
fidivrl
sbb
inc
and
mov
ficoml
out
sbb
popf
lret
and
out
stc
inc
test
stos
jle
add
popa
cmpsb
jmp
dec
ffreep
movsl
inc
ficoms
cmp
stos
cmc
sub
aad
gs
xchg
int
rcr
es
shrl
cmc
out
in
adc
mov
jmp
adc
nop
daa
mov
ljmp
sub
cmc
sarb
scas
add
pop
not
mov
cmp
sub
das
je
test
cmp
es
repnz
jbe
mov
cmpsb
movsl
cmp
pop
or
insb
mov
mov
or
cs
sub
lret
fstpl
mov
ret
and
pushf
xor
in
out
movsb
cmp
pop
xchg
cs
push
mov
mov
or
mov
inc
popf
cmpb
sub
dec
pop
dec
lods
inc
inc
jns
inc
jnp
call
fisubs
js
incl
or
inc
mov
ret
hlt
xchg
dec
out
push
sub
cmpl
xor
pop
cmc
and
outsb
daa
push
test
adc
test
adc
in
mov
inc
inc
int3
and
div
mov
push
mov
ja
js
jns
fsubrs
out
and
hlt
jne
std
inc
mov
and
mov
xchg
stc
addr16
pop
inc
sbb
xchg
push
jge
nop
mov
mov
lds
daa
sub
inc
xchg
inc
jp
leave
pusha
sbb
xchg
ja
jmp
mov
xor
movsb
pop
fnsave
pop
dec
sbb
lea
mov
imul
xor
pop
stc
nop
push
push
popf
xor
or
cwtl
das
cmp
sbb
mov
sbb
push
dec
mov
push
xor
pop
repz
cmpsl
mov
outsb
arpl
adc
push
movsl
mov
fldcw
loope
mov
in
add
iret
xchg
or
cmp
inc
leave
sub
iret
pop
jmp
movsb
sbb
xchg
sub
xor
push
int
int3
mov
insl
fsubrs
sbb
cmp
mov
cwtl
push
jmp
xchg
adc
mov
push
jne
fidivl
pusha
mull
jg
outsl
xchg
loope
lahf
jmp
shrl
jg
mov
test
lds
repnz
dec
cli
sbb
mov
sub
in
and
aas
out
push
insl
add
into
je
mov
push
mov
in
inc
fldcw
mov
xorl
into
movsb
out
dec
add
gs
mov
sti
sbb
popl
ljmp
rol
jne
mov
out
xchg
adc
jb
loopne
aam
in
test
fs
testl
push
xlat
fisttpl
dec
add
push
enter
dec
cmc
mov
mov
in
insl
mov
xor
jnp
iret
xor
mov
gs
xor
cmpsl
dec
loope
push
jecxz
push
sbb
xchg
sub
ret
pop
hlt
hlt
pop
scas
inc
insl
adc
scas
inc
sbb
pusha
neg
cmp
adc
sbb
clc
mov
fnstenv
aad
sbb
xchg
testl
outsl
scas
push
test
sub
add
xor
out
xchg
ss
je
cli
xchg
and
inc
sbb
lret
mov
sub
push
movsl
push
dec
imul
aas
push
in
test
push
jmp
cmp
and
pop
outsb
stc
cmp
stos
inc
pop
adc
loop
arpl
das
add
dec
mov
pop
repz
push
xchg
loope
mov
push
loop
cld
mov
aad
mov
pop
mov
scas
mov
cmc
add
cwtl
push
xchg
sub
mov
loope
sbbl
add
pop
test
std
xchg
mov
faddl
ljmp
imull
lret
loopne
sub
out
xor
dec
loop
push
and
stos
sub
gs
pop
inc
data16
push
orb
mov
test
push
rcrb
aad
xchg
xor
push
adcb
jmp
sahf
xor
jl
int
dec
popf
arpl
push
insl
mov
lahf
aaa
es
push
or
cwtl
idivl
aad
mov
lds
cmp
out
imul
cmp
inc
ficoms
mov
flds
test
sub
mov
idivl
pop
sbb
dec
iret
test
add
and
rol
bnd
popa
cmpsl
adc
pop
lods
enter
int
pop
lock
mov
dec
add
lods
inc
jns
enter
test
or
aam
mov
je
mov
xchg
repz
jno
adc
sbb
sub
mov
pop
xchg
jnp
arpl
mov
ficoml
lods
leave
lds
mov
mul
jge
xor
xchg
mov
fs
push
and
icebp
xchg
out
pop
hlt
dec
loop
and
les
and
ficoml
cs
shll
mov
fwait
mov
fildl
or
jnp
push
lahf
aaa
into
rolb
test
inc
fcom
cmp
cmp
aaa
jge
mov
and
arpl
in
test
mov
sbb
mov
ljmp
adc
inc
cs
xchg
cmp
movb
repnz
mov
loopne
cmp
jg
jb
out
mov
les
imulb
xchg
sub
inc
repz
shll
pop
and
mov
dec
loop
xor
mov
mov
mov
jnp
push
imul
pop
cli
fbstp
or
outsl
push
xor
cltd
xor
mov
adcb
push
lods
mov
loope
call
or
dec
nop
xchg
lea
mov
nop
cs
dec
in
mov
ljmp
sub
repz
iret
testl
xchg
loopne
pop
aam
pushf
xor
sub
jg
out
cmp
xchg
sub
inc
fidivrl
in
es
adc
push
aas
dec
fisttps
stos
inc
fcomp
lret
sti
cld
pop
lock
dec
sbbl
outsl
inc
fcompl
mov
or
mov
mov
iret
data16
mov
stc
xchg
mov
inc
dec
in
xor
call
insl
or
or
sahf
jp
push
jmp
shr
mov
pop
hlt
jbe
mov
jecxz
cmpsl
xor
push
mov
adc
into
repz
add
adc
in
jno
fisubrl
cld
pop
xor
push
out
or
mov
fidivrs
outsl
push
loope
dec
aam
stos
inc
jo
shll
call
or
fsts
mov
cs
or
push
dec
xor
jnp
push
sbb
pop
mov
jne
repz
imul
inc
aaa
cmove
in
mov
or
mov
pop
cltd
push
pushf
std
jns
in
push
and
jge
xor
inc
sahf
inc
lcall
stc
and
movsl
sarb
aad
push
psllq
add
iret
xor
and
adc
js
and
stos
inc
push
jg
aas
pop
and
add
and
push
pusha
fs
add
mov
pop
sbb
movsl
lahf
mov
into
loop
fstp
xor
out
xchg
sub
mov
or
fwait
jecxz
xor
mov
sahf
push
mov
jno
outsb
dec
loopne
fidivs
incl
xor
xchg
aaa
cmc
xlat
or
mov
out
jbe
sti
cmpsl
paddw
in
movsb
enter
xchg
lds
fstl
test
xchg
leave
sub
in
push
outsb
add
push
dec
leave
xor
ljmp
xchg
cmp
add
add
mov
jnp
pop
lahf
in
testb
jns
mov
loope
pop
sarb
mov
pop
sarb
sbb
aam
push
add
xlat
or
in
into
push
sbb
and
or
bound
in
xor
xchg
push
lods
mov
aaa
stos
lahf
xchg
push
adc
jmp
fcomip
cs
pop
cmc
rorb
sbb
push
insl
add
ljmp
pop
cld
jp
fiadds
test
jmp
jnp
push
mov
mov
pop
shlb
jp
cmp
sub
xor
mov
rolb
test
adc
mov
sarb
setle
sbbl
jecxz
and
rolb
pop
int
sub
imul
fsubl
cmpsb
cmp
nop
or
cmp
iret
xor
and
aam
or
xchg
cmp
push
mov
test
call
decb
and
jbe
shll
mov
fwait
mov
fistl
icebp
pop
cmp
pop
mov
push
call
inc
mov
loop
dec
jecxz
pop
and
pop
jne
cld
mov
inc
add
std
and
push
jbe
test
loop
scas
cmpsb
test
ja
xlat
in
orl
fdivl
sub
stos
jmp
cmp
lret
xor
aaa
mov
in
aam
and
adc
lret
fwait
adc
mov
loopne
loopne
adc
movsl
lret
in
rol
fcomps
stc
lret
rolb
out
lret
cmp
cld
stos
pop
rcrb
ja
sbb
jmp
ds
test
je
add
sub
xchg
out
insl
cwtl
mov
mov
sbb
mov
cli
and
dec
mov
mov
pop
mov
push
aad
mov
icebp
idiv
xchg
int
scas
inc
scas
out
test
iret
out
xchg
mov
testl
sub
sbb
nop
testl
push
xor
aam
jo
aam
aad
sbb
rcl
push
mov
mov
pop
add
pop
imulb
stos
inc
repnz
add
loope
adcb
adc
stos
jbe
out
and
dec
jbe
inc
jae
inc
xor
pusha
push
int3
dec
and
scas
push
outsl
jno
or
clc
or
sub
adc
lods
cwtl
les
rclb
shlb
xchg
cmpsl
jmp
mov
mov
adc
enter
xor
movsb
nop
push
mov
mov
jne
xchg
lret
mov
mov
ss
mov
jns
push
jl
clc
adc
pop
sahf
mov
into
cmp
sbb
test
into
push
fsqrt
insl
sub
mov
xor
xlat
mov
push
testb
pop
arpl
test
cld
xor
mov
fsubrl
cmpsb
lret
pop
aas
imul
mov
nop
dec
sbb
pop
inc
iret
arpl
rolb
mov
outsl
xlat
stc
dec
int
testb
push
mov
das
out
mov
push
loop
mov
pop
mov
loope
in
fnstenv
gs
lret
ret
es
pop
pop
in
cmpsl
xchg
adc
jno
fld
movsl
test
or
mov
pop
popf
sbbb
jl
sub
cli
sbb
jnp
xchg
inc
mov
jno
and
push
cltd
jae
mov
stos
bound
xchg
int3
mov
rcrl
cltd
xor
mov
jb
pop
jle
mov
sub
jle
mov
mov
cmpsl
xor
xchg
daa
push
push
stos
inc
ds
repnz
adc
sbb
cmc
mov
jmp
add
pop
lock
lods
je
inc
add
xchg
adc
push
inc
mov
leave
cmpsl
ljmp
pop
add
ja
aad
xlat
imul
mov
insb
and
repnz
int
or
cmp
jp
sub
mov
dec
jle
rolb
aad
xor
xchg
sub
cmp
pop
fcomps
xchg
dec
push
sbb
cmpsb
lret
mov
jl
je
iret
hlt
cmpsl
imul
call
cmp
xchg
lret
sub
cld
dec
push
rclb
lods
push
in
fisttpll
xchg
push
movsl
mov
pop
jae
push
lods
inc
push
test
shrl
repz
flds
jmp
in
notb
cmp
subl
lcall
mov
fadds
adc
inc
fistpl
or
out
imul
faddl
xorb
xchg
addr16
xor
cltd
lret
sahf
xor
push
xchg
and
inc
cli
adc
xchg
in
mov
imull
into
ret
sub
pop
cli
xchg
mov
pop
dec
les
sub
cmc
mov
dec
push
repnz
ss
and
ja
cli
inc
fs
mov
jne
inc
xchg
movsb
mov
sarl
pushf
mov
xor
sti
mov
push
sahf
loope
mov
in
or
mov
lret
arpl
popf
cmpsl
jb
add
in
jo
outsb
outsl
push
mov
rorb
xor
mov
cmp
sub
idivb
call
mov
dec
xlat
jg
dec
loop
pusha
and
notb
lahf
mov
mov
jnp
push
mov
ss
pop
mov
test
cltd
fisubrl
rcrb
and
aam
inc
xchg
lock
into
ljmp
jno
add
adc
dec
xchg
scas
jge
cwtl
cmp
dec
pusha
test
mov
pushf
out
into
pushl
das
in
repnz
xor
sarl
pop
adc
inc
mov
scas
iret
popa
sbbb
lock
dec
js
pop
cmp
cmc
test
mov
shrb
jb
fnsave
jg
hlt
lds
lds
inc
adc
push
mov
xchg
shl
mov
or
mul
or
xchg
mov
lret
sub
pop
inc
pop
scas
js
dec
mov
ds
dec
test
outsl
jne
mov
lods
dec
push
ljmp
jnp
mov
xchg
mov
insb
popf
out
mov
sbb
sub
fsubp
lret
dec
mov
xor
mov
negb
mov
lods
ja
pop
sti
lock
push
mov
pop
xlat
sti
fisttpll
push
xor
mov
xchg
push
push
insl
mov
cmp
or
sbb
fiadds
cmc
xor
out
cld
and
ret
mov
loop
mov
enter
adc
pop
mov
mov
jb
ljmp
fs
lds
cwtl
jge
or
ss
push
in
jnp
pop
xor
lcall
insl
test
addb
sub
mov
hlt
dec
dec
dec
fistpll
push
out
dec
cmp
outsb
mov
ss
es
dec
adc
xlat
inc
fcmovbe
out
mov
rorl
jbe
cmpsb
mov
jge
lcall
mov
or
stos
mov
adc
ret
sub
sti
inc
lea
ss
sahf
dec
add
sbb
fidivrs
pusha
test
pop
mov
cli
xchg
mov
ss
ljmp
mov
or
bnd
jo
or
sbb
int3
sub
and
jge
fidivs
sahf
and
lock
rcrb
push
and
ret
xlat
popa
pop
mov
sub
push
andb
xor
and
popa
addr16
mov
add
outsb
sub
jno
out
je
or
add
pushf
mov
into
gs
ficompl
jnp
andl
xchg
and
daa
push
jmp
movsb
sub
inc
pop
into
gs
sbb
mov
fsubrl
cmp
loope,pt
jo
ret
lods
mov
dec
scas
mov
mov
dec
push
call
cld
ret
aaa
pop
mov
cmp
inc
mov
andl
fs
sbb
mov
push
mov
push
jecxz
dec
outsb
sbb
adc
sbb
pop
scas
push
ret
push
xchg
push
push
lcall
cmpsl
or
pop
mov
pop
in
stos
daa
xor
dec
orl
mov
dec
loop
scas
scas
cmp
inc
outsl
iret
jg
pop
dec
mov
jge
cmp
lret
adc
je
lock
cmp
pusha
stc
cld
dec
out
mov
pop
and
inc
repz
dec
adc
mov
pop
lea
pop
hlt
dec
scas
dec
cmpsb
or
cs
pop
lret
xchg
sahf
sahf
sub
cmp
ret
outsl
mov
inc
jmp
push
test
in
orl
push
jns
in
fistpl
jmp
dec
leave
test
imul
out
xor
jnp
dec
push
sahf
dec
xchg
xor
out
call
or
faddp
pop
ret
outsb
xor
fdivrs
mov
rclb
test
dec
lds
fsubs
loop
mov
stos
sub
fildl
lret
xchg
or
es
lods
ret
inc
lret
insl
lret
mov
aas
sbb
fisttpll
js
test
xor
nop
sbb
das
pushf
and
sbb
pop
loop
xchg
ret
lods
mov
out
mov
adc
sub
pmaxsw
cld
arpl
repnz
xlat
cmp
popa
scas
mov
fldenv
test
mov
mov
mov
adc
xchg
inc
ljmp
pop
mov
pushl
xor
jle
shrb
cmp
pop
mov
adc
pop
scas
enter
sbb
dec
std
rclb
ds
jl
rcrl
call
sub
sub
inc
std
aad
mov
in
jmp
test
inc
push
in
lds
pop
add
sub
sub
outsl
test
movsb
or
andl
mov
mov
cs
inc
push
mov
xchg
loop
pop
cmp
rcl
or
dec
inc
sbb
xchg
push
dec
adc
xor
jecxz
cmpsl
push
inc
jb
mov
popa
dec
and
aam
xor
xchg
cmpsl
cs
mov
outsl
loope
mov
lret
sbb
push
std
push
nop
lods
push
mov
mov
arpl
mov
fldl
fstpt
test
add
pop
or
xchg
loope
jmp
adc
movsb
stos
pop
cmpsb
sbb
mov
les
sbb
mov
mov
out
dec
in
iret
add
or
push
movsb
insb
xor
subl
jge
push
test
mov
popa
push
pop
mov
and
add
outsl
popf
push
jmp
ds
xchg
int3
sbb
lds
rorl
std
bound
js
outsb
push
add
fwait
stos
cmp
fsubrs
mov
in
mov
insb
add
push
xchg
xor
jne
cld
push
sarl
mov
jp
stc
fisttpll
sbb
jp
jmp
add
add
test
jo
xchg
add
sar
and
test
loop
shll
push
add
das
xchg
push
push
popf
dec
icebp
add
push
testb
ficomps
push
push
xchg
mov
sarl
or
aas
in
shrb
xor
cmp
or
scas
pop
adc
hlt
sbb
mov
and
mov
notl
sub
xchg
mov
mov
shlb
popa
pop
cmp
cmp
sbb
dec
iret
arpl
jne
imul
jb
test
dec
and
xor
sbb
imul
js
jnp
fisttpll
adc
stos
daa
adc
inc
movsl
xchg
sub
div
in
sub
into
mov
push
mov
inc
pop
cmpsl
div
in
push
xchg
into
gs
call
inc
xor
loop
les
hlt
push
mov
ljmp
sbb
in
test
push
jbe
inc
pop
pop
sbb
or
pop
adc
xor
fsubl
movsl
js
and
mov
add
in
and
cmpsl
cmpsb
adc
mov
jl
popa
rcl
and
push
repnz
mov
outsb
pop
stc
cmpsl
push
xor
adc
pop
or
cmp
sub
scas
inc
or
movsb
cmp
stos
imulb
jmp
clc
xor
sub
and
push
dec
sbb
inc
sub
aas
lcall
jp
cmp
inc
inc
xchg
ja
mov
jne
sar
mov
rol
call
lret
rclb
mov
push
pop
gs
leave
test
push
popa
fnsave
shrl
decb
pop
mov
dec
jne
pop
lock
xchg
cmp
dec
sbb
mov
mov
jl
lods
mov
data16
add
pop
cltd
and
xor
int
call
imul
std
rcl
cli
jns
outsl
addr16
ljmp
dec
xchg
lcall
iret
xchg
mov
and
push
jne
enter
sbb
ret
sbb
and
mov
dec
xor
jg
add
out
and
add
das
xchg
jno
sub
xlat
jp
icebp
bound
xor
jae
in
cs
fnstenv
dec
idivb
shl
lret
fwait
clc
test
xlat
sbb
daa
daa
or
pop
dec
jae
xor
adcb
psllw
out
je
add
xor
sahf
cmp
jl
mov
mov
lea
mov
sbb
mov
popf
fs
jns
mov
icebp
mov
inc
ljmp
outsb
testl
fdivrs
or
int
pop
sbb
cs
lock
loopne
aam
clc
lds
sub
mov
stos
loope
testb
cltd
or
jbe
enter
stos
aad
icebp
pop
dec
fwait
or
push
rcll
cmp
in
jge
outsl
insb
inc
push
int3
sbb
push
in
ja
mov
ja
pop
cmp
xchg
cli
aas
pusha
cmp
push
and
add
addr16
stos
divb
add
pop
xor
notl
imul
ja
or
adc
lahf
add
pop
jbe
jl
int3
cmp
jne
mov
movsl
mov
mov
mov
scas
jno
std
int
stos
lret
enter
loope
xchg
pop
fiadds
mov
xchg
fldcw
mov
inc
cltd
xor
iret
lahf
adc
pop
inc
aas
ret
pusha
and
fisttpll
pop
cld
xor
sub
mov
orps
movsb
enter
jnp
ret
test
orl
mov
neg
dec
ja
mov
mov
icebp
mov
xchg
out
jnp
fnop
mov
in
icebp
shll
push
out
cmpsb
jmp
inc
push
sbb
sbb
mov
push
test
negb
clc
lea
das
and
loopne
bound
push
dec
pop
adcl
sbb
iret
cmp
add
popa
pop
leave
scas
add
inc
popfw
in
test
mov
xchg
dec
scas
cld
mov
xchg
dec
and
test
inc
pause
push
inc
fidivl
fs
repnz
mov
jge
fs
mov
hlt
loop
fwait
int3
add
mov
ds
lea
lds
jmp
mov
sbb
mov
mov
xchg
xchg
sar
cmp
cmp
dec
pop
mov
mov
or
out
xchg
mov
xchg
scas
lea
or
jne
pop
push
mov
xchg
add
fcompl
pop
jnp
lret
or
sahf
ds
loope
or
and
mov
stos
paddq
andl
xor
ja
dec
rcrl
add
loope
push
and
cwtl
inc
mov
and
out
fwait
scas
rolb
mov
gs
xor
xorb
mov
dec
or
test
stos
sub
xor
les
xchg
out
sarb
sub
imul
addl
aad
addr16
in
imul
cmp
js
jns
stos
xor
jnp
es
push
push
outsb
ss
adc
call
popa
sbbb
in
cmp
jbe
push
jbe
mov
insl
stos
fmuls
mov
hlt
test
stc
fisubl
test
test
adc
pusha
xchg
jno
mov
and
xchg
mov
push
outsl
jo
xor
lcall
mov
fiadds
mov
sub
pop
std
sub
in
xor
sbb
imul
inc
and
or
into
adc
xor
add
sbb
mov
lahf
je
stos
or
rcrl
fwait
sbb
rcrb
pop
lods
mov
imul
pop
dec
leave
inc
sbb
ss
or
sbb
adc
cmp
add
insl
sbb
pop
xchg
pushf
out
adc
das
xor
out
cmp
xchg
insl
sbb
das
movb
sub
fmuls
mov
bound
pop
cmc
xchg
subl
mov
and
sub
imul
push
mov
movsl
in
icebp
mov
lods
adc
lcall
fs
call
add
repz
sbb
rorb
xchg
divb
mov
test
lret
cld
adcb
dec
aam
lret
out
mov
les
cmc
js
push
stos
push
and
std
push
lods
inc
push
mov
lret
or
adc
mov
fsubrs
roll
popf
add
notb
pushf
lods
hlt
cmpsb
jmp
mov
dec
rcrl
enter
sbb
adc
cltd
shl
lret
mov
cs
push
sbbb
jg
lods
call
jmp
xchg
sbb
and
dec
loope
sub
cmp
js
mov
mov
insb
jo
push
push
test
pop
inc
gs
inc
stos
pusha
lods
sarl
mov
je
xor
test
imul
cmpsb
mov
shll
rclb
sub
movsl
hlt
rcrb
dec
dec
mov
call
jecxz
dec
push
imul
lods
add
xor
xchg
fdivp
pushaw
notl
repz
imul
add
jbe
shll
stos
mov
lret
and
bound
bound
add
mov
lahf
nop
cld
jl
mov
xchg
or
leave
jno
std
dec
popf
jmp
fiadds
ror
add
pop
push
pop
or
mov
test
shll
sbb
jb
and
imul
xor
fdivl
cmpsb
imul
vpcmpeqb
lods
bound
mov
sub
lods
outsl
das
cmp
movsl
mov
add
jg
scas
mov
pop
mov
and
sub
repnz
rclb
dec
fucomp
es
lock
pop
fsub
inc
in
mov
mov
sub
pop
inc
icebp
adc
lret
xchg
adc
cmp
push
and
jmp
jbe
add
jne
std
out
inc
dec
xchg
int3
push
mov
adc
mov
adc
in
sub
push
pushf
dec
push
xor
or
adc
mov
and
pop
rep
dec
das
mov
jg
mov
lods
leave
sbb
sbbb
mov
dec
jecxz
jns
stos
mov
out
jp
imul
jb
in
fwait
cmpsl
jmp
stc
or
fnstcw
pusha
push
cli
test
pop
fisttps
cmpsl
inc
cmp
sub
mov
lea
je
mov
mov
lds
and
sbb
orb
sub
insl
loopne
out
jno
xchg
and
cmpsl
cmp
adc
add
mov
sbb
xchg
icebp
adc
xchg
sub
pop
jbe
or
cli
and
mov
jns
add
pusha
mov
and
or
inc
mov
push
ss
outsl
mov
push
sbb
push
cmp
sbb
and
enter
or
inc
lods
sub
add
sbbl
lcall
xchg
and
mov
xchg
rolb
jb
jnp
leave
mov
cwtl
das
and
mov
lahf
xor
mov
arpl
test
jp
or
push
mov
cmpsl
push
clc
mov
les
pop
cmpsb
sbb
int3
and
mov
xchg
add
stos
lret
dec
mov
push
add
inc
xor
dec
out
dec
push
out
sub
outsb
jge
dec
jne
scas
xchg
outsb
mov
mov
inc
repz
mov
adc
std
jo
lea
fwait
cli
mov
dec
mov
push
and
mov
stos
popf
insb
sub
lret
xor
adc
xchg
dec
and
sub
xchg
mov
rorb
enter
xchg
jmp
add
and
inc
fcmovb
xlat
imul
xacquire
ljmp
aad
xchg
sbb
scas
xchg
jno
inc
lcall
in
repnz
repnz
mov
push
lea
xchg
inc
clc
loope
call
pop
jne
pop
mov
mov
cmp
mov
push
addr16
outsb
xor
pop
in
insb
jb
popa
xchg
sub
je
cmp
in
inc
sub
fists
popf
pop
jnp
inc
xchg
mov
dec
push
push
and
mov
fucomip
pop
cli
stc
mov
push
and
jle
std
fs
pop
and
rolb
outsl
fmuls
mov
out
or
lods
nop
rcll
and
inc
cli
leave
lret
aad
scas
out
adc
mov
je
mov
cmp
dec
insl
insl
jecxz
push
or
cmpsl
out
adc
inc
dec
ss
je
dec
pop
jmp
leave
pop
das
and
fildll
inc
jne
pop
jne
sub
outsb
jnp
lahf
out
mov
push
xor
fadd
testb
pop
cmp
pop
adc
dec
mov
jle
push
stc
and
test
push
pushf
mov
into
mov
sarb
sbb
sub
and
cmp
loope
mov
clc
lds
xchg
jnp
sub
mov
testb
jle
xor
adc
pop
cvtpi2ps
stos
mov
sarb
pop
mov
pop
xchg
lds
xor
ficoms
aam
adc
pop
sar
fnsave
and
fmul
sub
push
jmp
cmp
mov
jae
mov
mov
cmp
or
sbb
jmp
cmp
inc
sbb
push
jp
pop
sub
outsl
jns
jle
rcll
push
fdivp
gs
add
xchg
jnp
shlb
mov
adc
mov
iret
int3
jg
mov
sti
daa
mov
xchg
inc
push
insl
sbb
inc
scas
jne
sbb
pop
addr16
pop
pop
scas
jmp
sub
fsubl
jbe
or
call
es
xor
fimull
pushf
mov
aam
call
nop
ret
test
imul
push
in
add
stos
cmp
in
outsb
mov
push
gs
jne
cmp
sahf
mov
stc
testb
push
outsb
add
lods
sub
repz
fstl
cmp
jne
and
inc
data16
repz
mov
or
or
mov
xor
adc
inc
hlt
sti
mov
push
mov
pop
insb
add
sbb
scas
ds
insb
lds
mov
cmpl
sub
popa
lret
push
mov
nop
in
aam
xchg
mov
ret
in
mov
imul
movsb
int
xlat
cltd
xchg
and
in
push
jecxz
lcall
ds
push
jo
call
push
paddusb
mov
lods
daa
inc
mov
pop
scas
inc
lods
dec
out
test
jo
imul
mov
movsl
int3
arpl
or
pop
mov
sbb
negb
mov
aad
mov
and
pop
cltd
inc
push
lods
pop
cli
pop
lret
xchg
repnz
arpl
pop
popa
add
je
ret
pop
jnp
dec
fiadds
fmul
push
mov
lods
loop
xchg
jne
add
mov
iret
outsb
stc
sbb
aam
lret
lret
test
loopne
xchg
mov
imul
inc
mov
rcr
into
es
hlt
test
mov
mov
jl
daa
mov
negb
fdivl
loopne
ja
fdivl
push
and
jns
icebp
test
jo
call
js
pop
bound
push
mov
sub
push
iret
sub
cwtl
pop
lock
int3
adc
mov
in
pop
std
pop
pop
cmovno
mov
scas
xor
xor
rcl
mov
iret
sub
mov
insl
and
or
push
lret
inc
pop
out
shrl
jne
shlb
test
xchg
sub
hlt
inc
cmc
jg
es
sub
jnp
fwait
and
pop
push
mov
sub
pop
adc
out
xor
addr16
sub
add
xor
push
push
psubusw
repz
outsl
and
jb
inc
testb
sub
popf
loop
gs
cmp
cmc
mov
cmc
ds
add
jb
inc
fcom
pop
or
movsl
mov
in
rolb
in
mov
push
inc
popa
xlat
jg
pop
sub
lods
inc
sbb
fnstenv
fs
mov
ret
fcmovne
cmpsb
inc
adc
popa
lcall
clc
jne
cmp
jle
inc
test
mov
fidivrs
mov
fstpl
xchg
mov
cmp
sbb
cmp
fsubrl
movsb
sarb
andb
mov
jmp
std
mov
sbb
test
gs
pop
pop
dec
aad
mov
lods
xor
adc
inc
fcmove
mov
int3
adc
bound
cwtl
test
and
movsl
cmp
decb
or
ds
xchg
and
jnp
mov
xchg
push
ret
jne
xor
sbb
cmp
in
xchg
rcrb
add
loop
jne
xor
xchg
sbb
clc
xchg
mov
cmpsb
pushf
jle
movd
inc
fs
mov
add
repz
mov
mov
push
cmp
pop
jge
push
cmp
pop
rolb
mov
jb
enter
xchg
push
movsb
sub
movsl
std
lea
pop
mov
pop
jns
xchg
adc
mov
sub
mov
notl
sub
mov
mov
rorb
rcrb
scas
sub
rcll
cmp
xchg
dec
adc
enter
in
jb
inc
pop
lds
fadds
aad
mov
dec
mov
fstl
icebp
scas
sub
fsubl
add
dec
xchg
push
mov
es
mov
push
mov
mov
push
push
shl
inc
popa
in
rorb
or
cli
push
sub
mov
push
shll
mov
fidivrl
or
or
jge
sub
stos
pop
xchg
sub
dec
loopne
icebp
sbb
std
mov
loope
sbb
mov
enter
mov
scas
andb
jns
push
in
lahf
push
imul
push
add
xor
gs
xchg
sub
das
mov
lea
dec
pop
xchg
pushf
repz
in
test
and
or
neg
mov
cmpsb
stos
pop
jb
dec
out
les
divl
add
jno
and
mov
sbb
and
cwtl
mov
daa
sbb
ret
lcall
insb
lret
mov
gs
enter
add
ljmp
jns
xchg
outsb
jg
faddl
cltd
or
out
mov
lods
or
mov
scas
mov
add
clc
sahf
dec
mov
adc
pop
sahf
insl
subl
lret
dec
lods
cld
pop
pop
lahf
jb
jge
jbe
fwait
xor
or
jno
inc
pop
or
and
jnp
inc
xlat
jg
aam
push
sbb
imul
sub
fldcw
orb
jge
jmp
ror
sahf
or
popf
cmp
fnsave
sbb
lret
inc
aas
aad
pop
inc
sbb
int3
pop
repz
mov
xchg
in
xchg
push
in
les
lcall
cwtl
mov
or
mov
cmp
nop
cmpsl
push
in
and
adc
inc
je
push
or
dec
xlat
andb
adc
push
cmp
adc
mov
out
cwtl
outsl
push
aaa
pop
adc
mov
cmp
movb
or
or
sub
fwait
cmpsl
cmp
frstor
xor
cld
pop
jno
push
fwait
clc
push
jbe
loop
mov
insl
cmc
sub
push
mov
shlb
or
test
push
mov
orl
sbb
lret
mov
jge
adc
dec
out
mov
jmp
pop
cmp
xchg
mov
fsubrp
in
fnstenv
shr
out
mov
mov
pop
xchg
pop
or
cs
cmp
lcall
dec
sub
cmc
sarb
jbe
mov
push
ret
push
aam
mov
sbb
adc
data16
mov
popf
pop
inc
in
gs
xor
jp
pop
and
jle
pop
shl
outsb
or
loope
pop
or
add
dec
call
in
and
lock
jns
aas
stos
xor
cmp
adc
sahf
pop
pushf
mov
rcl
les
pop
adc
mov
xchg
stos
fwait
sti
xchg
push
push
inc
dec
aam
fmul
mov
cld
xchg
inc
jns
cltd
push
or
jp
jp
out
mov
or
pop
mov
jp
cmp
lea
pop
mov
movsb
add
or
adc
push
mov
fxam
pusha
cmpsb
idivb
fcompl
xlat
stc
jp
dec
push
lds
fwait
cmp
or
and
cmpsl
testl
add
and
mov
pop
dec
rol
out
imul
loope
iret
dec
xchg
mov
es
test
out
fadds
je
sti
and
and
mov
sub
lret
pusha
mov
les
ret
xor
mov
call
push
rcrl
inc
loope
add
sub
lret
insl
add
sbb
dec
lods
push
xor
xor
fbstp
cltd
aaa
inc
push
fnstsw
das
loopne
imul
lods
jle
mov
adc
mov
xor
imul
push
and
fnstsw
insb
cmp
adc
mov
fistps
cmp
out
jg
lods
mov
pop
movsl
dec
test
mov
inc
mov
repnz
mov
into
aam
lock
fidivs
inc
gs
cmp
dec
and
jge
call
movsb
cmp
leave
xor
into
aad
loop
push
enter
mov
sbb
mov
jmp
je
add
jl
jnp
xchg
adc
aas
add
test
loope
cmp
fisubrl
add
lret
xchg
jno
xlat
mov
daa
sbb
jno
lret
mov
push
imul
add
or
mov
sahf
mov
sub
pop
data16
ficoml
loope
or
scas
es
icebp
pop
mov
jge
bound
sbb
in
call
xor
adc
cs
inc
and
cmpsl
ds
mov
lds
sub
int3
js
pop
mov
mov
jge
sbb
repz
repz
mov
mov
xchg
sub
andb
mov
pusha
js
dec
inc
pop
mov
mov
and
and
sahf
mov
ljmp
add
es
shrb
dec
push
mov
cltd
xchg
xchg
lret
sbb
ds
call
add
mov
sub
push
jb
aas
inc
push
pop
mov
cmp
mov
jmp
sbb
pop
xor
imul
sub
orl
loope
in
ljmp
into
fidivs
shll
cmp
jge
das
push
repz
mov
cmpsb
inc
mov
xor
pop
add
sarb
mov
arpl
jae
aam
jp
sbb
push
fldenv
movsw
push
shl
xor
test
fs
int
aaa
pop
cs
pop
ljmp
cmp
jl
pop
repnz
idivb
shll
xchg
push
dec
or
aad
xchg
sbb
insl
lods
push
inc
pop
mov
jl
jae
pop
movsl
lahf
imul
adc
mov
cmc
cmp
ds
or
push
sqrtps
mov
ret
hlt
inc
in
mov
cmpsb
xchg
and
dec
test
xchg
sub
xchg
adc
dec
push
sarl
movsb
mov
jae
inc
xchg
push
pusha
aaa
add
and
pop
icebp
pop
std
out
push
arpl
dec
pop
je
cmp
push
mov
dec
push
add
in
cli
dec
pop
stos
fsubs
ljmp
std
xchg
adc
test
movsl
sub
mov
lock
inc
add
jbe
rcll
inc
cmp
jb
push
sarl
lret
sbb
mov
pop
lds
in
and
cmp
ret
adc
rolb
sbb
fildl
fbstp
testl
aaa
add
sbb
jg
cmp
mov
push
sub
lock
xor
adcl
push
and
gs
sbb
inc
cmp
sub
push
pop
lret
fnstsw
shl
je
aaa
push
push
push
aas
dec
push
jne
jno
xchg
push
inc
clc
cmp
aas
sub
sbb
hlt
pop
call
shlb
push
xchg
sub
aaa
push
xchg
mov
mov
and
inc
fwait
sub
mov
arpl
xchg
and
insl
mov
hlt
push
jg
arpl
clc
lahf
or
jno
xchg
or
xor
out
popa
fmull
jge
mov
xchg
ficoml
outsb
int3
dec
xor
push
imul
movsb
in
aas
pop
push
testl
repnz
or
inc
push
and
imul
lock
mov
push
ljmp
mulb
cmp
push
pop
ljmp
ds
into
outsl
aam
movsl
insl
enter
out
sti
mov
cmpsb
out
clc
xorb
sbb
jp
lods
sbb
idiv
ret
leave
pop
and
sub
dec
dec
scas
dec
adc
nop
cld
cmp
sub
inc
sub
insl
push
add
xchg
sub
ret
repz
push
push
fldl
or
push
arpl
mov
inc
mov
push
jmp
push
add
inc
inc
fsubrp
jle
shll
lea
push
pushf
xchg
cmp
shrb
pop
lock
lret
hlt
aaa
push
outsl
sub
int
sub
mov
adc
fldcw
ljmp
jbe
dec
pop
xchg
out
dec
or
jns
outsb
sbb
push
test
mov
and
nop
stos
add
ljmp
jmp
in
or
imul
cli
cwtl
and
xor
inc
pop
push
cli
out
rclb
sbb
sbb
int
outsb
jmp
jns
cmp
pushf
in
movl
or
imul
cltd
mov
addr16
pop
mov
adc
pop
nop
inc
dec
fwait
cmc
push
add
mov
inc
shr
orb
or
lcall
adc
ret
sbb
imul
cmc
mov
mov
mov
or
adcb
iret
popw
xor
cltd
fsubp
adc
inc
push
pop
das
push
cwtl
mov
loop
jne
add
out
gs
mov
repz
dec
push
lret
imul
and
push
lcall
jecxz
add
adcb
push
fwait
sub
mov
mov
faddl
pop
out
inc
cmp
shr
sti
sbb
push
sub
mov
jg
and
sbb
into
jo
jp
and
xchg
push
mov
call
add
xorb
ret
push
out
sub
hlt
sub
xchg
jne
aaa
mov
adc
push
mov
mov
outsl
fstps
push
roll
xor
xor
enter
mov
mov
call
pop
xor
dec
xor
lods
outsl
cli
push
shrb
jp
mov
clc
iret
sub
loope
push
lods
pop
add
scas
jb
sub
push
inc
into
cmp
push
mov
lahf
push
mov
andb
and
movsb
or
in
lds
cmp
test
fs
fsubl
subb
xor
popf
push
inc
fcmove
push
outsb
jl
popa
popa
inc
negb
addb
into
xlat
dec
push
es
imul
rorl
ficomps
inc
mov
mov
fwait
or
movsl
sbb
mov
es
and
movl
jp
mov
xchg
mov
lgs
in
push
push
je
dec
xchg
pop
nop
int
fsts
jb
add
pop
nop
mov
jno
sarl
xchg
xchg
call
mov
dec
sbb
mov
cmpsb
pop
xor
ljmp
ds
jno
sbbl
outsl
mov
loop
push
xor
fsubrs
in
pop
jmp
and
mov
xchg
jge
rorb
mov
repnz
mov
out
les
jbe
repz
mov
pop
sahf
jp
jnp
leave
dec
pushf
sub
lret
jne
add
daa
mov
fimull
xor
insl
push
aam
testb
in
push
test
and
jmp
mov
or
loop
sub
test
pop
out
mov
xchg
push
sahf
fadds
ss
shrb
xchg
mov
pop
jmp
xchg
lcall
sahf
gs
in
lahf
stos
xor
fstpt
jns
pop
push
and
jbe
cmpsb
mov
cmp
and
xchg
pop
das
out
jo
pop
push
das
xchg
ja
hlt
sahf
push
ljmp
add
shlb
add
mov
inc
js
xlat
cmp
xlat
and
bound
rcll
jle
les
mov
out
and
or
ja
cltd
sti
dec
inc
dec
mov
or
adc
xor
es
cmp
push
jg
and
sub
dec
inc
jae
adc
dec
inc
sbb
sub
xor
xor
pop
inc
testl
mov
cld
jl
xchg
jg
jns
ljmp
push
lds
popa
xchg
mov
mov
lret
add
adc
and
stc
jmp
xchg
in
mov
jno
dec
pop
fs
xor
xchg
fsubrl
adc
mov
xchg
dec
and
cmp
pop
or
clc
cmp
xchg
loopw
mov
mov
pop
inc
inc
std
dec
push
or
dec
in
sbb
jp
insb
ret
les
dec
add
pop
fisubrl
and
pop
pop
jg
insb
and
sbb
ficompl
nop
repnz
addr16
add
and
inc
lret
arpl
in
xchg
jae
call
add
idivl
ja
jl
sbb
ds
push
cmpsb
xor
nop
jnp
xlat
sub
jne
roll
adcl
mov
mov
and
mov
fstpl
xchg
push
mov
and
fldpi
jbe
lcall
int3
mov
mov
outsb
xchg
mov
daa
int
insb
inc
pop
scas
es
and
pop
xchg
add
test
mov
jne
clc
and
pop
inc
std
xchg
add
addr16
fxch
pop
adc
push
mov
mov
xlat
mov
call
cmp
cmp
pop
cltd
inc
stc
pop
divb
pop
jge
cmp
aas
cmp
scas
shl
rorb
xchg
mov
bound
mov
aaa
mov
lods
mov
and
test
imul
mov
jb
cmp
jmp
push
and
mov
xor
or
sbb
subb
mov
jno
and
push
xlat
mov
enter
out
insb
mov
mov
rcrl
clc
or
fstpt
and
out
fnsave
xchg
in
xor
int
stos
xchg
cmp
push
xor
lcall
ret
ret
jle
sbb
pushf
dec
jecxz
les
movsl
push
xchg
mov
clc
outsb
roll
jecxz
in
jecxz
adc
mov
loop
push
adc
subl
xchg
fs
xchg
mov
xor
hlt
dec
lahf
mov
stc
push
and
out
jbe
into
add
addr16
andb
or
das
jg
fwait
loopne
rcl
imul
repnz
jb,pt
insb
ret
cmp
cmp
adc
dec
outsl
popf
jae
cmpsl
mov
fadd
test
repz
dec
or
dec
popa
js
arpl
dec
arpl
lods
aad
jne
sub
mov
adc
inc
jo
xlat
mov
inc
stos
push
loopne
fld
add
push
add
push
jl
mov
in
cltd
mov
xor
adc
fld
xor
mov
mov
dec
cmp
push
lea
out
cwtl
dec
test
ljmp
test
popf
xor
stc
out
loope
loope
ds
cmp
xorb
mov
pop
addr16
movsb
sahf
jl
add
push
jmp
sbb
jae
and
negb
jge
cmp
sahf
aaa
add
in
adc
sbb
in
mov
mov
xor
mov
xlat
cmp
xchg
mov
mov
ljmp
mov
jns
les
clc
mov
mov
test
daa
jns
sahf
ja
xchg
loopne
jo,pn
adcb
or
bound
leave
test
dec
pop
jg
ret
inc
jecxz
mov
mov
cwtl
in
sbb
sahf
imul
into
push
inc
pop
enter
push
pop
sub
mov
insb
cmp
dec
fidivs
push
pop
sahf
enter
pusha
mov
test
orb
roll
outsl
mov
es
push
lods
repz
pop
adc
adc
ret
lock
and
mov
popf
mov
test
mov
push
push
inc
fimull
jl
dec
push
lret
xor
cltd
xor
mov
push
ret
add
xchg
add
lds
mov
fsubrs
cmp
iret
xchg
jp
enter
icebp
fnstcw
rcll
fisubrs
inc
addr16
mov
adc
adc
and
dec
push
mov
movsl
dec
std
mov
sub
add
cmpsl
outsl
add
cli
mov
call
mov
ficomps
popf
test
roll
sahf
jno
pop
icebp
sbb
imul
mov
mov
cmp
mov
xchg
lahf
xor
por
cli
push
test
and
popa
mov
mov
movsl
jnp
aad
cli
lods
ret
mov
mov
fdivr
and
or
cmp
and
xchg
in
repz
cwtl
repnz
repnz
or
inc
stc
sub
xor
enter
and
adc
add
sbb
and
jbe
test
lret
fildl
mov
cmpsb
jo
xchg
adc
mov
dec
and
mov
ret
dec
mov
cmp
nop
push
fwait
loope
push
xor
add
scas
out
jne
add
jmp
mov
adc
in
pop
gs
repz
mov
cmp
cmp
adcl
xchg
mov
xor
jae
inc
out
dec
imul
mov
add
fwait
jbe
aas
mov
inc
mov
pop
jecxz
enter
fisubrl
test
out
test
jecxz
inc
pop
jne
cmpsb
lods
jp
and
or
xchg
mov
pop
in
dec
jecxz
scas
adc
xchg
addr16
sub
push
out
push
cli
lods
mov
stc
xor
fsincos
inc
mov
jne
shrl
add
aam
lcall
and
and
inc
sbb
jge
fisttps
out
pop
adc
jo
out
out
cmpl
xor
cmpsb
pop
shrl
add
pushf
dec
repz
in
bound
sbb
mov
test
mov
fnsave
rol
inc
iret
fnstenv
dec
dec
ret
int3
jecxz
push
insl
ds
enter
push
loopne
xor
movsb
mov
test
jno
xor
xchg
sub
lea
sbb
jecxz
cmp
into
xchg
xchg
or
jle
fsubrl
scas
xchg
inc
hlt
test
adc
dec
adc
punpckldq
jp
inc
add
scas
dec
cli
out
mov
push
insb
sbb
stos
jmp
push
sub
inc
mov
insb
call
aad
shrl
cli
jno
mov
aam
sub
test
mov
mov
dec
mov
lock
sahf
rol
cmpsl
lahf
shl
jns
jbe
mov
rorl
xchg
out
sub
push
xchg
sbb
mov
jecxz
stos
xchg
in
out
jmp
les
mov
push
test
test
daa
cmpsw
mov
adc
rcrl
or
mov
or
jl
xchg
mov
and
xchg
push
shr
mov
push
stos
lods
mov
mov
cmp
dec
sahf
not
mov
xchg
mov
int
inc
lods
jo
jecxz
or
sbb
loope
cli
xchg
sub
jg
pop
pop
xor
xchg
ret
scas
lds
and
and
mov
clc
mov
sbb
in
insb
xchg
sbb
decb
adc
pop
mov
xchg
jmp
cld
xchg
sti
bsf
icebp
icebp
daa
outsl
aas
pop
dec
ror
fcoml
push
sti
push
and
xchg
pop
lret
mov
pop
in
adcl
addb
and
scas
cmc
adc
pop
push
xor
fwait
xchg
lcall
addl
ss
ja
xor
add
xlat
xchg
outsb
sub
xlat
movsl
iret
mov
push
add
fstpl
popa
cs
xchg
fdivrs
es
push
shlb
shlb
push
push
cmp
inc
jmp
cli
loop
inc
shll
fs
lods
lods
clc
cltd
inc
xor
repz
or
fstpt
or
fistpl
push
loope
cmp
mov
imul
mov
fcoms
cmc
pop
pop
testb
or
clc
shl
xchg
dec
loop
outsl
iret
repnz
mov
sub
xor
xor
cwtl
cmpsl
std
push
mov
cli
sbb
into
dec
loop
negl
push
mov
stos
daa
cmp
mov
sbb
incb
pusha
call
cmp
jge
mov
inc
gs
cmpb
mov
mov
jne
lcall
loopne
stos
scas
aam
shrl
rolb
cltd
cmp
rcl
imul
loop
pushf
xor
adc
cmp
jb
imul
push
bound
das
mov
mov
test
sbb
imul
or
lahf
push
push
push
pop
xchg
pop
nop
jae
xchg
dec
sbbb
sub
out
jle
lret
test
enter
incl
out
gs
mov
int3
dec
das
adc
ja
mov
stos
dec
mov
aaa
xor
nop
sub
stos
out
int
xchg
mov
ret
push
stos
jne
pop
arpl
ret
push
test
sbb
add
pop
sar
jne
and
jle
outsb
mov
aas
xchg
add
xchg
cltd
shl
and
hlt
push
push
jns
or
jnp
js
sub
jns
dec
imul
sbb
icebp
mov
push
and
pop
dec
jb
adc
push
out
out
sbb
jne
aad
orl
lods
sarb
jecxz
dec
add
inc
loope
loopne
fnsave
push
sbb
int
sarb
adc
dec
jmp
ret
jne
pop
out
sub
inc
fcmove
push
int
mov
mov
jb
in
push
inc
addb
fwait
pop
movsb
lret
lret
jne
shrl
es
mov
int
stc
mov
sbb
in
dec
jns
mov
xor
jns
xchg
dec
adc
loope
push
nop
out
ret
sub
xor
mov
mov
jb
push
sub
pusha
clc
mov
mov
or
fidivrs
mov
mov
push
imul
pushf
cld
outsl
add
and
call
shlb
ljmp
adc
mov
mov
insb
or
add
mov
ss
fistl
sbb
pop
jb
jge
subb
xchg
out
jp
data16
data16
sbb
push
test
push
addl
sub
imul
pop
mov
or
push
mov
xor
or
pop
scas
dec
sub
mov
lea
test
ja
pushf
test
leave
push
jmp
mov
jo
cli
scas
call
inc
add
adc
addl
push
jle
push
pop
les
int
aad
stos
aas
jmp
dec
xchg
sub
pop
pop
dec
test
sub
pop
in
xchg
lret
fwait
lock
test
bound
inc
and
pop
sti
push
mov
mov
sub
pop
andb
push
sar
in
mov
adc
gs
sahf
push
adc
push
mov
mov
iret
dec
push
mov
fs
or
mov
sti
jb
ret
xchg
icebp
jns
mov
nop
mov
pop
add
or
notb
int3
push
sbb
test
es
pop
xlat
adc
sub
fadd
dec
les
notl
rcrl
xor
imul
push
jno
xchg
lds
out
add
add
lahf
inc
in
and
sbb
test
int
ror
int3
sub
xchg
fimuls
arpl
daa
bound
popf
pop
repz
push
stc
inc
fsubrl
clc
cmpsb
ds
mov
dec
je
sar
loopne
mov
mov
xchg
inc
xchg
add
cltd
or
inc
mov
fistps
sbb
data16
sub
xchg
movl
mov
int3
fsubl
outsb
movsl
ljmp
jle
and
les
and
in
rol
out
loop
out
movsb
pop
inc
push
shrb
pusha
int
in
arpl
movsb
inc
xchg
sbb
icebp
jae
sbb
decl
sbb
xor
or
dec
out
mov
push
mov
xor
enter
popf
sub
cmpsl
sub
xchg
inc
push
pop
fwait
insl
mov
stc
xor
or
testl
jle
adc
pop
stc
stc
dec
cli
pop
cmp
je
int3
and
push
in
test
cli
sub
insl
stc
xchg
out
jg
test
mov
jbe
int3
lret
push
sub
jge
push
scas
inc
dec
adc
mov
das
enter
push
add
xorb
int
repnz
icebp
cmp
popf
pop
or
jb
fsubl
aaa
outsl
stos
adc
dec
orb
and
les
stos
in
push
rolb
dec
push
push
hlt
inc
jp
andb
not
push
lcall
lret
repz
repnz
clc
iret
or
and
mov
sbb
mov
add
xor
stc
imul
push
adc
pop
or
jb
or
pop
mov
adc
push
pop
repnz
add
or
cmp
jecxz
rcrl
xor
mov
test
into
gs
fmuls
push
sub
cmpsb
movsl
incl
lods
lods
jp
fisubs
mov
lret
mov
or
adc
pusha
fadd
sbb
lock
or
gs
test
dec
and
pop
lds
pop
lahf
pop
inc
inc
stos
push
imul
test
popa
in
fists
mov
push
mov
subl
or
pop
push
adcb
jecxz
out
test
xchg
mov
sub
cmpsb
inc
xchg
mov
clc
and
add
arpl
jp
push
or
jmp
fidivs
pop
insl
movl
int
mov
sbb
lock
jb
lock
gs
mov
in
adc
in
clc
xchg
xor
popf
cltd
inc
jmp
into
jmp
jne
mov
and
insl
lret
pop
lahf
cmp
enter
jl
push
roll
ficompl
ja
cltd
mov
xchg
fisttps
sbb
aaa
sarb
pop
sub
pop
cs
add
jo
ds
xchg
aad
mov
adc
mov
repz
mov
adc
mov
jge
and
inc
int3
lret
test
xor
jmp
push
sub
in
jge
outsb
pushf
jp
lods
mov
in
and
xchg
cmp
int3
test
std
xchg
mov
aas
push
lods
mov
ror
gs
stos
mov
scas
test
push
shrb
mov
movsl
icebp
dec
or
push
ljmp
popa
add
cmp
and
jle
cmp
push
es
or
fidivl
pop
sbbl
pop
dec
in
add
outsb
in
movsb
pop
out
cmp
dec
leave
fdiv
inc
sub
jae
jg
mov
fimuls
pop
mov
ds
cmpsb
mov
insb
nop
arpl
mov
jg
mov
xor
fnsave
pusha
fistl
out
int
cmpsl
or
aas
push
pop
rorb
inc
sti
ret
or
insb
jbe
pop
add
rcrl
aaa
sub
or
out
push
and
inc
fnstenv
mov
loope
jbe
out
lcall
jecxz
int3
pop
aaa
push
push
shl
add
push
cmp
cmp
push
popf
pop
in
sub
in
repnz
daa
inc
adcl
adc
xor
push
dec
add
sub
vscalefpd
jno
enter
pop
andl
movsb
arpl
outsl
mov
cmpb
mov
adc
or
adc
and
sub
push
inc
bound
outsb
fimull
mov
lret
and
lahf
or
cmp
sar
sbb
push
jbe
repz
mov
push
fildll
adc
push
fldenv
mov
sbb
lcall
jns
mov
xchg
push
leave
enter
sbb
sahf
xor
jns
addb
adc
mov
add
ljmp
jno
mov
pop
das
icebp
mov
jo
bound
xchg
sub
fnstcw
lret
push
fidivl
mov
rorb
mov
inc
negb
jmp
sbbl
jle
inc
pop
into
popf
push
cmpsl
mov
call
pop
shrb
outsb
mov
or
dec
sahf
in
shlb
cmp
jp
mov
jle
in
sub
dec
mov
and
cmp
sarl
rolb
fwait
sub
or
fwait
adc
data16
sbb
aas
push
call
insb
cli
outsl
leave
insl
aas
pop
in
pop
sbb
dec
pop
xchg
adc
inc
sub
and
jno
xor
push
push
push
dec
out
and
ds
dec
fsubr
aam
xor
or
cltd
cmp
out
je
push
ss
cmp
int3
call
fidivrs
and
add
or
and
or
sub
dec
xchg
scas
cmp
and
xrelease
add
mov
adc
push
sahf
mov
data16
lahf
std
imul
and
inc
dec
popl
das
xor
leave
dec
testl
fmul
push
or
fstps
fisubrl
mov
sti
fdivs
push
lret
cmp
mov
jne
sbb
mov
xchg
sub
sbb
out
adc
mov
cltd
cmpsl
test
ja
push
mov
adc
loopne
xor
lock
pop
outsl
pop
int
dec
loop
rolb
jbe
jbe
sbb
cmp
in
or
mov
ss
cli
or
mov
imul
dec
loop
fisubs
aas
mov
lcall
sbb
call
mov
jecxz
jmp
rolb
negl
lds
mov
push
add
cmp
or
repz
mov
scas
jnp
inc
idivl
or
dec
jecxz
mov
and
bound
rol
adc
or
lea
cmp
jnp
xchg
pop
cmp
add
cli
fwait
jae
fcoms
mov
daa
insb
sbb
mov
mov
pop
mov
fwait
sub
in
mov
out
inc
into
pop
sar
jbe
inc
and
arpl
in
lret
mov
mov
out
out
inc
push
mov
mov
pop
sbb
mov
mov
into
add
mov
dec
out
std
shlb
mulb
cmp
sub
shll
push
mov
repnz
push
dec
cmp
mov
bnd
jno
cld
lds
addr16
xchg
mov
out
pop
ja
insl
xor
dec
and
inc
iret
mov
push
pop
add
insb
sahf
pop
xlat
outsb
xchg
mov
dec
insb
mov
shl
xor
cmp
sub
xchg
outsl
jnp
pminub
lahf
ss
lock
pop
mov
mov
xchg
pop
push
test
lcall
lcall
and
in
pop
idivb
ficompl
repnz
das
jnp
inc
stos
lahf
jae
xchg
sbb
xlat
mov
sub
pop
adc
test
xchg
adc
mov
mov
dec
scas
xchg
je
mov
push
mov
mov
sahf
xlat
or
mov
adcl
xor
inc
push
xchg
subl
lods
mov
es
cld
out
movsb
mov
xchg
mov
nop
cmp
cmpsl
aas
in
popa
clc
cs
inc
cld
insb
into
jg
in
lea
fcmovne
add
cmp
lods
insl
sbb
loope
jg
mov
mov
push
dec
push
movsl
ja
loopne
mov
ret
cli
xchg
cmc
insl
cmp
stos
insl
pop
push
adc
xor
ss
cmc
mov
in
ret
out
pusha
testl
sub
fwait
outsl
pushf
out
ljmp
aad
shll
dec
mov
in
cli
lcall
cld
aam
lock
adc
andl
mov
test
in
mov
push
jbe
pop
imul
fwait
mov
mov
rcll
mov
rorl
lret
into
outsb
add
ds
jns
imul
popl
mov
mov
js
jle
call
in
pop
xor
sahf
cld
daa
push
movsl
pop
adc
scas
nop
fsubrs
fnstenv
stos
cmp
or
sbb
lds
mov
fisttps
iret
pop
sbb
dec
ds
inc
std
and
or
and
fdivrp
push
call
fsubr
lds
mov
jno
dec
mov
lock
in
mov
aas
fsts
ret
je
jmp
enter
repz
and
dec
jmp
popf
into
test
pusha
add
scas
je
leave
inc
sahf
inc
loope
mov
popa
sbb
and
das
add
mov
or
add
mov
decl
mov
sbb
aad
jecxz
in
sti
xacquire
cmp
sbb
fstpl
shrb
loope
adc
test
push
lret
add
adc
xor
mov
push
cs
scas
cmp
jae
push
jge
popa
mov
lcall
insb
or
mov
pop
loope
mov
outsl
push
mov
cmc
int3
arpl
iret
xor
aaa
xchg
xchg
fs
inc
lret
adc
pop
cmp
movsb
and
cwtl
out
pop
inc
imul
and
aam
std
add
and
jae
icebp
pop
mov
mov
in
mov
scas
cmpsl
loope,pt
sbb
popl
rol
cmp
negb
dec
pop
push
dec
mov
adc
mov
das
jnp
fwait
xor
inc
in
mov
inc
lods
jle
imull
nop
stc
inc
cmpsb
cmc
and
mov
inc
stos
mov
pop
outsl
popl
sub
xor
out
andb
testl
in
fldcw
fnstsw
or
and
fisubrs
int3
or
inc
in
adc
out
or
jl
add
mov
idivl
movsb
test
repnz
mov
push
leave
mov
cmp
fidivs
mov
sbb
into
sub
add
daa
mov
mov
inc
movsl
roll
fmul
in
js
incl
mov
jno
imul
test
ds
repnz
enter
dec
addr16
mov
xchg
and
sbb
daa
es
data16
test
jge
loop
sub
icebp
and
add
and
xchg
mov
adc
js
in
pop
out
scas
sbb
orl
mov
pop
cmp
shrl
mov
jae
add
cli
jg
roll
mov
pop
iret
fildl
pop
fwait
cmp
je
in
les
lret
lret
aaa
push
cmp
or
popf
mov
cs
aad
test
lods
stos
xchg
mov
ja
cwtl
loope
adcb
add
popa
je
stos
cmp
sbb
pop
rcrl
fnstenv
inc
cmpsl
jge
push
lcall
cli
cwtl
in
jae
xor
out
repz
mov
nop
pop
scas
mov
sbb
pop
lahf
mul
int3
sbb
cmc
lds
out
push
hlt
nop
mov
pop
mov
out
push
mov
inc
dec
test
daa
cmp
test
pop
test
and
sub
xorb
nop
mov
stc
leave
pop
jo
xchg
inc
xchg
jge
loopne
inc
fnstsw
test
or
in
sub
push
or
insl
sub
sbb
dec
mov
ret
jnp
xchg
mov
xchg
mov
xor
add
lods
dec
mov
push
mov
test
push
pop
cmp
pop
cmpb
jo
repnz
push
popf
fwait
pop
icebp
mov
out
mov
movsl
popf
pop
outsl
iret
enter
and
fprem
mov
and
sarw
aas
cwtl
shrb
ljmp
dec
and
ret
in
ror
mov
in
push
dec
mov
shrl
fcoms
into
push
jbe
sub
nop
dec
mov
jae
outsb
pop
ja
movsb
adc
out
jmp
or
jl
shll
or
inc
nop
pop
cmp
mov
rcrb
pop
pop
imul
xor
outsb
pop
add
fwait
js
adc
out
xchg
pop
pop
xor
mov
ret
aas
push
pop
push
rcrb
fisttpll
push
bnd
frstor
and
add
push
adc
and
cmpl
xor
testl
cs
add
sbb
or
xor
roll
dec
jp
imulb
hlt
je
cld
sub
push
jo
sahf
cwtl
inc
mov
sbb
addr16
out
add
cmp
cmp
ljmp
sbb
jp
loope
mov
push
push
sbb
addl
sbb
mov
mov
inc
xor
subb
pop
jmp
aas
into
or
out
lahf
test
stc
inc
xor
orb
data16
in
mov
js
or
pop
fs
mov
cs
inc
stos
cmp
fcmovne
sub
imul
mov
sub
leave
pusha
sbb
and
sbbb
lock
add
loop
jae
and
das
lea
mov
jecxz
pop
or
mov
dec
inc
jnp
cmpsl
fldl
sahf
push
sbb
xor
lret
cli
pushf
jg
mov
shrb
loop
out
aaa
aam
and
arpl
mov
mov
pop
hlt
mov
and
pop
icebp
inc
adc
mov
cs
jp
mov
std
cmpsb
mov
pusha
sbb
or
sbbb
cli
dec
jecxz
int3
stos
inc
mov
js
jbe
jl
out
lods
dec
fsts
icebp
pop
repnz
add
pop
add
lret
dec
out
and
arpl
repnz
hlt
imul
pushf
daa
adc
test
push
leave
das
adc
test
sbb
lea
cmpsb
ret
cltd
std
movsb
mov
push
cwtl
mov
bsr
push
in
sbb
sub
imul
add
loop
mov
jl
subl
lret
lock
outsl
mov
ret
cmpsb
mov
repz
mov
fnstenv
push
push
aaa
xlat
repz
mov
pop
icebp
push
jge
xchg
iret
rorl
loop
add
jnp
inc
lcall
fwait
add
iret
mov
jne
sahf
sub
push
xlat
leave
mov
rclb
or
mov
test
enter
loopne
mov
leave
add
je
pop
scas
mov
jb
aam
inc
mov
inc
fs
jecxz
add
push
xchg
stc
inc
push
or
adc
push
jle
xchg
sub
fsubp
aaa
xor
pop
mov
mov
push
push
insl
mov
pop
pop
daa
leave
mov
cmp
cmpsl
pop
lret
gs
out
je
fcoml
jne
sbb
jnp
cltd
cmp
mov
icebp
jmp
in
repnz
push
mov
push
aas
fcmovnu
lds
in
cmpsb
jecxz
jl
adc
sbb
jecxz
pushf
popa
rolb
add
push
jb
jb
lret
ja
out
xor
std
mov
aam
mov
xchg
mov
inc
cmpsb
mov
in
xchg
push
in
test
insb
add
test
shll
mov
in
mov
ja
es
xchg
add
push
xor
mov
or
inc
mov
aad
inc
pop
cmp
inc
les
lds
push
adc
addb
push
cs
loop
movsb
adc
sti
mov
mov
mov
loop,pn
adc
inc
and
xchg
inc
dec
mov
test
pop
lret
and
mov
adc
mov
sub
mov
sbb
int
or
int3
jb
subb
cmpsl
sbb
loope
xor
or
pop
cmc
sub
or
inc
popa
inc
fidivs
adc
outsb
dec
rcl
mov
sahf
jne
push
sub
call
inc
cmc
mov
movsb
push
ds
push
pushf
pop
repnz
pop
pushf
dec
jne
loopne
ret
fwait
out
lods
and
and
push
or
jnp
outsl
mov
jge
inc
fdivrl
sahf
lret
or
and
sti
mov
sub
add
sbb
dec
leave
je
jnp
mov
xor
fbld
in
xlat
and
std
sti
cmp
push
insb
sbb
es
pop
sahf
cmp
xor
xchg
imul
sbb
orl
mov
frstor
mov
fst
inc
popl
js
aam
sbb
dec
xorl
cmpl
imul
test
fdivrl
imul
and
and
iret
out
pusha
pop
inc
int3
fidivs
jmp
push
mov
add
mov
nop
add
ret
xchg
and
inc
sbb
pop
mov
je
and
leave
das
cmc
lcall
mov
ret
ss
add
mov
mov
loope
sub
cmp
jl
shrb
sbb
and
out
ja
sarb
fistpl
fistpll
mov
pop
test
out
ja
cld
jl
aas
mov
sbb
push
icebp
inc
gs
jb
push
jne
jb
xlat
subl
dec
or
jmp
cmp
js
std
repz
or
shrb
pop
in
pusha
inc
shl
xchg
mov
jae
or
push
jne
adc
adc
xchg
mov
mov
bound
mov
sub
xorb
ja
nop
movsl
jge
xchg
add
mov
xor
out
cmp
aam
cld
pop
mov
les
rcl
jmp
push
jne
push
ja
inc
test
push
push
in
xchg
pop
lock
out
test
mov
or
adc
mov
jg
sbb
ss
pushf
cmc
inc
lret
into
cmpl
adc
add
cmc
mov
iret
je
add
jns
pop
mov
push
shrl
and
cs
pop
xor
dec
cmp
mov
ljmp
xor
in
fcomps
push
faddl
fstl
mov
add
in
sbb
pop
repz
jno
jecxz
jp
out
xor
mov
jb
mov
dec
pop
sar
xchg
push
cld
int3
inc
test
ljmp
js
cmpsl
aaa
icebp
shlb
fdivrs
inc
mov
rorb
adc
sub
es
xor
mov
xchg
adc
in
test
insl
in
cwtl
pop
sbb
jle
imul
push
rcll
insb
negb
or
scas
aas
dec
cs
cmp
loope
mov
repz
fistl
fs
xchg
mov
xchg
les
mov
pop
adc
jno
cmp
xchg
movsb
sub
jp
dec
sub
dec
std
and
jnp
jl
mov
test
jns
xor
pop
jnp
fs
cmp
adcb
sub
lds
xchg
js
or
fstps
ret
sub
psubb
push
enter
shrl
and
bound
lret
mov
andb
xchg
mov
push
popf
and
cmp
mov
popa
and
out
cmp
es
xchg
and
test
xchg
cs
inc
insl
lods
dec
pop
out
sub
xlat
test
into
pop
scas
mov
cltd
mov
aam
inc
gs
sbb
jecxz
test
add
out
fidivrl
mov
and
mov
aas
into
scas
dec
push
add
pop
xor
es
fbld
mov
push
je
xchg
rcrb
add
push
and
je
dec
pop
cmc
jge
aas
mov
mov
daa
mov
sub
cmpsb
addl
ljmp
inc
inc
push
mov
loope
or
mov
sub
aam
stos
out
xor
pop
scas
stos
adc
add
adc
push
or
xorl
in
pop
dec
fwait
cmp
int3
or
ficomps
mov
xchg
push
xchg
icebp
mov
and
dec
arpl
add
mov
shlb
sub
in
xor
push
mov
les
push
and
das
push
jne
jb
lock
test
add
sbb
adc
lahf
shll
cmpsb
inc
data16
lcall
test
push
sub
mov
xchg
repnz
ss
mov
add
stos
mov
add
sbb
add
jmp
aam
fisubrs
add
mov
lret
jae
jbe
test
xchg
jbe
mov
sbb
add
cmp
xchg
xchg
test
js
jno
ficoms
stos
loopne
cmpsl
cmc
adc
in
inc
popf
jns
ret
mov
push
aas
mov
mov
test
push
popa
xor
mov
notl
movb
push
lcall
fst
es
lock
and
dec
pop
push
in
lret
or
sbb
sbb
jae
cli
push
aad
cld
inc
jns
lea
pop
push
or
mov
aad
sahf
pop
pop
sti
subb
xchg
sub
mov
jne
pop
out
out
jp
shlb
pop
cmp
xchg
sbb
push
dec
mov
mov
add
xor
repnz
stos
cmc
outsl
jne
shr
jecxz
jge
mov
mov
add
rorb
inc
cmc
lret
into
and
mov
xchg
xchg
mov
xchg
dec
das
adc
push
int3
fdivrs
pop
pop
mov
dec
inc
mov
xchg
daa
out
xor
jno
pop
jecxz
xchg
ja
cltd
add
pop
daa
jp
sub
sti
xchg
and
cmp
gs
stos
mov
adc
adc
push
xor
jl
test
jge
jnp
ror
pop
scas
fimull
push
mov
adc
insl
test
aas
pop
insb
ljmp
scas
or
pop
in
pop
pop
jle
xchg
aad
pop
punpcklwd
jmp
xor
mov
add
imul
sbb
popa
mov
ret
sbb
add
lahf
cmp
fcomps
cmpl
decl
or
push
ds
movsb
jnp
icebp
mov
andb
lds
adc
push
in
and
test
sahf
cmpsl
xor
cmp
insb
shl
pop
dec
sub
lea
ret
and
jns
mov
pop
jle
jae
icebp
xchg
in
mov
fsubp
jbe
mov
or
mov
mov
mov
js
push
imul
mov
fistpl
lds
push
cwtl
cmc
add
sub
pop
lcall
lret
sbb
sbbb
ljmp
xor
sbb
fucom
lods
inc
and
xor
stc
or
mov
movsl
dec
fs
fidivrl
adc
or
das
gs
sbb
scas
subb
scas
dec
xor
mov
push
pop
xchg
adc
xchg
cmpl
ss
mov
sbb
mov
sub
xor
std
or
rcrl
mov
push
pop
fsts
xor
or
fistpll
pop
push
add
and
ja
hlt
cli
jp
popa
mov
jecxz
jg
dec
mov
leave
add
ds
push
stos
sub
push
mov
mov
dec
mov
add
mov
jmp
lods
lds
adc
dec
and
dec
and
mov
add
xor
decb
mov
add
cmpsl
lcall
push
int
inc
sbb
in
arpl
clc
out
push
mov
into
outsb
mov
jmp
aad
fnstenv
out
imul
call
aam
dec
lods
inc
clc
sbb
pushf
into
jbe
and
xorb
inc
mov
mov
inc
loopne
push
insb
inc
sbb
mov
dec
sbb
mov
jbe
cmp
icebp
pop
push
sbb
xor
inc
pop
mov
mov
jmp
sub
sub
inc
stos
jne
das
push
xchg
push
lods
xchg
fcomip
and
shlb
push
fsubs
sbb
inc
and
mov
inc
scas
lahf
dec
xchg
sbb
lods
mov
neg
mov
pusha
decl
and
in
bswap
sub
das
or
xchg
dec
stc
fnstcw
pushf
das
push
inc
jno
push
adc
jbe
xor
and
cmpsl
jle
out
pop
sub
push
out
adc
fnstenv
xchg
hlt
enter
mov
push
sub
sub
imul
lods
xchg
mov
popa
add
jmp
outsl
daa
sti
fdivl
jle
xchg
adc
popf
pop
test
push
pop
mov
add
cmp
xor
pop
mov
dec
or
adc
in
in
lods
int
and
jns
mov
in
fdivs
int
add
leave
dec
pop
push
aad
adc
dec
cmc
arpl
clc
xlat
dec
cmpsb
clc
cltd
lods
jo
sahf
sub
insl
loop
andl
jmp
enter
out
xor
out
lcall
stos
insl
pop
insl
mov
xlat
cmpsl
ss
in
pop
xor
or
popf
bound
cmc
cmp
lea
aaa
xor
ss
das
add
jle
inc
pusha
pusha
sarb
rcll
xchg
dec
mov
sub
sbb
cmc
mov
outsb
and
jb
sbb
dec
cmpsl
pop
mov
fistps
inc
and
dec
inc
mov
pop
ja
popa
xchg
loopne
sub
mov
mov
loopne
loopne
inc
mov
xchg
test
jmp
lret
lds
andl
dec
push
add
sti
mulb
nop
push
inc
adc
in
int3
hlt
sbb
lock
add
xchg
cwtl
clc
sahf
add
jmp
clc
fnstcw
jnp
pop
inc
mov
es
fsubr
dec
inc
xchg
imul
lea
mov
hlt
sbbb
pop
sbb
lahf
jbe
test
or
std
mov
adc
adc
xor
push
bound
outsl
scas
popa
fwait
pop
test
popa
daa
in
test
ret
cmc
mov
cmp
fcomps
jnp
push
dec
scas
jb
daa
cmc
sbb
xor
push
push
inc
xor
xchg
sbb
out
mov
leave
lea
sub
mov
fdivp
push
pop
pop
dec
mov
aad
mov
out
fcoml
aam
mov
pop
loope
push
scas
lahf
and
rcl
loope
push
cmp
imul
xchg
dec
dec
fistpll
fidivl
into
add
adc
bound
sub
lods
dec
mov
jp
insl
int
jge,pn
push
dec
mov
cmp
jnp
mov
stos
push
dec
sub
cmp
repnz
jle
orl
sbb
mov
mov
pusha
cmp
mov
clc
cmp
leave
outsb
clc
sub
out
test
or
xor
adc
xor
xchg
pushf
push
int3
movsl
lods
scas
mov
pushf
rorl
cmp
sub
testl
hlt
push
dec
data16
and
fsubl
pushw
mov
leave
pusha
push
sahf
add
shlb
jg
jle
pop
cmp
sbbl
or
cltd
adc
aad
movsl
mov
xchg
insl
lods
std
aaa
ljmp
hlt
or
push
sub
cltd
addr16
std
je
mov
add
sbb
push
roll
inc
in
arpl
push
or
xorl
fidivs
push
das
mov
sbb
les
jne
jl
jns
jb
inc
inc
lods
js
cli
pushf
push
pop
sub
jg
adc
aad
mov
out
xchg
in
xchg
xchg
xchg
test
scas
mov
xchg
addl
xchg
in
xchg
clc
lock
into
cmpsb
xchg
sub
fs
dec
inc
fdivrs
lods
sbbl
xchg
mov
loopne
pop
fnstcw
lcall
jne
scas
jmp
pop
and
data16
stc
cmp
add
dec
xor
movsl
jg
int3
ficoms
mov
cltd
cmp
test
push
fstpl
popa
mov
jmp
ljmp
inc
pop
std
fisubl
rorl
sahf
push
stos
and
push
daa
es
and
bound
cwtl
sub
ljmp
mov
xlat
call
cmp
mov
lea
cmp
dec
pop
jns
sarb
adc
xor
ja
inc
dec
xchg
add
lea
xchg
mov
shrb
insb
out
sarl
cs
mov
out
inc
icebp
loope
pop
pop
hlt
sbb
fstl
popa
cmp
enter
in
pop
out
iret
push
push
arpl
repz
dec
inc
mov
cmpsl
imul
pushf
adc
ja
add
mov
xor
or
jb
push
jno
dec
std
pushf
fidivs
movsb
mov
out
jecxz
fisubl
test
cmpsl
or
and
and
jb
push
movsb
mov
or
int3
pop
cmp
mov
adc
mov
mov
out
mov
or
pop
lahf
mov
das
mov
jmp
xchg
mulps
xchg
mov
nop
xor
jle
repz
repnz
adc
fisubl
lods
sbb
aam
stos
pop
and
sbbb
mov
bound
pop
rcll
add
fdivrl
inc
mov
call
or
dec
imul
aam
fldt
pop
sbb
arpl
sbb
fistpl
fistpl
mov
leave
cli
jns
in
mov
loopne
iret
incl
lods
dec
push
adc
push
and
mov
imul
pop
inc
xlat
lea
loope
mov
jne
xchg
cmpsl
fs
jno
mov
cmpsb
add
dec
or
and
xchg
sub
insb
ss
sbb
and
dec
mov
cmp
jge
dec
jg
pushl
jge
mov
xchg
inc
sub
ret
cltd
pusha
or
adc
cli
cld
xchg
je
sahf
loopne
sub
mov
add
in
pop
repz
or
dec
test
cmpsl
sub
xor
fwait
jle
mov
rcr
dec
loopne
repnz
es
ficompl
adc
fidivrs
andl
xor
pop
shlb
aas
sbb
push
jns
pop
pop
mov
mov
test
sub
xor
add
rorl
sub
cld
rcrl
mov
addr16
lea
in
in
sub
scas
mov
cmpsl
sti
lret
lret
ficoms
gs
movsl
into
sub
push
lods
lahf
jnp
call
jp
inc
sbb
test
jge
inc
cld
mov
mov
xchg
mov
mov
xchg
repnz
loop
mov
xchg
andl
inc
scas
popl
sub
mov
mov
lods
fisttpl
scas
inc
stos
cmc
ret
lcall
push
adc
or
jmp
jbe
into
cld
imul
ret
mov
push
mov
push
cwtl
lods
sahf
mov
out
xchg
js
pop
jbe
sbb
icebp
add
sub
bound
mov
sub
inc
dec
or
scas
cltd
mov
dec
inc
jb
in
rorl
dec
int3
mov
leave
inc
sbb
outsb
or
and
loop
jbe
xchg
in
jno
frstor
shl
ja
cmc
sub
add
or
push
add
jp
fiadds
orl
push
push
jp
inc
lods
pop
dec
aaa
dec
test
dec
fdivrs
jge
rep
add
or
js
sti
dec
sahf
xor
push
fiaddl
dec
jl
mov
movsb
xor
rol
repz
imul
dec
cmp
cmp
xchg
sub
push
lods
leave
push
out
cli
dec
add
xchg
out
pop
rorb
loopne
fsts
xor
xor
fstps
push
in
popf
es
mov
in
push
push
in
or
je
pop
loopne
pop
dec
rorb
int
push
pop
xchg
cs
nop
pop
sahf
pop
je
and
rep
stos
testl
sub
sbb
roll
lea
xchg
cmp
xchg
push
out
xchg
lcall
inc
repz
in
sub
scas
popf
pop
mov
jae
int
dec
inc
inc
dec
inc
adc
jbe
aas
push
jbe
scas
ret
imulb
sbb
sbb
bswap
jp
sub
and
inc
inc
stos
pushf
jmp
cmp
mov
mov
out
cmp
jnp
rcrl
addr16
adc
ficompl
adc
mov
adc
or
mov
cli
outsl
addr16
cmpsl
inc
jbe
lret
fstl
mov
jae
mov
dec
loope
fnstcw
iret
shll
jb
adc
mov
rol
cmp
mov
call
mov
frstor
fstpt
scas
mov
in
lods
inc
push
mov
jae
inc
jle
ss
cli
pushf
arpl
sarb
lcall
sub
enter
mov
mov
sbbb
cmc
jno
sub
jle
or
flds
fstps
jo
fwait
sub
test
add
lods
sub
mov
outsl
sub
ds
orl
dec
inc
pop
xchg
xchg
nop
mov
add
ds
push
jge
lcall
adc
push
mov
cmpsb
call
adc
repnz
nop
cs
cmp
cmp
aad
fmul
mov
sbb
shll
mov
jecxz
xchg
loopne
xchg
test
pop
sbb
repz
or
lret
jo
in
jl
xchg
dec
inc
aas
inc
in
icebp
cld
aas
lret
and
outsb
dec
mov
into
pop
mov
xchg
add
out
mov
cmpsb
stos
fcoml
jae
mov
fiaddl
push
add
mov
lock
pop
repnz
aaa
add
xchg
xchg
outsb
pushl
testl
adc
loope
jmp
dec
xor
add
add
sbb
fs
cmp
cli
mov
lahf
fldcw
mov
iret
sbb
cmp
dec
xor
push
rcr
pop
test
sub
dec
adc
movsl
stos
js
es
scas
sbb
jb
ffree
lods
out
clc
cmpsb
faddl
out
jb
add
cld
pop
icebp
xor
jmp
enter
sub
mov
cmp
push
inc
repz
fidivrs
movsb
and
xchg
cmp
popw
adcl
xchg
mov
push
cmp
sub
repnz
and
fcmovnu
shll
bound
in
popf
and
ljmp
mov
movsb
dec
in
mov
out
adc
pop
mov
ret
jge
jecxz
lods
clc
into
ja
lcall
repz
insb
pop
sahf
mov
adc
js
mov
call
jns
push
mov
addl
adc
xor
xor
frstor
push
mov
rcr
aaa
in
lods
push
ds
jmp
ja
xor
add
mov
psubsw
aaa
pop
stos
dec
leave
push
not
sarb
leave
mov
mov
add
pop
outsb
icebp
je
fwait
mov
push
in
xchg
add
movsl
repz
js
bound
xlat
add
ja
adc
push
mov
cltd
fdivrs
fnstcw
nopl
sbbb
mov
mov
scas
out
push
andb
dec
inc
test
add
sbb
stc
mov
mov
lret
jnp
rclb
mov
xor
adc
and
pop
lods
mov
cmp
cmpsl
bound
lcall
add
or
dec
mov
cmpsb
ret
ljmp
jp
pop
aam
insb
ljmp
jo
loopne
aad
add
pop
xor
xchg
pop
jae
mov
mov
jg
or
xchg
mov
adc
imul
shll
sbbl
push
mov
std
cltd
xchg
inc
pop
mov
mov
add
xchg
shlb
or
inc
cwtl
cli
adc
add
mov
push
int3
sti
or
in
push
sbb
dec
push
ss
push
jecxz
cmp
pop
aaa
jecxz
cmpsb
repnz
ja
or
jne
fidivrl
test
mov
jo
int3
jo
xchg
push
dec
pop
push
xchg
pop
dec
xchg
xor
and
mov
sub
mov
mov
lahf
pop
shrl
int3
jbe
lret
mov
fisubrs
aam
adc
jno
bound
adc
push
push
adc
mov
movsb
inc
push
push
xchg
sub
mov
mov
or
clc
aas
adc
cwtl
inc
push
and
popa
xchg
rolb
xor
mov
add
mov
nop
out
xlat
inc
cltd
dec
and
scas
rcrl
lock
lretw
in
es
in
inc
repz
shrl
cmp
sbb
mov
iret
ss
scas
daa
ds
out
sbb
lea
push
xor
cmpsl
aaa
or
cmp
mov
stos
clc
ffree
pusha
or
ds
mov
or
lcall
stc
fsubl
push
adc
lods
dec
xor
loope
js
repnz
loop
jp
fdivrs
adc
jle
mov
rcll
mov
jl,pt
pop
xchg
fstpl
cmp
jnp
cmc
xor
xor
fs
mov
mov
rclb
add
jge
lcall
push
lea
mov
adc
cmpsl
repz
and
push
adc
adc
push
std
mov
mov
mov
mov
in
jne
sbb
push
and
xor
mov
cwtl
xor
mov
inc
adc
faddl
adc
pop
shll
mov
xor
jecxz
mov
push
add
nop
pushf
call
push
or
push
mov
push
in
mov
je
fstpl
test
inc
xchg
out
jbe
mov
mov
pop
mov
movsl
cmp
sti
into
repnz
ret
xor
dec
fdivrl
roll
cld
test
jmp
out
test
lret
mov
js
ljmp
mov
sub
icebp
add
sbb
push
and
ficoms
sti
les
pushf
enter
popa
icebp
adc
mov
mov
dec
push
orb
stc
jbe
and
stos
inc
fsts
cmp
cmp
sub
or
bound
xor
adc
cmp
push
mov
fcmovnu
xor
cmp
mov
pushf
or
cmp
adc
sub
mov
mov
jg
fidivs
cmc
xchg
add
push
cwtl
and
aas
push
jnp
loope
sti
cmp
mov
add
adc
xchg
mov
dec
cmp
pop
or
adc
ja
mov
leave
pop
fcmovne
sti
ds
pop
push
sldt
sbb
aaa
cmp
pushf
xor
xchg
dec
push
sbb
jnp
push
push
out
mov
lods
dec
jnp
scas
and
test
adc
stos
push
cwtl
mov
jecxz
in
cld
call
rol
pusha
xor
or
or
ss
sbbb
xchg
mov
sub
mov
push
call
push
insl
movsb
repnz
push
xchg
mov
fists
fcompl
xchg
cwtl
adc
adc
mov
xchg
cmc
pop
xchg
mov
out
xchg
mov
mov
sub
add
add
and
fstl
shlb
clc
xlat
push
sub
cli
shll
rcrb
loope
dec
pop
or
rolb
lret
test
jmp
dec
pop
lea
mov
icebp
int
and
into
lods
inc
adc
mov
push
inc
adcl
movsl
cmp
sbb
ja
pop
test
xchg
outsb
popl
push
in
sbb
pop
sub
sahf
xor
call
test
push
dec
lret
addr16
pusha
icebp
xor
mov
pop
or
pushf
mov
and
jl
insl
mov
mov
mov
mov
pop
mov
mov
mov
cmpsl
xchg
or
inc
enter
loope
xchg
pushf
push
hlt
jnp
jmp
ja
hlt
fdivrp
adc
mov
jno
pop
popf
jle
mov
pop
xchg
outsb
fsubrl
dec
in
push
xor
out
xchg
pop
cmp
out
movsl
cmp
sbb
out
pop
fwait
lock
mov
std
es
popa
sbbl
subl
dec
pop
add
addb
aaa
xchg
jecxz
inc
fnclex
pop
xor
pop
pushf
jnp
push
jae
popf
and
sbb
ret
xor
icebp
ja
cmp
imul
insl
ja
pop
push
sahf
jns
stos
cmp
aad
inc
push
inc
pop
nop
insl
fstp
xor
adc
mov
les
mov
mov
psadbw
inc
lret
test
rcrb
xchg
leave
lods
cmp
jno
mov
dec
inc
pop
ja
std
xchg
out
fs
xor
iret
jmp
push
shr
cmp
push
sahf
and
dec
ljmp
loopne
insb
adc
add
int
mov
out
cld
rcrl
sub
xchg
iret
jmp
or
and
xchg
imul
fdivrp
pop
ljmp
mov
inc
sbb
or
iret
imul
outsl
mov
pop
not
testl
in
inc
xor
jmp
xchg
add
jecxz
movsl
xchg
call
or
and
in
mov
rcrb
call
ja
mov
scas
repnz
sbb
icebp
movsl
jno
ja
fsub
aaa
fsts
push
mov
push
es
xchg
scas
xchg
adc
cmpsb
mov
daa
push
mov
sub
shrb
rcrl
jns
int3
pop
popa
pop
push
jge
cmpsl
pop
rol
stc
dec
cld
push
cmc
adc
cmp
fbld
and
mov
shrb
add
jae
jle
rorb
loop
pop
push
lods
add
push
sub
movsb
or
cmp
mov
add
ja
jno
call
out
mov
pop
inc
sub
lods
pop
mov
jg
sub
popf
scas
les
loopne
sbb
inc
mov
out
fsts
arpl
sbb
sti
or
stos
fdivrl
push
pop
cld
ret
inc
push
mov
icebp
test
mov
sbb
add
or
xorl
or
mov
es
stos
push
imul
xlat
sbb
or
in
sub
out
popf
push
and
dec
adc
pop
lods
outsl
cmp
sbb
mov
xor
jbe
out
mov
add
xchg
sub
rcll
push
adc
pop
cmc
movq
pop
push
mov
ds
push
lcall
xor
bound
ja
mov
fwait
mov
mov
mov
fidivl
hlt
jecxz
test
stc
cmpsb
leave
fs
stos
in
fwait
subl
sbb
outsl
loopne
pop
filds
scas
fnsave
mov
sbb
adc
rcl
fcompl
sti
xchg
lock
jae
int3
push
pusha
xchg
xchg
push
shlb
xor
sub
cmp
sti
ja
adc
push
mov
cmp
jno
sub
mov
sbb
cld
xchg
jl
mov
xchg
pop
push
adc
and
cs
insb
inc
sub
dec
pop
popf
or
adc
or
xor
xchg
adc
loope
inc
cmp
addr16
push
mov
cwtl
stc
sbbb
lcall
jmp
cmpsb
std
add
shrl
out
sub
aaa
daa
push
or
cs
shll
xor
add
ja
rep
add
pusha
xchg
addr16
push
nop
lret
push
dec
aas
jp
or
rcr
sbb
sbb
mov
in
cmpsl
ds
lret
and
loope
es
mov
insl
cwtl
outsb
jle
mov
rorb
ret
adc
loope
test
xchg
cli
pop
mov
mov
mov
sub
jl
mul
mov
repnz
mov
popf
leave
lret
xchg
insb
enter
mov
jne
pusha
push
aam
pop
lods
mov
scas
cmp
jecxz
ret
push
rcll
imul
xor
mov
add
inc
xor
mov
or
inc
clc
andl
pop
repnz
pop
ret
ret
adc
hlt
test
sub
in
es
jae
xchg
add
out
push
gs
adc
shlb
loopne
dec
sub
push
sbb
outsb
fchs
sub
dec
shl
pop
lcall
mov
in
mov
mov
jns
cmp
stc
mov
mov
xor
insl
jl
in
cwtl
sbb
adc
arpl
lahf
fmuls
or
or
sub
bound
lret
mov
pop
adc
cmp
shrb
scas
sub
push
mov
repz
mov
push
pop
cmp
int3
popa
iret
arpl
cmp
mov
mov
lret
adc
js
cli
shll
inc
gs
sahf
push
inc
sbb
jnp
mov
sub
sbb
dec
push
lcall
sbb
sub
ret
icebp
daa
out
mov
jnp
push
jle
inc
cli
pushf
push
andb
outsl
scas
lods
pop
sub
xlat
pop
xor
adc
xor
dec
mov
jae
sub
sbb
sbb
pusha
or
ret
xor
scas
mov
push
inc
lret
or
dec
add
fwait
roll
repz
cs
adc
jp
mov
mov
pop
aad
popw
jns
lock
mov
push
sub
scas
inc
test
mov
push
adc
mov
inc
add
cld
mov
mov
rcrb
test
and
push
dec
lret
bound
lcall
movsb
clc
xchg
pusha
testl
mov
gs
push
push
shrb
cmp
sbb
sbb
cmp
push
push
aas
push
fcompl
js
cld
arpl
dec
sbb
fldl
dec
scas
icebp
xor
sarl
popf
clc
mov
subl
mov
mov
pop
or
lahf
mov
js
imulb
jecxz
pop
pop
adc
jb
cltd
mov
test
inc
dec
jecxz
pop
imulb
stos
cmp
fdivrl
jl
sahf
dec
loop
push
orb
cmp
inc
inc
jbe
cltd
mov
xchg
lods
inc
xlat
cld
xchg
or
fidivrl
loope
adc
rol
pop
out
icebp
ret
add
mov
movsb
insl
out
or
pop
pop
popa
mov
stc
jge
mov
sbb
add
adcl
mov
and
cmp
or
mov
loope
inc
mov
add
out
push
rcl
mov
pop
or
xlat
movsb
data16
jle
test
dec
push
idivb
lret
push
xor
cmp
inc
mov
call
xor
cmp
imul
sub
mov
fistps
sub
mov
mov
xchg
xchg
sub
or
jbe
popf
mov
iret
push
mov
jp
cltd
push
inc
sbb
shr
cmpsl
in
shrl
pop
mov
jle
les
dec
adc
mov
out
scas
adcb
xchg
sbb
xor
loopne
xchg
stos
movb
jb
inc
mov
mov
aaa
jbe
add
xor
mov
inc
dec
mov
mov
lret
and
aad
or
sub
adcl
or
pop
xorps
out
into
mov
stc
push
mov
dec
das
les
je
in
xor
push
cwtl
push
or
outsl
inc
dec
mov
dec
push
push
push
jb
mov
sti
std
aam
aad
mov
clc
sub
adc
add
mov
lods
add
sbb
pop
push
aaa
push
jae
sbb
jbe
mov
pop
inc
lods
add
and
gs
xchg
test
xchg
sbb
in
sub
sub
push
lods
dec
pop
and
jo
jno
jmp
pop
clc
adcl
repz
daa
decl
or
ret
lds
test
int
xorps
cwtl
cmpsl
xchg
lret
pop
xor
or
adc
jne
mov
adc
aas
leave
out
or
jbe
lods
adc
inc
inc
pop
in
enter
shr
push
nop
aas
pop
xchg
mov
ficompl
mov
aas
rcrb
and
add
loop
nop
adc
adc
lods
or
inc
xor
in
push
xchg
mov
shll
popa
jg
sbb
test
xchg
addr16
mov
fidivrs
imul
cs
cmp
ds
pop
ds
add
cld
pop
imul
mov
adcl
push
jmp
sbb
jno
xchg
jg
sbb
in
insb
rcrl
jg
xor
lods
or
xrelease
lcall
cmc
sarb
mov
inc
pop
sbb
jns
loop
mov
adc
je
add
lret
pop
push
jmp
lds
fbld
test
fs
aam
and
mov
test
pushf
dec
push
inc
dec
aad
push
fists
icebp
out
jbe
adc
loope
mov
popf
rcrl
and
fcoml
jl
lock
xchg
push
ljmp
sub
xchg
or
xchg
mov
icebp
dec
dec
push
imul
mov
clc
ret
add
cld
inc
pop
fs
addr16
repnz
push
mov
lea
lcall
or
push
subb
mov
mov
sub
mov
sti
nop
fcoml
pop
xchg
mov
in
cmpl
movsl
out
mov
in
mov
pop
enter
stos
inc
pop
pop
movq
and
mov
lret
imul
inc
fistpll
or
push
pop
outsl
push
pushf
rorl
test
pop
push
outsb
xchg
in
or
sbb
negl
xor
mov
mov
sub
in
push
jg
xchg
enter
add
xor
hlt
cmp
mov
cmpsl
sbb
cmp
in
lret
stos
sahf
xor
lea
das
cmp
testb
shll
inc
sbb
gs
pop
mov
fmuls
sbb
outsb
sbb
cmp
loop
test
lret
mov
jns
adc
or
add
pop
and
inc
and
add
xorl
xor
or
jmp
pop
cmpsl
out
mov
adc
adc
xchg
push
xor
inc
js
out
and
call
pushf
mov
jns
lea
xchg
add
xchg
divl
rclb
adc
mov
jl
sub
pop
lcall
sti
xchg
imul
and
leave
into
ds
std
icebp
sub
xchg
jecxz
nopl
fiaddl
je
mov
les
cmpsl
cs
test
xor
incl
loope
jmp
popl
mov
add
ret
arpl
and
or
addl
push
out
push
inc
pop
or
dec
inc
out
push
push
xor
aad
jbe
sub
jnp
inc
fldenv
mov
leave
cmc
mov
push
jno
lahf
push
dec
icebp
lea
push
pop
dec
mov
xor
sub
jnp
xor
or
insl
ds
pushf
jmp
push
hlt
addr16
xchg
inc
cld
add
ficoml
fwait
imul
mov
icebp
rcrl
sarl
jle
add
cwtl
cwtl
pop
in
add
pop
jge
sbb
loopne
stc
push
test
or
sbb
mov
data16
outsl
jnp
push
or
push
fscale
test
das
sti
jae
sub
mov
mov
add
nop
dec
push
fsubrs
xchg
inc
scas
sbb
dec
nop
adc
pop
scas
out
lret
mov
idivb
loope
pushf
cmpsb
cmp
mov
fwait
pop
jnp
mov
jbe
repnz
hlt
adc
dec
mov
enter
adc
inc
lret
out
cld
int
xor
push
shrb
xchg
cmp
mov
mov
or
sub
jb
fildll
das
push
push
jae
dec
incb
lods
insb
inc
je
cli
test
imul
cmp
dec
enter
ljmp
pop
test
scas
cmpb
dec
jmp
or
and
add
and
idivl
cmp
mov
lods
sub
pcmpgtd
or
lcall
daa
cli
jne
lahf
inc
mov
push
or
js
inc
scas
ret
cltd
jle
sahf
inc
movsb
mov
sti
insl
jp
add
sahf
push
push
out
fidivrs
pop
test
and
fisttps
mov
fcompl
jo
lcall
and
sub
sub
scas
push
mov
fsubrp
cmp
incb
xor
inc
lcall
adc
dec
loopne,pt
js
push
mov
loop
jbe
out
cli
popa
xchg
add
call
stc
xchg
sbb
cmpsl
sub
or
rcr
fisttps
and
roll
ds
ficoms
mov
les
idivb
imul
sbb
leave
outsb
xorl
push
test
cmpb
cmpsb
push
mov
or
mov
outsb
testb
adc
push
ja
scas
std
mov
cmp
out
fnstsw
xor
cli
arpl
push
inc
sub
push
in
inc
dec
in
aad
aam
and
lods
fcomps
ljmp
xor
sub
lret
int3
jae
cmp
popa
push
jbe
adc
call
je
xlat
scas
out
adcl
shll
sahf
mov
xor
cli
xchg
inc
lret
inc
sbb
das
fistps
cmpsb
add
mov
es
mov
gs
sbb
scas
movsl
sti
pop
xor
js
sub
jecxz
pop
pop
stos
or
idivb
dec
sub
xchg
mov
xchg
jg
test
push
push
xchg
enter
inc
ljmp
add
mov
jmp
icebp
sahf
xor
test
mov
dec
jns
cmp
jno,pn
sub
inc
gs
inc
dec
add
mov
dec
icebp
and
xchg
mov
xchg
sub
repnz
pop
jns
std
push
stos
inc
dec
push
push
call
sub
outsl
jns
nop
cmp
test
pop
dec
jl
lcall
jmp
inc
xor
push
xchg
sub
fdivl
and
dec
cmp
adc
into
lods
push
sub
sbb
sub
ja
test
repnz
in
mov
hlt
or
ljmp
inc
xchg
push
jns
add
das
mov
in
lods
inc
das
scas
andl
xchg
sbb
push
ret
in
or
scas
xchg
sub
movsb
fidivs
push
mov
test
in
dec
repz
cwtl
into
loope
jmp
sti
sbb
dec
lock
sbb
pop
add
fcomps
mov
sub
int
sub
dec
ja
jle
test
pop
or
mov
mov
mov
jmp
jmp
std
or
test
inc
jae
mov
push
das
push
popf
aad
xor
dec
jns
jbe
aas
outsb
sub
mov
push
dec
add
mov
pop
loop
mov
pop
outsl
clc
dec
add
add
orb
rorb
sbb
sub
repnz
ret
inc
pop
iret
mov
mov
lret
mov
and
movsw
lret
rcrb
test
sbb
fbld
pop
dec
popf
test
ret
lds
lea
pop
repz
jge
movsb
mov
outsb
inc
pushl
roll
mov
fnstenv
add
dec
inc
sub
xor
sti
xchg
lods
jbe
shll
js
xchg
jae
jle
fs
sub
int
lods
jg
das
rclb
aas
loop
insl
sti
jmp
adc
xor
jne
push
test
mov
and
cmp
and
mov
movb
in
pop
andb
adc
push
iret
xchg
xor
sub
sbb
insl
jg
jns
cmpsl
imul
dec
test
jg
ret
pop
into
das
cs
faddl
ds
out
mov
xchg
stos
cmp
jne
cmp
xchg
leave
fnstenv
jle
jbe
pop
popf
hlt
mov
fldcw
lds
fsubp
sti
pop
psubsw
mov
fcomi
inc
fwait
mov
mov
mov
push
lret
enter
add
add
cmp
cmp
ds
inc
dec
mov
test
pop
dec
fcmove
insb
outsl
bnd
aam
push
inc
xchg
dec
push
fistps
push
fcompl
loopne
mov
adc
aas
stos
aas
js
icebp
ret
cmp
inc
or
sbb
xor
jmp
lahf
and
xchg
subb
cmp
pop
repnz
add
mull
stos
shlb
xor
jmp
cmp
ficoms
out
test
outsb
jns
leave
gs
icebp
xchg
out
xchg
outsb
jge
test
or
jbe
fs
mov
fucomip
jl
adc
pop
inc
inc
jg
dec
lock
and
ud1
jmp
jmp
stc
inc
fstps
shlb
sti
adc
pop
xchg
test
cmc
ret
lcall
sbb
decl
jp
jle
loop
xchg
xchg
out
jle
es
xor
sbb
cmp
xor
add
ds
fldcw
out
call
outsl
sarl
aad
adc
in
jns
pop
xor
xchg
mov
test
pop
adc
xorb
cwtl
lret
cmp
gs
int3
arpl
cmp
adc
pop
je
pop
pop
xlat
pop
xchg
sbb
jl
ss
insl
lcall
pop
mov
out
dec
jmp
hlt
mov
cmp
jmp
test
in
fnstcw
xchg
push
sub
jae
ds
xor
xlat
insb
aam
sbb
mov
push
fnstsw
fbld
out
xor
xchg
xchg
mov
and
aas
sbbl
lods
xchg
push
push
sub
mov
or
pop
push
adc
test
cmp
cmp
fldenv
jmp
fstps
pop
add
pop
jae
sahf
clc
sub
xchg
outsb
ret
inc
xor
add
mov
sub
jp
aaa
clc
dec
mov
lods
adc
test
cmp
clc
into
add
ja
mov
mov
pop
jle
inc
push
rcrb
cwtl
xor
int
fcomip
mov
notb
mov
icebp
sub
pop
in
sbb
fstpt
leave
ret
push
movsb
stos
stc
push
mulb
imul
out
push
jne
inc
cwtl
mov
sar
adc
mov
sbb
ret
cmpsl
ss
ftst
cs
fistpl
push
out
stc
stos
pusha
stos
pushf
popf
pxor
fwait
jmp
mov
sbb
call
aaa
xor
mov
cwtl
into
pop
idivl
dec
es
and
or
adc
testb
in
push
mov
xchg
push
or
sahf
out
pop
xor
or
mov
push
or
fsubl
sti
lods
mov
lods
mov
jmp
ss
or
out
add
adc
lods
sti
in
repnz
fs
arpl
jle
pop
adc
repz
ljmp
push
sub
es
shl
test
sub
test
pop
flds
bound
jnp
test
adc
jbe
pop
sub
xchg
cs
subl
mov
iret
mov
push
pop
jg
nop
aaa
rorl
sahf
cmpps
popf
scas
pop
hlt
in
xor
xchg
lock
out
lods
mov
sbb
push
and
addr16
mov
loopne
push
lock
insl
imul
imul
xor
jns
rcll
testl
xchg
fwait
dec
in
xor
cld
test
std
outsl
add
cs
mov
adcl
cmp
pop
movsl
inc
lods
out
jae
cli
or
loopne
lahf
bound
mov
into
lea
mov
stos
mov
adc
pop
lahf
sbb
mov
mov
pop
mov
test
pop
sub
lret
jns
xor
in
pusha
ret
xchg
xchg
adc
add
pop
cmp
and
adcl
sbb
cmc
mov
adc
add
int
idivl
sbbl
add
fbstp
xor
add
mov
cld
push
xor
fstl
insl
ret
out
out
push
cmpsl
aaa
loopne
xchg
pushf
push
xor
xchg
cmpsl
push
mov
in
divb
dec
inc
jg
jecxz
lret
aad
jmp
or
sti
pop
andl
and
ret
popa
int
or
xchg
fisubl
popf
mov
repz
sub
sub
mov
outsl
sub
shlb
stos
add
sbb
pop
fimull
dec
sbb
aas
inc
call
lret
andl
arpl
pop
rorb
fidivs
rolb
dec
jns
arpl
nop
pop
dec
fiadds
arpl
xchg
int3
pushf
adc
js
cli
lahf
and
jge
fsubrs
test
mov
lods
shl
and
repz
insb
test
add
in
mov
jecxz
ror
aam
js
insb
iret
movsl
mov
or
mov
mov
mov
add
cmpsb
lods
sub
fcomip
pop
inc
bound
mov
subl
cmpl
mov
popa
sub
call
jae
out
pop
xor
sub
jno
push
stos
sub
mov
mov
or
and
out
cmpsl
popf
sub
popf
lahf
rcrb
cmc
adc
ss
out
cmpl
ljmp
xor
cwtl
int3
and
jecxz
pop
orb
cmc
icebp
stos
xor
out
addl
data16
fbld
jg
stos
and
xor
mov
cmp
cmp
sti
xchg
push
dec
call
bnd
push
or
test
jle
mov
daa
ljmp
push
mov
xor
sbb
mov
mov
push
mov
inc
daa
fcoml
mov
cwtl
fs
mov
bswap
mov
mov
test
dec
xchg
and
lahf
dec
inc
data16
enter
scas
test
push
or
adcb
andb
repnz
pop
mov
mov
lahf
repz
mov
dec
rcrl
nop
lcall
fiaddl
gs
push
std
inc
adc
jbe
mov
jmp
test
push
or
sbb
icebp
pop
and
ja
dec
cmc
into
gs
lock
mov
mov
pop
inc
lcall
cmpsb
arpl
fildll
jge
fisubrs
ret
sbb
push
fisubl
adc
jns
jb
ja
popf
mov
add
cmp
loop
stos
filds
ds
mov
add
into
orb
cmc
scas
inc
loope
mov
nop
xchg
xchg
pushf
imul
push
and
imul
xchg
imul
dec
mov
ror
aas
shlb
ljmp
negl
cmp
cmp
cmp
pop
ja
mov
pop
and
xsha256
cmpsb
adc
mov
mov
test
popa
xchg
pop
repnz
dec
insb
jecxz
stc
add
repz
dec
xor
pop
add
and
or
cmp
enter
jecxz
xchg
lcall
repnz
ja
out
xor
mov
ficomps
push
dec
sub
notl
xor
faddp
lcall
jne
in
fwait
cmpsl
add
jmp
or
jb
xor
mov
cmp
dec
pop
in
in
aaa
mov
insb
pop
add
lds
jl
lea
aaa
sbb
xor
imul
out
fidivl
insb
fcomps
xchg
int
movsl
repnz
sub
cmp
xchg
mov
popf
push
outsl
mov
inc
cmc
sbb
inc
push
out
xchg
mov
mov
xor
mov
mov
xchg
push
testl
lret
in
xchg
mov
fdivrl
std
dec
cwtl
cmpsl
xor
dec
jo
ror
xlat
push
jno
fbstp
cmp
testb
fsubs
dec
sub
cmp
mov
mov
adc
sahf
mov
mov
data16
imul
ja
mov
adc
dec
test
inc
fdivl
dec
cmpsl
mov
push
pop
xchg
and
mov
in
in
cmpsl
daa
and
nop
mov
jns
aaa
imul
dec
cltd
insl
xorl
cmp
in
div
jge
stos
add
stos
lock
jo
imul
mov
enter
dec
mov
and
xchg
xchg
sbb
adc
addr16
push
lea
jne
shlb
xchg
jb
loop
repz
lahf
push
xlat
xchg
push
push
imul
add
xchg
ret
mov
pop
popa
aas
xchg
sarl
mov
sub
jle
shr
bound
and
add
jmp
cld
iret
test
imul
sbb
add
mov
dec
xchg
add
lods
rorb
mov
pop
xor
and
mov
cmpsb
fwait
mov
add
xchg
pop
mov
daa
cs
fwait
test
insb
and
leave
inc
mov
pusha
push
lea
lock
repz
lock
mov
mov
sub
and
movsl
stos
pop
icebp
popf
les
scas
jl
std
int
xchg
xchg
test
insl
movsl
das
sbbb
cwtl
test
mov
mov
jge
hlt
lahf
or
cs
cmp
adc
gs
sbbb
test
adc
mov
lock
jp
shll
mov
push
jbe
mov
call
and
cltd
add
mov
push
jnp
nop
fildl
jmp
call
xchg
shlb
in
mov
xchg
sbb
jmp
and
add
dec
sub
addl
mov
rorb
shr
sub
mov
cmp
lahf
cmpb
xor
insb
das
push
pop
cmp
out
in
les
dec
or
rorl
mov
dec
fdivrs
mov
icebp
and
mov
pop
mov
mov
ret
jmp
cmp
jl
mov
fldcw
lods
jbe
fstp
xchg
std
push
pop
xor
xchg
jl
sbb
jecxz
sub
lods
mov
cmp
lcall
jl
pop
pushf
jns
mov
mov
lcall
bnd
cwtl
pusha
int
or
adcl
dec
ret
or
cmp
dec
push
in
ret
dec
jbe
sub
sbbb
pop
mov
loope
enter
lcall
cmpsb
jecxz
add
popa
mov
cmpl
sub
push
pop
in
je
xchg
mov
and
xor
mov
in
mov
lahf
enter
jle
adc
sbb
mov
pusha
fstpl
sarl
or
addb
rorb
push
gs
sbb
and
jge
adc
inc
and
pop
push
dec
mov
cmp
push
out
sbb
pop
das
dec
adc
lret
fs
and
mov
and
mov
jecxz
fs
pop
xor
xor
sub
push
add
xchg
sahf
xor
pop
in
fisubrs
xchg
or
gs
mov
xor
pop
adc
mov
push
aaa
and
push
cmpsl
dec
fnsave
add
jno
je
mulb
stos
mov
sbbl
add
stos
rcrb
mov
js
fldenv
sbb
shrl
addr16
and
push
sbb
pop
fucomp
fs
into
lcall
je
pop
xchg
and
mov
in
inc
jp
cmc
mov
cmpsl
test
subl
jnp
sub
cltd
inc
scas
ja
add
push
inc
in
jbe
movsl
lahf
jmp
add
inc
shrl
nop
das
test
push
ret
add
or
mov
adc
je
mov
add
jge
mov
lock
cmp
inc
sbb
or
lahf
or
stos
lds
pop
cmp
jp
pop
scas
mov
loopne
test
pop
leave
pop
test
call
add
pop
out
jge
adc
jnp
ljmp
ja
xchg
das
cmp
int3
cmpl
jo
notl
lahf
mov
inc
pop
dec
sahf
xor
loopne
sub
cmpsb
xchg
inc
cld
mov
mov
in
add
nop
stos
pop
xchg
xchg
pop
adc
lret
and
data16
outsl
push
or
lea
mov
stos
sub
cmp
sub
pushf
sbb
or
adc
and
sbb
dec
add
push
adc
lcall
nop
repnz
jae
lds
and
test
aas
xchg
in
stc
cmp
or
test
mov
xchg
dec
xlat
pop
cmpsl
out
cmp
and
and
adc
cmp
sbb
xchg
fadd
and
jae
jge
cmp
lods
fwait
addl
sbb
out
ss
and
cli
inc
push
sub
fdivl
adc
cli
inc
mov
pop
mov
jnp
fcmovne
dec
daa
mov
test
insl
mov
aas
xchg
leave
hlt
sbb
jne
push
aam
icebp
jg
out
dec
jecxz
out
addr16
test
mov
addr16
lret
mov
testl
jns
lds
dec
pop
das
mov
icebp
dec
xchg
ds
cltd
mov
loop
test
cltd
add
popf
pop
icebp
or
push
xchg
enter
adc
repz
lret
xlat
gs
sub
fldl
clc
dec
pop
lds
push
mov
dec
inc
inc
loope
out
inc
dec
pop
jmp
lock
sub
xchg
in
dec
sub
push
ss
cmp
test
bound
jmp
pop
ljmp
jb
cmp
jnp
cs
popf
fwait
or
push
cmp
cwtl
lds
pop
xchg
sub
or
cs
pusha
cmp
xchg
xor
pop
cmp
dec
pop
scas
xchg
iret
cmp
stos
in
inc
mov
call
inc
mov
jge
fnstenvs
jae
aad
xlat
mov
cmpsb
sbb
mov
lods
inc
adc
subb
lret
and
adc
adc
pusha
xorb
cltd
addl
and
inc
xlat
pop
out
add
lahf
jns
cld
mov
into
in
fsubl
push
inc
cmp
ljmp
push
cmp
push
popa
adc
push
test
mov
rclb
data16
leave
mov
sub
mov
cld
inc
mov
sbb
dec
mov
add
sub
pop
je
dec
nop
daa
mov
sahf
mov
es
adc
leave
imul
mov
mov
adc
mov
xchg
shlb
testl
mov
mov
xchg
ret
cmp
mov
and
cmpsb
test
cmc
fwait
cmp
int3
push
stos
fadds
and
enter
sahf
divb
roll
or
fnstcw
sti
jl
std
mov
cwtl
push
popa
lods
inc
xchg
jae
dec
add
fnsave
popf
das
or
adc
pushf
inc
xchg
mov
sbb
pop
inc
subb
in
fldcw
fisubrs
mov
cld
adc
pop
test
bswap
push
lods
ss
out
mov
adc
mov
rol
arpl
ret
arpl
jae
xlat
sub
shr
pop
pop
stos
mov
mov
jp
rcl
rcl
mov
or
push
es
add
daa
xor
sbb
shrb
mov
ljmp
jmp
dec
iret
inc
adc
mov
outsb
adc
leave
pusha
jns
cltd
je
adc
inc
insl
sti
jns
push
jmp
lret
add
mov
mov
mov
mov
cli
pop
add
ret
clc
cli
call
jns
pop
xchg
imul
aam
mov
arpl
jae
shl
xchg
gs
cmp
jg
pop
jo
dec
pop
adc
sub
xchg
scas
dec
add
pop
add
aad
xchg
xor
push
repz
and
mov
sub
jo
insl
out
imul
pop
clc
push
push
in
rcrb
xchg
sub
lret
sahf
xor
decb
in
mov
sub
in
push
pop
int3
ror
mov
movb
jbe
subl
rcl
imul
inc
mov
imul
pop
pop
outsb
nop
fcom
ret
mov
mov
push
mov
jmp
mov
les
push
stos
frstpm(287
lods
jno
lods
leave
xlat
lods
aam
mov
xchg
daa
cmp
dec
test
mov
xchg
std
xchg
es
xor
xor
or
pop
leave
cmpsb
ret
pop
mov
jnp
sbb
lahf
ret
in
push
fisttpl
ret
shl
outsb
sbb
adc
inc
lds
outsb
cltd
lahf
pop
data16
arpl
int
ss
sub
pop
cmc
int
mov
pop
jb
and
adc
aad
fbld
jnp
out
add
inc
icebp
dec
ja
dec
shll
clc
enter
mov
es
jnp
xchg
inc
xchg
ss
or
das
mov
xor
adc
mov
xchg
xor
fisttpll
scas
mov
js
or
std
mov
mov
adc
or
push
push
call
fisubs
cmpsb
lret
arpl
sbb
addr16
mov
sahf
push
stos
or
decb
inc
adc
in
adc
sub
mov
xor
mov
push
stc
jl
out
bound
jecxz
add
mov
sub
pusha
fwait
icebp
enter
push
in
lds
xchg
xlat
push
rcr
xchg
lods
jle
push
mov
test
cmp
push
cmpsb
pop
js
cmpsl
mov
push
xchg
push
jg
inc
sahf
sbb
iret
jmp
mov
inc
push
sti
or
xchg
lahf
mov
rdseed
divb
popa
mov
mov
xor
leave
cmp
shlw
xor
mov
subb
arpl
push
sbb
jl
test
rorl
push
insl
mov
xor
orb
pop
popf
rol
push
outsb
jo
and
mov
mov
and
scas
leave
add
outsb
dec
and
mov
cld
scas
mov
loopne
sub
fwait
inc
insb
mov
daa
xchg
inc
adc
daa
push
sbb
shrb
adc
sti
int
add
call
icebp
dec
and
mov
or
in
sbb
sbb
and
inc
outsb
aaa
dec
ret
fidivrs
in
imull
dec
mov
push
das
aas
aad
imul
adc
cld
mov
mov
cmc
jmp
sbb
fists
stos
jmp
push
fldt
mov
test
push
in
aad
push
test
xor
stos
mov
xchg
int
push
jno
ja
sbb
mov
mov
push
xlat
push
sub
dec
jnp
dec
stc
cmpsl
xchg
movsb
cmp
lds
xorb
lret
xchg
jp
dec
or
jl
fwait
or
lcall
and
push
addl
sbb
sbb
sub
js
scas
pushl
cmpsb
test
xor
mov
push
loope
sahf
mov
sub
and
lds
xor
xchg
mov
in
mov
lods
sti
shll
enter
add
popf
je
push
leave
aad
loop
std
cmp
cmp
out
dec
mov
sar
outsb
loope
dec
cli
jnp
cmp
mov
ffree
fdivrl
rcrl
jns
or
mov
int3
insl
or
jne
pop
mov
pusha
into
cs
mov
jae
rclb
int
add
inc
push
movsl
out
xor
xchg
cmp
fidivrs
clc
imul
sahf
es
aam
inc
pop
in
addb
stos
sub
fildll
ja
xor
aad
adcb
out
ja
adc
jns
push
dec
and
cli
jne
inc
pusha
mov
xchg
arpl
jge
lret
jmp
xor
pop
nop
lods
loopne
mov
add
xor
int3
push
sub
lock
mov
sub
mov
cmp
pop
dec
fwait
ret
pop
pop
in
lcall
jnp
js
mov
add
xchg
jnp
dec
insb
mov
sub
mov
pop
sub
cltd
in
jecxz
test
xchg
jge
mov
enter
adc
aam
leave
push
pop
jb
mov
andb
shll
inc
inc
lret
mov
pop
dec
jbe
cmp
push
pop
shlb
scas
sub
add
rcrl
insl
mov
data16
push
clc
or
das
cmpsl
test
fwait
lds
lahf
cmp
mov
dec
lret
cli
pop
sarl
pop
dec
xor
inc
repnz
and
dec
fildl
sbb
adc
add
stc
lret
inc
fldenv
dec
pusha
idivl
inc
fs
xor
dec
nop
mov
mov
fstl
or
inc
arpl
into
fs
or
xchg
inc
pop
pusha
xchg
test
jbe
jo
scas
pop
loopne
sbb
je
in
mov
xchg
push
repz
mov
mov
cmc
mov
in
xchg
push
test
pop
and
pop
inc
push
pushf
stos
mov
clc
push
lods
cmpsb
mov
inc
pop
and
iret
xor
pop
sub
nop
push
out
add
xchg
and
push
mov
pop
movsb
js
cmp
int
dec
dec
in
mov
cli
inc
out
add
adc
mov
adc
xor
adcl
aam
dec
inc
adcb
and
cwtl
jl
mov
enter
cmp
addr16
fdivl
mov
les
stos
aaa
scas
ret
je
stc
dec
out
add
orb
sub
test
movsl
push
and
lea
jno
pop
scas
mov
mov
fisttpll
adc
enter
pop
pop
or
mov
xlat
inc
fmuls
notb
loop
fidivl
add
movsl
mov
and
test
dec
daa
jle
cltd
les
cwtl
int3
stos
mov
insb
ja
pop
int
test
cmp
in
into
out
and
lds
xchg
pop
shll
dec
ficoml
mov
cmp
mov
in
fcompl
add
pop
pop
call
repz
mov
movsb
icebp
ror
adc
ss
mov
cltd
je
jo
adc
xlat
cmp
jne
insl
movsl
cmp
sbb
cltd
mov
mov
jb
mov
sti
ljmp
xchg
xchg
subl
sti
mov
sub
cmpsw
out
fstps
lds
xor
cmp
push
sub
and
pop
inc
pop
xchg
pop
xchg
add
push
and
mov
clc
popl
jg
mov
and
xor
cltd
jo
mov
mov
das
ss
or
push
pop
pop
imul
sbb
cli
jg
xchg
push
sbb
sahf
cmp
mov
add
inc
leave
pop
cmp
stc
into
stc
lcall
push
movsl
jecxz
cli
pushf
popa
add
push
sub
push
pop
out
aas
test
inc
lret
dec
fldt
lds
fucom
mov
push
cltd
sarb
ljmp
ljmp
and
mov
insb
xchg
mov
stc
ds
stos
add
inc
enter
mov
fldenv
in
inc
lock
bound
loop
push
jbe
or
ds
in
cmp
subl
das
es
sub
mov
mov
decb
mov
push
sbb
cmpsl
nop
loopne
lret
sub
cmpsl
call
push
loopne
aad
mov
mov
ret
xlat
ret
mov
mov
or
stc
mov
repz
or
test
sub
jne
addr16
rorb
dec
and
mov
jne
cs
rolb
pop
push
int3
and
pop
dec
lcall
inc
inc
or
dec
mov
inc
out
push
jmp
xchg
into
pop
fldcw
gs
pop
fnstcw
adc
and
mov
out
mov
fwait
insb
mov
imul
not
insb
fbld
aam
arpl
loopne
xchg
divb
mov
repz
or
inc
les
cmp
cmp
rorl
inc
comiss
imul
imul
cmpsl
in
jg
test
inc
ficompl
add
stc
jno
ds
scas
dec
ljmp
div
aad
xchg
dec
pop
lds
mov
add
sbb
inc
gs
iret
jp
out
sub
repnz
sub
rorl
mov
std
aam
cwtl
xor
inc
mov
or
jnp
sbb
popf
out
cmpsb
adc
inc
adc
into
inc
and
mov
pop
and
addb
repnz
adc
xchg
fsubl
adc
lods
jne
lea
xor
add
cmc
or
push
jmp
mov
repnz
aam
lea
sbb
cmpsl
cmp
adc
data16
lds
xchg
and
mov
out
gs
jmp
pop
xchg
call
cmp
pop
jbe
pop
pop
int3
out
xor
inc
mull
je
dec
fsubr
push
dec
and
jp
sub
mov
je
aad
mov
pusha
sti
les
add
mov
push
je
inc
cmp
cmp
insb
mov
lret
std
into
jg
mov
sahf
and
test
pop
stos
add
mov
xor
mov
lods
xchg
push
stos
out
dec
inc
and
lret
cmp
pop
test
mov
xchg
mov
loopne
push
sbb
ret
popa
movsl
sti
sbb
sbb
sbb
adc
aas
mov
rcrb
xor
hlt
cmp
ds
in
cmp
jnp
add
popa
xchg
dec
pop
incb
es
stc
push
mov
stos
fucomi
insb
jo
push
mov
xchg
cmp
fcmovnbe
mov
js
pop
mov
ror
xchg
shrb
dec
cmp
sbb
jno
fnsave
dec
xor
leave
push
incb
adc
sub
inc
sub
fisttpl
pop
rcrl
xchg
mov
sbb
add
cmp
dec
mov
daa
mov
sub
dec
or
and
add
adc
shll
pop
pop
ret
insl
fsubrs
clc
pushf
in
lock
in
mov
pop
imul
and
roll
idiv
mov
call
mov
int3
fsubs
lcall
jg
push
xchg
jns
insl
add
mov
aaa
shl
push
mov
sub
cmc
cmp
cmp
icebp
jmp
dec
lret
jb
dec
jmp
push
jmp
pushf
jl
or
jg
xchg
cmp
call
lret
cmpsl
add
inc
sahf
clc
and
scas
cmp
pop
jne
lods
xorb
add
adc
jnp
andb
idivb
add
lahf
dec
das
sub
pop
jecxz
fs
or
pop
lds
sbbl
ljmp
out
cld
xchg
imul
repnz
sbb
stos
add
adc
nop
cmp
sahf
jo
mov
pop
push
xor
lods
ss
aaa
xchg
jne
inc
arpl
shlb
dec
addb
and
or
xor
xor
push
sub
pop
jp
mov
cltd
sub
inc
push
out
push
adc
push
mov
fstp
or
leave
shr
sub
mov
fld
mov
push
loopne
xlat
inc
lds
pop
mov
fwait
jne
pop
mov
aam
mov
sar
mov
pop
addr16
jle
inc
cwtl
jp
and
dec
in
mov
lods
out
sub
shll
pop
rcrl
sti
fbld
es
jge
xor
jbe
pop
in
or
dec
push
xchg
popf
sub
imul
in
xchg
rcll
test
add
mov
sub
mov
mov
iret
fisttpl
mov
not
dec
es
jecxz
mov
mov
push
jge
mov
pop
ficomps
jge
and
loope
fnstsw
out
scas
and
dec
arpl
push
and
lods
sti
inc
ds
dec
jae
cmp
loopne
mov
mov
xor
aas
popf
mov
imul
das
lock
jb
xchg
mov
jmp
into
xchg
pushf
fcoms
push
lea
xchg
cli
sti
inc
loopne
cwtl
dec
scas
mov
aaa
into
sub
lahf
push
inc
lds
pop
mov
leave
data16
jle
pusha
lods
push
mov
dec
ror
sub
pushl
leave
pusha
sarl
lods
mov
out
enter
ss
or
add
sub
push
or
adc
push
inc
js
js
lock
stos
aad
xor
andb
xchg
fsubr
mov
fnsave
push
fwait
iret
pop
int
jmp
inc
mov
dec
out
pop
movsl
or
dec
rep
aas
loope
xchg
nop
cmp
call
inc
xlat
mov
jns
fwait
adc
jbe
adc
push
into
stc
dec
mov
ret
out
inc
or
or
dec
jne
push
cmpsl
xor
push
repz
cmp
jecxz
pushf
adc
jmp
stos
xor
or
gs
arpl
stos
sbb
push
jns
leave
out
inc
jnp
xlat
push
mov
insl
jle
sub
add
out
dec
enter
lods
xchg
mov
addr16
arpl
sub
mov
add
cld
or
or
je
daa
cmp
xchg
cmp
adc
int
call
cltd
pop
repnz
or
lods
adc
jp
cmpxchg
filds
outsl
xchg
add
in
in
test
sahf
adc
mov
imul
sub
inc
mov
aad
pop
loop
idiv
or
xor
mov
inc
int3
sub
add
adc
and
push
stos
inc
inc
dec
into
frstor
test
sub
aad
and
ds
xchg
pop
cs
pop
fwait
mov
push
int3
shlb
xor
ficompl
xchg
stc
mov
mov
add
imul
sub
fsubp
dec
inc
adc
cmp
mov
dec
mov
imulb
ror
icebp
sbb
ficoml
add
adc
mov
sahf
lea
cmpsl
push
and
mov
lret
rcll
xlat
add
mov
test
cld
inc
add
cmp
shlb
fwait
call
fists
pop
cltd
inc
cld
repz
adc
ss
mov
mov
out
sbb
inc
mov
rorb
outsb
fwait
js
xchg
or
and
sbb
ds
dec
cs
ljmp
cmpl
ja
mov
pusha
sbb
or
xor
ret
jl
sub
pop
aam
mov
jae
push
fiadds
ret
in
mov
xchg
jae
push
push
mov
fists
mov
cmp
lods
fcmovnu
cli
push
in
sub
rcrb
pop
popf
xor
push
addr16
xchg
imul
adc
out
and
or
jns
fwait
xor
push
push
mov
stos
push
jecxz
jne,pt
mov
lds
lods
sub
fstl
shrl
add
dec
or
stos
push
add
shll
sub
mov
rclb
sub
pop
mov
dec
gs
add
mov
push
inc
dec
cmp
jp
lds
jg
pop
adcb
mov
loopne
out
or
iret
mov
ret
shrl
int3
pusha
cmpsb
mov
mov
pop
add
sub
inc
pop
xchg
es
inc
stos
push
aas
fdivrl
mov
fildl
movsl
mov
mov
test
mov
ljmp
adc
cs
cs
cmp
decl
mov
scas
cmc
and
jl
sub
popf
xsha1
cmpsb
int
cwtl
push
mov
push
or
fidivs
inc
fmul
mov
ret
shll
stc
xchg
xchg
sub
dec
in
pusha
dec
aam
adc
rcrb
jp
cli
cltd
mov
dec
cmp
push
cwtl
das
dec
xchg
adc
xchg
shrb
jmp
lea
xchg
add
movsb
xlat
sbb
stos
jle
push
insb
repnz
notl
rep
mov
ss
mov
pop
fstps
and
cld
lcall
in
in
ficoml
iret
ror
jmp
add
cmpb
xlat
stos
pop
cld
xchg
dec
data16
and
daa
jb
jp
and
lea
aas
mov
insb
pop
dec
pop
mov
push
cld
xchg
xchg
mov
jecxz
lret
push
add
xchg
ja
xchg
das
mov
dec
dec
je
icebp
movsl
xchg
push
xchg
inc
aas
loope
stos
jmp
dec
loopne
shll
std
pop
ljmp
push
xchg
mov
sub
out
sbb
into
or
jle
pop
mov
insb
sub
pop
pop
icebp
leave
inc
pop
ret
js
sub
pop
mov
or
shlb
dec
push
mov
pop
push
int
xorb
scas
mov
ja
jno
rcrl
dec
clc
inc
jl
test
and
lcall
divl
cmp
imul
dec
cmpsl
push
ljmp
jno
cmpsb
adc
and
test
out
cld
andl
in
push
sub
or
push
pop
push
stos
mov
sbb
or
jne
je
mov
out
arpl
pushf
and
mov
xor
loope
mov
sbb
mov
or
ret
or
jecxz
aaa
in
mov
xchg
imul
sbb
sbb
mov
adcl
in
stc
pop
clc
cmp
insl
out
imul
in
ljmp
mov
aam
ljmp
jl
or
sti
cmc
inc
pop
inc
push
sub
dec
pop
inc
or
mov
push
and
mov
jno
push
xchg
and
subb
data16
outsl
hlt
imul
adc
negb
push
lcall
jge
dec
out
mov
xor
orl
addl
mov
jns
sbb
add
mov
mov
rcr
repz
and
ret
fbld
mov
negl
xor
into
test
in
out
lea
sbb
sub
mov
add
aaa
ficompl
dec
and
cld
mov
xor
pop
out
push
mov
sbb
movsl
cmp
pop
bound
mov
fs
clc
push
cmp
or
and
cld
in
mov
inc
and
add
lcall
mov
adc
das
pop
inc
mov
and
mov
aam
and
lods
in
push
call
lcall
adc
sarb
mov
pop
dec
out
sub
sub
dec
scas
jg
pop
enter
jo
lds
pop
sub
in
jg
sbb
pop
and
xor
inc
inc
push
dec
movsl
fdivl
call
mov
pop
xchg
fistpl
mov
ljmp
cmpsb
lea
and
ret
xchg
lret
sbb
inc
mov
xlat
fisubrs
imul
mov
cmpb
hlt
arpl
cmp
pop
or
test
xor
lds
rcrb
xor
xlat
outsb
add
ja
adc
push
add
outsl
mov
in
jne
arpl
mov
stos
repnz
cli
xchg
hlt
xchg
das
xor
aad
je
pusha
cltd
sub
inc
sti
popf
stc
inc
mov
sub
adc
xlat
ret
mov
leave
jmp
xchg
or
stos
cld
sbb
popf
cmp
and
int3
cld
subl
push
dec
gs
pop
jae
hlt
xchg
mov
or
pop
sahf
and
ret
add
stos
pop
and
or
adc
repz
and
inc
mov
js
push
fnsave
aad
loope
test
ret
xor
addb
sbb
lods
push
cmp
in
das
pusha
mov
push
ljmp
jb
mov
inc
popf
or
mov
xchg
and
lahf
push
ror
push
push
cmp
sahf
or
jno
ret
outsb
ja
je
inc
sbb
and
xor
in
or
adc
insb
cmp
pop
in
sub
inc
mov
mov
lret
aaa
addb
add
xchg
push
and
out
loopne
andb
outsl
daa
cltd
mov
or
jp
insl
jnp
dec
loopne
or
xchg
push
jecxz
mov
adc
and
mov
xchg
sub
cmpsb
mov
dec
call
fcmovbe
pop
fs
mov
xchg
xchg
dec
mov
fdivl
test
add
jecxz
add
sbb
mov
loope
ds
sahf
adc
inc
pop
fistl
out
test
aas
loope
dec
jne
popl
mov
int3
push
push
add
inc
aas
ret
ss
adc
cmpsb
push
jmp
outsl
add
jnp
cmpsl
mov
inc
mov
test
neg
xchg
imul
subb
xor
xchg
push
les
xor
les
jae
adc
stos
lcall
lret
adc
push
jmp
dec
xorl
out
add
add
call
xchg
inc
stos
fucomi
andb
lock
lahf
fwait
sbb
out
js
js
mul
xchg
test
sbb
popa
mov
mov
pop
out
adc
addl
cmpsl
call
mov
repnz
out
or
xchg
clc
cmp
sbb
fwait
dec
adc
dec
mov
mov
mov
dec
repz
mov
out
out
xor
cmpsb
loope
xchg
sbb
xor
lods
xchg
movsl
loopne
es
dec
pop
loop
pusha
ljmp
mov
add
insl
mov
popa
pop
xchg
addl
add
mov
xchg
add
repnz
or
sub
jmp
sub
inc
stos
pop
mov
push
fldenv
ss
out
fiaddl
movsb
addr16
xchg
repnz
std
mov
jp
xchg
in
pop
dec
lea
mov
bound
push
fmull
or
mov
addr16
pop
mov
sbb
and
mov
push
fwait
mov
inc
fs
test
lcall
daa
sub
mov
cmp
insb
jl
sub
cmpb
sbb
mov
aam
add
dec
or
xchg
daa
les
mov
nop
push
xchg
or
sbb
rcr
xlat
sbb
sub
repz
popa
mov
jne
mov
orb
jns
pop
sbb
int
add
iret
loopne
inc
cmp
pop
push
add
jp
fldcw
cli
or
mov
mov
push
ljmp
dec
pop
or
je
fidivrl
loope
fnstsw
jnp
scas
push
jo
mov
xor
rorl
sbb
mov
in
cmp
xor
xchg
fwait
or
lods
dec
daa
mov
mov
fisubrl
das
adc
pop
lock
movsb
pusha
push
idivb
xchg
jo
cmp
push
mov
movsl
mov
es
pop
je
loopne
lods
aaa
mov
jp
fidivl
push
lods
ficompl
xchg
das
add
cmp
fsubl
or
cmp
mov
xor
gs
mov
pop
ja
icebp
rcrb
pushf
mov
in
push
inc
push
inc
or
mov
sarl
js
test
adc
sbbl
movsl
push
mov
dec
jg
add
dec
xor
mov
sbb
loop
sbb
loop
sbb
adc
sbb
popa
mov
shlb
divl
subl
ret
xchg
out
xchg
sub
lods
or
std
jo
call
jmp
fildl
lahf
je
xchg
cmp
mul
mov
cmp
dec
mov
imul
mov
dec
jmp
adc
aam
sub
je
outsb
jl
jb
xchg
dec
push
inc
cmp
andl
mov
sbb
movsl
inc
add
int3
loop
pushf
xor
or
mov
in
mov
jbe
or
js
adc
push
sub
push
jb
xor
jp
sub
mov
inc
pop
lret
cld
popl
sub
repz
add
mov
xor
jle
shrb
jnp
and
ret
mov
popf
adcb
daa
data16
adc
call
test
mov
push
or
pop
mov
fisubl
test
icebp
lcall
push
aaa
je
aaa
cmpsb
pop
mov
inc
dec
jae
push
or
fnsave
mov
cli
adc
das
mov
push
push
add
lods
mov
in
mov
bound
mov
mov
insb
jns
cwtl
ret
dec
mov
add
sbb
inc
je
xor
lods
cld
outsl
dec
idivb
push
pop
ja
ret
hlt
or
xchg
test
int
push
sbbl
push
imull
xchg
addr16
jg
nop
dec
stos
lds
inc
inc
lahf
ss
mov
xchg
or
mov
and
inc
sub
inc
outsb
add
lret
rorb
inc
cmp
jl
push
popa
sbb
push
lahf
or
and
mov
lcall
add
popf
jbe
dec
add
sbb
or
and
imul
add
sub
and
inc
stos
clc
push
iret
mov
pusha
cmpsb
or
jo
mov
mov
adc
out
popa
add
ret
jbe
pop
add
roll
cmp
pop
mov
push
add
loop
dec
ja
popa
pop
cmp
add
xor
jne
add
test
repz
subb
out
daa
rcll
mov
add
rorb
int
xlat
mov
push
add
or
mov
adc
add
push
push
mov
popf
fwait
xor
xchg
test
ja
shlb
sbb
fsts
test
mov
loopne
dec
test
lahf
outsl
mov
test
test
js
or
in
mov
out
rolb
push
push
add
adc
mov
les
dec
dec
sahf
lret
pop
in
dec
push
out
addr16
loope
push
adc
shrb
shll
icebp
add
test
fimull
push
int
xor
icebp
xchg
cmpb
add
push
sbb
loope
jne
add
inc
repz
out
cmpsl
imul
cmp
push
pop
stos
push
bnd
mov
push
leave
push
lods
add
mov
dec
pop
mov
mov
sbb
jns
shll
cmpsl
mov
dec
out
cmc
add
pop
xchg
fmull
sbb
dec
add
push
xchg
dec
push
iret
or
jne
in
mov
jnp
das
pop
xchg
scas
xchg
push
add
sbbb
pop
xchg
dec
aam
in
mov
cmp
int3
fldcw
movsb
insl
mov
insl
divl
add
jl
jns
in
cli
les
mov
aad
mov
mov
pop
xor
xchg
add
aas
aaa
jge
mov
push
jge
call
insb
sahf
pop
scas
inc
cmpsl
sub
mov
mov
inc
fstpt
lea
adc
add
testb
xchg
sub
movsl
lea
add
lock
dec
mov
stos
mov
movsb
cltd
push
icebp
add
cmc
xchg
stos
xor
fcomi
addr16
loop
insb
fbld
jp
push
jp
inc
cmp
jnp
jecxz
repnz
call
pusha
pop
mov
pop
daa
cmp
outsl
dec
idivb
add
js
mov
pop
dec
fs
cmc
and
sub
flds
mov
pop
adc
jae
mov
stos
adc
cmp
ss
je
stos
inc
inc
cltd
dec
xor
int
inc
push
xor
jmp
mov
jns
gs
ret
sarl
push
mov
push
mov
and
xor
leave
ja
js
aas
push
leave
popa
sahf
and
push
dec
adc
mov
push
sub
jl
sub
add
loope
xor
sti
inc
out
bound
cmpb
or
and
inc
out
lods
out
pop
int3
jmp
test
lret
cltd
call
leave
adc
movsl
int
and
and
jle
aaa
notb
or
dec
dec
rclb
sub
outsl
and
sub
jns
adc
ret
xchg
mov
adc
ljmp
mov
lods
mov
cwtl
outsb
fldl
call
xor
xchg
mov
nop
pop
outsb
push
frstor
inc
pop
cmp
push
into
dec
fs
out
mov
fdivs
enter
push
fcoml
pop
hlt
pop
and
pusha
mov
adc
push
jg
gs
lcall
xchg
pop
movsb
mov
inc
insb
pop
mov
add
mov
fs
mov
push
call
jl
mov
or
mov
inc
xor
xor
lods
inc
pop
repnz
daa
jmp
or
stc
mov
loop
mov
nop
movb
cli
push
mov
scas
adc
sbb
or
repz
outsb
jnp
imul
cmp
cmpsl
xor
xchg
mov
push
in
repz
xchg
loope
xor
rol
and
jmp
and
cld
lea
enter
inc
lods
inc
negl
jmp
cmp
dec
loope
je
mov
aam
push
xlat
pop
adc
add
xchg
or
add
dec
fdivr
push
insb
push
xchg
pop
lahf
icebp
mov
sbb
sub
mov
addr16
sbb
jno
adc
shlb
xchg
inc
loopne
aam
outsb
fyl2x
pop
movsl
daa
out
cmpb
mov
lahf
pop
js
and
dec
xchg
rorb
pop
xor
stos
sar
aas
sbb
gs
mov
mov
mov
iret
mov
adc
mov
sti
enter
and
pop
stc
lret
xchg
pop
push
cmp
popf
movsl
cli
or
in
sub
fistl
xchg
jo
push
lss
fsubrl
or
jge
mov
add
mov
inc
aad
mov
mov
sbb
xor
xchg
std
rolb
lock
jg
adcb
dec
enter
lret
jmp
pop
add
push
stos
xchg
adc
cmp
ljmp
lea
int
stos
aas
adc
xchg
mov
cltd
mov
sbb
mov
imulb
jecxz
out
mov
cmp
xor
or
adc
shrb
cmc
mov
scas
je
push
cmpsb
push
inc
in
push
aam
orb
adc
daa
push
push
pop
xor
ret
ss
dec
inc
movsl
cmp
push
or
les
pusha
xor
xor
int
ja
push
push
mov
lcall
fistpl
or
fwait
xor
lcall
dec
and
push
adc
rcr
push
stos
pop
aaa
das
inc
mov
cmp
cld
push
insb
test
aad
dec
in
dec
sbb
nop
sub
add
ja
adc
inc
jbe
stos
ffree
outsl
mov
insb
pop
fstpl
mov
push
stos
sub
subl
inc
pushf
pop
mov
in
pop
cmp
cmp
sbb
and
mov
pop
addr16
mov
movsb
out
sahf
or
sbb
inc
cld
and
imull
repz
xor
xor
sub
or
or
dec
popf
xchg
sbb
test
or
xor
or
mov
cmpsl
aad
push
loopne
aam
inc
mov
mov
test
inc
imul
dec
fucomi
ror
or
iret
test
test
mov
insl
jecxz
jo
and
cmp
or
dec
out
mov
jo
pop
sub
repz
pop
outsb
jl
movsb
ds
sub
adc
pop
and
stos
test
scas
sub
or
jns
stos
jl
xchg
aad
pop
int
adc
xor
leave
dec
or
jmp
outsb
push
inc
nop
cmp
in
or
jno
ljmp
and
or
dec
movsl
jb
ja
push
mov
pop
mov
ds
and
pop
xor
inc
jge
xchg
les
mov
sbb
xlat
inc
repz
fimuls
sbb
xchg
adc
clc
or
sarl
pop
jmp
jp
inc
fs
pop
adc
das
mov
fists
adc
lock
pop
into
gs
add
cmpsb
stos
addr16
jp
cld
stos
rol
in
jne
jg
add
les
lock
testb
clc
int
cmp
xchg
cmpsb
cmp
pop
addb
stos
adc
add
fcomps
andb
andb
and
testb
hlt
sbb
popf
stc
cmp
pushf
or
xchg
lcall
jmp
cltd
ror
scas
push
cmpsl
adc
lahf
imull
divb
jle
and
ret
out
xchg
jmp
cmp
add
jo
or
ss
out
push
or
in
push
es
inc
fs
xchg
jmp
adc
and
and
sti
jg
test
in
add
out
inc
enter
mov
in
mov
cmp
aam
or
fsubs
test
pop
lods
out
xor
subb
mov
inc
mov
andb
jae
icebp
cmp
out
cmp
movsl
sub
rorb
test
mov
pop
lahf
aas
adc
fnstsw
mov
leave
mov
sub
and
xchg
mov
add
lcall
xchg
movsb
xchg
push
pop
sahf
push
add
inc
add
add
add
mov
sbb
push
ja
cltd
mov
and
cmp
hlt
cmp
jecxz
mov
mov
jae
sbb
xchg
jmp
jno
xchg
sub
inc
loop
out
xchg
lret
stos
inc
std
mov
stc
hlt
xchg
fwait
xor
fwait
xor
mov
adc
inc
adc
cwtl
pop
xor
das
xchg
imul
xchg
insb
mov
jg
movsb
push
pop
or
push
fdivl
push
xor
aad
or
push
movsl
loope
mov
or
ljmp
push
clc
adcl
movsb
cmpsb
aas
jb
pop
jp
aas
lods
cmp
jle
stos
ja
repnz
push
xchg
loope
push
xchg
aas
jbe
repnz
add
jp
sarb
pop
movsb
mov
mov
jl,pt
jle
insb
aas
push
jns
addr16
stc
sbb
sub
je
pop
mov
cltd
call
push
out
ret
je
dec
pop
mov
pop
cmp
scas
roll
mov
out
into
fldenv
mov
pop
or
xor
xchg
mov
or
adc
sti
fists
mov
jge
movsl
icebp
ss
out
jecxz
into
rorl
mulb
lock
sbb
stos
scas
mov
bound
push
rorb
lods
mov
inc
cmpsl
lret
cmp
int3
or
jne
shrb
or
mov
jae
lahf
add
cmp
dec
add
dec
or
cli
mov
dec
fsubl
add
sbb
mov
or
sbb
iret
and
ljmp
dec
sarl
adc
ljmp
sub
pop
mov
mov
movsl
or
mov
jns
inc
sti
push
adc
pusha
ja
jbe
idiv
cltd
sub
sub
das
mov
std
div
mov
shrb
push
mov
push
mov
add
mov
adcl
imul
loope
pop
push
add
pop
test
pop
cmp
jns
or
daa
rolb
cmc
xchg
int
adc
dec
pop
xor
inc
xchg
xchg
in
popa
pop
jbe
cltd
test
jae
shlb
and
fstpt
cmc
xchg
mov
scas
adc
rcrb
mov
scas
inc
xor
push
int
cmp
adc
inc
add
xchg
push
insb
daa
adc
ja
fldl2t
popf
and
popa
push
inc
rorl
sub
in
popf
push
int3
jecxz
mov
push
mov
cld
cli
sbb
ljmp
iret
jbe
divb
dec
push
pop
aaa
adc
test
dec
mov
add
andl
jns
andb
cmp
adc
orl
inc
fdivr
xor
call
pop
pop
popf
mov
sbb
sub
scas
enter
out
jo
inc
jl
mov
imul
mov
jb
sysret
cmp
cmp
pop
fldl2t
pavgb
sbb
ss
stc
cli
imul
or
data16
fwait
and
jmp
pop
psubusb
icebp
mov
mov
mov
lods
cmp
stos
xor
push
push
iret
push
pop
jns
xchg
jo
jns
jmp
xchg
addr16
imul
pop
mov
fwait
lock
inc
aad
imull
xchg
lcall
mov
mov
inc
push
dec
fmul
lock
lds
or
and
loop
mov
or
js
push
mov
loopne
jl
stos
inc
dec
out
dec
add
push
add
dec
hlt
jae
popa
push
add
add
or
aaa
sbb
pushf
mov
mov
sub
jno
test
jae
gs
mov
in
inc
movsl
xchg
adc
mov
adc
mov
mov
lret
movsb
sub
xchg
outsl
sub
aas
jo
cmc
inc
popa
mov
pop
xor
jl
add
adc
and
iret
xchg
push
inc
pop
cmp
mov
outsb
sahf
rcrb
inc
cmc
psubd
xchg
outsb
push
shll
pop
inc
stos
xchg
inc
ficoml
aad
shll
fcmove
out
cmpsl
xchg
sub
and
sbb
cmpsb
mov
push
je
fnstenv
js
add
clc
pusha
cmp
jmp
data16
push
les
lds
push
cmp
rorl
jmp
mov
mov
jb
jge
cmp
test
aas
mov
cmp
jbe
clc
cmpsl
and
or
call
enter
add
jecxz
push
push
adc
dec
mov
out
daa
pusha
jmp
shr
subl
jbe
insb
mov
stos
fadd
jecxz
or
mov
mov
das
xorl
inc
cmp
and
cli
inc
jae
repnz
jae
pushf
cli
adc
mov
iret
push
xchg
adc
xchg
inc
mov
jecxz
adc
push
ret
imul
xchg
pop
add
idivb
and
addr16
nop
lds
adc
out
mov
push
sub
add
xlat
insl
sub
xor
lret
jg
lret
pusha
mov
inc
sbb
mov
cli
mov
fistpl
sbb
mov
loop
push
or
rol
popl
jns
push
xchg
jecxz
subb
sbb
cmp
in
pop
adc
cmp
adc
jno
pusha
je
cwtl
cld
and
sti
mov
xchg
adc
or
mov
scas
fisubrs
ret
hlt
fisubs
insb
push
fwait
lahf
xchg
and
outsl
jns
nop
mov
mov
int
imul
ret
hlt
addr16
mov
insl
hlt
push
pop
push
push
sahf
add
add
mov
xchg
and
lret
sbb
insb
std
inc
fistpl
leave
mov
es
scas
jb
icebp
push
pop
dec
rcr
insb
mov
outsb
add
out
loopne
adc
ds
loopne
inc
cmp
lcall
mov
popa
xor
xchg
mov
fisubrs
ds
jmp
lods
inc
xor
fistps
inc
mov
and
add
in
addr16
adc
inc
loop
cli
pushf
lret
test
mov
adc
pop
mov
xchg
cs
mov
repnz
adc
shrl
mov
dec
or
nop
daa
cmp
mov
fcmovnb
pusha
xchg
sub
jne
lret
hlt
jnp
or
data16
in
test
inc
or
jns
adc
push
lret
jae
ljmp
aas
les
push
dec
add
loop
adc
xchg
push
int
mov
insl
mov
inc
fldenv
dec
or
enter
popa
cli
xchg
xchg
push
or
jae
sbb
mov
shlb
mov
in
leave
and
cmc
fucomip
cld
adc
loope
mov
dec
cltd
imul
xor
loopne
xor
mov
sbb
lods
mov
adc
test
in
inc
inc
out
loopne
push
xor
add
sub
in
push
push
lret
jno
bound
inc
insb
jnp
aaa
and
push
call
mov
outsl
push
sbb
fmuls
fiaddl
fstpt
std
or
xchg
in
outsl
and
inc
popa
ja
leave
sbb
mov
sbb
push
jg
push
sub
cli
adc
pop
clc
nop
dec
icebp
movsl
pop
out
popf
enter
sahf
or
arpl
jp
sbb
aas
cltd
test
xor
lods
or
sub
sub
push
mov
lock
sbb
fnstenv
loope
std
mulb
inc
inc
push
jp
push
inc
les
mov
rclb
int
decb
cmp
xchg
pop
popf
add
cmp
and
ficoml
mov
jge
dec
inc
dec
cld
inc
inc
lds
inc
mov
dec
fistps
lea
jge
and
aad
mov
lret
addr16
sub
push
xor
jg
daa
pop
daa
fidivs
xor
pop
push
out
adc
mov
jns
rcr
mov
outsl
sqrtps
xor
and
out
ds
je
pmulhuw
ficomps
xor
stos
sub
cmp
jnp
mov
popf
ret
imul
sbb
loope
cmpsb
or
clc
push
test
stc
dec
dec
cmp
popf
push
xchg
dec
lret
scas
jno
xchg
shlb
ja
fdivs
jne
hlt
into
inc
clc
or
lock
test
pmaddwd
or
loopne
add
aad
xchg
sub
mov
dec
sbb
sahf
jbe
cmp
jle
lcall
je
mov
ljmp
cmp
xor
add
pop
cmpsl
or
mov
in
repnz
or
mov
negb
cmc
mov
cli
pop
leave
lea
stc
adcb
stos
add
xchg
sbb
rcr
fs
adc
je
repz
mov
dec
adc
test
js
mov
loope
js
nop
shll
jbe
out
xchg
jp
stos
nop
ljmp
mov
lods
jl
mov
xchg
dec
mov
loop
ss
icebp
and
xchg
js
mov
inc
stos
ljmp
mov
icebp
shll
cs
adc
jno
sub
shrb
test
insl
repz
repnz
or
jl
sahf
pop
scas
rclb
mov
loopne
jl
and
xchg
adc
mov
cwtl
jne
jbe
pusha
lcall
dec
sahf
xchg
add
insb
adc
cltd
into
movsb
inc
jno
dec
in
xchg
pop
sub
mov
cwtl
lods
lods
arpl
rcrb
jnp
cmp
jecxz
jp
out
and
addb
das
outsb
cmp
ret
jbe
push
out
sti
pop
push
mov
addr16
push
andb
sub
pop
inc
dec
icebp
fsubl
jl
cmp
jp
mov
pop
mov
add
mov
cs
sahf
cmp
mov
push
mov
sbb
pushf
inc
inc
pusha
jne
fbstp
mov
scas
sub
pop
push
lods
sub
dec
pop
jae
xchg
sbb
ljmp
aam
sbb
ret
dec
sub
dec
in
fnstcw
loopne
int3
lret
fnsave
shll
iret
gs
int3
fstl
insl
in
aad
movsl
sbbl
mov
jmp
test
pop
mov
add
leave
ficompl
xchg
cs
les
lret
imul
imul
pusha
cmc
dec
lahf
mov
es
sbbl
jo
pop
cmc
cmp
push
adc
sbb
mov
mov
sbb
mov
in
in
push
inc
lcall
jmp
xor
push
ds
es
sub
add
test
and
adc
xor
xchg
mov
pop
jae
js
jns
test
jne
inc
pop
xchg
xor
fisubrl
sbb
jb
mov
mov
dec
imul
and
loope
sbbl
add
sahf
clc
repnz
mov
icebp
out
inc
int3
and
xor
int3
js
loopne
adc
add
cmp
inc
sub
pop
movsl
sbb
lea
sub
lcall
pop
mov
movsb
ds
in
and
aad
adc
fisubrs
jg
fnstenv
fidivrs
aam
pop
andb
loope
aad
arpl
dec
mov
jl
out
dec
lds
mov
negl
cli
xchg
pop
pusha
das
test
adc
movsb
mov
sbb
push
cli
test
pop
mov
xchg
pop
cwtl
jge
pop
scas
movsl
pop
jne
add
inc
inc
or
jnp
sub
and
fistpll
fcomip
jb
popa
imul
into
lods
push
outsl
dec
and
fcoml
push
jg
fcmovbe
xor
mov
cmc
and
adc
sahf
sub
out
test
pop
std
pmullw
icebp
xchg
ret
outsb
in
rcl
push
sub
out
jb
dec
mov
rorl
popa
pop
xor
lea
lret
push
inc
cs
or
cmpsb
jl
mov
xor
insl
mov
dec
cs
in
aam
xor
adc
sub
cmp
inc
mov
fsubr
adc
out
cltd
xor
filds
mov
push
test
pushf
sub
adc
xchg
sub
inc
or
add
cmpsl
xchg
sbb
xlat
pushf
pop
and
inc
fsubrl
jo
scas
lcall
insl
mov
mov
flds
fwait
in
mov
inc
and
push
daa
lods
jecxz
sub
repz
cld
scas
sub
mov
jbe
fldl
test
pop
mulb
xor
lahf
ja
mov
sar
subl
pop
jnp
cli
jle
das
shll
push
cli
sti
and
insl
fstpt
mov
cltd
aad
lea
adc
xlat
xchg
enter
fdivl
xchg
cli
sbb
mov
jl
push
out
xchg
stos
inc
sbb
sub
and
mov
inc
push
xchg
xchg
aam
pop
std
lahf
icebp
cmpsb
xor
or
mov
fimuls
lods
xor
out
aas
movsl
mov
cmc
mov
bound
comiss
in
data16
out
rcrb
push
push
jae
pop
jp
shl
jp
mov
sbb
imul
out
xor
and
outsb
hlt
mov
and
jb
lods
xchg
push
sahf
xchg
imul
xchg
sub
outsl
cmc
pop
cmp
push
jl
mov
movsb
loope
add
cli
fucomip
push
mov
ljmp
lds
add
xor
in
cmpsb
test
add
pop
out
inc
ds
dec
leave
nop
mov
fidivrl
in
or
scas
cmpl
rolb
jmp
adc
or
push
jno
stos
mov
sbb
mov
jge
cltd
mov
fwait
stc
jae
push
loope
cmpsb
push
call
idivl
in
or
stc
test
in
mov
imul
adc
inc
jmp
sub
in
xor
iret
mov
xchg
or
cmp
push
stos
add
shrb
jbe
stos
test
test
call
test
and
jne
push
pushf
test
ljmp
orl
pushf
call
sub
xchg
inc
lret
lods
xchg
int3
into
imul
inc
cli
daa
arpl
ja
dec
test
lock
jbe
test
stos
dec
lods
pop
lcall
cwtl
adc
or
inc
xchg
pop
call
rorl
scas
mov
cltd
sbb
in
push
sub
cmp
loop
out
lret
sbb
and
sarl
mov
push
lds
ret
fnstenv
pushf
dec
jecxz
fstps
add
push
icebp
out
aad
aad
xor
jg
jae
popf
repz
jg
xor
xchg
jmp
test
es
cli
dec
les
pop
or
cli
cli
daa
out
adc
mov
out
ljmp
or
sti
loope
add
push
movsl
cmp
shrb
mov
scas
lds
adc
mov
loope
shll
mov
shll
leave
or
or
roll
je
scas
mov
add
imul
mov
fcoml
inc
push
pop
pusha
pop
repnz
es
pop
cmc
lahf
xor
imul
dec
mov
in
nop
loop
pop
sbb
out
js
xchg
mov
add
jg
mov
lds
cli
cld
push
sub
std
outsb
push
cmp
mov
xchg
xor
pusha
testl
add
repnz
in
test
dec
gs
popa
stos
mov
jne
sarb
shrl
lds
xchg
stos
cmpsl
in
aas
adc
mov
ja
cli
cmp
insb
mov
movlps
insb
or
xor
in
sahf
sub
mov
push
xchg
fsts
call
lea
jbe
pop
pop
lret
add
inc
jbe
mov
popf
xor
je
xor
push
dec
push
hlt
out
mov
dec
scas
cmp
shlb
in
jl
stos
daa
in
pop
adc
mov
mov
cli
ljmp
stc
enter
and
push
ljmp
insl
sub
iret
test
scas
push
test
mov
clc
arpl
or
sbb
jbe
cmpl
mov
test
cmpb
in
dec
shlb
pop
xchg
outsb
popf
dec
mov
mov
and
and
inc
or
sbb
and
push
imul
pop
sbb
addr16
clc
push
and
xchg
and
dec
addr16
cli
inc
xchg
fsubs
cmp
mov
shl
xor
xor
mov
negb
cmpsb
add
xor
mov
push
mov
cmp
mov
lock
test
sarl
dec
pop
jmp
or
scas
sbbl
sbb
push
fucom
mov
popa
dec
scas
and
les
ret
adc
xchg
dec
xchg
outsb
add
jge
or
idivb
ds
xchg
jne
ljmp
mov
cltd
repz
fdivr
pop
xchg
clc
das
mov
push
xor
jle
xlat
push
fcomp
mov
rorl
sbbl
or
xchg
and
std
adc
mov
xchg
ljmp
outsl
mov
cmp
pop
jo
repnz
jbe
cmc
sbb
mov
sbb
push
xlat
je
jno
xchg
out
xchg
sti
push
dec
dec
sbb
jl
js
sbb
jb
cmpsl
dec
fnstenv
fstpl
aam
push
add
add
repz
or
orl
mov
dec
add
popa
shl
mov
jg
fs
dec
sbb
bound
jae
fidivs
arpl
push
push
sbb
jbe
rcrl
pop
test
popf
cmp
jp
or
fsts
addr16
inc
mov
loopne
cmp
inc
cs
sbb
imul
movsl
lcall
jmp
pop
cld
xchg
loop
mov
mov
popf
aas
fcmovb
pushf
fwait
mov
push
mov
and
cmp
jae
xchg
xchg
inc
js
dec
scas
lea
mov
jo
ljmp
insl
dec
fisubrs
mov
xlat
fiadds
dec
mov
test
shrb
shrb
sub
lods
mov
int3
xchg
cmpsb
icebp
push
and
mov
lahf
icebp
cmp
mov
ficompl
cltd
and
sub
inc
pushf
dec
bnd
subl
pop
adc
adc
xchg
cmp
mov
ljmp
cmp
sub
scas
aam
ja
fcmovne
and
lahf
mov
aas
push
mov
ja
lock
pop
fwait
inc
mov
cmp
mov
sahf
dec
je
cmc
jmp
pop
imul
stos
mov
jno
add
push
xchg
sub
xchg
mov
jmp
aam
gs
decl
lock
stos
ja
add
and
out
pop
and
popa
mov
cld
lcall
cwtl
mov
inc
sbbl
mov
rcrl
jg
je
push
ja
sbb
mov
cmp
sub
add
test
outsl
loop
das
insl
loopne
push
insl
add
in
jae
pop
jnp
push
push
sti
stos
mov
dec
sbb
sbb
push
cmc
into
pop
xchg
stos
adc
adc
aaa
lcall
add
mov
and
ficoms
cmp
ret
inc
in
mov
xor
fstpl
popf
shrl
xlat
adc
dec
cmp
push
mov
int3
sahf
ret
push
adc
out
clc
jo
sub
cmpl
xor
fdiv
sbb
adcl
and
or
fistpl
push
sub
lret
jp
xchg
sub
mov
js
mov
mov
fists
int
sbb
dec
pop
in
ja
loop
ljmp
hlt
sub
cmp
xchg
push
hlt
xchg
inc
cmp
fldt
sbb
scas
jnp
mov
cmpsl
insl
mov
push
fwait
imul
fsubrl
mov
or
sub
add
xor
flds
in
shlb
lods
and
out
or
in
cmpb
cmp
fs
das
mov
rclb
dec
add
jne
push
pop
scas
xchg
and
adc
jmp
mov
ffree
inc
pop
inc
ja
push
xchg
xchg
test
es
mov
push
insl
push
push
iret
mov
test
loopne
shrb
icebp
enter
sub
pushf
aad
xlat
clc
fnstenv
shrl
jo
imul
xlat
out
xchg
out
lods
push
xchg
xlat
mov
sbb
pop
mov
in
mov
rcrb
jne
bound
cmpsl
enter
loope
dec
fbld
in
pop
pause
and
and
mov
lret
xor
test
lds
adc
dec
dec
xor
orb
dec
fadd
sub
in
js
jp
rcrb
adc
sub
add
jmp
add
shrl
data16
xchg
mov
test
popa
xchg
cs
jle
or
popa
jnp
out
lods
dec
lods
out
push
movsl
es
and
mov
mov
push
sub
iret
sub
push
std
push
cltd
shrb
outsl
fisubrl
push
mov
popf
mov
push
add
sbb
enter
lret
jbe
mov
jmp
or
push
int3
enter
add
negl
mov
sub
jge
mov
lahf
mov
leave
sub
sbb
sub
stc
push
in
stos
pop
popf
pop
sti
or
fsubrl
hlt
fcmovb
jecxz
ret
cld
adc
mov
iret
pop
sub
ror
je
bound
jb
pop
arpl
lret
mov
bound
adc
lcall
sahf
lea
adc
sbb
or
mov
imul
cmc
xor
lods
fwait
cmpsl
fisttpl
mov
dec
and
fwait
inc
in
jg
iret
push
iret
mov
add
jno
rcll
inc
arpl
les
inc
ret
inc
push
sbb
add
vmovaps
mov
jmp
xchg
pop
cltd
lock
cmp
sbb
testl
jle
mov
test
mov
and
movsb
add
sub
ficompl
mov
xchg
out
add
pop
dec
enter
sbb
xchg
or
xchg
add
in
andl
sbb
fmul
xchg
xor
pop
ljmp
dec
in
adc
lret
adc
dec
bound
sbbb
mov
fldenv
in
push
test
adc
dec
pop
mov
fwait
sub
or
aam
shl
mov
outsb
test
mov
pop
adc
andw
sub
jge
adc
dec
cmc
sbb
sbb
inc
or
lods
outsl
outsl
pop
add
je
sub
pop
mov
stos
add
rolb
rcll
sub
add
test
push
imul
mov
addl
mull
xlat
jmp
rcrb
rorl
cmp
or
ljmp
push
or
cmpsl
add
jbe
jne
enter
decb
scas
testl
or
in
out
xchg
sub
lea
addr16
hlt
xchg
add
xchg
andb
decb
and
aad
test
or
call
cmp
jg
cs
inc
repnz
push
xor
in
neg
hlt
and
mov
xchg
stos
movsl
imul
jne
pop
out
pop
les
pop
repz
lahf
push
add
pop
jne
rol
repnz
mov
je
pop
fcomps
xor
daa
inc
and
stos
movsl
notb
mov
mulb
mov
mov
adc
and
inc
int3
mov
loopne
leave
movsb
testl
das
push
mov
addr16
cmp
inc
ds
pop
cld
sbb
xchg
fs
cmp
dec
sbb
pusha
js
inc
inc
inc
outsl
jb
sti
subb
sbb
mov
aam
mov
daa
pusha
lock
push
push
pop
push
inc
xchg
pushf
je
cmpsb
cmp
mov
and
pop
xchg
ret
lcall
stc
loope
stos
mov
or
sbb
add
mov
mov
test
sbb
jl
into
movsb
and
sbb
imul
lret
lea
lret
pop
lret
pop
int3
push
lcall
sarl
push
fcomps
mov
adc
gs
fdivl
es
leave
xor
ss
jns
sbbb
add
or
sbb
dec
sarb
or
daa
mov
fwait
mov
imulb
xor
lahf
popa
jle
xchg
xor
punpcklwd
test
pop
lods
jae
mov
cmp
aas
push
daa
popf
shrb
mov
xor
mov
pop
lret
jae
in
jbe
xchg
scas
xor
jle
aam
iret
xchg
outsb
jl
push
sbb
pushf
rcll
xchg
mov
repnz
xchg
mov
cltd
incb
in
das
mov
push
ret
push
imul
fcmovbe
cmp
out
movsl
addr16
in
in
fdecstp
mov
dec
jg
fcoms
xchg
sbb
mov
push
sub
dec
push
repz
adc
push
testl
mov
jge
int3
fsubrp
cmpsl
mov
ret
fmull
jle
int
ficoml
stos
push
push
mov
pop
loop
mov
cmp
adc
cmp
sub
orl
aaa
inc
cltd
jmp
push
aam
adc
inc
imul
mov
loop
inc
or
mov
dec
out
es
mov
xchg
add
loope
ja
and
mov
dec
pop
mov
push
pop
call
mov
mov
cs
mov
mov
cmp
mov
out
pop
insb
jge
movsb
sub
mov
cmp
out
xor
dec
push
cmp
jle
dec
popf
aam
xchg
rcl
pop
insb
iret
rol
jnp
mov
insb
ret
jl
sti
lods
movsb
add
ja
aad
cmc
stos
call
fisttps
pop
dec
in
push
sub
mov
xchg
adcb
sahf
ss
mov
in
stos
bound
cmp
scas
mov
mov
add
in
popf
add
cld
sub
cmc
mov
mov
jg
xlat
lcall
pop
adc
sahf
xor
sbb
xor
mulb
shl
cmp
loop
into
mov
xor
xor
pop
cmp
aaa
jecxz
lock
jecxz
dec
pushf
enter
nop
xlat
adc
ja
clc
sub
and
loopne
dec
xchg
mov
mov
pop
aad
in
jg
push
stc
push
insl
sub
into
gs
dec
jne
cmc
or
leave
mov
je
imulb
imul
push
je
push
aam
mov
adcb
das
adcb
mov
aaa
lret
xor
push
test
into
xchg
mov
std
aas
or
jge
mov
out
jo
loop
insl
mov
add
and
fucompp
xor
mov
nop
fwait
out
in
pop
cmp
dec
cltd
std
dec
leave
je
jb
adc
inc
subl
addb
addl
lock
movsl
pop
popl
push
mov
inc
cmc
add
and
in
cmp
dec
in
pop
scas
fnclex
sti
mov
into
fcomps
sub
addr16
mov
inc
or
and
test
fwait
pop
int
sbb
das
jmp
aam
subb
mov
xchg
mov
stc
add
jae
sbb
pop
xor
cmpsl
push
insl
sbb
jo
movsb
mov
jg
out
lods
rcrl
bound
push
jp
negb
pop
in
and
mov
fcoms
clc
stos
lds
or
push
int3
out
sub
movsb
pop
testl
or
out
cmp
add
jae
js
test
leave
dec
mov
push
scas
sub
mov
mov
add
jecxz
jecxz
push
dec
xchg
mov
js
test
js
fdivrs
mov
mov
aas
adc
fstps
pop
and
jl
push
test
popf
xor
dec
popa
das
pop
xchg
imul
sbb
lods
inc
fadd
pushf
push
andb
sub
aad
mov
jmp
jnp
cmp
in
add
out
push
pop
loopne
xchg
sbb
xor
push
sbb
cs
mov
xchg
add
or
mov
mov
aam
movsl
mov
jl,pn
popf
pop
out
ficompl
sti
fdivs
or
push
mov
cmp
push
shrl
pop
mov
jmp
sub
sub
hlt
movsb
loope
pop
insb
push
sub
leave
outsl
mov
aas
nop
sub
shl
notb
in
jl
rorl
repz
int
fmuls
test
jp
mov
jne
xor
mov
out
outsb
sbb
rcrl
push
mov
cmp
sbb
adc
xchg
ljmp
cmp
inc
cltd
sub
xchg
pusha
ret
and
cmp
jecxz
out
lds
inc
test
jmp
data16
cmp
sbb
or
inc
lret
pop
push
cld
sub
sbb
mov
sbb
inc
and
and
mov
dec
pop
gs
add
push
call
or
pop
lret
sbbl
mov
shrb
mov
sub
mov
mov
nop
inc
ss
arpl
scas
add
jne
cmp
dec
fbld
clc
movsl
aam
xchg
repnz
add
insl
adc
dec
aaa
pop
mov
sub
addr16
sahf
lock
mov
dec
in
rorb
incb
jb
pop
mov
and
cmp
push
xchg
mov
mov
imul
inc
push
fdivs
adc
cmpsb
pushf
mov
fcoml
fdivrs
out
fiaddl
stc
pop
rorb
jmp
in
mov
cld
sub
jp
les
or
rcrb
aam
jbe
mov
pop
push
push
jecxz
loopne
roll
js
adc
int
mov
push
test
iret
mov
add
movsl
xchg
push
fxch
shll
cld
mov
and
xchg
jbe
shll
into
pop
mov
add
mov
jle
imul
dec
nopl
and
lret
inc
push
in
testl
dec
dec
adc
mov
cli
and
es
mov
sub
enter
test
mov
xor
sub
dec
leave
cmp
pushf
jne
enter
mov
xchg
xor
sbb
pop
xchg
aad
repnz
mov
inc
shlb
fistpl
mov
dec
imul
mov
cli
loopne
imul
lds
mov
lds
faddl
repz
push
sbbl
je
jb
mov
push
jge
xlat
out
inc
mov
sbb
adc
pop
cli
mov
jge
xchg
xchg
sbb
and
mov
int
jecxz
xchg
mov
xorb
xchg
xlat
cwtl
or
inc
popf
sbb
xor
sar
push
addr16
out
inc
imulb
mov
xchg
fsts
xor
push
in
movsl
sbb
out
mov
sbb
pop
xchg
dec
dec
push
sbb
stos
dec
xor
push
pop
mov
sub
fsubrl
sub
loop
mov
fsubr
xchg
mov
cltd
clc
adc
outsl
pop
mulb
cmp
mov
ror
sti
into
jno
mov
mov
mov
mov
ljmp
shrb
rorl
test
mov
cwtl
xor
lret
and
xchg
dec
add
pop
shll
mov
int3
clc
ret
out
int3
and
push
fsubl
push
into
faddl
mov
dec
push
inc
enter
leave
dec
cmpsb
aad
sub
in
xchg
xchg
cmp
movq
lock
loop
push
fistpl
ret
cmc
adc
cmp
cmp
mov
fldt
sbb
dec
loope
pusha
jecxz
rcl
inc
lods
test
add
testl
mov
mov
inc
pusha
jl
fnstsw
out
xor
std
mov
jge
stos
cli
movsl
dec
out
inc
negl
mov
scas
inc
sahf
movsl
loope
mov
adc
lea
movsb
addr16
call
outsl
bound
iret
mov
push
adcb
add
lock
xlat
out
and
adc
fsts
out
adc
loopne
adc
inc
jmp
lods
shrb
adc
dec
pop
sub
int
adc
rolb
lret
push
cli
dec
shl
pop
ret
leave
outsl
cmp
mov
add
push
lea
and
jne
aaa
xor
mov
fildl
movsl
xor
jp
fimull
pusha
cli
out
enter
pop
adc
mov
jno
pop
clc
and
mov
ret
mov
bound
mov
cld
cmpsl
cltd
bound
sbb
imul
mov
push
push
mov
bound
xor
bound
decl
push
test
movd
mov
pop
mov
roll
loopne
jge
pop
fcmove
mov
cmp
js
and
ljmp
lcall
addl
jb
xchg
js
or
cwtl
inc
sub
xchg
or
pushf
xor
xchg
add
aad
loope
addr16
push
dec
push
mov
xchg
jnp
lahf
push
add
out
xchg
clc
adc
mov
shrl
movsl
pop
gs
xlat
push
pop
mov
jecxz
lcall
xor
mov
cmp
cli
inc
popf
lret
cmp
fwait
inc
jmp
aaa
aas
push
cli
mov
imul
add
das
mov
jle
push
aam
scas
add
and
mov
in
sbb
sbb
call
data16
popa
mov
lahf
icebp
and
or
push
sbb
fwait
xchg
cmc
mov
imul
mov
inc
add
inc
add
adc
dec
mov
in
ficomps
imul
mov
mov
or
inc
pop
hlt
sub
pop
push
aas
pushf
loope
add
jmp
fsts
mov
mul
push
cmpsb
xchg
pop
xchg
insl
pop
cmc
sub
pop
dec
stos
outsl
and
lcall
into
fwait
ret
rcl
cld
out
int
fcompl
ljmp
call
lcall
clc
sahf
cmc
adc
in
shlb
divb
xor
cmpsl
inc
loopne
std
cmp
fcomip
adc
dec
test
shrb
scas
daa
mov
pop
jns
aas
outsb
repnz
out
dec
sbb
mov
movsb
jecxz
pop
pop
out
mov
adc
fstps
jns
add
int3
aad
scas
lock
pop
sahf
cli
lea
push
mov
daa
mov
and
mov
push
outsl
jnp
repz
sbb
ss
movsl
cli
sub
sub
push
mov
xchg
and
ret
or
xchg
push
sbb
mov
adc
pop
das
das
addr16
sub
jae
jmp
or
stos
inc
push
mov
xchg
iret
or
mov
loopne
adc
and
xchg
sub
cs
mov
add
adc
inc
and
push
add
insb
adc
adc
push
call
jne
jae
sub
push
aad
dec
nop
daa
cmp
fnsave
add
addl
data16
xchg
jae
repz
sbb
je
jg
lods
push
ss
jo
jle
push
nop
pop
mov
mov
xchg
mov
pop
mov
mov
gs
fldt
and
leave
push
mov
jecxz
xor
add
scas
outsb
jl
pop
fiadds
adc
fsubrs
mov
mov
andl
faddp
mov
icebp
aad
in
pop
outsl
jbe
pushf
xor
sahf
sub
jb
scas
sahf
scas
sbb
fcomi
or
jge
sub
popa
imul
dec
rclb
jb
out
mov
dec
in
fwait
push
cmp
test
lds
dec
negl
scas
ds
mov
dec
not
mov
sub
sbb
outsb
fwait
or
inc
fstpl
or
cmp
xchg
dec
or
cmp
aas
fs
add
roll
adc
cmp
data16
sub
daa
cmp
loope
inc
insb
std
pop
lret
mov
sub
sub
mov
arpl
xor
cli
les
sub
xchg
mov
or
inc
or
adc
mov
mov
dec
sbb
lret
mov
out
push
lret
mov
mov
push
mov
cltd
test
out
mov
sbb
divl
sub
lret
sub
test
aas
cltd
mov
mov
or
cmp
stos
and
push
lret
sbb
cltd
jnp
dec
dec
js
dec
imul
adc
pop
ret
or
out
pop
push
xchg
xchg
daa
outsb
push
mov
or
aaa
imul
dec
sbb
sub
xlat
mov
loope
mov
and
cmp
or
pop
sbb
dec
add
jge
mov
cmpsb
lahf
sub
dec
inc
lcall
and
sub
or
iret
stc
mov
daa
cli
in
dec
cmp
dec
outsl
push
fwait
imul
xchg
add
lock
sti
inc
sti
fnstenv
sbb
es
outsl
jmp
xchg
ret
out
pop
ret
insb
xlat
sbbb
or
sbb
inc
shlb
int
pop
repnz
jae
or
jp
jmp
and
fcoml
mov
sub
test
das
mov
lea
out
shrl
add
and
outsb
and
fnsave
pusha
das
lods
dec
jb
mov
clc
xor
xchg
jg
pop
mov
mov
xchg
pop
out
cmp
cmp
ljmp
outsl
sbb
dec
bswap
test
adc
cmp
test
insl
std
repz
mov
adc
and
adc
cmpb
pop
pop
fwait
mov
push
outsb
loopne
mov
nop
ds
xor
add
adc
mov
cmp
movlps
adc
push
cmpb
mov
jge
ss
inc
and
adc
dec
inc
cs
cmpsl
clc
pop
mov
xor
pop
mov
pop
pusha
test
mov
push
jno
popf
int
inc
sarl
loopne
add
bound
mov
out
mov
push
das
dec
in
pop
xchg
cs
jecxz
mov
mov
or
xchg
stos
sbb
add
popa
clc
data16
jge
fcoml
pop
loopne
fidivrl
mov
cwtl
xchg
and
and
xor
shrl
mov
sbb
mov
call
and
movsl
xchg
jne
sub
mov
dec
cmp
aad
sub
gs
lds
mov
ja
sarb
insb
dec
nop
mov
lock
jl,pn
push
enter
lea
or
fadds
addr16
cmp
popa
sub
mov
aas
out
sub
mov
push
mov
dec
popf
xor
leave
pop
movsb
dec
mov
loop
pop
mov
sub
mov
cmp
lods
sbbl
je
xchg
mov
rorb
mov
sub
in
mov
sub
je
lret
push
and
inc
jmp
repnz
or
pop
aas
loope
mov
jo
jmp
mov
divl
cmp
fdivs
int3
sub
mov
push
xchg
mov
imul
dec
sub
pop
stc
adc
das
xor
pusha
test
and
popa
rcrb
shr
jae
xchg
repnz
out
test
cmpsl
mov
sar
jae
inc
and
sbb
adc
mov
inc
push
add
imul
or
scas
lcall
mov
aas
into
scas
jge
fdivs
push
jne
and
fucompp
cmpsl
ds
xor
mov
rcll
sbb
test
cmp
push
cmp
mov
add
sahf
push
or
sbb
push
in
push
xchg
mov
subl
mov
inc
jnp
inc
fstps
mov
imul
jp
xchg
lea
stos
loopne
cmp
or
mov
clc
in
add
jg
jp
cmp
xor
call
fisubrl
int3
rcll
lods
adc
in
jns
pop
or
lahf
pop
scas
add
jp
cmc
cmpsl
xor
cmp
xlat
or
fmuls
sub
sbb
mov
fstpl
cs
popa
inc
adc
push
cltd
test
push
cmp
and
jmp
lahf
addr16
aad
jo
xchg
inc
jbe
aaa
push
fwait
xor
in
icebp
adc
cs
and
cmc
ss
lcall
fldenv
pop
movsb
lds
aad
sbb
pop
loop
or
mov
pop
xchg
dec
mov
sar
cmp
inc
sbb
sbb
mov
mov
stc
cmpsl
push
lods
jns
pop
pop
jne
stos
pop
testb
ret
push
sahf
jno
lods
push
sti
rcrl
cmpsl
dec
movsb
add
nop
dec
mov
sahf
xchg
add
decl
andl
scas
pop
hlt
mov
adc
flds
sbb
sbb
ret
sbb
jae
mov
mov
sbb
movsl
push
fs
mov
mov
inc
stc
rcrl
inc
jl
cmp
jg
xlat
mov
inc
leave
adc
and
cmp
jecxz
cmp
push
add
movsl
shr
pushf
icebp
mov
insb
mov
jbe
or
dec
push
jge
aas
aaa
imul
jae
adc
push
mov
in
ror
loop
lret
cmp
dec
pop
cld
pop
pop
or
and
xchg
loop
test
cmp
dec
adc
and
arpl
push
les
mov
sub
insl
cmp
or
test
clc
inc
or
mov
add
ja
arpl
mov
inc
lods
mov
icebp
cmpsl
dec
enter
cld
outsl
mov
push
cli
cwtl
mov
add
cltd
dec
clc
test
ficompl
sbb
pop
mov
mov
ja
xchg
xchg
pushf
xlat
rorb
loop
lcall
rcl
fmuls
sbb
adc
adc
ja
rolb
dec
bound
xor
test
xchg
inc
in
xchg
shlb
loope
leave
mov
xor
into
fsubr
loope
jle
and
mov
and
dec
test
imul
scas
cmp
jg
add
push
and
push
lods
cmc
arpl
out
aad
jmp
mov
mov
add
dec
call
xchg
mov
gs
lods
in
sahf
push
out
popa
dec
int3
mov
cmp
xor
add
psubsb
adc
loop
mov
sahf
sbb
mov
int3
add
ss
adc
push
ljmp
fsubrs
rcl
xchg
sahf
repnz
mov
dec
js
xor
inc
fcmovne
cld
sahf
inc
in
arpl
mov
mov
es
push
test
jl
out
movsb
cmp
cmp
lret
aaa
mov
fsts
lret
jle
call
in
fisttps
add
sub
pmaxsw
test
cs
xor
mov
and
repnz
and
lret
dec
xchg
cmp
mov
jae
insb
or
and
mov
ds
iret
xchg
loopne
je
in
pop
fcomip
xchg
les
in
mov
fidivrs
push
fdivp
jnp
pop
pop
xor
mov
pop
lods
and
fisttps
loope
movsl
pusha
or
shll
sub
cmpsl
es
xor
rcrb
cmp
lahf
mov
out
cmpsb
in
and
leave
xchg
sub
mov
rorl
jecxz
fildl
dec
pusha
xlat
cmpsb
inc
inc
add
mov
mov
mov
and
pushf
or
cmp
mov
jecxz
mov
lret
fbstp
xchg
cmpsl
sbb
pop
push
mov
push
or
mov
mov
sbb
lahf
push
or
int3
shl
jp
dec
dec
mov
lahf
call
dec
xchg
mov
jo
push
mov
inc
xlat
add
hlt
jmp
arpl
pop
and
popa
cmpl
mov
imul
add
bound
dec
xchg
hlt
and
or
jo
movsl
mov
sbb
sbb
mov
dec
out
test
les
and
das
fdivl
insb
jp
clc
fbstp
jp
cld
mov
dec
xor
dec
sub
xor
mov
cmp
xchg
loopne
dec
adc
xchg
sbb
pop
push
push
sahf
xor
out
mov
mov
shll
push
imul
repz
lea
xchg
inc
push
sub
add
cmp
push
test
adc
jp
jno
lock
jbe
push
cmc
cmp
jecxz
aas
push
lret
cld
inc
adc
es
bound
sti
adc
shlb
push
push
imul
sarb
lret
push
rorl
je
adc
inc
mov
clc
stos
imul
sbb
pop
mov
sbb
add
lock
jne
adc
inc
cmp
mov
scas
in
push
movsl
in
mov
mov
in
jl
neg
jle
pushf
sbb
bound
sar
es
push
or
inc
mov
hlt
push
insl
cmp
popf
fst
xchg
lods
add
fldl
sbb
jmp
xchg
push
in
adc
mov
sbb
in
inc
lret
pop
out
sbb
loop
imul
mov
xchg
out
scas
mov
adc
js
movb
lret
ljmp
imul
push
mov
cmp
fisubs
cmc
gs
or
aaa
add
push
sub
out
mov
add
cmp
sbb
fisubrs
xor
pop
jbe
leave
pusha
aaa
pop
pop
mov
lds
lock
stos
lcall
stc
arpl
sbb
sbb
icebp
mov
xchg
lahf
ss
mov
stc
arpl
adc
jne
jmp
fmul
mov
cmpsl
out
fsubrp
adc
sbb
sbb
cmp
rcrl
mov
or
mov
aaa
lea
and
rcrl
dec
jecxz
fsubr
jp
cmp
mov
fidivrl
mov
fistl
test
outsb
adc
imul
adc
lea
ret
xlat
pop
rcrb
add
shlb
das
mov
hlt
xor
leave
pop
adc
bound
mov
pop
mov
cltd
jne
xchg
xor
sbb
ret
and
dec
js
nop
pop
stc
test
repz
inc
push
and
pop
sti
xor
add
dec
xchg
jo
aas
adcb
push
inc
fstl
in
test
test
and
leave
ja
add
sbb
xor
in
xor
cwtl
test
jbe
lret
sub
ret
adc
jns
cmp
and
dec
pop
cmp
cmpsl
jle
xor
mov
repnz
insl
sub
or
js
pop
xor
adc
inc
sbb
jge
es
inc
jecxz
xchg
mov
sbb
arpl
ss
mov
or
or
cmp
sti
mov
push
mov
sbb
les
pop
das
cli
mov
loope
pop
xchg
xchg
add
jnp
insb
inc
in
inc
daa
mov
dec
mov
rorb
xchg
in
and
ss
insl
mov
xchg
aaa
inc
in
sahf
adc
jae
fs
mov
clc
call
jb
pop
xchg
jns
hlt
idivl
in
in
fimuls
mov
test
inc
or
cmp
push
add
pop
jmp
adc
pop
movsl
cmp
and
jo
ret
pop
insb
mov
fwait
rolb
mov
cmp
insl
out
and
adc
push
imul
outsl
daa
or
outsb
addr16
lcall
std
pusha
pusha
fmul
xchg
xor
leave
sub
mov
push
push
lret
movsl
mov
xlat
outsb
inc
xor
xor
sub
jecxz
sub
test
xor
fldt
or
mov
addr16
mov
push
es
sbb
je
mov
movsl
lret
xlat
and
aaa
or
dec
imul
jg
jmp
ret
pop
sub
and
or
cmp
pop
ljmp
pushf
xor
push
shrb
punpcklbw
cmp
lock
inc
fsubrs
sbb
push
push
jl
push
and
adc
xor
insb
jl
inc
pop
cmpsl
std
loop
inc
ficoms
inc
sbb
dec
pushf
add
xor
testl
push
in
xchg
in
std
fwait
rclb
stos
inc
out
lret
xor
popa
add
inc
xchg
mov
pushf
push
lahf
es
cmp
lret
lods
push
in
sub
out
sbb
lock
es
jns
push
dec
lds
es
fs
popf
cli
inc
pop
xor
adc
push
adc
mov
loopne
jg
xchg
add
lods
push
notb
xor
callw
xchg
dec
sbb
in
insb
fcomps
xchg
cwtl
decb
loop
fcmovu
jb
dec
add
cmp
sub
dec
dec
int3
insl
lock
mov
test
js
cmp
xor
shl
ret
push
or
xlat
push
test
loop
aas
jns
cmc
sbb
mov
gs
add
jbe
pop
fildll
int3
es
push
mov
sbb
mov
dec
and
cmc
lcall
pop
push
mov
jg
cmp
int
mov
das
data16
pop
mov
inc
adc
inc
das
pop
jle
and
xchg
lods
and
xor
push
lods
dec
pop
loopne
fnstcw
pop
fsubl
inc
push
pop
in
jno
ds
sub
lret
out
imul
rol
rorl
jb
testl
out
cmp
or
inc
arpl
in
fisubs
xchg
dec
fistps
fidivs
pop
push
mov
aaa
repnz
outsl
xchg
fbstp
or
imul
iret
gs
popa
and
sub
xchg
or
inc
pop
fdivs
in
scas
inc
xlat
fisttps
sbb
stos
or
shll
sub
test
jb
cmp
jg
add
xchg
icebp
sbb
sahf
dec
sbb
push
jp
arpl
dec
adc
push
xor
dec
cmp
push
cmpsb
mov
in
push
jbe
roll
sahf
add
fsts
or
inc
mov
xlat
outsb
mov
cmc
add
cs
and
mov
mov
mov
int3
jo
fbld
pushf
xor
lahf
adc
shll
jns
ret
pop
imul
xor
fninit
xor
adc
pop
repnz
aas
out
jns
fisttps
mov
inc
jne
ja
negb
inc
cmpsb
dec
mov
ficoms
push
lds
cmpsl
decb
fmull
roll
jae
hlt
xchg
or
mov
repz
dec
fildll
cld
mov
cmp
ss
lods
insb
push
xchg
mov
lea
leave
and
shll
jge
movsl
sub
ret
jl
es
aaa
dec
loope
ljmp
sub
rolb
js
push
sbb
in
and
insb
mov
push
insl
cmp
sahf
xchg
in
pop
ds
mov
jno
sub
sbb
nop
hlt
je
es
xor
je
gs
xor
addb
dec
shlb
addr16
repnz
pop
insl
xchg
pop
les
addr16
idivl
add
out
push
hlt
push
or
adc
rcr
lods
inc
fistpll
mov
clc
nop
dec
out
arpl
or
shrl
add
mov
or
cltd
dec
pusha
hlt
cmc
mov
ret
fldt
pusha
lret
pop
repnz
test
xor
add
rcll
jp
mov
cwtl
xchg
cwtl
insl
and
inc
cli
push
mov
out
inc
cmc
fidivrs
lret
jne
jle
mov
sub
movsl
adc
nop
mov
in
sub
sub
inc
out
call
inc
iret
xchg
arpl
pusha
xchg
pop
sbb
sbb
cmp
pushl
or
in
ja
jbe
jae
rsqrtps
inc
fcmovb
inc
std
pop
gs
popa
iret
adc
jb
insl
scas
xor
test
inc
mov
xor
or
push
or
out
fsubr
stos
inc
or
xor
fsubrl
in
mov
pop
loop
call
outsl
test
cmpsb
ds
fcmovu
movsl
mov
xchg
jg
clc
scas
sbb
roll
push
jne
and
lret
adc
mov
pop
mov
imul
adc
mov
xabort
test
dec
test
xchg
test
ja
xor
add
out
insb
sbb
sarl
js
ss
fbld
add
cmp
mov
mov
jno
call
loopne
jne
mov
add
xchg
cmp
jo
adc
push
xchg
inc
notl
push
mov
cmc
loop
xchg
dec
xchg
jl
lods
test
lock
popf
sub
das
xor
sti
jl
push
and
or
in
test
jnp
add
jae
mov
in
ja
aaa
xor
mov
arpl
outsb
add
xchg
shl
add
in
sub
push
mov
test
pop
in
fiadds
mov
sub
bound
loope
lcall
sub
dec
test
in
sbb
shl
pop
jmp
xor
and
inc
push
fiadds
sub
lock
movsb
cmp
adc
or
mov
inc
sub
lahf
mov
pop
sahf
int3
push
lock
push
incb
ret
xor
loope
imul
adc
add
repnz
and
mov
mov
out
dec
add
inc
loope
call
push
xor
xchg
sbb
or
jl
shrl
pop
ret
xor
subl
jmp
movsb
pop
cmp
pushf
xor
mov
roll
add
jl
jno
int3
aam
cli
js
lcall
popa
mull
iret
or
scas
stos
jp
insl
push
in
fiadds
out
jl
or
mov
cmpsl
test
dec
out
int
sti
or
xchg
sub
mov
in
in
mov
sahf
cmc
int3
xlat
push
stos
in
adc
pop
sub
stos
sbb
out
mov
dec
insb
push
push
or
pop
scas
lods
xchg
or
xor
loope
aaa
xchg
test
push
push
cli
lea
je
popf
cmpl
adc
pop
movsl
mov
mov
sarb
push
lock
shl
sti
xchg
sub
xchg
stc
out
stos
push
cmp
test
imul
mov
xchg
fiadds
ficomps
xchg
mov
push
mov
data16
aad
push
lahf
leave
test
xor
out
sti
popf
and
push
push
shrb
stc
ds
aam
pop
faddl
or
std
ret
shll
cmc
mov
pop
sbb
jge
aad
mov
in
adc
add
jnp
sahf
mov
dec
lahf
mov
into
inc
int
sbb
xchg
cwtl
push
dec
and
sbb
andb
pop
shr
mov
mov
bndstx
xchg
jb
ret
mov
xor
mov
popa
pop
out
add
sub
or
mov
mov
sub
jno
push
insb
add
das
call
std
mov
sbb
cltd
insb
imul
and
scas
pop
mov
jge
xor
jmp
xor
jo
das
insl
sub
fmulp
adc
ja
outsb
xchg
sbb
gs
enter
pop
ret
pushf
lret
and
pop
repnz
nop
mov
insb
insl
and
push
and
pop
aas
sbb
rcrb
sbb
es
cmp
popa
enter
enter
testl
cld
jae
adc
iret
fcmovnu
cmp
sahf
push
mov
cmpb
imul
fs
negb
pop
addr16
sahf
ret
jns
sbb
xchg
ret
pop
adc
iret
out
or
push
lret
inc
insl
add
hlt
mov
push
add
ljmp
add
test
shr
shlb
lds
out
inc
inc
push
mov
xor
mov
fwait
push
mov
imul
mov
das
repnz
or
mov
cmp
insl
gs
arpl
dec
frstor
mov
pop
adc
jnp
hlt
jmp
lcall
dec
jmp
call
mov
push
push
hlt
push
xchg
mov
out
mov
clc
rcl
or
xor
push
jbe
adc
mov
sbb
test
ja
int3
lret
adc
int3
cmp
std
add
fdivr
xchg
clc
movsb
and
shlb
adc
orb
add
std
adc
es
into
jge
test
fisubrl
push
push
shll
adc
in
rorb
adc
insl
lahf
pop
sbb
shr
mov
out
mov
push
cmp
call
sub
in
fdivrl
pop
loop
insb
add
and
add
mov
in
xor
mov
fimuls
movq
pop
jnp
insl
xchg
lahf
test
mov
sbb
jnp
sbb
data16
and
lret
fcomps
enter
mov
ljmp
stc
xchg
mov
into
aas
adc
and
lret
xacquire
sbb
iret
mov
pop
stc
dec
cwtl
loop
jle
pusha
mov
lds
mov
dec
sub
mov
mov
loopne
and
jno
enter
xor
inc
adc
lock
jbe
fists
js
mov
pcmpgtw
xchg
xor
idivb
jl
sub
pop
mov
out
pop
inc
pop
cmp
cld
test
pop
sub
pop
xchg
xor
loope
leave
mov
pop
xchg
scas
movsl
xor
adc
loop
std
add
out
mov
mov
push
adc
ljmp
loopne
imul
jbe
and
mov
andl
push
sbb
sub
mov
test
roll
adc
mov
add
es
jecxz
into
out
aas
scas
mov
jbe
xlat
push
pop
push
incl
dec
push
or
inc
or
inc
dec
pop
call
and
in
push
insb
ja
push
xor
mov
in
lcall
jecxz
hlt
push
push
xlat
mov
pop
add
and
push
sti
adc
cmpb
pop
lods
mov
mov
cmp
add
dec
sbb
adc
popf
sub
pop
stos
mov
out
int3
dec
dec
xchg
sub
sub
shlb
popa
xchg
mov
jle
fcoms
jmp
ljmp
les
mov
pop
mov
sub
int
daa
hlt
lds
rcrl
in
test
gs
ljmp
pop
lret
je
addb
push
xchg
cmc
and
jb
movsl
shlb
xchg
jbe
hlt
into
push
es
mov
xor
add
xor
stos
add
sbbb
dec
rcrl
mov
testl
or
pop
aas
mov
shrl
popf
lods
xor
ljmp
pushf
cli
xor
jb
sbb
dec
push
xchg
arpl
sub
out
or
leave
sub
out
and
je
adc
dec
pop
fisubs
and
push
xchg
xchg
call
cltd
inc
add
push
mov
mov
in
jo
mov
fs
mov
and
push
cmp
jns
xchg
xor
jp
decl
dec
mov
mov
aam
movsl
aam
jne
xchg
pop
ds
ret
lcall
clc
fs
add
shlb
loopne
dec
dec
jo
fisubs
push
cs
mov
cmovnp
je
mov
cmp
ljmp
inc
xor
out
gs
push
arpl
mov
int
repz
push
out
xchg
xchg
jbe
call
fidivl
cmp
fildl
repz
outsl
lods
and
cmp
sub
pop
mov
mov
xor
sbb
jbe
popa
rcrb
sub
cmpsl
stc
lock
mov
add
ficoml
adc
lahf
xor
loop
leave
adc
lock
lock
movsb
imull
dec
ficoml
out
mov
push
push
daa
adc
enter
pushf
imul
jo
test
push
adcl
mov
gs
and
jmp
inc
dec
in
jns
clc
add
insb
fistpll
ja
leave
sub
sub
test
mov
fwait
sbb
arpl
push
xor
in
xor
ds
push
mov
mov
lahf
pop
sbb
jo
push
pop
icebp
xchg
icebp
dec
addr16
scas
pop
mov
pop
mov
cmpsl
mov
mov
jbe
imulb
inc
mov
jg
iret
data16
add
jmp
mov
pop
lock
lods
test
or
mov
sbb
jns
dec
dec
shl
aad
sub
cli
aas
outsb
sub
push
ljmp
call
test
mov
and
andl
cmp
push
dec
lahf
xor
jmp
in
add
cmpsb
je
fmuls
inc
jp
push
mov
in
xchg
mov
cmp
stc
add
mov
xchg
outsl
ret
inc
popf
and
push
into
leave
jae
and
xchg
xchg
ljmp
ljmp
js
nop
pop
add
xor
and
mov
add
and
adc
xor
ljmp
stos
cmc
push
dec
lods
add
xchg
je
dec
jmp
inc
xchg
data16
jmp
and
ret
xchg
mov
shlb
sarl
dec
loopne
jae
inc
xor
sbb
adc
pushf
sbb
les
leave
ret
call
and
and
test
and
xchg
adc
push
cmp
adc
sbb
xchg
inc
pop
repz
mov
js
jp
dec
push
stos
dec
ljmp
mov
daa
loop
adc
lods
xchg
or
add
fiadds
and
je
imul
clc
adc
into
inc
sbb
pop
dec
mov
aaa
in
repnz
mov
mov
repz
imul
fsubrs
lret
mov
and
cmp
cmp
andl
lahf
xchg
mov
mulb
addb
jge
lods
mov
or
push
xchg
je
shr
popf
or
sbb
ds
popa
imul
das
rorl
sub
addl
push
out
mov
addr16
ret
mov
adc
dec
pop
icebp
clc
dec
es
repz
adc
inc
inc
je
je
addr16
ficomps
xchg
add
enter
jecxz
sbb
and
subl
sub
or
fs
jmp
inc
or
aas
xor
mov
shll
fnstsw
movb
xchg
xor
ljmp
test
push
and
sarl
or
aaa
adc
lock
inc
pop
sub
mov
int
adc
xchg
lods
mov
lods
and
sub
pop
hlt
out
cmp
ret
lea
xor
jns,pt
xor
mov
icebp
pop
mov
pop
flds
add
jge
mov
loopne
ljmp
xchg
dec
sbb
xor
sbb
mov
loopne
pop
out
imul
mov
push
sub
mov
into
pop
dec
adc
mov
pop
popa
or
ja
mov
scas
je
adc
inc
hlt
in
xor
push
icebp
movsb
lock
dec
mov
gs
add
out
test
repz
xchg
or
ds
pop
pusha
cmp
in
xchg
call
fisubrl
or
sbb
jecxz
jo
cmp
aaa
xorb
lds
mov
mov
jae
inc
lcall
sbb
mov
add
mov
loope
scas
add
and
loop
xchg
push
push
dec
cltd
add
pop
adc
dec
std
inc
adc
pop
pop
xchg
push
out
mov
jb
movsbl
xor
adc
xchg
pop
sbb
lret
pop
and
lea
leave
lods
mov
fisubrs
xchg
sub
cs
std
push
cli
sub
or
add
data16
mov
xchg
inc
in
out
in
hlt
popf
inc
in
repz
push
fists
aaa
lret
hlt
pop
fcmovnb
in
popf
sub
imul
imul
xchg
push
sub
dec
loopne
push
mov
int3
mov
add
data16
mov
je
aam
pop
sbb
xor
pop
ss
pop
in
push
xchg
mov
adc
push
pop
dec
iret
adc
dec
sbb
or
xchg
jg
fcomps
cmpps
imul
ljmp
add
outsl
jnp
mov
leave
cmp
pop
loop
std
xchg
push
add
cmpsb
js
dec
ljmp
mov
sub
flds
dec
dec
dec
std
sub
or
jae
mov
push
and
pushf
outsl
push
pop
fldcw
stc
add
push
cmp
mov
pop
xchg
fs
push
inc
lods
jp
rcl
push
insb
bswap
fisttpll
cmp
mov
jmp
cmp
stos
leave
fnstsw
lret
das
pop
icebp
sbb
sbb
int
sbb
mov
push
out
es
mov
push
stos
aas
push
push
xchg
xchg
mov
sbb
or
and
test
fsubl
in
fbstp
mov
or
inc
mov
xchg
sub
mov
ss
push
mov
inc
jecxz
lret
in
mov
roll
popf
repz
mov
add
int3
mov
pop
enter
je
inc
mov
push
jmp
je
jno
lret
xchg
rcrb
sbb
fwait
inc
push
cwtl
movsl
xor
mov
shr
loop
push
inc
mov
idivb
xor
push
adc
inc
pop
sbb
cmp
out
mov
outsl
cmpb
cwtl
cld
sub
out
xchg
adc
cmp
rcl
inc
sahf
clc
cmp
hlt
test
mov
mov
cmpsb
push
ret
sbb
in
dec
mov
pop
jge
add
push
lret
add
roll
je
sub
mov
ljmp
lahf
adc
and
fwait
cli
push
pop
test
out
mov
and
call
das
shrb
test
insl
sbb
add
dec
lret
mov
mov
inc
inc
dec
repz
xchg
mov
ficomps
insb
xchg
sub
or
adc
sbb
mov
mov
jae
jns
or
in
lret
xor
gs
and
xchg
or
scas
add
mov
mov
inc
dec
xlat
dec
fst
jecxz
loopne
inc
fbstp
ds
lods
popa
jle
inc
push
push
fwait
jecxz
clc
inc
fildl
jbe
push
and
mov
andl
jns
int
outsb
lcall
mov
mov
insl
sbb
add
lock
xchg
cmp
stos
or
int3
jle
insl
jno
ds
inc
enter
mov
mov
jne
dec
push
inc
sub
push
mov
pop
dec
inc
inc
xchg
cmp
and
add
xor
jo
cltd
xchg
and
enter
inc
push
jae,pn
xchg
divl
jecxz
mov
testb
movsb
jecxz
push
notb
mov
lds
cwtl
fs
in
je
in
mov
cmpb
pop
mov
rcr
fcoml
int
std
xor
sub
jg
repz
cmp
shr
stos
pop
mov
dec
scas
nop
adc
lods
inc
sub
lea
mov
push
cmpsl
add
psubsb
stos
jno
mov
fdivs
fcmovu
in
out
in
pop
mov
mov
and
cmpxchg
mov
xchg
pop
ret
adcb
dec
mov
fstps
sub
imul
incl
mov
or
in
decb
push
cmp
or
jp
add
sbb
cmp
and
mov
cs
jo
jne
or
jge
dec
test
inc
jnp
dec
mov
adc
or
std
and
imul
jg
popf
xchg
adc
xchg
sbbb
jecxz
mov
mov
mov
dec
ds
fistl
adc
addl
xor
imul
xchg
dec
pop
cmp
pop
loop
push
mov
rolb
fstpt
bound
dec
inc
adc
lcall
out
dec
pusha
adc
mov
addr16
dec
aam
cmp
mov
inc
lret
test
out
in
in
fidivl
out
push
jecxz
addb
xchg
int
jl
mov
or
or
sub
fadds
js
mov
xor
pop
jmp
js
das
outsl
cmp
jl
lods
sbb
cs
fsubrp
sahf
cmp
rorl
mov
jge
mov
adc
jmp
fimuls
repz
push
sarb
lret
pop
ljmp
lods
xor
outsb
xchg
dec
or
sub
shl
pop
and
inc
mov
lret
test
lret
inc
mov
dec
leave
jnp
mov
push
not
aad
inc
jno
ja
jmp
dec
jb
jnp
aas
push
rcll
mov
mov
aad
jae
outsb
notb
push
nop
mov
int3
xor
pop
in
mov
and
mov
test
ficoms
iret
sub
fldenv
lret
mov
cli
and
sbb
stos
jne
mov
add
dec
mov
popa
mov
lcall
mov
add
fiadds
repz
icebp
lods
shrl
cld
mov
sbb
enter
xchg
cmpb
cmp
aam
fs
sub
add
sbb
outsl
push
sahf
pop
lods
and
mov
jg
pop
cmp
push
mov
lahf
dec
out
jl
paddb
jmp
mov
mov
adc
out
in
pop
add
dec
mov
imul
daa
inc
imul
inc
jb
mov
dec
cmp
sbb
mov
aaa
jmp
das
xor
dec
dec
out
push
mov
sub
fcmove
cmp
subl
int
cmp
mov
fcmovbe
rorb
test
mov
inc
sub
jnp
jne
fstpl
lock
dec
adc
in
push
mov
cmp
sti
mov
adc
rclb
jno
push
lret
pop
sbb
dec
shr
js
imul
cltd
ret
daa
movsb
imul
cmpsb
xchg
adc
mov
ljmp
xchg
faddl
mov
or
popa
sub
movsb
dec
xor
jp
pop
call
popa
loopne
xchg
loop
stc
nop
push
ljmp
jmp
sub
cmpsb
shlb
xor
jle
sbb
into
or
test
insb
lret
js
subl
or
lds
cmpsb
mov
inc
in
push
mov
les
push
xchg
and
add
call
mov
clc
enter
arpl
mov
mov
xor
inc
daa
out
gs
arpl
xchg
mov
jp
adc
pop
mov
aad
es
sar
add
inc
std
xchg
mov
add
sbb
ret
dec
jecxz
mov
push
cltd
repnz
aad
fidivrs
xchg
pop
hlt
fdivl
jnp
sub
push
dec
stc
psubq
xor
push
push
fistps
call
or
pop
pusha
fnsave
jnp
popa
sub
jle
adc
xchg
or
xchg
jne
insb
adc
push
in
dec
ror
and
fwait
rorl
repnz
jae
push
jg
inc
das
addr16
mov
imul
ja
imul
push
mov
push
sub
loop
ja
fistl
xor
inc
loopne
mov
mov
pop
bnd
pop
mov
dec
and
jb
sub
subb
cli
cmp
push
into
pop
cwtl
xchg
or
cld
or
mov
cmpsl
push
adc
fidivs
add
in
lcall
rcl
in
pop
mov
cmp
jnp
xchg
sub
in
jge
xor
js
loope
mov
es
stos
mov
adc
push
ljmp
test
rol
int
pop
and
dec
cmp
fwait
xor
dec
fnstsw
lods
inc
cmp
pop
fiadds
cmp
xor
cmp
out
push
xor
xor
adc
dec
sub
dec
pusha
mov
xchg
mov
stos
lea
int3
xor
mov
jbe
mov
inc
cs
jae
add
je
xchg
lahf
pop
stos
int
das
pop
sbb
add
push
inc
and
xchg
test
imul
mov
xchg
ss
shrl
pop
insl
out
sub
fnstsw
in
stos
hlt
out
inc
fidivs
mov
fdivl
stos
mov
ds
addr16
jp
sub
aas
jnp
lcall
fmull
jo
mov
push
into
cs
jb
pop
cmpsl
dec
pop
mov
bound
inc
pop
dec
and
pop
cmp
inc
loopne
cli
fidivl
cmp
fsubrs
jnp
imul
jmp
cmpsb
mov
adc
adc
mov
mov
out
push
enter
cmpsb
call
mov
adcb
sub
mov
std
sbb
xchg
addr16
dec
imul
xchg
pop
push
xor
inc
fistps
add
or
and
inc
pop
imul
add
in
pop
cmp
sub
lcall
sub
fldt
pop
xchg
pop
out
enter
fldcw
xchg
fsubrs
dec
mov
sub
xchg
jae
lds
dec
loopne
lock
push
cs
lcall
jg
outsb
aaa
pushf
fwait
and
xor
jecxz
fstpt
aas
shll
xor
push
push
jp
shrl
fsubrl
adc
dec
cmpsb
ss
push
mov
lea
imul
mov
pop
cmp
push
jae
or
dec
out
push
bound
jne
xor
dec
xchg
mov
pop
jo
ret
leave
jecxz
repz
loope
ficompl
daa
int
pop
inc
lock
ss
rcrl
lods
inc
fwait
pusha
test
push
ficompl
mov
pop
cwtl
es
push
jo
cli
jmp
adc
mov
pop
or
cmpsb
call
js
xlat
sub
pop
adc
pop
iret
sbbb
sub
insl
dec
inc
adc
mov
lret
jecxz
scas
adc
ljmp
idivb
test
lret
js
fistl
outsb
cltd
mov
or
pusha
jnp
aaa
dec
dec
push
int3
inc
pusha
sbb
ljmp
add
pop
mov
dec
pop
fstps
lahf
notl
push
add
mov
cmp
or
cli
push
sbb
dec
outsb
xchg
adc
in
imul
adc
cmpsl
inc
cmpb
xor
test
in
enter
mov
pop
inc
test
inc
mov
cli
cmp
xor
cmpb
mov
scas
mov
jmp
popl
pop
icebp
clc
sbb
cld
xchg
mov
cmp
dec
daa
arpl
mov
cmc
clc
sti
xchg
aad
sub
and
lret
cld
xlat
shll
sbb
jle
nop
cvtps2pd
popf
mov
popl
repnz
add
stos
ss
adc
loopne
je
adc
loop
rcll
cld
mov
cmc
push
mov
jo
inc
leave
fxtract
push
xchg
fmuls
in
std
imul
push
pusha
pop
or
test
popf
fistl
stc
or
insb
mov
pop
mov
mov
rclb
das
mov
addr16
jbe
lock
xor
dec
pop
aas
loopne
jb
push
aad
rcl
mov
jg
in
into
jl
pop
xor
cwtl
std
out
daa
xchg
maskmovq
testl
xchg
rcrl
jns
int
push
adcb
jo
scas
mov
div
push
les
mov
clc
jb
mov
mov
aaa
push
sub
add
inc
sub
adc
aaa
int3
push
in
rcrl
insb
jge
push
aad
inc
cli
inc
call
adc
inc
mov
push
lods
addb
cltd
sub
add
pop
lahf
sub
and
lods
aam
das
push
lret
jecxz
push
or
xchg
dec
pop
in
jge
lods
das
mov
fwait
out
rcll
add
in
dec
ds
addl
pop
xlat
popf
icebp
lea
jbe
into
cltd
lea
lahf
stos
mov
fcmovb
jge
arpl
lods
dec
sahf
packssdw
mov
clc
rorl
mov
mov
movsb
enter
aaa
sbb
jne
fst
testb
jl
out
push
lret
mov
pop
jp
ret
ja
into
gs
cwtl
ret
sub
mov
push
mov
pop
inc
cld
push
out
decb
mov
xchg
insl
out
rcll
mov
dec
sarl
stos
fcomp
negb
adc
or
xor
xchg
rorl
loopne
sti
jb
enter
jnp
icebp
sbb
sbb
sbb
push
test
add
outsl
add
jle
mov
gs
sbb
ja
cmpsl
call
jno
and
jno
jae
mov
popf
dec
sti
stos
call
mov
inc
mov
rcrl
cbtw
addl
out
popf
divb
mov
push
push
inc
adc
jmp
mov
sub
push
inc
pop
loopne
and
outsl
xor
lock
add
lret
data16
xchg
sub
jnp
ljmp
mov
cli
je
ja
rol
and
push
push
or
xor
mov
mov
add
arpl
cmc
test
sti
or
jmp
stos
cmp
mov
inc
repnz
mov
ja
into
sub
dec
inc
lods
mov
push
addb
cmpsl
and
sub
imul
sub
mov
push
dec
aas
push
out
add
jg
arpl
cli
jno
pusha
in
orb
cmc
mov
pop
sbb
jnp
mov
andb
fcmovu
clc
test
xor
push
aam
sarb
cmp
jp
out
stos
push
fptan
subl
or
jno
shrl
mov
jl,pt
out
out
ret
pop
sub
loope
push
orw
repz
test
add
add
cmp
mov
and
adc
sbb
xchg
mov
mov
test
xlat
adc
lret
dec
push
push
ret
bound
xchg
fnstsw
jmp
pop
stos
pushf
pop
xchg
hlt
cmp
ficompl
xor
xor
shll
cmp
dec
sbb
sbb
add
cmpsl
bound
cld
movsb
cmp
fsubrl
test
into
scas
mov
dec
in
stc
addr16
pop
xor
and
in
xor
mov
gs
or
insl
test
push
das
ret
lods
pop
pop
ja
shl
sbb
loop
adc
js
dec
jecxz
mov
pop
cmp
xchg
cmp
push
lods
shrl
sbb
fs
pop
arpl
add
cmp
fsub
jae
mov
cs
movsl
enter
sub
aaa
sub
orl
ljmp
cmpsl
mov
addl
mov
popa
jecxz
out
fcomp
cs
fs
or
into
fcmovu
push
mov
dec
push
sub
je
stc
cmp
pop
stos
sbb
pop
push
mov
jle
mov
adc
mov
mov
push
insb
push
or
jmp
addb
mov
xchg
add
mov
pop
mov
cmp
jecxz
xchg
cmp
adcl
xchg
sub
out
push
cli
test
jecxz
and
mov
pop
inc
mov
inc
pop
push
sub
sbb
std
rcll
mov
add
rcrl
movsl
push
test
mov
rcrb
inc
imul
aas
sbb
arpl
mov
xchg
jne
jg
jb
pop
sbb
ret
aam
ret
insl
inc
lcall
sub
cld
sbb
mov
shrb
xchg
xor
repnz
mov
inc
loope
xor
and
mov
sub
inc
int
dec
in
test
mov
stos
pop
jl
dec
xor
mov
inc
loopne
fcompl
and
cmc
mov
mov
add
stos
aam
fadds
inc
fwait
call
dec
push
mov
in
ss
ds
push
jle
jl
pop
jge
mov
push
mov
inc
out
in
out
pop
scas
and
xor
cmp
push
test
sbb
ds
fldcw
inc
or
cmp
ljmp
ljmp
scas
lea
ja
jmp
bound
inc
fsubrl
addr16
jmp
ljmp
xor
rcrb
mov
dec
in
jl
shr
testb
dec
jecxz
cltd
lret
xchg
out
inc
mov
xor
sub
clc
sbb
aad
std
or
cli
pushf
jnp
loopne
ja
jl
inc
aas
push
jp
movsb
mov
adc
shrl
mov
insl
add
popf
in
xchg
xor
out
mov
jo
test
mov
push
test
push
stos
xor
lds
cmp
iret
cld
iret
jge
movsl
cmp
mov
imul
pop
jno
repnz
pop
sub
je
aad
fidivrs
cld
adc
adc
into
lret
xor
cld
out
dec
sub
cmp
or
push
stc
sbb
das
pop
stos
xorb
sbb
or
shrb
out
outsb
movsl
notl
pop
mov
cs
ss
out
out
or
scas
dec
add
and
xor
pop
mov
sbb
pop
in
lret
outsl
push
sub
pop
aam
testl
jge
outsb
stc
cmpb
arpl
inc
inc
inc
push
test
jl
adc
fldenv
xchg
push
jbe
mov
jno
pushf
push
or
mov
stos
cmpb
aam
and
icebp
jbe
ds
je
jl
xchg
jno
ss
loope
and
in
fwait
enter
aaa
in
stc
setbe
jge
fwait
pop
test
mov
xor
inc
movsb
push
imul
mov
mov
andb
push
lods
test
cmp
mov
adc
inc
pusha
sbb
ja
mov
lds
push
jno
orl
cmc
jns
or
lret
mov
das
mov
popa
xor
rorb
mov
and
ror
sbbb
jae
sub
xchg
frstor
lock
jmp
std
shlb
ja
lock
std
or
mov
push
stos
rol
jne,pn
pop
xchg
das
pop
in
sbb
cmpsb
sahf
std
mov
outsl
lahf
ljmp
outsb
inc
stos
lret
movsb
push
ret
mov
iret
data16
jae
sbb
mov
cmp
les
mov
jecxz
adc
stos
aam
or
push
in
mov
loope
xor
dec
push
imul
out
jl
sub
jl
sub
mov
cmp
pushf
call
push
sti
mov
mov
movsl
cld
inc
mov
mov
loopne
imul
cmp
ljmp
clc
roll
add
testl
cld
dec
pushf
mov
pop
mov
movsb
mov
jecxz
jmp
adc
jp
pop
popa
stos
flds
sub
mov
and
xchg
jl
les
lods
mov
add
std
jo
mov
out
push
sbbb
push
jb
mov
push
mov
out
mov
cmp
pusha
test
pop
push
out
mov
or
push
mov
addr16
je
add
xor
ds
pop
xor
icebp
jne
daa
cmpsl
cs
outsl
clc
sbb
cmp
jl
inc
rorb
bound
xorl
iret
jp
add
rcrl
mov
xchg
enter
inc
outsb
lods
pop
inc
out
push
adc
in
mov
cmp
test
jne
insl
xlat
rclb
push
and
push
stos
cmc
adc
jge
push
xor
jo
stc
xchg
cltd
xchg
push
loopne
mov
das
inc
sbb
test
rclb
or
push
leave
and
pop
jp
popa
xchg
sbbl
arpl
mov
scas
fldl
sub
stos
ja
sub
sub
dec
inc
mov
cmpsl
adc
push
in
les
in
test
or
sti
fs
mov
stc
xchg
out
gs
adcb
cmpsb
aam
mov
jo
xor
push
jl
test
mov
pop
push
adc
cmp
ljmp
mov
xor
inc
enter
mov
js
or
aam
fsub
testl
cmpsb
data16
adc
scas
adc
cmp
add
and
call
mov
movsl
xchg
sub
or
jp
mov
push
add
mov
dec
or
mov
js
adc
xchg
stos
lods
divb
je
int
pop
mov
push
mov
add
inc
mov
imul
adc
mov
movsl
out
lcall
sbb
in
push
xchg
int3
je
cmp
push
je
jnp
fldl2e
inc
pop
fs
add
lea
sbb
mov
loope
rorl
mov
arpl
sbb
test
and
push
fnsave
sub
cmp
jmp
mov
push
popf
shll
call
xchg
outsb
jns
lds
loope
dec
cmp
or
and
sahf
cmpb
orl
cmp
aas
xchg
xor
lock
lret
xchg
sub
cmp
in
sub
subb
sbb
negb
outsl
fisubrs
fsubrp
ss
push
push
xchg
xor
mov
push
push
mov
push
xchg
add
leave
inc
cmp
mov
pop
hlt
adc
mov
icebp
scas
mov
mov
mov
push
data16
jp
sbb
mov
scas
call
test
hlt
arpl
jg
adc
adc
cld
mov
loop
mov
popa
jns
nop
push
mov
lahf
movsb
inc
cmpsb
sti
push
rcll
sbb
fldcw
sahf
push
out
pusha
ss
subb
cmp
jbe
push
enter
inc
inc
fstpt
fists
dec
mov
mov
prefetch
sbb
dec
jecxz
nop
adc
push
mov
dec
xchg
sub
sti
pop
mov
jl
mov
cmc
dec
stos
lods
inc
repz
popf
push
sub
shld
pushf
sbbb
xchg
jne
gs
pop
ljmp
fnstenv
and
add
cltd
and
mov
sbb
mov
cmc
lea
or
xchg
mov
sub
out
data16
or
xchg
jge
test
pop
aad
fsubrp
gs
kunpckwd
ss
mov
lcall
in
andl
push
negb
inc
xchg
jmp
inc
jb
and
mov
mov
stos
mov
lea
xchg
cs
adc
add
lret
mov
cwtl
je
sbb
daa
pusha
inc
jg
pop
repz
mov
inc
pop
js
xor
movsl
popf
push
pop
sahf
pushf
jb
rcr
dec
inc
lcall
movsb
jb
cmc
cmp
push
and
out
jl
inc
fnstenv
ja
rcrl
push
push
inc
dec
int
pop
xchg
movl
inc
jle
lret
popa
fs
out
sbbl
mov
sub
xchg
mov
jl
adc
outsb
mov
stos
pop
pusha
add
es
xor
loop
mov
push
imul
movsb
imul
mov
mov
scas
in
lds
mov
bound
xchg
xor
dec
cmp
addr16
xchg
sbb
insl
in
cmp
mov
pop
stos
cli
aad
sub
push
aad
pusha
incb
scas
pop
mov
insl
xchg
mov
mov
hlt
and
iret
sbb
dec
sbb
pusha
pop
push
bound
xor
xor
in
lock
jl
lcall
push
ds
clc
out
jb
stc
nop
mov
and
int3
jae
jg
cmpsl
call
push
outsl
hlt
cltd
decb
hlt
scas
mov
push
or
inc
jge
jae
popf
push
push
outsl
nop
or
xor
shrl
std
aaa
icebp
enter
gs
cmpsl
ds
push
or
fcmovne
pop
cwtl
je
int3
cmp
mov
sbb
std
push
les
es
lret
out
jnp
fsubl
push
shll
inc
or
xchg
or
push
repnz
xchg
gs
mov
fistps
push
out
mov
imul
push
adc
test
or
jp
adc
shlb
push
lahf
testl
stc
dec
mov
push
loop
fsubs
out
adc
mov
mov
or
dec
lock
and
xor
pop
dec
iret
jmp
lods
mov
icebp
test
outsb
rcl
mov
inc
mov
loopne
dec
adc
test
jns
mov
jnp
movsl
mov
jns
mov
sbb
cld
fstpl
rorl
jl
inc
and
mov
imul
fcompl
add
dec
and
adc
inc
xlat
fnstsw
imul
or
sbb
out
cmp
push
clc
mov
movsb
mov
aad
inc
cmpl
mov
int
and
aam
mov
scas
inc
and
cmc
outsb
aad
sbb
jbe
add
icebp
mov
dec
add
int
mov
or
lret
test
leave
mov
mulb
int
xchg
sahf
inc
pop
jb
ss
dec
shlb
inc
cli
pop
jmp
in
movsl
cmp
sbb
insl
fs
frstpm(287
add
or
mov
fcmovnb
nop
jecxz
repnz
push
mov
aad
inc
push
jb
and
xchg
xchg
pusha
cmp
in
or
mov
fmulp
lret
es
inc
xor
aas
call
push
into
dec
push
dec
sti
ds
dec
hlt
aas
hlt
std
mov
xchg
mov
mov
lods
mov
xor
fidivl
sbb
dec
dec
jns
out
stc
xchg
andl
jecxz
and
rcrl
add
jg
jne
outsb
push
push
sbb
fstps
jg
scas
js
lahf
cmp
jns
les
pusha
xor
outsl
lcall
push
stos
inc
scas
ffree
xor
icebp
movsb
scas
lods
or
cmp
adc
fdivrs
xchg
mov
cmp
mov
add
rclb
and
push
sub
ja
cmpsl
dec
inc
xorl
arpl
cmpsb
xchg
mov
push
push
pop
imul
mov
pop
outsl
imul
and
rolb
mov
push
push
push
jmp
lcall
add
pop
inc
mov
roll
mov
pop
std
sbb
repz
sub
mov
or
cmpsl
jle
xor
add
cmp
scas
xor
xchg
fsubp
pop
loopne
imul
xchg
aad
dec
and
dec
loope
into
leave
mov
out
dec
pop
shl
jle
imul
dec
leave
or
pop
js
iret
xchg
xor
lret
and
sub
fsubrp
mov
sbb
push
xlat
aaa
xchg
mov
cli
lret
cwtl
mov
xchg
mov
icebp
insl
or
stc
push
hlt
addr16
outsb
out
jne
repnz
inc
cs
andb
and
test
inc
out
cmpsb
fidivl
pop
in
pusha
xchg
jae
jae
cmp
popa
lahf
fbstp
fcoml
call
movsl
cmp
inc
fdivrs
push
cmp
push
xchg
push
inc
adc
cmp
cmp
sub
fdivrl
loope
jae
dec
scas
pop
jmp
nop
shlb
stos
mov
pop
stos
fs
cmp
xchg
mov
jle
pop
es
jecxz
xor
sub
pop
xchg
inc
add
mov
test
mov
jns
pop
and
faddl
fdivrl
andb
mov
es
or
xchg
and
fidivl
dec
dec
mov
pop
inc
test
insb
mov
clc
aaa
and
mov
cmp
popa
iret
cmp
and
pusha
test
adc
mov
cld
aam
test
insl
fimuls
out
inc
outsl
je
pop
jmp
data16
sbb
arpl
sub
push
test
shll
in
stos
sbb
aad
or
stc
outsb
stos
mov
push
jne
mov
cmp
inc
dec
mov
insb
fistps
push
fadds
push
adcb
pop
imul
stos
inc
fdivrs
enter
inc
ficompl
dec
call
lcall
dec
push
sub
mov
inc
mov
sub
daa
pop
cmc
jp
adc
add
or
jae
mov
int
imul
or
jbe
fildll
test
rcl
cmpsl
ret
add
mov
push
dec
ss
dec
pop
or
inc
cmpsl
jl
xchg
cld
out
cmp
cmpsb
popf
in
das
stos
jmp
out
xchg
aad
cmp
jg
in
das
repnz
dec
loop
clc
fcompl
add
mov
popa
cli
addr16
test
mov
data16
leave
and
je
arpl
xchg
aad
cmp
xchg
push
cld
aaa
mov
push
fwait
pop
mov
push
add
push
cs
insb
mov
mov
imul
mov
jb
push
sbb
xchg
test
icebp
js
insl
shlb
imul
adc
nop
ja
jge
cltd
xchg
inc
movsb
add
imul
dec
ret
mov
shr
loop
sub
orb
les
iret
fisttpll
lret
and
pop
loopne
insl
push
sub
inc
sbb
xor
clc
add
loope
cmpsb
xchg
je
mov
sahf
xchg
sub
loop
hlt
mov
xchg
cmp
ja
inc
cmp
cwtl
mov
inc
mov
outsl
fiaddl
imul
xchg
jmp
mov
push
js
inc
pop
cwtl
adc
dec
lock
cmp
js
xchg
xchg
popf
inc
adc
and
jbe
mov
mov
xchg
movsb
int3
sub
jmp
fisttpl
jno
outsb
sub
inc
add
imul
push
pop
mov
xor
pop
popa
ja
push
or
sbb
pop
ret
xor
add
add
xchg
xor
adc
jb
dec
stos
fs
imul
inc
das
jmp
in
sti
popa
mov
inc
push
lret
ja
nop
dec
sub
mov
in
jns
insl
and
inc
pop
fiadds
mov
pushf
push
in
lock
mov
add
or
cmpsl
pop
stc
mov
into
xlat
cmp
sbb
pusha
add
xor
popa
inc
inc
cmp
and
push
dec
arpl
sbb
inc
arpl
mov
std
push
cmp
ja
out
out
dec
pop
stc
in
pop
out
mov
sub
adc
mov
fucomi
sbb
sbb
fdivrs
mov
aad
mov
dec
das
inc
mov
ja
mov
or
add
lret
sti
fwait
outsl
push
inc
movsl
dec
adc
jecxz
loope
cmp
cli
adc
cmp
adc
sub
pop
mov
fsubrp
xchg
je
adc
jnp
inc
aaa
push
aam
lret
jb
mov
outsb
arpl
jp
add
lods
movsb
stos
sub
sub
sbb
mov
adc
pop
or
mov
dec
enter
out
divb
push
clc
push
clc
sub
xor
jg
jl
lret
jnp
jmp
jecxz
in
out
push
push
xchg
imul
mov
sub
jo
das
fsubl
out
arpl
sub
test
cmc
push
in
sarb
or
or
push
sbb
push
dec
sti
push
xor
push
arpl
jbe
sti
xchg
sbb
lret
cmp
mov
inc
mov
insb
jmp
outsl
sbb
mov
pop
gs
cmp
lea
pop
fcoml
mov
sub
aad
xor
enter
rcr
xchg
push
test
rorl
xor
push
jl
ds
dec
pop
xchg
mov
push
mov
sbb
pop
xor
testb
aaa
arpl
sbb
mov
adc
ds
xor
mov
in
cmp
jg
loop
ljmp
and
push
sbb
insl
dec
mov
push
dec
sub
sbb
dec
pop
jo
cmpsl
pop
movsb
mov
in
aaa
mov
xchg
scas
sub
leave
xor
jge
out
cmpsb
ss
cmp
xchg
mov
sarb
jle
dec
adc
push
push
mov
xor
lret
call
scas
fcoml
sbb
push
dec
xor
stos
std
cmp
jl
or
jl
into
stos
cmc
mov
ss
pop
loop
pop
ret
pop
push
adc
int
mov
hlt
jg
int
rcrb
xchg
leave
push
iret
addr16
sti
push
xchg
mov
popf
daa
inc
cmp
jl
inc
mov
dec
or
push
add
out
test
push
ret
mov
cmpb
addl
daa
dec
fadds
scas
xchg
pushf
movsb
mov
sahf
mov
shlb
stos
jbe
sti
push
pop
pop
xor
add
orb
dec
loopne
ror
aam
xlat
push
add
sbbl
sub
xor
cwtl
mov
jle
xorl
pop
xor
shlb
mulb
pop
out
sub
mov
popa
jnp
movsl
arpl
add
sub
fwait
and
clc
jg
xor
in
mov
xor
call
mov
pop
arpl
mov
outsl
mov
or
sbb
mov
or
lods
data16
ret
xchg
lahf
jecxz
sbb
adc
xor
mov
mov
shll
loopne
lret
arpl
hlt
xchg
mov
or
mov
or
mov
mov
stos
es
sub
jne
cmp
aad
ljmp
ret
xor
jecxz
aas
xlat
push
int
lods
aam
lods
mov
mov
xchg
dec
cs
daa
xor
enter
add
xchg
int3
mov
pop
in
push
mov
cmp
inc
lods
out
sbb
hlt
enter
xor
sub
inc
jge
cltd
mov
shl
or
js
inc
jnp,pt
cmpsb
test
dec
pop
xchg
add
pop
shl
cs
adc
movb
int3
lret
enter
data16
test
imul
scas
in
sti
stc
sub
pop
hlt
pusha
ret
fucomi
iret
pop
xor
int
mov
addr16
cld
cmp
pop
popf
bound
add
inc
mov
jo
jle
fisubrs
adc
repz
and
jb
fs
ficompl
sub
idivb
and
dec
add
test
xor
mov
pushf
mov
xchg
sahf
jae
je
nop
cmpsb
shlb
adc
aaa
repz
jno
jecxz
fdivrl
shrl
lds
jae
lock
xchg
lea
sahf
sahf
pop
cmc
fxsave
dec
or
adc
fs
ja
jb
imul
xchg
test
leave
mov
sbb
jbe
inc
fwait
push
outsl
sub
mov
sub
movsl
and
push
or
sbb
movsl
xchg
mov
es
into
cmp
xlat
mov
std
addl
cmp
and
addr16
nop
adc
jbe
negl
xchg
jge
sub
jb
mov
fwait
lcall
mov
lcall
hlt
inc
pop
cmp
dec
fst
sbb
ja
and
aam
inc
cmc
adc
adc
push
arpl
push
lods
adc
adc
push
cltd
push
dec
pop
lods
outsb
std
mov
hlt
pop
loopne
loope
mov
scas
inc
lock
daa
leave
xor
jp
dec
pop
add
andb
outsl
nop
pop
ret
rcll
imul
lea
shrl
lea
mov
incl
cmp
sub
mov
aad
jbe
sub
push
adc
add
ljmp
adc
dec
add
shl
outsb
sub
les
ljmp
movl
loop
or
mov
and
data16
lahf
ret
pop
out
push
sbb
adc
cmp
jl
xchg
cmp
and
daa
mov
fs
mov
andl
pop
add
mov
sbbw
arpl
dec
shlb
cmp
sbb
mov
mov
mov
aas
mov
xor
push
mov
lcall
inc
push
lea
or
stos
imul
cmpsb
or
aas
adcb
sbb
push
ud1
stos
xchg
cs
hlt
lods
test
shlb
or
mov
loopne
cmp
mov
and
fiaddl
ljmp
inc
pop
push
gs
repz
andb
in
lahf
mov
fldt
popl
scas
jo
jne
add
mov
and
mov
pop
lahf
test
int
push
rorl
sbb
jg
imul
cld
ret
jae
das
adc
out
call
lahf
xor
mov
rep
popf
aam
fisubrl
shll
push
or
imul
sub
cmc
mov
and
dec
test
mov
xlat
data16
or
add
or
cmp
push
jecxz
jle
mov
mov
clc
mov
out
inc
cltd
mov
push
jmp
push
adc
je
xor
jb
mov
stc
pop
pop
xlat
mov
or
sbb
sbb
xchg
cmp
or
xchg
mov
pop
loope
sbb
mov
pop
adc
imul
or
xchg
mov
or
pop
repnz
mov
pop
insl
xchg
cwtl
ret
xchg
mov
sbb
test
push
daa
lcall
or
push
outsl
inc
aas
movsl
inc
adc
dec
xchg
adc
cwtl
repz
imul
lds
inc
inc
call
xchg
push
mov
ret
daa
mov
push
testl
adc
orl
enter
insb
mov
pop
sbb
mov
addl
inc
lahf
imul
ret
and
fs
cld
and
sbb
xor
mov
cmp
cmp
or
rorb
fidivrl
and
das
inc
push
loope
lea
call
xchg
stos
and
cmp
mov
xor
lods
cmp
push
stc
sbb
movsb
jno
pop
test
rcr
push
stos
popa
cli
and
sub
dec
mov
dec
pop
out
arpl
lret
xchg
rep
add
dec
xchg
pop
rorl
cmp
sbb
ss
lock
push
push
decl
sub
and
sbb
lret
sti
add
dec
loop
test
jl
cmp
movsb
cwtl
jge
add
fcoms
incl
xorb
call
jne
sbb
jle
jmp
sub
stc
ds
das
push
mov
aad
sbb
xor
fld
popf
lods
sar
arpl
pushf
sahf
sub
sbb
call
or
pop
out
scas
das
mov
sarb
inc
lock
cmpsl
sbb
fimuls
das
inc
jmp
or
xchg
adc
popf
jno
mov
lods
and
xchg
scas
sub
pop
test
sbb
dec
es
jl
mov
lock
mov
icebp
push
ja
mov
inc
xchg
and
leave
xchg
sub
push
pusha
mov
or
xchg
inc
in
xchg
lldt
jge
pop
adc
inc
repz
call
and
les
push
inc
aad
xor
call
pop
mov
push
and
test
icebp
jnp
mov
int
dec
ret
or
es
insl
add
pop
in
movsb
sub
mov
lods
imul
or
push
clc
stos
and
mov
loopne
pop
popf
out
xchg
cmp
imul
cmp
aam
in
xor
xchg
pop
sbb
outsl
lods
outsl
fcomps
or
sahf
mov
xchg
fsubs
mov
or
orl
pop
stc
dec
jle
leave
aad
hlt
add
imul
fwait
xor
mov
fldl
dec
aas
loope
ret
dec
cmc
jo
cmp
stc
cmp
xor
repnz
out
dec
aad
hlt
jns
mov
ja
popw
or
xchg
pop
mov
jns
shll
jmp
mov
test
add
and
add
inc
pop
cmp
inc
arpl
sbb
imul
push
outsb
shll
xor
sbb
out
test
shll
leave
cltd
fisubrs
shll
repnz
fwait
test
icebp
fisttps
sti
das
cmpsb
mov
mov
fistpl
pop
fisubl
fidivrs
cvtdq2pd
dec
psrlw
insb
lods
dec
loopne
test
xchg
sub
loopne
pause
cmp
push
stos
enter
pop
inc
roll
lcall
mov
in
push
inc
mov
inc
mov
loop
push
fwait
ss
or
xchg
std
dec
xchg
pop
mov
or
inc
nop
scas
jae
orl
in
push
mov
jl
add
xor
push
push
cmpsl
push
ja
stc
je
adc
push
xchg
inc
xchg
scas
js
out
pop
rcrb
pusha
xor
mov
jp
pop
inc
jg
xchg
ret
in
mov
jbe
sub
aas
lock
popf
or
into
popl
bound
lds
jne
movsl
cwtl
pop
stos
mov
xor
pop
mov
adc
xchg
dec
movsb
push
jno
dec
rep
inc
in
fmuls
push
std
and
shr
xor
enter
movsb
outsl
sbb
loopne
jecxz
lcall
inc
movsb
cmp
fwait
rol
mov
je
xchg
gs
mov
in
inc
pop
stc
mov
adc
xchg
sub
mov
inc
adc
pop
add
mov
xchg
and
popa
nop
sbb
dec
mov
push
jmp
and
jo
iret
ss
xor
lock
cmp
sub
cmp
inc
pop
out
je
call
push
jmp
popf
popa
lods
leave
pusha
ficoms
out
lods
sarl
xchg
push
movsl
jl
pop
or
push
cwtl
daa
lcall
adc
scas
and
add
push
test
add
lcall
faddl
jno
mov
into
fistpll
inc
inc
sarl
in
int
jl
enter
mov
in
pop
fcmovne
cmp
jno
lods
mov
adc
push
sub
sub
sti
adc
ds
push
pusha
pop
lret
ret
and
iret
sub
in
sub
scas
xchg
push
or
add
ljmp
mov
into
xorb
cmp
mov
scas
sti
cmp
inc
imul
notb
movsl
sub
pop
xlat
in
aaa
or
jno
pushf
mov
push
sbb
jge
adc
jb
sarb
or
jp
ljmp
dec
nop
imul
jbe
aas
pop
xlat
outsb
leave
sub
cmc
adc
fcmovne
cmpsl
aas
insl
jg
popf
mov
inc
pop
or
and
push
arpl
movsb
addr16
jnp
scas
inc
sub
sbb
mov
mov
adc
cmc
das
mov
pop
inc
pop
outsl
ds
add
imul
push
adc
pop
pop
js
dec
adc
jle
add
mov
test
push
cli
mov
insl
sar
fldcw
adc
sbb
jne
jno
addb
xchg
sti
mov
cmp
jo
hlt
vpmulhw
repnz
cmpsb
mov
mov
into
shrb
fisubrs
aas
push
cmp
cmp
lahf
push
mov
bound
or
lahf
jns
test
cmpsl
xorl
add
jb
mov
xor
cmp
xchg
scas
add
jae
mov
mov
cli
inc
adc
or
dec
scas
loopne
aad
push
add
or
mov
roll
mov
call
inc
jnp
jmp
mov
rcl
shl
adc
lret
push
cmp
adc
fs
sub
xor
in
test
mov
pop
push
add
lods
push
adc
cmpsb
js
scas
imul
mov
cld
ret
push
mov
popf
pop
and
cld
test
mov
mov
cmpl
popa
sbb
xor
jae
leave
mov
fldenv
dec
cmp
es
cmpsl
sub
mov
xchg
cmp
fcoml
mov
lock
inc
and
dec
sbb
lods
adc
xchg
sub
dec
hlt
dec
or
loopne
xor
loopne
inc
pop
jp
stos
dec
cmp
mov
adc
inc
je
xchg
aad
xor
mov
ficomps
mov
add
in
rcrl
jecxz
into
lahf
jg
lock
adcb
push
sbb
loop
pop
jb
xchg
mov
cmp
pop
mov
jecxz
add
jns
int3
mov
pop
mov
pop
icebp
loop
movsl
lcall
mov
insl
dec
fs
adc
out
aam
inc
inc
fildll
push
push
lods
jo
push
pop
add
xchg
in
pop
sub
mov
dec
sarb
or
inc
mov
in
and
xchg
ret
sub
sub
sub
mov
mov
and
sbb
ret
outsl
repnz
push
push
mov
sbbb
mov
sub
inc
push
dec
inc
xchg
push
bound
iret
popw
jmp
and
arpl
out
inc
mov
dec
shlb
push
mov
and
ret
lods
adc
mov
ficomps
adc
push
popf
sahf
ljmp
xlat
imul
ret
sbb
daa
js
lods
sub
lret
add
inc
dec
lahf
adcl
xchg
add
cmc
out
jo
popf
fisubl
mov
out
mov
inc
mov
push
jne
test
dec
push
inc
mov
out
sbb
dec
scas
mov
in
popf
inc
or
mov
imul
fsts
jp
ljmp
xchg
mov
cmp
ss
test
repz
push
pop
fidivrl
adc
arpl
pop
lcall
cmp
negb
out
test
jecxz
lea
jg
jp
dec
pusha
testl
js
leave
mov
in
nop
cmp
cmpsb
loopne
adc
sahf
jbe
and
arpl
addr16
mov
sub
ljmp
push
mov
dec
repnz
pushf
xor
mov
call
shrb
aas
or
xor
inc
into
mov
xor
or
and
pop
int
pushf
stc
mov
mov
cltd
in
sbb
cmpsl
out
idivl
add
sub
lea
cltd
adc
mov
jle
mov
loope
lret
mov
pop
int3
sub
insb
xlat
xchg
and
mov
repz
rcrl
add
cmp
movsl
xor
outsb
test
fsts
dec
add
ja
mov
lods
inc
fwait
xchg
mov
sub
das
mov
rcll
pusha
dec
movsb
pop
jno
mov
ret
cmp
xor
jnp
inc
mov
popf
loop
mov
lock
inc
data16
push
lret
loopne
mov
loopne
popf
push
mov
sub
sahf
add
mov
jb
lea
insl
dec
fcomp
stc
repnz
inc
xor
inc
fdivl
adcl
test
mov
aas
loop
mov
mov
mov
add
subl
insl
shl
push
imul
lds
int3
add
xchg
adc
out
mov
add
sub
sub
call
xchg
push
push
sbb
xlat
jo
test
pop
push
iret
mov
icebp
inc
ss
push
jne
xchg
jns
inc
shrb
pop
mov
mov
in
mov
xchg
int3
es
stos
in
sbb
loope
inc
pop
dec
push
mov
adc
movsl
outsb
push
xlat
or
data16
mov
test
push
lret
sahf
push
cmp
cmpsl
sbb
dec
sub
shrl
push
xor
adc
sub
inc
sbb
jb
fdivl
push
loopne
sub
pusha
xchg
daa
mov
pop
pop
adc
ret
rorl
mov
out
sub
jb
shll
test
fnstsw
mov
pushf
or
push
cmp
push
jns
dec
aas
out
aam
sub
inc
aaa
mov
xor
movsb
in
lret
bound
mov
jmp
pop
ret
mov
sbb
in
push
mov
sub
daa
cmp
sub
dec
pop
xor
sbb
movb
arpl
rcrl
lods
or
lea
xchg
add
mov
xor
in
sub
fwait
sub
mov
xchg
sub
lods
repnz
mov
xor
pop
jno
inc
fisubrs
sti
loop
data16
cmp
shl
jmp
dec
lret
xor
pop
test
insl
mov
push
in
scas
repnz
xchg
and
xor
int
cwtl
int3
xor
jnp
push
rclb
cmp
popa
pop
fdivs
jne
dec
xchg
cmp
xor
or
xor
ds
adc
inc
push
add
mov
js
fsubrl
loop
xor
loope
icebp
sarl
js
jno
pusha
add
fdivrs
jbe
push
or
stos
call
ljmp
testb
mov
std
jne
xchg
ja
inc
ja
cli
iret
fisubrl
or
bound
pop
in
leave
jecxz
jae
cwtl
call
std
jo
push
push
push
out
mov
je
inc
cmp
mov
loope
clc
fcmovu
cmpsb
jge
call
add
mov
inc
mov
out
mov
in
cwtl
out
mov
lods
xor
jb
pop
dec
sbb
jg
mov
xchg
out
sub
mov
mov
xchg
sub
xchg
les
dec
ret
dec
pop
mov
sti
jmp
mov
sbb
jp
mov
jae
out
in
or
ret
in
cmp
cmovns
inc
and
lods
jno
cld
enter
xchg
cmpsl
cmpsl
xchg
push
add
outsb
mov
pop
mov
dec
test
adc
jno
and
arpl
dec
or
push
sahf
jo
mov
push
mov
xchg
push
rcrl
addr16
jg
lods
nop
xchg
cwtl
loop
lcall
pop
movsl
repnz
outsl
aaa
pop
les
daa
mov
subl
sub
leave
pop
popa
inc
add
jo
sbb
or
bound
ret
shr
adc
xor
cs
mov
sbb
sbb
add
lea
bound
fisubrl
rol
xchg
cmpl
leave
xor
cmp
xor
dec
add
mov
nop
pop
insl
orl
push
lea
fcomip
sub
outsb
jmp
addl
fbstp
xchg
fistpll
cli
out
mov
and
push
sbb
lea
stos
inc
and
stos
inc
and
xor
cld
or
test
roll
mov
das
cmpsb
sbb
and
aam
xchg
subl
adc
or
mov
inc
xorl
dec
loop
nop
adc
jl
add
mov
call
and
xor
daa
fnstcw
stos
repnz
ret
js
scas
dec
ljmp
inc
cwtl
xchg
cmp
mov
or
nop
push
push
sub
inc
mov
push
and
jno
cmpsl
push
push
insb
adc
fbstp
mov
clc
sub
mov
push
nop
addr16
jbe
inc
mov
hlt
inc
xor
pop
mov
fstl
movsl
cmp
adc
aas
filds
es
dec
and
pop
clc
rcrl
adc
pop
fcompl
cmp
in
rcrl
xor
mov
fcompl
xchg
mov
lret
fistpl
stos
inc
sysexit
loope
lock
lret
clc
nop
adc
adc
lods
xor
cltd
inc
fisubrl
aaa
adc
rorb
dec
sbb
mov
jne
xchg
adc
and
pop
call
xor
jmp
sbb
lret
jnp
pop
movsl
mov
lcall
add
pop
sub
gs
outsl
pop
hlt
in
adc
xor
xchg
add
rcl
lods
add
xchg
push
pop
test
in
loopne
out
xchg
xchg
inc
pop
mov
and
scas
adc
or
es
pop
mov
pop
and
add
xor
test
inc
icebp
addb
testb
push
mov
xorl
add
popa
aam
sub
ja
pop
sub
scas
xor
add
xorb
pop
push
es
or
cltd
and
cmp
pop
arpl
xor
lret
xchg
mov
inc
cs
xchg
jno
mov
call
bnd
jle
mov
lea
shrl
lods
xchg
cli
shl
into
mov
shld
andb
push
jae
xor
mov
inc
popa
cmp
jae
and
sbb
roll
clc
stos
cld
movsb
lods
aas
aad
mov
push
das
fistps
call
push
cmpsb
inc
out
jns
adc
lods
xchg
jecxz
pop
lods
rcl
sub
sti
adc
call
andb
lret
xor
or
pop
insb
jns
mov
fimull
mov
mov
ret
jno
sbb
xchg
push
mov
xchg
sahf
jo
fistps
cmpsb
push
cmp
popf
lods
gs
pop
fwait
mov
mov
int
inc
xor
cli
xor
stos
sbb
test
iret
rcrl
mov
shl
das
mov
push
arpl
xchg
sub
adcl
sub
sub
ss
sbb
mov
fimuls
dec
scas
jp
mov
push
pop
sbb
dec
pop
adc
ds
addr16
inc
sub
outsl
pop
movsl
mov
fidivrl
sub
arpl
jp
adc
test
inc
sbb
imul
lcall
loope
and
out
push
les
mov
or
repz
dec
int
jp
ret
aad
adc
movsl
mov
das
xchg
mov
gs
mov
jmp
mov
mov
adc
and
push
pop
pop
loop
dec
jb
add
push
mov
xlat
sub
jbe
and
lock
xchg
and
cmp
in
test
cli
sbb
fld
or
pop
adc
push
jge
pop
stos
cmp
shrl
test
mov
arpl
add
mov
dec
scas
pop
int
loope
es
cmpsb
out
fidivl
pop
mov
lods
rclb
add
popa
stos
jae
cwtl
or
mov
popa
xor
leave
ret
out
push
jo
add
sbb
add
pop
add
test
pop
popa
inc
push
imul
cmp
sbb
imul
dec
mov
adc
dec
popa
sti
pop
pop
xor
sbb
test
sti
into
test
arpl
fwait
push
sahf
orl
fadds
mov
fistps
loope
push
adc
sahf
stc
inc
inc
stos
mov
test
or
pusha
sbbb
cmpb
mov
or
mov
ds
mov
ret
ffree
mov
sub
mov
pop
mov
jns
rcrl
jbe
in
pop
adc
pop
and
test
jb
stos
mov
lahf
xchg
stos
jbe
push
xor
and
and
leave
pop
cmp
stc
add
sbb
mov
pop
sbb
iret
push
mov
or
shr
xchg
dec
xlat
sbb
imul
addr16
ljmp
stos
arpl
cwtl
xchg
int3
xchg
sub
shll
add
sub
jecxz
adc
fildl
out
je
gs
call
ljmp
xor
in
dec
pop
jns
adc
ds
pop
pop
imul
jns
imul
push
cmpsb
jno
lcall
out
std
pop
and
adc
pop
inc
testb
inc
xchg
ja
inc
repz
or
in
or
lahf
sub
push
cltd
xor
loope
mov
push
mov
sub
sti
mov
call
aad
dec
fwait
pop
dec
fcoml
lret
fistps
push
xchg
movsb
pop
add
ret
jl
cmpsl
out
and
ss
stc
push
jmp
div
fs
mov
sbb
and
cmp
adc
imul
xor
cmc
mov
sbb
rcr
out
xchg
inc
mov
inc
xor
push
js
pushf
outsl
sti
push
jmp
leave
into
jns
xchg
jmp
rcrl
xchg
repnz
push
pop
push
mov
adc
mov
sahf
inc
enter
sub
pop
fstl
push
add
inc
sti
lods
sub
sbb
add
sub
and
adc
dec
cltd
xor
push
jmp
adcl
or
gs
pusha
icebp
and
lods
call
xor
sahf
or
jns
fildll
lock
in
arpl
in
test
inc
aad
dec
sbb
inc
les
xchg
push
fsubr
jae
mov
fs
jno
jmp
add
mov
fs
daa
or
nop
push
icebp
fwait
outsb
scas
adc
jmp
mov
repz
inc
lahf
lds
mov
ror
jo
into
fimull
jbe
mov
adcl
enter
or
shll
dec
push
cmp
or
cmp
negl
rcrb
loop
mov
push
ret
fisubl
add
movsl
inc
scas
mov
frstor
enter
cmp
in
and
stos
lahf
cmpb
inc
test
loopne
xor
mov
incb
pop
adc
adc
cld
add
xchg
out
and
or
mov
xor
ret
mov
sub
adc
stc
xor
pushf
data16
and
ds
lock
and
jmp
push
lcall
cmp
cs
mov
push
aaa
pop
fsubrs
fst
cmp
testb
jne
bound
cmc
and
pop
fstpl
icebp
mov
test
inc
pusha
lock
inc
sub
mov
mull
insl
cmpsb
push
pop
and
sbb
sbb
mov
adc
test
cltd
jae
mov
es
lcall
mov
xor
xorb
shlb
aaa
dec
out
mov
jns
fstpl
test
inc
pop
sub
lods
int
into
les
mov
mov
pop
loop
sbb
mov
add
jmp
lods
or
mov
loope
mov
sahf
cmp
mov
mov
pop
adc
inc
insb
lock
dec
in
pop
cld
and
mov
adc
clc
add
push
xchg
pop
push
pop
jbe
aaa
das
inc
mov
enter
push
xchg
data16
sahf
xchg
pop
popf
int3
clc
je
jle
incb
cmpsb
jge
lret
xor
add
loop
setp
scas
stc
and
cmp
sahf
outsb
xor
aad
popf
int3
ss
fnstsw
xlat
ljmp
mov
hlt
and
fmull
addr16
and
push
roll
sub
ds
push
fiaddl
cmp
daa
xchg
sarl
mov
cmpb
push
imul
stc
push
sub
sahf
imul
icebp
add
stc
xor
cmp
aaa
push
inc
es
xchg
loop
movsl
jmp
or
or
pop
pusha
mov
xchg
stos
icebp
push
jo
cmpsl
repnz
push
daa
outsl
fdivp
xlat
insl
movsl
pop
push
inc
xchg
outsb
hlt
mov
movsb
push
pusha
pushf
test
cmp
fisubl
push
mov
jmp
add
ds
mov
test
ficoms
scas
or
push
aaa
data16
scas
and
pop
jmp
aaa
sub
push
mov
inc
sbb
or
cltd
fdiv
test
into
add
lret
sahf
popa
jmp
cltd
out
or
gs
inc
jne
arpl
inc
mov
xchg
movsb
xchg
lods
mov
push
lcall
stc
mov
dec
pop
push
daa
pop
sahf
add
pop
pop
repz
les
clc
es
and
or
out
cwtl
das
loopne
clc
iret
in
dec
fisubs
adc
mov
xchg
inc
test
sub
movsb
jl
lock
test
jbe
push
incl
dec
dec
jns
cmp
inc
neg
shlb
daa
int
push
roll
lret
fstp
sub
movsl
vunpcklpd
mov
xchg
loopne
push
lahf
jbe
jmp
cmp
js
and
ss
setbe
popa
mov
adc
or
inc
inc
sbb
fisubrl
dec
test
inc
mov
sbb
xchg
inc
rorb
stos
add
scas
dec
xor
add
insb
mov
xchg
lret
dec
clc
sahf
aas
addr16
cwtl
pop
jecxz
or
or
inc
xor
push
dec
adc
xor
mov
adc
ffreep
cmp
cltd
cmpsl
push
lcall
fdivrs
pop
loopne
loope
inc
mov
mul
test
cmp
cmp
xor
jg
fcmovnu
xchg
and
jae
cltd
das
jecxz
sub
les
cmc
cmp
rcll
lcall
repz
push
or
dec
lret
lahf
adc
push
rcll
sahf
inc
mov
fs
dec
iret
or
mov
xchg
aaa
hlt
add
les
jno
jmp
orl
mov
add
test
dec
out
stos
or
mov
daa
mov
mov
jns
adc
lahf
fdivl
xlat
scas
test
es
xor
inc
sbb
lret
mov
stos
push
inc
sbb
pop
mov
insb
sbb
lcall
std
inc
movsl
pusha
push
stos
jne
push
sahf
arpl
pushf
add
dec
int3
inc
sti
adc
xorb
pop
push
ljmp
cmp
fsubl
fbld
dec
fcmovu
sub
aad
popa
sbb
inc
shl
push
mov
aas
or
lock
lods
adc
mov
push
jnp
push
les
adc
dec
and
push
lock
sahf
xchg
mov
nop
lds
pop
out
clc
test
ljmp
jmp
in
in
stc
add
or
inc
lcall
lret
cmc
xor
sub
sbb
cltd
xchg
ja
push
sub
dec
loop
inc
call
lock
mov
sub
fwait
cli
xchg
pop
cmp
test
mov
fcoml
jl
jl
mov
in
adc
mov
lods
sub
jne
mov
pop
jg
js
and
loope
dec
pop
mov
push
mov
cli
fnsave
fstps
dec
js
jecxz
popa
clc
das
add
cld
outsl
cli
add
outsb
test
fidivl
adc
add
add
mov
mov
fistpll
xor
mov
ljmp
int
add
xchg
sbb
fsubrl
mov
lods
xchg
and
out
fstl
scas
xchg
sub
rcr
cmp
xchg
push
fimuls
sbb
ret
aad
mov
out
mov
push
jge
mov
lods
and
mov
fldcw
lock
adc
pop
jmp
adc
std
and
movsb
push
or
test
outsb
stos
inc
loopne
mov
add
gs
enter
sti
outsl
loop
mov
pop
movsb
rorl
movsl
mov
inc
stos
nop
xor
jp
out
in
mov
pop
nop
popa
xor
add
mov
jp
incb
mov
adc
sbb
push
pop
fnstenv
cmpsl
cli
int
lret
jp
popf
inc
loop
pusha
clc
ss
cmp
add
sub
pop
jg
jb
jg
sub
dec
daa
pop
lret
inc
fists
pusha
mull
pop
dec
adc
fsubs
fistpl
stos
mov
fidivl
add
pop
push
mov
rcrb
pop
jle
xchg
xchg
cmp
or
and
in
xchg
dec
lea
paddb
test
sbb
inc
mov
mov
stos
lds
test
mov
add
in
das
xcrypt-ecb
cmpsl
mov
add
xchg
push
ljmp
and
popf
push
xor
fisubrs
fdecstp
mov
push
in
dec
add
mov
pop
or
add
mov
pop
fstpt
divps
mov
jno
cmpb
mov
shr
lret
int
fs
cmp
and
xlat
push
adc
or
cmp
jecxz
dec
sarb
movsb
jnp
mov
and
sahf
cwtl
cs
adc
sub
mov
adc
jmp
jge
mov
mov
hlt
push
and
rorl
imul
pop
adc
cmpsl
test
add
xchg
pop
sbb
inc
adc
pusha
inc
dec
push
push
test
dec
aas
out
mov
sbb
xchg
inc
mov
shlb
pushf
sub
lock
fidivl
testb
aaa
cld
psubd
enter
push
out
inc
cmpsb
pop
in
and
add
fwait
pop
hlt
sar
mov
jle
shll
xor
aam
cmp
jge
xchg
sbb
imul
xor
mov
leave
push
sub
add
dec
into
xor
adc
insl
xor
xor
arpl
xor
jge
mov
add
dec
sub
sbb
mov
cmp
jle
in
dec
push
lcall
sub
mov
cmpsl
lea
out
pushf
push
outsb
sub
push
and
push
das
popa
mov
ret
push
mov
pop
popf
test
mov
mov
cmpb
call
cmpsl
jecxz
pop
jp
mov
jl
and
and
loopne
cs
out
das
cmp
inc
lcall
repz
ljmp
push
imul
lea
or
movsb
lcall
mov
push
xlat
lods
pop
xchg
mov
xor
or
sub
hlt
push
and
sbbl
jecxz
mov
sub
sarl
jmp
mov
mov
jecxz
inc
mov
loope
test
enter
dec
push
inc
inc
lcall
and
cmp
aas
push
test
loop
mov
or
mov
mov
out
mov
les
cmp
fdivl
sahf
pop
jmp
jnp
xchg
xchg
mov
sbb
imul
into
pop
sti
sbb
mov
jo
add
mov
push
push
jbe
shl
cltd
xchg
jns
lods
mov
cmpsl
sbbl
sub
pop
lahf
push
push
pop
mov
cmp
mov
jp
pop
jmp
movsb
call
push
and
pop
jnp
mov
sahf
mov
mov
ret
lds
dec
mov
mov
jg
mov
sub
ss
dec
stos
lods
ja
pop
test
stos
ss
ljmp
sbb
mov
jb
out
int3
popf
push
loopne
stos
outsl
push
fldl
dec
mov
in
xchg
rclb
fimull
mov
int3
shlb
or
xor
int
xchg
sub
cmpsb
clc
leave
divl
inc
inc
and
lock
dec
loope
sahf
inc
jmp
rep
jno
xor
or
sub
xchg
sbb
pop
mov
mov
addr16
shlb
pop
adc
cmp
push
insl
ret
lock
sbb
fldl
inc
shlb
and
jl
adc
mov
in
pop
jae
std
sahf
xor
lods
sub
jno
push
rcrb
jge
fiadds
pop
sbb
cwtl
das
scas
sub
push
sbb
dec
add
add
pop
cmc
sbb
jl
addr16
push
lods
xchg
adc
cwtl
cmp
out
xor
jo
dec
in
cmp
push
test
and
pop
ljmp
sti
pushf
aas
mov
scas
arpl
push
int
ret
add
in
lods
dec
add
cli
dec
lods
inc
jl
mov
and
aad
mov
sahf
test
push
mov
pusha
loope
cmp
dec
xor
stos
addr16
jno
lret
mov
push
adc
repnz
cmp
sub
xor
pop
cld
sbb
or
lds
fdivs
ret
test
jmp
daa
stc
or
mov
sub
loope
movsb
shrb
or
call
xchg
lods
xor
push
call
js
inc
pop
aaa
pop
in
fwait
pop
and
icebp
mov
push
fs
aas
xchg
lods
or
lods
and
cmp
negb
repz
fwait
adcl
xor
sub
ret
inc
push
popf
icebp
mov
ret
dec
ljmp
mulb
popa
mov
cmp
data16
add
sbb
mov
cmpsb
cmc
stos
push
jl
mov
inc
sbb
outsl
shrb
out
lcall
hlt
shl
aad
out
push
or
cmp
jne
in
sbbl
outsl
jns
add
data16
xchg
ss
cltd
jo
mov
negl
mov
rcrb
push
mov
xchg
mov
into
adc
ja
mov
pop
jo
popa
lods
orb
cmp
dec
movsb
leave
push
jo
fidivl
xchg
push
pushf
sti
sti
mov
das
adc
mov
mov
imul
push
mov
stos
fcomps
addr16
mov
inc
rorl
add
xchg
push
aam
pop
ror
push
push
push
dec
mov
subb
nop
lds
sahf
ljmp
xor
mov
adc
inc
loope
cmp
sti
jbe
scas
fsubr
das
ret
ret
dec
ss
imul
mov
dec
bound
fwait
inc
outsl
in
jae
orl
dec
leave
jge
jbe
sub
cwtl
js
popa
mov
sahf
inc
cmpsl
sbb
xor
shlb
sbb
aas
mov
dec
mov
adc
jg
aaa
into
mov
dec
pop
or
push
mov
loop
sub
ds
out
mov
fidivl
repz
dec
repz
cmp
mov
mov
mov
cli
dec
sbb
mov
jge
xor
and
xchg
or
imul
fldl
dec
sub
cld
lcall
push
jg
cmp
cmpb
xor
sbb
mov
pusha
popf
fs
add
out
jo
cmp
fidivrl
loop
aas
push
add
xor
scas
mov
mov
sub
push
aas
shrl
out
push
pop
jo
mov
fwait
cmc
mov
mulb
jl
mov
ss
shll
arpl
into
popa
cmp
xor
cmp
in
out
inc
xlat
add
mov
cltd
out
lret
cld
adc
fwait
aad
nop
daa
enter
mov
fbld
jns
rorb
push
scas
pop
out
notb
cmp
stc
popf
push
cmp
mov
insl
lods
push
lods
mov
pop
xor
stos
insl
scas
inc
adc
push
out
call
outsb
lahf
sbb
push
sub
cmpsb
clc
pop
scas
out
adc
xor
xlat
inc
sbb
xorb
pop
mov
adc
ret
je
jb
mov
loop
arpl
rolb
dec
punpcklwd
dec
xor
out
pcmpgtb
jmp
or
ds
ficompl
nop
fisttpll
push
jno
mov
mov
mov
inc
jno
or
bound
daa
adc
rcll
cmpsb
sub
call
jae
icebp
das
xchg
sbb
jmp
inc
ja
pop
shll
ret
mov
adc
jns
arpl
push
mov
cs
test
pop
xchg
sub
mov
mov
pop
lcall
clc
popl
das
push
leave
mov
insb
jmp
sbb
out
aas
les
or
jnp
mov
stos
jmp
adc
and
ret
dec
rcrb
rcrb
pop
and
dec
sarl
pop
push
or
inc
clc
mov
stos
es
addr16
rcll
or
pop
dec
fmul
jno
push
sub
add
inc
shll
mov
jno
jbe
lods
xor
cmp
fsubs
inc
pop
fstps
out
das
xor
insb
xor
call
lea
scas
jle
xchg
pop
mov
mov
mov
sbb
mov
aaa
cmc
sub
push
addl
xor
out
sti
add
cs
or
and
mov
lds
mov
jno
or
jns
push
dec
inc
in
mov
insb
xchg
mov
or
and
and
add
sti
mov
fyl2xp1
pop
dec
nopl
xchg
jne
movsb
xor
mov
loope
pop
shlb
leave
dec
out
xchg
push
pop
inc
adc
xchg
inc
mov
in
out
out
int3
dec
adc
sbb
inc
ds
add
inc
sub
or
les
mov
loop
adc
push
xor
frstor
pop
mov
lcall
mov
mov
ret
inc
movb
xchg
dec
mov
addr16
sbb
aas
jmp
or
int
sbb
lods
std
adc
daa
sbb
mov
sti
repz
ss
xlat
mov
sbb
mov
push
jbe
cmp
jge
push
and
push
mov
ror
popf
jb
sbb
jp
push
in
adc
leave
xchg
add
inc
mov
pop
in
cmp
mov
sarl
jne
cmc
or
scas
je
movaps
mov
or
lahf
mov
jo
mov
shl
sbb
movsw
in
repz
scas
subl
or
popa
dec
jbe
inc
and
mov
cwtl
inc
into
and
into
mov
loopne
pop
fdivl
jmp
mov
cmpsb
sbb
push
mov
adc
insl
jnp
out
ficoml
sbb
xchg
mov
fldt
mov
jb
xchg
pop
pop
cltd
popa
jecxz
inc
cmp
jecxz
loope
xchg
cmp
cmpsb
and
repnz
aas
lret
cmp
test
sar
dec
pop
insb
enter
movsl
sbb
pop
xorb
fs
mov
adc
xor
out
bound
out
push
jo
aam
cltd
stc
push
ret
xor
ljmp
add
fwait
pop
sub
mov
js
inc
mov
cmp
scas
outsb
and
adcb
add
and
les
loope
lahf
push
dec
aas
push
div
fmuls
pop
add
cld
xchg
and
push
sbb
or
rcrl
dec
rol
and
mov
or
pusha
outsl
andl
add
cmp
xor
shll
pop
mov
cmp
ds
mov
or
inc
ss
xor
jmp
adc
inc
dec
bound
rolb
mov
push
mov
xor
xor
aam
push
or
push
mov
push
xchg
xchg
push
jle
movsl
icebp
aam
int3
lods
repz
or
sub
lea
sub
inc
add
in
and
cmp
outsb
cmp
iret
movsb
sub
rcr
call
jns
daa
xor
fs
out
fadds
sub
or
cmc
lret
jmp
scas
cmp
mov
mov
push
pop
push
dec
sub
dec
inc
dec
dec
mov
or
sub
lahf
jnp
jbe
stos
jp
fmul
jl
fisubs
adc
mov
inc
dec
inc
mov
mov
sub
add
dec
out
in
sbb
sbb
out
dec
xor
inc
gs
por
mov
jne
jge
pop
jecxz
sub
jle
aam
sub
insl
fistl
add
sti
inc
shll
inc
mov
xor
ret
cmp
inc
stos
pop
inc
call
sub
dec
fdivs
or
jle
jmp
jle
std
je
pop
cmpsb
push
pop
repz
dec
data16
imul
mov
dec
cltd
test
mov
xorb
and
cmp
inc
in
popa
test
sub
mov
pop
sub
nop
dec
sbb
inc
add
xchg
addb
lds
loope
xor
jge
fidivs
mov
ret
jge
std
and
pop
mov
or
xor
mov
push
add
test
rorb
mov
add
xchg
rorl
jb
jecxz
sbb
es
aad
add
ja
mov
pop
pop
mov
sbb
push
xchg
ss
loope
mov
cmp
sbb
jecxz
popf
cltd
sub
or
ds
mov
aad
scas
inc
in
cmpsl
jp
inc
push
jp
enter
cmp
pop
push
lods
mov
sub
leave
pusha
sub
push
jae
jmp
push
shll
cmp
push
insb
add
inc
pop
xchg
xor
dec
sub
mov
popa
loop
les
addr16
hlt
pushf
jl
arpl
out
outsl
push
inc
xchg
mov
out
leave
push
xlat
cli
and
jbe
sbb
fcomps
orl
push
cli
or
hlt
sbb
dec
jne
mov
adc
pop
xor
mov
push
xor
push
pop
mov
mov
fwait
insl
xchg
pop
jo
xor
sub
pusha
pushf
inc
lods
loope
xchg
ja
and
popf
arpl
out
outsl
aas
dec
mov
pop
push
mov
je
dec
jecxz
ficoms
mov
andl
sbb
mov
sbb
mov
lahf
outsb
mov
shlb
aas
dec
adc
push
or
outsb
inc
inc
das
stos
xchg
popa
addr16
jns
scas
movsl
inc
add
lock
int3
and
cmp
sub
add
cltd
cwtl
das
lret
mov
mov
lcall
xor
add
fldt
or
inc
adc
cmpsb
rclb
imul
cltd
push
mov
ficomps
inc
test
cmpsb
cltd
popa
ret
pop
fdivrs
mov
orb
mull
adc
xchg
pop
mov
add
mov
push
and
mov
clc
nop
pop
push
xor
lahf
loope
mov
sub
sarb
pop
jp
pop
push
mov
mov
clc
les
sbb
cmp
std
imul
inc
sub
sub
pop
or
xlat
shlb
xor
push
arpl
pop
jno
adc
sub
fistpll
cmc
lcall
sub
loop
inc
bound
stos
movsl
inc
adc
push
out
sarl
mov
cmp
sub
cwtl
sub
sub
mov
mov
fmuls
jo
adc
push
imul
lea
xor
test
stos
push
fidivl
cmc
ss
jbe
xor
mov
push
ret
loop
jns
jl
push
mov
xchg
out
jb
rorb
roll
and
imul
and
mov
mov
inc
or
xchg
sub
dec
loope
lock
into
mov
in
cld
or
outsb
sbb
sub
or
mov
jle
cmp
cltd
xchg
dec
push
xchg
imul
repz
ss
xor
mov
movsb
dec
aad
mov
mov
dec
mov
inc
cmp
and
aam
sbb
dec
dec
jmp
shrl
mov
push
test
and
jae
adc
xchg
mov
les
pop
call
sti
cmp
sbb
ret
ret
adc
cmpsb
psubsb
and
sub
inc
sbb
jmp
xchg
sbb
test
stos
lret
sbb
adc
addb
data16
dec
imul
mov
rcrb
leave
mov
cmp
jnp
fbstp
or
jo
push
or
pop
pop
mov
je
cmpsl
dec
push
mov
push
mov
pop
fisubrl
mov
or
mov
loope
mov
dec
push
popa
push
cli
sbb
pop
popf
test
shl
loopne
movsl
xchg
inc
filds
xor
in
test
les
sub
std
push
iret
scas
mov
pop
dec
inc
int
or
sbb
jno
jp
cltd
arpl
sub
aas
daa
cmpsb
cli
dec
shll
pop
inc
jle
push
outsb
lock
xor
fidivs
aam
lret
and
js
ret
pop
inc
sbb
lods
je
pop
xor
mov
imul
mov
and
mov
xchg
movsl
loopne
ss
inc
data16
hlt
mov
fisttps
and
pop
pushf
sub
jg
dec
insl
test
lock
into
in
mov
add
mov
nop
xor
iret
fldt
fwait
cmpsl
sub
call
cmp
cld
aaa
mov
sbb
mov
dec
cmp
cld
ret
repz
call
out
hlt
push
xlat
lea
ljmp
inc
decb
and
adc
cmp
imul
push
and
xchg
inc
aaa
sbb
dec
push
add
jle
fdivl
popf
fnstcw
push
mov
mov
pop
gs
ret
hlt
add
mov
mov
fsubrl
shl
shrl
or
arpl
pop
out
test
pop
mov
jb
movsb
push
mov
sub
or
mov
fcompl
xor
mov
fldt
push
mov
dec
std
pop
fsubr
sbb
inc
xlat
popa
jb
ja
std
test
subb
jo
shlb
addr16
push
cmpsb
repz
push
test
jmp
dec
std
movsl
add
mov
adc
nop
cmp
push
xor
cmp
lcall
imul
push
add
mov
fdivr
pop
stos
jne
aam
movsl
lds
enter
daa
or
push
repnz
in
arpl
lea
int
rcrb
xchg
xchg
rcrl
in
xchg
push
and
sbb
ror
adc
mov
rorb
jp
pop
add
sub
push
pop
rcrb
leave
mov
jns
or
xchg
test
jle,pn
pop
je
fisubrl
or
clc
sahf
in
lret
cmp
mov
fisttps
jl
mov
and
xchg
mov
das
jle
mov
xor
push
rcll
popa
enter
mov
mov
aad
fstpt
xchg
push
pop
enter
fidivrs
sahf
dec
sub
test
pop
or
mov
sbb
sarl
lea
dec
dec
subb
xchg
push
xlat
push
mov
jne
and
cmpsl
xchg
das
leave
pop
mov
mov
out
shl
jb
dec
loopne
cwtl
mov
dec
ss
jle
rcrl
pop
lock
sbb
xchg
xchg
inc
icebp
jg
dec
loope
pop
divl
hlt
mov
sahf
xchg
add
adc
cli
xor
fidivrl
push
outsl
cmp
sarl
sahf
lods
cmc
arpl
int3
xor
xchg
mov
push
xlat
hlt
inc
jo
cmc
rclb
test
pop
ljmp
sbb
mov
movsl
adc
push
outsl
sarb
pop
arpl
into
pop
pop
sbb
pop
ss
pop
rep
jb
shll
xorl
pop
push
lea
mov
insb
dec
mov
out
jg
repnz
sti
mov
add
shl
adc
mov
sbb
jp
inc
mov
fisubrs
adc
imul
pop
jge
mov
cli
imul
dec
push
xor
cmp
hlt
cmc
fnop
mov
jecxz
lret
es
insb
and
popf
pop
adc
jmp
and
cmc
mov
lldt
stos
and
jmp
push
jbe
jne
jb
loope
gs
lock
hlt
dec
mov
movsl
sbb
add
mov
adc
test
xorl
sti
scas
out
test
lahf
shlb
aam
repz
mov
lods
fndisi(8087
jo
mov
sti
inc
mov
movsl
subb
inc
test
add
loop
inc
adc
jno
mov
xchg
arpl
adc
jp
ret
mov
fimull
cmp
jecxz
sbb
xchg
dec
fisttpl
push
filds
or
mov
test
dec
test
lods
ja
adcl
pop
enter
pop
lret
add
mov
fwait
xor
xchg
push
mov
or
add
rcr
mov
dec
mov
stos
xchg
ret
dec
fildll
cmpsl
fnstsw
dec
sbb
or
aam
pop
pop
arpl
vcvtps2pd
add
ljmp
and
imul
and
in
add
push
rolb
mov
pusha
mov
loop
push
cltd
pop
ds
xchg
lea
lret
mov
and
clc
sub
js
adc
cmp
pushf
pop
out
pop
movsb
iret
sub
fst
pop
mov
shlb
push
sbb
xor
pop
mov
mov
xlat
cld
push
xor
clc
mov
movsb
mov
cli
jb
aad
or
in
aaa
and
in
popa
subl
or
ljmp
ja
pop
add
jl
mov
outsl
push
jo
rolb
xchg
xchg
or
jns
add
push
xor
or
xchg
mov
mov
scas
cmp
pop
xchg
pop
aaa
push
hlt
addr16
mov
test
xchg
push
inc
adc
inc
aam
xor
bound
add
dec
push
stc
shr
lods
rolb
out
mov
lea
popf
in
lea
es
and
push
inc
dec
fsubrs
lds
clc
cmpb
pop
int3
dec
into
lret
ljmp
pop
push
fsub
push
push
inc
test
pop
jbe
sbb
scas
inc
repnz
sbb
lret
inc
imul
popf
insb
mov
jnp
rcrb
jl
ret
pop
jle
and
in
inc
aam
xchg
dec
out
stc
into
ds
mov
cmp
movsb
stos
pop
gs
int3
mov
jle
cmp
rcrl
stc
or
cmp
cmc
faddl
xchg
cmp
xor
rcl
sbb
inc
or
or
stos
scas
add
mov
loopne
xor
sub
pop
enter
in
movsl
and
int3
aas
add
mulb
shrl
cmp
and
test
mov
or
pop
inc
or
and
push
and
inc
scas
out
cmp
sub
mov
outsb
add
mov
jno
jecxz
enter
xchg
rcrb
test
stos
pop
xchg
jnp
imul
idiv
push
loopne
ret
cltd
sub
in
jle
in
xchg
loop
pmaxsw
pop
mov
dec
mov
adc
and
sbb
dec
cmp
and
or
data16
out
cmp
imul
pop
insl
xor
push
lods
inc
inc
mov
push
cld
add
test
jecxz
sbb
out
std
push
pop
out
sti
outsl
jg
mov
xchg
hlt
mov
push
lods
shlb
jge
pop
cmp
lods
adc
repnz
add
push
jno
clc
jno
cmp
aas
adc
xor
mov
dec
xchg
dec
imul
lock
mov
cmp
idivb
pop
sub
pop
sti
stos
adc
roll
xchg
shll
inc
cmp
fisubl
popf
mov
test
xchg
xor
xchg
xchg
inc
mov
jge
mov
repnz
movb
mov
jno
shll
repnz
scas
and
gs
xor
gs
rorl
xchg
jnp,pt
jne
jae
xchg
dec
xor
add
inc
sbb
movsb
sbb
bound
jl
inc
xlat
seto
mov
aas
jns
lahf
movsl
test
or
fstps
mov
stos
addr16
fistpll
dec
mov
adc
or
push
insb
scas
push
das
rcrb
mov
lods
xor
or
aam
lea
jbe
fisttpll
fsts
jnp
sub
pop
lret
insb
dec
popf
loop
push
push
jo
inc
push
mov
xchg
sub
dec
push
je
sub
mov
enter
ret
sbb
dec
add
imul
pushf
loope
notl
mov
inc
cltd
jbe
imul
scas
cs
mov
jae
or
js
xchg
push
sub
lea
cmp
pop
es
cmp
shld
push
or
out
sub
push
pop
mov
flds
push
cmp
jle
push
aam
outsb
outsb
cmp
or
dec
push
shrl
imul
dec
mov
sub
sahf
insb
aam
and
mov
push
xor
in
pop
jno
mov
arpl
push
psubd
xchg
movsl
scas
into
push
sbb
insb
out
jb
mov
test
xchg
or
lret
cmp
mov
or
in
int3
sub
aas
dec
test
shrl
add
out
mov
decb
ss
aad
loopne
mov
adc
loopne
dec
dec
idiv
ret
sbb
js
inc
ljmp
sahf
cmovl
jle
and
pop
cli
inc
cwtl
pop
fwait
mov
ja
push
xchg
push
test
adcb
aas
loop
loop
lea
pop
xor
loope
xlat
lds
pushf
outsl
pop
fiaddl
mov
es
sarb
push
mov
xlat
push
mov
cmp
push
andl
xchg
mov
mov
sub
into
movsl
sbb
and
and
jo
pop
mov
push
out
xchg
push
ret
loope
xor
outsb
sub
push
mov
cmpsb
jne
aam
enter
pushf
fs
xchg
xor
fxch
xchg
xor
dec
jle
call
test
stc
pop
and
xchg
xchg
push
inc
mov
xchg
ds
push
jno
push
cltd
clc
sub
and
mov
adc
cmc
push
int
dec
loopne
or
movsl
xor
icebp
adc
aam
bswap
sbb
add
loop
dec
inc
ljmp
mov
nop
jecxz
pop
lret
xlat
adc
or
jg
inc
xchg
xchg
mov
imul
testl
mov
movsb
jl
out
cmp
cmc
mov
int3
arpl
cmp
fisttps
in
jns
cmpsb
add
aaa
adc
mov
sbb
sbb
loop
jno
pop
pop
push
andb
push
pop
imul
ss
mov
mov
mov
xor
lods
push
ss
mov
jo
ss
imul
sub
insl
xchg
inc
pop
pushf
mov
pop
cmp
loop
inc
int
aaa
mov
aam
aad
xlat
and
dec
shr
fistl
std
jae
fucom
lcall
or
dec
mov
test
xchg
out
xchg
movsl
add
adc
xchg
addr16
push
jnp
rorb
inc
fwait
mov
das
outsl
mov
xchg
mov
loop
jno
jno
adc
mov
test
mov
cli
jne
ret
jnp
or
negl
add
fidivs
add
repz
jmp
cs
cmp
out
test
cmp
push
fld
xchg
mov
cmp
lret
pop
cmp
jmp
inc
cmpb
adc
ljmp
and
mov
or
or
int
xchg
lods
xor
jb
pop
push
xchg
jp
std
out
dec
jae
fdivs
repnz
cwtl
sub
ljmp
pop
add
lods
xor
push
adc
scas
outsb
adc
scas
xchg
adc
incb
mov
leave
mov
loop
xchg
in
int3
xchg
mov
lahf
dec
pop
repnz
lahf
add
rorl
mov
jle
jmp
cmp
cmp
pop
fwait
aad
push
sub
or
xor
subb
cmp
divb
sbb
mov
jecxz
jo
movsb
jno
cs
jmp
dec
and
push
sbb
in
dec
mov
xchg
dec
fnop
cmpsl
std
lods
idiv
jg
lea
sub
lret
push
jnp
sbb
jecxz
fucomp
inc
sub
ja
cmpsl
cmp
insl
aaa
or
mov
cmpsl
in
lahf
inc
mov
sbb
adc
lret
inc
or
sub
gs
nop
cmp
clc
shr
dec
nop
sbb
js
aad
mov
hlt
call
stos
test
jmp
fadd
sub
call
dec
push
pop
aad
cmp
in
pop
fbstp
and
mov
in
pop
movsb
add
mov
inc
lret
pop
loopne
fimull
mov
pop
fcmove
loopne
push
je
mov
leave
sub
into
stos
fstl
lret
inc
lahf
loopne
cmpsb
pop
out
push
repnz
or
fdivs
xchg
adc
cmp
and
inc
pushf
sbb
arpl
xor
dec
out
jp
mov
xor
loopne
dec
adc
mov
mov
jge
cmp
mov
pop
fnstenv
out
xchg
sbb
loope
cmc
dec
fstp
lds
sub
dec
fwait
mov
add
jmp
lret
xchg
jo
test
insl
fidivrl
hlt
dec
jbe
out
popa
and
mov
addr16
sbb
shlb
shl
jp
jle
aas
enter
cwtl
ljmp
mov
mov
out
push
inc
sahf
stos
lea
iret
lret
push
fmulp
cmp
or
mov
out
and
cs
sti
pop
loope
aad
popf
pop
lods
adc
mov
jns
dec
jbe
in
in
dec
movsl
enter
lret
ret
popa
ljmp
sub
nop
cmpl
adc
or
cmp
fstps
or
ja
fidivrl
rcll
in
xchg
lret
cld
hlt
out
xor
fcomps
push
daa
cwtl
xlat
push
ficomps
stc
je
repz
mov
mov
sbb
int
pop
nop
lods
jnp
sub
stos
xor
xchg
scas
dec
lds
mull
addl
in
aas
lret
sbb
pop
lds
sbb
loopne
add
mov
sbb
aad
cmp
jge
xlat
mov
pop
inc
negb
stc
add
mov
test
clc
sahf
inc
mov
call
test
into
das
fnsave
out
or
icebp
pop
pushf
sub
test
cli
pop
ret
clc
gs
adc
inc
or
jle
in
loopne
mov
cmp
adc
mov
add
rcrb
fistps
sub
out
xchg
adc
push
cld
xchg
mov
sahf
push
push
cmpb
lret
or
jno
lahf
or
loopne
mov
mov
inc
scas
cs
cld
and
aaa
into
pop
mov
int3
mov
cmpsl
mov
sub
mov
mov
roll
sub
mov
xor
into
inc
scas
sti
test
xchg
int3
push
dec
or
and
cmp
sub
xor
mov
inc
push
call
or
mov
push
cmp
mov
and
sbb
add
xor
ds
aam
mov
ret
ret
out
add
ja
mov
fnop
aaa
stos
mov
fs
in
outsb
sbb
ret
arpl
cmp
hlt
into
mov
shl
or
ret
mov
mov
mov
adc
int
mov
ja
jge
mov
sub
xor
cwtl
sub
testl
sbb
imul
lock
sbb
addb
inc
sub
sbb
or
cmp
lahf
pusha
mov
fisubl
into
cmp
rcrl
sti
es
sub
cmp
jno
shrl
out
pop
mov
xchg
pop
jne
xor
dec
icebp
mov
jae
jp
xorb
xchg
hlt
push
shll
lea
test
dec
push
movsl
ds
dec
dec
maskmovq
imull
jae
adc
ss
pop
movsb
ud1
add
and
adcb
and
insl
pop
stos
aad
mov
xchg
in
dec
fs
mov
not
xchg
shrl
dec
lock
mov
ret
jg
fistl
or
loopne
sub
cmc
insl
or
jg
iret
mov
ret
test
jge
cld
sub
out
fcomps
int
push
push
sub
lcall
enter
cltd
mov
push
xchg
adcb
mov
push
div
and
imul
jne
lcall
pop
xor
rcr
outsb
movsl
push
dec
mov
add
nop
xor
xlat
add
daa
call
xchg
lret
out
pop
push
mov
pop
call
sbb
pushf
dec
test
adc
xchg
scas
jno
loopne
sbb
adc
dec
cwtl
mov
dec
out
cmp
adc
adc
inc
mov
dec
into
pop
jle
nop
daa
cmpsb
pop
icebp
fsubrs
js
cmpsb
movsl
mov
popa
scas
push
inc
es
inc
call
push
jae
push
lods
fstpt
fcmovnbe
xorb
clc
bound
lods
xchg
push
adc
mov
xlat
cmpsl
lds
mov
sub
pop
xor
mov
jle
inc
inc
mov
test
outsl
sbb
mov
cli
adc
pop
jae
mov
adc
test
add
out
repnz
push
cld
push
fdivrl
push
push
fstpt
push
repnz
cs
jne
repnz
pop
inc
pushf
sbb
push
in
aam
and
shl
jae
out
jecxz
test
cmp
jno
rclb
iret
and
pop
in
sub
arpl
cld
fwait
inc
xchg
shlb
xsha256
cmpsb
adc
or
xor
insb
push
dec
xchg
cli
adc
adc
ret
iret
mov
jl
mov
xor
movsl
mov
repnz
ja
ror
enter
adc
jmp
sub
pop
mov
xor
sub
aaa
into
andl
pop
mov
js
jae
test
fimull
jl
test
gs
iret
aam
push
jb
jle
pop
enter
mov
clc
ljmp
inc
mov
ja
popa
xor
test
daa
cmp
lret
xchg
gs
push
and
test
movsl
mov
push
push
mov
fisubrs
dec
out
jl
pop
sub
or
adc
mov
push
in
lods
adc
jne
mov
inc
in
or
pusha
cmp
sbb
pushf
sbb
pop
scas
mulb
jg
mov
adc
std
inc
rcrl
push
add
xchg
aaa
cld
inc
imul
xor
fwait
movsb
data16
lods
mov
pop
addr16
sbb
cwtl
jge
shrl
addr16
test
vpmaxsb
sahf
insl
cltd
add
mov
lcall
dec
mov
mov
fists
aad
xorb
aad
adc
in
adc
aad
push
inc
dec
pop
jp
or
inc
sbb
pop
dec
jge
hlt
cmp
or
pop
push
jb
push
jl
sbb
adc
mov
cwtl
out
xchg
leave
incl
clc
mov
or
xor
cmp
pop
cmp
inc
push
fs
mov
xorl
or
cmp
sti
pop
lock
and
jo
enter
mov
lods
lods
inc
sbb
dec
icebp
sub
adc
pop
xchg
test
xor
movsl
mov
arpl
lods
js
lods
xchg
jo
xor
into
cmp
xchg
dec
les
mov
or
into
pop
movsl
and
push
jnp
outsb
mov
loope
lcall
dec
stos
cmp
clc
push
push
mov
or
stc
xchg
push
icebp
rcrl
push
call
pop
sbb
and
sub
outsb
mov
shl
dec
insb
xor
fcomps
shl
shl
frstpm(287
jl
fucom
cmpsb
or
or
mov
stos
dec
dec
outsl
test
jge
cmp
push
sbb
cmp
inc
outsl
sti
mov
rol
data16
sti
push
imul
cmp
inc
fcompl
push
popa
xor
outsl
movsl
cmp
scas
and
pop
mov
push
cld
push
repz
pop
xchg
dec
test
jg
cmpsb
shlb
mov
pusha
cs
jmp
ss
mov
mov
jecxz
in
nop
and
cmpl
inc
jmp
out
call
and
add
hlt
add
aad
jb
adc
in
pop
xor
nop
movsl
clc
pop
sahf
inc
adc
add
ret
push
fcmovnu
int3
xchg
adcl
and
lods
mov
xor
nop
test
jbe
fsubs
push
jecxz
xor
xchg
pop
or
mov
xchg
ljmp
jmp
xlat
cwtl
xchg
adc
andl
inc
push
ror
leave
loope
push
scas
jb
mov
fucomp
mov
mov
bound
xchg
xchg
bound
sbb
push
in
test
xchg
call
inc
dec
outsl
add
dec
arpl
in
in
gs
inc
ret
jle
fsubl
mov
in
cmp
or
pop
xchg
adc
mov
in
pop
ret
popf
movups
movsb
bnd
sahf
loop
sahf
or
rolb
sahf
mov
outsb
fwait
xor
and
xchg
insl
decl
lahf
jb
jg
fmul
sbb
mov
sarl
pop
icebp
repz
js
int
scas
jno
out
popl
addr16
call
and
dec
mov
add
cld
xchg
and
add
mov
and
mov
das
and
lea
in
xor
stos
mov
jecxz
lods
enter
pushf
xor
and
popf
xchg
lods
inc
loopne
sub
in
xchg
aam
mov
leave
imul
adc
outsl
or
pop
lea
jmp
mov
frstor
push
sub
sahf
rorl
push
add
mov
cmp
mov
cli
adc
add
mov
in
xchg
or
mov
mov
or
popa
pop
or
xchg
xor
mov
aaa
in
jp
mov
int
or
hlt
adc
mov
push
and
mov
outsb
xor
lods
sbb
out
and
sbb
bound
icebp
in
xorl
outsl
mov
push
sbb
stos
inc
cmp
rol
ror
xor
in
inc
xlat
add
push
in
jnp
inc
jecxz
cmpsb
lock
xorb
sti
bound
mov
lret
cmp
and
pop
push
test
pop
add
pop
fidivrl
repz
test
sub
or
xchg
out
adc
gs
jb
arpl
leave
xor
pop
adc
pop
xchg
nop
gs
jg
bound
enter
mov
icebp
xor
or
jnp
jmp
mov
jmp
movl
mov
push
jne
call
adc
push
xchg
push
xor
and
mov
jne
ds
loop
shr
aaa
mov
int
add
lods
jmp
out
aas
mull
sbb
push
cmp
add
xor
pop
add
test
movb
rcll
aaa
push
jbe
decb
xchg
or
mov
mov
lds
dec
fdivl
repnz
das
rcl
add
sub
and
lcall
int3
pop
subl
xor
xor
aad
jbe
inc
xchg
stos
inc
lret
leave
pop
pop
dec
jecxz
sti
in
inc
inc
pop
xlat
sbb
lea
or
shrb
out
and
in
adc
cmp
clc
adc
xchg
jns
mov
insl
jg
cmp
outsl
in
dec
fs
sarl
push
mov
adc
pop
add
ljmp
insb
bound
pop
test
fiadds
mov
in
push
loope
shrl
add
bound
adc
pop
jne
push
mov
push
pop
out
in
dec
xlat
in
push
aas
adc
imul
fwait
andb
mov
jmp
sbb
outsb
iret
jecxz
mov
mov
or
pop
js
aad
insl
sub
insl
jge
xlat
mov
jo
adc
mov
ret
inc
mov
test
cmp
int3
inc
movsb
push
pop
gs
xlat
push
adc
jbe
dec
pop
jae
loopne
mov
mov
adc
or
inc
fs
cmp
push
fwait
jbe
ds
popf
pop
mov
and
jmp
cs
or
fs
jmp
cld
pop
popf
and
lds
adc
mov
std
and
popa
outsb
mov
stc
cmp
and
inc
lods
push
sub
sbb
or
cmp
iret
jnp
loope
mov
xor
movsl
aas
jnp
sub
xor
inc
pop
repz
mov
jecxz
mov
inc
leave
dec
mov
dec
sarl
negb
scas
andl
push
jne
icebp
adc
in
jmp
scas
mov
dec
in
mov
into
lock
aam
outsl
dec
shll
mov
adc
add
outsl
hlt
stc
mov
insb
mov
les
lcall
and
push
adc
xor
les
or
jb
inc
out
dec
adc
inc
stos
jne
subl
inc
sbb
outsb
addr16
repnz
or
adc
loopne
cli
jl
mov
orl
cmp
sbb
scas
xchg
mov
or
adc
aaa
hlt
fcoms
int
sarl
add
xchg
je
int3
in
lret
mov
cli
repz
jmp
fnstsw
rcrl
mov
jmp
lds
iret
popaw
pop
or
aas
inc
subb
aas
xor
mov
lods
test
or
mov
lahf
and
ret
fwait
push
mov
xchg
mov
test
mov
cli
mov
sub
push
mov
lahf
std
or
adc
sub
ja
xor
pop
iret
mov
jne
pusha
add
push
lods
push
xor
jle
pop
dec
lods
pop
les
icebp
pop
in
jl
lret
insl
push
inc
dec
loope
int
mov
bound
inc
stos
ja
in
adc
add
and
sub
jbe
lods
push
out
jmp
lret
shl
sub
sub
roll
jl
jp
push
clc
fstps
dec
xchg
mov
cmpsb
cmp
lock
dec
push
cmc
xlat
jb
jb
sbb
flds
jae
push
xchg
sub
xor
pop
mov
repz
mov
ja
leave
cmpsl
clc
jae
cmp
shrl
lea
sbb
mov
jecxz
dec
repnz
dec
mov
jg
aam
jl
pop
mov
and
jmp
mov
popf
push
das
shlb
push
mov
fcompl
or
pop
push
and
add
jbe
popf
ljmp
mov
dec
mov
ds
jbe
shr
cmp
jp
add
mov
sahf
icebp
push
loop
scas
cmp
out
mov
mov
fs
mov
pop
movsb
int
xor
inc
inc
clc
cmp
push
inc
lods
int3
and
xchg
xchg
push
cltd
cmp
and
movsl
dec
loope
mov
jl
mov
lea
adc
mov
enter
mov
sahf
mov
es
dec
std
stos
imulb
cmpsl
cmp
je
xor
pop
ret
out
adc
mov
pop
sarb
xchg
push
movsb
imul
sub
repnz
mov
mov
jae
lods
or
pushf
mov
psubusw
cmp
sbb
pop
push
mov
mov
iret
gs
dec
pushf
push
mov
inc
movsl
adc
ret
inc
pop
mov
js
es
mov
imul
imul
js
dec
jecxz
and
test
mov
jae
jne
pop
arpl
xchg
sbb
icebp
mov
inc
loopne
gs
or
ljmp
inc
or
push
popf
cli
pushf
aaa
shrl
push
fistl
hlt
adc
or
push
push
dec
sub
inc
fsubrs
and
testb
sahf
mov
xor
push
es
aas
push
ds
push
mov
lods
pop
int3
ljmp
in
lock
roll
popf
inc
push
xchg
sbb
fsubl
inc
and
xlat
addr16
mov
stos
mov
push
push
mulb
cmp
fcoml
sti
or
filds
iret
out
push
enter
mov
loopne
xchg
test
loope
push
imul
adc
imul
lds
es
pushf
dec
addr16
mov
cmp
jecxz
mov
mov
loopne
je
jno
xchg
mov
fwait
mov
pusha
ret
out
pop
mov
rorl
mov
mov
mov
push
fstl
sar
adc
sbb
sahf
clc
push
push
fwait
jb
je,pn
pop
je
mov
mulb
dec
sub
mov
mov
mov
or
dec
pusha
jb
out
and
cmc
ljmp
xchg
cmpsb
cmp
push
and
ret
aaa
mov
daa
imul
inc
aam
test
fdivs
sub
fcmovb
stos
fdivrs
lret
sti
mov
or
mov
sub
fdivs
hlt
dec
add
xchg
cmp
aad
loope
leave
testb
cmp
repnz
sub
inc
sub
sbb
lahf
lods
and
enter
inc
test
jne
or
or
les
mov
and
test
lahf
xchg
sar
movsb
cmp
sbb
fstpt
push
shrb
add
inc
ljmp
xor
inc
movsb
sti
cmc
inc
scas
jp
out
push
xchg
push
or
inc
mov
or
jnp
cli
mov
sub
xorl
push
out
dec
mov
mov
insl
fldl
xchg
outsl
divl
mov
push
fsubs
pop
sahf
mov
sbb
lahf
push
cltd
stc
nop
lret
push
push
push
dec
mov
lahf
push
jb
adc
mov
clc
ret
push
imull
and
jecxz
mov
insb
push
jno
push
imul
out
xor
xlat
push
push
in
xor
fs
mov
xchg
dec
enter
fsubr
mov
inc
or
mov
mov
insb
sub
xchg
test
int
lods
inc
fdivr
sarl
inc
mov
incb
mov
inc
xor
lahf
ss
lret
fbld
ljmp
xor
sub
cld
stos
fmulp
add
xchg
pop
xor
add
mov
scas
pop
test
clc
bound
jnp
or
add
cmp
loopne,pt
sbb
push
add
in
inc
jge
idivl
scas
inc
dec
pop
in
adc
ss
scas
xchg
arpl
mov
arpl
aaa
adc
outsl
mov
dec
jno
sub
out
insl
clc
adc
mov
or
cs
adc
mov
sti
cld
mov
jle
scas
fwait
daa
in
mov
and
inc
inc
ds
mov
push
cli
mov
fwait
push
in
out
cmc
insb
ret
adc
das
mov
shrl
adc
add
imul
push
sub
xchg
inc
xlat
fwait
mov
xchg
jmp
or
andl
and
filds
lcall
mov
int3
orl
xrelease
das
push
cli
pop
nop
aam
enter
or
fwait
pop
pushf
adc
fcompl
rol
fs
push
scas
mov
pop
dec
lret
cmpsb
xor
sub
fldcw
or
into
enter
cmpsb
jae
movsb
jnp
push
mov
adc
or
mov
adc
mov
add
xchg
push
nop
call
cltd
std
push
fcmove
lret
adc
fwait
mov
fisubl
and
icebp
xchg
lock
shrl
fisubrs
rorb
xor
shll
dec
dec
add
mov
dec
xrelease
mov
mov
adc
pop
rorl
addr16
enter
sbb
jl
call
fisubrs
cmp
outsb
loop
js
dec
aad
ret
lcall
sbb
cmp
push
push
cmp
jge
xor
jle
mov
sub
mov
repnz
push
mov
fildl
mov
out
in
cmc
lret
mov
incl
mov
push
or
test
scas
nop
cs
cs
out
xor
js
cmpsl
sub
dec
xchg
sti
stc
xlat
outsb
sub
pusha
push
outsb
jns
xchg
fwait
xor
cmp
push
mov
mov
dec
dec
clc
out
bound
sarl
cmp
dec
sbb
jns
add
aam
inc
pop
lret
ja
pushf
flds
dec
fcomip
or
add
sub
mov
dec
in
mov
jno
lret
ret
pusha
fistpl
sbb
and
jbe
inc
rcrl
add
jae
add
sti
mov
push
ret
or
inc
or
push
dec
add
mov
lock
jl
call
mov
testb
xchg
adc
adc
push
incl
lret
dec
add
dec
and
jg
sahf
popa
inc
out
dec
enter
notb
stc
subb
addr16
nop
mov
mov
mov
lock
cmpsb
xor
fsubrp
xchg
sub
mov
mov
add
mov
push
repz
mov
dec
fstps
add
mov
jge
inc
pop
movsl
sahf
addb
jbe
mov
and
sbb
lock
fidivs
mov
std
adc
jg
je
xchg
cmpsl
xor
inc
mov
cwtl
daa
mov
xchg
mov
movb
push
cltd
adc
cmp
daa
or
js
stc
test
adc
repnz
movsb
inc
sub
mov
loopne
mov
imul
aaa
test
ds
jbe
std
mov
sar
jb
cli
lock
in
data16
cmp
je
call
xchg
enter
add
xor
test
mul
movsb
test
jle
mov
adc
sbb
add
or
xchg
inc
out
test
js
jo
xor
sub
leave
aam
adc
int
dec
and
dec
xlat
fidivl
push
mov
push
mov
pop
or
cmpsl
into
addl
out
movsb
rclb
je
xor
leave
inc
dec
pop
and
mov
jne
es
popf
sbb
cmp
jmp
out
test
or
stos
arpl
push
pop
movb
sahf
jno
pop
xchg
xor
xchg
mov
test
pop
seta
insl
adc
cltd
xor
xchg
outsl
jp
pusha
imul
mov
and
das
lods
pop
out
push
push
or
dec
stc
jae
out
outsl
jbe
jl
out
push
add
std
push
push
fiadds
dec
clc
mov
and
rcr
test
inc
in
jge
mov
in
mov
cmp
add
pop
stc
pop
push
repz
jmp
sub
pop
daa
fcoms
mov
pop
push
loope
sahf
pminub
dec
push
push
subb
jb
hlt
mov
aad
or
xchg
mov
sbb
test
push
insb
jle
loopne
jmp
scas
sbb
push
dec
sub
lret
push
mov
hlt
daa
mov
sbb
jnp
bndstx
mov
xchg
lds
mov
int3
mov
cmp
imul
fisubl
xor
call
sbb
and
sub
leave
xchg
int3
mov
mov
dec
mov
cmp
or
mov
pop
lret
add
xchg
push
adc
xor
sub
fwait
or
or
lahf
pop
mov
xchg
es
into
gs
inc
mov
arpl
lds
jnp
movsb
and
dec
lcall
cmp
pop
out
inc
cmpsb
jns
pop
popl
push
rclb
aad
sbb
btc
sarl
pop
adcl
pop
js
cmpsb
dec
rorb
ds
ljmp
in
push
aaa
popf
enter
mov
cmc
push
xchg
jo
jmp
aas
push
mov
sarb
insl
les
pop
cmp
add
pop
mov
mov
out
add
pop
cli
push
xchg
push
add
push
dec
mov
mov
mov
xorb
std
gs
test
out
js
scas
test
faddp
push
sbb
clc
lds
sbb
imul
pop
mov
cmpsl
shrl
or
push
sahf
and
popa
cwtl
lea
fisttpll
xchg
sbb
out
ss
jno
outsl
push
add
ficompl
pop
mov
jnp
push
into
jle
add
push
push
shll
pop
mulb
xlat
cmp
test
fs
out
in
push
lahf
mov
shl
dec
and
rol
lds
dec
rorl
jmp
mov
inc
nop
ds
imul
sahf
jle
xor
cmp
jmp
lret
or
jnp
adc
mov
pop
dec
jle
shll
shrl
mov
shrb
sbb
xchg
xchg
aaa
sbb
lds
or
cmp
xlat
fstpt
cli
mov
leave
mov
addr16
cs
shll
loope
lock
adc
loopne
xor
adc
test
in
adc
or
fidivrl
inc
ss
and
jne
popf
out
inc
in
push
push
daa
fs
push
push
fdivrs
xor
ret
pop
fsubrs
cmpb
add
sbb
sub
repnz
incl
sti
test
cmc
add
push
cmp
xchg
and
daa
and
mov
jp
xchg
pusha
test
xor
push
cmpsb
call
xchg
add
nop
xlat
ret
mov
jae
cld
mov
das
ficoms
and
mov
dec
adc
imul
adc
repnz
mov
sbb
inc
sbb
roll
lds
jnp
sbb
enter
popa
cmp
sbb
mov
cld
js
mov
out
mov
loop
fnstenv
sbb
push
in
stc
push
lahf
xor
jo
clc
test
lret
mov
sarl
cmp
cmpsl
jle
stos
faddl
sbb
std
xor
dec
aaa
sbb
lds
mov
ret
xlat
movsb
arpl
sbb
xor
sbb
nop
add
test
std
int3
push
or
fcoms
cmp
ret
pop
jbe
cld
cmpsb
in
repnz
ds
jae
mov
pop
pop
adc
ss
dec
jns
and
mov
aas
and
test
xchg
inc
cmpsl
lds
adcb
jge
stos
daa
sbbb
rcr
adc
mov
ss
out
adc
push
aaa
xor
push
mov
lcall
add
pop
mov
int3
pop
sbb
shl
dec
sahf
mov
adc
cmpl
adcb
xchg
test
xchg
jmp
into
cmp
lahf
int3
frstor
sub
xchg
adc
lret
push
xchg
fldl2t
lahf
lret
jg
leave
fdiv
adc
ljmp
dec
sub
mov
jno
outsl
push
and
adc
sbbl
mov
call
push
mov
and
mov
orl
lods
pop
popl
scas
testl
std
xor
adc
mov
lcall
in
divl
jne
mov
lock
xor
adc
mov
iret
data16
adc
or
out
lahf
imul
sahf
roll
pop
add
mov
daa
sub
popa
and
stos
pop
lahf
sub
sub
dec
repz
pop
ja
leave
sub
test
popl
dec
inc
cmc
adc
adc
cmp
inc
cwtl
xor
scas
or
mov
fnsave
sub
inc
fimuls
sbb
js
gs
outsl
cltd
fsts
or
dec
mov
fidivs
leave
xchg
addr16
xchg
jmp
fistps
mov
stos
cli
jne
adc
roll
mov
shr
or
adc
jg
outsb
arpl
dec
sbb
adc
xchg
ds
rorb
pop
testb
and
xchg
sub
sti
or
adc
insl
mov
cltd
pop
xchg
xor
sbb
nop
mov
ret
sbb
sbb
xchg
popa
notl
mov
pop
es
jp
std
cli
addr16
cltd
in
movl
cs
pop
or
cmp
stos
mov
fs
out
roll
lcall
add
iret
jo
adc
fmull
mov
jl
sub
aad
xchg
out
stos
inc
xchg
jecxz
ja
mov
xorl
shlw
ret
push
in
rcrb
mov
lcall
push
dec
dec
loope
or
hlt
setno
sbb
add
dec
lock
or
push
sub
mov
idivl
sub
inc
and
xorl
fcom
mov
int3
test
scas
inc
nop
sbb
int
dec
jmp
hlt
add
xchg
mov
and
mov
xlat
loop
inc
int
pop
les
insl
movsb
jo
ret
or
xor
in
sub
or
mov
imul
xor
leave
push
add
xor
icebp
andb
das
pop
inc
or
stos
jbe
jns
push
xchg
mov
shlb
mov
mov
dec
movsb
pop
lock
enter
ja
lahf
jnp
sub
int
jno
int3
sub
mov
adc
jne
lahf
inc
arpl
test
add
pop
cli
fdivl
mov
ss
push
inc
mov
stos
enter
dec
shll
mov
ret
hlt
mov
cmp
sar
nop
mov
mov
add
jle
mov
outsl
fsubrl
mov
repnz
leave
fdivr
jae
in
mov
fstpt
pushf
dec
and
cmpsb
lock
xchg
dec
sahf
mov
pop
ss
pushl
loopne
adcl
mov
loopne
ljmp
jbe
mov
push
mov
adc
pop
leave
pusha
xchg
and
mov
xor
lcall
lret
ja
imull
ds
cltd
outsl
and
push
adc
clc
jae
jmp
mov
shl
cmpsb
add
sub
sub
inc
pop
inc
gs
imull
or
pop
sbb
pop
push
xchg
les
repz
mov
stos
xchg
fcomi
fs
push
lcall
sahf
das
mov
cmp
jns
cmp
adc
out
scas
test
lret
xor
daa
mov
scas
xchg
sub
or
cmpl
mov
loopne
mov
pop
cmc
adc
mov
gs
stos
les
push
jbe
xchg
imul
in
into
xchg
sub
mov
xor
cwtl
cmp
sarb
push
movsb
sub
pop
faddl
add
stos
les
scas
sarl
sub
pushl
mov
enter
xor
jg
daa
add
lahf
fdivrs
mov
xor
ja
and
out
stc
jne
subb
inc
jmp
adc
push
in
mov
mov
mov
fidivl
mov
leave
xor
sub
sbb
lret
jb
and
mov
adc
js
add
lret
in
sub
es
xor
fisubl
xchg
cmp
jmp
aam
jno
fsubrl
mov
sarl
jp
cltd
fidivs
sbb
enter
stos
cmc
out
pop
sbb
push
mov
inc
in
mov
mov
push
pop
cmp
data16
shl
or
sub
test
or
std
pop
aas
js
jne
je
and
push
shll
mov
movsl
icebp
push
xor
adc
cmpsb
addr16
cmpsl
inc
mov
rep
push
out
sahf
push
inc
sub
xor
pop
addl
mov
adc
repz
into
aam
out
fwait
cmc
push
icebp
or
int
adc
push
jecxz
jmp
imul
jnp
jbe
scas
inc
insb
js
pushf
inc
dec
push
icebp
lds
cld
cltd
mov
inc
mov
insl
in
jne
pop
arpl
xor
fsubr
sub
in
divl
adc
xor
movsl
sbb
aas
xor
pop
daa
and
test
push
mov
cld
and
sbbl
adc
mov
sbb
xchg
bound
cwtl
mov
sub
or
jge
xchg
stos
xor
add
test
in
ds
sub
test
test
scas
scas
jne
pop
push
push
inc
cli
lret
xchg
mov
fsub
lret
mov
imul
sbb
roll
ja
es
mov
mov
inc
loopne
add
xchg
xor
sahf
cmp
adc
lock
insl
sub
pop
insb
repz
jg
fidivs
and
popa
test
mov
arpl
jg
or
xor
mov
push
sbbb
push
inc
adc
out
pushf
les
sub
mov
pop
dec
fsubl
jmp
push
in
pop
pop
scas
jno
jb
idivb
jecxz
cmpsl
sub
aaa
lds
push
lods
push
mov
xor
sbb
xchg
mov
cmp
inc
cmp
roll
les
subl
shld
out
jmp
lahf
sub
pop
jnp
fmuls
push
push
test
inc
push
jge
inc
jnp
dec
bound
int
pop
fs
mov
sub
sub
div
pusha
outsb
notb
in
and
xchg
mov
pop
shlb
cwtl
cs
inc
sub
pusha
xor
pop
push
sbb
arpl
mov
cs
fisttps
mov
es
cmp
xor
dec
jnp
xor
std
sbb
aas
test
cmp
fldcw
mov
lcall
shr
cmp
scas
push
adc
push
cwtl
lea
ror
loopne
or
inc
adc
mov
out
add
dec
int3
xor
or
cmpsl
cwtl
mov
cmpsb
cmpsl
push
iret
sbb
add
rcll
mov
pop
sub
mov
andb
xor
iret
pop
int
rcrb
inc
fdivp
les
add
jl
pop
imul
sub
jmp
mov
testl
jg
mov
pop
in
out
rorl
add
cli
pop
jo
mov
ljmp
mov
insb
pusha
cmp
xchg
xchg
movsl
imul
lahf
sub
mov
adc
movsb
xchg
xor
loop
imul
fidivrl
jmp
out
test
idiv
mov
in
sub
and
xchg
dec
pop
aas
dec
arpl
rol
mov
jle
int3
mov
pushf
cmp
std
xchg
in
out
lods
and
fcmove
xor
adc
into
mov
inc
frstor
mov
and
das
fistl
add
test
mov
dec
xor
cli
cli
jecxz
loopne
sbb
xor
dec
in
fs
inc
push
imul
jmp
out
xor
xor
adc
enter
jecxz
pop
je
adc
and
mov
jae
or
xlat
lods
fs
cmpsl
xrelease
jns
dec
xor
adc
call
iret
add
xchg
lods
cld
sti
add
mov
fmull
sbb
xchg
sbb
or
shl
xor
dec
pop
mov
rol
mov
pop
ficoml
ss
jne
pop
mov
jg
mov
jecxz
or
cs
mov
pop
pop
in
addr16
lock
int
inc
or
mov
push
pop
adc
in
mov
and
xchg
bound
aad
push
or
jge
out
iret
mov
in
push
xchg
push
pusha
lcall
mov
pop
dec
pop
mov
xor
popf
mov
adc
inc
push
add
inc
inc
cs
mov
adc
imul
dec
mov
jb
cmp
cmp
bound
xchg
adcl
jns
adc
stos
xchg
jno
imul
lock
stos
mov
mov
aaa
lds
add
mov
mov
fldt
cmp
out
jmp
dec
loope
mov
push
out
jecxz
mov
outsl
push
push
aas
xor
lahf
sub
arpl
mov
in
repz
and
jne
es
jno
sub
xlat
outsb
adc
addr16
imul
adc
movsl
ret
mov
jecxz
clc
adc
push
insl
icebp
or
ja
je
pop
pop
call
pushf
mov
das
mov
fcoml
xor
lods
outsl
outsl
out
shll
adc
ret
in
rcr
imul
cmp
cwtl
lret
fwait
push
sti
mov
mov
adc
cmpsb
lcall
mov
adc
mov
pop
and
aad
stos
push
add
movsl
xchg
add
mov
je
cmp
jb
in
sarl
jns
dec
cmpsb
in
dec
popa
cmpsb
ljmp
clc
mov
cmp
mov
fldcw
sarb
adc
bound
xchg
cli
gs
clc
movsb
push
push
cmp
hlt
imul
mov
push
adc
fs
sub
sbb
mov
inc
shlb
pusha
push
and
gs
insb
fbstp
or
je
aaa
mov
imul
jnp
xor
jmp
add
xor
sbb
cmpsb
fisttpll
sub
shrb
ror
add
scas
aaa
and
or
outsl
out
xchg
popf
int
or
pop
fidivrs
lahf
mov
daa
popa
and
push
mov
jle
jecxz
out
lret
and
mov
cltd
mov
mov
pusha
cmp
cmp
mov
mov
outsl
push
sub
cmp
or
mov
loopne
ds
push
xor
xchg
sbb
arpl
fistpll
rol
push
lods
xchg
inc
pop
lret
mov
rorb
push
adc
mov
cmpsl
out
mov
popa
xchg
mov
cli
rolb
in
shll
adc
xor
sub
jbe
stos
les
popa
pushf
mov
lret
pushf
or
imul
lcall
rcl
cmp
or
cmc
adc
and
mov
or
push
pop
stc
test
xchg
xor
or
stos
aaa
mov
or
adc
jb
add
mov
inc
jecxz
stos
inc
insb
sbb
pop
adc
lret
push
movsb
mov
jb
mov
pop
hlt
sbb
andl
add
stos
outsb
xchg
or
jno
jns
ret
cmc
in
sti
lahf
scas
and
ss
add
jae
lds
mov
loope
pop
mov
add
push
and
or
and
mov
jmp
out
fnstsw
fsubr
xchg
mov
std
adcb
aas
sbb
mov
or
push
mov
lea
repnz
pop
adc
mov
fptan
xchg
xchg
sub
or
ljmp
call
jge
fildl
dec
sbb
mov
sub
dec
addr16
jne
jae
cmp
addr16
ja
sbb
into
pop
lret
sbb
in
js
lret
or
mov
xchg
inc
mov
iret
out
cld
add
fadds
out
fwait
lret
xor
dec
add
cmp
mov
gs
loope
sub
xchg
bound
dec
jecxz
add
daa
aas
icebp
push
out
stos
jg
mov
scas
mov
js
inc
mov
ja
mov
cld
mov
iret
orl
add
push
push
sub
aas
jo
xchg
push
xor
mov
jbe
jge
push
sti
insb
cmpsl
ds
sbb
rcrl
jmp
icebp
sbb
jns
aaa
pop
pushf
or
into
push
dec
test
mov
sub
cli
cmp
dec
pop
sub
mov
enter
xchg
ds
mov
xchg
mov
rcrb
mov
lret
xchg
out
xor
rcl
push
inc
pop
inc
hlt
dec
xchg
hlt
push
dec
es
lds
scas
cmp
inc
test
in
inc
fadd
or
int3
jg
jb
inc
pop
int3
xor
int3
mov
xor
pushf
mov
mov
loopne
sub
mov
sarl
loopne
jle
and
and
test
xchg
shll
cwtd
std
mov
ja
test
leave
or
test
xor
dec
or
xlat
push
inc
or
mov
mov
sbb
inc
xor
mov
ljmp
mov
lret
popa
mov
sarb
inc
jbe
test
ljmp
mov
push
fwait
mov
pop
adc
ret
stos
les
and
pop
aad
les
fistl
xchg
hlt
mov
andb
jne
js
and
mov
and
lret
pop
or
out
je
mov
sti
add
add
sbb
ret
shlb
stos
cmpsb
int3
in
hlt
fistl
lods
or
dec
pop
pop
jl
cmp
mov
push
cld
int
cli
push
leave
scas
ret
mov
outsl
push
pushw
sbb
sub
mov
fdivs
adc
or
popf
shlb
pop
adc
stos
lods
jae
sbb
cli
mov
dec
fnstsw
loopne,pn
test
scas
roll
popf
imul
adc
popf
out
cmp
shrl
sbb
movsb
lret
sahf
xor
push
lds
xchg
mov
dec
mov
mov
or
in
cmpl
lcall
or
mov
dec
lock
cmp
test
jle
movsl
ds
sub
pop
movsb
test
js
adc
mov
loope
cmpsb
inc
xlat
fcomps
jmp
dec
pop
cmc
jp
sub
adc
pop
jg
xchg
mov
leave
mov
pop
loopne
push
adc
icebp
cmpsb
push
loope
movsl
sbb
and
sbbb
cmp
stos
je
cmp
lret
lea
jge
sbb
cmpsl
inc
popa
stos
std
leave
push
mov
mov
shr
or
aas
movsb
inc
adc
dec
mov
xchg
sub
jp
cmp
fwait
jo
sub
mov
mov
insb
out
adc
out
popf
cmp
mov
fyl2x
dec
fcompl
jle
stc
cmp
push
xor
mov
filds
in
sti
xchg
add
jmp
sarb
dec
aas
adc
dec
sbb
push
nop
adc
mov
mov
lods
mov
fwait
sbb
test
aas
inc
sub
scas
xchg
jle
inc
sub
xor
dec
dec
orl
mov
jg
pop
mov
or
pop
daa
sub
pop
sub
repnz
cmp
cs
push
fstl
loop
lock
rorb
rclb
sahf
xchg
adcl
add
xor
or
cmp
dec
addb
cltd
pop
loope
pop
cmp
xor
das
dec
mov
adc
pop
insb
sbb
cmp
fs
add
mov
nop
stos
jno
in
sti
mov
sbb
mov
rorl
pushf
sub
dec
shrb
pop
in
mov
insl
div
mov
shrb
add
jno
mov
push
fisttpll
ljmp
fdivl
sub
pushf
icebp
out
pop
ficompl
rolb
stos
movsl
out
jnp
mov
adc
shlb
dec
pusha
inc
popa
sbb
rorl
mov
mov
inc
lret
push
call
sub
fs
pushf
sub
mov
rclb
xor
ret
inc
icebp
sbb
aas
dec
adc
sti
xchg
push
xor
cltd
mov
das
pop
scas
pusha
outsb
leave
aas
sbb
orb
lret
pop
cmp
call
xchg
lret
repnz
mov
and
mov
push
enter
outsb
sbb
mov
inc
pop
packssdw
inc
and
and
inc
adcb
add
ljmp
dec
cwtl
xor
jmp
std
pushf
lods
add
aad
test
or
mov
xchg
or
test
clc
aas
mov
cwtl
or
xchg
and
pop
or
add
pop
adc
add
and
cmp
fdivrs
icebp
movsl
jl
jae
jnp
add
or
mov
xchg
sub
les
loop
lahf
jecxz
jmp
jbe
out
or
add
lea
out
jecxz
jge
cmp
test
cmp
dec
daa
pop
jnp
lods
addr16
loopne
sbb
cld
test
addr16
fdivl
mov
and
xor
iret
inc
popl
out
adc
mov
add
pop
pop
cld
xchg
dec
adc
sarb
stos
loope
cmp
mov
pop
movl
aas
xor
cmp
insl
push
ljmp
or
lahf
xor
and
pop
push
mov
cmpsb
cmp
mov
data16
movsb
mov
inc
xor
mov
xchg
adc
addr16
jg
andl
insb
and
ds
insl
add
jmp
inc
imulb
iret
loope
clc
lret
pop
sub
push
fldz
mov
push
sub
scas
or
jg
ror
and
lahf
inc
sub
mov
lea
movsb
or
push
cltd
sub
dec
call
jno
mov
add
loope
mov
mov
test
adcb
push
loopne
outsb
roll
enter
or
adc
xor
mov
and
shrb
add
and
push
inc
incl
cmpsl
xor
and
popf
hlt
or
and
add
cmpsl
xor
into
cmp
pop
mov
pop
push
sub
enter
out
test
mov
pop
loop
adc
sub
cltd
ficoml
fs
mov
call
loopne
sbbl
pop
outsb
mov
mov
adc
fldl
loop
stos
add
sbb
arpl
shrb
jg
jecxz
test
call
sbb
add
or
xor
pop
mov
dec
pop
in
push
lahf
jb
cmp
cmp
adc
lret
in
and
adc
or
mov
jp
dec
stos
mov
cmc
ret
jge
fs
pop
mov
scas
adc
xchg
das
inc
xor
push
jmp
and
or
inc
fdivrs
ficompl
adc
mov
in
sti
lods
inc
push
xlat
cmc
inc
mov
cmp
in
dec
jecxz
add
jae
xchg
out
xchg
jecxz
sbb
xor
sub
jnp
data16
xchg
mov
add
sub
loop
sbb
inc
xchg
add
pop
jmp
stc
pop
sub
mov
jp
and
push
and
push
dec
popa
xor
mov
dec
test
cmpsl
ret
sbb
push
jb
and
mov
or
clc
push
push
sbb
loopne
push
aad
push
stos
bound
fcoms
out
stc
inc
fs
mov
test
clc
jae
push
dec
add
test
push
or
rcl
dec
insb
fisttps
mov
mov
fstl
mov
jnp
rcl
jne
sbb
push
or
or
cmp
fildl
cmp
or
scas
sub
sarl
push
xchg
insb
adcl
scas
lods
daa
mov
jns
sarl
add
mov
add
jb
fidivrs
movsl
lds
jle
mov
shl
xor
popf
mov
or
jb
xor
out
inc
mov
pop
frstor
movsl
icebp
or
bound
sarl
daa
mov
xor
add
jbe
div
out
cmp
leave
mov
push
and
jae
call
pop
lea
lea
mov
adc
bound
mov
cmc
popf
pop
in
xchg
xchg
mov
mov
test
ret
shrl
and
mov
lret
insb
iret
adcb
xchg
inc
pop
xor
lcall
cmpsb
mov
xchg
arpl
lret
int
mov
fldenv
push
call
cmp
outsl
daa
pop
out
loope
inc
jmp
flds
and
jmp
ss
xchg
fwait
ret
dec
inc
sbb
and
or
and
mov
mov
sbb
adc
movsb
icebp
bound
xchg
jecxz
adc
adc
xchg
dec
idivb
repz
arpl
inc
push
ss
loopne
filds
call
jns
fwait
sti
cmp
or
xchg
int
inc
xor
call
cmp
popa
push
adc
jle
add
shl
lahf
pop
push
inc
decb
out
or
gs
xchg
jns
inc
jae
data16
adc
dec
lea
mov
mov
mov
loop
call
insb
std
fldcw
in
lret
ds
add
enter
movsl
sti
jg
and
xor
cmp
jo
add
jp
aam
and
or
sti
adc
mov
and
xor
sar
cmpsl
cli
imul
insl
cwtl
add
cmp
mov
dec
adc
test
dec
in
inc
xchg
pop
psubsb
cli
pop
fcoms
fdivp
dec
aad
or
mov
or
and
jle
mov
jle
mov
out
ja
jae
mov
adc
lock
int3
push
mov
pop
insb
rcrl
sbb
icebp
rcr
jl
das
or
mov
fildl
dec
inc
bound
or
lret
arpl
push
or
or
addr16
pop
and
inc
cli
jp
sub
es
in
sbb
cmp
fldcw
jne
sbb
fldz
or
lcall
inc
stos
inc
or
jae
popf
lds
xchg
xchg
test
dec
jmp
jle
xor
popa
jnp
and
orb
in
out
out
inc
fiadds
mov
lds
sbb
fwait
sub
dec
and
shll
adcb
lods
sbb
mov
sub
bound
mov
mov
fstpt
call
int3
xchg
xorb
mov
xchg
xchg
lock
test
xchg
xchg
push
cmp
mov
shll
xlat
lcallw
std
gs
jl
aad
fidivs
std
adc
sbb
daa
mov
xchg
out
inc
pop
and
jns
cmpsl
popa
sub
xchg
and
pop
push
sbb
fdivr
cmp
rolb
orl
jmp
loope
or
mov
pop
lds
mov
outsb
daa
hlt
ret
or
dec
cmc
dec
pop
and
hlt
rorl
mov
lock
and
jno
ljmp
jb
es
xchg
stos
jmp
mov
mov
test
xchg
mov
add
into
adc
and
dec
in
hlt
mov
jecxz
jb
scas
and
lret
cwtl
inc
pop
or
jmp
pop
xor
cmp
int
or
jbe
loopne
adc
inc
fwait
adc
lahf
dec
in
cmp
jo
xor
fdivr
sar
iret
ret
push
cmpsb
and
sub
sbb
pop
test
popa
and
fs
pop
push
inc
mov
mov
or
or
daa
adc
fcomip
movsb
adc
lcall
mov
lcall
inc
and
add
inc
and
imul
enter
dec
insl
shr
sahf
imul
in
xor
xchg
scas
inc
ret
add
int3
loopne
cvttps2pi
sahf
mov
repnz
mov
xchg
add
xchg
xlat
test
test
repz
inc
jp
ljmp
sbb
cltd
das
addr16
dec
mov
pusha
dec
pop
xchg
mov
icebp
outsl
pop
mov
mov
fistps
pop
xchg
push
fdivl
mov
adc
mov
lret
shr
pop
mov
xchg
push
pop
jb
mov
roll
cmp
popaw
pop
imul
je
mov
mov
in
push
xor
dec
push
inc
mov
mov
ss
cltd
mov
push
fimuls
or
lds
insb
div
mov
push
xor
cltd
and
cli
sub
adc
js
push
cmp
lcall
les
out
ljmp
mov
mov
test
out
push
call
push
sbb
aaa
xchg
jg
push
jp
push
pop
mov
out
clc
or
insl
sbb
nop
add
sub
mov
sbb
dec
inc
in
jae
lahf
xor
push
mov
xchg
or
sub
call
jecxz
sbb
pop
stos
fsubs
mov
jae
adc
push
or
add
add
andl
stc
add
and
int3
lea
adc
aas
inc
mov
pushf
mov
pop
loop
mov
ret
lahf
out
shl
adc
push
mov
push
or
sbb
inc
movsb
inc
ret
ljmp
ss
mov
aam
jno
idivl
or
push
fldenv
arpl
iret
outsb
add
jnp
mov
lds
arpl
es
inc
fst
and
jb
icebp
fs
push
nop
adc
ret
js
mov
sbb
ja
pop
cmc
cmp
insl
arpl
dec
cmp
test
mov
scas
mov
add
dec
popf
ja
aad
xchg
mov
mov
or
adc
aaa
push
fucomp
imul
roll
outsb
movsb
mov
or
push
or
enter
sub
stos
cmpsb
sub
repnz
push
push
xchg
add
add
loopne
movsb
sub
fwait
inc
jge
xorl
rorl
aam
inc
xlat
leave
adc
cltd
jmp
and
adc
xchg
dec
or
add
cmp
out
popf
adc
out
ret
fstl
xor
sar
psubw
fists
push
or
push
mov
int3
sub
dec
mov
jnp
sbb
dec
inc
pop
sub
ljmp
cmp
mov
adc
mov
aad
xchg
outsb
in
jg
rclb
sub
jmp
add
arpl
pop
test
aaa
xor
jle
pop
mov
pushf
addl
jbe
inc
push
pop
pop
iret
gs
imul
push
pop
testb
push
cli
pushf
aaa
movsb
xrelease
xor
adc
mov
and
dec
cmpsl
jns
xor
dec
lcall
xlat
jnp
test
ret
push
mov
data16
leave
adc
dec
aam
mov
mov
fidivrs
mov
jmp
jae
fiadds
push
lret
std
xor
popw
cwtl
enter
pop
sub
sbb
arpl
clts
popf
inc
add
xor
ljmp
sbbl
mov
out
sahf
push
out
fmull
xchg
pusha
sbb
fidivs
jmp
sbb
or
jae
jle
sarb
mov
pop
test
cvtdq2ps
cmp
push
int
cltd
dec
loopne
or
mov
addr16
arpl
leave
xor
inc
test
xchg
dec
movsb
in
rcrl
popf
shrb
icebp
push
push
imul
mov
mov
lret
in
xlat
jmp
or
cmp
jge
mov
pop
cmpsl
ret
fdivrs
xchg
sub
mov
sub
adc
pushf
cmp
jo
mov
clc
in
adc
stos
cs
sbb
gs
dec
icebp
or
lret
pop
hlt
sti
int3
scas
jp
fstpt
int3
mov
pop
outsb
push
sbb
mov
sbb
ficomps
mov
ret
lahf
xor
out
repnz
sbb
fidivl
je
dec
mov
data16
ljmp
push
ret
pop
into
cs
inc
dec
or
enter
sub
sbb
jo
push
rcll
cmpsb
cmpsb
bound
xor
sbbl
pop
mov
jnp
mov
daa
cmpsl
movsb
push
dec
xchg
mov
jne
cwtl
xchg
jg
or
inc
std
fcmovu
mov
sbb
fs
jbe
mull
or
aad
pop
jno
or
jg
hlt
sub
arpl
push
sub
cmp
pop
lret
aaa
pop
fsubl
sbb
aad
aam
inc
pop
cmpsl
jbe
pop
repnz
test
pop
sub
aam
sub
cmp
loopne
sbb
ret
xchg
icebp
mov
call
call
popf
sbb
sbb
les
xchg
adc
sti
call
mov
push
mov
mov
lods
popa
inc
fcoml
lcall
ret
mov
gs
xchg
push
cmp
fidivl
int3
int3
out
inc
jne
or
cmp
clc
sub
sub
scas
sub
rcrl
loope
adc
cmpsb
xor
dec
movsl
dec
dec
out
ret
outsl
sbb
into
xor
lods
inc
insb
iret
es
cmpsb
int3
and
push
scas
js
popf
lods
or
jno
out
dec
pop
lods
cmp
mov
add
jmp
add
xor
clc
mov
inc
fmuls
scas
pop
lcall
and
push
sub
data16
sahf
pop
pop
mov
fbstp
pop
jmp
out
test
mov
dec
sbb
fisttps
inc
jne
cwtl
mov
test
sub
cmp
cmp
insb
hlt
lods
sysret
sahf
inc
dec
cli
jne
ljmp
mov
fisubrs
lock
jl
xchg
adc
mov
pop
aad
or
xchg
pop
mov
ss
addr16
iret
das
inc
xchg
sub
add
imul
mov
and
lds
mov
or
lret
dec
scas
jne,pt
jmp
pop
ss
rclb
jb
aam
fnstsw
hlt
pop
push
push
loope
gs
jne
loope
icebp
mov
jne
jmp
out
sbb
fldt
std
push
jno
pop
xor
pop
aaa
pop
sti
and
mov
dec
ja
js
mov
sbb
adc
xchg
cltd
and
nop
and
mov
lods
push
inc
push
mov
pop
or
mov
movsb
cmp
inc
cmp
stos
mov
mov
jb
outsb
shll
push
sbb
mov
stc
and
mov
jle
mov
call
mov
pop
pop
sbb
bound
mov
inc
inc
mov
sbbl
mov
pop
jnp
rcr
fsubl
push
outsl
jecxz
and
inc
add
ljmp
adc
mov
push
jbe
adc
cvtps2pi
test
mov
icebp
fcmovnb
jle
das
sub
cmc
push
mov
sete
add
sbb
loop
mov
popf
add
pop
ds
jl
nop
mov
cmp
sbb
and
insl
xor
push
outsb
arpl
mov
adc
and
std
js
inc
push
xchg
or
or
push
sbb
inc
xchg
cltd
jg
pushl
nop
and
gs
aad
mov
iret
in
inc
sbb
ds
outsl
movsb
dec
fildll
insl
add
xchg
dec
mov
pusha
fldt
int3
push
mov
inc
pop
cmc
dec
or
pop
daa
insb
jl
lahf
pushf
stos
clc
dec
out
lcall
or
or
xor
mov
imul
xchg
dec
mov
inc
push
jmp
dec
mov
daa
in
dec
loope
loop
inc
pop
ret
push
adc
jnp
rol
cmp
gs
les
sbbb
roll
mov
imul
rcll
inc
nop
push
stos
es
fwait
outsb
xorb
jmp
in
cli
xchg
mov
ret
mov
cmp
inc
pop
insl
adcb
inc
jge
dec
fsubrl
ss
pop
cmp
or
jae
popf
ljmp
or
xor
loopne
pop
adc
adc
xor
xor
push
dec
dec
ficomps
dec
movsb
lods
or
jnp
cmpsb
or
insl
xorb
popl
sbb
xorb
lods
stc
mov
adc
inc
clc
in
inc
push
adc
arpl
ljmp
fwait
mov
ss
scas
mov
jmp
jmp
imul
lods
sub
mov
push
and
hlt
xchg
jno
stos
xchg
xor
cmpsl
xor
or
inc
pusha
es
ss
mov
pop
ljmp
pop
cli
lahf
xor
aam
mov
mov
mov
lds
imul
scas
cmp
cmp
cmc
mov
inc
stos
in
std
cmp
fsubrl
jo
mov
cmpsb
jmp
pop
cli
add
popa
jmp
or
rorl
int
out
arpl
jbe
push
xor
loop
out
outsl
das
addr16
jmp
xor
fidivl
ss
cwtl
loop
clc
or
add
imul
push
outsb
movsb
and
mov
sbb
push
loope
cmp
ret
rcrb
lds
inc
jmp
mov
mov
std
jns
or
xor
outsl
sub
pop
xchg
sub
scas
mov
and
inc
rcrl
popa
mov
xor
hlt
sub
shlb
mov
cmp
sbb
js
in
outsl
out
sarl
imul
or
xor
stc
pop
xor
test
add
lret
sub
pop
mov
mov
js
aad
lea
notl
jecxz
push
aad
inc
aas
decb
outsb
es
sub
rol
roll
push
push
in
pandn
or
lret
in
dec
and
inc
arpl
xchg
xchg
std
xchg
xor
mov
popa
xor
fisttpll
ds
fisubl
mov
arpl
lods
inc
ja
into
andl
dec
loopne
and
sar
lret
ret
xor
mov
mov
mov
and
mov
loopne
das
xor
cmp
add
and
push
mov
ljmp
mov
mov
ret
sbb
aas
dec
lods
dec
movsl
fucomip
insl
xor
jge
jns
adc
inc
imul
dec
jbe
add
sarb
push
sbb
push
inc
mov
or
cmc
ror
xor
shll
add
jl
add
ret
sbb
shll
mov
lods
nop
cmp
into
mov
mov
imulb
adc
fdivrs
pop
dec
mov
ret
and
lcall
test
shr
ficompl
inc
test
fildl
popf
inc
lahf
inc
arpl
fstps
xchg
ljmp
jno
and
in
incl
sbb
adc
mov
jp
cli
xor
sub
int
add
rol
sub
int3
pop
mov
scas
cmpsb
cwtl
ja
sahf
mov
test
mov
enter
xchg
cmp
and
sbb
mov
jp
or
xlat
dec
scas
add
in
in
pop
mov
outsb
popa
mov
faddl
xchg
imul
repnz
leave
push
adcb
into
and
popf
stos
jg
mov
push
fisttpl
pusha
bound
scas
sarl
add
mov
scas
in
ljmp
push
testb
xchg
ljmp
call
sub
xchg
addr16
or
adc
sbb
and
mov
and
cwtl
test
aam
hlt
cli
lds
add
bnd
add
pop
mov
and
cmp
dec
cmp
sahf
xor
pop
inc
rcrl
jae
xor
push
push
xchg
dec
in
fdivs
fidivrl
mov
xchg
xchg
sbb
lret
jo
jecxz
mov
shl
pop
imul
rcrb
sub
jp
cmp
inc
jmp
clc
adc
idivl
testb
movsl
cs
mov
push
fisubrl
push
or
adc
mov
ja
cwtl
jno
inc
adc
mov
fisubrl
push
hlt
fdivs
hlt
lret
cld
adc
fs
fsubrl
imul
push
icebp
daa
lock
and
sarl
cwtl
add
push
fcmovnbe
mov
cwtl
scas
and
xor
popf
dec
call
cmp
pop
lock
jmp
test
lods
and
xchg
xor
rolb
and
cmp
adc
fildll
in
rolb
cmpsl
fsubs
inc
inc
jecxz
mov
and
mov
stos
jg
dec
inc
lcall
and
das
mov
sbbl
cmp
cmp
lcall
xchg
testb
mov
daa
nop
push
add
mov
mov
or
ret
std
inc
lcall
and
stos
filds
and
pop
mov
psrad
pop
cmpsb
jp
mov
mov
stos
sub
sbb
or
jbe
fwait
mov
push
cmpsl
shlb
inc
test
cs
mov
mov
enter
adc
inc
outsb
mov
push
sarl
and
test
dec
fidivs
int3
sub
adc
testb
cmp
xor
mov
mov
je
mov
fdivrs
int
je
aas
or
scas
push
pop
ficomps
shr
scas
xchg
or
xor
mov
dec
mov
mov
add
lcall
rcr
mov
imul
fsubrl
xchg
repnz
cmp
in
adc
push
sub
xor
and
inc
iret
ja
xchg
adc
ds
out
mov
cmp
jo
stos
pop
pop
fiaddl
xchg
test
or
ss
push
lcall
cltd
pop
decb
out
mov
inc
lds
dec
fiaddl
das
popa
fcompl
adc
dec
cmp
rorb
addr16
clc
fucomp
leave
adc
sti
or
scas
ds
out
repz
sbb
decl
mov
xorb
int
outsl
adc
cmpsl
and
inc
pop
pop
xchg
stos
inc
cmp
shrl
sub
xchg
xchg
out
std
bound
cmp
lods
frstor
sub
call
pop
out
inc
fcmovne
imul
xchg
inc
add
xchg
cmp
pop
insb
mov
or
mov
mov
push
movsb
ja
test
jno
inc
jp
ss
clc
sti
decl
push
fisubs
sub
sbb
leave
mov
mov
inc
xlat
sbb
pop
mov
cmp
fiaddl
jecxz
pop
adc
mov
iret
sub
sbb
add
xchg
sub
jb
mov
sbb
cltd
jmp
pop
sbb
add
stc
mov
inc
pop
aaa
mov
jo
xchg
ds
jo
scas
fidivs
mov
out
out
fnsave
adc
xchg
lret
add
cmp
lcall
fidivs
lods
cwtl
xor
inc
int
sub
enter
xchg
mov
leave
sub
adc
dec
fistpll
div
addr16
data16
jge
les
adc
pusha
inc
aaa
fidivl
cwtl
or
mov
ret
pop
mov
cmpl
shl
sti
or
cmp
mov
mov
sub
icebp
push
add
imul
dec
das
push
repnz
mov
mov
and
push
dec
add
xor
fsubrs
sub
mov
add
add
pop
in
push
in
add
jbe
pusha
jb
mov
inc
push
mov
loopne
lea
test
mov
mov
mov
add
nop
pop
xchg
into
xor
mov
popf
loopne
xchg
out
mov
push
mov
pop
mov
inc
testl
xor
aad
cmp
dec
ret
pop
push
in
xchg
inc
lcall
icebp
rclb
ja
loopne
gs
adc
sub
pop
std
push
sub
les
sub
jno
dec
enter
cmc
cmp
outsb
sbb
jae
cmp
enter
mov
push
cwtl
mov
xchg
popa
and
mov
mov
cmp
hlt
mov
dec
call
test
pusha
mov
push
jmp
testb
in
in
shrl
add
out
xchg
pop
add
pop
push
jp
sub
dec
leave
mov
and
sbb
or
cmp
lds
fisubs
daa
stos
add
in
mov
adc
add
loop
and
lock
jle
mov
mov
push
jle
push
pop
cmpsl
pop
push
sub
out
pop
pop
fldt
hlt
ffreep
push
jo
sub
fsubrl
movsb
xchg
testb
sub
and
mov
ds
out
movsb
dec
fstp
sbb
in
push
hlt
ss
xor
clc
decb
push
std
or
iret
push
xor
shrb
add
jmp
and
and
push
jno
or
dec
loope
mov
push
pop
movsb
or
rclb
and
cmp
scas
mov
loope
ret
inc
nop
sti
jb
addr16
inc
adc
push
jb
mov
mov
jb
dec
fildll
js
push
and
pop
std
and
add
cli
dec
pop
adc
movsl
lds
adcb
pop
jg
ljmp
push
jne
mov
aaa
and
rcll
lods
lock
adc
test
cmpsb
aas
sub
mov
das
cli
aam
mov
xor
and
sti
mov
and
dec
sbb
inc
rcrb
mov
pop
ret
lods
mov
cmc
pop
pop
out
sbb
jne
jnp
mov
xchg
cmp
lds
mov
push
sub
add
das
cmp
pop
nop
mov
ret
mov
xor
push
jg
pop
jmp
mov
imulb
jnp
sti
lods
mov
jg
jp
push
jae
xchg
mov
enter
rcr
pop
cld
and
push
jmp
es
sbb
sbb
insl
test
pop
arpl
imul
add
filds
mov
cli
xchg
pop
or
ljmp
push
out
jl
lcall
xchg
xor
shr
repnz
sarl
ret
pop
jb
dec
or
loopne
pop
sahf
xor
cld
daa
les
pop
add
sub
pop
and
sbb
aad
testb
sub
push
xor
inc
imul
push
mov
std
pop
pop
in
jmp
mov
inc
add
dec
add
aam
dec
cmpsl
dec
cmc
and
sbb
idiv
arpl
sahf
imul
iret
jecxz
stc
mov
pop
xor
movsb
ficoml
das
out
pop
movl
push
inc
dec
aam
xor
cs
inc
dec
int
aad
jbe
dec
lss
aaa
sbb
lods
ljmp
jns
scas
xchg
mov
push
push
xor
in
push
jns
mov
in
outsl
jge
loopne
mov
push
jnp
mov
cmpsb
mov
push
sub
xlat
or
cmp
sarl
mov
mov
mov
push
in
push
notl
xor
rolb
add
in
stos
push
cmp
mov
shll
or
das
sub
jo
cmc
pop
aaa
mov
dec
mov
mov
lret
mov
cmp
filds
mov
sub
pop
sub
sbb
inc
cld
pop
shl
int
dec
or
inc
into
pop
cltd
test
mov
inc
adc
xchg
xlat
fwait
pushf
xchg
icebp
lods
sub
mov
sbb
arpl
cmp
adc
lock
jo
jne
mov
shll
inc
gs
dec
in
sub
mov
sub
iret
aas
xchg
jl
mov
mov
xor
fsubr
add
les
jae
enter
lds
cmpsb
xchg
and
adc
cmp
ds
mov
mov
ja
jo
mov
sub
inc
ret
aam
jecxz
or
cs
add
jl
ds
stos
ss
gs
mov
push
outsb
fmul
bound
sub
je
push
jmp
pop
lea
adc
stos
pop
mov
or
out
int
std
mov
vmovdqa
dec
fidivrs
mov
negl
fnstsw
sbb
add
jae
pop
xchg
xor
pushf
xor
push
sahf
and
pusha
push
xchg
mov
jle
sub
dec
mov
imul
adc
mov
pushf
es
xchg
mov
sub
ljmp
cmp
adc
in
adc
loope
add
ret
xchg
xchg
or
fsubrp
test
test
pop
add
mov
sbb
jecxz
mov
pop
dec
sbb
dec
insb
loopne
out
scas
fdivrs
ss
and
mov
loopne
dec
adc
pushf
scas
push
jo
mov
imul
xor
testl
jle
or
push
sub
jp
cli
aad
inc
jae
je
jo
sub
mov
stc
or
insl
fisubl
push
inc
mov
lods
pushf
add
jae
jmp
inc
test
popa
mov
out
mov
popf
mov
cmp
clc
pushf
fwait
clc
in
inc
test
push
lods
fistps
sub
dec
sbb
jecxz
xchg
mov
pop
lret
mov
mov
pop
sub
nop
jmp
in
pop
jp
xor
mov
cmp
sub
xor
sub
into
arpl
sub
sub
inc
popa
add
add
in
sbbl
mov
sub
aas
pop
lods
cmp
out
vpmulhw
mov
mov
mov
add
xor
pop
sub
push
or
in
sbb
sti
push
mov
dec
or
lahf
xor
xorb
scas
mov
jb
mov
mov
stos
jnp
jae
rol
popa
inc
adc
mov
test
enter
imul
sti
cpuid
out
add
jle
ret
adc
out
xchg
or
loop
add
xor
fstp
fcoml
sub
jl
sub
adc
sub
xchg
sti
sbb
movsl
lea
repz
push
sub
in
pushl
push
or
subb
movsl
cmp
out
imul
dec
je
lahf
cs
cmp
add
outsb
lods
jmp
imul
jge
ds
add
nop
push
push
adc
xor
jmp
mov
adc
fwait
inc
je
pop
sub
sbb
and
dec
sbb
pop
jns
into
jbe
push
jmp
lcall
and
jle
fistps
iret
lahf
pop
dec
inc
sbb
or
jo
ficoms
and
or
add
sbbb
test
hlt
je
lahf
movsl
add
mov
jle
lcall
dec
vmread
sub
cmp
jno
js
scas
pop
add
fwait
push
xor
icebp
daa
jbe
dec
test
aaa
pop
shlb
sub
mov
push
jmp
mov
xor
adc
mov
insb
mov
imul
adc
pusha
lods
cmp
sub
lea
sbb
imul
clc
sbb
jg
pop
mov
jl
mov
cmp
mov
fyl2x
stos
mov
mov
sahf
test
pop
je
or
inc
adc
aaa
add
test
mov
dec
mov
test
shl
push
adc
xchg
and
fmul
xchg
bound
scas
push
dec
pop
xchg
iret
dec
out
xor
push
out
xchg
and
aaa
and
jno
cmpsl
test
loop
insl
mov
pusha
jno
clc
xchg
shl
repnz
mov
sbb
inc
and
pop
jmp
inc
cwtl
into
add
inc
fcompl
sbb
loope
dec
pop
das
add
gs
mov
dec
pop
push
sub
fxch
sub
aam
adc
dec
mov
pop
clc
popa
dec
sbb
outsb
pop
outsb
cltd
lock
mov
es
int
mov
pop
mov
push
xchg
push
aaa
and
xchg
loope
mov
std
and
pop
nop
mov
sub
popf
push
loop
ret
add
cltd
jo
mov
loop
and
inc
mov
sub
fisttps
imul
or
cwtl
stc
cmpsl
push
call
add
jge
ret
pop
sti
aas
xchg
mov
jg
inc
fcomps
fisttps
or
sbb
xchg
leave
xchg
lds
fmull
jnp
and
stos
cwtl
addr16
mov
sub
aad
xor
and
jecxz
mov
roll
cltd
pop
jmp
test
push
shrb
dec
sbb
xor
push
in
pop
push
sub
mov
sub
push
cli
es
pop
inc
insl
jge
push
arpl
scas
xchg
daa
in
test
mov
das
rorl
cmp
test
or
add
cmpsl
jb
ss
jns
sub
mov
sub
in
sub
bound
leave
insl
sbb
inc
cmp
jae
sub
outsb
xor
out
pop
jno
pop
push
mov
rcll
das
sbb
lahf
push
sbb
imul
test
lcall
jmp
fisubl
sbb
jmp
jl
xchg
cmp
imul
iret
cmp
and
jbe
and
inc
shl
cld
imul
stc
sub
cmp
pop
dec
jecxz
add
push
and
jns
inc
popf
stc
in
data16
lods
sahf
push
push
dec
inc
outsb
add
jge
adc
dec
dec
jge
cmp
arpl
adc
add
pop
and
push
loope
mov
adc
adc
pop
testb
push
xchg
hlt
or
data16
outsl
clc
pop
push
cmp
testb
xor
sbb
pop
xchg
push
add
loop,pt
dec
les
mov
lahf
jb
adc
fucomp
repz
stos
gs
sahf
je
push
mov
xchg
test
inc
inc
divl
les
jecxz
pop
push
pop
push
xchg
shlb
pop
or
pop
scas
popf
sbb
push
shll
add
movsl
rcrl
xchg
jbe
subl
in
sbb
cmp
inc
pop
aam
cld
add
push
jge
pushf
aam
into
aaa
mov
and
mov
mov
adc
jmp
je
mov
les
sbb
cwtl
mov
out
out
cmp
add
es
arpl
ja
add
cmp
cmp
sbbb
xlat
jp
mov
fidivrs
pusha
mov
scas
push
jp
push
sti
stos
sub
inc
out
addr16
pop
add
pop
mov
sbb
push
jmp
iret
xor
rol
imull
movsb
aam
data16
adc
fwait
xor
or
popf
sbb
sub
aam
lds
add
fwait
jp
cwtl
and
loopne
and
pop
xor
pop
cmc
iret
add
std
or
mov
mov
lea
add
lods
ror
fs
cpuid
test
cmpsb
into
movsl
sub
mov
xchg
sbb
dec
and
xor
pop
in
je
lods
loope
mov
push
negb
aam
dec
adc
dec
adc
push
mov
cmovns
jg
das
scas
aas
jmp
mov
imul
ret
insl
in
les
mov
aaa
mov
push
ss
out
arpl
shlb
cmp
mov
dec
add
or
fdivp
cmpl
push
jae
stos
mov
lret
ds
and
add
push
xchg
rcll
add
sub
mov
pop
inc
stos
jp
dec
das
les
les
stos
inc
mov
inc
jl
into
in
fistpll
xchg
in
lods
outsl
pop
mov
std
xchg
in
push
mov
xchg
or
pop
add
push
hlt
sub
aam
sbb
mov
in
rcrl
jae
movsb
mov
mov
mov
jnp
cmc
mov
loopne
int3
sbb
push
out
sahf
xor
scas
call
push
icebp
xor
push
add
or
insl
mov
sub
and
lock
mov
cld
adc
sbb
push
mov
loopne
aas
xchg
xchg
leave
inc
clc
test
fnstcw
or
ret
std
jge
mov
jb
mov
data16
push
or
push
mov
sub
push
fldl
cmpsb
fs
sbbl
cmpsw
fidivs
mov
or
push
xchg
jns
mov
sarl
fld
out
mov
mov
out
push
negb
xor
jne
stos
mov
adc
arpl
jno
in
in
sub
jns
xor
adc
mov
movsb
mov
outsl
lods
push
jmp
xor
dec
adc
fs
xchg
les
push
sbb
pop
or
mov
mov
xchg
add
out
xchg
and
jp
add
lock
cli
in
cmp
push
ljmp
dec
cmp
and
iret
pop
insl
loop
cld
dec
push
int3
sbbl
test
mov
dec
lods
mov
test
ljmp
mov
je
sub
dec
push
es
outsb
inc
inc
sbbl
adcl
sahf
outsb
adc
adc
test
xor
pop
cmpsb
jb
inc
dec
sub
iret
sbb
inc
frstor
into
rorb
arpl
andb
bound
mov
stc
jmp
pop
lea
lea
dec
jecxz
sub
gs
nop
push
out
outsl
loop
mov
cmp
icebp
jge
and
shl
xchg
enter
daa
mov
cmp
xlat
je
jns
mov
stos
fs
test
popa
lods
xchg
mov
inc
arpl
out
lds
and
mov
mov
jns
arpl
lods
xor
leave
inc
dec
jnp,pn
push
lret
test
call
xlat
or
aas
les
fimuls
or
fdivrl
pushf
rcll
inc
test
mov
push
or
mov
sub
push
test
bound
scas
xchg
and
das
cmpsb
in
pop
imull
mov
in
or
pop
enter
shl
inc
clc
fbld
push
scas
inc
sub
nop
xchg
dec
stos
popa
push
push
pop
scas
cmp
mov
mov
shlb
and
sub
ss
lea
insl
test
push
add
inc
add
inc
add
cwtl
xor
or
std
pop
pop
add
repnz
mov
fdivs
dec
insl
sbb
xchg
mov
cmc
mov
pop
mov
fs
xchg
dec
xchg
jmp
iret
or
fadds
dec
mov
imul
and
ss
pop
add
out
ret
dec
dec
iret
cmp
loopne
push
sti
xchg
fstl
sub
stc
and
repz
insl
data16
je
repnz
mov
pop
enter
xlat
inc
ficoms
lret
bound
bound
sbb
sub
scas
insl
pop
mov
out
dec
aam
stc
dec
inc
cmc
xchg
mov
push
jmp
push
outsl
cwtl
sub
pushf
lds
mov
or
sbb
inc
mov
sbb
xor
inc
jae
jge
in
rcrb
movsb
jnp
lret
ret
mov
sub
repz
test
fwait
or
push
xor
push
xor
rorl
out
out
sub
mov
cmpsl
stc
enter
xchg
cmp
outsl
movsb
insl
les
mov
mov
cmpsb
mov
pusha
xor
mov
shll
jmp
ret
in
aam
ljmp
mov
mov
inc
fnsetpm(287
ds
loopne
pop
mov
add
mov
pusha
mov
adc
fcoms
icebp
xchg
or
or
xlat
nop
adc
leave
nop
cmp
push
fmull
xchg
mov
cld
and
imul
icebp
sahf
xorb
leave
xchg
ds
adc
test
fcomps
lods
add
add
std
shl
mov
sbb
add
sub
aas
pop
adc
lods
xor
jo
out
sub
push
cmp
add
sub
sbb
out
outsb
sub
rorb
mov
outsb
inc
cli
int3
stc
bnd
shrl
rclb
jecxz
cli
sti
xchg
popa
add
sbb
mov
adc
mov
mov
dec
in
daa
push
jne
jae
cmp
out
mov
adc
jmp
sub
clc
nop
icebp
cmp
sbb
sbb
xchg
sub
jp
sub
and
shll
test
loope
pop
cld
cli
daa
stos
das
fistps
iret
aaa
repnz
jb
adc
in
lret
sub
and
add
imul
fildl
roll
lcall
xor
dec
in
popf
loopne
inc
push
daa
mov
lds
push
repz
pushf
div
add
test
adc
shrb
cmp
int
es
sti
incl
in
stc
adc
or
add
stos
mov
dec
mov
jmp
aaa
push
sti
xor
sub
push
xchg
roll
mov
into
clc
push
sbbb
mov
jg
mov
cmp
divl
scas
add
push
adc
add
xor
push
pop
or
cmp
stos
inc
sub
dec
scas
out
sbb
movsb
or
cmpsl
jb
movsbl
mov
shrb
inc
insb
and
cmc
push
mov
adc
sahf
xor
add
repnz
insb
gs
xor
and
out
add
scas
mov
out
inc
dec
and
stos
xchg
pusha
pop
adcb
dec
dec
repnz
iret
lcall
out
clc
add
xor
ss
xchg
push
ret
ret
sub
std
add
jae
add
sbb
jle
xchg
jne
add
sub
adc
jge
hlt
enter
stos
mov
fdivs
mov
sub
gs
jecxz
fiaddl
andb
cmp
xchg
adc
dec
dec
dec
in
mov
jge
push
in
out
dec
mov
or
mov
enter
adc
imul
cs
lods
mov
lret
pop
inc
push
inc
xchg
cmp
sbb
addb
lds
push
icebp
test
dec
sbb
insl
repz
fmull
lcall
sahf
inc
call
movsb
iret
fwait
bound
cmp
cmp
sub
shlb
in
push
add
imul
mov
sub
shrb
and
sbb
jae
sub
es
in
xor
mov
jo
mov
aas
adc
es
adc
ret
sbb
gs
data16
call
sbb
outsb
mov
xchg
pop
sub
cmp
imul
es
jo
sub
out
cmpsl
push
lds
lods
into
inc
sbb
mov
fldcw
notl
fildl
gs
xor
and
add
dec
popa
enter
fistpll
lods
int3
lret
fs
sub
inc
jmp
scas
cmpsl
jo
xchg
lret
in
rcl
push
fcoml
mov
mov
rol
jb
jb
imul
ljmp
rclb
xchg
adc
inc
inc
fwait
jae
idivl
lret
xchg
and
enter
nop
std
pop
adc
ds
mov
mov
call
sbbl
sti
repnz
sub
adc
cmc
jge
daa
jns
jge
inc
add
call
jno
sahf
xor
lret
enter
jge
mov
jle
mov
aaa
shrl
xlat
stc
fimuls
inc
ss
push
movsl
aaa
push
or
mov
add
ds
cmp
arpl
jnp
lret
mov
jg
scas
push
ret
in
sub
push
or
dec
stos
int3
inc
jmp
mov
dec
loope
mov
nop
test
push
decl
cmp
pop
mov
push
adc
sbb
aaa
or
out
subl
mov
push
mov
in
jle
xchg
pop
cmp
mov
sub
inc
mov
aas
and
xchg
cmp
insb
mov
xchg
pop
adc
cltd
jo
xchg
aaa
push
dec
or
ret
mov
pop
sub
push
fwait
das
movsb
cmp
mov
ret
jl
test
mov
xchg
xchg
jns
pop
xor
movsb
fwait
into
and
jne
jb
pop
xor
cmp
data16
sub
dec
mov
mov
in
xchg
inc
rcll
roll
jle
push
xchg
iret
rcll
add
cltd
lods
xchg
cmp
xchg
icebp
mov
add
cs
xor
add
outsl
push
and
mov
out
adc
loop
dec
fbstp
mov
lcall
jmp
mov
jno
jmp
out
pop
xchg
pop
scas
scas
jb
in
scas
mov
ror
and
hlt
xor
nop
adc
mov
je
gs
ds
inc
enter
or
scas
outsl
daa
cli
pop
sar
roll
and
lods
fidivrl
subl
add
out
sub
mov
push
arpl
cwtl
push
lcall
aaa
fstps
out
cmp
pop
push
sub
arpl
adc
stos
pop
push
mov
mov
lahf
ds
stos
pop
out
or
aaa
into
or
cmp
xchg
jo
enter
movsb
sub
fstpt
mov
iret
ss
mov
push
out
test
lods
jg
shll
cmp
insb
xchg
pop
rorb
sub
insb
adc
repz
ret
imul
loop
push
inc
mov
jne
cmp
xchg
ja
fwait
inc
inc
inc
mov
data16
adc
insl
out
std
std
or
adcb
mov
mov
insb
mov
decl
aam
inc
mov
lods
xor
jl
cli
sub
xor
sarl
fsubrs
pusha
adc
bound
mov
arpl
insb
jmp
negb
and
jbe
add
sbb
fxch
mov
push
je
mov
pop
scas
lahf
mov
daa
in
mulb
push
jp
fidivrs
or
adc
xor
pop
aad
jmp
sub
mov
clc
inc
ret
add
and
pushf
mov
mov
adc
ss
das
cmp
test
enter
bswap
jnp
cmpsb
mov
je
shll
rorb
and
mov
inc
jle
mov
and
repnz
cmp
xor
or
popf
sbb
mov
lds
cli
ljmp
enter
subb
sahf
sub
ret
pop
or
add
sub
mov
pop
or
mov
insl
mov
in
cld
mov
pop
stos
mov
loop
xchg
fwait
sub
inc
loope
ds
shl
in
aas
xor
mov
push
xor
adc
dec
jbe
fcoms
push
sub
dec
cli
inc
addb
dec
mov
push
fistl
call
inc
bound
push
imul
xor
xorl
cltd
xchg
scas
lret
dec
fimuls
jae
and
lods
inc
lock
mov
sbb
adc
rorl
add
out
push
leave
in
rcrl
shlb
data16
stos
scas
notl
rolb
add
add
aas
sbb
notl
add
push
fnstsw
test
fs
dec
push
insb
jle
jmp
sahf
mov
inc
enter
fnstsw
mov
pop
mov
jmp
push
insl
jp
xchg
add
mov
nop
or
filds
xor
xor
push
enter
lock
jno
mov
rcll
inc
aas
fwait
pop
add
pop
insl
leave
jp
sti
ljmp
leave
out
xchg
add
adc
subl
xchg
add
aam
daa
dec
cmpsb
gs
add
sbb
jno
sbb
mov
dec
jecxz
sub
sbb
filds
jge
in
cmp
inc
mov
in
push
mov
xchg
inc
icebp
popf
jg
and
or
add
dec
ret
ret
into
push
mov
inc
mov
leave
stos
mov
movsl
inc
std
aam
jnp
test
mov
add
sub
mov
loopne
and
inc
add
cmpsb
cli
xor
loopne
cmp
iret
outsw
pop
lds
sub
and
les
adc
xchg
mov
repnz
roll
mov
imul
movsl
jb
xlat
popf
popa
stc
xchg
js
jl,pt
adc
lcall
ja
inc
pop
mov
push
dec
add
insl
jb
push
in
shl
movsb
push
pop
cmovb
mov
mov
cmp
cwtl
ja
xor
dec
test
inc
inc
subl
pop
repz
add
mov
mov
sbb
bound
push
add
xor
mov
into
jb
roll
sub
inc
lcall
jne
cmp
pushf
sbb
flds
imul
mov
add
xchg
add
mov
movsb
cmp
out
dec
loopne
nop
ss
iret
jecxz
aam
pop
cmpsl
cmc
dec
xor
jge
out
dec
pop
xchg
std
cs
jns
hlt
stos
sar
xchg
lcall
mov
and
in
es
cmp
and
mov
das
cli
mov
xchg
cmpsb
cmp
out
movsl
aaa
jbe
xchg
stos
add
fmuls
cs
mov
popf
xor
rol
ret
mov
ds
loope
in
aam
dec
jp
ret
out
fwait
xchg
sub
cmpsb
dec
add
push
xchg
sub
iret
scas
mov
stc
clc
mov
stos
and
lock
inc
insl
divb
push
jmp
bound
jmp
adc
cmp
inc
jp
ja
movsl
mov
dec
cld
inc
sub
add
fidivl
jg
cmp
cmp
xchg
adc
cli
jae
ss
popa
aam
xor
xor
push
or
dec
push
jg
fldt
fmuls
sbbl
mov
mov
pop
std
push
mov
stos
fstl
sarb
mov
in
in
xchg
adc
add
cli
xchg
ds
outsl
ss
pop
sbb
push
dec
jl
jae
pop
dec
fcomps
mov
stos
notb
cmpb
lods
pop
lret
das
push
sub
in
add
in
negb
sub
loop
and
xchg
sub
imul
xchg
jno
ret
fcmovnb
aad
pop
cmc
iret
jge
pop
or
cmpsb
cmp
dec
popa
les
clc
jbe
mov
std
cmp
or
sbb
mov
aad
adc
ret
stc
or
jge
xlat
lcall
test
fldenv
xchg
sub
mov
sbb
sub
dec
mov
mov
shll
test
cmp
mov
test
popa
test
mov
mov
stc
mov
insl
stc
aad
mov
jecxz
cmp
inc
pop
inc
addl
outsl
xor
clc
xchg
popf
ret
pushf
sbb
push
jg
in
mov
outsl
mov
xor
inc
mov
mov
scas
mov
lahf
loope
inc
push
xor
xor
je
ret
int3
imul
sahf
rorb
cmp
cmp
insb
xor
loopne
push
jbe
sub
iret
mov
add
mov
jmp
lret
int3
stos
or
adc
lods
dec
imull
sbb
fstpl
inc
in
fcomip
fldl
nop
cwtl
int
mov
cmp
sub
jle
add
imul
pop
jmp
push
repnz
andl
jecxz
jns
mov
popf
push
out
sub
aaa
sbb
cli
inc
jno
fstpt
pop
repnz
mov
mov
imul
mov
in
sbbb
pop
mov
xchg
push
lods
adc
int3
sbb
add
xlat
pop
xchg
fiadds
mov
push
sbb
in
push
popf
push
ret
es
push
mov
adc
or
std
lods
popf
stos
inc
iret
xchg
cmpsl
test
xor
aas
xchg
sbb
andb
aas
jmp
push
inc
push
lahf
andb
int3
cmp
pusha
rorb
xchg
lcall
cwtl
les
orb
inc
and
inc
ja
cltd
lods
mov
icebp
pop
cmc
adc
jbe
and
test
and
xchg
jg
popf
rcll
scas
daa
add
repnz
push
call
ljmp
ljmp
and
xchg
or
pop
and
mov
into
pusha
cmp
xchg
jl
sbb
test
adc
xor
inc
test
daa
shl
xor
ljmp
das
push
shlb
enter
adc
test
and
xchg
dec
loopne
shr
xor
imul
subl
shr
rcrl
ss
int3
lea
aad
out
enter
adc
sub
adc
test
popa
lea
mov
inc
icebp
idivl
cmp
sbb
and
addl
jnp
xchg
sub
pop
add
pop
mov
ret
ret
jecxz
aad
std
outsl
es
lcall
jbe
xchg
sbb
icebp
pop
mov
rol
scas
scas
movsl
push
pop
lahf
aad
fstp
add
cwtl
cld
sub
out
data16
outsb
pop
mov
dec
push
jg
mov
pop
dec
aad
jnp
andl
faddl
lea
dec
mov
hlt
addr16
xchg
scas
or
addr16
mov
stos
push
xor
into
arpl
stos
mov
lock
sub
inc
cwtl
pop
mov
insb
movsb
sub
aaa
sub
dec
fsubl
sbb
cwtl
lret
addr16
mov
jb
push
adc
hlt
lods
jne
mov
into
into
pop
in
enter
in
aaa
rcr
insl
test
pop
lock
pop
arpl
inc
adc
clc
lahf
neg
loope
test
jb
dec
mov
sbb
or
pop
add
ret
fwait
pop
sub
mov
dec
stos
ds
cmpsb
jecxz
push
jns
fidivrl
movsb
testl
jo
test
push
inc
mov
shl
mov
fnstcw
rcrl
fs
or
roll
sub
add
cmpsb
push
pop
js
mov
xor
test
aas
dec
rcrl
fdivp
mov
mov
insl
std
adc
mov
xchg
das
loop
push
pop
push
loop
dec
mov
add
fucomip
dec
fstps
add
inc
lea
cmp
xor
dec
xor
xchg
and
loopne
inc
add
popf
out
xchg
push
call
dec
dec
out
clc
or
leave
aam
jae
lods
jmp
subb
sbb
mov
ret
addr16
faddl
jmp
int3
dec
scas
arpl
mov
int
add
xor
pop
push
out
inc
gs
cmp
xchg
jae
add
stc
jp
push
mov
adc
aas
cmp
stos
dec
dec
subl
leave
dec
push
out
insl
int3
pop
fisttps
or
rorb
in
cmpsl
and
popa
jno
gs
dec
mov
fnstenv
ficoms
andb
sti
pop
in
fdivr
jge
xor
out
sbb
lea
fcoml
jnp
in
mov
and
notl
es
popf
add
iret
push
mov
mov
lods
adc
and
jge
adc
in
add
add
fidivl
xor
and
sbb
mov
jp
jl
shrb
lret
into
movsl
dec
add
adc
mov
call
fmull
fadds
cld
fldpi
fcmovne
iret
mov
adc
and
push
sub
xchg
cltd
iret
mov
insb
pop
cltd
pop
aaa
int
mov
mov
aam
js
and
or
scas
adcl
or
push
cld
push
ds
cmc
dec
and
xor
fsubrs
and
orl
cmp
mov
pop
xsha1
cmpsb
mov
xor
push
xchg
cmovg
inc
and
jle
jne
sti
mov
or
xor
sub
xlat
push
mov
ret
lea
add
mov
pop
ffreep
test
xor
sahf
and
sarl
push
imul
out
jne
cmpsl
rol
mov
mov
xchg
repnz
mov
adc
int3
loopne
adc
and
and
push
imul
mov
sarl
cmp
fldcw
shll
mov
sbb
lahf
data16
jnp
mov
js
hlt
sub
inc
pop
out
xchg
add
ljmp
ds
mov
shlb
ret
and
andl
xchg
sub
jns
sub
cmpsl
ret
in
pop
mov
jp
jle
adc
inc
fnstcw
xlat
push
lcall
cmc
jle
sbb
xor
pop
lahf
and
sub
dec
push
in
shll
es
cmc
das
cmp
push
adc
pop
cmp
imul
ja
testl
lcall
cmp
int
cmp
subl
mov
rolb
fdiv
cld
sub
xchg
fidivl
enter
mov
fnop
je
pusha
stos
aas
sbb
lahf
and
mov
movsl
add
dec
xor
test
mov
pop
mov
push
ds
mov
xchg
sbb
repnz
or
dec
lds
add
ret
in
dec
clc
inc
jg
outsl
adc
mov
pop
sbb
xor
pop
xchg
insl
lods
imul
outsl
xchg
mov
repz
cmp
push
popl
int3
xchg
xor
cmpsl
out
movd
add
xor
std
je
aaa
clc
shrb
mov
mov
mov
lea
dec
adc
cmp
dec
out
orl
xor
aam
pop
pop
push
xchg
cs
jo
adc
shll
test
nop
xchg
mov
mov
insb
adc
ret
mov
ds
ljmp
insb
jmp
push
lods
mov
add
xchg
movsb
arpl
data16
pop
fcoml
dec
mov
test
mov
cmp
pop
ljmp
repz
inc
call
std
inc
rcrb
mov
js
ds
insl
ss
cli
in
hlt
mov
add
pop
xor
pop
push
cmpsl
push
in
jg
ficoms
and
or
ds
push
inc
fidivl
fstl
icebp
push
dec
icebp
movsl
jle
insl
stc
sub
add
outsl
dec
sbb
call
and
adc
adc
dec
mov
mov
aad
pop
mov
andl
lahf
div
repz
in
enter
ficoml
scas
aam
loopne
add
jbe
mov
fdivl
sbb
sub
lods
lds
inc
dec
dec
test
add
xchg
jb
lahf
mov
in
dec
add
test
cwtl
mov
adc
std
fldcw
cmc
aam
or
jl
imul
inc
or
mov
sub
neg
fdivrs
add
loopne
sub
inc
mov
test
jmp
loope
lret
dec
mov
mov
cmp
sarb
and
rclb
ret
pop
lcall
loopne
and
scas
push
dec
pusha
aaa
fldl
jp
lahf
btl
push
cmp
inc
je
js
andb
mov
sub
rol
mov
adc
repz
mov
cwtl
cwtl
sub
mov
cmp
and
xor
inc
lds
enter
push
push
mulb
mov
arpl
cs
adc
cld
inc
dec
mov
and
js
in
das
outsl
push
jmp
pop
add
xor
ja
out
xlat
and
mov
jne
inc
inc
imul
pop
in
pop
in
jle
movsl
loope
dec
adc
rep
mov
mov
mov
dec
sti
jge
aaa
mov
cmp
adc
or
push
dec
dec
jb
jns
notb
push
cmp
scas
mov
out
adc
pop
repnz
cmpsb
and
or
xchg
jp
in
or
pushf
aad
les
mov
mov
fwait
les
cli
jp
jnp
lcall
jne
mov
adc
sub
or
push
sbb
movsl
mov
ret
repz
sbb
pushf
es
push
fwait
cmp
and
call
fisubrs
sbb
scas
or
in
and
pop
lcall
lea
lods
jl
mov
cwtl
push
mov
xor
xchg
cmp
das
cmp
fwait
pop
ret
dec
and
cltd
dec
sub
cmp
pop
push
je
add
dec
das
dec
mov
in
mov
xchg
pop
sarb
push
and
jnp
and
add
mov
mov
lret
cld
mov
mov
mov
xchg
fmulp
cltd
jns
pop
imul
xchg
out
leave
bound
out
pop
push
dec
scas
xor
jne
inc
imul
pop
outsl
mov
jg
or
and
sti
mov
cmp
adc
pop
shll
cmp
inc
mov
or
or
pushw
xor
push
inc
dec
xor
dec
add
in
mov
jno,pn
xor
push
in
jle
sub
call
fists
pop
mov
mov
divl
pop
in
orl
or
mov
jne
pop
popa
enter
xchg
sub
outsl
jmp
jmp
add
filds
test
outsb
cmp
iret
in
mov
popa
test
shlb
dec
cmp
imul
jle
mov
sbb
xchg
jbe
push
and
adc
sbb
mov
add
jge
shrl
scas
xor
lock
shrb
test
dec
repnz
fnstsw
iret
imul
sbb
mov
pop
in
sbb
sbb
push
jecxz
inc
pop
pusha
call
and
mov
lea
sti
dec
cmp
adc
xor
jmp
add
adc
jae
popa
inc
jmp
addr16
je
lods
cmp
mov
fildl
loop
hlt
sarl
mov
aam
and
ds
jl
cs
jmp
mov
cmp
out
xor
movsb
filds
ret
and
addr16
pop
lds
mov
jae
xchg
mov
lret
mov
imul
fistpll
or
push
lcall
jno
sbb
mov
dec
or
jl
mov
fistps
cs
test
pop
jo
jae
push
sub
xchg
xchg
ss
pop
les
push
cmp
mov
je
shl
icebp
rcrb
cwtl
xchg
mov
jg
loopne
inc
sbb
inc
mov
xor
insb
imulb
pop
xchg
in
push
je
mov
cmp
stos
ret
push
fdiv
loopne
ss
sbb
jmp
push
xor
xor
orb
inc
mov
cli
pushf
add
sub
push
and
imul
cmp
inc
in
aam
pop
test
les
shlb
mov
xchg
xchg
adc
scas
jns
push
mov
jb
jbe
pop
outsb
lds
mov
push
inc
mov
out
cmp
jp
loopne
mov
pop
movsb
aas
sbb
loop
test
mov
mov
stc
dec
mov
and
jmp
iret
das
pop
sub
int3
jns
jge
scas
clc
or
addr16
jge
scas
push
and
stos
jns
outsb
and
mov
test
sbb
and
aaa
push
or
xor
mov
hlt
inc
fiaddl
xchg
mov
leave
sub
inc
fwait
test
and
push
icebp
std
mov
mov
jp
sbb
movsb
and
or
stos
insl
imul
lahf
dec
xchg
mov
pop
cmp
insb
aas
push
fnstenv
ljmp
nop
xor
pop
stc
dec
push
sub
sbb
ret
int3
xor
push
push
dec
add
jg
dec
mov
mov
sub
movsb
ret
lock
xor
daa
inc
pop
jns
mov
and
js
sub
aam
push
sub
popf
mov
mov
loope
sbb
inc
jp
cmp
and
adc
sbb
mov
xor
lods
outsl
add
movsb
sub
mov
je
js
pop
lahf
inc
jge
mov
fwait
xor
mov
sar
pop
lret
filds
scas
inc
inc
loopne
fsubrl
test
out
sub
je
xor
pop
push
add
cs
xchg
pop
imul
cmpl
sahf
push
data16
ss
imul
repz
dec
jmp
add
jnp
jecxz
and
cltd
sub
inc
ret
dec
jmp
lret
xor
mov
pop
xchg
xchg
in
pop
cli
std
stos
jo
test
xchg
mov
lret
xchg
push
pushl
pop
data16
sbb
dec
jbe
subl
int
movsb
flds
push
sub
lea
ss
call
test
mov
inc
cwtl
pop
std
lret
sub
fldenv
loop
sub
xor
push
dec
adc
pop
adc
cmpsl
push
or
inc
pop
cs
in
test
scas
pop
ja
insb
sahf
cmp
outsb
or
or
xlat
je
mov
pushf
and
mov
add
adc
mov
lock
lods
and
bound
scas
mov
jne
in
mov
loopne
aaa
adc
loope
inc
pop
mov
push
xchg
jge
dec
mov
shll
sarl
jmp
ret
mov
cwtl
jmp
movsb
push
fdivrs
mov
ja
pop
push
mov
test
insl
sti
jl
cwtl
mov
lret
cmpsl
sub
out
into
aad
mov
enter
inc
insb
inc
mov
fisttpll
jne
mov
sbb
adc
hlt
aam
imul
mov
outsb
xor
gs
jge
vpunpckhwd
inc
das
cmpsl
xor
setg
dec
mov
mov
cwtl
movsl
cli
sbb
ret
dec
jl
push
mov
and
data16
leave
jg
jl
call
fbstp
es
push
mov
nop
sbb
sbb
cmp
mov
sub
jb
lods
sub
in
pop
stos
dec
enter
out
fists
lret
dec
pop
bound
mov
sbb
and
dec
mov
mov
xchg
cmp
mov
jns
and
jnp
push
xchg
sub
inc
sbb
mov
mov
aad
or
cmp
cmp
add
lods
fldl
sub
int3
stos
inc
lahf
mov
inc
popf
lods
jle
clc
mov
mov
les
sti
shrb
mov
lods
xchg
adcb
xchg
push
hlt
dec
hlt
cmp
dec
in
dec
mov
xchg
sbbl
imul
push
cmp
mov
push
clc
mov
cmp
jmp
push
cltd
popa
or
aas
nop
push
push
inc
xchg
jecxz
les
fdivr
pushf
adc
xlat
xchg
test
clc
adc
fucomip
fdivrs
hlt
mov
jb
push
jae
dec
xor
cmp
test
outsb
add
xor
lea
nop
sti
pop
ret
dec
jmp
mov
dec
cmp
repnz
xchg
cli
cmpsb
lock
fcomi
jl
jb
jp
pop
jge
pop
popa
std
rclb
stos
jp
mov
aad
rclb
test
adc
out
push
jmp
mov
popf
pusha
in
sbbl
test
jge
sarl
clc
mov
out
pusha
mov
sbb
sub
lods
pop
jge
sub
sbb
in
sbb
add
push
jb
and
bound
sub
xchg
mov
lcall
jmp
ret
inc
pop
popf
dec
mov
in
jp
out
out
adc
pop
mov
dec
loope
pop
loopne
mov
nop
inc
and
xchg
adc
mov
stc
enter
call
dec
nop
mov
mov
cli
or
adc
fisubl
or
push
pop
out
and
loop
pusha
jae
pop
cmpsl
or
adc
add
sbb
xor
dec
add
sbb
and
pop
lods
sbb
sbb
lret
jg
jmp
sti
inc
bndstx
dec
int
inc
pushl
pop
cwtl
ret
dec
repnz
pop
je
push
ficoml
xor
ja
aad
lods
mov
out
arpl
or
cmp
test
faddl
mov
fnstenv
sbb
lret
mov
add
fldcw
ret
fwait
cmpsb
les
call
or
insb
cmpsl
gs
lcall
stos
cwtl
jecxz
nop
sub
aad
int
pop
mull
aam
clc
mov
cmp
clc
and
push
mov
inc
in
pushl
fwait
push
addb
push
je
leave
insb
inc
push
push
popf
cmpsb
and
push
mov
loopne
aas
mov
mov
loope
pusha
ds
jnp
loopne
xchg
xor
stos
test
stc
mov
and
ret
lret
pop
imul
gs
cmc
out
push
dec
int
mov
jne
aas
sar
stos
mov
dec
inc
push
jle
jbe
ja
jae
jo
jg
in
cmpsl
out
fs
sahf
xchg
cmp
jbe
cmc
mov
shll
mov
or
lds
dec
aaa
add
pop
cmp
lods
cmp
cmp
ljmp
mov
cmc
xchg
xor
sti
mov
stos
xor
mov
sub
ja
aaa
ljmp
in
xchg
jecxz
ljmp
stos
push
and
jle
test
ret
jne
jg
jg
xchg
xchg
outsl
fisubrl
jne
in
fsubl
fwait
lds
inc
shlb
cmpsl
dec
dec
popa
or
jg
mov
out
rcrl
cmp
stos
js
ja
jo
shll
inc
fidivs
repz
data16
mov
enter
imul
mov
sbb
enter
ljmp
mov
mov
cmpsb
pop
es
cwtl
adc
leave
pusha
pop
mulb
jge
stos
inc
movsb
push
dec
add
ds
outsl
daa
aaa
movsl
ss
gs
cmpsl
pop
jns
dec
cmp
jbe
iret
cmpb
sbb
fldt
stos
push
xchg
mov
pop
ds
pop
xchg
xchg
mov
les
imulb
cmp
leave
and
pop
lock
gs
adc
jecxz
cwtl
icebp
push
lds
cmpsb
sbb
lods
sbb
das
fimuls
rcll
jle
sub
mov
mov
repnz
xchg
adc
push
mov
in
icebp
cmp
nop
data16
sbb
sbb
sbb
sub
mov
xlat
aam
inc
mov
sbb
mov
push
push
adc
movsl
mov
fnsave
add
mov
or
mov
or
imul
xor
ljmp
shll
pminsw
test
test
mov
std
nop
add
add
cmp
andb
in
ret
xchg
cltd
pop
push
not
insb
into
in
lods
fistl
ljmp
scas
add
loopne
jne
insl
fisubl
aas
or
pop
shrl
or
icebp
icebp
mov
add
or
stos
xor
fsubrp
sbb
cld
xchg
xchg
mov
fsubrl
insl
xchg
jmp
ret
sbb
adc
jne
mov
push
xchg
sub
imul
daa
pop
xchg
testl
and
in
mov
out
cmpsl
fsubrs
xchg
xlat
sub
negl
jmp
mov
movsb
xor
leave
fnstenv
insb
mov
loope
cmpsb
jge
jecxz
cs
ret
adc
cmc
jg
xchg
xchg
sub
in
mov
out
xchg
sbb
adc
in
das
dec
mov
push
daa
xorl
sbb
jp
push
in
cmpsb
rorl
jle
rclb
inc
mov
adcl
jae
jns
test
cltd
mov
pop
jb
aas
subl
cmpb
aad
cmp
pop
mov
inc
leave
int3
ds
gs
jmp
imull
shll
test
out
mov
aas
push
ficoms
fadd
sarb
dec
testb
xor
daa
dec
lahf
ffree
pop
push
jg
test
int3
out
and
sbb
jge
shrb
jle
stos
repz
adc
xchg
jmp
movsb
cmpl
mov
or
mov
jg
stos
push
jb
push
jbe
popf
sub
and
lret
jge
dec
and
popa
xor
test
enter
out
jl
adc
in
les
mov
bound
push
pop
ret
add
mov
mov
sbb
or
ffree
mulps
mov
jl
roll
cmpsl
push
push
into
mov
cmp
or
fs
adc
je
wrmsr
inc
test
xchg
pusha
dec
cmp
and
mov
test
sub
fimull
jae
push
cmp
or
movsb
lods
jge
ja
mov
mov
repz
mov
add
ss
lret
jne
out
lods
insl
loopne
xor
cwtl
push
push
mov
sbb
xor
outsb
mov
push
xchg
ret
adc
dec
icebp
mov
inc
test
fs
adc
mov
shrb
jo
andnps
ja
inc
sub
ljmp
testb
adc
sbbb
sahf
orl
movsb
adc
and
aas
xor
test
in
cmp
adc
mov
push
inc
loope
loopne
push
xchg
sub
mov
pop
jae
or
or
shlb
fs
mov
test
fwait
cmpsl
inc
mov
fnstsw
pop
dec
imul
cmp
cmc
mov
mov
push
jle
scas
jb
mov
push
movsl
mov
test
stos
and
and
cmp
xchg
movsb
test
das
add
decl
mov
cmp
pop
xchg
daa
inc
movsb
push
mov
jo
sbb
sahf
out
lahf
into
mov
and
sbb
rclb
fmull
cs
aad
rorb
daa
jmp
cmp
jecxz
mov
out
addl
sub
xchg
push
jae
inc
jbe
pop
orb
pop
jns
sti
in
cmpsl
out
aaa
insl
sub
mov
in
xor
pop
dec
xchg
testl
mov
jo
mov
mov
push
arpl
jo
mov
push
jmp
push
mov
leave
jl
outsb
andb
push
jno
je
cmpsl
dec
out
cld
mov
inc
pop
test
xor
fidivrs
jg
test
inc
jmp
jg
push
sahf
sub
xor
addr16
notb
mov
nop
jnp
mov
loop
sub
leave
jnp
jb
jns
aad
inc
xchg
inc
push
clc
popl
arpl
test
cmp
push
mov
das
cmpsb
mov
mov
lret
mov
inc
call
xchg
fldt
xor
sti
gs
jge
mov
xchg
adcl
xor
mov
xor
cmp
cmp
ret
cmp
pop
cltd
das
sub
push
insl
jb
icebp
arpl
xor
push
ss
into
mov
rclb
cltd
les
icebp
lahf
cmpsb
xchg
insl
popa
movsb
aaa
scas
push
or
jmp
js
xchg
cltd
xor
sub
jo
cmp
xchg
mov
addr16
push
pop
dec
imulb
sbb
imul
outsl
jnp
sbb
ds
xor
mov
or
pop
out
ljmp
jno
mov
adc
and
sub
test
lahf
xor
xchg
test
scas
pusha
neg
xchg
ljmp
mov
pop
push
ljmp
aam
mov
fnstsw
out
mov
shll
pop
push
jbe
push
lods
inc
das
stos
scas
lock
std
push
cltd
cmpsl
arpl
lcall
stc
and
sub
test
cmpsb
fistpll
loop
iret
xor
mov
fwait
je
mov
fisttpll
push
mov
repnz
or
pop
pop
fiaddl
or
shrl
nop
cltd
test
in
push
sbb
cmp
in
into
mov
call
cmp
push
add
add
and
aas
xchg
and
test
push
xchg
xor
xchg
int
cmovnp
andl
push
pause
jae
out
leave
cli
sbb
push
mov
leavew
pusha
cwtl
rcr
testl
xor
dec
jbe
push
bound
or
shll
mov
lods
ljmp
jbe
repz
inc
push
mov
push
xchg
shlb
cltd
loop
lret
push
stc
mov
adc
mov
xor
mov
xchg
xor
jb
mov
or
cmp
mov
adc
fildl
mov
xchg
stos
aam
pop
pop
test
loop
shll
out
sbb
dec
fidivl
push
mov
push
daa
mov
out
inc
fsubl
and
cmp
fs
out
sbb
test
icebp
push
cmp
inc
xor
nop
nop
sub
iret
inc
push
xor
jmp
fldl
test
sub
imull
imul
fsubrs
jnp
lock
sbb
mov
sti
inc
sub
adc
inc
sbb
xchg
push
fisttps
or
adc
or
sbb
mov
xchg
mov
push
push
push
movsl
xchg
sub
fisttpll
int3
js
mov
rcl
test
sub
daa
and
shrl
cmp
movsb
jmp
ficoml
ja
fldl
stos
sbb
lret
mov
cmpsl
sub
adcb
les
loop
or
push
jl
cli
inc
adc
les
xchg
stos
test
pop
sub
mov
mov
inc
test
cmp
les
lock
add
mov
jnp
sbb
aas
inc
add
dec
mov
inc
fimuls
mov
jno
push
push
movsb
xchg
mov
les
push
xchg
pop
rclb
mov
repnz
inc
xlat
out
movsb
sbb
mov
movsl
addr16
mov
mov
daa
mov
inc
les
sbb
ds
aaa
ds
cmc
sti
dec
push
jle
test
mov
cmpsl
push
outsl
in
andb
xchg
jp
cmp
push
mov
lods
ljmp
cmc
or
lret
mov
jbe
sarb
dec
and
adcl
cs
ljmp
ja
mov
add
push
lock
xchg
xor
rcrb
or
add
scas
mov
into
or
or
mov
and
xchg
add
cld
mov
dec
cmpsb
subb
scas
cmp
mov
test
and
or
pop
loope
pop
xchg
cmpsl
ss
ljmp
addl
popa
jbe
in
inc
adc
fdiv
sbb
cmpsb
shll
and
mov
mov
aad
sysret
push
test
xorl
jmp
div
xchg
mov
jbe
in
jmp
inc
push
movsl
cmp
cli
ret
push
adc
jbe
xchg
jns
inc
inc
jecxz
mov
xchg
xorb
xchg
xor
dec
pop
outsl
jnp,pn
data16
pop
push
mov
xchg
mov
xlat
mov
dec
push
es
inc
mov
imul
push
add
fmull
adc
daa
or
sbb
icebp
sti
pop
in
and
mov
decb
cmp
aam
adc
and
lods
cmp
add
pop
xor
xor
jo
jg
roll
fisttps
shll
and
daa
push
or
mov
push
sahf
mov
lret
inc
arpl
bnd
sbb
ja
adc
popf
scas
imul
xchg
and
rcr
add
rolb
stos
gs
popa
xchg
int3
sub
pop
aad
or
out
rcll
out
pushf
xor
cmp
clc
or
imul
and
xor
sub
push
push
xor
xor
out
xor
sbb
xchg
dec
shll
fucomp
mov
or
out
jae
sub
jbe
jmp
push
pop
sbb
imul
repz
and
dec
or
aas
shl
xchg
sub
insb
fucomip
mov
daa
das
inc
sbb
xchg
cmp
cmc
push
dec
inc
fidivrl
xchg
push
jmp
or
enterw
sbb
es
cmp
add
mov
hlt
xchg
xor
cltd
test
repz
aaa
adc
mov
mov
or
mov
mov
int
mov
int3
mov
cmpsl
xor
and
pop
movsl
pop
ljmp
jb
dec
inc
adc
cmc
insb
xor
fsts
sbb
cmp
fisubs
adc
mov
mov
or
pop
into
push
push
out
test
idivb
or
sub
shrb
insb
xchg
adc
and
xor
and
insb
stos
lock
mov
xor
ja
daa
sub
fwait
cmp
clc
xchg
enter
ret
repnz
out
pushf
inc
bound
call
stos
mov
mov
outsb
xchg
loopne
mov
or
aaa
mov
dec
jmp
scas
inc
dec
or
sahf
add
shr
inc
and
xchg
push
arpl
xlat
sbb
ret
pop
call
adc
cmp
pop
repnz
jns
lcall
stos
mov
push
jle
les
fnstenv
sub
fs
mov
scas
dec
call
enter
add
adc
enter
lods
add
pop
mov
sub
shrb
pop
mov
cmp
mov
out
icebp
mov
into
push
pop
fcomps
std
xchg
sbb
mov
sbb
outsl
popf
pop
ret
js
repnz
mov
xchg
pop
in
test
sbb
push
xchg
add
lock
xor
adcl
pop
pushl
rcll
test
scas
lock
xor
pop
bound
mov
test
test
cmp
and
popa
pop
inc
fisttpll
out
mov
sub
into
pushw
stos
test
jns
lret
dec
in
mov
imul
sub
rorb
push
hlt
iret
sbb
mov
cmp
pop
shrb
scas
or
das
mov
xor
loopne
mov
fcmovb
fiaddl
cmp
rep
sub
scas
mov
jmp
push
push
jnp
lods
jne
cmp
in
hlt
fwait
ret
mov
sub
and
leave
pop
jb
mov
add
mov
int3
sub
stos
cmp
mov
clc
and
insl
jno
xchg
imul
push
mov
jo
and
adc
stos
cmc
push
mov
xor
pop
mov
jbe
sub
adc
add
pop
daa
in
lea
pmuludq
push
out
and
test
and
insb
push
mov
pop
cmp
fcoms
mov
adc
fsubl
dec
cmpsl
push
mov
int
inc
adc
imul
fmuls
adc
out
psubd
aaa
adc
mov
mov
jne
mov
cmpsb
dec
add
inc
adc
push
mov
leave
cwtl
push
mov
push
jno
inc
mov
sub
and
or
loope
pusha
mov
cmpb
xchg
mov
inc
sbb
push
mov
dec
les
repnz
ficomps
fcoms
sbb
sbb
xor
imul
insl
sub
je
sub
add
pusha
jge
fidivl
jne
mov
fs
test
ss
adc
fsubrp
xor
push
jg
in
dec
and
roll
in
dec
lea
fidivl
mov
repz
or
mov
imul
sbb
enter
xor
into
pusha
and
iret
sbb
mov
sarb
add
xchg
sbb
in
imul
adc
negl
jg
dec
std
dec
push
outsl
jb
les
and
add
in
jb
das
mov
notb
je
push
push
je
sub
ret
xor
push
test
stos
xchg
cmpsb
mov
mov
ja
outsb
and
loopne
xor
add
movsw
gs
jb
in
push
sbb
and
add
inc
xlat
outsb
lds
frstor
inc
fstps
or
xlat
scas
inc
cs
clc
jo
sub
ss
ror
mov
and
inc
mov
jnp
dec
sub
stos
rorb
scas
aaa
in
xchg
sub
lea
mov
stos
scas
add
jnp
add
mov
and
dec
fmuls
pop
cmp
in
xchg
push
pop
insl
add
rcrl
add
cltd
mov
cmp
cmp
cmp
outsl
stos
jae
xor
xchg
test
push
mov
pop
or
mov
fsubrp
mov
roll
pop
mov
sub
mov
lock
in
push
or
mov
mov
outsb
xchg
push
cmpsl
dec
test
xchg
dec
xchg
in
pop
mov
arpl
lret
dec
dec
into
jo
push
pop
sbb
jnp
dec
mov
adc
rcl
cvtps2pi
dec
stos
jge
xchg
mov
pop
mov
cmp
lea
mov
fsubrs
sbb
sub
xchg
cs
mov
sbb
sbb
ss
ret
in
test
xchg
and
pop
inc
lds
fcompl
xchg
inc
ret
je
andb
pop
xchg
aas
imul
imul
sarl
jp
sub
push
mov
add
pop
leave
and
adc
inc
gs
mov
mov
hlt
inc
xlat
stos
fstl
stc
dec
push
pop
insl
lret
sahf
jge
or
popf
popa
and
insl
pushf
adc
lea
out
fs
mov
stc
or
aam
fildl
xchg
jl
lahf
mov
add
cli
shrb
inc
aas
pusha
pop
push
shl
fsubs
repnz
mov
dec
jle
xchg
mov
sbb
sub
jne
enter
adcb
aam
pause
mov
aam
pushf
xor
cwtl
or
and
in
or
mov
test
add
mov
hlt
out
cwtl
sbb
mov
sbb
xlat
mulb
mov
add
movsb
je
dec
int
hlt
out
or
adc
iret
mov
popf
insb
pop
aas
xchg
mov
add
push
out
mov
sarl
aad
dec
adc
sar
push
repz
cmp
ds
int
ret
add
rclb
sub
dec
ss
push
cmp
cli
and
popa
sahf
addr16
sub
lret
mov
cmp
jns
cs
enter
xchg
push
adc
lret
jne
aad
into
jb
mov
adc
or
mov
inc
xchg
dec
and
mov
cmp
fstl
add
inc
cmc
enter
push
loope
cwtl
sbb
lret
push
mov
enter
cmp
jne
push
cli
lods
mov
shl
shlb
lds
jbe
push
outsl
sub
xchg
and
pop
aaa
mov
mov
int
jb
cs
js
shr
sahf
lods
loop
test
lahf
loopne
pop
ds
lret
pop
loope
cmp
inc
sub
stos
in
das
pop
or
adc
mov
and
mov
and
inc
push
je
xor
pop
sub
dec
cmp
xchg
add
mov
mov
cli
push
pop
xchg
outsb
out
leave
dec
pop
imul
lahf
idivl
scas
dec
ds
lods
inc
fwait
lock
push
in
stos
in
pop
adc
mov
jnp
jnp
xchg
inc
stc
test
fs
xor
in
orl
aas
mov
mov
lahf
push
jo
enter
jne
push
leave
int
adc
cmp
dec
pop
xchg
ret
sbbl
push
adc
xchg
xor
movsl
mov
insl
ret
call
clc
ret
adc
sti
xor
sbbb
lods
inc
out
outsb
sti
or
mov
imulb
adc
adc
call
out
mov
xchg
test
and
fs
adc
inc
test
inc
lds
xchg
push
xchg
cs
jmp
iretw
fidivs
and
dec
daa
inc
dec
loopne
and
mov
out
shlb
cld
xchg
stos
sbb
pop
dec
js
icebp
cmp
push
test
or
dec
mov
jl
mov
rclb
cmp
mov
mov
pusha
jl
sbb
adc
mov
lds
jmp
mov
dec
sti
and
outsl
sub
xchg
pusha
iret
js
sarl
xchg
dec
cmpsb
or
xchg
sub
mov
out
cmpsb
pop
inc
xor
xor
push
pop
mov
stc
dec
jp
add
mov
and
ja
xor
lds
ds
outsl
test
ret
xlat
popf
imul
fisubrs
inc
mov
and
xor
sub
mov
mov
fbstp
loop
repnz
fisubs
inc
imul
aam
mov
shll
fs
sbb
rolb
pusha
mov
test
adc
aam
mov
aad
stos
in
stos
lret
mov
scas
stos
inc
push
daa
cmp
and
into
add
mov
add
clc
popf
js
clc
nop
aam
sub
test
push
pop
mov
into
push
into
aam
orb
pop
shlb
jp
js
add
in
jmp
rorb
sbb
jbe
in
add
jl
fisubl
mov
in
or
sarb
clc
push
cmp
or
aad
cmp
dec
xchg
js
js
inc
je
clc
push
lahf
dec
and
jae
sti
push
mov
mov
adc
and
je
mull
iret
sbb
and
imul
scas
in
into
daa
pop
mov
add
xchg
in
push
gs
sarb
incb
mov
aam
mov
cld
in
jecxz
iret
loope
movsb
pop
fadd
pop
dec
pop
in
aaa
into
outsl
in
ret
cmpsl
push
insl
fstl
adc
into
and
sbb
int
js
test
jecxz
imul
cmpb
stc
cld
outsl
fisttps
jns
and
jb
std
cmc
push
mov
fsubr
inc
jl
ja
xorb
lods
add
mov
xchg
sub
leave
test
mov
bound
sbb
add
push
jle
or
scas
and
adc
push
rcr
xchg
push
pushf
xor
sbb
fisttpl
mov
push
shll
mov
fdivp
int3
pop
pop
pop
loopne
mov
gs
in
xchg
push
ss
movsb
andl
inc
popa
aam
incl
mov
std
je
sub
lods
aaa
sub
cld
lods
fstpl
xor
xchg
jecxz
mov
pop
in
sub
adc
or
dec
aaa
movsb
test
fld
dec
adc
cld
hlt
pop
inc
add
leave
int
call
fcompl
push
mov
mov
push
dec
add
jb
dec
jecxz
sbb
jae
push
xchg
out
pop
scas
sti
icebp
or
mov
mov
test
lret
cld
in
pop
dec
sti
cltd
or
lret
xor
add
iret
pop
arpl
sbb
adcb
shlb
jmp
into
cld
inc
sbb
dec
mov
arpl
mov
xor
sub
pop
fisubs
sub
mov
loope
xor
mov
sbb
mov
insb
mov
pop
test
mov
jp,pt
cmpsl
push
cmp
jb
jb
mov
xchg
leave
loope
push
into
movsl
add
lods
jg
sub
jb
and
jns
sbb
jb
add
xchg
bound
adc
orb
les
and
mov
xchg
in
inc
xchg
cwtl
leave
lcall
mov
xchg
fimull
loop
push
insb
fistps
xor
cmp
inc
test
dec
int3
jg
ss
sahf
xorl
pop
adc
mul
pop
in
jo
xchg
mov
faddl
dec
jp
mov
inc
pop
and
shll
pop
movsl
in
ret
sbb
push
popf
inc
clc
jg
sub
fidivs
cmc
dec
mov
inc
add
xor
imul
or
add
repnz
out
cmp
adc
leave
into
icebp
lock
daa
cmp
xchg
xor
cmpsl
lahf
lods
int3
or
imul
push
das
mov
aad
cltd
test
out
js
and
push
les
test
fidivs
inc
jae
cmpsl
shl
iret
sub
jnp
sub
xor
and
xor
or
pop
adc
fsubrs
jl
mov
mov
inc
mov
std
fs
andb
cld
push
jle
add
mov
stc
jnp
sbb
fcomi
mov
push
imul
notl
and
mov
and
imul
loopne
int
xchg
sbb
mov
loope
mov
mov
jne
loope
jmp
mov
sub
jo
pop
mov
ret
fisubrs
jns
mov
mov
lea
andl
push
pushl
sbb
mov
push
outsb
or
sbb
mov
cmp
jg
xchg
jo
pushf
test
sbb
shrl
loopne
and
ficoml
lret
mov
jo
mov
jmp
movsb
imul
dec
mov
cltd
jno
xsha256
cmpsb
pop
push
cmp
xchg
clc
test
dec
hlt
sub
cmc
cmp
test
mov
insl
cmp
push
jl
fmull
idivb
rclb
cmp
mov
mov
pop
adc
jecxz
jb
mov
fldl
pop
mov
shlb
mov
mov
aad
dec
outsl
not
call
jbe
int3
sub
cwtl
mov
dec
test
xchg
ljmp
add
xchg
testb
dec
aaa
repnz
inc
inc
mov
insb
inc
push
nop
jae
arpl
in
push
adc
movlps
lcall
mov
pop
add
pop
xchg
dec
mov
cmp
std
sub
imul
test
xchg
sub
push
jae
sbb
fisubrs
cmpsl
in
std
shlb
xorb
or
sahf
out
pop
jge
fmuls
out
fsubs
aas
push
ja
jo
iret
pop
and
stos
and
pop
in
das
inc
std
adc
adc
mov
das
sub
cmp
xchg
jge
add
xchg
push
cmp
movsb
add
sub
aas
nop
lahf
movsb
shlb
xor
jp
and
dec
addr16
cltd
mov
loope
adc
cmp
jmp
adc
fsts
pop
push
adc
push
ss
stc
add
popf
and
push
mov
daa
mov
adc
inc
push
or
rcll
fsubr
and
cmpsb
fs
xor
jg
decb
mov
outsl
int3
in
cmpsb
sahf
in
test
or
repz
mov
dec
mov
adc
xor
inc
aad
repnz
xchg
call
out
fdivs
rcr
cmp
insb
jp
pop
imul
iret
fs
lret
es
pushf
arpl
jne
jnp
push
imul
in
and
fnstcw
nop
or
in
jnp
mov
sbb
lcall
insl
lahf
stos
and
lret
lds
iret
rclb
es
jle
lods
push
sub
dec
arpl
fldl
fidivrl
je
jb
push
xchg
loopne
lods
adc
sbb
cld
lods
shrb
xchg
out
popf
dec
pop
ret
orb
test
icebp
aad
test
add
in
jae
mov
in
jge
add
pop
jb
mov
mov
inc
add
jmp
jmp
cmp
add
bound
addb
xor
loop
data16
out
lret
test
icebp
mov
cmpsb
sub
or
sbb
fisttpll
xchg
call
mov
shrl
cwtl
call
xchg
push
jmp
mov
inc
rcrl
jl
dec
repnz
mov
cltd
movl
add
scas
xor
int3
pop
jae
mov
pop
arpl
dec
mov
nop
daa
pop
jae
mov
push
scas
push
aad
fs
sti
jno
dec
mov
in
pop
jp
adc
lea
stc
lea
mov
int
scas
or
push
inc
sbb
ljmp
xor
adc
xchg
dec
xchg
xor
out
out
cmp
int3
cmp
adc
lcall
and
push
fmulp
and
dec
fbstp
fisubrl
shlb
imul
sub
out
cli
inc
hlt
bsr
subb
cmp
aaa
lea
xor
pop
jg
iret
outsb
loope
add
and
mov
and
aaa
or
inc
mov
scas
xchg
inc
cli
incb
push
xchg
gs
pop
fisubrl
push
je
sbb
lods
pop
mov
clc
and
in
xor
mov
push
pop
ljmp
cmpl
loopne
imul
adc
mov
jbe
adc
push
movsl
icebp
out
shlb
xchg
outsb
push
fsubrp
data16
test
jo
addr16
push
dec
jecxz
cmp
ret
call
cwtl
pop
dec
pop
jge
aaa
lods
int
pusha
lea
hlt
jg
fwait
mov
jns
in
sti
dec
push
add
repz
popf
push
mov
fsts
push
imul
pop
lock
jecxz
dec
data16
pop
push
insl
cmpsl
mov
jg
hlt
fistl
sbb
mov
pop
mov
rcrl
movsb
addb
add
sbb
jae
and
les
or
cwtl
das
mov
insl
xor
sbb
mov
clc
sub
mov
scas
pop
mov
fdivrs
pop
sub
push
aad
fwait
xor
std
or
mov
jmp
push
inc
push
rcll
clc
loope
push
mov
inc
xlat
dec
push
mov
mov
add
mov
cltd
ja
pop
dec
ljmp
int3
push
and
lds
ficomps
shll
jnp
and
add
lods
xchg
addb
andl
sub
xchg
ds
imul
gs
lret
ds
imul
inc
mov
int3
pop
rcll
in
shrl
pusha
mov
mov
notb
lods
fisttpl
lret
adc
iret
sbb
ret
pop
mov
adc
mov
xchg
bound
insl
xor
lds
faddp
push
test
rol
sub
pop
add
bound
lahf
xor
fs
std
adc
fs
test
sbb
sub
sti
stos
inc
in
aaa
into
sbb
mov
mov
cmp
in
repnz
ljmp
mov
mov
ret
jg
fdivp
dec
mov
lahf
test
push
outsb
insb
sub
shll
cmp
and
int
xor
ret
push
cmp
insl
push
mov
hlt
mov
cmp
jns
lea
je
jns
imul
int3
push
fiaddl
sub
in
pop
adcb
jbe
sub
repnz
mov
xlat
adc
sbb
adcb
xor
mov
mov
mov
or
xor
xor
lea
push
jg
sarl
das
jnp
jbe
mov
test
js
sub
push
adc
pop
or
aas
stos
test
imul
pop
mov
fistpll
andl
scas
mov
fs
jl
add
in
popf
andb
in
pop
mov
mov
lea
es
std
cmp
cmpsl
mov
leave
pop
mov
daa
adc
jge
push
sub
cmp
xchg
repnz
pop
in
cmp
mov
mov
jb
cmp
cmp
mull
lock
xor
inc
pop
push
mov
jge
mov
stos
inc
ret
outsb
jg
fistl
jg
cmp
es
cli
arpl
or
mov
pop
outsb
jnp
vandnpd
lds
daa
fsubs
sub
repz
add
or
lret
loop
in
dec
rolb
scas
movsb
xchg
jnp
loop
xlat
push
pop
mov
sti
xchg
popa
xor
inc
jecxz
mov
push
pushf
add
sahf
inc
pop
test
andb
ds
xchg
ret
jnp
cmp
popf
mov
push
repz
fnstcw
push
jge
je
std
jo
push
sbb
lock
inc
xchg
sub
rcrb
fsubrp
mov
sbb
sub
sub
pop
pop
insb
xor
ljmp
das
push
nop
test
sbb
shlb
xchg
lods
test
push
in
jl
jb
dec
and
xchg
jns
cld
mov
bound
bound
mov
mov
cmpsb
sti
xchg
xor
jl
add
pop
cmpsl
pop
fnsave
push
lret
out
mov
cwtl
stc
or
mov
add
mov
jno
inc
jno
sti
fprem
xchg
adcb
mull
movsl
movsb
adc
add
pop
jg
jle
xor
sbbl
sbb
xchg
ret
out
cmp
xchg
xchg
and
sub
ret
cmp
cmp
pop
imul
cmp
push
movsb
xchg
lods
inc
icebp
inc
loope
cmc
adc
mov
outsl
insl
xor
pop
xchg
jo
dec
aaa
je
test
stos
cld
ja
aaa
push
and
dec
mov
stc
repz
lret
add
cmp
dec
and
sub
scas
xchg
xor
popa
mov
mov
jg
enter
mov
dec
daa
inc
pushf
cmpsb
jb
mov
popa
jne
push
pop
jmp
dec
mov
popl
pop
frstor
lock
push
fstpl
lock
sarb
rorl
sub
lea
lret
je
sbb
mov
jl
dec
hlt
inc
stc
pusha
scas
ljmp
xchg
cmp
imul
imul
es
cmp
sbb
insl
loopne
mov
mov
sbb
mov
mov
jo
repz
cwtl
push
mov
cmp
lcall
push
shlb
pop
in
int3
scas
pop
lret
js
gs
test
rcr
mov
fidivl
sti
pop
repz
push
lcall
in
roll
pop
cmpsb
je
cmp
imul
ss
inc
cmpsl
or
mov
mov
mov
aad
adc
int
js
cld
push
inc
adc
cmpsb
fcmovnu
addb
jae
stc
push
jne
dec
cmp
dec
cmp
mov
mov
bound
sbb
loop
inc
or
xor
xchg
mov
cmc
flds
fidivs
push
fnstenv
push
sub
mov
imul
out
mov
fs
jle
inc
jg
xor
fidivl
push
inc
jae,pn
pop
mov
cmc
fdivrl
stc
sbb
add
push
inc
arpl
cli
insb
jle
mov
push
mov
mov
jns
arpl
pushf
or
icebp
movsl
daa
mov
lods
mov
xchg
sub
pop
dec
adc
dec
mov
xchg
and
fldl2t
jle
xchg
mov
lock
fdivl
arpl
std
mov
test
lods
jge
inc
mov
and
fisttpll
and
dec
shlb
out
push
adc
das
testl
pop
sbb
mov
rol
adc
lahf
inc
icebp
ret
jecxz
inc
and
scas
fisubs
push
jbe
dec
lret
shl
mov
or
pop
imul
cli
mov
xchg
shrl
mov
cmp
pop
mov
lea
hlt
lret
cmp
xchg
jne
pop
inc
rol
dec
add
mov
or
jge
jl
mov
mov
shrb
cld
and
jne
rorl
jbe
test
nop
jp
dec
scas
lret
int3
xor
fnstsw
xchg
into
loop
xchg
pop
push
in
movsb
std
mov
cwtl
jne
lock
rcrb
lahf
dec
add
inc
push
add
jg
scas
cmp
aad
cmpsb
lock
scas
out
cmpsl
aad
cltd
jecxz
push
pusha
xor
jg
aad
dec
pop
xor
loop
shrb
ljmp
sbb
dec
sbb
jge
and
mov
dec
push
mov
test
lea
add
arpl
lea
or
and
shrl
fistps
and
push
xor
jp
mov
imul
rcr
aas
cltd
scas
or
and
ss
std
imul
stc
out
pop
testb
cwtl
inc
mov
adc
ror
jl
test
popaw
lods
loopne
popf
or
mov
adc
std
or
push
leave
scas
std
sub
arpl
aas
js
int3
lods
cmc
mov
dec
popa
or
xchg
jo
mov
xor
mov
pop
jne
scas
pop
ret
dec
mov
push
jecxz
push
push
sbb
in
mov
cmp
aam
dec
fs
lea
push
inc
fisttpll
sbb
out
jmp
mov
xor
adc
inc
push
push
addr16
pop
gs
xchg
movsl
push
sbb
mov
jo
imul
adc
sbb
sti
lret
es
push
leave
sbb
fiadds
mov
mov
stc
clc
cmpsb
iret
push
add
dec
in
data16
scas
sbb
test
sti
push
mov
movsl
out
or
dec
scas
mov
shrl
lret
mov
test
fs
cmp
push
addr16
loop
cli
lods
xchg
push
adc
adc
int3
cmp
mov
push
inc
mov
imul
aas
xor
stos
icebp
xor
mov
pop
imul
mov
movsb
in
push
fistpll
mov
xchg
xchg
mov
addr16
cmp
add
jo
pushf
dec
sbb
outsb
out
pusha
mov
call
jp
ss
adc
orb
adc
jg
cmpsb
mov
cmpl
mov
mov
setnp
xor
stos
push
sub
out
push
adc
ljmp
jmp
jge
inc
pop
jle
leave
mov
pop
mov
fucom
decl
insl
jo
lcall
call
or
ret
add
negl
mov
mov
je
loope
jmp
movsl
sahf
jo
sbb
clc
popa
filds
lret
jecxz
jno
push
scas
push
fwait
cmp
test
push
push
mov
ja
fidivs
xchg
pop
loopne
nop
pop
pop
add
outsl
aad
and
popf
fneni(8087
or
and
pop
out
dec
fisttpl
ljmp
mov
sbb
adc
lret
cli
cmc
inc
fidivs
jg
lock
lcall
std
loopne
sub
cltd
test
aam
fcmovb
popa
cmc
and
imul
out
sub
lret
cmp
mov
adc
add
mov
push
cmpsb
jl
mov
jp
sbbb
or
sub
pop
push
scas
fisubl
sahf
push
xor
sbb
aad
cmp
fmull
shlb
xchg
dec
je
nop
add
sub
shlb
mov
pushf
daa
in
aaa
push
iret
fs
mov
xchg
jecxz
ret
xchg
xor
leave
leave
movsl
jae
std
cmp
sbb
inc
nop
sarl
into
inc
cmp
push
out
xchg
aas
into
add
decb
imul
es
rclb
sub
dec
cmp
out
hlt
mov
scas
in
out
jns
cmpsb
cmp
xchg
insb
or
lds
movsl
adc
xchg
call
xchg
fisubl
aas
cmp
subb
gs
adc
andnps
xchg
loopw,pt
pushf
iret
fcomi
imul
pop
arpl
outsl
pop
add
flds
xor
mov
inc
pop
adc
xchg
mov
mov
iret
pushf
aaa
or
mov
push
add
lret
mulb
mov
or
leave
xor
inc
data16
push
xlat
pop
movsb
mov
xchg
pop
add
cmpsl
jmp
ljmp
stos
sub
stc
fwait
jle
pop
jb
dec
cmp
xchg
lahf
les
mov
pop
sub
lea
popf
lret
cld
push
mov
ret
cwtl
adc
daa
jne
push
lods
mov
inc
stc
adc
cmp
pop
jl
dec
scas
cmp
mov
sbb
sbb
add
cmpsb
jecxz
das
adc
dec
mov
mov
push
pop
push
lahf
out
scas
stos
insb
lea
xlat
shrl
mov
pop
xchg
dec
jne
cmp
jns
loop
fnstcw
cmc
scas
stc
fsubrl
mov
rcll
pop
push
outsl
fsubrs
outsl
test
stos
cmp
adc
cmpsl
imul
cmp
sti
push
or
fisubrs
test
jb
je
xchg
and
xchg
jmp
out
pop
mov
push
cmp
jo
add
pop
mov
jecxz
or
das
or
neg
enter
aad
popa
inc
loopne
scas
daa
les
test
cmp
fs
xor
mov
add
imull
inc
pop
mov
cmpsb
jg
or
sub
movsb
out
cmp
into
insl
pop
add
lret
and
inc
les
or
mov
ja
sbb
loop
pop
insl
add
stos
xor
sbb
jle
lods
daa
mov
add
insl
rorb
and
push
xchg
je
mul
jle
aaa
stc
xchg
sub
pop
xchg
add
cmp
leave
bound
or
into
pop
adc
fidivs
cwtl
jge
fwait
je
jne
shlb
cs
push
lret
xchg
mov
and
cmp
inc
cmp
std
nop
repz
repz
xor
out
push
bound
xor
xchg
inc
lcall
inc
in
shl
mov
inc
jo
push
xlat
mov
or
std
xor
sarl
jl
insl
test
imul
cmp
std
xchg
dec
pop
sub
insb
sub
inc
lret
mov
call
leave
xchg
inc
fcmovnb
shlb
sti
mov
insl
jne
dec
dec
inc
mov
fwait
in
cmp
inc
fistpl
adc
pushf
mov
into
jmp
xor
push
shrb
push
mov
jnp
cmpsl
sbb
jmp
mov
lods
xchg
fldt
sbb
mov
sahf
mov
jo
xchg
shlb
sbb
movsl
xor
and
sub
loope
inc
or
imul
loop
mov
testb
pop
adc
loopne
lods
lea
cltd
inc
pusha
sti
fwait
add
dec
stos
pop
adc
or
jo
mov
jp
pop
mov
dec
repz
add
mov
dec
inc
in
jmp
jae
pop
insb
mov
push
mov
push
test
js
jo
test
inc
inc
push
inc
in
jecxz
bound
daa
mov
xchg
fdivrs
adc
shr
add
ret
pop
adc
mov
hlt
out
push
es
fbld
jge
stos
mov
add
lahf
fisttpl
xor
fs
dec
xchg
cmpl
mov
std
cmp
loopne
dec
adc
out
repz
hlt
mov
mov
xchg
scas
xor
mov
mov
jecxz
das
data16
outsb
sub
mov
dec
sbb
cmp
inc
xchg
inc
lcall
xchg
inc
jne
inc
inc
outsb
sub
call
jg
sbb
cltd
cmpsl
stos
or
fwait
xor
int3
mov
adc
fstl
xchg
jne
mov
stc
pop
sub
stc
icebp
mov
lret
pushf
mull
mov
inc
into
cs
xor
xor
out
push
xlat
imul
repnz
sbb
mov
push
mov
ret
mov
popf
jns
mov
lock
jle
fcoms
mov
adc
dec
mov
mov
popf
or
xchg
pop
loop
sub
jae
inc
in
mov
jp
mov
je
hlt
push
mov
ljmp
and
xchg
and
es
decl
adc
add
aaa
bound
lods
and
pusha
mov
add
and
rcll
movsb
cmp
ret
mov
iret
mov
gs
negb
cmp
es
push
inc
push
lcall
pop
push
lcall
add
pop
mov
push
xlat
arpl
pop
sub
mov
mov
fwait
xlat
push
xchg
hlt
test
popf
mov
push
in
into
int3
out
arpl
jg
mov
mov
pop
das
add
adc
leave
jge
fcoml
sub
jle
inc
mov
cmc
mov
push
leave
cmp
gs
push
sbb
enter
fsubr
add
fdiv
pop
fs
xchg
dec
mov
fst
xchg
add
dec
icebp
and
loop
stos
out
sub
dec
pop
sub
rcl
cmp
jle
or
or
mov
into
jg
push
loopne
psadbw
push
pop
movsb
cmpsb
les
or
add
clc
inc
pushf
arpl
push
pusha
stos
enter
mov
sti
xchg
mov
insl
push
in
cltd
pop
push
inc
ljmp
mov
sub
cmp
mov
jp
add
mov
inc
push
xor
adc
ficoml
pop
in
scas
out
repnz
fmulp
lock
jp
mov
rcll
or
add
mov
sarb
aad
pop
cmc
outsl
dec
addr16
fwait
xchg
call
in
insb
and
les
push
cmp
jb
jecxz
mov
cmp
lcall
out
and
cld
pop
hlt
sub
push
mov
fsts
scas
or
stos
add
outsb
test
fisubrl
out
and
pop
or
in
mov
pushf
outsb
pop
in
stos
sub
shl
cwtl
fadd
dec
push
pusha
divl
imul
outsl
subl
loop
in
dec
insl
dec
jle
fs
xor
sub
or
shl
push
add
push
inc
and
add
cmpsw
mov
data16
ficompl
dec
test
fisubrs
lock
jno
in
scas
insl
pop
inc
sbb
mov
fs
hlt
mov
out
loopne
cmp
lods
aas
mov
adc
aas
cwtl
das
jno
call
rcr
loope
loope
mov
pop
outsb
inc
fstpl
jle
int3
ret
sbb
jp
aaa
stc
push
leave
lret
cld
js
xor
enter
sarb
and
in
adc
aam
in
sbb
inc
cwtl
lods
imul
out
mov
mov
cmp
fstpl
shr
add
leave
inc
jp
shll
into
pop
imul
imul
rcrb
lods
mov
xchg
and
or
bound
imul
repz
lds
mov
test
scas
or
and
sbb
push
out
ja
cld
cmp
test
mov
stos
scas
cmpsl
add
or
push
icebp
cmp
mov
dec
addb
pop
ret
sahf
sub
aam
andb
mov
dec
filds
add
enter
push
push
lods
daa
lcall
or
int3
and
loop
add
lock
push
push
lods
and
cmpps
or
pop
push
daa
rcll
mov
pop
inc
fisttpl
hlt
jae
pop
stos
jbe
leave
pop
mov
loope
jo
inc
pusha
daa
test
negl
mov
bound
outsl
cmp
mov
mov
pop
adc
fidivrs
rclb
push
jmp
cmpb
push
negl
movsb
dec
nop
andl
pop
loop
stos
mov
ss
xor
mov
pop
js
lea
ja
lods
data16
rorl
jl
subl
xlat
scas
sub
pushf
mov
jns
cmp
movsl
out
fnsave
in
adc
push
fimuls
jle
mov
cmp
dec
jge
test
jg
inc
imul
ret
sub
enter
cmp
pop
pop
adc
mov
sub
sbb
jns
test
jmp
xchg
out
icebp
sbb
mov
mov
xor
mov
jbe
lahf
or
dec
mov
jecxz
jg
xor
insl
shr
cwtl
inc
ffree
jb
enter
sbb
lods
ljmp
xchg
lock
dec
sahf
mov
jmp
imul
mov
mov
imul
xorb
dec
mov
push
int3
popl
push
jecxz
xchg
les
inc
pop
cs
pop
sti
fwait
mov
std
mov
jne
arpl
xchg
adc
lds
pop
or
xor
sbb
push
mov
cmpsl
aas
mov
inc
stos
cmp
dec
data16
pop
sbb
sahf
jb
push
loope
jne
adc
xchg
les
dec
pusha
mov
lds
xchg
push
lcall
push
ljmp
call
insl
loope
add
popa
aas
sub
cmp
pop
mov
out
scas
fsts
pop
xor
xchg
cmp
xchg
or
or
js
test
cmpsb
lock
jne
cmc
mov
sbb
int3
or
mov
out
pop
cmp
cmp
lret
iret
xchg
lods
push
gs
lock
test
outsl
sahf
gs
std
sarl
mov
lahf
je
mov
mov
push
jb
jns
aad
sbb
mov
and
adc
test
sbb
fidivrs
pop
cmc
movsl
dec
mov
mov
notb
leave
arpl
dec
cmp
push
mov
test
outsl
les
fnstenv
je
addr16
mov
add
mov
jno
sbb
shlb
ret
jne,pn
xchg
pop
mov
dec
xchg
add
test
add
mov
dec
test
cmpsb
in
pushf
mov
push
or
rcrl
and
xchg
xchg
loope
mov
sub
xchg
fxch
addr16
into
stos
movsb
cmp
stc
sub
cli
gs
mov
jne
or
and
data16
push
sti
sub
in
xchg
call
inc
cwtl
das
pop
pop
pop
xor
divl
add
mov
fwait
loopne
pusha
ss
and
cmp
imul
in
ds
in
pop
adc
xor
aam
xor
outsl
sub
add
xor
inc
inc
mov
out
test
outsl
movsb
dec
jge
mov
imul
rcl
xchg
pop
fldenv
fildll
sahf
mov
loopne
dec
lretw
in
je
loopne
adc
clc
mov
sub
jbe
mov
sbb
sbb
pushf
ss
out
leave
sahf
pop
int3
popf
loope
je
daa
or
xor
add
lret
call
and
push
adc
jle
or
dec
xor
repnz
mov
rcl
insb
add
jnp
xchg
and
sahf
arpl
mov
mov
mov
push
pushf
andps
cmpsb
adc
jnp
add
fldl
or
stos
mov
gs
or
and
test
negl
outsb
subb
iret
lret
divps
mov
push
pop
movl
jno
popf
adc
pusha
stos
dec
add
push
ja
cmp
sbb
movsl
push
aas
test
inc
dec
xor
inc
test
pop
push
shrl
adc
fidivrl
aam
roll
pop
test
sub
push
inc
pop
inc
or
cmpsl
mov
aas
sub
mov
inc
divpd
jns
into
pop
cmp
push
idivl
jne
mov
xor
sbb
push
or
push
xchg
jbe
sbb
xor
sub
aad
push
sub
inc
inc
push
daa
sahf
movsb
push
push
ljmp
jb
xor
ja
imul
xchg
daa
lret
ljmp
xchg
loope
ds
fsubrl
adc
mov
arpl
nopl
xor
dec
push
sub
in
xchg
mov
imul
hlt
jmp
mov
inc
clc
dec
lret
adc
popa
repz
jae
jns
daa
js
jae
std
aam
xchg
xchg
push
dec
push
sub
cwtl
fnstsw
mov
xor
imul
add
adc
fisubrl
lods
adc
flds
daa
cmp
cmpsb
xor
sbb
sbb
cmp
dec
scas
inc
jp
loope
jbe
push
cltd
into
xchg
idivl
lcall
pop
es
mov
mov
or
jecxz
mov
inc
leave
rcrl
pop
mov
cmp
pop
xchg
ret
arpl
ds
loopne
jl
test
jge
cmp
add
mov
test
xor
fsubr
xchg
lods
adc
ss
ss
mov
mov
sub
xchg
mov
or
stos
imul
adc
mov
mov
icebp
mov
shrl
mov
xchg
pop
xor
ret
cli
insb
jle
xlat
jle
cld
or
dec
in
in
adc
clc
aam
pop
lock
aam
fincstp
js
mov
pop
out
ljmp
and
and
js
xchg
pop
add
pushfw
xor
iret
into
push
jbe
lods
push
fs
or
mov
xlat
and
fnstsw
mov
test
inc
out
andl
xchg
mov
loopne
sahf
clc
lea
mov
je
rol
lods
xor
fidivrs
cwtl
pop
sbb
fsts
inc
cld
cmpsl
jmp
jp
cmp
or
push
in
lods
and
push
mov
or
mov
mov
mull
cmp
lcall
std
mov
aam
push
leave
xor
sahf
lods
and
and
fimuls
inc
pop
into
push
fdivl
icebp
jle
fdivr
jne
or
adc
int3
and
xchg
dec
jmp
stos
add
push
pushf
inc
xlat
sub
hlt
sub
xor
jb
loope
mov
dec
in
iret
jp
sarl
in
mov
scas
lcall
jnp
fildll
decb
xchg
sbb
pop
mov
jno
sti
xchg
add
fwait
adc
mov
jmp
sbb
out
xchg
mov
cmp
fisttpll
dec
dec
push
add
sbb
mov
fs
push
xchg
sub
loop
lret
ja
cmp
pop
jo
xchg
or
push
xchg
mov
sbbl
add
wbinvd
push
and
and
push
imull
call
add
fsubrs
movsl
dec
loopne
add
shll
inc
inc
gs
popf
pop
mov
sub
mov
movsl
gs
loopne
xchg
and
dec
loop
or
add
pusha
xchg
cmp
les
and
aaa
mov
cwtl
cld
adc
xchg
xchg
cmpsl
iret
mov
mov
addr16
mov
xor
test
or
dec
or
orb
jo
add
push
test
jl
iret
jno
mov
insl
shlb
inc
or
gs
dec
adc
mov
mov
cmp
arpl
rcrl
xor
pop
adc
pop
nop
xchg
cwtl
sbb
mov
cmc
cld
arpl
out
and
add
lods
inc
xor
das
push
out
lret
dec
add
mov
xchg
push
inc
xor
mov
aad
daa
pop
std
sbb
ret
js
idivl
je
call
inc
cmc
lock
pop
dec
aaa
xchg
cwtl
add
movsl
call
pop
icebp
push
mov
mov
das
mov
sbb
cmp
lret
jp
jns
aad
xor
stos
mov
movsb
test
jnp
xor
add
inc
gs
sbb
inc
stc
lahf
sbb
loope
lret
aas
xchg
xor
roll
add
mov
fst
out
cmpsl
shll
imul
popf
adc
or
test
cmc
inc
xchg
jns
pop
icebp
mov
pop
push
rcrl
xchg
in
jl
cmp
jbe
test
lods
pop
std
test
gs
mov
ss
clc
mov
rep
aas
push
popa
call
stos
add
mov
cld
cmpsl
rcll
xor
sub
cwtl
sub
jmp
lret
fs
add
sub
xchg
inc
cli
sbb
pop
out
add
push
pushf
loope
xchg
stos
push
inc
lret
cmc
dec
sub
ljmp
stc
cmpsb
adc
cld
orb
add
out
scas
out
or
push
pop
fidivrl
cmp
nop
pop
add
jno
adc
mov
shrl
sub
popa
insl
or
stc
lea
sti
xor
cwtl
sbb
and
das
push
int3
scas
jnp
add
add
gs
xchg
movsl
add
mov
jns
pop
aaa
dec
filds
pop
jb
mov
push
sbb
mov
in
imul
jg
popa
pusha
rorl
ljmp
xor
mov
add
leave
xchg
scas
sarb
lahf
call
test
and
jnp
inc
out
mov
adc
adcl
cmp
or
adcb
xor
sahf
or
dec
and
outsl
adc
pop
mov
pop
lock
aas
ja
sbb
cmp
push
fs
mov
mov
jg
jmp
inc
fwait
xor
xor
shr
and
xchg
clc
aas
ret
jge
in
repnz
or
add
sbbl
mov
cltd
fstpt
rolb
fadds
lods
inc
fisubrl
bound
jnp
repnz
addb
mov
lahf
mov
pushf
fwait
cmpsl
sti
lea
xor
in
mov
or
mov
mov
xorl
aaa
xor
and
xlat
cmp
jo
jmp
or
dec
scas
or
notl
pop
lods
mov
sbb
dec
loope
test
fnstsw
rcrb
in
push
sub
lret
lret
cld
hlt
testb
push
popa
sarl
inc
dec
test
sbb
mov
push
cwtl
stc
sbb
dec
or
sub
mov
pop
cmpsl
dec
xchg
jmp
sub
into
jae
sub
dec
jbe
dec
out
jo
pusha
aam
sbb
aaa
sti
fidivrs
jp
stos
xor
loopne
enter
mov
xchg
js
pop
stos
out
mov
outsb
aaa
xor
push
js
adc
sbb
cli
lret
pop
dec
rol
jle
jnp
mov
jecxz
dec
pushf
test
dec
data16
cwtl
imul
fisttpll
ret
dec
ja
daa
xchg
mov
add
dec
jge
jge
xchg
sub
pop
ljmp
mov
loope
add
adc
je
fsubs
adc
cmp
cli
pop
pop
xchg
add
inc
in
inc
fnstsw
mov
inc
outsl
int
mov
in
jmp
fistpll
push
pop
lret
push
cmpsb
mov
cmp
clc
push
mov
and
pop
fdivp
sbb
in
mov
mov
mov
jb
leave
and
mov
mov
jb
mov
sbb
test
xor
addr16
std
jne
pop
insl
repnz
ret
push
loop
sahf
push
xchg
addb
dec
bound
push
dec
sahf
jae
clc
sub
inc
sbb
inc
cmp
popa
lahf
mov
test
insl
jae
shl
leave
in
inc
aam
enter
or
cmp
jge
clc
push
xlat
roll
fwait
jne
sbb
cmc
mov
out
mov
fdivrs
or
or
adc
mov
jno
dec
stos
cwtl
and
adc
mov
sbb
pop
pop
jecxz
xor
fbld
sub
lcall
stc
je
in
or
push
and
mov
in
xchg
std
rcl
shrl
repz
xor
inc
cmp
in
loop
lea
cs
or
and
test
push
out
subb
sbb
test
sbb
dec
inc
jge
ret
jb
push
push
out
sbb
imul
stc
outsb
pop
pop
dec
jl
sti
xchg
js
and
data16
push
push
adc
scas
jb
cld
inc
mov
bound
cmpsb
xchg
jmp
not
dec
inc
fnstsw
outsb
dec
je
lds
lahf
in
push
cwtl
mov
ret
fdivrl
xchg
or
mov
imul
cmp
xlat
loope
or
jb
add
xor
out
cmpsb
push
pushf
out
mov
sbb
sti
test
mov
fwait
jnp
popf
cmp
hlt
adc
les
xchg
pop
out
ret
add
xorl
dec
push
dec
lds
cs
adc
inc
push
test
dec
pop
sub
mov
sub
rclb
jecxz
ficoml
aad
hlt
in
mov
fadd
jbe
lea
pusha
iret
and
jmp
clc
mov
out
or
jg
fwait
mov
adc
scas
jmp
jo
imul
inc
aad
lahf
jg
adc
push
sbb
and
xor
xchg
out
popl
sub
pushf
xor
mov
cmpsl
pop
inc
das
add
inc
or
and
mov
mov
or
out
sbb
fwait
push
push
insb
das
sarb
popa
lret
cwtl
lcall
test
es
std
mov
fistps
test
dec
cmpsb
xchg
inc
cmpsl
adc
xchg
loop
sahf
in
jecxz
xchg
idivb
pop
inc
outsl
push
jb
mov
mov
in
pop
mov
repz
out
js
push
push
lea
cltd
sbb
ficomps
mov
insl
mov
shll
xchg
aas
xchg
or
mov
adc
mov
pop
test
ds
xlat
push
orl
ret
insb
mov
jae
mov
data16
and
pusha
das
insl
cld
sbb
mov
int3
fisubrs
roll
popf
push
cld
xchg
mov
push
imul
or
inc
aam
aas
mov
push
adc
mov
dec
xchg
cmp
rclb
imul
outsl
repnz
jns
popl
loop
sub
mov
mull
std
lds
adc
cmp
dec
mov
jb
adc
mov
sahf
arpl
dec
loop
in
test
add
and
cltd
daa
mov
xchg
sbb
cltd
or
in
jae
jecxz
or
fadds
and
notb
cmp
fsin
insl
add
stos
mov
shlb
popa
adc
inc
and
scas
mov
shrl
pop
xor
pop
pop
lahf
or
inc
push
jg
mull
repz
dec
das
mov
pusha
mov
or
rcrb
int3
arpl
sti
pop
int3
inc
xorb
mul
xchg
arpl
leave
add
call
hlt
pop
xchg
mov
ror
lea
loope
push
call
adc
dec
push
or
mov
push
add
testb
push
mov
or
push
inc
sbb
cmc
xchg
roll
clc
loopne
icebp
or
sbb
cmp
pushf
popa
sti
push
inc
push
pop
in
ss
insl
inc
stos
insb
int
inc
push
les
insl
enter
pop
notl
push
pop
push
dec
enter
jae
push
loopne
pusha
dec
pop
pop
stc
lock
repnz
xchg
ljmp
out
or
in
mov
adc
mov
lea
lods
pop
lret
jae
pusha
ds
je
out
xor
inc
loope
repz
lahf
dec
add
jle
mov
pop
roll
bnd
push
notl
sub
pop
cld
push
insl
pop
and
icebp
idiv
inc
sub
popf
xor
and
test
or
push
shrb
cmp
ljmp
nop
sbb
movsb
fistpll
pop
xor
fldt
movsl
sbb
and
jle
xchg
loope
loopne
jne
mov
test
xor
push
mov
cs
int3
pop
stos
in
std
in
scas
and
lea
or
jne
cmc
push
mov
call
mov
push
cmp
xlat
cmc
mov
add
retw
fstl
outsb
jne
mov
xor
scas
xchg
inc
negl
inc
in
popf
sbb
ret
lock
pusha
xor
cmc
push
outsl
daa
xor
sarb
je
cmp
sbb
push
push
cmpsl
or
mov
dec
int3
fnstcw
fisttps
dec
pop
ret
enter
xlat
mov
and
shrb
or
add
cld
xchg
xchg
in
adc
lcall
push
inc
scas
and
addr16
push
movsb
dec
outsb
test
xchg
adcb
sti
aaa
mov
nop
inc
sbb
fbstp
push
fsincos
in
fisubl
adc
sbb
cmp
out
icebp
scas
add
jg
mov
out
pop
insb
add
adc
test
add
test
sbb
cmpsb
mov
subb
jmp
cld
in
adc
std
sub
imul
jg
adc
jle
pop
push
out
lcall
jmp
and
loop
out
dec
pop
and
fimuls
inc
inc
push
fdivs
fidivrl
mov
inc
push
cwtl
mov
ss
movsl
adc
lahf
xor
jl
adcb
xor
dec
or
in
and
shrl
mov
jle
int3
mov
mov
iret
arpl
inc
xlat
mov
fstpl
push
flds
subl
data16
add
outsb
fcoml
mov
jge
rorl
mov
cmc
fdivl
adcl
mov
jmp
xchg
rcl
pop
add
mov
or
cmp
cmc
add
in
hlt
pop
and
mov
jge
sbb
sahf
sbb
dec
in
gs
inc
and
dec
bound
pop
mov
and
xchg
lret
sbb
rcrl
jno
xchg
mov
jb
adc
imul
aaa
sti
xchg
mov
or
into
push
rcl
cltd
imul
xchg
mov
imul
xor
mov
lahf
repz
sub
xor
es
jno
dec
jmp
mov
mov
or
mov
push
test
scas
cmp
xchg
mov
and
fimuls
xchg
push
jmp
push
add
mov
ss
popa
repz
dec
stos
xorb
movsb
loope
sbb
fdivl
sub
js
adc
push
mov
popa
imul
and
mov
xchg
outsl
push
add
or
lock
or
stc
dec
push
dec
sar
out
sbbb
fcmovu
in
dec
jne
test
push
test
adc
jmp
lods
lods
xor
jle
shrl
popf
push
adc
rcr
je
iret
sahf
jg
insl
mov
inc
dec
xor
shrl
or
add
fsub
cmp
push
jo
add
sub
inc
es
lock
dec
fsubrs
jnp
jmp
mov
jle
stc
in
fcmovnb
mov
xchg
add
xor
int3
in
mov
stc
inc
xlat
ljmp
mov
movl
loopne
rcl
jl
pop
enter
nop
sbb
mov
inc
mov
fwait
push
adc
push
jmp
cwtl
leave
cmp
imul
loop
stos
mov
lret
jo
es
cwtl
call
or
cbtw
sub
mov
inc
adc
mov
test
add
cmp
and
jle
dec
dec
push
aas
adc
rol
out
xor
daa
fdivr
pop
jp
test
and
imul
movd
and
fsubr
idivl
imul
xchg
jne
test
js
cmpsl
and
out
lock
enter
jle
and
mov
test
cmp
push
sub
test
jl
cltd
out
push
sbb
or
insb
sarb
mov
shl
int3
arpl
cmp
ret
mov
subps
pop
ds
push
js
inc
orb
popa
sub
inc
pop
and
mov
or
xchg
ds
lds
add
cld
shrl
lea
inc
sbb
pop
decb
sbb
ds
fwait
movsl
stc
or
and
pop
sbb
mov
pushl
mov
movsb
addr16
xchg
adc
sti
cmp
test
xor
lcall
sub
scas
dec
js
sub
mov
or
or
push
pop
lret
sub
bound
mov
bound
loope
push
dec
add
rclb
mov
fs
inc
in
daa
add
add
xchg
xchg
lods
and
cld
ss
cmc
pop
test
push
imul
pop
push
cli
mov
fwait
sti
xor
mov
inc
push
lods
lcall
push
mov
cmpsl
inc
lret
xchg
mov
setne
adc
gs
mov
mov
and
insl
jecxz
out
adc
mov
inc
out
jge
outsb
nop
test
cmpsb
mov
push
jl
mov
mov
push
lds
dec
cmpsb
dec
add
fsubs
dec
push
aas
andl
cmovnp
gs
and
fbld
jg
inc
pusha
dec
and
inc
vmptrld
pop
jle
inc
pop
push
test
xchg
and
out
inc
stos
lret
push
adc
mov
mov
movsl
cmpsl
mov
xor
jmp
pop
std
addr16
cmp
add
mov
mov
mov
jl
mov
mov
mov
push
fistpl
sub
inc
nop
add
mov
cmc
mov
sbb
scas
mov
mov
mov
mov
inc
xchg
clc
shrb
in
add
xorl
xchg
std
jg
div
xchg
lods
ljmp
pop
js
or
adc
pop
inc
bound
lods
sbbl
rorl
addb
inc
cmc
es
cmp
add
cwtl
lret
pop
mov
int3
in
es
out
ds
xor
cmp
mov
dec
fldcw
outsl
adc
push
fwait
or
and
xor
xchg
sti
aaa
dec
xchg
and
push
push
jl
pop
push
in
xchg
or
call
sub
leave
pop
cltd
repnz
addr16
ficoml
and
addb
push
adc
aam
jne
sub
or
xorb
out
sahf
mov
push
lcall
add
xor
mov
add
xor
push
or
dec
arpl
adc
fmuls
inc
loopne
xor
sub
cmpsb
mov
mov
dec
mov
ja
sbb
sbb
inc
push
popa
lcall
in
xor
cwtl
jbe
rclb
mov
loop
fdivl
sti
lahf
jae
jge
inc
scas
iret
stc
je
inc
lcall
out
lds
cmp
bound
ret
ljmp
outsl
and
pusha
aad
dec
pop
sbbl
cmc
sbb
mov
dec
add
shlb
jge
xchg
inc
inc
add
xlat
jnp
dec
xchg
mov
adc
adc
push
inc
jge
sti
and
mov
push
push
jbe
and
lret
inc
pop
mov
push
or
out
pop
out
inc
pop
xchg
js
hlt
mov
idivb
mov
jae
fdiv
mov
push
movsl
insb
int
movsb
or
imul
xchg
jp
lock
inc
cli
cmp
dec
sub
pop
adc
mov
xchg
das
dec
popa
mov
mov
push
std
arpl
jne
lods
dec
adc
movl
pop
arpl
mov
insl
ja
lahf
xchg
push
icebp
into
popf
xor
xchg
out
add
xor
int
dec
lret
inc
mov
test
xchg
or
cmp
imul
mov
out
xor
aam
outsl
xchg
adc
adc
dec
xor
movsb
xchg
lock
jo
loope
push
je
jecxz
pop
mov
call
push
fsubrs
push
push
popf
add
jb
push
pushf
or
cld
shl
lahf
mov
in
xchg
andl
push
dec
out
cmpsb
sbb
fsubs
jb
fidivl
xlat
in
push
mov
insl
cmc
inc
out
dec
mov
mov
push
jnp
xor
scas
inc
and
adc
dec
int
hlt
adc
pop
ss
sub
test
xor
xor
mov
out
shl
adc
xor
lahf
lcall
iret
xor
and
and
test
xchg
pop
jnp
je
xor
dec
outsl
in
jne
mov
mulb
cli
push
cmp
fstl
ss
sub
fcomip
dec
dec
movsb
jecxz
pop
mov
inc
mov
fs
or
and
mov
enter
push
in
in
lds
stos
sbb
mov
arpl
sahf
pop
enter
lea
push
sub
js
dec
aad
inc
jnp
aaa
and
push
into
outsl
mov
and
inc
int3
leave
and
push
mov
cmp
int
mov
xor
jo
push
sbbl
mov
adc
add
lcall
push
mov
stos
push
in
pop
out
xorl
icebp
or
into
cmp
dec
rorl
push
clc
dec
sub
mov
popf
xchg
push
out
andl
jle
fsubr
test
rcrb
notl
fwait
and
mov
mov
mov
sbb
and
nop
add
insb
xchg
add
aad
adc
out
ljmp
add
fs
loop
push
and
xor
sbb
clc
or
and
or
repz
test
ja
mov
ret
pop
int
add
inc
bound
pop
or
xor
inc
in
cmp
mov
popa
sub
dec
pop
add
outsl
jge
inc
lahf
xchg
sbb
xor
push
fcomip
mov
icebp
daa
fstpt
imul
jb
inc
add
sbb
mov
jno
jae
jg
push
push
pop
lret
xchg
shlb
test
popa
in
std
push
xchg
notl
aas
inc
sbb
fsincos
pop
roll
push
jge
lahf
inc
add
inc
subb
add
dec
aam
js
scas
sahf
mov
mov
pop
rol
lcall
push
jne
aas
loope
mov
pop
test
dec
or
ljmp
dec
mov
clc
out
xchg
dec
sbb
mov
pop
lret
subl
mov
out
std
sub
leave
cmpsl
pop
aad
cmp
push
lcall
cwtl
das
push
rclb
add
xor
xchg
adc
mov
lcall
ja
ret
mov
vhaddps
adc
push
in
lods
outsb
cmp
ja
das
mov
popa
stc
cmpsb
mov
sub
test
pop
adc
loope
add
icebp
jg
sub
sbb
mov
data16
push
clc
sub
jne
push
push
cmp
lods
sbb
pop
pop
in
int
jb
repnz
jnp
push
pop
scas
or
lcall
and
or
ss
stc
cmp
rorb
lods
cwtl
test
movb
test
mov
call
mov
adc
mov
xor
mov
shlb
jp
dec
clc
bound
sbb
mov
ftst
mov
nop
in
add
or
dec
xchg
dec
in
ljmp
sbb
sahf
mov
sahf
scas
push
mov
push
cmpsb
das
mov
fdiv
les
cmp
push
push
sub
and
mov
sub
out
cli
xchg
pop
xchg
adc
aas
cmpl
out
push
mov
repz
sub
ljmp
nop
rcrl
ljmp
mov
lds
pop
mov
fs
xchg
mov
mov
pop
pusha
push
xchg
push
mov
jle
in
into
dec
jecxz
and
mov
je
xchg
jo
fistpl
mov
mull
fidivs
pop
lret
aad
gs
push
and
test
test
dec
inc
fstpt
popa
sbb
cwtl
push
sbb
sub
xlat
test
call
xchg
xchg
ljmp
jecxz
sub
jp
sbb
pop
mov
cmp
insl
add
mov
mov
xchg
daa
outsl
ja
xchg
jb
inc
cltd
outsl
add
aad
es
and
pusha
pop
mov
push
xchg
cmpsb
iret
pop
push
fildl
mov
add
pop
mov
cltd
decb
rcrl
movsb
add
add
arpl
imul
into
nop
stos
push
pop
dec
adc
int3
outsb
or
pop
out
je
cs
jl
bound
and
mov
mov
test
adc
lahf
push
enter
adc
adc
out
xor
xchg
iret
mov
push
xor
mov
enter
aad
push
dec
dec
push
jg
inc
aas
pop
fiadds
mov
shll
stos
shlb
imul
push
mov
xchg
aas
repz
call
adc
enter
icebp
or
enter
inc
std
xchg
je
push
pop
insb
and
popf
or
add
loope
lret
out
inc
enter
add
mov
mov
adc
dec
test
icebp
jle
and
aad
sub
xchg
loopne
out
xor
outsl
mov
mov
add
cmp
sbb
in
push
in
mov
lock
mov
std
inc
add
jmp
jnp
jmp
jae
fiaddl
sbb
xchg
mov
rolb
push
dec
pushf
pop
jmp
mov
sub
sbb
orl
xchg
xchg
jmp
mov
xor
and
xlat
ss
jno
out
xchg
leave
test
pop
mov
cmpsb
shlb
jno
bswap
nop
pop
test
or
lret
test
call
push
sub
repz
mov
mov
inc
fcmovb
aad
mov
and
jge
sub
subb
sbb
mov
inc
std
push
hlt
cmp
clc
dec
sbb
pop
jp
mov
mov
xor
mov
xchg
leave
xchg
sbb
movl
rcrl
fisttps
or
out
movsb
lock
lahf
mov
arpl
sub
jbe
mov
xchg
xchg
push
andb
cli
icebp
pop
pop
add
ljmp
cmc
lods
sub
add
cmpl
repnz
push
xchg
vshufpd
cmp
orl
js
pop
jmp
les
outsl
sbbl
sub
add
push
hlt
ret
jmp
mov
cmp
loope
add
xchg
das
push
outsl
mov
mov
mov
inc
pop
sub
fsubs
mov
lods
and
adc
out
addr16
notl
cli
clc
and
fwait
repnz
scas
bound
jle
daa
mov
xor
mov
inc
push
dec
pop
idivb
cmp
popf
mov
test
clc
mov
push
push
negl
into
adc
adc
outsl
in
adc
je
and
loopne
mov
push
sahf
inc
notl
mov
fmuls
mov
sbb
imul
test
jno
mov
pop
mov
shrb
push
inc
out
or
cmp
cmpsb
std
icebp
aas
xchg
pop
and
jp
jns
and
inc
mov
cmp
notb
imulb
mov
mov
push
fbld
mov
bswap
jno
jmp
fs
arpl
lret
push
jb
push
mov
scas
sbb
dec
xchg
loope
gs
dec
push
and
xor
xor
dec
xor
xchg
jne
dec
loop
adc
add
rolb
sbbb
push
adc
dec
loop
sbb
push
fnstsw
adc
mov
adc
xor
xchg
ret
lock
mov
clc
or
jmp
mov
jne
lcall
sbb
aad
or
outsb
xchg
lret
pop
mov
gs
adc
mov
xchg
xor
dec
call
aam
adc
xchg
jbe
sarb
notb
mov
push
lahf
lahf
call
push
cmpsb
repnz
xchg
push
inc
sbb
jbe
loopne
ds
outsl
push
dec
notl
loopne
jmp
push
popa
jg
push
shrl
rolb
jbe
mov
inc
or
insl
sahf
add
pop
cmp
xor
sbb
sbbl
into
les
jo
mov
roll
cltd
pop
aad
je
stc
mov
mov
ror
push
adc
mov
sub
in
fwait
xor
fsubrp
in
mov
cwtl
jmp
daa
rclb
xor
out
add
pop
imul
cmp
jo,pn
test
sbb
xchg
or
cmpsb
scas
cmp
int
mov
popf
dec
and
repz
cmp
push
imul
mov
push
repnz
push
cltd
xor
adc
cmp
dec
mov
mov
iret
pop
out
cmp
aas
dec
sbb
iret
pop
es
aam
add
ds
pushf
cmp
sahf
jl
lock
loopne
jbe
loop
sbbb
xlat
mov
jno
lods
push
or
jmp
test
or
negl
ja
leave
mov
lods
cmpsl
fadd
xor
out
adcl
punpcklbw
ljmp
lcall
xor
test
cmp
or
pop
addr16
mov
aam
jmp
fbstp
rcl
test
shlb
jmp
xchg
dec
cltd
sbb
push
add
daa
loop
pop
fistpll
pusha
jno
xchg
rorb
daa
rcll
adc
jae
leave
out
lahf
cld
or
in
inc
vpsrad
push
hlt
fmuls
pusha
fldl
pushf
nop
shrl
or
pop
cmp
cwtl
out
std
dec
mov
mov
sti
xchg
push
subb
rolb
add
out
sbb
out
in
mov
inc
inc
clc
addr16
xor
push
je
in
mov
sbb
dec
out
ljmp
lock
mov
add
cmp
xorb
sub
jbe
pop
mov
cmp
inc
xchg
sbb
jne
jo
sbb
lret
sub
mov
movsb
rcrb
adc
stos
iret
aam
rorl
mov
iret
cmpsb
mov
jb
repnz
lock
testl
cmc
mov
daa
mov
outsb
rclb
jb
push
sbb
scas
mov
fbstp
push
mov
jp
lods
fmul
pop
arpl
xchg
imul
mov
rol
ljmp
cmp
stc
mov
lahf
lret
nop
lret
notb
std
popf
pop
pusha
mov
mov
iret
or
inc
std
sbb
jno
inc
mov
or
adc
fidivs
push
cmp
rclb
xchg
dec
sub
pop
stos
in
jae
jle
or
dec
push
mov
adc
jg
psubsw
cmp
pusha
push
mov
lds
adc
inc
mov
ja
or
repz
mov
bound
aas
fnstsw
sbb
jae
fs
rcrl
add
push
stos
mov
sahf
sub
rorl
sbb
push
fwait
incb
cmpsb
pop
push
or
mov
adc
fcmovnu
sti
sar
stc
xor
loop
arpl
sub
dec
dec
sarl
mov
sbbb
stos
in
rcrb
int3
mov
xor
out
jb
outsb
orl
jno
stc
sbb
add
mov
je
add
repnz
or
clc
ljmp
lods
jp
and
mov
or
imul
arpl
out
and
addl
js
push
or
add
xchg
sbb
into
fcoml
stos
and
out
push
cltd
xor
sbb
xchg
inc
jae
in
sbb
loop
movsb
pop
pop
push
cmpsl
mov
jmp
and
inc
into
pop
cmp
mov
outsl
xor
dec
push
loopne
mov
stos
mov
das
push
rorl
test
sub
in
or
lcall
cmp
mov
mov
das
jne
clc
or
pusha
dec
pop
cmp
mov
xor
xor
and
xchg
jp
mov
out
mov
add
dec
and
push
push
insb
mov
pop
sti
and
mov
mov
enter
pop
lret
add
mov
jne
push
mov
xchg
and
mov
adc
dec
stc
ja
out
loope
sbbl
or
sub
dec
in
or
outsb
cmpb
je
cltd
call
cmp
add
cmp
jb
inc
std
leave
aas
cmp
cmpsl
mov
roll
pop
cmpps
insb
loop
fistpl
xchg
xor
push
mov
lahf
loop
adc
jge
jle
mov
xchg
mov
pop
push
std
loop
jmp
xchg
add
dec
and
cli
inc
sbbb
aas
cmp
cmc
cmp
cmc
mov
jle
mov
push
inc
or
ljmp
popa
push
lods
xchg
sbbb
cmp
popa
mov
adc
or
jge
adc
mov
movsl
out
mov
cld
jnp
mov
cltd
daa
pop
cmp
add
insl
cmp
adc
adc
jmp
outsl
jg
xor
xor
call
sub
and
cmp
sub
movsb
cld
shl
out
mov
push
loope
loop
and
incl
enter
jo
mov
pop
call
add
mov
data16
mov
cmp
loopne
mov
push
jne
xchg
mov
or
cmc
nop
daa
out
xor
push
mov
xor
divl
or
icebp
sub
fsubrs
stc
xchg
sub
xchg
sub
mov
mov
mov
mov
and
dec
sub
add
retw
sbb
xor
in
test
adc
xchg
push
lea
outsl
ret
mov
push
cmp
stos
cmpsb
les
arpl
in
mov
loopne
aaa
enter
inc
or
dec
out
adc
lret
add
mov
mov
jp
xor
and
dec
push
in
fmuls
or
insb
pop
aaa
les
inc
fsts
insb
idivl
adc
or
pop
sbb
aas
jne
enter
call
sbb
movsb
outsl
pop
cltd
addb
insb
rorb
call
cli
push
sbb
jl
sub
fidivrl
out
mov
xor
aaa
into
push
mov
push
in
pop
idivl
cmp
jae
pop
pop
mov
adc
xchg
pop
and
ds
lds
cmp
fldt
data16
es
fstp
jne
es
mov
gs
push
sub
movd
inc
add
push
repnz
dec
adc
add
imul
div
or
push
mov
dec
push
mov
xor
shlb
adc
in
lcall
xchg
mov
inc
mov
xchg
out
jp
adc
stc
xchg
or
mov
sbb
jo
and
mov
ja
fcomps
out
cli
xchg
sub
cmpsb
out
mov
dec
leave
push
and
scas
mov
dec
inc
in
dec
jo
ret
push
cmp
sub
popf
xchg
jno
jl
stos
pop
xor
xchg
shl
repz
imulb
stos
cld
popa
pop
cmp
sbb
std
mov
xchg
adc
sbb
jg
push
das
ljmp
sbb
jp
les
mov
test
lret
jns
push
call
mov
jns
mov
sbb
push
scas
cmp
lea
cmp
sub
bound
sub
movsb
std
ret
imul
sbbb
xchg
push
and
bound
and
xchg
sub
es
data16
add
out
imul
jge
leave
enter
gs
mov
cmc
out
mov
adc
adc
addr16
pop
cltd
daa
popf
test
mov
in
adc
and
or
lds
xor
push
add
xchg
sub
mov
pop
mov
roll
repz
popf
ds
repnz
or
push
jns
adc
pop
mov
mov
dec
push
jmp
pop
nop
pop
inc
aam
cmpsb
mov
mov
sub
mov
add
cmp
std
jbe
stos
ljmp
test
or
cli
cld
std
ds
fistps
aam
loopne
xchg
inc
stos
cmpsl
imul
or
insl
jno
push
mov
frstor
cmpsb
sbb
ss
lea
jmp
dec
or
pushl
xchg
cli
push
mov
push
cmp
jecxz
pop
sahf
pop
xchg
icebp
and
mov
out
shrb
pop
movsl
jns
jg
into
mov
jns
xchg
lcall
push
xchg
mov
fwait
sbb
dec
cmp
cmp
mov
test
xchg
imul
sarb
iret
pop
or
adcl
dec
jo,pt
push
pushf
jns
mov
push
push
test
fs
xor
inc
jge
aad
push
mov
fwait
push
imul
jecxz
dec
inc
test
xchg
push
lea
loope
pop
ljmp
jno
and
lahf
jb
ret
hlt
jmp
jne
lret
push
dec
in
xchg
fidivl
ds
push
lcall
xor
imul
add
cmp
ret
loope
mov
int3
imul
popa
xchg
lods
mov
ljmp
fists
push
mov
push
fs
shrb
xchg
fstpt
popa
add
mov
inc
add
icebp
movsl
push
test
sub
idiv
out
fcomp
sbb
outsb
pushf
pop
mov
dec
dec
jns
jl
xchg
pop
push
sub
sbb
xor
and
pop
cmc
aaa
lods
pop
pusha
jbe
push
nop
adc
adcl
and
je
je
push
sbb
inc
int
cli
mov
mov
and
int
aam
add
sahf
adc
xchg
and
int
cmp
scas
aad
sub
pop
cmpsb
fldt
pop
jge
inc
push
jne
insb
jmp
test
leave
mov
out
jmp
jo
fcmove
mov
pop
in
lret
jecxz
dec
cmp
mov
test
mov
mov
arpl
pop
arpl
mov
xor
into
ds
pop
jo
jecxz
fsts
mov
fldl
xchg
add
mov
outsl
mov
dec
iret
xlat
loopne
sahf
dec
or
dec
cmpsl
xchg
andb
stos
aad
mov
jne
push
and
imul
push
dec
mov
ror
adc
jecxz
jp
add
leave
decl
dec
add
mov
das
xlat
ss
aaa
pop
adc
mov
enter
fdivp
push
push
sahf
adc
sbb
mov
in
add
ret
aam
insb
mov
dec
loope
aam
popa
cmp
outsl
xchg
test
repz
aaa
jge
in
mov
mov
or
pop
mov
sub
mov
cmp
bound
pop
popa
arpl
pop
pop
xor
pop
insb
lcall
bound
jne
adcl
cmp
jecxz
repz
loopne
stos
out
es
cmp
jecxz
icebp
cwtl
pop
ret
in
mov
aaa
jbe
push
mov
test
lret
icebp
dec
stc
dec
dec
pushf
mov
imul
popf
lods
pop
scas
push
sub
mov
mov
and
pop
adc
push
iret
add
insl
ret
sub
and
rcll
sub
call
jmp
dec
adc
pop
mov
cmp
sbb
xor
xchg
sarl
addr16
cmp
adc
rcr
jno
add
lahf
andb
pop
mov
mov
jge
xchg
sub
and
lret
movsb
sahf
xor
mov
mov
mov
xchg
cmp
clc
cmpsl
adc
xchg
or
jno
movsb
out
jge,pn
sub
mov
lds
out
ja
pop
mov
into
aad
rorb
lock
sbb
lock
outsl
sti
stc
popa
sub
push
xor
mov
dec
inc
sub
or
loop
jp
ja
sbb
or
in
out
fs
test
inc
or
ds
cld
mov
mov
inc
dec
or
lret
xor
popf
popa
loop
scas
xor
test
fisubs
jb
sbbb
jmp
add
pop
mov
xchg
test
fdiv
lds
cmp
xor
xor
inc
adc
jp
clc
insb
fnstenv
sbb
js
dec
and
fs
lcall
sbb
cmp
fwait
pop
fisubs
jbe
cmpsl
mov
xchg
imul
xor
xchg
mov
hlt
fwait
insl
jo
xchg
mov
movsl
cmp
rcrl
aaa
les
push
std
sub
test
sbb
stos
adc
push
lock
push
and
xchg
ja
adc
jle
adc
xchg
inc
das
shr
mov
cmp
adc
adc
cltd
and
inc
or
xlat
test
clc
dec
sub
daa
fdivs
bound
test
push
sbb
jns
sub
lock
dec
mov
cwtl
daa
mov
stos
inc
push
scas
test
mov
xlat
in
pop
jb
mov
cmpsl
push
mov
inc
dec
out
cld
notb
sbbb
mov
pop
or
mov
sti
pcmpgtd
lret
loopne
das
and
outsl
mov
jle
insb
imul
cmp
lret
jmp
das
dec
outsb
loop
pop
call
in
pop
stos
xchg
adc
out
push
out
pop
jnp
negb
fistpl
xor
sbbb
incb
out
fdivp
jl
push
lahf
inc
imul
mov
bound
and
inc
bound
inc
hlt
push
cld
clc
mov
cltd
cmpsb
fistpl
cmpsb
push
arpl
jp
and
xchg
cltd
dec
mov
clc
jnp
cmp
or
mov
in
cmpsl
pop
jmp
adcb
xchg
pop
dec
xor
mov
out
mov
popf
adcb
mov
hlt
mov
cmp
test
aaa
addr16
xor
lea
push
inc
fstl
or
repnz
fs
and
inc
aad
mov
push
mov
fs
je,pt
negl
push
cmp
mov
and
or
fwait
test
sbb
sbb
out
mov
push
jl
cltd
mov
popa
call
test
jg
dec
cli
xchg
sub
fcomi
mov
mov
das
sub
lcall
inc
call
jo
movsb
js
xchg
iret
xchg
add
arpl
adc
mov
and
nop
les
add
roll
jle
out
fcomps
sub
rcl
addr16
or
xor
mov
filds
popa
loop
xchg
mov
xchg
jns
outsb
pop
dec
adc
test
push
dec
xor
daa
or
pusha
mov
pop
notb
mov
jbe
ja
aad
xor
fidivs
pusha
push
lahf
ss
mov
jecxz
aaa
icebp
mov
subb
cld
mov
adc
test
repnz
pop
mov
outsb
aam
mov
dec
push
js
mov
cli
pushf
add
enter
mov
addr16
and
inc
push
adc
stc
bswap
cmpsb
mov
mov
icebp
and
stc
mov
sbb
lods
dec
pop
repnz
aad
and
out
push
or
call
nop
mov
xchg
mov
jg
xor
lcall
stc
cmp
mov
and
xor
in
es
cmp
repz
aad
pusha
call
mov
push
loope
xchg
and
call
dec
pop
addr16
es
ficoml
xor
ja
nop
hlt
imull
lret
rorl
xchg
sub
mov
mov
pusha
je
addr16
stos
pusha
neg
push
rclb
sub
ds
and
dec
shlb
mov
sti
dec
push
and
iret
mov
push
out
out
dec
add
mov
jb
sti
xor
fstpl
jb
outsb
int3
xchg
sub
add
mov
sub
ds
push
ret
shrb
xor
mov
jl
xchg
pop
mov
cmpsb
mov
sahf
push
test
inc
cmp
inc
outsb
daa
pop
into
pop
dec
mov
insb
andb
aam
mov
jnp
subl
xor
mul
xor
jg
dec
push
mov
push
cmp
scas
add
xchg
je
jo
lods
jne
ss
mov
lock
scas
outsb
cmp
lahf
rolb
and
jae
jmp
in
rcrl
jle
ss
inc
fbstp
cmp
pop
movsl
jb
push
and
jnp
push
movsl
jg
jecxz
addr16
lods
imul
data16
sbb
sahf
dec
lahf
xor
ret
jnp
and
push
hlt
pop
stc
mov
test
rcl
cmp
sub
xor
mov
fimuls
sbb
cmpsb
arpl
in
sbb
push
outsl
pop
scas
movsb
or
pop
push
mov
rorl
and
into
xchg
outsl
sbb
aaa
mov
xchg
sti
hlt
stos
add
ret
sub
stos
sub
movsb
cmc
adc
mov
cmp
sbb
add
pop
jmp
mov
les
bound
addr16
xchg
mov
fsts
dec
fs
outsl
cmp
pop
jle
xor
add
adc
mov
ds
inc
cmp
js
cmpsl
cmpsl
sbbb
repz
inc
sub
pusha
popf
cmp
jb
sub
xchg
stos
je
aam
mov
jo
add
insb
pop
and
pop
dec
imul
pop
dec
scas
mov
xchg
cmp
aaa
scas
and
inc
in
ljmp
pop
xchg
xchg
and
repnz
filds
aad
fcomi
push
jae
std
repz
hlt
dec
shr
and
int
xor
push
js
out
std
dec
dec
or
xlat
push
add
push
cmp
push
xor
jmp
mov
dec
inc
push
fs
bound
sbb
cld
mov
sub
scas
push
in
fistpll
add
jae
test
repz
sbb
scas
call
loopne
mov
aas
add
lret
mov
pop
add
sahf
pop
test
cmp
cmp
mov
je
adc
lret
xor
and
movsl
inc
and
shrl
and
in
test
adc
movsl
sarl
mov
inc
into
mov
fwait
in
push
test
mov
jg
add
pop
jmp
jnp
and
rolb
ret
out
fsubs
jge
shrb
movsl
iret
xchg
add
cmp
pusha
test
ds
adc
jne
push
xor
fs
in
push
sub
inc
jp
imul
ljmp
movsl
das
insl
pop
hlt
loopne
mov
adc
mov
sbbl
insb
push
jge
mov
sub
fnstenv
or
mov
mov
addb
add
or
stos
scas
ret
adc
sub
mov
sub
add
inc
dec
mov
xchg
repz
fistl
clc
das
pop
cmp
inc
lds
es
jbe
les
and
and
lret
sbb
mov
dec
jmp
insl
or
fs
in
outsl
jnp
and
mov
dec
and
and
xchg
in
or
sbb
dec
dec
test
lods
lret
xchg
addr16
dec
pop
xchg
jo
mov
cmp
mov
ret
mov
mov
and
out
test
shrl
dec
pop
fmulp
push
jo
dec
dec
aad
shrb
mov
repnz
adc
jge
inc
daa
into
sbb
inc
or
cld
loope
idivb
add
lds
mov
cmp
je
ret
mov
pushf
int
into
fnstenv
mov
fstl
loope
xor
das
repz
cmp
push
mov
xlat
and
pop
sbb
or
xor
cmp
mov
ja
cmpsl
push
inc
push
jbe
aaa
cs
popa
test
aad
sti
movsb
mov
mov
adc
popf
xchg
jle
mov
sti
sub
jge
insl
jge
jp
sbb
sbb
je
sub
mov
adc
je
push
push
imul
mov
push
call
pop
outsb
mov
nop
mov
shlb
or
jnp
hlt
add
repz
icebp
dec
pop
cs
shrl
sub
je
iret
mov
pop
lds
out
lahf
repz
aas
inc
movsl
inc
gs
push
inc
and
roll
dec
setbe
jmp
addr16
jmp
or
pop
pop
push
test
out
lock
clc
sub
pop
mov
add
xchg
adc
into
pop
popa
lods
xlat
push
subb
jb
daa
pop
mov
loop
lret
lret
clc
mov
jge
and
add
dec
push
pop
cmpsb
sbb
lods
pop
xchg
jns
dec
sub
not
inc
std
sub
pushf
stos
pop
das
mov
jbe
test
xchg
dec
push
in
pop
je
xor
dec
mov
xchg
pushf
xchg
cmp
pop
aaa
jo
xchg
pop
xchg
and
cs
das
sbb
or
loope
add
jbe,pn
ja
cmp
ficoml
jg
push
add
fcomps
pop
inc
cmp
push
imul
push
mov
sub
cmc
fwait
xor
fcoml
xchg
mov
xchg
push
iret
push
loope
or
dec
xchg
loopw
adc
lds
lahf
push
adc
pusha
testl
add
push
mov
dec
jnp
cmp
popa
roll
icebp
and
es
aaa
sbb
les
in
cmp
sub
mov
mov
mov
cmpsb
rcr
jae
scas
cmpsb
xor
ret
cltd
push
push
int3
push
mov
enter
rcrb
stos
sbb
ffree
std
xor
cli
out
mov
cmp
sub
pusha
incl
fnstcw
xchg
test
sarb
loope
mov
outsl
rcrb
aam
push
sbb
jns
push
jecxz
sti
fdivr
loope
inc
test
addl
inc
pop
xchg
loope
sbb
stos
jb
push
arpl
pop
repnz
push
add
gs
andb
pop
cmp
xor
and
or
out
xor
mov
xchg
sbb
jecxz
sbb
aas
mov
inc
dec
inc
add
push
jmp
inc
std
inc
fs
test
pusha
ret
insb
lcall
insb
mov
sub
cmp
ret
dec
add
pop
call
dec
std
ljmp
popf
cltd
adc
leave
xlat
loope
xchg
fcoms
xor
push
shlb
mov
push
imul
rolb
shr
aas
xchg
test
xchg
xchg
xor
fwait
aaa
insb
add
inc
fs
mov
fstpl
mov
xchg
inc
add
cli
mov
cmpsb
cmp
mov
bound
cs
fists
shr
ds
imul
inc
inc
push
and
shrb
lahf
adc
aam
mov
insl
idivl
or
sub
inc
leave
push
xor
cmpsl
sub
push
in
cs
mov
mov
std
pop
dec
sbb
aad
mov
popa
push
cmp
cmp
push
insl
lret
cld
sub
pop
out
fcompl
cmp
mov
cmp
sti
inc
mov
pop
jl
shlb
cltd
icebp
mov
mov
jne
cmp
push
loope
lods
pop
testb
lret
arpl
sub
pop
scas
lds
sahf
sti
inc
sbb
lds
or
and
mov
cmp
cmc
lods
test
push
cmp
cmpsb
outsb
sub
push
aad
pop
dec
nop
push
imul
jl
sub
add
pop
loopne
mov
insl
fsubrs
and
xorl
into
orb
sarb
mov
inc
in
movsb
cmp
mov
mov
das
xchg
mov
add
mov
sbbb
mov
jp
xchg
leave
lock
push
imul
sbb
stos
inc
pop
popf
mov
out
mov
nop
or
movsb
mov
aas
pop
xor
push
sbb
inc
fs
jb
int3
pop
jno
aaa
sub
shrl
fdivl
stos
mov
lea
push
dec
push
cwtl
sahf
int3
adc
fiaddl
into
fdiv
mov
xchg
jo
scas
movsb
mov
mov
xor
cmp
in
mov
adc
gs
xor
cmp
sub
aas
mov
xchg
cli
jae
ljmp
in
add
cmp
sbb
popf
rorl
enter
pop
repz
loopne
les
mov
adc
xchg
sti
add
icebp
cli
xchg
mov
jp
jp
add
in
dec
pop
lods
cltd
loop
shr
filds
and
dec
push
mov
iret
push
sbb
dec
clc
paddusb
lahf
pop
or
or
bound
push
out
ffreep
xor
pop
cmpsb
fsubr
fbstp
jmp
jmp
push
cld
mov
jecxz
lret
in
jmp
mov
xor
les
mov
xchg
pop
sti
sbbb
pop
xchg
mov
ffree
out
pop
sbb
repz
test
mov
icebp
pop
hlt
loopne
sbb
dec
gs
pop
add
dec
mov
push
loopne
mov
push
mov
das
stos
inc
pusha
cmp
rorb
idivl
insb
inc
pop
push
pop
cmp
nop
sub
shll
fnsave
inc
mov
lea
dec
loop
jmp
jb
imul
adc
ss
aaa
sbb
in
mov
pop
pop
out
xchg
pop
mov
inc
addr16
ds
sti
inc
or
jbe
decb
ficomps
xchg
sub
sbbl
icebp
or
dec
loopne
sub
jbe
shlb
inc
test
push
push
mov
int
or
out
cmp
jecxz
mov
add
jb
dec
stos
cmp
lea
clc
std
sbb
mov
mov
jge
loope
pop
nop
ds
aaa
or
in
les
cmpsl
mov
lds
pushf
jb
fimuls
xchg
pop
pop
fistpl
lods
sbb
js
jmp
pop
jb
sarb
aad
inc
pop
or
inc
and
ja
pop
movsl
jb
xchg
data16
daa
out
sub
ret
push
xchg
xlat
pop
add
mov
inc
data16
cmpsl
push
add
stos
std
or
movsb
sbb
outsl
push
pop
dec
test
jne
lea
or
mov
movsb
sbb
mov
popl
fcompl
jl
xchg
mov
fnsave
pop
lret
mov
jl
sbb
cli
test
testb
jge
daa
out
pop
adc
jns
xor
dec
pop
xchg
jnp
fldt
inc
popa
mov
cmpsb
mov
jo
sti
lret
dec
jp
inc
clc
hlt
inc
scas
outsl
scas
mov
sub
pop
mov
out
push
test
mov
stos
add
loopne
xchg
xor
push
push
fdivrl
or
dec
xchg
outsl
mov
xor
xor
ds
inc
popa
push
xor
les
daa
repnz
xchg
xchg
mov
cmp
nop
dec
pop
lds
out
loopne
inc
int
xchg
xchg
push
dec
out
xchg
sub
mov
cmc
stos
lcall
mov
lock
cmp
or
dec
daa
divb
push
cs
rolb
in
pop
sbb
mov
mov
inc
add
rcrl
and
sbb
cmpsl
or
mov
lcall
call
inc
mov
mov
lret
andl
push
adc
pushf
shlb
inc
loopne
xlat
jb
in
arpl
pop
sbb
sbb
mov
ret
xor
jp
es
test
add
xor
adc
lret
loopne
lock
fisubl
mov
outsl
fsub
je
adc
jae
xor
pop
jo
outsl
stc
mov
or
cmp
jnp
push
notb
fnstcw
xor
jns
and
pop
and
dec
mulb
or
sbb
xchg
sub
xchg
push
ljmp
insb
ret
adc
mov
loope
mov
jb
mov
test
jp
jno
or
loope
mov
pop
in
or
xchg
test
xor
pop
jge
jnp
data16
fmul
movl
ret
shll
push
jmp
loop
jae
inc
movsl
lods
or
sub
sbb
lret
repz
mov
xor
lds
cmp
in
pushf
scas
jg
pop
repnz
mov
stc
popf
das
jb
cmpsl
lods
jmpw
adc
notl
int3
arpl
mov
test
in
mov
aaa
push
out
lds
lods
pop
repz
jb
jb
push
dec
js
fwait
inc
insb
xchg
xchg
loope
sbb
cltd
aas
and
icebp
jns
bound
imul
jo
and
pop
jb
mov
into
daa
sar
and
xor
sbb
cmp
mov
in
out
xorl
rcrl
jle
clc
aam
inc
into
loope
xchg
mov
or
out
mov
adc
dec
pop
mov
or
mov
xor
cmpsb
mov
mov
xchg
mov
push
dec
mov
pop
adc
mov
adc
push
pop
or
fxch
add
pop
aam
push
cmp
insb
cmp
ljmp
daa
mov
pop
ret
pop
inc
test
fnstenv
adc
scas
je
test
ret
pop
xor
fmul
sbb
add
xor
jmp
mov
mov
sub
sub
or
fs
push
or
lea
lret
or
ret
popa
divb
jns
push
jecxz
daa
push
out
repz
cmp
inc
out
xor
cmp
mov
imul
mov
lea
jb
pop
insl
in
pop
mov
fnstenv
dec
cs
push
dec
ret
shll
push
mov
xchg
jle
add
or
mov
fwait
xor
xchg
add
movsl
repz
mov
jnp
mov
dec
jl
aam
aas
push
out
cmc
or
xor
movsb
cmp
clc
pop
cmp
sarb
cmp
rol
repz
addr16
mov
outsl
addr16
out
lods
imul
xchg
add
lcall
jno
mov
out
out
loopne
adc
dec
jne
cmp
testl
sub
fmulp
in
dec
dec
mov
sbb
sahf
push
call
test
outsl
sub
rol
adc
sbb
mov
push
mov
jnp
jge
inc
mov
jmp
push
rolb
das
stos
or
sub
pop
xchg
jbe
je
lahf
dec
jle
clc
sbb
xor
nop
push
sub
insl
and
jmp
mov
or
and
add
xchg
mov
lea
mov
push
push
mov
add
dec
mov
jns
adc
jns
in
jmp
scas
jb
dec
jl
out
fs
xor
push
xorb
mov
adcl
lods
mov
xchg
cmp
jecxz
mov
loop
jne
dec
inc
repz
fs
sub
mov
fwait
dec
mov
jns
mov
xchg
pop
push
jae
scas
cmp
cmp
and
add
arpl
add
out
pop
add
sahf
xchg
in
add
mov
arpl
ror
jl
mov
vpcmpeqb
pop
add
mov
push
inc
shrb
fsub
cmp
loope
fwait
xchg
mov
sub
dec
mov
cmpsb
add
dec
mov
test
test
sub
pop
xor
xorb
aas
enter
dec
imul
enter
push
or
mov
jno
jecxz
or
jg
pop
mov
lock
sti
add
ss
xchg
stos
jbe
addr16
aam
fwait
dec
fidivs
daa
les
dec
push
stos
mov
mov
aad
lahf
fidivrl
ds
jno
mov
pop
push
in
stc
adcb
jb
fmul
sub
stos
icebp
mov
add
fisubs
mov
ss
cmpsb
inc
jge
rclb
int
lret
in
cmc
and
notl
inc
push
adc
fucomi
fisubrl
into
mov
and
mov
mov
mov
adc
jmp
or
insl
add
pop
fs
lea
out
adc
popa
xor
decl
mov
or
arpl
mov
outsl
mov
mov
jbe
mov
scas
repz
test
clc
adc
xlat
outsb
pop
dec
add
cmp
cmc
lret
sub
pushf
sahf
add
lods
inc
xchg
adc
fs
and
mov
cld
les
or
outsl
sub
xlat
ljmp
push
jne
pop
stos
fcom
shrl
fnstenv
je
fbstp
scas
pop
mov
loope
sbb
xor
lods
push
int
jp
xor
xlat
pop
add
or
sbb
inc
mov
cmp
sub
enter
int
jnp
mov
pop
sahf
add
arpl
dec
push
jb
outsb
cmp
xchg
in
pop
add
lahf
mov
push
adc
out
xor
sub
int3
mov
fmul
outsb
add
xor
or
jecxz
inc
dec
jnp
jae
xchg
movsl
cld
add
and
dec
daa
mov
pop
push
ret
push
mov
jne
inc
xlat
rcll
fidivs
push
cltd
sub
test
xchg
aaa
and
das
mov
bound
sub
fidivrl
mov
inc
fisttpll
out
mov
int
imulb
and
adc
jl
xchg
xor
sbb
or
ss
lds
pushf
das
imul
loope
out
push
test
adc
pusha
jge
fidivl
outsl
jl
pop
adc
or
cs
jmp
les
lea
shrl
inc
mov
hlt
cltd
bound
push
fs
jle
inc
mov
ret
ffreep
mov
lahf
les
and
in
out
sub
cmpb
pop
iret
adc
in
test
aad
push
inc
pop
cmp
int3
test
or
and
push
adc
frstor
icebp
mov
or
ljmp
and
adc
js
call
mov
push
f2xm1
inc
out
loop
mov
lret
adc
and
fs
sti
into
ret
into
popa
lret
mov
inc
xor
inc
xor
mov
mov
pop
cmp
xchg
push
sub
jne
mov
jbe
jmp
pop
mov
shl
push
xor
jae
and
out
test
jp
mov
or
scas
xorb
mov
enter
push
inc
pop
clc
pop
in
ffree
dec
jecxz
popf
lock
add
push
je
fnstcw
lret
mov
inc
pop
rclb
add
int3
sarl
jae
movb
ror
and
mov
out
sbb
mov
ja
repnz
ss
test
pop
dec
mov
jb
cmp
or
mov
mov
int
js
dec
dec
pop
scas
fstpt
cmp
das
adc
pushf
call
cmpsl
and
lds
scas
addr16
sbb
adc
adc
xor
fimuls
fs
les
sub
movsb
and
cmc
mov
sti
sbb
pushf
or
loop
dec
dec
jle
fwait
jns
xchg
ret
mov
jecxz
ss
inc
mov
dec
and
rclb
xor
push
repz
nop
xrelease
fmuls
shll
rcr
scas
pop
test
lahf
jge
xchg
int
push
mov
addr16
xchg
pop
fbstp
lea
movsl
arpl
xor
lods
insl
fbld
rclb
or
pop
jl
and
loopne
pop
je
or
es
and
xor
mov
cmpsl
jge
iret
scas
inc
out
mov
pop
push
push
std
or
es
int
int
mov
mov
ret
ffree
fmul
lds
cld
jmp
jae
and
andb
xchg
jge
cwtl
sbb
flds
outsb
mov
xor
pop
ds
sub
ror
dec
pusha
insl
push
cmpsl
out
mov
paddsw
xor
xor
out
sbb
fstps
insb
or
xchg
fstl
sbb
push
test
jg
ja
jmp
push
add
in
mov
cmpsl
push
mov
out
aad
lahf
outsb
sbb
cwtl
loope
dec
and
aas
hlt
mov
iret
jmp
jnp
dec
fidivl
rcll
into
sbb
sub
out
cs
je
and
cmp
and
pop
adc
imul
ljmp
mov
mov
pop
xchg
push
push
jmp
mov
jge
imul
mov
jp
dec
mov
push
inc
xor
lret
sub
in
inc
lret
addr16
es
or
fidivl
test
inc
test
enter
xchg
xchg
cmp
insb
hlt
mov
imul
aam
jl
inc
std
add
pop
inc
rorl
test
jnp
lahf
or
fwait
loop
xchg
xchg
sbb
xor
notl
push
cmp
lret
xchg
adc
test
push
lea
mov
fstl
mov
ret
fldcw
pop
and
mov
adc
push
xchg
js
mov
ds
in
mov
sub
xlat
xor
sub
out
sub
xor
cmp
adc
adc
mov
sbb
xor
decb
popa
sti
jle
shrl
mov
outsb
loope
push
jns
icebp
or
cwtl
and
pop
out
jbe
ljmp
dec
cmp
rclb
pop
ljmp
stc
or
jecxz
or
sub
or
pop
cmp
pop
push
dec
dec
clc
ljmp
call
out
or
leave
mov
xchg
jmp
pop
int
mov
sub
dec
je
adc
dec
lea
or
cmpsl
fstpt
or
daa
outsl
cs
and
or
out
xchg
sub
inc
stos
push
fcmovnu
mov
push
mov
pop
xchg
push
mov
pop
inc
mov
ljmp
hlt
xchg
and
push
insl
inc
in
pop
sbb
clc
int
hlt
adc
pop
dec
xchg
dec
pop
jle
adc
and
pop
pop
mov
jge
loop
cmp
or
dec
sahf
sarb
rorl
ret
pop
cmpb
loop
mov
dec
xor
movsb
inc
sbb
leave
mov
xchg
divl
cmc
mov
sub
in
movsb
pusha
pop
repz
xor
pop
xor
cmpsl
add
shr
mov
push
xor
pop
bound
and
or
mov
cs
xchg
aad
gs
pop
fabs
inc
shrl
inc
jecxz
jo
jae
sbbb
add
inc
sti
jle
mov
lock
xor
insl
add
push
dec
imul
push
mov
jmp
sub
xchg
mov
pop
out
inc
iret
aad
data16
push
leave
pop
adc
jb
jecxz
jns
test
or
mov
fnsave
sub
sbb
dec
xor
in
xor
cmp
xchg
in
pop
testb
adc
insb
or
sub
sub
inc
loop
je
cli
shrb
fidivl
mov
clc
test
bound
add
dec
mov
mov
loope
dec
scas
gs
xor
std
mov
shl
aad
dec
pop
cmp
imul
xchg
into
xchg
in
xor
outsl
dec
xchg
scas
in
rcrb
popa
cld
lods
stos
out
push
mov
jns
pop
out
adcl
int3
leave
pop
cmp
movsl
addl
fs
push
push
push
pop
dec
mov
or
clc
mov
pop
cli
pop
add
add
adc
cmp
je
pop
mov
outsl
popf
stos
inc
push
mov
jb
call
push
or
add
fdivp
in
xor
sarb
outsl
jmp
pusha
push
inc
cmp
das
ret
add
mov
xor
add
push
push
sub
movsb
and
add
mul
icebp
xchg
sbb
push
lods
mov
dec
jp
push
fsts
and
fs
adc
lcall
inc
fcoml
ds
arpl
mov
mov
sarl
push
movsb
fldpi
or
aad
mov
mov
jb
mov
mov
and
push
movsl
addr16
pusha
sub
das
repnz
cld
shrb
roll
fs
sbb
aaa
mov
pop
jno
mov
xchg
push
pop
pop
dec
inc
fmuls
push
outsb
imul
pop
cs
pop
sub
insl
fistpl
xor
mov
movsb
xchg
push
ds
mov
mov
ret
add
jle
dec
xchg
cs
insb
add
out
push
lods
inc
sahf
pop
lds
nop
daa
add
xchg
mov
fbstp
jns
stos
insb
mov
mov
mov
jp
jecxz
inc
xor
lret
mov
data16
and
test
push
add
stc
movsl
sbb
mov
mov
testl
xchg
imulb
in
ss
xor
mov
jbe
icebp
gs
insl
gs
int
mov
cmp
mul
jge
clc
es
cmpsl
inc
out
xor
icebp
mov
adc
mov
ja
or
sub
mov
jno
push
testl
shrb
scas
dec
jp
mov
adc
and
push
out
icebp
lret
in
mov
imul
xchg
sub
mov
mov
insl
add
gs
inc
pop
hlt
lret
call
aas
mov
inc
inc
jp
int
aaa
cltd
icebp
repnz
into
pop
push
cmpsl
jns
in
jbe
pop
inc
aad
loop
mov
jae
sarb
fisttpll
jbe
inc
inc
dec
js
cmp
imull
inc
outsb
test
shrl
cmpsb
add
sbb
or
js
pop
imul
ja
xor
or
test
in
mov
ja
fidivl
xchg
dec
and
mov
sti
data16
inc
push
xchg
test
pop
loope
cmp
fidivrs
repnz
dec
stos
cltd
sbb
test
and
pushf
out
ja
lret
fdivp
sbb
push
rclb
and
insl
test
push
ss
or
sub
call
fmulp
pop
fsubrp
add
in
mul
mov
push
mov
les
insb
lret
bound
push
ljmp
cmp
popf
out
cmc
sub
jmp
loopne
out
push
sub
repz
rorl
dec
in
sbb
mov
xor
aas
repnz
inc
adc
inc
int
sbb
mov
out
push
aad
mov
js
andb
pop
or
sub
in
pop
lcall
mov
pop
je
es
sbb
aas
adc
adc
xchg
je
adc
inc
hlt
into
xor
pushf
cmp
dec
loope
loop
scas
sarl
out
xchg
je
dec
push
mov
mov
push
arpl
inc
cld
inc
stos
fidivl
xor
notl
cmp
sbb
push
dec
loopne
jle
cmp
ljmp
sub
jbe
mov
xchg
je
mov
push
jl
lods
lods
cmpsb
ret
lea
sub
subb
and
es
push
add
clc
inc
xchg
cs
sub
xlat
mov
inc
adc
add
arpl
push
cltd
inc
iret
jp,pn
push
cvtpi2ps
ja
cmpsl
jo
andb
or
dec
rorl
rcll
push
cmp
mov
push
js
or
leave
pop
push
into
dec
out
mov
das
into
and
cld
daa
call
adc
sbb
call
hlt
jg
orb
push
or
mov
les
cld
scas
fucomi
out
push
loope
scas
jb
fmuls
test
lret
lret
pop
je
shl
and
inc
sbb
push
fisubl
sbb
fldt
dec
out
popa
push
loop
mov
imul
lds
dec
fs
cwtl
xor
mov
or
inc
pop
adc
mov
outsb
popf
mov
push
int3
lret
sub
loop
xchg
sub
mov
loop
lds
lret
mov
cmpb
js
mov
icebp
mov
fiaddl
ret
dec
push
pop
lock
adc
icebp
xor
jo
inc
cli
cmp
sbb
shrl
cld
sbbl
or
iret
pop
ja
test
ret
adc
mov
and
es
push
or
jns
in
pop
inc
fisubrs
hlt
xchg
fidivrs
out
lods
inc
loop
mov
ds
scas
outsl
out
cwtl
or
repnz
sub
push
movsb
arpl
lds
pop
sbbl
mov
aam
mov
int3
sbb
jmp
add
mov
mov
dec
scas
jl
loop
fidivl
add
and
mov
sub
pop
mov
data16
loope
scas
call
cmp
sahf
outsl
imul
fldl
stc
xchg
adc
cmp
out
lods
shl
sub
inc
fmull
sahf
or
arpl
mov
les
andb
shlb
push
jmp
push
std
jo
stos
test
xor
out
divb
shll
jb,pn
cmpsl
and
add
jle
xor
pop
inc
clc
mov
mov
mov
rcrl
jp
repnz
shlb
mov
repnz
pop
push
decb
sub
rcrb
adc
mov
mov
sub
and
sbb
cwtl
sbb
mov
jle
pop
mov
fiadds
jp
jae
push
inc
push
js
mov
mov
in
sbb
jl
mov
filds
add
shlb
ret
jno
fildll
push
data16
cmpsl
xchg
pop
lock
in
mov
movsb
scas
push
lea
dec
loopne
shlb
ret
out
pop
xchg
mov
imul
mov
stos
xor
enter
scas
cmp
inc
adc
push
sbb
xor
push
mov
fidivrl
cmp
fs
loope,pt
mov
imul
pop
pop
add
sbb
stos
mov
orl
inc
call
stc
loopne
push
shl
mov
in
outsb
into
enter
ljmp
xor
inc
int3
leave
push
addr16
sahf
sub
push
icebp
pop
sbb
inc
xchg
pop
scas
dec
mull
popa
adcb
mov
pop
cli
inc
xlat
xor
andl
jb
shl
fwait
inc
inc
mov
das
addr16
jle
fwait
mov
es
mov
lret
cmp
mov
jle
out
and
cmpsl
sti
popa
add
sahf
xor
pop
adc
or
add
in
pop
and
fldl2t
sar
mov
xor
call
lret
stc
and
pop
fistps
aaa
into
dec
ds
xor
jbe
push
push
pop
mov
and
jb
and
and
mov
pop
hlt
jo
orl
push
scas
or
js
inc
insb
mov
sbb
in
repz
dec
mov
stos
adcl
ds
repz
test
xchg
arpl
rcr
lock
pop
adc
and
aaa
or
cld
add
or
cltd
je
sub
jg
call
jnp
test
rorb
popf
popa
and
ss
fldcw
inc
pop
je
hlt
mov
pusha
addr16
mov
cltd
jno
inc
sub
insb
les
call
aaa
int
cmp
xchg
outsb
pusha
xchg
das
sbb
pop
dec
pop
into
push
les
push
gs
in
out
mov
shl
xor
sub
into
mov
fisttpl
pop
sbb
xchg
fwait
jl
or
xor
jmp
xorb
pusha
es
jp
xor
jns
cli
add
push
xor
mov
and
lock
icebp
or
loope
mov
xor
xchg
and
dec
adc
pop
or
pop
sahf
sbb
ret
dec
es
imul
mov
lods
repnz
push
xchg
mov
inc
xchg
out
test
out
cmc
xchg
sub
movsb
fwait
cmp
shll
dec
out
frstor
xchg
adc
jo
xlat
mov
inc
sub
mov
out
xchg
stos
inc
out
loopne
lods
push
insb
aad
in
adcl
inc
xlat
sbb
pop
insb
insb
xchg
xchg
xor
cmp
cmp
jge
cmp
movsb
jle
xor
repnz
cmp
push
dec
out
xchg
popf
inc
fists
cld
int3
imul
and
out
push
out
test
test
adc
insl
mov
dec
test
ret
out
out
inc
sbb
mov
and
test
sbb
sbb
out
add
mov
mov
mov
fsubl
mov
sbb
cmp
hlt
or
and
imul
imul
mov
loope
pop
adc
mov
cltd
push
mov
cmc
fwait
sti
fimuls
lret
jle
inc
lock
push
ficoms
je
xor
cmp
inc
pop
push
sbb
stc
les
repnz
test
repnz
pop
lock
pushf
dec
add
jge
cmpsb
push
sarb
inc
mov
cmc
mov
push
sub
cmp
aad
jns
mov
movsl
or
sub
cmp
into
leave
mov
aad
aas
mov
lods
push
fldcw
lods
jg
bound
and
sti
cmp
out
push
lods
enter
xchg
cmp
fsubl
pop
xchg
ss
mov
fnstcw
mov
outsl
stos
jmp
insl
xor
cld
sub
mov
int
mov
add
xor
stc
push
xchg
sub
sbb
aas
inc
xchg
mov
xchg
in
jns
lcall
mov
mov
push
adc
jp
mov
or
mov
lds
xchg
inc
or
mov
adc
divb
daa
clc
dec
in
lds
pusha
sbb
cmpb
or
lods
jmp
sbb
push
into
jne
jnp
cmp
dec
vmovss
imul
cmp
test
pop
cmp
nop
pop
xor
movsb
mov
jns
sub
rep
jmp
fldl
pop
ret
hlt
sub
xchg
push
int3
mov
mov
rolb
pop
loop
mov
inc
xchg
cwtl
fadds
out
subl
pop
jnp
imul
xchg
adc
mov
push
jp
xchg
mov
out
or
dec
mov
sbb
mov
inc
jmp
popf
jp
stc
lret
mov
outsl
test
ja
cmp
mov
call
or
sti
cmp
or
jnp
mov
adc
dec
test
push
cld
and
mov
loop
inc
push
mov
ret
or
rorb
cmp
insl
jp
lods
fldl
mov
mov
sbb
cs
sbbb
sub
dec
test
loop
inc
ljmp
push
ljmp
cld
or
ret
mov
lock
test
mov
fnsave
push
pop
mov
add
aam
lds
mov
or
rolb
add
into
lods
cmp
icebp
dec
cmc
andb
jae
in
les
add
sarb
adc
push
fldt
mov
test
stc
push
je
fcoml
fs
or
cmpb
inc
pushf
adc
call
jle
adc
push
lea
lret
addr16
push
jecxz
mov
lret
adc
dec
sbb
lcall
and
pop
or
jne
dec
xchg
jle
test
sbb
sbb
inc
dec
mov
arpl
inc
fisubl
test
rolb
inc
dec
fwait
or
xor
push
test
jecxz
ror
cs
cmc
sub
xchg
jl
enter
jge
in
scas
jb
movsl
pop
stos
xor
loope
xor
cwtl
lods
jg
dec
mov
jl
push
insl
aaa
inc
fisttpll
xchg
ss
mov
fmulp
enter
cmpsl
dec
je
sub
mov
lods
ljmp
mov
stc
das
or
mov
mov
loop
pop
push
or
pop
cmp
sti
test
insl
xchg
in
xchg
cwtl
test
scas
arpl
ret
adc
or
cli
xchg
cs
mov
cmpsb
popf
hlt
lds
sbb
inc
dec
test
dec
les
inc
sub
and
lret
dec
data16
fdivl
add
sti
cmpsb
sbb
idiv
cmp
rclb
mov
push
mov
outsb
pop
adc
test
cmpb
icebp
sbb
jae
int3
push
or
pop
lods
outsb
push
or
test
mov
aas
mov
xchg
fsts
fldt
je
mov
decb
xchg
xchg
clc
inc
mov
int
fldl
xor
cmpsl
shrl
insl
pushf
pop
sub
lods
jl
xchg
int
arpl
mov
enter
push
jp
fadds
inc
iret
sbb
jo
dec
or
push
lods
shr
aam
push
aas
mov
sub
cltd
pop
cmp
imul
add
aaa
inc
incb
nop
dec
out
divl
in
xchg
inc
xchg
sbbb
xor
jp
pushl
fwait
jmp
scas
dec
stc
or
jne
lcall
xchg
add
and
mov
xor
xlat
sbb
bound
and
imul
mov
adc
jbe
xor
jmp
mov
pop
aaa
add
or
sub
cs
loop
or
mov
ds
sbb
cld
jecxz
mov
fsts
fistps
inc
mov
push
mov
add
insl
push
aad
cmpsl
and
xchg
jle
xor
nop
mov
addr16
movsb
daa
push
stos
push
and
or
lea
mov
push
outsb
subb
inc
clc
ret
test
lds
adc
xor
push
movsb
mov
jmp
jmp
mov
adc
lahf
stos
aam
adc
aaa
stc
js
insl
adc
mov
es
dec
mov
mov
outsl
add
xchg
fwait
push
lea
push
std
ret
pusha
cmp
pop
xchg
pop
lret
mov
mov
lret
xchg
outsb
std
jo
jb
push
int3
and
decl
adc
out
das
push
stc
mov
mov
mov
loopne
xlat
and
push
xchg
lret
pop
cmp
dec
shrl
mov
mov
aaa
movsl
test
mov
xchg
sub
jb
je
add
push
es
test
mov
insl
push
test
or
test
sbb
daa
jne
pop
loop
lret
in
ret
sbb
out
sti
push
cwtl
shr
movsl
pop
mov
in
dec
xchg
pop
fucomp
fmuls
movsb
addr16
xor
cmp
aas
lea
mov
jg
popa
and
xchg
lret
cmc
pop
sbbl
popa
cs
adc
scas
push
outsl
inc
adc
stc
add
movsl
loopne
adc
inc
js
addl
insb
or
scas
hlt
adc
ds
imul
mov
adc
jp
pop
xchg
adc
cwtl
push
and
mov
xchg
pop
rcrb
ljmp
out
jp
ss
ds
push
adc
push
sub
fwait
sbb
lods
enter
sub
mov
inc
icebp
sbb
cmp
fcmovnbe
scas
xchg
or
icebp
enter
ljmp
sahf
and
das
rcrl
mov
cmc
cmp
and
adc
mov
cmp
xlat
cs
mov
jge
dec
add
aam
ja
rorb
jge
cmp
mov
insl
and
xchg
stos
stos
mov
int
icebp
movsl
insb
jle
nop
sahf
lods
aaa
lcall
out
adc
lds
jge
enter
jbe
scas
hlt
les
fldl
mov
mov
fsubrl
popf
outsl
aam
rcrb
loopne
sbb
mov
clc
arpl
test
xchg
fidivs
icebp
xchg
mov
es
and
xlat
push
push
pop
shl
scas
jmp
cmp
inc
push
pop
jno
dec
rol
inc
mov
add
mov
dec
cmc
pushf
mov
addb
push
sub
lods
out
sub
repz
jo
jb
std
cmpl
adc
xor
mov
data16
in
test
xchg
or
mov
or
adc
xchg
mov
adc
add
mov
fs
push
pop
mov
sti
pop
cmp
mov
push
movsb
mov
cmp
in
add
inc
mov
adc
xor
mov
adc
sub
xlat
mov
push
or
xchg
mov
dec
leavew
mov
out
out
rcl
dec
movsb
push
hlt
inc
pop
popw
mov
imul
cmp
outsl
push
jecxz
nop
pop
lds
or
pop
mov
sar
ljmp
lret
stos
xchg
adc
insl
lods
dec
xchg
ja
jp
mov
repnz
bound
push
xor
ja
fidivrs
jmp
push
push
pusha
sbbl
and
dec
and
cmpsl
mov
and
or
pop
nop
test
daa
xor
add
and
sub
in
mov
inc
mov
jp
int3
movsl
clc
andb
or
daa
outsl
push
test
lahf
imull
and
cmp
mulb
scas
xchg
stc
test
inc
les
mov
push
imul
out
mov
pop
cmpsl
sbb
sub
popf
je
outsb
push
sti
mov
cmp
inc
push
inc
fsubrs
cwtl
test
mov
into
mov
in
daa
outsb
cmp
stc
out
subb
mov
cli
lds
pop
xchg
sub
es
mov
cmpsb
pop
mov
rcrb
xlat
xor
bound
xchg
cltd
mov
cltd
gs
mov
fcmovnbe
push
mov
test
scas
cltd
stos
xor
jbe
inc
ret
fcoms
inc
adc
xchg
sbb
add
xlat
icebp
or
scas
dec
cmp
pushf
dec
mov
jge
sbb
lds
pop
rcrb
mov
frstor
adc
int
jle
gs
adc
and
xchg
sub
push
mov
xchg
sbb
enter
fcomps
dec
mov
jae
scas
andb
lahf
aad
daa
pushf
inc
scas
lds
jl
rolb
sbb
loope
xor
xorl
or
iret
push
cmpsb
inc
movsb
repnz
out
jecxz
leave
adc
inc
inc
dec
push
pop
cmp
pop
clc
sbb
pop
adc
rol
gs
mov
xlat
add
xchg
lcall
mov
js
sbb
cwtl
in
ljmp
xor
aad
xchg
push
pop
rol
fcom
cltd
mov
and
push
out
pop
je
cmp
lock
dec
mov
xor
out
outsl
mov
shll
out
push
pop
cmp
cmp
jbe
jb
loope
mov
mov
out
lock
lret
addr16
jnp
clc
out
xchg
add
xchg
cltd
stos
dec
mov
cmpb
fs
in
fnstsw
jg
jbe
sub
dec
sub
add
xchg
and
cwtl
jp
push
cltd
mov
add
adc
shrb
pop
leave
jmp
jbe
test
push
adc
inc
call
movsl
inc
ret
pop
jne
add
call
inc
lds
out
jecxz
push
cli
fwait
xor
add
xchg
pop
sbb
sub
lods
pop
outsb
push
jns
ja
shlb
lcall
mov
out
cmpsl
int
cwtl
push
mov
push
fwait
sbb
adc
inc
jmp
mov
adc
dec
cmpl
daa
jo
lock
fistpll
adc
aas
loop
imul
das
pop
push
insb
or
xchg
test
or
pop
push
mov
sahf
xor
adc
addr16
in
in
dec
ds
jo
divl
test
sbb
mov
shrl
cmpsl
loopne
pop
mov
pop
mov
std
push
cmp
xchg
and
cmp
test
dec
push
jne
pushl
rol
call
mov
xor
shl
scas
nop
dec
dec
mov
sbb
subb
insb
outsb
inc
fs
out
lods
add
std
add
pop
adcb
mov
push
cmpsl
jp
add
inc
repnz
jmp
dec
into
enter
outsl
pop
lds
cwtl
sub
mov
xor
mov
int3
mov
lret
mov
inc
fdivrs
cmp
adc
xchg
sti
mov
test
jnp
es
orb
pop
mov
jmp
popf
enter
sbb
stos
mov
xchg
jmp
mov
jmp
loope
leave
pop
xchg
dec
rcl
and
or
out
les
push
int3
outsb
xchg
push
xor
push
push
jne
add
ss
jae
dec
cmpsb
push
inc
and
fisubrs
subb
jnp
int
aad
jecxz
lahf
sbb
xchg
mov
bound
das
mov
sub
ret
ret
mov
add
or
imul
fstl
mov
lcall
fistpll
subb
xor
in
ffree
sub
jb
xchg
and
cltd
xchg
test
je
ja
sub
xchg
aas
cld
dec
xbegin
or
adc
jg
cmp
das
fdivrl
mov
mov
and
xchg
fwait
xchg
cmp
jnp
mov
sarl
sbbl
mov
nop
aas
outsl
daa
fwait
mov
stc
sarl
sbb
out
popa
xchg
or
lods
adc
in
add
jo
ret
jns
and
pop
out
cwtl
pop
repnz
out
in
xor
xchg
lahf
cs
inc
pop
out
ss
mov
lods
ja
ret
and
and
test
orl
test
push
inc
cmp
push
mov
vpsrlw
inc
add
jbe
cmc
mov
mov
push
leave
addr16
imul
mov
imul
lods
ds
dec
dec
xchg
out
icebp
pop
ljmp
adc
inc
popf
xor
cwtl
test
pop
sbb
shlb
stc
or
shrb
in
icebp
dec
sahf
push
into
fwait
ret
push
push
xor
in
mov
sub
loope
dec
out
cmc
xlat
jg
pop
cmp
idivl
push
repz
or
push
mov
mov
sbb
lret
push
cmp
test
out
xor
xor
xor
cmc
and
fucomip
or
mov
inc
pop
aaa
jg
clc
aas
lods
mov
mov
mov
pop
jae
add
leave
push
loope
xchg
es
fstpl
add
mulb
cmpsb
jae
andl
aas
rol
lea
fisubs
dec
jmp
cmp
jae
popa
inc
inc
shr
cwtl
cmc
fcmovu
dec
cld
bnd
mulb
bound
and
sub
sub
sub
std
and
xor
lods
inc
xor
dec
movsl
popf
mov
sub
mov
mov
loop
sahf
sarl
cmpsb
mov
add
jbe
hlt
xchg
fcomp
data16
sub
pop
dec
xor
and
and
aam
push
mov
mov
jo
inc
into
or
aad
jge
mov
or
aaa
jns
lds
pop
dec
dec
js
inc
je
stos
add
inc
sbb
jno
or
sbb
or
adc
shlb
arpl
stc
cmp
inc
sbb
mov
mov
clc
mov
es
pusha
decl
sbb
nop
mov
xor
js
jmp
dec
dec
mov
mov
movsb
xchg
xor
cmp
pop
out
iret
adc
push
jns
push
out
pop
xor
das
into
enter
mov
cmp
or
jae
push
in
dec
jmp
jl
and
mov
aad
cltd
jo
mov
pop
subb
and
repnz
adc
mov
outsb
add
loope
mov
mov
lret
stos
cmpsl
add
sub
push
add
push
imul
pusha
cmp
jnp
xlat
or
mov
clc
sahf
mov
call
or
cmp
sbb
and
push
aad
jnp
cltd
jnp
inc
iret
leave
in
sbb
movsl
stc
mov
fnstenv
cmp
push
int3
into
in
inc
mov
clc
dec
lea
mov
jg
inc
insl
sub
jp
or
and
pop
adc
imul
ja
push
hlt
pop
jmp
fadd
push
push
outsl
or
stc
xor
inc
adc
or
faddl
and
inc
test
pushf
das
subb
fistps
xchg
add
mov
addb
push
push
fs
lds
lock
int
and
pop
out
cmpsl
jns
lods
stos
lods
ja
fchs
fstps
aas
test
hlt
jnp
iret
jnp
mov
push
push
iret
xchg
mov
ja
xchg
sub
cwtl
lods
js
cmpsl
xor
in
or
inc
sarb
jg
out
cmp
push
push
and
inc
rcr
ljmp
es
loop
movsb
push
loopne
aaa
inc
addr16
sbb
into
cs
and
mov
adc
dec
sub
ljmp
lods
xor
test
mov
sarl
nop
pop
iret
fisttpl
pop
lods
cmp
or
test
sbb
dec
adc
fidivl
jne
bound
js
lret
test
movsl
inc
insb
hlt
push
jmp
mov
aaa
test
addr16
mov
insb
xchg
sub
mov
pop
pop
repnz
sub
lds
mov
push
sbb
inc
lret
lods
push
push
les
jae
movsb
mov
xchg
stos
inc
push
loope
cmpl
mov
add
fwait
int3
ljmp
in
bound
incl
jmp
cld
xor
in
push
mov
add
arpl
stos
je
and
add
pop
lret
cmp
ret
mov
outsb
je
lcall
cmpsb
jge
mov
add
cmp
test
add
cmpsb
and
int
pop
popa
in
aas
jg
test
gs
popf
adc
mov
mov
pop
and
fwait
sub
lock
loopne
push
faddp
pop
adc
push
ret
test
xlat
fstpl
mov
mov
xor
fcmovne
dec
aam
incb
scas
inc
pusha
bound
jbe
xlat
jle
fsts
fstpt
or
inc
sbb
test
adc
jb
adc
das
inc
and
mov
push
fldenv
lods
lds
scas
aad
pop
inc
mov
roll
cmp
lock
add
outsl
xchg
sub
mov
fsubrl
xlat
or
lahf
and
cmpsl
push
xchg
lds
imul
xchg
dec
inc
fidivrs
add
hlt
aam
mov
sub
jae
cltd
sahf
and
scas
shrl
testl
test
dec
mov
dec
mov
fwait
xor
ja
sub
push
cmp
ficoms
movsl
xchg
jecxz
lods
clc
mull
push
mov
popf
mov
push
jbe
jne
mov
and
in
leave
sbb
insl
push
inc
dec
aas
addb
fs
rcrb
out
scas
push
js
test
ja
xchg
test
and
xchg
fstl
add
xchg
or
jmp
xor
mov
xchg
repz
ljmp
lret
pop
and
out
lock
es
mov
out
mov
xor
out
jle
ds
gs
sahf
sub
mov
addr16
pop
add
xor
jp
lods
xchg
cmpsb
jne
mov
lret
jmp
cwtl
xor
mov
mov
outsb
je
mov
inc
je
cli
push
lret
pop
repnz
add
or
subb
inc
push
jbe
cmp
xchg
scas
mulb
out
in
mov
push
jge
sub
in
push
in
inc
bound
xor
ja
adc
sub
xchg
mov
movsl
fisubl
rcl
js
mov
loope
inc
popf
xor
and
mov
popf
js
fwait
and
ja
test
es
xchg
xor
push
lods
ja
adc
arpl
cmc
test
insl
mov
je
rcrb
pop
inc
aas
cmp
nop
dec
cmp
test
dec
mov
in
mov
jnp,pn
les
call
aaa
jbe
movsb
test
mov
in
clc
ljmp
rep
cld
inc
ljmp
jno
pushf
not
test
push
jne
lret
fs
xlat
repnz
dec
pop
cmpsl
adc
mov
inc
inc
xchg
cmp
es
stos
lods
mov
jns
ret
out
mov
inc
sub
repz
int3
sub
mov
jno
push
in
add
loopne
cmp
sahf
sbb
xchg
mulb
xor
xchg
nop
push
inc
stc
sbb
outsl
in
mov
call
sbb
ljmp
ljmp
outsl
mov
push
adc
pop
in
add
pop
out
pop
ret
loop
popf
xor
pop
sbbb
adc
das
cmp
sbb
cmc
mov
cmc
mov
cmp
mov
pop
cwtl
das
sbb
in
mov
inc
cli
jnp
push
dec
fnsave
mov
ret
repz
rcl
sub
sbb
imul
or
cmpsb
std
mov
enter
or
or
lret
xlat
inc
sahf
xchg
cmpsl
mov
in
fidivrl
pop
pop
push
xchg
pop
out
adc
sub
mov
test
jecxz
fdivl
add
pop
enter
inc
scas
sbb
ja
aaa
push
or
sub
ljmp
mov
nop
fnstenv
add
cwtl
outsl
inc
cmp
dec
sub
divb
aaa
sbb
or
push
add
mov
clc
call
dec
lret
lar
pop
call
or
fbld
push
divb
add
fs
ret
cs
or
mov
out
xchg
xchg
ja
or
cmpsb
mov
and
ret
mov
outsl
shr
add
inc
jne
cs
insl
jmp
in
and
dec
mov
dec
dec
and
scas
lods
inc
loope
int
dec
add
pop
jns
inc
in
cmpsl
bound
test
cltd
int
xchg
sub
inc
into
mov
jmp
mov
cmpsb
sahf
clc
lahf
int3
inc
fdivr
xor
andl
arpl
xchg
movb
shr
addb
pop
call
adc
repz
mov
jns
bound
adc
adcl
fistl
jbe
js
lods
and
std
xchg
aad
lret
popa
push
pop
sbb
jns
jg
sub
xor
lods
xchg
sub
cli
inc
fnsave
jo
pop
data16
and
add
inc
sub
rcl
push
push
das
bnd
jnp
imul
push
dec
or
mov
popf
sub
pop
cltd
test
setge
inc
mov
fs
sbb
dec
in
mov
inc
mov
insl
test
mov
repz
aaa
std
das
mov
xor
test
xchg
sbb
enter
fwait
mov
js
adc
sub
rorl
push
xlat
cmp
sub
fsub
inc
cmc
lds
imul
mov
pop
int3
xchg
sbb
stos
in
jecxz
push
int3
mov
jne
mov
insb
fucomp
loope
int3
mov
outsl
cmc
movsl
cli
adc
aam
clc
roll
cmp
lds
into
mulb
jb
adc
lds
cli
xchg
or
xor
or
daa
sahf
stos
pop
sub
test
inc
testb
xchg
adc
dec
mov
jg
fdivrs
adc
xchg
and
mov
sarl
rcrl
popa
sub
adc
or
mov
arpl
push
xchg
or
sbb
jecxz
ret
fisttps
add
mov
or
dec
jns
clc
out
mov
lods
push
je
add
push
xchg
out
scas
inc
xor
les
sbb
or
and
rolb
sub
repz
lahf
push
push
dec
cmp
repz
movd
movsl
xchg
decl
sub
xor
add
push
mov
push
aam
ror
mov
test
jb
add
or
inc
mov
insb
fs
dec
jg
mov
ja
push
int3
xchg
xchg
push
cmpsb
adc
sbb
dec
shll
xchg
bound
dec
jecxz
push
mov
push
shrl
lods
out
cmp
pop
adc
jg
outsl
mov
popf
pop
push
out
dec
xchg
icebp
js
and
das
ja
mov
sti
lock
jno
or
push
cmp
int3
arpl
repnz
call
cmc
inc
lock
cmc
sub
adc
stos
pop
inc
adc
or
pop
leave
test
out
mov
cmp
and
xor
outsb
mov
outsl
jns
add
and
js
push
cmpsl
inc
dec
rcrb
dec
xchg
or
xchg
xchg
inc
cmpb
sub
mov
add
je
pop
jnp
mov
adc
jecxz
push
cwtl
clc
push
jne
mov
mov
and
adc
adc
hlt
mov
push
jl
andb
cltd
cmpsb
cmp
out
sti
push
inc
cmp
pushf
mov
push
add
divl
pop
pushw
push
jle
movsb
int3
push
sub
pop
lcall
dec
je
mov
aad
jle
cmpsb
and
lods
or
fwait
sub
shlb
call
fcmovnb
shlb
stc
pusha
sbb
jne
in
clc
dec
cli
arpl
into
ljmp
mov
push
gs
loope
mov
shr
scas
sub
test
popl
out
shlb
into
icebp
mov
loopne
mov
popf
xchg
pop
mov
dec
xchg
sub
cmp
pop
in
mov
jae
lods
fsubrl
sub
leave
mul
and
in
add
ss
mov
jl
pushf
sarb
adc
jle
out
mov
and
cmpb
aam
ja
lcall
movsb
jo
and
xchg
adc
loop
xchg
jg
daa
insb
cmp
in
mov
jo
xchg
mov
ljmp
mov
jmp
in
aaa
fstps
xchg
ds
jle
ja
jae
or
les
and
in
repnz
test
mov
call
es
pop
stos
push
cmp
mov
lock
push
push
cmpsb
and
jns
mov
adc
mov
or
adc
or
mov
lret
xor
rorl
jp
jmp
mov
or
decb
lcall
clc
stos
test
jg
jb
push
call
pop
inc
hlt
xchg
xchg
mov
and
and
fdivs
imul
or
data16
adc
fldl2t
mov
popa
cmp
cmpsl
vminsd
shlb
mull
ret
pop
repnz
cmp
add
lea
adc
mov
mov
repnz
aam
dec
jb
roll
xchg
inc
push
out
or
jo
fidivl
movsl
cmp
sti
mov
add
pop
jne
lea
mov
jo
loopne
scas
stos
aad
jo
les
fsubrl
or
out
repnz
rcll
mov
rcrb
sbb
jge
jae
fisubrl
es
push
pop
push
sub
and
adc
cmc
outsl
loope
lods
dec
and
fsts
movsb
maxps
inc
arpl
inc
imul
mov
addl
mov
in
and
out
scas
dec
xchg
pop
jne
pop
testb
mov
jae
dec
jmp
or
mov
pop
jmp
lock
mov
sbb
imul
bound
jbe
imul
imul
xchg
gs
movsl
cmp
aad
loope
push
cmp
xchg
push
xlat
sub
jno
clc
jle
sahf
in
cmp
mov
dec
pop
popf
imul
pushf
mov
stos
nop
push
inc
ds
inc
and
out
cmp
xor
int3
les
fisttpll
and
stos
jo
je
or
loope
leave
mov
sbb
cltd
sub
xchg
out
mov
pop
das
mov
call
or
outsb
pop
jle
jge
lds
loopne
pop
gs
xchg
shrd
push
cmpsb
in
ret
mov
ljmp
popa
loope
cmp
dec
arpl
shl
xchg
mov
dec
cld
mov
cmpsb
scas
jnp
loope
fistpll
iret
and
in
or
dec
sbb
imul
jp
ds
push
popa
pop
mov
movsl
addr16
mov
mov
adc
inc
fidivrs
fstp
das
adc
pop
imul
mov
jae
mov
dec
in
lods
or
lcall
js
testb
lods
clc
aas
test
inc
mov
ret
fistpl
daa
or
mov
and
loopne
adc
subl
loope
in
mull
cmpsb
cmp
add
cld
and
sbb
mov
jbe
fcomi
push
mov
mov
mov
ss
cmpsl
ds
shll
lds
test
iret
xor
andnps
mov
lcall
mov
pop
push
sub
push
stos
lds
andl
sbb
mov
pop
jo
sub
pop
cmp
in
adc
scas
lock
loopne
pop
shrb
jp
popa
jo
lock
xchg
fsubrs
popl
jl
testb
insl
out
xchg
lods
jp
cmp
imul
subb
sub
rcl
push
enter
movsb
bound
xchg
xchg
mov
inc
push
fwait
pop
int
dec
loopne
fwait
pop
mov
inc
mov
lea
sbb
xchg
mov
xchg
pop
call
sbb
outsb
addr16
jno
push
ljmp
out
inc
jne
cmp
mov
nopl
cli
or
dec
fsubrp
loope
pop
jne
out
pop
stc
pop
sub
or
mov
sub
andl
push
mov
inc
pop
outsb
call
adc
das
sbb
sbb
cmp
cmp
lret
cmp
shrb
stc
cmp
addb
lea
and
pop
les
outsb
inc
nop
and
cmpsl
mov
imul
clc
lock
loope
dec
popa
shll
es
decl
iret
inc
subb
sbbl
cmp
aaa
push
nop
lahf
xor
es
stc
jbe
mov
jno
pop
inc
out
es
leave
mov
xchg
insl
mov
fisttps
loopne
jb
sub
sahf
mov
stc
nop
fnstsw
push
mov
cli
idiv
rcrl
repz
arpl
pop
in
ret
push
push
in
roll
imul
in
or
notl
or
jbe
xchg
sub
xchg
sub
fisubrl
cmp
adc
push
cmpsb
fmuls
icebp
aam
mov
sub
mov
scas
push
aad
in
pop
cmpsl
push
mov
xlat
test
test
cli
dec
icebp
pop
repnz
mov
into
jmp
and
les
movsb
js
or
jl
xor
sub
xrelease
push
xchg
dec
mov
sbb
pop
imul
out
lret
pushf
ss
aas
adc
mull
enter
sbb
in
icebp
mov
add
jle
repnz
into
sub
lods
fdivl
push
inc
lret
sub
out
or
lock
loope
les
inc
shll
push
out
sub
xor
xor
les
inc
ret
ret
cmp
pop
mov
xchg
lods
cwtl
cmp
mov
jecxz
insl
add
test
lods
ret
hlt
into
test
das
pop
mov
cmpsb
cs
mov
scas
xchg
inc
fadd
shrb
or
or
sbb
in
jg
aas
cmp
pop
addl
mov
push
or
enter
or
cmp
iret
loop
in
lods
inc
pop
js
push
mov
jmp
xchg
sub
pop
mov
aas
xor
pop
dec
or
shr
mov
fmull
add
int
aaa
rorb
fucom
ss
lods
and
xchg
jno
lods
mov
leave
call
out
adc
inc
jl
outsb
js
and
jg
insb
jle
mov
inc
lds
mov
or
jbe
push
fwait
adc
mov
loopne
xor
xor
sti
test
into
sbb
loopne
mov
inc
fwait
pusha
out
popa
jecxz
inc
icebp
mov
mov
inc
leave
sbbl
cmp
mov
and
xor
out
sub
pop
sub
mov
in
fbstp
and
inc
call
jae
je
testb
movsl
mov
hlt
jno
mov
ret
clc
bound
xchg
push
cmp
bound
mov
aaa
mov
in
xchg
and
sbb
inc
repz
jmp
dec
pop
cmc
dec
sbb
jl
mov
ret
mov
xor
pop
std
movsl
ds
xchg
pop
or
mov
fsts
loopne
add
push
mov
xchg
lcall
xor
sub
aaa
mov
daa
inc
sahf
loope
lods
push
fcoml
fdivrs
fdivs
fiadds
addl
dec
push
xchg
xor
xchg
cmc
push
push
cmp
jno
outsl
sti
or
sbb
mov
gs
jo
jmp
jle
xchg
pop
fwait
jge
or
xchg
stos
loop
and
aaa
shlb
ret
or
repnz
and
insb
movsl
cmp
sbb
movsl
push
push
ss
aas
movsb
hlt
add
and
jl
xor
enter
sub
int3
outsl
push
inc
ret
cmp
out
or
mov
pop
xor
jecxz
nop
gs
faddl
xchg
mov
mov
and
add
jns
or
adc
add
fisubrl
fistpl
call
jl
inc
cltd
pop
mov
and
ret
hlt
lret
mov
mov
in
insl
jge
out
test
mov
sub
iret
sbb
subb
jb
mov
shll
mov
es
push
cmpsl
cmpsb
mov
jg
out
repz
cmpsl
stos
in
mov
ret
in
pop
add
shrb
push
dec
mov
arpl
sti
imul
jle
ja
in
ljmp
addr16
mov
aad
in
and
fcompl
pushl
es
cmpsb
pop
adc
decl
pusha
ja
rorl
les
aam
push
leave
jecxz
add
lahf
jecxz
popl
outsb
mov
xor
leave
xchg
push
mov
rorl
pop
or
sbb
sbb
std
insl
inc
jno
out
lds
sub
or
sub
out
fisubs
push
push
leave
lahf
ret
xchg
sahf
test
add
movsb
pop
js
inc
jmp
mov
mov
shrb
lret
loopne
lahf
xchg
and
insb
repnz
dec
xor
inc
ljmp
int
lea
movsl
mov
nop
sbb
mov
subl
fwait
cmp
jmp
imul
ret
mov
sbb
sbb
mov
inc
sbb
adc
in
xor
jo
push
add
je
scas
pop
push
pop
jle
enter
prefetch
dec
imul
sbb
add
cmp
jns
rorb
jb
cld
test
out
xor
lcall
ss
xchg
scas
push
les
add
xor
dec
cld
mov
mov
icebp
mov
and
add
pop
jns
in
pushf
jg,pn
add
adc
and
xor
loopne
gs
cmp
adc
inc
inc
push
xor
out
outsl
out
pusha
fdivrs
xchg
in
clc
pushf
out
jo
flds
lcall
cwtl
pop
int3
xchg
daa
outsl
sahf
and
adc
imul
xor
movsb
mov
push
mov
ds
lea
arpl
flds
shll
les
xor
jbe
icebp
iret
xchg
push
scas
les
ja
out
pop
xchg
test
push
add
ss
and
in
test
adc
jns
xchg
fwait
mov
sbb
adc
inc
leave
test
insb
mov
push
popa
insl
sub
add
cltd
cmpsl
sbbb
fwait
jne
divl
out
push
sub
pop
and
and
faddl
or
outsb
jp
mov
int3
enter
dec
fs
jb
imul
insl
addr16
mov
cmpsb
inc
out
xchg
push
ss
fwait
dec
jecxz
arpl
xchg
sbb
push
cmp
in
mov
xchg
je,pt
cmp
ss
adc
repnz
hlt
mov
jnp
fistpll
fiadds
push
bound
jmp
into
fcomps
aaa
xlat
into
mov
fldcw
negl
jnp
push
movsl
mov
out
or
sbb
xchg
fwait
mov
sbb
enter
push
jnp
inc
enter
imul
sub
sar
cmc
mov
jg
insb
dec
add
rcr
lods
repz
stos
cwtl
lds
idivl
adc
mov
movsb
cmp
data16
fnstsw
dec
insb
ret
jae
sarl
sbb
or
mov
ficoms
int
add
xor
mov
inc
pop
xchg
push
popa
add
cmpsl
inc
jne
je
hlt
push
xchg
push
icebp
sub
stos
jle
in
fldenv
mov
adc
faddl
push
arpl
inc
pop
mov
cmpsb
xchg
sub
loopne
xchg
idivb
add
xchg
mov
xchg
scas
cmp
pusha
mov
xchg
lret
mov
jmp
jmp
popf
and
inc
and
mov
fsubr
fdivrl
sbb
inc
lret
sub
xchg
int
and
and
fbld
sbb
stc
call
ror
out
ret
jp
mov
jb
lods
lods
xchg
jnp
in
lds
repz
push
and
lds
dec
fistl
outsl
adcl
repz
inc
fs
xor
pop
fcomps
dec
jae
int
icebp
loopne
scas
adc
xchg
push
and
aad
adc
ret
jle
outsb
jl
sub
roll
scas
sahf
lock
push
cld
lods
push
or
adc
jmp
out
cltd
mov
jns
dec
pop
stos
cmpsl
out
mov
inc
cltd
cmp
ljmp
jno
mov
call
or
cmpsb
sbb
scas
inc
shrl
pop
add
ss
mov
push
adc
xchg
inc
sti
lret
lcall
xchg
add
data16
mov
roll
fdivrp
cmp
sub
adc
push
imul
fucomip
or
xor
mulb
cltd
sub
insb
outsb
xor
js
inc
arpl
insb
push
mov
cmp
sub
xor
sti
xchg
mov
shll
ja
cwtl
mov
pop
dec
out
pop
jmp
out
insl
jge
cmp
cmc
cmpsb
or
xlat
dec
sti
fwait
cmpsl
fisubrs
adc
movsl
jbe
out
inc
jb
std
cmovb
add
xor
cs
outsb
mov
add
pop
pop
loop
int
insb
sbb
arpl
outsb
clc
or
cmc
xchg
popa
es
jl
xchg
outsb
adc
add
scas
in
ret
dec
pop
xchg
dec
insl
das
rol
nop
sub
ds
dec
or
addr16
fsts
push
xchg
or
cli
mov
js
int
test
arpl
jle
mov
std
cmp
jmp
add
jnp
pushf
out
bound
in
cli
push
xchg
int
repnz
jbe
cmpsb
cld
mov
in
push
adc
xor
dec
loopne
fstp
dec
mov
mov
js
stos
push
mov
call
fldt
sub
daa
dec
jnp
popa
lock
stos
mov
aas
mov
adc
fsubrl
sahf
icebp
test
pusha
ret
jno
pop
lods
stc
mov
cmpsl
cwtl
pop
xchg
xor
mov
rorl
lret
icebp
mov
dec
cs
pusha
xor
dec
pop
push
jno
cmp
xchg
jne
orps
and
jge
fbld
aaa
mov
and
sbb
adc
push
xchg
dec
iretw
dec
fsubr
jnp
mov
movsb
xor
ljmp
pop
ja
jmp
jns
lret
jns
int3
push
xor
mov
push
ret
icebp
cmp
add
mov
jbe
pop
ret
jge
sbb
xor
sbb
mov
mov
pop
das
rol
jnp
add
mov
xor
icebp
lods
inc
rcrl
scas
xchg
sub
orb
sub
or
pop
movsb
enter
mov
loop
pop
mov
dec
adc
rcrb
pop
xchg
and
in
imul
mov
sub
push
rcrl
xchg
into
test
sbb
or
inc
es
addr16
inc
repnz
ret
mov
xor
xchg
or
testl
xchg
or
cmc
lods
fisttpl
loop
xor
mov
popf
jmp
iret
fwait
insl
in
sbb
jo
imul
lahf
adc
add
jge
inc
xor
icebp
dec
aaa
les
cmp
inc
cmpsb
imul
adc
jmp
clc
pop
out
cli
les
loopne
clc
aas
out
dec
pop
dec
or
mov
xor
sub
xor
aas
add
mov
aaa
loopne
jnp
cmp
sbb
aam
push
pop
add
push
and
sbb
jl
mov
stos
adc
test
sub
in
push
sub
adc
pop
rcrl
cltd
mov
daa
leave
stos
mov
pop
and
push
stos
sub
orl
fcompl
aad
or
inc
fsubr
xor
arpl
jge
mov
pop
dec
jne
and
hlt
mov
jae
sub
daa
cltd
inc
aas
jae
or
xchg
pop
hlt
push
test
sbb
movsl
fisubs
lds
aaa
mov
data16
iret
sbb
and
cmp
push
fists
add
push
lea
ficomps
idivl
aad
sbbl
in
pusha
pushf
xor
fwait
mov
push
adcb
inc
xchg
js
adc
cld
and
xor
mov
xchg
and
mov
sti
sbb
lret
pusha
dec
les
xor
sahf
push
dec
iret
sarl
cli
jns
sbb
stos
inc
push
mov
into
push
lods
outsl
jnp
leave
xchg
jmp
sti
inc
data16
jbe
cmp
cmpsl
xchg
pop
push
insb
and
jbe
iret
fcmovb
jecxz
fcmovnbe
hlt
mov
cmp
out
or
mov
sti
sti
rcl
sbb
std
xchg
out
cli
inc
movsl
mov
push
lea
mov
scas
in
push
inc
cs
out
xor
inc
cmpsl
cmpsb
dec
fstpl
xchg
stos
jbe
mov
test
adc
fwait
pop
xor
push
out
jbe
insl
mov
imul
cld
out
push
mov
adcb
jno
jecxz
repz
test
mov
mov
mov
and
mov
push
scas
leave
push
shl
dec
lock
test
iret
and
sarb
and
aaa
or
push
mul
inc
loopne
xchg
xor
xchg
in
icebp
mov
add
cmp
sub
add
mov
jnp
std
jl
pop
dec
pop
lret
inc
cli
xchg
hlt
in
push
pop
push
sbb
ja
out
inc
shlb
fcoml
mov
push
mov
jmp
out
fmuls
int
jg
lret
and
jo
inc
push
jmp
mov
add
call
push
pop
in
push
sub
sbbb
mov
scas
xchg
jbe
cmpsb
sbb
lock
data16
lahf
cmp
dec
sub
mov
mov
or
in
dec
xchg
fidivrl
adc
and
cmp
and
xor
jge
push
je
ret
inc
out
xor
pop
movb
jg
subb
xor
inc
pusha
mov
cmpsl
mov
mov
lahf
xor
add
inc
inc
int
sbb
and
inc
or
js
and
push
push
inc
loop
adc
xchg
push
mulb
lcall
mov
dec
sbb
mov
or
mov
mulb
cmc
mov
cmp
mov
dec
imul
cmp
xor
out
imul
jns
lret
cmpsl
xchg
enter
or
movsl
push
lea
xchg
sbb
fstl
mov
pop
ds
mov
cli
or
pusha
mov
test
sub
stos
lret
jmp
inc
push
xchg
cld
mov
fcmovb
inc
adc
jmp
xor
mov
add
loopne
xor
xlat
mov
idiv
aas
jp
in
and
incb
test
ret
add
and
sub
cmc
insl
and
jle
mov
popf
jnp
and
push
cs
jle
out
ja
loope
je
enter
xchg
insl
cli
lret
xlat
daa
push
add
and
jl
cmpb
pop
mov
fchs
pushl
cmp
ds
xor
sbb
out
xchg
lock
cmpsl
insl
adc
push
jbe
in
mov
mov
mov
outsb
loope
fidivrs
sbb
addb
mov
pop
or
inc
icebp
movsb
rolb
jecxz
stc
inc
or
dec
aas
test
jecxz
call
pusha
out
inc
jbe
and
arpl
lret
mov
les
iret
mov
mov
pop
mov
xchg
xchg
pushf
cltd
je
out
sbb
xchg
fcmovbe
push
mov
or
rcll
rol
xor
xor
push
pushf
mov
xchg
test
shl
shll
cmpsb
mov
mov
or
and
pop
mov
inc
pop
js
ds
xchg
or
test
cmp
jns
inc
aam
imul
sub
mov
fldcw
stos
sahf
lods
mov
mov
js
pop
jb
push
mov
sbb
and
inc
inc
cmp
or
gs
inc
pop
mov
jne
mov
pusha
addr16
or
push
leave
js
je
push
cs
and
jo
stc
and
out
mov
inc
test
stc
movsb
in
fsts
test
js
pop
pop
rcrb
into
iret
rcll
mov
adc
push
xchg
aas
jle
fildl
mov
push
sbb
lock
movsl
cmp
adc
dec
int3
imul
out
aaa
movl
mov
xor
insb
ja,pn
stos
popf
stc
sub
lea
push
jo
jbe
push
inc
cwtl
jns
inc
xor
push
or
adc
add
push
pop
or
mov
js
inc
mulb
imul
cs
stos
sbb
dec
dec
lds
jne
sbb
pusha
int3
inc
dec
pop
mov
cmc
or
sub
cmp
imul
mov
mov
std
cwtl
pop
and
sti
fisttps
xchg
mov
scas
xchg
xchg
mov
jno
cmp
sub
aaa
push
pop
push
pushf
mov
xchg
xor
out
cmp
mov
ficoml
rorb
jmp
xor
or
and
xchg
cmp
add
fistps
or
xlat
mov
aaa
jnp
fisubrs
ret
pop
xor
mov
xor
push
mov
imul
push
addr16
lock
dec
mov
fs
pop
cmpsb
test
subb
std
loopne
leave
imull
push
stc
stos
push
ret
mov
cmpb
outsl
inc
inc
rcrb
std
aad
jl
sub
dec
in
test
inc
or
cmp
mov
rclb
pop
mov
mov
jecxz
lret
jne
jmp
sbb
and
dec
fs
arpl
or
insl
push
jge
jmp
jecxz
fldl
shr
icebp
mov
mov
call
das
loop
dec
fwait
dec
pop
icebp
cmpb
sbb
fwait
and
in
pop
in
addr16
imul
jle
dec
adc
dec
pop
mov
aas
mov
faddp
insb
or
imul
xchg
ss
faddl
mov
fbld
push
ret
repz
inc
das
cs
lods
test
dec
pop
cs
aaa
jg
out
mov
sahf
xor
out
out
and
adc
popf
fs
dec
mov
xor
insl
test
shrw
mov
out
rcl
mov
es
adc
sub
sub
out
lods
inc
pop
inc
add
repz
aaa
into
dec
adc
cmpl
pop
outsb
dec
mov
shr
out
testl
and
test
and
dec
iret
pop
inc
fnsave
push
inc
cmp
pop
push
push
push
imul
jae
leave
xor
ss
jne
and
xchg
pop
mov
incl
lock
mov
xchg
push
lock
push
jne
shl
daa
cmp
je
sbb
or
xchg
jns
sub
or
das
adc
roll
push
xor
pop
fdivr
cmp
enter
test
jecxz
andl
mov
push
fldcw
aam
push
cltd
insb
cmpsb
in
adc
xorb
shrb
and
xor
fdivrp
out
jo
xchg
arpl
pushf
movsl
sbb
sub
pop
sbb
ds
inc
lahf
jmp
pushf
dec
jae
push
dec
lds
loope
jb
sahf
cmc
fldt
xchg
pop
jl
test
loope
push
pop
aaa
push
jecxz
negb
jmp
cmp
and
cvttss2si
arpl
xor
bound
xchg
jle
mov
gs
adc
dec
test
movsl
icebp
cmp
xchg
inc
dec
mov
lahf
push
adc
pop
xor
add
cmp
popf
jg
or
mov
movsb
push
outsl
out
inc
add
imul
imul
push
push
insb
shlb
mov
dec
sbb
and
idivl
dec
mov
mov
dec
movsl
popa
xor
stos
lcall
cmpsb
hlt
insl
mov
andl
clc
and
orl
and
xor
dec
scas
sub
rolb
nop
popa
daa
jl
mov
negb
ljmp
cmpsb
xorl
aad
loopne
xor
aad
rol
es
xchg
pop
arpl
fwait
std
rcrb
pop
adc
idivl
sbb
ret
icebp
sbb
pop
cmpb
stos
xchg
ljmp
xor
test
das
adc
add
pusha
stos
sarb
pop
mov
cmp
or
cmp
loopne
aaa
rorl
push
popf
xor
aam
push
push
mov
les
sbb
outsl
test
ret
xchg
dec
dec
mov
adc
cmp
xchg
pop
fnstcw
hlt
fsts
pop
cmp
filds
dec
mov
imul
dec
cmp
xor
jo
in
xor
jmp
xor
pop
jae
aad
pop
add
push
inc
int
lock
xchg
aad
jo
icebp
idivb
aam
inc
cmc
xor
mov
out
leave
sub
hlt
jnp
bswap
mov
jb
ss
fucomp
mov
push
mov
jno
inc
inc
pushf
and
jo
push
cmp
inc
mov
aam
or
jge
clc
xchg
and
lret
xchg
je
dec
add
jle
mov
mov
xchg
xchg
dec
out
and
ss
stos
xchg
cmp
out
xor
cmc
mov
fdivp
ljmp
enter
xchg
mov
iret
lcall
pop
add
mov
push
imul
mov
and
push
push
aas
add
sub
icebp
insb
fmul
ret
jle
inc
jecxz
bound
aad
arpl
cmc
pop
or
in
xor
test
add
mov
cmp
inc
jge
imul
cld
mov
inc
rcrl
cwtl
pusha
dec
fnstcw
adc
mov
inc
imul
xor
into
loope
pop
mov
mov
cmp
shl
pusha
ljmp
inc
xchg
stos
dec
inc
mov
add
shrl
inc
mov
jl
lcall
movsl
pop
jg
fdivrs
les
pop
subb
fwait
out
lcall
jbe
add
sarb
push
scas
inc
inc
lret
iret
jecxz
lock
pop
rcrl
xor
sbb
push
push
rcll
cmp
push
push
movsb
xor
cwtl
inc
in
jg
testb
pop
mov
or
cli
in
int
sub
mov
cmpsb
jg
add
mov
push
les
pushf
or
in
sub
inc
imul
jno
push
adc
push
jbe
pop
xchg
fldenv
pop
dec
add
push
repz
jle
arpl
mov
lods
xchg
mov
add
rcl
xchg
outsb
aad
scas
mov
loopne
fnsave
pop
divps
cmpsb
sub
jb
lods
leave
pop
pop
and
hlt
adc
jg
xor
stc
push
pushf
fildll
push
mov
xor
push
out
imull
mov
popf
or
pop
sbb
push
pop
adc
lea
cmp
ret
jecxz
mov
sbb
out
dec
xchg
jb
fidivrl
jmp
cmp
xor
scas
pop
inc
push
sub
xor
mov
push
cmpsl
faddl
or
adc
fistpl
inc
pop
push
mov
ret
aam
sbb
in
mov
lcall
push
mov
lds
lcall
stc
stc
sub
inc
jo
mov
out
pop
adc
cmp
into
scas
ja
stc
sub
std
cwtl
push
sar
nop
lods
xor
xor
xchg
mov
pop
sbb
mov
lahf
push
sbb
insl
clc
rolb
push
mov
and
xchg
adc
xor
mov
inc
in
sarl
bound
jecxz
adc
int
inc
xor
fdivr
gs
iret
lahf
xor
inc
or
loop
mov
pop
inc
negb
adc
sub
and
and
inc
mov
push
bound
cmp
xor
and
loope
xchg
pop
in
adc
scas
out
xor
in
dec
or
mov
sub
fdiv
bound
xchg
lods
sub
and
pop
mov
dec
test
clc
or
addr16
push
testl
xor
sbb
lret
sbb
mov
push
cli
add
movsb
dec
lret
inc
sbb
shll
das
pusha
dec
aaa
ljmp
test
sub
movl
push
sbb
pusha
imull
inc
jle
leave
mov
das
add
dec
test
std
or
repnz
fmulp
sahf
xchg
mov
cltd
hlt
lods
nop
daa
fidivs
cmp
scas
ljmp
pushf
sbb
sub
pop
lret
lret
add
call
lods
mov
adc
lds
fsubs
popf
and
xor
and
inc
push
adc
push
es
xor
xor
or
fcoml
std
lret
and
clc
mov
jle
jmp
hlt
dec
pop
jo
jo
push
ror
push
cmpb
test
cmc
mov
outsb
faddl
call
sbb
cmp
push
mov
test
and
sub
cmp
sarb
jp
mov
cmp
dec
fiaddl
or
mov
push
out
jno
pop
xchg
and
fistps
into
pop
and
sub
shll
hlt
mov
push
lds
pop
jo
cmp
repz
jg
jecxz
mov
sbb
jno
rcrl
test
inc
test
and
xorb
stos
in
cmpsb
icebp
adc
xchg
push
ss
cmp
iret
out
mov
xor
lods
mov
mov
pop
dec
data16
jno
decb
xor
es
mov
repnz
dec
es
sbb
out
ds
pop
repz
fs
cmp
pop
fsubrs
stc
adc
es
jp
test
mov
fidivs
hlt
pop
dec
rcll
inc
push
jp
mov
cmc
pop
or
jp
jnp
data16
in
pushf
pop
lret
xchg
dec
xchg
scas
arpl
subl
cltd
pop
sub
cmp
data16
jecxz
sub
mov
jl
inc
inc
jp
inc
cmp
inc
add
lret
icebp
ret
adc
pop
pop
push
jne
ret
push
sbb
sbb
jl
mov
add
and
syscall
adc
mov
or
pusha
ret
rcl
add
mov
xor
test
call
hlt
mov
ss
test
jle
enter
and
ljmp
js
mov
bound
out
add
arpl
cwtl
inc
push
cltd
xor
ds
shlb
test
push
jb
inc
ret
sbb
sub
pop
dec
data16
loopne
xchg
sub
pop
sbb
sbb
push
cwtl
dec
lahf
pop
dec
sahf
mov
cmp
repz
mov
fucomp
movsl
inc
sti
js
stos
jle
rcrl
ficoms
xor
scas
pop
cmp
cmp
cmpsl
push
mov
outsb
out
mov
testl
dec
in
dec
fwait
cli
push
fldenv
pop
test
xchg
ss
push
add
inc
std
and
lock
jno
pop
inc
stc
dec
jmp
xor
shll
stc
mov
outsl
leave
add
adc
les
daa
mov
fs
mov
sub
push
scas
pop
lods
int
xchg
mov
lods
repnz
ret
sub
pop
bound
stos
adc
sub
stos
mov
int3
jecxz
fdivrl
mov
and
jno
ss
jb
xchg
hlt
and
inc
pusha
push
mov
jle
mov
add
jg
and
dec
stos
jne
push
test
jmp
cltd
cld
mov
mov
adc
ret
xor
cmpsl
aaa
mov
pop
ds
and
sbb
pop
popa
vmread
mov
push
fwait
addl
dec
cltd
xchg
dec
add
test
fstp
in
add
lods
mov
push
roll
mov
pop
cmpsb
sbb
dec
nop
jl
sub
add
hlt
pop
pop
inc
std
pushf
les
lcall
push
mov
hlt
lds
jne
ds
out
adc
sub
rep
in
cmp
push
addr16
insb
or
lea
jo
dec
xor
lods
addr16
ss
xchg
nop
add
insb
mov
aam
jbe
js
mov
rcrb
push
mov
sbb
call
dec
or
mov
addl
sub
push
inc
std
sub
inc
in
leave
mov
push
jae
out
push
dec
jl
roll
insl
arpl
add
jns
outsb
add
pusha
in
adcl
jg
test
fwait
jns
dec
xchg
dec
iret
push
and
push
sub
mov
stos
mov
jl
int3
cmp
icebp
sbb
ret
jo
call
adc
daa
jmp
dec
sub
rcr
jmp
inc
or
and
cmp
sbb
es
or
mov
sbb
mov
iret
adcl
mov
dec
adc
clc
clc
adc
cmpsl
cmp
pop
call
idivl
sahf
clc
repnz
mov
mov
es
push
sbb
adc
sub
out
out
imulb
paddusb
outsb
adc
pop
cltd
stos
dec
add
movsl
das
adc
sub
cwtl
sbb
mov
mov
test
mov
adc
mov
sbb
clc
lahf
push
rorl
rol
and
or
push
in
and
sti
xlat
ret
pusha
add
push
or
lret
add
adc
sbb
mov
outsl
cmp
dec
push
pop
xor
fisubs
push
pop
mov
mov
ljmp
adc
mov
xor
pop
cmpsb
in
jg
or
sbb
std
iret
in
jnp
loope
shll
cmp
jl
rcrl
rorl
jbe
mov
sub
jb
pop
mov
sbb
shlb
out
sahf
xor
decb
movsb
push
addr16
xor
sbbl
sbb
adc
stos
mov
movsl
jle
pop
mov
bound
in
adc
jo
sub
xchg
inc
arpl
insb
les
insl
scas
mov
gs
movsb
cmp
stos
in
out
clc
mov
pop
hlt
mov
icebp
cmpl
fldl
pop
mov
rcrl
add
dec
das
xchg
or
dec
icebp
cmp
xchg
bound
mov
cmpsb
jb
xor
lret
mov
fbld
outsb
and
sbb
mov
mov
xchg
mov
cmp
sub
mov
inc
sub
lds
add
ret
add
fstps
adcb
das
pop
in
adc
push
fcoml
fldt
or
xor
leave
add
pusha
or
push
push
push
mov
outsl
xchg
xchg
pop
shl
std
push
mov
xor
int
sbb
loop
pushf
test
ds
mov
xchg
cmp
test
push
and
aad
ret
outsl
xor
dec
inc
push
in
hlt
cmp
pop
jno
lods
repz
sbb
test
daa
inc
cmp
ss
mov
xor
sub
push
icebp
imul
inc
or
hlt
sbb
scas
leave
pusha
cmp
mov
imul
in
xor
jb
jbe
jbe
aam
es
sub
imul
pop
cs
mov
lods
mov
test
ret
jb
les
adcl
clts
sahf
nop
mov
and
stos
push
mov
xchg
loop
xor
xor
pop
leave
subb
sub
mov
or
and
jmp
and
jo
addl
jmp
cmp
aaa
outsb
or
enter
rcrb
cs
jne
mov
call
fsubrl
hlt
pop
xchg
mov
les
in
jp
sbb
hlt
loope
mov
sbb
aaa
push
xchg
xor
ss
cs
mov
mov
icebp
mov
pusha
loopne
dec
lret
sub
out
add
ror
in
pusha
xor
dec
stos
jl
pop
sub
mov
leave
jecxz
imul
scas
stos
jnp
sub
cwtl
adc
mov
mulb
fistpl
xor
inc
xor
fs
int3
xchg
mov
push
pop
data16
movsb
mov
push
sbb
ds
jl
shl
xchg
jmp
sub
mov
jecxz
aas
adc
cmp
repz
and
movsl
sub
mov
cmp
ror
and
jne
sbb
inc
daa
and
cmpxchg
icebp
daa
or
les
cmp
xchg
adc
ds
bndldx
sahf
in
insl
xchg
pop
pop
es
push
aad
inc
add
cmp
mov
lret
pusha
jnp
sbb
divl
lahf
push
ljmp
jno
cmp
mov
imul
add
xchg
ret
pop
and
mov
in
jecxz
inc
jmp
lds
xor
jbe
adc
jmp
or
fcmovnu
aad
or
stos
adc
leave
out
fisubrl
ss
outsl
rcrl
nop
mov
push
scas
pop
or
adc
sahf
outsl
out
mov
sub
push
andl
mull
cmp
out
inc
repnz
cmpsb
cmpsl
jle
das
adc
pusha
or
lahf
jbe
icebp
sbb
and
sub
lods
inc
filds
sbb
mov
jl
in
jmp
in
in
ret
jge
jae
mov
data16
dec
js
xchg
test
push
add
insl
sub
pop
pop
call
or
aas
add
andb
dec
add
mov
pop
mov
cwtl
adc
lods
add
xor
add
sub
pop
sbb
sub
daa
ret
push
leave
jno
xor
mov
push
or
xchg
into
fs
in
std
rolb
xchg
xchg
adc
jg
push
into
imul
insb
rcrl
sbb
jnp
outsb
cmp
jo
pop
pop
dec
inc
fstpl
gs
shufps
out
stos
add
xchg
add
add
mov
adc
push
movsl
pop
ss
add
test
mov
shll
in
lcall
mov
inc
push
stos
xchg
xor
std
lods
adc
dec
mov
popa
xor
xor
jbe
cmp
lret
sub
sbb
push
fistl
sbb
jl
jno
adc
push
sar
inc
cwtl
xor
rcrb
or
push
push
xor
add
fidivs
push
jbe
fnstcw
pusha
dec
leave
cwtl
rclb
cmpsl
lock
push
jno
cmp
sarl
pushf
das
inc
shrb
lea
js
loop
push
leave
xlat
test
sub
test
cmpsb
sbb
in
loope
mov
lret
sub
cli
jne
les
mov
push
xchg
push
fsts
fxtract
scas
lods
sub
jg
lret
and
popf
mov
imul
mov
pushf
push
and
pop
repz
xchg
call
aam
fincstp
nop
sbb
in
sti
lods
xchg
jmp
imull
out
sbb
rorl
jl
loop
pop
icebp
lcall
stos
inc
push
xor
test
xor
movntps
ret
mov
dec
pop
das
mov
icebp
aas
add
js
push
add
push
and
imul
pop
int
xchg
cmpl
jns
xor
cmpsl
in
sarl
jge
mov
pop
mov
or
mov
rcrb
clc
and
arpl
repnz
repnz
adc
mov
out
jae
mov
fidivrs
push
es
mov
add
mov
xchg
mov
movb
jns
dec
test
bound
pop
sbb
pop
popl
cmp
int
negl
add
stc
adc
in
out
ret
cmp
xor
mov
inc
shlb
in
pop
mov
fistpl
push
sub
add
push
test
mov
rolb
lods
dec
jecxz
lret
sub
push
jle
mov
mov
nop
in
cmp
inc
cmp
lret
push
cmp
fbld
ds
xchg
push
sti
inc
dec
pushf
popa
and
mov
jne
add
bound
mov
pushf
sub
sbb
ss
mov
push
out
xchg
xor
jno
sub
andl
sub
push
fdivs
mov
icebp
inc
and
test
repz
push
lcall
faddp
shlb
lea
es
xchg
inc
cmp
popf
jnp
or
incl
mov
jo
clc
push
dec
pop
lret
push
lods
arpl
es
push
dec
lods
jmp
testl
push
and
aaa
dec
cld
sbb
sub
adc
add
jmp
ret
mov
jl
ret
ss
dec
bound
in
pop
or
gs
out
xchg
shrl
js
ljmp
fbstp
mov
cmp
stos
and
sub
adc
fimuls
xchg
jl
mov
lcall
mov
fwait
push
mov
xchg
mov
mov
imull
ja
adc
aam
insb
ror
lcall
and
xchg
pop
jne
add
dec
and
out
out
pusha
mov
test
scas
xchg
orl
push
or
jl
add
loop
and
mov
cltd
enter
mov
cld
outsl
shrb
ret
pop
dec
call
add
inc
or
test
into
test
fnstsw
inc
pop
add
jle
xchg
sub
adc
js
fnsave
pop
je
movsl
movsl
daa
sub
test
leave
xlat
repz
mov
sub
cld
push
popa
mov
pop
lods
mov
popa
lret
arpl
xchg
or
fisubl
loope
pop
dec
dec
loop
call
sbb
or
aad
in
and
stc
add
and
lcall
clc
ja
push
and
scas
mov
rorl
sbb
mov
cmpsl
jae
std
jo
pop
pop
loop
mov
shrl
push
nop
rol
stc
push
lods
sub
jg
enter
in
cmp
ss
inc
inc
adc
aas
add
xor
fstpt
cmp
mov
rclb
fstl
lcall
rcrb
in
inc
sbb
movl
daa
push
in
inc
add
cmpsb
jg
gs
sbb
mov
add
repnz
or
adc
jns
int
aaa
xchg
test
cmp
orb
or
mov
pop
lahf
mov
cmp
clc
int
pushf
insb
sub
xor
pop
mov
iret
jno
jne
fisubl
hlt
jnp
out
or
fstl
iret
jno
scas
mov
sbb
inc
cmp
sub
rcl
jb
cmp
lret
fdivrs
jb
rcrb
adc
js
outsb
push
jne
mov
inc
cmpsl
in
cmpb
xor
js
pop
lods
lods
xchg
or
iret
je
leave
sub
pushf
jge
mov
push
out
inc
ret
sub
mov
inc
mov
pushf
push
pop
add
ss
popf
addr16
sbb
aad
inc
nop
bound
insl
nop
xor
xlat
fisttpll
adc
out
and
sub
sub
adc
sbb
sbb
ss
adc
or
sbb
dec
lock
mov
lcall
popf
std
mov
pop
pop
out
push
mov
adc
mov
inc
adc
xchg
jne
cmp
out
xor
inc
xor
mov
lcall
les
cmp
add
push
std
cmp
rol
inc
add
ds
mov
mov
fwait
sbb
inc
jl
out
push
out
mov
push
or
aaa
pop
lods
shrb
push
out
js
mov
sub
scas
inc
or
mov
pop
inc
les
xor
pop
push
mov
cmp
movsl
lods
mov
sti
test
xor
inc
in
sbb
fldl
das
mov
ret
out
push
ljmp
fxch
pop
fbld
ret
xchg
mov
dec
cmp
and
xor
mov
rorb
sbb
adc
push
mov
xor
gs
xchg
pushf
lods
xor
sub
leave
decb
imul
test
sahf
hlt
stc
shlb
fs
int
out
std
pop
rcrl
add
push
sahf
test
mov
outsl
cld
stos
xlat
cmc
mov
mov
or
jle
sub
ret
xchg
mov
xlat
imul
cmp
repnz
ds
mov
pop
pop
int3
cmpsl
xchg
sub
jmp
xchg
adc
mov
dec
scas
lods
adc
push
inc
int
stc
stc
imul
popf
sbb
lods
push
movsl
repnz
pop
sub
dec
outsb
mov
cwtl
cmp
imul
cmpsb
cmp
ds
shlb
fcomps
int3
roll
mov
pop
in
std
pop
sub
push
fisttpll
cld
sub
loopne
ja
mov
fldl
pop
ret
popa
dec
mov
pop
jnp
inc
pop
or
inc
xor
push
jmp
sub
iret
push
out
adc
jecxz
vmaxpd
pop
outsl
jl
aad
dec
in
jno
in
sbb
push
movsl
cmp
sub
dec
flds
or
add
mov
dec
lock
xchg
out
sub
movsl
jmp
sbb
pop
dec
nop
daa
jnp
scas
inc
sub
mov
dec
int
outsl
pop
and
leave
or
std
jne
testl
xchg
hlt
out
stc
or
dec
cmp
out
dec
repnz
pop
sar
inc
std
jl
movsl
fsubrs
mov
out
insl
loope
fs
push
sub
loop
mov
pop
dec
xlat
cs
enter
js
sbb
jo
xor
jno
push
pop
loope
or
xchg
push
fwait
xor
lahf
daa
cmpsb
subl
xchg
lea
push
loop
in
in
pushf
adc
fucomi
pop
and
mov
stc
or
lea
jae
fimull
or
stc
or
sbb
adcb
test
and
mov
je
or
inc
inc
xchg
pop
jae
jbe
add
add
add
mov
jge
stc
nop
pop
loope
aam
lock
hlt
ds
push
cmc
mov
pop
cmpl
fucom
add
jmp
hlt
rol
jg
mov
cs
mov
insb
test
dec
shlb
jns
das
shrb
data16
and
push
insb
lret
jl
das
add
scas
jb
loope
xchg
xchg
or
or
jmp
aam
xor
mov
lret
xchg
xor
cmpsl
cmp
das
popa
mov
fsubrs
pop
insl
stc
mov
or
inc
push
jle
ret
mov
out
and
test
xor
fnsave
mov
repnz
popf
or
and
xchg
cmp
movsl
lods
movsb
aaa
mov
sbbb
movsb
movsb
sti
push
in
lcall
jmp
push
jno
cmpsl
ret
aas
xchg
or
lret
cmp
mov
cltd
cmp
jmp
lss
mov
insl
fdivrl
pop
mov
cwtl
das
xchg
out
or
lahf
cmp
push
dec
sarl
mov
enter
fisubrl
xchg
sub
push
sub
mull
cwtl
call
inc
sbb
arpl
js
xchg
mov
pop
jle
movsb
std
pop
popf
mov
or
scas
bound
es
add
mov
shl
fistl
dec
cmp
pop
jecxz
mov
test
lods
inc
enter
and
mov
adc
sbb
xlat
out
test
push
jg
hlt
push
mov
jno
cmp
mov
leave
int
in
daa
maxps
mov
lret
fldt
mov
icebp
aam
je
cmp
hlt
movsl
cmp
sbb
addr16
leave
outsl
shl
mov
aam
shlb
and
cmpsb
add
cwtl
lods
mov
sahf
jnp
daa
pop
ljmp
adc
scas
add
adc
xor
fucomp
leave
xchg
hlt
gs
repnz
mov
mov
dec
insb
dec
aad
lock
in
out
jno
push
adc
or
cld
jns
hlt
pop
cwtl
cs
xor
movsb
push
push
fdivr
push
cmp
xchg
or
jg
dec
in
mov
inc
and
fs
mov
adc
xchg
xor
leave
pop
or
pop
inc
clc
cmpsl
cli
lods
fistpl
lahf
js
sti
stos
movsl
pop
cmp
ja
cmp
es
lcall
pop
and
mov
aam
pop
xchg
mov
jb
push
jno
icebp
push
inc
out
nop
test
mov
xorb
ja
push
sbb
inc
cmp
lret
stos
push
subb
sti
sub
das
stos
xchg
fidivs
push
clc
jle,pt
pop
cs
roll
rcrb
inc
dec
and
mov
dec
push
cmpsb
push
jae
mov
mov
das
mov
in
insl
sbb
push
int3
lret
or
addr16
ret
lods
or
loope
repz
and
leave
es
pusha
mov
inc
inc
stos
add
inc
sahf
mov
cmp
push
sahf
add
push
insl
hlt
es
pop
mov
sbb
sti
xchg
mov
rolb
stos
jmp
int3
pop
push
xor
lods
or
dec
sub
repz
insl
jnp
dec
adc
xchg
repnz
push
scas
xchg
add
inc
xor
or
fs
pop
jno
or
test
daa
rcl
jns
adc
fstpl
push
mov
xchg
sarl
imul
shlb
push
jmp
test
repz
xchg
adc
jbe
leave
sub
dec
mov
and
repnz
add
insl
pop
icebp
fcmovnu
out
or
js
sub
sahf
dec
xchg
or
out
sbbb
enter
scas
and
add
lcall
insb
call
mov
iret
in
pusha
ds
xlat
and
lea
push
ss
mov
loopne
sub
imul
popf
xchg
jg
mov
pop
fwait
mov
mov
inc
imul
pop
mov
flds
mov
jle
in
shrl
xlat
sbb
pop
mov
das
daa
outsl
add
mov
push
or
dec
push
mov
repz
ret
inc
adc
mov
jne
cmpsl
jns
lcall
das
loope
dec
adc
out
cld
xchg
xor
lahf
daa
js
xchg
lahf
shrb
add
jns
int3
and
cmpsl
ret
pop
subb
add
dec
test
scas
jo
sbb
adc
sub
scas
lahf
xchg
lahf
or
cmp
fcmovb
cltd
aas
jp
add
aas
lret
mov
call
mov
fcomp
xchg
xchg
mov
push
into
xchg
jnp
ret
lds
mov
mov
lods
daa
cmp
inc
mov
rolb
sbb
xlat
xrelease
in
and
jo
mov
sub
xchg
bound
lret
je
stos
push
cmp
loop
gs
je
sub
int3
pop
mov
mov
inc
lret
mov
or
mov
out
jl
mov
sbb
xchg
or
push
mulb
js
out
mov
and
mov
aam
xchg
lods
xchg
fwait
add
mov
mov
jl
or
arpl
nop
cmp
rcll
cmp
mov
mov
xchg
pop
adc
mov
mov
xchg
pop
insb
pop
sbb
imul
push
psrlw
lds
negl
push
aas
mov
dec
xor
sarl
jge
sub
hlt
mov
scas
inc
or
mov
mov
adcl
fucomip
sbb
mov
scas
xor
call
test
inc
ds
stc
clc
in
lahf
sbb
out
mov
fbstp
enter
sub
push
repnz
cmc
adc
mov
pop
inc
add
or
sub
fldcw
pop
dec
jno
into
sub
sbb
test
orb
xor
xchg
mov
aad
cld
push
mull
jge
adc
jno
sbb
pop
sahf
push
iret
push
insl
sbb
rorb
icebp
xchg
iret
loope
push
stos
mov
xchg
lds
out
sbb
scas
mov
push
pop
ficompl
imul
cltd
lock
adc
ds
addb
push
sub
adc
jb
movsl
cmp
adc
stos
xchg
dec
das
mov
setnp
xor
cmp
mov
dec
repnz
cmp
xchg
add
fucomip
mov
cmp
insl
outsl
inc
shrb
adc
int3
and
and
stos
adc
movsl
addr16
cs
pusha
cmpsl
divb
mov
xchg
dec
stc
decb
aam
cmpsb
dec
jno
inc
rcl
add
es
test
or
in
dec
push
fwait
or
call
cs
inc
lods
out
inc
pop
imul
pop
sti
pop
or
sub
xchg
pop
or
xor
arpl
outsb
idivb
cs
pop
aam
cmp
add
clc
out
pop
sbb
pop
clc
sahf
or
movsb
icebp
std
mov
loopne
push
pop
cmpsb
js
aaa
adc
inc
lcall
xorb
pop
enter
lods
mov
pushf
jnp
lods
cmp
pop
and
sub
mov
lea
push
test
add
jg
les
sbb
rcr
cmp
xlat
xchg
or
jae
mov
das
mov
pop
std
jge
mov
imul
push
gs
stos
inc
pop
test
push
dec
pop
add
arpl
sub
sub
jge
jp
and
pop
ffreep
sbb
cmp
rorl
pop
fsubr
stos
push
jno
leave
fdivrs
inc
js
fcmovnb
cmpsb
adc
aad
mov
test
sbb
push
shrb
sbb
push
xor
cli
adcl
push
add
aad
mov
daa
or
fwait
pop
lret
pusha
testl
jne
cmp
or
dec
movsb
int3
xor
pushf
out
ljmp
cmp
and
xor
mov
lds
cmp
in
or
xchg
xchg
scas
enter
xchg
pop
in
push
fimuls
std
and
add
sbbl
cmp
call
data16
scas
xor
sahf
insl
inc
or
jne
out
in
test
push
cmpsb
mov
inc
ss
dec
mov
lret
and
mov
es
fldenv
jp
cwtl
push
add
inc
sub
or
cmp
xor
ss
in
gs
nop
lcall
xchg
sbb
xchg
imul
in
lea
repnz
jle
sbb
stos
fcomps
popa
outsl
scas
mov
add
sarl
pop
jo
dec
mov
in
and
cs
inc
mov
lret
push
in
cwtl
scas
sbb
pop
ja
dec
pop
rcr
mov
sarl
xor
cmp
shrl
popa
insb
pop
insl
outsb
test
scas
jg
rolb
ss
pop
cli
mov
mov
cvtdq2ps
fildll
adc
js
cmp
fiadds
hlt
mov
ret
mov
jne
in
mov
add
jno
sbb
jae
mov
pop
jne
shlb
int3
xchg
outsl
int
cmp
jae
push
sub
inc
or
adc
adc
inc
push
pop
xor
scas
lret
into
sbb
movsb
sub
mov
cmp
ret
jb
int
push
sbb
sbb
mov
jg
fimuls
out
pushl
cmovg
add
jl
insb
es
cltd
or
repnz
mov
and
xor
fsubrl
mov
dec
mov
mov
fcmovb
xchg
shll
mov
cld
push
xchg
sarl
loopne
pop
cmpsb
icebp
xchg
mull
xchg
mov
in
insl
or
cmp
fwait
jp
mov
dec
or
sub
aaa
insl
dec
jecxz
sub
inc
stos
mov
fstpl
shlb
test
and
xor
mov
shll
lock
dec
jge
hlt
push
mov
pop
aad
neg
pop
daa
push
or
add
nop
add
inc
adc
fldl
outsb
ret
fmull
dec
mov
paddq
and
bound
fsubs
adc
mov
xchg
add
adc
cmpsl
xchg
jle
and
inc
and
pop
xlat
cmp
jno
xor
ret
mov
andl
inc
push
inc
cmp
cmpsl
mov
cmp
add
jne
lock
xlat
testl
and
scas
sbb
mov
psrad
cmp
mov
int3
inc
cwtd
aaa
dec
push
push
loopne
pop
shrb
dec
ljmp
jno
cmp
mov
adc
pop
mov
test
and
fwait
ds
sbb
and
cmc
outsb
mov
rolb
push
push
cmp
outsb
repnz
stos
lcall
mov
icebp
movsl
test
and
or
jmp
xchg
pop
inc
ss
hlt
sub
outsl
inc
inc
popf
sbb
mov
fimuls
add
std
xor
int
ss
mov
iret
packuswb
xchg
mov
dec
mov
or
scas
inc
inc
mov
sub
data16
inc
pop
xchg
mov
pop
pop
ds
push
jnp
push
rcl
imul
insb
das
mov
dec
dec
int
push
je
fcmovnbe
push
je
mov
pop
dec
ficoms
lods
leave
jle
jge
xor
push
fimuls
and
ret
dec
popa
scas
jns
sbb
or
icebp
pop
push
incb
jge
sbb
jns
int3
out
sub
repnz
inc
sbb
dec
and
repz
hlt
inc
out
jle
cli
push
inc
lahf
jne
sahf
in
add
adc
jae
sub
popa
jg
pop
mov
mov
xchg
jno
mov
add
pop
xchg
cmp
xlat
and
ret
sarb
ret
or
push
imul
dec
xor
cwtl
dec
sbbl
xchg
scas
mov
in
fistps
in
pop
insl
add
arpl
mov
hlt
aas
in
and
jo
or
outsb
dec
sti
push
sbb
insb
cmc
mov
lock
mov
scas
mov
lcall
xor
mov
mov
xchg
mov
jl
mov
sub
arpl
cld
or
clc
push
mov
or
sahf
mov
xchg
bound
daa
clc
fcmovnb
xor
dec
and
and
adc
and
pop
cli
testb
lcall
and
imul
inc
insb
add
inc
loop
test
pusha
ss
xlat
fwait
pop
mov
loopne
mov
fdivs
inc
data16
dec
in
out
ja
and
adc
cmp
mov
ficoml
scas
mov
gs
xchg
adc
scas
adc
push
out
idivl
jbe
dec
mov
xchg
add
fwait
push
cmp
jp
arpl
xchg
lods
mov
insb
pop
rcrb
imul
cs
hlt
jno
fnstcw
push
push
je
movsl
sub
dec
test
cwtl
out
push
jmp
inc
daa
jo
cmpsb
cmp
fstpl
jne
push
andl
adc
add
push
jae
inc
ret
dec
mov
xor
mov
adc
add
out
scas
lds
in
gs
inc
fsubrl
ljmp
jmp
xchg
lods
xchg
out
aad
pushf
mov
push
add
ja
pop
adc
xor
test
cmpsl
dec
loope
stc
mov
shrl
add
inc
mov
lds
mov
fnstsw
arpl
test
cmpsl
idivb
cmp
stos
imul
outsb
in
lods
js
xlat
lods
lds
pushf
repz
fisubrs
test
insl
cltd
mov
dec
dec
sub
pop
dec
mov
push
imul
movsb
stos
sbb
icebp
bnd
sti
add
sbb
bound
subb
and
push
push
test
push
mov
push
popa
fidivrl
or
imul
adc
movsb
inc
movsb
xor
decl
int3
add
bound
and
mov
sbb
data16
xchg
data16
mov
adc
ja
xorl
cmp
inc
push
or
outsl
outsl
sub
mov
lret
cmp
mov
inc
mov
mov
shll
popa
es
addl
mov
jg
and
cmp
je
mov
pop
loopne
inc
arpl
cmp
add
jo
pop
test
ss
mov
cmp
fwait
mov
xchg
cs
fs
xlat
sbb
mov
cmp
es
inc
xchg
mov
cltd
lods
jg
lods
test
icebp
push
cmpsb
and
xor
es
test
ret
jae
das
cltd
mov
repnz
jg
add
add
sbb
xor
fsubrl
std
xchg
mov
inc
std
cmpsb
scas
mov
pop
fwait
insb
in
call
loop
xchg
sbb
add
in
ljmp
lahf
ret
push
jno
rorb
hlt
mov
loope
in
hlt
loopne
cmc
sbb
jns
repnz
insl
mov
addb
cmp
lret
insl
pop
sbb
insl
aam
aad
cmp
insb
scas
loop
adc
push
stos
mov
mov
es
int
test
call
fimull
xor
icebp
insl
push
repz
adc
fwait
cmp
les
add
pop
out
fdivrl
mov
cmpsl
mov
or
mov
sbb
jle
stc
xor
enter
std
cmovno
xchg
push
push
mov
in
ds
sahf
cmp
mov
xor
mov
dec
push
rcrl
add
xlat
in
popa
ss
or
cs
push
mov
pop
sti
jp
mov
cltd
loop
push
mov
push
sahf
lods
pop
neg
mov
add
pop
outsb
mov
adc
out
push
shll
xor
adc
dec
xlat
jnp
into
mov
testb
jae
add
xor
iret
push
sub
adc
scas
stos
cs
mov
jge
aaa
insl
jb
pop
push
dec
mov
sub
dec
and
ds
jne
cmpsb
sub
scas
and
push
pusha
mov
bound
inc
aam
cli
movsl
xchg
inc
sbb
dec
xor
jge
pop
and
dec
pop
adc
jecxz
xor
shlb
sub
xor
divb
push
out
cmp
dec
xchg
cltd
mov
pop
insl
sbb
cli
stc
std
mov
adc
push
or
ss
sub
int3
outsb
mov
push
je
imul
adc
xchg
rolb
test
mov
and
mov
repnz
and
fwait
scas
and
std
dec
ret
push
xchg
push
inc
in
xchg
fsubp
jns
adc
inc
and
inc
fsubs
inc
pop
mov
test
aad
lret
out
hlt
jmp
dec
dec
fnstcw
pop
popa
orl
dec
push
int3
mov
and
les
adc
out
std
inc
xchg
cmp
jmp
iret
sub
mov
xchg
inc
mov
sbb
hlt
mov
sub
iret
stc
pop
cli
call
or
fisttpl
sti
test
insb
cmp
pop
jno
stos
out
outsb
add
xor
mov
mov
cmpsl
add
stc
nop
xor
pop
scas
inc
cmpb
js
aaa
into
cltd
shl
divl
mov
adc
sbb
pop
xchg
pop
jne
lods
shlb
and
ret
scas
out
jl
push
or
test
xchg
xchg
sub
push
repz
cli
movsl
dec
add
int
loop
nop
sbb
cld
loopne
jg
scas
hlt
sbbl
jb
pop
scas
lret
or
jp
js
sahf
cmpsb
dec
dec
mov
fsubrp
and
sbb
lods
xorb
jmp
push
in
imul
mov
in
jo
adc
ds
pop
sbb
xchg
mov
fsubr
add
jmp
lds
jo
mov
and
fs
out
inc
xchg
in
and
mov
lret
and
add
pop
ret
adc
push
scas
je
sub
lods
mov
mov
jl
dec
lret
lcall
jo,pt
enter
cmp
push
aad
jl
dec
push
insb
adc
pop
mov
addr16
jl
inc
fldcw
or
xlat
jmp
sbb
push
sahf
push
imul
mov
xor
xchg
cmp
das
jnp
imul
pop
pop
or
or
jb
cmp
rcl
icebp
mov
or
dec
addr16
push
fsubrp
mulb
and
out
or
mov
pop
mov
mov
into
loop
xchg
add
out
ret
popf
pop
arpl
aad
outsb
shrl
in
fcompl
or
jno
adc
andb
fldl
jmp
loopne
mov
jne
ja
inc
in
test
xlat
adc
mov
pop
mov
call
mov
addr16
push
jge
idivb
mov
neg
enter
sub
mov
test
divl
movsl
push
jno
ret
sub
cmc
mov
sub
rorb
insl
pop
sti
pushf
fistps
jno
jge
ljmp
ds
cmp
leave
cmp
mov
fisubs
add
mov
fnstsw
mov
insb
shrl
aas
push
aas
es
xor
arpl
xchg
mov
nop
out
cmpsl
lods
pop
pop
or
out
arpl
mov
orl
enter
lea
inc
flds
dec
bound
enter
xor
pop
ds
mov
test
mov
stos
mov
enter
mov
push
bound
sbb
jae
xor
lcall
lahf
stos
fadd
int3
dec
and
and
stc
or
fs
int3
imul
jecxz
or
sahf
es
gs
xchg
pusha
xor
jne
lods
shr
jge
pop
iret
mov
jbe
out
repnz
loopne
movsb
push
dec
fidivrs
inc
loop
movsb
mov
rcrl
sub
push
mov
pop
pop
iret
fdivrl
test
das
push
cltd
test
dec
je
mov
loope
jae
cmp
mov
xchg
adc
or
mov
cltd
psrlw
les
insb
into
loop
push
data16
or
outsb
xchg
inc
pusha
push
mov
pop
jg
xchg
jae
xchg
mov
scas
xchg
orl
dec
inc
cmp
sub
aad
pop
leave
and
xlat
in
roll
cltd
dec
adc
call
nop
icebp
xor
sbb
sbb
add
scas
outsl
adc
xlat
cmp
push
repnz
lret
loope
filds
push
mov
xor
ss
sub
inc
int
or
pop
decb
and
ret
stc
imul
out
in
dec
xor
mov
pop
test
inc
daa
inc
out
add
xor
inc
mov
push
movsb
lea
leave
xor
ds
in
cmc
adc
or
xchg
into
sahf
sub
push
iret
lods
mov
sub
push
popa
testl
dec
push
sub
orb
test
ficompl
roll
jp
jg
mov
ret
repnz
es
inc
lods
in
push
fdivs
sbb
aas
into
std
shll
xchg
push
in
movl
jae
inc
and
sbb
arpl
ds
mov
push
sahf
jmp
mov
push
mov
ret
aam
stos
mov
or
mov
bound
mov
icebp
icebp
mov
mov
jo
jns
insl
inc
mov
sbb
jle
add
pop
dec
push
add
ljmp
jnp
addr16
adc
enter
popf
push
jo
nop
das
jo,pn
xlat
xchg
xchg
sub
pop
add
fcomip
cmp
and
jecxz
scas
in
ret
adc
mov
rorl
sub
xchg
add
bound
orl
in
call
mov
scas
out
dec
scas
loop
push
mov
fnstsw
fs
iret
pop
insl
add
sbb
or
add
mov
outsl
popf
addr16
push
sbb
and
out
pop
in
popl
cmp
cmpsb
xchg
bound
jge
jb
ds
sub
jl
aaa
lds
subb
sub
fstps
sarb
fcomps
mov
faddl
or
arpl
fnstcw
xor
insb
xchg
mov
cmpsl
ret
cmp
inc
xchg
dec
adc
push
cmc
fidivs
xchg
out
jmp
loopne
mov
xor
rcrb
add
pop
in
push
and
mov
lds
xor
mov
dec
jecxz
pusha
mov
lods
mov
cld
cmpsb
shlb
mov
sbbl
lods
scas
mov
adc
ss
daa
jmp
pop
jbe
mov
and
push
mov
test
push
sahf
lds
sysret
stc
cmp
out
sbb
sub
mov
dec
in
scas
loop
jl
iret
pop
pop
xchg
aaa
mov
push
push
call
cmp
pop
repz
decb
stc
push
and
cmp
push
data16
ficoms
stos
cmpsb
rorl
sub
mov
fcomps
mov
test
cmp
xor
xchg
les
movsl
pop
and
mov
push
push
add
ret
mov
jle
pop
dec
out
cltd
fucomp
cli
popf
adc
inc
notl
xchg
xor
imul
push
mov
ljmp
mov
mov
fadd
out
mov
aam
clc
jmp
dec
jnp
jne
jl
jno
addb
dec
inc
pop
mov
jbe
mov
shll
push
loope
out
mov
fisttpll
jns
in
cmpsl
dec
pushf
out
push
pop
jno
jbe
testl
push
mov
sbb
pop
sbb
push
xchg
mov
jno
xchg
mov
pop
rcll
in
and
inc
add
adc
in
mov
imul
push
test
xor
testb
and
jno
test
rclb
jp
repz
mov
jge
push
hlt
cmp
mov
adc
shll
mov
pop
test
or
mov
fsubr
jecxz
cwtl
cmp
std
cmpsl
ljmp
jno
or
gs
cmp
add
add
xchg
lret
and
push
in
add
add
fldcw
loop
fsts
cmp
pop
mov
std
cltd
sub
push
stos
xor
pop
cwtl
inc
mov
jmp
pop
lods
ja
test
iret
fidivrs
push
pop
into
cltd
int
jno
cs
cmpsl
and
cmp
repz
xchg
pop
call
gs
bound
inc
aad
aas
xor
inc
cmp
adc
mov
js
and
add
xlat
pop
add
sub
pop
xor
jge
inc
pop
mov
add
add
jo
in
mov
dec
or
ret
enter
data16
stos
and
inc
mov
aad
cmp
add
shll
cmpsl
jne
repz
fisttpll
xor
or
push
xor
xchg
icebp
pop
lret
push
imulb
aaa
rolb
lret
stos
and
test
inc
adc
push
setnp
cmp
pop
insl
sub
mov
sub
xchg
mov
mov
negl
aad
dec
imul
mov
mov
pop
or
mov
pusha
repnz
sbb
jbe
xchg
add
jl
jg
push
or
cmp
aad
nop
cmp
dec
outsl
add
out
mov
mov
lods
xchg
xor
pusha
jmp
cmp
xlat
add
and
fnstcw
outsl
addr16
mov
or
mov
xchg
add
jnp
mov
jmp
mov
sbb
inc
and
push
sti
mov
push
push
fidivs
add
jl
les
stos
pop
ret
ja
pop
fcomip
push
fsubrp
cmp
test
xchg
jg
and
scas
sbb
mov
pop
sub
cwtl
or
inc
imul
imul
mov
shl
ret
lret
rolb
arpl
inc
pushl
gs
mov
out
dec
jae
ja
stc
test
mov
inc
mov
adc
xchg
cmp
es
sub
lret
sahf
clc
inc
rcll
fcoml
mov
clc
mov
cwtl
mov
aad
lods
inc
sub
test
stos
into
scas
in
pop
sbb
cmp
pop
cmp
jmp
loop
loop
inc
jmp
mov
test
sbb
aaa
test
fs
xor
insb
xchg
add
xchg
mov
and
les
testb
dec
out
mov
sub
mov
dec
test
mov
loope
pop
push
fcmovbe
es
sub
fldcw
fisubrl
xor
in
pusha
cmc
adc
add
repz
in
and
xchg
or
lods
mov
adc
and
shrb
pop
push
mov
cmp
loope
push
push
je
and
lods
icebp
jle
xor
mov
dec
lahf
push
dec
pop
dec
fisttps
sbb
dec
repnz
inc
add
stc
pop
repz
cmpsb
xchg
mov
cmpsl
stc
fisubrs
repnz
js
popf
mov
iret
repnz
xchg
adc
fnsave
in
ljmp
and
add
bound
mov
push
cmp
nop
stos
or
fdivl
sub
push
cld
lcall
in
jae
add
mov
cmp
cmp
pop
ja
push
pop
cmc
sbb
movsl
cmpps
dec
sub
sbb
lcall
shll
pop
push
stos
pop
add
and
inc
inc
xor
adcb
sbb
ja
mov
fbld
shll
fildl
mov
pop
loope
xlat
xor
jmp
lock
popf
fwait
sub
insb
mov
rcrl
aas
jge
dec
xor
cmp
push
inc
mov
jle
jl
pop
sti
into
popf
aaa
test
push
add
iret
push
pushf
idivb
jbe
ljmp
mov
lods
mov
xchg
xor
pop
ret
cmp
mov
adc
loopne
and
inc
jecxz
push
mov
cmp
push
lods
inc
inc
aas
dec
and
js
sahf
into
data16
js
jge
loopne
mov
adc
arpl
enter
and
dec
mov
mov
ret
cmp
pop
int3
jle
mov
out
out
push
lret
or
and
pop
sbb
data16
inc
cwtl
jmp
mov
mov
push
push
push
fdivl
jnp
xor
mov
shrl
movsl
lahf
mov
add
mov
push
fistpl
cmp
cmp
and
cmpsl
lds
pusha
mov
test
push
add
gs
xchg
pop
xchg
add
sub
mov
mov
std
pop
jae
xor
daa
outsl
sbbb
push
sbb
insb
mov
inc
lods
pop
xor
dec
push
setge
cltd
and
dec
lods
movsb
icebp
cmp
subb
out
dec
mov
or
in
push
add
cmpsl
mov
cmp
cmc
mov
stc
sahf
mov
movsb
es
jae
jl
lds
or
and
daa
push
cwtl
push
iret
mov
sarb
dec
fucomip
pop
cs
fprem
dec
jae
jg
mov
pushf
xchg
stc
data16
cmp
inc
push
lret
insl
jecxz
and
aad
sbb
out
or
lea
and
fidivrl
loopne
and
adc
inc
mov
push
mov
jo
ljmp
pusha
mov
int
shl
fmull
or
out
dec
pop
jb
stos
lds
imul
dec
movsb
push
cmp
jae
aad
loop
shl
lods
subb
dec
nop
xchg
mov
or
push
push
rcr
in
dec
xchg
sub
jp
gs
xchg
dec
adc
dec
aad
push
test
inc
pusha
adc
mov
or
das
mov
mov
stc
popa
cmpsb
ds
and
into
xchg
cld
pop
adc
jecxz
or
fbstp
pop
sub
add
fsts
sbb
orl
clc
push
lret
cmp
push
lret
pop
inc
mov
push
push
add
imul
xchg
push
inc
fdivl
popa
sbbl
jmp
add
sub
stos
mov
inc
jmp
in
sub
dec
inc
or
aaa
bound
pop
outsl
fidivs
jo
jb
pop
movsl
sbb
jecxz
mov
xlat
outsb
loop
cmp
mov
testb
add
subps
int3
test
mov
pop
adc
jno
ret
out
jg
out
sbb
pop
add
mov
lret
pop
ss
cwtl
cmp
out
inc
arpl
jmp
cmpsb
ret
jg
xlat
sub
sub
es
push
jb
and
adc
xchg
mov
or
cmp
sub
and
stos
test
dec
testb
cmp
pop
mov
push
sti
xchg
sti
sbb
mov
adcb
imul
jmp
inc
adc
fwait
jns
push
jo
and
scas
push
push
mov
cmp
or
shlb
push
loop
test
into
fimuls
insl
sbb
pop
sub
leave
push
cmp
dec
xor
dec
ss
adc
push
pop
mov
sar
mov
fnsave
fs
xchg
insl
inc
add
push
pushf
popa
xor
adc
daa
subl
cmp
ficompl
pop
mov
pop
das
mov
fs
or
jle
adc
mov
mov
mov
aad
lcall
push
jmp
pop
xor
pop
push
jb
push
bound
xchg
jae
xor
fsincos
fwait
push
pop
ret
jmp
xor
xchg
sub
pop
mov
sbb
ror
movsb
jns
fistps
fld
sbb
rclb
cli
loop
sbb
std
lret
es
or
mov
mov
pop
cmp
mov
les
and
gs
rcrl
lock
popf
xchg
add
add
jge
mov
push
scas
popf
add
inc
jecxz
fstpl
fidivrs
cmpsl
gs
aad
mov
xchg
andl
lret
outsb
xor
outsl
push
in
sbb
flds
int
out
mov
ss
call
push
gs
push
pop
mov
dec
icebp
cmpsl
pop
xor
mov
mov
insb
inc
sub
jmp
inc
iret
je
mov
lods
mov
data16
cltd
mov
in
test
push
cld
inc
xor
mov
shrl
sbb
out
add
and
fucompp
jb
xchg
mov
sbb
popa
sub
test
test
cli
loope
lods
sbbb
pop
pop
insb
inc
pop
call
je
and
xchg
out
orb
call
arpl
loope
sub
mov
cmp
stos
jge
pop
pop
iret
out
aad
das
adc
mov
fistl
mov
jo
and
lret
pop
ljmp
lods
pop
fcmovnu
insb
or
xor
add
stc
popa
pop
imul
arpl
dec
adc
push
mov
out
cmp
in
imul
jecxz
adc
push
imul
movl
add
lahf
inc
fidivrl
popa
jle
mov
cmp
popf
jno
xor
test
xlat
mov
fmul
stos
adc
test
shrl
xor
out
mov
loopne
lods
lods
imul
xrelease
xor
inc
add
mov
pop
out
pop
xchg
cmp
add
pop
repz
dec
inc
loopne
out
fs
jbe
lods
mov
loopne
ljmp
ret
xchg
xchg
daa
shll
scas
mov
adc
mov
fidivrl
fisubrs
dec
sbb
stc
jns
sbbl
adc
cld
pop
add
or
jo
fcomip
jbe
push
inc
pop
jecxz
cmp
sbb
daa
or
sub
push
sbb
popa
scas
push
jmp
pop
imul
fwait
adc
inc
lods
je
out
xchg
or
mov
scas
negl
pushf
and
jg
lods
or
test
mov
rorb
mov
lret
dec
or
pop
in
ljmp
jb
lods
sub
cli
or
dec
pushf
cld
inc
ljmp
pop
xor
int
jp
cmp
pop
dec
cli
mov
ret
fisttpll
test
aas
fisubl
push
and
lcall
scas
pop
push
scas
add
insb
add
inc
inc
fnstenv
xchg
mov
jmp
hlt
out
xchg
popf
jae
xchg
cli
mov
pushf
push
xor
stc
inc
and
pop
fldenv
push
mov
iret
or
push
int
or
dec
lods
aad
push
mov
rorl
sub
jns
dec
or
cs
pop
pusha
jno
sbb
in
icebp
sub
out
sub
hlt
mov
dec
mov
xchg
mov
mov
shr
addr16
hlt
in
inc
fdiv
cmpl
adc
ficomps
pop
fidivrs
loopne
inc
fsubl
lcall
mov
addb
lcall
fbld
aaa
add
mov
es
int
jo
push
aaa
rorb
imul
inc
mov
jg
movsl
insb
adc
mov
fdivrl
scas
mov
lret
mov
add
es
in
stos
fstpt
or
mov
mov
xor
cli
jle
rep
mov
faddp
hlt
testb
or
sbbb
divl
add
test
movsl
xor
in
mov
mov
lret
negl
adc
mov
sbb
or
cwtl
das
je
imul
mov
mov
rclb
outsb
add
data16
test
jl
lock
jo
xchg
sub
lds
repnz
and
std
dec
sbb
cmp
xlat
enter
in
lock
ljmp
pushf
xchg
cltd
xor
push
mov
insl
les
cmc
es
adc
popa
clc
dec
xor
movsb
out
jg
leave
cmp
leave
in
mov
shrl
imul
loope
cmp
or
int3
and
sti
push
in
xor
jl
cmpsl
cmc
int
mov
pop
lea
push
cmp
cmpb
mov
mov
popa
clc
mov
lock
push
in
test
jle
push
outsb
inc
test
xchg
ss
enter
ds
add
pop
dec
push
sub
sub
dec
sbb
pop
sub
inc
insb
mov
lret
xor
loopne
out
mov
icebp
mov
inc
cmpsl
adc
pop
push
mov
push
in
add
cmp
push
fisubrs
or
push
sti
mov
add
test
pop
push
fisubs
sbb
xor
mov
mov
leave
and
fcoms
and
stos
xchg
cs
sti
sarl
jo
je
push
idiv
xor
cmp
mov
bound
mov
or
js
mov
ds
lret
cli
push
std
mov
adc
inc
jnp
outsl
in
cmc
movsb
lahf
enter
push
lds
and
jb
repnz
or
adc
sbb
dec
sbb
mov
andb
add
sub
jmp
lcall
push
dec
cmp
into
sub
adc
xor
mov
call
cltd
test
xchg
addl
sbb
in
mov
push
scas
popf
lock
inc
add
add
push
cmp
mov
dec
loopne
jmp
clc
mov
jbe
inc
insl
mov
mov
xor
je
out
add
scas
push
mov
std
push
pop
mov
ret
out
call
or
mov
test
xchg
neg
inc
sub
sbb
jns
xor
and
jb,pn
cmpsb
mov
lds
in
lcall
fdiv
xchg
pop
scas
stc
dec
ficomps
ljmp
mov
push
repz
add
push
rcrb
ja
push
icebp
andl
or
pop
push
data16
dec
xchg
in
pop
lcall
inc
jp
jne
leave
js
fbstp
mov
movsb
into
sub
inc
and
push
add
dec
and
mov
data16
xchg
dec
xchg
mov
mov
jmp
aas
jle
jo
jb
pushf
daa
mov
or
or
leave
lods
cmp
xchg
outsb
int
popf
mov
push
popf
xor
ret
imul
mov
test
and
stos
inc
dec
movd
jo
jo
in
repz
dec
movsb
push
push
stc
cld
dec
mov
ret
add
cmpsl
push
dec
loopne
les
cmpsl
test
ret
cmp
push
in
cmp
mov
pusha
or
in
pop
xchg
sub
push
dec
and
addr16
inc
stos
xchg
cmc
push
dec
xchg
outsl
repz
mov
aad
popf
xchg
stos
pop
xchg
dec
scas
adc
fildll
ret
repz
pop
adc
jge
and
pop
sahf
or
mov
jb
and
ret
push
lahf
dec
addb
push
outsl
vpshuflw
inc
ret
mov
bound
or
test
negb
cwtl
daa
clc
inc
lret
jmp
es
sbb
test
bound
mov
std
test
shll
insl
mov
les
sar
or
inc
cmp
fisttpll
mov
xchg
jmp
xchg
pop
cmpsb
rcrl
ja
add
sub
push
xchg
push
adc
insl
push
sbb
pop
negl
testl
inc
lahf
cmp
mov
mov
ret
sub
jbe
roll
or
mov
mov
aam
pop
xchg
sub
dec
jb
cmp
xorb
inc
mov
cmp
sbb
and
xor
or
sub
inc
jl
sbb
dec
mov
movsl
pushf
add
daa
adc
and
and
int
lods
incb
push
add
hlt
fldl
jmp
lods
in
inc
cld
xchg
jne
xor
mov
add
lds
and
aad
dec
jle
mov
scas
push
mov
inc
inc
jge
mov
in
call
mov
add
jl
and
cs
cmp
sbb
inc
sti
push
cli
inc
stos
fcmovnbe
xor
inc
mov
stos
xor
adc
mov
inc
mov
adc
lods
inc
or
lret
push
pop
pop
xor
icebp
lea
sbb
xchg
sbb
push
mov
test
popa
or
inc
inc
mov
or
jp
mov
pop
lcall
lock
out
push
sbb
mov
testb
pop
xchg
cmpsl
sbb
mov
jmp
adc
hlt
push
and
push
push
fidivl
cmpl
sub
cmpsb
pop
sbb
dec
daa
movsl
std
stos
aaa
je
or
das
lcall
outsb
negl
lock
sub
push
lret
sub
stos
insl
add
movsb
clc
lret
cltd
dec
dec
sbb
mov
adc
out
xchg
sub
adc
int
daa
lods
inc
pop
sbb
pop
insb
fs
or
mov
data16
lret
mov
dec
jecxz
fcmovnbe
push
mov
jmp
xchg
sub
push
cwtl
xor
arpl
cwtl
cli
jg
ljmp
inc
inc
test
dec
je
clc
rolb
and
cmpsl
xchg
repnz
enter
add
sbb
mov
xor
daa
mov
jmp
or
pop
js
and
pop
insb
adc
ds
jno
dec
neg
sbb
jae
stos
add
push
jbe
dec
das
push
loop
pushl
xchg
ret
jp
or
dec
cmc
mov
mov
les
jo
stos
jge
subl
add
dec
pop
call
adc
test
in
mov
cmp
fxch
jo
jg
jno
movsl
mov
data16
imul
sub
rolb
data16
cmp
repz
push
mov
out
xor
ret
in
or
push
pop
push
push
lods
mov
jb
mov
mov
push
data16
lret
jns
outsb
adc
rol
mov
dec
out
daa
inc
ja
pop
sub
ficompl
nop
inc
pop
sbb
mov
dec
push
stos
add
orb
std
mov
push
in
cmp
push
mov
lret
jbe
frstor
jnp
icebp
jl
adc
mov
arpl
ret
pop
or
push
iret
pop
sbb
lods
dec
push
shll
and
pop
daa
dec
daa
stos
jbe
sub
xor
push
pop
push
pop
lcall
ja
or
lods
aas
xchg
xchg
mov
sub
mov
rcll
add
fs
cs
or
mov
or
adc
xor
xchg
push
xchg
popa
add
gs
dec
repnz
fldl2t
xor
pop
inc
jmp
mov
lds
jae
movb
and
pop
stos
test
loop
out
xchg
sbb
mov
pop
arpl
mov
in
mov
cmpsb
scas
inc
cltd
cmc
inc
adc
mov
push
sbb
mov
mov
and
add
stos
sub
imul
mov
sub
daa
cmp
mov
mov
aas
int
inc
sbbb
ss
mov
cmp
imul
add
lods
ret
pop
push
adc
lock
out
mov
int3
movsl
shll
jae
repz
cmp
jb
out
negb
cwtl
or
aas
fs
dec
jl
aam
lods
pop
mov
cmc
in
adc
testb
xchg
push
outsl
inc
rolb
test
fcompp
dec
jmp
cmp
movsb
jns
out
rol
into
loopne
or
filds
outsl
jp
jnp
fs
mov
jl
dec
push
arpl
jb
pop
outsb
ds
inc
pop
jbe
shr
call
cmp
out
lret
fmuls
or
push
icebp
and
out
pop
rcrb
out
mov
add
mov
aas
and
cmp
ljmp
jmp
xchg
mov
in
or
mov
les
jno
repnz
or
xchg
andb
imul
push
lock
insl
stos
xorl
mov
xor
and
je
pop
cmpsb
cmp
arpl
dec
add
or
jo
mov
adc
dec
iret
inc
push
mov
push
ljmp
jmp
fcmove
fmull
inc
ret
cltd
ficompl
aad
cli
sar
lea
int3
aaa
push
add
popf
scas
or
pop
jmp
jbe
popf
or
push
sbb
mov
or
xlat
shll
mov
ret
sub
jo
push
push
mov
cli
test
test
imul
xchg
push
or
out
jg
ret
loope
call
fimuls
inc
outsl
sbb
xor
cmp
jnp
push
cltd
dec
loope,pt
out
das
inc
gs
pop
out
shl
mov
das
int
faddl
push
xor
or
ljmp
in
enter
xlat
daa
mov
jnp
lcall
fsubr
ja
xchg
sbb
mov
aas
pop
jno
xchg
aam
imul
mov
lcall
orb
outsb
outsb
adc
add
push
push
in
jg
icebp
jo
jg
bnd
hlt
push
jle
xor
popf
jp
sbb
repnz
mov
or
pop
in
nop
jnp
leave
mov
fistpl
inc
and
or
aas
fwait
add
rorb
loope
cmpsb
pop
mov
mov
inc
lahf
sub
mov
lods
in
xchg
dec
hlt
add
fcmovb
and
pop
push
test
mov
test
xor
pop
scas
shrb
bound
xchg
pop
or
push
dec
mov
lahf
xchg
cs
rcrl
lods
loop
xchg
shrb
mov
push
shrb
sbb
and
push
sbb
dec
pop
cmp
xchg
das
shlb
enter
rol
stos
inc
pop
popf
mov
dec
lahf
sbb
loope
and
sub
or
xor
add
pop
push
insb
nop
xchg
aaa
mov
jne
or
lds
and
arpl
ror
lahf
xor
jno
mov
in
addr16
cli
cmp
mov
add
or
stos
mov
mov
pop
xorl
lds
lcall
cli
shll
incl
ret
inc
gs
ret
pop
int
push
and
cmp
pop
dec
xchg
xor
mov
lcall
push
stos
push
call
scas
sub
vmovups
add
lea
pusha
mov
xchg
lea
or
pop
sti
sbb
js
dec
in
lcall
sahf
push
andl
ds
cmp
xchg
xlat
dec
test
pop
cmp
loope
pop
fistpll
mov
sub
mov
pop
mov
ret
loope
cmpsb
fdiv
pusha
xor
lds
into
mov
inc
mov
andl
cs
lcall
movl
jno
std
movsl
mov
std
andl
hlt
add
push
mov
xlat
fsubr
or
icebp
dec
mov
dec
add
mov
icebp
fdivrp
mov
adc
xor
scas
scas
sbb
in
cli
dec
jg
xor
jg
int3
inc
or
sub
pop
mov
sbb
rolb
inc
pop
aam
push
jbe
ss
mov
call
lahf
out
leave
xchg
negl
dec
cmpsb
rcrl
cmpsl
subl
xchg
ljmp
xlat
jge
push
mov
inc
or
cli
push
dec
aam
call
sub
mov
orl
sub
mov
push
inc
sbb
pop
cwtl
mov
outsl
std
cltd
shll
dec
jb
mov
xchg
jno
jns
stos
xchg
and
sbb
push
inc
int3
inc
inc
sbb
mov
push
filds
mov
stos
fidivl
clc
inc
pop
sub
shlb
dec
sub
stos
cmp
sahf
int3
mov
sub
add
stos
sbb
sti
outsb
add
jle
fxtract
xchg
dec
push
or
repz
pop
jb
cmp
dec
push
mov
adc
fadds
and
pop
mov
ds
sub
aad
mov
iret
xor
pop
jbe
dec
or
dec
xchg
xor
mov
pop
arpl
add
shrl
test
pop
or
jmp
and
in
pusha
inc
add
orb
pushf
out
jecxz
ljmp
cmpsb
aas
push
lds
dec
jb
xchg
jle
insb
lcall
fwait
lret
xchg
in
leave
xor
mov
or
sbb
pop
insl
insl
lahf
idiv
xchg
sub
repz
jl
leave
gs
and
out
mov
jg
lret
jg
fcom
push
imul
sbb
ja
loop
jp,pt
outsb
sbb
push
test
outsb
iret
lods
popf
popa
loopne
dec
push
or
jmp
std
or
je
leave
xor
mov
addl
nop
xchg
or
inc
cmp
cltd
addr16
das
ret
sub
sbb
or
sti
mov
adc
fidivl
cmpsb
lock
push
xor
sbb
fstpl
dec
out
xor
mov
or
mov
jmp
inc
jns
add
loope
sub
ret
sub
adc
mov
cs
mov
fcmovnu
repz
mov
dec
xchg
sahf
cmc
test
cmpsl
mov
sahf
sub
adc
insb
fnstenv
stos
sbbl
mov
or
movl
test
jnp
xchg
fs
movsl
popl
mov
arpl
push
rol
iret
pop
divb
or
mov
push
clc
mov
or
jne
pop
subb
testl
jns
mov
loopne
xchg
cs
lods
jae
imul
sbb
and
add
or
push
sub
xchg
sub
scas
cmp
repnz
or
call
add
out
ds
nop
test
cmp
test
dec
or
mov
ret
outsl
lock
mov
push
fbstp
adc
jo
xchg
icebp
aam
insb
es
mov
or
fistl
orb
testl
jae
in
sub
cmp
loope
arpl
jmp
sub
mov
push
jns
loopne
fcoms
add
mov
out
mov
jb
and
push
sbb
add
int3
gs
push
lods
mov
shrl
ljmp
pop
insl
dec
mov
fnstcw
lods
mov
hlt
and
adc
outsb
add
sub
xor
mov
and
push
push
aas
inc
aaa
cs
std
bsf
and
mov
rol
push
cmp
ret
test
das
push
xor
sub
fcomi
mov
es
xor
ja
lret
push
mov
pop
mov
pop
insb
push
add
add
mov
mov
inc
nop
fistps
aad
cmc
jl
test
add
sub
ss
popa
not
jbe
add
cmpsl
rcl
test
js
pop
lcall
mov
je
scas
out
lods
pop
jae
aaa
repz
out
jo
inc
jo
jmp
stos
inc
popf
icebp
jp
fnstenv
xchg
testl
jmp
push
sbb
add
mov
imul
inc
mov
int3
arpl
jo
jge
inc
shll
pop
fwait
out
insl
pop
js
or
clc
mov
jge
in
int3
dec
sub
insl
stc
in
lds
push
sahf
gs
leave
add
xchg
js
pusha
lods
rcrl
sub
xlat
lods
cs
inc
sbb
pop
adc
xchg
cmp
in
cltd
jl
lret
repz
sub
sbbl
jne
inc
mov
push
inc
inc
incl
sub
xor
and
fs
gs
add
mov
mov
cmp
fxch
sub
add
mov
lods
xor
pop
in
dec
adc
jl
sahf
in
lret
sub
sbb
mov
jns
das
cmpsl
xchg
xchg
mov
xchg
push
lret
sti
inc
sbbb
mov
dec
push
fcompl
mov
jge
scas
xchg
mov
cmp
push
mov
ret
inc
push
lret
fnstenv
push
mov
xor
push
pop
out
or
jnp
mov
xchg
pop
sub
push
lret
shlb
aaa
xor
cmp
lods
loop,pt
dec
in
mov
jno
in
jne
cmpsl
mov
or
int3
aad
mov
xchg
jne
movl
aaa
int
or
adc
inc
xchg
push
xchg
int3
imul
lock
repnz
sub
bound
sbb
imul
nop
out
pop
mov
roll
mov
repnz
gs
mov
sub
jnp
mov
shlb
add
test
in
sbb
fisttpl
movsb
mov
mov
pop
or
or
inc
mov
mov
fnstsw
clc
lods
xchg
inc
out
add
leave
sti
and
call
sbb
cltd
shrb
rcrl
sbb
add
es
daa
pop
insl
or
inc
xor
jno
test
inc
xchg
push
test
bound
test
lcall
adc
rclb
call
mov
int
inc
cmpsb
clc
xchg
stc
sub
int3
push
dec
int
cmpsb
dec
call
lret
xlat
movsb
push
imul
int
cwtl
mov
jmp
sub
notl
icebp
or
outsb
jg
sbb
dec
stos
inc
jnp
cmp
imul
push
dec
mov
cmp
pop
stos
jmp
pop
clc
scas
inc
dec
pushl
cmpsb
push
pusha
sbb
mov
sbb
cmp
dec
lods
ljmp
cli
clc
pop
sti
xchg
mov
repz
xor
mov
fdiv
adc
in
jmp
fdivr
mov
sub
adc
ret
sbb
xchg
xor
sub
xchg
pop
pop
mov
and
adc
lret
daa
mov
adc
adc
mov
add
lods
xor
pop
imulb
inc
sbb
cwtl
mov
mov
jle
push
xchg
je
leave
sbb
popf
nop
pop
and
insl
scas
push
hlt
jne
subl
and
repnz
pop
in
sub
cmpsl
cmp
mov
jb
scas
mov
push
ror
std
push
loope
inc
repz
nop
loop
in
push
inc
push
sbb
leave
pop
lahf
jecxz
arpl
adc
aam
outsl
sbb
aas
in
idivl
scas
psrlq
jns
xlat
stos
cltd
loope
inc
movsl
sub
mov
xorb
cld
stos
inc
enter
inc
scas
push
sahf
push
iret
add
dec
lods
xchg
pop
mov
rcrl
pop
test
sbb
fcmovbe
aaa
cld
pop
and
mov
cli
mov
shrl
xchg
sarb
popa
inc
inc
pop
shll
mov
lret
adc
or
idivb
inc
xchg
mov
mov
pop
inc
adc
mov
mov
divl
xchg
add
sub
jmp
xchg
cmp
outsb
sbb
dec
mov
and
sbb
rcl
fdivp
faddp
dec
fdivp
inc
adc
lods
xchg
cs
add
xchg
imul
lret
es
pop
ret
iret
xchg
adc
add
add
push
xor
bound
push
je
aaa
xchg
movaps
mov
or
mov
add
rolb
cmc
or
daa
mov
fldcw
jnp
orl
mov
movsl
jl
aam
ss
sbb
mov
mov
mov
pop
les
shl
pop
insb
jo
shrb
mov
popa
jg
ss
lds
xlat
cmp
inc
in
or
leave
test
push
inc
or
or
int3
fadd
inc
or
inc
sbb
push
es
add
scas
jne
lods
xchg
insb
push
xor
jl
dec
mov
cli
cmc
fcmovnb
sub
adc
mov
test
cpuid
jae
and
sbbb
or
popa
test
popa
cltd
xor
mov
mov
int
cmp
pop
lds
stos
inc
fnsave
int3
arpl
lds
testb
jae
mov
mov
sub
aam
xor
insl
test
repnz
sub
jo
lds
mov
xchg
inc
adc
push
ja
push
inc
jecxz
lds
or
aaa
inc
xor
subl
mov
ror
pusha
orl
mov
lea
mov
sub
stos
jle
bswap
sbb
fimull
mov
jns
cmp
cmp
xlat
lret
xlat
stc
movsl
push
repz
popf
push
cmc
cmpsl
bound
je
push
pop
cmp
fnsave
lahf
outsl
mov
sti
xchg
cmpsb
aad
dec
add
sbb
push
dec
fs
js
xchg
stos
sbb
or
stc
sahf
sub
lret
mov
and
idivb
mov
in
mov
mov
lods
cmp
push
mov
mov
mov
dec
ds
mov
lret
fsts
iret
sbb
or
adc
mov
lods
out
and
fidivrl
scas
stc
dec
cltd
mov
dec
hlt
cmp
test
jecxz
hlt
cmc
adc
dec
inc
lret
push
in
dec
iret
push
in
shr
mov
xchg
fidivrs
push
scas
sub
dec
add
push
test
int3
xchg
cmpsb
fisubs
ss
in
ret
popf
xor
push
add
lods
enter
int
inc
mov
mov
mov
adcl
std
fisubs
adc
dec
or
mov
sbb
stos
sbbl
mov
lods
shrb
rolb
jg
xchg
jbe
mov
loope
mov
pop
add
sar
sub
push
mov
mov
mov
inc
ja
in
pop
push
stc
nop
cmpsl
mov
or
pop
add
jp
sbb
dec
int3
int
lcall
fwait
in
and
pop
cwtl
inc
sub
mov
jp
and
push
mov
or
fs
cmpsb
mov
outsb
inc
lds
pop
mov
stos
inc
adc
stc
std
hlt
leave
push
add
scas
push
cmp
sbb
test
xchg
mov
sbb
or
pop
ljmp
dec
cmpsb
hlt
jne
add
cwtl
pop
adc
inc
sti
xor
inc
std
adc
sub
pop
mov
pop
mov
dec
pop
pop
fnstenv
sti
or
inc
fcompl
xchg
and
sbb
sub
xlat
mov
arpl
ljmp
adc
aaa
out
cmp
mov
jbe
aas
nop
inc
push
dec
cmc
or
es
and
jns
dec
in
sbb
icebp
mov
cmpl
add
xchg
xor
pop
xor
popa
add
push
stos
push
subl
insb
cmpl
jbe
ret
pop
mov
push
ljmp
jb
inc
mov
test
sbb
cltd
xor
lea
mov
mov
dec
iret
inc
clc
jmp
adc
out
lret
pop
cmp
jp
pop
and
sti
setge
push
ficompl
mov
sbb
push
or
movsl
scas
pop
jne
cld
aam
adc
xor
adc
xchg
call
xchg
das
out
mov
cmpsl
or
shlb
hlt
inc
xchg
aas
es
pop
fdiv
mov
iret
lret
adc
cmp
lods
repz
mov
mov
sub
or
ret
mov
lcall
xchg
lret
xor
cmp
fs
pop
in
daa
fildll
inc
adc
mov
xchg
xor
test
lret
fwait
or
mov
pop
aam
aam
sbb
and
arpl
sbb
xchg
jmp
aas
pop
lock
jno
outsl
aam
sahf
jo
cmp
jle
pushf
sub
hlt
xchg
push
repnz
into
dec
int3
push
insl
add
repz
out
mov
movsb
lret
gs
arpl
pushw
arpl
in
and
push
dec
jae
jle
imul
cwtl
cmp
dec
push
add
rolb
loope
rorb
cmpsb
or
in
or
jmp
and
xor
mov
out
roll
or
stc
cmp
and
das
xchg
notl
sub
pushf
push
jge
jecxz
mov
adc
imul
push
stos
or
test
dec
add
inc
ds
mov
xor
cmp
xchg
imul
pop
aad
int3
and
xchg
xchg
mov
shr
pop
jbe
add
or
repnz
movsl
or
push
and
ljmp
inc
or
popa
mov
in
andb
mov
pop
xor
pushf
fistpl
mov
aaa
mov
cmc
leave
cmp
jl
decb
cmp
lcall
popa
add
xchg
out
inc
in
xchg
xor
enter
test
add
leave
xor
imul
mov
sbb
jmp
push
adc
push
ja
lcall
rol
jnp
shlb
mov
stc
fdivrs
xchg
fs
lds
or
out
inc
mov
sub
bound
leave
sbb
mov
dec
test
fisubrl
xchg
inc
sbb
dec
insb
add
and
int
es
sbb
test
out
cmpsb
mov
push
jl
adc
lahf
sbb
inc
sub
mov
rolb
mov
inc
pop
jo
pop
aad
push
test
loop
mov
xchg
push
mov
xchg
jp
and
sahf
int
cmp
lret
addr16
lcall
push
and
mov
stc
shl
into
test
mov
and
je
nop
inc
inc
inc
bound
loope
sbb
outsl
cmp
adc
mov
dec
dec
pop
add
jae
inc
push
jmp
or
jo
jmp
dec
das
add
fcmovne
gs
test
mov
insb
adc
add
popf
hlt
mov
push
jle
sbbb
std
inc
idiv
and
mov
mov
push
stos
xor
mov
sub
cmc
xchg
jb
push
fdivp
lret
push
jge
lcall
cli
adc
pop
lahf
cmp
clc
popl
test
xchg
pop
mov
add
icebp
mov
icebp
in
push
xor
inc
and
and
lods
les
loope
xor
lds
popf
mov
adc
ds
or
mov
fcmovnu
jno
pop
pop
xchg
mov
aaa
bound
push
imul
jb
roll
test
xchg
or
int3
leave
xor
and
sbb
popf
stos
stos
jne
cmp
lret
cmp
js
push
lods
mov
or
pop
outsb
sahf
ss
pusha
mov
adcl
loop
in
xor
lea
cmpsl
jne
and
jge
pop
xlat
mov
arpl
adc
xor
arpl
repnz
insl
add
cmp
scas
inc
add
int
lods
xchg
xor
cmpsb
mov
sbb
dec
out
add
jl
adc
ss
das
push
ss
call
or
xor
outsl
ss
hlt
bound
and
push
je
cmc
aaa
cmp
xchg
xor
sbb
mov
mov
adc
and
popa
shl
mov
push
imul
cs
dec
fldcw
fs
mov
sahf
adcb
sub
jge
jb
sbbb
mov
sbb
sti
xchg
push
and
add
sbb
jmp
test
sub
repnz
dec
sbb
push
adc
ds
rolb
popf
inc
loop
movsl
push
data16
pop
add
add
je
cwtl
cmc
lret
inc
pop
push
ret
inc
call
fcoml
out
dec
adc
cmpsb
out
std
dec
push
jge
jne
pop
push
xor
xor
sbb
xchg
rol
push
sub
loope
out
int3
imul
xchg
notb
mov
cmp
int
test
inc
out
pop
les
shll
gs
mov
movb
adc
aaa
xor
mov
or
pop
movsl
ljmp
cmp
mov
push
pop
roll
popf
test
dec
xor
es
cmp
pop
mov
cwtl
cmc
fcmove
pop
cmp
bound
cwtl
addl
xor
inc
lods
xchg
fwait
jl
ljmp
fs
sbb
hlt
xorl
ja
sti
dec
lds
outsb
mov
sarb
jmp
enter
inc
cmpsb
stc
sti
scas
mov
and
mov
adc
lock
push
dec
in
dec
push
movsb
and
sbb
loopne
cmpsb
std
push
popf
adc
ss
push
cmp
jo
mov
test
add
rcrl
mov
int3
xor
sbb
pop
cltd
mov
jno
mov
sub
sbb
cmp
pop
jge
iret
aas
or
add
outsl
loop
lods
rclb
push
sub
pop
divb
xlat
jge
int3
das
aas
jbe
and
test
imul
call
icebp
mov
pop
xchg
adc
push
imulb
pop
sahf
outsl
sbb
lea
xor
mov
data16
je
pusha
in
lds
repz
aad
or
sub
in
data16
jns
loop
jge
mov
test
dec
outsb
movsb
out
push
shl
cmpsl
xor
mov
enter
es
es
jae
push
adc
pop
out
pop
dec
popa
lock
sahf
ja
lret
push
sahf
int
sti
int
mov
out
rcrb
push
push
inc
sub
cld
lock
cmp
adc
ret
pop
and
push
inc
in
inc
sti
sbb
test
sti
add
stos
inc
xor
lea
mov
cmc
xchg
xor
push
sub
adc
das
cs
das
jg
cmpsl
test
mov
xor
push
dec
xchg
inc
add
aas
adc
nop
fld
in
mov
push
sub
dec
mov
and
mov
sbb
ret
push
imul
mov
dec
loop
test
mov
mov
push
lods
fnsave
sub
cmpsl
cmp
icebp
push
cmp
cmp
loopne
out
sbb
les
dec
rorl
add
sub
cmp
or
ret
push
call
lret
sahf
outsl
mov
outsl
mov
rcl
jns
fidivl
push
sub
mov
pop
out
jl
mov
sub
je
adc
sbb
nop
cmp
pop
sub
leave
pop
jp
mov
cwtl
mov
lret
mov
push
call
adc
stc
lea
test
pop
movsb
sub
or
mov
jo
cli
int
cwtl
ds
test
pop
pop
mov
dec
mov
xor
adc
imul
xor
ljmp
sub
mov
movsl
sbb
clc
pop
fwait
insb
xlat
rep
push
and
xor
or
stc
pop
in
pop
or
add
lods
rcll
sbb
ret
nop
call
inc
pop
flds
shr
aas
shrl
cmp
mov
push
es
mov
add
cs
sub
insl
jo
dec
aaa
cmpsb
adc
xchg
jne
fld
xor
clc
push
insl
xor
pushf
push
outsl
dec
lret
mov
push
adc
or
outsl
mov
cmpsb
cmp
xlat
mov
or
push
xchg
lods
sar
pop
mov
jg
cmp
jmp
cli
jg
fwait
mov
mov
sub
inc
dec
cmpsl
repnz
add
sbb
daa
mov
add
arpl
les
iret
pop
mov
dec
mov
jo
in
push
pop
cmp
dec
fucomp
xor
cmp
js
dec
mov
xchg
dec
ljmp
push
scas
testb
repz
sti
add
and
mov
insb
imul
imul
rcll
xchg
fnop
sbbl
jns
repz
jge
xchg
sub
xor
xor
jns
mov
popa
mov
xchg
dec
fbld
data16
dec
push
xor
and
lahf
push
nop
shrb
mulb
and
cmp
or
xor
mulb
push
mov
dec
push
jno
jg
jg
cmp
dec
push
addr16
dec
shlb
push
jecxz
dec
fisttpll
out
sub
es
xchg
movsb
inc
pop
add
rep
lock
sub
aam
in
dec
aaa
cmp
inc
in
dec
gs
push
out
add
mov
push
adc
mov
xor
xchg
or
sbb
push
loope
out
jne
and
imul
and
adc
xchg
xor
in
ret
pop
in
mov
adc
test
push
cmpsl
outsl
add
mov
into
mov
subl
test
fists
das
push
int
nop
repnz
jae
daa
leave
pop
and
repz
popf
je
pop
mov
ljmp
shll
sbb
dec
lcall
repz
test
movsb
mov
jbe
int
movl
sbb
test
cmp
jb
shrb
mov
mov
arpl
insl
cwtl
out
and
add
mov
lods
inc
aad
ficomps
out
push
call
sub
inc
mov
cmp
dec
or
jp
mov
add
dec
lock
cmp
insl
mov
jp
test
jle
fdivrs
insb
iret
mov
jge
and
mov
out
mov
popf
sub
add
and
fmul
mov
cmp
or
sti
add
or
push
dec
popf
je
lods
lods
sbbb
adc
insb
mov
stc
out
xor
jo
xchg
mov
dec
push
shrb
in
add
loopne
incb
es
dec
loopne
scas
outsb
add
or
pop
sbb
int
sbb
popf
xor
mov
push
bound
cmpsl
ds
rcrl
or
call
adc
imul
out
jne
inc
push
jecxz
jbe
and
adc
and
and
push
out
fidivrs
inc
inc
mov
shrb
fsts
add
cmp
mov
or
rcrl
push
add
xor
std
stos
insl
xchg
pop
jnp
adc
cmpsb
nop
insl
xchg
sub
pop
mov
cmp
roll
nop
outsl
push
fsubrs
push
sub
cld
push
mov
dec
sub
push
jo
jle
push
pop
jae
xchg
and
push
dec
rcr
sub
jecxz
mov
and
adc
imul
inc
sbb
inc
xchg
and
cmp
and
cli
addr16
inc
aad
clc
inc
xchg
mov
xchg
jmp
fnstenv
xchg
cli
addr16
int3
outsl
jmp
or
je
je
jb
mov
pop
cmp
jno
dec
xchg
popf
call
mov
mov
loope
mov
js
bound
popl
pop
in
clc
sub
cmp
dec
mov
lods
add
hlt
mov
lock
and
rol
push
js
push
add
int3
das
mov
xchg
mov
cmp
incl
jne
mov
ficompl
add
pop
adc
lea
sbb
add
sbb
les
pop
xor
out
dec
lahf
inc
fs
add
decl
add
mov
in
icebp
dec
sbb
icebp
into
insb
js
sahf
out
xchg
int3
stos
stos
or
fmull
out
frstor
push
sbb
ss
sbb
sbb
jecxz
ja
xor
rcrl
adc
adc
into
dec
in
out
out
popa
sbbl
rcr
je
stos
into
jb
sub
mov
movsb
loop
xor
out
adc
popa
and
shrl
call
and
jno
mov
in
pop
push
lahf
hlt
call
int
in
sub
and
divb
leave
out
push
push
loopne
leave
jmp
hlt
shrb
movsl
shrb
cmp
in
pop
add
aam
rolb
jmp
fs
push
insl
jbe
fidivl
je
push
out
adcl
jg
lock
xchg
aaa
ljmp
out
dec
call
xchg
into
sub
das
mov
mov
xor
pop
mov
and
outsl
push
ret
mov
dec
cmp
pop
cmp
aam
adc
scas
icebp
rclb
adc
fimuls
or
rolb
push
mov
popf
repz
imul
rcrb
dec
sub
nop
ja
lret
pop
pop
push
cmc
incl
lret
out
cmp
aas
je
inc
ficompl
cltd
loop
inc
fwait
daa
sahf
outsl
out
lds
cmp
pop
and
xchg
das
mov
out
jae
imul
stos
adcl
or
cmp
jp
orb
cmc
pop
jbe
loop
jle
cmpsb
scas
movsl
imul
test
inc
mov
clc
sbb
sub
mov
lea
lods
xchg
xchg
mov
lods
imul
stos
in
adc
or
pop
push
sub
add
insb
mov
cmp
mov
fisttps
pusha
mov
jmp
fdivs
jecxz
jne
mov
sub
or
sub
sahf
push
mov
les
mov
ja
mov
jp
pushf
push
jecxz
xchg
mov
faddl
pop
xor
test
adc
jl
or
lock
mov
rolb
pop
mov
mov
or
or
pop
daa
mov
add
and
aam
add
sub
jle
mov
lahf
push
ljmp
pusha
sti
sub
inc
pusha
mov
cmp
movsb
pop
imul
aas
xchg
xchg
shl
loop
test
pop
ja
leave
pop
sti
shr
andb
push
jne
repnz
arpl
or
aaa
and
xchg
add
xor
mov
or
jecxz
iret
jns
add
cltd
lcall
lret
add
lea
push
dec
push
lret
sti
enter
rcrb
cli
inc
stos
fiaddl
inc
mov
int
jnp
lea
mov
jge
icebp
mov
popf
lods
shr
sbb
ja
and
xor
mov
cmpsl
les
in
test
fistpll
stc
xchg
loopne
lds
adc
cmp
cmp
inc
test
sbb
fcoml
xor
or
insb
jge
dec
pop
stos
dec
lods
push
enter
ss
stc
dec
xchg
mov
and
sbb
add
sti
sti
or
push
imul
popf
mov
xchg
sub
fisttpl
sbbb
inc
lds
aas
popa
outsl
inc
pusha
sub
inc
ret
xor
jbe
jge
mov
mov
mov
cmpsb
xor
pushf
pop
add
jno
popf
out
sub
dec
testl
cmp
push
lret
jno
jno
fidivrs
push
out
and
fsubl
jbe
sbb
sub
push
and
sbb
outsb
cmp
cs
fadds
cmp
fs
notb
aas
push
and
pop
add
xchg
jp
aaa
push
scas
fwait
sbb
int3
lds
loopne
in
cmp
cmp
ret
aaa
cmp
dec
loopne
inc
cmp
mov
adc
stos
jbe
lahf
cmp
aad
sbbl
add
jge
idivb
pop
push
pushf
mov
jp
aas
int3
iret
fwait
pop
add
dec
ret
pop
mov
loop
or
cwtl
subl
fcmovne
lods
adc
aam
iret
and
xor
cmpsb
adc
push
jne
or
xchg
cmp
rcrb
testb
lea
imul
rorb
inc
add
add
dec
jecxz
jae
aas
push
adc
lds
pop
adc
dec
or
dec
mov
and
stos
inc
jg
dec
in
hlt
pop
cmp
out
aaa
pop
sbb
adc
divb
clc
pop
dec
in
add
push
imul
push
add
pusha
jge
push
ljmp
out
xor
sub
push
loop
out
cmp
inc
mov
clc
add
sbb
mov
xorb
inc
mov
sarl
shrl
fcmove
adc
jg
mov
jecxz
lcall
mov
stos
bnd
repnz
push
int
or
ret
sub
pop
dec
fists
scas
xchg
ja
inc
roll
sbb
sbb
or
cwtl
popa
push
pop
jle
jae
inc
ret
dec
cmp
stos
loop
mov
and
mov
dec
mov
sbb
pop
movsl
sahf
mov
inc
movsb
les
cltd
loop
push
testl
shll
mov
int
jo
xor
fbstp
cltd
push
loopne
mov
push
inc
outsw
sbbb
inc
fsubs
mov
inc
in
fdivr
stos
mov
movsl
loop
std
fdivr
mov
inc
in
stos
int3
xchg
lea
call
das
add
mov
adc
add
das
or
ds
sbb
cltd
pop
inc
pop
lods
jge
push
js
leave
pop
mov
pop
push
adc
inc
fsubs
inc
sbb
out
dec
in
loop
xchg
sub
mov
mov
push
lcall
outsb
push
jmp
xor
jmp
fldl
mov
fisubrs
pop
push
sarl
ds
fidivs
scas
dec
pop
loope
lds
mov
outsl
fs
add
outsb
xor
sbb
hlt
std
in
fsubrs
and
out
add
shrl
pop
pop
and
loope
cs
jl
or
test
sbbb
loope
lret
mov
das
mov
and
push
js
xchg
jg
adc
fcomps
and
lea
pop
out
add
adc
sti
popf
ret
in
pushf
insb
inc
rcll
movsl
jo
and
scas
cmp
dec
cmp
jae
pop
cmpsb
cmp
push
and
pop
push
jbe
cmpsb
sti
add
jae
adc
loopne
jg
xchg
add
mov
pop
cmc
test
jl
or
inc
fsubrl
pop
pop
add
xchg
insb
jnp
test
out
out
or
not
cmp
loopne
aad
adc
xchg
gs
lret
or
xor
push
into
push
cmp
ret
test
jecxz
pop
xor
mov
testb
ret
xchg
xchg
cmp
and
or
adcb
or
jno
inc
mov
in
in
and
insb
add
jbe
fistpll
mov
les
adc
pop
pop
lock
bound
or
insl
cmp
ss
pop
les
imulb
insl
push
cmpb
cmp
stc
add
ljmp
mov
fbld
xchg
xchg
movsl
lcall
or
cmp
decb
bound
push
cmp
popa
sub
pop
adc
sub
jl
pop
ja
push
lea
push
fmull
sti
or
inc
pop
xor
mov
push
cmp
sub
mov
pushf
xor
mov
fdivl
pop
jecxz
add
inc
cmpsl
lock
or
cmp
pop
iret
dec
pop
push
pop
cwtl
das
mov
pop
shlb
aaa
data16
cmp
cmpsb
pop
jmp
sbb
imulb
adc
leave
cld
cmp
cs
mov
mov
sti
shll
pop
pusha
jmp
cmp
sub
popa
addl
cltd
or
inc
out
in
xchg
mov
jge
js
loope
mov
adc
jp
imul
cmp
mov
rclb
xor
mov
inc
nop
shll
xchg
loop
mov
prefetch
adc
test
icebp
xchg
sbb
lea
mov
testl
jp
pop
cmp
or
inc
adc
ret
jno
xor
xchg
imul
push
fsubrs
cmpsb
dec
and
push
inc
sub
pop
iret
xor
arpl
stos
int
je
ljmp
mov
divl
test
mov
loop
les
jb
inc
cld
lea
sub
addr16
rcr
push
decb
mov
iret
test
loope
bound
sar
into
dec
xlat
repz
jo
xchg
mov
sarl
pop
or
sub
mov
fbstp
test
pusha
ret
andb
or
decl
push
fistpl
test
xor
cmp
push
in
out
bound
push
jb
inc
cmp
ja
push
test
mov
sbb
repz
and
jmp
les
es
out
push
pushf
dec
inc
adcl
add
test
pop
mov
repz
pop
in
scas
mov
mov
dec
loope
shlb
cli
aad
clc
push
lret
mov
jno
sbb
pop
inc
push
sbb
mov
clc
scas
sub
xor
push
pop
inc
push
insb
xchg
mov
fdivrl
mov
jmp
out
or
imul
imul
test
cwtl
inc
outsl
mov
popw
aas
fwait
add
cmp
je
imul
mov
int
enter
pop
lods
ror
jne
inc
in
aam
test
mov
test
insl
aaa
mov
and
ret
xor
daa
pusha
out
fldenv
je
adc
out
cmp
loop
jae
cltd
push
icebp
imul
popf
add
inc
stos
arpl
xor
sub
push
stc
leave
pusha
sub
int
ljmp
imul
and
nop
addr16
subb
mov
or
test
xor
ljmp
fs
nop
insb
nop
ret
out
int
nop
mov
repnz
sti
lcall
cmp
loopne
bnd
jmp
jg
lods
and
sub
ja
xor
dec
adc
and
cmpsb
inc
stos
aad
xchg
mov
into
or
sbb
push
xchg
cmpsb
or
shr
pop
ret
or
dec
push
in
jl
push
in
or
icebp
mov
je
or
jbe
adc
sbb
sub
mov
loop
inc
fldt
adc
loop
sub
add
inc
push
call
xlat
xchg
icebp
inc
mov
mov
js
outsl
jnp
pop
lds
jl
pop
dec
dec
mov
add
push
xchg
xor
rorb
lret
mov
gs
pop
mov
xor
cwtl
repz
movsl
call
or
in
add
fdivrs
pushf
pop
pop
add
cmpsb
mov
push
das
loopne
lcall
leave
in
imul
cmpxchg
aaa
call
push
imul
aaa
outsb
shl
pop
into
xlat
add
sub
out
repnz
cld
xchg
xor
int3
jne
push
xchg
push
mov
cwtl
adc
mov
fists
popf
mov
jbe
test
ja
cmpsb
jle
sbb
or
or
dec
adc
mov
mov
je
in
ja
jp
dec
cwtl
subb
jae
imul
fs
sbb
aas
dec
in
sub
nop
adc
or
lea
xchg
movsb
lods
and
addr16
into
push
repnz
xchg
jnp
cmp
hlt
mov
cltd
push
in
mov
into
cmp
call
pop
xor
dec
out
and
in
mov
ja
dec
cmpsb
shl
stos
cmp
in
pusha
std
adc
lods
pop
icebp
fisubrs
xor
out
mov
mov
das
lea
or
popf
cmp
pop
fldz
xchg
fs
cmpsl
idivl
cmp
incl
in
into
mov
fsubl
ret
arpl
inc
xchg
lock
push
stos
mov
out
shll
mov
dec
lret
or
cmp
dec
lods
imulb
je
pop
daa
mov
pop
mov
add
mov
push
ret
dec
mov
dec
cmp
and
cmp
dec
mov
adc
ds
or
mov
inc
jo
rolb
dec
mov
and
mov
adc
data16
adc
push
shll
mov
pop
mov
pop
stos
fxch
push
cmp
and
mov
add
jno
fwait
scas
leave
sbb
lcall
push
ljmp
insb
add
out
push
xor
scas
imul
or
out
push
mov
mov
inc
popf
push
mov
mov
xor
cmp
imul
pop
test
mov
or
cmc
test
aas
cmpl
sbb
sub
jne
dec
pop
shrl
xchg
sti
aaa
outsb
adc
inc
movsl
lds
loopne
int
adc
lret
data16
push
or
sahf
jne
sub
call
test
xchg
push
push
sti
movsl
dec
inc
and
ljmpw
xchg
sbb
shll
dec
rcl
or
stos
cmpsb
lock
xchg
sub
add
aam
and
push
pop
pop
ljmp
jmp
adc
inc
or
test
add
mov
nop
pop
or
or
pop
aas
cld
inc
nop
xchg
stos
ss
in
scas
mov
xor
push
ja
push
jg
lahf
pop
adc
aaa
add
push
stc
sti
aaa
fldenv
inc
inc
adc
xchg
sub
outsl
mov
dec
dec
rcll
jns
in
jnp
adc
arpl
repz
xchg
mov
mov
mov
fsubrs
adc
out
xchg
loopne
and
xchg
adc
jno
fsubrl
or
xchg
pop
in
clc
xchg
movsl
lret
mov
int
cmp
jno
pop
cs
jl
fidivs
mov
or
lcall
lcall
std
mov
ljmp
cs
xor
push
sbb
hlt
dec
xor
sub
cmp
cmpsl
mov
dec
mov
shlb
scas
add
push
mov
add
inc
inc
pop
xacquire
adc
outsb
fsubr
stos
les
stc
insb
mov
jge
test
inc
dec
push
jl
or
inc
sub
arpl
lds
movsb
mov
repz
popf
add
mov
jmp
enter
cmp
fdivs
movsb
cmpsl
mov
cmp
cmpsl
pop
cmc
xlat
xchg
mov
add
lock
mov
sbb
or
stos
add
jbe
inc
in
push
mov
bound
out
dec
push
test
and
mov
shl
sub
in
push
ds
mov
clc
add
rolb
mov
rorb
add
movb
aad
fidivs
cld
fs
repz
imul
or
rcr
mov
arpl
pop
sarb
loopne
rorb
lods
jne
cmpsb
cmp
or
pop
xor
mov
and
loope
mov
xor
mov
loop
gs
jecxz
shlb
xchg
or
fs
pop
clc
ds
mov
cs
or
sarl
pop
mov
xor
sub
xchg
dec
or
xchg
xchg
mov
sbb
xchg
mov
jmp
ja,pn
dec
sub
cmp
movsl
mov
inc
jno
jl
adc
popa
dec
xor
rorb
inc
mov
xor
ljmp
jbe
jg
mov
gs
and
dec
add
mov
outsl
daa
sub
insb
js
cmp
imul
adc
pop
jp
aaa
xor
jecxz
sub
data16
push
in
or
adc
jo
ljmp
fstpt
mov
int3
in
into
test
lods
les
fdivl
push
jbe
test
mov
movsbl
movd
xchg
in
push
jle
scas
jb
cmpsl
out
lea
adc
bnd
aam
sbbb
aad
fiadds
add
fnstenv
xchg
fidivl
mov
dec
hlt
int3
fldl
cmpsb
push
mov
mov
inc
out
shr
fwait
lods
xlat
ss
mov
test
movsb
inc
and
fsubr
dec
push
sbb
mov
jl
ficoml
and
je
jmp
xchg
adc
sub
movsb
stos
orb
sbb
sbb
nop
cmp
fldt
aad
jmp
jle
add
mov
data16
cmp
xchg
inc
sbb
mov
sub
addr16
out
dec
xchg
sub
sbb
popf
xor
bnd
fistpl
xchg
lahf
jle
dec
mov
shll
fldcw
icebp
adc
aaa
push
push
adc
xchg
enter
aas
mov
or
stos
cmc
push
int
icebp
lahf
xchg
rcr
jne
fisubrl
les
sub
push
fdivrl
int
enterw
neg
lods
lret
cmp
rcrb
pop
mov
push
test
in
xchg
inc
shrl
adc
jmp
jg
fucomip
cmpsl
mov
outsb
jp
imul
mov
leave
cmp
push
jne
push
and
pmulhw
cmp
dec
insl
dec
std
or
xchg
pusha
subb
cmc
negb
call
fs
das
jl
les
dec
mov
shlb
data16
jo
ficoml
inc
out
sahf
push
adc
mov
rcrl
sbb
mov
loope
dec
push
loop
or
cmp
sub
clc
notb
insb
push
pop
jo
or
stc
in
and
shlb
in
or
push
enter
aas
loope
push
xor
adc
lea
sarb
inc
cmp
int3
ficoml
out
xchg
mov
and
xlat
and
pop
adc
pop
cmp
call
cmp
mov
ja
ret
push
cmpsl
jns
cmp
pushf
mov
xchg
cmp
add
fs
pop
push
pop
insb
std
lods
inc
das
mov
jp
lret
xor
shlb
ljmp
jno
lods
mov
icebp
push
dec
popf
jns
insb
pop
adc
dec
xor
push
movsl
pusha
inc
fwait
pop
mov
scas
xchg
jl
mov
xor
fs
repnz
sub
dec
mov
sbb
push
cmp
xchg
pop
dec
idivl
add
mov
lods
sbb
xor
insb
pop
sub
mov
sub
test
call
xor
xchg
adc
cmpsb
out
cltd
and
jnp
stos
inc
stos
out
aas
inc
pop
insb
jge
in
add
lcall
mov
gs
mov
jl
int
mov
in
add
xor
lods
jmp
fcmovnbe
rclb
gs
pop
cmc
sub
in
fmulp
add
lods
and
shlb
add
jbe
cmpsl
movsl
and
jno
ret
pop
sbb
lock
cmp
jl
subb
add
mov
aad
mov
popa
repnz
dec
adc
mov
ret
insb
dec
insb
jge
cltd
test
repz
mov
scas
inc
xor
int
cmovge
mov
popf
inc
mov
ds
mov
adc
lea
cmpsb
popf
mov
jmp
and
mov
movsb
clc
nop
add
aaa
adc
out
in
das
jo
ficomps
mov
imul
jmp
sarb
adc
push
das
shl
or
pop
icebp
fnstsw
pop
popf
add
pop
adc
insl
xor
sbb
xor
push
mov
in
mov
out
addr16
int
xor
shl
js
mov
mov
inc
lods
jnp
push
jnp
add
xor
testl
insl
mov
xor
pop
lock
jb
and
xor
xchg
stos
dec
scas
push
hlt
ds
adc
lcall
scas
clc
in
cwtl
dec
mov
cwtl
mov
shlb
inc
in
xor
jmp
loop
stc
add
adc
jbe
stos
and
shr
push
jmp
iret
imul
cmp
outsl
and
fisttps
out
adcw
and
fcompl
je
cmp
mov
bound
mov
lret
and
sti
or
cmpsb
cwtl
enter
mov
sbb
repnz
in
outsl
adc
pusha
mov
lret
clc
movsb
adc
and
fs
push
lret
dec
push
sbb
enter
enter
adc
push
int3
out
packssdw
xchg
js
into
jno
adc
pop
dec
lock
add
iret
cmovl
clc
add
push
sub
cmp
pop
sub
pop
imul
and
sahf
xor
lcall
call
jecxz
sub
push
ljmp
sbbl
shrb
push
bound
cmpsl
ret
aas
mov
jb
not
or
xor
mov
pushf
cli
fsubr
mov
pop
xor
enter
xsha256
cmpsb
push
repnz
ja
fcom
rclb
scas
movsb
adc
shrb
rcrb
mov
xchg
push
fs
inc
mov
fidivl
add
jns
mov
push
mov
shll
add
or
ljmp
mov
inc
ljmp
leave
imul
jl
xchg
xchg
mov
xlat
pushf
inc
aad
lahf
mov
cs
pop
mov
inc
mov
outsb
aad
push
jp
dec
dec
dec
loopne
je
push
lods
movsl
pop
scas
in
push
xlat
scas
nop
xor
sub
iret
or
shlb
push
xor
stc
std
call
lods
pop
popf
push
popf
into
sub
jnp
add
cmpsl
fistl
cwtl
push
add
cmp
pop
cmp
mov
sbb
push
xor
pop
daa
cwtl
mov
stc
sbbb
pop
hlt
out
insl
roll
in
jp
dec
lcall
scas
push
inc
imul
xor
mov
lock
adc
sbb
pusha
enter
inc
vpunpckhbw
loope
pop
cmp
imul
lds
aad
pop
lret
dec
data16
scas
aam
pop
sbb
and
sub
fildl
sub
dec
push
ficoml
aad
sub
add
inc
sti
aas
inc
dec
add
xor
or
inc
cmp
loopne
push
push
add
jbe
pop
lods
inc
mov
dec
gs
mov
cmp
add
adc
leave
add
xor
pop
ds
and
push
xor
fs
lds
mov
mov
dec
add
lea
sti
push
outsb
call
hlt
lods
pop
and
pop
pop
inc
iret
mov
push
jb
outsb
ja
stos
cmpsl
imul
xchg
jo
sub
lahf
adc
mov
jmp
sub
mov
sbb
mov
cmp
adc
dec
sub
adc
push
es
out
cmpsl
out
lret
inc
mov
jbe
jmp
xor
mov
notl
xchg
divl
push
adc
shlb
daa
enter
jge
rorl
mulb
stc
gs
insl
sub
lcall
adc
adc
in
lods
rorb
mov
inc
jl
fistpl
aad
daa
mov
scas
test
push
inc
out
mul
mov
outsb
lahf
push
mov
sbb
ret
divl
js
pop
repnz
pusha
int
push
mov
pusha
jle
lods
ljmp
icebp
scas
and
pop
cmp
std
fdivs
clc
popf
in
cmc
enter
xor
sub
ljmp
das
cmp
rcrl
fisttps
push
lret
jnp
aam
jno
mov
push
xchg
sarl
lock
icebp
inc
inc
sub
fs
int
inc
pop
insl
loopne
sub
lods
sti
mov
shlb
shll
mov
cmp
cs
or
pusha
stos
sub
sarl
xlat
stc
fwait
add
movsl
test
std
xchg
inc
popf
mov
fstpl
in
pusha
xchg
jne
add
inc
push
mov
lcall
es
sti
xchg
testl
dec
out
je
add
mov
out
ret
jnp
int3
or
mov
or
push
lcall
or
and
outsb
or
scas
fisubs
mov
jp
cld
xchg
or
and
ja
jg
adc
and
fimuls
sbb
das
or
and
lcall
push
jg
xchg
sti
and
fisubs
or
jnp
fdivl
lcall
or
outsb
iret
addr16
jbe,pt
jnp
or
ficoml
add
pop
lea
inc
addb
xchg
fprem
mov
adc
cmpsb
push
mov
imul
mov
pop
dec
dec
btr
loopne
and
add
addr16
pushf
mov
loope
sbb
xchg
inc
lahf
jne
pop
outsl
loopne
enter
std
call
xor
fisubrl
and
cli
test
out
add
hlt
cmp
push
ljmp
cmpsl
cmp
mov
ficompl
add
jge
pop
repz
imul
sahf
rcrb
fs
std
mov
stos
jg
dec
mov
xchg
call
cmpsl
jge
iret
arpl
scas
xor
xchg
ret
xchg
sbbb
cltd
fisubrl
sbb
adc
fsubrl
inc
add
sbb
test
imul
mov
or
push
sbb
imull
jno
xchg
xor
out
lahf
xor
sbb
push
std
in
and
dec
aad
mov
add
adc
adc
addr16
mov
outsl
shll
push
hlt
jp
in
lahf
popf
into
rcrb
repz
mov
fdivr
push
test
hlt
mov
sub
aaa
pop
not
and
add
cmp
std
in
sti
repnz
pop
cmp
ss
std
cmp
cmpsb
popf
xor
add
xor
cmp
sbbl
mov
mov
loopne
scas
adc
lods
mov
icebp
dec
in
insb
push
xchg
icebp
aas
insb
js
mov
mov
gs
sub
xchg
sub
xor
into
push
adc
dec
cmp
cmp
cmpb
je
inc
xchg
inc
dec
xchg
add
lret
push
lcall
loopne
inc
popf
out
pop
je
xor
sbb
push
xchg
sub
lods
mov
dec
rcll
mov
insl
jmp
punpckldq
mov
call
repz
int
jecxz
pop
cmc
adc
repnz
lret
decl
fwait
test
jbe
mov
sbb
push
xor
ja
inc
push
daa
das
or
push
sub
pop
in
fdivr
jo
iret
mov
mov
pushf
xor
in
cwtl
stos
sarb
jne
xchg
sbb
xchg
arpl
sub
fcomp
sbb
cmpsl
stos
rcl
jo
cs
push
xchg
jb
int
jmp
jno
dec
pop
push
xchg
pop
int
mov
fnsave
lock
and
popf
cmp
data16
push
jmp
ja
shrb
ss
out
mov
sub
cmp
data16
bound
ss
mov
int3
arpl
pop
dec
out
popf
ljmp
sub
lahf
pop
cmp
stos
lea
sar
loopne
jnp
pop
je
push
xor
adc
je
cli
rorb
adc
fs
insl
xchg
jae
leave
xor
adc
cwtl
jae
shll
mov
push
jl
xorb
or
mov
lret
adc
fs
frndint
jae
xor
jmp
sti
inc
ss
mov
cwtl
decb
lret
sti
aas
sarb
pop
ret
je
movsl
xor
xor
adc
pop
ret
xor
cli
out
jmp
mov
pop
out
sahf
jmp
and
sar
dec
in
cmc
hlt
aas
scas
add
mov
mov
lcall
pop
in
pop
popa
or
andb
mov
push
or
js
loope
in
movsl
lds
sbb
int
scas
test
push
jb
jbe
test
pop
and
fimull
jnp
mov
sti
outsb
sub
frstor
xchg
sbb
pop
inc
add
test
sbb
outsl
imul
cmp
xor
xchg
and
mov
ret
lret
cmc
push
push
insl
xchg
push
sahf
lods
jno
outsb
std
mov
fs
and
cld
pop
jb
lret
bound
out
negb
cmp
shrl
enter
and
imul
sarb
lds
in
and
cmpsb
pop
mov
out
mov
int
out
rcr
sub
fwait
mov
out
xor
inc
daa
outsl
insl
stc
rol
cmp
pop
add
push
insl
pop
outsl
xchg
fnstsw
cmp
cmc
icebp
mov
and
psrad
inc
and
dec
dec
ds
inc
sbb
std
and
xchg
test
lahf
popf
icebp
jl
cwtl
sub
popa
inc
xor
hlt
inc
inc
mulb
cmp
ja
mov
subb
andl
ss
addb
inc
mov
aam
jb
ret
test
xor
push
in
sub
test
xchg
in
mov
jae
cld
mov
sub
mov
cmp
xor
xchg
adc
popa
les
jbe
int3
xchg
leave
and
or
rcr
fs
bound
fwait
rcll
icebp
cmp
push
and
dec
push
fdivs
sub
jns
xchg
add
hlt
adc
jnp
adcb
jb
mov
fldcw
in
mov
imul
xchg
jne
insb
xchg
cmpb
test
lret
jae
fisttps
mov
in
mov
imul
mov
xchg
and
mov
mov
lds
scas
cmp
xchg
sahf
add
xlat
push
pop
pop
fiaddl
sbb
jmp
iret
fnsave
sub
lret
jecxz
adc
xor
out
in
add
lret
jns
adc
xlat
jnp
dec
lods
test
sub
jnp
pop
sbb
rclb
adc
and
pop
ja
dec
push
lods
hlt
adc
hlt
adc
adc
rclb
xchg
dec
xchg
outsb
sub
lahf
ret
xor
fbstp
dec
sbb
jmp
mov
mov
std
add
xchg
dec
inc
adc
inc
or
add
repz
xor
and
outsb
aas
xchg
push
pop
cltd
dec
or
mov
push
outsl
pushf
mov
pop
lret
pop
test
mov
addr16
je,pn
insl
int
int3
push
push
cmp
push
outsl
cmpsb
lds
jp
adc
dec
pop
ljmp
sbb
into
pushf
mov
les
cmovnp
jmp
rorl
pop
xor
xchg
lcall
inc
data16
js
xor
shl
out
popa
shlb
fstpl
xchg
jge
test
ret
fdivl
jae
enter
loope
mov
inc
scas
xchg
outsb
lahf
nop
sbb
in
repnz
mov
and
sarl
ss
aam
push
inc
pmaddwd
int
push
loopne
cld
jne
xor
mov
ret
fldl
add
inc
sub
sub
sub
arpl
fwait
mov
mov
sarl
pop
das
adcl
lret
xlat
push
sub
xchg
fstpt
shrd
pop
or
out
mov
adc
daa
inc
xor
adc
cli
mov
cltd
fstps
scas
iret
sub
cmp
mov
xor
inc
xchg
into
pop
fistl
insb
adc
int3
dec
pop
testb
add
cmpsl
cmp
js
mov
jbe
test
fldl
mov
repnz
jmp
mov
clc
sbb
cmc
inc
pop
pop
sbb
gs
fistpl
pop
fdivrs
int
leave
jecxz
scas
popf
xor
cmpsl
aam
fisubl
xlat
pop
cmp
inc
bound
imul
jbe
fldcw
adc
mov
lahf
jge
cld
mov
icebp
adc
cld
pusha
imull
or
push
xchg
xor
or
je
and
xchg
enter
mov
out
inc
loope
arpl
cmp
jge
push
mov
insl
jb
loopne
cld
outsb
mov
pop
test
fldcw
push
pushf
stos
push
add
fxch
jns
fcompl
stos
daa
das
pop
push
mov
sarb
sub
fadd
popa
and
mov
scas
fisttpll
sahf
fwait
push
hlt
mov
in
mov
sbb
dec
mov
mov
mov
mov
pop
mov
ret
hlt
xchg
vunpckhps
shlb
cmc
dec
push
xchg
sub
dec
sbb
je
sbb
xchg
push
jmp
or
loopne,pn
and
and
push
enter
shrb
jmp
xchg
jle
and
out
ja
push
pop
test
jl
into
lds
aas
jl
in
repz
sub
xchg
adc
sarb
jnp
cmpsb
sub
insl
stc
test
mov
inc
loope
lret
dec
hlt
add
leave
pop
cmpsb
call
scas
cltd
clc
xchg
repz
scas
hlt
xchg
sbb
pop
lret
imul
jns
xor
mov
std
xchg
inc
inc
mov
mov
push
movntps
inc
repnz
jb
sub
or
int3
sbb
es
xchg
sub
mov
cmp
mov
sub
stc
push
ficompl
sbb
jle
or
sbb
lock
rcrb
out
mov
cmp
stc
jle
jo
sbb
inc
sub
loop
fnstcw
xor
cmpsb
cmp
pop
imul
imull
mov
ljmp
std
xor
aam
test
inc
ret
lcall
jbe
pop
jl
xor
sub
sahf
xor
ret
ret
hlt
in
vandnps
out
xlat
cmpsl
ds
jecxz
pop
push
lds
pop
test
pop
xchg
jecxz
out
clc
lret
sbb
mov
and
cmc
mov
std
inc
pop
addl
in
lcall
enter
xchg
sbb
xor
repz
and
or
imul
sbb
ret
out
pop
fwait
add
or
es
push
mov
sub
js,pn
xchg
insb
or
and
pushf
scas
dec
je
jae
jle
inc
cmp
jge
and
stos
cmp
jbe
out
bound
adc
lahf
dec
loopne
test
sub
adc
pushf
xchg
test
jne
xchg
scas
cwtl
stos
orl
inc
inc
pusha
xchg
stos
cli
mov
jne
xchg
cwtl
aad
mov
rcr
imul
push
outsb
inc
or
fwait
lcall
xor
xor
xchg
mov
jmp
fistpll
in
jo
xor
xchg
aas
add
dec
pushf
sti
cmp
cltd
enter
pop
cmp
imul
jns
xchg
jae
adc
clc
or
xor
add
call
dec
mov
jo
loop
add
shrb
inc
outsl
stos
inc
cs
sti
mov
jns
xchg
push
sbb
mov
pop
dec
sbb
repnz
test
mov
jg
or
or
test
fs
lahf
hlt
adcl
ja
jae
cli
mov
testl
imul
leave
xchg
mov
fsubs
or
adcl
xchg
sub
and
test
mov
test
mov
mov
and
push
adc
icebp
sbb
imul
cmc
sbb
lahf
in
int3
inc
cmc
shrl
gs
mov
jmp
iret
adcb
fisubs
jae
pop
sub
xchg
in
cmpsb
repz
mov
and
adc
icebp
dec
push
xor
cmp
add
ljmp
mov
je
mov
fistl
movsl
cld
sbb
daa
inc
outsb
sub
stc
sub
mov
cld
jle
jae
jae
loop
xchg
jns
and
push
js
iret
sbb
test
push
ss
lret
nop
fdivr
adcb
xchg
mov
mov
dec
stc
inc
or
fst
fsts
addr16
jp
mov
in
adc
rcll
icebp
mov
cmp
in
pushf
or
mov
inc
es
dec
dec
loop
adc
test
fdivs
or
fldl2t
or
popa
pop
and
sub
js
mov
cmc
mov
leave
jns
dec
mov
in
cmp
dec
shrb
les
add
cmpsl
test
orl
je
cs
pop
lock
jae
pop
xlat
and
jnp
pop
and
xchg
in
shlb
pop
div
lea
std
cli
push
test
adc
jae
leave
sub
lock
sub
cmc
cmp
push
int3
sub
shlb
and
stos
adc
insb
mov
in
inc
pop
mov
jg
push
aad
xor
out
insb
sub
jno
inc
loopne
cmp
adc
popf
xlat
add
cmp
lock
aad
out
mov
mov
lret
push
mov
fdivp
repnz
test
jle
sarl
pop
ror
loopne
cmp
ret
rcl
shlb
jp
add
cmp
add
aaa
call
call
pop
and
add
cmp
mov
std
xchg
and
sbb
xchg
popa
enter
cmp
loopne
push
bound
je
clc
mov
rcrl
vpminsw
mov
sahf
xorl
xchg
mov
cltd
inc
scas
shll
jecxz
cmp
pop
cltd
in
add
dec
pop
mov
cmpsl
add
bound
jb
repz
and
into
fidivs
pop
mov
ljmp
imul
subb
jo
xchg
lock
aaa
xor
jp
insb
mov
vrcpss
out
adc
dec
cmpsl
hlt
xchg
loop
pop
das
or
inc
jl
and
xor
filds
fisttpll
xchg
ficoml
cmpsb
les
repz
push
inc
pop
dec
pop
xor
out
mov
inc
and
arpl
loope
mov
sti
add
scas
xchg
inc
and
cmpsb
mov
popf
sub
scas
or
fists
inc
mov
mov
inc
sbb
sub
cmp
dec
and
jb
pushf
pop
sbb
test
sub
sbb
test
fwait
outsl
rcll
mov
jecxz
push
rcll
push
pop
in
cmp
imul
mov
mov
fildll
ret
and
xor
popa
pop
cmp
mov
loope
cmpsl
imul
jg
out
xlat
push
pop
sbb
daa
lret
mov
sub
ja
add
and
jb
lods
mov
leave
jle
pop
movsb
mov
or
or
mov
push
xor
int
add
sbb
call
or
push
movsl
inc
pop
jb
sub
insl
sub
push
mov
adc
bound
mov
or
jae
andb
adcl
sbb
es
push
movsl
or
pushf
cmp
or
bound
loop
scas
aas
and
fwait
xlat
int3
outsl
mov
loopne
mov
in
pop
fiadds
pop
mov
clc
or
and
test
into
jno
js
and
sar
jle
xlat
loope
push
mov
mov
xchg
stos
mov
push
daa
into
ja
outsb
clc
outsl
test
fadd
pop
aad
aas
insb
push
mov
pop
cmc
jecxz
cmp
pop
jmp
rol
pop
xor
inc
inc
cwtl
inc
pop
cmc
cmp
popa
test
roll
mov
icebp
or
xchg
lock
std
sbb
in
mov
arpl
sbb
jne
insl
mov
push
out
inc
jle
mov
dec
iret
cltd
add
mov
inc
in
jbe
ljmp
push
fnstsw
out
inc
int
into
idivb
adc
jne
jg
jmp
dec
xor
sub
stos
in
cmovl
push
jae
out
pop
dec
xchg
movsl
sti
jecxz
add
and
test
mov
or
ljmp
lock
or
mov
out
cltd
dec
clc
sahf
xor
movsb
mov
xor
lcall
sti
inc
sub
mov
std
inc
stos
pop
inc
ret
xor
aam
sub
jmp
fistpll
pop
popa
cmp
cli
push
inc
lcall
fcoml
xlat
in
pop
adcl
ss
pop
dec
test
pusha
scas
fsubl
xchg
mov
iret
jno
in
sub
or
cmp
in
nop
imul
pop
xor
sub
sbb
inc
push
lds
icebp
xchg
cs
imul
outsb
jge
stos
out
test
into
inc
fucomp
jp
lea
add
cmpsb
mov
data16
mov
add
enter
fwait
sbb
jl
mov
inc
test
sbb
movsb
in
dec
sub
gs
hlt
bndstx
jle
or
ds
inc
mov
and
arpl
pop
shrl
adc
or
mull
inc
shl
or
adc
into
insl
loope
cwtl
movsb
je
insl
mov
mov
pusha
lock
outsb
lods
repz
mov
iret
cmc
int3
jge
jnp
ficompl
mov
push
imul
jmp
or
jge
out
sub
fwait
and
cmp
inc
lods
test
and
jae
popf
xlat
cmp
mov
pop
adc
insb
dec
pop
out
mov
addl
int3
cmpsl
inc
jbe
fdivl
es
push
inc
inc
shl
mov
mov
xchg
jnp
insb
fs
push
add
fwait
xor
xor
or
mov
int
xor
push
lret
fdivrs
pop
imul
mov
mov
push
jno
add
leave
int
sti
aad
pop
orb
pop
cmp
lock
adcl
imul
sbb
stos
push
mov
loopne
insl
mov
sbb
sbb
pop
loopne
or
in
fsubs
push
sbb
cmpsl
adc
mov
in
insl
inc
sahf
scas
lret
aas
mov
adc
lcall
push
mov
stos
add
pop
sbb
push
dec
testb
jge
xor
imul
dec
scas
cmp
or
push
cmp
xlat
aaa
pop
jmp
dec
pop
pop
mov
popa
cmp
xchg
add
test
out
cwtl
test
dec
mov
ret
cmp
sub
xchg
aad
sub
addr16
arpl
mov
or
inc
mov
push
in
push
fsubrp
xchg
inc
subl
add
jl
aad
js
addr16
in
scas
add
stos
loope
xchg
pop
add
push
stos
mov
add
mov
and
mov
push
hlt
pop
lock
cmp
pop
je
mov
aaa
clc
lods
dec
pop
inc
mull
aaa
addl
movsb
pushf
mov
push
fimull
dec
lods
mov
xchg
jns
outsb
mov
out
cmc
rcll
and
orb
sub
add
mov
testb
or
adc
sti
iret
lcall
jne
call
mov
pop
icebp
push
loop
mov
cmpsl
add
xchg
push
jne
pop
jge
in
and
aas
or
cmp
dec
aad
add
das
or
dec
pop
insl
sub
test
int3
mov
sbb
das
mov
je
jle
mov
mov
mov
mov
mov
xor
in
push
mov
cmp
sub
mov
pop
xchg
cwtl
pop
mov
mov
add
inc
out
scas
aad
lock
sub
push
and
repnz
mov
lods
orb
hlt
outsb
push
faddl
das
cmp
fidivs
xchg
lock
add
rcll
xor
shlb
inc
orl
jo
ficoml
pop
out
mov
rcll
outsl
push
ljmp
movsl
lds
adcb
pop
jle
sub
sbb
xor
mov
loop
call
leave
scas
sub
mov
mov
mov
xor
jo
and
jge
xlat
jp
jno
mov
lds
sbb
mov
out
scas
out
jbe
push
gs
lahf
lods
loop
sti
mov
sub
inc
in
jl
stos
pop
mulb
cmpsl
jmp
push
aas
mov
push
lods
xor
icebp
nop
enter
gs
mov
push
jbe
fsubrs
inc
hlt
mov
dec
and
cmp
enter
mov
lea
xor
xchg
movsl
cmp
add
mov
or
lea
lods
and
pop
pop
push
add
adc
std
sub
push
mov
mov
rorb
cmp
sbb
push
out
push
mov
push
sub
leave
aad
cmp
mov
imulb
cs
mov
je
pop
outsb
stc
jno
lods
xchg
mov
pop
fs
out
stos
movsb
ljmp
mov
out
jo
nop
sub
test
orb
or
nop
or
add
test
and
movsl
mov
add
test
arpl
and
jle
jmp
push
jecxz
arpl
pop
sahf
and
push
lret
in
cmp
lods
dec
mov
mov
mov
mov
jbe
repz
rolb
adc
and
xor
fdivr
push
sti
adc
xor
test
stos
push
pop
mov
das
movsb
adc
mov
lcall
pusha
loop
pop
sbb
out
jb
movsb
cli
outsb
push
sbb
je
xchg
int
fs
int3
stos
movsb
pushf
fucomi
sbbl
in
pop
cmp
sbb
btc
insb
adcb
push
pusha
ss
jo
or
dec
repnz
adc
pop
and
add
lods
mov
scas
cmp
in
repnz
xlat
stos
mov
push
xor
popf
out
popa
or
outsl
lahf
inc
mov
xor
aam
and
dec
or
adc
sbb
xor
adc
inc
pusha
jno
repnz
jbe
fildll
mov
mov
insl
out
lret
mov
arpl
out
das
pop
adc
aam
mov
and
cld
mov
xor
scas
imul
fldl
mov
decl
scas
lcall
add
cmp
and
idivb
sahf
and
test
mov
daa
xor
add
movsb
pop
mov
stos
sbb
inc
shlb
mov
in
clc
push
dec
sbb
push
cmpsl
add
cmp
push
jne
std
sub
dec
int
and
dec
ds
mov
cli
xchg
dec
xchg
xchg
sub
clc
in
dec
add
inc
adc
popa
rcr
lahf
shl
push
inc
xor
sbb
xor
or
inc
in
movsb
clc
leave
clc
testb
mov
jecxz
loope
daa
mov
shrb
inc
dec
inc
xchg
popa
mov
jle
pop
push
mov
jg
mov
sub
cmpl
repnz
aam
push
sub
ud1
mov
pop
mov
mov
push
mov
clc
out
xchg
xor
mov
or
xchg
shlb
ja
fnsave
lods
xchg
push
pusha
cmp
scas
enter
jno
cltd
sub
nop
popf
sar
cmp
pop
outsb
add
iret
mov
and
sub
push
inc
push
leave
test
push
loopne
outsb
idivb
hlt
and
jl
dec
push
ljmp
movsb
fcompl
ficoms
xor
jno
clc
cld
mov
dec
sub
xor
cmp
jo
jp
arpl
insl
adc
inc
sub
xchg
fbld
sub
out
jle
addr16
fildl
cmpsl
jns
cld
rcrl
imul
lret
das
sbb
aad
xchg
inc
xor
xchg
push
fcoml
cmc
stc
or
mov
rcrb
pusha
rclb
fistl
loope
push
ficomps
aaa
movsb
push
movsl
add
lret
jne
pushf
cmpsb
test
pop
aaa
push
mov
add
loopne
pop
rorb
jae
rep
add
inc
mov
mov
mov
outsl
outsl
add
mov
add
mov
xchg
call
lahf
sbb
or
push
sub
pop
mov
decb
push
leave
pusha
cmp
out
add
mov
leave
insl
leave
int3
xchg
ss
jnp
dec
and
fidivs
xorb
js
pushf
fldt
dec
fdivrs
jo
adc
jge
and
or
push
push
in
int
xchg
inc
loop
cmp
xchg
in
imul
xchg
sbb
mov
sub
dec
cmp
sbbb
scas
mov
mov
adc
add
or
dec
int3
imul
leave
push
xchg
xor
lods
mov
fdivs
jmp
popf
push
xor
jb
push
dec
adc
mov
xchg
sub
lds
repz
lock
sub
dec
jecxz
mov
movsb
cmp
test
cmc
int
lds
fimuls
sub
int
push
sub
inc
sbb
pop
dec
bound
iret
aam
mov
mov
fstpl
push
sub
jle
mulb
mov
outsl
or
sub
gs
mov
fldl
xor
ds
nop
jo
aad
sub
inc
fadd
lds
xor
pop
icebp
cltd
sti
jb
in
cs
pusha
or
cmp
mov
xchg
cs
dec
push
jmp
inc
mov
mov
fists
push
xor
out
xchg
int
mov
xchg
jl
stos
inc
xchg
add
jae
sub
cmpsb
pop
xchg
cli
pushf
lcall
ss
inc
xchg
je
imul
jnp
fbstp
pushf
xor
inc
adc
lcall
stos
jne
fnstenv
or
popa
jge
and
xchg
enter
jnp
fsubrs
add
cmpsb
pop
in
test
mov
lods
jmp
cmp
jno
pop
cmc
mov
inc
ficomps
mov
xchg
aas
and
mov
jns
push
ljmp
jno
pusha
push
add
ret
mov
sbb
loopne
aaa
adc
daa
pop
cmc
push
lret
into
gs
jbe
adc
jne
adc
mov
js
lahf
aad
rolb
xchg
sub
dec
or
xchg
cmp
pop
sbb
dec
xchg
cmp
ret
loopne
dec
montmul
cmpsb
adc
incb
mov
sub
dec
loop
es
mov
divb
insb
inc
xchg
jo
jno
sub
mov
test
jb
dec
add
xor
xchg
sub
push
outsb
add
push
cmpsb
ds
mov
pop
js
xchg
mov
xchg
sub
cmp
cmp
push
sub
repnz
dec
fsubrs
mov
mov
call
or
insb
cmp
gs
mov
popa
clc
sti
adc
mov
adcb
aad
mov
outsl
push
mov
imul
call
jmp
sbb
push
cmp
xchg
mov
pusha
not
and
adc
mov
fmuls
or
addr16
pop
divb
sbb
dec
into
gs
push
out
test
pop
out
shll
nop
test
hlt
mov
lcall
mov
dec
jecxz
insl
pop
negb
test
push
push
cmp
xchg
cltd
sahf
cs
icebp
mov
push
lcall
lock
scas
inc
mov
dec
pushf
xchg
adc
mov
mov
lahf
mov
push
out
mov
sub
lahf
xchg
test
leave
xchg
mov
mov
mov
and
xchg
push
mov
mov
loope
xchg
testl
popf
inc
push
fwait
xor
cmpsb
ret
pop
aam
mov
in
adc
push
dec
mov
add
lahf
mov
int
sti
xchg
shr
mov
sbb
dec
loopne
ds
mov
clc
je
mov
fldt
fadds
xchg
xchg
cs
ret
into
gs
mov
mov
clc
push
lcall
repz
push
in
mov
inc
fstl
cmc
mov
rcl
hlt
pusha
scas
inc
xchg
sub
pop
xchg
test
shlb
popf
pop
inc
fiaddl
cmc
mov
jno
int3
mov
js
cmpsb
lods
sarb
add
ljmp
add
mov
jnp
dec
stos
sbb
imul
mov
or
fisubrl
addb
repnz
fnsave
sbbl
mov
repz
addr16
ficoml
mov
insb
mov
imul
jb
mov
mov
imul
pusha
mov
js
mov
pop
out
xchg
sub
xor
arpl
into
movsl
mov
push
test
sbbb
mov
shl
pop
repnz
xor
arpl
pop
call
inc
mov
out
aam
pop
repnz
jns
fbstp
scas
mov
fisubs
pop
mov
inc
ret
pop
ja
inc
fcmovbe
mov
xchg
in
addr16
jp
push
out
outsb
test
repz
dec
jns
jnp
push
call
fcmovnb
sbbl
dec
das
jns
jg
pop
test
xor
decb
mov
gs
dec
in
jg
call
cmp
xchg
imul
hlt
jmp
cmp
imul
or
inc
mov
jne
popa
clc
imul
lea
cmp
in
jo
sub
mov
inc
sub
jbe
addr16
js
or
in
fildl
sahf
jbe
imul
jmp
jne
mov
jb
clc
mov
outsl
iret
data16
add
xor
and
jg
insb
add
mov
lock
leave
pusha
dec
cs
negb
call
add
jb
aas
mov
cmp
and
inc
mov
out
and
int3
arpl
cmp
xchg
xchg
sub
sub
sub
adc
mov
fcoml
idivl
fdivrl
push
jle
out
das
push
and
add
pop
testb
mov
add
sub
repz
dec
das
ret
aad
mov
sbb
mov
and
mov
xorl
cltd
xlat
repnz
mov
arpl
fdivl
int
jb
xchg
cmp
ret
push
dec
fisttps
cld
xchg
mov
fidivl
xchg
jb
enter
inc
push
sbbb
fildl
jne
sbb
jns
pop
loopne
xchg
aam
push
or
fsubrs
pusha
cmp
xchg
clc
mov
shrb
in
loope
call
ret
repz
cmpsb
cmp
jbe
pop
loope
sbb
lds
dec
aas
and
push
out
or
int3
adc
inc
sbb
rorb
mov
or
mov
jmp
or
fdivl
adc
inc
or
or
mov
or
cmp
mov
aas
push
rclb
lock
mov
xor
divb
jmp
inc
inc
xlat
je
mov
cmp
es
mov
insl
lcall
shl
push
and
in
add
fsubr
jne
sahf
mov
xchg
jo
enter
mov
lods
ret
sbb
cmp
add
jae
and
insl
pop
mov
fldcw
int
cmp
xor
imul
xor
mov
xchg
shrb
fwait
loope
lea
mov
fidivs
or
ffreep
pop
daa
ds
loope
dec
adc
insb
andl
cmp
dec
arpl
jmp
jl
add
xchg
xor
lcall
jae
jmp
or
and
pop
popf
inc
push
call
out
xchg
fnsave
lea
in
int3
adc
ficoms
mov
cld
out
sub
pop
pop
mov
add
addb
mov
mov
insl
mov
mov
subb
mov
testl
push
adc
xchg
cmpsl
imul
mov
fadds
mov
shl
mov
cmp
and
inc
mov
mov
cmp
pop
mov
insb
gs
cmp
and
jl
cltd
mov
aas
test
jo
aas
mov
mov
inc
pushf
push
mov
imul
dec
jnp
ret
arpl
adc
cmp
jmp
jb
pop
dec
and
fidivl
sbb
adc
push
scas
mov
dec
gs
pop
or
mov
test
mov
js
push
lcall
out
mov
movsb
ret
pop
into
lcallw
mov
in
lea
lds
xlat
cld
mov
fstps
mov
sbb
enter
jmp
add
adc
loopne
add
lcall
push
mov
movsbl
popa
sbb
in
inc
call
cld
sbb
and
adc
jnp
je
adc
and
push
push
mov
ds
cmp
jne
and
or
arpl
testl
add
dec
and
cmp
cmpsb
pushf
rorb
fisttpll
xchg
mov
adc
xchg
xchg
orb
fildl
sahf
jb
sub
mov
outsb
dec
jb
push
nop
mov
ficoms
adc
hlt
jae
xchg
dec
mov
add
dec
and
cmp
or
fwait
xchg
xor
and
sti
cs
insl
clc
lahf
sbb
push
cmpl
mov
jns
je
je
int3
xchg
imul
fadds
pop
jae
out
xor
and
jo
movsb
test
mov
cwtl
xor
cld
add
lret
sbb
mov
cld
and
xlat
aam
lock
mov
repz
jae
adc
jbe
push
mov
nop
cmp
insl
rolb
xchg
xchg
mov
pop
mov
imul
or
enter
icebp
jle,pn
mov
ds
divb
mov
xor
adc
dec
mov
test
jmp
cmp
mov
inc
cs
out
push
cmp
mov
shrb
in
loopne
xchg
je
and
sbb
ljmp
and
and
fnstenv
jbe
fiadds
inc
fstps
mov
stos
xchg
nop
xor
imul
mov
daa
mov
adc
xchg
xchg
ja
push
lret
jle
push
je
rcrb
or
ja
mov
divl
test
adc
clc
das
jns
jnp
jmp
dec
popa
test
xor
imul
inc
cmp
fidivrl
test
out
mov
mov
inc
add
pop
jle
arpl
mov
loope
cld
sbb
cmpsb
fiadds
mov
xchg
xchg
inc
sbb
lods
pop
aaa
lahf
js
shll
dec
clc
lahf
xchg
pop
jnp
mov
and
sbb
rorb
loope
dec
xor
nop
ds
stc
xchg
sub
ja
adc
daa
add
mov
ret
fisubs
adc
outsl
loop
add
inc
mov
out
mov
mov
cli
mov
aad
fisttpll
fbstp
xor
leave
popf
push
out
out
clc
and
jb
loopne
fcom
dec
ficomps
arpl
cmp
and
mov
jno
sub
lahf
xor
xchg
pop
cs
hlt
xor
add
xor
sti
xor
lahf
mov
adc
stos
mov
sti
mov
cld
sbb
xchg
cmp
pushfw
jo
imul
and
xchg
xchg
mov
mov
push
pop
repnz
inc
fstpt
loope,pn
test
andl
rclb
imul
loopne
in
mov
jmp
cmp
jnp
mov
add
jae
ret
jg
jecxz
sarb
or
add
adc
pop
mov
push
or
ss
pop
jb
mov
lock
mov
push
clc
scas
stos
pop
stc
test
ret
cmp
lahf
fcmovnbe
inc
fistpl
loop
dec
loopne
pop
fldcw
xor
bound
push
xor
sub
test
mov
rcr
roll
push
mov
jmp
inc
rorb
mov
daa
mov
cli
inc
sarl
pop
iret
mov
sbb
lahf
ss
dec
out
dec
and
jnp
aas
hlt
dec
lea
push
data16
inc
xor
mov
add
andb
jns
in
js
stos
ds
dec
rcl
jl
lcall
xchg
add
inc
xchg
mov
dec
mov
jge
push
iret
lret
cmpsl
jb
xor
hlt
pop
adc
xlat
cmp
adc
mov
loope
jo
bound
inc
lods
orl
or
cmpb
and
push
adc
pop
out
pop
clc
xor
push
std
lods
sub
dec
jns
fistl
xor
push
push
into
fists
inc
cwtl
orl
jne
jle
mov
sub
insl
add
mov
fwait
xchg
clc
adc
lods
and
js
ss
fcomps
or
fldcw
and
sbb
adc
xor
movsb
pop
jb
mov
dec
pushfw
cmp
mov
cmp
jns
popa
pop
sub
and
clc
dec
jge
loopne
fwait
xor
inc
std
mov
pop
adc
fmuls
sarl
in
in
mov
shl
loopne
lds
popf
fsubs
orb
xor
sti
jno
jecxz
mov
adc
jae
or
push
orb
pusha
in
pop
mov
or
sub
out
enter
lret
lods
lods
inc
fiadds
leave
cmp
ret
ret
mov
lods
pusha
adc
je
js
sbb
movsb
pop
stos
mov
shl
in
jo
mov
lcall
xor
adc
jge
nop
jl
xor
es
gs
cs
and
aad
cwtl
inc
test
sbb
fwait
xor
cwtl
andb
js
loopne
fcmovne
pop
ret
aad
fbstp
ret
aaa
fadd
inc
jecxz
push
enter
xchg
and
cmc
mov
std
dec
mov
pop
popf
xlat
pop
add
xor
mov
cltd
fiadds
adc
ret
and
icebp
shll
shrl
bnd
mov
rclb
loop,pn
adc
ss
aad
sti
mov
enter
adc
icebp
lcall
ficoml
inc
mov
dec
jae
lret
mov
xor
rcll
into
outsl
xlat
out
lds
fdivl
int3
gs
xchg
arpl
sbb
arpl
in
std
push
xchg
cs
mov
movb
push
popf
movl
mov
inc
icebp
jae
rcrl
jge
enter
cmp
test
add
popf
add
jle
jnp
mov
push
in
imul
iret
jecxz
pusha
stos
adc
inc
mov
xor
bound
test
insl
shlb
inc
mov
xchg
fistpl
in
xor
nop
push
and
in
xchg
jmp
fnstcw
out
cmp
cmp
in
and
outsl
adc
push
mov
adc
jge
insb
mov
pop
in
pop
shl
jg
or
mov
hlt
lock
sub
sbb
cmp
sub
pop
dec
outsl
movsb
push
push
fmuls
pop
dec
mov
fmull
lcall
test
push
out
test
xchg
inc
xchg
addr16
test
adc
movsl
pop
nop
pop
iret
aas
hlt
les
pusha
inc
mov
mov
data16
dec
call
jle
cmp
sub
jge
pop
aam
xor
rcrl
jecxz
push
sub
mov
and
insl
cwtl
int3
insl
or
jl
push
and
pop
mov
es
xor
dec
int3
push
loop
dec
mov
or
ds
ljmp
sub
test
and
mov
popf
xor
loop
push
call
scas
stos
adc
jecxz
mov
jmp
cmp
sub
lods
jae
insl
pop
pop
xor
mov
xor
mov
cwtl
cwtl
loop
sub
dec
rcrb
adc
in
insb
dec
shlb
or
iret
add
andl
jne
mov
cld
push
test
rorb
inc
iret
cs
push
cmpsl
insb
ja
mov
in
jne
imul
and
sub
in
inc
ss
and
adc
xchg
pop
js
and
ja
rorb
rclb
inc
sub
xchg
pop
jns
scas
cmp
adc
dec
jb
ds
dec
push
lret
xlat
cmp
les
sarl
cmp
push
test
in
pop
mov
jmp
mov
int3
call
test
add
and
je
shr
jg
mov
lcall
daa
push
lret
jl
inc
mov
lods
imul
out
or
mov
repnz
and
enter
sbb
dec
subl
mov
std
dec
int
xchg
fiadds
mov
rorb
add
push
rcrl
push
lds
cmp
decl
jmp
out
dec
aam
in
dec
out
insl
mov
int3
inc
stos
adc
movsb
pop
mov
fidivrs
sahf
xor
lods
arpl
fdivrs
fistps
fdivrl
and
cwtd
aad
aad
cmp
pop
rclb
mov
fsubl
cmpsl
imul
mov
into
jns
icebp
sbb
sub
fsubrs
or
stos
jmp
out
scas
movsb
dec
mov
das
ret
popa
fwait
les
mov
jecxz
push
out
cltd
aad
addr16
rorl
xchg
cwtl
dec
les
push
adc
addr16
fmuls
int
orl
push
notb
mov
nop
lret
test
lock
fcoms
mov
leave
adc
mov
mov
pusha
idiv
and
jmp
aaa
mov
dec
adc
scas
cmpsb
inc
lea
aad
subl
mov
sti
pop
jecxz
jb
xchg
cmpsl
iret
dec
cli
and
inc
mov
add
sbb
mov
and
xchg
push
push
je
ss
and
push
pusha
cmpl
mov
pop
mov
imul
cmp
aaa
push
pop
mov
push
adc
nop
sub
xor
and
add
dec
xchg
movsl
loop
push
adc
jp,pn
stc
and
aaa
rolb
stos
enter
pushf
outsl
repz
xchg
rcrb
push
adc
out
add
fisttpl
jne
cwtl
mov
sbbl
stc
test
std
ror
push
mov
shll
jecxz
jmp
mov
jns
add
add
jmp
xchg
push
mov
inc
xor
movsb
pop
shlb
aas
mov
or
jp
scas
movsl
push
push
sbb
mov
cltd
loope
paddq
std
fdivl
fnstenv
sub
pusha
mov
jmp
xor
std
push
mov
ret
shl
sarb
repnz
mov
or
mov
ljmp
fnsave
xchg
jge
add
jns
stc
imull
in
ret
xchg
sbb
mov
movsl
and
or
stos
jne
cltd
inc
out
inc
jno
push
ret
call
ret
ret
cmp
notl
jp
movsl
hlt
sbb
sub
and
clc
outsb
pop
lret
xor
popf
mov
cli
jae
les
stos
or
cmpsl
rorb
mov
sub
ret
mov
sub
jp
aad
add
push
xlat
out
jae
les
or
ret
popf
mov
lret
sbbb
aam
ret
dec
lods
shl
and
add
ds
fcmove
push
in
shll
xchg
ret
fisttpll
fcompl
lods
shll
and
lahf
adcl
loope
cmp
jecxz
dec
inc
dec
mov
dec
lds
sub
mov
cmp
enter
pop
scas
loope
fidivl
sarb
stc
aaa
mov
cld
cmp
sbb
cmp
fwait
xor
add
in
das
xchg
ss
loopne
rclb
pop
push
and
stos
aas
adc
xchg
sub
inc
hlt
aaa
bound
fbstp
aas
fldenv
jge
mov
push
cmp
ret
fsts
push
cmpsb
pop
fsubrs
lods
pop
jne
xchg
sub
xchg
mov
push
sub
add
sub
cld
xchg
xor
lahf
xchg
pop
mov
dec
mov
and
lea
jecxz
or
mov
loope
lds
mov
fcoms
in
fcmovne
inc
sarb
push
push
in
sub
push
jns
out
pop
ds
mov
push
sub
ror
sbb
into
lret
sbb
mov
sti
adc
fsubr
test
out
mov
fxch
insl
lahf
rcl
adc
rcrl
fmull
jecxz
lods
fiadds
mov
or
mov
shll
in
sbb
mov
fmul
and
out
insb
fidivl
ret
and
ds
xchg
jecxz
fnsave
jne
mov
insl
lahf
dec
add
sahf
dec
js
push
mov
imul
leave
ljmp
mov
loop
pop
repz
lods
sbb
cs
add
dec
addr16
and
sbb
pop
inc
jmp
xchg
xchg
sub
or
lret
inc
sahf
xchg
xor
lcall
mov
push
and
lock
lods
jae
lock
les
mov
out
cli
sbb
out
shrb
cmp
pop
cmc
cmc
cs
xlat
in
test
jb
mov
in
scas
sub
jnp
sbb
pop
pop
mov
dec
adc
jge
test
xchg
nop
mov
ja
cmp
adcb
jo
mov
test
mov
xchg
push
gs
push
pop
inc
xlat
test
push
iret
xor
push
fildll
adc
jo
popf
ja
bound
test
addr16
pop
int
into
pop
icebp
loopne
lds
add
shrl
loop
stos
clc
xor
into
xor
lret
push
sub
data16
xchg
xor
jbe
add
addr16
cmp
push
lea
enter
stos
ficoms
mov
test
jmp
or
sub
mov
push
xchg
mov
mov
lds
aad
inc
cld
out
sbb
or
das
add
loope
loop
std
movsl
and
stos
scas
inc
fisubs
xchg
nop
jg
mov
xor
mov
xor
sbb
push
push
jg,pt
andl
xor
jno
ljmpw
dec
loope
xchg
repnz
cmpl
cmp
pop
jns
or
sub
lods
pop
dec
xchg
dec
mov
outsb
popf
pop
cmc
ret
mov
or
lcall
insb
jl
pop
adc
popf
dec
push
mov
enter
aas
jmp
das
fiaddl
fwait
xor
popa
cmp
cs
inc
cmp
lret
sub
pop
shrl
mov
out
cmpsb
mov
ds
lods
mov
add
shl
dec
shlb
cli
cmp
mov
clc
sbb
add
popf
ret
hlt
mov
sbb
mov
arpl
fwait
repnz
ret
pop
into
sahf
enter
or
jl
js
movsb
xor
xchg
out
rcl
testb
sbb
push
iret
sbb
das
loope
xchg
xor
adc
outsb
push
stc
outsb
std
out
into
sub
in
xchg
shl
aad
or
aam
fs
and
jl
mov
lods
dec
loopne
xchg
cwtl
mov
data16
pop
adc
cltd
mov
jmp
xchg
sub
fldt
xor
mov
orl
mov
mov
loopne
mov
lods
idivl
sub
fistl
dec
cwtl
xchg
outsl
mov
cmp
das
stc
pusha
xchg
sub
adcl
and
push
orps
add
test
inc
mov
cmp
lahf
inc
ret
orl
daa
adc
ja
dec
cmp
movsb
mov
sti
sbb
dec
sub
jg
rorb
aas
xor
orb
andb
push
adc
lea
ja
and
cmp
iret
cmp
inc
mov
or
lds
xor
rolb
in
mov
add
push
xor
dec
decb
mov
sub
ret
inc
push
pusha
div
es
ficoms
push
aas
repnz
pop
push
mov
cs
jo
mov
push
int3
sbb
popl
cs
push
adc
and
fimull
xor
inc
int3
shlb
arpl
hlt
mov
sahf
cld
lret
cld
test
add
xchg
mov
and
imul
sub
jne
dec
lock
mov
sub
mov
das
loopne
inc
dec
bound
xor
rclb
fldl
mov
cmc
inc
mov
lret
pop
lret
fsubr
add
mov
popa
test
add
popa
xchg
imull
ret
push
imul
ds
pop
aad
jl
mov
jp
pop
mov
das
sti
aas
je
dec
movb
imul
pop
es
fcoms
fldt
mov
or
out
xor
mov
adc
mov
dec
xor
movl
leave
mov
adc
lahf
mov
inc
sti
and
stc
xor
inc
jbe
les
push
xchg
jge
jne
fldl
lahf
lea
xor
outsb
pop
jne
bound
ss
cmp
adc
mov
xorl
sub
mov
cltd
rorl
mov
dec
movsb
or
dec
les
sahf
and
dec
pop
sbb
push
mov
pop
jo
scas
bound
cltd
test
dec
mov
mov
fiadds
mov
in
bound
sti
push
mov
mov
int
pushf
mov
or
mov
jmp
and
cmp
js
out
jge
std
je
shlb
iret
in
jg
int3
movb
in
or
rol
jecxz,pt
lds
loope
testb
call
or
sbb
cli
push
push
out
iret
and
push
and
xor
pop
fiadds
xlat
mov
inc
and
push
adc
out
sub
push
mov
insb
test
insl
or
fwait
subb
pop
xor
mov
xor
insb
push
icebp
sbb
cmp
mov
sbb
and
cmp
lock
cmp
adc
daa
pop
cwtl
xor
sbb
aas
xchg
mov
mov
cmp
outsb
fwait
imul
scas
pop
push
push
js
dec
jae
jg
sub
or
shrl
jns
and
ficomps
inc
push
das
xlat
or
cs
mov
cmc
in
das
jmp
mov
dec
pop
pop
sbb
sbb
inc
or
lea
decb
lcall
test
mov
std
jmp
mov
out
into
inc
into
push
ret
fidivrs
and
mov
sbb
nop
frstor
in
imull
ret
aam
add
lret
arpl
out
jnp
mov
std
cmp
ret
sub
mov
stc
and
mov
jmp
loope
nop
rcrb
pushf
fstpt
and
push
mov
push
clc
sub
adcl
sub
les
cmp
jg
outsl
enter
out
into
mov
add
cltd
xchg
fisubs
test
pop
xchg
aas
repz
xchg
xchg
arpl
jmp
add
mov
adc
xchg
int3
mov
movsb
inc
push
sarl
push
pop
icebp
or
inc
xchg
mov
cmp
sar
and
jg
xorb
cmc
sbb
mov
pop
or
out
es
cmp
xlat
rcr
inc
mov
inc
lret
jno
mov
xchg
inc
sub
inc
mov
cmp
push
push
jge
in
dec
sub
jp
imul
xchg
inc
mov
push
add
sub
std
jae
ficoml
data16
jp
sbb
inc
fst
pop
out
sbb
repnz
into
xor
push
int
pop
ficoml
mov
jmp
mov
xchg
mov
mov
jns
add
outsb
gs
or
mov
or
push
push
xchg
push
enter
mov
ds
outsl
ret
dec
loopne
nop
sub
incl
dec
loop
push
imul
in
xchg
pop
inc
fisubl
js
sub
call
mov
push
mov
sar
xchg
add
es
icebp
fidivrs
shrb
lret
pop
lock
push
xchg
sub
dec
movsl
mov
pop
das
xchg
test
leave
sahf
xor
xchg
int3
arpl
in
lcall
or
jne
sub
sti
pop
xchg
sub
stos
rclb
pop
negb
sarl
test
or
fwait
movsb
push
cmp
mov
dec
pop
insb
shrl
scas
stc
nop
loopne
out
cmpsl
jne
sbb
sub
shr
push
sbb
les
cmp
xor
push
and
lea
mov
scas
testl
xor
pop
repnz
push
je
xchg
xchg
sub
ret
mov
std
in
or
push
cmp
pop
mov
mov
lcall
aam
jle
das
inc
sub
jae
pop
jae
xchg
dec
mov
insl
aam
sahf
add
fsubrl
mov
push
sub
and
movsl
push
out
mov
push
inc
repz
adc
cmp
nop
ret
shr
rol
adcb
scas
mov
js
mov
fdivs
mov
mov
mov
xchg
dec
mov
mov
mov
out
push
lods
aam
xchg
imul
pop
inc
in
call
mov
fidivrl
sbb
cmp
addb
dec
mov
int3
jmp
or
ljmp
scas
movsl
in
pushf
pop
jle
int
fsts
adc
xchg
xor
pop
je
push
fxch
sbb
call
lret
xchg
lret
sub
xorb
inc
mov
loope
pop
jns
rcrl
jp
jp
adc
xor
mov
arpl
jl
mov
loop
inc
or
cmp
push
ljmp
jno
sahf
aad
mov
pop
mov
test
mov
movsl
dec
fmulp
les
out
sub
sbb
lea
cmpsb
test
fwait
in
xchg
cmc
push
sbb
xlat
inc
lods
mov
out
lods
jg
je
mov
cmp
loopne
dec
cmp
and
add
imul
push
orl
cmpsb
sub
adcl
mov
adc
loope
pop
pop
jge
imul
ds
in
mov
mov
cmp
jne
aaa
lea
push
inc
idivb
fisubl
xchg
mov
push
xchg
scas
clc
pop
ds
mov
inc
mov
inc
inc
and
scas
mov
sahf
inc
mov
fs
xchg
pop
mov
pop
loope
outsb
xchg
lock
pop
faddp
enter
hlt
arpl
cmp
and
mov
nop
cmpsl
inc
cwtl
cmp
jbe
mov
cmp
mov
iret
mov
insl
inc
aas
xchg
cmp
xchg
xchg
and
aam
xor
iret
mov
divl
ja
gs
pop
mov
jmp
lods
mov
ficoml
in
sub
es
xchg
adc
leave
push
mov
in
stc
insb
movsl
int
xor
outsl
fbld
cs
mov
repz
cmpsl
push
inc
and
add
xchg
je
mov
imul
jp
dec
insb
mov
stos
inc
cmpb
push
mov
inc
jge
mov
in
inc
fs
cmp
testl
xor
ja
enter
lock
add
ret
pop
out
movsb
add
add
dec
loop
lret
mov
pop
and
mov
cli
xchg
inc
ljmp
dec
testl
fstps
das
dec
enter
push
push
jmp
ficompl
and
imulb
inc
mov
ror
pop
add
out
pop
pop
data16
sub
pop
pop
xor
mov
dec
sbb
dec
repnz
inc
fld1
sahf
fs
mov
or
pop
mov
test
mov
aas
loopne
aas
xchg
or
add
mov
or
sarb
cwtl
fbstp
push
xor
movsb
xor
das
dec
or
adc
mov
cwtl
add
adc
lret
push
mov
xchg
mov
fxam
insb
pop
repz
cmpsw
xor
es
sahf
inc
add
pop
add
xlat
std
lea
ja
mov
mov
pop
stos
adc
adc
inc
jnp
xchg
xor
lods
scas
inc
or
mov
sarb
xor
sub
xor
xor
cmp
mov
sub
dec
pop
sbb
testb
cmp
in
add
add
test
mov
data16
xor
mov
test
orl
rolb
imull
push
dec
loope
insl
pop
mov
add
xchg
std
out
repz
shl
xor
adc
sub
mov
xchg
jl
dec
add
fdiv
push
test
loope
inc
outsl
add
test
jle
mov
dec
jecxz
jns
aaa
lcall
inc
or
imul
cmp
mov
push
jmp
das
mov
add
popf
inc
mov
test
aaa
lcall
cmc
push
push
aad
sub
test
xchg
xchg
cmp
push
add
fsubrl
loope
xor
aad
inc
jnp
int
sahf
outsl
insb
lock
ret
push
mov
imul
dec
adc
cmpsl
pop
dec
sahf
aas
addb
lahf
aad
sub
lret
push
mov
inc
scas
jb
hlt
xchg
mov
xchg
cltd
cmp
scas
aad
mov
add
cmp
mov
jg
push
mov
mov
fiaddl
enter
ja
push
arpl
scas
add
jp
mov
std
adc
mov
cmpsl
push
mull
jae
icebp
sbb
jb
fadds
arpl
add
test
inc
data16
mov
push
mov
sbb
jmp
icebp
cmpb
fdivl
aad
les
std
inc
push
push
add
add
pop
pop
stc
cli
jge
loope
in
insb
adcl
fistl
inc
sbb
subb
pusha
lock
xor
pusha
xchg
inc
add
pusha
jecxz
xchg
roll
mov
mov
lock
push
jae
in
jecxz
jo
push
rolb
xor
lock
popa
jo
xchg
aas
je
hlt
data16
stos
sub
roll
insb
test
jns
pusha
aas
dec
icebp
popa
add
mov
out
add
xchg
out
roll
pop
xor
xchg
mov
mov
out
push
adc
int3
push
cmp
mov
mov
push
add
adc
insb
push
jb
data16
sbb
push
and
in
mov
outsl
ljmp
mov
push
or
imul
push
out
test
mov
outsl
and
cs
dec
xor
push
leave
mov
js
cmc
sbb
inc
lock
movsb
insl
out
cmp
and
mov
pop
lods
sub
adcb
loop
cld
daa
test
inc
mov
mov
push
add
dec
mov
pusha
mov
roll
test
xchg
inc
ret
add
sub
mov
in
dec
or
sti
jp
xor
jnp
sub
push
incl
dec
or
sub
sbb
mov
mov
jp
fsubrl
in
jnp
stos
xor
jg
mov
mov
pop
sti
push
sub
mov
or
idivl
sub
jnp
and
xor
into
mov
lcall
xor
mov
sub
mov
aaa
int3
xchg
adc
mov
mov
adc
leave
shll
movsb
mov
mov
push
add
sbb
mov
adc
push
push
aas
popf
stc
pop
jmp
mov
pop
jecxz
nop
inc
std
cltd
cmp
adc
roll
ljmp
pop
fs
adc
jle
sbb
enter
dec
sbb
dec
pop
testl
bnd
lods
and
and
scas
pop
jne
aaa
sarb
sub
cmpsb
test
sbb
xor
jle
insl
sbb
add
clc
adc
mov
stos
aaa
sahf
mov
jne
cmpsl
clc
inc
push
popf
ljmp
mov
sbb
mov
das
cs
push
dec
adc
xlat
mov
pop
outsb
inc
or
jmp
sti
mov
stos
cmpsb
cs
test
fnsave
imul
in
adc
dec
inc
rorb
mov
or
jmp
pop
movsl
in
fwait
inc
push
cli
lret
lret
pop
sbb
dec
mov
mov
andb
and
adc
out
je
fld
mov
lret
call
cld
inc
or
mov
das
mov
xchg
in
mov
inc
or
roll
outsb
test
jnp
stc
cwtl
and
out
or
sub
ss
pop
add
and
rcrl
into
cld
pop
movsb
loopne
test
and
cltd
lret
sarb
into
hlt
jge
lret
std
pop
add
jne
es
repnz
dec
xor
cltd
cltd
xchg
cmp
into
sub
icebp
idivl
xlat
jp
or
jbe
mov
ds
out
add
jno
jno
and
mov
test
sarb
stc
mov
test
cmp
add
sbb
jmp
decb
xlat
gs
mov
fistpll
push
mov
or
pop
xchg
aas
sahf
xorl
mov
sub
inc
xor
test
sub
push
mov
cmp
inc
shrb
cs
ljmp
mov
xlat
mov
out
mov
add
insl
in
fwait
pusha
mov
cmpsb
roll
cmpsb
lea
dec
stos
daa
pop
cmp
sub
fnstsw
xor
or
cmp
enter
or
aad
pop
cli
or
push
call
push
popf
cmp
jge
dec
or
enter
xchg
mov
aad
xor
sub
fcmovu
mov
out
js
lret
adcl
jp
hlt
ja
jne
pop
stc
cmp
mull
inc
push
pushf
addb
xlat
push
roll
stos
jo
loopne
mov
mov
loopne
lds
repnz
mov
push
out
or
sub
xlat
jle
iret
xchg
pop
outsl
dec
adc
lock
xor
cli
popa
ret
pop
and
jp
js
mov
scas
js
in
add
leave
icebp
dec
adc
pop
pop
lods
das
xchg
mov
mov
fstpt
movsb
and
lock
cmp
cmpsl
sub
sub
or
test
pop
mov
and
jbe
or
and
mov
sbb
push
or
lret
sbb
cmp
dec
pop
xor
clc
pop
fildll
xlat
outsb
popa
mov
mov
pop
xor
fadds
add
xchg
cmp
push
mov
push
jmp
mov
mov
out
call
int3
xchg
in
pop
dec
adc
pop
cmp
cli
subl
shrl
sbb
adcb
das
rcrl
scas
ss
jb
mov
lahf
xchg
cmp
out
clc
popa
cli
int
pop
mov
stos
das
sbb
es
push
pop
add
jp
mov
in
xchg
xchg
mov
in
scas
popf
pop
add
mov
aam
out
insb
out
jmp
lcall
fistps
test
mov
lods
inc
or
jbe
out
add
inc
repnz
cltd
pop
add
push
mov
jge
cwtl
add
mov
mov
xchg
cmp
adc
push
movsl
push
test
mov
sti
lods
pop
ret
mov
movsl
lock
movsb
cli
sub
xor
lds
loope
or
jg
xor
rcrl
enter
mov
pushf
push
cli
cmpsb
xor
in
ret
xchg
dec
sbb
jecxz
sbb
arpl
jne
popf
orb
ret
mov
xlat
mov
fnstcw
lods
xor
xchg
mull
ficoml
ja
sbb
pop
stc
cmp
ja
adc
jno
sahf
dec
je
imul
cmpb
sahf
into
pop
iret
xchg
pusha
pop
sbb
outsb
test
out
sbb
sbb
or
adc
jne
inc
mov
fs
dec
lock
jle
aas
mov
lret
push
push
test
mov
sub
mov
mov
mov
jecxz
sbb
popf
arpl
popa
mov
xlat
xchg
mov
lds
pop
sti
pop
mov
cltd
cmp
push
fidivrl
mov
pop
cli
push
lcall
mov
mov
movsl
das
xchg
add
mov
sub
mov
jmp
stc
or
jle
dec
push
pop
xchg
mov
sub
xlat
xor
dec
clc
scas
mov
xchg
ljmp
and
mov
xlat
out
mov
mov
xor
roll
mov
mov
inc
adc
push
sar
mov
jo
fcoml
outsl
cmp
cmp
mov
jg
aam
adc
xlat
mov
je
add
and
outsb
bound
push
add
jle
adc
pop
test
adcb
sahf
adc
pop
in
nop
aaa
sbb
cmp
ficoms
stos
xor
or
jns
pop
add
insb
loop
call
cld
and
pushl
cmpsl
int
in
jne
sub
cmp
or
int
jg
mov
push
sbb
test
pop
jo
lcall
push
push
ja
push
gs
add
jle
paddsw
clc
pop
cli
xchg
add
xchg
jbe
xor
cli
mov
dec
sbb
push
fnstcw
or
xor
push
sub
xchg
inc
addb
cmp
and
std
mov
push
push
jp
cltd
mov
mulb
xchg
cli
pop
jg
or
sbb
jle
and
jp
lods
sub
repz
mov
mov
sub
inc
sub
or
and
pop
std
fidivs
xchg
pop
stc
push
inc
jl
jb
popf
mov
cmpsb
mov
mov
inc
adc
loop
lods
popf
je
mov
cmpsl
test
sbb
inc
fists
pop
mov
dec
or
shrb
stos
cmp
dec
or
push
popf
jl
mov
negb
stos
js
sbb
jmp
fiaddl
mov
stos
mov
dec
mov
or
es
push
cwtl
sub
pop
and
cmp
arpl
mov
mov
lods
jns
ret
lcall
cmp
and
or
and
cwtl
jns
ss
subb
or
rorb
pop
xor
pop
lock
sti
fs
push
pop
fadds
std
pop
es
out
lret
inc
adc
cmc
enter
jg
and
mull
push
add
gs
mov
testl
cmp
xchg
adc
aas
addr16
cli
push
mov
in
leave
loope
fiadds
xor
sub
movsl
pop
lods
or
sub
xor
mov
xchg
lret
lea
inc
adc
stos
std
or
dec
mov
jo
xchg
les
mov
mov
adc
sbb
gs
in
pop
dec
loope
or
jge
mov
stos
arpl
sti
lret
xor
flds
jmp
movsl
jo
fiadds
fiaddl
mov
adc
shll
and
mov
sub
loope
add
adc
inc
je
push
fisttps
mov
xor
push
sub
dec
fldl
cmpsb
lahf
dec
adc
lcall
jns
filds
adc
sbb
dec
setge
and
lods
jb
xlat
and
xchg
xchg
add
in
or
dec
adc
test
xchg
int3
xchg
jle
js
ljmp
roll
shll
xchg
xchg
je
xchg
into
and
mov
test
nop
shll
add
lea
mov
pop
fwait
imul
dec
fld
mov
cltd
push
idiv
cs
fucompp
das
mov
or
pop
aaa
mov
xchg
and
in
imul
insb
out
call
cmc
call
mov
in
add
pusha
cli
adc
fdivrs
mov
xor
xchg
lds
shl
adc
adc
ret
test
rclb
aaa
popf
out
out
push
stc
mov
or
pop
push
pop
add
and
lds
push
pop
add
jp
pop
test
mov
add
jbe
das
mov
arpl
test
test
mov
xor
popf
arpl
lea
rcrl
dec
lret
mov
pop
add
mov
pop
enter
jno
mov
inc
call
add
ja
clc
jae
pushf
enter
lds
sbbl
ror
add
adcl
cld
pop
sbb
push
jg
hlt
add
inc
rcrl
xchg
ret
hlt
mov
loop
in
shlb
mov
mov
and
add
insb
xor
icebp
mov
loope
loope
push
dec
add
addb
iret
cmp
negl
xor
xchg
sbb
call
mov
xor
cs
icebp
mov
mov
add
loop
mov
mov
pop
cli
sbb
and
sub
lds
cmpsl
or
sarb
jmp
push
xchg
adc
jno
add
mov
scas
xor
jmp
cld
aaa
pushf
dec
mov
push
pushf
and
fisttpll
fiadds
addr16
jg
jb
add
push
pushl
sub
push
movsl
dec
adc
fidivrl
pop
cmp
out
jae
loop
or
mov
cmpsb
aad
outsl
stos
mov
adc
xor
cld
or
fiadds
roll
mov
pop
out
mov
gs
lret
xchg
or
mov
inc
or
bound
xchg
inc
push
clc
push
shll
sbbl
arpl
push
mov
sbbl
sub
mov
sbbb
or
test
adc
jne
pop
jne
inc
fildl
mull
jb
scas
cmp
and
cli
rcrl
aas
push
pop
test
push
loop
pop
adc
out
mov
push
cld
cltd
test
inc
popf
into
out
leave
xor
add
je
push
mov
jle
aas
xor
pop
les
jb
into
insb
xlat
addb
ret
xchg
inc
xor
in
sahf
sub
push
ret
ds
mov
mov
mov
lods
jns
fisttps
jge
lock
mov
stos
jecxz
adc
inc
out
test
sub
jns
xor
mov
outsb
lock
je,pt
jge
push
push
shl
add
add
sti
scas
cs
sub
popaw
invd
enter
int
inc
jno
adc
sbb
call
imulb
pusha
mov
xchg
inc
mov
scas
inc
loopne
or
mov
mov
pop
lea
ljmp
gs
jmp
mov
jne
scas
fmull
scas
mov
repz
mov
inc
or
fidivrs
mov
mov
lret
in
outsl
cmp
mov
jnp
pop
pop
inc
roll
xchg
add
adc
adc
enter
daa
sbb
addr16
lcall
mov
mov
xchg
xor
pop
add
and
js
repnz
fsubrl
ret
or
int
outsl
jge
testb
pop
in
flds
cmp
call
cltd
jmp
mov
fdivrs
out
sarl
loopne
int3
les
cmp
pop
dec
sbb
adcl
push
add
rorl
loop
mov
imul
push
pushf
inc
insl
jnp
cltd
loopne
pop
lcall
sbb
lea
jae
xor
repz
icebp
daa
dec
push
sbb
jbe
push
dec
insl
repnz
dec
into
lret
fnstcw
pop
xchg
je
adc
add
cmp
adc
pop
xor
popa
sbb
inc
inc
fdivl
pusha
div
mov
cli
in
adc
mov
jl
sbb
mov
push
jno
xchg
lcall
jne
outsl
lock
add
push
cmc
js
addb
jl
jo
lock
mov
xor
jbe
int3
jno
mov
mov
jnp
out
add
sbb
inc
adc
test
ljmpw
popa
enter
aaa
pop
push
iret
das
sub
int
xor
imul
call
jo
push
jns
test
stc
leave
xchg
dec
cltd
aas
das
leave
cmpsl
sub
sbb
nop
cmp
push
sub
push
es
mov
inc
lahf
inc
or
xchg
orl
pop
mov
sbb
aas
movsb
dec
dec
xor
mov
scas
sbb
clc
sbb
mov
mov
scas
ljmp
xchg
cmp
jge
add
lds
mov
cmp
cmp
add
adc
lea
das
ja
cmpsb
dec
pop
add
aas
mov
cmp
sub
cs
dec
cmp
pop
movsb
pop
push
clc
fnsave
mov
imul
outsb
sarl
add
mov
iret
movsl
fildll
sbb
pop
add
or
mov
int
jg
mov
lcall
addb
adc
inc
inc
or
mov
lods
pushf
fstps
pop
xchg
lods
loopne
jmp
xor
mull
jecxz
cmp
mov
jge
outsb
jmp
lods
cmc
cltd
cmp
xor
rcl
xchg
pop
fwait
cmp
pop
adc
dec
mov
sub
xor
pop
jmp
mov
test
lret
test
insl
hlt
mov
push
stc
xor
movsl
sub
es
lds
and
mov
inc
jae
repz
stc
bound
into
xchg
test
or
mov
fistpl
lds
aam
adc
mov
or
push
or
push
jl
sub
jmp
cli
inc
adc
fildll
lods
shll
cs
sbb
mov
lds
cmp
push
mov
sbbb
or
pop
mov
pop
pop
repnz
and
xchg
mov
jp
and
jle
out
jno
outsb
mov
sbbl
inc
loop
push
mov
fldl
xchg
rol
xchg
push
sti
inc
popf
sarl
xchg
mov
mov
mov
inc
jbe
in
jnp
cmp
cwtl
daa
cmpsl
pop
rcll
push
cmp
divl
fs
pop
add
daa
cmpsl
inc
aam
push
xchg
jns
and
xor
jne
in
aaa
arpl
movsl
adc
sahf
inc
fldl
daa
push
or
stc
push
cmp
in
xor
inc
mov
callw
jns
xchg
faddl
dec
or
ja
mov
xor
inc
jg
or
ret
lcall
repz
fdivs
in
mulb
das
imul
lcall
pop
lods
xchg
mov
ljmp
scas
sub
int3
mov
std
pop
push
ficoms
mov
mov
movsl
mov
adc
leave
sbb
push
shrl
mov
or
lret
pop
jg
push
sbb
movsb
call
ja
jnp
aam
pop
outsl
sbb
sbb
pushf
inc
pop
dec
cmp
in
cmp
insl
adc
pop
pop
jne
dec
pop
mov
xchg
scas
test
pushf
test
enter
roll
addr16
inc
adc
aaa
jno
xchg
out
xchg
into
cli
pop
dec
lret
arpl
insl
xchg
inc
mov
fs
mov
ret
insl
pop
dec
adc
mov
mov
push
sbb
adc
add
ss
pop
add
xchg
cmp
adcb
lret
popf
inc
jge
pop
daa
int
mov
aas
pop
cld
xchg
xorl
imul
pop
cmc
pop
aas
lock
cs
cmp
test
out
jmp
les
adc
pop
ret
add
push
js
inc
mov
cmp
daa
popf
xchg
aaa
nop
xor
test
dec
and
or
aad
stos
sub
pop
ret
mov
iret
and
sub
cmp
fwait
shr
dec
shl
push
pushf
push
rcll
adc
pop
inc
mov
inc
jne
outsl
lock
or
sti
outsl
in
mov
mov
test
fimuls
hlt
lods
sub
push
add
imul
fdivs
repnz
movsl
jo
xor
xor
xorb
push
push
fldcw
jp
add
in
pop
jnp
jne
andl
popa
dec
pop
stc
xchg
jnp
mov
cmp
fwait
out
adcl
inc
pop
inc
test
ja
fcomip
pop
xor
mov
cmp
cmpsb
sub
das
sub
fists
and
fldcw
ljmp
cmp
sarl
xchg
addr16
orl
ljmp
mov
mov
mov
popf
pop
popf
inc
int3
lret
add
sbb
push
mov
mov
mov
aaa
lds
jae
loop
outsl
fidivrl
loope
pop
fmul
lret
mov
pop
xchg
inc
pushf
sbb
lds
dec
sti
nop
daa
sub
sub
sbb
cmp
scas
add
cmpsb
xchg
mov
pop
sti
sub
and
ljmp
lock
mov
push
mov
push
pop
sbb
shll
xor
adc
fiadds
rcrl
jbe
cli
fs
clc
data16
popf
inc
jae
sub
jno
sbb
jecxz
pop
lock
jecxz
scas
ljmp
push
in
out
jbe
lahf
or
pop
notl
dec
xchg
addr16
adc
add
lret
adc
addr16
int3
inc
push
into
pop
push
inc
or
nop
cmp
xchg
or
or
cmpsb
pop
jle
hlt
mov
repz
sarl
les
in
add
inc
daa
test
cmp
fildl
ror
mov
scas
xchg
cmp
gs
hlt
arpl
mov
push
dec
shlb
cmpsb
mov
mov
sub
push
jb
adc
fdivr
pop
cmp
jo
and
jp
sbb
inc
cmovns
sti
push
rolb
lahf
jne
aas
adc
ret
adc
fnsave
mov
xchg
aaa
movsl
shlb
sub
stos
mov
scas
xor
in
lea
je
ljmp
mov
pop
int3
xchg
outsl
iret
js
cmp
mov
xor
sti
pop
lds
jge
and
lret
add
scas
xchg
dec
cmc
jo
outsl
xchg
fidivrs
je
dec
push
jbe
dec
dec
cld
add
push
xchg
ja
mov
fwait
data16
int3
fisttpll
rcrb
push
imul
dec
or
jne
clc
popa
xor
fdivp
and
add
stc
pusha
jmp
cmp
adc
xchg
cmp
xchg
imul
in
jne
icebp
pop
cmp
xchg
daa
xor
xor
jp
mov
mov
fnstcw
test
sbb
adc
repnz
push
adc
test
ljmp
xor
and
mov
negb
movsl
orb
push
mov
lods
rorb
jbe
sbb
mov
mov
andl
ss
mov
jmp
ja
sti
mov
dec
fsubrl
stos
xchg
out
add
pusha
into
mov
cmp
stc
lahf
and
les
int3
adc
in
call
mov
fcmovnb
xchg
pusha
int
dec
inc
jle
fsubl
adc
in
lret
sti
add
stos
xchg
dec
dec
adc
ret
inc
or
xor
mov
mov
idiv
in
ret
in
cld
pop
pop
cmpsb
mov
jae
mov
mov
mov
add
push
pop
dec
pop
adc
test
dec
push
lds
pop
pushf
cmp
pop
in
and
cmp
mov
pushf
xor
mov
out
lret
les
cld
mov
mov
mov
test
and
push
pop
sub
add
lds
mov
mov
xor
dec
lea
outsb
xlat
or
xor
inc
adc
xor
xlat
or
pop
cli
fistpl
sub
add
pop
cmp
xchg
xchg
inc
insb
ja
mov
jno
imul
loop
sbb
xor
pop
ss
stos
sub
mov
mov
jecxz
push
or
pop
push
sbb
into
test
pushf
aad
bswap
push
inc
adc
jle
test
movsb
lahf
jae
rol
push
aad
add
push
inc
imul
stos
insl
adc
mov
mov
lret
xchg
cmp
jae
pusha
mov
cmpsl
lcall
fs
pop
lods
or
rolb
xor
xor
loopne
cli
loope
xchg
aas
leave
sti
xor
mov
movsl
test
loop
les
cs
jg
lods
sub
jne
pop
sti
pop
sti
or
ds
mov
sub
test
mov
mov
loopne
test
mov
fistpl
pop
hlt
pop
mov
jno
sbb
mov
sub
into
inc
or
and
insb
hlt
cs
inc
call
sti
push
cli
test
sub
xlat
fldl
iret
sahf
fildl
inc
rclb
mov
repz
in
loop
mov
test
fs
popa
xchg
cmp
xlat
mov
mov
loope
negb
sub
bound
mov
adc
and
jns
ss
inc
or
jno
cs
pop
fildl
out
sarl
repz
add
push
push
rclb
fs
hlt
jle
sub
roll
cmp
jb
outsl
and
leave
mov
movsb
cmp
inc
mov
jmp
stos
ds
mov
pop
test
iret
mov
cmpsb
dec
or
dec
scas
sub
push
pop
rcr
push
jnp
test
stos
fs
fistpl
or
in
insb
imul
stos
xor
mov
cwtl
cmp
aad
lret
fwait
aaa
jg
adc
sub
mov
shll
jmp
dec
and
inc
fucomp
xor
cmp
inc
mov
mov
and
pop
mov
lret
pop
jge
sub
stc
shlb
fsubr
jecxz
popf
or
imul
sbb
call
std
in
das
lea
lret
cmp
je
pop
cmpsl
cmp
in
jb
xor
shr
or
mov
movsl
jl
xlat
cmpsb
mov
xlat
mov
int3
xchg
cld
sti
lds
cmpsb
mov
jns
orb
cmp
pop
fidivrl
gs
movsb
adcb
lock
mov
movsl
fidivrs
jecxz
inc
mov
test
inc
adc
subb
insb
call
imul
mov
call
clc
filds
pusha
cmp
lahf
add
cmp
sahf
jae
or
sub
lods
rorl
lds
jge
adc
jg
mov
jle
pop
mov
cmp
leave
xchg
enter
jp
mov
add
adc
imul
std
in
jno
add
hlt
popa
push
add
in
rep
xor
adc
mov
orb
mov
xstore-rng
cmpsl
inc
xor
jge
adc
pop
pop
jle
or
pusha
jl
and
xchg
cmp
xor
leave
roll
jno
xor
negl
sub
lods
mov
mov
mov
test
iret
push
jg
das
mov
gs
xchg
js
push
lret
lret
jge
fsts
inc
adc
pop
cwtl
das
lea
pop
je
arpl
xor
and
lret
push
jmp
jbe
push
cli
pushw
dec
je
scas
in
sahf
adcb
and
cmp
pop
push
outsb
add
pop
mov
cltd
mov
mov
aam
and
call
f2xm1
xchg
pushf
cmp
lods
xchg
cmp
dec
and
push
cmpsl
push
sbb
fdivrl
data16
out
cmp
push
add
mov
mov
xchg
call
fldl
pop
std
and
or
aas
and
loop
adc
push
add
shll
rcrb
cmp
test
lds
xchg
andb
outsb
rcl
add
insb
mov
aas
pusha
outsb
ljmp
push
push
and
jmp
outsb
cmp
sub
movsl
or
lods
dec
mov
push
aam
or
xchg
or
sbb
pushf
sbb
lds
mov
mov
int
outsl
adc
inc
loope
sub
fstpt
xor
jo
or
and
cmpsb
stc
xlat
adc
pop
mov
fidivs
xchg
cmp
dec
mov
popa
lahf
push
mov
sbb
mov
outsb
dec
push
clc
sub
int
sbb
lret
aad
out
adc
mov
push
rorl
test
sar
and
dec
add
adc
nop
cmp
test
repz
pop
push
and
xchg
aaa
add
xchg
ds
push
mov
cltd
popf
cltd
inc
psrlw
ds
cmpsb
cli
arpl
jl
xchg
pusha
cmpsb
daa
and
xchg
ds
xor
sbb
or
ds
movsb
pop
xchg
aaa
in
mov
xchg
jne
in
sub
cmp
dec
mov
out
outsb
add
rorb
pop
push
int3
insb
lret
roll
sbb
stos
xor
in
inc
push
arpl
pop
mov
sbb
mov
lahf
dec
aam
adc
aas
mov
and
inc
push
sub
pop
lret
cmpsb
inc
dec
adc
mov
sub
sbb
and
dec
adc
cwtl
das
arpl
mov
mov
mov
adc
aam
or
inc
sub
mov
enter
adc
or
lds
cs
pop
and
andb
mov
push
cmpsl
rolb
add
mov
sti
and
cmc
push
sbb
ds
jbe
adc
leave
lcall
sbb
push
dec
adc
xlat
outsb
mov
ret
hlt
mov
adc
inc
or
cmp
xor
cwtl
pop
jnp
mov
cltd
xor
or
cmp
pop
lea
push
insl
mov
hlt
mov
add
popa
ss
adc
mov
jg
push
popf
fsubl
and
cs
add
inc
mov
js
pusha
not
cltd
test
lret
hlt
jle
es
pop
pop
dec
pushf
xor
in
jb
mov
cltd
out
fsubrs
out
mov
inc
testb
xchg
adc
mov
out
leave
sbb
jp
out
xor
add
mov
mov
adc
aam
or
stos
inc
gs
mov
pop
mov
jge
shrb
lds
sub
dec
jecxz
jg
mov
cmpsb
roll
add
mov
cli
and
push
sbb
adc
enter
shl
repz
cltd
inc
outsb
xlat
outsb
mov
shl
repz
adc
inc
or
cmp
leave
xchg
pop
jnp
mov
cltd
xor
or
cmp
mov
and
push
insl
xchg
hlt
mov
add
popa
xor
push
call
jle
push
popf
fistpl
and
sub
dec
inc
flds
mov
test
lret
adc
push
inc
pushf
xor
in
jno
mov
cltd
ret
in
fsubrs
in
mov
inc
testb
xchg
adc
lds
xor
pop
fdivrl
push
cmp
push
cwtl
das
popa
mov
mov
fimuls
or
stos
inc
fs
mov
enter
adc
or
lds
sub
fwait
pop
and
jle
mov
movsl
rolb
add
mov
stc
and
push
sbb
adc
lcall
sbb
cltd
inc
insl
xlat
outsb
lahf
and
repnz
aad
adc
inc
or
cmp
leave
xchg
pop
jnp
lea
cltd
xor
or
cmp
mov
and
push
insl
xchg
hlt
mov
add
popa
xor
adc
mov
jge
push
popf
ficompl
and
sub
insb
add
dec
inc
fnstcw
mov
jbe
pusha
not
xchg
test
leave
bnd
and
pop
sbb
ds
jo
mov
cltd
ret
outsl
push
in
mov
inc
testb
xchg
adc
les
xor
push
fstpt
or
cs
das
pusha
mov
mov
fisttpll
pop
xor
mov
enter
adc
or
vcvtsi2sdl
pop
and
push
jl
mov
movsb
into
inc
xlat
inc
mov
mull
pop
notb
test
dec
jb
adc
imul
popf
lds
jnp
sbb
lcall
and
lock
out
adc
cmc
cmp
lret
jl
mov
lcall
mov
and
test
hlt
mov
add
bound
clc
adc
xchg
jnp
pop
sahf
fstps
mov
and
fidivrl
mov
je
popa
clc
rclb
jg
and
pop
sbb
xor
cmp
jnp
cwtl
mov
cltd
shr
jo
loop
mov
aas
testl
ret
xchg
in
lret
jp
or
push
call
pop
mov
mov
fmull
imul
repnz
leave
pusha
mov
adc
or
vmovapd
in
jnp
mov
mov
ret
mov
cmc
pop
pusha
notl
test
dec
jno
adc
fwait
les
out
pop
mov
lcall
and
out
mov
in
push
lods
inc
add
xor
xchg
push
jl
mov
xor
push
jno
cmp
mov
mov
insl
subb
mov
add
arpl
notb
test
xchg
jns
or
lret
stc
es
pop
dec
inc
fstpt
mov
jb
stc
iret
xchg
test
pop
and
pop
sbb
jbe
in
insb
xchg
mov
cltd
mov
loopne
mov
ds
jo
ds
xchg
push
lods
ret
repz
xor
adc
jp
or
push
jmp
pop
mov
mov
fisttpl
imul
lods
inc
popa
and
mov
lret
ja
cmpsl
test
call
vmovaps
popf
pop
sbb
in
jp
mov
mov
rorl
dec
adc
aas
inc
jo
push
mov
ret
popf
xor
mov
mov
lcall
and
out
mov
loop
pop
scas
inc
add
xor
xor
adc
test
xor
add
mov
daa
mov
insl
subb
sar
int3
arpl
cmc
adc
test
js
or
lret
mov
push
dec
inc
fstpt
and
stc
into
xchg
test
out
adcb
out
pop
sbb
xor
imul
cltd
mov
fbld
mov
cmp
ds
nop
push
lods
roll
lret
adc
jp
or
cwtl
das
pop
xchg
mov
fimull
imul
lods
inc
pusha
and
mov
lret
jbe
cmpsl
cmpsl
aam
jg
leave
cs
push
popf
pop
sbb
dec
jns
mov
lahf
lret
inc
frndint
rorb
dec
adc
push
mov
ret
hlt
mov
mov
lcall
and
in
mov
loope
pop
scas
aas
add
xor
int3
xchg
push
jl
xchg
lcall
cli
mov
daa
mov
insl
jg
scas
inc
frstor
int3
arpl
hlt
adc
test
ja
or
leave
mull
mov
sbb
mov
jo
stc
int
test
ret
out
adcb
in
pop
pop
inc
sahf
xor
push
mov
cltd
mov
fisubs
mov
cmp
outsb
xor
aad
push
lods
rolb
lret
adc
jp
pop
xor
jmp
pop
xchg
mov
imul
lods
inc
pop
and
mov
popa
mov
adc
add
es
popf
push
sbb
dec
js
mov
sahf
lret
sti
mov
popa
clc
dec
adc
push
mov
rcrl
ljmp
lcall
and
in
scas
aas
loopne
pop
scas
add
xor
int3
nop
push
jl
test
lcall
stc
mov
daa
mov
jle
scas
inc
fcompl
int3
arpl
repz
addl
jbe
or
enter
daa
ljmp
jp
mov
outsl
fwait
stc
int3
nop
test
ret
pop
pop
in
pop
push
inc
sahf
xor
imul
jno
frstor
mov
cmp
insl
das
ds
mov
lods
mov
loopne
lret
adc
jp
push
xor
fs
cwtl
das
pop
test
mov
mov
lods
fmuls
imul
lods
inc
pop
and
mov
lret
je
cmpsl
movsl
shr
jg
cs
push
popf
push
sbb
dec
ja
mov
popf
leave
inc
fsqrt
mov
popa
clc
dec
adc
push
lahf
fs
pop
xchg
rcrb
jmp
or
lcall
and
jmp
aas
fisttps
scas
cmp
pop
xor
adc
lcall
clc
mov
daa
mov
insl
jge
scas
inc
fistpl
int3
arpl
repnz
addb
mov
dec
in
cmc
es
sbb
fstpt
mov
outsb
lcall
shr
pop
push
jecxz
pop
adc
ss
push
mov
cltd
mov
fsubl
mov
cmp
insb
cs
lea
lods
mov
fbstp
adc
jp
add
es
das
pop
test
mov
mov
stos
xlat
mov
ljmp
lods
inc
pop
and
mov
lret
jae
test
shr
jg
das
mull
push
popf
push
sbb
dec
jne
mov
pushf
movl
out
sbb
dec
adc
push
popf
arpl
pop
xchg
mov
in
call
or
cmp
xchg
pop
and
jmp
or
scas
cmp
pop
cmc
xor
int3
mov
adc
movsb
lcall
idivl
daa
xchg
insl
jl
scas
inc
ficompl
int3
arpl
dec
ljmp
mov
dec
in
hlt
es
sbb
fstpt
mov
insl
cltd
stc
lret
aas
shr
pop
sbb
aas
sahf
xor
addr16
mov
cltd
mov
mov
cmp
imul
lods
mov
fidivs
psrld
add
push
jmp
push
xorl
js
dec
stos
mov
sub
push
jl
popa
scas
jb
test
iret
call
mulb
push
popf
push
pop
dec
in
je
mov
fwait
movb
mov
popa
clc
dec
pop
inc
inc
push
push
pushf
pop
xchg
mov
in
out
mov
fwait
cmp
jno
pop
and
call
or
scas
cmp
pop
cmc
das
pop
xor
adc
mov
jb
xor
mov
daa
xchg
insl
jnp
scas
inc
fstps
arpl
adc
addb
jae
or
mov
sbb
mov
insb
cwtl
stc
leave
lea
pop
sbb
pop
adc
sahf
xor
xchg
mov
cltd
mov
fisubl
mov
cmp
aad
mov
lods
mov
fnsave
push
sarl
add
push
jmp
push
xorb
ja
dec
test
lret
aam
std
sub
push
jnp
popa
lods
jno
test
into
call
cmc
and
popf
push
push
dec
in
jae
mov
lcall
and
pop
popa
clc
dec
push
test
push
fwait
popa
pop
xchg
mov
in
out
mov
fwait
cmp
jno
pop
and
out
inc
xlat
fmull
pop
scas
cmp
pop
cmc
cs
xor
adc
mov
jno
xor
mov
test
insl
jnp
lods
inc
fcomps
bound
lock
jg
xor
jae
pop
sahf
rcll
mov
sbb
fidivl
mov
insb
xchg
popa
clc
enter
mov
loope
pop
adc
in
xchg
mov
cltd
mov
fisubl
mov
aaa
testl
mov
fdivl
lret
jp
add
push
call
push
subl
test
lret
aam
std
daa
stos
inc
pop
push
repz
leave
pusha
lods
jno
test
int
jle
ret
das
hlt
and
popf
push
adc
and
mov
les
cmc
mov
popa
clc
inc
or
jg
lcall
xor
mov
jl
push
mov
fwait
aaa
popa
fidivl
pop
and
out
inc
xlat
fildl
pop
scas
cmp
pop
cmc
sub
dec
jl
subb
sar
jno
xor
mov
test
insl
jp
lods
inc
xlat
fwait
hlt
mov
clc
lret
bound
out
adc
jle
xor
jb
pop
sahf
rclb
and
add
inc
inc
fidivl
mov
imul
aas
mov
loopne
pop
adc
jnp
mov
cltd
mov
fnstenv
fldenv
mov
testl
mov
lret
jp
add
push
call
push
subb
jbe
dec
test
lea
es
inc
pop
sbb
leave
pusha
stos
jo
test
int3
out
inc
das
repz
push
popf
push
adc
in
jno
mov
cwtl
ret
inc
fxtract
mov
popa
clc
inc
or
inc
addr16
cltd
pop
pop
xchg
mov
in
in
mov
fwait
ss
fidivl
push
and
in
inc
xlat
fiaddl
pop
scas
aaa
sti
pop
cmc
sub
xor
adc
push
ljmp
jno
das
hlt
mov
addl
jns
lods
inc
lcall
sub
adc
jge
xor
jno
pop
sahf
iret
xchg
dec
in
lock
add
inc
inc
fidivl
and
popa
clc
mov
push
sbb
pop
adc
popf
xor
xor
jnp
mov
cltd
mov
fnstenv
fsubs
mov
xor
ds
mov
rep
fidivl
lret
jp
add
cwtl
das
push
jg
push
mov
mov
cmpsl
rorb
imul
stos
inc
push
sbb
mov
leave
pusha
stos
outsl
adc
std
shrl
repnz
push
popf
dec
adc
inc
jo
mov
xchg
ret
repz
popa
clc
inc
or
push
cwtl
pop
pop
nop
mov
in
jecxz
mov
fwait
xor
push
and
in
inc
xlat
flds
pop
cmc
sub
int3
mov
jle
push
ljmp
jno
cs
addb
js
lods
inc
aad
hlt
mov
test
sub
adc
jl
xor
jo
pop
sahf
into
xchg
dec
in
out
and
add
inc
inc
fidivl
mov
imul
push
sbb
pop
adc
popf
xor
xor
jnp
lea
cltd
mov
fnstenv
xlat
and
sub
aad
xchg
rep
fnstenv
lret
jp
add
call
push
jle
push
mov
mov
cmpsb
rorl
imul
stos
inc
push
sbb
mov
leave
pusha
test
lret
cld
shrb
icebp
sbb
dec
in
outsl
and
mov
roll
mov
and
adc
inc
or
push
xchg
pop
pop
mov
in
loop
mov
fwait
xor
fidivl
push
and
jecxz
inc
xlat
fadds
scas
xor
push
xor
adc
push
ljmp
jno
sub
dec
addl
inc
aam
hlt
mov
cmc
lret
bound
in
adc
jnp
xor
outsl
pushf
pop
sahf
int
dec
in
out
and
add
mov
push
mov
push
pop
ffree
pop
popf
xor
xor
jnp
mov
cltd
mov
fnstenv
and
sub
aad
xchg
rep
fdivs
lret
jp
ljmp
push
call
push
jl
push
scas
jae
dec
movsl
iret
lea
aad
stc
and
mov
pusha
cmpsl
insl
adc
cli
mov
push
popf
dec
adc
inc
insl
and
sahf
arpl
xchg
mov
mov
call
or
push
xchg
pop
enter
popf
xor
scas
out
loope
mov
pushf
xor
mov
test
inc
fcom
add
scas
xor
pop
imulb
push
xor
adc
cmpsl
push
ljmp
jno
sub
mov
es
xlat
outsb
jbe
lods
inc
rclb
lret
bound
inc
jmp
enter
sahf
lret
dec
out
in
and
add
aas
inc
fidivl
mov
addr16
popa
clc
ret
inc
mov
fadd
pop
push
aaa
popf
xor
das
in
popa
mov
lcall
and
arpl
aas
pop
test
hlt
stos
xor
pop
int3
jnp
sub
pop
pop
lcall
jb
dec
movsb
int
and
mull
lods
inc
push
sbb
mov
lret
imul
pushf
call
enter
sahf
dec
movmskps
inc
imul
xchg
mov
mov
out
stc
inc
pop
stos
inc
cmp
pop
xchg
pop
leave
pusha
mov
jle
pop
mov
popf
xor
jb
push
and
subl
add
scas
xor
pusha
mull
push
ss
dec
jle
jp
push
jmp
fwait
pushf
xor
divl
sub
mov
daa
jge
fsubrs
sahf
scas
inc
rclb
int3
arpl
jmp
ljmp
cwtl
or
mov
loopne
add
outsb
xor
rolb
pop
add
fstp
sub
cli
je
testb
and
fs
adc
outsl
lret
sub
push
mov
inc
outsb
dec
xor
add
mov
sahf
imul
js
iret
aaa
mov
or
daa
and
scas
mov
pop
out
hlt
cmp
mov
cs
out
in
jmp
push
mov
pushf
int
dec
or
adc
jns
mov
in
cli
pop
or
mov
das
inc
popf
adc
das
xchg
aas
sbb
jns
inc
rorl
mov
pop
add
xchg
jle
xchg
xchg
rorl
jp
and
scas
mov
lcall
push
jg
cmp
jno
add
push
adcl
sub
cmp
das
sti
pop
lds
int3
lcall
and
mov
out
in
jl
in
cltd
sub
ja
imul
gs
push
pushf
js
push
push
pop
adc
sub
push
push
pushf
sti
push
adc
in
test
push
lret
add
jns
mov
inc
call
lods
xchg
cli
fucom
test
dec
or
fcmove
clc
adc
push
xor
lcall
aas
ret
adc
mov
mov
aad
stos
popf
xchg
call
scas
and
mov
ljmp
adc
cld
inc
pop
int3
jne
xchg
out
rorb
jp
fwait
xor
enter
pop
andl
mov
pop
lock
fnstcw
and
popa
addb
in
ret
mov
mov
std
jbe
mov
aam
cltd
xchg
pop
mov
ret
mov
inc
sbb
inc
jno
sub
das
adc
inc
sti
jl
insl
ja
mov
sbb
pop
mov
mov
pop
push
xchg
ljmp
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
in
xchg
sar
jae
repz
cwtl
push
lea
aam
sbb
mov
pop
mov
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
out
pop
test
inc
lea
inc
mov
js
jge
aas
add
sub
adc
sub
jg
jno
sub
insb
cmp
daa
shlb
fsub
and
xor
adc
enter
cmc
adc
mov
xchg
push
jecxz
lcall
add
testl
or
mov
adc
inc
loop
push
push
scas
subl
cmpsl
pushl
mov
fistl
hlt
out
aaa
mov
dec
adc
ret
cmp
inc
add
outsb
das
nop
inc
lfence
push
mov
test
cmp
xchg
in
mov
lods
repnz
sbb
xor
cmp
push
add
sbb
loop
add
ljmp
push
fs
cmp
aam
mov
stos
sub
pushw
int
cld
out
cwtl
scas
arpl
cmp
xor
dec
and
subb
add
dec
mov
pop
mov
pop
loope
jle
dec
sub
cli
addb
frstor
mov
jmp
push
cld
rclb
in
mov
xor
rcll
xchg
fstps
mov
popa
cmp
adc
cmpsl
add
cli
inc
push
daa
or
jg
adc
rclb
shll
or
mov
and
xchg
stos
insl
into
or
iret
fs
test
stos
std
cmpsb
stos
push
add
add
clc
add
mov
mov
hlt
sahf
dec
jb
lahf
scas
es
sbb
mov
push
mov
mov
je
pop
mov
in
xchg
sbb
push
out
stc
int
push
mov
push
out
loope
dec
cmp
dec
mov
jmp
push
xchg
shlb
rcrl
gs
xchg
jmp
or
sbb
