dec
mov
sub
or
sti
ficoms
loope
or
mov
mov
dec
sub
iret
shr
lea
ljmp
ja
inc
in
pop
adc
xorb
decl
jecxz
jns
dec
mov
jecxz
push
mov
les
pusha
sub
ljmp
repz
adc
ja
pop
into
push
out
ja
sub
lods
sbb
ja
push
lcall
rorl
in
repnz
jb
popa
cli
adc
notb
aad
and
decl
lods
outsb
loop
insl
jae
aas
es
add
cmpsl
or
daa
mov
loope
jl
inc
pushf
adcb
ljmp
add
xchg
or
mov
mov
xchg
js
add
sbb
inc
jbe
lcall
dec
ret
xor
test
addr16
ss
enter
or
fbld
cmp
notb
push
inc
in
mov
add
lock
jp
add
add
adc
pushl
jp
sbb
sahf
xchg
test
inc
push
fnsave
cld
lock
data16
lock
call
icebp
fmuls
and
sti
jnp
shl
aad
dec
in
test
or
inc
jge
inc
ljmp
mov
nop
sbb
pushf
in
add
push
pop
int3
out
sub
std
cld
ljmp
movsb
pop
popf
mov
mov
push
adc
pop
mov
fnstenv
es
jmp
mov
jne
adc
pop
xor
sub
mov
mov
push
and
incl
clc
xorl
out
cmp
je
xor
pop
jmp
mov
sub
fbstp
or
pop
mov
dec
sub
mov
mov
add
mov
mov
sahf
lahf
jae
fistpl
jmp
dec
pop
mov
int
ror
cmp
ljmp
sub
imull
jmp
es
sub
out
test
je
jg
xchg
and
nop
pop
in
imul
mov
mov
add
xor
cs
cmc
adc
push
fcoml
int3
lock
inc
mov
mov
test
aas
ja
idiv
or
or
test
mov
xor
push
push
test
std
mov
pop
das
out
sub
adc
xor
iret
lock
adc
gs
add
mov
and
push
mov
call
dec
ja
sahf
cmp
subb
popa
addr16
xor
pop
lsl
jl
pusha
vmulpd
das
sub
in
pushf
sarb
xchg
loope
addb
jnp
in
inc
aaa
insb
pop
test
cmp
cs
cmp
inc
sbb
mov
add
xchg
imul
fistpll
push
out
lcall
shrl
xor
xchg
mov
xor
leave
lds
repz
jns
in
mov
lea
outsb
cld
hlt
fisubs
and
inc
das
cmpsb
push
repnz
in
mov
lret
xchg
pushl
cld
call
mov
ret
test
lret
inc
lcall
loopne
fidivrs
jl
in
push
mov
add
add
xor
xor
les
xor
xchg
cli
pop
ret
call
sub
aam
pop
sbb
gs
std
sbb
scas
int3
loop
push
outsl
out
dec
repz
mov
adc
iret
or
inc
mov
and
cld
fldl
xor
inc
pushl
lods
sub
dec
add
push
mov
lock
mov
jge
or
pop
lock
call
das
fmuls
stc
pop
subl
popf
pop
sbb
loopne
rcr
je
pop
push
inc
add
jmp
add
pop
jmp
and
xchg
std
mov
mov
mov
push
popf
jle
push
outsb
jle
scas
leave
movsl
mov
xchg
adcl
push
jge
mov
sti
scas
incl
in
sbb
inc
push
push
stos
sub
mov
rcrl
fimull
xchg
pop
jmp
daa
mov
cmp
cmp
jmp
sub
call
lcall
mov
lea
push
add
inc
and
int
pop
push
push
adc
mov
mov
add
nop
inc
add
inc
push
add
add
aas
add
inc
xchg
in
jp
imul
mov
lret
xor
xor
fbld
mov
jge
repz
dec
js
test
stos
cmp
cltd
popa
shrl
pusha
adc
xchg
add
pushf
int
ret
mov
cmpb
call
dec
lcall
imul
fdivl
and
ds
xchg
or
cmp
lcall
leave
ret
sbb
mov
mov
inc
sub
push
xchg
ljmp
jecxz
lods
loopne
pop
out
test
mov
pop
fwait
jg
mov
lret
lret
adc
mov
cs
jno
rcrl
xchg
daa
jp
sti
pushf
xor
mov
rcrl
es
push
fidivl
jge
adc
xchg
sarb
das
inc
push
push
mov
scas
das
or
adc
mov
pop
jl
cmp
dec
pusha
ret
stc
hlt
imul
jnp
cmp
clc
inc
mov
bound
pop
rcl
scas
test
aad
adc
ljmp
dec
pop
icebp
xor
jle
mov
andl
sbb
popf
test
cmpsb
fistps
icebp
jle
xchg
bound
lds
rorb
mov
outsb
inc
xor
std
fwait
data16
hlt
mov
test
sub
lds
outsb
mov
aaa
mov
stc
sbb
mov
call
and
cltd
jecxz
xor
sub
and
lcall
sub
nop
push
push
test
outsl
test
mov
sbb
xchg
in
dec
popa
test
cmpsl
xchg
decl
lods
mov
and
popa
xchg
lods
aam
fistpll
into
mov
push
cmp
stc
std
outsl
add
jne
repz
cmpb
xchg
fs
imul
in
popa
rclb
imul
int3
aaa
ss
pop
xchg
add
xor
stos
jnp,pt
mov
pushl
push
sti
adc
notl
mov
dec
jmp
lret
fdivp
jg
mov
data16
ds
lcall
dec
and
stos
cld
sti
stos
ret
out
hlt
pop
ret
pop
push
sub
adc
cmp
mov
jne
testb
frstor
ds
call
sbb
jbe
fnstenv
sahf
sub
sti
mov
nop
repz
scas
xor
pop
lahf
mov
pushf
lds
and
inc
loop
cmp
adc
mov
push
mov
pop
incl
sub
out
add
movl
js
push
jp
test
jp
adc
aas
ljmp
ds
in
popa
nop
jmp
and
xchg
mov
stc
push
loopne
ss
std
mov
cmp
in
es
mov
jne
mov
sub
mov
nop
lcall
scas
repz
call
jg
lds
aad
pop
aaa
jnp
sbb
aas
sbbb
fistpll
adc
lods
push
jp
cmp
cmp
dec
clc
mov
jg
inc
repz
mov
sub
clc
cmpb
loop
sbb
sub
mov
addb
stc
cli
leave
cmp
jecxz
hlt
mov
ds
lods
push
pop
in
add
std
in
dec
scas
sbb
fadds
cld
shlb
adc
fistpll
in
add
icebp
aad
scas
stos
adc
push
cmp
jne
dec
push
inc
fbstp
push
nop
mov
or
shll
cmp
push
mov
outsl
aad
aam
lahf
sub
clc
fnstenv
jmp
jmp
cld
sti
cmp
outsl
ja
subb
repnz
mov
push
cli
mov
and
repz
clc
jmp
iret
repz
sbb
sub
cmp
jg
add
mov
push
les
push
push
ss
cmpb
xchg
xchg
cmp
and
clc
jmp
pop
ljmp
jmp
out
sbb
loopne
sub
loopne
shlb
call
aad
xchg
mov
nop
decl
add
in
dec
cmc
cmc
and
push
adc
in
cmp
std
out
xor
in
aas
jbe
and
test
jb
stc
push
jl
push
in
test
jge
pop
outsl
int
test
cmp
cmpsb
ret
ljmp
cmp
xor
mov
add
outsl
and
int
int
push
cmc
mov
pop
xor
mov
jo
xor
incl
push
push
into
outsl
cmp
repz
or
repz
int3
movlhps
or
or
push
dec
cmc
adc
cmp
ds
or
push
les
scas
das
pushf
aam
outsl
mov
xchg
pop
inc
iret
outsl
sahf
addr16
xor
sub
aaa
xor
les
idiv
repz
outsl
stos
pop
aad
xchg
push
cmp
nop
push
cmp
in
xchg
out
sbb
mov
pop
mov
imul
adc
clc
sahf
cmpb
mov
sub
mov
xchg
mov
mov
adc
and
mov
sub
sar
mov
add
scas
adc
push
push
push
dec
nop
aaa
cmp
daa
push
xchg
cmpb
cmpsb
imul
fs
iret
loopne
push
test
push
adc
das
cli
cld
incl
test
stos
fidivrl
sub
jp
fldcw
aas
adc
in
outsl
fisubrl
and
jp
and
nop
sub
sub
in
mov
jnp
lock
cli
scas
sbb
cmpsl
push
xchg
fwait
mov
enter
out
jp
push
lcall
mov
in
decl
jns
and
push
icebp
xlat
and
sub
inc
test
sbb
ds
adcb
xorl
sbb
fdivs
in
push
stc
push
add
mov
jg
adc
sbb
jmp
lcall
sbb
push
xor
jne
arpl
jns
rcl
push
mov
jns
lds
sar
fldl
pop
mov
cmc
and
inc
addb
decl
push
cmpsb
pop
icebp
in
out
lods
arpl
xor
fldt
movb
adc
bound
loope
jmp
xchg
and
cmp
inc
shrl
addb
add
imul
fs
cwtl
aaa
cld
mov
jle
dec
xchg
or
xchg
fldcw
xchg
xchg
push
lahf
insl
xchg
lcall
fistpll
jnp
nop
pop
cwtl
pop
aad
jle
insl
fs
add
sbb
jg
xlat
pusha
jle
roll
sub
and
icebp
rol
fstpt
pushf
inc
xchg
icebp
rcl
das
fdivl
in
and
mov
inc
inc
pushl
sub
push
mull
mov
fwait
cs
sbb
leave
imul
fstpt
jbe
out
inc
ss
leave
movsb
jnp
xor
jbe
jp
sbb
repnz
incl
popa
xor
mov
mov
xor
je
mov
cmp
sar
das
push
mov
mov
subl
push
std
outsl
jg
lods
rorb
cwtl
sub
xchg
test
cmp
cli
pop
mov
scas
stos
loopne
lcall
jmp
repz
es
mov
push
mov
jecxz
sub
nop
mov
mov
pushf
pop
or
inc
lds
decb
fwait
outsb
ret
sub
std
ljmp
aam
adc
xchg
push
sbb
add
nop
xchg
push
ljmp
sub
mov
stos
cli
xchg
or
inc
jns
xchg
fstpt
loopne
xchg
mov
cli
out
cli
inc
out
sarl
mov
js
repnz
cld
das
push
jp
adc
jnp
or
scas
out
jle
notb
call
mulb
jae
cmp
jns
mov
xchg
not
test
cmp
fistpll
dec
ret
mov
fcompl
outsl
imul
jl
decl
call
sub
scas
icebp
adc
mov
and
pushf
insl
xchg
aas
sub
std
incl
nop
ljmp
scas
push
push
jg
pop
out
xchg
movsb
push
mov
not
arpl
dec
std
cmpsl
stos
inc
adc
push
loope
add
das
mov
inc
push
xor
fdivrs
mov
cmp
fnstsw
sub
incl
into
jno
xchg
dec
ss
ja
popa
outsb
popa
jo
fistpll
mov
je
outsl
imul
je
insl
push
jae
incl
popa
je
add
push
inc
jne
outsb
xor
push
jno
pop
dec
imul
std
jmp
js
arpl
jae
dec
jno
inc
push
inc
xor
jb
dec
xor
dec
dec
dec
jae
call
ja
push
xor
jae
inc
jns
inc
pop
cmp
jp
dec
dec
imul
dec
push
jmp
push
pop
cmp
jns
outsb
pop
insb
ss
jne
lock
xor
push
dec
push
imul
lcall
insb
push
dec
popa
fdivrl
push
jb
xor
ljmp
dec
gs
inc
push
js
bound
imul
addr16
jno
cmp
inc
insl
decl
inc
pop
ss
inc
bound
pop
cmp
dec
inc
popa
jp
inc
inc
inc
push
incl
push
inc
dec
pop
imul
jno
insb
je
jno
push
inc
xor
outsb
jp
push
push
xor
mov
jns
push
je
gs
dec
inc
push
xor
dec
inc
dec
fimull
xor
xorb
sti
xor
push
ss
imul
inc
fs
cld
sbb
pushl
dec
push
ss
jno
inc
push
push
xor
jo
dec
ss
aaa
cld
in
pop
adc
pop
outsb
push
outsb
dec
jae
jb
inc
je
dec
push
cmp
xor
xor
jae
pop
inc
cmp
bound
fs
dec
push
xor
incl
jae
jp
push
dec
inc
ss
imul
pop
push
inc
inc
addr16
lock
add
sbb
dec
je
cmp
push
addr16
outsb
jb
sbb
stos
popa
dec
jne
push
dec
insl
and
add
addl
or
adc
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
decl
push
add
aaa
call
mov
add
or
inc
mov
jg
hlt
testl
hlt
add
mov
and
lret
add
hlt
decl
add
enter
cmp
add
idiv
in
add
adcb
jle
add
sbb
push
addb
sbb
add
xor
std
pushl
test
rorl
xchg
push
pop
or
xorb
adcb
insb
push
orl
inc
or
xchg
xchg
adcb
push
roll
add
ds
cmp
or
add
fadds
test
mov
aam
add
adc
or
mov
mov
sti
test
inc
inc
adc
je
push
data16
lcall
add
pusha
ds
xlat
cmp
jnp
cmp
dec
adc
int
mov
repnz
sub
lret
fstpt
jp
xchg
cmp
add
clc
sub
add
xor
adcl
cmp
dec
imul
add
sub
add
cmpsb
std
pop
inc
jecxz
push
sub
loop
inc
jl
sub
jb
cmpsl
mov
mov
xlat
fiadds
fistps
loopne
ds
pushf
cmp
cli
xor
add
pop
pusha
sbb
and
fidivrl
repnz
cs
mov
add
ss
pop
pop
out
xor
push
imul
dec
enter
lcall
lods
pusha
or
adc
cmp
sub
in
out
push
lock
fdivrl
into
stos
add
scas
insb
setle
inc
sbb
and
sahf
cmpsb
sbb
mov
xchg
inc
mov
jge
jp
mov
sub
lock
int
lock
adc
js
loopne
mov
out
cmp
and
inc
pop
lcall
adcb
jnp
xchg
sbb
stos
push
inc
push
pop
cmp
push
lock
je
pushf
pop
xor
sahf
cld
scas
sbb
loopne
push
cmp
mov
pop
pop
stos
pushf
mov
and
pop
or
cmp
adc
cmpsb
jns
dec
inc
push
pusha
jle
dec
xorl
mov
ss
js
add
sub
and
add
push
lcall
pop
xor
adc
inc
test
pusha
and
jbe
rcrb
call
and
add
or
jo
stos
jno
lcall
inc
pushf
outsb
cmpsl
jge
jecxz
imul
xchg
push
add
pop
adc
push
xor
orl
xor
or
push
in
xchg
in
add
pop
push
push
and
cmpxchg
jnp
loop
push
arpl
jl
mov
xchg
mov
call
loop
loopne
fs
lods
shlb
pop
rcl
shlb
inc
push
hlt
and
or
push
in
imul
scas
sbb
imul
outsb
adc
out
or
hlt
push
cld
imul
add
sahf
mov
divb
sbb
dec
cmp
dec
imul
mul
and
xor
shlb
imul
push
cmp
rorb
loopne
xor
aam
lock
jo
mov
fbstp
into
fdivr
or
mov
sbb
dec
shll
dec
pop
mov
add
lock
jle
pop
into
mov
sarl
lock
cmp
xor
sarl
stos
mov
or
stos
adc
add
inc
stos
jo
mov
insl
repz
mov
movsb
push
mov
cltd
mov
and
pusha
xorl
lock
adc
add
lock
shlb
pop
mov
push
add
cmp
mov
std
outsl
dec
sti
push
mov
push
pop
repz
xor
in
jo
xor
mov
dec
pop
push
loope
jno
mov
or
inc
sbb
test
xor
and
cmpxchg
xor
lock
cwtl
mov
dec
mov
mov
ja
lea
inc
clc
add
pushl
mov
arpl
add
jns
add
jg
pop
push
add
adc
outsl
ljmp
mov
mov
cli
add
sub
push
sar
mov
sbb
pop
ds
xchg
pop
dec
mov
or
decl
int
push
or
push
push
and
arpl
add
xor
sti
mov
les
adc
in
inc
mov
cli
pop
add
lcall
imul
iret
inc
cs
int3
dec
pushl
and
add
test
xchg
test
mov
and
test
cwtl
sbbb
xchg
cmp
push
fsub
mov
incb
shr
decl
into
icebp
or
jbe
add
inc
out
push
jo
jbe
mov
repz
jae
add
pop
mov
cmpsb
ds
outsl
add
ror
cmpsb
mov
cmpsb
test
pushl
fidivs
mov
xchg
xchg
sahf
add
inc
icebp
mov
cmpsb
mov
adc
add
jo
movsl
je
add
dec
cmp
adc
add
push
cld
cmp
add
mov
dec
xchg
mov
or
fiaddl
xchg
push
xchg
inc
add
call
fcomip
popl
cmpsb
xchg
sahf
rolb
sub
add
adc
mov
lock
add
add
mov
add
mov
cmp
pop
shll
jne
sub
jo
imul
int
cmp
xor
and
push
lods
daa
push
and
add
imul
mov
mov
add
and
add
xchg
adc
push
inc
add
fmull
xor
sub
mov
shrl
mov
sub
sub
jo
xchg
adc
adc
fiadds
xor
push
adc
sub
mov
or
cmc
cmc
and
push
div
add
sub
outsl
shrl
dec
add
push
inc
add
mov
xlat
lock
adc
and
add
add
jp
adc
out
clc
int
mov
sbb
rcl
aam
rcl
rcl
cld
pushl
add
fcomp
movb
rol
add
push
add
loop
call
xchg
sahf
lahf
pushf
popf
lcall
test
orl
test
testb
mov
pop
add
add
sbb
pushl
add
add
hlt
cmc
repnz
incl
std
cli
sti
cld
clc
stc
sbb
es
in
add
or
push
add
jmp
pop
fdivr
lock
and
aas
add
inc
out
mov
mov
inc
fidivrl
push
fwait
mov
dec
adc
inc
fstpt
ret
xchg
lea
jb
mov
xlat
fnstenv
outsl
xor
or
call
jns
and
sbb
ret
call
xorb
xchg
mov
popf
jnp
push
jo
ja
xchg
inc
dec
push
sbb
mov
mov
xchg
mov
mov
lock
lea
loop
pop
mov
pop
push
adc
mov
mov
push
shr
sbb
sar
mov
fcomip
jmp
pop
pushf
add
jmp
ljmp
addr16
lret
icebp
pop
jg
ficoml
aam
ljmp
add
pop
adc
inc
add
push
cld
fldt
mov
mov
or
cmp
movl
dec
ljmp
repz
das
bound
add
and
sbb
fistl
sbb
add
fisubrs
mov
cmp
ljmp
xchg
or
push
and
out
xchg
and
call
push
or
mov
sbb
out
les
rolb
add
mov
insl
ss
cmp
dec
mov
lods
insl
in
add
push
pop
sub
jbe
add
rolb
out
sarb
int
stos
out
add
roll
repnz
das
sub
mov
adc
add
lret
enter
add
inc
insb
in
mov
or
push
movsl
lods
test
clc
cmp
lcall
adc
ds
mov
sub
push
cwtl
rorb
or
pop
xchg
mov
add
push
push
xor
push
jp
add
ficomps
rclb
mov
or
sahf
or
sub
push
adc
fidivs
pop
sahf
add
push
inc
sar
addl
fnstcw
andb
rorb
push
rclb
out
xor
les
xchg
int3
rcrb
cmpsb
cwtl
cwtl
xchg
pop
add
or
push
jle
fld
sub
into
dec
call
push
cmpsl
sbb
out
mov
roll
in
in
imul
inc
jo
cli
sbb
pmaxub
ljmp
out
sub
pop
jbe
rclb
test
sahf
mov
jae
faddl
xchg
inc
push
jecxz
inc
lock
aaa
fwait
out
lret
add
adc
ljmp
mov
ljmp
popf
addb
and
loope
mov
adc
sbb
shrb
cmp
rol
inc
inc
test
adc
loopne
adc
or
notl
add
jmp
outsl
push
filds
sub
es
lds
push
mov
in
or
or
or
or
mov
fisttps
inc
loopne
mov
push
insl
sub
mov
insb
cmp
sbb
or
out
cmp
lods
insl
ficompl
rolb
inc
jns,pn
pop
or
push
push
or
imul
mov
loope
fcmovnu
cld
pop
push
loopne
cmp
lcall
lods
call
mov
push
fimull
stos
out
out
push
jg
pop
or
cs
xor
loopne
sub
outsb
int
cmpsb
xor
in
mov
mov
loopne
jmp
pop
sar
jl
rolb
into
dec
adc
or
mov
adc
or
mov
mov
loopne
cs
add
test
add
fs
adc
push
lcall
mov
add
popf
aam
mov
pop
lret
loopne
shrb
sar
dec
loop
addr16
mov
mov
adc
insl
push
mov
cmp
or
test
pop
pop
jecxz
or
enter
in
xchg
sbb
loopne
jle
loopne
jb
loopne
mov
pop
shr
rolb
loopne
scas
sub
jns
out
push
mov
gs
ret
clc
andl
xor
push
or
pop
fdivl
pusha
add
add
pop
or
xor
add
jns
mov
daa
outsb
sbb
loopne
jp
jnp
cld
popa
loopne
mov
add
fidivs
add
mov
fdivs
inc
add
xchg
cmpsb
popa
cmp
add
dec
pop
ljmp
loop
repz
or
xlat
cld
xchg
movsb
or
mov
nop
je
jns
cmpsl
or
loopne
and
adc
inc
jnp
cld
add
cmp
loopne
jle
mov
mov
sub
mov
adc
into
cmpsb
and
jo
fcomi
loope
ficoml
add
mov
nop
mov
mov
sub
ja
cmp
lds
loopne
mul
xchg
js
adc
filds
xchg
call
stos
xor
ds
loopne
mov
call
lret
jo
ret
add
scas
jo
fs
or
repnz
jo
jnp
inc
roll
shlb
sbb
lock
outsl
fistpll
mov
push
sub
mov
scas
jo
xchg
stos
cmpsb
or
jo
mov
iret
in
sbb
jo
adc
fwait
jo
mov
pop
mov
xor
or
add
shll
dec
stos
xor
jo
dec
mov
xor
inc
pop
fidivs
bound
fldt
js
stos
sahf
sbb
fistpl
mov
inc
inc
jo
jo
and
stos
pop
lea
ljmp
mov
mulb
inc
mov
es
fisttpl
aas
outsl
sbb
cmp
lock
jle
jo
xorb
mov
shrl
sub
cmp
or
mov
adc
sub
jecxz
repz
setae
ljmp
inc
jp
pop
sbb
frstor
mov
pop
push
mov
inc
mov
mov
or
add
jno
add
add
jg
xchg
inc
push
mov
loopne
cmp
add
mov
pop
rcrl
or
xchg
mov
lock
stos
in
lock
jl
inc
clc
inc
loop
lock
sbb
push
ret
mov
fisubl
arpl
or
mov
push
flds
jo
sahf
xor
pushf
cld
repnz
ret
outsl
in
ja
mov
insl
addl
add
hlt
push
popa
inc
lds
cwtl
in
add
xor
sub
les
mov
test
std
in
outsl
in
xor
push
repnz
imull
hlt
push
divl
notl
lods
mov
pop
notl
pop
notl
pop
testl
inc
div
testl
mov
inc
test
inc
fcmovnu
cld
int
xor
xchg
testl
dec
testl
dec
testl
div
divl
test
xor
lock
idiv
cmp
out
idivl
imul
cmp
clc
mull
negl
daa
divl
and
cmpsb
imull
imull
mov
testl
div
notl
test
adc
icebp
negl
idiv
sbb
out
negl
imul
sbb
stc
testl
fwait
out
divl
add
cmpsl
testl
loopne
das
clc
cltd
testl
imull
push
hlt
rolb
hlt
shl
push
faddl
ret
shrl
hlt
pushf
ret
sbbb
xor
cld
outsb
hlt
incb
sarl
adc
ljmp
stos
hlt
std
ret
out
fcomi
call
hlt
xlat
enter
testl
mov
fwait
mov
push
cmc
mov
push
cmc
int
in
fsubrl
aam
nop
inc
cmc
mov
jl
jl
lret
in
aad
xchg
aaa
fdivl
push
mov
ss
push
xor
fadds
cmc
loopne
ret
out
idivl
cmc
fdiv
mov
mov
imull
cmc
test
jg
aaa
sub
sahf
imull
cmc
pushf
push
cmc
div
adc
fstps
cmc
loope
repz
cmc
mov
mov
testl
fwait
mov
or
popf
mov
enter
hlt
add
push
repnz
push
repnz
int
push
repnz
repnz
push
repnz
pop
repnz
pop
int
cld
int
push
pop
repnz
pop
repnz
pop
repnz
pop
cld
int
cld
repnz
pop
repnz
inc
repnz
inc
repnz
movb
int
inc
repnz
movb
inc
repnz
movb
dec
repnz
dec
int
cld
int
inc
dec
repnz
dec
repnz
dec
repnz
dec
repnz
dec
cld
int
cld
repnz
dec
repnz
ss
aaa
repnz
xor
xor
xor
int
xor
ds
xor
cmp
repnz
ds
aas
int
cld
int
cmp
cmp
cmp
and
cmp
cs
int
cld
repnz
es
daa
repnz
and
pop
and
rcr
repnz
and
adc
and
push
and
pop
cs
aaa
jg
das
repnz
sub
sbb
sub
add
sub
insl
sub
push
cli
lock
repz
lock
repz
jg
mov
adc
aam
xor
shl
xor
shll
repz
aaa
jg
lock
sarl
repz
aas
repz
fdiv
cmp
aaa
jg
repz
cmp
fstpt
repz
cmp
fldenv
repz
lock
repz
aaa
jg
aaa
and
lock
ret
repz
and
shl
jg
lock
shrl
into
lock
repz
sub
int3
lock
repz
repz
jg
repz
adc
mov
repz
adc
mov
repz
adc
mov
jg
aaa
adc
mov
push
repz
sbb
mov
aaa
jg
lock
mov
sbb
mov
push
repz
lds
cmpsl
lock
movsb
push
lock
pop
lock
add
cmpsl
lock
mov
lock
repnz
lock
pop
lock
repnz
lock
jmp
outsl
pop
lock
repnz
lock
pop
lock
lock
lock
add
inc
lock
repnz
lock
inc
cwtl
repnz
lock
repz
jg
repnz
lock
lock
repnz
lock
push
dec
lock
jg
aaa
jg
lock
repnz
lock
dec
lock
lock
dec
lock
repnz
aaa
lock
repnz
xor
lock
ret
sbb
xor
mov
lock
lock
lock
push
lock
fwait
fwait
int
add
int3
lock
lock
add
cld
in
aaa
lock
leave
adc
lock
and
int
cld
int
mov
lock
and
shlb
repnz
cld
lock
sub
lock
int
data16
mov
lock
out
aad
repz
adc
lock
lock
lock
fdivs
in
lock
out
repnz
out
lock
sbb
lock
sbb
ljmp
outsl
sbb
call
pop
lock
add
add
lock
mov
aad
notb
add
in
push
lock
lock
fwait
mov
lock
lock
or
fisttpl
lock
or
sar
mov
faddl
fdiv
push
icebp
jle
push
icebp
jg
repz
adc
jl
push
icebp
pop
and
jp
pop
icebp
js
icebp
pop
cmc
pop
icebp
jns
stc
pushl
pop
icebp
jae
pop
icebp
jecxz
inc
icebp
pop
cmc
inc
icebp
pop
aas
inc
icebp
pop
cmc
pushl
incl
pop
cmc
inc
icebp
cmp
inc
icebp
data16
inc
icebp
test
cmp
dec
icebp
cmp
push
dec
icebp
cmp
aaa
icebp
addr16
xor
fs
xor
icebp
cmc
xor
arpl
xor
pusha
cmc
xor
popa
push
ds
outsb
cmc
aas
icebp
outsl
cmc
cmp
insb
cmc
cmp
icebp
push
cmp
imul
icebp
push
loopne
loopne
cmc
es
push
cmc
daa
icebp
push
cmc
and
les
icebp
push
cmc
and
jg
push
int3
and
lret
push
cmc
cs
pop
cmc
das
icebp
pop
cmc
pop
icebp
inc
add
cmc
adc
inc
cmc
adc
inc
cmc
adc
fsubp
call
pusha
adc
fcoml
icebp
inc
cmc
push
icebp
dec
cmc
pop
icebp
dec
cmc
sbb
shlb
hlt
sbb
sbb
add
das
lock
dec
cmc
sbb
clc
push
icebp
idiv
incl
icebp
aaa
cmc
add
xor
cmc
add
xor
add
xor
div
xor
add
xor
push
icebp
ds
out
clc
decl
icebp
aas
cmc
push
incb
push
cli
rcll
rcll
aad
xlat
aad
hlt
call
push
push
aad
push
aad
push
aad
push
aad
insl
aad
imul
push
call
pop
pop
aad
pop
aad
xchg
aam
xchg
aam
xchg
aam
fst
ss
aam
jmp
call
xor
call
aam
dec
aam
mov
cmp
and
cmp
and
cmp
xchg
aam
in
call
sub
je
sub
sub
sub
rcl
sub
sbb
aam
push
testl
push
xlat
or
xlat
sub
aam
push
pushl
rcll
jmp
call
adc
call
adc
sti
rclb
cld
rcrb
sbb
pop
std
rcrb
out
rcrl
jmp
rcrl
rcrl
jmp
rcrl
dec
rcrl
decl
decl
pop
cld
mov
aad
decl
add
ljmp
ret
fcmovbe
push
jmp
call
ficoms
cmc
push
cld
hlt
push
cld
repnz
push
cld
repz
push
cld
icebp
push
cld
mov
pop
cld
cld
pop
cld
loop
pop
cld
in
pop
cld
aad
pop
cld
rcl
pop
cld
rcl
inc
cld
ljmp
xlat
inc
cld
mov
xlat
inc
cld
mov
xlat
inc
cld
scas
xlat
inc
mov
lods
xlat
dec
mov
dec
cld
in
dec
cld
dec
cld
cmp
xor
ljmp
xlat
xor
stos
xlat
xor
test
aas
cld
aam
cmp
sarb
cld
aaa
sarl
cld
inc
sar
cmp
cmp
shll
cld
out
daa
cld
out
and
ljmp
cld
call
jg
and
push
shrl
cld
shrl
cld
inc
shrl
cld
cmp
sub
pop
rcll
cld
cmc
dec
xchg
ds
pop
cld
pop
rcll
cld
dec
rcll
cld
mov
call
adc
adc
pop
rcrl
cld
inc
rcrl
cld
dec
rcrl
rcrb
call
sbb
xchg
rcrb
cld
nop
rcrb
cld
xchg
rolb
roll
push
add
xlat
incl
cld
loope
add
cltd
shl
cld
fwait
rolb
cld
mov
push
cld
mov
paddb
mov
test
rorb
jecxz
or
or
in
or
data16
lret
std
enter
jle
std
mov
std
pop
decl
std
push
aam
std
mov
std
pusha
xor
test
aam
push
cld
cmp
arpl
cmp
push
aam
std
and
std
out
cs
jne
icebp
aaa
sbb
push
aam
std
push
push
cli
loope
push
cli
jmp
repz
cli
daa
repz
and
adc
cli
and
adc
and
adc
and
adc
and
push
cli
ljmp
repz
cli
das
repz
sub
sbb
cli
sub
sbb
sub
sbb
sub
sbb
sub
push
cli
call
repz
cli
pop
repz
adc
add
cli
adc
add
adc
idiv
adc
add
adc
push
cli
lcall
repz
pop
repz
sbb
push
sti
idiv
push
sti
hlt
clc
push
sti
cmc
clc
push
sti
repnz
push
sti
repz
push
sti
jg
push
clc
push
sti
icebp
clc
pop
sti
clc
pop
sti
clc
pop
enter
clc
pop
sti
cli
mov
sti
clc
pop
add
pop
sti
stc
clc
inc
sti
out
inc
sti
out
inc
sti
in
inc
sti
in
inc
sti
loop
inc
sti
jecxz
inc
sti
loopne
inc
sti
loope
dec
sti
out
clc
dec
sti
out
clc
dec
sti
in
clc
dec
sti
in
clc
dec
sti
ljmp
sti
call
clc
ss
clc
aaa
sti
xlat
clc
xor
aam
xor
incl
clc
xor
sar
xor
sar
xor
sar
ds
fdivrp
aas
sti
cmp
fdivr
cmp
sti
cmp
cmp
fdivr
cmp
fprem
es
xabort
sti
xbegin
jmp
sti
ret
sti
ret
clc
and
sar
sti
sar
sti
into
clc
das
sti
iret
clc
sub
int3
clc
ljmp
sti
enter
leave
clc
push
sti
mov
pop
sti
mov
adc
mov
adc
sti
mov
adc
mov
call
sti
mov
adc
mov
push
sti
mov
clc
sbb
mov
clc
sbb
mov
clc
incl
sti
cmpsb
clc
pop
sti
cmpsl
clc
add
movsb
clc
add
sti
mov
clc
idiv
mov
clc
decl
sti
scas
clc
psubq
push
clc
push
clc
clc
ret
clc
ret
push
clc
rol
call
rol
clc
into
pop
clc
iret
pop
clc
int3
pop
clc
int
pop
clc
lret
clc
lret
pop
clc
enter
lcall
leave
movl
mov
inc
clc
mov
inc
clc
mov
inc
clc
mov
inc
clc
mov
inc
clc
mov
incl
mov
dec
clc
mov
dec
clc
mov
dec
clc
mov
dec
clc
mov
decl
mov
aaa
clc
cmpsl
xor
movsb
xor
clc
mov
xor
mov
pushl
clc
mov
aas
clc
scas
cmp
lods
cmp
clc
stos
cmp
stos
cmp
test
in
clc
cmp
test
daa
clc
xchg
and
xchg
and
add
and
data16
out
out
out
out
out
insb
ss
sub
sub
out
fwait
int
mov
sub
push
out
out
out
mov
insb
ss
out
out
out
ss
int
out
out
out
out
out
mov
out
out
clc
fwait
movl
clc
mov
add
clc
mov
add
clc
jb
add
jo
idiv
jnp
add
js
push
and
andb
movhlps
or
out
cs
ja
dec
in
mov
movsb
testl
mov
push
add
sahf
out
push
push
push
push
push
out
sahf
out
pop
pop
pop
pop
pop
pop
add
add
push
jns
out
std
cli
sti
sti
in
jns
out
in
in
or
test
shlb
iret
repz
shll
iret
repz
mov
iret
jnp
xchg
sahf
fists
iret
repz
notl
fstps
cmp
dec
jg
jns,pn
repz
sti
addr16
xchg
gs
sahf
out
bound
jns
pusha
shll
outsb
sarl
out
outsl
fisubrs
insb
dec
sahf
out
push
xlat
insl
aam
push
push
fldt
pop
pushf
iret
repz
pop
popf
pop
lcall
pop
cwtl
pop
cltd
testl
inc
push
xchg
inc
xchg
iret
repz
inc
xchg
inc
xchg
inc
xchg
cmp
repz
nop
inc
xchg
dec
pop
cmp
repz
dec
lahf
dec
out
dec
jns
daa
daa
ss
xor
and
sahf
out
xorl
xor
xor
sahf
out
mov
lea
out
sahf
out
mov
mov
sahf
out
sahf
mov
jbe
ja
jns
out
je
jne
jb
jns
out
jae
jo
sahf
out
sahf
jno
push
adc
adc
push
adc
pop
push
idivl
repz
sbb
push
ds
stos
xchg
push
stos
dec
test
adc
sahf
jmp
iret
std
dec
push
lock
ror
sbb
int
mov
fsubrs
sub
mov
ljmp
push
repnz
imul
adc
je
lds
call
outsb
incl
or
or
inc
xchg
adc
mov
enter
andb
dec
cmp
pushl
cmpsb
rcrl
xor
mov
imulb
fwait
cmp
pop
scas
push
sub
decl
arpl
fcmove
xchg
sub
jecxz
xchg
jno
int
stos
push
fiaddl
sub
ljmp
inc
mov
mov
out
jp
inc
sbb
jecxz
cli
xor
incl
clc
sbb
push
loope
jecxz
push
pusha
scas
cmc
xor
mov
nop
je
push
hlt
cltd
dec
sub
scas
lahf
mov
sahf
mov
adcl
in
mov
lods
mov
mov
pop
icebp
jmp
addr16
mov
cmp
in
andl
mov
xchg
popa
clc
jp
add
adc
cmp
sbbb
cmp
lcall
inc
jmp
dec
lds
push
pop
ffreep
mov
mov
fadd
out
fcmovb
jg
neg
jo
inc
ljmp
xchg
ljmp
or
sub
lea
decl
mov
test
inc
rcrl
int
mov
mov
dec
sub
push
xchg
xchg
xchg
xchg
lds
lds
jp
lds
push
lds
insb
in
std
push
addr16
inc
push
ljmp
adc
lea
stos
fadd
ljmp
lret
pushl
ret
mov
mov
mov
cmp
pop
data16
icebp
arpl
push
repz
and
sub
adc
sbb
add
or
bnd
cli
ret
loop
stc
dec
rcr
cld
nop
sbb
jnp
xchg
les
ret
push
push
ret
pop
ret
inc
ret
dec
ret
pushl
ret
adc
stos
rolb
cmp
mov
mov
mov
ret
sar
pushl
shrb
dec
shlb
sub
pushf
cs
call
xchg
leave
ss
add
or
mov
cmpsb
push
dec
dec
enter
subl
xchg
shrl
and
dec
sub
pop
int
lret
xchg
lret
push
lret
add
mov
in
inc
cmp
gs
dec
orb
out
leave
fmul
insb
leave
inc
leave
xor
sub
sbb
or
incl
aam
loope
xchg
int3
dec
cmp
repnz
dec
stos
cmp
and
pop
inc
iret
leave
movsl
scas
movl
les
xchg
inc
add
xchg
aam
jle
sbb
mov
loopne
xchg
mov
ret
push
xchg
ret
cltd
ret
add
ret
je
jno
js
jmp
mov
out
lret
ljmp
jo
jg
ljmp
jo
dec
arpl
shr
jmp
rclb
incl
cld
cld
dec
test
fldcw
sub
aad
jmp
xorb
rcrl
sarl
decl
shll
pusha
into
imul
loopne
lret
inc
sbb
call
out
stos
in
mov
gs
fmulp
int3
adc
sbb
in
int
int
int
int
jmp
mov
das
pop
mov
push
sbb
sahf
insl
push
imul
cmp
repz
dec
std
lret
loopne
ror
fmul
into
lret
mov
pop
push
cli
push
dec
cmp
hlt
out
jl
mov
sahf
lcall
orl
arpl
insl
enter
enter
ret
cmp
fistpll
ljmp
stc
andb
mov
sbb
hlt
lds
ret
jge
push
ret
inc
push
ret
or
fcmove
test
sarb
mov
push
pop
sbb
lds
cmp
call
iret
test
mov
nop
int3
jne
outsl
jnp
inc
mov
jno
in
fimull
mov
cmp
sbb
lret
mov
pop
lret
xor
cmp
adc
dec
loope
and
jo
sbb
adc
jle
test
sub
dec
ja
dec
inc
add
enter
mov
out
ror
fcmovne
push
leave
cmp
jbe
out
das
dec
mov
cmpsl
aam
or
into
rorb
push
scas
sub
jle
shrl
inc
sub
stc
scas
add
movsl
dec
loope
xor
or
cmp
clc
stc
out
in
loop
loopne
out
lock
out
in
in
ljmp
fstp
cmp
int
lret
enter
and
inc
lock
stos
stos
and
inc
aas
fildll
jbe
je
jb
jo
jle
jl
jp
js
fs
popa
outsb
outsl
insb
out
clc
ljmp
mov
push
push
push
push
push
push
push
pop
pop
pop
pop
sbbb
inc
cli
incl
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
ss
xor
xor
xor
ds
cmp
cmp
cmp
ljmp
and
and
cs
sub
sub
sub
push
pop
adc
adc
adc
push
pop
sbb
sbb
sbb
push
pop
add
add
testb
or
jmp
sbb
lds
lcall
xchg
or
mov
mov
mov
mov
mov
xchg
mov
cmpsl
movsb
movsl
mov
scas
scas
lods
adc
adc
xchg
add
sbb
add
add
add
add
sbb
add
add
xchg
add
add
add
add
inc
add
incl
pushf
cmc
mov
and
add
sub
cmc
adc
and
outsl
ss
mov
sbb
and
mov
addb
outsl
cmpb
adc
outsb
mov
or
pop
clc
push
or
mov
ret
or
fwait
std
fistpl
ljmp
in
add
in
push
and
xchg
clc
in
jmp
fildl
mov
aas
add
adc
mov
rolb
icebp
mov
xchg
rorb
or
xchg
lcall
mov
mov
xchg
sbb
rolb
xchg
xchg
sbb
fists
lcall
or
or
test
icebp
fldt
loopne
jne
popa
cmp
or
jge
inc
invd
mov
inc
add
hlt
mov
fadd
add
cmpsb
mov
and
mov
cwtl
lods
adc
icebp
xchg
inc
nop
xchg
testb
mov
cld
add
movb
roll
inc
add
outsl
push
loop
cmp
push
mov
add
ljmp
sbb
inc
add
add
adc
rclb
rolb
add
add
xchg
sbb
inc
add
rorl
fcmovnu
sbb
into
mov
push
imul
xor
sbb
inc
mov
inc
mov
mov
or
add
lock
cltd
mov
stos
mov
cmpb
andl
add
lds
dec
xchg
pusha
add
mov
mov
clc
in
loopne
cmpsb
and
pop
lahf
pusha
push
fdivrl
bound
arpl
stos
add
xorb
pusha
sahf
rcll
pop
cld
out
insb
addb
or
fcoms
fdiv
ljmp
cltd
cltd
xchg
add
xchg
and
adcl
incl
and
sbb
and
lcall
or
or
pusha
add
popa
add
inc
cld
mov
movsb
mov
mov
push
inc
shl
push
loop
loope
loope
cmp
cwtl
ret
sbb
xchg
loop
cmp
mov
decl
jne
inc
bound
jno
jle
add
jl
jle
je
add
mov
call
data16
insl
add
addr16
add
hlt
loope
out
movsb
ljmp
test
scas
lea
mov
add
scas
loopne
fcmovu
fmul
sti
add
out
loopne
call
add
xor
mov
clc
add
or
rcrb
sbb
add
add
outsl
cli
lcall
push
or
dec
or
or
rclb
push
push
pop
xchg
adc
das
test
into
add
xlat
rol
aam
outsb
or
sbb
jg
int3
fcmove
cld
fiadds
fcmovbe
ret
iret
dec
enter
xlat
fdiv
out
or
clc
inc
in
loop
popf
das
adc
or
prefetcht0
push
sub
pop
mov
or
std
das
clc
xlat
sbbb
adc
add
inc
dec
dec
inc
or
mov
xchg
adc
sbb
add
dec
cmp
out
push
add
sti
in
stos
sbb
push
dec
add
dec
adc
or
jo
inc
inc
inc
inc
pop
inc
mov
out
enter
add
jle
sub
jg
cld
xor
xor
pop
bnd
sub
add
jo
das
jp
ljmp
outsl
push
add
or
pop
add
adc
or
pushf
add
mov
mov
mov
sub
mov
lea
decl
rclb
cwtl
add
popf
popa
pop
and
xor
xor
ss
std
in
mov
pop
add
or
adc
cmp
adc
decb
add
or
adc
adcb
aaa
decb
je
outsb
fs
je
cmp
mov
adc
xchg
mov
bnd
sar
mov
je
add
jle
js
pop
shlb
js
aaa
cld
sub
jp
jg
addr16
push
inc
jae
sbbb
jbe
push
dec
dec
add
in
outsl
bound
pop
sahf
hlt
mov
sbb
aam
stos
mov
xchg
icebp
repnz
icebp
filds
rol
add
jmp
out
jecxz
mov
aad
jg
mov
fstps
xlat
pop
aam
rcl
mov
mov
add
add
mov
pop
lock
cld
cmc
loope
mov
add
dec
dec
inc
inc
inc
or
push
dec
dec
data16
lods
add
scas
mov
mov
mov
out
mov
mov
frstor
decl
add
popa
push
pop
add
push
add
mov
add
add
test
sti
adc
add
ljmp
jecxz
jecxz
out
stos
hlt
mov
clc
mov
jle
push
push
pop
pop
add
dec
mov
adc
push
mov
dec
inc
inc
sbb
inc
add
subb
add
orb
cmp
outsb
xor
div
mov
fdivrs
lock
mov
in
loopne
out
add
cld
hlt
mov
lcall
add
adc
add
dec
pop
mov
add
adc
inc
mov
jno
push
es
and
daa
sub
and
sub
xor
pop
or
mov
sarb
xchg
xorb
mov
pop
mov
add
push
sbb
cmpsb
pop
or
lcall
mov
scas
test
add
mov
mov
scas
lods
mov
jbe
ljmp
jmp
mov
std
inc
jg
insl
jnp
arpl
or
popa
data16
pop
ja
outsb
jo
sbb
dec
gs
jle
imul
jl
ja
or
subl
mov
mov
jp
push
pop
add
fcomip
pop
je
dec
cmp
add
xor
sbb
cmp
das
sub
jecxz
clc
aas
negb
dec
pop
jno
inc
bound
inc
push
jns
inc
ljmp
mov
aam
fs
lods
mov
and
cwtl
mov
dec
and
push
sbb
ret
adc
push
push
icebp
add
cmp
lret
adc
std
adc
xchg
adcl
mov
or
push
inc
insb
xchg
push
push
inc
push
push
addr16
pop
adc
dec
pop
icebp
add
inc
add
sar
imul
jb
jbe
or
popa
ja
es
jge
insb
pop
xor
mov
and
loope
jg
ljmp
out
out
stc
shr
lock
incl
sub
add
es
sub
cmp
aaa
xor
loope
hlt
xchg
popf
test
or
sub
or
add
add
cmp
cmc
inc
ljmp
out
cld
sti
mov
jp
dec
fs
into
scas
mov
add
adc
or
sbb
xchg
decb
rcl
ror
push
jecxz
fstp
ret
mov
push
add
add
mov
popf
jg
dec
xor
loopne
jl
xchg
jmp
test
cli
add
in
std
mov
or
lcall
add
jge
jle
fs
jl
or
jge
sub
in
loop
ret
xlat
aaa
frstor
jle
add
outsl
into
loop
or
js
jg
jg
dec
inc
xor
push
dec
pop
mov
push
pop
push
dec
adc
pop
testb
inc
push
inc
jg
outsl
sub
insl
pusha
imul
xor
loop
stc
lcall
xchg
out
icebp
in
and
cli
cmpsb
mov
mov
xchg
popl
adcb
add
lcall
faddl
ret
test
xchg
cmpl
test
lcall
cmpsb
scas
mov
xorb
shrb
sti
fwait
jecxz
jno
shl
in
jno
inc
jle
or
jae
pop
aaa
cld
xchg
add
stos
pop
lea
and
jmp
add
push
inc
push
xor
lcall
scas
test
sub
aaa
cld
pushl
cmp
sub
add
sub
push
add
adc
adc
add
inc
pop
cmp
mov
add
and
movsl
aam
pushf
popf
sahf
or
jmp
rcrl
mov
mov
mov
pop
repnz
jmp
out
and
add
mov
cmpsb
in
lock
in
movsl
scas
cli
lcall
dec
or
enter
int
jno
leave
fcmovu
rol
fldl
mov
cld
rcl
inc
hlt
and
hlt
je
lds
lock
add
mov
mov
mov
ljmp
adc
lock
pushw
lahf
jo
imul
jae
xor
imul
jbe
jno
inc
pop
sub
inc
inc
or
pop
add
pop
outsb
dec
push
push
or
bound
jb
insb
insb
jle
test
xchg
loope
cmpsb
das
clc
jg
stos
movsb
je
mov
push
or
lock
adc
mov
pop
hlt
cmp
sub
cmp
or
jle
imul
jle
jns
jns
inc
mov
pop
push
push
add
pop
dec
inc
push
cmpsb
pop
fiaddl
dec
inc
push
or
ja
mov
push
add
arpl
jns
add
arpl
jo
imul
pop
and
sbb
inc
orb
repnz
dec
js
or
dec
pop
pop
mov
and
push
adc
stos
adc
cli
mov
or
fs
dec
dec
dec
dec
dec
xor
xor
cld
test
pushl
inc
test
dec
jae
sub
and
xor
adc
inc
insb
xchg
xor
jg
mov
or
or
cs
xor
add
cs
jg
inc
roll
hlt
ficompl
xchg
pop
icebp
fcomip
xchg
mov
cmp
cmp
add
je
pop
mov
lock
movhps
add
inc
clc
ljmp
sti
and
add
or
sbb
inc
sbbl
xchg
leave
addl
xor
pop
push
pop
js
jecxz
adc
adc
nop
notb
mov
and
imul
int
fcmove
int
aad
ljmp
loope
cmc
jecxz
fistl
jmp
test
jmp
incl
in
out
repz
outsl
and
fidivl
jl
dec
dec
and
push
pop
push
fcom
sub
xor
sbb
push
add
pop
inc
mov
fwait
scas
and
jno
jnp
add
xchg
sub
aaa
cwtl
mov
xlat
jmp
push
xchg
adc
cmp
xor
dec
pop
inc
or
push
jo
dec
push
pushf
push
loopne
cli
dec
inc
inc
dec
inc
cmp
cwtl
xchg
add
cmp
cltd
mov
test
xchg
fwait
negl
add
in
sub
sub
adc
sub
jo
mov
scas
add
mov
push
std
mov
mov
add
mov
add
test
enter
cli
mov
pop
decb
cld
int
xlat
in
stc
push
pushf
cltd
cltd
clc
into
out
add
mov
cmp
push
inc
add
cmp
xor
pop
inc
or
out
clc
decl
stos
mov
lret
test
nopl
add
outsl
adc
pop
inc
add
inc
pop
xchg
or
scas
aaa
sti
dec
inc
cmp
and
sub
push
aam
add
hlt
icebp
add
jae
add
sbb
sub
or
jmp
daa
das
and
and
cmp
inc
pop
aas
xor
adc
pop
out
add
into
clc
loop
cli
out
jg
and
nop
call
shr
fst
mov
bound
mov
adc
int3
add
jl
adc
jp
sub
pop
or
inc
add
adc
cmp
shl
or
je
pop
pop
add
aaa
sub
call
cld
addr16
sub
lock
call
stos
out
ljmp
lods
mov
lcall
mov
cli
pop
pusha
cmp
cmp
sub
and
add
xor
or
mov
lods
xchg
pop
xorb
out
lret
ffreep
fadds
jo
incl
outsl
arpl
das
adc
data16
outsb
cmpb
outsl
test
cmpsl
cmc
xchg
mov
lcall
push
push
pop
inc
push
add
cmp
add
cmp
ds
push
jno
xor
daa
sub
push
and
add
pop
arpl
add
push
add
ljmp
or
pop
inc
adc
cmp
xor
test
rcl
rcl
lock
cmc
incl
fld
rol
ljmp
call
ror
mov
xlat
flds
add
enter
add
add
inc
jns
bound
add
inc
jl
jg
ja
fs
xchg
lods
scas
mov
mov
mov
xchg
test
add
cmp
add
into
out
rorl
roll
mov
int
fucomip
fst
fadd
add
fwait
mov
push
add
push
jg
pop
inc
adc
je
dec
dec
xchg
add
mov
add
inc
add
inc
inc
push
cmp
mov
jg
cmp
xor
add
jb
data16
aas
insb
add
pop
add
fistl
rcl
jb
insl
ror
repnz
adcl
fisubrl
push
stos
add
lcall
mov
lods
add
mov
xchg
mov
mov
mov
xchg
mov
mov
hlt
mov
icebp
in
filds
mov
mov
add
fsubs
std
or
or
or
scas
movsl
movsl
cmpsl
scas
jl
jo
push
sbb
mov
mov
out
push
push
sbb
pushf
jle
adc
orb
adc
sbb
cmpb
jae
jb
je
jge
decb
inc
jns
imul
outsl
testb
mov
or
adc
ret
shrl
adc
lea
xchg
push
jmp
incl
pop
pop
pop
addl
jl
mov
insb
jp
pop
jnp
data16
js
outsb
jge
pop
arpl
push
mov
jb
jno
bound
decl
push
add
jnp
inc
push
inc
pop
add
or
pop
pop
inc
add
push
jg
dec
dec
inc
adc
cmp
add
fwait
mov
mov
mov
aam
inc
bound
jge
mov
jbe
inc
jge
imul
dec
pusha
insl
dec
push
inc
or
dec
rorl
aaa
std
sub
push
and
imul
mov
lea
add
fwait
jg
fists
cmpsl
mov
mov
mov
scas
mov
mov
mov
sbbb
adcl
lock
out
shlb
pop
add
adc
xor
or
add
cmp
cmp
cmp
or
call
add
cmp
cmp
arpl
pusha
pop
or
pop
push
push
pop
icebp
add
xchg
mov
out
mov
mov
push
repnz
scas
mov
ljmp
cli
mov
mov
int3
add
jmp
cmpb
lea
add
xchg
xchg
jl
or
in
clc
std
stc
add
mov
mov
nop
nop
rclb
jmp
addr16
xor
cmp
imul
subb
imul
imul
fs
inc
pop
pop
inc
sbb
add
add
std
mov
inc
push
jns
push
inc
dec
sbb
pop
pop
inc
pop
dec
xor
rcrl
pop
loop
cmp
xor
xor
sub
adc
jg
pop
push
sub
das
sub
cmp
outsb
sub
pop
dec
jnp
add
scas
fisttps
or
push
inc
adc
dec
jl
incb
adc
sub
xor
sti
dec
jg
clc
clc
lock
clc
repz
std
std
mov
cli
repz
mov
shrl
clc
add
sti
sar
int3
scas
xchg
ret
rol
sbb
jl
leave
fmulp
sar
aad
ror
lret
aaa
std
mov
lret
sbb
mov
mov
clc
xchg
clc
mov
std
mov
mov
mov
mov
out
mov
lahf
add
fisttpl
mov
mov
mov
stos
mov
pushf
ret
int3
mov
arpl
sbb
outsl
push
jg
inc
outsl
outsb
js
sub
jb
jbe
arpl
jno
jns
jle
insl
inc
adc
or
push
cld
call
dec
pop
pop
add
pop
or
dec
dec
push
add
dec
dec
dec
or
or
test
and
jns
pop
cmpb
in
out
shrb
jo
fisubs
xorb
mov
jg
gs
insl
gs
imul
in
jae
insl
imul
xlat
mov
mov
pop
dec
stos
and
cmpsb
dec
ljmp
push
cmp
call
add
jmp
testb
jnp
jo
lock
push
outsb
push
or
dec
pop
or
or
mov
push
jne
test
enter
or
mov
jb
out
movsb
mov
popa
push
gs
push
xchg
sbbl
lcall
outsb
inc
dec
mov
dec
pop
inc
pop
add
lcall
mov
scas
stos
out
lock
in
out
jmp
or
clc
jmp
pop
daa
cmp
popa
add
incl
push
dec
pop
dec
pop
or
push
add
inc
inc
push
loopne
mov
add
add
into
aad
leave
rorb
int3
loope
repz
movl
hlt
push
loopne
std
faddl
enter
xchg
mov
test
adc
cmpsb
mov
movsb
hlt
popf
mov
and
scas
pop
pushl
addb
jb
jl
xorb
filds
jno
pusha
out
rorl
lret
mov
ret
adc
lea
sub
lea
decl
fs
jnp
add
add
cmp
ds
jae
sbb
xor
inc
cmp
out
mov
in
int3
cmp
vmovsd
outsb
ret
shlb
fld
stos
sub
fists
inc
mov
adc
or
pop
add
sbb
jmp
call
add
sbb
sbb
inc
pop
pop
adc
and
mov
xlat
mov
dec
xchg
pop
fisubl
mov
rcl
mov
ljmp
test
inc
mov
cld
pusha
sbb
hlt
outsl
das
orb
imul
and
jge
arpl
push
jl
bound
jl
pop
jno
add
jle
clc
mov
sub
loope
dec
insb
sbb
jg
dec
push
mov
cmp
js
data16
aaa
cmp
jno
js
data16
sbb
decl
in
add
ljmp
out
mov
stos
std
pushf
mov
pop
adc
sbb
sbb
add
rcl
and
cld
aam
iret
xlat
mov
and
call
icebp
movsb
repz
aam
and
cli
jg
mov
cltd
loop
in
cld
add
jmp
mov
xchg
xchg
icebp
out
hlt
repnz
ror
enter
add
jmp
das
sub
sub
cmp
inc
pop
sar
mov
les
jge
je
js
gs
adc
fidivs
daa
jp
mov
clc
dec
cmp
xchg
sub
rolb
inc
pop
adc
or
sbb
dec
addb
enter
cltd
add
and
loope
repnz
in
jmp
jecxz
sub
or
and
jmp
stc
lock
sbb
test
cmp
fwait
pushl
mov
pusha
or
dec
daa
cmp
ss
sbb
data16
mov
arpl
xor
or
fiaddl
xchg
mov
xchg
add
loopne
or
lret
mov
mov
fwait
cmc
dec
mov
pop
add
mov
mov
into
in
out
std
jmp
stos
lods
stos
xchg
add
loope
incb
mov
mov
mov
jg
iret
mov
add
xchg
scas
cltd
popf
jo
add
cld
add
push
push
sbb
pop
pop
dec
inc
pop
xchg
dec
push
pop
std
ja
icebp
inc
inc
sbb
hlt
adc
push
dec
add
addr16
pop
sbb
repnz
sub
outsl
les
inc
sbb
mov
les
xor
and
pusha
lock
sarl
cmp
pop
add
sbbb
jg
mov
flds
mov
add
rorb
pop
add
push
add
sar
inc
loopne
pusha
push
mov
into
push
jno
fildl
andb
test
add
mov
mov
mov
sti
or
xor
cmp
inc
mov
mov
xchg
sub
imul
adc
mov
xchg
idiv
stos
mov
and
adc
cltd
push
add
adc
cli
fcomip
outsl
sbb
add
add
push
andb
add
jb
shll
fstpt
add
xor
mov
scas
mov
pop
sahf
push
mov
ljmp
nop
or
andb
xchg
cmp
incl
cltd
xchg
loop
lahf
xchg
test
inc
add
clc
fwait
lcall
pusha
lods
popa
cmc
or
xchg
test
mov
inc
nop
cltd
add
fwait
xchg
cld
sbbb
fstpt
lcall
orb
test
mov
xor
mov
or
sbb
cwtl
xchg
lcall
xchg
adc
pop
addb
call
in
es
or
add
int3
push
mov
andb
xchg
decl
sbb
mov
mov
mov
mov
pop
mov
movsb
mov
lgs
mov
mov
mov
mov
movsb
mov
mov
push
xchg
idivb
aad
ret
scas
in
mov
ret
sbb
mov
add
mov
add
mov
mov
nop
fwait
insl
jg
adc
movsb
xchg
add
sbb
sbb
repnz
mov
mov
adc
jg
add
xchg
mov
xchg
cltd
adc
adc
cmp
test
push
push
fistpl
incb
incb
cwtl
sbb
or
sbb
sbb
fldt
xchg
adc
push
cld
cwtl
mov
addl
int
bound
mov
xchg
addb
xchg
hlt
stos
pop
cld
lock
cltd
test
mov
daa
cltd
lret
and
les
shlb
xchg
jb
xor
xor
pop
test
add
xor
or
pop
mov
test
incb
and
sar
xchg
imul
mov
xor
xor
mov
push
std
push
scas
clc
mov
xchg
mov
inc
test
fdivr
repnz
sti
mov
xor
mov
xor
adcl
insb
xchg
je
sahf
lds
sahf
adc
add
pop
push
subb
mov
das
hlt
or
movsb
inc
mov
add
icebp
call
loopne
test
cwtl
xchg
test
mov
das
jl
sbb
mov
add
xchg
test
mov
or
adc
addl
mov
push
das
mov
subb
mov
lds
mov
mov
mov
lcall
mov
pushl
add
add
sbb
mov
adc
push
movsl
xchg
das
shlb
add
fwait
add
inc
adc
in
mov
sub
push
test
mov
cmpsb
movsl
cltd
xchg
clc
xor
push
jno
push
mov
push
xor
test
sbb
movsb
jbe
adc
mov
outsl
mov
movsl
rolb
inc
push
lock
lock
adcl
mov
lahf
lock
pop
push
push
adcb
in
push
jge
hlt
add
ja
sahf
lods
inc
inc
ja
or
ljmp
add
pop
sub
cld
sub
lret
jo
es
inc
movsb
repz
pushl
stc
add
add
add
cli
adc
mov
arpl
add
add
push
and
nop
pop
test
hlt
incl
sbb
push
jno
lcall
ret
xlat
pushl
cmp
ret
aam
rcll
dec
aam
add
or
orb
xorl
xorb
sbb
std
xchg
push
lahf
cbtw
fwait
or
das
rclb
adc
mov
int3
xchg
sti
mov
fucomip
cmp
lcall
lahf
nop
xchg
mov
scas
pop
aad
xchg
js
push
cmp
adc
pop
mov
jg
or
cltd
cltd
nop
nop
inc
shll
mov
add
scas
scas
clc
call
or
nop
xchg
xor
das
fs
or
mov
das
outsl
fs
push
mov
sbb
or
movsl
push
pop
mov
mov
mov
mov
cs
jecxz
in
cmpsb
or
pusha
dec
ret
add
dec
add
notb
les
fadd
ds
and
pusha
cmp
sbb
lcall
ja
dec
inc
add
xor
sbb
sti
add
ss
xor
fists
fdivrs
ja
pop
bnd
cmp
xor
mov
push
add
mov
jae
ss
mov
popa
xlat
imull
mov
and
cmp
jae
or
loopne
aad
aam
push
imul
inc
pop
mov
jnp
lods
or
jne
dec
or
jg
pop
push
lds
push
jb
testl
add
jecxz,pt
insl
lock
in
add
and
pop
scas
or
push
sub
data16
jb
stos
movsl
jnp
push
sbb
fstpl
xor
mov
test
cs
movsl
add
int3
add
lds
jnp
mov
lods
xorb
aam
adc
jae
push
lea
mov
push
push
xor
roll
call
test
das
pop
insb
xchg
lret
mov
xchg
lods
sti
or
mov
push
sbb
sub
rolb
add
jl
pop
xorb
push
add
pop
test
sub
sbb
cmp
and
fildl
xchg
test
subb
jl
outsb
add
and
mov
or
push
add
adc
ja
loopne
cmpsb
mov
outsl
mov
add
mov
loop
andb
jg
or
or
cmpsb
mov
pop
pop
jo
and
les
clc
or
xor
push
mov
dec
aas
xor
lret
add
mov
jnp
pusha
cmpsl
fdivrs
incb
or
pop
addb
sbb
dec
xlat
decl
rcrb
cli
jnp
daa
add
cs
jnp
cmp
lcall
mov
testl
adcl
add
sbb
mov
nop
jne
mov
mov
in
clc
mov
movsb
or
aas
ds
mov
and
hlt
cmpb
or
mov
shrb
mulb
mov
out
adc
sbb
inc
xor
shrb
cmc
cli
add
sbb
pop
cs
out
sbb
push
push
push
in
add
adc
fdivr
outsl
mov
rolb
adc
cmp
add
jne
fistpl
inc
inc
xchg
movb
rclb
incl
sti
stc
mov
mov
sbb
inc
add
adc
movsl
lds
ss
dec
movsl
pushf
hlt
movsl
add
hlt
inc
cltd
or
shlb
nop
mov
roll
add
mov
pop
mov
lahf
jb
inc
push
sbb
jl
mov
or
loop
jne
cli
jne
inc
or
jg
mov
xorl
jg
or
or
roll
and
int
dec
es
sbb
jg
xchg
repnz
jmp
rolb
inc
sbb
add
mov
jae
mov
orb
sbb
lock
sbb
pop
movsl
or
cmpsb
aaa
fdiv
cmp
xchg
add
add
lock
les
les
or
sub
push
test
inc
mov
add
add
movsl
shll
pop
icebp
pop
repz
mov
cmpsb
jnp
scas
or
loopne
or
inc
sub
rorb
andb
push
rorb
bound
cmp
and
jne
movb
adcb
xor
cli
pusha
cmp
repnz
and
adc
pop
or
sahf
inc
sub
push
mov
aaa
xor
sahf
sub
jmp
or
sbb
sub
inc
out
pusha
or
add
shl
ljmp
jge
push
push
fildl
out
add
inc
cmp
sbb
ljmp
inc
addl
add
push
mov
add
fisubs
jmp
pop
pusha
jp
jmp
sub
mov
add
sbb
jbe
mov
decl
je
mov
repnz
daa
add
pop
cmc
mov
movsb
xor
aam
in
add
and
pusha
pop
test
mov
push
sahf
dec
jbe
fldt
int3
ljmp
jne
pop
insb
lea
aad
and
add
sarb
dec
push
mov
xor
push
inc
int
mov
add
jg
outsb
adc
test
add
pop
je
addb
or
out
inc
jo
lock
negb
pushf
cmc
scas
sbb
dec
jae
cmp
lock
int
jg
shlb
dec
sahf
jbe
or
and
mov
jecxz
loopne
jge
jne
dec
jg
mov
cli
push
fdivrs
stos
jg
shlb
cmp
pusha
add
jo
repz
pop
mov
dec
mov
lods
jmp
fwait
lock
inc
cmp
jge
sbb
cli
push
adc
scas
mov
add
enter
xor
inc
mov
jmp
ja
enter
mov
mov
cmp
lcall
push
or
sbb
add
jbe
mov
mov
or
or
mov
add
fsubs
sbb
pusha
mov
rolb
mull
ret
mov
and
xorb
pop
dec
add
mov
testb
jl
test
cs
adc
add
cmpsb
ret
popa
pop
cmpsb
into
out
push
ss
sbb
ja
add
lods
mov
testb
or
and
or
inc
popa
out
stos
add
rcrb
mov
lcall
or
sti
idiv
dec
pusha
and
add
inc
add
add
pusha
sbb
addb
push
or
clc
ficompl
andb
mov
cmp
xor
or
or
push
xor
or
in
adc
and
stos
mov
mov
mov
arpl
sbb
mov
ss
out
dec
and
dec
mov
hlt
ljmp
jbe
mov
popa
add
adc
dec
add
rep
cld
popa
add
pusha
add
pop
test
push
mov
adc
push
jmp
adc
pushl
clc
or
push
js
adc
adc
adc
dec
clc
ljmp
lods
xor
mov
mov
and
push
mov
add
xor
or
andb
mov
add
incb
movsb
add
cmc
sahf
jecxz
add
push
pop
jecxz
push
pushf
sahf
mov
mov
sub
in
mov
xor
jle
stos
mov
xchg
jnp
lret
pop
ljmp
add
push
jo
repnz
or
shrb
xor
mov
jnp
mov
cmpsb
or
or
mov
adc
loopne
push
adc
xchg
mov
xchg
ret
cs
inc
hlt
jnp
in
mov
nop
jg
jbe
ret
xor
inc
mov
sti
push
xor
mov
cmpsb
addb
xor
xor
daa
xor
das
cli
or
lret
ds
scas
stc
jae
adc
sahf
cli
inc
adc
pop
lock
stos
mov
add
mov
stc
jb
jo
pop
xor
adc
out
xor
and
ret
adc
push
jbe
lcall
pop
add
add
push
and
imulb
add
pushf
aam
jo
jmp
in
push
xchg
loopne
and
jo
stos
clc
das
xchg
dec
add
jno
loopne
out
into
push
aam
inc
add
xchg
decl
repz
inc
imull
push
xor
mov
loope
inc
push
cld
pop
lock
out
mov
or
dec
mov
push
mov
jge
clc
xchg
xchg
rolb
popa
aas
inc
cmpsb
sub
out
and
rclb
daa
stc
dec
jb
push
push
and
inc
pusha
add
push
inc
nop
push
or
dec
loopne
mov
loop
jnp
shrl
inc
aas
mov
cli
sbb
add
adc
jg
les
cmpsl
push
push
loop
push
pop
ds
rolb
cmp
test
jg
cmpsb
sahf
into
and
xchg
loope
xor
push
mov
std
and
sub
or
movl
sbb
subb
inc
xor
ret
cmp
mov
push
cmpsb
add
sbb
icebp
inc
test
xor
ss
jo
push
scas
mov
cwtl
pushf
dec
loope
cmpsb
xlat
push
or
mov
jg
add
cmpsb
mov
jnp
and
shlb
jnp
push
or
clc
sub
mov
pop
icebp
ja
in
ss
jne
and
mov
jecxz
add
cld
xorl
or
add
add
xor
jmp
push
mov
mov
sahf
inc
mov
sahf
pop
jo
jp
adc
push
or
jecxz
pop
inc
inc
rcll
fsubrs
push
lock
loope
fistpll
push
popf
rolb
fs
xor
mov
fidivrl
jno
movsb
jge
push
adc
ljmp
push
dec
jge
pusha
jge
jnp
mov
add
cmp
push
add
adc
mov
hlt
test
je
xchg
jb
jo
mov
std
adc
add
orb
push
int
mov
or
jg
jg
add
add
push
rorl
xor
mov
stos
push
fstpt
adc
mov
enter
cmc
sbb
idivl
bound
iret
subb
jge
pop
cld
mov
push
push
mov
shrb
push
out
sbb
lcall
xor
loop
cmp
jo
lret
and
sbbb
jge
lods
pop
testl
ret
jne
sbb
hlt
adc
pop
pushf
jnp
mov
mov
setno
das
bound
decl
mov
mov
scas
pusha
andl
loopne
sub
les
loopne
xor
pushw
push
add
sbb
lret
add
inc
das
add
mov
addb
ss
sub
add
push
mov
xor
rcl
sbb
hlt
das
call
add
cwtl
jp
inc
dec
rcrb
inc
push
decl
bnd
push
xor
sub
jo
jge
arpl
insl
out
cli
cmp
cmpsl
inc
cmpsl
roll
cld
subb
clc
mov
xor
jnp
lds
mov
fnsave
xor
inc
mov
nop
dec
sbb
mov
loope
into
shrb
bnd
jmp
adc
std
das
jle
add
push
sub
mov
stos
cli
add
jmp
lcall
stc
inc
loop
lds
es
jno
aaa
push
add
repnz
adc
mov
lock
incl
inc
inc
push
test
cmpsb
add
jnp
or
jne
ljmp
pop
idiv
mov
adc
or
out
mov
jge
orl
push
ret
subb
cmpsl
mov
pminub
pop
jne
testl
push
clc
sbb
push
shr
es
mov
jl
mov
jle
les
adcb
jg
xor
adc
sub
ret
push
repnz
notl
aad
sub
rolb
mov
incb
jg
incl
shlb
jge
cli
pusha
sbb
or
and
jecxz
add
std
mov
pushl
and
int
test
jo
xor
lcall
sbb
jge
sbb
je
testb
jo
addb
add
call
mov
add
jge
popf
neg
data16
sbb
popf
mov
fidivs
decl
add
xor
mov
inc
pop
lock
dec
mov
add
fimuls
xlat
call
fdivrs
and
adc
jne
mov
test
test
out
dec
mov
or
jg
test
sarb
test
test
mov
mov
decb
cmp
sub
push
sbb
andb
fsub
nop
ret
out
jg
fists
mov
jge
rol
test
jmp
cld
push
xor
push
mov
std
incl
sbb
mov
adc
loopne
jnp
out
mov
add
mov
fidivrs
xchg
shll
cmp
hlt
adc
mov
pop
mov
cmp
popf
addb
push
test
pop
mov
lret
cli
add
cmp
dec
add
adc
fidivrl
mov
or
dec
jge
outsb
jb
cmp
push
jl
cmp
push
lds
mov
or
xchg
sbb
cwtl
addl
in
xchg
jp
mov
or
sbbb
jo
subl
cmp
aad
add
movsl
lock
or
nop
mov
mov
sbbb
loopne
sub
adc
in
js
mov
repnz
outsl
fistpll
andb
decb
and
xor
mov
lods
fdivl
out
pushf
pop
push
add
cli
mov
mov
xor
in
movsl
cwtl
das
lds
outsl
aam
ja
sub
idiv
sahf
cmp
sbbl
arpl
push
iret
fistl
bound
insb
jge
mov
push
dec
subb
orl
int
dec
cmp
subb
decb
addb
cmp
roll
sbbb
sub
jnp
push
clc
aaa
sbb
mov
je
data16
add
int
mov
js
or
cmp
jg
ja
push
or
stos
cmp
mov
or
js
int
inc
pushf
std
pop
incb
int
fstpt
adcb
int
mov
dec
cli
cmp
mov
xor
rcrb
push
cld
and
mov
in
testb
negl
call
and
ret
dec
jge
add
add
orl
mov
scas
cld
cmpsb
icebp
cmpsb
inc
aam
jecxz
and
inc
inc
adc
ficompl
ja
and
mov
cli
dec
cmp
push
pop
shlb
jmp
xchg
add
or
scas
stos
lock
out
dec
jbe
fwait
ds
push
or
jnp
jle
es
fistpl
push
cmp
sbb
inc
lds
push
and
pop
mov
clc
jg
lahf
ret
lcall
xorb
out
out
xor
add
stos
repnz
idiv
add
pop
inc
adc
add
xchg
push
jbe
mov
and
mov
jnp
cs
fucom
cmp
stos
jnp
hlt
cmpsb
pop
jmp
cmpsb
cmpsb
nop
cmp
insl
xchg
mov
leave
dec
xor
or
adc
push
rorb
adc
jp
js
mov
mov
jnp
cmpl
xor
mov
loop
jo
call
rclb
inc
mov
or
xchg
add
aad
fistpl
ds
xor
cmpsb
or
xchg
add
rcrl
repnz
mov
and
mov
scas
adc
push
jns
push
adcb
dec
add
xchg
adcb
add
mov
push
cmpsb
mulb
fs
in
mov
mov
dec
jp
js
add
rorl
rolb
mov
pop
push
shlb
adc
scas
data16
push
jecxz
mov
lods
into
or
inc
ss
xchg
ss
mov
dec
push
mov
sbb
add
adc
cld
popf
pop
jno
scas
scas
nop
mov
push
jnp
mov
jge
dec
jge
call
enter
cmpsb
dec
mov
ret
adc
mov
adc
mov
lcall
cmpl
and
rorb
jne
mov
stos
sub
hlt
mov
mov
pop
movsb
add
push
mov
and
mov
or
add
std
stos
cmp
adc
adc
push
mov
add
push
xorl
rolb
outsb
mov
push
inc
and
scas
add
mov
or
jae
mov
sub
cmpsb
movntq
sub
sti
rolb
add
mov
int
stc
jo
add
add
inc
and
add
jle
mov
outsl
ja
inc
jb
jbe
add
jle
jecxz
hlt
mov
add
loope
leave
loopne
or
jle
sub
test
ret
or
push
je
adc
inc
in
scas
clc
jmp
bound
and
movsl
enter
jnp
fs
mov
sbb
inc
sub
cmpsl
jle
pusha
add
mul
or
addl
pop
cmp
call
pop
inc
push
fldl
add
ljmp
bnd
push
stc
je
xchg
add
inc
xor
add
sub
jge
shrb
mov
add
push
ljmp
xchg
and
mov
and
fiaddl
push
or
adc
loopne
test
loop
mov
mov
inc
adc
push
test
jns
int3
andl
jo
xor
andb
loopne
jnp
repnz
ljmp
ret
jge
lock
mov
movsl
pusha
aaa
pop
and
rorb
pusha
add
xor
mov
cmp
or
pop
das
clc
out
cmpb
add
and
jne
push
add
add
pop
sub
jae
cmpb
outsb
adc
rolb
pop
mov
push
sub
xlat
jp
mov
rorb
in
arpl
aaa
imul
mov
add
dec
adc
mov
mov
call
loopne
or
ror
in
push
jbe
cmp
push
das
mov
add
mov
in
rcll
mov
jg
inc
add
adc
push
loopne
loopne
popa
xchg
repnz
cmp
xchg
dec
aaa
jge
push
inc
popf
shlb
pushf
iret
and
cmp
jp
stc
mov
imulb
mov
push
inc
stc
inc
dec
mov
test
jle
bound
or
jge
test
cmpsb
dec
inc
and
out
sahf
negl
cmp
loop
movsl
push
fs
jl
xchg
jne
sbb
dec
sahf
repnz
call
scas
inc
sarl
ret
out
out
xchg
movb
xor
add
popa
mov
mov
cmp
mov
aaa
mov
pushf
fiadds
test
dec
cmp
inc
fwait
mov
cmp
add
jnp
lds
jbe
loop
mov
cli
cltd
stos
outsl
sbb
adc
sbb
mov
ss
pusha
adc
lcall
add
rclb
nop
inc
adc
loop
cli
outsb
mov
push
rolb
stos
adc
or
call
xor
xchg
repz
jo
loopne
jl
dec
cld
push
jg
mov
add
push
pop
lock
mov
push
push
mov
sub
jne
sahf
jne
decb
movsl
cld
mov
outsb
lods
jmp
jle
rcrl
andb
jo
dec
ja
xor
das
dec
add
ret
ljmp
add
jo
mov
testl
mov
adc
jg
pop
daa
jo
stos
das
repnz
int
xor
jne
mov
push
mov
xor
push
dec
icebp
mov
jecxz
outsb
push
pcmpeqb
fistpll
popf
pop
shlb
and
das
mov
xchg
or
ja
clc
outsl
hlt
adc
push
ret
nop
add
orb
xchg
add
hlt
mov
ret
rorl
add
mov
xchg
sbb
or
fisubl
pushf
notl
mov
in
add
ficoms
mov
sbb
sbb
pusha
rcl
mov
std
mov
sbb
and
jno
sbb
imul
add
mov
addb
iret
jmp
add
xor
mov
sbb
lods
jmp
rcll
push
cmp
or
cltd
subb
cmp
dec
mov
pushf
ljmp
mov
int3
xor
xor
cmpsb
adc
subb
push
sub
mov
adc
stos
out
aaa
push
out
lea
push
jg
std
push
pusha
dec
xor
out
push
sbb
adc
ficomps
cmp
mov
jp
xorb
mov
icebp
cmp
and
fldl
mov
movb
int3
in
mov
and
sbbb
xchg
adcb
in
fistpl
iret
mov
stc
mov
add
add
mov
mov
mov
add
lock
mov
shlb
ja
in
popa
sbb
and
loop
and
sarl
mov
sub
or
ss
jg
push
mov
cmp
repnz
call
jne
xchg
rolb
adc
adcb
jecxz
jo
sbb
cwtl
sbb
mov
pushf
mov
pushw
sti
push
in
pop
lods
adcb
sbb
jg
repnz
divb
dec
sub
or
ja
sahf
add
and
fcomp
add
test
or
es
sbb
into
rcrb
test
lret
or
mov
sbb
mov
push
jb
inc
push
jnp
adc
cmpsb
and
pop
mov
aad
add
loope
push
orl
sbb
fistl
xor
jo
mov
sbb
fdivr
sbb
loop
mov
cmp
add
aam
pop
int
repnz
nop
movsb
sahf
decl
add
add
and
mov
jnp
or
inc
lcall
cmp
aas
xor
mov
ficomps
or
inc
mov
into
jmp
add
add
xor
lret
into
cli
mov
jg
ficoml
sbb
mov
mov
out
sahf
dec
add
mov
xchg
lock
inc
or
add
cmpsb
ficoml
aad
ds
xchg
ljmp
lock
jnp
and
popa
add
mov
pop
push
push
adc
push
fdiv
pop
adc
enter
loopne
ljmp
jmp
out
pavgb
mov
mov
xchg
mov
popa
cli
mov
mov
aaa
stc
adc
cltd
fldl2e
adc
sub
sbb
sbb
sbb
adc
scas
cmp
lds
mov
rcl
test
mov
add
mov
mov
lcall
mov
mov
mov
bound
sbb
bound
add
jle
add
mov
fidivrl
or
and
push
push
add
push
fiaddl
in
xor
sti
adc
loopw
xchg
push
inc
clc
icebp
mov
insl
sbb
lods
sbb
cmpsb
fisubrs
jle
adc
cmpsb
loopne
sahf
nop
push
push
movsl
jge
xor
sub
stos
mov
jg
fisttpl
mov
or
mov
aam
add
adc
ret
scas
pop
lock
xor
ja
lock
iret
add
repnz
lock
es
lock
xor
lcall
jo
out
mov
loop
push
shrb
ss
or
add
xor
sub
stos
mov
sub
jae
movsb
xchg
enter
decl
ljmp
lock
lds
mov
add
jo
mov
shlb
mov
push
roll
xchg
shrb
add
push
xor
push
adc
repz
rolb
push
sub
mov
and
mov
jb
adc
push
pushf
shrb
jmp
jae
rcll
push
incl
fidivrs
clc
sarb
das
shlb
and
out
js
xchg
fcom
stos
std
fwait
lods
xchg
dec
and
jmp
mov
sbb
mov
jg
ret
and
nop
js
adc
shlb
insl
ljmp
inc
xor
or
xchg
push
add
cli
outsl
add
mov
push
push
subb
mov
or
fisubs
hlt
mov
adc
dec
rcll
fidivs
sbb
sbb
dec
scas
xchg
pop
lock
lret
ror
jmp
rorb
call
mov
out
pop
mov
cwtl
push
jg
add
jle
aad
ljmp
push
ljmp
nop
cmp
mov
adc
mov
or
mov
loop
push
test
xor
aam
dec
testb
push
push
sbb
cli
fcoms
xchg
inc
jecxz
loopne
fidivs
sub
fadds
lds
test
sbb
and
call
fidivl
push
or
push
add
cmpsb
add
jg
mov
movsl
add
mov
mov
js
or
test
add
or
or
inc
lret
movsb
mov
movsb
shlb
add
mov
mov
test
sbb
push
cmp
repz
dec
sbb
or
add
xor
add
push
fiadds
push
sub
mov
call
jmp
dec
test
cmpsb
cmpb
mov
ja
cmpb
add
dec
dec
inc
rcrl
adc
sbbl
and
mov
xchg
fistps
sarl
loop
and
sbbl
jge
mov
nop
idivl
andb
test
inc
bound
jp
int
push
dec
add
test
test
push
insb
push
xor
sti
sbb
ja
sbb
hlt
cmpb
push
xchg
cmp
xchg
xchg
inc
decl
cld
adcl
mov
mov
adc
add
call
or
repz
push
mov
aad
mov
stc
jge
out
push
lock
rolb
call
xorb
inc
adc
add
and
movsb
push
shrl
dec
ret
divb
add
add
jp
xchg
mov
repnz
mov
das
faddl
push
pusha
inc
or
or
inc
lock
push
je
imull
leave
mov
or
mov
xchg
mov
in
mov
data16
jae
cmp
push
je
add
add
pop
cmp
pusha
xor
test
cmpsl
push
pusha
rolb
or
sbb
mov
jne
repnz
jae
sbbb
popa
ret
mov
cmp
sbb
push
xchg
add
cmp
les
xor
ss
pop
add
paddw
andb
outsl
sub
adc
pop
or
rclb
pusha
idivb
mov
in
or
inc
push
es
add
insl
pop
incb
add
inc
jb
jge
push
adc
mov
inc
push
out
push
scas
loopne
scas
push
add
lods
jnp
cld
mov
jle
adc
in
mov
and
push
sahf
imul
push
xchg
sbb
mov
sub
ret
fiaddl
add
push
adc
jp
adc
cmc
shll
and
lock
fdivrs
nop
adcb
and
fistpl
or
jl
int3
cmp
stc
mov
int
adc
dec
shlb
jmp
fnsave
and
inc
imul
incb
loopne
test
int
ret
xchg
incb
fnsave
pop
loope
add
in
and
jb
addb
mov
push
jmp
outsb
rorb
sub
test
jge
inc
and
inc
sarl
jg
add
push
sbb
call
add
and
cmpsb
jnp
or
loopne
and
repz
pusha
or
mov
jo
lock
pushf
mov
lods
cli
outsl
dec
orb
add
lock
pushf
icebp
jnp
push
push
jmp
or
dec
xor
adc
mov
inc
les
xchg
test
mov
test
enter
clc
ja
adc
mov
jbe
loop
jnp
dec
push
sbb
cltd
loopne
stc
jb
pop
inc
ficoms
rclb
inc
jnp
and
mov
cld
mov
faddp
sub
sub
movsl
movsl
popa
fwait
test
les
inc
mov
fs
subb
push
cmpsb
cmp
cli
ja
mov
mov
adc
mov
mov
adc
cmp
mov
push
sarb
mov
rclb
dec
inc
adc
jg
cmc
jle
pop
std
rolb
sarb
adc
push
jg
and
sub
xchg
loopne
jl
ljmp
pusha
sub
outsb
jmp
push
and
xor
es
xor
cmp
hlt
scas
mov
test
inc
jecxz
adc
xor
add
mov
or
mov
add
add
out
xchg
ljmp
js
mov
and
push
and
mov
mov
loop
ss
test
xchg
add
sbb
pop
std
out
jg
fists
add
or
or
sub
sub
or
or
mov
sbb
mov
or
xor
stos
or
sub
and
xchg
fimuls
fisttps
add
rolb
push
ljmp
cmpsb
xchg
cld
mov
dec
shrb
cmpb
sbb
and
ja
add
cmp
xchg
jae
and
mov
andl
loope
ja
cs
adc
pusha
push
lret
divl
arpl
sbb
sub
sbbb
outsl
and
mov
icebp
sbb
sbb
stos
and
xchg
or
fwait
ret
sub
xor
test
push
inc
cli
jg
loopne
movsl
push
imul
push
add
add
mov
jge
addl
or
add
ja
jge
add
popf
inc
pop
pusha
test
dec
add
stos
sbb
and
stos
mov
xor
inc
lret
jo
in
adc
cmpsb
cmp
and
mov
nop
pop
test
out
sbb
add
enter
out
jg
std
ljmp
mov
xlat
adc
nop
aaa
pop
decb
nop
std
aaa
and
mov
mov
or
mov
push
add
xorb
pop
add
push
add
mov
add
shlb
mov
mov
scas
es
or
lods
scas
xor
sub
scas
jo
test
out
add
je
mov
loope
lock
mov
mov
adc
inc
inc
push
loopne
push
bnd
aas
xor
clc
movsbl
dec
es
add
iret
stos
ljmp
loopne
lcall
int
sub
rclb
mov
add
or
lods
in
das
push
or
cmpsl
hlt
mov
mov
push
push
push
xor
repnz
in
xor
sub
pop
movsb
mov
aam
loopne
loope
pop
loop
xor
push
adc
pusha
sbb
icebp
incl
and
inc
push
or
je
ljmp
loopne
or
xorb
adc
nop
ss
int
test
insl
fsubs
fsubrl
pop
xor
jnp
jecxz
mov
mov
sbb
nop
cmc
adc
nop
jne
fidivrl
mov
loop
add
mov
push
and
js
pop
ret
and
ficoms
inc
mov
mov
cmpsb
int3
xchg
repnz
push
ljmp
and
mov
adc
lock
imul
xor
jp
jne
fisubl
jmp
add
cmc
sbb
out
pusha
mov
inc
mov
loop
jae
sub
add
push
sbb
cmp
add
xor
int
mov
push
xor
xchg
movsl
jge
or
xor
or
mov
adc
and
sub
mov
shrb
mov
pushf
mov
or
lcall
xor
push
push
add
inc
add
js
inc
push
add
fisubs
fwait
outsb
sub
add
push
or
xchg
popa
ja
sbbb
ljmp
decl
pop
ret
xlat
mov
mov
loop
dec
mov
fists
fstpt
add
out
pushf
mov
pop
cmpsb
xorl
ljmp
inc
push
push
test
push
xor
mov
dec
shl
fisttpl
mov
call
push
or
or
push
push
pop
xchg
lock
ss
inc
and
jecxz
add
icebp
add
xchg
push
adc
nop
mov
adc
push
rclb
pop
mov
push
add
sbb
call
push
xor
mov
js
and
cs
jne
push
xchg
ss
jo
xchg
mov
ret
in
pop
sub
mov
mov
bnd
xchg
add
jo
dec
hlt
ja
rolb
pop
add
jb
dec
and
mov
fcompl
jge
push
jnp
add
adc
push
and
mov
add
loop
bound
lcall
adcl
xor
jbe
rolb
push
adcl
cli
sbb
or
sarb
inc
push
jo
add
and
push
ss
popl
in
mov
mov
cmp
lock
sub
add
sbb
sub
mov
rorb
or
cli
mov
push
mov
add
pushf
mov
scas
jg
mov
add
into
loopne
jge
sbb
mov
push
and
es
aad
add
lcall
cmp
fdivl
adc
fs
add
fstp
fisubrs
iret
rcrb
sarl
pushf
shl
fdivr
pop
sbb
rol
add
or
ficompl
xor
int
sbb
iret
into
and
imul
jae
rolb
jo
stc
jne
aaa
mov
push
incl
inc
xchg
call
sub
mov
xor
mov
call
cld
jnp
movsl
inc
test
pop
push
push
xchg
and
sub
daa
subb
add
xchg
xor
cs
adc
jge
aam
test
push
and
jne
dec
jg
call
pop
les
xor
mov
dec
rolb
jle
loopne
mov
and
mov
loopne,pt
mov
popa
pop
xchg
pop
pushf
mul
js
stos
das
inc
stos
jp
mov
sub
push
or
das
cli
ret
xor
pop
nop
adc
add
push
adc
jmp
push
pop
xor
push
testl
ljmp
rclb
mov
and
push
sub
lret
jae
add
nop
inc
pop
pusha
push
add
int
test
add
jnp
sub
ret
and
mov
andl
push
lods
lds
push
xchg
je
push
pop
gs
insb
sub
inc
push
xchg
add
inc
mov
decl
mov
bnd
sti
hlt
mov
dec
mov
cmp
popl
cli
pop
mov
lock
pop
stos
adc
nop
mov
pusha
and
nop
adc
and
or
mov
jae
in
push
mov
adc
add
arpl
push
xchg
in
xor
cld
lcallw
adc
push
jne
es
int
mov
stc
jp
jb
daa
lea
sub
inc
mov
lcall
popa
mov
or
into
cmpsb
jo
ljmp
lods
xor
mov
mov
jo
loop
cmp
jbe
or
test
xchg
mov
and
adc
cmpsb
or
add
and
sub
cs
imul
dec
out
mov
jecxz
dec
cmc
fildll
jg
aas
fcomps
dec
jb
and
mov
push
add
andw
or
fildl
push
push
roll
adc
addb
jbe
cmp
incl
inc
daa
add
add
mov
ljmp
mov
or
cmpsl
mov
int
stc
test
inc
and
push
imul
and
sbb
add
ror
repnz
mov
mov
cld
out
and
adc
xor
fdivp
mov
cmc
stos
fdivrs
adc
add
lock
add
incl
or
nop
push
or
add
rclb
sub
std
hlt
outsb
inc
loop
lock
mov
mov
add
or
ljmp
dec
sbb
clc
xlat
add
bnd
testl
stos
mov
inc
cs
gs
push
jne
lcall
xor
mov
push
inc
jp
mov
into
cmp
pushf
mov
add
test
into
stos
mov
sbb
push
sub
pop
gs
or
mov
add
out
mov
fdivrp
sbb
ljmp
mov
cs
ficompl
data16
stos
loope
adc
adc
or
adc
xorl
jg
mov
ror
push
mov
faddl
ljmp
repz
cmp
or
mov
sahf
mov
in
pop
mov
adc
jae
and
sbb
add
aaa
call
mov
addb
loopne
dec
in
push
addl
bound
add
jg
and
adc
test
push
in
ds
ret
lcall
fcoml
push
mov
pop
push
or
movb
adc
mov
mov
test
mov
xor
add
mov
add
mov
int
decb
jle
test
and
dec
and
or
stc
add
push
and
push
or
jo
push
adcb
bnd
nop
inc
jb
add
add
ficoml
lea
inc
test
pushf
hlt
out
fcomps
cli
orb
sbb
and
or
cmc
sbb
fwait
hlt
js
inc
mov
lret
dec
push
repnz
incb
pop
icebp
outsl
ss
or
data16
incb
sbb
sbb
adcb
add
sbb
in
pop
out
pusha
jge
shlb
sbb
inc
xlat
cmp
mov
subb
inc
sbb
mov
or
sar
leave
add
ror
lret
fsubp
xor
fbstp
sbb
xor
iret
mov
pop
loopne
mov
cmp
lds
push
mov
mov
or
mov
sub
fldl
add
add
push
jle
cli
sbb
incb
insb
shll
add
push
xor
or
add
ss
ja
jle
push
movsl
add
inc
mov
mov
adcb
sahf
lcall
test
or
sar
cmp
pop
add
lods
hlt
mov
stc
je
push
in
das
aam
or
rolb
jne
sbb
cs
test
jno
test
aaa
add
pusha
sbb
jge
jge
xor
sub
or
incb
pop
insb
push
stos
sbb
push
push
cli
inc
add
inc
add
mov
movsb
lods
insl
pop
cwtl
sbb
sbb
sub
or
orl
cmp
notl
add
ljmp
stos
jbe
or
loopne
or
mov
lock
andb
mov
add
repnz
xorb
and
push
aam
or
adcl
negl
push
add
mov
loop
push
je
ljmp
xor
std
xorb
das
jo
and
jnp
jo
adc
stos
push
dec
sahf
and
pusha
scas
add
cld
push
addl
loope
or
test
into
cmc
jne
insb
ja
sub
mov
add
sub
sbb
or
pop
icebp
add
mov
push
mov
mov
jne
out
sbb
sub
pushf
repnz
xchg
or
cmpsl
andl
dec
loopne
icebp
jo
push
jbe
jg
and
adc
add
mov
mov
popa
inc
jnp
rorl
adc
and
repnz
mov
add
and
add
inc
sub
mov
jmp
rolb
mov
addr16
int
push
sbb
or
call
rorl
dec
pop
inc
mov
inc
mov
roll
dec
ljmp
adc
pop
and
push
pusha
pop
test
aas
les
pop
and
jg
cmp
test
add
test
int
sub
testl
cmp
or
decl
jnp
lock
add
mov
nop
add
je
sub
aas
into
mov
enter
jo
pop
test
push
inc
or
or
push
jae
sub
adc
sub
aaa
xchg
push
ds
stos
dec
adc
or
fcmovne
inc
repnz
jnp
jo
clc
adc
roll
or
popf
aas
out
ds
dec
push
and
roll
xchg
xchg
dec
aaa
popf
ss
cmc
lock
mov
lret
aam
cwtl
es
pop
hlt
lcall
add
mov
divl
and
cmpb
mov
stos
into
or
push
sub
mov
add
sbb
call
test
in
xor
cmp
push
and
and
inc
les
push
inc
add
clc
or
cmp
xor
adc
push
sub
add
js
lods
call
fcomip
scas
movsl
jno
jb
rcrb
fiadds
xor
leave
jo
jb
add
je
push
mov
xchg
lcall
xchg
cs
cmp
mov
insb
mov
insb
cmp
inc
mov
out
jbe
hlt
and
shl
xchg
lods
fiaddl
pushl
pop
popa
inc
repz
mov
das
test
and
inc
lret
jnp
pushf
push
rcll
test
mov
test
stos
out
dec
ret
outsb
loopne
insl
and
test
jge
xchg
push
aad
int3
in
add
and
icebp
and
push
sbbb
data16
rclb
ficomps
adc
or
push
roll
add
shlb
bound
mov
add
add
add
adc
fistpll
lds
sub
pusha
push
xchg
ret
cmpsb
sbb
stos
and
iret
and
mov
mov
and
mov
lret
ljmp
loope
repnz
inc
jl
jb
dec
push
addb
add
pusha
add
inc
inc
loope
dec
jbe
lret
addl
adc
out
push
scas
xorb
push
loopne
add
mov
sbb
and
cmpsb
pusha
rcrb
push
pop
int3
xor
mov
and
adc
jbe
fs
mov
sbb
ucomiss
mov
mov
inc
lock
xor
cmc
shlb
mov
pushl
inc
and
add
mov
add
adc
cmc
jg,pn
xor
mov
mov
je
lcall
sbb
push
sbb
jbe
adc
add
add
push
ljmp
rclb
add
mov
push
sarb
or
bound
adc
pop
or
push
jg
sarb
push
or
or
test
pusha
mov
push
mov
xchg
ja
testb
and
xchg
or
add
je
push
jecxz
inc
fcmovb
jnp
mov
nop
pop
push
push
nop
insb
add
test
nop
push
add
lods
push
outsb
sub
roll
test
mov
or
into
sarb
sub
ss
push
push
lret
scas
clc
inc
stos
mov
dec
lds
xchg
xor
and
mov
push
push
arpl
inc
mov
and
jge
sub
mov
push
es
pop
loopne
xor
sub
xor
pop
add
icebp
push
or
repnz
pop
icebp
push
and
inc
pop
add
adc
cli
jne
mov
add
and
mov
mov
add
pop
mov
ret
or
sub
sbb
jo
add
sbbb
sbb
lcall
loope
dec
inc
clc
jg
scas
push
dec
and
mov
filds
push
add
icebp
lret
jg
das
mov
add
and
mov
cli
adc
sbb
arpl
inc
xor
subl
jge
sbb
test
loope
adc
push
adc
loop
dec
bound
jg
add
jb
loopne
pusha
mov
aaa
adc
push
mov
jne
push
testl
or
lock
and
push
jns
daa
push
jae
push
cld
jg
jo
cs
push
push
or
push
xor
mov
cli
pushf
add
sbb
inc
das
adc
pop
inc
jne
xlat
test
pushf
in
mov
add
inc
and
ljmp
mov
add
xlat
xor
int
lock
add
add
stos
into
lcall
iret
fs
mov
xor
and
jo
push
idivb
pushf
in
adc
pusha
xchg
xchg
push
push
aaa
test
out
data16
or
mov
lock
lock
mov
nop
sbb
push
jo
lock
push
ret
sbb
bound
pop
cmc
loopne
lret
adc
nop
ja
add
call
adc
out
jae
fidivl
xor
sub
mov
ret
mov
incb
mov
mov
xor
fldenv
and
mov
adc
cli
movsb
mov
cmc
ss
decl
mov
popa
mov
and
adc
incb
repz
sbb
in
in
adc
push
popa
xchg
sub
incl
movsb
decl
out
mull
fiadds
cmp
loop
pop
test
nop
add
cs
adc
sbb
adc
and
add
xor
mov
cli
jno
inc
xor
stos
orb
mov
push
loope
les
and
push
add
jecxz
and
mov
jnp
jl
sbb
xor
mov
cld
sbb
cmc
adc
mov
inc
cmpsb
loop
jle
push
sbb
stc
jae
and
pushf
and
sub
aam
and
or
sub
adcb
add
or
loop
mov
lock
adc
mov
jge
add
jo
ja
stos
sar
xor
ds
cld
or
or
jecxz
add
shr
lds
add
pushf
lods
cld
lock
rcl
mov
cmp
adc
ret
and
daa
inc
sub
xchg
das
push
jmp
or
ljmp
mov
push
std
fistpl
adc
jno
jb
inc
mov
inc
push
pop
addl
sar
jg
pop
push
ja
jnp
dec
cmp
mov
jge
jge
add
jae
dec
xchg
lcall
push
mov
repz
xchg
add
adcb
popf
ret
push
mov
mov
sub
push
or
into
mov
xor
xorb
inc
mov
mov
mov
aad
ss
in
jo
push
std
lock
incl
push
sbb
sbb
push
call
add
add
push
inc
add
adc
hlt
xor
scas
xor
andb
mov
add
dec
clc
movsl
push
sarb
sarl
push
fdivrs
sub
mov
out
jne
loop
add
pop
or
mov
fcoml
test
adc
insb
jl
add
jg
hlt
stc
je
mov
jbe
or
stc
jno
jl
out
push
inc
sub
mov
sub
shll
mov
divb
aas
add
sbb
add
mov
out
mov
jle
or
mov
ljmp
add
dec
orb
scas
mov
mov
stc
jne
inc
adc
repnz
scas
clc
sbb
add
mov
jno
loopne
cmp
popa
sub
aas
movsl
mov
popa
pop
inc
push
inc
lods
ds
repnz
mov
or
ds
cmp
mov
push
sub
mov
adc
jge
jge
cmc
sub
jne
xor
and
insl
pop
dec
aam
pushl
mov
sbb
jno
add
sub
push
push
and
movsl
rclb
mov
push
push
cwtl
in
push
adc
jmp
into
xchg
push
jnp
call
mov
cmp
pop
sub
inc
aas
inc
mul
adc
in
int
movsl
icebp
add
sub
call
inc
push
pushf
lock
lods
adc
jge
aaa
int
test
out
or
jle
int
add
out
jae
jmp
fistl
mov
pusha
rcrb
lock
ss
add
jno
add
ds
add
dec
inc
adc
inc
dec
jle
and
out
dec
or
fistps
jecxz
adc
dec
push
aas
lcall
mov
or
add
loop
or
and
out
adc
outsl
je
sahf
leave
xor
ret
push
add
scas
cmpsb
push
jae
nop
dec
and
addl
pop
add
lret
frstor
lock
repnz
roll
jp
imul
mov
mov
add
inc
mov
or
scas
pop
icebp
mov
jb,pt
jns
jge
bnd
shr
movsl
cmp
daa
movsb
or
cmc
daa
ds
mov
add
push
flds
add
cld
jg
add
and
sbb
roll
xlat
dec
sarl
mov
frstor
mov
bound
pop
push
out
sub
jp
add
insl
lds
inc
test
test
sub
pop
fistps
cmc
cmc
mov
ss
push
add
cmc
int
xorb
icebp
cld
mov
int
or
dec
add
test
xchg
test
aam
push
and
insl
mov
movb
cmpsl
mov
nop
adc
jo
jo
sbbb
aam
out
cmc
mov
lods
or
or
push
cmp
or
sbb
fcomip
adc
out
dec
add
or
loop
stos
lcall
test
mov
hlt
or
add
stc
add
inc
sbbb
mov
loop
bound
cmp
mov
cwtl
add
in
aas
or
push
push
mov
lods
push
cmp
aas
add
js
inc
popl
loopne
push
decb
mov
xor
lds
push
mov
add
stos
add
mov
cmpsl
shr
cmp
add
jo,pn
or
add
pushw
dec
loop
add
repnz
cs
ja
popa
jbe
fiaddl
and
push
sub
push
shlb
or
jnp
aaa
sbb
push
out
pop
adc
mov
xor
push
sbb
sub
or
xchg
cmc
fisttps
add
lock
xchg
mov
sarb
pop
or
in
jle
les
mov
add
inc
sbb
aas
inc
xor
cmpb
dec
mov
add
fidivrl
adc
roll
rolb
push
loope
in
or
jge
mov
xchg
jge
mov
cli
inc
test
clc
add
ret
xorb
call
or
sti
jp
add
push
test
subb
cmp
clc
in
add
or
mov
test
adc
cli
idiv
mov
add
cmc
push
jne
or
pop
jp
and
add
mov
scas
pop
mov
mov
int
ss
test
test
pushf
mov
pusha
or
mov
sbb
sbb
ret
pop
or
or
push
popf
adc
push
xchg
ret
mov
les
mov
inc
add
mov
inc
add
lret
mov
inc
adc
or
lods
enter
dec
int3
jo
orb
add
xchg
ljmp
mov
test
nop
inc
lock
push
adc
orb
hlt
jge
xchg
je
testl
lds
add
inc
jle
or
push
pop
pop
cwtl
mov
stc
dec
push
or
ss
repnz
cmpsb
inc
outsb
bound
push
pop
ret
push
cmpsl
xchg
inc
sub
iret
pop
adc
dec
mov
sbb
ds
xor
jl
push
mov
push
pop
mov
add
dec
inc
push
inc
sahf
push
add
lods
and
mov
dec
mov
xchg
xor
jb
pop
std
aas
dec
mulb
enter
arpl
adc
ja
mov
inc
pop
and
jb
xchg
xchg
sub
and
outsl
sub
add
mov
jecxz
and
loop
or
fldt
inc
ret
jnp
mov
add
jge
ljmp
fimuls
add
xor
adc
or
adc
loope
test
outsl
cli
add
and
mov
icebp
iret
scas
add
inc
ljmp
cmpsb
xchg
fiadds
inc
sub
cmp
cli
pop
in
les
mov
shrl
loopne
movsb
xor
decl
jle
mov
lret
pusha
push
push
mov
es
add
addb
mov
inc
and
outsb
mov
adcl
cmpsb
sbb
popa
mov
xchg
icebp
adc
ficomps
out
out
and
loopne
mov
decl
dec
orl
loope
rorl
cmpsb
sahf
in
or
pusha
xor
jle
incl
add
cld
ja
rolb
sbb
jg
icebp
mov
xor
add
mov
hlt
sbb
mov
adcb
push
push
push
sub
popa
aas
sbb
xchg
push
fimuls
pop
outsl
jg
call
test
and
pushf
out
jg
test
fsubs
loop
jne
je
adc
test
fiaddl
cmc
inc
adc
cmpsb
enter
call
ja
cmpb
push
push
and
pusha
add
mov
or
inc
aaa
add
repnz
subb
dec
out
add
or
and
roll
sbb
pop
sub
ret
push
loopne
mov
clc
ret
ja
stos
mov
and
stos
and
inc
movb
mov
andb
std
jno
cmpsb
loopne
mov
decb
inc
xchg
rolb
jb
push
mov
lcall
mov
adc
or
repnz
inc
push
test
mov
hlt
orb
ss
lods
cld
aam
jg
mov
mov
add
jmp
das
mov
add
shrb
mov
incb
and
test
subl
add
cli
sahf
jle
add
es
mov
sbb
ret
push
lock
incb
hlt
mov
je
dec
jbe
jge
mov
into
loop
xorl
sub
ss
mov
add
out
sbb
clc
pavgb
push
loope
add
push
pop
loopne
subb
jae
jg
cs
push
jle
or
loopne
jge
loope
jmp
sbbb
xchg
mov
or
andb
repnz
sbb
mov
jno
add
dec
out
movsl
pusha
pop
jecxz
mov
dec
cwtl
je
sahf
out
inc
pop
mov
add
pusha
push
cld
mov
mov
loope
xchg
aas
jecxz
xor
mov
call
test
insb
jo
inc
insb
jl
and
jmp
add
ja
push
add
add
xor
mov
mov
ja
inc
aaa
jo
jg
jo
sbb
push
mov
jae
add
push
add
aam
pop
xor
addb
add
incl
inc
mov
jge
ss
int
cmp
jo
aaa
xor
int
sti
xchg
adc
mov
xchg
nop
add
add
lods
xchg
insb
filds
pop
and
int
ds
jge
outsb
mov
push
add
pusha
push
data16
push
bound
add
sub
in
adc
mov
clc
ja
cmp
adc
and
adc
mov
pop
int
adc
sub
xor
adcl
shll
or
orb
cmpsb
push
add
decl
pop
jle
mov
mov
jnp
add
addl
nop
add
add
sbb
jae
push
pop
adc
mov
push
push
push
add
or
mov
rorl
hlt
repnz
jno
nop
pop
inc
add
loopne
push
les
and
shufps
xor
aaa
addl
lcall
dec
addb
push
orb
xor
sbb
cmp
cmp
sub
rolb
push
jo
dec
mov
push
pop
or
dec
or
pushf
cld
add
or
push
add
add
cmc
or
aas
adc
je
push
insb
mov
sbb
jae
adc
push
add
data16
cli
movsb
ljmp
int3
dec
xor
jle
faddl
mov
mov
jnp
rclb
fadds
jl
jb
fidivs
add
addl
mul
jl
notl
mov
pushl
push
cwtl
push
in
xor
xchg
hlt
test
and
jo
stc
jbe
scas
cld
jbe
add
add
mov
mov
into
lock
stos
cli
mov
out
jo
movsl
pop
add
inc
mov
cmp
dec
mov
dec
jg
and
stos
mov
insb
clc
nop
push
ss
cmpsb
add
cwtl
scas
test
add
inc
mov
adcb
ds
or
jno
in
xor
push
filds
add
negl
sub
test
mov
aaa
cld
cmp
xchg
mov
cmc
jnp
out
in
mov
add
inc
shrl
sbb
outsl
push
dec
out
leave
add
movsb
lcall
xor
mov
out
inc
add
pushf
repnz
jmp
cmp
and
jb
or
sbbb
cmp
adc
jge
loop
push
pop
pop
cmp
mov
xor
pop
rcrb
xchg
xchg
adc
movsb
stc
repz
mov
mov
mov
xor
loope
and
mov
pop
or
fsubl
pop
cmpb
cli
cs
fs
sbb
out
clc
call
jb
add
mov
jo
adc
decl
loopne
xchg
sub
or
sbb
jl
jb
jnp
rorb
push
jmp
sbb
ret
xor
mov
and
clc
arpl
stc
sbb
fadds
std
ljmp
dec
xor
sub
xor
jle
int3
and
push
cld
mov
add
bound
jge
push
jp
stos
jg
add
mov
mov
enter
push
out
jg
pop
add
das
lock
popa
xchg
pop
out
inc
add
pop
out
jge
cmpsb
mov
jmp
sbb
add
xor
adc
shr
jge
ret
icebp
inc
or
dec
and
or
scas
or
insb
add
fwait
fwait
push
rcrb
loop
adc
das
mov
clc
mov
push
mov
sar
out
xchg
add
pop
mov
jno
ljmp
mov
fnsave
inc
mov
or
mov
push
mov
mov
pop
add
jo
lock
orl
lock
inc
cs
test
inc
aaa
loopne
rorb
mov
bnd
push
mov
mov
sbb
ljmp
nop
iret
mov
in
shr
js
mov
adc
push
push
ficomps
aaa
add
adc
push
test
mov
div
mov
mov
ljmp
ds
xor
lret
add
rol
rcrb
pop
lock
sbb
push
imul
lret
jne
pop
or
idiv
push
movsl
sarb
pop
stc
loopne
fadds
into
push
jbe
xchg
stc
inc
test
jnp
scas
ljmp
mov
xor
push
jo
fcmovb
cmpsb
sti
sbb
cmpsb
mov
mov
fisubrl
call
cmp
and
loopne
loope
out
sahf
jbe
adc
or
mov
call
out
movb
pushf
repz
nop
add
and
inc
pop
push
pop
ljmp
jo
aam
andb
loopne
jnp
mov
mov
fcomps
add
dec
shl
and
or
testl
mov
pop
and
pushf
lock
xchg
pusha
mov
add
icebp
test
mov
add
adc
push
xchg
hlt
add
inc
inc
fidivrs
incl
push
push
and
jno
and
lcall
fcomip
adc
and
xor
or
add
sbb
pop
jae
mov
mov
lock
test
int3
push
enter
ljmp
push
js
outsb
nop
dec
adc
xchg
rcrl
xorb
pushf
std
sbbb
cmp
psubsw
lock
je
push
lods
and
sub
decb
cld
enter
movsb
mov
mov
jg
nop
add
loopne
xor
mov
mov
inc
sub
les
mov
jp
mov
pushf
adc
stos
ljmp
mov
pop
xor
lcall
mov
out
mov
fsin
and
insl
mov
outsl
loopne
dec
mov
cmp
cs
lock
mov
decb
sbb
orb
push
ret
pop
jb
cmp
pop
sbb
dec
stos
push
jmp
cmpsb
pop
incb
fdiv
pushf
int3
jg
jne
xor
jmp
xchg
rcrb
das
rorb
mov
pop
mov
shll
icebp
adc
sub
push
mov
jge
mov
adc
mov
sbb
inc
fdivs
les
and
cs
lods
out
cs
add
insb
repnz
sbb
mov
lret
jne
nop
or
dec
push
sar
pushf
inc
push
inc
mov
inc
push
jle
push
rclw
es
pop
add
jno
pop
shrl
add
mov
xchg
fsts
cmp
cmp
mov
clc
stc
jne
rcl
jp
mov
lea
jb
pop
xchg
push
jmp
mov
sbbb
repnz
jl
cmp
fwait
loope
jge
or
or
es
incl
jl
xor
loopne
cmpsb
dec
sbb
repz
aas
sbb
imul
subb
dec
add
ss
bnd
push
or
xor
fidivs
shr
outsb
loop
adc
orb
or
cli
or
jl
pusha
test
dec
or
addb
add
or
js
add
out
test
and
and
push
sti
xchg
adc
adc
and
xorb
aaa
out
iret
jge
add
andb
int3
subb
fistpl
into
es
fmulp
pop
add
jne
int3
mov
adcl
mov
jmp
adc
cmp
test
sub
sar
sub
push
shrl
jge
stos
inc
sbb
pop
fwait
jle
hlt
or
dec
inc
outsl
lcall
mov
pop
bound
addl
andb
mov
jmp
push
xrelease
jnp,pn
out
test
test
add
inc
pop
adcl
cli
add
les
stos
icebp
inc
xchg
cmp
add
cmpl
icebp
nop
int
add
cld
adc
out
inc
add
mov
mov
addl
daa
popf
test
pop
jo
or
sbb
mov
cli
test
ds
dec
sub
es
lds
add
jle
stos
or
mov
inc
pop
jl
stc
inc
pop
xchg
cmp
lock
or
mov
xchg
add
mov
je
mov
mov
and
mov
jle
int3
push
in
adc
or
test
sub
hlt
cmp
dec
movsl
push
jnp
add
out
shll
dec
and
sub
cmc
cmp
decl
or
sbb
repz
add
imul
loop
lret
mov
testb
sbb
jne
sub
not
out
sbb
rolb
rolb
adc
int
les
mov
xor
andb
mov
jo
notl
cld
fwait
mov
bswap
mov
hlt
cld
adcb
aas
loop
sbb
mov
mov
push
or
mov
adc
inc
and
gs
pop
hlt
xor
dec
cld
mov
jmp
clc
add
or
scas
xor
repz
aam
xchg
jno
loopne
test
clc
xor
and
lret
subb
lods
sbb
dec
icebp
pushf
jnp
cmp
fnsave
push
movsb
loop
rolb
pop
cmc
inc
repz
jle
loopne
enter
mov
pop
pop
es
test
jae
adc
shlb
int3
mov
ss
mov
xor
cmp
les
lret
add
ja
push
xchg
call
push
xor
cmp
sub
push
rorb
xor
xchg
fdivl
push
out
outsl
outsl
or
and
sbb
out
adc
adc
std
aad
mov
pusha
add
cli
add
sbb
sbb
xor
fdiv
xchg
pop
and
das
sbb
int3
cli
cmp
test
and
stos
inc
rcrb
add
jo
ret
inc
insb
jle
inc
inc
jo
or
movsl
or
mov
push
data16
adc
sbbb
mov
psllw
mov
pop
cmpsb
sahf
shll
xchg
pop
xlat
jge
and
stos
jl
add
fidivrs
pusha
add
dec
jmp
mov
xor
rcrb
jne
lock
loope
or
mov
mov
movsl
decl
insb
or
jge
add
jge
jne
inc
and
and
add
enter
add
add
add
lahf
aas
add
add
push
push
xlat
fwait
out
mov
jmp
push
shlb
les
inc
shlb
mov
adc
fdivp
mov
loop
or
movsl
lea
dec
movsb
in
lock
cli
mov
push
pop
sbbl
jg
inc
and
jmp
test
jge
imulb
xor
push
mov
test
incl
cmc
xor
push
xlat
jbe
and
push
sarl
movsb
mov
sbb
popf
or
add
jnp
idivl
mov
jg
repnz
icebp
hlt
jge
pop
stos
xchg
dec
aaa
mov
mov
bnd
add
pop
sub
sti
loop
xor
sarl
add
aaa
sbb
mov
adc
stc
mov
pusha
xor
aaa
add
fnsave
inc
push
pop
sbb
sbb
pop
pop
fsubrs
adc
push
rorb
cmp
or
dec
adc
cmc
cmp
stos
sub
nop
push
hlt
xor
fbstp
fs
sbb
subl
hlt
fildll
xchg
adc
add
push
push
das
clc
mov
cltd
out
in
mov
cwtl
inc
add
jne
adc
test
sar
das
movb
add
and
push
adcb
mov
jecxz
jnp
out
in
aaa
adc
ja
and
mov
push
dec
mov
jae
mov
lea
xlat
inc
adc
sbb
out
cmp
pop
cmp
pop
cld
lret
rorl
xor
sbb
mov
pushf
ret
loopne
inc
or
cld
jg
lock
xchg
cmp
lods
cmpsb
dec
cmpsb
pushf
in
loopne
in
gs
pusha
fldl
pusha
pop
out
pop
jp
mov
imul
repz
or
or
sub
and
cmp
add
wrmsr
lock
push
fwait
clc
push
mov
add
loopne
add
jecxz
push
jno
je
lock
pushf
or
ds
sbb
iret
pop
xor
pop
ds
adc
add
or
add
sbb
pushf
ds
add
ja
cld
jo
sub
ja
aaa
mov
stc
jp
add
movsb
add
mov
cmp
cmpsb
adc
or
xor
hlt
outsl
xchg
or
sahf
bnd
lcall
push
push
sbb
mov
push
loopne
mov
test
scas
push
jle
add
nop
dec
jne
fnstenv
push
sarb
sahf
hlt
sub
sbbl
orb
adc
mov
push
cmpsb
xor
adc
in
test
insb
out
xchg
mov
or
push
out
adc
jg
and
shlb
add
inc
scas
or
inc
je
loopne
movsb
xchg
test
xchg
lcall
ja
mov
scas
pop
jge
dec
push
pop
cmp
bound
arpl
call
pop
mov
mov
jo
sahf
andl
lock
add
lcall
mov
push
or
push
jne
xor
pushf
int
dec
adcb
ret
push
les
adc
xor
mov
push
mov
dec
jae
add
jo
test
or
lock
add
fldenv
popa
adc
pop
aad
add
stos
push
adc
mov
incl
lds
shrb
sub
call
mov
or
jge
or
repz
fisttps
sbb
and
jne
pop
cmc
dec
rolb
sahf
in
inc
sarb
jo
pusha
or
cmpb
loopne
sar
jg
jo
jb
or
enter
push
adcb
addb
push
jae
mov
mov
and
movsl
xchg
les
or
push
pop
clc
mov
rorb
lcall
and
scas
clc
pop
pop
dec
xorb
nop
fcmovu
cmp
adc
xchg
test
push
dec
mov
lock
xchg
ljmp
sbb
push
pop
fwait
lea
sbb
sub
jg
mov
cli
or
sub
push
cmp
jmp
adc
scas
mov
data16
outsb
test
push
mov
push
push
xchg
outsb
outsl
lret
push
pop
or
push
sub
and
pushf
fcoms
rolb
ficoms
out
push
es
pop
adc
jnp
cmp
jb
pusha
sbb
and
aaa
or
das
xchg
lock
ja
inc
movsl
add
mov
outsb
mov
int
add
aaa
fistps
pop
ror
jmp
inc
jp
or
add
in
loope
andb
repz
rolb
imull
lock
dec
xchg
adc
cmp
mov
loop
adc
mov
movsl
push
shl
or
push
and
rorb
inc
aam
and
lcall
mov
sub
rcrl
sub
pushf
adc
fwait
xorb
push
fidivl
mov
loope
or
xor
repnz
adc
or
cmp
and
add
ret
fcompl
mov
jbe
cmp
scas
adc
push
sbb
cmp
cmpsb
imul
add
xor
sub
mov
cmpsb
inc
cmc
inc
icebp
mov
rcrb
call
cld
out
jl
inc
dec
jecxz
or
sub
pop
adc
add
mov
sbb
cs
mov
push
cld
stc
jno
add
or
inc
adc
add
cmp
je
fs
jae
mov
adc
sbb
adc
les
inc
cld
addb
movsb
jo
pop
adc
xor
add
dec
call
pushf
icebp
add
add
xor
ret
adc
scas
jg
mov
inc
aaa
rcrl
int
pop
jbe
shlb
sub
xor
adc
lock
push
cmp
jo
fidivl
in
pushl
xor
imull
repz
lods
or
and
adc
pushl
sub
add
xchg
inc
pop
push
nop
pop
push
ret
adc
mov
mov
adc
jg
je
rolb
divl
mov
lret
cld
jge
xor
sbb
inc
add
cmp
in
add
pusha
bound
add
adc
cmp
mov
ds
jmp
call
push
adc
xchg
jecxz
or
cmp
movsb
adc
dec
adc
cltd
mov
loop
jl
lret
subl
mov
lock
out
fwait
cmp
xor
cmpsb
and
add
stc
or
mov
sub
jnp
mov
cli
fbstp
push
test
dec
add
ljmp
pop
add
hlt
into
mov
jg,pt
sarb
push
mov
pushf
fadd
add
into
add
sub
push
orb
jno
filds
adc
jnp
push
fisubl
adc
push
orb
lock
cli
push
cmc
aaa
dec
out
mov
ret
jg
mov
mov
mov
repnz
popa
mov
sbbb
push
xor
sbb
adc
cwtl
push
push
push
mov
cmp
or
lock
enter
inc
sbb
pop
sub
jg
jge
inc
adcb
cwtl
xchg
xchg
push
add
pushf
cld
popa
xor
adc
push
jmp
shl
out
adc
mov
push
frstor
cmc
movsb
adc
or
pop
ss
cmpsl
jnp
les
hlt
sub
sub
adc
movsl
cmp
sub
jne
repnz
add
loopne
cmc
cmc
or
push
mov
and
jp
or
sbb
jo
jno
inc
data16
mov
outsl
out
or
mov
or
mov
mov
jne
jb
fdivs
adc
fsubrl
add
scas
pusha
add
add
adc
andb
mov
movsb
cs
pop
jge
scas
jae
fstl
mov
lcall
aad
push
inc
ss
mov
mov
adc
push
mov
add
xor
jno
adc
bound
push
add
scas
jle
fnstsw
or
push
ret
add
repz
push
add
jp
mov
sbb
jp
test
loopne,pt
and
or
sbb
lods
cld
js
enter
mov
jb,pn
mov
stc
mov
mov
out
insl
xor
test
ljmp
jbe
mov
mov
add
add
push
mov
out
cli
das
xchg
in
push
jg
gs
push
jmp
jnp
xchg
clc
jmp
adcb
aaa
push
cld
xor
cwtl
sub
addr16
negl
mov
out
sti
cld
pop
lahf
shr
sub
mov
ja
sahf
mov
adc
jl
fdivr
mov
add
mov
enter
add
push
push
inc
loopne
push
je
cwtl
pop
int3
push
aaa
lock
add
movsb
dec
push
inc
jnp
test
add
lds
jne
loop
jg
fs
or
cwtl
adc
sbb
call
std
fbstp
mov
ret
jb
negl
ret
dec
cmp
pop
sub
pusha
aaa
hlt
adc
orb
cs
mov
cmp
jge
cmp
push
add
cmpb
cmp
mov
movsb
cmp
mov
rolb
sbb
mov
mov
add
ljmp
pop
fwait
in
aas
int3
orb
cmpsb
inc
xor
ds
mov
incl
cmpb
add
pop
sbb
aaa
mov
std
ljmp
cmp
lret
lods
push
lcall
shlb
adc
and
and
mov
arpl
cs
add
movsb
push
in
aaa
mov
std
call
cmc
inc
pop
fidivrl
and
repnz
add
pop
cmpb
and
sahf
push
outsb
les
or
jne
repnz
mov
call
std
cmp
ja
add
int
mov
sbb
lock
cmp
in
jg
fisubrs
inc
push
roll
add
in
sbb
mov
jno
repnz
jbe
xchg
xorl
and
push
bound
fadds
adc
xor
adcb
ret
inc
push
inc
andl
sbb
xchg
outsb
ds
lock
mov
shlb
adc
pop
mov
and
adc
loop
push
sahf
nop
and
andb
pop
jge
cmp
or
rclb
ss
aaa
add
or
adc
push
shlb
fidivl
add
cmpsb
add
aad
inc
pushl
js
push
push
outsb
dec
inc
dec
gs
dec
mov
lock
test
add
rorb
sub
roll
adc
xchg
cmp
add
cmpb
mov
push
mov
mov
negl
inc
ds
sbb
mov
leave
loopne
sar
cwtl
push
sub
inc
mov
adc
andl
loopne
inc
bound
jo
pusha
adcb
movsl
xor
jae
mov
outsl
pop
lock
scas
cmpsb
sahf
push
and
loop
andl
loopne
orb
divb
sub
decl
mov
add
dec
and
adc
cmp
inc
into
repnz
sti
cld
dec
stos
inc
push
movsb
lock
xor
mov
pushf
pop
imull
add
or
adcb
cli
jne
mov
lds
scas
xchg
sbb
mov
aas
sarl
add
mov
xchg
or
push
dec
xchg
ss
lds
pop
decb
in
out
cmp
mov
and
fst
outsl
push
jb
push
jne
lds
xor
pop
aaa
mov
js
rolb
in
es
inc
icebp
lcall
xchg
cmp
cs
pusha
sbb
inc
pop
and
add
shlb
aad
cmpsb
lret
mov
scas
ljmp
sub
inc
inc
pop
add
rolb
sbb
or
add
jl
hlt
stos
dec
and
imul
pop
or
aaa
or
add
loopne
fbld
push
out
mov
sbb
or
mov
outsl
scas
int3
in
inc
mov
mov
or
dec
sarb
push
test
addl
es
sbb
push
mulb
roll
mov
dec
hlt
aad
mov
shld
or
movsb
add
push
mov
or
js
cmpsb
add
and
mov
nop
int
push
outsb
loop
test
es
or
sbb
fldt
xor
and
loop
sbb
jbe
movsl
mov
rorb
xor
adc
shrl
jl
addb
inc
and
mov
and
adcb
mov
pop
lock
add
lret
jb
test
cmpl
pop
int3
jg
sbb
inc
fdivrl
lahf
ss
inc
push
cmc
repz
call
cld
dec
jne
orb
mov
push
xor
rorl
loopne
stos
sbb
pushw
cld
pop
add
loope
push
sub
sub
mov
cmpsb
jge
aam
in
fistpll
outsb
inc
loopne
jno
hlt
or
minps
hlt
sbb
adc
hlt
sbb
jb
fistpll
iret
stos
out
mov
sbb
aaa
cld
incl
push
push
ljmp
inc
add
jo
add
arpl
dec
dec
add
cmp
adc
out
jp
xchg
ret
sub
ljmp
aaa
or
and
imul
push
sbbb
cmpsb
inc
adc
xchg
adcb
or
out
push
mov
cmp
incl
ljmp
aas
xor
and
push
inc
inc
es
sbb
ljmp
xor
add
hlt
testb
and
adc
lds
push
or
addb
inc
aaa
icebp
pop
add
xor
testl
sti
ljmp
subb
nopl
add
ret
bswap
cmp
loop
out
movsb
jge
push
out
rolb
test
shll
je
adc
cmp
aaa
add
int
inc
sub
mov
jno
mov
out
add
add
dec
jae
shrb
sbb
push
shlb
dec
inc
mov
dec
ret
add
popf
push
add
push
push
pop
fidivrs
mov
mov
cld
push
fidivl
push
add
mov
add
addb
stos
ss
or
mov
mov
add
fimuls
mov
push
jne
xchg
stc
or
jge
push
dec
xchg
mov
es
add
push
or
adc
notb
dec
mov
pushf
loop
cmp
cmp
jo
push
mov
out
pop
lret
mov
xchg
mov
sarb
jecxz
add
dec
cmp
add
mov
or
rorb
scas
or
imull
sar
jmp
loope
rcrb
and
into
call
or
mov
inc
out
movsl
mov
pushf
and
push
xor
loopne
incl
stos
dec
shll
mov
rdpmc
add
popf
push
xorl
test
and
pop
std
cs
pop
or
or
stc
cmp
lret
scas
xchg
jnp
scas
decl
pop
dec
nop
mov
xchg
outsb
and
xchg
or
mov
cli
scas
pop
cmc
add
push
xor
jbe
lcall
adc
sahf
int
cs
in
js
mov
jne
push
sbb
pushf
mulb
add
xor
mov
sub
or
dec
test
mov
sbb
scas
sahf
pop
test
add
jp
and
fsubs
mov
and
sbb
and
das
pop
sub
icebp
inc
scas
std
out
sub
adc
shll
add
fdivr
mov
adc
les
add
pop
pop
mov
cli
push
nop
mov
nop
lahf
not
cmp
sarb
test
sub
dec
lock
add
add
and
pusha
aaa
xor
mov
dec
rcl
adc
mov
shlb
incl
jno
adc
push
es
sbb
incl
jp
stos
scas
pop
test
add
mov
int
clc
mov
lret
ljmp
cmp
push
jo
pop
mull
fsubr
mov
fwait
add
daa
pop
into
push
jg
addr16
jg
adc
mov
and
or
decl
and
scas
or
mov
xor
mov
add
sub
xor
add
adc
lcall
int3
in
add
cli
loopne
pushf
or
into
std
outsl
pop
add
rcll
push
mov
and
pop
pusha
lock
jae
or
adc
xor
or
je
mov
push
test
xor
or
jg
mov
test
popa
adc
xchg
add
in
push
xchg
pop
xor
add
ret
inc
pop
outsl
nop
or
add
ret
out
push
enter
mov
cli
xchg
enter
jmp
call
shlb
les
jl
add
loope
fwait
inc
sub
mov
push
and
xchg
in
inc
fbstp
popa
inc
add
cmp
inc
add
loop
movsl
push
mov
aad
loop
or
inc
fsts
rolb
jge
fcoml
sbb
cld
sbb
orb
sbb
insl
jo
test
mov
or
push
add
and
xchg
rolb
xchg
mov
pop
adc
test
stos
loopne
nop
out
push
cli
inc
xor
dec
inc
popl
int
cmpb
adc
sbb
mov
dec
cmp
inc
inc
adc
sbb
pusha
jno
mov
nop
xchg
mov
push
inc
enter
decl
dec
lcall
mov
leave
xor
clc
call
xor
fs
mov
dec
cmp
jo
or
dec
mov
sar
lock
test
xchg
subb
inc
lret
mov
xchg
subb
shlb
ret
jge
nop
or
adc
sbb
ficoml
or
lock
sarb
push
jp
rol
repz
addb
mov
add
push
pusha
push
pop
repnz
xor
or
lock
mov
sbb
adc
dec
cmp
aas
or
pushf
push
movsl
mov
fldl
jo
dec
mov
popf
add
cld
stc
dec
aas
xchg
clc
add
xor
fnstsw
mov
adc
rolb
shrl
pop
sbb
add
dec
clc
rorl
sahf
sbbb
xor
and
and
cmpsb
repnz
fsubr
negb
mov
xor
xor
sub
adc
icebp
inc
popa
add
addl
out
and
lock
pop
and
jo
out
lds
sub
dec
andb
sub
sahf
inc
cmp
mov
inc
mov
sbb
xchg
add
pop
mov
adcl
in
clc
mov
pushf
les
mov
pop
push
mov
mov
imul
mov
inc
xchg
mov
add
fs
dec
dec
rclb
dec
push
add
cmp
cmp
inc
and
mov
sbb
xor
ss
sbb
adc
pop
add
dec
add
jo
add
inc
loopne
cmp
negl
pop
inc
or
push
imul
icebp
push
fsubrs
mov
inc
or
clc
or
push
orl
stos
ds
aam
jecxz
ljmp
mulb
mov
adc
orb
inc
out
dec
loopne
sub
addl
ret
pop
xor
mov
out
addb
aam
sub
mov
and
rolb
pusha
jp
xchg
fcompl
sub
add
jb
jge
mov
push
cmp
test
adc
lods
cmp
repnz
adcl
mov
adc
fmuls
or
test
sbbb
hlt
cmp
je
into
stos
adc
and
js
outsl
clc
cmp
add
jmp
into
push
jo
pushf
cli
repz
sahf
pop
shl
or
dec
repz
add
data16
cltd
out
daa
test
add
push
sbb
adc
out
negl
and
mov
jb
and
xor
jle
add
add
add
jbe
xor
xchg
push
cmpsl
rclb
cmp
es
adc
loope
inc
or
dec
shlb
outsl
xchg
xchg
add
adc
addl
and
sub
test
mov
in
rorb
aaa
or
addb
fimull
sti
movsl
inc
push
sub
push
mov
add
subl
mov
mov
or
or
orb
aaa
mov
pop
push
or
add
idiv
mov
les
repz
testb
and
add
or
js
test
adc
push
inc
push
jle
repz
jmp
cmpsb
movsl
dec
add
jg
stos
rorl
cmpsb
pushl
and
inc
or
and
ds
xchg
inc
add
cmp
mov
inc
push
pop
subb
jmp
mov
pop
add
ljmp
adc
test
rorl
adc
add
out
push
or
and
inc
fimull
inc
xor
sbb
sub
dec
loope
and
inc
out
push
repnz
mov
inc
inc
pop
mov
inc
push
addl
hlt
inc
mov
outsb
bound
add
sbb
ss
dec
or
or
cs
mov
push
dec
sbb
push
testl
cmp
sub
ss
add
addb
movsl
adc
jb
repz
in
cmp
or
addb
pop
or
dec
shll
or
jg
mov
inc
add
inc
xor
dec
insb
ja
cs
and
pop
and
loop
push
or
jp
push
dec
push
fwait
mov
loope
jae
fadds
pop
mov
movsb
divb
sbb
add
orb
lcall
jl
push
sahf
jle
and
pop
and
inc
loop
adcl
cmp
adc
cmp
cmp
cs
mov
jne
mov
into
or
or
mov
fistpll
push
sub
adc
jae
loopne
rcll
and
and
hlt
ljmp
sub
mov
jne
xchg
fwait
loop
inc
dec
and
out
movsl
sahf
or
std
pop
pop
popa
add
cmpb
js
inc
and
loopne
pop
add
and
and
push
cld
push
add
adc
filds
mov
gs
pop
push
dec
sub
pop
xchg
mov
and
add
jle
push
pusha
lods
jbe
or
adcb
jb
sbbl
es
push
mov
push
sub
call
das
hlt
int
jae
and
in
in
loope
sub
fs
jnp
rclb
ret
pop
ss
das
roll
jbe
in
insb
jmp
pop
and
jg
decb
push
loop
add
stos
adcb
les
loopne
bound
loope
sbbb
loopne
orl
js
int3
imul
sahf
mov
movsl
sub
cmc
jo
rcrl
lods
loopne
dec
pop
add
add
inc
imul
adc
pusha
or
stc
js
test
loope
pusha
cmp
pusha
adc
call
jae
loope
cmpsb
pusha
and
and
push
hlt
pusha
push
adc
mov
popa
mov
outsb
pusha
jnp
icebp
int
jo
push
incl
mov
mov
pop
or
sbb
scas
repz
cmp
sbb
inc
and
das
pop
add
ret
jb
fbld
in
fildll
int
movsl
push
in
jb
gs
divb
loopne
push
lock
mov
jno
rclb
loopne
inc
add
cs
cmpb
out
mov
cld
dec
leave
ja
pop
std
rclb
hlt
push
sbb
add
mov
sbb
push
mov
jne
decl
loopne
hlt
push
into
or
mov
cld
adc
push
lds
loop
add
xorb
js
cld
mov
inc
push
sahf
pusha
js
subb
and
add
loope
inc
jmp
or
cmpsb
cld
xor
loop
fildl
fnsave
cmp
pop
addl
out
int
or
jmp
inc
in
mov
sbb
inc
adc
inc
je
loop
push
adc
and
pop
push
push
std
fildll
dec
push
push
xor
xor
roll
add
sub
mov
mov
jnp
mov
mov
jle
hlt
gs
push
or
jbe
cmc
add
aaa
add
mov
outsl
and
cmp
pusha
and
and
jb
mov
gs
adc
mov
adc
xor
test
inc
cmpsl
mov
pushf
cmp
add
movsb
inc
movsl
cmc
sbb
dec
ljmp
xor
or
inc
sbbb
aaa
fadds
stos
push
jno
jne
hlt
jg
jnp
ds
jnp
cmp
movsl
add
call
xchg
jecxz
adc
add
jmp
xor
cmp
adc
cmp
push
or
xchg
aad
mov
lea
inc
adc
add
mov
scas
dec
cmp
sti
add
iret
rclb
jo
jg
bnd
aad
dec
jp
ds
xor
adc
call
add
divb
mov
rolb
and
mov
repnz
rorb
rolb
andb
lret
rolb
add
roll
test
jl
and
inc
decl
adc
les
add
xorb
icebp
add
mov
sub
dec
incl
jo
inc
or
mov
ret
mull
push
and
decl
push
test
add
lock
mov
mov
add
pop
add
xor
ss
ljmp
add
lret
dec
jo
rorb
add
rorb
push
or
add
push
fcoml
arpl
call
in
sbbl
sub
lahf
sti
adc
ss
je
mov
adcb
mov
scas
and
push
divb
movsb
or
add
mov
mov
stos
dec
mov
jo
movsl
inc
outsl
cmpsb
sbb
movsl
push
pop
fnstenv
dec
and
jge
push
adc
in
inc
and
xchg
push
and
jle
rorb
push
out
es
xchg
push
loop
std
adc
xchg
adc
jge
shl
popa
xchg
daa
add
jnp
xchg
hlt
sbb
std
xor
add
addb
add
push
aaa
adc
sub
mov
or
stc
icebp
outsl
push
lock
popa
pop
mov
mov
es
lock
jb
cmp
sub
or
dec
xor
and
mov
pop
push
arpl
or
mov
rcr
push
out
test
xchg
lods
sbb
pushf
es
pushl
repnz
push
sbb
int
addl
repnz
push
adc
adc
addl
xorb
sbb
jle
push
adcb
sub
inc
sub
dec
adc
call
pusha
rcrl
icebp
xchg
and
push
push
adc
add
push
and
insb
insb
pushf
lods
mov
sub
mov
or
mov
add
push
mov
cmp
dec
cld
sub
cmp
sbb
js
mov
shlb
ljmp
popa
sub
sub
and
mov
icebp
pop
pop
cltd
movsb
aaa
bound
lcall
shll
lock
adc
xor
add
pusha
jg,pn
mov
ret
xor
push
jp
les
jle
dec
std
xchg
push
xchg
cs
lods
adc
es
xor
xor
lds
push
addb
lcall
mov
push
bound
incl
cs
sub
sub
aaa
movb
mov
jl
hlt
push
mov
mov
cmp
incl
scas
add
jl
shlb
pop
jle
sub
cs
or
add
cmp
loope
adc
fdivrs
movsl
les
xor
or
mov
add
sbb
lret
aad
xchg
cli
ficompl
sub
adc
sti
mov
pop
test
sar
add
jnp
stc
inc
and
xchg
mov
cli
les
push
push
cmp
adc
sbb
jle
xor
notb
pop
pusha
xor
repnz
fmuls
outsb
cli
pop
sti
pushf
lock
jp
cmp
add
cmp
jae
push
xor
test
ficomps
sbb
aad
xchg
xor
lahf
nop
mov
fisttpl
pop
cmc
jno
lahf
cwtl
nop
cltd
inc
repnz
dec
add
mov
cs
dec
inc
add
jle
pushf
fs
cltd
fwait
xor
filds
push
cmpsb
dec
enter
push
inc
pop
js
das
push
jno
rorb
or
icebp
jno
and
dec
mov
rcrb
hlt
in
ds
in
scas
add
icebp
loop
jbe
push
xchg
mov
adc
js
lret
in
sub
dec
enter
dec
push
add
ret
push
movsb
inc
aam
sub
xor
jmp
lahf
pop
jg
dec
inc
fisubrs
mov
cli
mov
ja
lock
popa
mov
push
daa
add
inc
mov
lods
jecxz
add
cmpsb
sahf
cmc
add
lcall
daa
int
fidivrl
inc
fdiv
mov
mov
les
mov
jge
mov
idiv
pop
out
add
add
jl
cmc
mov
hlt
sub
mov
ss
test
out
lock
lock
pop
cmc
das
inc
sbb
jo
or
loop
dec
sbb
inc
lock
mov
push
das
pop
ficoml
movsl
sbbb
ret
mov
out
adc
mov
mov
xor
cmc
fucomi
jg
cmp
ljmp
adc
and
jne
add
inc
pop
cmpsb
pop
add
xchg
mov
mov
or
mov
outsl
xor
mov
hlt
adc
std
aaa
jbe
ljmp
jbe
loop
arpl
daa
jne
push
fs
loopne
mov
mov
and
push
ljmp
and
mov
and
adc
aaa
inc
clc
pop
jge
fnstsw
mov
aaa
push
mov
mov
and
or
test
push
jo
shrb
mov
std
fcomps
xor
fiaddl
into
push
inc
mov
adc
push
aad
dec
or
mov
call
dec
dec
sbb
add
sub
das
inc
jns
cmp
jle
fisubrs
sbb
test
xor
jnp
cmc
xchg
cld
sub
mov
nop
or
add
xchg
ds
add
push
add
add
mov
jl
hlt
add
push
pop
add
popa
shlb
hlt
shlb
push
out
mov
adc
and
or
cmp
push
mov
add
jae
call
mov
nop
mov
les
fimull
jbe
xor
clc
outsl
outsl
mov
xor
cli
jne
pop
stc
mov
hlt
add
and
add
mov
into
jne
add
stos
push
mov
aam
fmuls
and
jp
dec
mov
cmc
mov
sub
mov
mov
and
adc
jnp
addb
pop
divb
jp
mov
addb
dec
daa
lock
mov
push
pop
rorb
add
fisubrl
mov
outsl
ljmp
test
in
addl
andb
das
les
push
xorb
xchg
adc
mov
mov
mov
jg
jns
push
andl
add
cld
cmp
jbe
mov
xchg
xchg
push
mov
add
ret
gs
test
jge
push
andb
jp
data16
mov
push
shlb
pusha
bound
inc
pusha
adc
mov
imul
arpl
mov
jb
loope
and
mov
xor
add
cwtl
push
xchg
inc
ljmp
push
loopne
mov
fs
arpl
arpl
sahf
inc
out
and
std
cmp
incl
mov
movsb
mov
or
inc
unpckhps
arpl
sbb
roll
mov
push
ret
sub
xor
mov
popa
dec
int3
popa
sbb
push
or
loopne
rclb
inc
jl
adcb
push
js
test
incl
inc
fnsave
bound
inc
or
rolb
inc
scas
cmc
scas
pop
clc
mov
clc
call
cmp
mov
andb
into
add
add
pop
cwtl
lret
clc
mov
out
jp
push
inc
mov
in
add
add
mov
in
sahf
jg
add
repnz
adc
xor
mov
pop
addl
decb
adc
aas
int
push
jb
jmp
jne
push
jo
repnz
hlt
stc
jg
or
out
nop
sbb
mov
jp
jecxz
aam
xor
mov
std
sub
or
cli
pop
lods
lods
pusha
add
hlt
pop
aam
add
inc
dec
mov
subb
ja
incl
or
jns
or
lret
out
pusha
inc
adc
jns
jns
movsl
xchg
incb
or
sbb
sbb
cmp
xchg
mov
mov
adc
and
roll
loopne
roll
mov
add
adc
ret
adc
or
imul
adc
adc
fs
add
mov
mov
add
in
or
bnd
fsubl
fucomi
sbb
push
cmp
sbb
or
and
out
std
sbb
test
sahf
stc
je
loopne
int
test
and
popa
lods
dec
insb
mov
xorl
push
repz
jnp
xlat
lods
insl
clc
mov
mov
push
mov
add
mov
clc
aaa
std
mov
push
jbe
or
push
mov
and
xchg
pop
mov
add
jnp
rorb
xor
push
call
inc
shlb
inc
xor
sarl
dec
push
sub
jmp
addb
aas
fucomp
sub
or
adc
mov
add
ds
mov
ror
loopne
repz
mov
sbb
jge
fwait
test
outsl
loopne
inc
xchg
loope
sbb
sarl
add
into
out
adc
lret
pop
and
pop
jne
push
add
fbstp
and
cwtl
mov
ljmp
or
pusha
push
loopne
outsb
loop
adc
ja
clc
jg
arpl
add
fmull
mov
mov
inc
fsubr
inc
movsl
stos
pop
cmp
push
repz
push
sbb
xor
in
add
jg
or
lahf
cmc
aaa
call
shl
pushl
jnp
cmc
int
xchg
xchg
addb
adc
rorb
jo
mov
mov
add
add
out
mov
cmpsl
bnd
jno
add
sbb
movsb
push
jl
clflush
xorl
adc
or
lods
stc
insl
jnp
out
inc
pop
stos
jo
cmp
xchg
or
incl
sub
push
or
jnp
inc
fcomip
nop
push
mov
add
cmp
cli
add
cmp
dec
ss
xor
lock
or
jle
dec
xor
aaa
jmp
jl
push
jnp
bnd
dec
inc
data16
iret
mov
repnz
or
lahf
dec
xchg
dec
repnz
inc
push
inc
mov
and
cwtl
pusha
cmp
aad
ss
into
xchg
ss
or
and
sub
adc
xor
out
jle
lock
push
das
clc
aaa
cld
jo
lock
add
lret
jb
cmp
bound
xor
out
hlt
sbbb
sahf
int
subb
push
cmc
fldt
es
jo
loopne
imul
xor
mov
jg
sbbb
inc
add
add
out
mov
add
add
xchg
cmp
add
add
jbe
mov
push
bound
out
push
mov
jle
sbb
fstpt
sbb
adc
inc
aam
into
push
notb
pop
stc
inc
pop
cld
inc
push
dec
jg
push
ffree
push
jno
rolb
std
int3
mov
addb
mov
mov
sbb
add
fs
ret
add
mov
cli
incl
xorb
add
mov
movb
ret
in
outsl
bound
pop
loopne
push
in
adc
mov
add
jle
mov
pop
fwait
dec
mov
je
cmp
pop
out
rolb
loop
mov
mov
outsl
call
adc
push
enter
lds
in
js
jo
dec
pop
mov
rorl
pop
orl
call
loopne
add
and
aas
scas
push
inc
ret
push
ret
add
ljmp
lock
mov
inc
push
jge
mov
aaa
and
aaa
pop
adc
pop
notl
test
jge
mov
jo
call
add
movsb
clc
lds
jg
stos
int
xor
jg
or
jns
add
inc
out
cmc
jge
and
repnz
aaa
push
pushw
idivl
mov
or
cmp
aaa
mov
ja
stc
bound
xor
xor
inc
cmp
add
ss
mov
or
dec
in
nop
or
popl
and
sbb
or
cld
ljmp
icebp
mov
insb
test
adc
or
lcall
inc
mov
or
test
aas
mov
mov
shrl
outsl
xor
add
test
mov
incl
repnz
repnz
adc
dec
add
imul
pushl
inc
icebp
add
add
xchg
pop
inc
hlt
add
sbb
data16
out
push
adc
push
add
pop
jl
or
stos
mov
mov
push
jne
adc
add
out
mov
jo
cmpsb
jg
popa
push
push
aam
sti
sbb
xorb
and
rcl
lock
dec
subb
and
repz
fildll
or
ja
lds
mov
in
adc
sub
icebp
add
andb
aas
int
jae
bound
pop
xor
out
insb
mov
push
dec
add
mov
int3
aad
sbb
inc
repnz
jle
outsl
jg
cmpsb
xchg
lret
scas
push
adc
lock
jbe
sub
in
aaa
in
testb
add
je
ror
cld
xchg
jo
icebp
add
push
jb
mov
mov
dec
fistl
addb
je
pop
negb
adc
xchg
cmpsb
mov
xor
lret
int
in
fcmovu
mov
je
pop
addl
add
push
pop
sub
mov
cmp
mov
bound
mov
je
lock
fistpl
cld
xchg
add
adc
fs
mov
jo
mov
inc
add
insl
dec
add
mov
adc
xchg
pop
inc
or
stos
jg
mov
repnz
mov
repnz
ljmp
jnp
mov
movsb
add
mov
jge
repnz
xchg
lcall
inc
and
and
lret
adc
sbb
mov
enter
mov
loopne
mov
rolb
lock
xchg
add
and
push
cmc
xchg
inc
add
and
dec
adc
sub
xor
outsl
lods
stos
repz
rorb
add
mov
cld
stc
dec
je
mov
sar
nop
fldl
jae
jo
fistpll
adc
mov
or
cmp
fadds
jb
push
and
jg
add
andb
jo
cmc
stos
add
les
testb
jge,pn
pusha
jge
loopne,pt
xor
movsb
decl
lahf
dec
loop
dec
mov
or
leave
shlb
popf
sub
xorb
mov
pop
sarb
sbb
inc
int3
push
xchg
or
lock
mov
xchg
jo
adc
nop
inc
xor
or
addr16
std
adc
cmc
lods
xor
add
xor
adc
inc
mov
sub
enter
add
or
and
pop
sub
add
xor
loope
add
shlb
add
dec
pusha
mov
xor
icebp
mov
adc
jecxz
push
cmp
fs
jl
mov
jb
loop
or
clc
rcl
mov
aam
mov
sub
sub
sub
dec
stos
inc
sub
xor
idivb
or
arpl
rolb
dec
ljmp
into
add
jecxz
cld
add
into
mov
inc
stc
add
in
cmp
or
loope
and
adc
outsb
nop
movb
jl
hlt
inc
inc
loop
sbb
inc
testl
mov
js
cmc
sbb
loop
add
hlt
jne
add
dec
fs
cmpsb
decl
pop
xchg
movsb
sbb
add
mov
int3
int3
xchg
testb
add
add
and
inc
mov
xchg
mov
inc
shr
mov
aas
lcall
cli
out
sbb
orb
cmp
incl
test
imul
jns
mov
pusha
sbb
jb
or
stos
or
mov
mov
inc
push
rclb
in
jo
insb
push
fcmove
add
dec
sbb
add
clc
xorb
or
daa
pop
jns
rclb
inc
cld
mov
enter
adc
push
inc
pop
ret
mov
sarb
jb
push
cmp
stos
add
rorb
sbb
jae
pop
daa
test
mov
call
pop
sahf
rorl
fnsave
testl
std
ret
xor
pop
push
les
adcb
test
xchg
jl
les
push
adc
or
sbb
xor
push
xor
outsl
fwait
incl
xor
add
xor
inc
or
and
rorb
inc
or
jno
in
xor
jl
add
mov
aam
pushw
pop
jg
mov
pop
inc
xchg
add
add
stos
jae
lahf
lds
dec
sub
lahf
mov
lds
inc
or
mov
stos
std
aaa
add
aaa
mov
push
xchg
ret
push
lcall
out
addr16
push
xchg
and
mov
into
push
or
jnp
jae
in
cmp
sarl
push
subb
subb
data16
jg
rorb
cmp
mov
push
mov
push
int
test
loop
jmp
arpl
rolb
push
daa
add
loopne
cmp
dec
or
in
mov
int3
push
neg
inc
or
add
push
push
adc
add
sub
out
fstpt
add
std
imul
pop
add
loopne
popa
popf
pushl
hlt
ret
jo
mov
xchg
loopne
pop
sub
dec
mov
add
outsl
adc
push
test
popa
pusha
cltd
adc
scas
or
les
jge
sub
mov
push
jbe
enter
dec
into
test
mov
add
or
movsl
add
push
lock
cmp
data16
dec
in
scas
push
dec
repnz
ja
loop
jg
push
mov
movsb
dec
adc
stos
and
incb
inc
push
mov
roll
js
add
xor
jne
cmp
push
and
add
lahf
xor
sbb
mov
mov
mov
jne
dec
push
mov
jle
sub
ljmp
int
add
and
vmlaunch
push
fstp
pop
mov
ljmp
mov
mov
mov
push
or
mov
or
mov
pop
sub
hlt
jo
jnp
jno
es
add
ds
cs
ss
mov
xchg
ss
loopne
sbb
aaa
je
loopne
stos
mov
orb
sar
js
push
lret
xchg
lock
sti
nop
adc
or
jnp
mov
xchg
sar
das
shrb
pop
add
jbe
cld
adcl
sbb
or
or
and
or
aam
or
insb
lds
cld
jbe
add
jb
popa
cmp
cmp
ss
sub
jg
jmp
push
push
add
lret
fistps
add
loop
rorl
and
push
and
stc
add
dec
lock
cld
mov
pop
or
adc
cwtl
pop
jo
and
jb
add
or
ljmp
add
xor
je
ja
jmp
mov
arpl
jp
cmp
xor
mov
inc
test
pop
mov
movsb
das
push
lock
xor
rol
out
jbe
jne
movl
out
mov
in
mov
jb
pop
testb
and
and
or
jnp
rolb
dec
dec
pusha
push
push
sahf
inc
dec
sar
mov
add
test
dec
add
inc
add
inc
add
add
fcmovnb
dec
inc
sbb
mov
adc
fs
mov
mov
xor
adc
loopne
roll
jmp
xor
mov
mov
in
loop
xor
jge
add
cmp
dec
add
adcl
jmp
ss
xor
adc
cmc
int3
mov
mov
shlb
lret
inc
push
ljmp
mov
ds
jg
frstor
insb
jge
iret
xchg
xchg
xor
adc
push
aad
or
pop
int3
xchg
jmp
jnp
clc
lds
das
aam
inc
rorl
add
shlb
lock
sub
mov
pusha
xor
rcrb
ljmp
movsb
or
xorl
mov
call
pop
xchg
and
mov
stos
mov
cmp
mov
jl
xor
push
mov
mov
es
fst
jg
ss
add
inc
push
fdivrs
incl
jg
cs
or
or
inc
jbe
sbb
stc
add
lods
cld
pop
pusha
mov
aaa
shlb
cmp
mov
xor
aam
inc
mov
pop
bound
jle
in
lods
rorl
pop
sti
daa
push
jge
add
bound
cmp
jbe
add
stc
jnp
xorl
fmull
movsb
jno
mov
out
aaa
stos
push
adc
mov
pop
adc
mov
add
mov
sbb
decl
mov
xor
add
sub
sub
sbb
mov
xor
insl
and
jbe
ss
xor
pop
ss
loopne
xor
in
lods
sub
cs
pop
sub
fs
xor
pushl
dec
lea
mov
adc
repz
ljmp
cmc
adc
and
push
push
and
lcall
gs
or
repnz
jp
dec
cmc
cmpb
rorb
fdivrs
xor
xchg
mov
testb
cmp
pop
cmpb
pop
mov
das
xor
pop
icebp
adc
stos
out
mov
mov
out
cmc
and
shll
test
mov
mov
push
pop
jae
std
loope
xor
inc
add
cmc
add
or
jbe
into
mov
mov
lock
subb
test
jbe
add
adc
pushf
hlt
rolb
fwait
mov
push
mov
cld
inc
jb
and
mov
stos
dec
add
xor
clc
cmp
add
rolb
jbe
adc
das
adc
xor
ret
or
pop
add
nop
add
and
imull
jnp
aam
hlt
mov
pop
inc
stos
pusha
or
sub
cmc
xor
es
lcall
mov
jmp
push
adcl
or
ljmp
jg
inc
xchg
or
mov
push
pop
data16
incl
jo
mov
pop
ret
pop
mov
popf
adc
ljmp
int3
test
sub
lock
pop
insb
sbb
add
push
xor
xor
decl
adc
loopne
in
roll
cmp
add
push
mov
pop
ret
das
mov
and
add
or
sub
loopne
ja
add
les
or
jmp
cli
and
mov
popa
dec
icebp
ds
dec
adc
ljmp
daa
sbb
in
sub
and
pop
sbbb
mov
aam
jge
adc
call
hlt
jg
xchg
mov
dec
decl
nop
or
and
inc
pop
mov
xchg
inc
rclb
add
sub
or
inc
pop
add
mov
aaa
jl
cmp
loop
loop
call
pop
loopne
rolb
out
je
push
jnp
bnd
cwtl
or
sub
xchg
pop
aas
add
cmp
scas
mov
adcl
pop
rolb
arpl
jp
mov
fisttpl
add
enter
mov
data16
inc
adc
add
cmp
arpl
add
icebp
mov
xor
xor
mov
mov
lock
bswap
addb
add
dec
mov
jg
out
add
mov
repnz
pop
mov
pop
push
or
jl
xorb
add
dec
dec
imul
movsl
or
pop
lock
add
pop
aaa
sbb
cwtl
xchg
inc
pop
iret
mov
adc
cmp
add
jle
adc
iret
out
ss
and
adcl
shlb
jg
sub
cmp
out
shlb
cmpsb
es
mov
add
andb
popa
and
inc
xor
adc
pop
and
mov
add
cmc
decb
mov
ds
mov
pushf
mov
es
es
lcall
cld
incl
jo
mov
inc
call
jnp
add
pop
add
ljmp
lods
scas
divb
lcall
pushf
or
jae
sbb
decb
jmp
inc
xchg
sub
shlb
xor
nop
in
ljmp
mov
xchg
in
adc
jne
or
mov
adc
jg
xorl
ret
mov
mov
mov
sub
adc
lret
out
inc
cmp
jmp
inc
sub
pop
mov
bound
add
subl
and
orb
lock
test
inc
inc
and
inc
fsubs
jge
call
add
cmp
or
call
adc
cmp
mov
or
push
xor
ret
call
out
loop
jp
adcb
shll
xor
or
inc
cmp
sub
or
cmp
mov
jnp
pop
ud0
addl
sub
cmpb
loopne
out
sbbb
adc
andb
orb
sub
addb
loopne
stos
or
pusha
xor
jg
imul
pop
or
or
sbb
or
stos
jmp
sti
push
cld
or
and
in
push
cmp
and
jns
pusha
dec
inc
jbe
lret
adc
stos
jecxz
fs
push
sbb
shrb
adc
pop
pop
cmc
mov
call
pop
or
fisubrs
and
cli
movsl
add
inc
add
add
sub
movsl
mov
bound
and
inc
popw
dec
fs
cmp
mov
jne
pcmpgtb
add
pushl
loopne
cmp
and
bound
and
shlb
pusha
adc
mov
sti
add
ficoms
mov
movsb
and
mov
add
add
jecxz
mov
stc
jns
sbb
mov
enter
inc
push
and
push
test
fildll
shll
pop
adc
shrb
dec
sub
cs
pop
push
lret
ficoms
add
dec
add
pop
decl
or
sbb
sbb
add
or
jmp
insl
and
sbb
andb
fidivrs
mov
and
mov
and
test
sar
filds
enter
mov
mov
mov
push
adc
cmc
mov
or
xor
mov
push
insl
lods
mov
mov
imul
inc
jne
jge
inc
cmp
cmpsb
jb
jo
mov
pop
insb
orb
xchg
movsl
and
arpl
ljmp
xchg
inc
add
push
jmp
or
lcall
add
xorl
add
inc
loope
add
adcb
mov
cmp
mov
ljmp
sub
sub
add
jg
std
into
sbb
aas
inc
outsb
add
jne
or
mov
psubw
jno
mov
push
sbb
push
jne
sub
and
inc
notb
mov
repz
rolb
lret
mov
xchg
inc
push
xchg
mov
jae
pop
in
sub
push
into
push
outsl
xor
mov
fdivs
insl
aam
test
lods
push
jle
xchg
cmpsl
mov
sbb
pop
adc
add
xchg
ret
mov
xchg
mov
test
adc
imulb
shll
leave
hlt
add
je
lock
jmp
ret
repnz
xor
mov
inc
adc
mov
mov
jo
outsl
dec
xor
and
pop
fimull
imul
xchg
int3
data16
push
xchg
push
adc
sbb
push
adc
dec
imul
push
push
mov
sbb
lods
fst
cld
sbb
add
inc
cmp
adc
cmp
adc
adc
sbb
add
mov
inc
mov
incl
jo
or
add
adc
adc
int
lahf
sbb
sar
inc
mov
dec
popa
pop
rolb
cs
cmpsl
imul
mov
add
xor
fwait
lret
mov
mov
sub
outsl
add
mov
and
mov
adc
xchg
adc
fistpll
jno
add
fs
push
sub
push
stos
lock
push
add
or
sarb
inc
in
push
in
dec
loop
fists
adc
and
mov
inc
adc
repnz
add
dec
ja
add
nop
test
in
add
add
xlat
and
dec
mov
inc
and
xchg
adc
mov
nop
xchg
mov
inc
adc
inc
mov
stos
pusha
xchg
add
add
add
mov
add
add
add
pop
push
add
mov
imul
test
dec
lock
jl
cmc
mov
mov
pop
outsl
mov
xor
orb
push
push
jo
push
add
hlt
add
int
loop
mov
cmc
add
add
jo
inc
ret
jbe
ljmp
repnz
jns
pop
push
push
adc
popa
jnp
loop
push
mov
add
add
in
movb
cmpl
mov
outsb
ds
fisttps
push
nop
jge
aas
cmc
and
inc
rcrb
mov
push
xor
adc
rolb
cmp
loopne
pop
loopne
sbbl
pusha
fwait
or
jb
jno
daa
outsb
dec
pop
shrl
mov
ljmp
rorb
push
fisttps
pusha
scas
cmp
mov
fucomi
push
xor
inc
adc
add
mov
add
mov
add
mov
push
adc
or
rcrb
push
push
dec
int3
mov
mov
and
or
inc
xor
fadds
pushw
push
into
inc
adc
pop
aam
popf
or
cwtl
mov
jge
jg
ds
hlt
in
cmp
and
mov
add
out
dec
in
add
cmp
mov
cmc
mov
push
push
jnp
out
pop
iret
add
pop
insb
pop
loopne,pt
out
cmc
cmp
xorb
mov
and
xlat
jb
lcall
inc
sbb
clc
sbb
aaa
and
pause
pop
lock
push
adc
or
push
push
xchg
push
add
imul
loope
lcall
push
xor
les
lcall
or
xchg
lea
jg
test
icebp
icebp
adc
stc
nop
add
cli
mov
mov
mov
js
rcrb
push
js
xchg
add
not
adc
jg
shl
push
jg
dec
inc
push
inc
sub
outsb
movsb
call
inc
and
pusha
jl
jmp
or
pop
in
lock
outsl
lcall
loop
or
aaa
cmp
push
loope
add
and
xchg
das
xor
hlt
inc
jge
aad
xchg
mov
and
stos
jl
or
xchg
push
jle
or
add
cmpb
sub
jae
je
cld
mov
data16
mov
mov
dec
into
lret
or
or
push
ret
cmp
and
jle
jnp
pop
jle
mov
xchg
dec
inc
pushf
cld
mov
pushf
sti
adc
add
pop
adc
inc
jae
ss
add
out
clc
sti
divb
or
xchg
icebp
stos
push
sbb
adc
mov
out
lock
pushf
cmc
mov
sbbb
fnsave
leave
jmp
sub
add
jnp
negl
decl
cmc
jge
xchg
mov
clc
adc
and
mov
cmp
and
stos
repnz
inc
mov
add
add
inc
or
mov
lcall
rolb
call
int
ljmp
and
jne
pop
insb
mov
sub
or
add
inc
sahf
mov
es
mov
push
lcall
out
adc
subl
inc
sbb
sbbl
or
add
ja,pt
mov
add
and
sarl
aam
orb
push
orb
adc
loopne
sub
add
add
dec
orb
add
mov
shr
adc
sbb
add
or
xchg
loope
mov
xchg
inc
or
out
mov
or
jg
cli
fnstsw
mov
mov
add
sbb
push
dec
clc
fildll
jp
stos
add
lock
es
dec
sbb
jp
inc
loope
jnp
sbb
or
or
frstor
lds
mov
mov
fstpl
or
popa
cld
dec
push
sub
jae
add
loop
dec
mov
jl
test
lock
stos
jbe
add
and
testb
mov
iret
add
ret
sbb
aaa
idivl
cmpsb
xchg
into
dec
insb
mov
inc
add
xchg
adc
pop
xor
add
dec
pop
sbb
inc
pop
pop
test
jae
add
jb
push
jmp
mov
add
ss
xor
int
push
addb
ss
pusha
test
adc
dec
into
add
andb
inc
mov
rcrl
jle
arpl
lods
addl
adc
fstl
add
or
or
int
test
incl
into
out
out
or
pushf
loop
subl
or
incl
push
data16
shlb
sti
sbbl
xor
add
int
imul
pushl
cld
xor
adc
inc
xchg
out
cli
mov
iret
mov
or
pop
add
rorl
lret
push
ss
pusha
movsl
add
sbb
fdivrl
orb
mov
inc
add
sub
jne
addb
and
mov
cmpsb
jmp
test
sbb
xchg
loopne
lock
add
orl
stos
mov
jge
fidivl
mov
adc
push
mov
faddl
sub
sbb
pop
jl
data16
jg
or
xchg
jp
mov
adc
repnz
cmp
cmpsb
mov
lock
cmp
adc
in
sbb
call
and
adc
jo
dec
fbld
loopne
addb
loope
xchg
js
inc
add
out
lea
sbbb
mov
mov
test
cmp
imul
jbe
das
or
mov
adc
popa
jbe
fs
jmp
adc
cs
cltd
ret
cmc
inc
cltd
add
jl
push
mov
xchg
adc
jg
mov
pop
mov
inc
arpl
stos
push
jmp
jbe
push
aam
ret
mov
sub
inc
addr16
addr16
stos
in
repnz
push
jne
jl
lock
inc
xor
mov
adcb
dec
loop
data16
cli
or
fiaddl
jl
out
lret
stos
scas
jbe
in
and
push
and
pop
inc
subb
adc
cmp
jp
hlt
stos
lcall
test
mov
or
mov
or
or
je
sarb
mov
mov
or
mov
mov
sbb
inc
push
adc
jge
rcrl
adc
mov
aas
dec
dec
iret
add
mov
ret
xchg
adc
cli
loopne
cli
pop
xchg
repnz
sbb
and
or
mov
add
mov
data16
loopne
pop
push
clc
cmpsl
adc
add
test
pushf
or
in
cmp
std
add
or
mov
add
nop
aam
mov
or
push
push
adc
xor
mov
sahf
dec
push
pushf
push
leave
fs
or
push
add
dec
mov
rcrb
pop
mov
and
push
jg
push
and
jb
imul
cmp
addl
adc
add
dec
bound
push
xor
or
push
out
sub
mov
jecxz
add
push
push
pop
insb
fdivs
push
adc
cld
cs
je
adc
jnp
inc
decb
push
add
hlt
push
pop
dec
push
cs
add
daa
inc
jp
loopne
pop
cs
es
rorl
loopne
and
mov
adc
mov
pop
imul
ja
dec
add
and
sbb
mov
mov
bound
loopne
and
dec
add
lods
xchg
push
shrl
push
xor
fs
push
cmp
push
mov
aaa
xor
add
adc
sub
adc
dec
sahf
popf
rcrb
loope
adc
test
sub
or
inc
push
push
sbb
test
idivb
test
jle
mov
popa
sub
pushaw
push
jg
stos
push
cs
loopne
out
and
add
add
sbb
adc
and
aaa
std
adc
shlb
imulb
mov
mov
movsl
aaa
cwtl
jge
add
ficoms
dec
and
mov
add
add
mov
jnp
repnz
push
or
dec
xchg
jmp
mov
stos
add
ds
test
fs
and
xchg
dec
stos
in
data16
orb
orl
pushf
add
data16
mov
data16
and
adc
mov
roll
mov
pop
sub
jge
decl
mov
or
dec
lcall
pop
cmc
sbb
adc
sub
fsubrs
and
or
dec
jl
and
adc
test
rcrb
cmpsb
mov
aaa
cmc
xchg
popf
pop
lcall
mov
fcomi
pop
cld
in
push
gs
sub
fwait
and
icebp
movsl
aam
mov
xor
sbb
ja
mulb
or
jl
sbb
arpl
push
std
dec
mov
inc
loopne
lcall
fwait
and
and
repz
mov
mov
pop
lcall
jne
add
sti
jp
ret
sahf
mov
fildl
mov
adc
std
sub
std
fildl
xor
mov
jbe
lea
mov
mov
inc
testb
xor
out
pushf
xchg
sti
xor
call
adc
and
lea
loop
xor
jge
lahf
push
popa
xor
add
in
outsl
inc
cmc
mov
xor
jle
push
mov
and
push
or
outsl
aas
or
jno
add
xlat
pusha
pop
ret
es
xor
ficompl
mul
push
insl
add
inc
cmp
ret
inc
jne
xchg
cs
movsl
adc
cmp
ja
push
fisubs
add
fidivs
push
push
in
mov
adc
das
inc
movsl
sub
mov
add
pop
add
cmp
mov
add
jge
int
mov
sub
movsl
pushf
lock
xor
lods
mov
jnp
cmc
and
xchg
cli
push
addl
sarb
adc
test
stos
cli
xor
cli
out
clc
cmpsb
xchg
mov
enter
jnp
dec
shlb
iret
add
outsb
outsb
add
ss
aaa
mov
and
pop
mov
jb
or
ss
or
dec
cli
filds
adc
pop
mov
mov
inc
and
or
movsl
cmpsb
push
xor
inc
icebp
outsl
pop
scas
adc
xchg
mov
dec
out
adc
or
pop
lcall
xchg
rolb
loop
lea
mov
inc
add
or
mov
adc
scas
xor
pop
mov
push
ret
popa
and
loopne
add
insb
pusha
add
cmp
rolb
pusha
jp
mov
inc
cwtl
rol
ja
push
push
add
add
das
and
mov
mov
aad
dec
int
clc
xor
add
mov
sub
andb
es
or
mov
jne
inc
cld
outsl
jecxz
add
cld
inc
push
jno
out
bound
movsb
cli
sahf
subb
incl
sahf
adc
int3
push
fidivs
mov
inc
push
test
mov
xor
shlb
add
cmpsb
xchg
add
mov
aad
cmp
push
aaa
cld
pop
fcoms
jb
loop
and
cmpsl
movsl
dec
adc
iret
jmp
movsl
andb
inc
movsl
push
pushf
xchg
movsb
inc
jg
idivl
sub
mov
mov
pop
cmc
fistpll
push
dec
dec
icebp
sbb
pusha
mov
push
adc
cmovle
dec
inc
add
lret
outsl
and
mov
push
dec
sub
sbb
mov
mov
add
push
and
data16
mov
mov
and
in
jnp
and
jne
or
dec
repnz
jge
jnp
push
ds
jo
loope
or
movsb
clc
mov
jge
and
js
mov
popl
addb
lcall
ret
bound
pop
push
mov
jno
push
nop
adc
clc
add
push
hlt
add
aas
lock
mov
aaa
adc
mov
inc
or
test
insl
xchg
jbe
and
repz
sbb
repnz
cmc
movsl
dec
scas
add
nop
jne
incl
push
imulb
pop
es
dec
add
repz
aas
sbb
mov
ds
add
inc
xor
sbb
adcb
mov
sub
jg
xor
cmpsl
ljmp
mov
lcall
aad
sbb
pop
mov
xor
push
sbb
pop
and
jge
nop
iret
mov
rcr
jbe
sub
inc
add
cmp
incl
cmp
hlt
adc
push
je
popf
call
inc
or
andb
adc
cs
daa
movsl
jle
inc
shl
mov
out
bound
bound
inc
inc
test
and
clc
inc
adc
cmpsb
dec
jo
loop
sbb
nop
lcall
dec
stc
negl
in
add
xor
sbb
cmp
xor
call
in
call
xor
inc
mov
mov
icebp
add
push
jl
mov
xor
xchg
mov
dec
nop
fcmovnb
fildl
push
cmp
add
jge
mov
and
rclb
pusha
lods
xor
in
pop
test
push
loop
add
lea
outsl
rclb
push
into
jmp
rolb
js
xor
mov
add
imul
fsubrl
push
add
push
cmpsb
or
jb
and
jg
mov
push
add
xchg
pushf
enter
xor
leave
xchg
insb
adc
out
inc
dec
adc
jge
pushf
ljmp
add
inc
push
add
adc
out
push
or
mov
movsl
nop
add
mov
mov
jl
adc
push
nop
ret
mov
mov
inc
mov
orb
mov
mov
add
aas
sbbb
add
nop
pop
dec
call
sbbb
data16
loope
stos
rorb
mov
pusha
push
mov
ljmp
movhps
std
imulb
push
lahf
rclb
dec
dec
icebp
ss
mov
je
xor
inc
pusha
mov
das
jo
movsb
mov
adc
mov
mov
dec
mov
ljmp
das
xor
mov
add
setnp
or
repnz
clc
pop
lret
mov
mov
int
add
or
mov
or
cmpb
inc
pushf
repz
push
mov
push
mov
sub
mov
mov
push
mov
adc
loopne
out
adcl
and
mov
out
adc
lods
rcrb
cld
lcall
mov
add
pop
test
mov
clc
jl
sub
scas
lods
clc
dec
icebp
jle
mov
or
fistpl
jae
icebp
mov
add
jbe
adc
mov
hlt
jg
mov
cmc
push
or
popa
xor
add
orb
jl
sub
xadd
lods
outsb
jecxz
addl
std
mov
int3
or
mov
loopne
inc
std
xor
hlt
mov
sbb
not
mov
lock
xor
aas
lock
mov
fwait
and
xchg
push
or
mov
int
sub
push
or
push
pop
sub
sbb
sub
inc
cmp
pop
in
jne
aad
inc
add
sbb
push
testb
cmpsb
dec
adc
imul
fbld
mov
mov
jno
mull
pop
add
fs
nop
mov
fcomip
loope
mov
ds
xlat
or
ljmp
movl
adcb
inc
hlt
sahf
addb
rolb
inc
add
add
mov
addr16
xchg
adcb
and
fs
cmp
add
xor
rorb
inc
test
dec
testl
nop
xor
mov
sbb
loopne
cltd
popa
mov
add
pushf
cmc
in
mov
dec
cs
jbe
pop
cmpl
pop
imul
dec
push
push
jl
insb
adc
inc
dec
xchg
int3
ret
dec
pushf
iret
lods
xchg
enter
fisttps
add
xor
enter
add
sahf
inc
add
in
add
movsb
lock
mov
jl
loope
and
adc
in
jp
ljmp
dec
mov
and
mov
cli
hlt
orb
xor
jl
decb
add
push
clc
out
mov
popa
nop
xor
insl
push
sbb
int3
cmp
sub
enter
xor
add
push
es
mov
icebp
xor
add
pop
add
dec
xor
loop
add
push
add
pop
lahf
mov
jb
inc
hlt
or
sub
ret
rcrb
je
pop
xor
and
enter
int
sbb
xor
pop
mov
cli
repnz
add
dec
jne
jg
adc
jge
mov
pop
cmpl
clc
lds
xchg
add
adc
pop
cli
hlt
mov
test
or
scas
cmp
orb
lret
add
scas
add
pushf
add
jnp
xor
push
inc
jb
dec
clc
or
repnz
push
xchg
test
out
iret
or
lock
push
fsubs
imul
mov
push
mov
andb
inc
mov
pushf
pop
sub
adcb
or
jmp
inc
xorb
sbb
or
orb
outsb
subb
andb
cmp
orb
pop
fistpll
es
add
cli
add
shlb
sub
sub
sar
call
inc
addl
xchg
xchg
test
and
or
inc
and
shlb
mov
fadds
and
fisttpl
sbb
cld
sub
or
cmc
inc
xor
andl
jle
xchg
xor
cmpsb
mov
movsl
inc
cmp
loopne
push
mov
cmp
mov
out
lds
dec
pop
or
mov
ret
movb
or
push
hlt
and
jle
mov
fwait
or
add
pop
cmpsb
pusha
aaa
mov
stc
je
or
mov
mov
pop
rolb
cmpsl
dec
push
xor
xor
jl
add
bound
xchg
pusha
outsb
js
add
mov
int
into
rolb
or
outsl
in
aaa
stos
call
add
add
jae
aaa
sbbb
add
andb
nop
test
or
cli
out
or
mov
mov
cld
mov
or
inc
or
ljmp
fdivs
xor
pusha
sbb
roll
push
addl
jg
inc
cmp
movsl
clc
inc
add
sub
add
cmp
subb
movsl
mov
cli
adc
mov
mov
inc
aaa
xor
cmp
flds
cmc
nop
orb
test
mov
rcr
movsb
dec
sti
lcall
pop
push
push
sahf
mov
ret
enter
fwait
or
sbb
test
popa
sub
std
aaa
mov
inc
movsb
inc
call
pop
mov
dec
shlb
push
push
sbb
cmp
pop
mov
out
xor
add
and
mov
and
lret
and
mov
mov
add
pop
jmp
mov
or
std
cwtl
and
jge
sub
movsl
fst
sbb
pop
rolb
in
jmp
stos
mov
pop
inc
add
or
sarl
loop
jmp
and
addb
xchg
pop
xchg
add
sbb
push
test
jg
rorb
push
jmp
inc
rorl
xorl
sbb
push
lock
shll
rorb
push
inc
cli
divb
mov
fmul
and
es
sar
add
jl
lret
hlt
fidivs
daa
and
or
mov
adc
and
pop
or
push
lock
and
repnz
incb
or
ret
push
mov
jecxz
outsb
add
add
je
mov
push
das
and
outsb
sub
and
rorb
push
insb
mov
xorb
and
push
pop
pop
addb
push
push
ljmp
sbb
pop
lcall
and
or
mov
dec
xorb
sub
pop
sbbb
or
test
sub
fs
sti
aaa
inc
nop
push
sbbb
jne
adc
inc
int3
pusha
clc
fwait
andb
sbb
movsl
mov
popa
ds
int3
mov
lcall
repnz
push
add
dec
add
or
mov
cmp
outsb
cld
movsl
jp
push
faddl
add
aam
movsb
mov
and
jmp
mov
xor
mov
stos
inc
cmc
ds
cmp
cmp
icebp
push
push
movsb
add
mov
orl
xchg
stos
pushf
stos
scas
or
cld
das
sbb
addl
ret
sahf
adc
fstl
mov
inc
test
fdivl
clc
dec
jge
hlt
popa
add
add
shlb
push
add
call
iret
jae
and
and
addb
ret
mov
inc
xchg
add
or
popa
add
or
adc
pop
bound
xchg
aam
sbb
subl
sti
pushf
or
sbb
lock
leave
into
mov
jg
ljmp
xor
ret
test
cli
add
mov
add
sbb
rorl
repz
cmc
pushf
icebp
out
jbe
hlt
cs
mov
popa
pop
sbb
decl
mov
nop
sbb
lock
xor
cmpb
jo
adc
pusha
loop
xor
jle
dec
add
mov
lret
mov
mov
xor
repz
mov
jle
testl
cmp
or
es
mov
nop
jge
add
xchg
pop
cli
adc
and
add
jp
xchg
incl
mov
movsl
mov
sahf
ficoms
inc
push
add
push
mov
rol
scas
nop
add
and
and
mov
rcrb
push
xor
sar
dec
add
and
mov
add
xor
sar
das
int3
adc
mov
ds
push
jle
fdivrs
adcl
xchg
sti
clc
int
stos
add
mov
pusha
movl
dec
int
fisttps
add
repz
ja
add
loope
test
add
scas
pop
mov
sbbl
addb
add
inc
and
push
sbb
add
enter
pop
xor
add
add
xor
xor
fnstenv
add
add
out
dec
data16
sbb
inc
or
rorb
mov
add
cli
push
jg
xchg
mov
push
sub
sub
xor
pop
add
aam
jecxz,pt
push
add
push
add
decb
popa
add
addl
push
add
jg
cmp
add
and
push
call
les
inc
pshufw
pop
add
cmp
xchg
sbb
mov
cmpsb
out
add
cmp
sbb
or
inc
mov
mov
pop
cwtl
lcall
push
jbe
jnp
or
push
jnp
add
xor
sbb
jnp
inc
clc
xchg
add
stos
mov
sub
add
mov
rcrb
iret
les
mov
stos
inc
shlb
inc
sub
or
aaa
and
loope
add
es
andb
loopne
lea
mov
lret
sbb
out
add
add
fcomip
data16
jbe
imull
orl
pop
test
sbb
or
addb
cwtl
and
or
std
idiv
popa
add
movb
jb
pushf
testl
and
adc
mov
ret
les
inc
cmp
loopne
sub
lods
push
push
inc
add
test
test
ja
icebp
push
mov
outsl
mov
mov
cli
push
lea
add
pusha
push
fwait
pusha
add
nop
and
std
aaa
adc
sub
inc
inc
adc
call
add
add
cmp
mov
mov
loope
mov
push
jno
adc
push
clc
add
cli
mov
fdivr
xor
loopne
mov
insl
adc
jo
mov
sub
xorl
add
lock
mov
mov
lret
popl
or
js
add
int
add
sbb
mov
mov
sub
pop
rorb
xor
das
mov
mov
aaa
mov
mov
push
push
push
lret
add
popa
nop
or
outsl
nop
mov
xchg
or
mov
jg
or
mov
or
ss
cmp
gs
mov
or
fwait
test
inc
ja
or
aad
inc
push
call
subl
add
jge
sbb
xor
push
mov
xchg
insl
out
loopne
mov
cmp
in
into
cmp
test
xchg
and
call
push
sbb
xor
add
loope
out
clc
xor
lret
xor
and
lods
sub
push
push
add
shll
js
lock
push
stos
ja
mov
or
push
adc
xor
sub
out
cli
mov
mov
ret
sbb
mov
and
add
cmp
lock
fldt
or
sbb
jbe
movsl
add
hlt
sahf
lcall
daa
jp
stos
mov
out
lds
dec
xchg
mov
ror
adc
int
lcall
sbb
ret
push
xor
inc
push
push
push
lea
sbb
scas
add
pusha
loopne
cmc
nop
cli
scas
jg
dec
scas
lock
rolb
pushf
add
movsl
test
pushf
repnz
push
outsb
pop
rcrb
test
jecxz
movl
mov
rcrb
adc
sub
ljmp
or
mov
fdivp
xor
stos
mov
mov
aad
stc
pop
mov
ret
aam
aad
shrb
mov
adc
aam
incb
stos
adc
cli
rolb
jo
mov
adcb
fsubr
pop
pop
fistps
pop
jo
sahf
data16
adc
push
cmpsb
mov
inc
incl
aad
outsb
out
and
ret
cwtl
movsl
cld
test
aam
jg
push
xchg
push
movsb
xor
lcall
dec
dec
mov
push
int
jb
or
push
push
push
sarl
mov
mov
pop
pushf
jo
cmp
fcmovb
pop
push
inc
orl
jl
and
cmp
sub
lcall
es
nop
inc
in
and
enter
ds
hlt
add
pop
push
lds
push
addb
add
jb
adc
xchg
add
aad
add
jl
adc
mov
pusha
mov
add
add
and
push
cli
cli
lock
incb
adc
mov
add
int
or
bound
jge
ret
jne
cli
pop
cmpsb
test
push
mov
rorb
mov
in
test
push
test
and
add
loopne
cld
and
add
mov
add
add
ljmp
add
xchg
mov
mov
inc
jp
pusha
push
insb
call
mov
gs
lea
and
pop
dec
mov
add
add
nop
xchg
add
inc
ja
and
inc
outsl
pop
sti
aaa
xor
and
mov
pop
popf
jb
push
aaa
sbb
call
call
popf
xor
loope
jns
add
ja
fildl
xor
mov
pop
mov
adc
lcall
add
fwait
bound
ss
push
cmp
mov
stc
popa
fwait
jb
loope
push
xchg
adc
popa
out
mov
mov
das
add
mov
dec
int
jl
lock
addr16
ficompl
popf
and
add
test
xor
jne
mov
ljmp
xor
xlat
sahf
add
aaa
sbbb
push
repnz
push
flds
push
decl
xor
sub
sbbb
adcl
xchg
and
sbb
fcomip
add
xor
add
jne
pop
or
jae
sarl
adc
sbb
ljmp
mov
addr16
push
cs
stos
rcrb
xor
sub
cmpb
jno
push
sub
inc
jne
iret
and
xchg
pop
jnp
ficoms
std
aas
std
add
push
out
jnp
pop
add
dec
xchg
mov
hlt
pop
mov
jae
pop
mov
ret
ds
mov
out
inc
adc
lcall
xor
add
hlt
mov
sahf
jecxz
rclb
add
sub
inc
test
sar
inc
enter
add
subb
jmp
cld
xchg
sahf
cmp
ljmp
movsl
scas
jno
movsl
xor
dec
sbb
push
adc
jb
imul
push
stos
ds
cmc
or
int3
stos
les
jo
gs
inc
mov
pusha
arpl
jle
jp
int
cld
clc
add
incl
call
or
pop
sub
xor
and
mov
xor
mov
jb
les
std
xor
lods
popa
mov
sbb
mov
jge
xchg
push
mov
pop
xchg
add
sbb
scas
clc
ljmp
and
add
data16
pop
addl
negb
stos
lcall
add
mov
add
jno
sahf
shll
jbe
sahf
push
mov
imul
lock
push
movl
fs
int3
cmp
cmc
inc
data16
scas
xor
roll
test
lock
add
or
push
bound
push
sub
mov
mov
pop
push
shlb
or
fiadds
aaa
push
pushf
mov
icebp
ljmp
xor
add
pop
jmp
pop
push
fs
add
push
add
bound
or
and
push
ja
sbb
popa
jns
lods
add
mov
or
test
dec
pusha
mov
adc
or
cmp
es
mov
xchg
inc
or
std
aaa
adc
or
mov
pop
std
lret
sbb
push
fadds
ds
cs
add
adc
mov
incl
orl
cli
ja
pop
pop
mov
jae
add
andl
pop
rolb
mov
lcall
jmp
jnp
fs
enter
jge
pop
cli
pop
sbb
sbb
mov
lock
xchg
adc
icebp
xadd
adc
loop
hlt
jg
int
fmull
add
mov
add
sbb
fbld
and
or
inc
pusha
sub
adc
pusha
fbstp
push
or
mov
inc
add
sbb
mov
sbb
push
in
insb
or
aas
data16
out
test
cld
mov
movsl
push
jg
push
ret
push
movsl
in
push
add
and
repnz
pandn
aas
mov
jnp
jo
inc
jb
mov
mov
les
rolb
pop
or
mov
and
ret
and
add
add
and
out
divl
push
xor
hlt
add
mov
push
cmp
add
mov
rclb
rol
or
push
xor
sbb
cwtl
adc
ljmp
or
sti
and
sahf
rolb
pop
mov
add
sub
rcll
orl
fiaddl
cmpsb
or
and
loope
xor
sbb
add
addb
push
inc
mov
dec
mov
pusha
jp
cli
scas
cs
loop
jge
fmull
adc
scas
or
and
stos
push
call
out
push
adc
xchg
inc
imull
movsb
mov
pop
addl
out
mov
adc
adc
call
outsb
arpl
add
and
loopne
bound
rclb
pop
jecxz
push
jb
or
add
into
mov
pop
inc
rolb
lcall
mov
addl
sbb
movsl
or
adc
cld
ja
outsl
scas
adc
lret
loopne
mov
or
imul
sti
jecxz
inc
pusha
or
cmp
pop
icebp
call
enter
jmp
adcb
inc
fldl
push
push
imull
add
test
andb
or
ret
in
pop
fistpl
push
in
mov
jg
sbb
add
jne
clc
pusha
es
in
jg
mov
push
in
cmp
add
or
les
bound
jecxz
pushl
pushl
or
jl
pop
loopne
mov
scas
out
inc
and
lock
mov
lcall
sarb
fnsave
test
cmp
aas
xchg
mov
add
or
push
or
cmc
sub
stos
test
mov
add
mulb
fnsave
loop
or
fldt
add
and
test
adc
out
pop
imul
fcoms
fldt
lock
push
jbe
mov
or
sbb
subl
or
inc
push
add
incl
jo
shrb
iret
jo
pusha
add
adc
sub
or
cmp
js
cmc
out
push
fnstsw
push
cmp
adc
dec
ljmp
ss
roll
adc
pop
mov
or
adc
or
adcl
dec
leave
fsubrs
pop
add
xchg
test
divl
mov
sub
icebp
jno
decb
mov
pop
hlt
adc
xor
adc
int
push
mov
test
stc
mov
inc
xor
xor
push
mov
inc
ja
insl
adc
aam
mov
push
and
sub
sub
add
stos
ret
fwait
jle
jge
or
sub
jb
and
adc
nop
and
testl
mov
and
mulb
push
pop
insl
mov
dec
incl
scas
xchg
add
mov
or
out
fistpll
sbb
lock
lock
push
cmc
inc
push
insl
inc
cmp
repz
or
loopne
push
sbb
mov
adc
push
enter
jno
sbb
lret
mov
sbb
push
and
pop
test
lods
sub
add
pop
adc
and
and
dec
sbb
inc
mov
movsl
pop
and
ret
incl
sbb
pushl
loope
pushf
or
dec
xchg
push
push
or
cltd
push
sahf
in
lock
clc
incl
inc
mov
add
pop
xor
jo
test
rolb
pop
jo
test
and
add
lret
fisubs
mov
je
lock
je
stos
xor
mov
hlt
mov
dec
push
or
js
rolb
dec
fs
lcall
or
out
mov
jb
add
jl
jbe
sar
add
inc
add
mov
lock
nop
adc
test
andl
adc
jnp
pusha
mov
movsb
lock
inc
ds
or
int3
aas
sub
repz
xchg
push
add
or
loop
add
sub
nop
xchg
inc
lcall
xor
addb
lea
adcl
mov
cwtl
dec
add
ja
xor
mov
inc
sbb
xchg
mov
shll
ljmp
mov
pslld
pusha
pop
clc
mov
inc
repnz
sub
sbb
add
pusha
mov
repz
adc
aad
pop
lock
out
and
call
dec
jle
dec
adc
out
xchg
mov
int
mov
cltd
add
mov
movsb
adc
add
xor
insb
add
outsl
or
push
sbb
mov
mov
mov
mov
inc
sbb
push
and
mov
out
hlt
push
in
bound
push
or
inc
push
jnp
push
push
xchg
pop
pushf
adcb
or
nop
notb
icebp
ljmp
icebp
add
addr16
add
les
pop
inc
aad
int
loope
adc
mov
pop
insb
and
ss
fadds
dec
mov
aad
and
es
push
add
scas
fwait
jbe
adc
sub
and
test
in
mov
sar
cmpsl
sbb
adc
cmp
and
mov
jp
icebp
cmp
sarb
mov
jge
sbb
jg
mov
addb
cmpsl
inc
rolb
inc
jecxz
idivb
pop
cmpsb
mov
push
mov
jo
xchg
push
ret
nop
add
out
andb
rcrl
and
cmpsb
test
add
ret
ss
xor
sti
rol
dec
cli
adc
add
orb
fdivs
call
mov
dec
sahf
sarl
loope
sbb
xchg
add
pop
adcl
inc
lock
push
pop
lock
andl
cmp
sahf
rorl
mov
lods
std
jmp
pop
sahf
insl
add
push
ss
push
or
dec
dec
add
and
out
fcompl
add
decl
or
and
roll
aaa
mov
add
sub
mov
sbb
hlt
sub
loop
cld
incl
cmpsl
sahf
cld
mov
push
inc
adc
repz
cmp
mov
add
mov
sub
popa
and
jg
inc
and
mov
xor
dec
ljmp
push
outsb
adc
fnstcw
push
shl
xor
aad
mov
adc
jg
aad
popa
add
mov
aam
call
hlt
subps
shlb
add
push
cmpsl
arpl
inc
push
jno
aaa
mov
or
repnz
mov
shlb
mov
push
into
shll
or
and
mov
repnz
xorb
cmpl
mov
mov
push
int
and
xor
inc
sbbb
stc
xor
add
icebp
adc
movsl
ss
inc
add
int
mov
andl
cli
ss
mov
shl
xorb
lods
into
add
test
mov
xchg
movsl
inc
mov
incl
mov
cmp
xor
push
lock
cmp
test
lahf
add
and
push
sarb
das
or
fisubrs
mov
add
inc
movsl
or
add
add
xor
lcall
aad
or
cltd
adc
out
fadds
mov
rcrl
or
push
add
add
loop
push
sub
mov
loopne
and
dec
clc
jae
inc
insb
push
ss
dec
aam
push
dec
and
les
add
ja
push
mov
inc
test
addb
add
add
imul
sbb
decl
adc
subb
mov
adc
loop
adc
and
mov
mov
cli
jge
lret
mov
cwtl
clc
jle
loop
mov
lock
push
sbb
inc
test
sbb
insb
jg
adc
xchg
jge
pop
repz
addb
mov
xor
out
addl
and
adc
scas
add
adc
mov
jge
stc
xor
add
jne
cld
fs
xchg
push
dec
push
and
cmc
jg
inc
jp
inc
add
cli
cmc
ljmp
imull
mov
cld
ret
fstpl
push
xor
push
roll
test
jge
jne
incb
xorb
push
adc
pop
mov
inc
adc
movsl
fisubl
fdivs
mov
mov
cmc
stos
mov
rcrb
int
cmp
jge
cmc
add
jg
jle
mov
add
aaa
sbb
sbb
int3
mov
lods
add
scas
pushf
loop
outsb
add
inc
pusha
mov
and
mov
mov
sbb
adc
sub
add
adc
fcmovb
dec
ds
cmc
aaa
xor
push
out
mov
jle
xchg
rol
add
sub
jo
rorb
push
push
loopne
dec
push
aam
lret
movb
mov
add
sti
pop
or
add
sahf
push
rclb
or
mov
fbld
inc
push
into
test
push
dec
pusha
pop
adc
andb
sub
jl
add
mov
xor
jbe
mov
xchg
rorb
inc
lods
cmc
add
jne
adc
cwtl
cmc
pusha
mov
outsl
adc
cmpsb
cld
xchg
and
sub
add
cmp
push
ss
jge
add
icebp
rcrl
repnz
sbb
pop
mov
mov
mov
in
push
mov
add
sbb
sti
mov
outsl
jo
into
mov
rclb
sub
jge
ljmp
mov
and
inc
loop
nop
mov
ret
adc
lock
mov
std
int3
jnp
incb
mov
out
fiaddl
mov
out
add
mov
or
out
push
pushf
xor
ss
sub
icebp
adc
fs
cmp
adc
adc
jp
push
add
jg
pop
inc
mov
jg
cmp
push
dec
inc
int
mov
lods
mov
loop
xchg
inc
pop
jb
mov
incb
xor
or
sarl
xchg
mov
les
push
std
push
dec
and
inc
inc
test
test
jmp
add
aam
sub
mov
push
movb
add
jecxz
cmp
jge
fnsave
fstp
sarb
push
roll
cli
mov
add
aam
ljmp
mov
loop
popa
mov
nop
jg
popa
push
sbb
fisttpl
adc
loop
rcll
add
add
add
scas
and
insb
rclb
add
popa
and
xor
pushf
and
scas
pop
repnz
adc
enter
in
pop
inc
call
incb
cli
rorb
cmpsb
and
push
fwait
mov
mov
mov
xor
andb
jp
adc
pop
push
xchg
inc
shlb
popa
movsl
add
or
sub
fs
ret
shlb
and
jne
add
pushf
mov
decb
dec
nop
div
inc
sbb
xor
inc
dec
sbb
call
adc
jmp
or
rolb
add
dec
push
xor
outsl
pop
mov
out
pop
mov
inc
adc
push
mov
xor
inc
stos
xor
enter
add
fs
cmpsb
adc
cld
decl
mov
jnp
sarb
adc
iret
inc
or
sbb
scas
mov
dec
shl
mov
sbb
xchg
inc
add
jne
in
adcb
cld
push
xchg
pop
add
adc
ljmp
xchg
mov
push
cmpsb
stc
dec
mov
clc
push
jo
loope
pusha
arpl
push
inc
hlt
inc
or
mov
sti
and
adc
sahf
fidivl
inc
ret
nop
ror
out
test
mov
mov
fldl
mov
in
popf
and
push
loopne
lock
incl
mov
shll
pushf
aaa
adc
fdivr
stos
xchg
roll
xor
shll
das
add
insb
cld
push
add
adc
mov
ret
xor
adc
jmp
adc
fs
lock
test
sbb
comiss
sbb
sbb
sbb
out
clc
fisttpl
sahf
and
xchg
ds
lcall
mov
xor
pop
push
daa
int3
nop
add
nop
push
lods
cmp
fmuls
scas
cwtl
pop
dec
lods
dec
and
or
mov
or
enter
cmp
loope
test
mov
adc
iret
call
out
or
adc
adc
frstor
and
add
jae
jo
addl
movsb
jne
mov
lods
cli
dec
jg
outsb
cmp
test
jg
clc
aaa
pop
hlt
filds
in
adc
cmp
add
stos
adc
stc
xor
test
mov
pop
or
fucomip
jp
jo
imulb
pop
jecxz
rolb
jge
add
pushl
fwait
inc
loopne
bnd
dec
icebp
xor
inc
add
or
add
test
pop
jge
dec
pop
icebp
out
push
cmp
jbe
mov
cwtl
pushf
sti
dec
mov
imull
lret
addb
aaa
cld
add
xor
mov
xor
xor
push
lods
int
mov
adc
adc
cld
mov
add
insl
stos
sub
add
jl
mov
ds
jl
or
inc
aas
rolb
push
pop
push
cmpsl
cmpsl
enter
xorb
mov
push
decb
dec
or
stos
dec
int
jl
push
fs
lcall
push
mov
adc
pop
sub
and
pop
cmp
dec
int3
pusha
int
stc
jno
mov
jmp
icebp
dec
inc
add
test
les
add
or
push
mov
nop
push
cmc
xor
mov
mov
and
push
push
add
test
out
dec
xor
sahf
adc
pop
cmpb
jl
sbb
std
ljmp
and
sbb
add
jecxz
inc
push
push
push
cwtl
fidivs
insl
lea
pushf
mov
xor
or
sub
sahf
inc
or
mov
mov
push
add
add
jo
mov
add
jge
inc
mov
cld
fucomi
ficomps
sub
and
int
js
insl
cmpsb
aam
sub
sub
loopne
mov
je
mov
bound
or
inc
adc
lods
sbb
nop
adc
and
cli
int
mov
sub
mov
dec
loope
aam
cld
mov
add
outsb
test
data16
mov
push
faddl
jp
or
push
mov
mov
or
in
rolb
mov
mov
adc
fisttpll
frstor
push
jl
jge
ficoml
fldl
and
in
or
and
mov
add
lods
sbb
and
mov
add
pusha
pop
jmp
push
and
pop
mov
les
loopne
jns
adc
nop
icebp
mov
xor
jl
or
data16
adc
repnz
cmpb
adc
or
sarb
jg
mov
jle,pn
mov
or
es
jle
nop
and
test
daa
and
jge
loopne
fcomps
fidivl
jecxz
or
out
lock
xchg
jl
out
cmc
daa
jle
add
int
and
mov
divl
ljmp
push
xor
inc
and
push
ss
clc
mov
add
mov
nop
adc
jp
cmpsb
and
mov
shrl
sbb
mov
in
mov
pop
push
mov
or
or
popa
or
pop
and
pop
movsb
mov
pop
mov
xor
dec
ja
pusha
mov
sub
sbb
pop
sbb
es
test
addl
mov
out
inc
add
sbb
push
rolb
inc
cmp
fisttps
insb
clc
stos
sub
cli
or
test
loopne
inc
add
xor
stc
sbbb
push
pop
fdivr
je
mov
lret
xor
add
inc
sarb
insb
cmpsb
push
ds
loope
cmpl
mov
movsb
or
mov
out
mov
sbb
adc
sub
and
mov
ret
lock
movsb
loope
add
and
inc
inc
push
cs
jl,pn
loope
push
add
xor
and
jge
jle
incb
jl
loope
xor
int
sub
push
or
stos
loope
repz
jbe
hlt
jle
clc
insb
adc
cmpsb
xor
cmp
or
jno
rcrb
add
jg
pop
and
icebp
sub
sbb
add
cli
bnd
jle
mov
or
mov
add
outsl
jbe
fnstenv
sub
jnp
or
mov
cmp
xor
cld
mov
dec
rolb
nop
add
adc
loopne
dec
add
nop
adc
push
or
rolb
fmull
mov
mov
add
add
sub
jle
jne
es
ss
lea
pop
or
push
fistps
cmp
cmp
or
and
or
outsl
sub
lock
ror
xchg
outsb
cmp
mov
cmp
cmp
sbb
andb
das
fdivrl
or
cmp
cld
add
or
cmc
dec
stc
mov
vpaddsb
cmp
cmpsb
xor
cmp
rolb
je
xchg
jge
and
inc
jge
jo
or
xchg
mov
mov
cli
outsl
ljmp
stc
pusha
imul
les
aas
int
mov
cmp
rcrl
or
push
add
ret
sbb
and
cmp
dec
mov
loopne
add
jecxz
push
aam
arpl
xor
in
cs
push
pop
loope
push
aas
call
push
and
icebp
aaa
fidivrl
cmp
incl
inc
cmp
lcall
cmp
cmp
je
push
dec
and
mov
pusha
int
xchg
cmc
push
call
cmp
mov
inc
vpavgb
nop
outsl
mov
stos
incb
sbb
jo
js
ror
and
cmp
cmpsb
xchg
add
jb
shlb
mov
mov
es
and
mov
xchg
jl
and
insl
cwtl
add
data16
mov
mov
mov
addb
cmpsb
hlt
cli
aam
xchg
adc
in
loopne
mov
inc
call
xchg
add
pushf
add
add
dec
cwtl
sbb
dec
cmp
fwait
inc
jae
xor
ret
pushf
fbld
or
jnp
add
test
leave
or
or
add
add
xchg
mov
dec
fcomps
loopne
rorb
jb
loopne
push
push
scas
push
sbb
pop
mov
xor
cmp
dec
insb
scas
mov
push
loopne
insb
sub
add
add
push
lds
inc
jp
xor
and
cmp
es
push
mov
test
add
or
adc
sbb
ljmp
mov
jle
push
and
xor
lea
enter
sub
adc
dec
into
subb
add
cmp
incl
outsl
nop
inc
mov
and
incb
push
sub
or
lock
mov
sahf
into
add
dec
es
mov
jle
clc
add
lock
push
dec
pushf
ds
dec
xor
lock
out
pushf
add
push
cmp
dec
pop
mov
pop
inc
mov
subl
add
xchg
or
aad
imul
out
mov
test
push
sub
adcb
push
add
mov
or
add
push
sbb
add
loope
aad
inc
push
add
mov
lcall
pusha
add
jge
add
add
add
rorb
fs
jmp
aad
incl
dec
stc
jp
addb
or
shlb
test
or
ficoms
aas
int3
test
fiaddl
adc
sbb
orl
cmpb
stos
adc
cli
adc
addl
add
loope
lea
addb
push
int
loope
fadds
push
rolb
bnd
test
jge
push
iret
lret
cmpl
or
dec
orl
sub
add
mov
je
aad
aam
adc
inc
xchg
pusha
jg
push
add
xchg
or
aaa
dec
hlt
push
sarl
mov
sub
push
cmpsb
push
fst
daa
insb
test
jl
sbb
add
pop
stc
push
loop
jnp
pop
or
test
ret
add
add
and
mov
js
adc
dec
xorb
rolb
xchg
sub
sub
rcl
mov
sub
fadd
es
sub
fdiv
test
ds
or
add
push
push
push
cld
movsl
ret
push
inc
xor
sbb
mov
loope
adc
jl
movsb
cs
jge
or
fildl
rolb
and
stos
fs
outsb
movsb
inc
pop
and
or
pop
shlb
inc
mov
adc
test
scas
mov
rorb
or
iret
and
mov
call
inc
subl
mov
cli
push
xorl
cmpl
outsl
clc
lcall
aad
orl
add
cmp
es
and
mov
xor
sbbl
push
mov
mov
mov
adc
jmp
andb
mov
in
jbe
pusha
add
repz
inc
cs
ljmp
push
inc
mov
in
jge
lea
loope
push
test
mov
loopne
add
test
iret
scas
and
mov
or
pop
pop
mov
push
add
aad
fiaddl
filds
sbb
push
jle
call
testl
add
out
rolb
in
cmc
add
movsl
idivl
repnz
pusha
adcb
bound
add
subb
or
push
aaa
pop
mov
ret
push
dec
mov
pop
out
mov
and
ss
xchg
push
sub
call
mov
xor
xchg
stos
int3
inc
adcb
sub
aaa
push
cmpsb
sub
mov
push
fisttpl
aaa
xor
fndisi(8087
mov
jle
je
mov
shl
mov
push
jne
adc
lods
push
incl
mov
data16
push
xor
mov
mov
test
fcmovb
stc
push
adc
sarb
repnz
cmc
adc
inc
test
mov
jl
pop
loop
test
dec
pusha
cli
cmc
mov
dec
dec
and
add
ret
shr
mov
divb
sbb
jmp
repnz
and
add
mov
pop
lods
das
jo
mov
lods
rclb
stos
inc
xchg
and
rcrb
add
repz
mov
loop
stos
lcall
mov
adc
out
sub
roll
add
mov
cmpsl
cmc
or
fiadds
insb
or
push
fldl
xor
loop
addb
repz
into
add
ds
jne
rclb
xor
jb
jo
adc
inc
mov
pop
data16
sbb
hlt
xlat
inc
popa
iret
push
or
scas
xchg
add
or
add
add
or
or
cmp
push
jnp
push
out
in
xchg
aaa
mov
fs
insb
data16
loopne
iret
or
pop
cld
shrb
jg
pop
mov
push
sbb
jbe
push
std
mov
leave
pusha
push
xor
add
cmc
dec
adc
mov
cmp
int
test
jl
sub
cmp
pusha
int3
cmp
add
inc
add
adc
push
orb
call
xorl
jge
int
add
add
pusha
xlat
xorb
int
test
jmp
and
pop
fbstp
xorl
ret
or
pop
call
jbe
test
add
ret
add
mov
icebp
add
push
and
push
lods
lret
xchg
inc
pop
in
jo
sbb
jae
add
loopne
aam
lock
adc
push
push
xor
jle
cld
not
ljmp
add
cld
xor
mov
jg
mov
or
loope
movsb
mov
add
dec
jecxz
jo
mov
adc
and
and
nop
aaa
mov
add
out
pop
push
cmpsb
hlt
mov
or
loop
add
or
jge
ljmp
loope
mov
je
cmp
dec
test
pop
push
lods
adc
movsb
add
mov
add
std
mov
or
mov
sbb
and
cmp
es
fimull
sbb
add
divb
mov
or
mov
dec
sub
push
shrb
rclb
add
xor
jge
pop
pop
or
pusha
cmp
add
mov
mov
and
iret
lret
xchg
pop
mov
mov
lock
rcll
stos
clc
push
imul
pusha
shl
rclb
dec
jnp
pop
xor
loopne
hlt
testb
adc
mov
add
mov
repnz
push
and
sub
or
aaa
xor
jge
lret
dec
adc
push
hlt
les
mov
push
mov
or
sbb
dec
inc
xchg
je
in
pusha
jge
and
adc
mov
jle
push
mov
xchg
test
mov
mov
add
cmpsb
int
shlb
and
and
out
cmpsb
or
fisubrs
push
mov
cmpsb
insl
call
push
adc
loope
sbb
insb
sbb
sahf
add
inc
sbb
cwtl
mov
sub
cwtl
add
inc
pop
movsb
fbstp
xor
sarb
push
and
jle
mov
in
mov
mov
stos
cmp
fs
or
nop
pop
imul
clc
jne
and
into
std
rolb
mov
stos
or
mov
sbb
jecxz
xchg
ss
add
push
push
scas
sub
popa
xchg
test
ret
fistpl
xchg
pop
adc
push
jo
and
lock
jmp
push
push
push
xor
mov
add
cli
in
testb
push
inc
or
cmpsb
push
pop
rcl
inc
rcrb
mov
negl
ret
push
and
and
mov
jl
mov
xor
add
sub
stos
push
cmp
push
adc
icebp
popa
jno
negl
ret
sub
cmpsb
inc
call
add
sbb
sub
mov
mov
sbb
das
inc
jnp
add
or
addsubps
pop
adc
jl
loope
pop
scas
adc
pop
insb
xor
cli
dec
scas
outsb
rcrb
sar
out
push
add
std
aaa
jge
add
pop
jno
or
jge
aaa
adc
std
cmp
pop
jecxz
popa
or
mov
mov
and
dec
lcall
fidivl
add
inc
jecxz
mov
sub
mov
inc
rcrb
js
push
sbb
cli
sahf
ret
add
ret
fwait
inc
aaa
mov
movsb
or
push
inc
ljmp
or
into
push
fidivs
cmpsb
add
or
cmc
stos
adc
nop
cmp
nop
fiadds
ret
mov
or
push
xor
lods
mov
jnp
ds
dec
mov
mov
xchg
adc
dec
loopne
repz
xchg
dec
add
aam
jno
inc
add
clc
ljmp
lock
mov
mov
movsl
bnd
push
inc
loop,pt
mov
xor
ret
dec
mov
aad
andl
or
test
jnp
adc
popa
ss
mov
ret
or
shlb
and
outsl
ljmp
sub
or
add
adc
js
popa
mov
clc
add
aam
adc
rorl
inc
fstl
add
sub
stos
and
shlb
sub
les
ret
lcall
aam
lods
adc
xor
push
and
mov
jge
lock
pusha
idiv
aaa
lds
jb
cld
addb
xchg
adc
add
push
cmp
mov
pop
out
and
push
inc
and
mov
loop
outsl
clc
mov
push
cmpsb
nop
rcl
jo
mov
push
add
add
loopne
fildll
inc
and
mov
fiadds
stos
mov
inc
xchg
inc
aad
add
jge
scas
push
cld
dec
movsb
adc
or
xor
inc
fisubs
jecxz
mov
jae
and
add
les
rolb
pop
mov
and
push
add
and
and
sbb
jo
xor
aaa
rcrb
add
and
sbb
mov
push
jle
jae
dec
mov
jecxz
mov
mov
rcrl
and
mov
pushf
xorb
scas
shl
adc
fdivrs
cmpsb
out
std
incl
repnz
or
incl
and
mov
clc
ret
jne
mov
add
xorb
sub
jo
popa
push
jb
mov
mov
roll
dec
mov
adc
add
adc
divb
jle
jnp
aam
add
lock
add
fadds
jg
outsb
xchg
out
xchg
dec
and
fisttps
fnsave
cmp
sar
pop
sbbb
push
xor
xor
adc
rol
mov
and
scas
shlb
repnz
repnz
ljmp
call
add
aas
mov
xor
shlb
xchg
push
and
test
cltd
mov
mov
sub
inc
jecxz
mulb
insb
mov
pop
repnz
sub
add
xchg
adc
aaa
es
dec
loopne
cmpb
add
and
xor
lock
mov
mov
mov
filds
add
push
jae
fs
adc
clc
in
add
fcompl
push
add
add
mov
add
and
or
mov
mov
lcall
dec
leave
add
das
cmc
data16
es
decb
and
lds
dec
add
xchg
jecxz
push
xchg
das
cmp
xor
mov
cmp
sub
test
jl
loop
and
jbe
divl
test
mov
lea
add
in
mov
cmp
ja
sbb
cli
adc
std
pop
add
repnz
fnstsw
sbb
and
sbb
or
add
addb
shl
int3
ds
inc
sbb
test
movsb
xor
push
jne
mov
push
mulb
mov
fimuls
clc
in
scas
jle
add
out
push
jle
pop
pushf
cmpb
and
mov
push
xlat
push
inc
nop
mov
mov
and
cmpsb
add
pop
in
add
or
add
pop
inc
shlb
adc
fcoml
insl
push
sahf
lcall
bound
add
nop
mov
add
xchg
rolb
sub
add
adcb
xor
adc
rolb
dec
or
push
aaa
movsl
outsl
fwait
jmp
add
stos
adc
inc
fstpt
pop
cmp
pop
cmp
add
add
adc
jo
xchg
sbb
iret
jmp
in
mov
icebp
nop
or
or
push
ret
xor
inc
add
and
test
shr
shr
lret
jp
push
popf
aas
ljmp
and
xor
jno
mov
or
jg
jno
cmc
pushf
ret
push
push
inc
push
pop
fiadds
loopne
daa
inc
xor
xor
or
mov
frstor
adc
test
stc
adc
jmp
and
jne
mov
mov
adc
push
and
mov
pop
and
adc
call
pushf
jne
jmp
push
inc
sbb
mov
inc
push
push
push
xor
ret
ds
rolb
test
and
add
int
test
jo
outsb
adc
cmc
add
jge
call
xchg
outsb
js
or
add
inc
les
lcall
pop
lock
pushf
repz
loop
lock
inc
jmp
sarb
mov
shrl
test
ret
mov
inc
addr16
aad
std
add
rorb
fucomip
adc
adc
imul
adc
mov
or
ljmp
or
rol
cmp
in
cld
aad
mov
cmp
and
pop
sarb
test
ljmp
aaa
adc
pop
das
mov
push
mov
sub
sbb
ja
add
sub
inc
pop
cmp
inc
pop
sbbb
add
mov
cwtl
inc
mov
andb
inc
dec
addl
cmpb
mov
jnp
or
jg
add
push
sub
xor
ss
sarb
scas
loopne
jne
add
pusha
es
push
jg
cmp
mov
mov
jge
push
test
cmp
addb
jmp
mov
mov
ret
adc
push
out
mov
jl
sub
dec
mov
lret
and
mov
sbb
icebp
inc
mov
call
or
pop
push
cld
negb
loopne
ljmp
add
cmc
or
test
orb
lahf
ss
inc
push
in
xchg
scas
test
adc
and
and
clc
fcmovnu
mov
cld
sub
psubq
std
jbe
add
cld
rorl
cwtl
xorb
pushl
hlt
loopne
adc
pusha
add
psubd
cmp
inc
sub
jmp
mov
adc
and
add
fsubs
cltd
hlt
cmpb
or
aad
cld
shlb
inc
clc
ja
xor
sub
mov
loop
movsl
lds
and
xchg
inc
or
idiv
aaa
sbb
mov
pusha
add
test
sub
push
ret
mov
in
in
push
sbb
inc
ret
rcrb
sti
leave
sbb
inc
popa
inc
inc
loopne
jb
jg
mov
std
push
ret
push
sub
xor
pusha
sbb
clc
pop
imul
loop
in
adc
rcrb
pop
ret
out
dec
sarb
shlb
cmp
mov
and
xor
lods
js
mov
jae
add
mov
sti
aaa
xchg
push
cmp
add
sub
jge
mov
shll
int
cmc
jnp
lret
lods
cli
incl
sbb
xorb
out
inc
mov
test
jg
mov
pop
loopne
push
sarl
or
call
dec
mov
mov
xor
dec
fneni(8087
dec
inc
filds
inc
sub
sbb
sbb
add
nop
jne
jb
and
push
mov
cmp
int3
mov
in
mov
lods
loope
insb
out
mov
or
stos
push
in
xor
fldcw
inc
push
cwtl
pop
inc
aam
mov
cmpsl
mov
sub
cmp
ret
sub
push
inc
add
adc
pushf
or
adc
hlt
scas
mov
cmpb
inc
out
dec
out
outsl
pop
or
mov
and
addl
mov
sbb
fcmovb
add
xor
clc
or
xor
cli
push
jmp
cmc
dec
mov
add
add
imul
inc
sub
dec
imul
push
cld
inc
mov
cmp
add
sub
lods
push
add
fsub
sbb
inc
or
push
jg
xor
fs
loope
sbb
sbb
push
sarb
dec
js
shl
jl
clc
or
stos
cs
fisubs
loop
adc
neg
icebp
add
adc
add
add
xchg
ljmp
mov
sbb
pusha
add
fistl
mov
push
call
cmp
cli
subb
ror
mov
loope
int
out
int
mov
adc
xor
ret
sbb
adc
mov
jne
or
push
and
movsl
or
adc
cmp
pop
add
jbe
mov
repnz
je
push
outsl
fdivp
sbb
jge
clc
popf
cmpb
incb
es
mov
pusha
dec
shlb
ret
orb
aaa
inc
and
mov
jne
or
mov
jle
inc
fisttpl
xor
add
xor
adcl
or
addb
dec
adc
in
push
add
mov
cs
mov
push
sarb
pop
mov
mov
inc
cmpsl
mov
or
testl
inc
xchg
inc
movsl
lods
jge
shrb
sbb
add
pusha
mulb
es
jecxz
xor
inc
inc
mov
out
or
add
mov
and
mov
shlb
ret
icebp
in
pop
add
and
je
out
and
add
sub
std
push
sbb
outsl
insb
cmpsb
aaa
push
aaa
mov
push
mov
and
jo
inc
mov
and
mov
mov
mov
mov
ljmp
mov
add
bound
addb
xor
sub
shlb
xchg
dec
lock
loopne
mov
add
popf
idivb
xor
mov
test
push
int3
pop
jmp
cmpsb
jp
cmp
inc
and
pop
sub
int
push
inc
mov
adc
lock
test
test
mov
fmul
mov
add
mov
mov
clc
lret
inc
mov
mov
icebp
lret
cmpsl
or
xor
cs
or
pusha
out
daa
or
or
incl
mov
lock
nop
sbb
out
jge
adc
xor
cli
leave
inc
add
jne
xchg
pop
xchg
lcall
mov
adc
adc
add
shlb
mov
roll
mov
inc
loope
addr16
movsl
or
adc
inc
fsubl
or
and
repz
mov
xchg
push
aam
add
mov
and
divb
call
add
sub
push
jnp
into
cmpsb
cwtl
aas
inc
std
fwait
inc
push
pop
mov
sbb
jge
nop
loop
pushl
ljmp
adc
lock
into
mov
cwtl
pusha
add
out
sub
js
in
not
add
aad
mov
repnz
lcall
or
pop
or
cmpb
cmp
adc
into
mov
cmp
or
mov
bound
sbb
into
aas
cmp
subb
push
push
nop
pop
push
and
les
jmp
pop
xor
mov
xor
inc
orps
adc
popa
call
mov
ljmp
orl
lock
loopne
in
pop
and
cmp
and
mov
andl
add
jge
data16
insb
mov
int
pop
adc
mov
mov
jg
inc
mov
sbb
inc
push
mov
pop
add
bound
je
sub
pop
adcl
xchg
or
xor
jbe
push
mov
loop
addb
adc
adc
jmp
cmp
rcl
mov
jle
ret
mov
lock
add
call
nop
jno
jo
sarl
inc
xchg
ret
and
aam
fcmovnb
shrb
nop
inc
add
insb
mov
nop
mov
popa
rdtsc
test
clc
ljmp
push
xor
icebp
pop
inc
jnp
repnz
jge
subb
jno
in
add
inc
mov
sbbl
sbb
out
push
sbb
jnp
outsb
jne
add
push
add
test
ret
mov
xchg
mov
pop
movsl
mov
jge
mov
rcl
outsl
scas
lcall
icebp
mov
xchg
pusha
sub
or
stos
push
xchg
mov
dec
nop
sar
fsubrl
adc
add
out
adc
mov
and
mov
mov
add
push
add
sbb
mov
add
push
push
push
loop
icebp
mov
jnp
cmpsb
addb
add
jl
clc
icebp
outsl
jg
in
scas
sbb
sbb
and
pusha
xor
fbld
add
aas
xor
mov
and
mov
clc
xor
call
or
push
inc
inc
dec
nop
jns
stos
nop
dec
add
xchg
mov
add
xchg
push
lock
inc
std
xorb
sbb
loopne
in
jo
adc
aaa
lcall
add
inc
mov
pusha
pop
clc
mov
push
or
mov
cmpsb
inc
rorl
jge
mov
add
sub
adc
push
xor
sbbl
incl
inc
or
sbb
push
cli
dec
jmp
scas
clc
incb
jno
lock
sbb
push
xor
mov
bound
lret
mov
xchg
mov
bound
decl
lea
int3
sub
xor
add
add
hlt
shlb
call
pop
push
sbb
shlb
jmp
loope
sub
rorl
and
push
xchg
push
push
cmpsb
mov
sub
and
adc
das
mov
shrb
mov
mov
adc
jnp
pop
dec
incl
test
inc
stos
push
andl
in
and
and
test
and
sbbl
and
ja
push
maskmovq
imull
mov
mov
or
int3
push
mov
jno
sub
lcall
movsl
in
mov
jge
pusha
popf
sub
jno
pop
addb
lcall
pushf
push
cwtl
mov
les
mov
repnz
ds
stos
cmp
arpl
jle
or
pop
sub
wrmsr
pop
clc
scas
push
add
add
les
fisubrl
sub
jg
sub
or
inc
outsb
or
decl
inc
add
repnz
push
cmovo
call
add
sti
xor
lea
pushf
push
adc
adc
ds
lcall
or
inc
pop
inc
mov
push
xor
cld
stos
push
add
add
sbb
pop
aam
or
and
sub
sahf
dec
addb
enter
dec
jge
shll
rcrl
xor
mov
add
pop
fs
lds
push
inc
push
fdivrs
add
mov
stos
sub
or
mov
add
cmpsb
xor
daa
and
and
mov
mov
cmpsb
dec
loop
dec
inc
jge
scas
dec
sub
cmp
add
mov
icebp
dec
or
mov
daa
jae
or
cmpb
outsl
divb
lcall
or
add
orb
subb
shlb
xchg
and
addl
bound
adc
add
inc
add
les
fcoml
loopne
push
cmpb
andl
outsb
cmp
mov
add
add
or
orb
orl
fisttpl
add
cmpsl
push
std
mov
incl
xchg
addb
iret
mov
repnz
jg
addb
es
inc
shll
dec
jp
mov
dec
mov
adc
add
push
mov
les
and
or
cmpl
cwtl
inc
or
jno
sub
mov
xor
xor
mov
hlt
cli
adc
jge
and
push
rclb
addb
mov
cmp
ljmp
insb
gs
std
sbb
add
xchg
imul
fisttps
or
aas
inc
pop
movsb
push
inc
pop
and
into
decl
or
lret
sub
rolb
rorb
mov
push
mov
sub
imul
sub
lret
sti
xor
ret
jg
inc
mov
orl
stos
sar
ljmp
mov
jnp
mov
inc
adc
push
ret
je
or
cmp
mov
stos
adc
mov
sub
pop
mov
and
adcb
and
xor
jno
int
adc
cmp
dec
scas
push
int
les
fadd
aam
test
add
rorb
data16
test
mov
push
adc
push
pop
aad
and
lods
pop
xchg
push
xchg
push
jg
popa
and
sarl
add
pop
inc
popf
loop
mov
lea
sbbb
negb
mov
dec
cmp
or
jg
dec
mov
mov
loop
xchg
inc
jo
orl
leave
ret
jg
mov
cmpsb
clc
test
xor
repnz
fisubl
add
xor
cld
push
xor
movsl
push
loop
push
sub
sbbb
out
or
scas
mov
addb
mov
outsb
gs
add
jecxz
adc
adcb
addl
push
jne
sub
push
loopne
jb
test
pop
push
or
pop
fs
sub
sbb
inc
sbb
mov
push
mov
test
mov
cld
push
adcb
mov
push
adc
sbb
sub
push
int
dec
int
jecxz
and
into
adc
lret
pop
push
jl,pn
dec
ret
je
pop
ds
nop
cmp
jmp
jmp
mov
cs
add
popa
push
add
pushf
and
clc
fildll
xor
andb
shl
les
sbb
fcos
daa
adc
rcrb
and
mov
push
inc
movsl
push
add
fisubs
jne
add
jg
ljmp
loopne
loop
push
int3
jmp
jge
jl
and
inc
or
aam
sbb
xchg
out
sbb
fsubrs
jno
sbb
repz
sbb
sbb
dec
mov
pushf
sbb
push
sbb
roll
in
push
dec
clc
incl
pushf
int3
jecxz
addb
adc
in
loopne
add
nop
shll
gs
xchg
xor
js
or
hlt
mov
pop
jmp
loope
into
cli
and
mov
orb
sub
add
rcrb
pop
mov
xchg
adc
stos
out
pushl
and
cmpb
stos
dec
push
xor
dec
out
out
fdivs
inc
adc
sbb
pop
push
loopne
dec
test
sub
lods
enter
lcall
pusha
imul
mov
jmp
xchg
pusha
dec
and
jge
rcll
and
subb
mov
xchg
adc
adc
adc
sti
inc
call
mov
sbb
mov
adc
pop
xchg
adc
mov
repnz
jmp
mov
add
cmpsl
rcrb
jecxz
jge
adc
ss
mov
in
sarb
dec
sbb
ja
add
sahf
ja
les
fisubrl
loopne
mov
std
orl
ljmp
add
inc
jbe
ds
xorb
aaa
cmc
add
lock
orb
xchg
popa
dec
leave
add
pusha
rolb
jmp
sbb
loop
loop
or
push
dec
loop
shrl
stc
jecxz
shl
add
adc
pop
scas
gs
mov
add
fdivrp
xchg
mov
ret
es
and
ljmp
ror
int
in
divb
icebp
sbb
mov
lods
jbe
hlt
lods
mov
inc
jne
icebp
jne
push
es
movl
hlt
test
xor
repnz
cmc
test
cmpsb
test
jne
dec
enter
cld
loopne
dec
add
inc
aaa
pusha
and
in
mov
lock
test
stos
dec
add
test
adc
loop
jno
mov
std
out
mov
cs
cmp
mov
dec
dec
push
jo
or
or
push
pop
notl
sbb
add
add
inc
pop
pop
sub
mov
jge
xor
jne
xor
and
mov
aam
mov
add
jg
mov
incl
sbb
jo
cmpsb
insb
xor
sbb
shlb
cmp
hlt
or
aad
xchg
outsb
jbe,pn
or
jmp
aaa
dec
or
adc
and
push
inc
sub
jmp
and
icebp
add
sub
or
in
add
mov
mov
mov
in
mov
mov
dec
add
adc
mov
fldl
aaa
jnp
mov
jl
sub
mov
add
sub
jg
sbb
int
cmp
and
or
arpl
movsb
pushf
ret
mov
xor
fs
mov
xchg
mov
jmp
mov
mov
aas
push
es
outsb
push
repz
inc
jb
sahf
mov
sub
outsb
push
into
mov
sub
dec
dec
push
dec
cmp
fstpt
test
bound
or
xor
dec
sub
mov
dec
call
or
imul
push
cld
push
shlb
sbb
add
or
or
pop
pushf
pushl
inc
push
int3
mov
adc
lock
xor
inc
cwtl
mov
sub
scas
icebp
push
pop
push
lock
dec
and
es
icebp
sbb
idivb
sub
xor
or
mov
std
xor
jb
shlb
adc
pop
mov
testl
or
aas
int
jle
jge
xchg
adc
je
jl
inc
test
jle
jbe
call
jo
inc
mov
hlt
mov
push
jp
sbb
and
mov
jl
int3
sbb
mov
cmp
shlb
mov
xor
icebp
lahf
inc
xchg
mov
test
mov
fsub
and
lods
or
ret
and
jg
test
and
and
sub
lock
sbb
sbbl
push
add
pusha
adc
or
sub
sub
stc
ret
incb
adc
push
std
fwait
sub
adc
sti
mov
adc
rcl
fdivl
test
cmpsb
xchg
inc
test
push
popa
test
xchg
sbb
add
sbb
sbb
jl
push
fs
or
mov
outsb
pop
sbb
sub
cs
adc
sub
xchg
fs
jbe
stos
orb
push
jge
jge
adc
dec
and
add
test
lds
outsb
lock
sub
xchg
sahf
or
jl
popa
lods
mov
lods
pop
clc
data16
mov
push
inc
pusha
mov
or
ljmp
icebp
inc
xchg
push
test
sti
xor
jo
in
loopne
sbb
adc
and
or
adc
test
mov
jne
sbb
jne
test
xorb
call
adcl
xor
inc
and
mov
or
paddq
xchg
stos
mov
adc
push
mov
insb
push
lcall
add
icebp
fmul
or
or
xor
fsts
inc
adc
push
hlt
nop
sbb
inc
sti
xorb
adc
inc
inc
ret
pop
icebp
decl
hlt
lods
adc
push
or
adc
xchg
sub
adc
or
adc
decl
fbld
cmpsl
nop
adc
adc
nop
add
mov
push
add
push
lcall
dec
iret
stos
js
stc
jo
sub
mov
push
lret
sbb
sbb
aam
mov
push
int3
test
sbb
cmp
dec
jecxz
call
push
loope
adc
adc
inc
cs
xor
pop
push
popa
andb
iret
push
cmp
lcall
adc
loopne
repnz
mov
shrl
loopne
icebp
mov
lea
addb
push
pop
jmp
mov
add
clc
add
decl
sbb
sub
jecxz,pn
cmp
rcl
add
inc
das
nop
push
int3
sbb
dec
incb
jo
popa
push
push
js
test
fcomip
push
sbb
cli
loop
add
push
or
and
data16
test
dec
les
jg
data16
push
and
ja
icebp
add
rclb
dec
stc
dec
fldl
dec
mov
cmp
cmpsl
mov
add
pop
xor
sbbb
mov
pusha
pop
adc
and
shrb
cmp
add
sub
out
mov
or
jecxz
add
adc
aaa
mov
sbb
pop
in
stos
mov
lods
scas
inc
aaa
lea
mov
sar
fmuls
pop
imul
jp
or
jbe
aaa
push
or
adc
add
fldl
nop
subl
adc
andb
iret
and
iret
or
mov
mov
rorb
xchg
push
jmp
or
jp
rorl
and
sarb
hlt
jl
or
or
test
cmp
fsubs
adc
mov
mov
xor
sub
or
add
nop
inc
sbb
iret
out
andb
jmp
hlt
popf
dec
cwtl
outsb
orb
call
in
sub
or
mov
and
clc
insl
adc
add
sub
sub
insb
daa
inc
jg
add
push
test
inc
mov
movsl
inc
fadds
add
pop
xchg
dec
dec
push
imul
jp
xor
pusha
mov
sub
add
and
cmp
push
lods
insb
add
and
xor
mov
push
pusha
ds
inc
sbb
loope
mov
pop
aad
push
mov
xor
sbb
cmp
scas
push
inc
sti
push
mov
add
jnp
add
clc
in
hlt
push
xor
or
or
inc
jne
inc
or
sbb
sub
xchg
cmp
jae
cld
add
push
and
add
loop
les
xchg
mov
push
mov
inc
nop
xchg
add
sub
test
mov
xor
mov
pop
inc
pushf
cli
cwtl
pop
subb
inc
pop
adc
scas
fwait
lea
adc
roll
and
xchg
fisubl
lock
fnsave
cmpsb
jg
or
dec
mov
add
test
lods
sbb
and
inc
add
add
popa
xor
insb
xchg
push
add
add
cmpsb
sub
add
mov
testl
lcall
mov
test
lret
test
mov
int
test
aaa
fnsave
loop
cmpsl
jmp
jecxz
into
int
test
jbe
sti
ss
cld
sub
xor
jg
addb
fiadds
divb
andb
es
orl
jmp
or
fcom
mov
or
xor
fnsave
push
push
pop
mov
sbb
add
mov
mov
mov
out
sub
inc
out
push
inc
or
mov
sbb
jno
cltd
mov
mov
iret
mov
add
aaa
add
mov
incb
or
cmp
ljmp
adc
adc
rolb
out
and
mov
mov
sbb
shl
in
dec
add
cli
jl
stc
pusha
ljmp
divb
cli
xorb
dec
add
out
subl
jnp
addb
jbe
sbb
adc
xor
jl
sub
fldt
nop
sbb
mov
mov
mov
subb
jbe
xor
push
mov
pop
lret
push
inc
js
push
cmp
stos
iret
push
sahf
add
or
add
cld
imul
fs
adc
sbb
lcall
mov
testl
mov
add
add
mov
mov
test
incb
cmp
inc
lock
push
mov
cmpsl
adc
or
test
into
cli
sbbb
adc
pop
inc
add
add
gs
adc
mov
and
push
sbb
filds
rcll
push
xchg
cmc
cmp
mov
call
mov
add
add
pop
push
cmp
loop
cmpsb
inc
mov
stos
and
and
sub
decb
out
or
shrb
test
mov
push
cs
jecxz,pt
lds
mov
add
xlat
mov
lods
add
fidivrs
jp
add
push
xor
cwtl
test
ja
mov
sub
cmpsb
add
jp
mov
mov
mov
mov
add
arpl
push
ds
testl
cmpl
or
iret
dec
push
jb
add
adc
ljmp
add
pop
sbb
ss
push
test
or
lds
pusha
adc
add
movsl
cli
push
inc
mov
loop
loopne
xchg
dec
call
jp
loop
gs
inc
or
xchg
inc
ljmp
sbb
outsb
movb
cmp
pop
ljmp
pop
mov
fcmovu
and
push
push
divb
adc
sub
add
loopne
scas
cltd
push
adc
push
jle
dec
inc
push
subb
and
inc
sub
pop
jb
jle
shll
pop
test
movb
fcoml
shl
js
test
jo
lods
push
push
xchg
pop
les
push
shlb
ffree
add
decl
jae
or
ja
and
xor
xchg
jecxz
mov
dec
repnz
jge
aam
fildll
pop
int
adc
and
les
lock
adc
aaa
or
pop
hlt
loop
add
rolb
add
pusha
adc
and
hlt
xorb
xor
cmp
jp
or
sbb
je
pusha
or
or
inc
mov
xchg
subb
xchg
js
mov
sub
or
sub
mov
fs
sbb
shlb
sbb
ret
repz
js
adc
pop
push
sub
pusha
sbb
ret
movsb
sbb
push
cmp
mov
sub
jne
ret
push
push
xor
add
mov
jnp
xor
or
loopne
and
ror
cmpsb
hlt
test
out
mov
cmpsb
repnz
fsubp
les
idivb
daa
mov
loop
nop
int
hlt
test
pop
test
mov
xor
mov
add
test
sahf
add
test
mov
stos
pusha
add
cmp
add
stc
nop
lds
decl
dec
or
xor
aad
mov
adc
mov
das
test
add
mov
into
cmpsl
xor
or
jl
add
mov
cmp
or
cmp
add
fnstsw
movsl
loopne
jg
inc
rorb
mov
or
loopne
fiaddl
xor
or
push
jle
lock
sub
sbb
sbb
cmp
data16
adc
cmp
cli
int3
jle
adc
stos
xor
cli
scas
mov
and
or
test
loopne
test
cli
and
add
sub
jmp
adc
or
dec
test
cmp
push
or
sbb
fildl
sbb
call
inc
hlt
jl
add
sbb
mov
add
pop
repnz
ss
dec
les
add
dec
pop
jle
mov
or
adc
out
clc
push
push
aaa
pop
lock
or
addr16
sbb
adc
hlt
cmp
add
push
adc
pop
leave
jl
jg
add
pop
xlat
mov
outsl
xor
loopne
adc
mov
jbe
popa
sbb
test
faddl
stos
mov
scas
lods
push
jle
cmc
jne
ss
jmp
or
mov
lods
fnsave
inc
leave
cmc
popf
aam
push
ror
mull
jge
add
orb
in
mov
pop
or
adc
cmp
mov
mov
jbe
cmp
xchg
hlt
sbb
pushl
add
add
pop
cli
push
push
pusha
push
xor
adc
mov
lcall
adc
jle
xor
jle
sub
mov
or
mov
jo
mov
add
pop
jl
ss
hlt
sub
sbb
aaa
or
jl
fldt
mov
and
cld
and
hlt
cld
add
lock
or
xchg
ret
jp
dec
jl
sti
or
pop
cli
push
and
cmp
sbb
dec
je
sub
or
or
add
jl
testl
sbb
mov
or
mov
mov
adc
and
adc
add
cli
scas
sub
mov
xor
pusha
and
add
adc
daa
mov
push
aaa
jl
call
cmpsl
movsl
lds
and
loopne
inc
fisubs
and
std
lea
clc
push
dec
mov
clc
push
mov
test
jge
push
jge
lcall
push
les
cmp
mov
and
adc
lcall
or
ret
repnz
inc
sbb
rorb
inc
aam
out
cs
cmc
xor
aad
push
sbb
ljmp
bound
js
sbb
ljmp
call
imul
pusha
test
in
xchg
and
clc
std
outsb
pop
cmpb
add
sbb
xor
push
dec
add
pop
jp
and
lock
adc
incb
ret
std
push
add
nop
inc
push
ljmp
ret
push
or
fucompp
add
cmpsb
mov
jge
or
add
mov
stos
jg
add
cmp
add
mov
jb
push
add
and
adc
repnz
cmc
or
jge
loopne
in
shl
loop
push
rorl
or
add
pop
and
sub
jge
push
mov
insl
mov
ljmp
inc
cmpsl
adc
pop
ds
xor
mov
hlt
daa
pop
fsub
fwait
jle
mov
sub
popf
lods
or
or
pop
add
enter
mov
jle
sbb
cmpsl
movsl
jge
adc
sar
add
add
and
xchg
lods
lods
xor
xor
data16
or
push
xor
add
cmc
sub
fcoms
mov
call
dec
lock
xchg
cli
subb
push
out
xchg
mov
into
mov
fcom
hlt
mov
push
out
or
jle
sbb
lods
les
out
inc
inc
and
or
hlt
adcl
cld
fisubs
jmp
pusha
xor
sbb
loopne
pusha
xchg
dec
dec
or
hlt
cwtl
dec
scas
test
push
mov
sub
mov
in
ret
pushl
repnz
nop
add
es
ja
push
adc
jge
push
and
jle
pusha
pop
xchg
lret
dec
sub
aaa
add
mov
and
xchg
dec
stos
dec
xor
mov
jg
stc
pop
loop
std
rorl
inc
push
jne
nop
iret
cs
sub
add
and
mov
jg
stos
adc
push
add
and
scas
nop
xor
lock
aad
fwait
test
int3
incb
mov
dec
call
or
jl
shlb
adc
add
jg
add
repz
sahf
jge
push
jge
inc
mov
ret
sub
fbstp
cmpb
and
in
sub
pop
xorb
push
add
and
mov
cld
pop
xor
call
push
adc
rcrb
or
ljmp
mov
or
orb
mov
inc
sbb
xor
or
mov
rolb
ljmp
in
push
loopne
divb
jo
cli
rolb
xchg
push
pop
repnz
subb
or
push
or
xchg
push
dec
add
add
mov
bound
inc
es
sbb
cs
lea
inc
rolb
adc
inc
push
push
mov
imul
pop
ficoml
jge
dec
xchg
and
jo,pn
orl
jg
mov
jle
adc
add
pop
add
sbb
test
insl
subl
push
add
add
mov
xorb
in
nop
xor
jae
adc
pop
mov
xchg
and
lock
loope
pop
xor
add
add
and
or
adc
sbb
jle
incb
add
push
cmpl
adc
adc
add
add
pop
rclb
or
dec
or
push
outsl
rolb
dec
and
add
sbb
lcall
add
push
mov
stos
or
scas
or
roll
mov
mov
outsl
pop
rcr
lods
outsl
adc
or
xor
adc
jo
cmp
adc
pop
add
add
loopne
push
jo
adc
or
sarl
jl
ja
push
mov
cmp
push
pop
enter
add
pop
cld
shll
pop
jl
add
add
add
dec
cwtl
gs
fs
ss
xchg
movsl
adc
sbb
xchg
lock
mov
ljmp
jae
xorb
xchg
cltd
out
hlt
fxch
test
ljmp
ja
add
and
xor
add
lcall
push
jecxz
jno
cmpsb
jne
ss
add
sbb
lock
cli
and
push
ss
add
inc
push
call
push
lods
add
add
gs
cld
int
ljmp
les
cld
add
add
lcall
inc
push
push
add
loope
and
push
push
inc
int
jle
lcall
call
xchg
call
lcall
mov
add
push
dec
in
add
dec
sti
add
xor
mov
shl
adc
repnz
ljmp
jbe
and
es
mov
mov
add
mov
dec
stos
fadds
mov
ljmp
call
push
or
add
nop
push
inc
mov
ljmp
insl
add
push
insb
lcall
cld
push
xor
in
movsb
je
loop
jno
and
pushf
and
xor
mov
mov
jg
jb
imul
pop
push
add
loopne
in
inc
cmp
push
popf
or
and
addb
adc
push
call
inc
insb
dec
add
mov
pushf
hlt
sarb
enter
and
jne
add
jbe
push
data16
mov
mov
and
jmp
clc
hlt
sbb
pop
cmc
cmpsb
orb
mov
rcrb
push
inc
cmp
and
jmp
dec
xchg
and
pop
rclb
push
mulb
mov
insl
sbb
sub
or
out
add
out
sbbb
add
inc
push
mov
and
lcall
je
mov
adc
subb
mov
inc
mov
mov
mov
filds
add
or
mov
pop
hlt
sub
push
inc
push
loopne
out
test
add
add
je
inc
inc
mov
ds
testl
or
pop
cltd
test
es
pusha
jp
lret
inc
bound
and
and
inc
dec
and
sbb
js
add
inc
repz
mov
addb
xchg
push
push
xchg
clc
out
fcmovbe
dec
ljmp
cmp
push
aad
mov
add
ja
push
or
lret
es
add
test
mov
mov
mov
stos
popa
adc
les
cmp
popa
xchg
inc
cs
and
rcrb
xor
mov
ret
xor
mov
les
and
outsl
insb
loopne
jbe
adc
fiaddl
rcl
xchg
or
test
pop
jp
mov
jnp
mov
sub
xor
fs
push
mov
cmp
mov
sbb
loop
or
mov
mov
andl
mov
aaa
adc
fdivr
decl
jp
and
lcall
enter
inc
loopne
push
insl
xor
or
xor
mov
or
and
push
add
inc
sbb
xor
fcomip
rolb
or
inc
push
jle
and
jp
or
insl
xor
mov
and
testl
dec
data16
mov
rcll
loopne
mov
cmpb
adc
aaa
loopne
mov
lock
mov
mov
jg
stc
pushf
cld
imul
dec
add
dec
or
pop
mov
add
ss
shrb
out
mov
and
lret
jge
rolb
mov
cmp
repz
inc
sbb
xor
inc
adc
movsl
jne
lds
or
cmp
and
push
inc
adc
ss
fildl
dec
sarb
rcrl
and
movsb
mov
push
pop
dec
push
add
lock
inc
std
addb
xchg
pusha
out
or
out
mov
xor
fimuls
adc
insl
bound
std
add
jb
enter
pop
and
dec
adcb
sahf
test
scas
inc
inc
or
push
or
repnz
jne
js
testb
jmp
js
loopne
sbb
daa
adc
add
dec
in
ficoms
aam
test
mov
fisttpl
nop
popf
or
lcall
daa
inc
xchg
adc
addl
sarb
xchg
mov
pop
lret
pop
xorb
jge
cmpsb
sahf
out
jle
jb
sti
cs
mov
arpl
test
dec
pusha
adc
xor
inc
sub
sahf
in
add
sbb
add
sbb
loope
jmp
mov
cli
hlt
mov
and
aam
mov
push
xor
and
loopne
jo
push
cmpb
mov
lock
push
imul
cmc
pop
or
mov
add
lods
and
xor
or
dec
ja
cmp
add
repz
mov
adc
inc
xor
mov
nop
sbb
scas
push
dec
or
es
dec
loop
int
inc
jg
rolb
cmpb
rclb
dec
mov
add
xor
and
mulb
mov
pop
pusha
sub
xchg
cmp
loopne
mov
dec
cli
outsb
loope
xchg
bound
ljmp
mov
xchg
mov
les
fcoms
dec
lock
cltd
push
jb
dec
fcompl
movsb
ret
cmc
dec
push
or
cmpsl
add
ficompl
sbb
sub
mov
and
jnp
inc
push
jo
add
push
dec
test
push
inc
in
push
sahf
xchg
nop
inc
inc
jg
int
jnp
inc
jo
push
cmpb
orl
in
adc
pop
mov
cmp
add
aaa
jl
je
adc
inc
outsb
data16
pop
xchg
sahf
push
sbb
xor
add
pop
jne
jo
loopne
out
inc
add
mov
pusha
sbb
jle
cmpsb
mov
push
or
jg
xchg
cmp
add
add
add
and
and
mov
pushl
clc
mov
scas
arpl
orl
adc
pusha
inc
lock
stos
push
ficoms
pop
mov
xchg
xchg
imul
outsl
push
insb
xchg
push
inc
mov
adc
lock
sbb
adc
or
adc
xchg
adc
loope
outsb
add
add
call
jge
mov
int3
push
mov
cmpl
mov
add
jne
dec
inc
add
nop
jo
psrlq
in
mov
adc
sti
jb
in
pop
in
dec
mov
ja
shlb
add
test
jmp
lods
inc
mov
dec
jbe
sbb
sbb
mov
adc
or
cmp
in
push
aam
cld
clc
test
lret
add
push
or
idiv
add
push
cmpl
push
stos
adc
jno
stos
hlt
jge
jle
inc
in
ret
sti
fbld
movsb
add
stos
add
sbb
push
fisubs
add
xor
lcall
cmc
inc
jne
hlt
adc
je
or
mov
or
insl
or
mov
cmpb
cli
rorb
lods
add
xchg
push
nop
cmp
setae
jg
jnp
xor
or
xor
jg
mov
mov
fs
out
sub
and
or
add
inc
adc
dec
lea
je
addb
pushl
adc
movups
and
or
xor
mov
jmp
sarb
xor
cmp
fcmovu
cmpsl
jp
adc
jg
movsl
push
ficoms
xchg
sbb
adc
pop
pushf
out
pop
sbb
jnp
shlb
ret
adc
loopne
movsb
or
add
mov
mov
shl
mov
sbb
lods
cmpb
out
repnz
adc
or
mov
pop
xchg
es
scas
push
and
push
push
cli
add
dec
sbb
push
data16
pop
add
fcoml
fistpll
push
push
imul
addb
insb
push
pusha
addr16
or
scas
clc
insl
mov
mov
push
stc
jno
push
and
andb
pushf
stos
decl
or
or
nop
sub
lods
add
dec
call
mov
mov
jle
add
pop
ss
out
ret
mov
rolb
pop
mov
or
cld
mov
mov
or
inc
and
inc
xor
loop
push
jne,pn
push
pop
push
sbb
cli
add
add
or
jecxz
nop
add
jbe
push
pusha
push
xchg
add
rcrb
into
xor
add
pusha
xchg
adc
mov
and
jno
and
xor
inc
jl
hlt
out
cmpsb
aam
mov
fisubrs
lcall
rorb
lods
xchg
scas
nop
sbb
faddl
or
push
shrl
and
cmp
pushf
push
xchg
add
adc
mov
lret
push
or
jo
ljmp
add
aaa
pop
pop
dec
push
cld
push
out
cltd
adc
push
push
push
cmp
or
and
test
jecxz
sbb
lea
adc
aad
xchg
inc
or
call
sbb
push
xor
shll
int3
jbe
decl
push
mov
xor
adc
sbb
jmp
call
lcall
shll
scas
inc
inc
scas
bound
mov
movsb
sahf
xchg
jmp
pop
xlat
les
scas
inc
add
int
push
cmpsl
push
fsts
mov
inc
mov
ljmp
jg
mov
add
test
push
lea
in
add
push
add
pop
mov
push
add
mov
cmp
out
mov
or
adc
sub
sub
or
or
add
adc
cmp
or
mov
cmp
bound
add
cli
mov
inc
add
int3
pop
lods
imul
inc
lret
fwait
add
add
int
cwtl
sbb
dec
inc
scas
sub
fistpll
mov
mov
adc
lods
rcrl
xor
dec
add
dec
dec
clc
lcall
testb
mov
inc
mov
push
inc
xor
loopne
push
adc
add
aam
and
add
push
mov
dec
add
mov
or
xchg
mov
and
adc
add
negb
decb
insb
mov
add
push
hlt
dec
insl
addb
jg
nop
push
adc
add
add
add
mov
pop
orl
xor
shlb
incb
inc
rorl
test
xlat
xor
dec
push
sub
lcall
hlt
call
xchg
mov
divl
pop
call
and
jo
adc
or
stos
mov
mov
dec
es
lds
inc
cld
inc
dec
faddl
or
enter
daa
mov
fldl
outsb
or
test
adc
xchg
dec
inc
push
mov
in
andl
daa
cli
push
inc
xchg
xchg
dec
adc
push
adc
or
scas
lock
loop
inc
cmpsb
xchg
fisubs
push
add
mov
cltd
rorb
int
orb
mov
mov
imull
add
add
pop
sub
add
out
and
xchg
mov
movsl
or
mov
rolb
outsb
inc
sbb
out
inc
inc
xchg
std
sbb
sbb
or
rclb
ret
int
or
push
sahf
and
cmpsb
xor
addr16
adc
fmuls
cmp
lock
ja
jb
add
pop
mov
pop
pop
icebp
adc
push
mov
adc
and
sbb
into
rolb
cmpsl
inc
sbb
sbb
aas
push
sbb
xor
adc
nop
push
subl
push
add
cli
rclb
adc
pop
loopne
es
add
pop
push
jle
xchg
adc
inc
cmpsl
jge
lock
sbb
dec
jmp
repnz
jecxz
mov
sub
sbb
negb
les
pop
add
test
adc
repnz
loopne
pop
adc
or
cmc
cmp
push
mov
sti
hlt
int
fisubrs
test
inc
add
add
mov
ret
repnz
les
or
lock
add
rcrb
das
sbb
test
and
ret
sub
loope
inc
hlt
stos
jge
inc
out
loopne
or
pusha
or
lret
add
sarb
movsl
add
jecxz
fiaddl
rcll
add
test
aaa
cmpsb
addb
bound
decb
cmpl
movsb
loop
test
adc
fimuls
add
xchg
add
pop
adc
aaa
cmp
cmc
push
add
aam
sub
dec
mov
subl
and
and
xor
push
dec
inc
pusha
push
incb
cmp
inc
aaa
add
push
pop
add
ret
adc
push
adcb
sbb
lock
add
sbb
cmp
push
daa
mov
push
dec
pop
and
rolb
sti
inc
sub
and
bound
sarl
pusha
adc
loopne
push
lahf
pop
mov
add
inc
popf
adc
loopne
fsubs
inc
jp
inc
pop
pusha
or
inc
or
sahf
ljmp
pop
sar
out
rolb
daa
add
and
mov
or
loop
mov
and
push
rol
sub
and
lcall
add
and
pop
bound
pop
repnz
jmp
cld
xchg
inc
test
lods
inc
jne
mov
jbe
mov
adc
jle
loope
mov
mov
mov
ficoms
andb
or
and
lods
xor
xor
sarl
or
pop
adc
push
scas
rolb
test
push
pop
mov
lods
call
and
pop
push
add
xor
inc
pop
repnz
dec
sub
sahf
je
outsl
adc
rclb
mov
inc
rcll
push
dec
mov
ret
loopne
push
test
loope
dec
add
mov
cmovp
inc
push
call
loope
ja
sbb
mov
cmp
jo
push
pushf
mov
add
inc
cmp
loopne
add
orw
movsb
add
or
sub
inc
push
subb
xchg
cs
cli
cmp
clc
out
fisubl
xor
push
mov
fstl
sbb
mov
add
cmp
jl
idiv
jo
xchg
or
fdivrp
inc
mov
push
lret
sub
inc
or
sar
sbb
outsb
enter
arpl
frstor
sub
jbe
push
pop
mov
add
in
push
ret
inc
jp
xor
push
cli
cli
dec
sub
fisubl
das
mov
xor
loopne
call
inc
sbbb
push
xor
sbb
stc
sar
xchg
incb
push
or
or
sbb
xor
inc
out
adc
insl
mov
inc
xor
mov
out
arpl
xor
loopne
jle
mov
das
sub
pop
in
xor
push
xor
mov
push
sbb
lret
mov
mov
shlb
inc
dec
push
pusha
sbb
pop
pusha
dec
sar
sahf
mov
sub
add
stos
add
xor
or
xchg
test
add
pusha
mov
or
icebp
add
addb
jae
add
lods
inc
and
dec
pop
inc
push
add
add
sbb
orl
aad
loope
mulb
push
shrb
mov
mov
push
sarb
or
sbb
fsubrl
and
sar
stos
inc
sahf
adc
push
push
add
push
rcrb
inc
jg
jno
jo
sbb
mov
mov
or
mov
xchg
mov
xor
push
jl
shrb
in
addb
sbb
lock
repnz
jne
idivl
es
lock
cwtl
lock
shll
and
fs
mov
decb
mov
popf
rorb
push
out
or
inc
xor
in
jle
jmp
aaa
nop
js
data16
xor
jno
pushf
decb
test
out
lock
mov
test
mov
adc
sbb
fsubs
pop
out
hlt
shlb
mov
sbb
or
icebp
pusha
loop
jg
test
sbb
movsl
movsl
adc
push
ds
rorl
mov
or
pop
xorb
mov
repnz
subl
or
and
outsb
push
pop
orb
sarb
cmpsl
js
push
inc
cmpsb
filds
push
adc
and
sbb
adc
push
adc
sbb
sub
xchg
xorb
cmp
inc
dec
in
gs
pop
inc
ljmp
jge
push
cmp
jo
out
adc
call
ds
add
dec
mov
pushf
push
fdivp
and
pushl
push
int3
xor
jge
subb
inc
xchg
scas
or
mov
mov
add
into
add
pop
es
hlt
dec
jl
inc
rolb
cmpsl
jo
jo
fisttps
repnz
push
test
add
inc
sub
ja
loope
adc
inc
adc
jo
xchg
jecxz
add
mov
mov
cmp
inc
andl
sar
data16
xor
cmp
mov
or
scas
sahf
in
rcrb
xor
lret
lock
pop
adc
test
test
inc
mov
inc
push
adc
or
xchg
add
xchg
sbb
in
jl
pop
sbb
or
xor
lret
jbe
or
es
in
mov
orb
sbb
sub
sbb
je
insb
movsl
mov
pusha
pop
pusha
and
ret
fs
add
mov
loopne
sub
add
pop
and
push
jno
push
loop
mov
xor
jnp
movsl
dec
and
mov
pushf
repnz
mov
push
negb
je
loopne
jle
rcl
xor
cld
cli
add
repnz
add
dec
add
push
pop
add
sub
sub
shlb
je
push
dec
pusha
test
ds
nop
shrb
add
jge
adc
mov
xchg
bound
mov
and
mov
xor
inc
xchg
cmpsb
movsb
aam
fcoml
jo
and
adc
cmp
movd
nop
inc
add
pop
jo
orl
movsl
lds
daa
mov
sub
dec
sbb
cmpsb
jg
xlat
pop
xchg
adc
and
cli
add
pop
mov
std
inc
add
xor
out
jp
add
in
mov
add
add
addl
jp
dec
data16
addr16
ljmp
cmp
rclb
xchg
dec
mulb
add
icebp
addb
mov
mov
lcall
sbb
xchg
les
fisttpl
loope
test
jnp
pusha
pop
or
xor
add
pushf
and
int
insl
addl
sub
or
push
pop
and
and
or
fldt
pop
cs
add
xor
push
xlat
inc
fsub
mov
es
mov
sub
loop
lcall
loopne
loopne
orl
pushf
lret
xchg
daa
in
or
xor
std
sbb
dec
or
inc
add
mov
and
mov
mov
nop
mov
in
cmpsb
jge
or
sub
icebp
dec
inc
mov
out
mov
push
inc
jbe
and
mov
lcall
je
or
cmp
jbe
lock
xchg
push
aas
mov
decl
or
xor
inc
xchg
pusha
mov
xor
icebp
sbb
add
stc
js
cmp
pusha
cmpsl
jne
stos
or
cs
gs
ret
cmp
rclb
jge
xorb
incb
add
add
sbb
idivb
jnp
mov
andb
push
dec
mov
loopne
inc
push
addb
inc
sub
xor
inc
fdivrl
add
rolb
pushf
adc
lods
and
data16
fdivl
repnz
mov
and
loopne
mov
repnz
pusha
add
cmc
and
push
lret
shr
adc
push
push
push
push
push
cld
and
lods
xchg
aas
mov
mov
xor
and
pop
clc
jge
push
pusha
ret
xchg
hlt
and
jno
aad
and
sahf
inc
loopne
push
mov
enter
push
or
scas
test
inc
add
cli
repz
or
add
rcr
pop
shrb
push
das
add
cmpsb
outsb
push
inc
int3
xor
or
push
push
std
ss
aad
cmpsl
mov
call
add
dec
cli
xor
push
xchg
jbe
add
hlt
sbbb
push
jecxz
and
and
dec
loop
imul
or
jae
sbb
test
inc
fimull
mov
outsl
dec
call
jl
repz
jp
add
and
jmp
fcmovne
inc
imul
dec
insb
jne
pop
pop
inc
fisttpl
add
add
mov
dec
cmp
or
insb
inc
int3
fs
mov
fisttpll
push
sar
mov
sbb
bound
sbb
and
cli
jge
pushf
cmp
or
push
xor
add
es
add
sbb
lock
xor
cld
les
xchg
movsl
bnd
nop
rolb
outsb
or
fwait
mov
into
cmpl
mov
dec
enter
test
sbbb
cmp
jg
ret
addb
pop
ss
sahf
push
push
mov
mov
add
movsl
mov
pop
pusha
sub
outsb
dec
cmpb
add
pusha
div
adc
mov
pop
dec
out
push
push
mov
dec
shlb
cmp
or
outsb
and
test
push
adc
lds
sbb
inc
pop
and
mov
inc
aam
orl
jle
ret
or
sub
or
add
or
shlb
inc
addl
push
push
aam
lock
add
pop
fsts
xchg
xchg
lock
arpl
push
xor
out
cli
sti
shrl
and
aaa
jbe
loop
or
loope
mov
idivl
or
popf
inc
adc
sbb
pushf
cmc
push
add
or
lcall
adc
xchg
xor
dec
sub
subb
add
pop
pusha
cld
inc
lods
dec
mov
adc
mov
je
lret
mull
neg
insl
outsl
mov
data16
push
add
pop
ja
sub
fadd
sub
test
add
inc
add
call
rcrb
mov
rolb
cmp
push
or
add
popf
inc
push
add
push
mov
or
std
or
lret
or
jg
je
cs
data16
cld
bound
shlb
mov
cltd
orb
or
add
sub
pusha
dec
add
addl
xchg
or
xlat
push
lods
test
xchg
hlt
and
ja
and
fcmovnb
inc
outsl
pusha
test
pop
xchg
push
mov
sbb
xchg
bound
andl
out
xor
lock
push
das
lock
push
test
xchg
fiadds
sbbb
cld
mov
inc
xor
inc
in
mov
clc
es
repz
inc
add
cmp
mov
mov
mov
mov
sbb
loopne
es
inc
loopne
pop
or
decb
loop
and
dec
push
test
sbbb
cmp
pop
in
sub
pusha
dec
jnp
adc
and
inc
cmp
fdiv
call
sbb
sti
and
ret
cmp
adc
movsl
mov
fsubl
adc
outsb
add
mul
jp
adc
sub
bound
adc
mov
outsb
aas
inc
and
testl
fildll
mov
adc
and
push
jg
or
or
add
jecxz
or
fcoml
loopne
stos
or
fbstp
ret
jle
or
inc
push
inc
and
into
push
bound
pushl
cmpsb
out
je
cmpsb
andl
sbb
cmc
xor
sub
inc
rcl
dec
rolb
and
cwtl
ljmp
sbb
pushf
or
add
and
lcall
addb
pop
loopne
adcb
rclb
lods
int3
cmp
mov
jge
repnz
xor
in
aaa
or
scas
jo
pusha
inc
mov
mov
pop
shlb
adc
and
add
fs
sub
loope
inc
shlb
or
adcl
pop
lock
pop
mov
and
sbb
and
or
cli
sahf
inc
fsub
or
jge
sahf
dec
fstpl
sar
push
push
adc
sbb
mov
je
add
inc
and
idiv
push
pusha
inc
das
cli
or
inc
inc
adc
fimull
or
incl
jnp
mov
out
mov
inc
lcall
or
adc
lock
and
stos
add
add
cwtd
pop
fcomps
inc
inc
flds
mov
jge
inc
push
mov
mov
pushf
cmp
xor
je
sub
inc
sti
ficoms
scas
sbb
mov
push
iret
stos
xchg
addb
add
mov
loope
mov
jbe
out
or
adc
add
insl
push
subl
jp
fiadds
pop
sub
and
out
or
add
ret
imul
icebp
test
jecxz
outsl
add
and
int3
in
adcb
mov
loope
lock
lea
lret
mov
rcr
fsubrp
and
mov
fildl
pop
pusha
hlt
jne
nop
cmpb
data16
pop
rorl
push
mov
adc
jb
add
mov
inc
or
loopne
mov
push
and
add
add
jle
mov
sbb
divb
mov
and
sub
fidivrl
pop
pop
mov
lds
jmp
add
jge
call
mulb
les
push
cmpsb
jbe
add
pop
add
pusha
jge
jnp
pusha
and
mov
push
add
xchg
sub
scas
test
add
and
dec
xor
icebp
insb
clc
decl
xorb
xor
scas
nop
inc
or
mov
xor
int
cli
jge
add
add
push
adc
inc
jp
push
and
xchg
xchg
incb
dec
add
xlat
xchg
shrb
in
push
pop
mov
shlb
pop
inc
cmp
xor
adc
pushl
scas
push
sti
adc
icebp
out
decb
or
addb
xor
cli
xchg
sub
push
cmc
jb
movsl
dec
cs
pop
lock
int
and
inc
adc
jbe
mov
icebp
mov
lock
push
dec
cmp
and
add
jge
int
daa
subb
jl
jle
std
push
lcall
mov
inc
out
int
test
add
ljmp
push
repnz
pop
jnp
or
sub
sub
mov
jl
test
push
fdivr
lods
mov
cli
or
popa
nop
sbb
add
daa
icebp
test
cs
lcall
xchg
cmp
inc
push
dec
repnz
inc
loope
mov
push
adc
cmp
xchg
xor
xchg
mov
add
and
das
xor
dec
lock
add
insb
jp
shr
add
and
dec
adc
cmpsb
incl
jb
ljmp
adc
loopne
jb
shr
roll
adc
mov
and
dec
cli
lock
inc
loopne
inc
fwait
ljmp
xlat
outsb
or
add
outsl
push
inc
jg
pop
push
pop
cmpsb
mov
popa
xchg
cli
xchg
cs
repnz
cwtl
jo
popa
aas
mov
add
divb
nop
or
mov
add
rcrb
jle
mov
stc
call
idiv
xchg
sbb
jbe
mov
das
adc
hlt
lock
or
mov
loopne
cli
incl
out
push
lret
sub
jg
push
ret
iret
stos
adc
pop
mov
cli
mov
lock
data16
pushl
fs
add
rclb
cmpsl
dec
xor
daa
or
repnz
loop
sarb
push
pop
mov
movsb
pop
mov
xchg
sub
inc
cmp
xchg
mov
mov
andl
les
inc
dec
loope
lcall
repnz
lret
into
add
loop
adc
add
or
or
es
jnp
notl
xor
outsb
bound
jp
or
lds
insb
scas
cmp
decl
ss
test
push
loopne
mov
lods
inc
sbb
call
ljmp
jbe
cmp
add
lret
lock
jl
add
stc
mov
ja
dec
sub
lret
dec
sub
xor
xchg
scas
xorb
out
test
mov
mov
fnstsw
pop
mov
mov
push
sbb
rcrb
add
out
push
inc
pop
or
test
mov
int3
fisubs
aaa
jne
push
repnz
addb
rcrb
sbb
movsl
jo
sbb
push
push
mov
fwait
add
push
push
lods
mov
push
addb
sub
xorl
outsb
dec
pop
jno
movsb
and
add
cmp
mov
mov
test
cmpsl
add
cli
inc
ret
xchg
pushaw
or
ljmp
cmp
xor
movl
push
mov
add
int
add
mov
mov
mov
rclb
bound
add
dec
or
inc
aaa
or
jle
jnp
ret
clc
inc
xor
popa
and
xchg
inc
les
int
stc
mov
iret
mov
push
push
aaa
aaa
hlt
mov
jle
mov
lcall
adc
and
or
mov
xor
jp
mov
mov
xorb
rcl
inc
add
int3
incl
adc
icebp
inc
std
push
xor
ljmp
aam
adc
loope
adc
add
mov
hlt
sub
jge
pushf
pop
and
inc
push
cs
mov
add
cmpsb
in
cli
push
push
xchg
or
nop
rolb
mov
dec
mov
lods
sbb
fistl
imul
stos
in
xor
loop
loopne
or
out
or
in
or
xor
add
adc
and
scas
cli
pop
cld
out
and
jecxz
sub
jo
jge
pop
out
xchg
or
mov
xchg
push
xor
fisubrs
xchg
incb
enter
inc
sbb
rcll
mov
hlt
add
add
sbb
movsl
mov
inc
xchg
cmp
sub
pop
dec
nop
stos
sbb
cli
push
frstor
inc
out
mov
out
mov
xor
mov
js
and
push
mov
int
mov
cld
add
add
mov
loop
cmpsl
push
icebp
adc
push
rcrb
and
andb
lret
or
in
mov
or
xor
adc
and
pop
pushf
inc
iret
mov
or
loopne
xor
aas
xor
mov
xor
in
push
jmp
aas
mov
addl
add
lods
or
or
pop
loopne
pop
mov
dec
push
and
jl
and
pusha
cmp
inc
sbb
fbld
int3
lock
and
pop
pushf
into
stos
add
add
and
andl
subb
clc
out
add
or
or
jne
or
mov
jo
sub
clc
jg
adc
jg
jg
pushf
add
stos
call
push
jo
mov
adc
and
inc
sarb
and
outsb
sbb
push
orl
lods
or
mov
add
dec
mov
inc
adc
add
dec
and
test
xor
outsb
loop
add
adc
mov
test
test
shl
cmpsl
movsl
adc
icebp
outsl
pop
ret
out
cmp
cmpsb
rclb
add
xor
jnp
mov
and
push
mov
adc
nop
dec
stos
jbe
in
inc
mov
cld
add
mov
shrb
xor
pop
xor
rcr
fcomip
mov
addl
xor
or
adc
or
dec
enter
mov
lret
bnd
data16
adc
mov
jnp
mov
aaa
pop
add
or
push
sbb
push
mov
mov
fsubr
push
adc
loopne
and
cli
jbe
or
adc
and
dec
dec
pop
adc
mov
pop
mov
js
cmc
mov
add
jmp
adc
ljmp
movsl
add
je
movsb
xor
sbbb
sub
mov
adc
add
mov
cmp
cmpsb
incb
imul
stos
js
xorb
add
int
orb
jo
sbb
add
cmpb
repnz
push
xchg
add
or
cmpsl
mov
inc
adcl
inc
push
mov
into
pusha
int
add
push
push
adc
in
orl
adc
sub
pop
pushf
adc
pop
adcb
das
imul
pop
xorb
and
imul
sar
decl
orb
cmp
add
mov
and
xorb
adcb
inc
out
test
inc
or
jne
mov
push
mov
adc
sbb
add
lock
add
test
aaa
jo
aas
xchg
jle
stos
and
testb
mov
inc
adc
pop
cmpsl
jl
ds
push
ficompl
mov
fisttps
mov
test
sub
outsb
shrl
push
flds
push
push
jecxz
xor
loop
aaa
add
hlt
and
or
cmpsl
movsb
mov
jl
push
inc
dec
rclb
dec
ret
sub
jae
cmp
mov
sub
sbb
add
sbb
sbb
sbb
sbb
mov
sbb
or
or
push
mov
or
aaa
pop
jge
adc
nop
inc
cmp
push
lock
int
daa
test
jnp
into
movsb
push
and
pop
cmpsb
inc
xor
push
insb
lret
call
mov
inc
jb
inc
add
mov
adc
jbe
shll
mov
in
lcall
adc
cmp
sbb
outsb
pop
inc
push
rolb
test
mov
add
pop
hlt
inc
test
xor
mov
add
push
movsb
incl
and
lods
out
push
sub
or
sahf
iret
cmpsb
add
rcll
inc
dec
sub
les
mov
add
pop
mov
add
aaa
into
mov
add
push
cwtl
pop
and
cmc
fwait
dec
adc
test
fldl
push
test
pop
out
shl
mov
jl
jle
dec
and
sbb
adc
popa
push
mov
and
mov
pop
into
sbb
loop
or
subb
cmpsb
in
and
sub
inc
xor
fdiv
add
push
add
mov
rolb
enter
and
xor
inc
pop
pusha
or
or
es
xlat
and
jo
rolb
shrb
jmp
push
or
add
fiadds
aas
test
adc
insl
jg
xor
mov
adc
mov
lea
pop
jb
adc
mov
popa
and
adc
loope
lret
jle
mov
rolb
test
adcl
xor
fwait
push
push
inc
cs
inc
inc
cs
sub
adc
jmp
dec
sbb
adc
pop
mov
aad
cmpsb
sbb
add
inc
and
inc
or
cmp
adc
pusha
xor
das
movsb
outsb
sub
sbb
and
push
inc
add
test
ret
cld
rcl
decb
inc
add
jecxz
sbb
push
push
inc
cli
fwait
repnz
rclb
add
cmp
in
add
or
add
jle
mov
pop
or
rolb
outsl
dec
add
add
adc
cs
or
pushf
and
out
jbe
outsl
push
insb
cli
loope
inc
outsl
mov
out
and
mov
orb
popa
add
out
add
inc
test
incb
mov
enter
add
clc
fwait
inc
fisttpll
in
pop
and
inc
bsf
cmc
fldl
mov
testb
scas
js
ss
jnp
jne
out
in
and
push
mov
dec
sub
sbb
aad
mov
rcr
push
jecxz
mov
sbb
pop
add
bnd
hlt
push
rcr
jl
sbb
or
ret
rolb
js
mov
sub
jo
inc
xor
jno
adc
hlt
inc
and
clc
bnd
pop
or
cmc
outsl
dec
jg
rcl
jg
mov
faddl
ljmp
mov
je
fidivrl
sub
int
mov
mov
test
in
dec
jl
je
and
xor
pop
fiadds
dec
xor
cmp
inc
es
es
jg
in
pusha
pop
push
mov
add
cmpsl
and
nop
out
push
fdiv
es
lock
outsb
jne
loop
fbld
clc
add
loope
int
adc
inc
loopne
std
dec
push
or
push
inc
add
lret
inc
or
fwait
inc
lock
mov
inc
in
divl
fmuls
push
mov
sub
add
enter
mov
pop
adc
xchg
xchg
jge
push
or
ret
cmp
in
add
mov
push
xchg
and
dec
mov
cmpsb
cwtl
cmc
jne
js
jae
test
cli
or
xor
rolb
xchg
sti
add
mov
lock
cmpsb
cmp
pop
mov
pop
dec
jl
rorb
cli
neg
nop
inc
push
mov
aam
mov
nop
adc
sub
dec
mov
imul
push
cmp
or
adc
push
inc
pop
push
sub
and
add
bound
add
jo
dec
push
add
and
add
push
clc
pop
sarl
icebp
data16
push
orl
outsl
out
mov
lahf
adc
jmp
push
mov
scas
pop
mov
xor
xor
push
icebp
add
or
mov
fsubs
std
add
sarl
or
and
decl
nop
popf
ss
cld
mov
pop
push
add
and
pop
and
frstor
mov
mov
outsl
stos
jnp
es
lcall
push
in
push
cli
xchg
add
mov
sti
mov
cmp
dec
sub
mov
push
mov
add
insb
cld
add
clc
push
sbb
test
dec
pop
mov
add
dec
rolb
xor
push
pop
mov
add
inc
and
and
add
add
pop
lock
push
add
push
or
fidivrs
and
cmp
addb
addl
scas
xor
rcrb
push
and
push
int
lods
push
xchg
jo
lods
pop
or
idiv
jns
ds
inc
and
mov
adc
push
sahf
lock
mov
lahf
fcmovnb
popf
dec
mov
leave
data16
sub
ljmp
add
jnp
shrb
outsb
outsb
jbe
pop
and
push
push
mov
mov
and
orb
in
jmp
xorb
inc
ficoms
enter
aaa
outsl
outsb
lcall
mov
pop
mov
jecxz
sar
pop
fdiv
pop
shrl
add
ljmp
lods
add
jge,pt
cli
jnp
idivb
icebp
pushl
loope
mov
adc
in
adc
shl
ja
lds
aaa
add
mov
repz
and
test
in
addb
add
cli
or
push
aad
fcomps
cmc
inc
cld
mov
xor
fucomip
mov
xchg
add
test
adc
scas
adcl
fcomip
ret
jae
fdivs
mov
add
pop
or
sahf
in
fbstp
pop
inc
mov
add
pop
pop
xor
ja
shll
push
bound
jge
out
je
pop
jne
adc
add
fistpl
pusha
cld
inc
rorb
cmp
xor
or
insl
jnp
xchg
push
mov
xor
sbb
bound
incl
loope
clc
loop
and
movsl
xor
push
jo
cmp
fbld
push
dec
fadds
mov
or
lret
insb
jae
mov
inc
mov
sti
test
icebp
movsb
xor
mov
pop
imul
fldcw
mov
push
adc
xchg
sbb
stc
sub
xchg
push
mov
ret
sub
and
nop
add
jl
cli
push
inc
sbbb
stc
js
rolb
int3
mov
sbb
adc
mov
je
frstor
insb
fcmovnu
add
push
sbb
mov
rolb
je
loopne
add
sbb
clc
push
xchg
add
orb
lods
push
inc
cmp
push
rclb
mov
jae
outsb
or
adc
and
inc
int3
jp
inc
cli
in
or
or
mov
add
push
push
ret
add
dec
cld
mov
push
add
mov
addl
sbb
inc
loope
jg
loop
fwait
mov
ds
jle
add
adc
clc
aad
loopne
leave
lret
in
mov
shll
sahf
adc
call
or
inc
bound
mov
movl
add
mov
mov
mov
mov
add
inc
pop
roll
mov
test
test
aas
pop
lock
and
pop
xchg
xor
mov
loope
inc
or
push
xorb
or
sbb
push
xchg
add
movsb
add
add
cmpsl
or
in
or
dec
mov
rolb
and
addb
shrb
xor
loopne
loop
nop
mov
movsl
stos
loope
or
pop
sbb
fbld
cmp
aam
xor
jb
and
xorb
aad
cmp
xchg
popf
add
adc
or
cli
xchg
sbb
push
xchg
add
ds
jl
outsl
sbb
stc
lods
jno
fwait
add
push
jecxz
sarl
and
push
bound
mov
incl
cld
or
sbb
xchg
xor
lock
adc
jbe
mov
mov
fwait
sub
lock
test
js
aad
xor
dec
xchg
pushf
xor
rcl
gs
or
fbstp
shrb
sub
rolb
in
int3
jae
loop
mov
add
sbb
stos
mov
daa
scas
ss
or
or
add
jl
jg
xchg
push
jne
xchg
int3
sti
mov
fs
mov
cmp
push
add
mov
lcall
out
and
stc
orb
jg
outsl
sub
mov
and
lock
cmp
loopne
jb
fwait
lock
xorl
add
stos
jne
insl
lcall
icebp
sub
mov
or
cld
andl
mov
push
fdivr
xchg
jp
adcl
jae
xorb
add
add
mov
cmp
and
outsb
test
pushw
mov
inc
andl
andb
les
sbb
pop
sbb
add
cmp
adc
xor
sti
popl
imul
inc
cld
fldl
xchg
orl
xor
mov
pusha
inc
dec
rclb
jp
sub
lcall
in
pop
sbbl
pop
mov
cltd
orb
adc
xchg
mov
push
ret
pop
jne
or
insl
jmp
pop
rolb
adc
addb
adc
add
dec
es
addb
inc
in
pop
add
push
adc
add
push
add
mov
mov
cmp
pusha
andb
pushl
sarb
pop
loop
sahf
faddl
adc
inc
or
inc
pop
pop
mov
add
inc
nop
and
push
xlat
jl
sbb
stos
inc
inc
scas
inc
push
fsubrl
test
sbb
shlb
mov
inc
sbb
cs
test
push
sbb
dec
std
aas
adc
and
jge
inc
das
sub
dec
mov
sub
add
add
sti
sub
scas
push
nop
andb
sub
jne
push
mov
inc
mov
adc
in
jle
hlt
popf
inc
adc
mov
inc
test
jg
push
add
xchg
cmpl
inc
and
movsb
add
lods
adc
mov
push
shll
jg
mov
sub
ret
inc
or
xchg
mov
or
add
add
xchg
add
or
push
push
pop
adc
cli
mov
popa
sbb
adcb
inc
sub
loop
mov
repnz
push
pop
out
loopne
inc
sbb
push
imul
loopne
mov
push
mov
jo
inc
outsl
in
push
jno
jbe
push
bnd
add
stos
int3
test
lret
or
insb
pop
movsl
test
fs
sub
jp
sbb
cld
or
cmp
push
es
lcall
push
xchg
push
mov
xchg
iret
outsb
push
or
scas
gs
sbb
jg
ret
loopne
lods
or
mov
mov
dec
mov
popa
or
clc
mov
xchg
jmp
pop
add
in
js
inc
pusha
sub
xchg
fwait
dec
js
push
faddl
or
push
add
sbb
push
xchg
inc
mov
xor
or
mov
stos
bound
es
add
or
sbb
in
mov
mov
or
or
insl
sbbb
fisubl
fsubp
or
fsubrs
in
icebp
add
push
mov
sub
adc
das
sar
pusha
mov
jbe
out
pushf
incb
shr
inc
pop
sbb
repnz
adc
add
and
aam
loopne
repnz
sub
jl
incb
pusha
pusha
and
js
popa
je
sub
xchg
xchg
and
add
jl
shl
das
pusha
call
jne
loop
pusha
mov
push
ss
aam
inc
inc
pop
pop
js
test
adc
inc
jl
pop
out
push
sbb
enter
sbb
mov
mov
testl
mov
jb
add
andl
cmp
les
lcall
loopne
xor
mov
mov
dec
or
sbb
icebp
in
aaa
mov
add
jb
loopne
insl
mov
adcl
add
popa
int
movsl
cs
ljmp
cmp
daa
mov
mov
test
push
push
inc
add
hlt
jge
shld
add
adc
adc
hlt
adc
inc
adc
movsl
rcrb
pop
inc
shl
jbe
filds
dec
sub
sbb
mov
std
and
std
mov
pusha
push
iret
repz
rcrl
pop
shrl
mov
add
movq
inc
ljmp
lods
pop
mov
and
add
subb
and
pop
add
cmpsb
inc
xor
mov
mov
in
loopne
sbb
lret
pop
pop
and
pop
push
loope
fadds
push
adc
jnp
and
and
decb
sub
pop
addl
cmp
ss
mov
add
mov
rcll
add
stc
push
cmp
aaa
pop
xor
incb
inc
mov
mov
xchg
mov
jg
daa
ret
sbb
push
and
xcrypt-ctr
cmpsl
sbb
sub
pop
mov
or
rolb
pop
jns
lock
pop
jmp
fidivs
orb
sub
adc
out
push
call
xchg
call
or
xor
fnsave
push
and
pop
mov
inc
and
movsb
das
fisubrl
out
mov
fistpl
xchg
and
push
sbb
add
lods
jg
sbb
xor
and
clc
clc
push
sbb
das
pop
xor
inc
push
mov
push
inc
lock
loope
loop
jl
push
test
mov
mov
and
or
sub
cltd
mov
mov
pusha
push
sub
mov
xchg
xor
ljmp
rolb
nop
push
mov
mov
sbbb
xor
fisubrl
xchg
fstpl
jmp
repz
add
cmpsb
sub
cltd
je,pt
int
out
dec
or
mov
jo
in
rcrl
jge
sub
mov
sub
roll
xor
xchg
andl
imul
mov
fdiv
or
daa
lcall
adc
fdivs
in
fisubs
push
add
inc
pusha
adc
mov
sahf
add
push
add
push
and
cmp
mov
cmpsb
add
movsl
cmp
xchg
add
lret
movsb
jb
jl
push
fsubs
mov
dec
and
loopne
mov
push
xor
testl
cmp
incb
bound
sbb
sbb
icebp
inc
stc
bound
mov
outsb
mov
scas
and
pop
adc
or
xor
rorb
leave
adc
scas
inc
xor
add
outsl
adc
pop
loop
cld
outsb
out
mov
mov
mov
cli
fmull
mov
cmp
pop
push
push
mov
jnp
int
in
mov
bound
jmp
addb
jnp
push
push
adcl
mov
jb
stos
jmp
leave
dec
push
mov
lcall
rclb
cs
jne
push
aas
cmp
loop
mov
test
sahf
xor
loope
mov
and
mov
outsb
add
add
lock
xchg
add
into
ss
es
xor
in
jno
cmpsb
stos
mov
xchg
pop
jb
inc
rcll
jp
xor
cmc
dec
add
pop
add
inc
push
xor
add
push
ljmp
outsl
idivb
add
cmpsb
adc
push
cld
or
rorb
repz
mov
push
add
mov
mov
add
jnp
mov
idiv
lcall
imul
inc
rolb
loopne
cli
mov
divl
dec
push
xchg
ljmp
add
push
push
movsl
mov
cmpsb
cmpsb
jl
jle
add
or
inc
adc
rorb
arpl
es
sar
xorb
rclb
fs
hlt
fnstsw
push
jecxz
in
orl
sar
and
xchg
test
pop
aam
lods
cmp
and
adc
jo
mov
adc
push
cli
sbbb
insb
movsl
loopne
test
push
or
sbb
loopne
sahf
xor
jbe
dec
rcrb
mov
sub
push
inc
cli
outsb
dec
idiv
or
insb
xchg
in
sub
jb
xchg
and
std
push
or
mov
add
push
sbb
sbb
adc
xorb
push
add
or
addb
andl
js
test
dec
ljmp
or
sub
lcall
inc
outsb
xor
pop
sub
jecxz
mov
clc
push
mov
add
divb
inc
mov
lea
in
rorb
sar
hlt
lahf
or
add
loopne
adc
push
adc
pop
call
test
es
aas
sbb
out
lock
lret
and
add
push
mov
dec
fwait
pop
sub
nop
cmp
cli
cmp
test
adcb
lcall
jp
test
hlt
and
adc
sbb
xor
lcall
clc
add
test
sub
call
aam
lahf
sub
mov
test
sbb
sbb
and
sub
mov
adc
ret
sbb
add
or
add
push
xchg
xor
out
dec
loopne
jo
push
add
mov
push
fisttps
xchg
dec
cmp
jge
cmp
nop
pop
or
cmp
push
pushf
bound
xor
or
mov
jb
adc
mov
push
add
add
loopne
sti
pop
insl
test
inc
xor
mov
dec
add
push
scas
jge
lods
clc
or
das
mov
adcb
je
cmp
loop
mov
sbb
pushf
cmp
loopne
dec
popa
xchg
repnz
cmp
xchg
outsl
add
lds
and
and
xchg
rcr
pop
out
inc
hlt
cli
sbb
or
stos
adc
jbe
loop
push
or
repnz
sub
or
fwait
push
test
stos
mov
std
gs
into
push
nop
mov
inc
jmp
lods
push
cs
add
subb
add
sbb
mov
testb
jg
lcall
and
mov
jg
and
lahf
mov
add
xchg
mov
or
push
outsb
add
cwtl
outsb
mov
jge
sub
inc
pop
lds
push
test
add
add
daa
dec
xor
mull
mov
mov
cli
and
out
clc
mov
add
add
adc
ja
cltd
adc
stos
mov
rolb
jge
mov
mull
sbb
lret
dec
adc
pop
inc
mov
iret
cwtl
ja
fildll
jmp
int3
pop
push
mov
ss
sbb
lds
add
aaa
pop
jo
pop
push
jnp
jo
vcvtsi2sdl
push
add
fnsave
and
lock
xchg
or
sbbb
fucomi
adc
jp
push
or
add
lods
dec
fxch
jp
jne
sbbb
insl
fcmovu
adc
mov
cmpsb
add
mov
imul
pop
or
push
cmp
sbb
lret
add
jmp
cmp
clc
addb
sbb
or
or
pop
dec
and
andb
mov
or
push
repz
aas
push
lea
xor
push
add
add
adc
stos
test
jle
incb
shlb
cmp
int3
pop
cs
add
jge
insb
add
push
push
cmc
push
mov
add
insb
inc
add
dec
or
mov
repnz
shrb
mulb
out
adc
mov
subb
pop
jl
fmuls
mov
adcb
out
push
sbb
mov
rcrb
sbb
das
mov
add
xor
add
das
pop
xchg
add
push
inc
pop
aam
out
push
add
mov
xor
hlt
mov
inc
pushf
fdivrs
fldl
add
rolb
mov
dec
cmp
jg
or
dec
testl
adc
sub
repnz
scas
cld
xchg
fwait
mov
test
add
sub
or
push
cltd
scas
or
cwtl
add
pushf
repz
mov
out
movsb
pushf
decl
rcll
scas
push
push
or
adc
movb
test
sbb
jnp
scas
pop
ja
add
rcrb
fidivs
mov
repz
inc
mov
inc
ljmp
icebp
ret
add
mov
movsb
hlt
jb
mov
jnp
scas
or
idiv
ds
inc
or
fwait
cmp
dec
push
rcrb
icebp
int3
push
mov
ja
mov
enter
push
add
test
sub
lods
andb
sbb
rcrl
or
mov
cmp
pop
hlt
mov
cli
lds
pop
add
or
or
and
push
xchg
push
xor
jl
js
push
out
push
insb
lea
ficomps
pop
ret
mov
leave
jp
dec
xlat
jge
add
enter
jo
jb
enter
mov
xor
dec
fisttps
mov
add
loop
ss
sbb
subb
in
movsb
repnz
les
and
sbb
dec
inc
xor
cmp
rolb
push
sbb
outsl
jecxz
jnp
fs
movsl
inc
pop
arpl
hlt
insl
sti
outsl
insb
adc
push
add
add
xor
dec
adc
add
xchg
mov
sbb
outsb
ret
inc
adc
popa
add
ret
inc
mov
std
xor
push
inc
add
out
add
inc
add
sbb
andl
es
push
xor
dec
in
in
and
cmp
mov
push
aam
add
sbbb
jnp
mov
aas
call
dec
xchg
leave
or
call
xchg
push
inc
adc
sub
and
test
shrb
or
hlt
jbe
push
and
mov
and
dec
sbb
and
fnstenv
inc
and
orl
jg
add
shll
add
add
repz
popa
and
and
loopne
cli
incl
aaa
andl
add
or
mov
cs
and
cmp
icebp
sbb
and
cmp
decl
mov
pusha
jl
cmp
sarb
addb
push
push
cmp
das
mov
cmpsb
add
lret
sbb
adc
out
push
push
in
sub
inc
clc
mov
add
mov
jecxz
repz
inc
or
sbb
lret
sub
cmpsb
or
popa
sbb
push
lcall
js
sbb
and
and
push
add
sub
sub
or
dec
or
das
push
repz
cmpsb
hlt
sbb
addb
mov
push
fstps
xor
daa
mov
mov
mov
cmp
inc
sub
lods
rclb
ror
ret
jmp
push
and
push
and
bound
adcb
xchg
movsb
hlt
mov
and
int3
jo
repnz
push
out
dec
cld
adc
shl
bound
and
roll
mov
popa
inc
mov
jg
ja
cmpb
ret
adc
adc
add
outsl
clc
jmp
loopne
loope
ret
xor
or
pusha
add
arpl
shlb
rcr
divb
mov
mov
mov
cmpsl
mov
les
add
mov
stos
jl
mov
push
lock
or
sub
out
fdivl
rcrb
insb
mov
fadd
call
add
mov
push
or
jge
add
sub
mov
stos
std
push
pop
dec
inc
mov
scas
sbb
nop
push
popa
cmp
fisubs
sbbb
sub
push
clc
jg
mov
in
xorb
xor
andl
mov
mov
call
in
sbb
testl
loope
xor
push
xor
inc
inc
sub
jo
push
shrb
loope
shll
insb
cwtl
jl
mov
mov
subl
adc
or
dec
push
sub
mov
pop
shlb
adc
rclb
or
cmpl
out
and
bound
or
pusha
pop
gs
les
mov
pusha
jb
mov
xchg
out
push
jbe
jns
cli
xlat
mov
arpl
data16
sub
push
cld
sub
adc
jb
mov
pushf
icebp
add
add
adc
call
or
or
add
cli
and
add
mov
inc
mov
inc
mov
repz
aam
add
push
add
inc
loopne
push
pushf
testl
and
jge,pt
cmp
mov
jle
inc
lock
sub
out
or
xor
mov
cltd
ret
xchg
adc
ljmp
push
loop
xorb
enter
mov
out
pop
inc
adc
js
and
jmp
push
lret
out
jecxz
adc
sahf
or
add
pop
mov
jl
ja
arpl
shlb
loop
loopne
mov
or
push
call
fsubs
loop
add
add
and
inc
inc
inc
fnstenv
push
rcrb
or
push
sbb
push
inc
shrl
es
cli
scas
mov
cmp
add
sbb
ficoml
mov
lock
ja
sbb
adc
dec
add
cmpb
iret
out
popf
movsb
inc
popa
or
fsubrl
lds
mov
mov
insb
adc
test
mov
push
or
xchg
cmp
dec
mov
mov
sahf
push
icebp
xor
sub
xor
scas
push
into
rclb
sub
xorl
divb
sub
xchg
cmc
mov
je
cli
xchg
cld
cmpsb
mov
cmp
rclb
clc
sub
mov
arpl
mov
mov
dec
jg
mov
push
cld
movsb
sub
sbb
nop
sahf
add
mov
pop
cmc
pusha
xor
div
cmp
adc
out
jnp
mov
scas
and
adc
inc
andl
fdivrl
adc
enter
push
cmp
add
or
aas
xor
incb
jg
jbe
les
ja,pn
loope
test
test
adc
hlt
clc
inc
add
cmpsb
push
jge
icebp
mov
cmp
jnp
jae
loope
gs
nop
daa
mov
shr
cmc
fildll
loop
call
int3
inc
sbb
pop
fisttpll
push
xor
sub
adc
mov
addb
fldl
sbbb
es
test
jge
add
ret
jle
sbb
or
add
cwtl
push
push
mov
mov
js
icebp
mov
adc
inc
push
repz
push
push
pop
call
xlat
adc
or
jl
sub
lea
push
fiaddl
pop
add
sub
add
sbb
adc
stos
add
lods
mov
cmp
or
aas
aam
cmp
sbb
test
into
adc
cmpsb
dec
in
push
and
dec
loop
hlt
mov
dec
shlb
pushf
or
xor
pop
shrl
lods
arpl
loop
shrb
mov
mov
roll
mov
aad
rcll
xchg
mov
je
out
cwtl
push
and
hlt
insl
sbb
divb
mov
es
mov
sbb
push
mov
or
mov
sar
cli
repnz
enter
add
inc
sbb
shrl
mov
out
test
nop
int3
rolb
push
dec
jmp
adc
es
bound
and
imul
lret
pushf
or
or
mov
jbe
push
push
adc
add
inc
dec
es
test
sub
fsubs
jg
icebp
xor
sbb
andb
mov
or
xchg
mov
pusha
inc
pop
pop
inc
cwtl
pop
xor
inc
adc
or
jg
sar
andl
mov
cmpl
and
adc
xchg
mov
ljmp
out
movsl
movsl
mov
cmc
push
add
sahf
and
roll
push
les
push
das
xor
mov
inc
cld
je
add
jne
lods
ljmp
jno
push
aad
mov
repnz
mov
and
stos
rorb
adc
mov
pop
adc
cmp
dec
loope
mov
lock
hlt
js
fistpl
out
cli
jb
repz
decl
cmp
add
mov
pop
pop
testl
xchg
dec
lcall
mov
and
or
inc
into
mov
out
xor
clc
jo
xchg
pusha
cmpsl
pushf
mov
aas
call
cld
mov
inc
push
nop
cmp
pusha
add
push
or
out
adc
adcb
mov
push
mov
movsl
pushf
in
ljmp
mov
ljmp
mov
mov
rclb
ljmp
or
mov
pusha
sbb
xchg
nop
rol
push
xor
fstl
xchg
sub
mov
rcrb
mov
dec
push
push
pop
sbb
sbb
xchg
les
outsb
sub
mov
fimull
bound
inc
repnz
push
xor
loope
adcl
sarb
sahf
inc
test
das
fimuls
mov
call
push
inc
ss
or
movsb
jo
push
iret
mov
add
movsb
loopne
cmc
push
mov
push
jno
xor
inc
or
sbb
fistpl
inc
mov
in
je
add
rolb
pop
loopne
push
movsb
andl
es
rcrl
pushf
push
hlt
loopne
and
add
cli
jle
inc
je
lock
cmpsb
or
imul
jle
aaa
pop
or
add
inc
adc
outsb
and
sbbl
xor
rorb
mov
and
and
jecxz
mov
push
das
mov
sahf
mov
jae
xor
fdiv
hlt
push
das
or
fbld
shl
call
jecxz
add
adcb
add
inc
jbe
lea
push
inc
fs
adc
adc
push
add
mov
shlb
mov
and
dec
pop
xchg
dec
stos
rolb
sbb
loopne
fimuls
sub
push
in
int
push
dec
jg
lahf
lds
nop
je
imul
stos
stc
dec
gs
add
or
jae
scas
mov
aas
mov
mov
mov
or
outsb
jo
inc
jo
add
rorl
add
andl
sbb
adc
in
stc
stos
pop
sti
fists
sbb
xchg
or
pushf
inc
jbe
ljmp
pop
jl
inc
and
rolb
xchg
pop
sbb
mov
add
mov
lock
cmp
xchg
scas
pop
fdivrl
add
repnz
pop
dec
mov
lahf
lea
jmp
push
lret
cmpsb
adc
mov
shlb
inc
mov
add
clc
mov
pop
pop
xorb
arpl
test
sar
in
jbe
adc
test
fisttps
mov
pushf
aam
data16
inc
mov
fildl
mov
sub
add
mov
call
cmp
add
mov
cli
and
rclb
fdivl
mov
addb
push
imulb
add
loope
incl
fiaddl
sbb
popa
inc
sbb
inc
sbb
int3
inc
sbb
inc
sbb
add
aam
inc
rcrl
pop
pusha
ret
xlat
push
dec
or
add
inc
and
and
dec
and
pusha
adcl
jge
rcll
mov
adc
rolb
sub
int
int3
mov
es
mov
flds
add
int3
mov
inc
or
fs
lock
adc
and
aas
ret
pop
push
aaa
inc
cli
call
inc
cmpb
sbbl
inc
adc
clc
inc
pop
xor
sbb
xchg
es
mov
push
mov
inc
adc
push
or
clc
aas
or
and
mov
mov
push
movsl
clc
pop
adc
xchg
add
inc
mov
icebp
xchg
jle
add
sbb
inc
push
adc
sbb
in
inc
xchg
icebp
cmp
cli
or
cmpps
cmp
jbe
jg
shlb
jns
pop
sbbl
adc
sbb
push
push
orl
int3
clc
mov
or
ljmp
pushf
shrb
jbe
cli
stos
pop
inc
mov
xor
add
inc
mov
loope
or
ss
frstor
loope
xor
jns
xor
fnsave
sub
loopne
roll
push
shrl
xchg
push
pop
dec
sarb
mov
loopne
popa
inc
pushf
mov
call
mov
ret
push
add
pop
bound
pop
aam
pushaw
xor
push
loopne
call
and
add
test
adc
push
outsl
popf
mov
xchg
add
jp
jl
je
add
pop
add
push
adcl
inc
xchg
fwait
adc
lahf
aam
cli
divl
push
push
jnp
ret
and
testb
outsl
jbe
xor
mov
xorb
jg
ret
and
add
dec
and
in
shrl
adc
pop
jge
ret
loopne
ljmp
movl
push
ds
sbb
lcall
rep
adc
jg
incl
ja
test
sbb
xor
addr16
ret
sub
ljmp
pop
jnp
shrb
jp
cmp
test
jg
out
sbb
jge
pusha
xchg
test
xchg
fdivl
clc
cs
sbb
ss
cmp
inc
loop
and
pusha
jg
pusha
sbb
adc
gs
in
aad
inc
jg
adc
es
rcl
int3
sbb
adc
inc
fidivl
mov
pushf
repz
cmpsb
push
push
mov
imul
in
and
add
inc
push
mov
jnp
mov
push
and
insb
push
cltd
jge
out
stos
cli
xor
jl
push
jp
cmpsb
ljmp
fdiv
int
adc
cmpl
mov
insb
cld
or
lcall
cmp
subl
dec
adc
mov
and
inc
adcb
add
addb
fs
aaa
xchg
lea
push
mov
push
loopne
mov
add
add
and
mov
insb
mov
sub
fisttps
inc
jge
and
stc
pusha
dec
and
roll
leave
adc
scas
cmp
arpl
jecxz
pusha
pop
loopne
out
pusha
cmp
inc
test
fbld
push
aad
mov
test
sub
imulb
add
mov
stos
sub
and
fwait
decb
cmpsb
cmp
add
sub
adcl
sub
inc
pop
int3
dec
jl
push
lds
fisubs
faddp
pop
movsl
lods
mov
pop
sahf
cmpsl
loope
bound
mov
pop
sub
xlat
mov
sar
push
fildl
add
cli
cld
xor
shl
loopne
ss
xchg
adc
pusha
pop
and
pop
mov
sbb
adc
jg
fiadds
in
pop
push
popa
in
mov
add
dec
movsl
inc
es
test
inc
inc
sbb
mov
cli
andb
pop
mov
or
or
out
lcall
pusha
mov
ret
inc
mov
fadds
mov
sbbb
push
ljmp
fldenv
mov
subl
decl
fisubs
jl
dec
mov
and
jo
and
pop
cli
jo
mov
mov
xor
mov
sbb
pop
test
mov
mov
dec
enter
fs
subb
mov
mov
push
ljmp
push
xorb
mov
repnz
or
stos
or
add
or
rcl
sub
in
lock
jo
add
pop
xchg
jb
jge
rcrl
decl
mov
cmpb
xchg
addr16
push
idiv
pop
arpl
fistl
add
pop
rcrb
xor
mov
mov
hlt
push
inc
jl
cmc
push
inc
pushf
or
sub
jmp
jb
loopne
add
mov
es
inc
adc
jo
push
pushf
xor
push
sub
enter
and
cmp
push
ret
add
mov
and
add
jo
shlb
jge
daa
outsb
jge
stc
pop
push
cmc
adcl
mov
xor
jle
nop
pop
aad
sub
out
fdivrs
sbb
or
push
pushf
or
scas
test
lock
negl
aaa
and
pusha
pop
adcb
lods
lret
adc
xchg
add
pop
shlb
and
dec
mov
dec
dec
in
add
outsb
arpl
cmpb
mov
mov
roll
fwait
push
push
jp
inc
dec
xor
ret
mov
mov
xor
sbb
mov
mov
push
mov
jo
and
dec
sbb
add
push
mov
push
jle
push
loopne
repnz
stos
push
icebp
dec
rolb
rorb
adcb
movsl
fisubrs
xchg
cli
outsl
cli
das
mov
add
adc
shlb
lock
ja,pn
adc
mov
pusha
mov
or
hlt
jo
inc
xor
pop
jecxz
pop
insl
pusha
es
add
pop
sub
stc
pop
cs
sub
ss
loopne
xchg
jno
sub
jg
pop
adc
test
cmp
mov
jnp
mov
add
stos
push
jge
adc
add
sbb
movsb
push
mov
or
sbb
or
scas
call
adc
jg
xor
jne
ss
call
repz
insb
or
stos
add
loope
scas
das
push
mov
xchg
mov
repnz
and
rolb
fidivrl
sbb
xor
sahf
ja
sbb
hlt
mov
leave
rolb
shr
adcl
jg
mov
ss
inc
test
div
testl
inc
adc
pop
mov
adc
push
nop
pop
leave
clc
fldl
and
f2xm1
push
jl
addl
sbb
hlt
push
add
aad
pop
sbb
loopne
in
add
hlt
ret
call
je
pusha
add
pushf
sahf
in
rolb
pusha
popl
push
dec
pop
and
mov
adc
xacquire
add
inc
mov
pop
jo
and
cmp
mov
pop
into
roll
xchg
mov
lcall
mov
inc
jge
roll
cmc
cs
je
xor
loop
sub
xor
jp
out
push
push
jmp
icebp
ss
push
xchg
add
incl
add
xor
in
pop
sbb
adc
push
or
add
adc
or
add
mov
in
pop
add
add
or
movsb
xchg
cmc
bound
loope
jne
cmpsl
cmc
fucomi
call
add
xchg
fs
add
nop
sahf
add
or
inc
ss
jmp
add
movsb
or
add
mov
cmc
xchg
or
shlb
jbe
mov
sub
or
jmp
mov
xchg
add
ljmp
sbb
ja
push
repnz
jo
mov
dec
push
xchg
int3
push
shl
test
stos
incl
sbb
jmp
xor
sub
test
or
subb
rolb
roll
push
push
cmp
divl
rcll
movsb
add
mov
jg
push
je
jle
je
xor
mov
cwtl
push
mov
mov
ror
movsl
fcomps
gs
mov
std
jg
cmp
add
pushf
fcomps
push
mov
les
and
adc
inc
inc
jecxz
and
mov
leave
fsubrp
test
hlt
shlb
lock
jecxz
scas
mov
fs
testb
fs
rcll
ja
pop
inc
sub
out
pop
lock
xor
push
dec
jge
repnz
pushl
loopne
adc
push
std
push
push
and
jno
mov
shr
mov
mov
pop
loopne
scas
jp
add
and
dec
pop
and
add
push
sub
test
xor
mov
cld
pop
cmp
push
xchg
inc
and
push
push
dec
nop/reserved
add
push
push
push
stos
dec
rcrb
fistpl
mov
call
adc
adc
xor
mov
incb
lock
adc
push
add
adc
les
or
subl
push
jne
jge
test
fcoms
lds
mov
mov
mov
loop,pt
and
sahf
inc
jne
jmp
pushf
bound
mov
nop
push
jbe
sbb
cld
pushl
and
sldt
jmp
or
push
rcll
jmp
and
call
jne
push
xlat
and
inc
xchg
inc
lock
mov
andb
mov
add
mov
cmc
pop
lock
push
mov
subb
pop
inc
or
mov
subl
fistpll
cmpsb
inc
lea
mov
inc
mov
dec
insl
sti
inc
fimuls
cmovb
or
subb
pop
sahf
outsb
xchg
mov
adcb
and
ror
xor
cmp
mov
add
out
call
incb
push
outsb
std
pushf
loop
add
add
loop
loopne
pop
in
lahf
push
ss
daa
cmc
jbe
pop
push
or
add
ss
sub
popa
xchg
sub
pop
test
lret
add
pop
sbb
cmp
jl
mov
lcall
enter
mov
std
xor
faddl
mov
add
loop
xchg
push
or
xor
dec
setb
test
mov
add
ds
les
inc
leave
dec
in
addb
pop
mov
es
add
jmp
jge
adc
and
push
push
cmp
movsb
pushf
icebp
adc
push
cmpsb
or
mov
ljmp
jmp
dec
jmp
sarb
lcall
cmp
xor
add
in
cmp
add
mov
test
orl
sbb
mov
inc
or
push
mov
int3
pusha
paddd
incl
pop
mov
pop
sbbb
push
xchg
js
adc
std
adcb
adc
subl
mov
add
fildl
mov
add
mov
aam
lea
sarb
add
or
js
pop
cmp
push
mov
or
out
arpl
push
or
mov
test
sbb
add
jge
jp
insl
clc
rolb
ds
inc
inc
add
sbb
mov
sbbb
js
or
inc
or
inc
cld
movd
gs
push
inc
lret
andb
cwtl
loopne
push
aas
fimull
ljmp
jge
inc
push
mov
sbb
nop
jbe
cmp
adc
inc
cli
inc
add
ljmp
jne
and
mov
scas
movsb
add
lret
xor
jg
dec
loop
or
sbb
fisubrs
mov
pop
hlt
adc
repz
sub
xchg
verr
js
inc
mov
sub
mov
fs
mov
int3
dec
lods
add
jo
mov
adcb
xchg
and
push
shlb
pop
xor
push
inc
push
jbe
clc
push
jp
roll
inc
xchg
inc
pop
dec
aam
xchg
mov
jl
xor
push
aam
mov
addb
inc
adc
inc
sahf
xor
pop
mov
rolb
push
nop
add
mov
lock
jmp
inc
nop
mov
shll
divb
xchg
inc
push
xor
jb
mov
loopne
mov
jae
scas
push
fwait
push
or
cli
dec
jge
leave
rcl
test
mov
mov
cmpsb
roll
push
sbb
cmp
rclb
mov
sbbb
xor
aad
push
add
lret
mov
mov
push
jle
std
or
push
bound
push
add
fisttps
in
mov
sahf
es
pusha
and
cmp
sbbb
push
sub
sbb
lods
or
push
push
push
add
addb
inc
push
and
outsl
mov
sub
js
pusha
or
push
or
loope
or
and
or
test
push
outsb
add
es
data16
adcl
nop
push
mov
rorb
push
ss
dec
dec
push
mov
add
incb
jo
push
addl
sub
loope
push
mov
lcall
jb
add
mov
and
es
push
rclb
xor
cmc
aas
nop
jb
in
inc
int
xor
ret
or
xchg
dec
out
pop
push
dec
mov
jbe
pop
mov
js
and
inc
pop
or
sub
dec
adcb
mov
push
and
clc
outsl
ja
icebp
test
sub
insb
or
and
adcb
lock
aam
lcall
cld
mov
inc
addb
rclb
loopne
fadd
cmp
sbb
pop
inc
les
inc
xor
mov
push
loopne
adc
or
adc
mov
xor
push
cli
loop
and
sub
jns
ja
out
inc
insl
xchg
mov
in
pop
movsb
mov
jecxz
call
jp
pop
add
sbb
outsl
and
add
sar
or
jge
sub
pop
roll
inc
fistps
cli
shr
out
sahf
aad
outsb
or
add
adcb
or
out
nop
js
and
pop
jbe
pop
pop
sahf
out
or
sbb
decl
sbb
push
push
inc
andb
jnp
fcmovb
scas
add
sub
inc
inc
push
jge
call
inc
inc
mov
sbb
adc
sbb
add
loopne
cmp
pop
shlb
dec
fwait
cli
divb
rcrl
outsb
rolb
and
pusha
lds
push
cltd
mov
data16
xchg
add
lcall
push
sub
or
loopne
outsb
mov
pop
test
and
add
loop
popa
mov
sbb
clc
das
add
xor
test
test
mov
cs
xchg
cs
ret
lea
js
sbb
pop
fistpll
lock
jecxz
lret
test
dec
cmc
stos
inc
loopne
cli
int3
js,pn
pop
or
cld
addb
outsb
scas
xchg
cmc
push
bound
mov
and
ret
mov
sahf
inc
scas
dec
jl
scas
cmp
loope
stos
sbb
shrb
cld
mov
in
rolb
cmp
shlb
xchg
popa
xchg
mov
cltd
mov
bound
push
or
add
daa
data16
and
push
inc
loopne
loopne
test
cwtl
stc
jno
mov
loopne
sahf
mov
loopne
jecxz
cmp
and
cltd
les
push
out
add
mov
sbb
xchg
or
or
mov
icebp
jg
push
sarb
roll
hlt
mov
sub
testb
adc
add
adc
mov
pop
std
jmp
hlt
loop
loopne
inc
sbb
dec
mov
and
rclb
add
sahf
mov
dec
popa
jnp
fstp
inc
loop
sbb
jle
loopne
insl
stos
push
ret
repnz
ret
lret
or
lea
push
jb
or
in
push
inc
lock
shrb
cld
rol
loopne
gs
mov
notl
mov
fiaddl
test
outsl
or
jle
loopne
rcrb
les
and
mov
fwait
in
adc
or
add
hlt
aas
push
movsb
mov
mov
push
cmp
push
jle
and
repnz
push
nop
inc
inc
insb
mov
les
sbb
push
insl
std
pushl
or
pop
in
arpl
xchg
lock
or
or
shl
add
push
shl
mov
pop
sub
in
jb
push
jecxz
sbb
dec
lock
inc
hlt
or
or
push
aas
and
lods
mov
cmc
sub
mov
push
xor
or
jg
mov
lock
jle
push
pop
and
push
inc
sub
mov
sub
jle
shlb
or
cmp
cli
add
bound
pop
shrb
cmpsb
pusha
xor
adc
or
xor
insb
jl
mov
and
out
lock
mov
pop
add
loope
and
icebp
xchg
push
jge
add
xchg
mov
out
mov
mov
mov
rcll
movsl
adc
xor
adc
inc
push
idivl
orl
mov
push
lds
scas
xor
inc
adc
mov
add
add
pop
pop
sub
test
inc
pushf
fs
jb
mov
stos
cmp
adc
xor
xor
push
mov
sub
mov
outsb
or
push
jle
pop
mov
push
jo
nop
adc
stc
inc
jnp
xor
jl
pop
mov
fldcw
lcall
leave
add
pop
jp
mov
jge
and
and
or
in
bound
mov
inc
pop
xor
scas
sbb
and
jnp
dec
push
ljmp
popa
push
inc
bound
adcb
jle
nop
in
lds
push
nop
call
into
adc
adc
add
rolb
shll
xchg
push
loopne
aaa
call
mulb
out
clc
iret
lock
into
js
add
nop
mov
add
adc
pop
hlt
adc
aad
mov
mov
adc
pop
cmc
repz
cmc
xor
mov
mov
pop
clc
out
adc
adc
sub
icebp
or
jp
push
addb
ret
or
test
mov
push
or
mov
scas
jp
and
stos
and
mov
sub
sub
push
jmp
push
nop
fcoms
push
sahf
out
adc
xor
push
push
test
add
pusha
pop
nop
push
jns
aaa
ss
adc
add
scas
and
add
ljmp
jecxz
lret
mov
adc
or
mov
pushf
push
adc
mov
xorl
inc
loope
loopne
jo
add
test
sbb
or
cmpsl
jne
push
dec
pop
adc
pushl
lods
xlat
sub
mov
or
xor
mov
push
cs
mov
xor
mov
push
mov
and
or
push
out
or
gs
je
lods
stos
call
sbb
loope
je
xor
test
cs
pop
xor
dec
mov
test
mov
sbb
add
mov
lock
ljmp
add
push
mov
cmc
frstor
sbb
cmovno
adcl
fcomps
jle
jo
and
push
cmp
push
nop
sbb
negb
rcrb
dec
nop
cs
or
mov
mov
sahf
pushl
and
pop
pop
shlb
adc
lret
xor
fcoml
pop
hlt
push
dec
add
scas
xor
out
xor
les
in
cmp
sbb
add
lcall
add
rolb
pop
int3
adc
popa
orb
pusha
mov
test
jo
fsts
rolb
bound
sub
and
shll
loopne
and
jg
notl
roll
add
out
mov
and
and
out
sub
shlb
jo
lods
sahf
mov
roll
lret
mov
mov
jg
fistl
xor
loopne
mov
call
sbb
fidivrs
cs
pusha
jg
aad
push
push
cmc
push
in
mov
nop
scas
add
shlb
mov
es
cmp
push
in
scas
outsb
cmpsl
and
jne
or
ror
pop
add
xor
mov
jmp
andb
pop
add
bound
dec
mov
into
inc
into
dec
mov
adc
and
add
mov
dec
mov
add
in
ss
ss
push
push
push
mov
or
test
repnz
jle
jmp
mov
daa
jl
lock
xchg
sbb
xor
sub
and
insb
xor
adc
or
call
fcmovb
mov
or
adc
imul
mov
les
xchg
lcall
adc
dec
ljmp
clc
into
add
add
jb
pusha
add
in
push
sub
add
jle
hlt
mov
pop
mov
mov
pusha
les
mov
out
mov
in
mov
rorb
mov
imul
roll
add
adc
stos
mov
loopne
mov
xor
and
add
test
clc
jle
daa
lret
call
ror
ret
aaa
stos
ficompl
xchg
pop
loope
mov
adc
lods
sbbb
or
and
mov
mov
push
push
xor
jae
test
in
push
notl
sbb
push
dec
ss
add
cmpsl
test
outsl
or
jecxz
sahf
add
xlat
push
in
ret
xchg
ss
lods
inc
fmull
out
decb
sub
ficomps
test
and
inc
adc
subb
xor
and
inc
mov
out
or
shll
test
and
sub
or
lahf
mov
aas
mov
adc
test
mov
ss
xchg
pop
mov
push
push
popa
rcrb
movsb
lret
jbe
cs
add
add
jl
stos
push
outsb
clc
and
jg
lret
pusha
xchg
pop
add
sbb
jae
inc
push
je
adc
and
shlb
xchg
adc
hlt
das
mov
mov
jb
push
repz
push
sahf
hlt
xlat
add
test
daa
add
and
xorb
inc
jle
mov
mov
inc
push
mov
adc
jcxz
ret
push
rorb
xor
add
jno
hlt
sbb
outsb
stos
hlt
pop
push
mov
pop
sbbb
jne
addb
jge
pop
lret
loop
dec
ljmp
inc
divb
xchg
incb
or
sahf
shrl
add
ret
inc
in
add
xchg
loopne
jbe
inc
push
les
add
cmp
fdivrl
loop
xchg
sbbb
adc
adc
fisttpl
stos
lock
adc
sbb
addb
icebp
adc
adcl
add
cld
out
or
ret
into
xor
jg
rorb
roll
daa
inc
add
xchg
mov
shlb
mov
cli
xchg
lods
push
or
push
inc
pop
add
in
cli
jge
add
cmc
adc
shlb
and
pop
icebp
add
jae
sbb
add
push
mov
clc
sbb
cmp
xor
lock
adc
fwait
cmp
daa
dec
loop
adc
or
mov
or
pop
mov
insb
add
andl
xor
cmpsb
sbb
cmp
cmp
jle
in
inc
scas
scas
xor
xor
sub
popa
add
jg
rol
mulb
xorb
lcall
pop
mov
cwtl
and
cmpsb
lret
xor
sub
loopne
xor
adc
ja
add
mov
push
out
add
cs
jb
jbe
adc
xor
xor
outsl
and
cmpsl
mov
push
rclb
or
add
add
outsb
push
ljmp
test
test
lret
loopne
mov
xchg
mov
inc
or
inc
push
or
mov
pusha
pop
decb
mov
es
test
sbb
pop
xorb
das
add
dec
push
loopne
nop
fwait
loopne
pop
mov
jae
mov
jl
push
or
or
shl
cli
loopne
sub
add
mov
adc
xor
inc
sbb
subb
mov
jecxz
adc
out
loopne
mov
sbb
je
mov
cmc
or
push
cmpl
adc
xchg
popa
aaa
mov
adc
lods
sbb
out
add
pushl
or
mov
lret
ja
ds
pop
pushf
inc
mov
mov
pop
sub
adc
shlb
or
sub
or
mov
xor
xchg
inc
xsha256
cmpsb
inc
mov
pop
mov
or
aaa
and
ja
test
aaa
push
cmp
push
xchg
hlt
sub
hlt
inc
stos
add
lcall
fs
dec
adc
bnd
dec
add
sub
mov
dec
in
das
cmp
push
xor
lock
push
dec
cmp
or
adc
push
mov
rolb
dec
sub
shlb
jo
addl
pushf
cli
sarl
push
jecxz
jecxz
push
insb
xchg
cmpsl
inc
andl
dec
call
cli
xor
scas
add
mov
pop
mov
popf
add
sbb
call
add
sahf
xchg
inc
sub
push
mov
mov
lds
cmp
and
rorb
test
xor
xchg
incb
jmp
fisubs
add
mov
cmp
add
add
cltd
sub
or
xor
add
and
push
aad
cwtl
shlb
mov
ret
jo
loop
or
add
push
adc
call
pop
test
pop
sbb
daa
inc
push
cmp
cli
push
mov
mov
jp
fildl
decb
loopne
idiv
lcall
pop
cmp
int
inc
cmp
cmp
fcmovbe
sbb
and
cmp
fcomip
ljmp
and
and
adc
inc
xor
and
mov
inc
cmp
into
inc
stc
jae
pop
jo
inc
inc
jg
jg
mov
insb
out
pusha
and
push
mov
fisttps
mov
push
adc
sahf
aas
push
adc
and
pop
adc
fbstp
mov
jmp
mov
dec
xchg
shlb
pop
push
mov
mov
call
add
mov
adc
lock
mov
ja
mov
mov
adc
sbb
aaa
in
stos
push
or
fnstenv
imul
push
jge
jnp
stos
mov
xchg
adc
or
and
in
xchg
push
mov
fistpll
notb
test
push
adc
adc
sahf
aaa
push
cmp
mov
xchg
fstpl
add
push
adc
rcrb
mov
out
gs
mov
adc
sahf
cmp
push
int3
mov
in
int
sub
xor
loope
xor
cmovns
cmp
mov
scas
test
out
arpl
or
dec
loopne
add
arpl
and
adc
in
inc
inc
cld
sbb
add
lock
roll
test
mov
mov
mov
insl
ljmp
inc
push
mov
adc
subb
pop
dec
rorl
hlt
add
inc
pop
cld
add
pushl
mov
push
lretw
test
lock
adc
adc
in
cmp
add
adc
bound
mov
and
xchg
push
mov
std
mov
sarb
sub
mov
jge
mov
pop
mov
inc
or
push
dec
outsl
jle
xor
fiadds
call
arpl
jg
add
or
jbe
subl
frstor
pop
mov
movsl
test
rclb
jb
fwait
rol
mov
cwtl
mov
jg
sbb
and
inc
outsb
xor
stos
orb
jl
outsl
decl
cltd
adc
and
loopne
and
mov
add
jbe
cmp
cli
xor
and
shll
outsl
fsubrs
lock
inc
xor
add
push
decl
mov
push
cmp
scas
loopne
ljmp
jg
add
mov
xchg
jo
push
rorb
pop
mov
jg
hlt
push
lcall
in
xchg
jb
cmpl
lret
push
shld
sub
mov
inc
sub
sub
and
les
stc
loop
cmp
push
adc
loopne
and
add
lods
cmp
xor
adc
pop
push
mov
sub
mov
push
or
mov
mov
or
xchg
rolb
push
jo
insb
pop
push
lock
adc
rorl
cmpsl
push
decl
loopne
jl
in
test
shll
mov
push
fldl
pop
adc
mov
mov
push
mov
ret
jp
mov
and
adc
mov
jne
stc
pop
xor
lock
pop
ljmp
sti
mov
out
dec
js,pn
cmpsl
add
cs
loop
mov
rclb
loopne
ds
nop
push
shlb
jmp
xchg
pop
ret
push
add
rolb
jg
test
mov
xchg
mov
mov
cs
pusha
outsb
sbb
fistpl
xchg
inc
add
cmp
push
or
sbb
jb
loopne
add
add
add
mov
scas
push
mov
add
mov
xor
int
mov
ljmp
stc
divl
outsb
hlt
add
pop
fimuls
jg
add
icebp
adc
adcb
xor
xchg
mov
mov
or
sub
insb
clc
inc
xchg
sbb
pushf
js
push
add
hlt
lea
sub
sub
sub
in
mov
push
adc
lret
and
xor
cmp
adc
inc
add
daa
sub
and
xorl
cld
add
out
rol
pop
add
push
lret
aaa
push
add
es
aaa
xchg
and
jg
shlb
bound
push
or
adc
adc
cmp
mov
test
fdivl
inc
push
add
cmpsb
adcb
mov
outsl
pop
pop
imul
insb
jne
mov
outsb
dec
mov
pop
popl
mov
cmpsb
mov
loopne
inc
mov
mov
ss
jp
pop
sub
add
loopne
sbb
pop
rclb
loopne
push
xchg
jo
or
sbb
cmc
sub
xor
cmp
ret
xchg
adc
adc
decl
outsb
sti
cmpl
adc
xchg
insb
cmc
insb
inc
sub
xchg
fisubl
lock
add
insl
cwtl
mov
sahf
popa
mov
cmp
xchg
loope
lret
mov
aam
cli
dec
ret
sub
add
aam
push
scas
aam
add
ljmp
push
enter
xor
xor
fldl
sbb
xorb
or
jo
stos
loope
xchg
or
push
pushf
int3
ja
stos
mov
jp
mov
test
pusha
add
hlt
ljmp
ret
and
xor
sub
ret
lcall
sbb
sbb
add
add
cmpsb
push
cld
mov
mov
js
pushf
jo
sbb
movsl
out
xor
dec
or
leave
pop
push
push
mov
stos
pop
xor
pop
andl
add
or
or
test
sub
aad
mov
call
pop
lock
rolb
or
inc
ss
ss
int3
dec
mov
jnp
adc
filds
sub
cmpps
mov
fcomi
inc
push
ret
cmpsb
les
testl
sbb
cmp
mov
addb
outsb
adc
shlb
inc
xchg
fcomi
jg
sbb
jae
testb
mov
mov
idivl
cmpl
push
or
sbb
fisubrs
imul
xor
pop
testl
push
sbb
inc
daa
jne
cli
lds
jbe
adc
sbb
add
fadds
mov
mov
jl
rolb
cmp
adc
out
test
mov
rclb
cmpsb
jmp
add
jnp
push
or
or
pop
add
adc
outsb
cli
sbb
addb
push
je
ret
or
cmc
rorb
push
dec
orl
dec
inc
jnp
mov
arpl
mov
cli
sub
into
inc
aam
scas
inc
ret
testb
scas
push
into
sarb
pop
mov
addb
mov
push
push
in
or
scas
sahf
ss
xchg
cs
add
rolb
jbe
sar
loop
adcl
inc
pop
cltd
xor
pop
or
les
or
das
add
xorl
loopne
xchg
iret
clc
jg
pusha
push
insb
push
jge
dec
sub
shlb
sbb
aaa
mov
xchg
fnstsw
add
push
adc
clc
xorb
sbb
add
stos
or
add
push
inc
and
mov
adc
pop
es
jg
pusha
push
popa
sub
jb
adc
outsl
cmpsb
mov
adc
or
fiaddl
adc
dec
inc
dec
mov
cli
or
mov
add
dec
fsubs
inc
push
sub
dec
cs
dec
cld
test
js
andl
cmp
sub
push
pop
push
dec
pusha
or
movsb
or
jmp
cmp
loop
add
incl
jg
aaa
add
loopne
cli
cmpsb
lods
cmp
adc
jg
rol
adc
sbb
mov
ja
add
out
and
pushl
cmpsb
inc
and
addb
and
pop
cmc
inc
adcl
rorb
nop
ja
shrb
xor
add
and
mov
push
mov
mov
xor
repnz
rol
add
mov
xor
into
lods
ret
xor
in
mov
push
lds
sbb
xor
stos
inc
adc
inc
pop
mov
mov
shlb
orb
movsl
leave
xor
or
addb
loop
fldenv
and
jg
dec
push
or
shl
xor
cmpsb
jbe
sahf
and
and
push
jo
or
xor
scas
out
pusha
xor
pop
rolb
jp
lea
add
aas
xor
es
inc
cmpsl
mov
test
mov
inc
and
sahf
stos
mov
lock
add
or
cmp
dec
pop
inc
push
and
inc
pop
inc
je
mov
and
dec
sbb
icebp
add
add
adc
pusha
xchg
push
or
mov
inc
pop
and
lock
nop
movsb
pop
push
push
jecxz
adc
and
clc
ret
cli
jecxz
push
dec
cltd
cmc
clc
nop
add
adc
ja
pushf
cld
mov
js
stos
adc
adc
and
sbb
xor
add
enter
push
pop
cmp
mov
mov
outsb
scas
add
add
nop
into
push
iret
sub
lock
and
mov
cwtl
mov
push
jnp
mov
orb
push
cmp
pop
mov
push
test
or
jle
add
or
jecxz
shlb
add
test
push
sbb
dec
shlb
adc
adc
xor
repz
or
mov
sbb
xchg
lods
pusha
and
in
pop
jo
push
rolb
hlt
pusha
incb
sbb
stos
xor
bound
fldl
push
ficoml
ljmp
sub
mov
pushf
xchg
add
loopne
rcrb
mov
dec
jno
push
adc
add
test
xor
cmp
inc
xlat
jno
adc
ljmp
or
out
dec
mov
in
test
add
test
test
ret
andb
movsl
pop
sbbb
andb
or
and
rorb
add
xchg
mov
and
jo
test
in
pop
mov
lea
and
pop
icebp
adc
and
push
xchg
movsl
push
test
sub
fbld
push
and
and
loop
and
mov
insb
rcrl
push
jae
mov
add
out
add
jo
in
inc
les
lock
andl
test
pusha
neg
xor
imul
add
stos
addb
ret
lock
sbb
push
sub
pop
sbb
pop
mov
lock
and
rcrb
sar
push
and
sahf
pop
loopne
jo
fbstp
fsubr
xchg
push
cmpsl
and
bound
or
xchg
ret
je
clc
mov
jge
adc
in
pusha
adc
aaa
push
stc
dec
xor
sub
xchg
mov
push
sbbl
add
xchg
jl
mov
sarb
out
in
inc
call
ret
enter
add
filds
lock
add
testl
mov
add
je
mov
xchg
add
xor
dec
push
mov
xor
xchg
or
mov
paddd
ja
rcll
pop
mov
xchg
nop
or
jg
mov
cmpsb
icebp
inc
pop
adc
cmp
je
mov
mov
outsb
adc
sbb
incb
clc
xchg
jbe
flds
inc
add
add
push
or
mov
mov
xor
repz
rcrb
scas
jmp
xchg
cmp
nop
aaa
mov
cmp
pop
push
adc
or
mov
mov
in
jbe
sub
lcall
cmp
icebp
sbb
adc
nop
or
mov
clc
mov
dec
test
sbb
lods
idiv
hlt
xorb
lar
inc
std
out
sub
push
sbb
or
mov
ljmp
enter
outsb
mov
je
mov
rorl
mov
adc
and
sbb
push
sub
cmpsb
jne
xor
mov
fcompl
fcomps
mov
push
sahf
pop
inc
movsb
int3
mov
push
or
xchg
mov
adc
push
adc
mov
clc
out
pop
lods
adc
mov
lret
mov
scas
pop
lods
fsts
mov
mov
add
or
push
or
lret
lods
lret
repnz
lret
push
inc
leave
pusha
adc
js
xchg
mov
inc
adc
ss
mov
dec
inc
icebp
mov
fidivs
fiaddl
iret
xor
lret
cwtl
enter
fcoms
sti
jnp,pt
jmp
lret
jae
mov
add
xchg
pop
add
neg
jbe
pop
sti
decl
jmp
or
icebp
mov
adc
ljmp
dec
daa
clc
sahf
inc
mov
sub
dec
idiv
pop
and
pop
andb
test
loope
jge
rclb
test
adc
ljmp
pop
bound
jg
filds
fs
mov
fisttps
pusha
add
sbb
ret
add
sbb
jnp
mov
mov
cmp
call
rcr
sbb
dec
sbb
inc
mov
or
fdivrl
loop
mov
cld
xorb
sbbl
jmp
inc
inc
les
out
aad
repz
mov
xorb
adc
adc
mov
and
mov
mov
add
ja
pop
clc
mov
adc
mov
or
jb
scas
add
cmc
mov
xchg
push
ljmp
pop
jo
and
movsl
stos
xor
sbbb
scas
cmpsb
jo
fstpl
popf
movb
add
ljmp
xorl
and
add
xor
inc
std
mov
fisubs
mov
stc
add
push
fs
adc
bound
pop
inc
cmp
adc
xor
add
mov
notl
jle
cmp
insb
adc
mov
and
mov
lods
shlb
or
pusha
add
ret
loopne
mov
clc
jg
sbb
insb
mov
inc
popa
add
out
and
push
int
push
add
jbe
push
push
shl
adcb
nop
pop
in
in
jecxz
sarb
add
test
loopne
rol
sbb
loopne
jne
add
push
push
push
jecxz
dec
cmpsb
cmpsl
jno
in
cld
int
lds
faddl
cld
test
dec
imul
aam
push
mov
sub
jbe
adc
jle
clc
insb
xchg
add
cmp
int3
inc
mov
int
test
movsb
fbstp
jl
or
push
xchg
mov
mov
fucom
sbb
mov
add
pop
mov
jl
insb
fistl
mov
sti
mov
nop
test
sub
push
xor
mov
int
and
push
aam
mov
and
add
pop
mov
hlt
sbb
popa
mov
cli
addl
push
cmc
in
pop
add
add
cli
jmp
jl
in
inc
xor
icebp
jl
cmc
dec
sbb
shlb
test
aam
pop
push
xchg
loope
pop
shrb
in
add
fimull
sub
or
or
push
and
xchg
test
ljmp
add
jns
xchg
jbe
lret
fmuls
inc
and
decl
mov
push
in
or
mov
fcomip
jbe
add
xchg
addb
add
cmp
xor
in
loop
dec
cmp
and
pusha
adc
mov
push
add
and
jne
or
fiaddl
mov
xchg
sbb
push
pop
inc
scas
decl
add
ret
lcall
mov
xchg
cmp
pusha
cwtl
cs
add
mov
mov
xor
cmpsl
mov
push
and
jbe
test
ljmp
push
xchg
add
shr
xor
mov
imul
mov
push
mov
push
add
addl
cmc
clc
dec
shlb
lret
pusha
xorb
push
test
xchg
pushf
xorl
pop
xorl
outsb
shlb
and
mov
test
mov
in
roll
dec
and
push
cmpb
int3
or
and
and
in
lds
add
int
decl
fstl
lret
cli
add
in
xorb
adc
xor
lock
push
inc
mov
jle
loopne
hlt
fists
xor
dec
inc
add
pop
inc
sbb
dec
arpl
jge
scas
dec
gs
or
xchg
jg
pop
sub
and
xchg
mov
sbb
addb
add
mov
dec
rolb
cmc
adc
add
les
mov
jae
inc
loopne
push
scas
ss
sub
inc
int3
push
or
mov
pop
shll
and
xor
push
adc
add
mov
loop
push
mov
or
ret
jg
and
clc
or
mov
inc
sub
inc
xchg
sub
mov
sub
mov
das
test
cli
mov
sbb
mull
mov
in
pushf
sub
cmp
sarb
sbb
jae
pusha
and
in
inc
les
jle
lds
adc
dec
mov
pop
mov
sbb
inc
mov
je
lret
cld
ret
pop
xchg
add
and
and
cmp
and
lret
and
push
pop
push
mov
add
sbb
and
loop
aaa
pop
sbb
fucomi
test
inc
or
mov
cld
pop
jae
testb
push
pop
add
sbb
mov
and
pusha
sbb
dec
lock
push
xchg
dec
in
into
and
push
mov
pop
je
jge
frstor
fldenv
or
jl
mov
addb
sbb
mov
and
aam
sbb
adc
pop
outsl
mov
int
cli
pop
sub
mov
inc
sahf
pushf
pop
adc
daa
dec
xor
cmp
adcb
xor
mov
sbb
addr16
dec
dec
add
adc
push
pusha
pusha
repz
lret
jo
pusha
pop
jne
pusha
test
mov
adc
lcall
lret
lock
add
jbe,pt
hlt
mov
shlb
push
call
loope
dec
xchg
ret
sbb
or
ret
xor
adc
push
divb
and
mov
rdtsc
add
es
adc
adc
jl
and
das
add
sub
bound
xor
cld
sub
faddl
pusha
add
shlb
push
push
hlt
andb
cmp
mov
sub
mov
fstl
push
xchg
mov
cmpsl
jo
add
and
dec
sbb
push
adc
mov
stos
push
mov
inc
or
test
sbb
mov
xchg
loop
sub
or
adc
out
sbb
mov
negl
mov
jbe
popa
movsb
sub
add
scas
test
mov
mov
addb
inc
call
loopne
movsl
and
pop
mov
lret
add
cmpsb
mov
add
jb
stos
add
sub
nop
mov
aad
dec
scas
adcl
pop
xchg
js
loop
xchg
ljmp
adc
jnp
mov
jmp
mov
and
dec
xor
loopne
and
enter
mov
fmull
xor
pusha
aad
sub
add
loopne
sahf
add
or
cld
arpl
mov
push
and
fidivs
insl
stos
sub
add
jp
add
push
outsl
add
mov
push
mov
push
out
shlb
sbb
add
ret
ss
cli
xchg
les
push
int3
mov
push
test
mov
loope
enter
or
xchg
inc
add
fs
push
pop
out
add
lds
push
sbb
xchg
xchg
jo
jb
jo
les
cmpsb
popa
jle
dec
hlt
inc
test
xor
loop
mov
lds
mov
rolb
ficompl
push
ljmp
add
mov
mov
push
call
or
mov
iret
adc
jnp
xor
adc
jo
out
test
int
icebp
sub
idivb
in
xchg
add
add
pop
jg
xor
orl
push
add
sub
nop
add
or
push
xchg
out
lods
es
adc
andb
sbbb
orb
dec
add
xor
les
rolb
shrl
repz
xchg
push
lret
test
push
dec
or
std
mov
xor
push
and
pop
mov
sub
mov
adc
inc
pop
add
mov
add
and
loop
add
sub
add
sbb
mov
jne
sahf
dec
ljmp
adc
addl
sbb
mov
mov
das
xor
inc
fs
jg
test
add
push
xor
cld
mov
cpuid
rorb
push
ret
sub
xchg
jo
mov
andb
adc
add
add
lods
std
jg
bound
movsb
mov
adc
decl
ss
pop
push
jb
es
or
or
adc
xlat
mov
cmc
inc
mov
cmp
mov
pusha
xchg
loop
sbb
and
les
xor
xchg
add
inc
mov
shll
pop
dec
popa
pop
shll
es
fisubrs
pop
sbb
push
push
mov
cld
ss
dec
mov
jmp
nop
add
jp
aad
je
movsb
or
or
andb
push
pop
or
ret
xor
dec
inc
jecxz
add
cmp
or
inc
stos
loopne
sub
add
xor
and
nop
cs
ret
fsubs
nop
sub
cmc
cs
xchg
and
and
aad
test
sbb
out
loopne
or
repnz
dec
adc
push
sbb
out
sub
jnp
mov
lock
jecxz
cmp
fmuls
inc
cmp
vcvtqq2pd
movsb
fbld
push
lea
sbb
rcrl
sbb
cmp
mov
cld
add
dec
push
sbb
mov
sub
mov
inc
cmp
es
rcr
shrb
push
adc
and
push
mov
add
es
mov
pop
and
or
cmp
mov
xchg
decl
aas
testb
xchg
inc
push
xor
lock
mov
out
cli
pusha
push
int
xchg
push
pusha
shlb
je
sti
push
fadds
and
rclb
cltd
ds
loopne
movsl
mov
enter
movsl
ljmp
test
out
cld
mov
mov
cs
daa
adc
data16
jp
inc
lds
jae
ja
repnz
sbb
jno
mov
mov
adc
mov
aad
sbb
stos
mov
fs
mov
lea
repnz
addl
pop
rolb
pusha
test
les
dec
cs
es
jg
add
test
xor
push
xorb
ljmp
jge
mov
mov
add
or
xchg
push
pop
sbb
clc
inc
or
adc
jge
and
jnp
mov
ja
add
sbb
adc
jl
pop
icebp
sbb
pop
push
add
nop
sub
test
data16
aaa
repnz
test
clc
inc
mov
cmp
test
sahf
jae
cli
ljmp
push
inc
sub
add
aam
int3
sub
loop
sub
imulb
or
and
or
push
push
lods
jno
xchg
or
pop
jo
loopne
stos
sbb
mov
cli
movsl
fimuls
cld
mov
add
ljmp
lcall
push
pop
out
cmp
add
xchg
push
add
sub
test
adc
xor
repnz
cmp
add
and
xchg
push
aad
loopne
cli
shlb
jl
xor
or
sbb
xchg
push
aad
add
pop
inc
out
nop
lss
and
leave
add
add
mov
test
add
shl
fdivl
add
dec
dec
push
mov
jp
add
cltd
dec
mov
xchg
test
add
pop
and
and
hlt
push
push
pusha
andb
nop
and
out
add
mov
inc
fmuls
cli
dec
push
adc
cli
or
mov
cli
pushf
adc
pop
add
jl
pusha
cli
popa
loopne
sti
jge
jne
movsb
out
xor
test
shll
addl
hlt
out
out
inc
fnstsw
imul
enter
scas
cmc
pusha
push
add
xorb
inc
mov
pop
dec
data16
or
pop
nop
push
xchg
stos
mov
mov
sarl
sub
cli
out
mov
lret
sub
push
nop
fisubs
or
fiadds
mov
adc
out
call
cmpsl
dec
push
pop
add
sbb
push
and
mov
rcrb
enter
cmpsb
cmpsl
mov
js
aas
and
movsl
mov
dec
push
fs
ss
scas
xor
adc
mov
cmp
cli
and
cmp
test
pop
movsb
pop
dec
loopne
jo
or
pop
mov
jg
pop
test
adc
bound
xchg
nop
clc
push
xchg
mov
add
adcl
lret
xor
jne
nop
cld
dec
add
subb
roll
push
or
jb
repnz
mov
loopne
adc
cmp
push
mov
sbb
inc
mov
or
jle
push
rclb
das
sbb
push
insb
sbb
add
xchg
inc
xor
cmp
push
rolb
sbb
pop
dec
pop
jg
add
sub
out
mov
pop
std
aas
mov
shl
push
add
add
loop
lock
mov
xchg
jge
mov
out
add
ljmp
and
sbb
lods
cltd
test
cmpl
or
inc
lea
pusha
stos
inc
cli
jo
add
or
je
push
lock
jl
pop
shrb
mov
decb
sub
les
and
cmpsl
adc
out
add
test
dec
or
lock
pop
enter
cld
les
lret
pop
mov
push
sahf
out
cmpsb
sub
lea
repnz
repnz
xor
icebp
shlb
insb
lret
add
fildll
jae
xor
xchg
cmpsl
sbb
mov
jnp
lds
lods
into
mov
pop
adcb
add
test
into
repnz
xor
pop
out
pop
fs
cmp
int3
push
mov
inc
loop
mov
jmp
mov
add
test
adc
xor
add
sbbb
pusha
ljmp
mov
adc
lret
iret
es
mov
add
mov
xor
jno
wbinvd
pop
push
jge
outsb
and
or
pushf
loop
mov
js
lock
or
push
xchg
sbb
std
mov
or
push
pop
loop
subl
add
cli
push
adc
add
es
jo
add
add
mov
loop
inc
mov
lahf
pop
negb
outsb
mov
enter
add
add
pop
shr
jge
sbb
inc
cmp
shlb
cli
jae
cli
xchg
ret
mov
add
inc
dec
and
inc
cmp
inc
xor
pop
inc
repz
or
mov
mov
dec
push
ffree
addb
add
andb
scas
xchg
addb
out
ret
add
sub
mov
pop
lret
mov
test
test
cmc
sub
mov
push
inc
pusha
sub
sarb
adc
lcall
jne
mov
add
mov
movb
out
inc
daa
pusha
insl
cmp
pop
rclb
dec
daa
into
lret
push
mov
sub
andb
or
mov
jnp
lock
les
test
xchg
jge
push
inc
test
insl
or
push
inc
rclb
shlb
mov
mov
aaa
adc
xchg
mov
or
fwait
push
push
sbb
inc
xor
arpl
add
or
enter
js
mov
shrb
lret
jnp
pop
pop
in
rclb
or
fs
mov
ret
xorb
or
pusha
movsb
enter
test
jg
roll
jne
push
out
sbb
cli
test
add
js
push
dec
push
dec
out
ss
call
mov
scas
or
out
mov
iret
ss
sub
ss
inc
xchg
pop
mov
sub
mov
ret
sub
aas
xor
jbe
mov
stos
add
stos
leave
mov
mov
sar
adc
enter
cltd
and
dec
adc
and
bound
into
jbe
test
fcmovbe
sub
jmp
fdivr
mov
pop
loopne
ret
arpl
shrl
loop
push
rolb
xor
loop
pushf
clc
shlb
jle
out
fdivrp
push
inc
sbb
add
jbe
push
out
add
ljmp
and
xchg
jecxz
test
adc
and
cmpsb
cmpsb
imul
mov
imul
sbb
shrl
xchg
mov
adc
add
add
jg
mov
adc
and
jg
ljmp
mov
dec
outsb
xlat
add
mov
popa
add
std
jnp
fsubrs
data16
mov
es
mov
sbb
inc
sub
iret
loopne
loopne
adc
aam
sbb
sub
mov
sbb
sbb
adc
imul
jb
es
pop
stos
xchg
mov
cmp
mull
inc
jb
cli
popa
and
es
mov
xor
not
add
repz
rorb
inc
sbb
out
loope
std
lock
fucom
sbb
push
mov
push
js
lock
inc
and
sahf
loope
push
jbe
icebp
and
dec
call
sahf
jp
scas
mov
push
and
mov
add
callw
subb
sub
or
or
xchg
push
pushf
cwtl
subb
mov
subb
push
dec
push
cs
jge
xor
lods
inc
sti
data16
or
mov
sbbb
pop
or
in
shll
or
cmpsl
jle
test
out
jo
mov
lods
sbbl
mov
loope
add
xchg
loopne
ret
lock
test
movb
inc
xlat
add
jno
adcl
jne
push
jmp
cwtl
mov
int
mov
mov
in
adc
cli
lods
or
loopne
addl
insb
std
dec
rolb
insb
clc
mov
incl
repz
sbb
sti
jno
add
and
rolb
inc
lret
mov
in
stos
fidivrl
adc
shl
sbb
rolb
inc
and
mul
add
fimull
mov
cmp
cmp
jb
xchg
mov
test
and
dec
inc
cmp
ljmp
rcr
loop
fidivs
rcrb
jmp
pop
rolb
loope
jl
xchg
subb
ljmp
or
sbb
icebp
stos
and
scas
xor
push
pushf
subl
shlb
add
or
loope
sub
sbb
int3
or
dec
dec
push
cmc
jnp
int3
cmc
shlb
inc
mov
or
jbe
js
sub
test
rolb
add
cld
or
jle
jbe
pusha
add
add
or
in
icebp
pop
push
nop
subb
leave
fdivl
dec
cld
mov
xchg
add
arpl
jl
and
xor
ret
inc
add
jg
icebp
xchg
xor
fmul
loop
pusha
or
or
mov
or
rolb
pusha
pop
sbb
out
adc
or
push
loopne
popa
or
mov
push
pusha
add
adc
cmc
or
push
test
mov
sub
mov
ljmp
push
add
je
xor
inc
jo
cltd
test
icebp
ficompl
mov
and
cmpsb
inc
pop
adc
push
pop
bound
push
sbb
jecxz
jno
adc
mov
or
test
pushf
imul
push
loopne
push
int3
rolb
std
mov
outsb
mov
loopne
push
movsb
cmpsl
pushf
pop
mul
add
sub
test
fmull
and
out
inc
cmc
mov
push
ja
fdivp
rorb
or
jle
mov
rcrl
sbb
mov
rolb
mov
pusha
lock
dec
stos
popa
es
adcl
inc
jb
dec
jae
loopne
fbld
bound
nop
ficoms
push
scas
adc
dec
mov
movsb
aam
fwait
lock
jp
ljmp
into
push
testb
adc
or
jns
jns
xor
jb
mov
sbb
xor
lock
fiaddl
push
mov
jg
jae
or
push
loope
and
mov
adc
push
push
pusha
rolb
xlat
sahf
repnz
or
or
adc
and
mov
push
xorl
or
jno
jne
sub
add
inc
andl
inc
or
push
and
adc
aam
adc
rolb
ficoms
or
fbstp
cld
and
out
push
data16
loopne
or
sub
inc
scas
sub
adc
frstor
xor
or
dec
sbb
roll
pop
fsubs
in
add
pop
nop
sbb
inc
dec
les
rcll
push
inc
dec
mov
ret
add
outsb
ds
js
mov
outsb
jl
das
icebp
nop
mov
and
dec
and
cmpsb
mov
cmp
xor
stos
lcall
mov
mov
mov
mov
pop
or
xchg
add
inc
pop
mov
movsb
add
popa
inc
xchg
mov
mov
dec
add
loope
mov
push
mov
cmpl
add
idiv
mov
clc
add
add
orb
loopne
adc
or
in
ljmp
and
mov
add
sbb
push
adc
orb
das
push
sbb
nop
pop
adc
cmp
dec
inc
lock
mull
inc
das
xor
mov
mov
add
add
cmpb
insl
push
out
sbb
ds
add
push
push
dec
or
sub
dec
out
cmpsl
push
mov
es
orb
mov
push
rcrb
push
adc
add
sbb
mov
ja
mov
push
mov
ljmp
push
xchg
cmpsb
pushf
mov
pop
fdivs
and
add
pop
mov
jo
scas
and
pop
adc
sbb
pop
cmc
jge
adcl
and
stos
sbb
xor
add
lods
push
cmc
rcrl
push
jb
shrb
xor
dec
adc
inc
xor
aaa
sub
push
adcb
scas
nop
adc
push
test
or
push
dec
cmpsl
loope
inc
push
or
adc
cmpsb
scas
scas
subb
movsl
sahf
push
faddl
push
sub
adc
notb
mov
shll
add
sub
jno
add
loop
add
or
push
push
das
rorb
sbb
jnp
loope
cs
push
or
xor
jno
loope
outsl
jae
push
loopne
cmc
movsb
sti
outsl
jg
sbb
mov
lret
repnz
mov
mov
mov
pushf
and
pop
jno
andb
pop
add
ljmp
sahf
xor
loopne
lock
mov
fs
adc
nopl
adc
add
mov
and
or
add
mov
push
pop
add
gs
popa
add
xchg
or
fldl
fcoml
cltd
movsb
nop
jle
or
dec
mov
inc
add
inc
xor
inc
in
push
ret
ljmp
ljmp
pushl
add
out
pushf
add
add
adc
hlt
and
and
fidivrl
sub
daa
inc
add
clc
out
adc
iret
addb
sub
stc
jge
int
push
ja
mov
mov
in
movb
sar
jo
or
jg
bound
mov
jecxz
pop
inc
cmp
fnstsw
ja
jbe
cmp
sub
jg
mov
test
fisttpll
lret
add
sbb
inc
stos
add
xor
jmp
mov
mov
add
fstl
stos
fadds
adc
loopne
stc
je
out
arpl
mov
sub
ret
repz
or
jmp
ja
pop
xchg
and
mov
andb
mov
in
mov
sbb
cmp
push
lcall
add
add
lods
add
test
push
xchg
repz
sub
inc
shlb
mov
push
insb
gs
mov
and
daa
pop
fnstsw
test
add
add
ds
enter
std
xor
push
inc
lea
sub
sbb
adc
add
xchg
push
xor
or
sbbb
iret
pop
jge
push
aam
and
std
pop
mov
les
jbe
scas
in
bound
add
cmc
add
and
addl
sub
clc
pop
mov
cwtl
out
int3
in
add
data16
adc
insb
rolb
lock
insb
dec
movsl
and
xor
pop
add
inc
bound
dec
dec
add
dec
and
or
push
xor
mov
out
add
int3
mov
ss
add
inc
jnp
lea
push
cmpsl
lods
mov
pop
addl
repnz
orb
test
mov
jbe
jecxz
push
ljmp
add
leave
or
inc
andb
xchg
push
out
mov
rcll
cli
addb
or
inc
xchg
or
cwtl
add
mov
or
pop
js
pushf
out
jnp
es
sti
call
or
inc
aaa
mov
mov
adcl
call
inc
bound
and
ds
push
xor
subb
popa
push
in
dec
add
addr16
and
jbe
adc
mov
pop
clc
addb
icebp
jge
roll
xchg
sub
sbb
mov
out
notb
add
pop
xor
js
add
je
sarb
fdivl
add
in
add
xchg
sbb
lret
mov
ret
repnz
into
sub
push
ljmp
cmpl
sarb
orl
sarb
xor
filds
ss
in
jp
clc
negb
inc
nop
pusha
or
out
add
scas
int
jecxz
mov
sbb
push
data16
dec
adcb
test
das
mov
lcall
sbb
pop
jne
push
lods
stos
adc
stc
rclb
mov
sub
sub
mov
ret
add
xchg
sub
cmpsl
or
inc
add
mov
popa
jb
inc
aas
sbb
cmp
add
push
flds
mov
stos
aas
add
jmp
js
outsl
push
add
push
dec
insl
stos
pusha
add
cltd
lret
call
leave
add
dec
stos
adc
sub
lods
rorb
jo
pop
jbe
pop
and
sarb
sbb
mov
decl
jo
inc
add
aaa
std
jge
test
sbb
jo
lcall
or
jne
sub
popf
cli
ja
cs
add
cmp
pop
pop
dec
jp
inc
adc
rcll
scas
dec
add
outsl
pop
hlt
lcall
loop
sarb
push
cli
mov
bound
mov
shll
or
cmp
les
mov
xor
orb
loope
test
insl
loopne
fcomps
add
shlb
add
das
jl
ljmp
mov
push
jg
sub
inc
adc
pop
xchg
mov
add
push
jp
inc
pop
sub
mov
sub
mov
xor
pop
loop
out
outsl
sarb
sub
sti
or
and
addb
pop
sub
clc
xchg
mov
pop
ficompl
push
test
xchg
imul
lret
int3
pop
rcl
push
or
and
or
and
inc
es
fiaddl
and
mov
jae
orl
decl
and
push
jne
xchg
push
mov
or
repz
sbb
aam
cmpsb
sbbb
rorb
loop
inc
inc
dec
and
add
cmp
sub
loop
xor
xchg
in
in
aam
sbb
and
dec
test
mov
subb
mov
lret
sbb
fsubrs
and
inc
sbb
adc
fmuls
push
dec
dec
int
jnp
add
sbb
sbb
rorb
push
push
das
sub
pop
cs
mov
sbb
shl
add
aaa
loope
push
lds
jnp
test
and
or
mov
sub
jg
xchg
push
xchg
rclb
add
push
or
mov
add
push
sub
shll
int3
cli
add
add
push
sub
cmpsb
xchg
jmp
mov
ljmp
add
addb
push
lods
mov
adc
jp
imul
outsl
lcall
mov
push
loopne
in
faddp
add
movsl
outsb
sbb
fcomps
mov
repz
fildll
aam
ss
lret
pushf
mov
and
push
pusha
sub
pushf
push
mov
loopne
add
incl
jnp
jae
and
pusha
mov
lret
jnp
fsubl
add
or
je
inc
ja
jp
push
pusha
fwait
std
jnp
xor
cmp
pushf
ljmp
jg
sahf
nop
inc
lret
cmpsb
rcr
movsb
jge
pushf
adc
mull
mov
cmpsb
cmpsb
add
dec
and
jmp
pop
cli
sahf
lods
or
xor
outsb
adc
jle
adcb
rcrb
hlt
nop
xorl
add
lds
jge
inc
cmc
ljmp
test
cli
imul
sub
shll
jmp
pop
push
mov
xor
ret
push
push
push
push
stos
sahf
xchg
pusha
push
mov
pop
inc
and
pushf
bnd
arpl
jne
mov
cmpsb
test
push
push
loope
and
inc
aam
lods
cmpsl
faddp
adc
inc
sbb
push
stos
mov
push
pop
mov
sub
lret
or
adc
inc
mov
roll
jge
mov
js
cmp
add
scas
jge
add
and
push
movsl
mov
mov
mov
data16
mov
and
sbb
out
loope
and
jge
push
inc
pusha
adc
cmc
clc
aaa
dec
push
ss
push
xor
push
push
sbb
add
rep
pop
dec
pop
add
sbb
sahf
and
push
mov
nop
mov
test
adc
icebp
dec
arpl
jne
sbb
lods
and
xchg
sbb
stos
jno
fwait
push
jo
ds
mov
out
mov
adc
sbb
inc
outsb
shrb
test
cmp
fldt
dec
cmp
adc
sub
xor
add
add
testb
cmpsb
in
adc
insb
adc
mov
or
mov
pop
mov
or
sahf
adc
cmp
das
mov
mov
mov
xchg
lods
jnp
add
add
and
and
movsb
lock
es
mov
mov
adc
mov
out
cwtl
and
out
mov
add
sub
out
inc
push
ret
lcall
xchg
or
cwtl
or
jle
lcall
jo
orb
fcmovnb
in
jb
aad
jge
loope
sar
fwait
inc
cmp
push
xor
adc
sub
mov
mov
int3
pushf
nop
dec
add
fldt
push
pop
sbbb
pop
push
inc
inc
adc
adc
mov
mov
mov
dec
test
lock
and
push
pushl
or
or
jnp
mov
xchg
jbe
mov
xor
nop
xorl
push
cli
clc
dec
or
filds
jo
pop
call
scas
rcrb
ljmp
add
adc
scas
mov
push
adc
js
fs
lcall
loop
mov
lock
testl
sub
push
cld
jo
popa
popa
push
sbb
clc
add
sbb
pop
push
aam
xchg
jge
xor
movsb
lock
into
es
mov
arpl
adc
lock
inc
mov
std
jg
lds
arpl
movsb
movsb
sahf
push
cmc
ret
in
add
sbb
adc
decl
fsubrl
inc
cmp
jle
mov
add
loopne
testb
inc
loop
add
jbe
jo
add
dec
adc
jb
outsb
xchg
icebp
call
xor
ret
es
hlt
jge
fst
roll
loopne
int
movsl
xchg
hlt
cmp
mov
dec
xchg
das
cli
mov
xchg
adc
push
hlt
xor
in
inc
pop
mov
ss
aaa
dec
or
push
cmpsb
mov
inc
sbb
lds
push
cmpl
div
insb
in
outsl
in
add
push
imul
outsb
dec
lock
mov
or
out
imul
push
xchg
dec
xchg
xor
adc
push
cmp
or
dec
xor
insl
mov
jb
ret
addl
push
lcall
scas
fisttpll
fists
fdivs
clc
in
push
fisttpl
loop
add
outsl
jmp
xor
xor
sbb
add
sbb
imulb
sbb
push
xor
dec
cld
push
shll
pushf
scas
xchg
inc
lock
and
and
push
nopl
jo
add
pop
fadds
lods
dec
mov
push
jge
or
xlat
mov
popa
push
cli
movsb
push
nop
or
bound
jo
rolb
test
adc
fistpl
inc
inc
addr16
mov
add
shrb
add
ret
jnp
add
mov
sbbb
popf
fistps
imul
lahf
and
add
jl
jmp
sbb
push
mov
inc
and
clc
fwait
les
nop
daa
sub
xor
mov
std
loopne
push
pop
shll
sbb
and
test
and
cli
decl
ret
mov
cli
lods
and
push
push
dec
mov
scas
scas
aam
xor
or
les
dec
pop
jp
scas
je
inc
and
jbe
dec
jb
addb
mov
subl
sub
pusha
adcl
add
arpl
push
mov
lock
add
gs
mov
inc
push
mov
push
sbbb
movsl
lock
outsl
jmp
andl
cmp
or
sub
rorb
add
inc
jle
and
ret
dec
rolb
inc
inc
lret
scas
or
aad
or
inc
dec
push
jg
add
ret
mov
inc
les
mov
ret
loopne
xor
imul
inc
jnp
pop
loopne
mov
popa
xchg
sub
push
inc
fimull
in
pushf
rorb
add
rolb
and
xchg
and
inc
push
lods
jb
movsb
push
adc
adc
dec
mov
jl
mov
xlat
xlat
movb
cmp
dec
mov
repz
pop
dec
mov
xor
adc
dec
mov
adc
push
pusha
cwtl
push
or
aam
push
inc
xchg
mov
xor
daa
test
shlb
and
inc
pop
inc
add
js
xchg
push
std
fwait
sub
push
fbld
jl
outsl
pushf
cmpsb
nop
cs
mov
rorl
add
pop
push
add
and
or
mov
sbb
xchg
fwait
out
dec
scas
adc
sbb
add
incl
mov
incb
and
adc
jo
xor
sbb
rol
push
mov
aas
pop
mov
ds
inc
adc
add
inc
inc
inc
cmpsb
push
or
jp
push
cli
mov
pop
int
lret
adc
dec
daa
nop
imul
add
mov
mov
dec
push
or
add
jl
sub
icebp
incl
inc
xor
push
or
clc
add
push
shrb
sbb
push
mov
dec
inc
ret
pusha
repnz
or
mov
popa
push
pushf
add
insl
repnz
and
mov
into
out
push
jle
stos
mov
adc
xor
or
or
xchg
push
sbbb
call
xchg
out
add
add
test
inc
jo
lcall
cwtl
push
mov
imul
or
adcb
sub
cmp
inc
add
jne
lods
or
sbb
out
mov
icebp
xchg
sub
shr
cmpsb
jae
add
cmpsb
dec
fdivs
stos
data16
or
mov
clc
add
loopne
aas
fistl
test
mov
mov
scas
add
mov
xlat
add
inc
add
and
xor
test
nop
in
push
adc
push
repnz
andl
inc
data16
jp
add
or
pushf
lods
add
stos
loopne
insl
sarl
mov
lock
mov
pop
xchg
or
repz
bound
cld
aaa
shlb
addb
xchg
inc
inc
pop
mov
adc
test
add
addb
cmpsl
xchg
jbe
cwtl
cltd
add
jns
pop
xchg
push
push
lock
dec
add
jbe
push
movsl
mov
pop
clc
call
icebp
pop
or
cmp
and
inc
orl
clc
add
push
scas
sbb
sbb
frstor
andl
jecxz
pusha
add
cmp
sbb
or
push
cmpsl
or
pushf
and
sub
add
mov
rorb
roll
movl
je
movsb
sarb
pop
cli
faddp
jne
jmp
insl
std
inc
or
bnd
add
mov
rcll
dec
push
insb
loope
pop
jl
call
push
ds
movsb
inc
jg
lret
loop
inc
jge
mov
add
pop
call
add
sub
sbb
fldl
jo
inc
add
push
push
bnd
add
add
xchg
fldt
sbb
call
ja
clc
adc
sbbl
sub
ljmp
int3
mov
push
dec
jecxz
aaa
mov
ret
les
cmp
les
iret
xchg
pop
push
and
adc
adc
adc
or
fimuls
jmp
stos
mov
pusha
mov
adc
inc
addb
out
xchg
mov
lahf
in
je
mov
mov
cmpb
inc
mov
test
sub
fildl
inc
adc
int
mov
xor
adc
or
shl
aad
out
fsubl
fdivr
inc
rorb
rclb
xchg
insb
jmp
clc
gs
inc
add
adcb
shl
dec
test
shll
shlb
xor
pop
adcb
stos
sahf
push
inc
xor
fnstcw
daa
xorl
pushf
mov
scas
or
repnz
or
jne
xchg
inc
insb
std
mov
cmpsl
xchg
loopne
cli
inc
xor
add
add
inc
fsub
es
sbbb
rcrl
pop
inc
sbb
xorb
test
sbb
mov
popa
shl
lock
push
js
clc
dec
arpl
test
out
add
xor
js
adc
sub
cmpsb
mov
pushf
ret
add
mov
sbb
mov
xchg
in
pushf
and
scas
loopne
js
add
push
mov
fsubrp
push
shll
mov
pusha
push
push
jge
cmp
and
rclb
pop
or
data16
dec
insl
loop
add
add
popa
inc
test
add
pop
gs
push
or
sbbl
andb
movb
cmpsb
inc
add
mov
inc
mov
adc
rcrb
es
fsubrl
cli
or
rclb
pop
scas
orb
inc
sbb
adc
adc
and
jae
ss
and
sbb
add
mov
aaa
adc
add
dec
xor
and
clc
pushl
push
xchg
ret
sbb
incb
cld
addl
add
or
and
icebp
popf
add
lock
loop
cmp
xchg
in
add
or
sbb
sbb
mov
loopne
adc
mov
dec
pushf
test
push
ret
cli
jg
push
push
scas
jo
ljmp
add
je
inc
movsb
and
loopne
sbb
mov
rorb
stos
push
mov
and
lods
not
and
outsb
ds
int
push
xorl
inc
jl
xchg
jb
dec
adc
jl
sti
roll
or
inc
loop
fdivl
pop
mov
fildll
cmp
mov
lds
pop
mov
out
cli
jg
out
push
jne
mov
leave
js
pusha
add
cmpsb
lock
lods
stos
push
test
cmp
loopne
adc
inc
adc
cmc
add
and
adc
pop
mov
sahf
ds
dec
enter
lods
cmc
sbb
add
leave
aas
jb
incl
cmp
mov
bound
jle
sbb
mov
lods
adc
adc
push
jo
mov
popa
xor
pop
lods
ljmpw
add
lods
push
sbb
mov
jne
es
add
std
imul
adc
sbbb
add
and
data16
lret
cmp
adc
jge
loopne
sbb
jg
adc
push
lods
aam
test
stos
sbb
cli
add
or
add
and
pop
push
or
mov
sahf
out
clc
add
sahf
into
hlt
xchg
or
shlb
lods
imul
mov
mov
jge
mov
scas
mov
pop
push
sub
inc
cmp
or
mov
inc
push
mov
jb
enter
mov
xor
or
pop
mov
idiv
aaa
or
pop
add
addb
js
addb
outsl
hlt
rolb
xchg
flds
mov
scas
xor
cmp
or
push
sub
rol
sbb
pop
aam
movsl
pusha
dec
out
adcb
test
loope
jne
add
in
fwait
mov
decb
push
loope
adc
and
dec
cmp
test
jo
mov
aaa
push
orb
sbb
or
add
adc
in
ss
add
xchg
test
jp
push
mov
out
cmc
adc
inc
stos
inc
xchg
sbb
xlat
data16
stos
push
addr16
jl
push
nop
data16
jo
ret
jle
ret
add
or
adc
pushw
and
jle
ja
es
adc
adc
jae
jne
cmp
and
adc
xchg
add
xor
aaa
test
orb
or
inc
test
outsb
add
cli
aad
adc
fiadds
cs
jbe
lcall
fs
add
test
push
movsl
lock
bound
mov
pop
mov
jno
add
add
call
loopne
cmc
test
jo
and
push
ret
popa
cmp
scas
push
sbb
inc
roll
out
es
popa
fsubl
push
cld
ja
and
inc
popa
aas
push
or
or
add
cmp
xor
pop
stc
xor
mov
jne
repnz
sub
repz
mov
out
push
mov
mov
add
cmpb
nop
std
fbstp
aas
mov
pusha
mov
xor
filds
cld
sbb
out
adc
sahf
xchg
jg
aaa
roll
cmpsl
and
dec
repnz
clc
xchg
mov
cmp
cmp
jno
add
sbb
mov
ljmp
das
add
sarb
mov
sub
dec
call
test
imul
rcll
xor
add
push
data16
dec
adc
cmp
imul
sarl
xchg
cmpsb
add
dec
mov
inc
dec
jne
add
aaa
push
jb
inc
pop
dec
stos
mov
adc
jnp
mov
loopne
and
mov
lret
nop
or
cmp
push
and
decb
mov
inc
mov
mov
jg
xlat
xchg
popf
sbb
stos
push
cs
aas
cmpb
adc
sarb
rcrb
inc
mov
std
rorb
add
adc
pusha
jb
dec
inc
icebp
add
sti
lcall
sbb
xor
add
cli
jns
mov
rcr
cmp
adc
clc
xorb
aas
loopne
cmp
xorl
push
into
add
pop
ss
daa
test
dec
movsb
pop
stos
insb
call
pop
sbb
fs
mov
inc
push
or
pushf
and
loopne
xor
sbb
dec
mov
cmp
repz
pusha
xor
pushf
nop
mov
or
inc
xchg
jle
shlb
les
adc
jg
lock
dec
ljmp
jb
addb
std
xchg
dec
push
push
jbe
jno
xor
sub
into
push
shlb
cmp
hlt
add
lahf
sub
loopne
inc
jo
stc
fcomip
pushl
jo
andl
inc
out
push
aam
lcall
push
icebp
add
test
add
data16
jg
mov
in
and
rol
inc
inc
sub
shrb
stos
xor
inc
adc
loopne
inc
jge
pop
xor
orb
icebp
or
sbb
mov
pop
cli
lret
leave
cmp
in
inc
mov
lea
sub
data16
aaa
jae
mov
inc
jae
adc
cmpsb
jb
adc
int
cwtl
cltd
cmpb
mov
inc
inc
es
test
incl
sahf
into
cmpsb
and
loop
add
or
adc
jge
adcb
xchg
adc
lcall
adc
sahf
adc
mov
in
adc
add
test
jge
adc
or
movsl
dec
test
cmpsl
dec
loopne
stos
jb
and
add
add
cmpsb
mov
incl
push
cmpsl
inc
jb
mov
andb
outsb
push
push
add
mov
nopl
sti
xchg
out
push
addl
pop
cmpsb
inc
jne
jbe
jg
push
add
aaa
add
add
mov
pusha
pusha
add
jb
lea
mov
jns
push
cmc
ljmp
xchg
adc
mov
pop
sub
add
push
xchg
mov
add
dec
cmpl
outsl
sub
dec
addr16
roll
imul
stos
loopne
jecxz
andl
sub
cmp
ret
dec
mov
cmpsb
pop
jbe
xchg
lods
call
std
jg
dec
bound
add
add
je
sti
outsl
pop
enter
lret
or
stc
jno
sub
dec
add
mov
stos
mov
fmull
cmp
adc
cmp
add
mov
out
subb
lahf
loopne
xchg
lods
adc
pop
popf
aam
outsl
add
adc
mov
push
xchg
test
xor
repnz
or
push
adc
data16
leave
sbb
push
pusha
divb
or
add
push
in
pop
mov
std
incl
and
push
cli
mov
pop
mov
sub
imul
mov
incb
xchg
fiadds
test
test
jecxz
mov
subl
cs
gs
xchg
cmp
cmp
mov
or
dec
and
push
or
popa
dec
or
adc
je
xor
roll
jl
sbbb
xchg
bound
bsf
incl
adc
jnp
ss
bound
sub
inc
or
fadds
push
loop
push
add
aad
add
cli
adc
xor
adc
dec
clc
in
fildl
sub
rolb
fisubrl
adc
sbb
lods
sub
adc
ret
inc
sbb
cmp
mov
dec
push
lcall
sub
loopne
rolb
decl
inc
or
push
hlt
addl
or
es
or
mov
pop
ds
adc
outsb
into
dec
mov
orl
enter
pop
pop
jo
fidivs
xchg
push
outsb
loopne
sahf
rcrl
jp
shlb
orl
fsts
xadd
movb
call
ret
out
push
and
or
or
lods
push
cmpsl
test
cmpsl
es
add
dec
stos
scas
pop
jge
or
push
add
inc
sbb
stos
xor
rclb
jg
addl
mov
mov
lock
decl
adc
or
pop
mov
jge
pop
add
loop
or
xchg
mov
orb
outsl
add
sub
and
movsb
jge
push
pop
push
cmp
sub
push
xorl
fisttps
push
mov
rolb
push
sti
inc
sbb
or
std
das
inc
and
fwait
push
dec
sub
or
dec
les
sub
loop,pt
sbb
xor
iret
adc
push
jge
adc
sub
mov
lds
roll
or
std
add
out
push
cld
loopne
mov
test
lods
fcmovnb
cld
ja
pusha
int3
xor
jecxz
push
sub
ror
mov
xor
loopne
mov
movsl
andb
inc
jo
out
shrb
in
inc
jo
add
imul
cmpsb
jo
sub
pop
clc
inc
outsl
outsb
call
or
and
clc
push
xchg
mov
ss
pop
call
xor
add
cmp
add
lods
mov
add
add
lea
shrb
and
inc
mov
push
fbld
push
stos
push
jecxz
mov
push
mov
sbb
inc
std
imul
lret
xorb
outsl
clc
jg
xchg
dec
push
mov
cmp
jp
and
imul
ljmp
orl
mov
jle
imul
ljmp
bound
adc
out
or
push
sahf
inc
jl
jae
rcrl
push
je
jl
notl
inc
push
adc
arpl
adc
aas
cmpsb
jecxz
cli
push
dec
int3
and
les
sbb
mov
roll
sub
test
cli
fildl
and
fiaddl
cmc
mov
xchg
inc
rcl
test
arpl
cmp
cmp
xor
mov
shlb
repnz
mov
cltd
inc
xchg
push
and
imul
out
add
jae
add
ret
insb
shrl
sub
outsb
dec
push
nop
mov
adc
subl
add
cmp
adc
dec
xchg
push
add
jno
rclb
repz
in
and
mov
add
leave
and
jae
sahf
mov
jg
add
jae
inc
or
cltd
mov
test
add
pop
in
loopne
add
lret
out
shlb
test
add
pop
inc
sbb
pop
jb
mov
jl
orb
push
pop
xchg
test
ret
pop
dec
add
push
or
fsubp
add
ss
mov
pop
pop
dec
push
cmp
sbb
inc
mov
loope
cmpsl
sbb
add
ss
add
loop
add
fistps
mov
cmpb
cmc
xor
pushf
xchg
popf
push
je
adc
test
shlb
mov
sub
icebp
sarb
incb
insl
pop
adcl
and
shrb
push
mov
js
xchg
fs
mov
enter
insb
fsubs
sbb
push
inc
add
push
fstpt
sahf
inc
sub
cmovns
ss
xor
aaa
out
inc
mov
hlt
stc
je
mov
decl
addr16
inc
sub
inc
adc
lock
mov
push
adc
call
push
sub
jb
jnp
cmpb
roll
push
jo
jge
xor
lods
enter
aaa
mov
sti
jbe
repz
stos
mov
add
or
adc
into
xchg
mov
add
sbb
mov
jg
sbb
jnp
adc
inc
ret
roll
and
pop
insb
inc
mov
jbe
loope
outsb
stos
fsqrt
lock
mov
sub
dec
and
push
fs
cmp
ret
insb
mov
shll
add
nop
insb
mov
ljmp
js
sahf
jle
jg
push
loopne
jg
movsl
push
adc
add
push
test
add
adc
aaa
addb
adc
dec
push
xor
push
add
lock
or
xor
jbe
pop
sti
dec
nop
xor
adcb
sar
incl
inc
push
and
dec
push
icebp
add
add
dec
adc
mov
inc
dec
pop
popf
xchg
add
push
xor
xor
xor
adc
mov
outsl
test
push
jbe
cli
jo
and
push
outsb
add
popa
adc
and
push
cmp
push
shll
jo
inc
das
push
add
jmp
mov
mov
push
nop
imulb
mov
add
mov
push
sub
es
pop
cwtl
and
push
inc
sbb
mov
xor
cmpb
ja
faddl
and
test
add
inc
jmp
push
fwait
jo
es
pushf
sub
xchg
lods
and
sub
repz
lahf
push
adc
or
mov
lahf
sub
xor
xor
sti
mov
inc
lods
sub
das
or
push
or
inc
push
dec
xorl
mov
add
das
andl
mov
js
mov
clc
sbb
iret
xchg
mov
xor
add
inc
xchg
bound
stos
daa
inc
xchg
mov
xchg
add
xor
jg
adc
cs
pop
popa
push
adcb
fcomip
std
pusha
xchg
dec
xchg
sahf
stos
dec
cmp
pop
inc
xchg
stos
push
xchg
clc
ljmp
jo
jb
popa
sbb
push
or
xchg
add
pop
jle
inc
mov
js
or
ljmp
or
rorl
loop
add
or
ret
pop
test
add
cld
inc
sub
xor
push
les
mov
out
adc
test
dec
pop
jb
mov
andl
sub
sbb
mov
pop
or
cmp
and
push
dec
mov
dec
xchg
int3
dec
call
shrb
and
shrl
pop
loop
test
add
adc
mov
inc
or
add
ret
xchg
pop
outsl
es
iret
cmp
add
adc
adc
or
sub
jo
loop
push
test
js
loop
out
lock
cld
mov
and
mov
ja
incb
ret
popa
add
or
andb
push
adc
jo
hlt
incl
movb
lret
scas
cmp
ja
pop
inc
or
push
loopne
ja
out
adc
add
data16
fistpll
add
xchg
out
xchg
nop
outsl
sbb
push
pop
gs
loopne
into
mov
lcall
lcall
ljmp
inc
scas
test
cmc
ljmp
jbe
inc
adc
add
xor
dec
pushf
test
sbb
lock
cli
shl
rcll
sub
les
fistl
sbb
daa
pusha
adc
xchg
adc
lods
or
add
fmulp
nop
fistpl
dec
popf
inc
incl
push
cli
mov
or
mov
incl
mov
popa
rorb
pop
adc
fs
ds
mov
pop
aas
and
setbe
xor
sub
icebp
clts
subl
xchg
stc
call
negb
fbld
inc
inc
mov
push
push
mov
fs
stos
pushl
pusha
or
pop
push
divps
jo
jb
andb
pop
adc
lcall
dec
inc
add
in
cli
inc
movsl
pop
jne
xor
add
dec
push
sub
inc
data16
push
call
push
inc
dec
decl
cmpsb
sub
pop
cmpsl
pop
mov
mov
bound
mull
call
mov
push
push
pop
daa
mov
add
push
xchg
jne
subb
test
ror
imul
mov
sbb
js
mov
pop
add
or
es
push
hlt
adc
pop
cmpsl
and
jg
xor
stc
sub
jnp
jle
lock
jp
insb
addl
aad
rcll
or
int3
call
inc
jl
or
add
mov
adc
push
add
sbb
mov
das
sbb
add
cmpb
inc
es
cmpsb
in
scas
xor
or
or
outsl
sub
push
notb
inc
daa
inc
xchg
in
push
mov
shrb
mov
add
dec
inc
add
insl
add
aas
dec
shrb
add
out
fwait
add
dec
mov
outsb
jg
in
pushl
fdecstp
add
or
inc
or
dec
lods
sub
jl
sub
jg
jg
dec
test
cmpsl
add
dec
mov
fs
bound
add
cld
jns
std
dec
adc
orb
ds
xlat
outsb
dec
decb
insb
dec
js
int
stc
fildll
pushf
and
mov
out
out
dec
push
push
jo
push
dec
test
or
sbb
cwtl
aas
outsl
mov
jle
mov
pop
dec
daa
bnd
outsl
ja
aaa
inc
imul
add
test
sbb
mov
fbld
dec
dec
sbb
dec
jle
js
dec
dec
jg
add
dec
or
jo
lods
daa
or
dec
mov
adc
sub
incl
or
dec
xor
addb
xchg
cs
out
or
cmp
jp
cmp
outsl
mov
jle
les
and
and
mov
xor
test
cli
sub
push
insb
lcall
loopne
dec
and
pop
jo
adc
mov
push
loope
in
iret
fwait
popa
sbb
cmp
sbb
test
dec
leave
inc
xchg
fisubrs
es
push
dec
or
testb
push
push
rorl
jg
xor
decb
dec
iret
mov
inc
sub
lahf
aaa
fwait
hlt
jge
repnz
sbb
lock
arpl
jle
test
cld
rolb
cli
cmp
xchg
clc
ljmp
or
dec
adcl
imul
add
dec
push
dec
inc
loopne
xchg
subb
jmp
adc
dec
cltd
jae
ljmp
push
dec
xor
ljmp
inc
xor
dec
lret
push
roll
aam
int3
iret
ljmp
rorb
daa
rcr
push
rorb
add
adc
dec
scas
pusha
mov
add
sar
outsl
fimull
inc
add
fmuls
dec
ret
shrb
add
mov
outsb
or
lret
insl
and
les
or
dec
dec
decl
fcompl
cs
mov
mov
dec
sbb
rclb
dec
mov
pushf
addl
test
push
mov
loope
or
dec
das
ret
cmp
mov
mov
push
movsb
or
or
mov
rolb
scas
dec
lret
sub
lods
and
inc
cs
pop
ret
arpl
dec
and
mov
or
fistpll
icebp
inc
add
adc
pushf
dec
mov
xor
jecxz
cwtl
xchg
outsl
arpl
xor
outsb
push
push
jns
and
sar
fwait
test
ror
dec
sub
dec
sub
mov
cmp
jecxz
outsl
jne
adc
jnp
aaa
or
cmp
mov
pusha
xchg
je
add
dec
mov
es
add
mov
cmp
fbld
nop
mov
std
add
nop
adc
mov
clc
xchg
mov
adc
mov
lds
and
add
inc
add
adc
or
add
sbb
dec
das
xor
les
jg
ljmp
pop
ja
repz
pop
adc
jb
jp
icebp
push
int3
imul
stos
cli
pop
sarb
inc
add
lock
cmpsb
and
mov
xchg
push
adc
inc
cs
pop
cmpsb
xchg
test
add
cmpb
push
je
lods
pop
lock
inc
jae
cli
sub
dec
fs
push
cs
sbb
pop
inc
test
cmc
insb
jno
hlt
out
cmpsl
movsl
rclb
ss
addl
jle
jb
fdivl
push
ljmp
ss
rcr
lahf
xor
and
or
fistpll
mov
pusha
dec
xor
xchg
pusha
rcl
pop
imul
jge
aam
loopne
adc
cmp
adc
xchg
add
jne
add
mov
filds
stos
hlt
ds
push
lret
cs
push
sub
push
fsubs
sbb
jnp
inc
dec
loope
lock
add
cli
sbbb
ljmp
pop
sub
or
incl
and
scas
or
push
and
and
mov
in
push
jge
mov
jl
push
inc
jno
cld
adc
add
mov
int
cmp
iret
mov
mov
lcall
mov
xchg
xor
mov
lock
ljmp
addb
adcb
pusha
jmp
mov
add
mov
sub
or
xchg
popl
fiadds
pusha
sub
bound
push
and
rorb
pop
pop
mov
push
daa
fidivrl
rolb
push
adc
xchg
fwait
sub
push
rol
jb
mov
or
or
add
inc
jo
xchg
or
lret
call
lock
js
loopne
adc
inc
or
push
push
adc
adc
inc
pop
or
call
dec
or
pop
dec
dec
inc
shlb
jo
push
je
push
jae
sub
pusha
hlt
xor
and
sub
mov
cs
divb
and
bound
or
popa
cmp
dec
pop
je
ret
lock
or
mov
jno
adc
and
out
out
dec
lods
lock
inc
jmp
mov
gs
xor
or
pop
mov
in
shrb
or
inc
jl
sti
decl
xchg
adc
mov
lahf
cmp
ud2
icebp
xor
into
ds
orl
dec
jle
cmp
push
sub
pop
rorl
pusha
adc
ja
mov
sbb
add
add
mov
sbb
mov
jne
shlb
or
and
mov
pop
aad
incb
and
ljmp
adc
test
add
xchg
xor
rorl
out
out
rcrb
push
inc
repz
cli
sahf
fimuls
cmp
pop
add
pop
sarb
and
lret
adc
hlt
mov
es
pop
push
faddl
adc
adc
in
pop
inc
loop
and
mov
sbb
inc
loope
or
inc
or
push
aas
mov
inc
jle
in
icebp
push
mov
adc
hlt
data16
nop
push
adc
jne
sbb
stc
inc
mov
clc
lock
xor
push
jb
inc
inc
xor
addb
and
cmc
pop
adc
mov
push
int
addb
mov
cmc
es
adc
inc
jne
mov
mov
loope
fstl
push
mov
and
dec
aas
test
rorb
clc
clc
es
rclb
push
sbbb
mov
add
and
add
lcall
cmc
roll
push
xchg
add
aad
pushf
enter
in
out
bsf
add
mov
push
scas
pop
mov
push
add
movsl
dec
jnp
scas
cmpsb
cwtl
jp
or
cmc
push
mov
sbb
sub
jnp
dec
sub
andl
and
push
imul
pop
mov
xor
pop
mov
and
icebp
or
ret
mov
cmp
jle
add
fcoms
in
jecxz
mov
cld
or
inc
rorb
push
mov
cmc
outsl
vmovss
add
jne
adc
cwtl
add
cmp
out
sbb
pop
test
sub
sbb
dec
pop
pop
and
outsb
xchg
add
and
pop
inc
cmp
sahf
jb
pop
add
jle
movsl
nop
xor
and
jge
fst
sbb
inc
pusha
add
add
es
mov
sub
mov
and
das
pop
aam
add
pop
xor
nop
pop
jge
pop
ss
fimull
xor
mov
or
xor
lods
lock
xor
lock
ret
aaa
std
popa
adc
mov
jo
pushf
movsl
fidivl
xchg
lcall
mov
push
add
xchg
aam
bound
lock
cli
inc
pop
mov
sbb
mov
and
dec
inc
jecxz
mov
adc
mov
ljmp
adc
into
xchg
add
mov
int
add
jl
ret
in
adc
daa
sarb
or
and
mov
mov
add
push
stos
in
add
sbb
push
add
mulb
push
sbb
into
xor
ret
pushf
cmp
int3
jbe
push
sub
or
mov
and
and
ja
scas
sbbb
inc
sbb
in
cs
inc
dec
pop
jbe
add
nop
and
inc
jb
inc
add
or
mov
push
sbb
add
out
add
or
cmpsl
push
sbb
cmpsl
bound
fs
lret
cmc
inc
push
ss
adc
icebp
adc
outsl
xor
out
roll
jo
adc
fs
shlb
pop
jo
xchg
in
add
pusha
decl
rolb
inc
or
pop
fmul
push
stos
clc
push
xchg
mov
or
mov
add
je
add
popa
add
leave
jle
push
cld
sbb
test
add
fiaddl
ljmp
or
andl
pop
ret
cmpsb
or
inc
adc
outsb
pop
sub
out
jge
adc
xor
loopne
test
push
movsb
or
jae
push
adc
rclb
fbstp
pushf
mov
pop
mov
ret
pusha
xor
mov
sub
add
xchg
pop
push
inc
jp
mov
das
jl,pt
mov
xchg
mov
add
ja
cltd
rolb
push
out
out
sbb
mov
out
inc
add
add
and
dec
cmp
shrb
xor
xchg
cwtl
inc
jnp
pop
mov
rolb
fistpll
in
sahf
and
or
pop
pop
and
cli
sbb
push
add
add
fsubs
outsb
add
mov
dec
test
sub
add
loopne
loopne
adc
pop
adc
xor
test
bound
test
ss
pop
and
xchg
stos
insb
xor
add
xor
pop
out
mov
roll
sub
out
adc
xor
nop
imul
gs
add
add
rcrb
mov
xchg
loopne
push
test
xor
sub
rorb
int
inc
mov
mov
add
inc
jecxz
adc
sbb
dec
push
cmp
adc
outsb
lock
push
mov
inc
add
xor
add
les
cmpsl
mov
jle
andb
pop
loopne
cld
lcall
sub
adc
rclb
and
inc
push
lock
in
mov
push
sbb
aas
cmp
pop
mov
xorb
sbb
mov
insl
imul
ljmp
mov
dec
add
add
add
cli
mov
jge
lea
addb
mov
call
fcomp
cmpsb
addl
xor
add
fcmovb
jb
cmp
psraw
fadds
push
dec
sbb
or
sub
test
add
cmpsb
push
clc
add
notl
aad
jno
insl
add
pop
sti
fwait
aam
dec
inc
pop
inc
or
sahf
pusha
xor
or
cli
dec
call
les
add
adc
sbb
ja
push
enter
cmp
mov
cmp
mov
outsb
sbb
push
add
push
mov
js
pop
xchg
xchg
or
insb
adc
sub
cmp
cmp
mov
dec
bound
or
cmp
nop
sahf
repnz
rclb
adc
mov
xchg
orb
mov
push
jae
test
dec
xchg
clc
inc
mov
js
sbb
push
push
mov
imul
add
jne
pop
xor
insb
sti
pop
adc
incb
sbb
nop
jns
add
lods
add
lea
xor
jo
pop
and
shl
int
repnz
mov
cmp
daa
test
sub
mov
adc
subb
and
mov
lds
les
jle
and
add
lahf
and
push
cmp
or
sbb
add
cwtl
mov
addb
mov
inc
and
add
cmpb
add
adc
pop
dec
jo
inc
mov
xchg
out
xor
lods
mov
in
and
jns
aam
and
cmpb
mov
out
or
mov
addb
and
inc
sbbb
jl
jae
sti
pop
xor
cmpsl
and
aam
jbe
stos
adc
sub
popf
insb
adc
or
xor
sbb
shr
and
stc
inc
inc
icebp
mov
pop
dec
push
push
push
adc
daa
test
leave
hlt
dec
add
cli
pop
and
mov
inc
rolb
mov
lret
push
push
mov
push
mov
lret
ljmp
adc
sbb
jo
sub
or
push
dec
inc
xor
sbb
hlt
and
rcl
rol
out
lea
cld
adc
in
loope
cmp
add
jge
adc
adcb
outsb
mov
rcrb
xor
cmpsb
scas
or
push
into
lods
inc
jne
cmpb
sbb
inc
or
test
jl
sbb
xlat
adc
je
mov
mov
push
sbb
mov
jg
sub
push
aas
mov
aas
cmp
pop
inc
clc
mov
jbe
outsb
addb
out
enter
pop
xor
and
jecxz
push
loopne
adc
pusha
cmp
and
or
lret
or
or
mov
adc
xor
js
jae
pusha
adc
mov
mov
lcall
bnd
gs
cmpsl
add
loope
adc
add
mov
sti
mov
or
cmp
or
pusha
or
and
test
loopne
and
call
cwtl
inc
or
push
popa
add
push
loope
rolb
mov
stc
jnp
ret
xor
sbb
test
mov
nop
adc
lock
mov
mov
mov
mov
dec
pusha
xor
xchg
xor
pop
mov
sbb
stos
aaa
test
inc
jecxz
xchg
je
pusha
cli
adc
add
rcr
and
movsb
or
xor
and
loope
decb
and
and
loop
sahf
mov
jle
loop
dec
test
outsb
add
add
subl
pusha
xchg
mov
aam
test
sbb
dec
mov
loopne
loopne
lock
mov
faddl
and
or
cmpsl
or
xchg
sbb
cli
jbe
push
cmp
stos
mov
adc
sub
and
repnz
inc
cmp
std
mov
adc
pushf
pusha
pop
in
xchg
xor
mov
ds
inc
cmp
inc
pop
jne
addl
mov
mov
and
les
pushaw
mov
loopne
mov
popf
adc
jne
ror
pop
adc
test
jnp
jne
andb
or
push
notb
lahf
sahf
add
inc
xchg
pop
and
fisttpl
xchg
inc
push
mov
mov
mov
cli
cmpsb
ljmp
in
pushf
adc
popa
and
movsb
jae
mov
add
add
or
mov
add
incb
sbb
out
insl
add
js
testb
pop
or
adc
lcall
jp
mov
adc
inc
inc
adc
add
push
jl
add
orl
lock
fmull
mov
mov
into
sbb
in
and
loop
push
pop
jge
push
add
mov
or
adcl
add
clc
push
mov
test
mov
lods
push
test
mov
adc
and
cmp
push
sbb
push
fsubp
adc
sbb
fmull
or
add
sub
cmpsb
mov
aad
aaa
xchg
cltd
xor
rcrl
push
dec
repnz
sbbb
incl
mov
or
sbb
jge
inc
or
mov
decb
pop
out
shll
addl
scas
aad
mov
test
mov
push
fs
inc
insb
cmpsb
adc
cmp
dec
add
and
jmp
fcom
adc
jp
add
or
sub
mov
stc
clc
les
lock
out
shrb
mov
out
xor
loopne
xor
xor
cmpsl
add
cmpsb
les
and
bound
jge
xchg
cli
leave
jge
and
clc
push
js
pop
sub
loopne
stos
mov
mov
or
add
nop
cmp
loopne
mov
xor
lea
shlb
inc
dec
fisubl
adc
or
test
lret
negb
mov
mov
ljmp
test
roll
add
lret
icebp
or
icebp
mov
std
aad
das
movsb
in
aas
movsb
push
or
and
xor
push
adc
adcb
push
call
inc
in
lahf
rolb
xorb
loop
test
fcmovb
jae
push
xor
xchg
inc
jae
xor
mov
add
xor
push
jg
test
rclb
iret
mov
rclb
jge
mov
push
mov
and
fisttpll
addl
cld
test
xorl
call
call
mov
filds
test
xorb
out
mov
fwait
cld
loopne
inc
sahf
stos
jb
loope
add
adc
cs
jne
into
or
add
repnz
movsl
add
in
popa
push
add
mov
jnp
jae
rcr
popa
jecxz
jle
mov
jge
xor
jne
sbb
push
lods
pop
xchg
cmpb
negl
push
je
div
hlt
mov
push
xchg
adc
inc
mov
push
out
subb
loopne
cmpsb
push
insb
adc
outsl
fbld
into
fdivrl
orl
mov
inc
sbb
push
mov
adc
aaa
cld
outsl
stos
sbb
adc
inc
loope
sti
push
push
or
mov
js
mov
push
ss
pop
cmp
xor
scas
lods
dec
test
shl
and
incb
hlt
inc
loope
jo
add
push
add
push
pusha
xchg
sbb
push
xchg
rcrl
sarl
test
or
inc
test
and
xor
mov
lret
add
insl
mov
popf
pusha
sub
jbe
add
sub
dec
mov
xchg
sub
and
mov
push
sbb
push
jnp
lock
jne
fwait
and
jo
stc
xchg
stos
pop
addb
loopne
inc
push
mov
mov
aad
cmp
mov
xchg
popa
cmp
mov
mov
xor
shll
mov
push
cltd
roll
mov
push
add
mov
mov
out
arpl
or
mov
adcb
sbb
xor
icebp
shrl
xchg
mov
adc
test
dec
add
mov
sub
incb
xor
mov
ss
inc
addr16
loope
jmp
dec
outsl
mov
mov
add
mov
and
sub
arpl
push
imul
push
add
dec
dec
jl
test
sub
jp
push
bound
pop
sbb
dec
jp
rorb
xor
adc
sbb
xor
jae
jo
data16
jg
inc
repnz
repnz
addb
cmp
std
int
and
mov
or
xor
push
shlb
outsb
lds
xchg
adc
push
or
sbb
cmp
loope
dec
jmp
add
lock
lods
pop
push
push
cwtl
push
aad
out
loope
adc
out
andl
mov
lods
pop
jg
lods
test
xchg
cmpsl
xor
xchg
lock
lret
mov
in
or
cld
movsl
rorb
mov
hlt
add
mov
sarb
shlb
shr
xchg
mov
loop
xlat
lods
xchg
in
loopne
hlt
xchg
int
and
adc
stos
jge
scas
int
sub
enter
cmp
out
xor
xor
adc
clc
fbld
fisttpll
int
or
push
test
inc
incl
test
add
adc
mov
stos
ficoms
lahf
rclb
test
sub
add
clc
pop
add
xor
lods
add
pop
jne
and
loop
rcrl
add
add
insb
incb
adc
test
add
test
push
jl
ss
or
int3
dec
add
push
mov
jbe
pop
mov
fnsave
rcrb
mov
sub
cli
mov
mov
and
bound
pop
push
mov
daa
push
jl
cmc
xor
sub
or
loop
ss
decl
hlt
cmp
rolb
add
cmp
mov
pushl
mov
jns
and
sbb
or
ret
and
call
negb
sub
jmp
jmp
mov
mov
jecxz
add
push
repnz
mov
jmp
jl
jp
mov
inc
mov
or
mov
xchg
adc
sbb
xor
in
add
test
std
jle
mov
fcoms
sarl
xchg
aam
sbb
add
into
adc
push
fildll
xchg
add
int
and
or
xchg
pop
pop
cmp
add
push
fstpl
sub
mov
insl
add
popa
movb
out
or
mov
jg
into
add
mov
test
iret
pusha
mov
lahf
push
lret
std
and
sub
add
bound
adc
or
enter
addb
out
push
add
stc
jle
mov
add
mov
jb
add
jge
pop
stc
dec
push
insb
sbb
mov
cmp
je
js
push
add
loop
shll
cld
out
mov
sahf
bound
xchg
or
loope
xchg
subb
add
jg
idiv
ja
xchg
jg
inc
add
jge
incb
mov
sub
xchg
loopne
mov
ret
int
mov
add
sbb
ret
inc
lods
std
jg
inc
sub
sub
and
roll
push
push
int3
inc
dec
inc
add
sbb
lock
repz
push
push
clc
mov
xor
add
dec
adc
add
xor
cmpsb
lds
push
or
add
testb
push
loop
enter
mov
stos
push
jg
hlt
dec
sbb
dec
inc
mov
and
in
or
push
fisubrs
add
mov
fdivl
dec
mov
cmc
icebp
push
push
cmp
xor
xor
sub
mov
aas
sbbb
xchg
mov
adc
adcb
and
imul
push
stos
xorb
push
lcall
xor
bound
subl
subb
sbb
dec
shl
loope
insb
loope
outsb
je
sbb
insl
stos
enter
add
inc
push
into
fmull
or
adc
cmc
data16
into
stos
cli
inc
in
cmpsb
add
scas
mov
push
mov
adc
repnz
pusha
in
pop
or
mov
js
xorb
ret
or
shrb
mov
jle
lods
jge
pusha
loop
pusha
out
push
ret
dec
push
mov
jg
push
push
loop
cld
mov
lret
pop
cmpb
cmpl
sub
sub
and
sarb
adc
inc
sub
mov
cs
pushl
xchg
test
jne
add
xchg
add
aam
adc
push
push
repnz
pop
add
jl
jo
jo
add
pop
orb
cmc
aas
hlt
loop
scas
cli
and
movsb
sub
and
or
rorb
mov
or
or
movsl
inc
xor
aam
cmpsb
lcall
push
adc
xor
rolb
mov
xorb
push
mov
mov
jp
add
jle
and
jb
add
jbe
mov
mov
mov
dec
nop
jp
pop
addb
push
or
mov
repz
mov
fistl
xchg
fistpl
sbb
or
push
cld
push
cli
inc
repnz
outsb
rolb
push
add
add
or
fiadds
xor
push
or
adc
movsb
jl
push
push
inc
test
ret
pusha
mov
xor
lcall
adc
add
roll
orb
adc
sub
loopne
cs
sahf
shl
sbb
out
add
or
loop
xor
sahf
fidivrs
xor
mov
std
pop
inc
mov
aad
or
add
rcrb
addl
xor
or
cmp
adc
mov
or
cli
add
daa
pop
daa
sub
cs
addb
mov
push
je
fildll
loop
add
add
pop
test
int
add
scas
add
test
int
orl
jb
test
mov
lret
scas
push
sub
cmp
das
and
adc
jmp
mov
cmpsl
dec
xor
pusha
sbb
xor
stos
mov
mov
test
cmpsb
scas
scas
stos
scas
lods
add
or
data16
out
mov
cmp
dec
mov
popa
notl
sub
lret
popa
cmpsb
push
sub
mov
jl
andl
xchg
dec
std
loopne
cmp
mov
add
jge
stos
or
or
pop
mov
xchg
add
mov
stc
inc
xchg
lock
and
jo
sbb
out
add
in
subb
jno
inc
mov
lcall
into
cld
mov
fmulp
and
bound
jmp
or
loopne
or
jg
aam
test
scas
add
mov
lret
pusha
jnp
xor
ljmp
push
jmp
add
push
or
push
sbb
cwtl
cmpb
pop
cld
ss
dec
addr16
sub
fwait
add
bound
std
and
call
loopne
cltd
in
pop
enter
movsl
or
les
fs
mov
pop
cmc
les
push
data16
lods
xor
jnp
fldl
push
popa
popf
inc
sti
adcb
adc
sahf
out
and
ds
sbb
addl
les
into
sarb
pop
icebp
inc
es
test
andb
arpl
jb
fs
sahf
inc
outsb
dec
cltd
sahf
mov
push
aad
mov
out
loopne
or
and
xor
sahf
outsb
loope
push
inc
popa
or
out
adc
cmpsb
or
or
pop
and
or
loopne
popa
rorl
pop
out
sub
sub
push
and
dec
stos
jecxz
add
add
and
adc
out
add
jbe
dec
inc
fildl
pop
mov
cli
xor
lock
jle
test
sub
int3
cs
adc
outsl
rcll
loopne
push
push
mov
and
fwait
notb
pusha
or
add
mov
mov
adc
leave
push
jmp
jl
in
mov
in
adc
pop
stc
mov
mov
outsb
cmp
pop
cmpb
pop
leave
in
sbb
sub
sti
out
cmp
adc
popa
enter
adc
xchg
xchg
ret
push
push
and
insb
lcall
dec
scas
add
xchg
stos
push
mov
adc
lret
and
scas
test
mov
in
cmpsb
push
pop
ret
ljmp
loop
push
icebp
add
and
cwtl
out
add
or
push
add
insb
scas
mov
ficoms
xor
sub
push
mov
scas
xchg
adc
stos
lock
ss
dec
xchg
mov
sub
inc
xor
pop
shll
stos
push
cs
add
jbe
inc
pop
mov
das
nop
pop
mov
xchg
mov
insl
dec
subb
mov
out
cli
mov
call
push
std
or
pop
push
sbb
or
cmpsl
mov
add
sbb
xor
shl
push
insl
out
imul
insb
cmp
add
dec
sbb
lock
and
les
dec
loope
ret
jbe
sbb
push
in
push
mov
add
push
jo
mov
loopne
ss
inc
push
xor
inc
sbb
push
js
int
rcll
sbb
lods
nopl
sbb
mov
outsb
push
adc
add
jo
shlb
mov
xchg
inc
rclb
sbb
push
push
dec
sub
xor
jo
rdmsr
add
lods
nop
mov
mov
ds
ss
mov
sarb
stos
jg
add
push
jge
jg
es
inc
mov
cmc
add
push
sub
xchg
push
jo
je
push
pusha
xlat
xor
popa
sub
xchg
sahf
sti
dec
shll
jo
rorl
add
dec
mov
push
out
add
fistpll
sbb
repnz
push
lock
sti
adc
adc
iret
rol
testb
jno
push
jno
outsl
jle
push
pop
fiadds
xor
and
mov
sbb
clc
fwait
stos
xor
lods
lock
mov
stos
mov
icebp
push
mov
xor
sbb
dec
jo
stos
cmc
dec
cmpsb
loope
imul
stos
push
and
fstpt
jbe
stos
jne
shlb
or
jns
jbe
lock
jne,pn
push
adc
push
cld
icebp
lock
jne
enter
push
add
cwtl
or
out
xor
add
mov
add
xor
testb
push
adc
sub
push
test
loop
int
xor
mov
jae
je
dec
rcl
stos
stc
testl
xor
mov
stos
es
stos
cmpsl
sub
push
stos
or
lock
add
aas
mov
push
pop
cld
jg
js
sbb
mov
jno
push
out
jecxz
aas
mov
mov
testb
shlb
or
jae
cmc
sub
aam
icebp
add
dec
xchg
out
add
pop
jnp
and
xorl
push
jnp
or
addl
sbbl
mov
push
jl
mov
les
sbb
andl
and
push
push
or
movsb
pusha
pop
out
xor
xlat
ficomps
cwtl
bound
mov
xorb
outsl
shrb
adc
xchg
sbb
imul
stos
addr16
jo
jmp
sbb
adc
std
lahf
lock
out
push
xorl
inc
xchg
and
dec
pop
mov
sbb
pop
pop
orl
popf
movb
push
mov
ljmp
stos
cmp
add
into
add
push
or
mov
fs
add
sbb
or
add
add
add
mov
int
js
jmp
push
cwtl
add
sbb
nop
push
xchg
add
pop
xor
push
ret
push
add
add
mov
rclb
sbb
add
les
das
add
stos
and
daa
add
call
loopne
dec
mov
pop
repz
inc
add
pop
adcb
imul
imul
stos
outsl
adc
add
jnp
cmpsl
imul
ja
popl
and
dec
dec
addb
add
repz
insl
stos
pop
push
pop
sbb
push
insb
pusha
fs
jo
dec
repz
mov
repz
pushf
nop
xchg
test
repz
lods
mov
xor
repz
enter
repz
repz
rcl
call
in
loopne
clc
cld
lock
imul
mov
cmp
repz
sub
and
cmp
xor
push
ret
cmp
js
add
jns
add
push
pop
sbb
push
insb
pusha
fs
lcall
mov
jns
pushf
nop
xchg
test
jns
cmpsb
lods
mov
cmpsb
jns
mov
enter
jns
cmpsb
jns
aam
cmpsb
jns
cmpsb
in
loopne
clc
cld
shll
lcall
testb
rcr
sbb
sbb
adc
sub
xor
shll
and
cmp
or
xor
dec
lahf
sub
mov
add
mov
jo
andl
stos
mov
mov
mov
mov
sub
addb
pop
and
push
test
imul
pusha
add
jo
lcall
rol
cwtl
dec
shll
pushf
xchg
xchg
test
mov
movsb
std
icebp
sbb
mov
add
sahf
out
imul
sbb
les
fcomp
shrb
cmpsb
imul
add
inc
xor
xchg
hlt
add
imul
xor
jns
add
sbb
add
sub
outsb
pop
fldt
sub
and
jge
test
jno
lock
test
call
dec
cmpsl
call
cmpsl
imul
cmp
mov
test
mov
std
loopne
mov
insb
lcall
int3
dec
adc
adc
sbb
adc
loopne
cmpsl
lock
roll
movsl
mov
and
mov
jo
out
xor
stos
adc
pusha
mov
xor
add
mov
or
inc
mov
xor
repz
sbb
cmp
mov
sahf
add
into
push
lds
aas
sbbb
out
jecxz
arpl
fiaddl
sub
push
repz
or
push
loope
loop
inc
sbb
lcall
sub
add
sti
mov
inc
cmp
das
aaa
sbb
adc
dec
dec
fwait
inc
xchg
pop
cmp
xor
hlt
add
test
fnstcw
pop
cmp
aad
mov
outsb
sbb
test
lock
test
aaa
mov
add
cs
inc
adc
xor
push
xor
js
cs
sbb
fldcw
xor
divb
in
stos
mov
jo
ret
add
loope
pop
cli
dec
add
add
sarb
cld
mov
pop
jne
adc
in
cwtl
xchg
pop
sub
testl
es
add
les
pop
add
in
fwait
test
lock
or
xlat
mov
add
cs
mov
and
repz
add
push
fwait
or
add
add
ds
nop
pop
and
add
and
or
or
sbb
mov
cmpsl
lcall
mov
add
lcall
cmp
loopne
in
aaa
sub
flds
mov
push
mov
mov
add
popa
add
cmc
inc
add
mov
incl
jbe
add
adc
push
jg
adc
jb
sbb
mov
mov
sbb
je
mov
stc
mov
add
and
cmp
roll
notl
add
cmpb
add
or
push
add
mov
mov
sbb
notb
popa
add
mov
mov
lock
lods
mov
mov
pop
cld
aaa
or
fimull
ficompl
add
je
xor
adc
mov
rolb
sbb
adc
xor
ss
add
cmp
inc
adc
fldt
lcall
rcrb
or
push
xchg
add
test
outsb
out
push
mov
and
icebp
adcl
hlt
cs
add
cld
popf
mov
fcomps
lock
test
bt
out
push
adc
sbb
add
loopne
or
mov
cli
xor
scas
add
mov
or
les
outsl
ret
cld
in
add
adc
adc
test
lea
adc
and
sub
dec
jo
sbb
pop
movsl
int
hlt
pop
mov
icebp
adc
fs
xchg
pop
mov
adc
jno
cmp
bound
fsubrl
lock
add
lcall
outsl
jg
or
push
adc
int3
sbb
adc
idiv
scas
js
push
mov
or
and
sbb
or
jbe
push
test
and
mov
test
enter
add
cmc
add
push
xor
inc
dec
sar
push
nop
in
out
test
push
push
push
xchg
pusha
cli
cmc
add
add
sub
je
fcomip
icebp
add
subl
repz
add
jo
adc
ljmp
subl
push
mov
repz
shlb
inc
push
push
lock
fcompl
fdiv
xor
outsl
clc
add
xor
call
rolb
add
ljmp
push
sbb
sbb
push
or
mov
push
adc
mull
cmp
outsl
outsl
or
out
icebp
xor
rolb
xor
dec
mov
aad
ss
lds
jo
push
jno
push
icebp
loopne
jle
pop
add
jg
pop
dec
mov
add
add
and
sub
and
push
mov
lea
push
mov
mov
and
lods
mov
fstps
shlb
push
xchg
pop
in
and
and
cli
fs
or
xor
push
fdivrs
pop
mov
lods
mov
or
orb
mov
in
divb
xchg
sub
or
mov
mov
lcall
mov
popa
test
fldt
adc
and
push
mov
shrl
inc
xor
jl
test
and
push
roll
shll
fs
stos
inc
aaa
in
sub
xor
subb
in
cli
mov
sbb
pushf
popf
pushl
push
add
push
mov
push
sub
add
outsl
into
icebp
and
add
lret
jl
insb
repz
xchg
roll
fs
add
push
add
push
push
push
adc
push
cld
test
mov
add
mov
add
push
push
addb
xor
push
xor
ret
mov
sbb
mov
movsl
push
mov
sub
push
lock
and
push
ljmp
jmp
cli
adc
push
icebp
mov
add
xchg
dec
test
lds
lock
or
mov
add
lds
enterw
push
cmp
es
fisttpll
out
insb
int3
push
inc
pushf
hlt
lds
mov
or
mov
add
adc
jg
jmp
adc
push
fwait
icebp
push
scas
dec
push
push
into
add
sub
sbb
incb
imul
cli
fcmovne
shlb
adcb
add
sbb
adc
lock
pop
jg
stos
outsl
outsl
ja
lcall
pop
jg
or
hlt
push
stos
and
subb
lret
in
push
mov
pop
push
pop
clc
testb
lret
hlt
pop
pop
incl
push
scas
testl
dec
inc
std
pushl
or
lods
int3
lret
ror
add
les
sbb
push
std
mov
lret
aam
lret
call
push
lret
sbb
int
lcall
notl
decl
pop
or
push
test
dec
es
loopne
call
mov
xchg
or
jp
scas
mov
xchg
int3
aaa
pop
addb
stos
outsl
pop
orb
adc
xorb
stos
add
or
es
xchg
mov
or
dec
or
add
inc
rorl
inc
jecxz
lret
add
mov
push
adc
lock
jne
stc
mov
out
mulb
sldt
or
clc
add
xor
movsb
ret
cmc
push
addb
in
inc
inc
lret
or
or
jbe
inc
lds
push
out
adc
lock
add
mov
pop
add
push
mov
rorl
and
xchg
icebp
xorb
xchg
mov
mov
jmp
loop
adcb
in
and
dec
lock
hlt
mov
jbe
lcall
or
or
jecxz
decb
sub
std
sbb
mov
insb
and
mov
jbe
sbb
mov
fisttps
mov
ret
punpcklbw
add
cmpsb
push
add
jecxz
or
sti
pop
adc
inc
and
and
mov
push
mov
and
repz
sbb
fcos
mov
daa
cli
inc
daa
pusha
subb
add
daa
jg
inc
mov
lcall
mov
push
movsl
mov
or
subl
mov
jo
or
fstpt
mov
or
aas
fs
or
cmp
and
and
dec
or
push
out
push
aam
adc
dec
nop
inc
out
arpl
mov
inc
add
add
sub
rcrb
lock
add
nop
pop
pushf
sbb
add
in
xor
ljmp
dec
sub
adc
pusha
loope
add
adc
push
fisubs
fisttpl
add
adc
bound
push
jb
out
dec
or
test
sub
pop
sub
pop
idivb
out
mov
hlt
inc
add
cs
call
dec
imul
pushf
mov
div
call
loop
push
mov
cmpsb
ret
stos
push
adc
push
or
test
pop
nop
jg
in
add
add
inc
jno
subb
sub
out
mov
test
js
cs
enter
mul
rcll
loopne
cli
stos
cld
addb
loope
sub
loopne
in
jo
inc
frstor
jo
mov
push
test
add
xor
inc
jge
pop
fistps
lock
or
pop
mov
ds
dec
fidivs
sub
inc
adc
imul
das
fildll
mov
add
sbb
pop
pop
cwtl
adcb
ja
pop
fsubr
xor
dec
enter
ljmp
mov
push
mov
add
repz
sub
xor
into
xlat
push
pcmpeqw
pop
arpl
test
inc
xchg
add
fisubl
cmp
sub
cs
test
shlb
xchg
lock
xorl
and
or
adc
addl
lock
es
lcall
xchg
shl
jl
sbb
test
ss
stos
inc
dec
sbb
pushf
addb
jbe
divb
fisttps
cmp
xor
pop
pushf
mov
add
out
insb
and
cs
cmp
jp
fstl
pusha
mov
adc
lock
fcompl
call
jns
add
sbb
popf
mov
cld
pop
inc
or
or
and
inc
stos
incb
sarb
push
jmp
nop
cmp
add
mov
push
lock
adc
cmp
xor
inc
sti
lock
mov
scas
xchg
rcrb
call
lods
mov
dec
add
stos
adc
xor
jl
data16
pop
cs
fidivl
and
hlt
rolb
jns
and
pop
arpl
mov
lcall
mov
icebp
call
inc
adc
aam
sbbl
and
hlt
mov
sahf
mov
pop
sub
mov
mov
add
push
inc
imul
mov
mov
push
mov
or
or
push
inc
pop
mov
add
sbbl
dec
pop
data16
mov
sbb
jo
or
sbb
jl
push
addr16
fsts
or
loope
rcr
dec
lret
mul
mov
ja
into
pusha
loope
sahf
outsb
pop
fcmovbe
lret
rolb
lock
cmp
or
mov
mov
sti
add
dec
inc
jo
or
push
inc
push
add
push
ds
push
lock
idiv
shl
xchg
pusha
loope
push
fmuls
addb
sub
jbe
popa
jbe
fwait
and
push
sbb
pop
jbe
or
sub
sbb
lock
faddl
stos
sbb
xor
pop
and
sub
mov
pusha
fistl
pusha
loope
fstpl
mov
jp
xchg
lahf
xorb
ja
rclb
aaa
pop
jno
xchg
sub
mov
clc
mov
test
xchg
mov
or
js
repnz
inc
adc
fistl
lcall
pop
and
dec
outsl
xchg
in
test
mov
mov
test
and
out
test
hlt
hlt
jo
mov
mov
or
mov
xchg
lcall
loope
jae
scas
mov
inc
mov
popa
add
lret
jl
call
xchg
fwait
xchg
add
pop
xchg
enter
ret
and
cmp
mov
inc
xchg
add
mov
test
xchg
mov
sub
repz
add
jb
test
push
cmp
xor
push
mov
or
cmc
movsb
adc
bound
add
push
add
pusha
inc
aad
pop
xor
pop
cmpsb
fcomps
aaa
jg
fwait
cwtl
xchg
mov
xchg
xchg
incb
or
xchg
or
insb
movsb
shlb
lcall
sarb
or
add
add
push
inc
push
mov
inc
loop
in
mov
add
add
scas
xor
mov
adc
adc
pop
cwtl
rolb
lahf
mov
lahf
rclb
in
and
repnz
iret
and
or
das
test
add
add
pop
sbb
jbe
add
xor
repnz
or
xchg
push
jae
adc
orb
inc
xor
sbb
nop
pop
pop
push
ret
and
mov
jge
popf
mov
jbe
and
push
pop
mov
add
push
cmc
jo
push
mov
cmp
mov
mov
dec
loopne
sbb
ss
test
loope
repz
sahf
add
adcl
adc
adc
adc
mov
repnz
add
std
add
add
adcb
sbb
movsl
pop
xchg
std
add
sbb
fidivs
and
push
pop
jo
jg
add
xor
cltd
pop
adc
mov
add
loopne
repnz
cmpb
clc
and
cmc
add
add
imulb
adc
outsb
mov
cltd
cltd
lcall
jg
movsl
cwtl
test
dec
out
mov
and
addl
xorb
adc
add
xor
and
add
and
test
jg
xchg
push
addl
mov
orl
sbb
or
sub
aam
andl
push
nop
fsubs
pop
test
mov
mov
sar
mov
pop
test
cmpb
test
add
sbbb
xor
sub
addl
add
inc
jge
mov
mov
addl
mov
add
dec
aaa
sti
cmpsl
xchg
push
jno
inc
cltd
mov
shlb
mov
inc
outsb
xchg
mov
leave
and
inc
cmp
orb
cmp
push
fbstp
mov
add
or
adc
inc
mov
xor
pop
lret
rcll
adc
cmp
pop
loopne
inc
pop
sbb
sub
mov
adc
out
xor
jmp
add
out
and
addl
mov
jo
outsl
test
insb
jp
ficoms
inc
movswl
mov
incl
inc
cmp
xor
pop
inc
addb
or
or
mov
int
and
or
stos
sbb
lret
push
fmuls
rol
jo
mov
xor
add
cmpsb
xchg
loopne
and
fistps
push
xor
cwtl
add
clc
add
adc
lcall
xchg
andb
sarb
mov
xchg
push
testb
out
lahf
xchg
fcompl
subl
pop
xchg
xchg
add
mov
sbb
lods
or
adc
jle
sub
lods
cwtl
xchg
cltd
mov
pusha
aad
sub
add
pop
jo
add
mov
add
andb
loopew
cmp
data16
scas
clc
ja
fs
or
ss
xor
mov
out
pushl
ret
outsb
and
dec
ret
dec
xor
push
dec
js
add
in
xor
loope
and
mov
sbb
add
test
jns
xor
add
mov
loop
adc
jge
sbb
add
leave
and
lods
aam
shlb
mov
clc
jg
add
and
and
aaa
bound
jecxz
pop
sbb
les
and
pop
xchg
pop
popa
or
ljmp
addl
add
cmc
ja
into
xchg
mov
cmpsb
or
shrb
cmp
clc
xchg
ret
loopne
rorb
push
push
sbb
jnp
cmpb
mov
sahf
add
add
xor
jbe
inc
mov
or
and
fdiv
xchg
movsl
bound
test
jg
mov
mov
mov
sar
xchg
xorl
sub
popa
push
jecxz
stos
inc
mov
and
lcall
inc
push
mov
sub
add
andb
clc
aaa
sbb
xor
add
in
xchg
mov
inc
or
mov
inc
mov
mov
pop
negb
mov
scas
into
add
ljmp
cwtl
and
hlt
loop
ret
mov
add
pop
ljmp
add
add
mov
dec
adc
add
notl
mov
orb
popa
fcompl
cmp
mov
jp
or
push
add
xor
arpl
adc
mov
add
daa
adc
inc
idivb
xchg
shrb
and
push
cwtl
clc
lea
or
mov
test
bound
add
mov
xor
push
mov
mov
sub
jmp
adc
repnz
mov
inc
pop
dec
dec
sbb
ljmp
fadds
mov
jl
loope
call
out
out
inc
add
jle
call
hlt
icebp
add
add
xchg
xchg
pop
xchg
roll
mov
add
or
punpckhdq
add
mov
add
shrb
int3
lahf
xchg
sarl
add
ret
cmp
lcall
xchg
mov
sbb
mov
push
subl
hlt
fimull
fistpll
int3
push
push
mov
mov
lock
lock
mov
rclb
cmp
or
nop
jae
xchg
sbb
hlt
pop
mov
push
loopne
idivb
xorb
iret
jb
arpl
xchg
xchg
and
aam
push
or
mov
xor
mov
andb
add
arpl
xchg
push
or
sbb
xchg
xchg
mov
addb
xchg
mov
mov
xor
testb
inc
lcall
faddl
roll
push
or
jle
xor
rcrb
mov
mov
adc
mov
push
mov
push
sti
xchg
mov
lock
sbb
punpcklwd
cmpxchg
jmp
xlat
call
add
add
cwtl
push
cld
fcomip
addl
mov
rolb
jo
xor
scas
push
mov
xor
idivl
xchg
roll
std
in
mov
outsb
roll
mov
sub
xchg
loope
adc
bound
mov
cmp
push
add
jno
mov
movsl
sbbl
popf
pop
xchg
outsl
pop
add
pop
loopne
fnsave
pcmpeqb
xchg
add
and
in
mov
pop
sbb
ret
and
sub
adc
mov
mov
xchg
shr
fistpl
orl
mov
popa
or
sbb
mov
insl
out
cld
hlt
and
fwait
sbb
fdivp
mov
xor
adc
xor
repnz
or
push
pop
sbb
mov
inc
add
pushl
add
jl
movsb
adc
mov
inc
sub
sub
pushl
push
xchg
xchg
or
mov
das
jp
jg
nop
add
adc
lahf
test
pop
sbb
ljmp
test
dec
shrb
pushf
lds
or
call
outsb
jp
xor
loope
fcomi
ud0
call
xchg
push
adc
dec
push
or
mov
push
or
sahf
xor
in
push
pop
cli
stos
xchg
int
add
jle
mov
jg
xchg
push
mov
rorb
js
pop
or
jo
jno
mov
push
mov
dec
icebp
call
push
sbb
shll
jae
mov
jmp
call
iret
push
pop
ret
int3
rcrb
mov
jns
lea
add
add
mov
add
mov
add
pop
int
cmpsb
lods
loop
push
shrb
or
pop
xchg
lock
xor
into
sbb
popa
add
or
sub
xchg
fcoms
inc
bound
repz
sub
pop
add
lock
sarb
mov
pop
movsl
je
fwait
pop
jbe
and
popl
fbstp
cmp
xor
xorl
add
xor
cmp
jg
test
ret
inc
push
add
pop
inc
add
int3
cmpsb
xchg
sub
nop
adcb
pop
or
addr16
mov
out
xchg
push
sbbb
jbe
lahf
cmp
jo
fisubrs
icebp
testl
jno
jge
add
jne
dec
mov
inc
mov
add
pusha
xchg
and
xor
movsb
outsl
jo
adc
lea
jbe
push
cmp
xchg
and
or
addb
inc
or
test
mov
mov
inc
cmpl
and
das
ret
idiv
shlb
movups
and
nop
or
mov
jne
push
call
cmp
add
xchg
int3
xlat
mov
xchg
mov
sbbb
cmpsb
cld
test
push
pop
adc
mov
mov
sahf
les
pop
add
cltd
popf
test
subb
xchg
mov
cmp
add
mov
pushf
addl
negb
cs
mov
and
and
bound
dec
adc
in
cmpsl
sbbl
mov
jbe
mov
dec
add
push
adc
add
adc
mov
mov
jge
movsb
xchg
loop
scas
adc
in
add
push
aam
inc
in
aaa
xor
mov
or
test
mov
xor
pop
movsl
popf
adc
fisttps
loop
add
mov
xchg
lea
ljmp
sub
xlat
test
mov
cmpb
js
nop
push
cltd
mov
mov
sub
into
sbbb
cwtl
inc
fidivl
mov
jae
adcl
test
add
orb
or
or
or
sbb
and
lcall
adc
xchg
ficoms
rcr
mov
mov
cmpb
push
sub
loopne
mov
xlat
int
shll
xor
fmuls
cmp
adc
out
adc
call
add
sub
in
mov
je
and
cld
int
outsb
or
mov
adc
test
adc
inc
stos
inc
or
mov
movsl
mov
nop
inc
and
push
popl
add
addl
clc
sbb
int3
and
inc
cwtl
les
int3
pop
add
or
dec
xor
outsl
aaa
mov
ret
leave
inc
add
movb
jo
movsl
add
test
mov
fs
pop
mov
hlt
fdiv
jb
sarb
aas
add
adc
push
shlb
mov
int3
inc
xchg
clc
hlt
outsl
mov
push
mov
inc
inc
hlt
mov
add
and
pop
xchg
add
and
lds
pop
inc
or
stc
test
shrl
into
adc
inc
push
and
rorb
adc
push
std
lods
loope
sub
pop
push
mov
mov
dec
ret
rol
add
outsb
fsubrl
in
or
pushl
jle
nop
cld
or
nop
cltd
sub
jg
lret
sbb
cld
xchg
lock
test
mov
add
xor
ss
enter
mov
call
or
and
pop
call
push
add
loope
lds
or
add
insb
mov
mov
xor
pusha
sbb
and
push
add
cmpsb
xchg
xchg
lock
jo
cmp
cld
movsl
or
out
mov
add
dec
in
add
das
ss
inc
movsl
rcrl
scas
push
cld
mov
movsb
add
loop
mov
adc
or
popf
icebp
push
sarl
dec
add
sub
add
mov
jne
stos
inc
aaa
sub
inc
mov
xchg
loop
adc
mov
scas
cmpsb
mov
scas
mov
xchg
addl
decl
sub
add
stos
lea
add
mov
adc
test
or
inc
sbbl
je
ret
cmp
incl
cmpsb
add
or
xchg
ljmp
and
pop
and
and
loope
inc
punpckhwd
add
pop
data16
mov
push
adc
sub
inc
mov
loop
mov
loopne
pop
push
cmp
or
movsl
pop
lcall
or
decl
xchg
xor
lods
and
call
popf
cmpsb
or
ds
mov
cmpsb
add
cmpsl
add
jb
imul
add
andb
dec
les
mov
add
arpl
add
and
add
and
fistpll
mov
push
sbb
mov
push
jecxz
mov
mov
inc
fmull
lea
xchg
and
rcrb
jmp
les
loope
movsl
je
fists
shrb
inc
add
pusha
ja
repnz
scas
call
xchg
xchg
sbb
ja
jge
bound
fwait
and
stos
cltd
mov
test
mov
inc
add
loope
add
repnz
inc
fnstcw
add
add
inc
xchg
loope
push
pop
add
push
orl
cmp
push
ljmp
mov
pushl
xchg
jecxz
mov
movsb
adc
jb
andl
dec
cmp
inc
subl
sbb
nop
push
andb
sub
inc
add
nop
adc
add
push
adc
pop
jo
add
sub
les
sbb
jg
icebp
fildll
inc
out
dec
mov
movsl
add
repz
push
repnz
or
push
ret
inc
add
add
icebp
or
fiadds
outsb
mov
xor
or
xor
inc
std
sbb
add
add
fmull
shr
cs
sbb
xor
or
mov
pusha
outsb
loopne
or
dec
dec
out
cld
lcall
bound
aas
in
js
mov
push
sbb
add
in
xor
mov
cli
aaa
in
inc
xchg
pop
pop
xor
mov
stos
or
adc
add
out
sbb
jne
xchg
repz
pop
inc
mov
dec
push
mov
ja
in
ljmp
mov
lret
push
cmp
mov
mov
xor
jp
push
aas
mov
gs
mov
xchg
popf
mov
xchg
mov
mov
or
mov
adc
mov
pop
shlb
pop
hlt
lcall
add
adc
sbb
pop
mov
inc
cmp
clc
push
add
out
adc
loope
xorl
std
mov
mov
gs
add
ret
dec
icebp
fistps
cmpsb
mov
xor
lods
or
jle
lcall
mov
daa
or
jge
jge
shrl
pop
arpl
add
je
ds
sub
mov
incl
movsb
xchg
xor
cmp
add
or
and
incl
mov
int
mov
in
add
xor
ficoml
xor
pop
leave
es
aad
sub
push
sar
mov
xor
mov
repz
roll
sbb
mov
and
bound
adc
xor
test
aaa
cld
or
xchg
jb
adc
mov
sub
cmp
arpl
adc
loop
add
sub
pop
and
xchg
dec
bound
pop
call
rolb
aad
adc
dec
daa
movsl
jg
int
push
jge
leave
xchg
mov
pop
icebp
fwait
jle
in
test
jnp
dec
fs
or
pushl
push
pop
push
rcrl
pop
fmul
mov
push
adc
mov
and
mov
cmp
add
ja
addr16
out
mov
shll
xlat
jg
into
je
mov
dec
cmp
int
lock
push
inc
push
adc
and
mov
ljmp
xchg
aam
sub
xchg
and
sub
mov
iret
push
jno
mov
je
push
inc
mov
out
movsb
imul
add
rolb
mov
sarl
scas
repnz
sub
or
jge
push
addr16
jne
out
test
jne
sahf
bound
fbld
imul
sub
cld
ret
sub
pop
push
and
sub
and
outsl
int
std
lcall
push
unpcklps
mov
add
insb
ss
jno
cli
mov
movsl
lret
mov
cwtl
sar
or
or
or
lcall
lods
imul
add
insl
push
mov
lcall
add
imul
sti
push
mov
imul
adc
js
rcr
mov
jne
cmp
icebp
lret
add
aas
ret
lret
pusha
push
xor
or
cmpsb
lret
or
cmp
push
or
xchg
cmp
jle
mov
push
inc
clc
out
or
testl
or
outsb
cmp
stos
testb
mov
xor
xcrypt-cbc
cmpsl
adc
mov
dec
jb
stos
mov
shll
stos
into
addb
add
mov
sarl
addb
repnz
mov
push
shll
ds
ljmp
dec
inc
sbb
add
inc
test
repnz
cmpl
pop
rcrl
data16
jle
sbb
ss
imul
push
xor
jbe
push
out
in
call
mov
rcr
loop
into
ljmp
adc
cld
int
cld
into
mov
mov
xchg
into
lcall
jp
lock
push
push
into
pop
into
inc
dec
into
xor
cmp
add
push
lret
divb
cli
add
enter
enter
out
mov
mov
xchg
enter
enter
jp
enter
out
push
enter
enter
cmp
and
sub
enter
inc
jmp
add
or
leave
cli
leave
loop
ljmp
mov
or
leave
mov
xchg
leave
lcall
out
cmpsb
leave
push
mov
push
leave
pop
leave
inc
leave
leave
xor
cmp
and
mov
rcrb
leave
add
or
cs
jg
push
cli
loop
mov
lock
fcmovb
mov
mov
mov
cld
int
stos
xchg
lcall
jp
push
cld
int
cld
pop
movb
xor
cmp
and
sub
sbb
add
or
mov
repnz
cli
loop
mov
rol
fcmovb
ret
mov
mov
jg
aaa
xchg
lcall
jp
mov
jg
pop
movl
and
adc
sbb
add
jg
aaa
jg
repnz
cli
rol
fcmovb
ret
mov
mov
jg
aaa
les
les
jp
les
repz
jg
pop
les
les
les
les
les
les
les
les
aaa
jg
repnz
loop
fcmovb
ret
mov
mov
mov
xor
xchg
fwait
ret
mov
out
aas
mov
inc
lds
lds
lds
lds
lds
outsl
vcmpss
loop
insl
mov
fcoml
cld
int
cld
ret
add
jb
jp
push
ret
inc
ret
addr16
fdivs
ret
insb
or
fwait
lahf
add
aaa
jg
mov
ret
fcmovb
ret
mov
mov
push
xor
xchg
ret
lcall
dec
loope
stos
adc
ret
cmp
fwait
mov
mov
adc
sbb
add
ret
repnz
loop
rcl
fwait
cmp
fcmovb
ret
add
fildll
or
xor
pusha
xor
js
push
hlt
cmp
cmp
push
ret
mulb
ss
inc
data16
add
xor
xor
loopne
aaa
adc
jbe
loopne
es
or
inc
xchg
int
int
int
int
add
sub
lods
add
pop
std
lret
sub
int3
xchg
mov
lret
fiadds
xchg
enter
mov
sub
mov
leave
xor
inc
inc
jg
outsb
popa
inc
xchg
hlt
mov
inc
cmc
jmp
aaa
xor
pushf
mov
jne
imul
or
fwait
mov
js
sub
mov
mov
cmp
lds
sub
outsb
rcrb
or
ret
andb
ret
mov
add
push
ret
cmpsb
std
push
nop
int3
ret
and
aaa
ret
aas
and
sub
pop
ret
or
jle
mov
mov
jbe
shlb
and
pop
inc
inc
call
or
rcr
test
fsts
movl
adc
fwait
jg
iret
iret
mov
add
iret
pushf
jo
arpl
adc
or
aaa
fwait
adc
jg
fildll
xchg
int
int
int
adc
adc
push
int
test
lret
lret
lret
lret
mov
je
add
and
and
xchg
or
sub
lret
pop
lret
xor
jns
or
fwait
ret
add
add
pusha
ja
fs
mov
pop
sbb
aad
pop
add
les
pop
lds
lds
ret
in
dec
add
cld
idiv
aas
out
rcrb
loopne
jnp
pop
into
cld
and
lcall
lock
jbe
iret
jmp
cmpsb
jmp
loope
outsl
cmp
int3
push
adc
int3
sti
int
int
int
data16
int
lret
loopne
mov
dec
lret
and
insb
or
repz
add
call
dec
enter
enter
jo
dec
loopne
cmp
sbb
add
enter
sub
fsts
std
adc
mov
movsb
mov
jns
pusha
adc
mov
jns
mov
sub
sub
add
lds
ficoml
pop
out
loopne
add
rcll
lock
pop
into
popf
dec
pop
int3
loop
nop
mov
int
int
lret
pop
lock
adc
or
add
lret
lret
ret
lret
in
sbbb
fmuls
push
mov
xor
das
cmc
lds
lret
ret
or
pop
add
ret
mov
mov
push
sar
push
and
mov
into
adc
or
in
ror
cmpsb
iret
cwtl
iret
push
and
xchg
push
mov
and
out
pop
push
loopne
pop
xor
ror
and
push
push
outsb
loopne
ljmp
imulb
push
aas
cs
notb
jnp
inc
sub
push
add
or
mov
les
les
adc
mov
adc
inc
fistpl
xchg
adc
ret
mov
popa
ret
or
inc
jmp
ret
je
pusha
dec
in
sbb
and
loope
into
mov
dec
into
sub
cli
iret
loop
ljmp
ret
and
cs
and
sub
pop
int3
sbb
or
push
int
int
int
ljmp
lret
and
sar
fbstp
lret
add
mov
xor
mov
jo
adc
sbb
pop
inc
call
outsl
movl
rorb
or
fwait
ret
ljmp
adc
dec
lds
fcomip
pop
cmpsb
push
ret
pusha
ret
dec
bound
ret
out
in
ror
cmpsb
jg
mov
fwait
rorb
or
sar
loopne
call
ror
fdivr
int
mov
shrl
data16
pop
shrl
ret
incl
dec
shll
or
int
xor
lret
mov
lret
lret
test
cltd
lret
lret
or
lret
rcrb
nop
mov
xor
and
inc
fbld
push
mov
xchg
lcall
add
cmpsl
les
outsb
les
les
lds
lds
nop
dec
xor
ret
fmuls
fdiv
cmp
sub
shl
pop
fld
jg
subb
inc
rorb
cmp
rcrb
inc
out
add
aam
mov
push
cld
jmp
mov
jb
rorl
repz
iret
add
leave
nop
adc
into
enter
ret
les
dec
int3
xor
sbb
out
loope
ror
pop
hlt
int
xchg
ror
int
lret
lret
xor
test
jnp
jecxz
aad
sbb
mov
dec
faddp
mov
jge
addr16
out
mov
inc
push
les
call
ret
ret
test
jbe
fcomip
outsl
dec
shrl
xchg
jo
js
push
int
int
int
ljmp
cmp
leave
or
ljmp
enter
jg
adc
shll
and
lret
mov
cmp
lcall
lret
cli
and
mov
jne
push
rcrl
sbbb
int3
cmp
fcmove
lahf
xor
mov
scas
sahf
lret
mov
sub
or
mov
add
add
inc
leave
sub
push
jmp
dec
test
xchg
ret
popf
lock
test
orl
ret
mov
jne
dec
jge
jns
gs
popa
ret
insl
ret
mov
push
nop
dec
pop
mov
inc
ret
dec
ret
dec
ret
xor
push
adc
in
mov
sub
adc
and
ret
add
or
cmc
clc
mov
inc
icebp
sar
stc
push
dec
or
shr
dec
aad
shrl
fstl
mov
mov
sarb
out
out
shrb
rcrb
rorb
or
shl
icebp
sar
stc
lcall
loope
in
shr
aad
rcr
fld
vpsubw
ss
mov
mov
mov
mov
mov
shrl
rcrl
rorl
pop
loopne
adc
shll
shrl
rcll
lock
cld
mov
clc
inc
rcrl
test
leave
testb
loop
mov
adc
fldt
fdivrl
mov
icebp
ljmp
outsb
add
jle
das
and
mov
xor
std
mov
add
lds
lds
test
js
sarl
arpl
inc
xor
ret
mov
and
decl
shll
xor
into
jp
mov
add
repz
mov
bnd
pop
int
int
int
loop
int3
lret
je
fwait
decb
lret
mulb
add
in
lret
leave
lock
cltd
push
jno
std
out
clc
jp
and
enter
xor
nop
insl
mov
push
leave
daa
mov
addb
fsubl
aas
mov
leave
pop
add
cmp
lock
push
mov
lods
fwait
mov
or
movsb
adc
rol
mov
push
ret
jo
adc
jle
or
nop
or
sbb
incl
rcrb
hlt
sar
jecxz
test
rolb
int
cmp
roll
lock
mov
das
ror
mov
int
xchg
iret
popf
iret
test
mov
mov
jb
jl
fs
iret
adc
jg
filds
iret
or
lock
cld
lret
loopne
call
xchg
lock
lock
les
jle
inc
int
ljmp
cmpsb
jo
icebp
pop
xlat
lret
nop
push
inc
push
lret
sti
enter
leave
enter
incl
or
popa
leave
imul
adc
hlt
fsts
adc
outsl
call
xor
imul
sbb
les
aad
fdivr
adc
jbe
jno
push
lds
lds
lds
lds
rol
push
adc
ret
xchg
push
sub
mov
ljmp
mov
iret
dec
mov
movsl
int
int
int
notb
xor
cmp
sub
int
lret
fiaddl
add
aad
jae
stos
lret
scas
cli
decl
push
addr16
pop
lret
shlb
lret
sbb
or
add
add
mov
xchg
lret
jnp
inc
adc
bswap
mov
leave
lods
leave
fs
dec
sbb
adc
xchg
jecxz
test
loope
call
mov
mov
test
shlb
movl
jg
adc
inc
or
lock
cli
mov
scas
les
les
aaa
sub
sub
lds
incl
adc
in
ret
rcll
iret
rcrb
sub
ret
mov
mov
les
ret
je
xchg
cmp
sbb
mov
into
in
into
mov
inc
into
adc
int3
lock
lds
lret
pop
call
loopne
jp
xchg
data16
jo
jo
add
push
mov
jae
ljmp
mov
pop
shl
cmpsb
adc
lock
cmp
mov
inc
into
jns
sbb
fistl
mov
iret
xor
and
iret
repnz
into
jo
inc
int3
jae
shrb
in
mov
test
lret
cli
inc
nop
sbb
jo
or
adc
ljmp
push
add
and
sbb
mov
mov
mov
mov
add
pop
repz
mov
ds
xchg
add
shlb
dec
lods
int3
mov
mov
lret
dec
gs
or
bnd
loope
rorl
mov
dec
lock
pushl
hlt
or
mov
pop
rcrb
xchg
fadd
clc
idiv
fldl
fcmovnb
and
jle
les
push
mov
les
aaa
loope
sub
loop
aam
adc
into
fnsave
mov
iret
bswap
cmc
int3
cld
ror
sar
jg
xchg
int3
xchg
lea
jge
pusha
int3
inc
int3
adc
ljmp
lock
jg
int
int
xor
int
shlb
lret
push
push
mov
push
std
fists
lret
out
lret
call
scas
lret
xchg
or
lret
or
ja
rcr
inc
add
lret
sbb
pusha
sub
or
enter
enter
enter
jge
fistps
cmp
sbb
enter
leave
mov
leave
and
add
push
cmpsb
data16
add
xor
sar
movsb
rol
mov
mov
cltd
in
and
stos
outsl
sub
rcll
movl
popa
cli
or
les
filds
xchg
lds
mov
jo
xlat
ret
push
adcl
ret
sahf
ret
fwait
mov
jl
pop
mov
mov
rcl
outsl
ljmp
lcall
roll
shll
sbb
into
into
add
or
or
cld
iret
in
iret
iret
mov
add
iret
push
mov
iret
sub
int3
push
sbb
daa
push
cli
adc
add
int
adc
aaa
int3
and
psllw
jmp
leave
int
lods
sbb
adc
int
in
jmp
lret
popf
adc
push
fwait
or
sub
xor
pop
lret
sti
lret
les
in
lret
jo
jnp
lret
insl
lret
push
pop
lret
inc
lret
dec
lret
repnz
xor
cmpsl
enter
rolb
push
push
mov
leave
mov
adc
cmp
xlat
sub
sahf
push
repnz
add
es
mov
and
je
sub
mov
pop
dec
ss
push
and
inc
jmp
adc
mulb
pop
rolb
aam
out
faddp
mov
les
add
les
jmp
outsl
xor
and
adc
or
lds
mov
lds
or
inc
addb
enter
push
repz
outsl
cli
add
ret
ret
stos
ret
xchg
sub
ret
jg
push
rorb
mov
lcall
fisubrs
hlt
es
add
ret
adc
adc
aad
sub
out
shll
inc
dec
jb
mov
stos
xchg
subb
adc
aaa
rclb
adc
push
loop
adc
or
fisubrl
stos
xchg
sarl
in
add
mov
shl
sti
sub
fdiv
test
gs
adc
adc
dec
lds
or
cs
into
add
cmpsb
test
sub
pop
test
push
fdivrl
sub
imul
int
cmp
lret
push
repz
jg
lret
jae
fs
dec
lret
cmp
add
or
jg
enter
enter
gs
test
sub
add
or
sti
push
cld
inc
pop
rol
movsb
xchg
and
sub
push
adc
sbb
ficoml
sbb
jbe
daa
adc
sbb
std
shrb
stos
mov
ret
dec
dec
les
adc
imulb
add
inc
adc
dec
lds
jo
ret
inc
fcmovnb
or
ffree
mov
cmp
or
ljmp
push
int3
mov
xor
lret
rolb
fmul
add
inc
and
and
dec
add
and
adc
scas
insb
dec
xchg
add
or
and
mov
sti
and
mov
xor
add
inc
jbe
lds
addl
mov
int3
data16
or
add
lret
jbe
and
fisubrs
adc
xchg
repnz
jecxz
mov
mov
xor
jle
fistpll
inc
xchg
out
push
xor
ret
popf
fildl
jg
ret
inc
ret
inc
ret
dec
adc
xor
aas
adc
ret
xchg
lcall
das
sub
pop
ret
adc
pop
sbb
cli
jg
ret
movnti
or
ja
inc
js
sarb
and
shr
inc
jp
jmp
subl
ror
adc
jg
shlb
hlt
cmpsl
shlb
pop
js
xchg
rclb
cmp
jle
jae
sarb
shlb
outsl
shrb
rolb
rolb
dec
je
inc
roll
into
adc
mov
js
imul
pop
add
arpl
sbb
cmp
push
xor
int
int
int
idiv
push
adc
int
adc
int
lret
ror
or
lret
subb
jb
jp
addr16
pop
lret
dec
lret
add
out
clc
das
hlt
inc
hlt
lret
cli
push
ror
fcmove
ret
nop
mov
mov
out
lret
xchg
sahf
lret
xchg
dec
stc
out
enter
fimull
enter
enter
leave
aas
or
adc
xor
xor
xor
push
xor
jg
or
mov
mov
fsubl
mov
mov
ret
and
mov
bound
ret
push
loopne
and
das
rcrb
into
cmp
or
iret
lock
mov
cmp
dec
loopne
call
iret
fmul
les
test
sbbb
stos
iret
xchg
lret
cmp
aaa
mov
int3
fxch
lret
in
int3
fwait
int3
xorl
mov
mov
mov
lret
movsl
lret
pusha
sbb
lret
jecxz
sbb
fmul
mov
mov
ja
out
mov
icebp
enter
mov
imul
cld
leave
ror
cmpsb
mov
add
mov
jg
pop
adc
or
mov
xchg
les
sar
mov
int
jo
js
aaa
lds
ret
mov
dec
mov
ja
fisubl
mov
leave
inc
jne
jp
fstp
icebp
push
push
push
inc
jae
xchg
call
pop
loopne
outsl
call
sti
lret
ljmp
invd
mov
mov
enter
cltd
mov
test
ret
loopne
ljmp
mov
call
andb
insl
mov
pop
ret
xor
ret
ret
shl
clc
jecxz
ret
rol
mov
test
push
pusha
dec
in
rclb
mov
xchg
add
arpl
dec
rcll
mov
mov
inc
mov
iret
pushf
sbb
inc
jp
iret
push
iret
xor
and
in
int3
mov
int3
jno
pop
mov
inc
fstps
mov
int
int
lock
hlt
fisttps
in
out
lret
fldt
mov
mov
push
push
mov
lret
aaa
test
outsb
lret
xchg
lret
cwtl
mov
cld
decl
xor
and
sub
pusha
mov
sahf
test
ja
out
add
mov
mov
push
out
ljmp
jecxz
call
add
inc
ja
pusha
sub
int3
pusha
lods
xor
inc
mov
les
lds
jl
inc
mov
rclb
shlb
rclb
adc
adc
push
outsb
pop
or
iret
dec
mov
cmp
int3
or
adc
push
mov
jne
fnstenv
enter
xchg
pop
sar
leave
scas
leave
pop
leave
push
loope
and
les
lock
pop
sub
ja
movl
les
jecxz
mov
lds
cmp
jg
pop
icebp
sti
loopne
mov
movsl
ret
cwtl
pusha
adc
ret
cmpsb
shrb
sbb
xor
mov
or
in
lods
or
dec
rcr
mov
cmp
adc
rcl
pusha
shll
push
ret
add
adc
fisubrl
ljmp
int3
adcb
mov
int
cmp
lret
xchg
lret
inc
jle
pusha
daa
or
push
and
sahf
ljmp
jo
sub
jo
or
and
jl
aaa
les
and
loopne
int
lods
incl
mov
ret
inc
and
mov
jge
mov
shll
in
and
adc
mov
flds
ret
nop
sahf
adc
ror
leave
pusha
inc
and
sbbb
mov
loopne
push
fsubrl
leave
add
cmpsl
sbb
mov
add
stos
loopne
xchg
jbe
loop
cld
call
add
and
add
bound
fildll
pop
movb
dec
push
aaa
push
push
cmp
pop
sub
fidivrl
sbb
add
adc
cli
add
out
cli
aaa
jg
loopne
in
adc
fadd
fld
ret
enter
mov
push
cmp
mov
bound
movl
sarb
js
pop
outsb
imul
pushl
es
int3
inc
xor
sarl
xor
cmp
cmp
call
clc
and
push
sbb
jnp
or
test
cmp
sbb
jmp
mov
dec
fs
lret
nop
mov
mov
pop
aad
out
cmpsl
mov
les
jo
mov
adc
les
sarb
inc
les
dec
sub
or
daa
mov
les
jge
les
insl
lds
lds
daa
pop
cs
adc
out
sarb
shl
xchg
shrl
sti
fwait
cwtl
shll
rcll
push
in
into
xor
aaa
jg
xchg
into
push
into
add
cld
jmp
das
lock
cld
push
ljmp
lret
or
enter
rolb
icebp
xor
ljmp
faddp
inc
dec
xor
jo
push
xchg
les
les
outsl
pushf
ret
aaa
stos
testb
fidivl
icebp
ret
cmp
inc
lods
iret
inc
iret
andb
and
push
int
jo
add
leave
mov
cmp
ja
adcb
mov
data16
xchg
stc
or
int
hlt
xor
ret
cmpsl
ret
mov
push
ret
rolb
inc
pushl
mov
inc
sbb
pop
shll
jmp
pop
pop
loopne
std
iret
scas
int3
and
enter
xor
jmp
es
push
pusha
xchg
lret
pop
mov
inc
mov
sub
fidivrs
aam
les
xor
or
les
test
adc
sbb
ret
inc
adc
shl
cmp
into
jne
pushf
push
gs
sbb
ja
fisttps
rcr
push
mov
mov
pop
cmpb
ret
dec
inc
ret
in
nop
adc
in
fcmovnu
push
or
adc
inc
into
cmp
and
adc
fnsave
mov
call
iret
xor
add
repz
std
int3
loop
in
push
aaa
scas
int3
jg
pop
int3
and
sbb
ror
int
adc
mov
es
or
in
mov
cmpsl
add
xorl
notl
nop
pop
lahf
lret
cltd
push
movsb
movsl
enter
adc
add
leave
jno
push
or
ljmp
sti
add
rol
mov
movb
mov
outsb
sahf
nop
aaa
and
sbb
cmp
push
mov
lahf
icebp
add
jmp
mov
lods
ret
ret
cmc
andb
jnp
xchg
imul
cmp
out
lock
lret
mov
mov
or
lock
in
out
leave
jmp
ret
outsl
jg
leave
mov
mov
leave
xchg
leave
fwait
leave
addb
shrb
sub
imul
leave
xor
and
cmpsb
add
add
lock
pop
xor
push
add
arpl
mov
subb
lds
mov
pop
addr16
mov
cmpsb
lds
mov
xchg
mov
cmpsl
or
data16
lds
ss
int3
push
hlt
adc
push
dec
push
ret
bound
rclb
and
push
dec
adc
lock
sbb
inc
add
test
add
ret
inc
pusha
and
or
and
and
clc
incl
ret
mov
mov
jb
jp
sub
nop
fidivs
adc
std
mov
inc
repnz
addr16
fisubrs
add
mov
jle
rclb
rorb
fisubrs
andb
rolb
add
push
push
pop
cltd
push
or
repnz
cli
shl
loop
out
shr
sar
mov
add
shrb
fcmovb
mov
and
ror
mov
mov
scas
shrl
addb
sahf
pushf
xchg
cmpb
test
decl
shll
add
and
adc
push
fiaddl
adc
push
xchg
jo
adc
lcall
and
in
in
lahf
add
arpl
xlat
sub
add
jl
add
or
loop
add
lods
mov
enter
js
aas
dec
je
and
push
mov
pushf
mov
push
ret
mov
dec
out
push
cmp
cltd
dec
ret
pop
icebp
push
test
lret
inc
pushf
fnstenv
push
pcmpeqd
jl
dec
test
push
add
adc
add
or
push
das
mov
bnd
or
clc
mov
loop
jae
lret
mov
jp
cmp
out
xor
or
and
in
popa
jg
and
pop
dec
jle
out
add
fbld
add
in
scas
xchg
lods
jmp
les
or
or
imul
data16
leave
sub
jg
xor
test
loop
mov
pop
jg
outsl
cli
push
adc
inc
cli
out
in
push
add
adcb
inc
pop
clc
outsb
push
popf
cwtl
test
cwtl
gs
test
or
xor
lock
push
add
mov
les
add
insb
jmp
adc
ljmp
mov
sarl
mov
std
or
xor
add
jp
jge
inc
add
jmp
out
sub
add
mov
jmp
push
pop
cld
aas
mov
cmpb
icebp
sub
or
aam
insl
out
sub
pop
icebp
lea
xchg
jns
push
cmp
adc
cmp
mov
mov
pop
xchg
mov
pop
pop
fwait
pop
or
js
cld
mov
add
bound
lods
lret
jnp
out
sbb
and
jbe
hlt
sbb
or
movsb
bound
inc
sub
clc
jp
lock
aam
out
jecxz
fbstp
pushf
mov
xor
add
jmp
cli
add
bound
aaa
std
call
jecxz
pop
add
inc
cs
sahf
pop
jg
out
add
fidivrl
std
dec
hlt
add
push
imul
pop
adc
std
mov
and
push
mov
and
pop
inc
out
clc
popf
and
mov
insl
mov
inc
inc
out
add
or
aaa
ljmp
imul
insb
insb
outsl
arpl
insl
jo
jb
push
je
imul
push
push
sub
dec
popa
outsb
fs
sbb
je
pop
sti
fbld
imul
js
push
inc
popa
fs
out
fsts
jle
gs
popa
imul
mov
mov
outsl
sbb
fisubrs
enter
je
gs
dec
jnp
fimuls
push
push
popa
mov
shl
jbe
inc
jb
and
arpl
outsl
outsb
mov
das
push
jo
insb
jne
cmp
fs
std
addb
push
outsl
dec
jne
ss
jns
xchg
adc
sub
sub
gs
and
inc
imul
std
mov
push
jb
gs
inc
popf
inc
imul
dec
insb
xchg
jb
outsb
adc
ss
jo
xchg
in
jns
sbb
ss
push
outsl
imul
push
lods
test
fisttpl
inc
movsb
cmp
popa
insb
inc
push
ror
jo
or
je
mov
or
xorl
mov
pop
sub
adc
inc
lods
mov
outsb
insl
dec
xchg
adc
lods
xor
cmpsb
cmp
cmpsl
adc
je
jo
aam
push
inc
je
imul
mov
xor
or
aaa
inc
insb
jne
push
push
xorb
sbb
jge
shll
dec
addr16
or
fs
mov
fisttps
jb
mov
rorl
daa
inc
jbe
pop
mov
fstl
jbe
arpl
inc
pop
jmp
or
nop
adc
push
dec
in
push
pop
rcl
gs
xlat
dec
mov
stos
loope
sbb
mov
bound
clc
xchg
sbb
push
jns
gs
jno
insb
sub
mov
shll
sbb
ss
jno
sub
js
inc
sub
mov
dec
outsl
nop
or
mov
sbb
jmp
insl
mov
sub
add
sbb
mov
or
inc
sub
lds
pop
insl
cmc
mov
popa
push
mov
xlat
lock
jle
dec
bound
mov
scas
stos
dec
in
js
mov
cmp
sbb
mov
sbb
lea
dec
cmpsb
adc
and
in
loopne
jo,pt
outsw
inc
or
lods
xchg
repz
jno
jne
popa
xlat
das
insb
sub
arpl
jae
push
adc
sbb
sub
adc
sub
jo
imul
jae
scas
inc
adc
inc
adc
inc
mov
add
or
push
push
in
pusha
xor
adc
add
jne
add
jae
mov
add
stos
outsl
jo
fs
shr
inc
sub
jl
jb
push
adc
inc
cmp
enter
xchg
xchg
sbb
xchg
add
mov
vpinsrw
stos
sbb
add
push
cli
les
mov
and
clc
dec
adc
data16
fcmovbe
jle
inc
xor
outsl
pop
arpl
jb
inc
ret
dec
cmp
lahf
pusha
arpl
push
outsb
fs
bound
mov
lods
mov
cld
pop
jne
popa
jb
gs
es
imul
pop
fwait
mov
fwait
cltd
mov
popf
shll
adc
lahf
cmp
xor
mov
pop
and
mov
xchg
test
fadds
mov
lahf
scas
adc
jecxz
mov
les
adc
mov
adc
push
inc
das
xchg
inc
and
xchg
test
or
pushf
sbb
or
inc
inc
mov
xor
and
sbb
cmp
imul
cmp
adc
jo
pushf
lock
ss
add
inc
ja
push
jo
and
mov
push
pusha
jb,pn
popa
je
inc
bswap
in
mov
outsb
dec
push
lock
in
cs
dec
lods
stc
push
xor
add
xor
vpsraw
jb
daa
movups
dec
adc
insl
fisubs
cmp
add
incl
add
add
add
std
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
nop
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
jo
add
add
in
add
add
add
add
add
add
add
addb
add
xchg
add
add
in
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
rolb
add
jae
add
add
add
add
add
jo
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
out
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pusha
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
push
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
arpl
push
add
jb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
arpl
push
add
jb
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
arpl
push
add
jb
and
je
outsl
add
insb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
and
add
inc
add
insl
add
add
je
jae
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
movsl
mov
fmull
pop
mov
cli
push
gs
fmul
je
out
out
inc
xorl
dec
iret
pusha
aaa
sub
push
dec
inc
mov
pop
dec
sbb
in
or
inc
push
mov
add
stos
or
xchg
xor
jecxz
ds
jmp
adc
jl
stos
xlat
push
ret
mov
stos
enter
dec
sub
stc
inc
outsb
ds
and
insl
add
and
stos
mov
mov
mov
rcll
cltd
dec
out
in
inc
add
sub
imul
pop
mov
pop
fwait
mov
rcrb
jne
mov
sub
cs
adcl
jecxz
stc
aam
cli
xchg
and
push
shlb
stos
xchg
outsb
stc
imul
outsb
loope
adc
sbb
sbb
daa
pop
push
cmp
cmp
adc
repz
ret
movsl
sar
jl
xor
pushf
js
inc
mov
inc
loopne,pt
push
mov
cmc
inc
sahf
mov
mov
sbb
inc
in
das
mov
int
cmp
pop
jge
pop
cmc
repz
lods
lock
push
fwait
lea
addr16
shr
les
xor
lods
push
adc
push
and
addr16
pop
mov
or
xchg
push
jg
je
pop
pop
push
sub
outsl
sbb
push
sbb
stos
leave
xor
shll
xchg
jle
int3
mov
sbb
and
das
out
and
push
out
daa
mov
sbb
jg
cli
lcall
lea
and
sarl
stos
sti
xor
jecxz
sbb
dec
or
push
pusha
test
call
sub
repz
inc
add
fs
fcoms
xor
add
mov
adc
scas
mov
mov
push
pop
jne
xor
aas
mov
lret
jg
ja
mov
sub
cli
push
int
sub
sub
iret
xchg
jb
mov
and
xchg
shlb
inc
addb
mov
fidivl
cmp
or
dec
xchg
push
int
cmp
sbb
pop
loope
int3
ljmp
fwait
xchg
shll
add
fsubs
push
mov
ficompl
inc
mov
les
pop
aas
add
dec
outsb
in
sarl
push
mov
mov
int
or
dec
divb
scas
cld
ret
sub
pop
inc
xchg
int3
xchg
subb
push
cmp
mov
mov
ja
insb
imull
rclb
jle
test
xchg
mov
or
mov
push
adc
mov
inc
stos
xchg
sub
jbe
cmpsl
stos
out
add
jmp
xlat
jno
mov
dec
sbb
in
lock
popa
adc
add
mov
fcomps
stos
gs
test
jg
loope
pushf
mov
dec
add
lods
mov
mov
lds
js
ds
sarb
in
xchg
imul
mov
cmc
popf
xor
sahf
jnp,pt
outsl
or
jp
call
add
in
cmc
add
int3
pop
pop
sub
mov
pushf
xchg
and
fiaddl
getsec
or
test
or
adc
xchg
aad
notb
jecxz
bound
or
xor
loop
outsl
pusha
movsl
out
xor
cli
jne
outsb
push
pop
rcrb
enter
lds
cmpsl
loopne
lea
push
inc
call
addr16
mov
adcl
insb
lcall
lahf
push
clc
adc
mov
jge
or
outsl
out
pop
add
popa
rorl
push
aad
nop
arpl
pop
mov
inc
dec
mov
mov
sbb
stc
pop
jnp
popf
fwait
sbb
arpl
rcll
sbb
mov
dec
push
mov
pop
js
js
mov
push
pop
pushf
mov
mov
sub
push
aad
pop
addr16
push
push
insl
idivb
adc
or
negb
xchg
into
mov
inc
int3
push
xchg
push
xchg
mov
sub
xchg
imul
dec
pop
repnz
jmp
pop
mov
mov
sbb
mov
test
sub
popa
pop
mov
sbb
sbb
fsubl
inc
cli
hlt
outsl
pop
ljmp
repnz
inc
imul
popa
lcall
lret
aas
pop
mov
or
data16
mov
mul
cmp
bound
imul
inc
int3
add
jae
xor
mov
arpl
mov
hlt
out
das
adcl
pop
negb
push
cwtl
dec
test
xlat
xor
orl
mov
cmc
data16
or
or
pop
ret
ds
fsubrp
dec
mov
je
imulb
repz
pop
ret
push
and
fcoms
shr
idivb
movsb
outsb
mov
mov
xor
xchg
jmp
mov
sub
pop
sub
jp
sti
into
and
cmp
dec
sub
inc
ret
out
fnsave
je
sbb
js
pop
or
fs
fsubrp
and
add
cmp
push
or
mov
in
mov
add
jl
adc
fidivrl
mov
mov
adc
jle
das
gs
pop
pop
dec
sbb
pop
rcr
push
pushf
xchg
fstpl
cmc
mov
jo
mov
loope
fldlg2
xor
test
test
mov
fdivr
fldenv
sub
pop
and
fbld
sub
sahf
or
insl
clc
clc
aad
adc
jmp
sub
mov
ret
nop
mov
arpl
pop
jae
frstor
fsubrl
fstpt
xchg
mov
aas
push
sbb
and
lcall
push
cmp
pop
mov
aaa
sbb
fisttpl
out
jp
adc
sub
popf
jnp
clc
and
xor
repnz
std
xor
jnp
mov
imul
test
cmp
shll
ja
popf
lea
cwtl
adc
add
mov
sub
fs
jecxz
sub
inc
out
cmp
sbb
xchg
cmp
jno
lds
cmpsl
inc
push
in
cmp
js
mov
mov
sbb
dec
je
mov
cli
shrb
imul
sub
mov
jae
push
lahf
dec
mov
inc
inc
sub
push
dec
lret
jg
pop
sbb
jmp
icebp
push
inc
out
xchg
mul
ss
sub
mov
stc
std
xor
js
push
mov
mov
pop
cmpl
jno
cmp
movsb
or
in
loop
xlat
mov
hlt
icebp
push
push
xor
and
fs
insl
jb
out
mov
xchg
xor
cli
pop
fildl
jno
lods
cli
mov
jl
adc
sub
push
adc
ljmp
lret
mov
mov
or
gs
dec
cmp
mov
ret
cmp
cmp
repz
mov
icebp
pop
stc
xchg
add
enter
pop
loop
xor
sbb
shll
mov
push
xchg
fwait
push
hlt
pop
push
lahf
add
push
fsubrl
subb
outsl
aam
std
mov
push
mov
push
xor
cwtl
xchg
pop
aas
div
adc
sub
mov
repnz
and
ret
mov
mov
std
dec
sub
jno
loop
cmp
or
sub
mov
mov
mov
rclb
xor
jl
xorb
mov
pop
ror
mov
js
scas
insb
rcl
push
pop
pop
pop
jge
fistpl
mov
jb
lret
pop
lods
in
in
xor
sub
push
mov
ss
or
shlb
mov
loopne
mov
xchg
les
mov
sub
ds
jge
dec
cmc
fsubl
enter
scas
sub
mov
push
inc
test
or
and
mov
pop
daa
mov
shr
orl
shlb
addr16
imul
insl
je
cmc
xchg
lock
push
mov
push
xchg
ret
jno
mov
inc
dec
popa
push
fdivs
sub
xor
ja
bound
add
xor
adc
or
outsl
mov
cmp
int3
pop
jmp
pop
sbb
adc
movsb
out
insb
xchg
in
cli
repnz
sub
jnp
cmp
xor
push
movsb
pop
movsl
les
or
inc
popa
scas
shll
pop
pop
test
pusha
mov
hlt
push
xlat
ret
pusha
cs
xchg
xlat
push
std
mov
popf
ljmp
icebp
sbb
sub
nop
scas
and
mov
outsb
mov
cmp
pop
cwtl
adc
push
mov
cmp
sbbl
jb
lcall
adc
mov
jmp
adc
dec
loopne
pop
leave
rorl
mov
inc
lret
fsubl
add
fwait
xchg
lahf
shlb
leave
push
addr16
cmp
xchg
cmp
loopne
xchg
jae
int3
xorl
loopne
imul
in
data16
xchg
cs
dec
mov
push
mov
or
push
in
sar
xor
adc
jne
xlat
int
stc
dec
sub
cmp
xchg
xor
aas
and
subb
repnz
movsb
pusha
sahf
inc
mov
sahf
push
xchg
fwait
sti
and
dec
mov
data16
movb
inc
mov
jae
scas
push
aam
push
icebp
pop
hlt
push
iret
or
sti
daa
enter
jb
cmp
cwtl
sub
rolb
insl
sbb
les
lods
xor
and
adc
push
icebp
or
push
add
lds
loop
or
fs
popf
pop
xchg
inc
pop
inc
pop
push
xor
insb
arpl
cmp
js
sub
jbe
cmp
lcall
dec
dec
mov
cld
jns
mov
mov
jmp
or
mov
pushf
or
mov
mov
mov
jnp
dec
fisubl
enter
sub
pop
testl
leave
and
jg
push
dec
sub
aas
add
sub
insb
add
shrl
or
jge
stos
xor
mov
pop
daa
shrl
or
xchg
mov
fnstcw
or
dec
sbb
add
add
mov
scas
test
into
sarl
fistpl
lock
push
or
or
out
pop
mov
cmp
push
ja
add
lea
outsb
pop
fistpll
push
into
xchg
jmp
inc
push
cli
or
fwait
mov
inc
push
add
mov
rcrl
push
mov
cwtl
je
bound
decb
insl
push
or
scas
daa
dec
xor
mov
lcall
mov
hlt
jecxz
shlb
out
sub
xchg
sub
ja
dec
test
lahf
jge
pop
cmpsb
sbbl
mov
les
pop
mov
and
cmp
inc
shlw
call
mov
xor
call
outsb
je
mov
es
jmp
lahf
into
mov
les
cmp
ret
sbb
imul
out
mov
test
dec
lahf
push
int3
mov
pop
push
sahf
in
push
inc
add
in
cmpsl
push
pop
jnp
xor
fldcw
dec
loope,pt
pop
xor
outsb
cmp
sub
add
cmc
push
or
int
ret
and
test
mov
out
and
mov
cmpsl
pop
dec
mov
cmp
loop
repz
popf
ss
xchg
sahf
outsb
pop
shlb
outsb
add
gs
sti
rolb
add
iret
fidivs
dec
mov
push
xchg
mov
mov
push
int
mov
add
loop
fisttpll
jg
mov
xchg
and
or
xor
mov
cmp
mov
repz
jb
loopne
lahf
mov
xor
test
mov
pop
sub
xchg
xchg
sahf
mov
xor
cmp
iret
fnstcw
mov
mov
lods
sbb
jb
fisubrs
mov
shl
xchg
scas
dec
aas
fisttpll
fcoml
gs
icebp
mov
mov
push
ds
mov
mov
lahf
and
pop
sbb
sbb
ficomps
add
pop
cwtl
lret
mov
cwtl
arpl
pop
lods
and
mov
and
clc
imul
mov
cmp
xchg
sub
cmp
adc
fstl
repnz
xchg
xlat
sahf
mov
xchg
sbb
mov
xor
clc
frstor
call
mov
jns
mov
je
test
push
int
or
jno
mov
fisttps
sarb
mov
mov
nop
in
sub
sbb
icebp
outsb
sbb
xlat
addr16
outsb
sbb
imul
xchg
adc
mov
divl
sbb
and
push
data16
stc
mov
movsb
psubb
dec
cmc
mov
arpl
loopne
lods
xchg
inc
pop
sbb
pop
jb
cwtl
imul
mov
in
mov
push
cmp
enter
jno
push
cmp
addr16
daa
push
rolb
or
lret
addl
jbe
call
and
pop
inc
insl
or
test
jmp
push
pusha
sbb
push
mov
js
clc
dec
popa
lods
ds
adc
movsb
adc
dec
pushf
in
sbbb
sbb
xchg
adc
xchg
xor
fistpll
xor
and
jnp
push
fisubs
mov
mov
pop
pop
push
jo
je
gs
subb
xor
inc
cmp
std
and
mov
fisttpll
lea
sub
cmc
stos
rcrb
dec
and
in
in
popl
stos
lcall
shlb
pop
stos
lcall
insb
sub
or
insl
scas
xchg
push
cs
sbb
adc
dec
push
cmc
insb
sti
outsb
inc
loope
push
stc
ret
push
test
push
mov
repz
mov
dec
lret
rorb
popw
test
imul
leave
call
push
outsb
js
mov
jb
push
aam
in
inc
ret
add
andl
repz
lcall
pop
sub
dec
fidivrs
xor
enter
inc
xor
mov
cwtl
push
dec
dec
sub
das
pushf
and
xor
xchg
pop
dec
scas
xor
test
cmp
xchg
dec
mov
scas
cld
frstor
sbbl
fmull
jae
int3
pop
inc
sub
sub
repz
pop
cmpsl
jnp
popf
jge
sbb
cmp
mov
pop
mov
insb
dec
sbb
repnz
fs
dec
jno
lret
es
inc
inc
mov
dec
and
xor
fdivl
outsb
mov
xor
sarl
std
js
jne
pusha
lods
mov
push
jne
shlb
cltd
roll
jbe
shl
mov
push
push
stc
mov
push
out
jnp
jg
add
adc
ret
fldenv
cmp
clc
mov
das
fsubr
jge
fdivp
adc
cmp
and
sub
inc
mov
ja
sbb
jp
push
mov
js
das
mov
push
loope
testb
je
gs
xchg
sbb
ret
xchg
bound
xor
xchg
push
push
push
test
imul
icebp
out
test
push
stos
dec
lods
pop
int
stc
in
in
or
mov
mov
pop
or
dec
ficoms
push
stos
pop
add
aas
test
sahf
jae
imul
out
inc
gs
mov
in
inc
repz
jo
and
jbe
sbb
sbb
adc
lock
mov
es
insl
push
add
pushf
xchg
out
xchg
loope
mov
out
cmpsl
jg
mov
jae
add
cmp
mov
aaa
das
fsubrs
jp
cltd
pushf
xor
xchg
mov
and
push
pop
add
and
fwait
or
fwait
cli
xlat
adc
mov
gs
ret
daa
cltd
rol
cmpsb
out
adc
adc
mov
pop
cltd
mov
jmp
aam
dec
push
and
mov
xlat
and
cmc
fsubrs
adc
fldt
jle
addr16
loopne
stos
fadds
cwtl
mov
xchg
adc
dec
clc
dec
xchg
in
inc
mov
jg
push
inc
inc
xor
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
out
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pusha
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
push
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
arpl
push
add
jb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
arpl
push
add
jb
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
arpl
push
add
jb
and
je
outsl
add
insb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
and
add
inc
add
insl
add
add
je
jae
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
movsl
mov
fmull
pop
mov
cli
push
gs
fmul
je
out
out
inc
xorl
dec
iret
pusha
aaa
sub
push
dec
inc
mov
pop
dec
sbb
in
or
inc
push
mov
add
stos
or
xchg
xor
jecxz
ds
jmp
adc
jl
stos
xlat
push
ret
mov
stos
enter
dec
sub
stc
inc
outsb
ds
and
insl
add
and
stos
mov
mov
mov
rcll
cltd
dec
out
in
inc
add
sub
imul
pop
mov
pop
fwait
mov
rcrb
jne
mov
sub
cs
adcl
jecxz
stc
aam
cli
xchg
and
push
shlb
stos
xchg
outsb
stc
imul
outsb
loope
adc
sbb
sbb
daa
pop
push
cmp
cmp
adc
repz
ret
movsl
sar
jl
xor
pushf
js
inc
mov
inc
loopne,pt
push
mov
cmc
inc
sahf
mov
mov
sbb
inc
in
das
mov
int
cmp
pop
jge
pop
cmc
repz
lods
lock
push
fwait
lea
addr16
shr
les
xor
lods
push
adc
push
and
addr16
pop
mov
or
xchg
push
jg
je
pop
pop
push
sub
outsl
sbb
push
sbb
stos
leave
xor
shll
xchg
jle
int3
mov
sbb
and
das
out
and
push
out
daa
mov
sbb
jg
cli
lcall
lea
and
sarl
stos
sti
xor
jecxz
sbb
dec
or
push
pusha
test
call
sub
repz
inc
add
fs
fcoms
xor
add
mov
adc
scas
mov
mov
push
pop
jne
xor
aas
mov
lret
jg
ja
mov
sub
cli
push
int
sub
sub
iret
xchg
jb
mov
and
xchg
shlb
inc
addb
mov
fidivl
cmp
or
dec
xchg
push
int
cmp
sbb
pop
loope
int3
ljmp
fwait
xchg
shll
add
fsubs
push
mov
ficompl
inc
mov
les
pop
aas
add
dec
outsb
in
sarl
push
mov
mov
int
or
dec
divb
scas
cld
ret
sub
pop
inc
xchg
int3
xchg
subb
push
cmp
mov
mov
ja
insb
imull
rclb
jle
test
xchg
mov
or
mov
push
adc
mov
inc
stos
xchg
sub
jbe
cmpsl
stos
out
add
jmp
xlat
jno
mov
dec
sbb
in
lock
sbb
cs
xor
sbb
xchg
xchg
mov
repz
fcoms
mov
sbb
jg
or
in
cld
mov
leave
mov
pushf
mov
pop
inc
push
imul
iret
cli
xor
shlb
outsl
xchg
xor
movsl
pop
add
mov
das
inc
scas
push
in
mov
dec
xor
xchg
clc
and
mov
inc
cmp
sbb
mov
xor
xchg
sti
fs
call
adc
test
mov
int3
and
jnp
in
sti
in
pop
xchg
icebp
adc
stos
mov
shrb
inc
sub
daa
and
pop
pop
dec
addb
xor
cld
test
popf
and
lret
fbstp
sbb
push
mov
cmpsb
out
sahf
push
push
sbb
cltd
or
loop
mov
sbb
mov
cmp
imul
icebp
outsb
xchg
pop
jae
pushf
rol
push
shrb
xchg
stos
dec
or
dec
lcall
sub
outsb
das
jg
sub
sub
xchg
stc
dec
pop
sysexit
or
pop
ret
test
mov
mov
cmc
inc
mov
cmp
pmullw
leave
dec
addr16
testl
ss
shlb
mov
adc
fistpll
xor
mov
push
int3
aad
jle
mov
jns
jo
inc
sbb
jg
scas
scas
insl
scas
mov
xor
fwait
loop
xchg
sahf
pop
cmp
out
sbb
outsl
rcl
adc
inc
sti
bound
push
dec
jae
fiadds
mov
and
stc
jl
or
and
test
inc
push
test
sbb
xchg
xor
or
xchg
mov
adc
shlb
int3
sbb
adc
loope
repz
inc
ss
rorb
inc
int3
add
jae
xor
mov
arpl
mov
hlt
out
das
adcl
pop
negb
push
cwtl
dec
test
xlat
xor
orl
mov
cmc
data16
or
or
pop
ret
ds
fsubrp
dec
mov
je
imulb
repz
pop
ret
push
and
fcoms
shr
idivb
movsb
outsb
mov
mov
xor
xchg
jmp
mov
sub
pop
sub
jp
sti
into
and
cmp
dec
sub
inc
ret
out
fnsave
je
sbb
js
pop
or
fs
fsubrp
and
add
cmp
push
or
mov
in
mov
add
jl
adc
fidivrl
mov
mov
adc
jle
das
gs
pop
pop
dec
sbb
pop
rcr
push
pushf
xchg
fstpl
cmc
mov
jo
mov
loope
fldlg2
xor
test
test
mov
fdivr
fldenv
sub
pop
and
fbld
sub
sahf
or
insl
clc
clc
aad
adc
jmp
sub
mov
ret
nop
mov
arpl
pop
jae
frstor
fsubrl
fstpt
xchg
mov
aas
push
sbb
and
lcall
push
cmp
pop
mov
aaa
sbb
fisttpl
out
jp
adc
sub
popf
jnp
clc
and
xor
repnz
std
xor
jnp
mov
imul
test
cmp
shll
ja
popf
lea
cwtl
adc
add
mov
sub
fs
jecxz
sub
inc
out
cmp
sbb
xchg
cmp
jno
lds
cmpsl
inc
push
in
cmp
js
mov
mov
sbb
dec
je
mov
cli
shrb
imul
sub
mov
jae
push
lahf
dec
mov
inc
inc
sub
push
dec
lret
jg
pop
sbb
jmp
icebp
push
inc
out
xchg
mul
ss
sub
mov
stc
std
xor
js
push
mov
mov
pop
cmpl
jno
cmp
movsb
or
in
loop
xlat
mov
hlt
icebp
push
push
xor
and
fs
insl
jb
out
mov
xchg
xor
cli
pop
fildl
jno
lods
cli
mov
jl
adc
sub
push
adc
ljmp
lret
mov
mov
or
gs
dec
cmp
mov
ret
cmp
cmp
repz
mov
icebp
pop
stc
xchg
add
enter
pop
loop
xor
sbb
shll
mov
push
xchg
fwait
push
hlt
pop
push
lahf
add
push
fsubrl
subb
outsl
aam
std
mov
push
mov
push
xor
cwtl
xchg
pop
aas
div
adc
sub
mov
repnz
and
ret
mov
mov
std
dec
sub
jno
loop
cmp
or
sub
mov
mov
mov
rclb
xor
jl
xorb
mov
pop
ror
mov
js
scas
insb
rcl
push
pop
pop
pop
jge
fistpl
mov
jb
lret
pop
lods
in
in
xor
sub
push
mov
ss
or
shlb
mov
loopne
mov
xchg
les
mov
sub
ds
jge
dec
cmc
fsubl
enter
scas
sub
mov
push
inc
test
or
and
mov
pop
daa
mov
shr
orl
shlb
addr16
imul
insl
je
cmc
xchg
lock
push
mov
push
xchg
ret
jno
mov
inc
dec
popa
push
fdivs
sub
xor
ja
bound
add
xor
adc
or
outsl
mov
cmp
int3
pop
jmp
pop
sbb
adc
movsb
out
insb
xchg
in
cli
repnz
sub
jnp
cmp
xor
push
movsb
pop
movsl
les
or
inc
popa
scas
shll
pop
pop
test
pusha
mov
hlt
push
xlat
ret
pusha
cs
xchg
xlat
push
std
mov
popf
ljmp
icebp
sbb
sub
nop
scas
and
mov
outsb
mov
cmp
pop
cwtl
adc
push
mov
cmp
sbbl
jb
lcall
adc
mov
jmp
adc
dec
loopne
pop
leave
rorl
mov
inc
lret
fsubl
add
fwait
xchg
lahf
shlb
leave
push
addr16
cmp
xchg
cmp
loopne
xchg
jae
int3
xorl
loopne
imul
in
data16
xchg
cs
dec
mov
push
mov
or
push
in
sar
xor
adc
jne
xlat
int
stc
dec
sub
cmp
xchg
xor
aas
and
subb
repnz
movsb
pusha
sahf
inc
mov
sahf
push
xchg
fwait
sti
and
dec
mov
data16
movb
inc
mov
jae
scas
push
aam
push
icebp
pop
hlt
push
iret
or
sti
daa
enter
jb
cmp
cwtl
sub
rolb
insl
sbb
les
lods
xor
and
adc
push
icebp
or
push
add
lds
loop
or
fs
popf
pop
xchg
inc
pop
inc
pop
push
xor
insb
arpl
cmp
js
sub
jbe
cmp
lcall
dec
dec
mov
cld
jns
mov
mov
jmp
or
mov
pushf
or
mov
mov
mov
jnp
dec
fisubl
enter
sub
pop
testl
leave
and
jg
push
dec
sub
aas
add
sub
insb
add
shrl
or
jge
stos
xor
mov
pop
daa
shrl
or
xchg
mov
fnstcw
or
dec
sbb
add
add
mov
scas
test
into
sarl
fistpl
lock
push
or
or
out
pop
mov
cmp
push
ja
add
lea
outsb
pop
fistpll
push
into
xchg
jmp
inc
push
cli
or
fwait
mov
inc
push
add
mov
rcrl
push
mov
cwtl
je
bound
decb
insl
push
or
scas
daa
dec
xor
mov
lcall
mov
hlt
jecxz
shlb
out
sub
xchg
sub
ja
dec
test
lahf
jge
pop
cmpsb
sbbl
mov
les
pop
mov
and
cmp
inc
shlw
call
mov
xor
call
outsb
je
mov
es
jmp
lahf
into
mov
les
cmp
ret
sbb
imul
out
mov
test
dec
lahf
push
int3
mov
pop
push
sahf
in
push
inc
add
in
cmpsl
push
pop
jnp
xor
fldcw
dec
loope,pt
pop
xor
outsb
cmp
sub
add
cmc
push
or
int
ret
and
test
mov
out
and
mov
cmpsl
pop
dec
mov
cmp
loop
repz
popf
ss
xchg
sahf
outsb
pop
shlb
outsb
add
gs
sti
rolb
add
iret
fidivs
dec
mov
push
xchg
mov
mov
push
int
mov
add
loop
fisttpll
jg
mov
xchg
and
or
xor
mov
cmp
mov
repz
jb
loopne
lahf
mov
xor
test
mov
pop
sub
xchg
xchg
sahf
mov
xor
cmp
iret
fnstcw
mov
mov
lods
sbb
jb
fisubrs
mov
shl
xchg
scas
dec
aas
fisttpll
fcoml
gs
icebp
mov
mov
push
ds
mov
mov
lahf
and
pop
sbb
sbb
ficomps
add
pop
cwtl
lret
mov
cwtl
arpl
pop
lods
and
mov
and
clc
imul
mov
cmp
xchg
sub
cmp
adc
fstl
repnz
xchg
xlat
sahf
mov
xchg
sbb
mov
xor
clc
frstor
call
mov
jns
mov
je
test
push
int
or
jno
mov
fisttps
sarb
mov
mov
nop
in
sub
sbb
icebp
outsb
sbb
xlat
addr16
outsb
sbb
imul
xchg
adc
mov
divl
sbb
and
push
data16
stc
mov
movsb
psubb
dec
cmc
mov
arpl
loopne
lods
xchg
inc
pop
sbb
pop
jb
cwtl
imul
mov
in
mov
push
cmp
enter
jno
push
cmp
addr16
daa
push
rolb
or
lret
addl
jbe
call
and
pop
inc
insl
or
test
jmp
push
pusha
sbb
push
mov
js
clc
dec
popa
lods
ds
adc
movsb
adc
dec
pushf
in
sbbb
sbb
xchg
adc
xchg
xor
fistpll
xor
and
jnp
push
fisubs
mov
mov
pop
pop
push
jo
je
gs
subb
xor
inc
cmp
std
and
mov
fisttpll
lea
sub
cmc
stos
rcrb
dec
and
in
in
popl
stos
lcall
shlb
pop
stos
lcall
insb
sub
or
insl
scas
xchg
push
cs
sbb
adc
dec
push
cmc
insb
sti
outsb
inc
loope
push
stc
ret
push
test
push
mov
repz
mov
dec
lret
rorb
popw
test
imul
leave
call
push
outsb
js
mov
jb
push
aam
in
inc
ret
add
andl
repz
lcall
pop
sub
dec
fidivrs
xor
enter
inc
xor
mov
cwtl
push
dec
dec
sub
das
pushf
and
xor
xchg
pop
dec
scas
xor
test
cmp
xchg
dec
mov
scas
cld
frstor
sbbl
fmull
jae
int3
pop
inc
sub
sub
repz
pop
cmpsl
jnp
popf
jge
sbb
cmp
mov
pop
mov
insb
dec
sbb
repnz
fs
dec
jno
lret
es
inc
inc
mov
dec
and
xor
fdivl
outsb
mov
xor
sarl
std
js
jne
pusha
lods
mov
push
jne
shlb
cltd
roll
jbe
shl
mov
push
push
stc
mov
push
out
jnp
jg
add
adc
ret
fldenv
cmp
clc
mov
das
fsubr
jge
fdivp
adc
cmp
and
sub
inc
mov
ja
sbb
jp
push
mov
js
das
mov
push
loope
testb
je
gs
xchg
sbb
ret
xchg
bound
xor
xchg
push
push
push
test
imul
icebp
out
test
push
stos
dec
lods
pop
int
stc
in
in
or
mov
mov
pop
or
dec
ficoms
push
stos
pop
add
aas
test
sahf
jae
imul
out
inc
gs
mov
in
inc
repz
jo
and
jbe
sbb
sbb
adc
lock
mov
es
insl
push
add
pushf
xchg
out
xchg
loope
mov
out
cmpsl
jg
mov
jae
add
cmp
mov
aaa
das
fsubrs
jp
cltd
pushf
xor
xchg
mov
and
push
pop
add
and
fwait
or
fwait
cli
xlat
adc
mov
gs
ret
daa
cltd
rol
cmpsb
out
adc
adc
mov
pop
cltd
mov
jmp
aam
dec
push
and
mov
xlat
and
cmc
fsubrs
adc
fldt
jle
addr16
loopne
stos
fadds
cwtl
mov
xchg
adc
dec
clc
dec
xchg
in
inc
mov
jg
push
inc
inc
dec
sahf
cmp
adc
add
pop
sahf
cmp
sub
cmp
data16
cmp
xor
cmp
jb
cmp
cmp
cmp
jnp
cmp
inc
sahf
cmp
xchg
cmp
movsb
sahf
cmp
mov
cmp
ret
add
sahf
cmp
add
add
ficomps
add
out
sahf
cmp
add
add
push
lahf
cmp
add
add
adc
cmp
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
cs
insb
add
jne
popa
jo
cs
insb
add
insl
jo
fs
insb
add
gs
insb
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
gs
insb
jne
je
jb
gs
outsb
je
jb
popa
arpl
add
arpl
pop
jb
jo
add
push
je
push
je
push
