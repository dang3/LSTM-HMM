decl
add
xlat
mov
outsb
xchg
and
loopne
insb
icebp
bound
iret
inc
adc
inc
int3
jb
call
scas
lcall
shl
and
scas
mov
ljmp
pop
loopne
leave
mov
lcall
sbb
pop
sub
cli
popa
rcl
sbb
dec
jge
jg
jns
mov
popa
jge
push
jl
in
test
inc
dec
out
adc
cmp
cmc
cli
test
pop
mov
lods
call
out
test
adc
jb
adc
in
scas
fcoms
or
insl
call
popf
inc
stos
bnd
iret
and
pop
sbb
inc
xchg
sbb
fsubs
or
call
pop
insb
je
xchg
and
pop
sbb
hlt
pop
push
ds
cmp
pop
inc
inc
mov
adc
loope
lcall
sub
stos
fidivrs
mov
outsl
cli
mov
movsl
test
in
dec
lock
clc
jecxz
ljmp
loopne
ss
fwait
and
xchg
les
in
or
push
pop
xor
outsl
aam
je
adc
xor
ljmp
push
or
int3
jo
mov
add
inc
decb
sbb
inc
mov
mov
jne
xchg
xchg
repz
xchg
mov
mov
pop
outsl
pop
lret
call
ljmp
repz
insb
pop
xchg
shrb
cmp
push
dec
pop
push
jmp
subb
mov
scas
pop
fidivl
cltd
leave
and
loope
jg
scas
outsl
xor
sub
int
mov
fidivs
lret
jo
movsb
fwait
xchg
stos
test
test
fnclex
adc
jno,pt
fidivs
es
scas
and
hlt
jl
mov
mov
mov
clc
xor
xor
das
sti
cmp
aam
push
add
sub
pop
xchg
pop
and
fidivrl
mov
filds
dec
or
ja
mov
dec
dec
or
cs
jo
mov
aas
add
mov
inc
push
cs
add
push
insl
das
push
decl
push
add
pop
fisubl
adc
lret
mov
daa
andb
in
decl
dec
insb
clc
imul
mov
mov
jnp
ret
lret
in
and
movsb
sub
push
cmpsb
repnz
add
xchg
mov
jge
xlat
dec
je
testl
pusha
clc
and
sub
pusha
pop
ret
fmulp
in
scas
dec
mov
call
jmp
roll
cli
arpl
cmp
or
repnz
incl
shrb
push
add
dec
mov
inc
adc
cmp
xchg
lds
jae
inc
test
mov
arpl
inc
enter
sti
popf
cs
mov
and
dec
lret
sti
lcall
xchg
std
fwait
addb
shl
or
adc
addl
sub
repz
das
cld
jmp
in
sub
jbe
stc
mov
scas
scas
cltd
xchg
dec
mov
fdivl
dec
in
in
std
dec
inc
cmpsb
sbb
jno
clc
movsb
insl
enter
jmp
cmp
imulb
popf
scas
cmpsl
pop
adc
push
ret
in
test
or
jmp
aas
xor
jmp
lds
xor
inc
rcrb
nop
js
aad
clc
inc
pusha
cmp
stc
push
add
ljmp
std
xor
sub
or
dec
rcl
pop
mov
dec
jns
fistps
insl
icebp
pop
rcrb
dec
mov
push
rcrl
mov
test
ljmp
das
add
jae
scas
push
adc
mov
leave
push
push
adc
cmpsb
xchg
cmp
mov
mov
scas
push
pop
fcmovu
jno
in
sbb
or
xchg
cmpsl
mov
mov
ljmp
sub
inc
cmp
mov
loope
jecxz
and
call
push
das
pop
sbb
js
sub
or
adc
sbbl
outsl
lods
lret
cmp
xlat
rorl
test
push
out
imul
repz
flds
add
sti
call
or
sbb
add
add
decl
dec
xor
ss
jp
mov
mov
jbe
addb
add
cmp
or
jl
jmp
mov
jb
pop
push
add
add
adc
outsl
call
add
je
cli
add
cs
or
psadbw
in
xchg
insb
and
mov
fldl
inc
add
nop
clc
jg
pop
dec
dec
nop
jb
push
jmp
lea
jne
dec
add
sbbb
test
mov
jbe
popf
xorl
leave
dec
mov
idiv
dec
cld
jnp
add
enter
pop
dec
inc
cmp
or
int3
jmp
dec
sub
add
xor
add
frstor
xchg
les
sbb
int3
or
cmpsb
adc
add
popf
add
pop
xchg
loopne
mov
call
mov
sbb
and
stc
cs
cld
add
xor
cmp
jmp
ljmp
cltd
add
sahf
xlat
jle
and
push
dec
add
rcrb
push
xlat
add
sbb
push
sbb
loope
ja
insb
cmp
cltd
mov
in
test
mov
add
movsb
add
cmp
mov
rorl
add
and
lods
insb
rcll
add
test
lds
outsl
pushl
add
in
cmp
in
psubq
sti
mov
jmp
lret
or
push
xor
push
jl
xor
jg
push
push
push
xor
sub
repnz
mov
and
and
stos
lock
out
mov
incl
mov
cmp
jne
xor
inc
jmp
add
ret
push
mov
add
jo
ja
pushf
pusha
mov
fimuls
and
hlt
inc
sbb
add
sbb
mov
idivl
sub
inc
push
decl
idivl
out
into
outsb
or
dec
and
testl
in
and
inc
jne
push
jmp
or
cld
add
adc
add
lahf
movsl
sti
fimull
adc
xor
and
out
into
mov
xorl
mov
out
fstpt
adc
mov
pop
cld
push
dec
or
mov
adc
or
fildll
aad
jnp
dec
sarl
cmp
or
adc
add
fdivs
ret
mov
neg
xchg
out
pusha
lcall
inc
enter
or
mov
push
imul
dec
hlt
inc
arpl
inc
call
in
inc
adc
dec
icebp
dec
int
test
outsl
adc
sbb
outsb
cmp
cs
mov
mov
inc
sub
adc
test
adc
fstpl
mov
jg,pt
push
and
sbb
in
jg
movl
out
xchg
add
lock
add
xorb
leave
mov
popf
imulb
mov
and
jmp
or
sub
mov
cmp
and
sti
in
sub
adc
pop
adc
adc
rcrb
fistpl
aam
fbld
dec
push
push
mov
aam
adc
mov
lods
push
adc
lods
sub
arpl
cli
dec
lock
inc
xor
inc
adc
daa
sbb
mov
xor
xchg
fidivl
inc
xchg
mov
sub
in
sbb
mov
push
fwait
add
fstpl
jecxz
jmp
jmp
adc
pop
outsl
sbb
xor
xor
mov
cs
clc
scas
jl
out
pop
sbb
dec
fcoms
aad
pop
add
pop
mov
and
movsb
fcmovnu
mov
add
mov
cmp
mov
jecxz
adc
fbstp
xchg
scas
add
jnp
add
mov
shlb
add
das
cmp
and
hlt
pop
outsl
loop
ds
pop
gs
mov
push
es
lcall
or
adc
mov
je
sahf
adc
lods
adc
sbbl
pop
add
ret
mov
fs
mov
sbb
adc
push
jl
jmp
lock
xchg
or
cmc
arpl
cmp
inc
clc
outsl
mov
adc
addb
fcmovnu
sub
mov
lods
popf
adc
pop
mov
int3
aaa
js
xchg
add
add
add
lock
mov
inc
test
jecxz
sub
das
mov
shl
pushf
add
std
dec
push
les
mov
mov
and
mov
mov
clc
mov
add
fsubrs
pop
testb
dec
jns
mov
clc
dec
pop
loopne
sbb
xor
das
lock
push
xor
daa
outsl
repz
sar
adcb
sub
aam
enter
std
add
outsl
out
fildl
xchg
jns
mov
lods
adc
mov
add
pushl
aad
jmp
lods
xor
add
rcrl
pushl
xchg
jle
ret
add
mov
loopne
mov
xchg
push
pop
sub
push
inc
ja
insb
push
push
lea
xchg
js
mov
sarl
xor
ja
outsl
mov
popa
add
enter
sub
xor
inc
jae
mov
xor
pcmpgtb
and
stc
mov
dec
or
xor
sub
cmp
inc
add
and
lods
lods
adc
ljmp
insl
lock
lock
mov
push
cli
xor
stc
and
pop
pop
pop
or
sub
rcll
pop
mov
xor
xchg
sarb
cmc
dec
mov
in
push
and
dec
das
jae
fmuls
jle
mov
call
fsubrs
cltd
lods
sbb
insl
sub
cli
pop
mov
lods
dec
jp
daa
pushf
fsubs
cltd
mov
mov
dec
lea
loopne
popa
cli
clc
movsl
mov
xlat
adc
fcmovne
xchg
mov
pop
jge
out
and
or
dec
fbld
ds
neg
cmp
ja
shrb
fdivl
jo
test
out
adc
in
sbb
fcoml
dec
add
cs
cmp
xchg
scas
jbe
mov
add
add
mov
xchg
outsl
jmp
jge
neg
xchg
addb
jmp
push
push
call
addl
push
pop
xor
sbb
xchg
cli
lahf
cld
mov
mov
insl
mov
or
push
mov
push
add
adc
mov
mov
and
jmp
mov
out
add
rcrl
pop
pop
inc
pop
dec
outsl
pop
xchg
shl
xchg
imul
ficomps
ret
and
loopne
add
daa
std
fsubrl
rcr
push
popa
jae
fsubrl
pop
push
sub
clc
adcl
and
out
pop
icebp
add
and
cmp
jle
adc
repz
jbe
ds
loopne
rorb
jmp
flds
mov
stos
mov
mov
sbb
fdivr
fs
or
or
adc
pushf
mov
fmuls
addr16
add
sub
int
aaa
jmp
stc
insl
mov
inc
in
hlt
sbb
mov
fdivrl
xchg
fsubrs
enter
loope
loopne
push
loope
xlat
jb
ja
jnp
lods
or
add
fimull
and
dec
rcl
mov
addb
and
lods
cmp
in
ds
scas
add
xchg
push
mov
push
cmp
addr16
aas
pop
and
sub
mov
inc
lock
aaa
mov
sarl
push
fcomps
movsb
rol
xor
inc
jo
movsl
push
or
cld
inc
loopne
lret
push
loopne
into
mov
cli
pop
loop
in
flds
fisubrs
cld
outsb
mov
push
or
filds
call
cmp
add
xchg
mov
shrl
test
sbb
jecxz
mov
push
dec
mov
fnsave
inc
inc
inc
xor
or
push
xorb
adc
cltd
pop
push
or
sbb
add
xor
and
sti
arpl
imul
sbb
ljmp
in
inc
pop
lret
out
add
or
pop
adc
push
in
icebp
jbe
hlt
inc
add
cmp
mulb
xchg
insl
rclb
jns
adc
scas
jge
xor
push
aaa
aaa
mov
imull
pop
or
ds
fistl
mov
imul
fldt
inc
and
adc
popf
stos
pop
cmp
or
dec
pop
loop
pop
test
ss
and
push
mov
pop
mov
or
in
cld
in
lods
cs
sub
inc
sbb
aad
sbb
adc
das
sub
insb
das
xor
jno
xor
lret
jnp
lods
sbb
outsb
sti
test
aad
adc
adc
add
jo
sbb
jne
mov
pop
adc
and
mul
push
jmp
nop
push
sub
outsl
das
jno
or
neg
cli
in
pop
es
test
dec
ret
pop
clc
cmp
adc
xor
call
adc
ror
cmp
enter
mov
rcrl
mov
mov
mov
xchg
jo
mov
add
fldenv
ret
xor
or
fcoms
mov
popa
mov
decl
and
ds
and
inc
test
stc
movsl
jo
xchg
outsb
cmc
test
scas
ljmp
std
xchg
ss
push
pop
jns
pusha
pop
jl
cmp
mov
fsubr
mov
dec
and
mov
xchg
pop
mov
cltd
outsl
mov
xor
xchg
mov
dec
and
jno
ds
insb
mov
inc
inc
mov
cmpsb
addl
or
and
inc
sub
mov
push
push
in
ret
sbbb
push
in
out
pandn
add
inc
ja
push
push
cmp
sarb
out
push
jl
or
in
xchg
sbb
clc
ficomps
rolb
mov
shl
push
and
add
push
adc
call
std
push
pop
pop
sub
loope
insb
pushl
lods
push
pop
rorl
xchg
adc
mov
xchg
ds
mov
fmull
fcmovnu
punpcklbw
fisttpl
mov
pop
xchg
mov
xchg
jge
mov
fstpt
out
inc
loop
sbb
mov
mov
mov
jae
mov
jno
pop
rolb
sub
mov
jl
cld
pushl
or
cmpsb
movsb
in
loope
or
loope
xor
hlt
cmp
adc
cmp
mov
add
clc
pop
fisubrs
and
repz
pop
cmp
xorb
aaa
fcompl
push
add
push
loopne
jecxz
out
lock
lcall
call
xchg
xor
inc
sub
in
pop
mov
cmc
jbe
add
mov
cmp
pop
add
ja
sbb
dec
or
aaa
cli
add
loope
push
lods
add
insb
aaa
push
fwait
add
nop
cmp
cmp
fadds
sub
pop
push
in
jne
or
data16
or
and
xor
jno
test
sbb
or
adc
sbb
aad
inc
inc
or
mov
mov
pop
fnstsw
add
mov
lea
pop
mov
out
aaa
movsl
pusha
incl
inc
sbb
and
inc
pop
pop
mov
loopne
add
mov
add
sahf
mov
sbb
sbb
call
out
je
sbb
push
mov
ja
cli
jp
shld
scas
xor
cmp
pop
inc
out
fdivrp
movsl
xchg
sarl
movsl
or
xchg
daa
dec
push
cs
inc
xor
or
testb
outsb
cmc
add
leave
int3
je
test
shlb
adc
adc
insb
fucomip
lea
cwtl
adc
jb
fidivl
ret
mov
or
hlt
sti
pop
decb
mov
adc
xchg
xchg
sub
sbb
sbb
push
data16
fdivr
or
push
adc
lods
arpl
lock
mov
mov
fldenv
xchg
cmpsl
add
push
js
mov
movsl
je
pop
inc
call
pop
mov
fidivrl
adc
pop
xchg
pop
and
push
fldl
repz
mov
loopne
int
xor
aas
int
imul
pop
jmp
or
fildll
bound
xchg
or
mov
push
cmovne
mov
hlt
filds
sbb
cmc
and
jne
xor
pop
out
adc
stos
add
outsl
adc
xor
sub
repz
call
scas
jnp
jb
mov
js
jecxz
push
mov
xor
sub
ret
add
fildll
push
bound
lds
pusha
pushf
inc
and
pop
fsubs
lods
mov
mov
mov
les
mov
lahf
and
popf
hlt
sahf
sbb
jnp
sti
pop
jmp
fdivl
mov
jmp
inc
jp
mov
push
adc
xor
xor
mov
addb
aam
pop
ds
lcall
movsb
mov
or
repz
hlt
test
enter
and
outsb
mov
fldt
data16
and
jno
and
sahf
in
das
cld
lret
testl
mov
dec
enter
aas
mov
pop
mov
add
cli
mov
cli
loope
mov
clc
movsb
lea
xor
mov
pmaddwd
cmp
mov
pop
mov
mov
sbb
lods
sub
mov
lcall
sub
decl
ret
and
fstpt
add
jmp
xor
pop
mov
add
add
sbb
lods
mov
js
lea
negl
push
xchg
idivb
fucomip
sbb
or
aad
pop
jbe
push
sbb
xchg
aas
std
ljmp
jo
subb
xchg
dec
and
clc
push
fistl
jns
cmp
inc
jg
nop
mov
sub
mov
sbb
out
push
mov
stos
jle
out
addb
jle
insb
call
mov
stc
enter
decl
fwait
pop
jnp
xchg
mov
rep
lds
pop
not
lock
xchg
mov
push
mov
xorl
mov
and
mov
xorb
test
or
lods
cmc
sti
clc
fstl
call
xchg
inc
jne
mov
fucom
loopne
loop
inc
daa
jp
addl
cli
push
cs
pop
dec
mov
xchg
aas
insb
cmp
es
jmp
and
aaa
dec
aaa
lock
inc
sub
add
add
inc
pusha
jge
pop
pop
sar
sbb
dec
out
cmc
rorb
or
sub
mov
cmc
pop
push
daa
dec
fsubrs
mov
push
xchg
test
mov
divl
or
testb
stos
xchg
jbe
outsl
inc
adc
cmp
pushf
add
push
daa
ret
cmp
xlat
mov
mov
stos
idiv
push
or
loop
std
aaa
in
int
jl
jno
xchg
aad
or
mov
test
push
or
add
add
mov
fcmovnbe
jmp
in
inc
lahf
dec
xchg
cmp
adc
mov
xchg
inc
xchg
scas
push
movsl
inc
lea
loope
fcmovb
and
dec
inc
pop
sbb
dec
xchg
imul
mov
sbb
inc
push
movl
lock
push
fnstsw
mov
sbb
adc
dec
jne
adc
jno
clc
ret
sbb
aaa
inc
sub
sahf
xor
lea
fiadds
mov
sahf
das
rclb
pop
xchg
cmp
lods
mov
fs
into
mov
je
or
xchg
loopne
add
dec
xchg
lcall
jo
rorb
jge
sbb
xor
fadd
std
and
sub
xchg
inc
imul
xor
pop
dec
or
and
mov
aas
scas
pop
xor
out
in
mov
fidivrs
adc
sbb
dec
push
orb
xchg
sub
dec
std
fadds
neg
and
and
or
int
cld
dec
push
test
in
shl
mov
es
mov
adc
ror
fisubs
inc
pop
imull
mov
jae
bound
fsubrs
fcompl
inc
aad
or
add
or
lods
in
inc
mov
push
jg
lods
and
pop
xchg
int
jmp
mov
push
add
lods
jle
pop
inc
data16
push
add
adc
faddl
sahf
cli
testb
test
addb
icebp
lods
aam
out
adc
sbb
addb
call
loope
in
push
xchg
sahf
in
push
data16
mov
sub
inc
mov
mov
pop
dec
and
enter
arpl
pop
clc
out
mov
sub
out
mov
hlt
shrb
pop
movl
add
mov
out
icebp
ljmp
or
add
std
or
xor
inc
loopne
add
push
push
imul
add
fcomps
cs
shrb
fadd
or
add
data16
sbb
xor
cmpsb
xor
pop
jns
xor
inc
mov
in
or
clc
lods
cmp
and
jl
mov
or
aad
mov
fidivrl
icebp
cli
adc
dec
add
adc
mov
pop
sub
add
add
in
fildll
pusha
mov
leave
xor
es
push
sub
aad
leave
test
loop
or
and
jmp
mov
iret
jbe
test
adc
or
inc
cltd
out
call
aaa
add
sub
mov
insl
jge
xor
popa
aas
or
jmp
or
xchg
or
adc
and
mov
cwtl
incb
pop
push
sbb
loope
add
sub
or
aad
jo
outsl
jno
add
jle
ss
bound
jle
mov
mov
rcl
lods
shrl
das
adc
jl
test
sub
je
or
sub
shrb
aam
xchg
movsb
mov
std
add
into
sti
imul
call
add
lock
mov
jge
lcall
xor
aad
pop
push
push
icebp
or
lock
mov
pop
cld
mov
stos
jno
sbb
or
stos
shll
mov
lret
ret
outsl
mov
ficoms
adc
pop
lock
pop
inc
xchg
adc
insb
fucomip
lret
bound
js
adc
addr16
mov
mov
cmp
cld
or
test
nop
addr16
daa
dec
fdivrl
push
stos
push
push
xchg
jbe
xchg
push
loopne
push
ljmp
repz
scas
fwait
in
inc
test
push
movsl
dec
shll
inc
fistpll
xor
inc
les
and
loopne
jnp
fildll
inc
pop
xor
lahf
test
sbb
imul
and
sbb
cli
mov
xor
lock
popf
jg
out
sbb
les
ja
jecxz
scas
add
cmp
xchg
add
scas
je
bound
fsubrl
cmp
sub
and
pop
mov
je
arpl
pop
repz
ret
push
lret
adc
xor
lock
push
jae
pop
add
clc
lcall
lahf
adc
or
call
lods
mov
shr
dec
push
nop
dec
add
jno
pop
std
jg
sarb
popa
push
dec
jo
or
inc
mov
jmp
inc
pop
mov
push
sbb
outsl
and
jmp
inc
mov
push
or
pusha
ss
arpl
andb
fs
or
or
mov
rolb
mov
sub
mov
mov
in
das
add
pop
into
outsb
adc
pop
clc
dec
cmpsb
pop
adc
mov
bnd
mov
or
xor
jne
jg
push
mov
sub
inc
nop
cmc
fstpt
mov
xor
aaa
clc
idivb
js
sbb
fstp
or
imul
repnz
xchg
sub
out
shr
fistps
inc
xchg
ret
popa
test
flds
mov
fsubrl
cmp
shl
scas
push
repnz
sbb
inc
loope
mov
jno
lret
xor
mov
and
lea
aas
in
and
xchg
push
jp
hlt
repnz
sbbb
cmp
fstpt
adc
mov
insl
decl
and
sub
stc
jg
sub
xchg
mov
into
shll
push
push
aad
lds
dec
mov
outsb
insb
dec
pushl
jmp
icebp
fs
imul
pop
mov
clc
sub
arpl
sarl
and
mov
aaa
icebp
dec
jnp
mov
fsubp
mov
adc
mov
cmp
sar
inc
clc
icebp
subb
adc
sbb
mov
clc
sub
sar
inc
je
int3
push
rol
int
mov
jae
pop
mov
or
jnp
shll
cmpb
das
inc
inc
sbb
sub
lret
repz
lds
jmp
stc
mov
aas
inc
adc
add
imull
icebp
test
sub
dec
lret
push
scas
cld
adc
mov
mov
dec
sub
fld
and
test
push
lods
sub
fsubs
sbb
mov
mov
adc
ret
dec
add
sahf
push
mov
mov
push
cmp
add
mov
sub
adc
adc
sbb
int3
sbb
or
dec
mov
adc
jo
filds
daa
pop
test
ss
das
cmp
ficomps
ficomps
clc
add
or
fnstcw
mov
inc
dec
and
rorb
call
and
sub
or
dec
mov
nop
mov
hlt
es
addr16
or
add
ret
mov
add
mov
pop
sar
loopne
mov
add
subb
ret
xchg
flds
rcl
jp
xor
and
fsubrl
loop
pushf
test
jns
add
xorl
xor
add
dec
and
dec
and
scas
dec
jl
jns
mov
cmp
or
in
jge
loop
sarb
addr16
jb
std
jle
sbb
inc
decb
icebp
test
fcoml
jo
push
xchg
cld
mov
rclb
jecxz
jecxz
sub
sub
mov
jp
pop
jecxz
sar
push
or
loopne
add
std
femms
adc
adc
popf
icebp
xchg
adc
pop
mov
push
jmp
fidivrs
call
pusha
rcr
cmpsb
jecxz
pop
in
mov
mov
fwait
sbb
mov
jg
adc
dec
sub
rcrl
mov
mov
sub
add
jo
test
mov
sub
cmp
aam
in
mov
shl
xor
cmpsb
xor
xchg
fsubl
fstps
mov
adc
sti
ret
jge
push
repnz
rolb
test
push
js
mov
cltd
adc
add
xchg
adc
jg
push
pop
cwtl
pop
imul
xchg
aam
sub
jno
rolb
dec
jmp
dec
scas
lods
mov
push
cmp
test
xchg
mov
add
aad
add
cmpsb
xchg
push
add
pop
pop
mov
and
rcrl
dec
ljmp
jle
std
mov
andb
jne
fidivs
inc
xor
inc
inc
add
dec
add
xchg
mov
test
push
dec
jl
adc
or
roll
or
push
pop
call
dec
cmc
sbb
xchg
inc
arpl
inc
pusha
and
mov
or
das
adc
cmp
add
cwtl
sbb
push
xchg
cmp
sbb
mov
sbb
push
push
loop
fucompp
or
mov
add
rcrb
and
bound
mov
icebp
sbb
stos
aas
rorb
push
adcb
sbb
ljmp
mov
and
aas
or
imul
push
in
aam
and
rcrb
rcrl
arpl
xor
fincstp
dec
jns
adcb
cmc
ret
inc
divl
mov
jle
cwtl
cmp
push
mov
jmp
out
scas
or
add
jecxz
jecxz
jg
in
ljmp
lds
pop
and
mov
pop
mov
hlt
push
jp
cmp
loop
sub
cmc
lods
jb
push
mov
or
mov
lods
pop
outsb
pop
iret
imull
iret
fcmovbe
leave
sub
dec
xchg
mov
nop
jge
sbb
add
inc
rcrb
jle
data16
pop
dec
or
and
or
lock
push
shl
or
add
jb
xor
enter
fdiv
ret
test
call
pop
in
xor
sbbl
cld
jno
inc
fiaddl
pop
cmp
sbbl
imulb
jns
adc
sbb
dec
lock
addl
inc
into
inc
out
add
push
add
into
adc
cmp
lcall
adc
pop
les
addb
lret
fisttps
lods
rorb
add
xchg
adc
add
lock
push
jmp
dec
stos
sar
cmp
mov
adc
imul
jae
xor
dec
xchg
xorb
or
xor
daa
ffreep
aam
or
jmp
cmp
je
test
jmp
xchg
or
fnstenv
cwtl
xor
daa
cli
and
test
push
fmul
test
xchg
add
insb
mov
test
outsl
dec
jge
lcall
insl
mov
adc
add
cmp
xchg
adc
jle
sbb
push
popf
adc
sub
mov
lds
adc
cs
add
sbb
mov
jno
xor
aad
pop
dec
pop
mov
movsb
in
mov
sub
adc
les
inc
mov
jg
push
dec
loopne
repnz
iret
xor
pop
adc
sub
add
mov
mov
clc
add
sbb
xor
add
mov
sbb
add
fwait
inc
bound
add
xchg
pop
mov
jg
add
mov
jecxz
sub
fucomip
clc
xlat
push
sti
push
ljmp
cwtl
arpl
outsb
aam
mov
test
fwait
clc
xchg
mov
ljmp
shll
pusha
icebp
push
pop
outsl
aaa
ljmp
jle
push
jbe
and
fmull
jecxz
cmpb
adc
in
mov
outsl
rcrl
mov
adc
pusha
test
inc
or
or
fstps
addr16
bound
lahf
ljmp
or
andb
pusha
aad
adc
pop
sbb
adc
dec
scas
push
mov
mov
cmc
popa
popa
insb
pushl
das
ja
xor
inc
adc
pop
out
mov
cwtl
mov
pop
sarb
mov
je
mov
dec
xchg
and
add
pop
loop
xor
pop
lds
aaa
lods
mov
lahf
jns
adc
iret
or
inc
add
sbbb
ret
pusha
add
add
lock
lods
vpshaw
lock
call
and
push
push
mov
aaa
fisttps
jbe
cmp
inc
xor
cmp
js,pn
int
inc
loope
sub
push
scas
mov
mov
mov
pop
adc
mov
movsl
or
test
mov
sub
sbbb
fists
add
es
cmpsb
lock
push
inc
and
inc
adc
sbbl
sbb
and
xchg
add
lret
gs
adc
add
dec
cmp
lods
lds
sbb
lods
pop
add
int3
loopne
mov
movsb
inc
and
lods
stos
xchg
aad
sbb
sbb
rorl
mov
adcb
lea
and
jo
arpl
pop
jnp
rcr
add
xchg
int
or
addr16
dec
jne
sub
repz
movsb
out
push
mov
in
and
outsb
jo
cmp
pusha
outsb
inc
adc
sub
shrl
icebp
jp
jae
jecxz
inc
cmpsl
dec
aad
dec
and
push
cmpsl
or
cld
and
clc
xchg
mov
in
ds
iret
out
xchg
test
aam
adc
lret
aaa
add
insb
cmp
repnz
aam
sub
adc
inc
xor
lods
sub
rorb
ljmp
jmp
cmc
xor
adc
lahf
xor
das
out
push
test
cwtl
nop
mov
sbb
in
or
or
or
mov
dec
jno
adc
cmpsl
cmp
or
inc
dec
notl
xor
rcrb
xlat
pop
cmp
push
mov
push
adc
and
dec
adc
add
lock
mov
test
cs
scas
jo
push
insl
inc
repnz
cmp
scas
mov
pop
add
xchg
cmp
mov
shr
mov
mov
mov
mov
pusha
pusha
ss
mov
cmp
shlb
xor
out
and
dec
mov
xchg
jbe
lock
testl
or
inc
xchg
imul
push
sbb
mov
andl
icebp
jle
mov
mov
xchg
jmp
insl
jo
ja
sbb
mov
cmp
jge
sbb
mov
clc
jle
sbb
xor
adc
pusha
shl
sti
jg
mov
adc
les
jae
iret
pause
mov
push
jnp
or
xor
jg
inc
icebp
jbe
shlb
sbb
fsubs
and
mov
adc
out
icebp
rclb
or
test
add
loopne
inc
cmp
loop
orl
je
xlat
in
add
lret
adc
mov
mov
add
andb
sbb
push
cmp
cmp
push
iret
or
fdivs
add
dec
sbb
repnz
push
neg
xchg
sti
adc
mov
ret
adc
mov
dec
inc
ret
shrb
and
push
icebp
and
jg
sbb
adc
ljmp
pop
notl
adc
frstor
sub
lods
ja
insl
dec
xor
pushf
or
fldcw
cmp
imul
push
or
lret
adc
mov
jp
add
adc
and
xor
mov
movsb
pop
out
or
movsb
out
or
fsubr
inc
push
fcmovnu
jecxz
sbb
rcll
popa
push
adc
addr16
ss
push
arpl
mov
pop
cld
mov
mov
xor
or
sub
pop
pushf
add
sub
push
out
push
lret
or
mov
mov
mov
jp
lock
dec
push
nop
test
cmp
outsb
jg
cli
push
xor
iret
rolb
dec
cs
int3
int3
dec
mov
add
adc
cmovns
scas
leave
sbb
das
mov
pop
cmp
or
icebp
clc
cmpsb
es
add
dec
shlb
imull
iret
and
or
push
inc
cli
and
mov
pop
dec
sbb
aas
or
bound
xlat
clc
int3
bt
sbbb
icebp
dec
sbb
in
jg
push
sub
dec
dec
dec
mov
sub
cs
xchg
fisttps
decl
or
xchg
xor
iret
js
je
clc
jg
push
or
das
jmp
mov
loope
sti
sbb
add
fldenv
mov
adc
ja
adc
stos
add
mov
add
add
adc
incb
push
cmc
inc
aam
mov
mov
sub
insb
and
push
lock
movsl
inc
add
test
or
pushw
imul
pop
cltd
sti
ficoml
lods
add
xchg
xchg
jo
ljmp
insb
adc
mov
push
sub
jno
mov
pop
loopne
lret
pushl
bound
xorb
dec
rcr
jp
popa
rolb
lods
inc
bound
mov
mov
add
add
pop
sub
xchg
outsl
jecxz
jb
mov
sbb
loope
aaa
add
sub
movsb
out
imul
pop
insb
mov
fwait
or
daa
push
pop
cs
ljmp
sub
xchg
dec
push
ret
in
pop
add
es
mov
jle
fbstp
loope
stos
jl
fstl
sahf
mov
popa
pop
add
and
cwtl
lahf
aad
mov
in
aas
jbe
adc
push
inc
or
cmp
movsl
lods
sbb
scas
aam
mov
daa
int
es
decl
scas
adc
repz
push
push
and
hlt
subb
mov
movsb
xor
sti
sbb
cltd
or
push
jg
divb
js
jp
mov
mov
in
or
int3
stos
cmp
popf
pop
adc
xchg
test
incl
and
das
inc
xchg
imul
pop
or
stos
jle
add
icebp
cltd
push
fs
icebp
pop
and
les
shrb
imul
and
pop
les
push
mov
pop
or
test
cwtl
push
xchg
pop
aaa
ss
inc
leave
in
push
in
add
das
mov
add
and
cmc
pop
andb
xorl
xchg
notb
push
imul
push
inc
sub
les
jno
xchg
fistpll
jg
add
add
push
loopne
test
shrl
push
ss
jg
inc
scas
cmp
hlt
dec
dec
mov
sti
mov
jns
add
xchg
lea
mov
ret
dec
cmp
add
cmc
or
adc
imul
fistl
out
pop
dec
mov
adc
test
in
jbe
dec
sub
inc
jb
sub
pop
andb
jo
xchg
adc
add
cmpsb
xchg
lea
add
out
iret
pop
sub
iret
or
jg
outsb
jg
jge
dec
shlb
fadds
xchg
test
outsb
rcrl
jle
sti
adc
jp
mov
sub
xor
sub
xor
dec
fcoml
add
and
nop
and
add
in
mov
pop
stos
xor
lret
cli
gs
add
in
loopne
sub
push
or
cmp
shll
pop
fdivs
jl
lahf
test
fidivs
or
jns
dec
add
pop
popf
cwtl
cmp
pop
cli
jbe
pop
lret
aam
lea
fldenv
nop
push
mov
inc
and
pop
pushf
lea
lahf
mov
je
int3
rcl
arpl
or
pusha
aam
clc
stc
jae
mov
dec
cmp
add
cs
les
out
mov
and
sub
push
js
addb
inc
out
adc
sbb
test
sub
scas
pusha
les
bound
push
xchg
lret
cmpb
and
mov
rol
ss
in
int3
mov
dec
pop
lds
mov
lahf
in
test
jae
jns
or
andl
fcoml
daa
fcmovne
or
adc
mov
cli
push
sbb
push
call
inc
xor
loop
inc
shlb
pop
in
adcb
out
pop
sbb
idiv
jbe
imul
inc
mov
in
stos
and
lock
aaa
imul
fadds
pop
xor
pop
jmp
add
push
add
lea
faddl
sti
mov
jmp
xor
in
or
rcrb
jne
or
xlat
adc
inc
cli
push
aaa
pop
xor
popf
inc
push
or
out
push
lret
xchg
ret
lcall
jo
mov
ja
in
push
icebp
fbstp
lea
push
push
lea
push
mov
std
inc
mov
js
shlb
daa
sbb
or
cmp
mov
int3
push
push
int
pop
out
push
jae
outsl
fcoms
inc
sti
cmp
xchg
inc
arpl
test
cmpsl
cwtl
sbb
dec
dec
inc
push
add
jb
mov
ficoms
iret
aad
adc
xlat
mov
mov
push
push
mov
adc
icebp
inc
ret
ja
mov
xor
sbb
xchg
mov
loope
andb
dec
jge
push
pop
and
pop
xor
fcomps
dec
sub
loope
test
or
mov
push
xor
nop
rorb
xchg
adc
jo
pop
rolb
cmpsl
or
in
es
adc
sbb
mov
movsb
ds
lds
fsubrs
sbbl
sbb
das
mov
xchg
pop
daa
sbb
notb
or
fwait
push
mov
xchg
data16
sub
std
jbe
test
and
filds
mov
sub
sub
adc
aaa
sub
outsb
adc
mov
mov
popa
lcall
cld
pop
and
rcr
cld
arpl
add
out
fildl
ds
rcrb
js
pop
jp
xorl
adc
out
enter
adcl
and
daa
inc
xchg
pop
call
or
adc
add
stos
and
mov
push
mov
inc
imul
ds
pop
adc
push
pop
push
loope
jbe
mov
and
fcoms
xor
jbe
cs
call
push
sbb
and
enter
and
lret
mov
cmp
or
mov
push
xchg
lcall
pop
mov
mov
mov
xchg
jge
and
push
call
add
dec
cmp
xchg
shlb
fwait
test
cmc
push
jb
daa
test
movl
xor
adc
and
aas
push
dec
jle
leave
fcoms
dec
add
jle
sahf
sbb
repnz
fsubs
mov
push
jae
leave
aam
add
out
movsl
iret
divb
push
loopne
add
add
ss
push
pushw
test
orb
jge
jmp
adc
test
dec
mov
sub
dec
into
loop
ret
dec
push
jae
movsl
aaa
shll
inc
push
int
dec
lret
mov
mov
testb
andb
in
adc
sub
add
dec
sbb
jmp
pop
clc
rorl
jnp
shrl
or
xchg
or
loope
clc
adc
add
dec
sbb
push
int3
xchg
in
sbb
aam
jl
add
push
punpckldq
aam
sbb
insb
cltd
repz
sub
aam
and
and
dec
push
sbb
xor
xor
cmp
pop
pop
lahf
aam
ret
popl
je
aad
push
stos
rcrl
inc
push
aad
in
sbb
xor
jmp
cwtl
jnp
lcall
pushf
xchg
inc
or
shll
or
inc
jae
stos
adc
add
add
fidivrl
js
jmp
loop
movsb
pop
leave
fs
sbb
imul
test
xor
dec
sub
or
or
add
push
jge
loope
loopne
insb
cmc
loopne
pop
cmp
lock
repnz
pop
test
xchg
adc
int
push
sbb
imul
sbb
clc
dec
or
mov
ljmp
adc
cld
loope
es
orb
lods
cmp
xchg
cmp
xchg
rolb
rorb
pushf
push
add
add
mov
adc
in
sub
push
icebp
shrl
das
jp
popf
pop
loopne
add
push
andb
add
mov
inc
jge
enter
and
test
rolb
mov
lret
aam
leave
or
insl
push
jbe
shlb
lret
les
jp
and
push
sbb
adc
lods
cltd
fcomi
jle
outsl
push
inc
jmp
mov
jae
mov
enter
cli
test
lods
and
loope
ficoms
stc
add
ret
hlt
add
adc
rorb
sarb
jl
mov
mov
jno
nop
mov
xor
fs
adc
test
sarb
push
xchg
jle
in
adc
or
cmc
in
leave
stc
roll
loop
repnz
push
pop
xchg
lahf
fimull
add
or
or
sarl
jl
mov
cltd
dec
test
pop
adcl
push
jmp
stos
fs
mov
into
cli
push
shr
jmp
dec
cmp
xchg
sbb
dec
ljmp
mov
adc
rorb
mov
incl
test
xor
cmpsl
mov
loopne
outsl
adc
jle
xor
add
pop
mov
imul
lock
sub
js
sub
incb
ljmp
movsb
sub
pop
incb
es
adc
push
cmp
popa
dec
add
pop
jge
clc
aaa
test
movsl
mov
mov
mov
or
push
jecxz
jno
and
cli
lds
arpl
call
mov
push
dec
dec
and
imul
and
lret
sarb
mov
mov
push
push
add
call
or
fmull
and
cld
jmp
adc
push
sub
mov
sbb
pop
mov
mov
loop
sbb
cmc
ljmp
ljmp
jnp
add
outsl
outsl
int
dec
sbb
and
adc
jne
push
clc
outsl
jno
add
stc
pop
inc
mov
sbb
sar
and
pusha
adc
cmp
sar
ja
stc
xor
sbb
cmp
pop
pop
shll
fwait
cli
call
popf
pop
add
push
scas
movsb
sub
dec
and
js
loopne
jg
fbld
insl
cmp
enter
in
mov
mov
sub
cltd
mov
pop
sub
or
shl
add
jg
fcomps
add
xor
mov
cmc
rcrl
or
jno
pop
test
xchg
cld
add
inc
pushf
pop
lcall
in
frstor
sti
push
and
es
jg
les
repnz
stos
inc
sub
or
out
fsubl
add
les
cmp
jl
mov
inc
scas
test
daa
stos
xchg
adc
outsb
cmp
gs
mov
mov
jl
inc
iret
adc
add
jbe
clc
or
bound
mov
mov
arpl
je
jl
mov
addr16
pop
das
je
movsl
xchg
mov
shrl
pop
sahf
in
push
jo
mov
and
jo
cmpsb
push
fstps
push
add
ja
ds
test
add
xchg
xor
push
pop
jbe
add
mov
add
or
add
dec
lret
out
jp
push
inc
cmp
ljmp
jns
and
add
rol
lret
pop
std
dec
pusha
xchg
xchg
lods
sbb
add
mov
callw
roll
out
mov
sub
outsl
fbstp
insb
movsb
add
gs
jle
cs
pusha
pop
cli
dec
inc
and
out
add
stos
xchg
xlat
or
nop
jae
push
movb
dec
cmp
add
mov
mov
push
shlb
mov
sub
jbe
mov
add
in
in
mov
cwtl
sbb
inc
mov
lcall
dec
test
movsl
outsb
outsl
cld
sub
cmc
push
adc
jp
cmpsb
pushf
loope
mov
test
clc
fistps
cli
or
rolb
fistl
popf
loop
test
lret
div
mov
add
push
shrb
xchg
loopne
inc
pushf
in
std
jmp
jnp
mov
mov
test
cmp
or
aaa
insl
mov
jbe
ja
imul
movsl
test
push
ja
fwait
add
pop
mov
inc
clc
mov
cmp
and
adc
fistpll
lods
sbb
and
test
aam
sbb
es
mov
cmp
xchg
push
push
stos
mov
or
icebp
inc
in
and
out
pop
movsl
out
leave
int3
stos
xor
addr16
adc
scas
push
mov
adc
and
cmp
add
and
in
rcrl
mov
jbe
call
mov
mov
das
or
orb
xchg
les
xchg
decl
mov
mov
inc
movsl
push
aas
loop
mov
mov
ljmp
mov
imul
test
pop
pusha
pop
mov
sbb
dec
push
mov
sbb
sbb
cmpsb
xchg
insb
scas
or
stos
jb
inc
ljmp
pop
adc
lea
rcrb
fistpll
or
cmpsl
fbstp
add
jo
leave
loope
pop
js
das
dec
pop
test
inc
out
test
cmp
aam
mov
aas
test
dec
lea
adc
nop
lret
jmp
xchg
and
in
lahf
outsb
pop
insl
push
rcrl
gs
inc
add
add
inc
jecxz
das
or
test
adc
inc
mov
dec
cmpsl
mov
sti
stos
push
ljmp
mov
inc
xor
jecxz
jmp
aad
mov
or
inc
aad
insl
jecxz
or
cmc
inc
push
imul
dec
cmp
in
shl
fmuls
addr16
jle
push
bound
pop
repnz
push
clc
jo
js
xchg
adc
test
js
mov
stos
inc
push
les
lods
decb
in
jmp
or
ret
incl
sahf
sbb
js
fs
jnp
cmp
fsubrl
xchg
loopne
aas
lcall
inc
mov
xor
inc
popa
stos
dec
inc
add
add
mov
inc
jl
adc
mov
mov
inc
ss
xor
pop
mov
push
hlt
dec
in
cmp
mov
clc
in
add
or
shr
in
adc
test
pop
stos
pusha
pop
push
dec
xor
adc
fimuls
mov
cli
pop
sub
test
ss
enter
jg
mov
inc
das
fcomp
mov
mov
pop
je
in
mov
fsubrp
sbbb
dec
sbb
call
repz
movsl
cli
xchg
in
sub
or
cmc
cmp
adc
fidivs
inc
in
repz
add
pop
int3
insb
or
and
push
dec
cs
mov
jbe
adc
sub
int
js
jo
or
repnz
iret
insb
popa
int3
cmpsb
int3
adc
rcl
push
cmpsl
in
nop
fistl
push
mov
sub
dec
loope
add
fsts
cmp
and
stc
in
push
mov
jmp
jge
adc
inc
xor
imul
mov
pop
push
mov
xor
stos
cmpsb
xor
sbbb
roll
sub
sbb
insl
mov
xorl
adc
xchg
adc
sbb
pop
mov
test
dec
std
add
dec
mov
push
je
inc
inc
fdivl
pop
pop
mov
pop
aad
add
lods
lcall
adc
push
mov
mov
pop
push
mov
push
mov
rolb
jmp
mov
xchg
jns
mov
lds
leave
loop
pop
addr16
pop
and
and
shll
fstpt
lcall
xor
ret
aad
or
repnz
insb
inc
ret
and
and
sub
lret
adc
loopne
jb
loope
out
mov
push
lret
loopne
xor
loopne
jno
call
mov
dec
add
movb
sbb
sbb
add
mov
rclb
sti
sub
push
push
call
movsl
add
or
je
fisubrl
xor
clc
and
out
lret
ret
sub
rorl
inc
dec
fnstenv
mov
sbb
testb
push
sub
call
and
cmpl
cli
shlb
cs
dec
pop
sub
cmp
fdivr
pop
sub
adc
sti
cmc
test
inc
or
imul
add
bound
lea
xchg
sbb
mov
divl
fnstenv
sti
or
out
fisubrs
jmp
stos
jmp
add
cltd
stos
cmp
push
or
sub
or
and
pop
mov
jae
and
sbb
rorl
sub
fdivs
add
dec
add
push
sbb
cmp
push
cmp
xor
orb
or
ret
popf
filds
shll
pop
out
in
xorb
pop
xchg
aaa
add
pop
and
jno
xorl
add
xchg
mov
xchg
cwtl
lock
mov
push
xchg
les
into
and
repnz
ret
aad
dec
mov
in
nop
jge
je
fcmovb
adc
and
xchg
inc
xchg
lock
add
imul
roll
or
dec
shlb
and
xor
dec
clc
sbb
fsubrl
sbb
insl
inc
subl
inc
add
jne
and
fcomi
dec
cld
dec
jo
out
adc
pop
inc
adcb
pop
into
shlb
subl
jnp
dec
test
outsb
jb
jbe
inc
loopne
pop
arpl
sarb
adc
sub
jge
loope
push
sbb
sbb
test
xchg
pop
hlt
adc
sbb
cwtl
in
fcmovnbe
push
sub
xor
loopne
div
sbb
pusha
jae
leave
sti
ret
add
lock
mov
mov
jo
pop
push
mov
or
xor
pop
les
cwtl
sbbb
dec
cltd
movsl
dec
jnp
mov
inc
sbb
inc
inc
sbb
mov
jo
adcb
dec
or
and
cmp
add
xor
and
sub
xchg
movsb
fstps
ss
bound
and
add
loopne
sbb
push
addb
shll
mov
sub
loop
mov
xor
xor
icebp
cmpsb
insl
and
mov
inc
dec
lods
fisubs
divb
push
popf
sbb
mov
adc
andl
std
add
xlat
js
call
movsl
and
push
dec
movsb
add
mov
pop
sbb
rclb
cltd
pusha
dec
fildll
xchg
jge
dec
inc
nop
test
popa
rcll
adc
dec
add
mov
pusha
into
rorl
sub
and
push
jbe
cld
rorb
cld
js
scas
pop
push
or
sahf
or
pop
cs
inc
pop
cmpsl
ret
jbe
les
in
popa
orb
push
lods
pop
cmc
xchg
mov
mov
push
cld
adc
aas
and
out
lea
loop
xchg
xchg
pop
add
mov
dec
cmp
adc
dec
push
rcl
push
push
int3
pusha
cmc
in
scas
pop
out
scas
add
add
adc
fnstenv
fsubrl
inc
aam
push
cmp
dec
cmpl
sub
pop
sbb
je
addb
sub
or
or
push
aaa
mov
or
mov
adc
test
test
icebp
sbb
jge
pop
dec
or
sbb
push
jbe
dec
pop
shll
inc
les
das
sbb
dec
inc
xchg
xchg
je
add
or
cmp
mov
ror
adc
xor
xlat
ret
fsubp
addl
and
test
jmp
jmp
or
rcrb
lret
insl
cmc
std
popa
xor
inc
test
ja
xchg
dec
mov
cmp
mov
mull
or
xchg
aam
sbb
daa
adc
or
inc
stos
inc
jge
sub
xchg
dec
pop
sub
pop
in
or
shlb
clc
mov
fstl
aad
xor
mov
adc
jb
mov
dec
std
jno
in
daa
xchg
push
mov
into
addr16
inc
add
andb
ret
imul
sbb
push
xchg
shll
loop
push
cmp
xor
adc
movsl
leave
adc
mov
fsubrs
repz
sub
jg
sbb
inc
lds
push
dec
insl
cwtl
out
xchg
cwtl
xchg
xor
sbb
and
jmp
andl
inc
in
lock
lock
sub
jo
sbb
fisttps
jl
mov
pop
ss
dec
push
push
push
dec
push
add
xacquire
lret
icebp
xchg
out
faddl
or
add
fisubrs
mov
fmull
sub
sub
xor
push
adc
cmpsl
test
pusha
push
mov
cmc
pop
in
fldenv
push
ja
orb
pop
rol
or
mov
xchg
mov
pusha
push
mov
pushf
ret
mov
pop
sahf
add
out
adc
mov
adc
imul
pusha
xchg
mov
inc
sub
movsb
dec
mov
addb
jmp
call
cld
sub
push
mov
pop
iret
pop
dec
je
int3
add
aaa
ljmp
jmp
sbb
ror
xchg
icebp
jno
or
sub
incl
jmp
sahf
nop
inc
mov
or
sub
xchg
leave
cmpsb
mov
or
and
js
and
hlt
push
cs
dec
jl
cmp
jmp
out
call
mov
mov
fadds
and
jp
int3
cli
or
mov
repz
cmp
test
mov
test
jae
dec
add
pop
xchg
or
jg
xchg
pushl
mov
inc
xor
test
icebp
add
add
aaa
iret
jmp
add
notl
jg
jmp
push
cmpl
aam
mov
sub
repz
push
jne
add
mov
and
hlt
std
mov
cld
push
addb
adc
jg
ficompl
add
cltd
add
icebp
nop
jae
sub
mov
lea
xchg
scas
inc
incl
lea
insb
dec
ret
or
push
leave
push
cmp
mov
adc
mov
in
data16
lret
lods
loopne
inc
cmp
mov
fldenv
or
cld
add
outsl
clc
cmp
mov
xchg
xor
fwait
int3
xchg
mov
repz
cwtl
dec
add
aam
add
jae
or
call
inc
cld
xor
push
orb
cltd
jg
inc
ja
jns
out
mov
jg
pop
ljmp
adc
or
dec
std
mov
cmpsl
and
sub
push
mov
inc
es
or
outsl
add
int3
mov
out
lcall
bound
mov
fists
sarb
pop
cli
addr16
ds
inc
faddl
leave
fistpll
cld
adc
jne
inc
sub
test
mov
adc
dec
mov
mov
mov
lock
sbb
decl
cmp
push
fimull
sbb
xor
nop
jp
or
testb
cmc
addr16
push
popa
lock
jb
gs
insl
mov
cld
or
das
add
adc
lcall
mov
cmp
std
andb
out
push
std
imul
and
mov
cmovo
scas
cmp
pop
ret
push
clc
and
mov
nop
xor
js
dec
xor
pushl
mov
or
mov
js
sub
xchg
jbe
xor
js
add
and
imul
js
popf
cwtl
push
sbb
insl
add
push
sar
pop
clc
outsl
xchg
xchg
in
je
cmp
push
pop
mov
add
das
fdivl
inc
adc
or
inc
roll
mov
repz
inc
dec
iret
sahf
dec
icebp
xchg
add
xorb
mov
iret
mov
loop
and
push
jmp
mov
insb
adc
call
push
ljmp
in
enter
mov
cmp
push
mov
test
mov
or
rcll
lret
push
jmp
sub
push
or
xor
test
in
dec
test
decb
adc
jmp
adc
mov
mov
sbb
add
mov
xor
mov
rorb
mov
inc
add
imul
jbe
xor
aad
sbb
cmp
push
dec
pop
test
lea
stc
push
mov
or
dec
or
inc
adc
xor
fwait
jecxz
push
adc
xchg
cld
sbb
sub
test
sbb
insb
pop
ja
sbb
ret
inc
arpl
push
stos
adc
rcrb
mov
pop
cli
rcl
pop
pop
xchg
cmp
xlat
jl
dec
mov
jb
fcompl
push
scas
out
add
mov
int
mov
sub
and
add
and
pop
test
popa
lods
stos
aaa
lcall
sbb
xor
sbbl
or
sbb
imul
mov
pushf
pop
jb
add
decb
mov
sub
mov
jno
ret
add
int3
mov
inc
sarb
xor
xchg
cwtl
inc
push
mov
mov
fucomi
xor
jge
and
shlb
mov
inc
or
mov
outsb
jo
insb
push
add
push
mov
sbb
mov
icebp
fildl
add
inc
dec
imul
rolb
fistl
test
mov
pop
push
clc
mov
cmp
adc
mov
fiadds
mov
pop
data16
push
add
nop
nop
jle
jb
sub
outsl
jg
ret
in
lahf
cmp
adc
insb
jg
jmp
aad
shrb
movsl
inc
pop
xchg
leave
adc
ja
aas
and
repz
inc
sbb
nop
inc
sar
mov
lds
addr16
int
push
xlat
xor
sbb
inc
mov
in
push
add
sub
std
push
in
pop
jae
push
jnp
shll
pop
fmuls
movb
insl
mov
test
xchg
or
jg
rorl
cmp
int
stc
call
jmp
mov
popa
lcall
add
rcrb
inc
int
jge
pop
stos
movsb
inc
pop
mov
outsl
sbb
fldcw
pop
clc
xor
lock
aam
adc
cmp
daa
clc
pop
lods
std
mov
lock
or
and
in
jge
xor
test
lock
cltd
andl
dec
orb
insb
jmp
outsb
add
mov
pusha
iret
push
adc
inc
and
mov
or
mov
rcrb
loop
push
sbb
cmp
ss
xor
jbe
stos
in
aad
lds
mov
xchg
dec
outsl
std
cld
fwait
add
lock
xor
pusha
or
xchg
adc
test
daa
and
mov
jae
and
icebp
mov
xor
bound
mov
inc
push
std
mov
mov
popa
jecxz
sub
adc
and
add
out
aam
pop
aad
jg
mov
cmpsl
cmp
aaa
mov
test
in
sub
add
dec
cs
add
pusha
popl
cld
ss
pop
mov
xchg
subb
dec
sub
incl
push
lds
jl
fildl
jl
xchg
icebp
loopne
test
scas
add
mov
decl
in
mov
or
or
mov
dec
int3
or
ds
and
add
lret
jbe
repz
fadd
jns
ljmp
and
notl
ficompl
adc
outsl
inc
imul
fldl
xchg
adc
jg
jle
cmp
inc
dec
pop
fcmovnbe
pop
add
cmc
jp
mov
sbb
adc
sbb
dec
mov
aas
lret
inc
dec
shll
loop
outsb
cmp
lds
mov
in
pop
je
ds
mov
arpl
in
mov
xlat
or
xchg
test
popf
sub
fwait
in
fisttpl
lret
cmp
std
inc
ss
fsub
or
int3
mov
lcall
mov
loop
jp
shll
mov
or
lods
movsb
leave
shl
pusha
sbb
js
jmp
fbld
dec
xchg
inc
rcl
add
sbb
ficoms
stc
dec
pusha
mov
mov
xlat
popf
adc
rcll
lock
xchg
push
rorb
loopne
inc
dec
stos
mov
pop
adc
or
mov
mov
inc
imul
cmp
mov
add
idivb
ret
cmpsl
out
adc
js
call
push
sbb
xor
inc
das
stos
cmpsb
leave
test
cmp
aas
inc
addr16
mov
pop
sub
out
dec
les
or
ss
or
jo
mov
pop
subl
or
out
cmpsb
xor
dec
cmpb
xchg
jmp
adc
call
jae
add
sbb
fdivrs
dec
cld
mov
lahf
xchg
or
std
popa
push
or
push
int3
cmp
andl
or
gs
mov
or
out
push
mov
dec
adc
xor
fsubl
bt
out
subb
xchg
mov
imul
aad
add
andl
outsl
add
pop
and
lcall
adc
push
mov
xor
dec
jb
rcl
add
cltd
lahf
pop
and
ds
dec
nop
or
mov
sar
popa
stos
adc
push
adc
inc
push
sarl
jle
test
jno
mov
ficoms
movsl
in
aam
inc
out
stos
jle
incl
or
int3
clc
and
cmpl
sub
rclb
test
push
addr16
out
outsb
outsb
add
pusha
mov
pop
xchg
std
inc
add
xchg
lcall
xchg
daa
loop
cmp
int3
xchg
mov
sub
inc
xor
sbb
xor
or
adc
sbb
inc
stc
mov
cmp
insb
add
bnd
sbb
stos
push
stos
daa
jno
scas
fisubrs
cltd
pop
loopne
pop
ljmp
mov
jmp
lret
sbb
jle
xor
in
jg
loope
mov
pop
add
push
add
and
ss
pop
adc
in
push
mov
or
addl
fistpl
jb
roll
dec
mov
fmuls
sub
ret
add
sub
out
call
mull
adc
push
clc
rcr
mov
inc
add
and
adc
cmp
sbb
inc
sbbb
decb
pop
outsb
and
push
or
pusha
and
es
mov
mov
cltd
adc
frstor
add
fidivs
sti
leave
shrb
aad
mov
xchg
shll
add
lea
and
jp
and
sbbb
mov
sbb
std
dec
add
mov
lea
movsb
cs
ljmp
leave
jo
pop
js
out
xchg
adc
adc
push
or
adc
push
pop
lahf
and
push
andl
mov
mov
xchg
mov
aad
sbb
push
push
mov
add
mov
mov
testl
mov
and
mov
shrl
mov
push
data16
out
movsl
push
push
pop
sub
or
dec
out
fidivl
mov
in
das
fisubrs
add
add
pop
xchg
dec
dec
into
arpl
les
or
mov
jne
push
or
push
mov
clc
xchg
jmp
adc
popf
sub
push
dec
in
fistpll
testb
push
sti
push
iret
mov
aaa
in
jecxz
inc
aam
push
lods
or
mov
sbb
add
push
leave
shll
imul
sbb
mov
xlat
lock
add
pop
push
cld
aaa
icebp
pop
and
mov
adc
dec
ret
ss
pop
lock
add
xchg
mov
jmp
hlt
adc
mov
add
push
lods
daa
clc
std
decl
and
shll
add
sbb
cmp
int3
inc
sbbb
clc
std
dec
dec
loopne
inc
pop
and
imul
and
xchg
fcompl
repz
pop
ss
add
dec
add
jmp
das
mov
inc
jns
xor
out
cmp
orb
mov
adc
clc
pop
std
icebp
xchg
lds
xchg
jge
mov
fwait
xor
jge
inc
sbb
cltd
scas
sbbb
arpl
outsl
ljmp
dec
outsb
test
mov
std
outsl
cld
add
jg
mov
sbb
xchg
sbb
push
mov
dec
adc
or
dec
inc
hlt
nop
mov
je
xor
loopne
in
mov
mov
cmp
adc
xlat
sub
paddsb
xor
pop
call
pop
mov
addr16
adc
out
inc
mov
sti
call
push
lret
sbbl
sub
jl
push
testb
jecxz
xor
stos
dec
mov
pop
daa
cs
inc
inc
cmpsl
mov
adc
scas
cmp
aaa
stos
dec
add
xorb
adcb
cld
pop
shll
push
cmc
and
mov
mov
cmp
jl
jmp
or
ds
sbb
mov
gs
mov
lcall
sub
pop
jg
sub
adcb
cld
movsl
xchg
cmp
jl
dec
std
in
sub
push
paddb
das
add
pop
mov
xchg
incl
ret
dec
jecxz
scas
outsb
imul
xorl
inc
pop
es
js
out
mov
pushw
lcall
mov
add
lahf
nop
cmp
lock
mov
xor
popa
pop
add
cmp
adc
and
enter
adc
aaa
fst
xchg
cmpsb
lea
inc
or
adc
clc
subl
push
ror
mov
rcrl
jge
icebp
xor
faddl
pcmpeqd
sbb
pop
xchg
pop
fnstsw
mov
add
mov
jmp
mov
mov
fcoms
mov
jmp
inc
pop
xor
or
mov
jle
outsl
std
lock
add
mov
push
inc
mov
and
daa
mov
or
outsl
jge
or
push
or
xor
pop
sbb
mov
mov
mov
mov
pop
ror
movsb
jno
imul
sahf
icebp
push
das
sti
jno
pop
mov
cmc
into
and
mov
in
rcrb
cs
push
and
xchg
add
cmp
addb
fbstp
shll
int3
shl
in
lea
or
sbb
add
pop
mov
mov
inc
push
int
and
shll
mov
decl
jmp
aam
rep
pop
cwtl
sahf
mov
mov
xchg
sbb
insb
pusha
popf
cwtl
aad
fldt
inc
mov
xor
pop
adc
flds
lret
cmpsb
mov
sbb
push
fwait
adc
adc
mov
mov
mov
adc
and
outsb
mov
jecxz
xchg
bound
cld
lret
mov
test
xchg
and
and
loope
adc
sbb
imul
adc
xchg
insl
and
cli
push
and
jbe
ja
sbb
push
fiaddl
and
adc
addr16
push
fidivl
pop
jle
mov
fistpl
dec
out
push
adc
sbb
aad
fmuls
adc
aaa
imul
adc
or
inc
push
movsl
inc
xor
and
das
insb
sti
cmc
cmp
adc
push
xchg
mov
adc
add
ljmp
jg
incl
mov
lds
clc
fnstsw
mov
xor
enter
shll
jle
add
in
xor
out
sbbb
jl
or
andl
lds
jne
mov
pop
mov
sbb
inc
jmp
and
inc
hlt
int3
call
push
loop
sti
inc
ja
das
stos
and
mov
call
jg
add
out
lds
shl
sub
mov
xor
in
loope
adc
add
adc
sub
mov
mov
andl
decl
ret
jg
ds
sti
dec
mov
movsl
push
lods
mov
mov
pop
ljmp
cmp
mov
rclb
add
jbe
xor
fildl
cmp
xchg
sub
fildll
pop
xchg
dec
inc
adc
adc
push
pop
loop
dec
or
int
sub
cmpsb
pushl
push
cmp
add
mov
gs
pop
cmpb
out
ljmp
jle
pusha
mov
fstpt
mov
adc
inc
decb
lods
or
sub
push
movsb
stos
add
mov
xorb
popa
negl
jno
push
jo
nop
or
xor
pop
ja
or
xor
add
pop
das
mov
scas
jle
xchg
xchg
lea
call
cmp
nop
mov
nop
cmp
xchg
inc
insb
xchg
mov
imul
pop
je
jl
adc
lods
inc
sahf
adc
cmc
and
sbb
ja
stos
rolb
call
and
jbe
lcall
mov
or
push
jne
pop
lods
pop
sbbb
decw
jne
dec
cld
sub
fdivrl
dec
cmpsl
pushf
imul
dec
shll
mov
shll
jp
rolb
mov
add
into
adc
push
sub
mov
lock
pop
ljmp
cld
inc
pop
pop
fcmovbe
and
dec
loopne
and
stos
adc
ror
faddp
lods
push
dec
add
cmp
push
jmp
push
popf
adc
icebp
imul
and
pop
adc
and
adc
loop
in
xor
adc
enter
das
mov
rcrb
shr
rol
aaa
adc
adc
pusha
push
push
out
cmp
movsb
mov
lea
push
push
aad
push
ss
test
adc
out
add
xchg
sub
sub
fs
test
add
add
mov
rolb
enter
int
and
out
xchg
mov
and
jp
stos
and
xor
add
decl
shrl
pop
add
rclb
insb
imul
or
push
inc
sbb
movaps
mov
mov
in
pop
fsubrl
cmp
out
cmpb
fsubr
outsl
popf
jmp
gs
mov
fsubrs
or
adc
mov
stos
mov
std
ds
push
cmc
mov
xchg
cmc
ret
jge
stos
cmpsl
mov
dec
insb
xor
rol
inc
sahf
dec
pushf
jnp
or
and
xchg
mov
push
xchg
xor
add
clc
decl
insb
mov
xor
push
inc
lret
lret
mov
push
incb
xchg
xchg
jne
sbb
pop
cs
add
lods
fwait
enter
sbb
lahf
aaa
cli
push
icebp
shll
adc
pop
add
push
inc
adcb
fcom
add
out
movsl
pop
jb
repz
jbe
cli
cmp
add
push
pushf
cmp
pop
stc
dec
stc
push
mov
add
push
fsubr
pop
xchg
inc
loopne
jecxz
rorl
dec
and
outsl
mov
mov
insb
sbb
sbb
ss
ret
icebp
mov
pusha
subl
in
mov
add
out
lcall
push
maxps
or
mov
lea
mov
or
dec
adc
sub
or
fisubs
mov
add
and
insb
jg
push
dec
sar
dec
sahf
or
stos
es
and
or
add
mov
lock
pop
je
ljmp
loopne
pop
jmp
inc
jecxz
fidivs
or
mov
out
dec
or
xchg
rolb
hlt
xor
and
jae
mov
ror
psubsb
cwtl
push
test
or
cmovne
or
sbb
push
jge
and
add
cld
dec
inc
pop
xor
pop
inc
sarb
inc
adc
loop
lock
or
cmp
sbb
adc
fwait
mov
and
fucomip
xchg
clc
fildl
jns
loopne
ljmp
leave
pop
xchg
dec
jle
cmp
cmc
jge
xlat
negl
cmp
or
mov
add
xchg
mov
rol
jno
insb
xchg
jb
adc
jns
sub
out
inc
add
test
jg
sbb
xchg
xchg
addb
jecxz
mull
or
ret
and
dec
and
add
sbb
fidivrs
pop
jbe
xorb
or
and
push
insb
adc
mov
pop
pop
push
fmuls
or
insb
inc
xchg
inc
je
out
cli
lock
dec
in
mov
test
jbe
jmp
shl
in
icebp
xchg
in
push
fisubl
pusha
ret
xchg
and
xor
fldenv
andb
test
loope
pop
sarb
into
movsb
sahf
adc
add
call
inc
rcrb
mov
call
cld
push
mov
sub
fnstenv
movb
cmp
aaa
rolb
and
mov
mov
addr16
xchg
push
mov
test
xor
iret
push
std
or
add
test
inc
push
in
lcall
mov
and
pop
adc
sbb
enter
das
or
pop
rclb
or
mulb
cli
mov
push
xchg
gs
inc
je
pop
addb
mov
sbb
icebp
enter
insl
push
inc
add
lods
mov
mov
add
sbb
gs
push
or
mov
fldcw
pop
shlb
icebp
js
xchg
and
into
cmc
or
xor
test
aas
inc
nop
inc
pop
and
cmp
lock
inc
sbb
and
andb
mov
cwtl
iret
or
add
pop
cmp
sub
xor
lods
xor
dec
inc
xor
xor
lds
shrb
mov
sub
fnsave
sub
dec
mov
xor
outsl
push
sub
pop
and
xchg
cli
mov
push
push
gs
sub
mov
arpl
adc
mov
inc
add
or
cmp
icebp
xchg
cmp
xor
int3
add
pop
sub
dec
mov
inc
lods
mov
or
or
jb
faddp
dec
and
add
pop
cmpl
and
pop
in
stos
dec
adc
mov
subl
mov
mov
and
add
dec
push
inc
mov
xlat
mov
adc
xor
in
inc
icebp
xorb
roll
pop
in
mov
ret
mov
add
pusha
cld
inc
pusha
sub
je
inc
ret
bound
jnp
rorl
inc
push
hlt
adc
sub
add
imul
rcrl
mov
xor
sub
aad
cmpsl
sti
push
fsubs
in
int
ss
mov
shll
mov
fstpl
cmpsl
or
jle
add
cmp
sub
pcmpeqb
xor
pop
and
fnstcw
push
mov
sbb
sbb
add
ret
pop
adc
lock
adc
daa
xor
inc
outsb
and
cmpsb
push
jmp
test
pop
push
leave
jbe
pop
in
jecxz
cmp
cwtl
sub
dec
add
inc
pop
stos
and
add
and
adcl
jmp
inc
mov
or
shlb
pop
jb
loop
mov
push
lret
andb
andl
repz
xor
xor
dec
sbb
cmp
ljmp
xchg
cltd
sbb
pusha
lret
ret
jp
std
push
xchg
push
xchg
push
xor
sbb
pop
add
in
or
xor
or
add
repz
loope
push
xor
or
insl
mov
sbb
loop
mov
pop
in
pop
int
dec
add
adc
or
xor
and
push
sub
outsl
loop
add
sbb
addb
int
lods
int3
arpl
inc
dec
add
sub
test
mov
sub
rcll
mov
mov
stc
int3
adc
data16
shll
mov
add
inc
outsl
movsb
push
mov
or
repz
or
add
xchg
pop
lods
inc
shrl
add
inc
and
inc
ret
aas
call
lahf
jns
out
or
mov
mov
outsl
ret
popa
and
add
popa
paddusw
sahf
cmp
divl
xor
xchg
clc
and
es
cmp
aam
pop
xchg
shll
pop
pop
mov
lahf
push
xchg
inc
mov
or
inc
adc
mov
flds
sbb
out
in
and
idivl
push
call
mov
and
mov
shll
xor
and
xchg
sti
mov
mov
stos
hlt
imul
sbb
xor
and
pop
clc
push
jnp
into
or
movsb
or
or
adc
dec
bound
pop
stos
xor
roll
pop
sbb
jbe
xchg
stos
dec
mov
and
inc
xor
pop
and
ss
outsl
add
sarl
adc
mov
out
decl
and
mov
pop
shlb
jle
jmp
adc
sbbl
jbe
adcb
mov
xchg
and
inc
mulb
xlat
loope
mov
sub
inc
fs
inc
clc
mov
xchg
mov
mov
out
or
cmp
mov
fdivr
ret
mov
call
jecxz
xchg
xchg
mov
add
mov
mov
push
sub
pop
adc
popa
out
jo
add
pop
adc
clc
sbb
and
sbb
cmp
fwait
sub
pop
pop
negb
jmp
hlt
xor
mov
add
sbb
ljmp
call
jo
adc
sti
xchg
inc
push
dec
mov
mov
pop
ljmp
add
pop
and
shl
jg
inc
out
or
shll
xchg
pop
clc
push
cmc
xor
ss
rorb
fidivs
popf
roll
xor
or
mov
mov
movsl
sub
inc
repz
out
push
or
adc
adc
out
add
dec
jecxz
pop
mov
and
addl
inc
popa
sub
or
pop
ds
and
jmp
shrl
fstpt
cmp
mov
pop
adc
aaa
filds
mov
mov
subl
test
and
inc
pop
jmp
icebp
mov
push
lock
push
popf
movsl
insl
jno
lods
ja
jecxz
xchg
jg
add
mov
pop
lds
aad
dec
cmpl
pop
shl
cmp
fstps
mov
aam
push
and
ret
and
aad
jg
sti
popa
ja
lret
mov
push
jg
jmp
xchg
xchg
push
stos
dec
mov
lds
adc
int
pop
ret
sahf
add
aam
fcompl
inc
inc
sub
shrb
fwait
cmp
xchg
inc
scas
or
cld
loope
xchg
fisttpl
dec
sbb
movl
inc
lahf
push
push
js
jnp
loopne
and
push
pop
cmpsb
push
push
outsl
or
pop
add
cmpb
or
adc
cvtps2pi
call
cltd
popf
sbb
add
repz
dec
add
ja
fidivs
fdiv
ds
iret
xchg
sub
incb
cmp
je
ficoms
add
cmpsb
test
lahf
bound
pop
cmpb
xor
test
add
mov
adc
dec
outsl
std
lods
pop
outsb
sbb
sbb
call
pop
fcmovu
xchg
ja
cld
sub
mov
xor
test
push
xor
jle
push
adc
imul
jp
test
inc
mov
ret
add
mov
xlat
int
pop
roll
jg
ffreep
shll
add
popf
pop
popa
repz
adc
jo
lods
mov
sub
and
ret
push
enter
push
mov
xor
mov
push
pop
xchg
inc
xor
mov
std
sub
jnp
int
iret
call
mov
call
push
in
jno
cs
lods
mov
xchg
andb
sub
adc
fisttpl
sbb
icebp
sarb
pop
push
mov
insl
lcall
mov
jmp
add
jbe
cmp
and
pop
popl
jle
adc
jmp
cmp
gs
les
testb
sti
pop
dec
fidivs
adc
inc
dec
fisttps
lret
in
or
ffreep
frndint
test
enter
or
inc
mov
stos
inc
mov
loopne
mov
ficoml
push
add
rcr
xor
cmp
push
push
xor
cli
add
xlat
push
lods
insl
sub
test
cmp
sub
and
inc
xor
push
shrl
jo
sub
shrl
ljmp
lcall
loope
add
pop
pop
or
mov
jg
add
mov
fnstenv
adc
push
hlt
fstps
cmc
incl
pop
adc
mov
pop
repz
imul
enter
outsl
push
clc
movsl
dec
scas
ds
mov
mov
outsl
cld
inc
lods
inc
mov
test
movsl
xor
das
enter
mov
fildl
and
mov
mov
fistpll
xchg
adc
mov
test
cmpl
inc
inc
adc
lret
pop
cli
data16
pushf
test
out
in
outsl
call
movsb
inc
sahf
jns
sub
dec
jp
rclb
xlat
xchg
jne
xchg
jle
neg
push
xchg
mov
rcrl
icebp
es
aas
push
das
sub
mov
jmp
jecxz
mov
pop
out
cmc
clc
sbb
es
mov
cmp
fwait
push
xor
popf
add
push
and
push
popf
jo
add
jmp
les
adc
lret
adc
dec
mov
loop
mov
loop
lods
and
repnz
lock
lods
jecxz
arpl
imul
sub
js
mov
jle
adc
arpl
jns
adc
test
or
inc
add
or
outsb
stc
lcall
jmp
mulb
int3
xchg
pop
loope
inc
into
movl
pop
jl
rorl
shll
or
arpl
mov
pop
int
repz
add
jno
popf
rcrl
pop
mov
adc
and
adc
dec
add
inc
pop
bound
jecxz
popl
jl
dec
je
mov
dec
sub
outsl
jl
adc
cmc
in
push
ljmp
loopne
mov
arpl
inc
inc
push
push
js
cmp
test
fdivr
pop
and
mov
dec
and
mov
call
xor
sub
push
dec
mov
jle
xor
mov
sub
push
add
adc
ret
enter
incl
mull
in
and
push
inc
shll
push
orl
lahf
mov
pop
sti
add
sarl
inc
jg
int3
inc
pusha
inc
es
push
adcb
das
jl
les
jne
xchg
in
jp
add
outsl
repnz
inc
rorb
adc
xchg
and
inc
inc
int
shll
mov
imul
inc
pop
dec
aad
repz
dec
notl
and
push
clc
outsb
inc
cmc
in
mov
and
inc
clc
inc
insl
or
sub
scas
fs
fidivl
cld
ljmp
pushf
push
enter
jge
jl
push
mov
sub
adc
inc
lods
out
sbb
inc
cmpsb
cmp
adcl
sbb
stos
jno
fwait
imul
mov
mov
sbb
or
add
enter
mov
je
sbb
sbb
outsl
pusha
push
cltd
or
xchg
arpl
out
lods
sub
es
mov
idiv
push
push
mov
jnp
mov
jno
or
bts
sub
outsl
pop
in
xor
or
jge
mov
sbb
stc
cwtl
nop
test
mov
mov
sarb
push
sbb
jne
loop
mov
hlt
or
mov
xchg
push
test
lds
cmp
cwtl
in
ja
adc
and
stc
xchg
mov
mov
sub
insb
jnp
sub
sbb
fisubl
or
add
std
inc
add
ret
test
sub
out
pop
test
icebp
fisttpll
ret
inc
jae
xorb
mov
add
mov
aam
adc
rcrl
mov
out
mov
adc
push
adc
into
xchg
push
icebp
mov
loope
mov
or
mov
add
call
cmc
pop
insb
shrd
or
jg
loope
test
push
out
pop
mov
mov
or
psubw
jmp
push
shll
mov
and
sub
mov
push
jo
mov
insb
add
cmp
andl
notb
insb
sbb
jns
shl
adc
jbe
aaa
pop
es
mov
dec
cltd
pop
nop
sti
inc
std
cmc
insb
mov
xor
mov
adc
into
das
imul
sarb
xor
xchg
or
fnstenv
fimull
iret
inc
xchg
jg
mov
xchg
dec
dec
ds
outsb
out
nop
mov
or
xor
lahf
sarb
mov
mov
cmp
push
loope
xor
inc
dec
and
lahf
inc
sub
lods
jecxz
jo
push
lret
fs
pop
mov
jle
insl
push
scas
xlat
addl
inc
and
stc
push
test
cmc
inc
fnstcw
xor
jno
add
lea
dec
xchg
lods
ja
gs
out
cmp
adc
cld
adc
loope
and
aad
movsl
dec
loopne
popa
in
or
movsb
lock
pop
sbb
sub
repnz
mov
bound
push
mov
mov
mov
fwait
ret
lock
test
incb
ss
lods
mov
orl
addb
mov
sub
mov
mov
and
mov
out
mov
push
cld
out
loop
pop
jg
pop
sbb
or
sbb
sbb
ss
mov
pop
std
sub
mov
jmp
imul
decl
xchg
aaa
jno
pop
xlat
testl
cld
ljmp
hlt
fcompp
das
push
jns
sbb
mov
cmpsl
mov
push
push
pop
push
fildll
out
xchg
iret
xlat
adc
decb
mov
jbe
dec
mov
das
std
in
cmp
and
andb
xchg
loop
mov
push
push
mov
mov
mov
cmp
dec
inc
mov
cli
pop
jbe
adcl
push
sbb
lds
call
movsl
out
in
cmp
leave
mov
and
xchg
mov
lret
cmp
cli
shll
loope
add
repnz
xchg
pop
or
or
or
cmc
cmc
test
and
jae
loope
hlt
mov
lock
sub
scas
sub
push
sbb
ret
mov
mull
scas
test
fdivs
cltd
ljmp
push
arpl
jmp
pop
xor
out
mov
sbb
in
dec
pushf
sbb
add
mov
jb
test
lcall
jecxz
xor
lea
push
lcall
scas
sub
mov
mov
add
mov
cmp
push
sbb
fldenv
in
push
adc
jmp
dec
fwait
movsl
ss
in
push
pop
and
jbe
and
or
jmp
xchg
push
mov
sub
jns
pop
add
shll
lcall
lods
std
lret
add
and
mov
lods
rcll
lea
mov
xor
adc
sbb
dec
jle
mov
sub
setnp
adc
cld
test
sbb
xor
in
sbb
push
pop
outsl
jl
add
adc
stc
jp
sub
cld
filds
xchg
fists
and
push
or
jbe
cmpsl
mov
fnsave
push
jno
movsb
inc
fincstp
mov
pop
mov
insl
pop
in
mov
mov
mov
jle
inc
jo
mov
cmc
outsl
sahf
lcall
adc
and
or
xchg
dec
out
pop
xchg
dec
mov
mov
repnz
mov
pop
xor
daa
xchg
cs
inc
rcl
jne
decb
lock
dec
xor
aam
outsl
or
orb
or
in
jns
test
data16
dec
adc
add
fisubs
das
pop
and
mov
popa
mov
sbb
std
out
mov
adc
xchg
and
je
ret
mov
sub
sahf
ljmp
es
in
dec
in
movl
jb
fs
or
sbb
and
xchg
sub
pop
pop
lea
adc
sti
je
mov
inc
dec
mov
loopne
jl
xor
jne
incl
adc
ret
out
test
testb
clc
jg
inc
xor
mov
xchg
mov
loope
testb
aam
ja
cmp
stc
pop
ss
sub
mov
das
mov
test
mov
loop
or
cmp
jo
test
mov
cmpsb
outsl
rol
filds
insb
popa
std
sti
imul
mov
mov
push
inc
test
jecxz
mov
jge
sub
mov
mov
mov
aam
ffree
dec
mov
cmp
add
push
int3
add
push
jg
or
rcrb
sub
and
imul
adcl
fcompl
loop
divb
je
and
sbbl
je
fstl
sub
xor
mov
inc
test
jecxz
lods
cmp
mov
mov
lock
xorb
jg
cwtl
and
clc
pop
xor
jmp
sarl
test
sbb
pop
ljmp
ficoms
mov
mov
sub
rorb
outsb
pop
xor
shr
mov
inc
sti
push
icebp
in
sti
xchg
jno
mov
call
daa
add
pushf
or
mov
cmp
movlps
xchg
cmp
outsl
jmp
orb
pop
inc
or
and
fucomip
movb
insb
mov
push
ret
ljmp
mov
orb
xor
dec
xor
outsl
mov
ffree
inc
das
ret
test
jg
shlb
lds
pop
je
cs
pop
daa
cmpsl
mov
aaa
mov
mov
aam
js
and
out
xorl
cmp
push
icebp
jae
mov
pop
lods
or
test
inc
jbe
fld1
inc
jge
inc
in
add
or
in
mov
mov
icebp
cmpb
ds
xor
or
mov
push
lds
movsb
jo
aas
clc
sub
inc
xor
mov
sub
sub
fildl
popa
dec
adc
push
cld
addr16
outsl
push
loopne
xor
inc
jno
daa
fisubl
jge
mov
pop
and
lcall
jg
outsb
movsl
js
sahf
ficoml
mov
pop
rclb
loopne
mov
andl
adc
sub
sbb
sub
sbb
js
jb
mov
or
inc
mov
test
out
imulb
lret
cmp
cli
adc
lock
aam
adc
popa
and
adc
jae
insl
sub
icebp
pop
mov
mov
inc
faddl
enter
in
insb
lock
push
or
inc
jo
or
cli
mov
mov
aas
stos
push
inc
mov
and
add
mov
insb
notb
add
loopne
nop
ljmp
mov
adc
mov
mov
lcall
push
inc
nop
mov
inc
add
xor
jmp
test
mov
and
test
scas
dec
test
inc
inc
rol
mov
sbb
sbb
add
cmp
mov
ret
sbb
pop
pop
jno
adc
xor
sbb
nop
sbb
addr16
pop
xor
cmpl
mov
pop
loopne
inc
sub
push
gs
xchg
loopne
mov
inc
ljmp
jmp
ljmp
rcll
idivl
mov
push
push
mov
mov
out
ljmp
pop
cmc
imul
rcll
loopne
xlat
or
and
pop
mov
gs
addr16
outsb
insb
es
push
aam
inc
insb
pop
bndstx
cmc
sbb
cmpsl
add
cld
in
mov
mov
adc
mov
mov
and
pop
inc
xchg
aas
loopne
out
mov
and
push
lahf
push
dec
jb
or
jge
movsl
adc
push
push
ret
aas
addl
call
aam
adc
cmp
sahf
fwait
icebp
sub
mov
sbb
xchg
icebp
jb
and
add
and
jmp
xchg
cmp
pop
loopne
sub
mov
push
imul
inc
add
mov
pushf
xchg
and
inc
mov
int3
leave
insb
inc
in
mulb
push
fisubrs
mov
xchg
in
xor
adc
mov
pop
push
aad
pop
outsb
cmp
or
cld
mov
mov
in
cs
sbb
lret
mov
inc
pop
jne
pop
outsl
shrb
dec
mov
leave
es
stos
sub
mov
and
lods
mov
mov
pop
sti
fists
sub
repz
dec
addl
inc
and
or
aad
cmp
lock
pop
aas
push
in
push
cmp
and
sub
or
jp
push
add
mov
adc
cli
call
popf
add
hlt
mov
sub
in
pop
mov
std
leave
loop
aam
xchg
mov
cmpsl
push
inc
push
negl
pop
and
decl
sarl
outsb
fsubs
sbb
movsl
mov
mov
or
vcmpnge_uqsd
inc
popa
and
jmp
nop
orl
mov
aaa
mov
adc
adc
mov
mov
movsl
call
mov
push
lea
lcall
fnstenv
popa
andl
dec
cltd
test
mov
fnsave
inc
sbb
test
push
scas
add
es
ret
out
mov
mov
xor
jmp
lea
imul
or
mov
ds
call
pop
call
rcrb
jmp
push
push
sbb
jmp
sbb
and
out
inc
mov
dec
jnp
mov
lock
in
ret
daa
jmp
inc
mov
repnz
mov
fdivrs
sbb
lock
into
pop
cmp
pop
cmp
loopne
ss
nop
popf
push
or
ret
push
mov
fists
pop
xchg
pop
push
test
cld
nop
sbb
lock
inc
mov
cs
movsl
sub
mov
add
incl
push
repz
xchg
pop
aad
add
or
mov
cmp
mov
push
pop
cmp
add
jb
pop
lret
dec
sbb
out
outsb
or
jle
add
and
nop
call
sbb
adc
jg
stos
decl
xchg
or
dec
sbb
dec
hlt
cmpsb
jg
push
cmp
in
rorb
cmc
scas
mov
dec
xor
das
int3
in
in
mov
and
jg
pushl
xor
dec
mov
subl
push
das
jge
jmp
or
xor
fcoms
and
mov
jp
xchg
adc
cli
add
dec
sahf
repz
fisttps
fsubrs
into
add
push
mov
testb
pop
sub
insb
insl
loope
ret
cmpsl
xchg
jl,pn
test
les
jle
or
fisttpll
adc
cmp
push
xor
in
mov
loope
push
mov
xchg
fs
clc
outsl
or
aas
cli
aas
inc
gs
mov
sub
mov
sub
cltd
or
ljmp
outsl
loope
insb
and
adc
test
xor
cld
jmp
call
adc
sbb
xchg
loopne
out
ljmp
ret
jne
mov
add
test
loop
pop
lock
pop
fidivl
dec
xor
inc
popf
incl
incl
popa
mov
or
cmc
pop
mov
add
fwait
cmp
ds
pop
cmp
imulb
mov
sub
push
cmp
xchg
pop
adcb
inc
mov
cmc
call
cmpsl
sbb
lock
inc
cmp
shlb
cmpsb
aad
out
xchg
cs
pop
add
repnz
aas
das
cwtl
sub
mov
sbb
pop
sbb
insl
imul
mov
mov
adc
mov
inc
fisubl
dec
sbb
data16
mov
xchg
gs
sub
and
add
idivl
stc
cmp
mov
adc
cmp
sub
rorb
dec
pop
mov
mov
mov
pop
dec
enter
movsb
imul
sti
add
sbbb
pop
add
and
pop
call
mov
cmpsl
inc
clc
nop
jae
dec
aas
and
add
jo
inc
mov
dec
xchg
movsl
push
jnp
test
insb
bound
aas
or
push
cmp
hlt
in
sbb
and
inc
ror
push
and
xor
jg
adc
dec
xor
gs
fnstsw
mov
addl
mov
inc
in
add
jecxz
pop
lock
cs
mov
push
roll
add
movsl
push
xor
fldl
or
jmp
sub
mov
xchg
jbe
test
inc
int3
scas
mov
mov
sbb
xor
loopne
clc
xchg
fimuls
mulps
std
inc
insb
sbb
test
aaa
loopne
push
mov
ja
test
ja
mov
jb
adc
rcrl
clc
jmp
mov
push
pushf
mov
mov
data16
pop
xorl
sub
lret
cld
adc
cmpsl
add
aaa
lock
push
xor
cld
mov
pop
cmp
sub
pushf
pushf
add
dec
pushf
pop
clc
movsl
inc
in
mov
and
sbb
les
ret
cmc
xor
nop
or
movsb
or
adc
shr
std
pop
sub
or
lea
loopne
push
mov
sub
clc
add
lock
and
or
push
adc
jp
jmp
call
ud0
jg
ret
test
push
imul
ss
bound
test
inc
cmp
sbb
insl
jl
add
push
jle
int3
and
movsb
add
gs
xchg
cs
in
sub
inc
cmp
psubq
mov
repnz
add
xor
filds
clc
adcb
jo
lea
aad
inc
fsubs
xor
inc
fiadds
xchg
cmp
in
loope
pop
mov
or
push
sub
aad
dec
shll
sub
sbb
jbe
and
add
jge
sbb
rcrl
jg
loop
mov
add
push
int3
sub
hlt
das
mov
pop
push
mov
sub
xchg
adc
or
jo
flds
mov
cmp
lret
jmp
jp
sbb
mov
sarb
lcall
xchg
out
inc
and
sub
pop
jmp
adc
jl
in
mov
cld
movsl
ljmp
shrb
push
mov
fdivrl
inc
ret
inc
pop
dec
jno
jnp
jp
push
mov
pop
jecxz
sbb
jp
lahf
in
negb
pop
adcb
or
mov
adc
sbb
sbb
rolb
lods
cmc
loope
mov
pop
fimuls
sub
cmp
bnd
jb
sub
mov
adc
loope
xor
sbb
jp
jbe
mov
ljmp
mov
adc
lock
mov
adc
decl
dec
or
leave
fidivrs
adc
push
xor
adc
fildll
inc
add
or
insl
mov
jmp
cmpb
xor
imul
and
cld
cmc
fstps
sar
pop
sbb
in
call
imul
sbb
js
pop
adcb
jnp
add
jge
mov
test
mov
popa
push
cmp
sti
xchg
sbb
sbb
ds
mov
push
lods
inc
test
pop
lahf
jo
rorb
pop
push
dec
int3
mov
and
scas
ror
outsl
clc
push
test
cmp
dec
xor
scas
add
jle
loope
mov
mov
insb
hlt
jns
shr
push
push
imul
mov
mov
mov
cmp
mov
call
lea
jmp
xor
mov
mov
cmp
je
das
xchg
adc
out
jmp
pop
cmp
xorb
iret
add
pop
add
pop
leave
mov
pushl
call
stos
and
jns
movsb
cmp
cmp
mov
daa
loopne
mov
pop
sarl
dec
dec
sub
xchg
loope
and
test
and
pop
enter
jg
inc
je
adc
xor
or
mov
in
lods
insl
bound
mov
pop
in
sbb
fdivr
lcall
sub
inc
scas
jno
inc
dec
mov
sbb
imul
and
mov
aaa
loop
cmp
pop
mov
sub
push
or
adc
loopne
jle
pop
mov
inc
mov
cmpsb
mov
lret
decl
xor
sub
incl
popf
adc
pop
add
adc
or
lock
dec
fcompl
fadds
js
hlt
jg
fisttpl
test
jmp
jle
mov
pop
sbb
mov
mov
loop
lcall
adc
sbb
add
sub
aaa
clc
outsl
or
xchg
or
mov
jne
cwtl
pop
fsubrs
insb
cmp
inc
clc
scas
adc
out
fidivs
inc
flds
test
shll
add
aad
lcall
clc
call
leave
and
push
jae
xchg
pop
addl
sbb
mov
clc
mov
out
mov
pop
mov
arpl
aam
cmpsl
mov
xchg
pslld
add
inc
in
adc
mov
fsubp
fisttpl
enter
push
and
cld
neg
incl
cmp
and
xor
adc
dec
js
loop
and
adc
jb
std
in
ljmp
push
mov
stos
xor
push
add
mov
pop
negl
into
sbb
sti
movb
xor
cs
insb
adc
add
ja
or
cwtl
pop
arpl
sub
jnp
jg
mov
mov
adc
sub
lock
mov
and
add
loop
push
fistpll
adc
out
outsl
sbb
fstpl
mov
push
and
add
mov
stos
mov
lcall
add
cmp
mov
jno,pn
into
aaa
into
pop
push
ret
jno
outsl
loop
scas
adc
hlt
out
pop
mov
in
mov
cmpb
js
mov
mov
pop
incl
mov
and
xchg
insb
jge
and
cmp
jo
imul
xchg
jg
shll
and
or
jecxz
inc
outsl
stc
enter
and
add
add
fisttpl
incl
jge
rorb
or
aaa
or
sbb
js
mov
loopne
sbb
les
decl
mov
ret
pop
loopne
lcall
out
fimull
inc
cmp
sub
cltd
sbb
xor
push
leave
test
cmp
inc
mov
mov
in
loop,pt
cmp
jl
jecxz
dec
add
pop
scas
nop
bndldx
inc
sti
xor
push
push
mov
adc
ja
fldcw
adc
xchg
test
pop
or
cmp
jns
add
lock
adcb
jns
roll
inc
out
mov
pop
lea
filds
cmp
imul
add
mov
adc
push
push
adc
lcall
lret
inc
adc
mov
rorb
aas
jecxz
cs
jp,pt
jne
cmp
in
ljmp
clc
test
inc
mov
lcall
pop
lcall
lock
fadds
adc
sub
xchg
jg
shlb
in
lcall
adc
sub
icebp
out
push
clc
push
xor
dec
jg
clc
xchg
clc
or
lret
fisttps
lods
inc
addr16
cli
xchg
mov
into
gs
lcall
icebp
adc
cmp
cmp
les
adc
adc
fistpll
insb
adc
pushf
cmpsl
scas
inc
mov
aam
pop
rcl
insl
mov
sub
subl
sub
xchg
fistpll
sub
push
mov
jle
xchg
test
in
mov
popa
clc
aaa
xchg
mov
lea
xchg
test
dec
dec
dec
and
adc
inc
ficoms
notb
sub
nop
or
ljmp
leave
rolb
or
adc
xchg
and
cwtl
and
cmc
or
rol
out
pop
in
xor
push
jne
push
mov
inc
add
sub
nop
mov
fisubrs
jecxz
inc
and
sub
and
inc
roll
js
cmp
inc
mov
jp
scas
cmp
xlat
mov
push
in
pusha
rolb
mov
je
mov
and
adc
push
outsl
or
add
cs
cmc
push
popa
jg
pop
push
repnz
and
jne
fildl
add
inc
incb
sub
sar
scas
push
add
inc
xorl
xchg
add
and
add
stc
or
push
icebp
shll
cwtl
ret
leave
int
mov
mov
addr16
adc
lea
push
adc
hlt
fildl
inc
cmp
fwait
int3
adc
icebp
jg
cli
and
aam
dec
xor
jl
loop
movsb
mov
mov
les
sub
push
or
dec
out
test
inc
stc
fisttpll
je
fimuls
adc
jge
in
lds
hlt
mov
lods
loopne
jmp
sbb
cmp
ja
dec
fmuls
leave
mov
imul
jmp
push
cld
push
mov
dec
mov
mov
sub
inc
lea
ljmp
stc
xor
inc
rclb
push
in
das
jo
mov
shl
test
ds
std
dec
push
dec
daa
lahf
and
in
cmp
or
jmp
es
push
add
hlt
pop
shlb
jp
out
dec
xchg
aas
sub
outsl
push
es
and
cmpsl
xchg
sbb
push
js
xlat
xchg
or
std
enter
adc
or
shlb
sbb
dec
xor
imul
das
adc
sub
ret
and
lock
outsb
js
ss
cli
cmp
andl
ljmp
pop
sub
jns
xchg
stos
mov
mov
insb
aad
pop
sti
test
cmc
out
stc
pop
subb
std
pop
loope
or
push
sti
jo
pop
and
hlt
aaa
jg
outsb
mov
jmp
or
inc
popa
add
sbb
adc
dec
xor
mov
xchg
decb
push
fisttps
das
sbb
out
xchg
push
mov
outsl
or
lret
and
dec
mov
incb
push
lahf
inc
dec
popa
gs
jbe
sbb
std
js
xchg
mov
cmpsl
outsb
push
loope
aaa
or
sahf
incl
add
sti
pop
fsubrl
jle
push
sub
add
or
stos
push
inc
fmull
xor
call
xor
cmp
add
test
pop
leave
test
call
scas
in
pop
divl
cs
inc
imul
dec
fisubs
fcomip
xchg
mov
repz
shrl
mov
mov
lea
clc
cmp
mov
in
and
shl
pushf
stos
jbe
adcl
data16
bound
dec
aad
dec
icebp
mov
cmp
aad
xchg
popa
mov
movsl
xchg
out
inc
sub
dec
jbe
adc
xor
add
mov
pop
call
push
dec
sub
int3
loopne
jno
jne
faddl
mov
adc
iret
test
fnstenv
test
push
data16
mov
pusha
jl
pop
cmp
test
pop
stc
lea
push
fdivs
outsl
adc
cmpb
add
add
and
ss
inc
pop
push
ds
pop
enter
add
shll
jae
pop
nop
mov
lods
pop
push
into
jecxz
daa
in
aaa
mov
pop
jg
cmc
stos
clc
addl
call
pop
nop
mov
clc
scas
shlb
aas
mov
and
dec
cs
jge
fildll
jns
push
lcall
ja
mov
jmp
pop
mov
fdivs
icebp
in
or
cmpsb
inc
lock
jp
jl
mov
jle
push
jl
xchg
imul
push
in
jb
pusha
dec
adcb
dec
xchg
mov
jmp
add
test
pop
push
stos
lea
inc
nop
sbb
dec
rclb
decl
mov
bound
out
lods
push
push
jl
stos
lret
aaa
add
subb
mov
sarb
add
les
imul
call
out
inc
cmp
ljmp
daa
inc
das
sahf
jg
hlt
jg
dec
jb
inc
notb
add
out
xlat
push
or
addr16
dec
xor
clc
rclb
mov
inc
lds
jg
jbe
mov
dec
mov
ret
nop
sub
js
stos
mov
incl
stc
jns
scas
lahf
shl
lock
add
sbb
sbb
pop
jmp
sub
sbb
pop
loop
aaa
aam
cwtl
fcmovnbe
push
test
aas
test
jg
add
pop
and
cld
adc
mov
push
mov
cmp
movsb
mov
in
rcl
popl
mov
adc
outsl
icebp
mov
scas
jae
into
insl
test
jb
mov
adc
test
add
orb
mov
fbld
rorb
aaa
mov
push
inc
lea
cmp
xor
mov
orl
loopne
cs
fbld
adcb
inc
cmp
mov
push
sbb
jg
jbe
mov
cmp
stos
sub
adc
add
jp
mov
dec
mov
sbbb
outsl
rorl
push
std
fists
rep
imul
fmull
aad
clc
das
icebp
lods
mov
sbb
in
cs
push
xchg
out
add
fld
call
xchg
adc
adc
lcall
cmpsb
push
mov
ljmp
or
movsl
mov
pop
push
and
popf
dec
pop
movsb
push
mov
pop
loopne
ljmp
arpl
cwtl
add
lret
cmp
mov
adcl
push
imul
mov
xlat
jo
inc
xor
push
dec
decl
or
push
insb
mov
pop
dec
mov
jle
pop
mov
adcl
jge
jg
mov
outsl
or
scas
inc
mov
lret
cmp
push
cwtl
lock
outsl
jmp
and
pop
xchg
push
lock
sbb
ret
fwait
and
mul
int
adc
js
mov
ret
fs
push
aas
inc
or
rolb
testb
lock
jo
aas
in
shr
mov
adc
insl
dec
or
xchg
movsl
mov
jb
insb
in
ljmp
jmp
mov
das
mov
das
dec
aad
xor
xchg
pop
ljmp
fisttpll
cwtl
pop
jp
lea
loopne
sar
iret
adc
and
mov
in
aaa
mov
push
test
out
rcll
or
mov
pop
icebp
and
mov
lds
inc
in
lods
and
xchg
sbb
fcmove
sbb
outsl
mov
inc
cmp
negb
jge
addl
adc
decl
mov
lahf
repz
or
jo
cmp
jg
ds
mov
rorb
cli
mov
sahf
sbb
inc
adc
fstl
sti
add
sbb
sbb
sarb
push
fs
nop
and
inc
lahf
adc
add
out
loop
loopne
sub
push
scas
inc
jno
adc
mov
incl
lock
cmp
jne
xchg
pusha
jbe
sub
xchg
jle
mov
popf
mov
stc
mov
push
mov
jmp
add
mov
jge
cwtl
movl
cld
inc
fimull
push
nop
and
push
cmpsl
mov
adc
pop
stos
cmpsb
xor
stos
pop
sti
sbb
in
call
jnp
ss
out
push
dec
dec
insl
lds
cmp
adc
xor
bound
stos
xor
aaa
imul
push
sub
ss
test
enterw
mov
sbb
jecxz
xlat
or
add
lret
cltd
xor
mov
jbe
adc
xor
cmp
cltd
xchg
rclb
call
ljmp
or
push
xchg
adc
adc
test
xchg
or
in
clc
or
cmp
jmp
clc
stc
mov
push
mov
fwait
inc
jnp
loope
jae
add
inc
sbb
or
int3
mov
push
lret
cli
leave
add
lods
adc
fs
mov
push
loope
push
ret
add
jb
popf
out
test
pop
jbe
mov
addr16
xor
and
cmc
push
fstl
adc
das
sti
or
cld
movb
inc
aam
shr
push
hlt
cld
inc
daa
mov
pop
push
or
lock
sahf
mov
test
sbb
fs
xlat
pop
mov
push
aas
cmp
loop
ja
push
sahf
and
adc
das
in
mov
int3
push
xchg
add
lea
outsl
sub
push
sti
adc
fs
mov
gs
dec
pop
loopne
in
andb
cmp
lret
push
xor
dec
in
ret
fisttpll
xchg
jecxz
mov
ss
rolb
pushf
gs
ret
test
push
orl
test
cld
aas
aad
jge
lods
dec
fidivrl
jle
adc
add
mov
or
xor
dec
and
jg
icebp
add
sub
mov
cmp
scas
mov
jne
clc
cli
push
xchg
orb
mov
clc
xor
js
xchg
test
adc
sub
mov
punpckhdq
ret
daa
cmp
adc
cmc
mov
movsb
jle
inc
in
jb
jno
mov
cmp
xchg
pop
xchg
or
pop
popl
cmp
mov
shlb
xchg
mov
std
js
roll
bound
push
xchg
xchg
cwtl
mov
add
fwait
mov
pop
dec
clc
mov
add
or
fcomps
and
pop
xor
add
add
insb
cmp
and
push
mov
push
hlt
fwait
cmp
inc
dec
sub
pop
rorl
mov
pop
and
jno
adc
orb
push
mov
inc
mov
adc
mov
or
push
dec
leave
addb
push
test
movb
xchg
insb
mov
xor
sbb
xor
mov
xlat
pushf
dec
aam
cmp
or
add
lock
jecxz
push
in
scas
pop
stos
push
iret
stos
cli
mov
call
add
or
inc
mov
add
ret
sub
sub
add
cmpsl
adc
test
sub
negb
out
arpl
pop
mov
mov
cli
not
sbb
mov
mov
sbb
push
xchg
movsl
fldl
jl
sbb
fildl
out
xchg
and
mov
dec
sbb
sti
sbb
lods
and
nopl
jbe
add
push
cmp
popa
enter
ror
movsl
scas
rclb
mov
rcrb
jg
xchg
test
inc
lock
jno
push
out
xchg
cmp
pop
stos
sbb
inc
add
fsubp
add
cmc
jg
push
rorl
jmp
add
sub
in
cmp
fistps
sbb
mov
mov
daa
xchg
orb
loope
icebp
add
daa
ds
shll
mov
mov
orb
cmpsl
add
jae
mov
aad
dec
sbb
orb
mov
clc
mov
lds
imul
int3
les
lahf
lods
sbb
lcall
inc
pop
jmp
pop
loop
xchg
insl
mov
mov
mov
daa
cmpsl
mov
test
data16
loop
je
jge
mov
push
pop
icebp
rorl
add
cmp
mov
push
jmp
add
aas
fsubrs
sbb
pop
or
call
push
es
push
sbb
or
sub
xchg
pop
sti
mov
xchg
xlat
dec
xor
aaa
inc
xchg
movl
lahf
popa
push
mov
loopne
cmp
and
repz
test
cmp
ds
clc
pop
jnp
and
xor
rorl
pop
ja
and
in
xchg
ss
repz
mov
test
jmp
loope
mov
ds
test
xor
cwtl
arpl
cld
mov
jno
adc
test
jnp
jle
inc
clc
mov
jb
push
test
rorl
fldl
test
mov
adc
jne
jnp
or
xchg
jl
aas
inc
jecxz
ret
and
shrl
inc
fsubl
jl
repnz
lock
lds
xor
and
inc
les
jle
lret
mov
xchg
jb
shr
in
fcompl
cmpsb
or
outsb
pop
adc
cld
loop
dec
and
cmc
inc
sub
sub
test
inc
jmp
sahf
sub
test
mov
shlb
insl
scas
or
stos
in
filds
arpl
stc
jl
add
testl
jle
mov
or
sbb
xorb
loopne
test
cmpb
dec
xchg
aam
out
stos
in
fldl
cltd
lock
lea
clc
push
cmc
push
or
adc
popf
mov
imul
nop
pop
in
adcb
cwtl
or
push
cmp
inc
jg
ljmp
jge
mov
mov
xchg
ret
and
mov
mov
sub
xor
rolb
xor
lock
push
jg
out
mov
in
aaa
dec
stc
out
fdivs
loopne
or
push
mov
cwtl
ljmp
pop
outsb
jnp
mov
out
fisubrl
add
inc
mov
cmp
or
sub
enter
call
push
mov
addb
sub
and
mov
das
cwtl
xchg
nop
sub
aaa
cmc
mov
popa
scas
mov
jg
inc
jge
inc
adc
add
outsb
das
aaa
jne
imul
sub
imul
inc
ljmp
iret
add
jnp
mov
stc
inc
sti
jns
repnz
aad
es
jmp
insl
mov
enter
cmc
xchg
fmuls
xchg
mov
pop
sbb
xor
sbb
shrl
jp
lods
decl
shl
cmpb
add
jno
das
xor
and
or
and
push
loopne
mov
mov
jecxz
mov
jecxz
pusha
fistpll
lcall
jg
aam
jecxz
sti
fistpll
mov
pusha
idiv
pop
stos
sub
scas
adc
incl
cld
setb
or
lret
cmpsb
and
pop
test
or
dec
xlat
dec
cmp
mov
jecxz
inc
jp
jg
push
jbe
aam
adc
cmpsl
mov
cs
lods
xchg
dec
and
or
jl
mov
xor
rcr
fdivl
rorl
and
arpl
dec
dec
sbb
inc
mov
bound
es
outsb
je
or
jo
inc
fcmovnu
mov
loopne
add
jg
lret
outsb
pop
ds
imul
or
mov
and
sub
push
inc
or
mov
stos
sbb
jecxz
pusha
push
popf
mov
icebp
iret
xchg
pop
adc
xor
and
loop
push
std
add
out
inc
sub
lock
outsl
jge
lea
sbb
adc
jae
daa
loopne
dec
or
inc
jl
aas
shlb
xchg
cmp
sub
mov
add
sub
aas
outsb
mov
xor
mov
dec
push
mov
sbb
addl
xor
push
jo
mov
xor
aas
jae
and
mov
push
cwtl
dec
lock
sub
int3
xchg
jge
cmp
popa
cmp
mov
and
mov
mov
push
add
adcb
pop
sahf
xchg
bound
push
test
daa
loope
fdivs
push
cmpsl
popf
push
pop
mov
pop
mov
lds
mov
repz
lock
and
cmp
push
hlt
or
mov
xchg
call
mov
jmp
fisttpl
repnz
or
mov
xchg
mov
and
xor
aam
les
or
decl
add
mov
sub
rcl
or
xor
les
sbb
xchg
call
movsl
jno
mov
jne
jns
inc
fbstp
or
loope
cmp
add
lret
mov
lds
cmpsl
test
adc
xor
xchg
mov
fadd
sub
inc
in
test
adc
xor
repnz
push
xchg
lret
faddp
pusha
gs
lds
pop
sarb
call
fbstp
in
cmc
jo
mov
insb
adc
pop
sti
lock
cs
clc
in
inc
in
mov
cld
sbb
aas
and
arpl
dec
dec
pop
fstp
aad
mov
and
arpl
outsl
adc
add
stos
pop
xor
shrb
mov
lea
pushf
cli
int3
call
nop
aam
sbb
test
mov
std
or
and
push
xchg
leave
jle
mov
cmp
fadds
iret
lret
mov
mov
adc
test
sub
adc
xor
xchg
jg
ljmp
inc
test
nop
loopne
sbb
daa
add
inc
sbb
lahf
or
lock
mov
inc
int3
aad
mov
addl
test
mov
pusha
dec
in
js
pop
ficoml
adc
mov
lods
pop
or
int
int3
outsl
xor
push
shrl
adc
jo
jmp
jg
sbb
inc
sbb
push
mov
dec
repz
or
jno
and
insl
icebp
call
mov
push
fisubl
gs
pop
cmpsl
mov
rorl
or
shl
xchg
outsb
lahf
xor
mov
popf
outsl
test
negl
jmp
and
push
loopne
sbb
loopne
ret
mov
xchg
jg
jb
cmp
jb
sbb
xor
movsl
cwtl
je
pop
jmp
jnp
sub
pop
filds
mov
mov
popa
add
sti
incl
cwtl
outsb
sub
mov
cltd
adc
sahf
imul
mov
or
fcmovb
and
daa
dec
stc
cmpsl
cmp
xor
mov
mov
adc
dec
test
or
push
add
mov
mov
add
addr16
aaa
mov
xor
mov
ffreep
decl
pop
decl
xchg
enter
outsb
or
fstl
jg
mov
sub
mov
ret
pop
lock
push
xor
loopne
sahf
rcr
ss
jo
dec
push
sub
jo
xchg
jle
and
inc
repnz
xor
fucomi
lds
xor
jg
pop
jb
mov
das
nop
negb
movsl
jg
pop
mov
or
movsb
mov
shrb
mov
sbb
push
xor
es
ja
insl
push
std
aaa
fcomps
inc
push
fildl
in
test
test
sbb
outsl
or
sbb
es
jne
das
cld
shll
outsl
or
sbb
aas
fimull
notl
ljmp
pop
mov
dec
neg
mov
inc
jns
push
test
xchg
in
popf
mov
rclb
or
push
loop
xor
sub
aad
sub
negl
imul
movsl
add
enter
or
pop
mov
cmp
adc
add
andb
or
push
scas
inc
int3
xor
test
mov
push
adc
or
shll
cmp
bound
inc
outsl
push
outsb
pusha
mov
adc
or
add
fistpll
xor
xlat
fisttpl
in
mov
or
add
inc
mov
mov
push
fcmovnb
push
and
xor
pop
sbb
fucom
add
rcrl
inc
mov
mov
dec
jmp
addr16
aam
andb
addb
and
sub
mov
xchg
in
cmp
dec
fwait
mov
das
or
sbb
fs
pushf
shll
mov
bound
mov
adc
cwtl
sub
jno
pop
xor
add
repz
jbe
push
add
dec
aam
js
or
orb
rorb
rcrl
fistps
adc
insl
add
fsubl
sbb
lahf
hlt
push
roll
test
aaa
loopne
adc
inc
into
loopne
and
add
push
mov
sbb
adc
or
mov
pop
std
mov
or
or
or
push
pop
sbb
adc
stos
push
add
shlb
add
inc
jp
ljmp
add
in
inc
or
adc
scas
aam
xor
jecxz
sub
push
add
imul
aam
mov
mov
iret
jbe
mov
xor
jne
dec
adc
out
or
or
cmp
das
push
jp
and
push
pop
in
adc
rclb
adc
pusha
or
shlb
jmp
iret
or
loope
sbb
int3
or
push
pop
pop
xchg
sbb
cmp
pop
and
push
xor
push
add
clc
jmp
inc
mov
iret
outsb
fcmovnb
xchg
cmp
add
and
les
aad
push
jg
cltd
lock
data16
loop
rcr
cs
int
and
rep
mov
xor
add
pushf
imul
jg
loop
sub
addr16
mov
mov
mov
jg
gs
xchg
int
std
das
loope
xchg
mov
add
push
mov
aaa
mov
jns
test
imull
mov
ds
inc
sbb
ficomps
push
lods
or
bound
lods
mov
test
adc
pushf
clc
movsl
lock
pop
pop
in
leave
and
mov
jno
dec
cwtl
adc
xor
lahf
jo
or
popa
push
aam
push
dec
js
add
loope
test
dec
les
andb
cmp
jmp
fstpl
jns
jmp
adc
mov
fsts
negb
mov
test
cmp
mov
sbb
ljmp
push
repnz
cmpl
inc
cmc
test
mov
out
xchg
lahf
adc
loopne
rol
rol
mov
rcll
sub
mov
sti
inc
jmp
repnz
addr16
lcall
add
dec
sbb
adcb
jo
xchg
inc
inc
enter
cmp
mov
xchg
mov
lret
lds
std
js
jne
inc
push
or
push
filds
movsb
jb
fsubrp
js
fildll
cmp
xchg
push
mov
rclb
cs
pop
clc
inc
outsb
and
mov
cmpsb
ljmp
push
ret
rorl
andl
jb
adc
or
xchg
insl
adc
add
wrmsr
sbb
jbe
outsl
push
mov
pop
repnz
xchg
sbb
std
and
sub
cli
pop
in
pushf
imul
dec
rorl
push
or
xchg
xchg
pop
lock
clc
xlat
sbb
pop
push
sub
adc
js
mov
or
shll
es
iret
stc
mov
mov
sub
dec
inc
fcoms
mov
xor
int
jp
or
sti
fstpt
cmp
lahf
jns
and
push
pop
sbb
push
jl
push
jl
rcrb
inc
cld
lods
cmp
jg
and
push
popf
stos
push
aaa
jae
repz
mov
in
push
xor
sub
fwait
jb
imul
sub
push
add
add
cwtl
loopne
pop
lds
outsl
lock
inc
mov
les
das
enter
or
jmp
scas
mov
cmpsb
stc
sahf
lock
sahf
sub
rolb
mov
xchg
stos
stos
add
mov
std
mov
fldt
mov
jle
jns
jle
cmp
xor
mov
test
push
pusha
cmp
in
test
or
xchg
and
dec
inc
xor
insl
xchg
or
cs
ljmp
aas
xchg
xchg
in
shll
push
movsl
push
xlat
dec
cld
mov
inc
lret
cld
hlt
add
mov
leave
test
lds
jo
adc
pop
fstpl
jg
cmpsl
pop
or
sbb
ljmp
sub
dec
gs
enter
dec
fdiv
jno
cmpsb
js
cld
jecxz
sbb
and
mov
mov
jns
call
shrb
and
pop
and
xchg
add
xor
sub
add
rolb
xorl
push
repnz
jne
adc
adc
or
addb
lods
dec
mov
mov
pop
test
mov
cld
and
jno
sahf
adc
or
mov
jg
mov
push
orb
inc
and
pop
or
int
xor
les
push
mov
out
sbb
mov
push
push
mov
jmp
repnz
xor
jecxz
stos
and
lea
jge
xor
ds
cmpsl
clc
jb
dec
dec
xor
cmp
xlat
pop
shll
call
in
test
int
pop
mov
aas
pop
adc
cs
xchg
mov
pop
push
mov
xchg
push
sub
xor
sbb
mov
ret
pop
jnp
rcrb
call
mov
push
adc
cmc
subb
jge
aam
out
adc
push
fcomps
and
lods
jno
out
mov
movsb
shrb
adc
jg
fidivrl
shlb
sub
or
stc
adc
popa
ds
adc
test
out
cld
or
sarb
fwait
aaa
sbbb
clc
sbb
jge
sub
or
mov
das
data16
fadds
sub
add
jne
cltd
jb
jp
sti
cmp
push
hlt
sub
jo
sar
dec
adc
jns
or
in
lahf
cmp
fimull
jg
testl
repnz
adc
jge
push
fcomp
and
stc
mov
andb
or
mov
xchg
adc
jns
mov
out
das
push
xor
cmpsb
sti
push
in
in
arpl
pop
fs
and
push
mov
sub
insb
call
sub
pusha
adc
add
test
add
arpl
fsubr
xor
dec
and
ret
sbb
test
repz
inc
je
push
lds
lds
adc
xchg
subb
cmp
data16
in
mov
mov
aaa
and
loopne
sbbb
test
aas
inc
insl
fmuls
mov
insb
icebp
cli
add
popa
inc
iret
push
int3
es
test
fisubs
adc
mov
in
add
aad
rorl
loopne
insb
push
addr16
sbb
addr16
mov
dec
es
popa
test
test
call
adc
js
cli
lret
ss
xor
movsb
or
inc
add
or
push
shll
cli
and
jo
out
jb
pop
push
mov
sbb
lods
shl
mov
cmp
jne
lret
outsl
sbb
inc
push
mov
push
dec
ljmp
inc
jmp
hlt
dec
jge
or
adc
jmp
in
je
push
adc
icebp
je
lea
cmpsl
mov
sbb
les
mov
cmp
test
repnz
cmp
js
xchg
inc
jo
xchg
cmpsl
mov
popa
push
loopne
xor
adc
and
vshufps
call
test
test
mov
les
arpl
push
sbb
stos
shll
xor
daa
add
shr
push
repz
stos
xchg
test
fsubs
push
fiadds
and
inc
in
pusha
sub
fcom
inc
je
leave
cli
popa
mov
and
pusha
test
jae
jns
jne
call
adc
adc
outsb
jo
cli
and
or
icebp
nop
inc
and
sub
in
dec
fs
movsb
adc
or
cmp
xchg
add
lahf
decl
enter
repnz
lock
cmp
adc
pop
fidivrs
mov
adc
xchg
push
and
lds
test
pop
push
and
mov
sbb
inc
aaa
clc
incl
sub
add
adc
loopne
dec
sbb
adc
cld
enter
lods
mov
loope
out
add
mov
sub
subb
leave
out
push
js
cmp
dec
or
push
mov
movsl
ljmp
stc
inc
lods
add
in
dec
loope
popa
and
inc
or
sub
arpl
icebp
in
mov
jno
add
sub
cmp
out
mov
cli
and
mov
jle
lock
iret
mov
sub
xor
pop
dec
lcall
xchg
or
je
lock
sub
test
dec
push
push
call
cmp
adc
ja
dec
adc
sub
lret
insl
shrl
ret
jb
add
movsl
cmp
ja
pop
test
cwtl
rcrb
pop
mov
in
push
enter
jmp
test
mov
sub
or
outsl
and
jbe
mov
adc
sbb
mov
in
push
push
inc
pusha
popa
cmpsl
sub
sbb
test
rcl
rcll
xor
aas
sbb
inc
rclb
mov
push
mov
or
insb
in
call
inc
push
fiadds
dec
dec
int3
and
jae
and
dec
adc
scas
enter
sbb
sub
xchg
jns
lods
fwait
call
inc
xchg
insb
mov
fs
bt
xchg
mov
cmp
stc
enter
pushl
jle
mov
aad
or
jae
movsb
or
xchg
sahf
das
inc
inc
mov
xor
dec
jmp
and
inc
rcll
cmpb
jae
mov
xchg
xor
sub
mov
xorb
jbe
ffreep
jb
lds
sbb
sub
xchg
mov
mov
mov
fbld
dec
push
or
pop
jecxz
dec
cld
inc
lcall
int
mov
mov
out
pop
pop
push
and
lods
cmp
movsb
test
mov
out
adc
mov
sti
out
jle
push
dec
inc
leave
add
outsl
add
jne
or
push
fs
cltd
sub
js
xchg
or
push
push
inc
int3
imul
andb
mov
cmp
scas
idivb
lock
leave
or
imul
or
adc
adc
loopne
stos
int
sub
adc
inc
xor
pop
imul
sbb
add
mov
loopne
lret
xor
hlt
orb
call
xor
pop
xor
inc
mov
test
dec
sub
pop
adc
test
sarl
or
add
pop
dec
mov
add
fwait
adc
cmp
add
loopne
ficoms
jg
push
into
mov
mov
fldenv
mov
and
or
shll
sub
sub
sbbl
int3
adc
add
push
adc
dec
insl
push
gs
cmp
and
cmp
int3
bound
lahf
stc
fcoml
repnz
add
add
sahf
mov
fisttpll
loopne
mov
leave
bound
sub
dec
inc
std
out
inc
in
mov
mov
inc
jo
pop
movq
int
int
and
mov
and
xchg
adc
cwtl
jp
in
faddl
adc
push
sbb
shl
and
sub
push
inc
adc
orl
das
jno
cmp
repnz
sub
and
add
and
adc
pop
jno
enter
out
push
stc
data16
and
aam
stos
cmp
icebp
jne
dec
jb
ret
mov
cmc
mov
cmpsb
add
inc
dec
clc
fisubl
inc
cld
cmp
arpl
rorl
inc
insb
jl
pop
xor
push
ljmp
dec
andb
add
lret
mov
pop
inc
cwtl
mov
movsb
js
jmp
stc
jmp
lea
sub
inc
xchg
adc
jo
add
orb
add
cmc
and
adc
jmp
push
adc
and
popa
fwait
call
clc
add
jmp
mov
in
aaa
sub
in
mov
lret
sbb
xchg
mov
fldl
adc
insb
push
das
or
cs
push
inc
pop
les
mov
push
in
pop
push
adc
or
xchg
hlt
add
mov
das
hlt
adc
adc
mov
jbe
push
push
sub
hlt
sub
das
and
mov
dec
sub
enter
fnstenv
push
mov
mov
enter
daa
inc
loope
adcb
test
cmp
ret
cmpl
or
dec
cli
js
add
add
lock
std
dec
stos
pop
adc
or
adc
adc
leave
ret
pop
cmpsb
in
mov
imul
aam
or
je
pop
mov
es
mov
jmp
out
outsb
rcrb
loopne
xor
dec
icebp
arpl
cmp
dec
enter
dec
mov
mov
movsl
rorl
movsb
pop
cmp
and
and
sahf
adc
adc
mov
xchg
jae
and
subb
xor
add
add
idivl
sub
iret
pop
xchg
inc
jno
cltd
enter
ljmp
cli
jmp
rcl
add
add
and
pushf
cmpsl
push
ret
adc
inc
popf
sbb
push
dec
mov
bound
cmp
adc
addr16
add
push
popf
sub
into
stos
popl
roll
sub
int
adc
bound
add
or
pop
lret
cmp
sub
movl
add
adc
or
mov
fldl
inc
out
jge
mov
mov
push
pop
xchg
fbld
stos
add
add
add
jo
mov
mov
pop
rcrb
sbb
aad
or
into
shl
lock
dec
push
add
and
or
cli
dec
shll
sbb
bound
fwait
xor
pop
adc
push
sbb
push
cmp
add
xor
xchg
stos
inc
addb
jmp
adc
or
pop
sahf
mov
adc
fisubl
xchg
add
mov
xchg
push
hlt
stos
mov
jecxz
push
push
out
fwait
imul
pop
mov
movsl
addb
jne
call
pop
xor
mov
in
jecxz
dec
cmp
movsb
sub
hlt
mov
adc
cmp
es
add
adc
imul
pusha
and
popf
xchg
fistl
mov
loope
push
stos
cmp
es
pop
push
stos
and
mov
pop
enter
outsl
je
dec
dec
jae
sbb
dec
test
cmpb
shl
adc
lods
xor
and
ss
mov
jnp
leave
add
ds
call
or
inc
push
xchg
lcall
iret
imul
cmc
or
push
aam
loope
outsl
and
mov
shlb
inc
add
cmc
pop
fucom
dec
inc
pop
clc
idiv
enter
xchg
push
add
orb
and
mov
push
jl
push
pop
test
inc
mov
inc
sbb
cmc
cltd
ret
add
push
mov
and
add
imul
xchg
and
out
dec
adcb
es
jl
pop
lcall
add
pop
jnp
sbb
jmp
pop
out
sub
icebp
xor
pop
xor
js
mov
xchg
mov
add
xchg
cli
insb
sahf
add
emms
push
sub
das
push
js
mov
sbb
inc
push
sbb
push
mov
dec
sahf
nop
mov
popa
mov
or
call
xor
pop
mov
mov
ljmp
in
mov
sbb
adc
lods
adc
pop
cwtl
xor
mov
js
fisubrl
inc
mov
test
rorl
cli
and
arpl
fcompl
inc
xor
icebp
es
pop
lods
int3
movsl
test
andl
nop
in
sahf
pop
sub
xchg
mov
pop
cltd
fbld
testb
push
pop
and
push
into
scas
push
mov
movsb
push
pop
or
add
pop
arpl
and
jp
movsl
mov
dec
aam
add
mov
stc
rcpps
fbstp
stc
inc
lds
and
test
neg
push
sbb
popf
shlb
or
sbb
ljmp
scas
cmp
clc
dec
and
inc
cmpsb
pop
iret
sbb
mov
fildll
and
xlat
xor
ss
pop
xchg
add
xchg
fs
mov
xchg
in
pop
add
xchg
fsubrl
subb
sbb
outsb
add
notb
xchg
negb
mov
push
mov
gs
outsl
mov
pop
movsb
rclb
fmull
xchg
clc
les
push
xchg
jnp
pop
inc
cmp
mov
mov
inc
and
xchg
pop
pushl
xor
into
mov
mov
bound
sub
jecxz
arpl
inc
sbbb
sbb
jge
push
add
cli
cmc
inc
xchg
lcall
and
xlat
sub
loope
leave
xchg
shlb
idiv
jecxz
adc
adc
xlat
sub
shl
loop
das
adc
iret
fadd
pop
arpl
repnz
adc
lea
mov
fnsave
add
sbb
fildll
clc
and
repz
mov
ljmp
mov
and
enter
and
and
jg
jae
push
add
jle
and
pop
das
mov
xchg
int3
loopne
cmp
outsb
les
mov
push
out
stc
inc
cmp
push
pop
rorl
xlat
or
sub
or
mov
push
call
mov
mov
pop
cld
aaa
fisubs
sub
mov
cmp
aas
fildl
mov
hlt
xchg
fcmovnbe
cmp
lods
dec
sub
cmpsl
lock
rorb
shrd
and
mov
les
mov
jae
aam
sub
add
iret
inc
bound
mov
inc
or
imul
jne
and
and
orl
fsubrs
outsl
sbb
or
mov
lea
mov
fs
movsb
sub
addr16
lret
scas
pop
jnp
cmovo
add
pop
inc
lcall
xor
add
adc
mov
jg
hlt
sub
mov
mov
fs
lret
jnp
std
xchg
fs
jmp
mov
rorl
in
outsb
loope
movsb
icebp
clc
pushf
jp
add
add
lret
adc
or
jno
jo
pop
add
or
movsl
mov
push
sbb
adc
lret
in
add
adc
or
cmpsb
int
xchg
jmp
push
pop
ret
add
out
or
inc
add
mov
dec
dec
push
popl
push
insl
add
jg
cmp
and
xor
mov
inc
enter
cwtl
jb,pt
mov
pop
add
je
jle
inc
add
adc
pop
dec
je
jno
inc
cld
sbbl
push
pop
and
out
fisubl
fimull
and
incb
add
push
xchg
aas
into
jge
aaa
mov
and
shll
pop
repnz
mov
neg
sbb
mov
daa
out
out
push
mov
push
inc
jg
ljmp
sub
insb
lea
and
dec
xchg
cli
xor
pop
cmp
add
mov
xorb
cmpb
inc
jmp
or
cmpsl
fcmovnbe
sbb
or
pop
out
fs
add
arpl
sbb
dec
mov
rorl
leave
sub
fistpll
pop
and
xchg
and
int3
adc
jb
adc
pusha
lock
ljmp
ret
in
mov
xor
push
pop
ljmp
jl
lret
dec
les
xchg
pusha
std
jbe
or
sub
push
jne
mov
or
pop
cmp
dec
popl
pop
mov
pop
shrb
fisttpll
shlb
jb
or
inc
pop
mov
test
jb
ficomps
aam
int
shl
shrl
mov
ds
inc
sbb
push
xor
mov
out
and
mov
adc
mov
jl
add
dec
mov
adc
lret
pop
add
inc
int3
cmp
add
repz
sub
roll
push
xlat
repnz
fists
inc
pop
or
sbb
adc
and
add
push
iret
mov
cmp
es
dec
jmp
sbb
aas
adc
fwait
xor
jge
or
dec
pop
aam
and
rol
jecxz
and
inc
and
aaa
inc
jb
sub
pop
inc
push
fistl
enter
fiaddl
cwtl
add
or
addr16
lcall
call
shrb
xlat
or
pop
ja
fs
mov
add
shlb
xor
jl
enter
out
mov
sbb
inc
jb,pn
lret
sub
push
jl
mov
cmp
pop
adc
cmp
fst
dec
push
xchg
mov
int3
push
stos
sbbl
xor
nop
dec
inc
inc
fistpl
scas
pop
fmull
jb
xorb
push
int3
jbe
adcl
js
xchg
imul
mov
mov
add
jp
repnz
mov
subb
out
mov
roll
inc
inc
dec
jl
mov
cmpsb
sub
sub
dec
loopne
and
popl
iret
repz
add
sub
loop
aam
shlb
les
jns
add
and
sub
aam
lcall
pop
sarb
sbb
xor
movsb
addr16
adc
insl
cmpsb
mov
sbb
je
xor
or
js
fs
mov
xchg
in
call
js
or
jl
cs
push
mov
push
or
dec
push
cwtl
das
push
xchg
inc
adc
aas
push
pop
and
data16
call
in
icebp
pop
cmp
aas
aad
icebp
nop
pop
sub
mov
js
xchg
out
pop
inc
stc
sbb
sub
loope
lds
dec
dec
cmp
dec
into
pop
mov
addl
pop
cmp
mov
inc
into
pusha
sub
add
faddp
push
outsb
in
insl
add
dec
in
rorb
fmull
orl
dec
adc
mov
or
neg
add
add
insl
cmpl
aas
and
cmp
rcll
inc
adc
pop
mov
scas
gs
dec
or
sub
int3
fldenv
add
xrelease
ljmp
repz
pop
push
ret
cmp
cltd
sub
mov
sub
mov
add
adc
mov
mov
push
jno
addr16
jecxz
and
gs
push
daa
adc
pop
shl
push
pop
pop
pop
test
push
dec
sbb
repnz
xor
js
int3
sub
pop
cmp
push
leave
test
cmp
les
iret
cmp
mov
sbb
fwait
fwait
enter
push
inc
xchg
lea
popf
and
cli
scas
mov
mov
repnz
shlb
imul
and
jbe
mov
aad
aam
adc
push
out
call
and
enter
and
aam
adc
aad
xor
inc
adc
int
add
add
or
aas
push
mov
and
inc
daa
lock
jmp
add
push
xor
jo
loopne
roll
lret
daa
ret
jmp
scas
sti
adc
fwait
or
in
add
push
int
fwait
call
xchg
loopne
ds
inc
test
into
sbb
js
dec
insl
mov
scas
loop
mov
push
pop
outsb
mov
jge
xorb
dec
int3
dec
and
pop
or
push
xor
clc
pop
add
mov
aam
or
je
inc
popf
shrb
fisttpl
pop
clc
sti
nop
mov
lahf
add
lock
adc
pusha
push
in
iret
cmp
test
aaa
adc
mov
ret
sub
lret
test
sub
rcrl
leave
add
adcl
sbb
jg
sub
adc
add
xchg
dec
pop
les
ljmp
loopne
xchg
in
mov
xlat
call
mov
divb
shrl
inc
pop
scas
es
stos
inc
mov
xchg
dec
cltd
jno
jl
pop
xchg
or
add
push
sbb
mov
sbb
add
sub
aas
add
pop
xchg
cmp
push
sub
push
jmp
lock
mov
out
loop
cld
lds
mov
lahf
sbb
push
cmp
popa
add
and
jge
sbb
add
sbb
xchg
sub
mov
dec
push
rcrl
inc
pop
aam
aad
push
dec
jo
daa
imul
gs
cld
add
xor
mov
stos
mov
sub
gs
xor
decl
fstpl
xor
pop
pop
aad
add
sbb
and
pop
mov
nop
bound
bnd
pusha
fnstsw
xor
shl
test
jo
loopne
add
int
ja
scas
imul
dec
aam
jnp
add
sub
dec
jle
cwtl
ljmp
add
mov
adc
fst
and
repnz
in
xchg
jae
and
cli
mov
adc
push
cmp
ljmp
and
incl
inc
sbb
xor
lcall
mov
js
jb
jno
das
cmc
movsl
incl
cmc
das
add
and
cmp
daa
stos
shl
fisubrs
in
mov
or
xchg
clc
mov
mov
push
mov
jb
mov
aad
loop
loop
sahf
lock
sbb
xchg
push
adc
fsubl
and
mov
daa
ret
cmp
daa
es
xchg
xchg
push
jmp
mov
mov
xchg
dec
jo
sbb
sub
add
or
pop
or
int3
imul
test
mov
mov
pusha
cli
pushl
mov
lock
imul
or
ret
push
mov
jmp
sarb
inc
popf
xor
sub
ja
pshufw
mov
pop
rol
das
les
pop
fmull
mov
or
sbb
cli
dec
js
mov
jo
in
addb
adc
adc
pop
rcr
sbb
inc
les
push
dec
cmpsb
aaa
and
push
imul
pushf
shll
pop
sahf
aas
test
inc
fistpll
imul
push
in
inc
and
fldenv
cld
mov
or
data16
movsl
sbb
cmp
xorb
cmpsb
sbb
nop
adc
das
mov
jle
test
dec
les
movsl
xor
jg
pusha
arpl
cmpb
and
mov
push
adc
jns
adc
or
dec
mov
nop
push
and
push
sar
or
jno
mov
push
push
mov
lcall
mov
add
inc
inc
lock
decb
mov
clc
repz
in
lods
fwait
mov
xor
jg
lds
repz
inc
test
sbb
nop
push
jp
xchg
and
js
lcall
sub
and
cmpb
mov
loopne
pop
dec
adc
jns
and
cmpsl
jo
ficoms
push
pop
popa
inc
fisubl
inc
fs
xor
or
mov
push
ljmp
sbb
pop
mov
movsb
sub
sub
test
add
sbb
mov
and
loopne
insb
pop
mov
std
and
mov
in
fdivrl
iret
cmp
sub
int3
je
jb
cmp
adc
xchg
mov
js
iret
mov
mov
ja
in
xor
ret
dec
xchg
sub
cmp
and
cmpsl
dec
inc
scas
mov
test
pop
je
test
mov
js
insl
xor
mov
mov
dec
inc
adc
and
fsubr
mov
jb
add
cmp
mov
dec
sub
mov
lds
call
nop
xchg
sub
sub
or
fnstenv
je
mov
loop
jp
fstps
fucomp
outsl
jns
cmp
lods
cmp
ja
xorl
sbb
pop
clc
push
or
xchg
outsb
pop
ljmp
add
pop
add
sbb
mov
push
mov
aas
popa
je
jbe
rcll
lods
pop
sub
mov
sbb
mov
out
and
aas
hlt
pop
and
inc
rcrl
sbb
ret
leave
shrl
inc
xor
cli
rcr
lcall
push
jbe
mov
xor
mov
cmp
icebp
mov
mov
loopne
out
and
fsubrl
cmpsl
cltd
loope
addb
cli
mov
nop
inc
fbstp
push
xchg
mov
and
push
mov
and
sub
mov
out
sub
lret
stc
call
add
dec
xor
cmpl
xor
das
mov
lock
add
inc
lcall
xchg
subb
outsb
pop
mov
nop
mov
or
adc
sub
enter
cs
sub
addb
or
jle
fbld
les
call
fidivrl
inc
cmp
cwtl
sub
popf
dec
xchg
push
mov
nop
repnz
and
movsl
fistpll
jg
loop
mov
jo
sub
mov
push
xchg
jg
test
pop
push
add
and
icebp
jg
sti
mov
mov
and
loop
jg
imul
adc
adc
aaa
mov
clc
pop
add
mov
dec
fdivrl
jmp
sar
add
and
fs
inc
sbb
jg
ss
pushl
dec
insl
pushf
dec
add
comiss
cmpsb
dec
xor
fisttps
pop
daa
test
mov
jecxz
inc
or
adc
incl
popa
jo
pop
notb
data16
adc
jne
push
loopne
push
cs
jmp
repnz
sarb
xor
addr16
sub
xor
leave
pop
push
cmp
insb
daa
push
mov
int
enter
lds
adc
sbb
aad
push
loope
cmpsb
pop
leave
icebp
adc
cli
jnp
push
and
sbb
pop
in
push
je
icebp
test
testl
pusha
pop
shlb
in
aam
add
sbb
adc
sub
add
fs
sbb
clc
inc
add
movsb
inc
adc
xor
imul
jecxz
cwtl
inc
push
stos
xchg
in
jp
loopne
push
cmc
adc
inc
push
adc
lds
sub
adc
adc
adc
xchg
mov
ret
adc
push
dec
out
imul
push
in
dec
rol
sub
ret
scas
mov
pop
addr16
in
pop
or
or
test
adc
adc
sbb
sbb
and
cmp
lret
and
int3
call
push
push
push
sahf
out
popa
xor
sbb
jb
sub
or
mov
mov
mov
dec
inc
enter
dec
or
in
sti
iret
cmpsl
mov
roll
xchg
ja
cmc
jae
pop
aam
mov
adc
push
leave
push
cld
push
shll
push
jae
mov
subl
rclb
and
cmpsb
filds
or
xchg
push
ljmp
mov
incb
mov
loop
into
mov
jecxz
lea
enter
insb
cmp
xchg
sub
push
pop
outsl
push
leave
lds
push
sbb
insb
jecxz
subb
fbstp
xchg
test
adcb
mov
sahf
out
repnz
and
pop
je
insb
icebp
mov
les
mov
and
and
shll
add
pusha
jg
js
fistps
xchg
fistl
daa
add
lret
aaa
push
cli
mov
mov
cmpl
in
adc
stos
add
sbb
mov
rolb
sub
xchg
xchg
clc
les
ds
sbb
lds
aaa
in
test
inc
xchg
lods
cli
sbb
loop
mov
jp
in
xor
jo
icebp
or
test
out
add
or
out
push
pop
lret
add
xchg
ficoml
cmc
cmp
push
loop
mov
rcll
aam
push
int
cmpsl
and
rolb
out
jle
mov
unpcklps
dec
loop
and
mov
and
ss
loop
test
inc
xor
jae
cmp
mov
ja
add
test
jecxz
inc
std
gs
or
cwtl
push
or
lcall
mov
mov
orl
jbe
jg
add
push
aas
lcall
push
imull
sbb
add
push
addb
mov
aad
outsl
and
xchg
mov
scas
inc
lss
pop
mov
pop
mov
stos
orl
push
pop
bound
popa
and
mov
jg,pn
pop
call
xor
xchg
adc
lret
stos
sub
test
std
inc
lahf
inc
out
mov
inc
xchg
lret
cli
repz
es
in
aad
shrl
dec
xchg
adc
mov
inc
jecxz
jge
fisubl
add
clc
mov
pop
cld
jg
lcall
outsl
call
and
mov
or
push
adc
jae
filds
cwtl
mov
mov
fisubs
sahf
add
in
xchg
jmp
loop
and
inc
arpl
mov
push
cs
dec
cmp
icebp
test
rcrb
mov
loop
jmp
cmp
jne
mov
ds
add
xor
insl
add
test
outsl
filds
sub
add
jmp
inc
icebp
xchg
out
fdivr
rorl
cld
inc
ret
add
mov
sbb
pop
or
mov
aad
aam
ret
mov
jmp
icebp
test
mov
add
push
mov
decl
cltd
sbb
icebp
orb
jl
repnz
push
stos
decl
sub
add
jmp
test
push
inc
add
adc
into
pusha
ljmp
push
scas
shrl
lods
test
push
scas
js
push
mov
sub
cli
insb
sub
push
adc
mov
roll
push
push
add
add
sbbb
add
add
mov
xor
inc
mov
lcall
andb
cwtl
and
addb
mov
and
jnp
fists
jne
outsb
and
jl
jno
mov
arpl
add
xor
aam
sub
subb
jnp
ss
jl
test
pop
adc
xchg
add
scas
loop
lock
mov
sub
cmp
mov
aas
xor
loope
lea
fisubrs
push
into
jo
xorb
shl
adc
add
jecxz
data16
ret
js
ja
subb
add
ds
xchg
mov
cmp
adc
jo
ret
dec
sbb
or
add
add
inc
jo
jae
mov
sub
xor
jp
loopne
movsl
jnp
push
inc
scas
dec
xor
js
inc
dec
sub
inc
inc
mov
shll
push
lods
call
lds
dec
push
cld
inc
add
sbb
sub
pop
out
sbbb
or
cmp
sbb
jo
and
popa
ret
clc
daa
mov
or
iret
hlt
pusha
mov
hlt
aam
mov
loopne
dec
or
dec
out
sbb
inc
and
into
shr
shl
loopne
add
test
fwait
movl
sub
pop
mov
shll
out
aas
add
mov
dec
mull
adc
aaa
pop
mov
test
test
shlb
dec
sbb
xor
clc
add
lods
faddl
inc
popf
jmp
scas
aam
dec
pusha
inc
cmp
popf
fcomps
adc
clc
cmpsl
loopne
or
pushl
icebp
addb
add
adc
push
add
push
mov
loopne
aas
cmp
cmp
jnp
mov
cmp
add
insb
ja
lock
daa
push
jno
outsb
push
addr16
pusha
imul
mov
je
test
jo
add
inc
les
pop
std
cmpsl
bnd
or
push
shlb
dec
adc
insw
insb
and
mov
dec
ds
lock
or
sub
xchg
push
sbb
add
fsubrl
jb
fadd
inc
add
pop
inc
and
mov
push
adc
das
fistps
mov
aas
add
add
andb
inc
add
adc
or
add
jnp
stos
dec
hlt
and
xor
inc
js
js
dec
jg
pop
cmp
test
dec
or
xorb
pop
hlt
lea
psubb
fst
pusha
jbe
notl
mov
lock
cmp
movsb
xchg
mov
les
dec
and
xor
jle
adc
add
shlb
fcoms
ret
in
cmp
loope
mov
jmp
mov
add
cwtl
out
filds
sub
jp
daa
jmp
mov
call
test
xchg
loop
mov
pop
inc
mov
aad
adc
addl
icebp
pop
outsb
loopne
loop
in
lret
push
outsl
and
std
sub
mov
jb
insb
pop
and
add
cmpsb
adc
mov
adc
stos
scas
push
mov
faddp
push
mov
and
jb
mov
lock
nop
pop
repnz
inc
loop
rcll
inc
or
out
push
xchg
sbb
or
clc
mov
xor
popf
inc
add
out
push
nop
dec
sbb
mov
xor
ljmp
daa
leave
nop
pop
pop
cltd
push
jle
test
inc
cmp
in
std
call
js
mov
enter
push
dec
fwait
out
punpcklbw
mov
push
out
pop
jl
xor
mov
je
rolb
dec
pop
mov
adcl
pop
cli
fwait
xor
dec
push
scas
xchg
lods
pop
test
ljmp
mov
in
popf
test
push
xor
add
jnp
in
rcll
shll
lods
iret
sub
lock
sti
sbb
nop
cs
outsl
je
dec
pusha
mov
in
or
js
pop
outsl
hlt
sbb
stos
pop
xor
lods
clc
dec
shlb
je
push
push
sub
jb
jbe
inc
mov
xchg
js
and
and
inc
pusha
jp
incl
daa
orl
fcmovne
xorl
and
ret
mov
push
in
mov
push
jecxz
pop
sub
jg
repz
into
push
xor
outsl
and
xchg
mov
dec
dec
mov
mov
nop
aaa
ds
push
stos
cld
mov
aaa
jl
cwtl
aas
lock
jecxz
shrl
adc
insb
dec
mov
push
nop
jg
incl
adc
jb
mov
pop
rcrb
adc
cmc
jg
shlb
jne
mov
dec
sub
lock
jecxz
cmpsl
add
call
pop
int
decl
cli
scas
les
fs
int3
and
sti
js
ljmp
push
and
or
nop
dec
xor
cmp
adcl
cmc
xchg
movsb
push
addr16
shlb
movlhps
adc
mov
sarl
data16
fadds
inc
push
outsl
lcall
loope
call
ljmp
enter
imul
jmp
decl
insb
lds
sub
mov
cld
cmp
mov
ret
or
mov
fwait
add
xchg
push
cmp
fldcw
jp
lods
ljmp
rclb
lcall
or
mov
cmp
mov
add
mov
mov
in
mov
sub
xor
jg
call
add
inc
ss
dec
pop
enter
lock
jle
loope
ret
xlat
lods
jcxz
add
xchg
cld
inc
xchg
cmpsl
and
outsl
stos
lcall
mov
int3
call
loopne
dec
movsl
inc
in
lcall
jmp
cwtl
sub
dec
das
fbld
lods
daa
add
outsb
add
inc
ljmp
push
adc
mov
insb
test
cmp
pop
mov
aam
clc
mov
and
add
and
movsb
mov
inc
sbb
pushf
mov
sub
out
fcomip
push
sub
sbb
cmc
or
and
xchg
rolb
js
push
mov
mov
jmp
cld
sbb
and
inc
sbb
add
ret
jnp
sub
mov
bound
mov
fdivrs
pop
inc
stos
mov
xchg
pop
inc
mov
mov
sub
xor
in
popa
inc
add
push
in
ror
jp
lock
test
in
das
insl
mov
adc
out
aaa
inc
or
push
ljmp
pop
mov
push
xchg
and
stos
les
pop
mov
lret
or
daa
shlb
push
sar
out
andb
xchg
loop
scas
repnz
mov
jb
test
outsb
fadd
mov
and
pushl
push
icebp
cltd
inc
sarb
cmpsb
mov
das
enter
cmpsb
jle
shlb
out
jae
cmp
cmpl
rcrl
mov
mov
fistpll
jecxz
outsl
dec
clc
leave
aaa
push
add
sahf
push
dec
ljmp
inc
push
in
lock
xchg
or
cli
ja
jns
lock
cmp
fdiv
and
mov
lret
mov
mov
outsl
andl
pop
xchg
cmp
mov
mov
mov
pop
in
mov
and
lods
or
das
mov
pop
push
ljmp
pusha
inc
and
clc
dec
divb
movsb
icebp
mov
inc
in
rcpps
cli
scas
jl
aad
pop
mov
cwtl
inc
js
cmp
sub
jl
ret
cmp
xchg
in
sub
or
dec
lods
ficompl
push
adc
js
xor
inc
push
pop
add
shll
and
dec
pop
mov
rclb
sti
movsb
lret
dec
cli
adc
into
xor
mov
stos
inc
outsb
push
mov
and
push
int3
icebp
cmp
xor
aam
out
push
add
not
adc
cld
mov
cmpsl
adc
mov
loop
es
xlat
incl
add
out
xchg
cli
outsl
dec
testb
dec
jl
push
aad
daa
imul
std
rorb
cmpsb
and
loope
shrl
push
cli
xchg
mov
test
sbb
mov
leave
inc
arpl
stos
shrl
cld
pop
jbe
inc
mov
add
data16
packssdw
popa
scas
hlt
out
roll
imul
testb
jp
mov
mov
fcoms
and
div
push
jg
xchg
insl
or
fcmovnbe
loop
or
cli
add
adc
popf
decb
les
or
mov
mov
dec
push
mov
push
jl
movsl
fdivr
inc
loop
daa
jb
adc
lods
xor
pop
aad
cmpsb
dec
divl
sbb
rclb
aaa
mov
call
push
cmpsb
outsl
pop
clc
lcall
jae
subb
push
fsubp
fdivrs
and
bound
cs
pushf
adc
jg
mov
test
stos
std
jle
lds
nop
adc
addr16
test
stos
daa
jbe
sbb
sbb
outsl
repz
adc
aam
sbb
cmc
xchg
or
pop
add
cmp
push
popa
mov
push
sub
int3
lea
sbb
sub
jb
cmc
rcrb
cmp
sahf
add
cmp
pushf
arpl
push
mov
mov
sti
fsubs
les
sbb
mov
xlat
or
pop
or
inc
add
add
xor
outsl
fnstsw
xchg
dec
and
imul
mov
adc
mov
inc
sbb
jmp
or
or
adc
lcall
push
push
les
mov
mov
xchg
mov
push
cli
repnz
js
pop
iret
fiadds
outsb
mov
pop
mov
cwtl
cmp
or
inc
mov
and
mov
adc
stc
cmp
adc
mov
mov
dec
mov
aam
dec
mov
aas
cmp
out
mov
divl
cmc
imulb
jmp
xor
lods
shl
jne
dec
sub
or
loope
adcb
and
or
neg
dec
or
xlat
xor
inc
cld
jg
jmp
sub
test
in
sbb
test
xchg
ret
push
lods
les
imul
push
jmp
adc
jl
cmpsb
ret
pop
push
lret
lock
mov
std
aam
or
pop
cli
sbb
jg
jno
shlb
mov
push
pop
jp
push
lcall
rorl
add
paddw
and
int3
pop
mov
fwait
inc
mov
pop
inc
js
pop
dec
mov
outsl
cmp
mov
add
cs
mov
and
das
ret
adc
fisubrl
add
and
jmp
mov
loop
ja,pn
fisubrs
inc
inc
push
sbbb
enter
add
in
xchg
mov
and
xor
jns
je
ljmp
addr16
jmp
jge
popa
and
and
cld
in
adc
mov
sbb
dec
pop
daa
add
mov
sbb
cmp
lea
pop
imul
push
mov
inc
clc
aam
inc
nop
mov
cmp
adcb
das
jo
addb
inc
add
fdivrs
xchg
pop
pop
or
test
js
in
pop
les
sar
lds
sar
addr16
cs
xlat
out
in
lods
or
loop
scas
jbe
cmp
outsl
jmp
cld
mov
daa
test
sub
arpl
mov
cmp
sbb
ds
pop
jp
mov
jae
movsb
scas
subb
clc
sahf
add
je
or
jo
mov
jbe
loope
push
mov
scas
or
xchg
push
jecxz
mov
mov
ffree
pushl
aam
inc
inc
xchg
cltd
mov
decl
pop
and
lret
in
add
sbb
insl
fnstsw
in
into
dec
xor
aas
fst
xchg
fwait
sub
nop
ja
lods
call
jno
test
jmp
pop
push
gs
iret
or
xchg
and
xor
andb
inc
lcall
xchg
cli
jp
and
sbb
mov
loope
and
rcll
mov
xchg
mov
mov
or
xchg
leave
out
mov
fiadds
inc
loope
stc
mov
imul
pop
ret
cmp
dec
sbb
mov
dec
mov
add
mov
fucomi
addr16
daa
loop
inc
scas
cmp
mov
sub
cmp
int3
adc
push
or
and
jmp
das
std
lods
adc
add
out
pop
cwtl
sbb
pop
cld
or
pop
loope
pop
push
mov
movsl
outsb
pop
cmpsb
int3
fldl
nop
fwait
imul
pusha
ja
pop
lret
mov
pop
loopne
adc
rcll
sahf
fdivl
jp
fadd
call
addl
push
dec
mov
bound
sbb
fstps
cmpl
ja
push
cmp
mov
movsb
fsts
daa
scas
stos
daa
sub
cwtl
outsb
mov
ret
jmp
cmc
add
pop
fsubp
in
jecxz
lods
xchg
sub
and
fistpll
mulb
cmpsb
pop
loope
stos
movups
or
rcrb
mov
and
pop
and
adc
push
push
sbb
adc
mov
loope
pop
outsb
cmp
insb
cld
sub
cwtl
push
jp
jmp
iret
out
push
adc
cld
gs
xchg
bound
mov
sub
lds
fdivs
sbb
ja
inc
loop
lods
inc
inc
push
and
jp
sub
inc
ficoms
dec
ret
adcb
jle
sub
lahf
xchg
pushf
popf
mov
das
ds
shrl
mov
push
xor
pop
mov
dec
fmull
sbb
int
sub
push
scas
jg
loope
fdivr
xchg
push
mov
xor
xchg
loopne
test
dec
or
jmp
sbb
fnsave
aad
and
mov
xor
add
outsb
xor
push
je
dec
push
pop
out
push
les
cmp
mov
js
lods
incb
shr
aas
and
sbb
in
cmpsb
sub
cmpsb
test
lea
xor
mov
inc
std
xor
adc
add
movsl
rorb
sbb
pop
clc
lods
mov
loop
mov
int3
xor
sbb
add
mov
test
xchg
in
add
popf
fldenv
test
or
imul
or
sbb
add
sub
shrl
mov
pop
mov
mov
push
call
aam
repz
shrb
push
bound
cmpsb
and
clc
test
icebp
dec
mov
rol
ficoms
loop
mov
insl
loope
arpl
or
adc
js
aaa
cs
mov
add
nop
out
mov
pop
pop
mov
dec
shlb
or
inc
inc
jg
movsl
cmpsb
push
movsb
gs
jmp
lea
push
ds
sub
add
dec
mov
or
xchg
aas
and
adc
outsl
push
push
mov
outsl
add
fidivs
pop
dec
xchg
push
jnp
repz
pop
je
in
fucomi
or
sbb
pop
push
lock
xchg
mov
push
data16
jmp
mov
xor
adc
cmp
aaa
fadd
test
mov
repz
or
std
fwait
outsb
pusha
stc
sbb
test
test
outsl
jge
xchg
jnp
push
mov
stc
adc
and
cmpsb
and
aas
mov
ss
mov
roll
xchg
mov
cmp
pcmpeqw
pop
sbb
sub
or
jl
mov
decl
sub
rolb
sbb
and
enter
adc
add
int3
into
loopne
or
daa
imul
imul
les
dec
movsl
dec
clc
lods
jmp
sbb
sbb
push
push
sbb
xchg
ja
decl
inc
lahf
xchg
movsl
out
test
jnp
repnz
xor
rcr
loope
outsb
call
fadds
andl
mov
push
mov
sub
cmp
or
push
movsb
and
outsl
loopne
mov
add
sub
cmp
imul
push
popa
mov
loope
clc
push
jle
xor
out
pop
jnp
outsl
push
fnstsw
aaa
add
divb
repz
push
mov
or
popf
cmp
push
daa
leave
mov
mov
mov
inc
sbb
and
addb
sub
dec
sbb
in
dec
adc
push
mov
das
std
sub
inc
popa
adc
movsb
add
cli
fs
inc
and
sbb
call
sub
pop
push
mov
push
outsb
pop
test
push
mov
ljmp
imul
xchg
adc
mov
pop
mov
xor
imul
sub
sub
mov
jge
fadds
jnp
fnstsw
add
pop
or
mov
mov
je
jl
sub
mov
inc
or
xchg
jp
push
or
xor
add
or
xor
pop
loopne
repz
shrb
jmp
sub
mov
daa
xchg
call
pop
es
mov
cwtl
cmp
or
mov
in
loop
mov
inc
lods
or
sbb
lock
shlb
xlat
ja
jbe
dec
call
dec
jge
scas
test
or
jae
ret
lahf
in
add
adc
pop
enter
loopne
in
outsl
pop
lds
xor
mov
rolb
push
in
lods
out
pop
call
mov
cs
jmp
mov
out
and
movq
andb
loop
sbb
push
cs
cli
pushf
adc
out
mov
add
xor
lea
xor
sbbb
xchg
pop
shr
loope
add
sub
inc
mov
jbe
jmp
or
sub
xchg
adc
aam
loopne
add
cli
outsl
insb
mov
pop
out
xchg
popf
xchg
in
adc
out
fcmove
pop
jmp
add
sbb
pop
in
cmpsl
stc
lahf
insb
and
jnp
pushf
push
cld
cs
push
mov
fistpll
xchg
push
int
xor
leave
xchg
jp
in
test
or
cmp
dec
jne
pop
stos
pop
jmp
pop
sbb
clc
inc
mov
fs
pop
stos
pushf
jo
stos
or
mov
sbb
iret
sbb
dec
adc
dec
pop
enter
push
lock
out
test
clc
decl
movsl
cs
cmp
sbb
pop
in
mov
fcompl
pop
cmp
sahf
inc
pushf
cmp
pop
cmc
inc
dec
mov
xchg
cli
aaa
sub
mov
adc
cmp
cli
ljmp
insb
sbb
lds
call
fcompl
ljmp
test
push
push
fnstsw
adc
add
rcrb
jp
sbb
or
sub
jns
inc
icebp
push
mov
adc
icebp
jb
sbb
mov
sub
xor
inc
inc
cmc
fadds
mov
adc
cltd
lock
popl
idivl
fidivrl
pop
cmp
sbb
inc
jns
push
stos
scas
ret
test
xor
leave
sub
inc
sub
loopne
in
mov
adc
movsl
fiaddl
adc
rolb
xchg
cwtl
popf
adc
mov
adc
enter
pop
pop
subl
mov
sub
and
xchg
fdiv
sub
mov
es
pop
in
jbe
inc
inc
arpl
mov
cli
shrb
sbb
add
call
dec
movsl
clc
sbb
jae
sti
test
das
sahf
movsb
mov
stc
leave
je
ret
jg
mov
cli
pushl
lahf
xchg
fcmovnb
jecxz
adc
inc
xchg
adc
addb
xorl
adc
mov
std
mov
dec
xor
mov
and
loopne
ret
cld
mov
fists
or
xchg
jne
cld
loopne
sbbb
rolb
std
pushl
fwait
sar
and
jge
arpl
xor
stos
push
fsubl
jge
push
sbb
jl
js
push
sub
adc
adc
out
lock
fstl
xchg
stc
push
pop
jecxz
or
fdivrp
mov
jnp
mov
xor
pop
sar
sbb
jp
gs
loope
jp
mov
pop
xor
push
dec
xlat
sbb
dec
fdivr
mov
ret
decl
push
shrl
mov
adc
pusha
bound
shlb
or
scas
and
dec
mov
fs
data16
lcall
cmpb
jg
fists
sub
and
stc
outsb
xor
in
sbb
cmp
push
add
das
push
loopne
leave
mov
out
not
inc
inc
cmc
sbb
push
xchg
js
mov
xor
out
clc
dec
cmp
add
cmp
fdivrs
xor
dec
mov
das
std
out
pusha
push
nop
and
xlat
pop
inc
hlt
pop
mov
and
cmc
jbe
jl
jmp
in
ret
ds
test
jg
stos
into
dec
int3
out
movsl
and
sbb
pop
jp
jo
adc
xor
mov
subb
cmpl
jg
fists
or
inc
je
xor
test
clc
sub
das
je
stos
push
push
lahf
adc
cmp
imul
and
es
or
cwtl
push
dec
cli
sti
add
filds
pop
mov
decb
or
jecxz
sbb
adc
push
push
idivb
cmp
ds
cmp
or
pop
cld
mov
xor
mov
ja
sub
xor
in
ljmp
push
dec
js
add
sub
shll
sti
push
sahf
decl
push
or
fldenv
push
sbb
inc
inc
inc
pop
aam
shlb
mov
sub
and
inc
arpl
add
pop
andl
add
adc
scas
lock
out
or
bound
xchg
push
lea
cli
add
fcomps
fiadds
mov
testl
scas
inc
hlt
sbb
dec
mov
mov
sbb
add
addb
cli
insb
sahf
xchg
sub
jb
mov
sarl
lahf
xor
cltd
mov
faddl
pop
fdivs
and
aad
pop
in
or
in
inc
mov
xchg
fsubl
stos
sub
cli
xor
es
rolb
mov
arpl
in
mov
xor
inc
mov
test
or
sbb
xchg
mov
aam
mov
pop
cmp
mov
xchg
pushf
pop
je
add
ret
test
push
shl
jmp
dec
adc
push
dec
add
scas
jp
fdivrl
jmp
aam
sub
stc
icebp
inc
out
filds
loopne
lock
add
test
pop
hlt
adcb
add
xor
and
add
subb
sub
inc
rcll
add
inc
xchg
push
stos
or
popa
in
rol
push
lock
inc
push
ret
mov
bound
xchg
adc
clc
in
push
jb
jmp
adc
or
cwtl
add
push
fstpt
jb
addr16
hlt
mov
xor
cmp
xchg
adc
and
cmp
push
and
and
add
mov
pop
cld
push
inc
xchg
aam
mov
test
add
std
fadds
jl
cltd
or
mov
adc
aaa
cmp
test
dec
mov
xor
inc
sub
dec
test
add
mov
push
adc
mov
pop
xchg
add
mov
adc
pusha
cmp
pop
scas
push
ret
inc
jae
cmpsl
mov
adc
jnp
inc
and
je
sub
add
and
imul
pop
rclb
and
push
adc
rorl
rclw
addb
xor
pop
add
lahf
std
pop
dec
add
cmp
je
and
jge
and
shrl
xor
add
xor
adc
int3
and
data16
movsl
cld
or
incl
dec
loopne
inc
and
fs
jb
arpl
or
adcb
push
sub
jmp
cmp
xchg
and
sbb
mov
test
sub
mov
sub
sbb
into
or
jle
mov
and
loope
lcall
mov
inc
mov
mov
les
inc
or
adc
jl
push
fs
mov
inc
xor
jge
cmpsb
push
jne
fisubrl
push
addl
adc
out
adc
clc
dec
lods
mov
imul
cmpsb
mov
in
outsl
scas
es
jmp
or
sbb
test
and
xchg
sub
sarl
add
jno
mov
push
movsl
int3
mov
sbb
into
mov
mov
dec
sub
cmp
fstpl
dec
or
notb
jg
xor
into
add
scas
repnz
mov
mov
ret
and
nop
ds
sbb
inc
addr16
shrb
inc
jl
test
mov
cmc
add
push
call
pusha
int3
jo
rol
inc
mov
mov
jg
xchg
and
in
pop
lahf
pop
imul
ljmp
inc
push
cmp
fistl
popa
lods
scas
or
sbb
ficompl
dec
ret
push
cwtl
sbb
mov
push
std
add
je
and
mov
xlat
cmpsb
out
add
mov
mov
push
mov
jno
adcb
call
loop
cmp
fs
inc
fldl
daa
movsl
loopne
mov
roll
pop
imulb
inc
fldl
jl
icebp
dec
and
sub
or
or
loope
sub
mov
ret
cmpsb
jnp
push
mov
inc
int3
enter
jno
mov
fistpll
xchg
dec
nop
dec
mov
xchg
mov
std
adc
sti
in
std
js
mov
cld
cmp
xchg
push
pop
loop
shlb
test
outsl
sbb
adc
loop
popa
test
mov
mov
and
mov
push
test
xor
inc
mov
sub
pop
addb
push
and
js
add
lahf
inc
mov
fwait
jle
mov
test
sbb
mov
imul
mov
fwait
and
call
outsb
pop
in
push
in
pusha
jle
pop
mov
or
pop
or
inc
dec
dec
cmpsb
pop
mov
roll
test
mov
sbb
adc
dec
sub
inc
jmp
push
sar
inc
pop
or
insb
btc
ja
aad
das
sarl
mov
inc
inc
rolb
jo
xor
stos
cmp
cmc
in
xor
add
xor
mov
adc
push
mov
addr16
scas
mov
jmp
test
xchg
sub
out
call
add
xchg
orl
or
mov
repnz
push
or
push
scas
push
leave
and
inc
add
dec
cmpsl
lahf
fsubrs
dec
and
mov
lret
cwtl
imul
jne
or
pop
ficomps
repz
jo
inc
add
into
jp
insl
inc
push
sbb
jae
mov
in
clc
jle
dec
sub
and
add
clc
or
mov
sar
js
pop
pop
ljmp
dec
inc
and
decb
cmc
sub
or
or
push
mov
mov
gs
cmc
pmullw
loopne
.byte
decl
add
xlat
mov
outsb
xchg
and
loopne
insb
icebp
bound
iret
inc
adc
inc
int3
jb
call
scas
lcall
shl
and
scas
mov
ljmp
pop
loopne
leave
mov
lcall
sbb
pop
sub
cli
popa
rcl
sbb
dec
jge
jg
jns
mov
popa
jge
push
jl
in
test
inc
dec
out
adc
cmp
cmc
cli
test
pop
mov
lods
call
out
test
adc
jb
adc
in
scas
fcoms
or
insl
call
popf
inc
stos
bnd
iret
and
pop
sbb
inc
xchg
sbb
fsubs
or
call
pop
insb
je
xchg
and
pop
sbb
hlt
pop
push
ds
cmp
pop
inc
inc
mov
adc
loope
lcall
sub
stos
fidivrs
mov
outsl
cli
mov
movsl
test
in
dec
lock
clc
jecxz
ljmp
loopne
ss
fwait
and
xchg
les
in
or
push
pop
xor
outsl
aam
je
adc
xor
ljmp
push
or
int3
jo
mov
add
inc
decb
sbb
inc
mov
mov
jne
xchg
xchg
repz
xchg
mov
mov
pop
outsl
pop
lret
call
ljmp
repz
insb
pop
xchg
shrb
cmp
push
dec
pop
push
jmp
subb
mov
scas
pop
fidivl
cltd
leave
and
loope
jg
scas
outsl
xor
sub
int
mov
fidivs
lret
jo
movsb
fwait
xchg
stos
test
test
fnclex
adc
jno,pt
fidivs
es
scas
and
hlt
jl
mov
mov
mov
clc
xor
xor
das
sti
cmp
aam
push
add
sub
pop
xchg
pop
and
fidivrl
mov
filds
dec
or
ja
mov
dec
dec
or
cs
jo
mov
aas
add
mov
inc
push
cs
add
push
insl
das
push
decl
push
add
pop
fisubl
adc
lret
mov
daa
andb
in
decl
dec
insb
clc
imul
mov
mov
jnp
ret
lret
in
and
movsb
sub
push
cmpsb
repnz
add
xchg
mov
jge
xlat
dec
je
testl
pusha
clc
and
sub
pusha
pop
ret
fmulp
in
scas
dec
mov
call
jmp
roll
cli
arpl
cmp
or
repnz
incl
shrb
push
add
dec
mov
inc
adc
cmp
xchg
lds
jae
inc
test
mov
arpl
inc
enter
sti
popf
cs
mov
and
dec
lret
sti
lcall
xchg
std
fwait
addb
shl
or
adc
addl
sub
repz
das
cld
jmp
in
sub
jbe
stc
mov
scas
scas
cltd
xchg
dec
mov
fdivl
dec
in
in
std
dec
inc
cmpsb
sbb
jno
clc
movsb
insl
enter
jmp
cmp
imulb
popf
scas
cmpsl
pop
adc
push
ret
in
test
or
jmp
aas
xor
jmp
lds
xor
inc
rcrb
nop
js
aad
clc
inc
pusha
cmp
stc
push
add
ljmp
std
xor
sub
or
dec
rcl
pop
mov
dec
jns
fistps
insl
icebp
pop
rcrb
dec
mov
push
rcrl
mov
test
ljmp
das
add
jae
scas
push
adc
mov
leave
push
push
adc
cmpsb
xchg
cmp
mov
mov
scas
push
pop
fcmovu
jno
in
sbb
or
xchg
cmpsl
mov
mov
ljmp
sub
inc
cmp
mov
loope
jecxz
and
call
push
das
pop
sbb
js
sub
or
adc
sbbl
outsl
lods
lret
cmp
xlat
rorl
test
push
out
imul
repz
flds
add
sti
call
or
sbb
add
add
decl
dec
xor
ss
jp
mov
mov
jbe
addb
add
cmp
or
jl
jmp
mov
jb
pop
push
add
add
adc
outsl
call
add
je
cli
add
cs
or
psadbw
in
xchg
insb
and
mov
fldl
inc
add
nop
clc
jg
pop
dec
dec
nop
jb
push
jmp
lea
jne
dec
add
sbbb
test
mov
jbe
popf
xorl
leave
dec
mov
idiv
dec
cld
jnp
add
enter
pop
dec
inc
cmp
or
int3
jmp
dec
sub
add
xor
add
frstor
xchg
les
sbb
int3
or
cmpsb
adc
add
popf
add
pop
xchg
loopne
mov
call
mov
sbb
and
stc
cs
cld
add
xor
cmp
jmp
ljmp
cltd
add
sahf
xlat
jle
and
push
dec
add
rcrb
push
xlat
add
sbb
push
sbb
loope
ja
insb
cmp
cltd
mov
in
test
mov
add
movsb
add
cmp
mov
rorl
add
and
lods
insb
rcll
add
test
lds
outsl
pushl
add
in
cmp
in
psubq
sti
mov
jmp
lret
or
push
xor
push
jl
xor
jg
push
push
push
xor
sub
repnz
mov
and
and
stos
lock
out
mov
incl
mov
cmp
jne
xor
inc
jmp
add
ret
push
mov
add
jo
ja
pushf
pusha
mov
fimuls
and
hlt
inc
sbb
add
sbb
mov
idivl
sub
inc
push
decl
idivl
out
into
outsb
or
dec
and
testl
in
and
inc
jne
push
jmp
or
cld
add
adc
add
lahf
movsl
sti
fimull
adc
xor
and
out
into
mov
xorl
mov
out
fstpt
adc
mov
pop
cld
push
dec
or
mov
adc
or
fildll
aad
jnp
dec
sarl
cmp
or
adc
add
fdivs
ret
mov
neg
xchg
out
pusha
lcall
inc
enter
or
mov
push
imul
dec
hlt
inc
arpl
inc
call
in
inc
adc
dec
icebp
dec
int
test
outsl
adc
sbb
outsb
cmp
cs
mov
mov
inc
sub
adc
test
adc
fstpl
mov
jg,pt
push
and
sbb
in
jg
movl
out
xchg
add
lock
add
xorb
leave
mov
popf
imulb
mov
and
jmp
or
sub
mov
cmp
and
sti
in
sub
adc
pop
adc
adc
rcrb
fistpl
aam
fbld
dec
push
push
mov
aam
adc
mov
lods
push
adc
lods
sub
arpl
cli
dec
lock
inc
xor
inc
adc
daa
sbb
mov
xor
xchg
fidivl
inc
xchg
mov
sub
in
sbb
mov
push
fwait
add
fstpl
jecxz
jmp
jmp
adc
pop
outsl
sbb
xor
xor
mov
cs
clc
scas
jl
out
pop
sbb
dec
fcoms
aad
pop
add
pop
mov
and
movsb
fcmovnu
mov
add
mov
cmp
mov
jecxz
adc
fbstp
xchg
scas
add
jnp
add
mov
shlb
add
das
cmp
and
hlt
pop
outsl
loop
ds
pop
gs
mov
push
es
lcall
or
adc
mov
je
sahf
adc
lods
adc
sbbl
pop
add
ret
mov
fs
mov
sbb
adc
push
jl
jmp
lock
xchg
or
cmc
arpl
cmp
inc
clc
outsl
mov
adc
addb
fcmovnu
sub
mov
lods
popf
adc
pop
mov
int3
aaa
js
xchg
add
add
add
lock
mov
inc
test
jecxz
sub
das
mov
shl
pushf
add
std
dec
push
les
mov
mov
and
mov
mov
clc
mov
add
fsubrs
pop
testb
dec
jns
mov
clc
dec
pop
loopne
sbb
xor
das
lock
push
xor
daa
outsl
repz
sar
adcb
sub
aam
enter
std
add
outsl
out
fildl
xchg
jns
mov
lods
adc
mov
add
pushl
aad
jmp
lods
xor
add
rcrl
pushl
xchg
jle
ret
add
mov
loopne
mov
xchg
push
pop
sub
push
inc
ja
insb
push
push
lea
xchg
js
mov
sarl
xor
ja
outsl
mov
popa
add
enter
sub
xor
inc
jae
mov
xor
pcmpgtb
and
stc
mov
dec
or
xor
sub
cmp
inc
add
and
lods
lods
adc
ljmp
insl
lock
lock
mov
push
cli
xor
stc
and
pop
pop
pop
or
sub
rcll
pop
mov
xor
xchg
sarb
cmc
dec
mov
in
push
and
dec
das
jae
fmuls
jle
mov
call
fsubrs
cltd
lods
sbb
insl
sub
cli
pop
mov
lods
dec
jp
daa
pushf
fsubs
cltd
mov
mov
dec
lea
loopne
popa
cli
clc
movsl
mov
xlat
adc
fcmovne
xchg
mov
pop
jge
out
and
or
dec
fbld
ds
neg
cmp
ja
shrb
fdivl
jo
test
out
adc
in
sbb
fcoml
dec
add
cs
cmp
xchg
scas
jbe
mov
add
add
mov
xchg
outsl
jmp
jge
neg
xchg
addb
jmp
push
push
call
addl
push
pop
xor
sbb
xchg
cli
lahf
cld
mov
mov
insl
mov
or
push
mov
push
add
adc
mov
mov
and
jmp
mov
out
add
rcrl
pop
pop
inc
pop
dec
outsl
pop
xchg
shl
xchg
imul
ficomps
ret
and
loopne
add
daa
std
fsubrl
rcr
push
popa
jae
fsubrl
pop
push
sub
clc
adcl
and
out
pop
icebp
add
and
cmp
jle
adc
repz
jbe
ds
loopne
rorb
jmp
flds
mov
stos
mov
mov
sbb
fdivr
fs
or
or
adc
pushf
mov
fmuls
addr16
add
sub
int
aaa
jmp
stc
insl
mov
inc
in
hlt
sbb
mov
fdivrl
xchg
fsubrs
enter
loope
loopne
push
loope
xlat
jb
ja
jnp
lods
or
add
fimull
and
dec
rcl
mov
addb
and
lods
cmp
in
ds
scas
add
xchg
push
mov
push
cmp
addr16
aas
pop
and
sub
mov
inc
lock
aaa
mov
sarl
push
fcomps
movsb
rol
xor
inc
jo
movsl
push
or
cld
inc
loopne
lret
push
loopne
into
mov
cli
pop
loop
in
flds
fisubrs
cld
outsb
mov
push
or
filds
call
cmp
add
xchg
mov
shrl
test
sbb
jecxz
mov
push
dec
mov
fnsave
inc
inc
inc
xor
or
push
xorb
adc
cltd
pop
push
or
sbb
add
xor
and
sti
arpl
imul
sbb
ljmp
in
inc
pop
lret
out
add
or
pop
adc
push
in
icebp
jbe
hlt
inc
add
cmp
mulb
xchg
insl
rclb
jns
adc
scas
jge
xor
push
aaa
aaa
mov
imull
pop
or
ds
fistl
mov
imul
fldt
inc
and
adc
popf
stos
pop
cmp
or
dec
pop
loop
pop
test
ss
and
push
mov
pop
mov
or
in
cld
in
lods
cs
sub
inc
sbb
aad
sbb
adc
das
sub
insb
das
xor
jno
xor
lret
jnp
lods
sbb
outsb
sti
test
aad
adc
adc
add
jo
sbb
jne
mov
pop
adc
and
mul
push
jmp
nop
push
sub
outsl
das
jno
or
neg
cli
in
pop
es
test
dec
ret
pop
clc
cmp
adc
xor
call
adc
ror
cmp
enter
mov
rcrl
mov
mov
mov
xchg
jo
mov
add
fldenv
ret
xor
or
fcoms
mov
popa
mov
decl
and
ds
and
inc
test
stc
movsl
jo
xchg
outsb
cmc
test
scas
ljmp
std
xchg
ss
push
pop
jns
pusha
pop
jl
cmp
mov
fsubr
mov
dec
and
mov
xchg
pop
mov
cltd
outsl
mov
xor
xchg
mov
dec
and
jno
ds
insb
mov
inc
inc
mov
cmpsb
addl
or
and
inc
sub
mov
push
push
in
ret
sbbb
push
in
out
pandn
add
inc
ja
push
push
cmp
sarb
out
push
jl
or
in
xchg
sbb
clc
ficomps
rolb
mov
shl
push
and
add
push
adc
call
std
push
pop
pop
sub
loope
insb
pushl
lods
push
pop
rorl
xchg
adc
mov
xchg
ds
mov
fmull
fcmovnu
punpcklbw
fisttpl
mov
pop
xchg
mov
xchg
jge
mov
fstpt
out
inc
loop
sbb
mov
mov
mov
jae
mov
jno
pop
rolb
sub
mov
jl
cld
pushl
or
cmpsb
movsb
in
loope
or
loope
xor
hlt
cmp
adc
cmp
mov
add
clc
pop
fisubrs
and
repz
pop
cmp
xorb
aaa
fcompl
push
add
push
loopne
jecxz
out
lock
lcall
call
xchg
xor
inc
sub
in
pop
mov
cmc
jbe
add
mov
cmp
pop
add
ja
sbb
dec
or
aaa
cli
add
loope
push
lods
add
insb
aaa
push
fwait
add
nop
cmp
cmp
fadds
sub
pop
push
in
jne
or
data16
or
and
xor
jno
test
sbb
or
adc
sbb
aad
inc
inc
or
mov
mov
pop
fnstsw
add
mov
lea
pop
mov
out
aaa
movsl
pusha
incl
inc
sbb
and
inc
pop
pop
mov
loopne
add
mov
add
sahf
mov
sbb
sbb
call
out
je
sbb
push
mov
ja
cli
jp
shld
scas
xor
cmp
pop
inc
out
fdivrp
movsl
xchg
sarl
movsl
or
xchg
daa
dec
push
cs
inc
xor
or
testb
outsb
cmc
add
leave
int3
je
test
shlb
adc
adc
insb
fucomip
lea
cwtl
adc
jb
fidivl
ret
mov
or
hlt
sti
pop
decb
mov
adc
xchg
xchg
sub
sbb
sbb
push
data16
fdivr
or
push
adc
lods
arpl
lock
mov
mov
fldenv
xchg
cmpsl
add
push
js
mov
movsl
je
pop
inc
call
pop
mov
fidivrl
adc
pop
xchg
pop
and
push
fldl
repz
mov
loopne
int
xor
aas
int
imul
pop
jmp
or
fildll
bound
xchg
or
mov
push
cmovne
mov
hlt
filds
sbb
cmc
and
jne
xor
pop
out
adc
stos
add
outsl
adc
xor
sub
repz
call
scas
jnp
jb
mov
js
jecxz
push
mov
xor
sub
ret
add
fildll
push
bound
lds
pusha
pushf
inc
and
pop
fsubs
lods
mov
mov
mov
les
mov
lahf
and
popf
hlt
sahf
sbb
jnp
sti
pop
jmp
fdivl
mov
jmp
inc
jp
mov
push
adc
xor
xor
mov
addb
aam
pop
ds
lcall
movsb
mov
or
repz
hlt
test
enter
and
outsb
mov
fldt
data16
and
jno
and
sahf
in
das
cld
lret
testl
mov
dec
enter
aas
mov
pop
mov
add
cli
mov
cli
loope
mov
clc
movsb
lea
xor
mov
pmaddwd
cmp
mov
pop
mov
mov
sbb
lods
sub
mov
lcall
sub
decl
ret
and
fstpt
add
jmp
xor
pop
mov
add
add
sbb
lods
mov
js
lea
negl
push
xchg
idivb
fucomip
sbb
or
aad
pop
jbe
push
sbb
xchg
aas
std
ljmp
jo
subb
xchg
dec
and
clc
push
fistl
jns
cmp
inc
jg
nop
mov
sub
mov
sbb
out
push
mov
stos
jle
out
addb
jle
insb
call
mov
stc
enter
decl
fwait
pop
jnp
xchg
mov
rep
lds
pop
not
lock
xchg
mov
push
mov
xorl
mov
and
mov
xorb
test
or
lods
cmc
sti
clc
fstl
call
xchg
inc
jne
mov
fucom
loopne
loop
inc
daa
jp
addl
cli
push
cs
pop
dec
mov
xchg
aas
insb
cmp
es
jmp
and
aaa
dec
aaa
lock
inc
sub
add
add
inc
pusha
jge
pop
pop
sar
sbb
dec
out
cmc
rorb
or
sub
mov
cmc
pop
push
daa
dec
fsubrs
mov
push
xchg
test
mov
divl
or
testb
stos
xchg
jbe
outsl
inc
adc
cmp
pushf
add
push
daa
ret
cmp
xlat
mov
mov
stos
idiv
push
or
loop
std
aaa
in
int
jl
jno
xchg
aad
or
mov
test
push
or
add
add
mov
fcmovnbe
jmp
in
inc
lahf
dec
xchg
cmp
adc
mov
xchg
inc
xchg
scas
push
movsl
inc
lea
loope
fcmovb
and
dec
inc
pop
sbb
dec
xchg
imul
mov
sbb
inc
push
movl
lock
push
fnstsw
mov
sbb
adc
dec
jne
adc
jno
clc
ret
sbb
aaa
inc
sub
sahf
xor
lea
fiadds
mov
sahf
das
rclb
pop
xchg
cmp
lods
mov
fs
into
mov
je
or
xchg
loopne
add
dec
xchg
lcall
jo
rorb
jge
sbb
xor
fadd
std
and
sub
xchg
inc
imul
xor
pop
dec
or
and
mov
aas
scas
pop
xor
out
in
mov
fidivrs
adc
sbb
dec
push
orb
xchg
sub
dec
std
fadds
neg
and
and
or
int
cld
dec
push
test
in
shl
mov
es
mov
adc
ror
fisubs
inc
pop
imull
mov
jae
bound
fsubrs
fcompl
inc
aad
or
add
or
lods
in
inc
mov
push
jg
lods
and
pop
xchg
int
jmp
mov
push
add
lods
jle
pop
inc
data16
push
add
adc
faddl
sahf
cli
testb
test
addb
icebp
lods
aam
out
adc
sbb
addb
call
loope
in
push
xchg
sahf
in
push
data16
mov
sub
inc
mov
mov
pop
dec
and
enter
arpl
pop
clc
out
mov
sub
out
mov
hlt
shrb
pop
movl
add
mov
out
icebp
ljmp
or
add
std
or
xor
inc
loopne
add
push
push
imul
add
fcomps
cs
shrb
fadd
or
add
data16
sbb
xor
cmpsb
xor
pop
jns
xor
inc
mov
in
or
clc
lods
cmp
and
jl
mov
or
aad
mov
fidivrl
icebp
cli
adc
dec
add
adc
mov
pop
sub
add
add
in
fildll
pusha
mov
leave
xor
es
push
sub
aad
leave
test
loop
or
and
jmp
mov
iret
jbe
test
adc
or
inc
cltd
out
call
aaa
add
sub
mov
insl
jge
xor
popa
aas
or
jmp
or
xchg
or
adc
and
mov
cwtl
incb
pop
push
sbb
loope
add
sub
or
aad
jo
outsl
jno
add
jle
ss
bound
jle
mov
mov
rcl
lods
shrl
das
adc
jl
test
sub
je
or
sub
shrb
aam
xchg
movsb
mov
std
add
into
sti
imul
call
add
lock
mov
jge
lcall
xor
aad
pop
push
push
icebp
or
lock
mov
pop
cld
mov
stos
jno
sbb
or
stos
shll
mov
lret
ret
outsl
mov
ficoms
adc
pop
lock
pop
inc
xchg
adc
insb
fucomip
lret
bound
js
adc
addr16
mov
mov
cmp
cld
or
test
nop
addr16
daa
dec
fdivrl
push
stos
push
push
xchg
jbe
xchg
push
loopne
push
ljmp
repz
scas
fwait
in
inc
test
push
movsl
dec
shll
inc
fistpll
xor
inc
les
and
loopne
jnp
fildll
inc
pop
xor
lahf
test
sbb
imul
and
sbb
cli
mov
xor
lock
popf
jg
out
sbb
les
ja
jecxz
scas
add
cmp
xchg
add
scas
je
bound
fsubrl
cmp
sub
and
pop
mov
je
arpl
pop
repz
ret
push
lret
adc
xor
lock
push
jae
pop
add
clc
lcall
lahf
adc
or
call
lods
mov
shr
dec
push
nop
dec
add
jno
pop
std
jg
sarb
popa
push
dec
jo
or
inc
mov
jmp
inc
pop
mov
push
sbb
outsl
and
jmp
inc
mov
push
or
pusha
ss
arpl
andb
fs
or
or
mov
rolb
mov
sub
mov
mov
in
das
add
pop
into
outsb
adc
pop
clc
dec
cmpsb
pop
adc
mov
bnd
mov
or
xor
jne
jg
push
mov
sub
inc
nop
cmc
fstpt
mov
xor
aaa
clc
idivb
js
sbb
fstp
or
imul
repnz
xchg
sub
out
shr
fistps
inc
xchg
ret
popa
test
flds
mov
fsubrl
cmp
shl
scas
push
repnz
sbb
inc
loope
mov
jno
lret
xor
mov
and
lea
aas
in
and
xchg
push
jp
hlt
repnz
sbbb
cmp
fstpt
adc
mov
insl
decl
and
sub
stc
jg
sub
xchg
mov
into
shll
push
push
aad
lds
dec
mov
outsb
insb
dec
pushl
jmp
icebp
fs
imul
pop
mov
clc
sub
arpl
sarl
and
mov
aaa
icebp
dec
jnp
mov
fsubp
mov
adc
mov
cmp
sar
inc
clc
icebp
subb
adc
sbb
mov
clc
sub
sar
inc
je
int3
push
rol
int
mov
jae
pop
mov
or
jnp
shll
cmpb
das
inc
inc
sbb
sub
lret
repz
lds
jmp
stc
mov
aas
inc
adc
add
imull
icebp
test
sub
dec
lret
push
scas
cld
adc
mov
mov
dec
sub
fld
and
test
push
lods
sub
fsubs
sbb
mov
mov
adc
ret
dec
add
sahf
push
mov
mov
push
cmp
add
mov
sub
adc
adc
sbb
int3
sbb
or
dec
mov
adc
jo
filds
daa
pop
test
ss
das
cmp
ficomps
ficomps
clc
add
or
fnstcw
mov
inc
dec
and
rorb
call
and
sub
or
dec
mov
nop
mov
hlt
es
addr16
or
add
ret
mov
add
mov
pop
sar
loopne
mov
add
subb
ret
xchg
flds
rcl
jp
xor
and
fsubrl
loop
pushf
test
jns
add
xorl
xor
add
dec
and
dec
and
scas
dec
jl
jns
mov
cmp
or
in
jge
loop
sarb
addr16
jb
std
jle
sbb
inc
decb
icebp
test
fcoml
jo
push
xchg
cld
mov
rclb
jecxz
jecxz
sub
sub
mov
jp
pop
jecxz
sar
push
or
loopne
add
std
femms
adc
adc
popf
icebp
xchg
adc
pop
mov
push
jmp
fidivrs
call
pusha
rcr
cmpsb
jecxz
pop
in
mov
mov
fwait
sbb
mov
jg
adc
dec
sub
rcrl
mov
mov
sub
add
jo
test
mov
sub
cmp
aam
in
mov
shl
xor
cmpsb
xor
xchg
fsubl
fstps
mov
adc
sti
ret
jge
push
repnz
rolb
test
push
js
mov
cltd
adc
add
xchg
adc
jg
push
pop
cwtl
pop
imul
xchg
aam
sub
jno
rolb
dec
jmp
dec
scas
lods
mov
push
cmp
test
xchg
mov
add
aad
add
cmpsb
xchg
push
add
pop
pop
mov
and
rcrl
dec
ljmp
jle
std
mov
andb
jne
fidivs
inc
xor
inc
inc
add
dec
add
xchg
mov
test
push
dec
jl
adc
or
roll
or
push
pop
call
dec
cmc
sbb
xchg
inc
arpl
inc
pusha
and
mov
or
das
adc
cmp
add
cwtl
sbb
push
xchg
cmp
sbb
mov
sbb
push
push
loop
fucompp
or
mov
add
rcrb
and
bound
mov
icebp
sbb
stos
aas
rorb
push
adcb
sbb
ljmp
mov
and
aas
or
imul
push
in
aam
and
rcrb
rcrl
arpl
xor
fincstp
dec
jns
adcb
cmc
ret
inc
divl
mov
jle
cwtl
cmp
push
mov
jmp
out
scas
or
add
jecxz
jecxz
jg
in
ljmp
lds
pop
and
mov
pop
mov
hlt
push
jp
cmp
loop
sub
cmc
lods
jb
push
mov
or
mov
lods
pop
outsb
pop
iret
imull
iret
fcmovbe
leave
sub
dec
xchg
mov
nop
jge
sbb
add
inc
rcrb
jle
data16
pop
dec
or
and
or
lock
push
shl
or
add
jb
xor
enter
fdiv
ret
test
call
pop
in
xor
sbbl
cld
jno
inc
fiaddl
pop
cmp
sbbl
imulb
jns
adc
sbb
dec
lock
addl
inc
into
inc
out
add
push
add
into
adc
cmp
lcall
adc
pop
les
addb
lret
fisttps
lods
rorb
add
xchg
adc
add
lock
push
jmp
dec
stos
sar
cmp
mov
adc
imul
jae
xor
dec
xchg
xorb
or
xor
daa
ffreep
aam
or
jmp
cmp
je
test
jmp
xchg
or
fnstenv
cwtl
xor
daa
cli
and
test
push
fmul
test
xchg
add
insb
mov
test
outsl
dec
jge
lcall
insl
mov
adc
add
cmp
xchg
adc
jle
sbb
push
popf
adc
sub
mov
lds
adc
cs
add
sbb
mov
jno
xor
aad
pop
dec
pop
mov
movsb
in
mov
sub
adc
les
inc
mov
jg
push
dec
loopne
repnz
iret
xor
pop
adc
sub
add
mov
mov
clc
add
sbb
xor
add
mov
sbb
add
fwait
inc
bound
add
xchg
pop
mov
jg
add
mov
jecxz
sub
fucomip
clc
xlat
push
sti
push
ljmp
cwtl
arpl
outsb
aam
mov
test
fwait
clc
xchg
mov
ljmp
shll
pusha
icebp
push
pop
outsl
aaa
ljmp
jle
push
jbe
and
fmull
jecxz
cmpb
adc
in
mov
outsl
rcrl
mov
adc
pusha
test
inc
or
or
fstps
addr16
bound
lahf
ljmp
or
andb
pusha
aad
adc
pop
sbb
adc
dec
scas
push
mov
mov
cmc
popa
popa
insb
pushl
das
ja
xor
inc
adc
pop
out
mov
cwtl
mov
pop
sarb
mov
je
mov
dec
xchg
and
add
pop
loop
xor
pop
lds
aaa
lods
mov
lahf
jns
adc
iret
or
inc
add
sbbb
ret
pusha
add
add
lock
lods
vpshaw
lock
call
and
push
push
mov
aaa
fisttps
jbe
cmp
inc
xor
cmp
js,pn
int
inc
loope
sub
push
scas
mov
mov
mov
pop
adc
mov
movsl
or
test
mov
sub
sbbb
fists
add
es
cmpsb
lock
push
inc
and
inc
adc
sbbl
sbb
and
xchg
add
lret
gs
adc
add
dec
cmp
lods
lds
sbb
lods
pop
add
int3
loopne
mov
movsb
inc
and
lods
stos
xchg
aad
sbb
sbb
rorl
mov
adcb
lea
and
jo
arpl
pop
jnp
rcr
add
xchg
int
or
addr16
dec
jne
sub
repz
movsb
out
push
mov
in
and
outsb
jo
cmp
pusha
outsb
inc
adc
sub
shrl
icebp
jp
jae
jecxz
inc
cmpsl
dec
aad
dec
and
push
cmpsl
or
cld
and
clc
xchg
mov
in
ds
iret
out
xchg
test
aam
adc
lret
aaa
add
insb
cmp
repnz
aam
sub
adc
inc
xor
lods
sub
rorb
ljmp
jmp
cmc
xor
adc
lahf
xor
das
out
push
test
cwtl
nop
mov
sbb
in
or
or
or
mov
dec
jno
adc
cmpsl
cmp
or
inc
dec
notl
xor
rcrb
xlat
pop
cmp
push
mov
push
adc
and
dec
adc
add
lock
mov
test
cs
scas
jo
push
insl
inc
repnz
cmp
scas
mov
pop
add
xchg
cmp
mov
shr
mov
mov
mov
mov
pusha
pusha
ss
mov
cmp
shlb
xor
out
and
dec
mov
xchg
jbe
lock
testl
or
inc
xchg
imul
push
sbb
mov
andl
icebp
jle
mov
mov
xchg
jmp
insl
jo
ja
sbb
mov
cmp
jge
sbb
mov
clc
jle
sbb
xor
adc
pusha
shl
sti
jg
mov
adc
les
jae
iret
pause
mov
push
jnp
or
xor
jg
inc
icebp
jbe
shlb
sbb
fsubs
and
mov
adc
out
icebp
rclb
or
test
add
loopne
inc
cmp
loop
orl
je
xlat
in
add
lret
adc
mov
mov
add
andb
sbb
push
cmp
cmp
push
iret
or
fdivs
add
dec
sbb
repnz
push
neg
xchg
sti
adc
mov
ret
adc
mov
dec
inc
ret
shrb
and
push
icebp
and
jg
sbb
adc
ljmp
pop
notl
adc
frstor
sub
lods
ja
insl
dec
xor
pushf
or
fldcw
cmp
imul
push
or
lret
adc
mov
jp
add
adc
and
xor
mov
movsb
pop
out
or
movsb
out
or
fsubr
inc
push
fcmovnu
jecxz
sbb
rcll
popa
push
adc
addr16
ss
push
arpl
mov
pop
cld
mov
mov
xor
or
sub
pop
pushf
add
sub
push
out
push
lret
or
mov
mov
mov
jp
lock
dec
push
nop
test
cmp
outsb
jg
cli
push
xor
iret
rolb
dec
cs
int3
int3
dec
mov
add
adc
cmovns
scas
leave
sbb
das
mov
pop
cmp
or
icebp
clc
cmpsb
es
add
dec
shlb
imull
iret
and
or
push
inc
cli
and
mov
pop
dec
sbb
aas
or
bound
xlat
clc
int3
bt
sbbb
icebp
dec
sbb
in
jg
push
sub
dec
dec
dec
mov
sub
cs
xchg
fisttps
decl
or
xchg
xor
iret
js
je
clc
jg
push
or
das
jmp
mov
loope
sti
sbb
add
fldenv
mov
adc
ja
adc
stos
add
mov
add
add
adc
incb
push
cmc
inc
aam
mov
mov
sub
insb
and
push
lock
movsl
inc
add
test
or
pushw
imul
pop
cltd
sti
ficoml
lods
add
xchg
xchg
jo
ljmp
insb
adc
mov
push
sub
jno
mov
pop
loopne
lret
pushl
bound
xorb
dec
rcr
jp
popa
rolb
lods
inc
bound
mov
mov
add
add
pop
sub
xchg
outsl
jecxz
jb
mov
sbb
loope
aaa
add
sub
movsb
out
imul
pop
insb
mov
fwait
or
daa
push
pop
cs
ljmp
sub
xchg
dec
push
ret
in
pop
add
es
mov
jle
fbstp
loope
stos
jl
fstl
sahf
mov
popa
pop
add
and
cwtl
lahf
aad
mov
in
aas
jbe
adc
push
inc
or
cmp
movsl
lods
sbb
scas
aam
mov
daa
int
es
decl
scas
adc
repz
push
push
and
hlt
subb
mov
movsb
xor
sti
sbb
cltd
or
push
jg
divb
js
jp
mov
mov
in
or
int3
stos
cmp
popf
pop
adc
xchg
test
incl
and
das
inc
xchg
imul
pop
or
stos
jle
add
icebp
cltd
push
fs
icebp
pop
and
les
shrb
imul
and
pop
les
push
mov
pop
or
test
cwtl
push
xchg
pop
aaa
ss
inc
leave
in
push
in
add
das
mov
add
and
cmc
pop
andb
xorl
xchg
notb
push
imul
push
inc
sub
les
jno
xchg
fistpll
jg
add
add
push
loopne
test
shrl
push
ss
jg
inc
scas
cmp
hlt
dec
dec
mov
sti
mov
jns
add
xchg
lea
mov
ret
dec
cmp
add
cmc
or
adc
imul
fistl
out
pop
dec
mov
adc
test
in
jbe
dec
sub
inc
jb
sub
pop
andb
jo
xchg
adc
add
cmpsb
xchg
lea
add
out
iret
pop
sub
iret
or
jg
outsb
jg
jge
dec
shlb
fadds
xchg
test
outsb
rcrl
jle
sti
adc
jp
mov
sub
xor
sub
xor
dec
fcoml
add
and
nop
and
add
in
mov
pop
stos
xor
lret
cli
gs
add
in
loopne
sub
push
or
cmp
shll
pop
fdivs
jl
lahf
test
fidivs
or
jns
dec
add
pop
popf
cwtl
cmp
pop
cli
jbe
pop
lret
aam
lea
fldenv
nop
push
mov
inc
and
pop
pushf
lea
lahf
mov
je
int3
rcl
arpl
or
pusha
aam
clc
stc
jae
mov
dec
cmp
add
cs
les
out
mov
and
sub
push
js
addb
inc
out
adc
sbb
test
sub
scas
pusha
les
bound
push
xchg
lret
cmpb
and
mov
rol
ss
in
int3
mov
dec
pop
lds
mov
lahf
in
test
jae
jns
or
andl
fcoml
daa
fcmovne
or
adc
mov
cli
push
sbb
push
call
inc
xor
loop
inc
shlb
pop
in
adcb
out
pop
sbb
idiv
jbe
imul
inc
mov
in
stos
and
lock
aaa
imul
fadds
pop
xor
pop
jmp
add
push
add
lea
faddl
sti
mov
jmp
xor
in
or
rcrb
jne
or
xlat
adc
inc
cli
push
aaa
pop
xor
popf
inc
push
or
out
push
lret
xchg
ret
lcall
jo
mov
ja
in
push
icebp
fbstp
lea
push
push
lea
push
mov
std
inc
mov
js
shlb
daa
sbb
or
cmp
mov
int3
push
push
int
pop
out
push
jae
outsl
fcoms
inc
sti
cmp
xchg
inc
arpl
test
cmpsl
cwtl
sbb
dec
dec
inc
push
add
jb
mov
ficoms
iret
aad
adc
xlat
mov
mov
push
push
mov
adc
icebp
inc
ret
ja
mov
xor
sbb
xchg
mov
loope
andb
dec
jge
push
pop
and
pop
xor
fcomps
dec
sub
loope
test
or
mov
push
xor
nop
rorb
xchg
adc
jo
pop
rolb
cmpsl
or
in
es
adc
sbb
mov
movsb
ds
lds
fsubrs
sbbl
sbb
das
mov
xchg
pop
daa
sbb
notb
or
fwait
push
mov
xchg
data16
sub
std
jbe
test
and
filds
mov
sub
sub
adc
aaa
sub
outsb
adc
mov
mov
popa
lcall
cld
pop
and
rcr
cld
arpl
add
out
fildl
ds
rcrb
js
pop
jp
xorl
adc
out
enter
adcl
and
daa
inc
xchg
pop
call
or
adc
add
stos
and
mov
push
mov
inc
imul
ds
pop
adc
push
pop
push
loope
jbe
mov
and
fcoms
xor
jbe
cs
call
push
sbb
and
enter
and
lret
mov
cmp
or
mov
push
xchg
lcall
pop
mov
mov
mov
xchg
jge
and
push
call
add
dec
cmp
xchg
shlb
fwait
test
cmc
push
jb
daa
test
movl
xor
adc
and
aas
push
dec
jle
leave
fcoms
dec
add
jle
sahf
sbb
repnz
fsubs
mov
push
jae
leave
aam
add
out
movsl
iret
divb
push
loopne
add
add
ss
push
pushw
test
orb
jge
jmp
adc
test
dec
mov
sub
dec
into
loop
ret
dec
push
jae
movsl
aaa
shll
inc
push
int
dec
lret
mov
mov
testb
andb
in
adc
sub
add
dec
sbb
jmp
pop
clc
rorl
jnp
shrl
or
xchg
or
loope
clc
adc
add
dec
sbb
push
int3
xchg
in
sbb
aam
jl
add
push
punpckldq
aam
sbb
insb
cltd
repz
sub
aam
and
and
dec
push
sbb
xor
xor
cmp
pop
pop
lahf
aam
ret
popl
je
aad
push
stos
rcrl
inc
push
aad
in
sbb
xor
jmp
cwtl
jnp
lcall
pushf
xchg
inc
or
shll
or
inc
jae
stos
adc
add
add
fidivrl
js
jmp
loop
movsb
pop
leave
fs
sbb
imul
test
xor
dec
sub
or
or
add
push
jge
loope
loopne
insb
cmc
loopne
pop
cmp
lock
repnz
pop
test
xchg
adc
int
push
sbb
imul
sbb
clc
dec
or
mov
ljmp
adc
cld
loope
es
orb
lods
cmp
xchg
cmp
xchg
rolb
rorb
pushf
push
add
add
mov
adc
in
sub
push
icebp
shrl
das
jp
popf
pop
loopne
add
push
andb
add
mov
inc
jge
enter
and
test
rolb
mov
lret
aam
leave
or
insl
push
jbe
shlb
lret
les
jp
and
push
sbb
adc
lods
cltd
fcomi
jle
outsl
push
inc
jmp
mov
jae
mov
enter
cli
test
lods
and
loope
ficoms
stc
add
ret
hlt
add
adc
rorb
sarb
jl
mov
mov
jno
nop
mov
xor
fs
adc
test
sarb
push
xchg
jle
in
adc
or
cmc
in
leave
stc
roll
loop
repnz
push
pop
xchg
lahf
fimull
add
or
or
sarl
jl
mov
cltd
dec
test
pop
adcl
push
jmp
stos
fs
mov
into
cli
push
shr
jmp
dec
cmp
xchg
sbb
dec
ljmp
mov
adc
rorb
mov
incl
test
xor
cmpsl
mov
loopne
outsl
adc
jle
xor
add
pop
mov
imul
lock
sub
js
sub
incb
ljmp
movsb
sub
pop
incb
es
adc
push
cmp
popa
dec
add
pop
jge
clc
aaa
test
movsl
mov
mov
mov
or
push
jecxz
jno
and
cli
lds
arpl
call
mov
push
dec
dec
and
imul
and
lret
sarb
mov
mov
push
push
add
call
or
fmull
and
cld
jmp
adc
push
sub
mov
sbb
pop
mov
mov
loop
sbb
cmc
ljmp
ljmp
jnp
add
outsl
outsl
int
dec
sbb
and
adc
jne
push
clc
outsl
jno
add
stc
pop
inc
mov
sbb
sar
and
pusha
adc
cmp
sar
ja
stc
xor
sbb
cmp
pop
pop
shll
fwait
cli
call
popf
pop
add
push
scas
movsb
sub
dec
and
js
loopne
jg
fbld
insl
cmp
enter
in
mov
mov
sub
cltd
mov
pop
sub
or
shl
add
jg
fcomps
add
xor
mov
cmc
rcrl
or
jno
pop
test
xchg
cld
add
inc
pushf
pop
lcall
in
frstor
sti
push
and
es
jg
les
repnz
stos
inc
sub
or
out
fsubl
add
les
cmp
jl
mov
inc
scas
test
daa
stos
xchg
adc
outsb
cmp
gs
mov
mov
jl
inc
iret
adc
add
jbe
clc
or
bound
mov
mov
arpl
je
jl
mov
addr16
pop
das
je
movsl
xchg
mov
shrl
pop
sahf
in
push
jo
mov
and
jo
cmpsb
push
fstps
push
add
ja
ds
test
add
xchg
xor
push
pop
jbe
add
mov
add
or
add
dec
lret
out
jp
push
inc
cmp
ljmp
jns
and
add
rol
lret
pop
std
dec
pusha
xchg
xchg
lods
sbb
add
mov
callw
roll
out
mov
sub
outsl
fbstp
insb
movsb
add
gs
jle
cs
pusha
pop
cli
dec
inc
and
out
add
stos
xchg
xlat
or
nop
jae
push
movb
dec
cmp
add
mov
mov
push
shlb
mov
sub
jbe
mov
add
in
in
mov
cwtl
sbb
inc
mov
lcall
dec
test
movsl
outsb
outsl
cld
sub
cmc
push
adc
jp
cmpsb
pushf
loope
mov
test
clc
fistps
cli
or
rolb
fistl
popf
loop
test
lret
div
mov
add
push
shrb
xchg
loopne
inc
pushf
in
std
jmp
jnp
mov
mov
test
cmp
or
aaa
insl
mov
jbe
ja
imul
movsl
test
push
ja
fwait
add
pop
mov
inc
clc
mov
cmp
and
adc
fistpll
lods
sbb
and
test
aam
sbb
es
mov
cmp
xchg
push
push
stos
mov
or
icebp
inc
in
and
out
pop
movsl
out
leave
int3
stos
xor
addr16
adc
scas
push
mov
adc
and
cmp
add
and
in
rcrl
mov
jbe
call
mov
mov
das
or
orb
xchg
les
xchg
decl
mov
mov
inc
movsl
push
aas
loop
mov
mov
ljmp
mov
imul
test
pop
pusha
pop
mov
sbb
dec
push
mov
sbb
sbb
cmpsb
xchg
insb
scas
or
stos
jb
inc
ljmp
pop
adc
lea
rcrb
fistpll
or
cmpsl
fbstp
add
jo
leave
loope
pop
js
das
dec
pop
test
inc
out
test
cmp
aam
mov
aas
test
dec
lea
adc
nop
lret
jmp
xchg
and
in
lahf
outsb
pop
insl
push
rcrl
gs
inc
add
add
inc
jecxz
das
or
test
adc
inc
mov
dec
cmpsl
mov
sti
stos
push
ljmp
mov
inc
xor
jecxz
jmp
aad
mov
or
inc
aad
insl
jecxz
or
cmc
inc
push
imul
dec
cmp
in
shl
fmuls
addr16
jle
push
bound
pop
repnz
push
clc
jo
js
xchg
adc
test
js
mov
stos
inc
push
les
lods
decb
in
jmp
or
ret
incl
sahf
sbb
js
fs
jnp
cmp
fsubrl
xchg
loopne
aas
lcall
inc
mov
xor
inc
popa
stos
dec
inc
add
add
mov
inc
jl
adc
mov
mov
inc
ss
xor
pop
mov
push
hlt
dec
in
cmp
mov
clc
in
add
or
shr
in
adc
test
pop
stos
pusha
pop
push
dec
xor
adc
fimuls
mov
cli
pop
sub
test
ss
enter
jg
mov
inc
das
fcomp
mov
mov
pop
je
in
mov
fsubrp
sbbb
dec
sbb
call
repz
movsl
cli
xchg
in
sub
or
cmc
cmp
adc
fidivs
inc
in
repz
add
pop
int3
insb
or
and
push
dec
cs
mov
jbe
adc
sub
int
js
jo
or
repnz
iret
insb
popa
int3
cmpsb
int3
adc
rcl
push
cmpsl
in
nop
fistl
push
mov
sub
dec
loope
add
fsts
cmp
and
stc
in
push
mov
jmp
jge
adc
inc
xor
imul
mov
pop
push
mov
xor
stos
cmpsb
xor
sbbb
roll
sub
sbb
insl
mov
xorl
adc
xchg
adc
sbb
pop
mov
test
dec
std
add
dec
mov
push
je
inc
inc
fdivl
pop
pop
mov
pop
aad
add
lods
lcall
adc
push
mov
mov
pop
push
mov
push
mov
rolb
jmp
mov
xchg
jns
mov
lds
leave
loop
pop
addr16
pop
and
and
shll
fstpt
lcall
xor
ret
aad
or
repnz
insb
inc
ret
and
and
sub
lret
adc
loopne
jb
loope
out
mov
push
lret
loopne
xor
loopne
jno
call
mov
dec
add
movb
sbb
sbb
add
mov
rclb
sti
sub
push
push
call
movsl
add
or
je
fisubrl
xor
clc
and
out
lret
ret
sub
rorl
inc
dec
fnstenv
mov
sbb
testb
push
sub
call
and
cmpl
cli
shlb
cs
dec
pop
sub
cmp
fdivr
pop
sub
adc
sti
cmc
test
inc
or
imul
add
bound
lea
xchg
sbb
mov
divl
fnstenv
sti
or
out
fisubrs
jmp
stos
jmp
add
cltd
stos
cmp
push
or
sub
or
and
pop
mov
jae
and
sbb
rorl
sub
fdivs
add
dec
add
push
sbb
cmp
push
cmp
xor
orb
or
ret
popf
filds
shll
pop
out
in
xorb
pop
xchg
aaa
add
pop
and
jno
xorl
add
xchg
mov
xchg
cwtl
lock
mov
push
xchg
les
into
and
repnz
ret
aad
dec
mov
in
nop
jge
je
fcmovb
adc
and
xchg
inc
xchg
lock
add
imul
roll
or
dec
shlb
and
xor
dec
clc
sbb
fsubrl
sbb
insl
inc
subl
inc
add
jne
and
fcomi
dec
cld
dec
jo
out
adc
pop
inc
adcb
pop
into
shlb
subl
jnp
dec
test
outsb
jb
jbe
inc
loopne
pop
arpl
sarb
adc
sub
jge
loope
push
sbb
sbb
test
xchg
pop
hlt
adc
sbb
cwtl
in
fcmovnbe
push
sub
xor
loopne
div
sbb
pusha
jae
leave
sti
ret
add
lock
mov
mov
jo
pop
push
mov
or
xor
pop
les
cwtl
sbbb
dec
cltd
movsl
dec
jnp
mov
inc
sbb
inc
inc
sbb
mov
jo
adcb
dec
or
and
cmp
add
xor
and
sub
xchg
movsb
fstps
ss
bound
and
add
loopne
sbb
push
addb
shll
mov
sub
loop
mov
xor
xor
icebp
cmpsb
insl
and
mov
inc
dec
lods
fisubs
divb
push
popf
sbb
mov
adc
andl
std
add
xlat
js
call
movsl
and
push
dec
movsb
add
mov
pop
sbb
rclb
cltd
pusha
dec
fildll
xchg
jge
dec
inc
nop
test
popa
rcll
adc
dec
add
mov
pusha
into
rorl
sub
and
push
jbe
cld
rorb
cld
js
scas
pop
push
or
sahf
or
pop
cs
inc
pop
cmpsl
ret
jbe
les
in
popa
orb
push
lods
pop
cmc
xchg
mov
mov
push
cld
adc
aas
and
out
lea
loop
xchg
xchg
pop
add
mov
dec
cmp
adc
dec
push
rcl
push
push
int3
pusha
cmc
in
scas
pop
out
scas
add
add
adc
fnstenv
fsubrl
inc
aam
push
cmp
dec
cmpl
sub
pop
sbb
je
addb
sub
or
or
push
aaa
mov
or
mov
adc
test
test
icebp
sbb
jge
pop
dec
or
sbb
push
jbe
dec
pop
shll
inc
les
das
sbb
dec
inc
xchg
xchg
je
add
or
cmp
mov
ror
adc
xor
xlat
ret
fsubp
addl
and
test
jmp
jmp
or
rcrb
lret
insl
cmc
std
popa
xor
inc
test
ja
xchg
dec
mov
cmp
mov
mull
or
xchg
aam
sbb
daa
adc
or
inc
stos
inc
jge
sub
xchg
dec
pop
sub
pop
in
or
shlb
clc
mov
fstl
aad
xor
mov
adc
jb
mov
dec
std
jno
in
daa
xchg
push
mov
into
addr16
inc
add
andb
ret
imul
sbb
push
xchg
shll
loop
push
cmp
xor
adc
movsl
leave
adc
mov
fsubrs
repz
sub
jg
sbb
inc
lds
push
dec
insl
cwtl
out
xchg
cwtl
xchg
xor
sbb
and
jmp
andl
inc
in
lock
lock
sub
jo
sbb
fisttps
jl
mov
pop
ss
dec
push
push
push
dec
push
add
xacquire
lret
icebp
xchg
out
faddl
or
add
fisubrs
mov
fmull
sub
sub
xor
push
adc
cmpsl
test
pusha
push
mov
cmc
pop
in
fldenv
push
ja
orb
pop
rol
or
mov
xchg
mov
pusha
push
mov
pushf
ret
mov
pop
sahf
add
out
adc
mov
adc
imul
pusha
xchg
mov
inc
sub
movsb
dec
mov
addb
jmp
call
cld
sub
push
mov
pop
iret
pop
dec
je
int3
add
aaa
ljmp
jmp
sbb
ror
xchg
icebp
jno
or
sub
incl
jmp
sahf
nop
inc
mov
or
sub
xchg
leave
cmpsb
mov
or
and
js
and
hlt
push
cs
dec
jl
cmp
jmp
out
call
mov
mov
fadds
and
jp
int3
cli
or
mov
repz
cmp
test
mov
test
jae
dec
add
pop
xchg
or
jg
xchg
pushl
mov
inc
xor
test
icebp
add
add
aaa
iret
jmp
add
notl
jg
jmp
push
cmpl
aam
mov
sub
repz
push
jne
add
mov
and
hlt
std
mov
cld
push
addb
adc
jg
ficompl
add
cltd
add
icebp
nop
jae
sub
mov
lea
xchg
scas
inc
incl
lea
insb
dec
ret
or
push
leave
push
cmp
mov
adc
mov
in
data16
lret
lods
loopne
inc
cmp
mov
fldenv
or
cld
add
outsl
clc
cmp
mov
xchg
xor
fwait
int3
xchg
mov
repz
cwtl
dec
add
aam
add
jae
or
call
inc
cld
xor
push
orb
cltd
jg
inc
ja
jns
out
mov
jg
pop
ljmp
adc
or
dec
std
mov
cmpsl
and
sub
push
mov
inc
es
or
outsl
add
int3
mov
out
lcall
bound
mov
fists
sarb
pop
cli
addr16
ds
inc
faddl
leave
fistpll
cld
adc
jne
inc
sub
test
mov
adc
dec
mov
mov
mov
lock
sbb
decl
cmp
push
fimull
sbb
xor
nop
jp
or
testb
cmc
addr16
push
popa
lock
jb
gs
insl
mov
cld
or
das
add
adc
lcall
mov
cmp
std
andb
out
push
std
imul
and
mov
cmovo
scas
cmp
pop
ret
push
clc
and
mov
nop
xor
js
dec
xor
pushl
mov
or
mov
js
sub
xchg
jbe
xor
js
add
and
imul
js
popf
cwtl
push
sbb
insl
add
push
sar
pop
clc
outsl
xchg
xchg
in
je
cmp
push
pop
mov
add
das
fdivl
inc
adc
or
inc
roll
mov
repz
inc
dec
iret
sahf
dec
icebp
xchg
add
xorb
mov
iret
mov
loop
and
push
jmp
mov
insb
adc
call
push
ljmp
in
enter
mov
cmp
push
mov
test
mov
or
rcll
lret
push
jmp
sub
push
or
xor
test
in
dec
test
decb
adc
jmp
adc
mov
mov
sbb
add
mov
xor
mov
rorb
mov
inc
add
imul
jbe
xor
aad
sbb
cmp
push
dec
pop
test
lea
stc
push
mov
or
dec
or
inc
adc
xor
fwait
jecxz
push
adc
xchg
cld
sbb
sub
test
sbb
insb
pop
ja
sbb
ret
inc
arpl
push
stos
adc
rcrb
mov
pop
cli
rcl
pop
pop
xchg
cmp
xlat
jl
dec
mov
jb
fcompl
push
scas
out
add
mov
int
mov
sub
and
add
and
pop
test
popa
lods
stos
aaa
lcall
sbb
xor
sbbl
or
sbb
imul
mov
pushf
pop
jb
add
decb
mov
sub
mov
jno
ret
add
int3
mov
inc
sarb
xor
xchg
cwtl
inc
push
mov
mov
fucomi
xor
jge
and
shlb
mov
inc
or
mov
outsb
jo
insb
push
add
push
mov
sbb
mov
icebp
fildl
add
inc
dec
imul
rolb
fistl
test
mov
pop
push
clc
mov
cmp
adc
mov
fiadds
mov
pop
data16
push
add
nop
nop
jle
jb
sub
outsl
jg
ret
in
lahf
cmp
adc
insb
jg
jmp
aad
shrb
movsl
inc
pop
xchg
leave
adc
ja
aas
and
repz
inc
sbb
nop
inc
sar
mov
lds
addr16
int
push
xlat
xor
sbb
inc
mov
in
push
add
sub
std
push
in
pop
jae
push
jnp
shll
pop
fmuls
movb
insl
mov
test
xchg
or
jg
rorl
cmp
int
stc
call
jmp
mov
popa
lcall
add
rcrb
inc
int
jge
pop
stos
movsb
inc
pop
mov
outsl
sbb
fldcw
pop
clc
xor
lock
aam
adc
cmp
daa
clc
pop
lods
std
mov
lock
or
and
in
jge
xor
test
lock
cltd
andl
dec
orb
insb
jmp
outsb
add
mov
pusha
iret
push
adc
inc
and
mov
or
mov
rcrb
loop
push
sbb
cmp
ss
xor
jbe
stos
in
aad
lds
mov
xchg
dec
outsl
std
cld
fwait
add
lock
xor
pusha
or
xchg
adc
test
daa
and
mov
jae
and
icebp
mov
xor
bound
mov
inc
push
std
mov
mov
popa
jecxz
sub
adc
and
add
out
aam
pop
aad
jg
mov
cmpsl
cmp
aaa
mov
test
in
sub
add
dec
cs
add
pusha
popl
cld
ss
pop
mov
xchg
subb
dec
sub
incl
push
lds
jl
fildl
jl
xchg
icebp
loopne
test
scas
add
mov
decl
in
mov
or
or
mov
dec
int3
or
ds
and
add
lret
jbe
repz
fadd
jns
ljmp
and
notl
ficompl
adc
outsl
inc
imul
fldl
xchg
adc
jg
jle
cmp
inc
dec
pop
fcmovnbe
pop
add
cmc
jp
mov
sbb
adc
sbb
dec
mov
aas
lret
inc
dec
shll
loop
outsb
cmp
lds
mov
in
pop
je
ds
mov
arpl
in
mov
xlat
or
xchg
test
popf
sub
fwait
in
fisttpl
lret
cmp
std
inc
ss
fsub
or
int3
mov
lcall
mov
loop
jp
shll
mov
or
lods
movsb
leave
shl
pusha
sbb
js
jmp
fbld
dec
xchg
inc
rcl
add
sbb
ficoms
stc
dec
pusha
mov
mov
xlat
popf
adc
rcll
lock
xchg
push
rorb
loopne
inc
dec
stos
mov
pop
adc
or
mov
mov
inc
imul
cmp
mov
add
idivb
ret
cmpsl
out
adc
js
call
push
sbb
xor
inc
das
stos
cmpsb
leave
test
cmp
aas
inc
addr16
mov
pop
sub
out
dec
les
or
ss
or
jo
mov
pop
subl
or
out
cmpsb
xor
dec
cmpb
xchg
jmp
adc
call
jae
add
sbb
fdivrs
dec
cld
mov
lahf
xchg
or
std
popa
push
or
push
int3
cmp
andl
or
gs
mov
or
out
push
mov
dec
adc
xor
fsubl
bt
out
subb
xchg
mov
imul
aad
add
andl
outsl
add
pop
and
lcall
adc
push
mov
xor
dec
jb
rcl
add
cltd
lahf
pop
and
ds
dec
nop
or
mov
sar
popa
stos
adc
push
adc
inc
push
sarl
jle
test
jno
mov
ficoms
movsl
in
aam
inc
out
stos
jle
incl
or
int3
clc
and
cmpl
sub
rclb
test
push
addr16
out
outsb
outsb
add
pusha
mov
pop
xchg
std
inc
add
xchg
lcall
xchg
daa
loop
cmp
int3
xchg
mov
sub
inc
xor
sbb
xor
or
adc
sbb
inc
stc
mov
cmp
insb
add
bnd
sbb
stos
push
stos
daa
jno
scas
fisubrs
cltd
pop
loopne
pop
ljmp
mov
jmp
lret
sbb
jle
xor
in
jg
loope
mov
pop
add
push
add
and
ss
pop
adc
in
push
mov
or
addl
fistpl
jb
roll
dec
mov
fmuls
sub
ret
add
sub
out
call
mull
adc
push
clc
rcr
mov
inc
add
and
adc
cmp
sbb
inc
sbbb
decb
pop
outsb
and
push
or
pusha
and
es
mov
mov
cltd
adc
frstor
add
fidivs
sti
leave
shrb
aad
mov
xchg
shll
add
lea
and
jp
and
sbbb
mov
sbb
std
dec
add
mov
lea
movsb
cs
ljmp
leave
jo
pop
js
out
xchg
adc
adc
push
or
adc
push
pop
lahf
and
push
andl
mov
mov
xchg
mov
aad
sbb
push
push
mov
add
mov
mov
testl
mov
and
mov
shrl
mov
push
data16
out
movsl
push
push
pop
sub
or
dec
out
fidivl
mov
in
das
fisubrs
add
add
pop
xchg
dec
dec
into
arpl
les
or
mov
jne
push
or
push
mov
clc
xchg
jmp
adc
popf
sub
push
dec
in
fistpll
testb
push
sti
push
iret
mov
aaa
in
jecxz
inc
aam
push
lods
or
mov
sbb
add
push
leave
shll
imul
sbb
mov
xlat
lock
add
pop
push
cld
aaa
icebp
pop
and
mov
adc
dec
ret
ss
pop
lock
add
xchg
mov
jmp
hlt
adc
mov
add
push
lods
daa
clc
std
decl
and
shll
add
sbb
cmp
int3
inc
sbbb
clc
std
dec
dec
loopne
inc
pop
and
imul
and
xchg
fcompl
repz
pop
ss
add
dec
add
jmp
das
mov
inc
jns
xor
out
cmp
orb
mov
adc
clc
pop
std
icebp
xchg
lds
xchg
jge
mov
fwait
xor
jge
inc
sbb
cltd
scas
sbbb
arpl
outsl
ljmp
dec
outsb
test
mov
std
outsl
cld
add
jg
mov
sbb
xchg
sbb
push
mov
dec
adc
or
dec
inc
hlt
nop
mov
je
xor
loopne
in
mov
mov
cmp
adc
xlat
sub
paddsb
xor
pop
call
pop
mov
addr16
adc
out
inc
mov
sti
call
push
lret
sbbl
sub
jl
push
testb
jecxz
xor
stos
dec
mov
pop
daa
cs
inc
inc
cmpsl
mov
adc
scas
cmp
aaa
stos
dec
add
xorb
adcb
cld
pop
shll
push
cmc
and
mov
mov
cmp
jl
jmp
or
ds
sbb
mov
gs
mov
lcall
sub
pop
jg
sub
adcb
cld
movsl
xchg
cmp
jl
dec
std
in
sub
push
paddb
das
add
pop
mov
xchg
incl
ret
dec
jecxz
scas
outsb
imul
xorl
inc
pop
es
js
out
mov
pushw
lcall
mov
add
lahf
nop
cmp
lock
mov
xor
popa
pop
add
cmp
adc
and
enter
adc
aaa
fst
xchg
cmpsb
lea
inc
or
adc
clc
subl
push
ror
mov
rcrl
jge
icebp
xor
faddl
pcmpeqd
sbb
pop
xchg
pop
fnstsw
mov
add
mov
jmp
mov
mov
fcoms
mov
jmp
inc
pop
xor
or
mov
jle
outsl
std
lock
add
mov
push
inc
mov
and
daa
mov
or
outsl
jge
or
push
or
xor
pop
sbb
mov
mov
mov
mov
pop
ror
movsb
jno
imul
sahf
icebp
push
das
sti
jno
pop
mov
cmc
into
and
mov
in
rcrb
cs
push
and
xchg
add
cmp
addb
fbstp
shll
int3
shl
in
lea
or
sbb
add
pop
mov
mov
inc
push
int
and
shll
mov
decl
jmp
aam
rep
pop
cwtl
sahf
mov
mov
xchg
sbb
insb
pusha
popf
cwtl
aad
fldt
inc
mov
xor
pop
adc
flds
lret
cmpsb
mov
sbb
push
fwait
adc
adc
mov
mov
mov
adc
and
outsb
mov
jecxz
xchg
bound
cld
lret
mov
test
xchg
and
and
loope
adc
sbb
imul
adc
xchg
insl
and
cli
push
and
jbe
ja
sbb
push
fiaddl
and
adc
addr16
push
fidivl
pop
jle
mov
fistpl
dec
out
push
adc
sbb
aad
fmuls
adc
aaa
imul
adc
or
inc
push
movsl
inc
xor
and
das
insb
sti
cmc
cmp
adc
push
xchg
mov
adc
add
ljmp
jg
incl
mov
lds
clc
fnstsw
mov
xor
enter
shll
jle
add
in
xor
out
sbbb
jl
or
andl
lds
jne
mov
pop
mov
sbb
inc
jmp
and
inc
hlt
int3
call
push
loop
sti
inc
ja
das
stos
and
mov
call
jg
add
out
lds
shl
sub
mov
xor
in
loope
adc
add
adc
sub
mov
mov
andl
decl
ret
jg
ds
sti
dec
mov
movsl
push
lods
mov
mov
pop
ljmp
cmp
mov
rclb
add
jbe
xor
fildl
cmp
xchg
sub
fildll
pop
xchg
dec
inc
adc
adc
push
pop
loop
dec
or
int
sub
cmpsb
pushl
push
cmp
add
mov
gs
pop
cmpb
out
ljmp
jle
pusha
mov
fstpt
mov
adc
inc
decb
lods
or
sub
push
movsb
stos
add
mov
xorb
popa
negl
jno
push
jo
nop
or
xor
pop
ja
or
xor
add
pop
das
mov
scas
jle
xchg
xchg
lea
call
cmp
nop
mov
nop
cmp
xchg
inc
insb
xchg
mov
imul
pop
je
jl
adc
lods
inc
sahf
adc
cmc
and
sbb
ja
stos
rolb
call
and
jbe
lcall
mov
or
push
jne
pop
lods
pop
sbbb
decw
jne
dec
cld
sub
fdivrl
dec
cmpsl
pushf
imul
dec
shll
mov
shll
jp
rolb
mov
add
into
adc
push
sub
mov
lock
pop
ljmp
cld
inc
pop
pop
fcmovbe
and
dec
loopne
and
stos
adc
ror
faddp
lods
push
dec
add
cmp
push
jmp
push
popf
adc
icebp
imul
and
pop
adc
and
adc
loop
in
xor
adc
enter
das
mov
rcrb
shr
rol
aaa
adc
adc
pusha
push
push
out
cmp
movsb
mov
lea
push
push
aad
push
ss
test
adc
out
add
xchg
sub
sub
fs
test
add
add
mov
rolb
enter
int
and
out
xchg
mov
and
jp
stos
and
xor
add
decl
shrl
pop
add
rclb
insb
imul
or
push
inc
sbb
movaps
mov
mov
in
pop
fsubrl
cmp
out
cmpb
fsubr
outsl
popf
jmp
gs
mov
fsubrs
or
adc
mov
stos
mov
std
ds
push
cmc
mov
xchg
cmc
ret
jge
stos
cmpsl
mov
dec
insb
xor
rol
inc
sahf
dec
pushf
jnp
or
and
xchg
mov
push
xchg
xor
add
clc
decl
insb
mov
xor
push
inc
lret
lret
mov
push
incb
xchg
xchg
jne
sbb
pop
cs
add
lods
fwait
enter
sbb
lahf
aaa
cli
push
icebp
shll
adc
pop
add
push
inc
adcb
fcom
add
out
movsl
pop
jb
repz
jbe
cli
cmp
add
push
pushf
cmp
pop
stc
dec
stc
push
mov
add
push
fsubr
pop
xchg
inc
loopne
jecxz
rorl
dec
and
outsl
mov
mov
insb
sbb
sbb
ss
ret
icebp
mov
pusha
subl
in
mov
add
out
lcall
push
maxps
or
mov
lea
mov
or
dec
adc
sub
or
fisubs
mov
add
and
insb
jg
push
dec
sar
dec
sahf
or
stos
es
and
or
add
mov
lock
pop
je
ljmp
loopne
pop
jmp
inc
jecxz
fidivs
or
mov
out
dec
or
xchg
rolb
hlt
xor
and
jae
mov
ror
psubsb
cwtl
push
test
or
cmovne
or
sbb
push
jge
and
add
cld
dec
inc
pop
xor
pop
inc
sarb
inc
adc
loop
lock
or
cmp
sbb
adc
fwait
mov
and
fucomip
xchg
clc
fildl
jns
loopne
ljmp
leave
pop
xchg
dec
jle
cmp
cmc
jge
xlat
negl
cmp
or
mov
add
xchg
mov
rol
jno
insb
xchg
jb
adc
jns
sub
out
inc
add
test
jg
sbb
xchg
xchg
addb
jecxz
mull
or
ret
and
dec
and
add
sbb
fidivrs
pop
jbe
xorb
or
and
push
insb
adc
mov
pop
pop
push
fmuls
or
insb
inc
xchg
inc
je
out
cli
lock
dec
in
mov
test
jbe
jmp
shl
in
icebp
xchg
in
push
fisubl
pusha
ret
xchg
and
xor
fldenv
andb
test
loope
pop
sarb
into
movsb
sahf
adc
add
call
inc
rcrb
mov
call
cld
push
mov
sub
fnstenv
movb
cmp
aaa
rolb
and
mov
mov
addr16
xchg
push
mov
test
xor
iret
push
std
or
add
test
inc
push
in
lcall
mov
and
pop
adc
sbb
enter
das
or
pop
rclb
or
mulb
cli
mov
push
xchg
gs
inc
je
pop
addb
mov
sbb
icebp
enter
insl
push
inc
add
lods
mov
mov
add
sbb
gs
push
or
mov
fldcw
pop
shlb
icebp
js
xchg
and
into
cmc
or
xor
test
aas
inc
nop
inc
pop
and
cmp
lock
inc
sbb
and
andb
mov
cwtl
iret
or
add
pop
cmp
sub
xor
lods
xor
dec
inc
xor
xor
lds
shrb
mov
sub
fnsave
sub
dec
mov
xor
outsl
push
sub
pop
and
xchg
cli
mov
push
push
gs
sub
mov
arpl
adc
mov
inc
add
or
cmp
icebp
xchg
cmp
xor
int3
add
pop
sub
dec
mov
inc
lods
mov
or
or
jb
faddp
dec
and
add
pop
cmpl
and
pop
in
stos
dec
adc
mov
subl
mov
mov
and
add
dec
push
inc
mov
xlat
mov
adc
xor
in
inc
icebp
xorb
roll
pop
in
mov
ret
mov
add
pusha
cld
inc
pusha
sub
je
inc
ret
bound
jnp
rorl
inc
push
hlt
adc
sub
add
imul
rcrl
mov
xor
sub
aad
cmpsl
sti
push
fsubs
in
int
ss
mov
shll
mov
fstpl
cmpsl
or
jle
add
cmp
sub
pcmpeqb
xor
pop
and
fnstcw
push
mov
sbb
sbb
add
ret
pop
adc
lock
adc
daa
xor
inc
outsb
and
cmpsb
push
jmp
test
pop
push
leave
jbe
pop
in
jecxz
cmp
cwtl
sub
dec
add
inc
pop
stos
and
add
and
adcl
jmp
inc
mov
or
shlb
pop
jb
loop
mov
push
lret
andb
andl
repz
xor
xor
dec
sbb
cmp
ljmp
xchg
cltd
sbb
pusha
lret
ret
jp
std
push
xchg
push
xchg
push
xor
sbb
pop
add
in
or
xor
or
add
repz
loope
push
xor
or
insl
mov
sbb
loop
mov
pop
in
pop
int
dec
add
adc
or
xor
and
push
sub
outsl
loop
add
sbb
addb
int
lods
int3
arpl
inc
dec
add
sub
test
mov
sub
rcll
mov
mov
stc
int3
adc
data16
shll
mov
add
inc
outsl
movsb
push
mov
or
repz
or
add
xchg
pop
lods
inc
shrl
add
inc
and
inc
ret
aas
call
lahf
jns
out
or
mov
mov
outsl
ret
popa
and
add
popa
paddusw
sahf
cmp
divl
xor
xchg
clc
and
es
cmp
aam
pop
xchg
shll
pop
pop
mov
lahf
push
xchg
inc
mov
or
inc
adc
mov
flds
sbb
out
in
and
idivl
push
call
mov
and
mov
shll
xor
and
xchg
sti
mov
mov
stos
hlt
imul
sbb
xor
and
pop
clc
push
jnp
into
or
movsb
or
or
adc
dec
bound
pop
stos
xor
roll
pop
sbb
jbe
xchg
stos
dec
mov
and
inc
xor
pop
and
ss
outsl
add
sarl
adc
mov
out
decl
and
mov
pop
shlb
jle
jmp
adc
sbbl
jbe
adcb
mov
xchg
and
inc
mulb
xlat
loope
mov
sub
inc
fs
inc
clc
mov
xchg
mov
mov
out
or
cmp
mov
fdivr
ret
mov
call
jecxz
xchg
xchg
mov
add
mov
mov
push
sub
pop
adc
popa
out
jo
add
pop
adc
clc
sbb
and
sbb
cmp
fwait
sub
pop
pop
negb
jmp
hlt
xor
mov
add
sbb
ljmp
call
jo
adc
sti
xchg
inc
push
dec
mov
mov
pop
ljmp
add
pop
and
shl
jg
inc
out
or
shll
xchg
pop
clc
push
cmc
xor
ss
rorb
fidivs
popf
roll
xor
or
mov
mov
movsl
sub
inc
repz
out
push
or
adc
adc
out
add
dec
jecxz
pop
mov
and
addl
inc
popa
sub
or
pop
ds
and
jmp
shrl
fstpt
cmp
mov
pop
adc
aaa
filds
mov
mov
subl
test
and
inc
pop
jmp
icebp
mov
push
lock
push
popf
movsl
insl
jno
lods
ja
jecxz
xchg
jg
add
mov
pop
lds
aad
dec
cmpl
pop
shl
cmp
fstps
mov
aam
push
and
ret
and
aad
jg
sti
popa
ja
lret
mov
push
jg
jmp
xchg
xchg
push
stos
dec
mov
lds
adc
int
pop
ret
sahf
add
aam
fcompl
inc
inc
sub
shrb
fwait
cmp
xchg
inc
scas
or
cld
loope
xchg
fisttpl
dec
sbb
movl
inc
lahf
push
push
js
jnp
loopne
and
push
pop
cmpsb
push
push
outsl
or
pop
add
cmpb
or
adc
cvtps2pi
call
cltd
popf
sbb
add
repz
dec
add
ja
fidivs
fdiv
ds
iret
xchg
sub
incb
cmp
je
ficoms
add
cmpsb
test
lahf
bound
pop
cmpb
xor
test
add
mov
adc
dec
outsl
std
lods
pop
outsb
sbb
sbb
call
pop
fcmovu
xchg
ja
cld
sub
mov
xor
test
push
xor
jle
push
adc
imul
jp
test
inc
mov
ret
add
mov
xlat
int
pop
roll
jg
ffreep
shll
add
popf
pop
popa
repz
adc
jo
lods
mov
sub
and
ret
push
enter
push
mov
xor
mov
push
pop
xchg
inc
xor
mov
std
sub
jnp
int
iret
call
mov
call
push
in
jno
cs
lods
mov
xchg
andb
sub
adc
fisttpl
sbb
icebp
sarb
pop
push
mov
insl
lcall
mov
jmp
add
jbe
cmp
and
pop
popl
jle
adc
jmp
cmp
gs
les
testb
sti
pop
dec
fidivs
adc
inc
dec
fisttps
lret
in
or
ffreep
frndint
test
enter
or
inc
mov
stos
inc
mov
loopne
mov
ficoml
push
add
rcr
xor
cmp
push
push
xor
cli
add
xlat
push
lods
insl
sub
test
cmp
sub
and
inc
xor
push
shrl
jo
sub
shrl
ljmp
lcall
loope
add
pop
pop
or
mov
jg
add
mov
fnstenv
adc
push
hlt
fstps
cmc
incl
pop
adc
mov
pop
repz
imul
enter
outsl
push
clc
movsl
dec
scas
ds
mov
mov
outsl
cld
inc
lods
inc
mov
test
movsl
xor
das
enter
mov
fildl
and
mov
mov
fistpll
xchg
adc
mov
test
cmpl
inc
inc
adc
lret
pop
cli
data16
pushf
test
out
in
outsl
call
movsb
inc
sahf
jns
sub
dec
jp
rclb
xlat
xchg
jne
xchg
jle
neg
push
xchg
mov
rcrl
icebp
es
aas
push
das
sub
mov
jmp
jecxz
mov
pop
out
cmc
clc
sbb
es
mov
cmp
fwait
push
xor
popf
add
push
and
push
popf
jo
add
jmp
les
adc
lret
adc
dec
mov
loop
mov
loop
lods
and
repnz
lock
lods
jecxz
arpl
imul
sub
js
mov
jle
adc
arpl
jns
adc
test
or
inc
add
or
outsb
stc
lcall
jmp
mulb
int3
xchg
pop
loope
inc
into
movl
pop
jl
rorl
shll
or
arpl
mov
pop
int
repz
add
jno
popf
rcrl
pop
mov
adc
and
adc
dec
add
inc
pop
bound
jecxz
popl
jl
dec
je
mov
dec
sub
outsl
jl
adc
cmc
in
push
ljmp
loopne
mov
arpl
inc
inc
push
push
js
cmp
test
fdivr
pop
and
mov
dec
and
mov
call
xor
sub
push
dec
mov
jle
xor
mov
sub
push
add
adc
ret
enter
incl
mull
in
and
push
inc
shll
push
orl
lahf
mov
pop
sti
add
sarl
inc
jg
int3
inc
pusha
inc
es
push
adcb
das
jl
les
jne
xchg
in
jp
add
outsl
repnz
inc
rorb
adc
xchg
and
inc
inc
int
shll
mov
imul
inc
pop
dec
aad
repz
dec
notl
and
push
clc
outsb
inc
cmc
in
mov
and
inc
clc
inc
insl
or
sub
scas
fs
fidivl
cld
ljmp
pushf
push
enter
jge
jl
push
mov
sub
adc
inc
lods
out
sbb
inc
cmpsb
cmp
adcl
sbb
stos
jno
fwait
imul
mov
mov
sbb
or
add
enter
mov
je
sbb
sbb
outsl
pusha
push
cltd
or
xchg
arpl
out
lods
sub
es
mov
idiv
push
push
mov
jnp
mov
jno
or
bts
sub
outsl
pop
in
xor
or
jge
mov
sbb
stc
cwtl
nop
test
mov
mov
sarb
push
sbb
jne
loop
mov
hlt
or
mov
xchg
push
test
lds
cmp
cwtl
in
ja
adc
and
stc
xchg
mov
mov
sub
insb
jnp
sub
sbb
fisubl
or
add
std
inc
add
ret
test
sub
out
pop
test
icebp
fisttpll
ret
inc
jae
xorb
mov
add
mov
aam
adc
rcrl
mov
out
mov
adc
push
adc
into
xchg
push
icebp
mov
loope
mov
or
mov
add
call
cmc
pop
insb
shrd
or
jg
loope
test
push
out
pop
mov
mov
or
psubw
jmp
push
shll
mov
and
sub
mov
push
jo
mov
insb
add
cmp
andl
notb
insb
sbb
jns
shl
adc
jbe
aaa
pop
es
mov
dec
cltd
pop
nop
sti
inc
std
cmc
insb
mov
xor
mov
adc
into
das
imul
sarb
xor
xchg
or
fnstenv
fimull
iret
inc
xchg
jg
mov
xchg
dec
dec
ds
outsb
out
nop
mov
or
xor
lahf
sarb
mov
mov
cmp
push
loope
xor
inc
dec
and
lahf
inc
sub
lods
jecxz
jo
push
lret
fs
pop
mov
jle
insl
push
scas
xlat
addl
inc
and
stc
push
test
cmc
inc
fnstcw
xor
jno
add
lea
dec
xchg
lods
ja
gs
out
cmp
adc
cld
adc
loope
and
aad
movsl
dec
loopne
popa
in
or
movsb
lock
pop
sbb
sub
repnz
mov
bound
push
mov
mov
mov
fwait
ret
lock
test
incb
ss
lods
mov
orl
addb
mov
sub
mov
mov
and
mov
out
mov
push
cld
out
loop
pop
jg
pop
sbb
or
sbb
sbb
ss
mov
pop
std
sub
mov
jmp
imul
decl
xchg
aaa
jno
pop
xlat
testl
cld
ljmp
hlt
fcompp
das
push
jns
sbb
mov
cmpsl
mov
push
push
pop
push
fildll
out
xchg
iret
xlat
adc
decb
mov
jbe
dec
mov
das
std
in
cmp
and
andb
xchg
loop
mov
push
push
mov
mov
mov
cmp
dec
inc
mov
cli
pop
jbe
adcl
push
sbb
lds
call
movsl
out
in
cmp
leave
mov
and
xchg
mov
lret
cmp
cli
shll
loope
add
repnz
xchg
pop
or
or
or
cmc
cmc
test
and
jae
loope
hlt
mov
lock
sub
scas
sub
push
sbb
ret
mov
mull
scas
test
fdivs
cltd
ljmp
push
arpl
jmp
pop
xor
out
mov
sbb
in
dec
pushf
sbb
add
mov
jb
test
lcall
jecxz
xor
lea
push
lcall
scas
sub
mov
mov
add
mov
cmp
push
sbb
fldenv
in
push
adc
jmp
dec
fwait
movsl
ss
in
push
pop
and
jbe
and
or
jmp
xchg
push
mov
sub
jns
pop
add
shll
lcall
lods
std
lret
add
and
mov
lods
rcll
lea
mov
xor
adc
sbb
dec
jle
mov
sub
setnp
adc
cld
test
sbb
xor
in
sbb
push
pop
outsl
jl
add
adc
stc
jp
sub
cld
filds
xchg
fists
and
push
or
jbe
cmpsl
mov
fnsave
push
jno
movsb
inc
fincstp
mov
pop
mov
insl
pop
in
mov
mov
mov
jle
inc
jo
mov
cmc
outsl
sahf
lcall
adc
and
or
xchg
dec
out
pop
xchg
dec
mov
mov
repnz
mov
pop
xor
daa
xchg
cs
inc
rcl
jne
decb
lock
dec
xor
aam
outsl
or
orb
or
in
jns
test
data16
dec
adc
add
fisubs
das
pop
and
mov
popa
mov
sbb
std
out
mov
adc
xchg
and
je
ret
mov
sub
sahf
ljmp
es
in
dec
in
movl
jb
fs
or
sbb
and
xchg
sub
pop
pop
lea
adc
sti
je
mov
inc
dec
mov
loopne
jl
xor
jne
incl
adc
ret
out
test
testb
clc
jg
inc
xor
mov
xchg
mov
loope
testb
aam
ja
cmp
stc
pop
ss
sub
mov
das
mov
test
mov
loop
or
cmp
jo
test
mov
cmpsb
outsl
rol
filds
insb
popa
std
sti
imul
mov
mov
push
inc
test
jecxz
mov
jge
sub
mov
mov
mov
aam
ffree
dec
mov
cmp
add
push
int3
add
push
jg
or
rcrb
sub
and
imul
adcl
fcompl
loop
divb
je
and
sbbl
je
fstl
sub
xor
mov
inc
test
jecxz
lods
cmp
mov
mov
lock
xorb
jg
cwtl
and
clc
pop
xor
jmp
sarl
test
sbb
pop
ljmp
ficoms
mov
mov
sub
rorb
outsb
pop
xor
shr
mov
inc
sti
push
icebp
in
sti
xchg
jno
mov
call
daa
add
pushf
or
mov
cmp
movlps
xchg
cmp
outsl
jmp
orb
pop
inc
or
and
fucomip
movb
insb
mov
push
ret
ljmp
mov
orb
xor
dec
xor
outsl
mov
ffree
inc
das
ret
test
jg
shlb
lds
pop
je
cs
pop
daa
cmpsl
mov
aaa
mov
mov
aam
js
and
out
xorl
cmp
push
icebp
jae
mov
pop
lods
or
test
inc
jbe
fld1
inc
jge
inc
in
add
or
in
mov
mov
icebp
cmpb
ds
xor
or
mov
push
lds
movsb
jo
aas
clc
sub
inc
xor
mov
sub
sub
fildl
popa
dec
adc
push
cld
addr16
outsl
push
loopne
xor
inc
jno
daa
fisubl
jge
mov
pop
and
lcall
jg
outsb
movsl
js
sahf
ficoml
mov
pop
rclb
loopne
mov
andl
adc
sub
sbb
sub
sbb
js
jb
mov
or
inc
mov
test
out
imulb
lret
cmp
cli
adc
lock
aam
adc
popa
and
adc
jae
insl
sub
icebp
pop
mov
mov
inc
faddl
enter
in
insb
lock
push
or
inc
jo
or
cli
mov
mov
aas
stos
push
inc
mov
and
add
mov
insb
notb
add
loopne
nop
ljmp
mov
adc
mov
mov
lcall
push
inc
nop
mov
inc
add
xor
jmp
test
mov
and
test
scas
dec
test
inc
inc
rol
mov
sbb
sbb
add
cmp
mov
ret
sbb
pop
pop
jno
adc
xor
sbb
nop
sbb
addr16
pop
xor
cmpl
mov
pop
loopne
inc
sub
push
gs
xchg
loopne
mov
inc
ljmp
jmp
ljmp
rcll
idivl
mov
push
push
mov
mov
out
ljmp
pop
cmc
imul
rcll
loopne
xlat
or
and
pop
mov
gs
addr16
outsb
insb
es
push
aam
inc
insb
pop
bndstx
cmc
sbb
cmpsl
add
cld
in
mov
mov
adc
mov
mov
and
pop
inc
xchg
aas
loopne
out
mov
and
push
lahf
push
dec
jb
or
jge
movsl
adc
push
push
ret
aas
addl
call
aam
adc
cmp
sahf
fwait
icebp
sub
mov
sbb
xchg
icebp
jb
and
add
and
jmp
xchg
cmp
pop
loopne
sub
mov
push
imul
inc
add
mov
pushf
xchg
and
inc
mov
int3
leave
insb
inc
in
mulb
push
fisubrs
mov
xchg
in
xor
adc
mov
pop
push
aad
pop
outsb
cmp
or
cld
mov
mov
in
cs
sbb
lret
mov
inc
pop
jne
pop
outsl
shrb
dec
mov
leave
es
stos
sub
mov
and
lods
mov
mov
pop
sti
fists
sub
repz
dec
addl
inc
and
or
aad
cmp
lock
pop
aas
push
in
push
cmp
and
sub
or
jp
push
add
mov
adc
cli
call
popf
add
hlt
mov
sub
in
pop
mov
std
leave
loop
aam
xchg
mov
cmpsl
push
inc
push
negl
pop
and
decl
sarl
outsb
fsubs
sbb
movsl
mov
mov
or
vcmpnge_uqsd
inc
popa
and
jmp
nop
orl
mov
aaa
mov
adc
adc
mov
mov
movsl
call
mov
push
lea
lcall
fnstenv
popa
andl
dec
cltd
test
mov
fnsave
inc
sbb
test
push
scas
add
es
ret
out
mov
mov
xor
jmp
lea
imul
or
mov
ds
call
pop
call
rcrb
jmp
push
push
sbb
jmp
sbb
and
out
inc
mov
dec
jnp
mov
lock
in
ret
daa
jmp
inc
mov
repnz
mov
fdivrs
sbb
lock
into
pop
cmp
pop
cmp
loopne
ss
nop
popf
push
or
ret
push
mov
fists
pop
xchg
pop
push
test
cld
nop
sbb
lock
inc
mov
cs
movsl
sub
mov
add
incl
push
repz
xchg
pop
aad
add
or
mov
cmp
mov
push
pop
cmp
add
jb
pop
lret
dec
sbb
out
outsb
or
jle
add
and
nop
call
sbb
adc
jg
stos
decl
xchg
or
dec
sbb
dec
hlt
cmpsb
jg
push
cmp
in
rorb
cmc
scas
mov
dec
xor
das
int3
in
in
mov
and
jg
pushl
xor
dec
mov
subl
push
das
jge
jmp
or
xor
fcoms
and
mov
jp
xchg
adc
cli
add
dec
sahf
repz
fisttps
fsubrs
into
add
push
mov
testb
pop
sub
insb
insl
loope
ret
cmpsl
xchg
jl,pn
test
les
jle
or
fisttpll
adc
cmp
push
xor
in
mov
loope
push
mov
xchg
fs
clc
outsl
or
aas
cli
aas
inc
gs
mov
sub
mov
sub
cltd
or
ljmp
outsl
loope
insb
and
adc
test
xor
cld
jmp
call
adc
sbb
xchg
loopne
out
ljmp
ret
jne
mov
add
test
loop
pop
lock
pop
fidivl
dec
xor
inc
popf
incl
incl
popa
mov
or
cmc
pop
mov
add
fwait
cmp
ds
pop
cmp
imulb
mov
sub
push
cmp
xchg
pop
adcb
inc
mov
cmc
call
cmpsl
sbb
lock
inc
cmp
shlb
cmpsb
aad
out
xchg
cs
pop
add
repnz
aas
das
cwtl
sub
mov
sbb
pop
sbb
insl
imul
mov
mov
adc
mov
inc
fisubl
dec
sbb
data16
mov
xchg
gs
sub
and
add
idivl
stc
cmp
mov
adc
cmp
sub
rorb
dec
pop
mov
mov
mov
pop
dec
enter
movsb
imul
sti
add
sbbb
pop
add
and
pop
call
mov
cmpsl
inc
clc
nop
jae
dec
aas
and
add
jo
inc
mov
dec
xchg
movsl
push
jnp
test
insb
bound
aas
or
push
cmp
hlt
in
sbb
and
inc
ror
push
and
xor
jg
adc
dec
xor
gs
fnstsw
mov
addl
mov
inc
in
add
jecxz
pop
lock
cs
mov
push
roll
add
movsl
push
xor
fldl
or
jmp
sub
mov
xchg
jbe
test
inc
int3
scas
mov
mov
sbb
xor
loopne
clc
xchg
fimuls
mulps
std
inc
insb
sbb
test
aaa
loopne
push
mov
ja
test
ja
mov
jb
adc
rcrl
clc
jmp
mov
push
pushf
mov
mov
data16
pop
xorl
sub
lret
cld
adc
cmpsl
add
aaa
lock
push
xor
cld
mov
pop
cmp
sub
pushf
pushf
add
dec
pushf
pop
clc
movsl
inc
in
mov
and
sbb
les
ret
cmc
xor
nop
or
movsb
or
adc
shr
std
pop
sub
or
lea
loopne
push
mov
sub
clc
add
lock
and
or
push
adc
jp
jmp
call
ud0
jg
ret
test
push
imul
ss
bound
test
inc
cmp
sbb
insl
jl
add
push
jle
int3
and
movsb
add
gs
xchg
cs
in
sub
inc
cmp
psubq
mov
repnz
add
xor
filds
clc
adcb
jo
lea
aad
inc
fsubs
xor
inc
fiadds
xchg
cmp
in
loope
pop
mov
or
push
sub
aad
dec
shll
sub
sbb
jbe
and
add
jge
sbb
rcrl
jg
loop
mov
add
push
int3
sub
hlt
das
mov
pop
push
mov
sub
xchg
adc
or
jo
flds
mov
cmp
lret
jmp
jp
sbb
mov
sarb
lcall
xchg
out
inc
and
sub
pop
jmp
adc
jl
in
mov
cld
movsl
ljmp
shrb
push
mov
fdivrl
inc
ret
inc
pop
dec
jno
jnp
jp
push
mov
pop
jecxz
sbb
jp
lahf
in
negb
pop
adcb
or
mov
adc
sbb
sbb
rolb
lods
cmc
loope
mov
pop
fimuls
sub
cmp
bnd
jb
sub
mov
adc
loope
xor
sbb
jp
jbe
mov
ljmp
mov
adc
lock
mov
adc
decl
dec
or
leave
fidivrs
adc
push
xor
adc
fildll
inc
add
or
insl
mov
jmp
cmpb
xor
imul
and
cld
cmc
fstps
sar
pop
sbb
in
call
imul
sbb
js
pop
adcb
jnp
add
jge
mov
test
mov
popa
push
cmp
sti
xchg
sbb
sbb
ds
mov
push
lods
inc
test
pop
lahf
jo
rorb
pop
push
dec
int3
mov
and
scas
ror
outsl
clc
push
test
cmp
dec
xor
scas
add
jle
loope
mov
mov
insb
hlt
jns
shr
push
push
imul
mov
mov
mov
cmp
mov
call
lea
jmp
xor
mov
mov
cmp
je
das
xchg
adc
out
jmp
pop
cmp
xorb
iret
add
pop
add
pop
leave
mov
pushl
call
stos
and
jns
movsb
cmp
cmp
mov
daa
loopne
mov
pop
sarl
dec
dec
sub
xchg
loope
and
test
and
pop
enter
jg
inc
je
adc
xor
or
mov
in
lods
insl
bound
mov
pop
in
sbb
fdivr
lcall
sub
inc
scas
jno
inc
dec
mov
sbb
imul
and
mov
aaa
loop
cmp
pop
mov
sub
push
or
adc
loopne
jle
pop
mov
inc
mov
cmpsb
mov
lret
decl
xor
sub
incl
popf
adc
pop
add
adc
or
lock
dec
fcompl
fadds
js
hlt
jg
fisttpl
test
jmp
jle
mov
pop
sbb
mov
mov
loop
lcall
adc
sbb
add
sub
aaa
clc
outsl
or
xchg
or
mov
jne
cwtl
pop
fsubrs
insb
cmp
inc
clc
scas
adc
out
fidivs
inc
flds
test
shll
add
aad
lcall
clc
call
leave
and
push
jae
xchg
pop
addl
sbb
mov
clc
mov
out
mov
pop
mov
arpl
aam
cmpsl
mov
xchg
pslld
add
inc
in
adc
mov
fsubp
fisttpl
enter
push
and
cld
neg
incl
cmp
and
xor
adc
dec
js
loop
and
adc
jb
std
in
ljmp
push
mov
stos
xor
push
add
mov
pop
negl
into
sbb
sti
movb
xor
cs
insb
adc
add
ja
or
cwtl
pop
arpl
sub
jnp
jg
mov
mov
adc
sub
lock
mov
and
add
loop
push
fistpll
adc
out
outsl
sbb
fstpl
mov
push
and
add
mov
stos
mov
lcall
add
cmp
mov
jno,pn
into
aaa
into
pop
push
ret
jno
outsl
loop
scas
adc
hlt
out
pop
mov
in
mov
cmpb
js
mov
mov
pop
incl
mov
and
xchg
insb
jge
and
cmp
jo
imul
xchg
jg
shll
and
or
jecxz
inc
outsl
stc
enter
and
add
add
fisttpl
incl
jge
rorb
or
aaa
or
sbb
js
mov
loopne
sbb
les
decl
mov
ret
pop
loopne
lcall
out
fimull
inc
cmp
sub
cltd
sbb
xor
push
leave
test
cmp
inc
mov
mov
in
loop,pt
cmp
jl
jecxz
dec
add
pop
scas
nop
bndldx
inc
sti
xor
push
push
mov
adc
ja
fldcw
adc
xchg
test
pop
or
cmp
jns
add
lock
adcb
jns
roll
inc
out
mov
pop
lea
filds
cmp
imul
add
mov
adc
push
push
adc
lcall
lret
inc
adc
mov
rorb
aas
jecxz
cs
jp,pt
jne
cmp
in
ljmp
clc
test
inc
mov
lcall
pop
lcall
lock
fadds
adc
sub
xchg
jg
shlb
in
lcall
adc
sub
icebp
out
push
clc
push
xor
dec
jg
clc
xchg
clc
or
lret
fisttps
lods
inc
addr16
cli
xchg
mov
into
gs
lcall
icebp
adc
cmp
cmp
les
adc
adc
fistpll
insb
adc
pushf
cmpsl
scas
inc
mov
aam
pop
rcl
insl
mov
sub
subl
sub
xchg
fistpll
sub
push
mov
jle
xchg
test
in
mov
popa
clc
aaa
xchg
mov
lea
xchg
test
dec
dec
dec
and
adc
inc
ficoms
notb
sub
nop
or
ljmp
leave
rolb
or
adc
xchg
and
cwtl
and
cmc
or
rol
out
pop
in
xor
push
jne
push
mov
inc
add
sub
nop
mov
fisubrs
jecxz
inc
and
sub
and
inc
roll
js
cmp
inc
mov
jp
scas
cmp
xlat
mov
push
in
pusha
rolb
mov
je
mov
and
adc
push
outsl
or
add
cs
cmc
push
popa
jg
pop
push
repnz
and
jne
fildl
add
inc
incb
sub
sar
scas
push
add
inc
xorl
xchg
add
and
add
stc
or
push
icebp
shll
cwtl
ret
leave
int
mov
mov
addr16
adc
lea
push
adc
hlt
fildl
inc
cmp
fwait
int3
adc
icebp
jg
cli
and
aam
dec
xor
jl
loop
movsb
mov
mov
les
sub
push
or
dec
out
test
inc
stc
fisttpll
je
fimuls
adc
jge
in
lds
hlt
mov
lods
loopne
jmp
sbb
cmp
ja
dec
fmuls
leave
mov
imul
jmp
push
cld
push
mov
dec
mov
mov
sub
inc
lea
ljmp
stc
xor
inc
rclb
push
in
das
jo
mov
shl
test
ds
std
dec
push
dec
daa
lahf
and
in
cmp
or
jmp
es
push
add
hlt
pop
shlb
jp
out
dec
xchg
aas
sub
outsl
push
es
and
cmpsl
xchg
sbb
push
js
xlat
xchg
or
std
enter
adc
or
shlb
sbb
dec
xor
imul
das
adc
sub
ret
and
lock
outsb
js
ss
cli
cmp
andl
ljmp
pop
sub
jns
xchg
stos
mov
mov
insb
aad
pop
sti
test
cmc
out
stc
pop
subb
std
pop
loope
or
push
sti
jo
pop
and
hlt
aaa
jg
outsb
mov
jmp
or
inc
popa
add
sbb
adc
dec
xor
mov
xchg
decb
push
fisttps
das
sbb
out
xchg
push
mov
outsl
or
lret
and
dec
mov
incb
push
lahf
inc
dec
popa
gs
jbe
sbb
std
js
xchg
mov
cmpsl
outsb
push
loope
aaa
or
sahf
incl
add
sti
pop
fsubrl
jle
push
sub
add
or
stos
push
inc
fmull
xor
call
xor
cmp
add
test
pop
leave
test
call
scas
in
pop
divl
cs
inc
imul
dec
fisubs
fcomip
xchg
mov
repz
shrl
mov
mov
lea
clc
cmp
mov
in
and
shl
pushf
stos
jbe
adcl
data16
bound
dec
aad
dec
icebp
mov
cmp
aad
xchg
popa
mov
movsl
xchg
out
inc
sub
dec
jbe
adc
xor
add
mov
pop
call
push
dec
sub
int3
loopne
jno
jne
faddl
mov
adc
iret
test
fnstenv
test
push
data16
mov
pusha
jl
pop
cmp
test
pop
stc
lea
push
fdivs
outsl
adc
cmpb
add
add
and
ss
inc
pop
push
ds
pop
enter
add
shll
jae
pop
nop
mov
lods
pop
push
into
jecxz
daa
in
aaa
mov
pop
jg
cmc
stos
clc
addl
call
pop
nop
mov
clc
scas
shlb
aas
mov
and
dec
cs
jge
fildll
jns
push
lcall
ja
mov
jmp
pop
mov
fdivs
icebp
in
or
cmpsb
inc
lock
jp
jl
mov
jle
push
jl
xchg
imul
push
in
jb
pusha
dec
adcb
dec
xchg
mov
jmp
add
test
pop
push
stos
lea
inc
nop
sbb
dec
rclb
decl
mov
bound
out
lods
push
push
jl
stos
lret
aaa
add
subb
mov
sarb
add
les
imul
call
out
inc
cmp
ljmp
daa
inc
das
sahf
jg
hlt
jg
dec
jb
inc
notb
add
out
xlat
push
or
addr16
dec
xor
clc
rclb
mov
inc
lds
jg
jbe
mov
dec
mov
ret
nop
sub
js
stos
mov
incl
stc
jns
scas
lahf
shl
lock
add
sbb
sbb
pop
jmp
sub
sbb
pop
loop
aaa
aam
cwtl
fcmovnbe
push
test
aas
test
jg
add
pop
and
cld
adc
mov
push
mov
cmp
movsb
mov
in
rcl
popl
mov
adc
outsl
icebp
mov
scas
jae
into
insl
test
jb
mov
adc
test
add
orb
mov
fbld
rorb
aaa
mov
push
inc
lea
cmp
xor
mov
orl
loopne
cs
fbld
adcb
inc
cmp
mov
push
sbb
jg
jbe
mov
cmp
stos
sub
adc
add
jp
mov
dec
mov
sbbb
outsl
rorl
push
std
fists
rep
imul
fmull
aad
clc
das
icebp
lods
mov
sbb
in
cs
push
xchg
out
add
fld
call
xchg
adc
adc
lcall
cmpsb
push
mov
ljmp
or
movsl
mov
pop
push
and
popf
dec
pop
movsb
push
mov
pop
loopne
ljmp
arpl
cwtl
add
lret
cmp
mov
adcl
push
imul
mov
xlat
jo
inc
xor
push
dec
decl
or
push
insb
mov
pop
dec
mov
jle
pop
mov
adcl
jge
jg
mov
outsl
or
scas
inc
mov
lret
cmp
push
cwtl
lock
outsl
jmp
and
pop
xchg
push
lock
sbb
ret
fwait
and
mul
int
adc
js
mov
ret
fs
push
aas
inc
or
rolb
testb
lock
jo
aas
in
shr
mov
adc
insl
dec
or
xchg
movsl
mov
jb
insb
in
ljmp
jmp
mov
das
mov
das
dec
aad
xor
xchg
pop
ljmp
fisttpll
cwtl
pop
jp
lea
loopne
sar
iret
adc
and
mov
in
aaa
mov
push
test
out
rcll
or
mov
pop
icebp
and
mov
lds
inc
in
lods
and
xchg
sbb
fcmove
sbb
outsl
mov
inc
cmp
negb
jge
addl
adc
decl
mov
lahf
repz
or
jo
cmp
jg
ds
mov
rorb
cli
mov
sahf
sbb
inc
adc
fstl
sti
add
sbb
sbb
sarb
push
fs
nop
and
inc
lahf
adc
add
out
loop
loopne
sub
push
scas
inc
jno
adc
mov
incl
lock
cmp
jne
xchg
pusha
jbe
sub
xchg
jle
mov
popf
mov
stc
mov
push
mov
jmp
add
mov
jge
cwtl
movl
cld
inc
fimull
push
nop
and
push
cmpsl
mov
adc
pop
stos
cmpsb
xor
stos
pop
sti
sbb
in
call
jnp
ss
out
push
dec
dec
insl
lds
cmp
adc
xor
bound
stos
xor
aaa
imul
push
sub
ss
test
enterw
mov
sbb
jecxz
xlat
or
add
lret
cltd
xor
mov
jbe
adc
xor
cmp
cltd
xchg
rclb
call
ljmp
or
push
xchg
adc
adc
test
xchg
or
in
clc
or
cmp
jmp
clc
stc
mov
push
mov
fwait
inc
jnp
loope
jae
add
inc
sbb
or
int3
mov
push
lret
cli
leave
add
lods
adc
fs
mov
push
loope
push
ret
add
jb
popf
out
test
pop
jbe
mov
addr16
xor
and
cmc
push
fstl
adc
das
sti
or
cld
movb
inc
aam
shr
push
hlt
cld
inc
daa
mov
pop
push
or
lock
sahf
mov
test
sbb
fs
xlat
pop
mov
push
aas
cmp
loop
ja
push
sahf
and
adc
das
in
mov
int3
push
xchg
add
lea
outsl
sub
push
sti
adc
fs
mov
gs
dec
pop
loopne
in
andb
cmp
lret
push
xor
dec
in
ret
fisttpll
xchg
jecxz
mov
ss
rolb
pushf
gs
ret
test
push
orl
test
cld
aas
aad
jge
lods
dec
fidivrl
jle
adc
add
mov
or
xor
dec
and
jg
icebp
add
sub
mov
cmp
scas
mov
jne
clc
cli
push
xchg
orb
mov
clc
xor
js
xchg
test
adc
sub
mov
punpckhdq
ret
daa
cmp
adc
cmc
mov
movsb
jle
inc
in
jb
jno
mov
cmp
xchg
pop
xchg
or
pop
popl
cmp
mov
shlb
xchg
mov
std
js
roll
bound
push
xchg
xchg
cwtl
mov
add
fwait
mov
pop
dec
clc
mov
add
or
fcomps
and
pop
xor
add
add
insb
cmp
and
push
mov
push
hlt
fwait
cmp
inc
dec
sub
pop
rorl
mov
pop
and
jno
adc
orb
push
mov
inc
mov
adc
mov
or
push
dec
leave
addb
push
test
movb
xchg
insb
mov
xor
sbb
xor
mov
xlat
pushf
dec
aam
cmp
or
add
lock
jecxz
push
in
scas
pop
stos
push
iret
stos
cli
mov
call
add
or
inc
mov
add
ret
sub
sub
add
cmpsl
adc
test
sub
negb
out
arpl
pop
mov
mov
cli
not
sbb
mov
mov
sbb
push
xchg
movsl
fldl
jl
sbb
fildl
out
xchg
and
mov
dec
sbb
sti
sbb
lods
and
nopl
jbe
add
push
cmp
popa
enter
ror
movsl
scas
rclb
mov
rcrb
jg
xchg
test
inc
lock
jno
push
out
xchg
cmp
pop
stos
sbb
inc
add
fsubp
add
cmc
jg
push
rorl
jmp
add
sub
in
cmp
fistps
sbb
mov
mov
daa
xchg
orb
loope
icebp
add
daa
ds
shll
mov
mov
orb
cmpsl
add
jae
mov
aad
dec
sbb
orb
mov
clc
mov
lds
imul
int3
les
lahf
lods
sbb
lcall
inc
pop
jmp
pop
loop
xchg
insl
mov
mov
mov
daa
cmpsl
mov
test
data16
loop
je
jge
mov
push
pop
icebp
rorl
add
cmp
mov
push
jmp
add
aas
fsubrs
sbb
pop
or
call
push
es
push
sbb
or
sub
xchg
pop
sti
mov
xchg
xlat
dec
xor
aaa
inc
xchg
movl
lahf
popa
push
mov
loopne
cmp
and
repz
test
cmp
ds
clc
pop
jnp
and
xor
rorl
pop
ja
and
in
xchg
ss
repz
mov
test
jmp
loope
mov
ds
test
xor
cwtl
arpl
cld
mov
jno
adc
test
jnp
jle
inc
clc
mov
jb
push
test
rorl
fldl
test
mov
adc
jne
jnp
or
xchg
jl
aas
inc
jecxz
ret
and
shrl
inc
fsubl
jl
repnz
lock
lds
xor
and
inc
les
jle
lret
mov
xchg
jb
shr
in
fcompl
cmpsb
or
outsb
pop
adc
cld
loop
dec
and
cmc
inc
sub
sub
test
inc
jmp
sahf
sub
test
mov
shlb
insl
scas
or
stos
in
filds
arpl
stc
jl
add
testl
jle
mov
or
sbb
xorb
loopne
test
cmpb
dec
xchg
aam
out
stos
in
fldl
cltd
lock
lea
clc
push
cmc
push
or
adc
popf
mov
imul
nop
pop
in
adcb
cwtl
or
push
cmp
inc
jg
ljmp
jge
mov
mov
xchg
ret
and
mov
mov
sub
xor
rolb
xor
lock
push
jg
out
mov
in
aaa
dec
stc
out
fdivs
loopne
or
push
mov
cwtl
ljmp
pop
outsb
jnp
mov
out
fisubrl
add
inc
mov
cmp
or
sub
enter
call
push
mov
addb
sub
and
mov
das
cwtl
xchg
nop
sub
aaa
cmc
mov
popa
scas
mov
jg
inc
jge
inc
adc
add
outsb
das
aaa
jne
imul
sub
imul
inc
ljmp
iret
add
jnp
mov
stc
inc
sti
jns
repnz
aad
es
jmp
insl
mov
enter
cmc
xchg
fmuls
xchg
mov
pop
sbb
xor
sbb
shrl
jp
lods
decl
shl
cmpb
add
jno
das
xor
and
or
and
push
loopne
mov
mov
jecxz
mov
jecxz
pusha
fistpll
lcall
jg
aam
jecxz
sti
fistpll
mov
pusha
idiv
pop
stos
sub
scas
adc
incl
cld
setb
or
lret
cmpsb
and
pop
test
or
dec
xlat
dec
cmp
mov
jecxz
inc
jp
jg
push
jbe
aam
adc
cmpsl
mov
cs
lods
xchg
dec
and
or
jl
mov
xor
rcr
fdivl
rorl
and
arpl
dec
dec
sbb
inc
mov
bound
es
outsb
je
or
jo
inc
fcmovnu
mov
loopne
add
jg
lret
outsb
pop
ds
imul
or
mov
and
sub
push
inc
or
mov
stos
sbb
jecxz
pusha
push
popf
mov
icebp
iret
xchg
pop
adc
xor
and
loop
push
std
add
out
inc
sub
lock
outsl
jge
lea
sbb
adc
jae
daa
loopne
dec
or
inc
jl
aas
shlb
xchg
cmp
sub
mov
add
sub
aas
outsb
mov
xor
mov
dec
push
mov
sbb
addl
xor
push
jo
mov
xor
aas
jae
and
mov
push
cwtl
dec
lock
sub
int3
xchg
jge
cmp
popa
cmp
mov
and
mov
mov
push
add
adcb
pop
sahf
xchg
bound
push
test
daa
loope
fdivs
push
cmpsl
popf
push
pop
mov
pop
mov
lds
mov
repz
lock
and
cmp
push
hlt
or
mov
xchg
call
mov
jmp
fisttpl
repnz
or
mov
xchg
mov
and
xor
aam
les
or
decl
add
mov
sub
rcl
or
xor
les
sbb
xchg
call
movsl
jno
mov
jne
jns
inc
fbstp
or
loope
cmp
add
lret
mov
lds
cmpsl
test
adc
xor
xchg
mov
fadd
sub
inc
in
test
adc
xor
repnz
push
xchg
lret
faddp
pusha
gs
lds
pop
sarb
call
fbstp
in
cmc
jo
mov
insb
adc
pop
sti
lock
cs
clc
in
inc
in
mov
cld
sbb
aas
and
arpl
dec
dec
pop
fstp
aad
mov
and
arpl
outsl
adc
add
stos
pop
xor
shrb
mov
lea
pushf
cli
int3
call
nop
aam
sbb
test
mov
std
or
and
push
xchg
leave
jle
mov
cmp
fadds
iret
lret
mov
mov
adc
test
sub
adc
xor
xchg
jg
ljmp
inc
test
nop
loopne
sbb
daa
add
inc
sbb
lahf
or
lock
mov
inc
int3
aad
mov
addl
test
mov
pusha
dec
in
js
pop
ficoml
adc
mov
lods
pop
or
int
int3
outsl
xor
push
shrl
adc
jo
jmp
jg
sbb
inc
sbb
push
mov
dec
repz
or
jno
and
insl
icebp
call
mov
push
fisubl
gs
pop
cmpsl
mov
rorl
or
shl
xchg
outsb
lahf
xor
mov
popf
outsl
test
negl
jmp
and
push
loopne
sbb
loopne
ret
mov
xchg
jg
jb
cmp
jb
sbb
xor
movsl
cwtl
je
pop
jmp
jnp
sub
pop
filds
mov
mov
popa
add
sti
incl
cwtl
outsb
sub
mov
cltd
adc
sahf
imul
mov
or
fcmovb
and
daa
dec
stc
cmpsl
cmp
xor
mov
mov
adc
dec
test
or
push
add
mov
mov
add
addr16
aaa
mov
xor
mov
ffreep
decl
pop
decl
xchg
enter
outsb
or
fstl
jg
mov
sub
mov
ret
pop
lock
push
xor
loopne
sahf
rcr
ss
jo
dec
push
sub
jo
xchg
jle
and
inc
repnz
xor
fucomi
lds
xor
jg
pop
jb
mov
das
nop
negb
movsl
jg
pop
mov
or
movsb
mov
shrb
mov
sbb
push
xor
es
ja
insl
push
std
aaa
fcomps
inc
push
fildl
in
test
test
sbb
outsl
or
sbb
es
jne
das
cld
shll
outsl
or
sbb
aas
fimull
notl
ljmp
pop
mov
dec
neg
mov
inc
jns
push
test
xchg
in
popf
mov
rclb
or
push
loop
xor
sub
aad
sub
negl
imul
movsl
add
enter
or
pop
mov
cmp
adc
add
andb
or
push
scas
inc
int3
xor
test
mov
push
adc
or
shll
cmp
bound
inc
outsl
push
outsb
pusha
mov
adc
or
add
fistpll
xor
xlat
fisttpl
in
mov
or
add
inc
mov
mov
push
fcmovnb
push
and
xor
pop
sbb
fucom
add
rcrl
inc
mov
mov
dec
jmp
addr16
aam
andb
addb
and
sub
mov
xchg
in
cmp
dec
fwait
mov
das
or
sbb
fs
pushf
shll
mov
bound
mov
adc
cwtl
sub
jno
pop
xor
add
repz
jbe
push
add
dec
aam
js
or
orb
rorb
rcrl
fistps
adc
insl
add
fsubl
sbb
lahf
hlt
push
roll
test
aaa
loopne
adc
inc
into
loopne
and
add
push
mov
sbb
adc
or
mov
pop
std
mov
or
or
or
push
pop
sbb
adc
stos
push
add
shlb
add
inc
jp
ljmp
add
in
inc
or
adc
scas
aam
xor
jecxz
sub
push
add
imul
aam
mov
mov
iret
jbe
mov
xor
jne
dec
adc
out
or
or
cmp
das
push
jp
and
push
pop
in
adc
rclb
adc
pusha
or
shlb
jmp
iret
or
loope
sbb
int3
or
push
pop
pop
xchg
sbb
cmp
pop
and
push
xor
push
add
clc
jmp
inc
mov
iret
outsb
fcmovnb
xchg
cmp
add
and
les
aad
push
jg
cltd
lock
data16
loop
rcr
cs
int
and
rep
mov
xor
add
pushf
imul
jg
loop
sub
addr16
mov
mov
mov
jg
gs
xchg
int
std
das
loope
xchg
mov
add
push
mov
aaa
mov
jns
test
imull
mov
ds
inc
sbb
ficomps
push
lods
or
bound
lods
mov
test
adc
pushf
clc
movsl
lock
pop
pop
in
leave
and
mov
jno
dec
cwtl
adc
xor
lahf
jo
or
popa
push
aam
push
dec
js
add
loope
test
dec
les
andb
cmp
jmp
fstpl
jns
jmp
adc
mov
fsts
negb
mov
test
cmp
mov
sbb
ljmp
push
repnz
cmpl
inc
cmc
test
mov
out
xchg
lahf
adc
loopne
rol
rol
mov
rcll
sub
mov
sti
inc
jmp
repnz
addr16
lcall
add
dec
sbb
adcb
jo
xchg
inc
inc
enter
cmp
mov
xchg
mov
lret
lds
std
js
jne
inc
push
or
push
filds
movsb
jb
fsubrp
js
fildll
cmp
xchg
push
mov
rclb
cs
pop
clc
inc
outsb
and
mov
cmpsb
ljmp
push
ret
rorl
andl
jb
adc
or
xchg
insl
adc
add
wrmsr
sbb
jbe
outsl
push
mov
pop
repnz
xchg
sbb
std
and
sub
cli
pop
in
pushf
imul
dec
rorl
push
or
xchg
xchg
pop
lock
clc
xlat
sbb
pop
push
sub
adc
js
mov
or
shll
es
iret
stc
mov
mov
sub
dec
inc
fcoms
mov
xor
int
jp
or
sti
fstpt
cmp
lahf
jns
and
push
pop
sbb
push
jl
push
jl
rcrb
inc
cld
lods
cmp
jg
and
push
popf
stos
push
aaa
jae
repz
mov
in
push
xor
sub
fwait
jb
imul
sub
push
add
add
cwtl
loopne
pop
lds
outsl
lock
inc
mov
les
das
enter
or
jmp
scas
mov
cmpsb
stc
sahf
lock
sahf
sub
rolb
mov
xchg
stos
stos
add
mov
std
mov
fldt
mov
jle
jns
jle
cmp
xor
mov
test
push
pusha
cmp
in
test
or
xchg
and
dec
inc
xor
insl
xchg
or
cs
ljmp
aas
xchg
xchg
in
shll
push
movsl
push
xlat
dec
cld
mov
inc
lret
cld
hlt
add
mov
leave
test
lds
jo
adc
pop
fstpl
jg
cmpsl
pop
or
sbb
ljmp
sub
dec
gs
enter
dec
fdiv
jno
cmpsb
js
cld
jecxz
sbb
and
mov
mov
jns
call
shrb
and
pop
and
xchg
add
xor
sub
add
rolb
xorl
push
repnz
jne
adc
adc
or
addb
lods
dec
mov
mov
pop
test
mov
cld
and
jno
sahf
adc
or
mov
jg
mov
push
orb
inc
and
pop
or
int
xor
les
push
mov
out
sbb
mov
push
push
mov
jmp
repnz
xor
jecxz
stos
and
lea
jge
xor
ds
cmpsl
clc
jb
dec
dec
xor
cmp
xlat
pop
shll
call
in
test
int
pop
mov
aas
pop
adc
cs
xchg
mov
pop
push
mov
xchg
push
sub
xor
sbb
mov
ret
pop
jnp
rcrb
call
mov
push
adc
cmc
subb
jge
aam
out
adc
push
fcomps
and
lods
jno
out
mov
movsb
shrb
adc
jg
fidivrl
shlb
sub
or
stc
adc
popa
ds
adc
test
out
cld
or
sarb
fwait
aaa
sbbb
clc
sbb
jge
sub
or
mov
das
data16
fadds
sub
add
jne
cltd
jb
jp
sti
cmp
push
hlt
sub
jo
sar
dec
adc
jns
or
in
lahf
cmp
fimull
jg
testl
repnz
adc
jge
push
fcomp
and
stc
mov
andb
or
mov
xchg
adc
jns
mov
out
das
push
xor
cmpsb
sti
push
in
in
arpl
pop
fs
and
push
mov
sub
insb
call
sub
pusha
adc
add
test
add
arpl
fsubr
xor
dec
and
ret
sbb
test
repz
inc
je
push
lds
lds
adc
xchg
subb
cmp
data16
in
mov
mov
aaa
and
loopne
sbbb
test
aas
inc
insl
fmuls
mov
insb
icebp
cli
add
popa
inc
iret
push
int3
es
test
fisubs
adc
mov
in
add
aad
rorl
loopne
insb
push
addr16
sbb
addr16
mov
dec
es
popa
test
test
call
adc
js
cli
lret
ss
xor
movsb
or
inc
add
or
push
shll
cli
and
jo
out
jb
pop
push
mov
sbb
lods
shl
mov
cmp
jne
lret
outsl
sbb
inc
push
mov
push
dec
ljmp
inc
jmp
hlt
dec
jge
or
adc
jmp
in
je
push
adc
icebp
je
lea
cmpsl
mov
sbb
les
mov
cmp
test
repnz
cmp
js
xchg
inc
jo
xchg
cmpsl
mov
popa
push
loopne
xor
adc
and
vshufps
call
test
test
mov
les
arpl
push
sbb
stos
shll
xor
daa
add
shr
push
repz
stos
xchg
test
fsubs
push
fiadds
and
inc
in
pusha
sub
fcom
inc
je
leave
cli
popa
mov
and
pusha
test
jae
jns
jne
call
adc
adc
outsb
jo
cli
and
or
icebp
nop
inc
and
sub
in
dec
fs
movsb
adc
or
cmp
xchg
add
lahf
decl
enter
repnz
lock
cmp
adc
pop
fidivrs
mov
adc
xchg
push
and
lds
test
pop
push
and
mov
sbb
inc
aaa
clc
incl
sub
add
adc
loopne
dec
sbb
adc
cld
enter
lods
mov
loope
out
add
mov
sub
subb
leave
out
push
js
cmp
dec
or
push
mov
movsl
ljmp
stc
inc
lods
add
in
dec
loope
popa
and
inc
or
sub
arpl
icebp
in
mov
jno
add
sub
cmp
out
mov
cli
and
mov
jle
lock
iret
mov
sub
xor
pop
dec
lcall
xchg
or
je
lock
sub
test
dec
push
push
call
cmp
adc
ja
dec
adc
sub
lret
insl
shrl
ret
jb
add
movsl
cmp
ja
pop
test
cwtl
rcrb
pop
mov
in
push
enter
jmp
test
mov
sub
or
outsl
and
jbe
mov
adc
sbb
mov
in
push
push
inc
pusha
popa
cmpsl
sub
sbb
test
rcl
rcll
xor
aas
sbb
inc
rclb
mov
push
mov
or
insb
in
call
inc
push
fiadds
dec
dec
int3
and
jae
and
dec
adc
scas
enter
sbb
sub
xchg
jns
lods
fwait
call
inc
xchg
insb
mov
fs
bt
xchg
mov
cmp
stc
enter
pushl
jle
mov
aad
or
jae
movsb
or
xchg
sahf
das
inc
inc
mov
xor
dec
jmp
and
inc
rcll
cmpb
jae
mov
xchg
xor
sub
mov
xorb
jbe
ffreep
jb
lds
sbb
sub
xchg
mov
mov
mov
fbld
dec
push
or
pop
jecxz
dec
cld
inc
lcall
int
mov
mov
out
pop
pop
push
and
lods
cmp
movsb
test
mov
out
adc
mov
sti
out
jle
push
dec
inc
leave
add
outsl
add
jne
or
push
fs
cltd
sub
js
xchg
or
push
push
inc
int3
imul
andb
mov
cmp
scas
idivb
lock
leave
or
imul
or
adc
adc
loopne
stos
int
sub
adc
inc
xor
pop
imul
sbb
add
mov
loopne
lret
xor
hlt
orb
call
xor
pop
xor
inc
mov
test
dec
sub
pop
adc
test
sarl
or
add
pop
dec
mov
add
fwait
adc
cmp
add
loopne
ficoms
jg
push
into
mov
mov
fldenv
mov
and
or
shll
sub
sub
sbbl
int3
adc
add
push
adc
dec
insl
push
gs
cmp
and
cmp
int3
bound
lahf
stc
fcoml
repnz
add
add
sahf
mov
fisttpll
loopne
mov
leave
bound
sub
dec
inc
std
out
inc
in
mov
mov
inc
jo
pop
movq
int
int
and
mov
and
xchg
adc
cwtl
jp
in
faddl
adc
push
sbb
shl
and
sub
push
inc
adc
orl
das
jno
cmp
repnz
sub
and
add
and
adc
pop
jno
enter
out
push
stc
data16
and
aam
stos
cmp
icebp
jne
dec
jb
ret
mov
cmc
mov
cmpsb
add
inc
dec
clc
fisubl
inc
cld
cmp
arpl
rorl
inc
insb
jl
pop
xor
push
ljmp
dec
andb
add
lret
mov
pop
inc
cwtl
mov
movsb
js
jmp
stc
jmp
lea
sub
inc
xchg
adc
jo
add
orb
add
cmc
and
adc
jmp
push
adc
and
popa
fwait
call
clc
add
jmp
mov
in
aaa
sub
in
mov
lret
sbb
xchg
mov
fldl
adc
insb
push
das
or
cs
push
inc
pop
les
mov
push
in
pop
push
adc
or
xchg
hlt
add
mov
das
hlt
adc
adc
mov
jbe
push
push
sub
hlt
sub
das
and
mov
dec
sub
enter
fnstenv
push
mov
mov
enter
daa
inc
loope
adcb
test
cmp
ret
cmpl
or
dec
cli
js
add
add
lock
std
dec
stos
pop
adc
or
adc
adc
leave
ret
pop
cmpsb
in
mov
imul
aam
or
je
pop
mov
es
mov
jmp
out
outsb
rcrb
loopne
xor
dec
icebp
arpl
cmp
dec
enter
dec
mov
mov
movsl
rorl
movsb
pop
cmp
and
and
sahf
adc
adc
mov
xchg
jae
and
subb
xor
add
add
idivl
sub
iret
pop
xchg
inc
jno
cltd
enter
ljmp
cli
jmp
rcl
add
add
and
pushf
cmpsl
push
ret
adc
inc
popf
sbb
push
dec
mov
bound
cmp
adc
addr16
add
push
popf
sub
into
stos
popl
roll
sub
int
adc
bound
add
or
pop
lret
cmp
sub
movl
add
adc
or
mov
fldl
inc
out
jge
mov
mov
push
pop
xchg
fbld
stos
add
add
add
jo
mov
mov
pop
rcrb
sbb
aad
or
into
shl
lock
dec
push
add
and
or
cli
dec
shll
sbb
bound
fwait
xor
pop
adc
push
sbb
push
cmp
add
xor
xchg
stos
inc
addb
jmp
adc
or
pop
sahf
mov
adc
fisubl
xchg
add
mov
xchg
push
hlt
stos
mov
jecxz
push
push
out
fwait
imul
pop
mov
movsl
addb
jne
call
pop
xor
mov
in
jecxz
dec
cmp
movsb
sub
hlt
mov
adc
cmp
es
add
adc
imul
pusha
and
popf
xchg
fistl
mov
loope
push
stos
cmp
es
pop
push
stos
and
mov
pop
enter
outsl
je
dec
dec
jae
sbb
dec
test
cmpb
shl
adc
lods
xor
and
ss
mov
jnp
leave
add
ds
call
or
inc
push
xchg
lcall
iret
imul
cmc
or
push
aam
loope
outsl
and
mov
shlb
inc
add
cmc
pop
fucom
dec
inc
pop
clc
idiv
enter
xchg
push
add
orb
and
mov
push
jl
push
pop
test
inc
mov
inc
sbb
cmc
cltd
ret
add
push
mov
and
add
imul
xchg
and
out
dec
adcb
es
jl
pop
lcall
add
pop
jnp
sbb
jmp
pop
out
sub
icebp
xor
pop
xor
js
mov
xchg
mov
add
xchg
cli
insb
sahf
add
emms
push
sub
das
push
js
mov
sbb
inc
push
sbb
push
mov
dec
sahf
nop
mov
popa
mov
or
call
xor
pop
mov
mov
ljmp
in
mov
sbb
adc
lods
adc
pop
cwtl
xor
mov
js
fisubrl
inc
mov
test
rorl
cli
and
arpl
fcompl
inc
xor
icebp
es
pop
lods
int3
movsl
test
andl
nop
in
sahf
pop
sub
xchg
mov
pop
cltd
fbld
testb
push
pop
and
push
into
scas
push
mov
movsb
push
pop
or
add
pop
arpl
and
jp
movsl
mov
dec
aam
add
mov
stc
rcpps
fbstp
stc
inc
lds
and
test
neg
push
sbb
popf
shlb
or
sbb
ljmp
scas
cmp
clc
dec
and
inc
cmpsb
pop
iret
sbb
mov
fildll
and
xlat
xor
ss
pop
xchg
add
xchg
fs
mov
xchg
in
pop
add
xchg
fsubrl
subb
sbb
outsb
add
notb
xchg
negb
mov
push
mov
gs
outsl
mov
pop
movsb
rclb
fmull
xchg
clc
les
push
xchg
jnp
pop
inc
cmp
mov
mov
inc
and
xchg
pop
pushl
xor
into
mov
mov
bound
sub
jecxz
arpl
inc
sbbb
sbb
jge
push
add
cli
cmc
inc
xchg
lcall
and
xlat
sub
loope
leave
xchg
shlb
idiv
jecxz
adc
adc
xlat
sub
shl
loop
das
adc
iret
fadd
pop
arpl
repnz
adc
lea
mov
fnsave
add
sbb
fildll
clc
and
repz
mov
ljmp
mov
and
enter
and
and
jg
jae
push
add
jle
and
pop
das
mov
xchg
int3
loopne
cmp
outsb
les
mov
push
out
stc
inc
cmp
push
pop
rorl
xlat
or
sub
or
mov
push
call
mov
mov
pop
cld
aaa
fisubs
sub
mov
cmp
aas
fildl
mov
hlt
xchg
fcmovnbe
cmp
lods
dec
sub
cmpsl
lock
rorb
shrd
and
mov
les
mov
jae
aam
sub
add
iret
inc
bound
mov
inc
or
imul
jne
and
and
orl
fsubrs
outsl
sbb
or
mov
lea
mov
fs
movsb
sub
addr16
lret
scas
pop
jnp
cmovo
add
pop
inc
lcall
xor
add
adc
mov
jg
hlt
sub
mov
mov
fs
lret
jnp
std
xchg
fs
jmp
mov
rorl
in
outsb
loope
movsb
icebp
clc
pushf
jp
add
add
lret
adc
or
jno
jo
pop
add
or
movsl
mov
push
sbb
adc
lret
in
add
adc
or
cmpsb
int
xchg
jmp
push
pop
ret
add
out
or
inc
add
mov
dec
dec
push
popl
push
insl
add
jg
cmp
and
xor
mov
inc
enter
cwtl
jb,pt
mov
pop
add
je
jle
inc
add
adc
pop
dec
je
jno
inc
cld
sbbl
push
pop
and
out
fisubl
fimull
and
incb
add
push
xchg
aas
into
jge
aaa
mov
and
shll
pop
repnz
mov
neg
sbb
mov
daa
out
out
push
mov
push
inc
jg
ljmp
sub
insb
lea
and
dec
xchg
cli
xor
pop
cmp
add
mov
xorb
cmpb
inc
jmp
or
cmpsl
fcmovnbe
sbb
or
pop
out
fs
add
arpl
sbb
dec
mov
rorl
leave
sub
fistpll
pop
and
xchg
and
int3
adc
jb
adc
pusha
lock
ljmp
ret
in
mov
xor
push
pop
ljmp
jl
lret
dec
les
xchg
pusha
std
jbe
or
sub
push
jne
mov
or
pop
cmp
dec
popl
pop
mov
pop
shrb
fisttpll
shlb
jb
or
inc
pop
mov
test
jb
ficomps
aam
int
shl
shrl
mov
ds
inc
sbb
push
xor
mov
out
and
mov
adc
mov
jl
add
dec
mov
adc
lret
pop
add
inc
int3
cmp
add
repz
sub
roll
push
xlat
repnz
fists
inc
pop
or
sbb
adc
and
add
push
iret
mov
cmp
es
dec
jmp
sbb
aas
adc
fwait
xor
jge
or
dec
pop
aam
and
rol
jecxz
and
inc
and
aaa
inc
jb
sub
pop
inc
push
fistl
enter
fiaddl
cwtl
add
or
addr16
lcall
call
shrb
xlat
or
pop
ja
fs
mov
add
shlb
xor
jl
enter
out
mov
sbb
inc
jb,pn
lret
sub
push
jl
mov
cmp
pop
adc
cmp
fst
dec
push
xchg
mov
int3
push
stos
sbbl
xor
nop
dec
inc
inc
fistpl
scas
pop
fmull
jb
xorb
push
int3
jbe
adcl
js
xchg
imul
mov
mov
add
jp
repnz
mov
subb
out
mov
roll
inc
inc
dec
jl
mov
cmpsb
sub
sub
dec
loopne
and
popl
iret
repz
add
sub
loop
aam
shlb
les
jns
add
and
sub
aam
lcall
pop
sarb
sbb
xor
movsb
addr16
adc
insl
cmpsb
mov
sbb
je
xor
or
js
fs
mov
xchg
in
call
js
or
jl
cs
push
mov
push
or
dec
push
cwtl
das
push
xchg
inc
adc
aas
push
pop
and
data16
call
in
icebp
pop
cmp
aas
aad
icebp
nop
pop
sub
mov
js
xchg
out
pop
inc
stc
sbb
sub
loope
lds
dec
dec
cmp
dec
into
pop
mov
addl
pop
cmp
mov
inc
into
pusha
sub
add
faddp
push
outsb
in
insl
add
dec
in
rorb
fmull
orl
dec
adc
mov
or
neg
add
add
insl
cmpl
aas
and
cmp
rcll
inc
adc
pop
mov
scas
gs
dec
or
sub
int3
fldenv
add
xrelease
ljmp
repz
pop
push
ret
cmp
cltd
sub
mov
sub
mov
add
adc
mov
mov
push
jno
addr16
jecxz
and
gs
push
daa
adc
pop
shl
push
pop
pop
pop
test
push
dec
sbb
repnz
xor
js
int3
sub
pop
cmp
push
leave
test
cmp
les
iret
cmp
mov
sbb
fwait
fwait
enter
push
inc
xchg
lea
popf
and
cli
scas
mov
mov
repnz
shlb
imul
and
jbe
mov
aad
aam
adc
push
out
call
and
enter
and
aam
adc
aad
xor
inc
adc
int
add
add
or
aas
push
mov
and
inc
daa
lock
jmp
add
push
xor
jo
loopne
roll
lret
daa
ret
jmp
scas
sti
adc
fwait
or
in
add
push
int
fwait
call
xchg
loopne
ds
inc
test
into
sbb
js
dec
insl
mov
scas
loop
mov
push
pop
outsb
mov
jge
xorb
dec
int3
dec
and
pop
or
push
xor
clc
pop
add
mov
aam
or
je
inc
popf
shrb
fisttpl
pop
clc
sti
nop
mov
lahf
add
lock
adc
pusha
push
in
iret
cmp
test
aaa
adc
mov
ret
sub
lret
test
sub
rcrl
leave
add
adcl
sbb
jg
sub
adc
add
xchg
dec
pop
les
ljmp
loopne
xchg
in
mov
xlat
call
mov
divb
shrl
inc
pop
scas
es
stos
inc
mov
xchg
dec
cltd
jno
jl
pop
xchg
or
add
push
sbb
mov
sbb
add
sub
aas
add
pop
xchg
cmp
push
sub
push
jmp
lock
mov
out
loop
cld
lds
mov
lahf
sbb
push
cmp
popa
add
and
jge
sbb
add
sbb
xchg
sub
mov
dec
push
rcrl
inc
pop
aam
aad
push
dec
jo
daa
imul
gs
cld
add
xor
mov
stos
mov
sub
gs
xor
decl
fstpl
xor
pop
pop
aad
add
sbb
and
pop
mov
nop
bound
bnd
pusha
fnstsw
xor
shl
test
jo
loopne
add
int
ja
scas
imul
dec
aam
jnp
add
sub
dec
jle
cwtl
ljmp
add
mov
adc
fst
and
repnz
in
xchg
jae
and
cli
mov
adc
push
cmp
ljmp
and
incl
inc
sbb
xor
lcall
mov
js
jb
jno
das
cmc
movsl
incl
cmc
das
add
and
cmp
daa
stos
shl
fisubrs
in
mov
or
xchg
clc
mov
mov
push
mov
jb
mov
aad
loop
loop
sahf
lock
sbb
xchg
push
adc
fsubl
and
mov
daa
ret
cmp
daa
es
xchg
xchg
push
jmp
mov
mov
xchg
dec
jo
sbb
sub
add
or
pop
or
int3
imul
test
mov
mov
pusha
cli
pushl
mov
lock
imul
or
ret
push
mov
jmp
sarb
inc
popf
xor
sub
ja
pshufw
mov
pop
rol
das
les
pop
fmull
mov
or
sbb
cli
dec
js
mov
jo
in
addb
adc
adc
pop
rcr
sbb
inc
les
push
dec
cmpsb
aaa
and
push
imul
pushf
shll
pop
sahf
aas
test
inc
fistpll
imul
push
in
inc
and
fldenv
cld
mov
or
data16
movsl
sbb
cmp
xorb
cmpsb
sbb
nop
adc
das
mov
jle
test
dec
les
movsl
xor
jg
pusha
arpl
cmpb
and
mov
push
adc
jns
adc
or
dec
mov
nop
push
and
push
sar
or
jno
mov
push
push
mov
lcall
mov
add
inc
inc
lock
decb
mov
clc
repz
in
lods
fwait
mov
xor
jg
lds
repz
inc
test
sbb
nop
push
jp
xchg
and
js
lcall
sub
and
cmpb
mov
loopne
pop
dec
adc
jns
and
cmpsl
jo
ficoms
push
pop
popa
inc
fisubl
inc
fs
xor
or
mov
push
ljmp
sbb
pop
mov
movsb
sub
sub
test
add
sbb
mov
and
loopne
insb
pop
mov
std
and
mov
in
fdivrl
iret
cmp
sub
int3
je
jb
cmp
adc
xchg
mov
js
iret
mov
mov
ja
in
xor
ret
dec
xchg
sub
cmp
and
cmpsl
dec
inc
scas
mov
test
pop
je
test
mov
js
insl
xor
mov
mov
dec
inc
adc
and
fsubr
mov
jb
add
cmp
mov
dec
sub
mov
lds
call
nop
xchg
sub
sub
or
fnstenv
je
mov
loop
jp
fstps
fucomp
outsl
jns
cmp
lods
cmp
ja
xorl
sbb
pop
clc
push
or
xchg
outsb
pop
ljmp
add
pop
add
sbb
mov
push
mov
aas
popa
je
jbe
rcll
lods
pop
sub
mov
sbb
mov
out
and
aas
hlt
pop
and
inc
rcrl
sbb
ret
leave
shrl
inc
xor
cli
rcr
lcall
push
jbe
mov
xor
mov
cmp
icebp
mov
mov
loopne
out
and
fsubrl
cmpsl
cltd
loope
addb
cli
mov
nop
inc
fbstp
push
xchg
mov
and
push
mov
and
sub
mov
out
sub
lret
stc
call
add
dec
xor
cmpl
xor
das
mov
lock
add
inc
lcall
xchg
subb
outsb
pop
mov
nop
mov
or
adc
sub
enter
cs
sub
addb
or
jle
fbld
les
call
fidivrl
inc
cmp
cwtl
sub
popf
dec
xchg
push
mov
nop
repnz
and
movsl
fistpll
jg
loop
mov
jo
sub
mov
push
xchg
jg
test
pop
push
add
and
icebp
jg
sti
mov
mov
and
loop
jg
imul
adc
adc
aaa
mov
clc
pop
add
mov
dec
fdivrl
jmp
sar
add
and
fs
inc
sbb
jg
ss
pushl
dec
insl
pushf
dec
add
comiss
cmpsb
dec
xor
fisttps
pop
daa
test
mov
jecxz
inc
or
adc
incl
popa
jo
pop
notb
data16
adc
jne
push
loopne
push
cs
jmp
repnz
sarb
xor
addr16
sub
xor
leave
pop
push
cmp
insb
daa
push
mov
int
enter
lds
adc
sbb
aad
push
loope
cmpsb
pop
leave
icebp
adc
cli
jnp
push
and
sbb
pop
in
push
je
icebp
test
testl
pusha
pop
shlb
in
aam
add
sbb
adc
sub
add
fs
sbb
clc
inc
add
movsb
inc
adc
xor
imul
jecxz
cwtl
inc
push
stos
xchg
in
jp
loopne
push
cmc
adc
inc
push
adc
lds
sub
adc
adc
adc
xchg
mov
ret
adc
push
dec
out
imul
push
in
dec
rol
sub
ret
scas
mov
pop
addr16
in
pop
or
or
test
adc
adc
sbb
sbb
and
cmp
lret
and
int3
call
push
push
push
sahf
out
popa
xor
sbb
jb
sub
or
mov
mov
mov
dec
inc
enter
dec
or
in
sti
iret
cmpsl
mov
roll
xchg
ja
cmc
jae
pop
aam
mov
adc
push
leave
push
cld
push
shll
push
jae
mov
subl
rclb
and
cmpsb
filds
or
xchg
push
ljmp
mov
incb
mov
loop
into
mov
jecxz
lea
enter
insb
cmp
xchg
sub
push
pop
outsl
push
leave
lds
push
sbb
insb
jecxz
subb
fbstp
xchg
test
adcb
mov
sahf
out
repnz
and
pop
je
insb
icebp
mov
les
mov
and
and
shll
add
pusha
jg
js
fistps
xchg
fistl
daa
add
lret
aaa
push
cli
mov
mov
cmpl
in
adc
stos
add
sbb
mov
rolb
sub
xchg
xchg
clc
les
ds
sbb
lds
aaa
in
test
inc
xchg
lods
cli
sbb
loop
mov
jp
in
xor
jo
icebp
or
test
out
add
or
out
push
pop
lret
add
xchg
ficoml
cmc
cmp
push
loop
mov
rcll
aam
push
int
cmpsl
and
rolb
out
jle
mov
unpcklps
dec
loop
and
mov
and
ss
loop
test
inc
xor
jae
cmp
mov
ja
add
test
jecxz
inc
std
gs
or
cwtl
push
or
lcall
mov
mov
orl
jbe
jg
add
push
aas
lcall
push
imull
sbb
add
push
addb
mov
aad
outsl
and
xchg
mov
scas
inc
lss
pop
mov
pop
mov
stos
orl
push
pop
bound
popa
and
mov
jg,pn
pop
call
xor
xchg
adc
lret
stos
sub
test
std
inc
lahf
inc
out
mov
inc
xchg
lret
cli
repz
es
in
aad
shrl
dec
xchg
adc
mov
inc
jecxz
jge
fisubl
add
clc
mov
pop
cld
jg
lcall
outsl
call
and
mov
or
push
adc
jae
filds
cwtl
mov
mov
fisubs
sahf
add
in
xchg
jmp
loop
and
inc
arpl
mov
push
cs
dec
cmp
icebp
test
rcrb
mov
loop
jmp
cmp
jne
mov
ds
add
xor
insl
add
test
outsl
filds
sub
add
jmp
inc
icebp
xchg
out
fdivr
rorl
cld
inc
ret
add
mov
sbb
pop
or
mov
aad
aam
ret
mov
jmp
icebp
test
mov
add
push
mov
decl
cltd
sbb
icebp
orb
jl
repnz
push
stos
decl
sub
add
jmp
test
push
inc
add
adc
into
pusha
ljmp
push
scas
shrl
lods
test
push
scas
js
push
mov
sub
cli
insb
sub
push
adc
mov
roll
push
push
add
add
sbbb
add
add
mov
xor
inc
mov
lcall
andb
cwtl
and
addb
mov
and
jnp
fists
jne
outsb
and
jl
jno
mov
arpl
add
xor
aam
sub
subb
jnp
ss
jl
test
pop
adc
xchg
add
scas
loop
lock
mov
sub
cmp
mov
aas
xor
loope
lea
fisubrs
push
into
jo
xorb
shl
adc
add
jecxz
data16
ret
js
ja
subb
add
ds
xchg
mov
cmp
adc
jo
ret
dec
sbb
or
add
add
inc
jo
jae
mov
sub
xor
jp
loopne
movsl
jnp
push
inc
scas
dec
xor
js
inc
dec
sub
inc
inc
mov
shll
push
lods
call
lds
dec
push
cld
inc
add
sbb
sub
pop
out
sbbb
or
cmp
sbb
jo
and
popa
ret
clc
daa
mov
or
iret
hlt
pusha
mov
hlt
aam
mov
loopne
dec
or
dec
out
sbb
inc
and
into
shr
shl
loopne
add
test
fwait
movl
sub
pop
mov
shll
out
aas
add
mov
dec
mull
adc
aaa
pop
mov
test
test
shlb
dec
sbb
xor
clc
add
lods
faddl
inc
popf
jmp
scas
aam
dec
pusha
inc
cmp
popf
fcomps
adc
clc
cmpsl
loopne
or
pushl
icebp
addb
add
adc
push
add
push
mov
loopne
aas
cmp
cmp
jnp
mov
cmp
add
insb
ja
lock
daa
push
jno
outsb
push
addr16
pusha
imul
mov
je
test
jo
add
inc
les
pop
std
cmpsl
bnd
or
push
shlb
dec
adc
insw
insb
and
mov
dec
ds
lock
or
sub
xchg
push
sbb
add
fsubrl
jb
fadd
inc
add
pop
inc
and
mov
push
adc
das
fistps
mov
aas
add
add
andb
inc
add
adc
or
add
jnp
stos
dec
hlt
and
xor
inc
js
js
dec
jg
pop
cmp
test
dec
or
xorb
pop
hlt
lea
psubb
fst
pusha
jbe
notl
mov
lock
cmp
movsb
xchg
mov
les
dec
and
xor
jle
adc
add
shlb
fcoms
ret
in
cmp
loope
mov
jmp
mov
add
cwtl
out
filds
sub
jp
daa
jmp
mov
call
test
xchg
loop
mov
pop
inc
mov
aad
adc
addl
icebp
pop
outsb
loopne
loop
in
lret
push
outsl
and
std
sub
mov
jb
insb
pop
and
add
cmpsb
adc
mov
adc
stos
scas
push
mov
faddp
push
mov
and
jb
mov
lock
nop
pop
repnz
inc
loop
rcll
inc
or
out
push
xchg
sbb
or
clc
mov
xor
popf
inc
add
out
push
nop
dec
sbb
mov
xor
ljmp
daa
leave
nop
pop
pop
cltd
push
jle
test
inc
cmp
in
std
call
js
mov
enter
push
dec
fwait
out
punpcklbw
mov
push
out
pop
jl
xor
mov
je
rolb
dec
pop
mov
adcl
pop
cli
fwait
xor
dec
push
scas
xchg
lods
pop
test
ljmp
mov
in
popf
test
push
xor
add
jnp
in
rcll
shll
lods
iret
sub
lock
sti
sbb
nop
cs
outsl
je
dec
pusha
mov
in
or
js
pop
outsl
hlt
sbb
stos
pop
xor
lods
clc
dec
shlb
je
push
push
sub
jb
jbe
inc
mov
xchg
js
and
and
inc
pusha
jp
incl
daa
orl
fcmovne
xorl
and
ret
mov
push
in
mov
push
jecxz
pop
sub
jg
repz
into
push
xor
outsl
and
xchg
mov
dec
dec
mov
mov
nop
aaa
ds
push
stos
cld
mov
aaa
jl
cwtl
aas
lock
jecxz
shrl
adc
insb
dec
mov
push
nop
jg
incl
adc
jb
mov
pop
rcrb
adc
cmc
jg
shlb
jne
mov
dec
sub
lock
jecxz
cmpsl
add
call
pop
int
decl
cli
scas
les
fs
int3
and
sti
js
ljmp
push
and
or
nop
dec
xor
cmp
adcl
cmc
xchg
movsb
push
addr16
shlb
movlhps
adc
mov
sarl
data16
fadds
inc
push
outsl
lcall
loope
call
ljmp
enter
imul
jmp
decl
insb
lds
sub
mov
cld
cmp
mov
ret
or
mov
fwait
add
xchg
push
cmp
fldcw
jp
lods
ljmp
rclb
lcall
or
mov
cmp
mov
add
mov
mov
in
mov
sub
xor
jg
call
add
inc
ss
dec
pop
enter
lock
jle
loope
ret
xlat
lods
jcxz
add
xchg
cld
inc
xchg
cmpsl
and
outsl
stos
lcall
mov
int3
call
loopne
dec
movsl
inc
in
lcall
jmp
cwtl
sub
dec
das
fbld
lods
daa
add
outsb
add
inc
ljmp
push
adc
mov
insb
test
cmp
pop
mov
aam
clc
mov
and
add
and
movsb
mov
inc
sbb
pushf
mov
sub
out
fcomip
push
sub
sbb
cmc
or
and
xchg
rolb
js
push
mov
mov
jmp
cld
sbb
and
inc
sbb
add
ret
jnp
sub
mov
bound
mov
fdivrs
pop
inc
stos
mov
xchg
pop
inc
mov
mov
sub
xor
in
popa
inc
add
push
in
ror
jp
lock
test
in
das
insl
mov
adc
out
aaa
inc
or
push
ljmp
pop
mov
push
xchg
and
stos
les
pop
mov
lret
or
daa
shlb
push
sar
out
andb
xchg
loop
scas
repnz
mov
jb
test
outsb
fadd
mov
and
pushl
push
icebp
cltd
inc
sarb
cmpsb
mov
das
enter
cmpsb
jle
shlb
out
jae
cmp
cmpl
rcrl
mov
mov
fistpll
jecxz
outsl
dec
clc
leave
aaa
push
add
sahf
push
dec
ljmp
inc
push
in
lock
xchg
or
cli
ja
jns
lock
cmp
fdiv
and
mov
lret
mov
mov
outsl
andl
pop
xchg
cmp
mov
mov
mov
pop
in
mov
and
lods
or
das
mov
pop
push
ljmp
pusha
inc
and
clc
dec
divb
movsb
icebp
mov
inc
in
rcpps
cli
scas
jl
aad
pop
mov
cwtl
inc
js
cmp
sub
jl
ret
cmp
xchg
in
sub
or
dec
lods
ficompl
push
adc
js
xor
inc
push
pop
add
shll
and
dec
pop
mov
rclb
sti
movsb
lret
dec
cli
adc
into
xor
mov
stos
inc
outsb
push
mov
and
push
int3
icebp
cmp
xor
aam
out
push
add
not
adc
cld
mov
cmpsl
adc
mov
loop
es
xlat
incl
add
out
xchg
cli
outsl
dec
testb
dec
jl
push
aad
daa
imul
std
rorb
cmpsb
and
loope
shrl
push
cli
xchg
mov
test
sbb
mov
leave
inc
arpl
stos
shrl
cld
pop
jbe
inc
mov
add
data16
packssdw
popa
scas
hlt
out
roll
imul
testb
jp
mov
mov
fcoms
and
div
push
jg
xchg
insl
or
fcmovnbe
loop
or
cli
add
adc
popf
decb
les
or
mov
mov
dec
push
mov
push
jl
movsl
fdivr
inc
loop
daa
jb
adc
lods
xor
pop
aad
cmpsb
dec
divl
sbb
rclb
aaa
mov
call
push
cmpsb
outsl
pop
clc
lcall
jae
subb
push
fsubp
fdivrs
and
bound
cs
pushf
adc
jg
mov
test
stos
std
jle
lds
nop
adc
addr16
test
stos
daa
jbe
sbb
sbb
outsl
repz
adc
aam
sbb
cmc
xchg
or
pop
add
cmp
push
popa
mov
push
sub
int3
lea
sbb
sub
jb
cmc
rcrb
cmp
sahf
add
cmp
pushf
arpl
push
mov
mov
sti
fsubs
les
sbb
mov
xlat
or
pop
or
inc
add
add
xor
outsl
fnstsw
xchg
dec
and
imul
mov
adc
mov
inc
sbb
jmp
or
or
adc
lcall
push
push
les
mov
mov
xchg
mov
push
cli
repnz
js
pop
iret
fiadds
outsb
mov
pop
mov
cwtl
cmp
or
inc
mov
and
mov
adc
stc
cmp
adc
mov
mov
dec
mov
aam
dec
mov
aas
cmp
out
mov
divl
cmc
imulb
jmp
xor
lods
shl
jne
dec
sub
or
loope
adcb
and
or
neg
dec
or
xlat
xor
inc
cld
jg
jmp
sub
test
in
sbb
test
xchg
ret
push
lods
les
imul
push
jmp
adc
jl
cmpsb
ret
pop
push
lret
lock
mov
std
aam
or
pop
cli
sbb
jg
jno
shlb
mov
push
pop
jp
push
lcall
rorl
add
paddw
and
int3
pop
mov
fwait
inc
mov
pop
inc
js
pop
dec
mov
outsl
cmp
mov
add
cs
mov
and
das
ret
adc
fisubrl
add
and
jmp
mov
loop
ja,pn
fisubrs
inc
inc
push
sbbb
enter
add
in
xchg
mov
and
xor
jns
je
ljmp
addr16
jmp
jge
popa
and
and
cld
in
adc
mov
sbb
dec
pop
daa
add
mov
sbb
cmp
lea
pop
imul
push
mov
inc
clc
aam
inc
nop
mov
cmp
adcb
das
jo
addb
inc
add
fdivrs
xchg
pop
pop
or
test
js
in
pop
les
sar
lds
sar
addr16
cs
xlat
out
in
lods
or
loop
scas
jbe
cmp
outsl
jmp
cld
mov
daa
test
sub
arpl
mov
cmp
sbb
ds
pop
jp
mov
jae
movsb
scas
subb
clc
sahf
add
je
or
jo
mov
jbe
loope
push
mov
scas
or
xchg
push
jecxz
mov
mov
ffree
pushl
aam
inc
inc
xchg
cltd
mov
decl
pop
and
lret
in
add
sbb
insl
fnstsw
in
into
dec
xor
aas
fst
xchg
fwait
sub
nop
ja
lods
call
jno
test
jmp
pop
push
gs
iret
or
xchg
and
xor
andb
inc
lcall
xchg
cli
jp
and
sbb
mov
loope
and
rcll
mov
xchg
mov
mov
or
xchg
leave
out
mov
fiadds
inc
loope
stc
mov
imul
pop
ret
cmp
dec
sbb
mov
dec
mov
add
mov
fucomi
addr16
daa
loop
inc
scas
cmp
mov
sub
cmp
int3
adc
push
or
and
jmp
das
std
lods
adc
add
out
pop
cwtl
sbb
pop
cld
or
pop
loope
pop
push
mov
movsl
outsb
pop
cmpsb
int3
fldl
nop
fwait
imul
pusha
ja
pop
lret
mov
pop
loopne
adc
rcll
sahf
fdivl
jp
fadd
call
addl
push
dec
mov
bound
sbb
fstps
cmpl
ja
push
cmp
mov
movsb
fsts
daa
scas
stos
daa
sub
cwtl
outsb
mov
ret
jmp
cmc
add
pop
fsubp
in
jecxz
lods
xchg
sub
and
fistpll
mulb
cmpsb
pop
loope
stos
movups
or
rcrb
mov
and
pop
and
adc
push
push
sbb
adc
mov
loope
pop
outsb
cmp
insb
cld
sub
cwtl
push
jp
jmp
iret
out
push
adc
cld
gs
xchg
bound
mov
sub
lds
fdivs
sbb
ja
inc
loop
lods
inc
inc
push
and
jp
sub
inc
ficoms
dec
ret
adcb
jle
sub
lahf
xchg
pushf
popf
mov
das
ds
shrl
mov
push
xor
pop
mov
dec
fmull
sbb
int
sub
push
scas
jg
loope
fdivr
xchg
push
mov
xor
xchg
loopne
test
dec
or
jmp
sbb
fnsave
aad
and
mov
xor
add
outsb
xor
push
je
dec
push
pop
out
push
les
cmp
mov
js
lods
incb
shr
aas
and
sbb
in
cmpsb
sub
cmpsb
test
lea
xor
mov
inc
std
xor
adc
add
movsl
rorb
sbb
pop
clc
lods
mov
loop
mov
int3
xor
sbb
add
mov
test
xchg
in
add
popf
fldenv
test
or
imul
or
sbb
add
sub
shrl
mov
pop
mov
mov
push
call
aam
repz
shrb
push
bound
cmpsb
and
clc
test
icebp
dec
mov
rol
ficoms
loop
mov
insl
loope
arpl
or
adc
js
aaa
cs
mov
add
nop
out
mov
pop
pop
mov
dec
shlb
or
inc
inc
jg
movsl
cmpsb
push
movsb
gs
jmp
lea
push
ds
sub
add
dec
mov
or
xchg
aas
and
adc
outsl
push
push
mov
outsl
add
fidivs
pop
dec
xchg
push
jnp
repz
pop
je
in
fucomi
or
sbb
pop
push
lock
xchg
mov
push
data16
jmp
mov
xor
adc
cmp
aaa
fadd
test
mov
repz
or
std
fwait
outsb
pusha
stc
sbb
test
test
outsl
jge
xchg
jnp
push
mov
stc
adc
and
cmpsb
and
aas
mov
ss
mov
roll
xchg
mov
cmp
pcmpeqw
pop
sbb
sub
or
jl
mov
decl
sub
rolb
sbb
and
enter
adc
add
int3
into
loopne
or
daa
imul
imul
les
dec
movsl
dec
clc
lods
jmp
sbb
sbb
push
push
sbb
xchg
ja
decl
inc
lahf
xchg
movsl
out
test
jnp
repnz
xor
rcr
loope
outsb
call
fadds
andl
mov
push
mov
sub
cmp
or
push
movsb
and
outsl
loopne
mov
add
sub
cmp
imul
push
popa
mov
loope
clc
push
jle
xor
out
pop
jnp
outsl
push
fnstsw
aaa
add
divb
repz
push
mov
or
popf
cmp
push
daa
leave
mov
mov
mov
inc
sbb
and
addb
sub
dec
sbb
in
dec
adc
push
mov
das
std
sub
inc
popa
adc
movsb
add
cli
fs
inc
and
sbb
call
sub
pop
push
mov
push
outsb
pop
test
push
mov
ljmp
imul
xchg
adc
mov
pop
mov
xor
imul
sub
sub
mov
jge
fadds
jnp
fnstsw
add
pop
or
mov
mov
je
jl
sub
mov
inc
or
xchg
jp
push
or
xor
add
or
xor
pop
loopne
repz
shrb
jmp
sub
mov
daa
xchg
call
pop
es
mov
cwtl
cmp
or
mov
in
loop
mov
inc
lods
or
sbb
lock
shlb
xlat
ja
jbe
dec
call
dec
jge
scas
test
or
jae
ret
lahf
in
add
adc
pop
enter
loopne
in
outsl
pop
lds
xor
mov
rolb
push
in
lods
out
pop
call
mov
cs
jmp
mov
out
and
movq
andb
loop
sbb
push
cs
cli
pushf
adc
out
mov
add
xor
lea
xor
sbbb
xchg
pop
shr
loope
add
sub
inc
mov
jbe
jmp
or
sub
xchg
adc
aam
loopne
add
cli
outsl
insb
mov
pop
out
xchg
popf
xchg
in
adc
out
fcmove
pop
jmp
add
sbb
pop
in
cmpsl
stc
lahf
insb
and
jnp
pushf
push
cld
cs
push
mov
fistpll
xchg
push
int
xor
leave
xchg
jp
in
test
or
cmp
dec
jne
pop
stos
pop
jmp
pop
sbb
clc
inc
mov
fs
pop
stos
pushf
jo
stos
or
mov
sbb
iret
sbb
dec
adc
dec
pop
enter
push
lock
out
test
clc
decl
movsl
cs
cmp
sbb
pop
in
mov
fcompl
pop
cmp
sahf
inc
pushf
cmp
pop
cmc
inc
dec
mov
xchg
cli
aaa
sub
mov
adc
cmp
cli
ljmp
insb
sbb
lds
call
fcompl
ljmp
test
push
push
fnstsw
adc
add
rcrb
jp
sbb
or
sub
jns
inc
icebp
push
mov
adc
icebp
jb
sbb
mov
sub
xor
inc
inc
cmc
fadds
mov
adc
cltd
lock
popl
idivl
fidivrl
pop
cmp
sbb
inc
jns
push
stos
scas
ret
test
xor
leave
sub
inc
sub
loopne
in
mov
adc
movsl
fiaddl
adc
rolb
xchg
cwtl
popf
adc
mov
adc
enter
pop
pop
subl
mov
sub
and
xchg
fdiv
sub
mov
es
pop
in
jbe
inc
inc
arpl
mov
cli
shrb
sbb
add
call
dec
movsl
clc
sbb
jae
sti
test
das
sahf
movsb
mov
stc
leave
je
ret
jg
mov
cli
pushl
lahf
xchg
fcmovnb
jecxz
adc
inc
xchg
adc
addb
xorl
adc
mov
std
mov
dec
xor
mov
and
loopne
ret
cld
mov
fists
or
xchg
jne
cld
loopne
sbbb
rolb
std
pushl
fwait
sar
and
jge
arpl
xor
stos
push
fsubl
jge
push
sbb
jl
js
push
sub
adc
adc
out
lock
fstl
xchg
stc
push
pop
jecxz
or
fdivrp
mov
jnp
mov
xor
pop
sar
sbb
jp
gs
loope
jp
mov
pop
xor
push
dec
xlat
sbb
dec
fdivr
mov
ret
decl
push
shrl
mov
adc
pusha
bound
shlb
or
scas
and
dec
mov
fs
data16
lcall
cmpb
jg
fists
sub
and
stc
outsb
xor
in
sbb
cmp
push
add
das
push
loopne
leave
mov
out
not
inc
inc
cmc
sbb
push
xchg
js
mov
xor
out
clc
dec
cmp
add
cmp
fdivrs
xor
dec
mov
das
std
out
pusha
push
nop
and
xlat
pop
inc
hlt
pop
mov
and
cmc
jbe
jl
jmp
in
ret
ds
test
jg
stos
into
dec
int3
out
movsl
and
sbb
pop
jp
jo
adc
xor
mov
subb
cmpl
jg
fists
or
inc
je
xor
test
clc
sub
das
je
stos
push
push
lahf
adc
cmp
imul
and
es
or
cwtl
push
dec
cli
sti
add
filds
pop
mov
decb
or
jecxz
sbb
adc
push
push
idivb
cmp
ds
cmp
or
pop
cld
mov
xor
mov
ja
sub
xor
in
ljmp
push
dec
js
add
sub
shll
sti
push
sahf
decl
push
or
fldenv
push
sbb
inc
inc
inc
pop
aam
shlb
mov
sub
and
inc
arpl
add
pop
andl
add
adc
scas
lock
out
or
bound
xchg
push
lea
cli
add
fcomps
fiadds
mov
testl
scas
inc
hlt
sbb
dec
mov
mov
sbb
add
addb
cli
insb
sahf
xchg
sub
jb
mov
sarl
lahf
xor
cltd
mov
faddl
pop
fdivs
and
aad
pop
in
or
in
inc
mov
xchg
fsubl
stos
sub
cli
xor
es
rolb
mov
arpl
in
mov
xor
inc
mov
test
or
sbb
xchg
mov
aam
mov
pop
cmp
mov
xchg
pushf
pop
je
add
ret
test
push
shl
jmp
dec
adc
push
dec
add
scas
jp
fdivrl
jmp
aam
sub
stc
icebp
inc
out
filds
loopne
lock
add
test
pop
hlt
adcb
add
xor
and
add
subb
sub
inc
rcll
add
inc
xchg
push
stos
or
popa
in
rol
push
lock
inc
push
ret
mov
bound
xchg
adc
clc
in
push
jb
jmp
adc
or
cwtl
add
push
fstpt
jb
addr16
hlt
mov
xor
cmp
xchg
adc
and
cmp
push
and
and
add
mov
pop
cld
push
inc
xchg
aam
mov
test
add
std
fadds
jl
cltd
or
mov
adc
aaa
cmp
test
dec
mov
xor
inc
sub
dec
test
add
mov
push
adc
mov
pop
xchg
add
mov
adc
pusha
cmp
pop
scas
push
ret
inc
jae
cmpsl
mov
adc
jnp
inc
and
je
sub
add
and
imul
pop
rclb
and
push
adc
rorl
rclw
addb
xor
pop
add
lahf
std
pop
dec
add
cmp
je
and
jge
and
shrl
xor
add
xor
adc
int3
and
data16
movsl
cld
or
incl
dec
loopne
inc
and
fs
jb
arpl
or
adcb
push
sub
jmp
cmp
xchg
and
sbb
mov
test
sub
mov
sub
sbb
into
or
jle
mov
and
loope
lcall
mov
inc
mov
mov
les
inc
or
adc
jl
push
fs
mov
inc
xor
jge
cmpsb
push
jne
fisubrl
push
addl
adc
out
adc
clc
dec
lods
mov
imul
cmpsb
mov
in
outsl
scas
es
jmp
or
sbb
test
and
xchg
sub
sarl
add
jno
mov
push
movsl
int3
mov
sbb
into
mov
mov
dec
sub
cmp
fstpl
dec
or
notb
jg
xor
into
add
scas
repnz
mov
mov
ret
and
nop
ds
sbb
inc
addr16
shrb
inc
jl
test
mov
cmc
add
push
call
pusha
int3
jo
rol
inc
mov
mov
jg
xchg
and
in
pop
lahf
pop
imul
ljmp
inc
push
cmp
fistl
popa
lods
scas
or
sbb
ficompl
dec
ret
push
cwtl
sbb
mov
push
std
add
je
and
mov
xlat
cmpsb
out
add
mov
mov
push
mov
jno
adcb
call
loop
cmp
fs
inc
fldl
daa
movsl
loopne
mov
roll
pop
imulb
inc
fldl
jl
icebp
dec
and
sub
or
or
loope
sub
mov
ret
cmpsb
jnp
push
mov
inc
int3
enter
jno
mov
fistpll
xchg
dec
nop
dec
mov
xchg
mov
std
adc
sti
in
std
js
mov
cld
cmp
xchg
push
pop
loop
shlb
test
outsl
sbb
adc
loop
popa
test
mov
mov
and
mov
push
test
xor
inc
mov
sub
pop
addb
push
and
js
add
lahf
inc
mov
fwait
jle
mov
test
sbb
mov
imul
mov
fwait
and
call
outsb
pop
in
push
in
pusha
jle
pop
mov
or
pop
or
inc
dec
dec
cmpsb
pop
mov
roll
test
mov
sbb
adc
dec
sub
inc
jmp
push
sar
inc
pop
or
insb
btc
ja
aad
das
sarl
mov
inc
inc
rolb
jo
xor
stos
cmp
cmc
in
xor
add
xor
mov
adc
push
mov
addr16
scas
mov
jmp
test
xchg
sub
out
call
add
xchg
orl
or
mov
repnz
push
or
push
scas
push
leave
and
inc
add
dec
cmpsl
lahf
fsubrs
dec
and
mov
lret
cwtl
imul
jne
or
pop
ficomps
repz
jo
inc
add
into
jp
insl
inc
push
sbb
jae
mov
in
clc
jle
dec
sub
and
add
clc
or
mov
sar
js
pop
pop
ljmp
dec
inc
and
decb
cmc
sub
or
or
push
mov
mov
gs
cmc
pmullw
loopne
add
add
sbb
jp
testb
lret
xor
test
or
and
adc
mov
and
clc
ss
loopne
cli
mov
sbbl
daa
mov
sti
adc
lret
cwtl
adc
inc
mov
into
xor
lods
into
clc
sbb
jo
mov
adc
stos
dec
dec
xchg
mov
roll
and
inc
es
addl
push
rorl
out
fsubrs
inc
int3
into
adc
cltd
add
adc
mov
xchg
outsb
xor
inc
arpl
push
pusha
dec
clc
jo
stos
push
cmp
add
movsb
adcb
adc
popa
sbb
sub
jb
mov
outsl
adc
adc
lods
push
pop
xlat
push
int
test
or
cmp
push
movl
ret
cmp
add
pop
and
pop
xor
pmaddwd
add
mov
jne
sbb
mov
add
mov
mov
dec
adc
and
iret
dec
adcl
dec
pop
mov
pop
add
add
or
jp
out
mov
stos
pop
cmc
xchg
cmc
xchg
dec
inc
cmpsl
dec
pop
lahf
mov
mov
cmp
andl
xchg
idiv
mov
sub
data16
xor
cld
mov
adc
mov
rolb
or
std
sub
loope
rorl
mov
fiaddl
cmc
fists
jg
jno
scas
mov
test
push
ds
scas
cmp
mov
mov
xor
ret
inc
adc
and
jo
jmp
pop
mov
call
pop
cli
or
aad
mov
outsl
adc
xchg
test
clc
add
lock
notl
out
ret
or
mov
aaa
mov
les
pusha
lods
lods
and
sti
jg
lock
cli
cmp
adcb
cmp
mov
sbb
cmp
mov
pop
shlb
jp
adc
jp
add
xor
das
rol
inc
icebp
aaa
lods
xchg
jecxz
pop
clc
jg
pop
ficoml
data16
loop
xor
lds
add
dec
push
dec
bound
mov
maxps
jecxz
test
inc
call
insl
jo
mov
sbb
mov
sbb
aaa
and
xchg
cmc
insb
insl
out
sub
aad
ljmp
xchg
cmp
cmc
inc
cmp
cmp
cld
out
jae
stos
mov
sbb
pop
or
scas
adc
dec
sar
mov
aas
and
les
roll
adc
mov
xor
adc
xchg
fbstp
cld
fidivrl
push
pop
loopne
mov
sub
jmp
mov
lock
xchg
cmp
inc
adc
pop
cli
mov
xlat
push
std
add
adc
jg
cmp
dec
add
fs
stos
popa
mov
ja
push
in
xorb
jecxz
add
dec
push
addl
push
js
jne
mov
jmp
mov
test
clc
cmp
out
aam
fs
jns
dec
adc
sub
mov
cmp
jl
sub
mov
or
aaa
mov
shll
xor
adcb
movsb
mov
xor
add
add
bound
adc
xor
std
outsl
jbe
jnp
jg
mov
popf
fistl
xchg
jbe
decb
sub
inc
pop
arpl
or
mov
mov
or
add
daa
mov
mov
jle
stc
addb
xor
or
mov
jmp
mov
mov
mov
insb
sub
loop
aam
sub
shrb
scas
push
add
jecxz
sub
jg
cmp
jl
fstpl
movsl
xor
lret
push
or
insl
or
jg
mov
daa
test
into
add
das
movsb
enter
loope
loop
orb
lods
mov
rclb
cmpsb
xor
out
mov
add
clc
fcoms
lds
dec
and
dec
add
add
test
aad
call
cs
testb
pusha
cmp
sbb
mov
jg
imul
daa
xchg
aam
sbb
push
sbbl
sub
fdivs
mov
cmpsb
pop
xchg
daa
inc
fcomi
mov
jnp
in
mov
daa
adc
in
ret
xchg
or
lcall
mov
jno
movsb
push
push
andl
hlt
push
dec
enter
addb
adc
and
test
jl
leave
lods
push
fs
dec
or
adc
mov
or
jecxz
or
in
sbb
push
pop
xchg
push
sub
inc
inc
add
movsb
xchg
dec
int3
adc
mov
inc
mov
push
and
mov
xor
clc
imul
mov
xor
sbb
cmp
das
fucomp
jb
lret
pushaw
and
xchg
test
jg
lods
mov
push
es
sbb
icebp
inc
or
clc
mov
ja
mov
and
jb
leave
jmp
loop
call
add
outsb
jb
mov
sub
push
mov
dec
popf
bound
pop
iret
fwait
shr
mov
adc
pop
ficompl
mov
mov
mov
pusha
jmp
les
or
sub
aad
out
stos
mov
inc
jae
cmpl
fimuls
pop
imul
std
sti
nop
dec
insb
and
stos
add
fcompl
out
add
aaa
sub
mov
ret
ljmp
jecxz
icebp
jno
xlat
jo
xchg
lea
sbb
jbe
sti
sarb
mov
incb
lretw
xor
add
cmc
dec
push
outsl
dec
out
es
mov
adc
inc
or
fwait
mov
pop
jecxz
jecxz
ds
mov
and
mov
lds
outsb
sbb
icebp
movsb
test
sub
je
adc
xlat
and
popa
mov
aam
ret
loopne
mov
or
icebp
pop
sbb
sub
mov
push
sbb
fucomp
adc
ss
push
pop
or
std
pop
and
push
aaa
addl
cmpsb
mov
pushf
pop
addr16
into
outsb
cli
popf
and
inc
pushf
adc
add
push
rclb
out
pop
inc
test
pop
cmp
sub
or
push
cld
push
xor
mov
std
movsb
or
je
outsb
mov
es
das
fbld
mov
jle
pop
sti
ret
in
add
xor
mov
das
std
test
mov
lret
movsl
xor
cwtl
inc
shll
daa
xlat
fbld
jecxz
dec
sbb
inc
stos
push
mov
das
push
lock
sbb
lods
das
cmc
cmpsb
cmpsl
add
cwtl
mov
mov
pop
cli
jb
dec
adcb
adc
adc
mov
loop
popa
aam
and
mov
push
mov
xchg
dec
jno
rcrl
enter
xor
xor
sub
and
mov
push
and
add
aad
push
test
imul
pop
lahf
movsl
lahf
cwtl
stos
fldenv
int
mov
lods
testl
das
std
jnp
xchg
xchg
sar
iret
loope
mov
cmp
mov
hlt
outsl
rcr
pop
sbbb
outsb
jle
aas
rep
pop
ljmp
xchg
cmp
mov
and
cmpsb
scas
in
pop
out
sti
or
clc
and
pop
xor
mov
inc
int
xchg
test
jg
js
jl
dec
add
jl
in
push
lock
std
mov
mov
add
fidivrs
addr16
pop
test
mov
add
and
mov
push
cmp
cmp
dec
jno
dec
or
cs
inc
ds
pop
fimuls
cmp
ljmp
cld
out
inc
jbe
xor
push
lret
rcrl
dec
call
mov
fs
adc
mov
xor
cli
inc
lods
mov
dec
loope
adc
push
and
jns
lret
xchg
jmp
sub
add
mov
pop
loopne
iret
icebp
stos
jle
pop
cli
lods
cli
mov
push
ficoml
and
mov
pushf
clc
and
mov
jmp
add
inc
and
lahf
or
scas
jnp
lods
push
popf
mov
dec
cmc
sti
arpl
in
faddp
cs
mov
lods
mov
aas
add
mov
sbb
jo
stos
jle
out
xor
push
lds
inc
mov
or
inc
or
outsl
mov
mov
in
popf
test
push
xchg
sbb
xchg
push
out
notb
sub
sub
xchg
pop
ret
lcall
and
fldcw
jo
xor
shr
aad
dec
and
movsb
stc
add
loop
add
adc
and
push
popa
ror
outsb
add
sbb
test
jne
pop
dec
push
sbb
pop
loopne
cmpb
push
and
sub
ret
lcall
adc
mov
es
subl
inc
push
int3
rolb
in
cmp
xchg
push
rcrb
insb
inc
sub
cmpsb
add
add
movsb
dec
fwait
xor
mov
rcrb
mov
push
les
jne
jp
sbb
test
jmp
addl
outsl
les
scas
inc
cmc
sbbl
mov
pop
nop
pop
outsl
test
mov
pushf
and
ror
inc
ret
sbb
or
push
or
shll
push
inc
cmc
or
and
jmp
mov
rorb
sbb
addr16
inc
adc
pop
sub
test
jae
das
cwtl
jecxz
flds
inc
add
in
dec
mov
mov
xchg
sub
sub
rclb
xor
popf
dec
inc
dec
sahf
lahf
lods
add
repnz
jecxz
cmp
fiadds
fadds
sbb
outsl
rorb
mov
xor
int3
mov
loopne
mov
or
pop
add
adc
pushf
sub
lods
orb
cmpl
into
or
add
std
or
test
inc
je
out
dec
and
sub
inc
popl
adc
lret
lahf
jle
sbb
loop
repnz
push
sti
outsl
fidivl
lods
ret
or
sbb
mov
inc
cmp
and
ja
sub
clc
jb
addb
or
aas
int3
inc
cmp
xchg
incl
or
cmovno
ljmp
or
loopne
push
int3
nop
mov
call
add
add
add
outsl
mov
add
mov
in
ja
arpl
repnz
repnz
pop
lods
jnp
les
mov
pop
icebp
lret
das
cwtl
sub
sub
add
cld
lea
test
xchg
adc
push
inc
xor
inc
or
inc
cmp
pop
inc
pop
nop
pushf
fistps
pop
movsb
add
pop
inc
das
or
add
lods
and
imul
cmp
fwait
dec
mov
testl
add
inc
andb
inc
repz
xchg
clc
mov
test
push
add
sbb
lds
jns
sub
and
test
dec
mov
xor
fmuls
in
mov
mov
in
push
prefetcht1
hlt
and
and
sub
inc
aaa
addr16
adc
mov
jg
mov
mov
add
dec
sub
sub
push
scas
test
lcall
cwtl
xor
pop
pop
pop
roll
mov
movsl
mov
test
push
ret
xor
add
shrb
push
fcoml
subb
xlat
cmp
or
out
jp
jle
inc
add
cmp
mov
and
push
pop
mov
cmc
and
ja
xorb
loop
mov
test
scas
cld
fdivr
jmp
push
push
add
addb
insb
popl
out
add
sbb
and
sti
adc
testl
pop
mov
out
aad
fistpl
mov
pusha
jg
add
leave
das
inc
sbb
jmp
inc
cli
xchg
sbb
inc
shll
xor
adc
push
push
es
sbb
mov
pop
into
popa
insb
je
mov
fidivs
xor
jge
mov
adcb
insl
cwtl
std
scas
repz
xor
push
cmpsl
xor
or
fmull
mov
sti
es
mov
sub
mov
sbb
or
lock
mov
clc
fsubrs
test
ja
inc
add
and
cmpsl
cwtl
or
and
jmp
cld
faddl
xor
arpl
add
ja
add
inc
add
sbbb
mov
orb
outsl
clc
push
push
out
add
out
inc
add
dec
mov
iret
pop
jo
and
mov
fsubrl
xor
test
ret
or
dec
push
sub
sarb
loop
jg
insl
gs
cmpsb
ret
xor
push
jecxz
add
inc
add
stos
repz
adc
add
xchg
or
mov
ljmp
add
jbe
pop
out
dec
mov
push
or
mov
iret
mov
and
and
jecxz
mov
jae
loopne
adc
mov
shlb
lret
mov
mov
aas
push
aad
lds
pop
into
rcl
adc
adc
add
imul
inc
popl
pop
inc
aad
dec
hlt
sbb
lock
je
cmpsb
int
mov
int
pop
jle
dec
pop
xor
jle
or
xchg
inc
ss
jp
inc
jo
addr16
inc
xchg
roll
dec
std
out
or
testb
mov
inc
incb
sar
mull
sti
adc
add
subb
mov
popf
cmp
mov
add
cs
ror
jbe
add
out
cmp
pop
push
and
xchg
aas
cld
mov
ja
mov
push
loop
lcall
imul
cld
outsl
insl
sti
lds
xor
add
mov
add
fs
push
outsl
jb
and
test
xor
cmp
inc
mov
stos
lret
aad
sbb
inc
movb
repz
fucomip
outsl
scas
jae
inc
xor
or
sub
shlb
jg
testl
add
incl
sbb
out
inc
aam
and
in
das
mov
xchg
inc
push
fildll
gs
adc
jae
xchg
and
lcall
dec
mov
push
filds
pop
jg
or
aad
pushf
add
sbb
adc
test
in
ffreep
shrb
call
sbb
ljmp
xchg
mov
clc
ret
je
push
xor
shll
shrb
and
mov
sub
in
sbb
sub
icebp
arpl
lock
jcxz
fidivrs
inc
std
or
out
fisttpl
sbb
dec
pop
xor
xchg
dec
cli
jg
icebp
and
and
mov
call
inc
add
xchg
aam
jae
les
std
mov
xchg
sub
in
aam
inc
mov
mov
mov
push
das
ss
or
dec
mov
stos
addr16
or
inc
add
rorb
ja
or
bound
inc
add
sub
xorb
push
loope
adc
push
stos
jle
or
pop
les
inc
orb
inc
subb
sub
mov
imul
sbb
adc
sub
mov
xor
inc
and
pop
push
fwait
inc
sub
pushf
inc
es
sub
or
lds
push
fistps
mov
ficomps
mov
sub
adc
popf
cmp
andb
push
xor
daa
and
pop
clc
fwait
cmp
outsb
jmp
cmpsb
adc
notb
mov
rclb
fsubrs
push
mov
push
and
stos
mov
enter
cld
clc
fcmovu
lahf
mov
dec
inc
and
and
les
cmpsb
pusha
mov
sbb
mov
outsb
cli
jne
andb
lods
inc
mov
adc
imul
xlat
xchg
push
cmpsb
cmp
nop
popa
test
mov
push
leave
rclb
addb
cmp
loopne
mov
push
and
jne
aad
xchg
call
ret
idiv
pop
rorb
mov
fmuls
add
cltd
cli
or
xchg
pop
mov
add
cmp
stos
cwtl
les
mov
and
xchg
push
cmp
jb
insb
repnz
gs
fmuls
xchg
das
xchg
mov
sbb
inc
jge
xor
mov
or
xchg
andb
push
rcll
inc
movsl
lahf
inc
add
mov
cwtl
hlt
dec
pop
testl
ds
or
shl
scas
mov
ljmp
and
or
jne
loop
xchg
pop
and
mov
jp
mov
mov
popf
lds
lret
push
push
mov
cmp
js
add
push
cmp
dec
popa
je
jp
adc
sbb
xchg
movsb
pusha
shrb
shlb
hlt
shll
cmpsl
mov
pop
cltd
sbb
or
add
je
adc
mov
int3
xchg
and
in
dec
je
add
out
sub
fdivrl
add
movsl
pushl
ja
xor
loope
lcall
es
ret
jnp
add
xchg
jo
jle
daa
add
fucomip
add
xchg
not
cmp
cmp
addr16
aam
sub
lahf
add
jno
pop
dec
icebp
add
repnz
fwait
inc
in
cmc
fs
adc
or
mov
int
cld
sbb
in
in
jnp
cwtl
mov
jmp
push
or
mov
cmp
loop
imul
and
mov
add
andl
push
iret
inc
jb
out
push
push
scas
and
mov
mov
cmp
imul
jo
call
mov
std
inc
gs
inc
inc
adc
adc
test
mov
pop
pusha
dec
add
add
stos
and
mov
push
inc
dec
push
cmc
or
xor
inc
sub
enter
push
aam
dec
push
or
mov
out
pop
push
mov
addr16
or
push
push
fstpt
cmpb
mov
outsl
dec
insl
cld
add
lods
pop
ffree
orb
in
and
add
adc
mov
ds
inc
cld
sub
pop
inc
or
fwait
clc
jmp
mov
and
dec
mov
cli
lea
outsb
mov
or
cmpsl
hlt
fs
movsb
mov
loop
ja
mov
std
push
push
cmpsl
mov
xor
mov
push
jle
stc
je
clc
xchg
or
daa
inc
stc
mov
or
push
decl
mov
cmp
cmp
mov
or
lock
jle
xchg
and
aad
and
dec
jno
incl
cmc
push
or
mov
test
inc
mov
test
add
jnp
int3
mov
loopne
cmpsb
mov
pushf
lret
add
sub
movsb
arpl
loope
jg
cmpsb
adc
cmp
mov
pmulhuw
adc
in
and
mov
xchg
fiadds
lret
add
in
fwait
test
jecxz
add
push
push
add
or
pop
sub
pop
addr16
je
mov
mov
or
sub
pop
adc
inc
and
pop
lcall
mov
fnstsw
jno
and
test
in
ja
pop
pop
fildll
sub
sub
mov
add
pop
cld
jmp
xor
mov
stc
fcomps
decl
lea
mov
aas
sarl
aas
xchg
andl
pop
test
push
push
cmp
lods
sbbb
cli
xchg
jg
inc
or
ss
push
add
and
cmpsl
sbb
mov
lock
xchg
sahf
ljmp
push
cmp
rcrl
xor
xchg
inc
addb
cmp
loopne
jmp
add
xchg
cmp
xor
or
cld
pusha
mov
out
sahf
imul
inc
push
mov
push
push
add
les
cmp
loope
inc
xor
in
and
jae
or
adc
sub
add
stos
mov
rorl
rolb
lds
mov
scas
fdivs
jne
dec
adcb
cld
jg
gs
mov
pop
inc
mov
idivb
mov
fildll
cmp
data16
dec
out
push
add
inc
pop
aas
cmp
add
mov
inc
sub
inc
popa
fidivrl
pushf
pop
mov
push
out
mov
inc
mov
and
test
or
sub
dec
push
fdiv
sbb
jne
clc
andl
mov
loopne
ds
mov
pop
adc
loopne
aas
dec
push
push
adc
sbb
cmc
dec
lea
subb
sbbl
push
add
jnp
xchg
lods
add
ror
not
fiadds
jae
add
fsubp
loopne
fstp
push
adc
mov
push
ret
sub
and
mov
ror
mov
shll
sbb
mov
and
pop
cmp
addr16
xor
cmp
or
push
inc
dec
lret
scas
dec
or
stos
gs
rcll
jmp
les
in
sub
push
popf
sbb
xor
arpl
pop
inc
push
into
jle
xchg
jecxz
mov
jae
mov
sbb
sbb
int3
and
cmp
pop
inc
cmp
cli
adc
fnstsw
mov
das
adc
add
inc
out
dec
and
or
clc
pop
lock
in
or
jne
loop
aad
aaa
jecxz
mov
outsb
std
repz
pop
and
call
rcll
fisttps
jns
or
mov
lds
xor
data16
sub
inc
call
push
push
cmp
and
or
jbe
and
inc
jmp
jge
xor
mov
add
lds
adcb
xchg
mov
dec
push
scas
movsl
pop
outsl
mov
fiadds
adc
gs
jno
add
clc
pop
fisttpl
xor
loope
fmull
pop
sti
or
xor
shlb
mov
mov
jg
mov
push
lock
fwait
cli
push
push
push
push
mov
or
xor
stos
dec
popf
mov
xor
inc
inc
fimuls
inc
mov
pop
sti
out
out
iret
jmp
data16
out
ficompl
sbb
xchg
push
into
das
loop
cwtl
inc
jnp
rcll
mov
ret
pop
andl
inc
mov
cli
jne
jnp
pop
cmc
aaa
and
inc
mov
repz
sarb
rorb
loop
adc
push
idivb
jnp
faddp
mov
repz
jno
adc
pop
roll
xor
mov
aaa
into
adc
push
lods
scas
pop
fisttps
push
dec
outsl
push
aam
push
adc
cmpsl
sbbb
cmp
and
pop
sti
pop
or
icebp
add
repnz
inc
cmp
ret
add
sub
cs
adc
rdmsr
adc
adc
mov
inc
cmp
xor
rcl
jecxz
jecxz
sub
ror
cwtl
and
roll
mov
out
mov
or
push
xchg
dec
jmp
adc
dec
sub
jne
and
sub
inc
lret
call
mov
sbb
adc
pop
and
or
cmpsb
arpl
xor
scas
jnp
ss
pusha
sbb
sbb
dec
out
icebp
and
lock
cmp
cmp
push
or
or
and
in
sbb
addl
mov
mov
movsb
mov
js
mov
mov
imul
sub
enter
aad
adc
add
or
dec
enter
orb
and
scas
loop
movsb
jg
push
sbb
jp
das
ss
push
mov
xchg
mov
mov
push
add
dec
add
jns
pop
aad
add
es
fcomip
jecxz
adc
movsb
adc
call
in
mov
out
add
and
aam
rcrb
mov
xchg
mov
cmp
add
add
andb
in
pusha
bound
inc
in
or
data16
ljmp
pop
fsubl
sbb
mov
pop
enter
cs
dec
shrl
cmp
push
aam
lock
dec
add
hlt
lcall
cmp
cmpsl
push
mov
add
mov
loopne
cmp
sub
xchg
jae
sub
jl
pop
push
jo
inc
dec
shl
jbe
add
adc
popa
enter
cmp
fiadds
cmp
stos
test
mov
enter
mov
nop
jecxz
stc
scas
je
dec
lock
dec
xchg
cmp
jecxz
adc
cmp
mov
sub
push
push
adc
sbbb
add
lds
shlb
negb
sbb
inc
add
and
push
test
sbb
cwtl
mov
push
sub
or
imull
les
add
rcrl
push
dec
loop
fsubrl
push
jg
or
inc
cmp
jbe
popa
xchg
stos
aaa
loope
mov
adc
adc
pcmpeqw
cmpsl
pop
pop
iret
sub
add
cmpsl
pop
enter
pop
inc
lock
and
or
insl
frstor
or
inc
aam
mov
pop
and
pusha
or
stos
rolb
lods
enter
pop
loop
lea
push
sbb
clc
lea
mov
ljmp
icebp
ja
xchg
push
xor
add
pop
add
inc
int
int3
dec
mov
loope
add
mov
enter
dec
xor
and
xlat
in
bound
hlt
test
add
ret
dec
ds
push
in
lods
test
and
push
fidivs
shlb
ds
push
and
dec
rorb
cmp
adc
sbb
cmp
jp
lahf
fcomp
or
mov
push
movsb
daa
mov
loope
xchg
mov
mov
jp
sbb
inc
add
rolb
les
ret
dec
sub
mov
sbb
in
or
stos
pop
lods
data16
stos
bound
ret
pop
dec
out
push
std
dec
or
mov
xor
rorb
and
cmpsl
bound
adc
and
or
mov
scas
out
cmp
jae
fmuls
dec
adc
fcom
in
inc
into
sub
shrb
pusha
pop
add
cmpb
xor
stos
negb
cmp
or
bound
sahf
daa
inc
jno
jecxz
js
inc
loop
fwait
jl
or
rorl
lock
loop
pop
dec
add
dec
sbbb
lret
and
dec
ret
jae
or
mov
sub
jnp
rcr
out
jne
inc
js
addl
addb
lcall
icebp
adc
add
jbe
inc
inc
adc
sbb
loopne
add
jg
adc
pop
xchg
ljmp
popa
xor
clc
inc
xchg
xor
xor
dec
jno
push
inc
ltr
push
mov
loope
jge
adc
inc
ja
daa
inc
add
xor
add
lea
and
add
mov
ret
je
adc
rcl
pop
cmp
lock
sbb
jl
jo
sub
adc
lods
and
push
push
cmp
test
je
jnp,pt
sbb
pop
jmp
dec
adc
dec
call
and
fs
test
arpl
sbb
inc
sarl
jmp
mov
ret
adc
push
in
loope
push
sbb
push
out
jp
add
xor
push
or
out
xor
push
add
outsl
nop
lock
push
sbb
test
pop
push
clc
cwtl
xor
lock
sahf
fs
mov
xchg
call
jecxz
push
cmp
or
pop
push
or
leave
adc
lret
push
pop
mov
or
mov
out
fucomip
and
gs
xchg
inc
adc
loopne
push
mov
fnstsw
ja
mov
xlat
stos
xchg
scas
sub
int3
hlt
movsb
movsb
pop
int
add
push
loop
mov
cmp
adc
jle
push
add
lret
nop
or
xchg
sub
mov
std
sub
in
clc
add
sub
inc
js
rcrl
adc
repnz
mulb
mov
and
xor
lock
cmp
cwtl
cmp
aaa
inc
loope
jno
clc
decl
aaa
fisttpll
bound
adc
fistl
fwait
add
cmp
inc
shlb
adc
mov
inc
jo
xor
mov
jg
decb
push
clc
pop
insb
test
push
sbb
and
add
clc
into
mov
pop
jns
test
add
xchg
ljmp
mov
jp
outsl
mov
and
inc
push
or
cmp
es
lods
out
nop
cmp
inc
pop
jg
inc
hlt
in
mov
add
add
push
mov
mov
mov
push
nop
test
add
aad
mov
rcrb
dec
jb
inc
xchg
sub
cmpsb
cmp
pop
xor
xor
cmp
scas
pop
push
and
add
outsl
inc
mov
inc
js
pop
loopne
rolb
aad
mov
push
add
push
aam
pushf
lahf
adc
push
das
jno
daa
fxsave
aas
jnp
sbb
add
mov
out
testb
fsubrl
fbld
or
xor
add
filds
pop
loop
add
mov
movsl
loop
adc
cmc
in
ja
lods
fidivrl
inc
cld
ds
addr16
mov
aad
cld
or
aaa
jne
dec
imul
inc
mov
and
xchg
dec
cmp
adc
or
scas
loop
jb
rorb
add
or
xorb
insl
jne
push
jno
fnstcw
dec
xchg
xchg
inc
xchg
and
loope
inc
aad
movl
scas
or
pusha
sbb
push
roll
mov
mov
iret
lret
sub
sbb
add
andb
or
cltd
cmc
inc
popf
add
nop
lods
iret
push
test
pop
jp
inc
mov
xchg
int
and
or
and
push
subb
push
adc
sbb
push
mov
fdiv
pop
xchg
or
outsb
push
push
daa
cmp
xchg
cld
insb
push
add
js
push
adc
icebp
adc
push
xchg
and
mov
fwait
leave
add
pop
rolb
imul
sbb
inc
mov
addl
push
pop
mov
loop
outsl
sti
dec
jl
jmp
pop
nop
sub
jmp
push
dec
aaa
inc
es
popf
cmpsb
data16
or
inc
loopne
ja
enter
filds
fdiv
add
xor
popl
xor
rorb
repz
adc
add
lock
nop
jo
sub
xorl
jo
pusha
ljmp
dec
bound
xor
sbb
ret
mov
adc
dec
push
xchg
add
mov
cmp
shl
aaa
or
inc
cld
sub
shrb
or
push
inc
shl
xchg
mov
ficomps
and
cld
adc
shrl
xlat
mov
mov
inc
add
int
cmp
movb
sti
jae
mov
std
rcl
fidivl
lock
mov
inc
dec
repnz
aaa
lock
ds
cmp
mov
sub
mov
fwait
jp
and
loopne
call
add
or
cli
lock
cmp
xchg
mov
loop
dec
pusha
insb
push
icebp
mov
xor
loopne
xchg
neg
sub
je
xor
out
or
xor
push
cmpb
pandn
imull
pop
push
mov
inc
pop
mov
mov
dec
dec
sub
jno
xchg
ljmp
jbe
mov
mov
dec
jg
in
add
jbe
push
pop
js
ss
fsubl
push
push
jnp
aaa
call
adc
sub
in
cmp
inc
iret
add
jl
inc
cmp
gs
pop
out
icebp
out
push
mov
test
adc
andb
ja
adc
sub
xorl
add
test
shrb
faddl
xor
hlt
int
lods
xor
data16
cmp
aaa
add
push
pushl
adc
fisttpll
ret
sahf
das
imul
add
mov
sbb
xchg
outsb
insl
add
xchg
cwtl
sub
outsl
sti
cltd
xor
scas
adc
addr16
dec
jg
cli
jg
xor
add
loopne
add
in
call
mov
mov
imul
repnz
mov
das
cld
stc
lahf
mov
jns
add
mov
jmp
xchg
or
cs
mov
pop
mov
out
pusha
es
js
idivl
fs
inc
xor
sbb
stos
in
sub
adc
mov
adc
insb
adc
jp
sub
push
sar
sbb
push
sub
repz
jnp
jge
and
pop
iret
fistpl
fstpt
ficompl
or
pop
jp
mov
hlt
jle
out
push
xchg
add
sbb
enter
pop
jo
inc
hlt
incl
push
mov
lods
popf
or
std
mov
xchg
mov
lds
testb
inc
xor
pop
nop
and
js
mov
sub
aaa
icebp
js
jmp
sub
outsl
aaa
xorl
rorb
stos
mov
push
out
pop
fiaddl
xor
frstor
or
icebp
pop
clc
or
adc
jle
out
xlat
ja
add
shrb
adc
and
outsb
icebp
pushf
enter
xchg
mov
js
add
add
cmpb
hlt
add
int
cmp
cmp
insw
mov
inc
push
jle
ret
pop
std
mov
clc
add
cltd
js
add
and
mov
mov
imul
sbb
lret
xorb
xchg
and
icebp
jge
std
mov
testb
push
mov
idivb
add
imul
ljmp
sub
cld
mov
inc
fimuls
adcl
dec
gs
ret
push
lret
or
push
mov
pop
sbb
test
xchg
pop
sub
pop
in
push
ja
fs
dec
inc
push
or
jne
inc
sub
push
rcll
cmc
push
sti
cmpsl
xor
in
gs
stos
pop
push
sbb
pop
cltd
adc
mov
out
xchg
mov
and
pop
popf
inc
xor
mov
add
push
icebp
push
shr
insb
push
fimull
adc
mov
fnstsw
adcl
repz
pop
ret
jb
inc
mov
push
bound
mov
inc
adc
mov
das
insl
adc
and
mov
dec
cwtl
adc
insb
sbb
test
test
push
sub
xor
mov
cmpsb
clc
nop
dec
rcrl
add
outsl
add
or
iret
jl
sub
in
in
call
subb
cmp
decb
inc
loope
leave
pop
mov
test
xchg
mov
cmpsb
jg
outsb
lock
xchg
inc
mov
cld
popf
xchg
add
mov
or
push
daa
icebp
xor
push
mov
jne
insb
lret
dec
clc
outsb
loope
inc
inc
dec
inc
add
ja
stos
dec
call
orb
cwtl
adc
or
fs
and
jge
test
or
add
and
mov
ljmp
inc
mov
fistpll
icebp
mov
fistps
leave
mov
bnd
sub
mov
sbb
movd
push
gs
les
clc
and
mov
ljmp
sbb
cli
pop
adc
xor
inc
call
mov
and
add
es
sarb
push
xchg
xor
outsb
std
lcall
outsl
adc
test
sti
pushf
mov
mov
cmp
mov
or
roll
mov
int3
rol
jmp
mov
adc
dec
add
adc
ja
call
add
mov
mov
or
add
xlat
or
xor
inc
push
mov
and
icebp
je
cmp
test
shlb
cmp
mov
sti
sar
rorb
mov
cmp
xor
cmp
adc
aaa
push
or
sbb
lods
in
test
mov
or
push
and
sbbb
push
sub
mov
or
push
sbb
mov
insb
mov
fildll
sbb
cmp
and
xchg
push
or
scas
pop
ret
fimull
popa
inc
jo
jp
mov
push
xorl
inc
cmp
testl
jae
add
inc
jno
pushl
pop
pop
dec
stos
xchg
adc
loop
bnd
cmp
sub
xchg
adc
pop
jecxz
pushf
test
movsl
ret
fsubl
rcrb
add
sbb
sbb
add
cmp
fwait
insl
call
sbb
loopne
mov
incb
sub
push
mov
addl
je
cmc
or
and
or
cmp
leave
call
push
dec
inc
inc
sub
insl
shlb
adc
cmp
lcall
mov
mov
sub
cmpsl
xchg
fisttpl
lcall
xor
pop
into
adc
int3
jecxz
clc
inc
out
fldenv
fdivp
dec
bound
mov
push
sub
inc
sbb
jg
xor
repz
xchg
inc
mov
mulb
gs
mov
mov
js
das
lahf
fidivl
mov
and
add
loopne
jae
loope
dec
mov
dec
pop
xor
ret
mov
or
dec
sub
add
test
push
pushf
mov
pop
mov
push
sub
jb
pushl
cmp
push
test
pop
fbstp
push
xor
cld
mov
fisubrs
movsb
sbb
jno
movb
adcl
mov
mov
mov
mov
jno
test
and
mov
or
int3
mov
pop
inc
sub
pop
and
mov
sub
test
js
aas
jbe
push
mov
pop
add
es
rcl
or
mov
xchg
leave
data16
and
cmp
stos
rclb
test
inc
add
andb
dec
cmp
roll
xchg
shll
das
mov
mov
enter
xchg
int3
int
pop
cmc
je
andb
add
pushl
addb
out
les
mov
sub
sbb
sbb
loope
jge
push
and
pusha
stc
inc
lods
dec
mov
dec
adc
test
clc
add
inc
push
movl
xchg
movsb
sub
xchg
adc
xchg
rcl
cmp
xchg
imul
xor
adc
xor
mov
add
jne
arpl
or
mov
add
insb
jne
push
add
and
inc
sub
push
mov
cmp
add
or
pop
xor
or
inc
loopne
sub
aas
push
in
mov
add
add
or
sbb
and
std
cmc
leave
add
mov
inc
sub
dec
and
push
push
inc
add
in
mov
sub
movsl
mov
pusha
pop
icebp
adc
jo
sbb
or
pop
push
cwtl
jne
mov
arpl
pop
movsl
les
sub
add
inc
add
insb
mov
dec
mov
xor
aam
adc
pusha
test
out
rcrl
sbb
mov
mov
gs
adc
inc
push
adc
fld
int
sbb
inc
hlt
aad
adc
loop
outsl
rcr
ss
and
lods
jg
insl
or
dec
aam
ljmp
rorl
js
cmpsb
sti
or
sub
aad
dec
in
inc
xchg
mov
js
test
push
add
push
xor
aam
inc
fdivs
mov
cmc
clc
inc
jnp
adc
push
cmc
lods
sbb
das
fsub
sbb
outsl
xchg
addb
sbb
or
jns
inc
jge
fisubrl
ja
lret
add
clts
cmp
shlb
inc
pop
call
das
push
inc
sbb
cmp
imul
out
cli
pop
insb
adc
popl
roll
xchg
arpl
stos
rep
add
sbb
decl
daa
mov
inc
je
inc
jbe
inc
popf
sbbl
test
mov
pop
loopne
add
push
mov
inc
mov
push
cmpb
and
add
mov
pop
mov
adc
repnz
pop
lods
daa
cmp
mov
addl
cs
pop
test
das
stos
roll
aaa
movsb
lahf
or
adc
iret
xor
int
imul
and
rcrl
push
mov
lock
jno
dec
lret
xchg
cmp
jae
mov
inc
call
sub
ret
cmc
rcll
xchg
or
pop
cs
fistpl
jnp
movsl
stc
clc
or
inc
xchg
and
js
insl
sub
mov
mov
push
scas
loope
xchg
out
add
sub
adc
cld
and
fcomi
test
sub
and
in
arpl
push
and
out
lcall
addr16
hlt
add
repz
lea
add
arpl
hlt
fsubrs
mov
xchg
ret
push
pop
and
js
mov
mov
push
mov
movsb
roll
repnz
ficoms
jno
fldt
fnstcw
in
add
jb
orl
jecxz
pop
cmpsl
je
fildl
xchg
data16
xchg
dec
jb
push
inc
fsubl
xchg
jmp
in
fsubrs
and
ret
or
lret
mov
and
mov
mov
lds
clc
out
add
sbb
out
ret
mov
mov
push
adc
or
dec
and
inc
adc
movb
loope
adc
inc
loope
mov
mov
fs
imul
sbb
outsl
ffreep
scas
dec
xchg
scas
enter
and
das
mov
adc
xor
inc
pop
mov
sbb
dec
out
mov
jnp
pop
lahf
push
std
dec
cmc
icebp
adc
sahf
bound
aas
add
or
fidivrl
pop
fwait
pop
inc
lret
or
and
test
stos
addr16
out
jg
shr
jmp
lea
jns
xor
jae
into
push
test
or
pop
stos
xrelease
outsl
cld
adc
push
mov
stos
add
stc
sbb
in
xor
fsubs
test
jne
adc
and
pop
mov
dec
inc
call
sbb
dec
aad
and
ss
pop
jmp
sub
aas
xor
lahf
sub
add
sub
sub
cmpb
scas
add
sub
xor
aad
outsb
push
sti
ja
mov
push
mov
mov
dec
bound
sub
jno
adc
ror
dec
arpl
jecxz
jge
hlt
fmull
mov
mov
mov
mov
orb
orb
push
pusha
lret
imul
or
rolb
adc
in
js
and
mov
add
dec
xchg
aam
scas
aam
in
pop
subb
jl
sub
outsl
jl
sbb
negb
in
xor
lcall
loope
sbb
and
sub
icebp
leave
dec
pop
ja
test
add
dec
or
xor
rcll
jge
xor
test
jo
fmuls
cmc
and
stos
ds
push
ret
mov
push
inc
jge
mov
aam
je
mov
sub
movsl
pushf
xlat
insl
call
push
fwait
out
or
xor
repz
mov
cmp
std
rolb
sbb
push
push
test
xor
std
pop
fsubrs
je
repz
daa
cwtl
out
jg
cli
jl
in
ljmp
test
mov
insl
mov
cs
loope
lock
outsb
add
aad
jp
mov
clc
mov
sahf
sti
add
mov
jbe
loope
incl
imul
in
pushf
cmp
repnz
inc
out
push
in
mov
cld
xchg
js
mov
jbe
mov
jmp
rcrl
adc
push
push
icebp
lea
pop
cli
or
push
dec
fcomps
ffreep
test
mov
pop
out
mov
jp
cmp
fimuls
pop
pop
adc
adc
stos
mov
cmp
int3
pop
push
movb
hlt
sub
adc
add
inc
hlt
iret
cmp
jne
jmp
sub
mov
out
rcll
mulb
faddp
push
mov
pop
add
out
jbe
lret
iret
xchg
pop
pop
push
jns
sbb
mov
or
scas
or
or
pusha
ret
or
jg
jbe
lock
mov
adc
sbb
jae
xchg
fcomip
stc
pop
pop
scas
sub
and
fisubl
outsb
mov
test
movsb
out
xchg
jg
adc
pop
cli
lods
cmpsb
rorb
movsl
in
ss
jbe
pushf
enter
xchg
or
pop
shll
repz
or
aaa
adc
mov
lods
in
add
cmpsb
test
iret
mov
xchg
test
cmp
sub
aad
mov
sbbb
ret
pop
inc
push
sub
add
mov
or
imul
and
cmpsb
out
xchg
inc
and
add
cmc
adc
add
push
and
or
addr16
jle
sub
in
push
cmp
add
ret
sub
inc
dec
es
vpcmpgtb
test
sti
sti
inc
dec
aaa
call
sti
icebp
test
movsl
nop
vsubpd
sti
outsl
push
jle
out
test
stc
mov
jb
or
sub
inc
cmp
pop
or
pop
mov
jl
mov
pop
lret
ss
sbb
inc
mov
mov
pop
movsl
add
loopne
xchg
add
mov
sbb
push
testl
add
push
mov
test
icebp
xor
imul
lret
fmul
int
mov
push
cld
mov
push
jl
das
loop
pushf
js
stos
fimull
das
sbb
icebp
lret
inc
or
add
loop
mov
cmp
add
xchg
data16
sahf
mov
stos
pop
out
adc
xlat
cmp
inc
jmp
roll
loop
xchg
jo
mov
cmp
pop
push
mov
adc
mov
xchg
jo
push
mov
in
lahf
movsb
lret
sub
xchg
mov
inc
sbb
notl
dec
cmp
push
sub
les
or
in
test
es
outsl
popl
ucomiss
dec
outsb
je
cmp
fcomi
xchg
mov
mov
sbb
das
aad
lea
adc
xchg
pop
push
aad
sub
mov
stos
sub
push
lock
clc
shlb
repz
inc
lret
cld
push
scas
cmp
adc
imul
not
mov
aad
or
mov
mov
jg
push
cmpsb
mov
fcoml
push
inc
lret
inc
or
or
in
mov
jmp
dec
xor
jecxz
inc
inc
jge
test
inc
xor
and
sbb
push
lea
jle
add
in
and
test
or
mov
out
mov
cltd
cmp
or
adc
fcmove
sub
out
pushl
adc
push
aad
sbb
clc
mov
js
jo
sub
sub
fbstp
jo
jmp
call
xorl
cmp
add
int
jno
add
cwtl
pushl
pop
jecxz
inc
dec
mov
sub
jmp
sbb
sbb
adc
loopne
hlt
push
cli
add
sub
push
lcall
add
and
ja
lcall
sbb
adc
sbb
mov
push
add
inc
cli
mov
stos
into
stos
xchg
lret
pop
rorl
or
lret
push
stos
aaa
std
daa
les
mov
bound
icebp
pop
add
and
insl
sbb
testl
shrl
cmp
pop
jl
test
mov
pop
loopne
rcll
pop
std
push
dec
loope
idivb
and
push
addr16
leave
sbb
lock
clc
xor
push
leave
popa
daa
sub
lds
orb
shlb
lock
mov
mov
mov
pop
lods
push
xchg
pusha
and
adc
pop
or
sti
and
fsubl
aad
jge
bound
push
test
jno
out
mov
sub
in
inc
xchg
clc
outsl
jns
pop
es
stos
jbe
or
sarb
mov
jp
cmpb
sub
pusha
nop
mov
stc
loope
call
rclb
mov
fstl
add
cltd
mov
lock
xor
sahf
daa
addb
rorb
jl
sbb
movsb
mov
add
adc
mov
pop
outsl
fucomip
jg
jb
xchg
sub
xor
push
jno
decl
repnz
sbb
inc
sti
dec
shr
sarl
imul
xor
mov
stos
orl
das
arpl
lods
sub
fdivrl
pop
mov
call
clc
and
dec
sahf
loop
movsb
leave
add
sbb
jg
mov
fisttpl
xchg
inc
push
in
mov
and
popa
sub
xlat
rclb
inc
les
and
pop
jle
std
inc
inc
dec
dec
or
fcoms
clc
adc
or
test
push
push
and
dec
mov
add
xor
out
sub
mov
icebp
pop
std
add
pop
jns
mov
push
cld
daa
stos
jb
adc
sbb
and
jno
jecxz
mov
mov
adc
xchg
mov
adc
loop
xor
push
dec
adc
clc
and
aad
loope
push
test
hlt
in
inc
sub
push
aad
mov
and
cwtl
sbb
ds
adc
stos
sahf
pusha
into
cmp
xor
and
sub
or
mov
shrb
cld
sbb
or
iret
rolb
add
lock
pop
or
hlt
and
sub
pop
cmp
cmp
lahf
addps
loope
inc
mov
push
add
add
hlt
add
or
adc
inc
dec
or
stos
push
push
xchg
xor
xlat
add
loopne
cwtl
sarl
jmp
adc
std
dec
push
adcb
adc
js
sbbb
add
mov
loop
stos
or
cld
push
sub
sub
clc
and
xchg
mov
pop
fwait
popa
xor
addb
stc
fcoms
mov
mov
ljmp
ret
stos
jno
push
bound
sub
inc
int3
inc
mov
scas
loopne
adc
inc
fsubl
push
and
push
dec
xor
add
xchg
rcl
adc
adc
pop
adc
and
sti
adc
pop
fcom
sbb
adc
inc
cmp
shlb
adc
cmovo
nop
inc
dec
mov
dec
inc
pop
cmp
gs
call
pop
push
push
fstps
mov
mov
mov
scas
pop
jnp
push
outsl
add
pop
les
in
fdivrp
sub
aas
into
or
outsl
add
mov
dec
les
out
mov
imul
xchg
adcb
xchg
subb
aam
sbb
stos
jbe
ds
inc
mov
xchg
mov
xor
push
inc
mov
dec
into
pop
lret
movsl
push
push
sub
ja
clc
jbe
movsb
daa
test
add
or
fldt
dec
aas
xor
mov
ficoms
loop
sbb
clc
dec
inc
push
sti
into
sti
cld
pop
pop
xchg
jb
adc
jne
imul
push
sub
insb
lret
xchg
and
decb
test
xor
es
out
inc
mov
lahf
aaa
or
mov
js
mov
pop
push
clc
es
push
popa
dec
cltd
cmp
mov
cli
repnz
sub
ficoml
pop
add
add
fcmovne
adc
or
es
shl
clc
add
test
xor
adc
call
adc
imul
sbb
ljmp
out
je
push
rorl
call
icebp
pushf
xchg
cmc
xor
push
ret
push
or
adc
notb
scas
loopne
jne
aaa
arpl
insl
arpl
sub
mov
or
sbb
inc
fcomi
incb
jmp
pop
mov
vcmpsd
add
movsl
adc
stc
xchg
ficompl
call
cwtl
mov
test
pop
or
insl
lods
es
std
loopne
pushl
filds
jo
mov
jmp
xchg
or
jmp
nop
xchg
mov
cmpb
add
cmp
mov
add
mov
or
mov
add
sti
sub
jecxz
push
or
push
or
dec
es
push
decb
push
movsb
shll
or
cmp
aas
jg
fbstp
fwait
dec
cwtl
adc
imul
cmpsl
cmpsb
xor
mov
js
aaa
pop
clc
fistps
popf
mov
dec
xchg
stc
jmp
loop
inc
loopne
jecxz
xor
inc
push
mov
aam
das
lcall
push
hlt
sbb
dec
cmp
lods
or
sub
test
mulb
pop
sar
dec
shr
or
loope
sub
rcl
push
outsl
push
pop
mov
dec
xchg
mov
sub
fildll
cltd
loope
inc
adc
inc
mov
pushf
pop
jle
dec
inc
mov
jl
ret
push
or
les
js
mov
movsb
mov
movsl
mov
and
aaa
sahf
cmpsl
bound
pop
fists
sbb
fnstsw
mov
ret
int
or
arpl
imul
add
std
or
aas
adc
fbld
jno
push
mov
dec
dec
cld
mov
xchg
add
push
stc
inc
xchg
adc
cmp
push
pop
int
fcoml
fstpt
jmp
sarl
cwtl
rclb
add
lret
cmp
lds
fistl
es
push
inc
sti
test
out
xchg
and
jbe
popf
mov
sub
outsl
jge
fs
sbb
icebp
test
or
xchg
mov
in
loop
xchg
mov
mov
movsl
jp
dec
and
sub
js
test
shlb
dec
aaa
std
scas
and
cmc
mov
sahf
addl
inc
mov
sti
xchg
push
std
and
outsb
mov
insb
fidivrl
jns
lods
adc
lret
loop
push
mov
push
loope
sub
lods
loopne
pop
pop
in
xor
mov
mov
mov
inc
negb
cmpsb
nop
xor
fcoms
inc
fildl
or
mov
int
push
lahf
jmp
cwtl
push
dec
in
ljmp
sbb
sbb
cltd
sarb
push
fidivl
xor
std
or
lods
mov
mov
pop
ja
push
mov
mov
cmp
mov
fwait
jle
push
je
pop
int3
inc
es
or
cmp
cmc
int3
mov
aad
cli
packssdw
leave
push
aaa
cli
or
fidivl
js
or
mov
cs
mov
add
pusha
xor
adc
ja
sbb
subl
popa
shlb
xor
cmp
pop
jae
jno
dec
mov
pop
aas
mov
mov
inc
pop
or
cld
push
in
ja
mov
add
imul
add
or
loop
inc
or
je
mov
or
gs
pushf
jmp
inc
pop
inc
or
push
lahf
push
sbb
in
jb
ljmp
scas
push
outsl
fnsave
hlt
inc
adc
sub
add
enter
xorl
sbb
in
add
add
or
and
inc
dec
into
in
ds
xorb
enter
or
jb
adc
push
sbb
js
add
jge
mov
adc
xor
scas
and
fsubp
inc
add
jg
or
ja
or
mov
add
mov
mov
sbb
jnp
and
lcall
test
mov
xor
dec
les
dec
add
sarl
xor
adc
cmp
xor
fistpll
adc
or
cmp
pop
dec
jae
push
or
js
es
jo
cmpsb
stos
mov
aas
add
sub
add
rorl
add
adc
push
sub
lods
adcb
jo
adcl
jae
jge
daa
inc
lock
imul
mov
xorb
test
or
cmp
mov
stos
loope
inc
cwtl
pushf
cltd
and
push
lock
dec
daa
push
mov
aad
push
jnp
les
in
out
add
cmc
arpl
mov
mov
xchg
add
mov
mov
xlat
es
daa
add
les
je
adc
cmp
jge
cmpsb
and
test
outsl
je
mov
aam
sahf
shlb
push
lret
cld
hlt
adcl
in
push
and
cmp
add
shll
or
lods
and
clc
mov
cltd
or
or
ja
sbb
test
and
or
push
cmp
ja
inc
inc
lahf
push
lea
add
adc
test
xchg
dec
into
mov
pop
mov
cmp
dec
test
inc
fwait
jmp
mov
jmp
mov
xor
add
mov
and
and
mov
and
inc
add
push
inc
add
and
cmp
add
loopne
push
outsl
mov
fdivrl
icebp
adc
cmp
inc
push
xor
stos
repz
xchg
mov
or
or
add
xor
std
gs
pusha
insl
jnp
cmp
inc
lods
push
jl
loope
mov
dec
lret
or
jne
fmull
add
pop
xchg
xor
cmp
dec
in
ljmp
sub
sbb
sti
xor
adcb
xor
xor
cli
cmp
jae
add
jecxz
bound
and
lahf
add
jo
sub
aad
lock
int
je
xchg
mov
bound
adc
incl
sub
xchg
enter
mov
jl
dec
or
mov
cld
clc
pop
jl
cmpsl
mov
mov
add
mov
sahf
add
jmp
cmpsb
icebp
scas
cmpsb
ljmp
lock
adc
dec
push
cltd
and
popa
cmp
lods
call
xor
adc
lea
or
and
insb
icebp
or
xchg
xacquire
movsl
lret
and
out
pop
or
cmp
cld
fiadds
and
or
incb
hlt
push
lret
xchg
jge
daa
repnz
ret
add
xchg
mov
lock
fs
add
fcmovb
call
fldenv
add
mov
bound
and
and
xchg
fmuls
cmpsb
inc
sti
or
mov
scas
test
pushl
stos
jmp
xor
mov
outsl
rorl
sub
xchg
out
aaa
inc
pop
dec
inc
rclb
dec
jo
dec
jne
les
cmp
pop
jo
cmp
jmp
mov
add
sbb
ljmp
lock
test
ret
jae
xor
mov
xchg
cmovns
call
stos
sbb
mov
adc
cvtpi2ps
or
ja
adc
adc
push
fcompl
mov
push
fwait
lea
fisttps
bound
sub
rolb
sub
and
ljmp
outsl
mov
enter
in
ljmp
cwtl
sub
mov
decl
adc
mov
mov
fstps
xlat
loop
imul
out
addl
adc
roll
add
lock
das
call
push
jne
sbb
rorb
stos
push
je
xchg
imul
inc
in
mov
cmpsl
sub
leave
lds
adc
mov
testl
add
dec
or
add
xchg
mov
xchg
rcll
push
sbb
sti
ret
loopne
mov
jp
adc
mov
cmpsl
add
fstps
adc
testl
inc
or
add
xor
inc
jle
and
add
or
adc
push
lret
xorl
out
fcomp
and
movsb
call
sbb
lcall
inc
shr
mov
adc
or
loop
inc
insb
dec
add
inc
inc
add
js
add
mov
imull
stos
xorb
xor
cld
or
lock
add
imul
rorb
outsl
dec
mov
add
jl
sahf
push
or
xchg
lock
leave
jmp
loopne
pop
xorl
jb
dec
push
xor
adc
je
adc
lea
inc
dec
and
sub
pop
lahf
push
push
sbb
subl
add
lock
inc
icebp
insl
dec
mov
inc
sbb
push
cld
rorb
pop
rolb
fstpl
cmc
jo
std
mov
dec
or
aas
or
push
adc
add
fstl
sub
xchg
adc
pop
popa
mov
subl
jo
sbb
andb
inc
fbld
jmp
xor
add
popa
loop
inc
push
mov
orb
adc
cmp
sbb
cltd
push
cli
dec
inc
mov
and
mov
pop
pop
push
rcrb
or
sub
out
enter
pushf
fwait
in
mov
mov
xchg
pushl
mov
sbb
jg
mov
mov
push
mov
add
adc
jbe
sub
inc
icebp
mov
xchg
je
pusha
jmp
cmpsl
mov
push
lds
bound
dec
lock
lret
cli
xor
data16
push
xchg
aas
push
cld
decl
fwait
xchg
add
add
jle
push
cs
mov
decb
clc
push
sbb
lret
insb
xchg
xor
adc
push
sbb
fsubl
and
ret
in
and
jnp
mov
sub
clc
dec
decb
lcall
std
or
adc
push
dec
cmc
inc
adc
ljmp
jbe
mov
adc
jbe
mov
pusha
jns
popf
xor
jb
fsts
aad
leave
std
nop
enter
mov
adc
sbb
sub
mov
sbb
sbb
std
inc
imul
cmpb
or
jl
xchg
or
jg
or
and
dec
and
pop
mov
divb
iret
popf
pop
xchg
xorb
fsubs
sbb
arpl
lea
xchg
popf
repnz
mov
mov
add
mov
das
cld
inc
es
mov
mov
mov
imull
das
jo
jmp
sub
movb
xchg
pop
mov
ficoml
inc
sub
add
rcrb
mov
lea
pop
add
data16
push
sbb
fsubrp
cld
out
movsb
jmp
push
mov
mov
push
xorb
std
pop
xor
loop
pop
stos
out
sbb
inc
adc
adcb
movsb
mov
or
inc
mov
ja
push
rclb
jne
notb
cmp
or
mov
sub
pop
sub
aam
add
or
or
adc
test
dec
adc
pop
cld
sbb
repnz
test
sbb
mov
pop
adc
mov
inc
loopne
js
adc
mov
faddl
repz
mov
adc
xor
pop
fs
mov
fcom
ret
stos
out
inc
mov
jl
jmp
out
lock
filds
mov
push
sub
lcall
shrb
adc
stc
or
jmp
fmuls
xchg
pusha
sbb
push
xorb
mov
push
add
jp
mov
adcl
test
fisttpl
ja
sub
jg
popa
jl
inc
and
sub
adc
inc
adc
sbb
and
inc
push
js
and
ret
shll
adc
jae
leave
rorl
dec
add
adc
adc
sub
xchg
in
mov
and
cltd
std
fiaddl
fdivrl
mov
ja
outsl
pop
push
lar
xor
cwtl
or
mov
dec
jmp
push
jg
cmp
jp
fnstcw
push
adcb
push
xlat
pop
inc
and
cmpsb
out
sub
xor
xor
mov
mov
push
push
or
push
vpmacssdql
icebp
mov
sub
sub
sbb
add
fidivl
cmp
gs
fs
cwtl
or
imul
test
or
leave
loop
sbb
add
cmpsl
push
fwait
inc
xor
mov
mov
xor
fmull
mov
repz
outsb
loope
jmp
loop
sbb
xchg
mov
push
mov
sub
pop
cmp
out
adc
fisubrs
cmc
mov
ret
ret
loope
pushf
add
or
xchg
cmp
in
mov
inc
mov
sahf
mov
ret
pop
pop
fisttpll
inc
sbb
shlb
fildl
pop
dec
add
sbb
dec
jns
mov
push
inc
idiv
or
loopne
push
mov
adc
sub
fcomps
fsubrp
loopne
icebp
lods
inc
outsb
and
stos
or
sbb
roll
inc
add
ffreep
mov
push
lods
mov
dec
dec
mov
mov
mov
sub
or
mov
sbb
cmpsl
aaa
clc
xlat
xchg
fiadds
push
jg
cmpl
int3
cmp
push
sub
lret
xchg
jge
aam
hlt
bndldx
shll
sbb
pop
nop
add
ret
pop
mov
stos
sbb
in
fnstsw
mov
xchg
aas
fcomps
aad
mov
cli
jle
out
pop
and
outsl
adc
xor
aam
push
mov
sbb
sbbl
clc
push
dec
in
or
and
pusha
lret
or
sub
outsl
add
sbb
push
cmp
xchg
push
dec
sub
leave
pop
dec
cmp
push
int
adc
and
and
dec
psrlq
aam
and
add
fstpt
sarb
push
pop
insb
in
lret
js
cmc
in
jl
push
sub
fildll
pop
sub
inc
int
stos
shrb
ljmp
push
xor
clc
mov
lods
cmp
sbb
push
into
mov
mov
loopne
orl
fistpl
das
or
int3
push
pop
aam
inc
nop
into
xchg
cmpl
sbb
sbb
lods
mov
test
decl
mov
int
xchg
and
cmp
xor
stos
loopne
rolb
imul
js
mov
mov
into
in
mov
add
or
push
and
sbb
inc
jns
mov
lahf
scas
int
loopne
jne
shl
mov
add
test
call
jno
pop
pusha
jecxz
ja
mov
and
adcl
mov
jmp
cmp
sbb
inc
pop
incl
jno
cmp
pop
or
outsb
int3
stc
xor
aas
pusha
sahf
push
ja
and
mov
sub
add
lcall
xchg
dec
push
test
add
mov
cld
daa
frstor
mov
idivb
jb
dec
push
lods
movsb
aad
pxor
sub
cmp
fucom
ljmp
subb
test
test
push
aaa
aad
popa
jecxz
aas
loopne
mov
fld
cmp
inc
movsb
xchg
mov
push
adc
arpl
push
sub
movsw
cmp
ret
ds
mov
lock
or
fsubr
inc
sbb
fcmovnu
sub
nop
add
or
addr16
out
clc
mov
into
jecxz
scas
rorl
in
push
mov
hlt
sbb
loope
cli
ret
push
push
add
repnz
fsubrs
filds
push
es
outsb
adc
cmp
jg
ja
or
ficompl
lahf
ret
fcmovnu
icebp
lods
adc
sbb
dec
popl
call
cmp
adc
outsl
mov
clc
call
imull
pusha
lds
adc
mov
xchg
pop
cli
xchg
cmp
pop
out
dec
les
cmpsb
mov
cmp
pop
shll
jo
enter
push
mov
movsb
xor
push
xor
incl
or
add
xor
ljmp
int3
dec
push
incl
inc
outsb
mov
mov
push
ja
pusha
lea
lcall
pop
xor
mov
pop
push
mov
adc
xor
and
jne
lods
xchg
mov
sbb
cli
call
sbb
push
mov
sbb
das
push
jnp
add
add
pop
mov
and
sub
add
test
adc
cmp
mov
push
fistpll
cltd
cmp
mov
test
inc
mov
mov
pop
and
mov
fcomip
shlb
push
cmp
and
push
xchg
pop
push
mov
leave
cli
dec
pushf
dec
add
mov
filds
mov
jge
jmp
lcall
scas
mov
ret
fimull
jns
add
lods
cmp
ds
out
outsl
xchg
cli
inc
ret
mov
into
dec
mov
pop
xor
test
out
inc
xchg
or
aaa
in
cmpsb
push
sub
call
push
mov
cmpsl
jb
pushf
es
pop
decl
jle
es
out
sbb
adc
inc
stc
mov
jbe
mov
fdivr
push
jg
jo
jbe
in
movsl
cmpsb
pop
mov
aam
push
and
jg
mov
pop
test
mov
or
push
push
pop
das
and
ds
cltd
aaa
insb
fs
push
out
outsl
mov
pmulhuw
lds
fimuls
cmp
shr
mov
xor
aas
lock
mov
aam
or
adc
push
sub
and
in
test
ss
pop
or
fisubrs
lcall
cmpsb
cmp
xchg
push
mov
or
clc
repnz
ret
mov
js
dec
std
fwait
test
testb
subl
xor
jg
dec
mov
mov
xor
pop
mov
xchg
ljmp
pushf
xchg
ret
and
and
push
andb
pop
ret
cltd
fisttpll
popa
sub
adc
das
xor
std
jno
jae
in
inc
insb
lock
and
lahf
mov
push
xorb
add
lcall
popf
insl
repz
add
push
sti
xor
or
out
pushl
xchg
xor
pop
cmpsb
jp
popa
lods
adcl
out
shlb
sbb
js
mov
and
pop
xor
leave
fcoms
sub
xchg
sbb
ss
aas
cmp
mov
mov
mov
jne
add
xlat
push
and
or
mov
inc
jg
and
push
cltd
popl
enter
sbb
cmp
adc
icebp
pop
and
xor
xorb
sbb
js
icebp
lret
lea
dec
xchg
test
bound
pop
adc
mov
mov
and
sti
mov
rorb
and
aaa
and
jg
cmpl
sub
movsl
cmp
sbb
mov
and
adc
lds
or
jp
jge
mov
loopne
das
icebp
pusha
mov
and
ret
popf
decl
mov
aaa
aad
test
ljmp
or
je
dec
jno
cmp
dec
aaa
adc
mov
xchg
movsl
inc
dec
mov
out
sbb
call
pop
adc
loopne
mov
jb
imul
push
sti
aaa
pop
mov
sub
pop
push
or
imul
adc
mov
mov
jl
arpl
dec
fadds
jo
pop
jmp
jo
jo
out
xchg
cmp
add
leave
daa
and
mov
xchg
pop
push
mov
jge
fidivl
xor
fs
cmpsl
faddl
sub
sar
push
lcall
inc
sub
push
lods
sbb
mov
xchg
or
cmc
popa
je
cwtl
jb
repnz
icebp
sub
xor
test
ss
nop
adc
cs
xorb
insb
push
lock
inc
jb
sbb
pop
sbb
cs
pusha
std
pushf
orb
or
inc
push
add
xor
adc
imul
xor
inc
cmp
lcall
lock
movsb
inc
pop
lds
lahf
or
or
inc
and
es
inc
in
push
test
mov
cld
shll
in
xchg
mov
aas
jge
rcr
pop
pop
in
adc
mov
lcall
lea
xor
lods
out
mov
rcrl
push
gs
das
cli
push
imulb
push
mov
xchg
sbb
mov
clc
push
les
mov
xchg
xorb
js
mov
fsubrl
and
int3
fadds
stos
pop
rolb
xchg
scas
in
decl
inc
add
mov
movsb
sti
push
add
inc
or
mov
jbe
movsb
and
mov
jo
dec
mov
push
lock
and
push
add
inc
dec
ljmp
push
jne
pushf
sub
and
or
and
adc
mov
xor
enter
add
lret
xchg
push
xor
adc
push
add
xchg
cld
push
icebp
enter
sbb
das
push
adc
cwtl
add
test
push
sub
scas
cmpb
mov
push
sbbb
movsb
jbe
adc
test
mov
lahf
inc
push
cmc
flds
test
mov
pop
push
sbb
lret
daa
xchg
mov
sbb
jle
xor
nop
shrl
adc
nop
mov
add
sub
xor
cld
jnp
fisttps
cmp
adc
xor
outsl
sbb
das
enter
pop
loopne
lods
xor
insb
repnz
ss
lcall
loop
or
lret
fcoms
pusha
pop
mov
cmp
pop
aas
roll
or
inc
aam
adc
sub
jl
push
push
push
rcrl
add
push
cmp
fcmovb
mov
or
lahf
xchg
cmp
pop
or
and
pop
xor
xor
push
mov
push
test
lret
adc
xchg
lock
hlt
fcompl
fstpl
shl
sub
sub
pop
push
test
sub
outsb
popa
pop
loopne
or
fdivs
cmp
fsubr
xor
and
push
pushf
adc
sbb
ss
or
jbe
or
lods
loope
add
jmp
incl
fisttps
pusha
lcall
push
jge
mov
add
jecxz
jmp
xor
mov
sub
push
jo
mov
in
idivl
das
rcrl
movl
xor
add
pop
xchg
call
dec
dec
mov
cli
ss
and
adc
sarb
mov
call
jle
mov
sbb
test
stc
js
or
or
jp
xorb
imul
addr16
sub
add
pop
daa
cmpsb
mov
sarb
push
hlt
jae
mov
call
es
adc
mov
xchg
fisubl
sahf
in
jnp
rcrb
loope
mov
mov
hlt
es
add
mov
xlat
fidivs
push
or
adc
fwait
jle
or
cmpb
sub
rclb
jne
shr
test
rorb
xchg
pushf
adc
cmp
mov
lret
and
push
inc
pop
sti
inc
push
cmp
xlat
cmp
mov
andl
sbb
pop
mov
jecxz
jae
rcr
popa
mov
mov
mov
adc
popf
adc
mov
pop
std
push
notl
adc
push
xor
ficomps
jl
push
test
inc
nop
or
mov
outsl
inc
pop
mov
cmp
shll
push
jg
enter
rorb
add
scas
shrb
pop
jg
dec
insb
out
negb
cld
and
movsb
idivb
inc
cs
outsl
jmp
jae
inc
and
ja
add
mov
ljmp
enter
inc
cli
dec
sbb
icebp
push
cmp
xchg
push
jno
das
jne
or
push
add
pop
cmp
push
pop
adc
mov
orb
fdiv
xor
mov
rolb
push
je
jl
mov
cmpb
pop
or
fisttpl
xchg
js
cmp
lea
pop
sbb
rcrl
les
pop
push
leave
popf
bound
repz
sub
xchg
lahf
inc
cmp
cmc
sub
pop
pop
aaa
or
inc
cmp
or
jp
fwait
cli
das
mov
data16
mov
push
data16
ljmp
sub
cmpsb
xor
push
add
jnp
shrb
loopne
push
adc
addb
adc
aad
aaa
jbe
mov
movsw
mov
cld
lods
test
ret
out
lahf
shll
das
ja
fists
xor
std
bound
mov
or
ljmp
ljmp
out
dec
cmc
inc
xchg
mov
fistps
cs
sbb
add
test
lahf
jle
stc
scas
inc
clc
ret
pop
movsb
or
dec
sbb
and
and
xchg
push
aad
fisubrs
or
pop
mov
pop
sbb
xchg
cmp
dec
sahf
xor
or
pop
xlat
xchg
push
xor
jbe
sbb
insb
xchg
incl
fs
add
ss
cmpsb
mov
mov
cltd
rolb
cli
aaa
fdivr
lds
push
or
xchg
adc
pusha
and
lods
xchg
jb
and
mov
mov
hlt
sub
push
les
add
pop
cld
out
xchg
das
fimull
inc
mov
fs
insl
mov
rorb
or
xchg
adc
mov
and
xor
mov
lock
sub
dec
mov
push
lret
inc
xchg
push
xor
daa
sub
dec
mov
call
je
sbb
fld
or
mul
notb
repz
mov
std
inc
dec
decl
test
scas
pop
cli
or
icebp
inc
mov
ret
xchg
add
mov
or
movl
cli
inc
inc
or
inc
je
add
out
sbb
movsb
and
jl
rorb
sar
add
pop
aas
add
in
jle
dec
push
mov
out
cwtl
and
cld
sahf
add
pop
dec
push
cmc
jle
outsl
mov
dec
scas
movl
inc
push
add
or
mov
test
call
dec
addr16
and
sub
test
les
adc
hlt
scas
jnp
mov
inc
xlat
push
jmp
shr
cltd
mov
add
add
or
push
sbb
mov
aad
sbb
les
les
dec
out
adc
add
cmp
push
test
dec
cmp
adc
sub
sbb
sbb
outsb
push
into
aam
mov
and
sbb
xchg
rol
ljmp
shl
and
cmp
mov
cmp
or
icebp
nop
mov
mov
add
mov
popa
push
lock
sbbl
or
sub
lret
rcrb
jmp
adc
mov
pop
rorl
xor
jle
push
jl
push
ljmp
inc
inc
aam
fsubrs
es
or
push
inc
add
dec
js
inc
add
dec
ret
sub
adc
fadds
adc
add
aam
or
jns
and
dec
shr
pop
sti
cmp
sub
push
data16
leave
imull
jge
fiaddl
bound
lret
push
test
cmp
repnz
sbb
stos
shl
push
inc
icebp
out
lea
push
fwait
inc
in
lret
push
sarl
pop
out
stc
or
repz
jge
fadds
adc
push
ljmp
jno
ficoms
filds
adc
pop
jge
inc
dec
and
sub
insb
fistpll
mov
push
push
fwait
or
das
xchg
outsb
std
push
data16
popf
xchg
in
xor
pop
ret
lea
cmp
lods
andl
mov
sub
jmp
push
icebp
sub
mov
cwtl
xor
pop
decl
loope
rorl
gs
inc
in
sbb
mov
adc
decl
xchg
mov
push
adc
xorl
pop
ja
lahf
mov
sub
or
adc
fldln2
scas
clc
dec
and
ror
loope
nop
add
adc
pushl
and
and
xor
scas
es
pusha
out
jge
stc
lahf
ja
sub
dec
aad
jnp
cmp
and
repnz
push
stos
clc
push
in
sbb
mov
inc
das
lock
push
or
push
outsb
aad
adc
aaa
push
inc
lods
pushf
mov
call
neg
sub
push
mov
inc
fmul
insl
inc
les
incl
out
imul
cltd
in
bound
cli
adc
cmp
ss
fs
je
add
mov
ds
sub
icebp
fdivl
cmc
movsl
stos
inc
pusha
sbb
and
call
sbb
cmp
jbe
or
xor
xchg
xor
push
std
mov
push
in
filds
gs
dec
and
lret
xchg
shlb
call
inc
jne
lahf
clc
mov
frstpm(287
outsb
dec
movl
and
mov
xor
sbb
inc
out
sub
in
cmp
and
push
das
jecxz
mov
pop
inc
jns
add
push
iret
pusha
rolb
movsb
andb
lret
nop
dec
add
outsl
cmp
sbb
adc
or
loopne
or
mov
js
call
jg
add
or
mov
fdivs
jp
xchg
xor
adc
js
jg
sbb
and
jg
mov
roll
lock
mov
xor
sahf
push
ret
mov
fdivs
add
jp
mov
bound
mov
inc
xchg
inc
and
or
movb
add
lds
xor
bound
and
mov
ret
sbb
fsubrl
jb
subb
mov
and
jo
daa
xor
loopne
mov
and
adc
adc
adc
mov
cltd
push
mov
and
mov
sti
outsb
xchg
cs
loopne
mov
pop
xor
cmp
loop
shll
pop
and
adc
icebp
loopne
pusha
loop
add
pop
pop
test
mov
jmp
cmp
adc
xchg
fcoms
insb
inc
push
xor
cli
outsl
cmp
push
push
pop
lahf
and
jecxz
fdivr
fwait
mov
jmp
je
push
adc
sbb
loopne
mov
and
js
adc
cmp
out
aaa
fistpl
cmp
mov
pop
fldenv
push
out
xor
shlb
jle
inc
sbbb
arpl
dec
call
and
dec
pop
pop
mov
push
scas
pop
lahf
iret
insb
or
fdivrs
stc
xor
shll
pop
jmp
pop
cmp
mov
outsl
jmp
enter
add
shlb
int3
add
gs
andb
hlt
jb
push
test
jbe
add
inc
das
inc
loope
jne
inc
hlt
les
cli
negb
add
add
pop
push
std
inc
lods
inc
or
push
mov
cmp
or
sub
jae
mov
xor
aam
jmp
js
cmp
xchg
fs
stos
and
jl
push
sub
adc
outsl
pushl
mov
jno
in
sbb
jns
inc
lock
in
or
adc
lods
push
loopne
incl
jne
movsl
adc
sub
mov
ficoms
pop
mov
dec
cmp
es
pop
pop
out
pop
and
pop
xor
mov
cmpb
mov
mov
mov
lcall
daa
push
mov
xchg
fdivs
pop
ljmp
jecxz
mov
fld
and
push
cli
dec
sbb
mov
pop
adc
inc
decl
stos
aas
jle
adc
and
dec
sarl
data16
sbb
adc
jge
icebp
aad
inc
lods
pop
xchg
inc
and
and
shlb
mov
cs
ds
data16
adc
cmpl
lea
ret
pop
insl
insb
popf
mov
push
fdivrp
decl
outsb
mov
mov
adcl
or
out
mov
sbb
pop
pop
add
mov
pop
lock
dec
push
pushf
mov
js
xchg
aam
add
rcll
xor
cwtl
dec
cmpl
es
add
ret
daa
mov
adc
test
adc
adc
loope
test
add
clc
or
nop
xor
sbb
in
adc
and
adc
or
mov
xor
loopne
adc
sub
or
xchg
pop
push
xor
mov
and
sbb
addr16
sub
scas
add
insl
sub
mov
jl
xor
xor
or
inc
inc
test
xlat
push
pop
mov
mov
in
push
push
or
push
ret
add
adc
roll
and
je
stos
loop
sub
dec
dec
push
mov
cmp
push
prefetch
clc
sbb
sub
lcall
adc
ss
sub
and
les
adc
pop
push
imul
sti
nop
stos
jno
sbb
jb
adc
sub
add
adc
and
stos
dec
jmp
les
add
sub
mov
fistpll
sub
mov
add
or
cli
mov
inc
jae
adc
adc
cs
js
xor
pop
aaa
jo
les
pop
add
lock
fs
mov
jp
pop
xor
cwtl
sub
pusha
or
decl
inc
aam
and
adc
mov
mov
sub
inc
pushf
dec
nop
stos
pop
inc
sbb
or
mov
ficomps
inc
orb
aas
int3
test
jbe
rcrl
decl
int3
mov
je
add
and
orb
dec
sub
pop
loopnew
in
movl
sbb
push
stos
push
mov
mov
adc
bound
subb
dec
adc
inc
mov
xchg
lock
addl
cld
test
mov
mov
or
cwtl
xchg
or
ljmp
jl
or
push
jle
mov
into
pop
sarb
pop
xchg
roll
les
jno
pop
push
dec
dec
inc
or
popa
popf
sub
stc
mov
jge
mov
sbb
xor
js
pop
aad
rolb
push
das
push
and
insl
loope
into
push
inc
xchg
add
add
es
testl
insl
jae
leave
iret
mov
test
rcr
and
pop
addr16
rcll
inc
movsb
js
pop
mov
aam
pop
sbb
cs
sub
push
dec
aam
insl
mov
cmp
dec
or
inc
push
mov
sbbl
popa
xor
lret
adc
cmpsl
xchg
pusha
icebp
ljmp
lods
jne
jbe
mov
dec
and
mov
sub
push
stos
adc
pusha
cmpsl
iret
xchg
dec
icebp
movsl
fiadds
scas
sbb
mov
clc
sub
lret
shll
dec
adc
sbb
fnstenv
push
sub
add
cmpsl
xlat
sbb
mov
clc
daa
mov
dec
les
insl
ret
call
push
mov
jge
inc
sarl
inc
std
aaa
mov
jb
mov
outsl
in
popf
pop
bound
dec
aaa
push
jae
dec
xor
hlt
inc
mov
std
sub
adc
jo
pushl
aaa
lods
movsb
paddq
es
in
jg
lcall
add
push
jmp
push
xor
xorb
adc
dec
cmp
cmpsb
std
aas
sti
inc
shrb
leave
xor
and
iret
jnp
in
push
dec
fistpll
push
add
mov
addr16
das
enter
ja
rcll
ds
add
rolb
cmpsb
sbb
xor
cmpsb
stos
imul
inc
fisttps
shl
cmpsb
and
and
dec
mov
push
xchg
push
loopne
or
xchg
mov
add
xor
outsl
mov
push
pop
dec
leave
inc
cmp
clc
sti
out
dec
mov
and
jmp
mov
and
ret
pop
mov
xchg
cli
and
mov
add
xlat
mov
test
test
mov
sbb
dec
mov
sub
inc
shl
and
mov
mov
or
out
cli
testb
scas
fdivrp
fistpl
into
or
sbbl
xor
fnstcw
jl
shrb
mov
bound
mov
mov
push
popa
std
inc
pop
xor
js
pop
and
or
sub
add
mov
add
mov
jnp
or
pop
and
loopne
push
dec
mov
pusha
sub
push
xor
inc
adc
movb
pop
push
or
aas
push
shl
rcll
rcrl
shl
pusha
sub
or
rclb
xor
push
xor
mov
es
pop
xorl
or
mov
dec
adc
cmpsl
or
adc
add
in
pop
add
inc
cmpsb
subb
daa
std
mov
addb
leave
sbb
or
sub
movsl
dec
pop
shll
inc
mov
dec
lcall
cmp
rorb
loope
or
es
xchg
sbb
mov
pop
int
mov
jno
das
adc
sbb
mov
xor
pop
inc
ds
pop
or
xor
cmp
fxch
add
mov
push
loopne
bound
inc
inc
orl
cltd
or
inc
fwait
push
mov
inc
add
and
cmp
rcrb
sbb
test
lods
sbb
inc
adc
addb
sbb
cmpsb
clc
mov
push
ljmp
icebp
data16
cmp
jae
roll
aaa
dec
stc
ret
enterw
inc
xchg
sbb
cmp
add
push
xor
mov
push
in
push
jo
ret
or
push
mov
enter
mov
inc
mov
push
pop
inc
lds
jge
ja
pop
adc
adcb
jbe
mov
add
mov
popa
notb
and
les
mov
cmp
inc
mov
xlat
test
lret
sbb
sbb
pop
push
shrb
adc
fs
inc
adc
inc
sub
mov
mov
push
stos
push
adc
and
xor
xor
out
aam
enter
or
push
aad
je
std
adc
test
data16
dec
pushl
add
arpl
lahf
int
jb
scas
push
jge
inc
fmull
insb
mov
movsb
int3
mov
test
add
test
jns
adc
pop
adc
cmp
repnz
out
mov
sbb
jecxz
jle
lods
shll
cmpsb
pop
add
mov
andl
test
mov
dec
stos
cmp
jnp
insb
mov
mov
and
xchg
mov
sbb
add
mov
add
notl
ss
andl
xchg
dec
addr16
les
jo
sarl
dec
clc
pushf
cmp
sub
ret
pop
mov
pop
out
cmp
add
sub
stos
mov
cltd
testb
aad
fmull
xchg
xor
add
pop
cmp
push
test
fisubs
outsl
cld
xchg
mov
std
das
lods
xchg
dec
or
movsb
out
addr16
and
loopne
xor
mov
cmp
es
or
rcrb
mov
nop
push
pop
loop
push
cmc
mov
mov
xchg
push
stc
xor
filds
add
add
lea
aam
or
push
loope
cs
leave
fmuls
adc
pop
cmpl
lahf
clc
jle
inc
mov
je
ret
inc
pop
hlt
popf
and
xchg
leave
dec
sub
inc
pop
fistpll
incb
mov
add
add
cmpsb
arpl
add
loop
test
je
cld
jnp
pop
in
je
test
push
push
out
decl
inc
sbb
mov
inc
in
adc
or
shl
push
adc
dec
rcrb
lock
sub
sbb
sahf
fbstp
roll
mov
mov
xchg
mov
or
icebp
clc
cli
jecxz
mov
adc
sub
into
inc
cld
incl
aad
insl
ret
mov
hlt
jo
xlat
pop
int3
sub
mov
in
mov
roll
fbstp
call
jl
test
outsl
fildll
adc
cmc
fldt
je
ret
int3
iret
pushf
pop
ljmp
push
adc
xchg
xor
call
mov
aad
inc
outsl
cmp
push
addr16
sbb
adc
les
std
inc
stos
pop
decl
cmpl
cltd
and
or
mov
cmp
mov
xor
stc
or
mov
bound
pusha
andb
lcall
push
dec
fidivs
or
mov
or
sbb
or
push
fcmovnb
out
loop
popa
fisttps
les
pop
xor
loope
pop
shrb
xor
push
les
addr16
shrl
bound
add
add
inc
inc
cmp
cmp
dec
loope
dec
adc
sub
cmp
hlt
mov
pop
mov
outsl
dec
shll
or
adc
inc
int
pop
in
push
in
or
sub
insl
jmp
add
xor
sahf
inc
inc
sti
or
jge
es
mov
aam
sub
hlt
cwtl
add
movsb
arpl
aad
sub
mov
add
mov
dec
mov
test
add
adc
test
mov
adc
cli
adc
lods
add
stos
inc
sub
pop
fbld
add
dec
mov
push
aad
std
nop
and
dec
aam
les
xchg
out
les
mov
inc
aaa
jmp
xorb
mov
push
pop
add
sbb
nop
inc
ljmp
push
adc
pop
push
cmp
adc
jne
dec
out
and
out
add
sub
neg
and
es
pop
mov
out
dec
add
call
push
addr16
testl
or
xchg
mov
inc
add
test
adc
adc
pop
adcb
or
inc
hlt
add
orb
lock
xchg
xchg
add
sahf
or
dec
inc
addr16
or
or
or
adc
icebp
loop
add
mov
adc
inc
rolb
push
sub
call
lods
sbb
clc
daa
adc
xchg
adc
jle
ljmp
and
ret
and
mov
add
inc
xor
int3
add
jns
add
std
xor
sbb
stos
xchg
add
inc
add
pmaddwd
dec
je
scas
mov
jo
inc
cmp
adc
cli
jge
sub
inc
mov
cmp
daa
cmp
sbb
push
lea
sbbl
adc
sbb
adc
push
adc
push
popf
add
pop
sub
icebp
leave
andb
adc
add
flds
rolb
fidivl
add
inc
repnz
dec
repz
sub
inc
mov
cwtl
adc
xor
je
roll
mov
aaa
adc
jecxz
xlat
addl
fs
dec
xchg
hlt
jns
aad
pop
jle
mov
mov
mov
push
mov
add
stos
jmp
xchg
add
daa
sahf
enter
add
mov
add
ret
popf
jno
cmp
xlat
ja
xchg
pop
pusha
cmp
pusha
orb
xor
push
cld
jg
stos
pop
mov
fwait
insb
sub
inc
pop
or
inc
xchg
mov
fsub
stos
imul
jge
sub
and
test
popa
push
xor
xor
add
loope
jge
or
inc
cmc
sub
dec
add
mov
and
dec
xchg
mov
inc
mov
mov
divb
mov
mov
mov
cld
xor
add
jp
pop
inc
das
cmp
insb
mov
sub
test
cmp
jo
lock
and
add
mov
xor
push
clc
push
pusha
mov
inc
test
mov
xchg
mov
lea
je
inc
daa
test
lret
mov
add
bound
ss
jmp
jge
adc
nop
cmpsl
bound
stos
mov
push
sub
ljmp
addb
cmp
in
dec
lock
test
repz
cmpsl
xor
xchg
add
repnz
ljmp
test
dec
inc
xchg
jge
sbb
mov
test
jle
scas
mov
mov
mov
add
std
dec
cld
mov
ret
add
pop
call
adc
lcall
mov
lcall
fstpt
push
or
adc
sub
int
cmp
pop
icebp
lock
icebp
int
inc
popl
pushf
mov
mov
outsl
add
sub
rcrb
ror
out
mov
das
mov
adc
dec
push
je
xor
inc
jo
jnp
out
sbb
pop
add
or
cmc
rcr
adc
popf
fsubrs
mov
out
clc
pop
mov
or
cmp
xchg
sub
mov
fiaddl
mov
fs
pop
loopne
out
loop
outsb
xchg
dec
pop
xor
and
lods
aad
cmpsb
push
dec
fstpt
jmp
mov
pushl
or
dec
or
xor
dec
cmp
loopne
dec
xchg
outsl
inc
cmc
mov
add
adc
outsl
xchg
or
orl
in
repnz
adc
xor
adc
jle
add
inc
mov
mov
aas
push
inc
xor
insl
xlat
jg
jle
lds
or
xor
call
adc
mov
or
inc
scas
cltd
dec
add
sub
pop
sbb
add
ljmp
adc
mov
lock
dec
push
dec
adc
xchg
call
incl
int3
sar
dec
mov
outsl
and
rcl
ljmp
mov
stc
cmp
and
mov
adc
mulb
addr16
aad
push
xor
cmpl
in
push
mov
xchg
ret
repz
cld
pop
iret
lahf
jp
push
ss
or
in
cmp
das
pop
clc
adc
outsl
or
stos
dec
or
fbld
shll
xchg
bound
movsl
mov
xchg
jbe
fildl
mov
ret
aam
arpl
dec
mov
mov
push
xchg
dec
in
jle
lods
cmp
int3
sub
in
mov
sub
mov
mov
sti
aam
push
pop
decl
imul
cld
dec
adc
popf
movsl
loope
mov
mov
push
xor
fs
in
pop
inc
jp
jns
add
ret
mov
sbb
and
adc
notl
inc
mov
sbb
in
mov
or
inc
aaa
pop
pop
cmpsb
pushf
sar
and
sub
xchg
jecxz
xchg
les
mov
fsubrs
decl
test
insb
push
adc
rclb
jp
jb
push
pop
scas
stos
mov
inc
mov
sbb
push
and
cmpsb
cwtl
sub
push
inc
adc
lock
outsb
stos
inc
or
sarb
lods
cmp
push
xchg
mov
das
aad
xchg
andb
pop
mov
hlt
jg
movsl
test
dec
hlt
lret
fs
test
stc
test
pushl
inc
dec
stos
xor
nop
push
xchg
jle
inc
mov
aam
std
movsl
fidivrl
mov
mov
and
fildll
mov
sti
dec
mov
sub
mov
cmp
lds
mov
or
jo
fadds
cmpsb
add
and
popl
ljmp
in
ja
adc
adc
add
daa
mov
sub
xchg
jg
js
insl
lock
jge
fmull
ljmp
add
pop
sub
cli
lods
repz
cs
mov
adc
loopne
fldt
adc
ljmp
lea
ds
pop
dec
bound
fadd
aaa
add
push
lret
mov
std
test
lds
rorb
and
pop
mov
pusha
cmp
mov
mov
adc
cs
xchg
in
push
mov
sbb
push
ljmp
inc
popf
mov
or
dec
shll
mov
xor
popf
clc
sbb
orl
mov
or
add
stos
movsl
mov
or
xchg
ja
dec
into
imul
movsl
clc
fildl
mov
inc
ret
or
inc
shrb
cmc
stc
shlb
cmp
mov
sti
imul
adc
cmpsb
insb
inc
cmpsl
lods
ljmp
aad
idiv
push
stos
mov
ljmp
cs
sbb
mov
xchg
outsb
loopne
std
loopne
add
fs
or
mov
push
jecxz
adc
in
mov
ljmp
push
int3
fildl
and
cmpsb
lods
adc
mov
jae
lods
jo
imul
xchg
ja
and
test
faddl
fistpl
mov
xor
mov
inc
sbb
sbb
cmp
and
std
ret
jbe
js
insb
cmp
push
rorb
jb
sub
add
or
lret
push
es
in
test
out
mov
jno
cli
add
int
lcall
add
mulb
lret
mov
stos
test
ficompl
aas
into
jbe
ja
dec
fisubs
pop
repnz
xlat
movsb
xor
je
sub
aaa
mov
cwtl
mov
pop
cmpsl
sbb
cmp
mov
xchg
sub
pop
and
dec
xchg
adcl
lahf
jecxz
mov
insb
outsl
outsl
cmp
dec
sbb
cs
icebp
jecxz
shll
inc
ret
mov
ss
push
shlw
mov
push
inc
ret
out
jge
ret
push
add
adc
pop
xchg
ret
je
inc
xor
mov
sub
dec
pop
jb
add
popa
cmp
cwtl
std
mov
sarb
mov
sub
daa
adc
pop
xchg
adc
mov
shrl
shlb
lret
add
stos
enter
cmp
inc
mov
jnp
pop
sbb
add
sbb
pushf
jmp
sbb
mov
push
xchg
mov
cli
push
int3
lret
fs
mov
dec
jo
insl
fsubrs
mov
sub
aaa
pop
shlb
mov
sub
mov
test
andb
movsl
iret
pop
dec
mov
sub
test
push
aas
loope
jne
mov
shlb
adc
cmp
push
mov
and
addr16
add
aas
test
roll
pop
adc
fistpl
movl
mov
push
cld
lea
dec
stc
sbb
sbb
xchg
and
cmpb
add
xchg
jns
shrb
popa
fbstp
jo
dec
inc
hlt
dec
jecxz
out
or
in
sbb
pop
mov
je
and
and
xor
iret
jg
pcmpeqw
adcl
xor
pop
clc
push
lahf
test
fistpl
es
jg
inc
arpl
addr16
cwtl
inc
add
seto
or
dec
cld
test
es
cltd
jo
mov
adc
in
pop
gs
das
cld
sub
push
push
and
mov
pop
mov
mov
push
lock
xchg
xchg
popf
or
push
jbe
or
lock
insb
push
mov
push
subl
clc
fs
push
or
pop
movsl
and
pop
imul
outsl
mov
inc
femms
jnp
pop
into
add
pop
inc
stc
mov
lret
cmova
mov
mov
aam
mov
xor
add
cmp
or
fstl
pop
push
insl
sub
rcrb
or
mov
cmp
lock
mov
mov
xor
fldcw
or
push
cmpsb
mov
xor
push
ljmp
daa
or
or
lds
xchg
mov
loopne
incl
xor
add
add
lret
dec
jmp
stos
xor
xor
inc
imull
adc
movsb
sub
xlat
enter
cwtl
loope
insl
iret
jno
adc
icebp
sarb
xor
add
sub
sbb
xchg
cmp
int3
mov
add
and
mov
jnp
pop
sar
adc
addb
inc
ja
adc
or
add
cmp
test
pushl
inc
mov
inc
addr16
nop
cmp
or
aaa
mov
add
dec
and
ljmp
dec
pushf
adc
stos
aas
jne
bound
sarb
push
sbb
loopne
jbe
sub
inc
lods
aas
and
add
pop
stos
test
out
cmpsb
sbb
std
mov
lret
test
push
or
xchg
in
fwait
jbe
mov
icebp
in
gs
jg
ljmp
fdiv
inc
andb
push
test
push
push
fmuls
clc
mov
arpl
dec
mov
dec
push
outsl
and
add
xor
mov
aaa
jne
add
ds
lcall
aas
jo
inc
or
sbb
jae
incl
and
fistpll
scas
fs
sbb
mov
clc
jne
inc
dec
xor
xchg
scas
or
fwait
into
icebp
mul
and
cmp
dec
sub
std
pop
xchg
jg
movq
mov
inc
int
mov
outsb
push
test
xchg
mov
jnp
and
mov
lods
bound
cs
and
xchg
sbb
rolb
das
fcoml
insl
lods
aas
or
or
or
mov
sub
mov
repz
xor
outsl
popf
sbb
sbb
out
shlb
cld
xchg
push
xor
insb
dec
lds
and
add
and
subb
idivb
mov
or
xlat
xchg
imul
hlt
pop
enter
fcomip
lcall
arpl
aas
sub
push
movsl
jge
jmp
fxtract
sbb
pop
jg
incl
cli
shll
mov
testb
push
sar
andb
jae
xchg
add
lahf
adc
cmc
pushf
rcr
call
rclb
xor
cmp
test
lods
or
adc
mov
aaa
mov
fwait
push
jmp
fcmove
sbb
sti
inc
sbb
outsl
cli
lea
stos
cmp
add
in
mov
popa
stc
jo
push
fsubrs
std
pop
loopne
xlat
jp
ds
push
sub
dec
movsb
mov
pop
mov
jno
test
dec
mov
or
pusha
pop
jle
xor
pushf
loopne
outsl
mov
nop
call
add
ljmp
push
mov
xchg
push
xchg
outsl
push
sbb
lret
adc
pop
test
dec
bound
add
movsb
repnz
dec
inc
mov
rep
sub
mov
or
fisttps
sub
test
mov
inc
cmp
cltd
mov
sub
adc
cli
lods
dec
cmp
into
cmp
push
and
cs
pop
int3
mov
mov
push
dec
xor
mov
js
push
in
repnz
dec
and
mov
cli
jmp
and
or
xchg
into
in
ss
mov
mov
out
orb
mov
xchg
mov
or
in
popa
xchg
mov
ret
sbb
dec
popf
test
add
inc
dec
loop
add
fisttps
add
mov
inc
push
cmpsl
push
mov
popf
mov
lahf
test
ret
push
push
aas
fldlg2
add
jle
cmp
gs
and
push
popa
setb
sub
test
xchg
sub
cmp
pop
adc
ficomps
jbe
mov
test
inc
insb
cmp
push
arpl
fmuls
or
fdivr
inc
fadds
and
stc
leave
shrb
jne
inc
enter
and
popa
sahf
cmpsl
inc
loope
jb
popa
lcall
pop
rcrb
stos
test
mov
jns
xor
add
dec
and
push
mov
jne
fs
xchg
inc
inc
push
cwtl
stos
mov
and
cltd
stos
push
mov
lret
xchg
xor
rcrl
sub
mov
cmp
fcmovb
mov
push
stos
or
adc
mov
add
pop
add
incl
or
adc
or
mov
orb
fmul
xor
push
or
mov
lock
out
push
in
mov
mov
loop
mov
xor
adc
add
stos
insl
xor
je
inc
daa
sub
mov
adc
data16
add
hlt
xchg
jg
mov
mov
ja
sbbb
dec
sub
test
add
inc
nop
lock
push
mov
leave
aaa
bound
test
test
or
aad
sub
xor
mov
jae
cmpw
sar
push
pusha
mov
icebp
sub
sahf
dec
sbb
add
xlat
daa
aaa
mov
loopne
sub
int3
pop
or
lret
xor
jp
push
adc
call
jno
sahf
and
push
add
jmp
enter
pop
movsl
mov
xchg
lods
inc
cmp
out
stos
incb
les
nop
mov
lods
cmp
mov
and
mov
loope
add
nop
inc
sbbl
cs
test
push
push
rcrb
adc
sbb
add
ds
xlat
dec
or
call
jne
mov
mov
fisttpl
mov
or
xchg
movsb
subb
sub
aad
in
inc
jno
popl
add
ljmp
movsb
push
andl
invd
push
adc
pop
mov
sub
add
push
push
sbb
push
stos
push
add
mov
dec
push
icebp
popf
dec
test
add
adc
mov
push
mov
bound
int3
cmp
mov
inc
mov
sbb
enter
test
int3
pop
sti
dec
sub
push
push
dec
and
xchg
rclb
inc
in
pop
sub
pop
pop
rclb
xor
and
je
add
sub
adc
mov
adc
xchg
test
or
sahf
mov
xchg
mov
xlat
add
popa
jg
daa
sarl
movsb
and
add
pop
pop
cmp
mov
sbbl
sbb
push
lds
test
pop
lahf
and
jecxz
icebp
jae
loop
sbb
out
andb
sbb
cld
adc
or
sbb
pop
or
sub
mov
sub
cwtl
adcb
popl
sbb
das
push
mov
icebp
adc
sbb
movsl
mov
loope
mov
sub
cmpsb
int
or
jo
mov
sub
outsl
jmp
cltd
push
aam
popa
or
insl
shrb
sub
dec
mov
sbb
test
dec
sub
insb
rol
orb
jge
jecxz
lcall
jno
push
aam
repz
jecxz
sarb
mov
sbb
addr16
jmp
call
imull
jne
add
adc
stos
insl
mov
sarl
imul
inc
cld
add
xchg
cmp
idivl
hlt
fsub
stos
enter
lock
mov
aas
jbe
rcl
fs
mov
inc
test
xlat
jbe
out
add
jecxz
adcb
out
icebp
clc
xchg
loopne
insb
dec
lock
and
scas
out
lea
int3
out
in
aas
neg
pop
sbb
enter
xchg
lret
inc
sub
add
mov
mov
push
mov
add
mov
xchg
adc
imul
push
adc
mov
mov
in
icebp
jne
push
stc
sbb
cmp
cmc
les
jno
ret
jne
mov
cmpsb
ds
inc
fdivs
out
push
pop
inc
popf
adc
movsb
lcall
scas
lock
lds
test
jb
cmp
or
adc
mov
fistl
fmul
push
jns
adc
scas
add
jnp
ds
dec
ret
ret
loope
or
mov
sub
or
fs
cmc
xchg
or
sbb
stos
inc
xchg
int3
jmp
imull
loop
jbe
roll
inc
jle
subl
cmp
adc
popl
add
xchg
pop
jp
cmp
arpl
sub
dec
bound
pop
outsb
add
sbb
dec
loopne
mov
sbb
mov
mov
outsl
decb
ret
in
enter
xor
dec
add
or
fistps
das
jno
int3
xor
dec
cmp
insl
dec
cmp
out
in
adc
inc
or
ljmp
add
jmp
ret
inc
addb
js
push
pop
int3
les
call
push
mov
pop
loopne
sbb
cmp
gs
add
adc
jo
push
pop
add
mov
inc
fsts
lods
lods
and
sbb
or
jg
add
xchg
jb
dec
les
mov
mov
xchg
inc
jecxz
call
mov
adc
dec
inc
lock
js
repnz
add
push
pop
cmpsl
or
mov
fs
push
adc
jbe
lods
roll
adc
add
push
movsb
cmp
decl
outsl
mov
fimuls
sbb
faddl
call
add
aad
cmp
dec
adc
inc
mov
cmpsl
jecxz
inc
sub
mov
out
adc
fadd
scas
add
dec
add
mov
cs
xchg
jbe
push
and
pushl
cld
or
es
subl
jno
sbb
add
loopne
ds
mov
inc
shrb
and
inc
xchg
pusha
inc
push
jle
pop
inc
fucomi
xor
ljmp
cs
shlb
mov
pop
mov
or
xchg
js
daa
jl
ljmp
jbe
inc
xlat
pushf
int
sub
xor
lock
ret
lret
and
sub
int3
stos
fbstp
ljmp
fisttpll
inc
cmpsb
fadds
mov
subb
in
addb
sub
ljmp
orb
inc
rorl
ret
aam
add
loopne
je
imul
dec
or
je
cld
jg
jmp
mov
cltd
xchg
mov
psllw
or
cltd
xchg
loop
popf
xor
sbb
incl
loop
pusha
and
add
cs
test
popa
mov
xor
or
inc
mov
push
xor
pushf
lods
es
fucomip
frstor
hlt
and
in
push
fldl
sbb
push
or
sbb
and
cmpsl
pop
subb
add
mov
icebp
fidivrs
jo
aaa
xchg
sbb
push
adc
outsl
adcl
mov
cmc
cmpsl
mov
mov
sub
cmp
fsubrl
out
shlb
out
inc
mov
imul
jo
pop
ljmp
inc
adc
sbbb
cs
scas
outsl
mov
in
inc
push
push
inc
shl
call
push
sbb
icebp
add
ja
pop
add
jl
in
adc
push
mov
xchg
int
dec
inc
xor
adc
sbb
pop
lahf
cmp
cld
adc
push
in
xchg
cwtl
add
sbb
in
syscall
mov
or
cmc
inc
stos
sahf
lahf
lock
add
adc
sub
push
sbb
fidivl
addb
popa
or
jo
xchg
mov
movsb
or
push
inc
icebp
jp
xor
shrb
adcl
sbb
sbb
clc
mov
pop
mov
por
pop
in
push
out
sub
sub
bound
or
notb
adc
mov
or
cmpl
adc
or
push
add
xchg
jle
mov
push
js
es
fisttpl
push
adc
or
or
mov
jl
xchg
cmp
inc
and
adc
xchg
hlt
sbb
es
cmp
rcrl
add
insl
shlb
sbb
cmpsw
dec
cmpsb
push
outsb
jne
sub
icebp
pusha
or
and
sarl
fcompl
inc
in
mov
add
cli
mov
faddl
movb
shlb
ficomps
fiadds
loopne
ljmp
xchg
ljmp
out
aas
data16
push
mov
dec
out
adc
inc
mov
fidivrs
push
push
stos
pop
ret
leave
dec
pop
mov
insb
add
dec
mov
dec
das
pop
lds
and
call
sti
loopne
aad
jge
outsl
cmp
stos
dec
pusha
js
in
stos
inc
adc
int3
push
cmpsl
hlt
inc
test
push
fdivl
outsb
addb
stos
dec
push
popa
push
pusha
inc
inc
mov
shrb
enter
push
cld
repnz
mov
test
ret
subl
leave
fbld
jp
jae
add
xchg
mov
ja
add
add
rcr
mov
adc
add
push
push
dec
mov
leave
arpl
jne
xchg
adcl
lock
jb
or
add
aas
in
add
outsb
rcl
adc
xchg
aaa
mov
cld
pop
rcl
mov
jno
and
jp
jo
mov
jnp
inc
cmp
ljmp
jb
jnp
inc
imul
fwait
and
inc
add
mov
notb
and
jl
push
lahf
xlat
jecxz
clc
add
mov
mov
add
push
pop
jecxz
add
fucomip
xchg
pop
test
fistpl
xor
add
or
pop
aas
mov
or
jle
add
mov
insb
jmp
sbbb
jg
insb
clc
pop
jecxz
add
sub
adc
fildl
cld
inc
push
add
mov
ja
lea
xor
bnd
int
aad
mov
std
fbld
adc
imul
add
jecxz
and
pushl
add
mov
data16
popa
ds
clc
mov
jns
pop
pop
mov
addr16
cmc
push
aad
adcl
add
icebp
test
inc
dec
sbb
push
mov
jp
or
std
push
or
shr
push
xor
pop
add
fdivr
adc
dec
insb
cmp
jle
fsubp
mov
inc
enter
xor
push
cltd
fidivrl
into
shlb
dec
adc
ss
mov
fistps
jl
dec
scas
mov
lds
aas
icebp
lahf
nop
mov
xchg
leave
cmp
int
sub
stc
push
jecxz
lods
add
xlat
push
or
sbb
jge
inc
mov
jae
xor
pop
imul
sbb
xchg
out
and
push
stos
xlat
sub
mov
cld
push
xchg
cmp
cltd
jae
and
loope
bound
decb
test
js
push
push
gs
fs
loopnew
lods
xlat
sbb
push
or
icebp
add
mov
ss
jl
shll
cmpsl
jbe
cmp
shlb
dec
push
pop
lret
insl
or
das
subb
cmp
cmp
aad
or
adc
mov
push
push
lea
adc
fsubrp
out
or
pop
in
or
and
aas
stos
push
popf
lods
lahf
or
or
mov
jno
pop
add
lock
xchg
das
clc
and
xor
and
movsl
adc
xor
add
mov
and
push
push
dec
sub
and
xchg
push
lock
loope
rcl
inc
xchg
or
ja
sub
push
ss
scas
xchg
testb
adc
sbb
pop
aam
hlt
xor
pop
mov
cld
push
mov
insb
adc
pop
cmp
popf
lods
add
or
add
add
inc
call
addr16
cmp
dec
dec
pusha
cmp
xor
das
and
out
adc
xor
into
push
mov
pop
cmp
aas
sti
fmuls
pop
aad
lea
inc
into
mov
inc
inc
mov
jge
ja
or
inc
lret
mov
adc
loop
pop
arpl
pushf
inc
loope
jae
xchg
xor
mov
sbb
sbb
xorb
mov
pop
dec
negl
adc
rolb
add
xor
push
inc
daa
mov
push
mov
shrl
sbb
lcall
ret
pushf
fildll
sub
cmp
neg
sub
inc
lods
aam
push
test
out
inc
das
rcr
int3
adc
fistl
idivl
sbb
sub
mov
or
xchg
pushf
jnp
les
push
and
and
jne
adc
je
adc
popa
lods
jp
mov
xor
mov
cmp
in
push
movsb
filds
nop
out
shl
inc
popa
stos
inc
rorl
and
outsl
lock
add
cld
and
xor
js
ror
add
adc
mov
mov
in
fldcw
xor
xchg
xchg
into
mov
adcl
loopne
cmp
ftst
mov
outsl
add
cmp
cs
jl
lock
dec
or
xchg
stos
sti
and
sti
sbb
adc
out
jno
jbe
cwtl
sub
fcoms
xor
loop
repnz
je
pop
xchg
cmp
mov
pushf
mov
jg
lock
popf
ds
sbb
mov
xchg
mov
mov
sbb
add
scas
or
cmp
imul
add
add
sbb
inc
ret
dec
loop
ret
xchg
imul
fisubs
ljmp
jmp
sbb
xchg
inc
xor
data16
cmp
sub
lock
fdivrs
inc
mov
nop
clc
push
mov
or
fcomps
cmp
cmp
dec
inc
jl
test
dec
jge
sbb
mov
xlat
pop
pop
xchg
sub
mov
xchg
add
add
adc
loope
xlat
mov
xor
arpl
pop
xor
addb
push
mov
dec
popa
popa
clc
xchg
std
mov
lds
jb
mov
bnd
loopne
sbb
ds
test
ja
mov
cltd
sub
mov
outsb
cmp
inc
push
out
enter
cli
xchg
es
into
mov
or
mov
push
insb
arpl
in
andb
arpl
mov
push
std
pop
and
bound
add
add
int
jle
rorb
out
lea
loop
dec
inc
stos
and
dec
popf
sbb
fsubp
fsubrs
ja
rcrb
mov
xor
push
clc
int
mov
int
cmp
jae
or
or
jp
inc
sub
push
jo
and
aad
daa
shlb
sub
aas
dec
mov
or
or
jbe
mov
add
nop
dec
ret
ds
icebp
sub
add
add
das
adc
xlat
jne
or
pop
xchg
outsl
lock
mov
popf
adc
pushf
and
sbb
dec
lds
mov
mov
and
adc
mov
push
jge
add
adc
fwait
and
ret
mov
dec
jg
iret
inc
mov
test
jecxz
pop
add
cmpsb
cmp
dec
inc
jecxz
sbb
add
cmp
sti
jge
adc
add
adc
in
jg
pop
xor
sbb
cmp
fcomi
movsb
stos
sub
add
and
cmp
int
cwtl
cmpsl
mov
jnp
pop
mov
cld
inc
roll
or
loope
rcrb
and
sub
inc
xchg
pop
cld
and
pop
and
jp
data16
insl
push
push
cmp
clc
ret
ja
sub
movsl
stos
xchg
arpl
int
lcall
push
adc
pop
mov
jnp
jl
fisttpll
cwtl
int3
jo
sbb
adc
cwtl
jae
int
testl
test
push
testl
aas
test
jae
jge
shr
dec
jge
pop
xchg
xorb
shll
sbb
call
fs
sub
es
mov
push
decb
xor
mov
or
jge
push
out
jae
test
test
adc
sub
stc
jae
pop
adc
mov
stc
test
cmpsb
pop
cmp
fmull
pop
push
inc
mov
lret
pop
ret
loopne
loopne
xchg
out
gs
xor
and
loopne
subb
cmp
sbb
sub
test
imul
inc
les
repnz
adc
ja
jae
test
pandn
loop
or
loop
movsb
outsb
ds
ret
dec
or
cwtl
jge
leave
and
repz
je
xchg
lock
or
xchg
or
jbe
push
test
call
mov
fwait
loope
subl
iret
lock
out
fisubl
clc
mov
xchg
or
psraw
cmp
in
adc
shll
stos
fstpl
aas
cld
jb
movsl
jns
fadds
pop
and
shr
les
sbb
mov
and
jne
add
push
std
leave
xchg
jnp
inc
into
sbb
lea
icebp
or
lods
mull
mov
mov
aas
shll
add
cmp
bound
jno
mov
dec
xor
adc
sub
xor
dec
loop
cmp
pop
add
mov
or
ljmp
push
jmp
pop
repz
jl
mov
test
jmp
lods
mov
pop
xchg
push
cmp
aaa
cmp
clc
test
gs
xor
inc
inc
or
iret
cmc
or
andb
sbb
push
fldl
pop
inc
dec
cmp
js
loope
push
sbbb
arpl
pushf
testl
scas
mov
into
loopne
add
and
xor
and
ret
repnz
xor
js
xchg
sbb
pop
sub
lods
xchg
push
sti
fiaddl
in
daa
pop
cmp
jg
sbb
outsb
addr16
shl
aad
xor
lcall
in
pusha
xchg
lret
shll
sbb
mov
dec
mov
add
push
fcomp
adc
popa
mov
in
shrb
xor
xchg
repz
xor
adc
xchg
push
pop
mov
ret
mov
ror
sub
loopne
jmp
mov
inc
test
jns
dec
add
or
inc
insb
jbe
cmp
shrb
xchg
sbb
and
lcall
movsb
dec
cmp
nop
not
fwait
add
or
adc
sbb
mov
jne
imul
xchg
xor
xorl
shlb
pop
jge
or
xlat
stc
cmp
hlt
stos
fadds
add
sahf
bound
dec
pop
jmp
dec
push
idivl
aaa
adc
ljmp
cmp
cmp
fcomps
cmp
adc
push
add
loope
cmp
sub
mov
pop
in
adc
or
hlt
stos
sahf
je
jbe
push
fimuls
xchg
cmp
testb
or
lahf
les
ret
jl
or
adc
and
lret
into
jne
loope
xchg
loope
sahf
jmp
inc
ja
popf
fisubrs
call
adc
mov
shl
inc
jne
xlat
adc
mov
lods
loope
jg
mov
add
orb
pop
mov
dec
pop
and
sti
insb
pop
repz
lock
push
mov
xchg
jmp
insl
adc
adcb
aam
test
call
sbb
mov
das
loope
aad
inc
adc
jmp
adc
subl
cmp
add
cmp
jnp
orb
call
mov
popa
lods
std
stos
xchg
dec
ret
add
pusha
leave
mov
mov
test
push
imul
outsb
lahf
dec
out
lds
or
dec
sub
sub
sbb
or
mov
sbb
icebp
subb
fcoms
shlb
imulb
pop
sbb
in
dec
shrl
pop
sbb
and
add
lret
stos
and
xchg
lods
dec
sahf
into
sbb
mov
push
icebp
lds
pushf
notl
test
add
or
clc
cmpsl
and
push
shl
push
mov
sbb
loope
jg
sbb
dec
fsts
adc
mov
std
dec
rolb
lock
shrb
pop
jo
sub
inc
pop
adc
ror
lock
xchg
add
rorl
js
mov
nop
pop
jg
out
or
dec
jb
cmc
inc
inc
mov
or
cmp
add
push
outsb
fidivrs
inc
sbb
fstpl
add
shrl
mov
fmuls
mov
fstps
les
sub
pusha
xchg
cmpl
shlb
punpcklwd
pxor
xor
xchg
inc
lods
psraw
add
jb
push
pop
xor
in
push
jne
mov
rcrl
jge
in
xchg
out
loopne
cwtl
mov
adc
repz
xor
adc
or
test
inc
nop
pop
and
jmp
subl
push
push
cli
pusha
test
xor
mov
or
sub
les
cmp
rcl
and
je
sub
adc
out
fbstp
lods
push
mov
sbb
or
jecxz
pop
mov
pop
popf
addl
sub
inc
push
jmp
sti
mov
mov
loopne
adc
cmp
mov
and
xchg
popf
loop
inc
cmp
shr
or
jns
ficoms
sub
loop
push
iret
or
cmp
sub
mov
call
jnp
aad
cltd
jb
daa
subb
mov
sbb
add
inc
out
mov
inc
arpl
adc
sub
dec
ljmp
or
in
ret
cmpl
sbb
pop
lock
fldcw
xor
test
sbb
mov
and
into
sbb
fdivr
stos
data16
or
test
cmpsb
inc
or
mov
incl
aas
iret
or
testl
cmp
add
inc
jmp
push
test
inc
ficomps
sbb
test
and
sub
es
and
and
and
aad
or
int3
into
fsubs
repnz
jmp
je
iret
fstps
jnp
aad
fistl
sbb
adc
aas
stos
call
outsl
dec
xchg
into
or
push
outsl
loop
fdivrs
fsubl
repz
fisubrl
and
adc
xor
sub
xchg
xor
mov
push
sbb
outsb
xor
ret
push
jb
or
ret
push
or
adc
mov
or
push
out
gs
jne
rcrl
sbbb
pop
clc
jecxz
shll
or
mov
xor
sbb
xchg
push
daa
inc
push
fwait
loopne
push
int
lahf
inc
sub
jmp
cmc
or
movsb
sub
clc
das
inc
stos
ret
test
xchg
cmp
rep
inc
js
push
in
ret
and
pop
mov
mov
inc
and
shll
jg
add
or
pop
and
out
mov
xor
out
sti
cmp
jae
movzww
sbb
add
and
jp
dec
movsl
lcall
stos
stos
mov
jg
mov
fadds
ss
push
hlt
enter
mov
mov
xor
pop
inc
test
mov
daa
dec
subb
popf
or
sbb
cmp
push
stc
jge
jo
lock
mov
subl
mov
test
push
and
sbb
add
gs
addb
stos
divl
pusha
lret
push
pop
or
adc
ljmp
hlt
mov
addb
and
jne
call
leave
adc
mov
lahf
mov
sbb
vmread
mov
mov
loop
mov
test
xchg
push
stos
test
out
cwtl
loopne
push
pop
dec
cmp
nop
js
add
stc
mov
fwait
call
or
or
push
pushf
and
jnp
xor
jae
popl
pop
cmpsb
pusha
mov
mov
xchg
jno
xchg
pop
arpl
cmp
in
clc
xor
push
popf
push
rcrl
mov
sub
adc
lock
jbe
pop
xor
sbb
lods
push
outsb
mov
lock
outsl
mov
cli
add
rol
dec
push
sub
cmp
and
adc
ret
inc
orl
mov
inc
lods
pop
daa
jp
fiaddl
rcrb
mov
icebp
aas
sti
xor
pop
sahf
rcrb
or
lock
mov
or
cmp
sbb
and
dec
notl
ret
mov
mov
nop
adc
mov
daa
ss
dec
mov
scas
push
out
movmskps
into
mov
pop
icebp
call
xchg
xorl
stos
pmullw
sbb
pop
inc
inc
push
dec
adc
pusha
scas
xchg
shll
mov
in
jne
dec
out
xor
inc
push
into
inc
xchg
jmp
movsl
or
jne
ljmp
pop
cltd
jle
push
insl
pop
inc
sbb
cmp
loope
mov
or
or
or
pop
push
ret
xchg
ret
add
js
mov
loopne
imul
add
lret
call
call
or
ret
xlat
in
jno
mov
sbb
sub
imul
lock
rcrb
cmpsb
add
mov
or
cmp
lods
stos
outsl
jg
xchg
cmc
cmp
add
loopne
jge
mov
cmp
push
dec
add
clc
pop
sub
cmp
roll
pop
mov
lds
adc
out
sbb
jecxz
inc
lds
sbb
loopne
add
aam
and
adc
and
add
add
cs
xchg
cs
inc
push
fwait
cmp
push
or
out
scas
or
pushf
jbe
cwtl
xor
sub
mov
dec
ret
xchg
decl
test
xor
add
ss
jbe
and
or
add
ret
das
jne
data16
xchg
dec
add
mov
mov
add
mov
or
adc
bound
pushl
xchg
push
xlat
mov
or
mov
mov
jecxz
inc
add
pop
pop
add
clc
and
mov
loope
sar
js
cmp
and
subb
or
jg
out
inc
faddl
clc
add
mov
ss
adc
cs
mov
jns
xchg
nop
insl
ficoml
loop
call
jp
add
mov
lds
pop
in
outsb
lock
sarl
jp
mov
xor
or
stos
pop
push
dec
cmp
outsb
outsb
inc
adc
movsl
add
mov
out
lcall
in
pop
jmp
jecxz
jl
sub
lret
ret
out
ror
nop
test
insl
add
lret
or
test
or
dec
lods
push
and
xor
inc
hlt
sti
or
dec
or
mov
mov
das
pop
push
inc
fsubr
in
add
jb
incl
mov
bnd
insl
sub
add
mov
data16
jl
or
jno
mov
int3
loopne
insl
std
in
mov
and
mov
pop
mov
pop
shrb
int
jp
lret
dec
stos
sub
divl
cmpsb
jle
mov
push
cmpb
dec
and
pop
dec
adc
adc
daa
jmp
jl
outsl
mov
cld
mov
push
int
push
dec
sub
out
pushl
adc
hlt
sub
cmp
jnp
mov
or
movsb
push
pop
into
in
mov
shr
inc
or
fs
mov
sbb
xor
jae
inc
lock
decl
cmc
sub
or
out
sbb
xchg
fcoml
and
mov
fisttps
stos
cmp
test
icebp
jbe
ds
lods
mov
xor
js
adc
push
mov
or
lahf
aaa
in
shl
ds
jg
or
mov
aas
mov
and
push
adc
pop
out
mov
or
mov
pop
jmp
sub
je
cmp
pop
inc
inc
mov
xchg
push
inc
nop
js
aaa
or
rcrb
cmc
fdivs
jmp
stc
cmpsb
decb
adc
xchg
movsl
mov
and
and
lret
sub
mov
or
dec
push
std
sbb
jl
clc
inc
xchg
sub
pop
xbegin
xor
in
movsl
and
inc
add
call
jnp
jne
lds
pop
scas
cwtl
add
add
sbb
jae
or
ds
push
add
xor
inc
test
incl
and
cmp
add
stos
test
test
ffree
jb
jecxz
mov
push
outsb
push
ljmp
icebp
fcmovnb
mov
dec
add
xor
pusha
mov
push
jo
jecxz
lds
fmul
sub
fimuls
pop
mov
lea
ss
xchg
sarb
sbb
jnp
inc
sbb
or
and
ss
mov
mov
cld
std
addl
mov
or
cli
in
mov
outsl
sub
add
xor
int3
enter
shl
clc
call
daa
ja
dec
pop
loope
repz
sbb
sti
pop
out
jmp
cwtl
out
lret
jecxz
inc
outsl
push
dec
std
adc
bound
push
pop
and
sub
add
mov
push
mov
xchg
cltd
push
into
movsl
push
addr16
inc
pop
fcom
in
push
int
dec
movsb
push
inc
jmp
push
jmp
xor
xlat
sub
or
addr16
mov
mov
mov
ds
nop
lret
sub
adc
lods
xchg
pop
aas
sub
pop
add
add
lret
mov
ds
jecxz
pushl
jbe
adc
inc
inc
insb
jecxz
test
add
jp
mov
or
std
addr16
sti
lods
adc
sbb
in
jno
dec
sub
test
insl
vcomisd
mov
add
adc
pop
sbb
jp
lcall
lods
orb
inc
mov
xor
loop
in
subb
hlt
and
icebp
mov
loope
repnz
ret
jecxz
inc
jbe
stos
pop
bound
std
mov
lods
jl
test
dec
pop
mov
or
push
sahf
mov
xchg
shl
xchg
pushl
dec
clc
rcrb
data16
inc
lret
and
fiadds
ret
pop
pop
dec
mov
xor
lock
fwait
sbbb
lahf
mov
std
mov
sarl
jl
xchg
ficoms
mov
cmc
cld
rcll
loope
xlat
push
ljmp
rorb
dec
jecxz
cs
jmp
mov
inc
pushf
cmp
push
insl
rclb
pop
lea
dec
add
scas
cmp
pop
cli
lods
and
mov
dec
push
loopne
add
daa
test
outsl
ljmp
push
push
push
mov
call
aam
das
xor
fistps
push
adc
out
nop
inc
and
je
rcr
mov
cwtl
lock
shr
mov
int3
cmp
test
push
cmp
sahf
push
lahf
mov
add
into
call
lahf
mov
sbb
mov
hlt
ror
imul
jmp
pop
les
jg
daa
push
daa
rolb
mov
adc
adc
iret
and
cmp
dec
push
mov
sbb
adc
movsb
cmp
mov
cwtl
cltd
es
shrl
jno
mov
push
std
inc
adc
push
add
adc
mov
add
adc
mov
dec
addb
mov
xchg
jo
add
inc
mov
mov
mov
sbb
adcb
add
mov
xchg
and
xchg
call
icebp
push
dec
sub
je
add
inc
xor
xor
mov
bound
fisubl
stos
sahf
fdivrl
fucomip
jmp
inc
inc
add
and
dec
fildll
pushf
add
xor
xchg
stos
add
mov
adc
in
rclb
gs
cmpsl
bound
int
ret
aam
and
test
mov
fisubl
fwait
add
or
fstl
sbb
xor
pop
aam
loope
dec
add
test
rol
push
stos
sub
jge
add
push
jl
mov
jae
enter
xor
das
jne
sahf
test
push
mov
mov
dec
pop
call
mov
lahf
ret
testl
inc
das
outsl
jne
in
add
jne
dec
call
rcll
or
add
cmp
scas
push
lds
les
test
add
adc
xchg
and
xlat
dec
inc
in
aas
aam
inc
test
add
cmp
dec
inc
test
shll
adc
xor
cld
xor
scas
xor
iret
les
jl
inc
sbb
mov
add
pop
dec
xor
add
add
add
or
and
roll
and
cmpsb
pusha
je
add
les
mov
inc
dec
roll
pop
jp
mov
mov
add
push
jge
and
push
int3
sbbb
adc
cwtl
push
ss
roll
xor
or
mov
lahf
pop
shlb
les
add
jne
add
addr16
or
dec
push
dec
and
iret
xchg
sub
cwtl
mov
leave
jnp
cmp
test
jo
add
insl
mov
xchg
push
jae
jo
stos
cld
subl
add
lcall
test
rcl
add
fwait
negb
or
push
nop
sub
lock
push
xor
add
pop
shlb
mov
add
dec
inc
push
mov
ss
and
in
inc
push
insb
ss
popa
fistl
cmp
int
sbb
cmp
ljmp
ss
stos
mov
or
inc
mov
add
adc
and
xchg
sbb
add
mov
cmp
popf
aas
push
push
sahf
push
sti
stos
lea
mov
cmp
shll
mov
les
insb
cmc
xchg
add
mov
gs
pop
jnp
test
sbb
xchg
xchg
mov
clc
mov
dec
jo
jge
mov
mov
ljmp
cmp
scas
jge
add
sbb
outsl
aad
cmpb
fistpl
pop
cli
push
lds
int3
or
mov
dec
mov
iret
pop
popa
xor
gs
xor
je
xchg
into
xlat
movsb
lods
mov
pop
jg
stos
push
fisttpl
xchg
add
sahf
xorb
mov
sahf
dec
xchg
stos
andb
or
test
ficompl
sbb
icebp
mov
loope
in
mov
imul
mov
sub
fsubs
jbe
loopne
sarl
test
add
pop
add
test
dec
pop
add
imul
outsl
push
xor
mov
out
outsb
cltd
sub
adc
fists
incl
dec
sbbl
mov
aad
mov
add
sbb
rcrl
mull
and
cmp
dec
ljmp
mov
adc
movsl
jp
iret
sahf
in
call
xor
lahf
inc
sub
lods
or
pop
add
cli
push
xchg
mov
push
loop
jge
xchg
mov
jg
mov
ja
xchg
xor
push
ror
inc
add
push
cwtl
mov
xchg
mov
daa
loop
xlat
gs
or
sahf
fwait
xchg
inc
insl
lret
jmp
shr
cld
lret
fsubl
pop
xchg
loop
adc
dec
jge
sub
and
or
dec
shl
push
pop
mov
shll
rcrl
mov
lock
loopne
cli
mov
testl
jno
mov
bound
fsubrl
icebp
fildll
stos
imul
rolb
add
ja
lret
fs
push
adc
sbb
mov
mov
in
jbe
inc
xor
push
rcrl
sub
stos
sahf
repz
push
xchg
and
sbb
test
dec
test
mov
and
arpl
adc
mov
shlb
ljmp
sbbb
mov
pop
repz
xor
fwait
or
inc
mov
push
dec
out
mov
pop
and
leave
jp
clc
decl
dec
push
adc
fnstenv
mov
jbe
fimull
out
popa
sbb
jae
jo
mov
cmpsb
mov
lcall
loopne
push
or
mov
mov
lret
in
cs
aam
rol
dec
iret
adc
dec
testb
inc
and
pop
loopne
inc
je
dec
inc
pop
call
jecxz
jmp
jge
testl
lock
test
insb
dec
sub
adc
mov
insl
in
insb
ljmp
sub
inc
pop
les
movsl
mov
test
shrb
push
push
je
jge
adc
mov
repnz
dec
pop
push
shll
in
add
push
rolb
sbb
sub
and
jle
sbb
into
and
leave
in
push
mov
bound
xor
mov
sub
out
out
inc
mov
cmp
addr16
push
adc
data16
pop
cmp
sub
call
idivb
dec
cmp
shll
sahf
ja
aam
jl
in
lods
andb
inc
aam
popf
imul
pop
enter
adc
xor
js
inc
mov
sbb
jne
mov
xor
nop
sahf
xchg
data16
lds
hlt
push
jno
mov
das
lcall
and
dec
out
mov
stc
pop
xchg
mov
mov
push
inc
idivl
add
mov
push
pop
adc
adc
aam
std
and
sub
xor
and
push
dec
mov
inc
es
dec
dec
enter
pop
add
mov
inc
loope
int3
sbb
push
jnp
and
xor
inc
push
push
rolb
xor
in
jno
adc
int
push
test
xchg
pop
mov
aas
sub
and
hlt
popf
movsb
push
sbb
inc
sub
lock
or
adc
in
inc
cltd
mov
xchg
repnz
pop
add
jne
push
sub
xchg
add
es
cmpsb
dec
cmc
adc
imul
int
mov
adc
xchg
aas
or
adc
sub
loopne
push
xor
negb
leave
xchg
es
insb
pop
orb
mov
cld
aad
movsb
cmpsb
inc
rclb
mov
push
test
sbb
inc
adc
shrb
js
add
sbb
inc
inc
sbb
adc
dec
pop
pop
int3
or
push
sti
sbb
pop
jbe
stos
dec
stos
jmp
add
mov
add
or
cmpsb
jmp
push
jns
xchg
aaa
clc
lcall
dec
jae
je
ss
in
orl
jns
pop
stos
or
test
inc
shll
pop
xchg
mov
xor
or
xchg
insb
add
push
push
punpckhbw
mov
adc
push
dec
mov
mov
mov
pop
cltd
ljmp
jmp
dec
fcomi
xlat
rolb
jne
inc
pushl
shrb
in
add
sbb
outsb
xorb
sub
xchg
lods
inc
and
mov
movsl
in
xchg
mov
jge
jno
shll
jnp
mov
mov
or
mov
rol
orb
inc
jb
pop
dec
and
sub
pop
push
cmp
dec
jg
mov
add
scas
xor
ss
outsl
adc
or
ss
mulb
rorb
mov
data16
adcb
popa
cmp
xor
adc
pop
loopne
movb
movsb
or
jmp
inc
enter
sahf
aaa
mov
ss
push
nop
std
cmpsl
xor
push
notb
inc
sbb
sbb
mov
inc
add
aad
rorl
push
adc
cwtl
jb
sbb
add
movsb
std
scas
lret
add
push
mov
push
mov
dec
or
inc
roll
mov
arpl
pop
push
incl
pop
jmp
inc
repnz
lretw
mov
imul
or
shrl
arpl
cmp
lock
sbb
stos
stos
xor
cmpsl
lcall
sahf
add
inc
lret
or
dec
rorb
push
and
jnp
mov
inc
enter
ret
or
sub
lds
dec
xor
sub
push
push
add
pop
clc
das
sbb
sti
push
fmuls
mov
mov
orb
jle
add
xchg
dec
icebp
xor
into
mov
scas
push
mov
sbb
rorb
dec
mov
inc
add
or
insb
add
xchg
rcll
aad
mov
roll
int
lods
in
xchg
mov
mov
pop
mov
sti
popf
add
daa
popa
cli
insb
pop
call
call
fisttpl
adc
clc
sub
or
stos
mul
loopne
test
xor
cs
adc
push
fistpl
das
in
sub
popa
nop
and
loopne
add
int3
xor
sub
mov
fbstp
mov
in
and
or
leave
inc
fsubrp
xlat
int
movsl
dec
movsb
push
mov
and
lea
adc
add
sbb
pushf
das
stos
fmul
pop
cmpb
ficoms
mov
xchg
in
lahf
mov
pop
xlat
test
push
lea
sbb
add
cmpsl
inc
push
iret
sub
mov
push
lock
orl
and
lods
arpl
mov
aam
sar
test
mov
lods
add
shlb
notl
adc
mov
lods
mov
and
add
mov
adc
jb
push
ljmp
xchg
ljmp
dec
mov
adc
add
fiaddl
mov
adc
data16
mov
dec
xlat
add
adc
cli
fsts
mov
push
movsb
adc
and
in
mov
fdivs
add
xor
mov
or
xchg
push
je
adc
push
add
imull
dec
sti
dec
insb
aad
sbb
mov
mov
les
xchg
test
lock
mov
cmp
sbb
add
mov
jg
fldcw
scas
xor
jle
push
mov
lods
mov
popa
js
loopne
test
sbb
push
ret
jnp
xchg
sbb
jmp
xor
sbb
fisttps
loop
sbb
mov
ror
pusha
pop
cli
adc
test
loopne
jg
lods
fwait
xor
inc
jge
xchg
fs
and
push
add
mov
ja
subb
adc
jnp
int
mov
mov
mov
add
loope
add
and
push
or
jle
add
and
push
and
mov
aaa
dec
sbb
and
add
cmpsl
jmp
aaa
push
pop
and
mov
and
inc
and
cmpsb
test
cmp
outsl
and
es
mov
jmp
ljmp
dec
or
mov
add
inc
add
pop
sti
lcall
bound
sbb
add
add
outsl
add
add
std
das
jl
pop
push
es
push
push
dec
pop
sbb
aas
les
xor
push
arpl
xor
pop
sbb
add
sub
inc
adc
ret
sbb
mov
mov
adc
add
aad
push
outsl
aam
push
movsl
sbb
sub
push
pop
mov
icebp
iret
cmp
fisttpl
popa
xor
and
xorl
mov
inc
add
jge
scas
sbb
or
test
sub
mov
or
adc
inc
sub
and
fucom
fldt
pushf
sahf
dec
xchg
icebp
inc
stos
add
fwait
sbb
xchg
dec
pop
popf
bound
enter
push
and
lcall
or
mov
in
mov
adc
and
sub
in
mov
inc
add
bound
add
cmp
inc
aas
adc
inc
lds
lods
sub
push
pushf
add
std
les
pop
mov
in
pop
bound
fnsave
decl
or
ljmp
aam
dec
subb
add
inc
push
sti
inc
mov
ja
push
pop
jl
movlps
mov
xchg
lret
jmp
fs
nop
scas
fsubrs
leave
movsl
outsl
xor
mov
cmp
mov
inc
mov
push
jg
rorb
negl
adc
mov
stos
fldcw
out
test
xor
negl
mov
adc
add
cwtl
mov
test
jg
shl
in
sbb
dec
sub
inc
rorb
ljmp
push
cmp
dec
mov
jl
popa
popa
cmp
cmpb
xchg
lods
test
dec
jbe
out
aaa
push
adc
fmuls
cltd
lea
in
jmp
cli
sub
mov
mov
inc
pop
in
sbb
scas
sti
jo
jbe
mul
loop
loopne
jo
clc
jp
je
inc
in
scas
xchg
daa
sahf
jb
inc
icebp
mov
aad
shlb
dec
and
outsb
adc
jle
test
repnz
lods
xchg
inc
loop
fucomp
ret
pop
and
cmp
adc
jnp
adc
aad
pcmpgtb
aam
les
lret
add
and
fcomps
cld
cwtl
sahf
sahf
js
sbb
shll
push
dec
push
mov
popa
jmp
fbstp
inc
sahf
add
mov
jo
sub
lds
icebp
add
mov
jecxz
xchg
fisubrs
jl
adc
add
sbb
lds
hlt
add
xorl
stc
lcall
pop
and
je
das
shlb
adc
or
sbb
dec
lret
adc
and
cli
lahf
push
mov
jg
jae
xor
test
push
push
xchg
aad
cmp
mov
xchg
sti
popf
movsl
ret
add
subb
test
arpl
lods
movsl
dec
pusha
pop
lcall
jecxz
test
jg
loope
rol
das
jecxz
in
and
cmpsl
add
or
test
int
add
sbb
dec
cltd
iret
mov
and
testl
rcrb
movsl
sbb
inc
pop
jg
loop
test
sbbl
pcmpeqb
jg
loope
inc
rolb
add
sub
jae
add
mov
mov
roll
push
and
stos
mov
mov
push
pushf
js
xchg
cmp
push
in
jbe
addb
and
add
mov
int
pop
mov
mov
das
inc
jle,pt
ja
sbb
pop
hlt
or
xchg
jl
mov
cltd
fldenv
imul
jnp
dec
push
cmp
fwait
mov
push
or
mov
cmc
cmp
bound
jge
add
and
sti
xchg
or
push
pop
sub
or
sarb
jg
in
dec
xor
mov
mov
icebp
sbb
das
fdivrl
rorl
cltd
sarb
push
sbbb
je
jb
mov
lcall
xchg
push
cs
movsb
dec
push
shr
pop
icebp
movsl
mov
sub
popa
das
mov
or
scas
pop
inc
push
cmp
add
push
pop
out
gs
fucomp
out
sub
dec
mov
and
stos
or
repnz
push
mov
and
cmpsl
movsl
xchg
scas
mov
xchg
dec
sub
mov
dec
test
lahf
cmp
or
adc
fstpt
adc
pop
cmp
mov
adcb
movsb
lahf
cld
pop
in
inc
mov
inc
lahf
jnp
sbb
jae
pop
jo
push
in
icebp
sub
mov
push
sbbl
jne
jmp
cmp
in
sub
mov
ret
sbb
xchg
adc
xchg
xor
ret
push
jno
or
or
adc
lea
es
sub
mov
iret
adcb
and
lods
pushl
sub
leave
mov
adc
add
repz
pop
loop
iret
pop
xchg
ja
in
sbb
popa
push
lds
call
push
inc
pop
sbb
sub
or
mov
sub
lahf
push
jae
cwtl
dec
shll
or
hlt
mov
fistpll
inc
lret
and
sub
adcl
fdiv
ficoml
cld
mov
cld
popa
movsl
mov
ja
call
stos
mov
stos
sub
or
xor
mov
mov
jge
mov
dec
fistpl
push
cmp
int
adc
pop
cmpsb
loop
adcl
cmp
cs
mov
in
sub
outsl
mov
and
and
and
js
call
pop
jmp
mov
or
lods
lds
es
fstpl
lahf
cmpb
or
or
inc
movsl
fildl
add
pop
jge
lods
std
ds
push
repz
cs
call
testb
mov
inc
pusha
xor
mov
and
sbb
xor
in
push
mov
outsb
int3
xchg
lock
or
test
and
and
popa
andl
lea
jecxz
xlat
mov
adc
hlt
outsb
xchg
push
cmp
xchg
ljmp
push
mov
test
outsb
xlat
icebp
cmpsl
mov
mov
jo
decl
sbb
es
ret
add
mov
mov
outsl
sub
mov
xor
scas
or
jnp
pushl
cli
stos
inc
aaa
add
clc
dec
sbb
sarl
dec
aas
mov
inc
or
leave
push
adc
cmp
xchg
and
aad
std
mov
cmp
or
xlat
nop
lea
add
push
mov
ja
adc
stc
decl
jle
decb
mov
jge
pop
and
or
mov
push
jns
popf
jmp
cmp
out
aam
add
jmp
jnp
decl
jle
lcall
dec
aaa
fsubrs
jnp
loop,pt
sbb
dec
fsub
orl
stos
rcr
popa
call
cmp
mov
scas
and
lds
sbb
cltd
pop
add
mov
cwtl
jo
xchg
das
mov
sbbb
cmp
sbb
std
outsl
or
fcoml
dec
and
lods
or
fidivrs
mov
push
stos
adc
mov
push
push
and
adcb
sbb
cmpsb
mov
outsl
mov
std
add
cld
inc
pop
jecxz
sbb
inc
ja
and
inc
and
mov
sbb
rclb
pop
mov
fsubrs
jmp
repz
inc
mov
out
das
xchg
push
pop
sbb
or
pop
inc
dec
js
sub
pop
jp
ljmp
pushf
sti
mov
ds
mov
notl
jl
movsb
push
js
jbe
xchg
cmp
rcrl
or
jl
jno
fwait
jo
enter
insb
cmpsl
cmc
push
pop
out
xor
xchg
call
cmc
inc
lds
ljmp
call
inc
cmp
adc
lods
mov
pop
je
lds
sti
xchg
fsubrl
or
and
mov
aad
cld
sbb
dec
add
jg
scas
pushl
shlb
sbb
cmp
add
gs
sub
pushl
pusha
mov
rcl
andl
int
scas
or
or
push
and
movsl
or
mov
ja
insl
add
mov
and
pop
lds
bound
add
int3
lds
test
add
mov
mov
stos
int3
out
mov
inc
inc
xor
inc
push
cmc
dec
loope
decb
incb
xor
adc
stc
imul
pop
mov
icebp
into
or
pop
test
aaa
fs
adc
or
ret
or
in
mov
loop
mov
dec
rclb
jno
fsts
sbb
ss
test
sbb
cmp
sub
sub
pop
das
adc
jns
test
cmp
or
cmpsb
ret
or
insb
das
sub
push
and
mov
sub
loop
into
rclb
add
or
je
int
jmp
nop
add
movsl
and
adc
loop
in
movl
push
adc
mov
fldcw
int
xchg
cld
lea
inc
test
pushf
mov
outsl
das
std
dec
data16
out
pop
sub
mov
ret
or
adc
mov
roll
lds
push
loop
hlt
pop
mov
jmp
adc
inc
ret
sub
cld
mov
int3
rcll
out
js
jg
rcll
outsl
push
cltd
sbb
mov
incl
mov
subb
mov
jno
divl
mov
loopne
mov
mov
or
aad
and
inc
nop
roll
dec
fdivr
xor
and
xchg
stos
fimuls
sbb
lock
les
stos
push
inc
dec
push
int
loope
add
testl
notl
sbb
negb
loope
mov
jne
jno
jns
lods
lock
lods
lods
inc
xchg
jno
inc
lds
xchg
fidivs
xor
lret
mov
mov
lahf
cmc
and
sbb
notl
sahf
fwait
sub
call
fbstp
jne
adc
jbe
sub
leave
add
mov
jg
nop
cmp
jno
arpl
pushf
jns
clc
push
rcrl
dec
sub
in
decl
pop
xor
xchg
push
rcll
or
imul
xchg
rcrb
aam
push
jno
inc
pop
push
xchg
outsl
add
push
loopne
les
jbe
inc
jb
adc
cld
xchg
andl
int3
movsb
xchg
imul
mov
mov
xchg
aad
jle
xchg
pop
mov
dec
test
adc
mov
mov
ss
inc
ljmp
mov
xchg
cwtl
dec
jb
aam
mov
das
mov
cmpsl
sub
xchg
jo
or
mov
cmpsb
mov
pop
mov
lahf
sub
scas
mov
mov
inc
pop
clc
sbb
es
xlat
mov
cmp
dec
xchg
test
aam
inc
fcmovnb
mov
mov
aad
adc
or
pop
movsb
jnp
adc
loopne
sbb
and
aad
inc
jl
push
or
push
lea
dec
dec
inc
or
push
cmpl
mov
adc
rorl
cmp
pop
cli
lea
pusha
test
mov
call
test
push
mov
and
repz
pusha
incl
jno
dec
out
sbb
mov
cld
inc
or
push
call
hlt
push
inc
xor
inc
add
sbb
pop
cld
jg
lock
ds
mov
mov
mov
orb
cwtl
pop
div
adc
pop
lods
xchg
xor
call
ret
rcrl
sbb
mov
sahf
push
cmp
cld
test
loope
xchg
mov
push
insl
inc
sub
int
xchg
pop
dec
mov
pushf
out
cmp
or
or
and
or
jmp
inc
inc
xchg
cmp
ror
arpl
push
jo
or
cld
mov
fdivrs
jne
xchg
mov
cmc
data16
xor
adc
pop
cmp
inc
dec
xor
dec
cmp
or
sub
inc
inc
mov
pushl
add
lock
nop
dec
push
inc
xchg
add
xor
jmp
inc
xlat
aaa
or
aam
jp
ljmp
sub
inc
adc
push
cwtl
pop
mov
mov
adc
cmp
push
nop
dec
stos
incb
hlt
push
loopne
mov
dec
shl
adc
imul
lret
das
jg
adc
inc
cwtl
or
push
bound
adc
mov
aaa
fstpl
sub
lea
lods
pop
lahf
mov
sub
mov
rolb
inc
in
je
xchg
dec
pop
cmpsb
lcall
rcll
pop
mov
add
shlb
sub
lcall
iret
add
aaa
fiaddl
adc
rolb
loopne
sub
cli
pop
lods
ret
inc
inc
xchg
call
repz
xor
add
add
es
or
jmp
rcl
stos
push
pop
xchg
les
sub
xchg
xor
fists
and
add
cmp
js
jae
pushf
xlat
sbb
and
sbb
idivl
adc
push
fisubrl
jmp
rcrl
push
in
jae
cmp
xchg
dec
aam
jg
add
mov
pop
hlt
add
or
cld
fcom
cmp
adc
inc
cmp
decl
pop
push
fdivs
pusha
mov
add
vrsqrtss
xor
push
imul
hlt
je
enter
aad
in
test
sbb
call
enter
jnp,pn
hlt
lds
stc
add
or
and
ss
pop
das
sub
pushf
movsb
dec
or
shl
filds
mov
cmp
adc
shlb
push
ds
ja
cmp
je
pop
or
xchg
xor
popl
mov
add
iret
dec
aas
roll
and
or
push
push
or
push
jb
pop
xchg
pop
loop
lcall
xchg
int
sub
xorl
sub
inc
fnsave
cli
dec
int
bound
iret
sub
push
push
repz
lcall
rcrl
cmp
lahf
test
shlb
mov
sti
paddb
ret
popa
lods
inc
int3
or
push
out
xchg
pop
ljmp
push
ljmp
jle
cwtl
pop
mov
out
aad
or
idivb
jb
or
out
ljmp
xchg
sub
or
test
and
aam
dec
enter
adc
inc
mov
call
shll
and
adcl
unpckhps
dec
fcoml
push
mov
inc
inc
pop
clc
stos
inc
dec
add
mov
fisubl
outsl
jecxz
and
mov
jmp
adc
sub
jbe
add
mov
jg
or
lahf
les
sbb
jb
test
dec
pusha
jmp
mov
or
test
jl
adc
pop
xor
out
daa
sbb
xchg
pop
mov
jmp
push
dec
dec
sub
lods
outsl
and
mov
out
test
push
adc
push
dec
std
shll
testl
fisubrl
scas
push
insl
dec
fwait
cmpsl
or
fstl
test
movsb
cmp
cmpsb
int3
js
ljmp
fimull
sub
test
and
clc
scas
jmp
and
insb
aad
icebp
cmc
test
adc
test
mov
hlt
mov
dec
popa
cwtl
imul
xchg
ss
lods
subl
lcall
decl
jle
sbb
mov
wbinvd
scas
aad
incl
lock
popf
push
add
push
adc
lret
jb
and
sbb
dec
sub
fucomi
hlt
sbb
mov
stos
lret
and
enter
mov
mov
pop
mov
aaa
dec
clc
xchg
mov
add
in
dec
lret
aaa
aas
shr
out
pop
jno
sbb
stos
movl
lea
mov
push
aad
jp
add
sub
clc
pop
rcrl
sbb
jg
pop
inc
mov
sbb
test
pusha
pop
hlt
movsl
sti
xor
push
mov
mov
sti
mov
loope
or
and
sbb
cmpsl
ret
and
inc
lahf
dec
dec
xor
dec
mov
into
sahf
or
arpl
cmpsl
pop
mov
mov
jne
xor
incb
dec
cli
pop
imul
hlt
add
aam
sbb
mov
mov
sbb
cmpsl
cmp
add
fsts
lods
decl
lahf
and
fisttps
xchg
es
movsl
inc
xor
std
movsl
sub
repz
dec
add
xor
jle
pop
jmp
xchg
pop
mov
out
jno
mov
mov
pushf
lret
sbb
sti
mov
xchg
add
or
or
xchg
mov
inc
icebp
fistpll
pushf
xchg
ds
hlt
das
mov
pop
push
outsb
xor
inc
and
or
jnp
dec
jl
pop
sarb
fstpt
jecxz
mov
mov
hlt
xor
sbb
movsb
cli
dec
pop
and
xchg
daa
sbb
add
aam
out
jmp
sub
pop
cmp
imul
cs
cwtl
xchg
out
test
add
inc
lock
push
adc
mov
adc
cmpsb
pop
mov
adc
andl
test
inc
imul
flds
mov
test
outsl
jmp
cmpl
xchg
cmp
push
xchg
mov
incl
movsb
shl
push
jp
or
cmp
push
mov
pop
push
jbe
inc
adc
pop
test
dec
jge
out
mov
mov
sub
jmp
out
pop
add
push
jl
push
or
les
ljmp
inc
inc
mov
fildl
lahf
dec
sbb
mov
movsl
fsubrs
adc
cmpsb
cmp
cmp
or
mov
rcrb
and
call
adc
cld
pop
fdivrp
out
cmp
fs
subl
add
repnz
jb
cld
mov
mov
push
add
lea
mov
sarb
mov
mov
or
shll
add
or
adc
das
xor
lock
and
jecxz
adc
sbb
jmp
mov
popa
xchg
movb
shlb
cli
jae
inc
cmp
cmp
test
mov
sub
test
mov
popf
lods
je
jge
sub
xor
mov
push
nop
idiv
ds
cld
jg
add
lods
repnz
xchg
inc
inc
fistpl
adc
push
int3
sti
jg
inc
adc
push
sub
mov
sbb
xchg
or
inc
aad
mov
push
inc
pushl
mov
stc
int3
cli
fwait
addr16
cmpsb
cmc
mov
andl
push
mov
mov
aaa
aam
and
cmp
jmp
jle
sub
xchg
fistl
ja
addr16
aaa
movsl
push
cmpsb
mov
in
sub
mov
mov
mov
sub
jp
inc
es
mov
jg
ljmp
pop
sarb
aam
and
sub
sub
orl
incl
ret
in
jnp
mov
lea
addb
ljmp
mov
cmp
cld
bound
fld
jge
push
clc
pop
dec
call
mov
xorb
ret
xor
inc
rcll
bound
xchg
bound
jnp
and
and
into
adc
stos
hlt
rorl
test
mov
aam
mov
rcr
pop
daa
add
mov
inc
fstpt
mov
jle
jbe
aam
cmpsl
mov
fbld
test
or
jmp
nop
test
adc
adc
cmc
mov
inc
loop
andl
dec
sti
lea
mov
dec
in
scas
test
loope
and
fyl2xp1
and
pop
fisubrs
push
and
mov
xchg
inc
pop
outsb
mov
push
mov
cs
les
sbb
pusha
adc
out
enter
iret
aaa
fbstp
and
inc
adc
add
jge
dec
or
sbb
repz
arpl
xor
sbb
mov
mov
insl
pop
or
jle
jmp
stos
mov
outsl
cltd
adc
mov
fldl
xchg
mov
jg
fcmovb
jb
pop
test
push
mov
and
cmp
shrb
push
pop
fldt
mov
lods
mov
popf
jne
bndstx
cli
fistpll
mov
lods
mov
adc
xor
repnz
fstpl
cs
push
inc
push
sbb
ljmp
jnp
xchg
xchg
cmp
xchg
dec
frstor
iret
add
mov
test
outsl
rolb
add
jae
jle
push
sti
push
sbb
push
push
je
push
in
xchg
ret
sbb
ret
xchg
inc
jmp
cli
push
sbb
push
loop
pop
das
ds
adc
push
rcr
into
inc
pop
and
ljmp
inc
cmp
cmp
rcll
mul
jnp
add
in
outsl
add
sub
incb
mulb
stc
and
gs
leave
inc
sti
mov
cld
jg
daa
lock
shl
push
mov
arpl
fwait
or
push
ficoml
jb
and
out
loope
or
sbb
out
in
test
lock
jb
lods
cld
fistpll
sti
cmp
lock
cli
pop
incb
clc
push
jae
adc
lahf
push
xchg
jl
add
test
aaa
hlt
fwait
push
cmp
sbb
jns
enter
fcomp
push
faddp
test
leave
mov
ss
sub
imul
gs
mov
inc
das
mov
stos
scas
sbb
lahf
adc
push
adc
inc
fs
or
imul
cli
pop
inc
hlt
or
lea
or
test
push
mov
das
icebp
mov
push
push
jmp
pop
stc
rcll
nop
call
jmp
mov
sbb
push
adc
pushf
cld
aad
xchg
mov
inc
scas
push
xor
inc
jge
xor
mull
or
add
or
xchg
adc
jg
dec
nop
xor
cli
cmpsb
sub
jno
mov
add
jge
aad
inc
mov
push
enter
jne
push
sahf
clc
dec
xor
sahf
add
and
lea
lods
sbb
and
xchg
in
push
stc
push
xchg
mov
mov
mov
cmp
mov
inc
xor
jnp
add
jbe
push
mov
repnz
push
int3
lock
pop
pop
adc
mov
add
mov
jne
cmc
adc
cwtl
or
xchg
xchg
adc
inc
lea
mov
loop
adcb
pop
xchg
inc
cmp
push
dec
mov
mov
mov
ja
jle
push
xor
inc
insl
and
mov
mov
ret
sub
push
fs
ss
loop
sub
add
mov
mov
clc
stos
add
mov
push
xor
lcall
jb
shll
jg
lock
mov
loopne
sbb
and
push
push
push
dec
push
rolb
adcb
mov
out
pop
out
add
push
dec
ja
call
xlat
and
mov
rcll
aas
jle
hlt
and
inc
sub
clc
mov
ljmp
and
pop
in
ffree
and
dec
dec
inc
jb
push
dec
pop
mov
cwtl
xchg
push
adc
or
xchg
jg
cld
ja
mov
out
insl
enter
loop
je
xchg
lcall
add
imul
out
sbb
pop
pop
and
and
sbb
iret
push
add
adc
incl
xor
mov
and
daa
testl
mov
jge
outsb
mov
lock
mov
outsb
enter
xor
subb
testl
scas
push
push
jp
jmp
aam
cmp
jbe
mov
mov
xor
jo
push
mov
inc
stc
sub
dec
cmc
jg
add
cmpl
cld
mov
jl
add
lods
outsb
jl
dec
inc
icebp
fstpt
outsb
std
arpl
fcom
xchg
xchg
inc
dec
add
cmp
lods
bound
mov
lock
mov
mov
popa
pop
enter
mov
fstl
clc
call
mov
add
add
inc
rclb
sub
add
pop
adc
fwait
cmpsb
jbe
fwait
pop
iret
mov
mov
xor
sbb
push
adc
fwait
cli
ljmp
and
xchg
insl
pop
or
pop
jne
mov
xor
fwait
inc
push
shrl
mov
adc
adc
jg
stos
repnz
adc
or
fisubs
iret
ja
lods
inc
fs
adc
inc
pop
mov
push
jge
mov
dec
jg
incb
inc
popf
fs
or
add
lea
lods
aad
shr
add
inc
lock
jmp
jns
adc
mov
dec
pop
or
mov
in
movsb
push
and
pop
inc
add
movsl
das
jno
push
wbinvd
mov
cmp
jl
lret
imul
cs
cli
outsl
xchg
cmp
mov
outsb
aas
sbb
mov
add
mov
adc
test
push
push
loop
and
das
out
mov
push
sub
adc
or
mov
mov
jnp
and
popa
fldcw
and
push
lock
mov
xchg
dec
and
mov
imul
mov
sbb
outsl
mov
adc
pop
xchg
and
jge
mov
fists
sbb
rclb
out
movsl
jb
xchg
ja
lock
jae
xchg
push
push
or
sar
cmc
into
mov
cs
je
and
lea
xorb
jg
movsl
xchg
addr16
cmc
roll
adc
jecxz
nopl
xor
pop
int
dec
jne
cmpsb
jp
pushf
pop
test
dec
das
inc
push
gs
pop
dec
jns
jo
jno
std
sarb
push
adc
and
js
int
add
insl
adc
push
mov
pusha
pop
fsubrl
fistl
outsl
inc
add
xchg
dec
lahf
xlat
cld
mov
fsubs
jo
mov
or
popa
or
pusha
loop
mov
dec
add
pop
inc
je
jbe
or
mov
or
xchg
outsl
insl
inc
mov
inc
add
or
jle
mov
lret
call
cli
loopne
inc
inc
push
sar
aas
jb
stos
inc
mov
inc
push
pop
jae
cmp
mov
mov
push
pop
adc
sub
jno
int
test
pop
adc
mov
test
add
insb
mov
pop
xchg
jns
mov
mov
mov
jge
aas
adc
pop
je
test
test
insl
sub
inc
cmp
shrl
jno
daa
mov
clc
pop
add
mov
fcomi
jnp
ja
xchg
loop
cmpsb
or
ja
shl
pop
jbe
xor
adcl
mov
inc
scas
ss
xor
mov
bound
cmp
pop
incb
pop
cmp
xchg
ljmp
std
xor
cmpb
cmpsb
iret
push
cmp
scas
cmp
sbb
push
mov
mov
sti
insl
dec
cld
and
repnz
stos
test
sti
mov
arpl
and
jecxz
push
cmpsb
call
pushf
repz
test
push
mov
xor
fldenv
mov
mov
sub
mov
repz
in
inc
daa
or
sub
aas
fcompl
imul
cmp
lahf
dec
das
les
call
adc
pop
cld
inc
jg
pop
jecxz
cs
test
nop
in
adc
xor
int3
mov
sbb
loope
xor
shlb
in
xchg
mov
mov
mov
mov
cld
lea
mov
xor
jb
mov
add
mov
push
mulb
popf
fidivrs
inc
push
ljmp
cmp
cwtl
loop
sar
insl
movsb
test
dec
lock
outsb
shlb
es
jo
sti
shrb
sbb
mov
sub
jb
stc
enter
adc
lea
rcrl
rcrb
mov
adc
and
ja
cmpsl
ss
jmp
or
mov
add
rcll
imul
nop
pop
pushf
push
adc
adc
test
mov
adc
dec
cmp
in
sub
jg
test
push
adc
xor
cmp
lods
adc
lods
insb
sbb
int
inc
adc
adc
imulb
das
mov
aas
xchg
aam
cmp
in
sub
mov
inc
sbb
mov
inc
pop
sub
test
push
lcall
in
fdivp
jo
in
add
inc
cli
pop
or
lret
push
jb
cmp
inc
and
lods
inc
iret
mov
push
hlt
shll
push
jge
je
stc
addr16
mov
and
mov
add
flds
mov
mov
jo
mov
cmp
decl
cli
sbb
test
outsl
adc
or
and
daa
or
push
pop
add
mov
roll
gs
lock
xor
out
adc
cmp
pop
cld
fists
les
rclb
push
mov
dec
daa
orb
inc
xor
push
push
es
and
icebp
or
aad
decl
xor
jecxz
enter
bound
jg
fisttps
inc
fnsave
dec
push
jl
das
cld
dec
call
mov
lods
jno
add
push
xor
xchg
popf
mov
pop
ds
fstpt
add
into
in
add
aad
adc
xor
in
pop
clc
test
sahf
ret
jo
out
cs
fcoms
incl
pop
repz
push
lret
xchg
adc
and
and
push
ljmp
push
dec
jb
in
xor
adc
mov
or
lods
mov
test
pop
mov
sbb
lcall
outsl
push
sub
movsl
push
loope
pop
bound
push
mov
adc
jg
lods
and
push
cltd
and
push
ja
mov
call
push
xor
nop
inc
js
pop
mov
and
sti
jno
mov
sub
mov
fistpll
cmp
inc
imul
pushl
and
gs
add
pop
ficompl
pop
sub
and
adc
inc
add
mov
sahf
sti
leave
xchg
in
int
sub
rol
or
fnsave
and
pop
lcall
test
adc
xor
cmp
push
mov
pop
clc
pushl
cli
scas
imulb
lcall
cltd
cmp
sub
out
and
fs
jo
dec
mov
dec
shl
outsb
das
aad
lods
fcmovnbe
addr16
test
add
incb
negb
mov
fwait
xor
call
fdivrl
movsb
lea
xchg
fdivrs
decl
xchg
push
jle
sbb
ds
test
shr
aaa
mov
jae
outsb
hlt
push
mov
push
jo
ss
jl
push
sti
mov
dec
add
mov
xchg
sti
in
ud2
push
adc
movsl
xorb
in
call
hlt
mov
sahf
push
or
test
cs
ds
popf
and
outsl
or
pop
add
push
jecxz
xchg
add
or
nop
adcl
outsb
and
mov
ret
outsl
in
inc
das
xor
das
andb
mov
adc
mov
jl
arpl
loopne
nop
lea
insl
mov
shll
inc
sbb
lock
cld
decl
xchg
cmpsl
addl
jne
std
jg
push
pop
push
aaa
int
leave
call
inc
add
clc
sbb
pop
mov
pop
imul
xchg
fidivrs
lock
enter
adc
mov
pop
faddp
insb
mov
jmp
adc
push
ret
sub
ja
push
or
cli
in
mov
rorb
test
ret
ja
xchg
push
cmc
dec
mov
and
add
add
pop
bound
jg
inc
mov
sub
push
xchg
popa
xor
aaa
push
hlt
dec
test
scas
jg
xor
movsb
pop
aam
fdivrs
lret
inc
xor
fucomip
lods
dec
cld
test
cmc
sbb
ret
pushf
mull
sarb
mov
adc
sub
std
push
pop
addb
push
mov
xchg
int3
pop
cli
fcomip
stos
mov
mov
loope
loop
scas
clc
xchg
das
pop
pop
out
mov
mov
or
or
aaa
jge
jle
pop
adc
orl
jg
insl
rcll
ret
pop
popw
iret
addr16
dec
cmpsl
or
pop
mov
and
lock
mov
dec
dec
pushl
data16
inc
in
mov
mov
das
out
sbb
lea
adc
mov
pop
imul
jle
mov
fsts
and
jg
es
pop
cltd
out
pop
inc
pop
inc
outsl
mov
xchg
lret
push
and
xchg
mov
or
pop
movsl
cmp
dec
fisttpll
loopne
pushl
xor
mov
mov
outsl
insl
ficompl
lahf
push
jb
data16
mov
mov
inc
frstor
popl
pop
mov
add
adc
xor
lea
pusha
negb
mov
and
stos
inc
sub
pop
jp
inc
aas
in
and
in
inc
stc
ljmp
lock
inc
cltd
jae
aam
movb
jge
hlt
mov
sbb
filds
mov
inc
and
lods
dec
test
std
ds
sub
sub
les
mov
dec
js
fistps
outsl
dec
cmpsl
outsb
inc
mov
enter
and
jl
int3
sahf
inc
pop
mov
in
dec
orl
jg
jmp
add
jbe
ja
jmp
mov
fimuls
stos
clc
into
imul
and
adc
inc
cmp
add
sbb
sub
negb
adc
mov
call
xor
mov
push
fmull
pop
sbb
das
and
pop
stos
mov
mov
mov
rolb
jle
cwtl
cmp
xor
pop
cmp
adc
aaa
xor
stos
bound
rorl
or
fcoml
sbb
cmp
shrl
out
cmpl
mov
push
adc
ljmp
fucomi
das
lock
and
jg
out
insb
imul
pop
ljmp
cmpsl
test
jg
xchg
inc
inc
clc
fmuls
dec
es
jg
sub
or
jae
pop
cmp
cmpb
xchg
mov
add
pop
mov
repnz
jne
addl
int
mov
and
orl
popa
cmpl
push
inc
clc
rcrl
pop
dec
in
push
mov
sbb
pushf
inc
mov
xor
mov
xchg
das
mov
mov
out
insb
jmp
mov
sub
aaa
imul
inc
add
lretw
cltd
mov
je
dec
mov
push
jb
jns
aam
cmp
loop
jmp
inc
in
pop
std
in
cmp
adc
and
or
lret
aas
add
sub
cmp
sbb
fimull
cmpsb
incb
popa
adc
mov
xchg
subl
jl
ljmp
dec
jno
pop
adcb
ret
sbb
es
cmp
dec
mov
xchg
loope
mov
pop
cmovle
lods
fstpl
fs
lret
movsl
sub
xor
ja
fs
stc
mov
cld
popf
xchg
inc
xchg
dec
jecxz
jg
push
or
mov
dec
push
movsl
aad
xchg
imulb
mov
sahf
push
rolb
fnstsw
or
add
push
sbb
test
pop
in
lock
out
adc
mov
imul
test
cltd
cltd
repnz
jl
dec
xchg
rcrl
jp
xchg
movsl
in
sub
fdivrp
sarb
push
imul
pop
pop
ljmp
mov
inc
push
loope
jnp
sub
in
in
test
enter
jmp
jno
loope
lock
cli
aas
and
or
jmp
in
mov
xchg
les
mov
mov
clc
sbb
call
xor
xchg
inc
push
or
cmp
incl
int3
mov
xchg
and
pop
adc
shl
leave
xchg
push
loope
ficomps
add
push
adc
jle
cwtl
mov
out
sbb
push
scas
mov
xor
fbstp
movsl
in
stos
test
ss
sub
cmpsb
cmp
pop
cli
das
mov
inc
dec
jg
add
fcoms
fs
les
cmp
das
aad
pop
sub
ja
pushf
aad
sahf
add
aaa
in
aam
sbb
mov
repz
xchg
sub
inc
add
add
cld
out
clc
outsl
sub
andl
push
sbb
xchg
mov
clc
rol
sbb
jno
ss
and
mov
shll
sub
pop
pop
movsb
es
xchg
rcrl
inc
and
pop
mov
lds
push
fdiv
call
lods
lahf
outsb
jg
in
cld
xlat
jbe
adc
mov
jecxz
lret
cmp
incl
gs
sub
dec
and
fistpl
xor
stos
xor
hlt
test
cmp
and
sar
adc
inc
cmc
push
call
ljmp
les
adc
or
add
jecxz
or
push
fsubr
mov
add
lea
in
pop
mov
testl
adc
out
arpl
sbb
sbb
fidivs
imul
mov
mov
mov
mov
cwtl
test
mov
and
pop
mov
call
aaa
or
xchg
std
leave
inc
push
ja
sbb
mov
sti
negb
sub
xor
loopne
cmpsl
inc
xchg
rcrb
loopne
xlat
pop
mov
mov
sub
add
dec
push
and
push
testb
jp
or
sbb
inc
add
pop
loopne
pop
mov
xlat
cwtl
stos
adc
sarl
add
sbbl
xor
imull
lahf
cld
das
mov
mov
mov
dec
test
mov
xchg
outsl
sub
les
cmp
lods
mov
and
jecxz
decl
loopne
sbb
fcoms
xor
inc
xor
jg
cmp
push
adc
addl
inc
cltd
jp
cmpsb
push
mov
mov
xor
stos
add
clc
lcall
xor
pop
adc
cld
ds
push
cmp
pop
decl
sub
cmp
out
imul
dec
daa
sub
les
push
pop
mov
mov
mov
mov
mov
std
jg
adc
push
and
cltd
int3
sbb
aad
push
test
popa
loop
add
xchg
add
or
or
loop
loopne
das
pop
adc
mov
lock
ret
add
mov
sbb
adc
sub
mov
divl
adc
adc
xor
pop
sub
ffreep
test
pop
lea
push
mov
jno,pt
push
add
stos
stos
mov
mov
or
loopne
cmp
sub
add
pop
and
in
mov
ja
test
out
iret
mov
pop
pop
add
shrl
mov
pop
add
dec
cmp
pop
movsb
call
inc
outsl
lret
cltd
jno
lods
inc
aam
cmp
adc
mov
and
cmc
cmp
cmp
mov
fstl
xor
stos
fisubl
xor
and
nop
jmp
cli
cmp
jecxz
cmp
aam
arpl
jnp
jne
push
cmp
lret
insb
cltd
pop
pop
shrl
inc
push
rclb
call
aad
fucomip
cwtl
xchg
push
inc
lods
cltd
adc
push
sub
mov
shlb
jle
or
fadd
inc
xchg
fwait
scas
mov
mov
xchg
or
adc
fisubrs
ss
cmp
imul
call
cld
lcall
movsb
repnz
and
pusha
ss
pop
xchg
dec
clc
mov
push
mov
sbb
mov
ss
cld
xchg
dec
cmp
push
ja
sub
je
hlt
mov
adc
jmp
rclb
std
stos
testl
loope
test
cltd
mov
ror
cmc
pop
outsl
insl
mov
pop
push
or
and
sub
dec
imull
shll
iret
and
lret
js
andb
aaa
mov
lods
pusha
and
sbb
pop
js
jge
cmc
scas
loope
pop
jns
add
xchg
xchg
imul
jbe
in
or
and
or
inc
dec
in
add
subb
outsb
clc
sub
add
aam
mov
or
jg
outsl
and
daa
popf
pop
push
xor
push
cmp
clc
pop
mov
cmp
das
icebp
fcmovnb
lcall
dec
iret
je
mov
jg
ret
movsl
and
inc
or
dec
cltd
gs
push
nop
and
jg
xor
icebp
pushl
lock
xorl
in
std
ret
repz
ljmp
imul
ficoms
loop
dec
cwtl
in
xor
nop
aaa
ljmp
sbb
cmc
pop
mov
stos
sub
xor
cwtl
inc
xorl
add
mov
mov
or
in
repnz
outsl
inc
xchg
mov
aad
mov
movsb
out
xchg
and
mov
push
fstps
jecxz
mov
add
jne
call
jl
cmp
mov
dec
movsb
pop
lret
fsubl
push
cld
push
popa
sbb
sbb
jbe
rorl
aad
push
ljmp
les
push
push
inc
mov
add
ljmp
cmpl
push
inc
js
ss
pop
ds
dec
into
pusha
and
fisttpl
pop
mov
test
xchg
ror
fdiv
scas
hlt
pop
add
or
and
outsl
nop
jg
push
or
cmc
mov
and
xchg
jp
into
mov
push
popa
jg
popa
mov
mov
sbb
xor
jp
fildll
sub
xor
push
clc
jb
add
and
jne
pop
mov
lock
mov
push
pop
pop
pusha
adc
jns
stc
addr16
fcoml
fcmovnb
lret
xor
sbb
test
cmovbe
mov
mov
pop
outsb
jge
insb
and
in
cltd
xchg
mov
cmp
insl
mov
fnsave
adc
fbstp
pop
cmc
decl
fstpl
xor
lahf
cmp
fistl
push
das
aas
push
leave
sub
pop
or
push
jp
xchg
insl
xor
cmpsl
add
mov
rorb
xor
sbb
dec
pop
jg
js
sub
jmp
xchg
lds
lea
dec
sti
iret
test
or
mov
adc
mov
test
sbb
stos
jae
cs
jo
pop
mov
movsl
fnsave
or
and
inc
test
xlat
sbb
sub
out
outsl
xchg
nop
nop
cmp
jb
and
mull
xor
mov
std
or
stc
daa
jl
outsb
mov
inc
mov
mov
lahf
outsb
loope
and
push
lock
cmp
inc
mov
mov
call
mov
jno
dec
movsl
jecxz
in
lret
pop
push
mov
xchg
dec
scas
inc
push
cmp
and
pusha
dec
cmpsb
push
addr16
adc
push
imul
aas
lock
test
push
inc
mov
es
scas
insb
xor
cmc
popf
mov
js
loope
mov
dec
flds
lock
test
test
roll
daa
or
xchg
stos
sub
fldt
mov
filds
dec
xchg
lret
addr16
shl
js
inc
cmp
scas
ljmp
stos
scas
call
sub
jp
add
cmp
or
jg
mov
dec
les
mov
in
rcl
setnp
cmp
les
push
popf
push
or
mov
mov
sub
mov
add
fbld
jno
lods
or
mov
mov
decl
decb
cmp
and
add
ret
test
mov
cmc
pop
testb
push
in
jmp
inc
mov
inc
push
pop
xchg
jbe
sub
pusha
and
arpl
push
lods
aad
mov
ficompl
xor
xchg
and
mov
sbb
mov
jmp
push
sbb
mov
jo
mov
sbb
xchg
fsubs
xor
adc
pushf
xor
mov
rolb
and
lods
or
mov
sarb
or
xchg
inc
adc
add
and
aaa
and
mov
jecxz
mov
and
add
mov
push
adc
out
fisubs
adc
xchg
lret
inc
sbb
fadds
sbb
xor
ljmp
mov
mov
or
ret
push
lret
cld
outsl
pop
aaa
or
sbb
sbb
cli
outsl
adc
ss
inc
rcrl
and
subb
daa
inc
adc
movsl
lahf
xor
sti
incl
iret
mov
adc
lds
mov
mov
les
dec
aad
sub
inc
dec
mov
add
nop
mov
cwtl
mov
xchg
je
jbe
xor
or
inc
mov
int
cld
es
xchg
fmull
fsubr
xor
pop
jmp
shl
sbb
mov
es
std
fnstsw
mov
mov
inc
stos
push
popf
push
lret
mov
adc
mov
cmpsb
gs
jbe
inc
cwtl
insl
orb
mov
push
lea
mov
shr
std
sub
sti
inc
or
addb
mov
ds
mov
mov
mov
ret
pop
or
popf
jg
dec
pop
mov
cmp
lret
jnp
mov
inc
aad
sbb
jp
push
pop
sbb
enter
inc
fists
and
mov
cmc
mov
int3
or
jge
shl
das
fdiv
mov
xchg
popa
popa
cltd
xor
leave
pop
out
push
incl
popf
cmc
pushl
mov
or
andb
lds
les
test
sbb
addr16
push
jg
pop
xor
and
aad
sbb
mov
jg
pop
dec
sarb
mov
jno
push
cmp
mov
sbb
movsl
out
jo
add
mov
clc
lods
ret
xlat
inc
notl
sub
and
in
push
aam
test
popf
out
fs
adc
scas
and
out
arpl
out
fdivr
ret
pop
adc
in
lods
xchg
add
repz
sub
lcall
sub
test
cmp
dec
xor
xor
pop
and
lcall
sahf
popf
cmp
fiaddl
in
mov
lea
mov
add
cmp
shll
lods
lcall
sub
jmp
nop
rcll
xchg
or
les
cmpsl
fwait
adcb
sbb
xchg
xor
imul
xchg
push
xor
sub
out
movsl
cmp
xchg
and
shr
test
push
popa
mulb
add
ret
in
shrb
and
push
call
push
mov
push
lods
outsb
sub
decl
cmp
gs
test
hlt
call
xor
mov
sub
movsl
mov
dec
int3
mov
imul
inc
cli
sub
xor
pop
add
int
in
jg
call
xchg
inc
shlb
icebp
ret
mov
stos
out
and
mov
outsl
xchg
add
or
in
push
xlat
mov
push
pop
sbbl
arpl
es
pop
pusha
and
repz
xorb
aad
fcompl
fs
lods
sub
pop
sahf
subl
xchg
fsubrp
bound
sub
mov
cli
pop
inc
jo
cld
and
cmpxchg
inc
cmp
dec
add
pop
mov
clc
inc
filds
cmc
bound
push
and
in
idiv
lcall
leave
ljmp
jmp
sub
loope
push
fisubrs
es
jg
lahf
es
adc
add
das
std
movsl
lret
cmp
enter
and
mov
push
adc
daa
jmp
push
pop
call
pop
inc
or
imul
cltd
pop
mov
lods
outsb
iret
mov
jge
insl
stc
mov
jo
xor
dec
daa
inc
cmc
movsl
outsl
loop
sbb
inc
cld
mov
inc
jbe
mov
inc
aaa
lret
push
inc
push
jp
push
push
pushf
cmc
push
pop
add
cmp
dec
mov
adc
cmp
rorb
mov
xchg
clc
or
std
fdivr
inc
push
lods
add
jecxz
push
loope
jbe
sub
sub
jle
aaa
dec
pop
push
sbb
fisttpl
mov
dec
add
lods
lret
sub
daa
push
int
jmp
jns
pop
adcb
mov
js
sbb
fadds
cltd
and
mov
jle
add
mov
add
ljmp
and
pushf
rorb
dec
fwait
gs
es
loopne
xchg
icebp
mov
dec
mov
lds
testl
fisubrs
pop
mov
lds
imul
mov
js
xor
mov
add
inc
fisttps
or
repnz
repz
or
ror
int3
mulb
mov
dec
pop
dec
inc
push
pop
int3
sbb
rcr
mov
cmpb
adc
and
in
incl
inc
pop
sbb
adc
push
cltd
jecxz
nop
inc
lcall
test
fucomip
mov
ret
jo
shl
pushl
sar
std
call
stos
iret
cmp
dec
mov
mov
loop
xchg
sarl
sbb
push
mov
outsl
sbb
jle
inc
mov
jle
cmp
push
jp
mov
fcoml
pop
int
mov
xor
call
mov
dec
lahf
dec
pop
sar
addr16
mov
jg
cwtl
cmp
xchg
leave
je
push
mov
push
sbb
insl
ret
dec
dec
arpl
aaa
stos
loop
inc
aaa
jns
sbb
incl
aas
xor
movsb
inc
xor
add
add
mov
jne
shll
jge
rolb
mov
cmc
test
ss
faddl
lds
ficoml
cmp
adc
fstp
pop
ficompl
scas
std
dec
and
pop
es
decl
mov
lock
jns
xchg
cmp
aaa
loop
incl
lods
add
jmp
test
fs
mov
loopne
inc
adc
push
xor
xchg
sub
cmpsl
or
subl
cmpsb
sti
cwtl
mov
icebp
sbb
int3
fwait
or
jb
or
adc
ljmp
xchg
cli
in
lds
arpl
ret
push
and
xchg
icebp
xchg
call
push
mov
mov
sbb
iret
pop
push
pop
ljmp
insb
aad
and
fstpt
fbstp
fisttpl
cli
call
test
push
testb
or
dec
aaa
lahf
push
hlt
negl
pop
fimuls
aas
xor
std
test
xorl
sub
scas
add
xlat
jbe
cmp
sub
cltd
dec
or
mov
fs
pop
jp
cltd
xorb
cmp
in
mov
sbb
loope
gs
repnz
std
mov
dec
js
jecxz
ret
pop
popf
aam
and
sti
fwait
pop
vdivsd
negl
lret
mov
dec
sbb
aaa
fisubrl
push
sbb
ffree
mov
sbb
testb
add
and
cmp
js
sbb
xchg
jnp
jbe
repnz
stc
outsb
mov
dec
or
ret
int3
and
fistps
mov
add
dec
mov
movsl
incl
jnp
ret
ss
in
into
lods
dec
pop
mov
rorl
xor
jg
fiaddl
xor
adc
enter
cwtl
jecxz
stos
ss
ljmp
jmp
lods
jle
loopne
xor
sbbb
or
fdivrl
filds
clc
decl
or
mov
xor
xchg
adc
loop
jecxz
or
mov
das
jp
push
jbe
jmp
or
les
ret
and
jbe
adc
add
mov
mov
dec
cmc
testl
js
and
shr
bound
lret
add
out
shr
jb
cmp
ljmp
and
cwtl
push
adc
les
movsb
mov
inc
mov
jo
jo
cmp
sub
sbb
call
lcall
pop
mov
inc
fistl
xor
cmp
jmp
fdivl
lcall
jle
mov
mov
sti
xchg
scas
or
iret
dec
sub
xchg
add
adc
and
std
jmp
xor
inc
in
aad
inc
jns
insl
enter
ljmp
decl
xlat
pop
std
movsl
or
push
jl
into
pop
inc
mov
hlt
mov
cli
fwait
cmpsl
adc
aaa
pop
jo
js
es
lcall
pop
imull
inc
or
insb
pop
andl
mov
push
jge
pop
cli
incl
pop
bound
sbbb
decb
sub
call
les
lret
xor
and
push
xchg
aad
lcall
lcall
test
mov
cmp
pop
jb
and
mov
sub
xchg
push
mov
sub
or
dec
sbb
mov
notb
aas
inc
lea
cmp
mov
aam
push
pop
jne
cli
fnstcw
mov
xchg
mov
bound
push
jmp
dec
cmp
test
lret
and
stos
es
mov
or
cmp
inc
mov
ljmp
addr16
add
ljmp
inc
dec
or
rol
mov
js
push
dec
mov
js
jl
pusha
sahf
lods
and
sbb
decl
and
inc
fsubrs
mov
mov
loop
stc
outsl
outsl
sarb
call
fstpl
or
iret
xor
xchg
add
lock
aaa
mov
lods
and
mov
xor
cli
fnstsw
sub
repnz
div
dec
cltd
inc
sbb
jae
inc
icebp
nop
add
jnp
add
movsl
lcall
fimull
xchg
stos
movsb
decb
addr16
jge
and
in
lret
bound
std
jmp
sub
jg
dec
mulb
rorb
mov
cltd
sbb
xchg
push
bound
sar
es
cmp
mov
mov
sarl
addr16
dec
pop
dec
je
cltd
push
stos
lahf
ljmp
fildl
mull
cld
push
or
hlt
mov
fisttpll
pop
pop
aam
inc
decl
call
mov
xchg
mull
ds
pop
adc
inc
adc
dec
test
adc
jae
lds
scas
outsb
xchg
call
jb
jno
jg
pushf
ss
cld
fidivrl
cmp
int3
or
rorl
mov
adc
push
lods
cmpsl
movsb
sti
cmp
pop
jp
mov
cli
incl
push
push
mov
sahf
int3
pop
lret
aad
push
adc
outsl
cmpb
mov
lret
mov
xlat
sahf
or
jl
pop
jecxz
or
clc
ljmp
sub
fisubl
inc
lahf
hlt
leave
xor
fnsave
lods
fidivrl
pop
ljmp
test
fwait
push
xor
movsb
out
lahf
lcall
inc
mov
push
adc
jb
in
jb
push
or
sbb
push
pop
sub
push
fisttps
cli
sbb
fldenv
xchg
pop
in
xchg
cli
jl
jg
sbbl
mov
addl
lcall
fwait
arpl
addr16
mov
pusha
pandn
mov
jge
scas
sbb
jl
int3
shrb
cld
decl
jb
mov
adc
enter
daa
cwtl
loopne
dec
scas
out
xchg
gs
jl
jb
inc
pop
insl
mov
xchg
xor
clc
push
call
test
pop
mov
test
mov
cmp
cmp
fs
push
and
xor
mov
rcrl
lds
les
test
xchg
int
lock
sub
ljmp
dec
mov
inc
dec
mov
mov
imul
dec
xchg
idiv
inc
dec
xor
xor
sarl
adc
fnstsw
dec
test
orl
imul
jp
jo
cmp
ret
cld
add
fisubl
inc
jle
push
mov
movsb
pushl
add
and
mov
or
hlt
jecxz
insb
xchg
push
incl
dec
outsb
xor
in
ret
xchg
jo
aad
mov
lcall
mov
aas
sub
aam
push
pop
hlt
sbb
orb
and
das
pop
mov
stos
pop
mov
data16
push
fistl
pop
insb
repnz
jae
sbb
loop
incl
or
xor
in
mov
add
and
lcall
pop
cmp
out
xor
adc
cltd
aas
or
inc
mov
xchg
mov
in
xchg
inc
cltd
shlb
sub
repz
out
pushl
mov
push
pop
scas
outsl
xchg
scas
fsubrs
jne
push
repz
xlat
jp
add
std
jg
sahf
pop
sbb
xor
mov
in
ds
call
std
cltd
pop
pop
imul
incl
sub
mov
mov
jmp
cli
or
or
push
fwait
adc
sbb
adc
fisubrs
aam
cli
mov
add
ja
jb
mov
inc
mov
mov
dec
mov
aam
adcb
sahf
jl
sub
mov
sbb
test
hlt
call
clc
mov
out
lret
hlt
ds
or
mov
mov
xor
cli
daa
dec
xchg
pusha
adcl
in
ficoms
pop
push
push
mov
or
xchg
xchg
shrl
fiaddl
inc
sahf
adc
lret
ljmp
mov
and
into
mov
scas
pop
inc
int3
data16
jg
out
mov
popa
cmpl
jge
rep
jbe
decl
sbb
pop
add
xchg
xor
sub
push
push
lods
sarb
repnz
decl
and
fwait
ss
add
sub
ljmp
push
out
dec
int3
lock
sti
xchg
std
inc
dec
pop
cld
ljmp
in
push
sbbb
pop
xor
mov
ljmp
xlat
les
sub
mov
inc
pop
mov
fisubrl
sub
xchg
into
inc
ret
inc
or
jmp
pop
pop
mov
sbb
push
sub
sbb
aaa
daa
scas
out
call
test
icebp
push
into
xchg
and
mov
stc
fwait
jns
xor
mov
js
decb
sbb
dec
nop
fs
sarb
sar
call
push
mov
jl
les
add
xchg
leave
cmp
loope
pop
pop
ret
into
lahf
push
es
call
in
cmp
or
dec
add
pop
mov
into
ret
loop
adc
incl
mov
pop
mov
lahf
pop
inc
jg
cs
jecxz
xchg
add
icebp
adc
jns
in
jnp
sub
sub
aad
inc
ss
mov
ret
inc
sbb
jmp
leave
sub
push
jmp
pushf
cli
aad
js
dec
push
ss
jp
xor
int
mov
jg
xchg
sarb
push
fwait
data16
jns
out
jg
or
sub
icebp
outsl
mov
xchg
jmp
test
loope
pushl
iret
fcom
filds
rcl
stc
dec
pop
fwait
es
cmpsb
call
jp
xor
jnp
int
sti
jecxz
jmp
cmpsl
jb
imul
fucomip
movsl
lods
or
ret
clc
cmp
incl
fmuls
nop
cs
inc
loop
inc
data16
inc
fs
jmp
or
xchg
mov
add
lcall
shlb
and
jecxz
lods
lcall
test
call
iret
and
push
inc
cmpsb
cmp
add
mov
aam
je
incl
fwait
sub
push
sub
push
lods
cli
int3
sarb
shl
rorb
sbb
jle
sti
jmp
lods
rcr
xchg
xchg
bound
mov
lret
fistps
push
inc
movl
leave
cld
mov
pop
mov
out
lret
mov
inc
mov
mov
cmp
inc
out
cs
dec
or
aam
and
mov
mov
cltd
add
repnz
shrb
icebp
ja
addr16
mov
pop
clc
decl
or
sbb
mov
add
lcall
pushf
iret
pop
popa
mov
xor
cmp
dec
loope
push
fcoml
call
popa
mov
in
sbb
push
xor
clc
or
push
test
incl
cmp
pushf
lods
or
xchg
mov
jle
xchg
lds
fdiv
std
push
push
orl
mov
push
cmpsb
cltd
xchg
xlat
addl
push
ja
pop
cwtl
jl
sar
xchg
mov
jg
cmp
and
inc
jmp
adc
ss
rcl
cs
lea
subb
cld
dec
dec
push
fs
lock
mov
add
dec
insb
lahf
test
idiv
loope
xchg
out
aad
xlat
int
sub
xchg
ljmp
std
mov
ret
loop
lock
out
lcall
jbe
add
shll
ljmp
in
pop
call
lcall
xor
mov
or
adcl
jne
in
cmp
push
inc
dec
pop
push
dec
dec
dec
loopne
clc
stc
mov
mov
sahf
adc
cmp
pushf
movsl
test
sarl
cltd
out
mov
faddp
icebp
pop
jmp
loope
dec
and
addr16
lcall
jg
inc
test
adc
lret
jae
or
cmp
popa
jmp
and
ret
push
icebp
in
pop
cmp
inc
pushl
add
mov
mov
fnstenv
ds
dec
push
inc
jno
call
cli
ret
or
mov
cmpsl
dec
cli
and
movsl
lods
ljmp
inc
mov
divb
test
jmp
aaa
jmp
xor
dec
push
outsl
adc
jge
push
mov
jp
fisttps
mov
imul
stc
inc
int3
xor
imul
loopne
sahf
cmp
icebp
gs
pushl
popa
jne
xor
aad
stos
jne
mov
aaa
sbb
insb
jnp
lods
sub
call
push
fsubs
sub
jne
enter
sbb
in
cmp
inc
mov
push
divb
incl
sub
mov
arpl
test
mov
in
dec
daa
push
xchg
sbb
ds
shl
test
std
inc
xchg
shlb
cmpsb
std
cmc
sbb
call
int
sub
inc
lds
inc
fcomps
sti
xchg
mov
or
lcall
mov
jmp
sub
bound
push
jl
lahf
jp
xor
add
lcall
adc
or
push
cmp
add
mov
mov
dec
pop
rcl
or
aam
inc
inc
std
repz
push
inc
testb
inc
sub
lock
cmp
popa
mov
xchg
sub
sub
mov
xor
jmp
icebp
ljmp
scas
jns
popf
sub
test
out
inc
insl
fs
clc
mov
lea
xchg
or
jg
lret
push
mov
das
lock
mov
mov
aad
fucomip
ljmp
sbb
adc
xor
pop
mov
jecxz
ret
nop
jp
pop
pop
pop
push
bound
cmpsb
mov
decl
and
cmc
jne
lahf
test
inc
lcall
push
pop
mov
pop
test
pop
ss
inc
bswap
std
jmp
dec
sbb
pusha
lock
xor
inc
mov
es
je
cld
pop
movsl
ljmp
mov
cmpsb
ljmp
push
mov
cmp
cmpb
mov
call
sbb
aam
mov
pop
cmp
xor
push
xchg
pop
fisttpl
cmp
push
dec
loope
popf
push
xor
push
rol
dec
inc
jo
xchg
stc
jae
loopne
gs
add
sub
test
jmp
jmp
loop
dec
add
xchg
adc
cmpsl
fdivrs
outsl
and
sti
pop
cli
jmp
cmp
in
mov
adc
in
stc
and
call
mov
jmp
testl
jge
jbe
lock
stos
ljmp
mov
pop
inc
xlat
mov
cs
add
idiv
jecxz
daa
mov
jecxz
hlt
call
adcb
dec
adc
arpl
insb
fnstenv
je
jg
ret
popf
fxam
loop
enter
push
call
outsl
aam
insl
shlb
cmp
aam
iret
idiv
sbb
lock
mov
outsl
push
ret
repnz
cmp
lcall
xor
insl
das
aaa
jmp
std
std
int3
sbb
xchg
cli
adc
ret
js
mov
jge
xor
std
incl
cmp
xor
pusha
xchg
pop
push
and
ljmp
decl
ja
sub
push
mov
out
mov
inc
jne
incl
jle
in
in
inc
imul
enter
jns
and
pushl
sub
xor
push
push
shrl
sbb
xchg
mov
and
sub
stos
inc
jmp
xchg
cmp
pop
fldt
addr16
cmp
scas
ds
xchg
push
mov
mov
or
push
icebp
push
push
jno
outsl
and
or
and
inc
and
jnp
inc
clc
in
mov
and
fucomp
daa
push
add
push
jg
jmp
fdivr
jmp
outsl
jecxz
add
ss
jl
rclb
jge
mov
fiaddl
incl
pop
aam
push
jle
outsl
fdiv
popa
xchg
pop
xchg
lret
jnp
xor
cmpsl
popf
sub
mov
add
push
and
and
repnz
in
add
push
fisubrs
pop
jmp
mov
lods
inc
lds
iret
test
add
mov
in
mov
incl
mov
jbe
jge
push
hlt
ja
jns
push
fidivrs
dec
or
pop
pop
inc
or
cmp
bnd
stos
xchg
cmc
cltd
ljmp
sbb
pop
ficoms
daa
and
js
movsl
cmc
js
divl
stos
push
ds
pushl
mov
popf
mov
loope
mov
repz
das
jmp
lcall
xor
inc
sarb
or
push
push
sub
cld
pop
loop
dec
jge
sti
repnz
and
outsl
std
incl
aam
add
test
and
xor
inc
mov
push
or
ret
xchg
call
out
jno
sbbb
lret
xchg
add
dec
xor
iret
dec
out
mov
xlat
js
lods
pushl
clc
fldt
mov
fisttps
add
and
mov
dec
inc
cmp
jge
daa
aaa
jl
out
dec
dec
xor
push
loope
jmp
loop
ficompl
popf
jae
clc
incl
or
mov
stos
out
mov
fldl
call
cmp
fdivp
mov
fldlg2
sbb
and
das
jg
decl
or
mov
xorb
jmp
shlb
aaa
clc
dec
ja
jb
mov
sub
out
dec
and
scas
fsubrp
faddp
icebp
inc
pushl
testb
cmp
idivl
sbb
in
andl
pushl
xchg
push
inc
nop
loop
in
ds
push
pop
pop
pop
loopne
shlb
cmc
add
jmp
and
inc
push
cmp
dec
mov
in
incl
add
lahf
outsb
addl
adc
mov
jmp
jmp
push
out
dec
icebp
cmc
cmpb
push
cmp
pop
jle
cmp
gs
sar
decl
addb
xor
aaa
sub
and
popf
out
mov
daa
in
ret
cli
pushl
inc
outsb
cmpsl
mov
scas
mov
test
insb
out
cmp
rorb
scas
std
movsl
cmp
lcall
push
sahf
ds
out
adc
pop
mov
push
ds
cmp
imulb
sub
incb
mov
fcom
cmc
in
push
add
lahf
mov
fcompl
clc
jo
in
mov
sbb
sbb
clc
lahf
jne
aam
mov
or
ret
mov
js
push
call
lods
inc
push
jae
xchg
pop
decl
aas
out
stc
push
sbb
or
cmp
mov
jbe
incl
adc
hlt
xchg
sti
jmp
xchg
xchg
inc
adcl
jg
dec
frstor
fstps
jb
jp
nop
jmp
sub
addl
pop
call
jns
repz
es
filds
mov
stos
or
pushf
out
lds
cli
or
mov
fmull
imul
add
pop
lock
and
cmp
xor
aaa
rcrb
pop
adc
lret
loopne
sub
push
lock
inc
and
movsb
mov
pop
jge
movq
lock
push
push
inc
cld
pop
xor
ljmp
sbb
test
cmp
shrl
je
popf
or
cltd
lret
jmp
jmp
pop
es
bnd
and
cltd
push
xor
rolb
mov
jmp
mov
adc
inc
mov
add
outsl
jmp
cltd
shlb
call
sub
mov
out
adc
xchg
mov
mov
mov
cmp
cltd
lods
aaa
jp
call
rcll
ss
push
rcll
cld
fistpl
mov
sub
imulb
out
std
shll
cmp
shl
out
adc
insl
inc
movswl
aad
iret
mov
jg
xor
neg
lret
dec
pop
stos
in
mov
or
sbb
dec
call
mov
dec
sahf
fimull
mov
jmp
lret
pusha
pushl
push
dec
push
inc
sbb
jmp
int3
out
dec
fistpl
loopne
ror
mov
cmp
incl
loopne
aad
xchg
pop
repnz
shll
xor
incl
push
movsb
out
push
aaa
arpl
adc
arpl
psadbw
jns
or
mov
and
movsb
cld
inc
cmp
rol
fdivl
in
fsub
incl
adc
sarl
test
pushl
stos
aad
cmp
scas
in
in
add
fsubs
and
bt
jle
inc
sahf
loop
jo
xor
adc
shrb
mov
repz
call
enter
aad
ss
fsubrl
nop
inc
and
mov
cs
jg
outsl
stos
mov
push
jne
pop
aad
cmp
ljmp
call
dec
test
pop
rol
sbbb
mov
mov
and
pushl
pop
mov
mov
sahf
sahf
sbb
and
icebp
mov
scas
adc
std
pushl
nop
js
addr16
orl
adc
lods
andb
pop
loopne
movb
addl
inc
push
fildll
cli
xchg
cli
mov
int
out
lods
cmc
pop
scas
fnsave
push
incl
daa
mov
sbb
xor
arpl
mov
adc
xor
pushf
in
xchg
add
mov
imul
rcr
loopne
mov
addl
inc
mov
sub
xor
lcall
fisubrs
adc
lret
loopne
mov
pushl
inc
popf
cmp
xchg
arpl
mov
xor
mov
mov
loop
lcall
out
xchg
es
mov
das
sub
dec
inc
mov
pushl
cmp
xlat
cmp
xchg
je
out
clc
add
decl
sub
mov
cs
dec
enter
fsts
push
cmp
lcall
lahf
loopne
mov
mov
aam
fiadds
add
js
sbb
lcall
pop
mov
lods
xlat
cmp
cpuid
aad
push
cli
test
ja
xchg
loop
add
loop
decl
jmp
jae
jne
jnp
repz
dec
fidivrs
ljmp
xlat
adc
shrl
clc
pop
jle
jp
mov
scas
xchg
es
ficomps
loopne
rcrl
call
fsubs
cmc
imul
adc
fimull
bound
call
sbb
jmp
mull
mov
and
mov
add
push
xchg
jnp
stos
sahf
jle
inc
mov
das
clc
inc
jmp
xor
dec
hlt
xor
add
push
les
je
cmpl
ss
inc
les
decl
rcrb
cltd
scas
adc
shll
or
jge
mov
push
test
call
fwait
movsb
test
mov
sub
mov
jg
outsb
mov
fptan
out
mov
std
ret
movsb
rcll
adc
call
sbb
shrb
sub
lock
decl
push
inc
pop
sbb
mov
jae
or
xchg
das
inc
lock
outsb
loopne
aam
inc
outsl
cmc
inc
call
push
and
sbb
shlb
jmp
mov
dec
les
push
xchg
lds
stc
dec
push
pop
lret
add
add
daa
pop
and
push
cmc
incl
lret
push
and
cmpsb
mov
or
or
out
mov
mov
push
outsb
lods
sarb
icebp
push
fstpt
sub
stos
sub
jge
sbb
push
jo
dec
jle
sbb
fisttpl
repnz
stc
mov
pushf
mov
es
fstps
xchg
rcll
ljmp
sti
mov
ss
call
dec
dec
dec
and
arpl
and
decl
or
mov
jecxz
psrlw
mov
push
adc
icebp
loopne
test
or
xchg
xchg
int3
mov
xor
test
lock
push
sti
fsubr
ljmp
xchg
xor
stos
mov
xlat
jge
fisubrs
mov
pop
xor
mov
xlat
call
dec
dec
sbb
xchg
pop
inc
pop
push
imul
nop
mov
jb
mov
sbb
cmc
mov
cwtl
leave
jne
add
dec
jp
lahf
cmp
mov
cli
adc
into
lahf
sub
and
adc
jns
push
push
add
sbb
inc
lods
cmp
out
out
mov
out
enter
jp
adc
xor
stos
mov
je
jg
adc
push
cmp
cmpsl
jno
fwait
data16
mov
insl
int
inc
fstpt
iret
xchg
adc
addl
pushl
cli
cmp
jbe
lods
inc
jmp
movsl
hlt
fsub
nop
mov
mov
jg
call
push
mov
aaa
cmp
ret
shll
mov
clc
mov
jg
incl
jle
mov
fwait
cmpb
in
dec
jecxz
mov
mov
loopne
adc
insb
jb
pop
pop
xor
pop
pop
cmpsl
and
fwait
aas
pop
mov
mov
std
add
hlt
adc
std
subb
add
bound
dec
pushf
cmp
cli
cli
inc
insb
in
sar
in
cmp
ljmp
xchg
xchg
pop
ljmp
mov
mov
leave
xchg
stos
or
js
mov
pop
or
stos
or
xchg
xor
fcoms
icebp
call
inc
decl
imul
and
mov
shll
xor
das
fldcw
int
pop
shlb
xchg
fcom
in
call
mov
xchg
lods
in
cwtl
mov
out
out
aas
daa
daa
and
cmp
dec
repz
incl
repnz
addl
ret
ficompl
loop
cltd
add
idiv
mov
xor
jmp
inc
roll
sbb
push
push
add
scas
jbe
into
inc
fistpll
or
mov
ret
shl
mov
loope
add
mov
addl
pusha
cmc
jns
sbb
cwtl
aam
jnp
jmp
push
dec
dec
movsb
jp
add
daa
mov
inc
int
sbb
xchg
sub
mov
pop
std
push
sub
sbb
in
xor
in
jbe
pusha
ret
push
jg
push
sub
mov
cmp
jle
dec
push
pop
add
fsubrs
flds
lcall
sub
push
cmc
fsubrs
mov
sti
xchg
push
scas
mov
jg
fisubl
mov
movsl
mov
divb
xchg
js
call
stos
int3
push
in
lret
out
fnstcw
test
jmp
les
sbb
dec
cli
cmp
xchg
mov
add
aad
decl
adc
fidivrl
ret
jg
test
call
sub
in
mov
xor
add
mov
aas
jle
mov
or
pop
ljmp
jg
movsb
push
mov
nop
maskmovq
dec
popa
xor
into
rolb
sbb
or
mov
mov
in
cld
insb
or
out
pushf
add
repnz
ljmp
dec
inc
push
outsb
lea
rolb
jp
xor
cmp
loopne
fdivrp
add
call
out
sbb
iret
mov
dec
mov
pop
push
add
ljmp
mov
inc
jbe
push
adc
hlt
lcall
rolb
add
jae
cwtl
and
inc
jg
scas
cmc
movsl
sub
dec
out
fucomip
incl
aam
lods
adc
sbb
fdivrl
hlt
pushl
xor
test
push
jne
pcmpeqw
ljmp
repz
add
jo
shrb
push
xchg
xchg
sbb
mov
pop
mov
xchg
pop
in
dec
and
sbb
dec
divb
xchg
fisttpl
incl
divb
or
repz
mov
add
sub
loop
stos
mov
jle
vpsubq
mov
mov
arpl
into
imul
sbb
int3
mov
ljmp
adc
xor
cmpsb
dec
cli
out
subl
js
mov
mov
mov
pusha
adc
pushl
jne
xchg
sbbb
stc
hlt
adc
insb
xchg
jg
jb
mov
or
jle
push
fstl
imul
sbb
ljmp
dec
pop
jg
in
pop
jmp
movsl
cmp
xlat
jnp
data16
ret
loop
sub
mov
pushl
xchg
outsl
dec
jnp
in
push
aam
jle
jns
mov
inc
les
fwait
and
mov
mov
test
add
cmp
pop
cmp
js
shlb
jp
jmp
lahf
lods
outsb
sbb
push
or
push
jb
imul
cmp
orb
jmp
sti
sub
in
inc
movsb
push
push
insl
test
int
add
mov
loope
in
iret
dec
decl
call
fisubs
and
arpl
mov
repnz
push
aam
std
fsubs
lods
shll
lahf
cmp
cmp
roll
mov
into
add
inc
xchg
mov
mov
mov
imul
filds
or
mov
sbb
daa
je
clc
pop
mov
add
std
call
mov
in
dec
lods
xchg
shrl
adcb
gs
mov
outsl
adc
push
dec
pop
pusha
dec
mov
fxch
in
jae
dec
testl
incl
lods
and
adc
sbb
or
call
pop
inc
cmp
lds
inc
aam
std
cmp
jp
mov
push
mov
or
inc
addr16
mov
pop
pause
orb
sub
lcall
jmp
movsb
mov
or
subb
std
outsb
push
movq
xchg
clc
jmp
mov
and
pop
xchg
insb
push
mov
sbb
and
loop
loop
dec
push
xchg
push
push
pop
add
cmp
test
push
dec
mov
jmp
add
imul
loope
insl
sub
sbb
dec
inc
inc
push
leave
incl
movsl
cld
pop
insl
cmc
nop
pushf
or
dec
cmp
cmpsb
mov
mov
int
incl
lods
sti
mov
sub
les
dec
mov
into
insb
adc
test
das
jo
into
jl
mov
jecxz
ljmp
sbb
movsl
cld
xchg
mov
stc
mov
aad
mov
decl
sbb
cmp
test
rolb
movsl
sub
and
dec
mov
mov
jmp
dec
shlb
psubsb
test
stos
or
add
nop
lods
insb
sbb
mov
ljmp
sbb
xchg
mov
mov
push
xchg
add
mov
in
jl
or
sbb
into
lret
or
inc
sub
std
inc
decl
pop
mov
aam
pop
out
inc
decb
movsl
test
add
pop
push
out
shrb
cltd
xchg
sub
mov
das
std
insb
ja
dec
xchg
lods
rcll
and
shl
stc
out
mov
cwtl
nop
lods
cmpsl
mov
mov
js
fs
enter
mov
push
or
out
xor
dec
test
aaa
cli
sbb
je
push
mov
jle
data16
pop
jno
pushl
into
pop
mov
sub
xor
popf
in
dec
repnz
pop
lahf
mov
movsl
mov
lcall
dec
cmp
imul
pop
push
and
scas
jb
test
mov
and
ret
ljmp
jo
pushf
fwait
arpl
cmpsb
add
rclb
inc
inc
mov
add
data16
ljmp
jecxz
rolb
test
xchg
ds
add
add
sbbb
jg
dec
in
fisubl
aad
testl
stos
out
shlb
lds
sbb
ljmp
mov
mov
pusha
adc
jbe
pop
xor
push
aam
iret
rorl
cld
incl
mov
fwait
sub
icebp
in
mov
mov
pop
xchg
mov
pop
sbb
fs
ljmp
xchg
xor
adc
stos
clc
in
inc
fidivs
jo
add
sub
lcall
lret
js
and
sbb
vpmacsww
pop
call
xor
jl
inc
dec
jg
divb
adc
pop
mov
cld
inc
inc
jg
sti
data16
mov
ret
mov
xorb
jl
xchg
test
sarl
xor
jge
and
pushl
xor
and
out
or
jnp
call
daa
les
mov
pop
lods
add
adc
call
aaa
add
xchg
lret
fdivrl
cmp
cltd
pop
inc
repz
mov
add
or
mov
xor
decl
mov
adc
push
pop
sbb
ds
cmp
pop
decl
push
out
pop
add
andb
cmp
arpl
imul
mov
stos
mov
push
mov
lcall
inc
and
xchg
add
jecxz
jl
mov
lcall
mov
mov
test
push
push
mov
decl
std
jmp
mov
mov
cmp
nop
cs
popa
aam
in
loop
lcall
lods
insb
ret
add
ds
mov
aad
cmp
adc
xchg
sbb
decl
and
and
scas
push
sub
push
or
stos
cmpsl
push
xor
iret
ds
inc
aas
mov
mov
adc
cli
stos
jmp
xchg
rol
jge
lea
lods
or
mov
std
push
mov
rcll
jecxz
mov
add
lcall
fcomps
mov
sub
loopne
clc
in
insl
shl
push
aaa
pop
mov
adc
imul
or
jne
ret
jmp
roll
and
mov
pop
pop
loop
and
int
add
dec
in
shlb
inc
leave
outsb
pop
addr16
jmp
les
pop
fsin
jbe
bound
pop
xor
mov
push
mov
inc
popa
cmp
stos
iret
jmp
add
std
call
imul
push
dec
int3
cmp
adc
lcall
cld
mov
xor
adc
test
ret
repnz
jmp
iret
clc
subl
js
lea
addb
adc
jne
fstpl
add
call
std
outsl
inc
cmc
or
lret
pop
jg
out
jbe
pop
and
sbb
cmp
pusha
mov
push
shlb
in
xchg
int3
xchg
add
sbb
pop
jb
test
outsl
test
and
sub
stos
insb
out
gs
lcall
std
adc
or
mov
lcall
addb
mov
lds
daa
mov
pop
cmc
fnstenv
mov
xchg
je
loop
out
idiv
sbb
jg
outsl
lock
mov
pop
push
fwait
sbb
hlt
lods
outsl
hlt
mov
aad
dec
adc
cmp
mov
icebp
or
aaa
sub
rcrb
mov
sbb
ret
test
mov
mov
aad
xchg
push
push
incl
mov
mov
xchg
leave
xchg
sarb
pushf
adc
aam
popa
inc
xchg
mov
sbb
out
scas
push
push
nop
mov
stc
movsb
add
cmc
lahf
mov
mov
cld
inc
add
or
and
xchg
pushl
mov
mov
imulb
pop
shll
push
mov
and
xor
push
jg
loopne
mov
arpl
xchg
jmp
add
loopne
xchg
imul
pusha
xchg
jg
xchg
mov
rolb
test
jge
imul
cld
test
xor
loope
cs
cmp
dec
out
pop
pop
std
ljmp
jae
bound
aaa
pop
int
and
mov
xchg
clc
cmp
push
jns
out
fsubl
loopne
das
xor
jl
mov
sbb
das
cld
ljmp
pop
inc
pop
clc
mov
lret
pop
negb
movsl
aam
lcall
cmp
xor
pop
popf
mov
jecxz
adc
mov
lcall
insb
push
jae
in
cs
daa
sub
jmp
and
mov
push
jae,pn
or
jmp
int3
ret
lods
inc
pop
add
pop
sub
cld
fsubrl
arpl
mov
sti
sarl
push
fs
adc
jg
insb
inc
into
xchg
adc
mov
pop
movsl
out
sub
mov
outsb
sti
add
cmp
arpl
fmul
idiv
movsl
pop
push
cld
fwait
push
ds
out
les
loope
out
sbb
ljmp
pop
mov
stc
jnp
lock
inc
insl
dec
adcl
lcall
and
mov
test
adc
xor
loopne
pop
repz
mov
mov
daa
loop
push
jne
push
push
scas
repz
lcall
shll
pop
pop
xchg
mov
jns
sbb
test
je
inc
push
sti
sti
xor
aaa
clc
jg
pop
pop
ficoml
xchg
jne
adc
pushl
jp
ljmp
and
lds
sbb
subl
das
aad
mov
mov
iret
mov
add
lcall
es
jo
pop
mull
ss
popa
inc
insl
dec
stos
jecxz
out
call
xor
jne
sbb
das
int
pop
repz
mov
pushl
pop
mov
xor
cmp
mov
inc
mov
jg
mov
dec
adc
pop
adc
pop
in
decl
mov
xor
add
pop
icebp
jge
icebp
jbe
inc
das
xor
sbb
jg
jmp
adc
stos
in
loopne
lcall
loop
xor
xchg
jmp
ret
inc
lods
lret
push
inc
scas
and
das
lods
in
iret
cmp
or
ljmp
out
mov
aad
out
pop
push
call
add
cmpsl
mov
incl
push
or
push
rcrb
fdivrp
incl
dec
mov
addr16
lahf
nop
divl
enter
dec
fucomip
jmp
andb
push
and
mov
lret
loop
sub
das
or
loope
incl
fbstp
mov
inc
popa
add
push
jg
pushl
inc
mov
push
sub
pop
or
jmp
pushl
or
mov
sub
bound
cmp
sub
lea
stos
mov
test
and
dec
mov
or
add
cmc
push
xchg
jge,pt
cmc
push
aad
pop
cmp
fidivrl
ljmp
call
xor
dec
subl
push
je
sbb
sub
push
ljmp
cmp
mov
lret
into
scas
jecxz
push
cmp
pop
nop
daa
or
push
mov
lods
add
xlat
in
ss
pop
insb
iret
test
incl
mov
fnstenv
mov
loop
dec
fs
lcall
add
push
stos
decl
std
push
cmc
inc
lret
fadds
xor
dec
push
enter
push
decl
flds
out
sbb
jns
in
adc
outsl
inc
push
jecxz
jns
lret
loop
lahf
mov
mov
movsl
adc
push
fidivl
out
mov
repz
jno
adc
loope
outsb
xor
lods
outsl
mov
mov
outsb
into
dec
fistl
pop
out
pop
ds
inc
cs
dec
loopne
incl
jle
adc
cld
mov
std
jg
mov
insb
inc
xchg
pop
das
cmovle
sub
mov
or
lahf
dec
leave
test
fistpll
sbb
es
push
nop
xor
insb
jg
jae
fstpl
lret
jae
jg
sbb
and
add
mull
notrack
movsb
xor
push
xchg
adc
cmc
fdivs
xor
jns
enter
lret
test
decl
lcall
xchg
lock
cltd
xchg
jns
ss
loope
icebp
xchg
stos
inc
add
loopne,pt
nop
xchg
mov
aad
push
andb
inc
mov
xchg
mov
pop
call
test
call
into
xchg
jp
movsb
mov
jb
sbb
adc
and
jo
pop
sahf
mov
jne
xchg
insl
push
mov
stos
fnstenv
aad
add
or
dec
pushl
clc
pop
je
inc
icebp
adc
es
pop
add
jne
dec
lcall
cmp
jne
call
or
push
jbe
ss
pushw
xchg
repz
ljmp
es
fstpl
cwtl
lcall
pop
xor
inc
addr16
je
cmpb
mov
add
jmp
push
add
rol
shll
jne
push
enter
pop
adc
int3
inc
rclb
sub
das
xchg
xchg
enter
mov
decl
mov
xchg
push
and
jns
shr
loope
aaa
mov
lcall
aas
jle
outsl
insb
dec
bound
outsl
fs
lret
insl
es
outsl
icebp
ljmp
test
pushf
push
xchg
sbb
pop
xor
enter
incl
push
jmp
loopne
and
das
popf
je
insb
mov
les
call
loope
mov
xor
scas
cmp
lret
daa
cld
mov
pop
xchg
data16
pop
adc
mov
or
xchg
sahf
add
inc
pushl
ss
pop
cltd
dec
xlat
jge
fcoms
xchg
sub
add
mov
test
or
mov
jle
call
ljmp
dec
lret
xchg
pushf
sbb
sbb
lret
iret
xor
cli
sti
arpl
std
sbb
cmpsb
jmp
xchg
or
jne
cld
in
scas
xor
mov
lock
in
dec
aas
pop
insb
fs
sbb
idivb
mov
cli
std
push
cmp
addr16
and
mov
dec
mov
mov
decl
pop
mov
mov
das
mov
movsl
mov
sti
js
push
decl
push
nop
push
jl
repnz
jno
lret
jbe
jmp
ret
jl
mov
push
ljmp
es
mov
sub
pop
scas
ret
data16
or
mov
mov
pop
cli
lcall
adc
sub
jg
bound
movsl
decl
and
lret
or
mov
ret
les
sub
cmc
das
mov
aam
cmp
xor
push
test
push
rcl
sbb
ljmp
in
jmp
xchg
popf
ret
pop
pop
ljmp
mov
add
pop
cli
mov
outsl
outsb
push
stc
mov
out
inc
rorl
and
lcall
call
stos
pop
sbb
ret
jg
jge
mov
pushf
lcall
mov
inc
je
jg
push
jae
and
dec
xchg
iret
mov
js
aas
int3
mov
or
call
std
cmp
sbb
push
scas
sub
or
xchg
loop
xchg
xchg
push
or
addb
jmp
cmc
pop
or
std
sub
xor
je
aaa
sbb
or
out
mov
call
add
test
dec
mov
lods
lds
mov
fcom
push
out
cmp
jmp
jo
and
popa
push
add
cld
fstl
ja
jb
inc
inc
test
ljmp
lods
mov
and
xor
aas
fldcw
fs
or
add
adc
mov
pop
adc
lcall
rclb
jl
lahf
mov
or
xchg
cmpb
jl
incl
push
cmp
hlt
test
inc
outsl
test
decl
sbb
inc
outsb
push
mov
pop
or
jns
icebp
incl
loopne
vpaddusw
xchg
pop
aad
lock
adc
hlt
adc
and
ljmp
push
adc
inc
jecxz
add
pop
push
xchg
xchg
arpl
pslld
js
mov
cmp
pop
inc
xchg
xorb
mov
cmp
mov
mov
fs
arpl
outsl
lock
inc
sbb
cmpsb
xor
xchg
jo
or
hlt
call
ja
push
out
or
out
cmc
testb
lods
imul
ljmp
jae
xor
lret
and
enter
or
scas
popa
daa
pop
mov
lock
jle
hlt
sbb
pop
inc
shrl
fcoml
leave
mov
cmp
pusha
add
clc
mov
cmc
incl
sub
repnz
mov
cmpxchg
or
xchg
stos
mov
cmp
jnp
mov
dec
sbb
lds
aad
xor
incb
aam
dec
repnz
jmp
dec
stc
sar
call
js
jno
jle
xor
cmpsl
notb
mov
push
leave
jb
sub
pop
fdivrp
adc
test
xchg
xchg
lret
xchg
pop
cmp
fwait
mov
ds
aam
decl
jnp
nop
mov
cmp
pop
mov
mov
push
dec
push
sub
dec
xor
dec
sbb
jns
mov
mov
or
xlat
and
loopne
lcall
addr16
icebp
inc
fisttpll
push
push
sub
pop
and
call
mov
ret
dec
add
jbe
dec
call
jmp
jne
in
out
mov
mov
repz
insl
lea
xchg
adc
lret
repz
test
sahf
xchg
lret
jmp
add
mov
hlt
add
mov
cli
add
leave
les
push
cli
int
addr16
mov
fsubl
aam
push
or
rorw
xchg
cmp
sbb
pop
clc
incl
in
cmp
fs
mov
jg
ja
cmp
xor
or
enter
jg
inc
in
sbb
sbb
add
sbb
aam
mov
adc
lock
out
rorb
outsl
scas
xchg
dec
clc
cmpsb
add
pushl
jmp
shl
push
dec
sub
test
cmpsl
mov
fucomip
movsl
pop
std
sbb
mov
in
adc
dec
inc
incl
xchg
fbstp
sarl
popf
sti
push
mov
stc
lret
and
incl
sarl
lock
xchg
mov
test
pop
insb
jb
clc
mov
pushf
sub
xor
xchg
mov
pop
xor
cmp
xchg
add
cmp
out
lods
xor
subl
xchg
mov
lcall
push
jecxz
inc
loop
out
xchg
mov
xor
adc
sbb
inc
xor
add
push
and
pop
push
lcall
pop
incl
aad
scas
adc
sbb
ror
jo
xchg
sbb
aaa
mov
shll
jbe
ljmp
in
gs
addl
cmp
cmp
inc
ficompl
sarb
stc
das
hlt
cmp
mov
sbb
push
jl
mov
mov
hlt
mov
idivl
inc
stos
insl
es
mov
sahf
push
int3
jbe
dec
or
scas
in
movsl
rorb
mov
decb
or
dec
sbb
push
iret
jne
out
mov
pop
inc
inc
mov
jae
inc
sub
fsubs
sub
inc
call
dec
xor
aas
cmp
loope
mov
xchg
mov
adc
mov
jns
out
popa
cwtl
adc
add
xchg
push
cmp
jg
decl
popf
adc
rcrb
and
adc
inc
xchg
ret
ds
mov
mov
call
pop
repnz
inc
mov
aas
jg
jmp
pop
push
loop
enter
adc
sub
ret
jg
addb
sub
mov
adcb
ljmp
inc
shll
mov
test
dec
jl
hlt
dec
jae
xor
out
fdivr
jg
push
movsl
adc
jecxz
xchg
and
adc
jns
repnz
pop
mov
cmc
aaa
cli
lcall
xchg
sub
sub
dec
ljmp
icebp
xchg
lea
pop
xor
addr16
xchg
cli
ljmp
sar
jmp
mov
lods
int
icebp
xchg
jecxz
cltd
int3
bound
out
fwait
mov
sub
ss
xchg
push
movsl
jg
daa
aad
repz
mov
cmpsl
popf
pop
sub
push
push
dec
push
jge
stc
incb
hlt
test
stc
xor
jo
add
cmp
pop
pop
pop
inc
out
outsl
push
jmp
or
push
and
pop
jg
decl
iret
add
ret
cltd
mov
adc
loope
xor
std
ljmp
inc
push
aas
pusha
sbb
dec
jmp
int3
int
or
stos
adc
add
xor
mov
das
push
roll
gs
jne
fimull
lock
mov
or
add
mov
add
inc
add
fildll
add
and
jbe
mov
scas
mov
imul
pop
inc
mov
popf
sub
pop
movsl
call
pop
mov
add
mov
ljmp
and
inc
mov
xor
lea
pop
loopne
cmpb
dec
push
cwtl
add
xor
mov
test
inc
test
das
test
in
mov
mov
fbld
or
out
bound
sbb
or
lcall
nop
jae
add
sbb
jbe
mov
imul
nop
cwtl
xchg
jbe
jbe
cwtl
or
test
decl
ljmp
das
mov
pop
cmp
add
mov
and
xchg
xor
pop
jne
repnz
lcall
add
push
or
in
adc
fcomip
jl
faddl
mov
inc
sbb
cwtl
fisubs
jg
dec
loop
or
pop
inc
push
ret
adc
fisubs
or
adc
jge
sub
dec
loop
push
sub
cmp
or
bound
dec
aam
scas
ljmp
cmp
std
idiv
sub
inc
pop
repnz
in
add
cmp
sub
fcmovnu
cmp
push
test
sbb
cmc
and
repz
push
sub
sbb
mov
add
cltd
jo
or
jp
add
xor
mov
ds
lret
xchg
lock
add
adc
out
clc
xor
fnstsw
fs
cmp
lea
ficoml
repz
aad
call
stos
sub
pusha
push
push
icebp
dec
adcb
pop
jno
lret
test
fmull
imul
mov
jge
push
adc
push
add
mov
daa
mov
xor
das
lock
outsb
xchg
push
subb
adc
rcrl
int
add
fdivrl
inc
mov
mov
subb
not
cs
push
push
mov
mov
cmpb
orl
cld
mov
inc
add
inc
ds
incl
jbe
add
push
rcrl
std
inc
mov
push
cld
add
jo
pop
and
mov
cwtl
in
jecxz
or
sub
mov
mov
mov
stc
int3
outsl
push
sub
movsl
inc
movsb
in
mov
scas
mov
aaa
and
shll
clc
fs
or
arpl
ss
push
push
jb
in
pushf
dec
flds
mov
stos
adc
or
std
decl
int3
pop
out
imul
add
sti
mov
outsb
mov
pop
add
es
outsl
das
fucomp
xchg
fwait
outsb
imul
mov
mov
mov
add
cmpsl
loope
inc
mov
dec
pop
into
mov
daa
inc
push
xchg
jae
sbb
pushf
mov
decl
or
push
jle
mov
sbb
cli
dec
in
add
mov
cwtl
sbb
jns
jbe
cs
fsubrl
jecxz
ljmp
decl
xchg
call
stc
dec
ds
jae
es
or
sbb
push
and
arpl
mov
mov
imul
movsl
mov
adc
push
rcrb
mov
mov
and
enter
and
movsb
sbb
cmpb
cmpsl
call
incl
inc
sub
xchg
adc
cmp
push
frstor
test
cmpsl
out
push
add
jo
sbb
adc
sbb
pop
mov
repz
xor
jmp
roll
xchg
push
popa
sarl
push
popa
imul
mov
xor
outsl
mov
dec
cmp
or
inc
and
int3
test
adc
imul
test
add
pop
push
js
mov
adc
adc
jne
hlt
lods
or
xchg
xlat
push
scas
addr16
not
pushf
das
loopne
imul
jg
mov
add
jmp
adc
xor
or
sbb
dec
orl
iret
push
fcomps
sbb
cmp
push
sbb
and
mov
movsl
outsl
das
inc
and
mov
sub
stos
lock
mov
add
cli
dec
inc
in
aaa
outsb
cld
mov
cmpsl
add
cmp
inc
or
dec
push
add
mov
ss
lods
outsl
and
loop
push
sub
push
jmp
imul
push
ljmp
inc
jnp
out
mov
cmp
xor
push
and
cli
stos
jmp
push
adc
mov
clc
push
enter
xchg
mov
stos
lods
adc
mov
or
mov
or
pop
add
inc
inc
ss
xchg
mov
add
sub
add
cmpsl
test
jle
or
sbbb
or
mov
inc
stc
pop
ret
inc
add
sub
ja
cltd
bound
ret
sarb
arpl
xchg
push
inc
jl
rorb
inc
inc
or
daa
mov
jg
test
dec
add
std
les
sbb
cld
mov
sub
int3
cltd
xor
sbb
lea
add
andl
sti
mov
mov
fidivs
xchg
mov
dec
push
pop
out
mov
mov
pop
mov
mov
fbld
mov
out
sub
outsl
std
aaa
push
adc
add
or
sbb
add
push
cmp
xchg
cli
fsubs
mov
sar
rcll
push
xor
ror
stos
cmpsb
js
mov
push
or
or
dec
scas
jno
popa
add
decl
out
repnz
jecxz
add
jge
sti
jbe
and
inc
sub
imulb
das
inc
maxps
les
sbb
push
aad
fisttpl
dec
imul
jecxz
outsl
xchg
jb
ret
repnz
cmp
repz
mov
les
das
push
mov
fstpt
test
sub
jns,pn
lods
loopne
adc
lock
push
or
test
pop
xchg
xchg
sub
sbb
mov
or
jge
ja
inc
loope
mov
inc
mov
xor
cmp
lods
outsb
xchg
fildl
cld
clc
mov
jne
loop
dec
aad
aas
adc
cmp
loopne
test
adcb
imul
je
jecxz
sti
test
scas
or
enter
and
mov
sub
or
pop
sub
xchg
adc
aas
sti
aas
pop
pop
fidivrl
dec
xchg
push
in
prefetch
inc
imul
mov
or
aaa
jns
and
scas
lahf
adc
insl
aas
pop
adc
int3
test
cmp
insb
xor
test
and
push
inc
mov
pushl
sbb
pop
sbb
xchg
mov
dec
push
inc
mov
mov
jp
out
or
pusha
push
pushw
mov
outsl
popf
sbb
dec
add
mov
jbe
aad
push
or
xor
aaa
push
jge
dec
ss
mov
std
ja
push
ja
add
adc
xchg
fdivrl
ret
push
adc
lcall
loope
mov
lock
sub
mov
adc
shll
enter
jle
ds
repnz
out
add
test
mov
leave
sub
shr
test
sub
pop
adc
pop
cli
loopne
in
mov
jbe
cmp
ret
push
pushf
mov
clc
ret
ret
cmp
shll
test
sub
inc
movsl
addr16
adc
test
add
scas
sub
push
xchg
lea
lods
iret
mov
xchg
and
inc
aad
inc
fcmovnb
mov
cmpb
repz
inc
xchg
jbe
cli
pop
pop
cli
or
out
cmp
or
cmpsb
loope
cli
aaa
mov
or
outsb
push
js
xor
cmp
push
sub
push
push
gs
push
pop
js
sahf
sbb
xlat
mov
push
add
pop
test
outsl
aaa
pop
push
lods
dec
mov
cmp
mov
xor
jl,pn
xchg
jmp
mov
push
mov
imul
test
jg
sbb
mov
stos
mov
push
insl
mov
push
jmp
sti
jo
outsl
mov
sbb
push
sbb
mov
dec
cmp
loope
iret
pop
out
je
sahf
dec
mov
dec
sub
pop
shrb
ljmp
pop
clc
mulb
cltd
dec
pop
add
loop
addr16
mov
inc
aam
and
sahf
jecxz
pop
in
das
adc
cmp
std
fnstenv
aas
mov
mov
ja
rclb
xchg
xor
int3
add
adc
sub
data16
xchg
insb
shrb
fbld
push
mov
imul
cmp
or
push
shr
loop
push
jnp
std
dec
movsl
aaa
jmp
int
add
stos
shlb
or
xchg
clc
push
adc
xorb
push
test
sub
fsubrp
mov
leave
xchg
or
lock
aaa
jbe,pn
sbb
xchg
and
ret
dec
pop
jne
add
cmp
cmp
in
add
insb
add
sti
cmp
jne
fistps
pop
xchg
in
sub
dec
leave
mov
test
cmpsb
cmp
dec
inc
popf
addr16
mov
das
pop
pop
fcomps
inc
push
repnz
es
mov
xor
push
mov
sub
mov
pop
push
xchg
adc
stos
int
stc
lcall
mov
out
or
push
jecxz
adc
cmp
rorl
pop
loope
cmp
push
bound
aas
xadd
arpl
shlb
daa
test
jp
std
jno
jmp
lock
sub
adc
stos
into
scas
mov
sbb
cs
mov
rcl
test
cmp
sbb
cmp
jecxz
or
rcr
ss
sbb
pushl
cmp
pop
and
cmc
xchg
nop
xchg
scas
test
outsl
jecxz
jg
add
inc
or
xor
pop
or
fbld
xchg
xchg
pop
aad
mov
add
mov
insb
ljmp
stc
sbb
imul
pushf
add
sbb
lds
das
cmc
int3
fsts
and
sbb
jmp
outsl
adc
and
jecxz
decl
sub
and
xchg
xchg
sbb
sub
xor
ret
sub
lret
push
xchg
lea
loope
mov
pusha
lock
mov
idivl
push
mov
xor
and
ficoml
in
add
lds
test
add
mov
lods
jl
cmp
cmp
loope
shrl
addr16
jae
ds
dec
into
stos
or
lahf
rcl
xlat
add
add
lods
sub
pop
ss
adc
inc
sub
add
inc
insl
adc
lock
xchg
or
mov
jo
lcall
xlat
out
pop
and
ljmp
inc
ret
jecxz
fcmovnu
mov
stos
ja
sbb
jo
pop
push
or
hlt
call
adc
mov
push
inc
jne
and
mov
int3
cltd
push
pusha
dec
in
adcb
mov
jbe
std
push
jbe
xor
aam
jp
pop
jle
cld
and
cmp
mov
jbe
cmpsb
es
insb
das
sub
mov
xchg
bound
push
dec
movsl
call
fs
sub
fcmovnbe
arpl
fcomps
ficompl
out
imul
xor
push
fsubrs
lock
push
ror
div
add
sbb
inc
rorb
pop
sti
push
jle
adc
clc
test
aaa
dec
test
cmc
sti
pop
ret
mov
adc
mov
fwait
jae
ljmp
pop
orb
mov
adc
inc
call
jo
stos
mov
jmp
test
inc
scas
pop
add
push
in
loopne
stc
and
dec
imul
aaa
sub
sub
xor
out
xorb
pop
jge
xchg
je
mov
adcl
add
and
inc
jo
mov
call
mov
movsb
inc
or
lret
ret
push
les
mov
call
decl
mov
lods
sbb
sub
pop
mov
int3
and
ja
mov
add
int
sti
movsl
and
and
push
push
pusha
mov
sub
dec
or
xchg
in
dec
xchg
push
repz
outsl
jmp
or
pushf
cli
es
mov
fcoml
push
fsubl
fxch
cmp
nop
nop
in
out
mul
arpl
aam
mov
lret
je
dec
fsubrl
and
push
shl
mov
pop
cmp
dec
mov
mov
jg
push
mov
xor
fdiv
lret
das
jae
mov
sbbb
mov
stc
fnstsw
addb
add
inc
fisttps
std
pop
fdivs
mov
ljmp
fmulp
push
fcoml
ja
jecxz
inc
dec
cmp
xor
add
decb
loopne
or
adc
mov
inc
fidivrs
xchg
push
jge
mov
popa
pop
lds
lret
or
inc
dec
pusha
adc
aas
add
stos
test
inc
push
mov
or
mov
test
or
pop
pushf
je
cmc
lret
mov
mov
inc
outsl
jg
test
cwtl
mov
cmp
cld
ds
fidivrl
dec
push
jne
movsl
jno
inc
das
mov
movsl
add
ljmp
mov
clc
popa
sub
addb
cltd
andl
push
jg
pop
add
outsb
add
andb
pop
and
pop
stos
fmulp
adc
fs
xor
add
rcl
repnz
xor
ja
mov
lahf
jle
shlb
lods
in
dec
aaa
sub
pop
dec
fnstenv
sbb
andl
loope
mov
dec
and
add
push
enter
rcrl
dec
int
ljmp
push
clc
loop
cmpsb
push
cli
fs
das
fs
bound
fisttps
cmpb
in
stos
pop
and
add
cmp
pop
xor
mov
mov
scas
sbb
leave
dec
inc
adc
decl
jnp
pop
or
sub
mov
xor
insl
cwtl
mov
fsub
addr16
pop
js
jge
addl
lds
cmp
hlt
push
or
leave
pop
dec
sbb
sub
rcll
push
jb
add
mov
clc
sbb
push
pop
cli
ret
mov
sub
sbb
mov
daa
or
clc
notb
mov
loopne
lret
into
lahf
repz
dec
push
jb
mov
dec
inc
mov
hlt
mov
mov
test
lods
jns
inc
cmp
ljmp
inc
adc
inc
pusha
aad
mov
pop
fisubl
xor
mov
cmp
push
inc
les
aaa
ss
mov
lods
fcomps
jmp
or
push
rol
adc
sub
mov
jge
add
dec
inc
sahf
stc
dec
lock
and
addl
pop
push
xchg
fwait
push
sarl
fs
sti
mov
pop
sbb
jnp
fisttpll
or
es
push
cmp
inc
leave
pop
jb
xor
or
push
sub
adc
pop
and
popf
adc
sub
and
arpl
add
or
pusha
adc
add
sbb
adc
fwait
cmp
mov
dec
jge
jmp
cli
fs
sbb
rep
rorb
push
jbe
inc
inc
mov
sbb
out
out
imul
cmp
sub
int
jbe
mov
lret
dec
sahf
adc
outsl
lret
lods
mov
sub
push
adc
fucom
pop
inc
xor
mov
xchg
in
mov
or
fldpi
push
mov
js
clc
and
and
outsl
mov
jg
mov
and
or
insl
push
outsb
inc
and
incb
jbe,pt
into
imul
aaa
xchg
sub
xchg
stos
adc
psrlq
lahf
jbe
adc
icebp
lret
jecxz
lahf
push
mov
push
and
decl
and
add
negb
test
fsubrp
xor
outsb
xchg
jp
call
incl
iret
mov
adc
jl
mov
lcall
in
lea
mov
sub
std
mov
repz
adc
ljmp
mov
xor
and
or
divb
rorb
fbstp
cs
cmp
xorl
pop
inc
repz
xlat
xchg
dec
es
ret
call
scas
outsl
out
movl
aaa
sbb
stc
clc
negb
mov
loopne
jne
incl
jl
andl
mov
les
jns
sti
outsl
cld
mov
call
sub
sbb
mov
test
movsb
jb
push
fldt
shl
pop
fstpl
cmp
fstps
mov
mov
clc
jns
cmpsb
fidivs
leave
testl
mov
in
or
jge
pop
mov
xor
fucomp
fbstp
jmp
or
test
pop
xor
addb
sub
xor
xor
pop
dec
push
mov
rcl
rolb
mov
cwtl
push
mov
scas
jno
xor
xchg
add
dec
cld
in
cmp
out
and
sbb
lahf
pop
add
push
shll
and
cmp
enter
mov
mov
popa
mov
cmp
das
mov
insb
mov
lods
or
push
sbb
xor
xor
mov
inc
inc
or
iret
ret
xchg
lea
leave
cmp
out
adc
sbb
ljmp
cmp
jle
add
sbbb
int
dec
shlb
arpl
mov
inc
jp
inc
jle
cmp
fcomps
pop
fnstsw
jnp
ret
addr16
lcall
adc
push
mov
xchg
and
aaa
xchg
jle
out
test
incl
rolb
cld
lcall
sti
cmp
fisubs
cli
cwtl
xorb
cld
aas
enter
cwtl
call
push
repnz
aas
jecxz
rol
fs
ljmp
fs
inc
lahf
sub
push
in
push
xor
enter
sbb
mov
insb
mov
scas
add
fsubl
mov
into
cltd
xchg
sahf
sti
aam
or
add
add
jae
add
imul
popa
hlt
push
gs
pop
add
clc
testb
push
ret
sbb
pop
pop
outsb
les
add
mov
lea
pushl
stos
and
loopne
jge
and
es
test
mov
push
rorb
push
push
mov
mov
popa
dec
lods
mov
and
jg
mov
pushf
out
int
mov
mov
pop
insl
loop
in
daa
mov
mov
pop
addl
xchg
mov
rcr
sub
lret
mov
mov
dec
fisttpl
shrl
fldenv
lcall
incl
cli
sub
cmp
in
test
test
shlb
es
jg
jmp
inc
pushf
jae
scas
mov
imul
in
insb
test
clc
adc
faddl
jg
jmp
push
lahf
push
cmpsb
add
or
inc
iret
inc
inc
insl
push
loop
mov
std
sub
std
aaa
inc
mov
pop
xchg
cwtl
test
test
filds
div
or
inc
out
inc
inc
sbb
ffreep
lcall
inc
fists
mov
inc
popf
inc
adc
test
push
push
mov
in
sub
or
or
xor
movb
hlt
lahf
xor
test
xor
es
hlt
call
pop
push
std
pushl
int3
orl
out
imul
sub
mov
daa
jmp
in
jp
cmpsb
mov
cmp
insb
mov
or
ljmp
mov
das
ds
dec
add
or
push
inc
mov
mov
pop
push
inc
mov
sbb
call
icebp
xor
rcrb
xchg
mov
push
inc
xlat
in
ljmp
jmp
xor
jecxz
or
aam
shll
jl
loope
fwait
jl
loop
sub
pop
pop
push
or
cmp
push
inc
and
pop
or
mov
dec
inc
fdivrs
das
sbb
inc
sbb
lods
test
filds
inc
xor
jg
pop
mov
adc
cmc
je
jge
mov
push
add
sbb
jns
rorl
shrb
pop
pop
sub
scas
push
loope
jp
imulb
jno
sub
and
sbb
mov
mov
test
add
xchg
sub
mov
jbe
lret
btc
and
jo
mov
dec
and
xchg
sub
ret
leave
arpl
stos
push
xor
lock
out
xor
stos
or
sub
out
dec
add
ret
sub
dec
pop
adc
mov
mov
sbb
cli
jl
mov
jg
push
jo
xor
pop
mov
daa
push
mov
jecxz
pop
pop
sub
sbb
mov
cld
xor
lods
nop
adc
xchg
dec
std
sub
das
adc
dec
repz
cli
repnz
push
mov
dec
fsubl
cmc
adc
push
into
inc
fdivr
sti
out
idivb
das
jg
xchg
insb
lock
jno
test
ret
lock
pop
hlt
call
imul
jo
dec
icebp
ja
push
jb
dec
fdivp
rcrb
insl
sbb
push
test
mov
jle
pop
xchg
aad
in
and
mov
sbb
xor
mov
xchg
into
pop
jno
inc
into
mov
fists
jmp
sti
xchg
subl
jno
shll
fwait
and
dec
inc
inc
loope
or
xchg
push
push
push
fistpl
clc
cmpb
aaa
loop
push
and
sahf
adc
inc
push
push
and
jne
test
lcall
fdivs
jl
stos
adc
incb
jae
lret
jns
orb
in
sbb
jbe
adc
pop
cmpb
sbb
xchg
jo
mov
pop
mov
inc
rcl
xor
mov
pusha
insl
out
test
lahf
enter
js
jmp
movsb
adc
push
xchg
hlt
shrb
mov
xor
pop
cmpsl
sti
pop
mov
jg
fiadds
and
mov
popl
adc
cltd
ret
xchg
inc
mov
inc
loop
or
je
mov
lret
inc
sub
loope
lahf
adc
rol
cmp
test
lcall
pop
mov
mov
fmul
stc
lahf
repz
icebp
stos
fstpl
sub
pusha
fiadds
cmc
cmp
pop
adc
sub
mov
test
jle
dec
jns
pop
mov
sbb
nop
scas
adc
pushf
jo
sub
push
push
or
xchg
cmp
push
mov
repnz
orps
sbb
push
xchg
add
or
adc
loope
cs
movsb
add
jle
lret
dec
jge
push
je
insb
daa
adc
mov
pop
jne
mov
xlat
negb
mov
push
mov
mov
xchg
push
mov
mov
push
ret
or
mulb
mov
fmuls
je
xchg
scas
or
aas
cmc
sbb
lods
inc
jno
inc
lock
nop
stos
jb
imul
sbb
outsb
lret
ja
mov
inc
outsl
add
in
jecxz
jo
inc
orb
inc
shl
xlat
jo
cmpsb
rolb
aad
pop
loope
shr
and
shl
out
fists
dec
movsl
or
cmp
scas
add
push
or
dec
push
aad
fcomps
dec
das
cli
shr
cmp
dec
sbb
pop
add
into
adc
push
adc
ret
push
mov
push
or
or
rolb
or
insb
sub
outsl
or
pop
xor
jb
mov
fs
popa
lret
inc
imul
mov
jl
imul
lods
stos
dec
jl
dec
or
fs
inc
mov
pop
rorb
xchg
dec
rcrl
dec
pop
xor
inc
pop
rcrb
pop
popa
fmul
iret
add
repz
mov
in
stos
lret
xchg
pop
inc
aaa
stos
and
clc
push
popf
daa
cmp
push
sar
mov
scas
add
imul
andb
cmpsl
jg
clc
dec
pop
cmp
fldenv
pop
xor
and
jb
xchg
loopne
cmc
or
jns
gs
mov
or
xor
lcall
jne
mov
push
and
mov
inc
cs
aas
adc
mov
add
je
ja
arpl
or
ret
lods
mov
cmpsl
cmpsl
leave
lock
mov
sub
iret
adc
insl
fsts
test
jle
scas
outsb
loop
and
adc
jge
jp
stc
lock
repz
mov
scas
in
out
mov
lods
xchg
push
mov
pop
push
mov
push
cli
pusha
aad
nop
mov
xchg
sbb
movsl
mov
jecxz
mov
mov
popf
fidivs
add
test
repnz
ss
fsub
cmc
dec
popf
push
shll
ficoml
mov
mov
lock
test
fucomi
sbb
inc
jae
lock
mov
mov
pop
ret
dec
dec
mov
mov
push
test
add
fnstsw
cmp
fildl
sub
and
mov
jp
cmpsb
cld
fsts
ret
inc
jo
in
mov
loopne
outsb
or
sbb
jg
mov
cmp
ja
sbb
inc
sbb
push
cs
loop
inc
cmp
or
or
or
jge
mov
mov
xchg
and
xchg
pop
xchg
lods
fidivrl
pop
and
shll
cmp
mov
arpl
shlb
das
pusha
mov
jp
std
ljmp
mov
pop
je
movsl
cmc
and
loop
sbb
adc
pop
mov
pop
insl
imul
sar
jae
jb
arpl
pop
pop
push
cmp
es
nop
or
jg
xchg
jg
sbb
adcl
mov
pop
add
add
je
mov
cmpsl
roll
in
or
pop
ror
xchg
out
push
cwtl
mov
icebp
jg
add
lock
shlb
push
xor
stos
lret
fcoms
jmp
or
pusha
popl
das
sbb
andl
or
mov
add
and
out
movsl
hlt
mov
xor
test
cmc
movl
sbb
jge
cmp
pop
loope
jg
in
ret
jnp
insb
popf
repz
stc
push
or
sbb
lcall
push
sbb
add
icebp
cmp
mov
bound
fldt
outsl
xchg
sbb
dec
mov
mulb
aas
cmp
jg
movsl
lock
add
mov
adc
jne
or
jg
aaa
xor
sbb
jnp
andl
mov
push
iret
divb
pop
jne
cmc
addr16
bnd
cmp
dec
push
idivl
mov
aad
in
inc
mov
addr16
dec
pop
shlb
mov
mov
mov
icebp
jg
xor
pop
push
dec
inc
cwtl
sub
push
mov
clc
cmc
xor
push
cmpsl
loopne
aaa
mov
jg
dec
adc
lcall
test
outsl
adc
out
cmpsl
clc
in
cmpsb
xchg
dec
sbb
notb
cmpsb
ret
mov
aas
lock
pusha
ret
pop
test
mov
cs
subl
movsb
xor
adc
and
cltd
insb
inc
pop
popf
mov
cmp
jmp
mov
inc
jmp
loop
daa
in
pusha
mov
ds
cli
cmpl
fstpt
out
adc
inc
mulb
inc
stos
shl
or
popa
pop
pop
loop
loop
or
ds
es
mov
call
icebp
sub
mov
cltd
lahf
pop
inc
mov
lds
ss
cmp
int3
xor
insb
les
in
incl
es
inc
loopne
mov
add
notb
mov
add
stos
pop
cltd
adc
mov
pop
push
int3
daa
push
jge
test
mov
call
push
cld
leave
dec
ja
ffreep
call
enter
and
cld
insl
lahf
lea
adc
xor
adcl
imul
push
cmp
add
loop
cmp
lods
lds
aam
mov
adc
arpl
cs
mov
dec
gs
enter
movsb
adc
rclb
sub
inc
ds
fistpll
fcmovnb
cld
stc
test
jmp
jo
xchg
pushl
rcrl
mov
xor
sub
cmp
inc
ret
add
push
mov
push
jg
fsubs
mov
nop
stc
jl
je
pop
cmp
mov
adc
mov
sub
add
sar
out
sub
pop
stos
movsl
popf
outsb
out
adc
adcb
push
icebp
sbb
icebp
mov
xor
sbb
push
dec
cmp
out
incl
stc
add
dec
xor
in
movsb
ljmp
xchg
lea
jmp
scas
test
add
add
or
lods
cmp
cmp
mov
movsbl
pop
pop
rcrl
sbb
stc
dec
jne
xchg
fbstp
and
mov
cwtl
jno
ret
xor
add
lods
scas
mov
pop
psllw
sbb
adc
mov
xchg
dec
inc
xchg
xorb
adc
sub
push
and
nop
orb
lret
add
jne
rcll
cwtl
adc
and
dec
adc
sbb
lcall
xchg
bound
push
mov
xor
add
adcb
mov
fisubrl
cmp
mov
out
jle
fucomp
nop
in
sub
jne
inc
mov
push
pushf
adc
mov
das
sar
add
xchg
fnstsw
orb
nop
ret
add
movsl
pmaddwd
mov
and
or
add
ret
or
sub
cmp
jno
int3
xor
leave
sar
dec
shrb
dec
pop
mov
movsl
call
jb
fnstenv
push
sub
cmp
mov
jmp
fsts
cmp
inc
sbb
cmc
test
fsubrl
and
cmc
jbe
imul
insl
mov
test
ja
xchg
imul
jmp
call
pop
sub
fists
jg
or
fcompl
ss
dec
jno
inc
rolb
xlat
mov
push
andb
test
sti
gs
pop
push
mov
in
add
adc
fs
out
mov
mov
or
cs
inc
xor
and
xchg
and
lret
push
dec
stc
sbb
sbb
cld
pop
or
loop
xor
and
mov
popf
or
or
jb
xchg
mov
xchg
clc
mov
sbb
std
cmp
inc
mov
jl
fsts
ficompl
mov
push
pop
jns
ret
xchg
and
int
inc
jg
inc
iret
inc
push
pop
mov
sub
int3
in
sub
mov
fistpl
cltd
push
loop
lret
int
mov
call
xor
dec
ficoml
pop
mov
out
sub
cmpsl
mov
or
loop
dec
fisubrl
xlat
xchg
pop
shr
adc
push
xchg
jl
or
push
dec
imulb
mov
insb
ss
stos
add
jne
mov
dec
hlt
lea
xchg
movsl
bound
imul
ja
addb
push
xor
or
push
sbb
int
sarb
pop
sub
adc
into
clc
xchg
jo
or
sbb
stc
orb
add
cmp
loopne,pt
sub
pop
mov
jp
cli
into
shll
mov
dec
stos
add
push
or
inc
xor
add
push
add
movsb
cwtl
outsl
mov
data16
add
jg
scas
hlt
xor
jmp
and
mov
ljmp
and
je
jb
decl
filds
pop
test
and
jecxz
xchg
in
pop
loop
xchg
loope
mov
cmp
call
add
push
mov
inc
mov
xlat
xchg
pop
push
mov
bound
pop
fisttpl
pop
cmp
repnz
sbb
filds
ja
cmp
sqrtps
pop
test
and
or
cmp
rcrl
imul
inc
mov
sbb
pop
jge
mov
andl
sub
mov
adc
inc
mov
icebp
loope
cld
pushf
movsl
sub
addr16
pushl
outsb
dec
add
xchg
lahf
add
or
push
fwait
cmp
and
aad
and
fmull
xor
xlat
pusha
cmp
lock
xchg
mov
out
or
jg
rcrb
int
cltd
add
loope
or
dec
adc
ljmp
xor
xchg
scas
and
outsl
roll
sbb
sbb
fcmovnu
jg
je
addr16
fdivrl
mov
xchg
je
fs
pop
cltd
lcall
repz
in
stos
xor
lods
xor
mov
jnp
xchg
xor
nop
out
jge
and
shlb
jae
jo,pn
adc
add
cmp
mov
push
addb
jmp
jno
cmp
nop
and
pop
inc
inc
xor
and
cmp
mov
xchg
inc
push
inc
icebp
into
xchg
push
cmp
cmp
adc
mov
dec
inc
fiadds
repnz
adc
mov
jg
std
fucomi
fsubr
or
sbb
add
daa
mov
scas
out
rcll
xor
loop
sub
mov
push
xlat
or
movsl
and
sbb
aam
mov
es
sbb
dec
mov
daa
inc
sahf
pop
loope
fildll
and
fcmove
inc
mov
dec
sbb
loop
cs
cmp
sub
jecxz
adc
enter
xchg
add
rorl
jmp
ret
pop
mov
and
lods
pop
adc
outsb
lock
dec
dec
and
jnp
loop
loop
jg
into
scas
xchg
or
out
movsb
and
scas
fs
sub
daa
pop
jge
jl
in
and
out
xor
lea
insl
stos
xchg
inc
add
outsb
push
loopne
mov
push
mov
add
ja
not
cld
js
sub
aad
inc
ret
das
lcall
dec
mov
jne
xlat
mov
cltd
andb
mov
adc
ret
push
or
fbstp
das
inc
sbbb
aad
xchg
into
les
adc
pop
dec
out
lcall
jg
test
xchg
lock
lret
inc
mov
out
lcall
push
dec
sbb
mov
mov
fistpl
inc
js
pusha
mov
pusha
lret
pop
lcall
inc
mov
mov
movsb
or
mov
fmull
xchg
pop
into
je
mov
push
mov
out
mov
test
jno
mov
jg
push
mov
or
into
and
or
inc
aam
cmc
push
out
cmp
call
sbb
ljmp
dec
jge
mov
dec
pop
cmc
test
xor
sarl
xor
pop
jnp
xchg
inc
in
xorl
shl
stos
xchg
mov
js
mov
mov
cmpsl
aam
mov
shlb
jmp
popf
pop
push
cld
or
stos
ss
daa
aaa
addr16
xorl
jbe
in
mov
bnd
ret
je
out
or
add
data16
loope
fldenv
scas
sti
ja
mov
mov
sbb
ficomps
mov
cmp
adc
outsl
std
cmc
outsl
dec
fistl
call
sahf
aam
sbb
ss
jecxz
bound
xchg
inc
xchg
dec
dec
cld
aaa
std
adc
mov
int3
push
test
xchg
hlt
cmp
testb
mov
mov
xchg
push
and
sbb
mov
arpl
lods
adc
sub
ret
mov
or
mov
and
clc
mov
mov
lock
loop
imul
rclb
pop
sub
mov
es
fs
ret
mov
cmpsl
push
mov
dec
dec
mov
loopne
and
add
sbb
fnstsw
sbb
mov
push
pop
nop
mov
pusha
push
add
nop
stos
mov
inc
fdivr
outsl
push
test
cmp
inc
in
cli
test
push
test
aaa
mov
jg
pop
cmp
in
movsl
adc
sbb
test
test
fcmovnu
js
and
adc
enter
cmp
adc
sbb
aaa
push
pop
inc
dec
sub
xchg
pop
pop
or
inc
mov
cmp
sbb
and
mov
cltd
gs
jne
jns
and
mov
stos
add
das
int
mov
push
push
xchg
mov
pop
cld
ljmp
loope
or
pusha
aad
sbb
xor
xchg
mov
xchg
adc
roll
nop
pop
mov
fistpl
test
push
inc
pop
pushf
add
xchg
or
sbb
jg
dec
inc
test
dec
push
and
inc
fdivr
movsl
or
pop
and
popa
xor
adc
jecxz
xor
mov
mov
jg
pop
in
jbe
sbb
lds
clc
lods
cld
pop
andb
and
push
and
inc
dec
shl
insl
cmc
and
movsb
cs
jmp
adc
xchg
and
xchg
mov
mov
add
stc
jmp
mov
mov
cld
pop
cmp
int
stos
mov
ret
dec
addr16
cli
mov
leave
lock
sbb
mov
int3
cmp
into
arpl
aas
adc
xchg
and
clc
adc
sub
or
cmp
mov
pop
ja,pt
ss
xchg
pop
loopne
mov
out
ror
add
mov
andl
inc
cld
pop
icebp
jno
cmp
cmp
dec
jno
adc
xor
imul
out
mov
and
mov
jbe
loope
push
pop
sub
out
imul
jl,pt
das
mov
loope
fsubrl
bound
rclb
shlb
test
test
mov
xchg
repnz
sub
es
pop
icebp
adc
jecxz
fisttpl
ds
push
adc
jo
add
and
cmpsb
inc
add
pop
jae
fidivl
push
push
xor
push
lahf
jge
psrlw
or
mov
movsl
mov
icebp
ficomps
mov
test
xor
push
mov
enter
andl
xor
and
dec
lock
inc
arpl
cmpsl
out
lods
push
mov
aad
push
out
cmp
inc
repz
push
pop
mov
imul
dec
repnz
inc
imul
lret
js
loopne
xchg
outsb
jne
mov
mov
outsl
jg
or
pop
movsl
jmp
clc
xlat
clc
test
pop
outsl
pop
lahf
mov
test
inc
lock
call
das
push
push
iret
mov
sbb
adc
add
sub
sahf
inc
ljmp
into
or
lret
push
push
pusha
orl
scas
mov
sbb
pop
xchg
ds
insb
add
jno
cmc
out
and
repz
cli
inc
xchg
lcall
adc
xor
adc
push
inc
aaa
inc
shlb
mov
test
mov
movsb
push
push
out
sbb
repz
mov
xchg
add
jl
mov
jg
outsl
push
stos
adc
ret
dec
pop
in
les
add
mov
push
sub
clc
mov
push
mov
and
je
mov
and
sub
rcrb
lret
xchg
push
je
mov
add
cmp
xchg
mov
push
lcall
aad
loopne
les
arpl
pop
out
push
fs
js
fwait
adc
push
push
mov
loope
push
outsl
in
clc
test
or
mov
aam
fdivrs
pop
hlt
movups
das
sbb
dec
mov
sahf
dec
rol
cmc
jns
pop
mov
adc
loopne
inc
mov
add
or
fcompl
test
add
pop
sub
jmp
inc
mov
fs
or
hlt
adc
cli
in
dec
stc
mov
cmp
pop
jg
cld
mov
fldt
xchg
sbb
les
cli
mov
cmp
test
lds
add
adc
cltd
insb
in
cs
fildll
mov
popa
loop
pop
pushf
lcall
mov
jbe
inc
cs
jg
daa
lock
mov
daa
outsl
mov
mov
and
jmp
xchg
mov
sub
test
shl
mov
and
mov
push
mov
repz
pop
mov
loopne
and
pop
sbb
and
xchg
mov
mov
and
jb
jg
loopne
push
jmp
mov
cmp
test
xor
pop
cmp
push
rol
sub
xchg
pop
inc
pop
faddl
xchg
sub
cmc
push
rcrb
jne
incl
popa
loop
hlt
jo
fists
ss
xchg
adcl
popf
mov
std
aaa
fs
fsubrp
lock
dec
popf
mov
sbb
and
inc
xlat
mov
inc
stos
push
filds
movsl
jle
xchg
jg
inc
sti
fucomip
out
clc
leave
test
xor
shrb
or
xor
popa
mov
or
sub
inc
inc
dec
test
mov
lock
push
gs
lods
cmp
jns
push
repnz
adc
aaa
xor
pop
repnz
push
sbb
jg
roll
movsb
sbb
or
fmul
or
cli
or
int3
add
sbb
sbb
loope
mov
in
mov
jp
mov
inc
shl
or
inc
aas
jl
xchg
jg
jnp
adc
adc
rcrb
outsl
mov
jne
mov
mov
movsb
add
fisttpll
adc
aas
fisubl
loopne
pop
loopne
push
inc
inc
pop
jne
xchg
jb
inc
xor
pop
cli
repnz
sub
xchg
pop
pop
xchg
pop
lock
insb
rorb
shlb
mov
inc
ds
addr16
loopne
shr
mov
cld
inc
jmp
mov
stos
jns
or
adc
test
add
add
pop
pop
sbb
mov
jge
nop
movsb
loope
xchg
jno
and
cmc
add
insb
sbb
mov
insl
jbe
in
xchg
or
test
add
pop
sbb
out
xor
cmp
inc
jle
jg
push
iret
pop
call
aad
xchg
xor
add
ss
xor
aad
incl
xchg
aaa
sbb
jg
mov
cld
fcomip
mov
mov
outsl
out
adc
dec
hlt
or
out
mov
fists
dec
jmp
jmp
je
insb
lretw
stos
dec
scas
pop
dec
cmc
lods
imul
sti
iret
sbb
xlat
clc
test
test
iret
nop
mov
cmc
in
sbb
ja
mov
mov
mov
mov
mov
jae
xor
and
inc
jnp
pop
push
mov
jnp
push
dec
push
jne
or
dec
adc
mov
lock
mov
jge
mov
pushl
sbb
bound
add
aaa
ficoml
jne
and
xor
pop
rolb
mov
std
or
mov
out
adc
mov
pop
or
test
sub
or
jg
or
inc
aad
mov
and
push
lods
xor
xorl
decl
repz
jne
inc
push
cmp
dec
in
mov
call
popa
mov
xchg
cmp
dec
or
and
iret
add
jecxz
aam
ljmp
lods
sbb
cltd
mov
loop
testl
sbb
movsl
add
jno
out
push
bound
jg
inc
jno
cmp
cmp
insl
xchg
mov
std
sbb
inc
sub
shl
aam
loopne
mov
ficomps
fwait
mov
les
lcall
inc
cmp
sub
inc
xchg
imul
lcall
pop
je
or
aaa
jl
mov
mov
les
rcrb
imul
dec
push
xchg
mov
mov
lea
repz
mov
jp
insb
mov
inc
cmp
pop
pop
rol
cmp
dec
mov
adc
lcall
or
shl
cmpsb
sbb
push
and
lods
sbb
fcmove
aas
or
jmp
push
mov
jne
aaa
das
mov
cmpb
lds
inc
mov
add
mov
call
dec
inc
mov
int3
js
xor
adc
ret
cs
or
fwait
outsl
push
and
pop
addl
cmpb
add
dec
mov
dec
and
stos
loop
sub
insl
pop
sub
lret
push
mov
stos
jo
add
pop
sub
lret
hlt
mov
xor
jo,pn
test
sbb
out
sahf
push
mov
stos
in
jno
aad
adc
fistps
movsl
in
and
dec
cmp
adc
or
test
fsubs
insl
dec
add
mov
pop
mov
or
mov
mov
std
pop
and
xchg
jae
mov
mov
stos
in
mov
dec
test
das
fwait
mov
push
test
outsl
xor
mov
rcrl
lods
es
fadds
into
or
outsl
mov
aad
mov
test
out
jb
xor
jo
jmp
dec
pop
cmpsb
dec
adc
push
mov
inc
add
roll
and
stc
cld
sub
jnp
mov
movsl
cmp
fwait
ret
mov
jl
sbb
mov
jmp
mov
jmp
push
push
or
bound
decl
add
pop
xchg
mov
cltd
imul
push
inc
mov
adc
mov
mov
mov
outsb
mov
or
ljmp
rolb
sub
adc
ljmp
fdivl
sub
orl
pop
jne
and
sbb
leave
idivl
test
or
push
incl
lret
fdivrs
rolb
lahf
inc
add
sahf
imul
test
lock
jecxz
cmpsb
ljmp
lock
or
pop
adc
add
xor
fs
pop
cld
lods
fldt
cmp
xchg
outsb
fiadds
xor
or
mov
jge
sti
incl
mov
clc
cmp
inc
add
xchg
inc
lds
xor
movsb
aaa
ds
ss
add
jg
inc
inc
aad
pusha
in
clts
faddl
mov
aas
mov
jp
add
jmp
outsl
mov
les
or
mov
aad
xchg
inc
insl
cmc
repz
cmpsb
into
insb
mov
hlt
outsl
lea
sbb
xchg
ss
pop
enter
data16
sub
pop
ret
jg
in
push
mov
or
test
insb
add
fsubs
pusha
sbbl
cmpsl
fs
and
pop
jmp
mov
adc
bound
push
decb
nop
cmp
mov
mov
or
test
cld
lods
jmp
or
jmp
and
mov
fistpll
dec
sahf
rolb
fiaddl
stos
add
fwait
mov
mov
and
mov
andl
cs
lock
sti
ret
fisttpl
xchg
xchg
dec
xchg
lods
loopne
jl
in
roll
sub
push
cmc
pop
mov
frstor
filds
cmpsl
mov
jnp
out
cmp
ljmp
xchg
lcall
add
fs
mov
add
adc
rorl
push
pop
sub
push
aad
push
jl
test
daa
out
decl
jo
fistl
int
xor
jmp
dec
addl
decl
out
or
mov
cmpsl
inc
pop
pop
je
loope
cwtl
inc
cmc
lds
dec
jmp
jbe
inc
popa
cmp
dec
adc
push
cmp
adc
mov
mov
push
jge
or
sbb
xchg
or
cmpsb
fwait
dec
inc
es
ret
or
in
cmp
inc
cmp
inc
inc
arpl
je
das
mov
test
rorb
or
shrb
lods
clc
xend
push
xchg
aas
shlb
or
test
hlt
pop
sarb
sub
imul
gs
insb
mov
push
std
cmp
mov
xor
int3
cmp
hlt
rolb
dec
in
scas
sbb
test
cltd
jb
and
add
lock
mov
call
lock
outsb
and
popa
fcoms
ror
insl
dec
incl
sbb
dec
xor
mul
push
xchg
mov
jmp
sbb
jo
lock
repnz
push
adc
testb
jbe
mov
mov
rol
push
sbb
xor
push
outsl
adc
ja
lods
cmp
aad
pop
push
lcall
paddusw
out
cmp
mov
cli
cmp
sbb
repz
sub
xchg
movsl
adc
add
iret
push
insb
cs
ret
and
xchg
xor
popa
add
inc
aad
in
adc
std
lock
jle
int3
dec
xchg
dec
ret
mov
mov
imul
call
stos
hlt
inc
adc
push
or
loop
out
adc
and
mov
loop
ret
lahf
hlt
cmc
lods
rcrb
or
les
faddp
aam
push
push
out
pop
ss
inc
cld
call
jg
popl
rol
daa
and
xchg
stos
adc
sub
push
outsl
insb
cmp
ret
lcall
loope
xchg
dec
cltd
addr16
cld
aad
push
sbb
jg
andb
mov
mov
push
jp
push
int3
push
dec
jo
cs
xchg
dec
inc
sub
add
mov
lock
scas
add
xor
pop
lret
sub
push
dec
adc
mov
fdivr
les
add
xchg
sti
xor
mov
ret
fldenv
jb
mov
fwait
adc
fidivs
jl
hlt
and
int3
mov
pop
mov
jns
pop
sub
mov
mov
jecxz
sbb
inc
xchg
cmpsl
lds
imulb
test
sbb
push
scas
loopne
mov
mov
or
xchg
fwait
and
jle
and
cwtl
decb
mov
pop
insl
cmp
add
ja
fists
test
xchg
jne
inc
sbb
or
push
mov
shll
fsubs
cli
aaa
and
sarb
pop
adc
scas
cli
mov
or
imull
mov
or
enter
arpl
add
or
pop
les
xchg
dec
adc
mov
mov
pop
bswap
push
cmp
jle
cmc
jns
icebp
aaa
xor
sub
dec
cmp
push
mov
cmp
addl
or
sar
fcmovnbe
mov
cmp
insb
mov
aaa
mov
arpl
sti
inc
jno
xor
pusha
scas
mov
add
outsb
or
fstpt
mov
jo
jne
lcall
xor
outsl
hlt
push
jo
xchg
pop
and
int3
adc
push
pop
in
pop
inc
add
dec
gs
mov
in
adc
push
push
lods
pusha
pop
mov
shrb
and
ljmp
sub
jg
outsl
call
push
push
pop
scas
cwtl
jmp
mov
add
popa
add
repz
rorl
ds
test
ret
and
in
imul
loopne
mov
lds
cmp
pop
fmuls
pop
ret
pop
push
fsubs
ljmp
xchg
sub
ficoml
outsl
pop
push
mov
cs
je
add
ret
inc
bound
loopne
test
out
jo
mov
xlat
pop
pop
mov
dec
xchg
mov
clc
test
xchg
int3
jo
cltd
data16
mov
sbb
add
mov
mov
adc
stos
ljmp
aam
fsub
mov
icebp
sub
adc
ret
movsl
addl
inc
faddp
mov
lea
and
movsb
clc
jbe
pop
call
ds
cmpsb
fwait
test
ljmp
loope
mov
xchg
ret
in
in
test
setns
inc
movsl
dec
push
xorl
fstpt
or
dec
test
mulb
or
inc
sti
pop
cli
in
rolb
orb
imul
sbb
insb
xlat
bnd
cld
pusha
decl
ficoml
sahf
enter
mov
sti
das
icebp
and
enter
lds
cs
pusha
popa
pop
add
xlat
icebp
mov
idivb
mov
mov
in
mov
cmpsl
ljmp
jecxz
icebp
ljmpw
mov
xorl
cld
pop
mov
jl
mov
xchg
je
out
enter
pop
jmp
jne
lock
adc
icebp
sbb
mov
shl
mov
xor
dec
and
movsl
and
push
fldt
jnp
inc
add
mov
dec
and
mov
movb
stos
jmp
jnp
stc
xor
cltd
clc
push
lock
hlt
jno
nop
cli
push
add
call
push
subl
insb
lahf
in
sbb
les
mov
push
add
ja
repnz
jl
add
jmp
fnstcw
aam
or
ljmp
ds
in
and
mov
outsb
mov
cli
mov
push
es
scas
hlt
mov
aaa
mov
test
or
or
and
fistl
sbb
incl
push
rol
sbb
insb
les
loopne
fcomps
clc
aaa
icebp
mov
sub
cmp
gs
mov
mov
stos
mov
and
or
pop
sub
inc
dec
cld
pop
filds
test
cmp
jo
cmp
scas
sbb
fistl
xlat
fisubl
outsb
adc
test
cld
das
stos
pushf
pop
subb
cmpsb
xchg
sbb
adc
add
lahf
xor
sub
jae
lea
add
inc
sahf
rcrb
jg
add
icebp
cmp
out
push
dec
and
lock
rorb
add
add
incl
inc
push
icebp
push
cwtl
fimull
cmp
sub
rcrb
mov
sbb
js
mov
sub
sbb
mov
lock
pop
add
mov
clc
push
add
pop
vpand
cmpsb
push
andl
jo
lret
loop
sbb
addr16
cmp
inc
push
adc
rol
call
in
lcall
xchg
lret
push
call
fwait
pop
jg
add
outsb
sbb
mov
cmpb
add
adc
inc
xchg
xorb
push
and
lcall
pop
jp
jne
dec
mulb
xor
cmp
mov
aad
fcmovnu
adc
es
lahf
sbb
mov
sbb
sbb
and
pop
jle
mov
jbe
mov
jmp
xchg
push
repz
aaa
test
pop
xchg
pop
and
sbb
rorb
xorb
mov
dec
jnp
filds
incb
imul
jge
and
or
das
outsl
icebp
sbb
cmp
lahf
or
and
xchg
pop
outsb
stos
incb
pop
call
lcall
mov
out
and
int3
repz
int
aaa
mov
insl
push
fadd
adc
jp
jl,pt
push
push
testb
sbb
ja
add
rcrl
lods
sbb
xchg
mov
lea
push
cli
push
or
mov
cld
or
insl
repz
cltd
flds
sbb
hlt
push
or
ljmp
lret
adc
dec
push
sti
or
jbe
lds
inc
gs
jmp
cwtl
mov
mov
mov
pop
mov
fisubrl
mov
lret
ss
add
push
mov
ja
push
cli
ret
xor
test
jo
rol
nop
pop
sti
fs
aaa
js
sbb
inc
sbb
scas
add
push
push
insl
mov
pushf
push
or
push
dec
fcmovnbe
out
sub
pop
cs
push
rcrl
pop
loope
mov
jmp
lds
in
cmpsl
add
pushf
jb
mov
pop
fimull
les
jmp
pop
sbb
mov
repz
xchg
xchg
lock
mov
js
inc
fimuls
int
lcall
subl
ret
adc
mov
lcall
hlt
jbe
inc
subl
inc
cs
cmc
jo
mov
lods
int3
test
sbb
cli
mov
sti
and
js
xor
dec
pusha
add
add
dec
pop
and
and
call
mull
cmpsb
push
sub
sub
enter
fdivl
mov
mov
or
pop
adc
push
test
popa
jle
ljmp
out
fbstp
pushf
data16
imul
jecxz
addr16
mov
push
je
mov
jg
test
cltd
mov
jecxz
pop
repz
enter
inc
fidivrl
out
sti
xchg
inc
push
mov
mov
pop
pop
add
rclb
mov
cwtl
push
fsubrs
loopne
xor
add
xchg
sbb
fistpll
xor
cmpsl
fnstcw
cmp
push
outsl
fisttpl
in
jbe
sub
or
cmp
mov
adc
lock
xor
xlat
sbb
mov
psraw
dec
rcrb
mov
adc
adc
xchg
mov
dec
and
push
mov
fstl
inc
inc
jecxz
dec
pop
stc
cmp
in
jmp
dec
ficoml
lock
leave
sbb
inc
dec
icebp
sahf
mov
and
int
dec
and
jo
outsl
decl
aaa
mov
mov
loop
call
rclb
shlb
stos
enter
push
insb
inc
sub
in
xchg
icebp
jge
xchg
and
push
jp
cmp
xor
and
pop
xor
addl
sbb
push
xor
sbb
push
pushl
mov
shlb
lahf
clc
mov
adc
adc
call
arpl
push
pushf
int3
aas
xor
fwait
xchg
dec
add
add
div
aaa
fsts
and
and
mov
adc
arpl
clc
loop
fwait
dec
and
pop
cwtl
sub
inc
add
xchg
in
shlb
pop
sar
stc
das
mov
icebp
inc
cmp
xchg
sbb
jl
fcomps
and
nop
push
and
mov
jg
or
ret
int3
in
xchg
dec
fnstsw
jo
subb
leave
orl
and
loopne
inc
mov
cwtl
jo
pop
and
and
mov
outsl
ret
or
xor
mov
xchg
xor
je
lea
and
movsb
out
mov
jmp
adcb
adc
movsb
adc
add
incl
pop
mov
mov
cli
ljmp
jp
xor
inc
loopne
ds
dec
ds
lret
xchg
jecxz
test
decb
add
cs
out
mov
adc
inc
sbb
mov
or
jle
mov
stc
inc
ja
lahf
pop
shlb
and
and
test
and
pushf
in
push
mov
jge
lds
lock
rorl
or
jns
repnz
mov
cld
loope
push
test
xchg
add
imul
out
add
dec
es
arpl
ja
loop
xchg
mov
xor
notl
mov
mov
jns
or
sub
es
add
mov
xchg
cli
ret
mov
push
xchg
mov
or
ljmp
pusha
nop
mov
lcall
sub
cmp
mov
lcall
aam
pop
and
enter
je
mov
push
add
ret
pop
mov
outsl
insb
call
mov
cmp
and
loope
adc
mov
out
xorl
jne
fiadds
pop
inc
or
pop
ror
leave
sbb
fdiv
mov
sub
nop
shl
cmpsl
inc
push
cmpsb
outsl
pop
clc
arpl
aad
fldenv
rorl
repz
in
mov
or
push
stc
mov
clc
test
filds
insl
mov
mov
mov
push
fsubp
nop
out
daa
movsl
fidivrs
test
mov
popf
aam
mov
fwait
or
in
xor
xchg
adc
fstpt
xchg
sub
jp
je
jmp
mov
mov
ja
iret
pop
pop
aas
es
aam
cmp
enter
mov
addr16
dec
xchg
add
add
jge
in
or
mull
lcall
mov
lret
xor
pop
and
push
sti
sbb
sub
mov
lods
xchg
jg
insb
mov
outsl
pop
pop
lea
dec
add
push
xor
xor
and
push
adc
std
inc
frstpm(287
das
aaa
sub
mov
clc
lret
sbb
pop
ljmp
mov
js
adcb
mov
pop
in
and
mov
lret
cmpsb
or
icebp
les
es
jo
push
rcrb
cmpsb
fistps
mov
mov
jb
cld
mov
cmc
xchg
test
adc
rcl
inc
addr16
mov
test
push
mov
jl
or
mov
stc
rorb
adc
lcall
sbb
push
rorb
sar
in
sbb
scas
or
fnstenv
lock
insl
pop
nop
add
sub
daa
js
adc
push
jbe
and
adc
flds
cmc
xchg
push
push
roll
add
jle
push
sub
out
stos
fisttpll
mov
mov
adc
push
pop
sbb
adc
xlat
pusha
mov
cmp
mov
or
cmp
xchg
pop
fcoms
jne
lods
fwait
pop
ss
shrd
jecxz
lock
loop
aaa
out
lods
push
dec
fimuls
pop
ficoml
das
gs
jmp
fisttpll
ret
cmp
pop
cmp
push
xchg
pop
int
outsl
mov
or
or
xorl
and
outsl
mov
test
icebp
push
cli
jns
rclb
sbb
cmp
movsl
in
jns
popa
iret
lds
mov
xor
mov
fcmovbe
sub
mov
mov
mov
insb
fcoms
shlb
dec
or
mov
pop
xchg
aas
out
lea
rorb
cmpsl
fcmovnb
sarl
mov
sub
fcomps
xchg
pushf
andl
shl
mov
lock
aaa
sti
mov
lods
nop
and
fwait
lods
mov
dec
inc
pop
fadds
iret
test
hlt
leave
ss
movsl
inc
fcoml
add
bound
sbb
stc
lret
lret
pushf
int
pop
add
and
sub
mov
inc
push
xor
xor
inc
movsb
mov
push
arpl
pop
leave
mov
je
cld
sahf
pusha
xchg
mov
lret
and
sub
inc
aam
mov
aad
aas
add
dec
repnz
pop
cmp
add
sbb
sbb
hlt
push
push
pop
jbe
repnz
enter
mov
mov
fisubl
inc
repz
pop
rol
dec
cmp
inc
mov
or
mov
jo
fwait
inc
and
std
cwtl
xor
sbb
testl
xchg
popf
movsl
mov
icebp
lcall
push
xor
rcr
inc
push
aas
and
sub
push
outsb
pop
movsb
jle
icebp
hlt
mov
bound
andl
arpl
sub
and
in
jle
insl
mov
adcl
xchg
or
fdivl
xor
cmpsl
cltd
mov
dec
in
sbb
and
popf
or
fiadds
cmc
mov
push
mov
mov
lock
jecxz
mov
adc
lahf
leave
mov
ret
cld
mov
lahf
adc
and
out
hlt
inc
xor
jbe
push
cltd
xor
movsb
inc
insb
movsl
or
dec
sub
in
sbb
es
dec
cwtl
jl
pop
cmp
pop
jne
das
mov
push
test
test
sub
sub
sbb
and
dec
mov
or
aas
lea
mov
jb
jle
lea
mov
nop
shll
add
clc
mov
stos
outsl
mov
fs
sub
xchg
push
push
outsl
fdiv
mov
sti
dec
popa
aas
in
or
outsl
negl
test
sub
icebp
clc
add
loop
outsb
rcll
std
mov
push
insb
push
xchg
in
aam
push
loope
jnp
mov
pop
cmpsb
push
aam
or
inc
pop
fwait
loopne
aaa
incb
fstl
jle
dec
fstps
sbbl
sub
lods
or
cli
data16
inc
xor
cld
push
js
add
addr16
cwtl
rclb
xchg
mov
push
outsb
adc
mov
iret
mov
loopne,pn
lods
cltd
pop
ret
sbbb
cmp
xchg
loope
pop
lcall
aas
cmpsl
cmpsl
sub
cmp
lods
adc
in
pop
jmp
loopne
fiadds
xchg
xchg
sub
mov
roll
add
adc
lods
stos
pop
or
shll
dec
pop
mov
hlt
or
fildl
jecxz
enter
mov
popf
fcmove
adc
and
or
test
aaa
ljmp
mov
pop
inc
mov
pop
cmp
out
jl
shrl
jp
rorb
pop
and
push
mov
mov
and
jns
das
sbb
lock
inc
sub
test
inc
scas
jbe
add
lods
mov
and
xor
stc
mov
ljmp
cmpsl
js
sbb
nop
mov
xor
jmp
scas
pop
xlat
jne
mov
das
bnd
or
jg
xchg
adc
dec
mov
jp
xchg
cltd
mov
add
repz
add
sti
mov
cli
loopne
and
add
sub
lods
sbb
shrl
pop
mov
jmp
add
push
mov
xor
rolb
filds
sbb
in
or
push
push
loope
loopne
fsubr
add
insb
add
and
inc
outsl
lock
outsb
xor
inc
add
dec
test
push
fstpt
sbb
fistl
inc
adcb
cmc
mov
cmpsl
jecxz
movsl
loope
sti
pop
push
fwait
pop
xor
ja
xor
add
pusha
loope
inc
sub
test
push
mov
fsubs
inc
in
dec
into
test
testb
jl
sbb
pop
adc
pop
call
push
arpl
add
orl
aam
ss
jne
call
test
pop
inc
or
js
push
shrl
mov
push
mov
mov
lds
jmp
adc
sbb
cli
add
arpl
sbb
and
add
mov
mov
stc
loope
imul
jl
aad
das
ret
sbb
xor
test
scas
or
mov
and
ret
mov
fcoml
push
stc
inc
xlat
lret
dec
mov
shlb
cmp
outsl
aas
sbb
punpcklbw
int3
callw
mov
dec
mov
inc
cwtl
loopne
mov
cli
andb
pop
sbb
sub
pop
outsl
jne
cli
push
stc
push
movsb
inc
sub
clc
test
out
or
mov
push
mov
arpl
sub
xchg
push
mov
inc
xchg
js
outsb
xor
mov
cmpsb
pop
daa
popf
mov
fidivl
xchg
pop
mov
dec
pop
jl
ret
push
cmp
pop
fiadds
bound
pop
pop
lock
sbb
lods
shll
jg
push
cs
es
std
sahf
xchg
dec
lds
cltd
pop
mov
and
mov
jecxz
adc
ret
add
xabort
lods
sub
repz
mov
and
outsl
call
inc
push
lock
stos
notb
mov
dec
je
mov
inc
jae
insb
add
std
mov
push
mov
and
xchg
aas
or
sub
call
and
inc
in
sarl
mov
sbb
call
mov
pop
std
jg
xor
adcb
jne
cs
lds
outsl
bound
sbb
andl
into
loopne
fucomip
in
jecxz
jmp
xor
test
sub
lea
rclb
mov
lea
lcall
pop
jecxz
mov
push
in
xchg
lods
dec
in
fld
pop
push
fisubrl
mulb
sbb
mov
push
mov
dec
mov
or
ljmp
shrb
dec
adc
pusha
sbb
mov
or
enter
push
xlat
cltd
cmp
cmp
and
dec
das
idivb
dec
or
add
stc
pop
push
xchg
mov
jl
mov
rorl
add
pop
xchg
cs
adc
jl
sbb
imul
lret
out
push
in
mov
movsb
add
dec
outsl
nopl
jne
je
jne
int
sub
xor
out
imul
sub
dec
pop
rcrl
mov
or
mov
sbb
insb
std
test
ret
pusha
sub
arpl
push
push
mov
pop
stos
pushf
es
lret
push
sbb
lock
scas
pop
dec
mov
aaa
in
clc
sbb
or
jno
or
jo
test
outsl
cld
fistpl
adc
xchg
femms
mov
lcall
and
adc
push
clc
and
fucomip
jp
mulb
cmc
sub
inc
mov
xchg
pop
lds
loop
ret
insl
loope
orb
mov
dec
pop
es
pop
je
imul
ds
lahf
test
xchg
inc
int3
gs
mov
mov
gs
mov
stos
bound
imul
pop
push
js
dec
mov
enter
add
inc
call
sub
insl
pop
inc
aas
or
pusha
imul
mov
jmp
cmc
mov
pop
ret
cmp
adc
cmp
fbstp
mov
outsb
andb
push
popa
or
cmp
insl
jge
sub
mov
clc
mov
jl
aad
adc
and
jl
xchg
xchg
cmp
jge
js
and
push
mov
pop
test
jnp
lea
add
cmp
ss
outsb
or
inc
les
adc
stos
pop
mov
push
out
testb
inc
sbb
dec
das
mov
mov
scas
enter
inc
mov
test
ja
add
call
jp
adc
cmp
pop
fiadds
and
dec
sbb
xchg
mov
fimull
popf
les
sbb
pushf
mov
add
js
outsl
icebp
mov
dec
das
loope
add
push
cmp
jae
cmp
rcll
mov
add
sbb
cmp
dec
mov
ud2
mov
insb
jns
aas
icebp
lods
push
lea
adc
cmp
nop
sbb
mov
ljmp
pop
rol
in
daa
mov
out
add
sbb
in
mov
mov
jmp
dec
and
sbb
sbb
jle
push
cmp
push
sub
sbb
fcoml
arpl
outsb
push
fs
popa
sti
int3
adc
out
bound
xor
dec
adc
mov
mov
and
movsb
adc
stos
sub
loop
ret
out
sbb
adc
andb
cmp
push
push
cmpl
or
add
jg
out
add
sub
mov
jl
fdivs
jecxz
inc
fistpll
mov
cmpsb
orb
xor
jle
jle
daa
xchg
clc
sbb
shl
add
or
gs
dec
inc
int
out
pop
icebp
div
jg
mov
out
adc
xchg
xor
adc
and
dec
jl
fs
xor
sti
aaa
cld
pushl
xor
sbb
mov
int3
xchg
out
jmp
mov
jns
repz
xchg
mov
xchg
imul
ljmp
push
cltd
scas
gs
mov
rolb
out
lods
mov
cmp
mov
jnp
add
cmp
fldl
call
dec
dec
test
mov
or
sbbb
into
decl
cli
jne
mov
sub
int
xchg
lock
sti
push
mov
loop
push
lods
mov
mov
dec
push
imul
sbb
mov
mov
xor
push
aaa
clc
dec
insl
inc
andb
jae
dec
jl
mov
clc
mov
repnz
pop
xorl
mov
testb
push
stos
outsb
das
adc
or
subb
inc
adc
sbb
mov
sub
mov
mov
push
sbb
mov
ja
or
cmp
cmp
in
shl
repnz
and
sub
std
es
mov
mov
lods
cli
xchg
jle
mov
mov
jnp
cmp
sarb
addl
lds
mov
mov
hlt
xchg
mov
sbb
popa
sarl
loop
xchg
lret
mov
sahf
add
adc
gs
fldt
xor
cltd
inc
inc
lret
xor
filds
add
adcl
pushf
shll
fdivrs
push
addb
movsl
test
cwtl
aam
das
rclb
sahf
dec
stos
sub
int3
fimull
add
mov
test
inc
stos
mov
push
lock
ljmp
jo
add
or
xorl
pop
mov
inc
std
cltd
mov
stc
adc
test
fs
out
loop
insl
mov
loopne
shlb
call
mov
fimuls
lea
js
shll
clc
movsb
xchg
insb
lret
jmp
rcrb
jnp
sub
adc
enter
xchg
inc
in
inc
das
cld
outsl
enter
rcl
pop
test
jle
test
outsb
jg
xchg
stc
stc
inc
cmc
push
loopne
inc
in
inc
mov
sub
ljmp
lcall
out
pop
mov
push
push
and
jle
and
clc
mov
mov
test
lods
mov
push
push
ret
dec
xchg
adc
xor
cwtl
inc
je
cmp
dec
in
fucomi
loop
popf
push
adc
mov
and
adc
daa
xor
mov
sbb
cmp
jnp
repnz
dec
pusha
inc
push
mov
loop
sub
push
jp
sub
aaa
push
dec
pop
gs
pop
or
sbb
roll
jbe
pop
js
pop
addr16
mov
mov
inc
mov
jg
sbb
mov
jg
pop
adc
sub
dec
xor
cli
mov
adc
dec
pop
cwtl
sbb
int
loop
xor
cmp
add
pusha
mov
cmp
cmp
dec
mov
outsl
jbe
cmp
pop
jle
xchg
loopne
xlat
pusha
jp
pop
sub
movsb
divl
arpl
and
jns
cltd
jge
mov
lcall
cwtl
push
movsb
and
inc
add
push
adc
stos
mov
insb
xor
xchg
outsb
call
adcb
test
in
mov
mov
adc
mov
das
andl
pop
push
addb
int3
and
mov
mov
jns
cmp
notb
inc
dec
hlt
jg
stos
sub
jp
cltd
lret
xchg
sbb
aam
pop
or
mov
push
out
sbb
mov
add
out
add
and
rolb
jle
lcall
js
inc
popl
cmp
data16
shrb
dec
enter
dec
push
frstor
ljmp
dec
jge
movsb
lods
test
inc
xchg
cmp
mov
jmp
test
mov
cmc
lcall
pop
xor
adc
adc
adc
ds
enter
and
mov
or
sbb
sahf
jle
mov
inc
hlt
lea
adc
lahf
cld
sbb
pusha
cmp
sti
movb
bound
jg
inc
je
out
jno
nop
sbb
xorl
xor
cs
sbb
adc
mov
or
adc
mov
xorl
inc
add
sub
stos
push
shlb
sbb
aam
xchg
incb
dec
push
negb
clc
ljmp
push
loop
nop
outsb
std
push
pop
xchg
popa
in
pop
lea
ljmp
out
mov
lds
push
insb
movsb
inc
jb
insl
cmp
loopne
and
and
push
sub
aas
sub
roll
mov
call
es
fsubrs
pop
es
xor
add
and
cltd
cwtl
jmp
and
out
cltd
cmp
jbe
imull
sbb
adc
test
add
outsl
jno
dec
or
mov
push
sub
cltd
dec
es
or
ja
hlt
push
pop
push
push
jmp
aaa
enter
and
inc
mov
testl
inc
push
push
xchg
and
mov
sub
adc
dec
std
cwtl
das
fdivl
pop
xor
bound
iret
pushf
push
sbb
fninit
outsl
or
adc
and
xchg
sub
cli
fisttps
push
add
popa
rolb
pop
add
insb
fdivs
and
in
or
cmp
mov
lods
inc
scas
mov
mov
jle
dec
xchg
call
mov
in
xlat
inc
and
mov
pop
push
jae
fcmove
popa
jl
add
mov
call
pushl
repz
scas
inc
into
in
pop
cmp
mov
mov
mov
xchg
repz
pop
cli
je
jecxz
jo
push
fcompl
and
pushf
insb
jmp
andb
seto
mov
jbe
ljmp
sbb
shrl
iret
rol
in
aaa
loop
call
aaa
cmp
adc
fisubrs
cwtl
das
test
fsubp
mov
sarb
rcr
push
mov
sub
mov
loop
outsl
aam
mov
pusha
das
push
jbe
adc
push
adc
imulb
je
pop
pushl
mov
jg
and
into
inc
fldcw
pop
mov
frstor
and
shr
mov
jge
lcall
and
bound
push
cld
cmpsb
jbe
pop
cmpsl
mov
ficoms
cld
cmp
pop
add
add
fiaddl
ljmp
outsl
add
repz
mov
pop
dec
xchg
pop
scas
ret
inc
es
lret
roll
and
xchg
mov
repz
or
sarb
sbb
push
pop
jae
ss
push
jg
dec
fcoml
fcoml
pop
ret
push
das
jne
or
fwait
jg
fmull
mov
daa
test
lock
sbb
and
icebp
lock
mov
mov
mov
aam
dec
jne
push
jae
cmp
or
jbe
adc
repnz
mov
popf
jge
mov
inc
insb
loop
lock
sbb
stos
dec
pop
and
lret
cld
adc
sub
lods
jle
call
call
sub
jg
div
ret
pop
in
aas
fidivs
mov
push
mov
pop
mov
into
roll
movsb
dec
dec
loop
xchg
mov
jmp
dec
out
sarl
pop
sti
pusha
aam
filds
enter
adc
fbld
pushf
push
add
movl
stc
adcb
rcll
sarb
jno
mov
int3
scas
ret
stos
in
psubb
sbb
aaa
decb
cmp
xor
add
pop
adc
xchg
add
sub
movsl
mov
cld
repz
jg
test
stc
pushl
bound
std
and
addr16
sub
bound
decl
mov
sub
push
dec
addl
sbb
dec
gs
dec
xchg
dec
out
std
in
test
jb
lds
and
mov
pop
or
cmc
adc
je
inc
xchg
pusha
cmp
mov
loopne
stos
and
sbb
jmp
mov
inc
ret
out
jge
mov
push
dec
arpl
xor
ja
mov
es
dec
rcrb
std
cs
jg
filds
dec
fs
push
adc
gs
iret
lods
mov
out
das
jb
push
stos
outsl
lock
mov
jp
sub
aas
sub
es
imul
xchg
ss
sbb
js
jge
mov
xchg
add
mov
repnz
jmp
fimull
je
mov
jg
mov
pop
inc
incl
mov
inc
pop
dec
add
out
xchg
clc
insb
sbb
imull
and
leave
cli
mov
pop
pushl
faddl
je
cld
inc
shlw
in
ret
lods
adc
std
cwtl
pop
mov
jl
ljmp
jge
jl
mov
adc
loope
inc
adc
mov
jo
mov
jno
mov
and
xlat
jp
lods
mov
pop
jp
subl
dec
mov
mov
ret
jnp
pop
ljmp
cmp
je
or
pop
mov
insl
addr16
int3
xchg
mov
mov
and
jg
pop
push
mov
lret
mov
sub
loop
and
loopne
sbbb
call
aad
adc
adc
jne
jne
out
inc
cs
add
add
xor
loop
aas
cltd
pop
mov
adc
fs
out
or
sarb
rcrl
loopne
inc
sbb
jo
cwtl
lcall
das
mov
jmp
sbb
pop
cmp
fnsave
xor
jecxz
aaa
jno
subb
adc
add
out
or
mov
scas
lret
jg
mov
mov
add
sub
std
push
lods
push
xor
xor
inc
je
sub
sbb
and
xor
andb
mov
pop
mov
into
mov
leave
dec
push
mov
in
pusha
jecxz
and
inc
lea
sub
stos
dec
xor
mov
or
shll
je
jmp
sbb
dec
push
cmp
sub
push
stos
xchg
repz
add
adc
in
push
adc
out
pop
mov
rcrb
sbb
dec
lods
or
enter
cli
mov
test
insb
xchg
repnz
ds
es
xchg
push
or
outsl
jo
jle
fisubrs
std
out
dec
fwait
movsb
fmuls
mov
ja
outsl
push
rcrb
mov
incb
faddl
cld
xchg
fwait
inc
out
sarb
push
dec
and
xor
icebp
mov
or
pop
pop
push
mov
pop
icebp
or
mov
xchg
jecxz
and
es
and
and
pop
xchg
xchg
js
fbld
add
adc
rcrb
pushf
ret
jge
loopne
and
xchg
or
imul
pop
adc
dec
test
add
sbb
pop
stc
push
aas
setae
bound
xor
ljmp
xor
mov
imul
iret
loope
iret
xor
push
outsb
clc
bound
or
icebp
in
inc
sahf
test
sbb
push
jno
ret
jg
or
mov
out
add
cmc
sbbl
push
sub
jg
add
add
ret
fisubl
sub
das
mov
scas
pop
sbb
lea
movsl
sbb
sbb
ss
push
std
call
icebp
jns
fld
mov
mov
mov
cmp
dec
leave
dec
decl
sub
notb
fisubrs
mov
cmp
sub
mov
in
jnp
or
outsl
clc
add
test
adc
inc
xlat
ret
xor
mov
xchg
in
fistpl
push
lcall
out
fstp
sub
adc
xor
into
adc
ds
cld
incl
subb
jno,pt
cmp
outsl
mov
lea
jo
ficoml
and
or
mov
mov
cmp
add
inc
out
xor
jbe
push
incl
or
inc
mov
or
stc
lods
jl
cmc
sarb
push
std
outsl
in
sahf
fcom
test
sbb
jne
std
fwait
test
and
mov
adc
lahf
stc
ja
xchg
fidivrl
imul
daa
xor
jmp
out
test
inc
lods
dec
and
and
cmpsb
ficompl
jecxz
icebp
add
mov
stos
clc
push
fldt
testl
mov
insb
jnp
dec
push
fsubrl
stos
int
jg
clc
je
sub
dec
mov
xchg
mov
add
xor
loopne
jmp
lods
cmp
and
push
mov
rcr
ljmp
jg
xchg
adcb
or
add
add
dec
rcr
fucomip
in
ret
and
jp,pn
push
shr
jg
xchg
adc
cltd
jns
inc
pop
mov
cli
data16
scas
add
or
es
inc
and
fcmove
and
xchg
push
stc
fsub
mov
pushf
minps
je
fdivrs
inc
cwtl
sub
hlt
or
fdivrs
or
shrl
addr16
pushf
fisttps
push
sub
and
jmp
rolb
shll
cmp
push
lock
jo
and
mov
push
das
xlat
scas
je
lret
aam
mov
add
loop
test
jbe
add
je
inc
out
pop
sbb
jmp
adc
movhps
shl
mov
and
daa
dec
and
or
pop
dec
mov
xchg
or
and
push
ljmp
mov
sub
mov
mov
rol
sub
mov
sub
sub
xor
repz
stos
pop
inc
xor
cmp
push
insb
cmpsb
cmpsb
sub
test
mov
mov
jb
mov
loopne
push
add
sbb
xchg
push
insb
cld
inc
pop
iret
fidivs
enter
loop
cmc
fucomi
sbb
jo
push
icebp
push
pusha
pop
add
push
lea
sub
addb
mov
je
roll
js
xor
adc
pop
add
inc
sarb
enter
and
cmpsl
mov
inc
jl
inc
loopne
jns
test
sbb
xchg
jb
aaa
fisubl
dec
xchg
jae
and
test
fdiv
lcall
adc
and
sahf
adc
xor
bndstx
pop
and
into
scas
push
fsubr
das
fsubl
or
aad
dec
add
add
push
test
test
mov
push
outsb
xchg
mov
lcall
add
push
adc
js
xor
mov
push
das
xchg
js
les
testb
ret
incl
pop
shll
or
jecxz
mov
lcall
xor
jp
adc
popf
addr16
push
ret
out
dec
ficomps
repz
mov
xchg
add
inc
lret
push
and
mov
sub
mov
jno,pn
mov
aaa
adc
push
xor
js
icebp
xchg
fcomps
pop
gs
and
xlat
ljmp
xchg
addl
fstl
mov
adc
push
mov
std
push
ljmp
les
std
mov
push
and
cli
mov
jge
sub
addb
dec
cmp
and
scas
scas
mov
out
sahf
cs
xorb
hlt
or
pop
jl
int3
dec
imul
pop
notb
jg
aad
mov
les
leave
cmp
loop
fdivr
lea
xor
jg
rcl
jo
jl
sbb
in
fwait
xor
call
in
adc
lret
or
inc
ret
mov
inc
gs
les
pusha
pop
clc
or
movsb
popf
cmp
and
cli
and
clc
ret
aam
sbb
leave
repz
popl
xchg
je
push
adc
adcl
jno
test
testl
mov
mov
dec
or
xchg
or
or
mov
lods
addr16
add
jg
movsl
inc
cmp
push
shll
cmp
pop
cs
sub
adc
ret
int3
pop
pop
pop
out
inc
jno
movsl
adc
jnp
mov
pop
std
mov
xor
stc
stc
adc
xchg
mov
and
jbe
cltd
add
loope
cli
es
add
jb
shrb
gs
lcall
negb
lods
inc
xor
sub
add
scas
imull
data16
stos
mov
and
pop
add
xor
mov
fildll
faddl
incb
pop
clc
dec
das
jg
fs
loopne
and
and
fmuls
sbbb
lahf
jge
push
mov
mov
daa
cmp
gs
ljmp
push
mov
cmp
out
jle
and
adc
outsb
lods
mov
into
andb
scas
xchg
mov
cmp
add
dec
lahf
cmc
dec
outsb
test
lods
mov
sbb
int
decl
mov
jle
call
rcll
jne
mov
cs
movsl
in
add
xlat
or
sub
dec
xchg
fisttpl
xchg
fidivrs
pop
xor
xchg
inc
pop
mov
push
sub
mov
lahf
call
sub
push
into
pop
pop
dec
jmp
cmpsb
daa
push
sbb
and
pop
or
sub
ljmp
jmp
add
ds
es
ja
clc
ss
arpl
push
and
test
cli
xchg
pop
sbb
lcall
mov
pusha
aas
ljmp
dec
std
xchg
aas
movsb
push
pop
xor
adc
dec
cltd
dec
int3
mov
inc
jae
test
dec
rorl
mov
jg
mov
jo
dec
imul
mov
lret
sub
pushl
and
mov
ret
mov
jnp
dec
stc
inc
cli
les
mov
xchg
adc
out
sbb
mov
fwait
jmp
or
sub
pop
xchg
rorl
gs
pop
sub
and
xchg
lods
cmp
icebp
jp
lret
mov
cmp
fs
dec
adc
test
mov
inc
loope
inc
loop
mov
ret
adc
push
cs
aas
jbe
mov
mov
aad
push
pop
push
and
or
int
and
push
popf
popf
cmp
and
cmc
add
add
pusha
nop
and
sub
mov
in
pop
das
sub
inc
xor
cld
pop
cmp
mov
and
mov
xchg
or
std
mov
pop
call
sub
cmc
xchg
xor
cld
ljmp
lea
fcmove
mov
adc
lret
lret
andb
jge
popa
mov
cmp
lds
std
jb
jg
ljmp
aad
mov
cld
mov
xchg
aad
add
clc
mov
loope
push
cli
mov
das
mov
or
jmp
pusha
jmp
xchg
lret
add
push
and
loopne
aas
and
decl
loope
mov
rcr
loopne
sbb
mov
in
lds
into
mov
inc
add
lods
cli
cmpsb
dec
subb
jne
inc
push
lock
or
fucomip
sbbb
inc
scas
out
jb
loope
mov
cmp
adc
stc
jecxz
add
iret
inc
mov
lock
xor
das
adc
dec
sbb
outsl
mov
xchg
loop
sub
loopne
pop
mov
and
outsl
fstpl
inc
push
jecxz
sbb
pop
in
scas
dec
lock
jne
xor
cmp
mov
loopne
xchg
stos
lods
imulb
lock
enter
das
popf
hlt
fcompl
in
push
xor
mov
or
xor
push
mov
das
inc
mov
lahf
repz
nop
push
mov
cli
es
jnp
sbb
adc
sbb
daa
mov
sti
mov
or
fcomps
xor
inc
lods
fisttps
inc
or
adc
in
jecxz
push
outsl
test
cmpb
sbb
xchg
and
add
mov
mov
rolb
incl
cvtpi2ps
lods
sub
or
lods
ljmp
and
cwtl
jecxz
or
ficoms
movsl
fcomp
xchg
cwtl
stc
and
lret
jno
repz
add
inc
add
add
xlat
add
movsl
lcall
das
and
dec
pop
adc
insl
mov
dec
push
pusha
sbb
cs
lret
or
stos
js
int
adc
add
mov
loopne
jmp
int
mov
and
lods
dec
push
mov
inc
mov
xchg
movsb
insb
cwtl
jge
xor
repnz
pop
mov
xor
mov
jmp
jo
js
adc
incl
pop
loopne
cld
inc
inc
adc
or
jg
insl
cld
je
daa
or
or
fmuls
dec
fwait
inc
ret
cmpl
in
sub
add
fmull
jo
cld
mov
in
pushf
sub
xlat
mov
xchg
adc
aaa
mov
mov
ror
mov
ja
sub
sub
and
sbb
jmp
ss
push
pmuludq
or
fildl
ljmp
cmpsb
loopne
jg
adc
outsb
loope
mov
dec
and
inc
dec
adc
mov
pop
adc
sub
shr
mov
loop
aas
push
cmovge
cmpsb
mov
mov
cmp
and
ror
bound
mov
adc
pop
sahf
mov
insb
sarl
jecxz
call
inc
cmp
mov
rolb
mov
add
dec
push
mov
dec
pushf
out
cld
das
insl
push
jmp
and
arpl
cld
or
adc
jnp
data16
rcrl
stc
jmp
js
pop
xor
and
mov
dec
adc
ficoml
mov
jmp
enter
push
decl
in
stos
jae
in
ret
xor
js
adc
subl
imul
lret
push
cwtl
mov
or
loope
inc
cltd
jo
cmp
pop
xorb
fisubrs
rcrl
popa
mov
sub
xchg
test
pcmpeqd
aas
adc
ss
andl
in
xor
and
lret
scas
mov
and
nop
mov
clc
lret
add
out
inc
insl
aad
xor
in
xlat
mov
push
loopne
imul
sub
bound
enter
imul
pop
xchg
and
incl
rol
addr16
leave
pop
sbb
inc
stos
outsb
mov
or
inc
sbb
aas
xchg
and
dec
sahf
push
sub
test
ja
fiadds
mov
adc
sub
push
jns
mov
cli
dec
jae
push
imulb
ret
dec
or
mov
mov
addb
sub
fiadds
popf
leave
imul
out
ds
jmp
pop
sbb
loopne
add
mov
add
incb
mov
push
int
pop
pop
in
nop
add
movsl
loop
sub
xchg
fdivp
mov
stc
cmp
test
jl
lock
add
add
cwtl
xchg
popf
pop
sbb
dec
adc
adc
push
and
loopne
lea
mov
add
imul
lock
or
mov
or
mov
or
mov
adc
inc
jl
shlb
push
clc
dec
fiadds
popa
xor
push
mov
bound
jb
inc
cld
lcall
scas
dec
pop
ljmp
xor
ror
adc
adc
sarl
jle
test
pop
sub
rolb
mov
cmp
inc
add
add
jge
fists
mov
fs
inc
and
xchg
mov
in
frstor
sbb
fadd
pop
mov
or
adc
fsubrp
mov
or
fisubrl
call
jle
cmp
shrb
mov
sub
xchg
push
adc
mov
lock
sbb
jle
cmp
cwtl
popa
stos
xchg
in
jg
push
mov
adc
int3
pop
ja
pushl
negb
mov
leave
and
add
sub
loopne
dec
test
push
push
clc
fwait
pop
add
mov
loopne
mov
lret
fstps
sub
shlb
jmp
in
jecxz
mov
fwait
jle
adc
cli
roll
pop
fs
mov
jle
xor
enter
loop
add
or
mov
cmpl
add
xchg
repz
inc
or
cltd
imul
adc
cld
sbb
in
add
cli
push
adc
or
xor
push
sbb
push
xchg
ret
xchg
ljmp
mov
ljmp
add
xor
insb
pushf
adc
pop
int3
cmp
jl
stos
and
ljmp
rorb
or
stos
xor
sahf
loope
test
pusha
push
push
push
adc
mov
lahf
pop
cli
add
mov
movd
punpckhwd
test
adc
pusha
dec
dec
sbb
push
in
and
shr
adc
loope
or
inc
mov
nop
lcall
adc
xchg
mov
and
movsl
mov
inc
fisubs
outsl
cmp
pop
clc
push
test
sarb
lock
test
xchg
cli
jg
cmp
ret
and
push
push
fcmove
sahf
out
repnz
inc
pushl
mul
bound
jno
add
rorb
pop
xchg
or
mov
jns
rcll
sbb
adc
adc
inc
xchg
fisubs
lret
push
sbb
sti
call
and
xor
aaa
incb
adc
mov
and
insl
jle
pop
and
mov
cmc
bnd
jo
sarl
or
cli
dec
aaa
push
cs
mov
push
jo
loope
das
fdivr
aad
and
xchg
in
push
adc
jg
call
imul
mov
fadds
mov
cmc
pop
xor
jecxz
jl
xor
in
std
sbb
xchg
loopne
xor
xchg
mov
xchg
and
insb
or
inc
js
in
pop
cs
lods
sub
push
rorb
call
insl
xor
inc
and
mov
repz
lcall
sahf
insb
shrb
aad
pop
stos
push
add
sbb
pop
inc
xchg
mov
xorb
jbe
aaa
push
push
sbb
inc
test
movb
movsl
xchg
cld
lret
jne
inc
jge
stos
mov
push
test
jl
xor
leave
fists
cmp
cld
sbb
adc
or
push
xor
adcb
and
dec
std
inc
rcr
dec
cwtl
out
testl
shlb
nop
test
xor
dec
movsb
push
jno
std
xchg
jl
rol
es
ret
or
sahf
cli
pop
push
das
repz
repz
cltd
adc
subb
add
jg
leave
dec
adc
dec
ds
scas
mov
cld
clc
jmp
les
sub
adc
mov
mov
fmull
sbb
lds
cli
mov
ret
je
testl
test
rorb
pop
shlb
rolb
mov
and
nop
hlt
test
lods
loopne
pop
sbb
fadds
xor
cmpsb
aaa
mov
jno
adc
bt
rorl
stc
pop
mov
push
sbb
dec
in
mov
cli
add
dec
jbe
cmp
adc
ficompl
xchg
std
fiadds
jno
adc
push
or
dec
jp
add
mov
sbbb
loope
xchg
scas
lods
mov
ljmp
sti
cli
sub
jae
push
shrb
andb
push
and
lea
call
or
roll
outsl
adc
ds
xor
sub
addl
into
cmp
xchg
aaa
cli
dec
jg
adc
cmc
hlt
repz
xchg
notb
out
jge
fbstp
jne
xor
psubd
ret
or
clc
push
mov
jle
pop
rorl
lret
sarl
xchg
add
fsubrs
lock
pop
daa
mov
out
and
jne
cli
iret
mov
pop
dec
mov
movsl
or
ss
and
std
jbe
and
adc
pushf
cli
mov
xchg
repz
out
inc
faddp
xchg
scas
sub
push
inc
addr16
jae
dec
rorb
pop
mov
xorb
mov
adc
jle
ljmp
scas
cli
mov
pushf
insl
or
inc
mov
cmpsl
jecxz
ds
jmp
lea
add
notl
clc
pop
pop
mov
jne
jecxz
add
outsl
pop
cwtl
pop
lods
adc
pop
bound
xchg
adc
mov
cmp
pop
pop
call
mov
rcl
xor
inc
mov
fs
inc
dec
rcrb
inc
lret
cld
fcom
outsl
clc
cmp
add
imul
ss
mov
fcoms
mov
mov
cmpl
jae
xor
leave
add
and
mov
pop
clc
lods
aaa
push
imul
sub
pop
jns
loop
add
xchg
jl
cmp
out
loopne
push
xor
inc
jns
fcomps
mov
popa
push
test
movsl
pop
lock
xor
fs
dec
arpl
jmp
imul
jg
jecxz
cmp
filds
adc
sbb
mov
std
pop
scas
and
outsb
mov
outsl
mov
ljmp
int
in
adc
pop
jecxz
fwait
stos
icebp
or
push
jg
push
scas
jecxz
ds
es
ss
mov
xchg
js
cld
loopne
sub
push
add
push
mov
adc
sti
sbb
mov
or
iret
in
push
push
popa
mov
and
push
ja
lods
dec
cs
adc
jo
lret
pop
clc
repnz
add
loop
lods
xchg
add
dec
xor
test
aam
fisubrs
and
xchg
or
lods
cmpsl
xchg
mov
mov
dec
push
add
mov
cmp
xor
push
pop
xchg
subb
sbb
xchg
or
lods
popa
outsl
fildl
std
and
jg
lods
sbb
xor
mov
fimuls
test
jbe
popf
cmpsl
shlb
dec
adc
and
mov
mov
loop
icebp
mov
push
and
bound
pop
lock
loopne
dec
sub
dec
pop
popf
loopne
jecxz
xor
rorb
pop
jmp
je
scas
aaa
cld
aaa
sbb
inc
arpl
out
arpl
adc
push
add
push
mov
test
mov
leave
pop
pop
rolb
rcrl
xor
aaa
sbb
adc
adc
js
aaa
inc
fildl
push
xchg
fistpll
inc
test
or
call
cs
cmp
inc
in
xchg
push
cmp
in
mov
es
cmpl
sbb
lret
cld
add
das
and
outsl
in
and
cs
mov
cwtl
and
add
stos
inc
es
fildll
and
mov
or
hlt
mov
insl
sbb
mov
jecxz
pop
adc
mov
and
mov
push
pop
adc
les
mov
and
es
pushf
adc
adc
in
add
mov
and
adc
jbe
adc
xlat
cmp
push
lea
ljmp
sub
out
push
movsl
call
nop
push
jmp
mov
add
pushf
les
call
pop
movsb
add
sbb
loopne,pn
push
push
vmwrite
mov
inc
sbb
pop
adc
xchg
fsubp
fistpll
sbb
push
mov
hlt
push
mov
test
cltd
mov
stos
std
and
call
xchg
pop
mov
adc
fwait
mov
clc
stc
shl
add
add
inc
and
in
call
xor
scas
add
je
cmp
mov
sbb
ss
rclb
push
push
ret
jg
or
or
sub
xchg
incl
out
rorl
in
add
mov
add
jg
popa
mov
es
xchg
xor
decl
hlt
insb
or
scas
mov
hlt
xor
lods
in
mov
push
fsts
xchg
mov
fildll
rclb
cwtl
push
std
cmpb
dec
xchg
push
fimuls
mov
sub
push
in
scas
push
sub
add
jne
and
arpl
inc
mov
outsl
inc
pushf
je
bound
jge
push
imul
lahf
xor
fimull
pop
pop
scas
cli
lea
gs
cmc
fiaddl
icebp
das
push
inc
iret
sarl
xchg
incl
mov
pop
outsl
jle
jge
lea
mov
sarb
push
push
fisubl
mov
jo
sbb
shll
jge
int
stc
xchg
or
mov
push
fdivrp
fistps
out
jmp
shr
into
lahf
das
into
call
cs
lea
jge
pop
add
and
rorl
inc
flds
je
sbb
stc
nop
popa
loopne
dec
xor
mov
aas
or
dec
sub
mov
stos
ret
dec
les
aaa
add
jne
mov
addl
xor
mov
push
jmp
push
sub
sub
stos
adc
adcl
cli
push
adc
pushf
mov
dec
xchg
pop
xchg
dec
aaa
insb
xchg
or
xchg
or
pushf
sbb
push
xor
push
add
shll
jge
and
sub
outsb
push
dec
sbb
fisubrs
and
xchg
and
inc
jb
test
xor
int
iret
ffree
jnp
pop
mov
fiaddl
shlb
insb
mov
sub
fildll
cmp
mov
cmp
and
adc
mov
dec
push
test
outsb
lock
push
test
mov
outsb
ret
jnp
dec
insb
sbb
mov
xchg
mov
stos
fmull
pop
rcr
popa
mov
inc
dec
in
pop
xchg
dec
mov
scas
scas
pop
xchg
fsubrs
pop
in
xchg
sar
inc
les
pop
jp
cmpb
push
pop
lds
movsb
and
pop
xchg
dec
pop
push
and
icebp
lea
lcall
or
ds
test
push
sbb
fcomi
mov
sbb
std
and
lcall
stos
lahf
pop
decl
push
popl
dec
jmp
scas
je
jnp
clc
call
add
movsb
xor
adcl
xchg
push
imul
mov
pop
test
mov
je
aam
inc
xchg
mov
adc
fs
pop
push
or
call
fcmovnu
ljmp
out
lahf
aas
in
push
cs
lcall
jle
mov
insl
and
and
adc
cmp
sbb
and
mov
or
mov
adc
push
arpl
sar
cmpsb
add
int3
lock
enter
lock
mov
fistpll
xchg
cld
pop
jmp
xor
add
sub
lret
xor
and
movsb
adcb
in
jp
filds
inc
fcoms
test
in
xchg
mov
or
stc
mov
jp
mov
mov
xchg
dec
into
adc
sub
icebp
push
out
pop
jbe
pusha
pop
dec
cmp
test
popl
pusha
or
arpl
test
ljmp
das
jl
inc
mov
jge
xlat
mov
arpl
pop
aad
in
push
mov
inc
pop
mov
sahf
std
incl
pop
ljmp
sbb
sbb
or
daa
jg
call
mov
push
fwait
add
imul
jmp
xchg
and
movsb
sub
andl
idivb
jmp
mov
popf
aas
data16
shlb
mov
push
sbb
aas
push
idivb
dec
push
jle
mov
push
pop
mov
push
push
xor
sub
add
cmp
rolb
sub
jg
or
out
nop
cmpb
mov
or
sahf
sahf
out
jecxz
sub
call
stos
ret
mov
pop
mov
out
les
xor
xchg
outsb
movsl
dec
add
pop
mov
cltd
insb
out
ret
pop
xor
xchg
push
movsb
sbbl
cltd
sarl
add
adc
imul
mov
xor
subl
lret
jp
mov
test
aaa
xor
jno
mov
incl
bound
arpl
sahf
sbb
push
or
mov
inc
mov
adc
inc
pushl
cli
xchg
addb
fisubl
test
push
test
jmp
out
loope
js
push
mov
add
cmpb
mov
jmp
lods
and
outsl
add
repz
mov
insl
sti
inc
ja
and
or
add
or
push
nop
ljmp
jmp
mov
inc
jl
xorl
into
ljmp
fwait
sub
aad
mov
sub
pop
clc
dec
adc
mul
in
shrl
pop
stos
cmc
mov
sbb
decl
adc
and
leave
arpl
mov
mov
aam
pop
hlt
movlps
mov
std
jbe
push
pusha
pop
jg
out
in
scas
shl
or
ret
test
lea
or
aas
push
mov
dec
andb
xor
outsl
pop
cmpsb
pushf
lods
xchg
loop
imul
mov
mov
inc
cmp
ja
jbe
add
in
jl
cmpsl
or
sbb
lock
adc
mov
decl
or
imul
lods
aas
pop
add
and
add
push
xchg
cli
outsl
jl
mov
addr16
int3
mov
cld
loop
lret
pop
jg
cmp
xchg
or
stos
dec
xlat
push
xor
sbb
or
xor
fstpt
cli
test
sub
imul
mov
adc
xchg
stc
stos
or
mov
inc
adc
push
pop
ljmp
js
mov
mov
xchg
stos
movl
jl
insl
loopne
lret
bound
jbe
cli
fcoms
mov
loopne
ret
fidivrs
je
test
cmovs
mov
sbb
inc
mov
xor
mov
mov
push
orb
inc
add
xchg
jge
mov
loope
dec
mov
sahf
pop
jle
pusha
or
mov
das
adc
add
pop
cmp
sbb
lock
decl
add
pop
mov
roll
mov
add
ss
cs
inc
hlt
sbb
cmp
xchg
inc
mov
test
xchg
js
pop
movsl
test
jg
inc
xchg
mov
int3
cmc
and
ds
dec
inc
add
arpl
incl
inc
aas
jp
fwait
mov
xchg
add
aas
fsubr
mov
pop
outsb
ds
and
pop
call
pop
add
push
mov
jns
mov
int3
cmp
push
and
movsl
stc
cld
pop
mov
lahf
mov
aas
movsl
add
iret
push
pop
icebp
or
jb
stc
or
cs
push
push
inc
cmp
hlt
sbb
and
jge
in
sbb
cmp
jmp
inc
out
add
subl
add
push
call
lret
andb
hlt
into
pop
movsl
call
out
mov
fcomps
xor
scas
in
and
cmpsl
filds
and
idivb
push
inc
or
jmp
dec
nop
mov
stc
jne
sbb
cltd
sbb
mov
dec
dec
dec
sbb
jl
cmp
jne
jge
in
ficoml
addl
xchg
ds
inc
inc
lock
mov
sbb
rolb
jmp
mov
fldenv
out
xorl
pop
sub
dec
outsl
lcall
xor
lock
pop
add
mov
addr16
andl
loop
in
aad
inc
in
rcll
push
scas
nop
and
dec
jg
or
clc
sbb
cltd
test
outsl
push
mov
mov
pop
and
ljmp
lods
int3
je
add
add
sbb
dec
adc
mov
adc
adc
jmp
fcoml
out
add
and
ret
arpl
fisttpl
test
or
or
pop
pop
cmc
pushl
mov
ret
ja
sub
sbb
sti
call
mov
push
sarb
adc
mov
aaa
add
popa
arpl
cld
movsl
sbb
xor
inc
test
incl
add
leave
ret
inc
imul
jl
sub
push
ja
cltd
das
fucomp
add
inc
ret
jmp
xlat
lock
in
push
into
and
or
test
lcall
push
mov
lcall
pop
pop
add
icebp
loope
dec
xchg
pushf
lock
mov
gs
xchg
xchg
test
mov
and
outsb
and
dec
enter
gs
pop
test
xlat
and
pop
outsl
mov
in
push
fistps
jp
popa
mov
fiadds
mov
dec
lcall
sub
jge
orl
sub
jecxz
or
nop
cmp
loop
xchg
inc
ss
in
lock
call
cmpsb
and
cli
pushl
adc
in
or
xor
mov
mov
add
cmp
iret
inc
shl
clc
shrl
xchg
push
adc
mov
pop
rcrl
imul
scas
pop
mov
scas
xchg
js
call
rcll
cld
mov
pop
clc
shrb
or
dec
fsubs
mov
les
mov
jae
mov
xor
mov
pop
adc
filds
cmp
adc
push
mov
in
cmp
mov
add
jmp
cmc
nop
inc
cwtl
mov
test
xlat
fimull
jns
xor
fistl
add
dec
loopne
bound
mov
sub
mov
sub
insl
sti
or
and
inc
cmpsb
insb
push
gs
ljmp
xchg
cltd
addps
enter
pop
dec
pop
popa
inc
scas
inc
cmp
jl
adc
mov
and
clc
inc
aaa
mov
dec
inc
je
cli
adc
add
inc
loope
xchg
imul
decb
dec
cmpsl
out
cmp
inc
inc
or
sub
and
cmp
mov
push
add
pop
mov
sbb
pop
jp
push
fs
adc
mov
adc
or
mov
iret
sarl
mov
lea
add
pop
xchg
fcmovbe
push
mov
mov
mov
sbb
pusha
movsb
xchg
fmull
pop
stc
sub
pop
cmp
lahf
jns
xlat
inc
xor
inc
xor
jmp
cli
cmpsl
pop
arpl
pop
insb
mov
and
ret
xor
xchg
jmp
dec
roll
repz
test
shll
lret
psrad
sbb
scas
and
push
sub
inc
stos
adc
jb
incl
pmaxub
mov
and
sbb
mov
jmp
test
jl
imul
dec
add
cmp
data16
sub
mov
scas
mov
xorb
aas
and
mov
lea
and
pop
xchg
popa
pop
addb
inc
sti
decl
and
std
popl
cmp
in
stos
push
mov
lock
cli
mov
inc
mov
das
xchg
adc
mov
addr16
incl
inc
int3
inc
add
mov
adc
xchg
loope
mov
pop
mov
adc
test
push
dec
pop
cli
arpl
aam
inc
hlt
cmpsb
sub
sub
add
mov
pop
in
cmpsl
test
push
leave
jecxz
in
mov
pop
mov
lods
fsubs
das
sub
pop
lods
das
push
jge
js
cmp
movsb
clc
aas
push
pushl
mov
mov
lahf
inc
inc
mov
mov
loop
aaa
out
mov
xchg
cli
mov
jg
push
sarb
add
and
mov
jb
xchg
pop
xchg
push
leave
xor
shlb
mov
mov
sahf
out
pop
in
adc
popa
and
adc
out
sbb
mov
arpl
enter
jecxz
jge
pop
inc
sbb
or
lods
ret
lret
xchg
cmp
lea
sub
arpl
repnz
mov
loope
out
fptan
sbb
icebp
mov
jp
push
test
inc
out
fbld
and
sub
mov
jae
push
push
test
or
mov
mov
mov
imul
push
test
add
nop
inc
sbb
mov
mov
pop
xlat
push
xor
mov
je
outsb
dec
lock
pusha
jecxz
add
or
pop
aad
sbb
rol
sar
xor
pusha
mov
ret
mov
loopne
xor
roll
adc
mov
xor
icebp
or
and
adc
shrb
sub
testb
mov
push
xlat
insl
xor
outsl
sar
mov
jp
loopne
aad
xchg
xchg
dec
lods
mov
jl
jmp
inc
or
push
mov
icebp
lods
ljmp
jae,pn
mov
mov
jmp
mov
inc
shr
push
lods
jmp
pop
mov
lahf
repnz
mov
je
lcall
xchg
xor
pop
clc
mov
iret
inc
insb
mov
push
jge
push
insl
lods
sub
mov
pop
out
push
adc
rcrl
test
sbb
js
sbb
or
pop
roll
xchg
jno
fldcw
fbstp
ss
add
into
jns
push
pop
dec
jbe
xchg
shll
cmpsl
xchg
in
shlb
mov
sbb
cmpsl
dec
jle
xchg
fisubrs
pop
cmc
aaa
xor
mov
jge
cmc
jmp
fistpl
mov
push
sbb
adc
sti
jne
cmp
push
fsubl
mov
or
mov
movsb
test
push
ja
fisttpl
cmp
xor
or
cmp
cmpsb
inc
and
fdivs
jmp
sbb
mov
jle
xchg
popf
pop
inc
cs
mov
and
daa
js
mov
inc
lock
adc
fcom
dec
arpl
lods
gs
loopne
cmp
cmp
jo
xchg
jp
add
lds
push
and
xchg
lods
add
das
cld
mov
daa
loope
test
fimull
mov
adc
das
inc
mov
cld
xchg
popa
pop
sbb
push
es
loopne
jnp
pop
adc
outsl
das
sbb
sbb
xor
sbb
cmp
lods
cmp
dec
add
outsl
dec
mov
pop
xor
jo
faddl
inc
jno
pop
inc
xchg
loopne
inc
outsl
xchg
sbb
push
add
mov
adc
js
fisubrs
adcl
sub
jno
jno
adc
push
and
jmp
or
jp
jb
inc
push
xor
jle
out
or
inc
std
lea
inc
shr
add
adc
sub
test
fdivrl
xor
add
sbb
dec
std
scas
mov
or
pushf
mov
inc
in
add
inc
sbb
shlb
js
inc
push
mov
and
adc
dec
jl
push
movsl
and
rcrb
add
std
pusha
lret
push
stos
inc
notb
cmp
adc
fidivrs
inc
repnz
fwait
pop
decb
loop
mov
mov
icebp
and
aaa
shll
je
jae
mov
fdivl
fldt
sub
test
andl
ljmp
nop
xchg
cli
cmpl
dec
outsl
jl
sbb
xchg
ret
bound
mov
movsl
gs
test
xlat
mov
mov
hlt
cmpsl
and
and
mov
inc
add
jge
mov
repz
js
and
pop
insl
mov
sbb
adc
cld
pop
in
ss
dec
adc
es
ret
cmp
stos
mov
xchg
outsb
lds
xor
jo
mov
sti
fisubrl
mov
int3
dec
mov
ljmp
cwtl
jp
loop
cmpsb
xchg
imul
out
stos
das
xchg
adc
ret
jp
loope
mov
and
out
clc
scas
cli
nop
shl
mov
xor
rolb
loop
ljmp
das
or
xchg
lea
clc
pop
inc
mov
enter
sub
add
aas
sub
mov
add
or
lcall
jo
in
dec
cltd
mov
push
scas
adc
jnp
dec
test
lds
outsl
mov
lcall
out
cpuid
push
add
push
mov
rcr
pop
and
jg
outsb
sbb
mov
cld
into
mov
jmp
and
mov
cmp
clc
or
sbb
mov
fldl
add
fisubl
fs
out
push
mov
add
out
js
mov
push
dec
mov
getsec
adc
je
cmp
mov
lods
push
cmpsb
fidivrs
stos
dec
push
outsb
fadds
dec
inc
jl
icebp
pop
fbstp
or
rorl
repz
fwait
call
leave
popf
mov
test
dec
leave
lods
xchg
ja
pop
push
mov
incb
mov
xor
mov
aam
mov
jge
fisubl
adc
pushf
inc
out
sub
aam
cld
or
addr16
je
mov
lods
add
xor
cmc
arpl
dec
and
fs
lods
or
addr16
and
out
adc
test
pop
xlat
and
add
dec
inc
fwait
xchg
dec
mov
data16
and
sub
cs
fistps
mov
fsubrl
push
ja
in
cs
scas
out
or
pushf
or
out
jno
jb
mov
ds
inc
addl
incl
push
inc
mov
dec
mov
push
push
mov
pop
xchg
pop
lds
cltd
inc
jne
jecxz
xchg
lods
inc
jp
aad
adc
mov
or
mov
adc
repnz
add
sar
aaa
outsb
insl
or
dec
stos
imul
sti
loope
cli
or
jg
mov
daa
mov
sbb
stos
ljmp
jl
sub
sbb
fistl
jo
test
mov
mov
fwait
andb
leave
mov
mov
cmp
jne
cltd
or
insb
adc
call
into
je
sub
fs
clc
jns
pushl
push
mov
test
scas
inc
dec
gs
aas
sahf
jmp
mov
cmpsb
push
std
mov
add
adc
das
imul
sbb
ljmp
loop
ljmp
xor
inc
daa
cld
pop
push
outsb
dec
cmp
jne
das
ds
dec
mov
fcoml
adcb
lods
or
dec
jle
push
or
pop
out
lods
lea
ret
sarb
outsl
or
push
outsb
xor
jg
cmc
sub
shlb
nop
sbb
ljmp
inc
cwtl
pop
jg
mov
inc
mov
repz
mov
inc
inc
addb
sahf
xor
in
loope
stc
jle
test
add
outsb
ja
sbb
incb
jecxz
outsl
adc
push
cmc
inc
or
cmp
fidivrl
sub
jle
das
dec
sub
xchg
jle
out
aam
xor
bound
sbb
ljmp
xchg
pop
jno
lahf
xchg
cmp
mov
inc
jmp
out
mov
and
dec
mov
movsl
incl
mov
test
sbb
filds
in
push
jl
mov
mov
dec
inc
test
fisttps
cmpsb
sbb
mov
cmp
cld
aas
icebp
mov
adcl
sbb
pop
push
das
xor
inc
dec
pop
cmc
decl
jl
mov
pushf
jmp
pusha
aaa
sub
orl
xchg
loopne
loopw
js
jnp
call
xchg
mov
adcl
mov
mov
or
mov
cli
or
add
into
jl
js
pushl
icebp
mov
adcb
sbb
adcl
mov
push
lock
sbb
outsl
outsl
fdivp
in
push
leave
sahf
cmp
xor
inc
lahf
popf
dec
mov
mov
adc
dec
push
test
or
fmull
pop
push
and
aam
xor
or
xchg
adc
mov
fdivr
pop
and
sbbl
mov
xchg
fisttpll
push
or
sub
or
fstps
cmp
icebp
sbb
movups
int
aad
pop
jmp
ss
add
dec
inc
enter
movsl
lret
lods
outsl
jae
adc
sbb
nop
iret
pop
or
movsb
push
jmp
jne
xchg
inc
call
sub
ja
dec
lea
popf
fwait
jnp
outsl
push
ljmp
xchg
jg
jg
in
clc
pop
fs
movsb
push
mov
pop
daa
pop
int3
pop
sti
dec
xor
jge
call
mov
sub
jle
or
dec
push
adc
push
fsubp
mov
sti
das
fwait
lods
mov
and
dec
test
ds
movsl
dec
jbe
loope
sub
lods
jmp
ljmp
nop
shl
daa
xor
loope
data16
xor
enter
xchg
rorb
dec
add
inc
push
jnp
jmp
adc
push
push
xlat
dec
aaa
sub
aam
add
sbb
jge
adc
mov
test
ja
aad
jecxz
xchg
lcall
fs
or
adc
call
sub
call
add
aam
sbb
mov
sub
pop
mov
mov
cmc
in
in
add
sti
cmp
add
mov
dec
pop
mov
dec
push
test
movsb
or
jmp
push
incl
rcrb
daa
sbb
mov
dec
jnp
cmpsb
jbe
sub
adc
arpl
sbb
mov
add
movsb
push
and
pop
fwait
mov
fs
icebp
int3
shld
rorb
sub
jne
pop
mov
and
addr16
in
xlat
sub
pop
push
stos
jo
sub
call
in
inc
or
setae
dec
pop
adc
or
cwtl
mov
insl
std
in
mov
push
cld
fstpt
push
iret
sti
outsl
pop
pop
add
lahf
das
sbb
inc
jbe
mov
outsb
or
dec
pop
xchg
ljmp
or
leave
adc
sarl
ret
std
pop
out
fiadds
dec
pop
das
and
xor
jg
add
pop
adc
mov
das
test
inc
mov
stc
cld
jp
dec
mov
inc
xchg
xor
xchg
mov
sbbl
sub
ret
out
add
xor
fistps
js
sbb
stos
and
rclb
das
jge
mov
cmc
adc
mov
std
das
push
scas
add
call
push
pop
sub
nop
push
out
in
cmovns
or
pop
or
dec
sub
jo
les
xchg
ret
sbb
insl
out
sbb
push
out
or
or
scas
and
fbld
clc
push
arpl
pop
shrl
pop
daa
cld
inc
mov
dec
push
or
inc
inc
in
addb
sbb
mov
out
cli
aaa
fs
mov
sbb
dec
es
add
cs
adc
dec
jle
mov
out
mov
sub
pushf
xlat
es
sub
fucomip
push
push
fstpl
xchg
mov
lcall
mov
mov
or
add
mov
lcall
lahf
test
dec
jnp
adc
stc
xor
outsb
lcall
stos
and
testb
xchg
xchg
mov
icebp
notb
or
mov
lahf
dec
int3
loopne
or
nop
test
dec
fs
jmp
pop
icebp
idivb
movsl
lret
lea
dec
pushl
clc
push
jecxz
or
or
test
das
jo
loopne
add
jg
test
mov
mov
sub
insb
popf
ds
push
fcmovnbe
sub
fnstsw
mov
jns
and
fdiv
incl
stos
insl
out
test
sarb
sub
mov
and
sbb
push
outsl
cmp
clc
ret
push
sbb
out
outsb
mov
sbb
enter
insb
pop
enter
outsb
imul
nop
or
mov
bound
adc
sbbl
lds
mov
adc
enter
dec
sub
stc
repz
cmp
mov
inc
sub
clc
lea
cli
test
mov
or
sub
mov
adc
mov
add
sbb
jge
adc
int3
addr16
sub
mov
aaa
pop
mov
xor
stos
adcl
inc
inc
jno
mov
and
adc
decl
jb
push
rcrb
idivl
dec
aaa
jp
mov
inc
jge
fsts
ja
sub
adc
xchg
repz
dec
movsl
xor
lods
mov
jmp
add
jmp
and
cld
mov
sbb
roll
js
push
ljmp
inc
fs
xor
cs
push
or
in
cmp
outsl
das
les
and
inc
shll
or
faddl
and
clc
ljmp
cmp
aas
aam
imul
pop
movsl
ds
pusha
outsb
or
xchg
and
and
sub
sar
jno
or
insb
enter
cld
sub
lcall
sbb
repnz
test
mov
mov
cltd
icebp
dec
xor
push
adc
or
call
pop
pushf
or
jl
mov
mov
out
adc
cld
dec
shlb
ret
clc
pop
stc
test
sub
leave
xor
scas
cmp
test
mov
fsubs
adc
std
lods
arpl
xlat
clc
lcall
jmp
sbb
loop
push
daa
or
in
sub
mov
pop
cmc
lahf
int3
mov
push
add
and
push
out
add
arpl
ljmp
scas
push
push
add
inc
ss
push
lods
push
push
data16
inc
fwait
enter
add
jb
lahf
jo
cwtl
sub
js
das
popa
xor
aas
dec
stc
push
push
xor
cmp
pushf
mov
and
cltd
fisttps
int
mov
or
je
push
sub
or
dec
xchg
add
fadds
fs
aad
pop
fstpt
and
mov
and
cmp
mov
aam
mov
or
or
add
and
add
inc
add
and
and
and
push
adc
mov
inc
and
and
mov
and
adc
inc
add
nop
mov
adc
dec
and
add
push
inc
and
or
imul
inc
nop
and
adc
or
cmp
or
shlb
fdivl
aam
dec
mov
mov
mov
adc
ja
adcb
nop
aam
and
sub
mov
and
and
or
jnp
in
inc
addb
add
adc
jns
test
push
jae
mov
mov
scas
inc
jo
pop
imul
imul
pusha
mov
fcmovbe
sub
insl
out
adc
outsb
jmp
sbbb
xor
and
lods
fnstsw
dec
and
lods
mov
inc
xchg
jns
add
fistpl
fildl
out
mov
testl
adc
adc
lods
mov
xor
popa
jge
rcrb
insl
dec
inc
adc
xchg
or
xor
rolb
and
es
fcoml
or
outsb
lods
fs
je
adc
pop
mov
out
cld
pop
imul
rclb
aas
push
and
lods
rcrb
jo
pop
sahf
adc
push
int3
and
out
aaa
mov
push
inc
stos
popf
adc
insb
inc
or
or
xor
add
sub
sub
sbb
push
cmp
pop
mov
inc
stos
pop
push
scas
rcrb
or
inc
insl
fimull
test
push
in
xor
push
push
dec
subl
lods
mov
or
push
imul
push
test
push
stos
test
pop
xor
repnz
rep
mov
imul
idivb
lods
sub
mov
insb
imul
cmp
mov
inc
or
mov
and
fsubs
mov
push
inc
insl
sub
sbb
xor
and
add
pop
jae
add
outsl
push
sbb
int
and
and
and
add
cmp
in
shlb
mov
shl
jo
push
xchg
lds
mov
push
jp
fwait
and
nop
dec
mov
imul
dec
and
pop
adc
inc
pop
or
add
and
xchg
mov
inc
rcl
pop
mov
inc
adc
aaa
cmpb
adc
insl
mov
incb
hlt
dec
and
shl
js
sub
or
and
sbb
ror
sti
inc
push
push
mov
out
dec
or
or
inc
push
ficompl
push
sub
outsl
or
add
gs
mov
sbb
in
rolb
iret
in
dec
cwtl
xchg
rorb
inc
or
mov
add
push
add
sbb
or
push
add
push
mov
repnz
adc
jo
mov
and
stos
mov
in
nop
loope
and
rcrl
add
cmp
cmp
xchg
fimull
sub
jo
xor
push
or
mov
pusha
push
dec
mov
imul
in
push
mov
and
add
xchg
sbb
aad
push
or
test
mov
pusha
jo
xchg
pop
ret
andb
cltd
dec
mov
sbb
cmp
lods
mov
xor
lods
mov
stos
insl
outsb
inc
inc
pop
pop
data16
lods
rcrb
pop
stos
jns
daa
insl
lods
popf
pop
and
dec
dec
jg
dec
fwait
lret
xor
shlb
push
cmp
cmp
adc
int
xor
and
es
jo
and
pop
sub
sbb
loopne
xlat
inc
sub
imul
mov
or
mov
xchg
dec
scas
les
lcall
cltd
add
idivl
and
and
test
xchg
inc
popa
adc
add
inc
adc
cltd
lcall
cmc
pop
mov
popa
sub
rcl
jo
repnz
pop
add
xor
push
mov
shll
cmp
xor
mov
pop
xchg
or
cmp
mov
ficompl
inc
scas
cmp
xlat
stos
or
cld
pop
adc
cmp
loope
out
rcrb
rclb
jge
sbb
outsb
pop
and
jo
pop
lods
pop
fsubrl
inc
sub
into
aad
lea
repnz
xor
jbe
sbb
push
push
push
scas
and
push
shlb
cmp
pop
xor
xor
dec
xchg
loope
lods
mov
aaa
lods
daa
dec
loope
sbb
mov
mov
pushf
popa
dec
lret
lahf
and
mov
ss
or
subb
pop
cmp
adcl
sbb
mov
and
adc
mov
test
dec
add
mov
add
add
mov
jbe
add
add
nop
inc
nop
add
lods
mov
mov
mov
and
ss
add
pop
aad
ljmp
jmp
push
pop
add
adc
dec
adc
mov
mov
xor
jo
inc
inc
add
or
push
jge
adc
jne
pop
adc
sub
and
dec
aad
pop
adc
add
or
push
inc
lods
insl
lods
push
mov
outsl
lea
push
xchg
jl
sbb
push
insl
push
adc
pop
test
add
push
test
movsb
push
das
add
and
push
mov
inc
lahf
lret
sub
mov
add
add
adc
pop
inc
mov
popa
nop
add
jne
add
and
pop
aam
lods
push
lea
pushf
mov
pop
mov
adcl
mov
mov
mov
adc
add
repz
gs
out
or
nop
mov
add
and
inc
jle
xlat
pop
in
adc
stc
push
shrb
inc
and
loopne
push
cltd
stos
mov
pop
xchg
xchg
adc
ficoml
pop
xor
lods
push
lods
cltd
mov
ja
or
fwait
adc
aad
call
stos
mov
jae
add
adcl
xchg
pop
iret
sub
push
jg
pop
or
pop
push
dec
push
sbb
fcoms
add
and
jl
or
mov
imul
fldenv
addb
rorl
push
je
callw
sub
inc
sbb
sbb
xor
cmp
inc
and
mov
and
mov
cmp
cmc
mov
mov
add
ret
mov
pop
jg
insb
lods
adc
and
stos
out
std
aas
jge
push
xchg
add
stos
push
push
and
ret
pop
sbb
pop
inc
stc
clc
sbb
inc
shlb
mov
or
cmpsl
or
or
fs
and
xor
adc
add
imul
inc
xor
mov
cmp
push
add
js
and
pusha
sti
rorb
lods
xor
or
or
rolb
mov
lcall
aad
adc
lods
rolb
mov
mov
inc
rorb
push
imul
add
pop
jae
mov
mov
mov
fs
jp
sub
push
push
or
xchg
push
or
add
stos
jg
push
push
push
lods
pop
add
fdivl
fisubrl
pop
arpl
mov
sub
outsl
inc
imul
adc
push
lods
adc
sub
cmpsb
ror
shlb
sub
cmp
rcrl
jl
pusha
push
outsl
sub
insl
cwtl
push
or
pop
sbb
or
pop
cmp
shrb
add
fs
jmp
arpl
popl
add
sti
dec
push
push
inc
sub
pop
xchg
mov
inc
pop
jmp
fwait
pop
data16
pop
pop
mov
xor
pop
and
and
loopne
mov
sub
sub
push
jnp
rcrl
std
and
mov
into
sub
xor
mov
inc
daa
scas
sahf
and
test
rorb
dec
out
xchg
lret
xor
std
fs
insb
es
add
cmp
add
aad
inc
add
inc
test
and
xor
je
push
adc
add
mov
mov
push
or
scas
jno
dec
cmp
jae
repnz
das
push
xor
lcall
pop
rorb
dec
daa
je
or
cli
mov
pop
adc
xchg
dec
cwtl
mov
xlat
stos
adc
in
inc
sub
jmp
js
mov
jo
aad
mov
rcrb
int
sarl
aad
data16
cmp
inc
push
cs
mov
sub
add
fnsave
or
cmc
pop
add
push
fadds
lods
adc
sub
pushf
or
stc
fs
push
fimuls
mulb
pop
aad
xchg
sub
testb
das
add
ja
in
es
bound
push
sub
lcall
push
int
test
data16
push
mov
mov
mov
imul
adc
bound
scas
mov
in
adc
xlat
and
or
enter
jae
sbb
add
lcall
mov
test
inc
add
fisttpl
imul
mov
add
test
jge
shll
pusha
mov
inc
mov
lahf
and
or
adc
cmpsl
sub
or
inc
xlat
rorb
scas
pushw
and
rcrb
jbe
popf
lret
pop
mov
jae
popf
sbb
add
scas
test
cmp
nop
mov
pop
jae
push
add
inc
cmpsl
inc
leave
inc
rcl
xchg
repz
test
xlat
lcall
shrb
mov
enter
call
ret
leave
xlat
nop
loope
subl
push
inc
arpl
pop
dec
sarl
mov
push
int3
cmp
add
imul
shrb
add
lods
sbb
nop
into
ss
lcall
xor
sbb
ret
jno
xchg
lret
inc
iret
test
sbb
pop
add
and
and
andb
adc
sub
mov
mov
or
shlb
bound
pop
cmp
adc
xchg
mov
jne
lcall
mov
mov
dec
mov
out
lds
int
pop
rcrb
subb
cmp
dec
add
mov
imul
and
rcrb
adc
pushf
and
and
pop
mov
orl
xchg
ss
sbb
bound
inc
xor
and
cltd
pop
mov
xor
push
into
push
andl
xor
int
cwtl
push
or
cld
dec
mov
lret
bswap
and
adc
ret
or
data16
or
mov
stos
rcrl
push
int3
jl
pop
xor
jl
add
mov
pushf
dec
push
dec
lods
inc
sbb
mov
pop
jae
jne
jg
nop
in
inc
jae
test
push
inc
mov
sbb
xchg
inc
loope
andl
mov
dec
sbb
mov
lea
mov
lcall
and
insb
mov
push
adc
mov
and
add
inc
and
mov
push
add
mov
add
inc
popa
fs
fcmovnu
push
add
jb
inc
gs
imul
outsb
push
imul
je
jb
outsl
arpl
fs
arpl
insl
adc
push
jns
in
jbe,pt
sbb
outsw
push
inc
jne
jb
push
jb
sti
outsl
mov
dec
fs
imul
push
xor
fs
popa
outsb
fs
or
dec
sub
call
dec
jne
je
inc
jns
push
outsl
push
imul
insl
pop
divl
popa
inc
jo
inc
adc
jo
fnsave
mov
jbe
jns
xchg
bound
inc
insb
jbe
pop
int3
fwait
sub
imul
jnp
jae
outsl
outsb
or
xor
jb
outsb
addr16
test
jns
add
push
jns
inc
xchg
or
lods
insl
test
je
jb
jae
lods
int
ss
data16
outsl
outsb
imul
je
pop
gs
outsl
ret
lods
insl
scas
fildl
jbe
ja
arpl
dec
mov
gs
jle
lds
jae
sbb
popa
mov
sub
jbe
insb
jae
arpl
mov
filds
jae
adc
test
mov
test
jp
es
pop
mov
and
inc
pop
addr16
xchg
int
addr16
inc
outsl
jne
sub
pop
popa
xchg
inc
adc
push
dec
lret
rcrl
ffree
and
insl
cmovge
popa
pop
jo
jnp
jle
insl
insl
je
cmp
addr16
int
pop
addr16
xor
testb
imul
cld
inc
js
cmp
movb
xchg
inc
outsb
popf
jo
test
mov
lock
xchg
cmp
cld
mov
push
jne
sti
mov
cmp
add
outsb
mov
jno
imull
adc
jns
insb
jne
push
data16
and
dec
stc
xor
sbb
out
pop
jecxz
outsl
fs
dec
popa
mov
dec
movsb
arpl
xor
dec
bound
cmp
mov
push
popa
adc
dec
js
bound
sub
jbe
push
inc
je
mov
sahf
fsubs
or
fwait
mov
inc
dec
bound
arpl
add
mov
mov
test
ja
xchg
and
push
jbe
push
insb
sub
or
xor
rcrb
mov
mov
inc
dec
in
inc
incb
push
add
add
add
add
add
int
enter
xchg
add
and
pop
adc
add
add
or
icebp
add
sub
pop
push
cld
pop
fistpl
push
daa
sub
jo
add
andl
jg
je
js
aam
add
jmp
mov
jb
add
pusha
cs
popa
or
lods
jns
imul
sti
and
add
inc
add
pop
shrb
push
push
pop
popf
cmp
xor
inc
fs
out
pop
push
clc
push
daa
push
cmp
scas
shll
cmp
sub
jae
arpl
test
jo
sbb
cmpb
adc
pop
dec
test
add
add
add
add
inc
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
jo
add
jo
add
add
add
add
add
add
add
dec
add
addb
add
or
add
add
inc
mov
add
add
add
pop
add
rolb
add
clc
add
cmpb
add
add
andb
add
dec
add
addb
add
or
add
add
add
mov
add
or
add
add
add
add
lcall
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
add
add
add
pop
mov
or
xchg
pop
add
rolb
and
add
call
add
add
cmp
add
pusha
add
adcb
mov
add
mov
add
fadds
add
add
add
or
add
add
add
mov
add
or
add
add
add
add
add
add
add
add
add
rolb
lcall
add
add
add
add
add
add
fadd
add
lcall
add
add
add
add
add
add
js
add
lcall
add
add
add
add
add
ret
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
add
add
add
add
add
add
addb
add
or
add
add
add
ret
add
in
add
inc
jae
add
add
add
add
add
add
add
add
add
add
lret
add
hlt
sti
add
cld
leave
add
not
add
jg
add
cld
movl
lret
add
jle
add
jg
add
ja
add
jge
add
cld
cmc
add
dec
add
jle
add
jg
add
jbe
add
stc
add
jl
add
cmc
ret
add
je
add
cmc
fildl
jmp
aad
cli
jle
add
jg
add
not
add
jle
add
idiv
add
cld
filds
cli
mul
add
jle
add
div
add
cld
loope
out
std
repz
jbe
add
jl
add
ja
add
div
add
jle
add
jmp
inc
add
jge
add
hlt
aad
into
roll
fidivrs
add
jg
add
jge
add
jg
add
jne
add
jne
add
dec
add
cmc
iret
add
cmc
ret
add
std
jecxz
fistpll
add
jbe
add
cmc
jmp
add
neg
add
jl
add
jl
add
jbe
add
test
ljmp
add
jge
add
test
add
cmc
lds
jg
add
jge
add
std
repz
not
add
neg
add
jmp
fidivrs
leave
add
jge
add
hlt
aad
out
ja
add
jl
add
dec
add
jbe
add
jle
add
jne
add
jle
add
repz
jmp
add
hlt
lret
add
idiv
add
jg
add
not
add
jbe
add
jge
add
flds
sti
imul
add
ja
add
jge
add
jg
add
jbe
add
jge
add
std
std
add
test
fidivrs
lret
ja
add
in
add
push
add
jmp
add
out
into
ja
add
std
roll
hlt
filds
lret
jbe
add
jbe
add
filds
cli
in
fcomip
fldl
sti
jle
add
fildl
out
ja
add
jne
add
jle
add
test
fidivl
add
cmc
cmc
add
cmc
roll
push
add
je
add
imul
add
cmc
leave
add
ja
add
je
add
mul
add
je
add
ja
add
not
add
mul
add
jl
add
ja
add
jl
add
jl
add
cmc
filds
out
ja
add
cmc
in
add
jg
add
hlt
icebp
add
std
incl
iret
je
add
jge
add
fldl
lret
add
je
add
neg
add
ja
add
jmp
add
cmc
in
lret
std
leave
add
ja
add
imul
add
jbe
add
jg
add
jle
add
inc
add
ja
add
jge
add
std
int
out
cld
flds
ljmp
add
hlt
fldl
cli
jg
add
jbe
add
test
add
jne
add
jne
add
hlt
fldl
fdivrp
leave
add
neg
add
je
add
inc
add
jne
add
jbe
add
hlt
testl
push
jecxz
cli
cld
jecxz
jl
add
jge
add
jge
add
std
out
add
std
aad
fistpll
add
jne
add
jl
add
idiv
add
jge
add
jle
add
jge
add
je
add
idiv
add
cld
testl
fcomi
filds
out
jg
add
std
jmp
fidivrl
add
jl
add
jbe
add
hlt
testl
into
hlt
jmp
jmp
in
add
jne
add
div
add
jbe
add
call
add
jbe
add
dec
add
jbe
add
mul
add
jbe
add
hlt
roll
ja
add
jl
add
je
add
jbe
add
jl
add
jbe
add
inc
add
jle
add
std
cmc
add
jmp
out
hlt
loope
roll
cli
hlt
roll
push
filds
fistpll
add
std
aad
fidivl
fcomi
stc
add
ja
add
jge
add
cmc
iret
add
jge
add
testl
ljmp
add
cmc
fildl
fildl
fidivl
add
jg
add
jne
add
jmp
rcrb
aas
in
adc
or
cmp
inc
mov
adc
xchg
dec
push
popa
lock
adc
imul
test
leave
lret
sbb
repz
cmc
lcall
icebp
ret
and
pop
icebp
arpl
loopne
add
jmp
xor
ud1
aaa
scas
pop
sbb
and
push
and
clc
xchg
fisubl
xorl
jno
inc
movsl
inc
out
mov
sbb
fcoml
pusha
sbb
pop
mov
mov
mov
xorb
mov
lcall
ret
stos
out
pop
stos
add
jne
scas
es
ds
popa
in
xor
fwait
movsl
xor
xlat
ja
push
mov
movsl
and
vpminsw
add
les
or
clc
sub
lcall
push
sbb
push
jns
sbbb
or
arpl
js
leave
daa
incb
lods
sbb
repnz
adc
leave
in
insl
shlb
and
sahf
adcb
push
les
daa
je
sub
ja
sbb
mov
dec
push
xor
inc
xor
add
aad
push
aaa
ret
pushf
sub
add
xchg
imul
dec
push
mov
cwtl
add
jnp
add
adc
iret
ljmp
imul
pop
and
fs
add
sub
stc
mov
inc
cmpsb
pusha
pop
inc
or
adc
outsb
lahf
xor
push
inc
aam
inc
add
fsubr
enter
ss
std
mov
inc
dec
out
sahf
movsb
xchg
jmp
adc
lahf
xor
stc
push
test
bnd
cmp
lahf
sarl
jno
mov
sbb
mov
lods
call
add
xchg
push
mov
ja
and
mov
push
scas
ss
out
stos
cmp
into
bound
gs
daa
push
jl
and
inc
sbb
repnz
add
lds
push
cs
insl
scas
lcall
pop
ds
cs
mov
sbb
sub
cmpsb
push
pop
add
rcrl
jge
popa
lds
pop
fsub
inc
adc
mov
int3
push
sbb
mov
lea
xor
jge
xchg
shll
push
mov
inc
sub
xchg
mov
daa
fcoml
jl
push
mov
rorl
mov
das
shrb
std
cmp
sub
orl
mov
movsb
xor
mov
sub
push
in
pop
test
adc
cmpsl
pop
addr16
push
test
or
xorl
ds
and
int
nop
ss
movsl
pop
pop
addr16
push
aas
push
leave
out
fcmove
ja
cmp
add
fwait
xchg
adc
insb
scas
aad
dec
push
sub
xchg
repz
push
xor
bswap
pop
add
insl
stos
push
jp
test
insl
mov
and
xchg
xchg
sub
jno
push
mov
pop
call
js
pop
pusha
xchg
mov
imul
test
dec
clc
loop
movsb
in
or
and
mov
ds
mov
add
ds
mov
xor
je
stc
add
push
mov
inc
mov
jae
inc
mov
push
pop
or
out
mov
add
cmp
dec
mov
lock
pop
dec
lods
fs
bound
aaa
xor
lea
pop
loopne
xchg
fs
inc
push
iret
dec
test
stc
dec
dec
cs
xlat
mov
sbb
jecxz
mov
mov
cmp
mov
xor
insb
lcall
mov
test
push
iret
fsubrl
xor
aad
cmp
es
adc
push
repz
jmp
dec
sub
arpl
fwait
sar
jge
sahf
or
daa
jp
jmp
mov
add
dec
or
fs
addl
dec
inc
and
sbbl
add
mov
add
insb
jl
add
andl
and
adc
add
roll
or
add
or
add
and
roll
add
inc
push
and
or
adc
adc
sbb
mov
add
movsb
jge
add
add
and
and
adc
adc
push
add
and
inc
or
add
inc
jle
add
add
and
push
inc
dec
mov
rol
addl
adc
addb
fdivrl
add
dec
or
shll
nop
and
add
shll
adc
and
mov
and
add
js
add
test
adc
or
and
inc
inc
adcl
inc
inc
addb
adcl
adc
add
and
inc
adc
inc
inc
add
adc
and
test
or
dec
or
dec
adc
or
mov
add
and
or
dec
inc
or
or
mov
or
or
and
es
or
add
add
addb
add
adc
add
and
and
adc
dec
test
add
addl
inc
test
push
inc
and
inc
andb
adc
addb
addb
add
and
andb
orb
rcll
nop
es
or
add
nop
adc
add
addl
inc
or
addl
adc
adc
add
sbb
sbb
test
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
and
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
add
popa
add
add
imul
and
dec
add
arpl
add
add
add
or
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
je
and
dec
add
jns
and
inc
add
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsb
add
bound
and
inc
add
jns
jae
and
dec
add
jo
jae
and
inc
add
add
add
pop
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
outsb
add
jns
and
test
add
popa
add
add
outsl
add
and
xor
xor
xor
xor
sub
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
outsl
add
add
add
js
add
add
adc
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jae
and
inc
add
add
insl
add
and
inc
add
insb
add
ja
and
dec
add
jns
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
movl
add
add
cmp
add
dec
movl
add
add
jbe
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
