shlb
add
gs
add
gs
add
inc
add
inc
add
gs
add
gs
add
gs
add
gs
add
gs
add
gs
add
gs
add
arpl
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
arpl
enter
int3
arpl
shlb
add
arpl
fsubs
add
arpl
loopne
inc
add
arpl
call
arpl
lock
hlt
arpl
clc
arpl
cld
arpl
add
add
inc
add
fs
add
inc
add
fs
add
inc
add
fs
add
inc
add
fs
add
inc
add
fs
add
inc
add
fs
add
inc
add
fs
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
gs
add
gs
add
inc
add
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
gs
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
gs
add
gs
add
gs
add
gs
add
gs
add
gs
add
add
add
pop
and
or
xor
in
xor
cmc
push
and
and
jg
mov
dec
aaa
scas
xor
xor
aaa
fnstenv
lcall
cmp
cmp
stc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
pop
cmp
sub
dec
cmp
and
mov
cmp
inc
xor
aad
push
sub
ds
xor
mov
dec
ss
ds
aad
sub
and
xchg
ss
aas
fs
push
outsb
aas
push
ss
pop
ss
insl
ss
aas
imul
mov
add
add
aaa
repnz
mov
aas
mov
mov
add
and
lahf
aaa
pop
xor
js
das
aaa
push
xor
aaa
movsl
xor
cmp
xor
in
xor
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
pusha
add
bound
jecxz
inc
inc
in
arpl
ret
add
push
inc
jb
jne
inc
test
push
inc
jb
jne
inc
mov
add
push
dec
outsb
arpl
insb
dec
inc
outsb
jne
inc
inc
xchg
pop
and
push
jne
popa
pop
bound
cmp
je
jb
push
inc
xchg
pop
and
push
bound
add
add
add
cmp
outsl
es
imul
jns
inc
xchg
pop
and
insb
push
dec
out
push
insb
hlt
aas
inc
outsb
in
arpl
xchg
pop
and
lea
add
or
or
or
or
or
or
insb
push
push
andl
insl
imul
jp
add
inc
fs
pusha
inc
jb
jns
inc
add
add
add
pop
dec
and
push
push
outsb
xor
pop
xor
dec
insb
xchg
pop
and
and
push
arpl
jnp
fs
insb
dec
jae
jnp
add
jp
arpl
jl
fs
arpl
in
dec
arpl
jo
add
push
dec
arpl
gs
popa
rcrl
mov
arpl
mov
push
add
add
mov
jnp
add
inc
jo
arpl
jb
and
jp
push
outsb
insb
arpl
xor
pop
and
push
insb
push
push
inc
inc
gs
jp
xor
add
stos
jge
xchg
loopne
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
add
add
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
add
add
add
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
sahf
pop
and
xchg
push
and
inc
xchg
je
xchg
pop
and
xchg
pop
and
lea
and
fmuls
and
mov
and
xchg
pop
and
testl
and
add
add
add
xchg
inc
and
addb
jmp
xchg
or
xchg
pop
and
mov
push
and
test
and
test
mov
push
and
test
xor
test
and
js
xor
js
and
push
push
and
js
and
js
and
lods
xor
add
push
and
cmp
and
cmp
and
sub
and
sub
and
add
add
add
cmp
and
cmp
and
sub
and
clc
add
and
call
add
and
clc
add
daa
add
sub
xchg
loopne
add
loopne
add
loopne
add
fisubs
add
fisubs
add
sbb
add
add
add
pop
and
xchg
cs
add
fidivs
add
fbld
add
fisubs
add
enter
lcall
add
fiadds
xchg
fisubrs
add
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
lea
xchg
xor
arpl
bound
pop
int
xchg
pop
int
xchg
pop
int
add
add
add
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
lea
xchg
inc
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
clc
or
call
or
clc
or
clc
or
call
or
mov
or
test
and
test
and
mov
or
test
and
test
and
js
and
js
and
push
or
js
and
js
and
push
or
cmp
and
add
add
add
cmp
and
sub
and
sub
and
cmp
and
cmp
and
sub
and
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
mov
jbe
xchg
es
add
add
add
xchg
cld
jne
xchg
fidivs
xchg
shlb
xchg
cli
jno
xchg
sub
xchg
cmp
xchg
push
jb
xchg
xchg
jb
xchg
mov
jb
xchg
pushf
jb
xchg
pop
fists
pop
loope
lea
sti
push
xchg
pop
xorps
pop
and
pop
rcll
pop
jge
lea
test
push
lea
xorps
pop
jne
xchg
pop
lahf
push
add
add
add
lea
mov
xchg
pop
pop
push
lea
notl
pop
fstl
pop
xor
pop
int
xchg
pop
das
dec
xchg
pop
testl
pop
mov
dec
xchg
pop
leave
dec
lea
testl
int
xchg
pop
popa
dec
lea
and
fldl
and
aad
and
lret
or
and
pop
add
push
add
dec
add
add
add
add
pop
add
pop
add
cmp
and
cmp
and
imul
gs
add
xchg
pop
and
inc
add
xchg
pop
and
pop
add
dec
add
dec
add
flds
and
leave
add
leave
add
flds
and
flds
and
add
add
into
add
pop
inc
and
mov
and
add
add
add
mov
and
jle
and
je
and
cmpb
add
and
sbb
and
bound
and
fdivrs
and
aas
and
stos
inc
and
call
inc
and
sarb
and
cmp
add
inc
and
inc
inc
and
mov
and
mov
and
jle
and
pop
and
inc
and
sub
and
add
add
add
lods
sub
add
sbb
push
sbb
jbe
add
dec
pop
add
xchg
add
js
add
mov
add
sbbb
xchg
mov
add
ficomps
add
rcrb
add
rcrb
xchg
lods
push
add
push
pop
add
mov
add
stos
push
add
aam
add
dec
push
add
xchg
push
add
insb
push
add
adc
add
sub
add
ficompl
add
add
add
add
rcrb
xchg
mov
sbb
xchg
sbb
jb
add
dec
sbb
pop
test
cmp
pop
iret
push
xchg
pop
mov
inc
xchg
pop
jmp
inc
xchg
pop
lret
inc
lea
filds
in
lea
icebp
inc
xchg
pop
cmovne
pop
das
inc
lea
filds
ret
inc
lea
pop
inc
add
add
add
xchg
pop
scas
inc
lea
mov
inc
lea
outsl
inc
xchg
pop
arpl
pop
pop
inc
xchg
pop
lret
inc
lea
filds
pop
roll
pop
incl
pop
xchg
inc
lea
mov
adc
and
roll
aad
add
roll
and
rolb
and
rolb
and
rolb
and
fadds
and
rolb
and
rolb
and
rolb
and
push
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
dec
add
or
or
sub
and
out
and
testb
dec
and
cld
dec
and
cli
dec
and
push
push
and
add
add
add
push
push
and
push
push
and
and
add
and
sub
and
movsb
push
and
bound
add
or
add
and
cli
or
icebp
or
testb
sub
and
adc
and
cmp
and
test
and
cmp
add
cmp
add
cmp
add
out
jno
xchg
adc
add
add
add
add
ss
xchg
sbb
xchg
dec
jae
xchg
mov
xchg
jbe
add
jb
add
jae,pt
xchg
cmp
add
push
jae
xchg
add
add
loopne
add
or
add
out
jb
xchg
xorb
mov
add
xorb
mov
add
dec
jae
xchg
push
jae
xchg
sub
add
lock
add
ss
xchg
ss
add
add
add
xchg
pop
jno
xchg
lock
add
pop
add
xchg
pop
sub
lea
adc
xchg
pop
pop
lea
addr16
pop
arpl
lea
jno
xchg
pop
inc
lea
jnp
xchg
pop
outsl
cmp
pop
daa
cmp
pop
sarl
pop
ja
xchg
pop
cmpsl
cmp
pop
cltd
cmp
pop
stc
cmp
pop
lahf
cmp
add
add
add
pop
pop
cmp
pop
cmc
cmp
pop
inc
cmp
pop
jnp
lea
and
pop
or
pop
or
lret
jns
or
fisttpll
and
stos
or
mov
or
mov
or
loop
and
loop
and
ret
cltd
ret
stos
add
add
add
ret
jne
or
bound
and
bound
and
mov
or
test
and
lcall
dec
xchg
and
jle
and
xchg
and
jle
and
dec
sbb
add
cmp
add
aaa
and
into
aaa
and
dec
aaa
and
in
sbb
add
sbb
add
and
sbb
add
and
push
sbb
add
add
add
add
and
inc
sbb
add
add
and
and
adc
and
shlb
mov
and
add
and
add
and
ret
add
and
mov
and
and
add
sbb
sbb
adc
add
negb
add
mov
sbb
sbb
add
add
add
add
sbb
add
mov
xchg
lock
add
inc
insb
add
jo
add
lock
add
cld
push
add
call
imul
jl
add
mov
add
push
imul
push
add
lock
add
mov
daa
add
pop
stc
add
add
add
add
xchg
add
xchg
add
pop
dec
dec
xchg
pop
mov
lea
xchg
dec
xchg
pop
rolb
xchg
xchg
add
pop
rorl
dec
lea
std
dec
xchg
pop
into
add
xchg
add
xchg
xchg
xchg
add
add
add
add
xchg
add
pop
roll
xchg
xchg
pop
and
pop
or
dec
or
dec
or
push
or
dec
or
dec
or
into
or
or
into
or
or
into
or
xchg
pop
and
leave
or
aad
and
rorb
and
aad
and
add
add
add
xchg
pop
and
fimuls
and
or
into
or
or
pop
or
push
or
dec
or
inc
or
clc
add
call
out
scas
repz
inc
dec
pop
inc
faddp
sti
xlat
and
rorb
cs
out
aad
mov
pop
lcall
xor
adc
add
add
xchg
or
cmpsl
push
or
les
rorb
or
jae
sahf
mov
test
jo
adc
mov
pusha
sbb
test
mov
add
add
xorl
andb
lcall
cs
jno
or
pushf
push
mov
ja
and
mov
add
add
add
cld
ficoml
sbb
lahf
pop
loope
jge
mov
dec
mov
cmp
mov
cmp
push
loop
into
push
sub
lea
dec
mov
xchg
cmp
mov
xchg
and
pusha
sbb
push
mov
mov
divl
pop
or
movsb
push
es
shl
popf
add
add
add
xchg
or
adc
dec
jo
notl
mov
cmp
dec
popf
cmpl
ss
mov
cmp
inc
rcll
cmp
push
inc
test
inc
imull
xchg
mov
push
fst
mov
shlb
scas
je
or
dec
xor
mov
xchg
or
add
or
and
movsl
bound
pop
faddl
xor
pop
sbb
test
sbb
subl
addb
cmpb
scas
sbb
iret
sbb
xor
scas
clc
popl
nop
cwtl
xchg
aam
mov
xor
xchg
ss
sti
repnz
test
xor
scas
sbb
fistpl
add
lret
lods
dec
mov
mov
in
sbb
testl
aaa
and
sub
and
repnz
adc
and
push
or
mov
dec
fstp
lss
jne
int3
lods
mov
hlt
adc
cmp
shl
lods
and
iret
dec
xor
movsb
loop
cmp
add
add
add
ljmp
shlb
fcos
cltd
dec
pop
add
ljmp
pop
and
loope
jb
in
jmp
or
stos
sub
arpl
xchg
nop
int3
neg
iret
adcb
jmp
push
sahf
int
test
mov
inc
and
mov
xorb
add
sub
lods
dec
insb
enter
add
add
mov
test
movl
shrl
add
fadd
push
shll
test
mov
inc
mov
sbbb
sub
push
pop
repnz
push
sub
lods
push
idivl
inc
loop
pop
mov
and
mov
xchg
pop
int
xchg
pop
jge
add
add
add
push
pop
roll
pop
lds
lea
or
add
or
add
pop
lea
pop
leave
add
pop
popf
js
pop
aad
mov
pop
popf
js
pop
aad
mov
or
add
push
pop
js
pop
and
xchg
xchg
xchg
pop
and
inc
and
add
add
add
xchg
add
xor
cmpsb
inc
and
xchg
pop
and
xchg
pop
and
mov
and
mov
and
mov
and
lcall
jmp
mov
and
popf
and
or
and
mov
and
popf
cmpsl
and
lcall
jmp
popf
out
aas
and
mov
and
popf
ja
cli
add
add
add
sbb
jmp
push
or
add
xor
add
or
add
or
sub
add
or
add
or
add
add
add
or
call
or
add
add
add
or
call
or
add
add
add
or
add
or
add
add
add
add
or
js
int3
add
sub
push
add
add
mov
push
xchg
loopne
jl
loopne
cmp
loopne
fcoms
loopne
insb
xchg
loopne
sub
loopne
mov
xchg
loopne
mov
loopne
clc
xchg
mov
add
loopne
adc
shll
and
add
add
add
loopne
les
loopne
bound
loopne
movsb
xchg
loopne
add
loopne
inc
xchg
loopne
in
mov
pop
xchg
loopne
pop
xchg
pop
int
mov
int
std
push
flds
pop
int
fildl
int
mov
int
pop
pop
incl
pop
int
stos
pop
int
jnp
int
fldl
int
mov
int
or
int
add
add
add
pop
pop
int
std
push
std
add
pop
int
pop
pop
int
xchg
or
add
pop
int
pop
pop
int
xchg
int
aad
cld
add
pop
int
das
pop
int
ja
int
cmc
push
int
xchg
pop
int
sysret
int
xlat
pop
int
jne
and
xchg
and
mov
and
fwait
jae
std
xchg
push
and
lcall
add
add
lock
mov
jmp
xchg
xchg
and
mov
and
lcall
dec
xchg
pop
and
mov
and
lcall
sti
xchg
hlt
and
mov
jmp
xchg
leave
and
xchg
add
mov
jmp
xchg
test
and
mov
add
movb
add
add
add
and
push
add
add
pop
add
pop
add
add
add
xor
add
add
add
add
add
ljmp
add
add
or
add
pushl
clc
pushl
add
jmp
add
call
mov
add
add
or
add
add
add
add
incl
add
fisubrs
add
xchg
loopne
inc
xchg
loopne
ljmp
das
pop
xchg
loopne
sbb
xchg
aam
push
xchg
loopne
jge
loopne
cmp
xchg
scas
es
xchg
loopne
insl
xchg
loopne
sub
xchg
loopne
or
xchg
loopne
dec
xchg
loopne
cli
xchg
mov
add
add
add
add
fldt
ret
xchg
int
and
loopne
xor
scas
and
xchg
loopne
arpl
pop
int
testl
int
adc
int
rolb
int
ja
std
add
pop
int
mov
int
pop
pop
flds
rolb
int
lret
or
pop
incl
mov
pop
int
add
add
add
jp
int
out
int
mov
int
sbb
int
pop
pop
int
pop
pop
std
add
int
jle
or
add
pop
int
jle
int
iret
push
and
xchg
add
lcall
jmp
mov
and
lcall
jmp
xchg
and
lcall
jmp
add
mov
std
xchg
fs
lcall
jmp
xchg
in
and
lcall
jmp
mov
and
lcall
jmp
not
fucomi
lcall
cmc
mov
xlat
icebp
and
lcall
add
shrl
add
add
add
add
cld
mov
add
lds
pop
shll
add
jnp
js
cmp
push
rcrl
add
cld
pop
add
cld
sbb
sub
cmc
add
xor
cmp
dec
add
cld
or
sub
xchg
add
cld
sub
clc
sti
stos
add
sti
imul
add
add
shlb
add
sti
outsl
add
sti
das
add
sti
movb
int
sub
add
add
add
fisubrs
xor
fisubrs
leave
xchg
scas
fimull
fisubrs
fs
fisubrs
and
fisubrs
test
xchg
loopne
test
loopne
jmp
xchg
loopne
pop
xchg
loopne
sbb
loopne
cltd
xchg
int3
ficoml
loopne
jl
loopne
cmp
loopne
fsts
loopne
insb
xchg
loopne
sub
loopne
mov
xchg
loopne
mov
add
add
add
loopne
stc
xchg
mov
add
pop
int
addl
or
or
cld
jae
int
inc
pop
int
addl
or
pop
cld
cld
fwait
pop
int
xor
int
jae
int
in
pop
int
xchg
pop
int
adc
int
roll
int
insb
pop
std
cld
xchg
pop
int
lret
pop
int
jnp
int
cld
push
frndint
roll
int
lret
pop
int
add
add
add
jnp
int
pop
pop
cld
addl
or
pop
int
faddl
int
fwait
pop
int
sbb
int
dec
pop
int
cld
push
and
in
add
lcall
sub
sbb
lcall
jmp
lods
cld
and
lcall
jmp
lcall
jmp
add
add
add
mov
and
insl
add
lcall
jmp
dec
push
jmp
mov
and
sub
pop
and
sbb
and
adc
sti
and
or
add
shrb
call
add
clc
shlb
shlb
fst
cmpsb
add
add
add
rclb
test
out
add
add
add
enter
mov
rolb
test
xchg
js
and
js
movsb
add
add
movb
add
add
jl
push
lret
mov
dec
add
add
rcrb
rcrb
sub
testb
add
add
rorb
sub
xchg
add
mov
repnz
scas
cs
add
add
add
adc
into
filds
nop
shrl
sub
xor
lret
cs
xchg
and
stos
xchg
loopne
add
loopne
test
loopne
ljmp
fistps
fistps
loopne
lcall
fistpll
fistpll
loopne
ficoml
loopne
insb
add
add
add
xchg
pop
int
gs
int
dec
or
sti
xchg
pop
int
or
pop
int
jmp
std
or
pop
int
addl
sti
roll
fimuls
jb
int
inc
pop
int
addl
cli
xlat
pop
cld
or
pop
int
jae
int
aaa
pop
int
xchg
pop
int
adc
int
roll
int
ja
std
or
pop
int
add
add
add
jnp
int
daa
pop
rolb
int
mov
pop
int
inc
pop
and
cltd
mulb
jmp
sbb
and
or
and
cli
jl
jmp
jmp
and
cltd
add
jmp
and
int
cltd
push
and
mov
adc
stos
mov
and
lcall
jmp
add
mov
and
jp
and
jp
and
imul
fstps
sub
pop
ljmp
cltd
fs
cmp
add
int
add
into
cli
add
aas
add
int
add
int
add
lret
lcall
int3
stos
add
int3
push
clc
lret
fiaddl
enter
jmp
xor
xchg
and
add
add
add
leave
jmp
add
jmp
aad
fs
jmp
enter
sar
add
and
mov
sub
cmp
or
movsb
add
jmp
add
and
add
cmp
xchg
and
xchg
iret
sub
xchg
xlat
sub
stos
sub
xchg
stos
sub
mov
sub
xchg
mov
add
lret
ror
or
add
xchg
aam
add
push
sub
adc
daa
pop
xchg
xlat
daa
push
xchg
in
add
xchg
shlb
add
loopne
add
fisubs
add
mov
add
mov
add
mov
add
pop
int3
add
pop
int3
add
add
add
add
pop
iret
add
pop
iret
add
pop
into
add
pop
into
add
pop
roll
pop
leave
add
pop
enter
rolb
pop
enter
rolb
pop
int
xchg
pop
std
repnz
add
or
roll
pushf
or
add
pop
int
xchg
pop
int
add
add
add
xchg
pop
int
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
js
and
js
and
push
or
cmp
and
cmp
and
sub
and
sub
and
cmp
and
cmp
and
sub
and
sub
and
cli
or
sti
or
out
or
call
or
je
sub
add
add
add
mov
sub
hlt
or
in
sub
push
or
xchg
or
xor
sub
mov
sub
inc
or
test
sub
add
sub
mov
sub
and
sub
xchg
fisubl
or
mov
or
jo
or
shlb
or
nop
daa
or
loopne
or
mov
add
add
xchg
and
or
mov
and
xchg
loopne
or
cmp
or
push
daa
or
or
or
test
or
sbb
or
pop
pop
add
pop
xchg
mov
testl
cltd
pop
lret
add
pop
mov
mov
add
add
add
add
cltd
pop
jmp
cltd
pop
arpl
mov
stos
add
pop
sti
add
pop
mov
add
pop
mov
mov
jnp
mov
repz
pop
roll
cltd
pop
dec
add
pop
add
pop
mov
add
pop
and
pop
pop
add
pop
ret
add
pop
and
lea
and
xchg
daa
add
add
add
lea
and
xchg
mov
xchg
dec
xchg
mov
xchg
push
xchg
sub
dec
xchg
mov
mov
xchg
pop
xchg
cwtl
xchg
sbb
cwtl
xchg
pop
lea
and
xchg
mov
xchg
jo
and
mov
xchg
push
add
add
add
xchg
add
add
push
sub
orl
sub
mov
sub
xor
sub
roll
jne
sub
cmc
add
add
add
add
sub
aad
sub
add
add
add
sub
lds
add
add
add
or
and
add
add
add
sub
lds
sub
fldl
add
sub
lods
or
sub
add
add
sub
xchg
or
or
stos
daa
or
sbb
or
jmp
or
or
frstor
or
pop
and
xchg
pop
and
xchg
jge
or
std
pop
or
add
add
add
jge
or
std
pop
or
pop
and
xchg
pop
and
xchg
frstor
or
mov
or
and
and
xchg
pop
push
add
pop
push
add
cwtl
pop
xchg
pop
testb
pop
testb
add
pop
testb
pop
testb
add
add
add
add
pop
movb
jbe
cwtl
pop
jbe
cwtl
pop
out
mov
out
mov
push
add
pop
out
mov
out
mov
push
add
pop
inc
add
pop
inc
add
pop
testb
pop
lret
pop
ret
pop
and
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
add
add
add
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
xchg
adc
out
sub
add
add
or
add
sub
add
sub
add
or
add
or
add
or
add
sub
add
or
add
or
add
sub
add
sub
add
sub
add
add
add
add
or
add
sub
add
int
or
out
pop
pop
xchg
push
and
xchg
dec
and
xchg
mov
pop
pop
xchg
fisubs
pop
xchg
push
and
xchg
mov
pop
xchg
negb
pop
xchg
daa
pop
xchg
push
and
xchg
push
and
xchg
daa
pop
xchg
push
and
xchg
daa
pop
xchg
stos
daa
pop
xchg
bound
pop
xchg
or
pop
add
add
add
xchg
ret
xchg
mov
daa
pop
xchg
fisubl
pop
xchg
xchg
daa
pop
xchg
mov
or
jno
or
pop
cs
pop
scas
add
pop
out
add
pop
std
add
cmc
add
roll
xchg
pop
roll
pop
leave
add
incl
xchg
pop
movl
add
add
add
xchg
pop
lret
add
ret
add
int3
add
les
mov
hlt
add
rolb
xchg
pop
rolb
pop
enter
into
add
and
xchg
add
rclb
add
notb
add
and
mov
and
cltd
add
loope
cvttps2pi
mov
sub
add
add
add
mov
sub
jecxz
or
repz
loop,pn
push
das
loop
push
das
repnz
das
repnz
push
das
in
or
fisttpll
or
in
sahf
or
in
or
fisttpll
or
in
sahf
or
in
or
fmull
or
or
in
or
or
std
or
or
add
std
or
or
mov
pop
sub
mov
pop
sub
ficoms
sub
mov
pop
sub
scas
pop
sub
mov
pop
sub
jle
sub
outsb
pop
sub
pop
pop
sub
jle
sub
jle
sub
outsl
sbb
sbb
maxps
sub
aas
sbb
comiss
sub
pop
sbb
sbb
sbb
sldt
add
add
xchg
mov
xor
xchg
xor
xchg
mov
xor
xchg
sub
xchg
scas
daa
adc
fidivl
adc
sarl
cmpsl
shlb
push
lahf
mov
xor
jle
aas
sbb
aas
sbb
aas
sbb
xlat
cmp
cwtl
xlat
cmp
cwtl
pop
cmp
mov
cmp
mov
add
add
cmp
sbb
aam
sbb
pop
daa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
jge
leave
pop
jne
rcrl
sbb
pop
movsl
sbb
pop
popf
sbb
pop
xchg
sbb
and
sbb
pop
jge
leave
pop
add
add
add
jne
rcrl
adc
pop
movsl
adc
pop
popf
adc
pop
xchg
adc
and
adc
and
and
and
and
jno
cmp
jno
cmp
adc
cld
jno
cmp
jno
cmp
jno
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
adc
cld
xchg
jmp
or
add
add
lcall
in
add
faddl
add
sub
adcb
stc
adcb
fsubs
sbb
sbb
cli
sbbl
xor
jle
xor
insb
push
xor
push
xor
sbb
xor
push
sbb
push
push
sbb
push
out
sbb
push
add
add
add
ficomps
xor
fistps
xor
fistps
xor
out
sbb
pop
fistps
xor
loopne
cmp
loopne
cmp
mov
cmp
mov
cmp
loopne
cmp
loopne
cmp
nop
adc
nop
adc
mov
adc
sbb
cmp
sbb
cmp
sbb
mov
cmp
sbb
add
add
add
fdivrs
sbb
mov
cmp
stos
test
cmp
lcall
sbb
or
sbb
daa
add
mov
daa
add
stos
daa
add
lods
daa
add
test
add
movsb
daa
add
add
add
add
pop
and
add
pop
and
add
pop
lea
xchg
pop
mov
add
pop
dec
add
pop
insl
add
pop
or
add
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int3
add
pop
into
add
pop
ret
add
pop
stc
add
add
add
add
pop
and
add
pop
or
add
pop
and
xchg
pop
and
xchg
pop
and
lea
and
xchg
pop
and
mov
and
xchg
pop
and
inc
mov
jmp
mov
and
xchg
pop
and
addb
jmp
xor
fucomi
push
pop
and
mov
and
xchg
pop
and
loop
push
adc
add
mov
lret
add
pop
add
push
cld
addr16
push
sub
sti
or
sub
cli
fadd
jno
aad
ret
sub
add
xchg
out
sbb
sbb
and
pushf
repz
inc
lcall
addr16
insl
sub
lock
ja
testl
repnz
inc
std
add
add
add
mov
and
arpl
mov
sub
mov
dec
cmp
push
dec
dec
aam
inc
aad
testb
xchg
daa
cmp
xlat
and
xor
shlb
movsl
add
xchg
xor
out
lahf
fldt
cwtl
lods
xchg
jge
fadd
sbb
jns
pop
call
xlat
fdivs
push
jbe
dec
mov
add
add
push
xchg
mov
daa
stos
mov
stc
pop
pop
add
scas
add
push
lret
mov
loopne
adc
scas
arpl
push
xor
jae
gs
dec
data16
push
fistl
adc
aad
daa
movsl
mov
mov
test
test
mov
push
insb
mov
jbe
add
add
add
sti
xor
sub
xchg
int3
push
repnz
das
and
cmc
mov
xchg
xchg
and
pusha
nop
or
mov
test
fucom
sub
jl
jnp
mov
mov
sbb
and
call
loop
mov
and
inc
cmp
in
js
sbb
fisttpl
out
cmp
nop
add
add
add
jmp
push
scas
and
cld
sbb
adc
or
daa
sbb
pusha
test
add
mov
add
inc
int
add
addb
addr16
in
or
pop
jae
adc
add
dec
es
pop
push
sub
out
int
push
push
rorl
push
stos
jecxz
or
push
add
add
add
data16
xchg
dec
scas
jno
leave
adc
aaa
arpl
cmc
xor
add
push
adc
mov
add
std
divl
incl
sub
inc
xchg
mov
dec
or
jae
sub
cmc
je
xchg
dec
and
or
cwtl
sub
or
sub
inc
js
push
mov
and
cmp
jae
inc
cmp
dec
sbb
add
add
add
lods
dec
outsb
out
push
lock
fsubs
std
adc
addr16
rcrl
mov
xor
pop
popf
test
jbe
cmc
mov
lcall
mov
mull
mov
stc
leave
mov
lcall
out
lea
pop
add
add
popa
andb
lock
rolb
imul
add
and
fldenv
lods
adc
push
push
mov
sub
jae
stc
add
xor
mov
jecxz
jge
push
or
xlat
ror
loopne
inc
cmp
fimuls
in
or
xchg
arpl
pop
mov
xchg
cmp
movsb
or
mov
pop
xchg
add
add
add
add
out
icebp
sub
loope
lds
inc
sti
push
andb
jno
mov
in
rorb
mov
cmpsb
inc
mov
ja
pop
jmp
imul
pop
xchg
cmp
sbb
dec
out
imul
popf
sbb
mov
xor
jae
ds
es
adc
test
add
add
add
stc
repnz
inc
or
cwtl
daa
hlt
xor
push
insl
mov
xchg
mov
xchg
int3
fs
jg
adc
repz
push
jbe
nop
and
aad
insl
cltd
arpl
sbb
jbe
xchg
mov
jmp
jle
rolb
pop
ja
xchg
jno
sub
jmp
add
add
add
sbb
fiadds
cld
out
repz
pop
jge
es
sub
xor
push
or
mov
dec
fs
push
jge
and
testl
out
and
shl
insb
inc
xchg
lods
popf
cmc
mov
aas
pop
mov
dec
cmp
iret
js
add
add
add
inc
lret
popa
add
pusha
xchg
aaa
xchg
xor
add
addb
fwait
rcrl
mov
insb
adc
negl
aam
lds
pop
aam
int3
addl
mov
ds
call
test
inc
push
inc
pop
cmp
mov
dec
fcomps
jo
add
add
add
inc
cmp
mov
rcr
push
lcall
inc
ds
sub
shlb
cmp
add
dec
nop
sub
nop
loope
repz
add
dec
lahf
xchg
test
jecxz
mov
add
mov
ffree
dec
enter
xorl
pop
lds
jns
add
add
add
dec
pushf
jb
int
push
cmp
daa
std
mov
dec
dec
add
and
xchg
push
jo
cmp
insl
lock
xor
sbb
xchg
popf
mov
fcompl
aas
stos
xor
and
inc
and
dec
inc
mov
jle
cmp
mov
add
add
add
adc
and
in
dec
jp
inc
pop
dec
mov
jae
mov
push
pop
xchg
and
or
pop
pop
dec
loopne
push
xchg
loop
mov
adc
mov
inc
jbe
in
sbbl
fists
sahf
sub
jg
out
ss
adc
stc
pop
pop
scas
cmp
adc
add
add
add
add
aam
jns
xchg
pop
ret
enter
jl
aad
sub
int3
mov
or
cwtl
mov
out
subb
inc
mov
or
mov
ja
lret
pop
push
rolb
mov
insl
xor
in
imul
rep
cmpsl
fs
push
fsubrs
insb
or
add
add
add
in
aas
mov
xorl
push
rcl
dec
pop
xchg
sahf
sbb
popf
sub
sbb
xor
pop
ret
fadds
push
scas
sbb
je
and
xchg
out
aad
inc
ret
mov
out
push
pop
daa
dec
pop
sbb
cmp
xor
lret
push
imul
pop
jo
cmp
pop
test
add
add
add
nop
and
push
adc
rolb
repz
xchg
xchg
mov
dec
in
mov
inc
lahf
test
js
insl
sbb
rolb
scas
sub
mov
call
jle
sti
pop
pop
lcall
repz
xchg
inc
mov
or
mov
jp
fwait
orb
jno
sub
add
add
sar
movsl
mov
xchg
jno
sahf
dec
and
pop
push
pop
jne
out
pop
xchg
xor
adcb
or
or
pop
leave
add
cli
mov
push
mov
sub
pop
lds
dec
mov
push
fbld
mov
xchg
cmp
xchg
cmp
mov
push
fsubs
sub
and
push
ljmp
add
add
add
mov
inc
cli
je
or
add
data16
xlat
sub
sbb
dec
push
xor
cmc
sbb
push
inc
jmp
adc
xor
gs
mov
lret
setbe
pop
xchg
cltd
mov
into
dec
jmp
int
rorb
fstps
mov
or
add
outsl
mov
aas
and
jmp
shl
imul
add
les
out
jbe
es
arpl
pop
inc
sub
mov
pop
outsl
add
pop
add
mov
add
inc
sub
push
sub
test
xor
ss
push
out
mov
cmovbe
mov
add
add
add
or
sbb
xchg
repnz
mov
pop
mov
sahf
in
or
pusha
xchg
mov
mov
in
stos
jns
dec
imul
cmpsl
mull
pop
sbb
mov
int
std
jge
pop
mov
jle
dec
mov
sti
mov
addr16
or
add
add
add
mov
xchg
leave
mov
push
clc
xor
loope
pushf
mov
fcmovne
pop
cltd
fisttpl
jge
cld
xlat
mov
inc
mov
adc
sahf
mov
ljmp
fs
cmc
loopne
out
mov
call
and
mov
jmp
and
out
mov
pop
add
add
add
pusha
repnz
mov
sahf
lock
sub
rcrb
lahf
adc
repz
es
inc
sbb
mov
sbb
mov
pop
push
testl
mov
pop
dec
mov
inc
pop
mov
or
sbb
pop
cmp
dec
shlw
dec
inc
jmp
dec
push
sbb
pop
dec
mov
add
add
add
pop
dec
jmp
dec
hlt
sub
inc
out
mov
in
inc
mov
fisubrs
or
inc
inc
xchg
in
insb
je
inc
leave
or
insb
aaa
xchg
xor
pusha
xorb
jae
imul
xor
or
nop
loopne
pop
pop
and
aad
inc
sub
call
inc
add
add
add
inc
jge
inc
xor
sti
aam
jbe
push
push
inc
int
push
mov
fcoml
inc
push
push
lret
push
jge
cltd
push
push
stos
lds
cmp
outsb
jg
pop
pop
sbb
iret
pop
sti
jno
pop
xor
pop
add
adc
loope
rcl
loopne
push
xchg
loop
ds
jecxz
aam
cmp
dec
out
mov
cmp
add
lods
mov
sbb
jecxz
fisubs
pusha
jl
xchg
jns
pop
in
push
fldt
cmp
dec
adc
sarl
ja
push
cs
sbb
cltd
or
sahf
sbb
pop
or
add
insl
movsb
ret
ret
lahf
push
or
push
std
lret
stos
fsubrp
orb
add
add
bound
je
mov
mov
add
outsl
ret
and
mov
cmp
mov
lcall
mov
jno
mov
pop
repz
mov
mov
xor
mov
std
movsl
out
loop
sbb
xchg
inc
mov
add
leave
jbe
add
jo
mov
add
add
add
mov
enter
lcall
push
pop
lret
rcl
int3
call
test
imulb
mov
dec
lock
mov
bound
mov
adc
pop
mov
jg
aam
dec
mov
mov
xor
cwtl
mov
out
add
add
add
push
test
in
or
inc
adc
scas
imul
lods
je
shrl
aas
cmpsb
minps
mov
mov
push
lahf
xor
pop
push
test
incb
inc
stos
mov
jg
cmp
into
scas
jae
or
mov
int
lods
pusha
test
cmpsl
jg
pop
cmpsb
add
add
add
xchg
loopne
movsb
mov
lods
shll
ret
mov
sub
fbstp
out
sub
cmpsb
mov
pop
jmp
mov
imulb
lock
mov
movsb
repnz
out
ja
leave
sbb
ficomps
out
pop
push
or
xchg
pop
mov
add
adc
add
add
sti
lret
sbb
bound
ljmp
imul
mov
es
hlt
or
mov
cmp
lret
imul
xor
iret
jmp
push
lock
sub
lods
shr
fistpll
sbb
scas
insl
das
jb
add
lods
and
fists
movsb
pop
push
pop
xor
add
add
add
cld
mov
aam
adc
dec
setae
addr16
pop
pushl
add
push
fmull
clc
inc
movsl
jno
xchg
call
fstpt
mov
push
leave
cli
jmp
adc
jb
scas
sbb
dec
xor
fwait
push
addl
pop
cmpsb
jnp
add
add
add
enter
sbb
loopne
push
mov
ret
add
jns
add
test
ljmp
lock
lcall
and
mov
repz
lahf
and
lods
inc
into
adc
fisubrs
int
enter
lods
les
fwait
movsl
addr16
jle
roll
rcr
daa
repnz
ss
add
add
add
or
int
adc
adc
dec
mov
out
cmpsb
gs
push
adc
inc
lods
mov
std
pop
popf
sub
divb
inc
out
repz
push
xor
inc
and
pop
mov
sbb
xor
addl
sti
cmc
sub
add
push
adc
andl
or
pop
jecxz
mov
add
or
add
add
add
and
adc
aad
push
push
mov
icebp
xor
inc
lahf
sahf
mov
in
ret
inc
aam
cmpsb
outsl
leave
or
popa
arpl
sub
imul
cmpsl
shrl
jecxz
rorl
jns
jmp
pop
loope
pusha
mov
call
daa
mov
data16
mov
aas
push
sub
xchg
loopne
add
add
add
sbbb
movsb
xchg
push
dec
pop
fucomip
sahf
dec
cmp
cmpsl
popa
xchg
xor
stos
mov
jne
in
test
dec
adc
adc
das
mov
xor
add
add
xchg
pop
mov
jmp
xchg
dec
and
jle
jae
push
repz
in
mov
add
add
add
out
lret
fldt
or
es
and
cmp
js
jp
es
xchg
jb
enter
lods
sbb
xor
pop
mov
adc
cmp
jp
repnz
sub
jmp
jo
adc
xchg
ret
fwait
sub
mov
and
add
add
add
sbb
outsb
cmp
cmp
repz
sub
divl
scas
add
sbb
cmpsl
push
mov
xchg
adc
les
lret
sbb
lret
add
inc
out
lret
arpl
sub
in
push
mov
xchg
ljmp
popl
je
fcoml
fsubr
jbe
inc
jno
rclb
pop
add
add
add
hlt
dec
das
or
inc
test
jo
mov
in
lahf
add
jno
loope,pn
jo
mov
sti
js
inc
xchg
les
mov
scas
adc
mov
jecxz
jne
pop
lods
ror
dec
adc
cmpsb
insb
hlt
ljmp
outsl
and
jle
dec
pop
sbb
add
add
add
adcl
pop
out
les
cmp
cmp
loope
xchg
aaa
repz
in
adc
add
int3
sub
mov
xchg
and
adc
xchg
adc
inc
aad
pop
pop
xor
addr16
popf
outsl
insl
push
js
std
xor
mov
xor
std
rcll
sbb
fnsave
add
call
cltd
dec
mov
jbe
or
xor
mov
xlat
mov
es
mov
das
push
or
push
mov
movsl
les
add
xor
fwait
mov
push
jg
push
fstp
sub
push
stos
pop
insb
or
xchg
js
push
subl
jle
mov
add
add
add
mov
mov
in
popf
sbb
or
daa
or
loope
cmp
add
fmuls
pop
enter
insl
inc
scas
add
es
or
pushf
xchg
sub
mov
and
scas
and
adc
push
add
mov
or
fistps
sub
mov
fildl
add
add
add
and
and
xor
movsl
add
jmp
add
jl
jmp
xchg
jmp
push
xor
movsb
sahf
loop
xor
popa
fwait
xchg
mov
lret
pop
ss
jp
sbbl
mov
das
xchg
scas
xchg
pop
test
mov
sub
mov
jo
sbb
inc
mov
in
and
loopne
or
out
add
add
add
pop
cmp
idivl
shlb
nop
in
mov
fiadds
mov
cmpsl
mov
inc
xchg
push
in
add
call
adc
mov
xchg
mov
add
cmpl
or
push
fnsave
std
lret
push
arpl
pushf
ljmp
cmp
mov
add
add
add
repz
push
push
pop
loop
jne
or
and
fsubrl
loop
ljmp
data16
in
mov
push
or
sti
xchg
add
pop
xor
mov
lret
popa
frstor
sub
xor
sub
jl
icebp
and
lds
adc
dec
lgs
cmp
add
add
add
mov
jmp
push
ja
stc
xchg
pop
cltd
leave
stc
xor
test
pop
jbe
sahf
dec
imul
loopne
insb
cld
add
jno
jb
out
into
dec
mov
jo
arpl
scas
into
rolb
push
pop
leave
mov
xchg
jo
lcall
sub
pop
test
or
insb
xlat
add
in
cld
add
add
add
or
pop
add
repnz
hlt
std
rorb
pop
jbe
les
mov
cmpsb
adc
stos
cmpsl
fnstsw
pop
mov
jnp
scas
cli
dec
testl
pop
imull
dec
loop
pop
and
enter
lcall
out
inc
push
movb
xchg
add
add
add
loopne
jle
lock
sub
pushf
out
popf
lods
jno
insb
jge
daa
jp
pop
mov
jl
ds
mov
adc
mov
xchg
cmc
pushf
xchg
out
loop
sub
rcrb
rolb
mov
popa
and
sub
mov
add
push
mov
sbb
add
add
add
pushf
in
aad
xor
out
or
mov
test
mov
or
lds
outsb
orb
adc
xor
scas
cmp
aas
cmp
push
stos
fwait
adc
push
lret
mov
pop
sti
and
dec
movb
xchg
clc
cvtps2pd
int
cmp
pop
fbstp
push
loope
xor
jo
jge
scas
or
add
add
add
push
push
lret
das
pop
xchg
and
add
ret
iret
dec
ds
sbb
and
cmpsl
shrl
and
and
lock
pop
push
jle
cmp
mov
push
ja
pop
xor
mov
cmp
imul
fidivl
scas
push
jl
cmp
jae
jge
imul
add
add
add
roll
das
ja
ss
jmp
push
and
push
mov
push
or
dec
sbb
loopne
stos
add
jns
cld
rorb
or
out
out
mov
int
xchg
pop
hlt
out
popa
dec
aas
test
imul
jge
cmp
orl
stos
or
mov
mov
add
add
add
push
sti
outsl
bound
jns
insb
test
ds
jb
les
push
jne
out
xor
repnz
rolb
jge
lea
pop
out
call
mov
jns
jno
cmp
ja
mov
pop
and
mov
inc
add
jmp
inc
fadds
add
add
add
cmpsl
add
mov
add
scas
pop
mov
lods
mov
dec
shlb
mov
push
das
lret
repnz
incb
rorl
enter
add
xor
movsl
and
fcoml
xchg
add
mov
dec
incl
sti
mov
test
jns
xor
cmp
je
incl
add
add
add
insl
insb
mov
lock
push
cmp
push
xchg
loop
inc
cmp
or
cld
mov
inc
push
movsb
ret
and
cld
ret
loope
mov
dec
inc
adc
into
test
and
insl
push
adc
mov
arpl
bound
push
lret
and
addb
xchg
xchg
rclb
test
add
xorb
cli
ret
shrb
xlat
xor
pop
adc
push
mov
adc
fsubl
mov
movb
mov
out
sbb
or
push
scas
xor
lahf
jae
inc
int3
mov
je
icebp
mov
loopne
std
jmp
xorb
lods
cmpsl
pop
and
rclb
cmp
add
add
js
or
test
mov
and
stos
sti
shl
cmp
xor
mov
in
or
loop
or
and
mov
jg
push
je
ret
cmp
inc
xchg
cmp
out
imul
aam
mov
pop
dec
adc
std
adc
adc
add
add
add
xchg
sahf
sub
or
rolb
jp
xor
push
jmp
rcll
jg
popf
outsl
mov
cld
xlat
aam
ffree
add
clc
xor
jo
pop
mov
cmp
addr16
hlt
xor
dec
xor
shrl
icebp
inc
add
add
add
mov
int
adcl
mov
or
shll
or
lds
push
or
inc
sub
jmp
jmp
js
repnz
dec
addb
mov
es
mov
xchg
call
jnp
loope
mov
push
sub
add
pop
mov
add
add
add
or
icebp
mov
xor
sbb
mov
pop
hlt
cmc
adc
cmpsb
or
xchg
ja
mov
dec
stos
test
xchg
int3
dec
mov
xor
or
jmp
enter
mov
js
bound
pop
imul
test
adc
test
push
xor
lret
adc
out
scas
ret
add
add
add
fisubs
aad
adc
mov
push
xor
add
xor
push
mov
sahf
test
sub
fisttpll
mov
insl
push
add
rcrl
ret
pop
xchg
out
fistl
mov
jns
flds
cmp
push
jmp
out
fs
loop
jns
loop
dec
in
pop
imul
lcall
mov
adc
lea
es
stc
inc
lock
clc
subl
adc
jne
add
mov
shl
jl
mov
pop
std
xor
cmp
mov
xor
jns
je
cld
mov
push
lret
jle
xchg
cmc
int3
add
cmp
jg
icebp
into
inc
add
add
add
aaa
loopne
cli
ss
mov
fnsave
and
inc
xlat
fiadds
ds
hlt
rorl
cmp
inc
loope
xchg
ja
test
repnz
lret
lock
push
int3
es
arpl
ja
cmp
mov
or
repz
mov
loopne
mov
in
fisubl
lahf
arpl
cmp
shll
add
fildll
cmc
sbb
pop
fisttps
pop
test
mov
leave
ret
mov
xor
and
xchg
stos
and
push
shll
movlps
push
push
or
das
xor
jmp
out
pop
insl
mov
dec
cmp
mov
mov
and
fsubl
rcll
sahf
adc
leave
fwait
sub
add
add
add
lcall
and
adc
pop
loope
inc
inc
loopne
sub
hlt
in
push
ret
xchg
in
lcall
test
or
jl
fisubrl
push
and
stos
inc
lret
lock
xchg
fwait
aam
pop
fmul
xor
mov
sub
pop
lahf
and
je
adc
add
add
add
mov
or
insb
cs
andl
push
pop
out
stc
xlat
dec
lods
nop
clc
inc
je
jne
sub
cmp
push
xchg
push
mov
test
cltd
dec
cmp
jle
stos
das
mov
xlat
mov
pop
add
mov
lret
mov
aam
cmpsb
pop
push
xor
add
cmpsb
bnd
call
add
add
add
push
lcall
sub
or
add
arpl
or
cli
push
cmp
sbb
xlat
das
rcll
ds
dec
adc
leave
sub
mov
inc
dec
push
mov
mov
jecxz
pop
in
movsb
test
pop
push
mov
mov
fwait
or
pop
add
add
add
mov
and
loop
lret
movsb
std
iret
pop
mov
dec
int3
vunpckhps
fwait
or
rcrb
mov
mov
jb
jne
inc
cmpl
notl
stos
fistpl
insl
inc
pop
jecxz
fs
pop
mov
or
aas
inc
outsl
inc
inc
jns
push
cmp
add
add
add
mov
adc
sbb
xor
stos
scas
adc
xor
cli
xchg
int
or
mov
test
cmp
sbb
mov
sub
dec
outsb
in
and
fsubs
loop
out
hlt
xchg
cld
mov
push
xchg
sub
call
push
push
pop
cmp
adc
add
add
add
push
jle
jo
dec
mov
in
pop
sti
test
jns
xchg
jae
mov
add
popa
jg
icebp
xchg
and
pop
and
xor
and
xchg
rcr
xor
incb
or
add
mov
lea
std
hlt
lret
push
sub
add
inc
sarb
orb
cmp
and
add
add
sbb
pop
sti
pop
jns
cmc
pushf
outsl
jne
fiadds
jmp
push
roll
ljmp
in
jbe
js
lahf
popf
in
call
sub
imulb
cld
lock
or
loope
dec
pusha
lret
push
dec
xchg
int
aas
aad
out
sbb
or
gs
xchg
mov
add
add
add
xchg
dec
mov
testl
scas
repnz
adc
stos
je
and
clc
vmaxpd
push
jbe
decl
popf
sbb
push
adc
cwtl
bound
test
nop
mov
adc
aas
pop
int3
lahf
in
mov
and
and
jp
je
pusha
add
add
add
std
fwait
adc
dec
jbe
cmpsl
inc
insb
fdivr
aas
sub
leave
jmp
ss
xchg
lcall
data16
jae
repz
or
fincstp
pop
call
cs
sub
lret
out
inc
mov
andb
daa
push
stc
mov
push
and
or
lcall
arpl
jg
add
add
add
fdivrl
mov
or
aad
es
stos
pop
jo
adc
adc
das
sbb
sahf
mov
je
inc
enter
cmpb
enter
pusha
xchg
in
pop
bound
mov
nop
and
xchg
push
adc
call
lret
loop
loop
xchg
lea
mov
xchg
imul
or
adc
xor
add
pop
pop
push
jecxz
call
lcall
sahf
mov
sub
jae
xchg
push
out
outsb
fbld
push
or
sbb
cmpsb
inc
dec
pop
rcrb
pushl
int3
inc
or
aam
inc
js
out
or
out
out
aad
pop
mov
aas
leave
pop
add
testl
insl
test
add
add
add
pusha
pushaw
adc
inc
add
out
mov
pop
mov
fidivrl
add
das
xchg
lods
roll
movsl
xor
push
into
sub
mov
jno
push
into
xchg
jae
push
stc
mov
xchg
mov
push
das
imul
sbb
out
div
push
add
add
add
or
xchg
and
add
pop
cmpsb
jg
xchg
mov
jnp
cmp
shr
push
mov
xchg
push
add
jmp
out
test
mov
mov
iret
mov
cmp
leave
neg
and
mov
mov
sub
push
dec
icebp
cmp
mov
add
add
add
sub
push
xlat
addr16
adc
fistpl
cs
jo
fs
pop
mov
push
mov
jp
cmp
adc
dec
cwtl
sub
adc
sub
andl
jne
lock
inc
outsl
xchg
imul
push
dec
add
cmpsl
out
shl
add
mov
or
xor
add
add
cmc
mov
das
paddd
jp
push
repz
lcall
in
dec
js
mov
push
and
add
movsl
ja
jp
das
pop
sbb
xchg
xchg
es
sub
fcompl
push
addr16
mov
add
aaa
loopne
fstps
mov
mov
add
add
add
sub
pop
fcmovnu
popa
adc
add
gs
fistl
or
aad
or
push
test
lock
or
push
fiadds
data16
fldl
adcl
xor
jne
xchg
into
or
pop
inc
hlt
jmp
mov
add
add
add
dec
in
or
push
inc
imul
push
jge
push
mov
pop
mov
cmp
mov
test
mov
and
cmp
sub
ljmp
jb
fldenv
xor
cld
mov
lea
into
cmp
daa
outsb
fs
mov
pushf
pop
xchg
insb
add
add
add
cmp
rcll
test
lret
or
sub
sti
shrl
pop
inc
scas
aam
repnz
adc
jcxz
movsb
add
popf
setg
lods
mov
loopne
andb
xchg
pusha
aam
js
sbb
jne
jb
lds
cmp
outsl
sahf
fmuls
lock
scas
inc
clc
in
ljmp
add
add
mov
loopne
xchg
cwtl
or
mov
and
stos
inc
xor
iret
or
aas
jns
mov
inc
mov
pop
cmp
or
ljmp
and
xchg
jmp
lock
std
and
xchg
add
ficoms
push
xor
xor
cmp
fwait
or
add
push
pop
add
ja
mov
push
add
add
add
add
xchg
cmp
movl
call
add
xor
fadds
xor
leave
add
xor
add
add
aaa
add
add
xor
pushf
add
xor
jge
xor
pop
add
and
jns
add
and
insl
add
sub
xchg
outsl
daa
sbb
add
add
add
pop
and
fbld
rcll
and
xchg
pop
fildl
pop
das
add
pop
pop
add
pop
out
jno
daa
add
dec
daa
adc
insb
daa
adc
jp
adc
push
daa
adc
xchg
push
daa
pop
xchg
push
daa
sbb
add
sbb
bound
sbb
add
add
add
sahf
daa
inc
xchg
cmpsl
int
lock
mov
jge
loopne
loopew
ljmp
mov
sub
cmpsl
daa
push
and
cli
lock
cli
xor
mov
std
int3
add
pop
insl
ficoms
int
xchg
pop
lret
adcl
dec
test
pop
int
xchg
mov
adc
jg
adc
add
add
add
xlat
dec
test
das
popf
into
push
pop
ret
aaa
std
rcl
jg
add
mov
xchg
pop
and
jb
dec
subl
push
push
inc
fildll
loope
pop
sub
mov
and
xchg
pop
and
xchg
fsubl
cmp
cli
and
xchg
aaa
and
xchg
out
and
xchg
and
sbb
cli
and
add
add
add
xchg
aaa
and
xchg
out
and
xchg
pop
and
lea
and
xchg
pop
and
xchg
pop
and
push
enter
and
inc
and
cmp
and
cmp
and
out
and
dec
outsb
fildl
dec
push
data16
cmp
lcall
or
or
dec
add
add
add
add
jl
and
dec
insb
inc
push
inc
je
add
add
add
add
jbe
insb
inc
test
imul
push
push
sahf
dec
push
add
js
jb
jo
cmp
arpl
out
arpl
cld
lret
aaa
int3
arpl
cmp
arpl
out
arpl
out
arpl
repz
or
and
xchg
ds
add
lock
xchg
andl
xchg
mov
xor
add
add
add
rcrb
insb
xchg
pop
daa
add
rol
arpl
sar
dec
dec
inc
xchg
fs
inc
xchg
aas
dec
inc
xchg
cmpsb
push
inc
xchg
divb
inc
xchg
xchg
push
inc
xchg
jle
inc
xchg
push
dec
inc
xchg
and
inc
xchg
notb
xchg
movsb
dec
inc
xchg
sub
xchg
pop
daa
add
pop
daa
add
dec
scas
inc
xchg
addr16
add
add
add
add
pop
cmc
mov
pop
lret
add
pop
in
roll
incl
xchg
pop
cmc
add
pop
fldl
xchg
pop
and
jge
pop
les
xchg
pop
lds
xchg
pop
inc
jge
pop
rolb
pop
roll
pop
aam
lcall
jb
pop
lds
xchg
pop
aam
xchg
pop
aam
xchg
pop
jb
pop
stc
add
add
add
add
pop
fidivs
pop
fiadds
xchg
pop
jb
pop
movb
pop
and
and
and
lea
and
add
and
lea
and
add
and
lea
and
jecxz
and
lea
and
jecxz
and
lea
and
ret
adc
and
mov
and
mov
pop
and
mov
pop
and
addb
rolb
add
add
add
pop
and
xchg
pop
and
bound
and
xchg
pop
and
bound
and
lea
and
inc
pop
and
lea
and
inc
pop
and
lea
and
cmp
and
cwtl
add
xor
and
mov
and
add
add
stc
cmc
and
sbb
and
lret
add
push
and
mov
push
and
int3
clc
and
jmp
and
add
add
add
mov
add
into
clc
and
lea
and
mov
add
adc
and
iret
add
and
rolb
and
fildl
and
leave
add
and
lcall
add
loop
add
rcll
push
add
xchg
daa
add
add
add
add
rclb
jp
add
jmp
add
mov
push
add
out
push
add
out
push
add
int3
push
add
int
add
sub
add
add
add
add
pop
jecxz
xchg
pop
mov
add
add
add
add
pop
cmc
add
pop
in
xchg
pop
inc
jo
pop
mov
jo
pop
mov
jo
pop
pop
add
pop
pop
add
pop
jno
xchg
pop
mov
pop
jo
xchg
pop
mov
pop
adc
pop
mov
pop
adc
pop
mov
pop
add
outsl
xchg
pop
xor
xchg
pop
xchg
outsl
add
add
add
xchg
pop
daa
add
pop
and
popw
and
xchg
pop
and
ss
and
xchg
pop
and
es
and
xchg
pop
and
ss
and
xchg
pop
and
es
and
xchg
pop
and
testb
imul
pop
and
testb
imul
and
xchg
pop
and
mov
and
xchg
pop
and
cmpsl
pop
and
xchg
pop
and
mov
and
add
add
add
xchg
pop
and
cmpsl
pop
and
xchg
pop
and
ja
and
xchg
pop
and
addr16
and
xchg
pop
and
sbb
and
dec
or
add
and
pop
or
popa
cmc
and
adc
and
push
cmc
and
adc
cmc
and
repz
dec
cmc
and
sbb
and
pop
cmc
and
cmp
or
add
or
add
or
aad
sbb
add
add
add
or
rorl
inc
add
or
and
inc
add
pop
add
or
cltd
or
add
or
or
add
jg
xchg
lds
xchg
mov
popa
nop
lret
nop
leave
es
sbb
jp
xor
fstl
test
jl
xor
push
nop
xor
add
cs
push
nop
sub
or
add
add
add
sbb
sbb
push
daa
adc
add
inc
nop
sti
es
nop
mulb
pop
nop
mull
outsb
nop
dec
es
movsb
bound
push
add
dec
es
nop
inc
es
nop
pop
mov
lcall
add
push
pop
add
push
add
push
add
push
add
add
add
add
push
inc
add
jnp
xor
jb
enter
outsl
push
stos
add
mov
popa
push
cmpsb
add
push
jl
mov
jae
lods
push
je
mov
push
popa
add
or
cltd
push
xor
jno
in
popf
push
cwtl
push
movsl
push
xchg
push
int
loopne
lcall
push
jo
and
xchg
add
cmpsl
add
add
add
xchg
ret
mov
and
inc
mov
and
push
mov
and
xchg
sub
lcall
and
xchg
mov
and
xchg
sub
je
int
outsb
mov
and
xchg
pop
and
and
mov
and
mov
and
xchg
sbb
les
add
add
add
or
add
add
sidtl
bound
dec
or
sbb
adc
xor
push
add
or
xchg
pop
sbb
dec
bound
xor
sub
or
and
or
arpl
xor
arpl
add
xor
bound
xor
xor
shlb
add
add
add
xor
fbstp
cltd
bound
xor
pop
mov
sbb
andb
jns
lods
popa
mov
popa
xchg
rcl
mov
aad
mov
in
and
mov
shll
mov
mov
scas
and
subl
and
popa
xor
add
add
add
popa
sub
popa
sbb
shll
shll
aad
xor
mov
add
mov
jmp
loopne
cld
and
cmp
cltd
pushl
sbb
ljmp
sbb
ljmp
sbb
cli
pop
mov
in
pop
loope
out
cwtl
jmp
pop
xchg
decl
sbb
add
add
pop
jno
mov
data16
stos
or
cmpsl
or
jo
push
jae
or
jb
add
jne
or
insb
or
mov
add
test
or
mov
or
lods
or
movsb
or
jg
and
inc
xor
sbb
pop
and
nop
adc
mov
nop
sbb
lahf
add
add
add
nop
sbb
xchg
nop
sbb
xchg
nop
pop
and
nop
sbb
and
nop
lds
mov
lret
and
leave
and
enter
iret
and
into
and
int
push
nop
int3
and
lret
and
and
nop
int
push
nop
into
and
nop
mov
sbb
mov
jne
add
add
add
ficompl
add
pop
je
aam
ja
add
pop
jno
pop
pop
jb
adc
add
pop
jl
and
add
pop
jle
jl
jg
pop
pop
mov
pop
pop
jns
dec
pop
jp
cmp
cltd
pop
and
add
pop
and
test
adc
pop
and
pop
and
pop
and
pop
sub
adc
add
add
add
add
add
pop
das
add
pop
stos
add
pop
sub
mov
push
xchg
xor
dec
lea
fldcw
xchg
xor
xor
and
xor
cmpsb
fiaddl
lods
fidivl
xchg
test
inc
lea
fidivrl
lea
fidivrl
lea
fidivrl
mov
fimull
sbb
lea
add
add
xchg
je
inc
lea
fiaddl
push
fidivl
xchg
sbb
dec
lea
fimull
sub
ss
stc
flds
or
dec
lea
pusha
flds
sbb
iret
add
dec
add
sahf
add
mov
add
mov
add
std
jb
ljmp
add
std
cmpsb
add
std
test
add
add
add
add
std
jl
mov
std
jg
pop
std
cmpsb
add
jno
push
std
jo
js
jae
jae
jl
jp
addb
std
push
fs
mov
add
jl
and
insb
das
and
fs
and
andb
dec
test
dec
inc
daa
dec
cmp
scas
daa
mov
add
add
add
lea
orb
daa
xchg
lcall
js
stos
daa
jnp
stos
daa
pop
lcall
pop
mov
push
mov
ds
xor
xchg
daa
mov
lcall
sub
push
mov
lods
push
mov
scas
push
mov
scas
push
mov
mov
add
add
add
push
mov
add
mov
add
or
test
fimull
addb
push
addl
pop
push
addl
push
mov
rorl
xchg
add
push
xchg
add
push
xchg
add
nop
add
push
xchg
add
push
xchg
add
pushf
add
popf
add
add
add
add
lds
mov
xchg
ret
xchg
sbb
mov
xchg
ljmp
ret
xchg
std
sub
les
pop
sub
xchg
push
sub
mov
mov
or
lea
add
sub
mov
sub
mov
daa
mov
mov
daa
movsb
add
add
add
mov
daa
cmpsb
jb
daa
fwait
jb
daa
popf
jb
daa
sahf
jb
sub
stc
and
mov
sub
and
pop
or
and
or
mov
add
and
add
shlb
or
daa
add
and
out
adc
out
adc
xchg
or
mov
add
add
add
mov
and
loop
xchg
and
xchg
add
mov
or
daa
stos
or
daa
orb
and
mov
push
add
or
inc
mov
add
add
and
push
fwait
or
push
mov
add
testl
adc
repz
mov
add
mov
pop
clc
add
add
add
cwtl
pop
add
mov
pop
cmc
cwtl
sti
add
xchg
and
xlat
mov
add
test
add
pushf
add
add
mov
add
fwait
add
fwait
add
mov
add
mov
add
fwait
or
xor
bound
pop
and
or
add
clc
or
and
or
and
add
or
jb
add
add
add
add
jae
cmc
add
add
movl
and
ret
add
and
add
add
push
and
jg
je
js
cmc
add
testb
and
add
and
add
es
in
sub
add
and
sub
cmp
sbb
cmp
sbb
xchg
sub
push
jo
sub
add
add
sub
sbb
je
sub
mov
es
scas
mov
sub
lods
mov
sub
lods
add
mov
ja
sub
stos
je
sub
insb
pop
sub
sbb
cmp
push
ja
arpl
cs
cs
nop
and
xchg
and
add
add
add
pop
mov
or
mov
or
movsl
or
movsb
or
sub
jle
inc
or
js
jnp
jae
scas
daa
scas
or
pop
stos
or
sub
or
or
push
or
sub
or
pop
pop
or
sub
or
sub
or
add
add
add
sahf
or
sub
or
sub
or
sub
sahf
cld
add
xchg
aaa
and
xchg
and
xchg
cmp
mov
cmp
and
mov
and
xor
inc
sahf
xor
cmp
mov
and
xor
and
xchg
and
add
add
add
mov
sbb
push
and
xchg
lahf
insb
and
xchg
pop
and
mov
jecxz
popa
and
cwtl
or
add
es
or
pop
push
sbb
and
dec
and
inc
sub
push
sub
push
sub
push
inc
daa
push
push
sub
data16
sub
pop
sub
add
add
add
clc
std
xor
sub
xor
push
sti
add
push
cld
add
push
in
add
push
fiadds
xor
mov
add
loope
cmp
push
roll
aas
push
je
cmp
add
push
jbe
cmp
idiv
cmp
call
lahf
sub
xchg
sahf
sub
popf
sub
xchg
and
mov
sub
add
add
add
lahf
cmpsl
sub
xchg
cmpsb
sub
xchg
sub
xchg
sub
sbb
xchg
sub
lahf
cvttps2pi
xchg
push
sub
in
sub
xchg
sub
repz
adc
xchg
sub
lahf
pop
sub
xchg
push
sub
xchg
sub
lahf
add
xchg
ljmp
inc
popl
out
pop
roll
out
pop
push
add
pop
add
add
add
dec
add
pop
push
add
pop
dec
add
pop
push
add
pop
pop
add
pop
dec
add
pop
pop
add
pop
dec
add
popa
add
add
inc
add
inc
add
cmp
add
filds
jb
out
gs
flds
fs
enter
mov
push
outsb
or
push
push
or
add
add
add
push
jne
imul
adc
xchg
mov
test
adc
jns
adc
cwtl
adc
mov
adc
mov
adc
cwtl
lret
adc
cwtl
lret
mov
adc
mov
adc
cwtl
mov
adc
mov
adc
cwtl
ret
adc
cwtl
ret
mov
adc
add
add
add
mov
adc
cwtl
mov
sub
mov
sub
mov
adc
mov
jb
pusha
jnp
jno
jl
jb
jge
jecxz
jg
cmp
js
sub
or
aas
or
or
inc
xor
or
cli
or
sbb
inc
xor
mov
add
or
adc
add
add
add
or
adc
or
adc
add
xchg
adc
add
nop
adc
add
xchg
adc
add
and
mov
clc
and
or
mov
mov
inc
and
mov
xor
and
add
add
add
xchg
and
jno
addl
jbe
lea
mov
jmp
xlat
and
sbb
stc
and
test
mov
push
nop
jnp
push
nop
xchg
ja
addb
mov
pop
mov
mov
outsb
and
es
and
es
and
es
mulb
jne
stc
es
add
add
add
es
es
cmp
test
les
insl
stc
jne
adc
mov
mov
mov
mov
sub
cmpsb
cmpb
subl
arpl
stc
adc
cwtl
push
mov
in
clc
adc
xchg
pushf
mov
in
clc
add
imul
add
add
add
insb
push
lds
dec
int3
imul
push
insb
mov
xchg
dec
insb
mov
int3
imul
imul
lret
imul
imul
lret
imul
imul
xchg
dec
fadds
insb
or
xchg
lret
mov
imul
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
js
and
js
and
push
in
add
cmp
push
sub
and
adc
aaa
push
icebp
and
cmp
and
sub
arpl
dec
imul
pop
xor
pop
cs
ja
cmp
clc
pop
jp
dec
bound
dec
pop
inc
addr16
imul
add
add
xchg
dec
outsl
cwtl
xor
pushf
cs
ja
cmp
movsb
pop
pop
add
pop
and
js
and
js
and
xchg
pusha
daa
add
pusha
daa
add
pusha
daa
add
pusha
daa
add
pusha
daa
add
pusha
daa
add
pusha
daa
add
pusha
daa
add
add
add
add
pusha
daa
add
pusha
daa
add
pusha
daa
add
pusha
daa
add
pusha
daa
add
pusha
daa
add
fnstenv
mov
inc
push
xchg
push
jle
jb
jbe
push
outsb
dec
bound
dec
sbb
dec
adc
dec
or
dec
add
dec
cmp
dec
int
add
add
add
xchg
push
rorl
add
cld
daa
dec
ficoml
dec
sar
mov
testl
push
dec
cli
push
decb
push
testb
out
dec
loop
out
lcall
sti
testl
dec
mov
push
mov
stos
push
scas
dec
mov
push
sahf
dec
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
mov
add
add
add
add
and
push
add
add
and
js
and
push
add
and
add
add
and
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
nop
pop
and
nop
pop
and
xchg
pop
daa
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int3
add
pop
iret
add
pop
int3
add
pop
roll
pop
iret
add
pop
ret
add
add
add
add
pop
cmp
mov
cmp
pop
adc
jae
pop
inc
add
pop
jp
popf
pop
in
jae
pop
push
add
pop
cmp
add
pop
pop
add
pop
xor
and
xchg
push
and
cmp
or
cmp
or
xchg
sbb
xchg
adc
add
add
add
std
and
xchg
or
std
and
out
sbb
sub
xchg
or
adc
or
mov
or
and
xchg
mov
mov
or
in
add
inc
xchg
sbb
xchg
sbb
and
fimull
and
fdivrl
add
add
add
in
or
add
or
add
arpl
repnz
add
add
sub
jo
arpl
inc
or
add
mov
and
in
arpl
cmp
sub
fdivrl
xor
enter
or
add
mov
das
add
add
mov
sub
add
add
mov
and
xchg
pop
push
inc
xchg
negl
or
cmp
adc
sub
adc
call
push
inc
xchg
inc
daa
adc
pop
adc
sub
adc
xchg
and
xchg
mov
inc
xchg
fistps
adc
ds
adc
push
and
xchg
in
inc
add
add
add
xchg
movsl
pop
push
xchg
clc
push
inc
xchg
add
push
xchg
sbb
xchg
pop
adc
cmp
xchg
pop
test
popf
pop
fnsave
pop
mov
addl
ja
pop
jl
jg
fnstenv
pop
push
add
pop
into
add
dec
add
inc
jbe
pop
aas
add
pop
gs
pop
sti
add
pop
adc
mov
or
pop
adc
add
add
add
mov
pop
icebp
add
pop
cwtl
add
pop
mov
popf
pop
loope
roll
fildl
xchg
pop
jmp
add
pop
and
xchg
or
outsb
and
lea
and
popa
and
xchg
or
dec
popa
and
inc
and
and
or
and
and
add
add
add
and
and
xchg
add
and
enter
sbb
lea
and
loope
and
or
xchg
lock
lea
and
mov
or
push
add
arpl
into
add
add
arpl
or
and
push
mov
add
add
arpl
add
add
add
mov
mov
add
mov
add
add
add
mov
add
mov
add
add
add
arpl
pop
add
add
arpl
sti
add
add
and
shlb
sub
mov
sub
insb
mov
add
mov
add
cmp
xchg
pop
daa
or
add
add
add
mov
or
mov
dec
inc
xchg
cli
pop
inc
nop
out
inc
xchg
ret
pop
push
xchg
fimuls
xchg
in
sub
and
or
arpl
xor
pop
pop
xchg
adc
inc
xchg
lcall
or
xor
dec
inc
xchg
xor
or
mov
daa
inc
xchg
cwtl
dec
inc
add
add
add
xchg
mov
add
add
xchg
pop
addl
pop
add
add
pop
int
roll
lods
add
pop
mov
mov
icebp
insb
push
pop
mov
insl
push
pop
mov
insl
push
pop
popf
add
pop
add
pop
cmp
add
pop
xor
add
pop
xor
add
pop
insb
add
add
add
add
pop
xchg
add
pop
cmp
pop
or
add
pop
and
xchg
or
xchg
out
and
mov
and
push
and
test
and
js
and
xchg
push
and
push
adc
xchg
push
and
imul
in
jecxz
insl
cmp
and
add
add
add
sub
and
cmp
and
xchg
add
sub
and
and
sti
and
push
and
jmp
and
xchg
or
and
jmp
or
add
add
add
add
add
add
mov
add
scas
arpl
sub
pusha
scas
arpl
add
add
add
or
add
mov
add
or
add
scas
arpl
or
and
add
and
sbb
and
shrb
and
or
sub
and
and
add
cmp
js
arpl
xchg
mov
dec
inc
xchg
aas
daa
setno
dec
inc
xchg
fsubl
push
xchg
ss
inc
xchg
pop
daa
add
add
add
add
pop
daa
push
xchg
inc
inc
xchg
aaa
daa
or
das
daa
or
mov
xchg
mov
or
adc
addl
and
xchg
mov
inc
xchg
add
or
data16
xchg
dec
daa
or
sub
or
xchg
leave
pop
push
xchg
pushf
test
pop
push
add
pop
popa
mov
add
roll
incl
jge
imul
roll
sbb
pop
or
pop
pop
add
pop
andl
push
pop
filds
mov
pop
ss
pop
jno
push
pop
and
xchg
inc
mov
mov
pop
or
pop
pop
mov
addl
repnz
add
add
add
pop
loopne
pushf
pop
mov
sub
adc
xchg
adc
xchg
adc
and
xchg
pop
and
lock
and
lea
and
lock
and
lock
and
xor
and
push
and
xor
and
xor
and
and
add
add
add
repz
and
repz
and
xchg
add
lea
and
lret
and
xor
and
cwtl
add
add
add
add
add
data16
add
add
data16
cmp
cmp
cmp
dec
movsl
arpl
mov
movsl
arpl
add
add
add
repz
add
movsl
arpl
inc
add
add
add
add
movsb
arpl
lret
add
add
movsb
arpl
and
or
mov
add
add
add
arpl
xchg
out
or
cltd
daa
or
or
or
dec
daa
or
js
or
mov
inc
xchg
mov
sub
add
add
add
pop
daa
or
stc
adc
out
or
ljmp
xchg
push
daa
pop
xchg
pop
inc
inc
xchg
mov
inc
inc
xchg
ret
pop
es
cmp
xchg
stc
pop
or
adc
xchg
xor
adc
xchg
pop
cmp
bound
push
mov
insl
bound
add
add
add
pop
loop
mov
sbb
pop
mov
mov
or
pop
cmp
popl
imul
pop
or
pop
daa
add
pop
frstor
pop
jb
cltd
pop
in
bound
rolb
pop
jmp
add
pop
rolb
xchg
pop
add
pop
mov
sahf
pop
add
add
pop
and
add
add
add
je
imul
imul
mov
je
mov
push
push
adcb
outsb
and
out
push
lds
mov
mov
sbb
mov
shll
xchg
sahf
in
cmpsb
mov
and
gs
enter
fs
dec
sbb
mov
push
jb
xor
and
or
scas
mov
outsl
pop
dec
fnstsw
mov
fimuls
add
fmulp
xor
cwtl
adc
dec
mov
ja
jae
add
add
sahf
test
inc
mov
es
pmulhuw
or
sbb
sbb
mov
jecxz
cmpsb
pop
fisubrl
mov
sbb
cmpsl
jbe
repz
jg
pop
loop
mov
dec
xchg
add
scas
lahf
loopne
ja
ja
jb
xor
add
add
add
inc
adc
mov
adc
outsl
in
dec
mov
loope
outsl
repnz
mov
xor
aad
inc
mov
sub
mov
xor
add
xor
dec
test
sarl
loope
xor
daa
add
sahf
and
xchg
inc
daa
add
mov
add
add
xchg
or
add
mov
and
xchg
jmp
and
xchg
or
add
sahf
and
xchg
inc
daa
add
sahf
and
xchg
dec
daa
add
daa
add
pop
int
xchg
pop
int3
add
push
int3
add
push
int3
add
push
int3
add
or
add
push
int3
add
push
int3
add
add
add
add
xchg
add
iret
call
or
add
lea
roll
add
leave
call
or
add
or
add
int3
push
xchg
or
push
xchg
push
into
push
xchg
push
into
push
xchg
or
push
mov
into
push
xchg
push
int3
add
push
int3
push
nop
push
and
xchg
or
lea
and
add
add
add
xchg
std
fisttpll
adc
xor
test
cmp
lods
call
add
jne
push
mov
jge
push
mov
cld
adc
pop
hlt
sbb
icebp
stos
inc
shl
dec
mov
std
mov
mov
mov
jle
cmp
jp
in
cmpsl
inc
test
lods
inc
xorl
add
movsb
dec
add
push
jae
ja
ja
jae
jnp
outsl
pop
jg
xchg
xchg
jle
mov
pop
xchg
mov
inc
xorb
dec
lcall
aam
andl
mov
mov
popf
mov
test
in
je
loope
jo
in
lret
pushf
enter
add
add
add
shl
or
fisttpl
adc
out
push
pminsw
xor
out
out
push
repnz
or
fidivs
push
cli
fisubl
adc
push
add
es
dec
adc
push
sbb
xor
jbe
and
inc
into
sub
outsb
xor
add
add
add
jbe
cmp
pop
xchg
dec
mov
imul
jp
jne
jbe
jns
xor
mov
lods
ret
cmpb
mov
mov
into
cmp
mov
cmp
test
test
js
jns
pop
cmpb
xchg
jno
add
add
add
call
imul
das
gs
sub
imul
jnp
jno
ja
jge
jae
jns
outsl
or
inc
dec
inc
add
dec
inc
aas
cmp
push
aas
push
and
mov
dec
sti
or
ret
add
lret
stc
movsl
cmp
cmc
mov
add
add
add
sub
fucomi
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
cs
pop
xchg
pop
and
lea
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
cs
jmp
xchg
pop
and
cmp
and
cmp
and
sub
and
add
add
add
sub
and
clc
or
clc
or
cmpsb
cmc
fiaddl
call
or
clc
or
call
or
mov
or
test
and
repz
mov
or
test
and
test
and
js
and
js
fildl
repz
js
and
js
and
push
or
add
add
add
cmp
and
out
xchg
aad
pushl
mov
daa
add
push
daa
add
push
daa
add
adc
adc
outsb
push
daa
add
push
daa
add
push
daa
add
pop
daa
add
push
daa
add
push
daa
add
gs
add
add
add
xchg
daa
add
push
daa
add
push
daa
add
push
daa
add
pop
dec
add
pop
int
nop
pop
int3
add
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
int3
add
pop
dec
adcl
int
adc
rcll
or
pop
jge
icebp
pop
xchg
pop
int
xchg
xchg
or
add
add
add
fwait
sbb
adc
sbbl
adc
sbbl
adc
adc
int
stos
or
fists
adcl
adc
jl
movsb
imul
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
js
and
push
push
and
cmp
and
cmp
add
adc
sub
add
add
add
add
add
and
add
add
and
add
adc
clc
packuswb
in
and
call
and
pushl
adc
call
and
call
adc
mov
loope
add
add
and
jmp
adc
jl
and
js
add
add
add
add
add
push
rolb
xchg
xchg
xor
roll
xor
das
roll
divl
inc
xchg
dec
roll
out
inc
xchg
dec
roll
pop
xor
sub
add
sub
add
dec
roll
out
inc
xchg
dec
roll
pop
xor
push
ret
inc
xor
aaa
add
and
add
add
add
add
push
add
pop
and
xchg
pop
fstpl
rolb
rclb
xchg
pop
fstpl
rolb
ret
adc
pop
repnz
pop
mov
rolb
sub
adc
pop
sub
xchg
pop
adc
rolb
das
out
pop
add
rolb
cs
pop
xor
push
pop
jmp
sbb
call
sbb
jmp
xchg
pop
std
sbb
add
add
add
ljmp
pop
xor
adc
and
xchg
pop
xchg
adc
aaa
loop
pop
test
push
pop
and
jae
and
mov
or
mov
or
or
xlat
jo
and
or
xor
and
mov
daa
fildl
lret
xor
or
sti
xor
or
cli
add
add
add
lock
mov
fildl
lret
lock
or
mov
jl
and
pushf
lret
movsb
pop
and
pushf
lret
test
and
jl
and
xchg
cld
and
mov
sti
and
push
sti
and
js
data16
and
push
sti
and
cmp
data16
sti
and
add
add
add
push
daa
and
sar
data16
daa
and
popa
stc
data16
daa
and
jno
data16
sub
mov
sub
push
stc
data16
stc
data16
sub
mov
data16
daa
and
mov
sub
shl
data16
push
xor
add
jmp
xor
add
add
inc
xor
add
fadd
add
in
lds
xchg
ja
inc
xchg
pop
lds
xchg
xor
xchg
pop
lds
xchg
xlat
xor
xchg
add
xchg
out
inc
xchg
add
inc
xchg
lds
xchg
xor
xchg
arpl
add
test
add
test
add
pop
gs
add
add
add
pop
adc
xchg
pop
xchg
adc
pop
loop
pop
test
rolb
ss
pop
mov
rolb
popa
loop
pop
in
rolb
adc
xchg
pop
xchg
adc
pop
add
xchg
pop
test
rolb
xor
xchg
pop
mov
rolb
in
loope
pop
fs
pop
in
loope
pop
adc
rolb
out
loope
pop
add
push
pop
out
loope
pop
xor
push
pop
test
adc
add
add
add
test
xchg
pop
adc
push
pop
stos
loope
pop
add
push
pop
and
mov
and
mov
push
and
xchg
and
push
and
xchg
and
push
and
cmpsb
and
or
cmpsb
and
xchg
and
or
xchg
and
outsl
or
cmpsb
and
das
or
cmpsb
and
aas
or
fadds
add
add
add
or
mov
cmpsb
and
cmpsb
and
xchg
and
and
push
sub
add
data16
mov
cld
and
test
data16
and
cwtl
clc
data16
and
push
cld
and
pop
clc
data16
data16
and
add
add
add
pop
clc
data16
clc
data16
sub
add
stc
data16
stc
data16
stc
data16
stc
data16
sub
mov
pop
sub
push
stc
data16
xlat
xor
mov
setno
xor
mov
setno
xor
cwtl
lret
inc
xor
cmpsl
lret
push
xor
add
add
add
xor
movsl
lret
ja
inc
xchg
lcall
xchg
stos
lret
push
xor
cwtl
lret
xor
test
xor
sahf
roll
xor
lahf
roll
xlat
xor
mov
xor
mov
xor
pop
pop
out
pop
fs
xchg
pop
adc
push
pop
jnp
add
add
add
xchg
pop
add
push
pop
jp
xchg
pop
xor
push
pop
movsl
in
pop
in
push
pop
push
in
pop
xchg
adc
pop
inc
in
pop
test
pop
jbe
xchg
pop
mov
rolb
mov
adc
pop
push
in
pop
xchg
adc
pop
inc
in
pop
test
pop
jb
xchg
pop
mov
rolb
lods
in
and
pop
lods
in
and
rolb
scas
in
and
add
add
add
push
pop
and
hlt
push
and
popf
les
dec
in
and
dec
hlt
push
and
jge
and
pop
and
mov
pop
and
mov
pop
fcmovnb
add
xorb
and
mov
or
mov
or
inc
jae
and
or
push
xor
and
mov
add
add
add
or
mov
or
or
cwtl
xor
and
or
add
cli
data16
and
mov
sub
push
cli
data16
cli
data16
cli
data16
and
mov
repz
test
add
hlt
and
cwtl
or
add
sbb
xor
data16
sub
add
add
add
and
data16
sub
push
stc
data16
sub
and
data16
sub
icebp
clc
data16
stc
data16
and
sar
data16
xlat
xor
add
icebp
les
xchg
divl
add
jmp
add
out
aad
nop
out
inc
xchg
in
les
xchg
divl
add
add
inc
xor
call
pop
incl
imul
inc
xchg
push
jmp
xor
call
xor
incl
xor
pushl
js
inc
xchg
pop
sbb
or
xchg
pop
adc
push
pop
aas
loop
pop
add
push
pop
loop,pt
pop
xor
push
pop
sbb
add
add
add
xchg
pop
adc
sbb
xchg
pop
adc
push
pop
cmp
xchg
pop
add
push
pop
cmp
xchg
pop
xor
push
pop
in
xchg
pop
in
push
pop
xchg
loope
pop
xchg
adc
pop
xchg
xchg
pop
test
rolb
mov
xchg
pop
mov
rolb
loope
xchg
pop
in
rolb
nop
loope
pop
xchg
adc
pop
and
pop
test
rolb
and
xor
and
or
and
add
add
add
or
and
mov
push
and
mov
push
and
or
and
or
and
mov
push
and
mov
push
and
or
and
cmpsb
enter
push
and
xchg
and
outsl
or
xchg
and
outsl
or
data16
and
data16
and
add
and
inc
and
push
and
icebp
adc
mov
add
adc
enter
sbb
data16
adc
lret
add
and
adcl
and
push
adc
jne
and
adcl
and
jno
data16
adc
mov
and
rcll
data16
and
add
add
add
add
data16
and
xor
data16
and
add
data16
and
push
adc
xchg
jae
add
add
xchg
rolb
xchg
iret
ljmp
inc
fldl
xor
add
xor
add
xor
add
das
daa
add
das
daa
add
das
daa
add
add
add
add
das
daa
add
das
daa
add
das
daa
add
cs
das
add
das
add
pop
int3
add
push
int3
add
push
int3
add
push
int3
add
push
int3
add
push
leave
pop
xchg
add
pop
lea
leave
pop
add
add
add
xchg
add
pop
lea
leave
pop
xchg
add
pop
lea
leave
pop
xchg
add
pop
lea
leave
pop
xchg
add
pop
lea
leave
pop
xchg
add
pop
lea
leave
pop
xchg
add
pop
lea
leave
pop
xchg
add
pop
lea
int
xchg
pop
int
xchg
pop
int
xchg
pop
int
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
hlt
push
and
std
les
call
std
les
jmp
push
and
ffree
and
hlt
push
and
ffree
and
mov
mov
pop
mov
pop
fistl
popf
les
out
movsl
pop
fcmovnb
mov
or
or
add
sbb
add
add
add
jb
and
add
data16
and
push
sbb
xor
add
data16
icebp
sbb
ss
incl
sbb
daa
sbb
call
sub
rcrl
add
sub
mov
data16
sub
sbbl
and
push
sbb
int3
sub
incl
das
jno
data16
sbb
incl
add
add
add
sbb
call
sbb
xchg
sbb
add
daa
lds
xchg
addr16
inc
xchg
cmp
add
or
add
sbb
incl
inc
xchg
sub
pushl
addr16
inc
xchg
ds
es
inc
xchg
or
aad
xchg
add
add
inc
add
add
add
add
add
add
aad
xchg
inc
vshufps
inc
xchg
inc
cld
pushl
inc
sar
cmpsb
repz
pop
sub
xchg
adc
and
icebp
roll
xor
xchg
pop
test
roll
daa
loop
pop
mov
roll
mul
xchg
pop
in
roll
loope
inc
adc
lock
ss
jecxz
es
xor
add
add
add
push
adc
cmp
icebp
push
pop
fsub
xchg
pop
add
push
pop
xchg
pop
xor
push
pop
loope
pop
fs
push
pop
stc
loope
adc
icebp
push
pop
cwtl
mov
add
push
pop
and
mov
leave
and
mov
leave
and
jae
and
or
and
popa
leave
and
jo
and
popa
leave
and
jo
and
add
add
add
inc
leave
and
xor
mov
leave
and
pop
adc
mov
and
popf
es
and
and
inc
add
and
add
and
loope
and
loope
and
ror
lods
ret
adc
xor
enter
sbb
pushl
data16
sbb
incl
sbb
call
data16
add
add
add
sbb
rcrl
xor
data16
sbb
mov
sbb
insb
sbb
incl
sbb
jge
icebp
sbb
outsb
sbb
incl
sbb
fistps
push
sbb
dec
sbb
inc
sbb
sbb
pushl
sbb
incl
sbb
call
data16
add
add
add
jae
ljmp
jb
lcall
rcl
decl
fcom
jle
rolb
out
ljmp
rolb
not
lcall
rolb
dec
inc
rolb
ds
rolb
jmp
ljmp
rolb
cli
sar
push
ja
inc
xchg
dec
sar
push
roll
inc
sar
roll
add
add
add
out
inc
xchg
roll
not
inc
xchg
pop
scas
in
pop
notb
test
out
push
pop
test
scas
adc
out
push
pop
stos
hlt
sahf
adc
repz
repnz
gs
jle
xchg
cmc
roll
je
xchg
or
pop
adc
xchg
push
in
roll
and
adc
add
add
add
adc
push
adc
push
adc
pop
std
in
pop
iret
out
push
pop
pushf
in
pop
iret
out
push
pop
and
hlt
add
out
and
mov
and
cmpsl
lds
jl
add
mov
and
add
cmpsl
lds
pop
ja
and
ja
and
add
lds
inc
ja
and
add
add
add
ja
and
ja
and
lds
and
add
aaa
lds
adc
daa
lds
add
add
aaa
lds
divl
and
daa
lds
out
jmp
jmp
les
imul
les
add
and
mov
data16
sbbl
and
push
sbb
sub
and
sbbl
and
jno
data16
add
add
add
sub
sbbl
and
push
sbb
lock
inc
sbb
loope
and
xor
data16
sub
add
data16
sub
push
sbb
mov
and
add
data16
sbb
mov
and
add
data16
sbb
xchg
nop
sar
not
inc
xchg
scas
sar
out
inc
xchg
mov
incl
add
add
add
not
inc
xchg
xchg
sar
mov
inc
xchg
mov
pushl
stos
sar
cmpsb
out
inc
xchg
scas
sar
xchg
not
inc
xchg
iret
incl
cwtl
iret
pushl
inc
xchg
cmpsl
iret
jmp
inc
xchg
mov
inc
xchg
mov
incl
inc
xchg
xchg
iret
pushl
push
inc
xchg
mov
inc
xchg
mov
call
ja
inc
add
add
add
xchg
pop
mov
repnz
pop
lods
shl
in
adc
push
pop
lods
shl
in
add
push
pop
scas
rcl
in
xor
push
pop
outsb
rol
in
arpl
push
pop
imul
push
pop
push
repnz
pop
imul
or
stos
xrelease
movsl
loop
or
mov
or
roll
cmpsl
repz
or
jbe
add
add
add
inc
or
popa
repz
jo
es
and
and
and
add
and
loopne
and
or
and
leave
and
or
adc
leave
and
or
inc
ror
pop
mov
mov
or
and
or
adc
or
rolb
add
add
or
pop
mov
leave
and
popa
leave
and
or
nop
inc
leave
and
or
rolb
push
inc
or
mov
leave
and
int
icebp
push
data16
and
data16
cmp
data16
pop
data16
pop
data16
pop
data16
push
pop
data16
add
add
add
add
data16
and
jno
data16
and
mov
ds
push
adc
xor
jmp
adc
and
data16
xor
mov
data16
adc
data16
push
roll
push
ret
roll
roll
rcl
decl
rol
add
add
add
add
out
roll
out
inc
xchg
out
roll
not
inc
xchg
int
add
int3
sar
xlat
rolb
jmp
lcall
ljmp
xchg
dec
sar
jle
rolb
pop
roll
push
rolb
roll
rolb
jbe
add
pop
out
xchg
pop
in
roll
xchg
in
pop
xchg
testb
add
add
roll
and
pop
test
roll
mov
xchg
pop
mov
push
pop
in
pop
notb
insl
in
adc
push
pop
insb
in
movl
in
xor
push
pop
cs
pop
iret
clc
push
pop
sub
scas
or
push
pop
sub
sahf
or
push
pop
sub
mov
xor
roll
ljmp
pop
in
sahf
pop
xchg
cmc
roll
hlt
xlat
add
add
add
mov
test
roll
and
or
sub
aaa
stc
and
aas
and
sbb
and
and
cld
lds
push
add
fildl
lds
pop
loop
fistpl
loop
fcmovnu
fadd
and
ret
sbb
ret
sub
mov
lds
cld
mov
add
add
add
and
mov
and
xchg
pop
and
js
and
arpl
push
adc
data16
adc
data16
adc
call
data16
data16
adc
xchg
and
and
data16
and
dec
push
data16
add
clc
add
ljmp
incl
add
add
add
add
mov
add
fdivs
mov
jo
in
scas
cmpsl
jmp
or
movsb
repz
sub
add
insl
jbe
xchg
add
enter
scas
jp
lods
pop
cli
fdivs
nop
mov
fsubp
jg
lds
xchg
ja
insl
jge
push
int3
fucomip
add
jmp
outsl
push
xchg
mov
add
add
add
lret
in
mov
jmp
add
dec
cmp
sbb
dec
inc
or
insb
jo
into
xchg
mov
out
sbb
sbb
mov
or
enter
xchg
jle
lahf
dec
pop
inc
out
fdiv
stc
jb
jmp
lea
xchg
add
dec
xchg
cmpsl
int
jle
mov
mov
add
add
rorl
sbb
int
push
shlb
jecxz
mov
xchg
faddp
dec
dec
jecxz
rclb
leave
fistps
push
push
adc
sub
popa
insl
lods
movsb
jle
and
cmp
sub
dec
ja
sub
jno
leave
inc
cmp
mov
add
and
dec
pop
xchg
add
stos
xchg
inc
add
add
add
xor
ss
lea
subb
or
dec
sbbl
pop
decb
adc
stos
fdivs
popa
inc
mov
out
fisttps
aam
pop
sub
pushl
stc
ficompl
in
inc
dec
psubusb
outsl
aas
bound
adc
jmp
or
xchg
fwait
aam
out
testb
add
add
ret
dec
lods
int
or
push
fsubl
add
aaa
jae
and
mov
dec
insl
mov
add
push
mov
sbb
pop
mov
push
lcall
push
js
dec
negb
jge
stc
dec
int
aas
ds
fstps
lods
push
lods
and
add
push
repz
or
cmp
add
add
add
mov
js
mov
in
sbb
out
cmp
cmp
sbb
sti
pop
repnz
or
fdivl
push
xchg
mov
fcoml
pushf
mov
daa
scas
jl
fwait
add
cwtl
je
mov
xchg
call
mov
fistps
inc
mov
adc
add
sbb
mov
mov
fbld
sbb
loop
mov
call
pop
stos
aam
imul
jb
mov
sbb
lahf
mov
stos
jge
pop
pusha
scas
push
pop
xor
mov
cmp
aam
cmp
aam
cmp
aam
cmp
aad
cmp
aad
cmp
loop
sbb
add
add
add
adc
mov
std
repnz
mov
aam
cmp
aam
cmp
xchg
imul
xor
or
and
xor
jmp
aad
xor
and
push
addr16
push
mov
and
mov
movsl
fdiv
inc
cmc
add
add
add
addr16
pop
lds
pop
lods
pop
inc
pop
xor
jae
and
xchg
adc
fisubs
cmp
dec
ss
jmp
fnstsw
and
mov
aad
mov
inc
cmc
push
lea
adc
and
mov
xor
mov
ficoms
scas
pushf
jl
shlb
movb
add
add
add
xlat
xchg
fcoms
sub
sbb
xor
and
dec
pop
sbb
call
sub
test
push
xor
movsb
shlb
movsb
rolb
aam
fidivs
imul
pop
jge
aas
push
shlb
call
xor
add
es
ss
push
mov
add
cltd
movsl
les
add
mov
fs
out
and
xchg
jg
cmc
mov
jg
cmc
ret
addr16
rcrl
cld
outsl
rorl
sub
test
jmp
fld
mov
xchg
cmp
pop
jecxz
inc
cmpsb
xor
push
sahf
cmp
arpl
dec
jmp
xchg
lds
mov
add
add
add
test
jmp
rcl
cmpsb
daa
mov
ljmp
fsubr
and
lods
out
into
insl
pop
mulb
out
push
mov
daa
and
xchg
jecxz
push
mov
int3
sarb
adc
ret
int
inc
cmp
lcall
add
adc
es
add
add
add
mov
sub
lret
jns
fiaddl
leave
sbb
leave
sub
leave
ljmp
adc
pop
mov
inc
outsl
out
jecxz
sbb
mov
stos
inc
and
lret
inc
pop
and
lds
stc
or
add
dec
jmp
mov
test
pop
xchg
add
add
fndisi(8087
push
add
lret
add
in
adc
fisttpll
sbb
push
and
mov
push
inc
sbb
dec
sub
xchg
lods
push
gs
xchg
pop
pop
pop
mov
pop
jge
rcll
pop
rcll
sub
jmp
pusha
add
jb
dec
out
add
mov
cltd
cmp
cmp
and
jle
add
add
add
aam
dec
cmp
test
jg
pop
inc
stos
lcall
shrl
cld
push
stos
aas
cmp
jge
push
in
addl
jmp
add
in
or
inc
outsb
mov
loopne
scas
mov
and
add
or
push
xchg
aam
and
ret
add
add
add
add
fcomps
xchg
dec
daa
add
dec
daa
add
xchg
add
xchg
add
cwtl
add
mov
add
push
daa
add
inc
daa
add
push
daa
add
inc
daa
add
mov
scas
inc
xchg
lahf
pop
add
add
add
add
jle
add
jge
add
pop
jns
xchg
pop
mov
add
pop
mov
add
pop
call
add
pop
nop
test
test
pop
inc
xchg
mov
xchg
pop
push
xchg
cmpsl
add
pop
mov
add
pop
mov
xchg
pop
inc
xchg
jo
xchg
pop
add
add
roll
pop
add
pop
mov
add
pop
imul
fs
mov
sbb
push
push
mov
dec
jmp
mov
and
jb
and
xchg
pop
and
enter
xchg
inc
and
mov
dec
and
test
and
nop
inc
and
cwtl
dec
and
mov
pop
xchg
outsl
add
add
add
jp
and
js
and
push
dec
and
dec
dec
and
inc
dec
and
faddl
sbb
inc
and
iret
inc
and
movl
lcall
and
lea
dec
xchg
push
and
mov
pop
add
add
sbb
cmp
dec
add
add
lea
jae
mov
add
add
add
addr16
add
add
add
add
add
add
add
add
add
add
add
bound
cli
add
add
add
add
add
add
dec
add
add
add
add
xchg
inc
and
push
and
push
and
xor
xor
add
add
add
and
int3
sub
add
cmp
es
xchg
xor
cmp
sbb
dec
xchg
adc
dec
xchg
cmp
mov
and
xchg
sahf
jo
xchg
or
fildl
or
jo
xchg
rolb
mov
inc
inc
xchg
out
inc
xchg
insl
inc
inc
xchg
xlat
inc
inc
add
add
add
xchg
faddl
pop
pop
inc
shll
cmp
xor
add
add
daa
int
xchg
pop
out
popw
jne
aad
movsl
adc
pop
data16
pop
lcall
pop
push
fdivl
pop
hlt
stos
push
pop
js
push
pop
out
xchg
pop
std
fisttpl
pop
ds
push
pop
mov
add
addl
add
add
add
push
pop
aad
xchg
pop
xlat
add
pop
clc
add
pop
pusha
and
dec
inc
and
inc
ss
aas
ss
xchg
jns
inc
lea
inc
xchg
imul
xchg
pop
and
lea
and
xchg
push
and
xchg
pop
and
xchg
pusha
and
lea
std
xchg
push
and
xchg
fs
lea
and
xchg
fsubs
cmp
add
add
add
jge
jmp
mov
and
scas
inc
and
mov
and
lret
or
inc
and
movsb
inc
and
jp
and
push
and
push
and
outsl
in
add
insl
dec
jo
jo
cs
dec
add
jl
push
in
push
je
jnp
add
dec
jo
jl
push
sarb
pop
jp
add
dec
jo
add
add
add
insb
imul
mov
dec
je
mov
dec
jo
bound
fbstp
dec
int
inc
gs
and
out
dec
jo
insl
push
dec
int
inc
gs
bound
add
push
jae
popa
pop
gs
fisubs
add
cmpsb
inc
je
addl
mov
inc
jb
fisubs
add
add
add
add
xor
mov
dec
popa
scas
inc
jl
ret
gs
and
xchg
jnp
pop
je
fisubrs
jb
pop
inc
das
and
ljmp
aas
xchg
dec
xlat
inc
xchg
lret
add
repz
or
inc
xchg
push
aam
xchg
jb
inc
xchg
xor
aas
xchg
cmc
and
pop
lock
xchg
je
inc
xchg
pop
jmp
aam
pop
dec
sldt
add
add
roll
lds
xchg
pop
aam
xchg
pop
xlat
add
pop
stc
add
pop
into
add
pop
rolb
pop
lret
add
pop
xchg
roll
jecxz
push
pop
data16
pop
push
adc
inc
adc
push
fsubrl
pop
dec
adc
push
adc
mov
dec
xchg
inc
xchg
pop
mov
pop
test
add
add
add
int
xchg
pop
mov
jmp
inc
pop
and
fildl
movsb
iret
pop
and
loop
insl
sahf
enter
les
movsb
xchg
pop
and
lret
push
jge
xchg
pop
and
fiaddl
jmp
into
inc
imul
pop
popa
jmp
movl
jmp
pop
inc
je
push
pop
and
sbb
add
add
add
jbe
push
pop
and
dec
inc
imul
pop
and
push
push
imul
dec
addr16
pop
insl
add
and
sti
cmp
jno
test
and
inc
dec
jbe
sub
and
sub
dec
js
and
ss
cs
and
sti
push
push
jnp
insl
inc
insl
or
jge
ja
push
addr16
popa
dec
popa
add
add
add
add
or
js
jbe
mov
pop
dec
outsb
lea
imul
jp
js
sub
xchg
pop
inc
arpl
pop
dec
outsb
mov
pop
dec
je
ret
dec
je
mov
outsb
ss
add
lods
inc
gs
jns
repnz
jp
testl
jp
xchg
jge
jne
xchg
jns
add
add
add
xchg
test
loope
inc
insb
mov
cmp
and
xchg
pop
hlt
aas
xchg
enter
or
aas
xchg
jbe
aas
xchg
stos
repz
xchg
pop
std
aas
xchg
lock
xchg
jae
inc
xchg
pop
les
xchg
xor
xchg
and
xchg
or
and
pop
int
xchg
pop
sub
pop
int
xchg
pop
in
pop
cmp
jp
pop
out
add
add
add
sub
bound
jne
je
jo
jno
add
pop
lods
add
pop
addl
pop
mov
add
pop
sbb
pop
sbb
pop
jno
mov
adc
pop
bound
pop
int
xchg
pop
popa
add
pop
xor
pop
and
addr16
and
pop
xor
jne
and
pop
and
lea
incb
add
add
add
aaa
and
xchg
outsl
and
lea
and
xchg
outsl
and
xchg
and
mov
inc
dec
and
xchg
pop
and
cmpsb
and
pushf
add
pushf
in
pop
nop
call
and
lds
sbb
roll
xor
inc
outsl
sub
fcompl
xor
jno
add
mov
addr16
or
add
add
add
inc
pop
pop
pop
dec
add
dec
pushl
push
add
or
call
dec
addr16
jne
arpl
inc
outsl
dec
in
inc
imul
ja
in
jae
icebp
dec
inc
lret
dec
inc
data16
popa
dec
push
gs
outsb
pop
jns
jb
pop
push
jbe
jno
jp
xor
xor
adc
push
sub
das
push
or
test
inc
add
add
add
add
add
add
movb
add
inc
add
or
push
or
mov
inc
add
or
xchg
sbb
dec
xchg
xor
push
xchg
xor
inc
xchg
daa
and
xchg
das
push
inc
xchg
pop
inc
xchg
adc
jmp
aas
xchg
add
aas
xchg
adc
xchg
cmp
inc
xchg
push
pop
inc
xchg
fbld
add
popf
sbb
add
add
add
add
mov
push
add
push
add
cmp
xchg
push
pop
add
inc
adc
add
inc
or
xchg
sub
xchg
pop
ds
sbbl
xchg
pop
and
ja
add
daa
xlat
or
add
add
or
add
add
add
add
iret
add
pop
int3
add
push
fnstenv
mov
int
xchg
pop
outsl
jle
adcb
add
pop
mov
jl
sub
xor
inc
loope
in
cmp
out
ss
in
sub
repnz
icebp
int3
add
and
add
and
pop
jmp
add
add
add
jbe
pop
adc
xor
push
cmc
cmp
and
into
aad
cs
loopne
rcl
cmp
shl
lea
and
ror
les
and
pop
dec
jmp
inc
hlt
mov
cmp
mov
outsl
and
and
lahf
push
adc
and
pop
and
popf
push
inc
inc
lea
and
add
add
add
mov
xchg
scas
subl
lods
mov
mov
nop
pusha
jge
xchg
mov
add
adc
sbb
push
daa
add
fdivp
push
lret
fldl
movsl
add
add
das
pop
arpl
fs
add
sar
push
jmp
add
cmp
ljmp
add
add
add
add
and
imul
cmp
add
shll
jp
dec
push
cmp
cmp
cltd
sub
push
cwtl
sub
jne
dec
add
sbb
xchg
dec
lahf
sub
push
xchg
ficoms
and
xchg
in
inc
dec
adc
xchg
mov
mov
nop
pop
add
mov
sbb
add
add
add
mov
jg
fisubs
add
rcrb
scas
fisubs
add
int3
adc
sbb
ret
xchg
xchg
jnp
loope
jg
mov
pop
lods
movsl
cli
mov
sbb
js
aad
dec
mov
mov
sbb
sbb
push
and
je
fs
pop
loopne
out
jg
xlat
mov
loopne
add
add
add
jno
jmp
adc
or
add
shll
je
xchg
pop
xor
mov
dec
or
and
loopne
scas
pop
pop
push
leave
aas
xchg
push
in
push
and
aad
bound
rclb
push
insb
push
imul
jnp
lds
sbb
dec
push
jmp
mov
sbb
add
add
sbb
lret
ss
push
push
outsb
pop
inc
cmp
push
dec
push
sbb
dec
loope
std
pop
in
in
pop
fdivrs
sub
adc
loop
add
es
mov
pop
and
and
jecxz
push
lret
lock
out
cmp
and
mov
add
add
add
aam
jecxz
fdivr
jecxz
aad
hlt
icebp
in
sarl
pusha
push
mov
jne
push
push
jge
sarb
add
mov
arpl
aaa
andl
xchg
xchg
imul
clc
outsb
icebp
ret
mov
dec
enter
int
ret
cmc
fisubl
into
cld
add
add
add
pushf
fcmovnu
jmp
jb
in
jecxz
adc
in
out
add
push
cmc
loop
push
mov
push
scas
loopne
sbb
add
pop
mov
mov
xor
out
lret
out
mov
in
jl
lret
in
fs
mov
push
fidivrl
add
add
add
es
mov
stos
aas
jne
mov
inc
insb
les
lods
imul
lea
xchg
pop
outsl
div
fistl
xor
ss
lcall
jmp
es
fdivrs
lods
mov
sub
sbb
lret
mov
fidivrl
or
int3
add
push
iret
std
fs
icebp
inc
add
add
add
cmp
push
dec
inc
cltd
add
mov
ds
dec
fnsave
xchg
inc
stos
hlt
mov
mov
test
mov
lods
test
xor
jae
ds
jle
lods
mov
pop
mov
jo
mov
inc
mov
xchg
or
loop
pop
and
int3
inc
jl
fildl
sub
xchg
pop
and
add
add
add
ja
sbb
mov
outsl
adc
sti
sub
inc
inc
or
xchg
pop
and
inc
xor
aam
psrld
inc
sbb
addl
and
dec
inc
js
xchg
pop
and
sub
jmp
and
mov
or
pushf
mov
fidivl
aad
les
or
add
add
add
add
and
and
repz
iret
addb
cwtl
clc
or
popa
adc
xor
push
ret
arpl
cmp
jg
add
out
cmp
sar
int3
xor
hlt
leave
sbb
in
sub
lods
sub
mov
shl
aaa
out
fdivrl
xchg
inc
shl
cltd
xor
stc
in
add
add
add
loope
inc
xchg
add
add
mov
jl
jo
sub
insb
lds
lods
mov
je
inc
imul
push
pop
out
add
xor
xchg
sbb
dec
addr16
pop
add
data16
xchg
loopne
add
sub
sbb
sbb
pop
pushf
out
inc
aad
adc
add
add
add
pop
mov
pop
mov
jecxz
loopne
lret
add
pop
and
mov
jae
pop
fidivs
shlb
into
and
sub
sub
pop
pop
scas
or
dec
xlat
ss
scas
pop
pop
imul
push
dec
rorl
pop
lret
dec
iret
cmp
dec
sbb
push
bound
stos
sbb
add
add
add
sbb
adc
add
std
pop
jbe
fcomps
xchg
pop
dec
adc
and
cmc
dec
push
es
jmp
xchg
clc
and
bound
xchg
pop
and
xor
iret
test
jmp
cld
mov
mov
push
lock
and
mov
mov
add
add
add
sbb
popa
ja
sbb
xchg
pop
and
pop
dec
outsb
sub
dec
sub
xchg
pop
and
cli
xor
fistl
and
mov
pop
and
xchg
pop
and
loope
push
sub
cli
outsl
push
cmp
daa
add
std
inc
sub
std
add
mov
sub
or
push
outsb
cli
xor
push
dec
jb
add
pop
jns
add
add
add
or
push
pusha
pop
dec
loop
add
ds
les
imul
addr16
jl
push
insb
xlat
cmp
add
cwtl
ds
outsl
mov
sbb
cltd
push
dec
inc
mov
inc
outsl
dec
popf
push
addr16
xchg
adc
push
push
and
jge
sbb
test
adc
fdivl
mov
add
jmp
aad
sarb
mov
das
imul
mov
xor
mov
mov
add
scas
xchg
pop
cmpsl
addl
movsb
lret
and
shr
push
enter
mov
pop
mov
out
sbb
mov
lret
xchg
ret
repz
enter
rolb
sarb
add
add
mov
leave
dec
ja
ret
fbstp
insb
and
popa
pop
ss
sbb
jno
aaa
pop
sub
push
and
into
outsb
xor
sub
testb
lock
mov
mov
lret
push
cld
xchg
or
imul
or
ret
push
mov
std
mov
mov
add
add
add
sbb
test
adc
cmpb
aad
insb
and
xorb
int3
mov
lea
fcmovb
jg
jmp
mov
andb
enter
inc
mov
and
lahf
sub
add
pop
hlt
mov
pmulhuw
or
jge
push
sti
add
add
add
pushf
and
in
mov
ds
xchg
pop
and
pop
inc
outsl
xor
pop
and
into
cmp
mov
xor
pop
ret
push
insb
push
mov
pop
bound
dec
jg
test
jg
mov
inc
pop
jnp
aas
push
jo
dec
push
jbe
arpl
xor
fwait
cld
add
cmc
loopne
add
add
add
add
xor
dec
js
imul
sub
outsl
xor
std
push
pop
push
xor
imul
sbb
cmp
inc
or
pop
cmp
and
xor
mov
xor
insb
lock
push
cmp
xor
leave
xor
jl
or
js
cmp
cwtl
mov
and
add
sahf
loope
push
mov
xlat
or
in
rolb
lock
adc
icebp
and
mov
push
out
out
add
out
add
out
add
repz
mov
push
add
pop
cmp
push
adc
sbb
daa
adc
pop
and
add
add
add
and
or
addr16
xchg
pop
mov
rol
addb
dec
fcomps
pop
sbb
ja
loope
insl
sub
sub
sub
rcrb
and
add
int
fwait
xor
add
mov
lahf
sub
add
lods
pop
mov
push
nop
popa
xchg
jecxz
and
add
add
add
xchg
xchg
jmp
and
rcr
not
fsubr
aad
in
into
call
aad
mov
fcomp
push
test
and
jp
and
push
cmp
xor
and
outsb
jmp
pop
cmp
gs
and
jecxz
and
mov
pop
and
or
pop
and
rolb
add
add
add
adc
push
clc
xor
dec
ljmp
into
mov
lock
add
or
inc
negl
add
in
mov
ret
nop
cli
out
loope
std
fabs
enter
or
and
fldt
add
and
or
add
mov
cmp
lods
rolb
sahf
cs
mov
fldl
add
add
add
in
or
scas
aad
enter
nop
out
push
fdivrl
sbb
imul
adc
xchg
loop
or
push
cmpsb
jne
mov
cmpsl
pop
jle
inc
jnp
mov
js
push
xor
dec
cmp
mov
gs
inc
loopne
add
xor
test
add
add
add
cmp
mov
xchg
jp
and
add
inc
mov
xchg
and
add
cmp
out
cmc
hlt
in
insl
push
xchg
cld
pop
dec
daa
add
pop
mov
pop
ret
outsb
xchg
pop
ret
sub
fwait
das
fs
lret
jno,pn
int
xchg
pop
out
and
aaa
adc
add
add
add
lock
not
aas
lret
mov
jae
mov
dec
mov
xlat
int
jns
mov
mov
cmc
nop
sbb
in
scas
out
rolb
mov
mov
xchg
push
jmp
mov
jno
pop
or
lret
mov
xchg
pop
and
enter
add
add
add
mov
pop
and
xchg
pop
pop
jmp
pop
or
xchg
pop
and
jo
push
insb
imul
push
or
xchg
pop
and
int3
mov
leave
shll
push
leave
out
xchg
adc
jecxz
ret
lock
fucomip
xchg
pop
and
or
and
pop
inc
pop
jmp
xor
and
jnp
inc
roll
add
add
add
fiaddl
mov
in
fnstsw
xabort
push
xor
outsl
cmp
and
outsb
jp
mov
icebp
mov
mov
test
addb
fucomip
aad
fidivrs
jl
mov
jge
mov
je
jp
jne
sub
imul
add
add
add
add
inc
cmp
add
xor
pop
push
and
dec
xor
xchg
xchg
inc
arpl
mov
js
loopne
add
icebp
sti
imull
add
mov
inc
loopne
add
adc
mov
popf
sbb
insb
sbb
dec
adc
add
addr16
xchg
add
xchg
add
add
add
push
push
fs
pop
hlt
imul
add
jae
std
inc
pop
inc
or
sub
pop
add
movsb
xchg
aam
test
adc
shlb
mov
shrl
xchg
and
popf
add
jle
xchg
pop
roll
outsb
clc
sar
xchg
clc
std
std
hlt
add
add
add
xchg
cmc
int3
add
mov
xchg
ret
fildll
pop
xorl
mov
int3
add
lcall
lock
mov
fcomps
pop
and
ss
inc
sbb
cmc
pop
pop
jmp
or
insl
mov
mov
outsl
lods
jmp
add
xchg
pop
and
mov
cltd
iret
inc
addr16
dec
ja
inc
insl
mov
xor
leave
cmp
popa
test
cltd
in
daa
pop
cld
icebp
sub
xchg
pop
and
out
pop
icebp
xchg
pop
and
mov
adc
adcb
shlb
and
dec
xor
inc
inc
ja
outsb
xor
jo
jno
test
and
jb
jl
add
add
add
xchg
adc
jo
inc
data16
inc
or
xor
dec
push
push
jb
cld
adc
add
jns
push
xor
dec
dec
or
pop
clc
add
and
sbb
inc
cli
or
and
adc
add
add
mov
or
pushf
in
sbb
xchg
cli
pop
cmp
out
adc
mov
adc
mov
icebp
sbb
mov
add
add
add
gs
xchg
and
dec
cmp
or
daa
aam
xor
int3
dec
insl
or
inc
outsb
lods
loopne
add
test
inc
xchg
movsb
bound
arpl
shll
inc
rcrl
add
int
push
test
or
mov
leave
dec
test
and
mov
and
mov
out
xor
add
add
add
fcmovu
pop
cltd
fcoml
cltd
mov
insb
or
in
add
add
pop
xor
pop
adc
int3
movsb
in
xchg
movsb
shlb
mov
jmp
movsb
stos
das
or
and
pop
testl
pop
xor
push
or
push
ret
pop
scas
add
add
add
arpl
dec
scas
mov
out
inc
xchg
ret
js
mov
add
pop
jne
push
loopne
out
fistps
out
lods
aad
jns
fstps
lcall
push
cwtl
rcll
ficoms
stc
mov
inc
repz
add
out
test
jl
pop
push
jb
xor
mov
outsl
dec
cmpsl
andb
add
add
add
dec
loopne
dec
mov
inc
cmp
lea
sub
nop
jmp
and
mov
sub
andb
lds
pop
mov
nop
push
pop
and
popf
daa
adc
andl
or
xchg
and
das
fcompl
or
aam
and
out
and
lret
add
in
adc
add
add
add
rcrl
and
mov
push
gs
and
test
cmp
pcmpgtb
insb
inc
das
sbb
add
xchg
mov
pop
test
jecxz
lahf
pop
push
test
add
dec
lret
dec
mov
mov
jne
mov
popf
mov
push
movsb
xchg
mov
testb
add
pop
shl
mov
mov
in
sahf
out
xchg
rcr
pop
add
fwait
lcall
movsl
mov
fimull
cmp
out
loopne
add
xchg
sbb
leave
das
push
xchg
dec
je
jns
inc
aad
sub
js
and
jo
cmp
inc
arpl
add
add
pop
xchg
jne
outsb
push
inc
movsb
dec
orps
adc
cmp
es
add
inc
add
dec
fsubs
dec
sub
ljmpw
aam
cmp
repnz
addr16
push
cmp
sti
inc
pop
out
add
push
rclb
or
add
push
ss
pop
icebp
popa
xchg
pop
add
adc
mov
add
add
adc
dec
test
js
insb
sub
or
xchg
dec
ficompl
xchg
inc
mov
es
in
das
and
xchg
ret
and
pop
cltd
xchg
pop
xchg
xchg
xchg
sub
mov
lock
cmpsl
pop
sbb
mov
dec
mov
pop
outsb
mov
repnz
lods
push
xchg
pop
and
add
add
add
shlb
xor
leave
sub
mov
and
insb
mov
add
syscall
adc
inc
or
notb
fldenv
and
sub
sub
sbb
and
cmp
and
out
xor
lock
sub
fwait
add
lea
and
pushl
call
test
cmc
or
shl
push
fsubp
lret
add
add
or
stc
ret
into
out
pushf
ljmp
jecxz
enter
out
or
testl
or
push
push
inc
gs
push
pop
push
inc
sub
fistl
xchg
sbbb
stos
mov
test
loop
sbb
xchg
xchg
push
xorl
pop
cmpl
add
add
add
xchg
jae
icebp
lock
cmc
loope
jb
hlt
sti
ljmp
and
sbb
rcrl
pop
xchg
pop
jae
rcrl
mov
add
sbb
int
add
mov
inc
sarl
adc
enter
mov
adc
rclb
inc
shrb
inc
pop
addl
add
xchg
pop
loop
jo
lret
add
idivl
enter
add
aam
enter
cs
in
xchg
pop
lret
add
or
jmp
popa
ret
pop
jne
push
fs
xor
or
pop
sbb
dec
inc
push
pop
cmp
or
testl
fistps
cmc
jmp
xchg
pop
ret
dec
loopne
pushf
aaa
add
add
add
rcrl
cmp
arpl
cmc
insl
sbb
xchg
sbb
cs
pop
and
es
or
sub
sbb
xor
test
sbbb
outsb
insb
hlt
or
xchg
pop
and
mov
jmp
test
inc
pop
cmp
lea
and
mov
idivb
les
add
add
add
adc
inc
and
inc
fdiv
cmpl
stc
test
and
add
lea
and
mov
and
xchg
pop
and
cmp
and
cmp
and
sub
and
add
fs
mov
mov
jo
add
jae
add
data16
sbb
mov
add
add
add
add
jo
add
sub
push
jp
inc
inc
dec
das
push
mov
add
fs
inc
jb
pop
pop
inc
js
and
push
pop
inc
add
pop
and
sub
imul
pop
jo
xchg
andl
inc
xchg
insb
es
xchg
xlat
arpl
jge
outsl
xchg
xchg
es
test
push
xchg
xchg
outsb
xchg
mov
outsl
add
add
add
xchg
inc
daa
jae
shlb
dec
xchg
movsb
es
xchg
insl
es
pop
and
dec
and
and
dec
and
std
pop
imul
pop
outsl
xchg
adc
imul
sbb
pop
and
xchg
and
jb
shll
xchg
pop
hlt
add
pop
loopne
enter
lock
loop
mov
mov
add
add
pop
int
xchg
pop
int
addr16
dec
pop
and
lds
fld
inc
aas
fbld
lret
gs
add
add
pop
loopne
popa
pop
int
xchg
pop
sbb
leave
push
pop
cs
push
pop
cs
push
pop
cmp
leave
push
pop
cmp
push
pop
add
dec
and
sub
xor
sub
add
add
add
ds
in
xor
icebp
dec
pop
jmp
icebp
cmp
mov
xor
lods
cmp
fadds
mov
mov
and
lea
xchg
inc
and
sbb
and
add
and
pop
pop
dec
jbe
sti
jae
pop
and
jp
pop
and
ljmp
xchg
pop
and
xchg
ljmp
xchg
ljmp
add
lea
and
inc
sub
dec
cmp
add
aas
sub
out
dec
dec
add
pop
inc
outsb
je
dec
outsl
fwait
bound
xor
push
je
pop
pop
inc
dec
push
dec
jb
pop
dec
gs
push
data16
dec
sub
inc
pusha
sub
push
popa
dec
and
push
and
popa
pop
imul
pop
push
and
pop
push
outsl
enter
add
add
add
sbb
add
jmp
push
mov
sub
push
pop
add
data16
and
mov
add
xchg
into
and
shlb
add
add
push
xchg
shlb
xchg
shll
add
mov
add
sarl
xchg
outsl
imul
add
add
stos
mov
add
xchg
push
add
dec
roll
int3
mov
xchg
cmp
inc
xchg
xor
inc
xchg
dec
mov
xchg
pusha
mov
xchg
cmp
je
inc
or
das
ds
push
ss
jb
xor
sub
xchg
pop
and
push
mov
fimull
sub
out
in
sub
add
add
add
add
pop
pop
inc
rolb
cs
rolb
cs
rolb
cs
rolb
ss
rolb
sbb
pop
fiadds
pop
inc
cmp
pop
popf
xor
out
enter
enter
enter
xor
out
enter
es
pop
add
push
pop
sbb
push
pop
cmp
push
pop
xlat
add
test
addr16
xlat
xor
pusha
pop
in
add
add
add
in
nop
inc
add
ret
mov
xor
add
xlat
pushf
xchg
sbb
iret
xlat
xor
mov
pop
nop
push
in
cld
and
push
std
and
inc
fldenv
int
push
or
sub
fadds
int
push
sub
inc
pusha
adc
in
test
xor
outsb
mov
xlat
cmp
add
add
add
push
loope
dec
xlat
xor
sub
and
imul
adc
add
outsl
push
sbb
xor
es
gs
or
inc
jne
pop
inc
cmp
and
mov
daa
push
imul
dec
jae
mov
add
push
dec
insl
inc
push
or
and
pop
es
popa
add
jae
push
gs
add
add
add
dec
outsb
invd
and
sbb
inc
add
or
or
dec
add
aas
add
xchg
pop
jb
inc
and
push
and
and
dec
and
xchg
in
insb
xchg
adc
and
pop
add
or
and
add
js
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
fs
inc
xchg
pop
int
xchg
pop
int
xchg
pop
sbb
pop
push
adc
fistl
test
push
addr16
xchg
pop
or
sbb
adc
dec
ret
cwtl
mov
add
add
add
stc
cld
lret
aaa
jg
js
mov
popf
ret
sub
out
xlat
sti
mov
xor
jbe
push
sbb
mov
lea
adc
adc
pop
nop
rcrl
lds
test
adc
and
rcll
adcl
and
adc
fcmovnbe
adc
push
pop
lods
das
test
add
add
data16
test
scas
jns
sub
pop
xchg
leave
push
scas
and
nop
popa
in
or
in
sti
into
mov
bound
xor
cwtl
and
inc
push
test
mov
push
fstpt
test
insb
push
xor
push
cmpsl
mov
and
lods
cmp
and
add
add
add
fists
adc
sub
das
pusha
lret
xor
es
ljmp
ds
test
call
out
adc
adc
add
or
std
sub
push
in
inc
js
out
repz
in
cmp
and
fldl
jo
or
roll
sub
cli
iret
adc
add
add
add
add
add
out
push
not
imul
add
inc
jbe
xchg
xchg
push
scas
test
jns
and
add
aad
mov
mov
test
sub
out
and
add
adc
sti
mov
es
or
push
sbb
add
cmp
pop
addl
add
add
pop
adc
xlat
pop
in
xchg
mov
loopne
xlat
mul
add
shlb
loope
xchg
mov
movsb
faddl
xchg
pop
inc
xchg
mov
rcrb
out
int
sbb
lea
dec
hlt
testl
mov
int
sub
inc
xchg
pop
xchg
dec
push
pop
inc
mov
or
add
add
add
add
pop
int
push
sbb
ja
notb
addr16
inc
cltd
outsb
mov
mov
sbb
int
push
cmp
sub
sbb
bswap
mov
aaa
imul
jp
shlb
adc
jecxz
int3
cmp
in
notb
xchg
jle
jmp
mov
jne
sub
inc
and
add
add
add
ljmp
jno
inc
sbb
mov
sbb
cmpsb
mov
out
decl
cmpsl
xchg
fidivrs
cs
out
in
mov
jecxz
jnp
lret
mov
mov
push
mov
in
pop
fcomi
inc
pop
add
sbbb
aaa
jmp
in
faddl
inc
mov
mov
add
add
add
add
jns
stos
push
out
arpl
nop
mov
pop
in
or
jae
jno
rolb
add
cmpsl
dec
mov
int3
jle
or
sub
sub
test
je
insb
lahf
cs
aaa
sbb
adc
jb
je
test
add
movsb
fcos
out
lcall
frstor
inc
xchg
sub
add
add
add
add
sbb
daa
and
setae
ret
lods
mov
push
dec
push
xchg
sahf
test
add
xchg
xor
xchg
and
je
popf
xchg
adc
mov
add
push
daa
add
mov
add
xor
ficomps
test
sbb
xchg
roll
lods
in
pop
jae
cwtl
jae
mov
stc
or
add
add
loope
data16
imul
add
or
add
or
add
addr16
xor
jle
mov
rcr
pop
inc
ret
xor
aaa
lods
orps
mov
out
test
cmp
and
aad
lea
adc
push
movb
addl
jle
add
das
inc
ret
mov
add
add
add
aas
pop
mov
mov
push
mov
roll
inc
mov
leave
int3
add
data16
add
cmc
and
scas
sahf
std
imul
xchg
mov
aad
mov
or
test
jmp
in
fcmovbe
pop
mov
lahf
dec
in
in
fidivrl
xchg
jmp
add
push
out
xchg
push
jb
add
add
add
sbb
adc
add
jecxz
xchg
xchg
divb
jb
xor
loopne
inc
loop
xlat
xor
lock
inc
ljmp
inc
and
test
test
jb
test
mov
adc
orl
cmpsl
rcrb
es
outsl
aaa
in
rorw
cmp
and
jns
lods
inc
sub
mov
add
add
add
shlb
push
daa
adc
mov
sar
and
hlt
xor
push
push
push
int3
out
or
mov
lods
or
dec
jp
mov
jb
flds
pop
xor
dec
out
shrb
pop
xchg
jo
inc
and
in
scas
fimull
pop
pop
rclb
add
adc
sbb
xor
add
add
add
push
fidivs
popf
je
or
sahf
pushf
mov
incl
nop
mov
pop
enter
adc
sahf
es
xchg
cs
inc
outsb
mov
sahf
es
aas
fnsave
aas
xchg
cmpsl
clc
sbb
cmp
mov
data16
rcrb
or
ss
xchg
cmpsl
out
int
mov
add
add
add
pop
int
inc
mov
inc
ret
loop
push
add
xchg
push
ret
sub
lahf
ljmp
or
xlat
dec
nop
pop
push
add
push
rclb
les
int
fiadds
add
out
hlt
out
and
mov
dec
or
mov
enter
or
jne
lret
pop
dec
rolb
add
add
add
leave
outsb
xchg
cmp
ficomps
xor
add
xchg
pop
add
aam
in
sbb
cltd
sub
fiaddl
jne
xchg
in
and
inc
mov
cmp
iret
cmp
stc
fs
inc
adc
jecxz
aam
inc
imul
dec
jns
sbb
loop
or
mov
add
add
add
aad
and
shlb
lods
in
dec
jge
rcll
clc
inc
scas
xor
fldl
jae
clc
in
xchg
out
fucompp
adc
pop
add
push
je
add
xchg
fwait
cmp
clc
and
mov
jl
mov
insb
in
mov
sbb
cmp
cmc
pop
cmp
repz
add
add
add
push
leave
sbb
dec
push
mov
rolb
jbe
push
popa
jmp
mov
pop
es
pop
fbld
mov
mov
pop
out
sub
rolb
add
mov
arpl
push
cmpsb
movsl
ror
pop
add
cmp
mov
pop
add
test
xor
add
add
add
fdivrs
and
pop
gs
or
adc
lahf
mov
arpl
jo
lret
push
les
or
adcl
je
sbb
ret
fcomps
sub
cmp
das
mov
push
ret
movsl
pop
mov
mov
jns
add
add
add
add
xorb
cmpsb
test
loopne
lahf
cmpsb
mov
stos
push
inc
xchg
or
or
inc
int
mov
lret
movsl
outsb
inc
stos
dec
cmp
or
cltd
push
int3
dec
xchg
rcrl
je
aas
or
adc
gs
addr16
mov
and
sbb
fwait
lock
repz
jecxz
dec
pop
add
add
add
stos
int3
sub
cs
jns
das
jb
in
pop
mov
xchg
stc
push
xor
inc
jle
dec
out
punpckhdq
jb
mov
cltd
jle
orb
push
fsubrs
push
loopne
std
jns
and
jnp
jmp
push
cltd
in
pop
and
shll
add
add
add
push
push
movsl
sbb
add
ja
lret
andl
fisubl
jecxz
bound
lods
add
sbb
dec
aam
scas
add
mov
add
or
lea
mov
pop
arpl
push
pop
repz
inc
aas
jbe
push
jns
sarl
out
js
dec
and
sub
mov
mov
xlat
imul
add
add
mov
add
fwait
dec
jb
ret
pop
adc
sub
sub
and
lcall
clc
sub
cmp
out
xor
cmp
imulb
call
mov
cmpb
cltd
mov
mov
cmpsb
int3
jae
push
mov
sbb
push
std
stos
adc
push
sbb
int
or
add
add
add
sahf
es
insb
cmp
ljmp
lock
sub
aaa
fnsave
adc
sub
mov
add
add
and
lods
aam
pop
int
cs
xchg
xor
hlt
rolb
inc
int
xchg
jl
jge
sahf
push
lods
mov
add
add
add
push
rcrl
inc
and
pop
inc
pop
or
push
xor
cmpsl
inc
aas
mov
inc
inc
lods
call
sbb
mov
aas
or
test
movsl
add
in
inc
add
mov
dec
lahf
cmpsb
cmp
pop
fidivs
sub
out
inc
inc
ffreep
xor
hlt
inc
jmp
and
sbb
or
cltd
adc
jmp
add
xchg
into
pop
lds
nop
outsl
lds
add
out
push
sub
inc
and
das
pop
xchg
sub
push
out
adc
and
repnz
adc
and
out
test
into
cmpsb
adc
pop
xchg
pop
and
notl
pushl
fiadds
and
add
add
add
movsl
push
and
sbb
dec
stc
dec
pop
and
in
sbb
cmp
lods
insb
fsubrl
jecxz
cld
or
ljmp
and
and
fsubs
outsl
and
mov
jne
mov
add
aam
fbstp
or
push
xorl
call
adc
dec
mov
add
add
add
and
lret
sahf
mov
and
xlat
and
dec
add
lret
inc
cmp
lods
xor
loopne
xchg
stc
pushf
jno
dec
push
mov
sbb
decb
pop
ret
jnp
nop
pop
push
sbb
sub
imul
and
std
mov
pop
push
jne
pop
jnp
adc
test
add
add
add
mov
shl
imul
daa
ret
mov
push
sbb
xor
divl
pop
shr
aad
sub
mov
lds
add
orl
cwtl
lods
sub
loop
push
push
lahf
add
fs
inc
lods
out
int3
and
adc
into
cld
add
add
add
pop
push
stos
xchg
sbb
cltd
xchg
int
out
push
lret
movsb
xlat
xor
xchg
add
adcb
cld
xchg
lret
add
and
pop
or
xor
call
or
inc
adc
adc
aas
and
mov
add
mov
push
push
inc
sbb
mov
add
add
cmc
and
lods
nop
pop
mov
jecxz
imul
jb
jmp
stos
js
js
pop
jmp
notb
push
ljmp
push
adc
jb
jmp
rorl
mov
jmp
loopne
int3
push
push
mov
mov
mov
xchg
pop
pop
test
xchg
mov
adc
aad
add
test
add
add
add
sub
ja
pushf
cmpsl
ss
mov
call
mov
fcoms
cmp
push
mov
popf
cwtl
jne
pushf
cwtl
ret
dec
pop
xchg
jle
shlb
arpl
iret
pushf
cwtl
ret
push
out
xchg
inc
jno
in
xor
xorl
fldenv
stc
xor
xor
sbb
test
mov
rolb
add
add
add
rcrl
dec
das
push
add
and
clc
xlat
cs
xchg
icebp
popa
cmp
mov
xor
movsb
cmc
xchg
xchg
testb
and
push
in
mov
scas
jae
clc
pop
pop
stc
or
adc
adc
or
adc
call
mov
scas
es
sbb
shrl
nop
xchg
scas
es
or
or
add
add
add
mov
or
xchg
and
and
sub
pop
sar
mulb
push
xchg
pop
jp
scas
in
mov
dec
dec
cli
cmp
roll
push
mov
into
pop
in
pop
sbb
push
cs
fcoml
adc
jns
and
sub
sbb
jg
sbb
hlt
loopne
add
das
xchg
adc
add
add
add
mov
lret
iret
add
in
jecxz
daa
popf
nop
in
incb
mov
push
add
in
mov
mov
push
jge
jecxz
dec
sbb
adc
sbb
adc
and
in
add
out
ds
ja
jae
lahf
daa
xor
lea
add
loop
ja
clc
repz
rolb
pop
xor
add
add
add
addr16
jmp
fistl
adc
xchg
pop
ss
cmp
jp
push
lret
push
jecxz
mov
and
stc
dec
popf
pop
in
ficoml
stos
xor
jne
push
jae
xchg
xor
arpl
adc
daa
insb
push
jecxz
cmp
ss
mov
add
inc
jbe
fiaddl
jle
das
insb
pop
dec
and
add
add
add
insb
pop
xor
inc
jnp
sti
aaa
scas
in
cltd
mov
cld
sub
dec
cmp
jne
cltd
hlt
in
ret
data16
repnz
pusha
aad
add
andb
xor
sbb
mov
aaa
jb
sub
sub
out
call
inc
mov
inc
int3
test
cmp
xchg
pop
fcos
and
movsl
sti
add
add
add
xchg
mov
pop
or
adc
or
and
scas
add
insl
mov
pop
out
pop
ret
jae
and
scas
push
jmp
jo
push
ss
out
or
or
or
add
cmpsb
pop
dec
cltd
sub
mov
lds
xlat
in
sbb
pop
or
add
mov
js
imul
jecxz
pop
rolb
sbb
xor
stos
adc
ljmp
xchg
aas
scas
in
icebp
data16
nop
mov
imul
xor
lcall
push
or
movsb
test
incl
mov
cld
out
add
cltd
inc
roll
int
cli
ljmp
add
addr16
sbb
inc
stc
adc
out
cmp
sbb
aaa
xor
xorb
clc
xchg
sbbl
insb
nop
xor
enter
jecxz
popa
pop
testl
add
inc
add
and
xchg
cmp
inc
pop
pop
test
lods
das
aad
nop
cmp
and
leave
inc
add
xchg
lods
das
mov
add
add
add
pop
int
xchg
pop
and
in
aad
sub
loopne
icebp
add
pop
scas
inc
jns
lods
mov
imulb
ljmp
xor
imul
cmpsl
xchg
or
add
in
je
insb
pusha
sbb
pop
popa
or
or
mov
je
jge
sbb
repnz
jno
addb
add
add
cmp
sbb
cmpsl
mov
ret
cmp
out
les
inc
xor
cmc
cltd
dec
inc
xchg
jae
je
xor
inc
xor
mov
sbb
divb
lcall
dec
sbb
and
cmp
push
xchg
sub
xchg
and
incb
xchg
into
scas
cwtl
insl
inc
add
add
add
mov
mov
test
lods
xor
mov
stos
test
outsb
push
insl
add
cli
xlat
add
bound
sbb
lret
adc
in
bound
ror
adc
daa
unpcklps
out
daa
loope
add
mov
call
xchg
shlb
pop
push
arpl
adc
jecxz
dec
scas
test
add
add
pop
mov
sbb
inc
dec
mov
cwtl
mov
cmp
mov
jle
and
add
jecxz
ljmp
in
or
add
mov
call
stos
shlb
call
jne
mov
inc
cwtl
mov
lret
add
mov
cld
adc
leave
xchg
fmul
repz
add
add
mov
cwtl
jns
sbb
popf
rcll
scas
xchg
rcll
push
or
aad
scas
or
add
and
xchg
aam
imul
sub
xchg
pop
scas
xor
cmpb
mov
fmuls
xor
icebp
or
sub
or
or
lods
and
add
add
add
mov
pop
scas
mov
mov
mov
jb
mov
les
pop
ja
pop
sbb
and
dec
ja
mov
pop
scas
cmpsl
mov
add
sub
push
or
sbb
test
flds
mov
rcrb
jle
xor
je
mov
je
mov
cvtpi2ps
add
fs
add
add
sbb
push
mov
add
scas
mov
cmpps
std
push
or
push
cmp
lods
pushf
and
sub
fcos
mov
lock
lds
mov
iret
or
push
repz
je
pop
push
inc
fwait
call
lahf
lods
inc
jne
lods
push
mov
add
add
add
and
xchg
and
inc
sbb
dec
cmpsb
jge
jge
sub
sub
scas
inc
xchg
cli
mov
jl
or
mov
xchg
mov
orl
xchg
xchg
sahf
test
stos
jl
sahf
subl
xor
or
aaa
pop
popa
pop
mov
scas
shl
dec
push
cmp
jecxz
add
add
add
sbb
mov
jecxz
stc
rorb
add
pop
push
sarl
add
dec
frstor
mov
mov
pushf
lea
in
xchg
pop
int
mov
sbb
sbb
fdivp
ds
pop
inc
inc
shrl
cmpsl
rcl
pop
rol
sbb
jne
int3
add
add
add
add
xchg
int3
and
lret
xlat
loopne
cmc
adc
add
test
cmpsl
xchg
pop
sub
xchg
fucompp
or
gs
mov
xchg
xchg
sarl
mov
add
cmpsb
xchg
push
sub
jecxz
jmp
push
sub
jecxz
xchg
pop
jmp
jmp
rcr
and
pop
inc
add
add
add
add
mov
aaa
dec
inc
add
adc
cld
sbb
rolb
mov
sbb
insl
add
dec
outsb
test
xor
test
inc
jge
lcall
rcrl
imul
push
scas
dec
lock
lea
cmp
xchg
gs
sub
cmc
xorl
push
nop
pop
add
add
add
add
cmp
roll
js
cmpsb
and
or
mov
inc
add
sub
inc
add
xchg
inc
cmp
and
lret
mov
or
hlt
stos
lods
iret
xchg
mov
cld
orl
push
adc
mov
sbb
mov
or
push
pop
sbb
xchg
shlb
adc
add
add
add
pop
fwait
adc
dec
push
add
aam
mov
sbb
xor
adc
imul
and
clc
push
add
mov
aad
dec
mov
adc
pop
push
data16
adc
sahf
sbb
push
out
adc
dec
xchg
pop
int
xchg
stos
or
xchg
mov
nopl
xchg
jle
ja
xchg
int3
ret
add
add
adc
int3
add
jg
arpl
nop
int3
lcall
inc
jae
nop
int3
mov
xor
mov
popf
ret
mov
nop
xlat
pop
addb
vmread
add
aaa
shr
push
cmc
mov
filds
int3
mov
pop
sbb
in
int3
add
inc
rol
repz
add
add
add
push
pop
and
dec
test
xor
cld
and
orl
out
call
xlat
add
ret
lahf
cmp
pop
fcmovnbe
sti
scas
in
push
pusha
jmp
ret
gs
ds
and
jb
pop
dec
movsl
xchg
sbb
es
xchg
jl
lahf
push
lds
jmp
cmp
scas
cmp
add
add
add
fsin
out
leave
cmpsb
rcll
aaa
dec
popf
into
test
pop
fldt
inc
sbb
fidivl
fisubrl
add
pop
or
insl
jo
push
frstor
decl
arpl
call
or
jne
jnp
mov
outsl
dec
or
add
cmp
or
add
add
add
insb
and
add
fld
sub
jb
cmp
and
in
push
mov
sbb
rcll
mov
or
or
dec
jo
jnp
xchg
cmc
enter
cmp
mov
cmp
pop
mulb
test
lahf
add
mov
inc
sbb
ret
inc
popa
icebp
sahf
push
push
push
lods
int3
add
add
add
stc
add
push
adc
and
xchg
jne
mov
inc
loopne
xchg
mov
xchg
mov
xor
pusha
notl
mov
adc
pop
add
jne
mov
repnz
or
mov
jecxz
andl
int3
mov
mov
add
mov
ds
int3
add
pop
inc
dec
add
add
add
mov
adcb
push
lahf
int
loope
inc
aaa
lods
hlt
dec
movsb
xchg
mov
push
cmp
clc
sbb
loopne
inc
std
xor
mov
mov
lahf
mov
xchg
pop
inc
ret
inc
sub
insl
repz
aas
jne
pushf
stos
sarl
or
fisttps
sub
negl
inc
and
imul
jne
subb
sub
adc
xchg
add
add
add
jne
push
xor
inc
cmp
roll
sbb
add
or
rcrl
xor
sub
andl
adc
daa
pusha
mov
jp
jmp
mulb
mov
adc
call
jnp
test
fsubp
jae
xchg
mov
outsb
xor
aas
sbb
aad
lret
add
add
add
add
and
clc
out
call
js
pop
call
add
fcmovnb
mov
pop
stc
add
callw
incw
cmpsb
fistl
and
pop
sarb
hlt
xchg
in
sub
scas
in
stc
cmp
add
jae
or
stc
sub
mov
aas
shl
adc
xchg
and
fldcw
add
add
add
fsubl
pop
les
inc
aam
popa
inc
xchg
dec
es
push
lret
mov
sub
adc
addr16
sub
jne
dec
mov
rol
in
cwtl
out
icebp
pop
add
cwtl
sbb
ds
pop
jnp
test
cmc
iret
pop
inc
insl
call
punpckhdq
push
push
sbb
adc
add
add
add
lret
cld
xrelease
enter
out
push
add
call
sbb
xor
lea
enter
mov
jle
mov
aas
ret
jbe
int
xchg
mov
pop
mov
or
mov
int
loop
push
inc
mov
sbb
xor
jge
int
ljmp
add
add
add
add
scas
fstpl
jne
dec
inc
insl
inc
sbb
subl
mov
popf
pop
int
dec
jecxz
cmp
mov
ret
lahf
inc
pop
xor
inc
sub
or
pop
int3
add
jle
movsl
mov
jne
shll
scas
lods
scas
rclb
cmp
dec
sub
jp
lds
and
mov
add
ret
aas
test
scas
lods
add
sbb
add
into
inc
add
js
scas
pushf
adc
jl
lds
jge
int
jge
mul
lods
and
idivb
test
inc
pop
xor
xor
add
add
imul
sub
add
add
add
outsb
add
mov
shufps
ret
or
xor
push
call
jecxz
ret
or
sub
jp
mov
jle
push
ret
cmpsb
movsl
in
mov
pushf
sub
and
outsb
inc
add
jge
stos
pop
dec
ja
jne
xchg
dec
or
mov
lods
lock
mov
lret
cmp
add
stc
or
xchg
mov
test
pop
std
imul
das
mov
mov
sbb
nop
jo
ljmp
es
jl
sarb
xchg
inc
es
mov
pop
inc
lods
pusha
mov
mov
pop
lret
test
call
sbb
mov
xchg
mov
ss
and
cmp
add
add
movsl
outsl
es
ds
into
sbb
movsb
shrb
mov
repz
sub
xchg
pop
int
aam
in
xchg
pop
inc
mov
xchg
jo
mov
test
push
int
xor
int3
jl
sub
adc
inc
sub
sub
pop
cmp
xchg
nop
pop
out
cmp
test
pop
cmp
mov
sub
sbb
int3
into
int3
fwait
add
add
add
pop
js
add
sub
xchg
add
lcall
and
clc
into
add
dec
fmuls
xchg
pop
int
js
inc
inc
mov
and
push
cld
daa
outsb
movsb
neg
sub
mov
aas
paddb
mov
ret
test
inc
sahf
sub
jmp
test
add
scas
jmp
fdivs
pop
add
jmp
add
add
add
nop
pop
scas
ds
push
lret
scas
rolb
and
sbb
sub
or
ds
loopne
int3
cmpsb
dec
das
jmp
xor
xlat
fidivrl
mov
int3
sbb
or
cmp
adcb
fiaddl
clc
cmp
mov
or
jae
ret
or
inc
mov
jne
jmp
add
add
add
add
call
mov
pop
mov
imul
insb
cmp
js
stc
mov
mov
iret
nop
dec
arpl
js
sub
gs
push
push
xchg
push
cmp
and
mov
and
sbb
or
add
add
mov
sahf
mov
xchg
outsl
orl
xlat
xchg
shll
add
add
add
pop
and
inc
mov
adc
shl
inc
mov
pop
pop
cmp
lds
mov
jle
call
adc
xchg
lcall
loop
decl
outsl
mov
mov
out
scas
and
popf
or
add
addr16
inc
shl
and
push
and
and
add
add
add
aam
jmp
pop
dec
les
pop
int
xchg
cld
test
sub
jle
sub
jle
nop
les
sub
jle
or
lret
and
int3
push
int3
sahf
std
test
add
insl
pop
inc
inc
jne
inc
sbb
push
inc
jne
push
lea
loope
xchg
decl
jmp
imul
add
add
sbb
int
push
jo
mov
loop
sbb
mov
xchg
mov
loopne
mov
test
movb
dec
dec
or
mov
arpl
test
jmp
sbb
call
into
test
cmc
xchg
outsl
push
in
pop
jne
pop
aam
or
push
xor
xchg
aas
js
mov
and
and
das
decl
add
add
add
aam
sub
xor
xchg
mov
daa
pop
lods
lods
scas
mov
adc
jns
adcl
aaa
movb
sub
pop
and
xchg
mov
shll
add
add
pop
xchg
sub
dec
add
mov
xor
mov
pop
and
lods
jl
jae
mov
pusha
fcmovb
and
cmp
mov
jnp
pop
add
add
add
arpl
faddl
std
xchg
in
mov
fnsave
jecxz
je
and
mov
ret
and
fsts
std
cltd
dec
aam
cmp
call
add
and
repz
and
xchg
cld
in
xchg
cmpsl
loopne
xchg
icebp
mov
loop
push
mov
or
push
sbb
xchg
push
loope
sldt
add
add
fbstp
or
dec
mov
mov
roll
cli
call
sbb
jmp
push
pop
jge
add
ljmp
pop
add
mov
or
jae
test
inc
dec
fwait
xor
dec
sbb
cli
aas
loope
sbb
mov
mov
mov
inc
loop
dec
pop
add
inc
add
add
add
sbb
sub
sbb
and
or
sub
adc
sbb
sub
sbb
lock
pop
push
adc
idivb
and
xor
xor
mov
outsb
scas
mov
jge
mul
repnz
inc
ficompl
cmp
jge
jp
nop
cwtl
fbld
adcl
xor
aad
and
repz
orl
add
add
lret
add
jg
sets
mulb
and
and
pusha
mov
and
rcr
jnp
imul
jbe
mov
scas
movsb
or
jmp
nop
jmp
aad
sub
and
or
outsl
stos
lea
pop
mov
cmpsb
and
mov
xor
lret
ret
sbb
jge
or
add
add
add
mov
sbb
mov
inc
fstpt
mov
xchg
sti
mov
mov
and
add
sub
pusha
add
cld
lcall
adcb
adcb
adcb
adcb
xorb
sahf
aas
push
mov
add
sub
add
add
hlt
sbb
or
iret
add
push
push
or
fnop
sub
shlb
jae
and
in
or
in
push
push
pop
push
push
inc
and
xchg
pushf
cli
aaa
in
pop
into
imul
out
mull
pop
mov
jo
mov
mov
sub
add
add
add
cmc
loope
mov
xor
es
cwtl
addr16
jo
mov
xchg
subl
push
out
sar
inc
push
mov
sub
sub
lcall
jg
es
pop
jae
pop
fstpl
popf
fcmovnu
inc
xchg
xchg
notl
sti
call
addb
add
add
ljmp
and
hlt
mov
jmp
pop
sbb
jl
jp,pt
mov
repz
hlt
rolb
or
mov
int
jb
roll
adc
loopne
xchg
jp
pop
sbb
loopne
out
call
xor
repnz
pop
testl
fadds
scas
aas
pusha
subl
and
add
add
add
xchg
mov
mov
inc
cmp
imul
and
push
js
in
hlt
sub
bound
fidivrl
adc
cmp
insl
ficoml
push
push
pop
jns
xor
js
fsts
hlt
daa
scas
sbb
fistpl
int
insb
lahf
adc
stos
cmpsb
pop
jno
data16
loope
jmp
push
fstl
hlt
xor
add
add
add
or
fcompl
mov
in
xchg
shrb
sbb
jne
inc
test
dec
adc
jg
ljmp
test
nop
pushf
fdivr
xchg
adc
pop
lods
in
sti
loopne
adcl
imul
ja
add
rcr
xchg
out
sub
pop
pop
fistl
in
add
add
add
add
clc
add
and
mov
mov
mov
in
jbe
notb
xchg
ret
push
adc
ret
add
push
mov
xchg
jb
dec
mov
adc
xchg
jmp
and
jb
mov
inc
adc
scas
cmpsl
int
lods
pop
jbe
addr16
inc
sub
dec
cmc
lret
push
pop
sub
mov
add
mov
add
add
add
or
cmp
add
jne
loopne
add
mov
cmp
or
jne
loopne
add
movsb
rorl
or
mov
sti
add
adc
pcmpgtd
pushf
mov
pop
jg
mov
shll
adc
add
inc
push
in
rsm
popf
fstpl
lods
orl
add
add
shr
adc
int
aam
loope
mov
daa
mov
jo
xchg
pop
inc
inc
ret
mov
ret
sub
aas
in
push
int
mov
sub
rorb
lret
and
test
sub
sub
sub
xor
jle
sbb
fadds
scas
inc
xor
and
add
add
add
aam
scas
inc
mov
das
jmp
pop
cli
fcoms
cli
fmuls
stc
clc
pop
insl
lods
pop
jne
stc
xchg
je
dec
fimuls
cmp
sub
push
jbe
or
imul
cs
insl
sbb
lahf
clc
xor
push
and
fisttpll
sub
fists
xchg
or
inc
add
add
add
leave
jne
add
subl
lds
and
adc
ficompl
test
jb
in
sub
call
and
lahf
mul
inc
cmpsl
inc
test
je
xor
xor
int
push
push
jl
clc
jns
add
in
pop
rolb
es
pop
sub
mov
jae
jg
mov
add
add
add
int3
icebp
cld
icebp
stc
pop
scas
int
jne
add
push
lods
iret
xchg
xchg
mov
dec
daa
inc
sbbl
notl
repnz
xchg
stc
fisttps
mov
ds
sbb
daa
push
or
lods
inc
mov
jecxz
outsl
or
cmpl
fldl
add
add
jns
insb
fists
pop
pusha
test
ljmp
sub
mov
push
mov
pusha
int3
lcall
cmp
cmp
jno
jne
pop
sbb
add
mov
icebp
imul
add
int3
loopne
or
sub
add
mov
or
mov
push
push
mov
add
add
add
add
pop
int
sbb
fsubrs
lods
lret
add
pop
fldl
xchg
test
inc
pop
or
xchg
or
add
pop
dec
jb
and
jb
sbb
push
pop
mov
push
jb
inc
mov
es
notb
je
and
daa
cmp
mov
fiaddl
mov
dec
xor
add
add
add
mov
aam
push
adcb
cmpsb
mov
inc
cmp
inc
or
cmp
pop
daa
mov
pop
fbld
fs
and
jmp
inc
jmp
fstpt
aaa
scas
clc
adc
fidivrl
lds
stos
and
sbb
jno
push
add
push
dec
add
data16
push
jne
add
add
add
aaa
popa
push
cmp
add
jae
push
adc
fcoml
in
out
rorb
xchg
push
ja
fcoml
sbb
inc
mov
and
add
xor
pop
std
pop
enter
push
sub
push
fldt
scas
int
int3
ret
or
cmpsb
faddl
ret
and
dec
js
add
add
add
stos
cs
jno
xchg
dec
test
xchg
adc
pop
je
mov
sbb
xor
jmp
mov
add
push
cmp
add
adc
jmp
or
inc
adc
xchg
fisttpll
pop
in
jo
mov
and
sub
pop
cmp
mov
dec
xchg
mov
cmp
mov
dec
jle
cmp
add
add
add
cmp
lea
dec
shr
out
push
pop
push
xchg
hlt
push
xorb
or
int
xchg
xchg
pop
sarb
pop
inc
jnp
outsl
sbb
add
pop
inc
dec
pop
mov
mov
ds
mov
fnstsw
cmc
testl
pop
inc
jns
outsl
shlb
adc
int3
in
add
add
add
nop
shl
ljmp
jge
xchg
outsb
int3
rcrb
cmp
addl
js
mov
add
scas
lret
add
ds
lahf
or
js
and
mov
cli
pushl
cli
cmp
cli
pushl
cli
lcall
cli
call
sub
je
fisubrl
add
and
sbb
add
add
add
enter
push
sub
xchg
shrl
jg
outsb
fisubl
jae
mov
push
and
sbb
push
ret
or
push
stc
jmp
mov
insl
fucompp
out
inc
bound
xor
fldl
push
add
push
and
andb
pop
lods
inc
and
pop
fdivr
ficoml
andb
dec
and
add
add
add
sub
add
clc
sub
mov
clc
xorl
aad
scas
inc
aam
lods
inc
aam
scas
inc
aam
stos
inc
test
scas
inc
xchg
push
stos
inc
xchg
pop
test
dec
test
je
aas
js
push
xchg
pop
int3
pop
add
test
js
and
xchg
pop
stos
inc
loope
popf
mov
add
add
add
dec
cmc
dec
fimuls
mov
cld
cs
movsb
mov
xchg
dec
pop
movsl
xchg
pop
lea
sbb
sbb
mov
out
loope
dec
jge
fildl
mov
lcall
stc
jecxz
dec
fistpl
cmpsb
cmp
and
pop
es
or
lods
inc
insl
lcall
add
sbb
and
in
jae
pop
fwait
je
and
or
mov
into
negl
xchg
jle
pop
int
or
nop
cmpb
hlt
int
popf
outsb
aam
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
aam
repz
inc
jle
imul
je
add
add
add
js
inc
mov
popl
xchg
pusha
in
scas
push
inc
push
xlat
jno
jb
push
jb
out
mov
mov
aad
fimull
push
mov
bound
imul
lds
es
bound
test
and
sub
cmp
sbb
insb
fcmove
iret
cli
and
or
xor
push
imul
add
movsl
xlat
jae
xor
add
fimull
push
int
push
cmp
in
xchg
push
int
ss
mov
and
fcmovu
jbe
test
mov
and
xlat
jae
push
loopne
fdivrp
mov
into
push
sub
mov
dec
inc
push
add
repnz
adc
dec
ficoml
add
add
add
add
iret
inc
adc
add
ljmp
jmp
es
jmp
and
insl
les
jae
jbe
cmp
mov
nop
push
add
cmc
dec
and
jo
mov
dec
fsts
jmp
pop
call
xchg
mov
lds
mov
shrl
fcoml
xor
fcoml
add
add
add
outsb
mov
fcompl
je
adc
push
rolb
decb
hlt
rcrl
rclb
lock
testl
shrl
jmp
iret
pop
pusha
push
in
incb
test
icebp
mov
faddl
sbb
js
aas
xor
daa
or
add
add
movsb
mov
loop
popa
adc
sbb
mov
add
add
add
or
out
or
arpl
pop
int
mov
outsl
lahf
arpl
mov
mov
or
mov
call
shll
or
jle
jae
fdivrs
cmp
jle
or
push
repnz
pop
mov
int
shll
mov
inc
xorb
lret
stos
add
add
add
add
mov
or
or
push
fdivl
jne
das
pusha
pop
outsl
and
xor
and
xlat
jb
mov
mov
out
dec
add
or
jl
mov
and
test
divb
into
mov
push
loope
dec
mov
ljmp
add
ficompl
stos
int3
insb
int
mov
inc
add
add
add
pop
xchg
jo
fsubrl
leave
mov
test
mov
popa
sbb
cmpsb
sub
data16
imul
push
cmpsl
div
mov
lahf
ror
ljmp
testb
lret
fwait
cli
add
pop
lock
add
test
hlt
fldcw
mov
push
shll
add
add
add
test
jno
stos
loop
pop
mov
sub
sbb
ret
or
lea
push
fistpll
lcall
aas
jge
push
jmp
add
ret
and
int3
test
pop
mov
imul
or
nop
outsb
mov
inc
out
addr16
fiaddl
add
add
dec
jmp
mov
push
jno
es
int3
div
push
pop
and
in
pushw
adc
js
in
out
xchg
push
and
sbb
jle
mov
mov
push
decb
push
std
cmp
js
jmp
jmp
out
std
dec
rorb
lea
fcmovne
xchg
push
les
leave
add
roll
add
add
add
or
ficoml
int3
aam
popa
rolb
inc
jae
xchg
pop
int
cmp
aaa
hlt
stc
lret
int3
xor
sbb
shr
add
pop
mov
enter
jmp
int3
xchg
fadd
js
jo
pop
inc
arpl
sub
push
jno
pop
roll
int
add
pop
push
into
pop
mov
inc
outsb
pop
arpl
mov
add
add
add
xchg
pop
and
in
out
and
push
mov
and
adc
fs
sahf
xor
out
sbb
sub
fucompp
adc
je
push
sahf
fcompl
and
ss
sub
fucompp
adc
fs
sahf
mov
sbb
sub
fucompp
adc
je
sbb
and
add
add
add
es
sub
fucompp
movd
fs
and
add
dec
sbb
clc
mov
or
popf
mov
sbb
adc
add
mov
or
popf
bound
adc
pop
add
mov
or
popf
outsb
mov
loopne
pop
add
lcall
add
add
add
popf
push
inc
mov
add
mov
or
popf
jbe
out
sbb
nop
xlat
sbb
cmp
into
or
sahf
jb
xchg
inc
jbe
xchg
inc
inc
cmp
cmp
pop
sub
xchg
jbe
cmp
insb
xchg
add
adcl
adc
stc
add
add
add
add
stos
add
jns
sbb
push
jbe
orw
sbb
push
jmp
es
in
decb
pusha
leave
pop
or
add
sub
arpl
in
pop
mov
mov
aas
icebp
jle
jmp
add
mov
add
pop
fimuls
aas
push
std
push
addl
add
push
int
sbb
stc
jg
pop
int
push
test
imul
hlt
add
mov
ret
jle
dec
xchg
jbe
int3
jle
aam
fstpl
or
add
test
or
aam
jo
xchg
pop
and
xchg
pop
jae
adc
mov
fiadds
add
add
add
and
xchg
pop
xor
and
rclb
pusha
jmp
push
ret
and
push
ret
and
pop
adc
subl
jae
bound
push
jmp
test
aam
data16
ret
xchg
pop
mov
call
dec
pop
and
stc
repz
fistl
jns
dec
nop
out
aam
and
add
add
add
lds
mov
mov
jno
xor
fistpl
popf
cs
mov
add
mov
pop
fsts
mov
add
cmpsb
jge
add
das
pop
fimuls
das
out
shlb
mov
xor
fdivl
cmovle
clc
push
and
movsl
scas
mov
iret
inc
jge
mov
ror
add
add
add
dec
std
aaa
add
fistpll
dec
cmp
and
xchg
add
rclb
jecxz
jle
dec
loop
fs
or
mov
loop
jae
fnop
push
cmp
jo
jmp
sti
and
sbb
dec
or
fidivl
lcall
jl
add
pushf
mov
inc
insl
push
lret
push
mov
add
add
add
push
outsb
movsl
imull
push
lcall
dec
and
add
jle,pn
jns
xchg
add
jmp
jae
jmp
and
dec
es
roll
rorb
xor
sarb
xor
jp
and
pop
stc
xchg
lret
add
test
or
nop
or
popf
sbb
jns
add
add
add
outsl
sarb
icebp
js
and
jnp
nop
or
jge
xchg
iret
sbb
pop
cmpsb
mov
mov
push
dec
sbb
add
je
cmc
dec
adc
pop
dec
inc
add
inc
push
outsb
aas
gs
pop
adc
sbb
and
lret
sbb
jecxz
mov
in
sub
aam
das
jge
mov
incb
add
add
add
sub
mov
cltd
hlt
ficompl
loopne
arpl
testl
imul
xchg
xchg
xchg
xchg
xchg
mov
and
push
push
and
cmp
jb
add
insb
sahf
pop
fucompp
cmp
mov
xchg
and
xchg
scas
mov
lea
jl
data16
frstor
xchg
add
add
add
repz
and
inc
inc
js
sub
jb
cltd
dec
pop
jle
push
scas
jl
push
push
or
jecxz
mov
xorl
pop
mov
add
imull
jae
sbbl
xor
push
inc
lods
inc
lods
mov
lods
into
pop
xchg
cs
roll
jb
lcall
add
add
add
test
jnp
mov
mov
dec
xchg
push
push
es
xor
es
es
push
out
and
aad
add
mov
add
ss
push
mul
scas
nop
outsb
dec
add
lods
mov
cltd
aad
pop
rorb
inc
bound
aas
jo
pop
inc
lods
and
or
or
jmp
jae
add
add
add
mov
adc
dec
and
es
lahf
jmp
insb
add
and
xchg
std
pushf
push
out
push
pop
sbb
aas
loope
out
jmp
js
mov
push
push
outsb
jle
add
mov
popf
add
call
imul
int3
add
push
aas
pop
mov
and
add
xchg
loopne
xchg
pop
int
add
add
add
inc
and
idivl
hlt
or
adc
sbb
out
and
pop
int
dec
and
in
xchg
in
int3
jmp
push
int3
inc
mov
pop
int
mov
inc
iret
add
pop
and
in
dec
out
cmpsl
sahf
and
xchg
fsubrl
push
int3
faddp
orl
fsubr
cwtl
push
jmp
and
push
mov
push
add
leave
push
es
in
scas
and
nop
pop
ret
mov
pop
and
nop
lret
ljmp
scas
mov
jp
push
call
dec
loopne
inc
je
xor
or
sub
in
jnp
outsb
andb
jns
jle
movsb
or
inc
xchg
add
pop
add
inc
add
add
add
test
push
inc
xchg
call
imul
jmp
sti
jecxz
cmp
cmpsl
in
nop
xchg
pop
fwait
outsl
push
pop
lcall
hlt
sub
push
and
sbb
xchg
loop
and
decl
scas
ja
xorb
and
dec
and
aaa
add
repnz
and
aaa
cmp
test
cmp
mov
and
add
add
add
scas
fdivrl
pusha
es
inc
js
xchg
fmull
sbb
jle
aaa
je
add
daa
out
aaa
push
lods
cmc
pop
pop
fwait
add
sub
jne
mov
daa
or
es
rolb
es
dec
add
and
mov
hlt
daa
jle
aaa
push
mov
cmc
pop
divb
jns
add
add
add
lods
cli
mov
daa
or
es
pusha
pop
mov
mov
orl
shll
ret
sub
daa
mov
imul
sub
test
add
push
sbb
das
dec
cmp
clc
inc
jb
inc
inc
ret
or
mov
pop
orb
add
xorl
dec
daa
dec
pop
jns
push
sti
sbb
bound
cmp
mov
ret
fimuls
and
std
sub
shrl
es
adc
stos
addl
fstl
mov
test
ficoms
push
dec
mov
jmp
xchg
mov
jmp
add
add
add
outsl
adc
out
nop
and
xchg
xchg
fdivrl
fs
ss
imul
shl
arpl
setae
jmp
jmp
dec
out
push
fucompp
rolb
fiaddl
js
addr16
rolb
je
sbbb
mov
jne
jg
or
cmpsl
dec
adc
add
pop
mov
rcrb
add
add
dec
sub
xor
lcall
ja
in
push
cmp
lcall
xor
push
sbbl
and
or
push
mov
adc
stos
inc
fdivrp
decb
adc
insl
push
or
cmp
insl
xchg
fcos
xchg
cmp
out
jmp
add
popf
dec
add
add
add
add
popa
setno
dec
or
xchg
push
sbb
adc
mov
and
jmp
test
dec
xor
jmp
stos
push
lods
or
mov
shrb
jge
lods
jge,pn
inc
sub
cmp
or
and
popf
push
mov
inc
push
test
jecxz
jns
cmp
add
xor
add
add
mov
jle
or
cmc
sbb
mov
or
scas
jb
inc
scas
jb
mov
mov
adc
jne
sbb
adc
or
xchg
pop
or
pop
jne
mov
orb
pop
int
push
les
out
mov
dec
aas
mov
mov
add
add
add
test
pop
mov
add
jmp
out
push
scas
mov
and
andb
fildl
lods
daa
popf
xchg
and
xchg
jl
add
push
arpl
or
cmpsb
movsl
mov
jmp
inc
mov
arpl
test
xorb
mulb
xchg
pop
mov
jecxz
mov
add
add
add
dec
or
insb
cmp
ljmp
arpl
or
fisubrl
lea
and
mov
push
add
add
dec
aam
mov
out
sub
push
lret
sub
jo
ljmp
pop
dec
adc
aas
push
adc
dec
add
negl
sbb
cmp
das
mov
add
add
add
push
sbb
outsl
xchg
lods
ret
mov
add
cwtl
and
adc
lea
dec
ret
or
test
pop
andl
push
or
cmp
cmp
bound
push
dec
push
push
xchg
adc
popf
ftst
pop
adc
and
pop
rcrl
push
sbb
scas
dec
lods
push
add
add
mov
push
push
sbb
and
xchg
popa
fnstcw
mov
das
push
add
sub
add
popa
xor
adc
adc
int
xchg
jmp
and
inc
add
stc
nop
pop
loop
cmpsl
push
mov
adc
adc
and
pop
xchg
add
xor
xchg
loope
mov
shlb
roll
add
add
mov
fisttpl
imul
bound
pop
push
mov
in
ss
int
dec
and
insb
popf
sahf
lret
add
inc
cmp
lea
sbb
iret
imul
mov
and
addb
notb
mov
add
pop
mov
xchg
pop
or
add
add
add
add
pop
and
xchg
xchg
jmp
xchg
add
jnp
pop
roll
sub
ljmp
add
and
xchg
pop
push
aas
xchg
daa
jmp
xchg
pusha
and
pusha
and
aam
pop
and
xchg
shrl
in
xchg
add
pop
stos
jge
xchg
sub
lea
adc
and
add
add
add
xor
fs
sarl
jb
daa
cmp
lahf
jns
pop
and
jmp
add
pop
int
cmp
and
sub
popa
dec
pop
cmpsl
inc
cmp
test
pop
addl
int
dec
jecxz
jmp
lds
jno
mov
jne
jg
and
leave
lcall
push
and
js
pop
add
add
add
add
cltd
fnstenv
scas
enter
add
jg
jmp
jg
and
leave
fnstenv
das
nop
pop
inc
fimull
cmp
mov
pop
mov
pusha
cmpsb
nop
pusha
stos
int
sbb
dec
inc
xchg
pop
enter
adc
jmp
adc
outsl
jae
fistl
mov
pusha
stos
or
add
add
add
push
out
dec
dec
adc
jns
fisubrs
jnp
xchg
pusha
stos
mov
inc
cld
and
test
sarl
xchg
xlat
sub
inc
insl
push
insl
fistps
add
cmpsl
jbe
mov
mov
pushf
mov
pop
cmpl
test
ret
push
ret
rclb
cli
out
add
add
add
mov
leave
xlat
add
popf
jmp
mov
mov
adc
repnz
cmc
mov
inc
inc
incb
fldl2e
rol
jle
pop
sub
sti
aas
pop
inc
lock
push
testb
add
add
ret
clc
mov
ror
dec
cmpsb
mov
add
test
cmp
mov
mov
fcom
inc
push
dec
dec
lds
add
add
add
ret
sub
pushf
sbb
dec
testb
sub
cld
mov
call
iret
mov
ficompl
scas
sub
jl
jo
mov
and
push
aam
bound
pusha
mov
mov
pop
add
out
mov
aam
mulb
cmp
iret
fsubrl
aam
cmpsb
add
add
add
xchg
mov
jmp
inc
push
in
orb
mov
mov
jmp
loope
and
daa
les
test
jecxz
sbb
or
add
call
add
lret
jns
jnp
hlt
je
shlb
sub
and
mov
xchg
orl
fsts
pop
and
lea
add
add
fs
fistps
mov
rcl
jmp
sar
call
jmp
and
test
pop
and
xchg
xor
movl
push
in
mov
adc
call
push
and
int
and
enter
cmc
pop
mov
dec
and
into
sbb
add
add
push
pushf
add
sbb
adc
insb
add
pushl
jo
mov
mov
xlat
add
dec
push
popa
test
pop
test
lods
pop
jae
pop
push
andl
mov
push
mov
sahf
or
add
ficompl
fdivs
loope
in
add
add
add
das
adc
xchg
pop
jecxz
mov
sbb
push
scas
push
enter
mov
into
add
mov
ss
cmp
mov
add
add
jns
aas
test
add
negl
mov
mov
call
loop
xor
inc
xchg
pop
int
add
adc
add
add
add
mov
and
sti
mov
and
movsb
mov
addr16
and
jmp
mov
fnsave
std
fcmovu
push
fs
or
out
adc
and
xchg
mov
cmp
xchg
nop
scas
pop
cmpsb
rolb
out
xor
xchg
clc
jecxz
dec
adc
clc
jecxz
mul
jle
sub
sub
add
add
add
test
out
clc
dec
in
clc
lds
add
into
cmp
mov
jne
popf
xor
jne
fists
lock
iret
test
aam
push
insb
jne
xor
cmp
adc
push
mov
push
inc
shr
data16
ljmp
ret
dec
ret
sbb
das
fiaddl
test
add
add
add
cmpsl
inc
lock
cwtl
aam
test
ds
sbb
imul
lret
adc
sub
sbb
pop
jp
mov
adc
xor
add
cmpsl
and
pop
dec
insl
xchg
mov
jp
xchg
xor
push
or
mov
mov
sub
jmp
mov
bound
filds
add
add
add
mov
add
and
mov
pop
pop
das
decb
inc
jo
push
out
sbb
mov
mov
dec
inc
jl
in
nop
scas
enter
adc
jnp
ret
mov
mov
xor
in
inc
add
jg
loop
ja
jge
mov
push
fsts
pop
push
or
add
add
ret
mov
inc
inc
jno
ret
inc
mov
mov
es
adc
fld
jle
adc
push
inc
cmp
xchg
and
int3
add
leave
cmpb
negb
jecxz
sub
in
stos
fiaddl
ss
aas
push
mov
loopne
ficoms
push
jmp
aad
push
push
fs
add
add
add
fwait
test
xor
adc
pinsrw
popa
mov
adc
adc
stos
shlb
lret
stc
ficompl
mov
sub
sahf
shlb
movsl
pop
addl
fildl
dec
test
int
fcmovnbe
dec
pop
scas
add
cmp
push
aas
inc
fimull
out
imulb
inc
add
add
add
enter
mov
or
or
pop
mov
cmp
testl
mov
fdivl
call
icebp
jo
pushl
shrb
mov
aas
adc
jo
mov
add
or
or
pop
shrb
dec
dec
dec
fiaddl
loop
add
or
and
add
add
add
xor
add
push
js
inc
xor
test
mov
lods
and
add
cmpsl
pop
xor
cmp
fistpl
fldcw
push
xchg
xor
mov
mov
pop
and
xchg
test
fwait
aas
xchg
mov
aas
xchg
xor
mov
sub
aad
add
data16
add
add
add
xchg
test
pop
dec
xchg
xor
mov
sub
ret
es
pop
mov
xchg
fld
add
sbb
fstl
pop
enter
int
xlat
adc
mov
aad
test
int
popa
scas
cmp
outsb
pop
jne
mov
int3
fistl
xor
lods
movb
cmp
int3
fildl
add
add
add
bound
es
pop
js
mov
popf
inc
loope
inc
mov
mov
adc
pop
push
mov
clc
or
mov
and
mov
add
mov
push
lds
cmp
rcll
jae
pop
ret
adc
in
add
jno
push
mov
fcmovu
add
add
add
ret
jmp
sbb
fisubl
dec
int
ja
jp
fcoml
testl
dec
adc
xor
and
ljmp
fmull
fcmovbe
xchg
out
test
in
cmp
adc
dec
push
adc
push
sbb
add
and
lods
push
int3
sbb
sub
ret
add
add
add
pop
and
xor
imul
sarl
inc
mov
sbb
push
push
push
movl
add
mov
les
mov
mov
sbb
iret
adc
mov
call
xchg
jno
pop
or
mov
xchg
xchg
pop
jmp
add
add
add
insb
rorb
cltd
cs
icebp
cmp
and
out
sbb
dec
xchg
xor
gs
pop
inc
test
push
test
out
nop
add
jne
scas
inc
pop
mov
mov
fdivrp
ret
jo
rcll
jb
loop
mov
dec
push
fmull
mov
lock
add
add
or
adc
in
jns
ficoms
lea
adc
jbe
push
push
cmpsb
cs
mov
pop
cmp
mov
int3
sbb
pop
cmp
inc
adc
fisttps
mov
mov
mov
pop
inc
mov
iret
adc
push
pop
push
leave
movb
rclb
mov
cmpsb
cmp
or
cwtl
popl
add
add
add
sub
call
mov
pop
div
lods
les
jmp
sbb
call
sbb
jmp
pop
jecxz
data16
push
xchg
mov
jne
fidivrl
rorb
mov
push
pop
jle
pop
cmpsl
xchg
bound
push
loopne
mov
push
mov
test
dec
fucomp
sub
add
add
add
mov
xchg
pop
jmp
into
in
rorl
and
pop
mov
arpl
test
sbb
cmpsb
xlat
dec
icebp
and
dec
inc
scas
and
movq
incl
xor
lcall
add
ret
dec
push
sub
sub
lcall
jmp
clc
stc
add
aaa
add
add
add
adcl
call
sti
and
jne
push
and
push
pop
insb
and
and
inc
mov
dec
inc
test
push
push
fwait
lea
xchg
add
xchg
das
pusha
mov
pop
fnstenv
push
fnstenv
enter
popf
xchg
movd
fdivrl
arpl
jo
out
or
iret
cld
add
dec
cmpsl
in
add
add
add
loop
call
cmc
ja
xchg
and
push
popf
cmpsl
cmp
dec
loop
mulb
sti
add
and
add
gs
fmul
adc
dec
xor
xchg
and
jne
pop
add
and
add
and
fldl
add
push
pop
add
pop
into
add
cmp
add
add
add
add
or
add
jnp
adc
ss
mov
or
int3
add
or
add
ss
xchg
dec
push
push
ss
xchg
add
int3
inc
mov
int3
xchg
push
dec
jle
xor
sbb
jb
dec
inc
mov
push
cmp
inc
push
add
add
add
scas
xchg
in
xchg
addb
orb
jp
push
adc
imul
loop
mov
and
xchg
push
and
test
xor
fnstsw
sbbb
sub
ret
dec
stc
or
xor
xchg
add
and
cld
loop
push
pusha
adc
out
jmp
add
add
add
imul
and
fsubl
fs
ljmp
out
aaa
into
pushf
xor
fs
jl
sbb
inc
adc
mov
and
int3
sub
add
fcmovnbe
jecxz
pop
jl
sbb
cmp
or
ret
mov
repnz
or
sub
mov
adc
or
add
add
add
std
addb
rorl
push
push
jne
add
adcb
jo
push
enter
or
insl
cli
push
or
or
sub
jle
and
or
xchg
cmc
lods
mov
xchg
adc
mov
mov
and
xchg
cmpsl
jmp
mov
xor
sbb
test
rorb
and
test
add
add
add
ret
push
pop
add
pop
and
dec
imul
push
sub
sahf
fs
xchg
cmp
data16
mov
push
and
xchg
sbb
cmp
imul
cmp
pop
push
push
xor
sub
pop
roll
pop
negb
xchg
jnp
lock
pop
int
add
add
add
inc
jmp
add
jmp
add
aaa
dec
mov
lea
ljmp
aam
adcl
add
fcompl
push
mov
dec
movsb
sub
mov
add
xor
xor
mov
jno
xchg
pop
dec
out
mov
lods
xchg
pop
pop
sub
add
add
add
stos
xchg
lds
fiadds
and
pop
pop
sbb
fistl
sub
movsl
push
and
sub
lret
ljmp
and
xchg
pop
xchg
arpl
sub
nop
stos
push
lods
xchg
jo
ljmp
push
sub
adc
push
movsl
xchg
aad
in
int
je
cmp
add
add
or
push
lods
xchg
add
add
das
add
fcoml
add
rolb
fstl
sbb
dec
jae
or
call
adcb
lret
inc
ficoml
pop
int3
adc
push
in
cmpsl
lods
outsb
jae
or
das
lock
fimull
sub
pop
inc
test
add
add
hlt
add
fsubs
ja
and
loopne
push
popa
pop
or
pop
je
inc
xchg
push
cmc
incb
cld
ret
hlt
push
sbb
shl
cld
xchg
xchg
inc
xchg
repz
sbb
out
xor
xorl
test
les
jae
xor
pop
incb
add
add
add
pop
jae
dec
push
cmp
xor
mov
push
fisttps
rcll
sbb
xchg
lock
es
cld
pop
push
ljmp
or
mov
pop
int
cmp
mov
inc
test
or
pop
fbstp
xchg
pop
dec
inc
popl
dec
mov
xchg
incb
add
add
add
sahf
cs
jl
mov
out
xor
lahf
sbb
inc
lahf
sbbl
pop
je
pop
pop
int
xchg
dec
dec
iret
jb
arpl
cs
mov
ss
ds
pop
pushf
xchg
jecxz
sub
mov
add
das
inc
cmp
jmp
jo
cs
stos
test
outsl
lds
pop
int3
mov
add
add
add
and
jns
lret
movsb
insl
push
sub
fldl2t
cmp
roll
pop
shr
imul
mov
jo
pop
and
xchg
push
and
bound
cmpsb
movsl
test
int
or
inc
mov
and
inc
ficompl
fcomp
aam
push
fs
es
dec
push
add
add
add
add
add
inc
mov
frstor
call
pop
fisubrl
jg
and
pop
cmpsl
test
lods
mov
add
ljmp
pop
and
lods
pop
das
inc
mov
mov
add
add
adc
push
mov
jb
cmp
data16
inc
data16
adc
incl
add
add
add
cmp
adc
xchg
mov
dec
in
cmp
lods
je
cli
daa
push
mov
pop
mov
sbb
nop
push
pop
mov
out
sbb
mov
std
nop
xchg
sub
iret
xor
je
xchg
jmp
inc
xchg
mov
mov
in
shlb
cmpl
add
outsb
or
add
add
add
or
ret
punpckhdq
enter
xor
and
cmpsb
je
in
pop
add
mov
cmc
mov
sub
sub
addl
add
xchg
aaa
pop
sub
divb
sbb
jmp
out
sbb
sub
lret
add
xlat
daa
add
fcomps
inc
adc
push
jecxz
rolb
add
add
add
mov
jle
sub
dec
jae
ret
cli
fistpll
loopne
testb
mov
sbb
rcl
push
gs
sub
adc
out
cmpl
sub
es
jecxz
push
inc
pop
adc
and
sub
fnstcw
add
add
add
sbb
lods
lods
adc
fisubl
sbb
into
hlt
jecxz
rol
jno
push
and
sub
dec
sbb
mov
jno
fxam
add
jnp
movsl
leave
fidivrl
jbe
jmp
jmp
ffreep
push
or
jmp
adc
pop
popf
cmp
or
stos
data16
push
outsl
mov
add
add
add
test
test
sub
cli
add
rcl
pop
shlb
pushl
xor
sub
fistpl
push
fsts
xor
cmp
sbb
or
fdivs
data16
ja
xor
or
xor
pop
stos
or
push
ja
cmp
ficoml
dec
dec
add
add
je
sti
scas
shl
lods
inc
add
add
add
push
adc
mov
xchg
stos
inc
sbb
mov
add
aad
pop
rcrb
add
into
stos
cmc
movsl
cvtdq2ps
and
push
addr16
jnp
pop
jmp
adc
mov
adc
sarl
jne
stos
mov
or
jmp
rcrl
add
inc
icebp
push
jg
add
add
add
ficompl
mov
ficoms
pop
lcall
pop
push
or
pop
dec
out
push
fwait
or
push
inc
add
pushf
add
mov
mov
out
stos
jl
lret
int3
xchg
clc
dec
lea
je
mulb
int3
test
or
mov
dec
mov
add
add
mov
pushf
pop
bound
fwait
addb
dec
push
cli
aam
push
mov
pop
leave
sbb
mov
add
mov
or
cmp
nop
fwait
shr
pushf
and
repnz
lea
cmpsb
cltd
pop
jmp
lahf
push
sub
or
xchg
sub
leave
and
sub
lahf
push
lods
xchg
or
hlt
add
add
add
xchg
pop
and
inc
lret
mov
cmpsb
xor
sahf
push
lods
xchg
push
xchg
in
cltd
pop
jmp
inc
cltd
pop
jmp
xchg
into
in
xor
pop
fucompp
xchg
pop
inc
and
pushf
xor
adc
add
mov
mov
dec
outsb
mov
fimull
cmc
xor
add
add
add
sub
dec
adc
stos
or
push
loop
rcr
test
dec
ficoml
cmc
flds
call
pop
data16
pop
jae
or
ss
data16
inc
push
clc
or
pop
mul
in
lods
adc
xor
insb
or
popf
fdivs
xchg
adc
mov
call
add
add
add
fs
adc
or
aad
addb
pushf
xchg
xchg
in
aas
ja
ljmp
int
pop
jne
fs
ja
push
push
push
and
adc
adc
mov
call
fmull
decb
push
sub
pushf
push
movsl
inc
xchg
das
lock
movsb
divb
xchg
test
add
add
add
and
ret
cmp
cmp
push
enter
int3
add
add
and
xor
decl
data16
adc
push
mov
adc
int3
add
adc
int3
aad
std
movsb
adc
pop
sub
adc
mov
push
std
dec
adc
inc
inc
sbb
arpl
int3
shr
cld
lods
adc
add
add
add
inc
inc
out
dec
mov
popf
jns
mov
jnp
mov
fdecstp
push
xchg
and
loopne
and
inc
sbb
add
in
aad
inc
scas
and
dec
out
clc
cmpsb
int
xchg
pusha
mov
add
lret
jmp
pop
and
sarl
test
shlb
or
sub
add
add
add
mov
jmp
adc
cmpsl
call
je
in
in
jmp
push
push
and
into
in
call
mov
test
mov
sahf
loopne
jp
and
xor
je
gs
push
cmp
xchg
pop
stos
add
lret
dec
add
sti
outsb
fiadds
cmpsb
and
add
add
push
add
imul
mov
or
ret
jno
or
xabort
cmp
mov
push
and
ljmp
jbe
mov
ret
or
test
sub
xchg
test
add
xor
add
pop
inc
xchg
movsl
sbb
paddw
out
add
add
add
and
or
add
call
sbb
xlat
out
sub
add
xchg
add
es
xor
mov
lds
mov
jo
add
movl
popf
cs
dec
lods
xor
fcoms
in
in
cli
add
daa
mov
int
xchg
das
inc
xchg
add
add
add
xchg
pop
inc
inc
pop
inc
rolb
pop
mov
adc
int3
scas
lcall
imul
fldl
mov
dec
and
lock
sbb
stc
and
rcl
xor
scas
lods
iret
das
clc
mov
pop
sub
ss
mov
sbb
loopne
sub
testl
push
mov
add
add
pop
mov
movsb
call
cmpsl
jbe
xchg
mov
int
mulb
inc
adc
sar
hlt
stos
mov
call
fsubs
xchg
xchg
jmp
js
jmp
xchg
push
mov
imul
mov
jge
pop
add
cmp
and
lea
rorb
scas
and
add
xor
test
xor
cmpsb
add
sub
mov
popa
jmp
sub
faddl
and
xchg
mov
pushf
das
ret
add
xor
mov
xchg
scas
and
add
add
push
push
mov
dec
cmpsb
cmp
cmpsl
sub
jae
add
add
data16
sahf
data16
add
add
add
dec
mov
loope
mov
and
mov
mov
and
mov
push
pop
incl
sub
sbb
adc
add
add
std
xor
clc
mov
xchg
mov
out
dec
cltd
scas
or
dec
add
jbe
cmpsl
out
adc
jb
cs
inc
insl
dec
push
inc
jne
pop
inc
insl
sub
mov
repnz
add
add
dec
inc
cli
rorl
es
dec
inc
call
ret
sub
ss
and
lcall
subb
sahf
jmp
ljmp
idiv
jl
xchg
inc
xchg
test
adc
out
pop
cmp
xchg
inc
rclb
dec
lcall
pcmpeqw
or
sub
add
push
jecxz
add
add
mov
pop
mov
imul
mov
push
jb
mov
push
or
ret
inc
pushf
sbb
push
shlb
aaa
push
mov
les
or
xchg
and
jns
xlat
cmc
and
add
cli
jns
incl
mov
dec
test
out
add
add
add
lds
lds
aam
dec
fidivrl
jmp
xchg
pop
ja
les
and
xchg
mov
jb
popl
mov
sub
in
jmp
mov
ds
mov
loop
jno
fcmovu
mov
scas
insl
push
mov
and
and
sub
xlat
and
movsb
xchg
adc
add
add
add
xchg
cmp
in
adc
push
dec
and
sub
jle
pushf
sahf
outsb
and
pushf
cmpsb
and
add
push
inc
stc
add
sub
nop
sahf
push
and
fwait
data16
pushf
jbe
les
xor
xor
test
push
test
stos
add
add
add
add
pop
add
jecxz
or
test
stos
mov
jl
mov
mov
mov
push
adc
add
xchg
movsl
mulb
outsb
fisttps
out
sub
push
cmp
inc
insl
cmc
pusha
mov
mov
adc
cs
rorb
ret
arpl
imul
lret
mov
add
add
or
ja
mov
sub
fsts
jl
mov
add
dec
or
mov
add
add
loop
fstl
mov
pop
int
pop
jg
add
pop
int
adc
call
xchg
sbb
and
cld
mov
push
pusha
lods
pop
int
add
add
add
or
add
test
or
stos
sub
or
int
pop
or
inc
inc
xchg
pop
int
mov
add
mov
test
test
clc
adc
lret
adc
int
inc
jno
dec
xchg
and
in
xchg
pop
int
adc
add
xchg
pop
or
sub
mov
jmp
jo
pushl
add
add
add
ljmp
sub
xor
xor
shl
out
push
movsb
add
xchg
mov
aad
aam
inc
mov
sub
and
xchg
mov
and
mov
push
xchg
lods
xchg
dec
aaa
sbb
and
sahf
andb
fidivl
jmp
gs
inc
add
add
add
orb
scas
and
cli
mov
mov
stos
dec
dec
cs
xor
mov
divps
rorl
das
enter
or
outsb
push
inc
mov
cmp
dec
and
test
hlt
subb
adcb
test
nop
cmp
cmp
sub
out
and
inc
ficompl
lock
add
add
adc
and
xchg
pop
fsts
rcll
rclb
aam
daa
sbb
mov
pop
pop
loopne
sub
pop
sbb
add
xacquire
push
cmpsl
jae
cs
push
mov
dec
fsubrp
inc
lcall
mov
or
dec
mov
mov
add
add
add
nop
push
lea
cmpsl
dec
insl
adc
and
pop
add
cmp
sbb
cmp
mov
xchg
push
lods
inc
lods
inc
sub
mov
mov
add
out
push
int
aam
push
lcall
add
pop
push
jb
or
mov
jmp
fcmovbe
out
nop
mov
add
add
add
lret
call
out
jmp
push
xchg
pop
int
adc
roll
pop
mov
xchg
or
sub
or
jge
out
xchg
push
mov
int
adc
addb
adc
fiaddl
lret
or
xchg
orb
xchg
dec
test
push
insl
adc
jo
out
jo
out
add
add
add
bound
add
faddl
sub
or
mov
xchg
sub
fucom
pusha
ret
push
mov
lahf
inc
or
incl
mov
add
sbb
cmpsb
repnz
jb
int
add
mov
outsl
int
sbb
and
add
sbb
add
dec
lahf
rolb
add
add
push
and
mov
add
or
lods
xchg
push
and
sbbl
repnz
hlt
inc
mov
push
adc
mov
push
push
push
sbb
mov
mov
inc
orl
jge
subb
push
sub
pop
push
mov
add
dec
sbb
clc
add
dec
xor
sub
add
add
add
inc
and
xchg
add
or
movsb
lahf
xchg
xchg
and
sub
sub
fsubrs
dec
je
xchg
jecxz
mov
jmp
mov
test
mov
sti
inc
mov
jno
pop
in
ud0
and
xor
sub
sub
jecxz
addl
jnp
cs
fdivr
push
lahf
mov
xchg
xchg
push
es
add
mov
jo
add
mov
push
adcl
cmpsl
inc
insl
pop
push
sti
mov
mov
and
xlat
notl
lcall
mov
jl
or
cmp
lret
idivb
je
into
js
push
int
xchg
xorb
nop
push
and
add
add
add
add
int
adc
stc
jg
icebp
int3
add
lcall
xchg
jl
add
mov
xchg
pop
push
rclb
out
pop
xchg
rcrb
movsl
mov
and
test
mov
out
pop
push
cld
lods
gs
and
xchg
and
aas
push
or
jmp
mov
lods
inc
add
add
add
jno
int3
mov
fidivl
jmp
call
push
jmp
sbb
mov
pop
xor
jo
loope
pop
fiadds
and
test
pop
and
or
lret
fcoms
push
sub
xlat
sbb
xchg
jecxz
or
sbb
test
sub
call
inc
mov
ret
add
add
add
sub
push
or
dec
and
push
test
and
jge
pop
sub
xchg
pop
sub
and
mov
call
inc
sub
ret
or
ret
js
ficoml
fisubrl
add
push
dec
stc
or
xchg
xchg
add
add
add
add
add
lcall
xchg
cli
pop
nop
and
lea
xchg
in
xchg
add
bound
lret
cmp
inc
stos
pusha
and
pop
xor
push
cs
jb
push
es
lds
xor
and
sti
outsb
mov
adc
mov
push
sbb
decb
push
mov
add
add
and
aas
in
shl
aad
je
pop
pop
cltd
nop
mov
js
mov
int
sbb
and
stos
xchg
dec
inc
push
cli
dec
push
or
test
scas
add
jecxz
add
pop
lret
jecxz
add
inc
int
cli
jecxz
sub
push
incl
push
incl
push
es
pop
loopne
fiaddl
add
add
add
lahf
roll
lods
add
aas
jle
pushf
sub
imul
jecxz
addb
push
decb
and
or
lods
insl
jnp
jmp
lea
add
sbb
daa
jo
call
scas
cmpsb
mul
in
es
scas
insl
mov
and
xchg
fsubp
jo
out
jmp
add
add
add
push
outsl
and
xchg
jle
adc
stc
xchg
sub
sbbb
xchg
push
pusha
ljmp
xchg
sub
andb
lea
in
daa
sub
lret
and
clc
lea
test
mov
mov
mov
add
push
scas
xchg
and
inc
jg
mov
sub
stos
add
add
add
add
mov
jbe
cwtl
mov
add
lods
in
jae
and
movsl
or
jle
push
daa
mov
mov
push
cmpsb
hlt
xchg
and
push
and
int
and
add
push
jae
xchg
lods
cli
pop
nop
and
cmp
and
imul
cwtl
repz
add
add
data16
mov
sar
into
mov
add
mov
or
sbb
jg
and
and
pop
add
pop
cli
sub
stos
push
add
add
pop
xchg
mov
and
xchg
movsb
in
decl
ljmp
xchg
in
add
lods
cld
add
add
add
mov
int
xchg
mov
mov
sbb
xchg
push
mov
mov
int
or
add
xchg
pop
rolb
fwait
stos
sub
lahf
andl
or
xchg
jle
out
xchg
in
and
add
jb
lret
add
mov
add
push
int
roll
stc
mov
out
int3
add
or
add
add
push
and
aas
push
and
adcl
pop
and
sahf
aaa
scas
mov
popa
rcll
sbb
jmp
jle
int
pop
and
test
jmp
clc
xchg
lods
xchg
inc
es
adc
int3
mov
in
call
loop
ficompl
add
add
add
and
xchg
xchg
out
push
out
js
xchg
pop
jno
sub
xchg
pop
fstps
xchg
pop
lods
mov
mov
mov
sub
sub
insl
or
loop
add
jmp
lods
orb
xor
scas
lds
sahf
int
rorl
enter
cmp
int
add
add
add
sub
jge
test
fs
push
sbb
add
dec
es
cmp
jge
test
lods
lret
dec
pop
xchg
and
or
xchg
pop
add
ljmp
int3
into
cmp
pop
lahf
fsts
sbb
xor
mov
out
and
aam
data16
jmp
stos
inc
sbb
call
xchg
pop
lcall
add
mov
or
push
xchg
and
loop
mov
lock
dec
xchg
ja
and
pop
and
and
mov
add
rol
cmp
in
xor
out
and
sub
out
and
and
pop
lret
add
and
add
and
add
add
add
add
paddb
ret
pop
lret
add
dec
fcomip
shr
ret
cmp
mov
mov
add
adcb
ret
rcrb
dec
push
sahf
lock
pop
inc
mov
sbbb
or
mov
jp
xor
shl
dec
or
dec
int3
add
or
add
add
add
pop
lods
pop
flds
jmp
sbb
push
and
push
push
xchg
and
cwtl
and
xchg
nop
arpl
int
sbb
psubusw
sbb
jo
leave
adc
sub
pop
lods
or
mov
jmp
push
jo
std
dec
mov
mov
cmpsl
clc
flds
pop
add
adc
add
add
sub
icebp
sbb
pop
and
push
xchg
fstl
xchg
cmp
mov
clc
rolb
out
in
orl
movsl
and
push
and
js
pop
add
push
and
mov
sbb
and
out
pop
add
lds
fnstenv
scas
lret
adc
and
push
and
outsl
pop
add
incl
add
add
add
int3
or
test
mov
mov
add
mov
insb
test
xchg
and
xchg
mov
mov
je
pop
xchg
lock
subl
mov
or
mov
cmp
dec
xlat
addl
add
and
test
cmp
lahf
out
lock
add
add
aam
pusha
jne
out
ds
fadds
cli
mov
and
lcall
add
xor
jmp
insl
loope
mov
lock
iret
sbb
mul
sub
pop
dec
arpl
xchg
xor
fwait
xchg
sbbl
or
into
ret
add
add
mov
jecxz
das
lea
add
and
pop
mov
pop
lret
add
stos
cmp
xchg
iret
mov
in
or
xchg
add
inc
push
push
aas
imul
cmp
xchg
out
and
filds
out
jp
fs
pop
inc
fiaddl
xchg
into
int
xor
addb
mov
dec
and
jne
fldenv
lcall
add
add
aas
push
test
xchg
pop
sbb
jnp
bound
sbb
out
add
pop
aaa
cmp
cmp
xchg
pop
cmpsl
cmp
bound
push
sbb
test
call
in
or
call
sahf
and
pop
add
lahf
sub
inc
sbb
add
add
add
push
or
stos
lea
mov
mov
xchg
push
add
adc
cmp
sub
xchg
add
bound
sub
mov
add
push
add
push
aad
cmp
call
lods
inc
sub
sarb
rorl
sbb
add
add
xchg
clc
or
mov
cltd
inc
jno
push
or
les
xchg
lods
repnz
or
jns
imul
xlat
mov
and
and
stos
push
ret
aad
or
cmp
mov
js
mov
in
pop
inc
test
jae
nop
and
sub
in
popa
sbb
add
add
lock
aas
nop
lock
pop
enter
push
jl
add
cmc
jae
sbb
fnsave
shrl
cs
inc
lret
mov
jp
lock
arpl
es
xchg
or
cmp
int3
enter
adc
sub
add
cmp
ja
xchg
jmp
ficoml
add
add
add
stos
pop
cmpsl
xchg
xchg
sarb
mov
dec
int
adc
ret
daa
lret
add
or
push
dec
es
adc
jnp
notb
popa
jmp
xchg
inc
dec
loopne
push
lret
add
cld
in
pop
mov
sub
stos
sub
pop
lret
and
jo
cmpsb
mov
cld
mov
add
add
add
pop
inc
push
scas
mov
and
insl
js
and
clc
dec
and
aaa
sub
gs
jmp
push
inc
popa
test
dec
in
xchg
std
movsl
sbb
sub
sbb
sub
sbb
fs
jg
cs
jo
pushl
gs
testb
orb
psrlw
fstpt
sub
add
repz
or
movsl
mov
rorl
incl
hlt
or
mov
data16
je
add
cmp
xchg
push
xchg
outsl
dec
mov
lret
push
sarb
movsl
adc
push
jmp
call
mov
data16
xor
jae
andl
fcomip
or
add
add
add
and
and
pop
mov
cmpsb
push
xchg
xchg
pop
sahf
push
and
mov
push
adc
loope
inc
scas
lock
and
imul
ljmp
or
lcall
lock
add
lock
jbe
loope
adc
add
lcall
decb
jmp
add
add
add
xchg
imul
test
and
push
mov
push
jmp
int
push
sub
hlt
adc
flds
xchg
xchg
in
stc
dec
or
aas
cmp
cs
lret
add
stc
cmp
mov
add
stc
fadds
jno
lret
hlt
adc
pop
add
cmp
jecxz
add
add
add
lret
sbb
add
inc
jbe
pop
lret
mov
lret
add
stc
add
pop
lret
out
push
cmp
sbb
daa
stc
sarb
xchg
pop
and
into
lds
mov
stc
movsl
mov
out
cli
fldcw
daa
sub
fnstcw
cmpsl
and
xchg
or
and
adc
add
add
add
movsl
sbb
push
xchg
cmp
lea
sub
sbb
push
or
mov
in
daa
and
mov
stc
pop
scas
mov
and
push
jns
xchg
cmp
xchg
pop
lret
add
imul
cmp
xorl
add
cmpb
add
clc
cmc
adc
jecxz
add
out
cld
sbb
add
clc
add
movd
call
add
mov
es
popa
xor
ja
mov
mov
push
add
mov
cmpsl
or
rclb
xchg
xlat
call
and
js
mov
xor
sti
fists
cmp
lahf
adcl
jmp
daa
mov
add
add
add
add
mov
pop
xchg
cmp
or
loopne
adc
ss
lea
rcrb
push
or
or
mov
cld
sub
and
pop
sub
push
addr16
jne
popa
add
lods
add
int
xor
jb
and
inc
mov
xor
inc
loopne
add
add
add
add
mov
or
cltd
insb
and
pop
sarb
pushf
mov
ret
mov
sub
adc
dec
mov
mov
sti
adc
out
adc
shr
push
jns
lods
cmp
loop
jle
sub
inc
or
mov
movsl
inc
inc
lret
xchg
add
inc
inc
jne
push
dec
add
add
add
insl
pop
push
outsl
mov
dec
aad
mov
jl
inc
sarl
daa
mov
add
hlt
outsl
daa
roll
add
inc
fistps
in
and
pop
loopne
std
ds
test
xchg
pop
lods
cmp
imul
and
or
loopne
pusha
int
cs
out
push
xchg
xchg
out
pop
lds
sbb
add
add
add
sbb
sub
nop
add
aas
pop
lods
cmp
mov
out
push
push
xor
add
jbe
cmpsl
movsb
xchg
xchg
enter
icebp
or
add
lret
push
adc
inc
das
xchg
dec
dec
sbb
jo
mov
or
shrb
fs
add
add
add
lret
jno
add
mov
daa
mov
ljmp
rolb
xlat
decl
pop
add
cmp
push
and
inc
lret
inc
scas
mov
insb
mov
cmp
add
jle
dec
sub
daa
mov
js
mov
xchg
int3
xor
adcl
mov
add
add
add
or
adc
shll
and
gs
xchg
or
xchg
xor
cmp
daa
addl
out
xor
gs
jns
into
add
sub
xchg
fs
sbb
add
xchg
add
rol
in
mov
or
pop
loope
outsb
jne
xlat
cmp
add
add
add
pop
lret
mov
pop
mov
call
dec
cmpsl
xor
push
inc
js
cli
iret
push
lret
add
push
push
cmp
or
xchg
bound
rcl
rcll
or
sub
add
pop
sti
or
inc
int3
mov
sbb
xchg
or
add
add
test
add
add
add
lods
icebp
lret
or
mov
add
cmp
js
and
push
dec
stos
movsl
scas
pop
sub
lock
add
repz
pop
int
sub
pusha
sub
add
in
push
ret
sub
pop
pusha
shrl
or
cmp
sar
ss
push
ret
out
cmpsl
sub
imulb
add
add
add
push
rolb
dec
inc
and
pop
sub
out
or
pop
fildll
sub
xchg
inc
shlb
push
and
js
xor
cmp
sub
add
add
cmp
in
xor
ljmp
outsl
xor
push
add
mov
adc
push
add
mov
add
sti
ret
mov
cmp
ja
cmp
add
add
add
daa
subl
add
mov
mov
daa
xor
mov
cmp
add
and
lods
daa
add
insl
xlat
xor
call
inc
mov
rol
sbb
xlat
outsl
and
aaa
in
mov
setno
adc
popf
cmp
cmp
mov
loope
add
jne
add
scas
adc
add
add
in
mov
mov
add
cmp
cld
mov
loope
inc
jne
sahf
jl
or
or
push
or
or
xchg
imul
movsl
xor
sbb
loopne
rol
xor
pop
nop
loopne
push
mov
add
nop
pop
lret
add
lret
push
or
arpl
add
add
add
bound
lret
std
lret
jnp
inc
outsb
out
lret
mov
and
cmp
and
je
loopne
sbb
pop
push
mov
int3
add
jne
xor
inc
push
inc
mov
jge
stc
or
hlt
lods
or
lcall
pop
in
in
in
xorb
push
aas
mov
test
and
pop
cmp
add
add
add
and
jp
add
cltd
mov
movsl
jle
fs
push
and
adc
clc
add
lahf
cmp
fldcw
and
jmp
xchg
pop
lods
sub
inc
add
xchg
shrl
stc
pop
and
test
out
adc
cli
xchg
ljmp
sub
pop
rorl
add
xchg
pop
and
push
and
add
add
add
jns
or
vprotb
sbb
add
dec
and
xchg
inc
stos
add
push
cmpsb
hlt
nop
and
add
xor
xlat
mov
dec
fcos
test
xlat
mov
dec
fcos
js
nop
and
add
sbb
xlat
pushl
xchg
pmaddwd
sub
push
add
mov
add
push
add
mov
add
add
add
and
mov
or
add
or
or
test
dec
adc
add
jne
cmc
xlat
jmp
arpl
jmp
into
fdivs
xchg
popa
jmp
mov
mov
inc
push
sbb
jge
test
add
leave
xchg
jbe
movlps
xchg
cld
cmp
add
add
add
xchg
iret
and
add
std
push
loop
inc
nop
pop
in
sbb
cmp
pop
repz
jle
and
or
repz
mov
or
daa
and
mov
shll
test
xor
mov
pop
and
mov
roll
jmp
dec
cmc
add
add
add
and
xchg
imul
pop
ficomps
xor
push
or
jbe
test
mov
daa
inc
int
jae
inc
cwtl
xlat
mov
arpl
int3
jo
ret
fistpll
and
mov
add
test
je
inc
mov
jmp
cmp
add
add
add
xorb
andb
orb
cld
lahf
mov
pop
aaa
stos
adc
sahf
stc
lods
mov
bts
rolb
in
mov
xchg
xchg
pop
xchg
jle
lds
xor
jmp
jb
lahf
outsl
pushf
pop
and
and
sub
add
add
data16
movsb
mov
jecxz
add
sbbb
add
test
and
jae
mov
lret
lcall
add
and
jle
stos
jl
adc
mov
sbb
mov
test
pusha
and
outsl
and
sbb
jl
push
and
repz
add
sti
ja
sub
movsl
push
add
add
add
addb
ds
mov
fs
pop
adc
hlt
nop
and
add
mov
cli
jae
push
fidivrs
inc
cli
jae
neg
mov
adc
add
push
lret
std
in
adc
xlat
inc
fs
and
fbld
xor
mov
and
in
xchg
out
ljmp
sbb
inc
add
add
add
nop
lock
jbe
loop
inc
sbb
es
sub
fdivr
dec
push
and
out
and
std
mov
add
sub
pop
pop
bound
mov
xchg
pop
ret
dec
xor
mov
rolb
sbb
push
nop
jmp
test
mov
and
icebp
les
add
add
jne
rolb
sbb
inc
dec
insl
notl
add
pop
push
push
std
push
dec
adcl
and
lods
daa
mov
mov
int3
add
mov
xchg
in
and
js
lret
cld
and
xchg
nop
mov
jmp
leave
aaa
jb
sub
xchg
pop
lods
pushf
add
add
add
add
and
loopne
add
push
sub
xchg
pop
jae
add
jecxz
test
xchg
pop
lods
outsb
inc
and
xchg
nop
pusha
or
mov
push
xchg
imul
xchg
mov
jmp
fmuls
popa
mov
adc
push
inc
in
add
cmc
xlat
mov
add
add
add
shrl
xlat
psadbw
es
es
sub
fwait
lret
mov
mov
rorl
dec
fld
sbb
mov
mov
or
inc
les
adc
cmp
xor
repnz
lret
sarl
fs
bound
nop
mov
dec
je
jmp
sbb
inc
jecxz
lret
in
add
add
add
imul
mov
or
xchg
ror
js
mov
or
xor
pop
inc
jne
fidivl
jne
pop
sub
pop
cmc
xor
or
mov
xchg
cmc
xchg
push
imul
dec
xor
sbb
or
xchg
inc
insb
add
and
push
popa
and
push
jns
test
or
add
add
imul
add
negl
mov
ljmp
int
out
sbb
sub
dec
cmpsb
mov
lret
xorb
or
cmp
sub
or
std
adc
add
out
sub
pop
add
lret
pop
add
fwait
dec
xlat
jbe
add
add
add
mov
xlat
cld
adc
fiadds
xchg
lea
add
lock
adc
add
inc
or
inc
sub
sub
pop
fildl
dec
xchg
sbb
add
adc
push
and
cmp
es
lret
dec
add
jns
sub
add
dec
notb
or
xor
mov
jecxz
sub
ja
add
add
add
hlt
and
adc
sub
mov
fdivrl
pop
insb
xchg
pop
and
pxor
jmp
aam
stc
sti
xchg
pop
lods
and
push
sub
rcl
pusha
xchg
nop
sub
dec
cli
mov
jmp
push
jae
in
or
test
add
ja
ja
test
cmpsl
repz
mov
dec
mov
fwait
add
add
add
dec
add
daa
test
movsl
and
cmp
movsl
xchg
add
xor
inc
add
leave
pop
leave
rcrl
es
sbb
inc
popa
inc
add
mov
and
jecxz
dec
push
jmp
fisttpll
or
sub
mov
pusha
adc
mull
sub
xor
add
add
add
xchg
sub
iret
push
fucom
inc
sbb
fmull
mov
jno
adc
iret
std
ds
enter
mov
or
out
and
setno
pop
inc
mov
xchg
xor
roll
out
out
and
xchg
xor
loope
push
xchg
nop
out
and
addb
add
add
loope
into
std
sahf
and
inc
adc
xor
xchg
insl
int
invd
sub
or
add
inc
aas
mov
mov
out
cs
pop
add
mov
lret
add
and
cs
push
ss
cs
imul
pop
adc
add
mov
or
add
inc
inc
lods
repz
add
add
add
imull
pop
sbb
or
add
and
sub
push
inc
adc
imul
xor
lret
add
and
pop
add
lds
pop
and
shll
xor
mov
out
jmp
fildl
aad
mov
jne
pop
and
test
arpl
leave
imul
or
flds
add
add
add
sub
in
xchg
sbb
test
sub
testb
pusha
or
mov
sbb
js
lret
xchg
inc
stos
and
leave
xchg
mov
mov
test
out
xlat
pcmpgtd
lods
inc
aam
and
dec
mov
daa
test
stc
and
repz
adc
bound
inc
sub
jle
add
add
add
dec
mov
shr
inc
sbb
loopne
test
fldt
sub
xor
movsl
pop
xor
clc
pop
pusha
and
dec
mov
ret
lret
xor
daa
xor
clc
outsl
or
jg
daa
addl
mov
arpl
cmpl
sub
add
add
add
sub
lret
fcomps
stos
cmp
or
inc
nop
out
and
or
pop
jno
and
out
rolb
adc
into
xchg
ret
cmp
rolb
lret
imul
xlat
sahf
jno
add
out
dec
sbb
sbb
sub
inc
pop
sahf
call
or
push
xor
add
add
add
repnz
mov
sti
hlt
inc
add
xchg
jo
sbb
outsl
jge
push
add
xchg
inc
lea
fldt
frstor
sub
ja
rorl
lret
add
pop
pop
sbb
or
xor
or
in
xlat
notb
jg
add
or
add
nop
xchg
gs
mov
frstor
scas
add
pop
inc
rolb
add
add
add
daa
dec
fcmove
dec
hlt
xchg
daa
dec
out
fcmove
in
and
add
out
and
mov
fldenv
inc
sub
and
cmp
and
push
and
ret
xor
out
loop
out
pop
movsl
out
out
pop
lods
jne
inc
and
xchg
push
scas
adc
mov
scas
adc
pop
mov
mov
add
add
add
jns
add
je
or
and
lock
dec
loop
div
fldt
sub
or
ljmp
sbb
sbb
xlat
cmp
jne,pn
rolb
lock
mov
inc
add
call
xchg
or
sub
addr16
and
mul
arpl
add
add
add
loop
call
pop
push
cmp
xor
andl
xlat
jmp
and
mov
xlat
mov
into
xchg
and
mov
xlat
cmp
shll
in
mov
or
mov
or
cwtl
adc
cmpb
and
add
add
add
xchg
loope
fwait
cmpsl
mov
inc
push
lds
decb
into
lret
rorl
cmp
mov
or
push
insl
clc
or
sub
arpl
stc
les
lds
vsubpd
add
rol
inc
push
xchg
nop
jl
pop
hlt
dec
not
cli
mov
sub
add
add
add
mov
test
cltd
nop
test
fisttpl
or
hlt
adc
rclb
inc
add
fstps
rorb
mov
movsb
or
aam
lret
aad
loop
popf
mov
sbb
pop
push
or
mov
aad
loop
dec
aaa
jne
jg
cs
cmp
sub
xchg
outsl
xchg
mov
add
add
rcrb
pop
or
call
icebp
aam
sub
jo
mov
stc
shlb
fxch
jl
dec
testb
xchg
loop
dec
adc
bts
sahf
mov
data16
add
shr
mov
push
add
sbb
lods
scas
sahf
frstor
call
inc
aam
stos
aam
jo
add
add
add
lods
push
stc
push
out
fnstenv
movsb
xor
ficoms
add
repnz
sub
pop
xlat
add
sbb
rorl
cmp
push
sbb
mov
roll
fldcw
test
mov
jnp
sbb
pop
jecxz
and
out
mov
mov
out
mov
add
add
add
add
inc
and
dec
and
or
insl
add
add
or
orb
in
stos
xor
adc
orb
clc
lahf
xchg
cmp
pop
nop
fisubs
add
sbb
pop
nop
fisubs
and
fbld
and
fbld
pop
add
add
add
nop
fisubs
xor
mov
loopne
or
and
xchg
imul
push
paddw
fisubrs
inc
xor
and
pop
nop
fisubs
incl
int
pop
and
rorb
adc
into
in
leave
in
sub
test
addb
out
or
add
add
add
jge
daa
movsl
add
test
iret
push
adc
mov
add
mov
cmp
ror
imul
lods
or
das
int3
add
pop
leave
mov
pop
mov
cltd
addb
rclb
in
or
add
fs
add
push
pushf
add
xchg
pop
and
jmp
xor
jmp
es
call
mov
and
xchg
fildll
int3
aam
test
mov
add
xor
add
and
xorb
shll
lret
out
cld
ds
add
es
ljmp
sbb
aad
adc
sbb
test
add
add
xchg
pop
sub
adc
or
add
push
add
or
inc
sub
cmpsb
sub
fcompl
adc
test
push
out
clc
jle
and
add
dec
add
push
xlat
mov
inc
fcos
clc
jle
cld
sub
call
sub
mov
jp
pop
test
sub
add
add
add
mov
mov
jmp
out
lock
out
dec
push
ja
jmp
push
das
sub
js
pop
push
or
push
mov
add
bound
test
add
fisubs
jo
in
mov
push
or
or
out
jmp
sbb
add
add
add
fidivrs
pop
add
pop
add
nop
fisubs
cld
and
jno
std
or
dec
nop
fisubs
add
fbld
xchg
pop
sti
in
sbb
lret
add
dec
daa
hlt
lahf
dec
pop
sub
xorb
xchg
pop
sbb
xchg
jl
pop
lea
add
and
sub
add
add
adc
or
adc
add
pop
mov
inc
and
lret
add
dec
daa
sub
aaa
adc
and
pop
inc
mov
lcall
enter
insl
xor
add
push
lret
add
lret
jmp
mov
ficoml
enter
mov
stos
or
leave
sub
xchg
jle
and
xchg
subb
add
add
add
jbe
fistpll
pop
int
sub
hlt
lods
xchg
mov
lods
lods
xchg
and
int
adc
add
adc
push
aaa
mov
pop
push
rorl
pop
and
mov
in
or
adc
sub
out
mov
mov
lods
insl
jno
and
xchg
inc
stos
sub
push
add
add
add
xlat
mov
push
fcos
js
jmp
out
ja
pop
imul
js
cmp
xlat
mov
psubusw
sub
iret
fnstcw
movsl
rorb
outsl
mov
pop
push
out
stos
inc
inc
sbb
push
mov
call
lahf
add
or
dec
pop
daa
xor
and
orl
mov
loop
incl
add
add
add
das
pop
add
or
call
mov
add
xchg
in
aam
fisubs
fisttps
push
xorl
popa
and
pop
movl
sahf
bound
test
add
sahf
adc
pop
nop
fisubs
and
fbld
std
inc
ret
adc
add
add
add
neg
cld
mov
jp
add
fbld
std
into
arpl
je
mov
cmpsl
pop
insl
stos
ds
pop
xor
xchg
ficoms
roll
or
cltd
mov
or
cmp
orl
sbb
and
pop
arpl
leave
add
lret
dec
cltd
adc
roll
lret
add
add
add
add
jle
aaa
inc
mov
add
sub
or
xchg
popf
cld
dec
or
and
mov
aaa
xor
int3
scas
pop
xor
mov
insl
sub
add
xchg
and
imul
add
pop
and
push
and
xchg
pop
int3
dec
dec
int
insb
push
std
sahf
dec
pop
int
bound
add
add
add
mov
mov
out
and
xchg
and
xchg
adc
out
mov
and
xchg
adc
adc
in
push
or
test
sahf
out
sbb
xchg
imull
adc
dec
notb
jp
fidivrs
adc
mov
pop
and
add
addr16
daa
js
add
add
add
test
mov
inc
enter
dec
adc
ljmp
cmc
mov
push
stos
lret
jg
nop
and
add
add
and
sbb
js
sub
int3
cli
lahf
mov
test
mov
sub
xlat
jmp
push
and
xchg
cmc
stos
dec
int3
int
dec
int3
aad
lea
lret
fcos
and
dec
fcom
push
add
add
add
add
add
and
pop
nop
loopne
aas
sbb
sbb
or
in
adc
xchg
fildll
nop
fisubs
mov
ljmp
add
cmp
and
std
or
imul
int
and
mov
mov
fisttpll
add
add
add
xlat
incl
mov
insb
mov
sti
test
mov
sbb
push
test
add
lods
daa
lret
add
add
test
xor
xor
hlt
outsb
aaa
cmp
frstor
daa
add
xchg
xchg
fildll
mov
lret
jle
xor
add
push
lret
add
das
pop
enter
mov
rcll
divl
add
add
add
bnd
cmp
inc
sub
push
lret
add
jle
and
push
int
and
or
rolb
or
pop
xchg
test
sar
rcrb
mov
and
push
add
jmp
mov
subb
pop
je
loop
add
jmp
enter
mov
js
xchg
pop
fstps
arpl
jmp
add
xchg
les
jmp
inc
mov
cmc
out
scas
andl
dec
pop
insl
lahf
ficoms
xchg
mov
jmp
xchg
pop
lods
popf
outsb
pop
sbb
je
or
push
dec
shlb
flds
orl
jnp
sub
mov
call
mov
lea
imul
or
add
add
call
or
test
xor
xchg
and
sbb
jno
and
or
cmp
sub
inc
insb
pop
mov
mov
pop
mov
mov
in
cmp
les
aas
pop
lahf
insb
outsl
fcom
call
mov
or
xchg
roll
xchg
mov
testl
add
mov
sbb
mov
add
mov
add
out
add
mov
pop
cmp
mov
sbbb
xor
and
add
in
rorb
iret
and
dec
mov
add
cmp
jns
sub
jae
xor
and
frstor
add
inc
mov
add
add
in
xchg
pop
movl
xchg
pop
lret
fsubl
xor
test
dec
lret
xchg
xchg
mov
jnp
sti
lock
or
dec
mov
sti
cwtl
or
dec
xlat
aad
push
int3
fsubrl
dec
out
aad
push
int3
fisubl
or
repz
pop
iret
fs
or
add
add
add
addr16
repz
push
mov
int3
add
pop
mov
mov
and
xchg
mov
cs
ljmp
mov
fldl2t
jp
movsl
xchg
pop
and
ljmp
sbb
fldcw
mov
rolb
fxch
cmp
jb
jmp
jb
test
sbb
add
imul
jmp
bound
pop
lods
outsb
push
or
in
add
mov
es
lea
jmp
jmp
add
es
jp
mov
dec
mov
push
pop
stc
push
and
pop
dec
and
pop
ljmp
dec
out
inc
call
repnz
add
add
add
mov
lock
test
stos
lret
lahf
add
and
xchg
jg
pushl
jnp
rcrb
cli
xchg
xlat
xlat
lcall
sbb
add
insl
add
add
cmpsb
sub
xor
roll
aas
pusha
and
les
cld
lea
out
cld
push
sub
out
lods
pop
pop
insl
mov
or
aaa
aam
add
add
add
sbb
mov
sub
mov
pop
inc
xchg
aad
mov
aad
popf
sub
std
cmp
hlt
and
xchg
daa
mov
xor
pushf
cmc
sahf
js
test
and
and
scas
and
mov
scas
adc
and
scas
fdivs
xchg
xor
add
add
add
add
daa
xor
ror
pop
pop
bound
xchg
scas
cwtl
mov
roll
mov
add
push
xchg
sbb
cmp
int3
in
mov
inc
push
lret
add
rclb
xchg
adc
and
lret
add
lret
lret
ss
xchg
pop
mov
xchg
mov
and
add
add
add
push
into
rcr
mov
mov
shlb
jmp
pusha
shr
cmp
fsubp
push
fxtract
ret
jmp
rorb
ret
sub
jecxz
fnstenv
jmp
shlb
mov
lahf
stc
rol
jo
mov
mov
insl
cmpsb
arpl
jmp
push
jmp
call
add
xchg
pop
sub
pop
fnstenv
arpl
jmp
mov
fs
xchg
pop
and
inc
push
fsts
pop
and
js
xlat
mov
out
ljmp
stos
lret
adc
idiv
scas
xchg
lgs
ds
shrl
push
js
sub
fs
mov
or
inc
and
push
push
js
clc
or
mov
add
add
add
inc
inc
call
add
mov
call
xlat
mov
out
fdivr
mov
psadbw
fistpll
in
and
xchg
cmp
das
rol
pop
imul
add
nop
mov
or
sarl
add
pushf
add
nop
mov
or
shll
add
add
add
add
cmp
pop
nop
mov
add
in
and
scas
and
call
or
fiaddl
call
sub
push
add
mov
hlt
and
xchg
fnsave
and
scas
and
and
out
pop
std
cmp
mov
mov
mov
int3
add
push
lret
add
add
add
add
nop
xchg
and
dec
enter
jle
mov
enter
mov
insl
lret
add
push
lret
add
add
xchg
or
ds
mov
lret
add
lret
enter
add
mov
lret
add
pop
int3
add
cmc
and
add
push
mov
arpl
test
sbb
movsb
adc
lods
gs
and
xchg
inc
je
and
ja
xchg
pop
sub
jno
and
xchg
or
jmp
xchg
pop
and
inc
push
fstps
pop
and
xchg
mov
fldl2t
popf
mov
adc
xlat
fsin
adc
sub
fldz
add
add
add
or
fsub
xlat
lea
jmp
xchg
pop
lods
add
hlt
xlat
les
js
push
imul
add
daa
mov
add
mov
jecxz
ljmp
popl
mov
add
and
insl
jmp
fdivr
cmp
hlt
lcall
imul
add
add
add
pop
mov
xchg
rcr
fmull
cmp
xchg
shrl
call
sbb
jmp
mov
cmpsl
mov
xchg
outsl
or
aaa
adc
pop
add
pop
je
in
jle
push
data16
fmuls
pop
daa
sbb
aad
push
xchg
xchg
mov
xchg
int3
gs
les
push
cmp
add
add
add
add
insb
cmp
popa
aad
aad
adc
sbb
add
xchg
mov
xchg
adc
mov
cwtl
mov
cmp
clc
pop
dec
lods
insb
pop
movl
std
mov
push
mov
xchg
push
repnz
xchg
pop
ljmp
sbbl
mov
or
jecxz
jp
pop
dec
mov
add
popf
xchg
adc
push
outsl
jne
int3
add
repz
das
insl
adc
sub
mov
bound
xchg
or
mov
mov
fs
lret
add
pop
int3
add
in
add
lret
mov
arpl
jecxz
and
or
add
add
mov
mov
test
ds
pusha
mov
leave
jecxz
test
add
jae
mov
ficoms
fs
xorl
dec
fsubrs
dec
push
lret
push
or
popf
leave
ljmp
out
adc
mov
inc
jecxz
pop
add
add
add
stc
loop
add
add
adcb
lret
jmp
push
inc
inc
test
pusha
and
push
repnz
inc
stos
dec
test
xchg
or
in
mov
shrb
cmp
mov
jmp
inc
inc
push
lret
push
dec
stos
dec
push
inc
mov
add
or
jo
and
and
add
add
add
mov
shll
arpl
scas
leave
dec
jmp
hlt
aad
xchg
sbb
and
mov
push
add
mov
push
push
push
mov
addl
push
mov
roll
and
shlb
test
shlb
inc
add
shlb
cli
or
add
add
add
mov
cwtl
add
mov
fs
mov
cmpsl
or
mov
loope
push
mov
pushf
or
stc
or
lret
sbb
dec
lret
icebp
mov
mov
dec
lret
mov
lret
sbb
test
popa
pushf
dec
lret
es
dec
lret
xor
lret
clc
mov
add
add
add
inc
lret
sub
inc
lret
cmp
inc
lret
cmp
inc
lret
pop
mov
sbb
ret
inc
dec
lret
fstl
dec
lret
jmp
dec
lret
cmpsl
sub
mov
adc
lret
fs
inc
lret
mov
scas
fs
pop
mov
jmp
sub
call
jmp
add
add
add
dec
in
jmp
pop
in
jmp
aas
mov
jmp
inc
fbld
xchg
mov
ljmp
sub
fwait
add
xor
add
outsb
cli
jle
xor
stos
sbb
loop
push
cmp
int3
xchg
adc
xor
add
or
jmp
or
mov
mov
or
add
add
add
outsb
dec
and
outsb
xor
cmp
push
xor
cmpxchg
cmp
mov
cmp
outsb
dec
repnz
sbb
aas
gs
outsl
or
jp
inc
js
ss
js
xor
push
bound
inc
js
ss
push
jmp
add
cmp
add
sub
xor
shll
inc
add
add
add
cmp
das
inc
xchg
mov
xchg
sbb
cmp
push
mov
call
push
mov
inc
pop
push
mov
sbb
adc
push
mov
mov
push
mov
cmp
push
mov
mov
and
mov
and
mov
fs
mov
add
add
shlb
jns
shlb
cld
and
mov
nop
mov
lret
fadds
dec
lret
add
lret
cmp
lret
add
or
add
fwait
pop
push
out
mov
adcb
mov
aad
mov
jp
mov
call
or
mov
jle
mov
push
lods
add
add
add
push
push
daa
in
rcpps
dec
push
push
daa
lock
in
inc
daa
clc
pop
sbb
xor
movsl
das
add
mov
lret
xchg
popa
cltd
pop
lret
xchg
and
sbb
and
sbb
and
jmp
call
pop
leave
sub
add
pop
leave
pop
out
test
lret
mov
pop
and
pop
dec
cmp
aad
pop
leave
add
add
add
xchg
mov
addb
scas
cmpsb
mov
push
xchg
scas
cwtl
mov
jmp
xchg
add
lods
xor
and
inc
je
shr
inc
adc
dec
add
adc
add
scas
mull
jmp
cmp
and
or
mov
int3
add
or
rolb
jne
loop
jmp
add
icebp
sti
and
adcl
mov
leave
cltd
call
popa
inc
add
out
xor
or
arpl
sbbl
and
test
mov
lret
cmp
mov
maskmovq
idivl
cmp
movnti
mov
or
iret
imul
test
mov
add
xchg
push
xchg
lahf
and
iret
add
add
add
xchg
mov
imul
sbb
and
xchg
mov
mov
ret
and
daa
pop
and
mov
sub
les
pop
stc
and
and
and
call
adc
mov
mov
jb
lods
test
cmp
mov
add
imul
and
lods
mov
orl
push
lahf
aad
push
cmpb
sbb
lret
add
leave
mov
jecxz
add
pop
inc
into
dec
mov
or
or
mov
push
mov
mov
pop
push
mov
cmpb
sbbb
push
lret
add
add
add
add
imul
xchg
pop
lret
mov
loop
add
das
inc
lds
lret
addl
lret
or
xchg
lods
push
shrb
and
insl
inc
stos
insl
data16
xchg
sahf
push
jb
lcall
xchg
push
mov
stos
gs
xchg
sahf
cs
inc
stos
test
fs
xchg
je
jmp
add
mov
or
jb
out
popf
mov
and
mov
lods
fxch
xchg
xor
mov
pop
adc
jbe
push
jmp
mov
and
loop
dec
jne
or
add
pusha
xchg
das
add
js
and
xchg
or
fsubrl
sti
pop
pop
push
cmp
xchg
or
and
das
fisubrs
pop
mov
mov
add
add
stc
mov
and
ss
stos
sarl
inc
add
pop
and
sub
push
mov
push
jmp
insb
pusha
and
add
call
popa
orl
mov
xchg
fs
or
mov
popl
scas
scas
mov
xchg
adc
or
sbb
mov
add
add
faddp
aad
lods
ja
add
loopne
xchg
xorl
cmp
add
fwait
out
movsb
and
pop
into
fs
daa
nop
mov
scas
lods
mov
and
xchg
daa
add
xchg
es
pop
cmpsb
movsb
insl
and
mov
and
xchg
mov
dec
insl
fsubrs
mov
add
add
add
push
add
lea
xchg
pop
subb
add
xchg
pop
lret
jle
xor
lcall
js
sti
push
lret
add
mov
pop
add
std
adc
cli
jns
cld
add
mov
mov
push
sub
cmovle
lods
test
pop
xchg
xor
add
add
add
add
xlat
add
or
mov
fisttps
push
inc
and
xor
bound
pop
mulb
xor
fsubp
das
sti
pop
push
pop
cld
nop
sub
mov
lods
and
jno
stos
sub
jmp
call
xor
mov
jmp
push
xorb
sbb
cmc
add
add
add
sbb
stc
jg
push
cld
or
mov
xor
mov
imul
add
in
add
leave
jns
or
jne
inc
enter
add
jl
pop
mov
jae
sub
cmp
lock
xor
movsb
lahf
add
push
lcall
and
add
pop
add
add
add
push
in
shlb
and
cmp
inc
mov
lcall
cltd
gs
out
sub
bound
cmp
push
je
cmp
cli
cli
xor
xchg
xchg
mov
lods
rolb
sahf
pop
dec
insl
lret
sbb
insl
ficompl
xor
mov
and
mov
add
add
add
mov
add
cltd
loop
adc
test
ret
js
ret
and
mov
xchg
mov
cmp
mov
and
jmp
mov
add
mov
test
mov
and
scas
and
xchg
or
add
mov
aaa
insl
loop
out
pop
lret
add
add
add
add
push
fidivl
insl
jmp
inc
jne
mov
add
pop
push
aad
aad
pop
mov
lret
jl
jmp
xchg
fstpl
pop
lret
add
push
out
nop
enter
add
push
dec
out
mov
sbb
jge
or
push
push
loop
xor
lret
add
xor
pop
adc
add
add
arpl
and
cmpsb
push
in
mov
rcrb
xchg
xor
jmp
fs
jmp
jmp
or
add
push
mov
or
jmp
sub
addr16
aad
xor
or
add
xchg
sbb
shl
adc
jb
jmp
out
add
add
add
sbb
and
sbb
and
inc
cltd
fsubrp
fimuls
or
mov
dec
sbb
sbb
sbb
sbb
add
mov
push
fcos
test
push
and
or
jmp
jne
std
push
nop
and
or
add
add
push
mov
scas
icebp
add
mov
add
dec
and
add
add
add
addl
divl
clc
xor
sub
and
cmp
pusha
and
in
insb
popl
shrb
and
insb
scas
cmp
movsb
movsl
xchg
scas
and
cld
out
dec
sbb
sub
mov
ficomps
push
out
scas
and
std
mov
les
lcall
add
sbb
add
add
add
sbb
pop
mov
or
mov
mov
cld
test
int3
aaa
fucom
stos
fxam
or
icebp
loop
mov
movsb
inc
insl
clc
outsl
push
or
into
sub
in
or
and
xchg
and
mov
inc
or
add
jmp
jp
out
or
sbb
jns
fnstsw
bound
sbb
cli
xchg
pop
lret
add
add
add
add
dec
int3
jmp
adc
fsubr
sub
lcall
mov
sahf
fdivp
std
or
xchg
mov
jmp
ljmp
call
jno
xlat
orb
add
sahf
int
mov
fadds
sbb
loop
ljmp
mov
outsl
push
or
add
add
add
mov
adc
mov
movsb
fnstcw
mov
add
xchg
adc
jle
push
hlt
mov
jnp
int
je
sbb
dec
call
jp
frndint
stc
arpl
adc
sub
in
mov
push
outsb
leave
and
xchg
mov
ficoms
imul
add
xchg
pop
and
xchg
inc
add
lods
push
test
sub
jl
xor
test
mov
test
sbb
add
les
arpl
xlat
je
scas
shll
fucomip
and
mov
je
xchg
add
test
add
stos
mov
mov
add
add
add
add
cli
mov
andl
lret
inc
xrelease
enter
cltd
arpl
jmp
jge
mov
ret
cmp
mov
and
xchg
mov
and
lods
and
pop
nop
scas
and
and
scas
and
scas
xchg
scas
and
add
addr16
outsl
xchg
push
int
and
xchg
in
daa
add
jae
lret
mov
add
adc
incl
jae
flds
adc
jbe
pushf
shrb
xchg
nop
dec
or
jge
in
sar
sbb
sbb
sbb
stos
mov
repnz
xor
xlat
pop
iret
adc
cmp
or
lahf
inc
lret
sbb
xchg
testb
and
stc
inc
add
add
add
xchg
xor
lahf
sbbl
pop
mov
inc
lret
sbb
push
pop
mov
int
adc
out
or
dec
adc
add
inc
lret
push
insb
hlt
stos
push
roll
dec
les
and
xchg
mov
mov
leave
ja
rorl
push
adc
add
add
add
pushf
hlt
insb
aad
insb
outsb
shl
jb
jecxz
mov
or
and
xchg
nop
aam
mov
pop
xor
mov
push
int
pushf
das
inc
pushf
inc
and
xchg
mov
push
popa
jecxz
push
xchg
cmp
in
das
test
scas
cld
sbb
jp
fcmove
sub
ret
dec
jne
jge
outsl
mov
add
add
movsb
sbb
mov
push
movsl
lcall
and
inc
sbb
stos
lret
add
xlat
add
sbb
xorl
movsb
lret
call
cmpb
popa
aam
punpckhwd
add
or
sub
popa
daa
test
and
sub
push
push
adc
or
add
add
add
sub
xlat
adc
jmp
sub
mov
fadds
mov
std
nop
scas
pop
add
leave
push
xorl
mov
scas
cmp
movl
mov
and
rcll
and
mov
and
mov
and
xchg
rcrl
inc
jl
adc
stc
sbb
jb
pop
add
add
add
adc
fildl
ret
sub
or
cmp
data16
dec
xchg
mov
add
jno
std
movsb
pop
pop
push
roll
dec
mov
dec
testl
add
ds
push
add
jae
leave
fildl
aas
inc
das
xor
push
jnp
pop
xlat
add
lods
cmp
roll
lret
mov
add
add
add
xchg
pop
mov
sbb
or
dec
or
nop
or
add
push
jnp
pop
add
lcall
aas
push
mov
inc
mov
jmp
xchg
push
and
cmp
and
add
jnp
jge
push
push
pop
sbb
fs
add
add
add
cmp
and
cmpsl
dec
in
pop
int
fwait
cmp
sbbl
xchg
pop
and
adc
and
xor
dec
jo
cli
fwait
ds
rclb
out
xchg
xor
mov
push
add
jp
lods
add
add
into
sbb
movsl
rolb
filds
push
and
add
add
add
js
push
and
adc
dec
jmp
add
insb
cld
sbb
imul
ljmp
pop
mov
int3
outsb
hlt
add
and
jge
outsl
negb
inc
call
add
data16
sub
loop
stos
cwtl
fsts
push
int3
adc
add
div
mov
lods
into
subb
add
add
add
add
in
fdivr
cmp
xchg
mov
jb
push
dec
es
adc
jbe
cs
xor
fldt
push
mov
pop
mov
dec
adc
iret
inc
mov
dec
lds
in
nop
scas
and
inc
and
mov
add
aad
inc
xor
test
mov
and
add
add
sbb
adc
aas
mov
and
pop
arpl
ss
loope
xchg
inc
les
xchg
mov
cmp
adc
int
push
cmp
pop
lret
adc
cltd
dec
and
pop
sbb
add
hlt
push
inc
xchg
lret
mov
sti
inc
cmp
jmp
ss
addb
test
jmp
add
add
add
test
push
decb
pop
push
aaa
mov
into
mov
scas
inc
aaa
mov
inc
int3
test
push
dec
popa
aas
and
cmpsb
adc
mov
push
mov
xlat
adc
dec
fnstenv
cli
ja
rolb
movsl
and
test
cmp
into
imull
sub
in
add
add
add
push
js
jmp
dec
jg
jmp
ret
cmp
rcrl
xchg
fldenv
push
xchg
xchg
push
loope
sbb
int3
adc
fldenv
sbb
push
das
and
dec
aaa
pop
add
andb
dec
xor
fisubs
or
inc
sub
incl
je
std
cltd
shr
or
mov
arpl
add
add
add
imul
movsl
aaa
incl
mov
or
out
add
pop
mov
shrb
add
mov
pop
xchg
lret
fcmovb
addr16
jnp
or
mov
stos
in
stos
shrl
push
push
ss
insb
lods
inc
clc
pusha
icebp
std
xchg
cmp
mov
xchg
sahf
and
std
arpl
incb
add
add
add
insb
sub
adcl
fnsave
mov
or
sbb
dec
roll
in
xchg
sahf
cmpsb
clc
mov
and
inc
jns
cmp
sbb
add
cld
sbb
push
mov
mov
sahf
and
jmp
cld
jb
push
sbb
pop
shll
lods
dec
add
add
add
test
or
in
jle
add
addb
jns
xchg
pop
lret
stos
push
xchg
sbb
push
xchg
or
push
pop
cltd
ret
cwtl
mov
cmp
cli
mov
lret
mov
jmp
mov
cli
lcall
inc
mov
cmp
xchg
push
fwait
nop
fdivr
repnz
lret
xchg
push
mov
cmp
add
add
add
jge
mov
lahf
aas
pop
test
jge
mov
out
je
and
fdiv
movsb
cmpsb
nop
cmp
aas
xchg
mov
out
cmp
and
popl
or
shll
xor
sti
lret
push
xchg
fldcw
sti
and
out
and
push
xchg
idiv
jp
mov
cmp
jmp
add
add
add
aad
frndint
out
stc
arpl
sbb
jb
xor
pop
or
and
fldpi
sub
jle
lods
scas
in
sbb
xchg
and
rorl
and
cmpsb
or
decb
and
out
lods
inc
clc
stc
and
loop
xor
subl
xlat
pop
jnp
popa
add
lds
out
sub
jo
sub
add
out
and
add
add
jne
mov
mov
inc
jl
jne
imul
jmp
xor
mov
js
andb
les
dec
mov
jbe
dec
xor
ficomps
sub
es
fdivs
add
cpuid
idivb
pop
sar
stos
in
adc
sub
cmp
or
add
add
add
aad
jae
adc
fadds
test
mov
cmpsl
mov
and
mov
ret
mov
popa
or
test
mov
shlb
adc
mov
pop
adcl
xor
sbb
sub
dec
sbb
rcr
inc
lret
sub
or
clc
add
add
add
add
xchg
xor
xchg
nop
mov
cmp
add
lods
out
jno
cltd
lahf
xchg
lcall
hlt
xchg
pusha
nop
cmp
lods
sbb
push
adc
and
add
push
xchg
xchg
xor
test
cmp
movl
int3
add
xor
add
add
cmp
mov
xchg
mov
xor
dec
fldenv
fs
cmp
aaa
int3
sbb
mov
je
dec
jle
mov
fldenv
and
daa
or
mov
pushf
jne
bndstx
xchg
rorl
pusha
cmp
add
into
and
movsl
sub
mov
fiaddl
sbb
and
add
add
add
stos
push
xchg
cld
pop
sub
and
inc
and
mov
lods
add
xchg
pop
cmp
or
mov
test
insl
ret
sbbb
cli
sub
xor
lock
and
jb
push
or
push
int3
lcall
hlt
call
add
add
add
push
mov
into
subb
fwait
push
or
out
fdivr
sbb
push
stos
iret
mov
rolb
cs
pop
aad
sub
popf
jp
adcl
adc
mov
std
xchg
sahf
test
cltd
sbb
adc
or
fbstp
inc
lods
xchg
mov
cmp
xchg
data16
loop
adc
add
add
add
pop
add
mov
sub
cltd
les
mov
das
pop
sbb
fstpl
and
pop
and
jno
sahf
test
adc
mov
add
push
add
movsl
add
jns
repz
pop
lret
mov
icebp
xchg
xchg
addl
push
sub
sbb
push
lahf
les
add
add
add
push
mov
sbb
int3
setb
add
or
mov
add
lea
xor
test
push
lret
jg
adc
mov
jg
push
jecxz
rsqrtps
xchg
or
mov
lret
stos
addr16
sub
lahf
dec
adc
jmp
inc
mov
fiadds
add
push
jns
and
lea
int
inc
pop
dec
out
add
add
add
or
and
dec
mov
movsl
mov
mov
and
sbb
and
dec
mov
lods
cmpsb
cmp
jp
shlb
lods
test
pushf
adc
xchg
pop
jb
jae
and
sbb
or
xchg
adcb
ret
dec
lods
lods
movb
lock
cmp
insl
pop
mov
jmp
add
ret
lods
test
jo
mov
mov
push
stos
clc
icebp
repnz
jmp
xlat
jne
jns
add
or
sub
dec
mov
and
and
jae
adc
inc
and
sub
fcos
clc
jle
call
cltd
stos
iret
add
add
subb
pop
jo
call
cmpsl
imul
lods
dec
xchg
iret
lret
lods
divl
mov
sti
je
je
and
jnp
add
jmp
std
leave
pop
push
lahf
or
fldt
xchg
aad
stc
mov
pop
cmp
mov
and
xchg
sahf
gs
mov
and
add
sahf
or
add
ret
sub
ret
sub
xchg
and
add
add
mov
cwtl
or
xchg
imul
jb
sahf
or
cmp
mov
int
cld
xor
xchg
sbb
je
sar
insl
stos
sub
jg
mov
int
pop
sbb
daa
lods
jmp
add
aas
ret
std
adc
dec
aad
ret
adc
dec
leave
adc
add
ss
xchg
jecxz
pop
ret
inc
add
add
add
insl
xlat
bnd
add
ret
xchg
fisttps
xchg
mov
or
adcl
add
xor
jo
inc
lret
jl
add
add
add
jle
loop
int3
add
mov
lret
jle
sahf
and
dec
mov
imul
test
jmp
add
add
add
xchg
or
and
sub
and
cmp
aam
add
nop
push
or
nop
ljmp
aam
int3
sub
xchg
cmp
aaa
adc
adc
xchg
pop
out
xchg
mov
cmc
lahf
fidivl
jg
lods
adcb
decl
jl
pop
fisttpl
lret
and
xchg
or
pop
add
add
add
fdivrl
adc
add
add
int3
lret
outsl
or
jge
ss
js
jo
jo
jb
mov
nop
pop
push
cmp
lea
mov
mov
lods
inc
pushf
ja
je
jg
je
ja
je
jae
lea
int3
pop
pushf
cwtl
xlat
subl
clc
testl
and
add
add
add
lods
outsl
gs
xchg
or
int
mov
jo
fmuls
and
pop
push
adc
ljmp
shll
mov
pop
sti
jbe
xor
fs
clc
adc
xor
sbb
push
shrl
adc
sub
sbb
sub
es
pop
inc
xchg
out
push
add
add
add
popa
adc
sti
imul
fwait
xor
icebp
loopne
or
adc
xor
insb
sbb
or
dec
sub
popw
test
xchg
pop
ret
add
mov
pop
lea
add
sbb
aas
sub
lret
aad
in
fmuls
push
lahf
adc
test
mov
sub
add
add
add
lret
push
xchg
mov
loop
icebp
add
mov
inc
ss
add
and
inc
xchg
xlat
mov
add
hlt
imul
lret
lret
add
pop
and
mov
xor
adc
incl
test
fmuls
outsl
movsl
inc
push
adc
push
sub
test
cmpsb
lods
add
add
add
outsb
sub
ret
cmp
and
in
add
mov
rolb
movsl
loope
testb
mov
sub
std
arpl
xchg
jecxz
cmp
in
ret
jecxz
push
inc
pop
push
cwtl
xchg
mov
adc
in
pop
movsb
add
in
fnsetpm(287
or
stos
push
cld
jmp
inc
stc
add
adcb
add
popf
in
jno
or
arpl
add
hlt
push
add
jle
dec
je
xlat
jbe
sahf
stc
lahf
xchg
lods
dec
push
sarw
std
jmp
in
cmp
adc
incl
sub
fdivr
pop
add
xor
stos
lock
cltd
push
inc
jae
add
jne
push
cmp
add
add
add
inc
pop
inc
lods
pop
cmp
inc
cwtl
rclb
jecxz
and
push
jmp
popa
loope
pop
lahf
mov
adc
adc
adc
out
call
jmp
sbb
daa
loop
and
aas
xchg
ret
and
push
outsl
xor
mov
dec
ds
loopne
xlat
cmp
mov
add
add
add
out
xchg
in
mov
push
add
int3
pop
popa
mov
and
pop
mov
pop
cmpl
call
fiadds
inc
ret
inc
pop
sahf
mov
xchg
out
outsl
fldt
mov
inc
stos
mov
pop
cmc
leave
or
xchg
in
sbb
adc
sub
fwait
xchg
and
add
inc
mov
add
add
add
in
mov
and
loop
test
enter
adc
dec
ret
loop
pop
in
xor
mov
lret
push
call
icebp
pop
cmpsl
sbb
icebp
pop
int3
lcall
bound
xor
and
shlb
sub
outsl
mov
inc
ds
rcrb
fs
mov
add
add
add
loope
xchg
pop
inc
pusha
sub
mov
and
insb
pop
mov
outsb
aam
and
lret
subl
jb
mov
out
mov
and
xchg
nop
push
add
lods
xlat
shlb
pushl
pop
and
repnz
cmp
sub
add
add
jmp
sbb
mov
pop
lods
ljmp
xor
add
xor
add
nop
mov
addl
add
and
jle
stos
test
add
adc
std
pop
and
andl
cmpl
and
fdivrl
mov
and
mov
or
or
jecxz
add
add
add
add
and
lds
cmc
cmp
mull
movsl
xchg
leave
imul
jmp
dec
sbb
cmp
push
xor
push
jo
dec
insl
or
inc
jne
jecxz
insl
test
add
cmp
hlt
cmp
dec
rcll
mov
mov
inc
leave
mov
dec
lds
mov
add
add
add
icebp
mov
lret
pop
dec
cwtl
jnp
filds
les
cmc
pop
jb
jl
and
jl
and
jge
and
test
and
push
mov
cmp
and
out
jl
addl
add
pop
out
mov
mov
stos
or
mov
frstor
and
add
add
add
dec
loop
fcoms
lret
xor
addl
or
pop
and
lds
mov
mov
pop
push
xchg
cmp
out
pop
push
or
fwait
adc
sub
sub
add
in
xchg
fstps
sbb
pop
push
in
in
xchg
mov
cmp
mov
in
xchg
mov
add
xchg
or
out
pop
arpl
cmp
xchg
movsl
das
xchg
nop
loop
movsb
xorb
push
cmp
xchg
jp
stos
out
fsub
mov
adc
jecxz
push
repz
mov
sbb
into
sahf
xor
sbb
jmp
inc
adc
push
testb
jmp
and
aas
add
jb
shrb
cmpeqps
cmp
and
pop
lods
stos
cmc
ja
call
mov
and
xor
pop
imul
mov
add
test
into
int3
jmp
mov
dec
add
jecxz
je
jo
jg
jo
add
sub
repz
js
sub
mov
add
add
add
and
xor
add
sub
sbb
mov
push
ret
push
inc
fsts
lahf
pop
inc
mov
sbb
stc
call
add
mov
icebp
fcoms
and
push
mov
adc
pop
dec
or
cmpsl
rcll
add
addl
lret
dec
int3
jnp
lahf
dec
inc
xchg
rcl
out
ss
mov
aam
push
mov
mov
lsl
pop
psubq
pop
sti
inc
xchg
test
add
xor
out
xchg
pop
or
inc
cmp
aam
jns
rolb
mov
add
push
outsl
cmp
and
cmp
add
add
lea
lret
sub
add
sub
adc
and
push
add
adc
das
in
cmp
push
hlt
pop
jo
outsb
loopne
adc
daa
sbb
fsts
adc
ja
mov
push
in
outsb
lods
fistpll
icebp
cmp
movaps
cmp
and
add
add
add
xchg
mov
lahf
dec
mov
aam
fstpt
subb
mov
jns
mov
sub
mov
xchg
push
cwtl
pushw
jg
adc
push
or
jo
push
out
mov
test
adc
jp
int
mov
adc
lods
inc
and
fdivs
gs
leave
call
adc
jnp
sbb
cmp
cmp
add
add
add
ret
lods
rcl
push
rolb
stos
or
and
sbb
ret
jne
adc
enter
push
xchg
out
stos
repnz
xlat
incl
insl
hlt
xchg
fstp
or
into
movsl
std
or
xchg
mov
jge
enter
mov
ljmp
psubusw
push
call
sbb
ret
pop
add
add
add
dec
and
mov
jo
push
sub
ss
call
jmp
and
ljmp
or
nop
xor
mov
inc
mov
movb
add
mov
push
cmp
cmpsl
testl
rcrl
add
push
push
enter
inc
add
das
shl
incb
push
sbb
add
add
add
adc
xor
mov
rorl
or
aad
jmp
movl
push
or
int
or
mov
sub
test
daa
push
sub
jmp
je
add
pop
jecxz
mov
lret
adc
push
aas
inc
imul
leave
mov
stc
out
movaps
pop
and
into
sub
add
add
add
inc
leave
pop
push
pop
stos
movsl
jbe
sbb
xlat
adc
cmpsl
jno
lods
sub
loopne
int3
or
sbb
or
xchg
clc
or
cmp
fidivrl
sbb
je
addr16
and
sbb
in
sub
cld
pop
sbb
jp
cmp
jb
or
jmp
add
add
add
in
and
mov
mov
int
add
cmp
test
mov
add
lea
mov
lds
add
or
test
and
aas
add
mov
pop
stos
dec
leave
pop
add
jle
mov
pop
add
lret
rorl
arpl
fdivr
or
clc
push
stos
into
into
in
imul
add
add
sub
jae
pop
pop
xor
jae
rol
stc
jp
push
icebp
dec
and
xchg
stos
sbb
push
and
mov
fcos
push
and
inc
jne
lods
sarb
mov
popf
mov
or
cmp
adc
push
add
xor
push
and
sbb
or
xchg
pusha
negl
insb
and
and
dec
xor
add
add
mov
add
adc
imul
andl
xor
aam
adc
cmp
movsl
jo
add
popa
pop
shll
push
data16
and
or
std
pop
pop
out
jmp
jle
xchg
lock
jne
pop
int
xchg
add
jb
xchg
pop
lret
or
sahf
mov
pop
mov
xchg
jno
jbe
add
add
add
sub
mov
adc
mov
push
data16
fmull
dec
cltd
inc
test
sahf
mov
sub
aam
outsl
flds
add
xchg
pop
lret
xchg
inc
insb
jno
jl
dec
js
adc
push
adc
int
xchg
andb
jo
jmp
mov
mov
lcall
add
add
fdivl
int
jle
cmpl
jae
add
fstpl
mov
mov
mov
jmp
pop
je
xlat
pop
and
xchg
pop
lahf
inc
push
push
fstps
add
jne
inc
and
adc
add
jmp
mov
and
rcrl
and
jmp
in
xchg
aam
add
add
add
add
push
iret
test
adcb
pop
jle
insb
jb
cmp
cmp
dec
pop
mov
sbb
lahf
cld
fidivs
mov
add
or
fiadds
fcos
xlat
mov
stos
iret
sbb
dec
and
fisttpl
push
jns
jb
cmpsl
fistpl
imul
add
jle
mov
add
add
add
pop
dec
int3
push
icebp
dec
and
repnz
and
jecxz
outsl
xchg
pop
and
add
push
pop
stc
adc
jp
and
shlb
xor
into
or
std
sbb
icebp
pop
fnstcw
pop
dec
lahf
out
and
push
xchg
push
and
cld
push
lcall
add
add
add
cltd
cld
rol
inc
push
mov
pushf
and
add
jmp
mov
leave
or
jmp
std
aas
loope
or
pop
sti
cmpb
push
jg
out
aad
push
scas
lret
add
inc
pop
push
pop
outsb
adc
sbb
gs
repz
gs
rolb
mov
int3
adc
push
xchg
pop
inc
jg
add
add
add
aad
jmp
push
lret
add
jno
mov
mov
or
pop
negl
fidivs
outsb
adc
or
sahf
xchg
insb
xor
pusha
xchg
loopne
insl
dec
inc
mov
lds
push
mov
jns
xor
in
cmp
bound
jo
sub
sti
sub
xchg
outsb
pop
shl
call
add
xchg
pop
adc
ss
sbb
insb
cmpsb
lods
mov
addl
clc
and
dec
fs
pop
jne
push
sub
mov
shrb
or
sahf
adc
ret
shl
sti
fcmovbe
jae
dec
sub
rcll
mov
mov
adc
adc
push
add
add
add
ret
test
push
fists
mov
je
popa
fimull
sbb
add
pusha
and
push
je
movhps
adc
mov
je
popa
fimull
test
mov
js
pusha
and
push
inc
sub
shll
push
inc
imul
sbb
pop
in
test
add
add
add
call
pop
cmc
cld
pushf
pop
ss
xchg
jecxz
or
push
call
pop
add
js
adc
jae
decl
pop
movsb
jmp
in
out
scas
xor
push
in
mov
add
outsb
pop
lret
pop
pop
xchg
xchg
lret
or
xchg
cmc
cld
push
inc
hlt
cld
test
xchg
mov
incl
add
add
add
pusha
lods
inc
mov
lods
push
lods
sbb
jmp
and
push
xchg
scas
sub
loopne
mov
or
push
xchg
movb
push
int3
add
loope
les
or
mov
add
push
xor
fs
test
imul
int3
add
or
xlat
jb
lret
push
lret
add
add
add
add
jnp
out
nop
pop
lret
xor
pop
loopne
cmpsb
imul
shl
xchg
loope
push
cmp
imul
xchg
pop
lea
pop
push
test
and
xchg
andb
pop
and
xchg
jl
and
jl
and
dec
neg
xchg
nop
push
add
nop
pop
and
movnti
jge
sbb
xchg
jl
or
add
add
add
mov
mov
call
jns
dec
jmp
xchg
push
lds
out
jmp
cs
fnstcw
frstor
jbe
xor
sub
rep
mov
adc
stc
push
push
flds
js
jecxz
pop
aaa
in
clc
push
outsl
cmp
jge
pop
cmp
test
aaa
push
xchg
add
add
cmp
adc
aaa
lcall
jg
clc
cmp
inc
inc
dec
dec
add
int
ret
mov
jle
jns
daa
or
add
push
jae
push
andl
dec
or
insl
cmp
inc
mov
call
fnstenv
ficoml
out
mov
je
aad
add
dec
adc
add
add
add
jo
jle
jo
add
xor
data16
xchg
jl
cld
pusha
push
adc
in
adc
je
gs
inc
icebp
sar
xchg
fmul
mov
leave
push
add
and
pop
outsl
and
adc
pop
xchg
mov
add
lods
cmp
mov
and
fs
add
aad
in
add
add
add
or
xchg
jo
rolb
push
mov
or
add
inc
out
and
mov
cld
out
push
roll
rolb
sahf
mov
jno
ds
jb
addr16
ret
cs
push
out
daa
lretw
pop
dec
push
int3
add
push
repz
mov
lret
add
xchg
addl
ja
add
add
add
xlat
dec
sub
or
cmp
cli
jp
mov
daa
add
adc
xchg
pop
dec
jecxz
dec
mov
jmp
cmc
int
inc
movsl
mov
mov
nop
loope
add
and
clc
lahf
ja
pop
and
daa
shrd
sbb
push
jmp
inc
lods
cmpsl
add
add
add
mov
gs
xlat
pop
mov
push
or
push
negl
push
or
push
cmovb
ret
push
or
test
movl
pusha
sti
arpl
dec
xlat
xor
test
test
hlt
push
sub
or
or
add
add
in
in
mov
out
pop
pusha
push
in
nop
shl
pusha
aaa
inc
rclb
sub
lods
push
push
add
ffreep
insl
ss
das
lcall
fucomip
call
xor
dec
or
push
dec
insb
je
and
xchg
addr16
sbb
pop
enter
xchg
push
pop
rcll
xchg
jo
aas
add
add
add
lods
cmc
fisubs
or
pop
aas
mov
scas
and
xchg
cs
inc
subl
adc
unpcklps
jns
or
add
cmc
cld
inc
sbb
cmp
test
and
dec
cmp
test
and
loope
jecxz
mov
bound
add
pop
mov
stos
bound
pop
sahf
lret
xor
bound
add
shlb
bound
push
fcmovnb
outsb
in
idivl
mov
out
add
pop
mov
lret
fmuls
jae
cmp
xchg
pop
lret
sarb
ficoml
jne
mov
popa
lock
mov
cwtl
lods
xchg
lret
add
add
add
add
xor
push
or
lret
jle
sub
xchg
pop
and
jp
and
push
inc
sub
pusha
fldl2t
loopne
test
jns
and
xchg
outsl
jnp
and
mov
call
mov
arpl
cmovs
jl
pusha
add
pop
andl
mov
movsl
cwtl
mov
or
insb
or
jmp
pop
je
add
add
add
dec
add
fsin
push
dec
push
jne
lret
fadds
pop
and
js
int3
call
push
fstpt
add
ja
gs
add
adc
sub
daa
lea
lods
add
pushf
scas
inc
int3
adc
lea
push
stos
push
testb
add
je
inc
shll
jmp
add
add
add
mull
add
stc
das
adc
add
add
mov
xlat
outsb
dec
add
push
adc
xor
clc
repnz
std
inc
xchg
xor
dec
mov
add
add
insl
and
and
insl
and
and
add
inc
in
lds
cmp
add
add
and
aad
xor
das
and
aad
adc
scas
and
jne
scas
and
mov
aad
or
jecxz
and
dec
jecxz
and
add
outsl
pop
mov
and
stc
push
push
push
shll
mov
pop
pusha
inc
bound
dec
push
lods
mov
push
mov
push
insb
add
add
add
adc
cli
adc
push
push
adc
cli
adc
mov
adc
pop
inc
jno
sbb
xchg
pop
dec
mov
repz
shll
bound
roll
dec
fbstp
and
adcb
jle
and
fildl
lret
add
mov
adc
mov
adc
pop
mov
rclb
pop
and
add
add
add
into
sub
stos
scas
mov
lods
cmp
lret
into
and
pop
xchg
jmp
loopne
das
fisttpll
sub
cmp
pop
fldl2t
mov
mov
jle
and
sub
mov
popf
adc
add
xchg
or
test
jge
mov
lahf
popa
pop
das
inc
add
add
add
mov
pop
sub
pop
and
movsl
ret
in
cli
push
sub
movsl
movsb
and
clc
xorb
fdivl
fdivs
outsl
push
lock
loope
and
fucom
pcmpeqb
pop
and
xor
out
xor
in
flds
or
mov
sub
je
hlt
dec
add
cld
adc
gs
inc
add
add
add
push
pusha
fcos
inc
pop
adc
sar
je
repz
gs
xor
incl
dec
add
xchg
in
add
fdivr
xchg
outsb
hlt
cld
test
inc
xchg
stc
in
pop
push
fdivl
cmp
xor
xchg
jecxz
and
adc
popa
fldcw
dec
jecxz
or
add
test
add
add
add
out
inc
xchg
lea
hlt
subb
std
in
inc
xchg
shll
xor
inc
fistps
ljmp
out
jnp
pop
insb
std
imul
fnstenv
enter
jo
sarb
nop
xchg
mov
push
pop
and
sahf
mov
data16
data16
insl
lret
add
add
add
icebp
lock
cld
aad
sqrtps
xchg
inc
xchg
pop
cltd
add
jmp
add
mov
add
inc
or
pop
mov
add
mov
mov
loop
out
and
xor
or
jle
fadds
xchg
pop
and
mov
sub
sbb
push
lret
neg
pushf
add
add
add
mov
inc
pop
dec
icebp
ja
das
aam
pop
ja
push
mull
xchg
jnp
shr
lret
jmp
add
pop
mov
jmp
jns
movsb
inc
rcrl
fldcw
or
xchg
xor
int
sub
or
jbe
lcall
stc
xchg
mov
dec
testl
mov
add
add
add
aam
add
int3
inc
mov
and
push
test
cmp
std
or
or
mov
xlat
jne
dec
fdivs
jecxz
cld
jmp
fstps
lds
add
cmp
inc
mov
pop
push
and
add
add
cs
je
jecxz
adc
dec
sub
add
lds
lret
add
jmp
jecxz
adc
imul
lcall
das
inc
xchg
outsb
fistps
pop
and
add
js
jae
xchg
push
call
or
cmp
femms
fldt
pop
xor
push
pop
cld
imulb
adc
mov
fwait
cld
bound
mov
pop
movsb
and
add
add
add
jmp
push
testb
mov
icebp
push
test
loope
je
dec
cmp
clc
sub
jae
pop
or
fisttpl
movsl
push
jp
push
push
lock
push
cwtl
cmove
shlb
pop
test
test
cwtl
mov
lret
lret
xorb
sbb
lret
xchg
add
add
add
fcomi
push
ret
out
fcmovnu
bound
push
mov
jmp
sti
bound
cltd
fmuls
push
lock
test
lret
dec
fildl
inc
sbbb
mov
cmp
imul
test
or
push
pop
jg
stc
pop
ret
add
ds
neg
mov
add
ds
dec
fld1
push
dec
icebp
mov
mov
mov
mull
mov
arpl
in
cli
loope
jmp
add
add
outsb
andl
add
inc
leave
push
push
stc
xor
cmp
stc
lods
sub
pop
inc
mov
push
int
xor
cmp
movb
sbb
push
das
stc
xchg
jecxz
push
or
insb
add
add
add
mov
and
cmp
je
jecxz
mov
mov
xor
add
test
mov
sub
incl
call
push
or
cmp
jmp
add
ret
sbb
inc
add
mov
or
adc
inc
test
sbb
add
add
add
test
pushf
js
dec
fld
xchg
xor
pushf
mov
aas
xchg
enter
pop
xor
push
mov
dec
sub
int
aad
and
xor
xchg
or
dec
xchg
pop
std
es
daa
mov
push
dec
sub
loop
xlat
popa
or
push
out
cmp
push
pop
xchg
movb
add
add
shrl
push
or
in
jns
sub
and
add
fsqrt
pop
cmp
pop
and
sub
pop
das
and
loope
stos
pop
adc
clc
call
das
cmp
xor
pop
xchg
shrb
fwait
push
mov
mov
out
or
jo
fistl
fists
mov
add
add
add
push
inc
add
mov
xchg
into
xchg
pop
leave
pop
in
dec
inc
gs
je
aas
test
xor
pop
cmp
push
push
enter
xor
pop
and
in
das
aad
adc
dec
inc
and
fnstcw
push
pop
shl
jp
pop
jmp
mov
adc
bnd
jmp
or
pop
adc
adc
add
add
add
jne
push
mov
xchg
mov
loopne
lahf
add
or
xchg
mov
add
repz
or
test
mov
jne
and
xchg
add
aam
cmp
adc
mov
pop
or
inc
dec
adc
mov
or
mov
or
daa
mov
add
add
add
push
lahf
fildl
and
mov
divb
or
idivl
andb
add
jle
imul
cmp
mov
mov
pushf
scas
cmp
icebp
adc
adc
cmp
xor
lcall
out
lock
lock
dec
sbb
xchg
lods
je
mov
add
add
add
icebp
push
xchg
adc
cmp
sbb
mov
jbe
cld
xchg
jno
rolb
pop
cmpb
jo
addr16
jo
mov
pop
sub
jl
jecxz
loope
pop
lds
mov
or
cmc
mov
pop
movsb
clc
xchg
insb
pop
sub
aad
jmp
xchg
fs
add
add
add
pop
push
mov
pop
mov
jle
and
or
or
imul
xchg
mov
sahf
mov
push
sbbb
fsubrp
adc
add
pusha
jo
xchg
pop
notb
int3
fisubrs
addr16
lret
add
pop
lret
push
push
xchg
add
pop
imul
sbb
add
aad
mov
mov
sbbl
inc
jge
cs
xor
test
rcll
bound
mov
and
sub
sub
pop
mov
cld
pop
inc
lods
shrl
fwait
je
pop
xorb
loope
adc
pop
int3
test
dec
fldenv
xchg
mov
cmp
mov
sbb
ret
inc
add
add
add
and
and
xchg
fucomip
jmp
fisttpll
push
out
lods
push
stos
ds
call
fsubl
and
pop
stos
lcall
addr16
incl
push
ret
push
adc
das
sub
push
xlat
out
mov
mov
jl
mov
in
call
fbstp
push
xchg
outsl
mov
scas
xor
enter
clc
ss
xor
add
add
add
xchg
je
test
pop
sbb
cmc
ret
dec
imul
andl
add
inc
in
scas
inc
loopne
scas
inc
fcoms
jge
outsl
pop
add
clc
or
jne
scas
push
clc
scas
cmp
push
xchg
cmc
enter
and
mov
or
lret
jo
test
into
aas
add
add
add
xchg
loope
std
adc
jmp
add
xlat
lcall
hlt
xchg
shl
cmpsb
in
inc
or
mov
push
imul
sub
psrlw
rcr
jl
add
in
adc
divb
fabs
sti
or
jmp
pushl
fnstenv
xchg
add
cld
movsb
sbb
pop
add
add
add
mov
orl
xchg
addb
mov
int3
add
inc
sbb
sar
lret
and
aas
xchg
testl
push
int3
add
inc
xor
pop
inc
lds
pop
and
or
cld
jge
fimuls
adc
push
in
shrl
push
lret
add
dec
iret
jmp
or
addl
add
add
add
xchg
pop
divb
dec
mov
adc
pop
lret
mov
insb
and
jge
and
loope
jo
bound
sahf
repz
ljmp
jmp
mov
sub
out
or
popl
lods
ljmp
push
mov
cmp
stc
aaa
jge
int
add
add
add
mov
in
xchg
incl
mov
or
and
or
add
dec
aad
adc
dec
add
push
and
hlt
jmp
push
cld
jl
lea
push
cmpsb
jmp
insl
xlat
adc
aad
clc
ss
or
add
fdivs
jle
push
add
add
add
push
es
pop
jne
and
clc
add
xor
inc
js
aad
pop
les
and
sub
and
push
faddl
enter
xor
sub
push
dec
pop
and
mov
pop
xchg
lds
push
or
loope
nop
pop
addr16
jne
lds
push
mov
idivb
push
sbb
add
add
add
add
sub
pop
and
xor
aad
inc
pop
fneni(8087
and
pop
int
xchg
pop
and
add
push
dec
xchg
pop
dec
sbbl
into
dec
mov
dec
sbb
add
rcl
add
in
and
add
es
push
cld
lret
add
add
add
mov
add
jle
pop
mov
mov
inc
and
add
cmp
movsl
lods
push
lret
mov
jmp
fcomip
ds
inc
lret
sbbb
in
lret
add
ret
repnz
inc
push
lret
addb
push
aaa
xchg
pop
lret
pop
pop
fcmove
add
xchg
out
xchg
pop
lret
pop
cmc
xchg
add
addb
add
add
aad
and
sbb
cmpsb
gs
and
xchg
xlat
cmpsb
movsl
jbe
jae
dec
jmp
mov
xchg
mov
loope
dec
sub
lret
pop
cmpsl
insl
mov
dec
and
ror
dec
adc
pop
dec
mov
mov
add
mov
pop
lods
xor
fcoms
and
cmpsb
in
fldenv
mov
lods
sub
inc
dec
in
add
add
add
inc
push
add
mov
sub
mov
insl
shl
sub
xor
mov
fdivr
adc
addr16
jecxz
sub
mov
add
or
jne
xchg
adc
push
or
pop
and
and
pushl
push
jle
mov
jg
or
inc
out
lahf
add
or
jae
mov
add
add
shll
mov
or
xor
and
jnp
and
movsb
notb
push
repz
sub
inc
add
push
xchg
test
pop
push
sbb
imul
into
and
mov
scas
repnz
xchg
arpl
mov
or
out
out
add
cmc
or
add
out
hlt
jb
add
add
add
sbb
ja
mov
and
mov
cs
rclb
cmp
nop
cs
pop
sbb
xchg
xchg
cld
jb
insl
sub
sbb
or
adc
sub
inc
insb
jmp
nop
inc
push
sub
mov
adc
add
or
dec
ret
add
dec
xlat
and
pop
iret
lock
out
xchg
ret
clc
push
mov
add
add
add
inc
shlb
fstps
ret
push
xor
mov
flds
cmp
adc
inc
xchg
pop
inc
cmp
inc
xor
mov
lret
iret
pushf
inc
dec
daa
fstps
dec
mov
xor
mov
inc
rolb
xchg
lret
fstp
push
dec
mov
fiadds
adc
and
add
iret
loope
in
xchg
xchg
adc
outsl
mov
mov
pop
out
mov
fdivr
sbb
and
fists
nop
sti
push
inc
into
fucom
not
cmpsl
adc
insb
int3
adc
daa
mov
loope
push
or
push
cli
pop
lds
mov
test
xchg
ret
iret
mov
cmp
enter
add
add
dec
adc
add
shlb
fimuls
gs
test
scas
inc
xor
dec
add
inc
flds
shll
cmp
mov
push
stos
lock
fmull
mov
aad
xlat
pop
rcll
or
cmp
mov
jne
mov
fdivr
fcmovnu
jbe
mov
add
add
add
jl
mov
rcl
pushl
movsb
idivb
stos
iret
loopne
xlat
call
mov
cld
sbb
cli
adc
ja
or
xchg
mov
mov
ljmp
and
repnz
or
adc
cltd
pop
enter
std
ss
pop
jae
subb
cmp
incl
add
add
add
in
xor
push
cwtl
fs
cs
ljmp
or
ret
jns
add
das
and
mov
leave
dec
mov
lret
mov
jle
adc
inc
inc
lock
mov
add
lret
mov
daa
subl
add
add
push
inc
aas
inc
lds
fbstp
push
decb
add
inc
xchg
mov
fisubl
mov
mov
sbb
dec
push
sbbb
aas
lret
repz
aam
mov
sbb
push
adc
push
adc
sbb
lock
and
push
adc
aad
aas
scas
mov
pop
inc
fldcw
mov
aaa
dec
adc
aas
mov
add
add
xchg
call
outsb
jmp
insl
cmpsb
mov
xor
and
das
flds
inc
add
sub
dec
jge
shl
in
scas
sub
jmp
loopne
cwtl
jmp
pop
negb
in
jne
pop
mov
push
in
mov
push
rclb
add
fcos
iret
or
add
add
rcl
call
mov
push
data16
imulb
inc
outsl
inc
lds
and
scas
cmp
push
je
rcr
sub
call
stos
inc
jo
bound
mov
add
or
jmp
add
outsl
call
clc
add
add
lret
xor
in
clc
or
add
add
add
jmp
mov
and
xchg
jnp
ljmp
xchg
mov
test
fidivrl
sub
shrb
mov
ret
add
xchg
imul
mov
and
add
and
cs
ds
jecxz
xchg
loope
dec
mov
add
add
add
add
fwait
add
nop
cs
decl
fbstp
xchg
stos
fwait
and
cs
out
pop
aaa
add
ja
test
ficoml
add
sub
add
pop
mov
add
push
jge
sbb
into
sub
jecxz
add
ret
push
hlt
add
orl
int
xchg
mov
and
js
mov
mov
inc
pop
lret
jbe
jecxz
fstl
out
xchg
and
lret
jl
jecxz
push
aad
nop
mov
mov
int
xchg
mov
rclb
jmp
cmp
dec
and
cli
loope
adc
push
xchg
dec
and
add
add
add
sub
ftst
int3
je
out
shll
nop
std
aaa
nop
pop
or
fisttps
loop
imul
punpckldq
out
xchg
shll
call
add
das
icebp
and
mov
sbb
fs
mov
add
add
shll
and
cmp
mov
int3
pop
sldt
add
add
sub
add
cmp
sbb
push
dec
add
adc
and
adc
cmp
mov
je
scas
mov
cmpsl
popa
jle
mov
rcrb
stos
imul
push
es
adc
int3
pop
in
push
add
adc
shlb
add
cmp
ret
rolb
sub
out
nopl
dec
inc
mov
lea
nop
or
insb
cmp
xchg
das
bound
popf
push
mov
call
mov
or
add
sub
add
pop
mov
sbb
add
mov
das
mull
mov
lods
add
mov
and
xchg
leave
jge
int
aad
in
cmp
add
add
outsl
sub
xchg
mov
pop
inc
insl
dec
pop
outsl
test
into
dec
pusha
cmp
movsl
clc
inc
fdivs
inc
test
out
mov
movsl
lock
aaa
jmp
or
cmpsl
mov
cmc
sbb
cli
add
mov
rcr
mov
pop
orl
in
or
jns
jecxz
add
add
add
add
or
mov
add
cmp
js
push
std
push
push
or
cltd
xor
push
std
push
push
or
jns
and
les
arpl
and
int3
mov
sbb
push
dec
cmc
mov
sub
cmp
cs
inc
xor
adc
sbb
mov
cmp
adc
outsb
xchg
add
add
add
cmp
incl
shrb
sub
test
jecxz
and
imul
fldl2t
pop
mov
xor
and
and
sbb
js
xlat
xsaveopt
inc
and
test
adc
mov
and
insl
inc
fmuls
xor
sbb
add
add
or
push
ss
sub
mov
add
jmp
test
jmp
and
ret
pop
adc
daa
add
je
dec
sbb
cmp
stos
pop
xchg
sub
arpl
mov
xor
cmp
push
sbb
stos
sbb
dec
loope
imul
jmp
add
xchg
jno
inc
xchg
std
fldcw
jo
movsl
or
sbb
daa
stos
loop
xchg
add
push
or
sub
pop
lret
mov
and
or
sbb
or
xchg
loopne
lea
jle
mov
xor
inc
add
xchg
or
cmc
add
std
or
incl
rcll
add
add
or
rcrl
or
add
sti
mov
sbbb
bound
fisttpll
push
dec
imul
dec
inc
or
xor
adc
inc
enter
shrb
int
inc
jmp
mov
lock
mov
lea
add
push
jmp
mov
cmp
pop
lock
cmc
jmp
aad
sar
and
cmp
xor
adc
push
mov
icebp
inc
sar
and
cmc
shrb
lock
ljmp
int3
int
jle
or
in
jge
or
stc
lds
add
add
add
addl
fs
add
out
pusha
out
and
adc
into
andb
xorb
xor
pop
test
les
das
add
lret
negl
mov
jno
mov
add
mov
push
mov
add
inc
mov
lods
inc
adc
shll
add
add
add
pop
and
push
mov
inc
mov
and
or
insl
mov
sbb
ljmp
loopne
xor
add
push
int3
xor
mov
sbb
cwtl
dec
sbb
xchg
sub
lret
sub
sub
inc
adc
cld
fisttpll
xchg
inc
in
inc
leave
xchg
add
add
add
dec
stc
xchg
inc
test
addr16
std
sbb
lret
pop
xchg
icebp
loopne
imul
loopne
leave
sbb
shlb
jmp
jne
shr
mov
mov
and
loopne
movsl
loop
and
pop
inc
jne
and
dec
dec
fnstsw
mov
lret
pop
add
enter
mov
jmp
sub
add
add
add
pop
adc
data16
cli
pop
mov
push
mov
jmp
cmp
jmp
rcll
out
ss
sub
pop
inc
enter
enter
pop
sbb
or
inc
inc
dec
adc
stc
push
jmp
mov
jl
out
xchg
add
or
inc
push
jmp
add
int3
fdivp
push
sbb
mov
add
add
add
addb
add
imul
mov
xor
sub
xchg
or
dec
in
call
dec
pop
sub
mov
pop
lods
ljmp
jae
out
sbb
in
pop
inc
in
push
ds
inc
cmpsb
xor
inc
xchg
aaa
lahf
sub
add
add
add
icebp
fdivrs
div
fcomps
mov
fcomps
xchg
xor
les
pop
aam
je
hlt
daa
add
leave
lock
incl
pop
add
pop
mov
fucomi
sbb
and
repz
add
sub
lds
sbbl
sbb
push
dec
sub
aas
add
add
add
lret
rclb
inc
xchg
pop
sbb
xchg
push
sub
push
lods
push
push
movsb
les
adc
cmp
add
and
push
addr16
adc
rcrl
fcomps
sbb
xchg
inc
roll
add
cld
lret
ss
call
add
cmpsl
cwtl
and
add
add
add
push
outsl
orl
mov
and
gs
ret
dec
sahf
movsb
test
and
inc
push
mov
and
pop
and
cmp
out
jnp
andb
test
fdivs
pop
lret
mov
orb
xchg
mov
aad
into
lret
pop
pop
or
fsubp
add
add
add
movnti
in
les
adc
lods
adc
mov
xchg
push
mov
mov
or
cwtl
ret
out
lret
shlb
call
movsb
ficomps
xchg
dec
test
pop
out
jb
into
or
in
lods
push
adc
jecxz
mov
cli
in
rol
xor
scas
or
fmuls
add
add
add
sti
mov
mov
mov
lods
movsl
call
call
or
clc
adc
pop
jmp
pop
cmpsl
dec
xchg
jle
or
jno
and
pop
xor
pop
stos
pop
and
mov
call
adc
dec
lds
mov
sbb
fisubrl
cmpsl
mov
sub
add
add
add
add
arpl
call
ret
add
in
jmp
mov
add
mov
sbb
mov
sti
xor
jecxz
pop
push
and
and
xor
stos
shll
mov
lret
add
pop
pushf
das
aas
mov
dec
push
mov
add
jl
inc
xor
cmp
add
add
add
lods
pop
pop
pop
pop
add
das
fdivrl
push
and
jle
and
jle
and
jle
and
xor
jl
fs
xor
mov
iret
inc
xchg
loope
or
mov
and
jecxz
andl
mov
mov
leave
xchg
out
ret
adc
movsl
and
mov
add
push
cmpsb
in
fnsave
lods
pop
mov
jmp
and
jmp
and
aaa
or
cmp
dec
insl
pop
int
and
or
ret
pop
dec
in
or
mov
push
xlat
mov
xor
add
rcrl
fcoms
shll
loopne
rcrl
fdivrs
push
mov
jb
xchg
mov
jg
filds
add
add
add
adc
add
pushf
cli
fdivr
pop
data16
outsl
stc
push
inc
mov
aad
insb
push
xlat
shrl
cmp
in
push
mov
jecxz
mov
jecxz
mov
jecxz
mov
jecxz
mov
jecxz
sub
xor
out
pop
and
xor
lods
or
out
and
xor
das
jmp
sbb
ljmp
add
xchg
dec
stos
movsl
mov
mov
sbb
test
les
sub
pop
inc
dec
out
jb
jo
in
out
in
sub
adc
cmp
pusha
or
jno
int3
or
stos
cmp
inc
pusha
lods
cmp
out
jecxz
add
add
add
add
inc
inc
pusha
fmuls
movsb
sar
pop
and
add
push
sub
inc
xchg
daa
xor
dec
jbe
jle
and
jle
and
fisubrs
mov
inc
xor
sbbb
add
les
xor
add
and
pop
cmp
cmp
outsl
and
rcrl
cmp
add
add
add
add
int3
lret
or
shll
add
xor
jl
dec
and
jg
dec
das
add
pop
push
mov
mov
inc
adc
jae
inc
pop
iret
sbb
rcrl
pop
add
inc
cmp
cmpsl
das
imul
adc
inc
imul
mov
add
add
add
lret
das
or
lret
daa
jbe
lret
aaa
outsb
mov
or
pop
xor
cld
lds
mov
pop
out
cmp
fwait
out
sub
or
xor
jmp
push
lret
fsubrp
push
lret
es
xchg
scas
xchg
iret
add
lret
movsb
inc
mov
int
into
and
add
add
sbb
or
out
adc
xchg
lret
in
test
inc
mov
mov
int3
es
test
xchg
mov
rorl
dec
and
pop
mov
sbb
jno
movsb
add
stc
call
jno
pop
jecxz
dec
fdivr
bound
lea
add
add
add
aad
pusha
add
int
js
sbb
stos
in
mov
and
icebp
call
fbstp
call
stos
xchg
mov
adc
push
xor
ja
and
jmp
or
call
mov
fs
adc
add
xor
cmp
and
repz
test
add
add
add
pushf
das
xor
cmp
pop
and
xor
ret
pop
adc
add
jne
inc
sbb
aam
stos
pop
pushf
imull
mov
sub
mov
cmp
add
xor
call
xor
or
dec
add
inc
pop
test
lds
in
and
dec
add
add
add
xchg
adc
jnp
cmpsb
fwait
and
xchg
xchg
and
in
lret
pop
or
lret
punpckhdq
sub
inc
push
inc
sbb
lret
jle
xchg
jecxz
mov
outsl
mov
ljmp
int
test
pop
or
movups
push
xchg
stos
mov
cmp
movsb
jle
xchg
andl
xchg
push
je
dec
add
add
add
rclb
cmp
xor
jg
dec
in
decl
pop
aas
call
aad
es
loope
mov
push
cmpsl
xchg
or
mov
inc
jl
dec
inc
lea
lds
or
jns
jmp
sub
cmovg
cmp
lret
ficoms
or
add
xchg
nop
mul
scas
mov
add
add
add
push
jmp
jmp
mov
bnd
jmp
jp
jmp
jp
jmp
add
popl
out
mov
mov
mov
lods
fwait
es
call
sbb
mov
fadd
incl
or
bnd
hlt
stc
in
jb
in
jb
in
bound
jae
loope
adc
add
add
add
sub
sub
and
jbe
sar
mov
xchg
and
nop
pop
stos
mov
cld
stos
popf
imul
stos
sbb
mov
sub
and
cmp
jmp
sub
jbe
adc
push
and
mov
arpl
add
pop
loope
add
push
cmpsl
sahf
push
and
pushf
pop
and
add
add
add
pop
and
push
out
ljmp
add
inc
add
and
pushf
pop
and
das
rorb
jge
and
clc
sahf
pop
and
pushf
pop
and
sahf
pop
and
aaa
lods
pop
xchg
push
or
jno
add
inc
and
sahf
int
cld
daa
sbb
hlt
daa
or
call
cld
rorl
roll
jmp
add
add
add
mov
add
cmp
xchg
mov
ret
and
or
lods
or
dec
jne
pop
dec
insl
in
push
jne
pop
inc
insl
sub
jne
aaa
mov
aad
stc
or
in
ret
daa
adc
sbb
dec
inc
mov
movsl
push
push
inc
mov
in
ret
cmpsl
jecxz
jns
jecxz
jge
loop
into
xchg
xchg
and
jecxz
add
add
add
popf
das
arpl
cmpsl
add
lret
fsubp
and
inc
cmp
push
mov
ficomps
mov
dec
push
mov
flds
loop
inc
adc
push
mov
mov
push
fbld
fwait
out
xchg
sahf
lea
xchg
inc
pop
loopne
pop
divb
sbb
ficomps
or
add
add
jbe
es
xchg
xchg
shr
jecxz
mov
xchg
or
dec
or
cltd
and
mov
scas
sub
xor
out
add
test
stos
lods
mov
lods
popf
mov
loop
outsb
clc
and
add
adc
jmp
push
push
or
lea
xor
sbb
or
add
xchg
xor
movsl
dec
jecxz
sbb
mov
test
imull
orl
jo
xchg
inc
pusha
add
xchg
cs
cmc
and
mov
lods
adc
cmp
je
inc
lods
dec
int3
sub
je
sbb
je
xor
lods
xchg
out
add
out
dec
and
fwait
addr16
out
dec
and
add
add
add
dec
and
leave
add
out
dec
and
lcall
mov
mov
ds
mov
rorl
jbe
test
push
and
mov
cmp
mov
mov
or
jmp
outsb
pop
inc
insl
enter
fisttpl
sbb
pop
sbb
inc
add
add
add
adc
xor
test
pop
dec
mov
enter
add
jle
fistps
movsl
bound
insl
cwtl
sarl
push
movsl
mov
andl
xor
push
rcrl
xchg
repz
inc
insl
push
es
bound
pop
clc
arpl
cmp
xchg
add
inc
pop
daa
adc
aaa
lret
xlat
int
add
add
add
push
mov
adc
sub
or
les
in
iret
bnd
add
addr16
or
lahf
xchg
nop
xchg
shl
xchg
xchg
out
cmpsl
sarl
mov
adcb
jnp
movl
sbb
or
inc
xchg
nop
add
testl
jb
leave
jge
sbb
incl
add
add
add
lret
rorb
subb
vprotw
pop
hlt
test
fimuls
pop
jmp
mov
test
in
pop
sub
sbb
sub
in
bound
jnp
and
fs
stos
movsl
dec
jmp
lods
mov
xchg
mov
sbb
add
add
add
mov
sbb
or
sub
mov
or
ljmp
loopne
fnsave
add
and
dec
add
inc
jno
add
and
xchg
mov
test
movsl
dec
mov
pop
or
out
es
pop
daa
scas
add
add
add
test
lahf
pop
and
aas
loopne
pop
les
mov
sbb
mov
jge
pop
aas
inc
loope
je
adc
mov
mov
mov
add
data16
test
movsl
mov
test
sub
mov
dec
xchg
les
mov
shrb
sub
insl
push
and
iret
mov
add
add
add
and
sahf
cltd
or
imul
cmp
cs
andb
lret
clc
pop
pop
inc
mov
lret
sub
aam
mov
stc
pop
add
jmp
fldcw
sbbl
int3
add
enter
mov
into
mov
in
jg
inc
rolb
add
add
mov
inc
mov
mov
push
enter
dec
pushf
pop
or
or
mov
pushf
pop
add
faddl
enter
shlb
inc
mov
mov
rorl
or
fmulp
sbb
es
pop
push
mov
repnz
or
adc
aas
and
out
arpl
add
add
add
imul
add
dec
ljmp
mov
std
notb
iret
and
stos
lcall
mov
and
jmp
stos
movsl
mov
fcom
scas
sti
arpl
pop
xchg
incl
push
mov
or
jmp
jbe
icebp
loopne
in
xchg
pop
mov
call
dec
cs
call
add
xchg
pop
movsb
loopne
cwtl
imul
out
fadds
push
out
inc
xor
add
inc
dec
push
sbb
jnp
lods
inc
or
lcall
popa
lods
add
pop
sbb
in
jns
inc
int3
pop
movsb
shr
insl
and
jp
add
add
hlt
jbe
loopne
ja
mov
fnstenv
mov
fmull
add
add
add
das
mov
jmp
divl
mov
or
and
xor
jae
andl
enter
dec
add
or
loop
push
adc
cmp
add
or
in
cmp
insl
out
jl
std
xchg
mov
lret
adc
and
jle
sub
inc
xchg
mov
add
add
shr
cmpsb
push
insl
or
enter
xchg
faddl
shrb
or
stos
repz
mov
cmpsl
push
lods
dec
test
mov
mov
push
loope
data16
pop
call
cltd
test
popa
mov
jmp
cmpsb
testl
or
test
push
enter
movb
add
add
push
test
out
int3
hlt
or
xchg
decb
jnp
sub
stos
jle
mov
jle
sub
push
push
test
rcll
enter
mov
mov
movsb
out
scas
cmp
pop
mov
out
add
loope
push
out
adc
mov
and
outsb
fidivs
iret
pop
shl
ja
int
sbb
out
add
add
add
sahf
fwait
cld
xchg
fwait
incl
fwait
incl
jle
shrl
cmpsb
or
stos
xor
sbb
out
xchg
fwait
pushl
fwait
mov
pop
and
pop
sbb
stos
lods
scas
cmc
sahf
cmp
adc
movsl
mov
lods
xchg
scas
add
stos
add
mov
clc
mov
push
lahf
jle
add
add
add
add
add
add
push
mov
and
les
xor
sar
stc
cwtl
add
inc
xchg
add
and
pop
cmp
and
pop
dec
pop
xchg
add
cmp
xorl
adc
arpl
movsb
idivb
add
ds
jg
add
jge
or
add
add
add
aaa
cld
sub
xor
or
ja
xchg
push
and
pop
loope
cmp
dec
cs
or
xchg
push
push
cmp
stos
inc
popf
into
test
jne
stos
int
leave
ljmp
xor
fimuls
adc
sub
repnz
adc
fisttps
xchg
insb
mov
sub
add
dec
sub
and
add
xchg
stos
inc
xchg
lods
lcall
popa
daa
mov
xchg
lds
in
add
rolb
jbe
addb
in
adc
xchg
movsl
xchg
inc
loop
adc
aad
lret
pop
xor
lret
add
lock
pop
lret
add
loope
sbb
xchg
out
pop
xchg
pop
xchg
add
add
add
add
pop
mov
inc
pop
loopne
push
lret
add
jecxz
mov
testb
jecxz
mov
cmp
iret
push
jp
dec
loop
mov
inc
dec
test
addb
mov
cmpsb
xchg
stos
mov
stos
or
scas
jb
xor
pop
mov
fldz
ret
mov
daa
mov
add
rol
stos
das
popa
andb
lds
int
pop
sbb
and
rorl
lds
insb
rclb
fcomp
stos
cli
out
stc
rorb
in
mov
pop
mov
mov
fldenv
lcall
xor
jmp
test
flds
stos
imull
pop
push
and
xor
jbe
add
add
add
jge
xor
repnz
adc
or
or
stos
dec
inc
loope
or
or
or
or
or
or
mov
mov
je
je
xor
or
jnp
mov
mov
mov
repz
jnp
push
leave
leave
adc
xor
add
add
add
data16
and
push
sub
sub
mov
loop
fisttps
or
aaa
push
or
pop
mov
stc
adc
xchg
imul
pop
jb
push
sbb
cmpsb
into
jns
jmp
je
into
and
xchg
icebp
pop
pop
out
xchg
push
fsubs
in
and
and
sub
in
in
out
fadd
enter
not
mov
xchg
xchg
add
add
add
popf
cld
fsubl
sbb
xchg
push
lea
cmp
aas
sbb
adc
insl
fmul
add
dec
add
add
mov
inc
jb
out
or
jle
sti
aas
insl
mov
lret
xchg
jecxz
xchg
jecxz
mov
jecxz
mov
add
add
mov
out
sbb
add
add
add
add
repnz
jecxz
popf
fildll
ret
popf
mov
cli
dec
dec
add
inc
add
pop
lret
popf
mov
dec
add
lods
fsubrp
or
ss
call
sbb
je
add
add
shl
add
xchg
pop
and
loop
lods
lods
mov
dec
jecxz
test
and
ret
int3
xchg
or
jmp
add
aad
xor
int
icebp
inc
adc
adcl
loope
aaa
jl
sbb
call
into
fdivs
cmp
sub
subb
fucomip
testb
sub
and
cmp
push
add
add
add
sub
push
and
js
mov
sbb
das
add
std
es
add
add
add
jp
jb
xor
test
or
push
std
lods
test
add
scas
push
inc
dec
mov
push
pop
mov
pmuludq
fdivs
xorb
mov
lret
sbb
mov
mov
lfs
add
hlt
dec
and
repnz
or
adcl
xchg
test
push
ja
push
or
push
data16
add
add
or
ret
jae
movsl
xchg
or
filds
mov
cmp
call
mov
and
push
movsl
popa
mov
mov
xor
xchg
and
jecxz
fstl
add
push
add
or
mov
add
xchg
dec
and
push
and
jmp
mov
daa
xor
add
add
add
mov
add
out
inc
mov
adc
pop
shll
fldz
sarl
lret
add
adc
out
or
add
mov
lret
inc
sarb
add
add
in
into
pop
dec
adc
or
rclb
or
insb
or
add
jle
mov
add
add
add
lret
push
mov
jb
cli
adc
repnz
adc
pop
lret
mov
frstor
push
pop
adc
cmp
jmp
jb
jmp
jmp
mov
out
es
xchg
push
jae
fiadds
add
xchg
mov
inc
xchg
mov
call
bound
jmp
add
popa
push
add
xchg
adc
in
pop
and
shrl
jmp
pop
and
xchg
jno
mov
pop
ds
fs
stc
adc
lods
dec
cmp
add
subb
nop
cmc
jg
add
test
xchg
xchg
mov
adcl
movsb
int
sti
sbb
cmpsb
adc
mov
popw
into
mov
mov
test
call
add
pop
pop
xlat
ljmp
adc
mov
mov
xchg
and
add
stos
inc
mov
sbb
test
daa
and
jge
addr16
and
add
adc
sarb
adc
xchg
jno
or
cmp
pop
or
int3
sbb
push
je
push
lahf
inc
lods
add
inc
or
int3
push
add
add
add
mov
lret
sbb
mov
adc
out
and
or
insl
jl
add
and
scas
add
push
push
out
push
push
jne
out
test
ss
mov
and
in
lcall
sbb
mov
and
push
std
mov
or
cmp
lds
pop
lret
popf
add
add
add
nop
pop
es
xchg
mov
add
or
dec
ret
add
inc
push
xchg
pop
lret
mov
xchg
pop
imul
push
mov
mov
add
or
add
jno
stos
dec
xchg
mov
inc
nop
or
mov
enter
or
add
push
fistpll
add
add
add
lock
xchg
push
cmp
and
inc
add
mov
ret
aad
sub
bound
insl
call
rolb
and
stos
pusha
pop
call
lahf
adc
fists
jnp
jmp
pop
fldcw
xchg
mov
ficoms
xor
jmp
rorl
outsl
in
add
add
add
sbb
lret
mov
add
push
test
inc
push
rclb
es
scas
out
pop
xchg
pop
mov
add
and
jns
add
xor
push
lods
cltd
inc
test
and
aas
jmp
push
lret
jle
add
add
lds
inc
mov
add
test
lcall
add
add
add
mov
jmp
loop
or
add
jb
push
sbb
inc
push
or
pop
jl
pop
add
test
jl
int
inc
xchg
fwait
sub
add
scas
xabort
and
repnz
icebp
mov
jmp
stos
ljmp
lcall
xorb
ljmp
add
add
add
adc
pop
xchg
out
and
dec
xor
daa
lcall
imul
and
lods
iret
jae
add
jg
out
fdivr
mov
mov
and
in
and
cmp
out
and
inc
stos
shlb
gs
and
in
and
loope
rclb
hlt
js
pop
fwait
js
add
out
mov
add
add
add
outsb
lea
out
out
xchg
push
sub
jae
popf
sbb
cltd
xchg
xchg
dec
out
pop
lret
add
shl
mov
pop
lret
xchg
aas
xchg
pop
lret
subl
lret
js
sub
xchg
pop
shlb
movups
mov
repz
in
add
or
addl
xchg
inc
repnz
add
add
add
shl
sub
ret
std
mov
xchg
outsl
fs
imul
add
addr16
fsubrs
or
jl
pop
and
aam
add
and
gs
xor
dec
push
inc
add
or
sub
or
sbb
jmp
pop
jmp
cmpsl
jae
sub
push
add
rorb
dec
in
lock
add
add
mov
aas
fisttpl
dec
stos
mov
push
dec
add
out
rorb
add
mov
xor
cld
and
dec
or
movl
sub
and
cltd
pmovmskb
mov
fcoms
out
cmp
fdivr
jl
daa
test
popf
and
xorb
add
add
add
out
mov
dec
daa
test
and
pop
pusha
and
add
rcll
sub
and
pusha
xchg
imul
pop
fnsave
push
dec
pop
mov
lcall
arpl
adc
jns
inc
les
decl
gs
xchg
shll
jmp
mov
add
add
add
dec
ror
iret
mov
add
std
xchg
out
xlat
movl
cwtl
xlat
or
outsl
add
out
and
mov
or
push
js
jae
xchg
fisttps
pop
jmp
dec
or
or
inc
xchg
cld
lret
rorl
and
adc
jge
xor
daa
out
in
add
add
add
add
sbb
mov
mov
add
mov
pop
loopne
or
add
push
daa
in
popa
into
add
sbb
jmp
add
add
pop
mov
sbb
add
dec
xlat
jle
or
xchg
pop
lret
sbb
add
sbb
mov
mov
pop
lret
mov
fadd
add
add
add
shlb
jmp
leave
out
xchg
xchg
pop
mov
jmp
add
and
bound
fs
inc
bound
pop
mov
lods
push
pop
sbb
push
add
stc
push
pop
sbb
add
push
xor
ss
icebp
pop
sub
js
add
mov
je
shrb
inc
test
es
loope
jl
pop
add
add
add
xchg
push
loop
je
dec
add
sbb
xchg
scas
cwtl
call
push
add
filds
and
push
out
add
xlat
adc
cmp
leave
nop
leave
flds
cmp
call
ret
mov
flds
cmp
jne
aas
add
or
xor
jg
add
add
add
xlat
pop
sahf
mov
andl
xor
cmpsl
jle
test
mov
xchg
out
pop
rolb
xor
sbb
jge
mov
sub
jle
mov
jg
mov
or
in
bound
adc
adc
ud0
ss
pop
cmp
mov
fisubl
insl
in
pop
movb
add
add
fucomip
jecxz
fisubl
pop
push
test
push
dec
ljmp
mov
pop
add
dec
les
sbb
and
sarl
flds
and
int
leave
out
adc
adc
cs
scas
insl
incl
xchg
orl
fdivr
cmp
adc
inc
nop
mov
add
push
int3
add
add
add
enter
add
add
add
xor
cmpsb
push
add
lods
sbb
inc
push
loop
std
inc
mov
popf
jle
jae
cltd
inc
push
mov
add
cmpsl
add
xchg
loop
adcl
or
out
outsb
push
clc
inc
inc
mov
and
imul
fdivr
pop
jl
push
push
lods
cwtl
loope
sahf
xchg
push
es
add
cmp
add
add
add
in
fldenv
test
aam
mov
ret
xchg
sub
addb
jb
jbe
cmp
popa
adc
test
dec
and
xchg
sbb
mull
mov
xchg
fsubl
out
xchg
push
ss
dec
and
jmp
sbb
xor
add
add
add
pop
fwait
or
adc
or
xlat
js
ja
icebp
into
outsb
mov
dec
dec
inc
test
into
je
test
mov
or
push
xlat
or
cmpsb
jecxz
js
xchg
inc
push
dec
and
pusha
or
add
xor
sub
dec
and
sahf
jecxz
push
sub
dec
or
dec
and
jle
jecxz
add
add
add
call
dec
insb
xchg
pop
pusha
dec
sbb
and
nop
ja
add
pop
sub
xorl
xchg
cmpsl
mov
and
pop
or
push
fsubs
xor
pop
sbb
push
sub
ds
and
dec
loop
jp
or
adc
add
and
popa
mov
cmp
add
add
pop
add
or
fildll
add
aaa
in
lcall
or
mov
pusha
or
rcl
out
orl
cmc
jmp
pop
add
mov
mov
clc
aas
cli
inc
or
iret
scas
jnp
add
jle
pop
adc
leave
xchg
lret
add
dec
fists
inc
pop
lret
add
add
add
add
pop
lret
mov
dec
jle
push
in
adc
mov
pop
mov
dec
xchg
hlt
xlat
jnp
inc
lret
mov
mov
js
cmpb
jg
mov
or
jle
xchg
xchg
fisubs
pop
outsl
jle
in
inc
sub
std
and
dec
in
or
rolb
adc
jmp
xlat
repz
or
add
add
je
xchg
pop
and
pop
pop
adc
pop
int3
mov
shlb
jb
sub
mov
push
loope
dec
sub
pop
int
add
repz
or
mov
xchg
fbld
add
fimuls
mov
cmp
xlat
adc
mov
sbb
inc
xchg
sbb
add
jno
and
cld
frstor
mov
or
add
inc
sub
push
and
push
sub
dec
sub
call
push
push
pop
jnp
push
add
cld
pop
jecxz
push
and
popa
ljmp
mov
arpl
orl
add
add
out
outsl
pop
and
call
mov
outsb
mov
add
add
add
lods
jge
imul
xchg
gs
jne
and
or
and
xchg
adc
xor
sub
xchg
loopne
int3
jmp
jne
or
xor
call
or
cmp
push
cld
cmpsl
pop
subl
out
mov
int
fbld
ficompl
addr16
add
add
add
fcos
data16
fcos
push
or
mov
or
push
in
xor
aas
das
pop
dec
cmpsl
sbb
inc
nop
mov
roll
and
jl
jge
pop
cmpb
push
jl
pop
in
daa
dec
lock
lret
add
mov
or
pop
adc
call
xor
mov
sub
mov
add
add
add
int3
add
pop
dec
cmp
xchg
lret
add
ja
lret
or
add
ret
and
xchg
xchg
cmc
popf
mov
call
xchg
lock
icebp
fsubr
mov
ljmp
jl
lds
and
cli
ljmp
shl
fxch
mov
dec
ljmp
int3
push
add
aam
and
xchg
jle
xchg
mov
mov
popa
adc
fsubr
sub
cmpsl
xor
aas
push
jne
xchg
xor
out
sbb
adc
das
int3
aad
jmp
pop
subb
es
arpl
push
adc
push
add
in
cmp
jnp
sub
lods
push
dec
push
lret
and
jle
and
or
add
add
add
popa
in
clc
loop
daa
stc
or
call
daa
cmp
lods
daa
add
jne
add
jmp
pushf
xlat
ljmp
xchg
and
and
push
add
add
jnp
and
nop
inc
popa
jne
pop
test
add
pop
sub
adc
and
mov
push
mov
add
add
add
fstpl
xchg
loopne
mov
loopne
lock
std
push
cmpsb
inc
add
loope
addb
dec
in
ret
xchg
adc
inc
pop
pop
and
or
sub
fbld
adc
outsl
xchg
cmp
dec
shlb
mov
add
inc
dec
sbb
add
add
add
jp
pop
and
lret
add
in
out
pop
mov
testl
in
xchg
pop
cmp
add
in
mov
adc
jo
mov
movsl
push
xor
int
int
insl
setbe
test
xorb
inc
xorb
jae
xchg
pop
dec
stc
subl
xchg
cmpb
movsl
add
add
addb
add
add
add
pop
int3
sub
or
mov
and
test
pop
fisubrl
fbld
mov
push
in
pop
jmp
adc
frstpm(287
xchg
pop
jne
rclb
mov
aaa
std
push
mov
xor
lds
daa
dec
movsl
xchg
fisubrs
pop
sti
sub
in
fsubr
lret
xor
imul
add
add
add
add
call
xchg
in
dec
lock
and
addb
xor
xchg
lea
xchg
push
add
xchg
pop
push
hlt
sbb
push
jae
movsl
add
sub
movsl
shlb
aaa
imul
insb
je
jmp
fldl
and
loop
fdivr
mov
rclb
push
dec
add
xor
sldt
add
add
cli
fstpl
mov
rclb
pop
push
subb
je
mov
adc
push
imul
sub
jmp
mov
adcl
je
inc
inc
ret
lcall
fbld
in
je
mov
fildl
add
stos
xchg
lods
and
add
add
add
add
int3
in
mov
and
std
sti
dec
loopne
add
lods
cmp
movsb
cmp
loope
lods
and
out
cld
push
arpl
or
pop
movsb
mov
outsl
ja
and
ret
xchg
dec
pop
and
call
lods
add
enter
pop
or
popa
jl
and
enter
ds
and
dec
add
add
add
jne
push
inc
jne
mov
inc
adc
movb
call
pop
fs
cmc
decl
inc
daa
sbb
pop
mov
add
and
add
pop
and
inc
loopne
add
inc
lret
mulb
dec
sbb
lds
add
sti
sub
add
add
add
and
dec
lock
adc
add
push
pop
and
xchg
and
xchg
pop
in
push
push
dec
icebp
sub
jb
aaa
std
jbe
divl
data16
lods
fstl
cli
movsb
push
cltd
jne
add
ss
add
xchg
daa
push
stos
adc
daa
lahf
test
popa
in
jae
bound
jl
fcomp
pop
dec
movsl
xchg
filds
add
add
add
xchg
pop
mov
pop
xor
dec
and
js
and
cmp
stc
arpl
arpl
flds
pop
pusha
add
test
inc
jecxz
and
sub
sub
pop
pop
sub
insb
add
adc
sub
xchg
cwtl
pop
cmp
fadds
push
pop
adc
js
jb
sub
gs
bsf
add
add
cmp
mov
sub
scas
push
inc
sub
push
dec
push
or
cmp
lret
or
pop
lret
push
lret
or
add
or
dec
or
imul
jp
lock
rcrl
jbe
and
or
inc
loope
test
add
dec
sbb
jo
push
xchg
jns
mov
in
mov
dec
add
add
add
or
pop
add
pop
inc
pop
lods
add
movsb
pop
or
sahf
gs
and
icebp
or
cld
and
rcrl
sbb
out
and
push
pop
cmp
gs
call
ljmp
ficoms
testb
out
jmp
repz
stc
mov
xor
add
push
inc
sbb
lret
loop
xchg
pop
lea
xchg
xchg
push
sub
cmp
pop
sbb
jle
mov
or
fisttpll
or
pop
lret
jle
divl
dec
in
jle
mov
sti
lea
enter
add
pop
js
sbb
push
dec
mov
mov
sbb
and
sub
add
in
jmp
add
add
add
dec
in
jmp
inc
jno
jb
in
clc
call
nop
mov
pop
jne
dec
pcmpeqb
xchg
mov
sub
movsl
sub
in
jmp
test
push
ffree
int3
bound
mov
push
movsb
sub
fsubr
fisttps
faddp
mov
insb
rorb
int3
jno
jecxz
gs
adc
insb
fldcw
cmp
add
xchg
lcall
sub
mov
je
xor
outsb
sub
and
movsb
das
add
clc
pop
and
movsb
das
cmp
lret
shrb
jb
fiaddl
mov
dec
sbb
test
or
stos
lahf
mov
jmp
xor
test
mov
and
popa
lcall
add
das
and
sbb
cmp
in
sub
in
or
cmp
sub
dec
jp
aam
int
cmp
push
call
and
pop
adc
mov
push
insb
and
addr16
insb
and
jae
jb
push
insb
and
insb
and
gs
and
push
insb
and
jne
mov
add
and
add
add
add
adc
dec
and
lock
dec
mov
pop
push
lods
or
mov
stos
mov
in
stos
mov
jo
sbb
call
addb
rcll
push
sbb
testl
adc
ret
cmp
pusha
sbbl
icebp
out
or
loop
fabs
loope
add
add
add
pop
mov
out
push
xchg
sub
push
sub
push
sub
scas
add
jne
lret
adc
sub
fisttpl
push
fwait
add
inc
cmp
test
cmp
addb
cld
sbb
popf
out
leave
ss
in
sub
insb
add
sti
add
cmp
push
xor
in
add
add
add
cmp
ret
fidivl
sub
arpl
mov
jns
outsl
or
lds
lods
call
fisubs
notb
adc
jmp
adc
mov
or
sbb
fs
loopne
jmp
xchg
sub
loopne
jmp
inc
fistpl
sldt
add
add
lods
sub
sbbl
daa
xor
mov
je
sbb
je
xchg
add
inc
mov
add
test
and
or
inc
mov
mov
test
movsl
rcl
xchg
add
cmp
adc
pop
stos
dec
rorb
mov
adc
add
add
add
adc
stos
push
andb
ret
add
dec
jge
add
cltd
adc
and
xchg
add
jnp
cmc
push
icebp
add
xchg
jl
mov
jno
or
mov
mov
inc
cmpl
outsl
mov
cld
xorb
xlat
hlt
dec
in
add
cmc
add
add
add
add
sbb
and
or
fisttpl
int
xchg
xchg
xchg
pusha
and
shll
xor
mov
ds
dec
mov
pop
cmp
push
sbb
clc
in
mov
fcoml
inc
daa
fmulp
icebp
aad
int
adc
int3
add
ds
cli
adc
lret
mov
xchg
push
inc
fldl
add
add
add
test
lret
pop
cli
sub
lret
add
test
add
dec
iret
fstpt
xlat
aas
icebp
popf
xorl
pop
push
cmp
pop
and
pop
mov
mul
ja
jmp
jecxz
lods
pop
cmp
hlt
jl
jmp
pop
imul
popf
mov
jmp
add
add
add
pop
dec
dec
ret
jb
shrl
lods
xchg
fisubrl
andl
sub
add
in
push
adc
insb
int
jge
insb
pop
lods
mov
jbe
push
out
push
xchg
and
pop
iret
rcrb
dec
lods
add
cli
loop
fwait
mov
movsb
js,pt
sub
jecxz
pop
ds
add
add
add
or
mov
mov
xlat
jg
sti
inc
mov
push
xor
fdivrs
adc
mov
dec
jp
xor
and
adc
repz
arpl
rclb
pop
and
sub
movsb
adc
pop
and
mov
pusha
mov
lcall
or
sbb
or
mov
pop
mov
add
sahf
arpl
incl
out
fildl
sahf
adc
faddp
rcll
or
aam
cmp
cld
inc
and
shl
jbe
fbld
lock
xchg
cld
es
sbb
sub
push
out
in
push
jae
mov
mov
nop
jns
dec
loope
mov
dec
mov
inc
popf
nop
lock
and
add
add
add
shl
sbb
cld
pusha
arpl
inc
cmp
lock
fiaddl
mov
fiaddl
cltd
mov
andb
xor
or
cmp
and
dec
roll
ret
jno
out
cs
lea
out
das
dec
inc
xchg
imul
fildl
outsb
bswap
mov
add
add
add
xchg
out
int3
xor
push
cmc
jp
mov
call
inc
or
adc
idivb
push
adc
pop
lcall
xcrypt-ctr
cmpsl
sbb
loope
pop
mov
adc
stos
mov
mov
jmp
cli
jmp
sub
outsb
push
sub
int
push
int
add
push
jp
aaa
sbbb
add
add
add
imull
mov
fsts
jmp
lods
sub
imull
xchg
mov
sub
fcomp
jmp
stos
cmp
out
aaa
and
xchg
mov
mov
lret
fcompl
sub
pop
lods
push
fnstenv
gs
xor
jb
pop
xor
add
add
add
adc
push
pop
roll
imul
and
popa
je
mov
stc
dec
or
ds
sub
cs
push
pop
sub
and
pop
jmp
cmp
or
fwait
cmp
clc
cmp
or
fidivrl
add
push
out
jp
add
add
dec
jns
add
add
add
cmpsb
test
notl
iret
sbb
and
sbb
and
push
aad
push
arpl
add
mov
nop
loopne
jne
arpl
or
mov
cmp
loop
cld
call
mov
adc
dec
bound
inc
clc
mov
mov
push
push
jp
mov
add
stos
sub
add
add
add
fiadds
push
push
inc
subb
ds
push
inc
lret
mov
mov
adc
cmp
mov
mov
lcall
aaa
mov
nop
xchg
stos
push
roll
dec
dec
mov
ret
aaa
inc
dec
mov
fwait
nop
ret
xor
jmp
jl
xchg
add
add
lret
and
add
add
add
mov
fdivrp
repnz
inc
push
mov
xor
in
lret
mov
and
cli
sub
jmp
nop
in
jmp
ret
aad
cs
xor
aad
pop
and
psrad
adc
in
jno
cmp
lahf
xchg
mov
pop
lods
pop
mov
and
xchg
jle
and
jb
fsubr
minps
jmp
add
mov
pop
lods
pop
xchg
divb
lods
xchg
jbe
sbb
jmp
dec
sbb
jo
sub
rcr
push
arpl
cmp
adcb
daa
inc
out
aas
sbb
cmp
movsl
jmp
stos
mov
and
je
andb
imul
shrl
rcrb
add
push
xlat
je
add
add
add
je
sub
adc
sti
mov
pusha
mov
mov
and
cmp
cmp
mov
out
sbb
data16
jns
and
mul
xor
jnp
loop
push
sbb
adc
jnp
sub
xchg
cmc
push
fisttpll
jae
dec
or
ljmp
pop
and
or
je
xchg
shlb
sbb
or
add
add
add
adc
jno
jp
xor
sbb
or
ds
cs
lahf
ret
xchg
popf
lahf
jmp
or
push
outsb
loope
add
or
aad
cmpsl
out
or
scas
jae
clc
ret
into
add
sbb
sarb
and
mov
lahf
int3
push
or
inc
mov
lret
lock
add
cmp
add
add
test
xor
subb
xchg
jle
mov
repz
add
into
ror
lds
fiaddl
shr
pop
inc
pop
or
mov
test
sub
jmp
mov
les
and
xchg
shrb
sti
xor
dec
out
roll
mov
and
jnp
rorb
mov
jle
daa
insl
test
add
add
push
arpl
nop
push
and
or
add
or
push
fisubs
adc
add
fwait
push
and
pushf
sbbb
jle
jb
mov
stos
sub
cld
frstor
jmp
sbb
push
sub
adc
jb,pn
sub
jb
sub
xchg
and
gs
jo
sub
pop
push
adc
sub
pop
enter
mov
add
add
add
sub
push
inc
frndint
mov
lds
fs
sub
sub
or
xor
subl
dec
adc
mov
or
mov
cmp
jp
movsl
or
mov
mov
in
in
mov
fidivl
gs
mov
in
mov
add
add
add
or
add
and
add
mov
cmp
push
fsubrl
js
movsb
ds
add
mov
add
cmpsb
xor
adc
cmp
add
fisubrs
and
push
nop
mov
or
mov
jae
add
xchg
cmp
pop
int3
out
inc
mov
and
add
add
fiadds
xchg
push
adc
mov
fisubs
dec
mov
pop
das
sbb
xor
jp
lods
dec
lods
mov
dec
mov
test
inc
mov
and
pop
xchg
or
test
xchg
pop
lret
add
mov
aaa
jne
push
pop
pop
and
xchg
cmpb
and
add
add
add
flds
lret
rolb
cmp
fcompl
pop
push
mov
mov
lret
mov
xchg
xchg
int
in
pop
cmp
lock
jno
sbb
sbb
daa
cld
or
loop
jns
lret
jg
push
das
loop
sti
mov
or
xchg
subb
mov
and
adc
add
add
add
mov
jge
loop
dec
stc
inc
pop
movsl
and
and
jb
add
xor
btc
fsubp
int
bound
xor
jle
stos
ret
imul
cmpsb
aam
imul
fcom
and
jns
push
xor
test
int3
mov
jg
fcoms
add
add
add
add
mov
push
add
mov
daa
cmp
das
push
lret
push
mov
sbb
push
sbb
sarl
int3
ds
in
pop
xchg
inc
add
fmull
sub
adc
iret
push
jge
imul
jae
lods
push
negb
cmp
dec
in
arpl
cltd
push
inc
pushf
shr
add
add
add
add
loopne
fs
cmpl
jmp
inc
je
pop
and
andl
lret
mov
dec
lods
sbb
jo
dec
sti
mov
mov
sbb
pop
fstpl
nop
fisubs
movsl
add
aad
fisttpl
add
cmp
jne
jae
lcall
imulb
and
add
add
add
loopne
or
pop
dec
and
or
inc
ret
adc
cmp
fstpl
xchg
fisubs
outsb
sub
and
daa
enter
and
inc
cli
fisttpl
data16
adc
xchg
mov
and
jle
sti
push
repnz
lret
lret
and
add
inc
jno
xchg
inc
pop
and
add
add
add
inc
nop
or
inc
daa
lock
jmp
xchg
lret
push
push
lret
out
test
add
test
or
lret
sbb
ret
pop
sbb
fnstsw
and
jle
sbb
add
xor
jg,pt
add
rorb
in
in
sbb
add
mov
add
add
add
push
or
data16
std
cmpsb
daa
movsl
sub
and
sbbb
add
or
lods
lods
jbe
stos
mov
inc
inc
add
xchg
loopne
cmp
out
jle
in
xlat
cmpsb
cmc
jp
icebp
adc
loop
jmp
popa
inc
lods
mov
mov
fsubs
jle
add
mov
stos
push
add
add
add
sub
and
sub
fcmovnu
in
les
lret
lods
adc
lcall
xor
jle
mov
in
cmp
stos
movd
add
push
mov
stos
lret
rclb
fs
fcompl
inc
mov
in
add
jne
fisttpl
outsb
mov
jmp
dec
out
fwait
add
add
leave
add
add
add
xor
sub
cmp
fnstcw
lcall
mov
std
pop
out
adc
loopne
adc
gs
adc
cli
add
xchg
pop
inc
and
fisubrs
add
push
fisubrs
add
push
fimull
sub
add
inc
and
xchg
test
in
xchg
decl
fisubs
add
add
fisubs
shll
cmp
mov
mov
dec
or
push
and
sahf
fwait
in
sub
pop
mov
cld
inc
pop
lret
mov
xor
xchg
push
mov
outsb
mov
decl
xchg
xchg
pop
mov
or
push
dec
out
or
ficoms
xor
add
add
add
daa
inc
jecxz
push
les
fildll
and
dec
push
dec
insl
sbb
mov
arpl
incb
add
jmp
inc
sub
xchg
mov
movsl
add
aas
jne
and
xchg
out
jmp
jnp
stos
and
cltd
lock
ret
jb
xchg
insb
out
cmp
jmp
jns
repz
add
add
add
sub
fcoms
pop
shll
sysret
fnstcw
xchg
ss
lods
cmc
jbe
push
daa
mov
sub
xchg
les
adc
scas
arpl
sbb
dec
aam
cmp
int
xlat
fcomps
xchg
pop
and
xchg
scas
push
xchg
pop
lods
add
or
and
or
cmpsb
or
add
add
add
iret
pop
sub
xlat
mov
mov
xor
mov
add
subb
call
sbb
ja
sti
idivb
rcrb
or
testb
mov
scas
fdivr
mov
xor
pop
scas
fdivr
addl
mov
fdivr
jae
add
outsl
scas
fdivr
arpl
call
add
xchg
gs
fisubrs
arpl
jmp
cmp
out
pop
idiv
or
cs
mov
sub
adc
jnp
or
push
fwait
scas
and
push
lods
in
scas
push
dec
int
jmp
shl
push
aas
xchg
cld
cld
jb
scas
and
sbb
push
out
mov
add
daa
sbb
xchg
aaa
fs
das
idiv
es
jae
add
add
add
push
scas
pop
add
scas
and
ret
push
mov
das
or
fbld
jns
jle
jne
mov
popa
mov
repz
ret
inc
cmp
movsb
add
mov
dec
xchg
lret
push
sbb
xchg
sub
ret
aas
ret
xchg
mov
xchg
pop
dec
mov
lret
bswap
xchg
vmread
add
add
add
lods
push
cmp
dec
sbb
dec
mov
add
mov
add
push
daa
pop
stc
repz
add
jmp
sub
pop
lods
dec
scas
xchg
jmp
push
fs
outsb
and
mov
pop
scas
and
jns
sahf
test
xchg
pop
sbb
add
mov
add
pop
add
mov
jmp
andl
inc
add
sbb
and
mov
ret
sub
add
cmpsl
mov
popa
jmp
add
outsl
sub
call
or
sub
lods
inc
int3
and
dec
call
cmp
add
add
add
add
test
and
jno
movsb
into
mov
mov
and
sub
sub
test
sub
add
push
push
fldenv
paddw
je
inc
mov
jecxz
or
add
scas
add
add
daa
xchg
push
add
xchg
pop
fiaddl
jae
sbb
jp
push
add
add
add
stos
jp
dec
xchg
and
pop
in
adc
scas
and
add
push
push
jecxz
scas
pop
out
inc
add
sbbl
add
test
test
xor
and
out
jnp
lods
lods
icebp
push
outsb
ret
or
shrl
mov
jg
fnstenv
dec
test
inc
or
or
add
xchg
scas
and
roll
int3
andl
xchg
test
add
and
lods
dec
test
add
ja
mov
lret
push
fwait
jle
jmp
xor
push
fists
xchg
inc
add
jmp
xchg
ljmp
sbb
sbb
clc
add
lods
pop
add
icebp
push
int3
add
test
mov
add
add
add
lret
mov
daa
icebp
push
inc
aas
lods
xor
jp
in
add
cmp
bound
jmp
jmp
jbe
and
xchg
mov
into
or
mov
or
mov
and
push
jecxz
mov
mov
scas
add
pop
mov
add
push
lods
jne
jecxz
lea
jo
add
add
add
fidivrl
add
push
push
add
lret
js
pop
and
and
mov
xchg
pop
outsl
mov
jecxz
pop
out
cmp
in
mov
dec
int
xor
xor
and
cmp
stos
call
mov
shlb
mov
jge
sub
stos
iret
sar
ret
cmp
jmp
adc
pop
push
out
jp
movsb
pop
out
clc
test
cmp
add
add
add
fsts
clc
outsb
mov
xor
cld
sbb
push
and
jb
inc
mov
and
xor
rcl
test
dec
sub
push
andl
sbb
cmpsb
shlb
add
or
or
fldl
or
add
adc
fisttpll
adc
cmp
add
add
add
add
leave
sahf
fldl
imul
and
mov
or
and
or
dec
adc
gs
xchg
cmp
add
scas
jmp
sbb
add
jae
sbb
push
sbb
testb
push
inc
mov
push
add
inc
out
add
add
add
pop
sub
sarb
mov
xchg
rsqrtps
sbb
push
dec
mov
nop
divl
add
add
inc
daa
sub
orps
lods
pop
inc
mov
fcmovnb
enter
jnp
pop
push
dec
jge
cmp
adcl
cmp
inc
les
pop
dec
dec
xchg
push
push
out
adc
fs
sbb
add
add
add
fildll
inc
aas
lods
pop
and
insl
mov
hlt
push
setg
test
jne
jecxz
enter
out
push
add
jnp
sbb
fnsave
dec
or
push
fstps
adc
xor
dec
or
scas
scas
mov
sbb
loopne
add
xchg
add
add
add
and
xchg
and
push
pop
and
xchg
pop
shlb
shl
inc
pusha
sbb
test
pop
and
inc
add
stos
dec
dec
push
mov
push
daa
ret
dec
dec
mov
and
jl
jmp
add
out
sbb
adc
daa
inc
dec
inc
clc
cmp
call
add
add
add
sbb
xlat
pushl
outsl
call
jle
jae
sub
pop
and
ds
leave
mov
cmp
push
stos
call
into
call
mov
std
pushf
sarb
xchg
and
invd
or
iret
mov
leave
stc
dec
xchg
pop
int
sahf
jle,pt
pop
xlat
sbb
add
add
loop
xchg
sbb
popa
and
xor
rorl
xchg
jp
xor
push
inc
out
scas
lods
daa
jp
and
or
std
jl
sarl
xchg
xchg
scas
pop
int
sub
cld
mov
in
jo
pop
cmp
scas
push
xor
xor
jg
xor
addb
dec
mov
sbb
xchg
xor
js
add
add
add
aad
mov
faddl
mov
xor
xor
adc
and
lock
test
sub
add
mov
dec
mov
jno
adc
out
out
or
jb
lock
ja
inc
mov
decl
xor
in
mov
adcl
cmp
jne
and
adc
jecxz
loope
and
insb
pop
jge
add
add
add
xchg
pop
outsl
jb
mov
adc
lods
mov
mov
dec
xor
pushw
mov
jmp
mov
mov
shlb
add
andb
pop
int3
xchg
push
jbe
gs
mov
jmp
add
pop
movsl
cmp
pop
or
push
int3
jl
mov
sarb
dec
je
add
add
add
scas
push
in
xchg
pop
lahf
sub
dec
add
and
mov
mov
push
clc
or
xlat
je
test
cmc
jno
add
leave
adc
rolb
lods
push
sbb
int3
inc
or
lods
inc
sub
inc
call
call
mov
push
pop
mov
sub
add
add
add
mov
push
outsl
push
jae
rorb
or
cli
mov
loope
lock
push
push
stos
jl
adc
in
cwtl
sub
cmp
out
stos
in
sbb
xchg
je
mov
jp
test
lods
add
dec
lods
test
jns
and
data16
or
fildl
dec
test
dec
add
add
add
mov
mov
add
cmp
cld
movsb
mov
sub
data16
cld
or
in
add
pop
out
dec
pop
jge
nop
dec
jne
pop
and
pop
lcall
add
push
cwtl
pop
rcrl
lret
pop
or
pusha
sbbl
mov
ss
mov
pop
inc
rcll
add
add
xchg
pop
ljmp
scas
mov
xchg
cmpb
or
inc
push
mov
lahf
adc
inc
mov
inc
and
out
mov
and
xchg
cmp
leave
xchg
push
push
shr
aad
add
adcb
sbb
push
jnp
and
xchg
jmp
pop
add
lods
out
mov
bound
add
add
add
stos
test
jle
cmc
sbb
sub
mov
shlb
mov
enter
and
or
push
xchg
call
xchg
xorb
jae
mov
cmp
sbb
jle
inc
rclb
pop
aad
pop
xor
mov
clc
jecxz
mov
pop
lahf
sub
add
add
add
inc
adc
insl
push
add
testb
xor
fnstenv
imul
arpl
mov
movsl
fistpl
stos
inc
in
mov
mov
xchg
or
push
sbb
scas
add
inc
insb
or
xchg
ret
jmp
sub
push
inc
mov
jb
pop
scas
push
dec
ja
jae
mov
add
add
push
pop
mov
pusha
mov
loop
mov
xchg
and
and
mov
cmc
xor
adc
imul
and
xchg
inc
mov
or
rcll
lods
push
mov
shrb
xchg
clc
jle
in
mov
movsl
jnp
mov
add
add
js
pop
or
pop
cmp
xlat
mov
int3
psraw
pop
adcl
insl
decl
jmp
and
addr16
push
mov
inc
pop
or
dec
ret
sub
ret
xchg
cmp
xchg
in
shll
push
js
test
mov
add
pop
sub
jl
or
aad
mov
lahf
cwtl
filds
add
add
add
or
mov
jmp
clc
iret
jge
push
push
ret
sub
dec
ret
xchg
lahf
fistps
mov
xchg
pop
inc
mov
jl
or
inc
mov
add
pop
lret
xchg
cmp
adcb
subb
push
lds
inc
sub
push
or
xor
add
cltd
and
pop
movsl
sub
add
add
add
pop
dec
and
js
rolb
and
or
sub
push
dec
sarb
xchg
pusha
xlat
add
in
fmul
lods
cmp
andb
out
daa
shrb
jb
mov
or
dec
mov
pushaw
jecxz
lahf
test
cmp
sub
push
mov
ret
jnp
daa
add
add
add
add
push
stos
icebp
push
mov
and
add
or
insb
aam
stos
int
and
add
mov
test
or
or
xor
cmp
fdivs
inc
sbb
fdivrl
fsubp
lods
pop
jo
sbb
movsl
adc
fldt
mov
push
xchg
incl
add
add
add
xor
mov
push
add
fisubrl
mov
lahf
and
stc
inc
cli
incl
sbb
jae
cmp
std
inc
pushf
and
jne
push
out
jo
push
mov
sbb
mov
mov
or
add
data16
cmpsb
add
add
sahf
mov
arpl
jl
out
cltd
fiadds
xchg
pop
sub
dec
pop
add
add
add
add
or
xchg
and
jae
and
mov
aam
fld
les
call
xor
lods
das
or
enter
std
outsb
ret
adc
dec
mov
jmp
sbb
adc
outsl
mov
js
lret
dec
push
mov
push
push
push
pop
adc
shll
int3
inc
sbb
add
add
pop
inc
fists
adc
int
push
inc
out
js
dec
mov
or
cmpsl
sarl
sti
in
sarl
and
sub
inc
xchg
jb
adc
lods
mov
xchg
push
aam
in
inc
lods
jg
pop
lods
mov
fcoml
add
add
mov
icebp
sti
dec
ljmp
and
xchg
jmp
add
and
stos
adc
and
xchg
jmp
pop
push
jge
pop
je
iret
mov
xchg
dec
andl
xchg
popf
mov
bound
push
je
and
inc
sub
sbb
cmpsb
adc
pop
sti
mov
sub
subl
and
jns
fnstcw
dec
repnz
call
add
iret
fnstcw
add
add
add
stos
ja
adc
les
pop
rol
jne
inc
or
jne
mov
push
arpl
xchg
mov
in
cli
sub
sub
hlt
test
and
or
add
sub
adc
mull
std
jbe
not
jle
pop
inc
mov
push
sbb
aam
imul
push
sbb
xor
inc
jne
je
rcll
xor
xchg
nop
adc
pusha
and
mov
or
lahf
pusha
and
aad
stos
inc
lods
int3
pushw
nop
imul
pusha
and
ror
pop
mov
pop
sbb
test
ret
outsl
jmp
lcall
add
add
lahf
and
sbb
das
xchg
xchg
stos
jecxz
dec
mov
push
fldl
loopne
push
add
rclb
jne
into
stos
jecxz
or
xchg
pop
dec
mov
test
inc
lret
mov
faddl
loopne
sar
cltd
sahf
dec
stos
xchg
jle
pop
xchg
fistpll
bound
lods
cmp
mov
rolb
add
add
add
inc
jmp
cmc
mov
push
jecxz
jnp
adc
add
inc
out
scas
orb
sahf
test
jge
call
pusha
jmp
jns
fdivrs
mov
or
push
stos
stos
fcoms
dec
jge
shl
sub
cld
xor
in
js
jno
fsubrl
and
or
jns
rcr
in
xchg
push
lods
js
add
add
add
dec
jae
pop
int3
add
fcomps
jecxz
call
and
jle
xchg
rolb
and
jmp
push
outsl
mov
je
lock
pop
and
or
lods
add
mov
add
pop
fsubs
call
in
stc
es
or
adcl
test
or
mul
decl
add
add
add
and
and
mov
push
or
lods
dec
push
add
adc
push
pop
out
xor
add
out
cmp
or
rorb
xlat
xor
dec
adc
stos
clc
xor
lret
shrb
or
js
pop
push
aaa
daa
sbb
mov
cld
adc
or
push
lods
enter
adc
mov
add
add
outsb
pop
insl
adc
sbb
or
xchg
jb
popf
stos
ljmp
and
cmpsb
fdivrs
add
lock
orl
sub
push
mov
mov
mov
jno
ficomps
mov
xor
jl
pop
pop
das
in
pop
nop
pop
lret
add
or
push
add
add
add
sbb
sti
inc
xchg
and
idivl
add
dec
sti
jl
mull
jge
sti
dec
sub
xchg
add
xchg
sbb
pop
loope
out
dec
lahf
inc
lret
imul
sub
mov
adcl
lret
sbb
imul
mov
daa
flds
mov
out
inc
xchg
lds
add
add
add
cmp
and
mov
ficoms
mov
xlat
and
and
jmp
add
jmp
outsb
call
std
jb
mov
pop
lahf
xchg
into
cltd
cld
adc
int3
lret
lcall
sub
and
fldpi
xor
jmp
fcmovu
nop
pop
lds
add
add
add
dec
jecxz
bound
jmp
inc
add
imul
sbb
stc
repz
push
pop
movsl
add
push
and
pop
jb
sbb
inc
and
js
sub
mov
cld
test
mov
paddsb
lret
add
ja
and
push
and
cmp
imul
test
add
add
add
lea
out
xlat
test
fisubl
test
fxch
mov
cmp
ljmp
push
push
push
and
cmp
fs
pop
mov
xchg
out
and
aas
pop
push
idivb
mov
mov
mov
push
mov
mov
out
adc
xchg
jae
mov
push
sub
jne
add
add
add
fbld
and
push
sbb
push
outsb
mov
movsl
int
fstps
insl
outsb
push
outsb
xlat
push
fdivr
mov
xor
stc
jo
sahf
inc
mov
int3
test
pop
adcl
sbb
adc
xchg
jae
sub
clc
sbb
fstpt
jmp
ret
push
lret
jp
lods
std
addb
add
add
add
mov
repz
add
ss
cmp
lea
sbb
mov
adc
rorl
pop
sub
scas
or
mov
mov
loope
lcall
fwait
imul
mov
xchg
mov
add
lret
push
add
cmp
add
add
add
cmp
or
inc
mov
and
sub
inc
push
push
dec
fisttpll
xor
mov
in
cwtl
inc
cmp
cld
repnz
arpl
or
in
mov
xor
lea
and
and
frndint
jb
arpl
les
and
or
lods
scas
aam
in
icebp
pop
pop
jmp
add
add
add
and
pop
lds
cltd
outsb
cmpsb
pop
jmp
cli
add
adc
add
clc
repz
jmp
xlat
call
mov
push
gs
cmp
add
mov
dec
add
jg
notl
sti
outsb
fnstcw
mov
and
add
add
add
add
jns
and
das
cmp
inc
xor
xlat
adc
xchg
push
jbe,pn
and
inc
xlat
call
push
jbe
gs
gs
cmp
xchg
in
lret
daa
xchg
mov
add
add
lret
das
idivb
mov
pop
ds
imul
and
xchg
icebp
movsl
jmp
scas
and
sbb
xchg
scas
and
inc
sub
testb
add
add
push
lods
mov
push
sbb
sbb
adc
push
ret
out
mov
mov
xchg
pop
call
mov
inc
jne
push
push
insl
shlb
out
fs
add
jne
mov
add
xchg
adc
lds
jo
jecxz
add
aaa
mov
mulb
loop
psrlw
add
add
mov
or
nop
push
sbb
in
xor
mov
dec
test
xor
loop
popf
cmp
pop
cmc
mov
adc
sub
xchg
clc
jg
lret
pop
dec
lods
insl
adc
jle
push
dec
dec
mov
repnz
push
popf
icebp
jg
adc
inc
adc
scas
jle
mov
popf
rorl
std
jl
int3
jmp
fsubrs
add
add
add
pushf
dec
cmc
mov
sbb
repz
aam
repnz
dec
leave
das
jmp
clc
fwait
dec
stc
movsb
or
mov
xor
arpl
pop
je
inc
xor
xchg
mov
and
mov
xchg
idivb
xor
inc
jg
jnp
xchg
iret
jb
jecxz
cs
add
add
add
xchg
inc
and
lods
ret
push
or
dec
and
push
outsb
ja
out
push
jnp
pop
sbb
call
push
inc
add
jmp
jnp
sar
pop
stos
xchg
lds
push
sbb
mov
mov
sbb
sub
or
sbb
xlat
jbe
outsb
xor
mov
rol
jo
push
cmp
add
add
add
cmp
imul
push
adc
mov
inc
and
sub
sub
xor
xor
leave
push
sti
xor
inc
xchg
pop
lds
shll
mov
xchg
mov
mov
test
adc
add
jns
add
jbe
push
inc
and
mov
push
insl
ret
push
dec
jne
jne
add
add
add
pop
jb
push
inc
jge
std
inc
mov
xchg
cld
inc
cwtl
outsl
std
movsb
pop
das
inc
xchg
and
and
adc
xor
je
xchg
xchg
push
roll
cli
push
adc
fmuls
sahf
push
roll
inc
les
inc
daa
adc
orps
ficomps
inc
inc
mov
lcall
dec
lods
test
js
daa
mov
inc
add
add
add
add
jnp
movb
pop
lret
add
fcmovne
add
xor
cmpsl
cld
add
add
out
or
sahf
or
adc
sahf
inc
xchg
ficomps
xor
add
jmp
sbb
rep
and
test
fs
loop
lods
inc
xor
adc
ffree
pop
and
xchg
sub
add
add
add
xlat
cld
push
pushf
xor
stc
fwait
xchg
lods
mov
faddp
arpl
push
pop
push
repnz
mov
insb
sub
push
pop
sub
push
pop
inc
sub
add
ljmp
sarl
popf
jl
dec
lds
mov
lods
add
xor
cmpsb
jl
push
pop
or
add
add
add
add
shlb
adc
push
stos
inc
cmp
adc
hlt
mov
mov
movsb
into
lods
inc
hlt
xchg
gs
call
xchg
gs
lcall
clc
dec
daa
inc
sub
xlat
je
adc
addr16
cmp
addr16
lret
das
nop
dec
add
mov
ljmp
add
add
push
sbb
je
adc
xchg
negb
adc
jle
mov
jne
xchg
lahf
and
push
aad
mov
popa
pop
call
mov
xor
xchg
mov
mov
push
or
push
or
xchg
sub
fnstenv
lcall
jg
mov
out
cmp
data16
and
add
add
add
sarl
faddl
and
filds
jmp
pop
fldcw
pop
jecxz
mov
ds
movsb
add
inc
mov
jecxz
fldcw
lods
fbld
push
loopne
leave
ja
mov
sbb
pop
lret
or
push
xlat
sbb
cmp
and
push
test
filds
add
add
add
xchg
xchg
lret
sbbl
hlt
cltd
mov
lods
or
leave
or
lods
sbb
xchg
mov
xlat
dec
inc
dec
and
xchg
jmp
xchg
cmp
sbb
nop
aam
push
inc
and
std
xchg
fdivr
adc
dec
dec
xor
xchg
loope
lods
test
add
add
add
sub
xchg
pop
and
dec
add
dec
or
sub
mov
push
lret
icebp
out
loop
mov
loop
add
xor
dec
inc
ss
push
lret
loope
loop
mov
loop
sbb
inc
xor
push
lret
loope
loop
pop
add
ror
arpl
xor
xor
cltd
call
cltd
add
rorl
arpl
add
add
add
push
xor
jecxz
cltd
call
mov
sub
push
andl
das
outsb
sbb
enter
stos
loop
dec
add
rcr
arpl
aaa
das
outsb
sbb
xlat
call
mov
cltd
call
sbb
sub
mov
push
xor
add
add
pop
sbb
dec
subb
push
jmp
and
movl
add
add
popa
and
lahf
faddl
pop
mov
arpl
fcomp
daa
add
mov
movsb
jp
ja
gs
push
mov
inc
out
in
pop
test
xor
subl
decl
addr16
and
mov
xchg
cmp
xchg
lea
pushf
mov
aas
xchg
ljmp
add
pop
int3
sub
les
xchg
pop
dec
lcall
stos
es
int3
add
push
ret
lahf
or
xchg
xchg
inc
leave
in
loop
test
inc
inc
cltd
cmp
cltd
cmp
test
into
test
lcall
nop
push
push
xchg
lret
outsb
orl
push
sbb
lods
and
add
push
ljmp
adc
mov
xchg
sbb
jmp
inc
cmp
hlt
adc
and
shlb
jb
out
mov
jns
mov
jnp
and
or
dec
xchg
cmp
jecxz
into
sbb
dec
ljmp
fdivr
jns
lods
icebp
add
add
add
notl
sub
push
std
lods
fldpi
repnz
mov
push
xchg
cmp
ror
cs
fdivs
jg
xchg
jge
and
sub
mov
add
clc
jne
jno
or
jo
adc
enter
int
ret
jne
dec
mov
fisubrl
not
iret
lret
addl
add
add
test
push
adc
insb
add
push
adc
insb
xlat
jne
jg
jne
fcmovbe
push
inc
xchg
or
jnp
push
pop
clc
das
lea
fisubs
lret
push
enter
jle
mov
arpl
call
and
add
push
aam
mov
mov
pop
add
add
add
fcomp
iret
jmp
xchg
dec
pop
and
and
xchg
and
add
push
sub
pop
lret
and
dec
pop
and
pushl
xor
outsb
push
sub
xlat
in
xchg
aas
or
int
mov
sbbl
xor
enter
mov
insb
add
sar
cld
popf
cld
iret
cld
test
cld
jge
out
add
add
add
imulb
pushf
cmc
lret
js
lret
pushf
jbe
mov
pop
lods
notl
jne
mov
rcrb
testb
cli
fildll
adc
hlt
popf
adc
hlt
scas
mov
stos
daa
clc
inc
lret
pushf
out
aas
cmp
lods
jmp
xor
pop
and
dec
push
adc
or
inc
lret
lret
sub
add
add
loopne
sbb
and
subl
ret
lcall
xchg
and
or
mov
jecxz
int3
hlt
add
and
cmpsb
and
ret
pop
orl
aam
rorl
and
pop
sahf
sahf
aas
mov
jae
sbb
cltd
pop
mov
fsubs
sub
add
add
fcomps
and
add
mov
out
pop
and
xchg
andb
cmpsb
leave
ficomps
sbbb
mov
add
xor
mov
fiaddl
or
jg
call
clc
or
not
not
jle
jge
mov
or
movsb
aaa
jno
rcr
bound
int
pop
jmp
add
push
add
jno
je
dec
and
mov
fisubl
lcall
mov
js
dec
and
mov
out
jo
fcos
jg
sbb
clc
pop
lret
add
ficompl
xchg
sbb
mov
mov
pop
add
orl
movsb
adc
pop
mov
mov
sahf
and
add
add
add
nop
jns
mov
sub
sar
sbb
cmp
inc
fadds
inc
arpl
sahf
lods
push
mov
mov
mov
insb
jo
test
mov
fdivl
sbb
or
xchg
mov
adc
nop
mov
sbb
loopne
push
ds
aaa
push
leave
sub
add
mov
add
add
add
add
into
mov
or
and
lcall
inc
inc
sarl
int3
lahf
pop
rcl
mov
fldl
add
xor
mov
cmp
xchg
jle
jle
cli
inc
dec
xchg
mov
mov
mov
lcall
lret
mov
push
pop
push
sbb
inc
push
or
add
add
add
pop
or
xchg
pop
stos
je
jle
and
das
stos
and
and
mov
enter
in
sub
cmp
sahf
xor
dec
dec
dec
cmc
aad
mov
outsl
movsl
sbb
sub
mov
rorl
andb
sbb
outsb
es
cmp
les
jb
mov
fwait
adc
cmpsl
stos
mov
into
insl
icebp
xchg
xchg
add
add
adcb
int3
andb
aas
sub
adc
jmp
fs
mov
mov
push
les
inc
xor
pop
add
push
stos
inc
and
stos
inc
cmp
pop
or
shrb
les
inc
in
pop
adc
xor
test
lods
inc
in
lods
pop
sbb
and
les
lods
inc
add
add
add
aam
pop
and
adc
lds
lods
inc
pushf
lods
pop
sub
andl
sbb
pop
jbe
and
dec
fisubrl
test
aas
xchg
sbb
stos
push
nop
es
or
mov
mov
scas
mov
push
fs
mov
mov
or
pop
pop
rorl
mov
add
inc
bound
push
xchg
sahf
loop
xchg
shrl
dec
popf
adc
and
int
mov
mov
add
sahf
and
push
dec
or
subl
and
adc
xor
jmp
and
dec
jnp
add
xchg
inc
xchg
xchg
scas
mov
lock
jle
push
dec
adc
add
add
add
xchg
rorb
pop
test
popl
xlat
dec
cs
xchg
pop
pushf
syscall
xchg
mov
pop
outsl
push
ss
nop
das
mov
add
cmpsb
xchg
ds
inc
sbb
mov
jb
aad
lret
stos
jns
lret
add
xchg
stos
jbe
add
xchg
outsl
and
movsl
pop
and
push
adc
jb
add
add
add
nop
pop
inc
or
jb
pop
stos
test
pop
dec
or
bound
stos
sub
pop
andl
pop
pop
mov
jb
dec
je
push
shrl
arpl
dec
lret
mov
int
mov
jb
jmp
sub
adc
adc
or
imul
add
xchg
mov
fimuls
pushf
and
js
stos
or
jmp
sub
xor
cmpsb
repz
popa
lret
in
dec
push
jl
push
inc
imul
mov
cmp
mov
movsl
sarb
pusha
add
push
lcall
fdivr
insl
dec
push
dec
arpl
inc
imul
dec
add
add
add
inc
pushf
fwait
inc
mov
or
or
cmp
push
xchg
lcall
mov
in
popf
and
outsb
mov
add
xchg
pusha
add
iret
add
outsb
push
push
jge
cmpb
out
mov
push
push
aaa
clc
cs
out
mov
aad
and
lret
add
add
add
xchg
mov
dec
xchg
sbb
roll
fs
pop
push
outsb
cltd
imul
cmp
or
sbb
rcll
fbstp
push
jmp
jle
or
cmp
xor
jmp
xchg
mov
ljmp
and
mov
stc
fstpt
inc
add
jo
leave
add
add
add
inc
addl
aad
mov
add
xchg
push
in
cmp
jns
test
mov
or
adc
fwait
jmp
lret
mov
nop
insl
loope
pop
xchg
fnstenv
jge
sub
stos
testl
cmpsl
xlat
lods
ss
cltd
lret
ss
sbb
add
add
add
dec
in
mov
push
push
incl
cmpl
push
and
imulb
adc
mov
sbb
pop
and
xor
fs
xchg
outsl
js
push
subl
cmc
and
shrb
call
mov
sbb
pop
lds
cmp
je
inc
and
add
xor
or
add
add
add
add
jae
mov
or
repz
and
xorb
inc
push
lds
push
mov
xor
mov
xor
inc
cmp
sub
add
and
push
cwtl
push
int
call
add
jo
ljmp
jno
inc
xchg
jae
in
fdivr
and
add
add
add
xchg
xchg
out
test
xchg
cs
add
push
pop
pop
mov
push
sar
test
aad
xchg
sti
pusha
and
mov
fs
data16
std
adc
stos
rcrb
arpl
adc
outsb
push
inc
lods
push
stos
mov
push
sbb
xchg
jecxz
and
cmc
fcoml
adc
mov
lret
dec
mov
add
rcll
add
pop
pop
inc
mov
adc
pushf
push
sarl
xchg
jmp
jb
shlb
jb
pop
test
lea
adc
ficoml
dec
fsts
or
dec
jns
xor
popf
xor
mov
cld
rcrl
jp
jnp
xor
xchg
jg
aam
or
mov
add
add
add
xchg
cmp
push
loopne
xchg
pop
push
xchg
jge
mov
fadds
mov
or
xchg
shr
xchg
pop
inc
xchg
jl
mov
adc
cmp
or
loope
xchg
push
or
icebp
xchg
pop
dec
std
sub
sub
xchg
xlat
jb
mov
or
jmp
daa
shr
push
ret
pop
and
add
add
add
insb
mov
xchg
repz
cwtl
stc
or
sbb
jecxz
fldt
outsb
jb
cld
or
nop
fiaddl
inc
push
test
xlat
jg
es
jg
jmp
loop
fs
filds
in
cld
out
movsl
lods
inc
or
mov
in
cli
push
in
inc
sar
add
add
add
jne
inc
mov
sbb
pushl
cld
gs
xor
xchg
push
inc
test
movsl
and
nop
xlat
imul
enter
push
imul
sub
push
ss
in
mov
cmp
ret
xchg
dec
add
xchg
xor
subl
ret
inc
movsl
aas
aam
xchg
je
xchg
add
add
add
mov
data16
sbb
mov
dec
mov
mov
mov
adc
sub
or
or
lahf
jmp
mov
dec
push
push
mov
xchg
xchg
outsb
pop
dec
test
mov
mov
insl
gs
stos
sbb
pushf
or
add
mov
add
add
and
push
sbb
ljmp
dec
pusha
jnp
or
jb
push
lret
jbe
jnp
insb
idivb
fwait
inc
dec
lret
inc
push
repz
jle
pusha
add
sti
insb
or
scas
repnz
faddl
sub
dec
or
add
xor
fiaddl
int3
add
jecxz
aam
xlat
inc
cmp
add
add
add
cmp
inc
inc
mov
dec
cmp
pushf
jl
lea
xchg
xor
les
mov
dec
fdivs
loope
fucomip
sbb
or
push
pop
lods
fld
jl
cmp
cmp
xchg
jp
jmp
int
jb
sahf
push
lods
scas
sub
rclb
lock
je
and
sbb
add
add
add
lock
push
cmpsl
and
push
and
lods
add
fxtract
es
fs
in
incl
outsl
cmp
sbb
sub
jmp
je
xchg
add
lock
xor
lea
xlat
adc
jne
push
add
add
add
add
lret
and
add
incl
test
push
aad
bound
xor
dec
xor
add
xchg
stos
push
test
insb
xchg
dec
and
mov
pmulhuw
fdivr
js
in
call
rep
movsl
fcomi
add
add
sub
add
cmpsb
pop
mov
sub
sbb
add
add
test
push
inc
xchg
divl
and
in
pop
lahf
and
fsubl
sub
pop
ja
gs
outsl
cmc
sbb
popa
imul
mov
imul
sub
adc
add
cmp
mov
jle
ret
test
mov
vmovapd
add
add
iret
js
and
fwait
dec
push
fsubrp
je,pn
test
outsl
and
sbb
inc
aas
insl
cmp
push
das
sbb
fisttpl
pop
add
cmp
inc
rolb
fisubs
add
add
adcl
push
add
sub
test
jno
jmp
ret
lret
adc
addb
add
add
dec
cld
enter
dec
inc
xchg
pop
dec
negl
fcompl
out
outsb
sbb
xchg
in
xorb
int3
and
push
mov
pop
movsl
lods
xchg
jbe
iret
ja
cs
and
and
pop
pop
movsl
sub
sub
or
adc
xchg
in
lret
and
adc
cmp
sahf
pop
and
sbb
sti
push
pop
inc
dec
add
add
add
mov
pop
jmp
sbb
or
adc
sbb
push
pop
inc
pusha
push
add
push
fldcw
es
and
add
and
adc
icebp
add
dec
roll
and
sub
dec
fidivrl
or
and
and
movsb
push
add
or
test
test
add
add
add
outsb
icebp
xor
cwtl
movsb
and
or
mov
mov
jns
push
add
add
daa
adc
push
sbb
fdivr
mov
push
add
aas
add
pusha
mov
fs
add
cld
pushf
xor
sti
sti
and
xchg
pop
pop
dec
in
pop
and
mov
sbb
adcl
inc
add
add
add
insl
mov
adc
xchg
pop
and
aad
adc
cld
adc
sbb
cmp
ljmp
lods
cs
and
xlat
sub
data16
cmpsl
inc
jne
mov
insl
ds
lds
add
pop
in
inc
sbb
pop
xchg
mull
cli
sub
or
add
add
add
or
mov
mov
daa
jg
adc
out
xchg
mov
outsb
xchg
dec
xchg
lahf
push
std
inc
pusha
push
inc
inc
xchg
mov
add
je
nop
adc
lahf
add
pop
sbb
in
neg
lret
addb
movsl
xlat
cltd
pop
inc
push
or
inc
push
out
inc
sub
xchg
pop
inc
mov
lret
xlat
mov
add
add
or
jmp
int
pop
push
outsb
push
mov
rcrb
xchg
fnstsw
and
xchg
xlat
fcom
push
add
mov
rclb
je
cld
adc
mov
lds
xor
fwait
mov
add
leave
pop
loop
xchg
sub
je
es
jmp
or
adc
push
add
add
jb
test
jns
stos
popl
pusha
out
add
int3
sub
inc
and
or
mov
daa
push
push
call
add
fcmovb
xor
xchg
sbb
cmp
xchg
dec
push
and
lcall
push
jnp
xchg
push
jecxz
add
add
add
mov
mov
inc
lret
push
outsb
push
adcl
dec
xchg
and
cld
ja
and
movsb
pop
or
add
dec
sbb
inc
addr16
xor
daa
test
in
and
imul
add
add
test
int
add
jbe
pop
jmp
inc
xor
clc
shll
jge
push
or
add
add
add
xchg
and
shll
test
pop
and
adc
and
or
fstp
inc
nop
jns
out
pop
and
jmp
push
push
fisubs
sbb
mov
add
pop
pop
pop
rolb
addb
aaa
jle
daa
imul
pop
stos
call
into
inc
into
add
add
add
lcall
adc
push
lock
lret
es
or
mov
jb
xor
pop
mov
sbb
or
fidivrs
pop
lret
out
adc
shr
mov
inc
enter
jge
rcl
ret
out
xchg
or
rolb
adc
arpl
add
add
add
or
sbb
or
fsubl
int
or
arpl
and
ss
and
lret
in
pop
fists
xor
loopne
andb
xchg
movsb
loope
insb
dec
sub
int
clc
pop
ret
fsubrs
mov
popf
xchg
insl
pop
lds
push
icebp
pop
jne
mov
ret
call
jp
cwtl
jmp
add
add
add
ss
jmp
fisubrs
lods
add
xor
jle
jge
add
imul
sub
sbb
pop
xlat
je
cmp
lods
or
lods
pop
push
inc
jmp
and
xchg
jmp
mov
xor
fdivr
mov
movsl
idiv
sub
xor
add
add
add
push
cmp
jg
test
cmp
xchg
and
jge
and
call
int3
and
dec
add
inc
adc
outsl
mov
inc
movsl
mov
or
add
popa
xor
pop
insl
inc
dec
xor
pusha
and
inc
inc
cmp
aad
or
std
inc
cmp
jg
push
add
add
add
add
and
test
mov
xchg
cmc
imul
insb
in
adc
sub
aam
out
lds
lahf
and
xchg
pop
xor
or
dec
outsb
daa
sbb
stc
cmpsl
pop
adc
imul
xchg
jp
add
pusha
ss
or
mov
sbb
add
add
add
cmp
mov
sub
jle
rol
dec
in
lret
xchg
xchg
pop
cmp
add
insb
inc
sarb
scas
incl
xchg
pop
arpl
xor
lret
mov
ja
rcrb
xlat
and
push
lret
mov
test
fidivrs
mulb
pusha
loop
mov
dec
cs
scas
into
xchg
pop
sbb
add
add
cli
cmpsb
xor
out
ds
in
push
mov
stos
cs
jns
pop
inc
outsb
bound
xchg
call
in
aad
pusha
pop
daa
inc
push
push
mov
stos
mov
xchg
stos
lods
jle
stos
movsl
jbe
stos
popf
scas
stos
xchg
cmpsb
ret
stos
lea
mov
lret
cs
fcomps
mov
mov
add
mov
inc
add
test
adcl
pusha
shrb
mov
cld
push
and
adc
fdivr
mov
push
lods
test
mov
lods
dec
aam
sarb
movsb
rolb
fdivr
push
dec
shlb
lahf
cmp
and
cmp
inc
hlt
or
add
add
add
hlt
or
hlt
or
mov
or
xchg
pushf
cmp
movsb
cmp
pushf
cmp
dec
adc
aas
xchg
sbb
add
hlt
add
xchg
pusha
and
cmpsl
inc
pop
add
rclb
cmp
dec
mov
fimull
adc
jecxz
and
idiv
and
push
and
add
jns
push
jae
cmc
jecxz
int
repz
daa
push
ret
push
mov
cmc
jmp
popf
insl
jb
push
dec
jecxz
or
pop
test
cmp
mov
in
fimuls
adc
cli
sbb
dec
enter
mov
xchg
aam
push
jae
mov
lret
into
in
fiaddl
pop
and
inc
aam
mov
xchg
aam
iret
add
add
add
jb
sbb
ss
push
ret
cmpsb
mov
mov
fs
divl
jl
pop
stc
addb
in
push
mov
pop
push
pusha
jbe
ret
push
hlt
push
fs
inc
jg
push
cmp
imul
jmp
push
xchg
jmp
mov
and
jl
stos
push
add
add
add
mov
lods
ficoml
cmp
jo
lods
popa
fadd
push
mov
dec
mov
jge
add
xchg
ja
jle
insb
xchg
pop
mov
and
mov
lods
loope
xlat
fdivrs
cwtl
in
sbb
jle
sub
outsl
and
shlb
paddsw
lods
dec
mov
lret
cmc
mov
add
add
add
push
pusha
mov
sbb
hlt
push
je
mov
inc
stos
int
fisttps
test
jbe
xor
dec
mov
mov
mov
ds
mov
cmpsb
add
xor
mov
mov
daa
mov
cmp
je
lods
jnp
push
xlat
ja
arpl
stos
gs
push
aam
mov
add
add
add
jle
add
xchg
sub
sbb
add
cmp
cmp
std
es
pop
or
pop
adc
dec
out
out
gs
mov
int3
pop
or
rorb
mov
and
dec
adc
or
add
or
pushf
inc
fsub
and
jo
add
stc
jmp
test
clc
push
add
dec
jo
rcl
outsb
xchg
push
stc
adc
fstpl
sub
sub
std
test
ret
adc
loop
dec
in
pop
add
scas
add
mov
insl
aaa
mov
push
mov
lret
imull
addb
fstpt
cmp
sbb
add
jo
jb
outsl
dec
mov
fs
add
daa
mov
add
out
movb
dec
adc
add
add
add
mov
add
or
inc
test
mov
pop
inc
jns
int3
mov
jb
int3
fldl
adc
inc
jl
ficoms
jle
and
sti
cmp
mov
inc
imul
jecxz
incl
insb
push
push
lea
lahf
sub
adc
call
lea
jb
insb
fwait
pop
xchg
pop
push
sub
ret
add
add
add
xchg
mov
and
mov
in
cs
fdivs
mov
pop
cmpsb
pop
pop
add
cmp
nop
enter
daa
sub
cmpsb
add
dec
mov
mov
pop
lahf
add
pop
sub
add
pop
and
test
lret
or
vsubps
or
xor
pop
jne
fmull
add
add
push
add
inc
outsl
push
loop
hlt
mov
fcom
test
push
lret
sub
pop
mov
or
pop
stos
jne
fstpl
jae
dec
add
ficomps
loopne
sti
add
add
aam
inc
fcom
jmp
lret
ja
xchg
adc
cli
out
cmc
pop
add
incl
add
add
add
mov
and
cmc
in
in
mov
jo
mov
stos
pop
push
adc
xor
and
pop
and
ret
sub
inc
das
inc
xchg
and
push
outsl
ja
stc
roll
test
bound
adc
or
pop
or
and
add
add
add
rcll
add
or
add
mov
xor
mov
add
pusha
mull
add
mov
mov
jb
addl
imul
ds
lret
xchg
jbe
add
and
and
adc
xorb
in
sar
inc
mov
pop
lret
add
push
and
add
add
add
jno
lret
mov
loopne
fiaddl
mov
popa
mov
sbb
dec
and
arpl
sbb
adc
sbb
push
jmp
or
pop
fstl
push
bound
cmpsl
gs
and
xchg
outsl
in
lret
out
arpl
insl
rcl
sub
insl
jbe
and
xchg
cwtl
leave
call
outsb
popa
and
add
add
aam
fs
and
jmp
cltd
ja
test
pushaw
fsubr
ret
pop
add
jb
push
mov
add
add
adc
fistpll
mulb
xor
xlat
xor
pop
mov
add
and
sub
cmp
jp
and
sbb
movsb
and
add
add
add
or
daa
insb
call
std
jmp
sub
inc
fdivr
pop
cs
or
xor
pop
fcos
cmp
jbe
add
and
in
or
sahf
loopne
sbb
in
loopne
xorl
into
push
jo
mov
dec
mov
xlat
bound
pop
rolb
add
add
add
jo
mov
idivb
jo
fcom
sub
pop
adc
mov
shlb
pop
jmp
les
jo
push
subb
mov
inc
cld
xlat
add
jae
jge
outsl
and
mov
jo
call
or
and
sbb
adc
out
cmc
mov
aam
pop
iret
out
lret
add
add
add
aam
fadd
pop
lret
add
inc
rcrl
pop
mov
push
icebp
xchg
lret
xchg
lret
rcr
loope
cmp
imul
icebp
pop
xlat
iret
xchg
lret
pop
imull
inc
aam
cmp
pop
sbb
cmc
inc
leave
and
test
push
pusha
mov
inc
rolb
add
add
add
cs
ss
adc
and
and
pop
mov
adc
lods
pop
orl
and
pop
mov
shll
mov
bound
mov
test
stos
and
mov
dec
in
imul
add
jne
lods
adc
idiv
mov
fdivr
testb
jmp
add
add
add
mov
sbb
xchg
fadds
repnz
xlat
dec
out
xor
xchg
lods
out
rol
sbb
add
and
cmc
add
cmp
push
shr
and
jne
sub
jae
fisubrl
aam
push
rcrl
mov
and
push
and
stos
in
repz
lret
daa
insb
pop
push
and
push
pop
repz
add
std
imull
jmp
add
add
add
push
mov
filds
lds
mov
add
cmp
push
lds
inc
jnp
fs
loop
cmp
and
add
lahf
add
inc
fsub
mov
leave
sar
notb
xlat
mov
popa
pop
pop
nop
jo
push
lret
imul
mov
jo
add
push
movsl
loopne
add
add
add
fmull
ret
jl
dec
add
xor
and
pushf
and
xchg
shrl
mov
push
pop
push
nop
jo
mov
or
mov
or
dec
sbb
cmp
sub
mov
adcl
mov
jle
mov
mov
jge
mov
imul
mov
add
add
add
pop
sub
fadd
jp
sub
ljmp
aam
xorb
add
shl
xor
mov
and
addl
lock
mov
or
add
or
add
mov
adc
repz
adc
nop
testb
lock
lea
insl
jno
and
add
add
add
xchg
push
in
stc
add
int
mov
jmp
mov
add
sub
dec
int3
stc
cmp
int3
pop
enter
jbe
arpl
sbb
cltd
dec
fbld
shll
dec
lds
sbb
sub
mov
xchg
add
add
pop
pop
cs
and
rcl
xor
push
loope
int3
dec
inc
fdivs
push
and
clc
add
add
andl
add
xlat
mov
clc
add
fs
dec
fadds
inc
inc
add
inc
inc
add
xchg
inc
add
fwait
into
mov
inc
mov
or
arpl
mov
add
add
add
daa
pop
imul
xlat
adc
and
adc
stos
add
or
lea
lds
push
push
pushf
push
push
xor
psrlw
inc
mov
pop
ljmp
cli
lcall
out
test
and
dec
in
fidivrs
jno
xor
add
add
jne
cli
jmp
pop
ljmp
or
lcall
pusha
movsb
jnp
sbb
jae
cli
and
add
xor
inc
jecxz
and
jmp
aas
cld
dec
pop
negl
movsl
mov
mov
sub
inc
out
sti
push
xlat
jb
and
jb
sarl
lret
add
shl
and
sub
add
add
add
add
lret
xchg
fcmovnb
jnp
sub
int
sti
push
adc
dec
out
stc
lret
sub
xlat
loope
bound
and
sub
mov
pop
pop
gs
mov
mov
mov
out
jle
and
jecxz
iret
pop
add
pop
ds
into
daa
jge
and
jns
fdivr
fiaddl
jmp
xchg
ret
add
add
add
xchg
push
dec
or
insl
mov
fs
hlt
add
leave
sub
clc
or
test
push
dec
out
in
or
fildl
and
or
leave
adc
cmp
mov
lret
lret
dec
push
fcoms
push
push
cmp
cltd
mov
sub
pop
shrb
add
pop
repz
add
add
add
orb
push
xchg
xor
mov
je
call
jmp
dec
push
push
pusha
das
add
or
pop
xor
and
std
cli
inc
insl
pushf
add
cmp
movsb
sti
lahf
jmp
and
int
in
xlat
je
popa
fcoms
xchg
xlat
adc
xor
adc
or
int
add
add
add
filds
fcoms
call
fadds
xchg
inc
add
pushf
inc
lods
mov
inc
or
dec
cmp
psrlw
cld
movsb
and
aas
xchg
out
out
les
pop
fs
imul
and
jge
or
cmpsl
jnp
push
lock
jmp
in
jae
jmp
jae
or
jl
lods
and
add
add
add
jl
aad
xchg
in
cmpb
icebp
das
sub
lret
inc
rcrl
and
mov
lods
add
and
push
xor
inc
lea
xor
mov
lret
jbe
sbb
xchg
jle
or
or
insb
mov
out
ret
inc
mov
mov
xchg
cs
xchg
mov
pop
decl
push
push
inc
inc
add
add
add
sub
push
test
xchg
cld
sti
loop
mov
dec
inc
std
cmc
rcll
xor
packuswb
iret
mov
dec
mov
cmp
incb
lea
push
pop
test
pop
mov
fcompl
pop
jmp
push
push
lods
cltd
sbb
in
rcrl
hlt
pop
pop
pop
aam
outsb
add
add
add
push
add
lret
sub
xchg
push
int
aad
inc
cmp
jo
sbb
das
test
push
cld
and
mov
inc
movsl
xchg
or
leave
and
xchg
lods
pop
or
sub
jmp
jnp
rclb
test
cltd
aam
cmpsl
xchg
push
lods
add
lret
pop
jle
xor
pop
cmp
and
add
add
add
insl
pop
dec
inc
push
pop
sub
dec
fmul
or
mov
xor
mov
jo
call
negl
jo
das
and
cmp
stos
inc
and
pop
push
push
dec
jo
cmp
ret
rolb
in
cltd
stos
je
decl
nop
mov
cwtl
je
mov
jl
dec
fdivr
fisttpll
cwtl
je
add
add
add
out
push
or
sbb
sti
and
and
pop
push
imul
jmp
adc
outsl
imul
pop
jae
aad
jl
and
std
movsb
dec
aad
xchg
fnstenv
cs
icebp
dec
adc
popf
pop
lret
sahf
sub
movsb
sub
stos
mov
mul
clc
sldt
add
add
xchg
insb
or
jne
std
test
aas
xchg
jp
std
inc
push
xchg
cld
movsb
pop
divb
repnz
decl
mov
loope
into
testl
inc
lea
or
dec
aaa
hlt
jne
mov
hlt
ss
cmpsb
pop
or
ret
push
xchg
fistps
enter
mov
lcall
add
dec
inc
inc
add
add
add
mov
loopne
add
xor
pop
inc
pop
adc
mov
scas
inc
dec
mov
in
aad
pop
pop
imull
aam
dec
push
paddq
or
mov
and
out
and
mov
pop
test
movsl
or
push
loope
pop
dec
fstp
dec
cs
or
jecxz
fcmovbe
sub
add
aaa
sahf
pusha
inc
xor
lea
add
add
rolb
and
out
fxtract
inc
dec
dec
in
dec
sbb
and
divl
movl
mov
inc
jle
lods
adc
jmp
inc
mov
arpl
mov
and
xchg
cli
lahf
xchg
pop
and
pop
js
add
inc
sbb
test
lods
and
add
bound
mov
or
add
add
add
fucom
rcrl
or
adc
inc
add
mov
cwtl
push
inc
push
cmc
loopne
push
inc
fs
inc
cli
mov
rolw
mov
call
pop
lods
mov
xchg
pop
mov
cwtl
test
mov
ficomps
in
nop
pop
and
add
add
add
adc
pop
xor
or
in
cmp
xchg
mov
pop
mov
call
ret
inc
in
xchg
mov
add
dec
jbe
les
xchg
jno
or
and
mov
cmp
cld
movsb
add
aas
xchg
shl
and
movsb
xchg
xor
mov
or
and
add
add
add
push
popa
dec
push
mov
pop
mov
adc
mov
lcall
fbstp
add
mov
out
mov
rcr
scas
movsl
adc
out
ds
or
cmp
adc
or
insb
pop
xchg
lret
mov
outsb
add
add
push
adc
test
sbb
mull
hlt
ljmp
add
dec
push
or
hlt
cmp
popw
ds
mov
jmp
lods
xchg
sbb
and
sti
lds
bound
es
xchg
push
xor
xchg
pop
je
ljmp
out
pop
jg
jno
lds
jno
es
xchg
dec
push
movsb
lds
movb
je
out
pop
add
add
jge
fdivr
mulb
sbb
nop
aad
fcmovbe
test
idivb
lods
in
test
mov
mov
les
inc
mov
fmuls
xchg
jecxz
addl
test
inc
add
sub
sbb
insl
ret
push
daa
jae
insb
push
jg
push
sub
xlat
je
push
lods
dec
add
add
add
je
subb
sbb
mov
add
mov
frstor
xor
jge
and
add
add
or
add
push
call
adc
inc
jns
or
jns
or
loop
or
add
mov
inc
cltd
loope
dec
sub
pop
addr16
popf
sahf
and
rorl
ljmp
add
add
add
mov
call
pop
lods
int3
mov
loope
jae
in
movntps
xchg
add
or
test
enter
pop
push
sti
test
mov
xchg
nop
sarl
xchg
stos
pop
jae
or
xchg
xor
popf
enter
pop
adcl
mov
pusha
movsb
mov
pop
int3
add
add
add
add
dec
gs
jg
add
sbb
pop
sbb
ljmp
push
add
pop
cmp
mov
lret
add
loop
adc
mov
int3
out
popa
inc
out
roll
jmp
ljmp
lret
add
dec
mov
jmp
cmp
fcmovne
add
lret
add
add
add
or
inc
inc
lret
pop
and
or
movsb
test
xchg
add
in
mov
or
jmp
pop
mov
lods
fst
inc
lahf
sub
pop
lods
cmpsl
out
cmp
xchg
pop
and
fimuls
cmpsl
xchg
cs
jb
mov
int
push
add
xchg
pop
xor
movsb
test
imul
add
add
mov
jecxz
stc
test
daa
imul
and
int
jae
pop
sbb
mov
dec
add
cwtl
fdivs
test
mov
ret
or
push
xor
xor
incb
mov
in
xor
xor
or
aad
xor
je
add
add
add
in
in
xor
loopne
xlat
lcall
ja
add
lds
jge
mov
xor
stos
icebp
cmc
cmpsl
push
or
aaa
mov
or
or
bound
jle
je
push
cmp
mov
fcomi
mov
mov
jge
jecxz
testb
jns
fs
adcl
add
add
cli
and
out
pop
jo
push
cs
or
sbb
pop
mov
jg
call
or
insl
xchg
cmpsl
repnz
loope
xchg
pop
cmp
popa
pop
xchg
add
out
sbb
pushf
jle
pop
jbe
ds
lods
pop
iret
jl
xor
push
push
inc
adc
pop
adc
jle
push
ret
add
add
imulb
sub
inc
xor
test
sub
test
xchg
xchg
lock
push
mov
mov
adc
sbb
lret
andps
imul
xor
dec
out
mov
nop
popa
sbb
dec
add
xchg
inc
xlat
cmp
repz
cmp
lret
das
and
add
mov
out
inc
jge
pusha
std
xchg
dec
pusha
leave
pushf
pop
and
lds
daa
in
inc
jno
jecxz
das
jmp
jns
and
mov
and
lea
mov
jae
cmp
stos
mov
outsb
nop
arpl
mov
daa
xchg
sbb
outsb
bound
or
jb
andb
mov
fadds
add
add
add
lods
xor
inc
fcom
or
inc
add
mov
cmp
in
in
push
adc
imul
movsl
cmp
test
sub
jle
push
lea
xchg
shl
pushl
dec
and
push
dec
fsub
inc
jo
call
lret
jb
fcomps
je
push
add
add
add
arpl
dec
add
add
icebp
xchg
ds
adc
add
shrb
pusha
lods
add
pusha
mov
mov
and
push
cmpsl
jmp
adc
lock
sub
shlb
adc
jae
ficomps
jmp
or
lock
clc
sub
cs
aas
xchg
xchg
mov
sub
cmp
add
add
add
sbb
pop
fsubr
movsl
jmp
jge
push
or
pop
dec
lods
inc
xchg
xchg
fsub
adc
push
lods
ljmp
movsl
js
das
flds
adc
mov
push
jne
jmp
mov
mov
mov
add
bound
mov
inc
aaa
outsb
sub
cmp
mov
jmp
add
add
add
hlt
inc
jnp
test
add
mov
fisubs
aas
lret
cld
push
jnp
shr
push
push
mov
mov
cld
adc
divb
jbe
es
lret
add
xlat
scas
add
js
in
add
pop
mov
dec
jl
out
mov
dec
push
fnstenv
sarb
movsb
ret
fcomps
add
add
add
aam
ljmp
pop
and
pushf
cmp
inc
addr16
and
adc
idivl
mov
jmp
sarl
jbe
fnstsw
cmpsb
std
outsb
pop
loope
imul
dec
mov
fcoml
mov
push
rcll
dec
xor
ss
test
jle
jmp
or
push
fisttpl
lods
and
add
add
add
jb
test
ss
xor
xchg
das
pop
pop
inc
mov
pop
hlt
push
sub
outsl
mov
mov
std
js
int3
mov
rcl
mov
add
inc
cmp
add
movsl
mov
dec
inc
sub
stos
push
sub
popa
or
mov
mov
mov
lea
add
add
add
xlat
ljmp
les
ret
and
and
cwtl
pushl
mov
mov
testb
adc
and
fldl
sbb
xlat
xchg
jb
jecxz
mov
cmpsl
fistl
fldl
mov
andb
and
or
scas
mov
sbb
add
add
add
xchg
push
and
push
cmpsb
jecxz
pop
and
push
push
into
pop
dec
push
mov
cld
mov
mov
cmp
dec
pop
push
shr
xchg
movsl
sub
or
nop
xchg
scas
subl
insb
nop
pop
fs
inc
mov
push
jo
iret
cmp
mov
aaa
clc
sbb
rcrb
add
add
add
lretw
dec
sidtl
lds
jle
and
decl
int
rorb
das
xor
mov
dec
sbb
xchg
pop
pushf
roll
xor
inc
scas
inc
push
fucomip
xchg
movsb
push
cmp
jmp
inc
sub
or
out
jmp
pop
mov
mov
into
dec
add
add
add
daa
into
call
cmp
jecxz
push
sub
jmp
andl
lahf
test
xchg
pop
push
xchg
or
out
cmp
mov
jecxz
scas
imul
int
nop
pop
lds
cmp
push
cmp
jmp
in
roll
cmpsl
scas
fmuls
outsl
mov
add
add
call
sub
and
push
sbb
xor
jmp
movsl
negb
stos
jl
or
add
enter
push
clc
daa
inc
cmp
mov
add
scas
fcmovu
push
sti
movsl
leave
lods
das
stos
inc
dec
and
movsl
rolb
stos
lds
mov
leave
adc
stos
inc
add
add
add
pushf
sub
dec
xchg
or
dec
pop
aam
out
rcrl
jmp
and
inc
add
out
push
and
or
arpl
adc
nop
jns
scas
stos
pop
or
inc
popa
cld
sahf
add
jmp
movsl
cs
adc
pop
jbe
jbe
sbbl
ljmp
mov
std
std
add
add
add
add
adc
addr16
cs
adc
sbb
add
test
push
pop
cwtl
adc
cs
out
adc
inc
inc
add
mov
lods
int3
mov
cmp
xchg
add
jp
sbbl
lock
push
mov
sahf
aam
fsts
adc
add
das
aas
pop
and
inc
mov
mov
ret
fdiv
test
add
jnp
icebp
jp
lea
out
mov
aaa
push
std
mov
lret
mov
ss
fdivl
iret
jecxz
lret
aam
inc
mov
aaa
outsb
push
mov
fs
mov
push
ret
insb
movsb
mov
in
pop
sbb
push
cmc
jb
dec
xor
fs
add
adc
and
jae
fucomi
adc
mov
push
push
fcmovnbe
int3
xor
push
movsb
jecxz
mov
sbb
sarl
outsb
lods
xor
arpl
aaa
cmpsb
push
push
pop
jmp
dec
or
sub
xor
add
shlb
sub
mov
or
jae
cmp
add
add
add
add
test
shr
push
xor
mov
or
or
imulb
push
sbb
mov
and
inc
push
sbbl
or
stc
dec
cmp
imul
push
sub
enter
dec
fmuls
lods
pop
xor
and
dec
dec
out
enter
inc
stos
lret
xchg
xchg
testl
add
daa
sbbl
mov
jb
outsl
test
inc
lods
xor
out
ret
fs
cli
cmp
cli
mov
cmp
mov
mov
sti
and
sti
and
cmpsb
insl
ret
imul
push
sbb
daa
inc
ljmp
mov
push
repz
add
dec
jne
es
lret
or
pop
shrl
xchg
mov
fcmovbe
and
pop
dec
inc
mov
lret
mov
loope
or
ss
iret
mov
inc
leave
mov
ljmp
or
xchg
mov
stos
sub
xchg
lret
or
inc
adc
adc
add
add
cmp
movsl
push
out
jle
sub
rorl
xchg
out
sbb
add
sahf
mov
in
jp
mov
jmp
pop
orb
xchg
and
adc
dec
rorl
icebp
add
jg
jmp
push
pop
adc
add
sahf
inc
sub
sahf
dec
sub
cmpsb
lods
notb
je
push
mov
or
add
add
add
sahf
sub
sbb
stc
out
jno
xor
mov
xor
xchg
pop
fnstcw
push
lods
stc
push
pop
js
fcmovnbe
jbe
imul
cmc
xchg
mov
xor
bound
xor
add
inc
mov
dec
add
push
push
and
test
fdivr
dec
add
ficomps
mov
xlat
aaa
mov
mulb
add
add
and
jge
call
mov
clc
add
insl
add
add
add
xor
adc
dec
add
and
andb
xlat
aad
daa
test
add
add
inc
add
in
mov
and
mov
add
xchg
sub
call
or
cld
sahf
mov
icebp
cld
add
add
add
lds
cld
mov
dec
adc
and
nop
and
fisttpl
push
cmp
arpl
xor
sqrtps
stos
mov
rclb
xchg
in
pop
cmc
pop
inc
xor
mov
dec
hlt
out
mov
add
mov
adc
fwait
rcrb
cli
pop
sub
push
and
or
stos
cmp
pop
lret
nop
add
add
add
shr
and
mov
xor
jg
lret
add
dec
xor
mov
jmp
mov
incl
ss
subb
fdivrp
movsb
lds
test
addl
push
xlat
mov
mov
add
mov
add
xchg
xlat
movb
pop
push
jb
in
stos
jle
pop
dec
jl
out
pushf
or
add
add
add
push
ret
xlat
movsl
lret
or
out
or
fdivrp
fistpll
outsb
jecxz
cltd
mov
push
sahf
test
sbb
push
loope
sub
icebp
or
fldenv
outsb
sbb
sub
aad
lret
incl
push
int
xor
dec
imul
xchg
sbb
aam
bound
add
add
add
add
adc
jmp
and
dec
xchg
pop
or
es
movsl
mov
jb
pop
lret
fsubr
enter
popa
ljmp
ret
push
or
lret
sbb
and
mov
outsb
xor
inc
jae
cmpsb
mov
or
inc
add
test
lods
dec
xchg
inc
mov
je
inc
mov
imul
call
jl
and
popa
ljmp
pop
add
imul
popa
jae
add
jae
add
inc
test
add
push
loopne
sbb
xor
jns
or
hlt
mov
stos
movb
cmp
mov
and
out
dec
pop
add
mov
or
add
call
sbbb
call
test
stos
dec
jne
or
adc
and
rorb
add
lahf
or
push
and
mov
mov
xor
enter
add
pop
jne
cmpsl
pop
insl
pop
pop
lea
ljmp
jecxz
mov
jecxz
addb
add
add
test
lret
mov
add
xchg
cld
aas
xchg
lret
jecxz
add
mov
mov
xchg
and
int
dec
cmp
sub
mov
jecxz
mov
jecxz
mov
sub
push
jle
loopne
cld
outsb
mov
mov
jb
roll
lret
cs
jp
fisttps
pop
lret
add
add
add
add
jo
leave
mov
and
ret
andb
and
xor
rorb
addr16
jmp
push
sub
jmp
xor
lcall
adc
daa
bound
dec
call
pop
and
or
sbb
push
jnp
and
xchg
or
cmp
adc
out
xchg
push
dec
and
add
add
add
or
lcall
sub
je
xchg
int
movsl
mov
sub
add
dec
adc
andb
xlat
adc
cmp
sub
cld
dec
or
lods
adc
loope
addr16
pop
mov
xchg
mov
adc
aam
push
add
in
sub
mov
repz
lods
mov
add
add
inc
add
add
jg
ljmp
and
xorl
sti
out
mov
rep
loope
xor
bound
arpl
sbb
fs
aas
sbb
xchg
pop
xchg
sbb
xor
in
adc
sub
adc
sub
mov
inc
fmull
push
or
in
and
xchg
add
add
add
xchg
push
and
adc
xchg
movsl
xchg
and
mov
adc
mov
ds
pop
jae
les
mov
ss
mov
inc
faddl
push
out
adc
mov
in
adc
inc
adc
xchg
cmp
jge
cld
mov
ror
sbb
movsb
out
jmp
add
orb
push
ror
add
dec
lret
dec
roll
add
dec
push
lret
add
fildll
pop
dec
mov
inc
inc
xchg
adcb
jne
inc
fistpll
mov
enter
call
dec
sub
adc
leave
mov
ret
push
loopne
mov
add
sub
push
inc
roll
xchg
xor
push
jecxz
sub
xchg
pop
jbe
mov
add
add
add
xchg
call
xchg
pop
fldcw
sbb
fdivr
pop
test
jb
jecxz
in
add
test
xchg
pop
and
inc
jmp
insb
inc
out
jno
dec
jmp
out
sahf
pop
xor
add
and
loop
xor
and
call
or
fldl
roll
xor
or
ljmp
add
add
add
mov
popa
shr
push
add
push
add
lret
push
sbb
nop
xchg
xor
clc
cmp
je
arpl
mov
or
pusha
xchg
pop
add
jo
push
dec
dec
add
sbbb
add
push
lods
dec
push
rcrb
or
test
adc
js
loop
xchg
adc
daa
pushl
add
add
cs
cmp
movsl
rcl
lods
dec
test
rcrb
sbb
pushf
inc
sbb
xchg
xor
jge
cmp
pop
push
hlt
mov
push
clc
inc
adc
xchg
or
cmp
test
arpl
mov
adc
jae
and
dec
insl
or
mov
dec
push
cwtl
xchg
dec
xor
add
int
in
xor
cwtl
and
cs
inc
lods
ficoml
mov
mov
sub
mov
adc
insl
add
pop
insl
pop
pop
dec
shr
add
xchg
mov
adc
loop
and
jg
jmp
sbb
lret
int3
push
lock
fcoml
dec
stc
xchg
push
jmp
testb
add
add
xlat
das
xchg
lcall
arpl
std
pop
lret
jle
das
lds
mov
mov
jmp
dec
dec
mov
lret
add
lret
fcomps
xor
pop
mov
or
mov
icebp
sbb
lret
es
lretw
add
push
fistps
stc
sar
push
and
test
stos
add
jmp
ret
cltd
dec
adc
add
add
add
sub
jb
and
sub
and
mov
ja
fsubrs
cltd
cmp
sub
andb
xchg
and
cmc
jg
and
cmp
fsub
test
ret
cmc
mov
movsl
outsb
sti
lret
scas
les
fdivs
test
pop
out
test
fimuls
mov
add
pop
scas
inc
mov
lahf
rolb
add
add
aaa
mov
push
dec
daa
xchg
lret
sub
and
mov
lret
push
push
imul
in
pop
daa
mov
movsb
loopne
fsubrl
cmp
xlat
sbb
inc
push
stos
enter
add
or
incl
cmpsb
imul
push
stos
int
lds
sub
and
incb
seto
jmp
and
add
rol
or
add
add
add
inc
cmp
inc
adc
add
sbb
stos
xor
push
insl
adc
xchg
xor
int
shl
into
and
bound
dec
loopne
enter
cld
jbe
imulb
push
int3
stc
enter
imul
add
das
and
fdivs
and
sbb
xchg
int3
ss
mov
add
add
add
pop
jae
sbb
dec
xchg
push
and
xchg
mov
pushl
push
add
lock
inc
lods
push
pop
inc
mov
repz
cmp
lret
xchg
pushf
rcr
sbb
nop
gs
rclb
and
out
movl
push
and
inc
shr
fldl
sbb
jp
mov
add
and
add
enter
add
add
add
mov
cs
jmp
aam
fsubrl
mov
scas
pop
lea
andl
fucomp
xchg
outsl
sbb
ror
add
lret
fimuls
outsl
and
nop
xchg
sub
push
lret
add
and
jecxz
ret
dec
or
addr16
mov
int3
dec
popf
loope
fcmovbe
loopne
sub
add
add
add
and
adc
dec
fsubrs
push
cltd
adc
jb
add
jmp
daa
std
insb
xchg
pop
sub
push
scas
and
gs
and
sub
xchg
pop
movsl
sahf
xchg
fsts
adc
add
xor
inc
fs
sbb
or
xchg
andl
stc
add
add
add
pop
in
movsb
shl
dec
add
add
fisttps
fsubrs
mov
xlat
lcall
idivl
inc
les
stos
sldt
out
mov
jmp
and
sbb
and
mov
add
inc
test
arpl
xchg
mov
pop
add
and
pop
mov
jne
or
icebp
xchg
scas
gs
add
add
add
push
sbb
filds
and
push
and
pop
call
xchg
arpl
cld
pushf
dec
xor
in
jmp
pop
push
repz
jmp
inc
inc
add
cltd
or
dec
lea
mov
ret
xchg
xor
test
xchg
out
rorl
mov
mov
cltd
mov
pop
dec
add
add
add
bound
pop
addr16
das
and
inc
enter
pop
lret
adcb
inc
add
jae
jle
lret
jo
sub
xor
inc
movb
js
xor
dec
dec
sbb
enter
shl
cs
xchg
pop
push
rcrl
mov
nop
dec
jmp
out
in
subl
xorl
add
add
nop
or
nop
rcrb
inc
gs
orl
imul
jle
scas
adc
pop
jae
leave
pop
and
push
pop
dec
cmpsb
hlt
or
jb
movsb
in
jmp
sbb
insl
aad
adc
fdecstp
stos
int3
fcom
cmc
arpl
bound
fdivrs
fs
sbb
jmp
add
add
add
xchg
and
pop
pop
fstps
inc
bound
das
xor
mov
sbb
mov
dec
lret
xchg
cld
sbb
arpl
mov
outsb
jb
mov
xlat
mov
fsubl
add
and
enter
mov
lcall
adc
outsb
pop
stos
inc
push
decb
mov
add
add
add
scas
mov
mov
jmp
cmp
outsb
push
mov
inc
add
mov
add
sbb
mov
inc
int3
cmp
mov
sub
mov
daa
xor
test
cmp
jne
mov
and
test
xor
inc
xchg
sbb
mov
fstps
add
add
add
sbb
jecxz
incb
icebp
test
in
dec
aam
or
mov
push
push
adc
xor
fldcw
mov
cmp
sub
pop
std
movsl
insb
orb
mov
das
and
mov
cwtl
and
clc
mov
lock
bound
cwtl
nop
nop
xor
ja
cwtl
and
xor
lods
cmp
add
add
add
and
int3
add
jecxz
rorl
lret
push
call
movsl
lea
sbb
ja
add
mov
dec
push
cmpl
adc
xchg
jle
cli
scas
lds
cmpsb
fistps
sbb
inc
ret
cwtl
adc
test
shlb
or
jecxz
sbb
add
add
add
int3
ficoms
jmp
test
fwait
jp
lret
pop
lret
add
scas
and
push
mov
mov
lods
fimuls
int3
daa
or
fadds
pusha
sub
xchg
pop
scas
lods
mov
mov
loop,pt
jne
fsubs
adc
push
or
fsubr
adc
push
sbb
lea
inc
stc
push
sbb
clc
add
add
add
fiaddl
in
sbb
jmp
cmpl
or
xchg
pop
jns
fdivrs
je
cld
cmp
lods
add
sub
call
jno
mov
pop
sar
add
test
roll
cld
push
fidivrs
ljmp
push
adc
xor
js
add
add
add
fadds
stos
inc
push
or
adc
sbb
and
out
repz
cmp
lret
enter
mov
push
and
or
adc
or
add
fldenv
sbb
jmp
and
aas
test
into
sub
and
imul
into
arpl
jg
add
add
add
fwait
nop
sti
inc
mov
decb
in
cmp
jl
orl
and
int3
or
mov
sti
push
jo
cld
movsb
pusha
es
xchg
cmp
xchg
lret
sbb
sti
cs
pop
pop
push
push
decl
jecxz
dec
xlat
ljmp
adc
mov
inc
mov
mov
add
repnz
fimull
pop
lret
sbb
lods
dec
data16
dec
and
pushf
cmpsl
cltd
mov
rcrl
int3
push
int3
lret
sar
mov
jnp
xchg
test
lea
xchg
into
pop
xor
and
mov
pop
sti
stos
or
lcall
dec
roll
dec
rcll
faddl
xchg
pop
out
dec
lret
roll
add
add
add
or
lret
fadds
dec
in
and
daa
cmp
lret
pop
leave
daa
in
leave
sub
stos
insb
test
xchg
jle
jne
push
pop
sbb
mov
inc
mov
sbb
je
jg
cmpsl
dec
inc
sub
or
pop
jne
dec
jg
mov
stos
fistpl
int
add
xchg
add
add
add
lea
lds
jmp
fimuls
push
sub
push
and
adc
aas
mov
add
clc
xchg
shrb
and
call
scas
xlat
ljmp
test
fs
in
dec
add
je
jle
jne
test
push
dec
jae
popa
test
daa
inc
add
add
add
mov
jge
sub
cmp
dec
add
sub
adc
push
shlb
jo
and
push
xor
and
jo
mov
fisubrs
sub
lods
mov
and
enter
mov
sub
stos
fwait
and
jne
pop
inc
out
mov
xor
or
mov
testb
add
add
dec
dec
enter
imul
scas
and
or
cmp
rcrb
and
xchg
lcall
mov
movsl
cmp
andl
and
jae
push
int3
add
jmp
add
mov
mov
adc
popf
sub
add
xchg
adc
jmp
lret
lret
jge
mov
repnz
add
adc
lods
movsl
scas
and
sub
sarl
push
lret
add
mov
scas
lock
add
mov
bound
cmp
or
ja
lret
jmp
xchg
add
add
lret
add
inc
fbstp
sub
xchg
pop
lods
mov
add
add
add
xchg
fimuls
pop
and
xchg
add
mov
jge
jmp
leave
in
cmp
cmpsb
gs
cld
pop
jmp
jmp
cmc
arpl
sbb
jecxz
add
arpl
mov
xchg
pop
adc
movsl
scas
mov
and
imull
jg
jg
gs
fldenv
push
out
mov
sahf
adc
imul
add
add
arpl
or
je
pop
xlat
adc
xchg
outsb
stos
push
cmp
sbb
lods
add
jge
mov
pop
adc
stc
fsubr
push
dec
ds
outsb
repz
sbbl
dec
and
xor
add
pop
lods
push
les
into
and
mov
aas
mov
push
lock
incb
add
add
add
rorb
dec
outsl
and
pusha
loop
push
push
dec
add
jl
pop
sub
and
mov
push
and
and
imul
cmp
mov
cs
mov
sub
fs
outsl
jmp
jle
dec
sub
xchg
popa
outsb
adc
adc
and
outsl
test
add
add
dec
push
lods
inc
xchg
adc
out
or
call
and
pop
xor
adc
or
mov
sbb
sbb
or
rcrb
push
enter
mov
hlt
mov
sahf
pop
inc
inc
test
enter
mov
jecxz
add
hlt
add
popw
dec
inc
lea
add
add
cmp
je
push
xchg
mov
mov
xchg
pop
inc
mov
ja
mov
mov
pop
push
pop
mov
lcall
add
add
or
add
fisttps
xchg
or
mov
addr16
cltd
pop
and
or
pop
jmp
jbe
outsl
int
fsub
mov
add
add
add
test
or
and
adc
decl
xchg
jmp
les
jmp
icebp
fdivs
adc
sub
xchg
pop
jae
adc
pop
call
add
lcall
sar
adc
pushl
pop
and
mov
mov
out
fcomps
jmp
aaa
jg
and
add
add
add
add
repz
cld
lock
test
push
inc
incl
icebp
xor
test
stos
add
and
adc
or
cmp
filds
pop
add
or
cmp
mov
lea
add
test
cwtl
push
nop
lock
add
push
imul
mov
add
add
add
orps
push
mov
cmpsl
add
push
testl
and
mov
xchg
leave
jp
fcompl
test
add
cmc
fldenv
fnstenv
dec
add
clc
jae
xchg
ret
mov
movsl
pop
add
sub
adc
and
mov
add
add
xchg
and
shll
mov
xchg
mov
std
push
lods
dec
test
pop
adc
ret
imul
and
pop
jae
sbb
lret
mov
xchg
pop
lret
mov
lret
add
jae
add
jecxz
mov
jecxz
stos
fiadds
lret
add
jl
fistpll
icebp
mov
mov
add
inc
test
add
add
add
pop
jne
fimuls
jle
pop
lret
add
mov
shlb
lods
sahf
scas
sbb
push
jecxz
mov
ret
stos
pop
lret
add
adc
inc
pop
and
add
fadds
mov
pop
scas
movsb
sahf
test
out
jg
jmp
xsavec
add
pop
out
nop
and
xchg
mov
lods
add
add
add
addr16
and
lcall
or
mov
mov
push
cmc
stos
jmp
pop
jae
adc
cmpsl
jmp
pop
movsl
stos
nop
mov
xor
icebp
mov
arpl
adc
fs
fsubr
sbb
lods
sub
add
sub
jg
add
adc
js
mov
movsl
leave
movsl
clc
ret
and
add
add
add
daa
add
push
mov
jno
jg
and
push
sarb
and
jno
add
add
xchg
cmp
mov
daa
dec
inc
sub
push
fdivl
and
faddl
cmpl
add
add
mov
and
push
pop
inc
mov
gs
jle
and
add
add
add
cmpsl
and
cmp
xchg
or
imul
pushf
mov
jne
cmpsl
dec
insl
adc
jg
lock
insl
testl
shl
mov
or
mov
xor
and
repz
sbb
addr16
push
js
and
cmp
add
add
add
sahf
insb
mov
push
icebp
cli
jnp
cld
lea
pop
dec
rclb
sub
mov
jmp
mov
or
test
add
dec
loope
jg
jmp
nop
jb
push
shlb
rcl
push
and
loopne
shr
push
lcall
inc
int
shrb
and
dec
pop
int
or
into
mov
add
add
add
test
push
inc
inc
test
inc
enter
mov
shrb
popa
mov
sbb
add
xor
test
icebp
jge
pusha
call
add
push
loop
mov
push
mov
xchg
popa
jmp
imul
fistl
pusha
sub
dec
and
sub
add
add
add
add
je
sub
lea
sarb
push
mov
or
dec
add
add
mov
jmp
push
test
jb
sub
add
inc
in
out
lea
test
add
or
je
jecxz
xor
mov
and
cwtl
mov
fcoms
inc
movl
add
add
dec
movsb
stc
daa
or
mov
and
test
adc
ret
add
imul
jns
js
addr16
in
out
and
push
pop
add
cmp
and
pop
cmp
inc
sub
fdivr
aaa
test
jo
imul
sbb
xchg
fnsave
call
test
outsb
decb
and
pop
add
add
add
cli
icebp
out
mov
jmp
js
and
in
outsb
test
shll
adc
inc
xchg
push
mov
xchg
jecxz
imul
shlb
icebp
loop
call
sub
arpl
imul
fbld
lods
insl
sub
xchg
insb
outsb
ds
xor
aam
mov
adc
add
push
or
cmc
push
or
add
sub
mov
hlt
sarl
sub
sbb
mov
sbb
or
mov
and
mov
lret
add
add
jl
fildl
or
jb
mov
scas
add
jl
out
in
sahf
add
jb
push
cwtl
mov
jecxz
fimuls
or
rol
jl
mov
sbb
cld
push
adc
dec
and
add
dec
xchg
mov
jge
out
gs
inc
add
ss
sbb
xor
out
and
movsl
dec
add
jp
xchg
out
xchg
ficoms
add
push
nop
daa
out
lock
scas
pop
ljmp
xchg
js
mov
ljmp
xorl
bound
dec
pop
add
add
add
addl
sub
out
push
mov
inc
xchg
adc
jp
js
insl
lock
rorb
cli
pop
mov
mov
add
add
cmp
sbbl
and
fdivs
lods
into
shr
sar
iret
mov
mov
mov
cmp
sbb
add
das
mov
and
jne
daa
add
fistl
mov
jp
xor
xchg
xlat
test
adc
dec
fistl
into
ret
push
or
xor
xlat
ljmp
iret
retw
into
shr
lock
mov
sbb
in
repnz
out
inc
sbb
fisubl
std
add
add
add
pushf
adc
aas
xchg
insl
cmp
movsl
lret
and
rcrl
and
inc
inc
mov
insl
sarb
lock
and
enter
add
icebp
movsb
push
jne
pop
dec
insl
push
pop
int
adc
xchg
jae
and
inc
push
mov
je
lret
or
mov
sbb
enter
add
add
add
bound
or
add
and
shlb
and
inc
out
pop
dec
and
out
mov
push
inc
mov
xchg
add
enter
enter
enter
leave
adc
or
or
cmp
cmpsb
pop
inc
mov
scas
cmpsb
mov
lea
mov
movsl
popl
add
add
inc
dec
or
xchg
jge
inc
adc
in
je
sub
mov
ss
je
push
sub
push
shlb
test
sbb
cmp
fmull
fsubrl
add
adc
push
lock
ret
pop
sar
or
and
jecxz
and
cmp
in
add
add
add
cli
xor
lea
arpl
sub
xchg
pop
and
adcb
add
or
pusha
ds
xlat
push
faddp
add
inc
sub
pushf
add
add
mov
dec
sbb
loope
pop
icebp
jl
dec
or
mov
add
nop
push
mov
idivl
push
out
and
push
loop
xchg
add
arpl
dec
pop
add
add
add
arpl
and
int
jne
mov
inc
int3
loopne
adcl
dec
int3
fdivrs
mov
mov
sbb
mov
adc
pop
faddl
xchg
stos
notl
fiaddl
ljmp
push
lret
push
and
jno
add
cwtl
mov
jmp
sub
sbb
out
pushf
notl
add
add
add
or
xchg
out
sub
push
fstpl
pop
test
cmp
hlt
push
mov
sahf
call
in
test
sbb
les
or
les
add
les
sbb
les
mov
push
fiaddl
test
int
or
data16
mov
push
cmp
pop
jne
pop
sti
push
into
add
add
add
push
jne
jle
bndstx
or
or
xor
and
scas
cmp
fwait
cs
and
orb
js
xchg
in
pop
jae
or
cli
ficoms
idiv
xchg
or
test
inc
scas
les
loopne
or
jge
ret
sbb
xchg
out
and
psubq
bound
add
add
add
pop
loop
xchg
push
stos
pop
inc
lea
inc
sti
xor
arpl
and
xchg
test
mov
test
mov
xchg
nop
out
aas
fistpll
xchg
mov
xchg
jbe
lahf
fdivs
movsl
xchg
push
xlat
faddl
cli
mov
push
in
xchg
jno
inc
and
out
fsubrp
out
pusha
jmp
insb
cli
mov
cld
add
add
add
stos
sbb
outsb
xchg
dec
and
movsb
ljmp
test
jmp
sti
fldcw
pop
stos
mov
mov
rcl
cmp
in
ds
test
cmp
ret
jnp
pop
sub
and
rcl
pop
add
jp
je
jl
call
jae
mov
mov
add
add
add
scas
sub
jecxz
lods
lods
jo
lds
inc
call
xor
push
push
jle
add
out
xchg
xchg
pop
dec
xchg
sub
add
cmp
mov
push
in
xchg
push
imul
adc
insl
pop
cld
mov
push
out
repnz
sbb
lds
add
add
add
or
mov
push
mov
xlat
imul
cmp
jno
insl
lahf
and
out
and
jns
ficoms
cld
pushf
push
mov
ja
pop
or
or
xchg
pop
inc
mov
sbb
dec
fildll
mov
adc
inc
sbb
pop
int
mov
push
xlat
add
add
add
xchg
pop
int
xchg
cmp
ret
inc
sub
or
add
lods
mov
mov
xor
cmpl
push
dec
dec
jmp
jp
jg
loopne
jg
add
rorb
fildll
out
dec
inc
bound
push
in
jmp
lea
push
repz
int3
sbb
jae
fisubrs
mov
add
add
ss
dec
jp
arpl
adc
jp
dec
and
add
lods
jg
add
lret
xchg
or
xchg
pop
stos
call
adc
xlat
pushf
pop
jg
shrl
xlat
adc
and
cltd
mov
loope
pop
mov
mov
mov
fisttps
jne
jmp
add
add
add
out
xlat
fisttpl
pop
movsl
mov
lods
and
adc
mov
aaa
jbe
jo
sbb
jno
and
mov
jno
dec
jbe
je
ret
insl
sarl
lock
mov
sbb
outsl
sub
lods
mov
dec
pop
add
jo
sub
or
adc
add
add
add
push
or
clc
outsl
jmp
add
out
push
sbb
sahf
mov
xchg
xor
sti
cmp
cmpsb
push
mov
lods
outsl
sti
scas
arpl
jne
imul
orb
jne
gs
adc
shll
sti
cld
test
and
imul
sub
fisubs
test
add
add
add
xor
mov
sub
mov
sub
fisubs
add
jnp
das
rcrl
jo
or
hlt
pop
pop
jle
sub
inc
int
nop
hlt
sbb
jne
mov
inc
sub
jmp
xacquire
or
dec
add
pop
dec
jg
pop
int
inc
jnp
nop
cli
add
add
add
add
add
test
or
aad
xchg
pop
inc
push
lods
pop
inc
aad
mov
xchg
pop
push
outsl
jne
mov
add
mov
mov
enter
pop
int
lds
in
ds
jp
fidivs
and
dec
adc
add
adc
pop
and
adc
add
add
add
or
add
and
imul
sbb
or
mov
push
fdivrs
mov
mov
rolb
mov
add
lods
sub
jne
jo
jne
mov
jb
sub
int
xlat
cld
cmp
fs
push
and
xor
jge
add
mov
push
mov
add
add
add
xor
call
sub
push
xor
mov
test
cmp
mov
add
and
push
dec
or
jp
call
adc
jge
or
iret
sbb
imul
pop
xchg
mov
je
mov
sub
push
outsl
sbb
adc
add
add
add
add
add
shrb
sti
push
insb
jecxz
mov
jp
lea
or
add
fisubs
out
push
test
mov
and
xchg
addr16
add
pop
sub
xchg
fisubs
xchg
test
push
mov
lret
push
rcr
jp
out
loop
xchg
sbb
js
adc
add
add
add
sti
je
cli
stos
lret
push
mov
adc
aas
inc
rolb
nop
pop
mov
dec
add
roll
pop
pushf
push
scas
push
xor
imul
or
test
out
out
gs
mov
out
sbb
mov
out
jmp
pop
ret
adc
add
add
add
sbb
inc
hlt
or
fnstenv
outsl
std
add
pop
cmp
std
push
addb
fdiv
popl
imul
dec
and
aas
rep
and
rcll
pop
xor
or
ss
mov
popa
cmc
xchg
out
insb
or
ss
xchg
leave
popa
cmc
xchg
outsb
add
in
stos
sub
add
add
add
dec
jmp
ds
lret
dec
mov
adc
sti
push
pop
jnp
inc
dec
loop
xchg
push
stos
jge
fdivrl
pop
jge
fidivrl
outsb
sbb
inc
and
pushl
jae
mov
xor
push
pop
xlat
hlt
arpl
cmp
test
cmp
mov
sub
mov
mov
add
add
add
add
pusha
pusha
add
test
je
loop
xor
or
or
push
test
call
aaa
and
inc
cli
mov
aaa
mov
sti
scas
rolb
int3
cmp
or
call
xor
jp
sub
rorl
js
and
xchg
xlat
addb
dec
pop
in
inc
addb
add
add
mov
stos
sub
in
add
lods
lods
in
adc
ss
data16
xchg
pop
dec
stc
cmc
push
cmp
xchg
dec
and
rcr
jne
fsubrp
xchg
sqrtps
lods
push
mov
roll
xchg
fisubs
add
movsl
cmpsl
lret
mov
pop
loopne
jnp
gs
test
lea
add
add
add
jp
sti
or
ds
or
lock
push
jecxz
pop
pop
jns
xchg
orb
hlt
aaa
int
adc
dec
cmpsl
int3
out
fmulp
cld
sub
insb
pushf
mov
int
data16
cmp
call
push
jbe
mov
xchg
xchg
add
inc
cltd
jns
pop
call
jg
and
leave
roll
sbbb
add
insl
stc
add
imul
sbb
adc
pop
scas
cmpsb
push
popf
jle
add
and
add
cmp
or
mov
jne
insb
push
je
jb
add
dec
pop
xor
nop
push
in
je
cwtl
pop
mov
xlat
enter
and
and
orl
aam
push
pop
test
add
add
add
adc
je
push
mov
lea
sub
rolb
push
push
pop
and
mov
sahf
cwtl
sub
pop
outsb
sahf
mov
xor
lea
xor
push
or
jae
pop
jnp
pop
adc
sbb
and
and
xlat
roll
push
faddp
add
push
ds
add
popf
cmp
pop
adcb
hlt
dec
out
push
sub
fsubrs
je
pop
cmp
jno
and
insl
sub
push
mov
jge
push
xor
adc
pop
adc
divl
pop
fcmovnbe
xchg
cmp
lahf
inc
test
mov
enter
and
fists
fst
add
add
add
or
sahf
data16
callw
or
sub
hlt
mov
sahf
push
rorb
dec
push
sbb
rcrl
divl
lock
icebp
push
sub
adc
or
inc
add
mov
and
push
mov
or
addr16
dec
or
lea
adc
add
add
add
fists
dec
mov
mov
jp
loope
inc
orb
push
dec
xchg
int3
push
push
inc
call
and
bound
add
dec
push
sub
test
in
adc
mov
push
mov
fadd
leave
add
xor
mulb
stc
mov
in
inc
aaa
adc
add
add
add
roll
push
test
fbld
arpl
and
in
jnp
stos
mov
jmp
lahf
loop
lds
dec
and
xchg
out
inc
jno
pop
int3
mov
outsl
pusha
jmp
ss
fisubrs
adc
or
fimuls
and
insb
fstps
push
pop
adc
pop
ja
push
add
add
add
push
inc
stos
adc
leave
jne
insl
add
cmp
cli
fiadds
insb
inc
sub
out
cmp
mov
jbe
andl
pop
xor
cmp
dec
add
inc
add
and
mov
mov
jecxz
dec
xor
mov
sbb
ret
and
rorb
lock
dec
lock
dec
add
add
add
std
add
or
int3
jmp
push
push
add
jae
inc
inc
push
enter
mov
adc
cs
sahf
inc
fsubl
loopne
sub
and
out
jb
xchg
inc
sub
int3
fbld
add
push
enter
rolb
fs
inc
xchg
or
xchg
sbb
pushl
leave
add
add
add
add
jecxz
sti
fdivrl
pop
add
pop
lea
outsl
and
xchg
pushf
shlb
mov
sar
push
lods
lret
sbb
lret
pusha
and
shl
jge
inc
adc
pop
dec
inc
xchg
adc
jae
adc
pop
xchg
push
lret
out
lods
ret
repnz
ficompl
movsb
sub
pop
stc
pop
mov
adc
push
add
add
add
out
cmp
inc
nop
adc
adc
push
std
add
cmp
fsubl
roll
adc
int
and
pop
xchg
pop
push
in
popf
stc
xchg
pop
inc
in
or
icebp
sbb
test
cwtl
call
pop
xchg
repnz
aaa
and
jg
fstp
repnz
and
add
add
add
imul
and
pop
adc
bound
mov
rcrl
jmp
test
push
fldln2
orb
loopne
cmc
cmp
je
pop
int3
sub
loopne
jne
incb
mov
pop
iret
dec
and
out
add
fstpl
cmc
or
daa
and
and
sbb
and
pop
mov
jmp
push
arpl
add
add
add
xchg
cmp
scas
jle
mov
int
fidivs
sbb
mov
inc
out
and
and
inc
and
movsb
loopne
dec
mov
xlat
out
and
push
adc
test
add
jne
add
push
psllq
add
push
jecxz
fistl
add
add
add
in
pop
adc
pop
add
sbb
inc
sub
jae
sbb
push
les
int3
call
mov
jns
sbb
pushf
and
call
cltd
aam
popa
insl
in
or
subb
jmp
sti
gs
xlat
cli
pop
adc
sti
inc
or
call
rcrb
pop
in
adc
xchg
mov
cmp
add
add
add
xchg
icebp
sahf
push
nop
out
and
lcall
mov
jno
les
push
pop
enter
sti
ds
jecxz
or
and
xchg
mov
xchg
sbb
sub
stos
and
jl
test
or
mov
adc
pop
int
xchg
pop
dec
inc
xchg
mov
testb
xchg
pop
int
add
add
add
push
shl
shufps
mov
adc
xchg
pop
int
pop
xor
add
or
add
hlt
leave
sbb
jae
mov
jl
xorl
xchg
out
in
xchg
pop
dec
in
dec
loopne
xchg
aaa
pop
sahf
movl
pop
inc
les
xchg
fistpll
out
pop
int3
fsubs
pop
and
aad
sbb
adc
add
add
pop
int3
add
push
and
int
or
icebp
adc
clc
push
pop
int3
shlb
pop
xor
pop
xor
push
push
repnz
or
dec
pop
and
push
jnp
and
mov
and
mov
jb
jecxz
mov
push
pop
enter
outsb
mov
jns
pusha
or
add
add
add
into
pop
ja
mov
pop
sub
pusha
popa
icebp
mov
cmp
push
nop
imul
jb
mov
int3
cmp
inc
add
xor
dec
and
clc
pop
push
xor
xor
shl
addr16
inc
in
fistl
fwait
mov
jl
out
shrb
inc
push
pop
pusha
and
cmp
je
adc
push
add
add
add
lea
cmp
xchg
jne
pop
in
cld
and
pusha
and
loope
ret
dec
or
and
mov
inc
imul
call
shlb
dec
pop
push
lock
test
iret
je
addr16
shll
jae
mov
xor
popa
lock
add
add
add
dec
leave
sti
jl
xor
pop
lret
test
cmovne
jno
sar
jb
ja
xchg
pop
push
sahf
rcr
pop
cmp
add
call
scas
loopne
ja
xchg
int3
fmuls
fldl
xor
cmp
shlb
roll
test
pusha
dec
pop
insb
xlat
test
mov
add
add
add
xor
testl
pop
lods
sbb
inc
int
or
add
fcmovnu
inc
xchg
test
addr16
pop
lods
enter
cmpsb
jmp
call
inc
xchg
test
addr16
insb
add
inc
int
pop
push
icebp
inc
xchg
test
xchg
out
inc
and
xor
arpl
out
out
inc
movsl
xchg
cmpsb
xor
rolb
adcl
and
and
push
inc
lods
add
add
add
xchg
cmpsb
fcom
push
pop
addl
inc
and
mov
arpl
das
das
inc
movsl
xchg
cmpsb
xor
push
pop
add
inc
and
adc
dec
inc
sub
push
pop
xorl
inc
and
data16
out
outsb
inc
and
push
pop
xorl
inc
and
mov
arpl
aaa
nop
inc
sub
rolb
addl
cmp
leave
and
inc
push
add
add
add
je
inc
and
lock
or
xor
mov
test
and
cmpb
add
jmp
inc
clc
mov
test
cmp
pop
stos
xor
mov
test
in
and
nop
cmp
or
gs
test
and
nop
cmp
or
add
add
add
mov
test
test
mov
xchg
dec
rclb
lock
and
repnz
jbe
xchg
push
adc
lods
lods
and
bnd
xchg
aaa
push
adc
bound
insb
lods
fdivl
or
fnsave
xor
and
test
inc
xchg
popf
icebp
xchg
data16
mov
add
add
add
push
inc
insl
aam
leave
sbb
add
sbb
mov
loope
rcr
inc
cld
pop
icebp
pop
mov
add
add
rcll
int3
push
pop
repz
roll
dec
mov
push
fimull
jl
and
jl
and
jge
and
inc
sahf
stc
jp
and
jp
and
sub
btc
add
add
add
xchg
or
xchg
pop
int
push
cmp
cli
smsw
push
lea
out
or
cs
jo
insb
xchg
or
lea
jg
in
add
insb
adc
popa
xor
rorb
lret
shr
dec
cmp
insb
fcoml
and
lret
cs
push
push
jb
rep
mov
add
add
add
cmp
jmp
aam
lods
cmpsl
mov
jecxz
clc
mov
cmp
testb
xchg
aaa
xlat
hlt
dec
cmc
arpl
adc
sub
repz
xchg
sub
inc
push
cmp
inc
cltd
sub
inc
xor
and
fwait
int3
inc
adcl
decb
mov
sub
pop
dec
add
add
add
add
loopne
mov
and
and
enter
push
push
stos
loopne
jb
in
push
and
push
jmp
rclb
call
push
in
sub
out
inc
daa
dec
jns
mov
inc
lahf
icebp
aas
push
jb
cmp
out
inc
sbb
call
insb
lret
cmp
pop
and
or
inc
adc
sub
dec
in
jge
add
add
add
sahf
adc
adc
daa
pop
cmpsl
and
jg
mov
inc
mov
add
fcomps
mov
roll
iret
fdivrs
or
sbb
xor
add
frstor
jp
push
pop
shrl
cmp
push
add
insb
loopne
mov
jle
data16
pop
lret
jmp
popf
popa
mov
mov
or
add
add
add
mov
mov
jl
movsl
popa
jecxz
test
pop
mov
scas
xchg
dec
lea
int
inc
cmp
imul
stc
scas
aaa
inc
xchg
adcb
xchg
pop
movsl
jecxz
aam
jle
pop
aad
push
cmp
int
int
std
push
or
sub
aad
push
sub
and
roll
inc
fistpl
popa
rcr
add
add
add
sbb
jbe
sub
fistl
enter
pop
int
push
push
js
mov
push
add
push
xchg
mov
jmp
jmp
jns
xor
push
mov
xchg
fstps
mov
insb
fldcw
sbb
push
ror
xchg
pop
and
dec
pop
xor
int
lea
icebp
or
push
cmpsl
imul
add
add
add
ficomps
and
cli
subl
dec
xor
and
mov
aaa
stos
aaa
in
xlat
push
repnz
insb
es
insl
push
add
iret
add
push
sub
xor
call
xlat
jae
jecxz
dec
call
push
and
dec
add
sub
add
add
add
testl
push
adc
clc
test
push
xlat
sahf
add
and
data16
and
pop
jno
adc
inc
sub
mov
mov
add
push
xchg
inc
iret
iret
cmpsl
adc
pop
lahf
lock
push
or
or
fsubrl
inc
xchg
sbb
test
adc
sbb
bound
jne
les
add
add
add
and
shr
and
sarl
pop
and
enter
xor
int
sub
popf
fisubs
add
cld
or
sbb
sarb
test
repnz
jl
leave
mov
inc
movsb
lods
cmp
mov
xchg
mov
xor
dec
jl
mov
mov
adc
mov
add
add
add
and
popa
add
adc
pop
daa
mov
inc
int
rcrl
mov
cmc
repnz
xchg
pop
call
xchg
nop
xor
lds
cmp
lea
in
or
repz
outsb
in
rolb
xchg
jl
mov
cmp
pop
push
rorl
mov
add
into
xchg
sbb
int
add
add
add
ret
cmp
mov
xchg
loopne
jge
xchg
pop
and
push
sub
ljmp
and
cli
jno
jmp
adc
pop
add
jge
xor
into
add
sub
jle
jge
mov
mov
push
cmpsb
das
daa
sub
ret
call
adc
add
add
add
sub
or
in
pop
stos
stos
sub
stos
or
out
jns
pop
cmp
jnp
int3
adc
mov
adc
push
cld
ss
jl
and
add
add
add
add
adc
or
xchg
add
push
lahf
in
sub
faddl
mov
push
pop
sbb
add
add
inc
sub
sbb
add
lret
jmp
and
repz
pop
mul
or
inc
insb
jl
and
inc
pop
in
mov
add
mov
lods
inc
pushf
xor
adc
and
xchg
arpl
insl
nop
mov
mov
adc
test
and
sbb
lret
push
add
cmc
mov
add
add
add
xchg
push
inc
and
pop
pop
adc
daa
cmp
lods
pop
rcll
or
xchg
loopne
decb
and
movsb
leave
xchg
push
je
movsl
cmp
adc
cld
in
cmpsl
loopne
xchg
clc
mov
shl
clc
je
add
fstpl
hlt
or
cld
or
or
or
lcall
pop
icebp
daa
mov
fsts
pop
dec
les
jne
add
add
add
ret
ljmp
and
inc
jmp
pop
mov
inc
pop
lods
sub
jne
push
cmp
test
dec
and
add
add
jns
inc
inc
insl
inc
sbb
in
hlt
daa
int3
add
sbb
sub
clc
call
and
xor
cld
ja
jne
cmp
add
add
add
add
jo
jmp
shll
and
mov
and
lods
scas
out
jae
push
and
cmp
mov
es
xchg
and
mov
js
fimuls
mov
pop
cmp
cltd
andb
dec
and
stos
ss
test
dec
fldenv
fldl
push
in
pop
mov
loop
inc
add
add
add
add
cmp
inc
jne
cmp
xchg
and
test
int3
stc
add
push
jno
daa
jg
and
fistl
rolb
fst
lcall
imul
outsl
fdiv
sar
data16
and
pop
test
hlt
pop
test
add
add
add
or
test
inc
outsl
add
cmp
sbb
jne
jno
push
add
add
inc
xor
test
lahf
dec
xchg
call
ljmp
push
out
movsb
into
mov
fists
push
cmpsl
and
loope
add
push
xchg
pop
jecxz
stos
sub
leave
cmp
ret
std
or
add
add
add
and
adc
gs
lods
inc
insl
rclb
push
les
push
sub
test
insl
in
in
jne
and
xchg
loopne
adc
adc
and
push
insb
and
arpl
lods
xor
add
mov
int
lcall
push
or
loope
fcomp
mov
pop
js
insl
daa
popf
xchg
add
add
add
and
sub
mov
jne
gs
mov
test
push
jle
mov
test
pushf
xchg
fnstenv
push
mov
es
fstpt
in
insb
pop
int
ss
into
dec
arpl
iret
jle
push
sub
push
xchg
int
mov
repz
mov
repz
sbb
xchg
roll
and
rclb
rcrl
add
add
add
adc
push
adcl
jp
int
aaa
test
xor
nop
jae
xchg
adc
loopne
cmpsl
sbb
call
xchg
pcmpeqb
fildll
pop
mov
mov
jle
lds
jp
lds
pop
stos
popf
xchg
lret
xchg
and
dec
and
add
add
add
pop
and
sbb
add
aam
test
dec
pushf
or
test
add
push
outsl
mov
fists
jl
popa
hlt
sahf
sbb
lcall
ds
adc
add
dec
in
lods
jb
add
jl
hlt
jno
or
sub
and
clc
or
lahf
dec
loopne
pop
clc
andb
test
add
add
add
add
in
stos
test
mov
jp
add
inc
sub
pop
mov
dec
xchg
fsubrs
insl
cmp
dec
push
add
push
and
mov
sub
inc
iret
add
push
lods
inc
pop
and
sbb
mov
rcrb
inc
inc
addl
add
add
mov
jg
in
rcrb
fidivrs
fs
lcall
push
lret
scas
and
or
leave
roll
leave
add
cvtps2pi
cmp
fadd
xor
dec
int
jg
test
test
sti
inc
xchg
xchg
popf
jg
cmp
xchg
xchg
pop
int
in
sti
cmpsl
sti
add
add
add
add
scas
scas
adc
pop
lcall
nop
out
sbb
inc
push
movsl
mov
mov
mov
push
mov
xchg
mov
jmp
jg
adc
mov
imul
add
out
sahf
sbb
xchg
nop
pop
in
push
in
or
lret
repz
mov
rorl
into
mov
pop
loop
add
add
add
xchg
pop
dec
xchg
pop
and
inc
xor
sbb
pop
outsb
sahf
aas
popa
sub
ror
sbb
pop
and
in
popa
jecxz
lock
insb
add
jb
sub
inc
notl
mov
in
stc
lret
pop
roll
and
sahf
jmp
je
mov
xchg
mov
mov
push
dec
add
dec
add
add
add
add
lea
push
loop
outsb
lea
and
jnp
cltd
ljmp
or
add
or
mov
pop
leave
ret
jle
rcll
mov
emms
lret
pop
leave
and
lahf
aad
inc
mov
call
jmp
icebp
inc
test
out
add
mov
mov
add
add
pop
and
cmpsl
clc
jns
cmp
or
xchg
mov
dec
addr16
ljmp
jne
inc
mov
and
int
push
into
in
jge
imul
stos
les
adc
aas
xchg
aaa
pop
jl
shlb
arpl
push
cs
jnp
xchg
mov
lea
cltd
and
add
add
add
xchg
andb
pop
popf
jg
mov
and
sbb
mov
lea
adc
popf
jle
scas
lahf
add
mov
int
add
int
xchg
pop
mov
add
jl
add
pop
int
push
into
in
ja
int
pop
jge
rcll
out
int3
add
add
add
add
mov
xchg
pop
or
xor
movsl
int
loop
ror
sbb
inc
mov
int
push
dec
ficoms
xchg
lds
pop
push
push
lods
sbb
icebp
adc
mov
inc
dec
push
jmp
mov
nop
lahf
sub
mov
pop
and
add
add
add
push
test
jmp
cmp
pop
test
jmp
xchg
pop
and
pusha
shll
jnp
pop
and
shl
jmp
xchg
pop
stos
les
fs
pop
jmp
and
ret
jnp
pop
and
or
je
jge
in
mov
add
sub
sbb
add
jge
add
add
add
mov
mov
loopne
ljmp
outsb
and
xchg
add
inc
and
cmp
test
add
xor
add
int3
insb
dec
or
sub
and
jnp
test
push
and
mov
push
js
icebp
test
push
xor
shrl
dec
cmp
push
or
add
add
add
aaa
and
sbb
xchg
add
test
add
mov
or
and
popa
sub
push
scas
loop
adc
mov
into
nop
scas
and
xchg
fsubs
seto
jnp
nop
mov
dec
shrl
into
nop
mov
push
mov
jl
rol
xor
mov
pop
aas
aaa
adc
add
add
xchg
scas
and
movsb
movsb
inc
mov
mov
add
or
mov
int
pop
pop
xchg
rorl
jno
xchg
pop
int
xor
bswap
fiaddl
js
and
int
popa
mov
mov
cmc
int3
add
cmp
add
mov
fwait
mov
cmc
push
leave
pop
int
aas
bswap
ss
stos
dec
call
add
add
add
xchg
pop
int
push
mov
int3
add
pop
dec
push
or
pop
cmp
fcomi
hlt
and
xchg
das
call
push
jecxz
push
lahf
jmp
jmp
rorl
sahf
imul
test
jmp
xchg
test
mov
andl
jae
add
add
add
cmpsl
mov
in
mov
xor
push
adc
push
cmc
sbb
inc
insl
ret
jne
lahf
xchg
adc
rolb
stos
sub
sbb
and
adc
sub
movsb
and
ljmp
add
jb
cmpl
xchg
mov
or
jg
and
jne
pop
dec
jmp
addr16
ret
push
add
add
add
lahf
push
add
clc
ficoml
xor
in
and
add
push
clc
les
mov
add
in
and
js
je
test
xor
cmp
mov
xorl
add
push
rcrb
addr16
lods
xchg
out
xchg
scas
and
imul
push
dec
add
add
add
jnp
adc
and
ljmp
out
imul
gs
clc
jge
and
mov
leave
loope
xchg
and
adc
fisttpl
push
pop
and
xchg
mov
popa
add
mov
je
xor
es
xor
popa
sahf
add
neg
test
and
lds
data16
add
add
cmpsl
pop
gs
pop
leave
and
cmp
insl
cmp
mov
into
or
add
xor
sti
adc
sub
jae
lcall
repnz
dec
int
xor
pop
test
or
pop
xor
aad
lahf
mull
dec
mov
dec
int
or
add
add
add
nop
pop
int
sahf
pop
mov
or
pop
out
popf
test
and
fsubs
lds
in
dec
mov
mov
fisubs
xchg
ret
or
jae
push
mov
shr
push
jecxz
out
push
jecxz
fistps
in
adc
mov
mov
pop
adc
sub
sbb
mov
xchg
add
add
add
movsb
adc
pop
and
stos
push
jecxz
in
es
mov
xlat
out
adc
lret
mov
pop
fsubl
cmp
dec
or
pushf
ror
inc
and
aaa
cmp
test
mov
dec
in
xchg
bswap
ret
call
dec
and
in
xchg
addb
sbb
nop
movsb
mov
add
test
fs
dec
and
jmp
adcb
test
lret
int3
fcmovne
divps
movsb
mov
mov
iret
fildl
lret
clc
lret
in
lcall
xchg
insl
pop
dec
xchg
cmp
add
xchg
nop
add
xchg
int
ds
jle
ds
pop
add
ds
out
add
add
add
add
xchg
iret
add
xchg
and
ds
sub
ds
jmp
add
ds
push
add
and
lret
xchg
popf
adc
sbb
push
xchg
pop
enter
mov
mov
ret
xchg
jge
jmp
adc
fs
pop
int3
jg
cmp
test
ja
adc
add
add
jo
in
loop
dec
int3
mov
jp
cmovo
mov
fadds
movsl
mov
cmp
out
das
je
jnp
incl
cli
mov
and
add
and
or
shrb
push
mov
jl
jmp
adc
repz
push
aam
daa
jne
icebp
out
addr16
cmc
pop
dec
jmp
jl
jmp
js
add
add
add
std
ds
and
xchg
pop
and
dec
cmpb
dec
out
out
inc
and
xchg
xchg
mov
pop
in
xor
jmp
mov
add
xchg
mov
lahf
inc
and
xor
push
pop
movsb
jb
add
imul
mov
jmp
cmpsl
call
push
add
jae
add
add
add
xor
cwtl
call
pop
sbb
leave
jns
adc
push
and
clc
mov
ljmp
bound
xchg
into
mov
test
mov
call
mov
pop
and
or
inc
sub
push
add
sub
fs
mov
punpcklbw
xor
push
mov
add
add
mov
or
xor
cli
xor
xchg
mov
test
call
cmp
test
adc
test
movsb
sti
fdivrs
and
sub
push
and
lahf
cs
adc
sub
xchg
sub
shrb
or
sahf
in
inc
nop
mov
adc
add
add
add
test
jp
mov
xchg
arpl
shlb
sub
or
cmp
jge
cmpsb
lret
lahf
call
sahf
sub
adc
sub
cmp
adc
arpl
adc
push
xor
addl
inc
leave
jbe
lret
repz
ja
scas
movsbl
push
or
add
add
add
out
push
les
sahf
push
aaa
lods
out
mov
dec
mov
cmp
in
cmp
hlt
aaa
mov
aad
aad
pop
jmp
add
out
leave
push
or
adc
jle
pop
adc
icebp
clc
subps
in
lret
xor
out
loopne
je
add
add
sub
or
arpl
movsb
or
jg
lds
jmp
bound
or
xchg
pop
stos
sub
or
sub
or
lahf
pop
mov
scas
fisubs
xchg
mov
jmp
push
adc
push
jecxz
inc
das
int
add
daa
cwtl
xchg
out
or
cli
orl
pop
stos
mov
push
jmp
add
mov
dec
mov
sahf
pop
mov
and
imul
or
xor
pop
xlat
xchg
adc
inc
outsl
dec
sub
repz
add
dec
add
dec
sub
out
mov
lahf
into
pop
fsubl
add
add
inc
pop
test
bound
jle
xor
mov
pushf
setg
mov
xchg
stos
sahf
xlat
inc
std
test
jp
cmpsl
shll
cmc
sti
loop
jecxz
fwait
xor
adc
daa
push
popa
cmp
dec
mov
xor
and
and
je
and
jnp
or
sbb
or
rolb
add
add
or
xchg
repz
sub
test
pop
adc
sahf
and
outsl
jmp
jg
leave
in
xchg
test
lock
push
pop
int
sar
inc
stos
mov
int
xor
lcall
lea
sub
push
add
lds
out
cmpb
shlb
test
add
add
imul
xchg
lds
mov
addr16
hlt
rcrl
shrb
lret
add
js
mov
bound
jne
or
adc
in
orb
int
call
andl
pop
and
cmp
daa
insl
adc
jp
roll
mov
mov
add
add
add
insb
out
push
sbb
pusha
add
int3
dec
and
in
dec
push
xlat
xchg
leave
lahf
xorl
mov
lods
jbe
sbb
xchg
fcoml
add
inc
lea
xchg
stos
jnp
xlat
aas
mov
mov
shll
xchg
sbb
sub
adc
sub
xchg
cmp
sldt
add
add
push
sub
call
mov
filds
lods
outsb
in
jle
and
cmpb
push
add
popa
pop
fcos
jg
bound
xor
push
and
sbb
inc
js
sub
adcb
sub
ss
cmovno
fcos
aas
ret
bound
cmp
adcl
dec
stos
jo
je
add
add
add
in
mov
mov
jg
and
stos
mov
sahf
and
dec
mov
lcall
js
pushf
adc
and
cmp
jge
lcall
sbb
std
mov
rorb
cli
dec
mov
lcall
fdivs
jne
cmp
popf
mov
pop
add
add
add
stos
out
dec
lods
mov
test
lret
fwait
sti
jmp
mov
sahf
and
cli
cmp
push
in
sub
bound
jbe
mov
sbb
lahf
pop
or
std
push
add
sbb
xor
push
mov
mov
rorb
test
dec
int3
add
orl
add
add
test
add
mov
or
stos
dec
mov
insl
stos
rcll
sub
test
int
inc
push
jo
lar
mov
cs
and
out
inc
daa
fs
add
adc
xlat
cmpsl
rclb
and
nop
and
push
call
push
sti
imul
add
add
gs
stos
xlat
push
adc
fadds
xchg
mov
test
cmpsl
lea
imul
or
push
inc
and
cmp
mov
das
xchg
push
int
sbb
daa
adc
and
sub
bound
inc
pop
adc
sti
daa
jmp
push
add
add
add
dec
lods
inc
stc
pop
cmp
pop
jo
inc
sbb
push
add
out
mov
mov
loop
jmp
adc
fildl
outsb
inc
and
pushl
jnp
nop
add
andb
and
push
jl
adc
fsubr
or
add
cmpw
sbb
jl
adc
add
add
add
lahf
add
loopne
sahf
and
cmc
jne
sti
or
out
cmp
cltd
movsb
int3
fwait
sahf
and
cmp
bound
loopne
or
daa
gs
clc
and
cwtl
and
inc
nop
mov
pushf
ss
cli
aaa
or
push
cwtl
cmp
sahf
add
addr16
movsb
add
add
add
add
push
js
dec
lods
cmpsb
add
lea
jbe
repz
mov
mov
or
sahf
sar
mov
push
ds
sahf
fidivrl
jno
inc
ljmp
loope
popf
sti
mov
mov
loopne
mov
daa
sub
cld
push
pop
sbb
out
leave
and
dec
jne
mov
cmpsl
int
add
add
add
or
stc
sbb
mov
xchg
or
xor
addl
int3
push
push
mov
or
adc
cmpsl
or
dec
sahf
xlat
out
lahf
sub
adc
fcmovbe
dec
pop
call
jmp
shlb
cli
call
std
int3
in
pop
and
dec
adc
xlat
mov
lahf
sub
add
add
add
jbe
fidivrl
mov
jmp
adc
data16
or
daa
daa
imul
jmp
sub
and
xchg
popa
jecxz
fs
and
pop
cmpsb
and
ficoml
mov
in
add
sbb
mov
mov
imulb
or
popa
or
jbe
push
jmp
icebp
sub
mov
xor
jno
bound
add
add
add
cmp
jbe
and
push
sub
mov
and
mov
outsl
jae
mov
xlat
cmp
adc
push
sub
jbe
xor
push
jmp
inc
mov
xor
push
sti
loope
stc
mov
add
movsb
fld
xlat
scas
xor
sti
adc
add
add
add
test
or
jo
adc
ja
inc
xchg
cs
and
fwait
lods
push
popf
dec
lds
mov
cltd
inc
nop
rorl
jg
and
mov
xor
xchg
scas
mov
jg
scas
push
or
sbb
mov
sbb
mov
scas
mov
push
mov
and
add
add
add
xlat
insb
sub
test
xor
xchg
pop
dec
mov
jl
mov
mulb
jg
mov
dec
mov
sbb
inc
dec
jo
push
dec
xlat
push
sub
int
xchg
xchg
add
je
leave
sar
lock
in
int
adc
lds
xchg
xchg
cld
out
mov
pop
sbb
jbe
add
add
add
add
decl
adc
fwait
mov
int
mov
bswap
add
dec
and
nop
lods
push
imul
mov
fstpt
cwtl
adc
cmpsl
adc
pop
fists
dec
daa
insb
jecxz
and
pop
inc
cs
pop
dec
movsb
int3
mov
imul
fwait
jb
sbb
pop
xlat
test
add
add
cmp
fwait
jae
call
stos
aaa
imul
push
and
adc
pop
jmp
xchg
mov
cmpsl
cwtl
adc
add
dec
add
int
addr16
and
push
lahf
inc
dec
mov
jecxz
push
add
mov
pushl
bound
aas
add
out
fcompl
add
add
add
rorb
sub
mov
mov
add
das
push
and
jecxz
push
out
js
sub
iret
and
push
je
test
or
enter
scas
push
aaa
jmp
pushf
xchg
inc
dec
xor
xchg
cmpsl
imul
mov
testl
adc
push
data16
add
add
add
sbb
or
daa
sbb
clc
mov
inc
xor
je
and
adc
xlat
std
push
jmp
mov
and
cltd
sahf
lret
xchg
scas
and
lods
or
stc
push
pushf
sti
push
das
mov
mov
mov
notb
sahf
mov
scas
and
push
scas
mov
sti
adc
inc
push
lcall
dec
add
add
add
nop
ljmp
sahf
cmp
xchg
mov
int3
jmp
mov
popa
scas
jp
decl
call
andb
xchg
mov
int3
fstpt
dec
out
scas
cmp
testb
adc
mov
or
jle
incl
sub
scas
ljmp
adc
add
add
add
out
sahf
push
push
repz
sbbb
cltd
rorl
outsb
mov
or
sub
pop
add
lret
and
aam
out
movsb
xor
or
adc
lcall
sbb
push
ss
std
das
mov
mov
jae
cli
pushl
int3
cmp
pop
and
movsb
pop
stos
jno
add
add
add
fs
or
and
mulps
lret
repnz
xlat
lds
adc
add
mov
outsl
out
jg
lock
fld1
pop
or
pop
inc
xlat
jg
cld
sub
mov
or
inc
stos
mov
outsb
inc
popf
push
stc
and
mov
sahf
bound
push
xchg
iret
js
bound
je
test
add
add
add
pop
insb
fiaddl
and
mov
fdivr
pop
pushf
xchg
ret
sbb
gs
mov
mov
jo
add
mov
mov
jbe
sti
out
and
inc
mov
testb
mov
push
leave
xchg
pusha
add
dec
pop
dec
insl
shll
add
add
add
jge
sahf
in
test
mov
mov
xchg
mov
negb
push
mov
daa
icebp
leave
xchg
and
testl
mov
and
mov
mov
xlat
mov
call
pmulhw
pop
pop
lret
aas
ret
rorl
pushf
divb
loop
pop
or
int
or
add
add
add
xchg
cmp
xchg
xchg
push
xor
sbb
pushf
incl
je
movsb
pushf
push
lods
push
or
mov
add
test
jp
jne
loope
sbbl
cld
or
xchg
mov
xchg
loope
lcall
inc
aaa
adc
ljmp
stc
andl
lds
xchg
and
cmp
pop
jmp
add
add
add
mov
jnp
push
push
pop
push
jecxz
call
sub
sti
cmc
mov
test
adc
ss
daa
cli
lret
mov
scas
and
in
pop
fimuls
das
imul
push
stc
push
pushf
test
adc
lahf
stos
mov
or
in
xor
fstl
and
lds
add
add
add
sahf
movsb
loop
adc
scas
rorb
adc
sbb
mov
mov
or
xor
mov
les
roll
ja
sti
fcomps
fldt
dec
push
fsubs
insl
lahf
inc
mov
mov
mov
mov
adc
add
mov
push
push
add
add
add
push
lds
dec
push
mov
hlt
xchg
insl
lahf
pop
fs
je
sbb
push
sbb
sub
mov
xor
rcll
bound
jne
faddl
or
xor
pop
mov
sbb
mov
js
xchg
daa
jg
les
add
mov
mov
inc
stos
in
nop
pop
mov
decb
aad
leave
add
add
add
jno
mov
je
pop
pop
adc
insb
testl
fnstcw
mov
mov
xchg
push
add
xchg
lret
push
test
and
hlt
or
shrb
int
call
mov
cld
or
leave
lcall
bound
mov
pop
push
mov
dec
stos
add
add
add
inc
or
fcmovne
jmp
lcall
ret
clc
adc
or
add
adc
dec
jle
xchg
push
test
or
lcall
aad
lock
cs
or
lcall
sar
adc
fwait
mov
das
xchg
xlat
jmp
add
add
add
push
scas
and
inc
scas
outsl
in
xchg
pop
mov
lahf
cs
into
stos
xchg
scas
sub
cs
mov
scas
push
fisubrs
mov
int3
fiaddl
pushf
xlat
bound
stos
test
inc
sub
loopne
gs
adc
pop
call
out
fwait
movsb
dec
xchg
sbb
bound
mov
mov
cmpsl
xchg
aam
or
daa
mov
add
add
imul
test
mov
test
outsb
lahf
inc
xchg
stos
mov
mov
cmpsl
or
loope
aas
sahf
xchg
ret
jb
hlt
pusha
test
sbb
call
add
clc
or
mov
loopne
jb
not
and
adc
ljmp
mov
or
mov
insl
fisttpl
push
lret
js
arpl
add
add
add
mov
pop
clc
popa
pcmpeqb
iret
and
mov
inc
xchg
lahf
aam
mov
pop
fildl
pop
movsb
into
mov
lea
pop
or
and
xchg
mov
xlat
or
or
add
and
add
daa
pop
or
mov
lea
add
add
add
sbb
adcl
fimull
or
mov
scas
sbb
or
xlat
decl
and
pop
js
mov
xchg
adc
icebp
jbe
js
call
scas
int3
lret
rcll
aas
xorl
mov
push
mov
pop
jne
aas
xchg
lcall
cmp
popf
push
ret
and
sub
add
add
add
or
jns
jmp
jp
add
rorl
jmp
mov
xchg
xchg
rclb
jecxz
movsb
adc
in
lret
data16
sub
sti
aas
enter
into
jmp
bound
out
sub
or
popf
cmc
dec
mov
enter
repz
add
daa
insb
jne
xlat
ficoms
cmp
std
pop
sub
or
nop
movsb
ret
mov
push
or
lahf
xchg
xlat
sahf
pop
dec
das
add
int
xchg
pop
and
pop
clc
lcall
cli
int3
dec
lea
and
pop
clc
stos
int
jle
stc
int3
js
pop
and
add
xor
divl
jmp
repnz
add
add
std
mull
mov
mov
cld
xchg
jbe
incl
movaps
mov
stos
sahf
or
bound
jle
add
mov
int3
jecxz
pop
and
cmp
sub
out
or
add
loope
pop
xlat
dec
in
sti
mov
call
jo
and
rol
mov
inc
gs
into
inc
push
mov
sti
aaa
gs
inc
add
add
add
lahf
stos
mov
inc
jle
dec
testl
inc
sub
popf
pop
test
jle
insl
adc
jns
test
add
sbb
jne
sti
ds
lret
jg
cmp
xchg
mov
cmp
xchg
mov
cmp
xchg
dec
cmp
xchg
enter
add
add
add
jmp
cmp
xchg
xor
sarl
xchg
pop
jl
fs
cmp
pop
pop
cmp
push
pop
cmp
int3
pop
fcmovbe
les
fcmovbe
mov
pop
adc
movsb
pop
cli
rcrb
adc
test
adc
je
adc
fs
mov
pop
pop
in
add
add
add
push
pop
repnz
pop
rcl
les
not
mov
pop
cmp
lods
pop
cmp
movsb
pop
inc
aad
pop
dec
call
mov
xlat
test
inc
call
test
shlb
cwtl
enter
mov
shlb
mov
jp
and
pop
shlb
mov
shlb
sbb
and
dec
shlb
pushf
push
and
shlb
int3
add
add
add
shlb
xor
sbb
pop
shlb
filds
and
inc
shlb
bound
and
loop
and
shll
add
shll
or
shll
add
shll
cmp
xchg
jecxz
jle
es
pop
sti
outsb
add
ds
sar
lahf
test
add
and
jae
push
and
mov
add
add
add
mov
and
or
sub
cmp
fs
mov
pop
rclb
adc
cwtl
push
or
xor
and
sub
loopne
stos
dec
insl
rcr
repz
cltd
fidivl
xchg
mov
int
push
xchg
mov
pop
sbb
lret
sbb
add
add
add
test
jne
cli
out
and
xchg
mov
mov
andl
cmp
out
aaa
pusha
push
fidivrl
mov
sbb
jns
or
adc
fnsave
and
sarl
and
xchg
icebp
ljmp
xchg
das
pop
pop
xor
inc
jge
addr16
fdivrs
add
add
add
dec
lret
xor
leave
sub
pop
mov
ja
mov
outsl
or
pop
jecxz
push
xchg
and
mov
bswap
loop
xor
or
xor
sbb
inc
rorb
mov
cld
or
and
xchg
pop
xchg
movb
fcomi
push
sar
mov
les
pop
add
add
add
addl
dec
cld
lcall
fmuls
push
sahf
push
mov
and
shlb
jbe
test
loop
xchg
cmp
jmp
mov
int3
and
xor
mov
sbb
xlat
rclb
sbb
mov
sbb
cld
arpl
adc
add
add
add
add
xchg
adc
test
dec
jmp
xchg
nop
push
lds
clts
inc
aam
test
xchg
out
mov
xchg
xor
test
jno
cmp
jne
movsb
sti
and
das
inc
fadds
pop
and
sahf
frstor
lea
imul
push
or
xchg
adc
js
mov
jge
pop
push
pop
xor
test
sti
aad
add
add
add
push
add
shl
in
ret
dec
fcomps
pushl
stos
out
je
mov
jmp
jp
and
fstps
add
jp
test
clc
pop
xor
sbb
jns
cmp
repnz
xchg
cltd
bound
orl
imul
sti
pop
movsb
mov
add
add
add
add
mov
xchg
jp
call
or
pop
dec
cmc
fisttpll
adc
adc
add
adc
fistpll
aam
mov
mov
inc
xchg
lahf
xor
jns
and
xchg
sbb
je
and
adc
dec
mov
dec
mov
test
sarl
xchg
jp
push
bound
imull
mov
add
add
add
int
mov
sbb
outsb
inc
int
test
testl
repz
xchg
pop
push
cmp
sub
repz
divb
push
iret
push
or
aam
adc
pop
push
iret
dec
push
addl
int
inc
iret
rclb
add
shl
daa
aad
inc
iret
mov
addl
int
jge
jmp
and
add
add
es
mov
cwtl
test
and
rolb
jecxz
or
push
and
sbb
jnp
xchg
sbb
ds
pop
test
scas
mov
stc
arpl
mov
jb
in
outsb
jb
fmul
push
sbb
sbb
fnstcw
jge
call
cli
or
and
add
add
add
and
xchg
jp
and
and
sbb
add
mov
mov
lahf
xchg
pop
and
pop
subl
sbb
pop
add
and
sub
sbb
clc
out
jnp
test
lcall
mov
adc
add
jl
sbb
in
inc
call
jo
mov
mov
and
add
add
add
dec
jecxz
inc
mov
add
ljmp
jo
lock
xchg
sub
test
add
lahf
xor
out
test
inc
push
or
aas
xchg
aad
sbb
jo
mov
pop
adc
aas
xchg
xor
mov
mov
xchg
xor
push
jo
lcall
xchg
jo
mov
jo
add
xchg
mov
stc
mov
jne
mov
mulb
add
dec
ja
push
jo
jne
jmp
cmpsl
add
in
lahf
sub
dec
jge
xchg
jo
call
sbb
repnz
lahf
add
rorl
rcrb
sarb
mov
add
add
add
inc
xchg
nop
xor
repnz
cmp
in
movb
jge
leave
int3
test
xchg
fdivs
xor
or
push
inc
iret
jle
or
inc
xchg
jb
mov
popf
sub
insl
sbb
lea
cmp
in
push
or
jle
sti
iret
mov
sub
inc
aam
jmp
out
add
add
add
int3
call
sub
aad
and
in
push
clc
test
mov
dec
sub
xchg
pop
mov
cmp
and
inc
inc
and
cmp
and
out
and
faddl
ja
inc
and
faddl
int3
les
jmp
lds
sarl
inc
and
fldl
sub
inc
and
in
flds
push
pop
outsb
jbe
je
sub
add
add
add
pop
mov
push
outsl
insb
xor
ss
xchg
add
inc
int3
add
sub
add
mov
push
nop
imul
add
aam
xor
add
jb
adc
pop
pop
shrb
xchg
push
xorb
or
inc
lahf
bnd
mov
xchg
daa
cwtl
fildl
movsb
ud0
add
add
add
jmp
movsb
xchg
xor
mov
fwait
daa
cwtl
call
dec
mov
adc
shrb
andb
out
add
pop
mov
loope
xchg
mov
into
aas
xchg
in
call
adc
je
imul
sahf
stc
push
std
ret
test
adc
add
add
add
lods
rolb
imul
adc
adc
and
ljmp
add
scas
adc
sti
test
sarb
xchg
cmc
mov
mov
and
or
pop
rcl
cli
lret
int3
xchg
stc
add
adc
add
mov
jo
jbe
fldt
lahf
int3
jge
loope
movb
add
add
jecxz
fdivs
int3
jle
in
int3
xchg
pop
aaa
test
das
add
cmp
sbb
test
pop
lds
jge
adc
add
lcall
jl
cmovp
jne
inc
jg
subl
stos
mov
pop
pop
cli
and
js
stos
es
jmp
test
push
add
add
add
adc
mov
mov
ret
fildll
sub
xchg
jl
cmc
inc
inc
and
in
in
cmc
jge
sub
adc
push
enter
into
sub
sahf
sub
xchg
jl
or
mov
jge
push
dec
stos
test
push
dec
jle
ss
inc
pop
mov
and
sbb
add
add
jne
lea
push
orb
xchg
fisttpl
jl
arpl
sarb
pusha
and
add
add
sbb
mov
cltd
inc
sub
decl
add
ds
stc
mov
sbb
add
mov
je
add
cld
cld
repz
jae
mov
incl
add
add
add
stos
daa
inc
call
cld
xor
stos
jnp
clc
out
sbb
pop
inc
xchg
outsb
and
shll
push
mov
stos
clc
loopw
mov
mov
insl
jmp
loopne
or
pop
inc
mov
pop
inc
lods
pop
pop
inc
mov
pop
inc
lods
or
inc
xchg
and
movsb
inc
xchg
idivl
and
out
and
or
push
add
add
add
jne
pop
add
jne
add
xor
push
adc
int3
adc
and
sti
fimuls
push
call
xchg
xlat
mov
outsb
cli
or
adc
repnz
loopne
nop
pop
int
loop
inc
test
dec
dec
lahf
cmp
aam
ss
pop
inc
pushf
pop
popa
jecxz
mov
jle
and
add
add
add
or
mov
dec
rolb
test
pop
js
imul
adc
push
in
orps
stc
fisubrl
xchg
xchg
in
out
lds
xchg
jg
bnd
push
ja
xchg
fs
fld
call
pop
daa
ja
into
dec
repz
shll
push
and
or
je
and
mov
add
add
add
js
ja
push
stos
in
adc
int3
out
pop
and
xor
xchg
push
fwait
ret
and
sub
int3
and
and
jmp
test
test
adc
xchg
and
mov
adc
sbb
xchg
test
ret
fldl
arpl
call
les
add
add
add
add
scas
dec
movsb
lods
or
mov
jne
add
inc
sub
xchg
or
jge
lods
jge
mov
lahf
ret
daa
sub
stc
inc
nop
add
push
cmp
call
and
add
mov
pusha
cs
jl
ret
std
inc
addl
push
jb
sbb
add
push
dec
lahf
inc
aam
xchg
rclb
aad
push
jbe
out
movsb
or
enter
data16
int
xor
add
jno
mov
outsl
and
or
nop
push
add
pusha
push
out
enter
push
clc
adc
xor
jbe
lahf
xchg
mov
xchg
cmp
xchg
popa
aas
xchg
jo
pop
xorb
leave
add
add
add
push
and
add
push
stc
or
stos
xchg
in
adcb
icebp
add
jp
mov
dec
out
fnstcw
clc
out
das
int
xchg
mov
mov
js
add
mov
mov
cltd
mov
pop
int
out
int
inc
inc
xchg
lcall
sti
jle
push
xchg
mulb
xchg
add
add
add
cmp
in
push
mov
enter
sub
mov
ja
xchg
mov
jo
add
add
or
loopne
sbb
and
cli
jl
stc
add
les
xor
andl
push
push
sbb
sbb
xor
or
xchg
mov
add
add
add
inc
push
add
sbb
pop
push
and
xchg
sar
fsubp
add
adc
cmc
dec
int3
lods
mov
hlt
addr16
mov
stos
pushf
pop
shr
xchg
pop
int3
dec
jle
and
push
hlt
sbb
push
scas
push
popl
test
and
call
mov
clc
jecxz
jecxz
ljmp
jae
inc
xchg
outsl
addr16
add
add
add
iret
imul
cmp
add
imul
add
add
sti
test
jl
je
cli
outsl
and
sti
jmp
add
jge
dec
xchg
imul
pop
pushf
jmp
into
rolb
add
icebp
addr16
pushf
adc
lahf
ret
xchg
mov
push
or
mov
add
test
xchg
fistl
cmp
adc
cmp
sbb
loopne
outsb
and
or
out
repz
sbb
push
sbb
push
lea
repnz
inc
cmc
stos
mov
cli
test
or
adc
pop
fsub
inc
and
add
jmp
arpl
fnsave
and
andl
add
add
or
push
adc
negl
adc
xor
adc
adcb
xchg
pop
fwait
ret
test
aam
pop
int
ja
mov
add
les
call
lods
daa
ss
aam
int3
add
fadds
insl
sub
add
loopne
push
pop
mov
xchg
pop
inc
stos
push
inc
mov
roll
int
add
add
add
inc
das
sub
rorb
xor
fstl
ret
fcmovnb
jbe
xchg
xchg
int3
jp
sub
rcrl
and
ds
fisubrs
and
daa
addr16
and
dec
lret
fsts
pop
lods
insl
sbb
jo
std
loope
and
xchg
or
lds
xlat
incb
add
add
add
pop
lods
push
lea
jmp
mov
sbb
fcmovnbe
pop
stos
addl
or
cwtl
das
xlat
fisttpll
outsl
pop
jbe
sub
add
cmp
and
out
inc
test
call
dec
ficoml
mov
inc
cmp
pop
pop
inc
mov
sub
insl
mov
pop
add
add
add
xlat
ret
cmp
sub
jno
add
sub
mov
xchg
pop
outsl
test
je
and
data16
push
xchg
or
lahf
insb
je
xor
nop
mov
push
cmp
adc
xchg
loope
or
pop
inc
jne
ss
mov
pop
xchg
nop
pop
and
add
add
add
push
jbe
add
stos
and
shr
xchg
nop
pop
and
jbe
ds
xchg
add
pop
and
and
or
and
movsb
inc
cs
xchg
add
negl
mov
push
push
aas
shr
sti
loope
push
push
sti
pop
push
jge
and
xchg
loope
in
addb
add
add
add
add
int
mov
pop
aaa
pop
ljmp
add
dec
jl
sti
mov
or
or
pop
in
repz
mov
rcr
int3
add
mov
pcmpgtb
int
fnstenv
add
pop
fistpl
sbb
adc
push
jae
jp
xchg
add
add
add
int
push
and
lcall
inc
and
push
sub
scas
adc
pop
jne
push
orl
push
and
fdivr
xchg
and
xchg
orb
orb
pop
jbe
xchg
pop
stos
aam
pop
fs
into
and
dec
loop
push
sbb
insl
jne
and
or
add
add
add
inc
push
in
dec
lret
in
cmp
adc
or
push
dec
and
xchg
jmp
dec
ret
lds
iret
mov
add
fwait
aam
dec
xlat
imul
sub
repz
in
aas
add
mov
dec
gs
xlat
mov
sub
jg
xor
clc
add
push
push
sub
and
add
add
add
lds
jge
add
add
call
iret
scas
pusha
and
pop
sub
out
scas
pusha
and
pop
test
xchg
jg
add
andl
aam
lea
sub
xchg
pop
and
cs
sar
mov
testl
test
ror
and
jnp
mov
add
add
add
and
xorb
mov
lahf
lahf
rcrb
cmp
fstl
add
bound
push
push
push
adcl
pop
les
sbb
idivb
cmc
mov
add
stos
jne
adc
mov
adc
cmc
dec
jecxz
sbb
in
incl
nop
pop
int
aam
int
xchg
pop
into
mov
add
add
add
jbe
xchg
inc
add
mov
xor
xchg
incb
xchg
pop
int
rclb
mov
add
call
adc
and
add
pop
mov
into
add
loopne
sub
mov
jne
int
xchg
pop
jp
mov
add
add
add
and
ret
and
out
inc
ret
int
xlat
test
scas
jmp
xchg
xlat
test
scas
cmp
xchg
xlat
test
mov
in
aam
mov
iret
dec
jno
je
sub
ds
adc
inc
in
nop
mov
and
xor
in
lds
push
pushf
and
inc
loop
xor
add
add
add
fcomip
je
insl
test
leave
sub
and
addl
lea
push
cmp
fimull
imul
lahf
sarb
pop
adc
pop
rcrb
outsl
out
add
push
imul
outsb
mov
dec
cltd
or
cmp
mov
inc
pushf
mov
add
loopne
xlat
mov
lret
cmp
push
sar
xchg
gs
dec
add
lock
cmpb
jecxz
adc
je
add
je
sbb
add
jne
scas
xchg
pop
and
cmpsl
adc
sti
push
stc
es
aad
in
inc
bound
pop
dec
mov
xchg
cmp
in
lcall
lahf
movsb
loopne
add
add
add
pop
adc
and
fadds
mov
fiaddl
fistps
pop
and
pop
imul
cmpsb
cmp
fiaddl
jmp
add
ret
rcll
and
clc
call
addr16
ds
aaa
sarb
xchg
add
mov
add
push
cs
xchg
scas
adc
out
add
add
add
adc
int3
es
aaa
shr
int3
ficoms
dec
dec
fs
pop
mov
popf
test
loope
pop
lcall
std
lock
pop
inc
or
scas
cmc
mov
sub
dec
sub
xor
cli
dec
push
dec
loopne
ljmp
dec
push
jle
inc
jmp
hlt
and
push
aam
aad
xlat
dec
mov
add
add
add
and
mov
jl
shl
xor
push
hlt
sub
lea
imul
iret
filds
faddl
stc
arpl
xlat
jne
mov
and
fsubrs
stc
arpl
inc
sbb
rorl
lcall
pop
jmp
cmc
insl
xlat
push
mov
clc
add
add
add
adc
subl
and
cmpsl
pop
addb
push
addr16
frstor
js
add
push
fistl
iret
out
sahf
lock
lock
lret
mov
dec
outsb
ret
xchg
repnz
push
mull
stc
divb
call
sub
shl
mov
les
pop
jl
xor
jp
test
add
add
add
ja
push
aas
mov
and
stos
fildl
cmp
outsl
jnp
cs
jb
add
pop
pop
fwait
popa
or
nop
test
sbb
test
mov
sub
and
sti
or
sub
inc
pop
test
sbb
push
push
lea
fs
mov
dec
rcrl
adc
add
add
add
add
imul
add
popa
jecxz
inc
lods
jno
push
or
or
ds
push
sub
fldl
sbb
and
pop
xor
stos
xchg
push
int
test
fldl
mov
and
adc
ret
mov
ret
sarl
push
mov
add
add
push
shll
sub
jno
lock
loop
push
repz
sub
dec
loop
pop
int3
in
xchg
outsl
push
jbe
addr16
push
and
pop
cmp
mov
int3
mov
sub
add
int3
and
daa
and
bound
mov
jle
adc
jmp
jge
jl
bnd
in
sub
add
add
add
mov
xlat
fisubs
ds
pop
jo,pt
les
ret
push
xchg
lcall
push
xchg
adc
enter
jg
xlat
sahf
adc
and
mov
mov
popa
add
data16
or
lods
imul
cli
stos
jae
add
fisttpll
loopne
add
add
add
and
sub
add
andl
adc
dec
lods
inc
faddl
fistpl
test
jne
test
push
xor
push
minps
and
add
shlb
icebp
inc
lods
dec
mov
mov
pushf
adc
mov
or
mov
adcl
push
pop
sti
lret
ret
data16
movsb
xlat
mov
add
add
add
cmp
mov
or
xchg
ss
push
fistps
repz
or
push
or
enter
and
xlat
shll
mov
daa
nop
movsb
scas
and
outsl
or
fbstp
and
and
dec
mov
bound
adcb
and
outsb
push
mov
ljmp
add
add
add
jns
repz
scas
repz
outsb
sahf
inc
mov
int
shll
xchg
outsb
movsb
les
bound
pop
push
mov
aad
rcl
add
xlat
je
ja
ret
push
mov
out
mov
xor
mov
push
mov
int
xchg
icebp
and
adc
arpl
gs
inc
out
mov
jle
fcomps
add
add
add
ret
push
shll
mov
hlt
adc
jle
outsl
fimull
push
fidivrl
inc
arpl
xor
pop
sbb
dec
incl
nop
pop
int
push
or
ret
pop
add
shlb
cld
inc
xlat
push
arpl
mov
aad
and
xchg
push
pusha
or
lahf
dec
int3
scas
pop
pop
and
pop
mov
stos
sbb
add
add
add
fisubrs
jmp
aad
push
lock
sub
jns
xor
push
psubsw
and
dec
shrb
and
or
rorl
mov
and
or
mov
shrb
xchg
arpl
jae
loope
and
aad
or
push
daa
inc
sub
pop
add
add
add
add
sbb
cmp
pop
push
ud2
aad
or
das
adc
add
pop
mov
dec
xor
lret
lds
subl
sahf
in
cmp
aaa
push
inc
cmp
call
rolb
pusha
cld
sub
stc
dec
adc
pop
add
in
pop
jecxz
add
add
add
sbb
data16
push
jbe
outsb
push
dec
insl
pushl
inc
icebp
push
test
adc
repz
loope
xchg
jecxz
dec
pop
cli
es
je
xor
int3
sbb
mov
dec
ljmp
push
test
jp
push
pop
jmp
jecxz
xor
out
pop
jne
je
xchg
adcb
jecxz
cmp
inc
rcrl
inc
test
push
adc
add
add
add
adc
jnp
pushf
cwtl
push
pop
pop
lods
lock
fiadds
push
dec
push
push
mov
jle
scas
add
inc
push
mov
pop
int
bound
inc
or
movsb
add
inc
add
inc
movsb
js
lea
rolb
add
or
mov
fdivs
sub
jo
addl
out
push
push
roll
add
add
xchg
outsl
int3
jo
pop
mov
add
mov
push
ss
ror
mov
cmp
xchg
adc
jge
mov
cltd
nop
gs
push
xlat
insb
shl
and
lret
loope
push
adc
jb
sub
jb
nop
and
sub
enter
nop
and
or
jmp
add
add
add
cmpsl
sar
loopne
fcomps
inc
xchg
pop
and
push
mov
leave
test
out
and
test
adc
dec
push
in
inc
lret
or
popa
push
add
cmpsb
sub
ljmp
xor
or
dec
and
fstpt
add
jns
mov
cltd
or
xor
mov
loope
add
outsb
add
mov
add
add
cmp
mov
shl
sahf
push
sub
inc
push
jnp
jp
and
in
and
fdivrl
aas
bound
jae
sub
sbb
rcl
fcmovnu
lock
or
iret
subb
add
ficoml
sbb
jnp
ljmp
add
das
sub
xchg
bound
mov
loop
inc
jo
or
add
add
add
push
jnp
mov
call
pop
inc
mov
call
jo
dec
sti
or
stos
xlat
mov
mov
test
cli
movsl
or
dec
cmp
call
stc
sub
pop
je
js
sti
gs
xor
fiadds
dec
rcrb
pop
lahf
xlat
cmp
add
add
add
pop
leave
in
add
sbb
pop
adc
fists
cmc
inc
jge
mov
inc
dec
jp
fsubrl
mov
xchg
pop
xchg
js
adcl
mov
add
dec
shl
pop
lock
inc
insb
adc
stc
adc
pop
lock
dec
jecxz
sub
fstps
fs
sbb
std
pop
push
js
mov
int3
rolb
add
add
add
aad
push
pop
lcall
repz
ljmp
fimull
inc
daa
gs
push
and
pop
pop
dec
fidivrs
test
insb
adc
jb
daa
add
daa
adc
andl
or
in
push
cmp
insl
push
xor
pop
sbb
sbb
inc
mov
insb
aam
mov
add
inc
pop
push
or
in
and
push
daa
adc
push
rcll
fldenv
add
loope
dec
call
adc
and
ret
lds
add
cld
cli
adc
push
jecxz
sahf
pop
xchg
pop
mov
and
fidivl
test
jne
test
fidivl
fistl
lods
inc
inc
es
xor
add
add
add
bound
xor
push
sub
xor
sub
xor
add
in
dec
and
out
outsl
and
sbbl
push
lods
inc
test
push
inc
pusha
mov
je
mov
jne
adc
jmp
fsubrs
call
lahf
hlt
cli
pop
dec
pop
xchg
jl
je
cwtl
dec
je
cwtl
stc
ljmp
out
lret
and
add
add
add
aam
and
imul
mov
gs
xacquire
adc
pop
mov
jge
addr16
les
dec
jne
rol
pop
jno,pt
lock
mov
push
cmp
sti
push
in
je
js
jne
aad
xchg
adc
pop
imul
inc
or
push
ljmp
adc
add
add
add
adc
pop
fildll
push
and
pop
out
jle
shll
jge
and
jge
and
and
and
push
frstor
loope
in
cltd
shrl
sbb
xchg
mov
jae
rcrl
insl
mov
pop
imul
and
and
push
add
add
add
test
sub
mov
jle
push
sti
pop
fimull
xchg
mov
jo
out
and
bound
pop
push
lds
mov
jne
pop
dec
call
cs
nop
outsl
out
ret
cs
ja
iret
mov
and
repz
pusha
mov
pop
jmp
out
push
stos
mov
aas
push
ret
dec
xchg
add
add
add
pop
int
mov
mov
stos
xor
push
or
jno
lret
add
fstpt
and
das
add
out
dec
and
aaa
fidivl
fidivl
fcmovbe
inc
fistpl
in
out
fiaddl
mov
push
adc
fidivl
lahf
enter
and
xchg
incl
out
je
add
add
add
imul
in
jp
ds
js
cmp
and
test
and
fwait
cmp
xchg
daa
xor
sub
and
or
add
shl
jbe
lock
xchg
movsb
aaa
adc
popa
or
pop
adc
bound
inc
sub
cmp
push
or
pop
add
daa
and
enter
add
sub
add
add
add
stos
and
sbb
sbb
fiadds
xchg
call
and
sub
xchg
hlt
call
cs
je
adc
mov
cmp
or
cs
insb
cltd
xchg
inc
sub
int
loope
movsb
pop
jae
lret
mov
clc
push
mov
jmp
jnp
sub
js
sbbb
add
add
add
xchg
pop
int
dec
sub
sbb
mov
js
jb
cmpb
sarb
push
jle
idivb
pop
scas
dec
int3
add
outsl
pop
mov
scas
iret
mov
push
inc
push
pop
lret
xorb
stos
popa
test
js
inc
mov
xchg
inc
inc
mov
icebp
inc
fwait
popa
test
addl
incl
daa
sub
add
add
add
or
cmpsb
test
scas
xchg
jmp
std
es
aam
out
push
push
lret
adc
jb
mov
in
push
out
in
dec
ds
hlt
push
es
push
jmp
mov
cmovns
mov
or
cmovbe
fs
mov
jb
add
add
add
xor
cmpsb
push
ja
fldt
sub
stos
xlat
daa
push
mov
add
adc
into
mov
cmpl
add
repnz
jae
std
in
test
sub
add
dec
add
mov
daa
imul
xchg
shll
imul
inc
push
push
add
add
add
test
mov
xchg
and
dec
arpl
test
cmp
cmp
test
cmp
inc
inc
stos
dec
xchg
push
sarl
in
loop
je
out
mov
out
and
mov
push
dec
out
and
push
loopne
imul
imul
dec
mov
cs
inc
call
add
add
jae
push
jp
fimuls
jno
sub
xchg
je
movsl
xchg
outsb
or
sbb
sahf
aam
and
or
sbb
imul
and
aad
sub
imul
inc
xchg
sbb
loope
inc
or
or
int
pop
das
inc
xchg
pop
das
lea
mov
add
add
mov
add
mov
add
sti
mov
xchg
jge
adc
pop
leave
adc
sarl
leave
add
stc
mov
mov
cltd
cmp
mov
loopne
inc
jge
jmp
xchg
pop
inc
inc
push
cmp
mov
or
mov
mov
arpl
push
int
std
lea
data16
jmp
push
fbstp
add
add
add
xor
sbb
stos
sbb
adc
sbb
sbb
or
lret
jmp
lods
scas
add
push
lods
jne
and
or
mov
and
xor
jmp
pop
pop
cltd
xor
ja
rorb
sub
mov
andb
dec
push
or
jg
and
jmp
daa
ret
add
add
insb
or
je
inc
push
and
aas
add
inc
and
jns
mov
or
pop
and
sbb
sub
fldl
int3
add
cli
imul
add
push
rclb
dec
lock
push
or
adc
scas
jbe
fisubrs
and
movsb
xor
add
add
call
subl
xchg
jmp
jbe
inc
pop
in
mov
xchg
stos
jne
jmp
sub
push
jns
xchg
hlt
loop
lds
jae
sbb
adc
dec
call
dec
mov
jne
enter
js
stos
push
mov
mov
stos
enter
add
add
add
repz
jno
xchg
out
cld
jne
stos
das
stos
dec
mov
in
sbb
dec
aas
or
mov
orl
pop
or
mov
and
lret
pop
cmp
mov
or
xor
push
inc
dec
push
addr16
push
inc
scas
inc
lds
pop
mov
lods
add
add
add
add
mov
jge
add
int
arpl
cltd
adcb
mov
dec
cltd
or
adc
pop
push
inc
mov
inc
dec
mov
sbb
adc
test
sbb
fdivrs
push
dec
push
in
mov
mov
stos
cwtl
cli
insl
fnstenv
inc
add
sbb
add
add
add
shlb
bound
push
lret
fadds
pop
jb
add
jbe
add
data16
and
mov
out
stos
sbb
pop
push
in
inc
lret
xchg
sbb
and
xlat
pop
mov
clc
imul
mov
add
pop
push
addb
lahf
jecxz
push
xchg
push
add
xchg
daa
mov
add
add
add
scas
repz
pop
mov
jp
adc
scas
mov
lea
lahf
push
cmp
mov
nop
cltd
or
cwtl
sahf
in
xchg
sahf
stc
addl
idivl
pop
jne
adc
call
arpl
jne
and
cmp
call
add
add
add
xchg
fistpl
mov
in
sbb
std
sbb
ret
cmpsb
lret
push
add
or
xchg
or
std
jbe
lods
test
jp
mov
loopne
add
mulb
xchg
dec
mov
dec
daa
xchg
push
push
xor
push
shll
rolb
mov
add
add
mov
jl
out
push
sti
or
or
add
incl
int
cvtdq2ps
stos
aaa
dec
inc
and
mov
jno
dec
testb
dec
jo
jp
fsubrp
scas
testl
ret
or
lret
addb
int3
mov
dec
adc
add
add
test
icebp
cmpsl
pop
rcrl
cmp
xchg
pop
push
mov
sub
lret
pop
mov
ljmp
jmp
xchg
enter
mov
mov
xchg
out
test
mov
pushf
push
lea
and
mov
mov
jmp
cmp
or
mov
add
add
add
add
add
xchg
pop
int3
xor
inc
xlat
bound
jp
int
mov
jle
jp
int
mov
jmp
scas
repz
adc
dec
xlat
fs
mov
arpl
test
mov
ljmp
adc
xchg
cwtl
xlat
pushl
xchg
fcmovbe
sub
add
jp
mov
add
add
add
decl
sub
and
test
enter
and
js
rorb
in
xchg
and
push
or
aaa
in
and
cmp
xchg
int3
xor
dec
push
jg
dec
and
xchg
icebp
mov
mov
pop
fildll
lea
dec
xchg
or
testb
push
mov
mov
xchg
faddl
or
xchg
add
add
add
test
jmp
cltd
mov
je
mov
add
cmp
je
or
push
and
outsb
sti
sbb
add
mov
or
pusha
cmc
int3
or
add
add
and
add
ret
mov
out
lret
lcall
imul
and
rorb
addr16
mov
add
add
add
lcall
fcoml
mov
pop
shlb
inc
cld
shll
test
std
cmc
jmp
push
inc
shrb
mov
fwait
push
push
shlb
mov
cmp
add
xchg
stos
lahf
sub
sub
sub
adc
pop
push
push
cmpsl
imul
add
add
add
shlb
aam
rcrb
cmc
jmp
xchg
nop
roll
in
outsb
lret
or
sbb
jecxz
movsb
out
xchg
nop
roll
in
stos
xchg
mov
dec
jne
mov
and
push
dec
enter
test
fimull
in
out
test
sub
mov
xlat
outsl
inc
dec
xchg
add
add
add
pop
aaa
inc
xor
push
inc
leave
add
addr16
or
test
push
mov
inc
imul
mov
out
insl
push
add
mov
jge
fistl
dec
in
leave
outsb
sbb
stos
movsb
imul
addr16
in
and
pushf
stos
push
push
push
fnstenv
add
add
add
pop
imul
in
fadds
sti
jno
out
test
das
repz
or
adc
jmp
daa
int
fdivr
dec
in
mov
rcl
sarb
pushf
les
pop
and
xchg
pop
push
test
out
adc
jae
push
cltd
lcall
out
adc
or
mov
jbe
add
add
add
fnstenv
inc
jge
adc
adc
aaa
xchg
xlat
jle
inc
hlt
and
jae
lea
mov
pushf
or
cmp
xor
push
cmp
jo
or
jo
mov
data16
dec
cmp
in
in
pop
lea
data16
dec
and
lea
fadd
mov
jge
add
add
add
xchg
js
and
sahf
jnp
enter
loope
cmp
adc
icebp
or
aad
mov
xchg
cmc
add
aad
add
cmp
xchg
push
push
adc
movb
fdivl
mov
int
test
xchg
mov
es
or
flds
xchg
movsl
dec
add
add
add
push
cmp
aam
roll
pop
and
test
in
sub
test
dec
ds
out
inc
fdivl
adc
dec
push
sub
pusha
cmp
pushw
mov
test
and
cmp
cltd
pop
mov
xor
lods
mov
ss
sbb
add
add
add
push
addr16
inc
das
js
loopne
sub
xor
movsl
or
push
xchg
pop
and
mov
inc
add
add
gs
test
inc
add
test
sbb
inc
jmp
or
add
cmp
add
inc
movsb
call
add
add
mov
add
add
and
call
add
add
add
add
add
iret
push
and
fidivl
xlat
lods
or
inc
mov
mov
push
test
or
add
std
fcos
xchg
push
js
rdtsc
and
xchg
imul
movsb
pop
test
outsb
addr16
or
arpl
test
mov
cltd
mov
mov
add
add
test
movsb
test
mov
nop
adc
and
sbb
inc
xchg
fistpl
lds
enter
iret
cmc
lods
sarb
inc
stc
mov
xor
mov
movsb
pop
je
mov
inc
stc
mov
and
pop
pop
ret
dec
jp
jo
push
or
rcrb
fldenv
dec
ret
mov
add
or
dec
das
pop
int
lcall
mov
inc
sahf
dec
shll
adcl
jmp
inc
fs
aas
mov
inc
dec
inc
fdivrs
pop
cmp
cmp
mov
enter
test
dec
inc
sbb
xchg
inc
dec
lcall
pop
xchg
pop
daa
aaa
add
add
add
stos
and
xchg
fbld
and
test
ret
jecxz
das
in
stos
adc
out
xchg
pop
test
jmp
aad
xchg
sahf
fmull
xlat
jmp
xchg
test
addl
out
cli
or
dec
pop
mov
mov
stc
xlat
jae
sbb
mov
xchg
pop
je
and
fs
rcll
fistpl
out
sbb
add
add
add
out
xor
mov
mov
cltd
add
arpl
std
xchg
or
or
pop
neg
jmp
enter
test
jne
pop
in
icebp
test
or
and
mov
sub
cmp
je
mov
inc
sub
and
adc
in
pusha
je
dec
aam
je
insl
test
mov
cmp
add
add
add
jne
pop
xor
adc
mov
dec
add
dec
hlt
aaa
test
xchg
xor
push
pop
arpl
cmp
xor
add
stos
bound
and
sahf
sar
xor
mull
and
sbb
add
xchg
xor
push
pop
xor
psrlw
sahf
or
nop
jno
sub
in
sti
pushf
pusha
into
aas
xchg
iret
cmp
add
add
add
xor
gs
and
movsl
pop
jecxz
out
test
cli
fistpl
mov
and
stc
and
and
sub
loope
into
stos
pop
and
and
test
pop
dec
inc
sub
js
jecxz
mov
mov
mov
mov
lret
xchg
cmpsl
shl
js
cmpsl
inc
js
mov
addr16
add
add
add
ret
xor
std
loop
add
pop
int
repnz
ret
call
pop
adc
mov
out
mov
int
loop
push
dec
or
mov
rorb
and
cltd
pop
int
adc
cmp
or
and
stc
and
imul
xchg
mov
jmp
add
add
add
sahf
add
jmp
push
in
jmp
pop
je
mul
xlat
ljmp
mov
add
inc
and
xchg
das
mov
insl
jno
and
xchg
xlat
test
jno
push
jmp
jno
and
xchg
xlat
test
mov
push
jmp
mov
and
xchg
xlat
test
mov
sub
xchg
scas
dec
in
xchg
pop
je
pop
xlat
aad
add
add
add
push
and
sub
mov
and
scas
lea
cmp
or
add
jne
jae
adc
rcr
and
push
add
pop
dec
mov
add
subl
push
in
js
jo
lahf
pop
sub
pop
in
incl
sub
adc
lods
inc
dec
sbb
add
add
add
add
add
inc
xlat
dec
sub
add
inc
mov
and
mov
xor
inc
add
test
and
nop
and
jb
xor
mov
popa
jg
rorb
fildl
popf
xchg
shrl
ja
mov
shll
pop
fmuls
iret
adcl
aad
mov
lods
jl
add
add
add
adc
enter
and
lcall
cmp
adc
lods
pop
movsb
rolb
nop
dec
out
pop
fcomps
sarl
fdivs
xchg
inc
inc
inc
or
sbb
mov
lea
das
lcall
pop
andl
mov
mov
add
add
add
sub
scas
pop
push
push
or
jno
rcr
lock
pop
or
and
inc
adc
mov
int3
aaa
rcr
sub
sbb
mov
pop
inc
jl
ffree
push
mov
and
out
sbb
xchg
dec
jmp
pop
lret
lcall
stos
lret
ljmp
int
cltd
std
fcmovbe
aam
add
add
add
sbb
xor
jb
push
fcoms
xor
jb
xor
mov
fsubl
xor
mov
aam
call
into
ds
xor
lea
mov
jmp
xor
lea
imul
add
lods
mov
js
adc
gs
dec
push
jg
add
add
add
add
outsl
sti
fidivl
ficoml
xor
jp
in
pop
push
call
iret
push
push
mov
arpl
add
sbb
add
and
mov
or
xor
cmp
mov
scas
jmp
call
ret
shlb
add
or
int
incl
add
add
add
push
jg
call
and
add
push
or
shll
mov
mov
xchg
mov
sbb
pop
and
js
xchg
adc
jge
cmp
enter
dec
cmp
mov
xchg
mov
fwait
xchg
decl
and
call
or
xor
add
add
add
mov
lret
outsl
xchg
and
lea
and
cli
test
fdivs
xor
mov
xor
inc
push
jg
call
mov
xlat
ja
mov
pushf
nop
push
jmp
lods
adc
lcall
xchg
sbb
mov
pop
int
push
jmp
rcll
xor
nop
add
add
add
add
xor
mov
inc
lea
xchg
add
lahf
int3
add
xchg
roll
xlat
fstpl
aad
or
push
cs
or
sbb
sti
push
xor
in
sub
fcoml
mov
or
test
negb
je
mov
add
add
add
add
inc
push
repnz
lret
mov
xor
shlb
jno
test
mov
cmpsl
mov
je
subb
mov
mov
shl
or
stc
jne
adc
repz
cmpb
and
xchg
inc
popa
jne
es
ret
test
jo
add
ret
add
add
in
add
in
and
and
mov
push
inc
xchg
add
sbb
cmp
repnz
gs
add
stos
add
call
stos
shll
adc
push
add
push
test
pop
ds
js
push
xchg
sbb
adc
add
shl
inc
cmp
adc
adc
sbb
stos
dec
int
cmpsl
inc
jne
lock
add
add
add
mov
mov
call
or
xor
shll
arpl
mov
and
out
repz
test
inc
xchg
mov
and
sbb
add
jnp
push
jne
sti
out
ja
add
lock
cwtl
and
mov
dec
add
mov
out
push
sti
adc
xor
cs
test
add
add
add
and
adc
mov
cwtl
lods
stos
lret
jl
call
sub
lea
adc
jl
call
sarl
add
add
shr
mov
int3
mov
andb
push
or
add
sub
jl
call
popa
jl
call
add
and
add
add
add
jp
pop
aas
adc
into
xchg
xchg
add
cmpsb
int3
add
xchg
and
xchg
pop
je
inc
ljmp
push
inc
daa
insl
mov
ret
decl
pop
jnp
add
mov
mov
test
xchg
pop
stos
sbb
mov
dec
xchg
sbb
data16
add
add
insb
pop
and
and
movsl
pop
xchg
pop
test
xchg
mov
nop
test
mov
and
stos
adc
push
push
loop
cmp
cmp
cld
es
arpl
adc
add
cmp
and
xor
jne
push
lea
int3
mov
fs
cmp
je
xor
sbb
fidivl
add
add
inc
adc
adc
jnp
add
je
push
or
xchg
add
push
xchg
and
gs
push
mov
test
mov
add
push
ficoml
xor
in
mov
push
into
sbb
pop
mov
aad
cmp
add
pop
add
add
add
mov
test
and
add
mov
mov
test
cld
adc
sub
xchg
popa
icebp
push
mov
xchg
and
in
sub
xchg
push
sahf
leave
gs
add
sbb
adc
and
sbb
mov
push
clc
pop
rcrl
and
xchg
pop
lcall
add
add
add
aas
iret
mov
inc
fbstp
pop
int
aad
mov
pop
cmp
cmp
sub
push
les
shr
or
enter
add
jle
loopne
outsl
mov
mov
int
sbb
aad
xchg
pop
inc
fdivs
andps
mov
push
test
out
jge
pop
or
leave
adc
add
add
add
sbb
addl
and
xchg
cs
in
ret
decl
adc
call
mov
lods
dec
jae
pop
add
fdivr
pop
fs
jmp
mov
sbb
cmp
xlat
jb
in
jae
sub
xlat
shlb
and
orl
add
add
jg
jo,pt
ficomps
jno
in
subb
jmp
out
adc
push
ret
and
scas
xor
in
or
sub
repnz
je
rcr
inc
js
lahf
call
in
fildll
test
add
add
push
add
add
je
addr16
pop
test
pop
aaa
xor
inc
cmp
add
add
add
bsf
lahf
rcrb
pop
jns
ficoml
idiv
sbb
out
jecxz
lods
daa
adc
scas
aas
and
push
adc
add
pushw
enter
xor
add
data16
push
push
xchg
inc
daa
push
or
cmpsb
pop
push
and
dec
test
test
mov
test
pop
xchg
push
mov
jbe
or
xchg
push
and
add
or
push
repz
and
adc
xchg
push
and
push
and
leave
out
add
push
es
sbb
pushf
and
xchg
shlb
xor
loop
daa
ja
out
add
cmp
lea
and
pop
push
jmp
fwait
and
xor
jle
inc
add
into
jg
pop
int
add
add
add
push
add
jb
mov
jle
popf
int
dec
daa
cmpsl
cli
shr
loopne
add
rsqrtps
testl
inc
mov
xchg
iret
jo
leave
pushf
add
ss
mov
fsubrl
out
incl
xchg
push
jbe
mov
jmp
aam
int3
loopne
je
cmp
aaa
pop
dec
and
add
add
add
adc
xlat
xchg
pop
pusha
adc
or
fsub
xchg
push
push
lea
movsb
mov
mov
mov
lea
orb
int
cmpsb
pop
lds
dec
and
shrd
push
lods
sub
adc
fs
daa
bound
mov
add
add
popf
mul
jo
ljmp
xchg
mov
pusha
insb
out
add
or
xchg
or
jmp
or
mov
and
test
mov
mov
add
test
fiaddl
push
and
and
test
mov
js
lahf
inc
pusha
xchg
mov
add
movsb
sbb
add
add
add
cmp
push
xor
push
jno
lea
push
lods
inc
add
fidivl
pop
out
xlat
xorb
push
aam
inc
or
or
jmp
fwait
jmp
push
jbe
jecxz
cs
insb
stc
mov
add
pop
lods
icebp
sub
orl
repz
inc
jle
adc
sbb
rolb
add
add
add
aad
xlat
icebp
dec
add
icebp
movsb
in
test
hlt
push
mov
push
and
lods
sub
xchg
cs
inc
jne
lods
adcl
ret
daa
add
into
add
pop
mov
es
pop
idivb
push
int
push
mov
add
stc
int3
mov
mov
add
add
sbb
or
add
jmp
mov
jmp
add
push
push
mov
inc
scas
pop
call
push
add
adc
cmc
inc
and
mov
mov
shlb
cli
pop
aam
in
and
movsl
mov
pop
popf
mov
sbb
mov
add
add
test
inc
xchg
sub
into
xchg
pop
sbb
xchg
pop
daa
sbb
and
das
dec
movsl
inc
and
jmp
xchg
pop
mov
sbb
adc
test
daa
push
pop
inc
cmp
mov
sbb
out
adcl
xchg
pop
xlat
hlt
inc
adc
sar
cli
add
add
add
cmpsl
fwait
cmp
outsl
and
movsb
pop
and
xlat
jecxz
lods
das
xor
ljmp
addb
push
push
jnp
pop
add
pop
fidivl
int3
push
or
sub
adc
call
dec
add
mov
sub
call
pop
sbb
or
jg
je
js
push
test
popa
add
in
jecxz
movsl
repz
xor
add
add
add
sub
xor
and
sub
jp
outsl
and
add
test
pusha
cmp
sbb
adc
stc
mov
push
nop
and
xchg
out
loopne
mov
adcl
jle
mov
dec
nop
and
xchg
pop
adc
test
pop
out
adc
xor
add
add
add
aas
jns
jl
cmp
sbb
test
lahf
add
pop
and
or
xchg
in
sbb
push
stos
lea
and
fsubl
cmp
cli
cld
adc
leave
push
int
mov
mov
int
push
repz
in
lcall
ljmp
outsb
mov
call
add
add
add
jg
sub
divl
mov
lret
and
cs
leave
popf
xorb
push
sub
inc
roll
jecxz
jge
jecxz
jmp
or
lret
xchg
pop
int
xor
lcall
push
int3
test
xlat
jb
jmp
push
push
and
nop
and
test
jmp
rcrb
stos
movsb
add
add
add
movsl
jecxz
scas
scas
xchg
push
jbe
rclb
and
xchg
mov
cmc
xchg
xchg
orl
and
push
mov
and
xchg
test
scas
in
push
or
and
adc
cmp
cmpsb
and
lcall
mov
fistps
les
jb
outsb
sti
lods
add
add
add
add
or
int
jl
cli
add
repz
push
adc
mov
push
jae
sahf
cmp
pop
xchg
mov
add
add
jp
rol
dec
adc
jae
add
mov
xor
mov
mov
xlat
push
add
push
fistl
test
jo
and
add
add
add
cmpsl
add
addr16
xchg
cmpsl
movsl
pusha
nop
and
xchg
sbb
popf
sbb
and
mov
dec
rorl
dec
or
xchg
push
fwait
leave
das
and
jmp
clc
cmp
push
cmp
jne
xchg
mov
push
jl
subl
and
popa
xchg
test
add
add
add
nop
and
xchg
cmpsl
test
nop
cs
addr16
jmp
mov
and
xchg
pop
popf
jp
xchg
add
pop
int
sub
outsb
adcb
int3
add
pop
int
cli
jle
add
mov
int
pop
push
in
xchg
pop
int
push
jecxz
add
add
add
add
inc
cmp
xchg
nop
xchg
or
int
pusha
mov
xor
add
popa
mov
add
addb
nop
int3
cltd
xchg
sbb
adcb
mov
imul
xchg
pop
dec
add
test
xchg
pop
stos
fucomp
test
jge
das
imul
pop
mov
mov
shlb
xor
lea
add
add
stos
ja
pop
and
stos
nop
xor
xchg
sbbb
push
xchg
push
cmp
sbb
jmp
adc
jmp
lea
pop
int3
ret
and
push
add
jns
xor
jno
add
or
aam
add
fmulp
pop
jb
and
mov
mov
add
add
and
mov
lcall
xchg
sti
fstpt
cmp
mov
mov
add
call
insb
dec
pop
cli
call
nop
sbb
clc
add
xor
pop
not
adc
movsl
mov
inc
in
and
mov
insl
sar
inc
lcall
cmp
and
add
add
add
shll
jl
nop
and
xchg
cs
rcr
pop
inc
xchg
pop
or
sbb
push
inc
xchg
cmpsl
mov
add
das
and
push
sbb
push
shrl
gs
mov
and
pop
daa
call
dec
add
push
dec
rcrb
xchg
jecxz
xchg
fucom
push
or
lret
inc
add
add
add
mov
mov
and
push
pop
je
daa
inc
shrl
pop
fcmovnb
xchg
aad
jmp
mov
in
jl
mov
add
dec
mov
pmulhw
stc
push
cwtl
mov
jbe
icebp
int
add
lock
mov
adc
pop
dec
aas
xchg
orb
xchg
pop
int
popf
pop
cmc
push
sbb
xchg
jl
add
add
add
mov
add
pop
int
lahf
pop
add
cmp
add
dec
mov
lds
push
jbe
call
lahf
das
xor
sbb
jnp
xchg
pop
mov
lahf
add
jmp
inc
lahf
shll
in
pop
mov
sub
and
xchg
mov
cmp
call
xchg
mov
jl
add
add
add
test
xchg
pop
into
ret
outsb
adc
fs
or
fildll
es
scas
adc
les
stos
adc
scas
fwait
pushl
xchg
inc
xlat
sbb
mov
outsb
add
push
adc
test
pop
and
mov
je
xchg
addr16
cmp
mov
xor
lret
leave
cmp
lods
dec
test
sahf
dec
add
add
add
xchg
and
xorl
sub
imul
add
sub
or
in
xor
aas
outsb
xor
cltd
adc
aaa
sahf
in
pop
cmp
push
jae
jb
jnp
and
or
iret
mov
xchg
pusha
cld
add
push
rolb
je
fwait
jecxz
addr16
adc
ror
add
add
add
push
jmp
xchg
sbb
pop
inc
add
xchg
or
pop
fisttpl
int3
repnz
in
mov
pop
and
fsubl
mov
cs
pusha
lret
push
push
or
cmp
das
add
ficoms
popa
fdivr
adc
dec
fcompl
out
pop
fld
pop
lret
inc
mov
ljmp
add
add
add
or
add
mov
sbb
int
add
call
push
cmp
int
pop
int3
and
fdiv
and
scas
xchg
jle
fwait
rcrb
repz
lods
push
lods
push
shlb
ret
dec
mov
lods
cli
andl
push
lret
loopne
xchg
dec
or
addl
push
add
add
add
or
inc
testb
ret
push
pop
and
mov
call
int3
mov
adc
insb
push
or
jmp
out
dec
jmp
mov
je
xchg
mov
aad
mov
inc
and
and
or
ficompl
ret
stos
daa
mov
jmp
orl
add
add
leave
cmp
xlat
imul
in
fistl
push
ljmp
xor
incb
xchg
call
stc
add
pop
mov
adcl
add
inc
xlat
mov
and
mov
dec
imul
js
aam
push
xor
ss
dec
mov
jne
repz
jl
add
add
add
and
mov
or
iret
icebp
cmp
xlat
jmp
outsl
add
push
je
jge
xchg
pop
testb
insb
dec
cltd
add
fs
in
sub
push
mov
or
xchg
pop
lahf
xlat
jge
cmpsb
je
xor
mov
jne
gs
movsl
jno
mov
pop
add
mov
in
push
int
push
sbb
add
add
adc
and
xchg
lock
sbb
lret
pop
cmpsb
cmp
push
push
and
add
sub
lea
and
xchg
xchg
out
leave
movsl
cmp
pop
push
xor
sub
mov
bound
sbb
and
xchg
adc
and
pop
mov
push
adc
push
cmp
jmp
push
lcall
faddl
add
add
add
mov
testl
rorl
xchg
mov
or
test
aam
pop
rorl
add
pop
int
add
and
adc
cmc
xchg
fwait
lods
jle
int3
mov
je
add
mov
add
add
loopne
sbb
pop
popf
mov
divb
add
add
add
adc
and
lcall
rcr
loopne
sub
ret
clc
daa
add
lahf
lods
lret
stos
mov
inc
cmpsl
and
xchg
pop
aad
mov
lret
ljmp
jnp
lea
shlb
call
testl
jmpw
in
xchg
add
leave
xchg
pop
and
dec
aaa
outsl
push
cmpsb
ret
add
add
add
inc
jl
leave
xchg
pop
and
or
push
jno
push
int
adc
add
add
dec
js
jnp
push
hlt
les
add
or
mov
add
xor
mov
lret
rcr
sub
push
jae
push
in
test
or
or
test
push
xor
ficoml
cmp
sbb
mov
add
add
add
enter
test
test
xchg
fwait
and
js
pop
and
inc
stos
inc
push
or
jnp
and
repz
movsb
push
xchg
and
xchg
and
jg
inc
pop
add
inc
dec
add
pop
and
add
mov
push
into
fwait
mov
call
cwtl
ret
pop
jg
pop
push
add
add
add
add
mov
xchg
shlb
rorl
mov
jg
sbb
add
mov
push
mov
icebp
mov
or
mov
outsl
sbb
jae
mov
and
pop
jnp
sbb
loope
xchg
pop
int
dec
inc
es
add
call
add
pop
inc
jb
inc
adcb
int
add
add
add
sbb
and
sbb
js
mov
cmp
dec
jecxz
mov
and
cmp
mov
or
ds
stc
mov
cmp
sahf
mov
lcall
jecxz
mov
ret
and
jbe
sub
jp
out
jle
mov
inc
int3
mov
adc
xchg
lcall
add
add
mov
xchg
inc
int3
and
sub
lea
test
imul
and
dec
pop
out
xchg
adc
mov
lods
aad
jge
in
push
jp
leave
xchg
pop
and
pop
mov
call
imul
adc
xorl
stc
sbb
xchg
pop
and
cltd
decb
add
add
and
pop
dec
push
add
fucomip
jp
cmc
jp
test
pop
and
jle
and
mov
es
sub
cmpsb
pushf
cmp
and
lods
mov
sub
and
dec
jns
test
js
mov
fdivrl
out
mov
dec
mov
sub
lock
cmp
push
pop
je
lock
add
add
add
xchg
daa
xor
add
test
xchg
shll
push
or
and
fdivrp
lahf
ds
pop
and
add
ret
lret
xchg
and
push
push
sub
out
cmp
adc
pop
and
inc
pushf
ret
lret
xchg
and
or
in
pop
add
loopne
test
and
add
add
add
lods
test
add
add
add
lock
jmp
push
cmp
xchg
mov
out
scas
and
add
div
xchg
and
push
sbb
pop
pop
and
xchg
or
lods
cmp
add
or
add
dec
sub
pop
int
mov
jg
stc
aas
js
pop
int
xchg
lahf
pop
add
jnp
add
add
add
add
int3
add
mov
pusha
mov
je
mov
call
shll
nop
xchg
jl
repz
shll
inc
loope
inc
cmp
lret
lcall
jo
call
pop
addl
lea
and
stos
int3
mov
aam
mov
xor
add
add
add
out
jbe
xlat
mov
pop
and
mov
mov
jmp
aad
in
xchg
jle
out
test
sub
add
or
rcrb
jnp
or
jp
out
jmp
push
or
jmp
movsb
daa
inc
incl
sbbl
add
add
add
xchg
add
cmp
cmp
addr16
js
pop
and
mov
add
push
loope
outsl
lea
add
lea
add
pop
repz
je
scas
insl
xchg
ja
or
fbstp
lahf
mov
mov
into
push
add
sahf
sub
test
cmpsl
and
dec
and
xchg
mov
int
lock
inc
insl
fsubr
mov
lock
lock
ret
cltd
xchg
jg
hlt
xchg
push
mov
aas
mov
adc
ret
into
idiv
adc
or
and
lock
or
or
mov
and
add
cld
push
xchg
lock
in
mov
test
lea
fmull
jmp
inc
lods
or
aas
mov
mov
add
and
cmpsb
jns
sbbl
inc
mov
lcall
dec
and
cmovl
lock
add
cmp
int3
mov
jb
shlb
add
add
add
lods
or
mov
adc
int3
add
pop
push
ret
mov
sub
pop
int
sarl
adcl
adc
orb
loopne
push
jle
add
mov
test
leave
add
outsl
sbb
xlat
sahf
pushf
dec
or
in
xlat
mov
dec
add
call
ror
inc
pop
add
insl
aad
sub
add
add
add
xor
bound
int
stc
sti
shlb
pushf
sbb
stos
cmp
inc
xlat
popf
xchg
test
jmp
test
movsb
clc
push
add
aaa
insl
popf
pop
jmp
out
or
sbb
jne
incb
jb
and
adc
xchg
add
add
dec
and
arpl
lahf
stc
pop
cmc
dec
adc
lahf
lock
or
andl
addl
add
add
jbe
fildl
mov
mov
mov
idivb
push
shl
popf
into
add
mov
test
dec
int3
adcl
loope
push
rclb
nop
mov
jmp
jno
xchg
xchg
mov
mov
fstpt
addr16
jae
mov
shl
and
xchg
lock
add
add
push
lret
mov
insb
pusha
or
arpl
out
jne
call
adc
sub
cs
ja
repz
enter
ljmp
jnp
psraw
sub
lahf
push
jne
aam
sub
and
mov
jne
movsb
add
add
push
ret
shr
xchg
pop
adc
cli
cli
movsb
pop
dec
hlt
mov
bnd
ficomps
adc
inc
fidivrl
sbb
int
lret
clc
into
pop
or
sbb
or
lcall
pop
das
jg
pop
inc
xchg
xchg
mov
clc
ja
repz
and
fisubrs
or
and
clc
add
add
add
xchg
adc
cwtl
mov
and
xchg
jp
jle
sub
rcrb
mov
xchg
leave
or
fs
cli
xor
add
mov
and
cltd
mov
push
ljmp
rorl
enter
shlb
pop
mov
sub
xchg
mov
sbb
jo
add
add
add
xchg
call
inc
push
outsl
jb
sub
in
dec
sub
sub
sub
sub
imul
jg
jb
mov
add
gs
outsl
bound
adc
xchg
sbb
ljmp
xor
divb
inc
push
iret
clc
mov
or
xchg
pop
add
add
add
add
cwtl
aaa
push
push
push
and
xor
jecxz
mov
add
add
or
in
or
test
jl
push
mov
or
or
jl
and
mov
push
ret
mov
and
sbb
outsl
pop
mov
lea
or
xchg
lock
rcrb
out
add
add
add
mov
and
arpl
jmp
ja
ret
lods
adc
in
cmp
fwait
dec
sbb
and
imul
jge
mov
pop
inc
test
cli
movsb
xor
aas
xchg
imul
jno
and
lods
mov
xchg
add
cs
call
pop
dec
insl
fdiv
enter
adc
add
add
add
mov
cmpsb
fmul
lret
ror
jae
jp
mov
cmpsb
xchg
and
xlat
jne
xchg
and
xchg
push
cmp
adc
mov
repz
cmpsb
or
and
sub
mov
pop
push
mov
nop
add
dec
fsts
repnz
mov
mov
xchg
push
cld
lahf
inc
stc
cmpb
xchg
add
add
add
or
add
or
mov
cli
mov
inc
inc
mov
inc
fcomps
xchg
xlat
xchg
adc
std
lahf
sub
popa
mov
mov
shl
stos
xchg
sahf
sub
add
adc
xlat
push
xchg
jns
jb
mov
popf
iret
pop
jmp
mov
test
add
add
inc
sarb
test
xlat
fcompl
fs
adc
in
adc
pop
pushf
push
or
pop
jl
test
xchg
sub
jmp
push
jg
addl
or
fsts
mov
andl
or
rclb
jp
cld
pop
push
in
hlt
mov
push
add
add
add
lahf
jl
and
mov
or
add
inc
adc
nop
pop
or
mov
es
mov
push
mov
push
les
adc
pop
push
xchg
push
scas
cmpsl
inc
pushf
jmp
popa
sub
xchg
mov
add
std
or
push
cmp
xor
es
movsb
mov
adc
and
add
add
add
push
xchg
mov
adc
mov
xor
pop
nop
aad
xchg
and
dec
or
loop
mov
out
pop
loopne
in
pop
pop
pop
adc
push
sbb
movsl
sahf
lock
jp
lock
or
adc
aas
xchg
adc
or
and
dec
mov
pop
sub
or
add
add
add
out
mov
inc
inc
movsb
add
inc
sbb
testl
pop
dec
inc
lea
int
and
pop
inc
lea
btr
add
add
push
fdivp
adc
xchg
or
ret
cmpsb
sbb
add
ret
xchg
stc
int3
test
add
add
add
addl
xchg
test
idivl
stc
dec
in
mov
add
xchg
jae
push
add
xlat
hlt
sbb
inc
adc
mov
stos
sahf
out
in
popf
sub
stos
cwtl
and
fs
xor
js
sar
test
in
ja
xchg
fwait
adc
sar
js
push
push
stos
fsubs
pop
in
pop
and
push
add
add
add
aad
push
dec
sar
scas
sub
jo
inc
movsb
pop
add
repz
into
outsl
and
push
add
call
es
push
add
inc
xchg
ljmp
add
add
xchg
and
sub
xor
add
pop
outsl
ret
xchg
cld
popf
inc
aam
stos
inc
add
add
add
in
jp
and
jl
adc
loop
sub
push
jae
test
add
add
int3
cmc
test
and
dec
test
mov
add
add
loopne
dec
add
dec
dec
test
xor
ret
dec
pop
inc
xchg
fsubl
xchg
sbb
ret
xlat
incl
add
add
add
imul
mov
and
ret
sti
jge
push
xchg
add
jecxz
daa
gs
shl
jmp
shll
and
popa
shl
enter
or
jle
dec
sbb
xchg
pop
sti
inc
mov
push
jnp
das
lret
add
std
fsubr
pop
adcb
mov
inc
cmc
add
add
add
lahf
xor
negb
int
adc
test
jmp
or
add
idivb
fisttps
or
add
or
mov
jg
and
adc
cmp
xchg
pop
sbb
negb
imul
lea
aaa
jnp
int
cmpsl
or
jmp
mov
scas
add
add
add
pushf
test
xchg
cmp
enter
inc
and
xchg
fisubs
jmp
data16
push
sti
fildl
in
stc
cmp
xchg
mov
xchg
fcomip
jmp
xchg
je
or
adc
sub
cmc
lret
and
mov
mov
negl
je
call
out
push
jmp
add
add
add
aad
adc
adc
mov
xor
push
lds
out
incb
and
push
add
dec
jp
icebp
cmc
xchg
mov
jb
stc
je
jne
outsl
sub
fwait
or
jmp
ljmp
es
or
sub
subb
cmp
xor
push
mov
cmp
or
mov
add
add
add
enter
test
xor
push
and
add
mov
jge
push
inc
call
lock
shrl
jne
icebp
bound
fs
movsl
inc
xchg
movsl
lds
push
and
loopne
and
mov
mov
jnp
and
mov
sbb
sti
in
push
repnz
nop
xchg
add
add
add
and
inc
xchg
sub
cmp
sti
movb
je
cld
pop
jl
lock
dec
lods
clc
xor
loopne
push
inc
gs
call
fidivrl
mov
jnp
pop
push
pop
out
pop
sbb
bound
lret
out
inc
pusha
jne
pop
pop
push
out
push
cmc
pop
sbb
outsb
mov
add
add
add
add
mov
jle
push
mov
sbb
add
add
nop
adc
das
add
add
pop
fcmovb
fbstp
mov
cltd
jns
cs
jge
adc
test
lea
dec
loope
outsl
loop
ret
pop
lcall
ret
sarl
cmp
jecxz
negl
push
jns
push
or
add
add
add
add
jg
xor
jns
outsb
scas
jns
sub
mov
out
inc
sbb
repz
jnp
lcall
and
fisttps
sbb
lret
sbb
ja
jae
in
xor
push
std
xchg
call
push
add
mov
fildll
pop
imul
add
add
add
add
add
and
jmp
addr16
inc
mov
or
xorl
push
aas
and
fistps
int3
adc
jp
and
or
pop
add
movb
cvtps2pi
inc
js
movsb
jle
add
jne
out
out
ret
add
sbbl
dec
fmull
nop
jl
add
add
add
add
and
sub
in
and
mov
in
adc
sbb
add
sbb
dec
sbb
mov
add
or
or
mov
add
fisubs
lea
dec
adc
dec
ds
fidivs
test
inc
xchg
pop
fisttps
adc
xor
orl
lea
cmp
add
aad
decb
dec
repz
sbb
dec
adc
pop
je
cltd
jns
or
pushf
pop
push
pop
cmp
jb
adc
or
loope
movsl
test
jl
das
xchg
je
mov
rsqrtps
daa
mov
push
inc
out
xlat
addr16
adc
inc
les
inc
dec
insl
clts
or
or
add
inc
sub
in
sbb
add
add
add
scas
add
addr16
add
aam
testb
push
dec
xchg
xchg
or
sar
jecxz
xchg
sub
sbb
jne
add
jl
ja
xchg
jp
inc
adc
add
inc
pop
out
bound
pop
xlat
inc
xchg
pop
and
popa
and
fs
jmp
out
lock
sub
stos
movsl
mov
int3
lret
rolb
add
add
add
in
jmp
xchg
negb
fiaddl
and
dec
pop
xlat
aam
sbb
bound
std
arpl
mov
lds
add
test
test
mov
test
mov
test
test
adc
and
rcll
add
shlb
jae
inc
addr16
push
decb
or
add
add
add
pop
xor
jle
out
xchg
push
out
inc
push
sub
push
les
inc
adc
aas
add
inc
and
mov
fcmovnb
adc
das
lahf
lret
and
jmp
andl
dec
jge
and
loopne
push
js
sahf
inc
dec
and
add
enter
dec
push
les
add
add
add
mov
mov
cli
das
das
dec
xchg
movsl
dec
jne
test
pop
mov
arpl
je
push
and
jns
push
and
jns
test
jno
lea
test
adc
dec
or
popa
int
cmpsl
push
and
leave
popf
mov
insl
into
pusha
add
or
or
lret
jp
dec
repnz
loopne
add
add
add
add
out
clc
mov
and
rorl
nop
pop
int
push
mov
insl
call
out
jae
mov
and
add
fistpll
dec
mov
and
mov
dec
jg
xchg
nopl
scas
mov
and
dec
jne
inc
push
insl
push
inc
pop
add
add
add
jne
cmc
scas
xchg
pop
int
mov
fisttps
or
jle
and
and
xorb
inc
xchg
int3
mov
icebp
cli
loop
and
or
sbb
inc
call
pop
mov
fisttpll
pop
and
addr16
aad
lret
lret
outsb
add
xchg
je
daa
push
jmp
aam
outsb
add
jge
cli
call
add
xchg
pop
and
lahf
hlt
push
roll
lds
push
and
pop
jae
and
and
xchg
and
jl
adc
lahf
mov
push
and
lcall
lea
call
add
out
mov
in
cmpsl
dec
push
and
and
imul
add
lahf
in
or
add
add
add
pop
fadd
movaps
xchg
rol
enter
lcall
or
divl
add
idivb
and
push
test
mov
fsubrs
jne
xor
jmp
jp
and
push
lahf
into
push
and
ljmp
pop
and
jo
adc
loope
jl
repnz
or
push
ds
sub
add
add
add
push
sbb
push
loope
jae
aad
pcmpgtd
lock
sbb
in
popf
loopne
inc
jne
xchg
sbb
leave
push
icebp
xchg
adc
fs
ret
cli
adc
daa
dec
fs
test
cli
into
arpl
pop
addr16
jns
aad
loopne
xchg
gs
sub
pop
adc
mov
fnstcw
popf
cmp
add
cmpsl
adc
xchg
dec
jns
sbb
mov
and
out
test
movsb
mov
add
into
xor
cmp
mov
mov
inc
pop
xchg
pop
inc
ret
cwtl
lds
sti
lret
outsb
pushf
xchg
xchg
pusha
xchg
push
xchg
out
cld
dec
jmp
dec
ret
leave
aad
lods
sti
inc
aam
xlat
and
add
add
add
mov
sub
add
daa
inc
ds
mov
fwait
iret
cmp
jecxz
and
in
pop
in
adc
dec
push
loope
pop
xchg
inc
jbe
lret
jmp
xchg
pop
jae
fists
test
loope
pop
and
sub
mov
negb
mov
mov
jmp
add
add
xchg
mov
adc
dec
add
adc
jmp
sbb
jecxz
pop
push
xchg
addr16
xchg
pop
mov
add
jne
sub
ds
and
pop
lahf
cmp
adc
jmp
sub
stc
movsl
in
add
pmaddwd
popf
repz
stos
je
adc
pushw
add
add
or
mov
int3
lret
clc
or
inc
mov
lea
lahf
ret
andl
test
pop
and
jmp
add
rclb
inc
mov
add
pop
inc
rorl
and
xchg
icebp
mov
push
lea
fidivs
mov
adc
or
inc
and
out
cmp
in
jnp
add
add
add
lds
nop
out
and
mov
lret
jne
call
or
lahf
cmp
leave
ss
popa
adc
and
lock
or
push
and
das
rolb
fldl2e
mov
dec
add
inc
fs
pop
repnz
push
pop
cmp
add
add
add
insl
push
aas
insl
xor
shlb
mov
ret
pop
adc
or
sub
negl
shrb
jmp
and
inc
int
add
mov
out
es
out
js
jb
int3
add
jecxz
inc
lods
das
jecxz
cli
sbb
mov
dec
xchg
nop
sbbb
add
add
add
loop
aas
jne
and
mull
lock
and
xchg
outsl
mov
sar
and
push
mov
lcall
pop
and
fldt
insb
fldcw
pop
cmp
mov
inc
xchg
pop
and
stos
sub
push
mov
call
es
scas
add
add
add
add
mov
mov
jmp
jbe
add
mov
out
jle
xchg
pop
mov
mov
and
mov
pusha
in
call
cmp
push
add
rolb
add
inc
xor
cwtl
aam
fs
and
xor
lahf
rolb
out
add
add
add
add
cmp
jp
sub
cmp
popf
inc
xchg
imull
add
inc
test
and
xor
jae
bound
call
loop
std
fcoml
sarb
fsts
into
sbb
sti
cld
lret
gs
pop
and
sbb
cmp
insl
in
or
or
sub
jl
mov
add
add
shr
lahf
ret
lea
and
jbe
add
push
and
xchg
cmp
sar
sbb
or
cmp
ds
ss
cs
push
mov
sub
loop
outsl
andl
pop
and
xchg
sub
lcall
push
loopne
repz
inc
outsl
adc
pop
lcall
pop
mov
add
add
add
movsl
addr16
inc
xchg
test
inc
xchg
insl
lret
stos
pop
es
test
mov
test
fildl
cwtl
lcall
in
add
jno
jle
mov
cmp
movsl
inc
xchg
test
bound
push
int3
mov
lcall
sbb
imul
xor
and
add
add
add
xchg
out
inc
enter
movsb
fimull
mov
push
jle
push
pop
lahf
es
rorb
in
in
push
mov
call
rcr
into
adc
jbe
cmp
cmp
mov
bswap
lock
and
mov
jbe
mov
mov
and
sub
adc
ljmp
add
add
or
jmp
leave
pop
and
or
out
flds
mov
lods
xor
sbb
das
call
and
test
and
frstor
xchg
je
pusha
fucomip
cmpsl
sbb
xor
lahf
test
lods
aaa
or
add
jns
sub
in
sti
mov
add
add
insl
mov
jb
popf
xlat
popf
icebp
dec
and
nop
mov
lahf
in
das
lock
dec
and
cmp
add
pop
xchg
inc
mov
push
dec
lahf
mov
fnsave
add
mov
cmp
subl
dec
in
adc
out
and
sub
pop
add
mov
mov
mov
add
add
popf
dec
sub
add
ret
out
pop
cli
adc
enter
pop
in
imul
cmp
je
jne
js
and
rclb
xor
push
leavew
push
loop
push
sbb
jno
xor
dec
loopne
add
add
sbb
push
arpl
lret
xchg
add
arpl
sbb
lods
add
add
add
add
and
push
push
mov
xorb
add
fistl
cltd
sub
jl
or
jne
gs
push
inc
int
nop
pop
int
jnp
adc
roll
mov
test
jle
outsl
xor
mov
int
adc
jg
and
fdivl
jbe
mov
fidivl
pop
adc
and
xchg
pop
dec
mov
add
push
and
jb
cmp
ja
add
inc
xchg
arpl
pop
int3
popa
je
and
dec
and
sarb
jecxz
cli
stos
call
es
call
xchg
dec
push
jl
jbe
push
in
stos
xchg
pop
adc
add
out
ficompl
xchg
mov
mov
add
add
add
inc
add
stos
jmp
jne
pusha
arpl
ss
lods
pop
add
and
sbb
js
clc
add
hlt
adc
jmp
pop
push
and
pop
arpl
mov
outsl
mov
push
test
addr16
xor
jno
sbb
inc
add
ficompl
and
xor
add
add
in
push
add
and
cmp
sbb
adc
jno
mov
mov
lcall
insl
lret
jne
leave
adc
fisubs
adc
push
sbb
ss
cmp
and
jle
push
mov
pop
dec
lods
mov
sbb
and
loope
sbb
jae
rcrb
test
push
inc
jg
add
add
add
lahf
pop
inc
insl
fidivl
inc
imul
and
push
bound
xchg
out
and
jle
and
mov
int3
cli
sbb
out
jns
cmc
pop
fcoms
rcpps
prefetcht2
test
mov
inc
push
int
rorl
rcrb
aas
repnz
dec
and
pop
jmp
xchg
mov
faddl
add
add
add
adc
stos
clc
add
loopne
nop
pop
int
into
xlat
mov
cmp
push
rcrl
jl
cmp
dec
push
jmp
xor
xor
popf
inc
cmc
ficomps
pop
fiaddl
sbb
dec
loopne
out
fs
bound
sub
sbb
xlat
cwtl
imul
loop
loopne
and
test
fcmovnu
xchg
add
add
add
shrb
add
aam
push
in
or
inc
outsb
roll
sbb
adc
fcom
push
and
lret
loopne
ror
ret
rcl
mov
int
stos
add
xchg
pop
outsb
jb
out
sbb
rcrl
pop
aad
add
popa
dec
push
dec
mov
push
add
add
add
push
jecxz
mov
lea
xor
add
dec
and
insb
iret
jl
imul
dec
inc
ds
aaa
pop
fildl
clc
inc
push
cmp
push
les
and
das
inc
pop
orb
jmp
push
cmp
insl
fisubs
or
mov
mov
or
add
add
add
pushf
mov
cli
inc
loopne
pop
fcompl
push
fsubs
jb
pop
sbb
push
mov
fisubs
call
cmp
jns
stos
insl
push
and
push
cmp
mov
stc
xchg
mov
cld
or
sti
enter
test
jns
mov
inc
pushf
data16
add
add
jne
jno
enter
mov
fisubs
cld
cmp
in
cmp
sbbb
push
loopne
js
shll
rorl
mov
add
lret
sarb
filds
hlt
dec
aam
add
xor
push
fdivs
pop
negb
ss
cmp
std
mov
mov
shlb
add
add
pop
mov
pop
testb
add
fildll
jmp
add
pop
fmulp
outsl
ds
jle
or
das
or
das
or
inc
cmp
bound
jle
or
push
mov
addr16
insl
into
lahf
test
xchg
pop
stos
lahf
cmp
outsl
lds
sub
addl
add
into
xchg
loop
pushf
test
into
insl
push
pop
sub
jmp
inc
in
int
pop
jns
stos
movsl
xchg
daa
lods
int
sub
lea
mov
sub
push
out
push
pcmpeqd
shlb
mov
mov
adc
and
aaa
add
push
xor
decl
xchg
jne
add
add
add
fistl
aaa
add
push
sahf
and
je
in
and
xorl
dec
fisubrs
sti
mov
and
and
ljmp
fdivp
stc
outsl
out
ret
aas
dec
jns
imul
push
add
adcl
jecxz
scas
out
call
xchg
arpl
je
mov
cli
add
add
add
scas
negb
xlat
or
pop
or
jns
idiv
xchg
or
pop
lea
out
xchg
sar
sti
or
xchg
stos
pop
jne
cmpsl
push
insl
lret
jne
cmpsl
pop
insl
xchg
lret
push
ret
ljmp
or
push
push
faddl
push
fidivs
mov
add
add
add
add
xchg
fisubs
pop
or
mov
jno
push
shrb
jl
daa
jno
mov
fstp
xchg
hlt
stos
rorb
and
scas
nop
dec
sub
in
jmp
js
lret
leave
add
mov
inc
and
jns
movl
pop
pop
mov
mov
pop
fsub
ret
mov
sub
fldl
add
add
add
rolb
add
and
andb
filds
fdivr
iret
push
lds
mov
add
popf
cmp
sbb
ljmp
jg
xor
lds
in
es
rorl
ficoms
cmp
add
lret
scas
push
rcl
jb
and
and
and
add
add
add
sahf
and
jo
and
xchg
cmp
push
dec
cmp
sbb
sahf
xchg
into
jb
xchg
push
imul
push
push
push
clc
pop
inc
add
enter
cmpsl
out
lock
mov
xlat
push
add
add
add
mov
jl
pop
out
outsl
cmpl
mov
adc
out
push
add
add
add
add
pop
add
icebp
inc
add
push
pop
fdivr
push
jg
paddsb
and
lea
das
pop
ds
and
in
test
subl
and
mov
add
adc
into
pushl
push
jl
and
lock
lods
add
out
sahf
fstl
cld
xlat
cs
push
xchg
or
add
add
add
and
xchg
arpl
or
test
jne
test
inc
or
fiaddl
stc
cmp
cli
std
add
pushf
inc
into
aas
xchg
popa
fisttps
or
jnp
or
or
and
cmpsl
push
adc
mov
loop
ss
icebp
in
movsl
mov
stos
xchg
xchg
fisubs
data16
sbb
push
pop
sub
popa
jp
daa
add
add
add
mov
andb
filds
ret
pop
xor
mov
fs
add
add
hlt
inc
inc
insl
pop
hlt
add
icebp
add
or
push
arpl
stos
pop
hlt
mov
mov
movsb
aad
pusha
cld
xor
fldl
mov
cmc
in
out
xor
dec
and
sub
add
add
add
push
jmp
sti
aaa
icebp
and
in
jge
shrb
sbb
lret
lret
addb
lds
stos
pop
cli
js
jmp
in
shrb
loop
rcl
fs
and
cli
aad
push
sbb
mov
cwtl
shll
and
push
aaa
add
sbb
jmp
add
xchg
roll
mov
mov
testl
jg
shrb
or
stos
add
lock
popa
xor
adc
cmp
mov
jae
add
xchg
or
push
or
cmp
imul
ljmp
jmp
stos
mov
pop
rorl
lahf
repnz
add
add
add
stos
mov
test
and
cmp
push
add
and
outsb
mov
jmp
mov
mov
jmp
pop
and
or
sub
int3
adc
sbb
mov
shl
xchg
arpl
add
sub
adc
mov
nop
pop
add
add
add
out
movsl
int
out
dec
int
mov
divl
repnz
gs
fcomps
push
inc
push
out
test
dec
xor
jg
movsl
shrl
cli
jbe
sti
test
and
dec
mov
push
or
cwtl
xchg
fisubs
call
sbb
mov
cmp
mov
mov
outsb
int3
add
add
add
add
leave
inc
mov
pop
les
xor
jae
inc
lret
mov
out
int3
jmp
rcll
roll
inc
inc
lds
pushf
out
int
ret
mov
repz
movsl
push
leave
mov
fbld
mov
cltd
shr
jl
cmp
sbb
loop
cli
jg
push
cmp
push
imul
add
add
add
add
sbb
fcomi
loopne
aas
sbb
pushf
jae
pop
and
mov
jle
mov
lret
loopne
rcll
enter
xlat
rorb
cmp
mov
xorb
xchg
adc
mov
jmp
int3
bound
andb
movlps
lret
add
add
add
aas
cmp
and
ret
push
in
or
loopne
ror
cli
je
add
jns
cs
ret
lods
xchg
lret
stc
jb
mov
call
mov
lahf
negb
popf
inc
xchg
xor
xor
add
icebp
insl
jl
or
xchg
and
icebp
xchg
in
call
fcmovnu
jns
scas
add
ret
sub
loop
push
add
add
add
negl
cs
fsts
mov
fldl2t
xchg
ficomps
add
cmpl
aas
add
xor
movsl
test
cli
push
fstps
das
arpl
enter
out
test
push
xchg
stos
in
jno
jnp
mov
je
cmp
adc
jae
ret
aaa
xchg
jecxz
addb
add
add
jns
and
cmp
lcallw
lods
xor
mov
repnz
cmp
jg
mov
add
lock
adc
mov
out
or
add
out
lret
pop
pop
mov
mov
inc
lea
aad
xor
lret
cmp
fadd
out
aaa
mov
or
add
add
add
xchg
mov
push
mov
push
pop
or
and
les
and
xchg
cmp
rolb
mov
xor
call
adc
nop
xor
push
jmp
xor
add
enter
add
in
and
adc
add
call
xor
sbb
add
add
add
mov
das
insb
and
xor
cmp
je
inc
bound
jmp
xchg
cmp
mov
call
jno
int3
jbe
rcl
fisttpll
int
xlat
xchg
outsl
add
xchg
pop
int3
out
iret
rcl
in
pop
add
rorl
jmp
stos
inc
lea
call
add
xchg
pop
stos
add
out
fwait
add
cmc
lret
sub
mov
add
and
xor
mov
add
pop
lahf
push
xchg
mov
into
push
ja
out
jb
nop
nop
out
inc
fcmovnu
pushl
into
sub
clc
push
and
shl
incl
sub
push
and
add
add
add
adc
push
lahf
lret
push
and
ljmp
lea
and
daa
insb
and
outsb
out
push
lock
ret
jae
fsubrl
data16
cli
pop
ds
je
mov
ret
mov
shl
cmp
bound
mov
daa
jne
sbb
push
fisubrs
repz
stos
mov
pop
mov
das
add
add
add
mov
test
cmp
adc
sti
cmpsl
popa
fstl
rcr
into
adcb
call
stc
cmp
movsb
rcl
aas
xchg
pop
push
adc
mov
push
push
xchg
xor
push
add
pushf
mov
stc
pop
int
jle
gs
jbe
dec
ret
in
jae
lret
lods
les
pop
dec
loop
rcr
jle
jmp
fildl
add
add
add
shl
add
push
popa
pop
xor
or
xor
pop
aaa
cmp
mov
dec
clc
out
adc
add
mov
repz
out
inc
ret
bound
das
lods
pop
pop
dec
orl
inc
xor
or
mov
out
hlt
scas
adc
dec
sub
jb
pop
jmp
add
out
stos
popf
scas
pop
gs
jmp
and
out
push
scas
cmp
lods
sub
mov
lret
arpl
fdiv
dec
test
xlat
adc
cmpsb
leave
jmp
sahf
push
pop
sub
push
outsb
xchg
test
sub
cmpl
icebp
mov
push
stos
pop
xchg
hlt
out
adc
inc
pop
add
cmp
pop
and
add
add
add
inc
and
xchg
or
sub
add
insb
dec
out
jl
and
ret
in
mov
xor
cmp
daa
add
cli
lcall
xor
test
or
lret
mov
out
incl
stc
inc
fs
dec
sub
roll
popf
movl
add
or
xchg
mov
sbb
inc
lea
pop
inc
lea
jg
mov
pop
and
xor
insl
fcoml
mov
pop
jg
aad
dec
mov
daa
push
inc
push
xchg
or
push
data16
or
mov
jecxz
adc
cltd
mov
xchg
jl
dec
pop
lock
add
add
mov
xchg
pop
jg
scas
and
sbb
or
sbb
daa
mov
push
imul
xor
or
push
sbb
add
pop
mov
pop
int
add
rcll
out
daa
jge
ss
scas
sbb
mov
in
jp
out
mov
pop
and
jp
xchg
push
and
inc
and
add
add
add
adc
mov
sbbb
iret
movsl
scas
cli
inc
xchg
xorb
cs
add
xor
xor
into
mov
push
mov
and
cmp
aad
push
jae
mov
and
mov
and
adc
lods
lds
lds
push
iret
andl
mov
jns
or
in
pop
sbb
out
pop
in
jecxz
cltd
pop
jae
movsb
test
movsb
add
inc
lods
xor
lea
int3
outsb
sub
bound
es
adc
dec
insb
adc
mov
in
ds
call
pop
bound
shlb
in
sub
ljmp
add
jnp
lret
pop
and
and
aas
and
pushf
mov
jecxz
dec
xor
ds
int3
flds
jecxz
lea
or
cmpsb
stos
inc
push
mov
inc
test
je
fisttps
call
sub
cli
call
push
and
cmp
dec
adc
and
xchg
in
or
pop
and
add
add
add
mov
mov
sbb
or
inc
xor
call
decb
cmp
loopne
pushl
lods
je
arpl
pop
pop
cmp
mov
add
and
xchg
mov
cli
cld
or
pop
jns
into
lcall
mov
xchg
mov
jmp
add
add
add
stos
scas
sqrtps
inc
and
es
int
pop
xchg
mov
lods
pop
inc
xor
or
add
loope
or
int3
js
jecxz
xor
lret
xchg
int
push
xor
cmp
dec
xchg
add
scas
notl
testb
inc
jmp
adcl
test
cmp
push
in
add
add
add
add
mov
sub
dec
pop
sbb
int
cmp
dec
leave
dec
mov
add
int
loope
and
test
and
cmpsl
aad
xor
sub
xchg
jmp
fiaddl
fs
jecxz
sbb
lret
in
mov
xor
mov
xor
out
clc
and
pop
and
xor
int3
in
add
add
add
fstpt
and
xchg
dec
jno
arpl
xor
add
cmc
inc
add
out
inc
and
add
add
xchg
pop
dec
in
scas
imul
add
test
inc
and
clc
fcmovnbe
add
add
inc
sub
imul
fidivl
cmp
addl
lds
and
add
add
add
cmp
mov
pop
cmp
cmp
call
inc
inc
add
sub
add
inc
lcall
or
add
push
and
add
je
lahf
xor
call
repz
lahf
mov
fstps
inc
insl
mov
cwtl
pushl
mov
cmp
xchg
sub
jae
add
add
add
adc
jne
pushf
out
leave
and
adc
adc
adc
jmp
out
cmp
cli
pop
adc
add
xchg
das
into
call
sbb
in
xchg
adc
fsub
cmp
std
cli
lods
jo
fiadds
movsw
pop
dec
xchg
pop
sbb
add
add
add
and
in
xchg
pop
inc
jge
or
add
push
push
add
cli
mov
out
daa
sub
mov
rcll
xchg
pop
movsl
addb
test
inc
pop
lods
sbb
jge
iret
inc
xchg
mov
clc
or
jae
mov
int3
mul
inc
icebp
sub
adc
mov
or
add
add
add
adc
add
lahf
cmp
jbe
push
aam
mov
fisubs
jmp
and
or
or
sbb
sub
dec
cmp
push
sbb
call
pop
mov
sbb
ljmp
sbb
in
sub
pop
jns
pop
add
add
add
addr16
aad
mov
iret
test
call
std
mov
les
mov
xchg
popf
out
adc
in
cmp
cmp
inc
mov
lea
push
xor
xchg
or
lret
push
sbb
xchg
or
jge
test
fnstenv
call
loopne
add
cs
call
add
fwait
stos
fcos
mov
iret
sbb
loop
cmp
in
inc
test
rorl
movb
push
xor
cwtl
xor
lods
xor
in
arpl
imull
insb
jl
push
jbe
xchg
adc
mov
xor
push
push
rclb
lds
loopne
xchg
or
xchg
add
add
add
add
jg
movsl
cli
mov
xchg
sub
jae
ss
xor
lcall
mov
add
adc
pop
jae
fs
sbb
and
rcl
iret
xchg
dec
mov
dec
jne
pop
push
insl
mov
jecxz
mov
push
hlt
jbe
adc
xor
inc
popf
fldt
sbb
add
add
dec
loope
push
jmp
pop
int
push
or
lahf
mov
dec
mov
dec
xchg
leave
int3
repnz
leave
rorb
int3
add
dec
sub
roll
or
mov
push
dec
xchg
jle
call
jge
adc
adc
add
scas
xchg
leave
test
nop
ja
bound
dec
enter
mov
pop
sbb
add
add
and
scas
or
xchg
pop
inc
shlb
scas
dec
out
aaa
loope
cmp
push
mov
test
aad
jnp
sahf
rep
push
scas
stos
mov
je
xlat
push
mov
fs
xor
push
xchg
pop
xor
mov
xchg
sub
inc
dec
sahf
pop
xlat
pushf
adc
subl
stos
scas
cmp
add
add
rorl
sbb
test
stos
lods
test
aaa
shrl
loop
push
adcb
dec
movsb
movsb
adc
ds
and
aas
pop
jb
jge
and
jne
andb
in
les
and
push
adc
add
je
push
or
push
or
dec
add
add
add
les
ljmp
add
add
sbb
into
jl
and
cmp
mov
es
fcmovu
add
mulb
add
insl
mov
and
cmp
pop
cmp
xchg
shrl
xchg
xor
sbb
xor
or
pop
test
popf
rcll
lahf
lret
stos
dec
mov
fiaddl
rorb
adc
pop
add
add
add
add
and
mov
add
mov
mov
jecxz
lds
test
mov
hlt
xchg
mov
outsl
and
xchg
clc
mov
dec
imul
add
scas
inc
ret
inc
mov
push
mov
push
dec
insl
cmovs
ss
jg
out
jbe
add
add
add
sbb
pop
pop
xchg
nop
mov
idivb
repnz
jle
mov
jp
inc
setg
sbbb
ja
push
cmp
sbb
inc
sub
sub
push
dec
jne
rorl
cmpsb
adc
xchg
stos
dec
outsb
dec
mov
inc
test
jge
add
add
adc
cmp
sahf
sub
or
add
add
add
xchg
scas
xor
sub
pop
into
lahf
sbb
pop
fadd
aam
repz
mov
stos
movsl
jbe
or
adc
and
dec
sub
in
and
dec
cmp
arpl
or
loopne
or
or
lret
sti
sbbb
jmp
test
sbbb
aaa
or
add
add
add
adc
aam
lods
inc
aam
mov
or
mov
and
add
add
mov
push
jae
mov
sub
mov
andb
add
mov
push
add
jne
fstpt
sbb
add
lahf
lea
mov
inc
arpl
lods
or
jle
and
inc
bound
add
add
add
std
clc
jle
xor
pop
mov
push
xchg
add
push
jb
adc
cli
cmpl
je
xchg
out
lods
out
adc
sbb
aas
sub
xchg
test
cli
and
shrl
jnp
inc
sub
add
out
add
xchg
out
jp
cltd
cli
jg
mov
xchg
add
add
add
fistpl
stos
shll
xchg
dec
fucomip
cwtl
je
xor
ror
cs
xor
pushf
mov
je
push
aad
sub
fwait
test
or
xchg
int
cmpsb
es
scas
out
rep
pop
cmp
mov
xchg
xchg
and
ja
mov
ret
out
add
add
add
leave
and
jle
pop
sbb
lock
and
inc
lds
subl
lds
push
icebp
adc
sub
and
jge
mov
test
mov
pop
push
inc
jne
dec
inc
mov
and
sbb
outsb
scas
mov
sub
in
dec
jmp
inc
dec
loop
xchg
push
stos
lea
add
add
add
mov
pop
mov
hlt
nop
and
int3
mov
push
in
cmpsl
imul
jb
adc
xor
rclb
jmp
psubusb
jmp
addl
and
mov
add
jecxz
outsl
or
mov
or
fwait
test
mov
add
add
add
fimull
and
xor
pop
fcomps
sbb
mov
fnstenv
sub
and
aaa
inc
and
xor
inc
inc
jo
div
mov
mov
scas
and
test
inc
push
sub
sub
call
movb
pop
cmp
scas
push
dec
mov
add
add
add
add
out
cmp
ja
sub
je
test
inc
cli
push
sbb
jae
xor
inc
cli
push
and
je
xor
in
cli
or
js
aad
and
xchg
pop
aaa
add
cli
inc
and
and
and
sti
in
and
xchg
adc
ljmp
sahf
and
inc
stc
test
lret
pop
add
add
add
imull
sub
push
or
bound
sahf
push
shrl
out
inc
cmp
cli
or
jb
lret
add
lret
push
xor
pop
mov
mov
inc
shlb
push
sti
in
fldenv
aas
ret
fwait
mov
mov
mov
inc
ret
divl
adc
xchg
add
push
mov
add
add
add
adc
jne
inc
ret
and
loop
inc
xchg
test
cmpsb
out
push
mov
adc
mov
lret
add
or
add
iret
mov
xchg
pop
push
aam
aam
lds
aaa
add
test
out
pop
cmpsl
add
and
mov
jmp
fisttpl
int3
sub
mov
dec
int
add
add
add
xlat
cld
ds
arpl
or
sub
pop
and
push
pop
ljmp
pop
and
push
insl
data16
es
pop
bnd
xchg
xchg
daa
pop
in
mov
inc
adc
add
xchg
mov
xchg
cltd
aaa
xlat
sahf
adcb
add
pop
aas
pop
sub
aam
insb
jne
nop
arpl
add
add
mov
pop
lds
mov
data16
fdivs
cltd
xchg
ret
jno
sbb
lret
js
inc
clc
cmp
fistl
fmull
inc
lock
xorb
and
arpl
ret
add
pop
das
mov
mov
cmc
enter
divl
sub
in
xchg
mov
outsl
add
add
add
aad
and
mov
and
push
add
mov
js
out
pop
xchg
sub
adc
mov
aaa
out
mov
or
xchg
sub
in
sub
aaa
add
scas
popf
dec
in
nop
adc
shlb
hlt
cmp
nop
cmp
xchg
inc
xchg
xor
adc
add
add
add
mov
xchg
ficoml
leave
push
or
jne
xchg
mov
imul
or
jle
int3
mov
add
rolb
adc
inc
add
push
ret
das
div
push
and
stos
ja
mov
or
adc
xchg
xor
inc
dec
mov
add
add
add
inc
add
jnp
pop
test
in
repnz
or
lock
scas
cmp
adc
add
bound
add
jecxz
and
loop
ss
jb
les
stos
adc
sahf
xor
mov
cs
jmp
repnz
movsb
push
add
pushf
inc
add
jecxz
cmpsl
fcoml
stos
mov
add
sbb
lret
cmp
cmp
ss
and
add
and
scas
fcoml
mov
test
lret
xchg
test
scas
std
lods
fnsave
add
add
fcos
bound
test
call
in
add
push
das
sbbb
test
cwtl
jmp
pop
in
add
add
add
nop
inc
add
fdivs
push
mov
call
push
cmp
call
and
call
popf
push
das
call
push
outsl
subl
adcl
adc
inc
cmp
and
loopne
pop
adc
sub
aaa
mov
and
adc
insl
push
mov
adcl
push
imul
add
add
push
and
jmp
and
sub
test
out
cmp
add
rcl
xchg
inc
scas
das
test
flds
jbe
xchg
cli
cli
stos
sarb
or
int3
and
add
pop
stc
jno
sti
out
xchg
adc
fwait
bound
xor
in
pop
rcll
pop
std
xchg
pop
pop
add
pop
incb
add
add
add
dec
insl
or
js
or
stos
jmp
in
push
or
sub
or
add
push
dec
lods
or
popf
hlt
dec
mov
cwtl
dec
lahf
dec
les
pop
mov
cmc
inc
lea
jle
add
mov
dec
movsl
stos
repz
lret
shrl
rcl
sub
lods
fs
roll
add
add
add
and
mov
push
hlt
hlt
jl
jecxz
or
lcall
and
stos
test
addb
jecxz
aam
adc
in
lock
add
mov
and
pop
int3
push
repnz
pop
push
xchg
xchg
pop
movsb
sub
and
adc
push
loop
pop
inc
cmpb
xchg
cmpsb
bound
add
add
add
jecxz
inc
xchg
xor
fucomip
movsl
xor
dec
adc
and
cli
sarb
lahf
sbb
push
icebp
xlat
push
inc
sbb
dec
add
int3
add
testl
mov
outsl
mov
pop
cld
psadbw
mov
push
jnp
jmp
inc
or
or
sub
inc
jb
jecxz
mov
add
add
add
js
daa
mov
push
lods
bound
ficompl
hlt
movsb
es
das
add
push
insl
sub
and
movsl
mov
jne
insl
das
push
leave
dec
and
fidivs
arpl
xchg
mov
add
addb
scas
and
pop
ret
adc
mov
cli
xchg
jno
mov
add
add
lret
mov
mov
jle
scas
push
push
fsts
push
xlat
es
out
ret
inc
aad
out
jae
adc
push
mov
cmp
jo
sbb
loopne
inc
dec
int
add
add
loope
xchg
scas
xlat
mov
daa
sub
mov
sub
jl
ficomps
jmp
add
mov
pop
fcmovne
mov
mov
add
push
inc
or
mov
or
mov
adc
movsl
mov
mov
lea
mov
mov
adc
lea
mov
adc
lretw
cs
int3
and
or
es
fcomi
mov
inc
int
aad
push
pop
add
add
add
add
push
xchg
cmp
sub
pusha
out
jp
inc
add
cs
movsb
test
or
inc
push
add
popf
cltd
and
xchg
sahf
xor
jecxz
sbb
sti
cld
rolb
outsb
bound
sbb
aaa
pop
mov
icebp
mov
pop
outsl
push
jg
xor
adc
call
add
add
add
in
insl
push
push
xor
sub
sbb
fldcw
jmp
loopne
arpl
xchg
sbb
lock
inc
or
sbb
add
inc
sub
test
lahf
icebp
out
add
mov
mov
mov
lahf
into
shlb
in
stos
pop
and
add
add
add
and
add
sbb
push
scas
add
rolb
cmp
adc
pop
outsb
das
lock
inc
and
sub
add
sbb
xchg
mov
mov
shrl
add
jmp
frstor
in
pop
push
ficomps
push
jl
fstpl
ficomps
orl
sti
add
add
add
cmpsb
scas
and
ds
insb
cld
mov
mov
lea
cli
outsb
les
push
data16
adc
scas
popf
ret
test
mov
ljmp
cli
ss
cltd
and
pop
leave
rcl
int3
jl
mov
test
xchg
pop
dec
and
popl
clc
dec
mov
add
add
add
enter
push
xor
call
inc
leave
jp
add
mov
cld
adc
roll
push
inc
test
fnstsw
testl
mov
adc
pop
add
lret
rolb
cmp
add
or
jns
lret
dec
mov
xor
addr16
and
xchg
pop
and
add
add
add
mov
cld
arpl
std
mov
pop
in
stc
jnp
push
pop
push
insl
bound
push
push
loope
sbb
jb
negl
and
shrb
sub
push
pop
lods
daa
lods
mov
std
mov
push
lds
or
hlt
xchg
stc
arpl
pop
push
push
out
adc
xchg
scas
es
sti
arpl
adc
push
jbe
add
add
add
push
or
lds
dec
add
hlt
aad
cmpsb
xchg
fsts
das
xlat
pop
call
mov
mov
in
pushl
clc
arpl
jnp
sub
mov
outsl
mov
mov
dec
xchg
aam
mov
clc
out
adc
movsb
xchg
or
adc
sahf
push
xchg
stos
cmpsl
dec
dec
cmp
into
out
cmp
test
add
add
add
outsb
das
xor
and
imul
jne
adc
add
add
cmp
and
lods
and
or
adc
daa
insb
inc
pop
popf
mov
xor
int3
jb
je
and
xchg
xor
test
not
fwait
cli
test
sahf
scas
nop
add
mov
mov
sahf
and
add
push
xorb
pop
cmp
jno
and
and
arpl
add
xchg
into
adc
sahf
mov
mov
jge
jns
and
xchg
out
sub
fwait
pop
or
mov
lods
cld
test
mov
test
fnstcw
pop
cli
lahf
sahf
out
das
push
mov
or
insl
push
add
add
add
mov
test
mov
subl
adc
pushf
popf
sbb
lock
and
pop
enter
enter
xor
test
xchg
xchg
out
sti
sbb
movsl
movsl
daa
iret
inc
xchg
xchg
clc
sbb
sbb
and
xchg
test
dec
shll
push
pop
and
mov
add
add
add
cltd
js
xlat
je
andb
cld
inc
notl
mov
int
mov
xor
iret
sub
rcl
shlb
rolb
and
jbe
pop
xchg
cmp
sbb
inc
and
jecxz
roll
and
fisubrs
or
insl
push
push
sbb
orl
add
add
cmpsl
adc
and
fwait
xchg
adc
lock
popl
adcl
jne
sahf
xchg
fsts
jge
dec
add
or
arpl
inc
and
xchg
scas
xor
clc
cmpb
call
arpl
jmp
xor
mov
add
add
add
xchg
dec
sbb
out
aas
cmc
aas
add
cmp
shll
mov
lea
loope
test
mov
ds
mov
jge
xor
mov
and
add
add
sahf
mov
fidivs
sahf
mov
add
add
add
lods
mov
mov
sbb
or
pop
test
pop
adc
adc
xchg
push
sti
jl
fstpt
xchg
pop
dec
ret
std
in
dec
and
and
imul
mov
xchg
mov
lea
scas
cmpsb
nop
xlat
shll
jl
stos
cmp
and
xlat
addb
fisubrs
scas
lds
add
add
add
test
mov
nop
int3
cmp
inc
inc
ja
int
push
xchg
hlt
daa
aas
push
int
dec
add
mov
jge
xchg
sub
sub
mov
mov
xchg
sub
cmp
dec
jl
cmpsl
in
outsb
xor
in
sub
jmp
mov
dec
add
cltd
aaa
stos
adc
test
add
add
add
or
mov
push
ficoms
xchg
xchg
inc
sbb
sbbb
cmpsl
mov
fnstcw
sub
jnp
add
stc
clc
jae
int
sti
mov
xchg
lahf
test
loop
arpl
call
int3
xchg
fwait
add
lahf
ljmp
stos
insb
add
push
clc
push
or
add
add
add
jecxz
xchg
add
dec
jns
stc
mov
adc
sahf
in
stc
shlb
rcrb
call
inc
pushf
jge
cld
dec
inc
xchg
push
cmc
sub
cltd
push
fistl
jae
push
out
out
dec
xor
aam
push
fisttps
ds
outsb
movaps
and
mov
and
je
aam
enter
incl
add
add
add
jbe
pop
cmp
test
cli
xchg
sbb
jae
sub
out
and
and
pop
sub
mov
mov
pop
and
mov
adc
sahf
adc
pushf
stos
sarb
xchg
mov
pop
imul
add
or
or
xor
movsb
dec
fstpt
xchg
pusha
sub
add
add
add
inc
sub
push
or
xor
aam
xchg
leave
adc
xchg
pop
pop
aaa
push
shll
xchg
or
pop
inc
mov
roll
in
add
cmp
sbb
xlat
testl
xadd
pop
int
push
adc
xchg
aad
sub
mov
xchg
pop
push
mov
add
add
add
add
sbb
mov
test
or
adc
test
out
mov
mull
icebp
movsb
cmp
lahf
int3
mov
xchg
adc
dec
mov
stos
pop
nop
push
icebp
pusha
nop
push
fprem1
adc
jbe
add
aam
cmc
arpl
dec
dec
daa
jmp
jbe
aad
call
mov
add
xchg
mov
add
popf
pop
mov
mov
jge
push
int
cmp
call
jge
xchg
jmp
jmp
call
cmp
leave
lea
cmovnp
xchg
cmpsb
insb
das
xor
mov
test
je
cmp
out
push
and
add
add
add
sub
inc
add
jp
and
sub
jne,pn
adc
pop
ss
outsb
subl
and
imul
pop
inc
and
push
outsl
fcos
call
loopne
lcall
decl
xchg
push
add
std
mov
xchg
pop
sub
cmp
mov
repz
add
add
add
movsb
nop
aam
xchg
fwait
in
and
repnz
mov
rorb
sahf
movsl
leave
test
sbb
je
adc
xchg
stos
and
int3
lret
sbb
mov
sti
in
mov
adc
mov
and
mov
mov
arpl
xchg
les
adc
push
or
xchg
add
add
add
dec
mov
lcall
or
or
jo
pop
mov
int
push
inc
lds
push
lret
xor
rorb
mov
jp
pushf
jecxz
cmp
inc
xchg
jl
addb
inc
into
outsb
mov
lcall
jg
mov
xchg
fisttps
inc
lds
add
popa
test
lcall
pop
inc
add
add
stc
fs
jb
int
or
daa
movsl
sbb
sub
test
xlat
cld
xchg
cmc
arpl
pop
dec
dec
xchg
cld
pusha
mov
orl
inc
fimull
jmp
jmp
cmp
sbb
xlat
dec
in
add
add
add
xchg
pop
mov
call
sahf
jnp
push
lea
fbld
xorb
cs
and
cmc
sbb
sub
ja
mov
jp
pop
cld
sub
gs
cmp
add
lret
rolb
aam
sub
jno
cmpsl
xchg
sti
jne
loopne
xorb
mov
sub
add
add
add
inc
and
test
flds
dec
pop
inc
push
mov
lods
fistpl
add
lahf
das
call
mov
lahf
popf
xor
push
or
fucomi
xchg
into
push
out
hlt
mov
jb
sti
aas
stc
mov
add
xchg
ret
mov
cmp
add
add
pop
test
cmp
mov
cmp
aaa
and
xchg
mov
mov
rorb
rcrl
mov
shrl
ret
std
xchg
push
push
scas
loope
push
xor
rclb
and
ret
push
sbb
xor
inc
xchg
pushf
lods
adc
or
inc
xchg
jge
ret
movsb
lret
int3
add
add
add
add
sbb
adcl
incb
int
or
mov
xlat
stos
mov
int3
shl
fidivl
pop
push
hlt
dec
leave
test
lock
push
fwait
das
test
stos
and
int3
xor
xchg
add
sahf
xlat
aaa
mov
sub
xor
in
outsb
test
mov
data16
add
add
add
jg
adc
and
pop
push
call
sub
push
clc
add
push
or
lahf
and
xchg
sbb
call
ret
jo
mov
fcom
mov
or
jbe
adc
push
fdivl
inc
jbe
data16
cmp
insl
ss
dec
lret
push
add
add
add
sbb
push
sub
fadds
lret
jo
sub
sbb
xchg
addr16
cld
jge
add
test
add
pop
xor
inc
xor
adc
mov
push
xchg
adc
mov
or
lret
jp
into
adc
enter
lcall
and
add
out
cmp
mov
nop
lret
adcb
pop
nop
enter
sbb
rcrl
push
inc
js
fistl
incb
and
repz
fldcw
jg
xor
add
out
push
add
add
sub
out
mov
push
or
scas
dec
mov
xor
cld
shll
add
add
add
jmp
lahf
pop
sti
test
aas
xchg
jmp
jae
enter
jo
sti
movsb
mov
loop
xchg
add
pop
push
cmpsl
ficoms
adc
mov
sbb
or
or
add
stc
fsubr
mov
pop
or
sbb
addl
push
xchg
movl
add
int3
sub
xor
or
pushf
cmp
push
ret
ror
fcom
incb
lds
xchg
sbb
hlt
outsb
out
inc
xchg
clc
ficoml
loope
add
es
inc
sbb
xchg
push
sbb
inc
fadds
pop
jbe
fnstcw
decl
xchg
aam
jbe
jo
sub
add
add
add
les
call
cld
jl
gs
hlt
xor
xchg
inc
mov
in
dec
add
loope
popa
jmp
and
and
and
test
add
insl
xchg
xchg
jmp
jmp
stc
jl
fs
std
arpl
xor
mov
and
aam
dec
test
rorb
jmp
add
add
add
inc
notl
mov
adcb
jns
mov
gs
xchg
inc
lahf
stc
rep
mov
mov
xor
notb
push
std
or
lock
das
rcll
or
and
test
or
add
dec
sub
jbe
add
dec
mov
inc
stc
cmp
adc
add
pushf
adcl
jmp
sti
popa
add
pop
cmovbe
and
data16
test
inc
mov
xchg
add
mov
jmp
and
push
out
and
xchg
jo
ret
daa
adc
mov
or
mov
add
cli
pushf
dec
sarb
xchg
stc
stos
test
mov
into
xor
and
push
pop
nop
add
add
add
add
out
and
stc
pop
or
pop
inc
lods
mov
or
lret
adc
sub
pop
or
cmp
cmp
mov
cld
mov
sar
or
lea
lock
inc
pop
sbb
cmp
jmp
jge
fildl
cmp
add
pop
into
xchg
push
int
or
fdivr
out
jg
decb
nop
outsl
jnp
and
addl
add
and
lcall
and
mov
push
cltd
jl
pop
sbb
cmp
push
pop
dec
les
pop
xlat
inc
mov
int3
adc
test
cld
xchg
pop
int
nop
out
int3
sti
into
jl
jnp
jl
or
les
in
or
test
jge
mov
sbb
stc
or
ret
cmpsl
sbb
add
jns
jne
mov
int3
pop
insl
push
adc
and
scas
and
xchg
test
xor
gs
gs
repnz
bound
dec
int
xlat
outsb
adc
mov
jmp
cli
jnp
sahf
imul
mov
jecxz
pop
and
ret
sbb
add
add
add
jp
mov
outsl
push
and
pop
int3
aaa
push
insb
repz
add
insl
dec
cpuid
push
mov
aam
and
outsb
push
movsb
jl
jg
jne
xchg
cmp
pop
add
iret
ljmp
or
fsts
xor
adc
mov
add
add
add
add
mov
fcos
jno
add
xchg
ljmp
call
outsb
xlat
inc
call
or
out
cmc
push
and
inc
rorl
add
jo
xchg
mov
xchg
adc
pushf
mov
aas
xchg
out
and
or
pop
mov
insb
and
adcb
sbb
repz
or
or
add
add
add
andb
xchg
popf
repz
cmc
mov
adc
mov
sbb
mov
and
or
int
and
add
pop
pop
jg
outsb
lahf
add
pop
aaa
aas
outsl
and
movsl
ds
cld
or
and
jle
and
jle
mov
cld
xchg
lock
mov
cld
ja
cmp
test
testb
add
add
xchg
test
idivl
add
add
test
aad
or
jg
rolb
lea
fistpll
mov
xchg
xchg
dec
rol
pop
fistps
mov
lods
or
pop
xchg
or
push
sbb
xor
fdivl
decb
jecxz
ss
push
arpl
or
add
add
add
xchg
pop
mov
daa
enter
pop
and
xchg
and
jl
stos
scas
or
and
xchg
and
xchg
sub
test
jnp
loope
xchg
shrb
sahf
mov
pop
cmpsl
jo
cs
stos
les
stc
xchg
lds
movsb
pop
xlat
aam
clc
pop
add
mov
js
ret
and
icebp
addb
add
add
add
and
jecxz
pop
divb
mov
and
push
fcos
cmp
popf
push
add
in
jmp
hlt
in
jno
jmp
ljmp
dec
jns
xorl
icebp
shrb
cmp
sub
pop
ja
leave
fs
lahf
push
pop
cmp
call
mov
lahf
div
jbe
fildl
add
add
add
imul
cmp
xlat
stc
inc
loopne
fimuls
shlb
adc
add
ljmp
sar
push
and
adc
push
or
and
or
cli
mov
popf
xchg
mov
fwait
stc
fnstcw
push
add
enter
or
les
loope
aaa
add
add
add
xlat
push
mov
fbld
ret
stc
mov
pop
xchg
adc
and
mov
or
or
adc
pop
lret
jbe
fistpll
out
pop
add
adc
inc
les
lret
dec
mov
sub
aam
sub
dec
sub
lcall
xchg
add
add
add
jbe
movsl
xchg
mov
test
inc
aas
lods
xlat
inc
mov
pushf
inc
xchg
or
xchg
cmp
inc
fcmovbe
or
xchg
orb
bswap
and
dec
dec
push
ljmp
ret
pop
push
mov
jmp
xchg
in
sbb
jge
xlat
mov
xchg
hlt
rorl
addr16
add
add
add
mov
test
insb
gs
adc
mov
and
mov
cmc
in
mov
data16
stos
js
pop
ljmp
or
lahf
sub
mov
xchg
pop
stos
scas
ds
aas
add
push
je
mov
push
es
ljmp
pop
jmp
cmpl
add
or
xor
add
add
add
cmp
and
push
shl
xor
stc
cmp
mov
xchg
or
dec
push
jbe
das
add
insl
xchg
cmp
das
add
xor
addr16
and
fdivr
pop
mov
add
mov
leave
and
sub
jb
shll
cmp
pusha
mov
and
cmc
sbb
add
add
add
mov
add
lods
testb
movsl
notb
sbb
daa
sti
testb
pop
sbb
pop
leave
jmp
xor
pop
push
xchg
or
js
test
pop
xchg
pop
call
mov
cmp
or
sbbb
je
mov
push
sbb
lahf
addl
add
add
push
jae
sub
out
leave
inc
scas
push
add
dec
pop
rolb
inc
ret
mov
jle
sbb
lret
das
lea
addb
mov
mov
and
inc
aam
data16
xor
sbb
sub
fcoms
jecxz
movsl
out
ret
mov
jo
dec
jle
loopne
int3
in
addb
add
inc
test
sub
mov
mov
or
in
xchg
into
int
push
addb
shr
and
cmp
test
movsl
jbe
je
stos
cmpsl
lock
cmp
sbb
lock
push
add
add
lods
scas
xor
out
scas
mov
fucomip
call
ljmp
add
fldenv
cmp
dec
lret
out
adc
ss
jp
push
cmp
in
xchg
aad
jb
push
stos
xor
jecxz
pop
in
data16
lea
aas
rclb
push
dec
jmpw
xor
cmp
jnp
push
and
jmp
je
in
xor
sub
shl
adc
cmp
cmp
add
xor
xor
push
sbbb
cmp
sarw
pop
bound
lea
adc
jmp
addr16
mov
lret
push
sub
push
movsb
pop
mov
test
adc
dec
sub
mov
mov
push
callw
pusha
lahf
ret
xchg
xor
or
add
push
add
movsb
je
ds
add
add
and
push
aas
sbb
push
in
gs
push
shll
jg
je
mov
inc
cmp
push
stc
adcl
and
inc
push
enter
or
popa
dec
sub
jg
dec
popl
xchg
in
jmp
aaa
pop
ljmp
gs
mov
pop
stc
mov
into
push
filds
add
add
add
adc
sub
int3
js
iret
mov
push
leave
xchg
loop
cmp
and
cmp
stc
rcl
add
lods
subb
fildl
inc
nop
adc
mov
loop
mov
stos
xor
add
cld
aam
aad
divl
and
daa
jne
fsubrs
ret
sub
add
add
add
roll
cmpl
mov
jae
cli
add
push
in
test
test
fcos
cld
sbb
and
in
jecxz
xchg
lods
or
sbb
jmp
xor
adc
or
sub
xchg
and
sub
jle
pop
or
scas
xor
jecxz
test
sbb
add
add
sbb
in
loop
fwait
repnz
jne
out
jmp
out
js
adc
stos
mov
stos
scas
cmp
aaa
mov
repnz
push
mov
andl
adc
leave
lcallw
xor
js
loop
in
enter
mov
jl
mov
call
insl
ret
lahf
shl
add
je
add
add
add
and
add
je
xchg
adc
std
sub
add
sub
cld
fcoml
mov
ss
cmp
push
sbb
sub
je
add
push
lret
or
cmp
sub
arpl
add
sbb
je
int3
repz
push
push
cs
xlat
xor
repz
add
add
jmp
movsl
inc
jne
repnz
inc
push
push
ds
mov
ret
popf
mov
pop
lret
daa
push
pop
and
mov
and
adc
sub
and
push
jmp
dec
jnp
inc
lret
out
jmp
fistpl
dec
push
rorb
rcl
inc
xchg
jl
js
or
jle
test
add
add
rolb
dec
inc
add
arpl
test
jnp
sbb
fnsave
add
imul
js
xchg
sarb
orl
aam
push
mov
lea
scas
pop
js
adc
jl
rcll
add
jnp
ja
mov
add
imul
lock
add
add
in
loop
dec
test
pop
jmp
jmp
mov
fsubl
cld
arpl
add
imul
xor
pop
push
cmpsb
cli
insl
lahf
test
mov
xchg
mov
pusha
outsb
xor
std
sbb
lods
xchg
test
rcrl
insl
dec
inc
xlat
fdivl
pop
fs
gs
test
add
fsubrs
dec
loope
pop
stos
adc
aad
sbb
inc
add
push
xor
mov
adc
inc
mov
pop
sarl
cs
push
cmpsl
inc
mov
sub
pop
xor
and
repz
inc
cmpl
push
fldl
push
iret
roll
add
mov
add
add
add
add
leave
cld
push
les
sbb
xor
and
add
inc
and
inc
cmp
roll
add
mov
add
cltd
cld
push
les
jg
dec
mov
cld
pop
push
leave
sub
xchg
inc
xchg
push
scas
inc
nop
pop
cmpsl
lock
inc
icebp
mov
lds
lds
adc
inc
loop
or
int
push
mov
add
nop
sti
cmp
arpl
cli
adc
push
jle
aad
and
jmp
in
es
lods
mov
lock
aas
and
sbb
push
dec
push
movsb
sub
js
and
or
insb
popf
sbb
imul
and
lret
inc
mov
mov
xchg
pop
mov
scas
lock
add
add
mov
or
or
add
in
cwtl
add
or
insb
xchg
sbb
insb
out
mov
pop
int3
mov
sbb
lods
adc
imul
scas
in
js
sub
gs
or
insb
mov
or
imul
or
mov
adc
jmp
add
add
add
lret
jmp
xchg
out
std
xchg
bound
lods
gs
and
movsb
stos
inc
xor
lret
mov
rorl
and
shr
inc
inc
mov
repnz
call
pusha
popa
insl
aas
dec
mov
aaa
or
lahf
sbb
pop
int3
pop
mov
inc
mov
cli
arpl
sub
in
lret
ret
cli
mov
add
add
mov
push
imulb
sub
jae
push
test
or
rclb
inc
mov
xchg
pop
test
xchg
and
inc
sahf
and
stos
xor
cmpsb
add
stos
inc
jo
pop
pushf
icebp
movsl
mov
xchg
pop
movsb
icebp
movsl
mov
add
add
add
popf
inc
aam
stos
inc
dec
inc
popf
inc
js
stos
inc
lcall
inc
xchg
adc
xchg
jbe
mov
testb
push
stos
inc
shl
xchg
sub
fwait
cmpsb
test
jns
lea
repnz
rolb
xor
inc
xchg
or
test
xor
add
pop
lret
sub
call
adc
pop
clc
jo
xor
add
add
add
sub
xchg
inc
sub
push
xor
hlt
js
xchg
leave
xlat
xchg
jecxz
sub
cli
imul
and
mov
xor
call
adc
call
insb
clc
or
add
push
cmp
push
fucomip
in
inc
fmull
int
addl
lret
add
out
enter
mov
jmp
push
xlat
mov
add
add
add
sbb
jle
fistpll
add
or
push
fidivs
je
or
loopne
frstor
mov
xchg
pop
mov
xchg
mov
aam
xchg
pop
lods
in
and
notl
in
orb
jb
nop
jo
or
cmp
mov
sub
clc
add
test
jp
add
add
add
or
aad
pop
pop
and
xchg
outsl
or
pop
test
dec
pusha
push
cmp
adc
jl
outsl
lods
arpl
pop
jno
xor
mov
loope
shrb
push
inc
dec
sbb
add
je
mov
xor
ret
push
ret
add
pop
sbb
sub
dec
adc
in
cmpsl
inc
add
add
add
dec
in
or
fnstenv
loop
jmp
pop
mov
mov
dec
push
aaa
or
cli
add
ja
loope
subl
and
mov
push
popf
in
lret
add
pusha
gs
mov
sbb
lea
jecxz
cld
pusha
gs
aas
mov
cld
add
add
add
das
pop
rclb
pop
push
mov
xchg
push
test
jecxz
sub
cli
ss
push
mov
xchg
aad
and
in
jg
pop
loop
lea
out
in
bound
ljmp
setb
or
push
sarl
in
adc
sub
aaa
fnstsw
xlat
xchg
sbb
std
arpl
cmc
mov
add
add
add
sub
lock
ljmp
std
add
cmp
fs
call
ret
loopne
sbb
jo
jno
pop
push
push
adc
inc
sub
jl
jb
rol
mov
lock
lods
xchg
arpl
or
repz
cmp
data16
adc
add
add
add
enter
fdiv
dec
xchg
sti
mov
push
jno
xchg
and
mov
and
fwait
aam
fwait
push
in
mov
jl
or
sti
inc
mov
and
inc
popa
dec
loope
xor
push
loope
jb
test
or
pusha
and
cmp
std
jno
push
sbb
bound
ret
pushf
mov
sarb
add
add
add
mov
jae
sbbl
fdivs
popa
test
pop
or
jmp
into
pop
and
dec
popf
lret
int3
insl
sahf
inc
loopne
aas
jge
call
testl
cmp
or
sbb
popa
add
aam
idivb
mov
dec
fsubl
pop
jecxz
jl
or
add
add
mov
or
sahf
sbb
idivb
and
jnp
roll
pop
inc
mov
add
call
dec
mov
pushl
and
clc
xor
push
sbb
das
and
test
or
inc
lods
or
test
sub
xchg
inc
adc
xchg
iret
add
add
add
adc
fcmovnbe
push
push
sub
xor
xchg
outsb
loop
push
and
dec
jle
mov
bound
or
xchg
sbb
out
or
fildl
push
repz
jg
outsb
inc
adc
pusha
loop
or
pop
jae
xor
add
and
xchg
fldenv
push
sbb
pop
decb
scas
mov
add
add
add
jns
push
fstp
xchg
flds
sbb
inc
mov
sub
push
int3
add
add
cmp
xchg
nop
or
push
ret
les
cmovp
mov
push
lds
repz
repz
mov
adc
xlat
iret
mov
or
frstor
add
add
add
dec
fs
pop
add
testb
jle
mov
int
shrl
jle
pop
mov
mov
sub
lahf
test
imul
les
push
in
pop
mov
jmp
mov
sbb
xchg
pop
and
mov
mov
jb
mov
movsl
pop
xor
add
add
add
xchg
mov
mov
cmp
pop
mov
mov
into
decl
push
lock
jge,pt
cmpsl
or
pop
inc
lods
fdivrs
bts
push
xchg
push
xor
mov
add
ss
mov
jne
push
inc
js
sti
incl
fcmovb
test
pop
pop
adcl
lahf
testb
add
add
movsb
pop
ds
pop
fnstenv
pop
negl
push
ret
push
adc
inc
xor
cmp
in
push
add
pop
sub
dec
in
add
push
jae
mov
add
aaa
popf
icebp
pop
fcmovbe
test
outsb
and
add
jb
rcrl
xchg
jmp
push
pop
add
add
add
test
cmp
inc
xor
and
and
xchg
in
lret
pop
xchg
sbb
cli
in
popf
movsb
imul
dec
out
jecxz
cli
or
or
lock
mov
rorb
sub
movsl
cli
push
sub
xchg
outsb
and
pop
rcrl
out
sbb
add
mov
mov
add
add
sbb
adc
mov
ss
test
inc
inc
and
mov
roll
std
pusha
adc
pop
dec
inc
mov
shrl
xor
psubusw
or
or
cmp
iret
daa
int
inc
sbb
jp
iret
jle
fnstsw
mov
push
cltd
inc
mov
add
jl
add
add
add
pop
lahf
mov
push
push
je
pop
nop
sbb
xchg
push
adc
or
and
sahf
iret
xor
mov
push
adc
cs
dec
in
es
sbb
lret
lret
sbb
mov
aaa
add
jmp
std
rcrb
pushf
movsl
in
add
repnz
bound
push
int3
ljmp
and
les
std
add
add
add
xchg
pop
and
imulb
sub
or
jbe
fisttpll
iret
or
lea
sbb
sbb
adc
add
cwtl
cmp
fbld
push
add
push
push
sarb
inc
sub
cmp
pop
dec
in
shrb
fs
stos
push
add
mov
mov
in
jae
mov
daa
cmp
add
add
add
push
xchg
pop
loope
add
mov
pop
pushf
push
inc
cmp
pop
lahf
cltd
cmp
and
ret
aas
add
rorb
dec
xor
add
or
rorb
xor
inc
mov
and
xchg
push
pop
push
lods
bound
ret
mov
popa
cwtl
jne
je
loope
add
and
popa
bound
adc
jae,pt
jmp
add
add
cmpl
jae
mov
xchg
jl
adc
push
loop
adc
or
mov
jae
loope
adc
cmp
sbb
cld
sub
push
loope
xor
and
push
jnp
bound
je
add
pop
jno
pop
imul
bound
pop
loopne
imul
sub
dec
call
add
add
add
inc
addb
adc
xchg
into
add
xchg
push
int3
fnstenv
xchg
pop
popf
test
test
addb
int3
push
std
mov
xchg
pop
cs
jge
inc
mov
xchg
pop
scas
cmp
jp
addr16
gs
out
mov
jle
jns
pusha
jg
sub
cmp
int
jnp
add
add
add
imul
es
mov
mov
aad
mov
fnsave
mov
mov
addr16
bound
rcr
roll
call
xor
push
sub
notl
jnp
negb
ret
mov
out
inc
jbe
dec
aas
loope
xchg
mov
cmp
push
mov
xor
and
bound
add
add
add
mov
pop
pop
push
inc
in
push
xchg
fidivl
jecxz
mov
add
addr16
add
dec
hlt
je
push
adc
xor
ss
call
dec
shr
mov
jmp
dec
push
scas
jecxz
outsl
jmp
pop
inc
insl
leave
push
and
aad
mov
dec
sbb
out
test
movsb
lods
adc
add
jg
mov
enter
sbb
sub
les
inc
pusha
bound
push
in
and
xchg
fsts
stos
mov
sub
cltd
sub
mov
and
repz
pop
or
negb
or
push
xchg
mov
inc
pusha
and
inc
out
dec
bound
add
shll
cli
dec
push
movsl
push
mov
inc
mov
aas
sbb
add
jae
add
outsl
sub
xlat
popl
ljmp
mov
lea
or
out
inc
xchg
inc
jns
nop
pop
sub
pusha
pop
xabort
push
add
addb
mov
jmp
xor
mov
icebp
inc
xlat
xchg
fcmovne
push
add
add
add
or
pusha
bound
stc
dec
hlt
cmpsb
pop
fimull
jge
addr16
ret
cmovns
adc
mov
ljmp
rcrl
and
jmp
icebp
addb
jns
add
subl
push
mov
mov
jmp
lea
and
ret
jmp
add
xchg
test
out
xchg
jmp
or
repnz
xchg
or
add
rcrb
lods
movsb
mov
push
sbb
test
adc
popa
in
adc
int
and
sbb
sbb
mov
fsubrl
xchg
inc
dec
rclb
ficoms
inc
sbb
fnstsw
insb
add
add
add
lods
ficompl
adc
fnstenv
add
inc
sub
and
jge
lods
add
jecxz
jmp
add
adc
xchg
add
push
shrb
adc
jecxz
add
and
push
popa
sahf
sbb
int3
rcll
fdivrs
fiaddl
xor
sbb
in
jmp
shrl
add
add
clc
popa
das
test
je
test
fsts
repz
aam
lret
loopne
jmp
jbe
or
test
das
xchg
enter
jbe
sub
fistl
pop
jne
xor
cli
pushf
cmpsb
jbe
mov
loop
sbb
lcall
xchg
lea
add
add
add
call
and
insb
jne
jmp
sahf
and
mov
movsb
jbe
sbb
loopne
or
cs
push
out
nop
pop
int
in
jmp
fmull
or
add
mov
mov
pop
pusha
dec
addl
add
xor
scas
pop
rcl
mov
add
add
add
rolb
pextrw
shlb
push
ror
addl
add
inc
push
enter
arpl
or
inc
and
or
mov
cmpsb
inc
pushf
mov
mov
mov
adcl
lods
out
jg
push
push
mov
mov
imul
xchg
call
add
mov
mov
movsl
aam
in
testl
and
sbb
dec
mov
lret
adc
lea
adc
lea
and
mov
sbb
mov
push
xor
jecxz
unpckhps
cli
and
or
orl
push
add
add
add
inc
dec
dec
or
inc
push
mov
and
je
jecxz
push
or
xor
jmp
clc
inc
xchg
mov
fisttpl
shlb
fld1
push
ljmp
mov
inc
pushl
das
adc
inc
test
xor
cmp
aam
jno
in
sub
mul
pop
stos
jg
pop
stos
xchg
sbb
xchg
je
mov
add
add
add
jmp
stos
outsl
push
add
into
aas
xchg
in
jle
pop
out
daa
sbb
cltd
pop
ljmp
jg
cli
iret
or
lods
bound
aas
xchg
shl
and
sub
ljmp
shl
and
dec
loop
adc
mov
xchg
icebp
jp
xchg
das
loop
fs
pop
add
add
add
mov
pop
and
xchg
mov
and
sub
or
rolb
sti
inc
out
mov
mov
push
xchg
mov
cli
ds
pushf
fisttpl
test
shll
mov
rcrb
fucomp
push
inc
jl
imul
fistps
inc
adc
xchg
cld
lods
sub
inc
fldt
add
add
out
jnp
pop
adc
adc
mov
jmp
call
jl
adc
inc
mov
jp
lods
lret
call
in
int3
mov
shll
and
push
bound
pop
repz
clc
rolb
sub
sbb
jmp
jbe
jae
mov
jae
jmp
add
push
inc
lahf
sub
xchg
call
add
add
add
jge
jae
and
jmp
jnp,pt
sub
jecxz
loope
fldcw
xor
and
out
stos
cmp
mov
sub
and
xchg
not
mov
flds
push
push
sub
dec
shrl
fstl
add
xchg
sub
cmpb
roll
sub
add
add
add
add
xchg
add
mov
mov
and
fldenv
in
lret
jp
jl
in
fmuls
adc
inc
inc
cmp
int3
aam
loopne
cmp
pop
mov
add
sahf
inc
inc
sub
xchg
jne
mov
adc
fistps
add
iret
xchg
dec
sahf
inc
inc
clc
aam
in
sbb
mov
add
add
add
aaa
icebp
test
xchg
xor
repnz
in
sub
mov
leave
mov
mov
je
bound
push
xchg
cmpsb
imul
xchg
dec
push
push
jecxz
lea
and
or
ja
push
push
gs
dec
aam
mov
lods
lods
divl
outsb
out
jge
cli
or
andb
outsb
push
add
add
xor
and
xchg
and
icebp
shrb
sbb
add
lret
int3
add
lea
xchg
pop
fimull
inc
fimuls
mov
outsl
in
cmpsl
inc
std
imul
xor
pop
fwait
inc
pushf
jmp
inc
push
mov
jle
int3
push
popf
stos
stc
ret
outsb
mov
addr16
in
mov
ds
dec
xlat
push
dec
add
add
add
cs
mov
mov
lret
int3
mov
xlat
lods
lock
push
or
or
inc
and
sti
xor
dec
test
out
and
dec
aad
inc
jle
into
or
dec
popl
and
mov
jae
mov
cs
mov
xor
dec
lods
add
add
add
arpl
and
xchg
test
test
test
mov
scas
push
and
pusha
and
stos
push
sub
inc
and
push
jae
call
jge
insl
add
push
mov
adc
dec
repnz
mov
push
outsl
xor
adc
pop
mov
cmp
sub
adc
and
leave
add
add
add
lea
test
xchg
outsb
hlt
push
test
call
ret
in
mov
rclb
lahf
enter
mov
in
shl
pop
fistpl
cli
loopne
mov
sub
fsts
xor
call
stc
leave
add
and
adc
outsl
dec
add
add
add
ljmp
lret
adc
loop,pt
sbb
mov
push
or
outsb
dec
mov
outsb
mov
insl
cli
cmpsb
jg
cli
test
aas
xchg
mov
or
jae
push
xchg
shrl
dec
mov
cmp
pushf
mov
lret
scas
add
cld
push
jmp
push
addr16
jmp
adc
add
add
add
add
pop
push
push
mov
lret
mov
jmp
fs
loopne
pop
inc
inc
fwait
mov
add
pop
cmp
cmp
repz
adcl
add
popa
and
jae
les
cmp
push
movlps
rolb
popf
lea
mov
imul
mov
jle
das
mov
add
add
inc
inc
mov
inc
inc
cs
push
cmp
and
xchg
pop
test
adc
sbb
cld
sarb
test
xchg
jecxz
push
sub
jmp
scas
aam
rcll
aas
aad
data16
adc
mov
lcall
gs
inc
jmp
add
add
add
xchg
shr
ljmp
xchg
push
aas
lahf
sub
pop
xlat
mov
push
aas
sbbl
mov
and
in
cmp
pop
push
mov
idivl
ljmp
mov
mov
inc
test
insb
push
jae
pop
insb
lods
add
dec
aas
fcomp
test
add
add
add
arpl
jae
or
mov
int
test
test
js
pushw
bound
xchg
push
push
insb
sub
mov
lret
mov
mov
inc
arpl
push
xchg
data16
inc
movsb
bound
jle
std
ret
dec
sub
jae
xchg
inc
bound
adc
cltd
and
shl
xchg
push
add
add
add
sbb
jbe
in
out
sbb
and
fisubs
lea
gs
mov
cmp
les
scas
and
cmp
push
mov
clc
jae
inc
mov
xchg
inc
jbe
ret
add
call
cmp
popf
movsl
insb
rclw
les
xchg
scas
dec
loopne
pop
out
add
add
add
jb
or
push
mov
sbb
add
adc
push
pop
inc
cmp
rcll
adc
or
aas
dec
cmpl
cmp
cmp
adcb
sti
pop
push
mov
fists
inc
dec
es
int3
pop
dec
jno
add
fldl
inc
xchg
pop
mov
add
add
sub
rcr
sub
je
xchg
jae
out
dec
insl
enterw
call
jecxz
sub
jmp
and
scas
fwait
sub
scas
in
loop
inc
outsb
bound
xor
pop
and
jbe
inc
lods
sub
filds
jae
call
int
movsl
jbe
jae
jmp
add
add
test
test
add
push
mov
lods
xchg
push
mov
jg
cld
add
cmpsb
xor
xor
aaa
xor
inc
add
shlb
mov
insb
je
decl
daa
bound
sub
push
out
hlt
lahf
shlb
ret
test
lea
push
orl
popa
push
dec
inc
call
dec
add
je
incl
add
add
add
adcl
jne
inc
inc
mov
pop
jb
push
lahf
into
pusha
and
ljmp
xchg
jne
int3
xchg
jmp
mov
or
insb
and
jbe
lods
mov
or
xor
jae
or
aas
xchg
sbb
fisubs
sbbl
mov
add
xchg
xor
call
pop
cmp
xor
popf
cmp
lret
mov
std
and
xchg
sbb
xchg
mov
in
dec
sbb
pop
inc
insl
cmp
add
pop
loop
adc
pushf
aas
fadd
and
xchg
pop
xor
mov
rolb
icebp
adc
add
test
dec
pop
cmp
mov
add
add
add
cmp
xorb
add
cmp
add
int3
sbb
ret
test
inc
push
cmp
pop
lcall
xorb
cmp
ret
test
addr16
cmp
mov
pop
int
mov
mov
add
pop
jne
fdivrs
and
sbb
incl
fisttpll
add
add
xor
jmp
xchg
mov
lcall
movsl
xchg
lret
and
in
cmp
outsb
insb
in
jmp
xchg
pop
movsb
sbb
mov
test
dec
add
add
mov
fs
cmp
outsl
int
mov
mov
pop
fists
pop
lret
ljmp
add
add
pop
cmp
dec
hlt
add
dec
add
push
xlat
lret
int
mov
jecxz
mov
popf
inc
dec
daa
cmpsl
push
dec
adc
mov
add
xor
mov
clc
push
push
fmuls
xchg
jne
inc
mov
push
push
ret
push
mov
jl
mov
inc
add
add
add
add
add
pop
add
mov
inc
cmp
shrl
rclb
mov
and
pusha
jl
cmp
and
sub
into
clc
rcrl
xchg
fsubrs
cmpsb
cmc
mov
xchg
loope
push
dec
incl
sub
adc
push
loop
sbb
outsl
aad
pop
or
adc
push
mov
in
add
add
add
mov
adc
adc
push
and
sbb
cli
addr16
pop
cmc
sbb
and
cmp
mov
outsb
out
push
adc
push
movsb
xchg
xchg
push
jne
dec
xor
lret
add
test
test
adc
jbe
das
or
and
add
xor
add
add
add
imul
pop
pop
cli
or
mov
and
pop
mov
int
or
hlt
inc
cmp
push
dec
jno
add
int3
pop
push
mov
test
xor
jnp
xorb
or
loope
sbb
push
xor
add
push
dec
mov
aad
in
test
add
dec
xor
sub
into
in
sub
push
and
inc
fldt
or
and
pop
dec
hlt
and
adc
xchg
enter
sub
in
test
xlat
in
sbb
fisttpll
adc
dec
popa
repnz
vmovntps
dec
xor
add
add
add
add
ja
dec
les
mov
test
sbb
mov
fcomps
out
std
idivl
dec
xchg
pop
mov
test
mov
pop
sub
je
pop
int
rcl
cmpsl
dec
push
and
jmp
mov
mov
pop
int
testb
dec
add
add
add
fbld
jbe
mov
scas
in
mov
xor
xchg
and
cmc
fimuls
aam
xchg
push
add
xchg
test
and
rcrl
fldcw
and
out
popf
ss
and
adc
or
and
adc
mov
mov
or
add
add
add
xchg
and
xchg
and
xor
pop
sti
pop
sbb
test
sar
les
cmc
inc
xchg
pop
push
cmp
ljmp
sarl
out
lret
int3
js
push
pop
fdivs
imul
lret
int3
fwait
cmpsb
mov
aam
pop
xor
inc
icebp
sahf
cwtl
mov
xchg
pop
xchg
call
pop
add
jg
add
add
add
pop
popf
fistl
pop
stc
fisubrl
imul
lret
int3
fwait
sahf
mov
mov
adc
mov
les
mov
xchg
jle
dec
pop
or
cs
and
fnstenv
test
lahf
push
stos
daa
add
lds
xchg
mov
cmc
xchg
sbb
add
add
add
xchg
loopne
jb
adc
inc
orl
sub
or
mov
mov
pop
xor
jb
or
movsl
xchg
mov
jge
mov
add
jne
or
jg
xchg
pop
int
repz
add
mov
add
dec
popf
in
jns
sub
call
add
add
add
je
test
lds
dec
mov
js
push
inc
outsl
fidivrl
loopne
mov
test
lahf
hlt
inc
vxorpd
fistl
mov
push
cmpsl
test
data16
sub
lahf
rol
add
add
loop
adc
mov
clc
inc
jbe
lea
push
fsts
add
add
add
xchg
mov
fs
adc
test
mov
xor
je
lea
je
loopne
pop
inc
stos
pusha
push
enter
cmp
stos
mov
test
fdivs
xchg
and
rclb
pusha
mov
xchg
movsb
pop
jae
dec
and
pushf
mov
addr16
dec
and
notl
jne
add
add
add
loop
adc
int3
and
jne
test
popa
cli
xor
cmp
mov
sub
cmp
int
pop
sbb
scas
fisubrl
mul
std
push
xor
or
inc
mov
ret
idivb
pushf
idivb
inc
jmp
aaa
pushf
notb
mov
inc
arpl
aaa
or
push
pop
icebp
cmp
push
lock
add
fwait
sub
pop
inc
push
xor
mov
and
jae
int
dec
aaa
rcll
out
and
dec
sbb
add
out
add
fsubs
pushf
push
xchg
xchg
add
and
or
jmp
fadd
or
or
leave
incl
sbb
incl
fcos
add
incl
mov
test
jp
fstpt
add
push
adc
loope
jmp
into
sbb
sahf
aas
sub
push
test
or
xchg
pop
and
or
and
xchg
test
inc
pop
mov
or
and
jmp
add
incl
sub
hlt
and
sbb
insb
fs
adc
mov
lahf
idivb
test
add
or
adc
add
push
mov
call
cmove
mov
negb
add
pop
int3
ret
fldcw
fstpl
inc
test
test
mov
in
mov
mov
pop
cli
scas
jmp
push
add
and
xchg
cmp
add
fwait
out
add
add
add
mov
push
inc
xchg
and
cli
test
xor
sbb
fsub
lea
mov
imul
jnp
and
repnz
sbb
imul
cmp
movsb
test
inc
xchg
or
pop
cmp
int3
out
rcrb
cli
adc
mov
dec
sub
pop
adc
dec
loop
sbb
sahf
in
add
add
add
add
pop
std
adc
pop
nop
cmp
cmpsl
fcmovb
pop
addb
sbb
sbb
adc
mov
int3
sub
sub
or
fwait
lret
add
repz
test
dec
mov
divb
in
inc
int
scas
or
add
call
sub
add
add
inc
inc
icebp
lcall
add
add
add
sub
ds
les
mov
sub
test
fadd
xchg
in
or
mov
and
in
inc
mov
jmp
push
jecxz
fimuls
cld
push
jge
sub
jle
jno
sti
push
sub
pop
push
in
jmp
xor
jmp
xchg
pop
lret
pop
mov
test
out
outsb
and
xchg
sub
jb
add
add
add
sub
in
outsb
jne
lea
in
add
xor
jmp
jnp
stos
lods
into
push
sbb
lcall
movsl
mov
jae
mov
pushw
bound
jnp
cmpsl
mov
sub
js
mov
mov
xor
js
inc
push
mov
add
gs
push
fcoml
inc
add
add
add
mov
xor
push
gs
xlat
push
rclb
mov
daa
stos
inc
mov
lods
insb
fmull
ljmp
dec
or
inc
ljmp
add
cwtl
pop
fdivr
fnstsw
inc
mov
add
inc
xchg
push
and
add
out
and
jmp
inc
jbe
sbb
add
add
add
mov
test
and
sbbl
movsb
sbb
sbb
aad
xor
jecxz
xchg
pusha
push
or
dec
and
cs
pop
in
add
adc
jle
xchg
mov
add
sbb
push
xor
into
inc
lret
xor
cli
movsb
adc
inc
xchg
test
stc
clc
ja
add
lcall
add
add
in
out
mov
pop
mov
pushf
mov
fisttpll
xchg
lret
in
ret
cmovp
xor
test
mov
int
push
dec
les
out
scas
pushf
int3
xor
push
jno
fstpt
in
mov
or
add
scas
mov
clc
lahf
clc
and
jge
mov
outsb
mov
add
add
add
add
pop
and
push
pop
and
fadd
aad
jge
in
mov
repnz
xlat
dec
leave
mov
mov
rcrb
movsl
xchg
and
hlt
dec
clc
arpl
movsl
push
je
fwait
aam
mov
mov
popl
sbb
push
dec
nop
pop
or
xchg
pop
adc
add
add
add
sbb
dec
loope
pop
jnp
mov
adc
adc
mull
adc
add
std
int
lret
inc
or
rorl
jmp
fnstenv
fsts
sti
sub
addb
div
or
ljmp
aas
insl
pop
stos
adc
mov
mov
mov
add
add
add
inc
sub
repnz
cmp
sub
test
and
adc
inc
out
mov
sub
xor
jne
push
add
in
dec
xchg
push
es
stc
and
rcll
ret
pop
inc
cld
out
mov
cmp
test
jg
enter
mov
add
add
or
xchg
or
or
jae
js
je
xor
xchg
imul
lock
adc
ljmp
push
ss
out
enter
xor
insb
shll
or
imul
inc
rolb
inc
cmp
pop
fsts
int
mov
add
iret
pusha
test
xor
add
add
cmc
push
shlb
push
sbb
test
jno
idiv
mov
xchg
mov
pop
imul
sbb
mov
xor
jmp
ret
fldl
add
mov
inc
dec
sbb
fldt
mov
inc
addb
cli
dec
loope
sldt
add
add
mov
inc
cmp
andl
xchg
add
fs
adc
and
mov
or
test
pop
bound
xchg
pop
and
lret
jmp
xchg
mov
fidivrl
shlb
pop
cmp
xlat
mov
mov
jmp
mov
arpl
add
add
add
arpl
mov
test
xchg
test
cmpsl
inc
enter
lock
sub
dec
imul
pusha
imulb
sbb
call
mov
aaa
pop
adc
lahf
lock
test
pop
loop
aaa
or
stos
rclb
pop
xlat
aam
push
scas
dec
and
jo
and
and
add
test
add
add
stos
movsl
cmpsl
aam
inc
je
fs
dec
testb
xchg
cld
aaa
aad
adc
fdivrl
cli
dec
pusha
pop
add
pusha
adc
xchg
loop,pn
pop
push
imul
ds
xlat
movsb
mov
xchg
cli
test
lods
mov
xchg
mov
pop
sub
adc
sarl
add
add
add
cmpsl
jo
jg
cmp
and
push
push
sti
test
xchg
mov
or
push
push
cli
push
int
shl
push
cmp
jle
add
xchg
mov
out
or
add
xchg
loopne
cli
arpl
jge
mov
in
lea
adc
fistpl
xor
xchg
pop
int
add
add
add
or
mov
sarl
pop
dec
dec
lcall
cmc
test
fwait
jae
rcrb
in
xchg
pop
int
pop
add
add
movsb
sub
add
adc
dec
hlt
in
roll
popf
xor
xchg
add
inc
push
and
mov
and
and
mov
mov
jmp
add
add
add
xchg
lea
fs
pop
rcrl
je
inc
lret
push
xchg
pop
and
push
xchg
push
xlat
inc
mov
ret
push
mov
jne
cld
fimuls
fs
xchg
sbb
xchg
pop
mov
gs
sbb
jmp
xchg
mov
or
sbb
fs
add
add
add
mov
lahf
idivb
test
push
jnp
imul
fsts
jno
out
sub
adcl
push
mov
arpl
imul
mov
fdivr
pop
xor
fdivr
paddb
das
in
push
dec
sbb
mov
ret
and
cmpl
fnstenv
in
das
sub
dec
mov
add
add
add
jmp
and
outsl
fsub
fnstsw
mov
push
add
pop
xchg
jg
and
or
aaa
and
and
sub
and
jl
add
jmp
das
cmp
mov
das
and
lods
mov
sar
xor
jb
dec
xor
dec
mov
push
add
add
mov
cld
sarb
inc
jge
arpl
or
sbb
cld
inc
dec
push
lret
inc
test
push
push
dec
cmp
inc
add
fcmovb
dec
cmp
push
mov
inc
fidivl
mov
adc
sbb
pop
fmuls
adc
dec
fisubs
adc
or
addr16
add
add
add
js
mov
ss
icebp
or
and
or
test
xlat
cmpsb
lds
adc
add
cld
iret
in
mov
xchg
push
lods
js
cmp
or
dec
ficompl
mov
or
pop
pop
lret
and
xchg
pop
or
push
sbb
sarl
or
test
div
lods
jg
push
push
insb
xor
loopne
push
add
add
add
addr16
daa
imul
pushf
or
push
shlb
xchg
outsb
jle
sbb
push
xchg
xor
mov
movsl
pop
in
outsl
sub
xchg
pop
push
add
xchg
and
loopw
xchg
push
and
js
push
mov
and
std
xor
xor
bound
add
add
add
mov
add
add
stos
jl
and
adc
stos
shrb
in
and
push
xor
and
lock
push
stos
jns
mov
sub
cltd
mov
cmp
add
add
cmp
inc
mov
xchg
and
cld
aas
sti
imul
or
add
add
add
cmc
pop
add
xchg
in
jbe
push
mov
adc
push
lcall
pop
push
jmp
je
lea
cs
inc
xchg
cs
ret
jge
pop
je
test
dec
add
testb
adc
nop
cs
ret
dec
lods
push
lahf
ret
popf
xchg
jle
mov
jne
or
ret
sbb
xchg
and
and
push
add
add
add
pusha
mov
and
inc
sti
bound
push
in
sahf
sub
loop
adc
xchg
jne
jnp
clc
fistps
pop
popa
sub
loop
push
scas
mov
add
add
sysexit
mov
fsts
sub
jmp
jle
cmpsl
cli
ret
es
sub
and
sbb
mov
add
add
cmpsl
xor
jl
jmp
jl
sbbb
or
or
add
mov
scas
mov
in
std
or
add
rcrl
or
lret
in
adc
fs
stc
insb
ret
lcall
addr16
adc
mov
mov
cli
es
shll
popa
fs
ljmp
add
mov
pop
jecxz
jbe
lahf
sub
jmp
addr16
mov
lahf
test
icebp
std
lret
add
ljmp
xchg
pop
stos
mov
adc
mov
jecxz
xor
test
xchg
orl
outsl
push
inc
xchg
fisttpl
jns
decl
push
add
add
add
add
xor
and
pop
leave
push
jg
inc
push
clc
or
adc
out
jo
negb
negl
lret
sbb
or
aaa
sbb
cld
xchg
fs
push
or
inc
mov
cmp
cmp
or
add
jp
push
bound
add
bound
add
add
add
add
push
and
loope
je
dec
sbb
bound
and
jmp
dec
pop
orl
je
lea
and
jecxz
push
aam
push
and
movsb
imul
push
cmp
push
sbb
and
stos
fwait
and
sub
cmp
shll
stos
xchg
push
and
add
add
add
xchg
push
pop
cltd
leave
and
add
adc
inc
mov
add
pop
int
dec
addb
add
mov
adc
sub
or
out
xor
cmpsl
adc
add
stos
inc
testl
mov
std
adc
inc
xchg
pop
int
add
add
add
add
adc
cmp
lret
add
dec
int3
add
pop
sub
enter
and
xchg
shrl
loop
movsl
cmc
mov
orl
fsub
xchg
pop
lods
addr16
jmp
jmp
addl
push
out
popa
jge
insb
mov
dec
mov
push
add
add
add
xchg
push
jb
lret
mov
xchg
in
mov
or
jecxz
cld
loopne
sahf
cltd
sbb
add
and
lcall
imulb
jo
or
jns
out
adc
add
and
and
rclb
stc
out
sub
mov
inc
rclb
cmp
and
add
stos
lods
popf
imul
in
loop
pop
sbb
push
iret
imul
imul
lret
or
add
cmp
mov
inc
fsts
imul
je
sub
xchg
push
scas
add
popa
insl
cld
fidivs
and
adc
xchg
sub
xchg
push
mov
add
add
add
shll
mov
mov
out
pushf
mov
dec
xchg
cmp
rcrl
mov
mov
cmp
jle
or
cmp
ss
dec
mov
or
stos
das
cld
dec
aas
xchg
mov
pop
lea
aaa
cli
es
pushf
cli
test
sarb
xchg
mov
add
push
and
incb
js
push
cmp
add
add
add
notb
mov
lea
fs
jae
int
movsl
mov
mov
adc
add
aas
mov
xchg
mov
mov
loope
imul
int3
nop
ret
mov
jecxz
sub
pop
pop
and
dec
cwtl
xchg
je
aas
and
out
xchg
jb
push
mov
out
sub
add
add
inc
push
sbb
and
jge
out
andl
in
mov
imul
ljmp
mov
test
jmp
adc
xor
xchg
pop
outsl
jb
test
sbbl
dec
inc
sbb
test
xor
ss
das
mov
test
scas
add
add
add
push
stos
jp
leave
loope
xchg
mov
inc
add
pusha
and
mov
jno
sbb
xor
call
test
or
add
call
pop
cmpsl
dec
shl
add
or
lret
jae
aam
test
out
je
adcb
je
test
je
xor
add
add
add
pop
stos
push
and
jmp
push
fldenv
sub
mov
add
or
xor
mov
rolb
push
pop
push
jge
add
ret
mov
sbb
in
movsl
jp
push
or
mov
xchg
pop
jg
and
mov
out
out
mov
lcall
add
sbb
push
sbb
jmp
hlt
mov
mov
mov
bound
xchg
push
and
cltd
xchg
hlt
sti
mov
lcall
ss
aam
mov
stos
mov
mov
and
xchg
mov
sub
pop
jmp
mov
sqrtps
or
xchg
mov
nop
shl
clc
mov
xchg
loopne
add
add
add
movlhps
xchg
mov
dec
dec
sti
mov
cmc
clc
inc
testl
mov
pusha
call
xchg
int3
mov
stos
es
mov
sbb
mov
mov
stos
xchg
mov
int
adc
inc
clc
testl
in
gs
mov
pop
dec
cmc
and
add
add
add
inc
lret
and
orb
inc
sbb
lods
pop
or
and
mov
sub
or
cmp
xor
rcrb
fimuls
out
bound
push
adc
or
faddl
sti
arpl
cmovnp
sbb
clc
cmovnp
or
lret
ret
pop
insb
ficoml
jbe
sbb
add
add
fisubrs
mov
xchg
decl
sub
outsl
dec
inc
or
push
add
aas
add
add
mov
mov
fcos
cmp
das
pop
call
dec
jl
and
or
jle
sbb
fistl
mov
jecxz
test
or
je
lcall
add
mov
add
add
cmpsl
nop
jecxz
jns
cwtl
add
jle
sbb
jb
add
push
ljmpw
les
xchg
sub
mov
or
sub
popf
or
dec
rorb
mov
mov
repz
xchg
push
lods
loope
rclb
mov
cli
popa
xor
enter
xchg
add
add
add
rcrb
and
into
out
xlat
fsubs
lods
inc
mov
mov
aas
shll
jl
add
ret
aam
dec
mov
mov
aam
xchg
lea
cmp
add
add
inc
clc
xchg
into
outsl
push
popf
sti
mov
out
mov
pop
jp
shrb
add
add
add
add
inc
dec
mov
xchg
test
mov
std
shrb
jg
xor
add
roll
lret
xchg
push
mov
xchg
xchg
loope
mov
or
add
rcll
int3
mov
test
scas
mov
psubw
sbb
jnp
xorl
lods
test
add
add
add
hlt
imul
mov
sub
push
mov
adc
movsb
or
jp
imul
test
lds
movntps
fs
adc
adc
jl
test
xchg
call
ljmp
cmp
mov
outsl
jb
test
xchg
add
cmp
add
add
add
mov
and
cmpsb
mov
dec
call
aad
inc
cli
fidivl
pop
push
or
or
iret
xchg
and
push
add
mov
add
dec
push
adc
sub
sub
insl
movl
push
xchg
jmp
xchg
or
jp
aad
xchg
adc
mov
in
cltd
mov
fidivl
add
add
add
iret
hlt
imul
jne
push
rcl
sahf
dec
mov
or
inc
xchg
pop
and
push
repz
xchg
mov
repz
out
xchg
gs
fsubs
sti
mov
scas
and
push
pop
roll
cmp
ss
inc
lea
leave
push
jmp
sti
popf
rcrb
and
add
add
add
sub
aas
xchg
std
sbb
shl
sbb
in
mov
sbb
inc
sub
inc
imulb
xor
out
stos
dec
movsl
pop
dec
dec
fwait
mov
inc
pop
leave
ret
add
pop
lcall
pop
int3
mov
mov
pop
pop
jbe
sbb
rolb
nop
cltd
adc
mov
add
add
add
inc
shrb
enter
lret
mov
dec
rclb
jnp
push
pop
lcall
pusha
insb
loopne
dec
lret
subb
jecxz
adc
ficompl
dec
icebp
xchg
pop
dec
inc
inc
sbb
repnz
lret
mov
sbb
mov
xchg
adc
dec
in
rol
clc
call
pop
insl
mov
jle
sbb
jbe
pop
jbe
add
add
add
xchg
pop
outsb
push
inc
dec
in
ret
jmp
pop
push
cltd
rcll
inc
and
cmpsl
sbb
fistl
mov
adc
orl
inc
and
jmp
nop
pop
cmp
bound
add
inc
and
jb
mov
pop
mov
add
add
xchg
inc
test
xchg
je
scas
stc
movsb
add
add
add
js
je
popf
data16
inc
test
xor
rcrb
aas
sub
xchg
add
sbb
decl
adc
sbb
dec
sub
or
out
push
ret
xchg
xor
mov
adc
sbb
cmp
cwtl
inc
push
movsl
ret
dec
fsubrp
push
sbb
ljmp
pop
cmp
cmp
and
jne
and
add
add
add
mov
xor
scas
sbb
dec
adc
sbb
inc
sub
fisubrs
adc
sub
sbb
nop
xchg
cli
sbb
xor
adc
and
popf
inc
imul
or
jecxz
mov
pop
xchg
push
push
cmp
sbb
roll
aad
xchg
cli
mov
cmp
cli
jl
sarb
xchg
jae
jae
add
add
add
insb
daa
jae
jae
jae
test
push
addr16
pop
lahf
scas
and
ljmp
roll
fildl
cmp
out
pusha
pop
inc
adc
movsl
inc
stc
ret
mov
jecxz
and
shrl
stos
stc
inc
insl
lret
outsl
lret
add
add
jnp,pn
es
cmp
push
jbe
add
add
add
dec
mov
cwtl
lcall
adc
mov
push
xchg
xchg
orb
mov
adc
xor
or
xchg
pop
inc
and
cs
xchg
mov
and
add
sar
cmp
jae
and
cmp
mov
roll
push
rclb
subl
cmp
sar
push
div
pop
aad
lea
add
add
lret
sub
adc
or
cmpsl
and
cwtl
jge
in
pop
jl
jmp
mov
sub
sbb
sub
stc
sbb
push
enter
into
sub
mov
mov
sbb
jmp
fidivl
sbb
out
loopne
adc
out
rolb
add
add
out
jp
inc
es
enter
jmp
or
xchg
cmpsb
daa
inc
js
ficoml
daa
sub
shl
jnp
test
or
push
dec
in
sbb
pop
mov
add
dec
add
or
push
in
sti
pop
sbb
lds
mov
and
jae
add
add
add
xchg
mov
sbb
and
insb
aam
push
mov
mov
pop
fprem
xchg
xlat
xor
mov
sub
xchg
repz
nop
cli
cld
xchg
xor
roll
loop
or
and
ss
cld
sub
xlat
loop
add
pop
or
dec
sahf
cli
inc
fs
sti
sub
pusha
pop
add
add
add
iret
test
mov
mov
jb
jl
cmovp
jno
jp
add
lcall
push
pop
cld
mov
pop
push
leave
xchg
push
jno
arpl
jbe
mov
cld
dec
inc
fwait
inc
or
dec
nop
mov
cmp
scas
mov
inc
shll
jle
cs
test
std
pop
add
add
add
push
inc
mov
cld
xlat
add
outsl
dec
cmovnp
leave
xchg
push
js
cmp
add
cld
mov
sub
adc
aad
int
pusha
mov
popa
test
loope
push
test
push
sbb
and
outsb
xchg
pop
jnp
je
pop
cmpsl
push
sbb
mov
stc
cmp
incb
das
add
add
add
lds
sbb
popa
and
sahf
adc
stc
push
sti
lods
das
gs
adc
gs
imul
in
jbe
repz
xchg
sbbb
pop
stos
cmpsl
or
scas
idiv
das
add
hlt
adc
subl
in
sbb
sahf
dec
add
cmpsl
mov
scas
ret
nop
bound
mov
sub
add
sub
lcall
and
jns
and
mov
inc
pushf
repz
popf
dec
mov
push
and
sbb
dec
js
add
jo
lahf
inc
dec
pushf
loop
je
mov
jp
insl
dec
arpl
push
shlb
inc
cmp
push
xchg
xchg
lret
mov
daa
cli
es
adc
lock
xlat
adc
add
add
push
lock
sbb
xchg
int
lcall
xchg
lock
lock
jmp
and
inc
and
cmp
mov
cmp
scas
shrb
dec
aam
inc
andl
pop
sbb
nop
mov
cmp
flds
hlt
mov
je
bound
xchg
adc
adc
or
add
add
add
jmp
mov
push
arpl
clc
data16
psllw
push
inc
movl
jle
xchg
bswap
xor
clc
js,pn
or
mov
lret
js
or
mov
mov
out
push
sbb
jle
dec
inc
cmp
adc
add
jecxz
add
pop
lret
enter
add
pop
jge
add
add
add
mov
lret
enter
add
pop
jge
mov
and
jne
and
xchg
xchg
xchg
andb
jl
sbb
push
and
inc
mov
and
push
and
pusha
add
mov
xchg
cmp
xchg
imul
push
shl
insb
in
fstpt
xor
sbb
and
push
and
jo
and
pusha
add
add
add
out
cmp
and
cmp
inc
test
jmp
jns
push
sarb
push
lcall
jb
aad
push
imul
ljmp
pop
and
push
std
dec
popf
mov
sbb
mov
insb
add
jne
and
push
imul
dec
push
dec
add
add
add
xor
pop
je
mov
dec
jno
gs
mulb
mov
mov
mov
push
push
adc
pop
incl
inc
push
push
loopne
inc
leave
mov
xchg
cld
pop
ds
pop
push
loope
lcall
push
mov
iret
incl
add
add
add
pusha
stos
cli
push
imul
out
bound
cli
imul
xor
je
jmp
sarb
push
loopne
pop
cmp
pop
shl
and
dec
les
fs
push
sbb
aam
push
xor
out
cmp
push
in
cld
pop
aad
loope
mov
sbb
add
cmp
test
pop
sahf
out
add
add
add
out
or
clc
dec
adc
dec
inc
mov
cmpb
dec
daa
in
dec
or
mov
inc
lret
popf
xchg
popa
mov
fcmovne
div
mov
pop
addl
jl
filds
cmp
cmp
movsl
dec
push
adc
pop
xor
lret
add
add
add
or
jmp
adc
jmp
mov
xor
scas
inc
and
les
xchg
xor
lea
xchg
mov
psrld
and
mov
or
cmp
aad
stos
loopne
lcall
outsl
bound
add
daa
xchg
js
mov
jge
mov
shl
je
xchg
pop
dec
ljmp
add
add
jmp
mov
out
jmp
sub
add
add
inc
sub
scas
mov
sahf
icebp
in
or
jmp
fidivl
jo
mov
data16
cmp
xchg
aad
movl
mov
lock
mov
sbb
cwtl
adc
in
shlb
sldt
add
add
sub
addb
subl
mov
mov
arpl
imul
cmp
adc
lea
je
mov
loopne
cli
jl
sarb
xchg
sub
cmp
and
push
sbb
mov
int
fbstp
jae
pop
lods
and
adc
jge
repnz
dec
shll
or
add
add
add
jne
xchg
cli
mov
in
jae
in
or
push
mov
and
aam
dec
xchg
sub
cli
test
sarb
xchg
mov
and
rcll
movsb
jnp
shlb
push
addr16
push
jb
push
loopne
pop
outsl
scas
pop
jae
loopne
jp
jg
jl
shll
adc
xchg
add
add
add
mov
xor
lds
add
sub
scas
jbe
popf
add
jge
jle
jl
lods
dec
jl
fisttps
pop
jbe
jb
cwtl
cltd
xchg
pop
fwait
add
sub
sbb
out
push
add
roll
or
xchg
lock
fistpll
and
mov
push
mov
mov
and
pop
and
or
dec
loop
add
add
add
xchg
inc
outsl
aas
push
jl
icebp
cmp
jmp
lock
and
jmp
orl
sub
xor
and
out
aad
outsb
daa
jno
aad
push
fistps
jmp
xchg
or
xchg
mov
adc
movb
loop
inc
dec
mov
add
pop
dec
add
fcmovne
cmp
test
mov
fistl
and
std
jp
aam
and
lea
aad
test
pusha
stc
arpl
push
mov
arpl
add
icebp
add
lds
sub
or
subb
add
jmp
add
add
add
jle
jmp
or
mov
or
nop
push
fistl
jnp
xchg
mov
mov
imul
mov
nop
loopne
imulb
mov
jno
test
xor
popa
cmp
push
xchg
loopne
dec
popa
inc
sbb
std
clc
test
mov
sbb
add
mov
and
xchg
dec
sub
add
add
add
lcall
fcoml
loope
xor
fmull
nop
dec
and
test
push
sar
xor
and
js
sub
cmpsb
sub
js
sub
js
sub
js
sub
js
sub
jbe
xchg
jae
inc
jae
iret
aas
jnp
fstpt
arpl
aas
mov
sarl
add
add
add
cmc
jae
aas
bnd
addl
xchg
xchg
mov
lret
leave
cli
ret
ror
sbb
shr
out
sahf
inc
lret
mov
adcb
je
push
in
lret
add
push
loope
les
push
cltd
push
mov
push
push
and
xchg
adc
fcoms
test
or
jbe
aad
das
aad
inc
and
mov
add
add
add
shrl
push
and
sbbb
lea
and
popl
add
mov
imul
popa
mov
lea
in
jp
hlt
jo
xor
lea
push
fnstsw
push
icebp
imul
jmp
sub
lahf
add
add
rolb
add
add
cmp
push
ret
cmp
out
js
clc
pop
lahf
adc
popf
adc
dec
out
mov
and
xor
lret
jno
lea
inc
and
test
ds
xchg
pusha
and
mov
add
je
scas
fstp
adc
sti
ret
lods
pop
or
push
jno
pop
fbld
je
stos
and
sub
or
add
add
push
jno
add
dec
pop
lahf
insb
xchg
cld
movq
stc
push
out
call
push
enter
loopne
push
out
jmp
push
push
loopne
rorb
in
or
into
sahf
pop
addl
loopne
jp
daa
jge
loopne
add
loopne
jmp
loopne
cmp
in
mov
add
mov
loopne
and
pop
out
add
add
add
outsb
jmp
adc
loopne
les
push
add
out
sub
adcl
cmpsb
xchg
loopne
aaa
mov
sub
jne
xor
cmpsl
sub
cmp
jle
daa
mov
push
add
loope
daa
test
mov
aaa
lret
add
push
pop
popa
adc
inc
pop
jge
jg
adc
js
add
add
add
or
pop
and
daa
adc
divb
cmc
cld
dec
fcmove
outsb
pop
xchg
cld
js
iret
jo
pop
fcmove
push
push
push
dec
lea
aas
in
inc
lret
mov
cmpsb
add
pop
push
dec
jns
and
adc
fs
cmpsb
hlt
stos
mov
adcb
ficoml
pop
testb
ds
push
pop
call
pusha
dec
add
aam
adc
sub
add
add
add
loop
fcmovbe
dec
jbe
imul
jb
popa
adcl
and
stos
out
aad
xor
and
sti
stos
lds
loope
push
fcomps
fisubrl
stos
out
out
dec
repz
add
lahf
rol
mov
fildl
fsubrs
mov
add
add
add
add
cmc
fcomps
cmp
jbe
movd
andb
fildl
sub
outsl
pop
arpl
jp
sbb
and
inc
add
and
imul
push
in
xor
stos
inc
and
inc
inc
inc
inc
test
xor
mov
test
ja
mov
push
dec
popf
xor
loope
sbb
mov
popf
xor
add
add
add
xchg
addr16
ret
xchg
adc
mov
pop
adc
inc
test
lahf
ficoml
cltd
mov
movsb
bnd
push
rorb
dec
out
cmp
push
adcl
push
rolb
sbb
lock
aad
out
push
cmp
sub
arpl
mov
add
add
aas
xor
push
jle
sub
pushf
call
jl
faddl
into
mov
idivl
lret
fisttpll
mov
mov
notl
adc
mov
mov
mov
dec
nop
and
dec
lret
jmp
jecxz
stc
adc
cmp
pop
dec
stc
test
adc
ret
sahf
inc
lret
mov
popa
ss
or
dec
repnz
out
xchg
add
je
add
add
add
push
pop
push
pop
xchg
jl
mov
in
out
rcrl
flds
push
rolb
lret
outsl
xchg
lahf
mov
rclb
jmp
roll
and
xchg
adc
xchg
pop
and
jecxz
xadd
lock
punpckhdq
fldl
cltd
arpl
gs
arpl
pop
fimuls
stc
clc
ja
add
add
add
push
pop
test
sbb
in
add
or
and
in
jo
in
cmpsl
mov
dec
sbb
ret
adc
aaa
dec
lods
lea
and
jge
pop
call
test
sub
jns
adc
jne
inc
inc
push
fs
add
or
add
add
add
add
inc
add
or
pushl
or
xor
insl
cmc
push
data16
add
clc
pop
and
push
in
sbb
push
xor
jb
imul
inc
popl
int3
mov
or
and
sub
nop
bound
xchg
jmp
pop
or
cwtl
push
and
adc
add
add
xchg
lock
pop
adc
jno
addr16
and
icebp
and
jle,pt
mov
and
xchg
gs
sbbl
addb
aad
stc
push
cmp
mov
or
xchg
push
stc
sub
pop
mov
xor
mov
stc
pop
fcompl
mov
ret
ds
into
adc
stos
xor
out
pop
push
cmpsb
pop
sbb
add
add
inc
lret
cmp
or
or
fstpt
pop
shr
push
jecxz
cmc
push
jb
mov
pop
jle
or
inc
out
ret
daa
mov
add
pusha
mov
xor
iret
sbb
pop
hlt
add
inc
xchg
mov
mov
out
lcall
fsts
daa
mov
xor
jo
add
add
add
cwtl
mov
inc
lret
sbb
xchg
pop
or
cmp
inc
sub
cmp
add
pushf
fildll
add
and
xchg
pop
sub
jnp
and
xchg
andb
pop
lahf
test
xchg
pop
lahf
mov
cmovp
adc
xchg
pop
test
mov
lds
and
add
add
add
repnz
jmp
ljmp
add
outsb
sub
inc
lods
jecxz
or
mov
dec
clc
mov
imul
xchg
aad
mov
add
sbb
fcoml
sub
dec
and
test
js
cld
mov
sub
pusha
xor
and
std
ret
das
aam
inc
push
clc
mov
add
add
ret
sub
sarb
das
xor
je
or
int
and
xor
add
cmp
lahf
lret
popf
jl
daa
int3
pop
sti
add
mov
pusha
and
add
add
pusha
and
ficomps
jne
lds
lcall
test
lret
roll
test
add
jge
in
dec
mov
add
or
sub
lods
pop
insl
and
jo
nop
in
mov
dec
sbb
iret
xchg
repnz
sbb
ss
ss
insl
add
mov
sbb
sub
leave
pop
insl
and
pop
jl
sbbl
daa
mov
xor
jnp
xchg
mov
add
add
add
cltd
cmp
arpl
into
pop
cmp
insb
daa
sub
movl
test
sbb
aad
lret
jl
and
pop
xchg
xor
push
inc
inc
insl
pop
push
cmp
push
or
jg
sub
mov
mov
push
dec
lods
das
add
add
sub
add
add
add
pop
cld
sbb
aaa
and
push
pop
and
inc
out
sub
and
xorb
test
jbe
aad
stos
or
jmp
mov
pop
test
std
sti
and
leave
pop
lahf
mov
dec
inc
fidivl
mov
aad
lds
add
mov
pop
test
and
add
jns
test
sub
test
mov
pusha
test
test
scas
pop
stos
add
cmc
mov
sub
mov
popa
cmp
sbb
xor
jns
roll
aad
xor
jecxz
mov
iret
xchg
jmp
or
add
fisttpl
push
out
faddl
add
add
add
repz
leave
repnz
icebp
pop
push
and
pop
pop
and
pop
js
push
sub
cs
lahf
shll
sub
add
pop
jne
xor
dec
xor
xchg
and
jmp
push
insb
and
arpl
jae
imul
lret
insl
ljmp
insl
pop
inc
jne
or
pusha
jecxz
aas
push
add
add
or
jae
xchg
lock
adc
sub
or
or
addb
pop
adc
add
mov
daa
sbb
bound
sbb
loope
push
mov
or
cwtl
mov
sub
je
insl
stc
adc
pop
ss
add
jp
and
jmp
into
icebp
add
cli
sahf
out
fmuls
push
ret
inc
mov
add
add
mov
jne
mov
pop
xchg
out
shll
jne
inc
ret
sbb
or
in
add
aas
dec
lods
inc
sbb
and
xchg
in
adc
or
dec
adc
push
push
jne
inc
les
aas
into
inc
dec
mov
in
add
outsl
cld
lea
add
add
add
lods
enter
push
subl
scas
sti
test
mov
test
scas
notl
and
fcmovnbe
es
test
mov
orb
insb
push
lahf
and
and
xor
test
sti
push
mov
stos
stos
sub
orl
filds
dec
fdivrl
pop
leave
hlt
add
add
add
cmp
add
mov
xor
add
aam
sahf
pushf
xchg
or
xor
sub
divb
daa
pusha
in
mov
add
je
xchg
mov
fadd
or
das
and
xchg
xor
cmc
or
cmp
push
mov
add
loope
jbe
add
add
add
pop
and
loopne
add
outsl
xchg
in
call
fstl
add
jnp
je
push
inc
jne
push
inc
xchg
out
xor
adc
sub
lds
and
mov
push
jmp
add
stc
pop
or
stc
movsb
mov
inc
xchg
push
fs
insl
in
or
push
push
add
add
add
inc
gs
jns
jae
sahf
push
xor
xchg
loopne
test
fcompl
imul
insb
lods
add
dec
mov
sar
data16
inc
in
push
cmp
nop
loopne
add
dec
movl
mov
pop
cmp
pop
out
pusha
add
popf
cmp
and
fistpll
call
add
add
add
cmp
mov
adcl
insb
push
pop
js
movb
arpl
xchg
dec
pop
leave
mov
outsl
insl
sti
mov
fcoms
jle
cmpb
orb
pusha
sbb
jle
sub
inc
push
int3
ficompl
inc
push
andl
xchg
pop
and
xchg
leave
and
mov
add
es
lods
sub
add
add
add
popa
push
and
xchg
pop
jne
push
aad
ret
and
pop
mov
bound
pop
add
push
xchg
adc
pusha
mov
insl
aas
push
jp
es
pop
pop
push
or
and
xchg
aad
in
and
cmp
adc
je
aad
dec
mov
or
movsb
dec
push
add
add
add
add
mov
adc
mov
mov
push
cli
sub
and
test
push
cli
pop
loopne
jg
sub
inc
cmp
mov
push
push
cli
call
rclb
inc
pop
and
sub
add
or
out
push
xor
cmp
movsb
jl
mov
jg
shlb
add
push
loope
repz
add
add
add
repz
or
lret
mov
divl
xchg
cmp
mov
out
xlat
imul
jmp
mov
decb
cltd
pop
xor
push
inc
xchg
imul
xchg
sub
and
nop
fbld
add
insb
xchg
aas
fbld
add
inc
jae
in
pop
arpl
adc
repnz
fisttps
push
add
add
add
lcall
mov
mov
and
into
stos
shl
mov
and
int3
fsubr
or
rcl
sbb
mov
testl
shl
dec
xlat
mov
aaa
xchg
pop
fidivrl
cs
xchg
mov
inc
xchg
test
in
sub
jge
add
jmp
lock
add
add
out
mov
or
push
stc
fldcw
call
cmp
inc
cmp
aam
dec
int3
daa
mov
pop
and
imul
shrl
adc
outsl
lea
repz
jle
stos
jle
sub
pop
or
in
jmp
rorb
out
fcompl
fmul
frstor
enter
add
jmp
add
pop
jl
sahf
xor
jmp
sub
jo
cmp
movl
dec
fnstsw
and
jmp
push
aaa
push
repnz
mov
fcmovu
mov
and
lret
pop
ror
dec
xchg
pop
and
jmpw
add
or
icebp
mov
mov
int
jg
fbstp
jmp
add
add
add
dec
adc
es
inc
xor
loope
xchg
inc
push
ja
movl
inc
xor
gs
int3
add
xchg
jmp
psrld
rclb
fbld
push
enter
sysret
inc
cs
ficoml
inc
inc
cmp
jns
aaa
mov
dec
inc
test
cmp
inc
inc
sub
add
add
add
xchg
push
cld
adc
not
in
loope
aas
xchg
pop
stc
add
and
xchg
xor
in
inc
ret
cmpsl
fimuls
xchg
pop
add
mov
pop
add
mov
pop
add
fcomps
repz
dec
fstps
ss
add
mov
pop
add
mov
pop
add
fcomps
xchg
pop
add
add
add
add
mov
add
je
xchg
arpl
je
pop
iret
mov
or
pop
inc
cmp
lea
jmp
push
loop
in
loope
addl
lds
fisttpl
mov
xor
xchg
push
sub
dec
cltd
or
pop
fwait
xchg
sub
shrl
ss
or
add
add
add
int
mov
repz
jl
negl
pop
add
rorl
xchg
inc
ds
movl
lcall
sub
into
and
and
cli
cmp
scas
mov
xchg
stos
out
sbb
add
xchg
mov
test
out
jo
aad
sbb
mov
mov
rcl
cs
jbe
add
add
add
push
add
adc
jno
or
in
inc
leave
pop
int3
in
rcl
jae
cmp
mov
dec
stc
add
fistpll
jle
iret
aad
push
iret
dec
fyl2x
pop
sub
call
aaa
adc
mov
ja
rcl
add
jp
and
jnp
push
push
jnp
rolb
inc
and
jo
xchg
xor
xchg
xor
incl
add
add
add
add
repz
into
mov
jne
jl
or
int3
les
fucomi
stos
push
ret
mov
xor
popf
jp
push
imul
je
xor
lahf
cli
cmp
adc
cmp
fsubr
add
arpl
mov
mov
xchg
insl
inc
or
xchg
cmc
stc
add
add
add
movsb
mov
aas
xchg
arpl
jae
pop
repz
in
ret
jae
std
int
mov
and
push
imul
or
sub
cmp
and
mov
jl
or
int3
push
fisubs
and
shll
push
rcr
lret
sbb
jae
sbb
inc
in
in
or
movsb
fcmovbe
aas
add
add
add
xchg
arpl
jae
push
xchg
fiadds
addb
bound
inc
dec
mov
sbb
xor
daa
push
aad
icebp
repnz
pop
fiadds
test
pop
mov
pop
jmp
js
lock
adc
add
dec
xor
xor
dec
out
ror
leave
add
add
add
add
sti
or
enter
sbb
or
fisubs
test
pop
std
aam
stc
arpl
xchg
xchg
stc
rolb
pusha
ss
fmuls
sub
test
jl
jmp
jns
enter
cmpsl
lods
lret
icebp
sub
adc
mov
aas
stc
rolb
lahf
sub
pop
cmpsl
lods
push
aaa
jno
clc
repnz
add
add
add
inc
shrb
add
and
dec
push
dec
into
inc
jp
sub
pop
test
xor
mov
xchg
sbb
add
sbb
fdivr
aad
and
je
lods
adc
in
xor
call
jg
test
or
inc
ret
insb
push
jg
ficoml
xor
add
add
add
jmp
and
add
or
jmp
xor
cs
xlat
mov
lods
jp
lds
adc
leave
sti
adc
cld
sub
dec
js
fistl
mov
push
and
ficoms
stc
pushf
sarl
xchg
arpl
je
arpl
inc
add
stc
rcrl
xchg
in
ffreep
add
add
add
rcrb
cld
xchg
test
movsb
in
pop
jae
test
int
push
sbb
and
gs
pop
and
imul
movsb
jle
aas
xchg
pop
fisttpll
mov
and
or
add
rcrl
aad
add
int3
cwtl
adc
lds
jo
int
xlat
push
mov
pop
sbb
ret
or
rcrb
add
add
add
or
data16
movb
les
push
xlat
cmc
je
ja
lods
repz
pop
outsb
push
adc
cmc
mov
mov
testl
ret
cmp
nop
xchg
or
xchg
pop
push
call
or
sbbb
xor
pop
test
xchg
push
repz
inc
out
xchg
loop
add
add
add
aam
jae
repnz
lret
xor
lcall
and
dec
stc
pop
pop
fcoms
xchg
scas
ss
shrb
lock
jbe
aam
and
out
arpl
cmp
jle
xchg
mov
mov
aam
shrl
test
out
mov
mov
mov
dec
test
and
shrb
jmp
add
mov
das
subl
mov
popa
mov
out
insl
and
xchg
mov
add
mov
sub
lahf
je
mov
add
xchg
pop
and
fcomip
testl
das
xor
xor
add
sti
ficoml
imul
cld
and
add
xchg
pusha
and
add
add
add
divb
add
and
movsl
or
lods
and
add
jb
add
push
mov
add
clc
jno
lods
out
inc
push
pop
add
inc
mov
push
sarb
test
mov
popa
add
test
je
push
sti
rcrb
sbb
adc
add
xchg
ret
jge
add
add
add
and
adc
lret
test
ss
mov
lcall
jge
mov
je
add
inc
push
push
scas
mov
stc
pop
and
and
mov
push
jle
inc
adc
scas
mov
push
sbb
adc
out
pop
notb
pop
sbb
xchg
shl
popl
adcb
xor
sbb
add
add
add
popw
inc
inc
sbb
into
mov
xchg
pop
inc
call
xchg
pop
push
xor
push
dec
icebp
cmp
or
mov
fadd
fwait
xor
aaa
test
xchg
xchg
inc
je
ret
pop
insb
and
scas
dec
outsl
stos
ret
dec
rolb
dec
je
ret
cs
xchg
pop
lret
add
or
mov
push
test
add
add
pop
cmpsl
and
lcall
mov
jae
shll
xchg
pop
cmpsl
insb
out
ret
aad
ret
pop
jmp
push
mov
push
pop
cmpsl
fs
aad
mov
das
mov
push
mov
int3
xor
fcmovb
and
jmp
bound
aad
add
add
add
jae
xlat
push
sbb
arpl
nop
andl
sub
xchg
sub
add
fmull
push
and
pusha
pop
mov
out
xchg
adc
xor
add
push
test
dec
xor
movsl
test
fistl
mov
add
jp
pop
add
add
mov
mov
add
sub
push
lods
test
add
fsubrl
call
insb
cmc
pushl
and
imul
fstpt
add
mov
dec
loop
mov
cs
icebp
call
jg
scas
and
xchg
cmp
dec
and
jg
push
xchg
cwtl
mov
add
push
lcall
mov
and
and
fidivs
leave
aam
sub
test
dec
lds
add
out
cmp
xor
xchg
arpl
sub
xchg
pop
fwait
xor
pop
lret
add
test
into
scas
cli
mov
rolb
pop
dec
ds
push
inc
inc
pop
scas
inc
mov
rolb
dec
push
push
inc
hlt
mov
add
sarb
fwait
add
pop
or
push
cmp
push
xchg
dec
loop
rcll
rcr
mov
mov
cmp
jle
lods
dec
inc
in
inc
ret
jmp
mov
pop
jp
push
ret
lret
cmc
adc
int
push
mov
mov
das
xchg
pop
arpl
ret
and
add
add
add
and
fisttpl
leave
and
mov
jmp
gs
js
orl
cmpsb
je
rcl
dec
mov
push
xchg
xchg
cmp
push
fldenv
xchg
test
adc
cmp
loope
jle
mov
jmp
rol
das
xchg
pop
fs
mov
cmpsl
mov
dec
int3
add
add
add
add
clc
cmp
sub
sub
push
or
stos
add
test
sti
xor
push
in
fadd
insb
or
push
mov
sbb
or
clc
repz
mov
test
jmp
pop
test
out
test
add
or
int3
cmp
fadds
add
add
add
hlt
data16
mov
test
jle
xor
je
xor
adc
or
das
aaa
fs
mov
cmp
jns
int
jle
loopne
sbb
stos
shl
clc
mov
daa
sub
sbb
idiv
inc
ficomps
shl
insb
testb
adc
lret
push
sbb
mov
add
add
xor
cld
nop
scas
and
inc
fcoms
xchg
sbb
clc
daa
insl
and
and
xchg
xchg
fwait
sti
fidivs
push
add
jecxz
lret
fiaddl
test
nop
mov
scas
fbstp
push
sub
and
xchg
pop
lret
xor
inc
out
scas
xorb
mov
aas
ret
in
inc
aas
add
add
add
lods
adc
adc
cmp
mov
rorl
fwait
scas
dec
imul
clc
mov
jecxz
fisubl
nop
push
add
jecxz
in
nop
push
add
sarl
and
xchg
test
jmp
fisubrs
pop
jecxz
imulb
fwait
push
mov
and
dec
jecxz
das
lea
mov
add
jmp
pop
jns
push
push
test
push
cld
jo
cmpsl
sbb
out
lret
iret
int3
pop
sbb
aad
bound
and
xchg
mov
sbb
mov
mov
jmp
test
mov
incl
pop
lahf
into
adc
aas
and
add
add
add
xor
and
test
push
mov
lahf
sbb
test
test
xor
fisttpl
insl
mulb
cmp
hlt
sub
cli
decl
nop
aam
das
inc
faddl
aam
xor
pop
dec
mov
fcmove
lods
lahf
iret
mov
int3
test
test
pop
pop
test
add
add
add
mov
and
sbb
or
stc
xor
mov
rcll
ja
iret
push
stos
lods
mov
pop
leave
sbb
testl
jae
mov
fsub
xchg
std
adc
mov
pop
lret
test
sub
je
sub
push
mov
clc
or
insl
sub
push
or
add
add
add
fdivrp
jns
sbb
call
call
adc
or
and
int3
or
mov
adc
mov
out
les
jns
test
or
pop
lret
mov
inc
mov
lea
dec
dec
mov
std
lret
adc
xor
es
add
add
popa
subb
xchg
mov
daa
test
mov
or
jne
jecxz
push
mov
testb
xor
aad
dec
dec
adc
push
mov
aaa
arpl
mov
and
or
sahf
out
es
mov
add
add
add
add
test
and
mull
ss
and
jmp
testb
int3
cmp
push
dec
mov
out
xlat
and
xchg
sub
das
cmp
pop
sbbb
test
sub
and
push
mov
push
adc
pop
sub
pop
lahf
into
and
jle
pop
aaa
in
insb
and
add
add
add
call
std
fs
ss
lret
sub
and
cmp
sub
mov
sti
cmp
mov
mov
push
adc
rcl
xor
xchg
test
add
xor
test
lock
pusha
cmp
push
mov
add
add
push
add
add
add
sub
stc
push
sub
add
add
xchg
mov
bound
xchg
jbe
or
add
jb
stc
into
sub
out
add
stc
or
negl
push
jmp
rorb
test
dec
push
lret
aas
stc
mov
cmc
pop
push
mov
lahf
in
or
test
mov
adc
add
add
add
sub
jae
pop
push
ss
xchg
add
out
mov
test
inc
rcll
mov
push
test
dec
popf
pop
push
leave
inc
add
bound
sahf
dec
test
mov
pop
dec
mov
jge
addb
dec
push
inc
les
sti
xchg
pop
push
xlat
or
testl
xor
dec
and
cmp
jbe
scas
inc
ss
lahf
repz
mov
ret
fisttpll
cltd
ret
xor
and
xchg
aas
aad
xor
aad
fdivrl
dec
cmp
pop
pop
mov
aad
enter
in
inc
scas
mov
sbb
push
sub
xlat
jle
mov
bound
add
add
add
aad
rcrb
sub
enter
jno
outsl
mov
cwtl
sbb
jb
loop
inc
ss
cs
push
lret
dec
aaa
fsubl
dec
sbb
sar
add
pop
mov
cs
leave
lret
outsb
sub
and
gs
and
clc
das
mov
push
cmpsb
loop
push
add
push
pop
and
arpl
lahf
icebp
lret
pop
fistl
mov
push
push
pop
sub
leave
je
loopne
addl
leave
fistl
mov
adc
push
mov
sarb
ljmp
sti
test
xchg
sbb
stc
pop
and
jmp
adc
xchg
aad
or
jmp
cmp
add
add
add
rcr
mov
push
es
xchg
data16
outsb
adc
push
jecxz
in
or
add
xor
loopne
mov
xor
jge
lahf
gs
xchg
test
lea
xchg
jb
dec
inc
outsl
dec
push
jne
xor
test
xor
push
sahf
jnp
fxch
pop
inc
lods
pop
pop
ja
jmp
xor
add
add
add
push
inc
mov
lea
inc
jne
mov
fsubrl
les
dec
les
testb
orb
jno
nop
fstpt
xchg
les
pushl
lods
rdtsc
add
mov
arpl
add
xor
xchg
fcmovne
lods
dec
les
sub
ss
daa
add
jl
les
add
add
add
jl
js
or
push
mov
mov
rorb
cld
dec
add
jb
scas
and
push
call
mov
dec
adc
fcmovbe
pop
pop
jmp
pop
and
inc
dec
jns
lret
mov
or
out
arpl
enter
mov
call
jmp
imull
add
add
add
shrb
and
bt
pop
push
test
jb
loope
mov
shlb
adc
add
ds
xor
lret
mov
sub
jmp
fxch
js
lret
jmp
sub
inc
jle
adc
jp
add
jle
nop
cmp
and
mov
jnp
inc
add
add
add
clc
jge
or
inc
cmp
jno
add
adc
adc
sbb
mov
inc
insb
je
test
adc
adc
lahf
add
or
mov
sub
test
pop
jns
mull
pop
and
mov
xchg
jmp
int
push
adc
mov
rclb
add
add
cs
ds
pop
and
and
jae
adc
in
cmp
push
sub
data16
push
sub
cmp
fmul
je
jmp
add
sbb
mov
das
test
sub
add
data16
stos
mov
clc
scas
push
push
dec
insl
repz
popa
cmp
enter
add
pushf
imul
pop
mov
add
add
daa
mov
lods
lret
pop
push
cmp
sbb
orb
out
sub
and
enter
jge
cmp
dec
shlb
fisttpl
dec
jnp
dec
mov
pop
sti
cmpsl
cld
push
into
inc
pop
cmp
mov
mov
scas
mov
subb
stos
push
push
or
add
add
add
scas
test
out
mov
push
les
fs
cmp
jo
jecxz
push
mov
in
or
or
dec
sub
jecxz
pusha
into
jecxz
pop
jecxz
lcall
das
mov
add
inc
or
mull
stos
lret
mulb
xor
andb
call
add
add
cs
jmp
pop
lds
pop
push
sti
js
jo
and
mov
and
jp
and
pusha
cmp
les
jae
push
mov
push
ret
pop
or
push
je
sub
xor
sti
pop
sbb
xor
lahf
lods
push
jae
ljmp
lock
add
iret
mov
jle
and
and
add
add
add
sahf
les
sub
and
cwtl
push
and
xchg
aaa
andl
insl
inc
ret
push
cwtl
push
pusha
movb
xor
test
sbb
das
push
xchg
and
popa
jns
pop
lahf
loopne
jge
pushf
mov
sbbb
bound
mov
sbb
mov
cmp
stc
pushf
fs
inc
xchg
ret
push
daa
pop
bound
add
add
add
xor
xlat
sahf
jno
pushf
fs
inc
xchg
subb
adc
pop
push
mov
xor
js
cmpsb
dec
add
imul
js
fisttpl
jns
lods
mov
enter
popl
xchg
dec
cwtl
test
mov
jne
int3
add
add
add
add
hlt
add
jmp
push
inc
mov
cmp
sbb
fistpl
repz
les
insl
dec
mov
and
mov
jecxz
push
adc
repnz
out
mov
jge
stos
inc
iret
fnstsw
jmp
adc
inc
dec
ja
adc
call
add
add
add
xchg
cmp
mov
pop
ljmp
push
stos
or
data16
pop
or
adc
add
push
outsb
xor
test
jmp
sbb
mov
xlat
push
add
in
xlat
cli
dec
jnp
xchg
pop
outsl
mulb
enter
and
push
xor
ds
mov
out
add
add
add
mov
lea
push
lahf
into
rcr
test
xor
mov
ja
js
inc
and
aaa
push
inc
push
js
push
les
aad
test
and
out
and
xlat
clc
aas
push
sub
push
les
paddsb
and
mov
nop
popa
rorl
add
add
add
add
ror
adc
fildl
or
sub
nop
popa
mov
gs
popa
add
mov
mov
xchg
xor
dec
or
vmovq
lcall
sbb
in
into
lcall
xor
call
mov
adcl
add
add
add
in
sbb
mov
adc
fwait
stc
push
pusha
lods
dec
movsl
or
mov
dec
pop
fcoms
and
movsl
pop
in
aam
push
dec
sbb
in
inc
sbb
test
inc
pop
loopne
leave
jg
pop
lret
add
lret
add
push
or
inc
add
cmpsb
sahf
stos
repnz
lret
add
add
add
add
and
add
xchg
pop
xchg
push
or
push
mov
xchg
out
mov
xchg
pop
push
or
nop
inc
xchg
movsw
lret
xchg
arpl
mov
les
adc
test
or
das
data16
outsl
pop
jno
movsl
aad
pusha
scas
stc
decl
leave
pop
push
mov
cmp
mov
add
add
lahf
mov
je
lahf
aad
cli
es
or
scas
ja
test
pop
test
jmp
push
mov
call
push
sbb
jmp
ret
leave
sub
and
mov
push
lahf
mov
jmp
and
add
or
sbb
fisttpl
add
movsl
adc
ss
mov
test
xlat
and
enter
insl
inc
add
js
in
std
das
pop
lahf
into
and
insb
lcall
mov
mov
push
sbb
pop
pop
rorb
and
xor
jno
mov
or
js
push
jne
mov
in
ljmp
add
add
add
sub
lahf
aam
setno
and
mov
hlt
mov
jo
jg
outsl
and
xchg
cmp
enter
nop
mov
cwtd
ss
pushf
or
js
lock
test
and
je
push
and
sbb
and
xchg
stc
pop
mull
push
add
xchg
mov
add
ret
jle
loope
mov
push
add
or
int3
mov
inc
xchg
pop
fadd
ret
add
filds
mov
iret
push
ret
fcmovb
mov
and
or
jns
pop
loopne
scas
lods
pop
or
pop
sbb
inc
mov
cmp
dec
cmp
fmull
add
add
push
and
scas
cmp
repz
inc
xchg
cmp
mov
xchg
fbstp
cmp
mov
dec
jecxz
mov
and
xlat
dec
in
sbb
leave
ljmp
imul
repz
sub
and
jmp
xchg
pop
and
cmp
mov
roll
add
add
outsl
mov
into
or
jne
inc
cmp
jmp
inc
xor
insb
adc
mov
lcall
xlat
push
pop
jnp
imul
or
cmp
add
add
jae
ljmp
jmp
lock
lcall
sbb
add
add
add
mov
push
push
cmp
pop
mov
rcrl
jne
and
jmp
mov
sub
mov
xchg
sarb
sub
or
sbbl
outsl
andl
xor
cmp
cmp
mov
mov
jecxz
in
mov
lret
loopne
lock
xchg
xor
je
add
add
add
adc
xor
or
dec
and
inc
push
inc
jne
popf
sarb
add
mov
sub
mov
xchg
or
push
mov
sarb
out
fmul
pop
sbb
jne
push
xchg
test
and
in
sbb
sub
dec
cmp
add
add
add
add
mov
stc
xchg
sub
test
neg
or
or
xchg
mov
sti
fisubrs
mov
add
jmp
aaa
jne
push
sarl
push
mov
orl
test
int3
mov
fimull
sahf
pop
xchg
add
lds
aaa
push
add
inc
insb
adc
cmp
cltd
xor
add
add
cmp
aaa
cmc
or
adc
cmpb
out
inc
xor
and
fistl
cmp
loop
dec
gs
sub
sbb
stos
push
inc
test
aam
and
sarl
aad
addr16
jne
sbb
jmp
into
fwait
stos
test
test
pop
xchg
mov
push
pop
xchg
pop
and
add
add
add
leave
jecxz
addl
add
test
push
enter
pop
sub
cmp
ljmp
xchg
push
movsb
insb
aad
and
sub
add
and
and
notb
xor
and
fdivr
sbb
pop
ljmp
aam
lock
cmp
je
sbb
xor
sbb
add
add
add
add
fwait
jp
shld
test
test
je
adc
call
adcl
jne
push
add
or
jae
jp
mov
xor
jnp
jb
add
lahf
lock
mov
jne
stos
lods
stc
and
mov
jns
mov
repz
or
jmp
add
add
pushf
mov
test
mov
sub
and
pop
lret
test
add
sub
jbe
test
pop
repz
xchg
movsb
inc
insl
mov
je
mov
lcall
sarl
mov
stc
pop
ret
push
push
sbb
test
add
add
add
shlb
nop
xchg
and
inc
shll
cmovl
and
rcrl
xchg
pop
pop
cmp
aad
shl
pusha
test
cmp
push
cmp
pop
addl
lds
xchg
scas
shll
repnz
lret
adc
adc
xchg
add
rcrl
shr
add
add
add
xor
mov
xchg
fmulp
add
cmp
and
add
xor
jecxz
fs
sub
mov
and
iret
cmp
fstl
jmp
mov
xchg
push
movsb
insb
pop
adc
sub
sub
and
test
mov
shlb
mov
scas
rolb
and
add
add
jecxz
xchg
lahf
adc
add
arpl
lahf
push
or
inc
ss
xlat
icebp
mov
call
test
lahf
add
xor
xor
rorb
dec
test
out
pop
cmp
shlb
mov
and
mov
sbb
add
add
loop
add
push
loop
and
xor
mov
add
xor
mov
or
dec
popf
push
pop
sarb
push
clc
add
pop
sahf
mov
and
xchg
sub
mov
or
pop
add
and
ja
sub
je
sub
and
add
add
add
bound
sbb
push
mov
push
sub
add
loopne
dec
in
mov
push
xchg
movsl
mov
into
lds
stc
or
imul
lods
mov
addl
xchg
push
loope
jecxz
ja
ja
cmc
stos
call
aas
lret
add
mov
add
add
xlat
sbb
ret
std
inc
xchg
mov
lds
mov
movsl
stos
cwtl
push
flds
fnstcw
lret
add
mov
test
xchg
mov
das
outsl
jg
lds
cmp
jl
xchg
dec
aad
in
mov
jle
add
lods
adc
idivb
sbb
jnp
inc
xchg
inc
add
add
add
push
sbb
add
dec
fmuls
nop
dec
mov
rcll
sahf
mov
xchg
lods
clc
pop
into
loop
xchg
in
pop
cmp
lahf
mov
pop
jmp
cmp
mov
mov
fisubrl
xor
add
and
push
mov
or
xchg
push
lods
sbb
mov
cmp
push
popl
ret
xchg
push
movsb
cli
add
add
add
pop
sub
icebp
mov
push
jmp
in
sub
xchg
jo
stc
inc
lahf
add
pop
xor
insl
je
push
popa
sbb
andl
mov
mov
push
xchg
push
arpl
add
pop
xor
push
xchg
lea
je
mov
and
xlat
xor
mov
mov
push
xchg
push
add
push
cmpsl
lcall
add
aaa
and
mov
xchg
mov
cli
iret
pop
fstpt
or
xor
in
sub
aas
aad
or
jae
bound
add
add
sub
push
imul
adc
mov
bnd
xchg
repz
scas
pop
pop
push
loope
xchg
sti
pop
in
add
add
add
or
fisttpl
sbb
jo
sahf
cli
das
test
add
adc
push
hlt
pop
in
or
fisttpl
in
jo
data16
test
test
inc
push
dec
jge
push
push
mov
out
xlat
push
jl
pop
fildl
rolb
xorl
lret
add
cmp
mov
xchg
into
jp
int
nop
dec
push
add
add
add
add
movl
add
test
pop
int3
add
xchg
push
sub
adc
insl
sti
lret
js
fnstenv
insl
divl
jp
jmp
jg
sbb
jnp
xchg
out
fbstp
mov
pop
jp
mov
sub
mov
pushf
pushf
mov
add
add
add
lcall
pusha
leave
pop
adc
sub
xchg
adcl
sbbb
sub
sub
fnstenv
jo
jmp
insb
es
sub
pop
sbb
jmp
mov
aad
inc
test
add
leave
out
adcl
movsl
inc
std
jo
add
add
add
pop
or
jmp
push
lea
xchg
jg
fwait
jmp
pop
cld
mov
add
cmc
lret
ret
imull
mov
and
jl
add
pushf
xor
push
arpl
adc
imul
rolb
jne
test
faddl
push
xor
call
add
mov
pop
test
xchg
jmp
add
add
add
test
incl
adc
pop
xchg
cmpl
and
cmpsb
pop
dec
lods
stos
dec
inc
jne
jno
mov
fdivrs
push
and
or
and
dec
xorb
pop
push
or
dec
or
xor
jb
add
movsl
sub
adc
cmp
add
add
add
mov
ljmp
sbbl
nop
sahf
and
lret
adc
int3
pop
xchg
or
lret
sbb
pop
lret
lods
lret
add
cmp
pop
xor
in
sub
cld
xchg
das
jne
daa
adc
sti
mov
adc
fbstp
mov
int3
mov
add
add
add
xchg
push
jge
push
jecxz
xchg
or
pop
or
xlat
in
add
enter
jns
push
or
out
xchg
loop
or
adc
mull
notb
jne
out
fisttpll
repz
dec
lods
test
sub
xor
int
or
aaa
xchg
and
jmp
add
add
add
or
jmp
push
push
and
xchg
test
cmpsb
das
dec
dec
les
xchg
sbb
jmp
cli
sahf
push
xchg
pop
and
xchg
mov
insb
bound
and
mov
mov
sub
popf
or
or
or
test
stos
movsb
int3
pop
jecxz
add
popf
inc
addb
add
add
dec
sub
xorl
jnp
popf
jno
xchg
jmp
mov
jl
and
xchg
je
pushf
xchg
cmp
movsb
xor
lret
nop
out
lahf
test
jne
jnp
and
jnp
inc
jno
add
inc
add
test
dec
test
adc
mov
addr16
rcrb
add
add
cmp
or
test
pushl
jnp
and
loop
pop
mov
mov
leave
stos
fldcw
and
sbb
mov
xchg
sahf
mov
jae
imul
je
imul
test
ret
rcrb
stos
lcall
nop
mov
adc
and
leave
pusha
add
add
add
add
lahf
stos
inc
mov
enter
mov
sbb
lret
fildll
sub
sahf
cmp
jle
cwtl
xchg
call
mov
das
aaa
or
out
inc
mov
add
repnz
add
popf
add
pop
xchg
cld
in
push
cwtl
dec
or
add
mov
inc
push
insl
out
push
add
add
add
add
pop
cld
mov
mov
fisttpl
rorb
pop
movsl
adc
fcomip
or
inc
push
push
push
adc
jecxz
mov
and
test
xor
jne
push
inc
mov
and
decl
shll
sti
sahf
mov
jns
int3
jl
aad
push
push
and
int3
sti
test
or
add
add
add
outsb
loope
xor
loope
cmp
aad
push
push
push
ret
sub
jge
lds
dec
jmp
sbb
aad
sar
lahf
push
xchg
pop
and
sbb
add
push
nop
pop
repnz
add
and
faddl
inc
aas
add
mov
jp
add
cmp
lea
xlat
mov
add
add
pop
dec
call
imul
jo
sahf
je
fdivs
mov
je
cmp
jae
xlat
nop
dec
push
call
scas
fdivl
jae
cmp
or
call
add
inc
insl
push
adc
cmp
and
ds
adc
imul
add
mov
add
add
cmp
and
shr
push
push
adc
mov
lods
sbb
scas
push
loope
cs
outsl
or
jle
sub
mov
mov
cmp
les
lods
pop
dec
dec
cmpsb
cmp
add
sub
stc
test
aas
xchg
sbb
sub
adc
sub
pusha
stc
or
add
add
add
lods
sar
notb
or
sahf
stos
inc
into
and
push
mov
xor
dec
fisttpl
aaa
pop
jno
mov
sahf
mov
test
aas
les
add
ret
lods
clc
push
dec
popf
xchg
or
xchg
or
xchg
fistl
or
xchg
fists
icebp
lret
lcall
jg
mov
add
add
add
xchg
les
pop
inc
dec
jne
xchg
stos
outsb
xorb
adc
dec
xchg
jle
stc
ret
mulb
jle
inc
xchg
and
push
movsb
insl
ljmp
add
xchg
xor
push
loope
adc
test
add
sub
loope
push
je
incb
push
or
lret
push
psubusb
je
test
add
add
test
cmc
gs
cmpsb
in
fs
daa
addb
push
adc
popf
mov
push
or
rcl
sahf
pop
js
test
popf
out
and
subb
sub
adc
mov
push
popf
pop
lock
je
cmp
out
jne
call
or
add
inc
xor
enter
add
add
add
les
and
cmp
ss
leave
cmp
lret
and
cmp
mov
add
lahf
jl
jne
jmp
stos
mov
ss
repnz
loopne
add
outsl
add
out
add
mov
aaa
cmp
test
mov
sub
jne
in
or
sub
sarl
add
add
xchg
outsb
add
out
mov
adc
popf
ds
into
arpl
popf
dec
insl
adc
inc
jne
pop
add
mov
test
sbb
push
xchg
test
or
and
adc
dec
jecxz
imul
jge
add
test
mov
xchg
outsb
mov
std
adc
push
outsb
adc
add
xchg
pop
cwtl
xchg
inc
stos
or
lret
stos
xor
out
out
or
out
int3
mov
outsb
push
fadds
cmp
push
dec
iret
add
pop
mov
cmp
inc
fsubl
xchg
pop
lret
sub
das
dec
inc
xchg
mov
sarb
clc
sbb
sub
mov
dec
pop
or
add
add
add
or
in
push
or
add
pop
push
icebp
ficoms
and
xchg
xchg
ficoms
fsubrs
mov
cld
inc
pop
pop
pushf
fsts
lahf
sub
pop
jno
loope
xor
xchg
orb
popa
aad
or
fs
xchg
mov
mov
mov
dec
sti
and
lock
adc
add
add
add
orb
stos
pop
jno
cmp
ds
or
and
dec
inc
and
sbb
add
add
sahf
jle
xchg
je
xchg
push
add
adc
and
xor
je
popa
fcoml
jae
mov
in
insl
jne
into
loopne
imul
add
add
add
add
je
fistl
and
jnp
test
ret
jb
sub
and
into
lret
and
jge
and
call
repz
jecxz
int3
mov
lods
std
out
push
xchg
xor
sbb
scas
and
mov
imul
add
sub
add
mov
hlt
mov
add
pop
jmp
je
cmc
adc
add
adc
fwait
cmc
gs
movl
aam
cmp
adc
loop
push
xor
bound
sbb
pop
adc
and
mov
gs
pop
mov
mov
stc
fdivl
negl
sub
sub
scas
stc
adc
or
lea
test
inc
aaa
or
add
add
add
and
pop
into
outsb
test
sbb
xchg
icebp
push
pop
inc
ret
test
adc
outsl
int
call
jns
out
adc
jg
repz
jg
sbb
in
xchg
fs
loop
adc
std
xor
inc
sti
add
filds
gs
mov
jecxz
lock
stc
mov
add
jle
xchg
add
add
add
xchg
lret
mov
inc
adc
das
cwtl
call
fucomp
pop
mov
jp
fs
leave
pop
andb
les
xchg
and
int3
sti
push
pop
stos
sub
pusha
shlb
sbb
jo
cmp
rorl
and
fiadds
lret
popa
mov
aad
sar
and
test
add
sbb
aam
mov
out
ret
and
int3
push
pop
jle
arpl
js
push
fisubrl
adc
mov
add
cmp
push
cmp
sub
adc
sbb
push
inc
sub
aam
aas
test
int3
jp
and
cld
add
add
lahf
push
and
je
and
lret
mov
add
add
add
cwtl
xor
ljmp
mov
add
xor
aad
test
mov
and
and
xor
push
in
insb
cwtl
adc
ret
xchg
xchg
outsb
popf
shl
aaa
add
test
out
fcos
inc
scas
mov
inc
clc
and
ss
adc
outsb
mov
stc
push
out
cmpsb
mov
add
add
add
negl
xchg
mov
popa
add
sub
push
or
mov
loop
outsb
and
push
fists
push
adc
stc
mov
ficoml
adc
and
adc
pop
lret
test
andl
xchg
jmp
mov
nop
adc
sti
push
ret
cmpsb
filds
sbb
nop
int3
jl
or
mov
xor
add
add
add
push
loop
cld
inc
dec
jg
pop
lret
add
and
pop
nop
loope
or
pop
jmp
repz
jge
mov
fwait
dec
pop
es
adc
pop
scas
inc
xor
into
inc
dec
jg
pop
lret
pop
xchg
pop
lret
fwait
cli
shr
loope
mov
or
cmp
inc
mov
nop
inc
nop
and
sub
xchg
daa
add
add
add
pop
test
sti
sbb
jnp
sahf
push
or
jb
jo
loop
pop
cmpsl
and
fsubrs
jmp
sti
mov
scas
je
loop
xchg
sub
push
call
test
aad
pop
pop
jnp
jb
jo
repnz
pop
test
aad
daa
negb
std
cmp
test
adc
add
add
adc
out
aad
xor
inc
mov
pop
cmpsb
mov
lahf
je
jp
mov
cs
repz
adc
add
fistl
mov
mov
out
lods
mov
push
pop
push
and
sub
add
cld
movl
leave
xor
add
push
push
add
add
add
jae
xor
clc
add
add
add
pop
mov
sub
mov
push
sbb
sub
dec
pop
pop
pop
jne
loopne
add
outsb
and
jp
pop
inc
lea
cmpsl
jae
cmc
xchg
xchg
dec
leave
out
fsubs
mov
inc
movsb
loopne
out
and
in
cmpsl
add
jbe
enter
ljmp
outsl
sahf
rolb
add
add
popf
or
test
jmp
add
in
cmpsl
jg
pop
inc
mov
in
mov
lods
rorl
cld
das
pop
or
leave
mov
test
pop
repz
push
lret
add
pop
pop
in
addb
pop
rol
add
cli
sarb
and
xchg
sub
add
add
add
lret
out
outsl
mov
xchg
inc
jns
and
xchg
xchg
xchg
or
xchg
xrelease
cmovp
mov
add
add
outsb
add
xchg
pop
dec
dec
sbb
lret
add
repz
jecxz
inc
jno
popf
and
pop
mov
cmp
dec
int3
ja
ja
arpl
and
jmp
add
cmpl
mov
jmp
lret
andl
je
out
mov
adc
mov
stos
cltd
shlb
jb
pop
fsubrp
xchg
outsb
lods
jmp
std
sbbl
pop
and
lret
mov
push
jmp
mov
xchg
pop
and
orl
pop
add
add
add
mov
repz
test
push
pop
inc
mov
outsl
mov
addr16
icebp
pop
sbb
add
push
add
repnz
pop
cmc
pusha
or
push
jp
sbb
inc
pop
jne
adcl
mov
jo
jle
sbb
add
or
and
aam
mov
jp
add
add
add
jae
jns
fmull
jno
pushf
enter
jae
xchg
pop
push
inc
inc
add
roll
jmp
pusha
rorb
pop
stc
and
pushl
call
ret
icebp
dec
adc
test
push
xor
adc
rolb
jmp
pop
lret
add
outsb
cli
cltd
call
or
stos
pop
out
sub
inc
add
add
add
ds
sarb
xor
mov
mov
jb
stc
push
jge
and
lea
push
daa
in
jle
mov
stc
clc
and
das
loope
push
clc
push
das
mov
push
mov
lret
lcall
jge
mov
pop
lcall
iret
xor
add
add
jbe
xchg
pop
lret
jl
xlat
mov
jl
mov
adc
add
bound
or
clc
shll
divl
pop
or
lret
add
addb
or
and
xchg
repnz
jno
pop
and
sbb
mov
dec
repz
je
lods
fisubrs
test
or
add
leave
jmp
sbb
pusha
outsb
dec
push
adc
cld
or
call
adc
enter
xor
and
jle
int
ret
jb
shrl
cmp
mov
ja
pushw
out
add
aad
adc
xlat
js
add
aam
inc
out
sti
test
mov
add
add
add
xchg
adc
pop
mov
imul
bound
or
mov
ja
or
test
call
add
cld
ret
add
int3
xchg
jae
fisttpl
notb
push
or
mov
add
aas
and
sub
lahf
lret
adc
pop
std
mov
and
push
cs
push
add
add
add
xchg
fldenv
xchg
pusha
and
xor
jge
arpl
dec
inc
cmc
scas
push
out
je
xchg
pusha
pop
dec
inc
or
cmp
or
or
es
mov
pusha
sub
in
stc
cmpsb
jmp
jae
pop
data16
xchg
pusha
and
mov
in
insl
loope
into
es
mov
maskmovq
negl
add
add
add
add
pop
in
adc
push
stc
pop
ret
pop
add
or
sub
les
pop
cmp
sbb
lret
add
jge
mov
add
fs
test
add
pop
leave
hlt
adc
test
aaa
or
push
lret
push
jns
or
adcb
inc
jle
movsb
push
lret
loop
add
add
add
hlt
test
addb
loope
add
xor
vmread
rcrb
addb
or
xchg
pop
dec
mov
xchg
dec
ljmp
dec
pop
adc
ja
pop
addr16
xor
outsb
aad
xchg
sti
lds
je
mov
jl
or
pop
aam
or
shlb
add
push
xlat
jb
jg
je
jg
int3
mov
outsb
aad
dec
sti
cmp
dec
fbld
lret
rcrl
and
ret
ror
pop
aad
adc
test
fists
jno
aaa
les
add
add
inc
adc
add
cs
call
clc
add
xor
mov
clc
or
add
add
daa
lahf
je
sti
push
cmp
lahf
subl
push
ret
call
xor
xchg
add
xchg
flds
add
jb
and
jb
push
roll
add
loop
jl
addb
add
dec
add
fstpt
stc
das
mov
add
hlt
and
xchg
stc
les
popf
jecxz
jp
add
add
add
jmp
mov
xchg
pusha
and
pop
and
daa
xor
pusha
xchg
dec
mov
pop
aam
add
pop
stos
nop
xchg
pusha
and
xchg
pusha
and
add
mov
push
mov
sti
push
or
std
in
fsubl
movsl
stc
data16
mov
ljmp
add
mov
pop
in
pop
xor
jbe
mov
pop
cmp
daa
movsl
xlat
push
inc
cmp
repnz
loope
jmp
mov
inc
push
cmp
sbbl
lock
ret
xchg
dec
xchg
insb
push
cmp
arpl
shl
sahf
adcl
add
inc
pop
dec
adc
cmpb
movb
add
add
and
outsl
lahf
adc
push
and
cmpsb
inc
add
cmp
stos
mov
jge
into
jne
xor
loope
xchg
andb
sbb
cmpsl
in
and
pusha
sbb
mov
xchg
pop
and
mov
aad
pop
add
pusha
sbb
in
adc
cwtl
xchg
adc
add
add
add
jne
stc
mov
sbb
xchg
fs
xchg
pop
test
mov
jae
out
or
pop
hlt
or
adc
xchg
test
add
icebp
pop
pop
repz
cmp
add
xchg
and
cmp
lcall
xor
jle
and
test
or
xor
add
add
add
add
push
sbb
add
xchg
mov
scas
jmp
arpl
adc
mov
call
xorb
sub
fidivl
jge
and
test
xchg
int
mov
and
pusha
repnz
les
mov
js
and
xchg
fsubs
add
push
sub
add
add
add
in
pop
and
sbb
mov
xchg
pusha
lods
into
mov
stos
xor
sub
call
sbb
add
call
icebp
add
adc
pop
stos
test
andb
into
mov
pop
xchg
shlb
xchg
out
pushf
xchg
pusha
and
pop
dec
cwtl
xchg
pop
lret
mov
and
roll
add
add
add
rolb
imul
testl
xchg
lds
inc
mov
add
pop
push
icebp
pop
lret
add
add
pop
movhps
push
popf
xor
lret
add
hlt
push
and
cmp
mov
jae
jecxz
push
mov
addb
test
cwtl
xchg
pop
lret
jl
fdiv
fbstp
testb
add
jb
lea
and
and
xor
jns
fldenv
aam
mov
push
fs
xchg
pop
test
cmpsl
or
test
xchg
sahf
mov
xchg
pop
mov
rorb
xor
xchg
hlt
sub
sub
and
xchg
hlt
and
pop
sub
add
add
test
sarl
aad
pop
das
js
xor
xor
cmc
mov
xchg
orb
and
lahf
inc
aam
popf
or
add
ljmp
xlat
push
mov
inc
xchg
adc
fdivl
lahf
icebp
push
or
ljmp
je
add
test
pusha
dec
aad
out
or
jmp
add
add
add
nop
push
adc
pusha
and
mov
stos
aam
inc
cmp
jno
ds
sahf
dec
cld
xchg
stos
sub
and
pop
xchg
and
mov
jo
add
fildll
mov
jo
add
aam
dec
ret
sub
add
jo
xchg
call
stos
movsb
add
add
add
xchg
jo
test
pop
or
pop
and
xchg
xchg
add
sahf
dec
jmp
in
test
pop
add
movsb
out
or
addl
jb
aam
jp
outsl
aam
sbb
mov
ret
fwait
xor
mov
jp
aad
imul
es
or
lahf
push
pop
mov
inc
mov
add
add
mov
pop
int3
out
xchg
nop
std
fildll
cmp
inc
add
pop
leave
out
xchg
nop
add
dec
or
jle
fcmovne
into
jecxz
test
lret
add
pop
mov
insb
ret
and
or
dec
jns
or
adcb
aam
jnp
lret
fs
fucomip
fucomp
shr
cli
and
add
add
add
push
adc
jmp
mov
pop
dec
jge
lret
mov
pop
das
lea
adc
adc
int3
sti
xchg
pop
and
jo
and
lret
gs
aad
xchg
mov
test
sbb
sbb
xchg
or
jmp
outsl
jb
daa
sub
mov
test
add
add
sub
testl
outsb
out
sub
jge
dec
or
jno
sub
push
pusha
or
mov
leave
jns
lods
pop
lahf
inc
int3
arpl
inc
hlt
xchg
adc
jb
jno
imul
cmp
or
push
adc
dec
sub
sbb
jne
pop
and
enter
and
int3
mov
add
add
add
fcmovu
pop
test
daa
add
lds
jbe
mov
mov
sbb
add
and
xchg
rcll
xchg
jo
and
pusha
push
test
or
rcll
pop
add
out
mov
pop
and
push
stos
jl
mov
and
sbb
aam
add
add
add
inc
outsl
dec
rcll
push
movsl
nop
jo
andl
popf
nop
jo
jge
pop
aam
mov
push
clc
out
or
stc
sbb
add
mov
adc
inc
xchg
in
adc
adc
or
or
push
adc
xchg
nop
xchg
mov
jg
lods
mov
and
xchg
sbb
sub
int
add
add
add
and
add
movl
dec
insl
adc
sbb
pop
and
pusha
fsubrp
xchg
mov
repz
cltd
mov
add
mov
mov
shlb
iret
into
pusha
and
mull
adc
dec
push
lahf
dec
xchg
pop
and
nop
mov
add
add
fldenv
add
and
mov
jmp
aad
cmp
ja
pop
aad
push
push
mov
bound
add
xchg
mov
bound
mov
pop
test
sub
and
or
in
mov
and
jmp
or
pop
pusha
xor
pop
add
xchg
mov
fcmovbe
mov
add
add
cmpsb
or
js
mov
mov
mov
adc
add
hlt
pushf
push
xchg
sbb
sub
add
aad
xor
mov
call
mov
shll
das
test
jno
mov
cs
jne
nop
in
outsl
fisubs
test
jb
lea
add
add
cmc
ret
dec
or
mov
add
aas
fdivr
pop
fstps
jmp
push
stc
push
and
mov
orb
push
mov
xchg
and
jb
stc
fisubrs
and
pop
xor
sahf
les
push
insb
icebp
clc
pushf
in
sub
xchg
cmpsl
flds
add
jbe
push
out
dec
sub
mov
cld
xchg
test
sub
cmp
dec
push
dec
lea
xor
movsb
inc
xchg
pop
sbb
mov
or
ret
je
in
into
fcomps
hlt
pop
adc
xchg
pop
rcr
push
mov
dec
lods
pop
add
sbbl
leave
xchg
mov
lods
xchg
shrl
ficomps
fdiv
notb
add
add
add
push
pop
inc
inc
inc
hlt
push
leave
xchg
pop
out
stos
mov
pop
inc
leave
xchg
mov
stos
xchg
jb
jle
add
inc
mov
xor
inc
push
push
ss
jle
add
xor
jo
mov
and
cmpsl
and
push
pushf
jno
pop
test
insb
xor
outsl
xchg
xchg
sub
add
faddl
jmp
out
add
add
add
mov
jmp
cmpsb
pop
aad
dec
shll
fldcw
add
leave
sub
cs
sub
mov
rcrb
push
pop
push
fstpt
dec
cmpsb
lds
mov
pop
dec
out
imul
xor
lea
das
jns
and
js
fcoml
scas
xor
dec
aad
add
add
add
ds
cmc
add
adc
fcoml
jbe
lahf
ret
mov
push
lahf
inc
in
ds
cmp
xlat
and
in
and
clc
xchg
aad
mov
jae
cltd
aas
stos
jle
fcoml
ja
sbb
adc
pop
pop
ror
arpl
mov
add
repz
and
mov
pop
cwtl
mov
add
add
add
scas
lock
jl
cs
xchg
jmp
jae
in
pusha
inc
mov
push
jnp
pop
cs
clc
pushf
xorb
xchg
jno
pop
mov
xor
pop
mov
pusha
push
shrl
ljmp
push
popf
cld
push
inc
inc
call
mov
jo
out
push
inc
stc
adc
or
std
inc
insl
or
add
add
add
xchg
test
in
je
xchg
mov
inc
fucom
sbb
mov
js
xchg
pop
out
mov
xor
add
mov
fisubrl
and
test
lret
lock
adc
or
push
ret
add
daa
sar
add
out
push
sbb
add
and
inc
dec
mov
add
add
addr16
or
ficomps
pop
xchg
mov
xchg
lret
add
fisttps
jb
xor
fstpl
sub
rorl
daa
sbb
mov
and
push
outsl
je
and
jmp
movsb
pop
je
fsts
mov
xor
jmp
xchg
aam
insb
mov
and
loope
pop
cmpsl
and
add
imul
test
insl
adc
jbe
test
ficoms
in
aam
bound
in
adc
jmp
pusha
inc
ds
outsl
bound
fidivrl
push
xchg
mov
push
sahf
or
add
and
ja
in
fildl
and
jmp
and
repnz
fildll
dec
push
sub
add
add
add
push
add
movb
jg
je
jnp,pt
je
sub
xor
cmp
push
or
push
and
test
fdivr
pop
inc
add
addl
clc
test
xor
inc
add
fldenv
loopne
stos
out
jmp
iret
mov
fbstp
xchg
in
pop
or
std
cmovno
into
sldt
add
add
mov
aam
inc
mov
or
and
mov
dec
stc
mov
mov
push
jecxz
mov
jnp
and
adc
push
adc
pop
sti
push
xchg
dec
vphaddubw
lcall
sub
xchg
inc
in
mov
shll
js
das
add
mov
movsb
inc
call
add
hlt
in
dec
stc
adc
or
pop
hlt
mov
jg,pn
pop
out
mov
inc
push
int3
jl
dec
inc
sarl
aaa
push
not
sbb
negb
and
or
xchg
jg
fcomi
jle
push
jecxz
jecxz
xchg
pop
push
dec
cmp
push
sbb
sbb
cltd
push
test
pusha
add
add
add
ja
xor
cmp
ret
out
or
les
pop
cli
push
inc
mov
aaa
sub
movsb
push
mov
lods
and
and
sub
fcomip
pop
inc
test
clc
mov
add
es
mov
leave
pop
fnstenv
bound
jmp
out
dec
aad
xchg
pop
arpl
ss
jne
dec
dec
loope
add
add
add
mov
and
mov
lods
scas
dec
rcr
in
neg
test
std
int3
sbb
xchg
or
bound
add
add
pop
in
mov
enter
mov
or
mov
mov
mov
sub
aad
add
xor
jmp
aam
cmp
pusha
or
add
add
add
or
js
mov
xor
and
inc
test
shlb
inc
push
mov
or
shrb
pusha
or
clc
mov
ret
jno
adc
aas
add
and
jne
mov
or
xor
add
mov
and
xchg
leave
bnd
push
lds
add
add
add
daa
clc
lahf
clc
mov
or
and
add
push
cmp
rorl
lods
int
xchg
pop
and
xchg
xor
adc
cwtl
repz
or
filds
aam
push
add
dec
or
cli
aad
cwtl
jns
jae
sub
faddl
pop
sti
popa
or
cli
pop
out
stc
pop
xlat
add
add
add
add
jle
pop
pop
sbb
or
mov
xchg
pop
mov
cmpsb
jle
sti
rorl
jae
push
pop
inc
cmp
inc
push
fwait
sti
or
inc
mov
inc
imul
loop
xlat
aam
mov
rolb
in
mov
loopne
pop
xor
add
xchg
ret
ss
pop
sub
jae
pop
das
daa
adc
dec
loopne
add
add
add
pop
js
push
mov
addr16
repz
inc
subb
bound
pop
lahf
mov
imul
xlat
sbb
in
rcrl
movsb
js
addr16
lds
test
icebp
sbb
xlat
mov
inc
push
in
sub
adc
in
mov
shrb
lea
jb
in
shrb
add
add
add
dec
adc
jnp
jecxz
shlb
and
clc
arpl
mov
mov
fs
jnp
cmpsl
ljmp
fildl
pusha
rcr
je
into
sub
in
and
push
sub
mov
sub
in
cmp
push
add
push
jae
fcoms
shl
mov
incl
add
add
add
inc
mov
push
push
jmp
or
loop
jmp
sub
iret
loope
sahf
lds
add
inc
mov
dec
ja
cwtl
into
shll
clc
int3
pop
and
rcl
je
sub
mov
pop
or
add
popa
rol
and
clc
ds
mov
in
jno
shrl
lds
jb
adc
pusha
out
add
add
add
popa
push
pop
jl
cs
stc
and
sub
clc
inc
mov
in
stc
loopne
adc
or
rcll
jbe
xor
ret
and
movsl
fmuls
sti
add
xchg
dec
fistpll
mov
cmp
inc
je
jmp
jle
jle
mov
xchg
test
enter
sldt
add
add
inc
dec
cmp
pop
fdivp
dec
lods
fistpll
mov
jo
pop
lahf
push
xchg
pop
push
inc
arpl
xchg
leave
jge
fstpl
sarl
arpl
mov
arpl
mov
into
mov
dec
and
push
rcl
dec
dec
js
dec
out
bound
out
pushf
push
pop
lret
add
pop
sub
dec
and
add
add
add
inc
pop
int3
ljmp
fmul
mov
jne
pop
lea
jmp
outsb
xchg
pop
jmp
xchg
andb
in
data16
in
push
xchg
xchg
mov
aad
comiss
mov
aaa
mov
adc
pusha
push
and
int3
nop
push
dec
aad
dec
lret
mov
jne
add
add
add
mov
add
mov
or
push
fstpt
idiv
inc
push
sub
cmp
call
add
imul
adc
fdivr
rol
dec
adc
ret
inc
xchg
int
popa
mov
call
push
mov
cmp
push
rolb
xchg
jo
or
jne
add
add
add
mov
lds
js
je
pop
pop
es
push
xor
push
sahf
out
adc
dec
aad
xchg
sahf
in
pop
ficoms
adc
into
pop
sbbl
pop
mov
inc
xor
adc
mulb
push
incb
stos
lret
rolb
rcll
mov
test
add
add
add
sbb
or
in
add
push
popa
pop
fsubs
mov
repnz
std
xchg
pop
jne
std
pop
call
add
jbe
insl
std
sub
out
and
or
jb
loop
dec
dec
out
push
aam
subl
es
pinsrw
or
nop
mov
add
add
add
movl
pop
lret
mov
sti
inc
push
and
add
pop
lret
inc
push
and
add
cmp
or
mov
jle
test
jl
pop
stos
dec
push
insb
fs
pop
or
jl
popa
mov
fmulp
dec
push
dec
xor
daa
add
mov
bound
or
push
sbbl
in
jle
or
add
cmp
loope
push
mov
clc
mov
rolb
lahf
xchg
xchg
pop
and
xchg
jle
int
mov
and
and
lahf
test
xchg
pop
test
mov
daa
test
ret
mov
pop
and
sbb
insb
sbb
and
jne
incl
ret
dec
fldcw
cld
add
add
add
or
incl
sub
je
pop
adc
adc
out
cmp
xlat
fwait
mov
fimull
cltd
jle
and
pop
fmull
sub
push
mov
add
addb
push
push
pop
stos
sahf
iret
adc
ljmp
pop
dec
and
xor
adc
add
add
add
fsubl
adc
mov
push
fcomps
inc
push
push
mov
in
push
filds
nop
adc
pusha
mov
push
in
and
js
mov
dec
js
inc
xor
and
out
xchg
test
jmp
xchg
or
out
popa
enter
jo
and
pop
xor
add
add
nop
aas
or
out
dec
or
pop
or
dec
jne
nop
gs
mov
add
nop
pop
or
out
sbb
in
push
sahf
xchg
std
cmp
pop
or
pop
or
out
loope
ret
pop
rsqrtps
rolb
jge
int
rorb
and
fadds
mov
dec
and
hlt
fcoml
add
add
add
cmpsb
xor
xchg
pop
push
inc
repz
lret
sbb
push
pop
mov
popl
lea
adc
cli
dec
mov
lds
mov
xchg
pop
pop
adc
inc
test
add
aad
mov
mov
mov
xlat
out
adc
and
xchg
jle
dec
push
inc
mov
fisttpll
pop
add
lret
inc
aad
add
add
add
or
xchg
cltd
mov
mov
cmpsb
push
jbe
jmp
mov
inc
aad
mov
mov
jb
cmp
jae
wbinvd
outsb
mov
int3
inc
popa
inc
aad
out
test
cmp
jbe
or
xchg
subb
push
pop
inc
jne
inc
test
mov
xchg
push
add
add
movsb
and
js
addr16
hlt
and
add
gs
fsubl
add
lahf
repnz
xchg
and
clc
xor
in
enter
scas
mov
lea
pop
leave
inc
bound
mov
jl
test
fdivl
jbe
push
cld
cld
xchg
sti
jmp
ja
pushl
call
add
add
add
xorl
sub
das
and
sbb
add
ret
xchg
and
jg
adcb
push
jmp
popf
xchg
lods
mov
add
loope
stc
or
test
add
xor
and
xor
add
pop
xchg
and
bound
sub
dec
cmpsl
fsubl
and
jp
add
add
add
lods
into
pop
add
test
jae
or
add
sbb
or
pop
add
inc
outsb
xchg
lcall
scas
pop
cwtl
push
pop
jmp
sub
mov
adc
jle
adc
sti
pop
roll
or
ficomps
cwtl
int3
mov
add
add
add
xor
in
jb
dec
shlb
push
arpl
roll
or
mov
push
adc
mov
scas
inc
push
mov
das
and
movsb
inc
aad
pop
fidivrs
push
xchg
jmp
or
pop
jno
hlt
xlat
cltd
cmp
and
push
mull
mov
jo
out
insb
add
add
add
ficoms
mov
jb
test
insb
pusha
inc
out
out
add
xchg
jmp
pop
test
in
in
and
rclb
lahf
out
pop
and
dec
out
je
out
jb
shll
cmp
xchg
add
add
pusha
and
mov
loopne
sub
or
cmp
or
add
add
add
sbbl
add
cmp
mov
add
add
sub
decl
xor
out
xchg
xor
mov
enter
fwait
int3
lret
mov
sub
lahf
adc
add
push
mov
jbe
push
xchg
inc
push
shlb
flds
add
add
add
pop
mov
mov
and
xor
add
lods
outsb
test
mov
and
push
add
leave
outsb
andl
in
dec
ret
xchg
movsb
aas
dec
shrl
dec
add
push
fidivrs
xchg
movsl
imul
push
mov
or
jmp
dec
adc
add
outsb
adc
cmp
fsubp
xchg
and
dec
lret
add
add
movl
dec
ljmp
dec
mov
mov
scas
mov
rclb
into
sbbl
dec
jmp
stos
iret
mov
xchg
es
es
lret
add
mov
pop
test
repnz
xchg
popf
stc
jmp
or
xor
jne
scas
xor
sbb
mov
xchg
jecxz
imul
push
add
add
add
or
out
testb
push
sbb
es
mov
xor
sub
inc
mov
jb
cmp
and
and
push
cmpsl
shr
pop
or
pushf
xchg
inc
xor
push
cmp
cli
lret
movsl
ficoms
mov
sub
fdivp
cmpsb
mov
lea
and
pop
int
dec
es
fcoms
call
loop
int
add
add
add
lods
adc
out
xchg
fnstcw
cmc
pop
and
shr
mov
cmpsl
mov
ror
xchg
movb
imul
xor
mov
andl
xchg
jo
sbb
jae
push
cmp
in
jl
aaa
mov
pop
and
jns
adc
je
mov
sbb
loopne
mov
mov
loope
testl
add
fnstcw
aad
push
aam
and
jnp
mov
add
aam
stc
repz
sbb
bound
fcmovu
lea
push
call
loopne
push
push
xlat
push
les
in
pop
mov
lea
push
xchg
push
es
sahf
rcrb
pop
pop
outsb
ja
add
add
add
ret
outsb
xchg
pop
enter
adc
nop
push
inc
mov
and
sbb
and
or
push
lret
std
cmp
test
and
or
push
lret
std
daa
jns
je
jle
push
push
sbb
pop
inc
lods
ss
pop
add
push
add
push
js
ds
mov
add
add
jae
xchg
pop
lret
jl
mov
daa
jne
fcoms
cmp
push
adc
mov
daa
mov
lret
add
lea
sub
subb
test
push
lret
add
push
in
addr16
ja
jb
mov
pop
hlt
fmuls
and
out
mov
add
add
add
lds
lcall
aam
sbb
int3
and
push
and
xchg
pop
jno
cmp
stc
out
mov
fucomi
inc
shrl
xchg
xchg
cmp
mov
orb
mov
cmp
test
jne
andb
xchg
xor
push
mov
add
add
add
inc
inc
mov
lods
outsb
pop
je
inc
xlat
aam
mov
mov
push
xlat
jae
push
mov
test
mov
loope
call
mov
fidivl
fcoml
mov
add
push
cmp
decl
jo
push
mov
cmpsb
cwtl
lret
mov
pop
mov
adc
add
add
bsr
enter
js
lahf
shll
mov
inc
jp
stos
inc
xchg
dec
mov
fsubrl
std
incl
lea
dec
call
ud0
addr16
xchg
adc
stc
test
out
popf
je
adc
cld
test
andl
pop
jl
add
mov
dec
push
stc
add
add
add
popf
or
clc
out
rolb
and
nop
xchg
clc
fbstp
pop
dec
scas
imul
mov
add
fisttpl
mov
shll
or
cmp
insl
xor
add
jmp
adcl
xchg
mov
and
lret
add
dec
rolb
add
add
jb
xor
call
jecxz
xchg
inc
push
das
cmp
js
mov
daa
mov
or
add
add
sub
add
mov
sub
cmp
adc
xchg
add
das
sub
inc
add
cmp
js
jecxz
fldcw
jecxz
pop
mov
mov
add
add
or
sbb
xor
push
fwait
and
xchg
in
mov
mov
xchg
mov
ds
pop
sahf
lds
test
xor
in
jo
add
and
xchg
mov
cmp
mov
cltd
pop
sub
xor
cld
aas
call
test
jno
outsl
insb
add
outsl
xor
add
add
add
pop
and
pop
xor
pop
mov
mov
mov
sbb
pushl
jl
jmp
xchg
jne
mov
and
rcr
pop
xchg
mov
push
dec
dec
mov
mov
rcrl
cmp
les
or
ror
add
mov
mov
lret
mov
add
add
inc
loop
jge
sub
jnp
lea
add
or
out
push
and
std
inc
loopne
xor
fidivl
fcoml
xchg
jae
adc
fcompp
mov
lods
imul
xchg
pop
push
lods
ds
xchg
push
and
mov
fwait
xor
adc
cmp
jmp
add
add
add
mov
lret
pop
das
movl
mov
inc
add
insl
imul
adc
add
add
xchg
outsb
cmc
mov
rolb
mov
call
pop
jae
dec
xor
ja
jmp
mov
mov
push
sbb
pop
add
xor
inc
in
std
inc
add
add
add
or
repz
xor
mov
pop
int3
mov
jb
and
xchg
xor
cmpsb
leave
rclb
jb
sbb
xor
cld
adc
xor
adc
divl
lret
inc
cltd
pop
sbb
test
mov
dec
cli
cmp
jbe
frstor
daa
jle
xchg
mov
add
add
add
xchg
pop
and
lret
dec
pop
xlat
repz
and
fisubrl
rcl
aad
and
cmp
xor
jmp
bound
aad
lds
lahf
lds
aad
rolb
mov
push
xor
jmp
push
jp
jmp
gs
or
xor
call
push
xor
cmp
add
add
add
mov
dec
mov
add
cmp
push
cmp
in
test
cmp
mov
repz
mov
scas
pusha
hlt
push
jbe
adc
jmp
daa
lea
push
and
test
dec
movsl
mov
int
inc
sub
pusha
rcrb
leave
pushf
inc
aam
pusha
call
add
jno
stc
lea
aas
jbe
dec
sbb
pusha
fdiv
add
cmc
add
add
inc
dec
pop
and
fucomp
pop
stc
orb
dec
sbb
jo
shll
out
xchg
fdivrs
ljmp
add
lea
jns
clc
pop
movsb
push
and
pop
and
loopne
xor
add
add
add
loop
test
ffree
and
xchg
sahf
js
add
pop
jge
sub
adc
and
or
iret
or
and
adc
add
notb
push
push
push
pop
call
push
mov
add
jmp
stos
mov
adc
addb
pop
xlat
das
inc
andb
sahf
mov
cmc
adc
add
jmp
mov
add
add
add
ret
push
adc
xor
jg
add
data16
js
jmp
jbe
jmp
js
aad
mov
mov
pop
cmp
cmpsb
jle
add
es
js
jmp
ja
jmp
jns
aad
scas
mov
cmp
mov
xchg
iret
mov
and
dec
rcrb
push
sahf
sbb
jecxz
in
test
xchg
pop
test
add
add
cmpsb
sbb
loopne
and
jb
je
jecxz
sahf
sub
pop
test
xchg
xchg
mov
jae
and
sahf
sub
xor
lods
scas
out
mov
fildll
jne
xlat
jae
loopne
sahf
sub
pop
test
xor
mov
or
sarl
add
add
add
xchg
sub
aaa
lock
mov
jge
and
jge
aaa
in
int3
mov
mov
or
mov
inc
push
jno
dec
fdivl
leave
xor
mov
add
jmp
push
add
or
mov
sbb
leave
push
or
mov
rcrb
sti
mov
fimull
add
nop
or
sbb
fstl
or
dec
cmp
push
cld
sub
les
sbb
je
inc
lods
push
popf
shlb
sbb
and
test
inc
jne
xor
in
pop
or
or
sahf
mov
movsl
inc
mov
bound
cmpsb
or
cmc
out
pop
sbb
xor
add
add
add
mov
or
pop
mov
jle
add
mov
aas
sbb
adc
pop
push
or
sub
sbb
les
in
add
dec
call
mov
cmp
or
push
sbb
mov
sti
or
cmovb
jb
sbb
or
ficoms
inc
cmp
push
cmp
add
add
add
test
shrb
inc
sbb
fdiv
inc
inc
push
xchg
pop
or
or
push
lret
add
xchg
into
ret
dec
fsts
ds
push
cmp
xor
xor
and
xchg
movsl
push
je
push
jnp
mov
aam
pop
fmul
nop
adc
and
stos
pop
imul
and
iret
push
jae
push
fldcw
add
add
inc
and
jmp
push
mov
lahf
test
xchg
pop
cmpsl
je
xor
push
or
push
mov
xor
loope
mov
je
mov
jae
pop
dec
and
jmp
mov
push
decl
adc
add
pop
lahf
inc
call
add
add
add
gs
cwtl
ljmp
clc
push
and
jmp
cwtl
mov
push
sub
jmp
xor
sub
jg
jle
jge
hlt
sbb
bound
cmp
xchg
pop
jmp
leave
fs
and
jo
lcall
cli
mov
inc
xchg
mov
add
add
aas
stc
adc
ss
dec
or
popf
inc
mov
or
out
push
and
add
popf
rolb
aas
inc
xchg
fwait
repz
xchg
jecxz
fiadds
fxam
fwait
add
push
bound
sub
sbb
sub
dec
mov
sub
loopne
stos
inc
test
or
xor
add
push
xor
test
imulb
adc
cltd
or
lea
loope
fwait
test
sub
das
ds
mov
dec
inc
mov
cmp
mov
mov
sub
cs
jmp
sbb
sub
pop
xchg
cmp
enter
mov
jl
fcomip
adcb
add
or
mov
and
je
add
movl
push
pop
and
jae
dec
loope
imul
test
xchg
decl
pop
insb
mov
shll
mov
bound
pop
push
loop
jmp
inc
outsl
inc
add
stos
fildl
and
dec
mov
add
add
add
inc
hlt
ljmp
aas
loop
lcall
nop
stos
in
sbb
movsb
mov
inc
jne
add
and
mov
insl
add
nop
or
repz
negb
pop
mov
nop
cld
push
std
cmp
mov
push
add
add
add
daa
std
jg
call
or
pushf
xchg
loop
cmp
mull
cld
mov
outsl
push
arpl
loop
out
loope
mov
dec
aad
cmpsl
adc
adc
jb
mov
inc
add
fsubp
xor
mov
test
and
xchg
xor
mov
mov
add
add
add
push
and
xchg
mov
add
sub
adc
inc
loope
adc
and
sar
movsb
nop
xor
xchg
mov
lcall
test
mov
pop
xchg
in
stc
pop
sbb
adc
inc
loope
adc
daa
add
mov
add
das
sbb
movsb
pushf
jne
and
xchg
lock
xor
xchg
inc
push
or
add
add
add
pop
inc
xor
pop
mov
mov
adcl
adc
add
scas
xchg
mov
insl
add
pop
mov
icebp
lret
jmp
add
pop
subl
inc
sbb
orl
mov
or
into
sarb
lcall
xchg
pop
sbb
add
xchg
xchg
pop
loopne
mov
movl
lret
add
and
push
sahf
insb
enter
xchg
and
or
mov
mov
mov
xchg
pusha
or
outsb
in
jae
push
call
and
xchg
in
in
pop
aad
xchg
pop
sbb
dec
call
call
add
pop
lret
decl
fstpl
das
cmp
es
pop
inc
adcb
dec
shlb
gs
pop
sub
lds
mov
aad
lea
gs
and
and
push
pop
sarb
inc
xchg
pushl
es
jmp
pushl
imul
jo
in
sbb
sub
add
cmp
push
or
jb
test
cld
dec
push
pop
dec
aad
adc
xlat
imul
je
fimull
add
cwtl
aas
jmp
jo
cmpsb
adc
adc
xchg
lods
pop
jmp
pop
stos
lret
or
pop
out
adc
jle
or
add
pop
stos
pop
add
add
add
mov
hlt
push
sbb
adc
push
add
clc
in
aad
xor
mov
adcl
lea
adc
xor
daa
adc
pop
stc
movsb
test
inc
xchg
movsl
sbb
xchg
xor
jge
or
jmp
mov
iret
fcmovnb
and
push
fmuls
mov
lret
push
lret
add
scas
ja
add
add
add
jb
cmp
xchg
test
mov
mov
jnp
lret
pushf
orb
pushf
int
imul
or
cmp
and
sub
fistpll
mov
rorl
sti
cmpsb
or
mov
dec
inc
test
add
inc
stc
ja
xor
add
add
add
push
int3
sub
and
jge
cmp
jl
into
sbb
sti
clc
aam
mov
mov
mov
mov
lea
and
nop
rorb
sub
aad
push
pop
push
add
insl
pop
das
movsl
add
bound
mov
xchg
pop
insl
xchg
xchg
mull
jmp
adc
and
mov
add
add
xchg
mov
insb
les
sbb
out
sti
loope
push
or
add
aad
call
daa
and
sbb
push
fdivl
fidivl
mov
call
daa
and
add
mov
add
and
cmp
push
pop
dec
fcoml
in
lret
add
add
add
mov
add
inc
pop
add
sbb
mov
subb
aad
cmp
cmc
dec
fcoml
pop
lahf
out
jne
sahf
addr16
sti
daa
xchg
xchg
xor
in
aad
pop
or
repz
in
adc
mov
push
cwtd
push
test
push
data16
test
hlt
stc
jg
mov
test
pushf
add
data16
add
add
add
xchg
mov
cmc
jle
mov
imull
xor
jne
lds
sub
stos
jle
jae
test
in
dec
loop
lcall
movsb
pop
je
loope
test
or
daa
cmpsb
adc
cmp
cmpsb
pop
mov
rolb
mov
out
or
add
repz
push
pop
inc
sub
push
setl
add
add
add
xor
jge
scas
sbb
clc
or
das
dec
and
pop
lret
popf
mov
ret
lret
lahf
fadd
outsb
xchg
jnp
arpl
adc
mov
xor
nop
cmpsl
out
sbb
mov
in
lret
add
ficoms
or
sbb
mulb
test
insb
out
cmpsb
pop
xor
add
add
add
lea
jp
mov
fwait
rorl
dec
jmp
ds
imull
inc
das
sub
pop
das
pop
jg
and
xchg
dec
mov
rcr
sub
fxch
sbb
push
aad
movsl
mov
fldl
pop
push
adc
lahf
hlt
cmc
insb
cmpsb
inc
das
test
pop
push
test
xchg
add
add
add
addb
loopne
push
int3
add
dec
fidivrs
mov
faddp
faddl
addl
mov
xor
adc
push
add
xor
push
pmaddwd
adc
test
adc
sti
out
dec
jne
pushf
addr16
sub
enter
decl
add
add
loopne
inc
fldl
push
sub
adc
fldl
adc
add
inc
cmp
add
or
sarb
or
mov
adc
mov
or
lret
nop/reserved
pop
ret
pop
lret
cmp
sbb
call
push
or
dec
pop
fldz
sub
fnsave
test
add
add
add
lock
test
std
pop
rorl
jp
pop
add
stos
rcr
cli
add
pop
ret
jge
add
mov
call
jge
push
xor
push
roll
lret
jp
test
mov
push
sbb
ret
push
mov
sbb
mov
sub
and
pop
dec
add
mov
sbb
add
add
add
clc
mov
push
inc
mov
add
mov
repz
xchg
out
pop
fsubp
bsf
or
pop
and
js
rclb
roll
push
sbb
dec
xor
inc
lret
dec
sbb
or
and
cs
jmp
pop
aad
jle
fs
xor
aad
add
add
add
mov
pushl
sbb
jmp
fstps
es
and
loope
lahf
mov
nop
adc
mov
sub
mov
jl
pusha
lds
in
push
inc
and
xchg
push
push
int
mov
and
lods
hlt
xlat
fcoms
stos
popa
push
push
and
jmp
fmuls
add
mov
add
add
ret
lret
jb
pop
fs
inc
sub
and
cmp
sub
inc
aad
jmp
fstpl
inc
call
inc
aad
pop
sahf
xor
aad
repz
and
call
and
test
cwtl
addr16
cwtl
das
mov
add
sub
pop
lahf
dec
and
jg
je
nop
pop
and
xchg
pop
mov
add
scas
in
and
xchg
push
and
nop
push
and
cmp
test
leave
cltd
stc
dec
into
pop
dec
insl
add
int
xchg
sbb
or
cwtl
xchg
and
sbb
popf
inc
sub
or
lods
sub
or
pop
or
xor
loopne
mov
cld
dec
cmp
xor
mov
and
or
add
xor
adc
stc
mov
push
lret
sub
xchg
jmp
dec
xchg
pop
lret
add
mov
adc
sahf
into
jle
push
clc
sete
lret
testl
push
push
iret
add
pop
push
ret
mov
jnp
movlhps
jle
negl
js
add
add
xchg
pop
mov
testl
pop
dec
inc
cmp
out
lret
pop
arpl
scas
adc
mov
dec
sti
or
or
adc
mov
inc
in
and
xchg
xchg
flds
insl
mov
stos
mov
das
cmc
cmpsl
and
add
pushf
loope
pop
and
mov
add
add
add
push
fs
loop
aam
cs
arpl
adc
insl
fwait
pop
and
or
jl
hlt
sub
xor
jmp
and
xchg
ljmp
out
xor
out
das
call
out
aaa
xor
fildll
add
insl
xor
sub
sub
push
adcl
push
xor
fs
add
add
add
inc
push
sarb
push
add
shll
pop
call
add
pop
je
push
push
xor
inc
add
push
add
xchg
daa
mov
inc
aam
popf
je
idivl
and
inc
add
sbb
inc
test
sahf
inc
xchg
imull
jmp
xor
xchg
jecxz
jne
push
out
add
adc
add
add
add
xchg
push
and
sbb
adc
stc
or
adc
and
jl
and
xchg
xchg
xchg
and
in
movsl
dec
int
xchg
and
test
or
and
add
push
cs
cmc
pop
es
pop
stos
and
clc
jl
and
xchg
popa
jmp
push
adc
shrl
dec
bound
insb
mov
repz
rcll
mov
pop
out
movsb
jg
add
add
add
add
out
mov
cmp
and
je
pop
repnz
and
mov
xchg
pop
data16
test
lret
icebp
gs
ljmp
sbb
add
lret
sbb
mov
xchg
pop
clc
or
add
pop
lret
add
pop
push
adc
ret
out
adc
push
shlb
repz
or
add
add
add
add
or
add
or
add
lcall
mov
in
or
decb
or
inc
and
sub
and
xchg
mov
jo
mov
fldl
mov
mov
pusha
adc
and
xchg
mov
pop
mov
add
add
xchg
shlb
mov
cltd
mov
xor
adc
jmp
aad
or
jmp
fisttps
das
gs
mov
xchg
pop
and
sarb
add
insb
daa
xor
into
mov
jecxz
mov
int3
fs
andb
lea
js
jecxz
pop
xchg
add
add
add
pop
push
sub
pop
add
insb
sbb
mov
pop
cmp
xchg
fsubs
mov
xor
vmovsd
adc
jae
add
dec
push
xchg
inc
jae
inc
cmp
cmp
insl
aad
mov
mov
mov
jmp
and
mov
push
xchg
cmp
call
popa
stc
roll
add
add
add
popa
test
jne
addr16
sbb
cmc
cltd
sub
and
or
mov
cmp
cmc
xchg
xor
jl
sbb
push
adc
or
and
add
filds
xchg
and
add
incl
xchg
and
add
add
add
add
xchg
and
xchg
pop
jno
outsl
pop
push
scas
into
mov
stc
stos
hlt
or
cmp
test
push
pop
call
data16
xchg
pop
lret
cwtl
xchg
mov
xor
fisttps
xor
lret
add
out
add
or
stos
add
pop
lock
cmpsl
jp
xchg
push
out
out
push
inc
loope
clc
add
pop
mov
cmpb
add
add
lods
fadd
mov
xchg
adc
mov
fs
pop
and
mov
aam
mov
aad
xchg
pop
and
inc
mov
mov
sub
aad
xchg
pop
and
pop
movsl
and
out
outsb
sahf
mov
sub
pop
mov
mov
leave
push
adc
pop
and
data16
add
add
pop
incl
stos
call
lds
cmp
push
aad
xchg
test
jae
mov
push
repz
out
pop
adc
add
jg
out
out
pop
or
mov
out
sub
and
lahf
out
ljmp
jmp
sub
shll
fdivr
out
mov
ljmp
add
add
add
add
movsl
sbb
mov
add
sub
or
imul
lds
cmp
and
fadds
and
mov
mov
add
or
test
mov
negb
stc
ja
bound
or
add
out
or
and
cmc
add
mov
cltd
push
add
add
add
sbb
lock
or
iret
test
cwtl
or
xchg
sar
cmpsb
sbb
lret
addr16
pusha
and
mov
in
lret
imul
stc
mov
or
xchg
out
nop
sub
xchg
jae
int
add
sbb
or
adc
cld
cmpsb
test
pop
and
or
lods
add
insl
mov
mov
xor
adc
add
add
cli
insl
inc
push
out
adc
ret
cli
mov
sahf
mov
or
add
pop
movl
subl
daa
leave
mov
repnz
xchg
popf
lret
sub
and
or
imul
mov
mov
into
pop
out
or
inc
inc
mov
xchg
jle
sub
add
add
add
xor
adc
dec
and
andb
or
out
movsb
dec
xor
fwait
mov
in
and
xor
xor
inc
add
jmp
xchg
pop
and
stc
mov
sbb
in
push
adc
sbb
pop
jbe
sbb
push
or
jne
and
rolb
test
add
add
sbb
xchg
add
adc
arpl
sbb
lods
mov
test
add
dec
out
addr16
arpl
shlb
aad
mov
cmp
adc
add
jle
call
andl
pop
daa
jb
mov
and
je
das
lret
je
repnz
and
add
add
add
add
and
loop
mov
ljmp
out
aam
js
push
setb
add
mov
fiaddl
imul
push
inc
pop
and
add
pushl
push
cmp
sbb
loope
or
pop
and
or
addr16
test
jge
inc
fisubs
mov
cmp
pop
dec
lods
lret
add
add
jmp
lds
xchg
movsl
fsubl
sub
jo
sbb
lret
arpl
lret
aaa
sarb
rorl
inc
mov
enter
dec
mov
test
jl
call
xchg
addr16
and
jmp
pop
jb
inc
lret
mov
stos
adc
lret
add
push
out
xchg
xchg
add
add
add
pop
push
inc
xor
incl
cmpb
add
nop
sbb
sub
add
leave
add
dec
ja
arpl
outsl
loopne
outsl
mov
or
push
lret
sbb
sub
mov
fiadds
jns
sbbb
mov
loopne
pop
aaa
cmc
jecxz
das
loopne
outsl
addr16
pop
xor
pop
push
and
cmpsl
sbb
stos
add
add
add
inc
jp
mov
ljmp
jmp
pop
aad
inc
cmpsl
movsl
ds
arpl
mov
pop
aad
jno
movsl
into
xor
pop
and
xchg
add
add
pop
fnstenv
pop
out
push
stos
xchg
mov
push
sub
mov
imul
jnp
lea
add
add
add
rcrb
mov
or
jmp
inc
int
inc
push
mov
push
cli
or
divb
add
inc
filds
mov
aam
xchg
mov
add
or
mov
or
call
dec
xchg
call
les
inc
clc
push
and
push
mov
test
xchg
or
add
insb
out
test
xchg
xor
add
mov
add
xchg
cmp
js
mov
mov
cs
add
loope
in
hlt
repz
and
mov
mov
ljmp
ds
je
imul
xchg
out
and
xchg
cmpsl
addr16
out
cmpsl
dec
lods
imulb
add
add
add
add
loopne,pn
cltd
out
cmp
and
ljmp
addr16
out
push
cmp
adc
pop
les
xchg
pop
shrb
and
js
xor
call
out
bound
pop
mov
sahf
push
or
stc
or
sti
mov
add
testl
add
fbld
aaa
or
add
add
add
xchg
sbb
test
std
mov
incl
add
jle
jnp
sbb
testl
xchg
jl
aam
pop
mov
pushf
aaa
dec
lret
sub
in
pop
jl
or
or
icebp
cli
adc
and
push
add
in
sub
jmp
mov
add
add
add
jecxz
push
ljmp
loope
inc
and
pusha
mov
lea
sahf
cmc
xchg
pop
and
push
mov
fs
jnp
lahf
xchg
mov
push
add
cltd
inc
xor
pusha
sbb
fcmove
push
xchg
scas
push
mov
cmpsl
push
pop
aad
cmp
fs
push
jnp
push
add
adc
dec
pop
lahf
push
dec
cmp
add
add
add
pop
call
fildl
mov
add
test
add
popf
inc
insb
insb
lods
imul
sub
sti
mov
in
sahf
sbb
mov
and
pop
or
jne
sbb
push
sbb
or
lock
sbb
mov
add
mov
push
adc
or
adc
add
cwtl
lock
xor
jmp
incl
jp
xchg
lods
iret
cmp
inc
fdivr
sbb
das
jae
mov
sub
movsb
lcall
sbb
das
stc
pop
jne
pop
mov
sar
in
or
inc
sti
fdivr
les
xor
popa
movsl
or
jecxz
stc
jl
aam
xchg
jne
pop
or
stos
lret
add
add
stc
fisubrl
stc
push
gs
pop
pop
sub
lcall
or
cmc
adc
test
mov
xchg
sub
lods
xchg
mov
hlt
vmread
pusha
or
push
dec
jb
jecxz
xchg
add
jg
jp
mov
inc
mov
movsl
mov
adc
cld
lods
mov
movsl
mov
push
loopne
pop
push
jb
inc
sub
add
add
add
cmp
sti
sub
inc
inc
cmp
mov
sub
cmp
xchg
out
sub
lret
xchg
mov
xchg
daa
mov
adc
mov
push
mov
or
and
mov
out
ljmp
dec
dec
into
mov
shll
inc
mov
aas
fs
add
add
add
mov
jo
sahf
out
negl
mov
and
jb
test
mov
sub
sub
sbb
push
addb
out
addl
lods
inc
sbb
inc
xlat
push
aad
ja
je
and
sub
jnp
in
test
add
xchg
mov
sbb
xor
and
add
add
add
sub
fidivs
shl
call
ret
add
sarb
and
out
and
xor
cltd
decb
sbb
and
fstl
xor
cli
add
cmpl
mov
add
into
mov
fadds
decl
lahf
inc
hlt
scas
or
add
add
add
add
or
xchg
adc
and
out
and
sbb
les
mov
and
test
sbb
daa
jns
idiv
xchg
je
imul
and
push
lock
mov
daa
mov
xor
inc
subb
in
popf
imul
add
add
add
jne
mov
and
pop
inc
mov
pop
inc
lods
repnz
roll
mov
jmp
pop
inc
enter
mov
dec
out
mov
daa
adc
nop
xor
and
sbb
lock
in
nop
cld
in
jle
and
sbb
sbb
lret
and
mov
jae
adc
inc
lock
add
pop
sti
lret
mov
xchg
aad
pop
test
push
int
or
jle
mov
cld
insl
jl
test
insl
int3
mov
mov
ret
lcall
and
lcall
pushf
out
jmp
and
pop
dec
dec
add
mov
test
lea
jne
sbb
add
add
and
xchg
mov
fidivs
inc
pop
dec
mov
lea
stc
xchg
pop
xorb
lea
jb
sahf
xor
xchg
pop
dec
jmp
sub
jecxz
xchg
push
aad
stos
pop
fs
mov
ljmp
mov
aad
in
gs
clc
test
mov
or
add
add
add
mov
add
call
lods
add
pop
leave
push
out
fisttps
ljmp
in
cwtl
add
xchg
sti
daa
or
scas
jl
call
cmc
dec
xchg
push
das
xchg
aad
test
mov
pop
mov
jmp
or
clc
xchg
cld
loopne
or
pop
xchg
inc
add
add
add
fbstp
mov
ret
xchg
or
and
pop
adc
into
add
xchg
add
es
pop
rorb
jge
or
and
sahf
xchg
xor
xorl
stc
sbb
loopne
add
mov
xor
and
data16
adc
or
inc
int3
pop
inc
lea
jmp
add
add
aam
clc
pushf
sarb
xchg
pop
push
mov
add
mov
mov
clc
bound
cli
pop
sbb
or
or
daa
add
mov
jmp
sub
adc
sbb
pop
push
out
dec
push
mov
mov
loopne
mov
sbb
loopne
or
add
dec
mov
inc
cmc
lea
add
add
add
inc
es
add
lea
mov
mov
push
inc
leave
mov
test
in
push
mov
fcoml
pop
cltd
and
movb
jmp
or
lahf
js
pop
and
aas
out
mov
and
push
pop
inc
and
stos
mov
add
mov
je
insb
xor
test
or
add
add
add
not
cld
sbb
sahf
mov
lea
and
inc
and
mov
jg
xchg
in
and
and
jo
push
lahf
mov
clc
subb
inc
mov
sub
int3
or
fisttpl
popf
mov
fcos
movsl
dec
push
cmp
add
add
js
leave
aam
test
shll
add
add
lea
popa
mov
mov
push
nop
jae
add
jb
adc
dec
popf
ja
xchg
jmp
fcoml
je
jno
dec
mov
add
push
jge
or
push
jecxz
jae
xchg
mov
mov
xorb
cli
jg
mov
push
test
push
popf
and
add
add
add
out
push
mov
cmp
fisubs
test
out
jb
imul
add
imul
clc
mov
popa
je
popf
xchg
mov
rorb
les
or
fsub
subb
stc
or
fbstp
inc
sahf
mov
imul
test
add
add
add
dec
xchg
sbbb
jns
aad
cs
mov
or
push
push
outsl
jnp
repz
out
jge
jbe
sti
jb
fs
adc
jnp
add
loop
and
repz
cmpsl
loop
jge
pop
pop
es
mov
push
pushl
jle
cld
adc
hlt
mov
add
add
add
add
in
mov
xchg
into
xchg
cld
ja
and
and
push
xchg
pop
and
or
and
into
xchg
and
xchg
imul
or
jnp
sub
jnp
jb
or
out
scas
cmpsb
arpl
mov
rorb
xor
lea
xchg
in
and
addb
loope
je
loope
add
add
add
repnz
loop
dec
and
lret
mov
shr
sbb
lods
hlt
aam
add
sbbb
ficomps
cld
push
stc
sar
outsb
popa
cld
jae
inc
daa
xchg
dec
int3
add
push
popf
inc
inc
insl
ljmp
dec
push
or
aam
sub
aad
cmpsb
or
add
add
add
test
jp
roll
jmp
fs
or
or
push
aad
mov
test
or
sbb
push
rol
pop
divb
and
add
push
jle
clc
jl
ficomps
decl
mov
stos
mov
push
movsb
enter
call
add
jmp
lahf
movsb
mov
movsb
mulb
test
cmp
push
push
inc
mov
outsb
and
xchg
pop
jecxz
sbb
incl
sub
add
sbb
xchg
arpl
or
gs
or
pop
int
or
xchg
jl
cld
or
add
cld
iret
jp
jg
add
add
add
adc
mov
push
add
sbb
repnz
inc
adc
stc
cs
dec
cmp
mov
sub
sqrtps
cmp
jmp
mov
xchg
fmul
js
mov
mov
aas
or
out
or
stos
testb
pop
fmuls
inc
or
out
and
cld
lock
fstpt
xchg
add
add
add
cmpsb
out
call
push
or
dec
xor
lea
sbb
mov
das
push
jmp
pop
out
outsl
jb
insb
shlb
pop
jno
mov
aad
jg
pop
sbb
jmp
xchg
pop
and
dec
sub
mov
out
data16
mov
pop
or
add
add
add
stos
cld
arpl
pop
inc
add
add
cs
mov
mov
outsb
fnsave
xchg
sub
outsl
and
je
pusha
push
stc
xchg
outsl
and
out
mov
data16
add
xchg
add
jge
data16
push
aad
lret
sub
mov
cmp
int3
push
push
or
lea
add
add
add
je
xor
xor
or
fs
pusha
add
or
or
push
scas
mov
scas
xchg
adc
ret
sub
mov
ja
and
ja
and
sbb
and
xchg
ja
and
popa
and
cld
out
mov
jg
mov
mov
mov
mov
enter
and
xchg
fidivs
add
add
enter
and
and
test
fiadds
xchg
cld
pushf
push
subl
dec
jge
loop
rcr
and
push
cmpsb
dec
lea
jae
jns
xchg
xor
and
xlat
jae
mov
pop
int3
add
dec
or
addb
or
add
cmp
adc
jnp
lods
add
add
add
test
lret
in
paddsb
fldl
sbb
sbbl
xchg
cld
cmp
push
fidivrs
sub
scas
enter
mov
add
dec
lcall
jb
mov
notb
int3
add
xchg
push
lret
add
inc
mov
and
and
xchg
push
aad
jmp
add
add
add
sahf
adcb
add
out
aam
int
pop
cwtl
cmovo
roll
repz
jecxz
adc
pop
mov
xchg
pop
and
push
ja
cli
xchg
add
int
test
movsb
add
or
xchg
jb
jle
int
ffreep
xchg
pop
lock
sub
dec
ds
pop
out
add
add
add
push
daa
cwtl
add
push
and
repz
inc
cmp
push
and
inc
push
lahf
inc
int3
push
lahf
dec
int3
adc
xchg
jnp
and
adcl
sarb
mov
sub
push
xor
mov
jle
adc
in
ret
push
mov
outsl
add
repz
add
ret
push
add
shll
mov
add
add
add
fisubrl
popf
sbb
mov
pop
sarl
cld
jl
call
test
rorl
mov
cmp
in
mov
cltd
loopne
test
test
test
mov
push
mov
mov
adc
lock
add
fwait
and
les
mov
add
add
pushf
mov
xchg
fisubs
in
jae
call
ds
loope
mov
ljmp
fbld
mov
xchg
xor
pop
clc
or
lret
clc
mov
or
addr16
add
jo
or
mov
and
add
movsl
mov
je
add
mov
add
mov
pop
add
add
add
and
and
xchg
pop
lret
in
sbb
lret
add
enter
inc
ficoml
mov
lret
gs
push
je
aad
mov
xor
adc
mov
add
rolb
add
add
and
stos
add
fiadds
cmpsl
scas
loop
mov
sub
add
je
scas
cmp
sub
add
add
add
add
je
mov
sub
ljmp
xchg
loop
psadbw
push
in
mov
mov
testl
stos
ljmp
sahf
mov
xchg
imul
push
xor
mov
push
push
clc
inc
pop
xlat
sub
jno
add
add
add
dec
inc
mov
cmp
cld
ds
xchg
mov
xchg
gs
inc
in
insl
mov
into
test
loop
inc
mov
push
cmc
mov
popf
pop
pop
movl
mov
jnp
mov
enter
pop
fisttpl
ds
incl
add
add
add
add
or
xchg
lock
test
pop
jae
sar
add
mov
mov
stc
lahf
stos
inc
mov
insl
dec
out
sbb
fs
adc
pusha
add
push
or
subb
movsb
movsb
xor
jno
clc
nop
jl
inc
adc
inc
outsb
sbb
cld
mov
xchg
add
add
add
out
mov
or
add
sahf
or
loop
sbb
cmp
cmp
es
roll
inc
ret
mov
cmp
or
lret
negb
leave
loope
rcrl
or
lcall
xchg
aas
stos
fnsetpm(287
or
push
push
pop
dec
ret
inc
roll
add
add
add
out
loop
cli
pop
in
addr16
inc
lret
mov
mov
inc
xchg
inc
stos
mov
lds
cli
push
push
roll
inc
les
cmpsb
fs
lret
jno
push
sbb
push
or
lods
in
cs
push
pop
test
xchg
ljmp
and
pop
and
shrb
push
dec
add
out
mov
mov
sbb
add
add
add
sub
notl
ds
dec
sub
cli
mov
adc
xchg
xor
xchg
push
pusha
and
sbb
sbb
testl
popf
cmpsb
add
dec
dec
loope
insb
mov
sub
test
cmpsl
sbb
fmul
addr16
popa
adc
out
aam
push
push
or
jb
mov
xchg
or
add
add
mov
and
jae
mov
in
pusha
mov
push
cmp
mov
aas
jp
pop
cmp
int3
test
call
int3
in
xchg
enter
lahf
jge
sbb
cmp
sti
push
repz
imul
arpl
xor
xchg
add
add
add
out
and
xchg
gs
or
sub
test
or
jp
xor
inc
jns
call
jl
push
jno
rcr
jno
dec
hlt
jno
stc
in
push
add
or
call
or
or
sub
and
adc
pop
push
mov
and
inc
mov
stc
sahf
or
push
add
add
add
xor
and
pop
subl
aam
out
rorb
cltd
mov
int3
jae
mov
adc
adc
add
sti
and
dec
aam
pop
aam
mov
add
add
mov
unpcklps
adc
xchg
repz
sub
lea
out
push
gs
pop
int3
outsb
add
add
add
popf
push
lcall
testl
and
inc
push
cltd
mov
lret
pop
shll
pushf
sbb
insl
bound
adc
jmp
mov
jmp
xchg
aad
shll
scas
jle
std
imul
js
jle
aad
mov
pop
xor
jp
jmp
add
xchg
pop
sub
cmp
cmp
test
aad
mov
cmp
fdivp
push
pop
test
lods
aaa
mov
add
movsl
shlb
push
insb
nop
push
inc
cmc
ret
push
or
add
push
les
jb
repz
sbb
sub
mov
je
jbe
je
add
add
add
sbb
cmp
push
cmp
xchg
or
lret
or
rcrb
and
into
push
push
loopne
xor
dec
sarl
stos
lret
jl
call
push
xor
psubw
or
add
shl
ror
xchg
xchg
stos
add
xorb
andl
or
test
add
add
add
or
fstp
push
push
mov
fdivrl
xchg
out
adc
call
jmp
std
movsl
out
push
inc
popa
sbb
inc
add
sahf
pop
jp
imul
lret
lds
in
in
aad
push
or
test
lods
sbb
sub
dec
cs
dec
inc
pop
push
dec
add
add
add
push
mov
fistl
add
dec
or
or
add
lret
inc
lret
push
push
popl
add
js
or
pop
push
cltd
sbb
lret
add
inc
lret
jl
js
add
decb
add
ret
ret
lahf
enter
push
pop
test
daa
jge
push
push
mov
test
add
add
add
push
dec
repz
addr16
dec
imul
and
aas
or
cltd
adc
inc
fldt
jge
dec
dec
jb
sub
out
andb
and
ja
fcomps
jno
xchg
pushl
xor
subb
pusha
add
push
or
mov
loopne
mov
js
xchg
aaa
mov
add
add
add
fstps
push
ficompl
stos
xchg
or
mov
in
mov
xor
xchg
xor
out
sbb
sbb
jnp
and
jnp
xor
inc
mov
pop
and
lock
sub
aam
test
jl
jnp
dec
mov
sarl
mov
pop
xchg
mov
pop
and
add
add
add
pop
adc
cmp
mov
pop
insb
pop
xchg
mov
pushf
inc
pusha
mov
movsbl
daa
add
aaa
inc
lods
pop
fs
insl
loopne
push
jae
insb
mov
or
pop
xchg
mov
loope
jp
sub
sbb
dec
test
push
sbb
test
dec
xchg
rorl
add
inc
mov
lea
xchg
lock
dec
std
in
cwtl
cmp
lea
jb
outsl
inc
je
out
and
ret
adc
inc
sub
mov
stc
ss
and
sbb
adc
push
std
cmp
sahf
hlt
and
mov
xchg
test
outsb
leave
std
xchg
lock
pop
addb
fxch
jp
pop
lret
aaa
arpl
pop
lret
addb
add
add
rorb
lret
nop
insl
les
in
ret
enter
repnz
enter
repnz
or
inc
aas
test
out
cmp
pop
dec
mov
scas
ret
mov
mov
push
cld
lret
aaa
jnp
aaa
sub
inc
xchg
test
lock
lret
fcomps
jl
add
add
add
and
push
mov
jb
loopne
pop
out
fildll
ficoms
mov
pop
int
dec
js
dec
fldt
popf
xchg
pop
and
adc
hlt
fwait
mov
push
stos
cmpsl
fiadds
mov
enter
leave
dec
jmp
mov
pop
test
push
or
add
add
out
stos
mov
fildll
jmp
roll
add
mov
push
jmp
ficoml
jg
fildl
ss
rclb
rcl
push
es
lahf
dec
int3
pop
sbb
int3
mov
lahf
push
sub
add
decl
inc
lahf
in
enter
add
add
add
je
int3
mov
add
and
pusha
sqrtps
adc
test
arpl
mov
xlat
rclb
shlb
in
xchg
adc
sub
and
sbb
inc
test
daa
je
clc
pop
enter
adc
cwtl
lahf
xor
push
loope
adc
and
push
les
push
jns
imul
add
add
add
mov
cmp
daa
jnp
mov
clc
jae
xchg
loopne
push
in
pop
jge
mov
push
lds
push
add
cmp
add
int
mov
xlat
imul
lret
push
pop
mov
dec
ret
pop
jg
cmp
scas
call
lret
inc
inc
gs
add
pop
cli
add
add
add
adc
jb
fcmovbe
insl
jg
pop
sub
aad
jbe
mov
cmp
aad
and
inc
inc
lahf
aad
xchg
dec
cmpl
push
push
in
adcb
inc
cmp
or
lds
movq
dec
sub
adc
aas
gs
inc
pop
jge
push
and
push
mov
sbb
add
add
xchg
ds
bound
bound
jo,pt
dec
lahf
test
dec
mov
xchg
aam
cmpsl
int
in
cmp
loope
pop
and
decb
cmpsl
xor
leave
xchg
mov
pop
ds
xchg
push
bound
je
jmp
decl
and
ffree
mov
jb
je
jmp
add
xchg
and
popa
xchg
sbb
xor
sub
xchg
shlb
movsb
and
mov
lea
add
pop
push
rcll
aam
push
or
clc
gs
jmp
sub
mov
arpl
push
fsubrl
mov
enter
xchg
push
and
mov
mov
jg
add
push
mov
add
add
and
sub
popa
je
ficomps
subb
ja
mov
add
sub
fdivrl
push
movsl
push
imul
push
mov
ficomps
int
push
sbb
incl
imul
sbb
ds
popa
sbb
outsl
addr16
mov
insb
or
inc
xchg
add
add
add
test
add
pop
and
xchg
fbld
or
push
dec
jmp
loopne
add
cwtl
out
fistps
pop
add
pop
push
ds
ficoms
jnp
arpl
mov
add
stos
push
xchg
pop
push
mov
clc
lret
rcrb
cmp
lret
adcl
mov
cmp
add
add
and
add
pop
push
jbe
clc
lret
mov
ror
xor
sbb
in
add
inc
jp
pop
fstl
rol
jg
shrl
adcb
jp
bswap
les
and
push
mov
mov
aaa
outsb
shl
das
and
lret
inc
dec
bound
fnstenv
add
add
add
mov
mov
insb
add
aam
push
sub
loope
mov
fldenv
sti
xchg
cwtl
and
xchg
pop
mov
ja
mull
jmp
dec
test
sarl
leave
enter
jo
roll
xchg
mov
mov
or
mov
lods
pop
xchg
int3
add
xchg
or
add
add
sub
test
test
and
mov
mov
pop
mov
lods
xor
sub
sub
cmp
and
jnp
clc
dec
jae
jae
push
fmuls
add
sar
pop
dec
and
fs
outsl
dec
jp
jnp
jns
pushf
dec
leave
push
add
add
add
push
dec
push
or
sahf
aad
js
lahf
call
clc
aad
jbe
push
and
iret
clc
pop
push
push
mov
add
fisubl
subl
add
iret
addl
add
mov
test
sbb
imul
int
imul
setae
pop
dec
push
ror
add
add
add
aas
mov
pop
add
pop
add
imul
test
iret
mov
stos
pop
dec
dec
imul
std
gs
daa
iret
cmpb
mov
add
cmp
inc
gs
test
outsl
iret
adc
dec
into
lret
adcb
cmp
repz
into
lret
push
ret
fists
xchg
pop
dec
enter
add
add
iret
pop
fwait
adc
test
push
pushf
mov
cmp
sub
repz
int
push
push
dec
jmp
push
dec
dec
fdivl
int
sbb
addr16
or
jmp
imul
test
aas
push
xchg
mull
jmp
or
pop
fdivrp
ret
repnz
jmp
add
mov
outsl
xor
pop
test
jmp
sbb
mov
xchg
int3
mov
or
aam
sbb
ret
ds
xchg
pop
cmpsl
insl
pop
je
jmp
mov
aam
xchg
int3
aam
sub
in
fiaddl
stc
xchg
sbbl
ret
mov
and
and
add
add
add
imul
decb
js
xchg
xor
or
jle
sub
pop
jb
stos
ret
fimull
and
add
inc
dec
mov
scas
sub
pop
jae
adc
or
cmp
insl
push
and
andb
outsb
and
lea
xchg
add
add
add
mov
dec
pop
pop
sbb
sub
fcmovu
and
xchg
and
cld
sub
jne
xchg
gs
push
fwait
dec
add
sbbb
xchg
loopne
test
ret
clc
sbb
andl
test
clc
push
cmp
das
mov
out
sbb
call
adc
pop
fisttpll
or
fs
add
add
add
sbb
xor
ss
shrb
les
repz
pop
inc
dec
cmp
inc
shl
adc
lret
xor
lret
lret
mov
icebp
lret
jns
stc
lretw
xchg
or
addb
adc
mov
add
xchg
pop
inc
mov
jae
add
add
add
add
cmovne
jle
inc
adc
add
adc
repz
fmulp
adc
jge
jo
pop
repnz
aaa
and
in
js
xchg
test
sbb
mov
mov
xor
dec
into
andb
inc
dec
pop
fsts
shlb
test
xchg
or
int
push
adc
jmp
add
add
add
out
sbbb
inc
and
sbb
call
mulb
jmp
mov
pop
repnz
jmp
xchg
pop
lods
in
lret
cld
enter
mov
jmp
je
mov
call
jl
insb
xor
mov
sub
add
jp
push
mov
adc
add
add
add
jp
and
mov
sbb
int3
pop
and
mov
pop
lahf
ds
and
cs
test
inc
mul
cmp
jnp
mov
jp
mov
test
add
push
pushf
and
idivl
cmp
mov
jmp
dec
inc
call
and
add
add
add
adc
enter
testl
inc
negl
push
jecxz
xor
hlt
lret
pop
and
repz
dec
cmc
repz
inc
test
data16
mov
mov
add
mov
incl
outsl
and
out
dec
cmp
testl
mov
daa
test
scas
and
add
add
add
or
jle
adc
into
add
xchg
pop
lret
add
or
imul
jo
enter
or
add
add
loope
mov
test
mov
movsl
leave
int
xchg
adc
push
push
cmp
pop
jne
jg
or
mov
leave
enter
into
xchg
or
or
pop
int3
inc
jl
ja
add
add
add
mov
add
jle
lods
cmp
push
and
mov
or
scas
int3
dec
into
fwait
jns
call
add
mov
xchg
inc
sbb
popf
adc
cmp
mov
xor
call
xor
xchg
pop
sbb
inc
or
push
orb
ljmp
push
xchg
add
add
add
add
inc
bound
imul
mov
inc
ret
pushf
sub
repz
and
add
daa
aad
jle
and
clc
mov
jmp
xchg
and
rorl
data16
cmp
mov
or
data16
add
aad
shlb
mov
test
jecxz
add
add
add
fmuls
and
mov
dec
push
add
sub
lret
sahf
dec
inc
xchg
bound
add
sbb
out
xor
js
sbb
mov
push
mov
outsb
or
sub
aad
or
in
xchg
scas
dec
xchg
std
lods
and
or
push
xchg
xchg
scas
and
push
or
sub
cmpsb
mov
or
add
add
add
sbb
sub
in
sbb
push
out
mov
sbb
dec
inc
movsb
enter
and
adc
iret
xchg
int3
enter
sti
test
loope
add
sti
pop
mov
cs
or
pop
lret
add
add
lds
add
add
enter
movl
dec
push
adc
add
pop
lea
dec
jmp
mov
fcoms
dec
sti
cmp
enter
lods
mov
and
mov
pop
nop
mov
lods
push
xor
sub
fwait
xor
xchg
add
add
add
add
dec
mov
jle
mov
mov
adc
xor
xchg
mov
ds
ja
dec
into
out
fxch
out
sbb
and
cld
mov
xchg
ss
xchg
adc
jmp
xchg
pop
test
mov
cwtl
adc
pop
xchg
mov
loope
nop
jg
xchg
pop
adc
mov
cwtl
add
add
add
sbb
test
jmp
sbb
lcall
mov
inc
add
aad
mov
inc
mov
cmp
xor
sub
or
inc
test
js
lea
sti
into
mov
add
fs
jbe
cmpsb
push
mov
add
add
add
popf
inc
int3
lods
imul
dec
fstps
add
flds
shrb
xchg
mov
shl
xchg
mov
js
and
xchg
sub
test
ja
xor
leave
std
sub
push
movsl
push
and
cmp
pop
add
or
pop
stc
sub
add
add
and
sub
dec
mov
mov
shrb
lahf
jg
and
inc
lds
ja
and
lret
out
stos
push
xor
jnp
push
test
cmp
insb
sbb
push
pop
imul
push
push
in
fildl
mov
bound
xchg
pop
lret
xor
lret
sub
dec
add
add
add
mov
in
int3
lods
cmc
aam
rolb
adc
jne
push
rorl
mov
xor
xchg
pop
mov
lret
fcmove
xchg
fcmove
pop
mov
pop
or
jle
push
aas
inc
cltd
pop
lret
mov
inc
int
xorl
xchg
pop
push
inc
xchg
mov
mov
dec
push
popf
pop
jg
mov
xchg
cmp
jmp
add
add
add
outsb
mov
and
or
int3
fdivrs
add
lahf
cmp
and
sub
pop
add
dec
fs
inc
mov
loop
xchg
test
movb
aaa
lea
xchg
pop
mov
dec
popl
and
xchg
pop
and
xchg
pop
cmp
or
and
xchg
and
and
add
add
add
jb
and
sbb
adc
add
mov
arpl
add
jl
lahf
add
mov
inc
pop
imul
cvttps2pi
cmp
das
mov
lods
lahf
dec
pop
cmp
or
or
mov
mov
pop
sbb
arpl
inc
sub
in
rcl
cmpsb
mov
jae
ds
das
mov
add
add
add
into
and
mov
dec
xor
fmuls
aad
lods
cmp
and
xchg
fs
jl
cmpsl
jnp
sbb
pop
in
xor
cmc
cmpsl
popf
notl
sbb
xchg
scas
and
or
xchg
fistps
pop
popf
cmp
or
lea
jmp
lea
add
add
add
add
scas
push
dec
mov
sbb
addr16
iret
lock
cltd
jg
scas
push
iret
sbb
shl
mov
movsl
push
iret
sbb
iret
lock
test
and
add
enter
ret
jnp
bswap
xor
dec
testl
loopne
inc
add
push
xlat
add
push
enter
inc
inc
add
add
add
cltd
idiv
inc
pop
out
jl
sbb
dec
test
fildl
mov
or
clc
or
bswap
xor
mov
dec
lret
xchg
xor
mov
mov
dec
xchg
push
or
add
mov
in
xchg
in
jecxz
jg
jmp
lcall
jb
add
add
add
sbb
in
pop
sub
outsb
or
pop
sbbl
xor
aad
xor
lds
jno
or
xchg
andl
inc
das
jb
adc
stc
lea
iret
adc
or
dec
bound
dec
jns
xchg
sbbb
add
xchg
pop
and
testl
add
add
add
xor
adc
lods
adcb
push
cmp
js
add
testb
jl
xchg
push
sub
mov
and
inc
cmp
xor
hlt
push
xor
jle
add
add
mov
or
movsb
dec
dec
fsubrl
add
lds
add
add
movsb
and
xor
jecxz
mov
inc
add
add
int
test
clc
adc
inc
add
jl
mov
out
xor
fcoml
clc
sub
clc
jne
scas
and
xchg
arpl
adcb
add
pusha
les
and
adc
mov
pop
adc
jae
xlat
into
jno
and
add
add
push
aam
pop
xor
add
popf
mov
mov
popa
xor
pop
dec
rcrl
call
sbb
push
adc
test
clc
adc
cld
add
inc
jmp
ss
mov
hlt
adc
push
push
mov
ret
mov
dec
testl
xchg
push
push
inc
test
jl
add
add
add
testl
iret
js
sbb
ret
bnd
jl
xor
push
mov
add
dec
cmp
adc
mov
or
addl
add
dec
and
xchg
xor
in
fwait
add
bound
and
jmp
push
sbb
daa
xchg
cmp
jb
add
add
add
loopne
pop
push
lock
jne
hlt
or
adc
test
cltd
mov
pop
stos
scas
sbbb
scas
inc
mov
ror
add
mov
adc
int
cmc
stos
aaa
jne
gs
lcall
mov
outsb
enter
aad
call
mov
inc
cmp
add
add
add
jle
lahf
dec
mov
xchg
push
mov
cli
gs
xor
test
pop
push
mov
jmp
and
js
pop
add
mov
mov
lods
push
js
or
test
or
jecxz
das
jmp
xor
mov
xor
out
mov
aaa
adcl
and
inc
push
xchg
jbe
ss
xor
mov
roll
add
add
xchg
out
push
call
or
das
call
sbb
roll
mov
or
cli
add
jmp
incl
cmp
jae
stos
mov
and
mov
fs
les
jl
test
cmpsb
xor
test
into
cmovle
or
xchg
daa
bound
add
add
add
or
jae
push
fs
xchg
sahf
and
mov
arpl
pop
inc
sbb
sbb
add
xor
orb
jne
mov
jge
sbb
out
sub
popa
cli
push
xor
sbb
jl
pushl
xchg
pop
lret
add
push
inc
test
and
adc
add
icebp
add
xchg
add
add
add
add
push
xchg
pop
lret
test
sbb
dec
mov
dec
dec
addl
jecxz
dec
mov
sub
or
mov
xchg
pop
and
fmuls
and
rorb
loope
add
bound
dec
mov
cli
sub
in
nop
loop
or
sub
sti
sti
stc
push
scas
xor
in
vmwrite
add
push
psubb
push
pop
jne
aad
aam
push
or
iret
add
jae
pop
and
xor
xchg
cmp
xchg
push
inc
cmp
cwtl
inc
and
or
test
jmp
sub
subl
xchg
ret
sub
and
je
aam
call
add
add
add
jnp
je
int
imull
lret
in
add
adc
sar
jbe
lahf
mov
and
sub
lea
call
test
or
ret
jae
xchg
add
pop
xlat
js
xchg
pmuludq
ljmp
int3
add
xor
xchg
sahf
and
jp
int3
adcb
and
add
add
add
sbb
push
cmp
push
sub
add
jmp
sbb
push
and
sbb
jmp
aad
mov
xor
loope
test
xor
aaa
daa
adc
dec
sbb
arpl
inc
xchg
push
xchg
sahf
mov
je
ror
sub
daa
pop
insb
or
xchg
cmp
jmp
lcall
add
mov
push
mov
fildll
ret
fdivrs
out
dec
mov
mov
add
jae
or
mov
jl
sub
push
fisttps
rolb
fs
enter
lret
jl
lock
sti
js
incl
mov
add
adc
out
js
incl
xchg
push
and
add
add
inc
iret
js
incl
xchg
or
adc
out
js
jmp
popa
popa
pop
and
dec
test
leave
inc
sub
inc
pop
and
sub
popa
and
and
or
popa
out
push
and
add
mov
call
inc
sub
out
push
and
loope
das
testb
add
add
sbb
cmpsl
out
aad
and
jge
lret
lods
int3
scas
aam
mov
dec
cmp
shlb
pop
pop
cmp
sbb
out
jne
jecxz
jns
pusha
or
cmp
sub
push
jecxz
inc
pusha
ret
cmpsl
pop
in
mov
jns
and
jecxz
xor
inc
sub
fwait
daa
lret
andl
add
add
add
add
call
push
jae
add
and
popa
cld
stc
or
jecxz
sub
add
test
dec
add
xlat
jle
add
add
stc
pushf
sbb
sbb
pop
add
mov
loope
sbb
mov
cmc
sbb
dec
fs
xchg
sahf
and
insb
sub
add
add
add
pop
xchg
sub
cmp
xor
aam
push
add
aaa
inc
adc
fdivl
inc
adc
sub
push
daa
and
xchg
and
popf
stos
jns
sahf
and
xchg
mov
insl
nop
sahf
and
js
xor
push
sti
push
add
movsl
test
jge
pop
sarl
xchg
jle
pop
adc
inc
push
add
add
add
test
pop
lret
sub
adc
orb
in
add
push
das
mov
or
jo
add
cmp
xchg
add
jp
rorl
das
jl
stos
lret
cmpsb
inc
pop
mov
push
dec
dec
aas
inc
dec
cmp
pusha
mov
xlat
mov
lret
add
add
add
add
push
add
jno
and
cmp
dec
sbb
fcmovnu
test
push
insb
or
mov
pop
lods
or
out
jmp
cmp
cmp
cmp
lret
inc
mov
jmp
ja
frstor
sbb
xchg
pop
and
sbb
test
cs
aad
sbb
add
add
add
sub
xchg
jle
pop
xchg
pop
and
sbb
jo
sti
dec
and
xor
dec
mov
je
adcb
jns
push
std
add
jnp
or
nop
adcb
push
lahf
push
insb
dec
popf
xchg
adc
icebp
cwtl
mov
xchg
rolb
add
add
nop
jnp
lcall
popa
jns
add
add
add
dec
push
jecxz
and
clc
dec
jecxz
nop
cmpsl
push
call
imul
iret
dec
lahf
in
lds
subl
ljmp
mov
sub
xchg
test
repz
int
repz
lds
test
push
ret
leave
add
adc
adc
jo
xchg
mov
outsb
add
add
add
jns
jo
mov
sbb
adc
push
xchg
into
mov
sbbl
adc
das
roll
loope
adc
push
and
or
adc
pop
popa
mov
ficomps
cmp
xchg
pop
xchg
clc
movb
ret
pop
dec
mov
xchg
outsl
lods
mov
out
lret
iret
lret
iret
lret
mov
add
add
add
aaa
or
aad
lret
push
inc
xchg
in
or
pushf
push
inc
push
mov
push
fldt
jmp
mov
mov
xchg
mov
mov
rolb
pop
adc
inc
cmp
hlt
loope
fcomps
icebp
or
dec
cmpsb
mov
mov
add
add
push
in
push
push
pushf
xchg
in
scas
aam
inc
imul
fs
cmp
loop
bound
or
mov
lcall
jmp
or
pusha
test
lret
xchg
add
inc
ja
test
pushf
pop
in
lahf
aam
gs
dec
shl
sub
sbb
adc
add
add
add
stc
arpl
ljmp
add
cmp
fildll
mov
popf
pop
nop
mov
jp
lea
jp
push
fs
jae
xchg
adc
repz
js
add
arpl
mov
xchg
or
pusha
push
or
inc
pushf
cld
xlat
arpl
pop
cmc
and
mov
sub
in
push
roll
add
add
add
sub
pushl
std
sahf
inc
inc
cmp
sarl
sbb
cs
and
call
into
outsl
pop
xchg
jb
add
mov
jp
xorl
pusha
add
out
jae
xchg
mov
rcll
sbb
cmp
jmp
pop
add
jmp
cld
movsb
insb
popf
xor
xor
pop
movsl
testl
add
or
and
mov
add
push
push
call
jg
int
repz
movsb
test
and
mov
loopne
push
adc
nop
pop
lret
add
xlat
inc
inc
mov
or
mov
sti
mov
and
nop
sub
dec
lock
push
inc
scas
mov
inc
add
add
add
jns
jle
push
dec
out
pop
rorb
add
inc
inc
mov
rorl
add
and
push
nop
xchg
pop
or
iret
push
jecxz
mov
stos
add
lret
add
aaa
xchg
loop
mov
nop
mov
shl
push
pop
scas
and
pop
and
pusha
out
mov
sbb
insl
add
add
add
add
incb
jb
out
and
vminps
ja
frstor
lds
insl
int
rcll
aam
aaa
test
mov
sbb
scas
test
lea
sbb
xchg
out
out
pusha
xor
xchg
mov
fistps
and
adc
mov
loope
push
sub
or
cmpsl
jl
jmp
add
add
add
and
and
testl
pop
or
sti
pushf
dec
loopne
pop
adc
and
aas
sbb
mov
popf
inc
clc
xchg
and
xlat
pop
mov
popf
push
add
sti
add
add
xchg
mulb
add
ret
mov
mov
adc
pop
jl
and
rcrl
add
ficoml
cmp
test
add
add
add
and
das
sbb
sbb
pushw
xorl
push
xchg
clc
pop
fcoms
adc
outsb
aaa
mov
fstpt
mov
shll
and
mov
cmpsl
inc
jns
and
insb
aam
push
test
add
add
jecxz
sub
push
adc
add
add
add
add
add
das
add
ret
aad
sar
mov
data16
test
scas
and
sahf
sbb
mov
push
dec
sub
push
or
shl
add
add
sbb
pop
adc
xchg
adc
sarl
push
pop
hlt
lods
xchg
pop
lret
mov
mov
out
adc
xchg
test
add
add
enter
push
out
scas
mov
lcall
cmp
stos
sbb
lret
add
ret
mov
lahf
mov
dec
add
test
push
inc
cmp
inc
scas
cmpsl
adc
push
fbld
lahf
lret
pop
and
rorl
stos
jp
gs
cmp
and
fld
add
add
add
mov
and
lea
push
mov
popa
push
or
push
adc
or
xor
call
mull
jmp
lea
push
negb
dec
sub
int
mull
aad
lret
scas
mov
out
sub
cmpsb
sub
sahf
stos
add
arpl
cmp
and
cld
hlt
stos
pop
je
mov
add
add
or
in
mov
cmp
jb
dec
clc
or
sbb
rolb
scas
pushf
clc
or
jae
mov
call
or
ds
dec
add
ljmp
xchg
jno
mov
fdivr
mov
mov
pop
insb
imul
or
jl
pushf
pop
les
add
add
stos
leave
mov
dec
cmp
adc
in
sbb
xchg
inc
test
sbb
pop
mov
clc
test
sub
in
xlat
cld
push
mov
in
xor
jp
scas
and
jle
stc
inc
int3
push
leave
loop
pop
jge
xchg
push
push
mov
mov
mov
test
add
add
add
jg,pn
xchg
mov
xchg
xchg
push
dec
mov
fnstsw
test
leave
add
stos
or
jecxz
push
push
cmp
arpl
lret
jle
lahf
push
dec
mov
popa
mull
xchg
pop
lret
mov
xchg
pop
dec
and
popf
cli
ss
mov
out
or
lret
add
or
inc
add
add
add
aad
mov
out
dec
dec
leave
mov
dec
mov
sbb
push
push
orb
mov
pushf
lret
aaa
mov
xchg
popf
cmpsl
sbb
test
out
cmp
les
test
loope
mov
aaa
pop
push
test
mov
arpl
xchg
pop
and
dec
pop
pop
jmp
add
add
add
mov
push
mov
bound
test
pop
dec
in
pop
stos
and
mov
ficoms
sub
xchg
andb
dec
divl
mov
mov
shrl
std
mov
fs
out
stos
add
pop
push
add
cmp
aam
inc
rclb
pop
dec
cmp
lahf
inc
add
add
add
test
clc
stos
iret
sub
out
and
cmp
push
sbb
outsb
lahf
dec
and
push
clc
adcl
inc
cld
add
sub
sbbl
pop
mov
ja
and
test
jecxz
cmpsb
push
and
out
xor
mov
aam
xchg
mov
jp
mov
test
xchg
and
add
add
add
ret
inc
xchg
mov
pop
inc
pop
adc
jl
push
mov
pop
dec
pop
sub
inc
jp
shrb
aam
imul
xchg
inc
shll
jl
sbbb
cld
adc
inc
xorl
pop
push
fldenv
call
or
xchg
add
dec
mov
imul
pop
fwait
sbbl
lret
lahf
mov
add
inc
mov
mov
nop
rorb
xchg
pop
lret
add
mov
xchg
pop
lret
xchg
add
add
test
add
pop
dec
xor
or
add
sub
mov
jl
xchg
push
inc
mov
xchg
add
add
add
adc
mov
mov
push
faddl
fdivrl
lea
test
add
scas
push
inc
and
dec
lahf
mov
icebp
sbb
loop
fwait
push
push
inc
inc
xor
nop
pop
and
cmpsl
andb
xor
jb
mov
pop
test
icebp
lret
inc
rolb
fcomps
shr
xor
daa
jmp
add
xchg
mov
sahf
sub
xchg
sbb
xchg
pop
and
dec
mull
jmp
pop
push
lods
adc
mov
push
fwait
and
push
leave
daa
add
push
cld
xor
loopne
xchg
or
xor
add
test
adc
add
flds
fs
fldt
pop
lahf
inc
pop
mov
add
pop
adc
bound
dec
inc
adc
dec
adc
sub
and
cmp
and
jae
dec
sub
lahf
dec
and
jb
jno
cmp
cmp
and
mov
xchg
and
push
jge
or
test
and
xchg
lods
dec
std
repz
test
jno
cmp
inc
pop
and
adc
insl
mov
add
add
add
pop
orb
jg
stc
xchg
mov
loope
mov
pop
mov
xchg
mov
loope
jns
jecxz
cwtl
pop
ds
pop
push
xchg
mov
and
or
jp
xchg
jp
call
sbb
xchg
pop
cmp
movsb
out
mov
cli
adc
add
add
xchg
mov
nop
push
aas
xchg
pop
lret
xchg
or
das
test
mov
add
lret
add
ret
mov
or
add
or
jg
add
add
xchg
inc
mov
push
add
or
xchg
or
lahf
adc
mov
pop
push
inc
movl
scas
push
clc
jmp
pop
aaa
dec
lret
cmc
or
xchg
add
xchg
adc
ljmp
fadd
inc
xchg
aam
pop
adc
out
roll
xor
xchg
pop
dec
add
clc
xchg
lret
out
xchg
aam
das
xchg
fucomp
mov
sahf
and
out
dec
sub
shr
negl
aad
fucomp
mov
and
push
stos
and
xchg
lret
xchg
add
add
add
cmp
aam
clc
adc
out
movsl
lock
jle
push
and
or
aam
adcb
add
nop
popf
push
loopne
cld
sub
inc
fisubs
lahf
ret
out
add
fisttps
and
sar
push
sarl
pop
fldt
add
and
js
and
hlt
adc
and
add
add
add
push
dec
popf
inc
in
xchg
pmuludq
and
push
push
add
in
push
xchg
push
add
adc
add
adc
hlt
addl
xchg
arpl
and
and
jmp
imul
leave
sbb
pop
out
cmpsl
and
adc
fisubrl
add
add
ja
xor
sti
xchg
mov
mov
mov
and
sahf
rorl
lahf
stc
xchg
mov
test
sbbb
xor
and
xchg
and
loope
mov
lahf
ficoms
fbstp
stc
adc
jp
sub
add
out
aad
add
add
add
fdivp
mov
cmpsl
rorl
add
pop
lret
mov
xchg
jle
sbb
inc
pushl
pop
sahf
leave
js
pop
dec
cmpsb
popf
adc
sbbl
lret
push
roll
xchg
add
js
cmpsl
jnp
mov
inc
in
leave
sarb
leave
lret
fstl
test
cwtl
pop
mov
add
push
cmp
pop
push
aas
mov
add
add
add
enter
and
xor
jne
and
xchg
fcomps
repnz
call
dec
pop
and
or
adc
test
dec
cmp
jle
stc
xchg
pop
and
and
inc
push
jmp
loope
jae
xchg
push
and
xchg
sub
insb
cmpsl
pop
je
xchg
lahf
lret
add
add
add
adc
add
inc
cld
insb
push
lcall
add
mulb
add
or
inc
cmp
in
sub
jae
outsl
mov
mov
xor
ss
jae
push
mov
and
pop
stos
push
jge
or
test
xchg
aam
mov
xlat
jne
lahf
into
sti
push
dec
add
add
add
int3
dec
push
movb
and
cmp
movsb
adc
mov
mov
ucomiss
popf
dec
fsubl
pop
mov
aam
xor
push
push
dec
fmuls
repnz
out
pop
dec
jns
pop
inc
dec
jo
inc
imul
add
out
movsl
inc
mov
shll
mov
add
add
add
mov
sti
xchg
lods
push
dec
cltd
mov
jg
popf
sub
hlt
shll
xchg
pop
xchg
enter
and
std
or
xchg
xchg
out
into
clc
into
mov
jno
and
and
or
mov
insb
lret
js
mov
lods
leave
ret
push
ss
popf
enter
lret
add
mov
add
add
add
je
pop
cs
jl
add
dec
es
idivb
add
enter
inc
rol
cmpsb
inc
push
int
dec
lret
adcl
rcrl
popl
stos
or
leave
mov
xchg
mov
imul
push
pop
adc
jmp
xchg
pop
and
add
add
mov
clc
stos
pop
sub
fiaddl
fsub
and
sti
cmp
test
push
adc
std
int
sbb
cld
aam
out
and
pop
dec
shrb
xchg
pop
test
bound
and
insl
shr
out
or
push
mov
adc
jb
mov
and
jecxz
aad
add
add
add
or
stos
add
push
jge
or
mov
inc
add
out
inc
pusha
stc
push
sbb
lahf
push
sub
test
add
andl
fdivr
and
insl
cmp
stc
jp
dec
pop
adc
add
pop
mov
out
inc
and
fs
mov
shrl
add
or
add
add
mov
inc
cld
test
cmc
mov
mov
xlat
test
mov
push
xchg
and
xchg
mov
pop
push
rclb
add
push
movsl
push
into
mov
xchg
dec
pop
dec
xchg
mov
pop
fcoms
xor
adc
sbb
xchg
lea
add
mov
and
add
add
add
xchg
sbb
adc
nop
push
inc
mov
daa
test
push
mov
aam
xchg
icebp
iret
test
pop
adc
push
sub
mov
int3
mov
mov
call
lea
hlt
or
lret
inc
cmp
mov
dec
mov
jnp
ret
push
inc
sbb
add
add
add
ret
icebp
add
lahf
push
push
xchg
pop
inc
push
inc
dec
lret
add
cmp
add
jle
mov
push
or
jle
lds
jg
cwtl
gs
and
mov
fimuls
dec
push
jmp
pop
fsubs
mov
bound
add
mov
add
add
add
xchg
mov
stos
mov
or
lret
push
ljmp
dec
lahf
sub
pop
mov
mov
and
mov
and
int3
andl
popa
mov
and
xchg
pop
icebp
leave
or
shlb
dec
lock
rolb
jmp
jge
mov
add
add
add
stc
xchg
dec
cmp
popa
hlt
sub
into
xlat
rolb
pop
add
test
add
xorb
sub
rcr
jge
aaa
fadds
dec
sub
divl
fiadds
mov
call
aaa
rolb
cmp
ret
jnp
sub
xor
push
inc
add
add
add
fadd
mov
add
xor
out
xchg
test
in
mov
and
or
outsb
nop
in
jmp
xchg
jo
in
ljmp
mov
shr
fbstp
xor
and
imul
adc
push
imul
adc
jo
clc
push
filds
lcall
add
add
add
add
jmp
fcomp
dec
mov
out
insb
and
sahf
inc
call
dec
dec
pop
xchg
pop
lret
add
add
scas
cli
xor
xchg
pop
dec
push
test
testb
mov
inc
int
or
push
ss
or
mov
aas
xchg
add
xchg
add
add
add
sub
add
sbb
push
xchg
push
nop
cmp
les
xchg
test
sub
lret
add
dec
push
lret
or
and
lret
mov
sbb
mov
and
xchg
adc
bound
ret
lret
push
or
aam
add
add
add
xchg
push
ret
lret
sbb
int3
add
push
lret
mov
sbb
add
pop
lcall
xor
jo
pop
and
aam
inc
mov
stos
movsb
es
icebp
or
sarb
shll
mov
add
fmull
and
xchg
dec
in
popa
hlt
add
add
add
jmp
dec
xlat
rclb
fadds
pop
add
add
sub
sbb
xlat
inc
imul
mov
xchg
popa
in
fldl
lock
ljmp
or
loopne
iret
mov
push
rcl
ret
jnp
sub
jae
jae
hlt
mov
or
aad
add
pushf
inc
or
add
add
add
mov
mov
jp
and
or
jb
nop
in
jecxz
xchg
outsb
in
mov
pop
je
in
or
fcomp
xor
out
outsb
and
sbb
mov
adc
test
adc
mov
imul
mov
jno
test
outsl
and
add
add
add
sahf
cli
sbb
leave
loop
pop
jge
pop
rorl
popf
cli
adcb
or
add
iret
jmp
mov
or
test
lret
rclb
addr16
xchg
adc
popl
and
mov
aas
mov
dec
push
ds
ds
call
push
push
lret
add
add
add
add
lret
aaa
xchg
ret
xor
adc
das
inc
ds
mov
dec
rorl
adc
push
arpl
sub
adc
jb
stos
lods
testb
bound
sbb
adc
iret
add
mov
or
notl
pop
mov
adc
arpl
add
add
add
pop
or
or
ljmp
test
xchg
sbb
jnp
sub
cmc
push
and
adc
jmp
xchg
pop
and
inc
adc
clc
test
clc
or
mov
lea
xchg
rorl
faddl
add
test
test
mov
add
add
fs
es
pop
fadds
mov
add
sub
repz
out
stos
test
or
aaa
faddl
push
test
and
lahf
inc
or
lock
iret
sub
jns
aad
fs
popa
loopne
inc
push
sub
jnp
sub
outsb
cmovle
outsb
and
xchg
or
xchg
outsb
test
add
add
test
mov
inc
shl
loopne
sub
lods
pushl
jge
mov
mov
cmp
insl
and
sbb
loope
into
pop
and
sbb
rcl
pushf
dec
shll
push
mov
outsb
inc
jno
js
jo
test
jno
add
or
add
add
push
aas
sbbb
lret
sub
loope
cld
pop
add
adcl
pop
mov
xchg
adc
mov
or
aad
add
pop
loope
movsl
repz
mov
push
inc
cltd
pop
mov
xchg
inc
jle
mov
test
cmpsb
mov
xchg
mov
xor
fisttpl
add
rorb
add
add
add
lea
inc
cs
nop
adc
mov
pop
or
sbb
int
aam
xchg
loopne
inc
addr16
adc
pop
cmp
xchg
pop
frstor
fs
scas
pop
es
jle
movsb
mov
bound
stos
fstps
jo
pop
stos
cltd
mov
push
rcll
pop
push
scas
andb
add
add
add
lds
push
push
and
push
jne
xor
xchg
repz
addr16
pop
gs
sbbb
aaa
ja
ljmp
aaa
outsl
mov
lahf
cld
rcrl
aam
inc
sbbl
sub
jns
inc
add
adc
cmp
cmpl
aam
xor
lods
push
sub
add
add
add
or
lahf
inc
mov
out
sbb
mov
mov
dec
pop
xor
and
mov
popf
inc
js
and
aaa
iret
sub
js
and
xor
push
pop
xchg
lods
imul
outsl
and
sbb
xchg
sub
icebp
jg
adc
aad
cld
das
push
dec
mov
and
xchg
aas
push
push
add
add
add
rclb
push
aam
fs
jp
push
pop
or
stos
mov
push
movsl
clc
mov
xchg
fiadds
xchg
jmp
adc
xchg
xchg
mov
mov
test
pop
xchg
test
inc
cmp
int3
inc
cmp
pop
fistl
pop
inc
push
xchg
pop
lret
pop
outsl
push
test
sub
add
add
add
push
jne
jl
insl
pop
push
push
gs
fcoms
pop
xor
push
pop
arpl
pop
adcb
xchg
push
mov
pop
sub
pop
sbb
movsl
pop
inc
dec
popf
pop
inc
dec
xchg
pop
dec
dec
lea
xor
pop
mov
jge
push
jne
movsb
push
insl
pop
js
gs
adc
pop
repnz
push
pop
notl
pop
cmp
lds
push
push
mov
add
add
add
cmp
mov
dec
out
push
dec
out
int3
outsb
insl
bound
ds
std
dec
andl
inc
dec
push
pushf
cmp
fs
imulb
mov
and
sub
jne
or
and
add
sub
xchg
pop
and
in
jne
int3
add
aam
sbb
add
add
xchg
dec
out
out
out
rorl
lods
rorl
cmp
insl
jb
sbb
add
into
ficoml
xor
sar
dec
and
xor
push
packuswb
popa
pushl
push
xchg
mov
ja
inc
inc
xor
or
das
shlb
enter
jae
push
xchg
adcl
incl
add
add
add
add
movsl
mov
fisttpl
mov
xchg
sbb
push
les
jno
and
sub
cmpsb
sbb
xchg
mov
pop
loop
lods
pop
push
mov
push
rcll
pop
loop
lods
xchg
lret
inc
stos
xchg
lret
pop
cmp
loopne
push
push
or
scas
dec
push
sub
add
add
add
aam
movsl
clc
or
pop
or
cmp
or
movsb
dec
jmp
in
cld
adc
sbb
pop
mov
stos
mov
lds
cmpsb
test
ret
xchg
das
orb
pop
lods
mov
dec
jnp
pushf
mov
lea
std
idivb
jae
aas
cltd
mov
push
sbb
add
add
add
jae
mov
decl
add
aad
rcrb
jns
mov
int3
fstl
adc
jae
add
jbe
jns
addb
adc
push
aaa
push
pop
push
mov
adcb
push
jae
push
movsb
stos
loope
test
push
sub
add
add
add
pop
dec
dec
out
fcmovbe
cmp
repz
jmp
popf
and
push
push
sub
pop
sahf
mov
and
lret
sbb
push
or
push
sbb
sub
push
sub
cmovge
jg
xlat
cwtl
sbb
ds
dec
test
push
popf
sub
subb
add
add
add
outsl
mov
enter
cltd
jns
sbb
cmc
andl
std
pop
sbb
enter
cltd
cmp
leave
movsl
pop
test
loope
sbb
add
mov
and
xlat
cltd
mov
pop
rorb
fwait
dec
negb
and
fcompl
pop
jp
dec
jne
roll
add
add
inc
test
stos
hlt
popa
or
pop
jecxz
clc
or
mov
pop
add
or
jns
lahf
in
mov
pushf
lret
lds
pushf
lret
frstor
pushf
lret
aad
push
jmp
jae
dec
or
fistl
stc
sub
ret
in
or
clc
outsb
pop
and
jne
xor
imul
adc
and
fisubs
add
add
adc
dec
mov
pop
push
cmc
adc
flds
pop
addb
fbld
insl
cltd
out
hlt
or
mov
xchg
pop
lret
sbb
mov
mov
notl
lret
out
sbb
xlat
mov
add
mov
add
pop
inc
aas
test
int3
inc
add
add
add
add
outsb
jae
pushf
xchg
xchg
inc
daa
cmp
pop
xor
nop
mov
jae
mov
test
fwait
cli
int3
dec
cli
ret
arpl
add
jp
arpl
add
mov
std
jle
in
imul
sbb
sahf
lret
in
jb
lahf
xchg
mov
leave
jmp
push
test
add
add
add
sahf
mov
jl
insl
xchg
lret
cmp
inc
push
lahf
test
or
jae
cmpsl
ljmp
in
jo
push
add
stos
xchg
cmpsb
sub
test
punpcklwd
pop
icebp
imulb
imul
je
aam
xchg
xchg
add
push
add
inc
daa
xlat
add
add
add
jno
rorb
in
jno
sub
cmp
incb
cmp
cmp
cltd
sub
xor
fcoms
or
adc
repz
mov
les
jp
jecxz
jns
jge
enter
addr16
jae
push
ret
daa
xor
push
push
jle
addr16
jge
cmp
push
in
add
add
add
and
jnp
xor
push
mov
or
inc
mov
pop
mov
xchg
push
mov
xchg
jo
mov
jle
or
xchg
push
push
cltd
in
addr16
bound
add
pop
cmp
jle
cmp
pop
mov
cld
or
and
mov
pop
and
add
pop
jns
notb
xchg
xor
scas
int
cmp
dec
pop
inc
xchg
in
fmull
jnp
test
jp
ja
inc
add
pop
lret
sbb
and
movsl
push
xchg
sti
bswap
push
jl
ja
std
pminub
jl
ja
or
je
adc
ja
mov
dec
aas
ret
cld
sbb
add
add
add
pop
jno
jle
je
cmp
enter
push
adc
sub
ficomps
inc
xchg
pop
dec
shlb
js
xlat
xlat
push
aas
mov
jae
ret
jo
push
sbb
mov
cmpsb
stos
jp
inc
movsl
xchg
icebp
mov
jmp
mov
lret
xchg
add
add
add
mov
or
das
scas
push
and
add
pusha
push
arpl
sub
fcmove
pop
jnp
pop
loope
leave
shl
adc
jb
jae
sub
mov
bound
mov
dec
add
pop
test
add
out
in
hlt
jno
shrl
out
test
jne
adc
cmp
jb
add
add
add
in
and
jnp
xor
sahf
sbb
and
out
ljmp
scas
and
sahf
sbb
fldl
ljmp
lods
and
pop
mov
cmp
mov
fisttpll
push
jecxz
lahf
into
push
or
loopne
mov
sub
xchg
jecxz
sti
add
add
add
shr
test
int3
cmc
push
out
pushf
ret
fistpl
adc
mov
cld
nop
pop
stos
hlt
aad
test
dec
lds
dec
jns
pop
and
push
stos
mov
mov
mov
rcrb
dec
xor
bound
cli
mov
jp
cs
xchg
pop
stos
mov
aam
rcrl
add
add
sbb
pop
lret
inc
or
dec
filds
push
clc
mov
push
dec
or
pop
inc
out
cli
mov
jle
adc
cmc
scas
jmp
mov
out
or
fldl
inc
bound
icebp
out
mov
cmp
in
outsb
roll
xchg
orb
cmc
jbe
inc
add
add
add
test
add
xchg
xchg
inc
add
sbb
xchg
add
lret
inc
mov
pop
cmp
push
dec
cmp
push
dec
cmp
sbb
pop
mov
ds
adc
es
jne
or
jbe
add
jnp
fadd
test
icebp
sti
gs
fsts
mov
mov
jmp
pop
stos
dec
in
add
add
add
jle
xor
or
outsl
aam
pop
push
lahf
sub
fs
mov
inc
xchg
aam
adc
cmpsl
cmp
lret
xchg
ljmp
test
jb
xor
lahf
inc
dec
jns
nop
jp
ljmp
ret
clc
jno
and
test
inc
add
add
add
dec
jnp
call
imul
test
xchg
cwtl
stc
jp
call
cmp
and
addl
pushf
ljmp
ljmp
ret
push
xchg
lea
jmp
adc
dec
push
mov
push
stos
mov
jae
add
add
add
sbb
mov
mov
test
fdiv
es
ret
xchg
fistpl
xchg
sbb
mov
inc
xor
cmc
xchg
push
jmp
pop
stos
mov
into
in
sti
adc
mov
cltd
adc
sbb
clc
adc
sub
shl
and
jno
inc
ror
mov
add
add
add
pop
push
dec
outsb
inc
in
jle
test
add
cmp
mov
aaa
dec
fmuls
aad
dec
cs
lea
test
add
sbb
cs
dec
jle
test
add
mov
dec
rcl
aad
dec
out
in
insl
jle
addl
adc
add
mov
js
aam
dec
add
add
add
scas
inc
sub
pop
adc
add
sbb
mov
pop
and
aam
mov
cld
pop
mov
push
nop
in
sbb
xlat
pusha
pop
outsl
test
sbb
xlat
insb
call
pop
and
dec
pop
lahf
test
mov
sbb
loop
xchg
nop
mov
push
pusha
dec
enter
add
mov
add
add
fbstp
jb
mov
or
push
push
mov
xor
cmp
push
and
dec
cmpsb
and
push
nop
pop
sbb
lret
inc
add
jecxz
jge
or
add
mov
cmp
repz
push
lea
push
pop
push
lret
out
xchg
cmp
add
add
add
jge
and
push
jno
mov
daa
jae
jae
and
in
andl
push
mov
bswap
les
push
lret
dec
popa
mov
mov
mov
test
out
setno
imul
xchg
std
decb
call
stos
inc
jne
push
movsl
inc
mov
add
add
add
and
adc
mov
inc
cmp
jp
jge
xchg
xor
add
xor
out
test
xchg
cmc
pushf
ret
repz
jae
fnstcw
dec
stos
push
fldenv
push
clc
into
icebp
arpl
or
aam
or
popf
jp
pop
int3
lock
mov
stc
out
pop
mov
add
add
add
or
outsb
aam
int
mov
push
jb
fs
inc
xchg
mov
cmp
stos
ja
fsub
mov
sarl
mov
and
test
dec
movb
push
xor
add
cs
fcoms
adc
lcall
outsb
shlb
arpl
xchg
mov
out
in
or
sub
lret
add
add
add
adc
outsb
and
jbe
leave
cld
pop
rcr
jb
xor
lods
arpl
shrb
xchg
pop
mov
jge
mov
bound
test
in
lea
data16
pushf
fimuls
aam
enter
jle
jmp
fistl
es
test
jno
fcompl
mov
jmp
add
add
add
mov
xlat
jmp
data16
call
mov
push
and
mov
lret
push
add
aam
test
or
rclb
mov
push
lahf
inc
je
mov
bound
xchg
jecxz
fs
push
lret
inc
inc
lahf
ret
mov
loope
jne
mov
cmp
mov
add
add
add
push
and
lea
sub
pop
out
dec
and
jnp
jae
outsl
mov
lret
mov
call
jmp
stos
xor
pop
adc
inc
cltd
jg
dec
popf
jle
push
andl
cmpsl
inc
mov
add
mov
mov
pop
xchg
andl
add
lds
adc
rolb
adc
mov
add
sub
test
lret
mov
outsb
lret
sub
gs
dec
or
lahf
call
outsl
lock
xlat
fstpl
sub
outsb
and
dec
cli
pop
add
pop
jne
adc
dec
sub
pop
jl
pop
mov
cmpsl
inc
add
add
add
xchg
pop
cmovs
push
push
dec
lret
mov
mov
lock
or
xchg
mov
leave
data16
mov
or
adc
lret
mov
pop
ss
and
pusha
lret
or
mov
mov
popf
inc
lret
addb
inc
adcl
inc
orl
sbb
jbe
mov
test
add
add
pusha
aam
xchg
lea
ja
pop
aam
mov
les
pop
mov
jnp
xchg
jmp
and
iret
and
pop
mov
and
xchg
into
cmpsb
pop
adc
jmp
adcb
or
test
fimull
mov
pop
jbe
daa
xor
sahf
jne
rorl
and
fsts
lods
add
add
add
leave
push
out
or
and
test
call
sbb
mov
popa
or
sbb
mov
push
xlat
xchg
mov
popf
push
ljmp
cmp
push
repz
cmp
fstl
aas
pop
pop
mov
dec
fcoms
lds
xor
mov
iret
add
add
add
aas
out
sub
cmp
add
incl
xor
rcr
adcl
and
test
mull
pop
out
loop
clc
adc
jge
mov
inc
cmpl
push
clc
adc
jl
and
sbb
or
pushf
incl
add
add
add
fcompl
adcl
jge
arpl
add
mov
mov
inc
sub
push
clc
adc
sbb
inc
popa
pop
push
rcrl
sbb
jo
jbe
pop
inc
sar
mov
or
pop
xchg
xchg
outsl
movsl
jne
add
pop
idiv
rorb
add
add
add
xchg
pushf
inc
jae
pop
inc
leave
mov
nop
xor
push
pop
std
jb
inc
mov
xchg
and
lret
xchg
adc
mov
push
lret
add
lar
lds
in
inc
mov
mov
pop
xchg
jb
lds
stc
adc
xlat
sbb
pop
aam
into
or
sahf
andl
add
add
add
rcrl
addb
aaa
mov
xchg
pop
and
ficoml
sahf
lea
push
loopne
mov
pop
aam
fsubrs
cmpsl
xchg
cmp
test
cmp
jbe
pop
inc
pop
fs
push
push
pop
enter
dec
in
jge
jmp
and
fsubp
sbbl
jmp
add
lahf
into
add
add
add
pusha
sub
jmp
test
add
ret
push
add
pop
lahf
push
or
call
push
and
cmp
push
sar
and
lahf
inc
jo
imul
add
jecxz
inc
loop
ret
fs
call
andl
mov
ljmp
add
rcrl
and
add
add
add
pslld
pop
mov
jecxz
jns
xchg
and
lahf
mov
mov
xlat
aad
pop
push
and
or
xor
bound
pop
or
sub
xchg
pop
xchg
adc
xor
mov
push
mov
sbb
outsl
int
or
mov
dec
test
jns
add
add
add
insb
loop
andb
jno
xor
mov
je
in
ja
icebp
pop
push
test
dec
out
addb
test
push
lret
add
fld
add
pop
push
stos
mov
jmp
dec
paddb
dec
int
invd
lret
add
or
orb
enter
push
cmpl
add
or
add
ret
sbb
xchg
hlt
mov
or
pop
loope
push
mov
adcb
lret
mov
ffreep
pop
lret
adcb
inc
mov
push
adc
pop
and
pop
movsb
and
xchg
mov
jb
mov
jmp
in
imul
jp
aam
stos
notb
test
add
add
add
cmp
stos
pop
or
fstpl
aam
test
sub
jmp
push
aam
adc
and
mov
add
xchg
pop
test
fxch
pop
cmpsl
lahf
mov
stos
movsb
andl
decl
pop
fcoml
shll
add
and
xor
in
pop
inc
sbb
mov
pop
hlt
add
add
add
ret
adc
sarl
cmp
sahf
pop
popf
inc
clc
cli
popa
insb
mov
cmp
scas
mov
clc
iret
jno
jno
inc
sbb
out
js
arpl
add
push
clc
jmp
pop
dec
jmp
iret
bound
xor
xchg
dec
or
push
and
cmp
mov
in
outsl
dec
xor
jnp
pop
add
add
add
add
pop
xor
cltd
mov
pop
inc
sub
push
int3
mov
out
pop
and
push
pusha
pop
inc
mov
pusha
and
xchg
pop
cmp
pop
seto
sub
jl
and
loopne
adc
faddl
push
in
push
aaa
fnstcw
pop
push
pop
pop
add
add
add
or
in
test
push
adc
dec
pop
sbb
in
lea
lret
lds
pop
inc
push
aas
pop
inc
xchg
js
mov
cltd
dec
adc
cli
leave
orb
xchg
mov
lret
add
pop
ja
or
push
lret
incl
pop
push
andb
ds
pop
cmp
jne
add
pop
cmp
adc
add
add
add
push
sbb
and
cli
ficoms
dec
inc
xchg
mov
mov
xchg
pop
lret
lock
mov
lahf
mov
push
aam
xchg
dec
lea
and
or
adc
jmp
xchg
scas
test
dec
mov
in
inc
out
xchg
lods
jle
out
mov
push
aam
add
add
add
inc
mov
jb
popf
sub
xchg
pop
cmpsl
insb
cmpsb
dec
aam
xchg
push
cmp
iret
imul
pop
lea
orl
mov
add
push
lcall
add
iret
mov
push
push
and
mov
mov
or
dec
mov
mov
repnz
add
add
add
cmp
cli
iret
mov
push
call
and
hlt
and
stos
xor
jecxz
lahf
test
fcoms
fcmovbe
daa
loope
jge
loope
subl
shr
push
lret
addr16
and
loopne
lea
lea
addr16
in
xchg
mov
push
mov
cmpsb
jecxz
out
add
add
add
inc
in
and
hlt
dec
clc
xchg
push
jle
sahf
ret
jmp
jae
fstl
clc
sbb
add
pop
pop
dec
dec
popa
outsl
dec
mov
dec
clc
cmp
adc
or
cld
adc
dec
clc
push
jmp
out
ret
mov
repz
dec
out
orl
movsb
aam
sar
push
jge
mov
fucomp
push
xorb
add
add
add
inc
stc
into
push
ds
in
jne
cmp
fcmove
test
push
push
jle
push
adc
imul
pusha
lcall
mov
out
insl
xchg
push
pop
push
aas
into
pop
mov
jbe
push
mov
cmp
adc
add
and
mov
add
add
add
or
mov
xchg
push
xor
or
call
call
addr16
dec
aam
and
aam
cs
inc
dec
aam
push
push
dec
ss
in
adc
aam
adc
aam
test
insb
mov
aam
clc
jge
pop
out
dec
lret
and
dec
aam
roll
sub
mov
mov
dec
aam
add
add
add
and
jmp
scas
dec
jb
add
scas
ret
mov
mov
push
or
mov
lds
xchg
jnp
decl
xchg
lea
pop
xor
jge
lods
xor
add
les
xor
test
lea
call
or
loopne
add
add
add
cmc
lret
jmp
fmull
iret
jno
cli
iret
test
call
mov
push
xlat
xor
test
test
sar
mov
xorl
shlb
xorb
dec
dec
or
push
stc
aad
add
int
push
mov
add
add
add
mov
in
sbb
cmp
sbb
add
sahf
or
aas
clc
sbb
pop
mov
imul
add
aam
adc
aas
test
push
adc
mov
cmp
inc
lds
ss
push
jb
pop
mov
xchg
push
xchg
aas
test
aas
clc
push
pop
push
mov
mov
jbe
dec
lods
add
add
add
testb
jmp
inc
into
add
js
dec
ja
lret
jle
dec
jne
or
test
dec
pop
fs
mov
fs
dec
bound
je
add
inc
add
dec
cmp
jg
adc
dec
dec
mov
jnp
fs
dec
mov
arpl
jg
aam
dec
in
insb
fs
in
add
add
add
movsl
inc
mov
ror
xchg
and
loopne
scas
jb
xchg
or
or
aam
jb
jmp
adc
aam
inc
fisubl
fsubrs
in
mov
cmpsl
inc
sbb
in
test
jns
aam
push
xorb
xor
cwtl
xor
ss
mov
fcmovbe
mov
add
mov
aaa
data16
push
add
add
add
repnz
or
push
jns
divb
pop
and
xchg
mov
aam
sbb
dec
stos
add
jp
pusha
inc
jmp
sahf
dec
shr
xor
aas
aam
and
push
adc
call
jmp
movsl
pusha
cmc
sar
push
dec
jp
jnp
lahf
in
call
int3
add
add
add
fs
enter
jb
sbb
mov
sub
js
test
mov
jge
or
outsl
aad
sub
test
sti
xchg
xor
dec
gs
or
mov
cltd
out
mov
push
popa
and
imulb
ret
xchg
adc
add
xchg
jae
lds
add
add
jmp
jmp
in
pop
adc
in
pop
add
push
pop
dec
push
sub
adc
lcall
jb
mov
push
cmpsl
dec
popf
aad
adc
popl
movl
imul
and
pop
push
pop
and
push
in
jae
dec
pop
dec
dec
cmp
lea
xchg
sbb
ret
add
add
add
or
pop
adc
pop
incl
inc
cld
out
cld
cld
fwait
cld
dec
push
pusha
imul
sbb
lretw
sarl
test
jl
push
inc
jl
pop
ficomps
push
mov
inc
mov
inc
jp
dec
sub
inc
addb
jmp
or
add
cmc
dec
addb
add
add
push
dec
test
and
pusha
inc
and
sub
sbb
dec
and
sbb
test
cmc
xorl
pop
cld
stos
ljmp
stos
add
pop
and
push
aad
mov
mov
add
cli
jo
inc
ss
test
push
mov
jmp
pop
rcrb
add
add
add
pop
add
jmp
bound
in
aam
loop
ss
add
add
loopne
test
cmp
sub
out
aad
clc
add
call
add
xchg
add
inc
mov
jp
je
jp
add
add
add
add
add
and
mov
jo
ljmp
jl
js
pop
add
movsl
repz
pop
mov
lret
aam
js
pop
dec
xchg
popa
jne
or
and
xchg
mov
pop
sbb
mov
xor
in
rclb
pop
add
test
and
and
and
test
rcrl
add
add
add
add
int
add
loop
inc
xor
into
xchg
test
pushl
xor
add
lock
cmpsl
cli
pop
or
xchg
insb
test
add
cmpsl
mov
xchg
pop
lret
add
cli
or
addb
pop
mov
mov
mov
mov
jmp
out
mov
lret
aad
add
add
add
add
lret
push
or
pop
nop
popa
xor
incl
xchg
das
mov
stc
inc
push
push
movsl
ds
or
popf
iret
ret
pop
mov
leave
inc
push
mov
inc
imul
xor
push
loop
shl
xchg
mov
push
ss
lret
dec
pop
push
push
dec
pop
push
and
mov
and
and
add
add
add
mov
loope
xchg
push
out
push
out
or
jo
or
sub
xchg
mov
scas
xchg
pop
and
xchg
xchg
ljmp
and
pop
inc
fucomp
xchg
pop
and
das
mov
and
adc
ljmp
aam
xchg
loopne
jg
or
push
inc
aam
xchg
inc
fsubr
popl
and
flds
daa
add
add
add
add
enter
or
add
iret
call
int3
cmp
mov
call
xor
mov
aaa
cmp
jl
lahf
lock
push
sub
aaa
je
mov
test
xchg
int3
xor
call
mov
jne
lea
add
add
add
lea
loopne
xor
fisttpl
int
mov
inc
test
neg
sahf
movsl
push
gs
push
popa
jp
dec
rcrb
inc
xorl
dec
sbb
clc
inc
inc
lcall
and
imul
jne
lret
dec
add
jmp
cli
cmpsb
jb
cmp
push
icebp
add
add
add
test
cmpsl
or
repz
add
dec
adc
jnp
or
iret
dec
inc
jp
push
pop
loopne
or
arpl
push
xor
add
xchg
mov
mov
push
push
dec
pop
push
push
dec
dec
push
mov
push
lods
mov
adc
inc
bswap
ss
mov
add
jne
mov
xchg
jg
into
mov
add
add
xlat
mov
ret
mov
jae
lret
jmp
push
rcll
fbstp
ficoml
inc
lret
ljmp
pop
pusha
notb
inc
and
aas
sbb
les
push
scas
inc
cmpsl
lods
shrb
mov
aam
out
adc
fldt
add
add
add
aas
dec
leave
adc
inc
aad
xlat
orb
push
stos
scas
inc
loopne
xor
ret
jmp
mov
mov
sbb
xlat
ds
mov
popf
pop
dec
out
pop
dec
out
dec
dec
out
or
adc
dec
mov
out
data16
adc
and
les
pop
je
push
push
xor
lods
sbb
add
add
add
push
es
lea
std
inc
xor
jbe
adc
sti
jecxz
jne
fnstenv
nop
pop
inc
aam
es
push
enter
ret
or
jp
imul
int3
adc
lea
mov
push
das
mov
xchg
pop
xor
jae
call
inc
aam
xor
jnp
add
add
add
ss
ret
xchg
add
jge
mov
lea
popa
lret
frstor
pop
lret
int
pop
lret
lds
sub
xchg
lock
xchg
in
add
jno
jo
jb
rcl
pusha
fcmovbe
xor
cmp
in
loopne
and
loop
dec
jno
mov
roll
add
add
add
add
pushf
imul
je
lret
int
imul
mov
and
xchg
aad
loopne
pop
cli
dec
xor
adc
ret
mov
popl
lret
lcall
in
outsb
mov
add
ja
or
rolb
cmp
xchg
pop
dec
loopne
pop
fimull
nop
fiaddl
arpl
add
add
add
add
xchg
mov
mov
dec
lods
addb
mov
dec
mov
dec
dec
mov
fimull
inc
lret
inc
lret
sbb
xor
into
das
jmp
movl
daa
mov
dec
shld
pop
and
xchg
test
jmp
cltd
pop
and
add
add
add
adc
and
rcrb
stos
push
fs
jmp
push
add
jmp
ss
test
or
sub
xchg
subb
jbe
jle
jbe
xchg
sub
lock
aad
xor
inc
test
adc
or
pushf
jo
add
pop
or
pop
ja
add
or
add
add
add
cmp
lret
lahf
dec
xor
test
aam
aam
insl
lahf
in
lds
or
mov
aam
add
mov
call
insl
lahf
in
movsb
call
int3
fs
call
andl
push
sub
lahf
sbb
sti
ja
mov
pop
sub
add
add
add
or
inc
test
cltd
test
sub
or
jg
rolb
cmpsb
pop
cmp
out
aam
scas
cmpsb
pop
inc
lcall
call
xor
xchg
adc
push
mov
and
data16
pop
push
test
and
xchg
xor
mov
xor
sub
add
daa
jo
pop
dec
test
sti
or
js
xchg
inc
aaa
push
xchg
pop
mov
add
xchg
push
mov
pop
lret
jp
xor
out
lret
push
xchg
jnp
sub
mov
mov
add
int3
jns
mov
jge
xchg
inc
sub
std
jl
nop
testl
std
xchg
pop
or
inc
iret
jb
pop
mov
sti
roll
xchg
notb
add
inc
mov
xor
sbb
or
adc
xor
jnp
adc
add
and
xchg
js
js
cmp
out
xor
jns
sbb
jge
xlat
jb
xor
and
mov
cmp
mov
insb
push
mov
loop
pop
test
push
ret
xchg
pop
and
push
ret
add
add
add
xchg
pop
dec
clc
pop
data16
call
in
imul
repz
sub
sub
xchg
cmp
xchg
xchg
imul
cmp
bound
and
movsl
ficomps
mov
push
dec
mov
mov
push
push
jae
les
call
add
add
fdivr
jge
push
out
add
add
add
in
push
loopne
inc
mov
jl
add
psubd
lahf
sti
xor
maskmovq
testl
aad
adc
aam
push
mov
lahf
jge
mov
push
mov
jg
pop
mov
jno
push
or
xchg
mov
pop
ljmp
adc
rorb
pop
testb
add
add
sbb
mov
sub
into
loop
clc
testb
push
jle
inc
mov
sti
pop
sbb
cld
nop
gs
mov
sub
jmp
in
push
jp
mov
pop
sbb
in
pop
mov
ds
xor
je
xor
inc
fisubl
pop
push
xchg
add
add
add
add
add
inc
inc
ret
enter
in
mov
in
popl
stc
push
aaa
icebp
testl
add
add
push
gs
adc
xchg
cli
mov
sub
inc
jp
ss
or
cli
decl
fisttpl
call
add
daa
xor
mov
jbe
cmpb
add
fcom
inc
fisttpl
inc
pop
inc
push
inc
pop
inc
and
ret
insl
jb
decl
mov
das
aam
fmull
sbb
push
ds
jmp
out
fwait
jae
pop
and
xlat
cmp
lahf
in
lea
in
pop
mov
xor
lea
sbb
aam
iret
and
add
add
test
hlt
lea
sbb
xlat
mov
mov
and
lcall
adc
and
das
xor
andb
and
ja
cwtl
mov
das
aam
ret
mov
push
cmp
mov
sub
and
jg
fnstsw
xor
add
sub
mov
xor
mov
xchg
cwtl
and
aam
add
add
add
arpl
mov
cmp
inc
mov
cmp
incl
xor
mov
or
enter
mov
adc
data16
shrl
mov
xorl
xchg
push
push
jb
leave
shll
shrb
bound
roll
mov
decl
sbb
in
push
xchg
xor
add
or
add
add
lea
and
nop
push
and
cmp
and
mov
and
cs
and
xchg
sbb
dec
jbe
xchg
jge
addr16
fldl
sub
add
sti
jnp
ret
inc
cltd
mov
jecxz
daa
push
mov
push
and
push
jo
add
int
add
sbb
cmpb
add
add
add
adc
push
icebp
push
xor
cltd
jle
xchg
and
stos
mov
stos
cmp
lds
js
std
fidivrl
je
add
addb
xchg
test
rolb
xchg
test
dec
repnz
xor
jo
add
subb
xor
xor
fstpl
sahf
xor
add
add
add
popf
xor
jmp
fimull
aam
mov
adcb
test
dec
aam
sub
es
jmp
mov
fwait
notl
mov
xchg
iret
das
bound
test
mov
out
test
push
sbb
insl
lods
call
jl
cmp
mov
add
add
add
sub
xchg
pop
test
push
sbb
and
mov
jle
or
daa
sbb
ljmp
int3
mov
mov
add
pushf
mov
stos
leave
push
stc
outsb
aas
js
and
mov
or
jno
xor
lahf
push
inc
mov
mov
and
lahf
inc
xchg
add
add
add
addl
js
xor
call
aaa
sub
call
pop
xor
or
push
ret
movsb
mov
aaa
cmpsl
cmpsl
mov
push
and
inc
sbb
add
lea
cwtl
into
cmpsl
adc
xlat
daa
jbe
popf
setno
and
xor
mov
and
xchg
and
add
add
add
or
sub
scas
mov
mov
fcompp
lcall
mov
jmp
or
push
inc
in
mov
and
or
roll
out
aam
or
inc
ds
pop
ja
movsl
cwtl
pop
sbb
pop
mov
add
ljmp
add
sbb
insb
cmp
aaa
dec
sbb
rclb
cwtl
mov
add
add
add
jbe
inc
mov
cmpsb
inc
mov
push
lret
add
jp
dec
rolb
movsl
cmp
cmpb
ds
pushf
cld
outsl
aam
xchg
or
in
push
das
push
jnp
adc
movl
lds
inc
mov
jo
jnp
addb
js
adc
adc
jg
clc
cmp
mov
adc
add
add
add
cs
fldl
lods
aad
xorl
dec
and
shrl
adc
insb
shlb
jb
jmp
add
in
jmp
pop
add
aam
shrb
lret
clc
xchg
pop
and
or
pop
or
mov
jb
jmp
aam
mov
add
jmp
add
imul
add
testb
dec
sbb
incl
xor
mov
insl
rolb
aaa
lahf
js
scas
pop
or
mov
lods
adc
mov
mov
inc
aad
push
pop
lcall
jecxz
int3
lea
les
sub
mov
pop
dec
lahf
mov
add
insb
cs
push
clc
ret
mov
xor
clc
dec
sbb
add
push
int3
mov
push
movsl
xchg
popa
sbb
loop
sbb
popa
loop
movsb
inc
mov
mov
jg
and
fsts
sbb
das
test
sbbb
movsl
mov
push
adc
cmpsb
cmp
or
mov
add
add
pop
clc
adc
dec
mov
icebp
adc
cmpsl
in
sub
add
push
and
addb
lahf
push
and
push
mov
imul
xchg
cmp
mov
inc
mov
mov
add
pop
lret
add
mov
jl
pop
lret
add
shll
mov
add
add
add
add
add
add
loopne
sub
sub
loopne
cmp
dec
pop
cmp
mov
flds
xchg
jle
jg
pop
lret
xchg
sub
sub
jno
xchg
pop
lret
xchg
call
jle
sbb
cmp
loopne
stos
sub
test
ja
sbb
adc
jae
jmp
xchg
int
arpl
add
add
add
jb
jmp
add
cs
std
addl
fnstcw
lcall
xchg
call
jb
jmp
lds
lock
jmp
sbb
test
pop
mov
and
or
test
add
out
adcl
xor
add
add
add
xor
call
orb
add
adc
nop
lea
mov
jp
or
inc
fmuls
dec
adc
mov
sbb
data16
fstl
add
add
mov
push
aam
data16
mov
push
jle
mov
cmc
adc
mov
add
add
stos
fadds
xchg
js
iret
mov
incb
or
dec
and
or
sub
seto
cmp
xchg
mov
adc
fldenv
test
adc
push
and
dec
xor
jnp
jge
test
leave
mov
xchg
imulb
bound
jge
add
add
add
pop
sub
popf
pop
add
enter
push
sar
mov
or
rcrb
add
pop
lret
add
je
lret
add
std
lret
jl
cmpsb
int
inc
into
mov
adc
add
pop
lret
mov
push
pop
sahf
sub
pop
cwtl
jno
jl
pop
lret
mov
push
aad
jg
adc
add
add
add
outsb
adc
outsl
cmp
lret
add
mov
jnp
pop
lret
mov
fs
xchg
xor
mov
mov
mov
fisttpll
mov
and
jecxz
cmp
jmp
or
pop
and
or
aam
mov
xchg
lods
jge
pop
and
dec
rolw
add
add
add
cmpsb
pop
sbb
dec
lret
cmc
jp
aam
fmuls
out
inc
push
out
or
mov
and
hlt
ljmp
pop
and
push
pop
and
xchg
sub
insb
cmp
and
sbb
add
adc
cwtl
pop
or
mov
push
rorb
sub
add
add
lods
mov
and
negl
and
call
rcrl
negl
repnz
lahf
dec
shrb
adc
and
mov
lods
mov
push
loop
adc
fwait
lods
mov
sar
push
adcb
push
push
nop
jns
or
std
leave
xchg
push
jae
add
add
add
add
mov
push
mov
cs
mov
dec
jae
mov
mov
jg
and
dec
test
mov
pop
and
xchg
cmp
jmp
divb
aam
out
cmpsl
mov
subl
aam
xchg
mov
std
mov
das
aam
scas
adc
shrl
popa
std
orl
push
add
push
xchg
add
add
add
dec
cmp
add
xor
test
into
jno
pop
int3
add
mov
mov
std
lret
divb
add
pop
pop
xchg
mov
arpl
add
std
lret
rclb
dec
mov
ret
out
adc
sbb
pusha
fiaddl
xchg
pop
and
mov
and
add
add
add
cmpsb
mov
ljmp
lods
cltd
and
ja
adc
pusha
in
add
aaa
fsubrs
jp
notl
mov
sbb
xor
pop
sub
cmp
das
js
jmp
test
pop
lea
bound
and
adc
pop
leave
rolb
add
add
add
mov
jmp
mov
call
mov
jb
pop
sti
or
and
cltd
cmp
lods
xchg
leave
scas
loop
bound
push
fwait
adc
and
add
lahf
push
mov
inc
or
mov
xchg
cwtl
adc
and
ret
arpl
mov
inc
add
add
add
inc
setb
mov
adc
out
and
sub
test
rcl
inc
shr
xchg
imul
push
mov
in
addr16
push
push
xchg
mov
repz
and
xor
xor
pop
mov
xchg
mov
sub
add
add
add
xchg
xchg
fisttpll
mov
scas
xchg
movsl
test
cmpsl
and
push
stos
jp
push
addr16
movsl
in
xchg
ror
mov
jae
inc
or
sub
mov
mov
test
test
subb
adc
xlat
xor
pop
xchg
push
adc
xchg
cmp
or
or
fildl
and
add
add
mov
pushw
xchg
pop
push
sarl
push
jl
stc
lret
incb
lcall
and
push
push
jl
pop
lret
add
push
js
pop
lret
mov
ljmp
mov
push
adc
in
jo
repz
or
pop
push
xchg
pop
adc
ljmp
mov
xor
add
add
add
in
push
minps
xchg
adc
clc
and
xchg
mov
sbb
adc
cli
pop
sub
cmc
sbb
sub
adc
jmp
and
iret
ret
and
jo
push
sub
adc
jbe
or
pop
lret
fldt
aam
sbb
cmp
sub
add
add
add
push
je
or
pop
jns
mov
loopne
dec
push
out
dec
push
out
dec
push
out
add
aam
rcrb
inc
ja
ljmp
leave
aad
scas
jl
cmp
lret
adc
inc
adc
aam
push
mov
add
lret
cmp
push
and
add
add
add
and
ljmp
test
nop
pop
xchg
subl
add
or
xchg
sbb
call
iret
call
mov
xchg
add
fistpl
roll
test
inc
out
mov
lds
lret
and
xor
sub
and
sbb
xor
add
leave
push
test
mov
fdivrl
test
sbb
cmovle
sub
stc
cmp
add
xchg
dec
adc
fsubrs
jl
cltd
lock
or
xchg
mov
add
fdivl
stc
push
cmp
add
pop
gs
pusha
int3
add
dec
mov
lret
inc
add
add
add
lret
inc
fimull
jl
cmc
lret
mov
jns
pop
aam
xchg
nop
sbb
adc
sarb
notb
adcb
add
jg
sbb
dec
in
adc
into
repz
mov
hlt
lret
sti
sti
xor
fnstcw
mov
addb
jl
pop
aam
xchg
rorb
lret
inc
lret
inc
add
add
add
fimull
pushf
xor
pop
xor
aam
sbbl
cli
imull
fsubs
das
add
ljmp
jno
clc
aam
test
lret
mov
bnd
clc
aam
mov
jb
pop
repnz
and
arpl
mov
bound
add
add
add
imulb
les
test
mov
and
enter
jne
jp
or
lcall
push
add
cmp
push
popf
add
aam
inc
cltd
add
mov
sbbl
enter
js
pusha
add
orl
pusha
movsb
add
pushl
orl
add
push
push
inc
mov
stos
xor
cmp
and
loope
leave
ljmp
call
sbbl
cmc
jecxz
leave
jo
and
xchg
xor
rorl
fisubs
pushf
int
ja
adc
sbb
mov
sbbl
leave
sub
aam
add
mov
cltd
push
add
cmp
fsubrp
in
fisttps
push
add
add
or
in
fistpll
add
add
in
mull
test
lret
push
cld
push
jmp
fadds
out
aas
cltd
movsl
lock
pop
lahf
ss
pusha
xchg
pop
dec
and
and
xchg
pop
lret
add
orl
push
js
movsb
test
sbb
pop
lret
jl
mov
add
add
xchg
mov
xchg
push
lret
add
ret
out
adc
add
xchg
pop
lret
jp
sub
repnz
mov
or
rcrl
cmp
pop
leave
mov
test
jnp
sub
repnz
sbb
addb
jp
mov
add
or
add
add
push
sbb
inc
and
mov
aad
insl
mulb
jmp
add
sbb
dec
loop
push
pop
push
loopne
push
xchg
and
ja
das
jmp
push
int
jb
ljmp
cmp
pop
test
inc
adc
sbb
inc
lret
mov
pop
aam
adc
push
adc
pop
enter
call
adc
das
jmp
pop
or
jmp
add
add
add
xchg
pop
insb
pusha
or
das
add
or
add
adc
call
popf
enter
mov
xorl
and
arpl
pushf
jbe
pop
add
or
mov
das
xor
test
mov
lcall
xor
xor
xor
stos
mov
jl
js
sahf
mov
xor
add
add
add
push
mov
xlat
push
sahf
mov
xchg
mov
adc
sub
cmpsl
std
sbb
loope
nop
test
aaa
sub
aad
mov
add
adc
clc
pcmpeqb
xchg
test
and
mov
pushf
sahf
pop
add
add
add
lcall
jmp
pop
pop
pop
xchg
mov
cmp
je
clc
fcompp
pop
loop
popa
adc
pop
pop
adc
push
arpl
dec
cmc
pop
out
or
lret
jle
jl
add
adc
roll
xchg
addb
lret
aad
outsl
adc
or
lret
shl
inc
das
sub
mov
es
lret
add
add
add
pop
mov
ret
into
stos
dec
push
xchg
pop
js
mov
mov
and
pop
lret
add
iret
cmc
jno
shr
xchg
rolb
pop
xor
cltd
pop
jp
test
lret
push
and
or
xchg
cwtl
adc
or
fs
shll
call
xchg
mov
mov
add
add
add
orl
insb
cmp
xor
js
sub
push
adc
addr16
push
out
jle
out
xchg
cmp
and
test
add
mov
movsl
test
xor
cmp
loopne,pt
pop
sub
add
sahf
xor
push
add
add
add
or
push
cmp
fildl
xchg
pop
adc
ss
cmp
sahf
nop
or
and
pop
inc
xor
stos
lock
dec
or
cwtl
push
call
push
and
incb
add
mov
add
int3
inc
mov
mov
push
mov
push
and
add
add
add
repz
sub
out
data16
pop
loopne
les
je
lret
push
pop
sbb
dec
fs
inc
repz
jmp
jmp
pop
cmp
ds
lret
inc
push
push
jmp
imul
sbb
add
insb
repnz
ja
mov
lahf
and
jge
xor
mov
and
test
push
inc
cltd
test
sldt
add
add
nop
mov
or
mov
xchg
and
test
xor
xchg
pop
nop
adc
xor
pop
or
add
inc
and
jge
pop
addb
mov
xchg
pop
cs
push
cmpb
pop
push
jnp
stc
lret
xor
rcll
xchg
push
ret
test
ds
lret
add
add
add
into
jl
incl
sahf
push
mov
push
pop
lret
jl
sti
inc
rcll
mov
int3
add
fldl
inc
mov
pop
and
sub
xchg
jno
pop
and
dec
lods
lret
paddq
pop
jbe
in
sub
nop
dec
sbb
jbe
cmp
popf
mov
xor
add
add
add
jns
out
stos
sbb
mov
fwait
xchg
sub
test
jmp
rorb
and
xchg
pop
push
mov
adc
mov
push
mov
pop
int
xchg
loop
pop
je
mov
aam
cmp
icebp
xchg
pop
jae
lret
sbb
into
adc
and
mov
mov
mov
add
stos
lods
jle
and
sub
push
roll
add
add
jb
mov
mov
push
mov
mov
nop
pop
add
leave
push
sbb
inc
sub
push
pushl
clc
cmp
mov
in
cmpl
xorl
call
or
ret
shrb
test
and
arpl
jge
jae
sub
sub
insl
lahf
ret
jb
add
add
add
sbb
xor
sahf
inc
adc
cwtl
and
pop
or
stc
iret
adc
mov
mov
add
xlat
xchg
pop
orl
cli
pop
popa
bound
push
mov
or
cmp
icebp
add
mov
adc
xchg
dec
mov
dec
cld
pop
mov
add
add
add
mov
add
push
outsl
loop
test
or
lret
add
je
sahf
or
bnd
or
jecxz
jle
lret
dec
int3
add
addr16
sbb
lock
mov
test
mov
imul
inc
pop
mov
sldt
add
add
mov
push
pop
lret
js
repz
int
jg
adc
jbe
xchg
pop
cs
aam
cmp
push
dec
fnstcw
dec
and
xchg
pop
ds
cmp
sub
inc
data16
loopne
push
sub
ljmp
dec
xorl
arpl
pop
inc
lret
jmp
flds
mov
es
cmc
add
add
add
fwait
sbb
xchg
aam
push
scas
js
push
inc
out
pop
and
movsb
and
xor
paddq
xchg
mov
call
sahf
decb
adc
and
mov
repnz
test
and
mov
pop
jnp
jmp
pop
jb
add
add
add
test
test
imul
add
jmp
out
je
js
and
pop
and
das
mov
add
inc
xlat
clc
add
xorl
repz
sub
shl
mov
ret
hlt
add
xlat
cs
hlt
adc
pop
pop
or
and
or
out
and
add
add
add
xchg
fcoms
daa
ret
shlb
xchg
mov
add
in
add
and
xchg
data16
xchg
push
xor
xchg
data16
xchg
push
xor
xchg
data16
xchg
xor
xchg
out
mov
sbb
notl
sub
notl
add
add
add
aam
out
adc
and
add
and
adc
add
add
add
xchg
adc
mov
add
add
int
xchg
test
clc
aas
cwtl
jns
jge
incl
mov
xchg
or
adcl
cmc
stos
inc
stc
lret
add
add
add
add
mov
and
sub
lret
add
scas
jmp
push
and
insb
cs
out
mulb
and
adc
xor
adc
and
adc
mov
push
insl
in
xchg
adc
mov
xchg
adc
mov
push
insl
out
xchg
adc
mov
xchg
adc
mov
add
add
add
adc
mov
xchg
adc
mov
push
insl
jecxz
adc
mov
xchg
adc
xor
adc
and
add
xchg
push
testb
out
int
mov
ljmp
dec
jmp
push
or
inc
xlat
clc
arpl
mov
add
add
add
mov
pop
out
js
int3
add
inc
subb
out
xor
sub
and
pop
or
mov
lds
shll
or
push
sahf
xchg
shl
nop
aad
popf
cwtl
xchg
or
xchg
pushw
mull
mov
add
jle
inc
daa
add
in
dec
bsf
add
pop
add
add
add
xchg
dec
lock
stc
rclb
sub
sbb
addr16
outsl
add
jg
aad
add
jmp
inc
in
bsf
sub
mov
xor
and
daa
add
xor
sub
push
mov
and
pop
mov
xchg
loope
sub
add
add
add
push
mov
mov
inc
cmp
repnz
out
sahf
pop
cmp
flds
mov
hlt
jg
mov
xor
lock
mov
testb
ljmp
cltd
push
mov
repz
mov
mov
inc
cmp
icebp
and
out
sahf
pop
loopne
push
add
in
fiaddl
add
add
add
nop
and
shr
xor
lea
jmp
inc
inc
and
pop
lds
jmp
jg
sbb
mov
adc
test
xchg
pop
and
xchg
cwtl
xor
rolb
test
mov
sub
lahf
adc
sbb
outsl
jmp
xchg
mov
jl
xor
shr
xchg
pop
pop
aad
add
add
add
adc
sub
sbb
std
jmp
sub
jmp
adc
push
fs
xchg
rcll
push
cmp
and
xor
and
call
xor
sbbl
daa
popf
fcom
adc
jae
xchg
jmp
fsubl
popf
call
sub
add
mov
addl
add
add
mov
test
xor
ljmp
int3
add
testl
ljmp
and
push
andb
mov
xor
xor
sub
dec
icebp
daa
add
xor
sub
push
mov
and
icebp
daa
add
in
movsb
punpcklbw
add
adc
lock
add
hlt
aas
add
add
add
xchg
adc
cld
add
clc
xchg
lock
sub
push
lock
or
cmp
scas
insl
sub
rcl
sub
push
in
mov
jle
shrl
xchg
gs
mov
sbb
in
jne
cmp
pop
pop
mov
hlt
addl
enterw
inc
js
jnp
mov
add
add
pop
mov
hlt
pop
inc
mov
mov
jnp
mov
pushf
xchg
lret
ss
add
or
jnp
mov
adc
pusha
incb
shlb
pop
adc
jo
insb
adc
pop
inc
scas
sahf
mov
or
sub
sbb
jg
xchg
shll
sbb
jp
pop
adc
add
add
adc
in
leave
sahf
stc
sbb
fistpl
inc
loopne
sbb
lahf
sbb
test
fstl
dec
and
xchg
pop
mov
push
int3
loopne
dec
int3
loopne
and
push
and
mov
mov
lahf
stos
sub
ret
data16
pop
push
jne
sarb
mov
popf
std
add
add
add
mov
cmpsb
jns
pop
and
dec
je
add
lahf
rorl
inc
lea
icebp
xchg
pop
add
lods
aas
lea
mov
sti
orl
stos
inc
dec
lock
push
out
and
call
mov
loopne
add
push
and
or
adc
push
outsl
cmp
mov
arpl
pop
jmp
add
add
add
mov
fisttpl
mov
enter
xor
ljmp
testl
xchg
sub
clc
lret
fimull
sub
sar
stos
sub
paddusb
mov
and
cmp
xchg
clc
add
out
pop
nop
lock
mov
rcrb
push
icebp
sahf
add
and
test
sahf
inc
add
add
add
ret
in
inc
mov
xor
jae
dec
mov
clc
fdivp
daa
jae
jno
std
rorl
xlat
sub
in
in
test
mov
jmp
or
loopne
xchg
adc
stos
inc
jle
xchg
xchg
jns
xchg
xchg
les
pop
sub
adc
and
fdivr
adcb
inc
jmp
flds
add
add
add
and
add
xchg
push
adc
pop
nop
jmp
fcomip
daa
jp
or
sbb
xchg
nop
xchg
adc
dec
mov
mov
pop
mov
fcmove
and
cmovne
pop
inc
and
cmovne
pop
inc
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
sub
pop
and
and
std
rcrl
std
rcll
cld
rorl
std
roll
sti
sarl
test
and
jge
and
test
and
jge
and
movsl
jg
push
popf
jmp
movsl
jmp
add
add
add
add
sbb
imul
int3
pop
scas
sbb
aas
outsl
sbb
jg
sbb
inc
shll
test
and
jl
sbb
shll
add
and
stos
inc
push
fsubrl
insb
inc
lods
test
dec
jge
or
sbb
sbb
and
sti
cmp
pop
xchg
xlat
stos
insb
xchg
fldt
inc
cmp
pop
push
add
add
add
jno
pop
or
pop
or
add
mov
inc
or
loop
mov
out
daa
add
lods
jg
mov
push
inc
jne
push
inc
imul
xchg
or
xchg
add
xchg
or
test
or
movsl
gs
and
gs
insl
push
or
je
and
mov
add
add
jmp
mov
and
in
daa
add
jbe
inc
sbb
stos
mov
jmp
pop
loope
dec
cmp
mov
adc
jb
mov
pop
scas
outsl
or
and
jo
lea
pop
mov
leave
repz
mov
scas
mov
add
add
fs
jbe
mov
gs
out
lds
je
sbb
push
mov
sbb
ret
outsb
inc
mov
sbb
ret
push
inc
mov
lods
aas
pop
and
jge
mov
test
pop
hlt
in
dec
dec
inc
ret
movsb
sub
lret
lcall
icebp
lods
aam
in
and
insl
add
add
add
shlb
test
or
and
sub
xchg
xor
imul
jmp
inc
sbb
inc
adc
imul
push
fsubs
sahf
mov
mov
mov
jmp
cmp
in
add
xor
push
mov
push
sti
mov
push
xor
jle
add
add
add
addl
xor
pop
or
xor
rcll
loopne
add
adc
addl
addr16
inc
cmp
xchg
and
aad
call
loopne
sbb
int
add
sub
xor
or
ror
adc
stos
je
fsubrs
sub
add
add
add
gs
mov
and
insb
xor
or
dec
add
mov
cmpsb
rcll
and
mov
mov
insb
push
sbb
sbb
cltd
push
jge
loop
inc
nop
js
std
push
cs
jge
in
movsl
push
pop
out
or
add
add
add
add
rcrl
fwait
and
cmp
clc
push
or
add
pop
mov
dec
in
push
mov
add
push
loopne
push
leave
notb
or
rolb
jb
testb
or
xchg
pop
mov
rcll
or
jns
sub
fnstenv
cli
test
add
add
sbb
xor
and
sbbb
shrb
in
enter
add
and
orb
xchg
and
lcall
jmp
out
cmp
movaps
adc
daa
subb
aad
idiv
aaa
pop
dec
or
fnstenv
inc
cmp
lcall
cmp
xlat
inc
sub
aad
add
add
add
mov
out
incb
or
and
sub
pop
mov
inc
inc
imul
ret
push
or
jns
mov
lods
xor
mulb
and
dec
je
in
xor
adc
add
dec
sbb
or
dec
loopne
test
mov
xchg
mov
adc
call
xchg
sti
sbb
add
add
add
mov
pushf
pop
adc
aas
lret
or
js
leave
adc
sbb
cwtl
or
cmp
sbb
repz
scas
xchg
jmp
decb
call
pop
int3
roll
cmp
loopne
sti
xor
icebp
cmp
andl
sbb
and
adc
pop
setno
iret
js
jns
jge
cmp
test
add
add
add
lahf
xor
mov
xchg
fmuls
adc
popa
or
gs
lods
mov
xor
jmp
xchg
inc
push
jae
ret
push
repz
push
iret
jge
frstor
add
cmp
push
stos
out
data16
cmp
jge
fimuls
nop
push
sub
xor
mov
add
add
add
cltd
in
clc
inc
or
push
aaa
jl
int3
stos
sub
hlt
inc
push
cmp
adc
dec
mov
inc
xchg
divb
sbb
icebp
bound
or
mov
add
add
inc
cltd
jno
in
mov
jne
mov
sbb
icebp
sub
adc
mov
xchg
pop
and
add
add
add
jno
in
mov
shlb
push
sbb
and
cwtl
mov
bound
imul
jb
es
aad
movsl
dec
lea
and
pop
jae
lds
pop
leave
in
mov
jns
rcrb
rcl
je
lcall
inc
phaddsw
test
mov
stc
aad
pop
roll
add
add
add
idiv
pop
int3
leave
phaddsw
pop
test
lahf
movsl
outsb
and
sbb
sbb
mov
movsb
lahf
push
in
stc
xchg
idiv
xlat
push
ret
pusha
aam
repz
aam
or
or
push
and
je
and
push
pop
incb
add
mov
add
mov
or
lcall
add
add
add
arpl
lcall
add
add
test
mov
lcall
add
add
pushf
cmpsb
leave
or
stos
dec
mov
hlt
enter
adc
add
je
jae
mov
arpl
lahf
xor
mov
adc
push
push
lea
mov
or
popf
aad
test
add
add
add
fnsave
test
fisttps
mov
fisubs
add
cmp
jl
sahf
xchg
fdivl
pop
and
jo
push
push
mov
and
aad
jl
hlt
push
push
xchg
add
or
push
outsl
lea
and
leave
or
or
sahf
loop
fiaddl
add
add
add
addb
gs
int
std
push
std
mov
xorl
cmp
in
rcl
sbb
adc
add
inc
mov
sarb
adcb
mov
rcrb
mov
mov
dec
sti
inc
xor
ss
or
lret
inc
stos
push
add
add
add
push
cmp
js
cmp
ret
jnp
sbbl
add
jmp
adc
test
mulb
lds
pop
in
dec
shlb
mov
adc
subl
ljmp
test
mov
jmp
sti
push
in
sub
pop
and
dec
push
lahf
inc
ss
ja
add
add
add
xchg
pop
and
fldcw
push
mov
pop
in
shll
in
fwait
xorl
jno
dec
in
roll
test
test
add
push
dec
aam
loop
xorl
or
ss
adc
cli
push
add
xor
insl
mov
mov
ljmp
or
or
add
add
add
or
xchg
outsb
pop
add
in
push
sar
stos
dec
cmc
insb
push
clc
out
xchg
lret
clc
add
xor
xchg
inc
test
xor
push
hlt
cmova
sbb
rorl
sub
xchg
dec
or
mov
jb
jns
cmpl
negl
daa
insl
lahf
ss
adc
les
add
aam
sub
rcr
mov
mov
insb
loopne
add
push
jne
xchg
ret
sub
xchg
cmp
xchg
pop
xor
cmp
sbb
add
mov
mov
cmp
mov
cmp
mov
ret
pop
jns
and
addl
add
mov
or
js
pushf
push
mov
xchg
adc
test
add
pop
mov
pop
and
lret
nop
fadds
inc
orb
clc
or
push
mov
cli
sbb
rolb
fs
or
pop
jecxz
pushf
adc
push
dec
sar
add
cmp
sahf
fldl
add
add
add
inc
lock
in
sub
test
fsts
inc
xchg
push
fisubs
jle
loope
or
xchg
into
fcomi
mov
mov
and
xchg
push
int3
pop
mov
test
ret
out
pop
pop
int3
je
repnz
xchg
pop
and
cmc
jge
jno
enter
add
add
add
mov
jmp
in
imul
aam
in
or
test
xchg
clc
push
add
add
lods
test
jb
cmp
mov
pop
sub
in
ja
filds
push
sbb
ud0
je
movsl
pop
sbb
insb
or
inc
jno
and
popf
jne
sub
daa
andl
add
add
or
jne
jl
cld
cmpl
adc
jae
fmull
cmpl
add
sub
pop
adc
and
mov
push
stos
shrb
imul
aad
in
add
jp
sbb
daa
add
sub
sbb
mov
add
add
nop
dec
and
xchg
aad
orl
or
mov
add
test
insl
jge
sub
or
and
push
dec
sub
stos
cmpsb
jmp
shlb
push
push
add
jp
xchg
out
dec
les
xor
data16
mov
dec
addl
adc
sti
mov
add
add
add
pop
test
mov
add
xchg
mov
lret
adc
inc
jle
mov
pop
or
push
aam
mov
adc
mov
push
pop
adcl
stos
aam
int3
shll
and
popf
xchg
jns
inc
xchg
pop
add
inc
fdivp
push
or
add
add
add
fmulp
loopne
lret
loopne
into
lret
loopne
or
lahf
pushf
lcall
add
push
sub
inc
sti
jne
jmp
divl
jbe
ja
cmpsl
and
into
notl
mov
cltd
push
cmp
mov
out
lahf
adc
cmp
and
aaa
lahf
sub
sarl
push
lret
loopne
loope
loopne
add
add
add
cmp
call
int3
xchg
nop
enter
cmpsl
js
or
sbb
cmp
xor
ljmp
lahf
inc
test
hlt
xorl
outsl
pop
rorl
push
pop
sarb
nop
enter
add
adc
or
fmuls
aas
xchg
test
mov
rcr
add
add
add
call
fisttpl
out
xchg
cltd
int3
std
jecxz
xchg
push
clc
or
rcrb
pop
ret
cmc
gs
test
shl
out
or
jge
imul
ja
mov
aam
rcrb
fs
cmc
dec
mov
adc
shl
mov
push
sbb
cmpsb
sub
stos
xor
daa
mov
shl
jle
addr16
add
add
add
jmp
stos
fsubl
testl
rorb
out
daa
leave
push
pop
iret
dec
or
insl
jmp
push
pop
mov
mov
shl
or
or
je
jg
xchg
out
cmpsl
add
nop
dec
aas
rcrb
sub
into
push
or
inc
sbb
dec
in
inc
push
mov
jno
aas
mov
add
add
shlb
enter
enter
enter
sti
fmull
aad
or
out
out
inc
dec
xchg
xchg
leave
or
iret
out
mov
jo
xchg
ds
and
xchg
pop
and
fsts
ja
mov
movsb
and
es
call
repnz
mov
dec
and
setg
mov
add
add
jbe
test
outsb
sahf
xor
lea
call
or
arpl
aam
pop
or
loop
jb
mov
jmp
lret
loopne
push
lret
loopne
dec
lret
loopne
imul
jmp
call
mov
or
add
xor
pop
and
je
push
je
push
add
add
add
je
sub
and
clc
in
repnz
pop
loopne
fdivrl
outsl
mov
jb
test
rolb
loopne
pop
into
inc
and
mov
jae
push
and
mov
fstp
ljmp
and
inc
lahf
in
int3
cmpsl
jp
rorb
fiaddl
xchg
adc
js
and
icebp
cmp
mov
jecxz
fwait
add
add
add
push
gs
push
stc
out
inc
das
test
mov
mov
inc
jge
jbe
ret
call
adc
daa
add
add
shr
icebp
jl
xchg
lods
mov
testl
jbe
bound
sbb
mov
divl
jge
idivl
test
lea
jbe
push
bound
add
add
add
sbb
mov
idivl
push
fidivrs
test
imul
lea
push
push
orl
repz
cld
mov
jae
mov
sbb
xor
test
mov
clc
sbb
adc
inc
movsl
outsl
test
notl
rclb
mov
jns
add
add
add
mov
negb
rorb
push
pop
mov
and
shl
lret
nop
mov
mov
and
lods
xor
orl
pushf
stc
sbb
sub
mov
and
sarl
push
xlat
shr
cltd
testl
ljmp
push
popl
add
add
add
sub
dec
jnp
out
cmp
add
test
pusha
idivb
add
sahf
movsb
and
mov
pop
dec
jne
inc
or
popf
mov
imul
dec
xor
add
pop
sub
push
adc
hlt
dec
ljmp
popf
mov
pop
dec
popf
dec
fs
jae
add
add
add
outsb
xor
jge
mov
cmp
and
insl
pop
setb
mov
fwait
push
push
jae
fmuls
xor
sbb
pop
aam
jne
mov
hlt
sub
and
mov
ja
js
aam
mov
pop
and
xchg
cmc
fmuls
jns
out
mov
add
add
add
sub
data16
pushf
test
shll
adc
jmp
push
mov
out
daa
xor
jp
or
sub
mov
jb
imull
mov
mov
shl
iret
and
out
pushf
dec
cltd
pop
adc
xchg
fisttpl
cmp
xor
add
add
inc
add
mov
mov
outsb
test
push
icebp
hlt
in
lods
push
jns
enter
mov
rorl
enter
push
enter
out
adc
sub
lock
inc
push
inc
sbb
subl
add
inc
std
pop
or
clc
mov
xchg
out
mov
es
mov
jle
add
add
add
pop
mov
ja
ret
add
mov
sbb
inc
add
cmc
mov
mov
dec
mov
or
pop
and
mov
rcl
xchg
test
popf
ss
out
mov
adc
sub
xlat
shl
fstl
jecxz
jb
idivl
mov
rcrb
dec
out
mov
faddp
loopne
add
add
add
mov
negl
and
pop
cmp
pop
clc
addr16
xchg
pop
and
dec
addr16
movsl
outsb
cmovs
pop
and
xchg
mov
pushf
adc
and
adc
mov
jnp
mov
aam
cs
inc
lea
xor
jae
pop
or
imul
add
add
cmp
cmp
and
imul
stos
sub
and
cmp
and
mov
add
jo
std
add
nop
sbb
xor
xor
inc
rolb
jmp
adc
dec
rclb
call
mov
push
push
cmpsb
lahf
aaa
mull
mov
aad
push
shll
add
add
add
int
iret
mov
lret
xchg
sub
xchg
out
call
or
enter
jmp
xor
pushf
mov
rcll
daa
dec
stc
js
cmp
out
cmp
stc
xor
mul
inc
jne
lods
push
ljmp
out
call
popf
loopne
enter
imul
add
add
add
add
pop
in
mov
nop
rolb
cmp
jl
and
push
loopne
mov
xchg
out
jns
xchg
ds
lea
cli
outsb
int3
sbb
push
lret
inc
lock
dec
cltd
xor
push
lea
inc
jae
adc
push
sbb
orl
mov
push
mov
adc
fisttps
or
add
add
add
dec
fnstcw
movsbl
out
and
neg
test
mov
inc
mov
mov
sbb
sub
dec
jecxz
xor
inc
adc
pop
and
cltd
xor
lods
cld
negl
enter
leave
add
fisubrs
xchg
imul
add
add
add
popa
pop
addr16
iret
lahf
mov
xlat
xchg
xchg
arpl
mov
lahf
daa
mov
jecxz
out
push
roll
test
lahf
dec
in
push
bound
jmp
pop
or
out
or
aas
rcrb
lahf
in
leave
xchg
inc
inc
or
mov
cli
movsb
cmp
pop
dec
loopne
repz
cmp
push
mov
add
add
add
add
nop
add
lret
repz
xor
cmp
fistl
stos
mov
mov
mov
or
sub
xor
push
jae
lahf
enter
lcall
push
adc
imul
mov
loope
xor
pop
adc
sahf
iret
add
lock
scas
lcall
add
add
add
mov
call
dec
and
je
mov
divl
dec
inc
cltd
js
pop
testl
faddp
divl
inc
xchg
in
or
push
sub
inc
push
jp
lds
mov
mov
mov
popf
fldl
mov
sub
js
sub
clc
es
icebp
inc
or
or
add
add
add
scas
push
leave
adc
sub
sub
js
sub
js
sub
xor
fmull
mov
fmull
loopne
js
addb
popf
orb
cmp
ss
fmul
ja
fsubl
movsl
adcb
dec
or
lea
push
adc
add
mov
pop
call
rorl
out
mov
mov
mov
xor
out
xchg
adc
push
jmp
test
ss
lods
xchg
jle
lods
xor
and
cmpb
movsl
xchg
jle
lods
xor
and
pusha
inc
dec
lods
xchg
adcb
repz
push
add
dec
gs
xor
jmp
mov
and
add
add
add
mov
pop
dec
insl
cltd
sub
xchg
jnp
in
xor
sub
add
inc
jae
clc
push
adc
aas
jae
call
xor
clc
push
push
loopne
in
cmpsb
jb
call
stos
insb
insb
or
lods
ss
mov
into
adc
test
and
cmp
adc
icebp
xchg
cld
add
add
add
mov
test
adc
std
lret
xchg
xor
cmp
adc
add
arpl
loopne
iret
call
iret
addr16
shll
andb
leave
push
movsb
mov
push
cmp
mov
push
inc
lods
rclb
mov
sbb
fisubrs
fmuls
and
or
dec
push
lock
push
enter
pop
add
add
add
insl
shrb
sarl
movsb
xor
or
or
neg
mov
inc
in
jle
push
lock
sbb
push
cmp
scas
aam
xchg
out
pop
push
mov
add
out
pop
jp
add
mov
cmp
and
cmp
adc
ss
jne
lds
add
int
jl
jl
jl
jl
add
add
add
jl
dec
shl
mov
push
sbb
sbb
push
pusha
mov
aaa
xchg
add
jle
lcall
pop
icebp
dec
inc
aaa
test
cs
rcrb
rcll
xor
dec
ret
add
aam
sarl
jmp
pop
mov
jge
adc
gs
lds
and
add
add
add
mov
sti
and
xchg
xor
stos
mov
jno
cmp
loopne
cmp
loopne
sub
loopne
out
inc
lahf
jge
adc
xchg
sbb
mov
mov
and
inc
rcll
cmp
push
fistps
aas
and
movsb
push
sbb
adc
mov
shrl
jae
addl
add
add
pop
addr16
jo
and
in
and
mov
add
sub
fistpl
lret
mov
sbb
out
call
mov
repnz
inc
pop
mov
adc
push
out
incl
sub
mov
or
mov
leave
lahf
gs
lea
cld
dec
in
incl
add
add
add
or
repz
xor
repz
xor
adcl
or
cmc
mov
xor
mov
mov
and
pop
pop
fs
mov
add
out
xchg
dec
dec
bswap
loopne
test
imul
push
insb
sbb
mov
xchg
and
xor
mov
add
popa
push
jae
lret
push
pop
xchg
cmp
scas
push
adc
adc
xlat
pop
repnz
add
ret
dec
add
fdivrs
push
fiaddl
push
ffreep
ss
js
xor
push
ftst
in
sub
int3
pop
sti
scas
inc
leave
aas
xchg
pop
mov
pop
cmc
jo
int
and
pop
shll
dec
or
shlb
mov
add
add
add
or
aas
notl
test
inc
push
jge
in
inc
xor
push
pop
mov
les
call
sbb
jbe
xlat
loope
xchg
pop
mov
repz
jle
add
xor
xchg
cmp
out
es
loopne
push
ret
loopne
int3
subb
add
jl
andb
subb
add
add
add
sub
fldpi
pop
cmp
test
shr
aaa
jb
jmp
jb
jmp
cwtl
in
mov
cwtl
out
in
repnz
xchg
mov
jmp
lds
int
fmul
ljmp
xor
mov
and
pop
xlat
lea
cmp
lea
int3
mulb
add
mov
int3
mov
call
and
add
add
add
sbb
jp
and
inc
mov
insl
xchg
ret
add
add
and
cmp
mov
push
push
mov
clc
push
and
and
call
out
jmp
rorl
add
rorl
add
push
and
pop
out
lcall
fwait
add
fwait
add
add
add
add
in
call
in
xchg
loopne
add
mov
mov
add
cmp
inc
xchg
inc
testb
daa
add
adc
inc
xchg
adc
daa
add
inc
cmc
inc
xchg
dec
cmc
inc
xchg
loopne
add
into
hlt
inc
xchg
lret
xchg
loopne
add
add
add
add
inc
testb
testb
daa
add
mov
inc
xchg
mov
inc
xchg
loopne
add
leave
push
push
pop
iretw
push
pop
mov
loope
leave
out
roll
lcall
pop
or
pop
leave
loop
roll
out
mov
xchg
pop
sub
ds
dec
mov
roll
mov
loopne
leave
mov
add
roll
sti
mov
xchg
pop
ljmp
pop
stos
mov
xchg
pop
mov
fmulp
xchg
mov
push
pop
mov
loopne
enter
pop
and
jecxz
and
xchg
pop
and
mov
shll
mov
pop
and
jno
ror
mov
mov
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
or
ss
cmp
xor
jmp
xchg
cmp
jmp
xchg
jg
jmp
xchg
inc
xor
jmp
xchg
sbb
jmp
xchg
pop
xor
sbb
add
adc
add
adc
add
add
add
add
js
pop
adc
adc
push
or
adc
int3
adc
rclb
or
adc
sbb
cmp
cld
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
mov
jle
add
add
add
mov
mov
xorl
daa
pushf
xorl
daa
mov
mov
mov
js
mov
insb
xorl
daa
mov
mov
adc
mov
or
mov
add
mov
clc
mov
add
add
add
mov
rolb
mov
add
pop
mov
add
push
mov
add
mov
add
mov
add
pop
mov
add
pop
mov
add
mov
add
mov
add
add
add
add
mov
add
adc
mov
add
sbb
mov
jmp
xchg
lret
and
xchg
in
xor
xchg
and
xchg
jnp
jmp
xchg
jae
jmp
xchg
ja
jmp
xchg
outsl
and
xchg
mov
and
xchg
fwait
and
xchg
lahf
and
xchg
xchg
and
add
add
add
xchg
xchg
and
xchg
mov
jmp
xchg
inc
and
xchg
xchg
jmp
xchg
aas
and
xchg
loopne
jmp
xchg
lret
xor
jmp
xchg
dec
and
xchg
dec
and
call
pop
psubb
sbb
clc
pop
or
call
pop
adc
mov
pop
cld
push
test
push
test
adc
mov
add
add
add
pop
xor
test
add
js
cmp
js
sub
push
pop
xor
js
sub
js
out
push
pop
and
cmp
fmuls
cmp
int3
push
sub
rorb
pop
adc
cmp
je
cmp
sbb
sub
pop
adc
pop
les
xchg
mov
aam
mov
fmuls
mov
int3
lahf
mov
add
mov
enter
add
add
mov
rcrb
daa
mov
xchg
daa
mov
mov
movsb
mov
test
mov
pushf
lahf
mov
mov
mov
cwtl
xchg
daa
aam
mov
fmuls
mov
rcrb
mov
enter
mov
lahf
mov
iret
xchg
mov
scas
mov
mov
add
add
adc
add
adc
add
mov
add
adc
add
mov
add
adc
add
mov
add
mov
add
adc
add
sbb
add
pop
mov
add
add
add
add
mov
add
mov
add
mov
jmp
xchg
scas
and
xchg
jecxz
jmp
xchg
jmp
xchg
pop
and
xchg
or
jmp
xchg
iret
and
xchg
and
xchg
jnp
jmp
xchg
jae
jmp
xchg
imul
xchg
mov
jmp
xchg
addr16
add
add
add
xchg
fwait
and
xchg
jmp
jmp
xchg
xchg
and
xchg
mov
jmp
xchg
inc
and
xchg
xchg
jmp
xchg
outsl
xor
sub
adc
add
adc
add
adc
add
or
clc
add
or
call
add
add
call
add
or
mov
add
add
add
add
or
test
sub
test
and
js
sub
push
or
js
fmuls
or
or
or
or
or
or
mov
in
mov
call
popf
mov
sub
mov
and
mov
ss
mov
cmp
add
add
add
mov
rclb
daa
mov
popf
mov
mov
mov
movsb
lea
daa
pushf
popf
mov
mov
mov
movsb
lea
daa
pushf
popf
mov
mov
lea
daa
repnz
mov
mov
mov
ljmp
mov
add
mov
add
mov
add
add
mov
add
or
add
mov
add
mov
add
or
add
or
add
mov
add
or
add
mov
add
or
add
mov
add
add
mov
jmp
xchg
stos
pop
jmp
xchg
mov
pop
jmp
xchg
cmpsl
pop
jmp
xchg
fistps
jmp
xchg
xlat
pop
jmp
xchg
iret
pop
jmp
xchg
pop
jmp
xchg
jg
jmp
xchg
into
pop
jmp
xchg
outsl
pop
jmp
xchg
addr16
jmp
add
xchg
test
xchg
or
jmp
xchg
sbbl
xchg
pop
add
mov
or
pop
or
repnz
cmp
push
or
or
sub
cmp
cmp
jo
cmp
xchg
or
or
or
pop
push
or
pop
movsl
or
pop
pop
or
pop
lods
or
pop
mov
or
pop
test
add
add
add
call
pop
push
or
pop
pop
or
pop
inc
or
pop
cmp
test
sub
js
and
js
xor
xchg
mov
add
mov
or
mov
add
mov
clc
fwait
mov
in
fwait
mov
lock
daa
call
fwait
mov
lock
daa
call
add
fwait
mov
int3
fwait
mov
dec
mov
daa
cs
mov
xor
daa
les
mov
lods
fwait
mov
sub
mov
push
fwait
mov
mov
mov
mov
add
or
mov
add
or
mov
add
add
add
add
or
mov
add
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
and
xchg
adc
jmp
xchg
or
jmp
add
xchg
pop
push
jmp
xchg
outsb
pop
jmp
xchg
pop
push
jmp
xchg
mov
sbb
jmp
xchg
scas
sbb
jmp
xchg
rcrl
jmp
xchg
xlat
sbb
jmp
xchg
jnp
jmp
xchg
jae
jmp
xchg
imul
add
add
add
xchg
arpl
add
add
or
add
or
mov
or
test
js
pushf
or
push
or
movsb
or
pop
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
call
add
add
add
add
clc
add
add
or
add
add
or
add
or
scas
daa
lcall
daa
xchg
mov
daa
mov
mov
daa
sub
mov
daa
adc
mov
daa
pop
lcall
lock
daa
call
add
cltd
mov
daa
stc
mov
daa
icebp
cltd
mov
daa
jmp
cltd
mov
daa
xor
mov
daa
rcrl
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
jmp
xchg
xchg
push
jmp
xchg
popf
push
jmp
xchg
test
jmp
add
add
add
xchg
lea
jmp
xchg
xor
push
jmp
xchg
xor
jmp
xchg
cmp
jmp
xchg
and
jmp
xchg
sub
jmp
xchg
push
push
jmp
xchg
pop
push
jmp
xchg
inc
push
jmp
xchg
dec
push
jmp
xchg
icebp
sbb
add
or
or
or
or
add
add
add
or
or
or
or
or
or
or
or
push
or
rorb
push
or
or
into
or
ret
or
or
lret
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
fimuls
add
add
add
clc
pop
xchg
or
pop
out
call
sahf
daa
mov
mov
daa
cmpsb
cwtl
sahf
daa
stos
cwtl
sahf
daa
sahf
mov
daa
xchg
cwtl
sahf
daa
lcall
daa
xchg
mov
daa
mov
mov
daa
jbe
mov
daa
outsb
mov
daa
cbtw
mov
daa
pop
add
add
add
mov
daa
push
cwtl
mov
daa
dec
mov
daa
inc
cwtl
mov
daa
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
and
xchg
mov
sbb
xchg
lds
xchg
jns
jmp
xchg
popa
sbb
xchg
jne
jmp
xchg
pop
sbb
xchg
xchg
sbb
xchg
gs
add
add
add
xchg
cltd
sbb
xchg
lea
xchg
sbbl
xchg
mov
xchg
jge
jmp
xchg
test
xchg
cmp
xchg
sub
sbb
xchg
xor
sbb
xchg
sbb
sbb
xchg
and
sbb
xchg
dec
sbb
xchg
inc
sbb
sub
push
clc
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
pop
test
xor
test
push
or
add
or
add
or
or
js
incl
push
add
or
fiaddl
js
into
pop
push
add
pop
cmp
pop
cmp
pop
sub
pop
sub
pop
cmp
pop
xchg
sahf
daa
fiaddl
add
add
add
sahf
daa
rclb
sahf
daa
lret
daa
mov
xchg
sahf
daa
mov
sahf
daa
mov
mov
daa
imul
arpl
daa
pop
mov
daa
push
mov
daa
xchg
mov
daa
adcb
daa
das
xchg
mov
add
add
mov
daa
data16
daa
pop
mov
mov
add
push
mov
add
mov
add
add
add
mov
add
push
mov
add
mov
add
push
mov
add
mov
add
add
add
add
push
mov
add
mov
add
mov
add
mov
add
add
sub
xchg
int
jmp
xchg
aad
jmp
xchg
mov
sub
xchg
subb
xchg
cs
xchg
mov
jmp
xchg
jne
jmp
xchg
pop
sub
xchg
jns
jmp
add
xchg
gs
xchg
popa
sub
xchg
lea
jmp
xchg
xchg
sub
xchg
xchg
sub
xchg
jge
jmp
xchg
test
jmp
xchg
sub
sub
xchg
xor
sub
xchg
sbb
push
push
cmp
dec
push
sub
ds
sub
jb
cmp
inc
push
cmp
jp
sub
outsb
push
sub
bound
clc
or
clc
or
add
add
add
add
or
add
or
add
or
add
or
push
call
or
push
mov
or
push
test
incb
mov
or
push
test
cs
test
and
js
ss
js
sub
push
or
add
js
fiaddl
mov
daa
repnz
daa
ljmp
mov
daa
loop
sahf
daa
xchg
sahf
daa
fimull
daa
rorb
daa
lret
daa
mov
mov
daa
mov
xchg
sahf
daa
mov
sahf
daa
cmpsb
xchg
sahf
daa
stos
mov
daa
mov
xchg
sahf
daa
lcall
daa
xchg
mov
daa
mov
add
add
xchg
pop
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
add
add
add
add
mov
add
add
add
add
mov
add
mov
add
add
jmp
xchg
test
sub
xchg
mov
jmp
xchg
cltd
sub
xchg
mov
jmp
xchg
popf
sub
xchg
leave
sub
xchg
movsl
sub
xchg
shrl
jmp
xchg
mov
sub
xchg
shrl
xchg
mov
sub
xchg
lds
jmp
add
xchg
jno
jmp
xchg
pop
sub
xchg
jne
jmp
xchg
pop
sub
xchg
mov
jmp
xchg
xchg
sub
xchg
lea
jmp
js
mov
push
add
push
add
add
pop
add
add
inc
add
add
dec
add
add
jb
cmp
jp
add
add
add
sub
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
daa
sbb
sahf
daa
adc
sahf
daa
or
sahf
daa
add
sahf
daa
cli
add
add
add
xchg
sahf
daa
out
xchg
sahf
daa
repnz
sahf
daa
out
sahf
daa
ljmp
daa
loop
sahf
daa
xchg
sahf
daa
ficoml
sahf
daa
rclb
sahf
daa
adc
nop
sahf
daa
or
nop
sahf
daa
cs
sahf
daa
xor
xchg
sahf
daa
add
sahf
daa
stc
xchg
pop
mov
add
or
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
mov
add
pop
mov
add
or
add
push
out
pop
dec
faddp
movsb
jmp
sbb
dec
iret
push
mov
repz
add
add
jle
lret
or
and
pop
ljmp
xchg
pop
cmpsl
test
dec
sahf
pop
out
or
push
ror
out
jno
int3
mov
icebp
leave
sbb
push
in
jmp
fldl2e
and
xchg
pop
and
rolb
and
and
in
push
pop
pop
in
in
call
mov
jns
add
add
add
int
sub
and
in
add
and
int
sarb
xchg
jne
add
jb
mov
out
cmp
rcrl
je
cmpsb
inc
xchg
or
inc
jp
les
add
xorl
je
mov
js
iret
subb
rcrl
fs
out
push
or
add
add
add
cmp
mov
mov
and
dec
mov
and
fildl
cmpsl
inc
lret
push
out
jne
xor
jo
push
arpl
call
sub
sbb
mov
int
and
mov
add
mov
les
xchg
scas
in
aam
in
add
jae
xor
mov
cmp
add
add
add
in
insl
xchg
xor
mov
mov
std
adc
cld
push
xor
xchg
icebp
jle
fisttpll
sbbl
add
daa
add
imul
push
shll
scas
mov
sub
lea
mov
mov
push
adc
cs
sub
jmp
out
and
or
add
add
nop
pop
mov
or
adc
sysret
mov
aam
xchg
out
pop
inc
mov
or
fisubs
or
or
nop
pop
mov
or
addps
sysret
mov
aam
xchg
stos
and
dec
fdivrp
shrl
ds
mov
incb
mov
pop
and
add
add
add
pmulhw
jmp
xchg
xchg
cmpsl
and
mov
arpl
scas
add
xchg
pop
out
sbb
scas
cs
dec
lcall
sub
xchg
mov
stos
pmulhuw
ljmp
sub
out
sub
in
in
xchg
mov
out
sub
sbb
or
cmpsb
lods
das
mov
add
add
push
out
sub
sbb
call
push
pusha
mov
add
and
out
pop
out
pop
push
and
dec
pop
out
insl
or
out
pop
out
inc
or
cmp
shl
add
add
mov
pop
repnz
jmp
push
add
cmp
aas
adc
add
add
add
xlat
fdivr
iret
xchg
adc
sub
push
xor
rol
shl
fdivr
outsl
xchg
adc
sub
push
xorl
sbb
push
jnp
call
shrb
rolb
adc
enter
cmpsb
cmc
mov
add
scas
jo
imull
scas
daa
ret
adc
fdivrs
sbb
test
mov
call
insb
add
add
add
xchg
sub
test
mov
call
insl
xchg
xchg
call
push
jbe
idivl
push
call
insl
xchg
ss
es
call
adc
and
les
ss
out
or
incb
xor
sbbl
mov
scas
mov
cmp
add
add
add
dec
movl
add
andl
xor
lahf
jle
les
mov
jecxz
lret
xchg
out
icebp
outsb
xchg
data16
mov
lahf
pop
clc
or
inc
xlat
add
ljmp
movsb
cmc
mov
shrl
or
sub
movsb
repz
add
rorl
and
add
add
add
mov
xchg
sub
bound
and
or
or
ljmp
sub
or
adc
push
jmp
scas
push
lods
fists
shrl
or
sub
jb
add
lret
mov
push
or
rcll
xchg
out
add
adc
add
add
add
cmp
sub
and
pushl
push
cmpsl
jge
push
pop
push
nop
int
call
add
and
pop
add
push
mov
andl
jne
xchg
mov
or
gs
and
js
xchg
daa
push
out
movsl
or
pop
or
push
mov
and
add
add
add
add
add
jno
out
out
xchg
mov
add
sub
scas
daa
add
ret
cltd
notl
repnz
jne
mov
add
jl
add
cltd
ret
adc
jne
mov
dec
jmp
jno
jne
mov
cltd
divl
lods
add
fcompl
sub
add
add
add
jecxz
std
pushf
movsb
jne
mov
sbb
or
aas
in
movsb
jne
scas
add
mov
jg
dec
pop
dec
mov
nop
mov
nop
inc
push
xorl
mov
scas
iret
mov
xchg
cmp
mov
push
ds
push
and
inc
fiadds
shrb
xor
jg
cmc
mov
add
add
mov
jle
inc
cmc
mov
mov
fwait
jle
sbb
mov
mov
fwait
jle
add
sarb
mov
jle
cld
icebp
cmp
jno
pop
fwait
jle
in
and
mov
xchg
shrl
fsubrl
lods
das
or
inc
mov
adc
lret
kmovb
sub
adc
add
add
leave
cltd
lret
mov
shrl
push
adc
mov
push
or
pop
in
add
daa
push
mov
out
popa
or
cmp
scas
inc
jecxz
cmpsl
xor
add
shlb
fwait
pushf
pop
out
sbb
rorb
std
shll
sar
fists
jge
add
loopne
fcos
add
add
add
ffreep
mov
ret
mov
cs
mov
out
mov
jnp
and
and
push
fcmovnb
imul
add
push
fcmovnb
imul
add
mov
subl
lcall
std
es
jge
cld
fists
sbbl
je
jge
stc
das
push
cmpsl
jge
add
das
add
add
add
xchg
xchg
and
sub
jbe
hlt
push
adc
or
sbb
stc
cmp
add
mov
mull
out
scas
jb
ficoml
push
or
call
notl
je
add
dec
in
xchg
ret
adc
dec
int
xchg
ret
adc
add
das
mov
add
add
add
sub
or
mov
repz
push
call
insl
movsb
pop
ds
divl
adc
mov
data16
xchg
adc
pushf
sbbl
scas
inc
cwtl
jle
mov
mov
incb
daa
mov
incb
mov
xchg
ds
mov
ds
add
add
xchg
add
adc
mov
leave
xchg
ret
or
jge
mov
fwait
loop
rorb
push
adcl
push
mov
cmpsl
and
pop
pop
hlt
sbb
push
jecxz
push
test
xchg
xchg
shll
mov
lea
push
orl
test
mov
add
jmp
shrl
adc
mov
push
add
out
or
and
xchg
lahf
insl
adc
lahf
out
mov
lahf
push
lcall
pop
cmp
lret
xchg
into
add
gs
push
std
shlb
pop
clc
aaa
cmpsl
jge
or
and
cmpsl
jge
or
adc
xchg
add
add
add
xlat
mov
cmp
sub
xor
ljmp
pop
push
das
in
out
pop
rorl
cmc
shlb
ret
mov
test
out
into
popa
imul
add
fildl
stc
jno
cli
arpl
xorl
not
arpl
insl
imul
cli
sahf
int3
in
adc
and
add
add
movsw
jne
mov
jle
outsb
bound
adc
cltd
notl
add
xchg
xchg
shl
sbb
xor
ss
aam
es
xchg
loope
cmp
mov
insb
lds
rcl
mulb
out
std
in
dec
rcl
mov
sbb
xchg
sahf
movsb
rclb
add
add
dec
mov
mov
scas
insb
jmp
js
test
enter
mov
jp
or
jae
or
mov
pop
mov
dec
pop
mov
jp
or
pop
inc
jae
shl
sbb
fwait
xchg
xchg
jb
push
addb
cli
sbb
out
negl
ret
out
xor
out
das
sbb
out
add
add
add
xchg
sbb
add
pop
lds
cmpl
lods
xchg
pop
out
push
call
push
or
mov
into
jg
or
and
cmc
out
push
in
icebp
and
in
and
and
aad
and
int3
mov
and
mov
call
and
and
add
cltd
and
sbb
mov
push
or
sbb
es
xchg
push
imul
cli
fs
xchg
mov
jmp
mov
roll
and
xchg
scas
xlat
shl
lock
jmp
adc
mov
adc
test
daa
add
sar
sub
fildl
pop
adc
call
add
add
add
xor
ret
repz
pop
shufps
add
or
clc
xchg
fcmovbe
jmp
adc
scas
inc
push
orb
jne
outsb
into
clc
iret
pop
out
in
sub
clc
cltd
sar
jmp
cmpsl
shl
hlt
ret
mov
add
imul
pop
pusha
sub
inc
scas
scas
add
mov
and
xchg
mov
add
add
cmpsb
mov
jge
or
and
aam
test
mov
call
add
mov
cmp
xchg
sahf
cld
push
imul
push
nop
xchg
cmpl
clc
cs
xor
popf
pop
dec
ret
and
rcrb
fisubrl
jg
jge
jg
jae
xor
add
add
add
insl
fdivrs
fwait
arpl
aam
sub
and
les
lret
cmpsl
test
lods
cmpsb
nop
jle
cwtl
or
add
in
jle
ds
xchg
sbb
fwait
xchg
lahf
and
pop
nop
inc
jnp,pt
or
adc
add
xchg
pop
mov
clc
in
mov
add
nop
bound
add
or
sub
dec
and
xchg
sbb
jo
lds
or
test
fbld
sbb
not
or
addr16
lret
lods
xchg
shrl
idivb
repz
rolb
push
ljmp
xchg
pop
and
shr
and
or
pop
lea
and
xchg
lahf
out
xchg
cs
cmpsl
add
add
add
add
adc
cmpsb
in
test
mov
sub
dec
and
xchg
adc
add
or
orl
cli
xlat
and
jnp
daa
je
mov
add
cld
mov
ret
cmp
jne
mov
or
lret
inc
iret
gs
shlb
sbb
stos
and
add
add
inc
add
and
lods
stos
sub
js
and
pop
jb
hlt
pop
cmpsl
jge
lea
and
sbb
sub
and
sub
mov
adc
int3
insb
xchg
cmp
call
or
add
cmp
push
lcall
jb
inc
inc
nop
dec
dec
add
add
add
add
test
or
mov
sbbb
jbe
leave
out
dec
mov
push
mov
add
popa
out
xchg
pop
out
jo
movsb
cli
jmp
sbbb
adc
sub
cli
mov
mov
push
or
and
mov
loopne
enter
pop
mov
loopne
add
add
add
dec
mov
fwait
xor
inc
in
push
mov
rol
test
mov
jp
idiv
sbb
mov
and
adc
fwait
ret
xchg
xchg
movsb
push
lahf
and
mov
add
adc
add
add
xchg
pop
mov
hlt
hlt
inc
mov
jmp
add
add
add
imul
out
cmp
testl
jo
lds
dec
in
into
cmc
mov
lret
or
xchg
shrl
adc
stc
cld
repnz
out
call
mov
jno
mov
stos
push
xchg
and
int
cmpsb
mov
jns
xchg
shrl
xor
add
add
add
add
and
int
mov
add
pop
and
sub
and
je
sar
enter
sbb
and
sub
and
ret
inc
xchg
sar
or
and
clc
push
and
pop
aam
incl
iret
mov
push
and
cs
iret
ljmp
cmpsl
iret
mov
add
add
add
int
dec
xchg
sar
andb
add
and
adc
iret
dec
xchg
sar
in
cmpsl
iret
call
mov
push
cld
ds
ss
mov
daa
add
jl
decl
pop
icebp
sti
push
mov
daa
add
or
jmp
addr16
sti
ficomps
add
add
xchg
mov
adc
ror
mov
lahf
daa
add
es
sahf
pop
fdivr
xchg
out
sti
mov
daa
add
xor
ljmp
sti
data16
add
mov
loopne
mov
add
mov
ficomps
mov
add
add
pop
or
testb
add
pop
mov
stc
into
mov
loopne
mov
add
mov
cmpsb
mov
add
pop
mov
add
mov
mov
mov
xchg
mov
mov
std
test
add
add
jl
rol
test
sar
fs
aas
pop
mov
xor
inc
pop
mov
push
les
rorl
mov
mov
xchg
popf
mov
lea
mov
jns
mov
inc
jge
sarl
jge
rcrl
pop
mov
pop
pop
mov
inc
pop
mov
test
adc
leave
adc
add
add
add
pop
aas
sar
ss
js
and
pop
inc
sar
inc
inc
sar
movsb
inc
sar
pushf
inc
sar
clc
inc
sar
inc
inc
sar
adc
call
inc
sar
cmp
and
dec
inc
sar
xor
incl
sar
inc
sar
jb
sar
inc
inc
sar
cmp
faddl
inc
inc
sar
nop
inc
sar
mov
sar
stos
ds
jo
sar
add
add
add
cmpb
cmp
sar
mov
inc
sar
test
and
xchg
push
pop
cld
xchg
pop
cld
jle
pop
cld
jbe
pop
cld
outsb
inc
pop
cld
data16
cld
pop
pop
cld
push
push
pop
cld
dec
into
pop
cld
inc
mov
cld
movsb
pop
cld
ss
pop
cld
cs
pop
cld
es
imul
push
and
push
shrb
dec
imul
div
push
add
add
xlat
push
cld
fidivrs
imul
into
sbb
jno
cld
mov
gs
scas
shrl
scas
push
sahf
push
or
inc
lea
push
inc
jge
mov
jne
xchg
inc
insl
test
inc
pop
test
dec
push
test
dec
dec
test
dec
inc
test
dec
cmp
test
dec
sub
add
add
add
test
dec
or
test
dec
std
test
cmc
test
dec
in
test
dec
fldl
dec
int
jg
lds
dec
mov
push
dec
lods
test
pop
adc
dec
adc
dec
adc
fildl
shl
enter
lret
adc
fildl
rcrl
add
add
add
lret
adc
lret
adc
fildl
roll
adc
enter
outsl
adc
addr16
rolb
roll
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
pop
leave
iret
lcall
iret
ljmp
iret
pushl
iret
incl
add
add
add
leave
iret
lcall
iret
jmp
iret
pushl
iret
lcall
iret
decl
iret
ljmp
iret
jle
iret
dec
leave
iret
jmp
inc
sar
mov
leave
iret
jmp
leave
iret
jmp
incl
leave
iret
call
lcall
iret
decl
jmp
leave
iret
inc
leave
iret
jmp
leave
iret
ljmp
lret
add
add
add
cld
leave
iret
call
pushf
push
mov
push
scas
fsubrl
cmpsb
into
push
sahf
ds
mov
cld
mov
cld
xchg
cld
jle
adc
jbe
adc
outsb
jl
cld
data16
cld
pop
adc
cld
push
and
ljmp
ds
adc
ss
adc
cs
push
notb
cld
push
jbe
cld
push
test
add
add
add
jo
add
xchg
adc
out
fsts
cld
out
daa
add
pop
mov
add
xchg
xor
subl
xor
or
xor
lret
xor
ret
xor
cltd
das
pop
sub
das
dec
addl
add
add
add
cmp
sbbl
and
adc
cs
subl
cs
orb
in
and
mov
adc
addl
ror
addr16
xchg
pop
and
pusha
adc
arpl
rcrl
xchg
pop
and
enter
add
add
add
iret
adc
xlat
adc
iret
adc
xlat
adc
iret
adc
xlat
adc
iret
adc
xlat
adc
into
adc
adc
iret
adc
xlat
adc
iret
adc
push
adc
pop
adc
dec
adc
dec
adc
mov
iret
ljmp
into
iret
inc
into
iret
ljmp
lcall
int
incl
add
add
add
iret
iret
lcall
iret
iret
ljmp
iret
cmp
iret
call
iret
jmp
iret
jmp
iret
pushl
iret
dec
xor
in
xor
lcall
iret
decl
xor
jmp
sar
push
xor
jmp
sar
adc
call
sar
push
xor
dec
xor
mov
pushf
sbb
testb
cld
add
add
add
out
push
fidivs
imul
mov
cld
mov
adc
and
cmp
cld
sahf
enter
pop
cld
mov
push
cld
xchg
pop
cld
jle
pop
cld
jbe
sbb
outsb
in
push
data16
pop
sbb
es
cld
dec
fs
pop
imul
js
cld
ss
pop
cld
es
pop
cld
add
add
add
push
test
cld
push
cmp
push
pop
mov
add
jge
dec
cmc
jge
dec
in
jge
dec
in
fisttpll
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
inc
movsl
jge
dec
popf
jge
dec
xchg
jge
dec
lea
dec
test
dec
jge
repz
jne
in
insl
jge
inc
gs
inc
pop
jge
xor
add
add
add
mov
cmp
pop
cmp
jge
add
jge
cmp
jnp
ror
jnp
addr16
jnp
push
mov
jnp
sub
jnp
arpl
jnp
jmp
test
sti
xchg
pop
movsb
call
pop
movsb
fsts
pop
movsb
ficoms
add
add
add
jnp
pop
lea
movsb
outsl
mov
jnp
cmp
stos
jnp
sub
pop
movsb
stc
mov
out
xchg
pop
movsb
add
shr
jnp
rcll
test
sar
sub
and
cmp
and
in
pop
and
stc
pop
and
iret
pop
and
fadds
and
cmc
pop
and
les
and
testb
cmpb
sar
add
add
add
mov
and
test
and
fdivl
ljmp
sar
test
sar
mov
sar
fs
lcall
aaa
sar
xchg
aaa
sar
sahf
aaa
sar
mov
aaa
sar
enter
mov
sar
cmp
and
out
aaa
sar
xchg
out
cld
cs
addr16
or
push
jno
add
and
push
cld
add
add
add
push
paddb
jb
cld
out
pop
push
cld
out
push
cld
fsubp
push
cld
test
cld
into
jo
add
sahf
pop
pop
cmp
popl
adcl
cmp
cli
cld
add
or
add
pop
loop
daa
insb
xchg
xor
jno
leave
or
add
xchg
cmp
mov
cmp
and
add
add
add
add
daa
and
leave
sbb
mov
mov
sbb
xor
dec
push
pop
or
push
cmc
fbld
in
pop
ss
xchg
cmp
lock
pop
and
test
and
cmpsl
add
repz
dec
sub
lahf
add
add
jae
fadd
js
add
pop
pop
add
add
add
std
loop
cmp
loop
sub
pop
and
les
jb
dec
daa
lcall
outsb
jmp
or
divl
jns
jp
xchg
lret
scas
jmp
rcrb
fisubrl
xchg
lods
sub
mov
fs
loopne
jmp
stos
loope
stos
sahf
loopne
test
loop
xchg
add
add
add
outsl
cmp
mov
jmp
stos
loope
aaa
mov
push
daa
lcall
sub
cmp
int3
daa
jno
cmp
ja
jl
cmp
les
je
sbb
jne
and
cmp
popa
xchg
adc
sbb
jno
fdivl
inc
jb
and
cmp
and
inc
jb
add
add
add
and
call
adc
add
dec
push
test
jmp
popa
adc
push
gs
and
jmp
or
xor
inc
jo
sbb
push
and
cld
insb
in
ret
punpcklwd
int3
add
pusha
daa
pop
xchg
daa
xor
pop
or
std
inc
mov
incl
push
mov
sub
add
add
add
cmpsb
push
sub
sub
pusha
subl
dec
je
aaa
inc
arpl
insb
je
daa
push
lods
cld
imul
insb
dec
mov
addr16
pusha
daa
jl
jg
insb
dec
xchg
xor
lods
xchg
lods
cld
imul
xor
mov
jb
pop
outsb
adc
in
push
adc
sti
jae
lock
sub
add
add
add
pop
sbb
sub
out
pop
mov
and
int
jo
daa
cmp
fbstp
outsb
int
pop
dec
fninit
and
add
jb
mov
hlt
add
xor
sbbl
stc
lahf
sub
sahf
adc
stc
mov
push
lock
movsl
add
add
add
movsl
jmp
jp
xchg
out
and
mov
dec
cmp
jl
inc
dec
mov
imul
shlb
xchg
jmp
sbb
fs
and
mov
push
adc
rolb
and
xchg
xor
std
mov
shll
xchg
jecxz
loope
pop
and
mov
dec
aad
fists
mov
data16
lods
jecxz
mov
pop
and
add
add
add
xchg
lds
sahf
loop
lea
mov
and
xor
add
push
outsl
sbb
and
sub
adc
inc
insb
mov
or
mov
inc
push
shll
inc
fistps
je
or
jbe
push
imul
dec
outsb
sub
adc
mov
dec
bound
adc
add
add
add
call
adc
lret
imul
ss
add
dec
outsb
mov
adc
jmp
inc
jb
adc
xchg
mov
imul
and
add
cmp
idivl
pop
in
pop
imul
into
daa
xchg
mov
sbb
cmp
gs
add
aas
lods
adc
pop
add
add
add
mov
and
dec
xchg
add
and
sbb
gs
adc
ds
pop
add
xchg
jns
aas
insb
push
add
dec
add
inc
adc
inc
cmp
mov
addr16
pusha
daa
imul
mov
sbb
in
mov
and
mov
das
call
or
and
add
add
add
jecxz
arpl
mov
fstpl
mov
in
adc
cmc
push
and
in
sbb
fsubr
mov
and
in
and
push
and
mov
and
hlt
adc
arpl
xchg
adc
in
push
jle
fs
pop
mov
out
jp
xchg
dec
daa
lods
insl
idivl
add
add
add
jno
bound
xchg
xchg
sub
fimuls
mov
shlb
fstl
loope
aas
addl
push
inc
jb
dec
das
lcall
adc
cmp
inc
adc
stos
jecxz
jmp
cltd
hlt
fs
sahf
call
sub
jg
and
add
add
add
nop
jmp
add
inc
insl
or
gs
push
dec
jae
sbb
or
arpl
dec
jo
imul
xor
outsl
or
inc
je
add
add
adc
or
jno
int
jno
js
and
popa
mov
adc
cmp
add
jge
dec
push
lea
push
jns
add
arpl
jbe
mov
je
add
add
add
cmpsl
sub
or
jno
xchg
sbb
mov
incl
aam
push
outsl
xchg
push
xor
stos
pop
add
lods
and
dec
fs
cmp
mov
pop
jb
jge
jae
mov
gs
sbb
aas
in
hlt
addr16
rorl
in
sbb
data16
sub
add
outsb
add
add
add
lods
adc
jo
or
add
insb
lods
sti
arpl
pushl
popf
xor
inc
jo
xor
add
and
addr16
hlt
and
mov
push
pop
or
mov
nop
xor
frstor
inc
cli
mov
sub
lea
and
andb
mov
lahf
cmp
lock
std
add
add
add
repnz
push
adc
fmull
pop
incl
cmpsb
lock
and
fisubrs
loop
pop
adc
clc
add
sbb
mov
in
adc
call
and
xchg
pop
cltd
add
loopne
add
testl
or
jns
sahf
faddl
jge
dec
movb
add
add
mov
out
mov
xchg
dec
cltd
xchg
mov
mov
clc
push
xchg
mov
and
mov
push
aas
mov
pop
inc
xchg
in
cmp
cmpsl
out
dec
jge
inc
dec
sahf
clc
push
jmp
mov
dec
sbb
addl
inc
or
sbb
xchg
enter
pop
pop
outsb
add
add
add
in
push
insb
mov
xor
mov
std
and
fldl
pop
outsb
add
push
insb
iret
daa
aas
gs
jno
or
dec
gs
std
and
mov
push
dec
push
adc
adc
outsl
in
inc
gs
add
sbb
aad
push
add
insl
bound
jno
imul
outsl
add
add
add
jle
dec
insb
xchg
ss
xchg
adc
addr16
add
xchg
shll
push
push
jae
pop
insb
push
xor
xchg
clc
rorl
push
adc
inc
xor
imul
inc
and
lods
daa
mov
and
mov
insb
clc
nop
cmp
jle
pop
repnz
xor
xchg
mov
hlt
jg
push
in
pop
aam
add
add
add
out
mov
mov
bound
xlat
pushl
sbb
aas
mov
fnsave
pop
xor
mov
daa
fsubrs
pop
sub
in
lret
jno
sub
push
shrb
ja
iret
in
loopne
icebp
fisubrs
push
dec
idivb
push
out
push
nop
cmc
mov
neg
icebp
push
hlt
cwtl
call
lcall
add
add
les
repnz
call
hlt
pop
call
mov
add
mov
sarb
aad
and
lret
inc
xor
xchg
sub
and
inc
or
lret
pop
or
into
aas
or
or
es
testl
test
and
add
add
add
fisttpll
loopne
les
pushf
sub
test
out
jmp
sbb
scas
insl
in
movsb
jp
and
xchg
aam
jne
jecxz
imul
dec
outsb
imul
push
pop
loopne
add
push
dec
imul
imul
inc
add
jl
cmp
lea
insl
popf
add
add
add
add
scas
pusha
aas
inc
mov
pop
jo
fildl
aas
gs
inc
gs
add
aas
inc
rcrl
dec
out
dec
jb
gs
imul
gs
fs
sar
adc
popa
outsb
sub
imul
gs
push
popa
jb
jmp
jo
lahf
fs
scas
jbe
push
xchg
aad
mov
hlt
popa
add
add
add
stos
mov
sub
sub
insb
mov
imull
iret
call
cmp
jmp
test
fisubl
add
jb
add
lret
push
enter
call
jno
mov
aad
sub
daa
cmpsb
nop
cwtl
ret
insb
and
and
mov
stc
mov
inc
xchg
mov
imul
add
add
int3
xchg
int
jecxz
aad
in
out
dec
lock
outsl
in
icebp
jmp
lds
into
xlat
addr16
into
fnstcw
aad
or
in
mov
sbb
in
mov
or
sbb
ret
sbb
jmp
fwait
or
icebp
inc
call
stc
out
outsb
in
loopne
sbbl
in
xor
in
jmp
fstpt
add
add
add
and
jecxz
xor
out
fstps
add
fstps
call
lret
call
xchg
das
sub
fsts
sbb
push
pop
dec
aad
add
ret
push
cmp
bound
jp
xchg
das
daa
cs
jns
add
inc
or
out
add
in
push
pop
out
pop
or
lret
add
add
add
hlt
icebp
jae
in
jmp
mov
fsubl
pusha
sbb
rcll
lret
mov
xlat
fs
cmpsl
rolb
jae
inc
mov
icebp
data16
inc
bound
insb
push
fs
aas
popa
push
insb
aas
dec
aad
inc
outsl
fstps
push
in
aas
sub
lsl
inc
je
add
add
add
push
jo
jnp
jb
clc
or
push
xchg
jne
outsl
testl
dec
lods
insb
push
jae
push
push
shll
in
bound
mov
ja
in
cmp
les
dec
fbstp
push
mov
insl
inc
or
inc
cmp
nop
add
xchg
pop
out
loop
decl
es
hlt
inc
add
add
add
xchg
mov
mov
data16
push
shrl
sub
xor
pusha
lods
daa
ret
pusha
mov
clc
call
mov
jmp
andl
and
insb
or
dec
push
outsb
daa
jl
mov
fistpl
ret
pusha
inc
mov
and
push
cmp
add
add
add
call
popf
out
xlat
and
arpl
lods
in
stos
cmpsl
out
aad
loopne
pop
pushf
add
in
push
mov
mov
jmp
mov
in
repz
mov
adc
aad
out
pop
mov
icebp
and
pop
icebp
aaa
add
pop
in
repz
insb
jmp
repz
aad
out
pop
test
in
loop
add
add
add
dec
in
in
divb
ljmp
outsb
in
cwtl
shlb
in
and
scas
out
pop
xchg
jo
push
mov
cmp
push
mov
mov
push
test
mov
jp
xchg
aas
and
push
xor
dec
inc
inc
iret
push
inc
sub
fs
and
pop
push
pop
sub
fadds
aam
rcrl
mov
sbb
add
add
add
into
cmp
lock
xor
aam
or
ret
xchg
andb
rcll
scas
and
xchg
and
leave
ret
in
push
aas
gs
dec
jne
jno
decl
jno
push
sbb
inc
add
add
gs
push
cmovns
insl
cmp
or
push
outsl
or
sar
sbb
gs
ss
int3
outsb
inc
push
add
add
add
fisubrl
inc
cmp
aas
dec
int
inc
push
pop
fs
gs
add
add
fs
jae
fs
gs
or
add
push
dec
gs
inc
push
jae
outsl
jno
xchg
mov
fldenv
xor
xlat
inc
xor
ret
outsb
daa
imul
mov
fs
enter
add
add
xchg
lock
mov
inc
in
fdivs
out
incl
es
mov
ljmp
sbb
gs
pop
aam
lods
xor
data16
mov
push
xchg
xor
pop
outsl
xor
jb
cli
mov
pusha
xchg
xor
pop
outsl
daa
mov
pop
inc
pop
imul
das
xlat
mov
ficoms
loop
ljmp
add
das
in
add
push
sbb
fcompp
mov
add
jmp
mov
fsubrp
rcrb
cmc
ljmp
add
int3
addr16
rclb
loope
rorb
add
or
loope
mov
repnz
call
xor
add
or
loope
lock
inc
fnstcw
in
add
add
add
je
and
out
dec
cli
ret
out
int3
xlat
pop
shll
dec
into
movsl
fsts
mov
fldcw
aad
ror
nop
push
les
xchg
in
mov
outsl
in
jmp
jno
ja
pusha
mov
push
cmpb
push
jmp
sub
push
dec
push
mov
push
jmp
xor
jae
add
add
add
cs
cmp
icebp
in
cmp
out
add
jecxz
adc
lret
xchg
fs
xchg
outsb
jbe
cltd
push
cmp
fimuls
clc
or
iret
pop
jo
shll
outsl
out
aas
popa
in
dec
outsb
test
mov
push
sub
sbb
imul
insl
inc
je
dec
add
or
add
add
add
add
addr16
imul
inc
push
sub
jge
addr16
push
rcll
mov
jo
jae
or
test
push
je
cmp
jae
cmp
xchg
outsb
daa
ss
sti
outsl
aas
not
imul
insb
push
loopne
into
stc
es
sub
jmp
inc
xor
gs
cmp
dec
aas
inc
enter
sub
dec
aad
and
daa
or
add
add
add
xchg
ret
cmp
jle
js
jg
push
jecxz
leave
imul
leave
pop
out
add
mov
pop
mov
daa
cs
sub
xchg
ja
xor
dec
scas
adc
jno
lret
les
ret
les
pop
outsb
add
jecxz
lock
mov
fildl
push
loop
jmp
mov
jmp
sarl
add
add
add
xor
xchg
push
loop
add
add
repz
in
cltd
lret
jmp
ljmp
mov
fdivrp
mov
in
ljmp
xchg
in
in
dec
loop
in
add
or
jmp
mov
addr16
jmp
or
mov
in
jmp
fucom
push
sub
add
bnd
rcrl
mov
dec
std
sarl
dec
sbb
mov
aad
out
iret
out
sub
mov
aad
mov
xchg
lock
lods
imul
fs
imul
jp
xchg
dec
cmp
out
push
aas
aad
pop
add
add
add
inc
loope
jmp
outsl
jo
inc
leave
push
aas
jne
jo
pushl
ja
pushf
inc
inc
jo
pusha
push
gs
add
aas
dec
lea
popa
jo
add
push
addr16
pop
outsl
dec
push
test
pop
add
outsb
aas
dec
outsl
dec
add
adc
pop
pop
arpl
sar
fiadds
imul
cmp
add
add
or
addr16
add
pop
ds
imul
inc
gs
and
imul
lret
dec
js
mov
ja
popa
sub
in
push
inc
pop
out
gs
daa
adc
add
xchg
popf
lret
aaa
lds
cmp
data16
or
add
add
add
dec
enter
les
or
aas
hlt
jp
arpl
jge
inc
incb
es
hlt
pusha
jecxz
lds
and
aas
lods
shr
push
cmpsl
mov
in
pop
adc
gs
ss
js
push
pop
mov
hlt
jp
addr16
push
out
faddl
jecxz,pn
pop
jl
push
aad
hlt
push
sbb
add
add
into
out
call
fcomp
mov
aad
repz
in
out
call
cwtl
add
jle
or
cwtl
les
in
fwait
not
mov
add
rcr
mov
ljmp
ljmp
rcll
xchg
lret
cmp
out
addr16
sub
and
xchg
push
dec
cmp
add
add
add
out
mov
inc
dec
stc
filds
lea
add
ljmp
fcomp
cmp
mov
fdivrs
in
push
jmp
mov
jecxz
shlb
push
rolb
out
mov
push
in
pop
test
jbe
pusha
filds
inc
mov
add
pop
cmp
adc
jae
add
add
add
pop
cmp
les
jo
lds
je
aas
jo
lret
pop
cmp
push
ss
push
clc
or
mov
aas
push
push
push
jb
dec
dec
inc
xchg
pop
inc
jb
pop
aas
outsl
jp
inc
arpl
add
push
jb
dec
dec
inc
lds
jb
pop
aas
outsl
lret
arpl
or
add
push
dec
jo
cmp
push
imul
add
add
push
outsb
dec
popa
adc
push
gs
or
add
jp
pop
fstpl
aad
mov
daa
ficoml
mov
mov
ret
mov
inc
mov
lret
aam
or
dec
je
sub
nop
and
insb
jo
cmc
push
nop
daa
aad
insb
cli
ret
dec
aas
add
mov
aas
add
add
add
sub
xchg
pop
aas
dec
inc
lret
lcall
cmp
pop
add
lock
add
pop
mov
lret
add
or
out
fistpl
jmp
pop
jae
jecxz
test
jmp
out
test
push
inc
add
ljmp
gs
jmp
pop
xor
roll
add
add
jb
sub
add
or
out
mov
and
gs
mov
xlat
pop
fabs
loopne
fsubr
xlat
aaa
loopne
fstl
in
cwtl
sar
jmp
lcall
inc
fwait
dec
fisttps
add
cmpsb
bound
mov
mov
and
popa
loopne
cmp
jmp
add
add
and
inc
pop
cmp
dec
sub
in
cmp
pushl
push
ds
mov
sbb
aad
sbb
fdivrs
xchg
lods
and
cld
ret
adc
fistpll
or
mov
or
jecxz
mov
loopne
fisubrl
in
jae
dec
xor
push
addr16
cmp
mov
xor
cmp
add
sub
je
add
add
add
popa
outsl
outsl
iret
xor
js
push
gs
push
dec
arpl
sbb
les
sar
adc
je
mov
pop
jne
addr16
bound
or
je
mov
pop
dec
je
cmp
fwait
push
dec
add
dec
jae
pop
cmp
mov
or
mov
inc
jb
das
aas
data16
add
enter
add
add
sub
lock
mov
daa
pusha
xchg
outsb
enter
fidivrl
clc
insb
les
mov
js
pop
daa
nop
xchg
outsb
enter
les
ret
cmp
mov
clc
daa
push
mov
out
inc
lods
lret
test
in
jb
shr
xchg
add
push
jge
jmp
jmp
aam
push
jo
out
push
insb
push
in
insl
add
add
add
xor
bound
dec
sti
pusha
inc
push
cmc
pushl
pop
out
aad
fucomip
ret
pop
add
out
cmc
xlat
xchg
rolb
fisttpl
add
les
add
les
add
les
ret
lds
pop
pop
add
out
faddl
add
add
add
ljmp
dec
fimull
out
aad
add
pop
or
out
outsl
aad
out
filds
mov
sbb
jmp
dec
iret
movsl
fiadds
rorl
xchg
mov
mov
pop
fisttpll
push
dec
mov
inc
dec
shrl
mov
popf
cmp
inc
xchg
xor
ljmp
add
xchg
fisubl
cmp
js
dec
fiaddl
sbb
xchg
and
aad
dec
cmp
in
ljmp
lea
dec
sbb
into
dec
rcll
lea
push
add
or
add
outsl
inc
fldcw
jae
arpl
xlat
or
sub
fs
inc
hlt
outsl
insb
dec
or
add
add
add
add
xchg
adc
mov
adc
push
push
or
push
push
xor
insl
sbb
dec
and
push
cmovae
cmpsb
cmp
ja
aad
inc
inc
shrb
fs
adc
push
cs
das
inc
add
or
test
push
gs
inc
insl
xchg
sti
in
pushaw
daa
adc
push
les
add
jno
add
add
add
push
rolb
ret
pop
sbb
pop
xchg
pushf
les
cmp
imul
jb
inc
pushl
daa
cmp
loope
mov
enter
daa
push
mov
aam
adcb
jns
mov
in
inc
lods
mov
jno
ret
daa
sbb
ret
imul
test
daa
jne
and
dec
add
add
add
ja
xor
imul
ss
dec
or
sub
xor
xor
fiadds
sbb
ljmp
adc
shl
loop
fsubp
fidivrs
pop
jle
ret
loop
shl
faddl
jmp
mov
sub
jle
in
push
fsubp
rorl
mov
mov
les
mov
js
add
add
add
xchg
pop
mov
mov
psrlw
jae
pop
pop
pop
add
and
lret
daa
jecxz
inc
cs
mov
aas
or
sbb
add
xchg
or
cmc
imulb
data16
enter
fisttps
gs
enter
aad
leave
cmp
pop
call
and
pusha
lods
inc
popf
aas
movb
add
add
add
push
xorb
dec
movsl
push
dec
shll
nop
mov
lea
push
cmpsb
xor
dec
mov
dec
shr
xchg
or
sub
dec
es
dec
dec
jmp
add
gs
pusha
aas
gs
add
jnp
dec
jb
aas
data16
ja
sahf
pusha
cmovae
pusha
aas
push
popf
bound
push
push
sar
sbb
adc
inc
jne
add
add
add
sar
jecxz
ja
cmp
cmp
aas
ss
jb
xor
sar
cmp
addr16
arpl
gs
inc
bound
dec
push
imul
lcall
inc
icebp
inc
cmp
mov
xor
xchg
lods
mov
pop
jb
shll
daa
aas
push
daa
cmp
mov
shll
lret
es
arpl
mov
push
add
aaa
add
mov
push
enter
shlb
daa
xor
inc
sti
inc
pop
cmp
arpl
negl
mov
ljmp
daa
dec
ret
pop
out
jp
dec
xchg
xchg
lcall
xchg
daa
dec
loop
lcall
sub
jb
pop
adc
pop
sbb
and
aad
add
add
add
sub
jmp
push
mov
les
sbb
xor
sarl
push
ret
sub
sub
fsubs
mov
sub
in
shl
lock
xchg
fstp
nop
aam
dec
out
add
mov
ret
mov
jecxz
nop
lock
shrl
add
mov
add
add
stos
fstpt
ffree
data16
aad
sub
stos
inc
push
xchg
mov
push
push
jecxz
jmp
fldt
push
xor
sbb
inc
sbb
les
dec
adc
mov
push
add
stos
imul
cmpl
push
mov
in
lcall
dec
mov
push
mov
xchg
sbb
aaa
mov
push
test
sub
gs
pop
adc
xor
cmp
popa
sub
pop
pop
outsb
mov
or
add
pusha
inc
insb
push
sub
dec
jo
movsb
xor
imul
arpl
add
or
add
add
add
pop
aas
inc
lds
push
fs
sar
aam
addr16
pop
aas
push
pop
pop
push
outsl
and
inc
je
sub
popa
push
jp
xor
les
xchg
ja
imul
pusha
mov
mov
out
daa
outsl
xchg
clc
jmp
cmp
loopne
outsl
fucomp
out
fisubl
dec
ja
mov
add
add
jmp
pushw
ret
sbb
inc
jb
dec
das
sbb
jno
adc
push
xor
mov
lcall
fs
push
in
ret
cs
jb
jbe
imul
negl
mov
sarb
pop
test
stos
mov
out
fstps
xlat
into
stos
fwait
out
mov
add
add
push
inc
inc
add
mov
push
pusha
stos
imul
mov
push
add
mov
out
mov
fmuls
pop
out
push
pop
inc
add
mov
out
mov
fcoms
cmp
dec
iret
sbb
dec
mov
add
pop
add
sub
mov
in
repz
out
mov
mov
lret
and
xchg
int3
pop
lods
add
add
add
push
shll
mov
inc
rcll
mov
push
mov
xchg
fisubs
aaa
imulb
pop
dec
mul
push
daa
jecxz
dec
jmp
out
scas
js
divb
and
iret
fs
clc
adc
jmp
mov
fs
ret
mov
dec
fisubl
push
jmp
add
xchg
shlb
dec
shll
in
add
push
sar
incb
dec
outsl
push
sub
sub
call
push
jo
cmp
mov
arpl
or
insl
pop
jo
pop
das
inc
add
pop
dec
gs
dec
jbe
or
add
push
pop
sar
xchg
or
stos
push
dec
jne
or
add
add
push
sar
add
dec
gs
sub
test
ljmp
push
push
imul
sub
pop
mov
imul
daa
outsl
xchg
dec
leave
jb
cmp
mov
jecxz
lods
xchg
lret
sub
aas
lods
pushf
in
mov
mov
mov
adc
fcmovnb
jno
add
arpl
add
add
add
out
xor
aas
insb
cld
in
insl
rcll
data16
idivl
jns
add
dec
dec
lcall
adc
xchg
push
hlt
arpl
imulb
pop
loope
cltd
or
out
xlat
xchg
in
hlt
mov
stc
call
mov
mov
mov
mov
jmp
and
cwtl
jmp
add
mov
mov
shlb
push
jmp
gs
add
push
fildll
adc
jno
pusha
call
jae
or
imul
add
xor
push
mov
mov
xor
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
mov
add
add
add
add
js
and
js
and
push
or
js
and
js
and
push
or
cmp
and
cmp
and
sub
and
push
pop
add
arpl
cmp
and
or
das
or
push
repnz
pop
ljmp
decb
and
iret
or
clc
or
xor
arpl
add
add
add
call
or
mov
and
test
and
xchg
das
daa
add
call
mov
xor
add
xor
add
xor
add
das
jnp
cmp
add
jo
add
mov
add
cmp
add
push
daa
add
xor
add
add
add
add
xor
add
xor
cmpsb
xor
add
xor
push
xor
add
pop
std
ja
mov
add
mov
add
mov
add
mov
add
mov
incl
add
add
add
dec
xchg
mov
inc
push
and
xor
fcoml
jae
sub
push
js
sub
std
loop
cli
adc
and
enter
xchg
incb
pop
enter
les
les
sbb
cwtd
dec
mov
push
pop
fs
fs
mov
inc
and
xor
stos
sbb
add
add
add
repnz
popf
mov
inc
mov
mov
out
add
sbb
jle
notl
and
inc
push
push
mov
inc
imul
push
and
pop
pop
pop
iret
pusha
xor
pop
mov
cmp
sysexit
adc
icebp
pop
mov
js
inc
mov
pop
add
add
add
pop
jne
lock
call
add
aam
pop
and
xor
fucomp
shrb
xchg
xchg
xor
into
scas
xchg
cwtl
lea
push
dec
sti
xor
pop
and
jne
call
int3
test
into
aas
sbb
push
xlat
fistl
or
int3
aas
repnz
push
andl
gs
mov
aam
add
add
add
xchg
andb
or
insb
jg
xchg
lock
cmp
xchg
add
pop
xor
push
out
int
rorb
cmc
iret
setl
push
insb
mov
into
inc
xchg
pop
jo
pop
mov
mov
pop
push
stos
pop
jmp
jge
inc
cmpsl
sahf
loop
mov
scas
mov
or
orb
pop
add
add
add
push
mov
push
push
adc
sbb
mov
or
bound
pop
and
adc
add
mov
pop
mov
stc
pop
iret
les
mov
adc
dec
dec
imul
out
jmp
cmc
cli
fstpt
ds
mov
jnp
xchg
imul
leave
cltd
add
add
add
clc
mov
cs
std
int
mov
sub
incl
sub
hlt
cmc
push
fneni(8087
push
bound
mov
pop
add
push
lods
or
cmp
push
sarb
outsb
push
inc
repz
sbb
sub
cld
fildl
or
and
mov
lea
dec
sub
add
pop
push
jmp
sub
and
and
xchg
pop
and
sub
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
or
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
jmp
and
xchg
pop
and
xchg
pop
and
sub
add
jle
add
add
call
add
push
jle
add
add
call
add
add
add
add
sbb
add
add
test
and
push
jg
add
add
test
and
pop
arpl
or
push
or
jo
add
and
push
or
into
bound
or
sub
and
sub
and
xor
add
and
add
arpl
add
add
add
xchg
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
pop
mov
sub
pop
mov
add
pop
movsl
sub
mov
add
pop
mov
add
pop
mov
sub
mov
add
pop
sti
sub
mov
add
pop
xchg
sub
pop
mov
add
add
add
add
pop
sbb
roll
mov
add
pop
aam
roll
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
inc
lret
xchg
pop
and
xchg
pop
and
xchg
pop
and
loope
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
leave
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
aam
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xlat
leave
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
push
leave
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
push
leave
and
xchg
pop
and
xchg
pop
and
cmp
and
testl
add
or
cmp
and
or
arpl
sub
and
sub
and
clc
pop
and
movsl
aad
add
pop
and
call
pop
and
add
add
add
fildll
add
pop
and
call
xchg
xchg
xchg
xchg
xchg
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
arpl
xchg
call
push
inc
xchg
call
push
inc
xchg
int3
push
inc
xchg
clc
push
inc
xchg
and
xchg
and
inc
add
add
add
xchg
xor
inc
xchg
inc
push
inc
xchg
pop
push
inc
xchg
jl
inc
xchg
and
add
mov
dec
inc
xchg
mov
inc
xchg
mov
dec
inc
xchg
aam
inc
xchg
orb
mov
xchg
fmuls
xchg
les
xchg
rorb
xchg
fmull
xchg
jo
inc
xchg
and
add
and
add
pop
mov
add
add
add
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
add
add
add
pop
mov
jmp
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
js
and
push
add
add
and
js
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
call
add
clc
add
clc
add
call
add
mov
add
test
and
test
and
mov
add
test
and
xchg
push
daa
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
sbb
sbb
aam
or
in
test
and
or
sbb
and
call
call
sub
cmp
call
ja
sub
outsl
pop
sub
popw
imul
sub
sub
add
cmp
or
or
sub
out
jl
add
add
add
sub
out
or
dec
out
fs
cmp
out
mov
add
negl
jne
mov
add
sbb
cli
fcoms
popf
cli
loopne
mov
cwtl
adc
cli
mov
adc
js
pop
cli
inc
adc
cli
mov
adc
stc
and
add
add
add
adcl
andl
xchg
xorl
in
sahf
add
cmc
xchg
adc
int
jecxz
mov
repz
sub
adc
pop
aad
mov
insl
sahf
sbbl
xchg
xchg
sbb
xchg
sub
xchg
push
sbb
xchg
sbb
mov
adc
int
jecxz
mov
repz
adc
add
add
mov
sbb
sbbl
xchg
xchg
sbb
or
xchg
cld
cld
out
cld
cld
divl
cld
cld
xlat
xor
jl
aaa
ss
cli
pop
ss
pop
ss
std
ja
dec
cli
inc
ss
push
ss
std
mov
or
xchg
mov
std
out
jl
divl
mov
add
add
add
jl
xlat
ss
cli
daa
aaa
cld
cli
aaa
aaa
int3
cli
pop
aaa
cmp
pop
aaa
cmp
addr16
cld
cli
ja
dec
cli
inc
aaa
cmp
push
aaa
xchg
lcall
xchg
movsb
jle
pop
mov
pop
and
pop
xchg
and
data16
in
xchg
and
sbb
add
xor
adc
cmp
and
je
xor
fcompl
inc
test
cmp
fs
push
pop
je
add
add
add
mov
xchg
jns
pop
movsb
jns
push
mov
fcompl
les
pop
aam
cld
push
in
adc
hlt
leave
sbb
add
xor
adc
cmp
and
je
xor
pop
push
inc
test
push
push
cwtl
pop
popa
std
jb
js
inc
lock
std
adc
pop
std
and
mov
std
loop
cmp
lock
std
mov
mov
std
add
add
add
xchg
in
fdivr
mov
in
cwtl
std
mov
in
cmp
ret
std
repnz
clc
std
ret
adc
pop
and
mov
mov
sub
xchg
pop
and
cmp
cmp
sub
xor
or
enter
shl
clc
clc
hlt
stos
clc
nop
hlt
stos
clc
and
in
adc
fcompl
adc
mov
add
add
add
lea
jge
insl
adc
lea
sbb
adc
in
test
adc
and
addr16
aad
popf
adc
gs
push
insl
inc
lea
xchg
cmp
push
jge
insl
push
and
and
push
adc
add
push
in
cld
push
in
pop
or
add
add
fdivl
pushl
sub
rdpmc
sub
pop
xor
outsl
xor
aas
xor
xor
lahf
xor
scas
xor
jg
sub
xor
xor
xor
out
xor
xor
xor
xor
xor
xor
xor
xor
sysenter
lods
das
pop
xor
das
outsl
xor
xor
xor
xor
lods
das
lahf
xor
das
scas
xor
das
jg
add
add
add
lods
das
xor
das
fbstp
das
out
xor
das
mov
xor
and
or
sbb
sbb
fidivrl
pushf
fimull
jp
pop
pushf
rcr
imul
mov
fisubrl
pop
fcmove
fs
fistpl
jmp
test
sti
mov
xor
sbb
fs
add
add
add
lahf
in
int
cmpsl
adc
pop
lahf
cmp
imul
int3
mov
jl
stos
movsb
int3
mov
addr16
fistpl
cmp
cli
fnsave
stc
or
enter
sar
fdivrp
clc
mov
fimuls
clc
cmp
js
cmp
jo
dec
fimuls
or
inc
negl
fistpll
imul
fimuls
add
add
fisubs
idivl
mov
mov
enter
sar
sti
mov
fisttps
cld
lret
cld
mov
fcomip
sti
lret
cld
or
inc
cld
sbb
mov
cld
ljmp
inc
adc
or
in
or
std
clc
stc
or
mov
call
mov
add
add
fsubrs
or
jge
jns
test
pop
push
movsl
test
push
popf
cwtl
cmp
lds
sbb
in
or
std
jnp
push
lds
push
mov
push
push
sbb
pop
test
push
gs
mov
jge
jns
test
imul
cmp
cmp
cmp
and
cmp
add
add
add
daa
cmp
and
cmp
and
cmp
and
addr16
and
cmp
and
pop
cmp
pop
test
cmp
mov
cmp
pop
cwtl
cmp
pop
call
cmp
pop
enter
fdivrs
and
aaa
cmp
sub
pop
cmp
jl
ja
mov
cmp
add
add
add
lods
and
cmp
je
shll
fs
push
lret
int3
add
repz
roll
mov
dec
shll
scas
xor
adc
xchg
mov
arpl
stos
rolb
ja
shll
addr16
ret
pop
adc
push
dec
shl
iret
test
repz
sub
add
add
add
add
dec
shlb
scas
shlb
cmpsb
in
rolb
add
push
xchg
or
arpl
loop
cld
adc
push
cld
and
test
repnz
cld
loop
or
push
jecxz
cld
inc
jecxz
cld
repnz
cld
add
mov
add
xlat
lock
repz
nop
repz
xlat
adc
xlat
push
hlt
add
add
add
inc
xlat
dec
hlt
adc
jo
add
test
repnz
push
hlt
loop
mov
push
xlat
nop
hlt
xlat
test
jb
mov
adc
hlt
xchg
fdiv
hlt
sbb
hlt
mov
and
inc
adc
cmp
cmpsb
adc
cmp
xchg
test
adc
and
cld
xor
sbb
add
add
add
loop
sbb
jecxz
sbb
fiaddl
or
mov
lds
xor
movsl
movsl
or
lcall
mov
jp
or
jp
or
push
or
call
sbb
iret
cmp
and
cmp
lret
cmp
and
cmp
and
cmp
and
cmp
add
add
add
sub
sub
and
xor
add
add
sbb
in
and
cmp
imul
and
and
jnp
sub
jae
adc
dec
cmp
cmp
cmp
cmp
and
cmp
and
cmp
and
cmp
and
cmp
jmp
sub
fistpll
push
and
cmp
and
cmp
jle
jmp
xchg
repz
add
add
lcall
aaa
lea
aas
test
inc
jge
fisttpl
fistpl
fs
fisubrl
push
out
fidivrl
outsl
mov
push
int3
push
scas
mov
pop
cmpsb
jbe
arpl
cs
add
ret
add
jg
mov
xchg
xlat
ret
add
add
add
bound
ret
pop
popa
out
ss
out
es
out
es
out
aam
out
pop
aam
out
outsb
aad
out
xchg
aad
icebp
xchg
aad
icebp
cmpsb
aad
icebp
xchg
aad
repnz
aad
icebp
aad
icebp
mov
loopne
cmpsb
aad
icebp
xchg
xor
aad
icebp
push
inc
icebp
push
push
icebp
push
inc
icebp
push
pusha
icebp
ss
sbb
mov
add
add
add
fistps
xor
popf
cld
in
cwtl
cld
mov
loopne
std
dec
loopne
std
push
loopne
insb
mov
or
into
js
or
mov
cmp
icebp
imul
jne
lea
dec
pop
jo
scas
dec
adc
lods
ds
call
cmp
inc
sub
and
xchg
pop
and
sbb
push
push
add
add
add
add
sbb
add
cld
cld
sti
sbb
hlt
add
iret
out
les
test
mov
xor
scas
mov
mov
jnp
jle
je
adc
adc
call
and
push
add
xchg
inc
cmp
arpl
sbb
movsl
adc
js
and
sbb
and
insb
pop
mov
xor
add
add
add
inc
mov
sub
mov
jb
enter
jo
dec
adc
aad
clc
mov
and
cld
sbb
xor
adc
xor
sbb
inc
sbb
xor
sub
xor
pop
arpl
lret
pop
mov
sarl
lds
sbb
lret
add
add
add
mov
rol
and
xchg
int3
fcompl
add
fisubl
fstpt
outsl
data16
aaa
fdivs
add
call
cs
add
aaa
xlat
aaa
rcrl
test
mov
lock
js
mov
adc
cmc
subb
pop
test
and
pusha
shll
add
add
rolb
mov
imul
mov
aam
out
dec
aad
in
xchg
shll
scas
rcr
in
mov
sar
in
pushf
rcll
out
stc
shr
in
adc
push
xchg
fbld
outsl
fisttps
sti
icebp
fists
sti
mov
in
cli
test
loopne
stc
scas
fldl
stc
jnp
dec
stc
add
add
add
fisubrs
neg
out
clc
fisubrs
clc
rcr
hlt
mov
repnz
shr
sbb
mov
dec
mov
popa
adc
dec
adc
subl
adc
popa
icebp
adc
popa
ljmp
pusha
arpl
cmp
adc
inc
or
xlat
inc
lret
adc
inc
jg
mov
dec
adc
push
adc
add
and
adc
add
ret
sub
repz
in
adc
adc
in
adc
pop
adc
inc
adc
xor
xchg
xor
xchg
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
lcall
xor
adc
xor
add
add
add
adc
xor
adc
xor
adc
xor
adc
xor
adc
lcall
xor
adc
xor
jae
rcll
inc
xor
adc
jle
lahf
xor
xor
and
int
xchg
insb
jg
int3
lcall
into
jmp
pop
mov
pop
pop
lods
roll
add
add
add
outsl
incl
dec
daa
add
inc
mov
cmp
mov
aaa
add
fldenv
addr16
movl
xchg
pop
add
fcomps
daa
fisubl
pop
outsl
notl
sarb
stc
inc
fildll
rcr
daa
in
add
add
add
xchg
fidivrs
ljmp
iret
ljmp
iret
ljmp
iret
ljmp
das
jmp
rorb
jmp
rorb
jmp
rcrb
jmp
ror
ljmp
iret
ljmp
outsl
ljmp
dec
ljmp
dec
ljmp
dec
ljmp
add
add
jmp
or
cmp
das
or
or
pop
or
cld
mov
pop
push
in
lods
decl
cld
mov
out
or
fisttps
xchg
jnp
push
je
dec
push
je
inc
push
movsb
imul
mov
aaa
push
mov
das
push
mov
daa
push
test
push
xchg
cmp
push
je
femms
je
pop
pmulhuw
add
add
add
decl
hlt
cmp
push
hlt
cmp
push
hlt
sub
push
add
fisttps
add
and
add
and
and
and
and
and
and
inc
or
dec
sbb
xor
push
mov
xor
push
jg
add
loopne
ss
int3
xor
adc
xor
add
add
add
pop
adc
xor
test
lahf
xor
mov
sbb
aaa
scas
sbb
sub
cmp
ss
and
outsl
mov
mov
lods
daa
ret
inc
movsl
out
add
xchg
push
out
xchg
lcall
subl
push
pusha
mov
add
add
pusha
cltd
nop
pusha
fwait
fsubs
aad
ret
mov
push
ret
xchg
loopne
dec
mov
aam
pop
sahf
or
fmuls
xchg
jns
mov
mov
ljmp
stos
lock
fsubrp
adc
out
xor
std
out
rcl
pxor
aad
in
push
aad
out
add
add
add
and
adc
out
lcall
shll
in
lods
sarl
xchg
pop
fpatan
pop
xlat
or
repz
fdivr
repz
fdivrs
repnz
aad
icebp
fst
pop
icebp
cmp
ret
adc
sub
scas
lock
xlat
icebp
neg
fldt
clc
fcomp
and
cmp
pop
das
push
aaa
sbb
pop
sbb
add
add
add
push
fistps
lahf
pop
test
sbb
inc
sbb
sbb
in
sbb
in
sbb
push
pop
les
sbb
sbb
mov
mov
sbb
mov
fimuls
xor
or
inc
or
jge
or
jne
or
insb
mov
or
add
add
or
cmp
fdivrl
add
cmp
and
cmp
sarl
and
cmp
and
sbb
dec
cmp
mov
idivb
hlt
sbb
aas
xor
gs
rolb
repnz
sbb
xor
sbb
xor
sbb
xor
sbb
add
add
add
bound
shll
insb
and
xor
pop
pushl
mov
jnp
adc
sar
push
dec
daa
add
data16
ret
aad
aam
mov
mov
mov
into
scas
mov
add
dec
xlat
mov
mov
shll
movsb
aad
xchg
aad
jle
add
add
add
add
mov
inc
imul
jne
popf
mov
ljmp
rorl
insb
sarl
adc
imul
out
ror
call
ja
ljmp
rolb
or
pop
jmp
push
rclb
push
adc
add
pop
mov
out
add
add
add
jmp
mov
enter
xchg
ljmp
adc
scas
int3
pop
in
pop
rcrl
mov
jmp
nop
pop
gs
pop
xor
rcl
xor
jmp
jbe
or
outsl
out
sbb
lahf
out
sub
and
push
sbb
ja
sbb
arpl
sbb
inc
dec
push
adc
sldt
add
add
add
jb
js
lret
sub
adc
stc
rclb
mov
xor
push
jmp
or
xchg
pop
and
loop
adc
cmp
adc
ret
pop
adc
mov
movsb
movlhps
popf
push
add
mov
lea
xchg
pop
add
pop
sub
add
add
add
fcomps
inc
xor
mov
sbb
ss
sbb
out
or
push
cmp
sbb
cmp
sbb
cmp
sbb
cmp
lock
and
cmp
and
mov
cmp
push
aaa
cmp
mov
and
xchg
add
add
add
mov
sar
test
and
xchg
outsb
daa
add
out
arpl
aad
jge
scas
lahf
mov
pop
xlat
lret
mov
pop
fcoms
inc
fmuls
sub
andw
lock
or
aam
pop
inc
ret
xchg
dec
aam
mov
mov
roll
push
ret
pop
ret
add
add
add
test
imul
popl
mov
rol
push
roll
pop
and
pop
iret
or
jmp
iret
shr
enter
sub
sbb
call
or
fsub
mov
out
in
int
out
int
out
int3
jae
ss
push
nop
pop
stc
add
xlat
jnp
push
xlat
mov
add
add
add
data16
loope
insb
xlat
sbb
ret
repz
mov
icebp
mov
xchg
inc
fnstenv
lret
fcom
lock
fdiv
lock
mov
icebp
std
xlat
out
out
jb
and
scas
sbb
jg
sbb
insb
push
sbb
fs
sbb
cwtl
sbb
pop
sbb
push
or
add
add
add
addr16
sub
js
testl
sub
or
ss
sbb
dec
jmp
or
clc
scas
or
pop
call
dec
push
cmp
adc
fisubrs
pop
push
cmp
and
xor
mov
cmp
sub
cmp
cmp
sub
cmp
add
add
add
daa
in
pop
daa
or
test
jno
lds
test
push
sub
cmp
pop
sub
ds
sub
cmp
hlt
and
mov
es
aas
fisubs
aas
adc
cwtl
aas
mov
in
add
push
and
xchg
xor
xor
xor
shlb
xor
mov
add
add
add
cmpl
arpl
stc
ret
arpl
stc
mov
jp
jbe
dec
in
fadd
sub
std
mov
jecxz
pop
sahf
shr
push
cltd
out
aas
cwtl
lock
mov
mov
jnp
icebp
sbb
out
ffree
or
push
pop
aaa
add
std
mull
rcll
or
add
add
add
movsb
stc
lahf
mov
pop
and
xchg
shl
fadds
mov
pop
shlb
test
rclb
xchg
iret
rcr
iret
sbb
int
ficomps
cmp
and
fstp
enter
pop
lret
inc
fbstp
leave
aaa
loope
mov
add
pop
or
or
mov
add
add
add
push
aad
aad
aam
aad
shl
adc
push
xlat
and
push
xlat
push
shlb
xlat
sub
enter
mov
push
sbb
sbb
stos
jmp
repnz
fldt
add
mov
push
or
pop
cmove
imul
mov
push
fimull
adc
jno
adc
add
add
add
psraw
push
adc
outsl
sbb
adc
pop
ss
push
bound
rdpmc
xchg
adc
xor
sub
add
and
xchg
pop
and
loop
adc
loop
adc
dec
ficoml
cld
flds
and
xorl
jo
sbb
xor
fisttpll
cmp
mov
xor
add
add
add
out
fimull
sbb
xchg
xor
shlb
insl
ficomps
ficomps
fidivrs
xor
fisttps
xor
ficoms
outsl
ficoms
xor
fists
xor
fbld
jge
insb
xor
fildll
sbb
pop
xor
fisubs
mov
mov
lahf
mov
popf
jmp
popf
xchg
mov
xor
popf
and
roll
add
add
add
paddsb
test
in
out
jge
in
stc
gs
jmp
fs
pop
pop
shr
and
adc
in
sub
mov
cmp
in
push
movsb
push
in
addr16
in
ret
test
mov
xchg
fistpll
out
in
repnz
or
icebp
test
in
inc
pop
jo
xchg
pop
or
add
add
add
jne
push
loope
inc
and
scas
inc
dec
ficoms
pop
add
jecxz
pop
mov
sar
aaa
push
aam
ss
or
jae
jecxz
and
xlat
pop
cmp
fcomp
cmp
scas
cmp
xor
mov
cmp
add
into
cmp
and
out
cmp
cmp
add
add
add
dec
inc
ret
fbld
inc
mov
add
cmp
inc
popa
pop
pop
loopne
push
call
out
or
in
lret
and
or
mov
inc
or
lods
fistl
mov
lret
arpl
lea
jnp
insl
imul
insl
pop
xchg
or
add
add
add
pop
fwait
or
dec
mov
or
cmp
or
imul
lods
imul
lods
pop
rorl
dec
jecxz
add
lret
faddp
cmp
sarb
hlt
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
add
aam
mov
jo
cmp
loop
cmp
loop
cmp
loop
cmp
add
add
add
sbb
lret
loope
cmp
loope
cmp
shl
cmp
fsub
jo
mov
loopne
cmp
push
loopne
cmp
pusha
loopne
cmp
outsl
or
outsl
addr16
jg
imul
push
arpl
lahf
iret
dec
out
ret
out
mov
icebp
in
push
scas
cld
in
adc
add
add
add
adc
sub
mov
out
mov
out
xchg
jbe
out
fwait
outsb
dec
out
mov
pop
dec
out
mov
xor
lret
out
loope
loop
stc
mov
shlb
add
dec
clc
test
test
mov
addl
mov
aam
ss
mov
add
add
add
popf
aam
aaa
in
xchg
js
cmp
mov
roll
sarl
into
rclb
adc
cmp
rclb
aas
addr16
aas
or
xchg
ds
fsubrl
ds
fmull
ds
ficoms
cmp
pop
cmp
fstpl
test
ds
fldl
add
add
add
and
data16
pop
aas
adc
pop
push
adc
pop
push
adc
dec
mov
insl
dec
cmpsb
andnps
mov
mov
xlat
setno
out
sub
or
adc
sub
xchg
mov
enter
movhlps
call
jne
cmpsl
fnstcw
shr
loop
and
xchg
pop
and
ret
push
mov
push
add
add
add
gs
adc
adc
bound
adc
enter
pop
cmp
push
add
xor
lret
aaa
pop
fadd
aaa
mov
cmp
lock
pop
cmp
ljmp
jge,pt
add
or
loop
mov
stos
and
or
mov
fidivl
aas
fidivrl
add
add
add
fidivrl
xor
fsts
fldl2e
xor
aam
xor
leave
xor
stos
xor
xlat
std
xor
adc
dec
popf
loopne
in
movsl
inc
cmc
xchg
hlt
int
fucom
or
into
loopne
jg
loop
addr16
loop
pop
push
loop
addr16
adc
loope
into
loope
mov
add
add
add
shl
fnstsw
mov
scas
test
repnz
mov
stos
in
add
mov
adc
insl
jg
shll
in
xor
stc
mov
lock
xchg
jle
add
pop
xchg
rcr
ss
aam
aaa
sarb
cmp
roll
iret
xchg
pop
rolb
mov
rolb
add
add
add
xor
pop
xor
xchg
aas
xchg
fildl
fcoml
rcr
or
jecxz
push
inc
loopne
fs
stos
fnstenv
sti
fisubrl
jae
aam
mov
sarl
push
aad
cmp
popa
in
cmp
adcl
mov
push
cmp
shrl
cmp
popa
dec
pop
arpl
pusha
jp
lock
add
add
pop
dec
sbb
arpl
popa
inc
scas
pop
int3
inc
std
pop
pop
xor
push
scas
sbb
dec
mov
sbb
pop
sbb
fistl
sbb
dec
arpl
add
pusha
fcoml
movsl
int3
int
pmullw
int
or
or
loopne
and
or
jne
push
push
push
fcmovnu
or
mov
add
mov
sti
rolb
test
add
pop
and
shll
xor
aad
xor
and
mov
pusha
xor
aad
xor
fcomps
xor
fsubr
xor
xor
fldenv
fsubrs
xor
xlat
ljmp
int3
lahf
ss
adc
ror
push
cmp
add
add
add
loopne
cmp
mov
add
and
jecxz
or
loop
js
xchg
pushf
testb
ret
rolb
adc
mov
jne
xchg
stc
sbb
mov
xor
in
bound
data16
jns
fildll
push
jl
xchg
pop
add
add
add
pop
ljmp
lds
repz
mov
cmc
inc
scas
hlt
mov
ds
lahf
inc
mul
xchg
cmp
cli
out
cmc
or
add
dec
jbe
jmp
sarb
pop
lds
pop
mov
aaa
pop
roll
add
aad
ss
aad
ss
mov
aaa
xlat
into
xor
xlat
add
add
add
mov
sbb
les
jmp
lods
pop
xor
mov
xlat
mov
rcl
xor
xlat
push
xor
fadds
xor
xlat
pop
xor
xlat
and
xlat
icebp
xor
add
xor
sahf
xor
fnstenv
and
fcomps
jge
out
mov
push
or
sbb
mov
das
or
pop
int3
or
add
add
add
pop
decl
loopne
mov
push
adc
push
inc
push
jbe
push
dec
js
insl
inc
ret
or
dec
push
lods
push
mov
inc
jno
xchg
bswap
push
sub
sbb
inc
mov
inc
fidivs
adc
movlps
shlb
shlb
ret
mov
add
aad
ds
add
add
add
push
aad
aas
in
mov
xor
fstpt
push
leave
aas
jnp
int3
aas
js
add
add
push
fistl
xor
fstpt
mov
fldt
adc
fnsave
sbb
cli
xor
shll
or
fimull
xor
fxch
xor
xor
add
add
add
imul
sti
jmp
sahf
inc
in
push
mov
loopne
mov
fldl
mov
xchg
js
loopne
imul
mov
loopne
pop
push
loopne
push
ret
int
loop
lds
loop
mov
jecxz
lods
lock
movsb
sbb
es
adc
dec
xchg
xor
pop
mov
rolb
loop
jbe
loope
add
add
add
outsb
jecxz,pn
es
add
mov
negb
mov
and
adc
icebp
fsubrs
pop
cmp
mov
int3
mov
in
leave
dec
xor
lret
adc
sahf
xor
iret
outsl
xor
iret
xlat
xor
iret
pop
xor
iret
xor
rclb
xor
add
add
add
movsl
shrb
xor
xor
rcrb
xor
inc
int
ss
int
ss
inc
ss
int
ss
into
xorb
mov
sti
into
mov
xor
inc
scas
adc
mov
and
xchg
pop
and
ret
add
xor
loop
adc
loop
adc
loop
adc
ret
inc
ret
push
add
add
add
ret
adc
cmc
adc
sbb
stos
gs
adc
jae
adcb
adc
cmovae
push
sub
push
inc
arpl
arpl
adc
int
inc
pop
es
dec
pop
or
pop
pavgb
cltd
xor
and
int
lcall
fdivl
add
add
add
fstl
or
insb
aaa
inc
aaa
std
ficompl
aaa
jne
repz
fidivrl
aaa
xchg
mov
push
cmp
mov
pushf
cmp
mov
sbb
les
cmp
mov
cmp
mov
and
shlb
rcrb
shlb
xchg
fucom
or
add
add
add
loop
lds
fwait
mov
xchg
loop
lods
ljmp
pushf
jnp
popf
xchg
push
loop
mov
hlt
test
loopne
jbe
loopne
outsb
loopne
add
jecxz
or
int
inc
rcll
inc
rclb
popf
mov
in
add
inc
cli
mov
add
add
add
or
roll
loop
pop
pop
add
stos
cmp
rorb
test
mov
add
push
inc
int3
aas
das
mov
int
sub
adc
mov
cs
into
aas
cs
movl
enter
enter
enter
enter
leave
pop
xor
leave
add
add
add
shll
leave
xor
leave
cmc
xor
fidivs
dec
leave
or
xor
leave
pop
xor
leave
sub
and
pop
cmc
adc
pop
or
hlt
dec
std
adc
dec
es
adc
fstpt
adc
fcoml
jmp
xchg
pop
and
ret
lcall
adc
and
call
pop
int3
add
add
add
filds
sbb
push
sbb
roll
and
sbb
popa
repz
pusha
sub
mov
pop
sbb
inc
mov
sbb
inc
jo
jge
out
loope
adc
add
mov
aad
cmp
or
jb
dec
cmp
and
loope
pop
cmp
mov
mov
ret
add
add
add
jnp
mov
cmp
mov
nop
cmp
mov
lret
cmp
mov
imul
enter
enter
enter
or
xor
js
and
les
mov
shlb
insl
aas
mov
shlb
xchg
add
loope
push
add
add
add
popa
mov
cmc
test
mulb
rclb
scas
ret
xor
pushf
hlt
andl
gs
in
jle
loopne
jns
fisubrs
jns
loopne
imul
fimuls
leave
ficoms
sbb
xor
lock
test
loopne
stos
nop
loopne
add
add
add
fwait
pop
dec
lret
pop
lret
xchg
push
xor
lret
leave
lret
sub
lds
adc
push
xor
out
jl
dec
xor
lret
enter
enter
enter
enter
leave
add
sub
sub
lds
sub
add
sub
push
cs
inc
cs
add
add
add
add
ss
add
into
pop
ss
in
xor
iret
jae
and
push
lock
dec
push
or
inc
das
or
pop
scas
or
pop
mov
or
das
pop
push
inc
pop
stos
cpuid
dec
pop
adc
popf
adc
mov
shr
loop
and
lea
and
ret
xchg
rolb
bnd
sahf
push
xchg
mov
add
add
loope
paddusb
orb
lret
int3
psllw
xor
adc
int3
aas
adc
int3
cmpsl
adc
push
or
rorl
movsb
push
inc
adc
or
mov
js
and
add
shrl
adc
xor
sarl
xor
shl
xor
shr
xor
aad
in
shlb
xor
add
add
add
xor
fldcw
cmp
mov
push
mov
sub
mov
sarb
stc
ret
test
and
add
shrl
xor
shlb
push
xchg
cmc
cltd
rolb
sub
imul
mov
pushf
hlt
cmp
add
ja
xchg
cmpsb
add
add
add
xchg
cmp
loope
data16
pop
sbb
or
jno
adc
out
mov
call
imul
call
add
div
jne
pop
cmc
leave
sbb
push
bound
hlt
cltd
pop
mov
shll
jecxz
pop
pop
xchg
int
xor
int3
xlat
xor
lret
add
add
add
lock
leave
sbb
out
fwait
sub
inc
into
sub
inc
mov
inc
cwtl
sub
inc
aam
add
inc
out
sub
dec
sub
inc
sahf
sub
inc
test
push
inc
and
sub
inc
jne
dec
inc
sbb
popa
inc
shrb
movsl
inc
fisubrs
mov
add
pop
int
pop
aaa
push
xor
pushl
add
add
add
fdivl
push
xor
cmp
gs
adc
les
mov
fs
cmpb
dec
lahf
sahf
adc
lahf
push
pop
pop
xchg
jb
or
sbb
xchg
pop
test
pop
scas
lretw
pop
lods
pop
sbb
sbb
mov
sti
sbb
stos
jbe
lret
add
add
add
stos
je
aaa
lcall
cld
xchg
cmovb
psrad
adc
test
dec
inc
cmp
xor
inc
jmp
cmp
addl
ds
jbe
adc
ds
xchg
sub
out
pop
inc
sub
mov
test
add
xor
add
add
mov
xor
xor
lea
dec
xor
fidivl
sbb
mov
aaa
xor
das
or
xor
xor
das
call
xor
jg
push
data16
xchg
data16
mov
mov
adc
jl
lea
adc
adc
pushf
movsb
adc
add
mov
xchg
adc
add
jg
mov
loope
push
pop
cmp
ret
pop
int3
push
sti
pop
xchg
mov
lock
xchg
shlb
add
jl
dec
cmpsl
fisttpl
sbb
test
arpl
pop
mov
add
pop
inc
aaa
loop
cmpl
push
inc
cmp
and
inc
add
mov
add
add
add
add
sbb
xor
sbb
xor
sbb
xor
sbb
xor
mov
sbb
sbb
pop
xor
stc
pop
jns
icebp
pop
test
xor
xchg
sbb
xor
xchg
pop
mov
add
pop
and
cltd
pop
sbb
lea
cli
add
add
add
mov
push
mov
jp
push
cmp
jg
push
cmp
pop
push
test
cmp
loopne
cltd
les
push
mov
in
adc
scas
ficoml
in
cmpsl
adc
fistpl
or
mov
or
sub
movsl
adc
fs
and
and
and
lea
and
lds
pop
les
add
add
add
xor
and
cmc
or
cmp
and
jle
push
cmp
xchg
cmp
fdivrl
jl
lret
and
cmp
inc
adc
and
push
cmp
and
cmp
and
cmp
and
cmp
and
cmp
stc
inc
jns
jmp
or
pushl
and
pop
sbb
add
add
add
lds
das
xor
pop
fdivs
sbb
xor
sbb
push
and
cmp
pop
push
cmp
ficoml
cmp
sub
ss
adc
pop
int
dec
pop
clc
sub
sbb
pushf
sbb
sbb
aam
insb
pop
cltd
sbb
mov
dec
or
mov
add
add
add
add
popf
aad
or
sbb
test
sbb
pop
pop
sbb
cmp
mov
mov
leave
pop
lea
in
popf
cmp
pop
lods
cmp
pop
mov
cmp
and
cmp
lea
gs
cmp
and
add
add
and
cmp
std
cmp
or
cmp
sub
arpl
or
xchg
pop
mov
xor
push
adc
in
popa
aaa
mov
push
push
aaa
fstl
loope
sbb
sti
pop
std
mov
sbb
rcrl
mov
fwait
pop
mov
add
add
add
fistl
in
sti
sbb
cmpl
sbb
jnp
andl
sbb
shlb
cmp
rcrl
inc
sarb
add
repz
mov
jecxz
loope
or
add
add
add
sbb
arpl
sbb
nop
adc
add
add
push
adc
and
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
js
and
push
add
add
and
js
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
lock
lock
lock
lock
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
jmp
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
push
or
cmp
and
sub
and
sub
and
add
add
add
cmp
and
cmp
and
sub
and
sub
and
clc
or
clc
or
call
or
clc
or
clc
or
call
or
mov
or
test
and
test
and
mov
or
test
and
test
and
js
and
js
and
push
or
js
and
add
add
add
xchg
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
out
add
lock
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
add
add
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
js
and
js
and
push
add
and
js
and
push
add
and
add
add
add
cmp
and
sub
and
cmp
and
sub
and
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
out
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
add
add
add
pop
mov
add
pop
mov
add
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
mov
or
test
and
mov
or
test
and
test
and
js
and
js
and
push
or
js
and
js
and
add
add
add
push
or
cmp
and
cmp
and
sub
and
sub
and
cmp
and
cmp
and
sub
and
sub
and
clc
or
clc
or
call
or
clc
or
clc
or
call
fisubs
add
fisubs
add
fisubs
add
fisubs
add
add
add
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
pop
mov
add
add
add
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
add
add
add
pop
mov
jmp
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
call
add
and
clc
add
and
call
add
and
test
and
test
and
mov
add
and
test
and
js
and
js
and
push
add
add
add
and
js
and
js
and
push
add
and
cmp
and
sub
and
cmp
and
sub
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
add
add
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
pop
mov
add
pop
mov
add
add
add
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
jmp
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
sub
and
cmp
and
cmp
and
sub
and
sub
and
clc
or
clc
or
call
or
clc
or
clc
or
call
or
mov
or
test
and
test
and
mov
or
test
and
test
and
add
add
add
js
and
js
and
push
or
js
and
js
and
push
or
cmp
and
xchg
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
add
add
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
js
and
js
and
push
push
and
cmp
and
cmp
and
sub
and
sub
and
cmp
and
cmp
and
sub
and
sub
and
clc
add
and
call
add
and
clc
add
and
call
add
and
test
and
test
and
mov
add
add
add
add
and
js
and
js
and
xchg
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
add
add
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
add
add
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
mov
or
test
and
js
and
add
add
add
js
and
push
or
js
and
js
and
push
or
cmp
and
cmp
and
sub
and
sub
and
cmp
and
cmp
and
sub
and
sub
and
clc
or
clc
or
call
or
clc
or
clc
or
call
or
mov
or
add
add
add
test
and
xchg
mov
add
mov
add
mov
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
add
scas
add
scas
add
scas
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
add
add
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
jmp
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
call
push
and
mov
push
and
test
and
test
and
mov
push
and
add
add
add
test
and
test
and
js
and
js
and
push
push
and
js
and
js
and
push
push
and
cmp
and
cmp
and
sub
and
sub
and
cmp
and
cmp
and
sub
and
sub
and
clc
add
and
call
add
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
scas
add
add
add
add
scas
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
add
pop
mov
add
pop
mov
add
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
sub
and
clc
or
clc
or
call
or
clc
or
clc
or
call
or
mov
or
test
and
add
add
add
test
and
mov
or
test
and
test
and
js
and
js
and
push
or
js
and
js
and
push
or
cmp
and
cmp
and
sub
and
sub
and
cmp
and
xchg
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
scas
add
scas
add
scas
add
scas
add
pop
mov
add
add
add
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
add
add
add
pop
mov
add
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
cmp
and
cmp
and
sub
and
sub
and
cmp
and
cmp
and
sub
and
sub
and
clc
push
and
clc
push
and
call
push
and
clc
push
and
clc
push
and
call
push
and
add
add
add
mov
push
and
test
and
test
and
mov
push
and
test
and
test
and
js
and
js
and
push
push
and
js
and
js
and
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
scas
add
scas
add
pop
mov
add
pop
mov
add
add
add
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
pop
mov
add
add
add
add
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
js
and
push
or
js
and
js
and
push
or
cmp
and
cmp
and
sub
and
sub
and
cmp
and
cmp
and
sub
and
sub
and
clc
or
clc
or
call
or
clc
or
add
add
add
clc
or
call
or
mov
or
test
and
test
and
mov
or
test
and
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
pop
lcall
aam
imul
cmpsl
icebp
sub
stos
mov
movsb
pop
insb
dec
ror
ja
dec
jno
lods
jo
and
sahf
sub
pusha
mov
cmc
rcll
loopne
mov
cmp
sub
cmp
mov
pop
adc
faddl
jge
or
xor
aad
dec
test
add
add
add
imul
xchg
push
notb
mov
xor
push
and
push
les
and
inc
or
xor
daa
dec
push
mov
bound
adc
daa
clc
test
jg
mov
adc
and
pop
sbb
rcll
push
in
add
dec
mov
fistpl
ja
je
in
xchg
add
cwtl
ljmp
jno
add
add
add
stos
fstpl
stc
xchg
fucomip
hlt
adc
cltd
or
scas
enter
pop
adc
adc
aaa
pop
xchg
jno
scas
test
fisttpl
dec
mov
xor
push
call
sbb
xchg
addb
loop
jg,pt
in
mov
and
cmp
xor
ret
ljmp
pop
xor
fmuls
add
add
add
jno
add
mov
bound
fisubrs
xor
ret
lret
jns
scas
mov
out
std
mov
and
xchg
jbe
in
imul
sbb
in
add
bound
adc
test
pop
jbe
jnp
int
dec
ror
addl
subl
mov
mov
add
add
add
or
les
call
movsb
jo
outsl
sbb
aaa
xchg
stos
popa
rcl
cli
arpl
push
mov
lahf
enter
aad
int3
xlat
mov
movsl
shlb
push
xchg
inc
mov
mov
dec
mov
lea
loop
in
cmp
loope
push
test
add
add
push
pop
ret
jle
outsl
jp
stos
mov
and
incl
ret
aad
int
int3
inc
jle
push
sbb
mov
decl
lods
jo
fs
push
pop
pop
pop
leave
xor
cmp
mov
adc
cld
or
add
pop
xchg
imul
es
push
jb
insb
push
out
add
add
add
les
jne
sahf
inc
mov
loopne
inc
les
test
in
dec
enter
daa
dec
cltd
jle
clc
sbb
mov
jmp
inc
mov
call
pusha
out
push
mov
lock
mov
daa
dec
cltd
jle
cld
dec
fadds
xchg
pop
and
cwtl
jl
hlt
adc
and
fs
pusha
hlt
push
sub
add
add
add
pop
jl
lock
daa
inc
mov
fdivr
add
xchg
inc
and
int3
shll
push
and
adc
pop
test
das
mov
mov
fwait
or
jle
in
sbb
mov
mov
add
add
or
add
add
inc
aam
in
repz
hlt
push
out
aad
int
int3
inc
jl
xor
mov
add
add
scas
rorb
mov
scas
rolb
add
push
sbb
push
sahf
sbb
mov
pop
xchg
inc
inc
and
xchg
and
dec
or
adc
popf
inc
jns
push
add
lahf
push
dec
mov
add
push
rolb
jo
push
mov
push
mov
add
add
adc
lahf
dec
add
ja
add
xlat
sahf
in
lret
aad
int
lds
mov
add
arpl
or
sbb
sarb
lds
mov
mov
pushl
rcll
int3
push
mov
inc
mov
add
add
in
mov
add
inc
and
test
xchg
inc
xchg
subb
lahf
es
xchg
subb
lahf
incl
scas
cmpsb
les
cmp
push
sbb
sbb
ficoms
mov
dec
out
cmpb
xchg
pop
and
mov
and
dec
stos
sahf
dec
popf
icebp
pusha
adc
push
lahf
push
cltd
or
add
add
add
xchg
jne
mov
sti
es
jne
cltd
adc
pop
and
xchg
mov
jecxz
xor
out
push
mov
inc
mov
mov
add
fistl
aad
int
lds
mov
inc
mov
cmpsl
mov
lcall
add
add
mov
push
mov
inc
xchg
pop
and
xchg
mov
cmpsb
rcll
sarb
les
rorb
jge
in
popf
mov
add
pusha
lock
adc
popf
push
sbb
and
cltd
cmpb
add
dec
add
add
add
mov
lahf
dec
jmp
pop
sahf
push
mov
sub
mov
dec
out
inc
cmpb
mov
in
cmp
mov
mov
js
or
mov
mov
add
sub
into
add
push
jns
sbb
mov
cmpsl
cmpsb
js
pop
and
add
and
mov
cmp
es
popf
push
rcll
or
mov
cmp
cmpsl
sahf
push
mov
xor
inc
mov
pusha
or
fwait
mov
mov
inc
addl
adc
push
rol
scas
and
xchg
pop
lahf
inc
jno
dec
adc
add
add
add
cmpsl
cmpsb
cmp
scas
and
xchg
pop
lahf
push
cmp
sub
xorl
xor
mov
mov
add
decl
pop
mov
or
pushf
inc
int
das
mov
sahf
add
cmp
lea
inc
rclb
xchg
sar
mov
inc
lock
push
lds
mov
add
add
add
rorb
rolb
popf
mov
ret
js
js
sar
pop
jge
pop
push
mov
mov
lock
inc
and
pushf
cmpsl
xchg
inc
xchg
jle
clc
mov
jl
clc
rcrl
les
cmp
or
push
sbb
push
out
rorb
add
add
add
lds
mov
add
pop
cmp
pushf
notl
jecxz
fwait
push
xchg
dec
out
lds
mov
sub
inc
and
arpl
fdivrl
sbb
mov
cmc
or
and
sbb
mov
sti
pushf
dec
cmp
or
mov
or
push
inc
adc
int3
add
add
add
cli
ljmp
mov
jl
clc
sbb
and
fnstcw
adc
inc
sub
nop
pop
and
mov
jnp
mov
inc
test
add
shrb
sahf
in
lret
push
aam
int3
dec
aam
int3
inc
aam
int3
les
cmovne
movswl
add
add
add
xchg
inc
out
dec
aam
int3
inc
aam
int3
les
ljmp
xchg
push
mov
push
mov
jne
or
and
icebp
xchg
or
push
inc
xchg
xchg
and
add
test
mov
or
dec
aam
push
das
and
xchg
pop
cmp
popa
or
xchg
cmpsb
js
add
add
add
or
fsubl
lahf
dec
cltd
cmp
adcl
jmp
cmp
mov
mov
fwait
cmpsb
rclb
les
out
sub
mov
dec
mov
je
xchg
pusha
call
gs
push
stc
xchg
adc
push
les
mov
fprem1
testl
add
add
mov
addl
lahf
inc
mov
dec
cmp
cmp
mov
stos
es
xchg
aaa
mov
orl
dec
jns
in
sbb
jmp
xchg
js
ret
scas
loope
dec
movsl
cmpsb
les
pop
test
add
cmp
jmp
mov
or
dec
lock
xchg
pop
pop
or
adc
mov
pop
jne
pop
ret
cmpsb
cmp
add
test
add
das
and
xchg
pop
lahf
push
int
lahf
inc
mov
pop
xor
movsb
js
repnz
xchg
inc
xchg
mov
push
das
and
xchg
pop
lahf
push
xchg
cmp
add
push
add
loop
mov
pop
and
test
fs
or
push
jmp
rcll
push
lahf
dec
xor
cmp
mov
mov
add
add
mov
or
mov
aaa
jbe
push
stos
jae
xchg
fwait
xchg
inc
xchg
ss
adc
lahf
push
icebp
xchg
add
sahf
inc
mov
pusha
fcoms
pop
popf
dec
movsl
js
lock
repnz
inc
xchg
nop
and
inc
dec
and
sbb
xlat
mov
pop
jbe
int3
mov
call
adc
pop
mov
add
add
add
cmpsl
sahf
adc
xchg
cmp
mov
adc
dec
and
movsb
repz
loope
and
or
jne
movsb
adc
xor
int
test
and
stc
or
fiadds
cmp
xchg
inc
and
xchg
call
mov
setge
mov
hlt
loope
and
add
add
add
or
mov
pop
sub
mov
or
dec
and
jns
iret
jmp
out
xor
xchg
inc
xchg
or
scas
xchg
pop
xchg
add
int3
lahf
je
shrl
xchg
inc
xchg
xor
test
push
mov
and
in
inc
out
xchg
rcr
int3
int3
inc
mov
inc
fldl
int3
int3
add
add
add
mov
cmp
or
mov
pop
lahf
xor
ds
outsl
pop
rcl
in
mov
inc
xchg
sub
std
sahf
sar
adc
sbb
mov
add
sti
pop
mov
pop
jbe
in
sahf
in
les
inc
sbb
and
xchg
enter
pop
and
add
add
add
into
dec
fadds
xchg
pop
and
dec
mov
jmp
in
pop
and
xchg
mov
or
and
leave
mov
add
rolb
xchg
sbb
mov
xchg
inc
xchg
pop
and
xchg
lods
sbb
inc
xchg
push
and
xchg
test
or
dec
and
in
jmp
jge
add
add
loop
mov
pop
and
xchg
sub
add
add
movsb
cmpsl
xchg
inc
xchg
fs
mov
pop
lahf
or
or
mov
inc
xchg
mov
xchg
inc
adc
jmp
dec
and
push
or
stc
ret
mov
pop
xchg
add
mov
xchg
inc
xchg
sub
inc
xchg
das
je
push
pop
lahf
adc
inc
scas
movsl
clc
xchg
lahf
cmpsb
les
pop
rcll
add
add
add
xor
xchg
inc
xchg
push
je
and
les
mov
xchg
sahf
dec
inc
cmp
dec
add
adc
inc
and
mov
push
je
insl
lahf
sar
adc
pop
mov
dec
icebp
xchg
js
stos
xor
jae
xchg
push
faddl
cmp
cltd
push
mov
pop
lahf
adc
add
add
add
inc
push
daa
inc
mov
lahf
or
xchg
dec
rclb
jbe
jle
out
or
add
mov
js
or
int3
mov
pusha
loopne
or
mov
pop
popf
dec
xor
and
xchg
pop
mov
adcl
push
or
aam
mov
inc
and
pop
lahf
sahf
adc
add
add
add
pop
add
mov
enter
pop
lahf
adc
xchg
xor
xor
pop
daa
inc
cltd
sbb
inc
popl
add
inc
and
mov
fcomp
mov
fmull
xchg
scas
and
dec
popf
sahf
or
loopne
and
shlb
and
add
xchg
push
add
les
or
xchg
inc
xchg
pop
pop
or
xchg
xchg
inc
xchg
mov
xchg
scas
popf
std
out
sahf
adc
inc
enter
mov
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
add
add
add
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
xchg
pop
and
mov
sahf
jl
adc
push
sbb
in
sub
dec
mov
ret
jne
loopne
xchg
push
push
popa
into
and
stos
jno
test
cmpsb
push
js
mov
jle
loop
and
jno
mov
dec
sti
fdivl
xlat
inc
mov
pop
movsl
push
lock
andl
movsl
cmp
pop
jnp
cmp
sub
push
outsb
mov
rolb
cmc
push
lahf
movsb
dec
stc
negl
mov
xchg
shl
gs
pusha
adc
sbb
es
xchg
jnp
adc
into
popf
sbb
hlt
cmp
pop
in
xchg
daa
mov
test
mov
fdivs
mov
fdivrs
adc
leave
jl
in
jg
enter
ja
mov
cli
in
cltd
scas
dec
xor
xchg
cld
adc
imul
sub
dec
adc
or
ss
mov
jmp
outsl
ljmp
sub
inc
bound
mov
cmpb
mov
fdivrs
inc
push
fiadds
xchg
shlb
movsl
mov
mov
xchg
ret
push
mov
or
icebp
aaa
clc
in
mov
pop
jbe
das
inc
dec
jecxz
pop
incb
outsb
shl
mov
das
jbe
fs
jp,pn
mov
fisubs
xchg
adc
popa
lock
sbb
pop
xchg
xchg
scas
mov
gs
or
dec
sub
test
sbb
mov
fidivrs
cwtl
push
in
repz
push
jp
lea
mov
sti
mov
mov
add
je
enter
lahf
cmp
cmp
mov
ficomps
xor
mov
sar
inc
or
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
mov
mov
mov
shr
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
ret
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
cmpl
je
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
movl
movl
movl
mov
mov
movl
movl
mov
mov
lea
push
push
push
push
push
call
test
jne
push
call
xor
jmp
lea
push
push
push
mov
push
push
call
test
je
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
pusha
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
movl
mov
add
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
xor
mov
movl
movl
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
push
push
inc
dec
pop
inc
jne
jb
outsb
je
outsl
outsb
je
outsl
insb
push
gs
inc
outsl
outsb
je
outsl
insb
pop
inc
outsl
outsb
je
outsb
je
outsb
fs
dec
popa
outsb
addr16
addr16
inc
outsb
insb
imul
add
xor
xor
xor
xor
xor
add
lock
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
add
add
jo
add
gs
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addr16
add
addr16
add
addr16
add
add
add
add
add
add
add
addr16
add
addr16
add
push
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
imul
add
add
add
imul
add
imul
add
push
add
add
add
add
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
imul
sub
add
imul
push
imul
jb
add
add
imul
les
add
imul
add
add
add
insb
add
add
add
add
add
add
insb
add
add
insb
add
add
insb
add
add
insb
add
add
insl
add
add
insl
add
add
add
add
add
add
insl
add
add
insl
add
add
insl
add
add
outsb
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
outsl
add
add
outsl
add
add
outsl
add
add
outsl
add
add
add
add
jo
add
jo
add
add
add
add
add
add
add
add
add
jo
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addr16
add
addr16
add
addr16
add
add
add
add
add
add
add
addr16
add
addr16
add
push
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
imul
add
add
add
imul
add
imul
add
push
add
add
add
add
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
imul
sub
add
imul
push
imul
jb
add
add
imul
les
add
imul
add
add
add
insb
add
add
add
add
add
add
insb
add
add
insb
add
add
insb
add
add
insb
add
add
insl
add
add
insl
add
add
add
add
add
add
insl
add
add
insl
add
add
insl
add
add
outsb
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
outsl
add
add
outsl
add
add
outsl
add
add
outsl
add
add
add
add
jo
add
jo
add
add
add
add
add
add
add
add
add
jo
add
jo
add
add
add
inc
jne
jb
outsb
je
push
dec
add
dec
add
je
jns
je
insl
push
imul
insb
gs
imul
jb
popa
je
inc
imul
jns
add
mov
inc
jb
popa
je
dec
jne
gs
add
test
inc
jne
jb
outsb
je
jb
arpl
jae
ds
outsb
push
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
stos
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
add
je
outsb
fs
inc
imul
gs
imul
gs
add
inc
jb
popa
je
inc
imul
gs
popa
jae
inc
jb
outsl
jb
add
jb
jo
inc
add
out
inc
gs
popa
jae
inc
jb
outsl
jb
add
push
gs
fs
imul
jb
je
inc
imul
je
gs
jo
imul
add
pop
add
je
gs
jo
popa
je
inc
add
mov
insb
jae
jb
outsb
inc
add
xlat
add
je
imul
bound
gs
add
lods
add
jae
jb
insl
jo
inc
add
add
je
imul
sti
add
popa
insb
inc
imul
outsl
inc
imul
rolb
inc
outsl
jae
popa
je
push
imul
insb
gs
imul
jae
jb
popa
je
add
aam
inc
gs
imul
mov
insb
jae
jb
jo
outsb
inc
add
push
gs
outsl
jbe
inc
imul
jns
add
sbb
inc
imul
add
add
outsb
fs
gs
inc
imul
gs
gs
inc
imul
jae
jb
insl
jo
add
sbb
fs
imul
gs
add
xchg
add
jb
je
push
jb
jbe
je
push
jb
imul
imul
add
jo
inc
imul
insb
jne
push
inc
jne
data16
add
and
insb
gs
fs
popa
imul
insb
gs
bound
arpl
add
je
jbe
outsb
je
add
inc
gs
imul
je
add
popa
je
push
push
add
jb
inc
jb
popa
je
inc
jbe
outsb
je
add
sbb
inc
gs
jb
jbe
je
push
jb
imul
imul
add
outsb
jbe
jb
inc
gs
jne
je
outsl
arpl
add
jne
inc
gs
gs
imul
dec
add
je
jns
je
insl
dec
outsb
outsw
add
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jne
jb
outsb
je
imul
jns
add
outsl
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
jb
gs
imul
and
inc
gs
jb
arpl
fs
jae
add
repnz
fs
imul
js
add
add
inc
js
je
jb
arpl
jae
testb
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sbb
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
gs
gs
jae
dec
jne
gs
add
insl
imul
outsl
arpl
jae
add
inc
gs
push
dec
outsb
outsw
add
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
or
ja
jo
imul
add
je
outsb
jne
aad
inc
outsb
fs
popa
imul
push
gs
outsl
arpl
add
lea
inc
fs
outsb
imul
imul
fs
jb
gs
je
imul
insb
add
jo
je
push
popa
addr16
add
aad
push
jb
outsb
jae
popa
je
dec
gs
popa
add
roll
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
gs
gs
popa
addr16
add
add
imul
popa
jae
push
add
aad
dec
outsl
popa
fs
jne
jae
jb
add
add
fs
arpl
push
add
add
jae
popa
addr16
outsl
js
add
push
outsb
fs
gs
popa
addr16
add
repz
outsb
fs
imul
cmpsl
add
je
imul
jae
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
imul
jmp
popa
je
push
imul
cmpsb
add
je
imul
popa
arpl
outsb
je
add
gs
jns
inc
outsl
insb
outsl
jb
push
popa
je
push
imul
push
add
add
imul
imul
inc
outsl
jb
popa
je
add
jge
inc
fs
gs
popa
jae
inc
jb
outsl
jb
addl
fs
popa
insl
gs
gs
imul
inc
fs
jb
popa
je
push
je
imul
insb
gs
add
addl
outsb
imul
push
add
testl
popa
addr16
gs
in
dec
outsl
popa
fs
je
imul
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
inc
gs
jns
je
insl
dec
gs
imul
inc
gs
imul
outsl
arpl
add
add
outsb
dec
gs
jo
add
sbb
insb
push
imul
outsl
arpl
das
add
popa
jb
gs
push
add
inc
insb
imul
je
dec
add
insb
gs
jae
inc
inc
add
add
je
inc
add
arpl
imul
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
inc
fs
outsl
outsb
outsb
arpl
cmp
inc
push
jo
jb
add
mov
ja
arpl
add
push
add
imul
add
lods
add
je
imul
js
push
add
jo
inc
fs
insb
imul
outsb
jae
arpl
outsb
add
addb
fs
gs
je
imul
insb
gs
add
popa
jae
push
imul
add
insb
insb
push
imul
dec
outsb
jbe
insb
imul
je
add
arpl
outsb
jne
je
insl
add
insb
imul
inc
outsl
jb
popa
je
jbe
imul
iret
add
popa
bound
outsb
jne
je
insl
add
test
inc
fs
outsl
jae
inc
fs
jae
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
inc
gs
gs
je
jo
imul
ja
inc
fs
imul
arpl
add
jae
dec
gs
popa
addr16
add
sahf
add
je
imul
add
push
jne
jb
push
je
imul
inc
fs
gs
popa
je
add
and
push
outsl
jae
push
jne
je
gs
popa
add
gs
imul
popa
arpl
outsb
je
add
inc
fs
bound
outsl
outsb
push
jb
outsb
jae
arpl
outsb
add
gs
imul
mov
je
outsl
jns
imul
add
je
imul
outsb
addr16
add
addb
gs
imul
outsb
addr16
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
jno
inc
fs
insl
jo
je
imul
insb
gs
outsl
add
inc
fs
popa
je
add
je
inc
fs
jb
popa
je
inc
popa
je
dec
popa
outsb
fs
add
inc
insb
outsl
jae
inc
insb
imul
add
sgdtl
je
insb
imul
inc
popa
je
add
lar
outsb
inc
insb
imul
add
add
fs
imul
push
inc
push
xor
cs
insb
add
push
add
je
gs
inc
js
outsb
je
outsl
imul
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
popa
je
insb
je
add
gs
push
add
add
je
popa
jo
outsl
fs
inc
inc
dec
xor
cs
insb
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
add
inc
push
inc
outsl
outsb
je
add
dec
inc
dec
inc
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
pop
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jb
popa
je
dec
gs
js
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
js
push
gs
gs
popa
insb
jne
inc
js
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
adc
push
push
bound
je
add
inc
dec
dec
xor
cs
insb
add
add
gs
je
push
outsl
outsl
insb
bound
inc
js
or
inc
jb
popa
je
push
je
je
jae
imul
inc
dec
dec
inc
push
dec
xor
cs
insb
add
add
out
lcall
add
add
add
add
add
addb
add
out
lcall
add
add
add
add
add
addb
add
out
lcall
add
add
or
add
add
pop
addb
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
and
and
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
and
and
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
and
and
cmp
arpl
imul
and
and
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
cmp
jae
arpl
imul
and
and
and
and
je
jne
je
outsb
outsw
ds
and
and
popa
jae
gs
bound
add
add
cmp
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
add
add
aas
xlat
aas
out
aas
hlt
aas
add
add
add
xor
dec
xor
ljmp
xor
and
cmp
inc
ss
lea
mov
ds
mov
xchg
cmpsl
lods
ds
ds
ds
aas
cmp
inc
aas
dec
aas
cmpl
aas
stos
aas
fnstsw
jecxz
add
add
add
add
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
fidivl
pop
xor
xor
xor
xor
xor
xor
adc
and
xor
inc
xor
push
xor
addr16
jns
jg
test
xchg
xor
test
xor
xor
fnstenv
jmp
icebp
xor
add
or
adc
ss
ss
ss
ss
ss
ss
ss
ss
arpl
imul
jnp
xorl
xchg
ss
ss
movsl
ss
ss
mov
mov
ss
ss
loope
out
in
ss
pushl
add
aaa
pop
aaa
sbb
aaa
das
aaa
xor
aaa
inc
aaa
dec
aaa
push
aaa
pop
aaa
pop
aaa
gs
imul
aaa
ja
jge
xorl
aaa
aaa
xchg
aaa
fwait
aaa
mov
aaa
mov
mov
aaa
lret
aaa
shll
xlat
aaa
fnsave
jecxz
jmp
aaa
sti
aaa
add
pop
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
popa
cmp
insl
cmp
jns
jg
test
mov
xchg
cmp
.byte
.byte
cmp
